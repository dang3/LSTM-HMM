xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
aaa
ss
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
cmp
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
cmp
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
ss
xor
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
xor
cmp
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
cmp
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
aaa
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
cmp
xor
xor
xor
xor
xor
ss
aaa
xor
xor
xor
xor
xor
cmp
xor
xor
aaa
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
cmp
xor
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
cmp
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
aaa
aaa
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
aaa
xor
xor
xor
xor
xor
aaa
xor
xor
xor
cmp
xor
xor
xor
xor
aaa
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
shr
jmp
movl
movl
jmp
mov
add
mov
cmpl
jge
shl
lea
add
or
jmp
mov
mov
mov
push
call
mov
xor
mov
movl
jmp
mov
add
mov
cmpl
jge
xor
mov
shr
lea
shr
sub
add
lea
sub
inc
lea
mul
or
sub
xor
jmp
mov
mov
push
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
lea
lea
mov
xor
sub
mov
xor
inc
lea
and
shr
or
jmp
add
add
or
mov
mov
push
call
movl
jmp
mov
add
mov
cmpl
jge
mul
jmp
mov
mov
push
call
inc
lea
inc
dec
or
or
inc
or
and
cmpl
je
mov
shl
mov
shr
xor
mov
xor
add
mov
shr
and
mov
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
xor
sub
sub
xor
xor
xor
mul
mul
shr
mul
lea
mov
dec
shr
mov
sub
xor
lea
xor
jmp
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
jmp
mov
add
mov
mov
shl
mov
shr
xor
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
sub
xor
or
mul
dec
or
lea
lea
shr
lea
xor
mov
lea
lea
xor
shl
jmp
and
or
lea
mov
shl
shr
lea
lea
sub
and
shr
shl
movl
jmp
mov
add
mov
cmpl
jge
add
lea
sub
lea
dec
jmp
mov
xor
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
and
sub
shr
lea
mul
mul
mov
inc
lea
mov
add
mov
add
xor
sub
lea
jmp
movl
jmp
mov
add
mov
cmpl
jge
xor
lea
shr
sub
xor
shl
and
shr
jmp
and
lea
lea
dec
sub
sub
shl
add
xor
mov
lea
xor
shr
xor
dec
mul
lea
sub
movl
jmp
mov
add
mov
cmpl
jge
sub
add
lea
lea
lea
shr
lea
sub
and
lea
lea
add
lea
sub
jmp
movl
jmp
mov
add
mov
cmpl
jge
dec
lea
sub
lea
lea
lea
dec
shl
xor
inc
lea
lea
sub
shl
sub
dec
jmp
mov
add
add
sub
add
shl
or
mov
inc
inc
lea
lea
mov
and
mov
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mul
shr
add
inc
lea
xor
jmp
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
xor
lea
lea
or
sub
shr
lea
and
lea
add
xor
shl
shr
lea
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
mov
cmpl
jbe
movl
xor
jmp
movl
jmp
mov
add
mov
cmpl
jge
add
shl
shr
lea
add
jmp
mov
mov
mov
shr
xor
inc
xor
sub
shl
shr
lea
shl
shr
shr
and
shr
dec
dec
lea
dec
lea
lea
movl
jmp
mov
add
mov
cmpl
jge
or
lea
sub
shr
lea
shr
lea
lea
shl
mul
lea
mov
add
jmp
mov
mov
mov
lea
lea
and
lea
inc
lea
lea
inc
add
lea
lea
lea
lea
mov
and
mov
mov
mov
mov
mov
add
mov
push
push
mov
mov
push
push
call
mov
movl
movl
mov
mov
push
call
movl
movl
movl
movl
mov
mov
push
push
call
or
je
push
push
push
push
call
or
je
movl
jmp
mov
add
mov
mov
mov
cmp
jae
dec
add
lea
lea
lea
add
lea
lea
and
mov
cmpl
jne
and
mov
mov
push
push
push
call
sub
mov
mov
mov
lea
push
call
mov
mov
and
mov
mov
mov
push
call
mov
mov
push
call
add
or
mov
mov
push
call
xor
mov
mov
push
call
or
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
and
and
mov
mov
push
call
mov
add
mov
add
mov
mov
xor
lea
add
add
and
sub
jmp
mov
mov
jmp
mov
add
mov
mov
cmpl
jne
mov
cmpl
jne
jmp
jmp
movl
movl
movl
movl
mov
mov
xor
and
lea
lea
sub
lea
and
shl
mul
sub
shr
shr
lea
add
add
lea
shl
shl
mul
movl
jmp
mov
add
mov
cmpl
jge
add
add
or
lea
and
lea
shl
sub
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
shr
lea
or
lea
lea
lea
mul
add
inc
jmp
movl
jmp
mov
add
mov
mov
add
mov
mov
cmp
jae
xor
shl
shl
lea
shr
dec
shl
or
lea
lea
mul
mov
push
lea
push
call
add
lea
lea
lea
lea
lea
or
dec
shr
sub
mov
lea
lea
shr
lea
mov
lea
movl
jmp
mov
add
mov
cmpl
jge
lea
sub
lea
lea
and
shr
add
lea
inc
shl
add
dec
shl
lea
or
shr
jmp
and
lea
lea
sub
lea
shr
lea
sub
mov
sub
xor
lea
add
sub
mov
jmp
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
xor
mov
div
mov
cmpl
jb
movl
xor
jmp
movl
jmp
mov
add
mov
mov
cmp
jae
lea
lea
lea
dec
inc
lea
and
inc
mov
shr
lea
mul
mov
sub
inc
lea
dec
sub
lea
shr
lea
xor
mov
add
sub
mov
cmpl
jne
mov
add
sub
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
sub
and
jmp
mov
lea
lea
mov
mov
lea
add
mul
shl
and
sub
lea
lea
or
inc
lea
shl
sub
and
mov
add
sub
mov
cmpl
jne
mov
add
sub
mov
mov
mov
mul
lea
shl
lea
xor
or
add
lea
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
sub
add
mov
or
add
mov
lea
sub
and
add
dec
sub
jmp
jmp
mov
mov
lea
push
call
xor
mov
add
sub
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
shr
mov
cmpl
jae
movl
add
jmp
xor
mov
sub
add
mov
mov
sub
add
add
sub
mov
mov
sub
add
sub
mov
mov
sub
mov
movl
movl
mov
cmp
jae
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jge
mov
movzwl
sar
cmp
jne
mov
mov
add
mov
movzwl
and
mov
add
mov
movzwl
and
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
jmp
add
add
mov
mov
push
call
add
and
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
xor
mov
div
mov
cmpl
jbe
movl
add
jmp
movl
mov
add
sub
add
sub
mov
mov
cmpl
je
mov
mov
push
call
sub
or
mov
mov
mov
add
sub
add
sub
push
call
mov
and
mov
add
mov
mov
push
call
cmpl
je
mov
cmpl
je
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cmpl
je
mov
mov
and
je
mov
mov
and
movzwl
push
mov
push
call
mov
mov
mov
mov
jmp
mov
mov
add
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
mov
cmpl
je
movl
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
mov
lea
push
call
xor
add
movl
jmp
mov
add
mov
cmpl
jge
dec
sub
lea
shr
shr
shl
sub
sub
add
shl
shr
shl
or
add
add
shr
jmp
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
shl
mov
add
or
lea
shl
jmp
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
shr
dec
mul
dec
sub
or
xor
shl
lea
xor
and
shl
sub
inc
shl
jmp
movl
jmp
mov
add
mov
cmpl
jge
lea
lea
inc
shl
lea
lea
lea
xor
add
shr
shl
add
jmp
call
movl
jmp
mov
add
mov
cmpl
jge
shr
xor
mov
jmp
pop
pop
pop
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
inc
jmp
push
push
push
call
pop
push
push
call
fldl
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
cs
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
inc
add
das
inc
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
das
inc
add
das
inc
add
xor
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
xor
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
inc
add
xor
hlt
xor
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
mov
sub
mov
push
push
push
xor
push
push
push
push
pushl
mov
lea
push
lea
push
xor
call
mov
add
test
je
mov
mov
mov
jmp
lea
push
lea
push
call
test
pop
pop
jne
cmp
jne
mov
test
jne
cmp
jne
or
mov
mov
mov
sub
pop
mov
mov
mov
mov
mov
mov
pop
pop
call
leave
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
ret
mov
ret
mov
mov
movzwl
and
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
ret
mov
mov
movl
movl
movl
movl
mov
ret
mov
mov
mov
ret
call
call
cmpl
mov
je
call
fnclex
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
mov
push
pop
cltd
idiv
push
pop
sub
or
shl
mov
not
test
je
xor
ret
cmpl
jne
inc
cmp
jl
xor
inc
ret
mov
push
push
push
pop
cltd
idiv
mov
mov
lea
push
push
pop
sub
xor
inc
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
ret
push
mov
push
andl
push
push
push
mov
dec
push
lea
pop
cltd
idiv
push
pop
sub
xor
inc
mov
shl
mov
mov
test
je
lea
push
push
call
test
pop
pop
jne
push
pushl
call
pop
pop
mov
mov
or
mov
shl
push
pop
and
inc
cmp
jge
lea
sub
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
pop
sub
push
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
xor
mov
cmpl
jne
inc
cmp
jl
xor
inc
ret
xor
ret
push
mov
sub
mov
push
push
push
push
pop
cltd
mov
idiv
mov
or
mov
mov
shl
mov
xor
sub
not
mov
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
push
pop
mov
sub
lea
cmp
jl
mov
mov
jmp
andl
dec
sub
test
jge
pop
pop
pop
leave
ret
push
mov
sub
mov
movzwl
push
push
mov
push
mov
and
mov
mov
mov
mov
movzwl
shl
and
sub
cmp
mov
lea
mov
push
jne
xor
call
test
pop
jne
lea
stos
stos
stos
push
pop
jmp
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
xor
lea
stos
stos
stos
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
pushl
jl
xor
lea
stos
stos
stos
orb
lea
push
call
mov
add
pop
xor
pop
inc
jmp
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
mov
andl
xor
mov
push
push
push
mov
and
mov
mov
mov
mov
movzwl
shl
mov
lea
push
and
mov
call
test
pop
pop
je
mov
inc
jmp
mov
cmp
jne
movl
mov
or
mov
mov
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
mov
mov
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
mov
xor
xor
push
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
je
dec
jmp
push
pop
movl
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
movzbl
jle
push
push
call
pop
xor
pop
inc
jmp
mov
movzbl
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
jmp
decl
mov
inc
cmp
je
cmp
movzbl
jle
push
push
call
pop
xor
pop
inc
jmp
mov
movzbl
and
test
je
cmpl
jae
incl
mov
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
movzbl
jle
push
push
call
pop
xor
pop
inc
jmp
mov
movzbl
and
test
je
mov
jmp
cmp
lea
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
jmp
mov
inc
cmp
je
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
je
mov
jmp
cmpl
je
movsbl
sub
lea
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
pop
dec
cmp
jne
jmp
movl
xor
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
mov
inc
jmp
mov
cmpl
mov
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
jmp
decl
incl
dec
cmpb
je
lea
push
pushl
lea
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jg
cmp
jl
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
movl
jmp
xor
mov
mov
xor
movl
jmp
movl
xor
xor
xor
xor
mov
or
pop
mov
mov
mov
mov
mov
mov
pop
pop
call
leave
ret
sbb
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
in
sub
mov
push
mov
xor
push
push
push
pushl
lea
pushl
pushl
push
call
pushl
mov
lea
push
call
add
cmp
jne
or
mov
mov
pop
call
leave
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
movsbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
push
mov
jmp
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
pop
ret
mov
fldl
fcompl
fnstsw
test
jne
xor
inc
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
mov
cmpb
push
push
push
je
mov
mov
xor
test
setg
xor
cmpl
mov
sete
mov
add
mov
call
jmp
mov
pushl
pushl
call
mov
mov
push
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
add
cmpl
mov
jne
movb
inc
test
jle
lea
mov
mov
mov
mov
mov
xor
cmp
push
sete
add
add
push
call
cmpl
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
cltd
push
pop
idiv
add
mov
inc
cmp
jl
cltd
push
pop
idiv
add
mov
add
mov
pop
pop
pop
pop
ret
pushl
movb
pushl
pushl
pushl
call
add
movb
ret
cmpb
push
mov
push
push
push
je
mov
cmp
mov
jne
xor
cmpl
sete
add
add
mov
movb
movb
jmp
mov
pushl
pushl
call
mov
mov
add
push
push
xor
cmpl
sete
add
push
call
add
cmpl
mov
jne
movb
lea
mov
xor
inc
test
jg
mov
call
movb
inc
jmp
add
cmpl
jle
mov
call
mov
mov
mov
inc
test
jge
neg
cmpb
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
pop
pop
pop
mov
pop
ret
pushl
movb
pushl
pushl
call
add
movb
ret
push
mov
push
push
mov
push
pushl
pushl
call
mov
mov
dec
mov
xor
cmpl
push
sete
push
mov
add
mov
push
call
mov
mov
add
dec
cmp
mov
setl
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
mov
push
pushl
movb
push
call
add
jmp
pushl
movb
push
pushl
push
call
add
pop
pop
movb
pop
pop
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
test
jne
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
xor
inc
ret
xor
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
mov
pop
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
mov
mov
add
push
mov
shr
mov
lea
or
mov
mov
shr
shl
or
pop
mov
mov
pop
ret
mov
mov
mov
push
push
mov
mov
shr
shl
or
mov
mov
shl
shr
or
shr
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
mov
mov
cmp
push
push
movl
mov
mov
mov
jbe
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
movsbl
andl
andl
mov
lea
push
push
call
add
incl
decl
jne
xor
cmp
jne
mov
mov
addl
mov
shr
mov
mov
mov
shr
shl
or
shl
cmp
mov
mov
je
mov
mov
jmp
push
call
addl
pop
test
je
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
xor
xor
mov
push
mov
mov
mov
mov
mov
mov
push
mov
mov
and
xor
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
xor
test
jne
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
mov
mov
lea
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
cmpw
pop
jg
cmpw
jg
addl
cmpw
jge
mov
neg
movzwl
add
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
mov
mov
mov
mov
mov
or
mov
jmp
neg
sbb
andl
and
add
andl
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
xor
sub
cmp
mov
je
jge
negl
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
sarl
and
add
cmp
je
lea
lea
cmpw
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
pop
pop
ret
mov
mov
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
add
ret
push
mov
push
push
cmpl
push
mov
push
push
je
cmpl
je
cmp
jbe
xor
mov
inc
cmp
jae
cmp
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
mov
mov
sar
movzbl
testb
je
push
mov
mov
movb
pop
jmp
mov
movb
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
jmp
cmp
jl
cmp
lea
jle
mov
pop
pop
pop
leave
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
sub
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sarl
sarb
jl
add
jl
add
jl
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
jl
add
jl
add
jge
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
jge
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
jle
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
mov
mov
push
mov
test
push
mov
push
lea
movb
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
test
movb
jl
cmpb
jl
jmp
movb
dec
cmpb
je
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
xor
mov
push
push
push
mov
mov
mov
mov
shr
and
and
mov
mov
mov
movzwl
and
test
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
or
mov
shl
test
mov
mov
jne
mov
mov
mov
shl
shr
or
add
add
test
mov
mov
je
mov
or
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
push
call
pop
pop
push
push
push
sub
lea
mov
movsl
movsl
movsw
call
mov
mov
movsbl
mov
movswl
mov
add
movl
mov
call
pop
pop
leave
ret
push
call
pop
ret
push
mov
fninit
call
test
je
mov
testl
je
andl
movl
pop
ret
xor
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
push
movzwl
push
mov
mov
and
push
mov
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
je
cmp
jne
or
jmp
or
test
pop
pop
pop
je
or
ret
xor
test
je
inc
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
push
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
test
pop
je
or
ret
mov
xor
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
ret
push
fstsw
pushl
call
pop
pop
ret
push
fnstsw
fnclex
pushl
call
pop
pop
ret
push
mov
push
push
fstcw
mov
call
mov
mov
not
and
mov
and
or
call
mov
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
jmp
push
push
push
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
sub
mov
mov
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
test
mov
jne
test
jne
cmp
je
cmp
jne
mov
cmp
movw
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
movb
andl
pop
pop
jmp
push
lea
push
call
movb
jmp
movzwl
mov
imul
andw
mov
shr
shr
lea
imul
lea
mov
mov
sar
movswl
neg
push
push
lea
push
mov
mov
call
add
cmpw
jb
lea
push
lea
push
inc
call
pop
pop
testb
mov
mov
je
movswl
add
test
jg
movb
jmp
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
test
lea
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
add
add
incl
decl
mov
movb
jne
mov
dec
mov
dec
cmp
lea
jl
jmp
cmpb
jne
movb
dec
cmp
jae
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
movb
mov
mov
pop
pop
pop
call
leave
ret
cmpb
jne
dec
cmp
jae
cmp
jae
movb
andw
xor
movb
movb
movb
inc
jmp
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
stos
add
inc
stos
add
xor
add
push
stos
add
push
stos
add
stos
add
call
stos
add
shrb
add
stos
add
jp
add
fs
add
jo
add
mov
add
mov
stos
add
mov
stos
add
stos
add
out
add
repnz
add
cld
stos
add
or
add
lods
add
xor
add
dec
lods
add
push
lods
add
pop
lods
add
pop
stos
add
add
add
cmpsb
movsl
add
mov
add
into
movsl
add
fsubl
add
movsl
add
push
cmpsb
add
sub
add
push
cmpsb
add
bound
add
mov
add
mov
add
ret
add
cmpsb
add
fsubl
add
clc
cmpsb
add
or
add
inc
mov
add
mov
add
add
add
add
xchg
movsl
add
ret
add
add
nop
scas
add
test
add
insb
scas
add
pop
scas
add
inc
scas
add
ss
add
sub
add
or
add
fisubrs
add
scas
scas
add
xchg
scas
add
jl
add
pusha
scas
add
dec
scas
add
ss
add
and
add
add
add
fsubrl
add
andb
add
add
dec
movsl
add
movsl
add
movsl
add
sbb
add
in
movsb
add
pop
mov
add
movsb
add
shlb
add
movsb
add
xchg
movsb
add
xchg
add
add
push
movsb
add
inc
movsb
add
xor
add
sub
add
add
repnz
add
mov
add
cmpsb
mov
add
mov
add
je
add
add
add
dec
stos
add
cmp
add
cs
add
push
stos
add
adc
add
push
stos
add
imulb
add
les
add
stos
test
add
mov
add
jo
add
fs
add
dec
test
add
cmpsl
add
push
cmpsl
add
cmpsl
add
js
add
mov
add
movsb
cmpsl
add
mov
add
ret
add
cmpsl
add
in
add
clc
cmpsl
add
push
test
add
test
add
add
xor
add
push
test
add
test
add
jb
add
ds
add
and
add
add
add
out
test
add
test
add
test
add
test
add
add
nop
test
add
add
add
add
push
lods
add
jle
add
subb
add
add
push
lods
add
inc
lods
add
xor
add
push
lods
add
xchg
lods
add
clc
lods
add
call
lods
add
les
add
lods
add
add
add
ret
add
add
add
add
decl
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
ljmp
add
inc
add
add
add
pushl
inc
inc
add
add
add
jmp
dec
inc
add
add
add
lcall
inc
add
xor
xor
lock
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
push
jb
addr16
insl
cmp
add
add
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
pushl
jne
add
add
add
push
ja
add
ja
add
add
add
call
xchg
sbb
call
test
pop
test
jmp
test
in
inc
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
add
add
dec
or
inc
add
add
add
add
lods
insl
add
fsubs
add
add
add
sbb
add
inc
mov
add
add
add
pop
stos
add
hlt
xchg
add
push
mov
add
add
add
push
nop
add
sbb
add
mov
add
push
add
add
add
add
lods
add
sbb
add
stos
add
inc
stos
add
xor
add
push
stos
add
push
stos
add
stos
add
call
stos
add
shrb
add
stos
add
jp
add
fs
add
jo
add
mov
add
mov
stos
add
mov
stos
add
stos
add
out
add
repnz
add
cld
stos
add
or
add
lods
add
xor
add
dec
lods
add
push
lods
add
pop
lods
add
pop
stos
add
add
add
cmpsb
movsl
add
mov
add
into
movsl
add
fsubl
add
movsl
add
push
cmpsb
add
sub
add
push
cmpsb
add
bound
add
mov
add
mov
add
ret
add
cmpsb
add
fsubl
add
clc
cmpsb
add
or
add
inc
mov
add
mov
add
add
add
add
xchg
movsl
add
ret
add
add
nop
scas
add
test
add
insb
scas
add
pop
scas
add
inc
scas
add
ss
add
sub
add
or
add
fisubrs
add
scas
scas
add
xchg
scas
add
jl
add
pusha
scas
add
dec
scas
add
ss
add
and
add
add
add
fsubrl
add
andb
add
add
dec
movsl
add
movsl
add
movsl
add
sbb
add
in
movsb
add
pop
mov
add
movsb
add
shlb
add
movsb
add
xchg
movsb
add
xchg
add
add
push
movsb
add
inc
movsb
add
xor
add
sub
add
add
repnz
add
mov
add
cmpsb
mov
add
mov
add
je
add
add
add
dec
stos
add
cmp
add
cs
add
push
stos
add
adc
add
push
stos
add
imulb
add
les
add
stos
test
add
mov
add
jo
add
fs
add
dec
test
add
cmpsl
add
push
cmpsl
add
cmpsl
add
js
add
mov
add
movsb
cmpsl
add
mov
add
ret
add
cmpsl
add
in
add
clc
cmpsl
add
push
test
add
test
add
add
xor
add
push
test
add
test
add
jb
add
ds
add
and
add
add
add
out
test
add
test
add
test
add
test
add
add
nop
test
add
add
add
add
push
lods
add
jle
add
subb
add
add
push
lods
add
inc
lods
add
xor
add
push
lods
add
xchg
lods
add
clc
lods
add
call
lods
add
les
add
lods
add
add
add
ret
add
add
addl
popa
imul
insb
gs
bound
arpl
add
outsl
bound
dec
outsl
arpl
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsb
fs
inc
imul
outsl
popa
fs
gs
jne
arpl
add
add
je
outsb
push
gs
js
gs
imul
gs
dec
add
gs
je
inc
imul
gs
outsl
arpl
gs
outsb
outsw
push
add
pop
add
je
imul
add
je
jne
jb
outsb
je
push
dec
add
push
add
popa
insb
dec
outsl
arpl
push
add
inc
gs
popa
insb
jne
add
add
je
imul
popa
je
add
cmc
add
je
inc
push
add
sbb
inc
gs
outsl
outsb
jae
insb
gs
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
jb
popa
je
push
imul
inc
gs
jns
je
insl
dec
outsb
outsw
add
dec
gs
jo
jb
add
add
je
imul
popa
je
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
push
add
popa
insb
inc
jb
gs
add
outsb
fs
gs
jne
arpl
add
add
je
jne
jb
outsb
je
imul
jns
add
or
inc
imul
bound
gs
add
in
inc
insb
jne
push
inc
jne
data16
add
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
je
je
dec
popa
outsb
fs
add
aad
inc
gs
imul
je
add
inc
gs
outsl
arpl
push
imul
push
gs
imul
gs
add
push
insb
jae
jb
add
gs
imul
je
je
dec
popa
outsb
fs
add
imul
je
push
push
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
jge
inc
gs
gs
inc
imul
gs
gs
imul
int3
add
outsb
fs
imul
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
gs
je
inc
imul
jns
add
pop
add
je
imul
bound
gs
add
lds
push
gs
insl
gs
push
add
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
mov
inc
gs
je
imul
inc
add
sub
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
inc
add
jp
outsl
push
gs
jne
arpl
add
insb
jae
insb
insb
outsl
arpl
add
add
outsl
bound
push
imul
insb
jae
jb
jo
outsb
push
add
add
outsb
fs
insb
outsl
jae
add
push
imul
insb
insb
outsl
arpl
add
push
jb
arpl
fs
jae
add
dec
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jae
inc
gs
imul
popa
arpl
outsb
je
add
add
jae
push
jne
je
gs
popa
add
jae
imul
jae
popa
addr16
add
add
inc
gs
insb
imul
inc
popa
je
add
sbb
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
gs
imul
arpl
add
inc
push
fldl
dec
gs
popa
addr16
gs
xor
push
arpl
insb
insb
push
imul
mov
inc
jb
ja
outsl
arpl
push
arpl
add
imul
arpl
outsb
add
sbb
push
imul
popa
jae
inc
js
add
repz
je
popa
jo
jne
add
roll
push
imul
outsl
insl
push
outsl
imul
gs
outsl
arpl
add
mov
fs
arpl
push
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
incl
inc
gs
insb
imul
je
push
add
je
outsl
arpl
add
mov
ja
gs
push
add
gs
insb
addr16
je
insl
push
gs
push
add
inc
imul
push
imul
jae
inc
add
je
popa
jo
jne
add
in
dec
gs
popa
addr16
outsl
js
add
add
insb
insb
push
arpl
sub
inc
push
ja
jb
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
push
add
gs
je
inc
imul
jb
insl
push
add
outsl
add
je
imul
outsb
addr16
add
sub
inc
gs
outsb
jne
or
inc
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
inc
jne
jae
jb
add
outsl
outsl
insl
gs
sub
push
gs
gs
jae
inc
inc
add
fs
imul
add
je
jne
jae
jb
cmp
inc
gs
gs
popa
addr16
add
push
gs
popa
jb
je
outsl
jae
or
inc
gs
jne
jae
jb
outsl
jae
add
inc
gs
jns
inc
outsl
insb
outsl
jb
aaa
add
popa
jb
jo
gs
add
jmp
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
adc
inc
gs
insb
addr16
je
insl
push
gs
push
add
inc
jne
jae
jb
add
jb
ja
imul
xchg
add
je
outsl
jns
outsb
jne
lahf
add
jae
imul
jae
dec
gs
popa
addr16
add
mov
ja
outsb
jne
popa
jb
nop
add
jae
jb
dec
outsb
jne
add
add
imul
push
add
inc
push
xor
cs
insb
add
inc
add
gs
je
push
popa
je
gs
inc
jb
jae
add
inc
add
je
imul
addr16
js
add
imul
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
movsl
add
je
je
arpl
bound
arpl
inc
add
gs
je
dec
popa
je
push
push
inc
fs
outsl
outsb
je
gs
jne
arpl
add
cmp
popa
je
inc
outsl
outsb
je
outsb
imul
sbb
push
gs
jb
jae
dec
jb
inc
js
popl
inc
gs
gs
dec
bound
arpl
lret
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
push
gs
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
push
outsb
add
add
je
insb
je
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
jbe
push
outsl
inc
js
add
add
arpl
insb
add
push
popa
add
gs
bound
arpl
add
add
jae
outsl
jb
inc
inc
add
add
je
gs
inc
insb
imul
inc
jb
popa
je
inc
imul
add
popa
jb
inc
outsl
arpl
lahf
add
je
dec
push
xor
fiadds
inc
js
push
gs
dec
jne
push
add
je
inc
inc
add
imul
gs
gs
arpl
popa
jo
add
inc
imul
outsl
jb
add
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
gs
outsl
add
xor
push
dec
push
xor
xchg
add
fs
outsl
arpl
add
dec
xor
cs
insb
add
fs
gs
inc
add
inc
gs
popa
jbe
inc
imul
add
or
inc
gs
popa
jbe
inc
imul
add
add
inc
push
inc
outsl
insb
outsl
jb
add
add
inc
push
inc
outsl
outsb
je
add
add
je
jo
outsb
inc
imul
add
lldt
addr16
gs
jo
insb
addr16
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
je
imul
inc
add
add
imul
add
add
je
imul
push
add
add
je
jo
outsb
inc
imul
add
adc
push
gs
popa
arpl
gs
inc
add
adc
push
jb
outsb
je
insb
addr16
add
insb
popa
arpl
gs
push
add
add
inc
push
inc
outsl
insb
outsl
jb
add
push
add
outsb
fs
gs
push
add
insl
fs
xor
cs
insb
add
sub
push
je
dec
jo
outsb
inc
jae
outsb
arpl
imul
inc
imul
jns
gs
inc
add
imul
push
je
add
xor
cs
insb
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
js
je
jb
arpl
jae
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
popa
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
inc
gs
je
imul
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
popa
jo
insb
insb
outsl
arpl
sub
dec
jae
popa
fs
jb
je
push
je
add
add
insb
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
xchg
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
outsl
arpl
gs
outsb
outsw
inc
add
jns
push
imul
jb
je
arpl
adc
dec
gs
jo
imul
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
.byte
outsb
addr16
add
add
adc
add
pop
inc
add
inc
add
cwtl
jns
add
add
add
add
inc
add
adc
add
add
add
add
add
roll
dec
add
add
add
add
add
add
add
add
add
insb
add
sbb
add
add
cli
add
inc
add
jb
testl
stos
add
into
add
sahf
add
add
cltd
add
add
add
add
add
cmp
fwait
add
xchg
hlt
add
jbe
enter
arpl
xchg
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
flds
scas
add
add
add
add
add
add
add
add
inc
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
mov
add
add
pop
add
add
add
sti
add
outsl
add
add
add
add
add
add
add
out
mov
add
add
add
add
add
add
sbb
out
in
add
add
add
add
add
add
add
mov
rolb
add
add
add
in
add
add
add
mov
ljmp
add
add
add
push
add
add
add
aam
adc
das
add
add
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
aas
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
adc
mov
in
add
mov
aaa
add
add
add
add
add
add
add
add
add
push
lock
add
add
add
jmp
add
sti
add
add
xchg
add
add
addb
add
dec
add
add
add
xor
out
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
loopne
movb
add
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
add
fildl
jge
add
add
add
add
mov
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
addb
add
add
add
add
add
loope
bound
jne
in
adc
add
add
add
loopne
test
add
add
add
add
add
roll
pop
add
add
add
add
add
add
add
add
add
popl
cmp
int3
add
add
add
add
cmp
push
add
add
add
add
stc
add
add
add
add
jp
scas
add
push
add
add
add
add
dec
add
add
add
add
add
ret
add
add
add
test
js
add
fwait
add
add
add
add
add
movsl
add
add
add
add
dec
add
mov
add
add
add
add
or
push
add
cli
add
pushf
add
add
sbb
add
add
add
add
or
enter
jecxz
pop
add
add
pop
add
add
pusha
add
add
add
add
add
add
add
add
add
lods
add
add
jae
cltd
add
add
add
add
add
mov
add
out
add
dec
add
cmp
lea
mov
add
add
add
add
add
add
add
add
add
add
add
roll
add
add
inc
add
pop
add
add
add
add
add
add
add
add
push
add
xor
popf
add
cltd
add
add
add
add
jg
rolb
pop
add
add
imul
test
add
add
add
mov
movl
jnp
xchg
inc
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
inc
add
add
mov
add
add
pop
add
add
add
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
cltd
add
xchg
aam
and
add
cmp
test
loopne
pop
add
add
add
add
add
movsb
add
add
add
add
add
xor
fiaddl
push
add
add
cli
add
add
dec
add
add
add
add
add
add
bound
dec
add
add
add
add
add
les
iret
add
add
dec
add
add
sub
dec
add
add
add
adc
add
add
add
add
add
cmpsb
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
add
out
mov
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
jl
pop
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
push
add
add
lret
add
in
add
out
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
jnp
add
pop
add
dec
add
cltd
add
add
add
scas
add
into
add
add
inc
add
add
jbe
add
roll
inc
add
add
or
add
add
test
popa
add
add
add
add
call
add
add
add
mov
in
addb
add
int3
add
add
push
add
add
add
add
testb
add
lret
add
add
add
sub
add
add
add
add
add
jb
adc
ret
add
add
add
sbb
jecxz
scas
add
add
add
add
xor
outsl
add
add
fldl
addb
add
outsb
add
add
add
lds
jbe
pushf
add
add
push
add
add
add
movb
add
add
mov
movl
push
add
add
lock
bound
inc
add
pop
add
add
add
add
add
add
add
add
add
popl
das
add
push
add
add
add
leave
add
add
filds
push
add
add
add
and
jmp
mov
add
add
add
add
add
add
js
out
lcall
add
add
add
add
add
add
add
add
add
test
cmpsl
add
add
add
push
add
add
add
add
filds
mov
cmc
add
add
xchg
add
add
adc
push
add
add
mov
add
add
add
inc
add
imul
add
add
add
add
movl
mov
add
add
add
add
add
and
add
add
add
mov
incl
jle
incl
mov
add
iret
add
add
add
add
dec
add
add
add
add
add
fs
add
in
push
xchg
cld
xor
pop
xor
iret
and
std
cmc
cmp
cmpsb
aam
and
and
mov
xchg
pop
in
enter
dec
mov
dec
imul
mov
xchg
cwtl
jne
or
mov
into
jno
sub
gs
lds
xor
movsb
lock
mov
adc
push
test
leave
xchg
lods
movsb
pop
or
fiadds
movsb
xchg
xchg
repnz
pop
jns
fstl
in
lahf
pop
xor
inc
mov
push
mov
add
cmp
sahf
hlt
xor
pop
jg
cs
das
mov
sbb
push
xor
mov
sub
mov
test
xchg
pushf
cmc
and
dec
cmpb
push
out
cs
xor
lret
and
mov
sub
jl
pop
and
xchg
scas
sub
cmp
cs
inc
sub
das
xor
sub
std
bnd
mov
rorl
mov
imulb
inc
jp
lahf
mov
ficoms
and
jno
dec
xor
add
imul
addr16
push
cmpl
adc
enter
or
cmc
lock
mov
jp
adc
mov
scas
adc
or
jmp
bound
xchg
push
mov
stc
mov
push
push
div
pop
mov
test
adc
jmp
lahf
mov
adc
xchg
mov
jmp
arpl
insb
add
sbb
mov
test
or
mov
jge
adc
addr16
mov
pop
adc
sub
inc
bound
mov
add
cld
pop
cwtl
pusha
add
jl
jmp
out
aaa
cmp
xchg
test
scas
scas
cld
inc
push
call
sub
sbb
inc
pop
dec
movsl
insl
lock
mov
outsl
inc
fwait
mov
in
insl
lcall
dec
xchg
clc
mov
pop
in
jecxz
pop
xchg
pop
push
jge
mov
push
int3
and
mov
adc
and
push
fistpll
or
out
xchg
mov
and
adc
jmp
in
jl
test
ds
xchg
and
test
dec
das
mov
stos
mov
lds
mov
push
loope
sbb
movl
ficomps
sbb
mov
push
pop
mov
jl
or
das
push
jns
aam
sub
add
imul
loop
cli
push
dec
push
fistl
lds
stos
push
movsl
sub
jp
es
adcb
jecxz
fists
loope
push
cmpsb
jl
cli
icebp
fists
lea
and
add
es
mov
jle
popf
icebp
lret
add
mov
outsb
and
rcrb
xchg
bound
xor
xor
test
and
adc
xchg
pusha
dec
icebp
leave
repz
cmp
fidivrs
ljmp
sbb
xor
push
fldcw
int3
or
cmp
mov
inc
mov
rorb
mov
rcrl
call
mov
out
imul
fdivrs
aas
fisubs
push
and
inc
mov
vmread
sub
and
cmp
stos
xorb
rcl
xchg
fs
sbb
inc
mov
xor
cmp
xor
cmpsb
imul
adc
add
shl
push
movsb
push
int3
inc
sub
test
ss
movsl
add
sbb
jb
in
aam
mov
jmp
ret
in
mov
jns
jmp
pop
inc
xchg
push
popa
and
neg
adc
dec
cs
or
popf
out
push
xchg
cmp
and
jo
jle
jl
icebp
xchg
or
adc
movb
xchg
lds
es
xchg
and
ret
js
fcmovnu
in
mov
imul
int
mov
fnstenv
cmp
sub
sbb
xchg
sti
fucomip
and
sub
mov
shl
sbb
popa
push
add
lret
out
ss
push
in
jbe
sarb
mov
movsl
bound
out
add
or
out
sub
out
and
sti
mov
mov
test
mov
movsb
insb
push
pop
dec
out
popa
sahf
jl
and
into
and
xchg
jecxz
adc
cli
dec
cld
cmc
mov
push
lods
std
test
into
jns
push
mov
stos
or
mov
xlat
or
cli
rcr
inc
sub
sbb
imul
pusha
cmp
movsl
scas
xchg
leave
fstpt
cmp
push
push
sar
gs
sbb
cmpsl
sub
xlat
lret
sbb
xor
mov
pop
dec
mov
out
cld
pop
fimull
mov
dec
sub
test
mov
mov
mov
add
and
push
add
mov
pop
aam
addl
cmp
mov
push
outsb
lcall
and
xchg
xchg
pop
aad
mov
lods
lods
sub
imul
pop
inc
repnz
add
pushf
jg
mov
out
mull
imul
mov
dec
in
mov
pop
sub
sbb
shl
daa
cmp
roll
imul
cmp
test
inc
mov
pop
test
push
pop
loope
mov
pop
psubusb
add
cs
shrb
jl
lcall
lret
test
in
adcb
push
addr16
mov
std
and
jnp
add
and
aas
inc
cmpsl
into
or
xchg
push
sti
add
xor
cmc
mov
movl
dec
loope
pop
and
mov
hlt
push
into
inc
mov
add
mov
xor
cs
sub
lcall
sahf
hlt
in
test
dec
sbb
or
mov
mov
add
xor
or
icebp
mov
fistpl
into
mov
cmp
adc
ljmp
jno
inc
jmpw
pop
repnz
dec
aas
in
popa
loop
add
pop
lret
sbb
repnz
cmpsb
lret
push
jae
or
pop
cld
and
test
add
sarl
cmc
loop
cltd
test
sbb
adc
leave
movb
cli
ret
lcall
movsl
mov
enter
mov
pop
and
push
clc
mov
pop
lds
fmuls
loope
das
xchg
add
inc
push
dec
in
push
mov
xor
fimuls
cmp
inc
or
or
dec
pop
into
jb
in
in
jecxz
dec
push
mov
push
lahf
or
push
in
jmp
test
xchg
icebp
xchg
add
lea
or
aam
dec
mov
nop
jl
mov
or
mov
push
xchg
ficompl
or
sti
cs
and
xor
lods
dec
dec
icebp
or
cld
xchg
add
push
push
insl
adc
pop
mov
ret
je
xorl
pop
cmc
ror
mov
out
xchg
mov
mov
dec
jge
imul
adc
adc
sar
aaa
arpl
xchg
cld
cmc
push
shlb
das
jo
push
add
mov
cmovae
sbb
pop
sti
scas
dec
pusha
or
lock
cmp
push
and
ljmp
popf
inc
adc
ja
and
adc
sbbb
pop
repnz
cmp
div
adc
ficoml
or
mov
cmpsl
shll
mov
inc
jno
jb
pop
add
shrl
aas
pop
iret
arpl
xor
scas
rorb
sbb
outsl
and
out
in
js
dec
jno
pusha
xchg
xchg
enter
fld1
add
and
jo
aam
pop
sub
push
call
xor
mov
add
in
mov
and
loope
or
out
int3
pop
sub
push
pop
jne
xchg
out
mov
ficomps
rcrb
insb
enter
cld
or
int
daa
sbb
mov
lcall
push
scas
lods
shll
test
or
insb
das
inc
sahf
xor
push
push
pushf
in
ja
and
sbb
jns
adc
fstps
fistps
movsb
out
or
les
add
cmp
and
jns
out
inc
in
cmpsb
testb
xor
xchg
jns
mov
aas
mov
lea
sub
loopne
in
mov
sbb
inc
mov
insl
in
push
mov
ss
sub
xchg
cmp
add
mov
xor
nop
cmp
js
in
or
jp
cld
je
imul
pop
sub
cmp
rcll
cld
or
ds
dec
pop
pop
fs
or
xchg
pop
mov
cwtl
or
jo
and
jge,pn
inc
popa
fsubl
xlat
out
cmp
lds
into
in
popa
mov
jmp
hlt
mov
mov
aaa
mov
in
sti
adcb
loopne
mov
add
rorb
inc
test
jb
out
pushf
or
popf
sub
stos
mov
or
mov
push
and
sar
jle
and
movsl
jb
mov
movsb
jmp
adc
pop
xchg
xorb
dec
and
pop
mov
pop
dec
inc
push
xlat
ret
movl
pusha
cmp
sbb
and
and
stc
sbb
add
nop
ret
aaa
pop
or
stos
and
inc
jp,pn
jbe
cmp
lods
test
rep
fnstcw
int3
ljmp
mov
lret
mov
cwtl
movsb
or
dec
pushl
lret
lcall
enter
mov
add
mov
xchg
sub
aam
scas
fs
xor
mov
cmc
in
xchg
movsb
cltd
in
loope
sarb
aad
pop
add
lods
or
sub
push
push
sub
jl
sbb
sub
js
test
outsl
lret
rorl
jmp
test
dec
xchg
or
pushf
and
adc
push
cmp
out
mov
sub
in
incl
insb
jp
mov
cwtl
push
xchg
fldenv
fldt
dec
xor
daa
sub
daa
mov
xchg
fdivl
cli
or
cs
iret
int
pop
mov
push
es
pop
inc
pop
pop
scas
mov
out
push
into
pop
push
addr16
adc
outsb
jne
inc
push
jo
inc
xchg
jl
inc
sub
fisubrs
sbb
cmp
push
fldl
movsb
and
aaa
dec
out
roll
push
adc
hlt
cmp
push
sub
sbb
mov
add
inc
and
std
lret
cli
jle
ffree
lahf
dec
aas
int
lret
mov
pop
pop
or
inc
pop
mov
jmp
andl
fildll
or
adc
aaa
lods
bound
in
addb
mul
adc
hlt
or
xchg
inc
divl
out
leave
jmp
loop
mov
adc
sub
nop
outsb
pop
xor
xchg
clc
cli
cmpb
jl
dec
cmp
mov
insb
cmp
and
dec
xor
das
orb
pop
mov
nop
mov
aaa
ret
addr16
cmp
xchg
nop
push
sbb
cmpsb
es
testb
add
or
sti
stos
push
sarb
sub
push
jb
fldcw
cli
js
inc
mov
adc
icebp
or
pop
out
dec
into
cld
cmp
add
and
xlat
jg
sbb
xchg
filds
je
daa
push
les
mov
inc
or
cmp
js
and
mov
push
fnstcw
cmpsb
in
hlt
aas
mov
shl
pop
and
push
push
ss
cmpsl
or
cmp
dec
icebp
inc
gs
inc
mov
loope
insl
call
pop
lods
ret
push
mov
push
js
loop
sub
ds
sbb
ret
scas
cmpsl
loopne
dec
and
jbe
enter
bound
outsb
loop
dec
call
les
les
loopne
xchg
dec
xorb
cmpsl
pop
push
decb
dec
shll
mov
or
addb
call
adc
sub
lahf
jmp
iret
sbb
inc
and
lods
add
jmp
ja
aad
repnz
repz
sub
pop
inc
testl
jo
test
mov
leave
es
repz
dec
pushl
mov
fnstenv
in
rcrb
mov
mov
popa
notl
jl
jne
inc
sub
pop
aam
push
xchg
cmp
aad
mov
jmp
adcb
shl
push
sub
mov
xchg
mov
addl
mov
test
shlb
repz
inc
scas
xlat
loop
leave
pushw
sub
mov
jb
inc
jnp
dec
rorl
ss
int
lea
xchg
data16
sub
push
sbb
dec
push
loop,pn
pop
loop
sbb
test
xchg
push
mov
or
dec
je
cwtl
pop
adc
push
cmpb
rclb
cmp
xchg
pusha
outsb
stos
icebp
rcll
xchg
fs
scas
movsb
mov
lret
in
push
sub
loopne
add
jnp
into
stos
xor
adc
icebp
negl
sub
testl
stc
jp
adc
push
ss
ds
jns
xchg
data16
fbld
adcl
aad
xchg
mov
fcmovb
cmp
jo
arpl
jo
rcr
or
test
mov
xchg
sub
xchg
xchg
xor
sbb
out
shll
jb
lahf
lods
pop
mov
pusha
add
cmp
mov
push
mov
or
scas
aad
sub
push
mov
cmp
ja
pop
lahf
iret
pop
imul
sbb
fcompl
mov
jp
jne
xchg
arpl
mov
insl
adc
ljmp
hlt
shl
push
inc
and
test
enter
mov
dec
push
idiv
popf
jnp
mov
cmp
bound
push
movsb
bound
or
outsl
xchg
adc
lret
insb
or
push
mov
pop
in
xlat
popa
jo
out
shrb
mov
cmp
pop
and
add
mull
xlat
pop
jecxz
pop
and
mov
or
mov
ljmp
add
je
loope
jne
cmp
cmc
movsl
add
xchg
jno
sbb
mov
mov
sub
inc
jnp
fiaddl
sbb
lds
hlt
jle
das
cwtl
scas
pop
cmpsb
add
sub
pop
mov
cmp
cld
les
imulb
jecxz
jno
insl
mov
stos
es
pop
adc
or
push
sahf
add
adc
pop
inc
fsubl
mov
out
mov
mov
xor
jmp
out
or
fs
orb
xor
sub
das
stos
jp
mov
lahf
adc
xchg
inc
testl
jb
mov
mov
cmp
fisubl
mov
sbb
test
add
cmpsl
xchg
mov
stos
into
sahf
mov
scas
into
fdivl
push
popf
mov
jo
dec
lock
in
or
dec
pop
mov
lods
fwait
cmp
fstl
mov
mov
pop
dec
lcall
lret
dec
lds
gs
in
mov
or
cwtl
pop
mov
out
xchg
pusha
adc
outsl
xchg
cmp
hlt
or
sub
inc
xchg
out
rolb
in
aaa
inc
pop
mov
dec
aas
outsb
adc
push
inc
lret
mov
and
mov
rcrb
inc
adc
ds
daa
sbb
mov
or
fistpl
pop
cmc
pop
or
aas
ret
pop
out
fcmovb
mov
inc
mov
xor
cmp
jg
clc
pop
cmc
push
or
jno
cmc
sbbl
ret
mov
jecxz
aad
fcomp
add
fisubrs
mov
stc
out
loope
lahf
out
lods
addr16
or
adc
in
insl
outsl
or
test
pop
fs
adc
cltd
loop
xor
mov
ficoml
and
cmc
sbb
jbe
mov
cli
lea
mov
in
aad
xlat
aaa
adc
lret
cwtl
mov
mov
mov
imul
and
popf
jae
cld
and
jge
sbb
sub
cli
or
add
xor
cmp
push
testl
stos
sub
mov
pop
dec
xor
ret
dec
decl
icebp
push
mov
or
jo
sub
dec
push
xchg
jge
sti
mov
mov
cwtl
pop
fcmovnu
jecxz
mov
pop
ret
mov
leave
lea
or
movsl
rcrb
push
sub
or
jne
addr16
incb
pop
sub
iret
inc
jle
je
pop
addb
jmp
and
xchg
dec
push
push
fnstenv
mov
leave
mov
push
add
in
and
repz
dec
andb
popf
faddl
xchg
push
imul
pop
jl
sti
xor
mov
jge
or
or
mov
jbe,pn
cwtl
cmp
adc
lods
xchg
out
xchg
sbb
int
or
in
lods
pusha
fdiv
pushl
inc
mov
jne
inc
pusha
popf
jno
inc
dec
outsb
cli
roll
adc
test
ret
test
push
negb
stos
sti
es
pop
adc
push
shl
or
fsubr
out
push
cmpsb
repnz
ret
add
and
je
jle
dec
inc
push
outsl
jecxz
stos
xchg
es
xchg
test
test
sub
mov
cmp
arpl
ljmp
loopne
test
sub
imul
es
cmp
xchg
leave
cmpsl
das
imul
insl
mov
pop
stc
adc
jmp
jns
or
es
sub
jo
lds
sbb
outsl
xor
cli
js
movsl
mov
mov
xchg
inc
test
inc
xor
pop
jae
inc
pop
and
sbbb
add
inc
rcll
pop
pushf
push
rcll
test
cwtl
lds
scas
dec
push
popa
or
into
pop
cmpsl
add
push
mov
ds
mov
outsb
mov
lret
ret
lret
sbbb
add
jecxz
jae
xor
cmpb
cmp
sub
xor
xlat
jg
imull
pop
aam
test
popf
into
jbe
inc
sbb
cmp
shr
jecxz
mov
mov
dec
mov
or
rcl
test
stos
fdivr
mov
add
cmc
addr16
mov
pop
xchg
int3
into
jne
fs
push
or
js
jecxz
and
dec
cli
lret
jle
pop
adc
pop
push
dec
fisubrl
add
push
pop
inc
cmp
sbb
mov
int
das
lea
stos
inc
xchg
mov
adc
dec
add
aas
inc
outsb
test
daa
xchg
add
sub
shll
xor
cmp
push
mov
fdiv
push
sbb
jns
jg
xor
stos
mov
in
loopne
push
in
mov
int3
loope
roll
imul
jg
aam
in
sbb
inc
out
inc
fld
pop
cmpsl
shl
xor
and
aam
jge
es
jnp
xchg
fst
jp
or
dec
mov
test
push
push
dec
inc
pop
sub
negb
sbb
ss
test
cmpsl
mov
lods
adc
push
out
dec
sbb
mov
insb
cs
int
lock
adc
sahf
jnp
cmp
fldenv
pop
rcrb
or
fs
cmp
out
jne
xor
aad
cs
mov
inc
in
mov
adc
jae
add
cs
out
cltd
push
lds
and
dec
mov
js
sub
testb
sbb
jbe
lods
push
test
stc
aaa
add
push
push
subl
ret
cmp
scas
test
adc
std
push
dec
add
bound
mov
mov
movsl
test
lock
mov
xlat
rorb
lods
lds
jl
push
push
mov
dec
mov
pop
aas
push
xlat
inc
xchg
in
xchg
ss
or
movsb
arpl
xor
fildll
loope
sahf
sub
lret
and
inc
cmp
out
cmp
lret
sub
cs
aam
jbe
and
mov
in
pop
insb
pop
bound
xchg
shufps
jle
add
xchg
in
scas
sub
mulb
sbb
les
and
mov
dec
xchg
cld
push
lahf
enter
inc
sub
mov
cmp
idivb
mov
cmp
dec
sar
out
cmpl
xchg
xlat
arpl
cmpsb
testl
sbb
dec
and
leave
andl
jbe
cmpsl
ja
out
jnp
sbb
lea
xor
lods
repz
ds
pusha
sub
fwait
mov
call
push
dec
add
loopne
in
adc
aas
and
sahf
mov
cwtl
mov
stos
shll
icebp
xchg
jge
push
inc
hlt
mov
xorl
leave
out
lea
mov
shl
sub
xchg
xor
inc
cmp
imul
fnstsw
sar
lret
mov
daa
xchg
cmp
pop
xor
stos
mov
stos
add
jno
setbe
mov
push
pop
gs
add
out
add
pop
jne
je
or
es
in
pushf
xchg
into
out
sub
adc
or
mov
sar
jb
scas
dec
cmp
inc
out
add
daa
data16
popa
icebp
adc
adc
jb
adc
adc
ss
jecxz
shl
xchg
and
sahf
xchg
lahf
or
inc
fdivl
sub
cmp
in
sub
insl
loop
test
inc
stc
je
iret
push
mov
movsb
arpl
js
clc
mov
mov
cmp
cmp
shll
dec
mov
xchg
adc
push
cmp
cmpl
orl
dec
cwtl
lea
add
rolb
enter
mov
jmp
outsl
in
int
lahf
jae
dec
push
loope
cmpsb
fnstenv
xor
mov
xchg
xchg
out
mov
addb
adcl
push
mov
push
cmpsl
or
jp
sahf
dec
mov
xor
sub
sub
int
ret
xchg
xchg
cli
cmp
ss
nop
xchg
and
out
mov
pop
mov
test
lret
add
pushf
cmpsl
mov
sbb
aad
xlat
nop
mov
mov
xor
lods
sub
and
xorl
ffree
loop
rcrb
xchg
insl
insl
jmp
out
jmp
fdivr
mov
imul
aas
rorb
mov
sbb
sbb
rclb
in
cltd
aas
and
push
jne
lahf
jmp
sbb
movsb
mov
insb
add
and
imulb
cmp
xor
mov
lock
cmp
sub
adc
fsub
mov
bound
mov
ljmp
loopne
xor
push
aam
lret
clc
push
ds
sbb
mov
mov
setg
lret
addr16
les
fwait
push
sbb
push
dec
or
inc
insl
push
mov
imul
sbb
add
xchg
es
pop
pusha
pop
test
sub
out
arpl
push
call
inc
xor
and
pop
ret
mov
test
and
repz
jns
lods
jno
add
xor
inc
push
stos
cmp
lock
out
xor
jno
test
mov
ret
pop
pop
cmpsl
xor
jle
mov
sbb
cmpsb
mov
clc
mov
push
cld
mov
shll
dec
out
push
sbb
jmp
sbb
shrb
pop
je
cmp
adc
inc
test
pop
stos
mov
scas
push
add
out
ja
sbb
rcl
pop
int3
stos
ljmp
cld
clc
mov
es
or
mov
ja
cltd
shrb
sbb
loopne
xchg
cmp
mov
sub
ja
sbb
ficomps
into
enter
push
insb
jle
je
jmp
xor
pop
dec
jg
call
jb
scas
push
pop
or
push
je
lahf
daa
sub
sub
sub
xchg
mov
int
mov
stos
xchg
mov
jae
sbb
sub
fcomps
xchg
push
roll
mov
sbb
inc
mov
icebp
sbb
pop
outsl
push
sbb
stc
add
psubusw
jbe
out
aas
outsb
repnz
andl
or
xchg
cmc
dec
sub
lea
aam
fmuls
pop
daa
dec
jno
icebp
xlat
pop
in
ja
xchg
aad
fldl
mov
xchg
ret
ds
ljmp
loopne
clc
adc
mov
inc
sbb
les
insb
je
in
or
xor
mov
aad
out
lea
xchg
cmp
lret
out
xor
sub
cmp
rcll
pop
push
or
mov
outsl
add
dec
add
xor
insb
dec
cmp
lea
mov
inc
inc
and
push
shlb
push
cmc
add
dec
and
xchg
movsb
sub
icebp
out
sub
mov
dec
into
loope
cmpb
data16
inc
inc
and
test
mov
gs
and
dec
imul
sbb
cmp
stos
mov
test
aad
pop
repnz
mov
push
aas
enter
mov
adc
or
popa
into
fistps
cmp
stc
mov
or
gs
pop
scas
sbb
mov
sub
inc
imul
sbb
adc
jnp
lcall
enter
jg
call
rcr
add
mov
mov
fdivrl
mov
sub
lock
jp
jecxz
aad
or
mov
les
jp
sbb
add
jl
jmp
sbb
pop
sti
lods
pop
add
mov
and
ret
leave
inc
in
jecxz
pop
les
push
leave
xchg
or
adc
jne
mov
iret
fsts
push
xor
jp
inc
cmp
dec
mov
push
int3
cmpsb
mov
adc
lods
xchg
mov
xor
fnstsw
pop
in
and
add
addb
imul
les
mov
mov
pop
mov
shrb
xchg
bound
jmp
std
lcall
decl
jae
rclb
and
adc
push
loopne
xchg
loopne
mov
adc
divb
test
int
push
cmp
or
andb
and
jns
mov
dec
add
cmc
pop
sub
lea
pop
bswap
push
xchg
sbb
pop
jns
arpl
add
xchg
sti
jg
stos
mov
fstpt
add
jl
arpl
scas
in
test
repnz
fucomp
mov
xor
enter
fiadds
lret
xchg
push
repz
test
lret
dec
mov
jge
subl
push
repnz
js
test
push
fsub
loopne
popf
scas
or
insb
sbb
pop
je
loope
movsl
xor
fsubrl
push
movsl
mov
jge
sti
sub
loop
mov
xor
loop
and
loope
loopne
lret
xor
cltd
shll
xchg
lret
mov
or
cmpsb
xchg
test
mov
mov
iret
testl
stc
mov
cwtl
sbbb
je
sub
fdivl
rcll
les
push
paddsw
inc
hlt
in
je
lea
cld
in
inc
imul
jb
mov
test
xchg
out
mov
sub
leave
aas
das
push
mov
outsb
pop
dec
sti
addr16
push
dec
int3
loope
jne
ds
enter
mov
and
sbb
mov
daa
cmpsb
sbb
shll
arpl
data16
lret
mov
mov
lods
xchg
pop
cmp
in
dec
in
int3
out
imul
rorb
mov
js
sbb
mov
popf
loop
adcb
mov
add
scas
in
dec
cmpsl
mov
pop
push
sbb
mov
mov
jae
xchg
push
adc
je
adc
int3
jmp
shlb
adc
leave
out
mov
out
outsl
scas
pop
jnp
lcall
cmp
aam
addb
bound
xchg
iret
push
test
cld
push
dec
jbe
jns
loop
sub
fwait
pop
push
jl
subb
sar
and
scas
push
in
popf
push
decl
jecxz
arpl
cmp
xor
je
inc
fcmovu
lock
movb
aaa
adc
dec
sub
test
cld
and
fs
out
stc
xchg
jp
fldenv
lret
nop
in
pop
pop
mov
jae
jo
mov
sbb
pop
fistpl
movsl
cmp
mov
dec
stc
inc
push
in
repnz
aad
inc
movsb
les
mov
and
div
mov
loope
pop
iret
and
cmpsb
adc
cs
or
or
jbe
mov
nop
mov
mull
pusha
mov
push
mov
jno
and
dec
xchg
fucomp
adc
clc
jb
popa
cmp
cmp
scas
jns
mov
add
cmpsl
dec
or
ljmp
xchg
ljmp
inc
push
out
jle
sarl
inc
mov
mov
aas
xchg
mov
into
bound
shl
jg
rcrl
into
mov
sub
mov
fs
icebp
push
add
or
cmc
push
inc
es
mov
mov
xchg
hlt
aam
and
xor
mov
pop
int3
jp
movl
push
clc
and
inc
xchg
popf
mov
and
pusha
jmp
mov
negl
jg
dec
fisubs
adc
xor
jecxz
dec
mov
test
cmp
xchg
out
push
cmp
popa
enter
sub
lret
pop
out
jns
subb
push
outsb
loop
cwtl
cmp
mov
xchg
repz
dec
or
mov
cmp
sub
push
js
sub
pushf
hlt
sbb
dec
sbb
stc
or
fwait
mov
mov
scas
sub
jo
push
rclb
outsl
jb
mov
aaa
mov
cli
cmp
or
jne
pushf
sbb
xor
jbe
ljmp
adc
out
inc
data16
adc
adc
cmpsb
cli
pop
cmp
das
imul
mov
cmp
and
hlt
sti
into
xchg
mov
inc
adc
push
cmp
shr
arpl
jbe
out
fldenv
jo
inc
adc
ljmp
fiadds
gs
mov
int
mov
jmp
fwait
or
aaa
xchg
flds
fsubl
out
shll
jge
cwtl
orl
cmp
pop
int3
inc
pop
push
adc
inc
fisubl
mov
addr16
and
call
adc
les
push
testl
and
mov
popf
in
cmpsb
cmp
xchg
mov
fsubp
es
popa
repz
pop
int3
lods
mov
scas
mov
test
fistpl
sub
stos
pop
jb
jl
test
push
xchg
fwait
ret
push
cmp
dec
in
imul
sar
xchg
mulb
ds
jbe
mov
jge
pop
test
stc
ss
mov
cmp
adc
xchg
xchg
jecxz
mov
pop
imul
nop
je
pop
es
repnz
das
dec
xchg
sub
pop
shll
inc
ja
lcall
stos
lret
test
ret
cmpsl
leave
sbb
js
repz
mov
pop
and
push
mov
mov
pop
rcll
mov
inc
ja
sub
ret
add
call
mov
sbb
push
mov
cli
add
mov
fidivrl
lods
mov
sbb
push
pusha
pushf
ja
xor
es
repz
sbb
and
inc
jne
pushf
sarb
mov
xor
and
cmp
iret
dec
imul
mov
xor
cltd
aam
imul
icebp
loop
in
adc
cmpsl
sahf
daa
xchg
popl
cltd
adc
jnp
sub
iret
add
insb
stos
ss
stos
pushf
imul
test
aas
fdivl
ret
or
dec
mov
xor
pop
dec
jo
sub
neg
mov
in
cltd
lods
insb
mov
lret
xchg
pop
mov
lds
popa
jo
loopne
mov
lods
lret
dec
dec
int
lods
add
inc
cmp
aad
push
push
cmp
fisubrl
dec
sbb
jmp
cmpl
hlt
pop
or
add
popf
add
movsl
cmpsl
aam
lretw
mov
dec
cmp
dec
test
stos
push
push
mov
loopne
inc
daa
cs
je
and
cmp
lret
mov
ret
dec
sti
in
pop
mov
into
shr
test
mov
enter
jns
ds
sub
stos
sti
repnz
jns
pop
and
inc
lea
fcomps
jle
in
jecxz
frstor
pop
arpl
imul
cmpb
sti
add
jg
js
mov
ljmp
xor
js
daa
icebp
jecxz
mov
add
sbb
jne
mov
jge
rorl
out
enter
push
arpl
lock
jl
movsb
dec
fs
fs
and
data16
out
and
push
out
jge
repnz
adc
scas
fidivrl
hlt
fisubl
in
lret
cmc
mov
ss
mov
adc
mov
loope
rcl
inc
xchg
cld
adc
jbe
mov
popf
mov
or
xchg
sub
mov
xor
mov
enter
out
mov
hlt
pop
add
jo
mov
mov
push
adc
dec
add
call
cmpsl
pop
sahf
mov
inc
das
pop
xchg
sbb
lea
inc
inc
lret
enter
lods
jne
jle
js
jp
out
mov
jae
xchg
ljmp
sbb
js
jae
xor
xrelease
cmp
es
dec
imul
gs
push
inc
mov
lods
ret
les
sub
ror
dec
push
xor
test
inc
inc
sbb
les
push
shlb
cmp
dec
rorb
and
push
mov
or
in
mov
sbb
fs
in
ret
lret
test
mov
adc
jnp
popa
aas
hlt
insl
test
jge
es
push
sbb
data16
je
es
or
pop
mov
ja
push
scas
shlb
cli
ret
scas
out
push
sbb
pop
push
nop
aaa
je
mov
jmp
or
lods
loopne
sbb
jp
das
call
cli
sahf
aam
les
adc
push
aas
sub
jae
inc
fisubrs
mov
pop
adc
xlat
jne
hlt
movsb
mov
sbb
xor
xchg
jno
mov
lahf
ljmp
aam
shrb
lock
dec
adc
jl
mov
std
addl
out
cli
xor
pop
jo
and
mov
jg
cmpsb
popa
adc
mov
loope
fidivl
mov
push
ret
rorb
scas
cmpsb
test
or
scas
push
inc
dec
pop
cmpsb
cld
jno
mov
push
mov
mov
pop
jl
in
addr16
mov
das
jne
inc
inc
push
pop
std
adc
push
push
std
pop
sarb
push
inc
ror
xor
mov
into
sbb
daa
bound
test
dec
call
xor
xor
lds
pop
mov
jl
loopne
iret
mov
insl
or
mov
negl
jno
fnsave
pop
sub
cmp
jnp
mul
leave
fstpt
or
mov
ret
or
nop
insl
cltd
aad
xchg
mov
push
and
cs
mov
mov
mov
fldt
mov
enter
filds
dec
aaa
dec
mov
ja
or
imul
and
add
adc
addr16
mov
rorl
addb
es
add
xor
aaa
jbe
dec
mov
xchg
mov
lcall
pop
mov
adc
mov
pushf
xchg
scas
lcall
in
outsl
pusha
sub
cmp
mov
dec
jmp
pushf
loope
dec
lock
loope
mov
sti
mov
inc
shrb
and
mov
mov
call
dec
or
jge
loopne
sub
imul
lcall
int3
mov
out
out
xlat
pushf
cld
jnp
and
je
xor
xor
xorl
mov
jge
push
leave
adc
inc
pop
xor
scas
lret
insl
repz
shll
mov
insb
in
mov
inc
cmp
lods
movlps
fstl
mov
es
loop
sbb
dec
jl
jns
fdivr
sbb
loope
mov
test
shrl
and
std
pusha
jmp
sub
jnp
inc
out
daa
je
insl
dec
xchg
insb
and
pop
cmpsl
shrb
xchg
cmc
mov
mov
adc
adc
nop
dec
dec
mov
cmp
adc
inc
shll
cmc
sbb
test
je
mov
dec
icebp
xchg
leave
inc
iret
clc
inc
inc
sar
mull
mov
xchg
shl
or
sub
ss
aam
mov
cmp
sbb
dec
add
aas
into
lahf
cli
jl
mov
ss
push
xor
cmp
stc
test
or
test
pop
aaa
js
and
int3
mov
jge
sbb
and
loope
sbb
icebp
sahf
cmp
jno
stc
sahf
std
jecxz
icebp
push
xchg
ret
fcomi
pop
pop
mov
xor
fwait
lods
sbb
pusha
icebp
dec
xor
pop
jle
cli
mov
sub
js
jg
cltd
push
dec
jnp
cmp
push
pop
repnz
pop
adc
cs
fimuls
rcrl
shrb
mov
pop
push
xlat
inc
cmp
push
test
lods
loop
testb
and
ret
das
mov
inc
int
dec
imul
mov
divl
push
arpl
pop
enter
imul
jnp
push
mov
cmp
dec
jmp
sub
xchg
insl
les
xchg
dec
sbb
ljmp
std
aam
xchg
sub
shll
push
jge
or
jmp
dec
sub
in
mov
xchg
and
and
pusha
andb
insl
or
enter
mov
inc
and
xchg
pop
ret
lock
pop
fists
cmp
fmull
fistpll
dec
outsl
gs
ds
jae
pushf
sbb
mov
andb
or
add
nop
mov
lods
xor
mov
scas
mov
push
gs
push
or
aad
sbb
ljmp
and
inc
pop
ja
sahf
sbb
addr16
adc
jae
mov
add
mov
lahf
sbb
pop
mov
mov
pusha
orl
dec
push
jl
addr16
adc
mov
lods
int
push
repnz
inc
movsb
lcall
fstps
into
sub
in
push
xchg
sbb
push
test
adc
fidivl
push
sahf
arpl
lods
push
or
mov
insb
std
xor
mov
dec
in
or
test
mov
adc
cmp
mov
test
mov
push
sub
hlt
das
sbb
insl
pop
or
mov
cltd
push
adc
pop
ss
jbe
rorb
mov
popf
mov
loope
cmpsl
add
jecxz
pop
mov
jbe
pop
adc
je
stos
rolb
adc
int3
fidivrs
es
bnd
add
push
dec
lods
in
or
mov
or
mov
xor
dec
fisttps
jno
stos
movl
adc
pop
sub
mov
add
mov
cmp
inc
cmpsl
hlt
hlt
cmc
sbb
cld
addr16
push
movsl
cmp
push
sbb
inc
fisubrl
bound
push
push
sti
lock
or
mov
scas
mov
mov
lret
in
idivl
sbb
movsb
clc
sbb
aaa
jp
movsb
mov
mov
sbb
jmp
xchg
cmp
and
jno
or
jecxz
je
sbb
xchg
push
sar
mov
pop
inc
shll
mov
cmp
lock
add
enter
rcrb
xor
mov
mov
cmc
aas
and
neg
subl
decb
out
mov
push
repnz
push
andb
adc
inc
das
das
enter
jbe
mov
mov
dec
xchg
icebp
movsl
xor
je
in
sbb
push
sub
jl
and
sbb
call
sbb
dec
xchg
and
cli
inc
mov
or
mov
pusha
pushf
mov
in
lret
and
sub
mov
fildll
into
push
xchg
jno
mov
add
push
orl
out
mov
cltd
mov
lcall
lret
jnp
push
push
imul
movsl
jmp
arpl
mov
jge
les
insb
std
insb
dec
js
movsl
fwait
mov
ljmp
jbe
mov
idivb
fdivr
pop
loop
in
aam
lods
fwait
adc
xchg
enter
pavgb
inc
addr16
roll
inc
movsb
jno
movsl
adc
dec
and
cltd
test
fbstp
dec
ret
pop
sbb
bound
fldenv
pop
or
sub
jb
mov
and
outsl
push
pop
fsubrl
mov
jp
mov
mov
inc
fdivrp
jg
enter
jno
cmp
les
inc
inc
push
pop
push
aam
fisubrl
dec
gs
jb
mov
aas
jns
xlat
lret
scas
push
in
fcomps
je
and
jge
inc
pop
popf
lds
mov
fsubs
lret
push
repz
mull
sbb
mov
sbb
lock
test
dec
pop
mov
roll
sub
pushf
xor
shlb
scas
call
push
sbb
stos
xor
inc
push
ret
xor
daa
mov
call
mov
out
jmp
mov
sub
xchg
mov
mov
pop
jns
ret
ret
inc
test
xor
xchg
jbe
adc
adc
inc
js
scas
shll
clc
pop
xchg
jne
pop
mov
call
jae
stos
xchg
es
sbb
leave
mov
js
add
push
mov
les
sub
fisubrs
nop
notb
test
sarb
jg
popa
dec
mov
cmc
stos
test
int
dec
adcl
scas
sbb
and
imul
fucom
sarl
jmp
or
push
arpl
jecxz
add
insb
fidivrl
sub
push
gs
cmp
pop
jo
adc
stos
lret
xchg
scas
testb
ret
clc
pop
inc
cmp
daa
push
dec
ja
xchg
jne
inc
stos
push
popf
mov
jnp
nop
mov
adcl
and
std
mov
xor
data16
loope
enter
adc
inc
jmp
sbb
daa
inc
mov
xor
sub
neg
mov
xchg
stos
insl
lds
mov
sbb
faddl
rcll
adc
ret
adc
or
mov
or
enter
mov
pop
cltd
dec
pusha
ja
lret
sbbl
ret
push
dec
aaa
push
das
mov
xchg
aam
das
into
and
fstpt
test
mov
or
sub
jnp
and
cmpsl
jl
add
pushf
cs
and
mov
leave
bound
dec
int3
out
enter
nop
arpl
pusha
and
pop
pop
icebp
mulb
xchg
adcl
in
and
aad
ds
aaa
adc
or
pusha
adc
sub
cmp
out
add
adc
mov
jl
dec
adc
add
mov
cs
adc
mov
test
shrl
mov
sti
aaa
imul
push
mov
push
adc
cmp
repz
mov
mov
paddb
sub
jo
mov
push
push
fisttps
cld
scas
enter
sub
mov
adc
adc
ds
adc
or
xchg
cmp
jb
push
sbb
test
call
aad
sbb
jmp
pop
add
jp
mov
xor
adcb
xor
mov
xor
pop
jno
in
and
call
and
dec
mov
or
and
or
jg
lcall
inc
int3
xor
aas
movsb
decb
and
adcl
lods
dec
lods
mov
pushf
and
div
xchg
push
jp
scas
or
jle
mov
lods
and
shlb
mov
jmp
mov
cli
das
les
repz
in
adc
xchg
imul
xchg
sbb
pop
mov
or
lea
push
fidivrl
inc
fiadds
pop
clc
ficoms
adc
shl
mov
mov
xchg
dec
dec
fldcw
or
movsb
repz
jno
pop
jns
les
pop
insb
fwait
push
stos
jne
mov
les
push
loopne
in
xchg
mov
mov
sarb
add
pop
jne
repnz
and
xor
push
pop
add
lahf
push
and
idiv
jne
in
add
xor
add
adc
push
mov
mov
jle
cmp
imul
test
pop
imul
in
pop
jle
ret
mov
mov
add
fadds
and
inc
loopne
and
adc
mov
stos
fwait
lea
dec
into
loope
xor
insb
loopne
lock
test
sbb
inc
idivl
xchg
mov
hlt
mov
test
or
sub
add
outsb
lahf
rcl
aad
in
add
push
inc
sbb
mov
test
int
shlb
inc
mov
add
sub
adc
and
adcb
xchg
pop
pop
mov
or
pop
out
data16
xor
repz
lock
inc
mov
addr16
cmpsl
cmp
xor
push
or
dec
add
and
movsb
sub
imul
push
sahf
insl
and
inc
fs
jmp
mov
ret
sbb
hlt
sub
sbb
pop
call
mov
xchg
dec
xchg
ficomps
pop
push
mov
jnp
es
addr16
and
stos
xor
cwtl
repnz
stos
pushf
xchg
or
xchg
mov
push
push
sbb
inc
call
cmpsb
dec
std
subb
xchg
shlb
fnstcw
or
cld
add
imul
xor
push
jl
adcb
push
mov
mov
in
pop
ds
fucomi
jns
ficompl
inc
lea
jne
jg
sub
mov
jae
jne
mov
cmc
xchg
cld
mov
movsl
pop
mov
push
repz
lret
das
es
add
shlb
mov
clc
stc
inc
fcos
lds
js
mov
outsb
dec
out
outsb
sbb
jb
jp
notb
lock
xor
out
dec
adc
pop
orl
lret
sub
cwtl
rcrb
test
ljmp
sti
popf
shlb
jecxz
xchg
and
jl
std
adc
add
push
test
leave
xchg
pop
and
cmpsb
movsb
cli
push
xchg
pop
xchg
fildl
inc
adc
lods
inc
jp
sub
scas
testb
jecxz
pop
mov
cmc
inc
iret
leave
and
add
cmp
test
sbb
mull
sbb
adc
add
inc
adc
insl
hlt
pop
bound
das
inc
adcb
out
int
pop
les
and
adc
xor
test
cmp
ljmp
imul
ret
push
pushf
and
stos
aaa
mov
data16
push
jmp
add
fiaddl
insl
pop
test
fsubrs
loop
ja
pop
and
xchg
ja
mov
sub
jecxz
jmp
shrl
push
mov
mov
inc
mov
mov
xor
cmp
pusha
sub
std
mov
cmp
mov
out
jl
or
add
iret
jecxz
mov
pop
enter
insb
popf
pushf
fs
mov
scas
jb
cmpsl
mov
roll
adc
cmc
in
loope
pop
das
pop
and
je
ficompl
and
push
xchg
xor
aam
loope
and
mov
jmp
push
js
into
repz
xchg
dec
sahf
jle
fs
mov
lods
xlat
aas
cmc
popf
push
hlt
ljmp
shl
ss
and
push
leave
out
jbe
cmp
mov
rcrb
pop
cmp
mov
vprotb
lahf
adc
mov
sbb
and
dec
and
clc
fsubs
ljmp
pop
jns
add
hlt
xor
out
outsb
ss
xchg
sbb
mov
mov
sbb
aam
out
xchg
mov
jno
pop
xor
cli
jne
xchg
stos
out
xor
jmp
icebp
aas
enter
sub
fnstsw
movsb
push
lahf
in
xchg
xchg
stc
sub
jle
call
push
mov
ljmp
dec
cmp
xlat
test
mov
fbstp
inc
mov
outsl
stos
in
int3
ss
sub
bswap
mov
add
jns
or
dec
andb
pop
jo
imul
pop
les
sub
insb
pop
cmp
xchg
mov
inc
stc
fstpt
jnp
dec
xchg
ret
outsb
cmpsb
ds
push
stos
push
mov
stos
cli
pop
out
int3
into
leave
inc
sub
cmp
std
dec
xchg
push
fisttpll
sub
pop
dec
insb
fimull
int3
popa
test
lahf
adcb
loope
addr16
das
or
aad
cmpl
mov
rcll
mov
pop
and
fldz
xchg
scas
lcall
retw
xchg
mov
mov
in
lahf
out
jbe
sahf
cli
sub
daa
stc
fildl
lret
add
out
xor
out
stc
adc
cmp
test
aad
jae
lods
repnz
xchg
pop
mov
mov
imul
jmp
add
inc
sar
xlat
push
sbb
jo
shll
add
mov
das
insb
pusha
jbe
dec
lods
in
dec
sbb
mov
fistpl
fistpl
or
mov
sbb
daa
push
xchg
movsb
imul
mov
cmp
std
or
dec
ljmp
adc
cmp
lcall
push
lcall
add
int
xchg
push
loopne
add
mov
sti
xchg
lret
aam
mov
xchg
into
mov
sarb
xor
dec
in
sahf
jno
loope
stos
out
jp
pop
pop
jp
imull
xchg
fwait
ss
fdivl
xchg
in
jle
jo
sbb
test
push
jle
jno
negb
into
xchg
pop
hlt
cmp
and
push
fwait
cmp
xor
pop
fsubl
mov
je
push
and
fisubs
hlt
fs
xchg
jae
cld
cld
fistl
sub
jp
add
sbb
cmp
loop
nop
mov
push
push
repz
cmpsl
int
inc
xchg
adc
lea
call
mov
add
push
ucomiss
push
cltd
adc
pop
cmp
test
fcoml
pextrw
pop
aaa
repz
cs
lret
enter
les
insb
neg
test
pusha
fimull
add
ljmp
push
cmpsb
sub
movsl
flds
xchg
xchg
or
test
mov
inc
loopne
sub
add
movsl
jae
repnz
mov
das
adc
xor
pop
imul
addr16
mov
pop
dec
pushf
js
insb
inc
jp
adc
jle
and
jecxz
jp
jl
out
xor
dec
mov
lahf
pop
mov
lret
idivl
incl
push
cmp
mov
mov
outsl
pop
inc
sbb
rcrb
js
dec
in
sbb
rorl
shll
pop
lahf
cld
jmp
stos
inc
jbe
lret
mov
es
clc
push
gs
pop
shrl
pop
cmp
arpl
sbbl
sub
out
jge
add
add
cltd
pop
lea
mov
shll
rclb
mov
mov
daa
out
mov
dec
sbb
mov
or
mov
icebp
ficoml
sar
cmpsl
sub
aad
sub
fimull
jle
cltd
dec
adc
or
push
jp
loopne
iret
std
aaa
or
jmp
push
push
fwait
mov
cmp
and
push
neg
daa
inc
sbbb
mulb
enter
ret
xchg
jb
lock
mov
push
lahf
add
pop
jne
nop
mov
cmc
xor
push
push
leave
outsb
pop
inc
shl
ficoms
inc
sub
and
call
jno
add
inc
lret
int3
xchg
shll
push
cmp
jle
mov
jns
push
pop
mov
shr
pop
or
shlb
aaa
insb
jmp
pop
mov
test
test
mov
mov
add
adc
xchg
lahf
cmpl
shlb
mov
fildl
jne
lds
int
mov
outsb
mov
pop
dec
movhps
add
int
jle
adc
pop
outsl
jle
xor
cld
xchg
jnp
test
add
ficomps
adc
je
pushf
repz
jmp
scas
in
int
lods
sub
mov
int
lods
icebp
inc
test
xchg
lret
scas
inc
xchg
cmp
fwait
nop
lods
push
lret
rorb
mov
add
jle
mov
pusha
or
imul
scas
pushf
xchg
aam
rcrb
int
mov
mov
arpl
pushf
fbstp
xchg
call
sub
push
mov
mov
lock
in
cs
cmp
adc
aam
adc
into
fcoml
adc
ss
pushf
cmp
fdivrs
cmc
fildl
rolb
mov
or
fstps
xor
jp
mov
test
adcb
in
rclb
jb
mov
movntps
lcall
jge
xchg
mov
dec
mov
test
out
xchg
cltd
pop
lods
jns
adc
div
pop
scas
lods
and
test
rclb
or
int
mov
js
jo
mov
mulb
push
pop
mov
mov
and
hlt
setg
inc
mov
and
add
sub
lods
hlt
push
gs
push
das
arpl
sti
jmp
loop
call
mov
sub
push
jb
xchg
outsl
xor
cltd
shll
lds
jb
mov
push
pop
jp
fs
mov
mov
mov
leave
inc
push
and
dec
mov
jmp
lods
or
sti
cmp
test
mov
stos
out
lahf
mov
hlt
loop
xchg
fiadds
sbb
or
loope
into
pushf
rclb
inc
in
movsl
pop
loopne
xchg
push
mov
das
rol
mov
inc
mov
cs
pop
mov
xor
hlt
icebp
mov
or
fs
push
pop
das
mov
pop
push
roll
or
mov
xchg
int3
bound
mov
loope
jge
jmp
mov
jb
movsb
sbb
test
std
repnz
das
jle
add
xor
inc
das
popf
lcall
repz
xor
cmp
cmc
das
shl
jecxz
sbb
cmc
sbb
iret
imul
test
fildll
adcl
xor
fstl
inc
and
test
stos
pusha
sub
aam
ljmp
fcoml
fmull
jmp
xor
add
dec
aam
lea
fs
add
sub
fcoms
pop
repz
jbe
pushf
inc
pop
pop
popa
les
xor
pop
sub
hlt
stos
lahf
add
call
out
rcrb
adc
mov
jg
mov
ss
sbb
ss
xor
nop
sub
cltd
daa
sahf
filds
ss
nop
aaa
fnstsw
dec
subss
add
or
out
xor
add
xchg
or
lret
jae
mov
sbb
stos
jno
mov
sub
dec
daa
popf
repnz
adc
xor
std
mov
into
push
rcrl
add
out
add
and
and
mov
mov
jns
cmp
dec
and
hlt
mov
insl
outsb
mov
orl
mov
inc
push
cmpsl
mov
inc
lea
hlt
sub
lret
loop
sub
nop
xor
xor
into
out
or
dec
push
mov
push
xchg
ret
into
pop
sbb
adc
out
cmc
dec
add
inc
inc
xchg
sbb
fsubs
push
inc
repz
jno
cs
sbb
push
adc
fidivrl
xchg
shrl
xchg
leave
push
pop
rclb
lods
sbb
mov
scas
adc
je
or
jmp
sub
inc
jp
addr16
pop
cmpsl
lods
ret
sarl
jo
and
or
sub
call
push
shl
or
in
mov
popa
out
mov
mov
pop
pop
in
jo
ficomps
push
cmp
hlt
adc
pop
xchg
ss
repz
sbb
loope
xor
mov
leave
or
or
jp
pusha
adc
xor
popf
mov
xchg
lret
scas
fcomps
sbb
iret
lea
push
add
push
sub
cli
jo
movsb
cmp
in
add
fnsave
and
je
or
ja
lods
push
lret
movsb
mov
aad
sub
mov
dec
cwtl
ja
xor
pop
adc
mov
les
icebp
mov
jno
adc
mov
jg
div
es
add
jle
or
push
adc
pusha
popa
lods
push
sub
fwait
in
push
add
sti
test
icebp
push
xor
loop
in
mov
pushf
cmc
push
dec
fimull
js
inc
pop
leave
out
nop
jge
jae
out
rcrb
mov
js
dec
fwait
mov
movsb
dec
push
inc
addr16
mov
cmc
std
or
inc
inc
dec
out
call
dec
xchg
arpl
daa
movl
aad
loope
ret
hlt
out
sti
sbb
sahf
frstor
push
fcmovnu
lcall
negb
dec
push
movsl
call
cs
xor
sub
je
outsl
mov
cli
xchg
push
sahf
mov
sbb
adc
orb
pop
dec
or
jge
add
shrl
psrlw
cmp
jne
pop
add
pop
adc
insl
pop
jno
xorl
adc
popf
pop
jb
mov
add
std
mov
dec
mov
mov
mov
push
and
out
loop,pt
dec
nop
mov
fsubrs
pop
mov
jbe
xor
jge
leave
cmpl
xor
jbe
mov
cmpsb
lcall
mov
jp
out
cmc
movl
jnp
fwait
sbb
cmp
outsl
repnz
faddl
mov
adc
mov
mov
dec
pop
scas
lret
pop
cld
sbb
sub
xor
push
insl
ret
xchg
icebp
dec
lods
inc
and
aaa
sub
cmpb
mov
lret
mov
mov
adc
cmpb
ds
and
aad
mov
lahf
cli
aad
into
push
out
lea
unpckhps
mov
jno
fwait
fwait
jns
test
xchg
jbe
jl
or
ljmp
and
stos
pop
inc
pushl
pop
dec
pop
push
into
push
jp
inc
and
add
jne
add
insl
outsl
jp
push
dec
lds
inc
popf
lods
inc
mov
cmp
jmp
add
sbb
pop
or
pop
lock
fadds
jg
sbb
mov
jle
inc
adc
outsl
jl
hlt
dec
sbb
push
jo
call
or
ret
movsb
adc
pop
mov
aas
adc
divl
cmp
mov
lods
push
jb
sub
loop
fs
and
pop
cmovo
or
mov
push
iret
push
add
ja
cli
mov
mov
xor
fmuls
repnz
or
das
shll
jmp
xchg
sub
les
xchg
cs
adc
pop
hlt
adc
lahf
daa
lret
mov
cmp
sbb
or
sub
jb
or
fwait
adc
icebp
bound
sti
mov
imul
xor
shrl
xchg
shrd
and
jecxz
cmp
add
or
aad
fistps
cli
faddp
and
adc
xor
lock
sub
das
jns
rorb
cmp
pop
inc
mov
push
push
ss
ja
inc
stos
cmpsl
out
and
xchg
fsubs
pop
mov
add
repz
scas
xor
xor
fidivrl
push
jae
jno
rorb
add
xchg
mov
mov
cmc
inc
or
dec
pop
pop
fs
cltd
pop
or
pop
push
xchg
xor
push
add
add
jo
stos
cs
cmc
adc
push
stos
inc
dec
stc
sub
ljmp
jge
pop
test
lds
fsubl
add
push
ret
enter
enter
xor
fwait
sbb
popf
dec
mov
test
cmp
or
cltd
add
xor
sbb
lahf
lret
lret
mov
xchg
vprotb
add
and
or
adc
jbe,pt
mov
or
mov
fidivrs
or
push
insl
adc
add
cmpsb
push
cs
fwait
jbe
cmp
aaa
ret
bound
imul
push
xchg
pop
xchg
dec
xor
hlt
lahf
lcall
nop
lret
add
sarb
out
clc
aam
xchg
add
xchg
stc
mov
jge
mov
cmp
and
sbb
push
pop
loope
fcmovbe
in
ljmp
xchg
fisttps
push
lods
lea
jp
xchg
xchg
jnp
gs
fistpll
inc
arpl
pop
sub
inc
in
xor
cmp
pop
mov
mov
push
sbb
aam
sbb
jge
mov
fdivl
loope
sahf
push
sub
arpl
push
dec
xchg
jp
dec
jp
out
outsb
pop
mov
loopne
adc
stos
adc
xorl
cmp
shl
pop
mov
outsl
mov
iret
push
vorps
inc
jmp
jno
inc
push
add
push
lret
xchg
mov
or
notb
bndstx
add
lret
mulb
or
test
sti
stos
movsl
mov
cmpsl
and
and
pop
dec
push
and
jo
jnp
adc
adc
adc
movsb
push
popf
pop
adcb
mov
add
mov
jge
rcrb
pop
push
inc
push
sahf
jno
adc
cmp
add
mov
out
sbb
cmp
pop
jne
push
adc
jbe
sbb
popf
outsb
in
mov
aas
add
and
jecxz
insl
ret
mov
das
dec
movsb
cmp
pop
aaa
mov
hlt
mov
push
xchg
add
dec
shlb
push
jmp
fnstenv
add
xor
mov
scas
insl
xor
mov
xchg
repnz
pop
cwtl
mov
in
cmp
push
rcrl
bound
or
pop
rol
pusha
sti
loop
fcompl
adc
jo
push
cli
ja
iret
mov
jbe
mov
lret
jb
es
or
loope
dec
sub
iret
icebp
mov
dec
ret
and
adc
fs
xor
mov
testb
int3
inc
adc
push
inc
add
xor
mov
adc
movsl
inc
daa
mov
jns
dec
flds
and
cld
fdivrl
xchg
jl
mov
jae
or
jle
adc
mov
push
int3
in
add
pop
and
or
rorb
cmp
arpl
std
rcr
xor
mov
cwtl
pop
add
daa
loope
sub
mov
int3
sub
lods
xchg
and
sahf
nop
gs
xchg
es
arpl
iret
movb
mov
push
loop
insl
jnp
in
data16
jmp
sub
mov
pop
push
add
mov
cs
cwtl
sbb
fcomps
sub
adc
inc
push
mov
shll
add
dec
outsb
push
roll
int3
push
popa
cltd
push
mov
sbb
ds
or
fwait
icebp
adc
sbb
scas
mov
push
sub
ds
or
ljmp
loopne
int3
jo
setge
xchg
adc
adc
add
leave
fucomi
pop
push
addr16
popf
inc
adc
int3
cwtl
lods
out
scas
in
cld
insb
fldl
xchg
lods
jmp
add
mov
jne
inc
add
cmp
stos
addr16
xorl
jnp
test
ljmp
add
es
std
pop
cmp
pop
in
loopne
scas
push
and
ficomps
das
jmp
hlt
aas
jge
out
test
xor
xchg
test
repz
aad
out
ss
pop
fnstenv
stos
in
cmp
inc
mov
lods
jg
or
nop
in
loop
outsl
adc
jmp
mov
pusha
lcall
dec
jns
inc
out
adc
add
push
add
mov
cmp
xchg
sti
adc
mov
cld
add
mov
dec
jno
std
test
test
cmpsb
ljmp
xchg
aas
xchg
mov
dec
in
jle
movsl
adc
adc
bound
jp
pop
mov
fs
sbb
sbb
in
dec
xchg
xchg
imulb
mov
add
cmpsl
pop
fstps
and
arpl
into
mov
loopne
add
imul
sub
xchg
adc
sub
mov
test
call
push
std
push
sub
jle
out
stc
or
mov
je
call
xchg
mov
sbb
filds
les
or
sub
mov
sahf
push
lea
push
jb
adc
xchg
adc
fildl
lahf
mov
pusha
xorb
sbb
jne
jmp
xor
pop
or
pop
fstps
test
mov
out
and
aaa
pop
loope
dec
mov
cmp
or
aad
aaa
enter
out
enter
je
mov
mov
sti
xchg
test
xor
xor
movsb
mov
inc
adc
inc
mov
sarl
decl
dec
cmp
xor
xlat
pop
jecxz
xchg
stos
inc
pushf
idiv
in
inc
dec
pushf
dec
cmc
aam
daa
pusha
push
out
sub
je
sbb
aaa
pop
aas
jno
cld
dec
dec
sbb
hlt
movsb
cmp
ficoml
jmp
mov
ja
push
popf
arpl
in
ffree
and
orb
inc
dec
sub
dec
shrl
jmp
repnz
dec
inc
outsb
xor
rol
mov
test
mov
mov
mov
and
adc
fmuls
in
outsl
jle
ds
or
sub
stos
and
hlt
dec
dec
fs
push
or
bound
test
mov
jmp
imul
stos
lods
push
mov
sbb
scas
push
adc
repnz
dec
cmp
mov
movsl
incb
or
daa
push
jns
jae
pushf
ljmp
adc
xorl
mov
mov
jns
fmul
cmp
in
push
fisttpll
and
and
addr16
or
insb
pop
inc
into
arpl
cli
out
xor
mov
stos
fs
push
xor
cs
push
imul
jmp
add
xchg
cli
cld
insl
inc
xchg
pushf
cmp
lret
leave
jecxz
adc
pop
aas
test
mov
mov
push
push
es
aad
ljmp
mov
fiaddl
loopne
inc
xchg
daa
sti
pop
outsl
ja
dec
xorl
sbb
inc
mov
push
pop
sbb
dec
shl
add
sbb
pop
js
out
testb
int
jg
fiadds
int
mov
lds
fs
or
inc
pop
ds
or
imul
adc
leave
mov
dec
mov
inc
sub
mov
sub
dec
and
pop
imul
dec
xchg
or
mov
fwait
shlb
xor
add
movsb
ss
or
mov
cmp
xchg
lret
out
lods
lods
sarl
pop
xor
push
sbb
mov
and
mov
and
mov
dec
jbe
sub
add
sti
inc
add
jnp
mov
dec
nop
mov
adc
jne
mov
xchg
or
loopne
cmpsl
addr16
pop
lods
mov
mov
xchg
bswap
push
cmp
sub
pop
fistps
idivb
cwtl
cmpsl
imul
inc
push
mov
clc
shrd
adc
inc
mov
aad
xchg
sbb
nop
jge
fdivrl
xchg
movsb
dec
dec
add
jo
pop
push
push
mov
movsb
mov
jnp
dec
fdivr
dec
add
cmp
xchg
ljmp
mov
xchg
push
add
rcrb
xchg
gs
clc
jne
fimuls
rclb
aaa
iret
adc
add
xor
mov
sub
movsb
sbb
in
mov
jo
cmp
lds
mov
loopne
cmp
add
adcl
push
repz
xchg
adc
pop
jl
pop
outsl
fs
pop
fidivrs
ret
cmp
inc
pop
jne
movsb
aas
sbb
lea
sub
sub
sbb
xlat
out
jns
clc
cmp
adc
pop
xchg
lods
scas
orw
and
ret
push
and
xchg
sub
addr16
and
pop
es
scas
xor
cmp
je
outsl
je
mov
lods
lods
push
and
insb
call
fcompl
add
out
sahf
or
mov
mov
sbb
enter
cmp
xchg
pusha
lods
pop
lret
lcall
sbb
int
cwtl
xchg
mov
adc
lock
adc
test
aaa
cltd
mov
sbb
fnstenv
jbe
mov
or
test
unpcklps
ss
fs
cli
dec
cmp
cmp
adc
jmp
or
or
ss
iret
sub
xchg
outsb
ljmp
jmp
or
xor
loop
aaa
or
imul
adc
xor
pop
dec
add
adc
shrb
jo
repz
cwtl
test
sub
fucomip
mov
mov
xor
sbb
test
jp
es
or
enter
lods
je
mov
jp
jno
adc
adc
push
cld
xchg
add
mov
dec
push
mov
pop
add
movsb
pop
dec
pop
mov
pop
inc
or
fucomi
aad
adc
jl
aaa
adc
aas
add
inc
lock
shlb
enter
imul
cmpb
mov
mov
ret
lock
ss
jns
cmp
sbb
jns
setb
mov
icebp
nop
sbb
mov
or
jmp
setbe
mov
inc
mov
lds
out
fdivrs
aad
js
inc
mov
fwait
scas
pop
jo
lea
sub
ror
pop
repz
aam
mov
jne
or
dec
mov
mov
std
adc
mov
push
subl
rcrb
jg
xor
mov
or
in
add
cs
leave
ljmp
pop
test
daa
push
ljmp
inc
insb
sti
adc
loop
test
push
cli
enter
imull
rcrl
or
int3
cltd
mov
ret
stos
cmp
sub
pop
mov
pop
cmpsb
and
int
sbb
cmc
popf
jns
inc
lock
and
inc
addr16
xchg
jne
xchg
test
test
negb
push
bound
stc
fldenv
out
mov
loope
addr16
adc
inc
jle
sahf
lds
scas
ror
inc
add
fnstenv
loope
inc
into
nop
imul
data16
iret
add
scas
mov
inc
lds
das
and
idivb
dec
push
aas
dec
push
sub
add
and
movb
cmp
sti
or
mov
xchg
negl
push
ret
adc
ret
push
pop
stc
add
imul
cmp
cmpsl
imul
inc
daa
out
adc
pop
das
ficoml
icebp
inc
push
insb
inc
fninit
outsb
pop
fmul
lcall
popa
test
fmull
cmp
xor
push
adc
mov
loopne
xorb
xlat
xorl
fildll
mov
data16
xor
jecxz
outsb
mov
ror
jle
iret
push
ss
mov
or
push
in
mov
mov
push
pop
lahf
push
sub
mov
mov
sbb
jne
les
xor
pushf
mov
jecxz
call
ja
sbb
push
loope
dec
push
jns
leave
gs
cmc
stos
daa
sub
sti
ljmp
arpl
loope
in
cmp
add
stos
jae
mov
xchg
lock
bound
js
inc
dec
adc
cmovle
es
jb
sbb
data16
sub
push
aad
xchg
neg
push
ds
inc
push
into
in
xor
or
xchg
xor
push
loop
mov
inc
enter
inc
gs
cmc
pop
lods
xor
fdivrp
cmpsl
pop
mov
adc
cmpsb
test
dec
sbb
shll
in
mov
int
jnp
jno
xor
repz
mov
or
out
or
push
ds
add
pop
adc
movsl
sbb
lahf
xor
dec
mov
cmp
push
xchg
pop
je
pushf
push
pop
icebp
popa
inc
xor
mov
inc
fstl
bound
cltd
xchg
test
xchg
add
iret
sub
push
cmpsl
mov
cmp
or
pop
or
mov
pushf
jl
mov
cli
psrad
sub
ja
pop
gs
mov
dec
pop
shrl
inc
add
pop
addb
cld
icebp
lahf
push
mov
pop
push
cmc
xchg
mov
add
pop
or
mov
pop
lret
push
lahf
and
daa
mulb
mov
or
sbb
imul
pop
movsb
adc
xchg
add
xchg
xor
int
or
in
jb
xchg
ud0
pop
cs
xchg
daa
xchg
jbe
pop
mov
out
roll
pop
js
ret
fnstcw
cwtl
cmp
pop
or
cmpb
das
xchg
and
jbe
movsb
cmp
mov
mov
cmp
aas
dec
outsb
outsb
lods
aaa
pusha
xor
sub
int
outsl
pop
mov
sub
pushf
xchg
or
in
xchg
or
cmpsl
adc
cmc
cmp
mov
mov
dec
rcr
inc
xor
jp
outsb
mov
popa
out
adc
xchg
das
push
mov
push
sahf
subl
sub
pop
jbe
es
lock
push
dec
movsl
jg
sarb
mov
pop
iret
push
mov
add
cmp
push
mov
shll
cmp
loop
icebp
pop
pop
rorl
shlb
cmpsb
call
pop
mov
das
pop
mov
push
xchg
pushl
pop
pop
mov
sub
dec
pop
pushf
je
sub
sbb
push
lods
pushf
inc
sub
sti
or
jle
lock
add
ds
cmp
bound
push
int3
int
incl
lahf
ss
loop
sti
add
jb
sbb
sti
aas
hlt
pop
inc
sbbl
dec
mov
invd
push
clc
aas
aad
dec
jl
sbb
and
mov
mov
add
mov
sub
movsb
jo
mov
pushf
jecxz
cli
mov
xor
fwait
data16
jl
sub
mov
sahf
pop
pop
or
mov
adc
cmp
clc
push
aam
push
cmpsl
mov
dec
lea
jo
loop
sbb
loop
in
loope
add
xchg
popa
test
mov
jae
vmwrite
test
jno
test
mov
loope
popa
mov
push
fldt
and
fadd
fwait
push
adc
idivl
test
leave
mov
xor
movsb
mov
mov
and
sub
mov
xchg
or
sar
jmp
addl
stos
hlt
sbb
cmp
cmp
lea
rcrb
pusha
xchg
jae
jmp
fidivrs
push
out
mov
cmp
or
jg
adc
cmpsb
test
loopne
adc
dec
fwait
cltd
mov
int3
mov
mov
cs
rcr
les
and
jge
xchg
cmpsb
scas
add
push
jo
jl
xlat
outsl
adc
inc
xchg
dec
test
and
in
test
rcr
das
dec
je
sub
out
hlt
mov
jp
adc
xor
xchg
ret
mov
pushf
xchg
sub
das
inc
inc
pop
into
dec
cmpb
push
xor
pop
out
popa
xchg
fcompl
mov
or
and
add
adc
or
rorb
test
into
loope
sbb
adc
mov
inc
add
bound
and
xlat
jecxz
adc
dec
add
jne
mov
cmpsb
ja
mov
lea
int
inc
mov
mov
dec
out
pop
andb
sub
dec
lret
pop
sbb
inc
mov
xchg
pop
ljmp
dec
dec
mov
add
mov
mov
inc
bound
push
stos
scas
cmpsb
lea
and
xchg
mov
pop
xchg
mov
and
lahf
call
je
jmp
scas
repnz
stc
jg
inc
loop
dec
mov
and
jmp
jno
pop
pop
or
xchg
and
call
mov
bound
push
insl
outsl
hlt
aam
icebp
aad
jae
cmpsb
stos
div
aam
leave
imul
jle
sbb
mov
cmp
inc
push
jg
sub
daa
cwtl
cmp
lret
repz
mov
adc
mov
sti
aaa
pop
gs
and
movsb
sub
mov
and
rcrb
mov
rorb
sub
mov
xor
pusha
add
inc
and
imul
out
xchg
shr
fs
xorb
dec
lods
xlat
xchg
and
mov
mov
inc
lods
pop
loopne
dec
sbb
pushf
inc
dec
repnz
lock
bound
xchg
cmp
mov
shlb
xor
xchg
lret
scas
dec
jmp
jbe
lahf
xor
jns
and
cld
ret
jbe
xchg
adc
pop
pushf
dec
push
lds
push
cmpl
inc
out
repnz
mov
int3
shrb
mov
and
adc
das
sar
mov
insl
sbb
xor
lea
and
jmp
aam
testl
fmull
sub
adc
mov
mov
jnp
jp
test
adc
in
rolb
sahf
sbb
out
loope
mov
insb
andb
ret
in
add
lahf
mov
inc
lock
xlat
mov
dec
sub
add
xchg
data16
imul
popa
dec
in
icebp
pop
cmpb
cmpsl
mov
iret
pusha
out
les
sub
out
fdivs
testl
adc
mov
xchg
pop
aaa
xchg
insl
iret
pop
cmp
movsb
dec
test
das
hlt
adc
or
xor
repnz
cmpb
mov
or
je
xchg
pop
pop
arpl
push
add
mov
xor
mov
sub
imulb
rcr
daa
or
mov
sub
aad
dec
or
fbstp
jmp
mov
outsl
or
sub
mov
inc
shlb
pushf
add
xchg
fisttpll
sahf
add
push
sbb
jae
mov
inc
mov
jl
sub
mov
dec
mov
outsb
daa
cmp
lret
ret
sub
push
sbb
push
mov
jns
xchg
pop
push
arpl
push
cli
adcb
cmpsb
subb
fisubrl
mov
or
test
push
cmc
fsts
lcall
lods
dec
out
or
cmpsl
psrlw
stc
pop
test
dec
hlt
cmp
test
dec
mov
movzbl
pushf
nop
shll
push
pop
sar
lret
sbbb
pop
fcoms
cld
xchg
sbb
push
es
dec
orl
stos
jg
jo
test
jmp
mov
jmp
mov
loope
mov
jbe
sub
lea
cmp
add
push
rorb
subb
xchg
lea
icebp
adc
add
xchg
pop
xchg
mov
push
mov
jae
or
dec
push
in
arpl
jnp
repz
adc
pop
fnstcw
lret
cmp
out
and
mov
or
sub
ds
mov
jbe
dec
into
sub
stc
sub
fwait
add
je
jae
mov
aad
jbe
aam
mov
push
addl
sub
hlt
cmp
adc
sub
add
lods
or
in
dec
and
push
or
fldt
cmpsl
pushf
stos
mov
inc
xlat
xor
int3
xor
add
dec
push
mov
mov
loop
mov
dec
sbb
fwait
sub
add
and
and
rcrl
ror
rorl
mov
or
xor
call
fcmovu
inc
dec
and
push
cmp
cmp
mov
xor
adc
fistpll
xchg
sarb
ja
add
push
shr
adc
addr16
adc
jg
and
shl
add
imul
outsb
jge
jae
enter
test
mov
cmp
sbb
std
nop
test
test
inc
fbstp
in
cli
or
push
jns
cmp
jge
test
inc
dec
or
bound
lcall
test
xchg
cmovle
rclb
test
jmp
sub
fnstsw
movsb
ficoms
sarl
enter
je
xlat
adc
imul
jo
mov
mov
data16
sbb
dec
lds
decb
mov
ljmp
or
outsl
jno
fbstp
ja
sub
jl
jmp
in
fsubl
pop
sbb
movsl
and
lea
stos
lods
mov
sbb
dec
je,pn
sbb
movb
jne
xchg
xchg
dec
dec
imul
pop
jg
sbb
and
mov
loope
xchg
lods
fstl
dec
add
or
insb
out
stos
ds
pop
outsl
push
ds
dec
jl
add
dec
cmp
pop
push
flds
push
jnp
inc
hlt
loop
out
or
scas
add
popf
adc
pusha
adcl
stos
pop
imulb
daa
mov
ljmp
incb
cli
dec
ss
cwtl
sbb
data16
jge
sub
pop
push
sub
mov
inc
mov
movsl
test
aam
mov
mov
rcrb
mov
stos
cltd
sbb
std
push
inc
mov
pop
add
inc
jge
mov
fs
pop
mov
arpl
sub
cmp
es
call
add
xor
cmp
jne
lret
dec
cmp
jae
ss
in
mov
push
mov
jae
xchg
cmp
dec
mov
ja
hlt
scas
rcrb
lahf
inc
outsl
xor
and
inc
mov
mov
mov
xor
mov
xor
je
sahf
pop
dec
into
push
in
adc
or
es
inc
and
inc
movsb
sub
loop
insl
push
jge
mov
jg
mov
ficoms
pop
pop
daa
mov
cld
loopne
dec
add
dec
inc
inc
js
dec
and
insl
inc
jo
ljmp
sub
and
pop
inc
data16
test
ljmp
test
divl
mov
enter
mov
push
test
in
andb
adc
xchg
into
push
test
inc
cmp
out
shlb
ss
or
ja
mov
pop
mov
ds
out
in
xchg
gs
push
ss
mulb
out
bound
or
popf
xor
jle
sbb
mov
sub
rclb
xchg
notl
ret
and
add
push
mov
cltd
xor
adc
loope
mov
outsl
cs
inc
jbe
imul
shlb
repz
loopne
fwait
xchg
icebp
inc
or
pop
pop
sub
push
std
and
add
sbb
movsb
xchg
movsl
aas
xor
je
push
aad
sub
clc
jge
adcb
shrl
sub
or
fs
mov
mov
mov
lds
mov
or
jmp
mov
sub
movb
sub
jns
out
movsl
mov
pop
adc
loope
scas
iret
dec
je
add
ret
sub
subps
insl
push
fcomps
pop
out
test
sahf
pop
jbe
fildll
fistpl
rolb
dec
pop
xchg
pop
lds
mov
ds
xchg
sub
into
mov
push
mov
cmpsb
shrb
adc
push
push
out
inc
lea
into
stos
sbb
popf
cmc
adc
mov
faddl
cmp
sub
xchg
into
lds
addr16
mov
fisubrl
fcompl
out
sub
fcmovnb
shlb
loope
mov
sbb
in
jmp
adcl
sbb
push
cmpsl
jecxz
adc
pop
mov
dec
fmuls
or
insl
inc
mov
xor
inc
pop
or
jne
loope
mov
inc
pop
fld
jg
aad
insb
jle
sbb
int3
cmp
test
ja
mov
add
push
aas
pop
adc
pop
xor
sti
xor
in
push
mov
aaa
sub
xlat
mov
stos
mov
rolb
sbb
outsb
out
clc
jge
insl
xchg
js
outsl
icebp
xchg
mov
out
hlt
mov
imul
mov
mov
in
andb
cmc
inc
sbbl
nop
push
push
dec
adc
adc
incl
xor
aas
js
xor
jge
loope
inc
and
mov
xchg
stos
mov
data16
xor
xchg
pop
adc
insb
push
sbb
adc
adc
out
sbb
scas
sti
pop
int3
xchg
mov
xchg
in
and
sbb
in
mov
xor
sbb
add
add
sbb
aaa
xchg
adc
fbld
push
and
lcall
sub
mov
or
mov
cmc
insb
sbb
negl
adc
cmpsl
subl
dec
jmp
pusha
fisttps
shll
inc
sbb
out
ret
dec
orl
ja
adc
loopne
inc
pop
in
adc
adcb
push
mov
cmp
inc
sbb
jno
jle
popf
sbb
push
xchg
dec
das
or
cs
dec
lahf
cbtw
ret
pop
jbe
pop
mov
leave
sti
adc
cs
dec
sahf
push
dec
mov
sbb
and
stos
jns
push
stos
into
loop
dec
cmp
lods
ljmp
movsl
inc
pop
adc
mov
mov
adc
add
or
dec
adc
jno
sbb
push
call
leave
dec
dec
loopne
add
addb
stos
push
xor
mov
sub
dec
sbb
lahf
repz
sub
lock
ret
xchg
rcr
aad
sbb
aas
xchg
inc
sub
pop
sti
mov
movsl
pop
cmpsl
imul
out
inc
aaa
shlb
push
ds
test
dec
cwtl
fnstsw
pop
cmp
ljmp
ss
negl
xor
and
jmp
mov
and
ret
inc
addb
and
clc
daa
popa
sbb
div
ret
jmp
clc
or
insb
shr
mov
daa
ret
pop
cmp
pop
int
out
leave
inc
ffree
mov
adc
jmp
mov
dec
sti
jg
ljmp
scas
nop
push
sbb
pop
sbb
addr16
pop
sbb
cwtl
or
sbb
push
mov
jl
mov
and
and
or
insb
out
push
dec
pop
fdivrl
mov
or
mov
mov
or
shll
xor
fbld
and
movsl
xor
sub
sub
scas
xor
gs
call
insl
xchg
mov
mov
jle
gs
lods
rcl
decl
data16
decl
faddp
jbe
call
jge
jae
cld
push
fidivrl
fdiv
xchg
das
outsl
sub
add
cmp
fstpl
xlat
adc
es
outsb
es
lahf
sbb
pop
daa
and
cmp
sti
sub
arpl
test
xor
scas
push
fists
mov
ss
mov
xchg
adc
cmc
xchg
insl
aas
xor
sbb
or
frstor
xor
add
sbb
and
pop
add
in
cli
shll
fbstp
fidivs
cmp
call
test
push
jle
or
sbb
push
sub
sti
adcb
push
pop
or
cmpsl
data16
rcr
mov
cmp
stos
dec
push
xchg
pop
movhps
cmc
cli
mov
xlat
lea
dec
adc
and
cli
inc
test
xchg
xor
lds
xor
inc
pop
cmpsl
dec
dec
cmp
jmp
ljmp
xchg
adc
fldcw
cmp
es
movsb
addr16
int
push
mov
icebp
lret
sub
pop
mov
sti
sbb
pushf
je
sub
addr16
lahf
dec
mov
ret
add
xchg
mov
cmp
insl
addr16
int3
aad
stos
jl
adc
and
ja
jbe
adc
xor
mov
add
add
pop
testl
in
gs
push
mov
insl
loope
xor
decb
mov
xor
jmp
xchg
xor
dec
test
insl
xchg
andl
mov
fbld
and
in
xchg
push
inc
xor
cmc
in
mov
clc
lea
rcll
outsl
jp
repz
push
cmpsb
notb
into
sti
sub
fmul
mov
sub
mov
mov
adc
testb
sbb
outsb
imul
sbb
lock
mov
xor
jg
cmp
ja
bound
daa
leave
icebp
jle
and
test
jge
mov
nop
mov
fwait
sub
mov
sub
lret
scas
sbb
xor
mov
mov
in
aad
subl
bnd
adc
lock
lock
or
or
pusha
jp
add
cld
aas
push
xchg
jle
mov
stos
es
ds
add
cmpsl
iret
dec
arpl
sub
cmp
mov
iret
sbb
out
sbb
movsb
jne
lea
xchg
cld
insb
aaa
call
jnp
aas
xor
inc
xchg
fs
sub
cmp
stos
xchg
shlb
xorb
stc
mov
stos
popa
pop
push
xchg
inc
sbb
cmp
pop
dec
aas
adc
mov
push
jns
inc
jbe
rolb
xor
mov
aam
out
sbb
mov
ret
js
aam
stos
aas
addr16
mov
cmp
adc
decl
cmp
or
aas
subb
ret
sbb
std
or
sbb
sub
add
pop
lahf
repz
stc
test
test
rorb
ret
ds
roll
pop
in
jle
in
ret
pushf
cli
xchg
pop
movsb
pop
mov
aas
mov
ficoml
aam
mov
cwtl
loop
jmp
xor
sub
ficoml
cwtl
sbb
adc
idivl
jle
push
loop
sub
cmp
inc
push
clc
jecxz
dec
jns
jl
addb
dec
shrb
mov
das
push
xchg
sbb
cltd
testl
leave
stos
jb
inc
jno
mov
or
imul
inc
dec
repz
js
xchg
in
jge
push
dec
rorl
lret
jecxz
and
or
fidivrl
das
xor
fcoms
push
adc
mov
test
and
sbb
pop
lock
jge
ja
lock
push
sbb
jbe
mov
sbb
ljmp
fiaddl
or
outsl
rcr
aaa
mov
test
sti
fisttpl
mov
gs
mov
aad
add
cmp
xchg
in
pop
cmp
add
mov
fst
mov
mov
outsl
test
ja
test
add
sbb
and
cltd
fcomi
mov
daa
jp
mov
sbb
mov
pop
sbb
js
repnz
dec
decl
fwait
sub
in
sub
imul
lret
mov
pusha
xchg
das
movsb
pop
sbbl
test
popf
rorb
fs
add
out
repz
xor
movsl
loopne
push
push
lret
mov
push
insb
mov
dec
lods
aas
jge
aaa
ds
nop
adc
out
ret
xor
aam
fstp
dec
inc
add
push
push
mov
cmp
jne
and
sub
fldt
stc
adc
xor
mov
aad
jne
jmp
movsb
test
jae
adc
mov
push
push
dec
mov
out
daa
or
aam
xor
xchg
and
inc
in
sub
je
push
xchg
out
mov
xchg
or
loope
jl
ds
stos
mov
shl
shlb
xor
adc
lret
or
mov
jp
push
pushf
stc
inc
sub
dec
or
or
std
xor
nop
dec
sarl
mov
cmp
pop
sbb
out
inc
jno
fdivr
icebp
scas
xor
jnp
dec
dec
dec
stos
add
jl
inc
cltd
mov
rcrb
xchg
sub
in
adc
arpl
aam
loope
rclb
enter
ret
xchg
adc
and
dec
jae
xlat
inc
into
pushf
mov
push
outsl
inc
mov
jp
cmpsl
pop
xorl
pop
pop
shlb
lods
int
pop
sbb
int3
mov
mov
push
xchg
sbb
push
mov
xor
sbb
mov
rcrb
iret
mov
adc
int
notb
add
enter
sbbl
mov
lcall
cmc
inc
out
xchg
sbb
and
je
lahf
hlt
push
sbb
test
xchg
cmpsl
pop
xchg
jno
pop
xlat
xchg
mov
mov
dec
stos
movsb
inc
or
mov
je
push
leave
aam
and
cmp
arpl
rcrb
jo
mov
enter
fs
mov
pop
pop
movsl
add
or
mov
testl
inc
dec
out
dec
imulb
sub
cmpsb
shll
call
call
in
faddl
das
xor
add
scas
sbb
repnz
cmp
inc
imul
xor
repnz
ret
sahf
das
sbb
mov
xchg
push
jnp
dec
sbb
dec
stc
mov
shl
push
or
lahf
inc
cmp
xchg
add
dec
scas
sar
jae
push
subl
je
dec
inc
aad
sti
sbb
sub
mov
cmpsl
mov
hlt
xor
mov
pop
xor
adc
sub
sbb
jmp
inc
mov
movsl
shll
sbb
jno
outsl
cmp
cmp
int3
push
shrd
pop
mov
mov
dec
push
lcall
and
mov
andl
push
mov
fcom
pusha
mov
loop
mov
ret
cld
shll
add
jbe
lods
push
xchg
scas
sbb
cld
and
popa
cwtl
sbb
outsb
pop
imul
sbb
push
in
out
mov
mov
jmp
fwait
les
mov
movsb
pop
mov
dec
push
adc
mov
addr16
enter
sub
movsb
cmp
mov
mov
or
or
cmp
adc
or
out
sbb
and
xchg
std
aad
bound
lea
pop
hlt
adc
xchg
xor
xchg
mov
subb
mov
movl
jns
xor
lret
xchg
adc
dec
xor
and
roll
inc
incl
dec
dec
mov
popa
fidivl
pop
dec
or
shl
cwtl
sti
lods
stc
xchg
aas
in
or
rolb
xchg
dec
xchg
sub
push
roll
push
mov
sub
adc
aad
popf
mov
loop
mov
mov
cmp
mov
pop
test
nop
addr16
xor
cmp
movsl
adc
insl
ss
movsb
adc
sub
jns
mov
fdiv
mov
dec
add
adc
dec
loopne
in
push
mov
inc
mov
gs
enter
mov
adcb
jp
sbb
mov
push
cld
fstl
cli
movsl
fistl
lods
or
mov
inc
jle
arpl
inc
shll
cmp
outsb
fldl
xchg
add
push
inc
sbb
hlt
fldenv
int3
mov
jb
mov
push
adc
mov
repz
ja
jmp
mov
icebp
jae
sub
ret
stos
mov
loope
sahf
lahf
push
sar
insb
fwait
es
loopne
shl
sbb
jnp
sbb
shl
popa
into
int
add
fimuls
imul
cmpsb
jecxz
test
dec
das
jbe
out
hlt
cmpsb
dec
mov
lods
int3
js
test
flds
and
cwtl
ss
xor
ja
push
mov
leave
aaa
inc
xor
mov
and
fbld
push
stos
push
cmp
cwtl
iret
add
mov
inc
cmp
jecxz
jne
imul
pop
sbb
roll
or
lods
lock
repnz
lahf
inc
sarb
je
fiadds
pop
cmp
sbb
pop
sarb
adc
mov
daa
mov
dec
movd
mov
adc
loope
inc
shll
or
cmpsl
add
fcoms
lock
xor
les
push
aaa
mov
pop
daa
xchg
mov
into
cmc
int3
dec
fimuls
bound
mov
cmpsb
mov
xor
aaa
mov
std
cmc
add
ja
xchg
jmp
arpl
fcoml
push
outsl
call
sub
sub
inc
inc
add
in
iret
fistps
rolb
adc
stos
jge
leave
sbb
sbb
push
stos
jecxz
dec
mov
xor
mov
sahf
es
pop
and
inc
mov
pop
neg
dec
ror
mov
in
pusha
mov
jecxz
jne
lea
xorl
or
and
lret
xchg
mov
dec
pop
adc
icebp
mov
sub
xor
fidivrl
loopne
adc
mov
mov
ljmp
mov
jmp
inc
xchg
int
and
data16
inc
xor
jns
test
fs
andb
jmp
xchg
mov
mov
add
adc
xchg
jecxz
rorb
add
clc
and
hlt
and
xchg
cmp
sbb
pop
push
adc
xchg
xor
pop
xchg
mov
dec
jmp
mov
adc
and
xchg
mov
int
jg
mov
sbbb
hlt
es
inc
popa
jne
outsb
aam
lds
jg
fwait
les
fsubrs
jo
in
dec
cwtl
jge
aaa
lcall
adc
nop
sub
rorb
xorb
mov
inc
sub
pop
mov
inc
jno
push
inc
sub
pop
xchg
pop
cmp
in
xchg
sahf
jg
cmp
adc
addr16
fwait
sub
sbbl
ret
mov
rcll
out
sbb
or
jo
mov
push
jmp
repnz
cltd
or
lods
add
or
inc
xchg
cmpsl
add
pop
cmp
stos
push
sub
mov
and
mov
dec
out
js
rolb
xor
jne
lds
or
pop
push
mov
icebp
jno
jle
mov
adc
xchg
pop
cmp
sub
icebp
cmp
and
xchg
sub
jmp
jge
mov
pop
sub
pop
std
imull
rcll
fldl
push
jle
inc
xchg
adc
ficomps
pop
imul
jb
dec
aad
fstpl
adc
adc
fdivrl
ss
in
ljmp
in
test
sarb
adc
frndint
nop
testb
mov
push
daa
or
jmp
jmp
outsb
lods
adc
pop
lcall
and
sbb
jno
adcl
sar
push
cmp
xchg
sbb
out
repz
jp
or
pop
arpl
aad
lahf
lock
mov
and
add
mov
mov
and
enter
aad
cwtl
bound
cmp
jo
mov
fldcw
icebp
lea
mov
lret
mov
movsb
fs
aam
sub
inc
dec
mov
xchg
or
lock
stc
lock
add
lock
orb
into
mov
push
mov
sbb
in
pop
pop
add
ret
jnp
in
xchg
mov
inc
iret
add
mov
mov
jecxz
add
mov
adc
imul
std
daa
adc
pop
dec
out
inc
bound
cmp
mov
sub
insl
lcall
call
add
inc
cld
mull
leave
scas
or
sub
pusha
adc
lret
inc
jmp
xchg
cmp
dec
cltd
adc
or
mov
cmp
and
pop
addr16
fwait
mov
fsubs
jns
sbb
pusha
push
pop
lret
pop
or
xchg
add
mov
in
mov
pop
jg
mov
dec
pushf
mov
push
pop
and
inc
lods
ret
jne
insl
xchg
or
dec
and
imul
cmpb
out
lcall
mov
test
fs
and
clc
mov
xchg
outsb
dec
cmp
mov
test
shll
dec
loop
jne
dec
in
push
sti
xor
dec
repnz
lea
pop
dec
cmp
rorb
sub
xchg
adc
into
dec
inc
and
xchg
cltd
mov
es
leave
loope
cmp
pop
int3
mov
mov
in
nop
or
jns
pop
or
cmp
inc
sahf
cld
insb
and
push
push
or
xor
push
lods
pushf
adc
xchg
lock
push
mov
sbb
and
test
and
mov
inc
push
not
sbb
shrb
sti
in
ss
lahf
aaa
jae
push
mov
cmp
dec
cmc
adc
movsl
jnp
or
adc
je
mov
fwait
mov
mov
cwtl
jno
cli
mov
mov
and
mov
fdivr
in
arpl
mov
fimull
pop
sar
xor
sbb
cmp
mov
bound
imul
cmp
fisttps
out
mov
shll
test
stc
stos
adc
and
cmp
xchg
dec
cmp
movsl
fidivrs
jecxz
xchg
push
cmp
test
pop
popf
xor
inc
inc
jge
nop
fldl
lret
and
mov
lods
add
cmpsl
popf
ja
mov
lahf
call
mov
in
sbb
ror
push
sub
xchg
inc
sbb
cltd
inc
ljmp
sti
mov
inc
imul
loop
shlb
pop
ja
lret
add
push
adc
mov
jae
inc
pop
loop
xchg
fists
pop
push
nop
cmp
loopne
push
cmp
fcompl
jae
cmp
lcall
inc
cmp
enter
cmpsl
xchg
loopne
jl
cmp
pop
arpl
and
orb
inc
int3
mov
xor
sbbl
jl
add
ljmp
dec
push
in
cmp
add
add
xchg
pop
pop
loope
sbb
fisubs
mov
mov
jp
loope
roll
cmpsl
push
mov
jg
jmp
and
push
dec
push
and
mov
push
lea
push
mov
sarl
loop
aad
out
aam
inc
mov
rcll
lds
cwtl
test
hlt
xor
mov
add
enter
mov
xchg
arpl
and
mov
lods
mov
les
out
xor
sub
loopne
pushf
sbb
aas
movsb
mov
jbe
mov
in
cmp
arpl
sub
sub
mov
ret
jnp
andb
je
jl
mov
out
aad
pop
dec
sub
js
push
push
cmp
lret
adc
ss
jb
std
sub
xor
xchg
lods
outsl
jne
clc
add
fiaddl
jp
icebp
mov
cmp
popa
cmp
push
rol
inc
icebp
clc
and
mov
xchg
mov
lahf
mov
push
es
test
in
gs
adc
push
rcl
fildll
or
stos
xlat
in
add
or
sub
mov
push
cmp
sti
dec
sbbb
ss
call
xchg
call
sbb
jne
fxch
repnz
insl
xchg
loop
xor
cli
out
mov
push
aad
inc
jmp
loope
int3
jp
test
mov
add
pusha
in
loopne
divl
push
dec
clc
ss
mov
out
jl
sbb
pop
jne
jg
iret
lds
in
iret
es
lea
lock
int
push
jb,pn
inc
repnz
pop
imul
ret
pop
fnstcw
in
and
jnp
mov
or
cld
sti
loopne
mov
push
not
fimuls
mov
shrb
xchg
pop
push
jae
and
ret
addr16
sub
adc
sub
jo
mov
mov
push
pop
sbb
mov
cmp
dec
and
mov
push
inc
adc
rorl
xchg
nop
jb
or
imul
mov
jge
pop
mov
mov
loope
test
push
cld
jno
xor
ret
sbb
ficomps
mov
lahf
daa
test
cwtl
mov
sub
and
shrl
pop
mov
cmp
jmp
jae
mov
movsb
cmp
dec
sahf
mov
push
adc
mov
push
std
jp
cmc
xchg
push
js
call
xor
test
xchg
pop
push
popl
pop
int
je
aam
mov
adc
in
in
outsl
mov
loop
jne
popf
ret
push
cmp
sbb
jge
push
je
jno
or
push
mov
sub
dec
sub
push
mov
movsb
jns
rol
into
pop
lods
shrl
adc
sbb
mov
mov
lea
adc
cmp
cmc
cmpsl
xchg
int
sbb
enter
sbb
inc
jp
or
fs
ljmp
sahf
and
mov
jnp
fnsave
jbe
cmp
fdivl
dec
in
inc
mov
out
mov
cmp
push
xor
inc
cmp
sub
lcall
adc
jle
and
sbb
or
clc
negl
mov
jecxz
fdivrl
mov
aas
push
cltd
popa
xchg
sub
icebp
xor
into
icebp
jle
enter
test
das
mov
sbb
popa
outsb
fdivrs
and
int
rorl
add
sar
push
and
std
dec
or
mov
loopne
and
in
sbb
dec
addb
and
cld
jnp
and
and
jo
js
push
mov
in
lods
pushf
mov
shrl
adc
enter
and
in
ja
adc
add
jge
jmp
pop
sub
mov
ljmp
std
inc
jg
mov
cwtl
into
xorb
adc
gs
xlat
xchg
mov
out
aas
lcall
fwait
push
scas
shrl
fstl
stos
pop
scas
in
jo
dec
dec
dec
dec
inc
inc
loope
lods
push
inc
scas
jmp
lods
push
jae
fidivrs
pop
mov
loope
fmull
pop
jg
xchg
mov
shrb
pop
nop
xchg
pop
scas
push
ret
push
add
movsb
xchg
mov
outsl
in
inc
dec
popl
fbld
clc
add
addl
sbb
and
dec
lret
cmp
fsubrs
rorl
sub
xor
cmp
inc
lock
icebp
scas
aas
xchg
movsb
jg
pop
pop
push
push
sub
add
jae
push
jp
push
aad
loopne
inc
scas
data16
and
loope
gs
das
imul
mov
aam
scas
or
test
imul
sub
adc
fistpl
je
clc
xchg
mov
sar
mov
in
xchg
mov
lds
add
push
add
sbb
stc
in
xor
roll
dec
cmc
xor
insl
out
jecxz
jae
inc
dec
and
sarl
stos
ret
and
rcrl
lahf
dec
fs
adc
pop
cltd
fdivl
push
cmp
jle
testl
dec
push
sub
xchg
dec
push
aad
dec
add
js
cmp
lock
xor
dec
push
fstpt
xor
jl
cmp
mov
test
cwtl
add
sbb
imul
aad
fsubl
movsb
testl
push
inc
and
xchg
in
adc
cmp
movsb
fisttpll
xchg
pusha
adc
setno
push
jecxz
addr16
adc
aam
nop
dec
aad
icebp
push
mov
xchg
cmpsb
fldcw
push
cmp
push
faddl
lret
outsl
icebp
ret
adc
xchg
xor
cmp
inc
lea
cmp
mov
in
lret
das
arpl
push
mov
xor
fs
mov
xlat
pop
sarb
add
mov
cmpsb
dec
aad
test
fnstsw
jecxz
dec
pusha
aad
in
dec
ss
and
pop
stos
les
test
movsb
jb
call
cwtl
mov
test
mov
mov
sub
adc
sub
out
cs
out
fistpll
mov
mov
xor
jae
or
inc
int
and
dec
push
adc
cmp
mov
mov
fsubrs
popf
adc
fisttpll
lock
adc
sub
jnp
or
or
ficoml
out
in
push
or
add
lock
cmp
cltd
movsl
add
jo
mov
in
or
inc
mov
mov
lods
xor
cmpsl
in
sbb
mov
xchg
adc
fisubs
mull
sbb
or
cmp
cmp
out
jmp
or
sub
xor
sbb
enter
pop
cmpsl
adc
push
flds
adc
or
jno
adc
cmp
int3
ljmp
test
inc
jmp
cltd
xor
dec
icebp
push
cmp
int3
daa
cmp
jae
je
fdivl
lods
movsb
test
stc
or
stc
mov
pop
lock
sub
push
fstl
xchg
pop
fcoms
fimull
outsb
sub
xchg
dec
xor
push
fisubs
push
xchg
xchg
jno
rorb
push
adc
pusha
sahf
mov
scas
out
add
push
mov
ffreep
stos
notl
clc
inc
sub
sbb
pop
push
pop
xor
mov
lahf
call
jmp
lret
ss
cld
sub
mov
mov
loope
dec
mov
imul
daa
fiaddl
and
jno
aas
inc
dec
ror
nop
inc
inc
adc
lcall
stos
push
pop
das
lock
je
jns
jl
sbb
stc
jle
mov
mov
mov
ljmp
mov
inc
mov
mov
pop
fistl
rcl
notl
stos
jae
push
add
ror
inc
xor
fsubl
daa
lahf
dec
sbb
or
icebp
test
inc
pop
adc
inc
movsl
inc
inc
or
outsl
les
in
push
mov
push
dec
test
icebp
std
pop
mov
lcall
jge
inc
or
out
popa
or
fsubs
imul
jno
cltd
cmc
sahf
daa
aam
cs
adc
popf
push
pop
add
xor
sbb
and
subl
mov
ljmp
sbb
cmp
sbb
push
dec
aad
por
sti
sub
rol
xor
mov
mov
jne
adc
push
jge
fmul
sbb
and
gs
jle
cmp
add
add
icebp
xchg
enter
cmp
xor
adc
or
mov
fsubrs
out
xchg
xor
pop
jae
ficoml
xor
fistps
out
imul
cmc
cmp
add
arpl
mov
int
movsl
cmp
jmp
loop
mov
inc
arpl
out
leave
xchg
mov
xor
xchg
sahf
jns
lret
xchg
jnp
scas
and
mov
sub
lcall
mov
sbbb
mov
loopne
jge
jo,pt
call
push
rcrl
add
inc
cli
stos
add
or
pop
push
imul
pushf
aad
sahf
jns
or
pop
mov
movsb
test
pop
add
insl
bound
fcmovnu
fwait
das
int3
mov
fucomp
sub
add
mov
addb
xorb
mov
sti
jns
or
and
xor
nop
mov
test
inc
adc
add
push
dec
mov
mov
xchg
push
xor
sbb
movsb
lret
mov
orl
xor
lret
add
insb
cmp
and
imul
out
fxch
pop
nop
mov
adc
add
xor
mov
leave
xchg
loop
cmpsb
pop
jns
and
inc
cmc
add
bound
mov
xor
push
imul
jae
pop
inc
pop
out
pop
add
mov
fldl
shrl
cltd
and
jp
dec
rcll
jbe
and
jge
js
repz
adc
mov
dec
push
push
lock
xchg
mov
sub
adc
js
and
dec
add
lcall
jne
jge
and
xlat
shll
inc
int3
jb
dec
push
inc
fsub
add
pop
sub
inc
mov
sti
jae
adc
sub
xchg
push
xchg
xchg
xor
mov
cmpb
sbb
mov
and
stos
shlb
fs
inc
pop
in
push
shl
adc
adc
in
inc
cmp
movsb
add
jmp
orl
data16
test
xchg
cmp
cmp
popf
adc
xlat
fwait
xchg
and
leave
cs
sub
inc
out
xchg
pop
cmp
jae
xchg
cmc
fnsave
int3
sub
pop
pop
jecxz
sti
cmpl
or
dec
sub
pusha
movsl
or
ret
cmpsl
jp
dec
fstps
jnp
mov
push
sub
and
mov
loop
pop
and
mov
stos
adc
mov
xchg
cmp
mov
pop
push
popa
sbb
pop
icebp
test
or
sub
nop
pop
xor
lret
fcmove
and
enter
mov
mov
mov
push
mov
loopne
cmp
outsb
push
fbld
inc
adc
mov
xchg
mov
and
dec
cld
lods
hlt
mov
mov
loopne
and
sbb
leave
cmc
out
pop
or
xor
loope
cmpsb
mov
aaa
es
adc
push
add
mov
or
addr16
push
jnp
test
inc
in
and
cli
testb
jnp
movsl
xchg
xlat
enter
push
mov
mov
and
and
push
jle
add
mov
add
ja
adc
insl
out
lods
add
push
pop
lock
cmp
or
pop
outsb
fldenv
mov
sbb
ja
xor
jnp
mov
mov
mov
aas
stos
stos
pushf
xor
pop
xlat
mov
adc
insl
je
or
mov
sub
mov
iret
es
es
rol
mov
pop
xchg
or
lret
adc
cmp
dec
bound
adc
push
sahf
imul
test
lcall
je
xor
xchg
inc
inc
mov
push
cwtl
scas
xchg
or
es
aam
inc
sahf
sub
inc
push
add
test
add
xchg
xchg
mov
inc
mov
mov
pop
ret
xchg
xor
mov
hlt
insb
pop
call
rcrl
push
dec
clc
fcoml
adc
push
sbb
lods
ret
or
and
xor
push
push
adc
mov
lcall
int3
add
xchg
or
push
roll
xor
mov
adc
inc
mov
outsb
adc
ja
mov
xchg
loop
js
ficompl
in
outsl
xchg
jo
das
pop
pop
and
iret
pop
adc
aad
andl
mov
add
outsb
add
aam
sub
imul
jg
jbe
repnz
mov
ss
cmpsb
insb
fimull
add
out
insl
imul
push
pop
mov
sbbb
ss
nop
out
mov
notb
add
sbb
mov
pop
adc
fimuls
xchg
cmp
xchg
verw
mov
push
jge
mov
adcb
addl
cmp
bound
xor
out
cmp
movsb
repnz
mov
leave
lock
or
or
sbb
cld
pushf
push
stos
lret
addl
adc
xchg
lret
or
repnz
mov
adc
daa
xchg
aad
or
shlb
inc
mov
js
dec
jecxz
push
es
lret
subb
pushl
pop
hlt
mov
add
or
dec
adc
sbb
gs
mov
push
pop
dec
xchg
push
mov
loop
inc
sbb
xor
mov
ret
scas
shll
std
test
out
push
push
pop
sbb
xlat
popa
mov
lret
pop
adc
dec
push
xchg
or
or
fdivs
movl
divb
mov
push
cltd
sbb
loope,pt
mov
xchg
and
lds
andb
scas
jno
mov
bound
mov
cmp
xchg
adc
mov
out
test
cmpsb
dec
inc
cmpsl
lock
sti
sbb
xchg
mov
pop
bound
xchg
mov
mov
hlt
push
xchg
cmp
out
sti
nop
dec
iret
movsb
in
push
xor
loop
sub
push
iret
adc
cmpsl
aas
sub
mov
sar
movl
cwtl
hlt
testl
sbbl
mov
mov
and
dec
mov
mov
mov
push
sbb
aam
inc
add
cmp
cmp
dec
mov
mov
sbb
lret
mov
lods
xchg
iret
fs
mov
movsl
outsl
jns
pusha
mov
fsubp
mov
js
ss
aam
sub
and
jp
cmpsb
push
mov
test
pop
pop
push
xor
inc
cs
gs
out
jbe
dec
imull
scas
loopne
decl
xor
push
pop
outsb
pushf
xchg
push
test
inc
sub
into
sub
int
addb
dec
mov
push
add
cs
mov
push
adc
rcrb
xchg
mov
mov
push
mov
mov
jno
cltd
repz
icebp
jnp
sbb
fists
sbb
xchg
cmp
std
mov
and
dec
dec
outsl
test
sbb
xor
subb
leave
xor
sub
push
mov
cmpsl
loopne
test
mov
xor
pop
jecxz
jp
lods
int3
dec
dec
leave
pushl
dec
lock
cmpsl
aaa
fsubl
pop
pop
push
insl
cmp
dec
das
out
sub
mov
nop
mov
test
add
or
mov
sub
movsb
test
and
push
cmpsl
xchg
cwtl
ret
sub
add
jmp
aad
filds
and
cmpsb
decb
mov
xlat
arpl
xchg
xchg
sbb
pop
scas
leave
sysret
xchg
aaa
mov
punpckhbw
ja
rcrb
paddd
int3
sbb
outsl
push
sub
outsb
xlat
fldenv
push
push
mov
mov
or
sub
mov
add
cmpsl
push
mov
jecxz
sub
sbb
int
je
les
movsl
mov
cmc
bound
mov
jae
inc
mov
xchg
or
rorb
popf
mov
jle
xor
out
loopne
push
cmpl
mov
iret
andl
sahf
mov
pushl
cltd
sbb
fdivrl
shll
into
xchg
and
call
pop
mov
shl
data16
fdivp
into
dec
sbb
sarl
sbb
mov
push
pusha
in
mov
lds
gs
stos
add
mov
lock
inc
fmulp
or
dec
outsb
in
inc
jbe
sub
dec
mov
mov
movl
xor
mov
popf
imul
fldl
mov
shlb
dec
dec
jne
rcrl
or
leave
inc
lock
adc
sbb
mov
lds
scas
stc
imul
pushf
pop
pop
mov
jp
shll
call
xchg
inc
pop
push
push
inc
fdivp
pop
lods
mov
jle
xchg
jno
or
mov
scas
jbe
push
jle
mov
mov
pop
nop
lock
nop
out
xor
dec
jp
xchg
in
cmp
sbb
pop
mov
inc
enter
push
cli
push
mov
push
mov
xchg
stos
repnz
adc
std
xlat
jmp
outsl
lds
rclb
add
pushf
pop
push
cli
lret
cmp
adc
push
in
and
inc
loope
movsb
jmp
lds
data16
insl
sti
dec
lret
lret
hlt
imul
or
mov
faddl
xchg
divb
mov
pop
sbbb
insb
dec
mov
ret
xchg
mov
pop
out
jge
leave
push
jbe
cmp
cmp
inc
pushf
and
test
inc
jge
xchg
inc
lods
and
clc
sub
add
inc
dec
ret
and
xchg
jbe
fstps
test
sub
dec
jle
test
orl
sbb
lcall
add
pop
sbb
dec
pop
push
orb
mov
xchg
sti
icebp
insb
aad
fs
lcall
repnz
xor
rorb
xchg
mov
mov
xor
mov
rcrb
push
imul
clc
push
adc
pusha
xchg
out
aad
insb
push
fmull
cmpsl
cld
jb
push
mov
inc
and
ds
outsb
jp
loopne
push
cmpsb
push
adc
clc
xor
sbb
lcall
shrb
dec
xchg
jle
and
sub
rcl
xchg
mov
and
fnsave
dec
cmp
popa
fnstcw
mov
fcomi
mov
js
mov
xchg
mov
imul
push
xchg
dec
mov
lea
aad
xchg
xor
sub
sbb
dec
inc
push
jnp
scas
lods
cmpsb
pop
push
xchg
xchg
adc
repz
popa
mov
jae
push
pop
xor
push
mov
adc
pop
mov
roll
out
test
or
cmp
jae
xchg
sbb
push
push
push
ja
inc
testl
adc
into
and
adc
loopne
into
push
stc
rorl
mov
mov
or
and
mov
pushf
mov
pop
mov
mov
cld
add
mov
fnstsw
push
xchg
dec
adc
or
push
and
in
cli
flds
pop
inc
std
stc
lock
push
mov
cmpsw
jge
ljmp
add
mov
xchg
dec
adc
jbe
in
mov
cmp
push
shll
int3
xchg
ret
sbb
xchg
adc
dec
mov
mov
jb
in
fstps
sarl
mov
stos
aad
rorb
int3
sbb
pop
inc
push
pop
clc
dec
mov
movsb
aad
xor
addr16
mov
mov
stc
imul
xchg
pushf
lods
out
repnz
and
dec
cmp
loop
push
je
cmc
rclb
dec
leave
add
and
and
push
sbb
and
arpl
cwtl
repz
shrw
inc
xor
xchg
ret
pop
fdivrs
xchg
xchg
lock
dec
andb
fisttps
mov
rcll
sub
insb
fiaddl
sbb
scas
mov
sub
mov
mov
sub
push
mov
loopne
inc
mov
push
push
xorl
fisttpl
xchg
sub
pop
add
rolb
call
push
mov
pop
icebp
adc
xlat
clc
outsl
outsb
das
inc
int
fdivl
add
push
push
xchg
dec
mov
mov
fs
mov
test
xchg
sbb
jb
jns
out
mov
pop
mov
aam
ret
cmp
xor
and
xchg
arpl
mov
push
mov
inc
sbb
lret
hlt
jne
push
pop
or
inc
sub
mov
clc
into
subb
fwait
push
mov
pop
sti
test
ficompl
pop
gs
stos
jmp
in
dec
jg
fisubrs
out
add
test
push
jno
ds
pop
dec
or
mov
fidivrl
test
fbld
leave
push
pop
xlat
mov
mov
jmp
fildll
dec
jo
ljmp
add
lods
dec
mov
stos
fs
lods
cmp
cld
sub
or
out
add
gs
pop
test
or
adc
inc
mov
mov
popf
fldenv
dec
neg
lods
push
rep
xorl
dec
sbb
cmp
hlt
push
inc
loopne
pop
push
add
xlat
mov
imul
les
in
dec
inc
push
test
cmpb
lea
xor
scas
and
sbb
aas
adc
lret
stos
ss
add
lods
jle
testb
stos
sub
pop
scas
fsubrl
push
jmp
int3
jns
sbb
imul
cli
int
lret
fmul
js
push
xchg
push
jns
sti
jae
push
xchg
push
lret
hlt
jmp
test
inc
xchg
rcl
int
mov
push
push
cwtl
mov
stos
or
ret
dec
dec
adc
mov
mov
stc
mov
dec
ret
je
test
jnp
testl
fdivl
xorl
into
in
sbb
xor
mov
insl
or
push
mov
push
mov
mov
mov
or
cltd
fwait
daa
adcb
fistpl
out
sbb
sbb
jmp
mov
and
gs
lds
out
and
xorl
push
aam
out
xor
sub
sub
mov
mov
push
imul
sbb
mov
test
dec
cwtl
stos
loopne
xchg
shrb
cmp
xchg
add
into
pop
out
hlt
mov
sahf
insb
pop
loope
mov
lcall
loop
outsb
decl
jnp
jno
outsl
or
clc
gs
push
mov
test
test
pop
jmp
gs
jecxz
mov
test
loope
xchg
andb
jmp
pop
ja
movsl
ret
cld
add
mov
rolb
xor
mov
orb
pusha
xorb
mov
mov
pop
jg
aad
pop
mov
sahf
int
jmp
sti
aaa
aas
popa
orb
in
xor
idivb
fstpt
push
adc
inc
mov
cmpsb
xor
mov
repnz
hlt
jmp
sahf
cmp
cmpsb
sbb
cs
jle
push
out
inc
and
dec
sub
iret
outsb
aas
mov
add
push
and
jle
pop
fisubrl
sub
cwtl
ljmp
xor
cmp
push
outsl
int
dec
xchg
in
inc
lods
mov
in
and
jl
call
imul
insl
aad
in
test
cmp
popf
jg
and
xchg
jno,pn
fxch
loopne
shll
mov
xlat
pop
add
cld
test
repz
aas
xlat
pop
inc
mov
pop
or
ja
push
xor
pop
sub
inc
cmp
movsb
xor
mov
fistpl
aaa
jecxz,pn
out
popf
sqrtps
sub
inc
mov
repnz
jmp
pop
cmp
jne
xor
adc
decb
js
or
push
sub
in
mov
adc
mov
mov
clc
sub
mov
ja
jge
mov
decl
es
movl
ljmp
dec
idivl
adc
or
jne
xchg
dec
in
adc
cmpsl
out
cmp
stos
push
jo
nop
cli
dec
mov
pop
data16
rcl
sbb
insb
add
fidivs
jno
inc
adc
mov
ror
mov
cs
inc
xchg
push
fcmovb
and
pop
push
pop
fisttpl
cmc
fstps
inc
in
fistpll
pushf
ljmp
arpl
jmp
shll
mov
jbe
adc
push
pop
sbb
push
push
dec
lea
sbb
add
jg
stc
cmp
inc
mov
sbbl
sbb
mov
pop
adc
lods
lcall
dec
dec
xor
pop
aam
rcr
jmp
dec
fstpl
xor
pushf
hlt
cmp
cld
popa
jmp
mul
not
jg
jg
movsl
idivb
call
das
and
pusha
into
sbb
and
fldl
or
pop
push
mov
dec
cmp
loop
bnd
xchg
inc
cmpsb
mulb
sub
xchg
fnstenv
cmp
out
call
xor
aad
adc
dec
divb
sti
movsl
add
je
dec
mov
or
lahf
cltd
lock
ds
imul
scas
inc
pusha
leave
iret
push
mov
inc
xchg
sti
inc
xchg
push
jmp
mov
shlb
js
adc
and
popf
jnp
es
ds
fprem1
cmc
xor
push
pusha
lcall
add
mov
aaa
or
adc
fldcw
jl
imul
ret
or
add
jecxz
insl
call
sub
sbb
or
repnz
xchg
ror
and
aam
mov
pop
xchg
in
loop
xchg
mov
jp
push
notl
jmp
ret
arpl
pop
dec
add
leave
icebp
jl
das
lret
les
lahf
mov
push
sbb
push
daa
cld
mov
xor
movsb
ds
std
cli
enter
xor
xor
daa
mov
or
dec
int3
xchg
cli
into
int3
inc
xor
cmp
pop
pop
sub
adc
repz
pop
adc
das
sahf
data16
jno
xor
hlt
xchg
stos
ficomps
pop
sar
call
push
push
mov
outsl
repz
or
fsubrl
mov
test
mov
sbbl
mov
leave
movsl
mov
sub
imul
out
pop
fs
addr16
dec
ret
movsb
int3
stos
rcr
movsl
adc
mov
inc
mov
inc
sub
test
adc
enter
sbb
cmp
push
nop
js
ja
js
jmp
lds
insb
add
push
pushf
sbb
dec
movsb
popf
fs
xor
rcrl
fs
dec
ss
lcall
std
je
mov
xchg
cwtl
xor
add
es
movsb
sub
or
aad
jecxz
adc
cld
sub
add
rorb
lods
push
repz
pop
jecxz
lock
inc
cmp
inc
mov
add
push
pop
xchg
test
lret
mov
pop
push
sbb
stos
daa
cmp
lcall
fistpl
stos
movsl
adc
push
fs
sub
adc
and
subl
xor
divl
xor
and
enter
mov
scas
outsb
add
mov
pusha
cwtl
lds
loop
inc
lret
aad
dec
fsts
jp
pusha
iret
add
sub
movsb
adc
jb
mov
fmul
cmp
cmp
xchg
inc
mov
mov
aas
mov
movsl
jo
mov
cwtl
mov
or
stos
decb
cli
or
xor
imull
into
outsl
jl
inc
stos
jge
out
and
add
xchg
roll
inc
jne
pop
testb
pusha
clc
shlb
xchg
loopne
xor
xchg
mov
daa
xchg
and
jmp
and
inc
gs
xlat
popa
mov
jbe
scas
push
pop
xchg
leave
fcomi
mov
lcall
pop
sub
cmpl
xchg
add
ret
in
sub
mov
out
fldl2t
fisttps
stc
add
mov
loope,pt
bt
adc
sub
daa
clc
gs
jns
iret
in
sbb
mov
and
scas
pop
mov
mov
xchg
imul
inc
xlat
pusha
sbb
cwtl
jecxz
rol
shl
fisubrs
pop
into
add
jmp
repnz
subb
aad
in
mov
and
dec
lock
xor
and
xchg
sbb
fs
push
dec
and
imul
jnp
int3
loope
add
xchg
inc
test
test
out
xchg
les
sub
jnp
adc
xchg
jp
sbb
or
ret
nop
rclb
dec
push
bound
adc
out
jbe
fdivrs
push
mov
push
xor
add
repz
movl
jo
sub
mov
push
jle
scas
cmp
xchg
es
add
push
notl
mov
pop
fxch
inc
stos
imul
cmp
daa
and
and
into
jp
xchg
int3
sbb
pusha
fisttpl
clc
in
sbb
in
push
loop
xchg
xlat
dec
cld
sbb
sub
pushf
adc
leave
das
pop
fstp
arpl
sub
js
outsb
and
lods
and
xchg
or
sbb
mov
adc
pushf
dec
adc
mov
push
jmp
sbb
cli
add
mov
mov
repz
jae
scas
das
and
mov
sub
dec
adcl
mov
aam
fcoms
enter
and
scas
jbe
leave
orl
out
fiaddl
test
fnsave
inc
mov
jnp
mov
sub
and
adc
sub
mov
sbb
push
ss
adc
aad
std
inc
adc
lods
cmp
mov
aaa
dec
out
in
movsb
pop
jnp
lods
lret
mov
lret
fmuls
shl
lods
stc
mov
lret
in
cld
adc
repz
cmp
mov
cmpsb
outsl
xor
inc
stos
inc
scas
popa
out
int3
imul
or
lret
push
insl
adcb
aas
test
mov
int3
cmp
pop
orl
imul
cmp
movsb
ret
sahf
cmp
mov
cld
pop
jle
inc
insb
stos
mov
dec
push
push
sbb
xchg
push
lret
rcrl
mov
cmp
cwtl
mov
popf
dec
cli
out
lock
add
jmp
outsb
inc
mov
cli
mov
fimuls
int3
imul
orb
stos
in
pusha
inc
int3
negb
outsl
mov
outsb
adc
or
daa
hlt
jae
or
sub
push
xchg
pmuludq
xchg
mov
call
sbb
loope
inc
and
leave
lods
cs
aaa
jo
scas
push
je
jl
jo
dec
mov
mov
mov
gs
out
xor
xchg
lcall
movsb
fidivs
dec
fcomi
dec
aaa
rcrl
jle
xchg
mov
das
inc
sbbb
aam
sbb
or
pop
loopne
cmc
ss
cwtl
out
mov
pop
fwait
jg
ja
sub
mov
pop
inc
lods
sub
shrl
mov
jl
dec
scas
mov
ret
lahf
lret
push
adc
and
adc
mov
insb
mov
sub
xchg
lcall
sub
sbb
pop
aaa
mov
bound
jmp
fildl
repnz
sub
mov
stc
adcl
dec
cmp
mov
dec
and
repz
addr16
pop
mov
movsb
xchg
aad
cmp
into
adc
jecxz
sbb
idiv
cmp
mov
cmp
mov
adc
ret
mov
out
ficompl
xchg
cld
add
jge
jmp
pop
cmp
hlt
mov
jnp
sbb
add
lea
addr16
hlt
into
jo
cmp
stos
sahf
mov
insb
mov
movsl
jne
and
xchg
jbe
lods
test
movsl
ret
sbb
jmp
cmc
pop
sbb
inc
pop
mov
pop
mov
sbb
sub
cld
out
xor
les
and
cmp
or
mov
movsl
les
jo
adc
xor
sahf
sbb
dec
clc
mov
push
add
xorb
mov
or
hlt
and
mov
fwait
mov
mov
out
sti
cmp
ds
cmp
pop
cli
mov
aaa
add
push
repz
xor
lret
sub
inc
or
dec
push
cli
add
pop
jle
xchg
outsb
adc
dec
test
jp
lea
shll
pop
dec
sarl
adc
inc
sub
out
and
adc
mov
mov
jbe
sbb
add
sbb
out
cwtl
and
mov
cmp
gs
mov
outsb
inc
sbb
cmp
add
or
iret
sub
sti
dec
scas
pop
rorl
jae
loope
fsubrl
fcmovnu
pop
cmc
outsl
outsb
sets
sbb
push
ja
cmc
dec
xor
out
inc
cmp
into
cmc
loop
adc
sub
sub
outsl
rcl
scas
add
out
imul
inc
test
faddl
inc
mov
sbb
loope
xor
dec
ret
pop
stos
int
mov
jb
scas
les
add
sub
sbb
cmp
dec
adc
lock
mov
fcmove
mov
fwait
lods
imul
rorb
push
mov
fistl
enter
adc
insb
ss
dec
sub
pop
daa
adc
push
cmc
xor
jno
xchg
jb
pop
fsub
push
xlat
sbb
lods
xor
pop
arpl
mov
jne
sbbl
sahf
lods
int3
stos
pop
or
mov
pop
mov
adc
adc
shrl
push
mov
dec
js
aas
mov
dec
insb
inc
push
inc
divl
cmpsl
in
loopne
js
push
pop
jo
cltd
cld
pusha
lods
gs
sbb
pop
fldl
std
lods
test
mov
sbb
jbe
fcoml
mov
lcall
daa
insb
lret
ja
mov
popa
int3
fdivr
jo
cltd
inc
pop
or
stc
xchg
int3
data16
cmp
int3
out
lds
bound
add
push
inc
test
jns
je
out
dec
dec
je
outsb
cmc
adc
sbbb
mov
or
jbe
xchg
fimuls
icebp
pusha
test
cmpsl
xchg
mov
sbb
jno
cld
inc
ret
fsubl
adcb
repnz
and
inc
lds
test
jmp
mov
in
sbb
lcall
or
enter
daa
dec
mov
push
jno
in
rclb
dec
sub
fisubrl
movsl
or
adc
fs
scas
push
xchg
mov
sbb
testl
inc
je
addl
std
xchg
jb
and
and
mov
pushf
or
cmp
rorl
pop
xchg
mov
and
daa
mov
shlb
xchg
icebp
mov
mov
jo
or
divps
dec
test
stos
cmp
adc
imul
dec
mov
cli
rcrl
push
dec
scas
xchg
push
inc
sub
mov
add
push
imul
mov
dec
or
dec
mov
loopne
sub
and
push
pop
mov
dec
sub
xor
je
jo
dec
jns
jecxz
jmp
push
push
mov
sarl
cmp
inc
or
aaa
xchg
push
and
call
lret
or
xor
cmp
outsb
push
push
lea
jp
fimull
pop
dec
lret
popa
inc
mov
ficoml
or
mov
push
daa
repz
stc
mov
pushf
rcrl
les
call
lcall
insb
pusha
out
popa
clc
fisttpl
ret
mov
shll
sbb
test
stos
mov
bt
in
mov
cmp
pop
push
jnp
push
pusha
add
xor
add
sub
cwtl
out
inc
and
cmpsb
mov
and
shrb
add
ret
mov
scas
sub
mov
stos
movsb
sbb
and
xchg
std
inc
fdivs
cmp
std
mov
cli
jno
loop
xchg
jne
adc
stc
sbb
inc
adc
mov
popa
ret
movsb
stos
xor
lss
insl
xchg
or
mov
pop
pop
xor
inc
popf
fldenv
iret
xor
lret
aas
jg
data16
cwtl
cmp
add
sbb
dec
aam
stos
in
jp
mov
cmp
jno
sub
aam
hlt
mov
mov
add
loopne
pop
mov
push
int3
outsb
fists
xchg
fnstcw
jg
hlt
outsl
lds
xor
aas
mov
dec
jmp
jl
sbb
pop
add
idivb
sbbl
roll
movsb
push
fldt
ret
mov
movsb
rcrb
ljmp
fs
ljmp
mov
push
ja
rol
mov
adc
daa
sub
clc
call
mov
mov
insb
mov
dec
xor
mov
shrb
mov
popf
test
movntps
fisttpll
je
add
lock
sub
xchg
jo
mov
shrb
clc
xchg
pusha
or
ljmp
jo
js
xor
mov
fcomi
jl
mov
inc
pop
and
pop
lds
adc
xor
jle
mov
xor
mov
inc
cmp
xor
clc
lock
out
jp
lahf
or
out
dec
mov
jno
in
cwtl
push
stos
lcall
test
fadds
ret
icebp
mov
xchg
sbb
xchg
hlt
xchg
outsb
ljmp
repnz
jg
jnp
and
xchg
push
ljmp
fdivr
insb
mov
mov
pop
loop
dec
sub
xor
enter
jne
mov
push
cltd
test
mov
inc
out
or
je
add
xor
shl
inc
mov
aaa
or
sbb
call
push
popf
in
pop
cmp
in
call
int
cmc
xor
dec
aad
es
jmp
inc
xor
jnp
nop
push
ficoml
pop
adc
pop
sbb
mov
inc
or
inc
jp
stos
adc
ja
ret
mov
dec
test
out
insb
push
mov
fptan
int3
push
jns
les
imul
loope
sub
pop
mov
dec
fbld
fisubrl
mov
cs
push
cwtl
mov
aam
jae
dec
cld
je
and
or
add
icebp
mov
and
mov
lahf
or
pushf
lahf
lds
or
mov
mov
cmpsb
das
subb
pop
int
repnz
mov
xchg
or
fistpll
gs
faddl
daa
xor
test
movsl
mov
inc
insl
or
or
sbbb
xor
mov
xor
or
insb
jnp
add
addr16
loope
pop
adc
xchg
or
jp
push
pop
mov
push
dec
int3
cwtl
push
xchg
ds
adc
dec
fstpt
mov
push
pusha
sub
sub
adc
cmp
lret
inc
xchg
xorl
mov
js
xlat
or
sub
xor
mov
and
out
sub
sub
pop
sub
out
scas
loopne
add
cwtl
and
jbe
jmp
jmp
mov
push
sbb
lcall
iret
add
sbbb
call
std
aam
mov
scas
or
jbe
push
fsubr
out
cld
xchg
por
cmc
push
adc
xchg
jecxz
add
pop
lahf
adc
push
cmp
inc
sahf
mov
adc
add
in
and
data16
dec
xchg
daa
lret
xor
shr
adc
divb
popa
cltd
mov
and
adc
rcrl
icebp
push
arpl
les
movsl
xchg
dec
cmp
lds
stos
push
mov
ja
frstor
dec
push
xchg
adcl
js
cli
shlb
frstor
mov
cmp
jb
add
out
fwait
aaa
xor
lock
fldl
pop
pop
jno
dec
das
test
xchg
mov
mov
icebp
bound
mov
cld
jl
lods
xor
ret
jno
sub
lahf
cmp
les
stos
mov
insb
pop
mov
lea
enter
jo
cwtl
ss
and
stc
push
mov
inc
lods
bound
xchg
les
aaa
mov
dec
push
sar
dec
jmp
orb
iret
adc
aas
pop
in
int3
clc
or
push
dec
inc
mov
rcll
mov
sbb
pop
xor
xchg
dec
stos
cmpsb
sub
notb
popf
push
fwait
ljmp
notb
popf
test
xor
xor
stc
cli
arpl
test
popf
sub
cmp
cld
mov
push
fidivrs
pusha
pop
xchg
int
jne
sub
pop
ds
sbb
in
out
xlat
push
inc
add
mov
enter
stos
and
and
lds
xor
lret
lcall
pop
shll
mov
movsl
mov
jmp
sub
sub
xor
loopne
gs
jo
jg
adc
sbb
jmp
dec
fmull
adc
std
mov
cmc
notl
in
in
cmpsl
mov
push
es
push
shll
jns
and
xor
ret
mov
ficompl
push
fwait
add
adc
and
and
add
fists
xchg
add
and
iret
popa
orl
cmp
je
pop
or
fs
std
inc
fstpl
sub
scas
shr
push
cmp
aaa
lea
adc
test
mov
popa
mov
and
mov
push
outsb
mov
mov
test
in
dec
mov
scas
pop
and
loope
scas
outsb
lcall
mov
adc
adc
shll
popa
roll
incb
rorl
adc
sub
mov
mov
jge
mov
mov
aas
in
or
cltd
cmc
lcall
inc
sbb
mov
pop
aas
ljmp
sub
pushf
jl
daa
push
test
out
push
scas
jo
sub
xchg
rcll
stc
movsl
adc
push
xchg
aad
or
enter
sub
repnz
lods
mov
es
insb
pop
xchg
scas
jmp
mov
loop
in
cwtl
shrl
fcoml
pop
dec
pop
sub
lcall
mov
inc
mov
adc
rcrb
sbb
sahf
sub
jns
aas
enter
outsb
cmp
imul
int
dec
xorb
add
leave
fistl
pushf
scas
insl
mov
jns
sahf
es
and
imul
pop
add
test
lret
push
cmp
inc
das
aam
loope
or
insb
stc
mov
sub
jmp
rolb
mov
cmc
add
fcoms
jbe
pop
adc
push
or
aad
push
and
push
inc
fwait
call
mov
or
out
cmp
aas
loop
push
jg
mov
and
pop
outsl
xchg
xor
stc
aas
pop
xor
fstps
jg
mov
sahf
mov
ds
pop
mov
in
lock
mov
pop
sub
push
cmp
dec
std
xor
dec
fwait
inc
add
andb
fstpl
hlt
pop
test
cmp
jecxz
stc
std
and
ja
and
and
xor
pushl
imul
mov
mov
mov
inc
mov
repnz
pop
xchg
xchg
push
ljmp
call
lods
dec
inc
and
dec
mov
mov
repz
adc
and
push
je
push
mov
rclb
packssdw
sbb
mov
bound
inc
aaa
xor
call
push
pop
aas
insb
adc
cmp
ja
xor
repnz
mov
dec
inc
rorl
push
cmpsb
pop
sub
sbb
stos
lea
sub
cmp
and
aad
add
sub
aam
sahf
dec
imulb
jmp
push
iret
push
and
or
adcb
xchg
push
sub
daa
jg
out
push
cmpsl
push
pop
in
add
jecxz
jle
cmpsl
test
pop
and
inc
gs
out
and
outsl
pushf
cmpsb
xchg
movsl
cmp
in
xchg
xor
cmc
adc
fstp
cmp
inc
clc
sub
movsl
xchg
inc
jae
xor
das
jmp
mov
push
or
pop
sbb
mov
push
testl
adc
lea
lods
out
push
gs
aam
cmp
pop
nop
leave
mov
stc
xor
imul
popf
cli
dec
std
pushl
xchg
jns
pop
test
rolb
pop
add
xor
ret
mov
or
mov
sbb
add
mov
or
mov
cmp
and
fdivr
cmp
addr16
dec
jmp
inc
fidivs
mov
aad
data16
pushf
rcr
cmc
bndstx
pop
push
xlat
mov
aam
pop
dec
out
cmp
add
in
cmp
adc
sub
cmp
sub
neg
in
jmp
push
adc
mov
xchg
lcall
jnp
sub
cwtl
jo
aaa
cmpsl
hlt
inc
push
jbe
adc
push
repnz
cmp
jmp
int
shr
cltd
aad
pop
pop
shll
iret
mov
dec
cmpsb
stos
or
cmp
dec
cli
mov
int3
mov
sbb
lret
add
hlt
jp
mov
jb
movsb
stos
push
push
ljmp
cmp
push
cli
dec
negl
or
add
xchg
lods
sbb
clc
addl
test
sub
je
xchg
push
adc
ss
les
les
insb
lods
sarl
daa
push
dec
xchg
scas
jae
out
add
pop
lds
push
lahf
insb
sub
rorb
outsl
ret
fnstcw
xchg
jecxz
scas
pop
repnz
outsl
adc
test
and
cmp
popa
inc
fldt
or
lahf
outsb
loope
hlt
cmp
dec
imul
repnz
lahf
fwait
mov
pop
add
and
insb
and
cmpsl
add
pop
clc
mov
sub
pushf
jle
xchg
mov
stos
inc
dec
jns
stos
aaa
stos
dec
adc
adc
mov
fwait
push
aaa
and
aad
and
test
loope
jo
dec
push
and
fisubs
fsubl
mov
popf
or
or
add
enter
jne
loopne
adc
roll
jb
cmp
pushf
add
test
mov
adc
xor
ret
jle
stc
adc
dec
incb
imul
mov
fisubrl
call
cmpsl
xchg
and
xchg
fidivrs
mov
push
and
cwtd
push
mov
mov
mov
dec
insb
jo
mov
jae
xchg
shrb
or
dec
mov
xchg
jecxz
aaa
fwait
test
mov
xor
adc
cli
iret
rol
adc
mov
xor
stos
lods
es
inc
outsb
data16
push
lcall
inc
sbb
xchg
sub
xchg
jmp
std
mov
insl
loop
sub
in
mov
sbb
lahf
aaa
inc
gs
sbb
lret
idivb
sub
jg
pop
fld
aam
lret
dec
outsb
fwait
xchg
mov
aam
xchg
pusha
dec
add
and
loope
xor
pop
bound
add
lret
xor
mov
cmp
shll
lcall
in
pop
ds
xchg
push
and
mov
into
pop
push
les
mov
push
xorl
mov
adc
xchg
sbb
pop
nop
outsl
imul
inc
loop
sub
imul
cmp
fistps
lds
mov
sbb
sahf
push
lahf
mov
lds
in
adc
mov
push
adc
js
xchg
adc
dec
dec
rcrl
xor
jne
mov
cltd
test
icebp
mov
lahf
nop
je
cwtl
fbld
inc
mov
mov
push
pushf
movsl
inc
das
roll
test
fisubrl
adc
fisubrl
cmpsl
pop
cmpsl
mov
dec
test
movsb
ror
bnd
lods
dec
add
and
jmp
inc
insb
cmp
cmc
test
subl
mov
fistl
pop
hlt
xor
jno
push
repnz
jns
aaa
outsl
cli
jmp
bound
add
inc
jae
rcll
add
and
jge
jmp
mov
shlb
xchg
and
fldenv
mov
sbb
popf
movsb
jno
jno
cmp
pop
mov
xchg
sub
mov
in
popa
hlt
push
cmp
dec
jg
add
sbb
ljmp
push
cs
dec
mov
aad
jae
add
or
lods
jb
lret
es
notl
push
jns
test
dec
lcall
sbbb
shlb
icebp
mov
jge
xchg
in
and
dec
int3
fcmove
pop
push
cmpsb
dec
pop
shr
stc
pushf
and
lods
test
dec
pop
or
jae
stos
aad
icebp
test
cltd
pushf
cmc
xchg
sbb
hlt
pop
fsubrl
fadds
aaa
and
push
movsb
insl
js
shl
pop
push
jb
aas
adc
xchg
mov
pop
push
sub
jns
sahf
push
shrl
insb
cmp
inc
hlt
dec
fldl2e
dec
dec
and
lods
ja
xor
div
xor
movb
add
mov
push
xor
push
mov
push
outsb
and
lds
pop
push
push
test
scas
movb
popa
int3
mov
mov
cmp
cld
lds
out
clc
mov
dec
xor
jg
xor
jg
ja
push
sub
testb
sub
popl
mov
dec
fnstcw
mov
pop
in
rclb
jge
lods
clc
es
movsb
icebp
inc
jo
or
cli
or
hlt
jae
pop
and
mov
ret
jnp
mov
ficoms
jnp
sub
aad
lods
mov
cmp
pop
shrl
int3
loopne
mov
mov
pop
jnp
es
push
cltd
xchg
icebp
daa
push
lods
inc
dec
mov
lret
adc
jecxz
imul
cmp
cmp
fs
movsb
xchg
ljmp
loopne
add
pop
iret
pop
push
iret
push
sub
repz
repz
sub
adc
aam
call
mov
mov
movsl
inc
cmc
cmp
ficompl
sahf
lds
aad
pop
popf
push
test
xor
iret
mov
adc
js
out
jbe
sub
xor
mov
mov
shl
sub
xchg
es
ljmp
xor
inc
outsl
ljmp
cltd
mov
push
mov
fcmovne
sbb
xchg
xorb
icebp
lock
jmp
pushf
rcl
xchg
inc
sbb
iret
pop
fbld
cld
or
mov
incb
xor
cwtl
and
fnstsw
mov
sbb
cmp
push
push
popf
inc
jecxz
pop
call
sbbb
mov
and
in
xchg
push
aas
inc
mov
pop
movsb
jmp
int
mov
add
pop
push
pop
inc
mov
or
not
or
mov
nop
mov
test
inc
pop
xlat
mov
mov
cltd
mov
pusha
sub
shl
lret
push
push
add
pusha
hlt
iret
pushl
ror
mov
jecxz
imul
adc
sahf
int3
jecxz
ja
mov
dec
fsubl
nop
cld
ljmp
fdivs
loopne
jmp
sbb
inc
rorl
test
or
dec
xchg
scas
int
pop
xor
popf
imul
mov
loop
movb
clc
push
sub
jmp
int3
add
pop
cwtl
pop
push
cmp
aas
loope
and
mov
cltd
into
aas
jb
push
mov
and
repnz
lret
std
jmp
aaa
cmpsb
aad
outsb
test
lret
dec
add
jl
adc
divl
or
loopne,pt
cmp
das
jae
in
cld
inc
scas
fs
sbb
sbb
inc
sub
repnz
cmp
sub
test
nop
xchg
ljmp
icebp
xchg
fildll
push
xchg
cwtl
fwait
test
mov
nop
stos
fcomps
jl
pop
xchg
in
push
xor
popf
repnz
sub
bound
popl
imul
imul
scas
inc
dec
cld
into
movl
push
mov
popa
addr16
adc
dec
dec
pop
ja
sbbb
cmp
push
dec
stc
mov
jne
push
ficoml
pop
gs
jb
aas
fcomps
shr
bound
das
sbb
inc
jmp
xchg
pop
mov
mov
icebp
pcmpeqd
push
mov
xchg
insl
mov
call
pop
pop
or
jno
fmull
jno
jle
push
stos
fnstsw
cld
mov
mov
in
jg
mov
sub
cltd
stc
jmp
mov
outsb
ret
inc
adc
outsl
loop
xor
cmpsb
inc
mul
xor
pop
loope
ret
push
pop
xor
sub
pop
xchg
inc
fisubs
cs
jne
sub
in
xchg
lock
test
mov
pushf
rol
jae
cld
xor
fwait
in
add
add
ror
jnp
mov
fstl
subl
mov
hlt
lods
and
inc
add
sub
sub
movsb
dec
dec
imul
aaa
xor
inc
scas
test
xor
or
jbe
pop
pop
loope
mull
gs
repz
and
xor
daa
push
pop
xor
add
push
and
inc
lcall
pop
adc
xchg
adc
inc
test
mov
clc
lahf
enter
rol
shll
inc
test
sbb
cmp
sti
xchg
sub
mov
dec
push
push
inc
push
fisttpl
xor
fptan
sub
and
cltd
popa
sbbb
adc
rcrl
rorl
in
xor
outsl
pop
shl
mull
es
gs
pop
pop
insb
arpl
xchg
call
xchg
lret
lods
in
roll
popa
hlt
inc
cmc
mov
adc
stc
repz
test
xor
lods
dec
subl
mov
mov
fcmovu
cmc
mov
jns
add
in
mov
adc
xchg
in
shlb
nop
cmpb
or
stc
inc
sti
sub
lods
push
in
mov
and
insl
shlb
xor
mov
mov
adc
clc
daa
mov
pop
adc
mov
adc
leave
fildl
jg
jae
jb
inc
cmp
ror
jnp
adc
fdivrp
addb
int
mov
cmpsl
or
stos
lock
xor
and
adc
dec
cmp
xbegin
ret
pop
loope
jae
sbb
out
mov
inc
pop
mov
addr16
jno
test
pop
pusha
pop
divb
push
xor
jg
cmpsb
fs
pop
loop
nop
push
divb
sbb
or
mov
mov
sub
rclb
mov
nop
add
repnz
ret
shlb
dec
xor
mov
ret
sar
shll
rcll
outsl
mov
cltd
lods
ss
lods
add
clc
in
loopne
dec
fisubs
xor
rcl
jb
xchg
scas
call
adc
jp
test
add
sub
jp
xchg
push
adc
mov
and
jno
subb
pop
push
in
fistps
shll
js
add
push
stos
xchg
mov
fidivrs
fistpl
dec
pop
loop
lea
leave
mov
mov
ds
sub
push
mov
fiaddl
push
mov
lret
jno
shll
stos
outsb
mov
sbb
aad
push
cld
mov
xchg
iret
xor
push
sub
test
out
xchg
aam
xor
mov
xchg
push
divb
incl
aas
pop
sar
test
imul
scas
enter
ret
popa
repnz
mov
sti
movsb
xchg
push
bound
ret
imul
outsl
fwait
movsl
sub
mov
insl
imul
sbb
outsl
dec
inc
cmp
jl
ficoms
mov
ss
jmp
cmp
bound
into
inc
cmp
xor
fwait
shlb
out
fwait
jo
and
fsubrl
in
aaa
vpxor
shll
dec
clc
test
les
add
xchg
or
mov
cld
cmc
inc
lods
outsb
cmp
mov
fs
loop
ljmp
mov
cwtl
push
push
lret
mov
pop
outsb
daa
sub
les
mov
push
insb
jmp
cmpsb
dec
sti
sub
pop
push
adc
roll
add
into
ret
fcoms
mov
lret
mov
mov
lock
dec
cmpsl
cltd
movsl
cmp
dec
xchg
jge
sahf
aaa
imul
outsb
out
cmc
dec
cwtl
dec
sbb
mov
stc
inc
subl
inc
enter
lret
jnp
xorb
dec
pusha
sub
pop
adc
xchg
gs
ljmp
cmp
sub
dec
push
mov
mov
dec
lods
inc
jmp
inc
adc
and
push
xchg
push
mov
fists
int3
stc
cwtl
mov
outsb
dec
test
jp
mov
dec
rcll
pop
outsl
inc
out
in
cmp
pop
xor
shll
ss
scas
jns
and
das
jae
daa
xor
sahf
inc
sbb
ja
mov
adc
shll
dec
arpl
pop
and
mov
sbb
sbb
popf
enter
nop
push
aam
push
mov
and
xor
mov
out
jge
inc
loope
hlt
mov
and
mov
mov
cmpb
movsl
std
and
shlb
dec
outsb
add
js
jo
gs
shl
push
loope
gs
cmp
and
jbe
xchg
xorl
lcall
rcrb
lret
cmc
clc
in
jbe
scas
lret
cmp
call
es
imul
push
out
push
leave
jbe
adc
idiv
cli
fs
or
jmp
add
dec
sahf
rol
test
push
jae
adc
das
scas
mov
hlt
mov
adc
jne
xor
test
test
xchg
xchg
lods
lods
loope
or
lcall
xchg
ss
or
mov
pusha
push
test
xchg
mov
daa
add
in
xchg
jl
inc
push
push
add
scas
test
in
lahf
lahf
fsubs
mov
movsl
dec
insb
adc
aam
mov
test
cwtl
jmp
sub
pop
xor
in
mov
xor
fcmovu
add
sbb
and
test
subl
mov
fwait
sbb
mov
xchg
jl
jle
cltd
int
push
sbb
fwait
add
cltd
cmpsb
and
jae
pusha
push
hlt
mov
cmp
jns
icebp
mov
and
pop
aas
dec
add
jnp
out
cmp
adc
lret
jmp
mov
sbb
jne
sub
push
notb
sahf
mov
and
jg
aad
dec
jno
adc
xlat
push
in
xchg
cli
jl
sbb
mov
dec
add
aam
mov
cld
popa
add
xchg
hlt
bound
adcb
dec
das
mov
fmull
jge
xor
rcl
das
sbb
lret
clc
jnp
fcomp
lret
ja
filds
cmc
fadds
push
xchg
mov
xor
dec
in
movsl
pop
aad
mov
xchg
add
cmp
cmp
imul
cltd
data16
out
leave
sbb
lahf
je
mov
sbb
lret
ja
aam
xchg
inc
sti
nop
hlt
mov
cmc
jne
fstpl
cmp
jmp
cmp
jecxz
adc
fsts
sbb
xor
mov
or
pop
and
mov
adc
hlt
and
pop
sub
add
fs
and
push
testb
cmp
in
cmp
repnz
lret
sarl
sbb
and
push
xchg
insb
jb
push
int3
mov
push
inc
cmc
nop
add
add
nop
cmp
or
or
lahf
mov
fildll
dec
cmp
xchg
xorb
jmp
in
xchg
sbb
les
lret
jno
xor
mov
insb
fisttpll
add
pop
mov
mov
jecxz
inc
in
push
add
sub
mov
dec
daa
adc
xchg
icebp
xchg
imul
sbb
sub
xchg
xor
rdmsr
pop
xor
loope
jo
jae
ret
filds
adc
insl
stos
loop
loope
sti
data16
repz
lods
or
jno
movsb
enter
in
add
xchg
dec
les
jno
stos
test
or
xchg
push
repnz
dec
popf
adc
push
pop
into
pop
std
and
mov
pusha
inc
out
xchg
subb
lods
and
cmp
fiaddl
xor
xor
dec
fdivs
and
cltd
les
out
inc
push
movsl
mov
mov
int
dec
mov
movsl
andb
fidivrs
jb
mov
xchg
scas
add
push
sbb
xorb
jle
dec
mov
sbb
add
cmpb
js
jg
cmp
and
add
mov
rorl
lret
dec
add
sbb
je
or
or
aad
outsb
in
test
lods
xor
fistps
inc
das
push
pop
rclb
ja
cltd
jns
hlt
and
ds
mov
sti
adcb
sti
add
dec
das
fcoml
call
mov
repz
rorl
nop
pop
sub
xchg
out
sub
pop
stc
test
push
das
andps
sbb
loope
movsl
push
sbb
pop
notb
cmc
std
pop
movsl
mov
fdivl
jnp
adc
mov
push
cmp
call
insb
lods
mov
mov
cmp
jp
adc
mov
and
mov
mov
and
sub
std
inc
insb
cli
mov
xlat
movsb
cmp
stos
pop
mov
fisubrs
jl
pop
pushf
mov
fstl
xor
lahf
push
xchg
fs
enter
in
stc
into
sbb
mov
inc
or
dec
adc
mov
cmpsb
jnp
int3
or
ljmp
fwait
mov
mov
ss
stos
adc
test
data16
shlb
jmp
ds
jnp
shlb
adc
shlb
xor
out
inc
adc
dec
ret
adc
aaa
sbb
xlat
push
pop
andl
lods
jnp
push
inc
dec
in
and
xchg
add
jbe
jp
in
lea
xor
xchg
stc
push
lret
iret
xor
jb
mov
sbb
scas
sub
sti
rorl
jo
cmpsb
fisubrl
push
ja
and
inc
jno
test
mov
cmpsb
testb
loop
xchg
scas
add
jg
lcall
xor
or
push
test
jecxz
cwtl
out
out
fnstenv
and
test
pop
fwait
xor
or
fwait
popf
lret
fdivp
jb
push
arpl
ds
jns
into
int
xor
mov
jns
mov
adcb
jl
nop
push
arpl
rcll
xchg
add
cmc
in
sbb
xchg
push
mov
inc
cld
or
pop
loopne
dec
mov
cmp
mov
xor
inc
hlt
xchg
xchg
sti
jle
setg
fldcw
sub
sub
pop
fidivl
xor
in
mov
push
repz
js
or
in
mulb
jo
inc
and
out
xor
call
subb
mov
pop
jecxz
test
loopne
push
push
outsb
adc
repz
ja
mov
mov
mov
aad
adc
sbbb
and
and
rclb
iret
sub
ja
pop
or
push
xor
cmp
or
mov
dec
jnp
or
push
rorl
adc
out
fldcw
lahf
cmc
push
sub
sbb
mov
xchg
jbe
in
mov
repz
stos
sub
sbb
imul
sbb
mov
xchg
loopne
in
jo
out
pop
insl
add
push
cs
in
push
scas
xchg
jg
stos
push
sbb
shrb
lea
and
in
jnp
pop
add
cmp
mov
pop
dec
pushf
mov
sbb
imul
test
stos
or
push
lret
lock
in
jecxz
ljmp
lahf
pop
lock
or
lods
jl
fwait
addr16
jg
pop
mov
inc
adc
jmp
ss
pop
test
or
jno
or
dec
mov
rcl
adc
mov
sbb
into
mov
jg
pop
into
das
mov
in
out
push
ds
out
mov
cli
test
inc
jns
pusha
ret
sub
jge
imul
cli
sbb
jecxz
fildll
dec
pop
dec
test
lret
stos
sub
lods
bound
xchg
jo
pop
pusha
add
sbb
ret
jae
pop
lea
pop
rclb
icebp
insl
add
mov
je
sub
jp
fs
adc
add
ja
icebp
ss
enter
js
jae
popf
dec
icebp
sub
add
mov
stos
xor
mov
mov
mov
pop
mov
jg
es
ja
mov
inc
sahf
fisubl
push
rorb
shlb
cmp
sbb
mov
out
in
cmp
pop
add
add
andb
sbb
push
sbb
and
test
push
xchg
xchg
shll
sub
std
fidivrs
push
xchg
fidivs
mov
movsl
or
idiv
inc
pop
jle
aam
movsl
xchg
jae
pushf
pop
sub
scas
xchg
imul
xchg
xchg
ficompl
es
push
xchg
mov
das
and
add
add
sbb
fcomps
jbe
decl
lods
filds
pop
ds
cmpsl
fadds
bound
xor
jne
push
mov
testl
addb
and
leave
into
out
mov
dec
aam
outsl
adc
adc
sti
mov
pop
pop
fwait
aam
mov
je
imul
add
in
sub
xchg
mov
xor
xchg
scas
aam
data16
xchg
add
mov
add
daa
sbb
fisttpl
ffreep
repnz
mov
lock
add
push
pop
stos
lahf
xor
mov
xor
loopne,pn
ljmp
push
mov
repnz
jg
imul
cmpsb
ret
sarl
xchg
or
sti
sbbb
lods
mov
fimull
mov
add
out
jb
lds
lret
adc
ret
ljmp
xchg
xor
in
push
int3
pushf
xor
shrl
loop
xlat
sbb
sub
mov
mov
out
pop
pop
je
mov
mov
mov
fcompl
or
mov
jecxz
enter
mov
xor
cvtps2pi
fstl
loop
inc
fsubl
cld
add
dec
jo
mov
xor
int3
lods
pop
inc
sub
sub
inc
into
and
out
fs
pop
pop
sbbl
test
dec
or
or
jl
inc
out
in
pop
ret
das
inc
adc
rolb
or
jbe
jmp
std
xchg
dec
mov
mov
mov
das
sbb
mov
lahf
add
mov
popa
dec
pop
iret
rorl
imul
xchg
cltd
mov
xchg
rorl
pop
std
xchg
arpl
fstpl
jo
jbe
jge
imul
push
dec
imul
pop
adc
push
sub
daa
pop
in
sti
sub
stc
jmp
pop
jns
rcrl
pop
jns
jne
add
out
pop
dec
das
pop
add
jns
pop
cmc
je
push
or
xchg
aas
clc
ss
pop
dec
and
pop
dec
add
dec
fsubrl
adc
xchg
imul
ret
mov
mov
adc
jecxz
cmp
fisubl
jge
dec
imul
xchg
test
pop
cmpsb
adc
xchg
shlb
dec
in
aam
mov
scas
sar
xchg
mov
push
mov
sti
pop
pop
pop
inc
cmp
mov
or
mov
aam
in
mov
out
pop
loop
pushf
scas
fadds
mov
ss
mov
adc
jno
add
mov
int3
mov
movswl
or
hlt
jb
ret
jbe
in
push
fidivrl
iret
dec
daa
dec
cmpsb
pop
lret
pop
js
lods
dec
and
inc
push
fmull
cmp
lret
pop
mov
sbb
mov
pusha
adc
xchg
push
inc
push
push
stc
and
inc
xor
cmp
jge
dec
movsl
test
sbb
dec
aad
sub
xor
imul
jns
cmp
std
movb
jbe
sbb
pop
lea
push
adc
addr16
hlt
out
cli
jle
clc
fldcw
adc
stos
bound
aad
push
xor
inc
push
mov
cmc
aaa
mov
test
push
cmp
lea
mov
data16
fs
leave
lock
and
xchg
test
dec
jmp
test
jl
dec
int3
adc
pop
aad
mov
pop
adc
popf
jl
mov
iret
sub
lahf
jnp
mov
cli
mov
cmpl
popa
out
pop
push
dec
int3
out
lret
jae
dec
cmpsb
popf
push
mov
es
inc
adc
jnp
popf
adc
inc
pop
adc
mov
pop
pop
dec
dec
out
add
pop
mov
xchg
push
outsb
addr16
and
ret
lcall
xor
fwait
inc
xor
cld
xchg
mov
iret
inc
sbb
xor
push
test
jl
or
addr16
out
xor
js
and
inc
add
ja
jns
mov
enter
add
jo
push
push
outsl
push
or
icebp
sbb
sbbl
push
lahf
les
icebp
imul
jno
sbb
adc
inc
frstor
jae
fistpll
push
pop
push
adc
and
mov
xor
mov
js
addps
hlt
cs
jp
xor
dec
rcll
xchg
stos
popf
shll
rorl
cmp
sbb
push
in
jne
push
cld
pushl
loop,pt
pop
pop
xor
outsb
stc
je
mov
xchg
faddl
cmp
or
insl
lods
xchg
mov
loopne
mov
ss
ljmp
mov
or
pop
cmp
jle
push
aad
scas
ret
xchg
cmp
mov
daa
mov
outsw
cli
xchg
mov
insl
mov
loop
cs
notl
mov
std
lock
push
mov
out
out
lret
push
lret
imul
pop
ljmp
ja
cmp
pop
mov
loop
inc
or
cmp
push
sarb
sub
out
cmpsb
xlat
add
xchg
xor
fcoml
xchg
ja
add
cmp
xchg
popa
add
out
or
call
inc
push
insl
sub
dec
cmp
jecxz
rolb
sti
mulb
jp
xor
cmp
cld
jg
imul
shll
fdiv
movsb
int3
or
sbb
cltd
testl
repz
mov
mov
test
popa
cmp
aad
das
push
mov
xchg
lods
scas
enter
dec
fistps
xor
ret
rcr
inc
fildl
enter
mov
test
cltd
mov
je
loop
seto
jmp
ljmp
push
or
repz
in
jl
xchg
icebp
inc
subl
push
in
xor
stc
call
aam
pop
call
jecxz
call
insl
inc
ret
add
mov
jmp
scas
bound
addr16
mov
inc
jle
leave
mov
dec
push
fcoms
bound
in
add
mov
push
jecxz
jmp
loopne
mov
pop
popf
aaa
jl
mov
adc
out
enter
jb
sub
das
popf
push
mov
cmpsb
mov
ret
out
adc
into
inc
ljmp
xor
mov
jb
out
sub
and
pop
push
jle
jle
pusha
leave
or
jae
out
or
push
sub
fisubrs
cwtl
in
inc
out
je
mov
movsl
add
mov
cmpsb
decl
mov
xor
je
or
ds
jne
jo
ja
les
or
dec
sti
cmpsb
dec
mov
jmp
ret
ficomps
out
jle
test
loope
lret
nop
clc
and
out
inc
cmp
movsl
bound
stos
or
pop
jmp
in
fsts
cmpsb
mov
mov
stc
xchg
cs
jg
pushf
aaa
cmp
sub
add
inc
nop
sbb
mov
jae
xchg
loopne
test
clc
rcrb
push
cmp
push
push
mov
inc
sbb
lcall
and
and
or
cmp
adc
cmp
and
push
popf
mov
aad
pop
mov
jbe
lea
pop
pushf
sub
shlb
outsb
pop
mov
sub
pop
xor
jge
mov
loopne
cmp
pop
add
imul
js
push
rorb
or
mull
inc
push
cmp
mov
pop
mov
clc
pop
sti
push
dec
loopne
adc
test
jle
push
xor
pop
stc
int3
cmp
into
out
adc
xchg
cmp
and
repz
mov
test
nop
jmp
xchg
sub
xor
mov
inc
or
leave
icebp
dec
fdivrp
shlb
cmp
mov
adc
jge
mov
and
jb
inc
ss
cmp
shlb
ror
sbb
call
bound
cwtl
andl
lock
shlb
push
cli
scas
call
and
push
fsubs
mov
sub
into
fstp
cmp
or
pop
add
ja
pop
shll
rcl
insl
in
sahf
pop
adc
adcb
push
mov
xchg
ficoms
xlat
jnp
mov
push
and
leave
jne
fistpl
add
cmovbe
les
out
cmpsl
cld
xor
popf
imul
mov
lret
movhps
cld
out
sbb
shl
test
out
imul
sarl
call
ljmp
or
dec
and
cmp
shrl
mov
popf
cli
in
out
cmpsl
stos
xor
ror
sbbl
jne
inc
push
mov
adc
in
cmovns
pop
jo
add
imull
idivb
sbb
pushl
pusha
inc
jns
leave
loopne
pop
fiaddl
imul
pop
fisubl
stc
aas
cmpsb
les
xor
fimull
int3
add
scas
cmc
jl
xchg
es
mov
adc
and
loope
sbb
subb
ljmp
fcoml
mov
sbb
or
ror
adc
jg
pop
into
fs
movsb
stos
sbb
inc
stos
add
jne
aaa
mov
jg
jbe
ljmp
sub
xor
adc
test
enter
pop
or
lea
or
in
xlat
aas
arpl
cld
push
or
xchg
cltd
lea
lcall
mov
out
inc
cmc
dec
dec
mulb
gs
int3
push
loop
clc
ret
insl
int3
dec
pop
pop
xchg
hlt
std
jnp
imul
ljmp
cs
aad
fwait
pop
pop
dec
push
mov
adc
lret
inc
dec
cwtl
sbb
xor
cmp
fildll
xor
inc
rcrb
or
dec
imul
xchg
pop
pop
xchg
hlt
gs
in
add
push
push
fwait
push
jl
push
mov
lret
pop
mov
dec
in
cltd
or
adc
cmp
jmp
mov
add
std
sub
movsl
pop
or
pop
in
into
push
call
int3
and
aad
cwtl
jle
daa
mov
mov
inc
push
xor
lods
fildll
jb
test
shlb
xor
leave
setno
xor
mov
and
push
mov
inc
mov
clc
repz
cmpsb
int3
cli
push
dec
out
sbb
cmp
push
push
jmp
cs
shlb
pop
cs
add
sbb
sub
scas
adc
xor
xorb
pop
shll
pop
fisubl
adc
incb
or
mov
dec
iret
subb
push
mov
loopne
les
mov
add
xor
sub
in
js
mov
push
pop
scas
out
add
push
pop
sub
mov
mov
push
stc
jo
adcb
adc
pop
aas
inc
mov
test
int3
push
call
testl
mov
shll
jnp
or
push
push
lcall
push
fildll
repz
jle
jle
lods
dec
adc
jno
mov
cwtl
scas
inc
in
imul
test
mov
pusha
add
mov
cmpsl
in
jcxz
mov
shlb
gs
sti
pop
int3
cmp
xchg
lret
stos
inc
sti
imul
enter
or
cmpb
pushf
sbb
cwtl
dec
xor
jp
sub
add
clc
in
pop
add
lock
inc
jp
fwait
dec
mov
pusha
test
lods
dec
inc
xchg
pusha
inc
cli
rcr
scas
push
cmpsb
lahf
shlb
inc
cmp
lea
jge
cmpsl
xor
jmp
mov
out
cmpsb
mov
mov
adc
adc
pop
mov
inc
repz
sbb
cmp
ret
in
xor
xchg
bound
cli
orw
fildl
arpl
inc
mov
inc
fwait
xlat
rolb
movsb
into
xorb
mov
rcrb
jae
adc
jo
sub
inc
inc
pusha
daa
and
notl
or
jg
lret
mov
sbb
dec
fs
stos
rcl
je
cmp
push
sub
jnp
push
sub
jmp
pusha
sar
pmulhuw
bound
out
int3
in
lcall
add
jmp
push
push
mov
leave
imul
aaa
push
mov
hlt
add
xchg
push
jne
mov
lret
negl
mov
mov
sub
inc
sbb
mov
enter
out
jb
popa
int
dec
loope
mov
pop
xor
rcll
call
jbe
xor
aam
les
pop
sbb
sub
out
pop
cltd
lret
jb
and
lods
hlt
add
loopne
push
pop
jno
divl
cmp
ja
add
adc
test
jle
shrl
out
fisubrs
outsb
jge
or
pop
shlb
cltd
loop
push
adc
cmp
xchg
and
fwait
roll
icebp
fcom
pop
and
insb
fcoms
lods
jns
pop
sbb
dec
mov
cwtl
push
inc
mov
in
nop
pusha
mov
call
lahf
addr16
cmp
xchg
mov
adc
adc
and
iret
call
pop
repz
addl
stc
push
mov
or
mov
jb
add
test
rolb
rcr
aad
mov
xlat
mov
nop
and
call
cmpsl
xor
enter
jne
fadd
aad
push
xlat
ljmp
scas
in
jle
sub
add
das
cmp
les
dec
clc
sahf
imul
dec
xchg
xor
arpl
cld
jl
or
in
and
icebp
fisubl
xor
insl
flds
jl
mov
dec
out
insl
scas
pop
pop
xchg
daa
stos
out
lods
sahf
lock
add
ret
inc
inc
jle
xlat
pop
and
sbb
into
fists
xchg
push
cs
loope
cmp
cmp
nop
mov
push
lahf
mov
dec
mov
adc
ss
jnp
mov
test
add
leave
adc
or
cli
je
xlat
mov
jl
dec
pop
pop
cwtl
cwtl
shrb
jmp
cmp
rcrb
repnz
sub
lcall
in
jle
xchg
mov
push
push
fs
or
pop
and
ror
and
loop
mov
fstpl
add
or
push
mov
xchg
inc
mov
fstpt
and
sub
jmp
imul
sbb
xchg
negl
jae
mov
dec
int
pop
jg
je
or
xchg
dec
jbe
sbb
xchg
cmpsb
mov
mov
divl
std
and
jl
add
ds
mov
xchg
push
lcall
jecxz
out
clc
xchg
adc
stos
jne
xchg
lods
clc
rorl
sbbl
jle
mov
inc
pop
sbb
fbld
inc
ljmp
out
addr16
cwtl
push
sub
movsbl
out
fnstsw
push
aad
sub
fstpl
shll
xchg
xchg
pop
add
ljmp
sbb
push
jg
movsl
arpl
or
arpl
push
fcmovb
fdivr
nop
fcomps
loope
adc
lea
cmp
pusha
xchg
mov
sbb
daa
mov
out
ror
cli
xchg
es
icebp
aas
sub
cwtl
jbe
or
xchg
inc
and
mov
test
rcr
and
jne
int3
and
shl
or
clc
push
ds
lds
or
out
push
add
jnp
lods
push
pop
push
pop
mov
imul
xchg
js
jb
out
mov
ror
popf
daa
lea
pop
push
into
push
pop
mov
cmc
sbb
xor
inc
mov
xor
push
les
test
jbe
shlb
mov
and
dec
ss
iret
cwtl
in
adc
mov
ficoms
sbbl
cmpsb
leave
adc
ljmp
scas
pop
xchg
aas
stos
adc
sub
sub
fidivrs
leave
ljmp
outsl
aas
dec
or
fidivs
stos
test
popf
mov
cld
je
xchg
jns
pushf
out
hlt
jbe
clc
cwtl
in
cmp
imul
mov
iret
negl
test
add
jae
adc
inc
and
adc
jecxz
cmp
arpl
inc
adc
xor
or
add
xor
fcoml
jg
sub
xchg
fisubs
out
and
cs
fs
mov
sub
ss
loopne
fisubrl
add
aam
xor
jo
sub
ja
popa
hlt
fwait
test
pop
loopne
mov
push
ja
fidivrl
repnz
arpl
xchg
mov
imul
cmp
mov
hlt
mov
lea
imul
push
js
pop
mov
sub
xchg
iret
jno
xchg
adc
cwtl
sub
xor
call
pop
movsl
lea
repnz
mov
mov
inc
lock
add
pop
paddsw
lret
int3
xor
fdivp
inc
dec
in
and
addr16
pop
fwait
mov
adc
pop
in
imul
fsts
and
in
out
jmp
notl
mov
fstl
sub
imul
popf
dec
mov
mov
xchg
jle
dec
xchg
sbb
mov
inc
mov
pop
lahf
xchg
mov
pop
insb
jbe
subl
sbb
out
enter
fstpl
imul
mov
aaa
imul
lods
in
sbb
adc
lahf
sbb
shlb
into
pop
jns
inc
push
or
jno
cmp
insl
and
popf
test
in
inc
sbb
adc
insl
cmpsl
loope
int
push
mov
pop
jecxz
idiv
jmp
mov
mov
jmp
movsl
cwtl
xor
ljmp
dec
enter
and
data16
inc
pop
out
adc
dec
sub
pop
adc
test
js
repnz
mov
test
xor
daa
or
es
mov
rorl
mov
or
sub
imul
out
shlb
and
stos
mov
push
stos
test
push
jl
xor
fmul
popa
flds
mov
add
sbb
cwtl
add
scas
xchg
shl
repz
test
xchg
mov
mov
and
add
mov
add
pcmpgtw
cmpsl
mov
test
test
push
iret
or
pop
outsb
ss
pop
mov
xor
test
xchg
les
and
lret
push
out
inc
or
stc
push
add
lret
cmpsl
test
cld
dec
sbb
add
popa
sbb
lods
outsl
cmp
lds
repz
xor
cli
or
arpl
sahf
es
mov
mov
mov
jecxz
lahf
mov
inc
jle
sub
cli
mov
pop
fsubrl
jne
outsl
mov
or
push
rcl
enter
xchg
adc
out
mov
adc
adc
mov
ja
lds
shl
cmc
add
mov
cmp
cmpsb
dec
scas
xor
jge
cs
push
jecxz
xchg
loopne
xor
sbb
dec
stc
pop
mov
es
sub
repnz
mov
mov
enter
sbb
pop
jp
cli
stc
push
push
in
adc
push
cmpsl
and
out
push
inc
jmp
ja
sbb
inc
pop
sarl
pop
int
sar
pushf
cld
cwtl
outsl
mov
or
cmp
or
mov
jg
sti
mov
ljmp
and
daa
mov
inc
les
and
sbb
insb
dec
pop
fstps
icebp
mov
and
mov
insl
cmpsb
out
movsl
mov
icebp
adc
mov
adc
inc
push
imulb
flds
jns
sub
stos
cmpsl
cmp
mov
mov
xchg
lret
movsl
pop
ds
jmp
dec
and
xchg
sbb
repz
mov
in
lret
mov
outsb
rolb
xor
sub
push
es
mov
test
push
pusha
push
mov
outsb
into
mov
mov
iret
add
push
cli
arpl
popf
mov
popf
les
cmc
faddl
dec
dec
repz
out
xor
sub
lock
and
popa
adc
inc
mov
iret
dec
push
es
aam
int
loope
dec
push
xchg
mov
cltd
test
negb
jnp
or
sbb
cmc
cmpsb
frstor
xchg
cmp
sub
les
inc
push
xbegin
push
scas
mov
xor
pop
js
pushf
xchg
sub
sbb
or
or
movb
dec
mov
out
hlt
jns
nop
pop
xor
dec
inc
dec
dec
add
mov
scas
inc
xor
ds
jge
sub
lahf
push
mov
xor
out
sbb
xchg
cmp
xchg
mov
inc
xchg
mov
movsl
xchg
cmpsb
cmp
lds
das
lea
bound
push
ja
lds
or
int
inc
dec
push
out
sub
loope
in
mov
dec
addr16
lahf
pop
jmp
push
mov
insb
dec
xchg
pop
cmc
stos
sbb
sbbb
jnp
mov
xor
xchg
iret
mov
sbb
sub
cmc
mov
lods
jl
out
mov
adc
pop
mov
push
xor
jge
jp
jbe
lods
fld
and
sbb
sahf
jge
test
ret
push
lds
push
ret
outsb
dec
test
pop
clc
add
movsl
jno
sub
push
jmp
xorb
jno
jmp
in
or
push
lahf
mov
lret
outsb
test
in
xor
psrad
adc
inc
dec
aas
pop
lea
cltd
in
push
movsbl
pop
cmpsl
ljmp
push
add
ss
sub
movsl
jo
lret
jns
add
cmp
and
pushf
outsl
jmp
mov
jno
in
mov
lret
insb
pushf
cmpb
ss
mov
enter
push
jmp
mov
sar
mov
xchg
fbld
aam
insb
shlb
mov
jl
push
pop
into
jbe
mov
mov
mov
xchg
fistpll
jp
out
jl
arpl
mov
arpl
or
mov
xor
mov
imul
iret
cwtl
mov
std
jge
jns
xchg
sub
sbb
sbb
shrb
mov
ss
dec
fwait
sahf
or
add
cmp
sti
pop
and
sahf
ds
insl
sub
stos
xlat
test
sbb
es
insb
pop
imul
pop
jbe
pop
gs
mov
jmp
jge
loope
jne
dec
add
in
sub
jmp
gs
push
or
pop
xchg
adcb
inc
sub
scas
pop
pop
mov
cmp
shrl
xor
xchg
xchg
jno
iret
lods
aad
add
in
sbb
jne
mov
aam
je
jecxz
jae
repz
lcall
or
push
sub
imul
xchg
ja
sbb
cmp
leave
daa
addr16
ret
mov
loop
sub
movsb
sbb
pop
cmp
mov
inc
ds
mov
jb
aas
jp
or
sbb
loop
xchg
sbb
pusha
call
lea
jp
pop
fbstp
in
lret
jecxz
push
faddl
dec
fcoml
arpl
mov
xchg
xor
push
cltd
rcrb
add
adc
mov
cmp
xor
ficomps
sub
sbb
and
jecxz
popa
jl
and
jns
cmp
cwtl
cmpsb
adc
mov
jl
jp
mov
jmp
or
fidivrl
inc
pop
jnp
mov
pop
clc
andl
imulb
cmp
jb
inc
imul
out
movsb
ds
mov
push
dec
stos
gs
sbb
adc
rcrb
cmp
mov
arpl
mov
lret
sbb
adc
test
leave
in
ja
aad
mov
pop
jecxz
int3
lods
mov
stos
arpl
mov
xchg
data16
shll
and
ss
sub
mov
addl
adc
hlt
adc
int
mov
jns
mov
and
jl
jae
dec
in
mov
cmp
fadds
cli
xor
sbbl
xlat
aam
cmp
out
roll
pop
jmp
mov
push
fwait
mov
sub
pop
arpl
adc
sbb
dec
jl
or
dec
loope
xchg
cmp
lret
test
mov
lods
lods
in
mov
jns
rclb
shrb
in
dec
mov
sbb
add
pop
inc
xchg
out
lods
aad
sbb
popa
lds
cmp
and
sbb
mov
mov
xor
jbe
lahf
jmp
adc
push
mov
nop
mov
mov
jns
jns
testl
loop
mov
aas
stos
pop
fwait
sub
in
out
push
adc
aaa
mov
into
xor
hlt
rcr
outsl
fs
insb
cmp
xchg
and
dec
pop
sub
mov
cmp
orb
sub
jmp
inc
mov
push
sub
stos
insl
popf
incb
mov
xchg
mov
les
mov
push
movsb
lahf
out
pop
sarb
dec
bound
push
dec
xchg
mov
clc
xchg
leave
mov
xchg
lods
loopne
cmp
and
ss
sub
add
sbb
jne
mov
jp
cmpsb
out
and
jge
or
out
cmpb
xor
imul
jg
pusha
rolb
xchg
fbstp
jge
mov
mov
push
sbb
iret
fistps
jae
sub
adc
jmp
loop
mov
rorb
lret
stos
lcall
mov
addr16
pop
xor
push
rcr
jg
jl
jp
push
or
imull
dec
fmull
adc
pop
xchg
daa
out
mov
loop
mov
sub
dec
faddl
push
int3
aam
adc
jno
ds
inc
mov
push
outsl
dec
int3
fwait
imul
loop
xor
mov
mov
xorl
push
lds
xchg
pop
jo
cmp
and
inc
scas
mov
xchg
int3
and
stos
cs
dec
mov
mov
adc
adc
imulb
xor
rclb
imul
and
sbb
add
or
and
imul
xchg
and
andb
and
jecxz
inc
decl
adc
jno
xor
or
mov
xchg
jle
test
add
push
xchg
cltd
inc
add
adc
push
adc
inc
adc
lods
and
es
jnp
shll
or
popl
call
aad
shll
xchg
es
cmp
jns
daa
inc
adc
jmp
insb
das
insb
ds
daa
ret
pop
insb
cmp
adc
sub
sub
xchg
cwtl
mov
lret
pop
cmp
push
ret
lcall
stos
fcomps
addr16
pop
push
mov
add
inc
lods
aaa
mov
push
pop
xchg
lods
push
xor
shrb
dec
cltd
jmp
mov
xchg
rorl
mov
movsl
ljmp
jns
cmp
mov
fs
mov
jns
ja
in
imul
leave
fiaddl
fisubs
and
xchg
dec
fs
xor
pop
sbb
sub
jp
movsl
ret
mov
movsl
or
nop
inc
sahf
mov
and
int
shll
rcl
stc
ror
scas
jmp
aas
push
jecxz
add
mov
jle
xorb
jg
jle
jge
push
xor
push
jmp
in
repnz
jo
mov
mov
int3
xlat
je
lock
cmp
lods
in
xor
inc
adc
xchg
and
and
jge
cwtl
jbe
flds
je
sbb
and
or
in
in
pushf
pop
dec
dec
stos
loopne
fisttpl
fldln2
enter
or
jns
repz
popf
push
inc
sub
mov
mov
out
mov
enter
inc
sbb
popf
lods
repz
or
je,pt
pop
stos
cwtl
jb
dec
stc
fiadds
jp
inc
ret
imul
mov
cmp
cmpsl
xchg
lods
inc
dec
int
ds
mov
sbb
add
lahf
xor
pop
cmp
add
nop
movsl
inc
cmp
cmpsb
xor
jo
dec
inc
sbb
adc
fwait
cmp
add
lahf
sar
inc
jl
adc
inc
out
dec
mov
add
insl
ds
sub
outsb
fcomp
lcall
int3
stos
cmp
clc
aam
aam
out
repnz
sbb
popf
xor
pop
data16
ja
sub
addr16
and
mov
inc
mov
or
xlat
aaa
cmp
xchg
and
jno
mov
cmp
repz
pop
sahf
mov
sub
pop
mov
movsb
jecxz
addr16
loop
push
fidivrl
je
aam
xchg
jb
add
or
dec
fwait
je
and
in
xor
test
shr
sbb
rolb
xchg
mov
lods
mov
push
dec
enter
inc
mov
push
ds
cmp
mov
mov
xchg
nop
in
or
cmp
roll
pop
shrl
repnz
xor
cmp
ljmp
xchg
mov
xor
jno
icebp
cmp
jne
inc
lcall
and
cwtl
out
lods
sar
incl
dec
push
xor
inc
sub
xchg
xorb
push
mov
dec
add
mov
adc
in
lock
pop
or
push
inc
add
adc
xorb
cmp
jno
sub
inc
mov
xchg
mov
cmpsl
ljmp
push
inc
jle
in
and
mov
xor
js
mov
mov
in
rcll
cld
dec
push
add
les
xchg
sti
sub
out
pusha
lods
mov
repz
mov
xor
xor
loop
repnz
or
inc
out
nopl
and
xor
rorl
loopne
or
les
lret
cs
and
xchg
out
fwait
cmpb
mov
out
jg
jne
mov
cltd
fistpll
mov
xchg
inc
mov
adc
cmp
mov
stos
xlat
pop
aaa
pop
or
adc
jo
and
add
or
mov
fidivl
sub
cli
popf
notl
in
aaa
jb
stc
aam
and
xor
aam
js
fwait
stos
rorb
test
mov
mov
inc
mov
mov
and
cld
mov
push
std
add
lahf
adc
addw
in
testl
inc
aad
addr16
shrb
mov
cmpsb
pop
sub
into
jle
push
ds
push
cmp
inc
std
enter
cmp
js
std
add
jl
out
std
sub
push
inc
push
fidivrl
add
ret
scas
push
push
mov
repz
cli
in
stc
xchg
jb
jge,pt
add
pop
add
cwtl
shll
mov
ret
out
fucomip
adc
sub
pop
add
shll
dec
xchg
xor
cmc
push
xor
cmp
repz
xchg
pop
add
cmc
push
add
in
outsl
pushf
call
adc
js
popa
xlat
inc
mov
je
and
xlat
cmpsb
adc
popa
jbe
int
jge
gs
aam
mov
push
push
fs
mov
pop
dec
sbb
shrl
cmp
fsubs
jmp
loope
shlb
or
mov
jl
call
scas
pushf
pop
xchg
leave
scas
insb
mov
cs
sub
dec
in
test
xchg
xor
mov
cmpsl
xchg
jnp
dec
outsl
loop
mov
add
addb
loop
xchg
out
jb
sbb
movsb
movl
inc
adc
or
add
or
stos
or
in
vmwrite
add
psrad
in
or
in
fsubr
idivl
adc
cmpsl
orl
xor
pop
dec
sbb
mov
clc
lahf
and
pop
pushf
das
out
mov
mov
jo
ret
mov
fs
sbb
jl
test
lcall
mov
sub
ds
decl
sbb
lods
xchg
mov
ss
sub
xchg
sub
jmp
mov
fadds
int3
aam
or
pop
out
pushf
outsb
push
jns
lods
mov
shlb
pop
and
pusha
std
dec
dec
dec
lret
mov
lods
pushl
or
imul
fiaddl
and
fcmovnbe
sub
xlat
push
mov
xchg
sbb
popf
and
inc
jmp
cmp
mov
mov
mov
loop
xor
jbe
xchg
inc
inc
imul
jecxz
fists
test
pop
add
push
pop
addb
mul
jle
push
movsl
push
or
sbb
ds
aad
shlb
shrb
rorb
loop
shll
dec
dec
push
es
xor
hlt
mov
or
dec
addr16
fildl
cmc
stos
pop
xchg
clc
pcmpeqd
fwait
mov
dec
jge
testb
add
pop
adcb
xor
push
push
mov
cmpl
cs
popf
and
ljmp
sub
push
mov
sbb
push
pop
xor
pop
je
mov
cmc
pusha
mov
pushf
rorl
pop
jae
mov
inc
inc
std
xchg
lret
cli
inc
push
dec
insb
adc
and
ret
fwait
xchg
aad
jo
sbb
jmp
add
stc
xlat
notb
xor
pop
test
mov
cmc
lcall
dec
arpl
cmp
stos
pop
xchg
cmp
inc
nop
insb
jp
shl
es
and
jmp
sub
mov
aas
jecxz
adc
lret
adc
xor
mov
ret
mov
xor
jo
push
loop
adc
xlat
imul
aas
push
repz
cmc
mov
fucom
fidivs
sahf
sahf
push
clc
fdivrp
mov
pop
pop
sub
cmp
xor
mov
addr16
hlt
aam
cmc
sub
or
dec
pop
push
pop
and
cmp
lret
add
pop
lds
js
loop
push
imul
in
pop
iret
lods
movsb
jmp
jmp
xor
mov
sbb
cli
bnd
push
cltd
add
push
cwtl
std
loopne
fisubrs
cmpsl
int3
xor
divb
lret
mov
std
pop
je
popa
arpl
xor
arpl
or
add
outsl
out
xchg
es
notl
sub
lds
loop
dec
in
xchg
aad
lahf
loop
mov
dec
pop
mov
dec
dec
addr16
mov
sub
dec
cmp
int
rcl
sbb
ss
pop
jns
xchg
xchg
inc
scas
cli
adc
arpl
shll
aas
or
insb
outsb
das
push
cmp
lret
mov
xchg
and
or
movsl
imul
mov
mov
imul
add
ljmp
lahf
and
rcll
mov
and
adc
xor
stos
xor
and
stc
cmp
mov
mov
std
dec
pop
inc
dec
out
sbb
and
adc
rcll
mov
mov
inc
push
jno
gs
jl
enter
in
pop
or
push
jl
mov
roll
sub
dec
test
mov
dec
aam
dec
dec
outsb
lods
call
cmpsb
pop
aas
mov
shlb
test
cmp
push
out
aam
insb
addr16
jg
rclb
pop
and
jecxz
lods
sti
out
imul
lea
cli
jle
inc
jnp,pt
std
push
lods
sahf
sbb
ret
int
mov
xlat
push
push
push
push
jbe
out
push
enter
shl
sbb
cmp
lret
jo
dec
adc
and
sbb
or
cld
mov
push
xor
call
ljmp
and
mov
lds
inc
xor
sbb
sbb
lret
push
jae
call
jmp
stos
gs
daa
test
mov
add
lret
pop
pop
push
xor
and
mov
lahf
negb
fdivl
testb
sbb
inc
push
sbb
sbb
cmp
pop
pop
xor
js
addr16
shrb
add
lods
and
sub
jle
test
aam
out
ss
lea
push
in
push
rolb
xchg
dec
lret
push
mov
fisubrs
pop
xrstor
in
jp
rol
es
inc
pusha
int
xchg
inc
adc
jne
xchg
jb
les
sbb
pop
dec
clc
sbb
jnp
pop
xchg
pop
push
add
mov
fdivrs
inc
out
pop
jb
mov
loope
pop
cmp
addl
aam
adc
pop
out
mov
mov
repz
shlb
inc
sbb
jp
xchg
or
pop
sub
mov
xor
cmc
mov
pusha
fisubs
jg
mov
loope
inc
adc
fnstsw
pop
cmp
mov
out
icebp
pushf
fisubrl
enter
aaa
rcrl
mov
icebp
sahf
jb
sub
cwtl
movsb
mov
xchg
jmp
adc
insl
and
sub
mov
jbe
ds
jns
sbb
pop
enter
rcr
ja
rep
sahf
in
jmp
iret
cmp
fmul
mov
shll
pop
pop
daa
xchg
mov
mov
lods
sub
and
jb
movsl
inc
outsb
jns
mov
pop
and
test
sub
push
adc
xor
and
icebp
cmp
jp
or
imul
inc
or
xchg
mov
adc
lea
pop
fsubrl
cmovno
lret
fcomps
sbb
mov
jge
mov
mov
add
cmp
jbe
mov
and
mov
iret
dec
lret
mov
xor
fs
push
add
sub
sbb
mov
pop
mov
notb
or
out
pop
mov
shrl
rcrl
mov
in
pop
pusha
mov
mov
test
popl
adc
or
addb
xor
xor
outsb
mov
lea
pop
sbb
add
enter
adc
aad
sub
ret
shl
mov
rcrb
xchg
insb
aam
test
push
adc
mov
cld
insb
pop
cmp
cld
loop
pop
mov
mov
cmpsl
inc
rcrl
dec
push
jl
cmpsl
iret
ret
fidivl
popa
inc
fldt
outsl
xchg
rol
pop
mov
or
frstor
dec
aad
mov
mov
push
lods
addb
push
imull
das
roll
inc
je
daa
pop
xor
push
test
sbb
icebp
pop
stc
idivl
or
jmp
insb
sub
push
in
mov
in
les
orl
sub
push
stc
fptan
roll
loopne
into
movsl
ret
cwtl
mov
test
int3
jo
sub
mov
call
sahf
jl
inc
sbb
fsubrs
arpl
mov
stc
xchg
cwtl
mov
lea
cltd
inc
sub
divl
cli
sbb
add
loop
out
icebp
imul
inc
push
mov
das
movsl
and
sub
ficoml
ss
das
popa
fsubs
ret
or
test
or
jnp
jns
outsl
std
mov
cmpsb
dec
inc
sbb
cmp
inc
xchg
into
ss
pop
jbe
mov
loop
push
ret
xor
pop
xchg
and
dec
imul
mov
jnp
xchg
lret
push
into
fldl
shlb
mov
cli
xchg
imul
call
sbb
jmp
add
ljmp
bswap
add
jno
sqrtps
test
repz
and
push
addr16
fwait
js
or
sub
lret
test
jnp
aam
sbb
sbb
in
lahf
test
push
pop
push
mov
xor
mov
and
pop
out
xchg
aam
ds
clc
jne
push
pop
daa
call
rcrl
pop
mov
pop
fmuls
enter
inc
sti
pop
and
xchg
mov
push
sub
fs
and
jo
cmp
jno
lcall
jbe
add
sub
ds
xchg
push
in
fsubrp
dec
sbb
mov
pop
jbe
sub
xor
ret
cmp
push
lds
stos
xchg
stc
repnz
adc
add
add
inc
sbb
fbld
lods
test
rorl
pop
inc
fmull
push
xchg
dec
mov
std
inc
movsl
mov
inc
adc
or
repz
in
inc
loopne
cmpl
gs
or
pushf
mov
push
xor
and
sbb
push
repnz
sbb
and
xor
jnp
cmpb
push
push
int
sub
pop
push
mov
cmp
test
enter
pusha
dec
dec
mov
pop
sbb
fldl
je
xchg
rcll
ja
mov
xchg
cmpsb
decb
jno
mov
mov
mov
push
movsl
nop
mov
into
xorl
xchg
cmp
scas
push
mov
mov
stos
inc
fstl
rclb
ds
scas
loop
jo
fwait
aas
sbb
pop
xchg
mov
mov
add
les
jbe
xor
xchg
outsl
inc
ljmp
fldcw
movsb
dec
xor
xor
je
neg
pushf
filds
ja
into
pop
dec
cmp
sbb
aam
daa
pop
sub
xchg
mov
xlat
xlat
mov
mov
or
repz
rcl
inc
inc
movsl
mov
push
aad
popf
aam
adc
cmpsl
in
ja
inc
lock
frstor
ret
cmp
dec
fisubrs
es
sahf
inc
cmpsl
das
sbb
mov
in
rclb
push
dec
sub
sub
fdivrl
ffree
loope
mov
push
add
jge
pop
pushf
mov
icebp
rclb
mov
addr16
sarl
fimuls
add
dec
adc
ds
inc
and
popf
ret
pop
dec
hlt
lock
outsb
bound
pop
sbb
lea
or
inc
and
pop
mov
jnp
cmp
fldt
insb
jmp
lods
iret
icebp
or
mov
jmp
ja
repnz
in
test
outsl
repz
pusha
xchg
xchg
and
pushf
and
enter
or
test
cmp
test
add
mov
arpl
imul
lretw
loop
dec
cmp
fistl
pop
insb
outsl
pop
popa
sbb
stos
sbb
lock
fsubs
cwtl
cmp
mov
mov
fimull
and
ljmp
jge
jo
mov
icebp
pop
or
xor
and
sbb
mov
ljmp
inc
xchg
insb
addl
sub
cli
loopne
fsubs
xchg
inc
out
jo
arpl
cmc
dec
ret
sbb
xchg
add
lds
sub
jno
lret
or
rorb
int3
iret
pmulhuw
mov
ljmp
and
rcrl
popa
leave
or
pop
popa
and
int
jae
sbb
mov
loope
data16
jns
sub
add
lods
fnstcw
jl
sub
dec
ds
pop
call
aad
sbb
xchg
sub
push
and
imul
lret
mov
dec
pop
rorb
ud1
stos
push
aam
js
push
inc
mov
push
adc
xorl
cmp
adc
fwait
push
iret
mov
xchg
popf
testb
sahf
nop
push
xor
dec
mov
icebp
aaa
jno
adc
gs
popa
or
mov
xchg
std
mov
sbb
sbb
mov
jnp
sbb
scas
movsb
outsl
ja
lock
mov
jae
xchg
xchg
xchg
icebp
jge
xlat
add
pop
pushf
push
pushf
xor
push
mov
cmpsl
push
repnz
add
mov
xchg
xchg
xor
cli
fstl
lock
insl
push
sti
aas
or
popf
push
dec
pop
mov
pop
pop
adc
fidivrs
hlt
out
lods
aaa
jle
jg
mov
out
cltd
lahf
pop
xor
imul
sub
fstl
push
repnz
insb
jne
mov
cmpsb
push
lods
adc
out
repz
sub
popf
fwait
sbb
aam
dec
dec
sahf
lock
fstpt
cmp
xlat
test
and
loopne
jae
fnstenv
dec
fistl
push
int3
frstor
insl
test
sbb
push
dec
mov
sbb
test
xchg
jae
test
je
and
jnp
cmp
iret
inc
pop
pop
or
sbbl
or
dec
sbb
fnstsw
sub
pop
lret
fistps
lea
imul
clc
mov
mov
dec
js
jnp
pop
or
cmpsb
adc
xor
mov
xchg
ss
dec
rorl
outsb
push
sbb
mov
cmp
in
sbb
pop
sbb
mov
addr16
sub
stos
xor
dec
sub
insl
shr
xor
rorb
jg
out
das
dec
push
or
aaa
push
std
xor
cmc
pop
push
push
cmp
mov
inc
push
bound
dec
mov
gs
out
jp
xchg
push
cld
add
clc
dec
lods
std
sub
mov
mov
insb
js
sub
xchg
lret
and
stos
sbb
adc
insl
mov
inc
cmc
mov
and
cltd
test
mov
inc
dec
or
cmp
mov
or
fldt
mov
add
sahf
or
sub
xlat
fsubrs
popf
shlb
mov
rcl
add
cmp
xchg
ja
push
ljmp
xchg
rcl
and
or
mov
and
inc
call
adc
mov
aad
or
int3
cmp
cs
lahf
fmull
xor
cwtl
scas
mov
into
in
push
repnz
mov
add
fwait
and
add
cmp
sub
sbb
js
fsubrs
push
pop
popa
lret
mov
push
int3
pop
aam
cmp
std
notb
inc
out
sub
loope
mov
cmc
cld
test
int
rolb
aaa
dec
sub
scas
adc
adc
add
shl
popf
mov
js
movsl
shlb
push
xor
loopne
jecxz
orb
mov
add
cmp
out
jno
ljmp
jmp
push
fimuls
in
negb
pop
dec
push
lock
push
les
pop
adc
mov
sbbb
xor
ret
xor
add
and
pop
inc
lea
mov
mov
xchg
push
sahf
dec
cmpsb
inc
push
xchg
test
cmpsb
jne
push
std
in
insl
pop
cltd
inc
inc
aas
and
insl
add
mov
std
cmp
add
iret
cmp
xor
popf
or
lahf
mov
sub
add
push
and
inc
ret
sbb
push
lea
or
pextrw
xchg
cli
cmp
iret
or
and
jge
std
in
cld
mov
jecxz
ret
orl
mov
in
fidivrl
add
jl
inc
dec
clc
mov
outsl
pop
or
pusha
xor
aad
add
xchg
push
or
int3
cmpl
push
in
xchg
xor
and
popf
fstp
dec
in
jae
dec
xor
fwait
pusha
ljmp
pop
ret
mov
out
dec
jno
jp
sbb
cmp
outsb
and
mov
cs
lret
sub
add
data16
std
out
add
movsb
xchg
push
jl
std
jle
inc
call
ror
xchg
pop
sbb
mov
fwait
aam
inc
dec
xor
inc
das
in
pushf
das
push
jp
inc
insb
jns
test
out
xchg
cwtl
lods
xchg
adc
ret
mov
jle
fs
or
cs
movsl
addb
lret
add
les
out
pop
sahf
mov
mov
mov
pushf
mov
fisubl
mov
rcrb
popf
aaa
clc
fxch
xchg
scas
popa
sbb
ud0
mov
fnstenv
or
loop
clc
jnp
jmp
dec
scas
mov
pop
lahf
lcall
test
repnz
xchg
mov
imul
pusha
hlt
push
ret
shlb
pushf
push
or
jge
inc
loop
mov
add
lcall
dec
pop
xchg
push
sysenter
ljmp
out
mov
das
push
outsb
push
mov
int3
push
idivl
mov
jae
das
add
bound
dec
movsb
xor
sbb
cmp
push
dec
mov
dec
int3
in
fldlg2
fucomp
stos
cltd
mov
or
xor
sbb
cltd
lret
xchg
mov
fstpl
sarb
and
test
les
in
ret
mov
mov
dec
and
sbb
std
and
leave
push
cmp
add
shll
xor
xchg
and
or
add
in
test
test
les
sbb
pop
repnz
sbb
fcomi
cmp
sbb
arpl
sbb
dec
int3
fwait
cmp
adc
pushf
aad
push
jmp
psrlq
mov
xor
sti
push
subl
bound
mov
sub
movsl
rorb
dec
adc
cmc
xchg
xor
push
inc
int
and
inc
movsl
xor
cltd
mov
cmp
inc
jae
sub
xchg
js
cmp
jne
fsubrs
adc
or
test
jo
sub
divl
mov
xor
popa
hlt
test
jb
jnp
aam
push
addr16
jecxz
aad
mov
loope
pusha
inc
aaa
fcmove
int
js
jne
pop
sub
nop
mov
mov
cmp
dec
xchg
movsb
xchg
adc
xchg
xchg
sbb
subb
test
popa
sbb
pusha
xchg
cmc
mov
sub
jae
mov
push
movsl
mov
jno
js
paddusb
sbb
push
mov
xchg
test
mov
xchg
mov
and
xchg
cmp
mov
std
add
ds
int3
std
mov
xor
rorl
lret
loope
scas
lret
push
sete
dec
sahf
add
cli
pop
inc
dec
stos
icebp
int
das
mov
pop
add
xlat
in
and
jne
jno
jno
mov
movsb
sbbb
xchg
out
adc
dec
lret
stos
nop
sub
inc
data16
add
jecxz
loop
xor
loop
mov
in
dec
dec
repnz
sub
adc
lea
loope
xchg
cwtl
addr16
jne
mov
push
jbe
xor
sbb
push
repz
push
int
fcmovnu
jnp
and
xor
faddl
or
ja
es
cli
lahf
or
jmp
xlat
fs
xor
ja
lahf
push
jl
cmc
ret
pop
mov
xchg
inc
and
test
cwtl
cmc
jbe
lcall
cmc
jmp
cwtl
dec
jge,pn
push
cmp
ret
mov
adc
jo
pop
xor
outsl
dec
push
and
repz
stc
jnp
repz
fnstcw
sub
mov
outsb
cli
jno
in
call
xlat
adc
mov
pop
lahf
xor
jle
pop
sbb
push
int3
dec
and
js
or
xorb
mov
ficomps
sub
loopne
mov
mov
cwtl
push
notl
or
pop
ret
pop
mov
xchg
inc
and
dec
sub
outsl
push
add
inc
js
mov
pop
pusha
inc
inc
cmpsl
shrb
mov
imul
mov
ja
xchg
push
ja
loop
jge
jle
xchg
aad
into
mov
cs
jns
cmp
pop
jmp
mov
lret
test
inc
mov
lret
mov
xor
jl
ret
add
jp
loope
pop
lahf
out
std
arpl
xchg
dec
mov
adcl
pop
addr16
jg
mov
mov
out
insb
out
add
pop
xorl
lods
pop
push
inc
les
fistps
jne
cmp
lea
jg
repz
and
dec
addl
lea
je
pop
pop
je
sahf
mov
mov
sbb
outsl
sbb
outsb
mov
stos
dec
jge
xchg
orb
je
inc
pop
pop
addr16
cmp
xchg
jae
in
push
iret
fadd
dec
test
add
stos
dec
cwtl
lods
jb
pop
xor
hlt
loope
or
inc
xchg
mov
lret
and
pop
test
xor
mov
cmp
andl
std
shll
cli
mov
and
mov
sbb
push
nop
lea
out
js
nop
dec
je
cltd
stc
dec
sbb
inc
jecxz
daa
hlt
sub
rclb
movsl
out
pop
mull
js
iret
mov
icebp
out
or
sub
test
cmp
or
int3
sbb
lea
or
lds
mov
or
leave
lds
add
loop
jg
arpl
xchg
inc
xor
ret
and
test
leave
arpl
xor
cmp
and
mov
inc
dec
sbb
movsl
inc
jmp
push
jecxz
and
movsb
insl
pushl
mov
jbe
add
sub
adcl
daa
or
pushf
out
stc
adc
inc
outsl
adc
jae
cld
les
shlb
imul
in
push
movsl
add
jle
cmp
insb
mov
mov
mov
mov
into
pop
jmp
xchg
jns
cld
in
xchg
and
cmp
and
xor
jl
loopne
shlb
or
cmp
mov
xor
pop
sub
sti
lock
je
xchg
out
mov
fildl
mov
movsl
jecxz
xchg
js
scas
mul
ja
cmp
pop
xchg
push
and
xchg
mov
xchg
push
nop
je
jnp
cmc
mov
in
dec
jp
js
jne
push
jg
pop
sbb
xor
sbb
mov
xchg
stc
sub
add
jo
imul
aas
inc
jle
call
shr
sbb
insb
jmp
adc
xchg
mov
push
mov
sarb
push
shrl
mov
push
ret
movsl
cli
fwait
aam
xor
test
xchg
inc
popf
xchg
or
ja
loopne
lret
cmp
xchg
pop
fldcw
sub
sbb
mov
mov
jo
push
scas
push
mov
pop
es
repz
insb
sub
test
test
sbb
stc
sub
fnstsw
jns
sub
addr16
in
and
jmp
jecxz
xchg
js
xchg
push
pop
mov
pop
jns
jns
cmp
lock
das
xchg
shll
cmp
inc
xlat
enter
repnz
enter
or
nop
mov
call
test
icebp
cmp
cs
out
nop
nop
lcall
mov
xchg
mov
call
pop
push
out
jns
push
xlat
pop
in
fidivl
movsl
xor
sbb
stos
xchg
xor
xchg
insb
out
out
jb
into
add
subb
and
inc
fwait
cmp
movsl
push
xor
sarb
icebp
fists
or
push
sbb
adc
lods
lcall
or
hlt
and
loope
mov
lcall
dec
xor
lods
repz
data16
aad
xor
cmp
and
rcll
push
lcall
sub
jg
pop
pop
inc
jnp
mov
jge
outsl
test
dec
push
movb
fmull
daa
popa
xor
ds
and
jno
push
xor
pushf
movsb
dec
mulb
mov
imul
popa
push
fst
push
fisubl
dec
push
mov
jg
push
sahf
lea
add
iret
push
mov
adc
sahf
cmp
mov
add
xchg
call
sbb
test
in
and
sub
lods
adc
mov
adc
cmp
fcompl
mov
pop
sbb
add
pop
movsb
xorb
pop
mov
iret
inc
loop
fs
mov
popf
mov
ja
data16
andb
or
add
divb
fninit
jp
and
mov
push
repz
inc
inc
lea
rclb
ljmp
dec
icebp
out
sub
bound
push
mov
jae
stc
imul
rcll
mov
repz
xchg
sbb
cmp
and
add
or
repz
mov
adc
dec
pop
sti
adc
fcompl
mov
and
mov
push
pop
mov
mov
push
xchg
xor
xorb
out
inc
xchg
xor
or
out
test
fs
or
mov
lock
gs
movsb
gs
mov
sub
xchg
incl
jg
mov
stos
mov
cmpsl
mov
mov
push
ljmp
out
ss
sub
xchg
jo
lods
adc
subl
incb
xor
jne
js
push
rolb
mov
inc
adc
aad
jp
or
push
repz
push
scas
loop
jb
jle
hlt
xchg
mov
js
shll
outsb
mov
out
xor
add
je
stos
out
insl
ds
les
arpl
andb
sbb
icebp
inc
push
sub
int3
lods
int
out
push
cmpsl
std
mov
mov
pop
add
inc
mov
jecxz
jmp
or
pushf
lea
xchg
jno
cli
ja
fsubrp
es
push
mov
jo
mov
add
jns
repnz
cmp
pop
pop
inc
aam
sbb
mov
nop
lods
pop
push
jg
sahf
lea
sub
out
fbld
cmp
fisubrs
or
lret
sub
xchg
imul
pop
sbb
jno
jne
nop
aad
sub
cmp
fisubs
call
xor
iret
test
or
fldt
mov
lods
out
gs
cld
js
pop
notl
out
jo
add
mov
lcall
mov
xorl
adc
roll
add
jge
cs
push
dec
and
dec
jnp
cmp
mov
push
dec
out
or
push
mov
cmp
sub
sub
ja
daa
or
test
jo
dec
xchg
or
stos
push
mov
loopne
push
lods
dec
push
dec
mov
je
add
mov
lret
in
hlt
adc
lods
pop
cs
xchg
add
sub
into
divb
sub
inc
aas
iret
adc
pushf
adc
mov
sbb
pop
cmp
xchg
popl
ja
inc
xor
push
lock
sub
push
push
push
gs
cmc
cmpsl
shl
sbb
xchg
movsb
lods
std
nop
fisubrs
push
jmp
call
add
lret
lea
cmpsb
add
jge
jle
jno
xor
fptan
xchg
and
ret
inc
cli
sarb
mov
add
ret
or
imul
in
xchg
dec
add
repz
mov
fmul
lods
jno
adc
test
xchg
xor
pop
push
jo
repnz
movsb
xchg
icebp
jnp
mov
pop
cmp
cmp
inc
mov
adc
out
or
hlt
mov
gs
test
insb
add
add
cmpsl
sub
pop
lock
push
icebp
mov
mov
xor
ja
add
out
sub
xchg
mov
mov
call
push
push
jecxz
push
in
iret
xor
ds
and
int
movsl
sub
xlat
pop
loop
adc
adc
xchg
clc
mov
mov
enter
push
adc
push
test
pop
adc
xchg
push
icebp
cmpsl
and
stos
loopne
lcall
incl
jl
sbb
mov
jge
lret
or
mov
mov
and
arpl
dec
rorb
das
xor
in
dec
mov
sbb
sbb
test
or
andb
data16
pop
lea
inc
movsb
xchg
push
cwtl
push
addr16
in
fsubrs
pand
repnz
push
xor
out
outsl
imul
jmp
movsl
pop
jo
dec
pop
scas
xor
sub
push
addr16
or
or
je
inc
pop
mov
out
and
jbe
es
repz
mov
hlt
bound
adc
dec
dec
sbb
cmp
push
xlat
sbb
pop
fs
adc
dec
jae
in
adc
mov
jp
xchg
ss
pop
sub
outsb
push
sbb
add
mul
movlhps
sub
fldpi
fwait
add
push
cmp
jg
jb
aaa
pop
mov
pop
dec
cmp
cmp
stos
sbb
sub
sbb
out
jl
or
xchg
pop
xor
fstp
pop
imul
ficompl
insl
fisubrs
movsl
aas
mov
sbb
mov
pop
inc
ljmp
fnsave
adc
push
sti
mov
or
mov
cmpsl
sub
sub
mov
fsts
test
cs
imul
or
addr16
push
cmp
mov
pop
addr16
or
mov
sbb
push
scas
ljmp
push
daa
inc
ret
xor
outsl
ss
sbb
mov
xor
mov
sub
pop
sbb
in
mov
add
scas
add
jnp
idiv
in
sahf
mov
jecxz
jbe
cmp
repnz
add
jg
insl
fildl
jge
xchg
jl
pop
xlat
fisubrl
push
out
mov
xor
adc
cmp
xchg
pop
mov
cmp
push
push
jns
xchg
xchg
fisubl
loop
pusha
pop
cmpsl
icebp
enter
mov
imul
or
arpl
and
pop
mov
pop
jne
xor
mov
sbb
sbb
outsl
pushf
push
dec
mov
loop
or
addb
sahf
add
repnz
mov
cld
sbb
mov
xlat
sub
pop
add
inc
dec
mov
lret
cmpsb
mov
popa
iret
jg
push
sub
fidivrs
insl
push
rcl
enter
shlb
dec
leave
sahf
dec
pusha
lcall
cmpsb
adc
mov
das
std
inc
xor
loopne
nop
in
jle
sub
mov
push
pusha
xchg
fsubrs
push
lret
pop
icebp
mov
in
mov
inc
xor
cmp
setns
stos
pop
sti
or
nop
sti
fwait
sbb
sbb
cltd
inc
jns
mov
cmc
xchg
push
jecxz
imul
and
mov
adc
add
inc
ficompl
add
dec
push
repz
mov
stc
inc
aam
fnstcw
mov
cmp
cmp
sub
mov
inc
scas
mov
sti
sbb
shlb
outsl
shl
xchg
pop
sub
pop
repnz
das
stos
push
pop
stc
and
clc
and
and
insl
sti
pop
popf
jg
mov
pop
out
repz
idiv
stos
mov
test
mov
jmp
aas
pushl
andl
scas
or
xor
jl
and
lret
cmp
xchg
and
sahf
pusha
dec
fwait
pop
inc
fwait
xlat
and
addl
leave
repnz
push
xor
sbb
test
xor
movsb
inc
adc
dec
call
mov
or
sub
jmp
hlt
add
dec
cmp
out
insl
push
push
into
mov
addr16
dec
addr16
hlt
jle
cld
clc
dec
das
sahf
push
enter
fisttps
xchg
pop
int3
pop
out
aas
push
test
push
pop
sar
fistpll
mov
addr16
aam
or
mov
jl
push
imul
popf
xor
jl
inc
sub
push
out
adc
xchg
mov
pushf
inc
xchg
movsb
xor
call
push
pop
pop
push
popf
movsb
pop
xor
push
in
out
repz
mov
xchg
sahf
cltd
test
cld
out
ljmp
mov
adc
movsl
loop
sub
sub
pop
imul
jle
jl
mov
faddp
jmp
sbb
mov
inc
test
test
pop
popa
pop
xchg
cltd
adc
daa
rcrb
mov
cmpsb
lret
jecxz
rolb
int3
lcall
xchg
mov
inc
test
jecxz
pop
daa
jne
sub
push
lea
adc
dec
push
lock
mov
mov
and
jb
jae
fwait
lea
push
sarb
push
add
add
popf
mov
push
enter
inc
xchg
push
nop
fnstenv
loopne
loope
jb
sbb
popa
mov
pop
jns
inc
daa
jne
sub
mov
rcrl
outsl
ds
sar
out
adc
lahf
test
or
cmpsb
imul
dec
push
sub
cmp
ds
inc
icebp
cmp
call
sbb
adc
mov
sbb
popa
and
pop
outsl
test
pop
mov
jg
lock
inc
inc
xchg
mov
inc
add
repz
mov
push
in
repnz
jg
mov
mov
icebp
push
fbld
std
movl
bnd
dec
pushf
jle
mov
pop
into
pop
push
mov
add
inc
cmp
stos
ds
std
sub
testl
inc
jne
push
add
inc
push
pop
sbb
stos
pop
jo
shrl
rcl
pop
lret
sub
je
sbb
sbb
inc
decl
mov
dec
or
stos
aad
sbb
or
mov
loope
clc
xchg
scas
xchg
dec
xchg
mov
xor
insb
in
add
imul
sbbl
push
test
rcrb
sbb
ja
gs
aam
cltd
mov
frstor
in
jecxz
inc
jno
jo
aam
dec
jmp
pop
push
inc
push
in
sub
jno
xchg
pop
cli
and
test
inc
inc
cli
outsb
inc
xlat
xor
lcall
jle
cwtl
lret
shl
and
dec
in
mov
aam
fdivrs
push
aas
cmp
das
orl
mov
xchg
mov
mov
push
int
or
sbb
rcrb
mov
inc
rclb
fstpt
push
out
mov
vminpd
pop
lds
cmp
fwait
push
cmp
fbld
inc
push
lods
xor
ret
adc
xchg
xor
out
lret
das
mov
xor
out
dec
dec
mov
xchg
mov
and
repnz
popf
jp
jno
int
push
mov
and
cmp
pop
popa
lahf
mov
add
dec
xchg
pop
nop
in
mov
mov
and
jne
pop
mov
pop
call
enter
xor
and
cli
std
ja
mov
jl
icebp
sub
mov
cld
dec
pushf
add
shlb
mov
lods
mov
xor
pop
ds
pop
in
adc
xchg
addr16
outsl
adcb
adc
insb
mov
mov
push
repnz
inc
xchg
rcl
cmp
shlb
xchg
aam
jae
cmp
in
jp
ret
in
aas
cwtl
pop
pop
fdivl
mov
pop
xor
sbb
int
push
sub
lods
addr16
xor
hlt
out
sub
inc
sahf
cmp
aam
leave
xchg
jne
mov
hlt
fadd
adc
ljmp
mov
aad
icebp
je
push
add
jle
jae
fsts
das
xor
inc
das
dec
pusha
lcall
push
sbb
das
rorl
pop
or
jnp
jne
lret
scas
ss
test
int3
xor
int3
mov
inc
into
lahf
mov
xchg
outsb
clc
jge
loopew
dec
mov
adcb
ljmp
xchg
fnop
cwtl
daa
insb
push
xchg
data16
dec
push
push
xor
mov
dec
shll
cmp
add
pop
cs
repz
sub
sbb
mov
in
push
popf
cmpl
inc
xlat
in
int3
mov
fdivrl
mov
or
aam
sbb
fs
shl
mov
cmc
daa
mov
adc
or
roll
cmp
adc
dec
fdivs
repz
sbb
pop
insl
jge
cld
mov
jle
and
xchg
inc
push
iret
lret
popf
js
fwait
pop
out
adc
js
out
frstpm(287
push
in
bound
jns
test
adc
pop
movsl
loope
adc
cmp
jo
jmp
inc
mov
js
aad
mov
adc
xchg
cmc
imul
adc
out
sbb
pop
sbb
add
in
sub
sub
add
shl
repz
mov
idivb
inc
and
push
jne
jge
add
adc
xor
push
cmp
add
mov
cmpb
lret
test
mov
test
pop
or
jge
lahf
shrl
imul
xor
push
cmp
inc
test
mov
faddp
sti
ja
jae
add
xor
fidivrs
ret
xlat
sub
jnp
jecxz
cmc
stc
pop
popa
dec
fcmovbe
adc
jbe
test
inc
clc
outsb
imulb
sbb
push
or
fstl
sub
push
mov
push
mov
jp
daa
data16
cmp
sub
repz
dec
push
test
xchg
mov
sub
inc
and
shlb
fsubr
imul
mov
jae
inc
idivb
ret
sbb
in
cmp
imul
icebp
dec
and
adc
addr16
push
inc
imul
stc
mov
sub
inc
ret
sub
insl
gs
jne
jecxz
push
stos
xchg
xchg
xchg
mov
mov
frstor
fistps
pop
adc
push
add
sbb
jmp
add
pop
cmp
mov
mov
xchg
adc
xchg
mov
int3
fwait
xor
out
shlb
pop
fwait
int3
sub
je
xchg
dec
xchg
adc
es
hlt
in
dec
push
dec
ja
or
add
data16
inc
push
push
sub
aas
push
imul
test
push
sub
mov
mov
adc
jg,pt
push
adc
into
jne
mov
addr16
add
cltd
iret
lahf
xchg
fadd
test
in
jge
mov
jns
icebp
adc
mov
nop
dec
dec
iret
xor
sbb
stos
inc
cmp
inc
pop
loope
add
clc
add
clc
and
daa
inc
addr16
push
iret
sub
pop
pop
add
dec
dec
inc
addr16
sarb
push
outsl
mov
jns
test
push
in
icebp
cmpb
cmpsb
fildll
jo
dec
cld
popa
negl
mov
sbb
lds
in
testb
das
or
push
xchg
sti
rcrl
iret
and
dec
or
or
test
adc
pushf
in
ja
push
stos
inc
cli
xlat
adc
loop
lret
push
mov
bound
das
mov
test
push
addr16
mov
xchg
stos
sbb
mov
and
add
jbe
mov
cmpsb
shll
sahf
shrl
mov
adcl
pop
out
sub
adc
out
insl
mov
and
xchg
xor
mov
cmp
insb
dec
test
leave
fiadds
loope
sub
addr16
filds
mov
push
fmull
aam
mov
scas
insl
mov
call
inc
xor
pushf
add
pop
pop
xchg
pop
add
pop
xchg
popf
xchg
in
enter
push
sub
mov
in
clc
imul
les
cmp
jns
arpl
add
test
mov
or
jne
jp
jmp
inc
cmpsl
addr16
test
jae
mov
aaa
repnz
fdivrl
push
fcmove
push
popf
mov
pop
adc
xchg
ds
jle
testl
lcall
lock
sbb
mov
inc
lret
mov
adc
jne
lds
mov
jo
jl
push
add
daa
cmp
xor
imul
xchg
mov
enter
call
xor
cmp
dec
mov
mov
cmp
les
mov
add
sti
fbstp
dec
and
xchg
push
and
and
jmp
stos
in
add
in
and
xchg
jl
clc
je
cld
int3
dec
pusha
or
xor
call
lods
cwtl
sbb
cmp
call
mov
sub
inc
push
int3
adc
sbb
stos
dec
xor
insl
xchg
leave
dec
xchg
mov
imul
data16
xlat
addr16
cltd
sti
jne
xor
sbb
roll
push
fldl
inc
rorb
in
pop
leave
enter
out
fidivl
pop
je
xchg
mov
or
or
cmp
push
leave
out
mov
and
dec
pop
sbb
sub
mov
cltd
incl
es
mov
adcl
mov
cli
repz
imul
aad
pop
aas
mov
and
pop
mov
lret
add
jo
psraw
xorb
mov
xchg
add
mov
loop
push
mov
ret
in
loop
imul
xchg
push
data16
dec
pushf
aas
iretw
jg
lock
xchg
mov
imul
int3
repz
pop
fs
mov
add
xchg
incl
je
int
jle
shrl
jmp
or
sbb
inc
xor
mov
and
pop
xor
int
pop
pusha
xchg
lret
aas
test
bound
out
flds
fcomps
cmp
insl
mov
ss
jp
adc
mov
mov
fcoms
stos
les
jo
jo
jmp
lock
ror
dec
cmpl
repz
data16
adc
push
in
arpl
adc
dec
xor
sti
out
cmp
mov
mov
sahf
inc
cmp
adc
pop
fs
add
xchg
push
loope
outsl
pop
add
add
aad
sbb
outsb
stos
aam
imul
dec
or
jne
jae
sbb
mov
pushf
pop
mov
test
xor
sub
and
pop
nop
ret
lods
cmp
dec
pop
shr
cmp
and
mov
add
pop
loop
cld
imul
call
mov
shlb
adc
cld
ljmp
xchg
dec
test
shrl
push
push
sbb
ljmp
lods
arpl
push
stos
gs
xchg
push
sbb
aad
ret
and
add
jmp
mov
xchg
xchg
dec
data16
mov
gs
fsubrp
daa
repz
sti
inc
loope
fcompl
xchg
pop
jle
stos
jns
lahf
iret
das
adc
cmp
lea
insl
xchg
dec
sub
xchg
mov
cmp
scas
fcomi
or
sub
in
jmp
sub
push
push
in
nop
addl
out
or
jle
aad
fadds
stc
insb
mov
cmc
xchg
gs
inc
imul
std
imulb
mov
push
push
daa
subl
mov
popa
in
cmp
sbb
xchg
adc
xor
mov
shrl
sub
repz
push
fsubrs
btr
dec
outsb
and
imul
push
xchg
mov
sub
mov
fdivr
push
add
je
icebp
movb
inc
call
idivb
sub
daa
cwtl
mov
out
and
lahf
icebp
sub
call
push
adc
scas
push
mov
int3
fisttpll
and
daa
or
or
xchg
outsb
aas
sti
cmc
xor
sub
fldcw
sub
je
je
adc
push
cmp
and
ret
pop
insb
repz
pop
sbb
jno
jp
sub
mov
inc
pushf
pop
sbb
fstl
mov
inc
dec
add
fisubrs
insl
pop
cmpsb
gs
push
add
inc
ja
inc
mov
mov
mov
inc
lahf
mov
sub
push
mov
dec
mov
cmp
xchg
int3
in
pusha
push
lds
xor
out
cmpl
push
or
fucomip
sub
out
test
clc
shrb
out
mov
cmc
mov
sti
cwtl
xchg
inc
xor
stos
push
inc
imul
call
sub
inc
cmp
push
mov
adc
push
mov
mov
lods
add
jo
movsl
ficompl
dec
push
add
sub
or
pop
test
es
aaa
mov
jg
fisubrs
mov
sbb
in
jb
enter
add
test
push
and
lret
movsb
pushf
xor
sahf
test
cmp
add
clc
xor
in
xchg
pusha
rorl
pop
mov
push
rcrb
and
xlat
cmc
sub
cs
xor
pop
push
adc
adc
mov
imul
adc
xor
sub
add
sbb
dec
push
sub
andb
mov
pop
sub
in
outsb
cwtl
sbb
testl
addr16
xchg
and
pop
cmpsl
sub
shll
sbb
sbb
push
outsb
inc
lds
mov
xchg
pop
push
inc
lret
leave
les
pusha
cmpsl
nop
sub
dec
adc
add
fnstcw
out
insl
sbb
inc
movl
lds
out
mov
fsubrl
in
stc
lods
pushl
es
jb
add
or
fbstp
fiadds
sbb
iret
dec
pop
fwait
test
pop
movsl
xchg
inc
add
cmp
scas
mov
outsb
arpl
jo
out
loopne
dec
std
inc
movsb
cmp
jns
adc
aad
icebp
in
into
addr16
dec
insl
sbb
test
arpl
mov
and
jl
sarb
mov
jo
in
jg
sbbl
aaa
or
inc
aad
scas
push
xchg
dec
jae
adc
pop
pop
scas
adc
ret
or
addr16
dec
movsb
mov
sbb
adc
int
inc
fsubr
dec
xchg
lods
xchg
and
mov
cmp
jmp
mov
outsl
sbb
ds
pop
fnstcw
jnp
inc
decl
movlps
cltd
push
nop
push
ja
sub
dec
cmp
mov
add
mov
add
std
out
dec
call
jns
stos
lds
sub
in
jne
je
out
sub
fmul
dec
jmp
testl
push
lret
mov
or
into
pusha
mov
enter
loop
cwtl
cmp
fcmovbe
orb
lds
pop
das
push
in
arpl
lcall
scas
pop
mov
mov
out
fisubrs
push
adc
push
cmc
ja
pop
cmpsb
jmp
sub
and
mov
imul
sub
das
mov
int3
imull
test
dec
cmpsl
jbe
stos
inc
pop
movsl
popa
ficoml
push
dec
push
inc
popf
inc
lea
sbb
push
jle
mov
call
xchg
mov
jge
add
mov
or
pop
das
imul
sbb
loopne
mov
inc
xor
sahf
ret
shll
fs
fdivl
pop
data16
mov
sbb
jp
sbb
test
pop
int3
sub
fstps
rorb
xchg
ficompl
cs
mov
mov
mov
es
inc
sarl
inc
dec
lret
jae
mov
test
pop
inc
push
mov
repz
nop
mov
pushf
sti
dec
xlat
push
jl
lret
fcmovbe
or
iret
leave
xchg
adc
imul
xor
test
shr
movsl
pop
je
mov
sahf
dec
jmp
pop
ss
test
mov
idivb
xlat
push
mov
mov
and
insl
gs
push
xchg
dec
sbb
xor
pop
push
dec
test
push
push
sahf
mov
jecxz
adc
out
aas
jp
push
outsl
and
xor
call
out
out
push
adc
lds
and
insb
insb
xchg
je
popa
cmp
cmp
imul
loope
push
clc
cmp
insb
cmpsl
outsl
fbstp
jno
push
xor
xchg
lods
jno
sbb
dec
mov
xchg
dec
add
into
mov
adc
je
lock
daa
pop
xchg
dec
pop
inc
lock
jle
xor
insl
push
stos
negl
fcompl
push
push
cmp
fs
sub
add
insb
insb
push
loop
pushf
push
cmc
mov
movsb
or
scas
ljmp
sbb
add
iret
mov
push
jg
fidivs
fildll
fdivs
nop
hlt
cmpsl
dec
jmp
lret
out
fcomi
cmpsb
cs
enter
cmpsb
jmp
vmovss
cld
or
sbb
dec
pop
sub
in
das
scas
call
aas
push
ljmp
pop
xchg
sbb
repnz
jno
inc
adc
fwait
cmp
push
hlt
popf
jbe
pusha
ds
pop
mov
and
jecxz
shlb
jnp
mov
aad
test
xor
or
aad
push
mov
dec
jo
add
sub
cmp
lds
fadds
leave
sbb
cli
jno
cmp
or
notl
fldt
inc
xor
pop
fadds
pop
scas
or
push
aas
push
xchg
xor
fisubl
and
sub
loopne
cmp
mull
nop
push
movsl
push
in
ficoml
sbb
ds
inc
jno
mov
rclb
inc
test
pop
xchg
aad
cmp
jns
mov
jne
mov
sbb
pop
lods
jb
mov
jle
push
idiv
in
scas
movb
stc
dec
mov
es
shrl
sarl
cs
sbb
jns
mov
sub
cld
pushf
ret
pushf
cmp
inc
mov
xorl
or
jno
push
add
xchg
adc
cmp
lcall
jmp
aaa
mov
mov
xor
xor
sbb
inc
and
setg
xchg
in
add
mov
das
in
xchg
inc
jmp
inc
int3
pop
lahf
pop
cmp
fsubs
pop
cmp
clc
mov
adc
xor
lret
pop
imul
push
aaa
cmpsl
adc
loop
lock
push
lock
sub
or
scas
lds
cmp
stos
fstps
and
cmp
sub
pop
mov
sbb
jo
icebp
inc
cmp
out
dec
jecxz
mov
mov
push
outsb
cmpsb
jmp
vmovss
cld
or
sbb
dec
pop
sub
in
popf
insb
shrl
push
pushf
aad
jle
cli
sub
and
mov
inc
add
pop
ret
sbb
ljmp
adc
addl
stos
pop
adc
cmp
outsb
xchg
xchg
fisubs
push
or
sub
cmp
inc
dec
lcall
insl
xchg
cmp
movsl
sti
lods
mov
shlb
aas
jle
or
stos
cmpsb
sbb
std
mov
pop
cmp
out
sti
add
sbb
lcall
pop
jbe
out
sti
adc
test
jbe
loope
hlt
sbb
jmp
out
sub
jnp
mov
stos
cli
bound
lcall
arpl
fcomps
jne
push
icebp
push
adc
or
xchg
fildll
je
mov
add
bound
cld
leave
lea
repnz
shl
mov
ret
sarb
push
push
pop
inc
push
rorl
sbb
lahf
movl
cmp
test
decb
or
push
jge
cmp
clc
ret
push
clc
lret
clc
aas
ljmp
push
sub
enter
mov
mov
cmp
adc
or
mov
push
cmc
popa
int
adc
pop
stos
push
mov
inc
jno
mov
add
jne
xchg
movsb
lret
mov
mov
cmp
add
int
mov
push
pop
fmul
jno
iret
rorl
js
xor
hlt
dec
xor
xchg
loopne
rcll
fnstcw
movsl
xchg
mov
mov
mov
mov
pushw
push
scas
lock
xor
and
inc
xor
int
pushf
outsb
cmc
pop
adc
inc
movsb
inc
cltd
cmpsb
neg
sub
inc
int
cwtl
nop
jecxz
sahf
dec
push
xchg
repz
lods
nop
test
jle
pop
push
mov
and
mov
clc
sub
xchg
mov
or
stos
call
add
mov
and
xchg
push
out
lea
mov
mov
add
xchg
xor
lea
sub
shl
popl
jb
xchg
xor
mov
xchg
or
push
aas
push
xchg
xor
mov
ljmp
xor
lahf
xchg
in
rorl
mov
testb
arpl
nop
movsb
mov
pop
loop
push
or
in
mov
adc
push
mov
adc
stos
in
mov
addb
mov
nop
mov
mov
mov
push
lock
insb
add
jecxz
or
adc
dec
sub
mov
insb
cwtl
push
dec
cld
dec
add
xor
push
addr16
clc
and
inc
stos
or
les
orl
aaa
loop
push
jnp
jae
xchg
dec
and
sbbb
popa
xchg
incb
psllq
push
cmpsb
cmc
pop
push
pop
imul
lods
push
in
fsubl
mov
shl
jl
das
hlt
sub
mov
mov
in
dec
cmp
es
push
mov
cmp
shl
pop
loopne
scas
and
mov
pushf
stos
dec
sahf
add
movb
andl
dec
imul
aad
cmp
sar
xor
subb
lods
sbb
xor
push
mov
call
push
testb
mov
ror
clc
jnp
sbb
enter
sub
mov
lret
cmpsl
ror
mov
andl
push
jae
shll
xchg
movsb
lret
mov
mov
cmp
iret
je
mov
jo
pop
rcll
insb
stos
or
push
lods
rcrl
mov
jg
mov
push
pop
insl
pop
mov
dec
mov
add
std
push
jl
pop
mov
add
sbb
sub
fsubrs
movsl
fisttpl
es
push
xor
lahf
xchg
in
add
mov
or
pop
adc
pop
ljmp
add
cld
mov
test
dec
jecxz
jae
sbb
push
fwait
and
and
addr16
push
jnp
mov
cmp
jbe
pop
pusha
jnp
cltd
in
lret
adc
push
xchg
xor
mov
mov
movsb
inc
cltd
cmpsb
neg
sub
loopne
cmp
sub
push
movsl
push
in
push
movsl
mov
adc
pop
push
mov
mov
inc
inc
insb
fwait
xor
in
arpl
test
addb
outsl
inc
lock
cmc
cmp
or
aaa
mull
int
pushf
outsb
cmc
sti
scas
push
sbb
cmp
ret
loopne
loopne
movsl
ror
je
mov
jo
pop
rcll
insb
stos
or
push
mov
bound
cmpl
insl
pop
mov
xor
test
pusha
mov
mov
and
lret
ja
mov
sub
fsubrs
movsl
pop
neg
aas
fidivl
icebp
and
aad
push
out
int
xchg
in
fwait
pusha
movsb
cmp
push
dec
scas
xor
or
pusha
sub
jno
push
lds
pop
fildl
or
jle
xor
xor
imul
mov
cmpsb
sbb
jbe
lea
push
outsb
push
out
and
sub
mov
sar
xchg
dec
sub
push
mov
bound
es
jp
mov
fidivs
stos
mov
or
aas
lea
mov
test
dec
sub
mov
push
fiadds
push
pop
inc
rcrl
xchg
push
rcl
sub
pop
dec
test
or
pop
ret
sub
ror
into
clc
scas
add
sarb
je
stos
xor
mov
pop
xlat
cwtl
leave
in
dec
cmp
push
ljmp
add
gs
hlt
sbb
dec
adc
inc
mov
movsb
loop
sbb
fbstp
dec
pop
sub
in
add
cmpsb
ja
xchg
scas
push
mov
insl
aad
adc
push
add
or
sub
movsb
stos
add
pop
inc
fs
xor
pop
lods
jnp
mov
or
sub
mov
fwait
loop
and
ljmp
jle
adc
mov
sub
outsl
inc
mov
daa
test
xchg
mov
dec
clc
test
dec
fdivl
inc
repnz
xchg
scas
rorb
adc
fisttps
inc
cli
shlb
xor
cmp
imul
fidivl
icebp
push
mov
das
roll
lcall
cld
rolb
in
ret
xor
mov
pop
mov
dec
jecxz
jae
sbb
push
add
inc
xchg
lods
dec
fnstsw
xor
and
in
das
out
lahf
mov
lret
cmp
stc
mov
int3
hlt
jecxz
pop
sub
popf
lcall
and
daa
xchg
xchg
jae
arpl
push
dec
sbb
ljmp
add
loopne
pop
js
popa
cmc
jno
stos
ds
in
adcb
jb
in
test
insb
shrb
adc
imul
fnsave
add
test
ss
push
mov
andb
iret
push
decb
sbb
fistpll
fidivl
icebp
push
mov
sbb
and
aam
int3
cli
lcall
push
jae
and
pop
jmp
mov
mov
pop
xchg
mov
repz
and
mov
cltd
push
fidivrs
add
mov
mov
mov
push
outsb
cmpsb
jmp
vmovss
fs
xchg
dec
sub
push
mov
bound
add
fidivs
stos
mov
daa
push
mov
xlat
hlt
ret
push
mov
jnp
lock
cs
push
mov
pop
sub
xchg
int3
cmp
jne,pt
scas
scas
dec
and
and
fildll
in
pusha
adc
add
cld
xchg
jg
xchg
imul
dec
jne
pusha
addb
std
mov
inc
mov
mov
push
into
jbe
or
mov
adc
stc
int3
jno
scas
lret
and
inc
xor
sub
push
cmpsb
clc
shlb
stos
or
push
outsb
sarl
jmp
cli
and
push
stc
jnp
pusha
mov
mov
pop
jb
push
pushf
fnstenv
rolb
cmp
dec
jmp
push
xor
xor
jne
lret
imul
loope
add
cmp
push
add
test
inc
lahf
and
aas
dec
and
inc
cmc
dec
in
cmp
sbb
sbb
out
mov
mov
sbb
cmpsl
shll
popl
inc
das
pop
roll
cmp
sbb
lcall
xor
push
sbb
push
sub
or
add
clc
int
adc
aad
xor
xor
cli
xor
std
mov
xchg
cmp
and
in
jbe
daa
mov
sbb
and
cli
hlt
call
add
or
inc
aas
sub
push
daa
aaa
nop
inc
inc
mov
fmuls
mov
das
cmp
dec
add
ret
xchg
mov
call
pop
fldl
add
mov
aas
xor
int
dec
push
mov
imul
cmpl
test
or
jnp
stc
int3
xor
stos
mov
sub
push
push
test
stos
dec
xchg
les
clc
jne
mov
and
test
xchg
cwtl
xorb
sbbb
test
call
lods
and
mov
sarl
and
arpl
dec
fisubl
inc
das
aad
rclw
into
dec
daa
notl
and
ret
dec
cmc
jle
add
outsb
push
fcomip
test
imul
add
addr16
push
into
in
push
loop
push
test
xor
fdivrp
loopne
cmpsb
mov
and
lock
or
movsb
mov
addl
mov
inc
push
xor
and
dec
andl
inc
and
call
dec
bound
les
jmp
inc
dec
mov
call
mov
and
push
cmc
fs
push
xchg
nop
push
lahf
std
jno
xor
lds
andb
jle
ds
shll
jmp
xor
sub
xor
push
inc
sbb
stc
xchg
daa
mov
cmp
pop
in
pop
out
pop
repnz
xchg
repnz
xor
fbstp
jmp
inc
js
jne
mov
stos
cmc
arpl
pop
cmpsb
mov
adc
dec
jb
cmp
mov
dec
dec
pop
cmp
ret
inc
testb
xchg
inc
into
sub
stos
sub
jp
xor
in
cmpsb
dec
icebp
cmpsb
mov
sti
and
sub
mov
sub
mov
jo
or
mov
in
insb
cmp
mov
dec
out
adc
arpl
lods
lock
lea
stos
insb
shrl
adc
dec
inc
mov
dec
imul
mov
and
mov
out
aad
addr16
pop
xchg
and
sbb
mov
loope
ljmp
mov
aas
dec
or
or
loopne
insb
mov
sbb
mov
scas
bound
shl
es
es
mov
and
shrl
or
popf
push
enter
jle
testb
lret
xchg
stc
sti
rolb
ret
dec
push
mov
jb
ficoms
jae
int
mov
pushl
fs
jg
pop
in
fildl
cmp
jecxz
sti
push
and
add
mov
scas
jp
mov
jb
dec
dec
xchg
not
hlt
shll
es
shlb
adc
cmp
dec
hlt
jmp
push
in
fisubrs
ljmp
xor
inc
mov
int
sbb
arpl
nop
lock
sub
js
fists
mov
mov
mov
addl
mov
repnz
and
sub
mov
jl
or
and
aam
loope
jp
xor
dec
lcall
fcmovbe
mov
adcl
out
enter
lcall
clc
frstor
ficompl
stc
mov
dec
sub
mov
pushf
mull
cmp
add
push
sub
push
dec
jb
lahf
lds
push
mov
roll
mov
mov
mov
outsl
xor
push
mov
jge
sub
mov
push
loop
mov
in
push
sub
add
xor
popf
leave
pop
and
mov
fwait
loope
mov
ljmp
cmp
xchg
dec
jmp
jno
cmp
jle
dec
in
int
loopne
fsts
hlt
mov
and
jge
cmp
pop
repz
cltd
insl
jle
and
or
fmul
dec
sub
dec
testl
xor
es
or
hlt
sti
movsb
mov
ficoml
iret
jmp
loope
int3
out
shrl
sbbl
outsl
jmp
daa
subb
dec
std
outsb
pop
stos
add
mov
push
mov
jo
mov
gs
in
adcb
mov
jo
dec
xchg
mov
int3
mov
ds
push
lea
loope
mov
add
jo
jb
ror
xor
xchg
outsb
or
dec
negb
sahf
xor
mov
daa
and
push
jp
in
xchg
and
add
mov
add
test
data16
add
pop
mov
push
push
hlt
pop
shl
out
ficompl
sub
bnd
es
sar
dec
push
sub
addr16
inc
xor
push
out
add
or
jne
push
lea
mov
test
xlat
sub
dec
hlt
jmp
ja
scas
dec
cwtl
or
inc
jmp
imul
mov
insl
xchg
jbe
push
jecxz
shll
int3
mov
or
xor
add
mov
mulb
xor
mov
mov
xor
mov
adcl
shl
mov
int3
sub
arpl
daa
mov
aas
jb
idivl
cs
out
add
dec
and
in
das
jb
sub
dec
cmp
pop
pop
insl
sbb
inc
aas
clc
repnz
xor
xchg
xchg
xor
push
cld
mov
stos
cmc
arpl
pop
cmpsb
mov
gs
push
jle
mov
mov
mov
popf
jecxz
mov
pop
pushl
push
cmp
cmpb
push
pop
xor
sub
inc
xchg
mov
enter
lods
xchg
mov
cmp
mov
adc
mov
fmull
cmp
daa
xchg
shlb
sbb
cmp
xchg
sbb
ss
xrelease
xchg
inc
pop
test
repnz
sub
cmp
repnz
or
cmpb
jns
jnp
mov
mov
ss
lds
jg
add
cmp
xchg
movsb
cs
mov
aas
jp
rcr
insl
cltd
xchg
sub
xchg
add
mov
mov
mov
inc
insl
mov
xchg
xchg
ja
push
push
je
sbb
std
out
movsl
or
cmc
aas
push
jo
test
inc
test
jl
shrl
test
jecxz
push
mov
push
push
mov
lea
das
addr16
cmp
nop
dec
push
jmp
add
jp
inc
dec
bound
ss
rcrb
mov
test
std
xor
xor
test
ret
push
and
pop
xchg
adc
repnz
push
mov
stos
sbb
pop
inc
repz
jmp
add
dec
cmp
imul
jb
aas
test
mov
ss
loope
imul
pusha
sub
into
xchg
pushf
or
scas
dec
pop
out
and
mov
push
and
push
or
push
sar
sti
outsb
xor
jbe
lret
add
lock
into
sbb
mov
mov
jne
mov
addr16
push
ret
int3
cmp
dec
cmp
xchg
cli
inc
or
mov
dec
mov
and
ljmp
sub
loope
inc
or
xchg
movsb
sub
imul
scas
xor
mov
js
dec
mov
pop
int
mov
or
sar
sbb
push
and
pop
lcall
jp
out
fs
int
xlat
add
sahf
push
inc
dec
mov
int3
adc
mov
and
dec
negb
add
push
jbe
mov
cmp
lret
or
test
sbb
std
mov
dec
mov
sub
inc
inc
push
jnp
std
mov
pop
jecxz
sbbb
int3
cwtl
mov
ljmp
adc
cmpsb
repnz
jne
and
adc
mov
stc
dec
notb
test
cs
cld
jno
mov
lea
call
mov
lds
cs
enter
fidivs
addr16
test
push
add
xor
sub
jbe
in
test
mov
xchg
add
cmp
cmp
mov
add
jns
pop
loop
les
jmp
aaa
das
mov
hlt
and
cmc
xor
jmp
popf
stos
int3
jo
dec
out
push
inc
mov
in
ljmp
dec
daa
pop
inc
loope
jecxz
mov
sbbl
cmpsl
xor
sbb
push
pop
jo
mov
rolb
xchg
enter
mov
fmulp
push
out
pop
mov
das
jg
cltd
leave
sti
test
leave
dec
jne
dec
outsl
or
mov
pop
cmp
pop
mov
mov
iret
dec
mov
adcb
popa
ds
repz
add
push
dec
testl
aaa
xor
xor
jecxz
xchg
cmp
dec
shrb
ret
sahf
sbb
test
push
jb
in
aad
outsl
xchg
inc
cmp
in
cmp
int3
and
mov
out
into
adc
adc
mov
mov
shl
jns
scas
push
pop
add
sub
push
adc
shlb
iret
sbb
lods
cwtl
jle
mov
in
cli
loop
loope
adc
and
mov
repz
into
sarl
into
jo
xchg
jbe
loope
rcll
lock
lea
test
in
mov
outsb
and
push
movsl
notb
call
fldenv
push
mov
stc
mov
sti
leave
test
aas
pop
cmp
addr16
cli
pusha
fwait
add
cmp
dec
cwtl
sarb
sbb
or
icebp
cld
mov
sbb
lds
inc
testl
shrb
in
xchg
pop
ret
in
mov
popf
jp
lea
mov
jnp
jnp
ret
push
insl
xlat
gs
je
sbb
test
les
push
movsl
xlat
rorb
cs
mov
jg
cld
mov
inc
insl
mov
mov
ud1
sbbl
mov
sub
jno
data16
or
inc
sbb
out
mov
pop
mov
pop
mov
lods
pop
hlt
push
push
mov
xchg
cmpsb
pop
adc
das
mov
les
inc
cmpsl
pop
ret
dec
or
cmc
fucom
or
sbb
shlb
mov
or
scas
pop
mov
push
pushf
out
mov
sub
sbb
add
mov
push
into
std
daa
adc
fnstenv
fdiv
in
cmp
xchg
es
pop
out
dec
mov
mov
mov
pop
xchg
or
and
mov
xchg
emms
sti
cmp
enter
sbb
leave
imul
aam
jae
push
xlat
lea
in
je
cmpsl
insb
pop
out
imul
pop
sbb
add
mov
fucomip
push
arpl
cmp
jg
cmpsb
in
stc
lods
xchg
adc
les
xor
les
mov
insb
es
cmp
loope
mov
arpl
mov
mov
pop
gs
add
jl
in
test
mov
xor
xlat
sub
iret
sti
out
push
imul
sbb
cwtl
ds
inc
out
popf
cmovs
xchg
pop
dec
popf
mov
xchg
mov
and
in
fisttps
in
sub
sbb
push
jb
addr16
fisubs
push
jnp
xor
jnp
push
push
int3
stos
imul
jb
stos
ljmp
jmp
pop
fs
and
stos
ljmp
stos
ljmp
roll
push
es
iret
clc
jmp
sbb
mov
sub
xor
pop
push
gs
ficompl
xchg
xchg
xchg
mov
jg
add
test
ljmp
repnz
shl
shrb
cmp
es
push
repz
dec
jmp
imul
imul
jb
pushw
fdivs
add
push
and
xchg
mov
lods
jp
inc
in
mov
sbbl
jmp
mov
add
pop
repz
idivl
pop
jae
or
or
es
or
or
sbbl
xchg
je
mov
jge
push
test
jle
adc
mov
and
and
lds
sti
jnp
jbe
insb
js
push
gs
mov
jmp
rcrb
jb
stos
ljmp
stos
ljmp
stos
ljmp
lcall
aas
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
out
out
mov
jne
das
push
testl
pop
add
push
jo
adc
popa
jmp
push
lret
lods
rcr
or
cmp
dec
sti
pop
add
sub
iret
mov
inc
mov
sub
push
pop
inc
mov
addb
test
fwait
add
add
pushf
mov
aas
ret
inc
inc
jbe
loopne
je
aam
out
or
jo
push
mov
pop
mov
push
les
adc
int
add
mov
mov
mov
pop
fs
and
stos
ljmp
stos
ljmp
stos
ljmp
add
push
aaa
inc
add
add
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
add
add
add
add
add
add
add
jae
add
xchg
xor
inc
add
inc
add
add
add
fwait
inc
add
add
add
add
sbbb
add
lcall
mov
add
add
add
push
add
add
inc
add
add
add
inc
add
add
add
cltd
inc
add
add
add
add
insb
cltd
inc
add
add
inc
cltd
inc
add
cwtl
inc
add
add
mov
add
jl
inc
add
add
insb
cwtl
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
dec
out
mov
jb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
