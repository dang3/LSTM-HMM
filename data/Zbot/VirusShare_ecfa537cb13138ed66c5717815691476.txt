pusha
jne
and
inc
movl
or
or
decl
sub
jl
sbb
imul
jae
sbb
add
jl
jge
adc
add
or
xchg
movb
rcr
and
jle
ror
adc
jmp
pop
gs
mov
lcall
pop
inc
add
adc
sbb
jmp
mov
mov
inc
pop
imul
sbb
jo
sbb
movl
sub
jmp
test
sub
ja
sbb
jns
push
inc
pop
adc
rol
xchg
movl
imul
jmp
int3
rcl
js
xor
jmp
push
aam
stos
enter
pop
and
sub
add
je
and
jmp
test
divb
movw
jmp
mov
sbb
inc
outsb
xor
aad
push
and
and
inc
movb
and
sbb
and
js
jb
push
sahf
pop
adc
push
inc
pop
sbb
and
inc
movb
sbb
and
rcr
add
ja
and
xor
push
inc
pop
xor
xor
xor
movw
jmp
xor
push
cs
aam
sbb
rorl
push
clc
pop
and
ja
jge
or
jmp
push
add
movl
add
adc
sbb
pop
add
jmp
push
or
jmp
mov
pop
loop
nop
pop
movsl
sub
inc
movb
adc
jmp
pushf
and
push
cld
pop
imul
jmp
stc
xor
xchg
mov
dec
pop
jmp
lds
or
add
inc
cmpl
jne
and
push
ret
mov
adc
imul
lcall
sti
imul
mov
pop
pop
sub
repnz
lods
mov
dec
adcb
dec
inc
add
imul
sbb
push
adc
adc
or
imul
or
jge
ficoms
push
inc
or
or
or
mov
lods
mov
dec
imul
fwait
jle
inc
pop
andl
imul
sbb
push
cli
fistpll
inc
pop
loopne
sub
insb
lods
jb
jle
push
dec
imul
int
xlat
dec
push
imul
jae
inc
mov
pop
add
imul
or
imul
push
push
ret
out
push
inc
or
pop
push
jb
sub
jns
push
lea
das
jle
inc
in
push
inc
or
imul
shrb
sub
inc
cmp
jnp
inc
imul
xchg
or
ljmp
mov
mov
pop
dec
imul
or
push
cld
xor
loopne
add
bound
imul
iret
insb
leave
jno
pop
mov
and
pop
sbb
mov
or
call
roll
or
xchg
lods
xchg
xchg
inc
ret
orl
add
cmp
push
xchg
push
sub
push
jb
imul
repnz
bound
imul
add
xor
ror
pushf
fnstcw
xor
or
and
and
ret
lret
inc
or
mov
sub
and
jg
mov
push
sub
shll
inc
jns
roll
sub
sub
fwait
xor
sbb
sub
stos
mov
xchg
inc
lea
inc
xchg
mov
or
loopne
dec
mov
pop
inc
jns
fstps
add
adc
test
mov
sarl
sbb
cmp
fdivrs
jnp
xchg
sarl
pop
sbb
pop
call
flds
imul
pop
pop
addr16
push
inc
pop
xorb
call
dec
leave
or
xchg
inc
movsb
imul
pop
pop
addr16
push
inc
pop
adcb
xchg
inc
pop
cmp
cmpb
inc
mov
roll
or
mov
push
inc
int3
call
push
orl
push
and
xchg
shrw
jbe
das
jle
inc
in
push
inc
or
jle
inc
pop
cmpl
mov
adc
orl
mov
adc
sbbl
mov
inc
add
imul
call
ss
dec
imul
cmc
add
dec
imul
test
test
ds
sub
cmp
popa
pop
pusha
insb
imul
and
js
ds
push
aaa
inc
pop
add
ss
add
cmp
and
cmp
jg
and
dec
imul
outsb
sub
es
and
or
pop
jl
popa
pop
push
or
ds
insb
sbb
push
push
xor
fs
inc
inc
push
xor
push
daa
outsl
push
xor
sub
sub
jns
daa
daa
jg
sbb
add
das
insb
pop
cmp
outsb
push
and
or
imul
xchg
ja
sbb
imul
imul
add
repz
out
jge
add
add
add
out
add
sahf
add
add
add
add
jno
add
push
add
pop
or
adc
cmp
fwait
xchg
dec
lahf
ret
pusha
cmc
mov
repnz
jmp
sub
pop
or
add
testb
add
add
add
repnz
pop
dec
int
jae
hlt
pop
clc
adc
inc
call
mov
adc
mov
rorb
sbb
push
inc
jecxz
inc
jb
pop
cmpsl
xchg
andb
sub
jae
mov
xor
scas
faddl
add
add
lea
add
mov
je
add
add
add
add
add
add
iret
add
add
add
add
add
adc
add
add
add
add
add
add
xor
add
add
add
add
lock
add
inc
scas
add
ljmp
sub
add
add
call
add
add
add
add
add
add
mov
add
cmp
add
add
jo
mov
add
loopne
add
add
add
add
add
push
add
outsl
lahf
mov
mov
add
add
add
add
add
add
add
addl
fildll
add
add
xor
add
xlat
add
add
add
and
add
fisubrl
add
mov
add
cld
add
ds
add
and
add
jae
add
rcl
add
add
add
fwait
lods
add
sub
add
xchg
add
cmp
add
cld
or
add
pop
std
add
sbb
add
xchg
repnz
popa
cmp
add
ret
add
jno
add
add
add
add
add
inc
mov
add
test
add
xchg
add
xlat
roll
sub
sub
add
add
mov
add
add
mov
je
add
add
lahf
xchg
add
loop
add
fildl
add
sbb
add
popa
dec
add
push
fiaddl
add
add
add
scas
add
shll
add
pop
add
add
add
testl
add
add
lcall
add
push
loopne
scas
inc
inc
sbb
insl
mov
inc
jo
incl
pop
mov
cmp
xchg
imul
int
cmpsl
test
cli
fildl
movhps
sbb
inc
pop
jbe
add
cmp
add
ljmp
mov
and
sub
pop
stc
aad
ret
add
jno
cmpsb
addb
jl
mov
js
fdivl
add
insb
cmp
aas
cmc
fisubs
xchg
and
mov
dec
cwtl
add
add
add
add
shl
and
scas
data16
xchg
mov
int3
cmp
std
imul
and
inc
sti
faddl
add
sahf
push
hlt
add
add
xor
or
lea
pop
add
jg
cmp
dec
loop
fneni(8087
mov
das
pop
sub
roll
add
add
add
xchg
mov
add
add
ss
add
pop
add
sub
adc
je
lock
pop
add
cmp
add
pop
fs
inc
leave
fadds
mov
add
sub
add
pushl
add
push
testl
adc
into
cltd
in
cmp
add
sbb
add
mov
flds
xchg
mov
stos
xor
jne
sub
fstl
int
jnp
dec
orl
fstpt
ja
xor
and
inc
in
jae
add
adc
std
scas
dec
add
ret
sub
aaa
xor
sbb
lcall
cmp
lds
aad
add
pop
jle
clc
add
mov
add
xor
insb
mov
in
jae
xchg
add
xchg
add
add
jmp
pop
popf
iret
cmp
sti
jg
les
outsl
mov
push
imul
in
sub
stc
pop
add
xchg
mov
imul
jecxz
aaa
add
push
or
push
dec
add
add
push
adc
adc
add
stos
outsb
scas
add
push
xchg
jbe
clc
add
sbb
mov
mov
mov
std
fwait
add
in
jmp
dec
inc
out
sub
outsb
add
jp
shll
add
imul
setp
add
push
in
add
dec
gs
add
outsb
mov
sbbb
add
adc
add
or
arpl
dec
ss
mov
dec
xchg
cmp
in
addb
mov
pop
xor
add
mov
push
add
cltd
cld
iret
adc
out
loopne
dec
add
jecxz
dec
int3
add
mov
mov
mov
repnz
mov
push
jns
lret
and
add
in
pop
mov
inc
fstpt
push
cltd
xor
fcomps
mov
dec
jp
xor
outsb
ret
pop
add
push
and
push
in
fcomp
mov
push
sbb
add
lcall
or
add
test
xchg
cmp
sub
ret
sub
xchg
addl
notl
loopne
add
sbb
sub
cmpsb
ja
insl
push
add
xchg
insl
add
jecxz
lods
ljmp
fs
test
add
mov
and
add
sub
mov
dec
add
es
mov
add
pusha
sti
add
add
scas
scas
dec
cmp
das
pop
pop
add
xor
sbb
pop
push
sub
add
test
or
add
das
fiaddl
inc
call
outsb
add
add
and
pop
xor
cmc
dec
add
mov
add
aad
add
jbe
mov
jae
bound
loop
jmp
sbb
mov
enter
ret
mov
add
gs
add
test
out
hlt
jge
dec
pop
lret
ficompl
cmc
push
add
cmp
aaa
add
fdivrs
add
sub
lea
push
add
push
or
add
sub
test
mul
pop
add
add
mov
pop
outsl
xor
inc
mov
cmc
sub
cmp
loope
mov
mov
call
cmp
cmp
cmp
out
add
adc
add
add
loopne
insl
les
inc
xchg
mov
pop
add
adc
mov
cmp
inc
xchg
add
js
pop
add
sbb
and
in
or
mov
push
jbe
add
rcl
cmp
xchg
inc
mov
dec
xchg
in
fldln2
add
mov
mov
js
cmp
in
fwait
stos
int3
add
jae
mov
sbb
je
out
repz
add
fwait
es
add
xor
sbb
test
lea
xchg
sbb
add
adc
xchg
add
stc
mov
inc
hlt
aas
mov
call
add
push
mov
in
lds
clc
or
push
inc
and
and
mov
add
ret
test
movsl
jge
aaa
js
mov
cmp
add
popa
mov
mov
popf
add
jbe
mov
les
push
lahf
divl
loope
cmp
dec
adc
arpl
or
sub
repz
into
add
aaa
pop
js
add
mull
cmpsb
stos
xchg
add
add
dec
pop
inc
add
out
dec
add
insb
and
popa
push
pop
add
test
sbbl
lret
jnp
fldln2
push
cwtl
sar
add
aaa
das
jle
adc
adc
rolb
incb
popf
rcll
js
add
jg
add
into
clc
arpl
subb
push
xchg
mov
xchg
push
roll
add
mov
jecxz
roll
dec
add
add
dec
mov
xchg
lods
in
mov
xchg
jno
rcl
push
add
pop
clc
push
add
pop
movsl
cli
add
jno
arpl
xchg
inc
jecxz
cmc
add
add
xchg
rclb
jecxz
lods
sub
push
push
add
inc
rcl
movsb
add
mov
hlt
dec
jp
fdivr
inc
xchg
popa
lcall
xchg
add
pop
add
adc
imul
push
ret
les
xchg
shl
jb
fistpll
gs
pushf
add
shl
xchg
mov
scas
cmp
and
sahf
testl
lret
andb
std
jae
gs
add
data16
pop
push
add
ljmp
mov
add
fists
inc
cmpsb
roll
pop
add
xor
add
push
pop
inc
filds
rcrb
pop
mov
lldt
jmp
cwtl
or
out
add
xchg
xchg
add
cmp
mov
add
lahf
ljmp
aad
daa
add
divl
clc
pop
roll
mov
add
add
pop
cltd
sub
je
mov
add
pop
jno
daa
add
bound
imul
add
cwtl
out
add
mov
or
add
mov
add
dec
xchg
add
dec
add
and
int3
sub
dec
repnz
or
shll
andb
aam
sbb
mov
xchg
xchg
push
add
pop
mov
daa
add
add
nop
add
push
movsb
stos
add
jno
mov
jae
xor
add
add
mov
add
xor
mov
add
addr16
pusha
add
and
push
mov
add
add
jo
add
hlt
push
fildll
les
std
add
shrl
add
adc
lods
mov
fnstenv
push
je
or
push
cmpsl
add
inc
lods
xchg
add
dec
or
mov
or
add
add
pop
pop
shrl
test
test
jne
add
jb
fidivl
fadds
push
jnp
rolb
call
add
faddl
jge
mov
add
mov
pop
popa
mov
ficoms
jg
insl
gs
add
pop
imul
jne
add
add
cs
out
add
dec
and
fmull
scas
sbb
mov
sar
scas
mov
or
inc
add
incl
insl
mov
in
test
pop
cmp
sbb
inc
add
roll
add
add
in
loope
and
cltd
lahf
sti
mull
add
lods
lods
add
mov
les
dec
repz
movsb
cmpsl
sti
adc
mov
fs
cmpsl
mov
scas
mov
cs
mov
movsl
pushf
pop
mov
dec
push
add
fwait
add
pop
dec
pop
stos
add
repz
cmp
insl
fdiv
sti
add
push
pop
add
int3
stc
loop
rolb
add
std
mov
vmread
insb
faddl
pop
or
mov
xor
sub
lods
add
mull
hlt
add
mov
mov
and
jb
mov
add
fcomip
int3
push
add
es
add
xor
cmp
adc
add
inc
add
cmpsb
mov
add
sub
push
js
js
add
cmp
add
add
test
roll
xor
inc
push
jle
test
add
sbb
mov
mov
into
sbb
sub
in
lds
mov
sbb
sub
clc
xchg
add
loop
add
sub
mov
cld
cmp
ret
or
and
pop
int3
add
xchg
jno
add
add
jns
loope
add
sbb
inc
outsl
xchg
add
outsl
add
shrb
add
loop
mov
mov
add
jno
mov
mov
add
in
aam
jne
jmp
cltd
mov
test
xor
mov
xor
popf
cmpsb
aaa
loopne
inc
or
enter
jp
jmp
and
dec
rolb
lods
fdivrl
pop
lret
add
ror
roll
cmp
test
mov
push
fiaddl
jl
push
pop
mov
icebp
pushf
pop
mov
sbb
add
mov
add
cld
add
lods
xor
add
sub
pop
mov
lcall
repnz
add
sub
xor
int
add
lods
xchg
fistpl
ret
fisttpll
xchg
xchg
fildl
into
lea
sub
imulb
add
in
push
movsb
add
mov
add
push
pusha
pop
add
xlat
adc
orb
xchg
dec
addl
mov
orl
add
test
fadds
xchg
iret
sbb
push
sbb
int
lods
pop
ret
imul
test
push
add
push
cmp
add
aam
mov
push
movsb
mov
add
repnz
add
test
add
bound
add
adc
push
dec
add
dec
mov
dec
hlt
out
add
fwait
sub
and
add
aas
dec
jae
add
test
and
icebp
aad
pushf
add
outsb
adc
imul
dec
xorb
lock
add
sub
add
xchg
push
fsubrs
insl
push
pusha
lds
sbb
sbb
jecxz
jb
lock
pop
stos
pusha
add
imul
movsb
adc
sbb
inc
les
xor
add
rcl
and
bound
push
xchg
dec
lret
mov
ss
adc
out
jecxz
mov
inc
push
add
fidivrl
add
imul
scas
cli
out
inc
add
sbb
sbb
pop
push
add
add
lods
push
add
mov
add
stos
xchg
jle
and
loope
out
in
aas
push
sar
pop
add
sbb
in
add
popa
push
mov
gs
mov
sbb
pop
or
aaa
orl
adc
test
lahf
pop
dec
add
mov
add
or
add
sbb
ret
push
add
adc
scas
xor
mov
call
inc
add
sbbb
add
jle
push
sbbb
fwait
pusha
add
xor
add
inc
lret
xchg
out
insl
jb
pop
lahf
sbb
push
add
js
and
xchg
add
cltd
cmp
cmp
mov
fwait
sub
cmp
cmp
in
push
add
sbb
pop
out
jns
cmp
movnti
pop
mov
add
xchg
out
repz
test
mov
add
lock
gs
mov
cmp
adc
pop
aas
or
insl
cmp
add
lcall
xor
in
lock
cld
jae
stos
fbstp
add
push
dec
add
add
push
mov
xchg
cmpsl
stos
push
lea
scas
insb
add
mov
movsb
add
bound
movsb
add
imul
ja
add
add
outsl
cmp
ja
mov
xlat
lods
mov
mov
ja
jae
sahf
mov
iret
sub
push
push
mov
pop
add
sarb
jle
add
sbb
nop
add
dec
jbe
add
jne
push
add
sahf
mov
int
scas
add
outsb
outsl
sub
repz
xchg
not
icebp
add
add
push
add
mull
cmpsb
loopne
add
stos
xor
add
loopne
cmc
add
jb
adc
jecxz
sbb
cmp
call
push
cmpsl
add
imul
bound
mov
cmp
push
add
and
ficoml
adc
add
mov
xor
test
mov
out
out
push
add
add
push
add
xor
push
cmp
loop
add
mov
in
lods
add
add
mov
pusha
mov
adc
rolb
dec
xlat
cmp
inc
icebp
add
lret
test
sbb
sub
test
or
push
mov
arpl
xchg
pop
pop
add
arpl
mov
dec
out
lret
sub
add
lds
icebp
sbb
fisttps
cld
add
test
cmpl
dec
into
add
or
dec
and
jnp
jmp
out
add
add
cli
add
jge
int
inc
fs
sahf
add
xchg
dec
ret
jnp
add
in
xchg
add
jl
inc
add
add
jno
icebp
int
cmp
pop
adc
pop
add
outsb
aam
test
add
cwtl
sbb
scas
add
incb
inc
loop
les
or
es
cmp
sbb
mov
test
in
rclb
test
ljmp
cmc
sbb
add
fsts
dec
lods
mov
stc
aad
jg
add
das
xchg
jecxz
add
mov
mov
out
pop
add
insl
lock
rolb
mov
add
ret
je
and
jl
jnp
push
push
jnp
aad
add
mov
movb
add
filds
dec
mov
mov
mov
into
add
ja
and
inc
repnz
and
pop
mov
es
add
sbb
push
mov
test
sti
cmp
cwtl
pushf
or
add
mov
add
inc
gs
fidivl
push
add
fdivl
push
roll
enter
mov
adc
add
and
mov
scas
pusha
add
xor
cmc
add
es
daa
mov
dec
add
add
add
test
pop
stos
add
jle
jp
adc
scas
inc
xchg
jmp
test
jge
add
popa
daa
add
push
mov
add
add
add
aas
std
push
add
outsl
js
adc
or
sub
push
add
lds
add
mov
pop
sbb
fwait
lock
add
pop
or
jae
mov
lock
test
pop
adc
in
jb
add
int
push
cltd
sub
cmc
jge
mov
jg
shlb
add
push
dec
je
dec
xlat
adc
push
mov
dec
add
mov
xchg
inc
add
jmp
mov
outsb
add
pop
mov
lock
jbe
popf
add
popf
cwtl
add
add
mov
add
bndldx
out
nop
inc
adc
or
daa
cli
mov
xor
cwtl
jmp
insl
add
add
notb
pop
add
sbb
add
imul
add
mov
addr16
ljmp
add
xchg
fists
xchg
add
sub
push
bound
idivl
int3
add
lds
mov
add
ss
add
mov
xchg
sbb
shrb
jmp
mov
cmc
adc
jbe
add
mov
test
outsl
jmp
add
cmpl
push
mov
mov
mov
pop
inc
fiadds
pop
nop
lcall
and
add
sbb
add
sbb
adc
in
out
add
dec
add
lds
mov
hlt
dec
hlt
rol
jns
push
dec
inc
inc
add
gs
add
add
and
clc
popf
add
insb
std
sub
mov
sbb
add
stos
repnz
sbb
add
notb
test
add
or
addb
mov
or
push
add
fwait
push
gs
inc
add
mov
push
lods
inc
roll
fiaddl
jg
add
movsb
ror
mov
shrl
mov
clc
lea
movntps
sbb
mov
mov
add
stc
fcoml
xchg
inc
add
pop
add
cwtl
jle
add
xchg
cwtl
add
cmp
aaa
lods
add
test
adc
test
fildl
push
dec
jle
popa
add
jmp
mov
insl
test
add
add
mov
leave
enter
xchg
cmp
fwait
call
mov
or
in
sbb
jp
out
pusha
pop
push
add
imul
add
lahf
add
mov
add
aas
xor
pop
add
hlt
inc
add
roll
test
fdiv
sahf
add
inc
repz
add
xchg
add
arpl
jb
imulb
mov
add
mov
sub
das
add
inc
add
lea
xchg
popa
test
push
lret
mov
adc
ret
add
jp
push
movsl
fnstsw
js
mov
add
push
aas
add
add
cltd
sub
dec
jno
adc
lret
add
insl
mov
scas
add
cli
inc
jmp
mov
or
add
add
jns
mov
stos
add
mov
dec
add
add
bound
dec
cmp
inc
icebp
pop
pop
push
outsb
sbb
iret
push
pop
sub
or
pop
mov
add
ja
add
aad
addr16
orb
xorl
xchg
and
addl
dec
sahf
dec
sub
dec
dec
cli
sbb
sbb
ficomps
ja
adc
push
add
cmp
add
jl
jo
add
sub
xchg
add
daa
add
cmp
repz
push
mov
lret
incl
inc
mov
sub
and
roll
pop
or
mov
loope
test
call
add
ss
pop
popf
pop
mov
adcl
xchg
test
add
frstor
imul
fsubp
dec
xchg
add
pop
add
mov
pusha
push
aas
add
adc
dec
mov
xchg
add
scas
lret
into
popa
shlb
mov
les
adc
dec
insl
add
testb
aad
dec
je
fwait
add
scas
lea
mov
lcall
mov
cmp
add
push
xchg
add
out
js
add
mov
cwtl
jo
cmp
xchg
jp
dec
jmp
cs
roll
jmp
mov
jmp
es
fabs
or
add
dec
jmp
stos
or
add
add
add
testl
cmpsb
xchg
jbe
add
mov
adc
push
test
mov
sub
jbe
mov
push
push
mov
pop
add
jmp
aad
adc
jp
add
mov
dec
sbb
jae
movsl
ret
adc
sbb
sub
push
data16
cmp
js
icebp
and
popa
sbb
xorl
mov
jae
or
out
jb
add
pop
cwtl
int
das
add
adc
iret
aaa
add
ret
or
pop
inc
aam
push
add
add
lock
sbb
push
test
mov
add
test
mov
adc
add
push
add
add
sbb
add
pop
push
popa
jecxz
add
add
iret
addl
fdivrs
sub
dec
fildl
xchg
pop
add
int
call
cmpsl
loope
out
add
mov
popl
and
jo
add
jno
jne
jmp
xchg
add
or
add
in
xchg
mov
jge
sub
push
and
int3
mov
lea
dec
add
divb
dec
daa
cmpsb
add
out
std
add
sub
loope
scas
repz
sbb
sbb
sti
add
popa
sti
lods
adc
add
pushf
mov
add
addb
jg
add
jnp
add
popf
xor
add
pop
stc
mov
jns
xchg
into
out
add
mov
inc
pop
fsubrs
sub
push
sub
testb
cmp
inc
notb
mov
les
or
mov
sbb
sbb
push
iret
xchg
fmulp
add
subl
movsb
add
mov
sub
sub
inc
add
shl
add
sub
mov
xchg
fsubs
rolb
and
add
inc
stos
xchg
frstor
add
add
iret
add
je
add
test
adc
add
jl
mov
mov
insl
lds
call
add
sub
loop
pop
test
xor
push
movsb
jle
jns
insl
movsl
add
cmc
movsl
int3
add
jo
filds
lret
jge
shl
pop
add
test
xor
inc
pop
arpl
scas
mov
or
call
mov
repz
mov
ljmp
incb
inc
or
mov
test
inc
cmp
mov
or
cmc
in
add
enter
lods
leave
cmc
dec
add
loop
mov
out
sahf
addl
into
add
sahf
out
ret
std
add
inc
pop
ljmp
add
iret
push
add
test
mov
add
adc
sbb
call
add
xlat
inc
adc
add
leave
pusha
pop
rcrl
xchg
jp
adc
or
add
add
lcall
dec
jl
dec
pop
push
add
mov
add
push
mov
ljmp
or
andb
sub
add
into
fwait
mov
repz
stc
pushf
lock
test
out
dec
jge
cltd
pop
int
ret
push
add
pop
mov
and
xor
fadds
fnstenv
xchg
adc
add
mov
sbb
mov
xchg
or
fistpll
mov
cmp
dec
add
xor
jae
mov
out
in
mov
sub
jb
sub
jo
add
xchg
sbb
xor
or
stos
lock
adc
xor
mov
add
add
push
sub
mov
add
loopne
insl
jb
add
sub
leave
cmp
bound
fnstcw
inc
add
sub
xlat
add
filds
pop
in
dec
add
fcoml
add
sahf
repz
add
pop
mov
xchg
push
sub
rorb
xor
inc
add
dec
add
jns
add
imul
pop
add
fdivrs
lods
add
sbb
sbb
mov
ror
add
cwtl
pop
pop
fisubrs
add
mov
inc
add
in
ss
lcall
jno
adc
dec
out
add
push
or
roll
cmp
and
out
cmp
cld
lea
fnsave
ja
add
or
loopne
ficoml
out
add
mov
test
push
jno
stos
add
add
sbb
je
add
lcall
cmp
sbb
xorl
sub
add
sti
testl
add
or
jae
leave
jecxz
add
or
xor
mov
iret
mov
lock
jne
test
inc
test
int3
add
out
fldl
lea
out
mov
push
add
and
push
leave
invd
add
xchg
inc
setbe
add
icebp
adc
pop
in
mov
cs
inc
rcl
add
shrl
xchg
xor
mov
xor
out
add
sarl
adc
add
lcall
je
imul
push
hlt
add
mov
add
jno
adc
stos
int
add
and
test
push
add
lahf
jae
add
add
add
ds
cmpsl
es
aam
dec
fs
fstpl
repnz
mov
and
dec
mov
add
sbb
add
add
imull
xchg
add
xchg
push
add
pop
cmp
xor
imul
jp
cmp
loop
push
xchg
add
push
mov
js
cs
scas
sbb
pusha
mov
lock
sbb
add
or
push
enter
out
and
les
cmpsb
add
testb
lss
aas
jno
jmp
sub
fimull
push
add
js
adc
add
add
lock
cmpsl
mov
add
fwait
sbb
les
adc
outsl
push
fildl
sahf
popf
sub
subb
or
xor
int
cmp
jb
test
add
rolb
or
inc
lods
add
add
ret
adcl
add
mov
add
inc
xor
xchg
and
in
iret
scas
and
mov
lds
jne
fisubrl
movsb
add
xor
add
push
leave
add
outsb
add
xchg
ret
test
add
sub
add
inc
pop
aas
add
sub
mov
add
or
jmp
add
int
push
inc
fwait
add
test
pop
jo
and
push
mov
add
jge
in
mov
roll
lret
add
jl
add
cltd
pushf
mov
adc
mov
dec
add
test
add
test
add
and
add
pop
pop
xor
jecxz
ja
lcall
add
mov
and
mov
add
sub
inc
pop
push
fidivrl
add
cmpsb
inc
lods
xchg
add
add
add
dec
add
lret
inc
jp
add
adc
dec
arpl
and
add
movsl
pop
push
adc
xchg
add
add
addr16
push
incb
sbb
insl
pop
adc
xor
push
stos
add
jo
mov
xchg
cli
loop
or
dec
mov
xchg
mov
mov
out
roll
andl
lea
add
fcmove
add
sub
add
xchg
movsl
mov
movsl
test
push
add
pop
xor
push
cmp
cli
add
dec
push
in
add
ror
add
xor
or
je
xchg
fists
cmp
jne
push
pop
add
push
sti
sub
int
add
jp
hlt
add
sti
xchg
add
dec
sahf
inc
adc
push
nop
sub
sbb
mov
add
add
add
inc
add
cmpsb
add
js
mov
cmp
adc
popa
jbe
adc
pop
add
jl
call
cs
out
fildl
or
je
xchg
xor
add
add
xchg
pop
adc
add
ror
test
mov
lods
jmp
adc
test
adc
mov
testb
xlat
pop
sahf
sbb
test
xchg
mov
incl
pop
aam
in
adc
xchg
mov
aas
and
add
cs
loopne
add
xor
std
testb
push
lahf
ret
add
add
ds
int3
add
outsl
in
pop
add
mov
add
mov
aam
mov
in
fildl
xlat
or
lret
pop
and
test
daa
add
add
in
imul
nop
xchg
add
cmp
inc
ret
add
add
decb
pushf
ja
xor
sbb
fs
rorb
popf
addb
es
add
repnz
pop
sbb
pop
mov
mov
pop
xchg
add
pop
xor
jae
mov
cmp
shrl
std
inc
add
add
mov
add
out
and
orb
jne
add
cmp
mov
subl
xchg
add
jbe
shr
add
pop
add
ret
add
jmp
adc
aaa
adc
xchg
das
cmp
sbb
out
dec
mov
add
mov
mov
xchg
or
xor
jg
cld
mov
push
sub
add
cmpsl
jl
or
inc
jo
cltd
mov
out
das
mov
addr16
enter
add
shrl
pushf
lcall
lea
sub
or
call
push
mull
inc
add
xchg
and
mov
stos
and
mov
add
xchg
or
add
pop
jae
in
add
push
or
iret
push
mov
jnp
add
sub
add
pusha
div
lcall
add
add
push
add
push
roll
mov
cwtl
mov
jle
adc
fisubs
data16
cli
add
xlat
hlt
inc
xor
add
add
add
push
lret
add
add
lds
lret
add
jb
add
mov
out
iret
lods
mov
add
sbb
cmp
jo
loopne
xor
mov
loop
cmc
test
sub
xchg
add
popf
sbb
out
outsb
cmp
jno
test
adc
incl
mov
outsb
pop
test
and
add
mov
lock
loope
add
inc
add
and
pop
push
movl
outsb
pusha
push
add
dec
out
jp
loop
hlt
add
testl
add
mov
jp
add
lret
xchg
add
fildl
xor
sub
cli
out
add
jle
cmp
jo
jno
add
add
mov
xchg
iret
fidivrs
mov
inc
jns
add
jp
ret
add
sbb
add
push
lret
rolb
orb
and
add
sbb
add
idivb
sub
mov
clc
dec
flds
scas
scas
inc
add
in
rolb
movsb
mov
fisttps
cmp
fs
std
xchg
add
push
add
add
pop
adc
add
mov
jnp
pop
mov
stos
and
add
call
repnz
int3
dec
or
insb
add
icebp
cs
mov
cmpsl
pop
adc
mov
pop
jecxz
add
fisubrs
daa
add
lcall
daa
rcr
add
jge
js
add
xchg
or
jae
add
flds
xlat
mov
lods
add
add
mov
cmp
fsubrs
sub
negb
xchg
fildl
pop
fmuls
mov
pop
aas
cli
add
push
icebp
add
add
sti
pop
add
inc
icebp
movsb
lret
loop
xlat
lea
test
add
fdivl
push
gs
push
adc
push
xchg
and
pop
add
shll
loope
jecxz
fistl
sub
add
fs
cmp
jne
roll
cltd
cmp
outsb
jl
lcall
sldt
jns
add
mov
add
mov
je
ret
push
add
test
pop
add
mov
add
pop
int3
sub
loope
inc
dec
xor
cmp
les
test
lock
scas
lods
mov
push
mov
daa
add
inc
inc
add
add
mov
jns
jae
in
and
mov
adc
jb
add
add
add
jnp
and
lds
add
in
mov
mov
sub
or
mov
test
stos
add
pusha
es
add
add
mov
add
add
es
shlb
stc
cs
hlt
add
cmpsb
and
pushf
sub
aaa
loope
xchg
es
enter
xchg
icebp
mov
pop
add
ljmp
cmc
push
jmp
pop
sub
add
jnp
faddl
mov
or
dec
xchg
add
push
repnz
dec
aas
sub
add
mov
cmp
sahf
jge
add
and
push
add
in
pop
xor
sub
add
pushf
mov
sbb
sbb
add
jne
pop
call
in
incb
inc
popf
dec
loope
add
cwtl
mov
fs
xor
fs
rcrl
push
add
push
and
in
cmpsl
pusha
enter
aam
inc
add
sbb
fldt
mov
incl
aaa
js
mov
dec
test
pusha
add
lcall
clc
add
mov
add
pop
mov
lret
add
mov
add
add
push
xchg
mov
xchg
jp
cmp
jmp
mov
movsb
sbb
outsl
call
in
test
cmp
rcl
ljmp
add
add
imul
push
in
adc
add
add
adc
popa
add
lahf
in
add
mov
faddl
icebp
xchg
add
insl
or
cmp
add
sub
and
jg
movsl
ja
out
ja
fldl
inc
inc
mov
pusha
loope
in
push
lods
add
push
or
mov
rorl
aad
add
dec
das
add
and
addl
cmpl
pop
paddd
frstor
adc
add
imul
popa
aad
add
xchg
jb
adc
incb
int
sub
lea
add
add
pop
roll
mov
vpaddsw
push
xchg
idiv
jno
add
xchg
lds
cltd
mov
fstps
in
push
int3
mov
add
jmp
lret
add
nop
or
roll
lea
xor
ret
add
fidivl
fnop
jmp
mov
insl
add
inc
pop
mov
add
jo
add
xor
addr16
ret
xchg
pop
sub
jmp
add
add
ss
xor
mov
add
add
into
add
push
push
add
enter
iret
dec
fstpl
push
cmp
insb
loope
or
add
pop
loopne
pop
je
popa
addl
arpl
push
out
xchg
mov
xchg
xchg
jp
add
fbld
cmp
into
das
add
or
pop
ljmp
add
movsl
mov
das
mov
jmp
scas
add
add
jbe
add
inc
add
pop
or
fiaddl
sbb
add
pop
inc
or
add
add
add
xchg
ljmp
das
or
adc
mov
add
sbb
aad
scas
in
das
add
mov
hlt
addb
ret
add
push
add
xor
add
rorb
add
rcrl
push
cwtl
or
addr16
bound
shll
add
sub
sti
xor
movl
aas
add
mov
mov
inc
stc
or
add
mov
insb
cmpsb
inc
jae
add
xor
dec
xchg
push
pushf
test
imul
add
xchg
fs
add
mov
add
push
add
cmp
mov
add
jb
hlt
lds
scas
adc
pusha
into
add
push
mov
pop
add
int3
aas
adc
sub
rcr
ja
cmp
addl
cmp
nop
repz
xor
int3
add
ljmp
pop
flds
add
jnp
mov
sbb
rol
icebp
mov
lods
inc
and
add
xchg
push
cmpsl
loope
xor
shll
movsb
or
mov
add
or
add
fists
out
add
popa
add
push
add
fcomip
out
cwtl
dec
and
clc
mov
inc
add
add
or
add
daa
fcmovb
inc
add
cmpl
popl
add
hlt
add
into
pop
stc
mov
sbb
add
aam
mov
lcall
xchg
inc
gs
or
add
lret
add
enter
dec
add
lahf
or
ljmp
add
inc
les
int3
push
jo
roll
xchg
jb
add
arpl
mov
add
sub
dec
jl
add
add
pop
int3
add
mov
loopne
ljmp
into
xor
mov
jmp
aad
mov
ljmp
add
rcll
adc
or
add
xchg
ret
ret
addb
pushl
sbbb
rorl
adc
sti
add
ds
add
movsl
sbb
fcom
ds
arpl
movl
add
add
popa
loope
insl
cs
sbb
pop
lahf
je
add
and
jb
arpl
xchg
out
movsl
push
add
add
aaa
in
aad
add
push
or
or
ret
int3
mov
js
add
pop
sahf
mov
inc
in
pop
mov
pop
add
add
out
and
insl
add
fstpt
ret
add
ljmp
lcall
cmpsb
add
push
mov
lret
push
mov
sub
jecxz
sahf
icebp
pop
add
push
les
jl
rolb
ret
and
push
ljmp
sbbb
xor
push
repz
mov
pop
add
push
dec
add
or
xchg
add
movsl
add
aas
lahf
add
imul
fadds
push
push
pop
daa
add
mov
add
dec
data16
fimuls
cs
cmp
dec
movsl
sub
cs
add
add
dec
add
inc
inc
out
push
add
or
and
jle
push
add
out
add
xchg
add
add
jmp
xor
jmp
add
add
mov
add
jg
clc
addb
xchg
sub
adc
repz
enter
pop
jg
mov
imul
inc
pop
add
mov
fwait
jp
pusha
cs
into
dec
xor
mov
jmp
cmpsl
mov
outsl
mov
shll
xchg
mov
andl
sub
add
stos
notb
or
ja
and
ret
pop
inc
add
mov
add
sbb
add
mov
jecxz
add
aam
mov
rorb
jmp
add
add
add
mov
add
popa
jno
and
insl
and
ljmp
mov
or
mov
stos
or
add
daa
add
outsb
loop
pop
jo
pop
mov
add
out
xor
xchg
sub
sbb
add
add
cld
cltd
push
or
imul
fldl
cmpsb
stc
jge
dec
xor
add
or
xchg
add
les
into
filds
notb
cmc
add
shrb
es
add
push
cmpsb
sti
add
xor
inc
pushf
popa
pop
add
stos
mov
add
roll
cmp
pop
mov
pushf
sti
add
dec
jge
je
test
add
push
stc
mov
stc
testb
inc
hlt
mov
adc
cmp
pusha
and
nop
add
mov
mov
add
sahf
movsb
and
xor
fisubrs
push
lods
jo
rcrb
ret
add
incl
fdivs
and
dec
add
lea
xor
call
daa
add
sub
and
add
jae
nop
add
ret
jns
aas
add
push
sub
xchg
pop
adc
icebp
and
fmuls
add
cmp
call
mov
repz
push
add
test
lahf
stos
pop
or
dec
add
inc
and
add
cmp
add
cltd
mov
loop
fs
add
xor
mov
sub
getsec
add
pop
add
pop
icebp
jmp
cld
add
xor
add
add
xchg
nop
fiaddl
fisubs
cmp
add
mov
and
mov
xor
and
filds
iret
or
jle
mov
add
sub
add
mov
cmp
cli
inc
scas
imul
add
lods
jge
add
mov
stos
xor
add
push
cli
aam
lcall
aas
pop
outsl
xchg
cmp
mov
add
dec
testb
adc
aaa
adc
push
xor
add
insl
mov
xchg
inc
int
cmp
add
aaa
repz
test
dec
cs
fiadds
call
add
push
add
jmp
jge
add
pop
aas
mov
in
mov
movsl
in
mov
inc
mov
mov
popa
dec
mov
aad
clc
xchg
ja
lods
add
scas
adc
out
cmp
mov
daa
imull
out
add
push
add
add
jne
xor
add
xchg
xor
xchg
filds
stc
pop
cmp
lock
loopne
dec
jmp
fdivrs
mov
cmc
add
inc
add
jg
add
mov
add
inc
mov
sbb
mov
mov
cmpsl
mov
add
js
add
mov
add
mov
add
mov
repz
leave
ret
jle
cs
movsl
jmp
cmp
add
dec
mov
fisubrs
mov
sbb
dec
inc
cltd
add
add
add
xchg
shll
add
push
add
fstl
and
dec
add
inc
sbb
jge
cmp
xchg
scas
jo
xchg
pushf
pop
add
mov
cltd
cmp
stos
cmp
dec
or
push
jl
je
shlb
pop
or
add
add
add
repz
add
scas
xor
and
ret
loopne
add
xor
dec
cmp
push
mov
jp
xor
pop
pop
xor
add
loope
sbb
test
imul
cmp
rol
add
mov
lret
das
shrb
push
push
cwtl
js
add
xchg
iret
add
add
addl
xor
add
xchg
lcall
mov
mov
test
lret
incb
rorl
roll
les
cs
push
add
mov
pop
cmp
mov
sub
pop
repnz
add
cmp
pop
and
add
add
pop
add
add
add
roll
lods
xchg
xchg
inc
add
sbbb
stos
out
add
cmpb
push
loop
aas
sbb
loop
sub
mov
push
and
mov
xor
fldl
call
add
imul
into
add
adc
aam
xor
xchg
inc
add
popf
sub
popa
js
pop
imul
fwait
in
add
add
cltd
xchg
and
ja
or
add
lods
dec
add
jne
scas
test
cmp
add
nop
ds
cmpl
cmp
mov
movl
cwtl
add
movsl
xor
push
dec
pop
lock
stos
std
cmp
jo
pusha
mov
add
push
roll
adcb
lahf
std
add
and
jae
mov
iret
cmpsb
pop
jb
add
add
test
lds
add
add
xor
or
xchg
fisttpl
add
movsb
mov
xchg
inc
addr16
add
mov
lret
loope
mov
addr16
jo
sbb
addr16
mov
add
mov
jecxz
cs
adc
add
sbb
xor
add
add
nop
movl
mov
dec
add
clc
add
data16
test
adc
push
add
add
cmp
es
add
mov
insb
xchg
fldenv
stc
add
outsl
ljmp
sub
ljmp
dec
mov
pop
add
pop
add
cmc
mov
jmp
push
add
testb
add
cmp
push
mov
xchg
cltd
mov
jmp
push
add
in
and
mov
add
xchg
aas
jae
push
movsl
out
jnp
jmp
dec
add
test
cwtl
add
add
dec
inc
mov
xor
and
xchg
inc
or
lea
mov
add
ja
rolb
scas
push
pop
xchg
in
add
sbb
add
lock
or
mov
mov
add
dec
lock
add
jmp
dec
iret
add
inc
repz
icebp
imul
pop
or
stos
add
fadds
rorl
lods
push
adc
ret
jae
add
test
inc
out
cmp
jno
iret
scas
add
xchg
add
mov
lea
xchg
test
shll
add
jns
aad
add
stos
fs
add
sbb
add
repnz
repz
cmc
adcl
clc
mov
out
sbb
leave
mov
sti
dec
movsb
jmp
icebp
dec
add
mov
ja
add
add
add
add
add
xchg
add
pop
fcomp
dec
add
ret
adc
xchg
xor
mov
fisubrl
add
pop
inc
adc
fwait
xchg
push
and
pop
sbb
ret
arpl
pop
add
xor
push
outsl
dec
pop
test
jne
mov
pop
add
lea
and
dec
out
jge
das
pop
add
add
daa
lods
sbb
es
daa
mov
add
rcll
add
mov
inc
add
add
iret
sbb
add
xchg
pusha
add
add
push
push
cmp
pop
add
push
movsl
sub
jle
outsb
js
sbb
mov
mov
add
jo
pop
push
or
lds
mov
mov
cmp
cwtl
out
test
roll
adc
mov
and
push
inc
and
add
push
add
sbb
mov
push
inc
add
inc
pushf
mov
sbb
addb
fcmovnu
inc
pop
add
outsb
xchg
gs
jg
sbb
pop
rcrb
fcmovne
add
aad
dec
mov
dec
js
lock
add
inc
addb
sbb
inc
cmp
jecxz
movsl
add
call
dec
lods
jl
ret
add
test
icebp
repnz
jno
roll
xlat
mov
xchg
test
pop
inc
cs
and
repnz
add
aaa
jbe
test
in
pushf
int3
shrl
mov
adc
or
aad
or
add
pop
in
testb
movsb
inc
add
xor
sub
cmp
clc
inc
cli
outsb
popf
xor
in
add
fadds
pop
rorl
mov
aas
loope
add
sub
int
push
iret
add
mov
aam
mov
and
mov
inc
add
cld
add
lds
mov
mov
adc
dec
push
fsubl
popa
inc
add
pop
das
inc
add
dec
add
pop
or
or
test
jl
add
xchg
fdivrl
add
push
add
cs
add
mov
mov
leave
stos
adc
pop
pop
cwtl
add
push
ds
movsb
push
mov
add
push
add
push
lahf
inc
pop
add
mov
popa
sbb
mov
add
xlat
pop
push
mov
add
adc
pop
loop
ss
aaa
add
add
fcoml
mov
push
add
or
loop
outsl
pop
movb
push
sub
int3
pop
sbb
shr
iret
sbb
mov
sahf
jp
imul
and
xchg
xchg
add
loop
add
in
mov
xchg
mov
add
add
ror
or
sub
movb
cmpl
xor
and
lret
add
cld
fidivs
cli
mov
inc
imul
add
adc
sbb
repnz
jmp
add
lahf
push
pop
add
imul
jle
cmpsl
vaddps
cwtl
cmp
inc
mov
push
add
or
add
lds
pop
add
jmp
add
fisubrs
jg
mov
push
mov
pop
add
bound
or
add
pop
lds
add
lods
mov
sti
add
add
movsb
testl
add
xchg
add
cmp
addl
arpl
pop
sbb
add
dec
push
or
cmpsb
pop
push
add
shll
sub
test
push
in
and
add
add
bound
in
dec
test
fsubs
sahf
xchg
mov
add
mov
add
sub
jl
scas
flds
test
mov
stos
add
cltd
cmp
add
addb
mov
mov
xchg
inc
pushf
scas
add
aaa
add
ret
cmp
mov
add
jno
sbb
mov
popf
mov
adc
in
mov
sbb
push
test
mov
es
imulb
add
jae
sub
mov
hlt
stc
adc
mov
ret
insl
add
out
je
cmc
add
add
testl
add
loopne
mov
pop
cld
popa
add
in
and
insb
sti
push
jge
dec
add
in
add
add
addl
rorl
add
jno
icebp
in
leave
stc
inc
push
push
add
add
mov
cmc
cwtl
fsubrl
sarb
add
or
add
fwait
es
filds
jp
imul
jnp
sbb
hlt
push
lret
sub
out
mov
xchg
jg
push
or
aas
add
add
cmp
xchg
cmp
sbb
xorb
add
mov
aam
add
add
inc
popa
jne
add
dec
mov
add
mov
out
mov
scas
stc
jae
aas
add
jne
imull
add
cmp
cmp
xor
cwtl
jmp
push
das
mov
lahf
leave
stos
jg
js
nop
enter
mov
inc
lods
insl
repz
leave
push
pop
pop
jecxz
fimuls
stc
mull
ret
loope
sub
jno
mov
negb
test
fisubl
out
jne
sub
push
in
xor
enter
std
lcall
fldl
cmp
push
add
or
ja
pushf
adc
and
enter
mov
mov
cwtl
faddl
addl
and
inc
xchg
ret
mov
jecxz
loope
fs
xor
int
into
add
aam
mov
stc
faddl
mov
roll
jbe
dec
inc
add
data16
add
shrl
adc
cmp
repnz
add
add
mov
inc
das
or
add
flds
out
add
cld
int3
int3
testb
adc
push
add
adc
cwtl
add
and
add
push
sbb
dec
inc
add
into
enterw
xorb
add
in
dec
shrb
cmpsb
add
sbbl
bound
mov
push
mov
jge
or
and
std
push
add
rcl
mov
insb
data16
out
cmp
xorl
or
add
inc
movsb
mov
push
sbb
fsubs
dec
add
insb
push
sti
add
mov
fwait
mov
add
mov
lea
adc
cmpsb
cltd
fwait
add
ss
or
insb
xchg
mov
add
push
add
in
pop
clc
push
push
push
add
pop
jecxz
add
rcrl
sub
stos
int3
mov
addl
cld
mov
xor
mov
shrl
add
lret
fdivrs
xor
cwtl
mov
cmpsl
pop
sbb
andl
test
fcmovnu
add
xchg
add
dec
mov
dec
mov
add
sbb
add
add
mov
pop
add
xor
pop
xchg
pop
add
add
pusha
pop
pushf
sub
inc
lcall
mov
sub
je
add
sub
ffree
add
call
icebp
rcll
add
push
add
sbb
iret
add
push
das
lahf
add
adc
pop
dec
out
popa
mov
jl
mov
test
movsl
cld
sti
outsb
push
add
adc
dec
cli
jge
adc
icebp
incl
add
mov
cli
fdivr
add
inc
adc
add
fsubs
push
add
pop
sub
cmpxchg
movb
imul
inc
jl
add
add
mov
mov
jle
loopne
pusha
jp
and
int
sahf
xchg
outsb
jmp
xlat
int
sub
pushf
cli
xchg
mov
arpl
push
lock
add
xor
pushf
add
add
mov
nop
adc
dec
jns
sub
add
push
lock
mov
add
sub
add
loop
aaa
and
sub
inc
xor
scas
or
add
cmp
sbb
and
mov
mov
jnp
add
push
test
inc
pusha
dec
inc
add
xchg
roll
and
lret
add
inc
xor
jecxz
sbb
roll
and
test
jno
push
jl
sbb
mov
stos
add
push
mov
jmp
push
xchg
add
push
jmp
pop
add
pop
cld
add
mov
iret
idiv
add
mov
inc
into
dec
les
adc
aad
stos
js,pn
scas
sti
hlt
add
add
sub
sub
insb
push
adc
add
and
add
aam
add
sbb
mov
adc
add
jae
adc
jg
add
into
mov
or
add
leave
mov
jmp
add
or
add
add
lret
popa
sbb
sahf
or
push
stos
mov
lods
add
fs
mov
mov
push
push
imul
or
aad
add
dec
sbb
hlt
xor
movb
xor
sbb
add
add
add
addps
add
mov
jge
or
repnz
push
les
sub
fsubl
loopne
sti
in
jae
lods
sub
push
pop
mov
pushf
pop
add
lret
add
mov
je
xchg
inc
add
incl
lea
in
xor
mov
jl
dec
cld
add
xchg
xor
add
add
xlat
in
add
rolb
cltd
cmc
push
add
into
add
jno
push
test
push
test
pop
add
pop
fildl
cwtl
aam
test
jne
scas
cltd
movsb
pop
cli
add
mov
mov
inc
add
int3
cmp
add
push
add
sbb
add
cmc
push
inc
cmp
add
test
fucomp
scas
jmp
popf
js
clc
xchg
sub
add
lds
cmpsl
or
fadds
push
cltd
mov
xor
push
mov
movsl
mov
add
or
cmp
add
xchg
jg
mov
lock
subl
inc
mov
stc
hlt
add
add
shrb
jns
dec
aas
jbe
cmpsl
mov
add
fadd
inc
inc
jmp
mov
mov
fistl
jae
stos
lahf
jp
xor
mov
dec
add
add
add
cmpsb
pop
les
cmp
lldt
xchg
daa
add
call
jmp
add
test
iret
add
sub
or
ret
xchg
mov
or
sbb
popf
inc
add
sub
add
dec
pop
dec
add
pop
arpl
cmp
add
int
inc
mov
add
add
fs
loop
mov
jno
adc
lcall
mov
lahf
sub
dec
call
das
add
add
aad
mov
addb
call
add
out
and
int
flds
and
add
testb
add
pop
add
inc
in
jp
int3
add
lcall
cmpl
add
add
add
call
mov
inc
push
lock
add
cwtl
jnp
ja
mov
imul
shll
add
fwait
mov
push
sbb
fmull
addb
pop
mov
inc
and
xor
dec
mov
push
lret
cli
aam
push
adc
xlat
add
pop
xchg
add
push
inc
jns
dec
loope
pop
mov
gs
add
outsl
jmp
jp
inc
xchg
push
mov
bound
pop
pop
xlat
sub
cmp
add
add
mov
add
and
jl
jg
jbe
mov
lds
lea
fildl
pushf
xor
jne
jbe
cmpsb
aas
filds
clc
jmp
mov
inc
cltd
add
xor
sahf
xchg
xchg
pop
imul
push
cmp
sbb
jecxz
inc
adc
call
jge
cli
notb
dec
add
in
jl
jns
in
jae
in
jb
add
jl
adc
roll
and
fistpl
mov
repnz
add
add
sbb
sbb
add
test
or
into
add
add
push
add
sbb
inc
xchg
cld
and
daa
je
addb
test
pop
add
dec
str
shlb
dec
inc
mov
mov
xchg
aas
adc
add
js
add
inc
test
jbe
add
adc
inc
out
dec
add
test
jmp
jmp
sub
adc
cmp
add
add
add
dec
pop
lret
add
int3
les
ret
stos
add
add
ljmp
insl
xorl
add
ljmp
les
add
mov
sub
addr16
or
and
inc
add
mov
add
add
movsl
fcmovu
add
lret
inc
mov
lds
cwtl
or
xor
cwtl
pusha
mov
lcall
clc
or
add
inc
add
inc
stc
or
add
ja
mov
add
pop
add
mov
add
add
add
stos
rolb
mov
push
add
add
cmp
add
out
mov
pusha
add
data16
pop
loope
add
dec
jl
add
push
mov
mov
clc
cmc
inc
add
cli
outsb
add
test
add
in
fadds
jp
out
es
mov
xchg
add
fdivrp
mov
aas
and
or
fstl
dec
lret
flds
add
shll
sti
mov
js
fmuls
ret
out
bound
add
add
add
mov
add
and
mov
mov
inc
and
loope
cli
push
loope
add
scas
stos
add
sub
mov
int
mov
bound
jb
dec
cmp
movsl
xchg
add
add
push
je
sub
add
stos
mov
add
les
imul
mov
pop
xlat
jl
pusha
pop
add
outsb
testl
jb
add
cmp
add
rol
add
cmp
push
std
add
xchg
outsb
mov
mov
dec
and
pusha
add
push
dec
jne
mov
sub
sbb
add
inc
in
sub
fs
dec
add
cli
fidivl
add
or
sub
sub
mov
add
lahf
add
add
xchg
mov
push
add
jmp
add
push
in
sbb
fadds
dec
test
jns
pop
add
cmp
scas
jne
outsl
add
mov
add
pushf
lret
movsl
movb
rcrl
outsb
incb
lcall
inc
ljmp
js
dec
rcrb
ja
aad
sbb
aam
pop
js
popa
lds
add
dec
js
shld
jno
scas
push
out
sub
lcall
testb
cmp
mov
sbb
mov
cld
add
add
and
mov
jl
xchg
cwtl
loopne
add
jno
jb
xor
inc
add
and
sub
cmp
add
add
imul
xor
add
nop
lock
or
gs
jmp
adc
imul
mov
decl
and
add
pop
add
test
xor
pop
pop
inc
add
das
push
fcoml
add
jnp
push
negl
add
cmp
rorl
out
add
stos
add
add
lock
repz
push
add
inc
ljmp
add
sbb
jg
add
push
negb
mov
dec
and
andl
jge
or
mov
add
fcoms
add
add
inc
mov
cmpsl
enter
push
jns
test
pop
cld
filds
xor
enter
inc
lret
flds
aas
icebp
adc
push
loope
jns
call
adc
add
jb
gs
mov
xchg
leave
push
add
add
add
xor
popf
sbb
mov
add
add
ss
push
or
xchg
test
add
jg
xchg
adc
rcr
add
add
push
fildl
xchg
adc
out
add
add
xor
xor
or
mov
fbld
jne
testl
add
xchg
out
test
mov
lea
adc
je
insl
pop
push
add
sub
push
ficoms
add
adc
add
aas
addl
movsl
fisttpl
test
mov
add
arpl
in
inc
sbb
inc
jne
cmpsb
add
pop
mov
jmp
mov
sbb
rcl
add
mov
cmp
add
xchg
sub
add
push
dec
or
pop
jb
jno
aas
mov
in
ret
add
test
lret
sahf
push
cmpsl
mov
mov
das
push
jb
add
xchg
sbbb
add
clc
lret
add
fcoms
or
pop
pop
add
nop
cmp
mov
and
mov
cwtl
xchg
xchg
add
loop
iret
aaa
push
imul
add
push
mov
add
dec
push
shll
and
je
mov
mov
aad
sbb
nop
add
idivl
mov
mov
mov
sbb
pop
add
stos
jmp
push
add
add
mov
lcall
adc
jle
insl
push
cmp
mov
out
sbb
jno
add
outsl
negl
add
repz
dec
jno
addl
iret
or
add
stos
mov
fbld
stc
mov
add
pop
push
add
add
ds
sbb
and
jp
xchg
ja
sahf
or
ss
add
push
mov
sub
mov
dec
dec
xchg
jl
bound
sbb
test
add
xor
fdivrs
cmpsl
mov
xor
dec
pusha
add
pusha
iret
add
sahf
js
add
jle
adcl
dec
xchg
add
inc
and
add
insl
pop
and
jecxz
inc
add
test
jp
mov
add
mov
mov
add
mov
loope
add
std
pop
add
lods
add
inc
popf
add
stos
or
arpl
xor
data16
mov
es
das
cwtl
popf
add
addr16
addb
add
in
and
outsb
mov
dec
add
dec
in
inc
add
sldt
add
in
lahf
ret
push
add
es
push
add
in
add
nop
mov
push
add
bound
adc
int3
xchg
or
mov
xchg
add
aam
insl
js
dec
fisubrl
mov
xor
scas
add
inc
add
in
dec
add
xchg
inc
stos
mov
add
cmp
mov
faddp
add
or
cmp
pop
add
sahf
add
dec
jbe
inc
pusha
sub
push
jbe
add
or
mov
add
jl
push
cs
jg
dec
jne
push
cmp
xor
ljmp
add
ss
add
dec
shll
xlat
loope
inc
add
cwtl
cmp
add
sbb
jbe
adc
lcall
lret
jge
add
pop
add
jns
ret
pop
popa
xlat
add
add
cmp
add
jne
add
pusha
xor
cmpsb
in
pop
xor
jno
scas
sbb
dec
scas
pop
lcall
add
push
leave
sub
add
es
fnsave
pop
push
jb
add
add
jbe
lods
add
inc
jno
repnz
sbb
fiaddl
lods
gs
clc
add
or
add
daa
pop
into
mov
add
fdivrs
xor
lods
xchg
inc
test
add
add
add
add
add
add
rcll
mov
loope
repnz
in
push
add
fs
xchg
mov
push
xchg
mov
jne
aam
fdiv
adc
mov
adcl
fwait
stc
das
add
inc
mov
xor
pop
mov
and
mov
jg
nop
das
fisubrl
inc
adc
adc
sub
add
dec
add
sub
add
xor
int
es
stos
add
or
popf
in
add
xor
lcall
sub
int
test
add
jnp
ret
mov
xor
hlt
call
add
jmp
rcl
iret
add
mov
incb
and
jno
call
arpl
mov
pop
nop
jp
add
enter
test
cmp
and
xchg
lret
pushf
add
add
shll
stc
mov
mov
ljmp
add
xor
sub
push
pop
imul
call
jbe
lret
add
adc
add
xchg
into
add
pop
testl
jae
jmp
adc
or
xchg
inc
push
test
add
and
lret
cmc
aas
mov
or
aam
mov
data16
lds
jge
add
xlat
pop
jbe
add
cmpsl
jmp
adc
cmp
lds
mov
mov
add
push
adc
sub
xor
dec
frstor
xor
mov
jle
add
in
add
imul
add
inc
xor
fs
mov
add
push
lea
push
add
movsb
in
mov
add
mov
jg
dec
bound
inc
adc
pop
bound
mov
jb
gs
movsl
clc
add
mov
cmp
cwtl
stos
pusha
loope
cld
aad
fistpl
add
push
push
sub
int3
daa
movsb
xor
int3
subl
mov
aaa
popf
mov
addl
pop
jp
add
shl
sub
repz
sub
add
or
cld
ljmp
pop
rolb
jecxz
out
adc
push
testl
add
jne
add
pop
inc
mov
inc
sahf
imul
fildl
es
xchg
andl
les
loopne
stos
add
rclb
int
mov
sahf
push
repz
add
les
push
int
mov
lock
inc
cmp
inc
cli
add
xor
ja
xchg
push
add
mov
inc
add
sahf
sub
add
je
inc
cmc
push
fildll
outsl
shrb
add
out
sub
adc
aad
sbb
add
dec
jl
inc
cmp
divl
jg
push
add
adc
jp
add
xchg
pop
push
and
add
aad
stos
stos
shlb
xor
mov
jmp
mov
adc
and
adc
add
or
add
pop
shl
add
and
cmp
add
les
stos
mov
movsb
pop
out
add
push
enter
movsl
add
sbb
pop
std
pop
out
aam
sarl
cmp
ficomps
add
add
sahf
and
xor
sbb
jp
imul
bound
add
push
lcall
push
xchg
dec
stos
repz
cmpsl
add
and
mov
lahf
add
push
jne
daa
movsb
add
mov
fiadds
lea
sub
jg
cmp
in
test
add
std
fimull
leave
mov
or
and
in
lods
mov
int3
popfw
or
jmp
lret
add
mov
cld
mov
adc
clc
sub
and
add
popa
xchg
sub
push
jmp
pop
jle
or
mov
insb
hlt
addb
test
sbb
and
push
add
mov
mov
add
cwtl
aad
mov
add
push
jecxz
cmpb
cmp
lods
daa
cld
into
movsb
jmp
add
inc
add
sarl
push
sbb
cmp
out
aas
outsl
add
leave
sbb
cmpsl
jnp
mov
mov
ffreep
adc
add
add
mov
in
test
add
push
or
and
adc
add
scas
les
inc
xor
add
jne
xchg
add
inc
mov
inc
add
pop
or
jae
sub
mov
add
xlat
add
outsb
ljmp
daa
add
imul
incl
repnz
movsb
add
cmp
flds
loop
pop
xchg
xchg
test
xor
dec
jl
aam
imul
fisttpl
ds
ljmp
hlt
add
xor
add
adc
mov
mov
add
iret
stos
add
add
je
sahf
and
or
in
add
pushf
push
mov
mov
andb
or
testb
and
jno
add
ja
aaa
test
cwtl
cmp
pop
lahf
arpl
loopne
and
imul
cmpl
mov
jge
jecxz
add
mov
cs
xchg
add
outsl
cmp
jnp
mov
push
dec
stos
es
add
add
inc
sbb
push
xchg
xlat
int
or
add
jno
add
add
add
push
lods
sbb
add
inc
sbb
mov
push
mov
lock
add
add
xchg
add
or
pusha
rcrb
xlat
add
sarb
adc
add
sbb
je
sub
xchg
mov
mull
add
jne
pushl
add
push
in
add
add
adc
add
push
xchg
je
mov
rol
add
sbb
add
push
pop
add
mov
add
lret
add
arpl
pusha
add
rcrl
add
add
adc
fdivs
add
pop
pop
std
test
add
sahf
push
jb
add
mov
dec
pop
pop
fstps
fstps
iret
roll
sub
add
je
or
dec
xor
notb
sbb
push
bnd
jae
dec
ret
xchg
aaa
adcb
inc
outsb
aaa
push
and
cmp
add
cmp
or
loope
jmp
fistps
daa
mov
add
bts
shll
xor
cmp
add
sub
adc
add
mov
jae
rclb
sahf
lret
push
add
push
adc
pushl
lods
push
add
lods
add
add
jo
push
add
test
lods
flds
sub
dec
jo
add
adc
out
and
test
add
push
add
clc
xchg
push
mov
lcall
inc
shr
add
outsl
add
ljmp
ror
add
adc
cmp
add
add
rcrb
add
add
add
xchg
dec
push
test
dec
rcrl
xchg
cmpsb
add
nop
es
add
jo
or
cmp
mov
mov
add
idivb
add
add
add
mov
pop
dec
and
add
dec
jnp
add
add
inc
add
jmp
pop
pusha
add
cltd
pop
add
push
outsb
push
mov
lret
int3
push
add
add
cmpb
decl
mov
mov
sets
sub
add
insb
jecxz
add
insb
add
cmpsb
push
add
jmp
mov
add
fists
movsl
repnz
pusha
add
cltd
or
stos
dec
repz
add
add
add
xchg
cmc
enter
shll
inc
add
sbb
mov
xchg
or
or
push
jge
shll
jl
mov
add
pop
in
add
add
sub
xorl
hlt
add
leave
cmp
add
xchg
xchg
add
je
adc
xor
and
jp
push
xchg
add
fwait
add
mov
jle
jp
cmp
jno
mov
add
fcmovbe
mov
add
mov
lret
push
add
int
add
push
push
add
out
xor
sbb
ror
add
int3
pop
sub
add
mov
dec
mov
shrl
pushf
add
mov
add
xor
movb
mov
testb
dec
test
pop
sbb
xchg
or
jge
or
repnz
fidivrs
mov
fstl
add
rolb
pop
mov
add
inc
adc
mov
out
les
add
cmp
jmp
and
push
pop
xchg
scas
cmp
jmp
inc
insl
mov
cmp
fwait
add
mov
dec
xchg
xlat
sbb
jo
popl
sti
lods
push
cmp
les
jo
test
ljmp
cltd
in
mov
push
xor
insb
mov
flds
addr16
lret
xor
mov
xor
loope
add
lods
pop
add
pushf
push
jb
add
sub
jns
out
mov
sahf
addr16
add
popa
mov
test
add
lds
fidivrl
and
add
fdiv
sub
aas
xor
cmp
into
pop
sahf
inc
psllw
push
sbb
cmpsb
mov
add
das
xchg
xchg
cmp
in
xor
test
add
jge
xor
test
inc
mov
add
cs
cmp
add
ret
movsl
shlb
add
je
sub
dec
in
cmp
mov
jge
fbld
xlat
ffree
mov
add
lods
xor
add
repz
sub
aaa
adc
add
add
add
iret
sbbl
or
push
add
stos
add
test
into
pop
incl
cli
not
mov
movsb
add
add
popf
jo
cmp
cltd
add
sub
pop
push
stc
sbb
xor
int
add
cmp
das
add
test
add
addr16
cmp
xchg
fisubl
mov
xlat
adc
add
jmp
add
mov
and
add
and
pop
inc
add
add
jl
add
jns
dec
inc
aaa
movsl
sbb
aas
mov
dec
testl
mov
xlat
int3
test
add
add
shr
or
push
into
jmp
add
or
sub
and
jle
add
fisubrs
add
mov
out
or
jl
ret
and
cltd
leave
add
in
push
pop
push
add
dec
ret
add
repz
pop
push
xchg
lahf
add
sub
or
fdivrs
xchg
dec
ret
mov
ret
cld
sbb
jo
orb
sbb
aam
enter
dec
out
pop
xor
mov
add
mov
and
inc
mov
lret
str
jp
add
jbe
add
pusha
xor
sub
add
and
sub
or
neg
mov
adc
jnp
cltd
add
push
subb
aaa
enter
icebp
push
lcall
gs
outsl
add
add
sbb
add
push
ret
pop
sub
add
movsb
popf
jle
add
mov
add
ljmp
dec
cli
mov
mov
jns
or
lea
xor
add
jle
lock
ret
dec
pop
es
jnp
mov
pop
add
or
repnz
fdivr
jne
pop
fimull
xor
cwtl
testl
xor
test
mov
aas
add
je
jl
inc
xchg
ljmp
jo
movsb
add
hlt
mov
movl
jmp
or
cmp
dec
mov
add
adc
jo
add
dec
add
fdivs
dec
sahf
inc
lods
lds
add
mov
sub
dec
add
into
sub
add
jnp
xor
mov
out
les
xor
cwtl
xchg
add
jle
leave
mov
mov
push
add
icebp
call
lock
loope
and
jg
mov
mov
ljmp
test
in
and
cmp
add
stc
add
cmp
add
xchg
push
xchg
ljmp
add
inc
xor
push
out
add
pushl
cmp
add
cltd
add
or
dec
and
testl
filds
test
stos
adcb
xchg
jmp
pop
xchg
cmp
mov
xor
add
je
sbb
push
and
mov
arpl
push
cmp
add
arpl
je
jno
mov
add
jbe
incl
nop
gs
sub
add
inc
pop
repnz
jo
and
call
add
adc
cmp
mov
push
rorb
add
and
pushf
add
ret
lahf
into
stc
add
sbb
add
fildll
insb
sbb
xchg
idivb
mov
xor
dec
les
fs
add
push
fs
lock
sbb
push
out
pop
xor
push
dec
andl
jne
in
sarb
pop
js
add
aaa
sbb
or
dec
in
add
inc
fwait
aam
int3
add
jge
add
fsubrl
out
cwtl
add
scas
pop
inc
add
mov
and
add
mov
ljmp
add
scas
add
int3
sub
mov
cmp
pop
pop
push
frstor
push
push
lahf
sahf
add
cs
fistpll
mov
add
jne
sti
clc
xchg
add
add
lret
xchg
add
sbbl
mov
add
mov
fiaddl
xor
push
xor
aam
add
add
ljmp
fsubr
cmc
fs
xor
add
xchg
ret
pop
adc
inc
mov
call
lods
add
xor
sti
add
inc
stc
rorl
xchg
in
add
xchg
out
jae
mov
cmp
jg
stos
cmpsb
add
inc
add
inc
and
call
jnp,pt
lock
mov
mov
add
adc
and
rorb
add
cmp
punpckhdq
pop
mov
sbb
jb
mov
sti
add
cmp
and
adc
add
in
ss
add
jl
xchg
xchg
add
add
pop
repnz
mov
mov
and
mov
mov
add
xchg
iret
cs
mov
movsl
cmc
or
jae
adc
decb
inc
push
mov
pop
adc
aad
push
jecxz
add
pop
xchg
push
mov
cmp
mov
xchg
pop
dec
sti
addl
dec
add
jl
pop
add
jg
sbb
mov
xchg
rolb
shr
ret
inc
inc
add
icebp
test
sub
cmc
and
cs
add
movsl
add
add
fwait
add
jb
add
cmp
jg
lock
add
xor
add
cltd
call
and
add
mov
inc
testl
jl
pop
add
pop
add
and
dec
aam
add
add
push
xor
hlt
daa
cmpsb
add
push
in
ficoml
fistl
add
loope
sbb
adc
push
incb
gs
ret
add
inc
mov
or
add
mov
add
cmp
pop
dec
fwait
add
add
adc
insl
add
jge
add
or
jb
push
add
mov
mov
lea
add
add
cs
push
sbbl
add
add
insb
adc
sub
add
inc
aas
gs
add
sub
test
popa
jmp
xchg
hlt
pop
add
pop
test
xor
aam
ljmp
sbb
cltd
arpl
vmwrite
mov
out
pop
popf
push
push
add
mov
cs
adc
int
sub
add
decl
add
add
and
out
sbb
inc
and
mov
fstpl
mov
add
das
mov
jo
mov
sbb
repnz
fnsave
je
mov
xchg
add
pop
pop
cli
adc
loope
incl
or
inc
cmp
pop
inc
dec
addl
das
sub
dec
faddp
add
iret
push
jge
fisttps
add
push
rolb
push
sub
push
push
mov
or
sub
lods
push
js
rol
dec
add
out
xor
inc
mov
pop
shlb
inc
add
pop
subb
mov
jl
cld
xchg
mov
imul
pop
push
out
add
icebp
mov
add
std
pop
dec
add
jnp
inc
add
pop
mov
mov
call
add
jg
pusha
add
dec
mov
adc
jecxz
out
adcl
mov
xchg
cltd
in
rolb
aas
aam
out
mov
add
push
xor
add
push
ficoml
rcr
add
cmp
mov
jne
add
decb
loope
xchg
xchg
push
cltd
pop
add
rclb
into
enter
ljmp
lret
lret
sub
add
sub
aam
rcrl
sbb
mov
mov
add
imul
mov
push
jl
jbe
adc
pop
inc
mov
test
add
mov
push
aam
mov
add
ljmp
push
aad
sub
dec
or
les
cmp
jne
sub
stos
add
inc
pusha
add
sub
lods
jmp
verr
or
and
ja
testb
mov
mov
nop
adc
in
add
lcall
push
rorl
xchg
test
insb
add
loope
sti
jmp
mov
arpl
jge
adc
add
add
add
mov
add
inc
js
cmp
add
and
rclb
inc
add
rcll
add
out
sub
imul
imul
push
jmp
add
cmp
pop
sbb
fcmovb
adc
in
das
icebp
adc
add
xorl
add
sbb
insl
xchg
les
aad
lahf
add
test
dec
out
out
jp
test
push
add
or
dec
packsswb
sbb
push
push
scas
xchg
add
addr16
add
add
sbb
add
ficomps
xor
cs
xor
add
add
clc
jl
movsb
xorl
mov
pushf
sbb
add
jo
and
loop
and
jnp
add
xchg
fs
add
andb
movb
in
jae
add
rorl
dec
and
add
fucom
out
add
add
add
push
lods
add
xchg
push
das
dec
rcl
add
jb
add
fs
push
xchg
popf
add
lods
leave
add
mov
cmpl
push
xlat
add
inc
or
mov
jmp
pop
lahf
pop
clc
add
sub
inc
shrl
sbb
imul
add
inc
xchg
loop
inc
add
daa
adc
add
mov
icebp
cmp
dec
add
jg
sub
or
outsb
mov
mov
inc
gs
sub
add
int
add
xor
and
dec
cmp
jo
add
cli
lods
ja
insb
add
loop
mov
mov
jle
rolb
adc
sti
add
sahf
dec
adc
test
sub
into
jo
add
or
cmp
add
sbb
add
notb
orb
pop
pusha
add
mov
loop
xchg
inc
sbb
adc
xor
mov
fwait
xchg
arpl
add
add
xorb
fs
sbb
add
add
xchg
jo
mov
xor
and
aaa
divl
add
out
repnz
xor
lods
mov
add
xlat
iret
hlt
pop
add
cmp
daa
add
bound
mov
add
in
pop
and
loop
ja
add
add
and
ljmp
mov
ja
lcall
xor
jle
push
dec
jne
and
xchg
and
repz
pop
dec
roll
test
pop
sub
scas
xor
sub
dec
fistpll
adc
pop
add
xchg
pop
hlt
jns
mov
add
test
add
mov
popf
iret
mov
sbb
mov
int3
inc
jo
pop
add
push
loop
ja
add
mov
into
add
mov
jecxz
mov
sub
outsl
or
add
sub
push
push
xor
ss
push
xor
add
add
and
sti
mov
fs
add
lea
pop
add
addl
fildl
sahf
mov
pop
add
add
xlat
push
fcomps
add
cmp
jne
add
fucomi
stc
sub
push
adc
pop
subb
add
sbb
cli
mov
pop
in
jge
mulb
stc
out
add
mov
push
add
sub
roll
test
loopne
add
call
add
popf
dec
add
sub
xchg
or
in
rolb
dec
popf
pop
inc
add
pop
pop
add
jecxz
jbe
xchg
add
add
js
dec
add
sub
add
add
add
in
mov
fistpll
add
or
pop
add
xlat
mov
in
sahf
add
add
add
loopne
lock
mov
mov
mov
movsl
movsb
add
sbb
push
cmpsb
sbb
push
std
repnz
xor
add
mov
js
popf
pusha
add
in
add
jo
enter
add
add
xchg
rorl
add
scas
test
sub
cwtl
add
pop
or
leave
dec
add
or
push
scas
cmpsb
add
mov
inc
loope
lods
inc
stc
pusha
add
mov
lods
cmp
add
pop
add
jle
int3
aam
cmp
into
add
imul
clc
add
push
cmp
pop
incb
imul
push
add
dec
jmp
sbb
cmp
fadds
dec
cli
or
inc
xchg
jne
decl
in
scas
add
jne
rolb
or
add
mov
fimull
loop
or
lea
arpl
in
add
dec
and
sti
jecxz
inc
add
hlt
pop
push
add
sbbl
imul
fdivrl
dec
add
add
adc
add
movsb
dec
adc
lods
rolb
mov
test
rcl
adc
not
add
stos
sbb
or
add
adc
loopne
add
lods
add
jge
sub
pop
cltd
or
push
in
add
cmp
xor
leave
das
mov
lea
push
mov
lret
jb
movsbl
cmp
cltd
clc
test
mov
add
imul
push
adc
jg
add
mov
test
cwtl
std
add
xor
shrl
leave
mov
aad
push
xchg
pop
add
mov
inc
andb
int
arpl
add
lcall
and
mov
fwait
xchg
sbb
lret
add
out
inc
and
lea
data16
repz
int
jl
mov
cwtl
mov
lock
movb
fwait
dec
popa
mov
out
jp
jmp
shll
repz
addb
idivb
xchg
pop
jbe
add
stc
add
dec
push
add
sahf
incl
pop
xchg
cli
add
fidivs
lds
jbe
add
xor
mov
stos
pop
and
add
dec
ss
jg
lods
jbe
add
add
daa
push
jnp
mov
push
faddl
cmc
sbb
add
dec
movsb
mov
leave
pop
sub
sub
xor
outsb
sub
lods
add
sbb
lret
test
addr16
mov
adc
add
xchg
pop
add
sarl
add
jbe
cmp
sahf
mov
out
add
fwait
add
aaa
ficompl
add
dec
add
add
mov
in
jns
mov
imul
add
adc
add
mov
add
fnstenv
stc
aaa
nop
jl
mov
mov
insl
out
jae
add
mov
cmc
add
popa
adc
add
add
movsb
cmp
test
add
add
inc
jno
mov
lret
movb
dec
dec
add
mov
add
add
or
add
repz
es
add
add
pop
pop
aas
cmp
mov
jge
add
dec
jle
push
add
adc
cmp
add
cli
xor
adc
repz
xchg
add
add
jno
in
faddp
dec
push
add
scas
test
mov
xor
add
fwait
lea
mov
add
data16
mov
popf
fucomp
add
mov
add
rcr
push
add
ret
jbe
add
cmp
into
add
mov
testl
mov
lret
ret
inc
rolb
into
or
testl
mov
mov
aas
add
andl
mov
mov
adc
xchg
mov
add
add
add
cli
loop
push
add
hlt
sub
xchg
pop
aad
add
xlat
insl
or
push
push
stos
add
pop
xchg
testb
mov
xor
sub
fwait
jnp
es
movsl
add
add
in
mov
pop
add
cltd
inc
sbb
jle
pushl
pop
stc
sub
aam
in
cmc
push
jg
in
and
mov
faddp
add
stos
mov
cltd
int3
add
mov
and
add
mov
in
enter
adc
cs
pop
jl
add
mov
inc
add
mov
or
pop
bound
cmp
and
push
ret
mov
xor
fstpl
sub
mov
add
cmc
and
add
add
add
in
arpl
add
sub
xor
add
add
movsb
add
enter
out
push
add
shrb
jecxz
add
add
mov
jae
loope
add
ret
rcrb
add
push
fwait
add
add
std
push
lret
cmpsb
sub
pop
jo
jb
pop
jbe
push
add
adc
xchg
jne
jne
sarb
add
lock
xlat
mov
mov
in
add
add
mov
add
jecxz
icebp
and
scas
sbb
add
add
insl
add
out
inc
aas
aad
add
push
add
add
jbe
in
add
imul
aad
add
fildll
out
add
cltd
pop
mov
add
sub
cmpsl
add
mov
test
pop
dec
sbb
add
jl
outsl
add
popa
sbb
lldt
push
test
add
repnz
jp
mov
pushf
add
add
sldt
xchg
mov
sbb
mov
jge
jl
hlt
into
add
add
mov
add
repz
xchg
sbb
cltd
dec
mov
lods
and
outsb
rorb
or
fadds
test
notb
xor
cmp
mov
xchg
add
mov
add
mov
push
add
imul
jp
add
negl
pop
add
jne
xor
mov
add
mov
lods
add
outsb
sbb
hlt
push
jae
mov
jb
add
xchg
fstpt
dec
movb
push
negl
aam
xchg
jo
mov
add
jecxz
add
jp
aam
ret
xlat
dec
aaa
fldl
pop
arpl
xor
jle
add
xor
rclb
lahf
popf
sbb
outsb
add
cltd
xor
hlt
insl
add
add
push
rolb
test
add
sbb
out
jne
inc
lret
push
sbb
lods
mov
arpl
xor
lahf
mov
stos
add
add
adc
scas
or
mov
gs
out
mov
imul
xorb
jle
mov
loope
ret
xchg
add
add
push
js
jns
sar
pop
notl
outsl
out
clc
pushf
pop
pusha
add
test
clc
movsl
add
sbb
outsl
mov
lds
sar
add
xchg
inc
lahf
add
lods
sub
lds
cmp
add
test
inc
ret
add
sbb
fildl
or
dec
xor
repnz
ljmp
loop
add
stos
shll
fidivrl
out
add
xchg
mov
scas
lcall
sbb
leave
adc
scas
das
add
xchg
pop
pop
test
aas
fidivrs
lods
loope
add
cltd
jo
sbb
cs
push
adc
add
loop
mov
outsb
lret
sbb
add
pushf
push
std
add
push
adc
push
pushf
add
jl
pop
push
add
cmp
mov
mov
movsb
add
fisubs
cltd
fildl
dec
push
push
pop
xlat
add
sub
add
lcall
cwtl
outsl
lea
inc
add
test
mov
xor
jmp
mov
inc
add
adc
sahf
add
mov
add
test
pop
adc
incl
adc
int3
loop
dec
xorl
add
enter
fstpt
dec
add
iret
cmpsb
mov
mov
pop
mov
add
pop
sbb
cli
dec
mov
dec
mov
jnp
cmp
mov
andl
add
xchg
adc
movsl
fstl
lods
repnz
push
pop
ss
rorb
fiadds
insl
loope
mov
rclb
mov
jns
aaa
adc
out
xchg
movsb
les
or
jbe
mov
mov
mov
or
aaa
shl
add
aas
in
add
ret
in
sbb
add
or
push
add
call
mov
push
add
lea
add
add
dec
les
std
iret
add
jne
add
dec
xchg
scas
lret
fsubs
scas
dec
cld
je
jp,pn
add
add
push
cmpsl
add
loope
popfw
add
into
and
iret
enter
pop
and
add
dec
ret
lret
pop
push
insb
pop
scas
pop
add
ficoml
std
movl
ret
pop
add
push
cmp
int
xchg
add
xor
add
add
addr16
and
out
adc
popf
push
mov
out
add
add
xchg
call
int
cmpsb
add
roll
sbb
cmp
inc
add
roll
xorl
ljmp
add
fldt
push
popf
in
dec
leave
add
out
add
lcall
sbb
mov
stos
sbbb
sub
sbb
xchg
add
adc
jecxz
add
add
shll
rol
add
add
or
add
adc
xor
ret
pop
and
test
in
movl
add
out
jnp
lock
mov
sub
in
popf
add
jb
in
add
jmp
addr16
dec
fnsetpm(287
std
add
iret
sbb
cltd
jmp
outsl
sub
in
int
insb
shlb
add
aas
jg
lds
push
sub
out
jge
jp
gs
fwait
ljmp
jnp
mov
pop
add
add
aam
loopne
out
loope
stc
pop
insb
add
scas
cmc
inc
clc
add
icebp
lods
sub
repz
flds
and
push
fwait
mov
add
mov
dec
out
sub
jns
ljmp
das
add
xchg
lods
add
mov
sub
fadds
rolb
xor
cmp
out
clc
sub
in
clc
mov
add
mov
mov
hlt
lods
jbe
add
mov
cmp
add
add
push
mov
adc
iret
cmpsb
sbb
add
lods
lock
add
das
add
ds
int3
add
sbb
mov
icebp
mov
ds
jne
add
movsb
adc
scas
add
stc
add
jge
cmp
add
scas
aad
mov
cmp
cwtl
mov
cmpsl
lods
cmpb
std
push
in
add
in
movl
stc
faddl
orl
in
roll
fsubp
cmp
add
cmp
inc
out
test
sbb
adc
lret
or
dec
xchg
add
add
add
jne
inc
jecxz
mov
daa
add
mov
push
movsb
add
in
inc
cwtl
add
add
jno
add
std
xor
cld
test
add
add
add
add
mov
add
imul
pop
adc
scas
dec
cmp
inc
lods
add
dec
and
pop
lods
add
in
xchg
mov
adc
add
mov
add
inc
sbb
mov
mov
stos
add
xchg
insl
cmp
mov
clc
mov
jne
repz
add
add
sbb
nop
pusha
js
pop
mov
add
adc
adc
cmp
push
test
fnstsw
in
or
push
xchg
xor
add
mov
add
add
hlt
and
add
iret
out
sbb
bound
add
jbe
lahf
add
add
fldl
mov
sbb
and
testb
jle
add
dec
cli
mov
inc
shlb
adc
xor
inc
dec
int3
add
or
inc
push
add
addb
mov
add
add
mov
cltd
ss
in
jmp
mov
fiaddl
fsts
sub
add
add
xor
add
loope
pop
dec
sub
pop
add
push
add
cmpl
mov
inc
jge
sbb
ja
xchg
test
jne
in
inc
add
rcrl
add
xor
add
dec
sahf
push
mov
movsl
mov
add
add
shl
rcr
add
sbb
mov
add
stos
daa
jnp
jo
add
aas
sub
pop
add
add
icebp
inc
add
add
fstp
fwait
add
das
xchg
add
icebp
popa
lods
filds
test
push
dec
aas
filds
imul
cmp
dec
pop
add
das
gs
or
sub
neg
insl
add
ds
jae
mov
mov
sti
add
out
add
pop
add
sbb
leave
jo
jo
add
add
pop
out
or
sub
clc
lahf
and
jnp
and
xchg
mov
xlat
outsl
mov
mov
das
add
jbe
add
xor
sahf
adc
add
cmp
cmc
add
cmp
lret
and
fmul
sub
mov
test
es
or
or
jp
jbe
jno
jl
insb
fmuls
sbb
enter
bound
or
hlt
add
xor
add
xchg
sti
cmp
clc
and
enter
mov
xor
ss
jl
jns
addb
xchg
fidivrl
scas
jg
jns
add
lods
dec
push
inc
scas
add
stos
iret
add
cwtl
repz
dec
int3
shlb
xor
add
mov
add
cmp
int3
popl
in
xor
xrelease
add
adcb
icebp
add
jge
mov
incb
lods
cmpb
hlt
imul
out
add
add
sub
das
add
or
xor
add
into
push
dec
movsb
addb
mov
add
popa
pop
mov
ljmp
xchg
add
movsb
or
add
je
ret
shrb
popa
movsl
add
addb
cmp
insb
add
add
loop
inc
sti
dec
jo
or
jle,pt
ljmp
addb
push
pop
ljmp
ret
mov
mov
add
jl
jno
xor
add
leave
incb
dec
ds
cmpsb
in
jo
xor
cs
add
ret
add
out
add
pop
xchg
int3
add
popf
mov
add
lods
mov
add
dec
inc
inc
jnp
rclb
leave
stc
inc
add
or
xchg
cmc
add
mov
iret
stos
or
mov
repz
push
int
test
mov
add
popa
test
jmp
add
sub
mov
xchg
arpl
out
sub
add
pop
repnz
mov
aaa
jb
push
rclb
add
mov
les
xchg
add
adc
subl
hlt
jge
adc
loope
xor
addr16
add
jb
add
adc
filds
orl
int
mov
inc
add
ljmp
test
pop
add
aas
or
out
outsl
add
xchg
dec
outsl
dec
jbe
add
or
add
cmp
sbb
je
mov
out
add
stos
cmp
imul
lcall
cld
mov
push
sti
add
add
stos
push
fcmovnu
add
push
clc
xchg
add
cmpsb
mov
je
jo
xor
pop
add
mov
cmp
shl
test
add
lods
cmc
addb
flds
and
add
aad
fildl
xchg
leave
and
push
movsl
xchg
mov
into
add
add
ret
sub
push
ret
rolb
add
sbb
jne
jno
repnz
or
in
mov
fldl
jle
dec
and
mov
jae
and
xchg
add
mov
cld
out
sub
add
xchg
add
jb
lcall
add
xor
or
popa
lahf
cld
inc
add
je
jmp
ljmp
xchg
xor
js
bound
jnp
adc
testb
movsl
sub
add
scas
dec
fdivrl
add
pop
and
mov
inc
pop
pop
inc
pop
mov
addb
repz
add
xchg
movsb
add
adc
nop
popf
add
in
push
lahf
pushf
lea
mov
add
movsb
push
add
jns
sti
mov
notl
in
push
test
or
les
lea
dec
outsb
add
add
iret
loope
mov
ret
data16
cld
cmp
popa
push
idiv
incl
mov
roll
dec
lret
mov
sub
lret
dec
dec
dec
addl
add
mov
mov
push
pop
shrb
and
jmp
add
call
jno
mov
inc
adc
pop
mov
add
dec
lods
add
xlat
mov
pop
add
cmp
and
and
xor
jne
and
cltd
push
comiss
add
dec
addr16
roll
or
roll
jb
les
jp
test
fwait
add
ss
jb
ret
or
add
dec
add
xchg
add
sbb
dec
icebp
gs
aas
add
add
out
cmpsl
mov
ficoml
xor
sti
push
add
xor
test
or
add
and
mov
inc
add
insb
pop
inc
inc
pop
aad
add
add
repz
add
cli
mov
add
adc
push
push
add
cld
push
lcall
and
test
fisttps
and
add
in
add
out
xor
adc
lock
mov
shll
push
add
adc
insb
mov
sbb
add
cmp
jg
repz
enterw
add
push
adc
xchg
add
and
cs
jl
or
addr16
mov
imul
inc
sti
mov
add
or
add
push
add
daa
jbe
insl
push
in
sbb
add
pop
fcoms
add
add
dec
sti
add
sbb
lret
push
ss
fxch
add
stos
add
enter
adc
stos
mov
xchg
add
push
scas
lea
add
mov
pushf
xchg
add
mov
dec
add
mov
cld
call
aaa
pop
add
rcl
mov
imul
cmp
mov
jb
orb
je
pop
xchg
cld
add
popf
jne
pop
add
out
ret
add
push
jle
les
sbb
sub
fs
cmp
inc
add
push
add
xor
dec
mov
xchg
jg
add
test
add
add
dec
out
add
add
add
sarb
add
push
mov
add
add
or
add
aaa
fsubs
roll
fistpl
and
jo
cwtl
mov
add
popl
sbb
xchg
add
mov
subl
add
add
mov
rcrb
sub
insl
push
ret
and
enter
add
add
add
fcompl
push
add
mov
sbb
inc
pop
add
enter
sub
or
xchg
add
push
sub
fistps
push
jmp
dec
inc
inc
popa
xchg
imul
scas
add
jl
js
mov
inc
inc
add
popa
lea
mov
push
insl
cld
arpl
int3
adc
inc
mov
or
roll
iret
pop
and
jle
inc
dec
sar
imull
add
and
xor
add
add
jo
inc
xlat
add
xor
cmp
sahf
lods
cwtl
inc
outsb
add
sarl
add
ds
xchg
add
mov
pop
cmp
dec
loopne
add
dec
jo
add
xchg
aas
dec
add
sub
cmpsl
sub
fildl
iret
cmp
xor
shl
es
das
out
imul
mov
ret
inc
add
lock
mov
xor
arpl
fmuls
jmp
add
cmp
mov
inc
testl
add
cwtl
lods
sti
pop
inc
add
bound
ss
test
adc
or
int3
jno
pop
mov
jb
xchg
enter
fdivl
call
movsb
add
js
scas
add
push
add
in
into
mov
sarb
mov
add
pop
ret
xchg
add
add
cmp
add
add
push
or
stos
inc
pop
add
hlt
cmp
mov
xchg
jno
xchg
add
sbb
xchg
int3
push
movsb
lods
add
add
pop
clc
mov
icebp
fwait
je
test
andb
sub
add
mov
popa
dec
dec
stos
add
dec
or
mov
lahf
ret
hlt
repz
add
jno
dec
jo
ss
scas
in
add
jae
jge
add
scas
push
sub
cs
add
movsb
pop
addr16
cmp
jno
add
add
roll
cmp
or
add
das
dec
loop
mov
xlat
and
mov
mov
stos
addl
inc
sub
add
aad
add
out
add
adc
mov
jmp
les
fiaddl
rorb
add
and
add
add
add
ja
fdivrl
add
sbb
adc
inc
and
dec
shr
add
or
and
or
xor
addb
xchg
pop
and
add
jmp
jne
int
mov
jnp
filds
orl
mov
das
aad
add
dec
outsb
add
and
loop
mov
out
hlt
dec
add
add
les
push
add
pop
iret
into
adc
lret
adc
add
xor
jae
xor
add
or
sbb
ret
add
xorb
mov
aas
xchg
repz
xchg
popl
cmp
dec
or
in
add
fbstp
add
push
push
imul
out
les
lret
add
lods
cld
add
fwait
xchg
rcll
and
and
mov
and
lcall
sub
cmp
add
paddusb
add
jbe
ja
adc
lea
stos
add
bound
sbb
sbb
mov
add
sbb
xchg
cwtl
or
add
icebp
lret
add
inc
ss
fnsave
add
dec
add
lcall
add
mov
mov
lcall
sahf
add
add
icebp
add
es
xchg
imul
inc
fadds
push
mov
fs
add
sbb
fstps
xchg
nopl
enter
sub
sub
lods
mov
mov
cli
add
mov
add
gs
pop
lea
pop
pop
loopne
call
fdivl
dec
call
adc
movsl
aas
arpl
jno
mov
loopne
jne
stc
add
lea
lret
or
lea
add
stos
test
addr16
les
addb
cmp
lds
xor
or
movl
out
ss
lahf
or
repnz
enter
cmp
lret
add
cmc
inc
cmp
or
and
iret
add
int3
scas
and
aam
and
add
pop
sahf
inc
add
add
add
sub
sub
test
das
in
jno
sub
add
xchg
faddl
push
jno
lods
cwtl
fnstsw
add
int
inc
dec
add
mov
movsl
sub
js
clc
add
push
xor
ret
cmp
mov
ja
inc
add
addl
in
cmp
addl
and
inc
add
rorb
cmp
test
scas
outsb
mov
outsb
into
cmp
add
sub
cli
add
xchg
jle
adc
add
add
xchg
popf
add
jle
fildll
add
sbb
insl
sti
jae
push
stos
adc
insb
adc
add
ljmp
jle
and
incb
xlat
sbb
add
pusha
mov
push
jbe
sub
cmp
and
addl
add
hlt
mov
add
add
mov
add
aam
testl
inc
add
or
popa
sub
sbbl
cwtl
mov
pop
aas
add
rorb
lea
imul
xchg
test
or
lds
or
jnp
stc
mov
add
pop
jecxz
add
aas
push
mov
popa
movb
push
dec
add
sbb
jmp
lahf
add
add
dec
sbb
jno
add
add
dec
mov
adc
adc
fisubl
dec
and
or
fadds
faddl
test
ljmp
cmpsb
add
sahf
add
lahf
push
add
lahf
repnz
mov
aaa
add
jns
push
xchg
mov
add
and
insb
xor
insl
add
loop
add
daa
flds
and
mov
add
pop
adc
add
outsb
aaa
dec
add
hlt
stos
push
add
add
mov
add
inc
test
clc
addr16
add
xchg
sub
dec
mov
mov
inc
add
rorl
scas
add
mov
mov
xor
add
scas
sbb
mov
out
and
push
add
popf
inc
mov
xlat
hlt
sbb
sub
add
push
add
fadds
cmp
add
or
dec
fiadds
pop
or
mov
sub
add
xchg
int3
mov
shrb
in
in
add
mov
out
addl
in
loopne
xchg
cmpl
inc
push
std
fwait
or
inc
inc
movl
and
inc
add
mov
and
adc
add
xchg
sub
out
mov
aad
xchg
xor
stos
shl
rep
add
movl
roll
xchg
add
cmp
inc
adc
cmp
jp
bound
cmp
setae
mov
add
push
cmp
fistpl
and
lret
out
data16
mov
inc
js
xchg
mov
add
nop
movsb
add
int
subb
push
ljmp
mov
dec
add
add
enter
jb
into
xor
sbb
jnp
lret
sbbb
and
adcb
in
daa
add
mov
adcl
popl
ja
jecxz
add
movsl
or
add
dec
add
xorl
test
sbb
or
xor
popf
add
add
push
add
lret
lea
xlat
add
add
cmp
add
xchg
leave
push
daa
add
arpl
mov
push
add
lds
add
jmp
mulb
aad
das
test
sbb
add
xor
adc
dec
push
mov
jmp
add
xchg
lea
icebp
lret
test
add
sbb
ret
add
jmp
cmp
test
add
daa
repnz
jl
cmpsb
add
in
add
add
pop
adc
call
scas
pop
or
mov
xchg
add
add
add
jae
add
shll
cld
sahf
sub
ds
sbb
cli
pop
add
in
add
pop
adc
add
add
jno
jbe
jl
sahf
in
add
pop
add
ret
pop
add
add
dec
flds
add
or
xchg
xchg
add
add
test
shll
adc
add
jbe
cli
add
jo
xor
lds
push
add
imul
or
add
push
fs
movl
enter
and
mov
xchg
jo
and
iret
nop
dec
xchg
add
enter
lcall
cli
add
enter
sbb
cld
add
arpl
dec
add
xor
aaa
lcall
fisubrl
loope
into
cld
jge
sbb
add
pushf
dec
sti
add
ret
push
pushf
add
cwtl
and
cmp
jo
dec
imul
out
ffreep
add
dec
into
add
mov
add
push
iret
or
jge
fisttpl
pushf
fsubrs
fcomps
lods
lock
pushf
inc
add
add
sub
cmp
fdivrl
pushf
ret
insb
test
add
fs
hlt
inc
clc
add
sarb
or
xor
daa
inc
pop
les
add
int3
insl
mov
lret
ss
verw
rcll
sbb
mov
lea
jmp
roll
add
add
add
stos
cmp
xchg
mov
in
fcoml
aas
push
xchg
push
add
frstor
add
adc
add
add
cwtl
adc
fdivrl
and
push
icebp
push
xchg
cli
ret
cmc
aam
mov
add
repnz
add
std
cltd
sti
add
add
dec
mov
jae
xchg
imul
add
push
dec
xchg
xchg
add
das
push
aaa
fcomp
movsl
xor
add
adc
xlat
sub
add
movsl
insb
mov
pop
mov
sahf
add
pop
adc
push
add
jecxz
les
out
xchg
xor
in
pop
mov
ljmp
and
loope
mov
adc
mov
in
lods
add
add
addl
pop
sub
and
add
mov
aam
add
fs
int3
add
jb
or
dec
adc
sbb
std
sbb
cmp
adc
loope
shl
push
cmp
cli
and
cmpsl
add
out
add
or
lods
sub
cmp
add
test
lods
test
mov
add
in
push
cmpsl
bound
lahf
add
js
xor
or
inc
imul
add
mov
outsl
and
or
pop
jo
add
jno
shl
xchg
xchg
add
leave
pop
lods
dec
add
add
aaa
pusha
testb
fidivrl
add
and
test
repz
cmpsb
imull
or
nop
cs
jne
xchg
inc
pop
xchg
add
dec
mov
and
jno
add
add
aam
mov
jno
frstor
add
fadds
roll
loopne
add
sub
rcrl
add
arpl
jns
clc
push
cmc
cmp
jnp
mov
lock
aad
dec
sahf
clc
add
mov
cmpsb
leave
je
pop
xchg
mov
mov
add
cmp
sub
xor
and
add
sub
or
cld
int3
pop
dec
jmp
sti
jne
mov
cmp
add
ja
test
sub
in
jne
xlat
arpl
mov
mov
rcrl
cmp
dec
jmp
ljmp
cli
jle
jbe
cwtl
add
mov
add
testb
push
add
lcall
mov
cli
cmp
add
xchg
jle
push
push
xchg
pusha
jnp
mov
add
lock
pop
add
push
or
sub
pop
cli
jl
dec
rolb
pop
mov
jge
add
or
loope
add
shrl
push
mov
lds
out
not
lret
add
xchg
data16
mov
sarl
add
cltd
pop
dec
add
shl
add
sti
push
add
add
into
jp
lds
sub
push
mov
fcmovb
rolb
ss
out
mov
bndstx
enter
xchg
add
add
xor
add
add
or
add
ljmp
xchg
inc
inc
add
shl
jne
dec
leave
outsb
icebp
das
daa
add
add
push
add
xor
imul
in
aad
mov
iret
fucom
dec
add
ss
test
ret
in
clc
add
mov
pop
mov
lock
xchg
add
add
sub
imul
add
inc
xchg
shlb
add
add
xchg
test
jle
loope
add
and
mov
fdivl
shlb
mov
mov
mov
jnp
movsl
add
inc
add
add
mov
add
str
add
push
ljmp
out
mov
xchg
add
jp
add
add
popa
lahf
push
data16
mov
out
addl
test
jecxz
fisttpll
or
inc
xchg
lock
out
sbb
push
add
add
fwait
mov
push
imul
ret
jns
aaa
fldl
push
movsb
jns
in
in
mov
pop
add
jns
and
add
or
xchg
int3
sti
mov
xlat
push
add
cmp
pop
lret
data16
outsb
repz
in
pop
add
dec
je
cmp
xchg
sbb
add
push
cmp
add
and
les
fwait
add
ja
int
add
daa
arpl
pushf
flds
push
add
mov
sarl
add
pop
cmp
flds
lret
stc
add
dec
add
nop
filds
rcrb
push
inc
jno
add
out
stc
xchg
inc
add
and
int3
jns
sti
mov
add
shlb
mov
add
jge
dec
test
fisttpl
xor
mov
cmpl
push
and
and
lret
dec
xchg
push
aaa
and
mov
iret
add
jmp
ss
jns
jg
in
add
and
add
sub
mov
arpl
add
psrlq
pop
daa
add
add
cmc
jns
pushf
add
pop
jl
jnp
inc
xor
lcall
clc
pop
aad
add
add
call
shll
add
adc
jbe
add
lret
mov
data16
inc
shl
jg
or
daa
xchg
or
push
inc
call
aas
insl
std
add
sbb
jbe
addl
jg
jg
add
add
dec
mov
into
arpl
or
stc
faddp
addb
sub
add
sub
mov
cs
mov
lods
aas
add
cmp
xor
fwait
jo
in
pusha
fisubs
cmp
sbb
mov
movsb
inc
mov
popf
add
xchg
int
dec
pop
pop
insl
add
int
push
add
mov
sbb
stos
movsl
jae
add
incb
jecxz
sub
in
add
call
adc
add
fwait
in
loope
adc
add
add
add
add
loop
sbb
jle
sbb
xor
add
jle
xor
mov
in
and
inc
sti
cwtl
xlat
sbb
add
add
clc
and
fimuls
pop
loop
jo
test
scas
xchg
add
js
das
stc
data16
ds
add
sbb
stos
ret
sub
pop
insl
add
inc
sbb
cmp
add
pusha
xor
leave
outsb
or
or
inc
repnz
push
cld
nop
xor
add
lahf
test
xchg
push
add
xor
jno
pop
mov
popf
adc
pop
inc
stos
add
cwtl
mov
add
add
dec
addr16
add
mov
add
push
inc
push
mov
imul
pop
cmp
add
aad
mov
fsub
xchg
add
mov
fs
add
pusha
jo
jge
loop
xchg
test
in
mov
add
pop
shld
insl
or
mov
lods
filds
nop
xchg
mov
inc
stc
jge
popa
fadds
push
or
shll
loope
ret
or
sbb
pushf
arpl
add
add
out
shll
scas
add
xlat
add
add
add
push
int3
add
add
add
addr16
incb
add
dec
add
sub
mov
std
ljmp
sub
mov
jno
insl
and
jno
sub
sbb
loopne
clc
add
push
adc
lcall
add
add
sbb
sbb
stos
sbb
cld
add
sub
mov
hlt
push
xor
add
sti
or
and
add
xor
out
add
add
subl
mov
jmp
mov
or
mov
into
lcall
mov
outsb
jno
cmp
sbb
push
add
sahf
xor
mov
daa
enter
add
add
xor
popa
insb
add
sub
xchg
xchg
add
icebp
push
add
loope
add
mov
mov
add
jl
cmpsl
jns
stos
inc
aam
jbe
mov
sub
add
mov
loopne
inc
scas
outsl
add
in
add
add
lret
insl
add
cmp
mov
mov
lret
lahf
nop
pop
jae
add
cmc
push
fdiv
push
add
add
sbb
and
jp
mov
inc
mov
mulb
outsb
or
add
jmp
aaa
ret
cmpsb
sarb
xor
add
int
add
bound
sbb
adc
sahf
mov
cltd
mov
cmpsl
arpl
outsl
add
add
daa
push
and
mul
int3
or
leave
add
lea
add
mov
add
or
add
push
in
fistpll
mov
cltd
add
inc
arpl
movsl
add
stc
add
in
inc
pop
cmp
in
sbb
add
nop
add
xchg
mov
popa
sbb
ror
in
mov
add
pop
add
dec
add
sub
in
addb
mulb
add
push
add
sbb
lock
add
or
add
repnz
add
int3
mov
jb
add
incb
fdivrs
and
sbb
pop
out
mov
fildll
pop
out
lahf
int
add
sbb
add
mov
imul
ret
add
cmp
add
mov
xchg
in
lods
inc
adc
add
mov
push
sbb
push
xchg
repnz
add
mov
add
mov
and
mov
lock
mov
add
jge
daa
scas
adc
popf
add
aam
push
fcmovbe
add
leave
dec
jns
jmp
mov
push
addb
push
fldl
out
xlat
std
leave
push
sbb
add
sub
clc
adc
loop
add
or
and
or
mov
cmpsb
cld
fs
sbb
pop
lret
push
fists
aam
lcall
lods
aam
ljmp
add
lods
popa
pop
dec
test
rolb
scas
push
jg
mov
xchg
pop
add
xor
sti
add
push
repz
outsl
xor
inc
imul
insb
push
in
push
nop
cltd
xor
add
push
cmp
push
push
nop
or
dec
pop
xlat
pop
ds
sub
shlb
adc
flds
mov
jmp
insl
mov
out
scas
add
dec
mov
and
add
int
fyl2xp1
add
iret
stc
push
push
sub
push
sbb
repnz
add
xchg
imul
std
jbe
add
and
xchg
fs
sbb
add
dec
loop
dec
stos
cmp
rolb
mov
out
xchg
adc
imul
add
outsl
flds
and
add
pop
shrl
lods
inc
pop
add
fimull
rorb
or
dec
mov
test
ja
mov
cmpsb
add
repnz
movsb
lods
add
add
imul
add
jnp
icebp
add
cltd
mov
add
les
outsb
incl
ret
cwtl
jge
popa
add
in
bound
les
inc
out
dec
popf
enter
stos
mov
add
and
dec
bound
jl
add
add
mov
aam
push
insb
add
pop
and
mov
std
mov
add
jbe
loopne
inc
lock
mov
mov
icebp
faddl
ret
mov
clc
sarl
popa
add
push
add
ret
loop
mov
outsb
push
faddl
jmp
out
repnz
fbstp
jno
push
aad
xlat
or
loope
leave
pop
add
pop
add
jne
add
push
mov
dec
fwait
and
test
dec
pop
iret
add
in
add
pop
in
mov
jo
inc
call
add
add
idivl
flds
repnz
dec
add
xchg
dec
push
dec
mov
outsl
xchg
adc
add
add
add
cwtl
in
insl
add
add
mov
add
ret
lahf
cwtl
or
add
dec
in
rcrb
add
add
cmp
jmp
add
and
lock
mov
push
mov
xor
loop
stos
xchg
mov
jb
enter
xor
add
aas
mov
push
movsl
test
jge
movsb
add
inc
and
xchg
inc
fsubrp
add
sub
add
out
stos
sbb
inc
sub
sbb
mov
add
test
arpl
mov
leave
stos
or
push
lea
mov
add
xchg
adc
fucomi
add
pop
aam
rolb
xor
or
lods
jne
add
dec
dec
pop
call
andl
add
mov
mov
pop
xchg
xor
incl
fiaddl
mov
add
mov
or
add
add
repz
jge,pt
notb
aas
push
jno
dec
push
sub
push
js
mov
inc
ja
add
ljmp
and
add
loope,pn
lea
add
mov
xor
add
push
push
add
add
and
shrb
stc
jne
sahf
les
jp
xor
pop
cmp
add
insl
jmp
sarl
shll
pusha
add
adc
add
or
xor
stos
and
repnz
dec
nop
ret
mov
push
rcl
add
test
add
lcall
or
xor
add
inc
xor
add
or
xchg
inc
pop
adc
addb
cmc
jg
push
pusha
add
mov
add
sbb
sbb
xorb
pop
push
cmp
imul
sub
pop
lods
add
addl
cmpsb
sub
push
popa
add
dec
adc
add
cmp
xchg
add
lea
push
add
push
adc
mov
sub
add
out
cld
popl
lock
roll
sub
jbe
mov
add
rolb
sbb
add
mov
jno
add
scas
nop
mov
dec
add
in
or
cmp
loopne
add
mov
rcrb
movsb
push
add
int
or
hlt
stc
add
sbb
mov
jle
insb
add
xchg
pop
add
mov
jmp
push
incl
push
inc
xor
push
aas
je
dec
stos
and
add
mov
pop
mov
jmp
stc
ret
add
xlat
inc
sbb
add
mov
fiadds
test
ljmp
add
mov
add
cmp
pop
clc
add
lcall
mov
sub
or
add
inc
std
les
mov
add
add
inc
jbe
add
rcrl
jb
add
sub
imul
insl
fwait
out
add
mov
adc
push
xchg
mov
scas
mov
adc
cmp
mov
std
ret
add
sbb
aaa
xchg
pop
sub
push
add
cmp
add
addr16
mov
push
add
mov
std
arpl
adc
xor
mov
mov
add
jnp
add
scas
xor
add
ds
and
jbe
add
cmp
cli
popf
add
sub
push
int3
mov
cs
jno
add
add
cmpsb
add
add
sub
scas
mov
loope
push
sarb
mov
add
add
sub
imul
jae
imul
outsb
add
or
adc
insb
loop
into
or
cmp
add
mov
cmp
and
ret
lret
add
mov
repnz
add
add
add
inc
push
jae
lret
add
aam
sub
imul
sbb
xor
add
add
in
mov
les
add
das
add
and
mov
fadds
mov
xor
xchg
mov
xor
cmc
orb
dec
adc
add
subb
je
aaa
xchg
jbe
jge
mov
add
in
add
shl
push
gs
add
add
add
out
add
sub
roll
sbb
shlw
icebp
add
pop
jmp
enter
add
add
add
clc
pop
add
filds
add
push
jecxz
jg
add
movsb
mov
addb
add
dec
xor
adc
add
mov
add
jmp
cwtl
pop
add
inc
sbb
dec
add
cs
out
jecxz
cmp
jno
pushf
repz
push
or
les
jl
xchg
out
aas
add
add
jo
or
lret
in
ret
ja
addr16
add
inc
jbe
and
mov
jl
add
mov
hlt
mov
add
pop
xor
insb
add
filds
pushf
insb
sarl
mov
dec
add
xor
add
and
scas
movsb
lret
flds
cmp
pop
mov
testb
add
xchg
cmp
jecxz,pn
pop
popf
add
add
or
call
pop
fimuls
pushf
dec
add
imul
call
fisubrs
bound
imul
xchg
add
jnp
add
cmp
add
add
mov
mov
mov
call
add
inc
and
out
fists
imul
add
add
pushf
xchg
push
add
mov
add
cli
add
add
jnp
movl
imull
add
outsl
dec
hlt
rolb
andl
mov
loopne
add
cmpsb
add
lret
sti
add
add
mov
aas
push
inc
jnp
jmp
sbb
loopne
repnz
lret
xor
pop
mov
and
loope
mov
add
ljmp
jg
ret
add
sbb
cmpsb
fbstp
add
dec
js
pop
les
xor
jg
mov
mov
clc
mov
jae
or
xchg
mov
nop
add
mov
es
or
add
add
movsb
add
jae
add
insb
mov
cmp
mov
inc
daa
jns
inc
and
cmpsl
pop
mov
popf
jnp
lds
add
sbb
add
add
test
insb
sub
imul
pop
mov
add
fisubs
pop
xchg
ret
cltd
add
dec
xchg
add
add
add
std
add
in
ret
dec
add
mov
inc
add
add
xchg
lsl
les
add
insl
push
out
aam
cmpsl
cmpsb
xchg
or
orl
cmpsl
add
jne
add
cmp
mov
add
push
lds
mov
add
adc
mov
add
xchg
pop
out
add
add
bound
dec
cld
add
jbe
push
push
add
lods
rcr
add
and
xchg
imul
cmp
add
xlat
add
mov
dec
add
leave
add
pushf
fidivrl
add
lcall
mov
mov
std
add
addl
add
xchg
cmp
mov
shl
add
ja
fcmovb
cld
add
rolb
into
and
add
fwait
xchg
lret
add
pusha
inc
into
add
fcomi
js
add
fnop
lahf
add
pop
add
mov
sti
addl
movsb
cmc
xchg
mov
pushl
xor
subb
xchg
add
leave
movsl
add
mov
add
cmp
add
add
sub
jb
dec
add
stos
xchg
xor
adc
xchg
sub
loopne
cmpsl
or
cwtl
push
add
in
mov
sub
add
xchg
add
add
add
fsubl
add
push
push
add
in
inc
add
sarl
add
cmp
add
add
imul
icebp
add
pop
test
test
cmp
add
push
and
push
mov
xor
push
lock
sbb
sti
mov
stc
hlt
add
insb
mov
cmp
xorb
sbb
int
add
js
xchg
stos
add
dec
xor
scas
add
add
cli
jg
pop
add
stos
out
lock
xor
les
add
ljmp
pushf
mov
add
xor
lds
and
mov
repnz
mov
stos
cld
add
push
jmp
add
push
and
pop
add
inc
mov
add
movsl
add
inc
mov
aad
jne
leave
fwait
add
xlat
int
filds
jae
sbb
pop
jmp
lods
sbb
mov
fidivl
mov
aas
inc
ret
data16
adc
scas
cmp
or
fmull
add
pop
mov
lods
dec
lret
in
pop
adc
dec
or
out
jo
out
jmp
int
push
sub
add
push
sti
cltd
lcall
sbb
add
and
add
and
add
cmc
loope
add
daa
lock
add
jp
add
and
add
cmp
push
popa
dec
add
pop
add
sti
mov
add
add
jl
pop
aas
lea
movsl
dec
cli
add
add
xchg
jbe
lret
int3
jnp
dec
mov
out
add
dec
dec
jae
mov
test
adc
in
nop
inc
addb
lds
add
int
sbb
pop
add
pop
lahf
xor
push
ret
loopne
in
add
int3
lea
and
lahf
add
add
add
mov
add
add
sub
add
stos
xor
lods
add
or
push
stos
aaa
lea
outsb
aad
pop
jae
in
es
push
add
lods
xchg
out
and
mov
inc
dec
icebp
add
insb
mov
add
inc
add
push
inc
sub
pop
inc
addb
push
repnz
bound
cmpsl
jmp
sub
rolb
mov
ja
sbb
push
dec
sbb
hlt
mov
fwait
inc
test
push
test
iret
add
out
in
cmp
rorl
add
jmp
jp
cmp
mov
or
adc
add
mov
xchg
dec
ret
cmp
aaa
icebp
add
inc
jle
insb
mov
mov
sahf
sub
inc
aad
xchg
enter
aaa
notl
outsb
add
mov
dec
mov
push
std
cwtl
sahf
negl
add
jb
out
xchg
add
inc
mov
in
add
add
testl
add
and
dec
adc
add
xor
cmovns
test
repnz
add
push
add
dec
jecxz
add
rcll
lcall
cmp
dec
outsb
mov
imul
flds
bound
stos
dec
ret
test
add
inc
add
mov
add
add
sbb
mov
mov
pusha
hlt
add
and
incl
lods
mov
push
add
add
bound
or
add
flds
call
push
dec
pop
add
movsl
jle
popf
add
sahf
add
shl
add
jnp
int
sahf
dec
add
add
sbb
add
sub
leave
add
hlt
inc
mov
cmp
mov
pusha
xchg
cmp
xor
sarl
inc
int
shrl
mov
pop
lahf
add
aas
add
jl
cltd
aam
add
in
fsincos
sub
shrl
call
add
call
xchg
lret
adcl
add
add
add
push
pop
add
jae
add
xor
push
andl
ljmp
jnp
add
pop
jge
insl
roll
and
push
add
rclb
call
loope
sub
add
inc
cmp
clc
aad
ja
jmp
cmp
adc
dec
add
lcall
sbb
push
ljmp
add
adc
add
sub
jl
add
stc
in
leave
aad
push
icebp
shrl
enter
dec
add
add
push
pop
fstpt
xor
outsb
scas
dec
imull
fadds
jns
nop
add
sbb
push
mov
sub
jp
faddl
lods
jno
add
adc
enter
inc
inc
inc
pop
cmp
rcll
push
xchg
mov
pop
popf
inc
xchg
sahf
adc
mov
popa
stos
pop
pop
add
and
cwtl
cmp
and
mov
pop
jae
mov
setp
add
inc
movsb
lods
loop
add
cmp
sub
jb
roll
gs
call
add
add
add
bound
mov
pop
push
ljmp
lret
add
add
rcl
and
add
int
add
pusha
rclb
sbb
jecxz
push
pushf
filds
loope
mov
test
arpl
add
bound
add
pop
xchg
mov
mov
scas
jmp
add
jo
push
lahf
add
xor
add
push
inc
and
arpl
insb
cwtl
add
adc
repnz
pop
add
inc
imull
add
lds
sub
xchg
and
add
test
test
sbb
sbb
xchg
jmp
add
cmp
fstpt
pop
lods
add
fbstp
leave
addb
mov
cs
popa
xchg
add
xchg
movsl
sub
add
and
add
test
pop
repz
inc
xor
insl
add
xchg
fmulp
jne
hlt
mov
mov
mov
pop
ret
and
xchg
negb
add
jg
mov
dec
xchg
push
aaa
sub
sbb
mov
push
inc
inc
inc
lods
adc
xor
loopne
shl
out
cmp
jnp
stos
jno
add
add
inc
push
add
jge
add
and
in
add
cmp
and
outsl
hlt
dec
repnz
push
add
mov
pop
or
add
lods
icebp
add
lahf
jg
das
imul
xchg
cmp
cltd
leave
lcall
ret
add
aad
add
xorb
cmp
xor
pop
add
inc
push
insb
add
jge
mov
add
mov
xor
lock
add
cmp
dec
jb
xor
stc
add
add
push
mov
add
xchg
cmp
xchg
add
inc
push
add
xor
mov
add
roll
xchg
push
add
fwait
jne
xor
loopne
push
push
cmpsb
add
push
pushf
popf
add
in
les
add
push
ss
roll
dec
push
js
add
pusha
pop
add
imul
enter
add
xor
js
inc
jge
mov
jp
cmp
add
add
sub
add
mov
xor
outsl
fildl
inc
mov
jg
fldenv
xor
loopne
mov
lea
adc
push
inc
enter
inc
dec
pop
add
sub
test
mov
add
jno
js
mov
dec
incl
mov
jb
in
pop
fmulp
rolb
sub
dec
add
add
ret
cld
push
add
scas
push
ds
adc
add
int
mov
dec
hlt
xchg
add
inc
cmpb
fisubrl
gs
cli
mov
mul
in
add
xor
dec
add
mov
push
test
sbb
add
sbb
nop
in
mov
sarl
add
roll
jns
test
repnz
daa
pop
std
mov
add
add
js
add
into
andb
icebp
fidivs
aaa
add
mov
add
jno
or
mov
xchg
or
add
sbb
imul
add
add
call
sub
or
inc
cli
stos
arpl
add
add
mov
fisubrl
push
sbb
mov
sub
add
dec
add
add
dec
add
hlt
add
cld
imulb
add
adc
add
and
add
dec
hlt
and
adcl
add
push
push
and
add
xor
mov
add
movsl
mov
fimuls
lock
xchg
pop
imul
and
add
add
arpl
add
cmp
xchg
cwtl
xchg
add
fistpll
mov
cmp
sbb
add
or
jmp
add
add
pushf
pop
out
sbb
imul
jg
in
xchg
test
js
add
add
pop
lret
popa
out
add
ret
imul
cwtl
or
lret
mov
add
int3
add
cmp
outsb
out
popf
repz
add
mov
lock
add
jne
add
inc
xchg
and
in
add
test
hlt
adc
movsl
add
lock
gs
add
or
add
add
out
inc
movsl
cmc
add
add
push
add
aaa
push
xchg
add
dec
dec
stos
in
adc
cmp
add
std
mov
adc
add
fcoms
pop
out
push
add
sbb
mov
and
inc
add
test
data16
xor
add
cmp
sarl
add
call
push
repz
push
dec
push
add
movsl
add
push
inc
sbb
mov
jmp
fwait
scas
test
sti
outsb
sub
xlat
jle
mov
add
clc
ret
add
or
pop
bound
add
xchg
mov
mov
inc
cwtl
out
push
add
add
pushf
xor
cmc
add
sub
add
cltd
dec
sbb
movl
or
mov
daa
sbb
inc
add
adc
sbb
add
add
and
adc
cmp
dec
sub
xor
imul
in
mov
call
mov
mov
sti
lea
add
cmp
cmp
jge
inc
add
jecxz
mov
lahf
loopne
aam
add
cmp
lcall
mulb
ja
rolb
sub
add
add
fxch
out
xchg
cmc
out
shl
xchg
add
cmp
and
fs
pop
add
negb
xchg
data16
sbb
out
enter
add
add
bound
stc
add
sbb
mov
out
xchg
push
ljmp
and
leave
add
xchg
imul
add
test
mov
fwait
add
adc
je
js
cmp
add
stos
dec
mov
mov
enter
and
loope
add
add
push
add
push
movsb
lods
test
test
cltd
outsl
xchg
fldl
adc
mov
call
mov
sub
rolb
cmp
fiadds
inc
cli
add
add
sbb
add
dec
call
jp
and
add
into
adc
jnp
add
inc
inc
add
cmp
fldl
xchg
mov
in
popa
cltd
add
dec
dec
mov
roll
nop
add
jnp
mov
inc
std
and
inc
mov
add
fildl
scas
add
orl
adc
mov
push
pushf
add
xor
mov
mov
lahf
into
movsl
adc
inc
repnz
shrb
sub
lret
shlb
pop
and
add
cs
add
cs
lea
sbb
outsl
add
lds
mov
or
lods
add
xor
dec
aam
add
out
add
aas
xchg
cwtl
jge
add
popa
add
add
ja
testl
add
loop
add
sbb
test
test
pop
or
push
jcxz
and
adc
xchg
roll
fldt
sub
xor
add
push
orb
mov
int3
test
lods
int
pop
mov
pop
andl
jle
add
lods
sub
mov
push
ret
sub
add
loope
fwait
add
imul
add
mov
out
adc
cmpsl
lret
cmp
fmull
adc
jne
sub
xor
imul
adc
adc
dec
repz
add
cmp
pop
jge
call
mov
and
sbb
incb
pop
rcl
xchg
sbb
insl
pusha
jmp
push
push
add
lret
or
sub
mov
xchg
jnp
xchg
add
inc
jnp
push
sbb
fcomps
add
filds
test
xlat
mov
out
outsb
iret
add
dec
sub
std
pop
adc
lret
les
add
add
rolb
lock
stc
mov
sub
push
mov
add
or
push
or
arpl
sbbl
xor
mov
mov
cmpsb
mov
addr16
add
sub
push
push
add
push
jecxz
add
cmp
mov
lahf
adc
add
pop
inc
fiaddl
and
fwait
xor
jo
shlb
cwtl
add
out
repnz
pop
jnp
add
arpl
fisubrs
shrl
mov
leave
add
insb
or
cmp
jo
add
or
aam
add
cmp
insb
add
pushl
add
mov
cmc
cmp
dec
movsb
int3
add
aad
adc
cwtl
push
out
add
pop
pushf
xor
shll
adc
cli
push
adc
sbb
add
and
sub
xchg
aad
pop
add
aam
lcall
add
in
dec
ret
pop
add
xchg
add
decl
cld
out
add
dec
dec
add
xchg
add
in
pop
or
pop
add
sti
stos
push
nop
add
sbb
lods
add
xchg
xor
add
mov
jl
push
popa
add
push
je
imul
ds
orl
lds
into
pop
cmpsl
popf
clc
add
aas
add
and
mov
or
test
and
xlat
add
call
nop
add
ss
dec
adc
sbb
stc
or
int3
add
push
lods
testl
fdivrl
and
scas
pop
ja
xor
add
pop
fists
cmp
das
fneni(8087
test
jae
test
add
cmc
call
std
inc
sub
add
xor
testl
stos
cli
add
clc
movb
std
dec
and
push
roll
enter
mov
and
loope
fstpt
xchg
mov
fists
inc
orb
mov
leave
sti
add
ds
mov
add
dec
sub
pop
cmp
inc
cltd
mov
sbb
test
adc
cmp
add
pusha
inc
js
sahf
add
jbe
add
mov
add
in
add
and
add
outsl
pop
adc
jnp
xlat
cmp
outsb
add
jmp
scas
add
add
cmc
out
add
adc
call
mov
mov
xchg
addl
andb
inc
jp
add
push
stc
es
add
mov
add
pop
push
add
mov
add
jbe
add
add
faddl
add
add
js
into
add
bound
add
cmp
sti
add
out
incl
push
push
inc
int3
add
subb
inc
fildl
shlb
faddp
add
add
add
inc
push
sarl
cmp
adc
inc
add
add
scas
cmc
sti
call
add
and
in
mov
imul
stos
xchg
add
mov
shrb
js
add
out
scas
mov
add
icebp
sbb
ljmp
xlat
addr16
xchg
imul
in
add
add
adc
pop
mov
adc
push
adc
add
sbb
sub
add
les
add
and
add
pop
add
xchg
inc
xchg
add
jl
add
mov
icebp
popf
mov
add
adc
das
test
js
pop
add
popf
inc
enter
ja
jae
sub
jl
adc
out
pop
xor
push
out
cmp
cmpsb
sub
add
push
dec
cmp
jle
add
inc
fcom
add
jo
pop
stos
add
sbb
data16
popl
inc
ljmp
dec
adcb
dec
push
inc
aas
xor
sbb
ret
daa
xor
inc
cmp
popf
sub
bound
mov
not
cmp
sahf
pop
jge
mov
add
dec
shlb
in
xor
xor
cmp
cmp
add
and
div
jnp
cmp
push
adc
sbb
add
jae
pop
add
sub
adc
fwait
addl
arpl
add
add
jne
bswap
mov
jbe
imul
popa
popa
imul
pusha
xchg
add
mov
sub
cmp
add
test
movsl
sbb
jle
fiadds
xor
mov
cmpsl
jl
add
or
add
lods
stos
clc
rolb
xchg
lret
iretw
adc
add
cmp
repz
addr16
movsb
xor
stos
imul
divl
mov
or
jne
out
add
lods
out
xchg
xor
jl
cs
lldt
insl
add
mov
add
push
pop
fwait
lea
filds
push
lret
mov
and
popf
sbb
nop
jl
mov
addb
shll
aam
mov
add
cmpsl
add
decl
add
sbb
sahf
mov
lods
adc
inc
mov
pop
lock
sub
add
mov
test
out
jecxz
ret
add
fcompl
lret
adcl
mov
dec
cs
add
addl
lds
sarb
out
cmp
aaa
xchg
arpl
add
add
lahf
cmp
xlat
les
cmc
xchg
test
cmp
test
outsb
adc
sti
mov
pop
sbb
add
sbb
scas
out
lcall
rolb
jbe
add
sbb
pop
pop
adc
dec
add
and
mov
fidivs
sbb
ret
xlat
flds
pop
and
lock
add
add
outsl
sub
add
stos
mov
out
pop
sti
add
lahf
or
inc
andl
notb
clc
pop
std
add
pop
xchg
mov
fadds
add
mov
fldl
add
imulb
inc
and
or
add
filds
pop
add
lods
inc
orl
add
add
js
push
test
or
and
mov
add
add
cmpl
sub
loope
lcall
sub
lret
repnz
add
rorb
in
rorb
rclb
jle
rclb
dec
test
aam
add
sbb
add
daa
fcomip
add
outsb
rclb
ret
scas
add
repz
add
addr16
sub
push
add
inc
mov
cmp
lret
jb
aad
add
xchg
add
jle
add
fs
sbb
add
mov
pop
sub
or
cs
push
outsb
add
sarl
add
mov
push
add
cmpsl
iret
shll
add
mov
faddl
addr16
mov
sbb
int3
cmc
cmpsl
mov
add
add
jp
add
dec
mov
mov
and
call
loop
dec
xchg
add
mov
filds
jae
lock
mov
xchg
add
aaa
add
mov
sarl
mov
add
jnp
add
lods
mov
mov
add
mov
add
cld
int
icebp
aam
ja
iret
in
add
daa
xor
js
add
jmp
hlt
clc
aam
add
sbb
arpl
add
fucomi
je
jge
bound
lea
sbb
pusha
xchg
lods
or
dec
add
int
dec
add
add
cmc
adc
add
mov
movsl
add
add
insl
add
jle
pushf
movsb
incb
mov
bound
adc
fdivr
rcll
sbb
add
leave
stos
mov
add
cld
mov
mov
jb
add
movsl
inc
add
dec
or
add
jle
fisubrl
xor
xor
and
sarl
mov
mov
adc
cmp
add
add
std
ljmp
add
and
xor
aaa
pop
repz
pop
movsl
sbb
out
pop
and
add
or
add
lcall
add
scas
add
das
sub
testb
xchg
add
add
inc
je
icebp
fmuls
add
test
out
and
push
adc
mov
jnp
sub
xchg
movntq
xor
movsl
into
pop
add
or
jo
add
mov
faddl
mov
into
leave
inc
in
out
in
add
fiaddl
aad
adc
add
add
dec
pop
add
enter
out
add
mov
lds
add
and
fstl
jle
adc
sbb
xchg
and
push
movsb
xchg
add
add
jo
shrb
add
cmp
add
lea
les
push
xchg
aas
add
add
test
cmpsl
movsl
addr16
ja
sub
push
xchg
add
or
mov
std
out
push
adc
arpl
adc
das
in
fists
shl
dec
add
cmp
add
mov
rcrl
addb
ror
sbb
mov
add
arpl
jae
inc
add
sbbl
xlat
out
xchg
cwtl
ja
add
in
icebp
mov
icebp
test
adc
add
and
jge
roll
loope
fs
sbb
test
xchg
add
mov
add
cmp
mov
add
add
popf
sbb
add
daa
hlt
fildl
out
es
adc
add
cli
fcmove
incl
hlt
inc
pop
push
scas
ja
push
repz
jo
stos
add
add
std
xlat
pop
and
add
push
sti
sub
popa
add
iret
mov
add
cmp
push
and
pop
add
add
in
xor
add
ja
and
add
inc
testl
adc
sbb
stc
js
lods
add
rolb
or
fimuls
mov
sub
inc
jns
push
in
pop
add
pushf
xor
jecxz
add
push
jg
xchg
add
stos
mov
and
in
loop
andl
movb
mov
mov
inc
add
fs
sbb
add
mov
cmpsl
mov
fwait
jb
dec
popf
incl
lock
xchg
hlt
add
nop
jmp
pop
mov
add
insb
cmpsb
mov
add
and
mov
dec
or
push
add
scas
pop
mov
xchg
push
nop
xor
mov
imul
or
and
ljmp
cmp
cmc
dec
mov
das
aam
mov
insl
sub
push
inc
and
add
outsb
fst
add
sub
test
and
adc
add
stos
add
test
or
adc
fadds
loop
pop
add
out
popa
push
repz
hlt
lds
ss
cltd
inc
out
add
dec
push
xor
add
mov
xchg
add
mov
pusha
mov
mov
or
sbb
add
dec
stos
fldcw
add
out
out
add
jmp
mov
xchg
inc
add
ss
inc
icebp
mov
sbb
add
fwait
and
fwait
lods
add
jg
adc
xchg
add
cwtl
repnz
add
outsb
xlat
xor
adc
flds
popa
out
add
adc
fisttpll
or
cmpsb
pop
lods
std
aas
add
leave
out
mov
jnp
or
add
aas
sbb
stc
cli
fisubs
jecxz
addl
in
fldl
mov
add
stc
add
xchg
pop
add
insl
or
add
inc
xchg
popa
pop
adc
add
or
add
lahf
rcl
outsl
stc
xchg
add
icebp
test
dec
push
and
int
roll
enter
mov
sar
or
add
cmpsb
xor
in
ljmp
fildl
jecxz
inc
dec
xor
jl
mov
and
and
adc
add
in
out
xor
add
pop
inc
ja
and
mov
xor
clc
lahf
or
addb
cs
in
add
pop
and
addr16
hlt
add
xor
out
dec
push
ljmp
sbb
std
add
dec
mov
nop
add
add
pop
inc
outsb
add
insl
cmp
add
add
imul
enter
adc
xchg
mov
adcb
add
xlat
mov
xchg
les
daa
mov
fidivrs
stos
inc
lods
lret
add
mov
testb
mov
mov
sub
lahf
add
add
xorb
bnd
add
scas
add
add
pop
incb
aam
push
inc
adc
add
or
rclb
mov
add
add
jge
and
repnz
inc
scas
lods
and
add
add
add
cmpsl
push
jb
add
enter
pop
xor
adc
push
repz
mov
jb
aam
bound
mov
loopne
inc
lret
push
jbe
lea
test
mov
pop
pop
pop
aaa
xchg
push
pop
sbb
shll
icebp
sbb
in
and
andl
or
xchg
scas
loop
rcl
fcmovne
cwtl
lds
or
add
or
pop
test
mov
rcl
into
aam
daa
mov
stc
mov
jl
ja
inc
test
in
outsb
les
push
mov
loopne
mov
push
orb
imul
in
add
xchg
stc
mov
loop
fidivl
adc
fs
divl
mov
loopne
push
in
mov
mov
test
sti
lock
add
jl
repz
mov
addb
pop
mov
into
pop
imull
outsb
dec
adc
data16
xor
sbb
das
mov
cmc
jno
pusha
loopne
jbe
xor
inc
movsl
xchg
xorl
stos
gs
cmpsb
add
push
adc
testl
out
shrb
mov
pushf
ja
dec
push
in
jg
or
daa
shrb
add
rclb
sbb
adc
add
lahf
cmc
xchg
sbb
mov
js
inc
jb
les
push
shl
lock
mov
pop
add
inc
push
pop
sbb
mov
mov
jge
jo
push
les
jge
xlat
dec
mov
stc
pop
lcall
dec
sub
clc
rclb
int
sbb
cmp
inc
add
add
pusha
jl
fsubrs
scas
xchg
xor
jg
lds
inc
xchg
add
jl
ror
js
add
outsb
xor
scas
add
add
inc
mov
rolb
add
fdivrl
cld
mov
xor
add
push
ja
add
add
lock
cltd
push
je
out
push
arpl
inc
and
xor
sub
jae
add
mov
lds
lahf
out
mov
add
sahf
inc
nop
add
jo,pn
jg
lcall
imul
add
add
les
insl
xchg
add
cli
pop
or
out
pop
xchg
imul
lods
dec
add
or
mov
mov
add
mov
mov
mov
jp
sbb
mov
int3
mov
loope
dec
adc
loopne
ja
pop
jne
pop
jns
iret
enter
in
mov
rclb
sub
repnz
add
imul
call
int
add
outsb
mov
or
jmp
lret
es
in
dec
sahf
test
nop
outsl
adc
add
push
mov
test
xchg
and
and
jecxz
sbb
jmp
add
and
add
fistpll
add
add
push
fimuls
add
lds
dec
jb
add
inc
inc
push
repnz
mov
pop
push
mov
pop
cwtl
push
xchg
add
into
mov
add
sbb
cwtl
stc
dec
add
loope
add
fwait
adc
test
add
sub
jns
add
add
lock
add
sbb
add
repnz
pop
bound
add
jmp
xchg
push
je
je
lcall
and
add
lds
add
addr16
pop
xor
add
clc
add
and
jg
add
stos
mov
sbb
sbb
add
and
mov
push
push
dec
fwait
pop
add
add
add
add
icebp
jl
add
mov
push
add
mov
xchg
out
add
aad
repz
sarl
shrl
dec
insb
stos
add
fidivl
add
mov
xor
lret
push
int
add
push
or
add
mov
dec
sbb
repz
and
ljmp
push
outsl
or
pop
adc
jbe
loope
test
or
lea
mov
add
add
push
pop
hlt
add
loopne
or
and
add
sbb
call
test
add
add
enter
out
hlt
jns
add
dec
sbb
push
rorl
out
and
mov
or
add
jecxz
in
xor
sub
pop
mov
imul
outsb
inc
add
cmp
push
nop
aas
xchg
addb
cli
rcr
add
les
ret
mov
insb
incl
pop
fldl
and
inc
jp
mov
mov
dec
add
cmp
cmp
negl
in
add
fsubl
mov
mov
inc
aad
rcll
add
add
sbb
incb
push
add
lret
add
call
add
imul
sahf
cwtl
xchg
hlt
mov
push
ret
test
jecxz
std
xchg
popf
out
adc
sbb
ret
add
add
ljmp
int
xor
jmp
cmp
loope
shrl
add
shll
outsb
add
fs
sbb
imul
call
sbb
add
addr16
mov
out
imul
add
xor
decb
xchg
ljmp
cwtl
aaa
add
scas
inc
add
pop
pop
add
loope
cmp
js
add
add
add
add
add
add
scas
add
add
add
sahf
mov
add
ss
add
loopne
add
or
add
repnz
add
daa
leave
add
cwtl
ja
add
add
call
mov
add
mov
add
inc
add
cmp
add
test
add
pop
lods
add
out
pop
add
ja
add
add
add
mov
add
push
add
test
add
pop
cwtl
add
cld
in
add
loope
add
add
add
aaa
cmp
add
repz
ret
add
sahf
add
xchg
add
xor
add
xchg
add
movsl
sub
add
aaa
add
scas
cmp
add
clc
add
int
add
xor
xchg
add
lret
add
fildl
add
sbb
add
sub
add
fiaddl
add
add
out
mov
add
add
add
add
add
add
test
add
or
faddl
add
pop
add
sbb
add
test
aas
cmp
lret
inc
ljmp
mov
add
cs
js
out
ds
clc
dec
inc
es
mov
dec
add
fiadds
les
sbb
add
div
push
je
ss
add
str
jg
scas
into
adc
fcmovnb
mov
add
or
repnz
lock
lds
cmp
jmp
ljmp
cmc
gs
pushf
jmp
lods
pop
adcl
xchg
jae
mov
add
dec
cmp
lahf
dec
jns
jmp
or
lcall
add
sti
int
mov
sbb
in
je
add
xchg
pop
jno
dec
inc
cmpsb
fnsave
add
cmp
lea
and
add
pop
bound
and
int
add
pop
in
push
stc
mov
jecxz
repz
js
add
clc
sub
and
daa
outsl
insb
jmp
add
mov
dec
out
mov
jae
setp
add
mov
mov
in
mov
pop
pop
int
sub
add
mov
icebp
and
xchg
pop
cwtl
into
mov
cltd
add
cs
push
dec
mov
add
scas
out
sti
mov
sbb
lds
push
add
fdivrl
into
mov
test
in
imul
cmp
jns
sbb
ljmp
in
mov
lahf
pop
mov
sbb
dec
sbbl
xorb
jp
or
add
jle,pn
ss
push
mov
popa
dec
add
mov
daa
inc
test
das
pop
add
pop
add
inc
dec
fwait
out
jns
jne
push
add
cmp
lret
or
popf
and
add
mov
jns
mov
and
add
push
imul
or
mov
push
stos
inc
mov
add
sbb
nop
dec
dec
out
icebp
andl
add
scas
add
dec
mov
pop
pop
sti
lock
mov
stos
xorl
int3
mov
and
int3
cld
inc
add
hlt
aad
es
pop
int
lahf
cli
dec
repnz
sub
stos
lds
mul
aam
rol
push
add
into
lret
test
cmpb
fdivrp
inc
in
or
dec
cli
or
sar
add
push
sbb
leave
dec
add
sbb
inc
ja
or
add
jp
test
movsl
or
sub
pop
add
or
ss
mov
int
js
fmulp
jg
and
cmpsl
xorb
cmp
imul
je
cmp
sbb
cs
leave
xor
push
arpl
mov
add
cmpsl
add
nop
and
or
jns
mov
pop
jmp
fmuls
inc
adc
xchg
jp
sbb
dec
add
aas
xchg
pop
addr16
repz
ja
add
sub
sbb
pop
add
jnp
int
icebp
clc
push
push
fdiv
adc
scas
int3
add
dec
xor
xor
mov
dec
jo
pop
rcl
clc
dec
push
mov
add
add
inc
add
test
pop
push
mov
in
enter
sti
repnz
cmpsb
popf
xlat
push
popf
out
test
arpl
dec
stc
and
repnz
xchg
lock
js
or
add
clc
mov
push
add
popa
nop
cmp
ja
adc
stc
inc
pop
sbb
xchg
push
andb
sbb
clc
sbb
insb
cli
movsb
push
mov
jge
push
jle
in
jae
pop
js
pop
adc
add
pop
pop
ja
xchg
cmp
lods
call
add
or
ficomps
lock
mov
fistpl
add
rol
xchg
es
or
jle
add
cmp
pop
dec
sub
pop
sub
mov
cmp
stc
mov
fwait
add
sbb
mov
adc
cmp
adc
cld
outsl
or
add
sti
aas
sahf
jne
sahf
inc
jecxz
push
dec
jle
js
outsb
pop
pop
fnsave
xchg
clc
xchg
add
subl
leave
xchg
cmp
sbb
cs
mov
mull
add
test
hlt
push
cmpsl
mov
sbb
outsb
mov
decb
test
aas
sbb
into
and
bound
mov
cmp
sub
shrb
sbb
cld
cmp
out
test
jns
insl
roll
and
mov
mov
add
lret
shrb
je
loop
mov
pop
and
xchg
xchg
lret
repz
pop
std
push
add
rcr
xchg
lock
sbb
and
inc
dec
aaa
shr
fsts
jl
mov
inc
cmp
sub
pop
ljmp
or
imul
orl
cmp
or
cmp
pop
aas
mov
mov
xchg
loop
nop
sub
lock
xchg
mov
rcrl
pop
aam
movl
pushl
add
inc
sub
ds
push
dec
sti
inc
mov
outsb
fimull
add
lea
xchg
shlb
mov
and
sbb
imul
cmp
mov
loopne
dec
add
mov
push
cmpsb
sub
lods
ret
push
mov
mov
dec
in
lods
xchg
push
pop
adc
jg
jge
add
push
adc
and
shll
fdivs
xor
std
mov
imul
insl
roll
es
jecxz
imul
cmc
inc
fnstcw
push
jo
popf
xchg
push
pop
jg
cmc
push
stc
add
ret
sahf
incb
inc
lods
daa
cmpl
call
outsl
daa
cmp
or
mov
test
not
lret
jae
add
ljmp
mov
add
xlat
push
fdivs
xchg
push
sbb
imull
mov
sarl
push
mov
xchg
out
lods
lods
xchg
pop
pop
insl
sbb
sbb
jg
or
cwtl
fimull
repnz
fnstenv
int
add
loop
jno
testb
cli
jns
adc
xor
pop
test
dec
xchg
shlb
push
inc
jnp
jecxz
nop
push
mov
out
cmp
mov
push
lods
mov
mov
push
mov
or
iret
pop
stos
shll
sahf
scas
add
xchg
iret
insb
mov
aad
dec
cli
test
jmp
lods
push
arpl
loopne
repnz
push
fmull
sub
jb
test
sub
sbb
int3
mov
fcompl
jns
in
hlt
cli
and
sub
add
ljmp
jne
xchg
jle
call
jns
sbb
sub
xor
dec
mov
jns
and
fs
adc
mov
fmuls
mov
xchg
cmp
scas
adcb
xchg
mov
je
adc
sbb
leave
cmp
test
fcompl
lret
cld
fdivrs
or
add
pop
pop
scas
mov
out
sbb
xor
pop
pop
dec
test
aam
lock
push
into
xor
sbb
mov
inc
lea
adc
lods
hlt
push
lods
rcrb
cmpsb
sbb
add
clc
daa
js
add
mov
test
fdivrs
jmp
cmpsl
sub
add
dec
pop
aam
mov
jno
iret
cmp
mov
cld
into
jmp
sub
hlt
in
fstpl
fadds
dec
dec
dec
lods
cmpsb
fiaddl
dec
pop
add
xchg
insb
stos
imul
test
adcb
or
ss
aaa
cli
cmpsb
jno
xchg
pop
lret
pop
or
clc
inc
dec
call
bound
aad
pusha
mov
push
mov
imul
pop
scas
cli
and
mov
mov
and
or
mov
mov
xchg
mov
dec
pop
mul
idivl
lock
dec
aaa
movsl
aad
aaa
shll
insl
lret
push
adc
or
xchg
mov
sahf
es
adc
sbb
je
outsb
or
int3
aam
xor
mov
pop
incb
jl
aad
or
mul
mov
mov
lcall
cmp
jl
ja
add
mov
or
cmpsl
inc
push
push
adc
dec
inc
push
aas
xchg
int3
cmp
mov
add
adc
mov
movsb
jnp
push
repnz
std
gs
scas
jge
dec
xor
insb
or
dec
xchg
adc
js
les
sub
lcall
stos
and
push
sahf
add
push
sub
mov
mov
inc
std
popf
test
and
push
xor
xor
mov
test
adc
stos
mov
xor
and
dec
int
ds
mov
pop
std
xchg
cmp
xchg
movsl
addr16
adc
in
loop
mov
push
and
inc
xlat
or
jnp
pusha
das
js
sub
icebp
xor
xchg
jnp
fcmovb
mov
das
aam
insb
cmc
inc
mov
addr16
repnz
adc
sbb
inc
mov
mov
or
scas
cmp
orb
sti
jmp
hlt
mull
lods
push
sub
or
lret
pop
out
add
push
sahf
or
pop
and
push
push
mov
mov
inc
jno
ds
lea
pop
inc
jge
add
pop
icebp
int3
popa
push
mov
dec
push
int
push
stos
nop
ret
adc
repnz
xchg
push
stc
sbb
iret
and
fisttpll
adc
das
mov
inc
out
ds
jo
push
add
push
lods
add
mov
mov
fistpl
popa
mov
std
lods
test
lea
out
fwait
pop
push
push
ss
sti
or
in
aad
mov
add
xor
pop
jl
cmpsb
and
cld
add
xor
cmp
sbbl
push
add
adc
sbb
dec
add
xchg
add
insl
cmpsb
rorb
mov
push
es
hlt
pop
aam
call
mov
lcall
push
addl
in
mov
mov
cmp
in
lods
jno
fcomi
lock
pop
mov
out
dec
mov
mov
out
jb
into
mov
and
dec
scas
xchg
mov
sub
dec
repz
mov
add
rcl
add
xchg
jbe
or
fwait
xchg
and
mov
lds
and
fs
cmp
test
mov
inc
and
and
add
xor
int
lods
sub
jp
xor
fcomps
jb
sub
or
add
lea
add
mov
add
mov
mov
or
fidivl
ds
xor
mov
shll
adc
repnz
leave
pop
stc
loope,pn
mov
shlb
cld
into
xor
int
push
sti
pop
in
lret
xor
data16
test
test
fistl
sub
inc
dec
bound
mov
or
mov
cmp
push
in
addr16
cmp
scas
sbb
xchg
bound
add
pop
mov
pop
jns
mov
cmp
xchg
xchg
les
orb
sbb
lea
fcompl
mov
pop
roll
fildll
in
xchg
fcomps
adc
adc
jecxz
je
jg
mov
xchg
add
jo
add
das
dec
scas
lock
and
cmpsl
mov
mov
loope
jge
cld
cli
dec
or
inc
ss
push
or
pop
popf
push
in
pushf
xchg
cs
xlat
data16
das
rcr
sbb
mov
test
mov
jbe
and
mov
and
mov
xor
xchg
lcall
out
test
in
mov
mov
xor
ret
jo
mov
or
mov
jbe
lret
movsl
push
mov
mov
mov
aas
cmp
int
dec
pop
xorb
scas
into
jno
lret
je
roll
jns
lock
icebp
sub
pop
mov
imul
test
shl
xchg
jo
test
out
mov
aas
adc
sub
fcom
jle
std
cmpsl
add
or
into
in
lods
add
push
push
ljmp
cs
xchg
divb
test
push
add
add
pusha
cs
test
mov
pop
push
mov
inc
add
dec
out
ret
or
fnstenv
popf
jle
call
mov
sbb
sub
movsb
sub
mov
dec
push
test
data16
inc
inc
push
ss
jle
fld
xor
mov
dec
fidivl
mov
and
repnz
roll
mov
enter
push
xlat
lods
push
jae
mov
sub
sbb
mov
push
inc
flds
sbb
aad
or
xor
adc
cwtl
insb
test
and
popa
xchg
sarb
cwtl
sbbl
aam
jnp
sub
data16
jecxz
movsl
hlt
ljmp
jbe
cld
push
fiaddl
mov
sbb
add
sub
add
ja
mov
sbb
inc
dec
push
fildl
shl
cmpsb
fistl
inc
mov
add
int
inc
ja
ds
fidivrs
and
add
jl
je
mov
inc
jecxz
mov
into
jmp
pop
orl
movl
leave
sti
in
sub
lret
iret
mov
into
adc
divl
xchg
cli
aaa
inc
cs
andl
mov
mov
cmp
std
lock
shl
fiadds
xor
jbe
lret
xchg
das
scas
addr16
add
and
xchg
pop
insl
fcomip
into
dec
cwtl
into
aam
int3
outsl
inc
mov
xlat
lods
fistl
sbb
fdivl
jmp
or
mov
icebp
das
je
xlat
outsl
outsl
addr16
aas
into
and
clc
popa
lods
jne
rcr
and
or
loop
or
lahf
lds
in
xlat
jl
popf
cmp
inc
mov
jg
std
push
in
xchg
add
loope
add
xchg
xor
lret
pop
lock
add
lds
test
ja
in
lods
loope
daa
push
mov
mov
add
mov
add
out
jl
cli
in
xlat
sti
outsl
cmpb
cli
jp
daa
ljmp
dec
enter
fs
call
dec
dec
sub
repnz
packssdw
rclb
cld
mov
popl
mov
pop
or
sub
mov
jg
mov
shr
mov
inc
and
insl
sub
test
lods
jo
push
leave
lds
adc
mov
add
dec
ja
clc
dec
sbbb
pop
push
pushf
xchg
cwtl
sbb
mov
xchg
ret
jle
mov
add
xlat
ror
dec
dec
mov
test
jl
repz
movsl
mov
cwtl
dec
jae
iret
outsl
jae
jle
lock
push
lcall
adc
push
lds
clc
scas
stc
aaa
shlb
cmp
js
das
sub
adc
and
leave
dec
or
xlat
push
adc
gs
add
cmp
outsl
sbb
out
jo
and
popa
mov
in
jle
ror
insb
sti
je
sub
sbb
ljmp
sub
mov
mov
cli
in
stos
jno
loop
inc
mulb
enter
dec
out
push
call
loopne
push
mov
mov
xchg
jecxz
xor
aam
roll
mov
mov
in
dec
mov
popf
sub
dec
arpl
scas
or
jg
mov
push
movsb
mov
mov
inc
sbbb
dec
adc
push
lods
sbb
stos
mov
xchg
sub
xor
aad
test
movsb
add
outsl
and
push
mov
push
int
push
scas
lret
add
fldl
stos
or
jno
test
dec
jb
lcall
and
adc
mov
add
and
push
test
repz
cmp
aas
call
jmp
inc
dec
pop
pop
sbb
icebp
mov
or
pmaxub
cmp
push
mov
in
push
sub
sahf
xor
push
add
lods
ds
xor
inc
aas
mov
xchg
outsl
pop
jo
sbb
repnz
outsl
or
sbb
xchg
mov
add
mov
stc
sbb
pop
pop
pop
dec
sbb
in
ljmp
mov
gs
leave
dec
mov
lock
push
cmpsb
cmp
or
and
push
das
in
add
orb
inc
iret
xor
dec
push
xor
ss
faddl
push
add
add
stc
lock
mov
mov
inc
ret
dec
lret
push
scas
jmp
xor
imul
push
push
stos
add
pop
sbb
mov
cmp
sub
sti
adc
lret
pop
xchg
ret
pop
push
mov
push
cltd
jb
fldenv
ljmp
jmp
loopne
in
gs
cmpsl
jmp
fistl
lods
nop
insb
dec
sub
mov
cmc
xor
mov
mov
int3
fistps
mov
and
cmp
cltd
pop
rcr
imul
adc
pop
adc
cld
mov
in
add
jg
or
or
and
stc
data16
cmpb
mov
addr16
jge
inc
push
mov
push
cmp
cld
pop
arpl
mov
mov
and
xlat
test
mov
mov
xor
outsb
sahf
cmp
fwait
enter
sbb
xchg
push
jnp
pop
gs
loop
mov
pop
imul
lods
repnz
jae
pop
out
jg
pop
jne
leave
mov
jp
adc
test
xor
or
fimull
cmp
adc
cmp
fcmovnb
sbb
mov
inc
pop
pushf
imul
aaa
outsl
movsl
dec
adc
ss
jnp
call
popf
repnz
xor
call
fisttps
or
mov
iret
mov
daa
jge
add
flds
fsubp
arpl
aam
lds
push
mov
dec
pop
cmp
push
ficoms
pop
test
int3
test
push
dec
or
lcall
insl
xchg
int
pushf
mov
lods
mov
add
mov
sbb
sti
aad
cmpsb
add
shll
cmp
sbb
dec
test
xchg
adc
pusha
ja
push
ret
xor
or
outsb
das
xchg
or
add
sub
xor
mov
push
mov
inc
lds
insl
insb
inc
mov
mov
adc
inc
adc
cmpsb
leave
and
mov
rcr
cli
jo
cs
and
mov
rolb
xchg
rorl
sarl
jb
div
jb
daa
add
mov
or
repnz
fwait
scas
add
imulb
lahf
in
xchg
mov
xorb
sub
push
lods
addl
cmpsl
add
sbb
inc
scas
add
add
lcall
lcall
lret
mov
inc
cmp
add
outsl
repz
fwait
xchg
lret
xor
sub
mov
stos
insl
cwtl
sub
mov
fucom
jmp
fisubs
out
or
test
inc
cmp
ljmp
jns
mov
imul
dec
sahf
scas
mov
mov
movsl
mov
aaa
sbb
cli
xchg
mov
jo
add
filds
js
hlt
dec
or
insb
push
cmpsb
pop
lock
adc
in
xor
xchg
sbb
in
cli
mov
mov
in
or
push
xor
pop
xchg
xchg
and
lahf
xchg
add
sub
cmp
icebp
scas
xchg
cmp
pusha
repz
add
dec
jmp
mov
cmp
clc
xchg
fs
and
repz
lds
mov
imul
movaps
adc
inc
shrl
sbb
shrl
xchg
movsl
mov
jp
push
lock
add
testl
sub
pop
push
mov
popf
jmp
stos
popa
iret
bound
mov
arpl
inc
leave
fsubrl
xlat
ds
lods
test
test
pop
imul
stc
pop
and
or
jno
popf
rcll
adc
xor
and
pop
and
je
repnz
es
in
xchg
fs
mov
push
jbe
sbb
aam
jae
mov
xchg
arpl
mov
lock
pop
push
into
jns
sub
fldt
leave
push
idivl
fists
add
out
mov
leave
push
add
test
aam
inc
add
in
inc
sub
xlat
xchg
out
mov
les
aas
iret
cmp
or
mov
xchg
mov
cmp
add
mov
pop
xchg
cmpsl
jp
shlb
sub
mov
dec
les
loope
fsubrl
fcmovne
jne
lcall
rorl
xlat
imul
cmc
bound
stos
pop
iret
test
mov
push
inc
push
lea
push
add
fs
insb
hlt
xchg
dec
jmp
dec
stc
pop
sbb
cmc
add
mov
std
mov
pop
aad
ret
mov
and
cmp
cli
xor
mov
sub
lret
add
add
mov
imul
push
aaa
lcall
int3
gs
sub
dec
mov
jecxz
scas
in
xchg
int3
mov
hlt
ds
xchg
and
cmp
in
out
jle
and
outsl
out
mov
mov
add
or
lret
js
out
insb
jo
xchg
rorl
pusha
nop
lds
flds
sbb
inc
inc
cld
mov
xchg
mov
cmpsb
jmp
xchg
das
scas
push
imul
cwtl
or
mov
xor
jl
jg
lods
push
or
pop
pop
add
sub
xlat
das
loopne
sbb
clc
or
lret
adc
xor
shrb
inc
xchg
or
popf
and
roll
out
adcl
mov
inc
push
cmc
pop
cmp
or
icebp
sbb
enter
push
add
fmull
subl
int
aaa
test
call
mov
iret
mov
xor
pop
adc
addr16
add
or
sub
push
pop
add
jns
mov
lret
fwait
scas
push
add
iret
sub
pop
jl
push
out
dec
jb
jl
dec
pop
bound
scas
loope
lea
fldenv
add
ret
int
pusha
mov
sti
sbb
mov
ss
scas
or
adc
std
push
dec
mov
bound
adc
cmp
sub
les
jge
repz
xchg
enter
repnz
sbb
outsl
push
or
jnp
or
add
jnp
inc
out
daa
xchg
sub
sarb
testb
addr16
add
dec
in
sahf
aam
mov
sub
fadd
add
dec
push
jnp
inc
mov
cmpb
loope
cmpsb
fwait
mov
hlt
bound
add
mov
into
test
cmp
push
lods
shr
and
fisubs
jns
nop
lock
adc
aam
adc
add
push
lret
out
lds
cmp
mov
clc
xor
add
sbbb
inc
ret
xor
movsl
leave
and
inc
testl
push
repz
pop
sbb
rolb
shrb
loop
cmpsl
dec
icebp
cs
mov
imul
fwait
orl
pop
add
lcall
rolb
frstor
negl
sarb
sbb
iret
mov
leave
lods
mov
lcall
mov
or
pushf
das
dec
jmp
fidivrl
push
sub
ja
insb
cmp
dec
and
test
push
cmpsb
mov
add
repnz
jbe
nop
out
pop
aaa
inc
inc
dec
in
mov
andb
mov
inc
mov
outsl
nop
fildl
mov
shll
mov
add
adc
out
lds
mov
scas
test
mov
popf
inc
hlt
cmp
xlat
inc
cmpsl
xchg
mov
stos
call
fdivrp
mov
lds
add
xor
cmp
aas
insl
xor
or
int3
sub
rcl
lds
lahf
lods
lret
jge
sub
out
jle
cmc
adc
mov
sub
adc
mov
adc
gs
flds
push
dec
push
sub
dec
fbld
enter
outsb
or
pop
out
andb
cmc
stos
push
test
pop
or
add
aam
add
lea
std
ja
mov
push
xor
push
push
mov
pop
scas
xchg
push
aaa
dec
jo
stos
jne
mov
into
and
subb
loop
mov
pop
pusha
sub
in
sbbl
xor
test
jmp
popf
sahf
ret
mov
sbb
add
mov
dec
lods
add
fs
add
cmp
cmp
icebp
jge
inc
sub
insl
addl
add
adc
les
cmpsl
cmc
mov
adc
jg
add
outsb
ficompl
cwtl
cmc
inc
lret
pop
sbb
jne
imul
xchg
stos
cmp
mov
cmpsb
mov
cmovl
jo
xor
mov
jnp
pop
clc
add
out
mov
stos
ja
repnz
iret
xor
aas
inc
inc
and
push
outsl
enter
add
dec
push
or
jno
inc
push
bound
stc
hlt
imul
les
xchg
leave
insl
pop
cld
fldcw
inc
pushf
mov
or
mov
mov
inc
pop
sbb
xchg
inc
in
orl
mov
and
cmp
mov
xchg
mov
ja
or
and
imul
lea
add
repz
and
scas
cmpsl
dec
dec
loopne
daa
lret
push
jb
sbb
push
mov
decb
lock
in
insl
sbb
loopne
test
lock
inc
ror
test
add
add
nop
dec
pushf
mov
loope
adcb
and
dec
insl
inc
jp
adc
imul
jmp
mov
movsb
stos
hlt
in
xor
push
push
jnp
inc
das
mov
jl
aad
fildl
cs
cltd
das
pop
rolb
fsubrl
hlt
test
jne
and
push
jmp
xor
add
je
loop
mov
push
bound
xor
add
mov
mov
movb
pop
cltd
fildl
sbb
repnz
in
adc
adc
xchg
lret
int
push
ret
and
movb
cmp
cld
aaa
pop
xchg
push
fldenv
and
jecxz
in
mov
ljmp
pop
scas
lds
aas
hlt
mov
fistl
jmp
xchg
cltd
push
lret
shrl
mov
cmp
popa
gs
push
hlt
mov
outsb
movsb
stos
cs
pop
and
push
loopne
lcall
add
cmc
pusha
gs
and
and
xor
cmc
push
push
lods
add
push
scas
xlat
out
cmp
shl
mov
add
dec
mov
sbb
mov
fmuls
aam
inc
icebp
icebp
fwait
push
sbb
dec
cmp
in
enter
test
push
xchg
test
out
mov
loopne
into
add
dec
call
mov
jmp
jle
add
and
les
xchg
push
insb
push
loope
in
pop
ljmp
xchg
dec
gs
addr16
fdivr
mov
mov
jge
enter
mov
jo
lahf
add
jg
lods
int
rcll
sti
aas
dec
jl
jne
lock
push
jl
jecxz
xor
insl
push
hlt
xchg
mov
lahf
add
popf
fldt
jmp
cmpsl
push
pushf
push
add
popa
push
inc
dec
clc
pop
add
jl
xchg
mov
aaa
neg
pop
mov
out
or
icebp
mov
jg
imul
addr16
dec
xor
mov
cmpsb
lock
add
mov
loop
shll
push
pushf
cld
or
into
iret
fimuls
sub
enter
push
jp
aam
test
mov
loop
add
leave
push
xchg
outsb
stc
xor
lock
sub
mov
cwtl
cmp
mov
jmp
imul
cmp
and
jo
fcmove
bound
lds
scas
dec
ja
mov
ds
cmp
and
ljmp
rcrl
fisttps
jp
test
adc
rolb
ret
add
mov
add
add
add
cmp
inc
add
cs
mov
xchg
add
lods
pop
inc
or
mov
inc
sub
cmpb
add
jo
push
iret
fstpl
into
repz
movsb
inc
comiss
add
or
push
stos
popa
out
xchg
inc
fwait
scas
dec
leave
gs
das
adc
dec
mov
mov
cmp
jbe
rcll
lds
les
fdivs
call
or
shl
inc
repnz
jne
es
sub
inc
mov
fs
test
push
movb
in
clc
jl
pop
xlat
sbb
pop
testl
mov
scas
insl
add
mov
movsb
jge
dec
pop
mov
xchg
xchg
fisubl
mov
ljmp
add
cmc
cli
jecxz
mov
inc
iret
add
jae
push
cmc
dec
rcl
add
roll
and
fildll
pop
and
ja
lcall
pop
sub
rclb
insl
cmp
loopne
adc
jp
mov
cmp
inc
imulb
jo
cld
mov
in
cltd
fcoml
mov
push
sbb
fwait
cli
add
add
pop
int
or
or
cmp
clc
gs
shlb
xchg
loope
mov
inc
inc
lock
out
mov
cmp
div
pop
xor
imul
add
shlb
pop
mov
jge
adc
sub
fidivrl
sbb
dec
hlt
clc
lds
mov
jae
jle
stos
dec
loopne
mov
or
ret
js
mov
adc
add
push
ljmp
jno
inc
scas
lock
add
inc
inc
xchg
in
jmp
add
cmp
adc
cmp
dec
pop
push
add
scas
inc
movsb
test
ret
jb
dec
out
jmp
inc
cltd
movsb
mov
addr16
mov
out
outsl
cmp
xchg
ret
lds
out
das
mov
jne
xchg
stos
sub
and
lea
scas
mov
aam
cmp
inc
or
mov
pop
into
arpl
pop
in
jbe
ja
push
dec
ret
cmc
and
and
nop
icebp
mov
lock
or
into
sub
xchg
add
inc
push
or
add
add
cmp
jo
rolb
in
in
add
xchg
xchg
add
xorl
roll
test
add
add
sbb
push
add
out
add
fists
add
incb
ds
roll
sbb
scas
adc
add
add
fcoml
add
pushf
adc
add
add
add
adc
add
adc
add
add
adc
add
adc
add
add
add
add
adc
add
adc
add
add
add
add
mov
add
sbb
add
mov
add
rclb
add
adc
add
adc
add
add
adc
add
and
adc
add
add
jno
add
add
add
xor
inc
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
add
fs
imul
add
add
imul
insb
gs
jne
jo
je
add
inc
outsb
jne
dec
popa
outsb
addr16
addr16
jb
jne
dec
outsl
arpl
gs
add
gs
jb
arpl
fs
jae
add
jb
gs
xor
cs
insb
add
jns
inc
jb
ja
outsb
imul
arpl
push
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
popa
bound
jb
arpl
jae
imul
push
outsb
add
add
imul
outsb
outsl
ja
xchg
inc
push
imul
outsl
insl
push
outsl
imul
jae
jb
xor
fs
insb
mov
push
adc
xorb
out
mov
lds
leave
inc
arpl
push
push
stos
loop
jmp
or
int
or
cmpsl
sahf
xchg
jns
popa
inc
out
aad
dec
sbb
nop
or
rol
or
dec
jae
cmc
mov
nop
out
inc
mov
pushf
mov
lret
mov
aas
aaa
test
pop
cmpsb
lea
addl
aad
or
das
mov
aam
inc
mov
lret
xchg
and
ret
sub
movsb
test
jae
stos
mov
out
cs
clc
add
mov
pop
mov
sbb
sbb
mov
adc
jmp
sbb
or
loopne
leave
mov
pop
addr16
arpl
xchg
daa
es
sbb
mov
hlt
or
daa
jmp
cltd
dec
sub
add
add
cs
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
sbb
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
and
add
add
inc
add
insb
add
push
add
jb
jae
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
js
pop
add
add
add
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
