mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
ljmp
add
jb
gs
push
jns
je
insl
add
xor
or
jae
jge
inc
push
push
xor
push
or
out
in
das
add
push
push
outsb
out
inc
je
cmp
jg
aaa
insl
popa
insb
insb
std
stos
int3
mov
cmp
mov
gs
xor
fisubs
cmp
das
add
jns
iret
fidivl
shrb
push
int3
fs
call
testl
jb
pop
cld
out
inc
popa
push
sub
add
adc
add
ss
icebp
add
cmp
push
inc
jns
pop
add
dec
xchg
mov
sti
popa
je
jbe
dec
jae
je
lock
out
xor
ss
scas
mov
sbb
push
mov
cmp
jne
add
outsb
std
loope
loopne
jns
pop
les
jb
push
cld
fidivs
es
push
dec
xor
and
das
push
imul
or
outsb
add
lar
sbb
pop
add
or
xor
push
jae
lcall
fstpl
push
adc
push
inc
insb
popa
jae
sbbb
adc
dec
push
inc
push
push
dec
push
je
push
add
addb
adc
clc
inc
pop
sti
lds
xor
int3
sbb
insb
loopne
inc
push
xor
sub
xor
or
outsl
jo
inc
jno
jecxz
mov
pop
imul
add
gs
fbstp
addr16
push
iret
and
or
or
add
inc
insl
jo
xor
mov
jb
popa
arpl
adc
pusha
sub
fs
orb
ss
andps
jo
movsl
insl
xchg
add
in
sbb
push
sahf
mov
push
push
push
popa
lock
adc
data16
adc
enter
or
jo
inc
mov
cltd
loopne
xchg
pop
lock
or
or
aad
adcb
hlt
es
addr16
fisubrs
pop
imul
jbe
mov
test
das
mov
lcall
push
adc
or
out
sahf
sub
xor
js
xchg
mov
dec
ja
add
rorb
inc
outsb
and
xor
popa
jp
inc
mov
jb
xor
mov
out
sbb
sbb
inc
cmp
enter
sbb
movsb
jg
sahf
pushf
aad
sbb
add
stc
in
xchg
outsl
idiv
lcall
sbb
pop
mov
cli
decl
xor
dec
dec
add
ljmp
std
aas
rorb
push
dec
bound
arpl
ss
push
jge
push
inc
clc
js
add
test
cmp
gs
cmpsw
cwtl
stc
outsb
sub
add
inc
add
adc
sahf
in
or
out
mov
cwtl
push
inc
or
sub
add
dec
jnp
fisttpl
mov
inc
pusha
jne
xor
sub
inc
inc
sub
repnz
sti
push
jns
push
inc
adc
add
xchg
pop
pop
dec
popa
insl
and
adc
adc
jns
push
add
cmp
lock
fmul
xchg
insb
push
adc
add
xor
and
jno
add
popa
sahf
je
pusha
mov
das
jno
add
add
outsl
push
in
mov
lock
test
and
jp
push
pushf
push
pop
cmpl
pop
adc
insl
jae
inc
iret
or
add
cmp
fmuls
dec
ljmp
jp
in
in
xchg
cmp
adc
adc
dec
push
pop
andb
push
inc
sahf
mov
jb
jbe
gs
mov
clc
jl
add
push
loopne
xchg
fs
inc
adc
cmp
add
xor
fimull
outsb
insb
jns
or
inc
dec
shrb
or
insl
push
add
or
and
pop
jge
add
dec
mov
leave
orb
adc
inc
adc
mov
xor
cwtl
add
movl
adc
out
xor
mov
mov
push
fisubl
or
outsl
jo
pushf
rolb
pop
xor
sbb
adc
inc
nopl
or
xchg
dec
lock
dec
xchg
arpl
xchg
inc
outsl
shll
das
mov
push
outsl
scas
and
and
in
out
mov
push
popa
gs
mov
je
add
push
pop
aaa
insl
roll
mov
dec
lret
orl
sub
sub
inc
lock
add
jne
mov
movsl
test
out
pusha
xor
outsw
jb
inc
mov
cmp
or
jo
aam
add
dec
filds
js
call
addr16
aas
cmpl
xor
scas
outsb
fs
aas
or
js
gs
add
adc
out
fadds
lods
xor
xchg
pop
rep
jns
pop
test
mov
lds
and
or
shrb
push
lcall
or
cmp
es
mov
or
push
imul
test
test
push
push
popa
jb
jb
popa
jns
rorl
mov
repnz
pop
insb
les
and
sub
das
add
dec
outsl
ja
cmp
pusha
or
pushf
mov
add
mov
xor
sbb
movsb
das
or
and
roll
sbb
pop
inc
lds
shlb
outsl
dec
adcb
insl
or
arpl
iret
dec
mov
add
popa
fadd
bound
sbb
test
pop
daa
cmp
or
jbe
mov
mov
in
push
cmp
out
adc
jg
test
orb
adc
add
ficoml
add
gs
dec
sub
push
push
sbb
adcb
xchg
pop
or
mov
push
adc
enter
pushf
lods
adc
fsts
sub
sbb
xor
in
dec
push
add
roll
cmp
pop
arpl
inc
cwtl
outsl
dec
push
imul
xchg
rcrb
imul
fs
mov
push
mov
inc
rclb
dec
shlb
int3
enter
dec
mov
adc
xchg
add
lea
mov
xor
sub
push
and
fistpl
mov
outsb
jns
mov
gs
dec
fistl
inc
fwait
xchg
ficomps
ror
arpl
cltd
push
bound
lret
in
jae
add
inc
fbld
pop
push
popa
ja
cmpsb
call
and
mov
jg
and
pop
enter
arpl
or
fnsave
in
data16
das
adc
hlt
imul
jb
outsb
cmp
dec
ss
xchg
push
repnz
adc
aaa
mov
fstl
and
push
xor
pop
push
cmp
xor
sbb
cmpsl
stc
daa
sbb
imul
mov
fsubl
inc
das
sbb
xchg
iret
adc
pop
shlb
dec
gs
push
cmp
insb
test
or
es
mov
adc
or
sbb
sub
mov
pop
test
jnp
inc
sbb
popf
and
push
sub
stc
cmp
and
lods
ss
or
add
pop
push
shl
adc
inc
add
jno
cmp
clc
and
inc
mov
adc
push
pop
pop
mov
adc
aaa
push
sbb
cs
inc
or
xor
pusha
mov
scas
xor
cmpxchg
fdivs
adc
mull
insl
bound
pop
je
hlt
jle
adc
adc
add
jb
adc
das
aas
xchg
sub
incl
test
std
xchg
lock
ret
mov
jmp
mov
mov
and
jmp
xchg
xchg
xchg
es
aam
int3
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cmp
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
insb
push
xchg
xchg
xor
and
xchg
xchg
xchg
xchg
pusha
pop
pop
push
xchg
xchg
xchg
xchg
sbb
push
pop
roll
push
jl
pop
pop
xchg
int
jmp
push
push
mov
xor
nop
nop
push
add
mov
inc
stc
push
or
data16
testb
je
movzwl
mov
add
pop
ret
adc
movl
imul
cmp
bound
dec
and
arpl
jb
imull
call
xchg
and
sub
xor
xor
sub
hlt
xor
and
and
imul
adc
dec
nop
jo
push
push
cmc
xchg
xchg
and
or
inc
lahf
lock
and
and
arpl
pop
popa
pusha
daa
push
pusha
pop
jae
and
sahf
adc
lock
arpl
jl
sbb
or
jle
popa
xor
ficomps
leave
cmp
divb
bound
test
and
pop
pop
and
mov
jae
insb
push
out
rcrb
dec
dec
outsb
cmpxchg
mov
lcall
or
push
dec
add
inc
or
lcall
or
or
or
fldl
imul
cmpsb
imul
lcall
adc
xor
cs
jp
add
pop
lods
cltd
adc
cmp
inc
and
mov
nop
inc
ficompl
xor
push
lahf
cmpsb
imul
cmp
lcall
cmp
and
into
sub
add
add
neg
jns
fistpll
insb
add
jl
push
cmp
add
js
cltd
in
mov
inc
sub
mov
pop
xor
mov
add
nop
adc
lock
mov
mov
das
jp
jmp
lret
add
mov
mov
and
jge
out
add
push
mov
and
fwait
cmpsb
sub
ljmp
and
out
out
lret
adc
push
add
lret
push
adc
mov
add
enter
push
shl
or
sbb
loopne
ljmp
testl
testb
jne
orl
in
ja
hlt
adc
dec
add
clc
cmp
sbb
andl
mov
cld
sub
jb
movsb
sbb
sarb
pusha
push
mov
inc
sbb
push
dec
push
jns
loopne
rcrb
dec
mov
push
mov
popa
daa
js
mov
loop
mov
rol
mov
mov
mov
mov
fst
outsb
push
rolb
xor
mov
aaa
fists
cmpb
jmp
std
sbb
pop
fdiv
pop
and
lock
add
and
push
xor
jle
push
push
adc
clc
mov
lea
movb
add
fwait
and
xchg
movb
je
sti
mov
or
ja
pushf
sbb
mov
aas
movl
in
inc
ss
add
cli
pusha
or
pop
pop
pop
faddp
add
das
fdivp
sti
mov
sub
jae
jle
adc
mov
push
and
in
mov
or
test
jne
in
mul
push
jns
mov
xor
jmp
or
cmp
in
push
push
leave
lods
jae
lea
inc
pop
pop
push
call
add
and
cmp
jbe
sub
add
jmp
test
jne
jecxz
mov
mov
add
fiadds
aas
shrl
les
inc
pop
popa
out
adc
mov
sub
pusha
xor
and
mov
cwtl
fidivrs
loope
mov
mov
mov
bound
add
cmp
jbe
ljmp
jo
sbb
adc
xchg
xor
push
mov
repnz
or
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
push
in
fistps
loop
fidivrl
ret
jae
fdiv
sbb
mov
sbb
aaa
sub
dec
mov
xor
add
push
pusha
dec
mov
or
lds
int3
push
std
sub
add
jbe
int3
outsb
imul
mov
iret
xchg
mov
pusha
and
push
aam
jmp
repz
dec
push
mov
push
ja
jmp
dec
and
es
mov
adcl
push
add
outsb
hlt
shlb
or
les
je
add
sbb
sbb
jo
inc
xor
mov
or
mov
clc
mov
fisubl
and
scas
fwait
in
sub
ret
sub
and
out
out
dec
add
movzwl
add
cmp
ja
dec
mov
cmp
shr
aas
dec
hlt
pop
or
or
lods
call
and
and
rcll
mov
pause
jns
pop
fwait
or
aas
je
fwait
jae
lods
cmp
cmp
imul
or
insb
mov
or
mov
clc
ja
jo
mov
add
js
lcall
int
loopne
mov
push
push
add
cmp
jne
mov
movsl
ret
test
btr
mov
push
jle
pusha
or
insb
mov
push
sub
fisttps
sub
lea
mov
loope
jmp
andb
xor
mov
push
lea
mov
mov
test
mov
jmp
ds
push
mov
sbb
mov
and
mov
testl
push
mov
movl
sbb
lea
imul
insl
icebp
iret
mov
addr16
fisttps
dec
sub
mov
movsb
or
faddl
and
cmpsb
lea
inc
pavgb
pushl
and
mov
pop
push
je
loope
rol
or
jmp
mov
xor
add
aas
fcmovnbe
mov
mov
loopne
xor
cmpsl
jecxz
jb
adc
fdivs
clc
sub
push
mov
jmp
mov
arpl
dec
mov
or
pop
test
inc
inc
cmp
nop
mov
add
xchg
adc
test
push
pop
xorb
push
mov
xchg
or
sbb
dec
add
mov
test
adc
cli
nop
and
mov
test
stos
add
roll
test
add
xchg
jge
cld
mov
jne
subl
je
pop
shrb
lods
test
inc
fadds
data16
dec
mov
lea
pop
dec
cmpsb
xor
push
mov
jo
xchg
sub
sub
or
insb
push
mov
iret
sub
push
xchg
scas
jae
scas
js
push
push
mov
pop
leave
outsl
pop
popf
mov
aaa
inc
addb
sbbb
loop
fmull
inc
mov
inc
xor
sub
xor
dec
clc
aas
adc
inc
cld
or
cmp
inc
lock
cmpsb
fiadds
xor
xchg
mov
xlat
arpl
fdivs
movsl
pop
mov
cmp
jmp
dec
clc
sub
sub
sbbl
jne
in
mov
lahf
pop
and
stos
flds
fiadds
sbb
add
inc
cld
popa
ret
movl
loopne
add
lcall
xor
or
in
imul
cmp
jb
sbb
mov
cmp
jb
jns
jb
clc
das
sub
mov
ret
jg
jmp
pop
loopne
movsb
test
lea
push
mov
loopne
imulb
sub
adc
and
add
hlt
out
sbb
mov
push
popa
xor
call
xchg
xor
jne
cmp
clc
xchg
stos
call
jecxz
cmp
push
xchg
cvttps2pi
cmp
jb
in
push
fs
sbb
ljmp
out
pop
fs
and
repnz
xor
pop
xor
cmp
fdivs
ja
pop
inc
or
subl
pop
cld
or
mov
push
mov
ss
aas
mov
jne
or
adc
pop
xor
jle
aad
mov
roll
xlat
sub
clc
cmp
cmp
sahf
sub
rcl
lea
mov
push
push
out
lock
inc
lds
loop
imul
add
roll
dec
fistps
cmpsb
or
or
xor
cwtl
sub
ret
jle
sbb
iret
ja
cwtl
loopne
je
xchg
pop
mov
pop
mov
shr
add
xor
sub
adc
fiaddl
add
lea
ja
andl
inc
add
adc
jle
outsl
push
jp
jl
mov
push
pop
add
add
or
mov
rcll
mov
pop
rcl
dec
clc
lock
iret
push
gs
loop
cmp
or
jge
xor
push
clc
xor
and
cmpsl
mov
lea
jecxz
lea
or
fists
sti
cltd
jae
neg
fldz
fstl
add
js
or
rcr
xor
imull
enter
mov
hlt
aas
imul
add
mov
adc
test
jne
xor
pop
std
aaa
sbb
xlat
je
mov
fildll
jb
dec
mov
and
shrb
sbb
jg
mov
ret
and
sbb
mov
fdivr
mov
push
pop
adc
sbb
jmp
sbb
sbb
inc
add
fmuls
mov
push
mov
mov
test
testb
shll
div
nop
push
add
push
subb
inc
mov
subb
jmp
xor
adc
test
jne
mov
xor
cmp
rcll
xchg
jnp
adc
push
icebp
mov
mov
test
iret
xor
sub
repnz
rcrb
mov
scas
adc
test
fcomip
lock
rcrl
xor
push
mov
push
adc
out
jbe
pushl
pusha
mov
push
stos
enter
or
push
lock
fistl
sbb
xor
leave
mov
push
adc
jge
sbb
lock
push
adc
mov
push
testb
je
adc
add
shr
mov
pop
pop
cmp
out
mov
xor
cli
and
call
rolb
jno
shrb
or
push
push
and
xor
cmp
daa
test
daa
dec
movb
neg
adc
lea
mov
and
dec
jne
push
fsub
rol
sbbb
push
mov
hlt
sbb
mov
push
sbb
pop
dec
fistpl
pop
mov
dec
cmp
cmp
cmp
cld
cmp
std
jmp
add
mov
fidivrs
jmp
movsb
sub
aas
out
or
push
inc
sbb
loop
jns
dec
mov
xor
jae
ret
adc
xor
subl
mov
jl
adc
mov
pop
mov
cmp
jne
add
push
jge
cltd
in
mov
and
mov
add
dec
jne
mov
sbb
fdivrs
add
call
cmp
add
lea
jl
cmc
decl
inc
in
and
test
sub
call
out
or
movsb
push
inc
shrl
or
cmp
je
aaa
daa
dec
test
test
pop
clc
add
dec
jge
hlt
adc
jne
mov
inc
add
jge
ret
add
and
adc
pop
mov
dec
incb
cltd
testl
or
out
jae
dec
aas
rorb
mov
cmpsb
inc
test
adc
cmpb
xor
and
cmp
jae
add
pusha
jmp
decl
jne
cmp
test
adc
jmp
xchg
call
and
call
bnd
andl
cltd
filds
xchg
das
mov
add
mov
je
orl
mov
cmp
jg
mov
or
ret
inc
fiadds
fdivrs
add
fmull
xchg
shll
jbe
mov
in
pop
mov
push
dec
jne
data16
mull
lea
xchg
and
xchg
xor
and
pop
inc
add
sub
push
dec
movb
mov
xchg
rep
xchg
divb
inc
call
popa
test
lock
pop
int3
je
push
shrl
pop
jmp
mov
daa
aaa
and
add
mov
and
sub
mov
push
in
jle
mov
jmp
shl
xchg
jne
mov
mov
push
adc
ds
jmp
flds
cmc
inc
adc
push
in
adc
xchg
scas
mov
ds
push
je
dec
jl
cmpb
mov
std
xor
rcrl
lea
pop
sbb
and
movl
adc
jb
mov
dec
out
cmp
in
loope
jb
push
mov
mov
jl
fdiv
lret
fmuls
xchg
cmpl
das
fwait
or
xchg
add
push
fwait
and
rcll
add
jo
dec
notb
add
mov
dec
mov
inc
xor
and
pop
push
mov
xor
push
push
in
imul
or
push
cld
call
ljmp
je
jmp
in
in
outsl
or
inc
mov
in
mov
or
inc
cld
xor
enter
js
rcl
inc
xchg
dec
mov
cmp
lock
push
cmpb
fists
pcmpeqw
xchg
sbbl
subl
jecxz
or
xchg
jbe
pop
adcl
aaa
pushf
sbb
out
adc
sbb
push
imul
cmpsl
outsl
call
inc
inc
xor
mov
cmpsb
dec
inc
shll
je
xlat
add
jmp
aaa
add
inc
push
divb
mov
adc
mov
sub
push
rorb
mov
and
les
idivb
std
adc
cs
fstpt
add
cmp
jbe
mov
scas
fcoms
cmc
lcall
aaa
jne
mov
ss
mov
cmpl
push
movl
scas
sub
lock
sub
movl
stc
cs
sarb
add
add
fimull
call
jbe
pop
out
pop
sti
dec
mov
shl
mov
shl
add
mov
fistps
push
xor
loope
lea
add
shl
push
mov
mov
and
mov
push
mov
std
mov
fisubl
out
mov
push
push
loop
or
ljmp
cli
ret
mov
mov
adc
cmp
dec
mov
push
in
cli
ret
mov
ret
repz
dec
les
pushf
pop
adc
mov
fidivrs
jle
jmp
mov
push
out
outsl
add
push
mov
cmp
jne
mov
fwait
mov
or
or
inc
adc
inc
cmp
dec
adc
and
and
mov
mov
push
in
int3
or
sub
xor
mov
push
test
jae
push
inc
sbbb
sbb
pop
pop
cmpl
adcb
lret
cmp
push
cld
sbb
sub
dec
je
lahf
std
push
xchg
out
test
and
cmp
adc
call
add
ret
mov
push
xor
imul
nop
aas
push
mov
add
sbb
imul
sbb
enter
or
mov
pop
repz
mov
xor
jmp
cmp
imul
rcr
arpl
sbb
dec
jge
cmpl
inc
stc
sbb
fdiv
xorl
pop
or
or
stos
push
push
cld
and
push
ret
cmpsb
adc
daa
push
cmpsl
gs
mov
pushf
sub
xchg
and
js
lods
aam
das
or
jne
mov
dec
cwtl
outsl
cwtl
inc
jmp
cmp
ja
movzbl
add
push
adc
and
mov
xchg
inc
inc
push
add
or
test
mov
push
shrl
movsl
add
pop
pop
jne
mov
jns
lahf
int3
mov
pop
jae
ds
or
nop
sbb
cmp
ja
sub
jg
jmp
add
inc
sub
adc
rorb
push
adc
mov
jae
repz
jne
sbb
stos
mov
mov
mov
std
add
lea
adc
flds
das
js
inc
jge
cmc
pushf
sbb
ret
jle
or
shrl
lret
subl
adc
jbe
adc
add
clc
sub
add
inc
cmc
pop
jmp
mov
or
data16
adc
inc
add
and
add
fidivl
addr16
cmp
push
add
je
fadds
ret
mov
sbb
pop
mov
inc
inc
push
push
bound
jo
hlt
mov
scas
mov
add
sub
stos
sbb
add
rcll
jmp
cmc
cs
jl
xchg
pop
cmp
sbb
jp
and
test
mov
testl
pop
rcrl
push
mov
cmp
mov
ja
test
mov
adc
jne
ja
int3
pop
insb
mov
test
adc
pop
loopne
fiadds
mov
lret
cmp
mov
jl
in
shl
inc
dec
add
add
cmp
sbb
sbb
add
adc
fstl
sarl
or
add
neg
sub
jne
jl
stos
jle
mov
pushl
inc
ss
pop
inc
out
iret
lcall
sbb
sahf
out
sahf
push
adc
adc
or
fnstsw
incl
push
add
or
push
fsubrp
iret
mov
push
add
push
add
mov
sti
and
add
sub
je
and
je
aas
aas
aas
js
outsb
pop
je
xor
arpl
lock
push
push
data16
lock
xor
or
cmp
ja
lock
add
das
clc
dec
insb
gs
loopne
int
or
jge
jmp
lock
jg
jmp
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
pop
packuswb
popa
jb
mov
mov
jbe
adc
add
mov
shl
ror
les
xor
shr
mov
mov
sub
pushf
into
clc
push
jl
adc
lock
std
cmp
mov
mov
pop
loop
fldt
cmp
mov
sub
es
mov
push
add
popa
mov
jmp
aam
gs
mov
xor
das
test
jmp
fstp
fldt
fs
adc
out
or
adc
jg
xor
and
mov
mov
jecxz
fldcw
push
movsb
shlb
xlat
mov
mov
enter
jmp
test
cmp
xor
push
push
xor
lea
pop
cmp
cmpl
dec
lcall
jmp
pushl
push
call
and
mov
cmp
ja
xchg
pop
pop
pop
xchg
push
mov
ret
mov
push
jmp
cld
inc
lcall
imul
pop
leave
inc
jb
sbb
aam
jmp
addps
jmp
test
and
and
mov
cmp
popf
inc
lock
xchg
ret
and
push
dec
shrb
mov
stos
inc
rcr
xchg
or
inc
fs
fnstsw
out
mov
mov
mov
sbb
pop
aaa
cmp
push
std
mov
ror
test
je
les
ds
fs
push
mov
jae
cs
aas
adc
jle
mov
incl
mov
mov
call
push
pusha
aad
add
stos
mov
sbb
sar
scas
pop
scas
dec
rep
pop
cmp
rep
mov
mov
sub
add
pop
rolb
cli
jmp
cmp
aas
rcl
je
pop
mov
jae
push
push
mov
jbe
fucomip
mov
push
sbb
jne
jne
or
mov
jbe
sub
popa
pop
call
lcall
sbb
xchg
cmp
or
decl
jb
movswl
add
loope
loope
mov
add
pushf
adc
pusha
in
xor
ja
ret
pop
lds
xor
mov
inc
dec
dec
add
sbb
sti
cmp
xor
icebp
inc
jp
clc
mov
mov
mov
xor
push
add
sub
dec
mov
loope
jbe
lret
cmp
iret
out
jmp
test
pop
xlat
jnp
test
mov
cmp
jmp
dec
arpl
sub
push
leave
pop
out
cs
loope
push
inc
lods
lock
sub
xor
mov
sahf
cmp
jne
push
or
inc
rcr
or
or
ss
mov
fsubr
lds
sub
pusha
aas
push
icebp
fdivrs
pop
push
lret
add
mov
add
loope
dec
decl
add
jnp
jmp
push
cltd
mov
mov
sub
cld
and
pop
mov
inc
push
mov
sbb
push
les
pushf
dec
je
pop
loope
loopne
or
push
sbb
negl
xchg
push
popa
xchg
out
push
pop
mov
testb
sarb
or
in
add
jno
sbb
push
xchg
jmp
lock
push
jp
in
or
add
repnz
and
xor
adc
pushf
pop
sbb
pop
ret
pop
add
sub
inc
cld
adc
xor
stos
inc
push
or
jne
ss
jmp
sub
xchg
xlat
pop
push
data16
pop
insl
loop
or
sbb
cli
add
jae
movsb
cmpsl
mov
mov
pop
addb
pushf
pop
loopne
or
fsubl
push
xchg
push
scas
lea
push
js
push
inc
adc
jo
xchg
push
in
cmp
pop
xor
popa
daa
sub
inc
fcoms
push
push
scas
add
or
jbe
rorl
leave
xor
mov
loope
jo
sbb
ds
adc
dec
iret
lock
call
and
add
dec
jne
sbb
jmp
sbb
push
lea
loope
sbb
pop
jle
je
jmp
mov
mov
push
test
jne
xor
psubusw
sbb
add
fisttpll
adc
ja
aam
fcomp
pop
mov
cmp
rcrl
push
push
mov
xor
fcoml
or
xor
adc
push
add
jle
mov
add
push
adc
fiaddl
ds
or
pop
add
sbb
mov
out
push
in
mov
sbb
push
in
hlt
iret
ds
jo
xor
ljmp
xor
sbb
out
sbb
jecxz
mov
push
pop
add
pop
iret
pop
jmp
cmp
test
jl
cld
hlt
adc
pushl
rorb
mov
mov
mov
movl
movsl
adc
push
shrb
in
mov
inc
or
or
icebp
ljmp
pop
lods
test
dec
mov
jle
add
sqrtps
repz
pushl
add
fisubrs
addb
loopne
xchg
movsb
mov
out
pop
popf
or
dec
jg
sbb
add
inc
call
pop
std
adc
inc
sub
inc
mov
mov
les
and
lods
mov
aaa
xchg
adcl
jne
clc
int
out
rolb
push
addr16
das
cli
jg
cmpl
jbe
cmpw
adc
or
push
aaa
pop
test
or
sbb
add
dec
ja
sbb
lcall
sbb
loope
pop
fimull
imul
insb
push
jb
arpl
mov
add
jb
outsb
or
mov
adc
arpl
in
inc
pop
mov
call
loopne
or
sbb
lret
push
add
adc
sbb
push
sbb
sbb
or
mov
and
xlat
inc
dec
add
xor
dec
inc
inc
cmp
cmp
push
scas
fadds
xlat
mov
push
jnp
push
inc
add
and
add
inc
in
sbbb
jno
das
inc
pop
mov
mov
lock
adc
xchg
mov
cmpb
push
lods
add
xor
bound
cltd
pop
loopne
out
or
adcl
pop
add
sub
xadd
or
sbbb
mov
sti
add
or
mov
hlt
ret
dec
add
push
sbb
inc
ss
sahf
pop
into
inc
add
push
dec
adc
mov
cmpsb
and
clc
push
test
sub
mov
mov
rorb
roll
and
out
scas
inc
loopne
cmp
mov
dec
call
cmp
mov
testb
and
pop
lret
dec
clc
jmp
push
fcomps
fdivrs
xor
add
cmpl
xor
jl
push
cwtd
lock
xor
add
mov
les
jg
xor
xor
dec
add
jle
add
in
aam
xor
push
mov
add
test
lds
jo
xor
xor
psubw
scas
dec
dec
jl
iret
iret
cs
ljmp
ja
adc
clc
add
mov
leave
adc
add
and
and
test
or
sbb
aam
iret
lock
loop,pn
add
mov
aad
add
inc
pop
add
adc
dec
hlt
sbb
push
daa
push
lods
lock
xchg
jne
and
inc
mov
cmp
enter
xchg
mov
hlt
roll
lds
idiv
inc
add
add
or
inc
ror
jo
mov
les
iret
shlb
nop
push
mov
xchg
add
or
push
jg
sahf
in
push
call
add
fcoms
cmp
int
add
pop
ucomiss
xchg
scas
pop
push
inc
add
adcb
daa
pusha
decl
mov
jmp
or
mov
dec
or
roll
mov
inc
dec
push
mov
fs
adc
loop
fiaddl
adc
cmp
gs
cmpb
pop
loopne
inc
add
divl
add
mov
jl
or
dec
aaa
sub
pop
inc
icebp
push
shlb
and
inc
sbb
clc
mov
addb
je
jnp
dec
sub
jbe
pop
ja
lea
adc
xor
mov
stos
xchg
cmc
enter
mov
add
pop
rcll
push
jns
xchg
incb
je
orl
ds
mov
mov
push
cmp
sub
push
add
dec
jl
pop
stos
mov
add
mov
negl
inc
add
push
add
test
out
mov
and
pop
mov
mov
filds
xor
fsubl
clc
add
and
jl
and
loopne
xor
and
cmpsl
movsb
loopne
push
xor
add
aad
cmp
push
jl
shrl
std
sub
stos
test
xor
add
fsubs
and
or
loopne
push
je
mov
inc
loopne
int3
movsl
jge
push
out
mov
loopne
jmp
fcoms
or
push
push
push
call
mov
jo
scas
push
jg
adc
je
pushl
add
adc
int3
outsb
lcall
push
pusha
insl
outsl
mov
mov
mov
jns
or
cmpsb
sbb
inc
decb
movl
sbb
or
pusha
daa
push
and
add
pop
movsb
inc
xchg
cmp
cmp
add
pop
jp
adc
or
mov
sahf
cmp
or
nop
jmp
ret
xor
orb
xchg
arpl
xor
and
or
add
sub
push
add
pop
cld
jg
je
cmp
push
sub
idiv
cmp
jmp
add
sub
jb
je
jmp
cmp
stos
jl
je
sub
add
jmp
sub
pushl
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
lret
out
adc
movzbl
push
std
in
add
outsl
mov
gs
xor
je
push
xchg
xchg
cmpsb
push
mov
into
pop
aad
ljmp
adc
inc
sbb
aaa
aad
dec
cli
jp
fcomp
out
push
xchg
jge
inc
incl
or
xorl
push
adc
xor
test
jmp
fs
mov
or
mov
or
notl
inc
push
sbb
cmp
mov
add
or
jne
dec
shrl
mov
or
pop
push
mov
add
in
lahf
mov
fstpt
dec
mov
je
add
pusha
adc
xor
sbb
jmp
xchg
mov
dec
insb
push
loopne
popf
rcll
cmp
fildl
ds
sub
sti
jle
dec
xchg
cld
pop
divb
inc
cmp
jg
cltd
popf
jbe
rol
add
cmpsl
adc
mov
cmpl
mov
cmp
mov
ja
and
add
xchg
das
bound
aam
jp
cmp
mov
mov
push
test
lds
inc
jb
pop
aaa
cmpsl
xchg
and
pop
cmp
push
push
nop
pop
iret
ja
jnp
fsubrs
mov
sub
sbb
decl
add
mov
add
mov
mov
je
add
jno
mov
or
fsubr
add
dec
sub
or
jne
pop
pop
filds
push
mov
inc
or
sahf
loope
add
mov
mov
loop
adc
cltd
idiv
lret
jnp
mov
adc
and
and
dec
mov
fdivl
loopne
inc
sbb
push
fistpl
pop
jle
mov
mov
cmpb
mov
outsl
adc
ja
add
notb
jp
mov
mov
or
push
in
cmc
mov
sbb
inc
leave
test
stc
fucomi
add
cmp
xlat
jne
cmpl
add
mov
dec
jno
add
push
jl
stos
push
fwait
sub
xor
add
testb
push
mov
inc
pop
ret
adc
enter
jne
fidivrl
in
inc
adc
cmp
mov
shll
lret
mov
jp
cmp
rcrl
js
cs
and
sub
sbb
mov
dec
or
jle
xor
jnp
pop
mov
inc
pop
call
sbb
icebp
xor
jne
lds
mov
push
add
adc
and
subl
or
pop
mov
lods
jmp
call
inc
mov
mov
je
adc
push
inc
pushf
dec
push
jbe
jns
inc
jne
call
adc
in
xchg
loopne
inc
fs
mov
push
mov
mov
push
icebp
dec
sub
mov
pop
dec
cmp
xchg
jae
insl
mov
imul
aad
inc
add
and
sbb
loope
inc
mov
push
add
jo
push
jo
cltd
arpl
inc
clc
push
jno
lds
data16
mov
or
add
inc
add
sub
ret
inc
frstor
test
xor
inc
push
ja
push
cmp
sbb
push
fdiv
dec
fildl
or
xchg
dec
arpl
cmpsl
cs
fsubp
xor
arpl
push
adc
movl
lea
rorb
jl
lock
or
inc
hlt
lret
pop
mov
inc
push
or
adc
jb
scas
add
sbbb
add
or
push
jne
out
pop
outsl
jbe
inc
add
jle
loope
inc
call
inc
jle
int3
and
repnz
popw
or
mov
and
cmp
cli
orl
mov
fstl
or
push
sub
dec
xchg
dec
aam
sub
and
mov
insl
sbb
sub
daa
push
mov
push
je
test
mov
jl
adc
loope
adc
outsl
add
dec
hlt
mov
xlat
mov
jno
sub
repnz
push
push
addr16
pop
pop
pop
test
das
test
mov
ret
outsl
lret
imul
or
shrl
outsb
add
adc
or
sub
out
data16
mov
jmp
xchg
mov
add
push
jb
fcompl
mov
scas
mov
adc
jp
js
push
cmp
lea
sbb
inc
pop
jne
xor
or
jge
or
test
shl
mov
pop
fs
dec
sbb
test
inc
push
and
pop
cmp
bound
cmp
xor
jmp
bound
xor
and
ret
push
aam
clc
sub
mov
hlt
push
xor
add
jb
loop
clc
add
jecxz
dec
dec
dec
es
inc
jg
ljmp
mov
pop
push
dec
cld
lods
pop
pop
jmp
inc
push
subb
fwait
inc
clc
push
jnp
rorb
je
lods
sbb
push
dec
into
jmp
ds
sti
cmp
mov
jb
cmp
sub
lods
andb
push
hlt
aas
fs
mov
pop
add
mov
jb
or
add
cmp
add
cmp
iret
int
daa
or
cmp
sub
push
rcr
add
cmp
xor
xchg
push
aaa
pop
adc
dec
push
fcoml
mov
aaa
mov
in
cmp
add
push
test
loope
fldl
in
cmpsl
shlb
or
mov
or
je
lcall
cli
jg
sub
inc
in
adc
sarl
mov
inc
rep
jmp
icebp
pop
add
jne
in
in
mov
jmp
mov
aas
mov
nop
push
mov
push
mov
ret
cmovl
sbb
and
xor
cmp
je
cmp
je
or
je
add
cwtl
push
mov
mov
pop
sub
addr16
cmp
cmp
or
or
push
in
gs
out
push
outsl
or
in
add
add
jle
or
or
xor
mov
jnp
std
testb
mov
push
cld
add
jo
push
hlt
push
dec
hlt
out
add
arpl
js
adc
xchg
repz
mov
xchg
cld
xchg
ret
xor
or
add
xchg
shll
add
push
mov
andb
jl
ret
or
test
add
xchg
dec
cmp
cld
jge
daa
push
hlt
test
jmp
repz
cmp
test
icebp
mov
fimull
pop
mov
push
pop
cld
js
bound
push
loopne
push
es
lret
jb
jne
ds
mov
push
or
xor
ficoml
push
cmpl
jne
scas
mov
jo
add
or
push
testb
inc
ret
loope
jmp
jmp
ljmp
jge
mov
clc
cmp
jl
icebp
dec
or
xchg
je
addr16
cmp
sbb
push
clc
iret
push
inc
imul
cld
pop
popa
sub
jo
push
push
hlt
cmp
push
sbb
xchg
jmp
loop
and
cmpsb
ret
outsl
mov
rorb
loopne
xor
out
push
dec
xor
xor
pop
inc
cmp
or
ret
icebp
mov
test
shr
es
loopne
insb
jae
movb
inc
into
cmpsl
stos
add
pop
movsb
aas
xor
movsb
int
fldenv
lock
mov
inc
pop
push
pop
inc
push
mov
jbe
fistps
cmp
mov
or
xchg
dec
or
stos
push
dec
cs
hlt
aad
add
push
pop
pop
mov
jo
cmp
push
sub
test
lcall
rcrl
rcrl
xchg
push
les
jno
pause
xor
fucomi
mov
and
or
push
aas
xchg
lret
cmpsl
inc
fs
ss
subb
push
jo
push
dec
pop
inc
mov
shlb
jo
je
jp
jmp
arpl
lods
inc
sub
adc
and
inc
daa
push
outsl
stos
clc
mov
test
sbb
add
imul
insl
not
out
popf
mov
imul
jnp
shl
imul
nop
pop
pop
dec
sti
in
mov
pop
lahf
rorl
add
test
loopne
jns
dec
mov
insl
jnp
pop
jmp
mov
loop
testl
cli
add
dec
clc
movsl
loop
fldcw
lret
mov
adc
aaa
fimuls
imul
add
push
add
xchg
mov
outsl
enter
sbb
or
mov
outsl
mov
iret
mov
dec
jmp
shrb
adc
inc
or
jae
iret
repnz
dec
jne
enter
adcb
cld
iret
jl
pop
xchg
rcll
out
inc
cmc
out
aaa
dec
and
sbb
aam
imul
mov
and
add
loope
dec
dec
or
xor
or
scas
add
imul
or
pop
cmp
adc
cmp
scas
mov
cmova
rorb
shr
hlt
sbb
adc
scas
jne
mov
inc
shl
cmpsb
add
sbb
or
fldpi
in
pop
or
add
in
loopne
test
inc
pop
popl
cld
push
and
cwtl
mov
not
jmp
aas
adc
or
or
or
pmullw
out
fwait
or
data16
loope
push
lea
jl
push
lods
sbb
adc
jl
int3
adc
mov
fimuls
pop
jo
or
out
sbb
fdiv
ja
jg
push
jae
xchg
mov
cmp
je
cmp
out
pop
hlt
pushl
or
je
cmp
aam
adc
cmp
je
lock
pushf
test
mov
sub
mov
add
ja
outsl
pop
or
adc
jmp
push
mov
mov
into
add
add
or
adc
cmp
pop
jmp
popf
and
sub
inc
nop
or
xchg
pop
pop
dec
addb
test
pop
call
lock
add
adcl
sub
lcall
xchg
ret
push
lcall
test
push
xchg
add
jg
hlt
and
cmpsl
sub
pusha
cmp
addr16
je
nop
pop
add
outsb
push
pop
cltd
inc
jmp
or
inc
jns
pop
or
sub
data16
test
cmp
arpl
or
andl
xchg
pop
sub
das
add
adc
xlat
push
fildll
mov
lea
outsl
cld
mov
or
add
test
push
pop
loope
mov
enter
fisubrl
pop
inc
loopne
or
or
aaa
aaa
aaa
adc
je
or
fidivrl
test
setne
sub
dec
popf
inc
pop
pop
test
cwtl
xor
sub
push
bnd
es
stos
push
nop
jmp
in
addr16
dec
add
insb
lea
mov
push
pop
xor
ret
push
nop
dec
xchg
or
int3
pop
jmp
fidivl
shl
aas
add
jns
xor
push
mov
ret
mov
pusha
adc
and
pop
pop
add
add
dec
jne
dec
ficompl
push
or
pop
aaa
and
add
inc
test
cmp
push
sbb
push
jl
stos
mov
add
and
adc
inc
dec
jne
sub
fsts
push
nop
lcall
cmp
adc
loope
cmp
push
add
fidivrl
fcoml
or
pushl
cmp
pop
add
inc
call
stos
xor
add
in
out
cli
cmp
add
in
sub
js
xchg
sahf
fwait
adc
popa
push
sub
lods
add
or
pusha
jg
rorb
in
xchg
push
jne
cmpsl
mov
out
sub
lret
adc
adc
and
mov
sbb
mov
xor
les
lret
add
push
xchg
pop
pusha
lret
or
lcall
or
je
int
cld
xor
adc
rcl
rcl
rcl
cmp
jb
les
jne
cmp
jb
sub
sbb
inc
loop
mov
repz
pop
and
repz
add
fs
fisubs
dec
lea
push
scas
icebp
rcrb
loopne
repnz
es
data16
jg
push
jge
mov
testl
jge
jmp
js
pop
aam
sub
inc
ss
mov
inc
add
and
push
call
or
push
ss
xchg
std
push
pop
testb
xchg
add
idiv
pop
and
call
in
int
test
jnp
xor
pop
and
inc
cld
loopne
jge
jge
mov
cmp
fildll
xlat
imul
lock
adc
mov
je
in
pop
jmp
decl
add
dec
loop
jecxz
and
mulb
test
xchg
jge
mov
mov
push
fs
xor
jmp
adc
adc
mov
pusha
hlt
jmp
push
dec
shrl
or
dec
imul
dec
imul
mov
or
jle
xlat
sub
test
aam
loop
ret
mov
add
mov
xchg
jl
inc
movl
sub
lea
test
jbe
lcall
dec
jne
rorb
sub
push
sbbl
cmp
push
xor
clc
jne
pop
cmp
rcll
jo
pop
adc
inc
or
call
push
mov
gs
adc
dec
push
push
lret
clc
push
cmc
pop
cvtps2pd
adc
push
sub
int
std
fadds
or
add
shrb
add
mov
mov
adc
testb
inc
pop
xor
or
ffreep
iret
adcb
and
jae
rcr
sbb
or
je
or
push
mov
ret
out
mov
outsb
sbb
imul
add
mov
jp
sub
aaa
mov
push
xlat
gs
idivb
incl
pop
je
popa
outsb
popa
outsb
bound
lcall
outsl
add
add
inc
jns
insb
push
sub
sub
cmp
jne
insl
or
dec
sub
mov
in
into
push
push
xchg
sbb
mov
inc
push
mov
out
push
jo
jo
out
scas
into
sub
outsb
pop
popa
sub
popa
addr16
pop
push
pushf
xchg
dec
jae
outsb
outsb
rcrb
inc
push
pop
cs
pop
fs
inc
inc
sub
sub
push
ss
pop
and
lss
jp
sbb
adc
xor
insl
sub
jb
dec
add
outsb
xor
cmpsl
testl
inc
jae
push
or
popf
mov
dec
dec
bound
inc
inc
jbe
xchg
pushf
pop
push
inc
mov
aaa
outsl
aaa
and
mov
dec
cmpsb
jae
insb
movsb
cmp
aaa
outsb
outsb
cmpsl
aaa
sbbl
das
pop
push
pop
ja
dec
movw
call
inc
and
setae
icebp
addr16
dec
push
jbe
aad
pop
mov
ja
insb
adc
nop
xor
out
insl
adc
push
push
inc
test
inc
pop
fs
dec
push
cwtl
jne
adc
out
lea
sub
fbld
push
push
icebp
lahf
fidivl
lods
fwait
sub
push
incl
in
sbb
cmpw
jne
mov
es
loope
pop
dec
test
xor
mov
mov
sbb
add
mov
inc
jbe
fisubrl
xchg
inc
aas
xlat
pop
addb
arpl
cmp
mov
popa
and
push
push
sub
fs
dec
jne
sbb
adc
lret
add
pushl
in
adc
sbb
ret
and
jnp
sbb
in
and
sub
mov
loopne
xchg
sbb
dec
push
push
rorl
jne
cmpsl
cwtl
js
inc
push
mov
and
ret
add
ret
add
movsl
push
lea
pop
ret
sbb
or
fldl
cmp
adc
ja
mov
dec
lods
cmp
call
mov
add
shr
cmp
fstl
sbb
dec
jmp
out
jecxz
sbb
jmp
mov
fistps
ljmp
jmp
jbe
les
push
sub
je
insb
add
out
sahf
push
shlb
push
lea
pop
mov
pop
ficoms
hlt
daa
movsb
mov
and
lea
mov
or
pop
in
pushl
inc
pushf
movsl
xor
das
movsb
pushf
inc
icebp
rorb
mov
cmpsl
jg
imul
call
inc
pop
sub
mov
jbe
add
jbe
fst
push
fistps
or
jg
pop
mov
js
cmp
dec
push
push
push
pop
sbb
vcomisd
into
inc
add
xor
dec
sub
rcl
sub
popf
jmp
jo
fdivs
push
test
sbb
rol
into
sbb
ljmp
cli
dec
add
sbb
xchg
pop
test
shr
lock
mov
inc
in
or
cmp
in
mov
dec
dec
clc
insl
cmp
adcb
mov
stos
add
mov
adc
dec
int
decl
rcrl
mov
jl
push
inc
push
mov
mov
clc
jne
loop
push
sub
cvttps2pi
popa
push
push
loope
fiadds
inc
ja
add
adc
jne
lahf
sbb
adc
fstps
dec
inc
pop
jmp
xor
push
mov
imul
adc
je
adc
and
sti
mov
in
xor
fsubs
sahf
push
out
dec
jmp
js
sbb
mov
mov
mov
push
inc
sub
movups
mov
rcrb
adc
jecxz
je
pop
jne
ret
pop
clc
pop
jg
xchg
sti
push
push
clc
subl
mov
cmp
push
mov
sub
xlat
mov
das
push
sbb
cvtdq2ps
in
sub
cmp
outsb
ret
cmp
adc
pop
insb
cmp
fstps
insb
cs
mov
push
js,pt
scas
inc
add
adc
pop
mov
jne
mov
sub
sar
jns
adc
cmpsb
insl
ja
pusha
test
frstor
mov
pop
rolb
add
jbe
mov
inc
cmp
xor
and
push
orl
ret
addr16
cmpsb
mov
int3
xor
cmpb
std
fs
sub
int3
std
test
imul
outsb
sarl
xor
pop
jns
add
push
push
mov
adc
mov
mov
div
test
mov
lods
sbb
cmp
sub
scas
push
mull
loopne
sahf
push
popa
je
test
mov
in
mov
gs
sub
and
mov
push
ja
pop
xchg
jmp
sub
pop
cwtl
mov
mov
sbb
add
and
lea
jbe
xor
xor
cmp
je
leave
mov
pusha
jg
cmp
and
sbb
movsb
nop
or
inc
and
fadd
nop
push
out
out
or
sub
stc
dec
insl
or
add
xor
cmp
test
lea
cmp
clc
and
or
push
push
pop
sbb
ljmp
sbbb
xor
mov
cltd
pop
jno
push
add
lea
xlat
pop
fistps
jns
mov
cmpl
pushw
jmp
mov
popa
rcrb
out
cmp
sbb
fs
outsl
cs
or
test
and
pop
in
scas
mov
push
imul
cmp
adc
jbe
ljmp
jo
sbb
bound
mov
jae
lcall
lea
outsl
jno
jl
adc
sub
orb
pop
jne
movb
and
xor
pop
or
icebp
mov
loopne
fisttpll
test
mov
xor
add
pusha
movsl
cmp
xchg
ret
test
je
jb
xchg
add
test
push
sbb
add
jmp
sti
and
sti
pop
test
jmp
inc
push
push
je
fdivrs
call
mov
sub
call
xor
mov
sub
ret
rol
adc
xor
or
fnsave
xor
jle
leave
mov
pusha
xchg
test
jmp
in
push
mov
dec
in
add
and
loopne
int3
test
sub
dec
arpl
mov
hlt
sbb
sbbb
hlt
mov
pushw
in
dec
add
xchg
or
in
in
pop
adcb
inc
xor
xor
das
xor
push
push
cmp
in
xchg
sbb
adc
inc
mov
pop
lret
inc
cs
adc
add
inc
push
mov
sbb
seto
cld
fcmovb
jmp
jne
in
push
imul
cmp
loop
fdivs
xchg
and
jne
mov
call
cmp
sbb
movl
shrl
push
outsl
iret
call
call
call
xchg
dec
scas
xchg
mov
repnz
cmp
fidivs
mov
mov
fdiv
dec
mov
daa
xor
scas
pop
inc
aam
je
sbb
cwtl
xchg
outsb
repz
mov
cmpsb
mov
hlt
xchg
ret
daa
imul
loopew
pop
inc
lods
fwait
adc
xor
push
xor
test
std
sti
fstpt
mov
xor
fisttpll
add
adc
or
add
mov
stos
fadds
mov
loope
dec
mov
mov
imul
inc
pop
shll
adc
push
mov
dec
pop
sbb
mov
cmpsb
mov
nop
xchg
cmp
stos
xchg
adc
add
xor
inc
pushf
aam
jno
dec
addl
or
adc
inc
lret
in
push
je
out
cmp
add
mul
add
or
pop
inc
ss
push
fs
ja
adc
sbb
add
nop
ss
xchg
sbb
adc
lock
mov
pop
test
push
mov
add
adc
mov
dec
xor
sbb
sub
lock
arpl
push
in
test
and
fidivl
adc
pop
cmp
ja
and
lcall
adc
fs
dec
and
mov
ss
daa
jg
pop
testb
adc
mov
push
loop
cmp
filds
sub
test
les
adc
push
addb
cmp
mov
push
jge
mov
sub
pop
paddd
lock
xor
ja
xchg
jl
mov
push
andw
cld
ja
jb
adc
fbstp
dec
push
lds
and
test
sbb
dec
sbb
stos
push
xor
lea
adc
push
outsl
js
stos
fwait
test
ja
rorb
adc
or
jp
addb
push
imulb
push
lea
mov
aam
xlat
lret
or
cmp
or
and
dec
js
nop
popl
mov
jns
jle
pop
iret
scas
push
mov
add
lds
xor
aas
sub
jp
add
subl
or
lods
and
and
push
or
adc
cld
inc
jl
push
add
iret
sub
dec
aas
in
orl
push
fs
add
cmp
sbb
or
sbb
and
decl
cmp
cmp
jne
add
inc
rcr
jae
adc
movl
or
xor
sub
add
dec
dec
or
dec
mov
int3
scas
orb
or
add
ja
pushf
xor
lds
lcall
pop
in
mov
add
mov
mov
fs
adc
imul
push
les
std
dec
movsl
es
dec
ss
xchg
dec
and
hlt
ret
adc
outsl
out
clc
pop
add
iret
xchg
or
lock
pop
inc
rorb
add
jb
bnd
paddb
hlt
jb
jb
lock
call
jb
or
cmpsb
jo
mov
nop
out
repnz
cmpsl
and
ss
decl
lahf
gs
test
or
jmp
push
mov
push
push
aaa
test
mov
mov
es
add
mov
mov
arpl
push
pop
ret
and
ret
mov
je
enter
imulb
out
inc
mov
adc
cmp
or
sbb
inc
or
mov
cld
popa
dec
inc
pop
jg
mov
pop
cld
jge
push
mov
jecxz
in
inc
and
mov
mov
cmpb
rorb
dec
in
mov
mov
push
cwtl
fmuls
cs
test
adc
loopne
xor
in
enter
call
push
mov
lods
test
insl
mov
cmp
pop
sub
adc
xchg
bound
push
aas
add
fidivs
out
rol
sbbb
js
inc
add
sbb
rolb
inc
adc
sar
aam
clc
shl
add
testb
xchg
rolb
sbb
loopne
cs
in
adcl
mov
jmp
mov
je
clc
cmp
xor
lret
jae
cmp
repnz
add
test
es
popa
cmpl
mov
data16
jge
dec
adc
dec
add
sub
jo
cwtl
hlt
or
push
fstpt
lock
push
ficoms
mov
push
jo
xor
push
outsl
aam
cmp
mov
lock
pushf
mov
adc
adc
lahf
orb
lcall
ljmp
xor
adc
mov
add
adcl
mov
mov
jp
push
xor
xor
lret
movsb
push
add
push
push
fdivrl
inc
add
cwtl
mov
sub
popf
inc
std
add
xchg
pop
ja
and
in
inc
popl
inc
cmp
jbe
ret
push
enter
jno
xchg
pop
jg
cmp
add
xor
mov
and
cmc
enter
das
sbb
negb
adcb
sbb
inc
sbb
push
push
lods
xor
shll
test
and
adc
xchg
cmp
test
jl
dec
add
jns
imul
jae
jnp
inc
or
in
outsb
dec
roll
or
sub
ss
in
or
loopne
pop
mov
ss
fsubp
push
sbb
jae
push
inc
ret
adc
rcpps
sbb
sti
jl
mov
sbb
pop
clc
dec
sub
sti
cld
add
pop
add
add
out
or
les
addb
jmp
mov
fsubr
aaa
push
or
jne
push
shl
enter
jne
push
xor
pushf
push
xor
jne
or
cwtl
push
ret
je
stos
sub
js
orb
pop
jg
cmp
jbe
push
sbb
xchg
mov
ja
xor
outsl
sub
add
xchg
subb
jnp
cld
das
pop
adc
ret
inc
cs
jo
loopne
ret
fcoms
cs
enter
fbld
pop
inc
inc
dec
je
mov
cmp
je
movzbl
adc
add
orb
jmp
push
inc
mov
push
pop
ja
cmc
in
push
adc
jmp
sbb
add
and
dec
dec
jo
mov
add
mov
lret
cmp
rorb
mov
inc
or
push
jne
in
subl
dec
in
and
rclb
bswap
rclb
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
mov
mov
jl
je
or
mov
mov
adc
push
xlat
test
mov
das
adc
inc
inc
fs
inc
pusha
and
xchg
hlt
andl
xchg
into
js
mov
nop
xchg
add
in
insb
je
nop
arpl
xchg
push
jb
cmp
jo
pop
addps
jb
push
push
dec
dec
jb
jb
inc
inc
cmp
jb
jb
xor
sub
jb
jb
sbb
sbbb
jb
add
mov
test
add
pop
mov
mov
mov
bound
pop
pop
loopne
cmp
stos
or
btr
je
sub
icebp
repnz
pushf
pushf
pushf
hlt
cmc
div
pushf
pushf
pushf
pushf
clc
stc
cli
sti
pushf
pushf
pushf
pushf
cld
std
lcall
loop
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
in
in
out
out
pushf
pushf
pushf
pushf
rcl
rcl
pushf
pushf
pushf
pushf
aam
xlat
pushf
pushf
pushf
pushf
fcomp
fcmovu
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
rol
ret
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
int3
int
iret
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
movsb
movsl
cmpsb
cmpsl
pushf
pushf
pushf
pushf
test
stos
stos
pushf
pushf
pushf
pushf
lods
lods
scas
scas
dec
std
pushf
nop
push
mov
fstpt
cmpsl
mov
push
je
add
and
inc
flds
hlt
adc
xlat
std
jmp
mov
push
push
movsb
xor
insb
shlb
lret
in
je
xchg
pop
mov
pushf
js
je
rcrb
and
lret
mov
nop
in
jb
outsb
xchg
xlat
or
cwtl
and
add
pushf
je
pushf
or
shrb
xlat
lods
mov
lret
mov
add
mov
sbb
add
inc
or
dec
loopne
dec
outsb
add
insl
or
jnp
andl
sbbl
inc
sbb
add
sti
add
dec
push
insl
dec
push
inc
add
push
insl
jnp
dec
loop
push
cmpsl
inc
xor
push
and
imul
outsb
lock
and
push
aas
fdivrl
xor
xchg
push
sub
in
or
aas
mov
mov
scas
insb
jp
popl
rcr
sti
outsl
push
adc
cs
sarl
push
fs
xchg
jnp
iret
inc
jbe,pn
cmpsb
push
jb
mov
ret
shll
xor
push
adc
mov
mov
mov
push
arpl
imul
outsl
lahf
psubw
jo
sbb
push
cmc
call
pop
pop
jno
daa
daa
mov
xchg
xchg
setae
xchg
xchg
cwtl
cltd
daa
daa
daa
daa
lcall
daa
sahf
lahf
addb
sti
sub
jae
mov
out
pop
jb
sub
jne
repz
aaa
pusha
scas
push
or
cmp
pop
add
add
xor
cmpl
xchg
jne
pop
js
mov
add
mov
aam
or
push
or
add
add
ja
xor
es
mov
pop
adc
pop
add
mov
mov
push
or
aas
inc
push
add
or
negl
or
adc
dec
add
xchg
shl
cmp
cli
ss
mov
cwtl
sbb
push
cwtl
cs
push
jo
add
test
xor
lcall
push
push
rolb
loopne
je
mov
and
xor
inc
push
push
add
jo
addb
add
sar
rolb
add
mov
jle
mov
xor
inc
add
pusha
add
sbbb
add
cltd
sub
add
add
add
mov
mov
add
add
xor
js
add
dec
add
pusha
pop
adc
das
rolb
addb
add
fldt
in
add
mov
add
ljmp
lock
add
add
add
add
add
add
mov
add
add
add
push
loopne
lock
mov
adc
add
mov
add
add
outsl
clc
push
add
add
adc
push
cld
mov
rolb
inc
in
add
add
fldenv
or
push
add
and
push
and
push
aad
push
rolb
add
stos
stos
cmp
push
jmp
add
jnp
popf
ret
push
adc
ja
ret
add
cltd
cmp
inc
ss
add
adc
dec
shll
inc
data16
cmp
add
add
sub
in
sub
inc
adcb
faddl
nop
outsb
scas
add
out
mov
add
add
push
xor
inc
add
ja
adc
add
pop
es
sub
mov
xor
jl
push
loopne
das
add
add
inc
sub
test
loopne
ret
jnp
and
in
xchg
pusha
push
dec
push
push
mov
ds
out
mov
pop
add
add
fdivp
xchg
outsl
mov
push
pusha
push
pop
jo
addb
push
mov
imul
pop
loopne
lock
mov
stc
and
xor
inc
push
pop
pusha
pop
jo
push
addb
pop
mov
shlb
sub
incl
ljmp
adc
and
xor
inc
or
jo
orb
loope
sahf
shr
or
or
or
push
out
aas
jnp
or
or
or
or
or
push
or
and
jbe
jo
xor
mov
xchg
rdpmc
cwtl
or
xchg
or
add
mov
adc
lock
add
adc
ret
nop
fwait
sub
or
or
mov
cs
addb
push
mov
or
stc
fmulp
outsl
es
or
or
adc
orl
loopne
lahf
outsb
adc
add
pusha
or
movsb
push
sub
sahf
or
add
cmpsl
mov
or
fwait
cmpsb
or
adc
lock
or
inc
or
or
mov
mov
aas
jecxz
or
or
or
dec
sbb
shlb
out
loopne
pop
dec
scas
mov
add
jbe
in
adc
and
not
flds
push
or
or
nop
or
mov
rorb
push
push
and
xor
inc
push
push
push
pusha
push
jo
orb
nop
push
mov
push
rorb
loopne
lock
add
sbb
push
lar
wrmsr
cmovo
out
push
punpcklbw
jo
mov
pcmpeqb
nop
dec
mov
iret
jnp
imul
bswap
xchg
testl
sti
mov
sbb
add
dec
cmpsl
insb
mov
ja
dec
sbb
mov
push
inc
mov
mov
adcb
mov
je
or
popf
incb
mov
lahf
push
fcmovne
loopne,pt
lock
add
push
adc
dec
and
je
jo
outsb
aas
push
repz
jno
add
cltd
scas
adc
aaa
cmp
adc
xor
addl
mov
adc
add
mov
sub
sarl
adc
incl
jmp
imul
adc
and
xor
cmp
cmpsl
and
fildl
lea
in
cmp
pop
dec
stc
fnstsw
add
jo
pop
roll
inc
cltd
push
dec
cmp
aaa
sbb
sbb
divps
ud0
adc
lahf
adc
adc
adc
aaa
adc
adc
adc
jge
pop
or
pusha
or
adc
pop
jne
push
or
adc
shlb
add
adc
fnstsw
adc
adc
adc
into
ja
call
adc
adc
adc
adc
push
aas
pusha
adc
add
in
and
add
pop
mov
nop
mov
add
in
outsl
or
push
or
rolb
lock
pop
imul
adc
push
fstpl
cmp
push
arpl
and
adc
inc
xor
adc
jo
adcb
adc
push
adc
out
push
rolb
scas
adc
adc
mov
in
push
fwait
cwtl
sbb
mov
daa
dec
je
stos
jmp
push
cmpsb
ss
push
scas
out
ja
push
divb
fidivs
cmp
push
xor
mov
fsubs
or
add
fwait
rorb
push
iret
movl
jp
xorb
sti
pop
and
es
xor
jg
pop
pusha
pop
mov
push
push
pusha
aas
add
or
inc
stos
push
mov
or
mov
pop
sub
inc
push
das
add
sub
add
sbb
sti
add
inc
loopne
js
add
nop
pop
mov
pop
jg
mov
or
pop
mov
mov
lock
push
hlt
adc
and
xor
sbb
push
sbb
push
sbb
sbb
pusha
sbb
or
int
jg
sbb
es
add
add
jmp
push
xor
dec
rcrb
loopne
add
lock
ss
sbb
sbb
pop
adc
cld
enter
xor
xchg
or
sbb
add
popa
ljmp
jle
sbb
jo
sbb
sbb
sbb
and
add
add
iret
iret
dec
cmp
sub
add
out
or
aas
mov
add
lds
jnp,pt
xor
add
sbb
adc
aaa
pop
imul
add
or
bound
pop
push
adc
push
sbb
sbb
jnp
pop
add
sbb
sbb
sbb
pcmpgtd
adc
ret
fiaddl
sbb
or
mov
adc
add
or
mov
movsl
sbb
pop
dec
inc
add
sub
add
or
mulb
cmp
out
cmpsb
popf
pop
add
pop
pop
push
add
push
xor
lcall
ficoml
scas
add
cmp
sub
add
addr16
sub
xlat
aaa
sbb
or
xchg
ficoml
sub
jle
add
add
add
or
or
lds
add
and
shrl
call
in
inc
cmpsl
or
mov
fldcw
jg
in
pop
sbb
dec
icebp
adc
iretw
pushf
clts
push
shll
jg
imul
cmp
push
imul
add
jg
in
rolb
insl
fstp
pop
ficompl
xchg
aas
sub
sbb
mov
loop
add
mov
fwait
jne
test
scas
sub
lret
push
mov
pop
jo
sub
popa
jg
adc
pop
sbb
mov
pop
sbb
jle
dec
or
cmp
add
pop
mov
popa
or
jmp
mov
add
adc
lds
or
lahf
lock
roll
mov
lods
add
sbb
inc
dec
add
mov
push
cmp
outsb
or
or
shrl
push
pop
in
out
in
mov
pop
sbb
jecxz
add
insb
dec
lock
mov
xchg
and
adc
add
test
cmp
push
push
pop
lahf
aas
lahf
xor
outsl
add
scas
pusha
sbb
pusha
mov
cmpsb
mov
imul
sbbl
dec
mov
mov
jne
mov
cmp
add
jne
mov
jge
or
mov
int
adc
mov
push
and
fcmovnu
inc
daa
mov
mov
mov
mov
fldl
stc
push
rolb
lgs
cmp
push
adc
add
mov
cmp
vmread
add
mov
jo
mov
pop
nop
xchg
and
jae
sbb
and
and
cmp
rcrb
or
arpl
dec
pop
pop
das
in
inc
push
add
adc
sbb
cmp
adc
sbb
sub
jl
notb
add
adc
xchg
pop
sub
add
add
jmp
fcmove
jmp
fsubl
cmp
mov
into
inc
cmp
sbb
mov
divl
mov
pop
push
mov
js
sub
and
push
sbb
sub
pop
push
sbb
lahf
mov
insl
xor
ret
cwtl
outsb
rcrl
dec
aaa
jno
enter
or
mov
fcomps
and
fwait
xchg
or
jo
lods
pusha
and
aaa
pop
ja
sbb
adc
adc
mov
aaa
outsl
aad
jp
adc
data16
filds
dec
mov
push
jg
add
int3
lods
fisttps
sub
and
lret
aas
or
pop
mov
sub
mov
pop
sbb
pop
decl
fstpl
mov
add
mov
adc
push
adc
cmp
sbb
sbb
adc
sbb
sbb
hlt
insl
inc
xchg
test
in
xor
outsb
push
adc
xor
in
add
mov
test
or
add
sbb
cmp
ret
add
ret
inc
xor
mov
add
mov
mov
and
push
add
or
jnp
xchg
pop
pop
stos
or
push
push
daa
cmp
sub
lds
inc
pop
mov
or
and
mov
addr16
aas
sbb
mov
and
add
pop
push
fidivl
push
add
fildl
or
pop
mov
arpl
sub
or
aas
sbb
mov
out
and
sbb
gs
fimull
jno
sub
adc
js
int3
or
add
add
dec
sbb
ja
push
xor
adcl
mov
pop
inc
jmp
push
sub
sbb
push
xor
add
and
mov
sbb
test
pushl
cmp
or
sbb
adc
mov
or
sub
or
mov
mov
xor
adc
push
mov
int
xor
cmc
aad
das
xchg
push
mov
mov
icebp
or
fnstcw
rcr
lcall
or
or
push
jp
popf
flds
sbb
jae
xchg
scas
jo
and
jg
movsl
sub
pop
push
mov
les
jmp
mov
iret
mov
andl
mov
pop
shl
or
fwait
test
mov
or
call
or
mov
imul
lds
cmp
rcll
adc
mov
push
lcall
sbb
adc
incl
add
lahf
mov
ja
test
pop
mov
pop
cmp
sbb
cli
xchg
cmp
jb
adc
cmc
adc
movsl
mov
mov
xlat
mov
push
lods
and
push
aaa
push
aas
mov
fxch
loope
xor
cmp
daa
pop
std
adc
pop
jecxz
mov
inc
fwait
aas
xchg
jg
mov
cmp
or
aad
lods
lahf
xchg
rolb
mov
pop
add
daa
sgdtl
push
lea
shrl
inc
pop
das
lea
movsb
push
pusha
std
subb
leave
add
add
sub
ficomps
test
insl
insl
insl
stc
dec
scas
sub
cmpsl
inc
jnp
mov
popa
push
adc
addr16
sbb
in
mov
sbb
lret
lods
popa
jno
pop
notl
inc
fs
fisubs
xorl
fiadds
and
and
cwtl
sub
bound
add
ss
or
ds
and
cli
add
adc
or
jnp
outsl
adc
repnz
mov
pusha
or
adc
or
pop
adc
rolb
arpl
aaa
add
or
dec
sub
and
rorl
ja
add
inc
cmp
add
dec
enter
add
add
insl
aad
adc
xor
aam
in
push
mov
pop
push
pusha
and
pop
pop
test
daa
sub
cmp
fiadds
inc
fwait
push
fisttps
imul
aas
adc
push
enter
loopne
mov
lock
sbb
subb
add
cmp
cmp
xchg
xor
and
ret
jp
add
rclb
cmpsl
std
mov
loopne
pop
lock
loope
add
inc
add
inc
aad
dec
ret
adc
xchg
add
push
adc
add
nop
push
mov
pop
shl
xor
mov
das
dec
lock
ja
xchg
add
add
push
in
push
fwait
jo
mov
mov
xchg
add
or
mov
mov
mov
in
fs
invd
adc
in
in
sbb
and
push
inc
pop
jg
sbbb
adc
add
scas
and
rorb
lahf
rol
add
xor
sub
cmp
inc
jne
das
call
outsl
add
xchg
mov
cmp
clc
aas
xchg
xchg
xchg
xchg
add
adc
arpl
and
movq
in
ss
xor
inc
jb
in
dec
dec
adcb
in
je
lahf
mov
add
das
xor
xor
inc
push
mov
mov
lds
mov
pop
and
aas
mov
cmp
lds
aas
lcall
imul
push
aad
in
push
add
xor
das
leave
ud0
fcomi
fnstcw
xor
jecxz
jmp
and
lds
mov
stos
xchg
fcmovnb
sub
dec
adc
in
aas
outsl
aas
es
pusha
and
pop
sub
outsb
jg
add
push
or
clc
and
mov
ljmp
mov
sub
sub
mov
pop
sub
sub
aam
lahf
movaps
adc
out
shlb
mov
lahf
mov
add
iret
sub
inc
add
aad
push
xor
pop
inc
adc
xchg
dec
outsb
daa
inc
xor
dec
dec
dec
dec
cmp
cmp
mov
aas
pop
inc
mov
cmp
addb
jmp
mov
fildl
inc
inc
pop
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
dec
adc
dec
push
xorl
sub
dec
out
jg
subb
add
jns
out
imul
jle
rolb
mov
aas
bound
dec
jo
scas
enter
jo
pop
mov
mov
pop
dec
push
and
jg
mov
in
aas
dec
into
jne
pop
icebp
repz
stc
cmc
loope
adc
mov
xchg
dec
jg
rorb
and
ficoml
jg
ret
out
rorl
aad
pop
sub
inc
jb
ds
pop
incl
mov
aas
loopne
aam
pop
das
pop
adc
pop
sub
shrb
add
outsl
loopne
stos
jge
mov
push
push
scas
das
add
dec
cmp
pop
adc
fistps
jg
push
xor
and
aas
mov
jg
or
movsl
xchg
lahf
adc
push
xor
lods
scas
aas
insb
sub
fistpll
inc
insb
inc
lahf
mov
jg
ud1
push
sbb
push
sub
or
aas
movsb
mov
pop
movq
dec
xor
mov
aas
and
jg
mov
inc
adc
ljmp
orb
adc
lods
lahf
aas
xchg
mov
inc
and
and
mov
fisttpl
mov
mov
add
mov
fildll
adc
adc
or
jg
xchg
out
rclb
aam
push
adc
sub
fcoms
sub
sub
pop
and
push
push
push
xor
or
or
or
hlt
xor
xchg
filds
xor
gs
imul
push
push
mov
push
or
or
dec
jbe
data16
outsl
ja
sbb
fstpt
jo
pop
insb
sbb
gs
xchg
push
cltd
cmp
or
lds
push
imul
jb
insb
gs
fldt
je
insb
inc
unpcklps
imul
push
popa
dec
popa
cmp
cltd
mov
xor
inc
popa
js
test
in
adc
inc
js
outsb
popa
mov
jae
icebp
imul
adc
movhps
dec
or
jae
insb
leave
cmp
sub
insl
dec
outsl
xor
jo
or
push
xchg
ss
jo
negb
mul
push
add
fadds
cs
or
push
insb
and
xor
push
inc
es
xchg
or
shl
or
adc
outsl
pop
push
inc
mov
mov
out
mov
mov
sbb
into
cwtl
or
cmp
mov
nop
adc
cs
iret
leave
rolb
leave
cmp
jo
push
dec
fisubs
cld
pop
push
push
jns,pn
iret
leave
jo
insb
inc
push
test
out
in
cmp
mov
popf
cmp
and
cmp
repnz
sahf
xchg
js
mov
inc
mov
add
lock
mov
cs
loopne
push
fwait
loope
dec
adc
fdivrs
xchg
addr16
push
sarb
int3
loopne,pn
stc
mov
je
les
inc
in
repnz
adc
mov
pop
gs
mov
repnz
jbe
dec
lods
mov
iret
lods
dec
pop
movsb
adc
dec
in
push
data16
pushf
inc
pop
cwtl
sbb
iret
enter
inc
nop
and
ja
pop
jl,pt
scas
jl
mov
fdivrl
test
and
mov
es
pop
aam
enter
inc
mov
roll
add
sahf
jb
outsb
daa
iret
adc
add
or
pop
repz
adc
pop
popf
inc
jge
jmp
dec
inc
je
stos
xchg
add
pop
pop
or
inc
jnp
xor
outsl
sysexit
outsb
scas
std
add
mov
push
jb
das
in
sub
sub
ljmp
cmpsb
jnp
insb
mov
or
and
or
insl
gs
icebp
push
aam
add
dec
aam
mov
out
mov
inc
push
js
mov
leave
leave
enter
aaa
test
jo
fs
cmp
add
adc
lea
sbb
ljmp
push
repnz
or
loopne
lds
add
fisttpl
js
dec
in
push
mov
fwait
mov
cmp
sub
inc
lea
and
jo
add
or
fistpl
adc
dec
lcall
test
cltd
pop
insb
add
add
mov
cmpb
mov
aas
fiaddl
jbe
inc
add
sub
out
or
leave
repz
inc
or
clc
or
mov
mov
xchg
jb
repz
popf
xlat
pop
aaa
mov
psubusw
outsl
add
insl
pop
in
dec
aam
mov
cmp
push
add
adc
jnp
push
cmp
or
and
or
sbb
jp
jge
lods
rclb
sub
jg
mov
insl
add
cmp
lods
cmp
cmp
shll
stc
inc
lcall
pop
pop
repz
ret
cmpsl
fstl
add
fcoms
mov
add
inc
dec
inc
sbb
scas
call
pushf
mov
jb
test
stc
sub
js
inc
and
pusha
mov
mov
inc
inc
arpl
imul
outsl
push
add
cmp
xor
adc
mov
xchg
sbb
jb
mov
cmp
cmp
loopne
cmp
rol
pop
sbb
jp
push
iret
fbld
idiv
addl
inc
inc
dec
xor
pop
shrl
shlb
lcall
push
dec
jae
clc
enter
pushf
or
je
jae
sbb
mov
into
mov
in
lods
push
xchg
outsl
mov
fsubrl
jge
add
enter
or
and
mov
dec
add
or
jb
nop
daa
or
add
repz
dec
cmp
inc
repz
inc
mov
or
pop
or
jbe
movl
adc
dec
shlb
mov
add
adc
sub
rolb
mov
add
and
adc
inc
popa
jae
lahf
dec
pop
bound
push
xor
cmpsl
in
inc
lds
and
in
push
popa
imul
sub
push
inc
ficompl
push
push
push
push
loopne
push
sysret
sub
mov
pop
in
aas
ds
xchg
xchg
fdivr
adc
push
ret
roll
xor
ja
pop
incl
dec
or
xor
fwait
push
repnz
nop
mov
mov
inc
sbb
test
mov
jb
aad
mov
or
jge
lcall
jl
mov
add
pop
test
mov
scas
dec
cmp
pop
or
push
mov
push
jns
inc
int
jo
loopne
out
lds
out
stos
orb
push
mov
mull
mov
das
ja
and
sbb
inc
and
iret
or
or
out
pop
xchg
dec
pushf
pop
add
bound
xchg
mov
push
inc
mov
mov
popa
jo
sub
andb
mov
inc
inc
outsl
push
xor
pop
xorl
incb
pop
dec
sub
inc
in
aas
add
ljmp
xor
in
sti
add
and
xor
adc
sub
adc
pop
pop
fldenv
and
dec
add
mov
cmp
or
inc
push
data16
sbb
cmpl
stc
dec
add
mov
xchg
mov
movsb
fndisi(8087
hlt
and
mov
loopne
mov
pop
pop
sbb
rcrb
inc
gs
outsb
adc
mov
sbb
negb
adc
mov
pop
xor
daa
in
inc
jno
inc
outsl
in
xchg
adc
inc
ds
lret
icebp
sbb
or
and
lods
pop
sbb
test
aam
fdivl
in
loop
inc
or
mov
mov
aam
adc
mov
dec
inc
jl
dec
pushf
stos
in
xchg
inc
test
inc
fstps
adc
or
mov
and
mov
and
dec
inc
inc
sub
sbb
jb
inc
mov
inc
movl
sbb
push
int3
dec
push
hlt
in
in
aam
inc
aaa
push
sarl
push
movl
lock
je
dec
xchg
inc
xchg
sbb
jb
inc
addb
mov
movl
pop
push
lret
xchg
adc
mov
dec
cmp
shrl
sub
mov
cwtl
cmp
pop
and
or
xchg
daa
daa
pop
rol
loopne
rclb
adc
lods
or
jp
mov
inc
add
push
in
mov
dec
jbe
mov
movl
pop
push
push
fists
adc
dec
sbb
pop
xchg
mov
mov
and
sub
and
movsl
negb
loopne
into
dec
sbb
xor
adc
movl
sbb
in
dec
rcr
inc
dec
pcmpeqd
and
loop
and
pop
and
or
adc
and
dec
sbb
and
adcl
pusha
xor
pop
sub
adc
in
pusha
add
rorb
in
push
push
movl
pusha
push
dec
dec
insb
dec
nop
stos
in
xchg
dec
je
jp
add
pusha
rolb
or
mov
iret
pop
sub
sbb
sbb
nopl
ret
icebp
sub
loopne
mov
sbb
test
decb
or
fwait
bswap
dec
scas
les
pop
and
or
decb
fnsetpm(287
inc
dec
dec
push
sbb
imul
dec
iret
pop
sub
push
gs
push
inc
push
add
fisubs
cvtpi2ps
sbb
insb
xchg
or
pop
sub
add
int3
pop
lock
push
sbbb
iret
pop
sub
push
pop
jl
mov
test
jmp
cmpsl
push
pop
jne
inc
enter
dec
push
sub
pop
mov
xor
push
mov
xor
pusha
push
inc
push
inc
push
or
lods
dec
jle
fstl
pop
xor
es
outsl
xchg
pushf
mov
push
jo
lods
in
mov
pop
sbb
jb
leave
inc
aas
mov
sub
cmp
sarl
nop
or
loopne
push
mov
inc
mov
push
and
add
inc
test
out
inc
inc
xchg
adc
inc
push
push
jne
fstpl
sbb
and
ss
xor
add
push
xor
insl
pop
sub
jmp
jo
adc
push
sub
mov
cmc
adc
xor
lret
mov
push
push
adc
dec
incl
inc
jge
aaa
xor
cmp
xor
or
in
push
pushf
inc
pop
leave
xor
xor
and
repnz
cmp
mov
xchg
fs
andnps
mov
or
adc
cmp
cmp
sbb
repz
push
shlb
push
push
js
lods
and
push
aas
push
mov
cmp
push
inc
lahf
ret
iret
mov
sub
xor
inc
inc
and
pusha
fldl
or
mov
stc
xor
jo
or
mov
in
or
je
loopne
pusha
or
sbb
add
or
or
dec
and
sbb
pusha
xchg
jbe
leave
cmp
and
mov
xor
mov
push
mov
insl
fcmovnu
imul
jb
or
or
fnsave
popa
adc
xor
jne
mov
insl
ret
lds
jbe
jmp
ja
addr16
bound
add
imul
sbb
mov
push
or
mov
push
and
push
pusha
push
mov
scas
jp
fisttpll
leave
out
xchg
or
dec
vfmsub213ps
cs
lods
push
pop
add
ss
call
pop
test
sub
aaa
add
and
add
pop
add
les
xchg
lea
daa
aam
enter
sub
shr
div
mov
push
mov
add
jg
outsl
sbb
xor
les
iret
fdivr
aam
test
mov
xorb
shlb
enter
push
fdivs
test
mov
mov
jnp
aam
sbb
fdivr
push
push
test
jp
lea
fistpl
push
clc
pop
shr
add
jle
mov
mov
push
mov
sbb
aas
pushf
fmuls
cwtl
add
imulb
sub
aam
xchg
sbb
jnp
cli
inc
hlt
pop
scas
jmp
add
lretw
push
jnp
nop
notl
add
mov
fucom
sbb
test
cmp
fisubs
enter
dec
adcb
arpl
add
xor
cld
insl
jne
hlt
nop
push
js
mov
inc
je
addr16
icebp
mov
daa
leave
adc
and
sbb
dec
imul
and
jecxz
push
mov
push
cmp
sbb
enter
lock
sahf
xlat
dec
add
push
arpl
ss
and
mov
into
or
inc
les
popf
adc
enter
call
roll
pop
movb
dec
arpl
push
in
xor
xchg
sub
fldt
js
imul
fs
adc
insb
popa
pop
mov
mov
add
aaa
movsb
test
ds
faddl
repnz
sub
mov
or
repnz
lret
adc
and
in
cltd
addr16
sbb
pop
push
add
mov
rclb
jge
out
push
inc
lret
mov
sar
pop
add
lock
jb
push
adc
loopne
lea
int
mov
lds
mov
push
push
push
fstps
or
out
cmp
lock
jge
jne
mov
outsb
dec
mov
dec
cmp
push
inc
xchg
mov
cli
je
inc
les
push
out
or
outsl
cmp
nop
outsb
inc
xchg
push
movzbl
lods
adc
pushf
pushf
pop
imul
mov
stc
and
xchg
sbb
and
andb
test
sub
lock
les
insb
test
je
mov
or
mov
scas
lods
subl
pop
mov
jnp
cmp
pop
cli
inc
mov
mov
mov
dec
and
arpl
dec
adc
cmp
jne
xchg
nop
clc
inc
inc
sbb
add
loope
push
jmp
push
lret
mov
mov
pusha
bound
jecxz
mov
aaa
leave
fsubrs
push
jp
mov
ret
add
in
pop
cs
cmp
adc
add
fldl
mov
sbb
rolb
xor
lahf
pop
out
sbb
push
or
lock
mov
add
fs
mov
and
add
call
fadd
cs
push
push
add
pop
add
cld
sub
jg
jmp
jp
add
lea
add
pop
je
mov
lcall
cmp
je
data16
and
cmp
inc
popa
jl
or
add
pop
sub
sti
sbb
jmp
sub
jne
pushf
lea
int
and
scas
cmpsb
icebp
jp
loop
jmp
jno
movsl
jg
pop
data16
mov
pop
pop
iret
orb
lcall
out
adc
ss
or
call
adc
sahf
js
push
cmpsl
test
add
xchg
mov
addl
repz
and
push
ja
movsb
mov
in
es
dec
por
inc
cmp
xor
repz
jge
sbb
mov
dec
pop
notl
push
mov
mov
sub
inc
jp
fsubrs
inc
fistpll
fldl
mov
fldpi
add
rcll
cvtps2pd
xchg
or
push
mov
mov
xor
mov
loopne
push
call
xor
cmp
ds
jne
imul
jbe
cmp
fisttpl
aaa
insb
add
mov
out
ss
ja
adc
sbb
or
push
jne
mov
inc
scas
in
or
data16
mov
shll
mov
mov
jbe
call
jle
fdivl
push
inc
inc
ucomiss
loope
add
sarl
lcall
jg
or
dec
and
fwait
daa
jns
xchg
cwtl
add
jmp
mov
mov
add
pop
repz
and
add
or
pop
sub
add
mov
xchg
sti
sbb
push
rolb
andl
sub
lds
incb
jle
push
mov
clc
inc
jle
imul
sub
xor
add
sti
mov
mov
pop
jg
or
xor
or
mov
mov
jmp
loopne
xor
testl
fsub
cmpb
dec
sbb
jge
call
cmpl
jne
add
stos
inc
and
push
push
or
fsubl
cld
lret
mov
fistps
inc
div
jb
repz
add
std
add
adc
and
xchg
add
outsl
jb
mov
lahf
cld
stc
leave
loopne
cmpsl
jb
add
mov
mov
jg
out
pop
mov
mov
stos
mov
or
add
pop
jle
add
jmp
mov
lea
add
std
and
das
por
call
jb
lcall
mov
jmp
addl
iret
fmulp
sub
or
sbb
inc
call
lahf
mov
adc
data16
dec
adc
push
lock
push
lock
jne
push
xor
rorl
add
movsb
out
jnp
dec
adc
inc
adc
xor
aas
add
aas
cmpsl
adc
in
push
or
pop
mov
or
pop
pop
pusha
aam
jmp
cs
cltd
ljmp
popa
cmp
and
test
xor
aas
call
and
icebp
aaa
insl
and
pop
push
loopne
mov
mov
mov
shl
fsubrl
enter
push
fcmove
sbbb
repnz
push
in
fistl
pushf
imul
cmpsb
fsubrl
rorb
in
or
cmpsl
or
mov
andb
add
jp
jbe
xchg
dec
faddl
fidivl
pusha
ja
or
xor
repnz
push
leave
test
add
rcrl
push
xor
jge
clc
imull
sbb
call
es
sub
sbb
and
clc
jge
adc
dec
insl
dec
push
rolb
neg
xchg
in
shll
int3
pop
mov
inc
add
and
rcrb
movsb
add
mov
pop
xor
add
sub
add
shrd
rcrl
push
fcoml
jmp
inc
xlat
sub
cmp
ja
cmp
jge
rorb
jne
sub
lahf
pop
rolb
xchg
mov
and
fcmovnu
lods
arpl
clc
ljmp
dec
jne
sub
add
adc
sahf
pusha
ret
rorb
call
loopne
cmpsb
rorl
pop
rclb
or
mov
xor
sti
mov
sub
push
mov
adcb
lea
lret
rclb
movsb
jle
pop
lock
add
mov
push
sub
iret
outsb
js
mov
mov
add
fmuls
push
jae
jnp
mov
add
mov
mov
and
add
mov
inc
mov
or
jnp
cwtl
xchg
aam
imul
mov
mov
popf
jne
push
test
mov
push
xchg
icebp
insb
add
ficoms
add
push
pop
adc
cmp
add
mov
and
insl
add
xor
xor
push
call
push
push
sbb
in
push
adc
das
add
js
insb
jae
out
fsubl
cmp
push
xchg
dec
jl
inc
cs
js
mov
push
push
xchg
ds
sub
add
or
cwtl
enter
mov
push
imul
fisubs
sbb
mov
outsb
cld
jle
mov
adc
fcomps
std
pop
pop
fstsw
sahf
setne
jmp
cmp
dec
std
insl
fwait
sbb
mov
add
lods
shlb
inc
add
add
dec
lret
sbb
xor
add
xchg
xor
icebp
sub
iret
js
add
movsb
adc
adc
and
add
mov
fucomi
xchg
lods
add
daa
in
mov
push
je
sbb
rorl
sbb
or
xlat
clc
sahf
xor
xor
adc
das
inc
in
push
push
or
ljmp
sbb
sbb
sub
pop
pop
push
and
ds
adc
xchg
xchg
ror
je
add
mov
aaa
and
ss
pop
or
addr16
ljmp
pop
dec
dec
sub
fsubs
xchg
sbb
push
aad
mov
repnz
insl
inc
xchg
sbb
hlt
aad
add
fistps
test
pusha
test
mov
inc
ja
dec
fs
mov
das
call
or
mov
mov
push
add
lret
add
add
push
dec
pop
in
and
int3
mov
or
or
or
jmp
or
xor
jmp
movl
iret
test
ss
lods
pop
adc
insl
inc
int3
test
jne
ds
mov
dec
and
sti
cmp
adc
inc
enter
cmp
scas
jno
neg
sti
clc
push
inc
hlt
or
xchg
dec
inc
loopne
or
cmpsb
push
popa
gs
and
enter
push
or
push
cmp
mov
cs
daa
sub
adc
jnp
movsl
fmul
repz
cmp
adc
call
push
sbb
inc
test
std
jne
push
pop
call
inc
ds
xchg
cs
shrb
and
jb
insl
jmp
adc
movb
rcll
sub
push
pop
test
movsb
phaddsw
jnp
add
xor
mov
loope
sbb
xchg
in
outsl
xchg
inc
push
and
test
jg
test
je
or
dec
dec
jnp
loopne
mov
push
gs
and
push
in
dec
hlt
pop
loopne
fdivrp
add
ja
mov
pop
mov
sbb
push
or
pusha
enter
mov
lock
mov
imul
data16
cwtl
nop
stc
mov
sub
dec
and
cmc
add
das
mov
inc
mov
jo
pop
push
lock
test
or
test
push
mov
cmp
jns
pop
inc
lock
or
jl
data16
sub
mov
adc
mov
mov
jmp
addr16
loope
pop
pop
pop
test
inc
xor
mov
and
cmovl
pop
sbb
add
std
add
inc
lahf
lods
lock
mov
xchg
jl
cmp
out
mov
rcl
add
add
adc
pusha
jnp
fwait
cmp
add
shl
pop
nop
mov
mov
outsl
fsubrs
push
sub
cmp
sub
xchg
pop
outsl
movsb
xchg
mov
sbb
push
notl
jbe
mov
test
loop
std
sbb
ret
jle
outsl
sub
adc
dec
add
shlb
shr
bound
mov
shlb
cmpl
sbb
adc
xchg
decb
or
and
je
popa
test
push
pop
clc
add
add
mov
test
push
cld
adc
jnp
dec
movsb
and
jmp
in
mov
data16
push
jge
inc
jb
or
push
add
into
loop
setl
xor
or
xchg
and
aas
push
push
fwait
push
inc
loopne
or
cmp
test
and
jo
movsb
and
fisttpll
mov
fdivrl
pop
push
pushfw
ds
shlb
inc
aam
pop
loopne
sbb
ljmp
mov
lahf
je
mov
jl
and
pusha
popf
loope
pop
jne
adc
mov
pop
rolb
sbb
dec
add
rorl
insb
mov
mov
fs
adc
add
je
push
jne
repz
cmp
or
int3
adc
and
loope
inc
loopne
ss
add
stc
or
push
adc
cmc
adc
xchg
int3
clc
imul
inc
loopne
jmp
in
sbb
out
das
es
sub
xlat
add
and
out
je
int3
imul
cltd
xchg
mov
lods
and
jne
xor
add
scas
cld
addr16
jmp
push
and
and
push
jne
fmulp
or
int
pop
sbb
loop
cli
inc
mov
leave
xor
adc
inc
adc
adc
leave
cmp
add
mov
rcl
and
aaa
adc
ucomiss
or
dec
jne
stos
dec
inc
inc
outsl
push
or
es
xor
push
push
hlt
clc
cld
push
je
dec
cmp
insl
clc
pop
cmp
sub
adcb
mov
add
lock
adc
sub
add
xchg
lods
je
adc
sbbb
lret
ret
pop
in
add
xchg
xchg
mov
pop
idivl
add
mov
imul
pop
rcll
jmp
or
dec
xor
mov
jmp
pop
enter
jne
fisubl
je
dec
xor
icebp
jne
lret
or
stc
add
sahf
or
or
push
lcall
and
cmp
jae
jo
xor
divb
push
shrl
ret
scas
add
jb
insb
jo
addr16
mov
pop
pop
xchg
pop
xchg
push
fcmovnbe
mov
adc
adc
push
scas
add
dec
push
or
dec
jmp
imul
cmc
imul
call
lcall
cmp
push
sysret
outsl
pop
out
jmp
shrl
pop
lock
push
clc
adc
or
mov
inc
pop
outsl
mov
sbb
pop
add
lock
test
jle
cs
movsl
int
mov
push
not
mov
jnp
les
sub
jbe
push
lea
xlat
xchg
testl
push
mov
cmp
shll
inc
fcompl
pop
add
pop
xchg
lahf
testb
inc
je
mov
sub
nop
hlt
add
cs
xor
sbb
push
sub
and
mov
jb
mov
mov
je
add
dec
jne
xchg
mov
rcl
sub
mov
pusha
ljmp
jne
dec
mov
ret
repz
sbb
bound
sub
lods
rolb
inc
or
xchg
add
sahf
dec
pop
or
xor
inc
mov
push
adc
or
inc
push
dec
mov
insb
dec
adc
dec
mov
add
sub
xor
rclb
push
lahf
or
push
ljmp
call
or
fiadds
mov
mov
pop
push
out
outsl
xchg
lret
push
pop
push
or
dec
xorb
add
cwtl
inc
sub
lds
push
cmpl
jge
and
loopne
inc
dec
mov
hlt
fists
or
idiv
verr
jmp
xchg
dec
test
jnp
mov
ds
ret
dec
cmp
jg
jmp
add
pop
inc
pusha
lods
popf
mov
popa
cmp
jb
mov
int3
mov
jle
mov
inc
jl
fimull
hlt
or
add
sub
mov
xor
inc
cld
mov
cmp
cli
push
je
ret
in
clc
ficomps
pushl
mov
lea
cmp
jle
push
add
fwait
cmc
pop
cmc
aas
hlt
cmp
sub
lock
jmp
stos
in
inc
add
test
cs
in
add
xlat
sbb
ljmp
and
mov
or
xor
jmp
jle
pop
inc
mov
sarb
repz
in
jo
loopne
inc
and
sbb
add
push
dec
js
subl
dec
mov
aas
add
js
insl
xor
sbb
pushf
mov
cmc
push
pop
push
adc
jge
jne
popf
sar
adc
inc
cmpl
test
inc
inc
jge
lahf
imul
cmp
and
dec
add
shl
jg
cld
sub
jl
inc
xchg
fstpt
mov
sub
movsb
jge
mov
jle
lock
mov
or
add
in
orb
lock
ja
mov
fildl
je
adc
lret
arpl
pop
lcall
and
sub
call
sbb
jp
xchg
pop
rcr
or
shrb
jbe
sub
xor
int3
or
sbb
pop
fadds
or
or
cmp
push
subb
testb
jbe
mov
sbb
ret
notl
dec
mov
sub
jne
shrb
fs
outsb
adc
shll
popf
mov
mov
pop
adcl
insl
xchg
std
cmp
add
mov
pop
int3
orb
shlb
mov
or
jne
cmp
je
mov
xchg
nop
orb
stc
jns
shll
push
fcom
fadds
xchg
int
loope
incl
mov
jl
sub
mov
cmp
push
faddl
push
jne
fdivrs
inc
rcr
push
sub
fdiv
inc
mov
jmp
sbb
add
fnstsw
clc
sbb
sub
jne
cmp
jne
and
add
dec
xchg
add
and
inc
push
sbb
adc
int3
mov
xor
bound
lret
add
cld
adc
decl
ret
jmp
adc
das
xchg
cs
push
xchg
or
push
loope
cli
pop
sbb
and
mov
jne
cmp
jl
mov
cmp
jl
shlb
xor
mov
jge
mov
xor
xor
mov
negl
inc
jmp
enter
xchg
xor
and
movsl
pop
adc
cmp
push
movsb
or
pop
lret
pop
add
xchg
cld
mov
xchg
push
jmp
sahf
cltd
push
subb
jbe
cmpl
push
jbe
fdivp
scas
aaa
fwait
push
leave
push
mov
inc
das
or
cmpsl
push
cmp
and
pop
aam
pop
shlb
adc
or
jge
js
mov
push
add
stc
or
je
add
sub
mov
cld
jmp
lea
xor
sbb
adcb
in
rolb
ljmp
mov
sbb
lret
icebp
inc
cli
push
jne
cmpb
adc
mov
mov
mov
inc
sub
inc
adcl
js
inc
lret
movl
fimull
js
sbb
sbb
inc
dec
shlb
inc
add
out
sar
or
add
xor
in
rorl
sarl
pop
pop
cmp
js
mov
inc
iret
jbe
xor
pop
jmp
jmp
jns
popf
push
adc
inc
dec
push
inc
and
cs
add
test
loopne
sub
popa
aad
mov
addl
lahf
sub
jl
sbbb
xchg
pop
or
mov
jae
inc
jae
mov
inc
inc
sub
cs
inc
cmp
popf
aaa
push
popf
sub
test
sub
cs
mov
jg
je
jmp
sahf
or
push
movsl
xchg
or
mov
insl
mov
jecxz
ss
loop
add
and
fs
sbb
inc
xchg
push
js
cwtl
popf
sahf
push
mov
add
mov
push
mov
mov
in
push
mov
adc
push
push
aas
push
adc
and
adcb
mov
cmp
jmp
adcl
jns
lret
filds
xchg
add
cli
inc
pop
mov
nop
rolb
push
aam
dec
or
adc
sbb
xchg
inc
and
les
cmp
lock
jns
push
xor
stos
addb
dec
or
shrb
fistpll
or
jge
mov
neg
jmp
or
je
mov
inc
xchg
push
push
mov
mov
int3
or
dec
lret
mov
inc
dec
or
pop
mov
jmp
pop
std
cmp
rorb
pop
cmpsl
aam
sub
popa
cli
adc
jecxz
xchg
mov
popf
xchg
xchg
mov
sbb
mov
fcompl
aam
sub
out
mov
xor
jge
jp
fldcw
adc
jle
sub
aad
sbb
dec
jge
add
or
aas
int3
clc
movsb
jp,pn
repnz
sub
loopne
jae
mov
es
sub
or
dec
cli
xchg
jne
mov
jmp
lea
movzbl
cmp
je
loope
or
mov
add
les
or
jle
pop
lock
call
push
mov
int
xlat
cmp
dec
add
inc
or
xchg
inc
lods
or
mov
dec
xor
ret
dec
fsubs
popf
movsb
andb
out
ret
ret
incl
sarb
adc
cmp
jl
mov
nop
je
and
xor
fdivrs
adc
fldenv
mov
xlat
dec
add
sahf
and
cmc
adc
sbb
loopne
push
stos
xor
sbb
jmp
fbstp
add
scas
stos
dec
and
ljmp
xor
divl
add
leave
mov
mov
mov
sarl
add
jbe
jns
addl
divl
mov
mov
fisttpl
je
mov
dec
mov
fnstsw
mov
inc
mov
je
dec
jne
loop
faddp
add
and
in
and
inc
shr
inc
jecxz
lea
inc
cs
aaa
jno
jne
ret
stos
adc
dec
in
add
pop
ja
sbb
mov
out
aaa
adc
lea
sub
pop
popf
add
and
cmp
adc
ja
dec
aaa
adc
xchg
jmp
lods
int3
pop
pop
leave
stos
and
inc
loop
ret
jp
mov
push
jnp
dec
cld
outsb
and
inc
add
and
mov
sti
or
adc
and
sub
inc
sub
mov
sub
sbb
and
jnp
jnp
sub
sub
repz
fs
xor
sub
xor
or
fcoms
dec
add
pop
cmp
mov
jnp
jl
adc
inc
ja
inc
cmpsb
dec
ret
je
cmp
inc
jne
testl
ja
inc
or
inc
mov
inc
loop
rcrl
fldt
ljmp
xor
and
rolb
dec
insl
lahf
pop
sub
fabs
jp
cmc
rcrl
test
pop
pop
frndint
dec
fldt
fstsw
ljmp
mulb
or
mov
sar
iret
sub
jne
lea
mov
inc
sub
mov
mov
das
lret
in
into
xor
mov
jbe
jge
jns
jg
mov
cmp
adc
cmp
jae
cmpb
cmp
xor
or
cmp
mov
cmp
jmp
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
or
mov
push
shr
mov
mov
ret
pop
out
adc
bound
cmp
rclb
jecxz
inc
or
je
add
push
xchg
ficompl
or
lock
add
pop
mov
push
inc
sub
repnz
or
dec
add
lds
dec
fildll
cli
mov
cmp
int
clc
fidivl
fwait
or
sbb
push
sub
call
jne
loopne
pcmpeqw
dec
jne
jmp
mov
add
stos
push
cmp
aas
and
inc
ljmp
dec
adc
sub
movb
cmpb
divl
add
mov
mov
xchg
push
scas
add
cmpb
dec
mov
hlt
fstpt
test
mov
out
fimull
aad
mov
push
sub
clc
out
icebp
xor
int3
xor
loope
outsl
sub
inc
divb
and
pop
mov
and
jne
xor
aaa
inc
pop
add
imul
lahf
fnstenv
mov
push
add
mov
ret
add
loopne
lock
mov
fistpll
jmp
fstpt
mov
test
andb
aas
insl
fisubl
jo
lods
data16
cmp
xor
sub
shl
mov
pminub
sub
mov
inc
mov
or
pusha
imul
imul
loopne
test
xorb
add
imul
dec
xchg
jo
arpl
lea
mov
push
sahf
subb
adc
dec
push
orb
or
add
add
push
mov
cmpsb
enter
push
ret
clc
cltd
push
gs
fstpt
add
cmpsl
jle
push
or
inc
fadds
dec
test
pop
mov
fldt
sub
xchg
ja
and
dec
push
out
adc
aas
fstpl
fwait
mov
bound
out
inc
clc
orl
inc
fs
cmpsb
pusha
out
cld
repz
std
data16
leave
jle
xor
out
setno
popa
jns
add
and
test
jg
test
cmp
cld
sub
add
outsb
cmp
popa
ljmp
adc
movups
sub
xchg
scas
aaa
xor
pop
pop
dec
adc
mov
xor
jmp
adc
adc
push
sarb
pop
mov
pop
adc
jl
loopne
mov
or
adc
or
or
and
xor
and
dec
mov
adc
les
and
scas
enter
lret
or
add
fcomi
stos
xchg
and
ss
add
fdivs
push
fistpll
dec
inc
inc
adc
jbe
or
aaa
int
mov
clc
sbb
or
cmp
push
stc
dec
andw
jae
loopne
rolb
jo
shrb
imul
test
notb
dec
sbb
xchg
adcb
mov
fwait
mov
pop
inc
jno
add
pop
mov
enter
into
jno
jl
dec
mov
shl
cltd
outsl
testb
mov
push
cmp
cmpsb
lret
out
add
add
inc
loopne
sbb
enter
add
dec
dec
je
and
flds
imulb
push
add
adc
mov
push
add
cli
aad
mov
push
je
add
les
add
mov
sbb
lcall
stos
addb
pusha
outsl
ja
and
jb
or
jb
inc
out
fistps
cmp
ja
adc
jg
xor
push
frstor
pop
dec
incb
jne
sub
cld
pop
pop
enter
aas
cltd
idiv
imul
jo
shrl
xor
add
cli
add
repnz
mov
fildl
add
pusha
ret
or
mov
ret
std
add
sub
push
dec
imul
push
rcrb
call
dec
in
test
push
stos
push
push
clc
hlt
or
xchg
adcl
push
andl
aaa
adc
mov
xchg
cmp
sarl
add
addl
dec
loop
mov
and
je
jg
mov
cmp
add
or
dec
lock
insl
xor
sub
imul
fcoms
or
insl
movzww
add
sbb
sub
test
inc
pop
inc
sub
ds
inc
or
jbe
jbe
dec
fsubrl
pop
rorl
or
jp
sbb
fistps
sbb
clc
sub
add
push
mov
xchg
push
push
ja
push
cmp
sub
push
xchg
subb
xor
mov
cmp
pop
test
mov
pop
push
flds
push
rorb
cmp
xchg
fcoms
cmpsl
xor
add
dec
adc
daa
add
pop
add
pop
loope
lret
jge
mov
cld
std
je
mov
xor
xor
repnz
lock
movb
iret
add
inc
mov
add
pop
stc
push
pop
mov
jne
gs
icebp
xor
rolb
ret
dec
lret
cmp
das
cmp
jb
mov
xchg
add
jbe
fistpl
mov
out
sbb
test
aaa
push
push
ret
in
out
xchg
test
pop
aaa
xchg
test
add
rclb
aam
cmp
push
fsubrs
not
xor
fmul
enter
or
popf
cwtl
lret
add
push
imul
call
mov
ljmp
je
mov
sub
outsb
rclb
fcom
mov
xor
add
jecxz
sub
sbb
pop
push
lea
or
popa
scas
mov
cld
cmpsl
imul
cmpsb
outsl
loop
push
jl
xchg
dec
int3
jge
idiv
add
gs
in
rolb
es
sub
add
xchg
inc
in
inc
in
adc
in
cli
pop
dec
cmp
jg
jl
inc
push
push
shr
mov
js
loope
mov
mov
mov
pop
cwtl
cmp
add
add
scas
cmp
xor
dec
lret
or
mov
jae
adc
enter
fistpll
jno
cmp
push
dec
mov
aad
or
sub
mov
xor
inc
pop
inc
xchg
add
dec
mov
pop
add
cmpsb
adc
ja
mov
sbb
pusha
vfmadd213ps
mov
psubusw
imul
in
xchg
add
sub
mov
cwtl
mov
pop
jl
prefetchw
icebp
and
je
and
lock
das
cmp
jne
mov
xor
dec
sbb
or
cmp
jecxz
xchg
jns
aaa
pop
sub
daa
das
outsl
mov
rol
add
sbb
mov
push
dec
add
popf
or
and
push
std
pop
pop
incl
clc
loopne
add
mov
xchg
and
ljmp
fdivs
movups
mov
and
xor
push
push
mov
sub
pop
insb
imul
mov
pop
test
cltd
sbb
jne
dec
jne
mov
popl
xor
ja
or
inc
mov
jns
je
push
or
mov
cwtl
add
pop
add
or
or
movsl
jnp
scas
or
ds
roll
jae
int
fwait
adc
popf
dec
jnp
out
push
lcall
mov
mov
add
sbb
je
and
mov
or
jno
ret
bound
mov
add
xchg
mov
iret
clc
fcomps
in
sub
cmp
pop
jo
pop
mov
jmp
sbb
adc
inc
cld
mov
mov
aas
push
loope
clc
xchg
dec
je
dec
xchg
mov
out
sbb
cli
cli
pop
loopne
xchg
push
imul
add
pushf
add
pop
pop
cmp
inc
or
mov
adc
mov
or
jo
ds
xor
cmp
or
jnp
inc
mov
lock
pop
dec
jg
je
or
je
or
push
jmp
mov
popa
je
sub
jmp
cmpb
dec
mov
pop
pop
adc
mov
sbb
add
loope
add
bound
jmp
push
int3
xor
pop
loopne
pop
gs
in
stos
je
mov
xchg
add
cmp
or
jmp
sbb
test
or
xchg
xchg
cmp
or
popa
imulb
jle
fs
push
add
push
and
sbb
xchg
dec
jb
out
add
push
mov
adc
sub
xorb
pop
andl
loop
or
xchg
arpl
jb
mov
add
add
scas
mov
inc
jns
sbb
adc
in
cltd
in
sbb
sub
add
outsb
cmpsl
lahf
cmp
sbb
orb
movl
test
pop
arpl
or
sbb
loopne
neg
mov
add
imul
dec
stos
arpl
out
fld
sub
push
testb
xchg
push
xchg
sub
in
shll
mov
and
or
pop
adc
cmp
add
test
mov
xorl
cmp
jne
mov
es
mov
popa
aaa
insb
pop
sbb
adc
mov
push
sbb
push
cmpsl
or
inc
out
inc
outsb
push
push
or
mov
out
lar
push
or
gs
push
adc
and
add
data16
pop
stos
xchg
test
add
cld
in
or
mov
mov
xor
lock
mov
sbb
mov
push
mov
xchg
or
push
incl
testl
ss
fadd
clc
jl
inc
xor
mov
or
sub
pop
movsb
das
inc
dec
jne
sbb
nop
adc
imul
push
inc
fcoml
inc
pop
mov
xchg
ret
xchg
inc
aaa
cmp
pop
sub
xor
inc
daa
adc
es
hlt
sbb
inc
movsl
popa
shlb
mov
xlat
les
push
xchg
in
fildl
pop
xchg
ljmp
cmpsb
or
xor
aam
mov
pop
dec
jb
jne
clc
sbb
jle
shlb
jns
jp
mov
pop
mov
addb
xor
inc
divl
inc
pop
push
cmp
movsl
call
adc
lahf
xchg
stos
inc
mov
xchg
dec
rep
inc
test
test
inc
lods
xor
cmp
jne
cmp
js
mov
pop
mov
ret
fsubl
hlt
out
addb
mov
pop
inc
and
mov
das
push
cmp
lock
jne
incl
je
movsl
add
mov
jmp
dec
clc
xchg
pusha
or
pop
dec
mov
or
je
jmp
mov
sbb
adc
sub
cmp
clc
jle
xor
rorb
mov
cmpsl
push
pop
divl
pop
or
jbe
sub
jg
psubd
shll
bound
mov
adc
inc
clc
jmp
mov
add
mov
adc
or
sub
mov
pop
les
lock
sub
mov
jl
and
and
jne
leave
cmpsb
add
and
xlat
cmp
cmp
jg
lcall
sbb
xor
sub
mov
mov
add
fs
add
int
cltd
add
notl
aas
inc
pop
stos
decl
gs
lcall
aam
fcomp
js
in
push
int3
imul
or
test
adc
inc
mov
sbb
shl
add
sarb
inc
jmp
outsb
pusha
addr16
lods
xchg
jo
sub
xchg
in
or
ret
cltd
js
fldenv
push
scas
mov
in
xor
je
push
or
enter
jo
cmp
or
xorl
fidivrs
lahf
mov
sub
push
and
xchg
add
or
mov
nop
and
sub
jb
daa
loopne
jmp
into
into
sub
in
ljmp
mov
mov
out
clc
jmp
inc
mov
lock
adc
test
gs
in
lods
ja
add
jle
push
sbb
xchg
and
push
jmp
or
mov
ja
in
add
sub
xchg
push
lock
out
ja
pusha
das
ljmp
add
mov
enter
push
fs
jnp
cwtl
repnz
shll
add
rcll
fwait
push
xor
mov
test
pusha
sub
sub
inc
sbb
aaa
punpcklwd
hlt
cmp
add
add
push
and
mov
cmp
push
xchg
adc
dec
mov
imul
dec
sti
add
je
dec
aam
dec
dec
xorb
sub
lock
fmull
push
call
mov
pop
cld
repz
scas
test
in
movsb
and
pop
xchg
in
xchg
add
push
imul
mov
dec
or
dec
adc
xchg
dec
rcrb
mov
and
jp
pop
sub
arpl
nop
fadds
mov
cmpsb
or
xchg
icebp
mov
pop
xchg
cmp
pop
notb
hlt
repnz
or
in
jae
notb
push
inc
jae
cmp
adc
orl
jge
sub
jns
mov
or
push
add
xor
sbb
out
jp
sub
idiv
mov
dec
sti
lock
mov
ds
add
xchg
push
data16
inc
jge
cmpsb
push
pop
outsl
rorb
xchg
push
fisubl
adc
dec
adc
addr16
pop
popf
gs
push
sbb
rolb
jle
das
mov
jp
and
and
mov
pop
jge
int
sbb
or
or
ja
push
or
lods
cmc
xor
mov
dec
push
or
fistpl
test
lock
dec
sub
jle
sub
iret
fstp
or
jge
call
sbb
mov
sahf
or
out
pop
sub
ds
in
rorb
sbb
arpl
sti
sti
jne
jmp
pop
mov
das
and
jecxz
out
sub
mov
in
test
insb
and
out
ret
push
sub
push
gs
pop
and
pop
jo
popl
sbb
or
es
and
imulb
sub
mov
fcomps
sti
pop
dec
jb
pop
fcompl
nop
outsl
xor
pop
fs
out
fisttpll
mov
mov
push
dec
mov
sbb
cmpsl
lcall
scas
add
pop
or
push
mov
dec
ret
xchg
std
cmpsb
pop
push
mov
movsl
clc
xor
stos
lods
jmp
test
addr16
pop
mov
mov
in
int3
pop
ja
add
push
pop
loope
mov
sub
fimuls
pop
nop
cmpsl
push
push
add
mov
test
idivl
pop
movsb
mov
enter
sub
packuswb
adc
jmp
add
push
daa
xor
push
push
addl
cmpsb
pop
mov
out
imul
dec
imul
int3
pop
adc
sahf
shlb
adc
push
mov
adc
popf
aam
or
inc
push
xor
or
cmp
in
jge
pop
enter
inc
call
push
call
push
sbb
sahf
les
stc
sub
push
sbb
add
jo
sbb
xchg
loopne
pop
cltd
movsb
loopne
addb
fwait
inc
sub
aam
dec
fsubl
or
cmp
push
imul
fmuls
dec
fsubs
dec
aam
mov
sub
sbb
fmuls
rclb
xchg
add
and
testb
mov
les
jl
and
pop
repnz
dec
aas
ret
adc
enter
hlt
mov
or
sub
andb
or
sbb
add
jb
add
xor
das
xchg
int
jne
data16
cmp
cmpl
xor
or
enter
mov
push
insl
fs
mov
out
insl
add
inc
call
or
outsb
popa
inc
daa
jo
pop
push
pop
lods
push
mov
inc
or
sbb
mov
and
inc
mov
daa
or
add
mov
lock
test
push
jl
xchg
mov
sbb
shll
add
xor
clc
pop
test
test
sub
mov
push
xor
rcrb
xchg
mov
adc
xlat
insl
mov
or
mov
pop
jne
add
mov
add
les
out
outsl
or
lock
ret
jmp
push
pop
clc
add
fadds
add
add
test
dec
lea
xlat
movsb
je
mulb
inc
lock
aaa
lcall
sbb
std
pop
xchg
decb
jne
test
mov
adcl
sbb
add
aaa
imul
mov
and
in
dec
or
push
inc
dec
mov
clc
adc
and
mov
inc
hlt
cmp
dec
xchg
xchg
or
hlt
ret
sbb
and
pop
inc
inc
pop
sub
pop
sbbb
sub
mov
shlb
and
into
aam
sarl
jge
pop
lds
mov
pop
or
cmp
pushf
in
push
mov
xchg
pop
shl
cmp
inc
sahf
dec
xchg
cmp
and
popa
xchg
cmp
imul
mov
xor
or
mov
mov
std
out
jb
adc
jnp
sub
or
je
jmp
xor
gs
mov
pop
jmp
adc
adc
cmc
mov
push
call
dec
mov
leave
jmp
adc
sbbb
push
push
mov
cmpsb
sti
popa
gs
insl
mov
loop
cmp
repz
jmp
mov
iret
in
testb
call
pop
rolb
mov
or
sub
popa
loope
add
sbb
pop
add
push
inc
sahf
and
test
cwtl
sub
insb
jmp
insl
push
pop
je
pop
pop
imul
leave
or
push
pop
jge
sbb
xlat
fisubrl
cmpl
ljmp
adcl
xor
add
add
inc
xchg
mov
pop
aaa
popa
sbb
inc
mov
hlt
pop
mov
pop
je
inc
cmpl
andb
dec
gs
rol
sbb
mov
test
loopne
sub
or
jl
inc
and
cmp
or
xchg
mov
in
out
in
sti
mov
into
shrl
cwtl
or
cld
ss
cmpsl
clc
push
clc
jae
push
push
inc
push
push
mov
cmpb
enter
call
add
xchg
sbb
and
add
pushf
cmpsl
aaa
pop
sub
cmp
pop
test
stc
mov
lock
mov
push
sarb
enter
das
adc
lods
cmpl
fwait
mov
sti
sbb
dec
xchg
and
imul
repz
in
test
popf
lods
cmc
int3
sub
pop
das
fxch
push
add
rolb
out
std
ja
dec
xchg
fiaddl
add
in
mov
sub
dec
cmp
cmp
pop
inc
add
in
cmp
pop
into
or
daa
cs
call
xchg
sbbb
je
inc
add
dec
cmpsb
push
sub
adc
mov
aaa
inc
pushf
and
movsb
lock
faddp
adc
and
lods
or
push
mov
add
scas
jl
mov
clc
mov
lea
movsb
ja
mov
jg
int3
sysret
out
lods
jo
xlat
mov
adc
in
mov
outsl
add
cs
dec
leave
and
xor
or
or
mov
mov
jl
rol
aas
dec
and
mov
dec
cmp
or
push
sbb
lahf
mov
xchg
xrelease
inc
add
cwtl
push
and
and
shr
pusha
mov
adc
clc
lods
bound
push
push
xchg
les
xor
enter
dec
xor
jle
mov
test
nop
inc
fldl
lea
jecxz
xchg
and
mov
ljmp
gs
addb
mov
or
pushf
xor
mov
mov
out
negb
mov
xchg
idivb
dec
dec
imul
les
std
mov
sbb
mov
outsl
mov
fdiv
pop
fdivl
push
xor
and
cmp
test
jns
nop
push
imul
es
sbb
inc
mov
jmp
leave
push
shll
daa
sarb
sub
pop
shll
xlat
and
xor
nop
inc
or
cmpsb
inc
mov
xchg
xor
rcll
arpl
repnz
mov
sub
rorb
shlb
lahf
test
icebp
mov
or
call
adcb
mov
push
sub
bound
xor
adc
lea
enter
add
or
mov
cmp
push
mov
inc
roll
lods
jle
lea
adc
push
in
aad
or
mull
test
push
or
sbb
push
push
push
rorb
xchg
ret
add
jmp
stos
and
scas
add
or
mov
call
call
dec
or
dec
testb
les
or
sub
push
sub
testb
xchg
std
adcl
sbb
ss
in
adc
imul
cmc
pop
sbbl
gs
fsubrp
add
pop
mov
cmp
cmpsl
inc
cmp
mov
and
fldt
xor
ljmp
push
jg
cmp
sbb
mov
sbb
iret
movb
xchg
inc
jmp
mov
aas
mov
movsb
push
loopne
fadds
cmp
sbb
mov
out
jp
dec
je
push
adc
ljmp
adc
cmp
add
imul
fiadds
rorb
adc
clc
aam
sub
je
jecxz
jp
mov
mov
or
adc
xchg
nop
out
loopne
sub
loope
mov
mov
sti
aaa
movsl
xor
cmp
movb
mov
or
pop
lcall
call
inc
mov
mov
dec
cwtl
in
jmp
orb
or
pop
inc
loop
mov
and
add
les
shlb
das
fdivp
les
lods
nop
call
cmp
cmp
je
jmp
mov
je
jmp
xor
pop
push
jmp
and
add
add
push
pop
or
or
mov
mov
hlt
mov
adc
pop
cmpsl
push
xchg
test
xchg
jb
xor
mov
lods
std
and
mov
cld
cmpl
nop
jmp
pop
mov
or
pop
inc
loopne
mov
dec
add
or
dec
dec
and
pusha
mov
addb
add
cli
mov
sbb
push
lods
xchg
mov
lods
mov
repz
and
jnp
jae
adc
push
enter
lods
rol
int3
rcrb
inc
xchg
movsb
adc
shrb
dec
pusha
pop
pop
ds
sub
pushf
jae
mov
add
enter
pop
mov
iret
and
xlat
pop
mov
pop
add
push
dec
es
lahf
leave
sub
cmp
inc
test
xor
adc
adcb
sub
or
dec
or
fcomi
dec
ja
outsb
sub
dec
repz
xchg
mov
xchg
in
xchg
push
lock
inc
movl
jbe
push
insl
inc
sbb
xor
push
sub
push
sub
fsubs
loope
sahf
mov
adcb
sbb
push
cmc
mov
insb
push
cmp
in
inc
mov
dec
aas
cmpl
mov
mov
inc
adc
pop
insb
enter
mov
mov
and
jae
pop
xor
clc
ret
inc
int3
and
add
push
out
sbb
add
shl
add
or
es
in
aaa
inc
cmp
adc
loopne
dec
faddl
negb
aam
adc
adc
stos
out
pop
out
in
mov
aaa
or
mov
test
inc
push
rorb
adc
mov
xchg
xor
cmp
pushf
out
mov
icebp
dec
nop
loop
iret
cmp
int3
cmp
jne
mov
pusha
add
flds
and
adc
cmp
fdivs
xchg
ds
mov
jp
cmp
add
add
sbb
jne
in
ss
sub
pop
ret
add
dec
jne
add
xorl
cmp
stos
outsb
mov
shlb
lea
lcall
dec
sbb
push
mov
mov
or
lcall
je
cmp
fcoms
fwait
and
iret
mov
xchg
jne
or
pop
mov
dec
add
ret
jle
enter
pushf
jmp
subb
mov
rorl
xor
syscall
mov
adc
pop
mov
xchg
add
gs
and
lods
xor
jmp
mov
jne
mov
andb
fldenv
test
gs
lock
loope
mov
lock
dec
sub
push
mov
or
lret
lods
ret
fists
out
enter
adc
mov
dec
xchg
adc
ret
mov
pop
adc
lods
stos
test
mov
addps
cmp
popf
inc
lcall
idivb
adc
push
adc
into
test
inc
jmp
push
shrl
adc
or
push
shl
out
stc
push
cmp
inc
cmp
mov
or
mov
add
fildll
jns
sahf
addr16
and
sbb
cmp
data16
add
imul
movaps
jne
fadds
xchg
add
nop
cwtl
fldt
test
xchg
stc
adc
vpcmpeqw
sub
jmp
and
jl
inc
pop
adc
dec
pop
inc
ret
repnz
fildll
bound
fdivr
xlat
cmp
push
cmp
movl
and
clc
cwtl
clc
xchg
and
cmp
pop
cli
mov
jge
dec
dec
mov
adc
cmp
jl
or
sbb
sbbl
mov
jb
cmp
aaa
je
sbb
out
sub
icebp
fisttpl
cmp
dec
outsb
rcll
mov
add
pop
jge
ret
hlt
sahf
pop
je
lock
cld
mov
adc
pop
dec
push
arpl
pop
test
cs
push
dec
mov
pop
jge
fsubrp
mov
sbb
repz
ja
sarl
mov
stc
lock
mov
xchg
sbb
dec
push
or
fdivl
sub
push
push
adc
jb
rorb
imul
or
hlt
add
lods
ret
fs
ret
push
add
in
shlb
or
pop
adc
jecxz
sub
xchg
lret
xchg
or
aaa
jl
jns
aam
add
and
mov
xchg
push
sub
filds
sarl
jg
adc
popf
arpl
push
and
adc
out
in
inc
dec
mov
sub
push
loope
inc
push
sarl
cmp
hlt
and
dec
mov
dec
dec
rcl
pop
xor
subl
lret
lods
add
adc
shlb
outsl
sub
fdivs
inc
inc
ja
inc
repnz
nop
push
js
mov
mov
pop
fimuls
in
push
dec
test
mov
sub
aaa
push
or
sub
adc
ss
pop
js
rolb
sbb
lret
jne
fnstsw
or
or
push
pop
jne
fwait
cmp
mov
push
lods
movl
or
xchg
and
mov
rolb
add
add
popf
lea
mov
cmpsb
shr
lret
push
rclb
call
int3
or
inc
or
add
rcrl
sbbb
fisubrs
and
aas
pop
pop
adc
mov
scas
pop
xlat
and
jg
sbb
test
lea
enter
inc
sbb
je
ss
mov
mov
dec
in
data16
mov
inc
stc
enter
mov
inc
push
xor
sbb
add
mov
je
js
lods
mov
add
xchg
inc
cs
or
in
lret
or
adc
sbb
jb
pop
mov
or
sbb
test
dec
dec
lret
notl
mov
mov
sbb
mov
enter
mov
js
xor
add
mov
xor
xor
push
cld
mov
or
lds
bound
dec
adc
push
test
sahf
xor
mov
add
in
ss
push
push
es
pop
mov
inc
out
outsb
popf
pop
pop
add
jb
jbe
jo
rol
push
es
xor
sub
adc
mov
push
incb
or
jae
sti
out
andl
cmp
xchg
pop
pop
ss
add
sti
or
js
enter
aam
add
push
js
pop
push
mov
stos
inc
add
mov
mov
push
dec
xchg
test
into
es
cmp
adc
nop
popf
fneni(8087
sarl
repz
sarb
or
in
lods
lcall
or
jbe
sub
add
int3
mov
scas
and
or
clc
jg
inc
ss
shr
or
mov
or
xor
or
or
push
ljmp
mov
mov
decl
push
or
rol
scas
sub
add
cmp
ss
xchg
into
or
or
dec
mov
popl
ret
inc
jmp
pop
pop
pop
ret
pop
push
imul
jo
or
or
dec
add
enter
rep
sbb
test
cmp
and
mov
mov
js
push
inc
and
in
jbe
jmp
adc
dec
xchg
pushf
adc
call
outsl
mov
cmp
cs
cmpsb
rolb
cmp
adc
dec
adc
rol
push
shrl
dec
cmp
insb
fiaddl
lea
push
inc
ret
inc
jg
lds
fucomi
sahf
xor
add
inc
cmp
int
mov
popf
sub
dec
mov
lods
jmp
mov
adc
inc
in
dec
mov
rcll
push
icebp
clc
aam
pop
outsl
cmpl
sbb
in
dec
sbb
nop
shlb
mov
cltd
inc
adc
in
jp
lahf
aad
in
pop
lahf
xlat
aaa
mov
loope
push
imul
fwait
cmp
fstps
pop
jo
in
pop
leave
and
add
stos
adc
or
movsl
int
nop
mov
daa
int
add
sbb
xlat
in
int
sbb
dec
push
test
push
imul
scas
push
adc
adc
test
incl
or
add
push
shrb
xor
lea
cmpsl
mov
sahf
imull
jae
inc
gs
add
loopne
ffree
arpl
stos
jne
scas
ret
adc
pop
cwtl
add
lods
jg
out
sbb
nop
cwtl
pop
cmp
lcall
jle
mov
popa
popa
pop
dec
mov
popa
or
fnstenv
enter
adc
arpl
adc
addb
sub
jge
jecxz
dec
lret
dec
pop
xor
xchg
fcoms
pop
jle
dec
cmpsl
popa
mov
or
inc
xchg
mov
test
xchg
in
xchg
adc
insb
push
aas
mov
push
repnz
sahf
sub
int
mov
mov
lock
push
in
mov
inc
or
lods
push
jg
push
aam
cmpsb
and
mov
add
sarb
jl
imul
sub
adc
out
add
or
rol
mov
es
imulb
sbb
xor
pop
pop
pop
ja
sub
pop
inc
pop
or
sub
add
pop
cwtl
push
sbb
adcb
push
ja
cs
and
jecxz
loopne
mov
ds
popa
test
dec
xchg
enter
jecxz
add
pop
fisubrs
aam
rclb
push
jbe
adc
in
mov
cmp
call
rolb
das
add
sub
xchg
hlt
cmp
rolb
pusha
mov
xchg
adc
and
or
lret
and
push
inc
mov
jo
aas
sub
cwtl
rolb
mov
mov
mov
jg
adc
jle
jle
add
cmp
je
add
pop
adc
cmpsb
jnp
add
aaa
inc
popa
sarl
lock
xor
mov
dec
call
sbb
jne
or
cmp
add
mov
pop
sbbl
mov
int
and
cmp
or
lret
daa
pop
testb
sbbb
pop
cmpl
int3
or
sbb
add
cmp
faddl
adc
arpl
popa
mov
sub
add
push
outsb
ds
adc
inc
xor
insb
in
repnz
test
les
xchg
addr16
lock
inc
js
mov
inc
or
sbb
mov
push
mov
fsubrs
jl
fmulp
rcl
mov
lea
jo
call
ja
dec
sahf
insb
test
shlb
popf
cmp
pop
pusha
movsb
pop
mov
out
pop
push
lods
push
inc
int3
push
cs
cwtl
dec
push
or
dec
add
out
in
inc
inc
mov
ja
pushf
cmp
cmp
mov
js
das
pop
cmp
iret
sub
mov
out
jo
sbb
jl
ja
dec
adc
pop
adc
or
jns
iret
or
or
add
daa
out
in
add
mov
add
and
out
popf
clc
push
mov
test
cmp
iret
lock
in
inc
cmp
sahf
fwait
xor
nop
pop
in
mov
dec
mov
lock
loope
sbb
test
push
in
aad
ja
int3
movsb
loopne
xlat
cmp
enter
in
mov
dec
mov
mov
jbe
mov
cmp
xchg
or
xchg
adc
cld
cmp
loope
or
subl
pop
mov
cmpb
or
sbb
cwtl
sub
sub
pop
inc
pop
pusha
enter
andb
fstps
add
add
add
pop
fcomp
orl
dec
push
ss
leave
sub
hlt
lock
mov
pop
sub
push
ret
inc
lret
sub
das
pop
rorl
add
adc
sti
jne
clc
add
add
and
fcoml
adc
jne
pop
or
sbb
xchg
rcl
push
loop
mov
mov
xchg
adc
in
pop
loopne
sbb
in
sbb
in
test
xlat
nop
cmp
mov
mov
jle
shrl
filds
mov
sbb
jecxz
test
jo
xor
xor
jns
jg
out
add
sub
jmp
int
mov
in
clc
add
push
ficomps
in
movd
cmc
sbb
adc
add
fs
loop
dec
clc
jg
sbb
das
inc
push
adc
in
sbb
and
add
and
inc
outsb
jmp
mov
cmp
inc
push
shll
jmp
repnz
add
in
je
test
adc
pop
xor
in
and
aam
inc
or
cwtl
inc
add
mov
fistpl
fidivrs
ret
in
or
call
in
sub
fs
dec
or
push
and
sbb
ja
shrb
cmp
jg
scas
add
xchg
sbb
pop
add
loope
loop
aad
pop
mov
lcall
in
leave
dec
cmp
push
and
dec
xor
inc
xchg
dec
xor
pusha
dec
push
and
push
js
leave
and
push
sbbb
xchg
dec
mov
dec
in
pusha
mov
dec
in
mov
in
leave
mov
mov
xor
jecxz
je
xor
and
lock
xor
jl
in
jmp
and
test
cltd
in
pop
in
mov
shrb
cwtl
outsl
ds
jne
inc
xchg
sbb
js
inc
push
sti
int
js
lret
stc
repnz
outsl
je
fs
jne
dec
jne
push
mov
dec
adc
out
lret
xchg
inc
pop
outsb
dec
jb
pop
outsl
jb
gs
in
insl
jo
jb
je
and
dec
mov
fistpl
aas
pusha
inc
sbb
aas
add
pop
inc
jns
mov
add
pop
outsl
int
lock
fimuls
push
mov
es
or
mov
or
dec
sub
popf
insb
rcrb
pop
adc
or
push
inc
push
mov
sub
mov
ja
mov
jo
addl
scas
jp
or
add
push
adc
lods
jnp
int3
int3
xchg
mov
push
test
push
out
bound
or
test
cmp
push
iret
iret
push
or
fisubrl
daa
mov
inc
add
add
jmp
mov
mov
adc
inc
add
push
cld
push
xor
mov
clc
test
push
loopne
and
inc
inc
pushf
es
es
mov
dec
loop
push
int3
adc
test
or
jle
ja
jnp
mov
add
push
add
in
in
das
push
pop
add
mov
add
add
lahf
roll
das
inc
stos
repnz
add
or
sahf
pusha
test
adc
or
rolb
or
mov
in
dec
in
and
push
add
sub
cli
gs
fs
push
repnz
sbb
clc
ret
cmpsl
pop
dec
jae
dec
mov
adc
jl
dec
jno
cwtl
movsl
push
add
xchg
pop
es
enter
jns
push
fstpt
jb
xor
push
outsl
xchg
adc
pop
xchg
in
adc
loope
and
stos
loope
add
dec
lcall
out
pop
add
push
into
xor
push
jl
and
adc
jo,pn
xchg
add
es
je
jbe
pop
jne
push
mov
push
jns
jo
adcb
and
pushf
fwait
pushf
lods
jp
fdivrs
pop
mov
push
stos
inc
push
ss
or
imul
test
inc
adc
cmp
pop
ja
scas
jmp
xchg
es
jo
xor
test
negl
imul
daa
pop
adc
push
mov
jge
pop
xor
cltd
xchg
pop
add
xor
push
pcmpgtb
mov
out
sub
das
das
das
pop
out
out
push
push
push
add
test
or
aaa
fsubr
sbb
mov
push
mov
adc
lock
and
pop
lds
inc
adc
xor
adcb
sub
jbe
cmp
ficomps
loopne
xchg
pop
ja
xor
xorb
mov
jb
icebp
lcall
xor
addr16
pop
mov
cmp
dec
bnd
repnz
repnz
in
repnz
popa
jmp
mov
sarl
cmp
cmp
repz
sbb
jb
repz
sbb
mov
push
inc
imul
pop
xor
sbb
pop
sbbb
andb
les
fs
filds
cmp
enter
jg
sbb
jb
hlt
nop
hlt
xchg
hlt
ffreep
and
inc
filds
mov
cmp
xchg
adc
dec
cmc
jo
push
cmc
xor
add
push
cmc
adc
sbb
xlat
pop
xor
sub
add
mov
and
or
push
testb
addl
fdivs
inc
filds
cmp
or
in
push
shl
enter
pop
mov
push
xchg
scas
fistpll
cmp
and
mov
or
lods
cmp
add
xor
sub
xor
test
clc
in
cmp
outsb
test
mov
add
push
in
add
in
ret
rol
lret
inc
dec
lods
or
aad
add
call
ss
je
daa
in
and
clc
jo
mov
in
or
nop
inc
fistps
stc
insb
mov
out
and
leave
mov
aam
js
daa
inc
push
and
adc
and
hlt
push
dec
and
adc
movsb
into
or
pop
cld
mov
js
and
add
aam
mov
add
sub
lock
sub
add
pop
add
jmp
sub
je
sbb
or
int3
xchg
es
fs
push
nop
es
pop
xchg
in
dec
jbe
add
loopne
in
xor
jns
btr
hlt
icebp
mov
pop
call
faddl
mov
clc
pop
stos
hlt
mov
xchg
hlt
dec
mov
lock
dec
lock
in
mov
stc
sbb
lock
call
sub
sbb
test
es
call
fucomi
jae
iret
mov
mov
inc
loopne
imul
js
ds
mov
enter
mov
mov
jl
in
lods
and
shlb
lock
push
jg
shl
or
add
faddp
inc
das
into
mov
adc
adc
push
into
sbb
jmp
add
push
jno
add
imul
xor
call
jmp
stos
xchg
inc
cmpsl
scas
idiv
add
pop
jo
sub
movsl
test
std
cld
daa
sti
outsb
fs
rorb
in
push
dec
clc
fmuls
leave
ret
dec
mov
testb
or
push
stc
mov
iret
lock
movzwl
adc
les
rcr
mov
or
shrb
scas
add
lds
sub
lods
xor
jl
inc
mov
inc
loope
imul
cmp
mov
ficompl
jmp
lods
out
push
cmpsb
sub
push
xchg
cmp
add
jecxz
leave
es
outsl
sub
cmp
jae
push
cmp
lock
sbb
add
pop
sub
rcl
pop
shr
inc
add
push
sub
stos
add
pop
xor
stos
in
and
in
cmp
mov
push
lret
push
xchg
or
and
push
mov
stos
cmp
push
mov
sub
iret
jbe
mov
hlt
mov
aam
push
mov
fists
add
aam
roll
rcll
je
call
cld
setg
dec
fiadds
and
push
xchg
xchg
sti
sub
incl
xchg
push
insb
jnp
movsb
add
lods
insb
test
add
sub
fs
mov
andb
dec
add
lods
mov
loopne
mov
clc
cld
fimull
inc
int
test
loop
jne
out
rorl
data16
jmp
sbb
mov
push
dec
test
cld
imul
imul
sub
push
sub
mov
mov
inc
sub
imul
mov
pop
cld
inc
dec
or
cmp
insb
lock
jno
pop
ja
xchg
leave
jmp
pop
fs
and
adc
lock
add
xor
or
push
dec
jae
jecxz
inc
out
test
dec
pop
call
and
cmp
push
xor
xchg
imul
push
mov
xchg
jmp
push
lcall
inc
aas
and
mov
sbb
int3
cmpsl
mov
sbb
adc
cmpsb
imul
adc
push
sahf
jle
ja
les
ds
shll
or
mov
push
and
aas
add
add
lods
xlat
xchg
out
add
les
inc
dec
add
inc
or
jmp
and
jg
dec
pushf
inc
adc
xor
repz
mov
adc
ret
dec
hlt
xor
cmp
or
jg
sbb
cmp
je
movsl
loopne
call
adc
icebp
das
lea
lock
cltd
mov
addr16
cmp
cmp
or
mov
mov
data16
xor
daa
outsl
and
nop
push
jl
pop
repnz
dec
add
add
mov
insb
popf
push
mov
push
and
movzbl
outsb
out
cmp
push
and
inc
push
insl
cld
dec
enter
arpl
jnp
lock
lock
js
jns
nop
hlt
add
ret
loope
add
stc
clc
les
aaa
xchg
sbb
popf
sub
xchg
and
push
dec
pop
mov
mov
inc
mov
adc
lret
push
mov
rcr
adc
pusha
flds
mov
cmp
and
aaa
jno
addb
testl
add
shll
rorl
pop
cwtl
or
and
add
mov
pop
xchg
enter
adc
xchg
add
dec
inc
xchg
mov
cmpb
add
fcomps
mov
or
repz
or
add
leave
in
arpl
inc
inc
sahf
pop
outsl
andl
in
or
add
cmp
xlat
xchg
lock
and
out
sahf
xchg
pop
sahf
out
cmp
pushf
mov
out
stc
push
lods
pop
daa
out
adc
iret
repz
inc
imul
stos
cmpb
push
mov
leave
adc
cwtl
lock
bound
fistps
addl
dec
mov
test
cmp
in
fnstenv
fstpt
fwait
shl
pop
mov
add
mov
gs
fst
inc
lcall
add
jae
add
imul
repnz
pusha
inc
mov
subl
push
xchg
in
push
pop
pop
adcb
pushf
push
cwtl
cmp
arpl
dec
js
cwtl
xchg
movsbl
out
xchg
xchg
nop
pop
aas
nop
and
mov
mov
es
dec
xchg
inc
mov
outsb
push
ret
movsb
mov
test
nop
out
inc
or
adc
push
stc
das
addr16
sahf
jo
jl
ret
test
sbb
and
je
data16
jne
dec
je
or
jmp
adc
mov
outsl
mov
and
push
clc
js
push
or
aam
add
and
jp
pop
clc
or
inc
bnd
rep
test
test
pop
or
repz
out
or
outsb
out
iret
enter
or
xchg
adc
sub
inc
pop
imul
clc
dec
or
testb
sti
push
inc
xchg
ss
mov
push
xor
add
sub
xchg
je
xor
add
and
jo
dec
pop
dec
movsl
jmp
and
enter
shlb
hlt
hlt
imul
mov
mov
test
imul
adc
inc
xchg
ret
push
push
xor
xlat
mov
sbb
xchg
inc
cmc
push
enter
aad
xchg
inc
lea
jnp
or
pusha
mov
mov
dec
mov
pop
and
pop
je
shr
mov
adc
rclb
push
int
mov
push
adc
popa
and
stos
add
mov
jmp
cmp
or
nop
dec
dec
jmp
sub
in
fs
pop
mov
or
inc
inc
in
cltd
inc
fbstp
or
popf
push
ficompl
nop
mov
jo
js
mov
pop
outsl
cwtl
adc
outsb
inc
test
cmc
movsb
pop
cmp
add
or
cmc
sti
or
add
scas
xchg
or
add
inc
insb
pushf
into
push
sti
mov
test
mov
loopne
stos
adc
cmp
or
push
jb
adc
pop
or
incb
fcoml
sbb
je
loopne
daa
fistpl
push
inc
outsl
lea
add
or
push
gs
jno
xor
xor
les
ja
push
jg
jmp
insb
cmp
fdivl
mov
inc
mov
nop
mov
mov
jnp
subl
out
inc
jo
mov
repz
fdivp
push
mov
pop
repz
jae
es
pop
jp
cld
xor
xchg
adc
add
xchg
add
dec
les
test
xor
and
lea
les
insb
sbb
pushf
push
pushf
gs
sti
cwtl
les
xchg
xor
nop
mov
adc
sub
inc
movsb
cmp
test
cmpsl
out
pop
andb
and
movsb
xor
fcmovne
gs
insl
jb
mov
movsl
std
add
xor
and
loop
movsl
mov
pop
adc
adc
fcoml
sti
cmp
repz
and
push
andl
in
testl
mov
add
fcomps
pop
or
inc
dec
lods
adc
inc
pop
rcr
jecxz
sbb
lds
pop
mov
and
iret
pop
ret
and
lds
jmp
inc
and
cmovo
repnz
and
mov
or
cmpsl
push
and
mov
inc
sbb
xchg
pusha
inc
bound
pop
roll
pop
mov
adc
pop
aad
sub
push
leave
dec
test
or
lock
jmp
das
sbb
pop
jns
dec
fldl
fdivp
ss
cmp
lcall
cmpsl
adc
leave
insl
pop
dec
xor
mov
in
dec
adc
push
es
inc
push
push
push
inc
jl
adc
or
push
loope
mov
inc
adc
movl
push
adc
or
cmpsb
nop
push
fs
and
add
shl
mov
repnz
sub
push
xor
push
xor
gs
mov
adc
stos
push
dec
repz
mov
stc
adc
inc
outsl
sahf
out
cmp
test
sahf
out
stc
push
xchg
sbb
jmp
iret
repz
cmp
sbb
xchg
insb
or
push
nop
dec
test
xor
insb
xor
or
mov
mov
cmp
dec
mov
sbb
mov
add
push
xor
shlb
push
mov
rcll
in
xchg
pushf
sub
mov
or
aam
inc
sbb
xchg
in
add
cmp
das
inc
sbb
jecxz
pop
rclb
idivb
out
sbb
inc
in
push
mov
test
mov
sub
stos
inc
fadds
and
pop
mov
pop
lea
mov
adc
add
lods
lea
sub
and
imul
sub
aam
adcb
or
inc
and
lods
dec
cmp
dec
xor
dec
pop
adc
mov
push
loope
add
adc
lret
xchg
push
sarl
dec
push
dec
xor
mov
sbb
dec
sbb
add
inc
or
adc
push
ret
sub
fistps
mov
jb
mov
nop
or
mov
xchg
mov
lahf
ss
sub
sub
das
mov
pop
add
repz
or
xor
sbb
push
je,pn
pop
dec
sub
mov
cmc
add
ja
testl
add
inc
mov
out
xor
push
add
loop
arpl
jbe
out
dec
fwait
push
ss
add
mov
push
jecxz
inc
negl
xchg
inc
xlat
out
bound
outsb
aaa
push
es
imul
je
push
imul
ja
cwtl
das
or
out
xchg
jecxz
xor
pop
inc
lds
inc
pop
push
leave
inc
ret
pop
inc
add
loop
xchg
dec
cs
sub
fsubrs
aas
add
or
bound
fwait
adc
and
xchg
lock
sti
and
adc
push
rolb
cld
push
dec
loopne
cmp
push
hlt
add
outsl
stos
imul
add
add
jecxz
mov
push
push
movhps
inc
dec
insl
test
and
xor
mov
pop
mov
negb
pop
xor
and
shlb
inc
in
and
loopne
jecxz
fwait
inc
mov
pop
adc
arpl
lods
gs
push
aas
inc
sarl
mov
scas
inc
ja
and
xchg
cmp
data16
add
add
inc
push
xor
add
inc
bound
mov
dec
mov
cmp
test
add
jo
and
mov
mov
daa
mov
dec
andl
cwtl
testl
popf
fsubrl
js
and
pushl
sti
jb
mov
jl
inc
enter
and
push
bound
jl
and
xchg
adc
push
cwtl
jecxz
cs
sbb
pop
adc
rorl
icebp
outsl
xor
inc
sbb
je
mov
xlat
push
inc
adc
testb
pop
adc
popf
and
mov
sbbb
or
add
addb
add
pop
ret
outsb
outsl
mov
fs
xchg
mov
call
mov
add
jbe
mov
xchg
fucomi
mov
enter
adc
sbb
lret
mov
out
add
dec
mov
sub
xorl
lock
mov
dec
aas
and
jbe
and
sti
mov
inc
and
adc
addb
or
cmpl
xchg
orb
or
and
cmp
mov
loope
arpl
out
add
ja
pop
shrb
inc
ljmp
out
jle
sbb
xchg
jnp
test
mov
les
push
int
out
pop
and
or
xor
hlt
mov
aas
pushf
jo
repz
cmpsb
lods
jne
and
jl
mov
jae
sbb
jmp
add
int3
and
insb
rolb
in
sub
xchg
cltd
sarb
adc
inc
push
jns
add
or
xchg
mov
adc
xchg
mov
repnz
call
and
into
inc
sarb
mov
inc
adc
lret
add
bnd
inc
add
push
lock
test
xor
sbb
orl
add
jnp
rcrl
mov
pushf
insl
xor
xor
mov
outsl
cmpb
inc
add
pop
inc
push
or
or
ror
ret
loope
pop
scas
add
paddsb
ja
call
das
enter
lods
call
pop
js
addb
inc
lret
movsb
add
xchg
mov
dec
mov
mov
orl
call
or
popa
fs
mov
popa
cmpb
and
push
inc
mov
cmp
call
lahf
jg
es
test
mov
cmp
stos
push
ret
xlat
gs
xor
dec
daa
inc
repnz
aam
sub
daa
inc
pusha
sti
lock
inc
adc
jae
inc
or
test
pop
cld
add
jbe
push
inc
inc
dec
add
mov
loope
inc
cmpsl
out
pop
mov
popa
push
sub
or
jb
out
out
pop
mov
je
outsl
out
out
out
insl
addr16
loop
imul
arpl
sub
out
clc
fwait
mov
andb
outsb
outsb
outsb
aas
xchg
push
push
mov
enter
mov
mov
int3
add
enter
jg
idivb
xor
mov
mov
aas
mov
mov
push
and
and
aaa
aaa
aaa
aaa
pop
ficomps
out
add
loope
aaa
aaa
aaa
aaa
push
nop
mov
insl
out
nop
jle
aaa
aaa
aaa
stos
or
sti
or
incb
jle
mov
jo
cmc
jnp
mov
leave
out
mov
sub
ljmp
sub
fwait
sbb
fmuls
xchg
in
addr16
movsl
cmpsl
mov
test
int
jmp
add
inc
ds
aaa
mov
cmpb
aaa
add
fcompl
xor
lahf
sub
inc
and
jae
fstps
fistpl
out
push
or
lahf
int
int
push
push
xchg
mov
insb
in
decb
sub
outsb
aas
repz
test
lea
add
mov
addl
push
push
mov
sbb
mov
fmuls
imul
mov
enter
cltd
pop
jo
out
movsb
and
sub
pusha
fwait
fwait
fwait
fwait
xor
clc
mov
aas
fwait
fwait
fwait
inc
gs
jle
inc
loopne
outsb
outsb
outsb
outsb
clc
jo
cmc
aaa
jl
rclb
push
in
mov
ret
jecxz
subb
imul
idivb
lret
dec
rcll
inc
push
cmp
mov
repz
stc
iret
or
cli
jnp
inc
test
add
lods
xchg
mov
adc
sub
mov
mov
sti
fcompl
or
and
sahf
push
or
mov
sub
push
pop
aad
mov
mov
mov
or
add
shl
mov
jge
dec
jne
repz
outsb
incl
sub
mov
push
aad
dec
dec
popa
mov
in
ficompl
out
push
arpl
outsl
mov
popf
aad
push
and
adc
push
jno
mov
pop
dec
pop
idivb
ljmp
xlat
jo
mov
out
add
lock
test
fwait
fwait
fwait
fwait
adc
fwait
sbb
lahf
fwait
fwait
and
and
adcb
popf
int
push
push
scas
test
out
divb
cmp
out
ret
imul
lret
dec
out
movsb
idivl
insb
push
push
movsb
pop
push
sub
outsb
outsb
outsb
mov
adc
adc
addr16
outsb
outsb
outsb
outsb
test
repnz
in
mov
dec
hlt
insb
outsb
jns
ret
lds
jle
mov
int
jle
pop
xchg
add
pop
mov
mov
test
mov
add
mov
pop
mov
aas
mov
sub
mov
or
iret
and
inc
test
mov
mov
f2xm1
xor
dec
out
divb
inc
dec
rclb
out
and
out
out
pop
fistpl
movsl
outsl
loopne
jecxz
pop
lahf
fcompl
jmp
xchg
out
jo
icebp
lahf
int
int
lret
ja
js
inc
cmp
cmp
or
clc
sub
mov
fdivl
or
xchg
adc
scas
insl
mov
lcall
and
es
xor
hlt
mov
mov
mov
xor
outsb
rclb
sbb
lods
stc
cmp
outsb
outsb
out
les
jle
insl
lret
cld
mov
divl
dec
insb
lods
jne
pop
mov
leave
in
lcall
popa
js
sahf
inc
aaa
aaa
aaa
lds
xlat
rcll
rep
out
outsl
cmovs
ds
mov
roll
mov
jbe
jp
lds
addl
mov
dec
mov
mov
xchg
adc
mov
push
xchg
sbb
lcall
sbb
sbb
aaa
aaa
xchg
sub
lret
lss
mov
cmp
jnp
inc
ret
hlt
cld
cmp
dec
leave
dec
push
jne
ja
clc
into
push
sar
ljmp
xchg
fwait
fwait
arpl
cld
aad
jb
pop
sub
lds
dec
in
dec
in
int
shrl
pop
xchg
cmp
repz
dec
in
jns
jmp
jns
pop
sahf
daa
test
mov
xchg
fisubl
xor
inc
push
aaa
sbb
push
lret
loope
xchg
pop
pop
fs
fwait
fwait
mov
jecxz
in
fistps
pop
aas
imul
push
xchg
or
scas
out
int
out
jbe
xor
jae
imul
cli
cmp
stc
pop
test
xchg
mov
aad
lea
add
adc
addr16
xchg
mov
sbb
in
dec
mov
and
sub
aaa
aaa
mov
ja
mov
xor
cmp
add
ss
aaa
aaa
imul
inc
lds
fwait
sbb
mov
mov
dec
int
imulb
movsl
push
fwait
fwait
fwait
fwait
rcll
lods
sub
pop
fcmovne
in
add
loope
push
out
fistpll
repz
popf
dec
out
jo
outsb
dec
mov
or
hlt
jbe
push
jle
mov
jnp
add
mov
mov
fcoml
xchg
adc
sub
jge
pop
loopne
fcompl
lcall
adc
fidivrs
aaa
aaa
aaa
dec
cmpsl
daa
test
xchg
push
lret
sub
and
enter
addl
mov
mov
and
cmp
or
dec
xor
leave
rcll
jmp
jge
outsb
outsb
das
push
push
fcomps
bound
idivb
sbb
out
push
dec
nop
jmp
fucomip
clc
insb
or
jb
jne
dec
cmp
jnp
outsb
outsb
outsb
cld
out
add
lcall
outsb
or
jae
adc
outsb
outsb
outsb
jmp
and
addr16
push
lahf
insb
outsb
outsb
outsb
mov
pop
fldenv
rcll
aaa
push
std
sub
mov
xchg
dec
leave
xor
ds
aaa
aaa
dec
mov
inc
leave
inc
inc
cmp
aas
dec
out
ss
dec
iret
aaa
aaa
aaa
aaa
push
dec
imul
loopne
dec
aaa
aaa
aaa
aaa
pop
fstpl
pop
fwait
icebp
loop
in
fdivrl
adc
insb
pusha
sbb
xchg
loope
jb
out
int3
or
jns
jp
inc
xchg
pop
loop
faddl
mov
mov
jno
pop
mov
or
mov
ja
mov
adc
arpl
sbb
fisubrl
lahf
and
sub
and
adc
cmpsl
divb
jae
jae
xor
mov
cltd
mov
jb
jae
cmp
movb
mov
xor
ret
push
pop
loop
pop
sub
pop
push
mov
aaa
fistpl
iret
out
pusha
dec
ds
mov
stc
dec
imul
lock
mov
mov
inc
add
fcmovne
jg
js
sbb
test
sbb
repz
mov
fwait
fwait
or
xchg
mov
or
adc
fs
out
adc
push
daa
dec
and
out
sbb
dec
ss
sbb
push
out
call
mov
mov
dec
out
jp
mov
cmp
add
rcr
ds
mov
dec
push
jae
xchg
dec
iret
fucomi
les
push
aad
dec
popa
mov
mov
dec
es
fs
jae
sti
push
cld
or
adc
jno
jb
dec
jae
jae
mov
js
loopne
push
jg,pt
orb
jns
add
pop
xor
dec
lret
mov
int
int
test
adc
fwait
int
int
sbb
mov
outsb
lahf
fwait
lahf
shrl
stos
xchg
xchg
push
pop
mov
insb
sub
into
outsb
outsb
outsb
outsb
shll
dec
cmp
aas
jns
outsb
outsb
outsb
js
mov
inc
xlat
icebp
xor
dec
int3
stc
insb
outsb
outsb
dec
pop
jbe
mov
sub
pop
ficoml
popa
jb
out
fstp
idiv
in
or
stos
push
xchg
orl
xor
outsb
outsb
outsb
mov
jae
adcb
sti
jmp
outsb
outsb
outsb
addb
mov
mov
lcall
insb
push
sbb
mov
lahf
and
es
sub
adc
stos
lods
cs
mov
idivb
add
ret
mov
out
out
xchg
inc
inc
ret
inc
dec
jg
lret
out
out
lret
mov
xor
push
rcll
insl
scas
lds
mov
loop
dec
pop
fbstp
pusha
outsb
pop
cltd
cmc
in
outsb
outsb
outsb
out
rclb
jnp
in
outsb
push
dec
mov
outsb
std
repz
loopne
add
sti
jl
mov
or
push
cmp
mov
mov
add
sub
int
addr16
and
imul
das
jge
lahf
int
push
push
push
pop
addr16
pop
sbb
lret
out
pop
mov
or
mov
jae
les
ret
aad
aas
in
inc
enter
jae
inc
jb
fs
dec
sar
sub
outsb
cs
mov
fmulp
fldenv
insb
outsb
sbb
popa
in
pop
xchg
dec
lods
mov
inc
aaa
loopne
xlat
adc
js
iret
lahf
out
cli
neg
add
jge
sbb
out
repz
nop
lea
stc
cmp
sbb
fwait
xchg
cmp
cmp
repz
add
mov
repz
add
ds
fcomi
cld
jns
insl
dec
inc
testl
cmp
out
pop
push
ret
loope
inc
add
push
jns
out
std
push
jbe
out
cmp
jecxz
add
ds
test
jl
aas
iret
cmp
sbb
cltd
ss
lahf
out
pop
mov
scas
or
add
cmp
repz
xchg
xchg
stc
cmp
out
add
lret
repz
push
add
push
dec
insb
insb
clc
sub
out
out
pusha
and
outsl
pop
pop
pop
jb
and
sbb
push
adc
lcall
neg
incl
add
test
repz
cmp
or
adc
jl
iret
sbb
xchg
sbbb
enter
xor
push
mov
pop
mov
jns
jne
lods
rcr
jl
push
je
lock
stc
cmp
dec
jg
jmp
iret
repz
push
lock
add
lahf
and
sbbb
iret
repz
test
add
sbb
test
and
xor
mov
iret
les
shl
mov
sar
dec
dec
mov
iret
jmp
pop
dec
jge
cmp
out
cmc
repz
jmp
out
add
jne
gs
sbb
sbb
mov
pop
outsb
add
out
into
int
jmp
pusha
sub
cmc
cmp
imul
negb
sub
fcoml
fildl
movl
mov
dec
sti
pushf
sar
xchg
int
into
fsincos
mov
sub
hlt
enter
aaa
aaa
sub
stos
sub
insl
push
loopne
loope
aaa
aaa
aaa
aaa
fstpl
pop
fwait
pop
loope
in
ficoms
aaa
aaa
aaa
aaa
shrl
insb
push
xchg
inc
repz
enter
ss
or
stc
jp
jno
xchg
ds
fwait
fwait
addb
cmp
xor
or
sub
xchg
out
out
and
arpl
out
out
ficoml
mov
pop
xchg
stos
out
out
sub
adc
add
dec
mov
out
out
mov
inc
adc
push
insl
iret
out
inc
in
xor
jbe
xor
add
jae
jae
sbb
dec
imul
lret
rcrb
lret
je
xchg
jmp
scas
dec
push
addr16
push
sbb
aad
xchg
fs
clc
dec
clc
push
test
mov
dec
movsb
iret
cli
jnp
stc
decl
cmp
adc
sbb
adc
js
mov
sub
pusha
xchg
sbb
loopne
fstpt
cmpsl
popa
push
aad
lods
pop
pop
out
mov
aad
mov
test
dec
cmp
out
dec
and
inc
dec
addr16
pusha
mov
mov
stos
std
mov
cmpsl
out
stc
xlat
jo
scas
loopne
lret
daa
mov
lahf
xchg
dec
sbb
jae
jae
push
push
jg
outsb
inc
test
adc
cmc
jbe
decl
test
dec
dec
addr16
add
jg
sti
test
xchg
add
mov
adc
sub
ljmp
mov
mov
mov
pop
shlb
add
push
xor
iret
add
sbb
mov
pop
aas
cmp
sahf
mov
out
xchg
add
dec
shlb
clc
push
mov
jns
pop
hlt
es
inc
jno
inc
xchg
sbb
xchg
ds
aaa
aaa
or
imul
out
lds
xor
xchg
cli
fs
push
push
cmp
fildl
bound
jl
incl
jae
movsl
pushl
out
subl
push
pusha
pushf
mov
fs
int
outsb
mov
punpcklwd
push
sbb
stos
mov
add
xor
xor
gs
inc
mov
mov
adc
jmp
addr16
adc
lods
out
leave
bound
rorl
mov
dec
cmpsl
sub
pop
fstps
pop
ja
jo
fwait
fwait
fwait
ds
and
xchg
sbb
push
push
fwait
fwait
fwait
fwait
push
xchg
out
out
jo
ficomps
aas
fwait
push
pop
push
xchg
ds
sub
jae
ljmp
outsb
outsb
mov
aas
xchg
push
iret
imul
stc
jle
mov
mov
mov
pop
jb
jae
ret
and
mov
out
out
mov
mov
mov
iret
mov
mov
out
lret
lods
lahf
loope
mov
insb
sub
mov
adc
outsb
and
cmp
int3
nop
add
enter
lret
clc
adc
aaa
aaa
sahf
or
ja
test
mov
gs
cmpsb
je
or
fs
add
mov
insb
outsb
aas
xadd
inc
xor
pop
outsb
pop
jmp
pop
call
sub
jae
scas
inc
lret
xor
xlat
push
aad
lock
std
test
jg
and
leave
pop
pop
fcmovne
xor
xchg
push
jae
cmp
adc
fwait
fwait
fwait
dec
cmpsl
fdivp
xor
xor
incl
int
int
mov
mov
sub
int
int
enter
sbb
sbb
sbb
int
xchg
outsl
pop
loop
or
bnd
enter
add
mov
mov
or
jns
repz
mov
xor
sub
test
jbe
aas
fwait
lcall
xchg
lods
cmp
pop
rcrb
pop
incb
fs
into
in
addr16
mov
inc
jge
into
cmp
add
addb
push
xor
mov
inc
movb
aaa
aaa
aaa
out
aas
jle
mov
fxch
clc
fnstcw
aaa
and
gs
pop
fnstcw
je
loop
jge
and
nop
mov
xchg
adc
add
fcompl
mov
shl
or
lret
add
je
dec
mov
aaa
icebp
jo
jmp
outsb
push
push
in
xchg
int
cmp
loope
mov
fcompl
fistpl
sub
and
xchg
push
and
fsubrl
lret
dec
jns
dec
dec
outsl
mov
inc
cmpsl
test
mov
dec
fs
int
out
filds
inc
test
movsl
dec
mov
lahf
fistpl
sbbl
pop
push
shll
pushf
clc
add
ss
pop
adc
roll
mov
ret
addr16
flds
test
int3
daa
mov
lock
int
int
mov
xchg
pop
cwtl
mov
lahf
pop
push
andl
pop
sub
pop
jne
sbb
mov
mov
das
mov
test
ja
cmp
ret
aas
hlt
fprem1
insb
mov
cmp
push
add
jge
and
stos
jge
and
sub
add
mov
int3
inc
push
jbe
sbb
lods
in
add
pop
dec
mov
clc
mov
insb
aad
js
int
clc
inc
outsb
outsb
cs
or
cmp
test
out
sub
xchg
sbb
movsl
lcall
fdiv
mov
dec
in
inc
push
pop
filds
fstps
pop
je
jbe
dec
push
ss
aaa
push
inc
aad
dec
adc
lret
repnz
xor
stos
sbb
lods
mov
cmp
push
xor
adc
jmp
cmpsl
sahf
jbe
cmp
jno
popa
sub
sbb
pop
mov
gs
imul
pop
dec
ja
fildll
incb
mov
cmpsb
jge
mov
je
sbb
jns
daa
or
pop
and
ja
fistl
xchg
in
aam
fwait
fwait
fwait
fwait
sbb
imul
mov
ds
pop
cltd
rcrb
es
push
jl
jmp
fwait
inc
divb
cmp
add
enter
ds
xchg
adc
inc
lahf
fwait
fwait
mov
cmp
pop
cmc
sti
lret
add
jecxz
sub
push
fstpl
xchg
sbb
addr16
clc
inc
imul
fwait
pop
dec
outsb
lock
pop
pop
outsb
outsb
outsb
cs
dec
mov
mov
outsb
outsb
outsb
outsb
subl
or
test
outsb
mov
sbb
int
int
jns
mov
popf
push
pushf
fwait
fwait
lahf
int
fsts
aad
pop
rcll
push
iret
dec
push
sahf
pop
lcall
out
lock
mov
cmp
fwait
hlt
in
ss
xor
jae
cs
test
and
push
sahf
dec
jae
mov
push
xchg
adc
lahf
int
cmp
adc
pop
lock
push
test
add
jge
jnp
clc
ja
hlt
mov
lock
outsl
out
insl
fwait
fwait
sbb
imul
in
loop
loopne
loop
lahf
ficomps
pop
pop
fsubrs
movsl
mov
push
rclb
dec
into
dec
int3
dec
fdivl
cwtl
les
pop
aas
mov
fdivrl
mov
mov
mov
les
sub
test
adc
movsb
and
xor
jae
lcall
nop
aaa
aaa
mov
dec
or
arpl
jle
aaa
aaa
jl
test
or
sti
fcompl
fwait
adc
mov
lret
inc
jbe
mov
mov
jge
jbe
push
out
mov
cld
js
imul
inc
pop
dec
inc
mov
test
test
loop
jge
mov
gs
insb
fidivl
lahf
fildl
cld
sbb
or
sbb
mov
shr
cwtl
cmc
jl
out
jl
mull
jecxz
aas
mov
or
xor
xchg
push
xchg
into
fwait
fwait
fwait
fwait
dec
fdivrs
jns
dec
adc
jle
jae
repz
cmp
mov
divb
inc
inc
fistl
js
xchg
inc
out
out
cwtl
mov
push
mov
jg
out
out
push
sahf
inc
mov
lods
inc
lahf
ja
sbb
iret
out
fiadds
sub
cmp
dec
or
int
adc
pop
jecxz
or
movsb
sti
mov
xor
sar
insl
or
jae
setb
mov
lock
xchg
int
jae
or
xchg
add
mov
sarb
pop
push
test
pop
cmpsb
jle
scas
or
test
add
mov
xor
int
fists
out
xor
into
pop
call
sar
ja
outsl
mov
cwtl
sub
mov
neg
xchg
cld
int
mov
jne
add
jle
push
lret
push
mov
fidivl
orl
mov
ss
dec
sbb
js
adc
jae
jae
mov
xor
xchg
mov
mov
pop
lock
outsl
lods
mov
add
xlat
cmp
jae
mov
sahf
pop
adc
adcl
sbb
aaa
insl
sbb
ret
notb
adc
fdivrl
mov
sbb
jb
jle
movsb
int
sti
sti
mov
pop
jbe
jno
popa
int
int
fdiv
pop
lcall
xchg
aad
int
int
dec
cmp
inc
xchg
push
in
bswap
xchg
out
mov
add
lods
inc
out
fiadds
out
out
sbb
sub
add
sbb
fdivrl
mov
mov
fbld
pop
andl
and
mov
or
out
out
iret
pushf
roll
xor
sub
dec
mov
or
not
fstps
mov
jne
dec
push
adc
out
pusha
mul
out
push
outsl
inc
repnz
outsb
jle
andl
je
test
inc
es
cli
js
fs
out
cmc
dec
int
addr16
int3
inc
dec
dec
addr16
xchg
clc
xlat
int3
sub
lahf
and
xchg
das
or
mov
jae
jae
mov
jmp
jae
jae
cmp
add
rcl
ljmp
jg
adc
adc
sbb
xchg
fistpl
je
sbb
sub
mov
jge
xor
inc
xchg
hlt
in
dec
out
out
insb
add
lret
dec
and
popf
jp
clc
adc
jge
dec
imul
loope
push
xor
out
jae
jge
shrl
nop
aam
adc
push
lahf
fwait
inc
and
inc
ficomps
jge
btc
iret
sbb
xor
pop
lret
jae
jae
push
pushf
adc
out
divb
jae
jae
cmpsb
mov
bound
jg
xchg
ja
jae
jae
or
ret
dec
test
jae
jae
sub
sbb
cmp
or
jae
jae
dec
pushf
test
lcall
addr16
jae
or
xor
jmp
mov
xor
mov
push
leave
mov
or
mov
and
push
and
push
xchg
mov
shlb
fistpl
rorl
pop
jbe
push
fcoml
outsb
jp
dec
rorl
inc
dec
outsb
aas
pop
xlat
sbb
clc
aaa
stc
mov
test
xchg
adc
std
insb
outsb
pusha
daa
mov
stc
cmpsl
rcrb
mov
shlb
jge
fwait
fistl
fabs
js
adc
xor
push
enter
fwait
ds
or
scas
pushf
cmp
outsb
outsb
outsb
lahf
bound
cltd
loop
gs
mov
out
incl
cmp
ret
mov
fs
loop
jnp
inc
mov
sti
push
insl
mov
es
call
in
xlat
outsb
repnz
ret
out
mov
mov
push
insb
pop
inc
stos
fnstcw
xchg
jae
jae
mov
pop
ret
sbbb
jae
out
mov
test
lods
xor
mov
in
jae
inc
or
int3
rolb
sti
or
xchg
sbb
or
bound
jae
orl
test
stos
pop
or
andl
or
out
add
fsubl
cmp
out
data16
dec
movsl
inc
mov
lahf
fisttpl
and
xchg
shrl
jl
jecxz
scas
xchg
sbb
int
in
sti
mov
mov
out
push
js
push
lea
fcmovnb
int
or
out
out
xorb
inc
xor
xchg
outsb
mov
shlb
in
mov
push
or
aaa
aaa
aaa
aaa
push
or
adc
mov
mov
sarl
inc
xor
pop
test
mov
jne
es
aaa
aaa
mov
bound
and
sub
aaa
aaa
aaa
jle
popa
pop
das
mov
in
ds
fdiv
dec
aas
adc
dec
cltd
sti
fcompl
push
cli
bound
cmp
in
jae
out
xchg
cmp
jo
xor
int
int
loope
imul
mov
int
and
aaa
loopne
cld
mov
outsl
lods
iret
loope
jmp
test
jo
adc
inc
cs
aaa
aaa
aaa
aaa
cmpb
shll
movsl
fwait
mov
cmpsb
test
adc
out
jno
fwait
fwait
fwait
pop
cli
lret
jle
mov
fwait
fwait
fwait
shlb
jecxz
in
es
sub
fwait
fwait
fwait
ret
sub
rorb
lret
mov
jg
sahf
mov
in
add
bound
sti
fsts
out
movsl
adc
loopne
aas
jae
jae
push
loopne
addl
aam
psubusw
lds
jae
jns
fmull
mov
push
fwait
stos
scas
hlt
clc
jg
fmulp
jle
xlat
pop
inc
push
jge
sub
fisubl
push
pop
jnp
iret
out
mov
or
insb
clc
movl
push
mov
out
out
je
bound
or
call
or
and
out
mov
mov
mov
sahf
xor
pop
int3
push
insb
aas
fistpl
es
ret
mov
mov
or
rclb
ss
loop
mov
out
divb
push
mov
loope
out
out
mov
rcll
repnz
iret
out
out
imull
nop
adcb
fistpl
fcoml
mov
push
or
jnp
loopne
mov
jge
or
fdivrl
bound
scas
lahf
out
mov
jge
int
push
and
mov
out
or
cwtl
jg
push
adc
int
pop
add
sbb
sbb
jle
sahf
int
push
and
ss
mov
xchg
daa
sbb
stos
dec
xchg
insl
arpl
fldt
jg
pop
mov
mov
sahf
adc
xlat
js
jge
iret
push
push
cmc
scas
mov
fistl
fcomps
jle
xor
cs
testb
outsb
pusha
sbb
or
mov
xlat
xchg
jo
cld
insb
int3
addr16
mov
push
add
dec
push
in
outsb
push
aaa
mov
hlt
fs
insb
dec
dec
jl
popa
lret
fdivrl
adc
and
dec
in
fcoml
lret
adc
jae
sti
fmull
inc
scas
sub
adc
add
sub
sub
fnstcw
fisttpl
imulb
xor
movl
sti
insb
mov
lret
sti
insl
and
fiadds
out
repnz
cli
out
leave
push
cmp
out
out
mov
sub
or
adc
jbe
mov
out
fbstp
jnp
aam
xchg
std
jno
xchg
mov
mov
inc
push
in
bound
lods
addr16
ljmp
cltd
out
out
jnp
lea
xor
or
loop
fisubrl
out
out
dec
dec
ljmp
loopne
xchg
mov
out
lgdtl
and
jae
fs
shlb
aaa
sub
test
in
addr16
or
dec
pushf
mov
xchg
sti
fnstcw
roll
ss
addr16
jae
jae
jl
push
arpl
nop
inc
imul
jae
jae
movsl
fs
inc
mov
mov
jae
jae
lock
xchg
push
rclb
and
addr16
ret
pop
dec
push
jb
daa
cmpsb
iret
int
int3
decb
fsts
int3
push
call
mov
push
leave
dec
mov
mov
orb
out
loop
in
or
mov
pop
shl
fs
cmp
jo
sti
fs
sub
in
pop
movsb
and
insb
scas
mov
cmpsb
and
mov
lea
aaa
es
xor
ja
mov
rcll
dec
fsin
or
sbb
aaa
aaa
popa
push
test
ljmp
ds
std
cld
sub
outsb
out
les
out
jae
fldcw
insb
jg
or
out
or
leave
dec
movsb
inc
fldl
xlat
inc
fcmovne
xchg
mov
jae
lret
dec
leave
dec
rcr
fwait
fwait
fwait
xchg
or
and
jecxz
fwait
mov
adc
outsb
jbe
mov
adc
add
mov
sbb
test
pop
out
out
sub
insb
pusha
sub
frstpm(287
das
adc
cmp
dec
repz
adc
aaa
aaa
mov
mov
xchg
pop
add
lods
imul
mov
ja
in
xor
cmp
insb
and
mov
clc
fcoml
mov
cs
pop
sbb
xchg
xchg
enter
sub
or
sbb
inc
mov
mov
fwait
fwait
aas
mov
lret
jp
ja
cmp
sti
xchg
and
mov
outsb
and
sub
mov
ja
cmp
adcl
adcb
aaa
mov
mov
cli
pop
rorl
call
aaa
sahf
lahf
sbb
add
jae
add
sbb
icebp
roll
in
or
sub
adc
cli
ja
iret
out
js
jns
in
insl
jge
cmp
outsb
outsb
mov
dec
fidivrl
dec
cs
test
outsb
outsb
sub
dec
leave
popa
mov
pop
lock
loope
roll
shlb
sarl
stc
xor
dec
test
mov
and
popf
lar
adc
ret
mov
xor
scas
mov
fcomip
dec
and
aas
adc
cmp
xchg
and
mov
mov
mov
jae
shrl
dec
xchg
adc
outsb
xchg
cmp
sti
mov
dec
test
nop
sbb
sbb
jae
jae
push
push
xchg
add
pop
fucomi
imul
lds
jge
or
jl
stc
outsl
mov
ja
out
ljmp
insl
pop
enter
lahf
data16
push
shlb
gs
dec
aas
fwait
fwait
mov
mov
or
xchg
int
xchg
lods
add
mov
aaa
aaa
aaa
aaa
test
xchg
dec
repnz
fdivrl
aaa
aaa
mov
cmp
xor
fcoml
push
mov
mov
std
fcmovnb
inc
rcll
sbb
jmp
mov
or
call
std
cmc
jle
mov
jae
mov
les
repnz
jg
or
pop
sti
cmp
cltd
in
shlb
mov
jae
jae
cmp
dec
dec
aaa
addr16
es
ljmp
scas
and
jb
dec
lock
hlt
lock
out
fwait
fwait
loopne
jle
ret
test
mov
mov
sbb
es
mov
jbe
ret
add
jae
mov
call
rcll
ds
aaa
mov
jbe
add
shrd
testl
dec
push
push
aaa
scas
ret
js
mov
cmc
dec
out
out
loop
xchg
sbb
inc
ret
push
mov
fcmovne
pop
cmp
sub
and
lock
fdiv
jge
fwait
dec
cmp
sub
sbb
jl
mov
mov
add
xor
jne
outsb
or
mov
mov
adc
loope
jl
or
push
inc
loope
dec
enter
pop
mov
je
insb
cmp
imul
or
lahf
imul
cli
insb
cltd
es
sbb
cld
adc
in
inc
push
in
pop
fld
pop
lock
rorb
clc
fstps
mov
bound
jbe
jl
xchg
std
out
out
loop
or
add
add
outsb
scas
cli
adc
stos
sub
jl
outsb
inc
cmp
sbb
aaa
aaa
aaa
mov
shlb
out
mov
mov
ds
aaa
push
nop
add
inc
rcll
fwait
fwait
fwait
adcl
out
inc
jmp
je
enter
fwait
fwait
jmp
cld
or
cmp
cld
xchg
mov
insb
fcomip
imul
push
popa
jmp
loopne
bound
pusha
out
push
out
out
ss
sub
leave
outsb
inc
push
out
out
aam
mov
xor
mov
imulb
popf
data16
addr16
jae
popf
adc
mov
mov
mov
sahf
inc
add
outsb
sbb
mov
enter
in
clc
add
outsb
outsb
adc
xchg
inc
out
insb
sbb
rol
decl
adc
jae
add
xchg
cmpsb
fnstcw
faddl
sarl
in
addr16
fnstenv
sbb
mov
hlt
lea
lahf
int
pminub
imul
loop
lock
aad
fs
dec
test
shrb
fidivs
into
dec
xor
inc
mov
bound
outsb
outsb
es
icebp
pusha
shlb
ljmp
jg
outsb
outsb
outsb
outsb
cmp
fidivl
pop
mov
mov
sbb
negl
mov
out
or
fwait
pop
fnstcw
rclb
adcb
add
std
sahf
fwait
mov
adcl
out
fcmovnb
je
fiaddl
jbe
adc
adc
fwait
fwait
fwait
insb
and
jg
sbb
mov
fbstp
mov
mov
adc
jge
aas
mov
mov
xchg
clc
xor
sub
mov
mov
movsl
sub
xchg
pop
lock
nop
mov
adc
lock
sahf
fwait
call
cmp
xchg
add
loop
hlt
std
sbb
xchg
pusha
bound
call
int
inc
push
ja
in
mov
xchg
cmp
cmpw
int
movsl
cmp
dec
ret
xchg
lods
fwait
fwait
pop
mov
jne
outsb
push
adc
mov
lahf
sub
and
inc
pop
enter
aaa
aaa
aaa
jecxz
lcall
sub
aaa
push
sbb
es
lods
mov
enter
in
adc
mov
mov
xchg
addl
sub
mov
test
out
imul
rorl
xor
inc
jno
lock
jno
jge
aaa
mov
adc
imul
mov
outsb
outsb
clc
bound
insl
loope,pn
xchg
jno
cwtl
add
insb
outsb
pop
xchg
or
scas
or
orl
inc
push
mov
ja
push
dec
xchg
jae
jns
icebp
sbb
test
fldl
fnstenv
ds
cmpsl
jb
pop
mov
push
mov
add
out
jp
daa
out
jp
pop
arpl
fs
adc
jl
aaa
aaa
inc
int
hlt
jle
pop
leave
imul
test
into
cli
inc
xchg
mov
mov
add
sarl
fidivs
divl
cmp
xor
xorb
js
jae
jae
repnz
outsb
push
mov
mov
iret
idivb
mov
sahf
adcb
ss
push
jae
jae
scas
in
jno
adc
and
jae
jae
dec
enter
into
pop
ret
scas
ljmp
fwait
ss
mov
mov
add
f2xm1
mov
out
sub
jecxz
outsb
outsb
outsb
pop
pop
ja
xchg
push
stc
outsb
adc
outsb
iret
inc
aam
std
div
movups
mov
cmpsl
pop
ds
scas
cmc
xor
and
mov
test
mov
mov
ljmp
jae
sti
fsts
inc
mov
ror
pop
xchg
mov
dec
push
mov
out
jecxz
mov
mov
and
aaa
js
jno
mov
inc
jo
mov
mov
orb
xchg
or
pop
cmc
xchg
cltd
lret
into
xor
arpl
shrl
adc
mov
sahf
push
aas
iret
cmc
inc
into
aam
sbb
mov
mov
cld
out
sub
testb
sbb
aaa
aaa
mov
inc
xor
lret
sub
fdivr
aaa
aaa
aaa
aaa
les
in
push
jmp
adc
mov
sub
push
sbb
pop
sbb
mov
cwtl
push
adc
ret
pop
or
pop
lahf
test
mov
inc
mov
lahf
pusha
out
mov
lods
out
xor
adcb
in
dec
fstp
push
aas
fwait
dec
out
pop
mov
sbb
ja
inc
mov
jo
lds
pop
out
insl
jl
push
push
aad
cs
shl
in
imul
outsb
outsb
outsb
mov
dec
rorb
cmpb
fidivrl
adc
add
mov
mov
mov
mov
mov
and
scas
in
cs
lahf
scas
xor
sub
push
sub
ss
mov
enter
lahf
in
mov
fcoms
ljmp
notl
shll
lods
test
sti
std
push
xchg
xor
sahf
out
lods
cmc
subl
jecxz
iret
dec
sbb
adc
out
inc
loopne
lret
addr16
add
outsb
outsb
jg
test
mov
dec
test
loop
mov
jae
xchg
pop
sub
lock
in
in
or
leave
pop
addr16
xchg
lock
ret
lret
push
rcll
jl
outsb
dec
cmp
andl
js
jb
xorb
scas
cmp
cmp
jmp
pop
aaa
push
cmp
mov
push
fcompl
lahf
aaa
aaa
aaa
aaa
dec
cmc
jle
addr16
bound
es
aaa
inc
shrl
jecxz
int
divl
xlat
push
jmp
lahf
int
int
sub
and
nop
push
add
fstpl
push
roll
rol
sti
bnd
movb
dec
imul
or
mov
cmp
aas
mov
and
mov
mov
pop
fwait
ja
pop
and
pushf
pop
out
inc
loope
cwtl
add
out
xchg
xlat
xlat
daa
inc
movl
std
insb
outsb
sbb
adc
jg
or
xor
out
mov
mov
lea
xchg
scas
fwait
fwait
fwait
fwait
or
lods
pop
movsb
cmp
push
int
lahf
fwait
test
add
gs
repz
test
int
rorb
js
mov
clc
cmc
sbb
mov
cmp
or
out
out
fdivs
lahf
push
test
dec
sub
out
out
and
lret
cmp
es
dec
rclb
out
jmp
aam
fbstp
mov
push
ljmp
cmp
sub
fidivrl
fwait
fwait
fwait
sub
data16
shlb
arpl
lahf
fwait
arpl
mov
and
in
push
addr16
pusha
clc
in
stos
mov
cmp
leave
add
cltd
xor
mov
mov
inc
inc
cmc
arpl
pop
shlb
out
jnp
xor
dec
lcall
out
out
pop
adc
push
stos
cmp
cmp
cmp
iret
out
out
sub
outsl
stos
mov
int3
out
or
xlat
cmp
push
ficompl
pop
jb
jae
fucomip
mov
dec
add
js
imul
jne
xor
cld
sti
cmp
push
mov
daa
jno
mov
fs
clc
xchg
push
lahf
cmp
lods
pusha
imul
cmp
jp
out
jmp
adcb
out
insb
outsb
outsb
stos
outsb
bound
or
ss
push
cld
popa
jmp
loopne
scas
jge
push
sub
push
loopne
out
out
addr16
pop
or
adc
and
mov
std
out
ljmp
xchg
repnz
jae
add
cmp
mov
int3
out
jbe
shlb
cs
cmp
aaa
aaa
aaa
mov
pop
and
repz
sub
inc
xchg
aaa
aaa
dec
pop
mov
mov
pop
cmp
icebp
push
ljmp
add
jge
in
or
push
sbb
int
int
mov
je
js
aas
mov
mov
mov
and
mov
js
mov
jp
inc
mov
push
mov
hlt
aad
sub
bound
xor
js
int
add
outsl
adc
sti
pop
or
loop
xchg
mov
jmp
mov
repz
xor
push
fwait
fwait
mov
mov
test
shll
in
rol
aas
dec
bnd
sub
and
hlt
sti
es
outsb
outsb
outsb
aas
jp
popa
adc
data16
leave
in
rcr
hlt
jnp
jae
outsl
jg
mov
jo
pop
mov
jmp
fdivrl
cmp
icebp
data16
fwait
fwait
lret
xor
jno
cmp
addr16
sarl
pop
jecxz
es
mov
pop
loop
stc
divb
iret
out
jae
cmp
mov
mov
mov
mov
in
sub
in
neg
mov
add
xchg
or
ds
int
int
lods
jmp
jg
out
jne
lods
mov
sbb
add
test
pushf
sbb
popa
imul
int
pop
mov
out
pushf
sub
insb
inc
insl
mov
lock
adc
out
pop
fistpl
and
add
shl
out
xchg
stos
fildll
and
jae
jae
xchg
pop
push
mov
mov
movsl
mov
addr16
cmpsl
cmp
hlt
gs
cs
pop
js
ds
sbb
dec
cmp
faddl
push
adc
out
enter
clc
jp
jbe
or
cmp
inc
repz
jno
mov
mov
data16
loop
lret
imul
pop
pop
loop
add
inc
shrb
aaa
pop
cld
adc
push
sub
xor
fldcw
push
jb
cmp
sahf
push
fs
addr16
pushl
adc
lods
jnp
out
adc
pop
loopne
jp
sahf
push
out
insb
out
out
jae
cmpsl
int3
sarl
or
dec
test
pop
addr16
movsl
push
cmc
inc
ret
push
lock
int
out
mov
jbe
jmp
aad
clc
xor
aaa
aaa
push
and
or
add
aaa
aaa
aaa
jp
cmp
xor
jl
fidivrl
push
push
ret
xor
push
clc
jecxz
pop
cmpsb
clc
gs
int3
repnz
lahf
int
or
pop
movsb
rolb
ss
bound
cld
xchg
fdivl
jne
xchg
test
je
xchg
lcall
fsubrl
jl
iret
sub
cmpsl
pop
push
popf
or
fdivl
lea
mov
fidivrs
pop
in
les
arpl
hlt
or
inc
aam
lahf
fwait
fwait
fwait
cli
imul
jb
in
in
or
std
scas
mov
in
ds
scas
in
jae
fldenv
repz
pop
lock
jmp
jo
lods
faddp
pop
lahf
jl
stos
pop
incb
push
aas
sub
or
jmp
std
sahf
fcmovne
insl
outsl
fisttpll
mov
xchg
out
jae
out
mov
rorb
out
roll
es
xchg
pop
xchg
inc
ss
push
lret
mov
out
lret
fldcw
mov
fwait
fwait
cmp
xchg
pop
and
cmp
or
ds
fwait
loopne
inc
mov
mov
mov
fldt
lahf
ret
setae
aaa
aaa
aaa
adc
sbb
sub
jo
loop
and
lahf
fwait
sub
leave
inc
lods
jae
repz
or
pmullw
aaa
push
std
jbe
and
adc
mov
stc
mov
aaa
aaa
aaa
aaa
sub
ret
dec
push
push
lcall
aaa
sbb
xor
out
js
jl
mov
push
mov
outsb
add
dec
cltd
push
adcl
outsb
outsb
outsb
repnz
into
inc
les
pop
test
ret
add
int
jno
cmp
cwtl
jecxz
add
add
lahf
int
popa
sti
and
int
aas
push
lods
clc
pop
jbe
add
notb
mov
adc
adc
out
push
cmpsb
add
fisttpl
jo
and
fwait
rcll
cmp
pop
dec
push
ret
fmuls
negb
ss
out
xchg
dec
xchg
aaa
mov
cld
cmpsl
daa
stos
inc
fisttpl
idivl
aas
push
xchg
sbb
jecxz
mov
adc
cmp
cmp
mov
sub
into
dec
lahf
fwait
fwait
xor
pop
mov
pop
and
cld
sbb
pusha
mov
mov
xchg
xor
xor
fdivrl
jle
jp
xchg
clc
sahf
pusha
arpl
scas
lock
outsb
jp,pn
test
cmc
lock
inc
inc
movsb
out
das
lret
xchg
push
jo
jae
sahf
int
subps
add
pop
mov
push
jbe
sub
in
sbb
test
testb
fcompl
jle
inc
shll
xor
and
lcall
and
sbb
sub
out
decb
insb
mov
outsl
xchg
out
out
out
out
mov
enter
and
out
in
and
jne
jno
adc
sti
dec
iret
out
dec
mov
jge
bound
jae
pushl
dec
and
das
mov
mov
clc
aas
dec
cs
fmull
stos
outsb
outsb
outsb
outsb
inc
adc
add
mov
xor
insb
outsb
outsb
sub
dec
cmp
xchg
dec
lahf
clc
adc
sahf
and
xchg
jl
add
sub
cli
int
cltd
jmp
fwait
fwait
fwait
loope
pop
jbe
mov
or
aas
das
sahf
cmp
pop
mov
aaa
cld
insb
outsb
notb
mov
fisttpll
arpl
movsl
sub
inc
jno
mov
jae
cmp
jbe
mov
pop
int
pop
bound
iret
out
sbb
data16
cmpsl
lret
push
pop
movsb
roll
dec
inc
aad
xchg
pop
data16
insb
outsb
outsb
and
cmp
dec
add
ds
mov
scas
jmp
adc
add
cmc
fnstenv
clc
in
jnp
in
sahf
cmc
outsb
jo
outsb
outsb
outsb
insb
sarl
pop
mov
ds
loopne
in
xor
daa
cli
sahf
jno
aad
loop
mov
ja
insb
out
clc
sbb
fisubrs
outsl
xor
pop
mov
adc
xchg
sub
and
gs
and
sbb
jge
movsl
inc
cmpsb
out
push
cli
pop
insb
mov
out
mov
or
out
cmpsb
and
and
insl
lea
ficoms
stos
into
mov
mov
mov
or
dec
and
add
cli
lock
int3
pusha
or
xor
insb
outsb
outsb
outsb
cwtl
mov
rclb
pop
pop
jo
inc
add
aaa
std
leave
lods
xor
pop
push
mov
outsb
outsb
cs
add
ffree
pop
add
outsb
outsb
outsb
outsb
adc
xlat
arpl
lds
push
faddp
insb
outsb
outsb
outsb
or
lock
call
jl
mov
cmp
fcmovne
popa
aam
mov
sub
fcoms
pop
iret
in
outsb
push
push
fldl
hlt
dec
stc
fwait
stos
fwait
sbb
loop
inc
clc
sub
mov
jns
clc
leave
cli
nop
loopne
out
xchg
int
sbb
cmpsb
std
insb
outsb
outsb
iret
lea
int
hlt
sub
call
cmp
xor
insl
sbb
lret
pop
dec
ja
mov
pop
enter
nop
push
push
or
adcb
into
fucom
sub
inc
mov
loopw
fcoml
lds
cmp
aam
push
lahf
les
cmp
xchg
fsubrs
fwait
mov
sub
and
jo
xchg
dec
jge
std
push
cld
mov
cmc
out
jge
fcmovnbe
sub
cmpsl
hlt
inc
aam
test
push
mov
rcll
decl
lahf
fwait
fwait
fwait
cmpl
or
repnz
cmc
test
inc
fiaddl
xchg
pop
jecxz
fdivl
fcompl
fdivrl
mov
outsb
outsb
outsb
outsb
fidivl
fldenv
out
lret
push
xchg
push
insb
outsb
outsb
push
adc
jb
add
xor
inc
shrb
ss
dec
js
nop
cmp
in
ret
neg
fdivrl
je
mov
fadds
push
pop
cmp
cmp
lea
push
lahf
testl
or
mov
std
insb
mov
lcall
pop
test
mov
ja
ja
cmp
mov
sbb
xor
call
pop
call
jne
mov
dec
mov
jae
jae
pop
leave
mov
enter
jae
jae
test
cmp
clc
cmp
xlat
mov
jae
xor
cmp
dec
lahf
lahf
int
jbe
xor
inc
pop
sbb
mov
or
clc
enter
jp
outsb
mov
push
jle
xchg
add
mov
mov
por
out
jge
cmp
enter
jns
mov
adc
push
pop
add
fisubrs
cltd
and
adc
or
pop
popf
adc
push
inc
negl
mov
inc
movsl
adc
scas
icebp
pop
lock
cmp
shlb
fsubrl
pop
in
insb
outsb
outsb
adc
xor
mov
lods
ljmp
jo
inc
inc
inc
fdivr
insl
iret
in
stos
stc
push
cmc
cs
mov
dec
and
add
das
repz
cwtl
rep
icebp
sub
pop
sub
lahf
in
sbb
daa
out
loopne
xchg
std
adc
mov
js
out
mov
and
clc
lds
dec
adc
js
fwait
fwait
fwait
fwait
enter
enter
andl
imul
xchg
loope
mov
aas
fwait
fwait
fwait
repnz
jo
dec
xchg
push
pop
lret
mov
lock
int
add
fdivrl
xorl
fists
sbb
jbe
xchg
mov
ds
pusha
adc
mov
or
xor
in
addr16
divl
cmp
mov
or
int
stos
sti
xchg
cwtl
or
xor
fwait
fwait
fwait
jle
loope
or
leave
divb
lods
or
nop
inc
mov
out
out
inc
and
mov
mov
out
inc
sub
sub
cmpsl
pop
pop
jns
dec
mov
loop
or
out
fcmovbe
cmp
stos
cltd
push
outsb
outsb
outsb
loopne
outsb
ds
jb
vpcmpgtd
outsb
outsb
outsb
outsb
push
or
daa
mov
lods
ja
cmp
jl
test
sbb
into
aas
and
cli
fstps
js
and
int
not
pcmpeqw
add
cmp
mov
clc
std
and
add
cmp
jo
scas
js
add
fisttpl
xor
xchg
xchg
ljmp
adc
sbb
jp
pop
or
insb
adc
fnstenv
std
and
xor
pusha
out
idivb
mov
cltd
pop
mul
int3
shl
out
out
mov
add
out
out
daa
loop
lods
cli
xor
out
out
sub
cld
ret
jecxz
lcall
stos
lds
pop
or
pop
ljmp
rcrb
inc
inc
outsl
icebp
dec
std
dec
ja
sub
fmul
je
mulb
test
or
daa
mov
mov
xchg
std
fisubs
addr16
pop
lock
sbb
push
xchg
int3
or
cld
mov
fisubs
jne
mov
jb
and
mov
jecxz
mov
inc
cld
sarb
iret
out
imulb
add
adc
mov
rorb
fsubrl
mov
mov
cwtl
mov
iret
lahf
add
fstps
xor
dec
cld
mul
int
in
daa
push
or
js
int
int
incl
out
arpl
pop
add
push
lods
adc
clc
xor
je
lret
fildl
jno
adc
xchg
stos
dec
sbb
jle
mov
jge
xor
add
ss
daa
mov
push
push
mov
faddp
movsl
dec
inc
inc
adc
int
jmp
mov
or
mov
cli
dec
addr16
lods
push
xor
or
or
int
push
into
jae
pop
xchg
ss
mov
jo
ds
lahf
int
jge
push
xchg
cli
xchg
loop
mov
add
fdivrl
mov
mov
popw
jb
insb
pop
sahf
fdivrp
out
mov
in
inc
ret
cmp
lret
push
cli
jge
mov
les
je
scas
dec
lods
mov
jae
fucomi
push
fcmovbe
rorl
mov
push
iret
out
jae
enter
sub
imul
bound
inc
mov
mov
fcoml
into
xchg
push
fdiv
mov
mov
push
std
dec
mov
insl
fmul
xchg
push
loop
stos
std
in
mov
out
mov
mov
not
jecxz
out
andb
push
jbe
mov
test
sbb
es
inc
les
in
mov
shlb
fwait
dec
jae
sti
add
mov
lret
addb
mov
fwait
inc
aam
out
out
inc
lds
or
bswap
dec
xchg
pop
jl
rcrb
inc
clc
cmp
pusha
rol
aaa
aaa
aaa
aaa
mov
sub
cmp
aam
in
xchg
ds
mov
lock
add
out
out
ja
jg
sarl
popf
aaa
mul
out
out
mov
jp
mov
jb
out
out
sub
popf
arpl
xchg
out
xor
loope
mov
movsb
mov
pop
mov
aaa
lret
out
shll
jbe
mov
fsubl
scas
and
and
jle
inc
pop
xor
cmp
mov
loopne
xchg
push
in
mov
out
idivb
hlt
filds
es
and
fcomi
mov
mov
push
or
and
or
or
sbb
mov
jl
fcomi
xchg
fimuls
dec
push
insb
aam
inc
jg
cmp
fwait
lcall
adc
fwait
fwait
fwait
xchg
insl
mov
scas
out
sub
in
outsl
outsb
outsb
outsb
outsb
sahf
dec
repz
pop
mov
mov
fdiv
mov
fistl
dec
mov
pop
push
ss
ljmp
ds
lods
movl
fdivr
mov
insb
jno
sti
es
cld
fidivrl
test
shrb
mov
in
xor
cmc
mov
nop
ret
inc
sahf
inc
pop
repnz
insb
outsb
outsb
mov
xlat
movsb
xorb
out
dec
lahf
fucomi
loopne
in
push
push
clc
sbb
pop
cwtl
mov
fldl
sub
lahf
addr16
shl
mov
jg
pusha
and
out
and
pusha
mov
ret
clc
fmull
ret
pop
ret
jl
testb
dec
cli
jbe
push
ficoml
xor
out
out
cmp
and
lods
pop
fstps
sub
iret
out
out
shl
and
and
mov
push
ds
fwait
out
sub
mov
fimull
cs
cld
iret
rcrb
inc
mov
in
push
add
push
jmp
cld
fsubrs
mov
or
es
jae
fwait
fstsw
xor
imul
jmp
mov
aas
mov
data16
mov
fstps
adc
push
ljmp
out
sub
loop
lret
xchg
add
sbb
jae
jae
jmp
inc
cld
ret
mov
jae
fsubrs
mov
add
mov
xchg
inc
xor
dec
jge
cld
xchg
mov
les
or
jae
jae
xor
jae
push
jg
xor
je
xchg
ss
sahf
int3
enter
shll
movsb
push
or
aaa
aaa
aaa
bound
fists
je
test
xchg
mov
jae
push
imul
popa
jge
outsb
cs
xchg
test
pop
mov
jbe
dec
stos
or
scas
pop
lods
repnz
mov
inc
mov
mov
mov
mov
inc
pop
shl
mov
pushf
mov
orb
outsb
es
xchg
mov
push
shlb
pop
push
insb
xchg
pop
lahf
fcmovnu
cld
in
mov
andb
jl
aaa
mov
in
mov
in
stc
dec
xchg
out
sbb
loope
ss
aaa
aaa
fbstp
adc
jge
movd
mov
adc
sbb
mov
jge
lods
subb
or
xlat
jle
data16
lahf
int
push
pop
repnz
loope
cmp
pop
adc
pop
pop
cmp
loope
popf
fwait
pop
pop
and
cwtl
hlt
cmpsl
mov
fsubrs
sub
sub
sbb
and
pushl
inc
cmp
cmp
aas
pop
cmp
ret
add
int
leave
pop
inc
in
xor
dec
push
aad
cs
lahf
int
int
movsb
pop
mov
or
push
push
rol
cli
fcompl
dec
fnstenv
icebp
dec
jmp
filds
orb
inc
out
cmp
pop
dec
imul
mov
addr16
xchg
xchg
inc
push
mov
jle
out
fucom
mov
int3
jl
iret
div
cld
cmp
push
js
ret
out
and
xchg
aas
sbb
mov
jae
push
sub
push
push
add
loop
and
mov
subl
mov
sub
sub
xor
xchg
push
mov
bound
jle
aaa
mov
jle
mov
and
mov
or
sahf
pop
xchg
outsb
mov
inc
jbe
cmpsl
iret
dec
mov
das
aaa
aaa
aaa
ljmp
in
adc
jmp
mov
in
notb
out
mov
dec
xorl
fwait
cmp
aaa
sbb
add
sub
sahf
jo
push
push
mov
inc
adc
es
mov
dec
scas
std
insb
outsb
outsb
push
clc
push
stos
push
scas
push
test
pop
lods
loope
cmc
and
and
addr16
outsl
jecxz
xor
pop
pushf
inc
ret
out
idivb
xchg
int
sub
cmpsb
mov
or
lcall
iret
out
jle
outsl
cmc
mull
repz
adc
jle
jecxz
in
jmp
jmp
js
pop
push
jge
ja
out
inc
sarl
roll
dec
xlat
dec
flds
dec
fnstsw
fists
jae
push
xor
scas
ds
mov
mov
xor
xor
xor
test
loop
and
or
sbb
push
in
neg
push
lds
dec
rol
std
jno
test
out
cmpsb
lahf
stc
sti
gs
mov
imull
repz
in
jae
gs
jb
jg
in
out
jae
jae
loope
jecxz
sbb
mov
shlb
jae
adc
adcb
popf
aaa
aaa
pop
jl
or
fwait
pop
scas
add
xchg
cmp
mov
aaa
aaa
aaa
aaa
aaa
xchg
test
repz
cltd
ljmp
fldcw
sub
addr16
jnp
fildl
inc
faddl
dec
rorl
stos
out
add
push
iret
dec
push
sub
push
pop
mov
push
enter
cmpb
out
repz
jns
jnp
mov
jno
mov
jae
insl
out
add
fsubl
mov
mov
jp
jnp
lahf
in
fmuls
loop
mov
rcl
xchg
test
pop
iret
out
je
mov
test
repz
add
mov
aaa
aaa
aaa
aaa
mov
mov
pop
mov
lods
or
aaa
aaa
aaa
scas
scas
test
push
cmpsl
mov
aaa
aaa
mov
fcmovu
jns
xlat
aad
jno
mov
pushf
sub
pop
lock
jp
leave
lret
lds
enter
fadd
imul
std
push
push
push
sti
mov
testl
jle
pop
out
outsl
cmp
or
mov
cmpb
cs
xor
mov
add
std
fistpll
loope
outsb
jg
mov
popa
sbb
push
push
fcompl
pushf
popa
push
mov
cmpsl
leave
outsb
adc
jno
fdiv
mov
test
inc
std
je
pop
mov
loope
cwtl
int3
loopne
int3
mov
clc
inc
jge
cltd
rcrb
cmpsb
cli
insb
outsb
outsb
mov
push
sub
jle
mov
inc
push
or
lea
addr16
sbb
hlt
mov
cmp
cli
lret
int
movsl
push
cmp
inc
or
loop
inc
mov
mov
das
loop
out
mov
outsb
cli
fcompl
adc
stos
or
scas
imulb
outsb
outsb
out
sub
popf
and
scas
testb
dec
and
jle
lret
dec
daa
cmpsl
push
out
sbb
cmp
aas
fwait
sub
cmpsb
pop
pop
pop
and
jp
pop
push
dec
mov
mov
sti
sub
push
push
ds
shlb
cmp
cmp
outsb
outsb
fistps
or
xchg
adc
movsb
or
mov
xchg
lock
hlt
lock
xchg
add
pusha
pusha
outsb
enter
outsb
outsb
outsb
mov
dec
cmc
mov
jo
push
nop
pop
mov
adc
pop
fistpl
mov
or
shlb
test
cli
pop
lock
sub
push
aaa
add
pop
lahf
int
xchg
lods
adc
aas
idivl
imul
inc
gs
out
out
or
fcmovne
push
mov
adcb
out
out
push
std
push
cs
aas
cmp
outsb
xlat
divb
cmp
pop
or
push
sbbb
push
and
sti
and
das
push
inc
cld
andl
jmp
xchg
loopne
call
in
loop
sbb
out
in
mov
sub
sti
clc
in
cli
idiv
icebp
shrb
lahf
jmp
mov
mov
ja
insb
outsb
into
int
aam
xor
js
fisubl
mov
jae
movsb
mov
aad
scas
in
sub
shlb
mov
sarb
cwtl
mov
int3
andb
negb
mov
std
mov
je
mov
hlt
aam
cwtl
xchg
or
lahf
int
icebp
lods
pusha
repz
jge
bound
pushf
int
lahf
mov
lods
mov
mov
mov
xchg
xchg
nop
in
scas
xchg
icebp
lcall
sahf
mov
mov
or
addr16
pusha
and
rorl
out
lahf
cmp
mov
mov
iret
inc
or
dec
dec
rorb
out
ss
push
sahf
fimuls
inc
fsubrl
fcmovu
jl
mov
jae
inc
sarb
dec
ljmp
jae
ja
dec
loop
loopne
pusha
std
ss
aaa
cmp
xchg
cltd
into
mov
add
jle
mov
aas
jbe
jmp
jae
shlb
test
stos
gs
push
push
outsl
movsl
loop,pn
jae
pop
cmpsl
push
cltd
addr16
push
popf
lahf
pop
xchg
mov
pop
mov
inc
mov
punpcklbw
mov
xchg
fcomps
mov
inc
out
mov
push
lret
stos
leave
mov
cli
fmull
dec
dec
add
xlat
ret
dec
shlb
lret
int
es
jmp
jmp
out
sub
out
mov
repnz
test
cmc
push
outsb
outsb
mov
sti
xor
xchg
jb
sbb
insb
outsb
mov
add
mov
hlt
icebp
sbb
or
xchg
mov
lahf
sbb
int3
rolb
ficomps
in
fsubl
jnp
jle
xchg
mov
dec
dec
mov
push
mov
mov
movl
push
cld
rorb
mov
call
ljmp
stc
loop
mov
jne
fiaddl
add
or
lods
mov
rol
push
iret
sahf
jle
push
bound
jbe
test
jp
push
xchg
aad
ja
lahf
int
mov
rorl
cmp
cmp
dec
xchg
data16
orl
mov
sbbb
inc
shrl
ds
push
mov
xchg
mov
mov
push
mov
mov
sbb
adc
les
jle
aaa
ror
and
mov
xor
sub
and
aam
dec
jl
stos
add
clc
test
orb
xor
insl
divb
push
jg
mov
nop
add
pop
xchg
setno
aaa
outsb
cld
push
xorl
cld
nop
mov
inc
push
inc
adc
aaa
aaa
aaa
jle
add
push
loope
loop
in
mov
and
pop
loopne
xchg
pop
jl
pushf
mov
jp
daa
negb
aaa
aaa
sub
dec
pop
push
sub
jae
jae
push
pop
or
pop
cs
cmp
dec
pop
iret
stos
fisttps
and
mov
sti
movsb
cmpsl
cmp
mov
shr
pop
leave
call
int
and
sub
insl
ret
push
fcomps
inc
add
push
mov
inc
fdivs
push
lds
dec
outsl
ret
push
or
aad
out
cmp
js
test
aaa
mov
ret
dec
cmpsb
xor
cmp
mov
sti
fnstcw
sbb
sahf
or
adc
loopne
jae
mov
pop
bound
dec
rorb
pop
outsl
sub
stc
mov
insl
mov
lret
push
dec
cmpb
pop
out
pop
int
lret
leave
xor
jae
jae
out
push
sbb
out
pop
dec
or
jae
fistpl
fxch
fists
loope
neg
cmp
sbb
fs
ljmp
out
or
ljmp
cmc
lahf
mov
out
xor
sub
int
int
movsb
lock
xor
cmpsb
into
int
stos
das
lods
sbb
jnp
cmp
cs
ss
push
sub
xchg
sbb
mov
sbb
ja
rorb
test
out
pop
push
or
inc
cli
imul
int
sbb
push
repnz
hlt
ja
fs
jae
arpl
out
jp
fs
in
out
jae
jae
fcomps
inc
fcoml
inc
rcrb
fbld
dec
aam
rcll
test
test
sub
or
inc
aas
and
orb
and
jge
filds
int
int
jp
fadds
or
or
or
popf
int
popa
adc
adc
adc
jge
jl
xchg
mov
push
dec
adc
jmp
mov
adc
mov
dec
std
scas
inc
lods
stos
inc
adc
mov
aaa
aaa
aaa
pop
add
mov
push
scas
xor
aaa
mov
mov
xchg
sub
int3
mov
das
enter
aam
sarb
fwait
fwait
xor
fcompl
and
or
in
add
scas
jg
jmp
out
jb
jp
jo
push
xchg
cld
insb
outsb
outsb
insb
pushf
dec
cli
arpl
jge
pushf
jp
cltd
insb
outsb
outsb
clc
mov
cmp
adc
out
lock
test
imul
pop
xlat
shl
push
cmp
lahf
int
pop
rcrb
aaa
inc
xor
fsubrl
subl
push
and
fsubl
mov
pop
int3
pop
sub
daa
jge
cmp
scas
push
xor
mov
dec
ss
rorb
inc
fldl
inc
inc
sarb
jge
jg
jnp
jbe
ja
jno
jae
insl
outsl
imul
enter
lds
popa
into
nop
popf
mov
xor
lcall
mov
test
mov
out
xorl
mov
inc
jmp
incb
mov
mov
fwait
fwait
fwait
fwait
lods
sbb
stos
mov
outsb
outsb
lahf
fwait
mov
iret
xchg
scas
xchg
cmp
outsb
outsb
outsb
ss
mov
int
iret
mov
insb
sub
lds
in
js
cld
ss
push
adc
testb
inc
testl
out
out
jmp
adc
in
pop
jecxz
out
sbb
sbb
mov
mov
or
or
stc
or
add
out
or
incl
xor
lds
cmp
into
aaa
cmp
lret
xor
add
sahf
fwait
sub
sub
mov
sahf
ds
and
push
pop
mov
inc
push
rcll
int3
dec
int
int
pop
pop
dec
leave
dec
push
inc
lret
inc
cmp
inc
jge
jg
jns
jnp
mov
push
jne
in
jb
outsl
call
gs
popa
fdivrs
arpl
rcrb
mov
inc
add
lahf
loop
sbb
leave
xchg
pop
cwtl
data16
insl
imul
fnstcw
mov
divl
dec
cld
jle
mov
clc
add
fildl
dec
pop
movl
loop
inc
fidivrl
cmp
mov
out
gs
popa
in
xor
jl
sbb
ljmp
pushl
aaa
aaa
aaa
ret
stc
dec
sti
xor
inc
divl
icebp
inc
dec
clc
fidivrl
mov
int
in
nop
cs
in
inc
adc
nop
cmc
push
mov
add
hlt
fstp
sar
sub
sbb
negl
pop
add
cmp
out
pop
aam
loop
ret
lcall
pop
pop
insb
push
sbb
movsl
mov
pop
or
fs
out
psubusb
imul
loopne
in
adc
mov
sub
mov
pop
inc
jbe
mov
cmp
or
outsl
shll
cmc
loopne
sti
fcmovbe
imul
adc
xchg
fistl
lods
enter
cltd
inc
aaa
std
insb
lahf
pop
cmpsb
inc
sbb
or
mov
aaa
aaa
aaa
aaa
fstpl
push
repnz
ficoml
aaa
aaa
aaa
bound
lods
sarb
call
ror
stc
adc
in
jnp
rol
xchg
in
test
outsb
fistpll
mov
cli
dec
sti
cmp
out
mov
iret
mov
push
mov
xchg
mov
jecxz
mov
insb
and
ss
sub
mov
sub
test
out
out
mov
ds
ficoms
xchg
ss
push
aam
out
out
push
dec
lahf
lahf
scas
dec
rcrl
loopne
movl
fdivs
out
mov
aaa
imul
pop
inc
cli
les
mov
pop
or
or
inc
adc
mov
xchg
ret
jae
cmpsb
mov
mov
push
aas
fildl
mov
pop
test
imul
outsb
clc
add
lcall
ja
lahf
lcall
and
or
cmp
fisttps
mov
push
imul
adc
mov
sbb
fcmovu
mov
mov
jae
xchg
mov
mov
xchg
or
out
sbb
inc
mov
divb
add
aas
sbb
xor
inc
iret
out
add
push
jecxz
lret
movsl
jp
into
add
push
pop
pushl
js
and
fistpll
mov
out
fwait
repz
pop
out
fcoml
aaa
lods
daa
iret
push
mov
add
in
mov
movb
sub
lods
fstp
movsb
nop
mov
sbb
sbb
mov
mov
insb
pop
sbb
insb
mov
mov
mov
sbb
cmp
xorb
mov
sbb
sti
xchg
fs
divb
push
inc
pop
insl
outsl
push
adc
addr16
loope
sbb
nop
insb
outsb
dec
dec
adc
mul
dec
inc
mov
jne
adc
lret
mulb
pop
adc
adc
fdivl
jge
aaa
aaa
fistpll
sbbl
sbb
lods
jl
cld
int3
movsl
add
inc
psubsw
mov
sbb
mov
out
fbstp
in
jb
aam
in
and
popa
jp
cli
inc
xor
push
and
lahf
dec
cmp
mov
hlt
sbb
inc
xchg
in
lods
adc
dec
xlat
clc
popa
cmp
out
inc
imul
mov
push
cmp
mov
int
add
lret
cmp
int
int
jae
xor
out
dec
orb
push
adc
int
and
stc
rorb
iret
bound
fwait
or
fcmovnbe
sti
jbe
aam
lock
stos
jle
jae
rorl
xchg
and
mov
outsb
xlat
loopne
push
cmp
test
mov
push
scas
test
lahf
mov
add
sahf
lcall
or
mov
and
mov
inc
jmp
rclb
in
lret
ss
mov
iret
jle
jbe
and
pop
add
xchg
mov
mov
adc
pop
icebp
and
out
inc
popa
sbb
repz
jo
push
pop
test
push
fcmovnb
push
push
push
fildll
jbe
fxch
lahf
fwait
fwait
fwait
lods
test
and
mov
int
push
mov
inc
popf
xor
sub
rcrb
cs
ds
aaa
mov
or
hlt
lahf
aad
imul
lret
mov
scas
loop
dec
repnz
outsb
outsb
outsb
out
bound
push
imul
shl
jmp
loope
fidivrl
imul
mov
push
and
clc
lcall
int3
das
mov
adc
mov
rcrl
aam
adc
and
jae
pop
loopne
int3
call
sub
push
adc
out
lahf
mov
push
pushf
add
mov
iret
out
fs
xchg
aad
popa
lret
push
imul
rcr
cmp
jmp
xor
mov
cmp
mov
test
xchg
pop
int
lahf
fildl
sub
pop
cmp
inc
jae
bound
arpl
call
mov
shrb
stos
cld
insb
scas
cli
cwtl
mov
sbb
in
cmp
jbe
mov
movsb
mov
arpl
inc
test
mov
nop
leave
cmpsb
movsb
addr16
inc
jo
pop
inc
xchg
push
push
fucomi
jge
cli
mov
loopne
test
call
jmp
stos
xchg
adc
push
and
mov
insb
cmp
or
xor
or
mov
filds
mov
push
je
xchg
jnp
addr16
fistl
aam
pushf
popf
xchg
lcall
or
gs
adc
fidivrs
xor
sbb
xor
fisubrs
jp
mov
iret
out
jg
std
lret
xchg
mov
loope
ds
scas
ds
loope
es
dec
mov
pop
data16
imulb
fcompl
scas
push
mov
loope
cli
insb
outsb
outsb
cmp
popf
cwtl
addr16
stos
jae
test
out
sarb
mov
mov
insb
pop
dec
out
jns
xchg
push
mov
out
out
movsb
adc
and
jo
jl
out
out
js
pop
hlt
inc
ret
push
cwtl
cmpsl
cs
sbbb
sbbl
inc
jp
out
out
add
mov
pop
jmp
call
andb
push
cld
mov
fdivrl
sub
ja
test
jns
insl
mov
lds
sti
mov
xchg
out
lea
push
arpl
mov
sub
jbe
sbb
adc
lods
xlat
sti
fsin
jb
mov
test
xorb
addr16
jae
sti
test
mov
push
mov
out
aad
pop
mov
adc
push
sbb
es
xchg
xchg
into
in
in
imul
outsb
lcall
pop
loop
push
jmp
mov
push
sbb
inc
cmc
sar
repnz
loopne
push
out
hlt
mov
adc
sbb
daa
ds
fdiv
mov
and
mov
pop
sbb
fwait
xchg
es
mov
lods
cmp
sahf
push
icebp
and
jl
aaa
aaa
cltd
lahf
jecxz
push
out
and
cli
sub
and
mov
in
out
mulb
enter
jbe
mov
dec
xchg
jmp
push
stos
pop
ds
aaa
mov
cmp
push
jb
movsl
mov
sbb
adc
lahf
add
data16
push
jg
pusha
xchg
movhlps
std
test
mov
xor
sti
fsubr
fisubrs
mov
jnp
xor
sub
popa
test
sbbb
jb
test
xchg
sahf
cs
popa
sub
call
mov
cmpsl
cmp
icebp
ljmp
jae
lret
movsb
cld
mov
mov
aaa
aaa
aaa
aaa
pushf
out
jecxz
out
dec
fistpll
sti
push
ss
gs
lahf
fnstsw
pop
test
jge
jae
jae
pusha
xchg
outsb
mov
push
fnstcw
outsb
mov
pop
daa
outsb
inc
push
pmaddwd
adc
and
rcll
jae
jns
rcll
loop
in
mov
clc
sub
adc
jne
ss
pop
mov
pop
aas
adc
fists
sti
add
mov
shll
in
insl
movsb
pop
lds
int3
daa
mov
sbb
ss
lret
pop
leave
ffree
fmull
shlb
ljmp
fsubl
sbb
fwait
cmc
icebp
aaa
inc
push
mov
call
inc
or
jb
dec
sub
mov
inc
into
jge
jne
fwait
pop
add
test
or
lods
movsb
push
sbb
adc
sti
fnstenv
add
movsl
inc
pop
xchg
mov
inc
jae
mov
outsb
jb
jl
xor
fcomps
data16
fldcw
enter
jge
mov
fisubrl
jo
cmpsl
roll
jmp
clc
push
push
cmp
hlt
iret
out
jne
push
cmp
pop
es
mov
cs
iret
clc
push
into
or
es
mov
mov
cltd
add
sub
push
mov
addr16
cmp
ret
mov
popf
pop
mov
cmpl
fsubl
inc
add
sbb
pop
push
xchg
adc
fdivrl
cmp
dec
jbe
loop
or
lds
mov
outsb
outsb
outsb
outsb
clc
movsl
adc
mov
mov
outsb
outsb
outsb
outsb
aaa
inc
dec
dec
lds
cmp
test
mov
push
fs
nop
sarl
xchg
cmp
inc
es
dec
movsl
mov
out
aad
xor
outsb
stos
cmp
cli
cmc
cmpsb
insb
test
push
fs
outsb
out
hlt
push
pop
in
or
icebp
add
ror
aaa
hlt
hlt
pop
cmpsl
es
adc
clc
aaa
pop
lods
sub
cmp
and
jns
lcall
add
pusha
fsub
fwait
out
xabort
jp
je
mulb
daa
notb
add
out
out
sbbb
aas
jecxz
loope
out
out
in
rorl
mov
xchg
aas
test
out
xchg
je
iret
idivb
bound
xor
pushf
jbe
lahf
sahf
jle
lods
scas
sub
dec
out
stos
cmc
jge
fwait
fwait
cmp
jae
pop
push
mov
fcoms
push
xchg
xchg
jo
outsb
push
or
jge
dec
mov
in
pusha
mov
xchg
scas
lods
push
stos
mov
and
jae
sti
cmp
adc
mov
addb
add
ret
push
cs
lea
aam
mov
ljmp
arpl
addr16
js
and
filds
shl
insl
and
jb
iret
out
push
inc
jle
and
pop
test
add
cmp
fldenv
push
int
arpl
fistpll
subb
mov
pop
sbb
scas
adc
adc
das
mov
mov
in
fnstcw
dec
popa
adc
sahf
dec
scas
jp
in
nop
int
sbb
pop
lock
repnz
xchg
push
cmp
js
pop
jle
sub
push
into
jo
xor
adc
insb
mov
outsb
xchg
fistpl
das
hlt
js
mov
lock
xor
add
out
pusha
repnz
xchg
sub
add
fwait
fwait
fwait
fwait
call
xor
sub
addr16
cmpsl
test
add
scas
rcl
fdiv
loope
scas
sub
mov
sbb
xchg
add
inc
cmp
jo
std
insb
mov
cld
ss
repz
sahf
xchg
mov
fcmovnbe
pop
adc
test
clc
or
outsb
outsb
outsb
lahf
xor
rcll
mov
mov
xchg
mov
dec
stos
push
movsb
fimull
iret
pop
inc
out
mov
std
gs
or
fwait
fwait
out
pop
lret
mov
xor
cmp
stc
adcb
xor
cli
dec
pop
std
xchg
aam
sahf
add
add
ja
jge
adc
inc
andb
outsl
jne
cmp
mov
loopne
lahf
std
sub
inc
call
imulb
mov
test
shl
mov
out
mov
xor
cmp
ret
add
outsb
aas
push
mov
repnz
idivl
fucomi
imul
mov
add
ja
xchg
mov
pushf
jno
sahf
or
and
xchg
push
jl
pop
cmpb
xor
ss
arpl
mov
es
xor
sar
inc
mov
lods
bound
adc
lahf
fisttpl
jge
push
call
inc
pop
je
push
dec
push
mov
push
pop
and
mov
pop
hlt
js
std
out
adc
js
lds
mov
loope,pt
xchg
out
fdivrl
push
dec
push
subb
pop
subb
push
sar
scas
or
lret
roll
repz
mov
dec
daa
xorl
xor
mov
sub
icebp
inc
jbe
dec
stos
pop
mov
sbb
push
sub
scas
mov
jo
push
dec
ficoml
push
inc
pop
push
dec
add
dec
int3
jbe
sub
bound
daa
cmp
pop
imul
mov
push
push
jle
push
out
xchg
in
popf
xchg
repz
mov
out
les
and
mov
out
out
or
addr16
sti
adc
cmp
fcmovne
out
inc
fnstenv
in
jg
xchg
ja
int
aas
pop
adc
ret
cltd
inc
inc
or
int
dec
lock
call
addr16
lods
stos
inc
cmpsb
mov
fwait
ds
fnsave
mov
cld
mov
fwait
fwait
fwait
fwait
sbb
lods
shlb
and
ja
push
lock
clc
xor
pop
cmp
mov
xchg
shlb
sub
lahf
sbb
mov
or
adc
sti
mov
mov
cmpsb
sahf
int
jl,pn
addr16
stos
pushf
outsb
cs
faddl
pop
cmp
movsb
ds
jno
notl
js
push
aaa
cmc
jbe
jge
outsb
pop
fisttpll
adc
out
fistpl
fcompl
movb
popa
ds
jne
cmpsb
mov
insb
outsb
lahf
cmc
add
xchg
pushf
scas
aam
mov
push
and
mov
mov
jle
push
in
and
inc
loope
jae
sti
fsubl
lods
cwtl
sti
or
clc
addr16
jae
jp
push
xor
xor
test
int
xchg
fnstsw
clc
jns
movsl
cltd
sarl
jle
clc
cmc
push
mov
shll
je
jle
dec
notl
jb
sbb
rclb
jo
adc
ret
mov
idiv
out
cli
mov
mov
ds
test
push
adc
ljmp
xor
mov
mov
int
adc
out
jns
mov
jae
test
xchg
cmc
insb
out
ret
popa
xchg
pop
aam
das
jmp
stos
into
dec
int
jo
int
in
pushf
rorl
and
inc
cmpsl
cli
dec
fwait
fwait
lahf
int
mov
mov
shlb
outsb
aas
fwait
sub
and
push
xor
xor
mov
adc
popa
mov
sub
mov
clc
xchg
imul
incl
lock
mov
ret
push
lahf
jp
jae
loope
cs
test
out
les
xor
and
xorb
outsl
mov
push
test
and
sbb
push
outsb
outsb
outsb
lahf
xchg
jmp
nop
dec
scas
mov
outsb
outsb
gs
adc
fcompl
insb
cmc
out
pop
dec
mov
int
adc
mov
push
jl
ds
sbb
or
cmp
push
fstpl
xor
pop
xor
dec
mov
cmp
add
imul
sti
pop
jnp
jbe
ret
mov
out
addr16
cld
add
imul
out
testb
inc
adc
bnd
mov
out
test
arpl
dec
daa
sub
mov
aaa
insb
push
dec
mov
mov
sahf
sbb
in
pop
stos
push
pop
adc
les
imul
cwtl
or
stc
xchg
pop
push
inc
jp
icebp
sti
insb
jmp
es
or
push
outsb
out
xchg
lret
push
jl
sahf
fiaddl
out
mov
jo
jle
pop
rclb
jo
subl
dec
lds
push
sbb
mov
or
cli
insl
repz
sbb
ret
sub
and
mov
lahf
int
je
xor
sbb
adc
enter
cli
mov
fisubrl
in
insb
push
mov
mov
es
out
out
mov
dec
mov
mov
or
pop
and
mov
inc
push
sub
pop
pop
mov
mov
dec
xchg
cltd
js
adc
cmp
mov
ja
jl
sbb
push
push
and
stc
out
or
jle
aaa
aaa
insb
hlt
dec
inc
ss
in
xor
outsl
cmp
fwait
sbb
dec
mov
lret
jne
sbb
jne
push
cmp
les
pop
jae
and
or
dec
mov
jecxz
mov
push
in
rorb
sti
mov
nop
fisubrs
scas
inc
inc
in
sahf
js
fwait
call
leave
aam
xor
fwait
xchg
loopne
pop
adc
fdivl
nop
sahf
or
aam
icebp
xor
mov
test
or
pop
rorb
cmp
orb
add
xor
mov
fnstcw
mov
push
lods
xchg
addr16
idivl
mov
mov
push
decl
sbb
lret
pop
add
xchg
ds
lret
adc
int
xchg
icebp
out
mov
jl
int
int
cmp
nop
push
gs
and
testl
cmp
jae
rorl
insb
mov
dec
scas
je
and
pop
hlt
mov
sub
jmp
mov
shlb
cmpsb
add
cwtl
xor
outsl
mov
mov
fdivrl
int3
cltd
xchg
inc
fistpll
jae
push
js
add
mov
mov
mov
inc
xchg
mov
or
xor
in
jo
iret
negb
mov
test
sahf
sub
add
aas
dec
out
inc
mov
mov
int
outsb
add
add
ror
fsubrl
xchg
jle
dec
jae
andl
dec
xor
add
xlat
cli
xor
inc
lahf
or
dec
lahf
fistpl
adc
pop
mov
jns
outsl
ds
mov
fcmovbe
in
fldenv
pop
xchg
mov
jge
shlb
arpl
icebp
into
mov
lds
addr16
iret
div
jge
cmp
dec
les
adc
jecxz
push
xchg
test
pop
out
mov
loopne
jo
xchg
xchg
imul
jbe
mov
mov
pop
dec
mov
cmp
call
cmp
cli
jecxz
mov
imul
popa
or
roll
mov
sub
std
fidivs
fs
inc
popf
insb
out
out
ja
in
loop
aam
in
test
mov
sbb
push
mov
adc
clc
cli
insb
outsb
aas
inc
in
xor
push
cmp
fildl
lret
mov
test
xor
inc
aas
fwait
jae
xchg
pop
xor
lcall
mov
xor
outsb
outsb
sbb
std
aam
and
or
inc
mov
aad
fdiv
rcrl
mov
loop
data16
imul
mov
repnz
sub
popa
enter
push
xchg
iret
out
clc
xchg
or
ret
mov
push
mov
fwait
fwait
fwait
loop
ss
test
imul
lahf
fwait
fwait
mov
pop
mov
fwait
lahf
int
fildll
or
fwait
lock
in
fwait
fwait
fwait
lsl
cmp
cmp
jb
sub
jg
push
cmp
xor
loopne
aaa
aaa
into
xor
sbb
or
outsb
cmp
push
ss
push
xchg
sahf
lods
psrad
cs
aas
jae
jae
adc
fiaddl
out
ret
lea
aaa
mov
stc
mov
rclb
roll
or
nop
je
ret
fbld
adc
push
cmp
mov
out
xchg
push
js
rorw
mov
outsb
jle
int
sub
cmp
loopne
xchg
cmc
push
lock
pop
sbb
cli
into
loopne
js
ja
out
push
mov
jbe
lods
sarb
aaa
dec
sub
and
inc
push
iret
inc
repz
test
jae
fdiv
push
aam
adc
lahf
cmp
jae
jae
inc
push
pop
push
mov
sti
pop
popa
pop
lcall
cmp
loop
or
in
cmpb
lea
gs
aad
xchg
in
xor
jae
and
and
jle
dec
inc
mov
movsb
scas
push
mov
inc
mov
fwait
xchg
mov
jns
or
adc
fmuls
in
clc
jae
jnp
and
bound
lods
shll
jae
ret
insl
in
cs
jae
pop
into
lahf
arpl
sbbl
addr16
jns
pop
stos
test
lret
jge
sub
enter
mov
out
neg
lods
push
lcall
adc
and
mov
int
in
push
test
scas
mov
jge
mov
jb
jo
int
loope
jl
and
pop
push
test
shrb
add
push
lret
and
es
lods
out
out
xchg
lret
rorl
aad
outsb
outsb
pop
jle
aaa
outsb
xor
sub
jmp
stc
mov
pop
xchg
mov
mov
mov
fs
xlat
out
out
sbb
cmc
mov
mov
out
out
es
aas
sbb
lea
dec
sarb
dec
or
jl
fdivrl
ret
xchg
inc
inc
dec
dec
push
cmp
and
clc
mov
repnz
mov
mov
dec
bound
xchg
stc
adc
addr16
repz
data16
test
xor
push
movsb
jcxz
mov
pop
jae
jae
sahf
mov
mov
lcall
scas
or
or
cmp
out
or
scas
int
jns
jmp
out
dec
cmp
fwait
aad
push
out
and
std
cmp
bound
and
add
mov
mov
sbb
jae
iret
popf
pop
mov
push
shrb
les
jae
jne
cltd
cmpsb
sti
aaa
fcmovu
xchg
cmp
sti
jge
sbb
test
pop
mov
jmp
jae
pop
push
inc
mov
out
rcrl
mov
push
cmpsl
pop
orb
repz
lds
mov
push
mov
test
out
arpl
adc
loopne
sub
lahf
xchg
iret
jle
fcom
ljmp
je
in
push
outsb
fdivrp
xchg
pop
inc
mov
jecxz
push
test
xchg
xchg
ds
aaa
aaa
sti
jmp
pop
add
push
shlb
rcr
fsubl
movsl
cmp
gs
mov
int
push
pop
inc
add
dec
xchg
out
notb
fisubrl
dec
sub
fsubp
out
out
daa
cld
or
getsec
dec
jae
sbb
lret
push
pop
cmpsb
inc
jae
add
call
test
addr16
mov
jae
std
insb
mov
adc
and
jbe
ds
aaa
aaa
cli
xchg
imul
test
in
jb
sub
adc
and
cmp
fldenv
aas
ds
push
test
push
inc
dec
fisttps
add
sub
cmpb
mov
std
insb
out
cli
push
dec
push
popf
sti
shrl
and
sbb
add
inc
xchg
test
addr16
push
push
fisubs
fsubs
pop
std
cmc
sahf
jb
iret
or
in
gs
jle
push
in
pop
lock
jb
pop
clc
cld
and
mov
inc
push
pop
fsubl
fmuls
fwait
fwait
sbb
sub
sbb
xor
fwait
insb
sub
mov
mov
jl
sbb
fimull
sti
std
pop
adc
fisubl
jecxz
mov
pop
jp
clc
cld
or
outsb
fimuls
fwait
fwait
loopne
xor
std
out
popf
fmul
int
sub
mov
mov
mov
enter
shl
movsb
sbb
fwait
fwait
or
stos
shrb
lcall
shrb
or
bnd
mov
hlt
mov
bound
sub
mov
adcb
jp
int
pop
stos
ss
xchg
ds
mov
sahf
cli
dec
mov
je
test
pop
jae
aas
clc
sub
je
xor
adc
mov
jae
adc
xor
sbb
push
cmp
ret
mov
ja
jle
call
setle
in
in
xor
loope
out
ret
and
lods
faddl
sahf
popa
jge
sahf
outsl
xlat
jbe
and
lret
insb
outsb
cs
movsb
imul
or
lock
mov
and
sbb
in
das
call
mov
out
sbbb
cmp
pop
xchg
out
pop
sub
imul
outsb
outsb
outsb
test
movsl
add
sbb
leave
std
mov
subb
ficoml
cli
iret
out
mov
mov
lret
ret
push
push
mov
pop
or
jecxz
inc
pop
cmc
gs
shlb
sbb
fistpl
fdivrs
xchg
movsb
mov
ret
insb
mov
xchg
loop
or
and
pop
cli
xchg
addl
fcompl
push
jmp
les
lahf
fwait
mov
test
adc
jbe
mov
mov
sbb
push
jge,pt
mov
mov
addr16
lock
sub
mov
or
in
test
mov
arpl
jbe
js
xor
dec
mov
std
lds
xchg
out
and
mov
daa
add
mov
daa
push
mov
or
fs
ds
xor
cld
divl
aaa
cmp
push
loopne
dec
mov
jno
rcll
fstps
scas
or
mov
into
mov
sbb
ficoml
ret
addr16
out
pop
bound
in
negb
cmp
xor
mov
in
mov
xorb
testl
mov
push
add
loopne
mov
fucomi
mov
sbb
mov
cli
or
nop
jnp
add
rorl
daa
test
enter
push
call
pop
movsl
mov
daa
xor
lods
fwait
cmp
add
into
sbb
fs
mov
test
arpl
sbb
test
adc
fdivrl
aaa
out
push
lock
mov
cmp
fcompl
dec
pop
cs
adc
lds
lods
jae
jae
in
fwait
add
push
lods
sub
imul
jae
stc
loop
outsl
pusha
dec
push
mov
mov
push
stos
inc
pop
push
jo
outsb
lahf
cmp
adc
paddw
and
push
call
jae
jnp
adc
mov
xorb
jae
cs
sub
sub
inc
movsb
addr16
pop
das
cmp
jg
mov
das
shrb
or
inc
mov
or
iret
cmp
js
clc
insb
cld
daa
or
rcrb
push
and
jge
roll
testb
pop
imul
mov
insb
arpl
add
fisubl
xor
mov
mov
sub
clc
sbb
js
outsb
outsb
pushf
ss
jb
rcr
cwtl
push
lock
cmp
add
cs
dec
rcl
pop
inc
outsb
out
jp
je
pop
push
mov
aas
mov
outsb
outsb
iret
pusha
push
mov
ja
les
test
outsb
pop
fidivrl
sbb
xchg
sar
rol
xchg
into
mov
stos
iret
out
push
int
jge
shll
sti
or
push
xor
rcll
popl
popa
push
movsl
sbb
xchg
lock
cmc
sub
js
lcall
mov
je
aad
repz
pushf
push
mov
or
jae
add
jmp
jae
fucomip
aam
cmp
sbb
push
out
mov
rorb
popf
test
out
scas
sbb
push
cltd
ds
fstl
andb
push
xchg
and
cmp
sbb
fidivrl
divb
inc
mov
ret
out
out
sub
add
out
cs
addr16
out
mull
out
push
sti
mov
out
fimuls
shll
aaa
push
jge
pushf
out
lods
lods
sbb
inc
pop
test
jae
aam
mov
push
mov
jae
mov
je
sbb
inc
test
inc
loop
out
bound
mov
out
out
sub
mov
push
lea
iret
cltd
cmp
fcompl
shrb
roll
test
sbb
out
jae
ret
pushl
rep
push
aas
add
or
aad
adc
test
bound
dec
xlat
sahf
int
or
xchg
int
inc
adc
jp
xchg
clc
add
ljmp
out
testb
out
mov
lret
sub
cmc
shlb
sti
fidivrs
cmp
aaa
aaa
push
push
les
push
dec
xorb
cmp
dec
fidivl
push
jle
es
mov
fsubrl
roll
mov
ljmp
sub
hlt
mov
or
out
sahf
sbb
call
cs
loopne
aaa
pop
or
shl
cltd
inc
dec
dec
mov
rorl
cmp
cwtl
mov
int
std
test
xor
or
js
divl
dec
fs
ss
js
inc
jae
jae
adc
xchg
sub
push
lds
xchg
mov
cli
std
pop
outsb
out
sbb
imul
fdiv
xor
pop
orb
out
or
bound
sub
push
xor
aas
int3
aam
pop
adc
scas
clc
jge
cmp
cmp
lahf
bound
pop
mov
outsb
outsb
jno
cld
pop
or
stos
or
fcmovu
icebp
jnp
ret
jnp
push
adc
roll
sarb
mov
mov
mov
mov
mov
pmuludq
into
or
mov
outsb
outsb
shll
adc
and
out
mov
int
cwtl
dec
out
es
flds
ja
sub
adc
cmp
xor
xchg
jae
out
roll
dec
stos
inc
sarb
pop
add
pusha
jae
jae
pop
pop
and
dec
mov
aaa
rcll
jae
loop
lock
cmp
shlb
cli
stc
sbbb
clc
repz
lret
jge
js
mov
out
outsb
outsb
out
pop
mov
outsl
push
sub
push
push
push
lahf
jno
outsb
cmpsb
fwait
adc
and
cmp
add
adc
ja
clc
jecxz
xchg
inc
pop
mov
mov
and
push
mov
mov
je
rol
lods
xlat
popa
das
bound
ss
andb
test
adc
aas
call
fcompl
test
sahf
dec
mov
out
stos
mov
jbe
mov
std
jne
sub
xchg
clc
cltd
js
inc
cmp
or
test
dec
insb
outsb
outsb
out
pop
xor
clc
mov
xor
loop
fdivr
addl
dec
xor
push
dec
lahf
int
pop
ret
rep
inc
mov
sub
sbbl
adc
mov
fstpl
test
lcall
fstl
pusha
fwait
fwait
fwait
or
mov
stc
cmp
pop
test
ds
jo
test
mov
sbb
rcrl
popa
fimull
clc
cmp
aas
fwait
cmp
stos
ret
sti
add
dec
loope
jbe
mov
jae
jae
fcompl
jge
in
add
lock
fidivrl
repz
cmpb
int
in
jae
or
orl
jle
ja
frstor
adc
jno
or
stos
fcompp
cld
lock
out
icebp
adc
mov
pop
jmp
addr16
popl
pop
je
popa
dec
ds
fistl
bound
dec
fwait
sbb
cmpsl
sub
jae
jl
adc
les
jae
or
fldenv
daa
repnz
int
in
adc
hlt
repz
xchg
mov
dec
lahf
int
int
aaa
or
insb
clc
dec
insb
scas
mov
outsb
out
dec
add
enter
mov
mov
push
mov
push
loope
inc
dec
dec
arpl
aaa
aaa
mov
add
jns
jbe
orb
sub
aaa
aaa
aaa
sub
jns
call
loop
outsb
aas
mov
xchg
fnstcw
mov
pop
cmc
xor
outsb
outsb
jge
jb
sub
jmp
aaa
aaa
jl
insb
sub
jnp
popf
cld
repnz
scas
clc
sarl
pop
push
fnsave
or
sub
idivb
test
scas
push
dec
pop
loope
mov
and
sub
sti
scas
xchg
pop
dec
outsb
push
xchg
inc
int
cmpsb
push
insl
addr16
jae
je
loope
mov
cld
cmpl
add
mov
inc
jae
jae
sbb
lahf
aam
mov
arpl
or
insl
gs
xlat
mov
shrb
out
aaa
mov
int
imul
jnp
in
iret
cmp
xchg
in
fdivrl
aaa
aam
int3
xor
xchg
xlat
inc
loopne
loope
ret
xchg
push
loop
mov
xchg
and
mov
adc
jle
add
xor
pop
cmp
sub
scas
out
push
mov
test
sbb
popf
mov
mov
jmp
enter
ret
push
dec
aam
jae
jae
insl
mov
cmp
jae
mov
and
push
jl
dec
mov
push
adc
fnstcw
xchg
ds
sahf
or
lock
push
sub
jae
inc
pop
mov
xorb
cmp
rcrl
shll
ficoml
sahf
leave
in
jns
mov
push
test
pusha
or
aaa
mov
ljmp
push
jbe
sbb
jl
hlt
pop
in
cmp
lods
mov
inc
sahf
cmp
sbb
pop
and
mov
lcall
push
pop
test
lret
sub
mov
andb
jae
mov
jl
fwait
mov
mov
adc
mov
mov
fs
mov
cmpsb
mov
sub
or
test
mov
orl
push
adc
jecxz
pop
iret
dec
nop
pop
mov
or
decb
sbbl
jg
adc
test
sub
int
call
mov
jno
cwtl
fdivrl
or
cmp
sub
and
mov
mov
add
xchg
das
ds
and
enter
call
lock
clc
imul
mov
fcoml
jne
aad
sbb
in
rclb
iret
in
xchg
clc
lret
and
iret
out
mov
mov
jae
cmp
scas
dec
or
out
notb
inc
jle
pusha
subl
out
out
fbld
pushf
xchg
movsb
pop
pushl
lock
jae
inc
mov
int3
fisttpll
jae
jae
mov
and
and
jecxz
jae
cmp
pop
test
fwait
cmpsl
clc
adc
sub
addb
sub
add
xor
pop
lret
push
call
mov
sar
mov
fildl
push
ret
movb
sub
fwait
fwait
fwait
fwait
push
mov
stos
cli
clc
mov
gs
stc
or
mov
or
ret
sbb
fistl
inc
inc
or
mov
dec
ror
into
push
icebp
cmp
jp
enter
sbb
mov
out
jae
jae
insl
push
inc
xor
sub
outsb
cs
pop
subb
sbb
xchg
sub
test
jp
scas
pop
mov
sti
hlt
les
insb
out
cmp
jae
shll
jae
addr16
in
sub
or
fidivs
jae
xchg
ljmp
hlt
out
int
push
test
jae
jae
push
rorb
pop
mov
int
int
iret
mov
jb
or
fstpl
inc
push
lahf
jle
out
out
in
xor
addr16
aaa
into
add
inc
xchg
cmc
fdivrl
jb
mov
mov
cwtl
pop
mov
test
enter
bound
lods
icebp
mov
iret
scas
pop
mov
in
pop
clc
fdivrl
fs
outsl
fsubrs
dec
inc
int
int
mov
loope
fnstenv
dec
pop
out
lahf
int
jge
mov
cmp
out
js
and
mov
mov
push
adc
aas
mov
jp,pn
cwtl
roll
push
cmc
jge
cli
mov
dec
jge
jb
mov
fnstcw
pop
lods
hlt
jns
data16
int
in
dec
out
xor
mov
cmp
xchg
mov
lods
imul
ljmp
ljmp
mov
pushf
mov
sub
stos
fsubrs
scas
cli
or
mov
mov
lcall
outsb
outsb
add
adc
mov
aad
pop
outsb
outsb
outsb
outsb
mov
push
mov
push
ljmp
mov
inc
cli
fmuls
inc
into
cmp
xorb
mov
mov
mov
enter
inc
shlb
jmp
pushf
xchg
sbb
out
out
gs
cltd
scas
mov
jo
push
enter
out
mov
shlb
andb
in
ficompl
jmp
sti
mov
add
es
rorl
cld
loopne
xchg
sub
jle
adc
mov
adc
ljmp
int3
lret
ds
fiaddl
xchg
int
in
addr16
or
sbb
mov
pusha
les
int
sub
push
xchg
subl
insb
pop
cmp
fcompl
aaa
lcall
popf
push
mov
mov
mov
cmp
fwait
fwait
cs
mov
xchg
imul
xor
cmp
je
mov
loop
sub
mov
test
pop
xor
cmc
inc
push
das
or
scas
and
push
xchg
shr
incb
cmp
xlat
into
jle
push
mov
and
shrb
call
aaa
pop
pop
cmp
mov
clc
push
in
dec
dec
cmpsb
aaa
outsb
outsb
clc
adc
fnstcw
outsb
outsb
jle
lods
out
mov
add
mov
pop
test
outsl
test
out
fisubl
lcall
bound
fisubl
mov
mov
movsl
lods
or
pop
pop
adc
ss
mov
out
xorl
mov
push
out
xchg
aaa
aaa
aaa
aaa
outsl
add
js
aaa
aaa
aaa
aaa
out
shl
cmp
cmp
ret
sti
ds
aaa
inc
cmp
addr16
jae
jae
ret
pop
stos
dec
jp
dec
dec
jle
in
jae
xchg
jle
mov
bound
dec
jno
cmpsb
sub
inc
adc
sti
mov
jnp
fwait
dec
dec
sti
sahf
aaa
fnstcw
push
stc
jp
inc
mov
cmp
mov
fistl
shlb
fdivrp
sahf
dec
and
fwait
fwait
fwait
shrb
dec
lods
in
sbbb
popf
repz
cli
inc
jbe
mov
mov
xor
mov
cmp
shrb
sub
xchg
cwtl
std
fdivrl
mov
outsb
popf
add
ffree
adc
into
add
sub
les
ss
mov
jmp
daa
fsubl
rorl
outsb
ja
inc
movb
xchg
xor
pusha
mov
sahf
fdivrl
xchg
and
cli
loope
jo
adc
lock
push
inc
aad
jmp
fdivrl
lret
xchg
inc
mov
cmp
ds
push
sbb
jae
jae
xchg
je
mul
cmpb
jae
aad
rolb
push
jae
cwtl
adc
and
mov
cli
shll
bound
sbb
ret
add
mov
lock
cli
inc
lahf
shlb
and
test
xchg
jno
xorl
xchg
lret
lea
adc
pop
lds
lcall
mov
jns
sub
iret
int
sub
cmpsb
int3
out
js
add
loop
scas
xchg
loopne
dec
test
fwait
fwait
mov
add
jle
xor
push
test
or
sbb
jae
and
adc
mov
sbb
mov
outsb
clc
cmp
pop
mov
jecxz
jl
dec
testl
and
and
fisttpl
aaa
cmp
push
scas
mov
xor
fwait
or
nop
mov
cmp
lds
and
outsb
outsb
outsb
clc
mov
jne
subl
out
sti
push
add
sbb
push
xchg
push
push
sahf
out
out
inc
rorb
or
inc
rcrl
mov
dec
jb
or
fwait
fwait
fwait
pop
mov
test
pushf
push
jl
fwait
cmpsb
stc
je
dec
movsl
xchg
outsb
outsb
lahf
jnp
into
add
les
stc
sub
outsb
out
andl
outsb
outsb
outsb
outsb
or
iret
sbb
outsl
fnstsw
rcrb
and
xchg
jns
roll
mov
mov
test
jae
aaa
mov
jae
and
mov
and
mov
mov
out
mov
pushf
insb
or
sbb
xchg
aam
out
push
adcb
jno
mov
inc
in
jbe
std
adc
faddl
sub
xchg
addr16
xchg
stos
add
in
lea
xor
int
int
inc
xor
push
mov
out
mov
mov
mov
sub
insb
sbb
mulb
sbb
jb
out
sti
sbb
push
bound
dec
inc
popa
out
out
popa
es
cmp
sahf
and
out
mov
cwtl
mov
fwait
lds
jae
aad
xchg
sub
mov
ret
mov
jae
lahf
inc
mov
jb
lea
adc
aaa
mov
les
jae
dec
repnz
loopne
hlt
jnp
lea
aaa
aaa
aaa
pop
add
in
loopne
add
fbstp
cmp
sub
xor
sbb
pop
add
inc
ds
mov
pop
icebp
std
mov
dec
rcl
fcom
push
aaa
mov
pop
clc
pop
ret
in
dec
in
out
mov
test
lret
or
lock
fmull
iret
dec
out
xorb
test
ja
lock
cs
fcomi
jp
and
ret
iret
rclb
fisubrs
js
inc
or
mov
push
mov
mov
pop
mov
bound
sub
mov
jge
or
jl
pop
mov
out
mov
aaa
add
bound
cmp
xlat
xchg
cmp
cmp
shrb
push
out
out
testb
cmp
int3
add
nop
xchg
xor
mov
mov
rcrl
jge
jae
cmp
xchg
or
xor
divb
and
jns
imul
cmpb
mov
adc
rcrb
in
jae
sbb
mov
jbe
pushf
in
jge
rcrb
dec
inc
iret
int
outsl
xchg
xchg
aad
pop
jne
fdivr
push
fsubl
mov
xor
add
jae
fdivrl
ja
xor
addr16
imul
daa
xchg
ret
idivl
jmp
fistps
xchg
out
mov
xlat
or
fs
push
ret
fxtract
sbbb
cmp
mov
roll
cmp
or
test
mov
aaa
aaa
pop
out
jno
fsubp
jo
mov
xchg
mov
xchg
cmp
sbb
cmp
aas
pop
out
std
jbe
inc
mov
cs
rorl
lahf
int
dec
mov
sbb
std
addr16
jle
adc
lret
lods
bound
out
pop
mov
cld
clc
test
adc
inc
fisttps
jle
and
or
out
notb
bound
out
dec
shrl
cwtl
xchg
jmp
jns
pop
push
aas
fildl
or
and
jne
sbb
test
xor
or
cli
cmpsb
sub
ret
mov
inc
pop
cli
sub
ljmp
in
cmpsl
clc
fnstcw
mov
mov
and
lods
pop
subb
outsb
outsb
outsb
repnz
mov
ss
outsb
outsb
movsb
push
out
push
lahf
jno
les
movsl
xchg
jle
test
loopne
mov
cmpl
jbe
xchg
pop
loop
cmp
aam
adc
clc
pop
hlt
mov
push
dec
fdivl
push
ss
xor
sub
outsb
outsb
insb
cwtl
stos
jle
push
sub
mov
outsb
outsb
and
mov
sub
outsb
inc
mov
shl
lds
js
jge
push
inc
je
movb
or
adc
mov
mov
icebp
push
insb
mov
out
clc
fdivrl
fldenv
js
lcall
outsb
pop
inc
stos
into
jne
test
pop
icebp
pop
hlt
movsb
sub
ja
loop
mov
fsubl
and
xor
call
rcll
cmpsb
sub
mov
mov
jbe
aad
clc
adcb
xlat
shr
rclb
fildl
dec
jecxz
dec
mov
sub
sbbb
popa
fimull
mov
mov
flds
sbb
pop
bound
subl
or
cmp
fwait
fwait
fwait
cmp
mov
shlb
sub
and
fwait
xchg
mov
out
add
lea
arpl
cmp
lcall
fimuls
mov
sub
jb
jae
rcr
in
add
mov
pop
iret
mov
and
mov
inc
sarb
divb
dec
sub
mov
mov
iret
out
push
sbb
stc
push
jae
insb
xor
stos
ret
jmp
jne
adc
lcall
sti
jle
push
int3
das
notl
repz
mov
pusha
ret
sbb
mov
jb
lds
jge
repnz
mov
dec
mov
add
popf
pop
movsb
out
in
in
mov
or
mov
frstor
cmp
ja
fwait
fistl
mov
pop
push
jge
cmp
lahf
cld
cmpsl
loopne
hlt
xchg
mov
hlt
subb
or
or
mov
push
bound
jo
sub
test
mov
aam
push
mov
in
int
push
pop
es
aaa
adc
sub
sbb
or
aaa
aaa
mov
sahf
cli
push
or
xor
push
lea
jge
and
arpl
cld
popa
pop
jbe,pt
std
insb
out
adc
dec
adc
out
jl
je
out
mov
test
jmp
lcall
out
cmpsb
js
fidivs
bnd
in
add
out
or
mov
hlt
jnp
mov
xor
push
lahf
hlt
outsb
imul
mov
mov
xchg
mov
int3
pop
fwait
and
or
cmpb
outsb
outsb
outsb
in
nop
out
mov
or
cmp
rcrl
mov
mov
jecxz
adc
adcb
out
fistps
mov
test
les
xchg
test
adc
push
aad
mov
pushf
mov
xchg
stos
out
out
inc
mov
push
aam
cmc
adc
out
out
data16
test
xchg
or
mov
out
out
dec
add
lahf
xchg
dec
enter
out
out
int3
cmp
imul
mov
insl
xchg
stos
dec
jge
push
xchg
mov
jae
cltd
pop
pop
lock
repnz
mov
popf
dec
dec
stos
or
dec
mov
clc
in
sbb
mov
int
arpl
xchg
push
mov
fisttpll
outsb
outsb
aas
stos
fmull
xor
lret
sbb
push
cmpsl
jne
outsb
fimuls
loop
fucomi
lods
mov
es
or
xlat
dec
nop
popf
jbe
add
js
dec
xchg
test
out
adc
and
addb
cmpsl
icebp
loope
sbb
pop
and
and
xor
call
test
sub
jae
jae
cmp
scas
addb
pop
cmp
push
adc
sbb
dec
aas
push
cld
cwtl
inc
sti
push
ja
out
paddd
sar
insb
sub
rolb
js
mov
js
movsb
test
aas
addr16
jae
add
inc
jp
add
pop
pop
icebp
xor
sub
xchg
lcall
int
aas
cld
jns
lock
mov
repz
mov
rorb
in
cmp
dec
sahf
nop
sub
data16
int
popa
mov
icebp
fwait
mov
mov
int
dec
cmp
shll
xlat
out
iret
int
cmp
addr16
pop
aas
lods
sub
jmp
mov
dec
sub
mov
enter
xchg
jns
and
hlt
mov
mov
sub
add
pop
push
inc
ljmp
ret
push
jle
mov
push
or
mov
add
jl
xchg
cmc
sbb
add
adc
fcmovbe
jne
popa
sub
out
push
inc
cld
push
adc
mov
jecxz
mov
daa
dec
sbb
nop
jb
xor
popf
daa
out
int3
int
dec
lahf
in
jg
pop
pop
or
mov
sbb
pop
in
ss
int
push
lock
imul
loope
push
es
xchg
ss
xor
aaa
pop
je
add
scas
cld
add
outsb
test
testb
push
xchg
mov
dec
mov
or
iret
fwait
loopne
pop
pop
inc
cwtl
xor
jp
adc
int3
aaa
mov
jecxz
inc
sub
adc
hlt
lahf
xor
dec
sbb
sub
insb
cmp
cmp
and
lds
out
int3
xabort
add
mov
divb
mov
addb
cltd
pop
cltd
mov
pop
xchg
adc
cmp
sub
les
shrb
outsb
subb
pop
stos
repz
jmp
cli
insb
outsb
outsb
lock
push
jmp
adc
fdiv
fyl2x
or
or
xchg
mov
inc
mov
jno
cmp
loopne
in
fwait
fwait
fwait
fwait
xchg
lea
scas
lcall
fwait
dec
mov
mov
or
shr
xor
jo
dec
cli
mov
inc
push
cmp
ret
test
mov
mov
dec
stc
add
dec
cmc
out
divb
add
jp
jbe
or
add
push
ret
inc
movsl
jb
aad
add
mov
sbb
sub
push
insl
ljmp
xchg
out
mov
push
ret
mov
jge
lahf
xchg
iret
pop
ds
mov
sbb
lods
fcmovbe
sub
jecxz
int3
jnp
jge
lahf
sub
adc
pop
mov
mov
ds
aaa
pop
mov
test
jno
and
mov
pop
inc
test
aaa
aaa
cmp
iret
mov
xchg
sbb
sbb
out
jg
imul
mov
mov
sbbb
or
repnz
outsb
lahf
fcmovnbe
sub
enter
lods
pop
push
xchg
mov
xchg
outsb
outsb
out
cli
adc
inc
lea
popa
jmp
pop
aaa
mov
js
dec
jo
sbb
sbb
dec
int
ds
shr
xchg
jae
or
shll
dec
fcoms
pop
fs
fidivl
cmpsl
sbb
xor
arpl
aad
dec
cld
dec
push
jne
pop
shlb
int
int
adc
ljmp
enter
mov
insb
pop
inc
dec
out
push
daa
dec
insl
pusha
cmp
fwait
fwait
fwait
ret
popf
addr16
dec
and
out
scas
ljmp
xchg
mov
fmull
ss
pop
div
mov
outsb
cs
aam
mov
and
ja
pop
stos
loopne
outsb
pushf
jg
pop
mov
cmp
aam
cmp
in
pop
pop
fwait
sbb
push
jbe
popa
mov
out
inc
sbb
cmp
scas
sarb
jmp
or
inc
loop
mov
adc
jnp
sub
xchg
inc
cwtl
mov
mov
mov
je
addr16
sub
lock
pushf
jno
push
xor
xor
stc
xor
lock
and
cmp
and
je
aaa
pop
jge
fmulp
sahf
inc
cmpb
lcall
lret
into
xchg
mov
inc
adc
mov
jge
xchg
xchg
fcomip
add
mov
inc
mov
int3
ficompl
mov
jae
jae
xchg
add
adc
iret
pop
addr16
jae
pop
xor
xor
add
pop
mov
pop
cmp
adc
shrl
mov
cmpsb
inc
fdivrl
push
shlb
inc
sub
xchg
clc
faddl
push
xchg
mov
outsb
outsb
outsb
idiv
loope
mov
lahf
daa
jae
inc
mov
mov
fdivs
jae
in
jp
cmc
test
ficoml
jecxz
sub
in
addr16
gs
push
inc
sub
mov
sub
jg
lcall
jle
test
pop
stos
or
clc
jg
xor
sbb
xor
cmp
std
insb
outsb
mov
xor
pop
cmc
scas
and
shrb
out
push
scas
repz
mov
rcr
rcrl
cmp
fwait
jmpw
jae
sub
mov
cmc
scas
xor
pop
jae
adc
push
xor
outsb
outsb
inc
inc
shl
mov
enter
dec
scas
lret
clc
insb
outsb
sbb
subb
fdiv
lret
cwtl
mov
imul
xor
fscale
mov
icebp
jle
divb
mov
sbb
jo
f2xm1
add
data16
cmp
outsb
pop
xchg
pop
jmp
aas
bound
test
fstps
mov
pop
add
pusha
mov
or
pop
mov
lret
mov
rcr
add
jl
inc
outsl
jmp
ds
aaa
aaa
or
xchg
push
jge
pop
icebp
in
lahf
fwait
fwait
cmp
out
xchg
mov
insb
fcmovne
sarb
aas
or
outsb
lcall
inc
leave
lcall
xor
add
xchg
and
loopne
mov
clc
xchg
or
js
adc
cmp
aaa
mov
sti
or
out
notb
negb
insb
sbb
aaa
inc
sub
inc
movsl
push
jge
lahf
lods
jo
aaa
aaa
aaa
mov
movsb
out
aad
aad
mov
insb
out
aaa
aaa
aaa
aaa
mov
sub
fistl
addr16
cmp
stos
xor
xchg
in
in
int
int
fcomi
test
dec
js
jbe
outsl
mov
negb
add
lret
add
ss
mov
xorb
jae
xor
outsb
scas
clc
fstps
push
add
std
pop
add
sahf
icebp
ss
out
sub
insb
xchg
fwait
adcl
pop
shl
and
std
ds
cmp
insb
and
int
sti
inc
cmp
sahf
lds
mov
cmp
loop
cmp
mov
jecxz
bound
fcmovne
mov
adc
ret
clc
pop
mov
test
jne
jae
fwait
fwait
fwait
adc
dec
add
sub
add
fistps
xorb
cwtl
scas
xchg
icebp
ds
and
mov
ss
ja
push
jp
out
mov
in
add
adc
jae
or
push
and
sahf
das
in
pop
loopne
jae
fmul
or
lcall
aaa
pop
adc
or
sub
cli
dec
xor
lcall
jle
dec
pop
mov
cmp
or
dec
clc
fsubr
frstor
rorb
xchg
fimuls
outsb
outsb
outsb
out
and
divl
adc
fwait
sar
cld
insb
outsb
mov
pop
dec
iret
outsb
mov
xor
jb
movsb
or
xchg
inc
mov
fsubrl
orb
hlt
popa
loopne
jmp
pop
sub
xchg
mov
cs
and
cli
faddl
push
imul
pop
push
iret
idivb
xchg
mov
mov
sahf
dec
ss
push
or
daa
push
fcmovbe
sahf
cld
jo
cmp
push
or
fxtract
stos
scas
inc
je
inc
jae
int
int
adc
imul
daa
jge
mov
lahf
int
push
dec
push
mov
mov
movsl
iret
iret
xchg
mov
divl
lock
push
mov
mov
fwait
lods
xor
stos
in
test
mov
rorb
fistpll
mov
push
lock
add
ret
mov
aam
fwait
fwait
sub
andb
mov
jl
lahf
fwait
iret
ret
mov
loop
clc
sarl
lcall
lea
xor
push
jle
loop
xchg
ficompl
int3
repz
cmpsl
xor
mov
popf
cs
jp
imul
push
in
sbb
or
xchg
rol
and
mov
fwait
out
add
leave
fs
mov
pop
xchg
fisubs
push
cmpsl
ljmp
xchg
es
pop
fmul
lds
popa
pushf
notb
jge
ret
and
or
or
leave
add
lahf
flds
cmp
fcoml
inc
mov
je
aas
mov
jl
cld
scas
sbb
xchg
jo
ja
into
out
js
mov
call
std
insb
outsb
outsb
sti
cmc
stc
insb
stos
jecxz
xchg
mov
insl
hlt
inc
into
jb
loope
push
add
xchg
sub
daa
bound
int
int
add
ret
lods
cwtl
sbb
mov
fsubrp
mov
add
mov
mov
rolb
mov
movsb
repz
ret
les
jae
jle
or
fisubl
scas
or
outsb
lret
and
fsubl
out
ljmp
or
imul
imul
jae
jae
iret
jnp
mov
cltd
add
int
in
pop
xchg
cmpb
xor
sbb
out
lahf
adc
mov
mov
outsl
jg
mov
pop
cli
mov
cld
insb
outsb
and
ss
sbb
mov
in
jne
outsb
outsb
outsb
aas
fs
ljmp
pop
xchg
xorb
add
xor
test
inc
mov
out
idivb
push
pop
xchg
inc
jl
out
out
ds
push
cmp
pop
pop
iret
push
jge
sbb
cltd
fcomi
in
shlb
sahf
xor
cmp
sahf
fwait
dec
lds
jge
aaa
aaa
ja
scas
or
out
pop
jns
aaa
aaa
aaa
push
pop
mov
jb
mov
cmp
push
movsl
xchg
les
push
sbb
jo
sub
aas
sbb
push
sbb
mov
dec
call
xor
mov
in
clc
inc
push
hlt
fwait
das
xchg
lahf
adc
adc
je
adc
repz
mov
xor
insb
mov
inc
dec
or
in
fdivr
insb
outsb
add
sub
add
pusha
ret
stos
xchg
jp
jae
repz
jle
cs
fdivs
push
in
push
pop
mov
stos
test
jmp
adc
clc
pop
cmp
dec
dec
movsb
dec
rcrb
cmc
test
insb
fcoml
nop
shrb
adc
jle
or
test
add
mov
mov
xchg
popf
pop
test
stos
adc
sub
ss
adc
sahf
add
xchg
cli
popa
mov
cwtl
imul
jecxz
mov
fdivp
mov
arpl
mov
push
cmpb
cld
cmp
in
fwait
xchg
jmp
fdivrl
loopne
inc
daa
aas
cmp
in
iret
mov
xchg
clc
dec
clc
fdivl
testb
int
jmp
pop
rcr
or
into
pop
or
mov
pop
out
les
arpl
jae
push
andl
push
mov
inc
mov
out
imulb
xchg
pop
xchg
lret
sbb
mov
stos
xchg
dec
sbb
mov
mov
mov
pop
mov
or
and
or
orb
mov
mov
outsb
outsb
outsb
adc
pop
hlt
lods
mov
ret
xchg
mov
mov
rcll
outsb
inc
aad
adc
rcll
mov
popl
loop
test
movsb
or
dec
out
push
jae
notb
xchg
aaa
aaa
pop
jl
jecxz
xor
mov
or
rcl
cmp
xorl
jns
sahf
in
daa
loopne
adc
add
outsb
js,pn
dec
fmull
pop
movsl
push
addr16
mov
mov
mov
out
mov
jecxz
test
in
mov
dec
aaa
aaa
aaa
aas
dec
int3
inc
int3
lock
fisttpll
fsubl
pop
lahf
inc
cmp
jo
test
xchg
aad
inc
cmpsb
cwtl
test
lahf
jbe
cmp
cs
aam
inc
insb
filds
fwait
sub
inc
test
mov
xchg
xlat
mov
movsb
mov
rcrb
push
insl
cmpsl
or
pop
addl
int
lahf
fwait
and
sub
sbbb
cltd
or
in
aas
fldt
inc
sub
int
adcl
testb
int
jo
into
fmull
enter
pop
mov
rorl
pusha
xorl
es
jnp
es
mov
hlt
ljmp
jae
ljmp
sub
shll
aaa
jle
pop
js
lods
fucomi
xor
mov
pop
and
dec
jne
adc
iret
mov
lret
fisubl
xor
outsb
or
pop
stos
adc
std
sahf
into
inc
push
out
sub
adc
inc
icebp
repnz
sbb
or
out
pop
mov
mov
sbb
jno
mov
and
pusha
cmpsl
mov
push
aaa
aaa
aaa
mov
sahf
cld
fildl
jmp
loop
adc
inc
imul
fdivrl
mov
cmc
add
dec
push
sbb
insb
outsb
out
js
inc
lods
jle
mov
aam
push
enter
hlt
test
mov
jmp
push
dec
pop
scas
clc
fnstcw
or
xchg
fs
inc
iret
lods
loope
mov
and
into
orb
cmc
jno
daa
rcll
mov
mov
test
adc
and
mov
inc
xchg
push
and
xchg
ds
jp
cs
shrl
out
push
jne
xchg
push
add
sub
cmp
xchg
adc
inc
int
int
push
sub
stc
sbb
iret
pop
inc
popf
pop
cmp
scas
shr
mov
push
and
sahf
cmp
aam
iret
out
xor
xor
push
sub
das
adc
clc
insb
xchg
and
clc
and
out
idivb
pop
sti
test
or
in
push
add
inc
out
ljmp
jle
sub
rorb
mov
addr16
jecxz
pop
push
mov
lock
xchg
stos
dec
aaa
mov
jmp
and
cmp
aaa
aaa
aaa
aaa
xor
les
in
push
outsl
mov
or
fwait
fwait
sbb
arpl
mulb
clc
sbb
push
enter
mov
lods
dec
jp
std
fimuls
out
cmpsb
scas
xor
jnp
popa
dec
xchg
or
dec
out
sbb
cmpsb
iret
in
jo
add
popf
test
negb
jmp
iret
fisttps
std
insb
xchg
testb
mov
or
jl
aaa
jo
mov
xor
mov
cmp
bound
iret
out
das
rcr
and
insb
das
mov
mov
pushf
sub
icebp
in
addr16
and
push
xor
out
xor
sahf
int
int
dec
jns
push
adc
mov
or
adc
mov
jno
push
int
add
jbe
dec
dec
clc
xor
dec
movsl
pop
or
int
fsubr
int3
push
stos
stos
jbe
notl
mov
pop
ret
loop
mov
mov
fdivr
or
xchg
ja
cmp
inc
sbb
sti
mov
jle
outsb
cmp
sti
bound
xor
pop
cmp
inc
aaa
mov
pop
cs
and
xchg
addr16
insb
dec
fwait
jl
add
aaa
lods
lcall
mov
cs
ds
loope
jp
or
or
pop
or
shl
out
mov
test
outsb
mov
popa
gs
cmpsb
adc
insl
and
mov
lahf
int
int
ljmp
push
jle
cmp
xchg
clc
test
sti
jb
lahf
fsub
arpl
lea
cmp
loopne
fstp
iret
jbe
stos
stos
adcb
mov
inc
hlt
fwait
fwait
fwait
fwait
outsb
ret
jle
pop
mov
test
addl
leave
sbb
xchg
or
scas
in
cmc
stos
and
outsb
outsb
cmpsb
cmp
scas
icebp
popa
fdivs
add
outsb
outsb
or
cmpsl
out
pop
popf
pop
aaa
jl
outsb
outsb
enter
mov
pusha
xor
data16
aaa
pop
push
xor
mov
sub
hlt
mov
push
fwait
mov
sub
xchg
or
rclb
mov
std
cli
sub
cwtl
mov
add
pop
mov
add
pop
jmp
add
pop
repnz
popa
sub
jmp
cmp
push
loop
jae
aam
mov
sahf
xor
dec
jo
fucomi
insb
sbbb
or
xchg
fwait
fwait
fwait
fwait
mov
mov
out
add
jle
fwait
and
mov
incb
dec
sahf
insb
js
rclb
lock
mov
push
les
jg
cld
mov
jecxz
inc
aam
pop
bnd
lods
push
jmp
loopne
sti
xor
enter
in
inc
bnd
xor
and
je
adc
or
mov
in
addr16
pop
adc
or
or
adc
iret
int
mov
cmpsb
test
pusha
std
hlt
push
icebp
add
jl
pushw
mov
out
ret
sahf
into
push
adcb
cmp
sbb
xor
push
mov
hlt
push
outsb
lahf
fcomi
or
push
cmp
mov
lock
dec
lcall
ror
call
jns
fs
xchg
jecxz
mov
mov
iret
sbb
cmp
dec
mov
ds
bound
xchg
xor
idivl
sahf
adc
and
mov
sub
sub
out
cmpl
mov
xor
xchg
xorb
xor
adc
dec
ret
pop
dec
jno
fildl
inc
lods
xchg
and
xor
sbb
pop
hlt
lahf
clc
jecxz
xchg
call
loope
cmp
or
push
daa
mov
ds
iret
mov
ja
pop
and
test
xchg
fdiv
int
sbb
outsb
fstps
mov
addr16
adc
pop
pop
pop
sbb
movsl
icebp
inc
adc
mov
bound
push
in
subb
dec
mov
sub
pop
cmp
or
mov
ja,pn
xor
sahf
fwait
fwait
cmp
sub
xlat
aam
adc
js
fwait
ss
sub
cmp
sahf
push
aam
sbb
add
dec
mov
sti
fcompl
bound
inc
mov
insb
cli
dec
cmp
add
cli
dec
adc
jbe
ja
adc
bnd
iret
push
mov
int
int
ja
scas
pushf
loopne
jbe
pusha
shll
fcompl
adc
adc
jg
pop
outsb
aas
loopne
test
lock
sbb
hlt
xor
cmp
outsb
outsb
outsb
outsb
mov
icebp
addb
outsb
outsb
ljmp
test
mov
sbb
repz
sbb
loopne
xlat
out
mov
fsubl
cs
lock
das
mov
frstor
lea
add
stos
and
rclb
int
aas
loope
fcoms
inc
cs
lds
add
ss
sub
loop
sbbl
fwait
fwait
fwait
sub
jns
bound
mov
pop
fisubl
inc
les
cmp
mov
mov
out
sbb
xor
mov
sbb
adc
aaa
aaa
push
push
push
imul
stos
sbb
aaa
sbb
or
and
fdivr
daa
push
or
jns
int3
cwtl
outsb
outsb
outsb
scas
add
jp
pop
ljmp
ror
ljmp
dec
sub
aaa
aaa
aaa
mov
dec
fisttpll
test
in
ds
aaa
sbb
in
cmp
fsub
push
lods
negl
repz
sub
cmc
insb
outsb
clc
fnstenv
inc
stos
repz
push
cmp
xchg
out
aaa
mov
lock
mov
cmp
aaa
cmp
outsb
cmc
enter
mov
mov
or
clc
iret
out
not
push
jnp
pop
rolb
sbb
pop
aam
ret
xchg
fmul
dec
fdivrs
test
nopl
dec
test
jp
les
inc
jmp
imul
inc
jecxz
sahf
ss
mov
dec
sub
sbb
in
or
jnp
jge
sti
sbb
sbb
fcompl
outsb
and
rcr
or
lret
pushl
mov
xor
mov
ds
mov
cmp
cmp
repnz
lcall
sti
add
push
mull
pop
test
sub
ljmp
mov
ja
out
sub
inc
push
mov
adc
movb
jle
mov
and
lock
jae
jae
sbb
pop
xorb
push
movsb
cltd
add
addr16
dec
pop
out
in
push
sarl
pop
orb
jle
pop
push
insb
or
outsb
outsb
outsb
outsb
in
test
mov
outsb
outsb
outsb
outsb
in
mov
icebp
mov
pushf
pushf
outsb
add
popa
inc
dec
or
sbb
dec
ds
adc
push
ret
je
mov
fwait
bound
lods
or
dec
dec
cli
out
testb
mov
out
pushl
lods
fnstcw
pop
lret
stc
daa
idivl
fwait
fwait
fwait
dec
sub
cld
sbbb
fidivl
adc
sub
dec
inc
sbb
cmc
push
fisubrs
add
inc
sbb
push
dec
das
xchg
mov
addl
dec
fs
fwait
fwait
fwait
or
in
adc
in
sbbl
add
mov
dec
outsb
outsb
outsb
lahf
shll
adc
push
adc
mov
jge
outsb
outsb
cmp
mov
and
mov
dec
xor
jnp
dec
ret
pop
jns
out
out
test
mov
inc
js
push
cmc
ror
sub
xchg
sub
ss
std
xor
jo
pop
xchg
cli
std
lret
loopne
hlt
push
adcb
insb
das
mov
fs
pop
mov
xchg
stc
jp
test
outsb
test
inc
cmp
sbb
jae
iret
mul
mov
mov
ret
sbb
jbe
jge
jae
jo
popf
cmp
mov
xchg
lcall
pop
mov
iret
out
fistps
rcl
movsb
or
sbb
xchg
jo
cmp
les
notb
sbb
push
repz
pop
leave
and
cmp
xchg
int
lahf
frstor
outsb
xchg
mov
aaa
aaa
aaa
mov
mov
cmc
scas
add
xchg
push
or
aaa
dec
sub
fimull
pushf
sub
mov
mov
jo
ds
sahf
add
or
js
cmp
ja
pop
icebp
inc
js
and
and
cmpb
fldcw
sbb
inc
das
loop
fsubrs
add
fwait
fwait
fwait
push
dec
mov
or
sub
out
out
daa
ds
adc
xor
rolb
jle
and
dec
mov
push
cmp
addr16
add
stc
mov
push
ret
inc
mov
mov
or
test
aas
out
mov
mov
pop
jno
adc
cwtl
push
outsb
pop
cmp
xor
cli
insb
mov
pushf
outsb
outsb
outsb
outsb
shlb
shr
das
stos
xorl
dec
in
lods
mov
cmpsl
cmp
mov
sub
push
dec
jp
sbb
add
les
es
movb
or
js
jo
add
lock
inc
call
daa
out
mov
fwait
fwait
fwait
stos
cmp
sahf
pop
clc
popf
icebp
leave
cmp
fwait
fwait
push
dec
pop
stos
jnp
adc
jge
cmp
sub
inc
in
pop
sub
in
leave
sbb
andl
lods
mov
xchg
test
mov
out
dec
mov
mov
or
mov
jb
cmp
arpl
out
imulb
sahf
add
test
pop
add
xor
add
imul
mov
inc
cwtl
mov
xchg
lods
out
jbe
mov
jae
mull
fnstcw
out
out
xchg
sti
jecxz
xor
or
mov
jbe
mov
int
jg
imul
rcl
jnp
ds
aaa
stc
mov
ret
sub
loopne
fcmove
adc
pop
iret
out
dec
sbb
jb
dec
push
gs
test
int
out
and
adc
and
ljmp
xchg
enter
jp
test
in
mov
push
mov
clc
adc
jecxz
bound
neg
xchg
rcrb
movsb
cmp
scas
ljmp
xchg
iret
cltd
dec
int
cmp
ja
xchg
jge
aaa
jl
negb
sbb
fisubs
cli
and
aas
test
xchg
mov
lret
mov
xchg
iret
out
mov
sbb
mov
rolb
adc
loope
xchg
mov
outsb
outsb
outsb
lahf
stos
fwait
jmp
call
subb
mov
mov
daa
mov
orl
mov
mov
jb
sub
adc
push
push
lock
xlat
cmp
lock
fistpl
out
fstpt
loopne
add
xchg
ljmp
ror
add
push
pushf
xchg
int3
mov
ror
xchg
inc
rorl
mov
scas
fidivl
jg
inc
mov
xchg
icebp
xor
test
dec
in
cmpsl
add
lock
push
testl
fidivs
repz
mov
insb
jae
sti
es
mov
mov
jae
pop
pop
ficoms
mov
mov
ljmp
bswap
push
shl
repnz
push
mov
mov
ret
imul
out
shrl
cmpsb
arpl
lret
lods
out
cmp
in
stos
inc
push
jge
aaa
mov
jns
outsl
js
pop
or
mov
pop
inc
shlb
push
repnz
add
ficoml
nop
adc
shrb
popf
lcall
popa
or
call
mov
mov
cmp
sbb
enter
dec
inc
jle
aaa
fldcw
cwtl
inc
fdivrl
xorl
nop
insb
test
es
mov
and
dec
mov
inc
dec
jbe
mov
lods
sbb
rcrl
test
xchg
or
je
mov
pop
loopne
in
rclb
fiadds
dec
mov
mov
mov
or
addr16
mov
rorl
push
call
push
idivb
iret
xchg
popa
cmc
sub
in
pusha
out
std
aas
dec
mov
test
xor
lahf
fwait
fwait
fwait
setae
lret
je
cmp
dec
inc
jecxz
int
int
out
inc
mov
jl
xbegin
pushf
inc
xor
mov
cli
inc
ds
add
xchg
clc
cmp
fwait
fwait
fwait
stos
pusha
ror
sti
jp
pop
jae
fwait
fwait
fwait
fwait
mov
cwtl
push
pusha
xchg
cmpsb
js
fwait
fwait
fwait
fwait
mov
push
test
gs
or
xor
out
idivb
mov
movsb
fisubl
sub
cmpb
out
jns
fsubl
enter
xchg
push
xchg
icebp
outsb
outsb
lahf
fwait
les
cmp
bound
das
pop
inc
ds
insb
and
sbbb
mov
jmp
es
add
jle
cmp
out
xor
fs
fildll
cwtl
cmpsb
sub
inc
push
mov
mov
mov
jbe
aam
rcrl
jae
shlb
pop
dec
xchg
lea
dec
cmp
lahf
mov
andb
ss
pop
push
inc
sti
insb
popl
js
jb
aam
xor
push
lahf
rcl
xchg
and
movsb
pusha
dec
inc
xchg
fwait
fwait
fwait
fwait
rcr
addb
pop
aas
repz
fwait
fwait
fwait
in
stos
std
test
and
dec
lahf
enter
popa
inc
xor
aaa
lahf
fstpt
out
test
xchg
repz
frstor
fwait
stos
ds
and
nop
add
and
xchg
mov
sbb
ljmp
out
testb
test
push
inc
out
out
mov
xor
cli
out
jae
push
fisubs
stos
inc
loop
ret
xchg
add
scas
outsl
and
or
jne
arpl
stos
or
in
jmp
jge
pushf
push
fidivrs
addr16
xchg
mov
in
mov
stos
mov
push
roll
cmpb
cld
insb
outsb
outsb
cli
dec
ret
mov
out
dec
or
xor
fsubl
clc
mov
int
cmp
in
jae
mov
mov
sti
imulb
jnp
mov
sbb
pop
add
xchg
inc
dec
or
ss
adc
stos
xor
mov
clc
repnz
sub
push
shlb
adc
loop
mov
int
je
movsb
bound
jecxz
or
cwtl
sbb
inc
adc
daa
lods
or
mov
test
mov
mov
and
sbb
push
xlat
and
int
rol
push
adc
mov
pop
xor
cmc
xor
and
dec
loope
ljmp
jae
jae
jnp
ds
push
mov
iret
jmp
leave
lods
pop
dec
and
ljmp
arpl
in
inc
leave
flds
outsb
outsb
dec
hlt
xchg
jne
pusha
in
outsb
adc
movsb
jle
std
mov
push
pop
jno
pop
adc
ja
xor
insb
lahf
fcomi
add
xor
arpl
add
cmc
xchg
jmp
es
stos
push
push
sahf
stc
sbb
les
dec
and
inc
sbb
movsb
push
out
add
lea
nop
outsb
outsb
cs
pop
push
fcoms
xor
outsb
push
mov
loopne
lcall
add
es
mov
jae
iret
out
mov
jae
fucomi
lret
and
jae
mov
ja
mov
mov
mov
adc
jns
test
test
jbe
out
mov
cwtl
push
lock
ds
hlt
push
jno
xchg
inc
fidivl
jae
ljmp
pop
jecxz
inc
mov
jae
dec
adc
xor
fdivrl
aaa
push
cmp
push
mov
cmp
xchg
sub
je
dec
mov
loop
jp
cmp
jecxz
inc
mov
mov
mov
dec
inc
es
and
jge
clc
loope
push
les
int
xlat
cwtl
fs
or
aaa
mov
xor
push
fstpl
pop
aas
cld
aaa
aaa
aaa
aaa
rolb
xor
pop
inc
lock
loop
sti
fdivrl
aaa
xchg
clc
xchg
inc
xchg
sbb
push
out
jmp
mov
mov
sbb
sub
jno
and
sub
adcb
push
cmp
out
mov
xor
aaa
std
pop
std
fcompl
or
jge
imul
ficoms
and
aam
inc
adc
sbb
cmp
shl
mov
rclb
xchg
stos
clc
push
iret
out
out
jns
fadd
jmp
mov
lret
test
xchg
lret
inc
sbb
call
pop
fcomi
imul
pushf
adc
sahf
mov
scas
cld
stos
mov
dec
xor
push
insb
loope
inc
mov
cmp
mov
dec
push
pop
cmp
inc
add
repnz
shlb
push
dec
pushf
ret
neg
fcompl
cmp
dec
mov
dec
fbstp
loopne
mov
pop
clc
jbe
shlb
pop
mov
cli
pop
fs
ret
mov
in
adc
mov
ret
iret
mov
inc
xchg
mov
inc
loope
jae
aas
jle
sub
dec
jmp
pop
out
inc
xchg
sub
enter
stc
cmpsl
mov
ds
lret
fisubrl
cmp
sub
add
adcl
shlb
inc
cmp
dec
mov
loope
icebp
scas
and
testb
sbb
adc
in
mov
mov
xchg
add
popa
adc
out
out
bound
repnz
xchg
xor
cld
jnp
insb
outsb
outsb
lahf
fisttpl
cmp
int
addr16
cmpsl
ja
ljmp
addl
inc
mov
repz
pop
jb
in
daa
lock
dec
adc
add
xchg
or
mov
int
rorb
cmp
rcrl
in
pop
aaa
aaa
aaa
aaa
mov
mov
shll
aaa
aaa
aaa
aaa
mov
mov
and
cmp
ds
dec
push
cmp
sahf
stos
gs
sahf
fwait
fwait
fwait
in
cltd
xchg
daa
xor
inc
sbb
push
mov
pop
mov
rol
mov
mov
jno
mov
add
icebp
pop
lock
mov
popa
adc
std
mov
mov
rcrl
out
test
test
js
sub
int
pop
or
cmpsl
rorl
outsb
cs
jp
sti
add
out
outsb
outsb
outsb
outsb
mov
imul
push
dec
ljmp
and
lock
jno
cwtl
dec
adc
inc
lret
fcompl
out
mov
pop
xorb
sub
out
cmpsl
mov
mov
push
pop
shll
aad
clc
fistl
pop
jo
sub
in
mov
mov
sahf
adc
mov
out
enter
cmp
pop
hlt
orb
mov
or
fidivl
shlb
sub
out
testb
pop
hlt
dec
jne
test
mov
push
subb
incb
js
xor
sbb
inc
in
repnz
mov
adc
mov
add
pop
or
add
pop
mov
in
or
jge
das
pop
mov
mov
mov
mov
insl
dec
inc
jo
or
xor
fmuls
iret
iret
mov
xor
out
fimuls
inc
clc
mov
adc
pop
fbstp
out
dec
popf
cmp
rorb
mov
mov
jae
scas
sub
inc
lret
negl
sbb
inc
std
jg
jmp
lret
mov
xchg
and
jbe
shlb
mov
insb
out
dec
ljmp
cmp
push
mov
sub
icebp
xor
or
lock
jecxz
dec
pop
das
test
clc
bound
rcrl
dec
sahf
int
int
fmuls
xchg
and
jle
cmpsb
xchg
adc
xor
fcoml
adc
push
aaa
js
clc
inc
cmp
dec
into
fiaddl
fdivr
ret
or
addr16
inc
popa
dec
mov
adc
xor
jne
lahf
int
std
jnp
pusha
cld
pop
enter
mov
into
out
outsb
push
dec
hlt
clc
mov
aad
cmpsb
mov
div
popf
add
inc
and
mov
cmp
mov
sub
addl
mov
aam
enter
jae
xchg
push
ja
push
ljmp
ja
jecxz
rolb
inc
sub
or
aaa
aaa
aaa
mov
dec
ud2
mov
dec
jbe
outsb
pop
cwtl
xchg
es
sub
inc
shl
iret
add
rcll
push
hlt
dec
sub
jge
lock
lcall
push
lock
call
cwtl
dec
jge
mov
mov
mov
add
mov
rcrl
push
and
mov
stc
out
out
pop
negl
dec
xchg
jne
cmp
out
stc
xor
cmc
jp
les
aaa
mov
jb
add
mov
test
xor
and
out
mov
sub
mov
iret
out
inc
iret
div
jne
lret
dec
lock
idivb
sbb
and
in
push
jp
in
bound
xlat
iret
and
adc
or
mov
shlb
jae
enter
iret
out
out
mov
aam
xor
sarb
lahf
int
int
push
add
bound
inc
mov
sub
sahf
sbb
subl
loopne
push
add
cld
loope
add
maskmovq
mov
dec
sbb
popa
push
dec
dec
jg
por
push
or
sub
fwait
jle
fildll
pop
push
sbb
enter
push
sub
xchg
mov
fs
fwait
fwait
cmpsl
jp
mov
out
sar
aam
fimull
out
xor
gs
jl
xor
clc
gs
fwait
fwait
fwait
fwait
jmp
adcl
cltd
fwait
fwait
fwait
fwait
inc
and
mov
xor
fwait
fwait
or
push
in
int
in
stos
jnp
test
stc
inc
and
inc
ds
int
mov
cli
xor
stos
cmp
test
dec
inc
jbe
jae
jae
push
mov
into
adc
pusha
int
int
das
jp
mov
int3
sbb
inc
call
int
inc
aad
jae
das
outsl
sbb
out
loope
push
imull
pushf
in
outsb
outsb
outsb
aas
test
push
jl
movsb
sub
inc
mov
jno
adc
mov
jle
movsl
aas
lods
popf
data16
xor
es
out
fdivrl
int3
or
inc
clc
push
sbb
xor
mov
xorl
les
movsb
lret
xchg
stos
or
adc
pop
lahf
sbb
test
add
insb
outsb
cs
outsb
call
push
sbb
cld
loop
cwtl
int3
addr16
sti
ds
insb
aad
test
mov
mov
push
mov
movsl
mov
pop
pop
icebp
xor
das
gs
dec
insl
dec
out
out
test
fcompl
das
xlat
sbb
mov
outsb
outsb
outsb
outsb
mov
outsl
jo
and
es
mov
jno
and
enter
cmp
cmp
lods
stc
fwait
jae
jae
pop
sub
add
lahf
inc
rorb
inc
insb
cmpsl
iret
testb
into
nop
scas
mov
inc
and
aam
lcall
les
ljmp
ss
out
dec
pop
push
rclb
ror
iret
ret
rolb
add
iret
int
xlat
icebp
dec
scas
nop
shrl
add
jl
dec
sbbl
insb
outsb
outsb
aas
mov
adc
dec
cs
xor
mov
aaa
aaa
ja
cs
stc
cli
add
cltd
bound
cltd
mov
icebp
cwtl
js
outsl
xchg
or
mov
iret
int
mov
adcl
add
xor
out
and
jns
sub
push
inc
ds
out
pop
int
stos
sbb
scas
xchg
pop
mov
loope
push
dec
add
cmp
fcomps
adc
es
out
jge
mov
fnstenv
dec
out
popa
push
and
mov
or
mov
jae
sti
sarb
push
cltd
jbe
jae
jae
fisubrl
je
roll
push
pushf
push
fnsave
and
jo
xor
jl
aaa
lret
sbb
push
call
aaa
aaa
aaa
data16
lods
push
and
outsb
out
js
aam
or
jmp
pushf
sub
or
xor
jb
sbb
fs
dec
jg
xchg
fsubs
add
sub
popa
sbb
xor
dec
push
popf
enter
int
test
pop
loope
cmpsl
mov
ljmp
out
push
and
pop
push
cmp
push
rorl
mov
fs
out
hlt
imul
pusha
movl
fs
xor
loop
dec
jle
mov
adcb
jmp
das
jge
ss
fwait
and
pusha
xchg
xorb
in
testl
pusha
dec
push
xchg
sarb
fwait
lahf
int
jnp
call
xchg
inc
ds
fwait
fwait
sub
inc
bnd
imul
and
pop
ret
lods
in
or
fadd
xor
push
ret
jl
lahf
push
mov
mov
imul
adc
aas
mov
repnz
in
dec
add
outsl
cmp
fnstcw
aaa
test
repnz
test
lcall
ds
outsb
push
mov
int
in
cwtl
notb
es
and
scas
and
fdivrl
push
inc
arpl
and
push
mov
enter
nop
dec
test
mov
movsb
add
mov
mov
testl
dec
subl
mov
mov
jo
adc
jl
hlt
dec
shlb
push
hlt
xchg
nop
and
and
push
repz
movsl
aaa
aaa
mov
sub
outsl
adc
repnz
pop
sbbl
push
ss
aaa
aaa
imul
jbe
into
xor
add
dec
jge
push
repnz
scas
lods
fwait
sub
or
push
adc
cmc
lret
iret
ds
fdivrs
jge
sbb
pop
mov
std
ss
clc
cmp
cmpsl
mov
pop
icebp
lea
pop
inc
jns
jb
mov
ror
out
dec
sahf
and
fdivr
js
pop
idivb
out
dec
stos
das
insl
daa
jae
iret
out
bound
aam
adc
add
lcall
iret
jns
cld
mov
iret
out
test
adc
sbb
push
leave
ss
loope
jae
lcall
les
mov
int3
or
decl
dec
adc
or
ret
jmp
into
pop
sbb
adcb
jp
push
hlt
jle
lret
dec
shlb
mov
fdivr
nop
js
shl
push
push
fmull
pop
lret
or
imul
jb
shll
int
out
sbb
inc
ret
add
int
int
add
pop
pop
fldenv
loop
lods
and
int
out
ss
fwait
addr16
dec
leave
scas
addr16
andl
addb
test
mov
mov
add
enter
jne
inc
sbb
hlt
mov
dec
repz
or
fistpl
xchg
pusha
scas
xchg
lret
dec
aas
or
repnz
iret
divb
jbe
dec
fwait
test
mov
fildl
sbb
sub
icebp
mov
repnz
xor
xor
dec
test
or
fcompl
or
dec
inc
loopne
int
int
xor
xchg
sbb
push
sub
ja
cmp
lahf
inc
jb
stos
mov
hlt
pop
jmp
stos
lods
jb
cmp
jne
or
outsb
aas
hlt
fldenv
ljmp
mov
mov
outsb
outsb
outsb
sbb
dec
mov
test
pop
icebp
xchg
pop
jbe
cld
xchg
pop
sub
stos
sub
pop
and
das
pop
xchg
mov
iret
out
out
out
xchg
jmp
fmull
dec
jge
popl
xchg
cwtl
inc
xchg
clc
fyl2x
mov
or
aaa
push
hlt
sbb
pop
mov
and
inc
ss
mov
mov
into
outsb
cmp
shll
std
jb
outsb
outsb
outsb
out
pop
stos
xor
cmp
and
outsb
cmp
aad
mov
out
sarb
sbb
mov
out
out
adc
cmpb
insb
sahf
aad
out
out
xorb
hlt
cmpsl
jnp
fdivrs
rolb
out
jnp
and
cs
aaa
aaa
pop
jl
cmp
leave
fdivp
add
fnstcw
mov
aaa
aaa
aaa
cmp
push
daa
or
in
jne
aaa
mov
inc
jmp
pop
mov
outsb
jg
out
add
in
stos
jg
push
jl
outsb
in
mov
adc
pop
js
aaa
pop
add
push
or
std
insb
lahf
fstpt
sub
adc
int3
test
jno
int
aaa
rcrb
out
data16
lahf
iret
int
nop
repz
pop
dec
int
int
mov
pop
jecxz
push
addr16
int
fisubs
test
lret
mov
cmp
and
fwait
std
popf
sbb
in
dec
bound
out
inc
aaa
mov
clc
xor
xchg
in
cld
idivb
imul
mov
push
jl
shl
inc
mov
mov
cs
out
cmp
dec
daa
pop
iret
testb
jecxz
scas
jo
ljmp
pusha
xor
fsubrs
inc
outsb
movsl
mov
cmpb
hlt
ret
push
adc
movsb
shlb
jmp
xchg
fwait
or
std
mov
dec
mov
mov
ds
rcrb
out
cli
mov
mov
mov
sti
xchg
or
aaa
mov
bound
add
call
aaa
aaa
aaa
aaa
jnp
out
sbb
or
out
jmp
mov
aaa
sub
jge
ss
pop
out
push
rorb
rcrl
fdivrl
fstpt
aas
rorl
jbe
std
insb
jp
imul
iret
out
out
scas
dec
leave
jle
or
or
iret
int
int
mov
add
clc
or
dec
ret
ret
jl
hlt
mov
mov
aas
fsubrs
xchg
insl
out
outsb
dec
push
out
lahf
outsb
adc
jg
mov
jne
out
out
fldl
popf
movsl
gs
or
out
out
mov
mov
cmp
out
sar
xor
xor
adc
adcb
test
pushf
mov
nop
pop
mov
fwait
xchg
jae,pn
daa
test
mov
aad
push
cmp
pop
rorl
mov
sub
mov
jbe
xor
bound
test
inc
ret
out
mov
or
loope
out
subb
arpl
sahf
fwait
dec
lods
aad
ljmp
scas
shl
sbb
pop
xor
xchg
pop
sbb
mov
push
mov
pop
insl
dec
push
mov
lahf
jg
jle
out
xchg
mov
lock
jnp
lods
sub
lea
into
xor
lds
outsb
outsb
lahf
cmpsb
out
lea
test
inc
xchg
cmpsb
rcll
pop
mov
cmpl
xchg
outsb
outsb
clc
imul
loop
fnstsw
mov
inc
dec
bound
xor
jne
das
push
out
sub
loop
cmpsb
rcrl
xor
mov
out
out
iret
dec
lods
dec
ljmp
out
out
or
push
mov
jg
iret
out
and
cld
jp
jo
psrlw
int
push
stos
sbb
push
sub
push
pop
push
cmp
mov
adc
jbe
fisubl
fwait
sub
iret
push
ja
dec
cmc
mov
xlat
arpl
and
clc
add
cmpsb
add
mov
mov
shll
in
fistl
add
pusha
xor
pusha
and
inc
dec
inc
xor
mov
adc
jne
pop
test
dec
pop
aaa
ret
mov
mov
test
fwait
cmp
cmpsb
sar
and
or
outsb
sub
bound
add
popf
push
jl
outsb
jne
lret
lds
dec
add
jge
add
xchg
fistl
fisubrl
repnz
mov
rolb
fwait
call
fdivl
fstpt
out
aaa
into
and
fdivrl
pop
pop
mov
fmuls
jae
jae
pushf
dec
jle
or
mov
jae
jae
fimull
mov
sbb
jns
in
jge
jb
jl
sahf
movl
xor
mov
leave
lret
repnz
cld
aaa
andb
jp
pop
outsb
jge
fcoml
aas
hlt
insl
fbld
jo
int
or
jecxz
jl
movsldup
or
add
xchg
addr16
dec
repz
sbb
mov
out
pop
push
add
inc
jg
xchg
push
xchg
aas
fcmovne
out
push
roll
sahf
cmp
aaa
aaa
aaa
dec
lcall
stc
jb
fwait
fwait
mov
or
cmp
xor
add
jge
cmp
push
hlt
sbb
mov
jno
sub
shr
fwait
cmc
lret
in
aaa
jo
aad
mov
lret
or
dec
xorl
leave
bnd
dec
jp
aaa
mov
fwait
lock
testl
fcmovbe
int
lahf
mov
cmpsb
fidivl
outsb
outsb
outsb
outsb
pop
ror
lock
xor
sti
insb
outsb
outsb
out
inc
inc
cli
dec
inc
daa
mov
in
add
loopne
in
lods
xchg
and
pop
or
sub
stc
fldl
push
std
jle
push
push
daa
rcr
push
jp
sub
inc
out
stos
inc
mov
jge
xor
shlb
test
jae
mov
and
cmp
ret
lea
jmp
sbb
cmp
lods
dec
dec
push
fcomip
adc
mov
out
idivb
out
mov
aas
loope
inc
mov
mov
ffreep
dec
call
fwait
fwait
fwait
std
sbb
aaa
aad
pushf
es
jmp
sahf
fwait
int
sbbb
push
jle
leave
jp
dec
call
sti
and
mov
xchg
sbb
pop
ficomps
rorl
pop
push
sub
jno
mov
xlat
and
mov
int
adc
stos
xor
or
adc
jecxz
pop
push
das
xor
out
out
push
mov
pop
add
sub
iret
out
and
jle
and
xor
test
jae
jae
push
jbe
push
or
adc
add
mov
dec
test
iret
scas
pop
scas
rcrb
xorl
adcb
xchg
xchg
mov
enter
mov
ret
jl
push
pop
dec
rorb
outsb
outsb
cli
mov
int
cwtl
mov
fistpll
out
divb
adc
inc
push
add
out
dec
cmpsb
es
stos
and
cmp
mov
aas
fwait
fwait
xor
scas
leave
lods
lret
adc
push
mov
mov
push
stos
adc
in
adc
dec
std
insb
outsb
inc
xchg
pop
xor
add
cmp
mov
es
aaa
cwtl
out
leave
mov
jne
jle
inc
movsl
outsb
out
push
rcrb
add
jecxz
lcall
int
aas
fwait
imul
in
rcrl
lahf
int
std
ds
inc
dec
call
mov
jle
or
cmp
sub
or
int
int
mov
adc
fimuls
out
lahf
repz
dec
dec
and
xchg
adc
pop
mov
jae
mov
in
lcall
out
out
orl
loope
jnp
jg
and
std
sub
xor
mov
inc
xor
xchg
loope
jo
cmp
popa
in
jae
aad
aas
pop
cmc
inc
lret
adc
add
popa
out
repnz
fisubrl
jge
push
mov
xor
pop
lret
add
push
dec
dec
mov
cmp
sahf
add
ror
out
cmp
loope
nop
int
in
subl
pop
mov
jne
sub
jecxz
mov
add
imul
clc
mov
sbb
icebp
xchg
stos
aad
sbb
cli
insb
mov
xchg
loopne
lret
cmc
out
adc
loopne
pop
out
mov
je
shlb
test
jnp
out
out
test
add
scas
fsubs
push
lret
fildl
sti
sbb
sbb
jnp
outsl
push
xorb
lock
insl
or
sbb
and
hlt
out
sahf
mov
rolb
jecxz
les
adc
fbstp
pop
fidivl
aaa
push
cld
fimull
jnp
sbbb
lock
shrl
icebp
ds
xlat
mov
movsl
scas
test
jne
pop
dec
insb
pop
cwtl
clc
std
int
int
lods
inc
mov
sub
jne
int
int
dec
mov
sarb
test
cmc
ds
int
aaa
push
fildl
and
xchg
push
jbe
shrb
loop
int
sbb
xor
es
fcompl
mov
iret
mov
push
inc
mov
mov
push
dec
paddq
pop
loopne
aaa
aaa
aaa
lahf
and
jne
ss
adc
ss
aaa
insb
adc
shll
aas
fistl
sub
sti
enter
add
push
flds
sbb
into
ret
out
pop
aas
out
repz
fadds
andl
sub
mov
inc
iret
int
cld
jb
repz
cmp
lcall
push
mov
mov
and
and
fisubrs
cmp
cmpsb
sbb
iret
cmpsb
arpl
push
dec
lea
cld
das
addl
aaa
mov
in
gs
movsl
inc
xchg
jmp
jecxz
cmp
lea
push
imul
xchg
pop
adc
gs
pop
dec
jecxz
mov
rorb
push
ss
ds
xor
sbb
sub
jae
jae
inc
fcmovb
imul
fcom
jae
jae
ss
repnz
jae
jae
pop
push
xchg
sbb
inc
mov
adc
scas
jae
jae
xchg
fmuls
test
add
gs
outsl
mov
push
imul
jmp
jp
pop
movsl
add
loope
fld
aaa
aaa
aaa
aaa
and
aad
pop
or
mov
sti
jno,pt
bound
std
andl
aaa
sbb
adc
fisttps
test
sub
sbbb
pop
pop
loopne
xor
dec
mov
mov
int
push
mov
mov
dec
adc
mov
xchg
stos
xor
jle
pop
inc
or
dec
xor
neg
push
in
fsubr
adc
pop
iret
int
lock
stc
xchg
jl
scas
jnp,pt
cmp
outsb
outsb
mov
aam
out
mov
idiv
insb
or
mov
pusha
cmp
mov
cmpsb
popf
clc
insb
aas
insb
push
jbe
mov
pop
jp
ret
push
into
into
pop
fmull
mov
nop
inc
bound
adc
adc
lods
popa
test
pop
and
aaa
aaa
mov
clc
lahf
das
lods
xchg
fiaddl
lcall
mov
jp
adc
fbstp
adc
jns
inc
loop
push
cmp
ja
ljmp
daa
cmc
mov
jp,pt
jno
jl
shll
fidivrs
js
in
lret
push
pushf
and
loopne
mov
iret
int
adc
rcpps
xchg
out
pop
dec
aaa
aaa
aaa
aaa
xor
movsb
mov
hlt
clc
mov
jge
mov
shlb
adc
inc
add
lea
jl
push
cmpsl
dec
hlt
hlt
add
iret
mov
xor
ror
out
js
aad
sti
fnstcw
leave
or
mov
mov
and
jae
enter
rcrb
mov
int
int
arpl
push
bound
lret
int
rcrl
dec
sbb
fsubr
lock
int
sub
test
cmpsb
jbe
aam
jbe
jge
mov
pop
fists
out
mov
addl
jae
iret
out
fistpll
cwtl
adc
mov
sub
repz
cltd
xchg
inc
cs
clc
dec
cmpsl
icebp
mov
lods
ljmp
sbbb
sub
jp
mov
sbb
mov
pop
into
insb
outsb
outsb
lods
pop
xchg
bound
ret
loop
cld
jl
mov
jmp
mov
adc
lods
mov
inc
ja
jbe
ror
sub
or
dec
icebp
xchg
dec
add
mov
lods
outsb
outsb
out
mov
push
sub
fwait
adc
outsb
outsb
outsb
outsb
hlt
movsb
pop
pop
jne
push
cmp
cli
insb
and
inc
jno
jns
ror
out
xor
sub
jecxz
mov
inc
sub
sbbb
pop
adcb
fmull
insb
push
mov
add
iret
sbbb
or
loop
outsb
outsb
outsb
iret
es
adcb
stos
addr16
mov
stc
insb
mov
lret
xchg
pop
jg
xchg
adcb
out
out
dec
pushf
iret
and
or
jbe
out
out
adc
je
push
pop
es
xchg
and
out
out
or
mov
ljmp
out
hlt
xor
cmp
pop
push
or
out
out
sub
dec
push
mov
inc
mov
cmp
ret
pop
ficompl
inc
fdivrl
aaa
mov
out
or
lret
adcl
sub
jl
clc
fldcw
push
das
movsb
adc
xchg
pop
jbe
out
inc
mov
push
aas
xbegin
pop
sub
mov
cs
inc
xchg
mov
push
das
xlat
out
idivb
rorb
push
sub
sub
stos
cmp
sahf
aad
loopne
jecxz
sti
mov
sbb
push
xchg
push
rcrb
jno
dec
and
cli
mov
mov
mov
insl
adc
pop
fbld
ret
mov
loopne
ds
pop
imul
mov
mov
add
cmp
add
jb
iret
testb
xor
xchg
or
out
iret
pop
scas
popa
pop
cld
sar
popl
jecxz
and
pusha
dec
add
adc
push
or
fcompl
lods
adc
aaa
sbb
or
outsb
clc
mov
int
adc
cmc
lock
outsb
outsb
outsb
outsb
das
inc
add
pop
imul
fldcw
adc
mov
insb
rol
sbb
add
dec
fistl
mov
fsub
mov
adc
xor
and
and
andb
idivb
cli
enter
adc
int
pop
inc
cmp
pushf
sbb
rclb
int
xchg
into
xchg
mov
adc
dec
cmp
mov
xchg
insb
inc
out
pop
lcall
negb
lock
dec
cmpsb
xor
sahf
shlb
movsl
mov
pop
mov
push
cmp
insb
mov
lock
lcall
fcmovu
out
out
push
dec
sahf
imul
pop
hlt
std
ficompl
ss
repz
fwait
lods
sarl
adc
mov
ljmp
cmc
lcall
jo
mov
mov
std
dec
icebp
sub
push
xor
mov
aaa
ja
in
mov
shll
or
aas
les
fwait
or
mov
cmp
mov
cli
xchg
shl
mov
xchg
int
dec
or
in
jnp
jae
outsl
lea
pop
leave
adc
cmc
mov
icebp
jle
lahf
push
pusha
dec
mov
int
dec
lock
lock
push
sub
lods
lret
int
int
sbb
push
mov
mov
push
sbb
into
fst
out
mov
lds
push
adc
icebp
in
sbb
imul
fistl
dec
jb
test
dec
test
scas
mov
lds
js
dec
sarb
adc
dec
cmp
popa
leave
cmp
xchg
mov
addr16
sti
lcall
xchg
int
int
test
cmp
scas
cmc
cmp
inc
leave
mov
iret
les
add
insb
out
push
sti
fcmovu
jne
mov
pop
iret
arpl
lahf
and
lret
movsb
int
lods
jb
pushf
mov
gs
in
mov
int
pop
adc
invd
mov
out
data16
fidivs
xchg
mov
pop
icebp
andb
push
lret
adcb
and
test
imul
add
dec
inc
mov
notb
shl
aam
es
ja
lahf
ljmp
cld
and
adc
rep
add
out
out
scas
inc
fld
sarl
insb
jae
ror
jno
out
orb
mov
shlb
outsb
cli
ljmp
aaa
aaa
aaa
aaa
or
mov
in
test
sub
rcrb
ja
dec
push
adc
dec
iret
dec
sub
mov
stos
lock
fdivrl
adc
add
iret
outsb
outsb
cli
fdivrl
jno
pop
out
mov
jns
fmul
push
loopne
insb
lret
movsl
aam
repnz
lea
sahf
fistpl
movsl
pusha
sbb
cmp
dec
and
jo
aaa
mov
xchg
andb
mov
aaa
aaa
sbb
out
inc
jg
or
ss
pop
adc
mov
mov
push
adc
push
inc
or
jb
jo
in
in
js
movsb
push
push
inc
es
sahf
int
int
insl
or
loop
repnz
insb
lahf
int
int
sub
enter
ss
outsb
xor
cmpsb
pop
data16
mov
inc
sbb
jl
movl
jae
mov
xchg
cmp
orl
mov
jae
nop
cmpb
shl
mov
add
or
cmp
cmp
pop
cwtl
xor
xor
ljmp
loop
addr16
aam
xor
jecxz
in
pop
insb
mov
call
rcl
int
addr16
adc
test
pop
int
int
and
insb
push
cmp
pop
rorb
lahf
int
dec
jecxz
inc
pop
test
js
cltd
imul
fdivrl
aaa
jle
clc
push
mov
xor
xchg
push
imul
test
or
xor
jecxz
jae
mov
movsb
pop
mov
mov
rcrl
shll
cli
sub
push
es
push
and
out
jle
xchg
sarb
xor
outsb
addr16
es
push
xor
mov
scas
add
or
outsb
adc
mov
sub
les
xchg
shl
mov
jno
mov
hlt
mov
dec
inc
xor
cmp
cmp
jecxz
mov
sbbl
and
aaa
aaa
aaa
das
push
test
je
test
aaa
aaa
aaa
aaa
mov
pop
call
clc
fidivrl
aaa
aaa
les
push
push
mov
faddl
lock
ja
fdivrl
cmpsb
mov
jo
push
add
and
idivl
and
adc
stc
dec
jb
mov
push
adc
dec
mov
movsb
rolb
out
out
adc
sbb
mov
out
out
out
mov
jp
xor
xor
mov
xchg
andb
in
inc
aas
iret
hlt
push
subb
xchg
push
int3
nop
and
mov
sub
jmp
fildl
in
dec
push
rcl
sbb
mov
xlat
imul
add
pop
inc
cmp
rorb
ret
arpl
dec
sub
jnp
int
xlat
cli
cmp
rol
adc
push
pusha
pop
pop
orb
mov
test
test
rcrl
push
les
inc
rclb
mov
fwait
fwait
fwait
fwait
and
mov
xor
xchg
sahf
fwait
sub
shll
lock
cmp
stos
popl
lea
nop
out
out
arpl
mov
inc
outsl
mov
scas
mov
js
jbe
es
push
mov
lcall
xor
es
addr16
pop
or
cmp
nop
or
vcvtpd2dq
pop
call
out
jg
mov
jmp
jae
jae
dec
push
mov
sub
jne
xor
jae
mov
sbbl
sbb
cmpsl
mov
out
jae
mov
in
cmp
repz
iret
out
out
xor
movsb
divb
xor
jnp
sar
shufps
dec
cmp
sbb
iret
and
ds
dec
mov
leave
test
movsb
cmpsl
cmp
pop
and
rcrb
sbb
loope
pop
lock
orl
add
sbb
stc
dec
push
popf
std
insb
outsb
outsb
shrb
lret
nop
stos
rol
mov
aaa
push
in
aad
jl
add
inc
neg
test
jl
fucom
xchg
jbe
iret
out
mov
xor
jnp
mov
adc
jo
sub
or
addr16
sti
xchg
cmp
es
xchg
sti
jle
ret
loop
bound
imul
mulb
jecxz
jg
mov
loop
ja
mov
stos
enter
pop
fstps
fisubl
cmp
fwait
fwait
dec
cmp
jb
mov
pop
outsb
outsb
outsb
aas
shlb
insb
stc
cmpsb
xor
mov
hlt
aad
mov
aaa
aas
dec
jl
inc
jp
adc
jmp
clc
mov
mov
lock
fs
mov
inc
ret
in
fchs
lret
loop,pt
push
in
fdivrl
jne
cmpsb
inc
out
pushf
mov
sti
fdivrl
arpl
jo
cmpsl
pop
jae
jae
add
das
out
inc
jp
dec
enter
jae
jae
ljmp
lcall
aaa
mov
clc
xor
std
sub
pop
push
aaa
aaa
aaa
aaa
or
jb
jo
aaa
aaa
aaa
mov
cmp
ja,pt
jg
aaa
aaa
aaa
lock
mov
sbb
ss
mov
add
aaa
pop
jge
xchg
arpl
adc
repnz
or
pusha
cmp
test
gs
aaa
mov
mov
or
add
sub
sub
out
sbb
push
xchg
fs
inc
sbb
and
push
pop
imul
mov
push
movsb
pop
addr16
icebp
mov
outsb
push
cltd
outsl
loop
fiaddl
add
fdivrl
xchg
jno
nop
xor
imul
arpl
fcompl
push
push
lahf
add
pop
pop
aaa
mov
jecxz
xor
cwtl
fisttpll
jnp
aaa
aaa
aaa
aaa
in
cmp
lcallw
lret
or
aaa
aaa
and
dec
les
jg
jae
cmpsb
scas
in
test
jbe
ja
mov
xchg
bound
sub
in
out
adc
iret
mov
cli
lcall
int
fwait
inc
ljmp
je
mov
sub
mov
in
filds
ljmp
push
cmp
test
mov
inc
mov
stos
in
insb
inc
sahf
and
fsubl
adc
inc
lods
jle
into
mov
fisubrl
outsb
outsb
mov
mov
jl
push
outsl
shrl
outsb
outsb
pushf
jnp
cld
arpl
repz
sbb
push
pop
xchg
add
or
sahf
lods
cld
jl
mov
stos
out
lods
pop
js
aaa
pop
or
scas
xchg
xchg
cmpb
inc
roll
xchg
ret
sbb
mov
pop
icebp
out
push
cmc
aam
xchg
scas
fbld
mov
jbe
test
loope
push
push
fldcw
ja
jg
fnstsw
arpl
je
aas
movb
mov
shlb
jl
jae
cmp
mov
test
mov
mov
push
dec
adc
mov
ss
add
idivb
ret
jae
jae
pop
enter
dec
test
mov
jae
dec
fisttpll
push
dec
call
addr16
leave
out
lret
inc
cwtl
jecxz
mov
and
mov
jl
scas
testb
xor
pop
cmp
outsb
js,pn
or
cmp
xlat
into
add
mov
loope
inc
mov
andps
or
xor
mov
stos
fisubrl
or
stc
shll
mov
icebp
xchg
push
add
xchg
aas
imul
scas
outsb
outsb
clc
push
pop
sub
jle
rorl
push
push
xchg
inc
sub
loope
jae
adc
pop
shl
ret
iret
out
arpl
int3
xchg
inc
inc
mov
aam
lret
insb
aad
iret
fldl
out
or
ds
test
lret
push
jge
cmpsb
cmp
mov
jmp
fstpl
movsb
out
mov
loop
ror
fisubrl
pushf
sahf
cmp
divb
insb
mov
mov
push
sarl
fcmovne
and
fmull
lret
sahf
test
aad
push
dec
lahf
int
mov
fcoml
fdivrl
clc
sbb
push
or
neg
xchg
cmp
jo
or
cmp
jle
fildll
push
dec
inc
scas
xchg
inc
in
enter
hlt
sbb
aas
fwait
fwait
fwait
adc
mov
std
data16
ja
or
pop
pop
int3
mov
mov
sub
aaa
aaa
aaa
dec
sahf
shll
add
addr16
lret
sub
mov
aaa
lock
cwtl
push
insl
add
test
mov
shrb
js
loop
xchg
out
cmpsl
cmpsb
adc
mull
cs
rcrb
add
in
call
in
sti
add
pop
pop
cwtl
cmp
mov
lahf
mov
jns
jp
insb
mov
iret
out
insl
or
lds
ret
inc
or
xchg
and
sbbb
int
int
mov
int3
jbe
pop
jg
sub
inc
out
lods
xorb
imul
add
out
out
or
inc
popa
int
pop
mov
sahf
inc
leave
mov
subb
mov
mov
ja
push
lahf
xchg
dec
outsb
push
jge
mov
pop
inc
mov
xor
aaa
adc
out
xor
xlat
mov
jae
sub
sahf
fwait
pop
jle
jmp
xor
mov
mov
inc
lock
lock
inc
adc
and
bound
xadd
ljmp
inc
add
aas
jne
mov
adc
dec
imul
shlb
mov
fiaddl
push
xchg
cltd
mov
mov
jae
sti
fnstcw
or
sbbb
mov
loop
test
fwait
rorl
inc
push
jb
imul
ror
sbb
adc
mov
sbb
int
xor
mov
jb
ret
mov
dec
add
sub
out
notb
cmp
jmp
push
push
xor
pop
insb
outsb
inc
outsl
ljmp
popf
add
pop
std
pop
fisubs
fbstp
jae
fimuls
bound
cld
cmp
call
and
push
add
aaa
lret
or
mov
insw
mov
inc
cmpb
std
sahf
jecxz
mov
and
roll
int
int
jbe
or
xchg
int3
iret
divb
insl
dec
cmp
cwtl
add
or
dec
pop
sbb
xor
addr16
out
negb
je
lock
int
push
fnstenv
out
idivl
test
mov
pop
mov
mov
inc
in
xchg
push
jbe
out
mov
in
movsb
fnsave
sbb
adc
les
adc
mov
aaa
aaa
mov
cmp
icebp
mov
xchg
ss
aaa
aaa
jnp
ret
and
sub
addr16
cltd
popa
sbb
loopne
pop
xlat
cmp
mov
jae
jae
pop
cmpsb
xor
adc
lock
add
pop
mov
stc
test
push
jle
faddp
imul
je
addr16
add
rcrl
rcrb
ret
and
sub
jge
outsb
mov
xor
rclb
push
jo
or
push
mov
divb
inc
and
or
out
adc
adc
stc
es
and
test
outsb
push
lcall
push
lods
enter
aaa
aaa
aaa
jl
cmc
push
jbe
mov
stos
xchg
addb
xchg
dec
lahf
int
adc
loopne
jp
jge
ds
mov
adc
aaa
mov
or
mov
cs
nop
mov
fdivrl
aaa
aaa
mov
sub
lods
xorb
jae
fldenv
test
push
into
fsubs
mov
mov
mov
jl
inc
jns
out
jae
lds
ret
out
or
dec
cli
sbb
jae
fwait
jge,pn
loop
adc
test
rcrb
mov
outsl
icebp
stc
ss
fwait
fwait
fwait
fwait
cmc
stc
jecxz
add
push
inc
addr16
int
lahf
cs
add
stos
cmp
mov
fcompl
mov
mov
aaa
pop
or
inc
cmpsb
ljmp
fidivl
mov
je
outsb
outsb
outsb
outsb
sbb
fsubs
cltd
lods
push
jecxz
push
ja
outsb
outsb
outsb
outsb
pop
push
sbb
aas
inc
arpl
jg
cmp
inc
jne
outsb
xchg
adc
fwait
push
rorl
mov
shl
leave
add
jbe
push
and
sub
push
jne
fcmovnu
lock
shrb
lret
out
add
pop
icebp
mov
adc
mov
fidivrs
cltd
mov
mov
cmp
sub
or
test
in
addr16
shlb
insb
addr16
push
mov
push
fidivl
jmp
jg
sbb
mov
int
xor
clc
jmp
pop
mov
xchg
mov
outsb
jle
and
mov
push
in
loopne
cmp
test
insb
nop
int
sub
cld
dec
cmp
nop
or
add
fdivl
or
pushf
lfs
fdivl
iret
jne
mov
das
dec
push
imul
loop
shl
icebp
fsubr
sub
pop
in
daa
out
adc
fsubrs
jbe
mov
out
add
daa
les
sub
adc
push
mov
xchg
nop
cmp
xchg
lock
mov
int
daa
arpl
and
push
jns
cmc
cmpsb
insl
int
int
sbb
lea
ret
adc
int
clc
jo
das
out
dec
fwait
fwait
fwait
push
addb
jo
push
and
sahf
enter
fwait
cmpsb
stos
lret
fsubrl
mov
pop
xchg
mov
shll
lods
ret
outsb
outsb
outsb
movsbl
mov
mov
lock
xchg
mov
in
mov
scas
push
loope
and
sbb
mov
mov
mov
mov
cli
xchg
pop
and
inc
mov
xor
sbb
ss
jecxz
sub
push
dec
shlb
jl
ss
lods
or
js
xor
adcb
rol
push
into
repnz
sbb
je
notb
fxch
in
add
sbb
dec
or
aaa
aaa
mov
movb
int3
xor
or
imul
jmp
rorl
adc
and
int
clc
fdivrl
jno
mov
xchg
popf
scas
iret
out
lret
push
fists
inc
pop
mov
icebp
cs
fcompl
bound
call
push
clc
mov
sub
js
jge
test
mov
leave
mov
outsb
outsb
outsb
outsl
repz
xor
scas
int3
ss
outsb
outsb
outsb
outsb
sub
sub
jbe
outsl
or
clc
insb
outsb
add
adc
movl
mov
jae
lods
push
in
aad
mov
sbb
icebp
stos
adc
loopne
cmpsl
pusha
cli
sti
jle
mov
addb
pop
xchg
mov
sub
jae
mov
mov
or
jae
xchg
mov
xchg
out
mov
jb
xchg
mov
les
fwait
fwait
cmp
ret
pop
sbb
test
fwait
clc
int
sbb
out
pop
aam
xchg
movsl
xor
int
xlat
shrb
jle
pop
push
add
jmp
add
stos
jae
and
dec
and
ljmp
iret
inc
nop
fisttps
jae
out
add
scas
bound
pop
xor
out
in
sti
mov
mov
and
cld
insb
fildll
xchg
mov
sahf
lea
jnp
sti
push
mov
push
lret
es
jae
gs
pop
add
movsb
in
mov
stc
push
call
repnz
fiadds
cmp
gs
aaa
pop
sbb
push
mov
in
cmp
inc
in
cmp
mov
ds
dec
and
int
jbe
js
and
or
push
fidivl
sub
lahf
xor
jmp
push
push
inc
insl
fwait
fwait
fwait
fwait
cltd
or
rclb
sbb
jp
cmp
in
pop
iret
js,pn
pop
cld
mov
hlt
cmpsb
lret
sub
pop
jns
cmp
out
dec
jl
cmp
cli
out
in
sbb
fwait
rorb
xor
xlat
addr16
mov
aaa
aaa
xlat
dec
shll
scas
js
dec
lahf
mov
inc
xchg
or
std
insb
outsb
outsb
cmp
adc
jecxz
cwtl
andb
outsb
outsb
xchg
divb
mov
or
outsb
outsl
dec
push
daa
loopne
ljmp
jno
outsb
cld
mov
sbb
inc
lcall
dec
xor
pop
jl
lahf
lods
rsqrtps
pusha
mov
push
js
cmp
mul
pop
inc
js
out
bound
int3
lock
xchg
add
imul
fldenv
and
add
aam
aas
mov
sti
insb
outsb
dec
je
cmpsb
in
cmp
sub
bound
cmp
loope
xchg
iret
idivb
rol
adcl
cmp
pop
movsl
xor
shr
add
xchg
int3
cmp
pop
clc
insl
popf
sbb
adc
cwtl
dec
jle
aaa
mov
fisubl
fwait
push
sarb
adc
inc
pop
lret
insb
mov
sahf
mov
mov
test
jne
scas
push
faddl
adc
mov
jg
icebp
mov
jmp
xorb
mov
mov
loope
roll
inc
cmp
sbb
mov
mov
xor
inc
stos
rcrb
divb
std
sub
xchg
pop
cs
test
fdiv
mov
or
aad
hlt
jp
loope
mov
jp
sub
dec
clc
jmp
neg
pop
lahf
int
in
sub
rcrb
mov
out
mov
ret
out
icebp
fldcw
rorb
cmp
aaa
aaa
push
adc
stc
bound
repz
jno
inc
add
das
and
repz
cmp
and
testl
cmp
and
inc
rcrb
loope
mov
clc
insl
inc
xor
pop
into
xor
shr
dec
js
cmp
sbb
jb
and
ret
cmc
insb
outsb
outsb
xchg
ret
fnstsw
in
outsb
scas
cli
in
sub
pop
pushf
dec
loope
js
das
outsb
outsb
outsb
outsb
mov
or
xor
cltd
incb
jl
cwtl
adc
aam
dec
es
outsb
aas
fldt
mov
and
mov
jo
jbe
push
xchg
push
test
fcoms
outsb
paddsb
pop
or
sub
cltd
loopne
aaa
cld
in
jae
jnp
fadds
cs
inc
jo
xor
ss
aaa
aaa
sarl
mov
pop
or
mov
fs
ficoml
push
push
cs
jecxz
into
push
fcomp
mov
incb
inc
adc
adc
xor
push
ficomps
cmp
push
int
xchg
and
xor
jl
int
add
adc
mov
or
sti
mov
imulw
pop
jle
bt
iret
int
jmp
cmp
push
jg
sbbb
out
ds
xor
pop
fsub
sub
or
adc
data16
insb
pop
cs
mov
int
shlb
pop
inc
inc
fnstcw
mov
fisubs
nop
inc
pop
repnz
sbb
sarb
es
jg
mov
or
adc
xor
add
ss
adc
xchg
dec
mov
outsb
add
lock
popf
jmp
adc
mov
inc
push
mov
jl
jo
ja
sub
adc
pop
lods
popa
mov
xchg
jle
mov
pop
or
rclb
fwait
fwait
fwait
fwait
shlb
inc
imul
cltd
aam
iret
daa
mov
mov
cmp
jl
js,pt
hlt
and
int
pmulhuw
loope
sub
xor
inc
push
add
iret
dec
push
push
push
rolb
test
mov
clc
iret
out
push
movsb
inc
ficomps
movsl
sub
call
scas
dec
in
xor
call
sahf
inc
out
xchg
adc
or
je
out
out
mov
stos
enter
or
jg
out
inc
mov
dec
cmpsl
clc
pop
fucomi
jnp
pushf
xor
out
pop
ficomps
test
push
xchg
inc
add
aam
stos
out
test
mov
outsb
outsb
dec
inc
out
sub
sub
ss
jo
int3
pushf
andb
cmp
cmp
xor
clc
ret
aad
pop
js
sub
aaa
sar
lock
and
aaa
loope
cmp
sbb
les
nop
mov
sbb
lret
out
out
les
pusha
shll
out
pop
mov
jp
data16
jnp
cmp
out
out
or
add
xchg
push
or
iret
out
and
hlt
sbb
push
test
test
lahf
es
int
mov
daa
popf
lret
dec
add
mov
jg
cmpl
pop
clc
pop
sbb
aas
ret
pushf
xchg
jae
sti
imul
or
in
and
jae
div
xor
std
fidivs
jg
xchg
sarb
sub
sbb
aaa
jno
lds
or
lock
shlb
leave
jbe
mov
loop
nop
pusha
or
movsl
sti
jge
aad
mov
insb
mov
aaa
mov
xor
aas
cmp
push
sti
xchg
clc
jmp
es
aaa
aaa
aaa
sub
ret
dec
mov
pop
fdivrl
fs
stos
cltd
loope
andb
sub
sub
push
sbb
lret
adc
jl
mov
xor
idivl
fbstp
xorl
cmp
mov
in
add
add
pop
cmp
jae
xchg
jp
pop
and
repz
sbb
jae
push
cld
hlt
mov
loopne
cmc
push
js
mov
sub
push
pop
cli
pop
xor
xchg
mov
lock
ljmp
pusha
mov
inc
sub
dec
mov
pop
int3
test
daa
cli
sub
adc
jb
out
jnp
outsb
mov
add
push
mov
test
push
out
inc
out
push
pop
adc
mov
sti
fsubrl
hlt
ljmp
mov
ds
gs
cmp
mov
ljmp
testb
in
mulb
mov
xor
sti
aaa
mov
jo
pop
and
xchg
push
sahf
fprem1
mov
mov
call
test
roll
ror
xchg
sarb
or
xor
push
or
lcall
xor
les
cs
inc
jo
mov
xchg
cld
adc
out
aad
and
mov
xchg
jns
xchg
xor
bound
ds
mov
xchg
sbb
xchg
mov
cwtl
addr16
mov
dec
sti
jne
js
xor
mov
sbb
mov
outsb
pushf
lea
lahf
and
test
out
movsl
push
in
iret
jbe
xor
sti
jecxz
cmp
sar
cld
sbb
inc
int
jae
fcoms
push
add
or
sahf
in
movsb
loopne
in
cmp
cmp
mov
fdivrl
mov
adc
movsl
movsl
sbb
fcmovbe
inc
push
imul
je
pop
cmc
mov
pop
mov
out
ss
jbe
fwait
pop
lods
pusha
pushf
jnp
and
mov
das
stos
inc
sti
aam
mov
fisttpl
mov
scas
inc
mov
sbbl
sub
adc
pop
xadd
push
mov
insl
cmp
mov
out
add
lahf
fisttpl
lret
bound
sub
dec
mov
outsb
outsb
outsb
mov
inc
in
je
stc
mov
std
insb
outsb
mov
mov
sub
sub
pusha
inc
aaa
flds
inc
cmc
pop
cmc
sub
outsb
jle
das
xchg
and
push
jmp
shrl
mov
and
aaa
aaa
mov
enter
mov
out
pop
ds
aaa
aaa
aaa
ret
dec
int
add
dec
cli
ds
lea
leave
or
int
in
jle
xor
ror
mov
xchg
ss
ds
sahf
or
cmc
hlt
xchg
push
jae
imul
mov
rcl
in
inc
ja
sbb
loop
sti
fdivl
xor
pop
fmuls
mov
subl
sub
out
adc
add
aaa
pop
cmp
jmp
loop
inc
outsl
loop
jb
aaa
aaa
aaa
mov
stos
add
test
enter
aaa
aaa
aaa
aaa
mov
das
adc
push
jno
ss
aaa
aaa
mov
lds
hlt
std
popf
std
xorb
jl
mov
sbb
xor
jae
popa
mov
add
jecxz
andl
jp
fsts
aam
xchg
inc
stos
aaa
push
lock
ficompl
sub
and
jl
dec
sti
add
roll
jmp
jae
repz
ficomps
push
stc
cmc
icebp
mov
jae
cmpsl
push
int
cli
push
mov
sub
int
addr16
jmp
cmpsb
sub
mov
test
or
mov
push
xchg
mov
faddp
adc
pop
in
lock
mov
hlt
mov
mulps
scas
test
mov
xchg
pop
jmp
aaa
aaa
pop
jl
sbb
jecxz
lock
aaa
aaa
aaa
jnp
iret
adc
outsb
outsb
mov
pop
outsl
xor
mov
mov
outsb
outsb
outsb
xchg
cmpsb
and
xor
push
and
outsb
outsb
outsb
outsb
push
xchg
shlb
out
jl
aam
js
mov
imul
inc
pop
inc
or
add
jmp
push
mov
pop
or
lahf
sbb
loop
stos
jecxz
xor
jae
sub
cmp
and
xchg
cmc
mov
sbb
xor
outsb
outsb
outsb
outsb
cmp
jno
rcrl
popf
lods
enter
or
insb
jge
es
or
bound
sbb
add
outsb
mov
mov
outsb
outsb
outsb
xor
out
rcl
fcompl
stos
insb
lods
fadds
sbb
loop
jae
push
cmp
cmpl
mov
push
fs
lret
dec
scas
cmpsb
push
mov
pushf
push
lahf
test
out
sbbl
mov
int
int
pop
xor
arpl
fsubrl
lds
lahf
mov
out
or
adc
fcmovne
out
inc
outsb
lret
adc
stos
iret
test
xchg
enter
idiv
mov
daa
sahf
cmpsl
sub
ficompl
icebp
dec
outsl
sti
add
dec
popa
sub
pop
push
pop
push
jp
push
outsl
and
jae
inc
xor
and
nop
repz
addr16
inc
ret
addr16
jle
push
roll
mov
mov
mov
cmp
out
int3
imul
ret
pushf
push
and
outsl
loop
lods
repnz
out
out
mov
mov
addl
out
add
lret
mov
pop
testb
orl
out
out
or
add
pop
push
cmp
cmpsb
iret
out
out
mov
inc
sub
stc
jo
or
inc
divb
fnstsw
pop
ds
add
sarl
inc
setge
iret
mov
xor
js
out
mov
jge
rorl
xchg
loope
sub
jmp
mov
cmp
mov
in
int
mov
dec
lea
dec
in
lods
jae
lahf
int
iret
cmp
push
inc
stc
push
shll
pop
loop
mov
xchg
mov
jl
fwait
fwait
adc
inc
inc
sti
mov
xchg
mov
pop
jae
jae
xchg
test
sub
shlb
pop
xchg
fistl
sahf
bound
je
lahf
imul
add
ljmp
mov
sbb
cwtl
push
imul
lock
push
push
push
dec
pop
cmpl
aaa
sbb
push
lcall
cs
adcb
pop
test
jo
mov
ss
xchg
mov
fldcw
push
inc
inc
push
es
mov
mov
aam
scas
inc
test
insl
xor
cmp
mov
mov
jle
dec
xor
fdivrl
sarl
fildll
jecxz
jle
in
xor
fdiv
std
insb
xor
pushf
movsl
int3
pushf
push
lds
clc
fcoml
jp
int
sbb
int
int
fwait
xchg
pop
aad
enter
dec
insl
fcomi
sbbb
pop
bound
pop
jg
shlb
mov
mov
cltd
loop
clc
adc
inc
sbb
push
or
cwtl
pop
cmp
and
faddl
lahf
test
pop
fistl
loop
xchg
xchg
outsb
pop
les
pop
jae
xchg
js
adc
es
std
mov
xchg
sub
js
loope
lret
arpl
rcl
mov
jle
jecxz
jae
or
push
pop
scas
loop
mov
out
outsl
push
mov
loop
outsb
outsb
aas
adc
push
cli
push
or
mov
mov
xchg
cmp
fildl
push
aad
dec
mov
out
out
repnz
das
jle
iret
rcrb
fistl
dec
adc
adc
aas
fwait
fwait
fwait
scas
gs
inc
mov
jl
aaa
aaa
aaa
sub
inc
mov
in
adc
nop
sub
and
mov
jb
sbb
cmp
add
mov
cmpsb
jge
pop
outsb
mov
pop
push
sahf
int
fmul
movsb
xor
ds
es
lock
fs
in
addr16
das
inc
mov
push
bound
mov
mov
dec
insl
push
jmp
push
lret
data16
mov
xchg
sbb
enter
das
mov
mov
sbb
mov
jo
testb
push
mov
and
sub
scas
insb
add
push
mov
out
mov
outsb
inc
outsb
cltd
inc
adc
mov
adc
outsb
les
mov
scas
outsb
xlat
aam
mulb
in
shl
inc
mov
mov
jge
adc
and
aad
mov
out
fldenv
bound
test
out
arpl
lahf
pop
lret
aaa
ja
pop
sbb
and
test
rcrl
insb
cwtl
mov
popa
out
out
out
lods
adc
xchg
je
xchg
cmp
iret
out
les
mov
mov
in
mov
cmp
aam
or
frstor
fs
dec
mov
jb
ja
jo
lock
enter
sahf
sbb
loop
nop
add
fdiv
pop
push
or
out
repz
mov
jb
leave
xchg
push
xor
sbb
xor
mov
adc
mov
xchg
aas
fwait
sub
ret
stos
adc
pop
pop
xorl
push
sbb
xor
sti
push
hlt
lcall
xchg
lret
inc
adc
jle
lods
lret
pop
fs
in
fwait
and
mov
xchg
call
sarb
xchg
xor
jae
pop
jmp
mov
cwtl
pushf
sahf
mov
jae
jae
push
xchg
jecxz
mov
mov
les
jae
push
mov
in
fstl
ss
scas
pop
shlb
mov
mov
out
out
mov
fisubl
out
jne
test
out
fsubrl
xlat
shl
andb
out
pop
mov
jg
sar
out
outsb
outsb
outsb
insb
add
jns
repnz
dec
shl
insb
outsb
adc
sub
and
jo
lea
sbb
pop
outsb
filds
fistpll
mov
cmc
cmp
test
or
mov
xorb
xor
aaa
aaa
aas
pop
push
int
scas
das
jb
push
mov
frstor
inc
test
loop
pop
xchg
outsb
outsb
outsb
out
lcall
and
mov
aad
outsb
outsb
outsb
hlt
pop
lahf
jecxz
out
or
fcompl
and
stc
mov
and
fdivrl
fildll
int
in
pop
test
leave
or
shr
fstpl
ret
mov
push
xchg
nop
hlt
jnp
or
inc
and
pop
test
out
and
ret
jbe
mov
mov
dec
mov
dec
pop
rorb
lret
pop
xor
sahf
aaa
adc
and
rcrb
xor
dec
es
movsb
ja
dec
sbb
jge
test
mov
push
mov
stc
jbe
lcall
data16
iret
call
and
xor
movsl
lock
add
in
mov
lods
pop
pop
daa
sbb
in
hlt
hlt
fsub
pop
imul
out
mulb
je
outsl
out
xchg
hlt
xor
shl
out
dec
push
test
insb
outsb
outsb
outsb
inc
sti
pop
push
out
sub
aaa
aaa
pop
std
lods
push
ret
add
mov
mov
loope
pop
mov
mov
sub
dec
fildll
cmp
aaa
add
add
cmp
jno
cmp
adc
jns
int
int
mov
fstl
lahf
int
dec
and
mov
dec
pop
ret
mov
mov
pop
add
sbb
mov
out
jo
mov
mov
lods
fwait
fwait
or
imul
push
mov
xchg
jl
xchg
mov
xchg
fsubrl
push
gs
leave
or
mov
cs
scas
xor
adc
cmp
push
loop
fmull
jg
lcall
jmp
add
sub
aas
mov
mov
xchg
shlb
lods
jae
sti
jge
sub
adc
sbb
jo
xor
add
test
jg
add
cmc
hlt
push
dec
lods
xlat
iret
out
out
pop
ja
jnp
ret
sbb
lock
fcomi
xchg
adc
loop
add
fwait
cmp
mov
push
nopl
aad
dec
lods
insl
clc
inc
add
mov
pop
stc
jo
jno
jns
xchg
ret
std
in
sub
jp
cld
shlb
bound
mov
mov
lcall
add
mov
mov
mov
outsb
outsb
outsb
lret
inc
scas
dec
mov
pop
cwtl
out
jno
icebp
insb
outsb
addb
cmc
sbb
sub
cld
cld
ds
fwait
adc
das
xchg
popa
lret
jbe
or
js
aaa
pop
mov
cmp
jae
sarl
push
bound
mov
adc
int
in
imull
xchg
fnstcw
inc
into
mov
cmovl
loope
call
adc
mov
mov
data16
nop
jle
loope
into
adc
cmc
pop
inc
sub
push
aas
in
int
sbb
xor
pushf
mov
ja
testl
stos
xchg
mov
lahf
int
lea
xchg
xchg
pop
pop
jge
or
cmp
sub
into
or
addr16
jp
dec
sahf
inc
adc
sub
xchg
fwait
iret
int
and
mov
clc
adc
stos
imul
js
leave
cmp
xchg
mov
mov
iret
out
idiv
mov
sahf
loop
or
or
sahf
fdivrl
push
inc
inc
clc
fstps
mov
mov
bound
int
int
ds
bound
sbb
iret
test
inc
mov
jno
dec
mov
addr16
or
in
in
cmp
pop
es
and
mov
sahf
fcmovu
pop
jo
jae
push
xchg
aaa
xor
lds
inc
mov
aaa
xchg
jmp
sbb
sbb
inc
xlat
scas
push
jmp
xorl
mov
jle
mov
jno
inc
mov
test
lods
rcll
lea
cli
fdivrs
mov
jb
mov
stos
xor
arpl
xor
mov
mov
push
test
rcr
in
cmpb
rorb
nop
ficompl
out
lahf
int
fists
jbe
mov
clc
fisubl
out
cmp
cld
sbb
ss
insb
outsb
ret
xchg
mov
test
push
push
add
add
out
mov
fildl
or
adc
jns
call
shll
iret
out
idivb
lahf
int
lock
ror
inc
lahf
fwait
cltd
sti
std
sarl
jne
and
es
mov
ds
cmpsb
cs
inc
cmp
cs
pop
ror
dec
and
dec
push
cli
insb
outsb
cmp
or
in
dec
lds
mov
pop
aas
int
int
mov
fidivl
xlat
jo
sub
xor
lret
loopne
std
cs
push
mov
cmpsl
rorl
mov
push
std
mov
insl
insb
test
mov
add
cld
fwait
mov
icebp
adc
push
pop
dec
mov
push
or
insb
pop
clc
jl
sub
aaa
mov
outsl
out
idivb
mov
nop
popf
out
out
outsl
loope
mov
mov
iret
out
daa
mov
mov
subb
pop
aas
fwait
cmp
loop
mov
push
pusha
inc
sti
inc
fstps
or
xchg
int
dec
dec
inc
es
jge
xlat
ret
frstor
scas
enter
call
adcb
movd
mov
jle
adc
fsts
lcall
or
sbb
dec
sub
pop
cmp
int
cltd
or
cmp
rcll
inc
lret
bound
fidivrs
popa
add
cmpsl
ljmp
xchg
stos
mov
jmp
mov
mov
cwtl
insb
dec
push
out
shll
sbb
rcl
outsb
outsb
outsb
sti
mov
pusha
mov
sub
dec
sbb
dec
and
or
adc
movsl
iret
out
sbb
cmp
addr16
popa
xchg
imul
inc
add
dec
sbb
xor
jle
mov
ds
cli
fcoml
dec
fs
outsb
imul
pop
xchg
jecxz
dec
or
icebp
fucom
cmpsb
iret
int
lods
dec
and
jecxz
or
inc
cmp
xor
push
cmp
mov
int
movsl
sub
cmp
sbb
icebp
dec
sub
xchg
inc
js
jo
popf
mov
roll
ficoml
call
cli
es
test
xchg
mov
stc
mov
mov
pop
aas
fwait
pushf
and
rcl
push
mov
add
push
sarb
cmc
cmp
aad
fimull
or
fmull
jl
xchg
lods
stos
pop
out
fdivrl
or
mov
outsl
mov
addr16
fsubr
outsb
cmpsb
xchg
les
arpl
int
int
lcall
in
or
pusha
mov
mov
and
jge
dec
or
mov
add
and
pop
cmp
jne
dec
jnp
inc
or
loope
xchg
lock
lock
mov
in
insl
or
xchg
mov
cmp
mov
cmp
fsub
xchg
push
mov
clc
test
and
pop
cmp
sbb
aam
cmp
in
pop
sbb
or
out
sub
and
or
out
add
mov
and
out
pop
ljmp
sarl
push
sbb
inc
mov
jecxz
popa
loop
andl
or
fcoms
jo
jl
pop
shlb
mov
das
es
shrb
aas
dec
xchg
scas
mov
das
cmpsb
loop
ss
in
fwait
fwait
fwait
stos
push
ficomps
adc
call
fwait
fwait
pop
and
fwait
insl
inc
lahf
xchg
xchg
divb
test
fucomi
stos
and
out
out
mov
lret
mov
or
jno
loop
out
push
lods
push
or
xor
call
or
xchg
sti
fisubrl
dec
enter
pop
fwait
fwait
fwait
fwait
in
and
or
outsb
lahf
fwait
leave
mov
clc
push
and
mov
outsb
outsb
xor
sbb
sub
mov
fidivs
xchg
fdiv
mov
inc
push
sbb
or
lods
dec
lahf
icebp
fnstenv
outsb
sub
dec
add
push
das
dec
inc
sbb
sub
hlt
inc
jp
sbb
or
lretw
call
sub
das
fstp
and
mov
in
daa
orb
insb
icebp
mov
mov
out
shll
ds
scas
bound
idivl
js
movb
dec
repnz
call
xchg
pop
cmp
sub
ret
das
clc
fisubrl
mov
pop
clc
imulb
push
jg
idivb
imul
lea
dec
int
int
lods
inc
adcb
jp
add
push
jecxz
test
and
outsb
lahf
and
inc
push
nop
jb
xor
out
outsb
outsb
outsb
outsb
adc
fimuls
pop
cmc
xorb
das
pop
roll
loopne
pop
inc
inc
dec
nop
out
mov
adc
rcll
jae
mulb
inc
lret
sbb
pop
sti
in
imul
js
mov
cs
shlb
iret
and
stos
or
push
call
sti
sbb
gs
xchg
cmp
cmp
adc
fbld
cmpsb
adc
adc
adc
ret
fwait
fwait
fwait
mov
add
into
jnp
jo
jp
in
or
adc
xchg
lret
shlb
mov
int
out
mov
lea
jle
jp
add
lahf
inc
iret
rolb
movsl
stos
mov
fwait
cmp
push
incb
mov
test
aaa
push
mov
fdivrs
mov
mov
aaa
and
pushf
pusha
mov
rcrl
int
rcrl
cs
int
or
out
roll
das
dec
jl
mov
lret
mov
cmp
ret
push
sbbl
pop
mov
pushf
push
mov
xchg
mov
fldt
adc
jle
ja
es
fwait
fwait
fwait
sub
mov
or
dec
cmpb
mov
nop
sub
pop
xlat
cmc
adc
test
je
les
jnp
cmpsl
cs
mov
push
push
mov
test
out
cs
push
adc
outsb
jg
iret
adc
pop
sahf
nop
fidivrl
bound
mov
shll
fsubr
dec
push
push
aam
fsubrs
dec
rolb
cmp
sub
mov
aaa
mov
int
and
sbb
sub
setnp
cld
inc
pushf
sbb
add
jae
cmp
add
mov
test
mov
pop
inc
out
mov
pop
adc
cmp
cwtl
into
dec
dec
push
lahf
hlt
cmpsb
shr
out
mulb
add
cmp
out
loope
mov
dec
jp
sub
mov
jge
outsb
sbb
mov
movsb
lret
in
pop
fs
fcompl
add
cmp
pop
dec
xor
imul
inc
sahf
sbb
loope
out
mov
cmp
lds
lods
add
iret
out
insl
adc
in
sub
xchg
jne
aam
xlat
fdivrl
int
mov
pop
cmp
fdivrl
jnp
pop
push
in
xor
pusha
mov
rcrb
bound
in
neg
add
leave
xchg
inc
daa
mov
push
mov
int
mov
es
aam
shrl
mov
ja
divl
es
mov
jmp
les
mov
lock
subb
aaa
aaa
aaa
in
push
xorb
jle
add
ds
outsl
jne
lret
xchg
aaa
popf
mov
clc
lock
in
push
mov
jge
fwait
fwait
sub
push
cld
test
cltd
stos
aaa
aas
fwait
fwait
jo
or
xchg
int
ret
and
mov
aaa
enter
lret
fs
fistpl
mov
and
pop
jno
cmp
int
int
push
mov
popf
push
vrsqrt28sd
pop
hlt
mov
std
ljmp
into
add
out
lock
mov
add
stos
bound
inc
jl
faddl
arpl
xchg
push
sbb
fs
cmp
scas
ss
out
jbe
out
push
loopne
adc
jbe
outsb
outsb
outsb
lahf
cmp
jae
jns
lahf
std
cmp
scas
stos
shrl
outsb
pop
and
mov
add
cmp
add
push
insl
mov
rorb
lock
jg
ret
push
add
mov
push
cmp
les
push
aas
fistpl
ss
aaa
or
mov
mov
iret
int
int
mov
lods
icebp
push
scas
xchg
loop
js
cs
xchg
mov
xlat
rclb
jo,pt
mull
aas
fistpl
loop
inc
pop
loopne
inc
clc
xchg
pop
insl
adc
mov
lahf
int
imul
sti
cli
sbb
mov
out
cmpsb
push
mov
adc
int3
mov
xchg
fcmovne
xchg
idiv
movsl
add
lods
cli
lret
int
daa
mov
iret
mov
and
insb
outsb
outsb
ds
push
and
fcmovb
mov
es
mov
mov
mov
outsb
test
sub
push
jl
mov
mov
out
mov
psrlw
jae
punpckhbw
js
fcmovne
out
cs
jae
jae
push
loope
pop
push
jp
roll
iret
scas
mov
call
pop
cmpsb
jno
adc
ror
dec
imul
sti
aaa
insb
pop
sbb
pop
fdivs
sub
test
cmp
ss
aaa
mov
mov
arpl
adc
xor
insb
pop
cwtl
mov
mov
lock
cmp
add
out
jge
loope
inc
jae
sti
fmull
dec
mov
lcall
mov
dec
mov
test
adc
int
int
jb
out
xor
pop
decl
testl
jmp
fsubrl
rcr
insb
lds
mov
lea
fdivrl
call
into
dec
test
loopne
inc
outsb
outsb
out
clc
outsb
jb
adc
scas
jecxz
push
sti
adc
scas
push
loope
fisubl
push
addr16
mov
add
lretw
rolb
dec
cmp
or
ds
in
fwait
xchg
call
add
adc
adcb
dec
sub
jle
lods
xor
outsl
loope
lds
nop
insb
and
popf
xor
rolb
add
cli
xchg
mov
fsubrs
mov
gs
cs
cmpsb
pushf
sbb
push
call
mov
jge
jle
inc
loop
movb
aaa
aaa
aaa
ja
xor
pop
loopne
loopne
inc
sbb
sbb
aaa
aaa
aaa
fadd
inc
mov
xorl
imul
test
aam
push
and
out
mov
cmp
lea
icebp
cmp
loopw
jae
cmp
inc
dec
out
clc
sub
clc
adc
inc
and
int
outsb
cld
mov
test
xchg
int
int
in
mov
inc
popf
mov
int
jg
add
xchg
js
scas
pop
out
aaa
aaa
aaa
mov
or
imul
sahf
cmp
mov
pop
aaa
aaa
aaa
aaa
aas
adcb
data16
cmp
mov
inc
cmp
jne
andb
mov
iret
out
sbb
xor
inc
repnz
pop
rol
ljmp
fwait
fwait
or
pop
mov
test
mov
jne
pop
sti
fwait
jmp
mov
das
mov
test
sbb
leave
mov
mov
push
aam
fstpl
fldt
and
jns
adc
test
add
cmc
adc
outsb
lahf
jecxz
dec
mov
and
arpl
int3
int
hlt
insb
outsb
movsl
lret
out
icebp
enter
dec
jp
sahf
or
mov
daa
imul
xchg
enter
and
shrb
mov
mov
int
lahf
xor
insl
dec
mov
sbb
pop
out
fnstenv
aaa
aaa
aaa
mov
sbb
cltd
jp
xor
test
les
xchg
ds
aaa
jg
xor
hlt
inc
fmuls
mov
push
jnp
test
xchg
add
sti
mov
fdiv
mov
leave
pop
frstor
push
xorb
dec
ljmp
clc
cmpsb
sti
and
das
mov
outsb
mov
xchg
pusha
not
test
loopne
out
sti
jno
xchg
ret
or
push
inc
pop
jne
loopne
mov
jge
or
ja
jae
popa
jge
sub
mov
and
jmp
icebp
mov
inc
pop
into
rolb
rcr
in
dec
adc
mov
push
imul
jb
inc
jl
int3
sbb
or
xor
int
insl
leave
sbb
popa
out
xchg
clc
dec
dec
insb
adc
cmpsb
mov
out
int
jle
sbbb
dec
in
xor
outsb
lahf
fwait
push
shlb
push
mov
aas
js
stc
xor
and
cmp
fiadds
adc
ss
shr
jmp
mov
psrld
cltd
push
test
mov
cmpsl
ss
pop
jecxz
xchg
mov
mov
aad
push
dec
mov
es
fistl
push
pextrw
or
cmp
fnstsw
pop
inc
dec
add
pop
xchg
bound
add
icebp
xor
jae
add
mov
adc
push
jecxz
in
push
mov
adc
jle
out
in
and
sbb
fimuls
lock
mov
mov
inc
test
jae
jecxz
xchg
push
or
sahf
into
xchg
ret
cwtl
in
out
mov
pop
js
adc
add
mov
cmp
add
pushf
and
sti
mov
imul
iret
jmp
jae
mov
out
out
mov
rcrb
adc
les
out
out
and
clc
cmc
dec
addb
iret
out
arpl
sub
daa
and
stos
jmp
int
fistps
fwait
sub
push
setg
jne
cmp
push
outsb
outsb
outsb
pop
dec
dec
sti
push
mov
scas
fisubrl
add
cli
insb
outsb
or
lea
out
divb
pop
sbb
setbe
or
int
sti
movsb
rcrl
rcrl
shlb
jl
inc
aaa
aaa
mov
pusha
dec
sub
push
test
xor
aaa
push
xchg
movsb
pop
push
lahf
fs
orps
repnz
sbb
lahf
cltd
hlt
and
mov
test
out
jnp
mov
mov
addb
in
sub
and
fwait
or
sub
mov
pusha
ljmp
and
cmp
fwait
test
int
add
shlb
loope
pop
inc
cmp
sahf
int
xor
jne
repnz
pusha
and
in
out
add
mov
daa
and
cmp
movsb
add
mov
loop
jbe
add
idivl
test
jbe
imul
outsb
outsb
push
decb
rorb
push
dec
mov
outsb
mov
and
mov
mov
call
xlat
ja
and
xchg
lret
pop
or
scas
or
out
jl
pop
dec
mov
push
insl
and
imul
add
pusha
repz
push
lock
insb
mov
mov
pop
pop
iret
in
jae
pushf
jge
mov
pop
out
cmp
jmp
stos
ja
outsb
jle
adc
std
test
loop
jnp
outsb
loopne
jmp
subl
fisttpl
jbe
push
fcmove
and
jecxz
icebp
sti
sahf
std
sub
xlat
rolb
cli
and
fmull
loopne
mov
int
sahf
stos
fmull
gs
jnp
jbe
push
aas
jbe
sbb
jcxz
lahf
insb
sub
loop
mov
out
pop
jp
data16
sar
pop
adcl
je
xchg
mov
jb
xchg
ss
mov
mov
aad
jg
mov
sub
xchg
jl
sbb
jge
movlps
mov
out
jbe
idivb
das
lcall
jns
mov
fsubrl
fs
iret
out
outsb
mov
xor
jecxz
in
inc
cwtl
jp,pt
outsb
dec
and
mov
mov
inc
out
inc
jl
mov
sub
mov
je
pop
ret
sub
loopne
out
addr16
sbb
test
ds
inc
bound
out
xchg
lcall
pop
lret
mov
mov
cmpb
int
addr16
lods
or
icebp
mov
int
int
add
je
loopne
es
int
int
xchg
testb
fisubrl
aaa
movsl
xchg
mov
mov
pop
add
or
adc
lahf
sbb
in
mov
in
dec
dec
or
out
imul
fdivl
sub
dec
or
fdivrl
cmp
adc
jle
jae
jae
mov
lods
and
je
in
xchg
jae
cmp
int
push
aam
shlb
out
out
or
sub
out
out
cli
aam
sub
push
cli
pop
or
mov
pusha
mov
cli
les
xor
mov
aaa
pop
push
bound
jle
out
mov
sbb
pop
stc
ss
lea
dec
pop
sub
lret
push
dec
xchg
pop
ret
int
int
pop
add
pop
sbb
data16
das
cmp
pop
sub
mov
mov
jl
sub
aam
mov
test
adc
mov
dec
popf
es
test
dec
pop
cmp
push
stc
add
out
xor
xchg
mov
aaa
iret
push
pop
push
std
xor
xchg
ja
outsb
out
nop
push
loop
in
jl
aaa
xchg
ss
addr16
mov
or
lret
insb
clc
push
mov
mov
jbe
int
int
sub
fsubrl
sbb
sahf
inc
cmp
out
inc
jge
pop
pop
fdivrl
mov
fs
arpl
jl
and
cmp
fmull
pop
stos
or
and
arpl
push
mov
cmpsl
and
int
push
rcll
movsb
push
add
xor
divl
lahf
or
mov
push
jle
jecxz
cmpsb
outsb
outsb
outsb
outsb
insb
mov
inc
movb
aam
cmp
pop
jge
arpl
leave
fdiv
js
aam
loope
es
inc
sbb
push
jle
scas
clc
shlb
jae
xchg
into
out
xchg
jnp
and
outsb
outsb
outsb
test
cmc
sti
jnp
xor
fistpl
icebp
xor
outsb
outsb
inc
div
cmpsl
sub
add
outsb
outsb
outsb
or
icebp
aas
ffree
out
jmp
fsubrl
hlt
pop
add
js
jl
rclb
cmp
ret
jae
rorl
jne
and
sbb
insb
addr16
jae
fld
cld
xchg
int
int
repz
lahf
or
sub
popf
or
push
pop
lahf
in
jg
into
push
orb
repnz
sub
xor
out
stos
mov
inc
ljmp
aas
test
shlb
int3
clc
iret
xorl
insl
dec
dec
mov
mov
pop
cmpl
scas
lahf
in
adc
es
cli
mull
iret
push
jo
mov
inc
cmp
pop
repnz
jns
daa
push
xchg
shl
mov
jl
sahf
push
sbb
sbb
pop
es
jb
xor
xchg
in
out
dec
jmp
stc
jmp
push
in
or
inc
mov
lcall
push
jmp
ss
xor
dec
push
outsb
out
jae
jae
sahf
mov
es
mov
fnstcw
subb
gs
lahf
cmc
insb
cli
cmpsl
dec
les
nop
mov
int
fistps
cli
push
out
push
cld
fs
out
mov
int
notl
adc
cld
cmc
push
sti
lahf
int
int
repnz
dec
sbb
mov
int3
or
das
push
cmpsb
aaa
sbb
jne
cmpsb
jecxz
cwtl
fsubl
jae
fsub
jne
fcomps
insb
sub
je
mov
jbe
pop
in
jne
adc
movsl
inc
call
xchg
cmp
test
pusha
sbb
fsubp
popf
int
int
cmc
push
or
ljmp
dec
inc
nop
pop
or
es
fdivrl
outsb
arpl
mov
jbe
cld
arpl
xor
int3
out
sarl
repz
jno
cmp
in
cmpsb
add
pop
lods
mov
loopne
push
pop
xor
jle
lahf
int
jge
sbb
pop
xchg
cli
fprem
repnz
sbb
popf
insb
inc
mov
int
dec
xchg
ss
loope
xor
sub
int
sbb
dec
or
je
jge
outsb
outsb
dec
dec
mov
adc
cmpsb
xchg
call
mov
push
mov
loope
out
in
loopw
ja
jecxz
clc
clc
cmp
icebp
mov
jl
rcrb
aad
sbb
sub
lahf
lcall
pop
xchg
jae
sti
fldcw
lock
mov
jae
jae
jne
andb
movsb
das
mov
test
push
sarl
fcompl
pop
jbe
lret
and
arpl
adc
cs
mov
pop
cmpsl
fs
xchg
in
or
inc
mov
mov
inc
clc
fdivrl
ret
stc
pop
test
call
cmpsb
rolb
and
insb
outsb
and
lret
pusha
popl
and
int
mov
out
lods
int3
pop
push
cmp
fnstcw
or
dec
test
dec
clc
movb
xchg
sub
out
jge
data16
stos
push
and
outsb
pop
or
out
outsb
sbb
call
jge
outsb
adc
pop
cli
mov
mov
int
mov
in
data16
cmp
adc
mov
mov
mov
fsubrl
in
les
lock
outsl
in
fcompl
mov
mov
fcoml
test
push
insl
pop
adc
scas
clc
mov
inc
int
fcmovne
out
lock
sahf
ds
enter
and
fwait
fwait
mov
stc
jmp
arpl
lods
xchg
sahf
push
sbb
addr16
fiaddl
out
add
ljmp
notl
mov
rol
scas
mov
mov
aaa
and
mov
pmulhuw
cmp
dec
cs
mov
pop
scas
sub
mov
lea
shlb
sbb
xor
out
cmpsb
and
stos
mov
add
inc
in
out
cmp
fcoml
adc
leave
sub
jle
cmp
out
jmp
or
outsb
cs
mov
lret
inc
fisubl
outsl
sbbl
pop
clc
stc
insl
mov
mov
repnz
mov
outsb
inc
dec
lods
mov
jae
fisubl
xchg
mov
jge
incl
xchg
divb
push
dec
hlt
lahf
int
addr16
pushl
cmp
mov
sub
aaa
mov
out
mov
or
jmp
dec
jns
dec
cmp
aad
imul
cli
adc
lods
dec
stc
sbb
xor
mov
cmp
test
jo
fwait
fwait
fwait
stos
inc
inc
lds
call
push
in
enter
ret
fcoml
mov
xchg
mov
lahf
pop
mov
adc
loop
sti
adc
lds
in
jo
mov
inc
push
xchg
push
rcrb
or
std
cmp
mov
pop
pop
pop
icebp
add
mov
dec
inc
pop
sub
aaa
aaa
push
cs
push
and
imul
movsb
cmc
movsb
loopne
les
rol
jae
aad
cli
pushf
negb
mov
test
aaa
mov
cmp
xor
and
fistpll
cmp
outsb
jle
aaa
mov
sbb
jge
pop
aaa
aaa
aaa
std
insb
jg
xor
lcall
scas
xor
lock
clc
xchg
add
test
jo
out
cli
or
mov
push
aad
je
out
leave
outsb
outsb
outsb
outsb
xchg
jo
mov
xor
out
js
cli
insb
outsb
mov
popa
pushf
adc
call
mov
int3
cmpsb
cmp
int
in
sbb
bound
pop
mov
int
int
iret
add
and
adc
fwait
fwait
iret
sub
xchg
je
dec
repz
lahf
fwait
fwait
fwait
loopne
jp
fisubl
lret
push
or
or
int
xor
xchg
in
dec
mov
mov
int
mov
scas
scas
push
jp
je
rcrb
fldt
sbb
out
adc
dec
mov
ds
pop
jge
or
mov
cmp
adc
mov
mov
add
or
ret
int
int
cld
add
and
pop
pushf
and
popf
jmp
lods
mov
nop
mov
mov
icebp
fs
dec
and
lcall
std
cmpsl
jmp
or
push
stos
inc
mov
push
mov
cmc
jbe
iret
int
int
fstpt
cmc
or
mov
pop
jl
jg
ret
sbb
nop
sbb
insb
outsb
out
sub
cmp
cs
addr16
std
xchg
es
xlat
push
cmc
mov
inc
sub
sbb
aaa
aaa
ja
lcall
jno
icebp
inc
call
aaa
sbb
push
pop
xor
jg
shll
sbb
add
xor
mov
ljmp
jg
imul
aaa
shr
push
flds
mov
or
fwait
fwait
cltd
push
loop
addr16
jecxz
jecxz
xlat
frstor
mov
insl
jg
ss
fldenv
pusha
jp
pop
rcrb
icebp
or
jbe
iret
dec
adc
dec
xchg
rcrb
or
and
mov
jae
out
xchg
adc
cmp
mov
int3
add
xor
jle
mov
jbe
aas
pop
ds
outsl
adc
outsb
outsb
outsb
mov
mov
pushf
inc
shr
cmc
insb
add
loop
push
dec
daa
inc
or
xor
int
int
into
mov
stos
leave
add
lahf
sub
hlt
add
jle
mov
fwait
fwait
pop
add
xor
outsb
outsb
outsb
pusha
pop
insb
in
ret
jns
xchg
cmpsl
mov
outsb
pop
sahf
mov
inc
sbb
mov
dec
lret
addr16
mov
je
pop
cli
mov
aad
cli
fxtract
aam
jo
cmp
aam
fmul
stos
sub
jbe
lds
push
data16
pop
sbb
cmpb
and
lock
movl
and
mov
sbb
cwtl
or
arpl
mov
cld
xchg
sub
nop
mov
cmpsb
push
adc
xchg
mov
jge
pop
mul
pusha
stos
lret
dec
xchg
stos
cs
mov
or
imul
das
ret
in
addr16
or
mov
dec
mov
insb
mov
iret
push
test
aas
imul
movl
pop
cltd
sti
outsb
outsb
aas
fcmovne
std
jbe
jne
jg
sahf
push
mov
pop
cld
insb
outsb
xchg
or
dec
loopne
pop
cmp
jnp
repnz
push
enter
jae
lock
stos
and
stos
popf
loopne
shlb
loope
or
adc
aad
cli
xor
lret
js
cmpsl
cli
pop
sahf
sub
outsb
outsb
adc
sar
adc
mov
fdiv
shll
mov
lret
push
push
nop
mov
icebp
fcoml
hlt
orl
sub
loopne
clc
lds
je
in
popl
add
lcall
push
adc
sarb
xchg
or
divb
int3
fcmovnb
mov
xchg
addr16
mov
fwait
lock
pushf
cmp
dec
xor
or
sahf
dec
pop
push
into
jle
mov
mov
int
movsb
fstpl
clc
dec
pop
ds
sbb
in
mov
add
pop
loopne
out
jle
clc
sbb
popf
pop
out
cmpsl
shll
and
ljmp
or
inc
test
jl
sub
dec
cmpsl
aad
mov
jns
loop
pop
ds
pusha
inc
adc
loopne
aas
fmuls
adc
mov
jne
lahf
int
mov
shrl
jmp
cmpb
mov
adc
stos
mov
dec
or
scas
mov
imul
push
mov
aam
cmp
into
call
pop
and
cmpsb
ds
call
leave
xor
les
out
add
cmp
xor
jle
cld
mov
out
out
cmp
mov
addr16
popf
pop
mov
pushf
mov
mov
dec
inc
pop
push
xchg
inc
mov
icebp
aad
out
imul
jl
int
sbb
cwtl
dec
cltd
mov
test
cmpsb
sahf
hlt
pop
sbb
nop
fwait
inc
inc
pusha
mov
or
clc
stos
jge
mov
dec
cltd
imul
inc
xlat
push
jbe
mov
in
in
repnz
arpl
sub
inc
js
fs
dec
adc
lods
lahf
inc
cld
insb
mov
cs
jmp
mov
jge
pop
fiaddl
repz
stc
pop
jmp
mov
sti
cs
sbb
iret
push
xchg
mov
inc
enter
push
push
pop
clc
inc
add
pop
enter
icebp
jle
mov
xchg
jne
inc
nop
les
daa
sbb
out
mov
add
mov
call
mov
xchg
cmp
hlt
in
cli
ret
cmp
outsb
repz
jnp
cmp
mov
repz
mov
sub
mov
mov
mov
or
mov
negl
mov
mov
and
std
sub
inc
add
push
stos
sahf
lock
sbb
push
movsb
mov
imul
out
in
jle
aaa
mov
sbb
mov
xchg
push
xchg
add
jge
jno
scas
push
repz
mov
mov
pop
add
push
cmp
nop
fwait
mov
loop
jne
std
push
sahf
add
fwait
fwait
fwait
fwait
cmpb
and
xor
jl
aas
repz
adc
pop
and
sbb
and
jmp
je
jae
ret
push
mov
arpl
ljmp
jmp
xchg
pusha
push
out
divb
push
lret
dec
sti
cmp
mov
out
out
push
repz
jp
jne
shlb
jmp
lds
lock
out
neg
fdivrl
xor
insb
aaa
addr16
pusha
mov
ja
stos
out
jnp
pusha
loop
jle
cli
and
cmc
pop
hlt
aaa
fs
jecxz
fisubl
adcl
cld
and
mov
cmp
mov
lock
aam
cli
in
mov
nop
and
lcall
int
int
movb
xchg
arpl
mov
idivl
mov
xchg
mov
push
scas
jbe
push
dec
dec
dec
sti
fwait
popf
and
hlt
rcr
inc
mov
add
divl
lret
fwait
into
out
mov
or
ret
shlb
hlt
enter
inc
and
pop
in
in
lahf
jp
pop
mov
xchg
sub
push
lods
sub
aaa
cmp
sub
cmp
insb
jle
fwait
fwait
mov
imul
dec
sub
ds
fwait
sub
adc
and
lcall
negb
sbb
mov
add
fnsave
aad
xchg
jle
fisubl
mov
pop
clc
dec
fwait
fwait
fwait
fwait
jmp
cmc
sbb
lea
push
out
sahf
jb
bound
mov
sbb
mov
outsb
outsb
outsb
es
and
lret
ret
fcomps
js
mov
dec
lcall
push
cmpb
imul
jae
jae
push
fistps
or
sub
mov
mov
pop
pop
out
imul
loopne
sub
pop
sahf
stc
int3
cli
mov
mov
mov
or
out
dec
int
pop
sahf
xchg
mov
ss
iret
std
sub
inc
sub
xor
sbb
sub
sti
test
and
sbb
lret
lahf
aad
inc
jp
lahf
fildl
xchg
and
sub
clc
jae
jns
outsb
outsb
outsb
mov
jecxz
sbb
dec
outsb
outsb
outsb
outsb
mov
lcall
or
out
pop
jp
lock
cmp
lock
mov
jbe
xlat
adc
fwait
fwait
jecxz
fstpl
mov
ja
or
fwait
loopne
cmc
pop
jle
mov
mov
loopne
pop
cmp
inc
mov
mov
out
out
cmp
js
ljmp
imul
jge
ret
outsb
dec
fnstsw
push
enter
cmp
adc
jmp
shrb
and
sub
or
sub
mov
mov
rcll
adc
lcall
loope
mov
dec
dec
and
idivb
fisttpl
adc
adc
lea
xlat
mov
mov
repnz
add
test
inc
mov
in
cmp
int
aaa
aaa
aaa
aaa
pop
pop
mov
insl
aam
xchg
sbb
xlat
movsb
mov
xorb
test
repz
les
les
cli
adc
xlat
je
bt
mov
roll
loop
jge
dec
pop
cmp
sub
imul
shlb
mov
cmp
aas
inc
and
ds
aaa
or
xor
adc
push
xchg
cmc
lock
fsub
enter
mov
xchg
popf
add
outsb
outsb
scas
cli
xor
stc
mov
pop
xchg
loop
js
outsb
pop
cli
call
cmp
pop
rorb
push
cltd
test
lcall
jae
push
or
into
icebp
cmp
pop
aam
jae
dec
jmp
inc
neg
jle
mov
cmp
lods
adc
inc
dec
cmp
fsubrl
lahf
ror
loop
push
or
int
jae
pop
pop
les
inc
jmp
mov
fsub
inc
adc
fmull
loope
aaa
lea
mov
in
sub
cmc
add
enter
mov
ss
cld
mov
add
mov
push
adc
aam
aam
jae
jae
dec
pop
jg
shll
push
rol
fwait
sbb
sahf
es
fwait
xor
or
daa
pop
jl
sahf
addr16
inc
lods
xor
aaa
test
xor
xchg
or
mov
aaa
pop
test
daa
data16
push
inc
adc
push
je
jno
test
lock
ret
pop
int3
loopne
loop
incl
mov
cmp
test
test
add
cmp
pop
cmp
xor
adc
out
pop
rcl
test
cmp
rorl
fucomi
sub
or
andl
pop
out
xchg
fistpll
jns
cmp
lret
stos
xchg
int
lcall
fstpt
ljmp
fsubrl
adcl
fdivrl
jl
sbb
push
in
daa
icebp
fldcw
loop
ja
int
in
int
int
xor
aam
call
cmp
int
xchg
ret
scas
hlt
outsl
shlb
call
int
ret
idiv
mov
je
pop
xor
je
mov
add
mov
mov
out
sub
fldt
mov
mov
out
dec
imul
out
sahf
test
in
outsb
pushf
cld
fildl
imul
fdivl
sbb
adc
loop
std
insb
outsb
xor
test
js
ja
es
cmp
xor
mov
fwait
fwait
sbb
xchg
dec
push
inc
adc
mov
fwait
fwait
fwait
fwait
aad
movsl
insb
stos
mov
dec
inc
ds
fwait
fwait
shll
icebp
mov
decl
add
sbbb
hlt
xor
or
push
mov
cwtl
fdivrl
mov
mov
mov
fsub
pusha
jge
rorb
aam
pop
pop
cmp
fsubl
sbb
push
jns
neg
fmul
mov
pop
jbe
adc
mov
sbb
push
mov
out
iret
push
test
push
pop
out
stos
repnz
int
out
stos
data16
jne
inc
sbb
outsb
pusha
and
xchg
pop
xchg
jns
jo
or
jbe
cmp
sti
cmp
rcl
shll
insb
cld
dec
daa
cmp
jae
jae
mov
test
aad
repz
int
ja
jecxz
dec
cmpb
fwait
fwait
fwait
cmp
sub
jg
push
cmpl
dec
test
jbe
into
xor
pop
lock
push
mov
cmp
mov
call
in
xor
int
pop
xor
ljmp
mov
jecxz
incb
push
jb
int
in
in
mov
sbb
in
push
sbb
add
icebp
adc
pop
adc
inc
jno
insb
outsb
xchg
fwait
xorb
cs
gs
mov
pop
inc
sahf
push
loop
sub
cmpsl
mov
push
aas
fcomi
or
ss
add
lahf
in
cwtl
xor
inc
mov
pop
jbe
jae
mov
and
std
fmul
mov
mov
addr16
hlt
pop
xor
pop
cld
pop
idivb
shrl
cmpsb
xorl
out
adc
inc
sahf
pop
mov
cld
cltd
push
dec
es
int
lea
pop
addr16
cmp
lret
xor
fldcw
leave
inc
in
adc
cmc
dec
sbb
pop
hlt
jmp
mov
inc
inc
cli
testl
dec
cld
in
les
aam
mov
sub
jb
orb
in
jbe
pusha
pop
pop
icebp
mov
aaa
push
ret
mov
adc
xlat
sub
sub
and
mov
leave
in
dec
or
push
and
sti
lods
out
das
sbb
xchg
pop
fmulp
out
sub
push
test
pushw
pushf
shlb
clc
dec
inc
or
dec
xchg
xchg
pop
pop
jae
mov
mov
pmullw
lahf
int
in
mov
xor
rcll
outsb
mov
or
es
or
idivl
cmp
sbb
xchg
mov
fwait
push
and
push
sub
and
hlt
maskmovq
testl
sub
mov
or
ja
jb
cmpl
add
mov
clc
sub
add
push
xlat
int3
nop
out
xor
ss
sbb
test
cmp
std
repz
cmp
nop
sahf
shrb
jecxz
lods
adc
scas
je
inc
sahf
push
adc
repnz
cpuid
out
mov
xchg
mov
fnstcw
cs
or
mov
pop
movsb
psraw
add
lahf
ret
test
xchg
pop
pop
mov
cmp
sbb
mov
out
fwait
mull
div
out
or
addr16
or
push
xor
fmuls
int
divb
adc
mov
pop
iret
out
sbb
clc
sbb
sbb
jge
pushf
sti
test
ljmp
test
subb
add
test
inc
xor
xor
pop
pop
and
cmpsb
add
divb
into
bound
pop
out
out
je
hlt
sarl
push
fisubl
jle
ror
fimull
aas
cld
jae
cli
and
ss
push
lcall
pop
jae
ja
int
js
cld
clc
frstor
cmp
fistpl
jbe
mov
sub
sti
mov
push
pushf
subb
dec
mov
lock
mov
aaa
mov
in
repz
fimull
mov
clc
daa
aaa
aaa
aaa
aaa
ror
push
xchg
push
pop
es
adc
fsubrl
mov
xchg
add
insb
outsb
scas
mov
fisttpll
lods
aaa
mov
aad
cmpl
sti
stos
jo
call
outsb
outsb
outsb
das
jo
inc
mov
mov
std
adc
mov
cmc
dec
fstps
mov
ret
cwtl
mov
xor
insb
outsb
xchg
imul
sbb
out
test
sbb
pop
pop
loopne
mov
jno
pop
outsb
add
loope
jmp
pop
hlt
mov
cmpl
cmc
mov
xchg
mov
mov
add
in
out
mov
sbb
mov
mov
ret
int
int
out
repz
jbe
adc
pop
pop
adc
nop
mov
pavgb
cwtl
cmc
and
test
push
stc
popf
mov
outsb
add
jae
sti
xchg
shl
jbe
in
push
ss
out
mov
arpl
or
mov
ret
cmpsl
sub
enter
and
jle
jmp
jb
xor
out
test
adc
in
xor
push
lahf
mov
dec
ljmp
mov
iret
push
push
sbb
dec
cmp
xchg
mov
jo
jns
dec
pop
sub
push
mov
jmp
push
jae
add
movsl
aas
inc
dec
fisubs
sub
loopne
in
test
and
out
push
sub
cli
sub
aam
sahf
dec
out
sbb
jo
int
in
mull
sahf
sahf
jp
inc
in
mov
inc
xchg
int
int
xorb
outsb
imul
lret
jge
xor
cld
cmp
adc
hlt
or
cmp
push
int
add
int3
dec
lods
sbb
lret
push
mov
xchg
jl
cli
test
repnz
dec
pop
je
mov
cmp
ss
dec
jmp
in
sub
mov
test
stc
sbb
dec
outsb
adc
rcr
mov
mov
jbe
insb
inc
lods
clc
popa
push
les
xchg
xor
mov
test
pop
ss
scas
int
adc
pushf
jbe
in
mov
ret
cmp
fstps
bound
idiv
insb
outsb
outsb
mov
std
je
cwtl
add
lods
xchg
mov
push
lock
loopne
cmpsb
jo
mov
fbstp
ficoml
out
out
mov
cli
repz
insb
out
out
into
imul
mov
out
cmpsl
add
movsb
mov
add
fstpl
push
bound
pop
cmpsl
xorl
insb
outsb
outsb
andb
ja
lret
fdiv
inc
lret
sub
je
int
and
add
fldcw
xor
dec
out
dec
clc
add
shr
sbb
sahf
pop
adc
out
out
pop
push
test
lahf
popf
mov
lods
aas
fcmovne
out
out
cmp
repz
clc
jae
xchg
imulb
outsb
outsb
xor
dec
daa
xchg
subl
outsb
scas
enter
pop
das
jmp
cmp
push
jnp
push
sbb
cli
shl
stos
addl
ljmp
aas
inc
cmp
hlt
insb
outsb
cs
sahf
push
mov
out
imul
mov
mov
fcmovbe
movsb
cld
or
or
ror
xchg
subb
sbb
sahf
ret
mov
outsb
mov
jmp
addr16
cmc
jmp
dec
aas
dec
adc
mov
ja
das
lds
cli
lahf
loope
mov
cmp
clc
push
mov
fcmovnb
shrb
xchg
fmul
and
add
sbb
insb
clc
mov
xor
mov
xchg
adc
dec
cli
mov
pop
pop
gs
repz
out
pop
lock
xlat
cmp
and
cs
mov
popa
enter
pop
mov
mov
dec
insb
pop
cmpsl
xlat
inc
ljmp
add
shlb
pop
popa
das
jge
std
je
lods
leave
js
aaa
mov
add
int
fsqrt
ljmp
sbb
sub
sub
into
out
fcomp
gs
mov
cmp
std
dec
pushf
mov
rcll
insl
jecxz
cmp
or
mov
and
fcmovne
cmpsl
rorb
cmpb
fwait
adc
shlb
pop
dec
fbld
out
inc
aas
mov
fiadds
scas
mov
gs
dec
xor
std
insb
outsb
shrb
adc
pop
sub
outsb
mov
addb
test
testl
outsb
outsb
outsb
rcrl
and
push
sub
outsb
dec
mov
pushf
movsb
imul
ja
loop
cli
mov
jae
jae
mov
nop
icebp
cmp
xor
lods
add
push
test
in
fcompl
and
les
adc
jp
popf
sbb
jmp
push
sub
icebp
aaa
aaa
cmp
loop
in
sub
fdivrl
repnz
stos
mov
and
out
sti
or
rorl
lds
in
es
fwait
jle
rcl
dec
add
push
daa
arpl
iret
in
push
mov
lret
jns
jno
mov
pop
add
jbe
insb
fcmovbe
bound
inc
lcall
add
pop
push
jbe
orl
scas
jecxz
inc
pop
sbb
jns
jno
pusha
pop
jecxz
rorb
mov
cmp
push
jmp
xchg
mov
js
add
mov
movsb
adc
cs
xchg
aad
stos
jo
cmp
pushf
rcll
push
loop
ror
ret
cmp
testl
aas
adc
jae
jge
repz
sbb
in
fdivrl
lds
inc
dec
pop
cwtl
fldl
push
or
dec
add
movsb
cmp
test
call
inc
es
mov
rcrb
les
mov
cmpb
ss
jne
push
adc
iret
dec
sbb
pop
arpl
and
imul
pop
in
inc
xchg
inc
adc
imul
adc
inc
jae
jae
sub
lcall
push
pop
int
in
jae
cmp
mov
out
clc
xchg
adc
rclb
test
xchg
sub
cmp
mov
inc
and
insb
jo,pn
sub
cmp
out
pop
sub
or
jge
cmp
imul
dec
or
icebp
lock
outsb
add
mov
lods
lods
movsl
in
leave
ja
fdivrl
aaa
mov
test
sahf
imull
insb
pop
pushf
inc
jae
sti
fptan
xor
jmp
cld
xchg
xchg
jae
jae
fs
sbb
cli
pop
rclb
test
dec
mov
mov
inc
inc
jmp
push
test
dec
xor
jle
sbb
out
rep
add
add
adc
push
and
outsb
cs
fstps
in
ret
fisubl
mov
fwait
clc
insb
sub
sub
ret
sbb
shlb
mov
ret
loope
push
lret
fs
or
fstps
sbb
xorb
mov
jae
sti
pop
inc
bound
jnp
hlt
xlat
rcll
int
fwait
mov
shrb
pop
xor
sbbb
out
mov
mov
inc
aas
outsb
outsb
sar
inc
jp
test
cmp
push
push
jge
mov
mov
popa
inc
ljmp
lock
xor
imul
scas
shlb
daa
and
lods
jle
fs
jne
int
push
pusha
adc
cs
inc
pop
enter
int
int
mov
xor
push
lahf
int
sti
adc
or
lock
pop
fdivrs
cmp
lcall
addr16
push
lods
clc
mov
lahf
int
pop
push
test
into
out
jecxz
scas
jae
jae
es
scas
mov
dec
sarb
imul
push
sbb
adc
movsb
jp
ret
gs
arpl
mov
jnp
inc
add
jae
rcll
dec
and
lea
jnp
or
add
jge
ret
cmc
push
mov
ss
sbb
fsubrs
cmpsb
out
sarb
int3
mov
add
adc
or
sbb
inc
lahf
int
and
iret
xchg
hlt
sahf
fistl
into
stc
mov
loop
cmp
fdivl
inc
jle
les
cmpb
dec
or
or
stos
and
jae
jae
or
dec
sub
movsb
int3
std
add
pop
mov
call
push
lret
jbe
addb
rol
mov
push
sbb
push
dec
inc
inc
das
lret
xorb
lds
dec
inc
add
rcrb
test
jle
loop
mov
mov
in
addr16
sti
mov
push
jns
or
loopne
sbb
jae
and
mov
pop
pop
sub
fnstcw
lea
test
cli
lods
cli
jnp
xor
idivb
stos
xchg
stos
mov
lret
icebp
cld
imul
and
cwtl
es
pop
outsb
xor
out
dec
negb
pushl
pop
xor
dec
or
xlat
mov
cld
clc
sbb
pop
bound
ja
lods
out
cmp
xchg
repz
mov
pop
inc
clc
adc
cmp
out
mov
sbb
cmc
insb
movsb
outsb
outsb
mov
lods
or
loop
es
and
mov
and
mov
jl
imul
ljmp
sbb
in
mov
mov
lds
iret
int
iret
cmp
sbb
aam
dec
cmp
out
mov
nop
xchg
loop
cltd
jns
sbb
jb
in
pop
fdivl
add
out
sub
jnp
out
push
xor
cmc
repz
jae
std
repz
enter
fistpll
push
dec
cmp
jbe
xchg
sub
pop
mov
jae
jno
add
mov
in
je
fdivrl
inc
addr16
mov
jno
faddl
xor
in
cs
rcll
jbe
ljmp
mov
jns
mov
nop
and
add
mov
int3
or
movsl
in
push
mov
mov
inc
and
push
ret
mov
mov
sub
mov
pop
cmp
xorb
int
cwtl
ret
scas
lock
or
outsb
outsb
outsb
aas
xor
enter
das
xlat
fdiv
cmpb
das
loopne
ja
xchg
clc
cmp
lret
cmp
fadds
push
lock
push
jle
clc
int
int
sbb
insl
fcomip
mov
aaa
mov
int
or
jbe
add
sbb
jns
cwtl
insb
jge
aaa
xchg
fidivs
mov
or
jbe
fmulp
sbb
mov
xor
adc
mov
add
sbb
bound
jg
out
mov
stos
mov
adc
mov
mov
ja
clc
cld
out
push
movsb
push
inc
das
sub
push
xor
xor
shlb
into
mov
mov
dec
sahf
pop
pushf
pop
cld
inc
imul
push
mov
cmp
cli
cmpsl
clc
js
movsb
out
mov
adc
pop
jo
gs
shl
and
aam
mov
xor
out
out
stc
das
jae
ror
cmpl
lods
cmp
out
out
jo
movsl
xor
stos
mov
jb
shl
adc
xlat
jno
cld
dec
pop
out
bound
mov
pop
sbb
shrb
in
dec
xchg
push
push
xorb
pop
and
outsb
mov
movsb
out
fbstp
stc
idivb
mov
nop
imul
or
dec
mov
sbb
mov
clc
insb
loopne
pop
orb
or
sub
pop
stos
cmc
pop
daa
xchg
fimuls
inc
sbb
mov
call
xchg
mov
insb
or
xchg
fildl
jmp
adc
and
scas
xor
mul
cmpsb
pop
lahf
mov
inc
stos
shrb
aam
in
stos
fcom
test
dec
aam
pop
icebp
mov
jbe
addb
sub
icebp
cmpsl
mov
popa
lods
cmp
rolb
push
es
adc
xchg
mov
dec
iret
cmp
jle
fdivs
or
lcall
shr
sti
fmull
enter
mov
out
mov
fldcw
jnp
dec
movb
pusha
jl
and
std
movsb
push
test
fdivs
es
fisubl
adc
push
lahf
mov
dec
jno
jbe
sahf
fwait
fwait
out
jle
jmp
inc
test
mov
mov
push
out
jns
dec
fwait
fcmovnu
repnz
call
add
add
bound
movsb
pusha
mov
mov
inc
movsl
adc
sarl
xchg
mov
outsb
outsb
out
sub
lods
dec
adc
pop
pop
outsb
outsb
outsb
outsb
mov
sbb
sbb
fstps
es
ret
movsb
add
loopne
mov
scas
inc
mov
cmpsb
push
push
out
xor
hlt
mov
mov
xchg
repnz
fcmove
test
mov
mov
insl
add
das
outsb
outsb
outsb
das
pop
fs
mov
movsl
add
insb
outsb
outsb
repnz
cmc
pop
mov
cmpb
mov
subb
jne
out
idivb
xchg
repz
adc
dec
out
lahf
sti
mov
loope
mov
mov
outsb
outsb
outsb
push
iret
imul
cs
cmp
add
int3
jmp
sti
cmpsb
xchg
decb
pop
iret
jmp
inc
xchg
aaa
fwait
fwait
or
enter
dec
outsb
adcl
jbe
jl
sahf
cmpsl
cmp
push
je
add
aaa
aaa
adc
notl
outsb
clc
dec
out
subl
stos
subb
jbe
std
insb
in
sub
sub
jne
dec
out
cmpsl
push
pop
stos
popa
mov
pusha
faddl
sti
insb
outsb
mov
sub
push
cmp
inc
cs
or
movsb
xor
mov
xchg
icebp
cwtl
cli
nop
inc
pop
hlt
push
daa
idiv
fstps
int
push
xchg
jecxz
es
inc
lahf
mov
sub
add
mov
lock
insb
fimull
push
dec
loop
dec
lea
pop
jo
adc
jp
ss
mov
mov
ljmp
inc
mov
cmpsl
outsb
outsb
outsb
jle
push
mov
pop
stc
push
cli
outsb
outsb
outsb
outsb
popa
and
fcmovnb
repnz
cmp
outsb
push
mov
loop
popa
mov
dec
lahf
addl
fisubs
push
mov
popa
xchg
cwtl
push
jae
pop
fdivrp
aas
movsb
mov
sub
addr16
pop
pusha
inc
mov
arpl
xlat
dec
jbe
jle
cli
icebp
fucomp
xchg
fisttpl
aam
sahf
out
push
push
lcall
mov
sub
mov
push
lret
sahf
jno
add
aad
out
mov
inc
fadds
nop
adc
addr16
test
call
test
shrb
inc
push
fisttpll
or
ds
cmp
jno
mov
mov
and
mov
pop
add
ficoml
rorb
mov
subl
stc
sar
or
sbb
and
testb
in
add
push
enter
lahf
jl
testl
inc
mulb
outsb
or
sub
dec
js
pop
mov
lret
lahf
add
iret
out
add
in
stos
cmpsb
jb
sbb
jp
add
mov
loopne
fwait
or
push
dec
adc
sar
push
pop
pop
pop
ja
mov
lods
mov
aaa
aaa
in
dec
dec
sbbb
push
inc
sti
and
aaa
outsl
jb
loopne
inc
dec
dec
aaa
mov
stos
mov
scas
xchg
inc
cmpsl
enter
ss
sub
ljmp
call
jno
jp
jns
int
int
sub
fwait
bound
ret
int
sub
xchg
mov
std
mov
enter
int
int
jb
mov
js
test
pop
or
mov
dec
cltd
jmp
addr16
mov
xchg
mov
mov
or
out
mov
xchg
inc
cld
adc
fwait
icebp
leave
mov
ja
es
test
arpl
aaa
push
jge
cmp
ss
rclb
insl
xchg
fmull
sarl
inc
shl
jae
jae
mov
push
ds
popf
mov
xchg
push
stos
fstl
and
loopne
stos
or
hlt
mov
gs
mov
out
sahf
and
nop
ds
adc
push
inc
mov
out
testb
bound
adcb
das
adc
out
out
popa
fdivrl
add
stos
repz
mov
fcmovne
out
mov
outsb
adc
int
dec
lahf
jnp
push
lods
dec
xchg
sbb
in
int
int
pop
ror
js
sbb
xlat
int3
or
sub
mov
sbb
inc
jne
stos
cmpsl
push
orb
and
fcoml
mov
ret
repz
sbb
shl
in
jb
add
scas
push
sbb
lret
xor
jae
addr16
dec
cld
test
lcall
jae
jae
dec
dec
or
aaa
loope
cs
data16
mov
or
xorl
push
jecxz
outsb
pop
or
sub
lret
loop
mov
mov
dec
pop
push
xchg
mov
xchg
push
xchg
sub
sbb
repz
addb
dec
jle
mov
jo
scas
ffreep
addr16
divl
dec
mov
test
outsb
mov
loopne
ret
mov
cmpsl
mov
adc
ja
jae
divb
cmpsb
xlat
sub
jb
shrl
fcmovne
mov
enter
mov
and
mov
outsb
aas
fwait
xor
xchg
movb
ja
outsb
outsb
outsb
outsb
cs
xchg
js
jl
dec
das
out
jnp
out
enter
lock
ret
out
fcomi
xor
sub
or
mov
popf
cmp
insb
lahf
fwait
sarl
xchg
lcall
adc
ja
sbb
les
sbb
jae
jnp
lods
in
test
dec
loope
mov
pushf
dec
push
pop
fucomi
mov
repnz
lahf
stos
mov
bound
je
icebp
aaa
aaa
pop
jl
xor
cli
dec
mov
ret
add
lods
out
xor
ds
xor
fdivl
out
iret
testb
sbb
jo
int
add
sbb
inc
pop
sahf
add
incb
sahf
cmp
es
aam
sub
mov
jbe
ds
loopne
dec
xor
inc
shrl
mov
jae
sti
adc
mov
push
lods
insb
iret
in
addr16
das
into
das
jns
xchg
mov
cli
fdivrl
mov
xchg
cwtl
insb
mov
aas
sbb
and
sub
sub
sbbb
xor
lea
addr16
insb
aad
mov
push
ss
push
push
mov
std
insl
cmp
in
mov
call
pop
in
bnd
jge
jno
mov
lret
sub
or
mov
stos
bound
push
mov
ret
cld
add
inc
cli
mov
in
dec
fs
mov
dec
xor
ret
daa
je
fbld
fdivl
ret
frstor
xchg
xchg
fldt
pop
shl
outsb
outsb
movl
jmp
adc
pop
jl
xchg
mov
std
mov
arpl
lret
jecxz
js
or
jp
pushf
lret
fisubrl
cmc
and
bnd
movsl
dec
jb
icebp
addb
push
push
movsb
ds
inc
imull
xchg
push
cmp
cmp
addb
xchg
mov
ds
aaa
mov
imul
addr16
push
ds
hlt
mov
clc
add
mov
cmpsb
and
pop
xchg
es
shlb
xchg
outsb
outsb
outsb
pop
push
imul
insb
lret
movsb
mov
outsb
outsb
outsb
outsb
mov
push
xchg
jne
pop
push
mov
and
mov
in
jbe
pop
repz
idivb
sbb
mov
out
pop
ret
fstl
loopne,pt
icebp
xchg
stc
fcmovne
out
arpl
jge
inc
shlb
loop
ljmp
insb
movb
lret
out
pop
ljmp
adc
xor
imul
pop
mov
mov
inc
push
fcmovb
int
int
dec
pop
cmpb
inc
cmp
jno
setg
mov
enter
jge
cwtl
cmpl
loopne
icebp
jl
lods
add
idivl
sti
fsubrl
fstps
jae
jae
mov
mov
mov
outsb
pop
sbb
adc
jnp
dec
stos
jae
hlt
std
dec
sbb
clc
mov
xchg
and
repnz
divb
add
es
jmp
mov
push
gs
jb
fbld
test
jno
mov
sbb
sbb
pop
push
mov
mov
fistpll
ret
pop
mov
aaa
aaa
orb
das
mov
mov
mov
jle
aaa
jae
dec
outsl
push
xchg
xor
out
cmp
hlt
sahf
xchg
or
fucom
or
pop
adc
sbb
ss
cmp
fidivs
in
outsl
imul
mov
int
int
insb
mov
leave
mov
int
int
shlb
rcl
push
sub
mov
int
pop
fldl
xor
int3
fdivrl
data16
xlat
in
jmp
neg
push
inc
mov
sbb
cmpsb
sbb
jg
test
jl
push
add
xor
lock
xor
jno
cli
mov
jae
aaa
aaa
mov
arpl
popa
add
push
stc
mov
aaa
mov
adc
pop
daa
movsb
fists
and
js
and
mov
xchg
jo
inc
push
icebp
mov
push
mov
jns
dec
test
scas
xor
mov
mov
dec
add
adc
icebp
mov
repnz
jmp
int
int
inc
xor
pop
lods
fwait
jg
les
int
int
xchg
ret
lods
popa
xchg
jle
or
out
orl
fistl
mov
int
mov
jg
rcrl
jp
jg
push
rorb
cmp
xchg
clc
xor
xor
inc
aaa
ja
insl
cmp
pop
jo
mov
aam
shlb
aaa
aaa
aaa
cltd
loop
scas
xchg
mov
out
lahf
daa
clc
movsb
ds
pop
and
sbbb
ljmp
cld
in
lods
cmpsl
stc
lea
jbe
hlt
ss
enter
addr16
roll
insb
test
jno
mov
fwait
mov
sbb
jne
aas
fwait
sub
inc
fiaddl
mov
lcall
aam
fwait
fldl
orl
dec
lcall
lahf
push
push
add
mov
mov
push
leave
mov
pop
rcrb
jb
out
mov
cmp
add
or
mov
mov
ja
outsl
inc
sbb
jmp
sub
jmp
aam
fst
xchg
mov
outsb
iret
stc
jns
pop
fmull
out
dec
xor
dec
pop
inc
add
cli
sbb
jae
sarb
in
xlat
ret
push
sbbb
rcll
lods
out
ret
cld
pop
adc
shrb
push
sti
lret
decl
mov
or
sub
cltd
in
int
in
inc
xchg
or
int3
jmp
pushf
dec
adcl
ljmp
xchg
mov
pop
inc
shll
add
stc
cli
fisubs
stos
cwtl
pop
test
out
inc
mov
clc
fnstcw
fmull
push
clc
push
outsb
xorb
mov
push
xchg
cli
insb
stos
into
inc
mov
or
lock
push
js
aaa
inc
xor
mov
jge
je
pushf
mov
jmp
mov
pop
push
repnz
push
mov
jle
mov
inc
divb
mov
hlt
dec
mov
fcompl
icebp
roll
dec
out
xchg
scas
mov
loopne
jae
fmul
cmp
test
das
daa
mov
add
dec
shlb
loop
fcompl
inc
jns
jno
orl
jge
lahf
jmpw
adc
inc
cmp
cmpb
rcr
idivb
fldenvs
sbb
or
xchg
xorb
out
push
dec
push
int
xor
pop
adc
xlat
push
outsb
mov
lahf
sbb
mov
loopne
fidivl
adc
sub
stos
ret
or
jne
je
clc
mov
xor
cmp
int
sti
es
sahf
ss
fsubp
movsl
int
int
rcl
inc
popf
fnstenv
je
int
int
add
lea
fmull
mov
int
xchg
iret
cmp
jg
je
cmp
ss
cltd
popf
rcr
sub
es
repnz
rorl
lds
fldt
jno
insb
dec
push
shlb
mov
mov
into
jb
push
loopne
fdiv
in
and
push
clc
fsubrl
dec
or
int
add
stos
addr16
call
es
mov
xchg
xor
dec
or
pop
mov
or
lahf
dec
rorb
aas
ret
int3
sahf
int
int
adc
adc
enter
or
pop
cmc
and
jno
outsb
or
xchg
in
jmp
test
mov
jp
add
loopne
out
cwtl
cmpsb
scas
mov
dec
add
imul
aaa
mov
pop
mov
dec
insb
je
jl
and
mov
cs
int3
push
in
mov
out
cmpsb
iret
addr16
test
xchg
adc
inc
out
add
pop
and
sahf
int
pop
test
lods
mov
int
sti
pop
sub
lcall
mov
mov
mov
dec
iret
dec
cmp
out
lret
inc
cmp
sti
fnstcw
add
sbb
sarl
mov
jae
fadds
jmp
cmc
push
stc
sub
mov
daa
ss
cmp
adc
or
ljmp
sti
sbb
fwait
sbb
sub
or
cmp
mov
or
cmpsl
outsl
ljmp
divl
mov
insb
sahf
mov
or
movsl
daa
pop
mov
lock
shrl
and
icebp
fcoml
xchg
jb
xor
dec
jg
cli
sbb
aaa
mov
pop
stc
loop
insb
xchg
out
shlb
pop
ret
jge
aaa
jbe
mov
js
mov
xor
pop
js
or
jl
out
out
test
adc
roll
repz
adc
lds
pop
jmp
lds
pop
out
loopne
mov
in
adc
sbb
mov
pop
xchg
aam
icebp
mov
or
xor
and
xor
jns
out
enter
jae
sarb
sti
insb
out
sbb
daa
mov
sub
push
insl
xor
jae
ror
shl
mov
lahf
das
push
jae
jae
mov
cld
pop
dec
jp
jae
jae
inc
in
inc
stos
aad
cmp
bswap
push
in
dec
jae
out
shlb
sbb
lock
mov
jle
iret
xchg
push
ljmp
addr16
push
mov
xchg
jl
popf
mov
mov
mov
std
cmpsb
mov
imul
out
adc
dec
adc
cmp
mov
stos
push
aaa
mov
add
in
es
repnz
xor
aaa
aaa
aaa
lods
imul
xchg
enter
aaa
aaa
aaa
aaa
fwait
movsb
pop
adc
or
mov
lret
add
leave
lea
and
xchg
mov
popa
mov
outsb
paddd
push
sarl
xchg
scas
aaa
aaa
aaa
ja
je
push
inc
push
fcmovnb
out
clc
sub
ja
jecxz
or
and
movsb
pop
insb
outsb
outsb
aas
push
pop
mov
mov
loope
mov
jge
aaa
mov
push
aam
shl
mov
gs
adc
lods
popf
stos
mov
scas
adc
adc
push
jns
inc
lods
mov
mov
ret
fldenv
enter
fdiv
mov
inc
movsl
xor
and
iret
lods
jmp
fwait
sub
pop
stos
subb
push
inc
sti
arpl
bound
out
out
pop
out
lahf
inc
fldl2e
pop
outsl
and
or
jo
lret
cltd
or
ja
sbb
into
cwtl
arpl
aam
iret
cmpsb
adc
out
fdivrl
mov
popf
int
in
inc
sarb
lock
jb
sbb
jl
or
push
add
insb
dec
pushf
jne
adc
mov
pop
or
add
rorb
stc
flds
cmpsb
sbbb
push
movsl
mov
sti
xor
jne
cmp
add
js
std
push
pop
and
rcrb
dec
ret
cmp
in
movb
hlt
fisubs
or
test
dec
or
fmull
mov
mov
push
pop
jne
out
cli
xor
js
fisubs
jbe
and
inc
inc
clc
test
sbb
out
mov
xchg
sbb
xchg
ds
mov
push
adc
sti
pop
idivl
push
mov
sahf
mov
jmp
loop
mov
out
sti
fnstcw
mov
sbb
out
jb
shl
adc
ds
aaa
mov
fiaddl
rorl
dec
jns
xor
cmp
fcompl
jb
stc
add
aas
gs
cs
adc
es
popf
dec
cmpsb
outsb
outsb
cmp
in
push
pop
xor
outsb
outsb
sub
aaa
push
testb
sub
in
inc
fidivrs
fstpt
sahf
mov
push
jbe
sub
sbb
mov
sub
dec
inc
mov
fdivrl
fisttps
push
jl
pop
test
push
jbe
sahf
pop
insb
xchg
fsubs
sti
or
mov
aaa
pop
loopne
loopne
sbb
cmpsl
xor
pop
cmpb
jae
loopne
pop
push
repz
ljmp
or
fwait
mov
mov
inc
inc
scas
idiv
mov
fwait
xchg
std
addr16
and
and
xor
and
or
mov
outsb
outsb
outsb
outsb
xchg
movsb
push
cmp
ss
scas
aaa
ja
insb
dec
jb
push
mov
add
xlat
aaa
aaa
aaa
aaa
hlt
mov
pop
sbb
mov
aaa
and
push
add
mov
mov
mov
jnp
fnstcw
dec
rclb
dec
dec
adc
es
push
addr16
fisttpl
xchg
push
test
pop
test
add
dec
inc
scas
jg
shlb
sbb
bnd
roll
mov
xchg
add
dec
dec
sahf
jae,pn
daa
ljmp
dec
leave
addr16
jae
cmpsl
add
xchg
and
insb
mov
js
jmp
fwait
fwait
fwait
pop
in
mov
jne
push
push
outsl
mov
dec
cmp
mov
pop
repnz
push
fnstcw
int
in
addr16
lahf
aas
dec
adc
xchg
jbe
fcompl
int
jecxz
in
rcll
test
ret
out
fisubrl
in
arpl
sub
psrad
insb
outsb
dec
les
mov
cmpsl
scas
xor
std
xchg
or
jge
or
push
aaa
mov
ds
in
mov
mov
or
inc
push
jp
outsl
fnstcw
aaa
aaa
mov
add
pop
clc
fstpt
pop
out
cli
sbb
adcb
pop
mov
clc
enterw
int
aas
fwait
pusha
insb
cmp
test
sbb
pop
in
and
cmp
movsb
int
mulw
xor
dec
dec
sahf
mov
imul
lret
jae
fcompl
inc
out
into
clc
sbb
pop
fprem1
adc
lds
mov
out
fdivl
jp
fdivrl
movsl
loopne
mov
in
in
outsl
repz
outsb
outsb
pop
ret
sbb
jbe
add
add
jle
cmc
insb
ja
mov
mov
inc
mov
test
mov
and
mov
mov
ret
fbld
lods
jecxz
mov
xchg
addr16
shll
divb
ss
mov
insb
adcb
lahf
int
xor
cmp
out
out
jno
stos
mov
mov
flds
fidivrs
mov
xchg
mov
outsl
xor
rorb
icebp
mov
test
stc
xor
mov
adc
das
scas
xor
fcomps
das
test
add
outsl
rorl
mov
orb
fimuls
ds
lahf
pop
add
mov
call
stc
adc
and
out
mov
jmp
sub
in
lcall
faddl
mov
dec
leave
xor
sti
ds
rcl
ss
out
jns
test
lods
mov
push
xchg
push
jl
xor
mov
push
and
negb
cmp
scas
pusha
adc
pop
pop
subl
mov
xchg
andl
push
lods
leave
cld
in
cli
dec
ss
out
dec
mov
ds
and
call
or
jae
js
jae
subb
mov
cmp
fmul
add
int
xor
sti
repnz
out
adc
lahf
into
test
mov
jae
inc
fadds
jecxz
xchg
jmp
aas
test
jge
leave
and
int
int
and
les
sti
lcall
int
int
iret
mov
cs
mov
push
int
int
push
xchg
cmp
add
int
dec
in
jbe
jno
jno
fidivrl
movsl
loope
hlt
mov
sahf
inc
mov
inc
or
inc
pop
movsb
sahf
xchg
popf
cmpsb
int
int
lcall
xor
aad
addr16
int
sbb
pop
adc
addr16
int
sbb
outsb
mov
xchg
cmpsl
sbb
aas
sub
lods
dec
pop
test
testb
nop
fucomip
sahf
pop
rdmsr
les
rcll
jae
repnz
push
pop
cmpxchg
call
jae
cmp
xor
xor
popa
in
jae
jae
call
push
jnp
push
xor
lahf
int
in
mov
es
iret
add
aaa
aaa
cmp
repnz
subb
mov
jl
fcomi
lcall
sub
subb
std
sahf
fwait
fwait
lods
add
or
xor
mov
jp
xor
inc
movsl
mov
ljmp
mov
jae
jae
stos
jl
ffreep
out
mov
and
cld
pop
addr16
pusha
jg
out
jl
in
jecxz
lock
xorb
sbb
dec
pop
adc
jle
mov
jno
jae
inc
add
dec
inc
sub
insb
insl
mov
jae
pop
outsb
xor
aaa
sti
int
xor
sti
push
insb
pop
in
clc
es
or
addr16
je
adc
dec
pop
mov
hlt
adc
mov
inc
lea
out
mov
fadd
jg
fidivl
or
mov
add
push
cld
pop
aaa
pop
std
adc
or
sbb
or
aaa
aaa
aaa
aaa
sbb
imul
inc
in
jno
mov
xor
push
addr16
aaa
or
loopne
std
jle
jecxz
inc
or
inc
lods
adc
sub
cmp
mov
push
out
mov
ljmp
adc
xor
ja
lcall
test
out
adcb
adc
loopne
mov
pop
jge
xor
out
fcmove
push
xor
test
mov
in
pushf
sar
adc
outsb
mov
scas
sahf
add
mov
adc
stos
pop
ficoms
call
xchg
inc
loopne
sar
jo
xchg
lods
xchg
mov
inc
iret
jbe
out
adc
push
xchg
rcl
or
fcompl
and
cmp
add
sti
mov
inc
icebp
add
xor
int
xor
dec
mov
fcmovnu
fmull
scas
clc
jge
cmpsb
pop
sub
stos
std
jbe
imul
insb
outsb
outsb
loopne
mov
jle
ret
add
dec
push
ficoml
pop
cs
sbb
dec
cli
and
and
gs
in
pop
ret
repz
mov
or
jle
popf
jo
mov
xor
hlt
dec
jecxz
out
test
inc
add
sti
push
or
sbb
pop
jge
shlb
jge
faddl
jl
divl
mov
pop
std
out
fidivs
rclb
in
xchg
les
mov
bound
push
out
out
fldl2e
outsl
or
or
out
cli
inc
into
adc
sub
inc
fisttps
adc
inc
or
add
int
int
lods
sub
lods
mov
dec
dec
lahf
int
or
cmpsl
lret
xor
lods
jbe
ds
out
or
add
mov
loopne
push
cmpsb
pusha
ljmp
add
mov
and
enter
int
subl
xlat
arpl
adc
in
imull
outsl
cmpb
hlt
xchg
jae
add
scas
or
incb
jo
imul
jae
jae
mov
jmp
es
inc
fidivs
mov
call
and
scas
leave
pushf
jl
xlat
xor
aaa
mov
test
cmp
movsb
loope
ret
orb
dec
lcall
pop
adc
aaa
aaa
es
mov
push
mov
cmp
pop
cmp
xor
popf
fimuls
ds
aaa
sub
mov
gs
xchg
gs
aas
fwait
fwait
pop
enter
push
in
pop
cmp
sub
pop
cmp
rolb
subl
out
out
mov
rclb
dec
xchg
push
out
cmpl
mov
cmpsl
fadd
icebp
je
xchg
test
lahf
fcmovne
out
xchg
push
out
popa
insb
inc
mov
lds
inc
popf
sahf
fdivl
inc
call
mov
push
adc
std
fidivrl
jl
out
imul
jbe
iret
test
aas
fwait
fwait
idivb
pop
cmc
lds
jl
into
les
aas
cli
data16
and
pinsrw
popa
movsl
adc
loopne
shl
mov
imul
out
in
sahf
outsl
mov
rolb
and
jae
fdivl
cmp
dec
mov
mov
in
jae
mov
mov
movsl
mov
cmp
pop
add
imul
add
idivb
testl
iret
out
mov
jecxz
fiadds
xchg
adc
imul
jl
dec
ss
js
fmul
lods
sub
or
icebp
dec
cmc
sbb
icebp
popf
add
lret
push
pop
out
addr16
loopne
cs
adc
pop
out
out
scas
xor
outsl
in
sub
iret
out
sbb
mov
movsb
sahf
sbb
inc
repnz
mov
clc
xor
pushf
sbb
jle
lahf
int
pop
cmp
push
clc
sti
adc
push
lcall
sub
mov
cmc
sti
mov
daa
shrl
mov
sbb
pusha
inc
dec
jg
iret
out
xor
clc
out
inc
jb
das
adc
out
jl
mov
dec
sbb
out
xchg
loopnew
movl
fcomi
adc
in
pop
xchg
add
aas
fwait
imul
scas
outsl
out
push
jae
jae
clc
mov
notl
pavgw
pop
shl
int
addr16
push
test
xor
push
in
aaa
aaa
mov
mov
push
cwtl
imul
lret
xlat
jmp
adc
outsl
aas
dec
in
cs
ret
insl
rcrb
xchg
pop
repz
out
jbe
mov
cmp
adc
arpl
test
les
mov
xorl
hlt
mov
out
out
insb
cmpsl
mov
inc
xor
rclb
movsl
out
out
xchg
cld
mov
jns
and
shl
out
sahf
push
fwait
repz
sahf
cmpsl
nop
cs
jp
psrld
mov
clc
adc
fisubrl
movsb
out
sub
in
jo
out
push
cmc
push
jne
xchg
cwtl
lcall
aam
test
les
test
mov
out
add
pusha
mov
pop
scas
dec
jo
pop
loopne
push
or
je
xchg
cmpsl
or
aaa
aaa
mov
mov
call
ds
adc
pop
xorb
jno,pn
xorl
das
mov
jne
xchg
jbe
fcmovne
mov
insl
mov
jno
pop
adc
out
sti
insb
jbe
ret
out
xor
cs
aam
scas
dec
cmp
mov
adc
add
int
movsb
mov
or
aam
xchg
xchg
addb
mov
out
mov
aam
icebp
insb
xchg
dec
daa
cmp
xchg
jb
xlat
mov
loope
aaa
mov
push
cltd
push
shr
lcall
int
addr16
cmp
mov
adc
insb
pop
pop
insl
icebp
stos
mov
mov
mov
into
fstpl
pop
out
fildl
call
sbb
jmp
dec
aas
in
fwait
sub
jnp
out
mov
scas
push
jecxz
mov
outsb
das
mov
inc
icebp
aad
sbb
mov
cmp
sub
add
add
inc
sbb
inc
jae
and
mov
testb
pop
pop
jle
jmp
jnp
xor
jg
leave
jae
sti
fsubl
dec
adc
aaa
sarl
jae
jae
add
repz
mov
push
or
pop
loop
mov
mov
aas
cld
inc
icebp
push
ljmp
mov
jno
cld
dec
push
pop
sarl
push
in
cmp
mov
pushf
sub
ds
mov
ret
sbb
hlt
cmp
jae
xchg
mov
aaa
inc
fmuls
addr16
inc
incl
inc
pop
faddl
and
int
int
ficomps
adc
inc
xor
inc
jmp
fdivrl
cli
stos
mov
mov
mov
loope
out
lcall
std
fildl
push
popl
lret
push
lret
cmp
lret
imul
outsb
xlat
shrb
insb
stc
or
fwait
xchg
or
adc
outsb
outsb
insl
mov
add
push
mov
aaa
aaa
pop
cmpsl
cmp
call
adc
cs
aad
outsb
outsb
outsb
and
lcall
jne
fucom
or
clc
insb
and
stos
scas
fdiv
cmp
cmp
jae
mov
test
fsubrl
jbe
jne
stos
mov
mov
dec
add
fsubrl
mov
mov
in
fcomp
ficoml
inc
cmc
or
aaa
sub
aaa
aaa
aaa
aaa
jo
in
stc
scas
mov
inc
mov
mov
leave
inc
and
sbb
mov
f2xm1
sbb
fsubrs
lock
xor
push
mov
ss
in
cwtl
mov
sarb
xlat
mov
in
out
out
adcb
pop
sbb
ret
adc
lcall
in
add
cmpsb
fwait
fwait
fwait
mov
in
xor
jns
pop
les
insl
cmp
cmc
sbb
not
cli
mov
xchg
in
push
test
mov
push
orb
sub
push
add
or
jbe
insb
dec
lahf
rcrb
iret
jbe
iret
mov
clc
inc
mov
int
push
fistpll
sbb
fstp
fwait
lahf
int
push
push
es
out
cmp
cli
or
movsb
push
adc
sub
lods
out
push
orb
and
insb
outsb
sbb
cmp
test
sub
and
aaa
add
and
cmpsb
lock
or
mov
fcompl
cmpsb
xorb
or
sbb
xor
add
xchg
inc
into
add
cld
xor
int
int
mov
mov
test
rclb
pop
sti
push
and
pop
xchg
leave
out
xchg
movsb
shl
jae
jae
fisubl
das
inc
lock
jge
xor
mov
sub
mov
or
push
cmp
push
fistl
jb
das
sbb
lods
add
lahf
fwait
fwait
mov
nop
sbb
sti
push
addb
insb
divb
out
jae
lods
sar
clc
loope
jg
fidivs
sbb
inc
push
cli
mov
dec
jg
les
add
stos
mov
daa
mov
ret
pop
shll
cmp
lret
pop
cmp
test
adc
in
mov
aam
mov
adc
mov
js
fldt
mov
add
xchg
je
mov
jne
sahf
add
fidivs
pop
int3
lret
mov
faddl
std
imul
jae
ljmp
mov
mov
andb
mov
insb
popf
sbb
test
int3
js
cli
cmc
mov
push
pop
jg
push
dec
sbb
out
ret
jns
jecxz
cli
cli
sbb
out
stc
js
mov
sub
ror
test
push
js
out
sub
fldt
mov
hlt
pop
xlat
rcll
mov
cltd
mov
sahf
jle
clc
jae
jae
mov
fwait
addl
pop
mov
pop
inc
and
dec
xchg
cmp
fwait
aad
jns
aam
jbe
fdivrl
insl
mov
clc
jne
pop
insb
js
inc
test
in
fdivl
xchg
cmovp
inc
jbe
jl
lock
bound
out
out
jno
test
lea
jmp
pop
adc
sbb
mov
jg
mov
xor
outsb
sub
adc
negl
dec
out
push
jbe
ljmp
xor
lret
ss
mov
xchg
bound
aaa
aaa
mov
cmp
cmp
test
mov
cmp
cmp
stos
add
lods
sahf
adc
mov
imul
lods
sub
ljmp
hlt
mov
cs
ret
pop
or
cmp
es
in
mov
mov
fidivrl
push
inc
out
pop
clc
push
out
cli
mov
sbb
aam
iret
testb
filds
fildl
mov
outsl
pop
hlt
mov
push
jo
lds
sbb
shlb
leave
rcr
aaa
leave
cli
clc
add
aas
mov
push
cmpsl
push
aaa
clc
adc
les
jno
jne
arpl
mov
ror
mov
in
or
jle
dec
pop
scas
mov
jo
fsubrl
jae
mov
add
push
insl
popf
push
mov
hlt
dec
lret
outsl
bound
fadd
push
lret
pop
push
ja
insb
aas
inc
pop
sarl
mov
in
jae
add
push
int
nop
mov
push
ret
popa
jle
roll
add
xchg
or
scas
sbb
mov
pop
or
mov
testb
fistl
lods
rol
mov
xchg
push
mov
xchg
pop
and
or
out
adc
idiv
insb
outsb
mov
mov
dec
push
cmp
lea
ror
cli
pop
jne
fmul
pop
mov
lahf
dec
adc
push
out
testl
sbb
or
cwtl
rorb
or
stos
stos
sub
ret
ds
gs
je
cmp
dec
add
fldt
xchg
cmp
and
lahf
pop
cmp
fwait
fwait
imul
add
or
or
negb
lock
dec
hlt
mov
push
add
cmc
and
fs
movsb
mov
loopne
cli
in
pusha
aad
cmp
fldt
insb
ret
lahf
lods
sbb
ds
stc
aaa
aaa
aaa
pop
jl
test
mov
jp
mov
xchg
aad
clc
ret
mov
and
and
jp
dec
lea
aaa
pop
loopne
int3
mov
cmp
in
adc
ss
aaa
aaa
push
jp
xchg
iret
imull
pop
mov
push
mov
or
scas
loope
bound
fbld
imul
jg
adc
or
mov
int3
sbb
pop
aaa
push
jge
ljmp
add
or
mov
add
or
mov
outsl
jge
lea
cmc
lea
insb
lcall
aaa
ja
movsl
push
inc
iret
mov
cmp
inc
movsbl
ficoms
or
stos
enter
aaa
into
jp
jl
mov
iret
int
xchg
ds
es
push
and
jle
out
mov
cmpsb
mov
push
fdiv
mov
lods
ljmp
icebp
mov
adc
dec
test
setle
fdivl
int3
mov
and
int
mov
insb
nop
jne
mov
and
clc
fdivrl
xchg
leave
inc
es
pop
shrl
jge
cld
in
movsb
sub
cmp
sub
push
mov
movsl
xchg
sub
stos
aas
dec
stc
jo
pop
adc
mov
idiv
out
out
orl
cmpsl
jle
test
inc
and
out
addl
push
pop
in
notb
lock
push
and
sub
aaa
aaa
mov
mov
test
add
mov
addr16
and
imul
xorl
icebp
inc
jns
xor
arpl
addr16
rcll
lea
aaa
mov
sahf
pop
jbe
or
mov
mov
out
mov
cmp
imul
mov
xlat
mov
xlat
iret
out
stc
dec
pop
cmp
xchg
add
fcom
icebp
and
jae
dec
mov
iret
mov
bound
sub
mov
movsb
imul
xor
sti
rcrb
insb
outsb
outsb
cs
fists
and
mov
xchg
and
cmp
fildll
xor
ja
clc
push
ret
xor
stos
xlat
pop
push
aam
lea
out
out
xor
dec
adc
pusha
cmp
pop
xlat
fdiv
pop
lret
mov
xor
mov
sbb
or
dec
rclb
mov
fucom
js
roll
or
idivl
jge
pop
ret
ffreep
das
xchg
jae
jae
lods
jl
imul
test
test
and
cmpsb
jns
hlt
fcoml
sbb
test
inc
int3
das
jno
push
jl
sarb
dec
sbb
mov
outsb
pop
jmp
and
out
cmc
mov
mov
push
adc
xor
fcomi
mov
in
or
mov
pop
test
xchg
xlat
add
mov
fwait
fwait
jmp
add
int
int
test
cmp
loope
cmp
pushf
xor
jg
fcoml
enter
dec
xor
call
adc
mov
xlat
push
ret
aam
popa
ret
jae
cmp
fs
pop
lds
scas
push
test
addr16
test
jp
test
jmp
xchg
mov
xchg
das
hlt
xlat
mov
ret
or
sti
dec
faddl
incl
mov
jae
loope
rcrl
rolb
pop
xor
mov
xor
popf
stc
outsb
cmp
enter
mov
add
push
insb
xor
mov
mov
mov
push
adc
iret
pop
mov
pop
icebp
jne
xchg
push
sti
iret
divb
adc
sahf
test
jae
cmp
adc
movsb
out
and
inc
jns
push
sahf
mov
add
outsb
outsb
or
neg
divb
xor
outsb
outsb
inc
shrl
mov
xchg
mov
icebp
xor
jo
jge
std
push
clc
fnstenv
and
lahf
mov
cltd
jno
mov
or
push
sub
adc
adc
xchg
inc
or
cmpsb
inc
mov
fucomi
mov
aam
pop
lahf
addl
sbb
outsb
outsb
aas
sbb
xor
dec
movb
outsb
rcrl
iret
clc
cmp
outsl
jle
mov
mov
int3
clc
cmpsb
mov
jl
push
dec
enter
push
outsb
or
cmp
mov
movsb
add
inc
fistl
mov
aaa
aaa
aaa
and
leave
jne
mov
ret
fdivrl
aaa
aaa
xor
push
cmp
stos
cmp
fdivr
push
mov
pop
mov
mov
push
repnz
mov
fistl
dec
inc
sub
jmp
push
jl
mov
adc
mov
aaa
cmp
rclb
int
fbld
test
sub
ljmp
sbb
fwait
loopne
dec
js
scas
lds
inc
mov
fldt
fcomp
or
and
cmp
addl
sahf
push
lcall
movsl
popf
or
out
notb
mov
jmp
pop
loopne
out
mov
rcl
sub
aaa
mov
cmp
add
jecxz
mov
aas
jge
aaa
scas
bound
xor
add
loope
dec
push
test
pop
addr16
out
rcrl
cmpsl
pusha
adc
in
scas
addr16
pop
nop
out
lods
scas
jecxz
fyl2xp1
ja
mov
repz
insl
cld
in
insb
aaa
aaa
push
jl
lea
je
fldl
cmp
cmp
test
enter
hlt
dec
dec
sarb
mov
inc
loope
fmull
in
mov
mov
inc
enter
std
jle
ror
xor
scas
xchg
in
jo
pop
add
outsb
es
sahf
dec
inc
stos
push
push
hlt
mov
stos
cwtl
adc
push
rcrb
inc
out
lds
dec
sub
pop
loopne
cmpsb
int3
xor
push
add
int
aas
add
adc
mov
fcompl
inc
iret
push
adc
add
arpl
adc
mov
push
xchg
out
push
cmp
out
push
ja
mov
lock
ret
push
out
shlb
or
mov
test
out
cmpsb
jns
mov
xchg
push
shlb
jmp
in
addr16
fidivrl
lods
hlt
mov
sub
hlt
int
int
xor
paddb
adc
pmulhuw
push
ja
mov
jmp
insl
mov
out
jp
mov
inc
arpl
pusha
inc
mov
xchg
jae
pop
cs
in
rcll
pop
outsb
jle
inc
lock
mov
pop
add
sbb
loopne
xor
push
bound
jge
cld
or
addl
jbe
mov
sub
xchg
jmp
adc
test
aas
ljmp
mov
ljmp
inc
xor
jmp
mov
insb
cmp
es
fwait
ss
jbe
jge
js
mov
and
push
ds
out
or
adc
sbb
lods
testl
mov
xor
loope
fisubs
xchg
fidivrl
enter
mov
sarb
pop
add
fdivrs
mov
sub
addr16
jae
jecxz
test
out
pop
lods
lahf
mov
or
jnp
and
test
outsb
lahf
push
aam
loop
repnz
mov
or
mov
aas
idiv
push
sbb
sbb
call
sarb
idiv
scas
adc
mov
imull
adc
push
pushf
mov
jb
cmc
fsubl
test
aad
jp
jl
fxtract
sar
xor
sub
sbb
clc
xchg
push
fimull
mov
xor
lea
or
out
xchg
pop
mov
js
roll
lahf
stos
movhps
fmuls
lahf
int
repnz
popl
cmpl
sub
mov
push
mov
ds
mov
push
xor
mov
inc
int3
fnstcw
jmp
push
lcall
outsb
outsb
outsb
outsb
test
pop
jb
pop
nop
imul
mov
std
insb
pop
insl
fldt
in
aas
insl
cmpb
xor
out
push
jbe
fisttps
or
stos
daa
jns
test
lret
iret
mov
loopne
mov
xchg
jp
inc
faddl
push
sub
mov
push
mov
sarl
outsb
outsb
outsb
outsb
cld
arpl
jge
mov
lret
outsb
outsb
outsb
lods
mov
push
sub
mov
inc
lcall
aaa
mov
mov
adcb
sti
inc
mov
ds
aaa
aaa
test
xchg
add
out
add
imul
cmp
ret
addl
cmp
outsb
outsb
test
ret
mov
dec
jmp
jle
ja
push
push
popa
sbb
xor
and
outsb
movsl
fidivrs
mov
add
jne
iret
sub
sub
mov
pop
in
and
dec
sub
bound
int
int
js
inc
stos
out
inc
fsub
xchg
icebp
fdivrl
adc
pop
add
push
cmp
jae
in
popa
and
or
ljmp
shll
pop
dec
cltd
push
in
lcall
pusha
out
push
push
bnd
sarb
mov
clc
xor
scas
fbld
pop
xor
pushf
sbb
jmp
push
out
addr16
jnp
mov
cld
cmp
insb
outsb
outsb
outsb
dec
sbb
and
sbb
mov
stos
lcall
mov
pop
inc
pop
movb
sbb
out
mov
cmp
call
decb
pop
xchg
aad
fiadds
mov
push
enter
mov
push
fs
fsubrl
mov
ss
aaa
pop
and
movsl
test
dec
fisubl
mov
fmull
xor
icebp
imul
sbb
in
push
push
pop
movsl
outsb
lahf
fwait
fwait
mov
jno
lret
cmp
adc
cmp
std
insb
outsb
outsb
outsb
jecxz
daa
lods
or
jnp
adc
mov
mov
xor
pop
popf
shlb
bound
cmp
sahf
fists
inc
push
out
popa
pop
cltd
jae
jae
push
and
in
jmp
roll
jae
cmp
pushf
scas
or
cs
cmpsb
mov
imul
movsl
jbe
out
out
repnz
pop
rorb
fcoms
inc
out
jb
out
out
push
mov
push
mov
imul
inc
jbe
inc
adc
out
xchg
test
adc
js
jne
jge
pop
mov
jmp
repnz
sbb
fdiv
outsl
mov
dec
and
xchg
jl
xchg
test
mov
inc
ja
lahf
int
int
fsubl
xchg
out
shl
das
or
mov
xorb
popl
aaa
aaa
aaa
aaa
sbb
mov
int
pushf
adc
or
ss
xor
pop
cld
fwait
pop
scas
mov
pop
jge
add
dec
js
push
cs
js
filds
lock
fs
xor
adc
adc
lock
xchg
push
shll
and
das
jmp
lret
mov
les
sbb
insb
jo
fucomi
jbe,pn
push
je
adc
imul
stos
or
aas
out
sub
cmpsl
add
inc
into
rolb
roll
mov
stc
push
add
jb
pop
fwait
jp
jns
std
insb
outsb
outsb
xchg
loop
loop
mov
push
in
push
pop
ss
aaa
push
mov
xchg
hlt
mov
lods
jae
fisubrs
je
icebp
or
ret
jae
jae
inc
stos
fmuls
aam
mov
lock
jae
ret
mov
cmp
sarb
mov
mov
in
xor
inc
call
test
or
cmp
sbb
rclb
aas
fwait
cmp
and
xchg
add
int
int
scas
aas
data16
pop
cmp
cltd
out
pop
fcompl
sbbl
push
out
clc
lods
cwtl
jb
push
imul
sbb
nop
je
fistl
ja
jg
jg
mov
cmp
push
test
lahf
jno
enter
divl
arpl
es
int
sbb
xchg
jb
pop
xchg
sbb
mov
adcl
cwtl
ror
mov
mov
mov
int
mov
sub
dec
aas
test
mov
sbb
aam
outsb
je
jbe
xchg
inc
and
jl
outsb
sub
int
push
test
aad
jl
aaa
push
xor
and
lock
dec
push
cmp
dec
jno
scas
iret
data16
stos
inc
out
subb
xchg
das
or
ret
sbb
add
daa
in
push
xchg
jl
sarb
insl
xor
sbbl
cmp
out
xor
movsb
mov
push
insl
iret
pop
pop
sbb
xchg
jbe
lock
incl
mov
mov
aam
js
or
push
mov
out
int
int
out
test
lock
ljmp
iret
int
pop
mov
mov
nop
mov
sbb
scas
incl
cmp
iret
out
dec
daa
aad
loopne
test
test
fisubs
or
outsb
clc
fldz
mov
mov
mov
sahf
js
ja,pt
imul
mov
outsb
outsb
outsb
adc
sbb
adc
xor
lods
or
lods
rcrb
dec
int
test
out
mov
shrb
xchg
lods
jnp
in
rolb
fwait
fwait
sub
cld
push
repnz
testb
imul
sub
out
outsl
or
inc
ret
cmc
push
fwait
fwait
fwait
fwait
arpl
xchg
lret
xchg
mov
aaa
cld
sahf
jecxz
mov
adc
js
sbb
aaa
aaa
aaa
aaa
out
scas
data16
xor
out
fildll
stos
call
push
mov
sub
mov
jl
mov
cmp
jp,pt
mov
enter
pop
adc
push
fdiv
xor
cmp
test
adcb
xlat
cmpsb
filds
loope
cmp
test
jae
in
scas
pop
push
sbb
push
rolb
jae
icebp
cmp
repnz
jae
ja
mov
outsl
xlat
outsb
push
hlt
testl
sti
push
lret
insb
out
aaa
jl
mov
ss
lds
mov
aaa
aaa
jle
jns
cmc
div
cmp
aas
jg
cmp
aaa
adc
dec
das
out
jae
jae
mov
pop
adcb
mov
js
movsb
fimull
arpl
call
aas
hlt
cmp
sahf
xchg
jl
cmp
test
rol
mov
rorb
hlt
leave
insb
push
mov
outsl
loopne
test
ds
pop
push
insb
mov
push
cli
fcoml
mov
lret
jl
xlat
fdivl
xchg
roll
in
add
out
mov
dec
stos
inc
jb
xchg
loope
roll
fwait
fwait
fwait
fwait
jne
cwtl
pop
jno
pop
push
mov
jle
out
sti
ds
movsb
out
push
sbb
xchg
bound
cmp
out
out
lret
cmp
xchg
int3
jge
imul
xlat
out
adc
sub
mov
pop
cltd
ljmp
mov
andb
fildl
mov
pop
loope
mov
jp
pop
add
mov
adc
xchg
push
lods
add
std
push
fisubl
cmpsb
mov
in
sub
movsb
cmp
arpl
add
pusha
and
adc
daa
xor
cmp
int3
mov
add
pop
in
nop
cmp
dec
or
adc
out
addr16
outsl
inc
aas
or
out
subl
sub
loop
pop
outsb
sub
mov
out
in
mull
je
bound
push
clc
jecxz
jbe
mov
repnz
sti
ds
pop
and
aam
in
and
xchg
jbe
int
int
jg
divl
enter
pop
addr16
iret
int
int
mov
and
outsl
lret
pop
add
fsubs
sahf
push
mov
scas
es
js
push
scas
aam
loopne
dec
nop
movsl
or
mov
inc
jb
and
fwait
fwait
fwait
mov
pop
cmp
inc
jg
pop
cmp
push
lahf
fwait
and
cmp
inc
movsb
aaa
jbe
jle
aaa
mov
pop
aas
jne
push
and
mov
mov
push
aam
and
insb
ficoms
outsb
scas
clc
orb
ss
jae
fstps
push
dec
adc
mov
jg
loope
cld
mov
out
mov
jns
xchg
fcompl
xchg
int3
int3
stos
dec
xor
fs
daa
jmp
adcl
xchg
lods
inc
jle
cmpsb
push
ss
std
insb
shl
stos
sbb
mov
popa
mov
xor
dec
push
pushf
push
test
and
mov
sbb
ljmp
sbb
sub
jecxz
fcmovne
out
out
cli
jno
jno
lds
pop
aas
or
lret
out
jbe
scas
fdiv
mov
cmp
test
imul
sbb
push
sahf
sti
aam
hlt
fdivl
xor
das
arpl
ds
int3
popf
js
xor
mov
dec
jae
cmpl
cmpsb
pop
jl
and
fidivs
jp
lret
pop
jae
or
and
and
push
lahf
in
jae
int3
pop
rcrb
les
fldl
out
dec
or
jo
dec
pop
xor
push
mov
inc
les
mov
movhps
nop
sti
or
sbb
or
out
xchg
int
in
jae
cmp
repz
inc
popf
sbbb
shl
push
inc
and
jp
aas
or
les
data16
out
and
sub
loopne
fcmovne
jnp
jbe
mov
xchg
hlt
pop
inc
xchg
test
icebp
and
cmp
ret
lahf
fwait
fwait
fwait
ss
push
outsb
sbb
inc
jl
cmp
int3
ds
stos
jl
test
jb
and
cmc
mov
sbb
mov
sti
es
rclb
cmpb
ljmp
mov
jns
aaa
aaa
aaa
aaa
lods
js
xchg
addr16
data16
std
mov
fildll
cmp
lret
xchg
push
fstps
xchg
fists
inc
and
cmp
outsb
es
pop
movsb
mov
pop
inc
loopne
out
fstpl
fsubrs
clc
sahf
jg
pop
dec
xchg
stos
stos
pop
push
or
je
fnsave
pushf
iret
int
jae
daa
shll
dec
push
sub
rcr
jle
push
or
ficomps
push
lcall
shl
sahf
mov
dec
data16
ret
xchg
pop
inc
mov
inc
insb
jne
add
fsubr
and
mov
int
or
mov
testl
stos
ja
pop
inc
popa
enter
loope
pop
sbb
cwtl
mov
xchg
sub
mov
mov
gs
xor
std
cmp
jge
mov
or
adc
sub
mov
mov
cltd
loop
pusha
sbb
mov
adc
mov
fnsave
mov
mov
inc
add
stos
fdiv
cli
fdivrl
lock
sub
arpl
jns
lock
int
add
insl
adc
sbb
fldcw
ja
or
loopne
inc
clc
xchg
mov
into
xchg
jo
pop
rclb
push
inc
mov
sbb
mov
inc
mov
push
mov
shlb
or
pop
daa
shlb
int
lock
popa
push
jnp
push
or
aam
movsb
stc
mov
sub
std
insb
outsb
outsb
stos
adc
sub
add
mov
pop
sbbb
loopne
vmovups
mov
into
mov
std
insb
cs
in
xor
lock
cli
pushf
fstpl
mov
adc
jmp
cmp
lods
jge
jp
mov
iret
xchg
pusha
fidivl
push
hlt
mov
movsl
test
sahf
paddsb
loope
fwait
fwait
fwait
or
xchg
imul
push
aas
in
mov
xor
cmp
mov
xor
sbbb
test
pop
shl
ret
out
inc
xchg
popa
adc
jg
gs
pop
pop
les
pop
movsl
inc
int3
int
dec
push
aas
stos
loop
lods
jns
push
adc
aas
add
mov
and
inc
jbe
jns
outsb
outsb
outsb
xor
cld
sahf
pop
outsl
rclb
cmp
js
imul
pop
dec
cmp
aaa
mov
sbb
add
lock
xchg
fs
ss
int
leave
leave
xchg
subl
inc
loopne
mov
lret
fbld
or
or
cli
les
out
orb
lahf
lret
jne
and
sahf
lods
iret
cmpsl
out
dec
push
daa
test
pop
movsb
cmp
cli
inc
mov
mov
decb
addr16
negb
lds
dec
fisubrl
cmp
cmpsb
in
frstor
dec
jmp
pop
push
ljmp
xchg
lock
jmp
xor
push
insb
pop
pop
xchg
test
jge
outsb
lahf
sub
mov
leave
sti
mov
fwait
movsb
or
jmp
jae
add
cwtl
or
add
leave
jl
pop
mov
sub
fisubrl
inc
lods
pop
push
dec
mov
loope
mov
cmpsl
mov
sti
fldz
mov
inc
inc
lods
xorb
loop
sbb
jnp
dec
mov
aas
loop
ds
xor
or
add
pop
pusha
daa
adcl
lock
xchg
sahf
cltd
lds
neg
jb
ss
pop
cmpb
mov
push
out
lock
add
mov
incb
negb
pop
adc
rorb
out
out
sub
sub
jno
fs
insb
outsb
fists
jns
cmp
and
jge
jge
sub
out
push
notb
insl
nop
insb
xchg
faddl
outsb
outsb
mov
xchg
bound
push
lods
in
in
jmp
pop
in
insb
mov
cld
push
jnp
cs
mov
xchg
insb
pop
adcl
mov
mov
mov
stc
pop
rclb
cld
loopne
or
jae
pop
lock
mov
fists
add
das
aas
xor
dec
jne
addr16
adc
mov
pop
scas
push
lahf
int
int
push
mov
cld
sarl
ljmp
pop
shll
mov
std
mov
xchg
jo
ret
xchg
add
sbb
or
adc
jle
in
std
mov
mov
mov
or
and
insw
mov
js
scas
adc
inc
imul
push
mov
pop
imul
sub
clc
mov
mov
in
mov
cmp
cs
dec
xor
fcompl
dec
addb
loop
fildl
mov
mov
hlt
lds
lahf
and
pusha
jmp
adcb
push
sbb
or
mov
mov
les
shl
fcompl
add
push
sar
mov
jb
test
sti
daa
enter
xor
xor
add
dec
mov
outsb
lahf
fwait
mov
bswap
sbb
jl
or
xor
inc
mov
lahf
fistpl
in
insb
in
popf
xchg
push
push
rcrl
cmp
fisubrl
outsb
outsb
and
inc
jno
movsb
mov
cmc
cltd
js
aas
cmp
sub
add
mov
xchg
dec
lcall
lcall
lock
fcoml
mov
push
lcall
sub
int3
xor
sub
dec
inc
test
fwait
fwait
fwait
repnz
loope
mov
pop
arpl
mov
outsb
outsb
lahf
fwait
jmp
imul
jp
outsb
outsb
outsb
inc
or
test
mov
push
inc
jp
outsb
outsb
xor
dec
push
pop
push
notb
test
mov
outsb
lahf
fwait
fwait
xchg
mov
nop
sbb
inc
cmp
push
jl
std
add
ljmp
pop
pop
iret
jno
push
adc
loop
outsl
push
adc
or
bound
cmp
sbb
shlb
decb
cs
push
outsb
clc
fnstcw
or
inc
je
leave
div
xchg
jl
ss
das
xchg
cli
fstps
and
test
sti
mov
xlat
jge
outsb
outsb
xor
add
xchg
push
int3
idivl
pop
sbbl
scas
push
repnz
jnp
adc
mov
xor
mov
jne
mov
loopne
fisttpl
in
add
sbb
adc
mov
push
inc
xlat
jp
dec
xchg
mov
dec
mov
fs
cli
fadd
inc
and
ds
sbb
nop
cwtl
push
xor
ret
mov
into
xchg
dec
add
outsb
outsb
arpl
add
and
lret
incb
pop
mov
jge
mov
rcrb
mov
cmp
and
push
arpl
lret
xor
mov
lahf
push
mov
xchg
inc
ja
mov
pop
mov
outsb
loop
movsl
lods
mov
scas
sbbl
subb
jo
pop
mov
dec
jecxz
movsb
and
fwait
fwait
bound
jl
mov
les
popf
mov
shl
ds
bound
fcmovbe
fstpl
std
out
sahf
fstps
mov
mov
leave
outsb
cld
in
clc
outsl
mov
insb
outsb
outsb
mov
sbb
cmp
repnz
aaa
aaa
pop
adc
xchg
in
inc
cmp
add
fdivr
adc
repz
adc
pop
mov
outsb
cs
lcall
pop
shlb
std
imul
mov
xlat
and
mov
cmp
sbb
fwait
pop
shr
lret
roll
insl
lret
fwait
fwait
pop
push
xchg
into
aad
dec
adc
lahf
xchg
push
jo
and
out
es
or
aaa
aaa
aaa
std
cmpsb
mov
xor
adc
xor
inc
add
aaa
mov
insb
iret
clc
push
int
in
sti
mov
sahf
das
sbb
pop
ret
xor
jle
js
dec
cmp
mov
mov
ljmp
cwtl
das
push
push
cld
xor
jle
test
jle
xchg
push
and
cld
jbe
push
mov
flds
xorl
fwait
fwait
push
lahf
mov
jno
std
imul
mov
fs
test
enter
out
jbe
fdiv
sbb
in
xchg
sbb
sbb
int
xor
out
shll
addr16
cwtl
pop
inc
push
lahf
int
adc
dec
cmp
sbb
test
adc
int3
aas
fistl
cmp
clc
inc
cmp
inc
inc
loope
cmc
insb
in
pushf
shlb
mov
push
and
sbb
mov
mov
cmp
jns
repz
outsl
jl
dec
xchg
incl
xor
adc
mov
sbb
push
stos
jbe
push
out
test
fldl
xor
ljmp
pop
pop
jbe
cmp
je
cli
adc
xchg
dec
iret
in
dec
mov
sbb
out
outsb
outsb
aas
sbb
or
fstpt
fs
out
leave
pop
jl
sbb
mulb
mov
aam
sbb
mov
fcmovne
test
push
ja
insb
xchg
xchg
cwtl
lock
shlb
std
mov
add
and
dec
xor
loop
mov
lods
test
cmp
xchg
and
ret
jne
pop
cmp
stos
push
ds
xchg
dec
decb
lock
fmull
das
popa
mov
dec
push
xchg
jmp
jge
mov
pop
xchg
out
or
add
jmp
hlt
push
add
clc
fdivl
cld
or
lods
pop
push
and
ret
cwtl
cmp
out
xchg
sbb
sbb
adc
out
mov
and
cmp
out
jge
pop
sbb
outsb
insb
jno
shlb
mov
iret
out
pop
jle
aaa
test
movsb
jmp
sarb
das
lods
out
sub
call
mov
popf
pop
icebp
hlt
lods
sar
push
pop
les
mov
movsl
lahf
int
aas
mov
mov
enter
fcompl
sub
mov
push
xor
lods
jmp
sub
insb
shlb
cmp
sbb
sbb
insb
outsb
pop
insb
xchg
pop
jns
add
mov
lret
dec
movsl
xchg
icebp
pop
mov
aaa
aaa
mov
or
loope
mov
shlb
lock
aaa
aaa
lret
xchg
call
mov
add
fmull
jg
stc
inc
and
cmp
jl
mov
addr16
xor
sti
adc
inc
sti
dec
cmc
repnz
fdivrs
stos
xor
jae
jae
ret
imul
mov
fwait
fwait
mov
pop
push
or
test
fwait
adc
mov
jge
stos
hlt
dec
sbb
fwait
rorb
push
cmp
pushf
fwait
mov
dec
xchg
clc
fcomi
mov
int
subb
bound
outsb
outsb
outsb
aas
or
xchg
add
jg
jp
popa
jo
mov
in
jl
mov
pushf
xorb
fldenv
pop
test
push
push
mov
shrb
dec
pop
pop
mov
xchg
mov
enter
mov
sub
icebp
nop
cli
pop
mov
fsubrl
mov
pushf
xor
and
inc
iret
fists
stos
shl
mov
sahf
sti
scas
jge
shrl
ds
and
inc
push
in
aaa
mov
int
pop
jno
imul
stos
ljmp
icebp
ds
jae
into
nopl
push
test
push
aam
aam
dec
out
out
ret
fdivl
cmpsl
sub
cli
cmpsb
ds
fs
inc
rcr
push
clc
mov
mov
arpl
rorb
fcoml
jmp
pop
add
mov
dec
gs
or
jae
push
outsl
aas
dec
add
leave
int
icebp
fadd
mull
in
dec
clc
mov
test
add
dec
pushf
outsb
outsb
outsb
cs
test
mov
insb
mov
or
insb
outsb
dec
pop
movsl
lcall
fcomi
mov
mov
test
std
test
fwait
xor
jns
cmp
cmp
std
cmpb
fcmovnbe
je
mov
dec
movd
jb
dec
xor
or
adc
mov
shl
fadds
arpl
sbb
pusha
mov
sub
push
pop
cld
mov
aaa
aaa
aaa
push
lcall
insb
mov
fwait
push
jl
aaa
add
mov
mov
enter
jg
xchg
mov
fs
idivb
and
fwait
mov
dec
push
vcvtpd2dq
jle
loop
shlb
fs
jae
insb
add
cmpb
adc
inc
subb
std
sbbl
and
int
pop
loope
jge
ljmp
xor
shlb
fdivs
or
fidivrl
dec
sti
sahf
stos
push
add
mov
jmp
ret
nop
pusha
int3
int
fists
mov
fstpt
mov
xor
lahf
int
int
jo
cmp
ds
rcrl
cli
outsb
outsb
outsb
aas
cs
arpl
inc
icebp
cmp
mov
outsb
outsb
outsb
fldl
dec
in
xchg
jp
jl
inc
scas
cmp
add
insb
out
out
out
bound
dec
sti
cs
fcmovnbe
sahf
outsb
pop
and
bound
fnstcw
dec
or
add
outsb
outsb
outsb
outsb
add
xlat
dec
jns
aaa
mov
jl
cmp
gs
in
je
stos
jle
aaa
loope
push
add
xchg
xor
fiaddl
cmpsl
es
iret
xlat
aaa
aaa
mov
addr16
out
mov
enter
mov
jle
jl
leave
dec
inc
movb
das
pushf
xchg
clc
inc
orb
clc
pop
stc
cmp
or
mov
fs
fwait
mov
xchg
es
jae
cmc
rorl
pushf
out
lock
aaa
iret
out
out
es
mov
and
mov
jl
sbb
dec
push
or
aaa
aaa
aaa
add
sahf
sbb
dec
xchg
jle
jge
scas
sub
or
out
mov
gs
das
lea
dec
fwait
fwait
fwait
fwait
adc
push
mov
or
pop
cmpsl
test
aad
sahf
fwait
fwait
jle
mov
popf
pop
or
in
orl
add
imul
and
rcr
fwait
or
ss
aaa
cli
xlat
xchg
adc
fsubrl
cmp
cmp
lret
mov
jg
test
xor
xchg
inc
adc
ror
clc
mov
mov
outsl
lea
adc
fldt
and
cmpsb
out
adc
jnp
es
daa
pop
lods
int
outsl
cmp
fimull
int
int
add
das
cs
icebp
add
mov
int
push
lock
in
adc
cmpb
push
orl
hlt
loop
jle
cld
or
sub
xchg
jp
jne
jge
lahf
cltd
int3
ds
xor
fcompl
mov
rcr
jg
sahf
inc
std
insb
pop
mov
dec
nop
xchg
xor
fdivl
mov
or
xchg
lea
pusha
jno
out
xlat
fs
add
mov
add
sti
inc
lret
jb
lahf
inc
loopne
mov
negb
out
out
sbb
ret
bound
insb
jno
ret
lods
enter
mov
cmp
cmp
fbld
shrl
lahf
rorl
stos
push
inc
stc
sahf
sahf
push
sahf
sub
inc
mov
or
mov
mov
or
ljmp
ds
dec
cmp
nop
imul
pusha
data16
push
int3
ret
add
xor
repz
jle
icebp
mov
shr
mov
or
adc
cmpsl
scas
pop
fidivs
jae
aad
mov
test
or
mov
jp
push
imul
cli
dec
jo
xchg
ss
sbb
pop
cmp
sbb
ljmp
pushf
test
out
scas
jmp
clc
cmp
sar
loop
xchg
fiadds
cld
jl
mov
jmp
fs
adc
aaa
aaa
aaa
nop
xlat
sbb
lods
mov
cmp
push
cmc
cmpsb
ljmp
adc
mov
pop
add
mov
sub
pop
clc
cmc
pop
outsl
push
add
pop
cmp
dec
mov
dec
aas
mov
cltd
sub
cwtl
inc
add
push
cmp
rolb
repz
repz
mov
jae
xchg
xchg
pop
add
faddl
cld
lret
ss
addr16
outsl
sahf
or
outsl
ja
gs
mov
leave
scas
loope
jbe
jne
mov
sbb
jge
out
xor
push
add
sahf
fisttpl
jge
in
mov
fwait
or
mov
les
pop
mov
fwait
fwait
fwait
fwait
mov
loop
adc
outsb
outsb
xchg
xor
adcb
movsb
push
fstpt
or
xchg
add
push
jae
xchg
cmp
mov
sub
leave
outsb
outsb
inc
test
outsb
mov
dec
jno
mulb
mov
inc
fucomip
mov
cmpsb
jle
dec
fcmovne
divb
out
cmp
imul
int
lahf
fwait
adc
push
dec
jmp
mov
add
sbb
mov
mov
andb
fidivl
fdiv
sbb
adc
inc
insl
mul
mov
imulb
add
into
mov
xchg
inc
shl
sub
je
jns
cmp
or
xchg
mov
cltd
sub
adc
repnz
sbb
push
loope
lcall
lea
movsl
test
outsb
scas
clc
xor
and
fidivs
iret
testb
adc
stos
mov
cmc
test
into
jnp
mov
xor
int
aas
fwait
dec
xlat
out
cs
mov
movsl
jl
dec
bound
daa
in
sbb
push
aas
bound
mov
inc
sbb
push
mov
jae
sub
pop
lock
mov
pop
not
iret
out
fimull
and
xor
aas
cmpsl
and
xlat
clc
dec
jns
push
pushf
out
push
xor
int
dec
jp
cmp
mov
lahf
scas
int
mov
das
pop
pop
inc
lahf
icebp
test
lock
xchg
add
sahf
add
cmp
inc
sub
fdivs
aaa
aaa
aaa
push
mov
pushf
dec
out
jle
cmp
xorl
aaa
add
in
fnsave
in
loopne
aas
sub
rolb
int
add
pusha
jge
outsb
outsb
mov
scas
test
lock
mov
mov
out
ss
mov
xor
ss
xor
mov
or
insb
jl
clc
jge
fwait
out
test
push
mov
pop
jne
push
lods
aaa
sbb
into
mov
xor
insb
add
movsl
mov
dec
shlb
mov
jae
jae
dec
test
adc
stos
nop
addl
jae
push
cmp
adc
xor
out
mov
popf
insb
sub
mov
jae
movsb
dec
idiv
xor
in
out
mov
stos
mov
pop
mov
imul
ds
push
fcomi
imul
dec
xor
mov
or
pushf
movsb
or
fstps
dec
xchg
fmul
mov
push
jbe
mov
rcl
mov
rolb
aaa
inc
aam
jge
test
fs
out
scas
push
lods
cmc
lcall
cmpb
andl
xor
dec
nop
pop
jp
ja
jnp
stos
pop
push
ficoms
mov
stos
mov
jp
jle
xor
je
sub
pop
js
outsb
cmp
scas
lret
push
std
fucomi
mov
movb
jbe
popf
int3
cli
fwait
mov
iret
or
popa
inc
push
sbb
outsb
js
mov
push
sub
outsb
movd
lret
cmpsb
mov
out
jnp
mov
outsl
sbbb
push
mov
sub
mov
mov
sub
sbb
ja
xchg
pop
add
imul
or
rcl
cmp
mov
rorb
sahf
mov
movsb
or
jle
ds
sahf
push
sbb
mov
aam
inc
lret
in
fsubl
xchg
lahf
or
iret
int
dec
mov
pop
push
mov
enter
aaa
inc
xchg
adc
loope
push
ljmp
xchg
pop
mov
andb
pop
ret
cmpsl
mov
mov
int
fisubl
mov
rcl
loope
test
pop
jl
aad
mov
lea
dec
cmc
sbb
fcmovne
hlt
mov
push
mulb
cmp
aaa
jne
loop
inc
add
jmp
lock
sub
mov
orb
cs
and
inc
mov
sahf
out
gs
fadds
pop
adc
mov
pop
mov
ss
lock
cmpl
mov
mov
les
add
mov
into
sarb
sub
insb
loop
adc
fcompl
pop
jp
stos
xorl
xchg
pop
loopne
clc
fsts
loopne
loopne
hlt
pop
jae
push
loope
dec
sub
mov
pop
mov
inc
jle
xor
int
aas
add
out
xor
icebp
xchg
sahf
int
in
lea
iret
mov
fsts
jne
in
or
sbb
adc
jae
notl
and
mov
xchg
push
loop
adcb
inc
out
or
sub
lahf
xchg
push
pop
inc
cmpsl
js
loop
fwait
fwait
fwait
fwait
pop
push
sbb
push
jl
mov
test
pop
es
shll
or
push
mov
cmp
aas
in
push
rcl
or
cmp
fcomi
mov
out
test
push
dec
outsl
cmp
aas
dec
outsb
outsb
outsb
outsb
mov
pop
nop
arpl
mov
outsb
outsb
outsb
lods
ror
jno
hlt
mov
and
frndint
insb
sahf
lret
adc
and
outsb
outsb
out
stos
ret
mov
jp
test
mov
inc
push
cld
insb
outsb
outsb
and
pop
pop
or
xchg
lods
rcr
jecxz
hlt
fcmove
rol
push
pop
sbb
out
mov
outsb
outsb
outsb
sbb
dec
jle
loop
clc
stos
clc
push
dec
dec
mull
fcmovu
mov
fistpl
inc
repz
jae
fs
mov
outsb
mov
pop
push
mov
mov
jnp
mov
rolb
popf
enter
mov
fdiv
scas
adc
sbb
js
int
cmp
int
movsl
xchg
xor
idiv
xchg
lea
mov
xor
jp
lahf
fistl
sbb
sub
movlps
cmc
add
test
mov
push
ja
sahf
mov
icebp
aam
mov
out
lahf
in
ret
insb
jb
andl
out
out
pop
cmp
adc
iret
and
mov
movsl
loopne
insb
push
gs
rep
decl
sbb
cs
mov
push
cmp
add
js
sbb
inc
cmp
jge
or
mov
in
addb
jp
cmp
fsubl
add
jmp
push
scas
push
scas
fwait
inc
rorl
mov
int
xchg
mov
fdivrl
xor
ret
dec
xor
xchg
pop
pop
out
pop
push
xchg
xchg
ljmp
mov
xlat
xor
jne
push
xchg
cmc
lret
add
sbb
aaa
mov
cmpsb
or
pop
sub
push
cmpb
aaa
jae
movsb
lret
mov
push
mov
call
aaa
test
lock
pop
inc
iret
mov
mov
add
xchg
lods
cmp
lea
out
push
movl
mov
out
out
cmp
mov
out
fdivr
into
shlb
xchg
or
jge
cs
push
aad
pop
mov
xor
inc
and
cmp
repz
loop
mov
jb
mov
aaa
aaa
aaa
aaa
push
mov
pop
jb
sub
inc
aaa
aaa
aaa
aaa
xor
ret
jle
cltd
and
aaa
aaa
aaa
aaa
jge
cmpsl
fisubs
dec
out
cmp
aaa
aaa
dec
cwtl
out
add
jg
sbb
or
orb
andl
cmpsb
dec
jle
arpl
aas
add
jl
loope
scas
clc
out
push
inc
iret
ret
inc
popl
lahf
test
inc
jge
rcll
popa
in
inc
lock
clc
fstps
cmp
test
hlt
hlt
sbb
cld
pop
sarb
mov
ds
rorl
mov
fsts
test
jbe
push
mov
mov
gs
mov
or
mov
add
push
dec
add
enter
data16
pusha
cmp
mov
pop
inc
adc
ljmp
int
idiv
pop
shrb
jne
pop
lods
push
pop
shrb
pop
fisttpl
stc
dec
or
cmp
mov
sbb
test
aas
scas
push
sub
decl
ret
xor
rcl
push
clc
sbb
xchg
cli
xchg
ljmp
mov
adc
lock
outsb
outsb
inc
lock
xchg
lahf
jle
aam
xchg
mov
mov
cmp
pusha
jecxz
divb
adc
xchg
mov
adc
lea
ret
outsb
outsb
lahf
fistpl
xor
pop
inc
mov
adc
outsb
push
push
adc
mov
jl
outsb
push
inc
jo
movsb
xchg
je
out
and
xlat
pop
enter
push
cmp
aas
fwait
in
insb
xchg
test
cli
pop
cmc
inc
sub
adc
cmp
cmp
js
push
add
repnz
jecxz
in
sbb
movsl
addr16
inc
mov
and
int
int
add
mov
jp
mov
add
out
mov
js
and
insb
cld
push
lahf
dec
pop
movsb
xchg
lcall
stos
out
fucomip
mov
mov
inc
sbb
insl
inc
into
insb
das
iret
addb
cmpl
fildl
mov
push
add
push
or
push
clc
push
adc
xor
cli
pusha
ret
shr
adc
fldcw
lock
pop
jl
outsb
enter
and
pop
push
push
enter
adc
hlt
cmc
sbb
xchg
andb
and
lret
dec
in
rolb
cmp
or
mov
cli
call
ljmp
in
xchg
sahf
mov
jle
call
jge
fstl
or
fdivrl
es
push
loopne
insb
outsb
outsb
scas
pusha
into
jb
lock
jno
jp
jmp
int3
ss
clc
insb
cs
cld
jmp
sub
and
and
insb
fildll
jo
pop
iret
in
popf
andb
jge
xchg
mov
mov
pop
js
jae
or
or
lahf
fwait
fwait
fwait
andl
adc
sub
dec
mov
outsb
sbbb
mov
lds
pop
adc
mov
sbb
int
ret
clc
xchg
iret
call
xchg
or
leave
aaa
mov
int
nop
add
dec
inc
fiaddl
fdivrl
aaa
je
insb
cltd
jecxz
ds
push
lahf
outsb
scas
clc
fldcw
jne
clc
or
adc
movsb
into
outsb
outsb
outsb
outsb
jp
or
sbb
pop
nop
xchg
outsb
outsb
outsb
aam
xchg
stc
or
sti
insb
mov
ss
xchg
pop
loopne
jae
add
mov
outsb
outsb
mov
jl
push
sbb
sub
insb
pop
push
xor
mov
out
out
or
mov
in
int
lahf
mov
inc
pop
mov
mov
mov
into
int
jle
ja
ret
dec
in
idivb
rcrb
jmp
xchg
push
insb
out
out
or
cmc
inc
imul
scas
dec
push
mov
pop
sti
dec
inc
jmp
add
ficompl
cld
sbbb
cmp
test
mov
in
addr16
insb
in
stos
jae
hlt
sub
mov
jge
pop
cs
push
lock
ljmp
idivb
in
sub
fsubrl
inc
mov
int
jg
xchg
movsb
mov
int
lods
sarb
insb
mov
fisubrl
xchg
mov
imul
icebp
mov
xchg
mov
add
rorb
pop
ret
add
out
xor
jp
aaa
aaa
push
insl
jno
stos
mov
enter
pushl
aaa
aaa
xchg
mov
cltd
cmpsl
dec
fcompl
bound
insb
push
pusha
es
dec
loop
push
or
sbb
fucomi
pop
hlt
fcmovnu
mov
adc
sbbl
cmp
adc
adc
fiaddl
outsb
xor
test
mov
lea
xchg
shl
sarl
mov
xor
js
cmp
mov
outsb
push
mov
pop
call
iret
cmc
xchg
testb
sbb
out
out
dec
mov
or
dec
push
out
iret
out
repz
dec
mov
call
out
out
pusha
xor
outsl
frstor
movsb
adc
call
sbb
imul
inc
jae
sti
fsts
aam
repz
std
es
addr16
mov
jge
jp
fildl
pushf
or
xorb
push
sahf
fsub
and
hlt
xchg
ds
fcompl
sub
inc
lahf
aaa
xor
faddl
xor
idivl
pop
into
or
cmp
js
out
dec
loop
jmp
xchg
out
std
push
ret
lret
adc
lods
inc
stos
int
sbb
jle
lcall
pop
int
int
fs
inc
xor
repnz
pop
xor
mov
jnp
jg
out
push
stc
sbb
hlt
lock
or
push
cmp
in
add
imul
aaa
aas
fwait
jno
dec
dec
jp
gs
inc
lods
mov
sub
sahf
add
dec
iret
xchg
lock
push
data16
mov
jge
test
je
sahf
push
adc
pop
mov
iret
in
add
test
or
pavgw
adcb
test
fwait
fwait
fwait
fwait
in
dec
lret
lret
rol
adc
jne
fwait
fwait
fwait
fwait
adc
or
movsb
cmpsl
enter
int3
idivb
xor
in
insl
imul
jge
cmp
jbe
addr16
mov
pop
dec
adc
inc
dec
hlt
jbe
pop
imul
cmp
push
jae
pop
aaa
adc
mov
push
pop
mov
inc
inc
dec
inc
or
outsl
ljmp
addr16
out
test
fwait
fwait
fwait
push
mov
or
cs
mov
push
mov
pop
aas
sbb
mov
jbe
xchg
adc
lcall
int
int
test
pop
pop
in
fmul
jbe
lahf
cld
dec
jge
push
mov
jae
jae
pop
mov
js
dec
xor
fnstsw
test
jae
hlt
jp
stc
and
push
mov
inc
int
lahf
fstpt
pop
xor
fiadds
adcb
pushw
out
test
cld
sbb
sub
xor
out
sub
lret
sub
or
or
sar
mov
adc
inc
xor
sbb
fstps
mov
xor
push
mov
lock
hlt
push
aaa
aaa
aaa
aaa
aam
cmp
nop
and
push
rcrb
gs
fisttpl
push
or
imul
or
hlt
fwait
xor
test
pop
mov
addr16
iret
push
aas
and
negb
sbb
loop
cmp
js
cmp
sub
mov
popf
cmp
pop
sub
fcmovnb
cmp
lods
lret
jl
rcl
and
xchg
add
push
mov
in
jae
and
stos
dec
into
add
pusha
dec
fiaddl
int
int
push
or
or
icebp
lods
bound
mov
int
inc
roll
scas
sbb
push
mov
xor
pop
inc
cmpsl
test
pop
outsb
out
sub
jo
cmp
push
sub
jg
push
stc
xor
cmp
jl
cltd
xchg
sub
iret
cmp
hlt
cli
xchg
mov
cmp
push
outsl
mov
cmp
int
mov
test
xchg
adc
pop
mov
inc
dec
mov
push
sbb
loop
mov
sub
lock
pusha
pop
inc
sahf
or
jp
ljmp
lahf
sub
xor
fiadds
pop
jb
fwait
outsl
lahf
int
jnp
fisubrs
cmc
and
addr16
into
lcall
loopne
pop
in
pop
inc
adc
loop
dec
pop
aam
loope
jb
in
test
sbb
add
sub
popa
cli
adc
lock
jle
orb
inc
in
mov
fwait
fwait
fwait
fwait
and
fsubs
jbe
out
orl
lcall
fs
mov
mov
mov
or
mov
aas
fwait
fimull
dec
divb
sahf
xchg
jge
outsb
dec
xor
mov
cmp
adc
dec
jmp
aas
movsb
outsl
sahf
int
dec
xor
test
loope
sbb
pop
and
mov
clc
clc
lock
jp
xchg
imul
int
xchg
pop
es
xchg
adc
iret
int
call
mov
fwait
sbb
cmpsb
xchg
push
fsub
mov
ljmp
es
or
pop
test
mov
cmp
push
push
xchg
sti
ds
pop
clc
inc
mov
nop
orb
int
int
mov
inc
ficoml
xor
adc
iret
pop
movsl
adc
cmpb
jae
mov
push
pop
xchg
mov
int
in
roll
xchg
mov
sbb
aaa
mov
int
sbbl
sbb
loop
xchg
mov
sub
dec
repz
dec
ds
iret
int
in
test
insl
and
fdivr
ds
mov
cmp
jl
mov
cmpb
sahf
lock
insb
xlat
je
sahf
gs
push
movb
fcoml
sar
dec
imul
rcrb
pop
xchg
insb
pop
pop
push
or
jl
std
movsl
xor
shlb
xchg
fmull
scas
adc
aaa
mov
aaa
jns
jae
mov
popf
mov
rolb
jae
jae
pop
rclb
push
aam
sarl
stos
aaa
lret
pushf
ja
ds
xor
sbb
mov
sbb
jge
push
cmpsb
or
and
ja
dec
shr
mov
pusha
int3
cmp
xor
sub
addr16
dec
out
inc
sub
dec
jle
out
ret
mov
hlt
rorb
xor
add
leave
std
outsl
add
dec
mov
push
jl
lds
push
adc
adc
fcoml
aaa
mov
xchg
pop
in
int3
lahf
jbe
push
stc
fisubrs
push
add
cld
lea
adc
fmull
or
sub
or
or
pop
push
jmp
repz
pop
out
cmpps
enter
leave
cld
insb
outsb
outsb
out
jns
and
push
clc
lcall
pop
sub
lret
dec
pop
mov
iret
testb
and
js
pop
xchg
pop
popa
cli
jp
outsb
mov
mov
fs
loope
dec
or
aas
mov
or
cmp
or
sahf
insl
cmc
rcrb
jae
add
jg
outsb
cmpsb
cmp
sub
inc
mov
ret
movsl
xorb
fisubl
mov
add
mov
push
aaa
or
dec
in
je
jns
mov
fcomps
aas
cmp
mov
sahf
push
mov
insb
mov
dec
inc
outsl
xchg
std
insb
outsb
outsb
jbe
jecxz
xchg
test
or
clc
jmp
es
lahf
fs
fadds
add
inc
jmp
mov
mov
dec
enter
cmp
pop
lock
mov
push
movsl
fmul
leave
pop
or
bound
push
cld
push
cmc
jno
xchg
cmp
jb
jp
aaa
aaa
jmp
mov
push
mov
in
notl
notb
xchg
ds
loopne
out
iret
int
test
imul
xchg
xchg
add
mov
pop
push
loope
push
outsb
outsb
outsb
scas
xchg
fwait
divb
jo
inc
jnp
cmp
jne
insb
outsb
outsb
lods
sub
cs
dec
mov
rcrl
sub
into
fdivl
rcl
into
in
lahf
fistl
cmpb
lea
dec
and
and
adc
and
cli
das
jns
out
cmp
pop
push
xchg
icebp
or
outsl
sbb
sub
mov
and
mov
inc
jle
nop
push
test
callw
mov
pop
jp
jle
fldcw
test
in
testl
adc
lods
pop
or
jl
and
and
out
sub
std
add
mov
fdivrl
pop
push
adc
add
adc
xchg
dec
test
ret
iret
sbb
rcrb
or
jae
sti
rclb
es
push
push
in
addr16
repz
sub
xchg
gs
xchg
or
mov
push
out
out
push
cmpsl
jne
or
push
dec
fdivs
stos
adc
lret
cmpsb
in
inc
push
sbb
pop
xor
aaa
mov
in
int
neg
xor
sahf
jo
mov
mov
mov
fsubr
fldl
test
inc
mov
iret
loope
outsl
aas
ljmp
mov
in
fisubs
ljmp
clc
das
jae
and
sahf
stos
xor
jae
xchg
mov
dec
pop
fdivl
sub
jae
sub
pop
sti
xchg
add
popa
inc
jp
fistl
jo
push
sahf
jae
ds
lds
clc
xchg
enter
or
pop
mov
mov
lahf
add
adc
pop
loop
pushf
and
mov
or
mov
mov
dec
mov
add
addr16
aam
bound
mov
push
movsb
mov
fisttps
out
out
sbb
adc
inc
mov
out
mov
mov
adc
mov
repnz
int3
jb
xor
je
divb
pop
dec
cld
mov
or
sahf
fcmovne
hlt
mov
ret
inc
inc
and
ljmp
sub
inc
js
repnz
addb
mov
cmpsl
sub
int
pop
or
data16
mov
mov
dec
xor
dec
inc
xchg
ds
jmp
cld
aad
out
sub
repz
mov
leave
adc
and
aam
out
out
cmp
test
aam
mov
inc
dec
mulb
jp
sub
dec
in
cs
rcrb
xchg
into
cmp
jb
clc
adc
insb
outsb
outsb
outsb
xorl
mov
xor
inc
xor
sub
fldt
notb
sbb
jb
inc
lahf
fwait
test
inc
jmp
adc
push
or
int
scas
repz
dec
ja
iret
out
out
dec
and
cwtl
jns
jle
and
std
fs
fisubs
mov
idivb
dec
and
push
add
leave
inc
inc
mov
jno
leave
pushf
jmp
push
mov
xchg
gs
ss
bound
movsl
shrb
outsl
cmp
and
pop
rcl
cmp
mov
adc
push
mov
data16
cmp
inc
dec
mov
aaa
pop
cld
lcall
jns
jbe
mov
jbe
sahf
ss
xchg
pusha
int3
test
dec
mov
fwait
jns
sahf
mov
fwait
ret
addr16
mov
ss
cwtl
test
jmp
and
ljmp
js,pn
dec
sbb
fcmove
aaa
push
jl
inc
add
mov
leave
aaa
ret
inc
aaa
aaa
aaa
aaa
pop
out
xchg
mov
sbb
add
aaa
outsl
push
pop
or
jmp
scas
fistl
ss
mov
adc
out
aas
fwait
fwait
mov
cwtl
sub
or
pusha
inc
outsb
outsb
outsb
outsb
lods
pop
xor
std
push
xchg
stc
in
shlb
std
insb
dec
outsb
cli
jecxz
pop
sbb
jmp
fldl
inc
dec
add
cmp
xchg
and
sbb
sahf
outsl
xchg
xor
sub
add
lds
ss
int
cmp
dec
sbb
into
lcall
lahf
int
aam
popf
sbb
bound
pop
mov
pop
fwait
push
adcb
aaa
insb
or
xchg
ret
lret
mov
mov
mov
lcall
mov
or
std
push
sub
out
movsl
iret
out
and
dec
aad
jge
mov
cmc
rolb
jno
std
push
push
outsb
jnp
in
es
mov
mov
das
dec
notb
fisttpl
fdiv
jae
ror
dec
mov
mov
cmpsb
mov
or
push
dec
mov
pop
bound
and
loop
and
dec
out
out
rcrl
sbb
mov
xor
repz
out
rcl
in
mov
pop
jl
ret
mov
jmp
mov
data16
out
lret
mov
call
leave
push
lret
sbb
cmc
call
insl
adc
bound
leave
fistpll
jg
test
daa
mov
add
shrl
push
add
lock
adc
mov
enter
pop
test
outsb
outsb
mov
ss
mov
pop
and
rorl
outsb
enter
clc
dec
mov
into
fisubs
inc
cmpsb
pop
aas
fwait
fwait
idivl
js
mov
add
movsl
int
int
or
mov
ja
leave
jne
sub
iret
push
jo
enter
lea
stos
dec
jmp
lock
stos
xchg
mov
mulb
out
out
movsl
sub
sbb
and
out
out
or
cmp
ret
loope
loop
loop
jp
aam
out
fcmovnu
inc
int
fwait
add
mov
movl
psubb
xor
fidivl
bound
cmp
int
pop
mov
add
loop
jp
shlb
mov
inc
mov
scas
mov
outsb
mov
mov
mov
xchg
iret
mov
imul
and
fdiv
mov
inc
and
jno
leave
lea
out
lods
pushf
adc
inc
js
fists
bound
sbb
push
mov
iret
in
push
pop
call
addr16
dec
adc
mov
mov
test
inc
sub
add
fs
or
and
js
fsubp
out
orb
fldenv
xchg
mov
adc
xchg
lea
aaa
aaa
aaa
mov
in
inc
xchg
jns
scas
adc
push
enter
fwait
ds
push
das
mov
idivb
sub
sahf
pop
ret
in
mov
aas
fcmovne
adc
dec
dec
sub
xor
mov
mov
jae
adc
lret
xor
insb
mov
adc
movsb
mov
xlat
mov
bound
jle
sbbl
iret
repnz
and
gs
aaa
aaa
aaa
sar
or
pop
dec
lds
ds
aaa
shld
pop
sub
out
inc
cmp
cmp
push
mov
lahf
int
aas
adc
fiadds
into
dec
cs
mov
test
call
outsb
outsb
outsb
dec
xor
push
mov
dec
cld
insb
leave
sub
xchg
repnz
rolb
movsb
nop
push
and
rcll
icebp
rorl
jae
jae
lds
mov
stos
dec
movsb
addr16
jae
ljmp
or
pop
mov
sub
cmc
pop
or
mov
xchg
loopne
scas
lcall
aad
jle
aaa
in
lods
ljmp
and
test
xor
faddl
call
jl
test
mov
jae
pop
mov
out
out
scas
inc
lcall
mov
out
sahf
bound
subb
icebp
add
inc
pop
nop
xor
pop
mov
inc
bound
xlat
inc
insb
ret
outsb
cmpsl
push
dec
loope
das
aaa
aaa
fsubrl
mul
sub
mov
pop
xor
adc
lock
sub
cmp
fs
mov
add
inc
and
cmp
fdiv
xchg
ficoms
push
mov
push
jmp
stc
inc
ljmp
pushf
xor
pusha
mov
dec
fwait
fwait
cmp
mov
jl
loope
jp
fwait
fwait
fwait
fwait
push
jno,pn
xor
bnd
ficoms
aas
jno
cmpsl
inc
in
push
mov
xchg
or
dec
and
inc
pop
mov
xchg
lahf
decb
sub
out
outsl
scas
xor
or
mov
inc
or
sbb
out
ffree
sbb
dec
test
popa
jge
lods
je
fs
jp
or
jae
loopne
jo
shl
into
sbb
leave
les
mov
testb
push
fildl
fidivl
outsb
outsb
outsb
lahf
cli
xor
ret
fldcw
js
out
data16
jo
mov
test
push
aaa
aaa
mov
cli
lods
es
int3
fmuls
mov
iret
outsl
sti
inc
js
inc
lcall
jae
jae
es
fcmovnu
xchg
jge
dec
clc
pop
call
dec
jo
sbb
or
or
jmp
insl
sahf
jle
push
enter
pop
das
mov
and
test
loopne
sti
mov
icebp
or
and
dec
pop
jp
mul
xchg
std
insb
mov
xchg
shlb
push
and
pop
icebp
enter
xchg
in
ret
jnp
ljmp
test
sbb
cs
and
cltd
adc
fiadds
clc
mov
mov
sti
gs
adc
inc
inc
fdiv
jmp
in
loopne
in
cld
adc
or
push
cmp
dec
jl
lret
xchg
fidivs
xor
jae
mov
xor
mov
or
jae
ja
cmp
in
mov
iret
int
in
aad
inc
jbe
mov
inc
sub
sti
mov
stos
into
shrb
jne
push
lcall
inc
jae
jae
push
outsl
dec
adc
in
addr16
into
push
mov
xor
sbb
aaa
mov
pusha
jg
push
xchg
loopne
sbb
in
jle
aaa
aaa
out
mov
out
rcll
outsb
scas
lock
push
adcb
testb
clc
inc
sbb
bound
jmp
test
outsb
aas
mov
adcb
jmp
xor
add
in
lock
mov
xor
jae
sub
xor
jae
push
iret
in
addr16
insl
xchg
lods
pusha
xchg
pusha
ficompl
cmc
cmp
push
rolb
out
mov
std
addb
dec
inc
in
sbb
movb
lcall
or
lcall
pop
inc
out
push
pop
js
jg
push
cmp
dec
lahf
addr16
inc
pop
mov
iret
mov
data16
jae
je
inc
popa
pop
test
jns
fldl
rorb
pop
int
outsb
push
test
pop
sbb
cmp
nop
cli
mov
mov
cmp
movsb
pop
mov
mov
mov
ljmp
data16
int
in
ljmp
adc
push
mov
adcb
pop
in
iret
sbb
imul
fdivr
test
add
mov
shll
push
in
push
shl
out
not
inc
in
insb
or
in
popf
outsb
clc
fnstcw
das
jmp
adcl
sar
insb
outsb
outsb
jbe
test
addl
cmp
cmc
pop
lock
xorl
mov
cli
push
mov
mov
je
mov
insb
inc
into
loopne
and
jp
lods
mov
in
stos
sub
iret
divb
ret
inc
add
pop
mov
iret
in
sbb
add
mov
mov
ja
lods
mov
out
out
jno
int
jl
inc
test
lret
out
out
aas
mov
jne
jmp
xchg
jae
mov
inc
inc
fistpl
jo
arpl
adc
mov
push
mov
sti
mov
popa
aaa
aaa
aaa
push
mov
add
cmc
sahf
sub
cmp
dec
sub
xor
mov
cmpsb
push
inc
cs
fsubl
and
xlat
xchg
daa
test
add
hlt
pop
sbb
pop
iret
out
jbe
mov
cmpb
bound
jae
lds
cli
cli
dec
rcll
jle
push
shlb
fildl
dec
lods
jbe
repnz
addr16
xor
mov
push
lock
loop
adc
ret
push
pop
loope
sar
xchg
out
pop
fmull
jno
adc
mov
lret
lahf
dec
cmp
xchg
xor
cmpsl
movsl
xor
les
sbbb
cltd
insb
cmp
out
out
aaa
xchg
pop
push
daa
test
push
out
sbb
aaa
aaa
mov
test
aaa
mov
aaa
aaa
roll
xchg
outsl
jg
fsubs
push
je
push
inc
xchg
shl
testb
or
iret
adc
inc
pop
iret
jbe
sbb
arpl
lods
xchg
mov
or
and
loope
lea
aaa
aaa
mov
jb
ficoml
sbb
pop
sbb
js
aaa
aaa
mov
dec
dec
movsl
mov
or
aas
cld
cld
mov
cmc
subl
mov
addr16
push
xchg
rcrb
ret
mov
jbe
outsb
outsb
in
or
pop
lcall
mov
pusha
test
xor
cmp
mov
xor
fmuls
add
popf
jno
out
negb
add
addr16
mov
sbb
fcoms
xor
cwtl
dec
cli
xor
mov
std
fdivrl
das
cmpb
pop
in
adc
dec
mov
xchg
scas
jb
aaa
aaa
aaa
mov
insb
out
add
shlb
or
lret
jbe
adc
xor
mov
gs
sti
ds
aaa
fisubl
dec
rolb
repnz
sahf
mov
sti
mov
mov
loop
or
cmp
negb
mov
insb
scas
call
mov
popf
bound
movsl
add
shl
or
inc
in
divb
cmpsl
push
mov
xorb
mov
xchg
add
push
sub
das
cmpsb
mov
fwait
or
xor
loope
int
push
call
xchg
pusha
push
sarl
imul
out
shlb
push
mov
jo
scas
push
pop
jns
or
jnp
jl
lods
jae
jb
in
popa
imul
clc
jb
push
adc
jl
cs
jmp
jb
add
mov
sbb
inc
iret
out
pop
fsubl
je
mov
add
fistpl
sub
out
out
pusha
push
adc
mov
stos
sbb
pop
ja
or
inc
sarb
or
fisubl
call
gs
xor
mov
popa
cmp
sbb
test
push
rcr
add
lock
mov
push
popa
jae
jae
and
adc
andb
or
mov
add
out
dec
adc
pop
enter
mov
dec
or
std
dec
jnp
cld
insb
outsb
js
push
mov
pop
scas
mov
push
sahf
out
mov
sub
pop
inc
out
xor
jle
mov
dec
insb
rclb
mov
scas
mov
fwait
sub
or
add
jle
pop
xchg
dec
call
add
add
dec
mov
adc
sub
jo
push
lods
insl
jbe,pn
jle
mov
scas
insl
ss
cmp
int
idiv
cltd
fisubl
jl
loop
lock
cli
fdivrl
mov
and
push
adc
iret
inc
das
jne
out
push
cmp
xchg
fadd
inc
rol
iret
out
arpl
jge
lret
push
call
iret
nop
stos
mov
repz
dec
outsb
outsb
outsb
outsb
fistpl
mov
push
fs
jl
outsb
outsb
xor
inc
xor
imul
xor
fdivr
daa
into
cmc
sbb
aam
jmp
shrb
push
pop
fsubrl
xchg
repz
cmpsb
pop
dec
fistpll
sarb
dec
push
mov
fstl
mov
ja
std
insb
outsb
outsb
mov
adc
clc
mov
push
arpl
iret
out
and
sub
lahf
fildl
cmp
sbb
int
int
jl
repnz
xchg
test
sub
int
arpl
jbe
or
clc
mov
ffree
cmpsb
mov
aam
cmpsl
aaa
mov
jne
imul
mov
xchg
lock
idivl
aaa
pop
and
stc
scas
push
jg
bound
out
packsswb
ss
xor
mov
push
add
pop
out
sub
add
sub
out
out
ret
mov
lret
out
out
adc
fldt
sub
out
sarb
cmc
adc
mov
aam
inc
sub
mov
jae
mov
ljmp
loope
push
push
lret
dec
out
mov
pavgw
sbb
mov
inc
sub
xorb
aam
aaa
mov
outsb
cmp
out
jbe
in
mov
xor
aaa
aaa
aaa
mov
cmpb
or
push
xor
mov
fdivrl
call
shr
jno
xor
jae
and
pop
sbb
jp
mov
jae
jg
cltd
mov
aaa
aaa
mov
out
subl
dec
mov
ds
aaa
sub
xor
jge
scas
cmp
loop
push
mov
ss
aaa
mov
aas
or
in
mov
aaa
sbb
and
xor
lods
clc
inc
cmp
out
dec
push
mov
mov
adc
adc
adc
rcrb
mov
int
push
cmc
or
inc
dec
aad
aaa
aaa
aaa
mov
popa
push
cmp
movsb
xor
mov
inc
sub
mov
sbb
test
xor
outsb
int
cs
xchg
repz
test
jnp
xchg
or
jbe
out
int
std
sbb
outsb
outsb
add
jecxz
rorb
inc
daa
jmp
mov
or
or
or
icebp
mov
loopne
lahf
add
push
psrad
ljmp
mov
pop
mov
aas
movsb
ds
pop
xchg
xchg
ret
jo
cmp
sbb
roll
flds
jae
jae
mov
stc
jns
les
mov
call
hlt
sbb
xlat
jae
mov
stos
ds
insb
les
addr16
mov
dec
ss
les
enter
mov
or
jae
jge
out
mov
pushf
jae
jae
pop
and
in
scas
push
lods
jns
dec
mov
push
xor
mov
lods
adc
int
int
cmc
xchg
cmpsb
xlat
jne
cmp
mov
int
jbe
or
xchg
dec
cli
fwait
xor
cmp
xchg
xchg
inc
outsb
in
addb
aas
fbld
xchg
test
push
ljmp
push
push
lahf
or
jo
and
sub
mov
jge
xchg
js
fs
fdiv
repnz
ljmp
lock
mov
pop
faddp
push
push
jae
lds
scas
add
or
mov
frstor
cmp
outsb
rorb
jbe
mov
outsb
outsb
dec
or
in
cld
cmp
aas
outsb
outsb
outsb
outsb
xor
pop
and
inc
jmp
insb
outsb
outsb
outsb
insl
cmpsb
pop
stc
sbb
dec
adc
std
scas
arpl
mov
adc
push
add
jmp
cmp
pop
stos
mov
sub
iret
xchg
nop
adc
mov
sbb
ret
int
icebp
jo
out
add
stos
loop
in
movups
adc
mov
int
lds
xorb
or
jle
pop
iret
rclb
jp
xchg
mov
sbb
faddl
inc
sarl
mov
outsb
outsb
push
pop
stos
mov
outsb
ret
test
mov
mov
rol
pushf
scas
cmp
shlb
aaa
aaa
adcl
rcrl
outsl
stc
stos
fstpl
fwait
and
mov
fwait
fwait
loopne
xor
xlat
mov
sti
cmp
cld
dec
cmp
ds
push
je
ret
push
ds
adc
xor
jae
divb
into
loope
sub
xchg
jmp
fldt
les
mov
jge
mov
sahf
ret
mov
xor
adc
xchg
shll
pop
and
and
fnstcw
mov
subb
mov
in
daa
int3
sbb
data16
xchg
test
fdivrl
sbb
cmp
xor
les
clc
stos
dec
cwtl
es
bound
in
jbe
hlt
hlt
sbb
sub
jge
pop
clc
pop
rcrb
mov
inc
iret
scas
arpl
or
in
or
in
mov
aam
dec
mov
mov
ret
cmc
xchg
pop
pop
outsb
outsb
js,pn
out
mov
sub
xchg
jne
mov
data16
outsb
outsb
outsb
movsl
xchg
in
nop
ds
cs
movsl
cli
notb
outsb
adc
or
iret
out
out
cmp
and
mov
pop
mov
gs
stos
lret
mov
jmp
push
xchg
sbb
push
dec
pop
insb
mov
mov
out
testb
clc
in
rcr
add
aas
fstpt
jnp
repnz
pusha
pop
ret
xor
mov
fimuls
jg
mov
rorb
jge
in
shlb
mov
xor
push
ss
or
jge
aaa
aaa
or
adc
sub
mov
jle
adc
adc
cmpsb
sbb
pop
fwait
inc
pop
divb
lds
sahf
mov
dec
sbb
repnz
popa
loop
sub
andb
ss
ljmp
or
outsb
aas
js
and
dec
or
test
mov
xor
mov
mov
incl
cmp
dec
or
lods
pop
ja
stc
pusha
outsb
outsb
outsb
outsb
insb
xor
shl
jbe
frstor
adc
std
insb
sub
ficompl
std
lret
xchg
fcompl
fwait
int
out
push
push
filds
leave
mov
and
mulb
out
das
jl
iret
aaa
cmp
jl,pt
cmp
or
out
idivb
mov
fdiv
add
cmp
inc
mov
loop
adc
xorb
in
mov
sahf
pavgb
ja,pn
pop
pop
out
mov
enter
stos
stos
dec
pop
arpl
out
out
inc
dec
pop
bnd
lret
adc
test
xchg
popa
mov
aas
dec
mov
insb
out
jbe
xor
pop
addr16
dec
jno
xlat
push
jae
iret
out
pop
hlt
mov
adc
inc
nop
das
loope
jb
sbb
jge
pushf
fistpl
rorb
mov
mov
jge
mov
in
cwtl
lods
mov
mov
lahf
dec
icebp
pop
inc
es
adc
jae
testl
cwtl
inc
xor
sub
mov
sbbb
leave
mov
pop
sbbl
jbe
je
lea
jo
mov
shlb
rclb
vcvtpd2dq
mov
add
pop
mov
jae
stos
pop
xor
pop
test
jmp
inc
lret
xor
mov
das
inc
hlt
test
adc
adc
mov
ljmp
mov
lods
add
ds
pop
mov
test
mov
jae
shlb
or
dec
push
mov
mov
in
mov
lds
fildl
popf
xchg
sub
push
pop
mov
int
lahf
int
mov
or
and
mov
jmp
lahf
int
push
jp
ror
dec
outsl
mov
in
mov
imul
js
std
insb
pop
lock
and
das
cmp
cmc
mov
mov
mov
mov
cli
lods
sbb
xchg
aas
addr16
in
imul
ja
mov
mov
jae
jmp
mov
in
jae
jae
pop
das
fisttps
jp
arpl
mov
lea
mov
add
mov
mov
xor
jmp
cmp
filds
sbb
cmc
fwait
fwait
sub
sbb
mov
insb
jle
outsl
movsl
inc
adc
fwait
inc
pop
ffree
rcl
js
insb
cli
sarb
or
xlat
outsl
and
cmc
sbb
jne
ret
fcompl
loop
je
insb
shl
xor
scas
cli
mov
xorl
clc
cmp
jp
and
lods
cmc
faddl
std
mov
in
daa
nop
mov
xchg
pushf
addr16
inc
call
rorb
out
das
movsb
cli
lods
xlat
inc
dec
aam
mov
out
rcll
movsl
add
or
rolb
orb
out
cmp
adcb
mov
inc
fwait
jno
cltd
dec
ljmp
fmull
repz
cwtl
or
push
out
aaa
jno
fdivrs
orl
jae
iret
mov
scas
enter
jg
sahf
lods
jb
clc
call
and
inc
ljmp
xor
in
ret
fwait
ror
aam
mov
lcall
jae
push
test
xchg
adc
out
lret
daa
movsb
jns
jb
test
xchg
outsb
outsb
outsb
pop
arpl
bound
bound
nop
jmp
inc
leave
jp
outsb
lea
pop
xlat
dec
divl
fndisi(8087
rclb
hlt
pop
sub
jae
jae
jnp
add
mov
pop
jae
jae
sahf
cltd
push
pop
add
lds
mov
loope
lahf
push
mov
xor
xor
pop
data16
andb
in
mov
pop
out
pop
sbb
fwait
cmp
stos
aad
ss
pop
es
stos
mov
mov
cmp
push
mov
dec
xchg
mov
jmp
add
cmp
xor
dec
or
aaa
mov
inc
mov
sahf
mov
shll
fwait
fwait
ds
lock
or
cmpsb
jo
sbb
fwait
fwait
scas
loope
inc
adc
mov
fistps
fwait
ret
xchg
or
xchg
sbb
std
outsb
outsb
lahf
fwait
sbb
adc
pop
int
outsb
outsb
outsb
mov
sbb
push
shll
inc
dec
popa
mov
push
xlat
adc
cltd
mov
testb
rolb
sbb
aad
out
daa
aas
sbb
jl
or
lods
dec
orb
mov
push
stos
pushf
jnp
outsb
scas
cmp
xchg
push
sub
adc
push
pop
and
roll
pop
iret
int
pusha
adc
jb
dec
jg
iret
out
in
push
pop
and
out
jecxz
sub
iret
int
fldcw
jne
shrl
clc
xorb
ss
push
insl
cmp
lds
outsb
outsb
dec
mov
mov
xlat
and
pop
mov
pop
imul
je
jnp
push
jecxz
adc
sahf
mov
or
inc
call
mov
popa
cwtl
mov
push
sub
inc
outsl
dec
test
lods
cmc
adc
or
jp
stos
fmuls
aaa
mov
in
pop
push
mov
pop
negb
sbb
call
scas
push
pusha
pop
jl
push
mov
repz
fdivrl
aaa
mov
mov
mov
cs
fcompl
pop
cmp
test
shll
sbb
mov
fldt
test
loopne
jbe
inc
pop
adc
cmpsb
pop
push
or
push
sbb
enter
sub
add
rorb
out
xchg
and
out
out
clc
push
add
jns
les
mov
xchg
cmpsb
cmpsl
jecxz
sbbb
sub
fsubl
scas
inc
mov
mov
fldl
xor
fdivl
int
jbe
data16
pusha
jne
ret
inc
dec
rcr
xchg
scas
outsl
jmp
mov
js
inc
push
fcomps
sub
xchg
fcom
iret
mov
pop
or
addr16
insb
mov
adc
shrb
psrad
rorb
outsb
andb
push
inc
insl
inc
add
lock
sub
lahf
jecxz
pushf
sbb
ret
sbb
and
call
or
repnz
mov
inc
push
xor
lods
or
and
add
mov
sti
mov
cwtl
mov
lcall
add
mov
mov
cmpsb
iret
inc
aam
sbb
out
mov
mov
add
rcrb
loope
xor
inc
rclb
imulb
scas
lods
lahf
int
or
jne
ret
sbb
addl
push
jmp
mov
mov
aaa
pop
dec
adc
ret
out
mov
cwtl
test
mov
sub
push
data16
pop
inc
lea
test
pop
mov
mov
mov
push
in
rcrl
aaa
shll
pop
sub
mov
neg
ds
out
pop
mov
cmp
cmp
std
movsl
je
xor
test
stos
cmp
enter
jae
jg
aaa
mov
popf
sub
pop
mov
out
push
inc
js
in
sar
sahf
mov
mov
sbb
xor
jae
sarl
or
jnp
push
imul
jae
enter
out
pushf
fucom
int
out
ljmp
arpl
sahf
movsb
dec
mov
xchg
out
jae
add
sbb
sub
mov
out
dec
shlb
cwtl
movsl
or
inc
int
sbb
loopne
bound
lahf
int
aaa
xchg
adc
inc
mov
fmull
int
pop
inc
incl
clc
fsubl
push
out
push
scas
xor
and
insb
cs
addb
out
out
adc
stos
cmp
insl
xchg
popa
xor
push
add
out
out
adc
mov
and
push
and
shlb
xchg
jge
add
or
xchg
hlt
mov
mov
ficomps
jae
jae
dec
shl
imull
jg
lahf
jb
push
mov
mov
cltd
shr
sti
adc
sarb
aam
loop
push
xchg
fwait
insb
outsb
out
mov
sbb
cmp
rorb
int3
cltd
xlat
call
pop
out
popa
and
pop
cmp
mov
push
xchg
adc
fwait
mov
mov
lock
mov
mov
jae
lahf
or
cs
aas
pop
mov
lret
mov
test
sub
icebp
jne
das
sub
movsb
pop
mov
outsb
jle
scas
sbb
push
les
nop
fdivrl
jae
pop
push
pushf
ret
dec
xor
insb
push
cmp
sti
in
cmp
mov
cli
lock
aad
push
sub
dec
cli
in
loopne
cwtl
pusha
or
add
pop
cwtl
lret
xchg
push
iret
adc
or
fdivrl
jns
inc
sub
lods
imul
mov
push
cmp
pusha
dec
push
filds
mov
push
cmp
add
mov
xchg
lods
xchg
lahf
xchg
pop
jp
aaa
aaa
mov
xchg
in
rcr
or
outsb
clc
lret
outsb
mov
scas
lock
cld
insb
outsb
outsb
xchg
add
daa
fidivs
aaa
mov
dec
jl
jns
adc
lea
cmp
mov
inc
sbb
std
dec
fidivs
sub
and
shrl
fcmovne
out
bndstx
or
aam
enter
test
fwait
fwait
fwait
outsl
icebp
adc
mov
mov
outsb
lahf
or
imul
mov
insb
mov
jae
pop
lret
sub
mov
fwait
mov
mov
out
mov
mov
in
push
shrb
inc
icebp
mov
mov
bound
xor
jmp
rcrl
xchg
lahf
sbb
mov
fidivl
movsb
pop
sbb
xchg
mov
aaa
aaa
aaa
push
movsb
mov
call
sub
inc
cmp
aaa
cmp
xor
dec
xchg
movsb
sahf
fwait
pop
loop
add
cmp
int
int
xor
or
sbb
sub
aas
jle
mov
xchg
fnstsw
testb
punpcklbw
out
out
daa
cmpsl
arpl
mov
aaa
jge
outsb
xor
pop
popfw
cli
mov
in
mov
mov
int
je
mov
cmp
rcr
xchg
fmull
cld
jns
mov
bound
fwait
mov
jne
xlat
ja
xor
sbb
bound
cs
fnstcw
stos
lods
pop
les
stos
subb
outsb
dec
mov
nop
insb
out
out
pop
gs
mov
pop
imul
sbb
dec
mov
add
sti
fs
test
int
jae
inc
push
fildl
into
or
cli
adc
mov
push
cli
mov
xchg
aam
not
test
jp
jb
cmp
and
jae
shll
lods
adc
dec
addr16
mov
pop
jmp
push
cmc
sub
ds
xor
loop
stc
cli
add
out
pop
pusha
sub
or
outsb
outsb
pop
push
mov
sbb
sub
testb
sbb
insb
in
pusha
fidivl
imul
out
scas
or
loopne
mov
jae
mov
addr16
pop
fstpl
jns
dec
test
int
lods
movsl
sahf
insb
xor
popf
sbb
jle
adc
out
lahf
outsl
mov
inc
xor
push
mov
ror
and
test
inc
stc
lret
movsl
pop
jp
sub
shll
mov
inc
push
ljmp
iret
out
cwtl
dec
xchg
imul
cli
dec
cltd
mov
jmp
adc
aaa
outsb
jbe
divb
jb
push
lcall
mov
push
lahf
out
jp
lock
pop
lock
aad
cmp
in
cmpb
test
int
int
fldt
ds
sub
pop
fsubs
mov
cmp
sbb
pop
xchg
in
out
mov
fistps
lods
fisttpll
in
outsb
outsb
scas
movsl
sub
out
jge
in
jmp
repnz
cli
pop
icebp
sti
insb
push
xchg
dec
pop
adc
mov
fsubrs
lock
fcompl
sti
fsubp
outsl
out
mov
xchg
std
add
push
mov
and
dec
pop
xchg
int3
into
dec
sub
mov
mov
int
sub
cmpl
or
sti
fcompl
in
xor
aas
mov
orl
mov
sahf
adc
das
aaa
sub
pop
and
and
outsb
outsb
outsb
jle
pop
lret
ds
fwait
jne
arpl
outsb
sbb
test
repnz
clc
int
int
js
dec
in
cs
into
int
int
aam
stc
popa
popf
addr16
loop
out
lret
add
aam
cmp
iret
push
sbbl
aaa
out
clc
mov
std
nop
clc
dec
aas
hlt
dec
jl
jle
add
sub
int
sahf
fwait
sbb
jecxz
ss
mov
aaa
pop
mov
push
cmp
and
clc
addb
mov
mov
lcall
jae
jae
mov
sbb
imul
adc
mov
or
mov
xlat
push
clc
mov
sub
mov
and
fadd
jnp
data16
and
adc
mov
pop
repz
pop
popa
enter
mov
mov
les
rorb
das
pushf
adc
mov
int
int
mov
mov
mov
xchg
daa
mov
adc
int
lods
cwtl
xchg
inc
mov
lret
outsb
lahf
ret
sub
out
fwait
mov
outsb
outsb
outsb
outsb
adc
std
sub
xor
lods
mov
enter
out
pop
shl
adc
pop
cmc
mov
jne
and
in
fdivs
inc
insl
cltd
imul
testb
hlt
je
rorl
adc
push
fucomp
inc
jmp
sbb
or
dec
dec
xchg
bound
ret
cmpsl
movsb
xchg
cmpsb
stos
mov
xchg
and
aaa
mov
rcl
test
mov
lea
in
movsl
mov
out
sbb
jle
xchg
sbbl
jmp
repz
fidivrs
or
cld
inc
bnd
outsl
xchg
pop
bound
lahf
inc
out
push
and
aaa
aaa
jmp
loope
jns
enter
les
jns
loopne
aaa
mov
aad
es
int3
xchg
jmp
sti
fdivrl
aaa
or
add
add
addps
jae
or
mov
mov
stos
push
shlb
jae
pushf
fdivrp
fsubl
mov
and
iret
int
jae
mov
sub
jecxz
sti
jge
adc
test
mov
icebp
adc
jo
inc
data16
mov
ljmp
sbb
ss
aaa
aaa
lods
sbb
movsl
pop
inc
dec
mov
test
cmp
jae
push
aam
sar
fcomp
out
dec
cli
fdivrl
insb
rolb
imul
mov
add
gs
mov
mov
dec
gs
jne
lods
out
xor
loopne
mov
mov
jl
das
mov
push
xor
or
scas
xor
sbb
add
xchg
test
sti
xor
bound
dec
dec
mov
in
jae
jae
sbb
subl
test
lahf
int
addr16
adc
popa
cmp
or
in
pop
pusha
jmp
int
push
mov
roll
mov
add
and
stc
mov
imul
jge
mov
push
lcall
inc
mov
ss
mov
call
ret
pop
rol
pop
arpl
sub
addr16
xchg
es
out
mov
arpl
pop
jl
addr16
dec
push
aam
add
xor
cmpsb
outsb
mov
fisubl
js
lea
jbe
jo
and
fdiv
or
xchg
cwtl
xor
xchg
ret
insb
jne
jg
clc
pop
dec
sbb
xor
push
add
sbbb
inc
aam
cmp
mov
push
shrl
loop
jmp
lcall
movsl
mov
and
std
les
out
pusha
test
aas
pop
iret
dec
cmp
xor
nop
mov
add
xchg
lock
mov
or
bound
mov
pop
pop
sahf
push
pop
das
lea
mov
orl
adc
pop
loop
sbb
and
sbb
xchg
or
insl
jae
xor
cmpsl
call
ljmp
ret
fwait
fistpll
adc
mov
jae
jnp
adc
cltd
lret
adc
sarb
outsb
outsb
outsb
xchg
pop
push
call
int3
int
outsb
outsb
outsb
push
iret
shll
test
xchg
out
cld
add
sbb
mov
or
out
out
hlt
subb
and
mov
sub
out
ljmp
imul
xchg
pop
jae
es
sbbb
lcall
int3
adcb
mov
inc
cmp
iret
jmp
rcl
fstpt
aad
shll
mov
js
dec
stos
movsb
cmc
cmpsb
inc
cwtl
and
cmp
push
sub
std
xor
aaa
ja
xor
dec
xchg
dec
faddp
fcomps
outsb
push
jp
jo
xlat
aam
cli
aaa
aaa
pop
loopne
jno
or
sbb
jp
aaa
aaa
adc
jle
in
add
or
ljmp
lahf
inc
lahf
push
xchg
je
js,pt
ret
fnstcw
mov
sbb
ss
test
adc
scas
add
fcomip
dec
cmpsl
add
jbe
in
rcr
fwait
fwait
fidivl
sub
fwait
fwait
fwait
fwait
jge
dec
lods
and
and
imul
xor
inc
xchg
ds
lcall
fcmovu
inc
sahf
test
iret
add
fwait
cs
jo
loop
ror
lahf
push
mov
push
mov
cs
orl
shlb
push
arpl
push
test
mov
adcb
enter
jge
push
fdivr
xchg
nop
add
add
xor
jae
jne
mov
jecxz
cli
fsts
xchg
dec
in
pop
mov
xor
jecxz
push
out
cld
pusha
sarl
fwait
jle
mov
in
mov
sbb
adc
xchg
mov
in
push
lahf
fwait
adc
ret
in
lahf
int
int
rcr
push
dec
shll
fwait
fwait
fwait
in
notl
sub
cltd
pop
shl
jmp
add
sahf
cmpsl
xchg
stc
stc
ds
xlat
cmp
out
jb
push
push
jle
iret
int
push
or
scas
test
hlt
pop
ljmp
push
cltd
popf
andl
fmull
ret
sbb
in
mov
mov
sub
rcr
fdivl
fdivrl
adc
arpl
pop
sti
cli
xchg
adc
xchg
adc
dec
jnp
jle
rclb
idivl
inc
icebp
dec
push
pop
clc
fadd
ret
ret
dec
inc
fdivs
outsb
outsb
out
push
in
jp
je
jbe
push
insb
outsb
outsb
outsb
cltd
jg
sbb
out
fdivl
jge
outsl
mov
dec
push
popa
push
mov
push
pop
push
addr16
sub
mov
mov
adc
or
pop
cwtl
adc
push
lock
or
int
pop
cwtl
inc
sub
xchg
pop
pop
movsb
aaa
mov
int
cmpsb
jmp
mov
jp
jecxz
lret
loop
jge
pop
movsl
jp
adc
sbb
out
push
jo
inc
push
int
js
fisubrs
fwait
fwait
push
rcll
xchg
jge
jg
lahf
fwait
fwait
fwait
popa
ljmp
arpl
int
pop
sub
fwait
icebp
repz
je
jbe
cmp
adc
mov
lahf
mov
shll
arpl
cmpsl
mov
xchg
bound
sub
mov
cs
outsl
ljmp
pop
cmpsl
push
mov
out
leave
push
out
stos
mov
hlt
jno
adc
adc
push
pop
sbb
mov
int3
push
push
mov
mov
lea
inc
stc
sub
lock
jge
mov
rcrl
pop
lret
push
divb
pusha
jbe
ret
adc
out
out
cwtl
loopne
mov
xchg
jg
into
int
aas
and
jnp
mov
incb
adc
scas
mov
mov
faddl
inc
or
cmp
insb
outsb
pop
test
push
push
cmc
out
clc
fcompl
stc
in
cld
rclb
cmpsb
loope
add
sbb
out
lahf
push
jno
cmp
data16
jo
divb
fcmovnb
popl
mov
std
xchg
arpl
ret
inc
inc
aam
and
aaa
mov
mov
mov
test
pop
in
pop
fs
fdivrl
aaa
movsb
cli
or
jbe
ljmp
ss
pop
clc
int
rorb
lods
das
cld
rorb
cwtl
dec
mov
aas
fwait
fwait
jo
fists
push
out
mov
jne
mov
or
out
out
mov
int
pop
xor
outsb
mov
xor
rolb
cltd
xor
fmuls
pop
cld
insb
outsb
lret
popf
jne
jnp
sub
aam
mov
cmp
dec
mov
pop
mull
in
addr16
xor
pop
push
dec
dec
push
adc
outsb
out
mov
cli
xchg
std
stos
xchg
mov
out
out
push
push
jge
orb
sbb
jecxz
xchg
iret
mov
insb
ja
xchg
sbb
or
xor
fcoms
cmp
ja
imul
add
cld
insb
outsb
outsb
mov
cmp
pop
mov
in
xchg
jae
push
fdivl
shr
push
int
push
das
xor
out
sub
jae
out
lahf
insl
mov
push
jns
iret
out
mov
repnz
mov
xlat
pusha
mov
outsb
inc
shl
jnp
fistpl
shlb
je
inc
ror
outsb
fwait
fwait
fwait
fwait
test
pop
je
mov
fwait
fwait
fwait
xchg
lea
xchg
mov
sub
dec
pop
push
call
rcr
pop
jp
enter
or
in
es
hlt
ret
or
es
roll
xchg
scas
cmpb
mov
mov
sub
jle
fcompl
inc
xchg
mov
cmpsl
mov
icebp
mov
fists
xchg
xor
or
movsl
test
adc
and
mov
out
push
dec
test
push
enter
push
aam
ret
shrl
loopne
dec
out
clc
mov
mov
lret
pop
cli
insb
outsb
loopne
popf
pop
add
cli
mov
outsb
shl
imul
cmpsb
cwtl
dec
dec
int
sbb
adc
icebp
jbe
test
xor
mov
nop
fbld
pop
filds
or
insb
push
ds
aaa
pushf
mov
jb
mov
pop
std
xor
cmp
sbb
fidivl
cmp
or
sub
aaa
leave
daa
sbb
loopne
out
out
inc
je
loop
mov
dec
decb
sbb
jne
std
jl
mov
int
int
cli
push
push
loope
pusha
dec
adc
add
push
jbe
ja
mov
fidivs
fcoml
aaa
add
jg
int3
mov
out
mov
or
adcl
out
rcll
add
test
jecxz
lods
cmp
add
mov
add
pop
mov
fmull
push
push
cmp
mov
mov
jge
aaa
les
mov
testb
movsb
push
and
in
addb
test
sub
js
clc
add
xchg
mov
out
out
clc
imul
or
sub
repnz
out
fcoml
mov
rorb
and
lods
icebp
cmp
outsb
aas
fwait
fwait
cmp
xchg
adc
mov
subl
outsb
outsb
mov
clc
leave
test
sbb
mov
shr
sub
in
push
pop
loopne
or
jp
pop
mov
int
xor
add
sub
inc
pop
jmp
jae
inc
cmp
test
cmp
jae
pop
cli
dec
fisttpll
jmp
ret
mov
in
addr16
insb
test
adc
and
jae
jge
aaa
cmp
fdivp
test
aas
adc
adc
aam
cmp
int
or
jb
test
test
mov
shlb
inc
mov
pop
pop
je
mov
add
in
loope
xor
adc
invd
mov
std
pop
fstl
mov
pop
xor
pop
out
and
clc
pop
push
clc
sbb
sarb
inc
inc
xchg
add
data16
mov
mov
cld
dec
lods
bt
or
lret
cmp
sub
jge
nop
xor
test
int
int
ja
pop
sahf
jmp
ja
inc
je
int3
mov
out
iret
dec
dec
aad
jbe
insb
push
xchg
je
out
out
add
mov
pop
out
add
xchg
rorb
aaa
andl
mov
pop
lock
pop
xor
push
repnz
cmp
dec
mov
aaa
mov
xchg
fnstsw
add
push
inc
movsbl
clc
or
ror
sbb
in
sti
ficomps
rcrl
shlb
xor
outsb
jle
mov
cmp
pop
addr16
repnz
push
lret
stc
aam
push
mov
mov
pop
and
in
mov
mov
inc
lods
hlt
mov
sarb
pushf
push
sahf
or
or
jecxz
icebp
stos
lods
popf
js
cs
sub
cmpsb
push
xchg
es
mov
out
out
lods
flds
xchg
mov
adc
iret
inc
add
ret
rclb
pop
lock
adcb
ss
aaa
cld
mov
dec
notl
adc
aad
fcompl
push
outsb
dec
arpl
dec
lods
stc
pop
jge
cmp
lods
ret
sbb
decb
repnz
and
fwait
or
mov
adc
les
fdiv
xor
es
inc
or
fldenv
sbb
fcompl
add
jb
ljmp
loopne
fldcw
mov
stos
mov
lock
lods
aaa
lea
cmpsb
pop
fwait
fwait
fwait
fwait
sti
jg
jbe
mov
inc
inc
call
aas
fmulp
ss
push
addr16
mov
inc
and
cmp
mov
hlt
sbb
mov
cmp
lock
inc
gs
pop
fdivrs
adc
stos
mov
add
mov
push
sbb
adc
pop
pop
adc
jae
jae
sub
add
hlt
addb
adc
addr16
push
out
loopne
sub
push
xchg
dec
cmp
push
fs
mov
addb
cwtl
sahf
adc
sub
sub
nop
dec
adc
icebp
jle
mov
in
mov
push
and
movsb
dec
mov
test
test
xchg
imul
xchg
call
popa
jns
imul
ljmp
test
fcompl
pop
ljmp
ffreep
hlt
icebp
ret
and
pop
push
mov
and
data16
xchg
mov
mov
dec
lahf
pop
push
shlb
pop
lock
out
in
movsb
inc
adc
test
call
jge
pop
adc
dec
aaa
aas
fwait
fwait
repz
lods
pop
test
arpl
aaa
aaa
sub
xor
mov
sbb
sbb
lock
mov
test
mov
das
dec
and
jae
adc
jo
iret
stos
jle
fcmovu
jmp
jae
pop
sbb
mov
fdivrs
sarb
stos
adc
mov
rolb
notb
sbb
fdivrl
and
out
out
repz
lods
xchg
xchg
push
xchg
hlt
jns
xor
adc
mov
jmp
test
pop
test
sahf
int
je
add
and
stos
lock
sbb
mov
pop
iret
out
test
aas
out
das
test
fwait
fildl
xor
pop
or
adc
add
inc
cmc
es
movsb
lahf
int
sbb
test
int
mov
add
jns
fidivs
cmp
mov
fcmovbe
hlt
mov
fldt
mov
in
adc
loopne
stos
pusha
adc
cmp
and
repnz
mov
adc
insl
psubb
mov
rolb
testb
cmpsb
out
ret
movsb
jb
bound
insb
outsb
adc
fsubrp
in
out
mov
aaa
sub
push
mov
xor
xor
loope
ljmp
nop
repz
xor
push
pop
dec
neg
jmp
xchg
test
sub
push
dec
xchg
clc
iret
mov
les
cmc
call
pop
hlt
cmp
jg
insl
mov
add
aaa
aaa
mov
mov
loope
jmp
aaa
aaa
repz
leave
xchg
add
pushf
sahf
inc
sbb
test
insb
fildll
fcmovne
jecxz
lea
adc
mov
sti
pop
shrb
sbb
jb
mov
mov
mov
cld
fcmovne
out
faddl
adc
insb
mov
test
fwait
fwait
fwait
and
insb
lahf
jp
or
adc
fwait
fwait
fwait
fwait
sbbb
stc
ds
addr16
adc
cmp
subb
gs
data16
loop
outsb
outsb
outsb
xor
xlat
outsl
mov
dec
mul
std
fdivrs
jl
outsb
pusha
dec
ja
data16
leave
push
sub
aad
xor
xchg
int
aam
js
mov
and
arpl
insl
shrb
mov
pop
jae
jae
xor
out
in
shlb
lds
mov
dec
cmpsl
mov
dec
loop
and
test
loopne
jbe
subb
xor
shlb
push
sbb
inc
outsb
mov
jecxz
orl
mov
xlat
pop
lret
negb
mov
jle
aaa
roll
cmpsl
loope
lahf
pusha
xor
repz
jmp
jo
or
fwait
fwait
fwait
xor
dec
fdivs
sbb
lret
jl
call
mov
pusha
inc
iret
xchg
adc
out
test
mov
subl
cmpsl
clc
mov
jge
fwait
fwait
fwait
fwait
and
pop
mov
sub
inc
or
xchg
fisttpll
repz
sahf
clc
popf
out
shlb
outsb
psubd
adc
or
sbb
std
insb
outsb
fwait
dec
or
insb
lcall
jl,pt
loop
das
mov
mov
clc
fsub
adc
ret
enter
call
inc
push
xlat
ficomps
sbb
mov
pop
adcb
fwait
fwait
fwait
pop
in
imul
stos
push
lret
mov
fwait
repnz
rorl
add
mov
adc
cmpsb
mov
fistl
or
insb
repz
lahf
cmp
xorb
mov
mov
cmp
out
imulb
push
ficoml
inc
cmpl
jae
out
aas
int
aad
pop
ficomps
jae
repnz
popf
add
push
sbbb
ror
arpl
sub
jno
and
iret
in
xchg
pop
cmp
insb
add
mov
in
subl
add
push
push
stos
clc
pop
mov
movsl
iret
out
sti
lcall
pop
mov
cmpsl
xor
jne
iret
out
out
jle
adc
loopne
cmp
icebp
or
mov
dec
call
dec
pop
cmp
mov
mov
int
dec
pop
jb
push
fisttps
clc
or
gs
ds
cmp
push
jo
out
pop
adc
sahf
int
fnstcw
test
movsl
daa
mov
add
outsb
outsb
rorb
imul
cwtl
stos
shl
aaa
insb
outsb
outsb
outsb
or
inc
jle
sbb
lock
cli
ljmp
xor
loopne
ljmp
and
mov
jbe
loopne
push
mulb
outsl
insb
out
and
jbe
cli
mov
mov
outsb
scas
and
mov
mov
insb
push
inc
insl
js
outsb
outsb
adc
jne
daa
pop
iret
out
or
fists
or
cmpsb
popa
and
and
imulb
or
gs
leave
mov
adc
sahf
mov
xor
jns
mov
fnstcw
jbe
sahf
and
xor
push
test
mov
mov
vpmaddwd
dec
icebp
out
push
in
or
pop
xor
imul
pop
ret
adc
negl
xor
add
xchg
adc
out
out
js
out
pop
movsb
fcomp
sahf
sub
subl
es
cli
cmc
mov
jnp
in
mov
xor
sbb
cmp
stc
dec
and
ss
aaa
jns
add
push
cli
lods
clc
push
sbb
cltd
rep
out
testb
ljmp
out
jb
adc
xchg
loop
or
mov
fnstenv
cs
loop
jae
int
pop
cmp
rclb
push
pop
lods
pop
outsl
outsb
lcall
xor
push
push
shlb
inc
mov
mov
jnp
outsb
mov
imul
xchg
push
fwait
insb
insl
mov
in
xchg
adc
insb
js
fcompl
cmp
test
mov
xchg
sub
adc
clc
mov
inc
je
fisubs
or
lea
push
jbe
cmp
je
and
aas
fisttpl
mov
out
cwtl
sbb
outsb
outsb
sbb
jbe
pop
adc
sub
aaa
ja
cs
pop
xchg
fisttpll
xchg
lods
ljmp
or
mov
stc
sbb
pop
aaa
and
mov
pop
cwtl
and
cli
inc
dec
adc
inc
xchg
clc
fnstcw
test
in
push
add
ret
clc
insb
out
push
xchg
sub
dec
cli
xor
out
mulb
in
xchg
subb
adc
sub
jae
repnz
xorb
in
addl
xor
mov
ljmp
out
xchg
dec
push
loop
sti
fstps
popa
insb
push
ret
and
cltd
or
mov
outsb
mov
sbb
cmpsl
xor
cltd
pop
adc
fwait
out
adc
push
ds
int3
sub
mov
lods
repz
stos
add
loope
mov
std
adc
push
adc
aas
out
sbb
add
js
xor
mov
push
loope
ret
jae
ret
xchg
dec
jnp
pushf
push
cltd
daa
xor
push
xchg
cmp
out
js
sbb
fucompp
cmp
stos
jbe
outsb
outsb
mov
cli
xchg
and
outsb
out
mov
andl
jb
fwait
jns
pop
cwtl
out
cs
outsb
outsb
outsb
outsb
cmpsl
out
dec
lcall
jecxz
pop
imul
lret
sub
jp
insb
mov
insb
add
clc
fldt
jnp
aas
fwait
fwait
or
ds
sbb
sub
mov
fidivl
push
mov
mov
outsb
push
stc
add
aas
fildl
leave
fadd
and
fbstp
jb
dec
decb
jae
sti
std
mov
cmpsb
cltd
and
dec
fldcw
mov
int
ficoml
adc
pop
mov
jae
popa
jae
cmp
negb
and
cmpb
xchg
lret
ds
call
out
mov
push
test
iret
repnz
imul
mov
int
xadd
and
jecxz
in
loopne
inc
mov
int
int
lock
cltd
cmp
out
daa
xor
jmp
lahf
enter
xchg
mov
into
lret
adc
pop
pop
and
outsb
outsb
cmp
jb
mov
daa
divl
outsb
outsb
outsl
adc
inc
outsb
push
daa
sbb
insb
adc
aaa
mov
pop
fwait
mov
incb
push
pop
jbe
in
clc
fnstcw
push
pop
out
sahf
outsb
decb
mov
cs
and
mov
cmc
fyl2x
mov
daa
and
jmp
loope
ret
data16
aad
push
lods
les
fidivrl
mov
sahf
xor
imul
or
fsubl
mov
push
cltd
dec
cmc
cli
push
psllw
cmp
aas
sub
cmp
inc
pop
sti
aaa
sub
cld
add
nop
mov
rcll
dec
jl
imul
xchg
inc
fmul
add
imul
arpl
lahf
int
mov
in
adc
pop
dec
fisubrl
out
shrl
outsb
xor
push
add
cwtl
mov
out
out
dec
mov
out
dec
iret
out
mov
lcall
mov
cmp
pop
shrb
cwtl
iret
out
adc
adc
pop
inc
sub
insb
lea
jmp
in
cmpsb
xor
movsb
incb
xor
cmp
or
iret
mov
outsb
xor
pop
iret
out
sti
fwait
xor
sbb
icebp
jno
push
sbb
movsl
mov
aas
fildl
notl
xchg
pop
rcl
and
addr16
std
inc
cmpl
stos
dec
add
adcl
cmp
hlt
sahf
enter
popa
ss
js
outsb
push
inc
lods
and
dec
clc
fstps
sbb
orb
push
and
push
out
cmp
shl
sbbb
push
sbb
mov
stos
lods
xor
into
out
out
xchg
aaa
jnp
mov
mov
pop
mov
sahf
mov
fmuls
ret
xor
addl
int
in
mov
adc
lahf
int
int
ja
loop
aas
scas
jnp
xor
outsb
movsb
inc
dec
add
cli
gs
jnp
jae
sti
fsubl
dec
xor
insb
mov
dec
ret
loop
jae
pop
aam
subb
mov
inc
mov
rclb
cmp
dec
dec
push
outsb
outsb
outsb
inc
fldl
xor
decl
jge
outsb
or
and
iret
out
jbe
out
subb
xor
int
sub
loop
les
aaa
aaa
aaa
aaa
push
out
inc
mov
lock
orl
daa
adc
jp
jae
cwtl
pop
test
jle
std
insb
jb
mov
fisubs
ret
outsb
scas
arpl
xorl
sbb
xchg
pop
add
mov
repnz
cld
mov
pop
sahf
movsb
mov
repz
js
xchg
in
leave
es
add
fdiv
mov
mov
movsl
mov
aas
hlt
mov
push
or
stos
dec
pop
or
int
sub
in
sbb
in
push
cmp
xor
pop
in
sbb
or
pop
mov
push
xchg
or
iret
in
dec
ljmp
loopne
mov
mov
cld
lret
cmp
subl
les
insb
sbb
inc
out
out
inc
hlt
cmc
inc
xchg
xor
dec
loope
std
cs
add
sbb
xchg
in
fisttpl
inc
xor
xchg
sbb
dec
into
fbld
pop
lahf
fwait
fwait
fwait
int3
cld
ss
insl
gs
into
int
adc
dec
fcmovnb
xchg
jp
adc
pop
mov
mov
fwait
fwait
fwait
push
mov
inc
inc
inc
test
lock
cmp
popa
ljmp
and
loop
aam
stc
or
dec
cmp
sbb
adc
inc
repz
dec
jge
loopne
icebp
es
jmp
mov
lock
pop
xchg
ds
or
out
jae
jae
iret
xchg
push
pop
sbb
jmp
jge
xchg
or
mov
cmp
popf
pop
loop
mov
pop
jns
into
sub
and
rcr
mov
jbe
lcall
fistpl
test
inc
out
jp
mov
mov
ljmp
add
shl
cmpb
fucomi
dec
dec
or
jno
and
int
or
lock
dec
push
or
fsubrl
jbe
dec
sarl
fcompl
aas
mov
push
scas
cli
fldcw
mov
scas
insb
pushf
jg
jmp
in
negb
insb
addr16
mov
rorb
pop
or
imul
cmpsl
mov
aad
mov
out
inc
jp
cmp
jl
mov
orb
mov
out
out
adc
shl
mov
pushf
iret
jae
lds
rorb
push
jbe
pop
adcb
cltd
mov
outsb
xlat
mov
rcll
out
out
cli
sub
dec
loop
clc
adc
xor
xlat
out
or
sub
push
cmp
xchg
xchg
enter
jae
mov
push
or
adcl
lock
sbb
dec
cld
inc
data16
mov
xchg
int
or
jle
xchg
jne
ss
iret
pop
pop
mov
in
addr16
mov
pusha
insb
cmp
cmp
in
in
mov
jbe
fsubrl
les
inc
rcr
lret
rcr
cli
aad
sbb
mov
ja
iret
int
in
out
lea
popa
mov
xor
sbb
cmp
jl
push
pusha
push
out
das
sahf
out
jmp
outsb
lahf
pop
outsl
pop
pop
mov
std
jbe
mov
xchg
cmp
outsb
outsb
mov
mov
sbb
fwait
dec
sub
test
lods
mov
out
sub
es
ret
loop
mov
out
out
mov
cli
clc
loope
inc
cmp
jmp
xor
mov
jnp
jecxz
add
pushf
in
mov
inc
add
add
jge
pop
mov
int
cwtl
push
test
and
or
scas
pop
pop
out
xchg
lcall
loop
int3
es
les
pop
imul
addr16
jno
cmp
cli
adc
cmp
or
push
loopne
icebp
jbe
sub
or
lret
ds
xor
sbb
int
sbb
andl
sbb
and
mov
popa
adc
faddl
dec
xchg
jo
ds
insb
dec
jle
test
jmp
fistpll
adc
insb
or
out
or
outsb
sahf
loopne
push
aaa
jl
fdivrl
inc
add
leave
out
mov
rorl
cmpsb
mov
scas
cli
jbe
clc
adc
inc
sub
loop
mov
outsb
fs
mov
mov
out
out
and
jg
int3
and
iret
int
int
les
push
daa
sbb
and
pop
jbe
fmull
mov
push
sub
sub
fcompl
outsb
sbb
cs
pop
pop
imul
addr16
mov
mov
pop
cld
das
pop
pop
clc
negb
cli
lods
dec
cmp
negb
jge
out
and
push
pushf
sbb
dec
pop
ljmp
mov
and
into
push
repnz
orb
xchg
nop
cmc
sti
stos
cltd
mov
fwait
and
test
mov
pusha
sub
out
mov
in
lret
hlt
std
sahf
fldt
xchg
cmp
pusha
insb
xor
call
mov
dec
mov
iret
in
lods
rcl
sbb
fwait
fwait
sbb
xor
mov
jbe
jl
sahf
pop
test
ficompl
sahf
inc
cmpsl
xchg
xchg
icebp
hlt
loopne
aam
dec
xor
aaa
hlt
inc
fdivrl
aaa
mov
adc
jmp
jae
fnstcw
insb
imul
cmp
jno
mov
mov
fs
xchg
lock
inc
mov
pop
adc
push
out
push
loopne
cmc
inc
jp
mov
mov
lock
pop
jmp
xor
or
push
std
inc
mov
inc
add
jmp
fldl
mov
pop
cld
mov
and
ljmp
xchg
sub
in
xchg
in
addr16
jl
sub
insb
push
loopne
mov
dec
jg
iret
out
pusha
mov
xlat
dec
arpl
mov
lahf
int
sub
sub
xchg
sbb
xchg
je
aad
mov
cmp
mov
mov
mov
mov
outsb
pop
int3
test
adc
push
or
pushl
fwait
xchg
outsb
outsb
lock
adc
add
inc
ffreep
sti
insb
lret
xor
sub
and
int
xor
pop
inc
loopne
inc
aam
lds
push
ret
jbe
mov
test
rorb
jmp
mov
inc
mov
mov
mov
jnp
test
sbb
sub
push
sub
stos
fsubr
xor
cmpsb
jae
ficoml
aaa
aaa
mov
cltd
dec
and
mov
adc
aaa
aaa
push
out
nop
lods
fdivs
add
jmp
test
mov
rclb
push
ss
jne
cmc
fdiv
cmp
sbb
pop
xor
scas
out
adcl
es
adc
mov
out
sbb
loopne
and
cld
lock
mov
test
addr16
jnp
leave
and
mov
int
int
adc
cmpsl
pushf
lret
gs
mov
push
iret
push
arpl
inc
cmp
icebp
mov
push
insl
mov
xor
jge
cli
fstps
sbb
cli
loopne
movsl
aad
out
out
jbe
pop
push
fcomi
jle
mov
out
out
adc
adc
or
dec
mov
cmp
xchg
mov
outsb
outsb
gs
cs
gs
outsl
bound
repz
mov
loope
lods
sbb
ret
adc
or
fwait
fwait
fwait
push
arpl
ljmp
fwait
fwait
push
inc
mov
xor
cli
int
int
test
mov
sbb
outsb
aaa
aaa
aaa
mov
out
inc
out
push
les
mov
and
dec
arpl
imul
and
jae
sahf
add
and
jbe
lahf
jmp
jo
mov
loopne
lret
sbb
jge
popa
pusha
inc
jge
push
sbb
int
divb
and
addl
daa
push
lahf
das
xchg
fs
leave
push
pusha
mov
xchg
and
andl
bound
or
dec
insl
out
cmp
mov
jecxz
into
sbb
xor
loopne
jne
cs
or
push
cli
leave
xor
mov
and
jp
ss
and
outsb
vprotd
xor
push
idiv
insb
outsb
sti
pushf
divb
cmp
push
xchg
cmpsl
test
out
out
lock
cmpsb
daa
jmp
xor
jg
push
iret
out
xlat
nop
mul
out
sub
bound
loop
xchg
scas
fidivrs
mov
cli
test
inc
aad
push
repnz
jne
jmp
fwait
dec
repnz
jg
dec
rcrb
and
fwait
aaa
lock
mov
test
and
fwait
fwait
fwait
and
sub
jb
inc
pushf
fwait
pop
cmp
push
xchg
cmp
ret
push
or
mov
push
and
mov
ljmp
cmpl
mov
test
cmp
loop
loopne
in
cmpsb
ljmp
call
repnz
fcompl
clc
fisubrs
loopne
jbe
and
fwait
fwait
fwait
and
push
lea
or
adc
dec
clc
sbb
sbb
adc
sbb
ljmp
mov
stos
mov
mov
scas
adcb
fdivl
mov
push
mov
fadd
pop
lds
dec
rorl
js
fmul
leave
je
mov
flds
sbb
outsb
outsb
outsb
outsb
into
sbb
pop
roll
outsb
outsb
outsb
jecxz
loope
out
in
fsubr
ret
outsb
outsb
outsb
outsb
imull
cmc
and
cmp
cmp
push
std
or
cld
insb
outsb
sti
adc
in
add
lcall
pop
cmc
fcompl
mov
dec
std
sbb
mov
sbb
repz
lds
mov
cmpsl
cmc
stos
sub
das
xorl
fwait
fwait
fwait
fwait
xor
popa
aaa
jnp
jge
inc
cmp
fwait
aas
push
inc
and
inc
dec
dec
dec
add
dec
jns
dec
arpl
hlt
lock
popf
mov
push
mov
or
xchg
mov
int
int
mov
nop
aad
das
xchg
and
push
je
pushf
adc
std
insb
outsb
or
bound
lea
insb
in
outsb
mov
pop
jl
and
mov
imul
aaa
aaa
aaa
cmp
cmp
sub
sub
fwait
stos
jle
add
sbb
cs
and
cmp
std
and
mov
pop
cmc
push
sub
pop
lret
push
push
int
neg
fcoml
jecxz
cmc
dec
lgs
pusha
sbb
sbb
xor
outsb
outsb
dec
bound
imul
push
push
push
jl
je
scas
jb
jo
jle
int
or
mov
scas
cmp
pop
adc
fcmovne
mov
xchg
mov
xchg
dec
xor
pushf
push
lahf
add
pushf
cwtl
push
mov
mov
push
mov
ret
out
sti
fcoml
or
bound
adc
in
jae
js
xor
dec
mov
mov
mov
in
mov
push
fs
cmpsb
jg
sbb
filds
out
xor
sub
xchg
mov
mov
ss
dec
xchg
push
ret
jnp
sub
xor
dec
call
mov
fildl
mov
inc
pop
scas
xchg
pop
popf
addr16
push
cs
fcompl
inc
and
repnz
leave
pop
or
test
push
add
push
cltd
movsl
dec
jo
add
mov
orb
sahf
push
roll
lea
lock
in
or
cmc
mov
cmpsl
mov
popf
add
sbb
adc
and
jbe
xlat
cmp
jae
jae
out
push
ljmp
je
dec
int
int
movsl
aaa
rclb
dec
mov
fwait
xchg
int
idivb
mov
mov
inc
xor
jb
mov
mov
scas
mov
pop
shl
inc
pop
cmc
stos
push
enter
and
dec
into
jl
inc
inc
cmp
mov
jno
inc
call
dec
mov
bound
mov
int
int
sarb
xlat
xchg
or
xchg
popf
xchg
iret
xchg
xchg
mov
mov
adc
jl
jge
mov
gs
addr16
js
and
fdivrl
xchg
int
neg
add
mov
sbb
lock
int
in
mov
loopne
fildl
int
ss
or
add
sbb
push
mov
cmpsl
or
xor
into
add
cmp
lahf
es
sahf
lock
mov
mov
and
clc
adc
out
out
std
sbb
addb
iret
out
sti
mov
mov
cmp
out
xor
mov
cmp
iret
out
addb
pop
mov
xchg
pop
pop
add
sub
je
stc
jbe
int
sub
adc
or
push
out
int
fs
and
cs
pcmpeqb
daa
out
adc
aam
jnp
icebp
fstps
clc
clc
add
fisttps
push
out
fbld
ds
bound
out
addr16
jne
dec
mov
xchg
mov
testl
fisubl
rcrb
jae
js
pusha
pop
fst
jns
jg
inc
fildl
addr16
dec
insl
jecxz
andl
mull
lods
out
jae
and
add
mov
addr16
ljmp
inc
clc
fdivrl
mov
fidivl
cmp
int3
mov
jecxz
add
fdivrl
mov
jmp
and
fsubrl
aad
into
sti
in
lock
cmc
xchg
xchg
cmp
out
idivb
mov
outsb
mov
out
xor
or
mov
and
push
inc
pop
mov
pop
or
pop
mov
xor
ja
or
stos
and
iret
sub
sub
das
sub
add
pushf
scas
js
outsb
aas
ret
out
xchg
repnz
fsubrl
neg
sahf
daa
mov
fisubrl
aas
fistl
cwtl
pop
cmpsb
and
sub
push
lods
nop
jl
jge
ljmp
shll
dec
test
out
push
negl
jl
mov
dec
fmull
fbld
jle
mov
popa
les
sarb
jecxz
lahf
cmpsb
or
xchg
jns
aaa
test
xchg
push
loopne
bnd
mov
repz
les
sti
xor
mov
pop
rol
mov
fdivrl
inc
mull
mov
mov
push
inc
mov
out
mov
pop
aaa
pop
pop
imul
stc
lret
js
jl
aaa
aaa
aaa
cmpsl
or
stos
pop
int3
out
xor
sti
sbb
aaa
push
test
jo
lcall
and
cli
mov
mov
jae
jge
dec
mov
lret
test
jae
jae
push
mov
fwait
ficoml
int
in
sub
sbb
sub
add
and
fwait
sub
sti
popa
repz
pop
sub
inc
cli
or
or
mov
in
cmp
xor
pusha
in
jmp
push
icebp
out
pop
out
outsb
jle
aaa
iret
and
into
add
mov
jge
repnz
popa
js
es
sub
mov
or
test
fwait
fwait
popa
xor
je
pop
adc
xlat
enter
jbe
fstpt
jge
jno
push
xor
insb
outsb
outsb
outsb
in
xchg
inc
pop
enter
push
mov
ss
popa
into
out
rol
and
xchg
aaa
jae
lods
insl
and
pop
or
std
mov
test
stc
in
push
in
push
iret
out
hlt
xor
movsl
mov
push
scas
push
int
cld
aam
pop
jle
lahf
in
adc
sahf
cli
pop
xor
hlt
test
loope
fcmovnu
faddl
mov
sub
mov
fstps
dec
mov
inc
frstor
mov
inc
cmp
adc
sbb
add
sahf
inc
scas
jecxz
xor
jg
int3
in
out
jae
mov
lea
xchg
inc
gs
xchg
pop
rcrb
sub
jbe
test
out
mov
xchg
out
scas
mov
sub
int
dec
xchg
and
mov
fwait
sub
cmp
iret
jbe
es
ljmp
out
sbb
jp
fwait
fwait
or
lods
xchg
les
faddl
add
int3
lods
ret
out
and
inc
cli
iret
loop
iret
inc
outsb
outsb
aaa
aas
and
es
xchg
outsb
outsb
outsb
outsb
inc
dec
fistpl
mov
daa
movsb
jge
jns
jns
lcall
xchg
out
mov
jae
ret
mov
dec
jb
dec
fcoml
jmp
and
xchg
sti
ds
xchg
pop
or
sahf
ret
pushf
pop
sbb
jae
xor
into
popa
dec
out
fidivrl
xor
xor
mov
jmp
mov
cmp
test
rcr
bound
sbb
in
add
or
adc
dec
jecxz
pop
xchg
dec
and
cmp
cmpsl
push
inc
insb
xchg
fcmovnb
add
ds
into
dec
imul
sbb
pop
inc
std
in
cli
mov
add
scas
inc
shlb
test
cmpb
push
arpl
jbe
scas
cmp
outsb
outsb
out
push
repz
mov
rcl
aaa
ja
outsb
adc
and
jmp
cmc
xor
aaa
sbb
sbb
out
sar
push
pop
mov
inc
jae
pusha
outsb
aas
fcmovne
movl
mov
outsb
outsb
outsb
outsb
cli
push
jne
inc
fcoml
and
call
dec
and
imul
or
add
cwtl
fs
jbe
cmc
ss
mov
mov
dec
sbb
test
push
sbb
xor
ret
jp
add
imul
gs
int
pop
mov
loop
jl
jns
shlb
int
int
xlat
xor
adc
sbb
insb
sbb
push
jbe
jne
mov
loop
sbbb
xchg
lret
aaa
aaa
subl
aad
jo
idivb
push
xor
cltd
sbb
insb
sbb
sub
fdivrl
push
cmc
mov
mov
mov
jle
add
xchg
cmc
and
pop
add
lahf
push
sub
pop
add
mov
fsubrl
aam
lods
mov
fisttpl
test
decl
lcall
std
sahf
pop
pop
mov
iret
test
dec
imul
mov
jae
out
dec
pop
pushf
into
sbb
out
out
popf
fs
in
cwtl
or
jl
aas
inc
int3
push
ljmp
gs
jbe
or
stos
xor
sbb
jae
cmp
fcompl
xchg
in
arpl
mov
in
rcrl
push
mov
inc
mov
insl
das
shl
out
negb
mov
jnp
shll
out
rolb
push
fcoml
fisubrl
in
scas
mov
bound
mov
fdivl
adc
push
push
imul
pop
std
pop
addr16
push
les
mov
push
popf
outsb
pop
test
xchg
jbe
xor
mov
mov
sub
popf
cmp
icebp
pop
in
stos
xlat
in
inc
xor
mov
imul
push
mov
mov
mov
pushf
xchg
push
fwait
addr16
dec
cmpsb
in
jp
inc
mull
shl
adc
aaa
lods
insb
inc
sahf
lahf
sbb
divb
cmpsb
or
and
rcrb
gs
out
out
sub
jl
cwtl
push
out
out
push
push
jecxz
sub
std
imul
mov
add
clc
aad
ror
out
and
and
call
sti
inc
in
test
and
aaa
aaa
mov
in
cmp
cld
xor
fsubr
clc
pop
jae
insl
js
shrl
pop
js
lods
pop
scas
mov
sub
sub
sti
add
sub
in
ja
pop
hlt
shlb
sahf
sbbb
setg
mov
jl
iret
scas
xchg
push
push
sbb
mov
push
lret
xchg
out
divb
or
clc
or
mov
nop
int3
dec
adc
out
rcll
aam
mov
or
inc
mov
fstpl
out
or
pop
imul
jne
into
sbb
inc
icebp
fdiv
mov
mov
cmc
and
mov
fisttpl
sub
push
xlat
fcompl
adc
hlt
inc
ficoml
dec
mov
mov
aam
or
iret
cmpsb
iret
int
jo
sahf
pop
cmp
xor
scas
stc
aaa
mov
mov
pop
or
divb
mov
jg
arpl
in
jae
jae
out
loop
or
adc
setbe
mov
jae
jae
jnp
mov
in
xchg
mov
xorl
fwait
adc
dec
dec
out
idiv
imul
std
inc
stos
rcrb
jae
jae
dec
jl
mov
push
lret
mov
lahf
or
test
sub
or
clc
ljmp
lcall
or
fadd
cmc
pop
in
stos
insb
into
pop
add
mov
mov
loope
call
nop
xor
rorl
and
push
cmpl
jae
add
ss
out
daa
jle
mov
idiv
movsl
lcall
jp
fisubrs
push
sub
scas
push
pop
push
fbld
mov
jno
add
mov
call
rcrb
pop
cmc
mov
pop
inc
and
mov
xlat
scas
pushf
push
aas
pop
outsb
outsb
outsb
outsb
xor
cmp
cmp
jg
out
test
pminsw
jno
repz
cmpb
and
scas
inc
das
out
or
call
pop
push
inc
mov
mov
add
adc
jle
int
decb
shlb
rorb
xlat
push
aas
fwait
or
push
sub
aaa
aaa
mov
mov
jo
jl
dec
data16
mov
js
aaa
aaa
insl
mov
negb
mov
popa
fistl
or
mov
sub
sub
shll
aad
mov
cmpsb
mov
mov
mov
out
mov
cmp
ffree
addr16
shlb
fimull
shl
mov
loopne
dec
fmuls
xor
dec
das
mov
cmp
xchg
inc
loope
or
sub
aaa
aaa
cld
dec
arpl
divb
adc
pop
lods
dec
sbb
aaa
aaa
aaa
aaa
movsl
test
xchg
mov
aaa
aaa
or
addr16
icebp
xchg
add
sti
subl
data16
je
push
xchg
es
out
jae
jbe
xorl
mov
push
add
ret
mov
push
rcl
movsl
lock
xchg
mov
inc
insb
adc
into
insl
dec
mov
scas
mov
sbb
push
jle
iret
int
in
push
dec
jne
fs
bound
das
xor
xor
dec
push
or
pop
scas
mov
nop
mov
jae
inc
inc
stc
lcall
sub
jae
bound
xor
mov
jae
jae
mov
incl
cld
addr16
mov
add
ret
cmp
and
cmp
cmp
cmp
gs
std
mov
incb
mov
in
into
sbb
mov
in
aaa
lods
pop
and
cmp
push
mov
mov
les
sub
hlt
movsb
nop
xor
call
jmp
call
xor
int
fildll
stos
shll
sahf
jns
mov
sahf
push
imul
outsb
out
clc
cs
xlat
dec
dec
fcoml
xor
outsb
enter
mov
mul
mov
adc
out
out
inc
leave
test
cs
iret
pop
push
pop
arpl
mov
and
xor
cmp
add
subb
xchg
fwait
fwait
fwait
mov
mov
pop
sub
int
jp
lret
push
into
push
ficoml
in
or
outsb
and
jle
mov
push
jno
add
push
jmp
fdiv
adc
call
aaa
sbb
divb
imul
fs
in
jl
out
dec
jb
mov
lds
outsb
outsb
outsb
aas
clc
adc
test
jmp
mov
push
inc
ret
sbb
outsb
outsb
cli
or
into
inc
jne
popa
fmuls
aaa
aaa
cld
insb
push
mov
in
in
repz
mov
mov
call
jl
out
and
sub
imul
jb
or
mov
flds
xchg
pop
out
mov
aam
or
out
dec
aad
jnp
fwait
push
add
movsl
inc
pop
mov
ss
ja
push
lret
sti
mov
and
shll
pop
fisubrl
ficoml
jno
les
movsl
xchg
pop
pop
sub
adc
inc
les
je
cld
iret
in
cmp
sub
jbe
xchg
pushf
loope
iret
out
fnstenv
xchg
push
std
dec
jmp
push
ja
cmp
dec
inc
sbb
insb
pop
icebp
mov
mov
imul
xlat
sbb
push
clc
f2xm1
lds
bound
int
int
mov
fbstp
cmp
add
push
add
xchg
adcl
push
cltd
pop
jns
scas
push
test
or
std
neg
fdiv
addr16
test
xchg
cwtl
pop
push
clc
lock
inc
jge
sub
lock
sarb
test
adc
enter
mov
fcmovnb
aas
add
jp
cli
adc
jmp
mov
out
loope
imul
test
aam
mov
push
jp
or
mov
lods
xor
insl
test
fcomps
jnp
or
xchg
mov
sahf
add
pop
mov
xlat
inc
test
in
dec
jmp
jb
hlt
dec
xor
dec
mov
mov
test
hlt
pop
addr16
jae
pop
jne
jns
push
cmp
incb
mov
in
rcrl
sbb
jbe
sub
xor
sti
ds
pop
in
scas
stc
int
jb
adc
mov
push
js
jae
popf
xchg
outsb
cmpxchg
clc
xor
jecxz
adc
enter
add
sar
mov
iret
idivb
cmp
pop
dec
mov
outsb
xchg
orb
or
mov
xchg
dec
mov
mov
mov
out
insl
jo
cmp
cmp
jbe
cmp
outsb
outsb
outsb
outsb
test
aaa
jns
popa
mov
test
ss
insb
test
sarb
cmp
inc
cli
dec
js
fstpl
aaa
aaa
mov
pop
mov
outsl
sub
and
ja
adc
ss
pop
and
lods
outsb
shrl
scas
clc
test
mov
mov
popa
lahf
mov
clts
pop
imul
pop
aas
hlt
icebp
mov
roll
cmpsb
jp
xor
mov
into
je
push
jecxz
mov
movsb
call
xchg
sbb
cmc
jbe
bound
into
lea
cmp
cmp
xorb
movsb
pop
pop
aaa
sahf
fwait
fwait
ljmp
lahf
and
int
in
cmp
add
mov
inc
leave
psubq
mov
mov
xor
bound
int
mov
sbb
fcoms
iret
js
and
out
mov
xchg
fisubrs
imul
iret
push
stos
lcall
mov
popa
or
in
cmc
push
in
mov
dec
sub
insb
outsl
pop
dec
add
mov
in
cld
inc
or
jae
cmp
or
push
mov
mov
sarb
stos
xor
jnp
inc
add
js
cmp
sahf
add
pop
adc
andl
iret
int
mov
lods
pop
sti
fmull
fstpt
adc
add
inc
gs
out
bnd
aas
and
cmp
cli
fwait
push
push
stc
mov
jecxz
jno
shrl
cli
in
sub
xchg
bound
je
insb
mov
pop
fnstcw
cmp
jl
fcmovnb
xchg
lods
mov
ds
inc
pop
mov
xor
jecxz
sti
das
fdivrl
and
xor
mov
addr16
cmc
insb
insb
les
test
or
sti
xor
mov
mov
lock
mov
push
push
mov
mov
sub
add
mov
mov
cmp
sub
lcall
fldl
scas
lds
mov
pop
push
lret
mulb
jbe
adc
pop
jmp
pushf
pushl
jne
pop
int
rcrl
pop
out
push
sub
aaa
mov
int
int
mov
mov
cwtl
jmp
sti
fnstcw
aaa
push
cli
mov
mov
cwtl
mov
jae
pop
das
dec
testl
xchg
je
fwait
fwait
fwait
stos
not
adc
add
daa
pop
sub
fwait
out
repnz
sarb
dec
pop
icebp
mov
test
in
mov
add
pushf
pop
push
dec
pop
mov
jnp
addb
push
mov
jp
nop
mov
test
in
mov
cld
hlt
pusha
cmp
lret
or
jl
fnstenv
push
lock
js
lcall
mov
into
adc
xchg
loop
sbb
dec
inc
or
cmc
mov
mov
xchg
out
lret
outsb
outsb
xchg
xchg
test
cmp
ds
ror
fildl
mov
test
and
fwait
fwait
fwait
mov
enter
mov
fwait
fwait
inc
xchg
cwtl
js
push
pop
pop
mov
outsb
lahf
or
xor
push
xor
mov
cmpsl
test
stos
in
inc
xor
das
and
pushf
jle
fwait
sub
push
cld
out
mov
jb
shl
cmp
push
fimuls
sbb
stos
jl
mov
push
xchg
fildl
jmp
pop
sahf
bound
aas
fwait
fwait
dec
test
jmp
je
insb
loope
adc
fwait
fwait
fwait
fwait
in
stc
mov
inc
outsl
ret
js
aas
fwait
mov
outsb
fisttpl
jl
pop
idivb
add
lahf
test
scas
xchg
or
movsb
inc
or
iret
les
and
mov
pop
sahf
adc
jnp
rolb
mov
or
push
negb
movsl
push
dec
lret
inc
mov
mov
inc
negb
decl
jle
add
bound
scas
clc
fcompl
sbb
pushf
mov
fs
outsb
outsb
outsb
outsb
push
or
push
jge
leave
lock
pop
add
cli
insb
outsb
outsb
push
xlat
outsl
jae
movsb
popf
ljmp
shrb
adc
fildl
fbld
mov
jo
push
pop
in
pop
pop
out
shlb
jae
ljmp
in
call
jae
insb
loopne
fmuls
jae
jno
dec
fdivrl
cwtl
jo
adc
inc
mov
fucomip
neg
fdivrl
popa
sarl
adc
data16
sub
ficompl
mov
lcall
sbb
or
int
and
xor
sbb
int
sub
or
es
int
or
arpl
daa
sub
rclb
or
lret
add
repnz
ret
sub
out
mov
xor
ds
push
pop
jge
xchg
mov
pop
xor
sbb
cwtl
test
call
add
out
xor
clc
fs
inc
and
add
mov
and
rcll
pop
aas
pop
rcl
add
mov
sti
sub
stos
cmp
mov
pop
lods
dec
sbb
je
xchg
cmp
pushl
jae
pusha
fistl
pop
push
int3
mov
mov
xor
mov
pop
call
xor
js
test
in
mov
leave
sbb
test
loopne
imul
stos
push
adc
mov
test
sahf
inc
pushw
mov
cmp
adc
cwtl
push
fwait
sti
cmp
and
stos
mov
daa
push
jne
inc
mov
xor
incl
xor
in
jbe
pop
xchg
add
mov
fisttpll
inc
or
scas
roll
lcall
cmpsl
into
insl
rcrl
add
gs
add
mov
mov
jns
cli
jbe
pop
mov
sub
push
mov
roll
ficomps
lcall
sub
add
push
sbb
flds
inc
scas
pop
cmpsb
adc
decl
fists
cmp
cmpsl
outsb
iret
imul
push
call
stc
jle
push
xchg
xchg
or
xchg
jnp
push
adc
mov
stos
pusha
ds
inc
cltd
push
mov
mov
fisubrs
lock
jge
popa
pop
push
xchg
jle
push
test
lcall
in
dec
push
push
pop
or
fisubl
xchg
sub
inc
or
scas
rorl
lcall
nop
jae
dec
iret
and
int
movsl
mov
inc
or
mov
jae
lock
jne
decl
xchg
xorl
adc
fldcw
inc
mov
push
sbb
scas
xchg
lcall
pop
xchg
or
mov
sub
cmc
jp
fs
sbb
call
rcrl
fwait
popa
fidivrl
jae
adc
stos
mov
jg
mov
pop
or
push
rorl
mov
push
jecxz
fwait
pop
jns
dec
sti
sub
mov
cmp
mov
xor
ljmp
clc
mov
cmp
cmpsl
sbbb
enter
cltd
inc
andb
pop
or
push
mov
popl
scas
outsl
shll
call
pushf
mov
in
lret
icebp
bound
in
xchg
mov
jecxz
push
sbb
rcrl
xchg
jp
jmp
jle
mov
jnp
test
fs
xlat
data16
pop
movsb
scas
xchg
les
mov
das
xor
lock
call
test
xadd
scas
fmuls
xorl
test
jno
jg
xchg
push
lods
lods
mov
stos
xchg
into
je
cmpsl
mov
inc
lods
adc
sbb
out
cli
add
subl
testb
xchg
imul
addr16
cs
call
sbb
in
cmp
add
push
sbbb
mov
push
xchg
xchg
mov
mov
sub
jmp
adc
ds
out
loopne
cmpsl
cmpsb
arpl
add
stc
jbe
push
mov
mov
and
cmpsl
repnz
ja
stc
leave
jg
popa
cmp
jmp
mov
sbb
inc
mov
scas
push
sub
sbb
stc
dec
mov
push
shrl
pop
sti
or
call
fldt
xchg
pop
jo
inc
xor
xlat
push
out
jno
mov
jp
sub
les
dec
shl
sbb
mov
cli
inc
out
push
xchg
stos
sbb
decl
xchg
cld
jae
sub
cmpsb
adc
decl
jmp
push
hlt
nop
stos
lods
jb
std
mov
jecxz
jl
jg
and
mov
jle,pn
jecxz
insb
mov
icebp
ljmp
lret
aas
ds
in
out
xor
bound
int
aam
stos
cmp
mov
js
sub
pop
sbb
lea
stos
push
daa
out
fiadds
cmp
popf
jnp
lock
ljmp
mov
dec
fnstcw
push
cltd
push
mov
mov
pop
jl
lods
cltd
lcall
outsl
clc
inc
cmpsb
sbb
mov
mov
cmpsb
cmp
fucomi
sub
scas
incl
xor
in
mov
mov
pusha
sub
fadd
out
mov
xchg
add
lcall
pop
add
js
divl
data16
inc
lods
sub
decl
mov
imul
sarb
dec
cltd
mov
in
pusha
jb
xchg
shrb
and
je
sbb
incl
add
js
sbbb
jle
shrl
inc
or
mul
jae
int3
rcr
push
push
cmp
lahf
cmp
out
adc
mov
popa
pop
call
push
adc
jmp
stc
mov
daa
or
lret
aaa
xchg
jne
mov
or
andl
loop
lods
dec
pushf
stc
sub
call
xchg
icebp
repnz
dec
sub
fistps
adc
inc
cmpsl
hlt
call
js
dec
cltd
push
pushf
jp
cmp
xchg
xor
fisubrs
mulb
push
sub
int3
and
mov
int3
aam
lock
push
insl
push
mulb
rcr
pushf
push
movsl
fcomip
lcall
pop
inc
mov
arpl
sub
jp
mov
pop
hlt
dec
mov
lock
jno
and
inc
popf
push
lret
jbe
and
packssdw
aas
loopne
cli
pop
or
inc
mov
sbb
call
insl
icebp
stc
sub
xchg
scas
mov
push
add
rorl
std
jmp
jmp
in
xchg
xchg
orb
aas
mov
fdivrp
and
mov
add
movsb
out
jge
mov
add
xchg
sbb
cmpsl
ror
mov
out
sub
lods
sbb
incl
icebp
or
push
push
sub
xchg
sarl
aam
pop
addl
mov
decl
push
into
xlat
negl
les
sbb
sub
in
jp
cld
adc
test
outsl
mov
dec
fidivl
popf
mov
outsb
stos
loope
in
dec
and
jl
fidivl
dec
dec
mov
sbb
fs
jnp
mov
data16
jbe
aad
xor
mov
lcall
std
fucomi
js
and
jae
pop
jnp
xchg
mov
or
shrl
or
lcall
inc
mov
pop
jge
xor
aam
std
mov
call
outsb
lret
cltd
hlt
rcrb
mov
addr16
mov
jmp
ficompl
les
fwait
iret
movsl
pop
pusha
stc
lcall
cli
jbe
push
lahf
mov
cmpsb
std
decl
sub
xor
das
arpl
imul
mov
or
stos
dec
fdivl
push
gs
mov
push
roll
add
xor
fisttps
push
jno
dec
jbe
cltd
jne
push
gs
xor
mov
in
lea
loopne
sbb
adc
mov
movsl
pop
xor
inc
dec
jle
lods
sbb
ss
sbbl
sub
movsl
jle,pn
or
mov
push
xchg
push
enter
xchg
push
insl
cmpsl
popa
or
cmp
inc
aad
xchg
lock
adc
pop
mov
jbe
cld
hlt
mov
andl
cmp
jne
fsubr
test
call
js
push
lret
jge
mov
jne
ret
xchg
pop
daa
loopne
in
imulb
sbb
xor
dec
cmpsb
hlt
adc
sbb
ret
and
enter
or
leave
push
add
adc
rorb
mov
loopne
add
lcall
cld
in
xor
lock
dec
sar
lcall
dec
loopne
int3
adc
aas
or
lret
adc
fadds
mov
add
jno
xchg
fldenv
loop
aaa
mov
cmp
or
mov
and
dec
xor
repnz
dec
loop
add
repnz
bt
pop
jl
mov
xchg
das
loopne
jb
cmp
test
add
sbb
xchg
orb
push
shll
cmpl
arpl
sub
in
les
insb
cmp
shrl
mov
iret
cmpsb
movsl
mov
push
add
mov
idivb
es
push
popa
fstpt
les
push
or
lods
loopne
xchg
xchg
pop
push
call
jle
mov
dec
xchg
inc
inc
imul
hlt
in
push
insl
mov
or
inc
pop
hlt
push
mov
add
fwait
int
mov
rcrb
pushf
fbstp
jmp
test
inc
xchg
cmp
fimuls
out
inc
add
lock
ja
in
jge
icebp
sahf
repnz
xor
lock
sti
xor
data16
insb
cmc
push
sub
call
push
pop
es
adc
cmpsb
push
xor
dec
fs
repz
pushf
mov
in
sahf
out
clc
adc
xor
jo
mov
out
pushf
pop
lods
shlb
repnz
pop
aam
in
add
sysenter
ja
inc
insb
pop
inc
ds
inc
jo
popf
idivb
inc
adc
pusha
shr
adc
sbb
push
insl
mov
sbb
insb
xor
pop
sbb
and
ds
jb
sbb
aas
or
outsb
xchg
push
jl
push
sarb
jae
and
and
sub
testb
push
rcrb
filds
and
data16
pop
daa
leave
dec
mov
push
stos
cmpb
daa
pop
dec
shrb
lods
test
sub
xorb
fwait
adc
aas
das
mov
pusha
inc
push
and
lahf
sub
inc
jmp
int
fnstcw
inc
inc
inc
call
mov
lcall
dec
push
test
out
shrl
loopne
dec
push
dec
cs
iret
jbe
scas
dec
mov
push
push
sti
mov
jbe
push
pop
pop
push
push
push
push
mov
push
daa
mov
arpl
xor
dec
or
and
adcl
add
movsl
outsb
roll
ja
cmp
popa
jo
rcrl
fwait
sbb
push
dec
js
pop
int
push
sub
mov
aaa
xchg
or
mov
mov
fistl
xor
jnp
pop
popa
arpl
and
dec
xchg
std
fstpt
push
jae
push
dec
nopl
inc
outsl
insb
fs
pop
dec
insl
and
inc
jnp
les
add
cmp
subl
add
sbbl
cli
push
movb
push
add
add
mov
push
adc
add
jno
jg
sbb
sub
leave
imull
pop
mov
adc
adc
pop
stc
mov
mov
mov
inc
adc
mov
mov
andb
inc
cmc
in
insb
mov
ret
jbe
push
cmp
mov
pop
hlt
mov
xchg
sbb
fsubrl
adc
leave
aaa
sti
out
sbb
inc
imul
dec
xor
test
jp
sbb
in
mov
cwtl
xchg
rolb
ds
sbb
stos
add
add
jnp
push
sbb
fwait
or
inc
or
pop
and
repnz
mov
movzwl
jge
mov
inc
les
adc
jmp
int
out
xchg
dec
push
push
push
lds
cmp
or
insl
mov
rolb
adc
idivl
sbb
mov
pop
fidivl
in
dec
jne
xchg
shll
out
mov
mov
adc
xchg
int3
fsubp
mov
cmp
cld
orl
push
aam
jmp
popw
cltd
jno
jmp
imul
sti
loopne
jmp
leave
sbb
jne
inc
sub
adc
aaa
and
movswl
xchg
mov
xchg
xchg
mov
push
jecxz
sub
pop
mov
leave
inc
mov
cmpb
mov
das
pushf
gs
lahf
adc
sbb
jbe
sbb
mov
int3
mov
jb
xor
in
pop
or
shl
jecxz
xchg
push
js
xchg
dec
out
pop
call
adc
popl
jns
in
pop
adc
mov
lods
cld
or
nop
and
aam
xchg
sbb
inc
repz
xor
dec
pushf
cmp
sbbb
mov
cwtl
push
rolb
fadds
push
jns
jns
add
or
in
xchg
mov
scas
sahf
nop
popa
test
cmp
mov
rol
es
or
mov
xor
daa
jp
out
mov
mov
sbb
xor
pop
loopne
add
cmpb
push
sub
push
sub
push
das
add
pop
mov
or
dec
loopne
pop
fcmovu
ud1
mov
test
push
jl
fdivs
nop
fcoms
mov
sarb
aam
pop
aam
enter
jge
enter
rolb
cmp
dec
ror
int3
mov
enter
ds
hlt
enter
xchg
mov
inc
push
enter
sarb
xor
fimuls
out
pop
adc
xchg
imulb
bound
imul
and
add
test
loope
in
jmp
inc
mov
lea
mov
cmpsl
dec
sti
decl
test
jle
mov
call
add
not
cmp
jne
inc
cmp
decl
arpl
fimull
inc
pop
rorb
pop
jge
bt
and
add
jns
fstp
fwait
push
sbb
call
mov
call
jl
cwtl
pmulhuw
insb
call
pushf
das
in
call
or
scas
pop
pop
call
dec
jbe
dec
push
add
inc
adc
add
inc
lcall
mov
insl
bound
arpl
push
and
add
mov
dec
adc
cmp
push
push
pop
push
addr16
push
shlb
inc
adc
xor
call
repnz
and
into
movsb
cmpb
jne
xchg
sahf
out
andb
push
jo
fdivs
out
in
clc
or
or
sub
in
stc
aas
sbb
cmp
inc
pusha
sub
lods
cmp
pop
mov
inc
cld
inc
or
dec
sub
inc
fwait
test
pop
aas
pusha
xchg
pop
and
push
jb
orb
cwtl
and
leave
inc
mov
pop
rcl
and
leave
loopne
add
in
cltd
dec
adc
dec
cs
mov
inc
mov
and
cs
mov
repnz
add
pop
and
jo
push
leave
mov
jmp
add
inc
jb
aas
shlb
dec
cs
mov
mov
leave
mov
jo
adc
rcrb
or
or
xchg
xor
shrb
mov
or
xor
dec
xor
das
xor
push
int3
enter
enter
fcomp
in
fxch
loopne
jecxz
in
jmp
in
cmp
daa
pop
jns
inc
adc
add
jl
leave
pushf
or
ret
mov
adc
repnz
push
and
sbb
add
jg
lret
xchg
and
inc
mov
call
push
jle
test
out
sub
jecxz
out
jle
mov
lds
mov
jbe
imul
cmp
mov
jge
mov
dec
mov
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
jg
outsl
mov
or
push
push
int3
into
sbb
rorl
mov
push
xchg
cli
lcall
push
inc
enter
mov
inc
cmp
and
daa
lret
ljmp
mov
or
pop
inc
in
mov
mov
addr16
dec
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
pushl
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
push
mov
inc
imul
divl
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
call
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
call
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
xchg
pop
ds
cmpsb
scas
mov
jmp
mov
addl
cmp
xor
in
cmp
sahf
xchg
lcall
lock
mov
popa
mov
fsubs
addr16
repz
mov
subb
jecxz
call
pusha
les
outsb
bound
xor
and
out
fidivs
inc
jle
sbb
add
and
loopne
pop
dec
push
xor
xor
inc
inc
inc
inc
inc
fisubrl
push
add
push
or
out
inc
adc
sub
sahf
out
push
out
sahf
sbbb
mov
repz
mov
sahf
jnp
cmpsl
push
fcompl
call
fidivs
scas
push
adc
jns
out
pop
sub
out
ds
or
or
sbb
mov
jo
test
adc
out
rclb
sbb
test
sbb
dec
push
imul
sahf
cmpsl
cmp
and
sbb
and
lcall
sub
xor
scas
rorb
fisubrs
insb
sub
daa
jo
jo
je
xor
insl
mov
outsl
movsb
loope
js
into
js
push
in
in
xchg
push
das
js
fistpll
sub
jl
loopne
fimuls
sub
pop
cs
dec
jl
jl
mov
jl
jle
push
leave
xlat
movsl
icebp
int3
lea
sub
and
fisubl
dec
test
adc
push
sub
inc
sbb
mov
insb
fstpt
and
je
sbb
in
cmp
rorb
push
sbb
es
fwait
int
popf
dec
cmovg
inc
int3
push
cmp
clc
insb
ss
push
dec
push
push
inc
loope
cmp
add
cmp
cmp
push
pop
or
or
cmp
or
or
dec
out
mov
adc
dec
dec
adc
adc
in
cs
and
push
adc
mov
sbb
iret
repz
xor
xor
xor
iret
repz
ss
cmp
iret
repz
xor
dec
xor
xor
mov
xor
sahf
out
add
xor
xor
popf
out
xor
mov
dec
add
iret
repz
xor
sti
outsb
sub
cmp
mov
add
jns
out
xor
xor
bound
mov
xor
push
jo
xor
ja
mov
ss
add
mov
pushf
repnz
arpl
rorl
xor
pop
push
cmp
rep
fbstp
jo
sbb
mov
add
orb
cmp
adc
in
cmp
cmp
out
sahf
mov
inc
inc
inc
push
mov
inc
inc
jle
repnz
repz
inc
inc
inc
inc
sahf
cmpsl
bound
inc
inc
inc
and
inc
iret
repz
fiadds
inc
inc
inc
jmp
push
inc
in
sahf
out
inc
inc
inc
inc
cmp
or
inc
inc
inc
inc
and
repz
inc
inc
sahf
out
cmp
inc
inc
inc
inc
shll
add
sahf
inc
enter
inc
inc
inc
inc
inc
jns
mov
into
inc
inc
inc
lea
out
inc
inc
jecxz
sahf
cmpsl
push
inc
inc
inc
inc
inc
push
pop
in
inc
xor
push
lret
push
jns
ja
inc
jnp
jle
inc
inc
cmp
inc
out
and
pop
mov
mov
jmp
jnp
jle
inc
dec
sarl
lcall
stos
xor
js
push
shlb
inc
jnp
jle
adc
mov
xor
cs
mov
mov
ljmp
imul
pop
mov
inc
sbb
push
fisubl
ljmp
inc
or
mov
inc
cmp
or
dec
inc
pop
inc
imul
mov
cs
push
xor
inc
add
ret
push
pop
or
or
call
es
dec
mov
cwtl
push
push
push
pop
repz
rep
je
test
repz
mov
iret
repz
int3
aam
stc
cmp
repz
hlt
cld
add
out
sahf
cmpsl
or
sbb
sub
out
sahf
xor
inc
dec
push
pop
mov
insb
pop
daa
and
jmp
lret
push
adc
push
rolb
sub
inc
stos
jo
jle
xchg
xor
repz
mov
inc
ret
icebp
mov
or
sbb
ds
repz
mov
iret
repz
dec
sbbb
call
loopw
cmp
test
mov
pop
adc
lods
pop
sbb
fmull
cld
fbstp
in
adc
mov
dec
or
xchg
xor
dec
lock
xchg
scas
fmull
mov
dec
les
sub
loop
test
sub
mov
dec
repz
cmp
xchg
mov
aam
inc
aam
ss
neg
mov
jbe
testl
fidivrs
repz
add
adc
out
out
ficoms
xchg
xchg
out
out
sbb
in
sbb
jl
or
or
jg
xchg
test
hlt
fadd
cmpsb
je
es
dec
mov
cltd
cmpsb
faddl
aam
les
sub
mov
xchg
sahf
out
lret
repnz
hlt
sub
cld
mov
fdivl
js
push
addr16
sbb
out
xor
imul
cs
testl
fs
jnp
mov
cs
je
sbb
ret
inc
fbstp
mov
ja
xchg
mov
sahf
sarl
push
sbb
mov
call
cmpsb
cmp
push
loope
out
les
xchg
and
es
in
rol
pop
pop
insb
adc
idivb
je
push
test
inc
add
or
adc
mov
add
repz
fdivl
add
mov
aas
or
fs
ss
xchg
mov
pop
mov
xor
mov
xchg
sub
add
jns
ss
scas
lods
repz
gs
xor
cs
insb
cmpsb
ss
maxps
jp
add
add
lock
popa
inc
jns
add
ss
push
shl
movsl
outsl
test
add
add
adc
mov
add
mov
jo
addb
add
nop
inc
and
xchg
add
add
inc
add
ror
sti
and
inc
sbb
add
sbb
rcll
dec
out
pop
lcall
aam
pop
jae
push
sbb
sbb
mov
push
dec
dec
mov
or
push
push
add
jnp
lcall
adc
fwait
add
iret
fs
cmp
adc
insl
add
jge
sub
bound
scas
mov
dec
jbe
mov
outsb
je
bound
mov
outsb
add
jo
push
out
ffreep
mov
andl
daa
add
mov
add
in
bound
and
sbb
aaa
jne
mov
out
sbb
xchg
sub
aaa
jae
or
jb
or
sbb
sub
adc
xor
jbe
add
push
adc
add
xor
shll
aaa
mov
adc
xor
jmp
js
aaa
push
sub
mov
in
faddl
scas
cmp
add
cmp
mov
orl
jnp
pop
popa
sub
add
jb
rcll
out
lea
pop
aas
add
xor
jecxz
loope
mov
outsl
cmp
cmp
outsl
mov
and
dec
sti
mov
push
repz
dec
adc
push
gs
jmp
push
add
mov
cmpsb
in
push
outsl
inc
push
jnp
pop
pop
mov
pop
or
scas
repz
sbb
fdivp
int3
fimuls
inc
pushl
add
mov
xlat
add
add
mov
outsb
popa
jne
jb
inc
cs
sbb
bound
and
add
stos
jo
ret
dec
repz
clc
xor
mov
jne
or
out
sbb
pop
je
adc
jae
ljmp
jnp
lds
stc
out
pop
add
das
or
neg
mov
outsl
jg
sbb
sti
push
imul
dec
jo
ljmp
sbb
insb
and
xor
push
leave
jnp
and
outsl
fisubrl
imul
sub
div
popa
xor
adc
ret
push
pop
mov
jae
push
jo
mov
scas
pop
gs
mov
out
stos
pop
xorl
mov
jb
xchg
fwait
bound
das
aas
cmp
add
ret
setnp
mov
arpl
or
mov
sub
jo
insl
or
add
imul
pusha
pop
xor
stos
arpl
adc
sbb
jae
push
mov
mov
cmp
mov
and
add
pop
dec
stos
lods
and
mull
and
ret
rclb
sbb
pop
xor
and
mov
fsubp
out
push
ja
push
pop
add
js
loope
je
jo
outsl
push
mov
sbb
jnp
mov
sub
addr16
inc
add
push
xchg
or
inc
jae
insl
jnp
or
sbb
mov
or
jp
or
mov
mov
xchg
mov
out
jecxz
imul
xchg
mov
xor
mov
xlat
insl
xchg
inc
sub
sbb
fimuls
xchg
jmp
xor
shlb
shrl
mov
jbe
pusha
filds
cmp
icebp
push
push
mov
xchg
negl
rcll
mov
fsubrl
xchg
pop
lcall
ret
pop
rorb
mov
add
xchg
js
sub
inc
subb
ja
outsb
and
push
aad
mov
mov
ljmp
pusha
subl
cmpsl
shrl
lahf
add
mov
push
adc
push
add
cmpsb
mov
mov
jge
jecxz
outsl
sub
jecxz
ss
push
movhps
popa
xor
jne
sub
sub
loopne
nop
and
xor
xchg
jl
dec
mov
push
pop
adc
pop
jo
arpl
dec
or
mov
inc
sti
mov
adc
out
dec
sub
lcall
pusha
out
ret
sbb
add
jb
bound
dec
movl
add
roll
push
lcall
jne
sbb
mov
ret
rolb
mov
dec
lods
shlb
into
add
lcall
inc
sub
dec
ret
bound
fnstcw
fadd
bound
dec
out
scas
mov
xor
ds
aam
or
push
imul
lock
jmp
stos
fs
xchg
mov
jnp
in
movsb
movsb
imul
inc
daa
jecxz
mov
inc
mov
jo
test
jnp
adc
daa
test
pop
outsl
dec
push
loope
cld
pop
stos
pop
push
lods
adc
jne
and
xor
xchg
rorb
inc
pop
jle
fs
pop
jg
sub
pop
sbb
pop
inc
push
cmp
xorb
repz
add
imul
fwait
cmp
add
cltd
xchg
cwtl
sub
loopne
aam
les
mov
sbb
jp
shlb
xor
jmp
stos
push
mov
jmp
jno
dec
xchg
leave
inc
jmp
dec
inc
dec
insl
rol
fs
and
int
sbb
mov
jmp
xor
and
and
pop
in
or
push
rcrb
add
gs
imul
dec
adc
movsb
jbe
dec
xchg
arpl
insb
out
fldenv
mov
adc
jns
and
out
inc
push
jne
jb
jb
add
xor
jne
xchg
lock
sbb
mov
cmp
pushf
adcl
lods
inc
jmp
add
stos
jae
and
or
pop
aaa
push
jae
xor
fildll
out
push
outsl
dec
push
imul
aas
pop
shr
das
jae
inc
push
push
jl
push
imul
es
js
pcmpeqb
jo
or
jbe
dec
das
test
cmpsl
in
xchg
jo
xor
inc
imul
daa
loopne
pusha
jae
in
inc
mov
test
xchg
insl
dec
add
push
xchg
mov
jne
sti
andl
fisubs
pop
inc
push
adc
inc
sub
das
daa
adc
mov
dec
int3
ror
jo
pop
mov
push
imul
outsl
dec
cmp
sub
xor
inc
inc
sub
mov
aam
dec
jp
inc
sub
loopne
xor
push
pop
inc
data16
cmp
inc
inc
push
push
adc
ja
push
sbb
sbb
pop
adc
add
add
mov
pop
xor
sub
inc
shlb
gs
cmp
mov
out
push
inc
jbe
insb
push
shll
ds
pop
inc
push
xor
mov
xorb
dec
imul
sub
add
orps
jne
xchg
mov
adc
fsts
sbb
lods
popa
bound
and
test
push
adc
je
inc
sub
fildll
inc
lods
out
mov
mov
leave
push
rcrb
inc
je
bound
insl
mov
mov
aad
push
test
and
jne
and
dec
push
xor
mov
xor
dec
in
fbld
inc
cs
daa
inc
cwtl
pop
pusha
jbe
dec
lcall
jl
jo
add
lods
daa
sbb
push
xor
push
loopne
mov
sub
xor
mov
jae
cmp
lahf
call
jmp
arpl
sbb
gs
and
lods
fwait
out
and
xorl
jns
popf
push
insb
sub
iret
pushw
add
fildl
inc
adc
addr16
mov
clc
jo
or
jne
lock
dec
es
aas
mov
fists
sub
outsb
leave
mov
xchg
sub
shl
cltd
and
pop
das
mov
jp
dec
popf
sub
sub
lock
addb
out
sub
pop
daa
dec
mov
push
xchg
and
xchg
xchg
push
and
rcrb
xchg
jno
cmp
or
adc
out
jecxz
mov
adc
and
dec
clc
sub
mov
sub
cmp
ret
cmpb
or
cmp
push
jb
jecxz
negl
push
iret
movb
xchg
sub
cltd
push
rorb
push
push
repnz
mov
add
dec
add
add
orl
add
push
sarb
pop
mov
adc
ss
inc
inc
pop
add
adc
cld
xchg
je
or
adc
test
or
nop
lahf
cmp
add
insl
pop
lods
sbb
adc
add
jo
sbb
leave
addb
je
scas
lock
int
add
push
and
sbb
enter
out
loopne
clc
jbe
not
add
movsb
je
push
pushf
sbb
adc
outsb
inc
sbb
or
cs
cmp
scas
bound
add
sti
nop
jne
icebp
dec
imul
lahf
fs
test
mov
out
je
or
cmpb
cmpsb
in
add
ficoml
dec
gs
inc
repnz
cs
inc
pop
jae
dec
push
xor
outsl
dec
test
das
jecxz
or
pop
push
sub
jmp
add
inc
add
inc
xchg
add
jmp
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
inc
adc
dec
adc
add
inc
add
add
nop
adc
inc
add
add
add
add
push
add
add
add
orb
add
mov
add
add
add
addb
add
nop
adc
inc
add
add
add
or
stc
sldt
js
add
mov
sldt
enter
cld
sldt
lock
cmp
add
sbb
add
inc
add
cmp
add
push
adc
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
aad
add
add
add
add
add
add
add
add
add
add
add
add
nop
adc
inc
add
add
add
add
add
add
xor
add
cmp
add
add
add
add
add
add
add
add
add
fcomp
add
add
add
add
add
add
add
add
fiadds
add
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
add
jbe
add
add
add
nop
adc
inc
add
add
add
add
add
add
lock
add
in
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
nop
adc
inc
add
add
add
add
or
add
add
xchg
and
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
in
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
or
jo
cmp
xor
and
insl
gs
jo
imul
popa
je
outsl
outsb
and
jb
imul
xor
xor
xor
or
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outsb
fs
arpl
or
gs
outsb
fs
je
jae
gs
bound
or
cmp
jae
gs
bound
fs
je
je
or
jns
gs
xor
and
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
gs
imul
xor
xor
xor
or
jne
insb
imul
imul
and
xor
xor
xor
arpl
xor
or
popa
outsb
addr16
addr16
or
or
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
arpl
imul
and
gs
gs
gs
jb
jbe
insb
gs
or
jb
jno
gs
gs
js
arpl
imul
insb
or
and
gs
cmp
outsb
jbe
imul
or
and
inc
arpl
jae
cmp
jae
and
ds
cmp
jb
jno
gs
gs
jb
jbe
insb
gs
or
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
add
push
add
push
add
push
add
push
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
daa
push
add
add
add
daa
push
add
add
add
daa
push
add
add
add
daa
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
fs
xor
cs
insb
add
imul
insb
add
jb
fs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
jb
outsb
je
insb
addr16
add
add
addr16
popa
jb
inc
popa
outsb
imul
popa
arpl
add
push
dec
gs
jo
outsb
inc
outsb
jne
push
add
add
jb
popa
outsb
je
outsl
jo
add
add
popa
jb
gs
push
