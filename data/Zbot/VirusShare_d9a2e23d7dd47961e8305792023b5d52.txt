sti
call
in
sub
mov
mov
push
push
push
lock
call
divl
and
add
sbb
add
pop
push
inc
add
sbb
push
sti
lcall
add
add
add
les
or
or
sarb
mov
mov
push
pop
adc
cmpsb
adc
repz
fcom
or
mov
ficompl
jnp
incb
call
jo
cmp
inc
mov
rep
movl
pop
add
mov
lock
or
mov
out
mov
jns
dec
or
inc
test
je
movsbl
adc
mov
xor
mov
jge
movsl
std
negl
stc
test
je
je
bnd
jae
pop
test
or
lret
or
add
cltd
nop
inc
cld
push
ja
popa
out
jmp
ss
xchg
cmp
clc
decl
rorl
ret
int3
int3
push
push
and
push
call
xor
ret
cmp
mov
jne
sub
adc
xor
push
je
sub
jne
test
jne
inc
lds
jmp
add
jae
xor
cmpsl
xor
cmpl
ja
decl
lods
repnz
push
cmp
adc
adc
or
mov
aas
sbb
ret
push
pop
jg
mov
sbb
lock
add
lcall
bound
mov
orl
jl
xor
or
cs
jmp
sti
sub
adc
jne
pushw
push
fists
push
in
pusha
pop
push
pusha
push
outsl
mov
push
mov
ds
fsubrs
ljmp
or
cmp
out
idivb
mov
adc
and
xor
aas
enter
je
into
add
ret
adc
idiv
decl
cwtl
cmp
cmpl
mov
add
cmpl
push
inc
lret
movzwl
cmp
add
clc
loopne
add
daa
cmpl
fidivrs
mov
jle
in
lea
cmpl
loop
setne
pusha
ret
sub
add
pop
xchg
jne
loopne
rorl
adc
jge
and
push
sbb
bound
push
sub
xchg
pop
cmp
cwtl
addb
std
and
xor
xchg
or
inc
in
and
pop
or
adc
push
outsl
fldcw
or
cmp
je
push
sub
mov
cmp
jecxz
cmp
loopne,pt
inc
mov
shr
or
jne
push
xlat
gs
inc
cmpb
mov
mov
cmp
push
push
addr16
mov
sub
in
mov
mov
mov
push
push
movsl
outsb
inc
mov
jge
cmpl
pop
mov
push
js
rcrl
jle
test
adc
ret
icebp
sarl
adc
add
adc
fndisi(8087
imul
sahf
loopne
inc
repz
push
ja
test
mov
xchg
cmp
mov
mov
jnp
add
bound
cmp
inc
jo
push
shll
cwtl
jl
sbb
fst
andl
movb
lods
movl
mov
mov
adc
mov
sub
cli
add
add
cmp
jb
in
movl
in
adc
push
mov
sub
adc
shr
cmpl
iret
imul
add
lock
frstor
test
inc
jne
sbb
mov
add
nop
cld
or
mov
idiv
decb
jne
sar
dec
pop
aas
jbe
aas
pop
mov
cmp
pop
fsubrs
mov
lret
lea
pop
scas
incl
shll
pop
mov
add
sbb
sbb
dec
loopne
lret
xor
pop
add
scas
mov
dec
pop
adc
add
pop
and
xor
xor
push
mov
es
scas
pop
lock
clc
and
pop
hlt
mov
sti
out
mov
jne
and
sti
add
cmpsb
or
pop
cmp
jbe
mov
mov
fstpl
imul
andb
cmp
je
shrb
data16
cmp
mov
out
not
and
pop
dec
add
sub
jmp
lea
cltd
repnz
xor
mov
add
dec
pop
add
cmp
inc
data16
insb
push
or
hlt
into
outsl
ja
or
je
lea
mov
int3
jnp
dec
pop
or
or
adc
ret
aas
insb
pusha
mov
mov
inc
mov
push
or
cmpb
push
xchg
cmpsl
push
roll
mov
jmp
dec
in
adc
es
ljmp
mov
mov
shl
imul
add
mov
or
dec
paddsb
inc
fiaddl
loope
add
scas
jp
push
std
jge
fcos
aas
gs
push
or
por
flds
sub
dec
inc
adc
mov
sub
add
and
sti
mov
imul
adc
pop
jge
cmpsb
xor
mov
mov
shl
enter
adcb
push
lea
push
imul
mov
pop
hlt
je
mov
add
or
hlt
push
mov
das
mov
leave
fdiv
jae
test
mov
lcall
xor
pop
aad
movsb
mov
enter
adc
pop
cmp
jne
pop
push
ljmp
adc
xchg
testb
or
xor
jo
mov
adc
inc
push
stos
and
mov
dec
pop
push
cmp
pushl
fucomi
std
in
iret
push
jmp
orl
mov
incl
aad
outsl
and
push
push
fwait
or
jo
push
pushf
jno
xor
fcom
loopne
sar
mov
dec
stc
ljmp
adc
pop
mov
mov
rorb
jne
add
sti
mov
push
outsb
sahf
adc
jns
push
push
and
enter
inc
lea
mov
xor
cli
loop
ja
fsubrs
iret
shr
lea
out
stc
scas
incl
dec
clc
incl
decl
push
out
pop
ja
std
inc
inc
cld
lock
call
dec
pop
loop
aad
lret
xchg
clc
add
mov
mov
dec
out
cmp
sub
mov
sahf
inc
add
inc
mov
jg
jmp
test
pop
mov
jne
or
and
ljmp
faddp
out
add
jbe
leave
test
add
jne
jge
xlat
sub
pop
shr
add
dec
cld
jo
sbb
dec
cmp
lea
pop
and
jb
imul
test
add
repz
jo
add
stc
add
cmp
sub
xlat
mov
jbe
xchg
pop
push
mov
pop
add
inc
cmp
into
sbb
sub
adcl
aam
dec
or
mov
add
adc
and
into
add
push
pop
sub
xor
stos
sar
dec
cmp
mov
cld
scas
leave
mov
lea
loop
jg
jmp
jle
cwtl
pop
dec
sahf
cmpsl
imul
cmpsb
jns
sbb
iret
cmc
subl
and
jne
pop
rolb
xor
adc
inc
insb
xor
add
out
cld
repnz
call
sub
js
and
or
loope
lea
mov
cltd
loope
fsubrl
cld
push
sar
dec
cmp
xor
mov
movsl
pop
divb
add
outsl
rorb
inc
cmp
xor
cmp
or
orl
sub
andl
mov
aam
ja
sbb
cmp
ja
dec
in
adc
clc
mov
lods
fimull
or
mov
pushf
pop
jbe
mov
dec
add
repnz
inc
lods
push
paddd
xchg
lret
bswap
mov
insl
jo
rdmsr
cmp
lds
mov
sbbb
mov
push
add
lock
cld
rcl
xchg
inc
xor
push
cmp
lea
mov
jge
or
shr
sbb
jmp
hlt
js
stos
pop
nop
xor
shr
cld
mov
popa
das
into
hlt
cmp
jmp
dec
cmp
dec
and
or
jne
pop
popa
mov
push
adc
jb
push
jne
mov
jmp
insb
pop
in
inc
or
inc
call
add
arpl
mov
roll
imul
inc
je
mov
jecxz
xor
mov
lea
fildl
add
mov
jne
mov
cltd
add
cmp
jmp
stos
imul
into
jne
addl
and
pop
cmpl
cmpl
dec
addl
jb
andl
xor
cwtl
sub
ds
clc
std
ss
and
sbb
inc
pop
jbe
shlb
aam
add
and
addr16
add
and
loope
test
cwtl
cli
adc
mov
sub
icebp
imul
mov
jle
cmp
sbb
mov
dec
inc
dec
pop
cmp
add
mov
inc
jl
adc
in
and
xor
flds
push
pcmpeqw
in
sub
ret
and
jmp
test
mov
cmp
cltd
sub
push
xlat
int
lds
adc
clc
into
pop
lcall
jp
lea
popa
inc
mov
es
pop
popa
or
and
jo
cwtl
out
or
or
or
push
cmpsb
sub
or
out
cli
jb
mov
or
push
clc
test
je
lds
adc
lock
insl
das
pop
frstor
dec
fmull
or
adc
sbb
sbb
cmp
mov
pop
sahf
lea
adc
mov
push
rclb
test
xchg
addl
fs
out
mov
xor
xor
push
pop
mov
push
push
fs
dec
lock
jecxz
fisttpl
hlt
xor
and
cmp
pop
movl
sub
push
in
and
sbb
cmp
je
cld
pushl
add
mov
pop
pop
cwtl
jmp
adc
shr
out
js
je
mov
fdiv
or
pop
or
mov
call
repz
push
mov
ljmp
fistpl
insb
notl
push
and
lea
mov
ret
pop
and
clc
cmp
and
sub
pop
sub
add
jp
add
outsl
je
fbld
add
push
testl
add
push
mov
mov
push
dec
fwait
rcrl
mov
dec
pop
nop
mov
or
hlt
push
push
and
lret
jg
mov
push
mov
inc
sti
mov
and
insb
push
lea
loopne
push
mov
repnz
add
add
das
push
pop
inc
mov
jecxz
outsb
mov
ret
push
inc
xor
pop
inc
xor
push
add
jle
scas
aam
ja
hlt
testl
or
cwtl
mov
jae
pop
popa
ljmp
push
rcl
scas
jge
jbe
pop
pop
push
push
lea
xor
mov
shlb
not
mov
ja
jle
aas
js
ja
enter
or
jle
add
add
or
mov
js
xor
jmp
mov
andl
mov
test
ja
push
movsl
pop
sub
cmp
ficoms
mov
mov
cmp
push
fildl
sbb
ret
cld
lcall
int3
push
inc
mov
or
mov
jo
pop
xor
push
mov
sbb
fs
mov
mov
aas
push
je
call
add
imull
in
and
jle
or
popa
in
arpl
pop
xor
mov
jae
mov
movsb
stos
data16
cmp
push
testb
jo
push
jne
inc
adc
js
je
or
mov
xor
or
mov
inc
clc
repnz
shr
mov
mov
daa
add
jecxz
sbb
mov
push
adc
mov
adc
and
cmp
mov
adc
push
out
or
aad
ljmp
xchg
fbld
and
add
pop
pop
mov
add
in
or
test
add
mov
mov
push
ss
in
lds
sti
or
adc
mov
shl
cmp
mov
xor
je
jge
cmp
cs
cmp
into
cmp
cld
or
ljmp
xchg
scas
cmp
sub
pop
aas
scas
insl
jge
mov
inc
in
scas
xor
inc
push
pop
mov
push
add
push
push
pushl
or
inc
add
pop
pop
das
in
xchg
fsubrl
push
int3
push
push
push
daa
jno
xor
push
pop
add
push
sub
sub
inc
fsubs
shrb
push
pushl
inc
push
adc
loopne
sbb
jbe
jl
movsl
mov
or
pop
add
addl
popa
je
repnz
outsl
pop
jne
push
sub
pop
or
test
pop
popa
mov
mov
add
push
cmp
out
lcall
inc
add
mov
cmp
jb
lea
add
inc
movsb
jp
sbb
jae
inc
add
mov
mov
or
sti
add
sbb
stos
inc
and
std
and
lods
xchg
push
fs
xor
cmpl
icebp
pop
loop
add
aaa
mov
or
rclb
mov
cld
testb
data16
jbe
sub
or
jne
mov
in
mov
mov
cmc
ljmp
xor
daa
andl
sub
test
movsb
test
es
xchg
dec
push
mov
pop
movsb
add
rcrl
cmp
pop
notl
int3
pop
clc
test
cmp
or
or
test
test
rclb
cmp
push
mov
sub
jmp
std
negb
lret
push
cmp
ja
test
jg
shrl
test
cmp
jne
sar
sete
mov
movzbl
fincstp
sub
popl
inc
inc
jmp
push
pop
inc
bound
jne
pop
xor
push
xor
cmp
add
adc
cmp
outsb
inc
push
add
cli
add
jne
mov
add
mov
xchg
pop
fwait
push
cmp
pushf
cmp
imul
pop
test
sub
call
push
ds
cmp
pop
pop
je
push
js
push
cwtl
lret
movb
cmp
jne
ljmp
pop
sub
or
mov
mov
ds
into
ret
dec
push
and
adc
add
roll
cmp
push
mov
hlt
movl
je
push
xorl
xor
jg
push
rolb
shll
push
bound
in
aaa
fmuls
inc
or
inc
testb
or
fwait
jge
sbb
leave
mov
xor
mov
or
jne
xor
add
inc
sub
mov
mov
stc
mov
mov
and
dec
jmp
xor
sbb
inc
ret
incl
out
inc
pop
jmp
inc
inc
inc
pop
je
insl
movsb
es
jne
xchg
decb
dec
add
roll
ss
loopne
insb
test
ljmp
sti
pop
pop
incb
int3
repz
dec
outsl
aam
cmp
jle
rcrb
lods
shl
subb
into
inc
fs
wrmsr
leave
testb
sub
lcall
xlat
mov
test
pushf
add
and
out
sbb
andl
add
push
faddl
mov
mov
mov
loop
inc
mov
aas
jl
xor
cmp
pusha
je
and
fdivs
dec
mov
push
lea
test
jecxz
mov
and
pop
ret
add
mov
and
sbb
and
gs
mov
dec
push
decb
icebp
sub
cmp
mov
push
push
cmp
push
sbb
cwtl
add
imul
push
outsb
push
je
pop
jne
xlat
mov
mov
push
inc
lahf
push
rorb
stos
push
dec
and
clc
js
mov
lds
ds
fcmovnbe
jne
adc
imul
push
push
push
add
mov
fstl
sbb
or
add
jle
ljmp
push
sar
inc
push
push
adc
call
pop
mov
lcall
xor
dec
inc
testb
adc
inc
pop
mov
xor
ret
jmp
cmp
je
je
jmp
sub
fwait
push
pushf
mov
lock
je
inc
cmp
sti
push
stos
pop
jmp
div
inc
push
sbb
pusha
or
and
or
or
push
jns
mov
ds
pop
jmp
mov
push
daa
loopne
lea
push
or
cltd
pop
mov
jmp
xchg
insl
xchg
jnp
out
add
ss
aaa
sbb
orl
mov
mov
sub
repz
mov
mov
lea
jl
fdivrl
xor
fs
rclb
pop
push
addb
or
smsw
loope
sahf
mov
jmp
adc
sbb
jle
mov
shlb
dec
add
and
or
lock
cwtl
mov
test
loop
pop
sbbb
enter
or
dec
add
inc
add
ja
pop
jl
pop
andb
ds
add
mov
cs
pop
jmp
ret
mov
sub
dec
neg
sbb
push
cmc
mov
insb
incl
pop
push
int
and
pop
mov
dec
add
paddb
insl
and
jmp
or
jl
ljmp
adc
sbb
in
rorb
inc
push
push
inc
mov
mov
push
cmpl
es
push
xchg
repz
shlb
xchg
ja
fsubrl
add
aad
xchg
out
and
adc
add
cmp
push
faddl
int
push
mov
in
addl
test
dec
in
sub
sbb
subl
pushf
outsb
inc
or
sub
mov
aam
jbe
clc
incl
jl
test
jmp
sar
adc
sub
movsl
jmp
cmp
fcompl
sub
jb
loopne
add
test
das
cmp
jae
stc
sahf
sub
push
mov
inc
or
pop
sti
or
and
mov
pop
mov
mov
or
lods
cmp
mov
mov
dec
rep
push
dec
add
add
nop
inc
add
add
testl
add
clc
das
lock
out
call
mov
repz
xrelease
call
repz
lock
hlt
clc
clc
pop
dec
hlt
cmp
cld
sub
add
repz
add
sbb
jmp
pusha
add
pop
notb
inc
pop
sti
and
shll
and
in
add
cld
int3
pop
and
repnz
cld
out
mov
inc
xchg
into
lea
daa
stc
sub
xor
int3
push
lock
sbb
sbb
sbb
add
out
add
xchg
push
mov
inc
mov
out
push
add
mov
addr16
add
mov
lock
sahf
out
insb
or
push
jl
mov
scas
xor
sbb
sbb
out
sbb
adc
out
sahf
out
or
or
int
nop
add
enter
loopne
inc
sub
hlt
xor
push
add
sub
mov
mov
xchg
mov
lret
mov
lods
movsb
sbbb
pusha
out
je
lds
jo
xor
out
in
popf
inc
push
pop
je
push
adc
frstor
mov
lods
test
push
out
mov
or
or
lea
push
push
lock
inc
adc
leave
popa
xchg
testb
jl
sbb
sub
les
and
sub
out
mov
xchg
pop
mov
mov
lret
mov
push
mov
and
pushf
imulb
mov
sub
jl
jmp
lea
into
into
clc
push
test
pop
je
mov
roll
cmp
and
add
add
xor
xor
imulb
outsl
outsb
test
je
inc
cld
push
and
dec
xlat
or
js
or
add
int
jns
out
add
or
jmp
std
jmp
aad
mov
sbb
data16
aaa
jnp
mov
ljmp
in
mov
sti
fbstp
xor
divb
ret
pcmpgtd
jge
jo
or
adc
subb
sub
push
adc
push
push
mov
clts
ja
adcb
or
adc
or
jne
add
aam
jmp
lahf
popf
sbb
in
dec
jne
and
test
dec
inc
aaa
sub
in
inc
cs
ljmp
mov
mov
cwtl
aas
ljmp
cmp
pop
rdmsr
inc
notl
out
and
push
add
repnz
fsubrl
or
pop
js
jne
jbe
sbb
popf
jecxz
jns
add
shrb
out
push
or
mov
pop
adc
int3
add
in
aas
cmp
cmp
add
repnz
je
xor
xchg
rol
std
imul
pop
add
in
insb
jne
shll
cmp
shll
sub
pop
sbbl
cli
add
lods
stos
sbb
push
push
cs
sti
sub
and
ret
pop
pop
cs
je
lea
mov
mov
mov
jl
add
push
mov
push
adc
ret
popl
push
les
mov
mov
push
incb
in
push
or
push
or
aaa
adc
mov
nop
jl
adc
cli
inc
add
imul
loopne
loopne
cmp
and
and
or
ret
add
fisttps
sbb
je
add
or
fldenv
loopne
pushf
jb
cmp
jae
mov
shlb
pushl
sbb
fisubl
mov
push
xor
cmp
bound
jae
je
decl
mov
sbb
mov
cmp
jb
loop
sbb
push
mov
fdivrp
and
je
mov
xor
icebp
cmc
incl
lock
push
lea
push
loop
pop
push
faddp
xlat
xor
cmpl
les
inc
hlt
int3
je
dec
in
push
jle
testb
test
add
cmpl
shlb
ss
or
sub
or
push
pop
dec
adc
push
mov
xchg
lods
lock
jae
testb
jne
push
push
insl
push
cli
lods
cwtl
decb
jno
mov
jle
shlb
cmp
dec
lods
test
jg
push
in
or
cvtdq2ps
lret
jg
or
test
jl
dec
xchg
mov
push
lods
movb
mov
mov
sbb
jge
inc
mov
add
mov
hlt
and
test
jle
or
rorl
jp
jle
insb
push
cwtl
mov
ds
jl
sub
dec
jns
push
jge
cmp
push
inc
mov
inc
jmp
je
negb
lea
add
cld
adc
into
cli
pop
sar
inc
sub
push
mov
cmpb
daa
xor
jo
pop
mov
mov
test
xchg
cmp
jae
mov
into
add
lea
dec
inc
pop
jne
mov
adc
xchg
sub
mov
lea
mov
sbb
pop
jecxz
jns
fisttps
push
sbb
push
pop
ret
pop
les
mov
punpckhwd
mov
test
nop
jne
lock
jp
dec
testl
rorb
inc
add
cli
sbb
pop
sub
and
or
pop
mov
pop
or
cmpsl
sbb
mov
add
or
push
or
push
push
adc
stos
idivl
outsb
adc
and
push
sbb
or
mov
and
stos
add
jne
add
cld
loop
dec
pop
and
dec
pop
or
filds
mov
imul
call
fldl
jl
hlt
mov
loopne
test
and
lea
push
add
or
or
enter
neg
stc
lea
mov
and
rep
inc
mov
push
out
aam
inc
mov
daa
clc
push
insb
daa
lea
push
or
push
scas
ss
inc
and
std
xchg
sbb
push
jne
adc
jb
xor
cld
push
or
pop
mov
mov
das
fs
push
subb
mov
mov
sbb
add
call
jmp
movb
inc
btc
jb
or
adc
enter
and
adc
jp
push
cmp
and
loopne
mov
or
jmp
pop
jl
and
fildl
mov
std
lock
add
test
inc
std
sub
in
mov
or
aaa
mov
es
je
sub
push
push
movsl
rclb
in
cli
ljmp
shlb
lock
jb
cmp
add
jg
stos
incl
jge
mov
loopne
jle
push
out
cmp
aas
loope
mov
adc
stos
in
sub
push
shrb
add
aaa
ficoms
loope
mov
stos
lea
repz
sub
add
cmp
mov
fildll
mov
mov
xchg
inc
es
inc
test
pop
add
incl
add
or
jb
push
lock
pop
hlt
popf
and
mov
movsl
movsl
pushl
lds
sub
ret
inc
inc
cmpb
in
or
dec
inc
xor
inc
cmp
mov
mov
cmp
mov
push
in
push
xchg
mov
cmp
push
xor
jp
add
mov
sbb
cmp
shr
std
and
ret
pop
push
and
mov
test
je
mov
jne
call
push
adc
or
pop
jne
sbb
or
fwait
pop
popf
push
and
jo
fildll
push
insb
aas
lock
push
sarb
xchg
pushf
orb
aas
mov
aas
xchg
inc
out
sahf
out
cmp
sub
sbb
or
adc
jg
aas
cwtl
hlt
jns
jmp
aas
jg
push
repnz
clc
inc
test
jge
cmpsl
sbb
aas
pop
nop
or
xor
pop
inc
add
clc
inc
mov
inc
mov
or
out
sahf
out
mov
or
pusha
shr
inc
jg
es
loop
inc
fiadds
and
jg
add
mov
push
enter
rorb
mov
aaa
pop
add
sbbl
mov
pop
aad
movsb
dec
jo
cmp
sbb
dec
push
insl
mov
test
pop
jl
jecxz
nop
jg
push
push
push
or
dec
sahf
lcall
mov
mov
test
pop
je
mov
add
push
push
push
add
das
in
xor
xchg
jno
adc
cmp
out
stos
in
push
xchg
je
jg
mov
stc
adc
in
jne
push
sbbl
sbb
mov
adc
pop
adc
inc
enter
cmp
jmp
push
aam
sbb
inc
mov
jnp
jne
add
int3
data16
mov
mov
inc
add
push
mov
add
call
add
cmpb
cmp
pop
aas
loop
or
push
push
pop
jo
or
push
push
add
pusha
push
shrb
jno
pop
je
enter
cmp
jle
mov
cmp
cmpsb
dec
cmp
pop
inc
cmp
dec
leave
incl
sub
add
mov
iret
mov
add
push
aam
xor
adc
mov
dec
cmp
add
xchg
and
fcmovb
and
push
add
ds
xchg
lret
fsubs
lds
xchg
mov
int3
and
sarl
xor
pushf
inc
jae
cmp
dec
imul
sub
sbb
ljmp
fsubrl
ret
sbb
push
fst
loopne
dec
fs
pusha
scas
enter
adcb
in
push
add
out
push
cmp
sbb
ds
push
cwtl
or
sbb
mov
dec
fstpt
jge
scas
std
sbb
sbb
jb
sub
xor
add
adc
xorb
dec
pop
movsl
mov
push
out
fildl
roll
mov
add
jmp
pop
add
push
push
xlat
xchg
mov
cmp
je
es
in
push
mov
mov
or
loope
push
sub
mov
or
in
and
in
adc
cmp
out
lea
push
into
iret
push
decl
lock
sbb
and
in
lret
fsubl
xlat
push
sub
cld
or
sbb
mov
jmp
imul
push
dec
jne
mov
dec
imul
les
push
adc
sbbb
fadds
xor
into
mov
jmp
lea
push
push
in
add
dec
neg
sbb
push
jmp
ret
fwait
mov
ss
imul
xchg
and
daa
xchg
fcomp
lea
mov
repnz
ja
cmp
test
mov
push
jo
jp
and
mov
mov
loop
and
push
dec
pop
mov
loopne
ds
or
push
es
sub
nop
and
lock
and
sbb
mov
pop
push
aam
push
pop
repnz
mov
rolb
pop
push
push
sub
stos
pop
dec
push
and
addr16
loopne
dec
stos
add
adc
aas
sub
sbb
or
push
jmp
mov
cmp
sbbb
adc
sbb
xor
sbb
jp
shlb
cmp
je
andb
aam
cmpsl
xor
fisttpll
movsb
mov
loope
or
mov
push
out
cmpsb
dec
mov
inc
pop
push
mov
cmp
jb
neg
lcall
out
mov
shrl
icebp
je
adc
mov
divl
stos
jl
dec
ljmp
add
or
push
xchg
cmp
add
jnp
movb
dec
sarb
cmp
ss
pop
mov
add
pop
stos
pop
mov
je
int3
xchg
jp
mov
pop
rclb
movsl
inc
data16
add
xor
pop
cmp
push
push
mov
mov
shrb
sbb
mov
xchg
cmp
sbb
adc
inc
jb
aam
jo
fildll
add
adcb
loope
adc
fmul
enter
pop
lcall
pop
mov
popa
push
pop
jmp
mov
fbstp
push
mov
loopne
mov
mov
mov
jmp
sub
sbb
jg,pt
lcall
data16
add
ss
int3
jmp
mov
push
add
xorl
add
pop
aaa
push
lret
push
dec
xchg
int3
mov
adc
addl
adcb
adc
imul
mov
xchg
pop
push
adc
push
int3
inc
mov
add
jb
fstl
dec
mov
adc
xchg
pop
or
lock
je
mov
and
add
jl
mov
mov
sub
push
dec
jae
out
add
jbe
call
imul
add
cmp
mov
inc
jnp
or
mov
fadd
sar
lods
and
clc
test
je
testb
fsubr
hlt
imul
movsb
clc
jae
cmp
inc
add
outsb
cmp
and
cmp
clc
jnp
add
and
inc
push
sub
ret
dec
add
test
inc
mov
xor
lcall
xorb
or
cmp
jne
dec
in
mov
das
cmp
das
dec
push
cmp
sub
or
jne
orb
adc
sbb
jb
push
mov
idivb
push
test
icebp
sbb
inc
jo
es
cmp
mov
fmuls
xchg
or
xor
cmp
jmp
add
mov
jnp
add
inc
jmp
push
sub
pop
imulb
jo
inc
lret
adc
xchg
mov
push
jecxz
loopne
call
inc
or
sbbb
add
inc
xchg
adc
inc
in
scas
pop
add
jmp
loop
jecxz
xchg
mov
jne
nop
or
int
rclb
xorb
adc
out
push
sbb
push
push
dec
mov
add
mov
pop
jl
das
mov
aad
adc
enter
or
jne
jmp
es
or
adc
adc
add
pop
jle
pusha
push
ret
ja
loope
push
mov
jmp
mov
ljmp
inc
push
add
rorb
add
mov
sbb
push
std
add
adc
ss
mov
or
or
dec
xor
add
dec
insb
mov
jmp
push
mov
lods
pop
cmp
cmpsl
flds
mov
sahf
push
pop
ss
stc
cmp
repz
pusha
jbe
mov
cmp
cmpsl
jp
pop
ror
iret
jnp
iret
repnz
push
push
sub
cmp
repz
push
jo
xchg
stc
mov
fadds
in
add
jns
cmpsl
or
cmp
sahf
out
sahf
test
cmp
repz
push
popa
push
and
cmp
repz
add
loope
js
push
push
pop
dec
or
adc
push
dec
imul
je
jmp
push
imul
sub
and
outsb
je
insl
and
jb
jb
idivb
addr16
insl
cmp
or
push
mov
add
jo
and
pop
jne
imul
stc
outsb
outsl
ja
ds
and
data16
outsl
jbe
jb
and
mov
and
adc
arpl
and
out
push
das
arpl
jo
je
mov
jnp
mov
and
popa
adc
and
push
cmp
push
xor
lret
test
lods
insl
subps
cmp
js
jne
sbb
ds
mov
je
and
and
adc
nop
fs
cmp
insb
sbb
mov
jb
je
inc
lock
mov
outsl
push
mov
gs
and
add
test
and
push
mov
jae
lods
mov
insb
adc
out
loop
pop
mov
xor
inc
js
lods
arpl
add
jae
insl
jae
mov
add
cmp
lods
std
stc
cmpsb
or
xchg
out
mov
and
inc
out
sti
push
pusha
jbe
dec
inc
and
xchg
xor
cmp
ret
add
mov
jo
insb
inc
shlb
popa
mov
inc
andl
sub
mov
sub
loope
hlt
cs
inc
push
xor
gs
outsb
push
rcr
ret
adc
gs
mov
insl
mov
cs
shl
dec
inc
cmp
xlat
push
lods
mov
popa
xchg
jp
js
dec
mov
aaa
outsl
or
push
pop
jo
gs
hlt
imul
outsl
ss
rcll
sub
xchg
bound
sub
dec
arpl
dec
jg
mov
push
addr16
lret
or
lds
add
xor
out
outsl
jo
mov
shl
mov
arpl
clc
js
cmp
test
inc
aaa
pop
repnz
pop
xor
pop
insb
outsl
arpl
movsl
sbb
imul
pop
add
add
jno
jae
xor
cmp
out
icebp
pop
cmp
sub
ja
jns
and
cmp
and
and
pop
lods
sti
adc
push
cmp
addr16
jae
cmp
push
cmp
jno
and
xor
rcrb
lods
and
or
mov
xor
cmp
scas
cmp
push
pop
jne
inc
gs
push
mov
notl
fs
je
add
push
ss
bound
dec
jecxz
insl
js
inc
jle
dec
jo
inc
dec
push
fnstenv
cmp
pop
lea
dec
sti
cli
fidivrl
popa
addr16
outsl
js
jne
xor
movsl
add
fiaddl
add
add
dec
mov
add
cmp
orl
fadds
in
addb
in
andb
push
add
add
mov
and
add
add
fucompp
inc
adc
insl
adc
fdivs
add
pop
push
adc
shr
std
adc
pavgb
add
mov
fldl
pop
fldl
inc
stos
inc
leave
jbe
cltd
ds
dec
jl
push
addb
mov
aad
adc
add
add
inc
scas
daa
dec
and
xor
push
lcall
test
adc
push
push
inc
push
scas
add
fadds
inc
and
ja
jmp
jbe
cmp
js
inc
adc
jg
xor
je
pop
call
inc
cmpsl
xchg
popa
push
and
ret
pusha
adc
mov
push
and
and
repz
decl
adc
shll
add
or
inc
push
inc
fwait
mov
jnp
jnp
lahf
popa
ss
mov
adc
adc
int
inc
sub
aad
jns
mov
jbe
dec
pop
cmp
repz
sbb
lcall
gs
popa
push
cmp
and
xchg
and
and
adc
aas
int
cs
add
aaa
add
jg
clc
arpl
pop
aas
adcl
loopne
loopne
add
add
jle
adc
imul
and
int3
popa
repz
and
scas
mov
in
fistpll
jb
adc
test
jecxz
int
inc
testl
jbe
jle
adc
fnstenv
xchg
or
pop
arpl
add
sub
adc
aad
aaa
imul
lcall
clc
pusha
aaa
push
ja
xor
fwait
or
fwait
jo,pn
inc
xor
xorl
inc
imul
pop
dec
loop
jb
rcl
loope
mov
jbe
out
js
or
out
stc
push
cs
out
lahf
cmp
adc
inc
jb
ret
add
or
shll
push
dec
mov
repz
jp
fisubl
jbe
faddp
sti
loop
pop
es
push
mov
enter
ret
aas
dec
arpl
lahf
stos
mov
pop
divb
loope
lahf
cmpsl
sbb
rorb
xchg
shl
dec
sti
pop
fwait
cs
popa
mov
pandn
jmp
sub
push
sbb
repz
jmp
push
lods
or
dec
lcall
nop
into
sub
push
mov
xchg
adc
add
roll
test
pop
iret
shrl
jge
xor
insb
push
sbb
push
repnz
fdiv
cmp
or
add
and
clc
and
push
adc
lds
lahf
pusha
and
cmp
and
adc
adc
ja
xor
repz
mov
jbe
pop
jbe
jb
ds
cmp
jns
or
cmpsb
cmp
iret
sar
cmp
fwait
js
xor
int3
sbb
repnz
mov
aaa
into
ficompl
sahf
out
scas
data16
aaa
popf
out
out
sahf
stos
xor
mov
mov
lds
mov
fidivs
push
jle
icebp
repnz
fwait
leave
jb
push
push
pusha
adc
jae
inc
jne
mov
cmp
shrb
cmp
xor
xchg
shrb
ds
jp
cmc
sbb
mov
out
test
into
out
mov
cmc
cmp
sub
mov
jae
mov
adc
jns
push
inc
cs
adc
lahf
out
pop
push
sbb
int
inc
sbb
sarl
push
ss
repz
dec
aaa
cs
inc
add
and
add
cs
jo
cmp
or
dec
out
jns
pop
or
into
xchg
xchg
xor
inc
repnz
xor
clc
inc
xchg
pusha
mov
aaa
mov
mov
cmpsl
popa
loopne
hlt
aas
into
xchg
movsb
popl
xchg
push
add
call
fs
ds
pop
aaa
cli
xchg
out
outsl
and
insl
pop
jge
xchg
mov
cmpsb
adc
pop
aaa
loop
and
out
in
push
inc
fxch
push
jl
repz
lea
mov
divb
xchg
stos
test
inc
sahf
xchg
adc
xor
jns
inc
push
les
jg
dec
sbbb
push
lods
lret
mov
push
adc
rcr
in
mov
lods
shlb
gs
lea
popa
sti
dec
imul
and
and
dec
mov
add
hlt
adc
fwait
and
jmp
popa
outsb
into
inc
dec
xor
sahf
push
stc
lcall
insb
jbe
sbb
cmp
ja
jg
test
int3
mov
lds
inc
into
mov
fcmovnb
lea
ljmp
repnz
adc
mov
inc
mov
std
cmc
lcall
jae
jge
xchg
push
adc
into
aas
lock
mov
ss
fistpl
jmp
mov
xor
out
inc
push
inc
leave
aaa
jno
mov
lods
cmc
push
xchg
out
pop
negb
inc
test
push
addr16
or
add
mov
in
nop
ds
dec
ja
in
fcmovnb
push
jns
testb
icebp
ds
push
out
cmp
repz
cmp
inc
xchg
jbe
cmpsl
pusha
in
mov
push
jle
push
sahf
jmp
jl
and
xor
nop
fst
jnp
adc
aas
shlb
inc
xor
add
lds
inc
sar
jmp
scas
jecxz
inc
fildl
popa
aas
ljmp
aaa
add
mov
ljmp
inc
adc
mov
jbe
xlat
mov
inc
loopne
cwtl
cmp
lock
pushf
notb
data16
xor
test
pop
pop
or
add
cwtl
mov
das
scas
cld
call
fildll
pop
add
movsl
loopne
xor
into
push
je
push
aaa
or
in
push
lods
orb
or
idiv
or
xor
loope
scas
cld
sub
out
decl
scas
push
adc
lcall
or
loope
add
int3
mov
adc
loopne
movsb
jns
adc
cmp
cmp
enter
cmpsb
xchg
mov
scas
flds
cwtl
sub
call
fldl
sbb
rcrb
loop
mov
mov
inc
fistl
mov
adc
push
jb
jae
mov
lcall
adc
mul
rorl
ljmp
out
inc
arpl
scas
sti
pop
fdivr
scas
ret
scas
sub
nop
lds
mov
and
addr16
sbb
adc
cwtl
mov
pop
outsl
push
mulb
cmpsl
nop
insl
sub
aaa
add
fistpl
fst
adc
shll
jae
cmp
inc
or
push
add
and
inc
cs
mov
push
ss
xchg
jle
inc
adc
inc
inc
mov
into
sbb
inc
push
in
mov
roll
repnz
jmp
lea
scas
inc
and
pop
push
nopl
enter
sti
pop
cld
call
pop
das
push
xor
xchg
aaa
insb
mov
into
push
jne
incl
std
xchg
test
cmp
cwtl
data16
xchg
jne
pop
push
xor
aaa
shll
inc
lcall
lret
sbb
addr16
out
out
pusha
adc
push
popf
imul
scas
into
sbb
inc
mov
fldl
cmp
jbe
shl
pop
ds
xchg
jbe
roll
hlt
and
or
push
popa
inc
pop
pop
push
push
mov
ja
inc
arpl
push
adc
push
arpl
icebp
aas
or
jns
xlat
cmp
or
jg
sar
outsl
adc
lret
or
jbe
fs
data16
fbstp
incl
and
into
push
cmp
mov
dec
lea
std
sbb
jmp
in
and
push
data16
pop
pop
cwtl
or
lock
adc
gs
jne
inc
pop
add
pop
cwtl
call
adc
gs
mov
xchg
cmp
push
mov
sub
pushl
push
mov
fnsave
add
sub
push
popa
ljmp
andl
out
hlt
jg
scas
out
add
push
inc
and
ljmp
popa
adc
ret
outsl
repz
lods
xor
sub
inc
sbb
mov
loope
das
shll
push
outsb
add
pop
fcomip
pop
jle
jecxz
pop
push
stos
fimuls
das
mov
mov
sbb
inc
sbb
mov
adc
fdivr
fcomip
ja
pushf
and
dec
add
into
push
das
and
imul
outsl
xchg
inc
mov
scas
mov
stos
pop
into
push
push
in
jne
rorb
sahf
movsl
clc
push
and
lret
and
mov
jecxz
sbb
adc
mov
mov
pop
push
jmp
jmp
push
add
push
and
lret
repz
and
push
imul
lds
sbb
out
adc
pop
inc
cs
notb
and
xchg
shufps
jo
inc
adc
add
push
test
dec
inc
add
push
adc
inc
sti
push
and
push
and
sbb
daa
inc
inc
daa
clc
std
adc
je
pop
and
loopne
push
xchg
inc
adc
mov
imul
and
jb
enter
sub
dec
cmpsb
or
push
mov
repz
mov
jl
ficomps
and
adc
data16
mov
push
and
imul
xor
adc
xchg
ret
int
repz
adc
sub
inc
cmp
xchg
idivb
iret
rep
lret
mov
push
iret
repz
jl
pop
jne
test
xchg
lret
jecxz
sub
sub
insb
pop
dec
in
fldcw
add
mov
aaa
push
mov
in
repz
jge
jb
add
out
fwait
jno
xor
push
gs
jns
out
mov
stos
aad
fildl
out
not
and
pusha
stc
cmp
imul
aad
mov
data16
popa
dec
and
sub
jns
out
fimuls
out
sahf
loopne
lds
sahf
data16
push
das
sbb
sahf
out
jge
and
shrl
jecxz
adc
es
cmp
sbb
fimuls
cmp
fcmovne
mov
sti
pop
fs
dec
and
and
pop
jb
xor
sti
xor
jmp
leave
sbb
fnstcw
iret
repz
outsl
ds
repz
pusha
push
jo
adc
jnp
mov
push
mov
and
fwait
bound
cmpsb
inc
push
mov
jnp
push
add
fstpl
repz
push
mov
cmp
repz
inc
sub
cmpsl
stc
mov
icebp
pop
cwtl
sbb
repz
stos
cld
lea
fisubs
push
daa
mov
cmp
cmp
in
mov
data16
lods
js
iret
mov
sbb
xor
push
data16
fstp
mov
movsb
adc
movsb
pop
inc
daa
jo
xor
add
sub
cmp
imul
iret
repz
xchg
shrb
inc
jae
outsb
aaa
int
repz
push
jmp
ficompl
cmpsl
lret
jo
fldcw
mov
into
sub
iret
repz
pop
sub
lcall
int
aad
cli
jns
idivb
shrl
xor
out
cmp
pusha
push
xor
repz
int
data16
sub
mov
and
jge
rcl
cmpsb
iret
push
cmc
jns
pop
imul
mov
sub
push
stc
das
int
lcall
rcrb
repz
inc
adc
iret
inc
pop
sti
imul
popa
and
data16
idivl
mov
and
mov
jnp
adc
aaa
inc
inc
in
and
cmc
gs
shrl
fldcw
iret
repz
es
outsb
cmpsl
fnstcw
iret
xor
sti
and
iret
sarl
int
and
lds
test
jns
into
outsl
jns
fwait
and
ds
jae
andb
jne
clc
into
movw
push
add
sahf
aaa
dec
inc
aas
add
sahf
out
dec
xlat
loop
lea
out
pop
pusha
xor
mov
daa
pop
push
or
ss
je
push
and
xor
push
inc
out
add
push
xchg
add
push
daa
push
sahf
idivl
push
inc
cmp
cs
repz
inc
add
jno
jbe
sbb
daa
daa
dec
iret
push
es
add
fwait
jns
repz
mov
decl
pushf
out
and
cli
and
ds
cld
ljmp
mov
roll
shlb
mov
incl
out
pop
es
push
stos
sub
jne
sbb
into
adc
lock
out
mov
scas
scas
data16
or
in
xchg
rcrb
xor
push
in
fsubr
fcmovnbe
jecxz
mov
fwait
dec
adc
mov
insl
js
ret
jecxz
mov
incl
cmpsb
add
sub
fdivl
or
adc
add
cltd
inc
hlt
lahf
pop
mov
leave
pushl
cmpsb
xchg
jecxz
clc
insb
jae
xor
adc
js
adc
pop
xlat
fisttps
int
mov
push
and
data16
pusha
pop
cld
lahf
std
out
call
mov
stos
lods
ret
jo
cmp
mov
add
inc
jmp
xor
out
sahf
pop
fsubs
push
lcall
dec
jb
loope
iret
gs
jo
mov
ja
movsl
cwtl
stc
test
out
decl
nop
gs
fwait
ja
fsubrl
push
push
xor
push
mov
insl
cmp
cld
xchg
jecxz
xchg
inc
mov
push
sbbl
add
andl
ret
jo
pop
into
and
add
stos
xchg
jno
gs
adc
pop
sti
cmp
stos
fistl
push
push
cmpsb
mov
jg
pushl
flds
sarb
pop
repz
inc
scas
movsb
ror
and
rcr
jg
mov
loopne
stc
pop
xchg
xchg
dec
pop
nop
and
push
cmpsb
or
adc
jecxz
mov
call
int
ljmp
jo
pop
pop
inc
jle
int
faddp
popl
sar
or
sar
dec
and
mov
push
add
cld
lcall
jle
cmpsb
mov
out
test
in
not
lock
shl
xchg
jbe
adc
clc
pushl
or
jge
pop
sub
push
pusha
push
sub
js
push
cmp
popa
dec
sbb
jns
inc
dec
and
or
popa
movsl
icebp
out
addl
stc
stos
shrb
cld
lcall
mov
out
lds
adc
adc
mov
add
add
pop
sub
cs
lds
lret
mov
fnop
mov
popa
dec
sbb
jg
arpl
adc
scas
ljmp
movsl
aad
imul
fsts
mov
cmpsl
lds
decl
stc
cltd
ret
rorl
pop
adc
pop
sbb
jl
pop
push
xor
cmp
add
popa
jnp
and
adc
dec
jae
sub
cs
pop
or
lock
out
ja
cmpsl
jmp
scas
hlt
imul
shll
pop
push
outsb
dec
pushl
inc
inc
add
and
cmovp
pop
push
or
xchg
popf
test
ror
shrb
inc
inc
add
imul
jp
xor
das
fcomp
sub
test
fwait
in
iret
shl
cwtl
xchg
and
repnz
movsl
stc
loopne
lcall
stos
and
cmp
pusha
xor
sub
push
push
xor
dec
xor
ss
mov
jmp
mov
and
mov
popa
xor
jle
movsl
xchg
loop
movsb
dec
cltd
cmpsl
popf
mov
inc
mov
cli
int3
icebp
mov
and
mov
jmp
sti
out
mov
int3
movsb
mov
cmp
jecxz
mov
repz
mov
mov
jmp
incl
ja
sbb
xor
arpl
cmp
jg
adc
popa
cmp
addr16
jns
das
sub
dec
pop
dec
popa
adc
push
aaa
and
adc
inc
cmp
add
aaa
and
ljmp
pop
sub
cmp
pop
dec
pop
popa
cmp
aaa
push
or
inc
add
aaa
add
sbb
dec
dec
sbb
push
push
outsl
or
jbe,pn
jo
js
fistpll
cmpsb
scas
mul
stc
lret
std
mov
mov
and
and
dec
push
and
ja
inc
and
pop
dec
xor
and
mov
in
out
cli
stos
xchg
sar
lods
pop
imul
andb
repnz
outsl
clc
ljmp
mov
sar
ljmp
mov
ret
jecxz
idiv
sti
mov
cmpsb
nop
sbbb
lcall
lcall
aad
ror
and
daa
cmp
ja
add
jb
or
and
sub
jl
mov
add
sbb
jp
or
cmp
sbb
je
inc
cmp
jmp
test
ljmp
mov
aad
mov
cs
pop
jge
push
call
inc
or
imul
jno
push
dec
aaa
inc
push
or
jp
or
inc
or
insb
push
pop
cmp
push
jbe
sbb
sub
jmp
stc
fadds
lods
mov
sti
in
sarb
jecxz
lcall
or
adc
dec
jne
push
and
inc
jg
incl
sbb
cmp
or
cmp
lret
fmul
cmpsb
cmpsb
pushl
lods
xchg
sahf
movsb
xchg
in
cmpsl
cld
call
std
nop
fidivs
ljmp
imul
add
sbb
xor
adc
cs
jmp
lcall
movsb
cwtl
shl
loop
dec
pop
sbb
and
and
or
insl
push
adc
jle
decl
and
cmpsb
mov
mov
jmp
shl
in
mov
lret
jecxz
lea
out
push
inc
xchg
stos
incl
dec
imul
dec
sub
or
sbb
in
dec
out
mov
xchg
jmp
pop
sub
or
cmp
dec
arpl
ljmp
and
jbe
and
cmp
insl
es
pusha
jne
pop
sub
push
sbb
xor
jo
mov
dec
push
push
pop
vmread
jle
pop
imul
inc
pop
incl
pop
adc
push
js
or
add
dec
ss
and
push
aad
fwait
add
stos
mov
in
xchg
lret
call
in
mov
sub
jnp
push
bound
daa
xor
push
dec
pop
cmc
loopne
negb
push
add
or
cmp
aaa
dec
fs
stc
jg
xor
xor
adc
pusha
outsb
push
dec
sub
adc
mov
jne
mov
mov
int3
lret
enter
popa
jmp
idiv
mov
lret
cltd
repnz
scas
mov
scas
stos
sahf
lods
xchg
mov
aam
out
jb
jg
xor
rol
shl
lcall
aas
das
push
cld
pushf
out
mov
lahf
in
rcl
mov
mov
mov
mov
sar
cltd
ret
pmaddwd
sar
loope
lahf
std
mov
in
xchg
mov
mov
int
cs
ljmp
sbb
cmp
addr16
cmp
push
popa
outsl
and
pop
outsl
imul
adc
inc
adc
call
jo
bound
add
inc
sub
jl
inc
pusha
sub
adc
dec
jp
fs
cmp
in
pushl
xor
push
jl
jns
push
cmp
cmp
jno
push
fistpll
push
cld
mov
es
and
gs
adc
push
jge
push
lahf
sti
lods
call
jbe
cmovl
in
sub
pop
mov
inc
pop
jle
cli
mov
cs
and
jg
or
pop
sub
stos
mov
add
push
push
inc
js
pop
sub
push
add
adc
dec
pop
das
sbb
sbb
dec
add
push
jle
pop
push
jnp
stos
in
mov
push
stos
mov
shl
inc
sti
mov
jbe
das
push
in
jg
jg
cmp
out
adc
push
sub
push
push
das
or
and
cmc
loop
mov
or
orl
xchg
neg
frstpm(287
pop
push
pop
push
es
or
or
lods
mov
rcr
pop
push
addr16
call
jb
xor
and
addr16
dec
and
jge
push
jns
sbb
push
stc
stc
sbb
push
dec
dec
jno
xor
and
sub
outsl
and
pop
lret
fistps
mov
pop
push
add
outsl
clc
mov
outsb
loope
not
movsb
mov
pushf
mov
call
xchg
shl
fbld
push
pop
push
push
push
jae
pop
insl
or
jno
jo,pn
insl
jp
or
fs
pop
outsb
jnp
imul
jmp
inc
ss
or
pop
adc
fs
inc
sbb
jae
inc
mov
addl
call
pop
dec
jge
inc
sbb
push
xor
or
es
inc
aaa
outsl
incl
insb
jo
cmp
cmpsb
enter
aam
nop
hlt
xchg
dec
pop
sbb
in
call
and
mov
mov
mov
mov
shl
mov
cmpsl
leave
lret
mov
or
es
clc
and
scas
mov
mov
jo
xchg
lods
rorl
mov
jmp
loopne
clc
pushl
cmp
pop
sub
dec
pop
inc
jle
adc
mov
ret
loop
sar
pop
out
inc
dec
inc
sub
pop
cmovo
aaa
lcall
jbe
mov
mov
ret
mov
lahf
fwait
xchg
int
decl
imul
in
mov
lahf
stos
mov
sbb
push
jbe
call
popa
push
cmp
or
adc
push
jbe
xor
or
cmp
out
mov
xor
insb
or
and
mov
ret
dec
pop
dec
jge
pop
pop
popa
inc
push
inc
push
push
jg
pop
pop
popa
pop
in
mov
dec
dec
pop
ss
dec
dec
imul
push
xor
outsl
lcall
ror
shrb
mov
lods
cli
pushf
stos
mov
popf
loope
ljmp
jbe
insb
jbe
jno
xor
inc
cmp
gs
and
mov
pop
add
sahf
xchg
out
lcall
sbb
aaa
add
push
popa
jmp
mov
mov
ret
in
lock
stos
push
pop
js
insb
adc
pop
inc
je
jno
out
incl
cmp
sbb
inc
dec
pop
sbb
jno
in
in
mov
lods
std
lock
mov
ljmp
mov
xorb
push
jae
cmovns
pop
sbb
push
fwait
push
cld
call
cmp
inc
dec
sbb
lret
cs
test
js
out
hlt
adcl
pop
cmp
inc
dec
add
dec
mov
call
push
sbb
cmp
xor
dec
push
and
mov
sub
addr16
test
mov
mov
xlat
sti
cli
mov
stos
mov
loopne
ret
imul
sub
jo
jg
in
mov
cli
mov
stc
xchg
mov
xchg
lcall
leave
mov
mov
leave
addl
fdivrl
loope
ret
idiv
mov
in
movsl
mov
loopne
ljmp
pop
aaa
push
adc
adc
push
daa
jne
cmp
cmp
call
pusha
jb
and
sbb
packsswb
jl
aaa
decl
cltd
into
xchg
fidivl
add
dec
pop
jg
sbb
cmp
mov
add
jmp
lcall
xorps
add
jae
pop
sub
dec
imul
fldt
and
cmp
sub
push
sbb
es
push
ds
pop
daa
sbb
sub
inc
sbb
push
push
or
sahf
jg
push
ja
lock
int
into
popf
fnstcw
shl
fidivrl
jl
lock
mov
mov
ljmp
inc
dec
jne
jg
lcall
sub
push
gs
dec
inc
outsb
enter
in
ljmp
scas
mov
and
pop
dec
adc
push
push
and
cmp
dec
xor
out
out
cltd
loopne
rol
in
mov
mov
ret
popl
mov
fucomp
scas
nop
mov
call
addb
xchg
mov
mov
loope
cmc
jmp
mov
scas
lret
stc
and
fisttps
popa
cld
ror
mov
shrb
cmc
lret
xchg
cld
jg
xchg
mov
mov
mov
fs
ss
fs
arpl
and
incl
xchg
inc
jns
daa
ss
arpl
jp
push
jbe
mov
sbb
xchg
lret
int
stos
stos
mov
or
adc
add
add
adc
jo
sbb
fnsave
movsl
call
decl
lret
out
leave
in
mov
mov
xchg
mov
sar
movsl
push
lods
out
cltd
cmpsl
mov
mov
mov
mov
mov
ret
jmp
mov
shl
mov
mov
xchg
cli
cmpsb
xchg
xchg
cmp
fistps
test
repz
test
inc
mov
mov
mov
idiv
mov
pop
std
fiadds
out
cmc
lret
loope
mov
mov
sarl
fldt
mov
xchg
in
lret
cli
xlat
lret
xchg
icebp
popf
fdivr
mov
leave
iret
out
mov
lcall
ffreep
in
icebp
div
lret
cli
lcall
mov
mov
pushl
loopne
in
loop
mov
mov
xchg
aad
mov
adcl
cltd
out
cli
dec
ret
fcoml
jecxz
sub
jb
inc
inc
cmp
ja
outsl
jae
mov
jbe
pop
pusha
pusha
add
and
inc
pop
data16
mov
cmp
push
jp
jg
lcall
dec
sub
add
or
push
inc
jg
sbb
push
decl
xor
cmp
add
and
xor
push
xor
addr16
jmp
dec
dec
ds
inc
add
push
inc
and
push
sbb
xor
incl
mov
lock
mov
mov
in
iret
jmp
mov
sbb
fsubp
xchg
or
in
test
scas
mov
stos
ljmp
dec
es
mov
cmp
mov
push
push
push
inc
jnp
ljmp
jns
fs
and
push
das
aas
sub
dec
or
inc
push
pop
and
mov
push
cld
pushl
loope
cmc
xchg
mov
ret
mov
jmp
mov
mov
stc
fsubp
nop
clc
sub
mov
clc
mov
frstor
iret
mov
sub
int
testl
and
gs
sbb
cmp
mov
xchg
clc
mov
mov
dec
lahf
cmp
push
push
or
jae
adc
jge
scas
dec
dec
jmp
and
push
shlb
hlt
mov
mov
xorl
nop
cli
xchg
aas
jmp
ret
aam
push
inc
push
outsb
jbe
xor
aaa
cs
jl
ljmp
insb
adc
jns
inc
jl
and
pusha
xor
data16
decl
cmp
add
jge
adc
pop
sbb
pop
pushl
lcall
dec
data16
inc
sbb
sbb
add
pushw
pop
jo
jo
jp
adc
jg
das
pop
sbb
cmp
sbb
outsb
pop
cmp
pusha
xor
out
in
lcall
ds
es
push
jnp
dec
pop
dec
dec
xor
sbb
push
push
sbbb
push
cmp
pop
sti
inc
pop
cmovle
aas
push
sbb
dec
sbb
jnp
pop
sbb
ljmp
jb
xor
jp
inc
popa
xor
jg
jp
daa
add
bound
or
je
pop
jne
pop
mov
out
clc
dec
jle
xor
push
or
iret
lret
mov
iret
jmp
cltd
fistpll
aad
cld
cwtl
cwtl
in
rcrl
cmpsl
mov
lds
cld
pop
cld
int
shr
shrb
cltd
mov
ds
divl
mov
popa
lock
test
out
fistpll
mov
ljmp
cmp
movd
inc
imul
xor
jb
xor
xor
pusha
jno
jle
xor
jae
pop
icebp
filds
sbb
cmp
insl
sub
aas
jle
cmp
arpl
incl
imul
arpl
arpl
or
adc
or
or
push
adc
data16
jb
push
and
es
jae
cmp
sub
sub
idiv
mov
inc
cmp
hlt
jmp
mov
sti
push
icebp
pop
push
cmc
call
fldenv
mov
out
inc
xor
ja
jbe
push
je
adc
push
inc
pcmpgtw
lods
jmp
fisubrs
pop
sbb
fcomip
ja
dec
sub
adc
pop
push
or
sub
dec
or
push
sub
cmp
cmp
popa
or
or
add
ja
pop
adc
dec
sub
cli
ss
cmp
daa
sbb
or
insb
adc
add
cvtps2pi
cmp
push
xchg
mov
xchg
out
test
test
ljmp
jecxz
mov
mov
lcall
jg
jne
or
jp
das
cmp
call
jnp
dec
jo
ss
xor
addr16
das
and
pop
add
aas
push
sbb
je
jmp
xor
push
inc
and
sbb
adc
or
jae
fsts
in
fst
aam
mov
iret
test
test
lahf
nop
fcmovnb
test
xor
jg
lods
into
sahf
notb
mov
jmp
neg
test
idiv
mov
pushl
out
std
mov
std
ljmp
mov
xchg
roll
mov
int3
ffree
mov
sahf
stos
out
call
sar
in
fsub
jmp
xchg
cli
mov
xchg
test
ret
and
sub
je
jbe
adc
xor
jg
add
lcall
push
sahf
sbb
pop
pop
sub
jle
pushl
cmp
add
jb
cmp
jbe
sub
sbb
pop
pop
dec
or
adc
lcall
popa
push
js
inc
push
sub
add
add
pop
inc
and
stos
mov
mov
adc
pop
dec
pop
outsl
or
or
sub
xor
outsl
sbb
add
das
jg
data16
pop
push
push
scas
loop
mov
mov
xchg
nop
aam
decl
xchg
cld
ret
lret
mov
cld
test
mov
xchg
xchg
mov
xlat
or
cmp
cwtl
repnz
scas
mov
sahf
cwtl
fnstsw
ret
vmovntdq
fcomip
dec
mov
xlat
mov
adcb
repnz
rcr
enter
pop
enter
mov
inc
lcall
inc
mov
inc
dec
mov
pop
fsubs
jne
mov
cmp
dec
pop
loope
jne
push
jmp
ret
imulb
ret
xorb
jge
add
repz
mov
lcall
lcall
faddp
mov
sbb
or
cmp
adc
jo
lcall
pop
xchg
ds
adc
jns
pop
lahf
jge
or
ja
addr16
pop
jge
xor
push
jbe
pop
mov
mov
out
scas
push
fbstp
pop
iret
xor
pop
mov
jecxz
pushl
adc
xor
adc
aaa
push
aas
jno
adc
xor
adc
jno
push
dec
jno
adc
mov
ljmp
jp
imulb
push
fisttpll
dec
dec
xor
test
clc
call
push
nop
push
divb
and
and
xchg
decl
js
fistps
arpl
out
inc
add
push
ret
sub
in
aas
aas
push
aaa
or
loopne
cmpsl
fisttpl
xor
ljmp
pop
imul
inc
ds
adc
jnp
sbb
jnp
push
pop
daa
pop
add
push
pop
repnz
ljmp
mov
adc
adc
jae
push
fbstp
adc
notl
mov
pushl
adc
aaa
pop
adc
aaa
push
aas
jb
adc
aaa
push
adc
jb
push
dec
jb
jg
adc
jb
sbb
sub
mov
test
pop
ljmp
and
fldcw
jl
mov
loopne
insb
xchg
xchg
xchg
sub
pop
push
cmp
lcall
mov
add
sub
or
loopne
pushl
repnz
cmp
pop
imul
cmp
scas
push
pop
push
cmc
cmp
sub
decl
lock
cmp
xor
incl
fstpt
sbb
fs
pushl
popf
fsubl
inc
into
scas
mov
into
adc
pusha
jnp
stos
icebp
lret
out
mov
and
push
push
cmpsb
dec
scas
xchg
adc
cmpsl
mov
insl
mov
mov
fcmovnbe
adc
aam
scas
outsl
add
fadds
or
ja
pop
mov
cs
mov
mov
mov
ss
dec
pop
pop
lods
xchg
aas
adc
test
xchg
inc
rorl
incl
in
sbb
cmp
out
rorb
sbb
push
into
es
lcall
mov
das
cwtl
push
int
lea
sbb
sub
pop
je
aas
sbb
bound
call
clc
js
jge
jne
cmp
je
pop
lcall
sbb
ss
sbb
pop
inc
pop
or
and
ret
insl
mov
jl
stos
decl
out
leave
mov
xchg
movsb
pop
dec
scas
insb
mov
outsl
jmp
ljmp
in
dec
loopne
sbb
push
or
cmp
jmp
sbb
pop
cmpsb
loopne
dec
push
hlt
lds
arpl
cld
cmp
sbb
push
sbb
mov
push
test
in
fwait
adc
pop
jo
sbb
rolb
sbb
xchg
mov
call
sub
ret
xchg
sub
pop
daa
jbe
test
sbb
stos
ja
jnp
sbb
xchg
in
xor
adc
mov
jge
add
int3
push
sub
lods
sub
add
call
sbb
lods
dec
mov
fmuls
jbe
and
push
mov
push
je
repz
jge
decl
dec
dec
pop
cmp
ss
les
aaa
xchg
arpl
mov
cld
imul
ja
call
and
ficoml
cli
iret
rorl
and
cltd
xchg
maskmovq
mull
call
fwait
test
adc
sbb
adc
mov
decl
mov
sbb
ficoml
cmpsb
cmp
scas
xchg
mov
dec
in
stos
out
or
repnz
repz
cmpsb
push
mov
adc
cwtl
sbb
ljmp
cli
inc
cmp
sarl
and
push
outsl
adc
add
hlt
xchg
in
or
push
adc
loop
hlt
xchg
jae
aas
shlb
lds
bts
sbb
lcall
decl
in
daa
hlt
ljmp
cli
or
pop
fwait
cmp
mov
sbb
jno
jge
mov
dec
lret
lahf
fisubrl
cmc
ficomps
mov
cmp
add
rorb
negl
jne
outsb
loope
push
and
add
test
push
adc
mov
stc
xor
cmpsb
cs
adc
out
cmp
daa
push
cmpsl
push
stc
xor
stos
adc
inc
push
in
sahf
out
sahf
jo
cmp
out
jl
and
outsl
sarl
xchg
xchg
shl
pop
shl
xor
out
sbb
iret
repz
lret
aam
int
stc
cmp
push
sbb
out
ds
fdivrs
cmpsl
stc
xor
sti
push
repz
ret
cwtl
ret
dec
repz
push
outsl
ja
xor
sbb
pop
add
push
dec
xor
incl
push
xor
and
push
xor
push
and
and
and
cmp
inc
pop
cmp
cmp
jmp
dec
das
gs
jno
jo
imul
and
mov
pop
push
inc
mov
xchg
push
repz
jmp
rcll
xchg
rcll
and
push
aaa
sbb
int
mov
xchg
cs
insb
ss
out
push
iret
xlat
mov
cmp
rorl
dec
int3
sahf
fs
lcall
repnz
scas
pop
mov
idiv
lahf
or
jo
fs
movsb
jl,pn
and
in
xlat
mov
sbb
sbb
aam
aam
mov
loope
mov
and
loopne
nop
jmp
xor
xor
dec
rcll
sti
adc
xabort
mov
jnp
sub
inc
cmp
xchg
jg
cmp
inc
xchg
push
leave
xor
mov
pop
pop
or
jmp
out
mov
in
mov
incl
mov
fsubrs
scas
mov
add
fimuls
enter
xor
pushl
dec
push
jae
pop
clc
je
sub
stos
out
xor
pop
sbb
mov
sub
inc
jb
rcl
mov
inc
shl
sbb
lea
sahf
aad
lea
adc
mov
clc
sub
js
or
cmpsl
cmpsl
sti
cwtl
and
lcall
cwtl
scas
es
pop
pop
inc
mov
popf
rolb
xor
int
xchg
mov
fstl
jle
lahf
mov
push
or
jnp
mov
dec
jns
and
sbb
inc
mov
mov
lcall
mov
xlat
fwait
mov
push
lock
pop
std
or
inc
das
push
cli
shrb
imul
gs
mov
cmp
ret
mov
mov
and
decl
dec
and
mov
jo
je
test
mov
mov
mov
lahf
stc
test
in
decl
out
notb
ret
imul
xchg
ljmp
sub
iret
mov
cltd
ljmp
addr16
hlt
call
and
dec
xor
andps
lods
cmp
pushl
mov
push
sub
inc
mov
dec
rorb
mov
adc
incl
jge
jae
sub
jnp
imul
mov
sub
outsl
out
fldt
in
sbb
outsb
pop
pop
test
imul
sbb
es
mov
jmp
ds
sub
sub
xchg
add
jo
jne
xor
inc
push
daa
frstor
pushl
outsb
cmp
mov
les
out
mov
mov
inc
xchg
cld
lcall
mov
mov
inc
push
in
lods
mov
push
call
call
movl
ljmp
add
aaa
and
mov
sarl
repnz
mov
mov
orb
jae
jle
aas
sub
mov
mov
js
in
decl
mov
ljmp
pop
popf
mov
xor
ja
push
adc
incl
pop
sbb
sub
data16
xchg
or
decl
sub
mov
aaa
push
inc
adc
adcb
fdivrp
ljmp
xor
sub
mov
mov
dec
nop
decl
jp
daa
sbb
or
clc
lcall
dec
iret
sub
xchg
cmpsl
pop
dec
lret
mov
mov
add
cmp
decl
cld
mul
ljmp
lock
dec
push
push
add
ljmp
loop
xchg
xchg
test
dec
push
gs
lock
out
cmp
hlt
mov
sti
movsl
push
or
fisttpl
call
outsl
ret
mov
cmpsb
jmp
mov
sub
out
cld
push
sbb
mov
push
hlt
jmp
int3
or
jne
gs
test
scas
cli
mov
adc
test
insb
fbld
push
aam
cmp
pusha
jae
mov
pop
in
inc
mov
inc
xlat
or
mov
xchg
add
lcall
xor
lret
cwtl
arpl
sub
out
jo
ljmp
lahf
leave
adc
fs
in
pushl
xor
add
mov
sub
fisubrs
xor
adcb
test
lds
xchg
test
cmp
ljmp
xlat
jae
loop
xchg
out
cmpsb
imul
or
and
or
mov
pusha
push
shll
xchg
mov
mov
mov
and
inc
add
pop
sub
sbb
jmp
aam
mov
idivl
pop
pop
mov
mov
pop
dec
movb
jl
sahf
call
loopne
pop
xor
aaa
addr16
push
or
cmp
or
mov
aaa
dec
decl
dec
test
rorb
mov
sub
xchg
inc
shlb
scas
andl
addr16
jge
sub
adc
add
test
testb
pop
mov
in
inc
lret
insb
jg
cli
rcrb
loopne
mov
pushf
and
out
stos
push
inc
mov
sbb
in
icebp
jecxz
imul
js
sub
out
clc
add
mov
pusha
jecxz
aad
popf
lods
sti
inc
mov
mov
je
mov
incl
push
sbb
clc
pop
into
cwtl
out
iret
fsubl
sub
and
jecxz
fbld
or
decl
adc
push
and
rorl
pop
xorb
jp
hlt
add
testb
cld
mov
test
cmp
incb
xor
popf
movsb
repnz
clc
sahf
lock
cmp
xchg
je
add
sub
lahf
mov
lret
popf
call
ds
clc
fistps
push
or
mov
jmp
mov
cmp
jg
lcall
int3
sbb
leave
fisubrl
int3
lcall
mov
push
push
xchg
pop
adc
ret
push
push
mov
dec
sub
sbb
push
push
hlt
incl
cmp
test
aas
push
inc
push
mov
jo
sarb
and
imulb
pop
mov
shrb
fidivrs
aam
movsb
inc
and
adc
outsb
adc
or
push
jmp
in
fidivl
les
mov
gs
adc
stos
mov
cmpsb
push
mov
in
call
mov
lods
fdivrp
mov
jge
lret
push
sbb
mov
mov
sbb
xchg
incl
stc
inc
mov
std
push
repnz
shll
jmp
out
fprem
js
bnd
jo
dec
insb
and
pop
adc
fucomip
or
jg
call
andl
mov
push
pusha
stos
lret
cld
add
outsl
inc
xor
or
jmp
in
and
jbe
jne
dec
popf
shl
jle
or
jb
mov
or
and
mov
dec
push
and
pop
xchg
loope
lcall
aas
or
fidivrs
in
decl
sbb
pop
aad
addr16
aas
or
or
jae
aas
mov
icebp
dec
cmp
das
clc
call
movsb
inc
jbe
xor
pop
jb
repnz
xchg
sub
cwtl
mov
cmp
bound
or
push
xchg
in
jecxz
ja
mov
test
mov
add
cmpsb
out
popf
fstpt
xchg
mov
jg
xchg
jns
push
enter
lods
lcall
sub
rcrl
cwtl
pop
push
pop
rcrb
jl
cld
mov
or
dec
icebp
incl
ret
push
and
fistps
imul
xchg
in
incl
jmp
adc
mov
inc
je
cmp
leave
mov
decl
mov
sbb
xchg
adcb
inc
pushf
out
mov
mov
push
xor
mov
cwtl
xchg
xor
jo
xor
ljmp
sbb
cli
shll
sbb
add
xchg
mov
jnp
jo
neg
int
pusha
sub
add
add
xlat
movsl
loope
icebp
adcl
ljmp
pop
mov
mov
or
mov
jae
into
pop
xchg
loopne
fistpl
imul
dec
clc
xor
xor
adc
cmp
fxch
adc
std
lret
stos
fcos
sbb
das
insl
push
push
int
mov
push
push
pop
das
lods
enter
pushl
and
je
push
dec
push
xchg
xlat
pop
insl
sbb
ljmp
std
dec
lahf
shl
cmp
sahf
cld
push
cli
mov
jl
lock
pushl
shl
rcr
push
and
in
movntps
movsb
lahf
cmp
decl
add
mov
fstps
push
dec
mov
or
pushl
out
jae
stc
mov
imul
pop
sub
mov
test
sbb
add
cmp
loop
lock
cmpsl
sbb
pop
shrb
xor
into
stc
lret
adc
ret
call
scas
fcoml
setns
push
cmp
xlat
jno
inc
jg
mov
lret
aad
insb
push
push
adc
push
mov
xchg
add
sub
das
es
cmp
call
add
imul
xor
push
cmp
bound
pushl
fsub
outsb
mov
and
xor
es
lret
inc
fsubrs
loopne
clc
fcomip
decl
cmp
mov
pop
ret
in
stos
inc
jno
adc
imul
test
sbb
rclb
push
sub
and
data16
xchg
jnp
rol
pop
mov
pop
ds
add
sub
jnp
xchg
stos
in
into
lds
in
lahf
sub
add
scas
pop
fs
std
push
sub
dec
test
dec
cmp
int
adc
loope
push
jae
push
inc
adc
in
lcall
push
pop
hlt
lahf
les
jecxz
mov
pop
flds
fldz
xchg
popf
or
lahf
add
lcall
adc
mov
arpl
or
aam
test
in
mov
jmp
ljmp
into
cli
jne
mov
inc
cmpb
push
int
movsb
inc
xchg
stos
pop
repnz
sub
mov
push
add
jg
sub
sub
in
out
lcall
lcall
adc
jno
test
dec
scas
aad
xchg
icebp
push
mov
mov
adc
push
decl
gs
ret
jecxz
gs
pop
xchg
sbb
cmp
mov
sbb
jns
adc
decl
sbb
jae
fimuls
icebp
cmp
fimuls
mov
adc
lcall
sub
jp
dec
dec
or
or
iret
cmovns
dec
test
jg
mov
cli
or
pop
lds
repnz
outsb
sarb
ds
lock
jns
dec
dec
jg
loop
xchg
rolb
inc
cmc
mov
xchg
ror
jbe
push
incl
pop
mov
mov
test
cmp
orb
sahf
out
call
push
and
pop
fiadds
outsb
sbb
out
fmull
jmp
cs
cld
outsl
xchg
lret
mov
push
lcall
jmp
xlat
mov
adc
xchg
roll
push
iret
cltd
popa
scas
push
cli
cwtl
adc
es
sub
pushl
cld
pushl
das
add
sbb
pop
leave
inc
cmp
decb
push
test
call
subl
es
add
shr
lcall
leave
jne
ja
or
inc
add
xor
sbb
sub
neg
dec
xchg
jmp
pushl
aaa
ljmp
ror
or
mov
int3
fwait
pusha
inc
jl
jbe
adc
loopne
repnz
subl
inc
out
pop
add
ja
fildl
mov
fs
ss
add
call
lea
cmp
push
cmp
push
out
sub
fwait
pop
lods
push
lret
mov
call
cmp
mov
mov
sbb
mov
les
push
ja
insb
clc
pop
decl
addr16
sbb
cs
fildl
addr16
sbb
dec
in
js
cmp
shrb
idivl
jecxz
add
movsb
and
movb
xor
ret
sahf
push
cwtl
test
jle
leave
dec
fcmovne
adc
and
icebp
lcall
pop
enter
dec
inc
cli
mov
xchg
stc
pusha
cltd
into
jbe
flds
lret
out
out
clc
mov
or
in
nop
jl
imul
pop
outsl
pop
add
dec
dec
punpcklwd
cmp
andb
adc
loop
and
int3
mov
mov
fnstcw
and
ljmp
aaa
cltd
cwtl
xchg
scas
fadd
sbb
arpl
mov
sub
andl
mov
insb
push
inc
adc
rcrb
out
add
sbb
inc
stc
mov
jp
xchg
aam
mov
dec
bound
jl
cld
jno
repnz
lds
idivb
add
pushl
xor
lret
std
popf
mov
ret
cmc
mov
jnp
or
xlat
push
out
gs
lcall
ljmp
push
or
jp
sti
fcmove
adc
mov
jne
pop
push
clc
decl
insb
lods
lahf
xor
adc
xchg
and
xchg
xchg
gs
cmc
cmp
xor
cmp
out
push
test
jle
inc
jg
pushl
es
jl
fsubl
xor
shl
repnz
fstpt
sub
cli
lds
cld
pushl
adc
je
mov
aaa
in
mov
call
gs
enter
stos
aam
mov
mov
lods
outsb
jge
fisubrs
mov
xchg
push
inc
fisubrl
mov
aam
xchg
hlt
out
ds
pushf
lods
pop
repnz
insb
cld
mov
xor
rol
rorb
rcll
mov
mov
out
cli
jae
dec
sub
push
pop
mov
mov
cmpsl
daa
xor
dec
repz
out
mulb
sbb
push
addb
xor
inc
push
sub
pop
inc
pop
sub
outsl
incb
jne
jbe
rolb
cmp
mov
push
inc
pop
mov
call
sbb
push
pusha
add
cmpsl
cs
xor
jp
in
ficomps
data16
into
lcall
or
ss
lea
and
cmp
push
jge
in
dec
pop
std
nop
mul
call
incl
mov
push
jb,pt
mov
sub
mov
sub
xor
test
ret
popf
mov
gs
jmp
or
out
fistpl
dec
push
mov
lock
mov
lods
sti
popl
cmp
sbb
int
sti
push
pop
or
xchg
cltd
mov
ret
xchg
cmp
loope
imulb
call
ret
push
incl
mov
and
inc
xchg
test
jg
int
add
lahf
inc
adc
push
pop
leave
fisubrl
outsl
inc
push
loopne
cmc
mov
cmp
add
cltd
and
mov
add
mov
ljmp
mov
push
mov
xor
add
mov
pop
fld
sarb
stos
outsb
ss
fwait
mov
pop
dec
inc
enter
lods
mov
lcall
mov
test
fucomip
add
outsl
or
les
loop
xor
cmp
fsubrs
cmp
jmp
mov
sahf
or
cmp
and
and
mov
in
call
push
sub
jl
insl
xor
mov
das
adc
fldln2
std
stos
jg
ret
das
clc
jecxz
mov
dec
int
das
add
cwtl
pop
dec
push
ja
push
mov
mov
jmp
add
xchg
repz
std
pop
sub
and
insb
neg
roll
cltd
cli
jmp
lock
jmp
adcb
push
mull
cwtl
mov
and
aaa
dec
dec
cmp
movsb
or
enter
aad
xchg
sbb
sar
in
mov
mov
jmp
mov
xlat
stc
ljmp
imul
cli
arpl
or
incl
aam
incl
imul
sbb
sbb
jecxz
cmpsl
icebp
xchg
push
pushl
incl
mov
cwtl
sub
xor
push
mov
fnstsw
xchg
insb
cltd
iret
shrl
arpl
les
push
sbb
push
mov
icebp
cmpsb
push
cld
call
inc
push
and
notb
rcrl
add
and
es
jg
ljmp
xchg
push
pop
jno
lea
sub
mov
mov
inc
jp
in
test
arpl
xchg
icebp
pop
mov
push
xor
ret
push
xor
cwtl
mov
inc
adc
or
imul
lahf
leave
fldenv
mov
jmp
xchg
push
jmp
mov
and
jnp
stos
hlt
pop
add
jecxz
fsub
or
fs
dec
add
cmc
popf
pop
into
out
mov
inc
or
push
insb
or
mov
sub
xor
decl
push
repnz
daa
dec
mov
out
js
or
adc
mov
adc
xor
pushl
jbe
rcr
mov
out
sbb
pop
in
fcoms
jo
movsb
cmpsb
bound
decl
dec
inc
push
ljmp
push
es
dec
jecxz
fildl
test
js
ljmp
ret
inc
xlat
hlt
lods
sub
xchg
incb
xor
pop
loopne
or
jg
mov
iret
sbb
daa
stc
lods
loope
xchg
cmpsb
int
cld
inc
jg
gs
inc
outsb
into
sub
negb
call
push
insb
and
ljmp
push
fadd
test
mov
jge
dec
jge
arpl
jl
add
call
push
inc
jnp
xchg
std
rolb
push
lock
pushf
jae
adc
fcomip
and
sti
shlb
and
xchg
jne
mov
adc
sahf
push
call
dec
mov
loop
loopne
loope
sbb
shlb
jmp
xchg
jle
jecxz
ljmp
mov
push
iret
mov
mov
clc
push
pop
lcall
and
mov
jmp
pushl
lods
test
adc
pop
mov
sahf
xchg
daa
orl
pop
inc
orb
push
fisttpl
call
mov
inc
push
call
mov
mov
lods
mov
dec
pop
push
mov
arpl
pop
sbb
jmp
dec
in
xchg
xchg
jmp
and
insb
or
pop
popa
das
out
dec
test
jb
jmp
jg
push
lret
incl
sbb
cmc
aaa
ss
mov
mov
cmpsl
out
test
dec
fisubrs
call
fdivl
xchg
pop
or
push
dec
xor
xchg
test
data16
incl
cld
addr16
add
add
dec
push
push
into
xchg
mov
mov
popf
inc
pop
ljmp
mov
mov
cmp
ftst
add
fstl
insl
loope
decl
insl
adc
push
cmp
fsubs
clc
movsl
in
out
dec
out
mov
mov
push
arpl
and
ja
call
dec
aaa
pop
test
cs
mov
mov
dec
fstpt
iret
mull
call
push
xchg
and
dec
mov
rcrl
push
lods
xor
mov
mov
das
clc
jnp
cmp
xor
or
or
cmpsb
lret
in
lret
sub
push
mov
call
jmp
jp
or
repnz
inc
sub
jmp
rolb
subl
push
inc
mov
incl
mov
cmp
xchg
jp
pop
cmp
jmp
xchg
fldt
sti
fnstenv
pop
fwait
arpl
jge
dec
sar
lcall
decl
mov
cmc
sarb
inc
mov
stc
fsubrl
push
mov
std
sbb
and
lock
pushl
mov
adc
arpl
jne
addr16
adc
sbb
mov
ret
shll
jmp
mov
loop
mov
test
push
sub
in
and
stos
out
fildll
call
pop
mov
pop
push
aas
xchg
imul
mov
and
es
ret
call
or
in
push
cmp
adc
cmp
aaa
test
mov
pop
out
clc
call
lods
ficoml
mov
imul
cmp
and
pop
and
andb
mov
into
dec
std
mov
jne
add
movsl
out
sub
bound
sar
jmp
rclb
scas
cmpsl
jae
cmp
scas
test
in
push
push
sbb
cli
mov
idiv
ja
call
xchg
mov
lret
xchg
inc
xorl
pop
sub
push
ret
mov
out
inc
cmp
inc
rcrb
add
sar
jg
aas
fdivrs
dec
loop
mov
jmp
mov
inc
and
fisubs
int
push
ss
push
adc
or
mov
cmpb
es
f2xm1
jno
pop
fwait
out
je
test
pushl
js
test
adc
cmp
inc
les
mov
adc
mov
pushf
xchg
mov
add
pop
mov
inc
cmp
xchg
call
add
push
lret
lahf
in
jns
rcrl
scas
cli
lods
cs
sbb
push
sbb
daa
stos
push
loopne
repnz
fidivl
mov
mov
cmp
pop
or
mov
or
push
daa
add
push
call
js
btc
test
xor
adc
xchg
xchg
int
loope
push
notl
push
jb
add
add
push
push
mov
ljmp
movsb
jne
out
jmpw
add
dec
or
cltd
cmp
mov
xchg
mov
aas
inc
fisubs
rolb
xchg
bound
les
xor
add
in
decl
mov
sbb
inc
clc
cmp
xor
mov
dec
cmc
or
jecxz
inc
in
push
xor
jns
add
lock
pop
into
filds
call
and
data16
ljmp
fcmovne
adc
outsl
imul
adc
call
xchg
cmp
pop
xor
leave
cli
pop
add
pop
sub
call
incl
dec
xchg
pop
or
ss
xor
dec
jo
popa
and
inc
lcall
inc
ret
test
std
testl
and
inc
jp
and
sbb
ds
cmpsl
sbb
ljmp
cmp
les
or
dec
pop
sub
push
dec
decl
sbb
data16
iret
stc
out
mov
adc
sbb
inc
jne
bound
call
pop
gs
adc
loop
repz
popf
jo
mov
and
inc
pop
jo
push
push
roll
test
call
rcrb
xchg
in
sbb
scas
ljmp
enter
mov
call
jg
mov
fsubr
push
ret
inc
cli
inc
xchg
mov
or
jmp
cmpsb
sbb
push
outsb
or
ret
rcr
sub
test
fld
and
cmpsb
out
jle
jmp
imul
mov
sub
push
adc
dec
call
shll
call
sub
lods
lahf
dec
movsb
sub
repnz
iret
ss
lea
call
pop
jge
popl
sahf
sub
sbb
dec
cmp
test
sbb
sub
out
in
xchg
fs
push
cli
fisttpll
cmp
ljmp
mov
cmp
outsl
mov
cmc
shll
inc
and
pop
cwtl
lock
hlt
loopne
pushl
in
mov
je
push
adcb
inc
cld
xchg
add
inc
and
sahf
ret
or
stos
test
insb
inc
jbe
push
fmuls
dec
inc
ficoml
pusha
cli
xchg
push
js
lcall
and
xor
inc
xchg
enter
add
add
andb
les
jb
insl
popf
sbb
xor
incl
sbb
repnz
in
loope
shrl
rorb
test
sub
loope
das
pop
pop
scas
lods
ss
call
jmp
pop
lcall
xlat
mov
loopne
cmp
adc
xchg
pushl
out
mov
das
sub
pop
mov
cmp
rorb
fs
incl
aaa
ds
arpl
jg
adc
stos
ss
pop
shlb
insl
xacquire
jbe
shll
std
ljmp
lret
sub
dec
out
cli
ficoms
xchg
pop
lods
adc
push
adc
call
xchg
fwait
call
les
push
adc
xor
inc
dec
dec
int
dec
and
out
clc
fistpl
dec
fisubl
inc
rorb
push
xlat
push
scas
cmpl
mov
push
stos
xchg
push
mov
scas
lods
or
lahf
ret
jbe
sub
dec
adc
fildl
fildll
jmp
push
mov
jl
cwtl
xor
pop
repz
lods
cli
and
inc
sub
sub
pop
sbb
pushl
addr16
idivb
and
jno
and
in
dec
mov
in
movsl
jge
ljmp
jmp
insb
out
sbb
jmp
add
shlb
push
push
cmpsl
popa
sub
jne
jle
jmp
xchg
push
loopne
push
xchg
mov
or
mov
fwait
cmp
adc
sbb
lcall
sbb
mov
and
mov
jbe
lods
nop
push
and
ret
iret
xlat
movl
bound
inc
mov
push
jmp
xor
sar
cmp
cmpsl
mov
inc
or
push
scas
dec
fdivrl
inc
adc
scas
into
sbb
add
sahf
lock
jo
add
pop
addr16
mov
mov
mov
push
mov
lea
std
adc
adc
int
lods
dec
cmp
cmp
jo
pop
sbb
outsl
dec
mov
in
call
or
dec
xor
test
adc
push
mov
and
dec
lret
sub
xchg
mov
cmp
mov
cs
xorb
xchg
loop
sbbb
mov
xor
aaa
clc
pop
imul
test
in
test
pop
inc
aas
push
or
ljmp
pop
cmp
inc
nop
adc
stc
push
into
mov
mov
lcall
xor
mov
push
pop
insl
jno
fistpll
jbe
addr16
cltd
fadds
sub
stos
jg
mov
rorb
adc
bound
aaa
cmp
call
outsb
cs
rcrl
sub
mov
inc
test
fs
sub
cmp
stos
fdivr
push
pop
cli
add
lahf
cmp
aam
popf
inc
sbb
stos
je
pop
hlt
call
mov
sbb
mov
xlat
mov
pop
popf
es
xchg
jmp
fbld
or
jns
push
daa
add
ret
out
lods
cmpl
call
cmc
xchg
out
sti
mov
cmp
hlt
ds
faddl
sahf
mov
add
mov
test
lea
imul
add
jge
movsb
inc
mov
imul
cmc
hlt
cmc
cmp
fcmovnu
or
cwtl
mov
pushf
in
out
into
pop
dec
pop
xchg
stc
lcall
outsl
xchg
jg
mov
je
nop
jne
xorl
addr16
ljmp
mov
push
and
mov
cmpsl
and
notl
push
dec
insb
lods
in
inc
mov
lea
out
aaa
cld
call
pop
adc
mov
cmpsb
lea
or
rorb
mov
lcall
es
adc
imul
test
cmpl
push
adc
leave
mov
pop
mov
stos
lcall
inc
mov
bnd
jns
arpl
pop
mulb
cmp
xor
pusha
jecxz
scas
incl
mov
adc
sbb
les
bound
inc
push
sbb
fcomip
add
pop
into
jle
xchg
sub
sub
mov
push
pushf
lret
nop
xchg
aad
aaa
xchg
and
out
movsl
jo
push
or
pop
or
out
inc
jne
and
incl
xchg
ds
test
std
fcomps
add
mov
mov
in
sub
lcall
or
not
out
imul
es
add
pushf
add
pop
mov
stc
push
mov
test
cmp
xor
lock
sarb
jmp
flds
fwait
inc
pop
leave
mov
ds
test
cmp
lea
ror
cmp
clc
pop
std
push
popf
jns
rorb
movsb
clc
stos
xor
add
dec
movsl
aam
add
xor
jmp
cmpsl
pop
mov
or
or
inc
xor
add
xor
in
scas
xchg
lahf
xlat
in
lahf
sbb
fstpl
dec
mov
shll
push
xchg
xor
pop
inc
mov
or
inc
movl
insl
push
xchg
cmpsb
xchg
decl
xchg
ds
and
repz
xchg
adc
loopne
inc
adc
in
es
pop
cmp
push
incl
repnz
aas
cmpsl
mov
inc
dec
push
mov
or
mov
decl
mov
mov
cwtl
mov
cltd
movsb
fs
jmp
adc
sub
stos
cld
fs
lahf
test
push
inc
fdivl
iret
scas
sbb
push
cs
inc
mov
sbb
adc
lea
adc
adc
push
shl
inc
fildll
sti
pop
jmp
lcall
lcall
sub
outsl
or
dec
cli
sbb
call
ret
nop
push
add
cmp
pop
or
xchg
cmp
clc
nop
or
adc
das
sar
fnstenv
or
xor
dec
adc
and
and
mov
std
xchg
rcll
sbbb
iret
and
cmp
pop
inc
cmp
outsl
mulb
xor
push
ss
dec
sbb
cmp
movsl
test
xchg
pop
shll
pop
lcall
iret
cwtl
test
insb
and
mov
and
scas
cmp
call
insb
gs
mov
pop
mov
jo
and
add
addr16
jb
push
jbe
pop
and
ljmp
in
js
mov
ja
mov
mov
pop
jl
jne
clc
xchg
push
ljmp
xchg
mov
cmp
arpl
jmp
arpl
mov
mov
imul
push
pop
or
out
xchg
xchg
std
fldenv
and
subb
and
cli
repnz
popf
testl
dec
mov
dec
insl
inc
jno
fistl
xchg
lret
std
mov
or
ljmp
ret
xchg
outsl
dec
subl
push
inc
mov
in
dec
cmp
sub
sbb
mov
enter
loop
sub
jmp
out
mov
mov
inc
push
lods
mov
hlt
fwait
lret
mov
mov
inc
or
sub
addr16
mov
and
hlt
and
push
pop
stc
popa
push
xchg
lret
xchg
mov
incl
pop
cwtl
pop
aad
lahf
in
ficoms
cmp
sbb
sbb
dec
inc
call
dec
test
lock
jns
or
pop
stos
mov
dec
ljmp
xchg
xor
cmp
ror
xchg
add
add
int
add
or
and
mov
scas
mov
mov
mov
push
mov
pop
test
imul
into
push
xchg
jb
adc
mov
imul
mov
mov
subl
sbb
inc
dec
out
xchg
icebp
pusha
pop
cwtl
das
dec
cwtl
or
rclb
mov
mov
sub
nop
jmp
movb
jb
repz
push
push
hlt
jns
sbb
pop
negb
add
jns
out
push
xchg
or
decl
incb
adc
adc
and
add
and
push
lret
arpl
cs
mov
add
std
inc
ja
mov
mov
mov
inc
push
and
in
push
pusha
cmpsb
push
and
incl
dec
and
stos
inc
aaa
and
in
inc
jbe
scas
inc
sub
scas
add
es
mov
incl
roll
inc
and
inc
outsl
and
sahf
inc
pop
pusha
flds
filds
or
ret
inc
inc
and
test
movb
add
fistps
in
pusha
enter
int
jno
inc
inc
pusha
push
and
int
andb
pop
and
or
inc
pop
and
mov
clc
and
push
push
and
inc
dec
pusha
ljmp
and
test
jo
jb
mov
xor
sub
filds
and
cli
inc
daa
xchg
inc
mov
add
push
mov
pusha
test
dec
and
inc
sbb
inc
pop
and
mov
pusha
int
mov
push
add
mov
sbb
inc
pop
mov
aaa
sub
push
pusha
out
inc
cmp
add
inc
sub
inc
add
data16
cmp
inc
inc
add
inc
jne
mov
lcall
mov
jle
inc
das
pusha
test
xor
scas
inc
sbb
lods
add
xchg
pop
mov
inc
js
add
in
cmp
push
and
sbb
lret
and
mov
jns
repz
push
into
add
inc
add
jge
loop
scas
fcmovu
sbb
movsb
inc
pop
pusha
scas
popa
sahf
add
inc
jp
in
decl
inc
cld
inc
cmp
movsb
adc
inc
pop
adc
add
adc
cli
push
inc
adc
inc
lods
adc
add
adc
inc
mov
mov
pop
adc
inc
mov
call
inc
call
add
adc
inc
notb
inc
mov
mov
inc
out
push
mov
add
call
inc
adc
add
adc
inc
mov
adc
add
adc
inc
mov
das
cli
adc
add
adc
inc
movsb
push
scas
data16
add
adc
inc
ljmp
call
add
adc
inc
xlat
push
rolb
adc
add
adc
inc
fsts
inc
popf
adc
add
adc
inc
ficoms
fiaddl
adc
add
adc
inc
rcll
adcl
lret
adc
inc
enter
mov
add
adc
mov
push
roll
add
adc
inc
notl
inc
mov
lds
adc
inc
cli
push
lret
inc
jg
aaa
lret
adc
jbe
enter
iret
add
adc
inc
loopne
int
dec
adc
add
adc
inc
pop
addr16
dec
and
xor
inc
je
rolb
pushl
addr16
inc
jae
aad
xor
fildl
and
add
cmp
inc
jge
filds
aas
and
inc
js
faddl
and
inc
addr16
add
and
inc
jmp
movb
les
and
add
sub
inc
insb
and
add
call
icebp
inc
adc
lock
push
testb
cmc
add
push
addr16
inc
push
and
add
pop
and
sbb
and
inc
sbb
cld
add
inc
loopw
incl
and
add
inc
gs
add
and
inc
inc
gs
add
mov
inc
and
inc
incl
inc
push
and
inc
dec
gs
push
dec
and
inc
andb
or
mov
in
dec
and
outsb
inc
mov
push
adc
in
adc
inc
push
and
inc
adc
jmp
sbb
out
inc
sbb
inc
pop
and
inc
pop
gs
inc
and
idivb
roll
rolb
and
xchg
inc
and
inc
xchg
push
daa
and
pushl
push
and
sahf
inc
push
fiaddl
and
push
sub
popf
inc
sub
inc
insl
and
push
mov
ljmp
and
inc
push
and
out
push
idivb
mov
gs
and
push
and
gs
and
push
pop
and
and
enter
iret
push
pop
and
inc
adc
int3
push
pop
and
cmp
mov
inc
inc
push
add
jg
push
push
testb
and
inc
sti
push
ss
or
stc
inc
out
clc
push
or
mov
fbstp
mov
and
incl
xor
ja
out
xor
mov
stc
jmp
inc
inc
and
push
add
scas
inc
aas
gs
jmp
gs
jmp
sbb
jnp
out
push
cmp
gs
inc
jl
mov
xchg
daa
hlt
inc
fwait
bound
inc
fbld
mov
cltd
daa
repz
mov
daa
mov
inc
mov
daa
mov
jg
inc
push
add
daa
mov
inc
mov
daa
cmpsb
pop
ss
incl
daa
stos
pop
fisubs
out
inc
fsubs
inc
out
test
frstor
xchg
inc
andb
les
rolb
incl
inc
ret
daa
aad
test
xchg
inc
test
inc
into
daa
fiaddl
mov
pushf
inc
mov
inc
dec
daa
filds
daa
fwait
inc
mov
inc
enter
mov
xchg
inc
mull
roll
daa
addb
pushl
daa
lds
mov
addl
daa
lret
push
inc
mov
incl
daa
lock
mov
testb
cmc
pop
movsl
daa
mov
movsb
sti
inc
out
daa
cli
pop
stos
daa
mov
inc
test
mov
scas
sahf
inc
scas
std
inc
call
incl
loop
xchg
daa
loope
shlb
movsl
inc
shll
inc
xchg
daa
out
daa
mov
call
in
xchg
daa
jmp
scas
push
bound
pop
add
dec
adc
incl
jbe
mov
xor
lock
adc
testl
decl
mov
add
pop
cli
dec
mov
dec
enter
mov
stc
dec
fisubl
ljmp
or
jmp
jae
lods
dec
xor
lods
or
push
xchg
dec
daa
inc
rorb
push
rorl
or
cli
decl
inc
fisttpl
push
fimull
push
push
fwait
dec
rcr
dec
test
orb
jg
leave
dec
repnz
mov
inc
into
dec
jl
int
xor
mov
inc
cld
dec
push
stos
push
in
andl
add
dec
dec
je
repz
add
dec
pop
add
or
add
dec
pop
add
or
add
dec
sbb
jl
or
add
jg
test
std
or
add
in
pop
loop
pop
mov
push
movsb
dec
loop
dec
repnz
call
cld
jmp
dec
bound
in
aas
add
push
add
or
add
dec
pop
mov
add
or
lock
sbb
dec
pop
add
or
add
dec
pop
decl
lock
dec
inc
add
or
add
dec
xor
mov
dec
inc
fdivr
incl
dec
add
loop
inc
inc
cmpsb
dec
push
add
loope
dec
inc
stos
mov
loop
jbe
add
dec
cmp
dec
js
lods
or
adc
decl
xlat
dec
or
nop
dec
dec
inc
fimull
add
lcall
add
or
fadds
cltd
dec
mov
add
or
add
dec
cmovno
dec
dec
add
or
inc
les
jmp
lret
add
dec
xchg
add
or
inc
int3
dec
clc
add
or
jg
fildll
mov
or
testb
cmc
inc
sti
jg
or
mov
mov
add
or
xchg
add
or
mov
dec
xor
jecxz
xor
cmpsl
push
inc
outsb
or
mov
push
add
dec
cmp
in
jle
mov
jmp
push
add
or
inc
call
or
add
inc
in
mov
sub
incl
or
and
dec
sub
push
mov
mov
push
rorb
das
cli
out
clc
cmp
xchg
dec
sbb
dec
or
or
push
lcall
sbb
or
test
inc
lds
lret
or
mov
dec
decl
inc
iret
dec
hlt
push
out
or
dec
xchg
repnz
and
incl
and
dec
andb
or
and
dec
and
or
and
dec
decl
and
or
and
dec
mov
jecxz
repz
dec
mov
loopne
push
and
dec
mov
in
cmc
and
dec
mov
and
call
mov
adc
cmc
dec
adc
dec
push
sub
dec
adc
sub
dec
lcall
outsl
mov
or
pop
outsl
mov
or
sbb
mov
or
add
in
add
dec
inc
sub
dec
push
outsl
movsl
les
movsb
or
decl
outsl
stos
dec
dec
sub
dec
or
dec
dec
sub
dec
or
sub
decl
xor
dec
je
rorb
aaa
outsl
dec
jae
aad
xor
outsl
decl
sub
or
cmp
dec
jge
fisttps
outsl
fisttpll
sub
or
decl
outsl
ret
sub
or
and
dec
bound
or
and
sub
das
clc
decl
sub
dec
insb
sub
or
sub
repz
mov
out
pop
cmp
into
sub
or
outsl
aaa
aas
cmp
sub
or
into
sub
or
jns
incl
sub
or
inc
outsl
loop
mov
pop
cmp
clc
outsl
out
out
out
inc
sub
sub
or
dec
sub
adc
cmc
dec
and
dec
bound
lock
in
jmp
adc
decl
dec
insb
adc
cli
dec
das
push
mov
mov
dec
sub
mov
push
push
adc
mov
push
push
adc
jmp
push
push
adc
stos
dec
pop
adc
in
dec
pop
push
scas
dec
sbb
jmp
pop
push
lods
dec
sbb
xchg
dec
inc
push
rcrl
push
inc
adc
call
dec
add
xchg
dec
inc
push
fisttpl
adc
pushf
dec
dec
push
fmuls
adc
or
call
fisttpll
adc
xchg
ret
adc
decl
jno
test
push
dec
xor
orb
les
xor
dec
mov
decl
xor
mov
jo
dec
out
int
mov
jo
dec
loop
repnz
cmpsb
xor
movsl
jo
loope
testl
stos
jo
dec
in
xor
mov
scas
jo
xor
mov
dec
xchg
xor
mov
fbld
cld
dec
cmp
push
loope
sub
mov
out
rclb
mov
dec
mov
xor
ljmp
adc
scas
push
add
and
mov
fldcw
testl
int
and
and
ljmp
cld
add
and
inc
sbb
or
push
sbb
out
int
sbb
pop
inc
push
cs
inc
int
jns
add
dec
in
cmp
imul
inc
inc
xor
add
repz
repz
xor
out
fidivs
cmp
aas
jno
jge
idivl
cs
pop
cmp
sahf
push
xchg
dec
xor
sahf
mov
repz
pop
andb
cmpb
cmp
xchg
pusha
ret
aaa
iret
repz
out
jae
pop
xor
repz
jle
xor
repz
repz
repz
enter
mov
cmp
js
cmp
jle
jge
cmp
sahf
cmpsl
mov
cmp
repz
xor
jo,pn
ja
out
fdivp
xor
sahf
out
sahf
stos
ds
jp
arpl
out
lods
daa
shll
out
sahf
out
shll
shlb
out
sahf
xchg
gs
and
imul
jns
push
sub
out
sahf
out
pushf
outsl
fsubrs
sahf
out
sahf
fildll
insb
fst
jns
out
fcoml
jns
out
rcll
sahf
rol
xchg
mov
jns
out
icebp
div
mov
stc
cmp
repz
cli
repnz
mov
repz
cmpsl
mov
je
repz
cmp
push
push
adc
jnp
add
out
jp
sahf
xchg
add
sbb
push
xchg
inc
adc
outsb
push
into
add
into
repz
pushl
jno
push
sub
loope
punpcklwd
fildl
adc
dec
repz
cld
or
and
and
popa
iret
outsl
dec
add
and
outsl
out
outsl
jle
inc
inc
and
sub
jecxz
bound
cli
add
and
sub
insb
roll
or
insb
push
mov
jle
out
das
cs
add
and
stc
out
jnp
mov
add
jmp
sbb
loopne
aaa
incl
ja
repz
inc
and
insl
push
add
out
pop
mov
insl
push
mov
mov
sahf
jg
stc
rolb
and
ret
inc
pop
and
out
inc
cmp
test
mov
or
gs
daa
out
aas
jmp
push
bound
jbe
lahf
jg
stc
pusha
inc
pop
popa
mov
add
push
inc
inc
push
and
es
jg
stc
out
popa
push
addl
inc
push
and
daa
inc
pop
popa
cmpsb
mov
mov
push
es
outsl
xchg
fwait
arpl
or
xchg
inc
jo
rcrl
inc
push
popa
stos
enter
imul
mov
cmp
subl
push
shlb
imul
jg
jp,pn
arpl
cwtl
add
jle
mov
ret
and
shll
mov
popa
push
jge
idiv
jnp
and
xchg
cs
add
cld
repnz
mov
add
mov
push
and
and
pop
popa
pop
mov
cmc
add
mov
jge
lcall
cs
and
and
jg
inc
dec
and
sub
aaa
popa
jnp
fsubrp
loopne
mov
inc
cs
pop
cs
add
and
outsl
inc
inc
and
mov
pusha
lock
inc
inc
inc
and
inc
or
lcall
pop
or
ret
fwait
push
xchg
fstps
cs
pop
dec
icebp
mov
cs
mov
jnp
push
out
push
and
lock
jbe
xor
jle
cs
mov
add
fs
outsb
inc
dec
and
and
inc
sbb
lcall
cwtl
xchg
sub
and
dec
inc
adc
sarl
cmpsl
cmpsb
mov
and
lcall
add
and
leave
outsl
and
sbb
push
pop
xor
testl
pop
sub
mov
out
jns
cmp
sbb
or
mov
lahf
xchg
repz
jbe
adc
mov
imul
mov
dec
ljmp
ret
pop
mov
jns
fidivs
dec
lahf
and
xchg
mov
mov
faddp
repz
or
insl
push
push
mov
dec
je
sahf
sbb
push
and
xor
fisubs
mov
cmp
push
jbe
loop
mov
cmp
sbb
push
clc
push
mov
inc
lret
pop
dec
mov
or
ja
int3
int
pop
jle
pop
mov
sahf
out
sti
mov
cs
pop
ds
shl
ljmp
pop
add
and
xchg
pop
and
das
pop
mov
cs
lret
jns
jnp
dec
ucomiss
cs
pop
orb
shr
out
xchg
mov
sbb
fidivs
lret
cs
add
and
adc
sahf
jg
inc
dec
and
mov
pop
icebp
push
sahf
rcrb
sub
mov
cs
shrb
push
mov
cmp
call
pop
mov
insl
out
loopne
fimuls
adc
dec
push
cs
cmp
and
sbb
pop
push
in
aas
cmp
lcall
stos
ret
jnp
call
add
mov
cs
out
cs
push
sub
jae,pt
adc
into
jp
cmp
sub
or
sbb
cmp
jnp
pop
adc
fisubrs
cmp
inc
inc
and
sbb
inc
push
pop
outsb
mov
ljmp
push
mov
mov
lock
out
ficomps
iret
aas
movsl
aad
mov
jnp
inc
and
and
ret
int
daa
cs
add
and
mov
imul
mov
pop
out
imul
outsb
repnz
jns
jg
cmp
and
shll
add
cmp
dec
push
cs
pop
cmp
jle
mov
jecxz
jle
mov
dec
jnp
cmc
add
lret
sbb
scas
loop
stc
out
xor
adc
popa
addr16
add
and
sahf
sahf
jg
mov
and
mov
popa
pop
jl
pop
pop
xor
adc
lret
pop
push
cmc
imul
pop
outsb
sbb
jnp
sub
add
cs
scas
out
loope
fisubrs
outsb
imulb
dec
lds
pop
scas
fwait
cs
push
addr16
fdivp
push
ficoms
cs
dec
sub
mov
mov
dec
sub
jmp
lahf
out
mov
iret
sbb
fistps
out
cmp
cs
pop
mov
popa
iret
repz
shll
jl
jne
dec
jnp
popl
das
pop
rclb
outsb
pusha
push
inc
add
jbe
and
popa
and
pop
adc
push
mov
mov
jge
add
jo
and
jl
pop
out
cmp
loopne
jge
push
popa
popa
inc
aaa
mov
push
xor
cmp
jg
add
mov
add
and
ret
and
cld
popa
push
sub
inc
push
into
jnp
mov
cs
dec
dec
imul
cmp
jo
sub
mov
jb
out
clc
pop
mov
ss
and
inc
sub
aas
rcll
mov
add
es
mov
ds
lret
jo
clc
call
inc
inc
mov
je
jp
cmp
pusha
dec
lcall
dec
pop
xor
push
data16
and
jg
and
ja
jne
inc
cmp
jge
push
and
push
push
jb
and
push
or
aaa
push
push
jb
mov
pop
pop
xor
adc
adc
insl
jle
je
imulb
push
gs
cmp
add
sub
mov
outsl
lock
pop
adc
mov
xor
jo
in
xorb
ljmp
dec
xor
ja
aaa
fidivrl
insb
jbe
imul
out
ja
jg
pop
inc
js
aaa
dec
pop
outsb
mov
arpl
sub
das
xchg
inc
push
and
inc
pop
push
push
jle
aaa
push
jp
jg
adc
cs
xor
gs
decl
decl
xor
cmp
imul
and
jbe
inc
xor
jb
jg
mov
push
inc
gs
xor
and
sarl
sub
and
cs
and
adc
jg
sbb
cmpsb
mull
adc
push
xchg
es
add
hlt
mov
insb
mov
pop
inc
xchg
or
inc
jg
stos
fisubrs
pop
push
jle
ja
push
and
jle
pushl
and
push
adc
and
xor
push
in
adcb
cmpsl
jne
inc
popf
clc
push
cld
scas
add
jno
popa
add
jp
ja
andb
fistpll
stos
ss
sbb
movb
push
inc
ja
mov
jbe
cmp
scas
or
jl
cmpsl
cmp
mov
pop
push
inc
je
je
push
push
jg
mov
lahf
sub
outsb
or
and
jmp
sub
insb
push
mov
and
cmp
int
xchg
or
push
ds
cmp
ljmp
pop
cmpsb
and
inc
popa
out
and
sub
jbe
and
inc
jns
aaa
push
call
and
jp
aaa
xor
jge
push
or
cs
adc
inc
jg
lock
xor
pusha
and
push
pmuludq
xorl
dec
cmp
arpl
cmp
mov
sub
push
inc
xchg
aaa
jl
push
adc
dec
jge
jbe
and
movlps
and
dec
addr16
or
push
mov
sbb
sti
loope
cmp
jl
jp
xor
cs
and
bound
ucomiss
inc
jp
ja
jge,pt
jbe
ss
cli
scas
imul
or
inc
dec
inc
jo
inc
loopne
inc
push
inc
sbb
xor
aaa
jge
or
xchg
sbb
rclb
jo
clc
push
add
ffreep
mov
pushf
xchg
cmp
mov
xchg
push
jbe
aad
push
loope
jg
or
aam
cmp
fnop
cmp
pop
dec
nop
call
pop
xchg
push
xchg
inc
xchg
mov
dec
ret
lock
cld
pop
xlat
sbb
fs
jg
aas
xchg
adc
inc
mov
ja
into
loop
pop
inc
test
jge
fildll
add
jmp
call
pop
xchg
int3
pop
inc
into
cmpsl
int3
das
pop
icebp
lret
jg
and
popa
dec
xchg
lds
mov
jmp
and
daa
jl
sbb
bound
popl
jg
or
and
push
or
sti
paddd
mov
and
ss
xor
lods
lods
into
fmull
insb
mov
pop
scas
cwtl
int3
xchg
rcrl
and
out
pop
mulps
outsl
cli
xor
cwtl
aad
enter
into
cmpsl
sub
in
mov
and
into
xchg
pop
adc
inc
pusha
negb
jl
or
das
inc
fbstp
inc
push
out
gs
fwait
mov
lods
cwtl
mov
daa
dec
fistpl
insl
inc
ret
decl
pusha
in
adc
adc
pop
dec
xor
aaa
fwait
jmp
inc
push
inc
scas
cmpsl
enter
sahf
push
fs
dec
popf
pop
xchg
jns
fucomp
lcall
lahf
cwtl
add
sbb
push
push
pop
pop
std
aas
inc
addb
adc
aad
jmp
stos
cmp
jg
lcall
lods
jae
sarb
xchg
daa
pop
dec
shll
or
push
insb
inc
iret
jne
and
scas
and
leave
ljmp
sbb
int3
mov
outsl
call
rcr
fldl
pop
or
cwtl
lods
xchg
mov
out
insb
push
xor
or
das
cli
mov
incl
call
mov
pop
mov
xchg
xor
mov
lea
or
lods
dec
lods
sub
pop
das
decl
les
jnp
lods
in
aad
out
jmp
mov
sahf
jmp
out
mov
inc
stc
mov
mov
mov
xchg
divl
xor
add
xchg
cmpsl
decl
out
jno
push
int3
scas
loop
xchg
mov
jmp
aas
sbb
scas
jbe
or
int3
mov
scas
mov
push
stc
or
inc
or
das
cmc
adc
popw
and
xchg
or
push
jg
mull
adc
mov
daa
adc
lods
and
cmpsb
or
pop
add
cwtl
aas
dec
cwtl
nop
xchg
adc
cmc
sbbb
scas
and
mov
cmpsb
mov
fisubs
bound
pop
cmp
inc
jo
jle
dec
arpl
cmp
jnp
mov
jbe
xlat
push
dec
cmp
pusha
add
mov
xor
popa
inc
pop
or
imul
mov
jbe
out
xor
std
call
sub
inc
jl
jle
xor
jg
jo
addr16
stos
ret
sub
add
imul
ja
jg
sub
ss
rep
fstpl
jo
jnp
xor
insb
sahf
int
ja,pn
gs
and
jb
aaa
lcall
data16
push
dec
outsl
popa
jb
outsb
jb
push
and
sbb
aas
sub
popa
sub
scas
push
arpl
lcall
or
sub
sbb
push
inc
ja
adc
aaa
pop
inc
dec
jge
push
dec
cmp
push
mov
inc
jno
ja
xor
jnp
push
cmp
outsl
enter
fnstsw
ja
jo
jecxz
aaa
and
jle
xor
add
data16
popa
data16
cmp
lcall
es
jge
das
inc
pop
mov
cmp
inc
push
mov
push
inc
cmp
pop
pop
jne
mov
cmp
inc
ds
out
jb,pn
aas
mov
push
add
jge
adc
mov
pop
pop
xor
xorb
mulb
popa
daa
inc
cs
add
jbe
pop
jae
sbb
xor
jbe
das
insl
jge
push
cli
or
xor
arpl
dec
xlat
and
lds
xlat
jbe
sub
js
shr
jbe
jbe
and
and
xchg
repz
ss
push
fs
je
push
ds
jo
and
dec
push
rcr
mov
dec
data16
push
xor
cmp
xchg
push
adc
insl
jbe
and
jg
jo
pop
pop
and
mov
shrl
out
xor
outsb
jle
push
or
jl
cmp
xor
xor
push
push
or
jbe
imul
xor
es
push
ss
add
sub
xor
scas
mov
fists
xor
lock
sbb
pop
inc
jbe
xor
std
insb
xor
adc
push
addr16
addr16
push
aam
push
je
aam
push
orl
out
jo
cld
lcall
xchg
dec
cmp
jb
daa
imul
arpl
push
jno
xor
pushl
pop
xor
insl
adc
dec
and
jae
outsb
ja
and
xor
inc
arpl
and
adc
xchg
je
cmp
or
test
inc
sub
aaa
jg
out
inc
jg
inc
sbb
cmpb
mov
jb
inc
xor
je
adc
and
push
mov
jle
push
test
cmp
es
aas
pop
mov
push
insl
cs
data16
mov
inc
xor
mov
stc
decl
and
inc
popa
popa
jp
and
xchg
sub
mov
repz
scas
pop
push
jle
cmpsb
inc
cmp
neg
add
sbb
popa
cmp
sub
aad
mov
imul
scas
mov
lcall
or
sub
push
push
pop
addr16
loop
out
push
gs
push
dec
cmp
bound
pusha
dec
adc
cmp
jge
push
inc
pop
pusha
xor
adc
mov
inc
xor
es
popa
jae
push
and
dec
data16
test
pop
out
rcrl
dec
daa
jne
aas
jne
fwait
hlt
out
jg
mov
push
and
xchg
jns
popa
xchg
sbb
xchg
lcall
and
inc
push
adc
adc
push
inc
scas
sub
call
arpl
dec
pop
add
or
cs
dec
sbb
loopne
arpl
popf
cmp
pusha
adc
inc
push
popa
pusha
dec
xor
xchg
dec
arpl
sub
shll
or
mov
out
push
mov
jl
inc
or
jle
xchg
scas
dec
aaa
add
inc
pop
scas
dec
push
push
jp
js
into
add
push
out
incb
jmp
mov
inc
inc
push
add
push
inc
insl
lds
push
testb
mov
adc
jl
adc
int
push
and
inc
pop
popa
pop
jbe
inc
adc
inc
pop
dec
and
sub
je
js
clc
dec
and
pop
push
aaa
sub
pop
je
out
push
push
jbe
pop
outsl
enter
and
sub
insl
adc
dec
sbb
push
pop
xor
in
push
xchg
pop
xchg
pop
xor
rcll
gs
dec
inc
and
jb
ja
mov
out
and
and
jne
sbb
cs
ja
sti
data16
or
jb
and
jb
jbe
and
data16
ret
pop
es
cmp
jbe
inc
fcomp
jne
xor
imul
pop
add
and
das
aaa
push
jb
jo
aas
xor
test
and
push
cmp
loop
pop
sub
add
outsl
out
mov
sub
jp
ja
push
sbb
and
add
bound
popa
pop
push
push
into
mov
jle
out
fwait
leave
aaa
leave
xor
dec
or
jns
out
inc
pop
sbb
cmp
repz
mov
mov
sti
divl
aas
inc
ss
mov
pusha
add
xor
call
incl
and
xor
push
insb
pusha
and
adc
scas
insl
gs
jb
and
inc
addr16
dec
add
pop
add
mov
jbe
insb
add
jo
inc
ds
mov
imul
sub
pop
pop
dec
push
add
es
ds
jb
xor
std
mov
pop
xor
das
push
jbe
pop
gs
and
into
out
adc
dec
xor
push
jge
and
insb
mov
xor
push
add
xor
sbb
inc
xor
jnp
cmp
jo
dec
imul
push
add
push
addr16
cmp
mov
jo
push
jbe
pusha
xchg
mov
clc
cmpsb
xor
jo
cmp
js
fisubs
cwtl
add
dec
dec
mov
ss
jnp
push
push
and
gs
dec
xchg
pop
xchg
iret
sub
dec
jl
jbe
pop
out
push
mov
xor
jbe
inc
or
mov
sub
pop
inc
pop
movb
push
lret
pop
aas
jb
je
push
pop
push
mov
aaa
je
outsl
insb
jl
jle
cmc
or
sbb
pop
lahf
jg
xor
jp
sbb
sbb
dec
and
xchg
adc
push
dec
addr16
das
pop
es
cmpsl
sbb
pop
sub
mov
xor
push
jle
push
mov
cmp
push
ljmp
ja
add
and
and
data16
dec
jg
and
inc
inc
push
add
xor
xor
sub
std
sbb
mov
cmp
or
das
fs
xor
arpl
test
xor
sbb
nop
cmp
popa
xor
lods
cmc
mov
jbe
dec
add
cs
pop
pop
stos
push
jg
and
dec
pop
outsl
xor
xor
cmp
inc
and
dec
sbb
mov
xor
jno
jne
xor
inc
add
xor
push
xor
sbb
or
jp
inc
sbb
pop
and
loope
inc
jp
jge
outsb
js
add
pusha
roll
js
jg
fildll
jle
jl
cmp
outsl
js
adc
inc
ss
pop
xor
les
pop
test
dec
push
rcll
sahf
and
pusha
data16
fidivs
push
jo
push
xor
inc
jp
jb
out
sub
sbb
fbld
mov
cmp
lahf
adc
and
push
dec
mov
xlat
lea
les
cs
push
movb
fists
ja
data16
sub
test
pusha
pop
scas
inc
outsb
popa
push
addb
insb
mov
sub
sahf
xchg
adc
sahf
jl
mov
mov
inc
cmpsb
jne
lods
xlat
mov
xchg
jb
xor
add
xor
and
jge
push
popa
pop
jge
add
fwait
icebp
mov
and
cmp
xchg
jp
ds
inc
mov
stos
inc
scas
jg
mov
out
shrb
inc
jle
das
movsl
adc
inc
sahf
pusha
xchg
sub
xor
rcr
popa
outsl
daa
out
pop
test
data16
dec
cmp
outsl
jge
aas
and
jp
outsb
add
add
adc
sub
push
idivl
mov
pop
into
push
add
jbe
idivl
push
mov
jp
push
adc
adc
pop
popa
push
cs
or
rol
jle
cmp
jbe
inc
cmp
push
jle,pt
outsb
addr16
inc
push
sbb
adc
jo
xlat
push
je
adc
jle
mov
mov
push
jo
out
sub
lods
pop
ja
dec
out
sbb
out
popa
inc
cmp
decl
lods
sbb
mov
fcompl
inc
ss
js
lock
xor
aaa
dec
jp
pushf
push
fildll
out
sbb
push
inc
loope
xchg
inc
ds
add
jp
aas
jb
sahf
jbe
cs
push
jbe
push
imull
inc
ja
out
lock
mov
jecxz
ss
adc
movsb
cli
js
pop
jp
jl
movl
mul
loope
in
and
push
push
push
push
cltd
icebp
jne
fbld
mov
sbb
mov
incl
cmp
icebp
push
push
aaa
jp
aas
inc
addw
xchg
or
dec
jne
dec
xchg
sbb
xchg
add
push
dec
and
stos
push
dec
pop
jg
inc
popa
mov
adc
jg
inc
daa
pusha
ss
xor
popa
add
paddb
jb
sbb
adc
das
gs
clc
push
js
push
adc
inc
push
push
xor
mov
jbe
inc
aaa
outsb
clc
and
fnsave
inc
incl
cmp
cwtl
sbb
lcall
and
sbb
sub
out
pop
push
es
adc
dec
jb
xor
mov
rcrb
push
cmp
divb
dec
xchg
arpl
push
add
syscall
xchg
scas
pop
test
mov
cs
test
ds
scas
ja
scas
mov
dec
and
ja
int
sub
aas
push
push
xor
push
pop
hlt
mov
cwtl
inc
pop
sbb
inc
inc
jg
inc
popa
pop
inc
add
cs
outsl
lcall
rorl
push
popa
and
inc
es
inc
loop,pn
pop
push
call
xor
mov
int
sbb
lods
dec
outsb
movsb
add
adc
loope
lcall
shr
pop
sbbb
gs
jne
pop
inc
and
pop
push
dec
movsl
xchg
fbld
pushf
inc
sbb
das
sub
jbe
pop
and
ja
incl
mov
sbb
push
adc
sbb
pop
fisubl
sub
xchg
inc
pop
mov
inc
cmpsl
sub
outsb
xchg
fcom
notb
push
decl
enter
in
je
xor
cmpsb
push
mov
test
inc
incl
adc
jle
xor
test
test
ljmp
pushw
cmp
sahf
in
mov
les
adcl
lods
stc
fstl
add
fcmovnb
dec
sahf
cld
in
mov
inc
int3
lret
mov
xor
test
push
call
push
out
addl
push
arpl
inc
test
pushl
push
and
pop
jns
cmp
sahf
and
adc
adc
adc
adc
js
push
fadds
dec
nop
popa
sbb
aam
stos
inc
ss
adc
mov
push
dec
push
xchg
insl
adc
inc
push
sub
add
dec
cwtl
inc
shll
pushl
sahf
mov
lahf
mov
fldl
scas
incl
pushl
adc
pop
sbb
sahf
push
and
faddl
xchg
gs
inc
in
push
mov
lret
lcall
sub
rcrb
inc
popa
sub
lods
sub
pop
mov
mov
leave
sub
sbb
adc
clc
or
lret
mov
and
sub
data16
gs
mov
jg
and
push
lcall
push
clc
pop
fistpll
cmp
fmulp
adc
cmpsb
rolb
mov
mov
clc
and
pusha
cli
cli
lea
ss
mov
add
sbb
mov
jmp
int3
pop
mov
rolb
add
iret
mov
decl
xor
call
scas
add
lcall
data16
xchg
das
sahf
sub
test
cld
xor
insb
sbb
dec
ficoms
das
mov
xchg
imul
mov
jb
adc
add
pop
rorb
rcr
fbstp
nopl
jno
enter
in
lods
in
testb
aad
pop
xchg
add
test
sub
inc
adc
jge
rcrb
jle
xlat
test
outsb
sbb
push
mov
sahf
adc
fldt
fistpll
adc
popa
in
and
sahf
add
sbb
pop
mov
in
in
adc
xchg
mov
jg
out
in
cli
mov
push
ror
in
sahf
addr16
pop
repz
pop
fwait
jle
dec
out
sbb
fldl
fcmovbe
sub
lcall
in
test
inc
add
es
jo
int3
jbe
push
pop
push
lcall
loop
push
mov
and
data16
gs
xchg
mov
mov
cmp
push
cld
or
sub
shrb
addr16
mov
decl
es
fldt
adc
pop
adc
lock
ja
inc
xlat
je
dec
ljmp
jb
xchg
in
push
in
adc
lods
or
or
dec
test
inc
incl
adc
mov
in
inc
mov
or
mov
push
sub
shrl
mov
or
cli
repz
std
xchg
mov
popa
inc
imul
fildl
cmpsl
xor
push
mov
add
outsb
mov
ds
inc
mov
outsl
xor
je
test
fsubrs
dec
cmpsw
jle
fnstcw
roll
scas
or
in
jbe
int3
rorl
pop
mov
pop
int3
mov
xor
enter
pop
jg
int3
cmp
mov
pop
mov
cmpsb
data16
popa
mov
outsw
mov
aam
and
mov
stos
lcall
in
jne
jb
in
faddp
scas
and
push
mov
sbb
in
sbbl
testb
lock
mov
add
in
pop
push
cmp
int
inc
data16
jle
xchg
adc
adc
or
cli
gs
adc
out
inc
dec
dec
data16
movsl
loop
and
sti
sbb
xchg
daa
jbe
test
enter
in
xchg
xchg
sti
and
inc
push
xchg
pop
gs
xchg
sub
adc
arpl
adc
les
mov
rcrl
movsl
dec
popf
push
adc
cld
ljmp
xor
jne
rorl
push
inc
outsl
rcl
ror
pop
popf
pop
mov
jmp
dec
frstor
insl
shlb
mov
and
jl
repz
shlb
dec
push
sti
mov
push
add
outsb
rcrl
push
jg
pop
ja
setbe
push
pop
sub
sbb
iret
adc
into
mov
aas
mov
sti
stos
mov
ret
add
loope
fwait
xchg
out
cwtl
out
into
push
lea
mov
outsl
and
pop
je
xlat
out
mov
js
loop
adc
pop
pop
dec
sarl
adc
test
sbb
dec
jns
dec
cmp
push
push
sarb
cmp
sahf
inc
pop
je
shlb
insl
in
idivb
movq
inc
dec
pop
jmp
sub
lock
rcll
push
pop
pop
mov
popf
inc
notb
lea
mov
into
aad
push
mov
out
sahf
sbb
pop
out
lea
mov
call
mov
fbstp
mov
pop
jbe
scas
push
shrb
fstpt
scas
fxch
sbb
push
cwtl
and
jle
push
out
shll
inc
popa
mov
xor
int3
pop
in
xor
sub
jecxz
ss
nop
mov
adc
jecxz
push
ss
out
hlt
rclb
dec
mov
sub
jbe,pt
adc
outsb
or
push
gs
xchg
add
jno
lock
mov
cmp
dec
pop
cwtl
inc
insl
cmpsl
rolb
nop
pop
mov
imul
jle
xchg
pop
std
jbe
sar
xchg
xchg
adc
scas
pop
jle
pop
mov
jecxz
mov
mov
aam
and
call
push
mov
push
mov
test
loop
mov
sub
mov
xchg
pop
cmpsl
mov
nop
mov
pop
rcrl
dec
movsb
in
test
dec
insl
sub
dec
push
lea
scas
es
xchg
xchg
daa
int3
push
push
mov
stos
shrb
in
mov
fistps
in
and
push
ljmp
sub
call
jp
jbe
ja
scas
call
pop
mov
outsb
aad
inc
push
inc
cmc
push
and
jle
pop
pop
sub
out
shld
addr16
out
dec
fwait
adc
aad
aas
push
decl
mov
adc
shlb
pop
inc
and
jns
int
cld
pop
bound
dec
aad
jecxz
gs
in
and
sbb
rorb
push
cmp
out
cmp
fucomi
pop
jnp
shl
loop
scas
mov
or
aas
inc
ja
addl
data16
fs
loope
scas
adc
into
adc
and
nop
fsubrl
mov
lods
out
push
mov
lcall
pop
std
cwtl
or
push
inc
xor
inc
fidivl
mov
xchg
sbb
add
cwtl
adc
lods
sbb
adc
add
sub
mov
adc
adc
adc
mov
cwtl
or
mov
int
pop
iret
test
fwait
sbb
pop
jl
inc
lcall
das
add
nop
test
mov
inc
fstl
push
int3
xor
jno
push
push
cwtl
mov
push
movl
sbbl
loopne
sti
data16
jmp
in
and
out
jo
ret
sbb
bound
fbld
call
lahf
adc
sbb
mov
int3
xorb
mov
fildl
data16
jle
jecxz
mov
cld
scas
scas
in
pusha
dec
cmpsb
jecxz
dec
sub
mull
arpl
into
and
daa
jg
add
add
fistl
inc
cmpsl
mov
mov
outsb
sarb
and
add
fs
jae
int3
imul
inc
cmpsb
sti
jno
add
into
cmpsb
fnstsw
push
sti
inc
fs
mov
lcall
push
aad
mov
sbb
testl
inc
call
fsubr
xchg
movsb
outsb
notl
xchg
imul
sub
pushf
inc
sbb
sub
sti
jle
shll
ret
test
clc
inc
jno
in
nop
enter
pushl
outsb
insl
in
xor
push
adc
test
push
mov
or
push
xor
mov
rcl
push
sahf
aas
push
repnz
push
popa
clc
stos
frstor
mov
xor
fwait
pop
push
xchg
inc
aad
jmp
and
xor
xchg
cltd
add
push
cmc
jns
fildl
out
push
loop
hlt
push
sub
cmpsb
xchg
shrb
xchg
ret
call
inc
int3
jle
dec
dec
add
call
incb
inc
and
rclb
test
fucomip
cmp
dec
mov
fisttpll
jne
push
xchg
lods
mov
adc
pop
call
cld
xor
enter
fs
lret
sti
daa
jns
in
xor
add
pop
ret
fldl
xor
call
ret
lock
rol
inc
dec
ret
dec
xchg
sbb
icebp
loope
shrl
cs
sete
cmpsb
push
in
call
fmuls
incl
add
jmp
xchg
in
dec
push
loopne
jg
lahf
pop
jle
int
mov
push
sahf
mov
or
sub
inc
pop
clc
pop
fstpl
mov
and
inc
sub
adc
and
xchg
data16
ss
inc
or
out
std
aas
mov
inc
call
sahf
xchg
sbb
pop
loope
push
inc
adc
mov
mov
sub
insl
fbstp
mov
sahf
inc
ret
je
inc
cld
pusha
push
push
jl
into
hlt
pop
repz
test
fwait
lock
dec
rorb
push
push
mov
call
dec
push
enter
aad
adc
nop
lahf
cmp
jbe
jns
add
sti
inc
in
lahf
adc
pop
icebp
pop
fnstenv
lcall
nop
mov
push
pop
es
jmp
jg
jmp
test
push
das
dec
ss
lods
add
mov
adc
xchg
sti
ficoml
push
into
cmp
out
call
mov
aad
adc
adc
std
mov
leave
shll
push
and
rorl
call
aas
dec
dec
add
scas
cmpsb
in
push
outsb
inc
int3
fadds
mov
mov
int3
cmp
push
into
pop
cmc
and
pop
jns
push
clc
gs
lods
and
or
sbb
shrl
lds
adc
lret
push
rclb
mov
adc
ret
in
test
mov
adc
decl
inc
cld
jb
lock
add
in
mov
int3
mov
incl
xchg
test
cmp
xor
aaa
sti
push
push
movsb
sub
gs
add
fcompl
jp
ret
pushl
decl
mov
shlb
test
jne
jecxz
lea
repz
std
mov
data16
popa
cmpsl
jmp
mov
sub
mov
xchg
ss
je
dec
and
not
cmpsl
sbb
push
xchg
mov
jno
call
pop
push
daa
push
inc
ja
dec
sar
mov
push
lods
push
add
out
pop
jns
inc
mov
and
push
iret
or
and
jae
adc
or
incl
push
push
rcrl
in
xchg
adc
ds
jl,pn
ljmp
jne
mov
nop
pop
sti
sub
push
loopne
dec
pop
je
scas
sub
jbe
orl
out
loop
scas
dec
aad
pop
xchg
pop
rcrl
or
lcall
test
xchg
in
aam
jmp
sahf
push
loope
fs
call
inc
jbe
gs
jne
shrl
repnz
mov
mov
int3
cltd
das
into
xor
inc
mov
jnp
jg
sub
gs
in
movsl
mov
scas
data16
pop
lea
and
push
inc
jb
sti
je
jg
jl
jecxz
test
je
cmpsl
mov
xor
ljmp
loope
scas
fs
lods
lods
jl
fildl
aaa
les
into
xchg
scas
fucomp
aas
orps
sbb
je
sbbb
ffreep
pop
jge
inc
push
xor
sub
fucomp
sti
std
cmp
mov
sbb
push
adc
or
inc
or
mov
sahf
sti
dec
push
into
jmp
call
push
adc
mov
push
mov
fsubrp
loopne
sti
cmp
jnp
xchg
jg
mov
cmp
pop
cli
neg
xlat
test
sahf
jnp
sub
mov
or
adc
fs
sbbb
mov
lods
loopne
insl
incl
cmp
test
sahf
and
push
fisttpll
lcall
jb
inc
lea
dec
lods
inc
lahf
push
xchg
jecxz
xchg
shlb
jle
mov
insb
xchg
adc
out
loope
cs
jl
adc
or
push
mov
jge
cmc
pop
jecxz
rcll
cmpsb
sub
sti
and
adc
jle
push
lods
ss
pop
sub
inc
fbstp
aaa
adc
sub
adc
or
sbb
pusha
add
sub
push
imul
mov
push
test
adc
fisubrl
jl
push
push
and
jns
out
add
and
ud0
mov
cs
push
cmp
movswl
ss
ljmp
pop
or
lcall
aaa
push
insb
xor
adc
pop
jmp
dec
push
das
adc
in
push
ljmp
push
xchg
mov
inc
lods
ljmp
aaa
loopne
xlat
pop
push
pop
call
inc
mov
outsl
negb
addr16
dec
fcmovnb
pop
cmpsl
test
xchg
mov
scas
and
and
pop
xchg
jge
xchg
data16
mov
mov
sti
jle
scas
imul
scas
push
loop
testb
pop
mov
xlat
loop
jno
cmp
mov
es
jbe
rcrl
aaa
and
mov
mov
out
sahf
incl
mov
ljmp
in
pop
mov
add
out
xchg
cld
xchg
adc
mov
xor
sar
aad
mov
or
ss
incl
jl
popa
mov
in
insl
jne
shrl
adc
and
ds
into
cld
ret
or
sahf
je
sahf
lcall
ret
and
add
xchg
xor
iret
lods
xchg
call
xchg
push
xor
adc
filds
sbb
xor
mov
fwait
sarl
call
roll
inc
jmp
jae
sub
push
stc
das
adc
cmp
xor
imul
adcl
sahf
enter
push
inc
sahf
ds
mov
xor
ds
mov
mov
adc
jg
mov
xor
push
jns
inc
push
out
mov
cld
inc
sub
sahf
xor
xchg
ss
pop
rcrl
decl
aaa
add
pop
fidivrs
outsb
pop
jecxz
sarl
call
into
jbe
pop
fists
jl
jmp
inc
lods
or
aas
cmp
dec
sbb
data16
sub
dec
sbb
cwtl
cmp
in
xor
test
xchg
inc
push
jle
and
testl
push
jbe
push
rcpps
push
ficomps
dec
into
push
mov
xchg
into
pop
sub
sti
daa
fiadds
sub
test
jge
or
push
sub
bound
adc
pop
jne
daa
mov
mov
inc
jbe
and
sbb
fwait
push
sahf
mov
or
mov
stos
push
mov
shlb
sub
push
jnp
push
push
or
push
cmp
int3
imul
jle
popa
mov
xchg
push
enter
mov
ret
push
and
or
push
sub
enter
dec
jmp
push
and
lods
data16
sbb
cmovle
icebp
pop
jno
dec
addr16
inc
push
mov
shlb
aaa
cld
push
pop
xchg
xor
push
ffreep
dec
inc
jecxz
test
sbb
sahf
ds
loopne
push
mov
mov
push
jle
push
pop
push
fists
inc
js,pn
dec
xchg
pop
scas
adc
push
and
mov
in
inc
mov
or
push
jle
xchg
into
adc
into
fbld
in
test
filds
mov
ss
fldl
pop
xchg
sub
push
je
cwtl
bound
das
shll
ljmp
inc
sbb
push
cmpsb
dec
movsl
adc
sti
insb
inc
loopne
xchg
sbb
test
push
push
adc
paddsw
inc
mov
popa
mov
mov
test
js
and
push
cmp
jns
jns
test
fbstp
aas
aaa
xlat
loop
mov
sbb
jg
add
scas
pop
mov
and
push
dec
sar
jg
pop
popa
inc
dec
ret
fsubrs
loopne
xor
clc
idiv
jg
mov
or
jns
push
or
mov
sbb
add
push
pop
test
inc
dec
adc
jbe
iret
adc
push
xchg
aam
incl
incl
data16
aam
out
and
and
clc
fldl
dec
mov
andb
push
inc
jne
pop
xchg
scas
inc
cld
adc
ror
pop
xor
jne
xor
and
into
shrb
clc
mov
mov
xor
push
add
inc
scas
jmp
mov
push
aad
jmp
lock
aaa
fistpll
dec
pop
cli
ficomps
jbe
push
lcall
push
adc
add
inc
push
je
jne
incl
jle
negb
inc
pop
adc
mov
pop
push
lcall
lock
cmp
fisubrs
push
sti
loope
and
xor
int3
idivl
ds
adc
jbe
aad
in
test
mov
xchg
push
xchg
enter
cs
sti
xchg
fadds
das
ja
jno
push
jns
or
xchg
out
mov
mov
jg
cwtl
inc
dec
fisttpl
dec
sti
outsl
sbb
pop
push
fnstsw
or
daa
mov
lret
jp
add
lahf
out
rcr
out
shrb
push
jecxz
sub
mov
ljmp
adc
lods
add
cmp
inc
inc
frstor
decl
shrb
lcall
push
test
fwait
push
lods
mov
push
pop
in
roll
jp
push
jns
push
xor
std
scas
ljmp
cmp
and
xchg
cwtl
mov
sbb
jmp
inc
push
jns
mov
incl
mov
sbb
adc
aaa
dec
push
scas
aam
mov
insl
decb
cs
scas
xchg
mov
pop
test
popw
push
sti
or
mov
adc
enter
icebp
aad
jmp
sbb
mov
jae
jne
aaa
cs
outsb
xchg
cmpsb
setne
mov
xchg
shlb
xor
sahf
lds
mov
sbb
adc
and
sub
movsl
lahf
jo
jle
enter
adc
insl
and
pop
je
inc
ja
aad
jns
jb
adc
adc
out
jmp
popa
pop
and
sbb
outsl
fdivl
sahf
mov
jno
xchg
and
scas
out
test
pop
xchg
loop
out
mov
inc
sti
mov
popf
icebp
mov
xor
hlt
sub
mov
jle
xchg
pop
sub
adc
icebp
in
seta
ficoms
test
jbe
and
push
out
add
cmpsb
mov
cmpsl
test
dec
je
push
repnz
out
lahf
cmc
imul
es
cmp
mov
jnp
push
mov
fwait
or
sub
cmp
cld
and
cs
push
ljmp
sub
test
add
movsl
scas
imul
aas
mov
movsb
rcl
int3
inc
out
loope
fdivp
fwait
out
push
cmp
addr16
enter
add
mov
sbb
push
lods
dec
inc
sahf
mov
add
dec
mov
out
push
fildll
in
into
idivb
mov
not
dec
push
divl
mov
mov
addr16
xchg
pop
or
cmpsb
jae,pn
adc
popa
loop
shlb
mov
push
sahf
and
dec
addl
jmp
push
mov
push
add
dec
pop
rolb
in
xchg
dec
call
push
test
sub
shrl
xor
fs
pushl
push
sahf
ss
mov
inc
push
jb
jne
push
ja
cld
mov
adc
adc
push
push
ljmp
mov
mov
or
inc
mov
out
cmpsb
testb
push
in
xchg
push
pop
pop
and
clc
stos
push
stos
xor
mov
sub
fadd
pop
out
inc
scas
pop
adc
lods
jl
add
je
xor
pop
jle
scas
ds
mov
or
jmp
add
mov
cwtl
xor
xor
mov
push
pop
insl
adc
daa
push
and
addl
jle
adc
into
sbb
int3
jg
clc
ss
fwait
sbb
pop
jmp
add
mov
decl
mov
adc
int3
jb
adc
mov
jns
jo
mov
test
js
pop
xchg
add
pop
push
call
rclb
data16
push
fisttpl
icebp
int
push
dec
pop
shll
sahf
in
xchg
addr16
pop
jb
adc
fstl
inc
out
jmp
sbb
bound
pop
jns
int3
mov
mov
xor
sub
lock
popl
pop
dec
out
inc
data16
xchg
jno
push
in
and
into
push
addr16
jg
mov
lea
pop
push
cwtl
sub
inc
inc
xor
out
es
scas
push
xor
push
in
push
pop
cmpsb
push
lcall
scas
xor
add
adc
iret
dec
jne
sti
push
pop
xor
jmp
ret
jne
jns
inc
jno
test
jmp
pop
push
cwtl
xor
mov
or
jo
mov
inc
and
pop
lods
sub
in
clc
gs
xorb
or
dec
cld
jns
cltd
jp
ret
pop
call
scas
mov
push
and
ljmp
shrl
xor
or
mov
cld
pusha
in
iret
out
data16
jb
jne
jecxz
sarl
push
popf
cmpsb
push
adc
rcrb
std
stos
aas
mov
adc
sarb
cwtl
cs
push
pop
js
loopne
xor
jle
movlhps
mov
mov
jg
icebp
xchg
jle
mulb
test
push
cmp
inc
inc
ljmp
and
test
jle
xchg
mov
jg
cmpsb
push
push
jb
or
xor
dec
mov
clc
fildl
lret
xor
inc
add
sbb
lret
lahf
cmpsb
xor
or
sbb
lods
int3
sub
jmp
cwtl
daa
pop
lods
sbb
xchg
pop
std
add
sbb
inc
call
and
sub
sbb
enter
jmp
jb
sbb
add
dec
lahf
mov
jg
addr16
mov
cmp
in
jo
sub
cmc
add
ss
mov
jne
lahf
shr
pop
xchg
pop
int3
jp
lret
in
push
xchg
push
iret
adc
dec
mov
test
xor
dec
addr16
sti
add
adc
and
bound
lahf
pop
adc
pop
mov
cli
fcomip
inc
lods
inc
stc
dec
lcall
scas
push
jb
aaa
xchg
dec
loopne
jl
push
xchg
js
int3
push
test
gs
incl
xor
xchg
jns
and
mov
das
push
pop
rcrl
rcll
ja
cmc
test
iret
adc
out
das
mov
xchg
in
lahf
and
fisttpl
xchg
nop
ljmp
push
aaa
adc
or
cltd
in
xor
cmpsl
jmp
addr16
and
incl
inc
lcall
fs
mov
jne
shrb
or
cmp
cs
xchg
push
jg
out
mov
aad
xchg
pop
dec
sti
pop
sub
push
sti
outsb
adc
push
sub
sti
mov
inc
push
xor
mov
es
inc
out
push
mov
sbb
adc
hlt
stos
fbstp
adc
pop
je
add
sbb
gs
lods
push
inc
push
pop
shl
pop
and
dec
sub
and
stos
inc
pop
loop
inc
adc
fimuls
pop
sbb
cltd
push
mov
xor
std
xchg
lods
shlb
les
pop
cmp
push
stos
cs
cmp
icebp
ds
jae
std
add
pop
adc
mov
and
mov
adc
inc
push
testb
aad
lods
push
adc
loop
ds
lea
xchg
cld
add
xchg
and
sbb
xchg
fdivs
addr16
jg
sub
popa
dec
inc
jae
das
ss
das
sub
pop
aaa
pop
sarb
nop
adc
aad
push
scas
test
cmp
dec
push
ret
and
mov
xor
out
and
test
cmpsb
mov
sahf
or
add
xor
mov
test
dec
xor
push
push
lret
not
inc
cmp
pop
jge
enter
outsb
adc
inc
mov
es
loopne
inc
xor
sahf
gs
inc
xchg
fdivrp
add
jo
ss
jnp
test
xchg
cmpsb
dec
push
cmpsl
outsl
int
test
and
and
add
sbb
clc
inc
ss
inc
push
mov
and
icebp
pop
in
nop
jb
enter
icebp
cmp
gs
sub
xor
loopne
es
cmp
pusha
or
aaa
insb
mov
push
and
repnz
xchg
sub
je
jmp
mov
call
loop
push
adc
pusha
mov
jbe
pop
pop
jl
popa
add
mov
push
mov
loop
out
jnp
jbe
cmp
stc
mov
mov
ljmp
adc
inc
push
jnp
sub
mov
shl
ss
leave
push
push
into
or
xor
jbe
push
adc
fwait
jle
mov
stos
test
pop
pop
movsl
stos
fs
in
xchg
or
popa
mov
jo
hlt
push
das
jl
jbe
mov
sub
outsl
jp
in
mov
sar
or
in
les
xchg
pusha
loop
outsl
push
dec
loope
lcall
inc
fstpt
push
or
fstpt
and
and
call
scas
addl
sti
je
es
int
cs
xchg
std
ja
out
or
adc
popf
aad
lea
pop
mov
lcall
inc
mov
scas
data16
and
mov
push
lret
mov
mov
sub
adc
jecxz
xchg
lock
lcall
fstpl
cmp
sub
jne
push
es
mov
dec
jle
pop
sbb
or
ss
dec
push
push
xchg
pop
stos
inc
sbb
adc
fdivrs
in
orps
mov
sbb
adc
nop
call
dec
mov
push
or
jb
pop
inc
jg
lock
adc
test
inc
fwait
and
lods
clc
jg
adc
sub
xor
adc
cmp
loope
in
mov
xchg
xor
mov
xchg
adc
sar
stc
je
es
mov
mov
pop
sti
lcall
incl
data16
outsb
xchg
xor
dec
pop
pop
sti
loop
ds
test
sub
stos
mov
and
int3
adc
cwtl
inc
ljmp
jbe
mov
aaa
loopne
jbe
lock
fbld
call
negb
inc
add
scas
xlat
adc
clc
cmp
ret
or
sti
lret
les
rcrl
xchg
adc
push
shrl
pop
cmpsb
jle
mov
mov
imulb
outsb
movsb
jmp
mov
je
jbe
jns
mov
int3
insb
lds
scas
pop
dec
add
clc
jle
test
xchg
pop
add
gs
psraw
push
das
in
mov
cld
cs
out
push
das
faddl
sbb
inc
jb
and
mov
repz
sbb
push
pop
lods
pop
clc
sbb
jle
add
sbb
mov
test
jmp
scas
mov
or
push
push
arpl
and
jmp
inc
mov
mov
shrb
shll
sahf
lods
pop
fisubrs
sbb
cld
scas
jle
inc
stc
add
push
and
jo
clts
sbb
frstor
adc
shlb
pushl
jne
push
sub
dec
xchg
sti
push
pop
hlt
negl
ds
lods
or
jp
cwtl
imul
aas
aas
out
and
int3
xor
xchg
out
or
push
add
das
clc
and
lods
rol
push
inc
ja
cltd
stc
sbb
mov
push
mov
xor
popf
into
adc
movsb
pop
jo
out
push
inc
push
sti
sahf
mov
outsl
ss
jbe
sahf
sbb
outsb
clc
idivb
nop
loopne
jmp
shl
out
jecxz
das
adc
jg
dec
mov
sahf
repnz
push
rolb
cmc
std
pop
push
insl
push
jl
in
scas
mov
lea
push
out
mov
fistpl
incl
add
loop
push
sub
fbld
inc
lcall
push
nop
pop
push
inc
addr16
xor
xchg
movl
int3
mov
mov
jg
test
in
jb
pop
movb
inc
sti
pop
dec
orl
ljmp
and
dec
or
testb
jg
aas
cmp
push
shlb
add
push
call
add
push
inc
push
rolb
jbe
scas
std
or
xchg
lea
inc
mov
sbb
adc
pop
repz
sbb
pop
or
hlt
mov
fdivr
add
jmp
ja
xchg
inc
aaa
jge
pushf
or
inc
pop
xchg
mov
out
inc
shrb
xor
rorb
movsb
sub
aaa
push
shl
popf
in
push
leave
lret
scas
sbb
cmc
es
mov
xlat
fldl
adc
xlat
mov
sti
lret
rcrb
mov
adc
push
xor
xor
imul
pop
mov
mov
push
je
pop
stos
addl
std
jg
into
sbb
jecxz
cwtl
out
fbstp
add
jg
decb
ljmp
adc
insl
andb
enter
jle
movsl
ficoms
fcoms
sbb
lods
ret
add
add
enter
mov
ljmp
sti
push
test
push
fisubs
cmp
push
add
mov
mov
pusha
gs
mov
xchg
xlat
jmp
mov
xlat
aaa
arpl
inc
mov
xchg
xchg
push
push
daa
push
fistpl
adc
cli
sub
cld
das
cli
add
inc
adc
dec
push
enter
pop
adc
dec
add
sbb
push
fstp
mov
xchg
cmpsb
nop
gs
and
iret
cmp
clc
add
mov
hlt
scas
jge
mov
push
out
mov
dec
fistpl
cs
popw
inc
mov
dec
inc
aaa
lock
std
jmp
xchg
popa
mov
fistps
aaa
jb
and
inc
call
fiaddl
cmp
sbbl
inc
mov
mov
cli
and
int3
xchg
out
mov
cmpsb
xchg
push
shll
icebp
filds
fst
jns
cwtl
out
hlt
icebp
mov
orl
adcl
imul
iret
add
adc
or
cmp
pop
hlt
les
mov
cmp
mov
mov
scas
push
ljmp
fisttpll
cld
dec
sti
mov
out
pop
test
ficompl
loope
jmp
dec
test
jecxz
push
mov
popf
lds
aas
data16
in
addr16
loop
add
fldl
test
sub
push
lds
adc
cmp
test
ljmp
pushaw
pop
outsb
mov
aaa
call
xchg
f2xm1
mov
cmp
sti
test
mov
ss
xlat
outsl
jp
adc
scas
ja
pop
jbe
aaa
adc
inc
add
decb
ffree
dec
ret
mov
test
mov
icebp
xor
or
push
xchg
into
aam
outsl
clc
or
mov
fs
and
pop
hlt
aaa
add
rcll
xor
adc
ss
test
and
jle
pop
int
sarl
and
gs
out
push
shr
inc
xor
test
call
sarl
push
sub
shrl
ss
outsb
fsubs
fstpt
shll
stos
stos
clc
jg
in
mov
and
jne
lea
out
imul
mov
mov
movsl
sti
jns
imulb
sbb
rolb
sbb
mov
xchg
adc
xchg
jne
xchg
xor
pop
vandps
mov
push
mov
mov
jne
fisttpl
std
clc
mov
sub
xor
lods
mov
fildl
popa
jle
pop
mov
ret
test
data16
adc
lahf
call
xchg
lret
scas
data16
outsb
or
push
jle
pop
mov
shll
pop
cwtl
das
add
pop
ss
je
movsl
sbb
shrb
mov
es
pop
or
push
jbe
pop
ret
jmp
sbb
outsl
clc
pop
adc
add
cmpsl
scas
jne
fs
outsl
push
add
in
jmp
nop
cltd
dec
xor
rcrl
push
jle
add
jl
and
xchg
xchg
xchg
movsl
cmp
mov
mov
popa
in
add
adc
cs
fnstenv
rol
addr16
jns
jp
inc
ficompl
ss
pop
or
fadd
inc
gs
insl
mov
inc
mov
sbb
push
and
aas
adc
mov
push
xor
mov
movsb
or
mov
into
pusha
pop
or
hlt
xor
pop
xorl
popa
adc
sub
cmp
popa
addr16
lods
add
inc
rcll
inc
notl
jle
shl
sbb
fidivs
and
dec
push
xchg
or
push
sub
mov
sar
sarl
push
jns
jg
xchg
sarb
mov
popf
dec
in
shlb
rcll
cmpsb
rclb
inc
das
inc
out
cmc
push
inc
or
es
and
sahf
xchg
cs
pop
lcall
push
dec
int3
sub
lcall
lds
repz
lods
in
mov
data16
jmp
adc
adc
pop
adc
add
adc
test
dec
in
jnp,pn
ds
outsb
cltd
lods
dec
push
push
test
imul
mov
sbb
mov
push
mov
jne
fistps
incb
jae
inc
mov
adc
and
lock
push
sub
outsb
or
mov
push
call
xchg
xor
adc
mov
lcall
rclb
shrb
add
xchg
clc
pusha
push
loop
xchg
outsb
lea
dec
ror
data16
icebp
add
test
mov
js
mov
push
aas
and
cltd
sahf
cmpsl
jnp
mov
inc
sub
cmpsl
icebp
ret
test
out
in
cmp
mov
sub
push
sbb
fldenv
jne
roll
cmpsb
cmp
clc
or
push
test
test
iret
and
sahf
icebp
stos
jne
sarb
push
add
lea
lahf
dec
cmp
dec
outsl
hlt
out
push
sti
sbb
test
pop
adc
adc
in
mov
call
pusha
mov
and
jecxz
out
out
add
fwait
addr16
sahf
push
dec
mov
jns
adc
sbb
test
lock
mov
scas
cmpsl
outsb
clc
adc
aam
dec
into
adc
dec
pop
pushl
std
decl
xchg
adc
jnp
outsl
or
call
xchg
xchg
mov
daa
push
jmp
int3
das
cmp
out
xorb
sti
fiadds
sub
cmpl
inc
xchg
imul
or
mov
sti
pop
push
ds
mov
out
and
popf
clc
push
fsubr
cs
fmull
push
lcall
xchg
fnstenv
lock
data16
mov
fistps
mov
imul
inc
mov
in
jnp
sub
mov
mov
dec
cs
xor
repnz
and
lcall
sbb
cld
cmpl
xchg
push
lock
inc
or
cmp
jne
lods
adc
into
sbb
clc
test
mov
loop
xchg
aad
inc
loop
push
jl
int
rcrl
xchg
mov
pop
inc
fsubr
xchg
pop
cld
cmpsl
mov
shrb
in
push
xchg
push
in
mov
jne
xlat
rorb
mov
dec
lahf
inc
fsubr
mov
dec
jnp
outsb
out
les
inc
pop
adc
test
fs
xchg
xchg
mov
push
scas
fcmovnb
push
dec
push
stc
adc
cld
mov
push
stc
xor
cmp
aam
xchg
dec
stos
xlat
sbb
xchg
lcall
lods
jle
cltd
pop
push
fstps
call
insb
sub
mov
sbb
shlb
jmp
icebp
je
inc
orl
lods
dec
mov
dec
icebp
fstl
icebp
leave
in
adc
push
ds
outsb
mov
sbbl
scas
insl
xlat
fiadds
js
sahf
inc
mov
sub
les
push
movsb
dec
lahf
das
ja
inc
jnp
ja
dec
push
int3
push
add
or
lea
dec
in
mov
mov
add
adc
lcall
fsubrl
pop
jmp
push
jbe
mov
sub
dec
movsb
xchg
lcall
iret
add
test
push
cwtl
lock
jno
pop
or
mov
fildl
popf
adcb
mov
or
or
add
push
xchg
xchg
call
dec
push
push
push
insl
mov
xchg
call
sbb
adcl
insb
popf
insb
inc
push
idivb
mov
sub
das
inc
es
sub
inc
pop
call
push
adc
inc
adc
mov
or
xchg
sahf
pop
in
scas
lock
push
mov
scas
sub
cmp
inc
arpl
xchg
je
xchg
scas
dec
add
jmp
popf
cmpsb
jmp
mov
inc
pop
scas
inc
push
adc
push
xor
cld
push
mov
xor
xchg
ss
into
and
xchg
sbb
pop
jno
call
sti
mov
data16
sub
inc
addr16
lds
sti
cmpsb
test
call
cmpl
push
arpl
aam
push
mov
jg
pusha
push
pop
bound
push
popa
mov
pop
cmp
push
cld
add
cmp
inc
sub
push
mov
call
jo
sub
loopne
cwtl
add
push
in
pop
test
xchg
not
lahf
ficoms
cmp
cmp
cmc
mov
xor
sub
out
icebp
jg
mov
in
push
mov
dec
jecxz
add
out
and
sub
imul
fbstp
push
loope
shlb
dec
movb
lcall
cmpsb
sahf
in
mov
insb
outsb
mov
cmp
stos
data16
mov
mov
jg
inc
fildl
dec
push
scas
pop
scas
add
pop
lahf
adc
inc
pop
inc
ret
and
je
mov
out
inc
adc
mov
mov
adc
mov
adc
mul
cmpsb
push
push
cmpsb
jbe
test
push
jbe
cmpsb
and
outsl
sbb
adc
mov
dec
mov
pop
daa
adc
outsb
adc
das
clc
mov
cs
clc
xchg
daa
jg
mov
imul
rorl
pop
decl
nop
mov
not
cld
scas
push
inc
inc
scas
or
enter
adc
mov
inc
dec
fstpl
incl
into
lods
adc
cld
add
das
out
and
sub
fidivl
and
jns
sahf
popa
inc
adc
dec
dec
dec
jp
xchg
or
push
xor
jmp
jbe
sbb
test
pushl
jae
add
xor
mov
out
outsb
mov
cmpsb
sub
mov
aas
inc
sbb
add
scas
jae
add
sbb
xchg
pop
jae
insb
aam
aas
cwtl
orb
jle
mov
ja
int3
pushf
jle
das
data16
add
int3
sub
sar
rcl
addr16
jae
pcmpgtd
in
out
pop
hlt
cmpsl
jle
add
ss
push
or
cltd
mov
sti
sub
and
mov
rolb
pop
and
mov
outsl
lock
fiaddl
ret
gs
sarl
into
xor
lods
adc
pop
repz
das
inc
fnsave
int3
jbe
sbb
adc
ds
out
mov
int3
jne
jae
adc
ds
stos
fildl
mov
cwtl
int
pop
out
je
inc
jnp
imulb
adc
jle
jbe
outsb
jno
out
sahf
scas
adc
mov
out
cmp
loop
inc
and
into
jae
adc
jns
add
mov
jbe,pt
incl
loop
mov
or
jbe
ss
xor
aas
add
sbb
mov
mov
inc
aaa
and
jbe
je
fs
xor
ret
mov
jbe
je
scas
sub
fbld
cs
mov
push
int
or
lahf
mov
mov
loopne
and
jge
add
sti
sbb
cs
push
shlb
add
jns
cmp
out
pop
push
push
adcl
adc
outsb
push
adc
jl
cs
icebp
or
or
popf
xchg
add
sbb
fstpl
sbb
adcb
into
sub
stos
shrl
je
int3
pop
jo
sahf
stos
sahf
dec
mov
xor
mov
stos
je
add
lods
loopne
inc
lock
sbb
sub
ja
jbe
ds
arpl
jmp
rorl
fistps
addr16
pop
jns
inc
and
insb
inc
iret
pop
scas
pop
cld
xchg
in
and
lcall
pop
or
cmp
idivb
mov
push
mov
push
and
or
jl
mov
jg
in
cmpsl
xchg
mov
jle
xchg
xchg
push
mov
mov
mov
imul
scas
xor
shrb
in
inc
loop
inc
mov
dec
aas
rolb
push
ds
aaa
xchg
mov
sbb
gs
stc
mov
lahf
loop
adc
mov
push
clc
in
ret
sti
mov
pop
pusha
jnp
lea
mov
adc
dec
ds
imul
jmp
shlb
in
dec
sbb
inc
inc
dec
xor
push
push
mov
push
and
jmp
and
out
jp,pt
xchg
cmp
sti
and
insl
sbbb
cmpsb
aaa
clc
sub
inc
cmpsb
cmp
xchg
jl
add
outsl
jp
sub
test
mov
sti
push
rcr
adc
xchg
dec
push
dec
cmpsl
int3
fsubrs
xor
dec
pop
mov
sub
and
cmpsb
adc
sbb
arpl
shll
add
adc
push
or
mov
or
scas
add
les
lods
je
sahf
pop
jb
push
les
or
cwtl
ss
add
or
adc
movsb
imul
clc
sbb
push
pop
ds
push
jb
inc
mov
popf
push
test
xchg
lret
jne
mov
and
inc
push
inc
je
ud2
dec
push
xor
pop
mov
outsl
inc
out
and
push
jno
adc
sahf
jl
je
push
loope
jns
push
push
lahf
push
sbb
dec
lods
and
rolb
cwtl
repnz
and
push
negl
aam
nop
jmpw
cli
out
out
ljmp
repz
mov
jns
inc
lcall
inc
inc
push
aaa
pop
mov
outsb
push
mov
inc
jmp
sub
xchg
inc
loopne
inc
adc
sahf
loopne,pn
fmul
push
xlat
push
push
cwtl
loopne
negb
out
cs
in
and
leave
fmuls
outsb
je
jle
jns
fdivrl
lods
cmp
sti
add
aas
int3
ja
add
push
sub
sub
rcrb
outsb
cmp
inc
cs
jg
ljmp
pop
inc
push
aas
pop
push
aam
sahf
sub
dec
lcallw
xchg
inc
cmc
fdivs
push
ja
enter
lods
ja,pn
cmp
inc
mov
stos
out
dec
cld
inc
fistps
adc
dec
xor
ss
lret
mov
scas
xchg
push
xlat
clc
push
addb
adc
xchg
aam
mov
shrl
mov
adc
pop
clc
aas
sbb
xor
push
inc
dec
in
clc
sahf
int3
xchg
into
mov
cmpsl
jmp
into
adc
mov
add
das
push
lods
sub
rorl
push
push
and
mov
pop
inc
xchg
lcall
push
lods
mov
push
ret
cmp
inc
sahf
mov
mov
fdivl
shlb
xchg
sub
pop
incl
cmp
pop
lret
and
xchg
lock
sahf
jae
sub
pop
push
setle
xor
cmp
sahf
mov
insb
push
cltd
mov
out
cmpl
outsb
cltd
mov
sti
and
dec
cli
sti
popf
jbe
in
push
mov
test
mov
or
loop
addr16
jg
ja
inc
mov
add
inc
call
rolb
push
or
xchg
fimuls
test
add
sbb
inc
jg
adc
pop
mov
dec
xorb
sahf
inc
pop
bound
inc
dec
xchg
or
call
xchg
adc
es
dec
incb
push
adc
inc
fwait
add
push
jnp
out
adc
xchg
sub
cli
inc
add
shrl
sbb
ss
adc
repz
mov
or
add
mov
mov
out
lods
movsl
movsb
in
nopl
pop
push
inc
incl
jo
mov
divb
out
clc
fwait
enter
cmp
pushf
cld
mulb
sbb
clc
out
ret
scas
xchg
dec
out
mov
outsb
clc
out
jbe
pop
fnstenv
jecxz
fmull
cs
out
mov
jo
test
test
cmp
adc
xor
pop
in
je
dec
jp
sti
aaa
mov
movsl
shl
movsl
out
push
push
ljmp
in
fcmovnu
add
xor
push
mov
xchg
mov
sub
lea
call
into
push
xchg
sahf
dec
push
scas
push
or
scas
pop
inc
and
scas
adc
cli
and
xchg
push
cld
testb
sbbb
sbbl
clc
popa
cmc
mov
scas
adc
pop
ds
sbb
test
call
mov
inc
add
and
mov
sbb
insb
inc
icebp
add
sti
jl
lcall
and
cmp
pop
dec
das
rcrb
jp
inc
clc
imul
push
sub
lret
incl
js
mov
cld
mov
jb
adc
mov
push
cmp
rclb
push
xchg
mov
js
pop
pmaddwd
push
stos
cmp
jb
das
or
out
orl
iret
fistpll
mov
cmp
insl
rorb
jp
mov
ja
out
cmp
pop
ss
js
ljmp
ret
dec
nop
mov
outsb
ucomiss
sbb
sub
mov
addr16
push
jae
mov
push
idivl
jbe
jg
jae
push
sub
jb
pop
sub
std
decl
push
jb
repnz
outsl
cmp
push
jns
pushl
cmp
pop
cs
xor
mov
mov
lcall
js
aaa
das
push
shlb
mov
dec
js
sarl
fdivrs
inc
mov
mov
sub
lock
repz
adc
orl
movb
nop
mov
js
outsl
clc
das
fistpll
mov
sbb
mov
pop
inc
fwait
syscall
pop
scas
sti
xchg
and
cmp
mov
std
outsl
pop
mov
sub
cmpsb
mov
outsl
mov
imulb
ljmp
fldt
adc
jbe
dec
sub
ja
idiv
orb
and
pusha
cmpsl
sbbb
jno
lds
cs
shlb
sbb
push
push
push
jge
mov
xchg
xchg
sbb
cmp
mov
leave
dec
pop
jae
dec
sbb
dec
out
xor
mov
mov
mov
pop
jo
jl
xchg
or
in
jle
iret
rclb
jmp
adc
pop
jle
mov
mov
push
jae
bswap
and
shlb
lcall
jge
adcl
addr16
or
and
lock
push
out
mov
cmp
dec
cmc
mov
jnp
ret
pop
mov
add
shrb
cmc
xchg
dec
push
out
sub
decl
pop
push
cmpsb
adc
cld
clc
inc
cmp
xor
aad
iret
mov
push
mov
pop
xor
nop
sub
fabs
mov
or
popf
aas
rclb
icebp
data16
es
insl
mov
pop
pop
sub
lods
dec
pop
mov
mov
and
push
jg
rcrl
ret
stc
jmp
dec
je
aad
popa
and
jnp
mov
push
adc
test
jbe
mov
mov
ret
mov
mov
sub
sub
inc
push
lcall
pop
sahf
repz
cli
jbe
push
add
mov
pop
adc
cld
cmpsb
adc
cmp
or
mov
lea
sti
sub
inc
push
or
aaa
inc
lcall
pop
push
and
enter
and
xor
xor
ficoml
jae
jge
pop
adc
mov
adc
mov
sar
testl
or
or
add
xor
out
cli
jmp
fnstsw
imull
and
or
and
xchg
jbe
sub
decl
in
add
es
add
outsb
fisubl
pusha
outsb
test
shll
nop
and
cmp
ds
jge
pop
je
and
mov
jecxz
jmp
cmp
ret
in
or
insb
ret
cmp
je
mov
cmpsb
outsb
pushl
xchg
outsl
test
jnp
or
out
pop
jnp
incl
test
cmpl
jne
repz
push
fs
sbb
fwait
aaa
jmp
test
pop
outsl
popa
cmp
mov
es
sub
fdivr
incl
ret
insl
or
sub
inc
imul
out
sarl
or
lea
or
in
add
inc
popa
dec
ss
jnp
and
inc
and
dec
add
mov
rolb
cmpsl
mov
xchg
add
repz
clc
dec
sub
cmpsb
lahf
add
or
xchg
aas
mov
mov
and
pop
jecxz
fisttps
push
or
nop
pop
scas
int3
jecxz
repnz
push
cld
mov
dec
add
push
lcall
push
jl
aaa
in
fbstp
cmpsl
outsb
cmp
cs
cwtl
and
add
lret
xchg
int
xchg
or
div
sub
inc
push
dec
cmpsb
nop
sbb
cmpsb
sahf
jg
out
out
cli
xchg
mov
fisttpl
mov
pop
sub
scas
subl
loope
add
in
lods
and
stc
add
add
ljmp
pop
mov
pop
lods
into
mov
data16
shlb
fs
insb
ljmp
mov
mov
dec
mov
adc
in
das
cs
loop
ljmp
aam
cmp
fldt
les
cs
jg
int
add
pop
insl
cmpsl
int3
out
insl
in
push
jecxz
sbb
pop
mov
pop
xchg
les
push
lock
out
pop
jns
pop
stc
icebp
mov
je
pop
imul
jg
or
outsb
outsl
scas
xchg
add
popa
rolb
jbe
jo
push
popa
in
pop
fiadds
pop
sbb
or
adc
loop
pushf
lock
cs
add
mov
xchg
dec
dec
adc
psubusw
in
pop
pushl
and
in
mov
ds
aaa
test
push
pop
cmpsb
mov
push
test
mov
mov
cmc
inc
add
icebp
sti
dec
lods
es
aas
or
sub
andb
hlt
int
fiaddl
fiaddl
pushf
dec
mov
shrl
pop
es
inc
mulb
push
push
dec
jecxz
sbb
decb
xlat
out
aas
cld
push
sahf
data16
leave
leave
xchg
andl
jg
jb
jb
cmp
xchg
pop
fs
neg
popa
popa
sub
cmpsb
in
test
rcr
cmp
outsl
decl
mov
scas
mov
sbb
mov
int3
mov
mov
gs
pop
push
out
jae
pop
adc
jbe
mov
ss
and
push
fcmovnb
dec
cmp
icebp
jge,pn
dec
inc
jns
sbb
pop
jecxz
arpl
inc
decl
jne
fisttpl
add
sbbl
pop
jmp
and
sbb
lock
ret
repnz
cmpsb
outsl
xchg
aas
in
mov
jae
jbe
int3
iret
stc
xchg
scas
rcr
daa
out
push
loope
sysret
cmp
ds
sub
cmp
icebp
loope
imul
insl
frstor
cmpsb
fisttpl
imul
xor
dec
add
in
cmp
add
dec
cmp
sbb
jbe
pop
sub
cmc
ljmp
pop
sbb
jnp
jp,pn
add
popa
mov
jg
jne
decl
pop
dec
dec
dec
rcll
xchg
jmp
arpl
sbb
ds
pop
mov
ds
xor
sub
cs
out
dec
cmp
xorb
xchg
and
addr16
in
and
and
sbb
test
lcall
adc
xorb
sbb
lcall
adc
nop
push
pop
inc
fbld
lea
adcb
and
jg
push
or
and
sti
push
je
adc
enter
sti
jg
sahf
inc
push
je
add
mov
add
push
inc
sti
ret
cmpsb
incl
cmp
push
enter
sti
nop
cmpsb
and
aam
add
pop
pop
ljmp
enter
adc
fildl
or
mov
bnd
movsb
ret
jg
sub
int3
jbe
adc
enter
adc
mov
sahf
or
jo
enter
adc
adc
add
loope
sbb
sti
inc
call
mov
test
jo
loopne
push
nop
test
sti
iret
movsl
push
loopne
dec
pop
fs
add
into
enter
loopne
cmp
xchg
sbb
sbb
mov
push
ret
push
es
sbb
jmp
call
dec
push
jbe
jae
jne
pushf
movsb
mov
fwait
sbb
xorl
es
mov
xchg
testb
shufps
or
stc
cld
push
sahf
sarb
jbe
jo
imul
inc
push
fcoml
xchg
aad
adc
add
inc
out
fld1
cmp
mov
add
mov
jne
push
loope
fildll
mov
lods
adc
popf
mov
out
push
jae
lahf
sbb
jbe
or
nop
enter
loopne
in
mov
xchg
aad
test
mov
mov
and
mov
hlt
adc
pop
cmp
and
xchg
divl
inc
mov
ss
fidivrs
inc
push
fistpll
incl
pop
jl
les
xchg
outsb
xchg
movsl
push
jmp
dec
fcompl
outsb
cld
add
sub
repz
enter
add
imul
push
in
push
mov
aaa
ljmp
out
dec
cmp
out
sahf
movsb
ds
adc
lods
sub
dec
and
xchg
mov
je
shlb
lret
or
xchg
pop
dec
ss
or
add
das
rcrb
inc
inc
loope
int3
xor
insb
push
dec
daa
or
mov
inc
lods
jmp
nop
jmp
loopne
loop
shrb
mov
inc
jbe
inc
call
push
mov
dec
xchg
sub
push
xor
push
aam
int
ss
mov
sarl
mov
jns
jnp
inc
pop
push
rorb
inc
shr
rcrb
test
push
mov
sti
mov
mov
rolb
ja
cmp
mov
adc
jmp
pop
rclb
add
mov
cmp
adc
mov
cwtl
xchg
fcmovnb
push
test
mov
in
ss
adc
lods
adc
mov
inc
inc
cmpsl
pop
test
adc
and
fisubrs
cli
mov
test
mov
inc
out
adc
out
pop
mov
sti
loop
xchg
pop
in
ror
loopne,pn
lret
cmp
adc
inc
ret
xchg
inc
jno
arpl
push
push
mov
xchg
and
imul
rclb
scas
cmpsl
in
ja
inc
fwait
popa
mov
sbb
jl
inc
movsb
outsb
pop
fwait
add
rorb
xchg
pop
cmp
mov
into
xchg
je
je
enter
hlt
cmpsl
inc
dec
fiadds
jge
jl
fildll
movb
sahf
push
nop
js
arpl
ljmp
jbe
pop
dec
xchg
push
push
cwtl
test
cld
jg
mov
push
into
and
mulb
fldl
add
or
pop
dec
jp
rorl
and
or
pushw
or
mov
mov
fisubl
mov
xor
pop
and
add
inc
je
push
fildl
clc
outsb
jge
pop
add
pop
cwtl
insb
jnp
push
and
lcall
push
push
cwtl
je
push
sub
addr16
push
rcrl
test
mov
fisttpll
inc
cs
cmp
test
mov
and
outsb
cwtl
mov
pop
and
ljmp
push
adc
insl
test
clc
dec
js
sub
or
adc
enter
shrb
xor
mov
stc
iret
adc
or
push
jbe
fildll
push
into
les
sarl
ja
push
and
push
lcall
mov
call
sbb
add
push
pop
subb
mov
cmp
mov
jl
scas
xchg
ss
jnp
dec
sahf
fisubrl
es
pop
cmpsl
jo
mov
mov
bound
add
dec
push
orb
lds
scas
push
jle
cwtl
into
fdivp
dec
cmp
scas
fldl
xor
push
inc
inc
pop
sahf
ficompl
or
nop
mov
pop
cli
pop
pop
xor
jmp
xor
inc
cli
xorl
sbb
and
inc
jg
add
dec
sarl
lods
pop
mov
mov
cmp
jbe
sbb
add
pushl
sub
outsl
popa
pop
ss
or
and
push
or
dec
add
sbb
into
mov
decb
pop
into
mov
push
out
cli
jg
mov
aaa
gs
push
addr16
xor
add
jns
jnp
cmp
stos
lret
outsb
sub
inc
out
add
sub
xlat
icebp
push
das
ds
cld
cmp
les
dec
push
lds
adc
dec
inc
push
jno
idiv
or
int3
sub
lcall
sbb
push
pushl
std
pushl
aad
stos
lods
add
push
lods
out
sbb
sti
imul
adc
mov
mov
loop
add
pop
idiv
pop
es
int
mov
filds
paddsb
out
dec
pop
cwtl
inc
jg
jg
mov
int3
adc
sahf
inc
or
and
mov
nop
add
sbb
xchg
jb
pop
int3
inc
xchg
adc
aas
mov
push
inc
lea
loope
mov
test
push
add
mov
call
cltd
xchg
inc
add
mov
adc
ss
push
popf
lahf
jle
mov
ja
testl
das
sbb
stos
mov
call
mov
jg
sahf
popa
mov
sti
or
es
push
cltd
test
lock
dec
rcrb
std
inc
std
cmp
ss
out
pop
mov
and
sti
outsb
xchg
pop
mov
sarl
push
sub
out
in
push
imul
rorb
ret
pop
xchg
inc
das
push
inc
js
mov
inc
lods
mov
faddp
push
test
mov
aam
inc
cmpb
insl
mov
insb
mov
repnz
cmpb
shr
addr16
cwtl
popa
scas
scas
stos
loop
mov
ret
jno
call
stos
outsb
sbb
xchg
int3
ja
adc
fwait
dec
inc
cmpsb
sahf
lahf
sub
jmp
adc
push
hlt
lcall
mov
mov
mov
pusha
jns
xchg
and
add
xchg
add
push
jnp
or
sbb
xchg
sbb
sbb
sbb
sbb
push
mov
push
repz
dec
inc
mov
xor
std
cli
jecxz
mov
stos
add
addb
insl
or
cmp
mov
subb
fldl
pop
adc
aad
add
push
int3
push
insl
sti
std
mov
mov
push
or
xor
cmp
push
sub
pop
dec
fnstsw
push
or
ret
pop
sub
cltd
inc
sub
into
push
sti
in
rorb
sbb
push
push
scas
sub
push
jp
out
jge
ds
sbb
xor
cltd
out
dec
sub
mov
and
addr16
fstpl
pop
adc
out
out
push
sbb
xor
cmp
popfw
fsub
ljmp
clc
and
push
data16
sti
gs
nop
bound
add
xor
sbb
cmp
add
pop
ficoms
shlb
add
jnp
divb
push
dec
adc
sub
mov
idivb
jmp
mov
xor
outsb
lods
adc
pop
cmp
adc
sahf
dec
in
movsl
mov
outsb
adc
pop
push
lcall
jg
sahf
add
push
cli
jg
pop
out
lods
xchg
sub
sarl
scas
and
and
fwait
subl
daa
jbe
mov
int3
dec
push
adc
and
into
jmp
mov
js
jl
sbb
repnz
mov
sti
enter
fldl
inc
inc
fs
sbb
push
inc
mov
add
xchg
mov
push
inc
ljmp
lods
ror
push
aam
mulb
push
and
gs
dec
push
lahf
inc
adc
divl
popf
scas
jnp
jp
call
int3
cmp
adc
icebp
inc
lods
jmp
fstl
decl
test
outsb
or
jne
cltd
mov
inc
cmp
cmp
ret
inc
outsl
add
loop
in
ljmp
test
add
mov
sbb
inc
lods
icebp
cmpsb
ds
int3
and
shrb
fcoms
inc
lahf
ret
cli
inc
add
push
xlat
cmp
add
push
sbb
push
data16
scas
outsb
int3
leave
pop
xor
push
add
cld
and
andb
jp
add
push
adc
sbb
adc
and
out
xor
ljmp
sbb
sahf
int3
pop
insl
cli
dec
pop
lcall
shrl
adc
nop
add
incl
ficoms
lea
lcall
push
in
add
aad
repz
mov
out
or
jl,pt
inc
xchg
into
fsubr
dec
test
fldenv
adc
out
popl
out
push
imulb
sarb
out
fmul
mov
fistl
cwtl
sbb
daa
or
pop
dec
sti
test
inc
insb
fidivs
cs
push
cld
mov
lea
push
fisttps
data16
jle
xchg
push
sub
scas
adc
cli
inc
loop,pn
mov
inc
mov
in
sub
lcall
dec
into
pop
popf
jbe
pop
pop
jmp
mov
cmp
icebp
das
and
outsb
insl
inc
adc
icebp
xor
mov
test
fbld
or
adc
ret
lcall
pop
add
ljmp
push
jnp
mov
mov
fmul
dec
xchg
sub
popf
ret
pop
ljmp
and
adc
jbe
pop
arpl
sbb
xchg
pop
lcall
jns
and
push
cwtl
mov
jp
inc
add
jne
into
pop
jno
adc
aas
pop
clc
arpl
or
scas
arpl
insb
dec
cs
sti
cs
inc
pop
push
adc
pushl
add
adc
scas
cmp
aaa
dec
gs
sub
ljmp
sub
test
pop
inc
frstor
subl
xor
ljmp
and
or
mov
mov
adc
sub
xorl
cmpsb
jg
mov
in
inc
push
jbe
jnp
cwtl
insb
jbe
pop
jge
pop
fistl
or
or
and
in
and
call
addl
pop
push
ljmp
sahf
adc
adc
and
lahf
clc
sbb
adc
inc
in
or
mov
aaa
int3
or
push
jle
add
fs
sti
pop
mov
clc
sub
and
cwtl
enter
adcl
inc
frstor
cmp
insl
adc
push
notl
ljmp
jle
fs
push
jp
push
push
in
xor
outsb
mov
pop
addr16
js
dec
pop
dec
jnp
mov
xlat
add
clc
ret
negb
inc
ljmp
sahf
push
cmp
dec
push
pop
fistps
icebp
fstl
cmpsb
or
jge
and
fisttpll
aam
das
imul
cmp
out
inc
or
or
push
xor
add
in
dec
adc
adc
mov
sub
sbb
aas
outsb
data16
clc
lds
push
int3
andb
push
push
ds
scas
adc
push
fidivrs
push
lods
pusha
sahf
cld
xchg
xlat
pop
clc
add
push
mov
jecxz
xchg
mov
or
xlat
push
clc
cmpsl
cmp
jns
dec
je
push
jle
out
imul
push
or
inc
mov
cli
dec
aas
int3
das
cwtl
inc
pop
lods
adc
inc
cwtl
and
int3
add
jbe
inc
movsl
fs
push
sbbl
call
pop
mov
das
pop
int3
jle
in
mov
jle
adc
scas
out
paddq
pop
push
sub
sar
and
add
mov
bound
cmpsb
push
push
ret
push
push
xchg
push
ja
es
mov
out
lret
inc
rcrl
imul
cmovbe
mov
lcall
das
inc
jns
dec
adc
gs
scas
add
adc
aad
lods
and
fidivs
sbb
cli
cmp
and
adc
dec
add
or
and
sahf
jo
les
xor
jbe
and
lock
push
jae
das
loop
call
inc
cwtl
adc
cmpsb
hlt
inc
scas
mov
repnz
sbb
mov
push
je
cs
into
sbb
in
sbb
mov
pop
pmuludq
mov
cli
push
push
jns
ds
or
adc
pop
ja
sub
mov
dec
int
outsb
inc
das
bound
mov
ja
mov
pop
dec
adc
pop
sbb
outsl
sar
outsb
mov
enter
pop
sti
cwtl
inc
int3
push
popf
mov
les
test
push
mov
cli
cmpsl
inc
adc
fimull
lods
mov
lds
add
mov
pop
cld
or
jbe
jne
or
push
sub
int3
push
dec
cwtl
push
fbstp
cwtl
dec
cmpsb
sbb
imul
lods
mov
cmpsl
mov
cs
out
fistpll
in
nop
out
jmp
adcl
lcall
stos
int3
and
das
fdivrp
and
test
xlat
pop
xor
out
jp
dec
outsb
jno
mov
add
aas
dec
push
lahf
out
add
nop
test
outsb
pop
inc
or
add
add
sub
push
loopne
or
xor
cmp
adc
aas
imul
push
inc
ja
cs
das
hlt
ljmp
pop
fdivs
adc
mov
add
aad
mov
jg
dec
cmp
fiaddl
xor
jge
shlb
mov
mov
ret
outsl
pop
cmp
cmp
test
ds
mov
push
arpl
jbe
jl
arpl
sub
and
mov
jmp
mov
lods
ss
mov
sub
push
pop
mov
pop
enter
mov
jbe,pn
std
mov
mov
and
aam
push
dec
xchg
les
int
pop
into
sbb
lods
pop
ret
repz
std
shlb
scas
push
or
ja
arpl
scas
sahf
fs
mov
scas
inc
sub
or
jp
lock
inc
pop
push
inc
call
jnp
sub
shl
test
jp
pop
jo
lcall
push
inc
adc
outsl
cmp
sti
or
pop
xchg
cmp
push
lcall
mov
je
adc
or
lcall
mov
push
xor
push
mov
test
ljmp
pop
je
scas
sbb
es
add
add
push
aaa
inc
inc
int3
bound
sub
push
dec
popa
pop
subl
add
movsb
mov
ss
pop
fists
inc
jl
add
nop
lea
push
dec
push
jmp
jge
scas
mov
pop
inc
pminub
notb
into
push
jge
or
xlat
cmp
jecxz
push
loop
adc
ret
test
out
ficoms
or
push
push
ja
pusha
push
test
and
push
mov
test
xchg
xlat
dec
cmp
int3
arpl
mulb
xor
aad
punpcklwd
or
fildll
push
fcmovne
pop
xor
inc
pop
test
mov
hlt
outsl
pop
pcmpeqw
push
pop
cmp
push
lods
decb
je
inc
push
and
and
adc
xor
mov
mov
aaa
adc
jg
aam
jge
nop
fimull
push
mov
rolb
sbb
push
cmpps
icebp
je
rcl
pop
jle
adc
add
mov
fs
shl
or
inc
scas
dec
iret
pop
mov
out
adc
inc
pop
std
push
push
push
test
jge
cmp
jge
add
aas
sahf
push
loop
inc
sbb
mov
outsl
and
jnp
clc
xchg
cmpsb
int3
fidivs
add
lea
jmp
add
shrl
adc
in
pop
sbb
and
imul
dec
inc
jecxz
clc
add
clc
jb
pushf
mov
inc
bound
push
dec
jg
sbb
push
outsb
nop
loop
arpl
scas
cmp
jle
cmc
cmpsl
mov
push
fisubrs
out
mov
incb
imul
mov
xchg
add
pop
ret
cwtl
es
das
je
notb
jns
ds
rcll
inc
jne
and
aam
int3
cmpsl
fcomip
mov
fistps
pusha
xor
cmp
jne
outsb
clc
std
cmp
into
in
int3
and
pop
cmpsl
xor
popa
fnstsw
das
cld
fwait
or
fldl
cmp
push
dec
mul
lods
adc
icebp
lcall
ja
pop
and
or
and
lods
mov
or
mov
addr16
inc
ret
xor
push
push
in
mov
fldl
pop
call
pop
mov
rclb
adc
push
inc
pop
push
mov
lock
loop
dec
push
pop
fidivrl
out
and
data16
add
pushl
pop
shlb
unpckhps
sbb
into
cmpsb
sbb
dec
pop
scas
push
jb
sub
xor
adc
adc
sub
inc
xor
fisubrs
push
ret
lahf
inc
add
loopne
sbb
mov
jo
cmpsb
mov
sbb
or
sub
or
pop
sub
sub
push
adc
dec
push
dec
pop
pop
dec
jp
push
push
mov
xor
cmpsb
mov
outsl
jecxz
call
mov
outsb
jmp
adc
xchg
push
mov
push
lods
ss
lahf
xchg
in
push
out
and
push
inc
dec
ljmp
pop
ljmp
fnstsw
inc
aaa
xor
mov
lret
mov
out
popl
inc
mov
outsb
ss
andl
lret
leave
mov
push
push
test
andl
dec
inc
xor
push
pop
pop
cmpsl
outsb
or
hlt
push
clc
cmpsb
out
jns
push
int
push
sub
xor
xor
cmpsb
xchg
call
sahf
mov
popa
sbb
in
scas
movsl
sub
addr16
pop
cli
pmaxsw
insl
ja
rcl
pushl
inc
aas
pop
in
arpl
and
adc
hlt
push
inc
sub
sub
jp
mov
xor
ljmp
aad
jecxz
jmp
pop
mov
lea
mov
outsb
es
dec
and
aaa
cmp
dec
sbb
add
jb
xchg
mov
adc
push
data16
sub
and
and
add
clc
lahf
out
call
jns
and
dec
adc
xchg
push
mov
es
pop
jmp
xchg
mov
loopne
sar
out
jbe
mov
jns
inc
fstl
push
scas
dec
jns
dec
mov
push
outsb
inc
int3
aaa
inc
adc
adc
enter
push
incb
push
adc
sub
outsb
xchg
pop
jle
mov
pushl
cmpsb
pusha
cwtl
jg
inc
std
das
mov
loop
pop
pop
inc
push
cwtl
mov
add
dec
and
cmp
sub
ljmp
outsl
ljmp
dec
decl
add
pop
add
call
add
adc
adc
lods
clc
cmp
jle
testl
jmp
fsubl
int3
push
xor
sub
push
push
add
sti
daa
and
pop
cmpb
jecxz
push
mov
inc
nop
dec
pop
fstpt
xor
push
cwtl
imul
pop
scas
cld
add
ret
adc
in
jae
jp
jo
mov
je
push
fmulp
ljmp
fidivrl
pusha
add
inc
and
sub
mov
imul
test
inc
inc
lock
loopne
lahf
gs
insb
mov
add
or
push
inc
scas
sbb
imul
divb
sti
mov
cs
dec
jp
pop
aaa
dec
add
inc
jb
sahf
sub
adc
cmpsb
sub
mov
push
dec
ds
mov
xor
push
cmpsl
lods
pushl
inc
in
inc
data16
push
out
cwtl
and
dec
sbb
scas
imulb
inc
mov
add
rcl
or
scas
push
fbstp
sub
push
push
into
adc
inc
push
jge
pop
dec
jg
push
pop
push
shrl
inc
push
inc
jne
test
cmpsb
sbb
jge
sbb
movsl
je
es
mov
shll
xor
mov
ss
jae
repnz
cmp
push
fnstsw
push
cwtl
jns
push
jle
stos
jnp
pop
enter
push
inc
in
inc
std
dec
in
sub
xlat
push
sahf
sti
ficoml
icebp
outsl
inc
inc
pop
jb
imulb
fisubl
or
inc
ljmp
fisubs
jle
adc
sbb
paddusw
pop
xor
sahf
outsl
adc
and
cmc
xchg
pop
xchg
mov
das
imulb
pop
push
lcall
cmc
es
adc
sbb
add
sti
dec
int3
cmpsb
jns
cmp
outsl
inc
es
jb
xchg
dec
adc
lods
nop
gs
fisttps
and
cmp
xor
in
daa
jae
decl
inc
lea
push
clc
push
aad
pop
ss
mov
push
sub
out
pop
sbb
jge
ret
in
mov
ljmp
int
adc
inc
test
push
dec
into
cs
imulb
mov
test
rcpps
imulb
mov
mov
shrl
cmpb
loopne
dec
mov
and
add
jg
decl
nop
ds
push
pop
add
xchg
push
loopne
sbb
dec
adc
movsl
mov
adc
lods
mov
jl
js
hlt
fcomi
add
js
ficoms
jmp
sbb
adc
mov
mov
filds
inc
into
cmpsb
nop
sub
push
clc
sub
sbb
push
aad
sbb
xchg
add
adc
in
inc
sahf
aaa
and
mov
into
inc
dec
insl
rclb
cmp
jle
sub
add
mov
scas
add
mov
adc
inc
loopne
loop
in
inc
lock
std
pop
roll
mov
sbb
pop
push
xchg
lahf
adc
sbb
jecxz
addb
sar
dec
aaa
cld
mov
adc
inc
inc
push
pop
js
and
pop
js
aaa
loopne
mov
pop
inc
sbb
xchg
and
aad
dec
add
inc
adc
fmull
loope
dec
and
xchg
xor
mov
pop
mov
aaa
notb
cld
ret
mov
dec
xchg
mov
loopne
out
out
and
sti
jg
mov
push
jnp
jle
das
ljmp
aam
gs
dec
cli
push
sbb
scas
sub
lods
sbb
cli
ja
inc
push
or
cmp
sbb
dec
cmp
cwtl
insl
jg
loope
push
call
in
jbe
mov
mov
mulb
sbb
outsb
mov
mov
shrb
out
sub
xor
scas
cltd
and
arpl
es
jle
ds
call
clc
adc
in
outsb
nop
adc
iret
adc
xor
inc
jne
movsb
sub
inc
inc
adc
lds
cmpsl
test
jecxz
scas
sbb
call
pusha
xchg
mov
addr16
mov
and
sti
inc
popa
push
adc
mov
cmp
clc
sbb
xor
dec
xlat
fistps
inc
jno
shlb
loop
jns
pop
dec
mov
fsubrs
lods
jbe
push
push
push
ficoms
test
jbe
push
adc
lcall
sub
or
xor
adcb
call
jnp
into
dec
call
mov
pushf
fstpt
dec
scas
cwtl
lods
cmc
ret
adc
sahf
nop
jb
mov
notb
imul
jbe
add
int3
pop
sbbl
lock
out
btl
inc
mov
sbb
shrb
and
xchg
jle
xchg
xlat
inc
inc
stos
mov
int3
pushw
and
addl
cmc
sti
mov
jg
lods
jo
adc
je
sub
sbb
unpcklps
int3
mov
cmc
fwait
add
test
ss
mov
dec
fimuls
aaa
or
push
dec
pushl
inc
pop
and
in
add
sbb
push
cmpsb
pop
add
mov
push
adc
cmpsb
scas
mov
pop
gs
inc
dec
xor
and
mov
push
test
push
and
iret
pop
or
cmp
test
pop
rolb
es
adc
fisttps
testb
mov
lock
xchg
lahf
or
cld
cmpsl
pushl
inc
dec
pusha
inc
dec
lods
loop
push
rorb
mov
inc
das
dec
pop
insb
imul
jle
push
hlt
cmp
fadds
popl
rcr
insb
call
jp
int
sbb
inc
loopne
jns
into
push
jns
jecxz
sti
push
int
in
dec
push
rcrb
push
sahf
xor
xorl
iret
mov
addr16
dec
arpl
fcmovnb
fistpl
ret
fwait
out
or
sbb
cs
clc
and
cmp
enter
push
inc
adc
popf
shl
emms
push
cwtl
inc
adc
pop
hlt
sahf
imul
in
push
dec
adc
push
sti
push
adc
xchg
mov
inc
fldt
push
sub
cs
sbb
mov
jle
xchg
fnsave
dec
lock
adc
sti
pop
cmp
jp
mov
xchg
cmpsb
push
and
outsl
add
jno
lea
pop
cwtl
pop
push
pop
push
add
fs
sti
push
divl
outsl
add
popa
jae
add
lods
pushf
testl
or
ss
addps
cwtl
or
shrl
movsb
xchg
pop
insb
call
inc
call
xchg
outsb
out
and
into
xchg
ret
sahf
adc
in
cwtl
sbb
fistl
sti
xor
pop
or
scas
pop
adc
mov
inc
push
call
push
dec
adc
mov
inc
rolb
ds
ja
lock
scas
inc
inc
or
adc
or
insl
sbb
daa
sahf
dec
sbb
mov
mov
fwait
fs
inc
sahf
sub
adc
outsb
ja
ja
xor
dec
into
imul
ljmp
inc
sub
mov
push
xchg
into
push
ja
push
pop
lahf
push
add
push
addr16
cwtl
xor
aas
xor
inc
pop
jnp
xchg
rcrl
movb
testb
fsubl
sub
negl
jge
cs
sub
pop
sarl
aaa
cmp
inc
or
inc
dec
mov
cwtl
and
add
push
cmp
xor
or
jle
jbe
jo
pusha
push
jnp
insb
mov
inc
loope
mov
or
push
pop
in
loopne
movb
xchg
es
out
insb
inc
idivb
cwtl
repz
inc
push
pop
and
push
out
stc
cmpsb
mov
pop
stos
sub
scas
sbb
jne
into
adc
dec
xor
ficomps
sub
inc
dec
mov
and
in
fdivrs
push
out
add
pop
dec
outsb
dec
xchg
pop
push
in
and
fcmovne
xchg
push
adc
xor
pop
fisttpl
aam
inc
xchg
push
push
sar
add
push
nop
inc
pop
inc
clc
jne
rcl
pop
push
aaa
push
mov
sub
mov
inc
inc
and
test
in
push
dec
adc
xor
xor
sti
int
test
clc
jb
fidivl
insl
mulb
roll
push
push
int3
xchg
rcll
push
inc
push
cmp
outsl
add
ss
test
outsl
rcrb
xchg
sahf
mov
stos
jne
lods
mov
cmp
jbe
adc
pop
cltd
inc
decl
xor
gs
and
push
rorb
pop
cmc
sbb
dec
dec
lea
push
lods
jne
jle
adc
push
push
mov
pop
popa
in
shrl
add
pop
hlt
xchg
nop
sbb
mov
add
jg
cmp
cs
or
scas
add
ss
decb
mov
pop
lret
scas
xchg
lods
cmpsb
decb
outsb
int3
jge
call
cmp
xor
inc
lret
aaa
ds
dec
inc
pop
mov
add
es
into
sahf
add
movb
fistps
negl
pop
xabort
incl
lcall
xchg
cwtl
mov
pop
lcall
inc
negb
sti
cmpb
mov
fisttpl
loop
xchg
dec
add
ss
sbb
call
adc
jbe
sbb
jne
pop
xchg
pop
out
sarb
shrl
push
lods
jecxz
aas
cld
es
sahf
rcl
incb
cmpsb
inc
es
xor
int
inc
mov
fistps
decl
in
add
lret
enter
ljmp
pop
mov
jecxz
and
inc
out
and
clc
orl
mov
cmp
add
cmp
sbb
pop
add
lds
insl
fbld
cwtl
rep
roll
mov
sbb
fistpl
movsl
xor
pop
sub
stos
and
test
inc
xor
into
sti
sbb
xchg
enter
push
lea
scas
shrb
cmpsb
mov
stos
cs
lret
jg
mov
adc
and
enter
lods
fdivs
notl
jecxz
mov
ds
incl
sub
jmp
aam
ljmp
cmp
icebp
out
dec
in
out
and
jns
ss
dec
mov
mov
loope
push
add
mov
inc
mov
aaa
push
push
mov
mov
mov
adc
data16
dec
shlb
notb
push
inc
cmp
rcll
cs
jge
loope
dec
mov
or
outsb
mov
sahf
cwtl
cmpsb
pop
into
push
popf
cwtl
dec
outsb
push
add
into
sbb
inc
mov
clc
lahf
add
jle
ss
call
inc
add
pop
scas
sub
jle
dec
call
dec
mov
fiaddl
push
xlat
call
sub
pop
mov
jmp
decl
mov
jg
inc
fldt
push
ret
cwtl
jmp
push
in
icebp
xchg
cs
xchg
push
push
out
fisubl
in
sahf
popa
xchg
ss
push
scas
mov
cmc
in
outsb
jns
dec
jae
push
push
jmp
movsl
imul
mov
pushl
aam
add
outsb
xchg
test
test
jle,pt
add
xchg
rorb
or
mov
clc
filds
call
pushl
push
jbe
test
push
mov
dec
or
outsb
movsb
sti
out
push
cmp
xchg
int3
cld
ljmp
clc
test
ja
scas
sub
and
cltd
adc
cmp
pop
mov
xchg
sbb
or
in
in
inc
data16
outsb
shll
cmpb
xchg
arpl
enter
hlt
dec
ja
add
mov
sahf
inc
movl
flds
fidivrl
pop
mov
test
mov
mov
mov
lcall
mov
sti
aas
sahf
pop
cmpb
push
pop
lea
outsb
lds
stc
scas
cli
jg
dec
mov
cmpsb
push
out
sbb
jle
push
hlt
insl
inc
decl
fstpt
into
loop
into
inc
jno
into
pop
je
out
orb
fcmovnb
push
jbe
push
sti
js
or
inc
mov
fs
scas
aad
add
xor
cmpsb
xchg
loop
add
sbb
adc
adc
mov
repz
and
repz
push
jmp
mov
xchg
push
and
jg
mov
fcmovne
pop
push
sti
lods
outsl
add
aam
or
scas
int3
outsb
lea
int3
inc
cmpsb
ret
sub
adc
fildl
push
ss
test
lahf
fsub
pop
ds
mov
cmpsb
leave
fistpll
xchg
mov
scas
push
das
sbb
into
or
inc
out
notb
pop
xchg
mov
ds
push
inc
in
mov
pop
cmc
add
jns
gs
pop
jmp
jmp
push
es
pop
test
adcb
sahf
adc
mov
pop
into
or
mov
fwait
cmpsb
call
mov
das
sbb
xor
mov
add
xchg
dec
loopne
addr16
mov
pushw
outsb
popf
mov
ljmp
cmp
inc
std
pop
test
data16
adc
pop
in
jle
push
and
fsubs
dec
frstor
into
ret
loop
dec
sbb
nop
jge
push
push
mov
subb
jle
sahf
iret
data16
adc
ljmp
es
adc
xchg
outsb
shrb
call
sahf
sbb
loope
shl
lcall
movaps
mov
test
inc
add
lods
stos
popf
ljmp
cmpsl
xlat
add
inc
jns
sahf
xor
loopne
incl
mov
mov
in
sbb
outsb
cmp
ds
je
and
xor
sti
push
stos
je
mov
push
or
bound
cmpsl
mov
mov
mov
sub
addb
mov
repnz
orb
mov
mov
rcll
jg
mov
dec
add
inc
test
xchg
pusha
or
inc
sti
outsl
push
das
push
in
lea
int3
ja
in
fstpt
and
test
push
dec
cs
sbb
shlb
stos
cmc
xlat
ljmp
popa
jns
loop
xor
sti
add
or
mov
daa
out
int3
mov
cmpb
dec
jns
ss
iret
dec
push
out
icebp
decl
dec
mov
ss
pusha
xchg
aad
jnp
adc
push
out
add
dec
dec
mov
in
xchg
and
lock
shrb
hlt
sarl
sti
or
cmp
fsubrs
out
pop
decl
inc
inc
dec
sub
addl
incb
aaa
jle
cwtl
cmpsl
inc
enter
pushf
push
mov
sti
jo
mov
loope
jb
push
adc
cmpsb
inc
cmp
jno
jo
xchg
sub
mov
fstpt
xlat
xchg
push
je
sahf
push
xchg
lods
xor
mov
cmc
push
add
cld
inc
test
mov
mov
sbbl
add
jno
mov
dec
js
rol
ja
cmp
mov
cwtl
or
adcb
rcll
cmp
repz
cmpsl
pop
cld
cmpsb
fisttps
push
push
sub
mov
mov
push
aas
inc
ret
ss
adc
ss
lods
fnsave
cld
sub
push
dec
aaa
out
call
pop
mov
aam
lods
iret
push
lea
repz
dec
cmc
and
int3
or
sub
sbb
cwtl
std
ljmp
data16
push
push
inc
lcall
xchg
push
fiadds
push
into
sbb
cli
pop
push
daa
and
jecxz
je
insl
and
cwtl
sbb
das
push
jle
inc
ret
ja
jp
out
dec
das
lahf
push
scas
lret
jmp
aam
cld
es
cs
mov
mov
ss
pushw
loopne
sub
decl
leave
add
pop
inc
out
fadds
lock
adc
jnp
add
fwait
ss
or
adc
call
shll
paddb
bound
xchg
emms
inc
test
mov
sbb
fldl
iret
ljmp
clc
inc
sbb
sub
es
imul
inc
jns
ret
xor
outsl
inc
rep
jp
jbe
mov
lahf
or
lahf
cmp
clc
inc
xchg
dec
mov
mov
ret
fildl
mov
jg
ret
xchg
adc
mov
mov
pop
gs
push
and
jge
imul
dec
enter
imul
and
jae
or
inc
pop
out
setle
iret
cmpsb
call
pop
lea
scas
into
jl
sbb
sbb
inc
push
lcall
mov
ss
and
add
add
sbb
sahf
mov
aaa
enter
ss
daa
pop
lret
shrb
mov
xchg
xlat
jecxz
call
aaa
jno
in
push
mov
push
roll
push
in
dec
add
cmpsl
xchg
daa
pop
sahf
cltd
pop
mov
sahf
push
pop
dec
pop
cmp
cmp
or
cmpsb
dec
pop
rolb
lcall
sbb
push
adc
mov
je
push
pop
sub
lret
cmpsb
push
or
or
xchg
hlt
and
scas
push
das
mov
fdivrl
dec
xlat
in
pop
pop
pop
lock
or
jmp
addr16
ficomps
xchg
or
ficoml
sbb
and
js
cmp
jl
add
cmpsl
sbb
xor
outsb
inc
mov
sbb
inc
dec
sub
add
push
dec
cwtl
sbb
sub
add
dec
add
aad
cmp
adc
push
scas
push
sbb
out
xchg
add
push
scas
lods
call
xchg
xchg
mov
mov
shr
pop
out
out
push
decl
bound
cmpsb
int3
cltd
xchg
out
addr16
cwtl
mov
push
lock
adc
scas
inc
test
fbld
jecxz
xchg
ss
icebp
out
out
ljmp
cmp
pop
rcr
xchg
xchg
xchg
outsb
xor
mov
push
les
cmpsl
push
dec
mov
xchg
std
test
mov
jmp
adc
mov
push
xchg
or
add
cltd
cmc
push
std
dec
cmp
push
push
mov
loopne
icebp
idiv
in
mov
outsl
pop
add
scas
outsl
xchg
gs
fisttps
out
mov
aas
adc
shufps
inc
das
or
xchg
iret
scas
imulb
jg
sbb
push
fistps
xchg
dec
enter
call
jb
add
cmpl
into
nop
lods
into
stos
dec
call
dec
test
push
mov
out
pop
pop
es
mov
push
push
and
jg
jne
repnz
xor
xchg
rcll
mov
adc
mov
je
insl
in
xor
mov
por
jae
inc
or
dec
sahf
pop
shl
inc
add
out
inc
xlat
data16
cmp
inc
mov
or
pusha
jle
sub
jle
mov
ss
nop
fwait
or
dec
rolb
pop
sbb
mov
or
rcll
jmp
jbe
xchg
mov
lcall
in
addr16
cs
pop
jno
cmp
push
imul
arpl
andb
out
mov
mov
inc
jmp
popa
xor
cmc
outsl
jne
or
arpl
xor
fmulp
push
enter
enter
mov
dec
xchg
jmp
scas
arpl
scas
loopne
dec
divps
je
inc
mov
xor
testb
xor
out
daa
xor
jl
mov
adc
pop
adc
idivl
adc
dec
xchg
fisubrs
xchg
fwait
mov
addl
outsl
adc
outsb
test
xor
repnz
push
pop
pop
inc
pop
lods
and
int3
out
xor
xor
add
bound
das
push
int3
movsl
outsb
jo
movsl
mov
outsb
xor
adc
fistl
fidivs
mov
sub
fildl
mov
scas
dec
rorl
fs
push
push
add
jbe
std
or
cmpsb
hlt
mov
jb
add
or
je
mov
pop
cmpb
out
xchg
ss
push
xor
inc
jmp
mov
loope
sahf
negb
lods
cmpsl
fisttps
out
jne
dec
xor
data16
push
lods
inc
movsl
addl
sahf
sahf
lret
inc
or
ss
stos
test
ror
in
add
fisubs
lock
xor
test
pop
ds
cmpsb
jp,pt
inc
xchg
inc
sahf
lea
mov
push
sub
and
sub
xor
clc
add
dec
sarb
je
mov
add
cwtd
sti
cmc
xlat
cmp
inc
lahf
xchg
mov
cmp
icebp
ljmp
mov
sbb
pop
push
int3
lret
lea
sub
mov
pop
push
mov
ret
out
pop
enter
mov
push
fsubrl
ss
int3
mov
ljmp
pop
enter
pop
popa
xchg
mov
cmp
sahf
imul
enter
mov
lods
test
push
adc
and
mov
mov
repnz
rcll
lea
popa
scas
cmpsb
push
fldl
adc
imul
mov
pop
lcall
jmp
call
jmp
enter
scas
rcrb
push
fcoml
jns
push
and
and
jbe
and
pop
mov
out
xchg
test
lods
inc
push
and
fsubl
outsl
out
out
push
mov
ss
decb
std
mov
cs
das
sarb
arpl
outsl
ret
test
lahf
add
jmp
sahf
xor
ljmp
loop
test
lcall
push
add
sarl
rcl
adc
das
aam
data16
clc
dec
stos
adc
out
and
lcall
roll
je
das
leave
mov
in
inc
mov
mov
lahf
inc
inc
push
cmp
sti
stc
daa
ljmp
test
test
jae
lahf
cmpl
sbb
pop
pop
mov
cmp
add
dec
icebp
pop
cli
fistpll
rcrb
shlb
push
inc
cwtl
cmpsl
sti
aas
je
push
jle
filds
xchg
pop
sub
pop
jbe
push
stos
sub
outsb
rcrb
jp
ret
jbe
incl
cld
scas
sahf
call
xchg
push
sarl
enter
call
mov
xor
in
jmpw
fcomip
push
int3
inc
test
cmp
sahf
adc
xchg
insl
xchg
push
movsb
outsb
xchg
ficomps
popa
ret
adc
pop
or
push
inc
repnz
ss
lock
popl
lcall
addr16
push
push
shr
outsb
inc
pusha
xor
add
xchg
dec
sarb
and
in
roll
aam
xchg
inc
lea
idiv
data16
mov
sub
inc
sub
jns
sahf
lock
or
int3
loop
sub
test
jle
cmpsb
inc
ljmp
scas
les
scas
sti
ret
cmpsl
xlat
adc
ja
sub
adc
mov
adc
adc
push
lods
imul
mov
add
out
cs
mov
mov
xchg
sub
call
imul
ds
scas
loope
pop
enter
lods
leave
addb
or
in
loopne
shrl
je
cmpsb
movb
pop
and
clc
sub
jp
jecxz
and
ror
je
test
mov
cmpsb
sub
aad
pop
jecxz
jg
jl
and
dec
mov
test
shrl
icebp
fiaddl
clc
adc
rorb
js
insl
mov
inc
aam
jo
or
dec
lahf
cs
mov
push
into
pop
mov
add
pop
test
jl
popf
sbb
dec
push
xlat
out
cs
test
lods
cmp
jns
dec
and
cmpsl
ss
jbe
int3
push
shrb
out
into
aad
cltd
jb
mov
xor
xor
rolb
push
xchg
push
sub
jmp
mov
xor
outsl
lods
dec
push
adc
inc
inc
push
jp
loopne
pop
push
lahf
inc
pop
push
inc
fsubrs
adc
xchg
pop
and
inc
dec
pop
ss
inc
loopne
or
xor
enter
sbbb
mov
popa
mov
inc
mov
filds
xchg
out
mov
jne
jl
sub
cmpsb
scas
je,pt
mov
push
imulb
clc
ffree
fwait
ds
in
push
jno
xor
ja
sahf
into
aam
in
push
mov
fsubrs
scas
fmulp
jb
out
mov
and
adc
fcoms
add
int
ret
fidivrs
jl
mov
cmp
inc
test
add
xchg
pop
outsb
pop
sub
adc
ds
pop
dec
push
das
adc
add
insl
out
popl
mov
movsb
test
mull
clc
xchg
xor
cmp
lods
out
and
es
xchg
data16
stc
ja
mov
sti
push
mov
dec
rcrb
sbbb
sub
dec
push
mov
loopne
pop
out
out
sahf
dec
adc
int
add
nop
stos
jge
push
push
dec
insl
out
jnp
push
movsl
pop
jo
into
js
out
inc
or
push
jbe
gs
and
push
aaa
adc
push
push
xor
inc
sub
push
imul
dec
movsl
jns
dec
aas
xor
mov
ds
lret
ret
inc
notb
das
enter
fiadds
adc
xor
mov
js
outsb
adc
test
or
in
stc
das
inc
push
das
cld
shrl
pop
pop
in
mov
out
xchg
fs
push
inc
movsl
xchg
mov
pop
bound
out
push
outsb
aaa
mov
xor
sahf
mov
dec
test
adc
add
inc
scas
inc
and
call
push
mov
push
adc
sbb
test
into
test
add
and
inc
or
add
inc
mov
jp
push
in
daa
pop
cs
cmpsb
push
iret
push
sbb
es
dec
notb
add
adc
leave
sub
jns
pusha
loopne
dec
addr16
out
aad
push
ficomps
add
fwait
mov
ja
mov
stc
push
cmpsb
lahf
push
xchg
sbb
push
mov
and
cmp
push
ja
imul
mov
xor
outsb
enter
jl
push
out
pop
push
cmpsl
aam
mov
lock
test
jecxz
push
es
les
loopne
and
ja
loope
push
pop
add
fdiv
jb
or
and
inc
shrb
sahf
loope
int3
in
lea
push
bound
jbe,pn
sarb
jnp
inc
insl
pop
sti
sbb
cmpsb
sbb
add
scas
xor
fs
xchg
mov
inc
mov
push
int
ffreep
aas
push
push
sub
int3
pop
lods
jge
xchg
cli
mov
adc
das
into
inc
pop
mov
fisubrs
nop
push
aas
push
mov
test
fcoml
popa
jns
je
or
mov
loopne
popa
mov
sub
xor
iret
mov
mov
and
je
pop
out
andl
stos
movsb
pop
push
cmp
add
test
nop
pushf
add
fmull
push
stc
add
add
popa
pop
mov
jmp
js
les
xor
push
adc
pusha
sarl
inc
mov
jbe
xor
mov
sbb
mov
mov
mov
out
inc
stos
cmpsb
fistpll
cs
add
aaa
jne
scas
lds
dec
test
jecxz
lods
aam
xchg
or
mov
fistpll
divb
pop
sbbl
divb
into
xorb
std
mov
mov
scas
mov
stos
test
add
push
ret
scas
jbe
out
mov
xchg
push
push
jle
add
incb
into
and
cmpsb
sahf
inc
push
clc
inc
add
mov
mov
inc
mov
sub
ret
pop
cmp
push
sub
rclb
clc
sub
aas
insl
call
bound
clc
mov
dec
pop
repnz
jns
adc
cmpsb
sarb
adc
movsl
push
pop
xor
push
pop
nop
mov
sub
lock
dec
into
enter
into
push
lods
rcrl
mov
xor
jmp
daa
je
jp
pusha
adc
xchg
cmp
mov
outsb
jbe
clc
out
push
lods
pop
push
inc
test
jbe
test
pop
jge
ss
pusha
addr16
iret
stos
stos
fiadds
push
mov
mov
lods
orl
nopl
add
popa
sahf
sub
push
cmp
pop
jns
mov
jp
inc
dec
out
movsb
cmp
rcll
loope
jbe
sub
pop
inc
sbb
sbb
add
jbe
lcall
lods
prefetch
or
push
sti
lret
test
movsb
pop
cmpsb
in
xchg
movb
ret
scas
mov
add
jg
pop
scas
inc
add
adc
push
test
stos
push
jmp
cld
mov
inc
nop
fistl
xlat
pop
loopne
add
dec
popf
out
stos
ret
clc
mov
in
dec
stos
jne
mov
dec
add
loope
fisubrs
data16
add
ja
popa
scas
xchg
aaa
ja
call
jbe
loope
adc
ret
push
dec
push
aam
mov
adc
call
push
add
rcll
push
int3
mov
arpl
adc
mov
push
xor
mov
or
adc
and
cmpsb
adc
adc
js
fsts
lcall
mov
jmp
adc
lods
adc
sub
mov
rol
cmp
add
stos
lods
aas
popf
mov
pushf
fdivr
sub
callw
cmpsl
in
pop
add
lahf
test
imul
lods
js
outsb
mov
imul
test
rclb
rolb
inc
add
dec
into
cs
popf
ret
shlb
aad
rcr
aaa
push
or
into
rol
or
test
test
mov
orl
add
cld
adc
sti
cmc
push
fstpl
ss
aad
xchg
cs
pop
shlb
nop
mov
jnp
add
xlat
dec
divl
xchg
cmpsb
lds
cltd
inc
jne
lock
add
inc
push
scas
int3
pop
mov
jmp
jmp
lret
inc
scas
into
xchg
mov
pop
xor
fldt
sti
or
pop
inc
push
lret
subb
ret
cmp
pop
push
push
pushf
push
enter
rclb
adc
xor
aad
notb
fmulp
mov
sbb
or
lret
cmpsb
testb
or
mov
insb
jmp
push
adc
cld
sbb
enter
test
icebp
insb
movsl
stos
aaa
push
addl
sti
test
adc
sub
lods
imul
push
popl
mov
stos
xor
outsb
out
pop
inc
pop
mov
gs
insl
add
mov
into
decb
repnz
add
or
fsubrl
ds
sti
mov
and
cmp
and
sbb
sub
sbb
mov
into
adc
adc
movnti
cmp
adc
dec
insl
subb
cwtl
lock
mov
add
mov
enter
sti
inc
sbb
outsl
dec
push
push
movsb
loop
jge
out
fildll
or
outsl
xlat
pop
fisttps
scas
lret
inc
in
aas
mov
iret
push
enter
movsl
or
mov
sahf
push
inc
sub
mov
and
pop
clc
lds
fs
push
or
clc
ja
push
adc
sbb
outsb
movsl
xchg
fcomip
pop
inc
sub
daa
imul
push
cmp
pop
movsl
jbe
pop
lcall
out
orb
and
pop
xchg
sarl
cli
add
mov
call
andl
mov
cli
outsb
push
mov
lock
out
stos
push
or
xchg
mov
dec
or
mov
fs
jb
in
mov
rcrl
xor
mov
mov
rorl
cmpsb
jns
add
cmp
inc
das
daa
je
inc
rol
mov
popa
inc
pop
rcrl
jbe
stos
xorl
fcomp
add
or
cmp
cmpsb
push
mov
in
xor
pop
add
scas
ss
sahf
push
push
jo
lods
out
and
cmpl
mov
sbb
sub
jbe
lahf
adc
dec
out
test
jle
aam
cltd
ret
add
mov
mov
inc
pop
scas
outsb
loopne
fstl
je
das
lods
jae
cmpsb
jecxz
shl
aam
out
cmp
push
iret
push
sti
les
push
fcomip
or
cmp
inc
mov
jecxz
ret
add
es
adc
inc
jnp
pop
sahf
xchg
push
pop
inc
test
dec
lods
add
mov
pop
cmpl
push
push
test
pop
jns
stos
mov
cmp
nop
les
add
sahf
or
pop
or
in
add
repz
xchg
fcoml
push
sub
stos
jle
stc
jo
fs
cmpsb
into
push
es
sub
adc
xchg
push
cs
or
sarb
cs
sbb
clc
cwtl
cmp
pop
inc
clc
and
xchg
sub
jg
sub
dec
into
imull
mov
decl
sub
or
in
mov
inc
or
inc
das
mov
aas
cmpl
lahf
add
sahf
add
test
hlt
jne
leave
int
mov
jg
loop
pop
push
add
decw
or
aaa
sub
jmp
or
jbe
push
bound
push
or
addr16
push
out
mov
jns
dec
cs
mov
movsb
aas
xor
das
test
inc
pop
shrb
enter
cld
mov
movsl
push
push
and
mov
xor
aam
sbb
enter
mov
xchg
and
js
jg
add
test
pop
addr16
mov
jl
enter
dec
dec
adc
pop
cli
or
sub
aam
addb
adc
loop
cmc
xor
adc
dec
adc
adc
jl
add
lea
or
cmp
or
outsl
sub
jno
fcmovnb
mov
xor
cmpsb
ja
es
adc
mov
shlb
jle
mov
adc
pop
adc
repz
pusha
loopne
imul
aad
lcall
or
push
mov
fisubl
outsl
push
mov
les
and
xor
mov
loopne
dec
aas
lods
and
xchg
sub
sbb
inc
cld
fstl
cmpsb
push
push
das
push
ds
cmp
push
and
insb
cltd
and
jg
pop
das
jne
and
xor
mov
sub
addr16
hlt
pushl
jno
js
lds
adc
push
push
or
and
addl
ss
cwtl
jl
nop
mov
jbe
or
add
xor
and
sbb
mov
jp
push
fistl
in
ret
add
insl
push
adc
pmuludq
icebp
xchg
add
dec
jle
scas
xchg
into
sub
dec
push
mov
push
add
lds
out
push
inc
in
out
fdivrl
mov
mov
nop
push
inc
inc
data16
in
inc
push
jl
and
jno
cmpb
fdivr
adc
sbb
dec
cltd
gs
mov
into
inc
push
out
test
fdivrp
xchg
inc
popa
movsl
sub
stos
push
pop
mov
mov
rep
insb
ss
int3
and
sub
jg
push
pusha
movsl
scas
es
es
cmpl
adc
jg
repz
cmc
mov
push
ss
mov
out
repz
pushf
lret
pushf
out
fcoms
xchg
clc
mov
std
lea
bound
cltd
stos
lods
add
das
dec
lahf
mov
jnp
fildl
jmp
jge
and
inc
and
repz
insb
out
add
ret
aad
lcall
push
cmp
inc
mov
jbe
add
cmp
outsb
rcrb
test
and
scas
mov
je
xchg
std
into
mov
or
cmpsl
ret
push
pop
add
xchg
jecxz
mov
mov
mov
pop
into
in
mov
clc
sub
inc
out
adc
cs
xlat
lods
mov
push
inc
pop
add
cmp
jp
add
pop
jl
pushf
ljmp
clc
jns
cmpl
sahf
add
fisttps
add
ss
inc
test
repnz
cmp
adc
ljmp
sbb
jne
stos
cmp
int3
mov
ljmp
test
adc
xchg
shrb
dec
das
pushf
inc
fistpll
xchg
movb
jmp
jno
xor
clc
cmpsl
push
hlt
sti
cmpsb
cmp
pop
outsb
test
lret
sti
in
lock
mov
jg
dec
fisttpl
mov
std
je
cld
inc
mov
jle
stos
dec
in
inc
lcall
mov
adc
and
mov
das
stos
popf
pushf
rclb
inc
repz
ret
shrl
in
fs
enter
std
fadd
fldcw
adc
lret
das
mov
mov
std
testl
mov
jnp
mov
mov
jmp
lret
cmp
mov
stos
rorl
aas
push
movsl
pushf
fldcw
in
mov
stos
stc
stos
call
pop
xor
inc
sar
mov
stc
in
popf
aad
xchg
jg
stos
jno
fscale
inc
lret
xchg
pop
mov
xchg
sbb
stos
jg
in
pop
jle
std
fs
xchg
stos
adc
lds
stc
cld
stos
fstps
leave
std
daa
je
cltd
stos
cmc
mov
pop
jle
int
push
push
les
outsb
adc
stos
pushf
pop
cmc
pushf
in
int3
stos
pop
test
std
pushf
jle
in
lcall
imul
stc
in
pop
loope
stos
sahf
insb
in
lret
xchg
pop
jle
stos
call
push
mov
pop
jle
in
pushf
sbb
adc
in
out
pushf
ret
sub
sbb
std
out
pop
xor
cmc
dec
sbb
sbb
mov
xchg
mov
std
lret
adcl
test
pushf
mov
inc
cmp
cmp
or
cmp
movsl
cmpsb
or
lea
lods
pop
and
ret
pop
lcall
int3
pop
inc
stos
xchg
pushf
add
out
lcall
xchg
pop
incb
stos
jge
jl
xor
stos
xchg
lret
push
jle
js
daa
arpl
stos
and
dec
fwait
insb
adc
cmpsb
popa
push
cld
or
sub
add
bound
repnz
add
pop
adc
pop
js
and
push
pushf
mov
repnz
or
insb
stos
inc
mov
xor
pop
jle
or
nop
xorl
inc
pop
jle
in
iret
aam
stos
jmp
jecxz
stos
cmp
int
std
or
xchg
dec
das
mov
inc
stos
push
out
std
pop
xor
stos
mov
adc
pushf
sub
std
pop
loopne
repnz
das
sub
iret
repz
stos
sbb
jmp
jne
pop
jae
popa
sub
test
imul
push
mov
push
adc
loop
ds
call
lea
cmp
jbe
loopne
std
shl
in
jno
ss
jne,pn
pop
xchg
sbb
rol
pop
and
mov
jbe
popa
xchg
push
out
dec
insl
loop
cli
jmp
push
cwtl
cmpl
xchg
cmp
push
ficoms
cmp
out
inc
mov
jmpw
lods
cmp
xchg
int
pushl
test
je
push
jnp
jge
outsb
aas
inc
loope
cli
scas
popf
lods
pop
mov
mov
jns
ret
lahf
lret
fnsave
fiadds
jne
int
and
pusha
lahf
sub
cld
adc
jno
inc
stos
xchg
xor
add
cli
adc
adc
sub
inc
js
pop
fidivs
lods
dec
aam
loope
xor
aas
xor
jne
mov
sahf
dec
mov
repz
jl
inc
jge
stos
xor
fnstenv
mov
outsl
ss
cwtl
ljmp
pop
loop
mov
inc
xor
dec
xlat
loopne
iret
cli
dec
repz
leave
mov
and
std
inc
cwtl
or
lcall
das
and
sti
pop
sti
xchg
xchg
clc
inc
fistps
lea
out
loopne
mov
dec
pop
stos
cmc
pop
aam
jle
inc
pop
mov
mov
test
mov
enter
stos
out
outsb
fstpl
fstpt
add
pop
fisttps
cld
nopl
hlt
inc
sahf
clc
clc
daa
fistpll
lock
mov
sbbl
sub
lods
jbe
mov
loopne
icebp
in
aaa
inc
sub
addr16
outsl
inc
adc
push
ljmp
pop
js
loop
fidivrs
jns
scas
in
cmpsl
test
adc
lock
jbe
daa
cmp
dec
loop
push
mov
cmpsb
dec
mull
aas
cs
mov
into
aad
add
xchg
je
iret
xor
data16
pop
je
rorb
add
mov
int3
jne
out
dec
clc
xor
dec
ret
outsb
jmp
push
ret
and
mov
jbe
addb
mov
xchg
add
ret
inc
sub
mov
das
fstpt
dec
jg
clc
inc
jbe
xchg
sub
loop
aad
add
fsubl
stos
test
movsb
or
mov
mov
sub
imull
mov
push
enter
mov
cmpsb
push
mov
loope
inc
aaa
xor
sahf
mov
mov
mov
fcmovne
daa
popa
and
in
lods
mov
es
pop
fistpl
mov
mov
lock
pop
mov
aas
mov
dec
jbe
inc
push
push
add
jg
push
ret
lock
push
icebp
mov
fidivrs
mov
sbb
fcom
xor
jbe
inc
rorl
and
mov
xchg
ds
shrl
pusha
jle
cmp
pop
or
mov
mov
movsl
pop
jbe
popa
ds
subl
push
jmp
sahf
push
jne
into
cmpb
xlat
cli
adc
in
sbb
ja
outsb
movsb
pop
into
cs
xchg
jle
push
pop
mov
ljmp
jge
loope
test
loopne
data16
cmp
push
lcall
inc
lea
insb
divl
mov
push
nop
push
enter
scas
add
outsl
push
sti
cmpsb
aaa
inc
out
cmpsl
clc
adc
mov
dec
pop
add
dec
pop
sub
sbb
push
in
sarb
pop
gs
lods
pop
add
pop
push
cwtl
and
popa
out
mov
add
cmp
jbe
lods
mov
fistpll
dec
jbe
cmc
mov
inc
cmp
mov
sti
rol
or
jbe
pop
push
popa
pop
push
push
negb
pusha
xchg
lret
sbb
pusha
test
xor
inc
and
in
add
mov
mov
scas
push
xchg
rcr
cmp
xchg
inc
call
xchg
aaa
inc
js
es
jbe
call
nop
outsl
and
sbb
gs
mov
lcall
mov
ret
out
nop
sbb
cmpsl
lock
or
and
inc
push
xchg
incl
adc
mov
sbb
je
mov
and
push
movb
movsb
das
pop
subl
push
popa
sbb
aas
aaa
or
stos
cs
adc
jns
fcmovnb
jg
xor
dec
dec
lods
call
inc
xchg
lret
pop
xchg
add
sbb
test
cmp
out
xlat
outsb
test
sub
js
inc
xchg
push
int3
lahf
gs
dec
rep
mov
push
xchg
testl
outsb
add
adc
inc
push
pop
sbb
pop
clc
and
test
jle
call
outsb
and
loop
push
fucom
inc
call
hlt
pop
out
mov
aaa
iret
bound
out
or
fs
inc
cmp
aad
add
adc
sbb
outsl
push
mov
jb
rclb
pop
pop
fwait
push
push
ss
in
adc
inc
jle
nopl
sbb
or
pop
dec
pushw
outsb
jmp
pop
adc
add
cmpsb
jbe
add
mov
or
sahf
out
or
mov
dec
cmpsl
out
shlb
in
mov
rorl
fildl
jne
scas
xchg
lods
sahf
push
cmpsb
std
decl
xchg
and
adc
pop
cmpsl
in
or
adc
pusha
push
jg
fsubs
push
in
ss
xor
pushl
scas
aad
addr16
lods
adc
and
cwtl
fistpll
stos
decl
into
jmp
sbb
cmp
clc
out
dec
xchg
je
pop
rclb
testb
rorb
sti
jae
cmpsb
sti
adc
shld
push
int
pop
lods
data16
push
sbb
add
add
pop
out
ds
ja
rol
fcmovne
gs
fbld
adc
into
outsb
scas
lcall
push
inc
ss
loopne
ljmp
pop
push
mov
pop
enter
cmpl
test
xchg
inc
mov
sub
dec
into
in
inc
fildl
es
add
adc
mov
push
sub
mov
sub
and
sti
pusha
xor
jns
jo
or
adc
fmull
xor
sub
ret
call
subb
sbb
and
lods
add
mov
mov
jne
inc
inc
or
rolb
decl
push
adc
cmpsb
lock
neg
add
jo
dec
pop
pop
xchg
cmp
push
xchg
pop
int3
sub
add
add
es
je
testb
mov
inc
jbe
mov
andl
push
les
mov
cmpsl
test
aaa
outsl
push
cmc
cwtl
and
mov
rcrb
arpl
add
jno
add
test
cmc
push
jae
jbe
cld
add
arpl
cmp
jbe
sbbl
push
lods
jg
rcr
mov
add
outsl
ss
xor
ss
add
lods
mov
sbb
je
shlb
rorb
inc
jo
pop
aaa
xchg
dec
sti
jbe
mov
scas
xor
sti
data16
and
fidivl
cmpl
push
sahf
rorb
icebp
outsl
inc
outsb
dec
mov
push
das
inc
insb
push
dec
push
mov
enter
adc
cmpsb
sbbl
push
mov
rolb
dec
adc
or
lahf
lcall
push
push
movsb
mov
dec
cmp
add
cbtw
or
sbb
sbb
push
and
sub
and
pop
xchg
filds
sub
xchg
sbb
xchg
iret
and
cmpsb
arpl
lock
addr16
mov
jl
xchg
addr16
mov
inc
sbb
inc
mov
xor
loope
xchg
test
cmpsl
mov
adc
and
fwait
cmp
data16
push
jae
in
jg
out
cmp
jnp
repnz
lods
mov
inc
jle
jmp
inc
sbb
dec
inc
mov
push
pop
fisubl
pop
push
shrb
mov
add
sbb
outsb
push
out
jb
addr16
fnstsw
adc
push
add
push
add
xor
sub
push
and
mov
lods
js
xor
lods
sbbl
jns
call
aam
les
jle
adc
fwait
sbbb
outsb
repnz
fimuls
sub
add
xlat
int3
cwtl
adc
sbb
inc
push
out
inc
and
push
xor
int3
adc
cmp
mov
out
rolb
dec
xchg
in
and
adc
jno
pop
in
dec
loopne
into
fsubl
sti
jge
pop
mov
loop
add
xor
sub
dec
scas
and
sahf
cmp
lods
jmp
push
inc
mov
mov
push
mov
data16
inc
jbe
sub
mov
adc
dec
pop
cmpsb
dec
jp
ss
pop
inc
dec
clc
pop
mov
addr16
jns
fstp
jnp
insb
fs
push
mov
or
jle
nop
jecxz
into
push
popf
jns
mov
je
out
or
and
aam
xchg
addr16
add
push
sbbb
cmp
xchg
cmpsl
add
pavgb
fadds
xchg
mov
sbb
fwait
push
push
dec
loopne
pop
mov
lds
out
jne
lods
adc
and
dec
pop
cltd
pop
push
ja
mov
lock
adc
pop
mov
pop
sbb
enter
loopne
arpl
sub
sub
pop
add
inc
xor
jmp
push
push
pop
dec
push
ja
mov
vxorps
incb
aas
push
mov
out
outsb
add
and
xchg
outsb
jo
decl
cmpsl
xchg
inc
nop
cmpsl
pop
insl
and
rol
inc
into
adc
or
dec
jmp
and
cwtl
xchg
mov
mov
pop
ljmp
xor
les
loop
inc
aad
or
es
lea
scas
movaps
and
pop
icebp
jmp
cmpsl
xchg
dec
sub
out
aas
lods
arpl
aad
add
mov
lods
lcall
dec
xchg
popa
inc
mov
adc
out
pop
fdivr
call
setp
jle
push
cmp
sbb
insl
mov
sti
pop
out
push
add
fcomi
pop
inc
aaa
into
fwait
daa
pop
outsb
movb
adc
mov
outsb
sbb
inc
clc
outsl
and
movb
int3
rcrl
jnp
xchg
hlt
iret
in
and
xchg
mov
fs
fcoms
and
lss
push
jns
adc
gs
out
inc
inc
not
push
inc
adc
pop
add
mov
mov
outsb
xchg
push
and
cld
int
imull
out
add
int
negb
ret
adc
fs
mov
lods
cmp
int
stos
push
push
fldt
iret
lret
push
mov
test
pop
test
addr16
sahf
xchg
or
and
pop
jns
pop
sub
test
xor
xchg
lret
fwait
dec
add
lods
push
sub
stos
rolb
out
sahf
push
sahf
xchg
test
popf
pop
sti
std
pop
out
pop
jns
enter
enter
sub
or
jle
jbe
inc
sub
lahf
xchg
addr16
pop
and
mov
test
cld
pop
push
sub
lret
inc
mov
mov
xchg
add
and
out
xchg
pop
jns
sub
pop
add
dec
in
insl
sbb
pop
jns
and
popa
in
inc
jl
lahf
xchg
lods
push
popa
addl
dec
movsl
bnd
mov
cmp
cld
add
xchg
lret
inc
stos
sbb
lds
movsl
push
test
xchg
mov
nop
add
sub
push
and
pop
jbe
jle
mov
lods
add
es
sub
int
push
or
inc
ret
adc
fwait
call
add
jae
adc
push
mov
add
bnd
ss
mov
and
mov
cmp
and
into
xchg
pusha
ss
lock
add
or
lock
push
fnsave
outsl
mov
adc
dec
sarb
or
sbb
push
push
clc
and
mov
mov
mulb
and
out
cmp
push
das
into
pop
imul
add
sbb
cmp
ljmp
and
fmulp
push
and
pop
cmp
addr16
jg
mov
dec
jne
cmc
rol
xchg
push
cmp
pop
iret
test
adc
es
pop
xor
pop
dec
notb
mov
or
mov
sub
ja
pusha
clc
inc
fs
inc
out
or
pop
push
push
es
jns
xchg
clc
es
inc
mov
xchg
xor
push
and
insl
adcb
or
lock
jbe
pop
sub
cmp
jae
outsb
insl
cwtl
xchg
loop
enter
inc
adc
jg
fisttpl
dec
push
pop
loopne
mov
add
xlat
scas
push
cs
mov
lock
xor
and
xorl
aas
addl
scas
xchg
test
mov
fisttpll
or
lds
add
shll
out
mov
add
push
nop
pop
adc
inc
test
push
in
adc
into
or
in
jo
js
inc
cli
imul
pop
rclb
xchg
sahf
shll
nop
fdivp
jns
outsb
push
sahf
fwait
push
jns
jle
pop
and
es
cld
nopl
imul
lcall
rol
inc
push
sub
push
pusha
into
adc
dec
cwtl
fisubrl
test
dec
pushl
cwtl
sub
mov
cmp
scas
xchg
mov
push
nop
movnti
les
notl
pop
cld
decl
push
clc
nop
in
outsb
cltd
pop
scas
int3
popa
scas
xchg
mulb
dec
push
in
inc
pop
or
imulb
lcallw
aaa
es
cld
add
xchg
bound
aaa
ds
sbb
mov
adc
cmpsb
arpl
mov
loope
push
and
xorl
aad
pushl
mov
sub
and
insl
sub
push
xor
gs
mov
pop
xchg
push
ss
jmp
sahf
daa
fcoml
fnstsw
mov
cmpsl
nop
push
nop
sbb
inc
and
mov
aas
scas
jmp
xchg
test
mov
testb
and
popa
inc
shr
lds
mov
adc
shlb
mov
pop
inc
ljmp
loope
inc
into
push
sbb
push
enter
or
sub
lahf
push
xor
rclb
mov
in
pop
inc
insl
cmc
pusha
add
fwait
cli
xor
jmp
cmc
cmp
mov
nop
movl
xchg
jnp
les
mov
decl
dec
xchg
cmc
cmp
data16
ss
adc
sub
or
lods
imul
mov
int
push
or
iret
repz
add
inc
add
sub
and
or
cmp
adcb
cmpsb
fwait
push
cmp
cmp
sbb
fs
call
mov
sbb
pop
pop
pop
gs
int3
push
addr16
sub
mov
dec
inc
xchg
insb
jge
inc
std
dec
rorb
sbb
aam
jmp
and
jmp
es
or
test
out
into
es
pop
fidivrs
outsb
and
call
dec
jmp
push
adc
push
inc
xchg
dec
js
adc
sahf
dec
sub
adc
out
pop
incb
into
or
int
outsl
sub
nop
pop
push
adc
in
inc
add
scas
or
cmp
and
jbe
pusha
lret
call
mov
out
adc
mov
xchg
add
push
or
inc
inc
and
push
fidivs
push
cmpsb
jno
sbb
repz
aad
xchg
loop
insb
sub
mov
out
xor
sub
push
decb
adc
popa
push
cmpsb
fiaddl
cmpsb
pop
jle
cmc
test
mov
jbe
shl
sbb
adc
lds
add
fildll
push
cmp
je
int3
or
add
jne
push
add
mov
adc
cld
mull
rdpmc
in
mov
dec
movsb
outsl
push
push
jge
ja
jb
adc
shl
dec
mov
out
adc
push
popa
jb
popa
std
adc
push
out
pop
pop
or
mulb
lods
or
or
pop
aaa
insl
jns
jbe
adc
push
dec
and
pop
ret
mov
int3
push
gs
push
clc
mov
cli
es
cmp
call
popa
fildll
add
fstl
add
push
pop
add
adc
pop
inc
push
and
adc
push
adc
jle
add
and
mov
aad
cmp
dec
subb
outsb
ds
dec
rclb
cmp
sbb
pop
mov
int
sub
imul
inc
inc
aaa
jo
shl
outsb
jnp
adc
adc
adc
mov
push
int3
xchg
cld
fiadds
mov
mov
jns
jmp
sti
and
mov
adc
xchg
jo
xchg
sti
or
mov
or
jg
enter
pop
jns
adcl
aad
andl
pop
lods
fwait
add
jge
sbb
push
in
add
lods
push
or
cwtl
or
lcall
decb
loopne
lods
fiadds
pop
adcb
popa
movsb
adc
repz
cmc
dec
sti
call
push
nop
adcl
mov
sahf
push
push
sub
pusha
mov
dec
roll
icebp
xchg
dec
pop
lods
scas
lcall
jbe
mov
inc
fwait
mov
and
lock
sub
mov
lods
mov
adc
inc
sub
movsb
mov
loop
pop
sub
in
xor
scas
pop
sbb
call
sub
popa
pop
sbb
bound
repz
ror
cs
sub
ds
xor
rolb
pop
cmpsb
xchg
jbe
negb
popa
aaa
jbe
pop
add
fisubrl
inc
fildll
jbe
nop
loop
scas
dec
popa
subl
movsl
jno
mov
call
pop
dec
jmp
outsl
inc
dec
inc
push
hlt
addr16
nop
out
sub
loopne
iret
dec
int3
adc
sahf
inc
in
in
inc
cwtl
loope
push
lcall
mov
adc
push
nop
out
jg
repz
movsb
pop
lcall
jnp
daa
in
test
int
fimull
lcall
out
pop
jg
and
pop
cmpsl
mov
push
scas
xchg
or
rcll
mov
fimuls
psubsb
fildl
repnz
int3
sbb
out
lock
lret
pop
xor
mov
nopl
jecxz
dec
pop
mov
sub
xor
sbb
mov
mov
adc
scas
cs
pop
mov
mov
iret
ljmp
push
xchg
push
or
scas
push
mov
loop
dec
and
pushl
in
and
imul
mov
iret
data16
pop
jmp
std
ljmp
cwtl
or
iret
jnp
cwtl
sub
scas
inc
scas
pop
mov
rorl
or
inc
fucomp
sbb
xchg
push
lock
pushl
jne
jnp
xchg
adc
push
gs
dec
push
push
push
push
sahf
out
sahf
pop
pop
fs
jne
or
jns
jg
mov
or
dec
inc
ljmp
inc
add
sbb
adc
mov
adc
pop
in
push
dec
or
pop
adc
inc
push
pop
cmpsl
scas
dec
fs
sahf
xchg
clc
pop
or
call
jmp
or
loopne
xchg
fmull
cmp
enter
jmp
daa
nop
mov
repnz
jmp
stc
mov
loopne
loope
enter
adc
sbb
xchg
in
xchg
and
inc
test
aas
fiaddl
out
iret
jae
lea
fnstcw
mov
pop
push
pop
shrb
addr16
pop
jbe
es
idiv
decl
movsb
insb
push
dec
movsb
xor
scas
sub
in
and
test
lods
and
and
add
sub
call
pop
adc
arpl
inc
sub
xor
sub
lock
test
call
cld
dec
xchg
cmp
inc
cmpb
push
jle
dec
out
lahf
pop
or
add
out
ljmp
push
out
pop
jno
dec
imul
call
call
aad
in
mov
int3
mov
inc
les
aas
xor
insl
lcall
push
add
jg
fmuls
inc
inc
mov
outsb
or
je
subl
dec
xchg
inc
rolb
jno
lcall
aaa
push
ds
in
shlb
cld
insl
cs
adc
pushl
jg
lods
cli
outsb
adc
and
rcrl
xchg
fbstp
pop
jmp
jnp
movsb
xchg
out
test
jns
pop
adc
outsl
imul
xor
incl
sub
and
inc
insb
daa
fistl
push
sbb
jg
test
mov
jmp
xchg
movsb
pop
imul
cmpsl
aad
cwtl
popa
pop
mov
dec
pop
data16
popa
mov
out
dec
mov
fstpt
cwtl
add
pop
xor
jbe
pusha
mov
pop
outsb
adc
add
out
test
pop
mov
js
shrl
data16
mov
aaa
testl
aam
or
andb
adc
add
cmpsl
sbb
add
cs
call
orl
fbstp
repz
push
std
out
scas
push
jns
adc
xchg
inc
dec
mov
and
pop
faddl
sub
dec
aad
data16
sub
push
movsb
or
mov
jbe
mov
xchg
adc
jo
jne
sbb
or
inc
iret
add
xchg
mov
out
jle
cld
mov
adc
scas
push
test
push
sub
scas
add
bound
push
imul
push
xchg
or
outsb
inc
or
lea
cmp
mov
inc
sub
scas
push
cs
inc
shl
imul
mov
fisttps
mov
add
pop
divb
pop
inc
jbe
scas
pop
dec
cwtl
jg
add
pop
jg
aad
xchg
out
dec
ret
xchg
adc
cs
in
inc
fnsave
inc
in
imul
mov
inc
dec
imulb
sti
sbb
and
push
out
dec
pop
fisubrl
insb
cmp
loopne
ret
mov
in
inc
adc
push
rorl
incl
ja
or
repnz
mov
mov
cltd
xchg
ljmp
pop
pop
adc
lahf
push
xlat
adc
mov
imul
jg
faddl
mov
or
dec
mov
arpl
int
push
mov
push
pop
into
mov
testl
jbe
cmpsl
jbe
mov
mov
fdivrs
fstpt
jo
aaa
std
mov
mov
int
push
inc
call
sub
cwtl
ret
std
out
xchg
ss
mov
jle
xchg
sbb
xchg
cli
sub
outsb
mov
mov
rclb
jecxz
dec
fbld
loopne
test
inc
add
push
cld
dec
push
or
push
sub
jbe
lcall
cltd
push
inc
movb
jg
pop
push
jecxz
fs
dec
pop
ds
insl
xchg
push
outsb
into
mull
xchg
adc
lcall
push
push
adc
ja
xchg
jl
mov
call
push
push
aad
add
addr16
mov
push
inc
inc
xor
sub
cmpl
mov
fildll
cwtl
push
scas
bound
adc
js,pn
cs
inc
enter
xor
decb
or
inc
cs
inc
and
xor
ret
sub
mov
adc
inc
clc
bswap
popl
negb
incl
adc
push
pop
test
xor
iret
cmpl
sub
insb
into
sub
adc
xchg
cmp
push
inc
mov
push
jbe
jmp
verw
adc
jo
out
dec
or
das
push
mov
addr16
push
cwtl
fisttps
add
into
sbb
fs
mov
filds
sub
out
cli
cli
dec
inc
cmpsb
nop
mov
sbb
fadd
outsb
test
and
hlt
adc
cmp
jbe
or
xlat
xchg
rolb
add
sub
push
jmp
push
add
or
push
mov
mov
xlat
mov
jnp
decl
fisubs
xor
ds
mov
int
xor
cmp
mov
add
xor
pop
lods
lock
dec
int3
insl
inc
lcall
lock
push
xor
call
psubsb
daa
int3
sub
and
testl
in
mov
sbb
loope
outsb
inc
push
int3
sub
xchg
ret
add
jnp
pop
mov
xor
pop
ret
sbb
pop
test
aaa
jge
xchg
push
push
dec
xor
cmp
adc
fucomip
rorb
data16
sbb
lods
pop
cmp
divb
mov
mov
jle
sahf
mov
mov
mov
shrl
int3
xchg
cs
jbe
decl
add
inc
scas
ja
pop
or
jns
cmp
mov
sahf
xchg
sub
cld
pop
cmp
adc
imul
fwait
jbe
ss
punpckhdq
stos
dec
sahf
bound
pop
add
and
jns
xor
xlat
add
mov
loopne
incb
outsb
paddsb
pop
add
std
dec
and
sub
shll
outsl
pop
pop
xchg
push
mov
pop
and
sub
push
pop
sbb
pop
and
lcall
lods
sub
mov
pop
lds
adc
xlat
dec
sti
pushl
sub
and
lcall
jae
sub
outsb
mov
adc
adc
stos
xor
rclb
cli
in
and
inc
aad
test
test
sub
outsb
jne
rorb
jl
dec
xor
clc
xchg
test
fiadds
and
dec
jns
cwtl
cld
lahf
outsb
push
push
mov
les
cmpsb
subb
xchg
push
pop
add
pop
push
mov
jae
inc
jnp
sahf
aam
xchg
sahf
sti
adc
or
in
fisttps
out
mov
sub
push
xor
inc
cltd
sub
add
pop
insl
fisttpll
cli
cwtl
iret
sbb
sahf
outsb
cmove
inc
pop
jbe
ret
dec
cs
mov
push
imul
inc
and
cli
cmp
jecxz
loop
add
inc
lods
cmp
adc
movsb
xor
lods
and
and
in
xchg
inc
scas
mov
scas
push
out
lea
push
or
lret
push
mov
dec
je
iret
mov
movsl
pop
fnstsw
aas
sbb
mov
sti
adc
mov
push
into
dec
xchg
xchg
sahf
and
dec
sbb
pusha
cmp
pop
scas
adc
hlt
adc
loop
or
add
and
mov
inc
cmovo
mov
and
push
pop
inc
jmp
out
sti
dec
adc
or
xlat
fidivrs
fildl
out
mov
ss
ljmp
imul
cs
int3
mov
push
ja
ds
lods
and
lahf
test
sbb
add
daa
mov
ds
into
data16
mov
cmpsb
push
sbb
jmp
push
cwtl
and
xor
push
pop
sub
add
push
push
pushf
push
lret
mov
pusha
mov
popf
or
mov
inc
pop
nop
loopne
or
xor
pop
int3
sahf
dec
push
inc
xchg
push
pop
push
sub
mov
ss
dec
xchg
xchg
and
adc
sub
cld
or
jnp
fcoms
outsb
and
xor
mov
push
jg
push
into
push
lds
aaa
sahf
int3
push
testb
push
mov
sub
push
mov
inc
jle
outsl
cmp
es
xchg
rcl
jecxz
idiv
sub
aad
in
push
cwtl
loop
xchg
stos
jmp
sbbb
sub
pop
pop
pop
dec
push
cmp
jne
mov
nop
popf
dec
sub
add
lret
xchg
fldl
data16
xchg
adc
adc
xor
push
aas
es
mov
or
add
pushf
testb
push
jbe
out
adc
cld
test
aaa
jmp
add
ss
arpl
mov
mov
dec
fs
add
push
inc
fnstcw
cmp
mov
sar
pop
int3
adc
dec
xor
xor
jnp
xchg
lods
scas
jl
and
jns
fcmovnu
cmpsl
frstor
xchg
into
scas
inc
sub
lock
push
addr16
pop
jle
pop
pop
lret
pop
mov
testb
cmp
stos
les
aas
lea
ss
fwait
jno
inc
xchg
pop
mov
add
add
pop
add
or
pusha
mov
xchg
jbe
mov
out
adc
push
into
push
jnp
push
push
cmpsb
adc
jae
add
mov
test
sub
push
inc
add
lods
sbb
subb
mov
pop
xchg
mov
inc
mov
out
or
add
roll
mov
sub
or
and
out
sbb
cmpsl
xor
push
and
mov
inc
lods
add
jno
inc
sub
js
std
fisttps
mov
nop
out
test
cmpsb
sti
ss
and
adc
cmp
jbe
pop
ja
outsb
pop
jnp
out
je
jno
hlt
daa
jge
inc
inc
lods
in
adc
lods
adc
pop
jno
mov
mov
mov
std
lea
cli
xchg
rcll
push
sub
inc
pop
pop
test
lretw
dec
es
jle
orl
imul
sti
mov
push
mov
sbb
inc
addl
cmpsl
inc
outsb
adc
cld
pop
jmp
xchg
lcall
sub
out
xor
xchg
xchg
cmp
fimuls
jae
movsl
lods
xchg
ds
xorl
fwait
jle
xchg
dec
clc
dec
inc
push
scas
lds
cli
rcl
xchg
or
inc
sahf
arpl
lods
xor
fadds
js
std
sti
mov
mov
push
cmp
push
push
jg
daa
cli
fcoms
sbb
adc
push
fists
inc
fwait
and
push
sub
add
jnp
or
call
lret
cld
sub
mov
xlat
sub
test
scas
fidivrs
inc
stc
jmp
mov
xor
push
das
dec
cltd
mov
push
nop
fnsave
jge
sbbb
rcrl
rcrl
dec
sahf
notb
jecxz
push
and
dec
scas
call
or
ds
out
sbb
ds
in
sub
jp
test
ja
incl
rorl
decl
aas
or
sti
das
pop
insl
sub
inc
xchg
call
aaa
cmp
inc
pop
mov
lods
repnz
push
sbb
es
lcall
into
adc
cmp
mov
jl
daa
call
cmpsb
in
mov
adc
or
cmp
out
xor
repz
jb
cs
pop
sub
pop
pop
movl
jg
cld
rcrl
mov
imul
into
inc
push
xchg
pop
cmc
or
ds
nop
testb
jle
mov
dec
scas
in
gs
out
sbb
hlt
pop
push
dec
and
pop
cmp
cmp
mov
jnp
mov
xchg
push
pop
inc
clc
out
jge
xor
push
je
pop
out
xchg
jbe
dec
pop
push
scas
jno
test
addl
xchg
es
push
push
push
xchg
das
in
js
inc
sti
dec
movsl
push
out
cmp
scas
xor
mov
cmp
mov
and
add
loopne
aam
mov
inc
aaa
int3
les
lahf
xchg
fcmovnbe
sahf
lcall
repz
outsb
int3
test
jno
push
das
dec
pop
or
adc
dec
push
add
ficoml
xor
clc
or
iret
xor
add
jecxz
rcrb
lock
scas
out
dec
out
mov
mov
popa
pop
cmpsl
pushf
mov
ds
jnp
and
pop
stos
dec
cld
jmp
sub
into
and
clc
inc
cmpsb
adc
and
push
push
daa
adc
outsl
fsubr
stos
and
aaa
incl
push
dec
jbe
sbb
ficoms
outsb
xor
jo
mov
mulb
testb
mov
sub
inc
imul
loope
dec
sub
bound
popa
movsl
lea
insb
push
into
outsb
push
jno
ljmp
and
adc
or
lock
data16
mov
mov
popa
pop
cmp
in
nop
dec
inc
mov
xchg
cmp
movsb
scas
pushf
sub
cmc
push
inc
data16
inc
and
add
adc
scas
dec
push
lret
ss
aas
fbstp
rclb
sbb
sbb
jno
xor
lods
inc
addb
pop
orb
xor
rorb
popl
inc
adc
xor
inc
inc
fsts
outsl
subb
xor
adc
mov
and
add
sahf
lahf
dec
xchg
add
mov
and
or
push
xor
bt
pop
xor
sahf
add
loop
xchg
sub
iret
inc
lods
nopl
sbb
push
and
xor
in
jo
out
shr
sahf
cs
testb
stos
fiadds
mov
dec
mov
hlt
dec
cmp
mov
ds
lcallw
fwait
add
pushf
adc
adc
enter
jecxz
add
push
je
push
les
loopne
xor
es
test
roll
add
movsb
and
movsb
mov
je
or
rorl
test
inc
into
scas
data16
sbb
ss
add
shrb
lods
mov
push
lea
lods
roll
and
xchg
mov
push
outsl
ja
pop
mov
sahf
les
fwait
push
das
inc
popa
or
je
rorl
mov
data16
das
sub
sahf
fucomip
lods
add
lcall
lcall
xor
loope
inc
and
and
jne
pop
scas
sbb
das
push
insl
push
inc
and
cltd
and
sahf
push
adc
adc
sub
jne
shrb
push
cltd
and
mov
lahf
dec
outsl
in
dec
stc
in
sbb
jecxz
loope
fwait
cmp
loopne
data16
adc
sub
sbb
enter
mov
lahf
push
fistps
cmp
sub
fstl
aas
add
adc
nop
add
inc
push
std
nop
xchg
arpl
push
add
inc
scas
xchg
lods
dec
mov
pop
xchg
push
push
pop
insl
inc
push
and
sahf
fbstp
pop
mov
pop
adc
mov
adc
push
adc
into
adc
cld
ljmp
clc
and
push
fwait
jo
push
insl
cld
popa
idiv
or
data16
lcall
daa
shr
adc
and
mov
jmp
sbb
add
aaa
cld
cltd
aaa
fidivrs
rcrb
dec
fsubl
dec
lcall
sub
xchg
js
inc
mov
mov
shrl
jecxz
add
lcall
out
cwtl
inc
adc
lcall
jmp
icebp
out
ss
add
jno
iret
pop
xchg
icebp
bound
test
sbb
adc
adc
cli
pop
dec
mov
fistpll
out
mov
mov
cmp
sub
incl
sbb
dec
sub
jl
imul
addr16
pop
cmpsb
cmp
pushl
repz
insl
cmp
sbb
nop
gs
fildll
outsb
mov
pop
data16
mov
imul
pop
lods
jge
jmp
ljmp
ret
gs
inc
test
clc
cwtl
jns
outsb
jecxz
mov
aam
xchg
jmp
or
lcall
mov
adc
test
sar
sahf
or
inc
adc
sub
popa
mov
and
mov
outsb
jge
popw
cltd
imul
sbb
shl
pop
cs
push
cltd
or
and
push
in
imul
mov
loopne
pop
icebp
inc
lcall
xchg
cmp
inc
movsl
fstl
outsb
fidivs
xchg
cwtl
xor
clc
sbb
and
sbb
data16
mov
pop
jg
scas
jmp
pop
push
cmc
fwait
sbb
gs
or
sbb
xor
lock
and
out
sbb
outsl
rolb
scas
call
shrb
sub
scas
sub
pop
cltd
push
imul
add
popa
inc
dec
lahf
pop
aas
or
mov
or
ljmp
fistl
mov
into
pop
jge
adc
imul
pop
fnstsw
daa
jmp
xchg
adc
pop
mov
cmp
xchg
mov
test
test
push
scas
pop
aam
mov
adc
sub
sbb
rcrl
decl
dec
inc
sbb
out
sbb
sub
outsb
daa
push
cmpl
outsb
add
je
push
mov
and
inc
enter
fisubl
loope
sbb
mov
test
xor
adc
popa
lcall
lods
dec
fdivs
outsb
adc
in
push
lock
push
popf
adc
lea
subl
xor
jmp
int
fistpl
adc
xchg
pop
out
and
incl
and
inc
fisubs
cmp
and
and
outsb
inc
sbb
in
dec
lret
fs
lret
cmpsb
add
decl
lea
repz
scas
adc
push
scas
push
pop
cltd
dec
insl
lds
cmpsb
pushf
adc
xor
and
out
fsts
push
movsl
push
lds
fsubr
mov
cs
pop
movl
xchg
sbb
inc
fdivl
je
push
add
icebp
mov
fisubs
fwait
adc
mov
mov
push
or
jmp
sahf
add
sub
push
or
into
ss
jmp
daa
push
or
cmpsb
push
and
push
adc
jno
add
pop
cwtl
mul
adc
and
xchg
dec
data16
push
test
aas
sub
push
outsb
cmpsb
daa
aad
fcomip
push
sti
xchg
gs
loopne
adc
add
ret
jno
nop
mov
je
jnp
mov
xchg
out
outsb
nop
insl
fbstp
or
xor
pop
dec
hlt
or
jbe
arpl
rcl
aad
mov
mov
sub
dec
fbld
cs
pop
xchg
xchg
pop
add
pop
lret
insl
mov
inc
aam
negl
mov
data16
dec
xchg
xor
jg
mov
fistl
cwtl
aam
mov
jb
aam
jmp
sbb
outsl
cmp
push
sti
sub
pop
mov
xor
inc
adc
outsb
adc
sbb
fbstp
jle
scas
int3
sub
xchg
pop
sub
inc
dec
cmpsl
outsb
in
pop
pop
jle
lea
pop
pop
xorl
jp
into
adc
ja
inc
cmp
ljmp
pop
fdivrs
push
and
out
js
mov
stos
mov
mov
mov
inc
lcall
and
xchg
sub
sbb
mov
ljmp
xchg
in
pop
dec
inc
sahf
adc
push
test
inc
and
pushl
inc
test
pushf
in
sahf
push
cltd
movd
adc
push
pop
outsb
cli
fisubrs
and
jg
push
push
mov
xchg
stos
in
add
in
fimuls
jmp
mov
add
incl
popf
fisubrs
add
int3
popa
sti
insb
sbb
scas
pop
out
jle
testl
into
inc
xorl
add
fdivrs
xor
fwait
push
insl
jbe
inc
scas
or
dec
dec
jne
daa
ja
jle
mov
clc
add
fcoml
inc
mov
jl,pt
sbb
ja
lods
mov
and
add
push
jle
jne
leave
movsb
mov
mov
popa
pop
iret
pop
fwait
dec
fucom
test
clc
aas
xchg
pop
adc
scas
mov
hlt
stos
es
or
jb
mov
pop
ljmp
xor
adc
adc
gs
push
outsl
or
lcall
rorb
sahf
ret
out
add
call
jmp
scas
add
cwtl
and
push
xchg
rcrb
out
or
xchg
popa
fildll
adc
cld
aaa
loopne
lret
pop
xchg
ficoms
frstor
cmp
pop
push
adc
mov
movsb
dec
sbb
push
xchg
rclb
jle
pop
test
add
stc
cltd
dec
mov
xorl
and
jle
aad
sti
popa
push
mov
sahf
cmp
bound
fildll
mov
nop
add
pusha
aad
inc
and
dec
inc
jo
decl
ss
xchg
add
adc
mov
push
push
add
aaa
fdivrl
int3
mov
and
mov
repz
add
mov
data16
mov
adc
sub
mov
inc
xchg
adc
or
mov
push
decl
inc
mov
lcall
shll
dec
movsb
sbb
fwait
and
ljmp
shr
lods
push
push
adc
inc
test
loop
inc
adc
adc
mov
sbb
mov
jle
cltd
data16
xchg
scas
clc
neg
xor
mov
add
pop
gs
mov
iret
mov
loopne
jg
sub
push
loop
call
lods
add
nop
cmpsl
adc
jb
arpl
int
sahf
xchg
fistpl
adc
ss
push
add
andb
push
xor
cs
ss
lea
pop
cld
fcomip
movsb
push
jecxz
mov
adc
adcl
jge
lods
push
fwait
and
pop
stc
cli
loop
rcl
inc
enter
jns
sahf
out
aam
fucomip
dec
sarb
mov
inc
cmpsb
in
lret
aas
cltd
movsb
sbb
xchg
movsb
test
pop
popf
sbb
pop
cmp
roll
sarb
and
ss
or
push
xor
sbb
lret
out
sub
cs
adc
es
ljmp
xor
sub
pop
movsb
or
xchg
push
fistps
mov
insl
cmp
sbb
cld
aaa
dec
push
dec
sub
cmp
loop
aaa
push
mov
test
pop
and
lret
cwtl
add
pop
lock
outsb
ret
and
enter
and
ljmp
sub
sbb
loope
outsl
pop
or
mov
out
fisttps
inc
adc
hlt
call
pop
adc
pop
inc
and
sahf
dec
adc
and
adc
fldcw
jge
call
popa
mov
adc
jle
fwait
or
scas
sbb
clc
call
add
push
adc
xchg
and
inc
sbb
scas
push
scas
stos
call
inc
mov
fwait
push
cld
aaa
shlb
or
mov
hlt
lret
push
xchg
push
push
add
les
inc
js
iret
dec
clc
push
aad
jmp
dec
addb
dec
ljmp
sbb
push
pop
xor
lock
mov
cs
mov
add
pop
xchg
cld
sbb
inc
les
push
imul
repz
xor
pop
push
insl
cmp
mov
add
sbb
cmc
outsl
xor
scas
pop
sbb
jae
ss
push
mov
ficoms
incb
push
in
adc
adc
ljmp
cmp
in
enter
xchg
test
fistpl
lcall
test
lcall
inc
loopne
push
montmul
cmpsb
xchg
mov
daa
push
sbb
nop
mov
outsb
sbb
xor
inc
sub
dec
scas
pop
mov
and
clc
out
mov
add
add
or
xchg
jecxz,pt
das
cmp
out
mov
lcall
ss
adc
pop
or
outsb
or
fldl
mov
push
pop
loopne
xor
negl
push
mov
scas
jle
push
scas
lock
test
aad
pop
loop
xchg
push
pop
fstpt
jns
scas
jle
iret
scas
push
cli
dec
or
fcoml
data16
adc
push
pop
decb
out
or
dec
adc
pop
pop
shr
mov
ret
test
xlat
in
pop
fwait
xor
or
pushf
push
loope
out
sub
out
xchg
push
in
add
jb
inc
and
dec
scas
push
loope
loope
bound
jmp
cwtl
rcl
int
jg
into
xchg
in
adc
add
mov
jns
add
fwait
dec
or
jns
pop
jbe
mov
inc
jle
push
jmp
sub
and
out
lahf
fwait
add
mov
sub
dec
adc
ret
cmp
jecxz
enter
adc
lea
shrl
fimull
int
and
int3
fildl
data16
sbb
test
push
push
pop
mov
push
inc
cwtl
push
pop
inc
and
cs
cmpl
xor
inc
push
and
push
dec
cmpsl
loope
lcall
sahf
jle
push
add
pop
repz
push
adc
repz
pop
cwtl
xor
iret
or
clc
mov
loope
inc
and
repnz
adc
pop
fwait
jns
add
out
pop
std
fucomp
or
mov
movsb
push
or
or
mov
add
call
mov
sbb
insl
popa
xchg
outsb
sub
push
daa
push
or
pop
jno
ret
pop
cld
pushl
dec
jg
in
and
sbb
and
outsb
movsb
adc
cmpsl
incl
and
sbb
xor
out
bound
nop
int3
rclb
push
daa
ret
outsb
neg
lcall
cwtl
adc
inc
adc
sbb
test
push
mov
mov
lea
push
dec
sbb
pusha
add
adc
sub
dec
nop
push
dec
bound
jecxz
jg
fsubrs
arpl
sbb
adc
insl
and
push
daa
mov
outsb
frstor
xchg
push
insb
insb
sarb
ss
cmp
push
push
xchg
clc
inc
inc
xchg
cmp
movsw
sbb
jg
jne
int
mov
mov
dec
movsb
sbb
ljmp
ljmp
sahf
sbb
mov
mov
push
and
fcoml
pop
jmp
stc
sbbl
rcrb
or
out
cwtl
loop
movsb
push
faddp
mov
and
scas
and
mov
out
out
or
adc
push
ret
cli
call
push
dec
into
pop
jne
lea
cltd
adc
dec
xchg
shl
outsl
cmpsb
out
sub
push
mov
mov
hlt
cli
test
fdivr
ljmp
mov
jg
add
inc
call
sub
pop
sub
daa
cmpsl
int3
mov
notb
insl
jne
cmp
jb
sbbl
sub
movsb
scas
inc
sbb
and
inc
enter
inc
arpl
or
add
ficoms
adc
ja
cmp
sti
decl
cmpsb
inc
loop
test
push
rorl
push
cld
sub
fwait
xchg
mov
add
roll
adc
sbbb
push
pop
cmc
test
outsl
loop
mov
push
adc
mov
adc
mov
mov
scas
mov
mov
pop
lock
xchg
xchg
pop
lcall
xchg
dec
jne
inc
inc
push
decl
xchg
lock
hlt
inc
fnsave
mov
aad
pop
and
sahf
or
mov
fldl
mov
clc
jbe
loopne
mov
outsb
insb
or
inc
pop
out
inc
mov
pop
cmpsb
lret
scas
add
inc
mov
int3
sarb
insl
decb
mov
or
sti
jbe
aaa
dec
insl
adc
popf
mov
sbb
lods
rcl
outsb
stos
jmp
into
sbb
jbe
test
test
out
shlb
lahf
add
out
mov
lods
jmp
dec
or
dec
scas
outsl
pop
shll
jbe
rol
push
dec
dec
jle
dec
pop
test
icebp
dec
mov
popfw
movsl
push
ret
out
cmc
je
push
push
adc
xor
bound
es
aas
mov
xchg
push
cmp
dec
sub
ja
mov
call
xchg
mov
push
scas
into
inc
inc
pop
and
es
dec
add
add
inc
loop
jns
cwtl
mov
int3
add
mov
adc
sbb
pop
xchg
cmpsb
xor
bound
mov
push
or
rcrb
movsb
dec
sbb
mov
out
cmp
xchg
push
mov
and
imul
jg
push
push
jg
loope
push
sbb
sbb
std
outsl
cmpsb
sbb
mov
int
adc
mov
incb
lcall
in
push
push
adc
test
pop
dec
fsubl
call
add
inc
cltd
es
inc
xor
and
ret
in
inc
xor
mov
clc
scas
jle
pop
cmpsl
jmp
xor
jg
stc
inc
clc
repz
out
jmp
cmpsl
scas
gs
add
push
push
push
mov
mov
add
enter
enter
mov
push
or
stos
sub
add
out
mov
cwtl
add
jbe
or
xor
mov
mov
int
sahf
add
sti
sub
push
push
push
fwait
add
cmp
sbb
pop
cmpsl
push
jno
int3
mov
fwait
out
add
jbe
cmp
xlat
jno
pop
aad
ja
movlps
orb
mov
sub
popf
xchg
mov
inc
mov
push
ja
add
jecxz
test
incl
shr
jg
xchg
sahf
gs
mov
pop
sti
adc
inc
inc
inc
sti
dec
pop
pop
mov
and
adc
push
ret
sahf
pop
adc
mov
pop
push
ljmp
xchg
into
fucom
repnz
push
mov
stos
in
or
in
shrb
cld
pop
enter
jg
jbe
test
push
dec
out
and
pop
jbe
lahf
push
xor
sbb
jl
aas
movsl
jl
add
sbb
dec
add
push
imul
sbb
dec
push
sbb
and
std
adc
outsb
inc
test
mov
adc
xchg
popf
or
dec
dec
and
mov
int
scas
fwait
lock
hlt
mov
loopne
sahf
ja
mov
sbb
roll
or
stos
dec
stos
and
aad
pop
test
inc
mov
add
push
dec
decl
inc
inc
test
out
add
xchg
cli
fbld
ret
mov
outsb
and
cwtl
mov
mov
and
in
mov
pop
repz
xchg
cmpsl
cmp
pop
sbb
das
ja
push
sub
aam
xchg
subb
into
jecxz
or
hlt
inc
dec
push
xor
add
je
out
mov
inc
xchg
adc
ljmp
stos
pop
sbb
jbe
pop
shlb
cmp
push
jmp
push
rcr
xchg
fistl
incl
fildl
fwait
mov
add
outsb
lcall
hlt
fists
xlat
pop
dec
fst
jne
push
sub
test
imul
cld
jg
inc
fldl
sbb
or
shl
sbb
test
jecxz
fsubr
add
loop
out
fistl
mov
cwtl
into
in
negb
push
into
lds
dec
pushf
in
or
pop
dec
rolb
jecxz
inc
sbb
je
mov
sti
cmp
mov
xacquire
mov
or
jl
jle
subb
mov
mov
jne
inc
sub
les
es
pop
add
add
xchg
pop
or
fwait
incb
aam
mov
int3
sbb
sti
mov
popw
aas
vpmadcswd
inc
pop
jne
fistpll
decl
sbb
mov
inc
dec
jp
cwtl
inc
xchg
and
sti
pop
xor
popa
nop
jne
mov
lods
dec
lret
je
xor
adc
leave
pop
or
or
shlb
jle
icebp
push
repnz
and
push
fbstp
decl
enter
sbb
incl
data16
insl
xor
nop
rolb
mov
and
outsb
sub
in
or
lcall
jg
pop
divb
scas
adc
ss
dec
out
cmpsl
mov
xor
roll
jns
jns
shll
cld
fwait
pop
adc
sti
ljmp
aaa
test
jo
add
ds
push
enter
jbe
ja
cld
pop
dec
mov
ja
and
jb
sbb
aaa
aaa
scas
pop
jmp
add
loop
inc
mov
clc
sbb
movsb
sahf
pop
mulps
add
cli
es
and
pop
sub
mov
popl
inc
das
push
jl
addr16
pop
cld
mov
outsb
push
scas
fsubr
pop
inc
pop
cmpsb
js
pusha
and
incl
cwtl
rcl
into
inc
dec
shr
ret
xor
loope
inc
sbb
fcomip
out
jbe
sti
dec
ja
jge
cmc
decl
les
cltd
test
jmp
loope
testb
push
std
data16
inc
jge
lods
push
add
jnp
sub
aaa
jg
dec
add
jbe
filds
dec
mov
xchg
mov
sub
insb
popa
jns
call
mov
stos
sahf
pop
inc
push
lret
xchg
inc
and
jne
push
pushl
jl
cld
push
xchg
addr16
call
cltd
sub
iret
mov
jg
adc
xor
mov
pop
mov
nop
rcll
pop
jbe
ds
inc
in
xor
aad
pop
push
iret
sbb
cltd
fcoms
sub
dec
addr16
mov
insl
nop
loope
cmpsl
xchg
dec
clc
outsl
shrl
rcrl
push
insl
aad
out
shrb
mov
cltd
dec
out
mov
aaa
arpl
lea
or
mov
mov
aam
add
imul
or
sbb
sub
xorb
push
pop
les
xlat
fwait
jns
not
pop
mov
jno
loope,pn
in
loope
sarb
fstl
mov
mov
cli
pop
mov
ret
fbld
into
popf
int3
mov
cltd
xchg
jge
jo
lock
shlb
xchg
cwtl
hlt
pop
mov
and
mov
mov
sahf
cmpsb
shlb
stc
cmc
iret
pop
lods
xchg
imul
inc
or
sbb
scas
int3
das
aaa
jo
fwait
mov
push
push
mov
lds
call
out
rclb
and
gs
fcomip
scas
xchg
inc
xor
sbb
sbb
inc
jne
xchg
push
mov
dec
inc
cld
mov
push
fldl
shrl
push
lds
pop
scas
js
sbb
or
sub
jmp
or
fdivrp
push
out
mov
inc
int3
inc
sbb
insl
push
popf
daa
mov
jl
xchg
or
adc
or
loop
or
.byte
.byte
sti
call
in
sub
mov
mov
push
push
push
lock
call
divl
and
add
sbb
add
pop
push
inc
add
sbb
push
sti
lcall
add
add
add
les
or
or
sarb
mov
mov
push
pop
adc
cmpsb
adc
repz
fcom
or
mov
ficompl
jnp
incb
call
jo
cmp
inc
mov
rep
movl
pop
add
mov
lock
or
mov
out
mov
jns
dec
or
inc
test
je
movsbl
adc
mov
xor
mov
jge
movsl
std
negl
stc
test
je
je
bnd
jae
pop
test
or
lret
or
add
cltd
nop
inc
cld
push
ja
popa
out
jmp
ss
xchg
cmp
clc
decl
rorl
ret
int3
int3
push
push
and
push
call
xor
ret
cmp
mov
jne
sub
adc
xor
push
je
sub
jne
test
jne
inc
lds
jmp
add
jae
xor
cmpsl
xor
cmpl
ja
decl
lods
repnz
push
cmp
adc
adc
or
mov
aas
sbb
ret
push
pop
jg
mov
sbb
lock
add
lcall
bound
mov
orl
jl
xor
or
cs
jmp
sti
sub
adc
jne
pushw
push
fists
push
in
pusha
pop
push
pusha
push
outsl
mov
push
mov
ds
fsubrs
ljmp
or
cmp
out
idivb
mov
adc
and
xor
aas
enter
je
into
add
ret
adc
idiv
decl
cwtl
cmp
cmpl
mov
add
cmpl
push
inc
lret
movzwl
cmp
add
clc
loopne
add
daa
cmpl
fidivrs
mov
jle
in
lea
cmpl
loop
setne
pusha
ret
sub
add
pop
xchg
jne
loopne
rorl
adc
jge
and
push
sbb
bound
push
sub
xchg
pop
cmp
cwtl
addb
std
and
xor
xchg
or
inc
in
and
pop
or
adc
push
outsl
fldcw
or
cmp
je
push
sub
mov
cmp
jecxz
cmp
loopne,pt
inc
mov
shr
or
jne
push
xlat
gs
inc
cmpb
mov
mov
cmp
push
push
addr16
mov
sub
in
mov
mov
mov
push
push
movsl
outsb
inc
mov
jge
cmpl
pop
mov
push
js
rcrl
jle
test
adc
ret
icebp
sarl
adc
add
adc
fndisi(8087
imul
sahf
loopne
inc
repz
push
ja
test
mov
xchg
cmp
mov
mov
jnp
add
bound
cmp
inc
jo
push
shll
cwtl
jl
sbb
fst
andl
movb
lods
movl
mov
mov
adc
mov
sub
cli
add
add
cmp
jb
in
movl
in
adc
push
mov
sub
adc
shr
cmpl
iret
imul
add
lock
frstor
test
inc
jne
sbb
mov
add
nop
cld
or
mov
idiv
decb
jne
sar
dec
pop
aas
jbe
aas
pop
mov
cmp
pop
fsubrs
mov
lret
lea
pop
scas
incl
shll
pop
mov
add
sbb
sbb
dec
loopne
lret
xor
pop
add
scas
mov
dec
pop
adc
add
pop
and
xor
xor
push
mov
es
scas
pop
lock
clc
and
pop
hlt
mov
sti
out
mov
jne
and
sti
add
cmpsb
or
pop
cmp
jbe
mov
mov
fstpl
imul
andb
cmp
je
shrb
data16
cmp
mov
out
not
and
pop
dec
add
sub
jmp
lea
cltd
repnz
xor
mov
add
dec
pop
add
cmp
inc
data16
insb
push
or
hlt
into
outsl
ja
or
je
lea
mov
int3
jnp
dec
pop
or
or
adc
ret
aas
insb
pusha
mov
mov
inc
mov
push
or
cmpb
push
xchg
cmpsl
push
roll
mov
jmp
dec
in
adc
es
ljmp
mov
mov
shl
imul
add
mov
or
dec
paddsb
inc
fiaddl
loope
add
scas
jp
push
std
jge
fcos
aas
gs
push
or
por
flds
sub
dec
inc
adc
mov
sub
add
and
sti
mov
imul
adc
pop
jge
cmpsb
xor
mov
mov
shl
enter
adcb
push
lea
push
imul
mov
pop
hlt
je
mov
add
or
hlt
push
mov
das
mov
leave
fdiv
jae
test
mov
lcall
xor
pop
aad
movsb
mov
enter
adc
pop
cmp
jne
pop
push
ljmp
adc
xchg
testb
or
xor
jo
mov
adc
inc
push
stos
and
mov
dec
pop
push
cmp
pushl
fucomi
std
in
iret
push
jmp
orl
mov
incl
aad
outsl
and
push
push
fwait
or
jo
push
pushf
jno
xor
fcom
loopne
sar
mov
dec
stc
ljmp
adc
pop
mov
mov
rorb
jne
add
sti
mov
push
outsb
sahf
adc
jns
push
push
and
enter
inc
lea
mov
xor
cli
loop
ja
fsubrs
iret
shr
lea
out
stc
scas
incl
dec
clc
incl
decl
push
out
pop
ja
std
inc
inc
cld
lock
call
dec
pop
loop
aad
lret
xchg
clc
add
mov
mov
dec
out
cmp
sub
mov
sahf
inc
add
inc
mov
jg
jmp
test
pop
mov
jne
or
and
ljmp
faddp
out
add
jbe
leave
test
add
jne
jge
xlat
sub
pop
shr
add
dec
cld
jo
sbb
dec
cmp
lea
pop
and
jb
imul
test
add
repz
jo
add
stc
add
cmp
sub
xlat
mov
jbe
xchg
pop
push
mov
pop
add
inc
cmp
into
sbb
sub
adcl
aam
dec
or
mov
add
adc
and
into
add
push
pop
sub
xor
stos
sar
dec
cmp
mov
cld
scas
leave
mov
lea
loop
jg
jmp
jle
cwtl
pop
dec
sahf
cmpsl
imul
cmpsb
jns
sbb
iret
cmc
subl
and
jne
pop
rolb
xor
adc
inc
insb
xor
add
out
cld
repnz
call
sub
js
and
or
loope
lea
mov
cltd
loope
fsubrl
cld
push
sar
dec
cmp
xor
mov
movsl
pop
divb
add
outsl
rorb
inc
cmp
xor
cmp
or
orl
sub
andl
mov
aam
ja
sbb
cmp
ja
dec
in
adc
clc
mov
lods
fimull
or
mov
pushf
pop
jbe
mov
dec
add
repnz
inc
lods
push
paddd
xchg
lret
bswap
mov
insl
jo
rdmsr
cmp
lds
mov
sbbb
mov
push
add
lock
cld
rcl
xchg
inc
xor
push
cmp
lea
mov
jge
or
shr
sbb
jmp
hlt
js
stos
pop
nop
xor
shr
cld
mov
popa
das
into
hlt
cmp
jmp
dec
cmp
dec
and
or
jne
pop
popa
mov
push
adc
jb
push
jne
mov
jmp
insb
pop
in
inc
or
inc
call
add
arpl
mov
roll
imul
inc
je
mov
jecxz
xor
mov
lea
fildl
add
mov
jne
mov
cltd
add
cmp
jmp
stos
imul
into
jne
addl
and
pop
cmpl
cmpl
dec
addl
jb
andl
xor
cwtl
sub
ds
clc
std
ss
and
sbb
inc
pop
jbe
shlb
aam
add
and
addr16
add
and
loope
test
cwtl
cli
adc
mov
sub
icebp
imul
mov
jle
cmp
sbb
mov
dec
inc
dec
pop
cmp
add
mov
inc
jl
adc
in
and
xor
flds
push
pcmpeqw
in
sub
ret
and
jmp
test
mov
cmp
cltd
sub
push
xlat
int
lds
adc
clc
into
pop
lcall
jp
lea
popa
inc
mov
es
pop
popa
or
and
jo
cwtl
out
or
or
or
push
cmpsb
sub
or
out
cli
jb
mov
or
push
clc
test
je
lds
adc
lock
insl
das
pop
frstor
dec
fmull
or
adc
sbb
sbb
cmp
mov
pop
sahf
lea
adc
mov
push
rclb
test
xchg
addl
fs
out
mov
xor
xor
push
pop
mov
push
push
fs
dec
lock
jecxz
fisttpl
hlt
xor
and
cmp
pop
movl
sub
push
in
and
sbb
cmp
je
cld
pushl
add
mov
pop
pop
cwtl
jmp
adc
shr
out
js
je
mov
fdiv
or
pop
or
mov
call
repz
push
mov
ljmp
fistpl
insb
notl
push
and
lea
mov
ret
pop
and
clc
cmp
and
sub
pop
sub
add
jp
add
outsl
je
fbld
add
push
testl
add
push
mov
mov
push
dec
fwait
rcrl
mov
dec
pop
nop
mov
or
hlt
push
push
and
lret
jg
mov
push
mov
inc
sti
mov
and
insb
push
lea
loopne
push
mov
repnz
add
add
das
push
pop
inc
mov
jecxz
outsb
mov
ret
push
inc
xor
pop
inc
xor
push
add
jle
scas
aam
ja
hlt
testl
or
cwtl
mov
jae
pop
popa
ljmp
push
rcl
scas
jge
jbe
pop
pop
push
push
lea
xor
mov
shlb
not
mov
ja
jle
aas
js
ja
enter
or
jle
add
add
or
mov
js
xor
jmp
mov
andl
mov
test
ja
push
movsl
pop
sub
cmp
ficoms
mov
mov
cmp
push
fildl
sbb
ret
cld
lcall
int3
push
inc
mov
or
mov
jo
pop
xor
push
mov
sbb
fs
mov
mov
aas
push
je
call
add
imull
in
and
jle
or
popa
in
arpl
pop
xor
mov
jae
mov
movsb
stos
data16
cmp
push
testb
jo
push
jne
inc
adc
js
je
or
mov
xor
or
mov
inc
clc
repnz
shr
mov
mov
daa
add
jecxz
sbb
mov
push
adc
mov
adc
and
cmp
mov
adc
push
out
or
aad
ljmp
xchg
fbld
and
add
pop
pop
mov
add
in
or
test
add
mov
mov
push
ss
in
lds
sti
or
adc
mov
shl
cmp
mov
xor
je
jge
cmp
cs
cmp
into
cmp
cld
or
ljmp
xchg
scas
cmp
sub
pop
aas
scas
insl
jge
mov
inc
in
scas
xor
inc
push
pop
mov
push
add
push
push
pushl
or
inc
add
pop
pop
das
in
xchg
fsubrl
push
int3
push
push
push
daa
jno
xor
push
pop
add
push
sub
sub
inc
fsubs
shrb
push
pushl
inc
push
adc
loopne
sbb
jbe
jl
movsl
mov
or
pop
add
addl
popa
je
repnz
outsl
pop
jne
push
sub
pop
or
test
pop
popa
mov
mov
add
push
cmp
out
lcall
inc
add
mov
cmp
jb
lea
add
inc
movsb
jp
sbb
jae
inc
add
mov
mov
or
sti
add
sbb
stos
inc
and
std
and
lods
xchg
push
fs
xor
cmpl
icebp
pop
loop
add
aaa
mov
or
rclb
mov
cld
testb
data16
jbe
sub
or
jne
mov
in
mov
mov
cmc
ljmp
xor
daa
andl
sub
test
movsb
test
es
xchg
dec
push
mov
pop
movsb
add
rcrl
cmp
pop
notl
int3
pop
clc
test
cmp
or
or
test
test
rclb
cmp
push
mov
sub
jmp
std
negb
lret
push
cmp
ja
test
jg
shrl
test
cmp
jne
sar
sete
mov
movzbl
fincstp
sub
popl
inc
inc
jmp
push
pop
inc
bound
jne
pop
xor
push
xor
cmp
add
adc
cmp
outsb
inc
push
add
cli
add
jne
mov
add
mov
xchg
pop
fwait
push
cmp
pushf
cmp
imul
pop
test
sub
call
push
ds
cmp
pop
pop
je
push
js
push
cwtl
lret
movb
cmp
jne
ljmp
pop
sub
or
mov
mov
ds
into
ret
dec
push
and
adc
add
roll
cmp
push
mov
hlt
movl
je
push
xorl
xor
jg
push
rolb
shll
push
bound
in
aaa
fmuls
inc
or
inc
testb
or
fwait
jge
sbb
leave
mov
xor
mov
or
jne
xor
add
inc
sub
mov
mov
stc
mov
mov
and
dec
jmp
xor
sbb
inc
ret
incl
out
inc
pop
jmp
inc
inc
inc
pop
je
insl
movsb
es
jne
xchg
decb
dec
add
roll
ss
loopne
insb
test
ljmp
sti
pop
pop
incb
int3
repz
dec
outsl
aam
cmp
jle
rcrb
lods
shl
subb
into
inc
fs
wrmsr
leave
testb
sub
lcall
xlat
mov
test
pushf
add
and
out
sbb
andl
add
push
faddl
mov
mov
mov
loop
inc
mov
aas
jl
xor
cmp
pusha
je
and
fdivs
dec
mov
push
lea
test
jecxz
mov
and
pop
ret
add
mov
and
sbb
and
gs
mov
dec
push
decb
icebp
sub
cmp
mov
push
push
cmp
push
sbb
cwtl
add
imul
push
outsb
push
je
pop
jne
xlat
mov
mov
push
inc
lahf
push
rorb
stos
push
dec
and
clc
js
mov
lds
ds
fcmovnbe
jne
adc
imul
push
push
push
add
mov
fstl
sbb
or
add
jle
ljmp
push
sar
inc
push
push
adc
call
pop
mov
lcall
xor
dec
inc
testb
adc
inc
pop
mov
xor
ret
jmp
cmp
je
je
jmp
sub
fwait
push
pushf
mov
lock
je
inc
cmp
sti
push
stos
pop
jmp
div
inc
push
sbb
pusha
or
and
or
or
push
jns
mov
ds
pop
jmp
mov
push
daa
loopne
lea
push
or
cltd
pop
mov
jmp
xchg
insl
xchg
jnp
out
add
ss
aaa
sbb
orl
mov
mov
sub
repz
mov
mov
lea
jl
fdivrl
xor
fs
rclb
pop
push
addb
or
smsw
loope
sahf
mov
jmp
adc
sbb
jle
mov
shlb
dec
add
and
or
lock
cwtl
mov
test
loop
pop
sbbb
enter
or
dec
add
inc
add
ja
pop
jl
pop
andb
ds
add
mov
cs
pop
jmp
ret
mov
sub
dec
neg
sbb
push
cmc
mov
insb
incl
pop
push
int
and
pop
mov
dec
add
paddb
insl
and
jmp
or
jl
ljmp
adc
sbb
in
rorb
inc
push
push
inc
mov
mov
push
cmpl
es
push
xchg
repz
shlb
xchg
ja
fsubrl
add
aad
xchg
out
and
adc
add
cmp
push
faddl
int
push
mov
in
addl
test
dec
in
sub
sbb
subl
pushf
outsb
inc
or
sub
mov
aam
jbe
clc
incl
jl
test
jmp
sar
adc
sub
movsl
jmp
cmp
fcompl
sub
jb
loopne
add
test
das
cmp
jae
stc
sahf
sub
push
mov
inc
or
pop
sti
or
and
mov
pop
mov
mov
or
lods
cmp
mov
mov
dec
rep
push
dec
add
add
nop
inc
add
add
testl
add
clc
das
lock
out
call
mov
repz
xrelease
call
repz
lock
hlt
clc
clc
pop
dec
hlt
cmp
cld
sub
add
repz
add
sbb
jmp
pusha
add
pop
notb
inc
pop
sti
and
shll
and
in
add
cld
int3
pop
and
repnz
cld
out
mov
inc
xchg
into
lea
daa
stc
sub
xor
int3
push
lock
sbb
sbb
sbb
add
out
add
xchg
push
mov
inc
mov
out
push
add
mov
addr16
add
mov
lock
sahf
out
insb
or
push
jl
mov
scas
xor
sbb
sbb
out
sbb
adc
out
sahf
out
or
or
int
nop
add
enter
loopne
inc
sub
hlt
xor
push
add
sub
mov
mov
xchg
mov
lret
mov
lods
movsb
sbbb
pusha
out
je
lds
jo
xor
out
in
popf
inc
push
pop
je
push
adc
frstor
mov
lods
test
push
out
mov
or
or
lea
push
push
lock
inc
adc
leave
popa
xchg
testb
jl
sbb
sub
les
and
sub
out
mov
xchg
pop
mov
mov
lret
mov
push
mov
and
pushf
imulb
mov
sub
jl
jmp
lea
into
into
clc
push
test
pop
je
mov
roll
cmp
and
add
add
xor
xor
imulb
outsl
outsb
test
je
inc
cld
push
and
dec
xlat
or
js
or
add
int
jns
out
add
or
jmp
std
jmp
aad
mov
sbb
data16
aaa
jnp
mov
ljmp
in
mov
sti
fbstp
xor
divb
ret
pcmpgtd
jge
jo
or
adc
subb
sub
push
adc
push
push
mov
clts
ja
adcb
or
adc
or
jne
add
aam
jmp
lahf
popf
sbb
in
dec
jne
and
test
dec
inc
aaa
sub
in
inc
cs
ljmp
mov
mov
cwtl
aas
ljmp
cmp
pop
rdmsr
inc
notl
out
and
push
add
repnz
fsubrl
or
pop
js
jne
jbe
sbb
popf
jecxz
jns
add
shrb
out
push
or
mov
pop
adc
int3
add
in
aas
cmp
cmp
add
repnz
je
xor
xchg
rol
std
imul
pop
add
in
insb
jne
shll
cmp
shll
sub
pop
sbbl
cli
add
lods
stos
sbb
push
push
cs
sti
sub
and
ret
pop
pop
cs
je
lea
mov
mov
mov
jl
add
push
mov
push
adc
ret
popl
push
les
mov
mov
push
incb
in
push
or
push
or
aaa
adc
mov
nop
jl
adc
cli
inc
add
imul
loopne
loopne
cmp
and
and
or
ret
add
fisttps
sbb
je
add
or
fldenv
loopne
pushf
jb
cmp
jae
mov
shlb
pushl
sbb
fisubl
mov
push
xor
cmp
bound
jae
je
decl
mov
sbb
mov
cmp
jb
loop
sbb
push
mov
fdivrp
and
je
mov
xor
icebp
cmc
incl
lock
push
lea
push
loop
pop
push
faddp
xlat
xor
cmpl
les
inc
hlt
int3
je
dec
in
push
jle
testb
test
add
cmpl
shlb
ss
or
sub
or
push
pop
dec
adc
push
mov
xchg
lods
lock
jae
testb
jne
push
push
insl
push
cli
lods
cwtl
decb
jno
mov
jle
shlb
cmp
dec
lods
test
jg
push
in
or
cvtdq2ps
lret
jg
or
test
jl
dec
xchg
mov
push
lods
movb
mov
mov
sbb
jge
inc
mov
add
mov
hlt
and
test
jle
or
rorl
jp
jle
insb
push
cwtl
mov
ds
jl
sub
dec
jns
push
jge
cmp
push
inc
mov
inc
jmp
je
negb
lea
add
cld
adc
into
cli
pop
sar
inc
sub
push
mov
cmpb
daa
xor
jo
pop
mov
mov
test
xchg
cmp
jae
mov
into
add
lea
dec
inc
pop
jne
mov
adc
xchg
sub
mov
lea
mov
sbb
pop
jecxz
jns
fisttps
push
sbb
push
pop
ret
pop
les
mov
punpckhwd
mov
test
nop
jne
lock
jp
dec
testl
rorb
inc
add
cli
sbb
pop
sub
and
or
pop
mov
pop
or
cmpsl
sbb
mov
add
or
push
or
push
push
adc
stos
idivl
outsb
adc
and
push
sbb
or
mov
and
stos
add
jne
add
cld
loop
dec
pop
and
dec
pop
or
filds
mov
imul
call
fldl
jl
hlt
mov
loopne
test
and
lea
push
add
or
or
enter
neg
stc
lea
mov
and
rep
inc
mov
push
out
aam
inc
mov
daa
clc
push
insb
daa
lea
push
or
push
scas
ss
inc
and
std
xchg
sbb
push
jne
adc
jb
xor
cld
push
or
pop
mov
mov
das
fs
push
subb
mov
mov
sbb
add
call
jmp
movb
inc
btc
jb
or
adc
enter
and
adc
jp
push
cmp
and
loopne
mov
or
jmp
pop
jl
and
fildl
mov
std
lock
add
test
inc
std
sub
in
mov
or
aaa
mov
es
je
sub
push
push
movsl
rclb
in
cli
ljmp
shlb
lock
jb
cmp
add
jg
stos
incl
jge
mov
loopne
jle
push
out
cmp
aas
loope
mov
adc
stos
in
sub
push
shrb
add
aaa
ficoms
loope
mov
stos
lea
repz
sub
add
cmp
mov
fildll
mov
mov
xchg
inc
es
inc
test
pop
add
incl
add
or
jb
push
lock
pop
hlt
popf
and
mov
movsl
movsl
pushl
lds
sub
ret
inc
inc
cmpb
in
or
dec
inc
xor
inc
cmp
mov
mov
cmp
mov
push
in
push
xchg
mov
cmp
push
xor
jp
add
mov
sbb
cmp
shr
std
and
ret
pop
push
and
mov
test
je
mov
jne
call
push
adc
or
pop
jne
sbb
or
fwait
pop
popf
push
and
jo
fildll
push
insb
aas
lock
push
sarb
xchg
pushf
orb
aas
mov
aas
xchg
inc
out
sahf
out
cmp
sub
sbb
or
adc
jg
aas
cwtl
hlt
jns
jmp
aas
jg
push
repnz
clc
inc
test
jge
cmpsl
sbb
aas
pop
nop
or
xor
pop
inc
add
clc
inc
mov
inc
mov
or
out
sahf
out
mov
or
pusha
shr
inc
jg
es
loop
inc
fiadds
and
jg
add
mov
push
enter
rorb
mov
aaa
pop
add
sbbl
mov
pop
aad
movsb
dec
jo
cmp
sbb
dec
push
insl
mov
test
pop
jl
jecxz
nop
jg
push
push
push
or
dec
sahf
lcall
mov
mov
test
pop
je
mov
add
push
push
push
add
das
in
xor
xchg
jno
adc
cmp
out
stos
in
push
xchg
je
jg
mov
stc
adc
in
jne
push
sbbl
sbb
mov
adc
pop
adc
inc
enter
cmp
jmp
push
aam
sbb
inc
mov
jnp
jne
add
int3
data16
mov
mov
inc
add
push
mov
add
call
add
cmpb
cmp
pop
aas
loop
or
push
push
pop
jo
or
push
push
add
pusha
push
shrb
jno
pop
je
enter
cmp
jle
mov
cmp
cmpsb
dec
cmp
pop
inc
cmp
dec
leave
incl
sub
add
mov
iret
mov
add
push
aam
xor
adc
mov
dec
cmp
add
xchg
and
fcmovb
and
push
add
ds
xchg
lret
fsubs
lds
xchg
mov
int3
and
sarl
xor
pushf
inc
jae
cmp
dec
imul
sub
sbb
ljmp
fsubrl
ret
sbb
push
fst
loopne
dec
fs
pusha
scas
enter
adcb
in
push
add
out
push
cmp
sbb
ds
push
cwtl
or
sbb
mov
dec
fstpt
jge
scas
std
sbb
sbb
jb
sub
xor
add
adc
xorb
dec
pop
movsl
mov
push
out
fildl
roll
mov
add
jmp
pop
add
push
push
xlat
xchg
mov
cmp
je
es
in
push
mov
mov
or
loope
push
sub
mov
or
in
and
in
adc
cmp
out
lea
push
into
iret
push
decl
lock
sbb
and
in
lret
fsubl
xlat
push
sub
cld
or
sbb
mov
jmp
imul
push
dec
jne
mov
dec
imul
les
push
adc
sbbb
fadds
xor
into
mov
jmp
lea
push
push
in
add
dec
neg
sbb
push
jmp
ret
fwait
mov
ss
imul
xchg
and
daa
xchg
fcomp
lea
mov
repnz
ja
cmp
test
mov
push
jo
jp
and
mov
mov
loop
and
push
dec
pop
mov
loopne
ds
or
push
es
sub
nop
and
lock
and
sbb
mov
pop
push
aam
push
pop
repnz
mov
rolb
pop
push
push
sub
stos
pop
dec
push
and
addr16
loopne
dec
stos
add
adc
aas
sub
sbb
or
push
jmp
mov
cmp
sbbb
adc
sbb
xor
sbb
jp
shlb
cmp
je
andb
aam
cmpsl
xor
fisttpll
movsb
mov
loope
or
mov
push
out
cmpsb
dec
mov
inc
pop
push
mov
cmp
jb
neg
lcall
out
mov
shrl
icebp
je
adc
mov
divl
stos
jl
dec
ljmp
add
or
push
xchg
cmp
add
jnp
movb
dec
sarb
cmp
ss
pop
mov
add
pop
stos
pop
mov
je
int3
xchg
jp
mov
pop
rclb
movsl
inc
data16
add
xor
pop
cmp
push
push
mov
mov
shrb
sbb
mov
xchg
cmp
sbb
adc
inc
jb
aam
jo
fildll
add
adcb
loope
adc
fmul
enter
pop
lcall
pop
mov
popa
push
pop
jmp
mov
fbstp
push
mov
loopne
mov
mov
mov
jmp
sub
sbb
jg,pt
lcall
data16
add
ss
int3
jmp
mov
push
add
xorl
add
pop
aaa
push
lret
push
dec
xchg
int3
mov
adc
addl
adcb
adc
imul
mov
xchg
pop
push
adc
push
int3
inc
mov
add
jb
fstl
dec
mov
adc
xchg
pop
or
lock
je
mov
and
add
jl
mov
mov
sub
push
dec
jae
out
add
jbe
call
imul
add
cmp
mov
inc
jnp
or
mov
fadd
sar
lods
and
clc
test
je
testb
fsubr
hlt
imul
movsb
clc
jae
cmp
inc
add
outsb
cmp
and
cmp
clc
jnp
add
and
inc
push
sub
ret
dec
add
test
inc
mov
xor
lcall
xorb
or
cmp
jne
dec
in
mov
das
cmp
das
dec
push
cmp
sub
or
jne
orb
adc
sbb
jb
push
mov
idivb
push
test
icebp
sbb
inc
jo
es
cmp
mov
fmuls
xchg
or
xor
cmp
jmp
add
mov
jnp
add
inc
jmp
push
sub
pop
imulb
jo
inc
lret
adc
xchg
mov
push
jecxz
loopne
call
inc
or
sbbb
add
inc
xchg
adc
inc
in
scas
pop
add
jmp
loop
jecxz
xchg
mov
jne
nop
or
int
rclb
xorb
adc
out
push
sbb
push
push
dec
mov
add
mov
pop
jl
das
mov
aad
adc
enter
or
jne
jmp
es
or
adc
adc
add
pop
jle
pusha
push
ret
ja
loope
push
mov
jmp
mov
ljmp
inc
push
add
rorb
add
mov
sbb
push
std
add
adc
ss
mov
or
or
dec
xor
add
dec
insb
mov
jmp
push
mov
lods
pop
cmp
cmpsl
flds
mov
sahf
push
pop
ss
stc
cmp
repz
pusha
jbe
mov
cmp
cmpsl
jp
pop
ror
iret
jnp
iret
repnz
push
push
sub
cmp
repz
push
jo
xchg
stc
mov
fadds
in
add
jns
cmpsl
or
cmp
sahf
out
sahf
test
cmp
repz
push
popa
push
and
cmp
repz
add
loope
js
push
push
pop
dec
or
adc
push
dec
imul
je
jmp
push
imul
sub
and
outsb
je
insl
and
jb
jb
idivb
addr16
insl
cmp
or
push
mov
add
jo
and
pop
jne
imul
stc
outsb
outsl
ja
ds
and
data16
outsl
jbe
jb
and
mov
and
adc
arpl
and
out
push
das
arpl
jo
je
mov
jnp
mov
and
popa
adc
and
push
cmp
push
xor
lret
test
lods
insl
subps
cmp
js
jne
sbb
ds
mov
je
and
and
adc
nop
fs
cmp
insb
sbb
mov
jb
je
inc
lock
mov
outsl
push
mov
gs
and
add
test
and
push
mov
jae
lods
mov
insb
adc
out
loop
pop
mov
xor
inc
js
lods
arpl
add
jae
insl
jae
mov
add
cmp
lods
std
stc
cmpsb
or
xchg
out
mov
and
inc
out
sti
push
pusha
jbe
dec
inc
and
xchg
xor
cmp
ret
add
mov
jo
insb
inc
shlb
popa
mov
inc
andl
sub
mov
sub
loope
hlt
cs
inc
push
xor
gs
outsb
push
rcr
ret
adc
gs
mov
insl
mov
cs
shl
dec
inc
cmp
xlat
push
lods
mov
popa
xchg
jp
js
dec
mov
aaa
outsl
or
push
pop
jo
gs
hlt
imul
outsl
ss
rcll
sub
xchg
bound
sub
dec
arpl
dec
jg
mov
push
addr16
lret
or
lds
add
xor
out
outsl
jo
mov
shl
mov
arpl
clc
js
cmp
test
inc
aaa
pop
repnz
pop
xor
pop
insb
outsl
arpl
movsl
sbb
imul
pop
add
add
jno
jae
xor
cmp
out
icebp
pop
cmp
sub
ja
jns
and
cmp
and
and
pop
lods
sti
adc
push
cmp
addr16
jae
cmp
push
cmp
jno
and
xor
rcrb
lods
and
or
mov
xor
cmp
scas
cmp
push
pop
jne
inc
gs
push
mov
notl
fs
je
add
push
ss
bound
dec
jecxz
insl
js
inc
jle
dec
jo
inc
dec
push
fnstenv
cmp
pop
lea
dec
sti
cli
fidivrl
popa
addr16
outsl
js
jne
xor
movsl
add
fiaddl
add
add
dec
mov
add
cmp
orl
fadds
in
addb
in
andb
push
add
add
mov
and
add
add
fucompp
inc
adc
insl
adc
fdivs
add
pop
push
adc
shr
std
adc
pavgb
add
mov
fldl
pop
fldl
inc
stos
inc
leave
jbe
cltd
ds
dec
jl
push
addb
mov
aad
adc
add
add
inc
scas
daa
dec
and
xor
push
lcall
test
adc
push
push
inc
push
scas
add
fadds
inc
and
ja
jmp
jbe
cmp
js
inc
adc
jg
xor
je
pop
call
inc
cmpsl
xchg
popa
push
and
ret
pusha
adc
mov
push
and
and
repz
decl
adc
shll
add
or
inc
push
inc
fwait
mov
jnp
jnp
lahf
popa
ss
mov
adc
adc
int
inc
sub
aad
jns
mov
jbe
dec
pop
cmp
repz
sbb
lcall
gs
popa
push
cmp
and
xchg
and
and
adc
aas
int
cs
add
aaa
add
jg
clc
arpl
pop
aas
adcl
loopne
loopne
add
add
jle
adc
imul
and
int3
popa
repz
and
scas
mov
in
fistpll
jb
adc
test
jecxz
int
inc
testl
jbe
jle
adc
fnstenv
xchg
or
pop
arpl
add
sub
adc
aad
aaa
imul
lcall
clc
pusha
aaa
push
ja
xor
fwait
or
fwait
jo,pn
inc
xor
xorl
inc
imul
pop
dec
loop
jb
rcl
loope
mov
jbe
out
js
or
out
stc
push
cs
out
lahf
cmp
adc
inc
jb
ret
add
or
shll
push
dec
mov
repz
jp
fisubl
jbe
faddp
sti
loop
pop
es
push
mov
enter
ret
aas
dec
arpl
lahf
stos
mov
pop
divb
loope
lahf
cmpsl
sbb
rorb
xchg
shl
dec
sti
pop
fwait
cs
popa
mov
pandn
jmp
sub
push
sbb
repz
jmp
push
lods
or
dec
lcall
nop
into
sub
push
mov
xchg
adc
add
roll
test
pop
iret
shrl
jge
xor
insb
push
sbb
push
repnz
fdiv
cmp
or
add
and
clc
and
push
adc
lds
lahf
pusha
and
cmp
and
adc
adc
ja
xor
repz
mov
jbe
pop
jbe
jb
ds
cmp
jns
or
cmpsb
cmp
iret
sar
cmp
fwait
js
xor
int3
sbb
repnz
mov
aaa
into
ficompl
sahf
out
scas
data16
aaa
popf
out
out
sahf
stos
xor
mov
mov
lds
mov
fidivs
push
jle
icebp
repnz
fwait
leave
jb
push
push
pusha
adc
jae
inc
jne
mov
cmp
shrb
cmp
xor
xchg
shrb
ds
jp
cmc
sbb
mov
out
test
into
out
mov
cmc
cmp
sub
mov
jae
mov
adc
jns
push
inc
cs
adc
lahf
out
pop
push
sbb
int
inc
sbb
sarl
push
ss
repz
dec
aaa
cs
inc
add
and
add
cs
jo
cmp
or
dec
out
jns
pop
or
into
xchg
xchg
xor
inc
repnz
xor
clc
inc
xchg
pusha
mov
aaa
mov
mov
cmpsl
popa
loopne
hlt
aas
into
xchg
movsb
popl
xchg
push
add
call
fs
ds
pop
aaa
cli
xchg
out
outsl
and
insl
pop
jge
xchg
mov
cmpsb
adc
pop
aaa
loop
and
out
in
push
inc
fxch
push
jl
repz
lea
mov
divb
xchg
stos
test
inc
sahf
xchg
adc
xor
jns
inc
push
les
jg
dec
sbbb
push
lods
lret
mov
push
adc
rcr
in
mov
lods
shlb
gs
lea
popa
sti
dec
imul
and
and
dec
mov
add
hlt
adc
fwait
and
jmp
popa
outsb
into
inc
dec
xor
sahf
push
stc
lcall
insb
jbe
sbb
cmp
ja
jg
test
int3
mov
lds
inc
into
mov
fcmovnb
lea
ljmp
repnz
adc
mov
inc
mov
std
cmc
lcall
jae
jge
xchg
push
adc
into
aas
lock
mov
ss
fistpl
jmp
mov
xor
out
inc
push
inc
leave
aaa
jno
mov
lods
cmc
push
xchg
out
pop
negb
inc
test
push
addr16
or
add
mov
in
nop
ds
dec
ja
in
fcmovnb
push
jns
testb
icebp
ds
push
out
cmp
repz
cmp
inc
xchg
jbe
cmpsl
pusha
in
mov
push
jle
push
sahf
jmp
jl
and
xor
nop
fst
jnp
adc
aas
shlb
inc
xor
add
lds
inc
sar
jmp
scas
jecxz
inc
fildl
popa
aas
ljmp
aaa
add
mov
ljmp
inc
adc
mov
jbe
xlat
mov
inc
loopne
cwtl
cmp
lock
pushf
notb
data16
xor
test
pop
pop
or
add
cwtl
mov
das
scas
cld
call
fildll
pop
add
movsl
loopne
xor
into
push
je
push
aaa
or
in
push
lods
orb
or
idiv
or
xor
loope
scas
cld
sub
out
decl
scas
push
adc
lcall
or
loope
add
int3
mov
adc
loopne
movsb
jns
adc
cmp
cmp
enter
cmpsb
xchg
mov
scas
flds
cwtl
sub
call
fldl
sbb
rcrb
loop
mov
mov
inc
fistl
mov
adc
push
jb
jae
mov
lcall
adc
mul
rorl
ljmp
out
inc
arpl
scas
sti
pop
fdivr
scas
ret
scas
sub
nop
lds
mov
and
addr16
sbb
adc
cwtl
mov
pop
outsl
push
mulb
cmpsl
nop
insl
sub
aaa
add
fistpl
fst
adc
shll
jae
cmp
inc
or
push
add
and
inc
cs
mov
push
ss
xchg
jle
inc
adc
inc
inc
mov
into
sbb
inc
push
in
mov
roll
repnz
jmp
lea
scas
inc
and
pop
push
nopl
enter
sti
pop
cld
call
pop
das
push
xor
xchg
aaa
insb
mov
into
push
jne
incl
std
xchg
test
cmp
cwtl
data16
xchg
jne
pop
push
xor
aaa
shll
inc
lcall
lret
sbb
addr16
out
out
pusha
adc
push
popf
imul
scas
into
sbb
inc
mov
fldl
cmp
jbe
shl
pop
ds
xchg
jbe
roll
hlt
and
or
push
popa
inc
pop
pop
push
push
mov
ja
inc
arpl
push
adc
push
arpl
icebp
aas
or
jns
xlat
cmp
or
jg
sar
outsl
adc
lret
or
jbe
fs
data16
fbstp
incl
and
into
push
cmp
mov
dec
lea
std
sbb
jmp
in
and
push
data16
pop
pop
cwtl
or
lock
adc
gs
jne
inc
pop
add
pop
cwtl
call
adc
gs
mov
xchg
cmp
push
mov
sub
pushl
push
mov
fnsave
add
sub
push
popa
ljmp
andl
out
hlt
jg
scas
out
add
push
inc
and
ljmp
popa
adc
ret
outsl
repz
lods
xor
sub
inc
sbb
mov
loope
das
shll
push
outsb
add
pop
fcomip
pop
jle
jecxz
pop
push
stos
fimuls
das
mov
mov
sbb
inc
sbb
mov
adc
fdivr
fcomip
ja
pushf
and
dec
add
into
push
das
and
imul
outsl
xchg
inc
mov
scas
mov
stos
pop
into
push
push
in
jne
rorb
sahf
movsl
clc
push
and
lret
and
mov
jecxz
sbb
adc
mov
mov
pop
push
jmp
jmp
push
add
push
and
lret
repz
and
push
imul
lds
sbb
out
adc
pop
inc
cs
notb
and
xchg
shufps
jo
inc
adc
add
push
test
dec
inc
add
push
adc
inc
sti
push
and
push
and
sbb
daa
inc
inc
daa
clc
std
adc
je
pop
and
loopne
push
xchg
inc
adc
mov
imul
and
jb
enter
sub
dec
cmpsb
or
push
mov
repz
mov
jl
ficomps
and
adc
data16
mov
push
and
imul
xor
adc
xchg
ret
int
repz
adc
sub
inc
cmp
xchg
idivb
iret
rep
lret
mov
push
iret
repz
jl
pop
jne
test
xchg
lret
jecxz
sub
sub
insb
pop
dec
in
fldcw
add
mov
aaa
push
mov
in
repz
jge
jb
add
out
fwait
jno
xor
push
gs
jns
out
mov
stos
aad
fildl
out
not
and
pusha
stc
cmp
imul
aad
mov
data16
popa
dec
and
sub
jns
out
fimuls
out
sahf
loopne
lds
sahf
data16
push
das
sbb
sahf
out
jge
and
shrl
jecxz
adc
es
cmp
sbb
fimuls
cmp
fcmovne
mov
sti
pop
fs
dec
and
and
pop
jb
xor
sti
xor
jmp
leave
sbb
fnstcw
iret
repz
outsl
ds
repz
pusha
push
jo
adc
jnp
mov
push
mov
and
fwait
bound
cmpsb
inc
push
mov
jnp
push
add
fstpl
repz
push
mov
cmp
repz
inc
sub
cmpsl
stc
mov
icebp
pop
cwtl
sbb
repz
stos
cld
lea
fisubs
push
daa
mov
cmp
cmp
in
mov
data16
lods
js
iret
mov
sbb
xor
push
data16
fstp
mov
movsb
adc
movsb
pop
inc
daa
jo
xor
add
sub
cmp
imul
iret
repz
xchg
shrb
inc
jae
outsb
aaa
int
repz
push
jmp
ficompl
cmpsl
lret
jo
fldcw
mov
into
sub
iret
repz
pop
sub
lcall
int
aad
cli
jns
idivb
shrl
xor
out
cmp
pusha
push
xor
repz
int
data16
sub
mov
and
jge
rcl
cmpsb
iret
push
cmc
jns
pop
imul
mov
sub
push
stc
das
int
lcall
rcrb
repz
inc
adc
iret
inc
pop
sti
imul
popa
and
data16
idivl
mov
and
mov
jnp
adc
aaa
inc
inc
in
and
cmc
gs
shrl
fldcw
iret
repz
es
outsb
cmpsl
fnstcw
iret
xor
sti
and
iret
sarl
int
and
lds
test
jns
into
outsl
jns
fwait
and
ds
jae
andb
jne
clc
into
movw
push
add
sahf
aaa
dec
inc
aas
add
sahf
out
dec
xlat
loop
lea
out
pop
pusha
xor
mov
daa
pop
push
or
ss
je
push
and
xor
push
inc
out
add
push
xchg
add
push
daa
push
sahf
idivl
push
inc
cmp
cs
repz
inc
add
jno
jbe
sbb
daa
daa
dec
iret
push
es
add
fwait
jns
repz
mov
decl
pushf
out
and
cli
and
ds
cld
ljmp
mov
roll
shlb
mov
incl
out
pop
es
push
stos
sub
jne
sbb
into
adc
lock
out
mov
scas
scas
data16
or
in
xchg
rcrb
xor
push
in
fsubr
fcmovnbe
jecxz
mov
fwait
dec
adc
mov
insl
js
ret
jecxz
mov
incl
cmpsb
add
sub
fdivl
or
adc
add
cltd
inc
hlt
lahf
pop
mov
leave
pushl
cmpsb
xchg
jecxz
clc
insb
jae
xor
adc
js
adc
pop
xlat
fisttps
int
mov
push
and
data16
pusha
pop
cld
lahf
std
out
call
mov
stos
lods
ret
jo
cmp
mov
add
inc
jmp
xor
out
sahf
pop
fsubs
push
lcall
dec
jb
loope
iret
gs
jo
mov
ja
movsl
cwtl
stc
test
out
decl
nop
gs
fwait
ja
fsubrl
push
push
xor
push
mov
insl
cmp
cld
xchg
jecxz
xchg
inc
mov
push
sbbl
add
andl
ret
jo
pop
into
and
add
stos
xchg
jno
gs
adc
pop
sti
cmp
stos
fistl
push
push
cmpsb
mov
jg
pushl
flds
sarb
pop
repz
inc
scas
movsb
ror
and
rcr
jg
mov
loopne
stc
pop
xchg
xchg
dec
pop
nop
and
push
cmpsb
or
adc
jecxz
mov
call
int
ljmp
jo
pop
pop
inc
jle
int
faddp
popl
sar
or
sar
dec
and
mov
push
add
cld
lcall
jle
cmpsb
mov
out
test
in
not
lock
shl
xchg
jbe
adc
clc
pushl
or
jge
pop
sub
push
pusha
push
sub
js
push
cmp
popa
dec
sbb
jns
inc
dec
and
or
popa
movsl
icebp
out
addl
stc
stos
shrb
cld
lcall
mov
out
lds
adc
adc
mov
add
add
pop
sub
cs
lds
lret
mov
fnop
mov
popa
dec
sbb
jg
arpl
adc
scas
ljmp
movsl
aad
imul
fsts
mov
cmpsl
lds
decl
stc
cltd
ret
rorl
pop
adc
pop
sbb
jl
pop
push
xor
cmp
add
popa
jnp
and
adc
dec
jae
sub
cs
pop
or
lock
out
ja
cmpsl
jmp
scas
hlt
imul
shll
pop
push
outsb
dec
pushl
inc
inc
add
and
cmovp
pop
push
or
xchg
popf
test
ror
shrb
inc
inc
add
imul
jp
xor
das
fcomp
sub
test
fwait
in
iret
shl
cwtl
xchg
and
repnz
movsl
stc
loopne
lcall
stos
and
cmp
pusha
xor
sub
push
push
xor
dec
xor
ss
mov
jmp
mov
and
mov
popa
xor
jle
movsl
xchg
loop
movsb
dec
cltd
cmpsl
popf
mov
inc
mov
cli
int3
icebp
mov
and
mov
jmp
sti
out
mov
int3
movsb
mov
cmp
jecxz
mov
repz
mov
mov
jmp
incl
ja
sbb
xor
arpl
cmp
jg
adc
popa
cmp
addr16
jns
das
sub
dec
pop
dec
popa
adc
push
aaa
and
adc
inc
cmp
add
aaa
and
ljmp
pop
sub
cmp
pop
dec
pop
popa
cmp
aaa
push
or
inc
add
aaa
add
sbb
dec
dec
sbb
push
push
outsl
or
jbe,pn
jo
js
fistpll
cmpsb
scas
mul
stc
lret
std
mov
mov
and
and
dec
push
and
ja
inc
and
pop
dec
xor
and
mov
in
out
cli
stos
xchg
sar
lods
pop
imul
andb
repnz
outsl
clc
ljmp
mov
sar
ljmp
mov
ret
jecxz
idiv
sti
mov
cmpsb
nop
sbbb
lcall
lcall
aad
ror
and
daa
cmp
ja
add
jb
or
and
sub
jl
mov
add
sbb
jp
or
cmp
sbb
je
inc
cmp
jmp
test
ljmp
mov
aad
mov
cs
pop
jge
push
call
inc
or
imul
jno
push
dec
aaa
inc
push
or
jp
or
inc
or
insb
push
pop
cmp
push
jbe
sbb
sub
jmp
stc
fadds
lods
mov
sti
in
sarb
jecxz
lcall
or
adc
dec
jne
push
and
inc
jg
incl
sbb
cmp
or
cmp
lret
fmul
cmpsb
cmpsb
pushl
lods
xchg
sahf
movsb
xchg
in
cmpsl
cld
call
std
nop
fidivs
ljmp
imul
add
sbb
xor
adc
cs
jmp
lcall
movsb
cwtl
shl
loop
dec
pop
sbb
and
and
or
insl
push
adc
jle
decl
and
cmpsb
mov
mov
jmp
shl
in
mov
lret
jecxz
lea
out
push
inc
xchg
stos
incl
dec
imul
dec
sub
or
sbb
in
dec
out
mov
xchg
jmp
pop
sub
or
cmp
dec
arpl
ljmp
and
jbe
and
cmp
insl
es
pusha
jne
pop
sub
push
sbb
xor
jo
mov
dec
push
push
pop
vmread
jle
pop
imul
inc
pop
incl
pop
adc
push
js
or
add
dec
ss
and
push
aad
fwait
add
stos
mov
in
xchg
lret
call
in
mov
sub
jnp
push
bound
daa
xor
push
dec
pop
cmc
loopne
negb
push
add
or
cmp
aaa
dec
fs
stc
jg
xor
xor
adc
pusha
outsb
push
dec
sub
adc
mov
jne
mov
mov
int3
lret
enter
popa
jmp
idiv
mov
lret
cltd
repnz
scas
mov
scas
stos
sahf
lods
xchg
mov
aam
out
jb
jg
xor
rol
shl
lcall
aas
das
push
cld
pushf
out
mov
lahf
in
rcl
mov
mov
mov
mov
sar
cltd
ret
pmaddwd
sar
loope
lahf
std
mov
in
xchg
mov
mov
int
cs
ljmp
sbb
cmp
addr16
cmp
push
popa
outsl
and
pop
outsl
imul
adc
inc
adc
call
jo
bound
add
inc
sub
jl
inc
pusha
sub
adc
dec
jp
fs
cmp
in
pushl
xor
push
jl
jns
push
cmp
cmp
jno
push
fistpll
push
cld
mov
es
and
gs
adc
push
jge
push
lahf
sti
lods
call
jbe
cmovl
in
sub
pop
mov
inc
pop
jle
cli
mov
cs
and
jg
or
pop
sub
stos
mov
add
push
push
inc
js
pop
sub
push
add
adc
dec
pop
das
sbb
sbb
dec
add
push
jle
pop
push
jnp
stos
in
mov
push
stos
mov
shl
inc
sti
mov
jbe
das
push
in
jg
jg
cmp
out
adc
push
sub
push
push
das
or
and
cmc
loop
mov
or
orl
xchg
neg
frstpm(287
pop
push
pop
push
es
or
or
lods
mov
rcr
pop
push
addr16
call
jb
xor
and
addr16
dec
and
jge
push
jns
sbb
push
stc
stc
sbb
push
dec
dec
jno
xor
and
sub
outsl
and
pop
lret
fistps
mov
pop
push
add
outsl
clc
mov
outsb
loope
not
movsb
mov
pushf
mov
call
xchg
shl
fbld
push
pop
push
push
push
jae
pop
insl
or
jno
jo,pn
insl
jp
or
fs
pop
outsb
jnp
imul
jmp
inc
ss
or
pop
adc
fs
inc
sbb
jae
inc
mov
addl
call
pop
dec
jge
inc
sbb
push
xor
or
es
inc
aaa
outsl
incl
insb
jo
cmp
cmpsb
enter
aam
nop
hlt
xchg
dec
pop
sbb
in
call
and
mov
mov
mov
mov
shl
mov
cmpsl
leave
lret
mov
or
es
clc
and
scas
mov
mov
jo
xchg
lods
rorl
mov
jmp
loopne
clc
pushl
cmp
pop
sub
dec
pop
inc
jle
adc
mov
ret
loop
sar
pop
out
inc
dec
inc
sub
pop
cmovo
aaa
lcall
jbe
mov
mov
ret
mov
lahf
fwait
xchg
int
decl
imul
in
mov
lahf
stos
mov
sbb
push
jbe
call
popa
push
cmp
or
adc
push
jbe
xor
or
cmp
out
mov
xor
insb
or
and
mov
ret
dec
pop
dec
jge
pop
pop
popa
inc
push
inc
push
push
jg
pop
pop
popa
pop
in
mov
dec
dec
pop
ss
dec
dec
imul
push
xor
outsl
lcall
ror
shrb
mov
lods
cli
pushf
stos
mov
popf
loope
ljmp
jbe
insb
jbe
jno
xor
inc
cmp
gs
and
mov
pop
add
sahf
xchg
out
lcall
sbb
aaa
add
push
popa
jmp
mov
mov
ret
in
lock
stos
push
pop
js
insb
adc
pop
inc
je
jno
out
incl
cmp
sbb
inc
dec
pop
sbb
jno
in
in
mov
lods
std
lock
mov
ljmp
mov
xorb
push
jae
cmovns
pop
sbb
push
fwait
push
cld
call
cmp
inc
dec
sbb
lret
cs
test
js
out
hlt
adcl
pop
cmp
inc
dec
add
dec
mov
call
push
sbb
cmp
xor
dec
push
and
mov
sub
addr16
test
mov
mov
xlat
sti
cli
mov
stos
mov
loopne
ret
imul
sub
jo
jg
in
mov
cli
mov
stc
xchg
mov
xchg
lcall
leave
mov
mov
leave
addl
fdivrl
loope
ret
idiv
mov
in
movsl
mov
loopne
ljmp
pop
aaa
push
adc
adc
push
daa
jne
cmp
cmp
call
pusha
jb
and
sbb
packsswb
jl
aaa
decl
cltd
into
xchg
fidivl
add
dec
pop
jg
sbb
cmp
mov
add
jmp
lcall
xorps
add
jae
pop
sub
dec
imul
fldt
and
cmp
sub
push
sbb
es
push
ds
pop
daa
sbb
sub
inc
sbb
push
push
or
sahf
jg
push
ja
lock
int
into
popf
fnstcw
shl
fidivrl
jl
lock
mov
mov
ljmp
inc
dec
jne
jg
lcall
sub
push
gs
dec
inc
outsb
enter
in
ljmp
scas
mov
and
pop
dec
adc
push
push
and
cmp
dec
xor
out
out
cltd
loopne
rol
in
mov
mov
ret
popl
mov
fucomp
scas
nop
mov
call
addb
xchg
mov
mov
loope
cmc
jmp
mov
scas
lret
stc
and
fisttps
popa
cld
ror
mov
shrb
cmc
lret
xchg
cld
jg
xchg
mov
mov
mov
fs
ss
fs
arpl
and
incl
xchg
inc
jns
daa
ss
arpl
jp
push
jbe
mov
sbb
xchg
lret
int
stos
stos
mov
or
adc
add
add
adc
jo
sbb
fnsave
movsl
call
decl
lret
out
leave
in
mov
mov
xchg
mov
sar
movsl
push
lods
out
cltd
cmpsl
mov
mov
mov
mov
mov
ret
jmp
mov
shl
mov
mov
xchg
cli
cmpsb
xchg
xchg
cmp
fistps
test
repz
test
inc
mov
mov
mov
idiv
mov
pop
std
fiadds
out
cmc
lret
loope
mov
mov
sarl
fldt
mov
xchg
in
lret
cli
xlat
lret
xchg
icebp
popf
fdivr
mov
leave
iret
out
mov
lcall
ffreep
in
icebp
div
lret
cli
lcall
mov
mov
pushl
loopne
in
loop
mov
mov
xchg
aad
mov
adcl
cltd
out
cli
dec
ret
fcoml
jecxz
sub
jb
inc
inc
cmp
ja
outsl
jae
mov
jbe
pop
pusha
pusha
add
and
inc
pop
data16
mov
cmp
push
jp
jg
lcall
dec
sub
add
or
push
inc
jg
sbb
push
decl
xor
cmp
add
and
xor
push
xor
addr16
jmp
dec
dec
ds
inc
add
push
inc
and
push
sbb
xor
incl
mov
lock
mov
mov
in
iret
jmp
mov
sbb
fsubp
xchg
or
in
test
scas
mov
stos
ljmp
dec
es
mov
cmp
mov
push
push
push
inc
jnp
ljmp
jns
fs
and
push
das
aas
sub
dec
or
inc
push
pop
and
mov
push
cld
pushl
loope
cmc
xchg
mov
ret
mov
jmp
mov
mov
stc
fsubp
nop
clc
sub
mov
clc
mov
frstor
iret
mov
sub
int
testl
and
gs
sbb
cmp
mov
xchg
clc
mov
mov
dec
lahf
cmp
push
push
or
jae
adc
jge
scas
dec
dec
jmp
and
push
shlb
hlt
mov
mov
xorl
nop
cli
xchg
aas
jmp
ret
aam
push
inc
push
outsb
jbe
xor
aaa
cs
jl
ljmp
insb
adc
jns
inc
jl
and
pusha
xor
data16
decl
cmp
add
jge
adc
pop
sbb
pop
pushl
lcall
dec
data16
inc
sbb
sbb
add
pushw
pop
jo
jo
jp
adc
jg
das
pop
sbb
cmp
sbb
outsb
pop
cmp
pusha
xor
out
in
lcall
ds
es
push
jnp
dec
pop
dec
dec
xor
sbb
push
push
sbbb
push
cmp
pop
sti
inc
pop
cmovle
aas
push
sbb
dec
sbb
jnp
pop
sbb
ljmp
jb
xor
jp
inc
popa
xor
jg
jp
daa
add
bound
or
je
pop
jne
pop
mov
out
clc
dec
jle
xor
push
or
iret
lret
mov
iret
jmp
cltd
fistpll
aad
cld
cwtl
cwtl
in
rcrl
cmpsl
mov
lds
cld
pop
cld
int
shr
shrb
cltd
mov
ds
divl
mov
popa
lock
test
out
fistpll
mov
ljmp
cmp
movd
inc
imul
xor
jb
xor
xor
pusha
jno
jle
xor
jae
pop
icebp
filds
sbb
cmp
insl
sub
aas
jle
cmp
arpl
incl
imul
arpl
arpl
or
adc
or
or
push
adc
data16
jb
push
and
es
jae
cmp
sub
sub
idiv
mov
inc
cmp
hlt
jmp
mov
sti
push
icebp
pop
push
cmc
call
fldenv
mov
out
inc
xor
ja
jbe
push
je
adc
push
inc
pcmpgtw
lods
jmp
fisubrs
pop
sbb
fcomip
ja
dec
sub
adc
pop
push
or
sub
dec
or
push
sub
cmp
cmp
popa
or
or
add
ja
pop
adc
dec
sub
cli
ss
cmp
daa
sbb
or
insb
adc
add
cvtps2pi
cmp
push
xchg
mov
xchg
out
test
test
ljmp
jecxz
mov
mov
lcall
jg
jne
or
jp
das
cmp
call
jnp
dec
jo
ss
xor
addr16
das
and
pop
add
aas
push
sbb
je
jmp
xor
push
inc
and
sbb
adc
or
jae
fsts
in
fst
aam
mov
iret
test
test
lahf
nop
fcmovnb
test
xor
jg
lods
into
sahf
notb
mov
jmp
neg
test
idiv
mov
pushl
out
std
mov
std
ljmp
mov
xchg
roll
mov
int3
ffree
mov
sahf
stos
out
call
sar
in
fsub
jmp
xchg
cli
mov
xchg
test
ret
and
sub
je
jbe
adc
xor
jg
add
lcall
push
sahf
sbb
pop
pop
sub
jle
pushl
cmp
add
jb
cmp
jbe
sub
sbb
pop
pop
dec
or
adc
lcall
popa
push
js
inc
push
sub
add
add
pop
inc
and
stos
mov
mov
adc
pop
dec
pop
outsl
or
or
sub
xor
outsl
sbb
add
das
jg
data16
pop
push
push
scas
loop
mov
mov
xchg
nop
aam
decl
xchg
cld
ret
lret
mov
cld
test
mov
xchg
xchg
mov
xlat
or
cmp
cwtl
repnz
scas
mov
sahf
cwtl
fnstsw
ret
vmovntdq
fcomip
dec
mov
xlat
mov
adcb
repnz
rcr
enter
pop
enter
mov
inc
lcall
inc
mov
inc
dec
mov
pop
fsubs
jne
mov
cmp
dec
pop
loope
jne
push
jmp
ret
imulb
ret
xorb
jge
add
repz
mov
lcall
lcall
faddp
mov
sbb
or
cmp
adc
jo
lcall
pop
xchg
ds
adc
jns
pop
lahf
jge
or
ja
addr16
pop
jge
xor
push
jbe
pop
mov
mov
out
scas
push
fbstp
pop
iret
xor
pop
mov
jecxz
pushl
adc
xor
adc
aaa
push
aas
jno
adc
xor
adc
jno
push
dec
jno
adc
mov
ljmp
jp
imulb
push
fisttpll
dec
dec
xor
test
clc
call
push
nop
push
divb
and
and
xchg
decl
js
fistps
arpl
out
inc
add
push
ret
sub
in
aas
aas
push
aaa
or
loopne
cmpsl
fisttpl
xor
ljmp
pop
imul
inc
ds
adc
jnp
sbb
jnp
push
pop
daa
pop
add
push
pop
repnz
ljmp
mov
adc
adc
jae
push
fbstp
adc
notl
mov
pushl
adc
aaa
pop
adc
aaa
push
aas
jb
adc
aaa
push
adc
jb
push
dec
jb
jg
adc
jb
sbb
sub
mov
test
pop
ljmp
and
fldcw
jl
mov
loopne
insb
xchg
xchg
xchg
sub
pop
push
cmp
lcall
mov
add
sub
or
loopne
pushl
repnz
cmp
pop
imul
cmp
scas
push
pop
push
cmc
cmp
sub
decl
lock
cmp
xor
incl
fstpt
sbb
fs
pushl
popf
fsubl
inc
into
scas
mov
into
adc
pusha
jnp
stos
icebp
lret
out
mov
and
push
push
cmpsb
dec
scas
xchg
adc
cmpsl
mov
insl
mov
mov
fcmovnbe
adc
aam
scas
outsl
add
fadds
or
ja
pop
mov
cs
mov
mov
mov
ss
dec
pop
pop
lods
xchg
aas
adc
test
xchg
inc
rorl
incl
in
sbb
cmp
out
rorb
sbb
push
into
es
lcall
mov
das
cwtl
push
int
lea
sbb
sub
pop
je
aas
sbb
bound
call
clc
js
jge
jne
cmp
je
pop
lcall
sbb
ss
sbb
pop
inc
pop
or
and
ret
insl
mov
jl
stos
decl
out
leave
mov
xchg
movsb
pop
dec
scas
insb
mov
outsl
jmp
ljmp
in
dec
loopne
sbb
push
or
cmp
jmp
sbb
pop
cmpsb
loopne
dec
push
hlt
lds
arpl
cld
cmp
sbb
push
sbb
mov
push
test
in
fwait
adc
pop
jo
sbb
rolb
sbb
xchg
mov
call
sub
ret
xchg
sub
pop
daa
jbe
test
sbb
stos
ja
jnp
sbb
xchg
in
xor
adc
mov
jge
add
int3
push
sub
lods
sub
add
call
sbb
lods
dec
mov
fmuls
jbe
and
push
mov
push
je
repz
jge
decl
dec
dec
pop
cmp
ss
les
aaa
xchg
arpl
mov
cld
imul
ja
call
and
ficoml
cli
iret
rorl
and
cltd
xchg
maskmovq
mull
call
fwait
test
adc
sbb
adc
mov
decl
mov
sbb
ficoml
cmpsb
cmp
scas
xchg
mov
dec
in
stos
out
or
repnz
repz
cmpsb
push
mov
adc
cwtl
sbb
ljmp
cli
inc
cmp
sarl
and
push
outsl
adc
add
hlt
xchg
in
or
push
adc
loop
hlt
xchg
jae
aas
shlb
lds
bts
sbb
lcall
decl
in
daa
hlt
ljmp
cli
or
pop
fwait
cmp
mov
sbb
jno
jge
mov
dec
lret
lahf
fisubrl
cmc
ficomps
mov
cmp
add
rorb
negl
jne
outsb
loope
push
and
add
test
push
adc
mov
stc
xor
cmpsb
cs
adc
out
cmp
daa
push
cmpsl
push
stc
xor
stos
adc
inc
push
in
sahf
out
sahf
jo
cmp
out
jl
and
outsl
sarl
xchg
xchg
shl
pop
shl
xor
out
sbb
iret
repz
lret
aam
int
stc
cmp
push
sbb
out
ds
fdivrs
cmpsl
stc
xor
sti
push
repz
ret
cwtl
ret
dec
repz
push
outsl
ja
xor
sbb
pop
add
push
dec
xor
incl
push
xor
and
push
xor
push
and
and
and
cmp
inc
pop
cmp
cmp
jmp
dec
das
gs
jno
jo
imul
and
mov
pop
push
inc
mov
xchg
push
repz
jmp
rcll
xchg
rcll
and
push
aaa
sbb
int
mov
xchg
cs
insb
ss
out
push
iret
xlat
mov
cmp
rorl
dec
int3
sahf
fs
lcall
repnz
scas
pop
mov
idiv
lahf
or
jo
fs
movsb
jl,pn
and
in
xlat
mov
sbb
sbb
aam
aam
mov
loope
mov
and
loopne
nop
jmp
xor
xor
dec
rcll
sti
adc
xabort
mov
jnp
sub
inc
cmp
xchg
jg
cmp
inc
xchg
push
leave
xor
mov
pop
pop
or
jmp
out
mov
in
mov
incl
mov
fsubrs
scas
mov
add
fimuls
enter
xor
pushl
dec
push
jae
pop
clc
je
sub
stos
out
xor
pop
sbb
mov
sub
inc
jb
rcl
mov
inc
shl
sbb
lea
sahf
aad
lea
adc
mov
clc
sub
js
or
cmpsl
cmpsl
sti
cwtl
and
lcall
cwtl
scas
es
pop
pop
inc
mov
popf
rolb
xor
int
xchg
mov
fstl
jle
lahf
mov
push
or
jnp
mov
dec
jns
and
sbb
inc
mov
mov
lcall
mov
xlat
fwait
mov
push
lock
pop
std
or
inc
das
push
cli
shrb
imul
gs
mov
cmp
ret
mov
mov
and
decl
dec
and
mov
jo
je
test
mov
mov
mov
lahf
stc
test
in
decl
out
notb
ret
imul
xchg
ljmp
sub
iret
mov
cltd
ljmp
addr16
hlt
call
and
dec
xor
andps
lods
cmp
pushl
mov
push
sub
inc
mov
dec
rorb
mov
adc
incl
jge
jae
sub
jnp
imul
mov
sub
outsl
out
fldt
in
sbb
outsb
pop
pop
test
imul
sbb
es
mov
jmp
ds
sub
sub
xchg
add
jo
jne
xor
inc
push
daa
frstor
pushl
outsb
cmp
mov
les
out
mov
mov
inc
xchg
cld
lcall
mov
mov
inc
push
in
lods
mov
push
call
call
movl
ljmp
add
aaa
and
mov
sarl
repnz
mov
mov
orb
jae
jle
aas
sub
mov
mov
js
in
decl
mov
ljmp
pop
popf
mov
xor
ja
push
adc
incl
pop
sbb
sub
data16
xchg
or
decl
sub
mov
aaa
push
inc
adc
adcb
fdivrp
ljmp
xor
sub
mov
mov
dec
nop
decl
jp
daa
sbb
or
clc
lcall
dec
iret
sub
xchg
cmpsl
pop
dec
lret
mov
mov
add
cmp
decl
cld
mul
ljmp
lock
dec
push
push
add
ljmp
loop
xchg
xchg
test
dec
push
gs
lock
out
cmp
hlt
mov
sti
movsl
push
or
fisttpl
call
outsl
ret
mov
cmpsb
jmp
mov
sub
out
cld
push
sbb
mov
push
hlt
jmp
int3
or
jne
gs
test
scas
cli
mov
adc
test
insb
fbld
push
aam
cmp
pusha
jae
mov
pop
in
inc
mov
inc
xlat
or
mov
xchg
add
lcall
xor
lret
cwtl
arpl
sub
out
jo
ljmp
lahf
leave
adc
fs
in
pushl
xor
add
mov
sub
fisubrs
xor
adcb
test
lds
xchg
test
cmp
ljmp
xlat
jae
loop
xchg
out
cmpsb
imul
or
and
or
mov
pusha
push
shll
xchg
mov
mov
mov
and
inc
add
pop
sub
sbb
jmp
aam
mov
idivl
pop
pop
mov
mov
pop
dec
movb
jl
sahf
call
loopne
pop
xor
aaa
addr16
push
or
cmp
or
mov
aaa
dec
decl
dec
test
rorb
mov
sub
xchg
inc
shlb
scas
andl
addr16
jge
sub
adc
add
test
testb
pop
mov
in
inc
lret
insb
jg
cli
rcrb
loopne
mov
pushf
and
out
stos
push
inc
mov
sbb
in
icebp
jecxz
imul
js
sub
out
clc
add
mov
pusha
jecxz
aad
popf
lods
sti
inc
mov
mov
je
mov
incl
push
sbb
clc
pop
into
cwtl
out
iret
fsubl
sub
and
jecxz
fbld
or
decl
adc
push
and
rorl
pop
xorb
jp
hlt
add
testb
cld
mov
test
cmp
incb
xor
popf
movsb
repnz
clc
sahf
lock
cmp
xchg
je
add
sub
lahf
mov
lret
popf
call
ds
clc
fistps
push
or
mov
jmp
mov
cmp
jg
lcall
int3
sbb
leave
fisubrl
int3
lcall
mov
push
push
xchg
pop
adc
ret
push
push
mov
dec
sub
sbb
push
push
hlt
incl
cmp
test
aas
push
inc
push
mov
jo
sarb
and
imulb
pop
mov
shrb
fidivrs
aam
movsb
inc
and
adc
outsb
adc
or
push
jmp
in
fidivl
les
mov
gs
adc
stos
mov
cmpsb
push
mov
in
call
mov
lods
fdivrp
mov
jge
lret
push
sbb
mov
mov
sbb
xchg
incl
stc
inc
mov
std
push
repnz
shll
jmp
out
fprem
js
bnd
jo
dec
insb
and
pop
adc
fucomip
or
jg
call
andl
mov
push
pusha
stos
lret
cld
add
outsl
inc
xor
or
jmp
in
and
jbe
jne
dec
popf
shl
jle
or
jb
mov
or
and
mov
dec
push
and
pop
xchg
loope
lcall
aas
or
fidivrs
in
decl
sbb
pop
aad
addr16
aas
or
or
jae
aas
mov
icebp
dec
cmp
das
clc
call
movsb
inc
jbe
xor
pop
jb
repnz
xchg
sub
cwtl
mov
cmp
bound
or
push
xchg
in
jecxz
ja
mov
test
mov
add
cmpsb
out
popf
fstpt
xchg
mov
jg
xchg
jns
push
enter
lods
lcall
sub
rcrl
cwtl
pop
push
pop
rcrb
jl
cld
mov
or
dec
icebp
incl
ret
push
and
fistps
imul
xchg
in
incl
jmp
adc
mov
inc
je
cmp
leave
mov
decl
mov
sbb
xchg
adcb
inc
pushf
out
mov
mov
push
xor
mov
cwtl
xchg
xor
jo
xor
ljmp
sbb
cli
shll
sbb
add
xchg
mov
jnp
jo
neg
int
pusha
sub
add
add
xlat
movsl
loope
icebp
adcl
ljmp
pop
mov
mov
or
mov
jae
into
pop
xchg
loopne
fistpl
imul
dec
clc
xor
xor
adc
cmp
fxch
adc
std
lret
stos
fcos
sbb
das
insl
push
push
int
mov
push
push
pop
das
lods
enter
pushl
and
je
push
dec
push
xchg
xlat
pop
insl
sbb
ljmp
std
dec
lahf
shl
cmp
sahf
cld
push
cli
mov
jl
lock
pushl
shl
rcr
push
and
in
movntps
movsb
lahf
cmp
decl
add
mov
fstps
push
dec
mov
or
pushl
out
jae
stc
mov
imul
pop
sub
mov
test
sbb
add
cmp
loop
lock
cmpsl
sbb
pop
shrb
xor
into
stc
lret
adc
ret
call
scas
fcoml
setns
push
cmp
xlat
jno
inc
jg
mov
lret
aad
insb
push
push
adc
push
mov
xchg
add
sub
das
es
cmp
call
add
imul
xor
push
cmp
bound
pushl
fsub
outsb
mov
and
xor
es
lret
inc
fsubrs
loopne
clc
fcomip
decl
cmp
mov
pop
ret
in
stos
inc
jno
adc
imul
test
sbb
rclb
push
sub
and
data16
xchg
jnp
rol
pop
mov
pop
ds
add
sub
jnp
xchg
stos
in
into
lds
in
lahf
sub
add
scas
pop
fs
std
push
sub
dec
test
dec
cmp
int
adc
loope
push
jae
push
inc
adc
in
lcall
push
pop
hlt
lahf
les
jecxz
mov
pop
flds
fldz
xchg
popf
or
lahf
add
lcall
adc
mov
arpl
or
aam
test
in
mov
jmp
ljmp
into
cli
jne
mov
inc
cmpb
push
int
movsb
inc
xchg
stos
pop
repnz
sub
mov
push
add
jg
sub
sub
in
out
lcall
lcall
adc
jno
test
dec
scas
aad
xchg
icebp
push
mov
mov
adc
push
decl
gs
ret
jecxz
gs
pop
xchg
sbb
cmp
mov
sbb
jns
adc
decl
sbb
jae
fimuls
icebp
cmp
fimuls
mov
adc
lcall
sub
jp
dec
dec
or
or
iret
cmovns
dec
test
jg
mov
cli
or
pop
lds
repnz
outsb
sarb
ds
lock
jns
dec
dec
jg
loop
xchg
rolb
inc
cmc
mov
xchg
ror
jbe
push
incl
pop
mov
mov
test
cmp
orb
sahf
out
call
push
and
pop
fiadds
outsb
sbb
out
fmull
jmp
cs
cld
outsl
xchg
lret
mov
push
lcall
jmp
xlat
mov
adc
xchg
roll
push
iret
cltd
popa
scas
push
cli
cwtl
adc
es
sub
pushl
cld
pushl
das
add
sbb
pop
leave
inc
cmp
decb
push
test
call
subl
es
add
shr
lcall
leave
jne
ja
or
inc
add
xor
sbb
sub
neg
dec
xchg
jmp
pushl
aaa
ljmp
ror
or
mov
int3
fwait
pusha
inc
jl
jbe
adc
loopne
repnz
subl
inc
out
pop
add
ja
fildl
mov
fs
ss
add
call
lea
cmp
push
cmp
push
out
sub
fwait
pop
lods
push
lret
mov
call
cmp
mov
mov
sbb
mov
les
push
ja
insb
clc
pop
decl
addr16
sbb
cs
fildl
addr16
sbb
dec
in
js
cmp
shrb
idivl
jecxz
add
movsb
and
movb
xor
ret
sahf
push
cwtl
test
jle
leave
dec
fcmovne
adc
and
icebp
lcall
pop
enter
dec
inc
cli
mov
xchg
stc
pusha
cltd
into
jbe
flds
lret
out
out
clc
mov
or
in
nop
jl
imul
pop
outsl
pop
add
dec
dec
punpcklwd
cmp
andb
adc
loop
and
int3
mov
mov
fnstcw
and
ljmp
aaa
cltd
cwtl
xchg
scas
fadd
sbb
arpl
mov
sub
andl
mov
insb
push
inc
adc
rcrb
out
add
sbb
inc
stc
mov
jp
xchg
aam
mov
dec
bound
jl
cld
jno
repnz
lds
idivb
add
pushl
xor
lret
std
popf
mov
ret
cmc
mov
jnp
or
xlat
push
out
gs
lcall
ljmp
push
or
jp
sti
fcmove
adc
mov
jne
pop
push
clc
decl
insb
lods
lahf
xor
adc
xchg
and
xchg
xchg
gs
cmc
cmp
xor
cmp
out
push
test
jle
inc
jg
pushl
es
jl
fsubl
xor
shl
repnz
fstpt
sub
cli
lds
cld
pushl
adc
je
mov
aaa
in
mov
call
gs
enter
stos
aam
mov
mov
lods
outsb
jge
fisubrs
mov
xchg
push
inc
fisubrl
mov
aam
xchg
hlt
out
ds
pushf
lods
pop
repnz
insb
cld
mov
xor
rol
rorb
rcll
mov
mov
out
cli
jae
dec
sub
push
pop
mov
mov
cmpsl
daa
xor
dec
repz
out
mulb
sbb
push
addb
xor
inc
push
sub
pop
inc
pop
sub
outsl
incb
jne
jbe
rolb
cmp
mov
push
inc
pop
mov
call
sbb
push
pusha
add
cmpsl
cs
xor
jp
in
ficomps
data16
into
lcall
or
ss
lea
and
cmp
push
jge
in
dec
pop
std
nop
mul
call
incl
mov
push
jb,pt
mov
sub
mov
sub
xor
test
ret
popf
mov
gs
jmp
or
out
fistpl
dec
push
mov
lock
mov
lods
sti
popl
cmp
sbb
int
sti
push
pop
or
xchg
cltd
mov
ret
xchg
cmp
loope
imulb
call
ret
push
incl
mov
and
inc
xchg
test
jg
int
add
lahf
inc
adc
push
pop
leave
fisubrl
outsl
inc
push
loopne
cmc
mov
cmp
add
cltd
and
mov
add
mov
ljmp
mov
push
mov
xor
add
mov
pop
fld
sarb
stos
outsb
ss
fwait
mov
pop
dec
inc
enter
lods
mov
lcall
mov
test
fucomip
add
outsl
or
les
loop
xor
cmp
fsubrs
cmp
jmp
mov
sahf
or
cmp
and
and
mov
in
call
push
sub
jl
insl
xor
mov
das
adc
fldln2
std
stos
jg
ret
das
clc
jecxz
mov
dec
int
das
add
cwtl
pop
dec
push
ja
push
mov
mov
jmp
add
xchg
repz
std
pop
sub
and
insb
neg
roll
cltd
cli
jmp
lock
jmp
adcb
push
mull
cwtl
mov
and
aaa
dec
dec
cmp
movsb
or
enter
aad
xchg
sbb
sar
in
mov
mov
jmp
mov
xlat
stc
ljmp
imul
cli
arpl
or
incl
aam
incl
imul
sbb
sbb
jecxz
cmpsl
icebp
xchg
push
pushl
incl
mov
cwtl
sub
xor
push
mov
fnstsw
xchg
insb
cltd
iret
shrl
arpl
les
push
sbb
push
mov
icebp
cmpsb
push
cld
call
inc
push
and
notb
rcrl
add
and
es
jg
ljmp
xchg
push
pop
jno
lea
sub
mov
mov
inc
jp
in
test
arpl
xchg
icebp
pop
mov
push
xor
ret
push
xor
cwtl
mov
inc
adc
or
imul
lahf
leave
fldenv
mov
jmp
xchg
push
jmp
mov
and
jnp
stos
hlt
pop
add
jecxz
fsub
or
fs
dec
add
cmc
popf
pop
into
out
mov
inc
or
push
insb
or
mov
sub
xor
decl
push
repnz
daa
dec
mov
out
js
or
adc
mov
adc
xor
pushl
jbe
rcr
mov
out
sbb
pop
in
fcoms
jo
movsb
cmpsb
bound
decl
dec
inc
push
ljmp
push
es
dec
jecxz
fildl
test
js
ljmp
ret
inc
xlat
hlt
lods
sub
xchg
incb
xor
pop
loopne
or
jg
mov
iret
sbb
daa
stc
lods
loope
xchg
cmpsb
int
cld
inc
jg
gs
inc
outsb
into
sub
negb
call
push
insb
and
ljmp
push
fadd
test
mov
jge
dec
jge
arpl
jl
add
call
push
inc
jnp
xchg
std
rolb
push
lock
pushf
jae
adc
fcomip
and
sti
shlb
and
xchg
jne
mov
adc
sahf
push
call
dec
mov
loop
loopne
loope
sbb
shlb
jmp
xchg
jle
jecxz
ljmp
mov
push
iret
mov
mov
clc
push
pop
lcall
and
mov
jmp
pushl
lods
test
adc
pop
mov
sahf
xchg
daa
orl
pop
inc
orb
push
fisttpl
call
mov
inc
push
call
mov
mov
lods
mov
dec
pop
push
mov
arpl
pop
sbb
jmp
dec
in
xchg
xchg
jmp
and
insb
or
pop
popa
das
out
dec
test
jb
jmp
jg
push
lret
incl
sbb
cmc
aaa
ss
mov
mov
cmpsl
out
test
dec
fisubrs
call
fdivl
xchg
pop
or
push
dec
xor
xchg
test
data16
incl
cld
addr16
add
add
dec
push
push
into
xchg
mov
mov
popf
inc
pop
ljmp
mov
mov
cmp
ftst
add
fstl
insl
loope
decl
insl
adc
push
cmp
fsubs
clc
movsl
in
out
dec
out
mov
mov
push
arpl
and
ja
call
dec
aaa
pop
test
cs
mov
mov
dec
fstpt
iret
mull
call
push
xchg
and
dec
mov
rcrl
push
lods
xor
mov
mov
das
clc
jnp
cmp
xor
or
or
cmpsb
lret
in
lret
sub
push
mov
call
jmp
jp
or
repnz
inc
sub
jmp
rolb
subl
push
inc
mov
incl
mov
cmp
xchg
jp
pop
cmp
jmp
xchg
fldt
sti
fnstenv
pop
fwait
arpl
jge
dec
sar
lcall
decl
mov
cmc
sarb
inc
mov
stc
fsubrl
push
mov
std
sbb
and
lock
pushl
mov
adc
arpl
jne
addr16
adc
sbb
mov
ret
shll
jmp
mov
loop
mov
test
push
sub
in
and
stos
out
fildll
call
pop
mov
pop
push
aas
xchg
imul
mov
and
es
ret
call
or
in
push
cmp
adc
cmp
aaa
test
mov
pop
out
clc
call
lods
ficoml
mov
imul
cmp
and
pop
and
andb
mov
into
dec
std
mov
jne
add
movsl
out
sub
bound
sar
jmp
rclb
scas
cmpsl
jae
cmp
scas
test
in
push
push
sbb
cli
mov
idiv
ja
call
xchg
mov
lret
xchg
inc
xorl
pop
sub
push
ret
mov
out
inc
cmp
inc
rcrb
add
sar
jg
aas
fdivrs
dec
loop
mov
jmp
mov
inc
and
fisubs
int
push
ss
push
adc
or
mov
cmpb
es
f2xm1
jno
pop
fwait
out
je
test
pushl
js
test
adc
cmp
inc
les
mov
adc
mov
pushf
xchg
mov
add
pop
mov
inc
cmp
xchg
call
add
push
lret
lahf
in
jns
rcrl
scas
cli
lods
cs
sbb
push
sbb
daa
stos
push
loopne
repnz
fidivl
mov
mov
cmp
pop
or
mov
or
push
daa
add
push
call
js
btc
test
xor
adc
xchg
xchg
int
loope
push
notl
push
jb
add
add
push
push
mov
ljmp
movsb
jne
out
jmpw
add
dec
or
cltd
cmp
mov
xchg
mov
aas
inc
fisubs
rolb
xchg
bound
les
xor
add
in
decl
mov
sbb
inc
clc
cmp
xor
mov
dec
cmc
or
jecxz
inc
in
push
xor
jns
add
lock
pop
into
filds
call
and
data16
ljmp
fcmovne
adc
outsl
imul
adc
call
xchg
cmp
pop
xor
leave
cli
pop
add
pop
sub
call
incl
dec
xchg
pop
or
ss
xor
dec
jo
popa
and
inc
lcall
inc
ret
test
std
testl
and
inc
jp
and
sbb
ds
cmpsl
sbb
ljmp
cmp
les
or
dec
pop
sub
push
dec
decl
sbb
data16
iret
stc
out
mov
adc
sbb
inc
jne
bound
call
pop
gs
adc
loop
repz
popf
jo
mov
and
inc
pop
jo
push
push
roll
test
call
rcrb
xchg
in
sbb
scas
ljmp
enter
mov
call
jg
mov
fsubr
push
ret
inc
cli
inc
xchg
mov
or
jmp
cmpsb
sbb
push
outsb
or
ret
rcr
sub
test
fld
and
cmpsb
out
jle
jmp
imul
mov
sub
push
adc
dec
call
shll
call
sub
lods
lahf
dec
movsb
sub
repnz
iret
ss
lea
call
pop
jge
popl
sahf
sub
sbb
dec
cmp
test
sbb
sub
out
in
xchg
fs
push
cli
fisttpll
cmp
ljmp
mov
cmp
outsl
mov
cmc
shll
inc
and
pop
cwtl
lock
hlt
loopne
pushl
in
mov
je
push
adcb
inc
cld
xchg
add
inc
and
sahf
ret
or
stos
test
insb
inc
jbe
push
fmuls
dec
inc
ficoml
pusha
cli
xchg
push
js
lcall
and
xor
inc
xchg
enter
add
add
andb
les
jb
insl
popf
sbb
xor
incl
sbb
repnz
in
loope
shrl
rorb
test
sub
loope
das
pop
pop
scas
lods
ss
call
jmp
pop
lcall
xlat
mov
loopne
cmp
adc
xchg
pushl
out
mov
das
sub
pop
mov
cmp
rorb
fs
incl
aaa
ds
arpl
jg
adc
stos
ss
pop
shlb
insl
xacquire
jbe
shll
std
ljmp
lret
sub
dec
out
cli
ficoms
xchg
pop
lods
adc
push
adc
call
xchg
fwait
call
les
push
adc
xor
inc
dec
dec
int
dec
and
out
clc
fistpl
dec
fisubl
inc
rorb
push
xlat
push
scas
cmpl
mov
push
stos
xchg
push
mov
scas
lods
or
lahf
ret
jbe
sub
dec
adc
fildl
fildll
jmp
push
mov
jl
cwtl
xor
pop
repz
lods
cli
and
inc
sub
sub
pop
sbb
pushl
addr16
idivb
and
jno
and
in
dec
mov
in
movsl
jge
ljmp
jmp
insb
out
sbb
jmp
add
shlb
push
push
cmpsl
popa
sub
jne
jle
jmp
xchg
push
loopne
push
xchg
mov
or
mov
fwait
cmp
adc
sbb
lcall
sbb
mov
and
mov
jbe
lods
nop
push
and
ret
iret
xlat
movl
bound
inc
mov
push
jmp
xor
sar
cmp
cmpsl
mov
inc
or
push
scas
dec
fdivrl
inc
adc
scas
into
sbb
add
sahf
lock
jo
add
pop
addr16
mov
mov
mov
push
mov
lea
std
adc
adc
int
lods
dec
cmp
cmp
jo
pop
sbb
outsl
dec
mov
in
call
or
dec
xor
test
adc
push
mov
and
dec
lret
sub
xchg
mov
cmp
mov
cs
xorb
xchg
loop
sbbb
mov
xor
aaa
clc
pop
imul
test
in
test
pop
inc
aas
push
or
ljmp
pop
cmp
inc
nop
adc
stc
push
into
mov
mov
lcall
xor
mov
push
pop
insl
jno
fistpll
jbe
addr16
cltd
fadds
sub
stos
jg
mov
rorb
adc
bound
aaa
cmp
call
outsb
cs
rcrl
sub
mov
inc
test
fs
sub
cmp
stos
fdivr
push
pop
cli
add
lahf
cmp
aam
popf
inc
sbb
stos
je
pop
hlt
call
mov
sbb
mov
xlat
mov
pop
popf
es
xchg
jmp
fbld
or
jns
push
daa
add
ret
out
lods
cmpl
call
cmc
xchg
out
sti
mov
cmp
hlt
ds
faddl
sahf
mov
add
mov
test
lea
imul
add
jge
movsb
inc
mov
imul
cmc
hlt
cmc
cmp
fcmovnu
or
cwtl
mov
pushf
in
out
into
pop
dec
pop
xchg
stc
lcall
outsl
xchg
jg
mov
je
nop
jne
xorl
addr16
ljmp
mov
push
and
mov
cmpsl
and
notl
push
dec
insb
lods
in
inc
mov
lea
out
aaa
cld
call
pop
adc
mov
cmpsb
lea
or
rorb
mov
lcall
es
adc
imul
test
cmpl
push
adc
leave
mov
pop
mov
stos
lcall
inc
mov
bnd
jns
arpl
pop
mulb
cmp
xor
pusha
jecxz
scas
incl
mov
adc
sbb
les
bound
inc
push
sbb
fcomip
add
pop
into
jle
xchg
sub
sub
mov
push
pushf
lret
nop
xchg
aad
aaa
xchg
and
out
movsl
jo
push
or
pop
or
out
inc
jne
and
incl
xchg
ds
test
std
fcomps
add
mov
mov
in
sub
lcall
or
not
out
imul
es
add
pushf
add
pop
mov
stc
push
mov
test
cmp
xor
lock
sarb
jmp
flds
fwait
inc
pop
leave
mov
ds
test
cmp
lea
ror
cmp
clc
pop
std
push
popf
jns
rorb
movsb
clc
stos
xor
add
dec
movsl
aam
add
xor
jmp
cmpsl
pop
mov
or
or
inc
xor
add
xor
in
scas
xchg
lahf
xlat
in
lahf
sbb
fstpl
dec
mov
shll
push
xchg
xor
pop
inc
mov
or
inc
movl
insl
push
xchg
cmpsb
xchg
decl
xchg
ds
and
repz
xchg
adc
loopne
inc
adc
in
es
pop
cmp
push
incl
repnz
aas
cmpsl
mov
inc
dec
push
mov
or
mov
decl
mov
mov
cwtl
mov
cltd
movsb
fs
jmp
adc
sub
stos
cld
fs
lahf
test
push
inc
fdivl
iret
scas
sbb
push
cs
inc
mov
sbb
adc
lea
adc
adc
push
shl
inc
fildll
sti
pop
jmp
lcall
lcall
sub
outsl
or
dec
cli
sbb
call
ret
nop
push
add
cmp
pop
or
xchg
cmp
clc
nop
or
adc
das
sar
fnstenv
or
xor
dec
adc
and
and
mov
std
xchg
rcll
sbbb
iret
and
cmp
pop
inc
cmp
outsl
mulb
xor
push
ss
dec
sbb
cmp
movsl
test
xchg
pop
shll
pop
lcall
iret
cwtl
test
insb
and
mov
and
scas
cmp
call
insb
gs
mov
pop
mov
jo
and
add
addr16
jb
push
jbe
pop
and
ljmp
in
js
mov
ja
mov
mov
pop
jl
jne
clc
xchg
push
ljmp
xchg
mov
cmp
arpl
jmp
arpl
mov
mov
imul
push
pop
or
out
xchg
xchg
std
fldenv
and
subb
and
cli
repnz
popf
testl
dec
mov
dec
insl
inc
jno
fistl
xchg
lret
std
mov
or
ljmp
ret
xchg
outsl
dec
subl
push
inc
mov
in
dec
cmp
sub
sbb
mov
enter
loop
sub
jmp
out
mov
mov
inc
push
lods
mov
hlt
fwait
lret
mov
mov
inc
or
sub
addr16
mov
and
hlt
and
push
pop
stc
popa
push
xchg
lret
xchg
mov
incl
pop
cwtl
pop
aad
lahf
in
ficoms
cmp
sbb
sbb
dec
inc
call
dec
test
lock
jns
or
pop
stos
mov
dec
ljmp
xchg
xor
cmp
ror
xchg
add
add
int
add
or
and
mov
scas
mov
mov
mov
push
mov
pop
test
imul
into
push
xchg
jb
adc
mov
imul
mov
mov
subl
sbb
inc
dec
out
xchg
icebp
pusha
pop
cwtl
das
dec
cwtl
or
rclb
mov
mov
sub
nop
jmp
movb
jb
repz
push
push
hlt
jns
sbb
pop
negb
add
jns
out
push
xchg
or
decl
incb
adc
adc
and
add
and
push
lret
arpl
cs
mov
add
std
inc
ja
mov
mov
mov
inc
push
and
in
push
pusha
cmpsb
push
and
incl
dec
and
stos
inc
aaa
and
in
inc
jbe
scas
inc
sub
scas
add
es
mov
incl
roll
inc
and
inc
outsl
and
sahf
inc
pop
pusha
flds
filds
or
ret
inc
inc
and
test
movb
add
fistps
in
pusha
enter
int
jno
inc
inc
pusha
push
and
int
andb
pop
and
or
inc
pop
and
mov
clc
and
push
push
and
inc
dec
pusha
ljmp
and
test
jo
jb
mov
xor
sub
filds
and
cli
inc
daa
xchg
inc
mov
add
push
mov
pusha
test
dec
and
inc
sbb
inc
pop
and
mov
pusha
int
mov
push
add
mov
sbb
inc
pop
mov
aaa
sub
push
pusha
out
inc
cmp
add
inc
sub
inc
add
data16
cmp
inc
inc
add
inc
jne
mov
lcall
mov
jle
inc
das
pusha
test
xor
scas
inc
sbb
lods
add
xchg
pop
mov
inc
js
add
in
cmp
push
and
sbb
lret
and
mov
jns
repz
push
into
add
inc
add
jge
loop
scas
fcmovu
sbb
movsb
inc
pop
pusha
scas
popa
sahf
add
inc
jp
in
decl
inc
cld
inc
cmp
movsb
adc
inc
pop
adc
add
adc
cli
push
inc
adc
inc
lods
adc
add
adc
inc
mov
mov
pop
adc
inc
mov
call
inc
call
add
adc
inc
notb
inc
mov
mov
inc
out
push
mov
add
call
inc
adc
add
adc
inc
mov
adc
add
adc
inc
mov
das
cli
adc
add
adc
inc
movsb
push
scas
data16
add
adc
inc
ljmp
call
add
adc
inc
xlat
push
rolb
adc
add
adc
inc
fsts
inc
popf
adc
add
adc
inc
ficoms
fiaddl
adc
add
adc
inc
rcll
adcl
lret
adc
inc
enter
mov
add
adc
mov
push
roll
add
adc
inc
notl
inc
mov
lds
adc
inc
cli
push
lret
inc
jg
aaa
lret
adc
jbe
enter
iret
add
adc
inc
loopne
int
dec
adc
add
adc
inc
pop
addr16
dec
and
xor
inc
je
rolb
pushl
addr16
inc
jae
aad
xor
fildl
and
add
cmp
inc
jge
filds
aas
and
inc
js
faddl
and
inc
addr16
add
and
inc
jmp
movb
les
and
add
sub
inc
insb
and
add
call
icebp
inc
adc
lock
push
testb
cmc
add
push
addr16
inc
push
and
add
pop
and
sbb
and
inc
sbb
cld
add
inc
loopw
incl
and
add
inc
gs
add
and
inc
inc
gs
add
mov
inc
and
inc
incl
inc
push
and
inc
dec
gs
push
dec
and
inc
andb
or
mov
in
dec
and
outsb
inc
mov
push
adc
in
adc
inc
push
and
inc
adc
jmp
sbb
out
inc
sbb
inc
pop
and
inc
pop
gs
inc
and
idivb
roll
rolb
and
xchg
inc
and
inc
xchg
push
daa
and
pushl
push
and
sahf
inc
push
fiaddl
and
push
sub
popf
inc
sub
inc
insl
and
push
mov
ljmp
and
inc
push
and
out
push
idivb
mov
gs
and
push
and
gs
and
push
pop
and
and
enter
iret
push
pop
and
inc
adc
int3
push
pop
and
cmp
mov
inc
inc
push
add
jg
push
push
testb
and
inc
sti
push
ss
or
stc
inc
out
clc
push
or
mov
fbstp
mov
and
incl
xor
ja
out
xor
mov
stc
jmp
inc
inc
and
push
add
scas
inc
aas
gs
jmp
gs
jmp
sbb
jnp
out
push
cmp
gs
inc
jl
mov
xchg
daa
hlt
inc
fwait
bound
inc
fbld
mov
cltd
daa
repz
mov
daa
mov
inc
mov
daa
mov
jg
inc
push
add
daa
mov
inc
mov
daa
cmpsb
pop
ss
incl
daa
stos
pop
fisubs
out
inc
fsubs
inc
out
test
frstor
xchg
inc
andb
les
rolb
incl
inc
ret
daa
aad
test
xchg
inc
test
inc
into
daa
fiaddl
mov
pushf
inc
mov
inc
dec
daa
filds
daa
fwait
inc
mov
inc
enter
mov
xchg
inc
mull
roll
daa
addb
pushl
daa
lds
mov
addl
daa
lret
push
inc
mov
incl
daa
lock
mov
testb
cmc
pop
movsl
daa
mov
movsb
sti
inc
out
daa
cli
pop
stos
daa
mov
inc
test
mov
scas
sahf
inc
scas
std
inc
call
incl
loop
xchg
daa
loope
shlb
movsl
inc
shll
inc
xchg
daa
out
daa
mov
call
in
xchg
daa
jmp
scas
push
bound
pop
add
dec
adc
incl
jbe
mov
xor
lock
adc
testl
decl
mov
add
pop
cli
dec
mov
dec
enter
mov
stc
dec
fisubl
ljmp
or
jmp
jae
lods
dec
xor
lods
or
push
xchg
dec
daa
inc
rorb
push
rorl
or
cli
decl
inc
fisttpl
push
fimull
push
push
fwait
dec
rcr
dec
test
orb
jg
leave
dec
repnz
mov
inc
into
dec
jl
int
xor
mov
inc
cld
dec
push
stos
push
in
andl
add
dec
dec
je
repz
add
dec
pop
add
or
add
dec
pop
add
or
add
dec
sbb
jl
or
add
jg
test
std
or
add
in
pop
loop
pop
mov
push
movsb
dec
loop
dec
repnz
call
cld
jmp
dec
bound
in
aas
add
push
add
or
add
dec
pop
mov
add
or
lock
sbb
dec
pop
add
or
add
dec
pop
decl
lock
dec
inc
add
or
add
dec
xor
mov
dec
inc
fdivr
incl
dec
add
loop
inc
inc
cmpsb
dec
push
add
loope
dec
inc
stos
mov
loop
jbe
add
dec
cmp
dec
js
lods
or
adc
decl
xlat
dec
or
nop
dec
dec
inc
fimull
add
lcall
add
or
fadds
cltd
dec
mov
add
or
add
dec
cmovno
dec
dec
add
or
inc
les
jmp
lret
add
dec
xchg
add
or
inc
int3
dec
clc
add
or
jg
fildll
mov
or
testb
cmc
inc
sti
jg
or
mov
mov
add
or
xchg
add
or
mov
dec
xor
jecxz
xor
cmpsl
push
inc
outsb
or
mov
push
add
dec
cmp
in
jle
mov
jmp
push
add
or
inc
call
or
add
inc
in
mov
sub
incl
or
and
dec
sub
push
mov
mov
push
rorb
das
cli
out
clc
cmp
xchg
dec
sbb
dec
or
or
push
lcall
sbb
or
test
inc
lds
lret
or
mov
dec
decl
inc
iret
dec
hlt
push
out
or
dec
xchg
repnz
and
incl
and
dec
andb
or
and
dec
and
or
and
dec
decl
and
or
and
dec
mov
jecxz
repz
dec
mov
loopne
push
and
dec
mov
in
cmc
and
dec
mov
and
call
mov
adc
cmc
dec
adc
dec
push
sub
dec
adc
sub
dec
lcall
outsl
mov
or
pop
outsl
mov
or
sbb
mov
or
add
in
add
dec
inc
sub
dec
push
outsl
movsl
les
movsb
or
decl
outsl
stos
dec
dec
sub
dec
or
dec
dec
sub
dec
or
sub
decl
xor
dec
je
rorb
aaa
outsl
dec
jae
aad
xor
outsl
decl
sub
or
cmp
dec
jge
fisttps
outsl
fisttpll
sub
or
decl
outsl
ret
sub
or
and
dec
bound
or
and
sub
das
clc
decl
sub
dec
insb
sub
or
sub
repz
mov
out
pop
cmp
into
sub
or
outsl
aaa
aas
cmp
sub
or
into
sub
or
jns
incl
sub
or
inc
outsl
loop
mov
pop
cmp
clc
outsl
out
out
out
inc
sub
sub
or
dec
sub
adc
cmc
dec
and
dec
bound
lock
in
jmp
adc
decl
dec
insb
adc
cli
dec
das
push
mov
mov
dec
sub
mov
push
push
adc
mov
push
push
adc
jmp
push
push
adc
stos
dec
pop
adc
in
dec
pop
push
scas
dec
sbb
jmp
pop
push
lods
dec
sbb
xchg
dec
inc
push
rcrl
push
inc
adc
call
dec
add
xchg
dec
inc
push
fisttpl
adc
pushf
dec
dec
push
fmuls
adc
or
call
fisttpll
adc
xchg
ret
adc
decl
jno
test
push
dec
xor
orb
les
xor
dec
mov
decl
xor
mov
jo
dec
out
int
mov
jo
dec
loop
repnz
cmpsb
xor
movsl
jo
loope
testl
stos
jo
dec
in
xor
mov
scas
jo
xor
mov
dec
xchg
xor
mov
fbld
cld
dec
cmp
push
loope
sub
mov
out
rclb
mov
dec
mov
xor
ljmp
adc
scas
push
add
and
mov
fldcw
testl
int
and
and
ljmp
cld
add
and
inc
sbb
or
push
sbb
out
int
sbb
pop
inc
push
cs
inc
int
jns
add
dec
in
cmp
imul
inc
inc
xor
add
repz
repz
xor
out
fidivs
cmp
aas
jno
jge
idivl
cs
pop
cmp
sahf
push
xchg
dec
xor
sahf
mov
repz
pop
andb
cmpb
cmp
xchg
pusha
ret
aaa
iret
repz
out
jae
pop
xor
repz
jle
xor
repz
repz
repz
enter
mov
cmp
js
cmp
jle
jge
cmp
sahf
cmpsl
mov
cmp
repz
xor
jo,pn
ja
out
fdivp
xor
sahf
out
sahf
stos
ds
jp
arpl
out
lods
daa
shll
out
sahf
out
shll
shlb
out
sahf
xchg
gs
and
imul
jns
push
sub
out
sahf
out
pushf
outsl
fsubrs
sahf
out
sahf
fildll
insb
fst
jns
out
fcoml
jns
out
rcll
sahf
rol
xchg
mov
jns
out
icebp
div
mov
stc
cmp
repz
cli
repnz
mov
repz
cmpsl
mov
je
repz
cmp
push
push
adc
jnp
add
out
jp
sahf
xchg
add
sbb
push
xchg
inc
adc
outsb
push
into
add
into
repz
pushl
jno
push
sub
loope
punpcklwd
fildl
adc
dec
repz
cld
or
and
and
popa
iret
outsl
dec
add
and
outsl
out
outsl
jle
inc
inc
and
sub
jecxz
bound
cli
add
and
sub
insb
roll
or
insb
push
mov
jle
out
das
cs
add
and
stc
out
jnp
mov
add
jmp
sbb
loopne
aaa
incl
ja
repz
inc
and
insl
push
add
out
pop
mov
insl
push
mov
mov
sahf
jg
stc
rolb
and
ret
inc
pop
and
out
inc
cmp
test
mov
or
gs
daa
out
aas
jmp
push
bound
jbe
lahf
jg
stc
pusha
inc
pop
popa
mov
add
push
inc
inc
push
and
es
jg
stc
out
popa
push
addl
inc
push
and
daa
inc
pop
popa
cmpsb
mov
mov
push
es
outsl
xchg
fwait
arpl
or
xchg
inc
jo
rcrl
inc
push
popa
stos
enter
imul
mov
cmp
subl
push
shlb
imul
jg
jp,pn
arpl
cwtl
add
jle
mov
ret
and
shll
mov
popa
push
jge
idiv
jnp
and
xchg
cs
add
cld
repnz
mov
add
mov
push
and
and
pop
popa
pop
mov
cmc
add
mov
jge
lcall
cs
and
and
jg
inc
dec
and
sub
aaa
popa
jnp
fsubrp
loopne
mov
inc
cs
pop
cs
add
and
outsl
inc
inc
and
mov
pusha
lock
inc
inc
inc
and
inc
or
lcall
pop
or
ret
fwait
push
xchg
fstps
cs
pop
dec
icebp
mov
cs
mov
jnp
push
out
push
and
lock
jbe
xor
jle
cs
mov
add
fs
outsb
inc
dec
and
and
inc
sbb
lcall
cwtl
xchg
sub
and
dec
inc
adc
sarl
cmpsl
cmpsb
mov
and
lcall
add
and
leave
outsl
and
sbb
push
pop
xor
testl
pop
sub
mov
out
jns
cmp
sbb
or
mov
lahf
xchg
repz
jbe
adc
mov
imul
mov
dec
ljmp
ret
pop
mov
jns
fidivs
dec
lahf
and
xchg
mov
mov
faddp
repz
or
insl
push
push
mov
dec
je
sahf
sbb
push
and
xor
fisubs
mov
cmp
push
jbe
loop
mov
cmp
sbb
push
clc
push
mov
inc
lret
pop
dec
mov
or
ja
int3
int
pop
jle
pop
mov
sahf
out
sti
mov
cs
pop
ds
shl
ljmp
pop
add
and
xchg
pop
and
das
pop
mov
cs
lret
jns
jnp
dec
ucomiss
cs
pop
orb
shr
out
xchg
mov
sbb
fidivs
lret
cs
add
and
adc
sahf
jg
inc
dec
and
mov
pop
icebp
push
sahf
rcrb
sub
mov
cs
shrb
push
mov
cmp
call
pop
mov
insl
out
loopne
fimuls
adc
dec
push
cs
cmp
and
sbb
pop
push
in
aas
cmp
lcall
stos
ret
jnp
call
add
mov
cs
out
cs
push
sub
jae,pt
adc
into
jp
cmp
sub
or
sbb
cmp
jnp
pop
adc
fisubrs
cmp
inc
inc
and
sbb
inc
push
pop
outsb
mov
ljmp
push
mov
mov
lock
out
ficomps
iret
aas
movsl
aad
mov
jnp
inc
and
and
ret
int
daa
cs
add
and
mov
imul
mov
pop
out
imul
outsb
repnz
jns
jg
cmp
and
shll
add
cmp
dec
push
cs
pop
cmp
jle
mov
jecxz
jle
mov
dec
jnp
cmc
add
lret
sbb
scas
loop
stc
out
xor
adc
popa
addr16
add
and
sahf
sahf
jg
mov
and
mov
popa
pop
jl
pop
pop
xor
adc
lret
pop
push
cmc
imul
pop
outsb
sbb
jnp
sub
add
cs
scas
out
loope
fisubrs
outsb
imulb
dec
lds
pop
scas
fwait
cs
push
addr16
fdivp
push
ficoms
cs
dec
sub
mov
mov
dec
sub
jmp
lahf
out
mov
iret
sbb
fistps
out
cmp
cs
pop
mov
popa
iret
repz
shll
jl
jne
dec
jnp
popl
das
pop
rclb
outsb
pusha
push
inc
add
jbe
and
popa
and
pop
adc
push
mov
mov
jge
add
jo
and
jl
pop
out
cmp
loopne
jge
push
popa
popa
inc
aaa
mov
push
xor
cmp
jg
add
mov
add
and
ret
and
cld
popa
push
sub
inc
push
into
jnp
mov
cs
dec
dec
imul
cmp
jo
sub
mov
jb
out
clc
pop
mov
ss
and
inc
sub
aas
rcll
mov
add
es
mov
ds
lret
jo
clc
call
inc
inc
mov
je
jp
cmp
pusha
dec
lcall
dec
pop
xor
push
data16
and
jg
and
ja
jne
inc
cmp
jge
push
and
push
push
jb
and
push
or
aaa
push
push
jb
mov
pop
pop
xor
adc
adc
insl
jle
je
imulb
push
gs
cmp
add
sub
mov
outsl
lock
pop
adc
mov
xor
jo
in
xorb
ljmp
dec
xor
ja
aaa
fidivrl
insb
jbe
imul
out
ja
jg
pop
inc
js
aaa
dec
pop
outsb
mov
arpl
sub
das
xchg
inc
push
and
inc
pop
push
push
jle
aaa
push
jp
jg
adc
cs
xor
gs
decl
decl
xor
cmp
imul
and
jbe
inc
xor
jb
jg
mov
push
inc
gs
xor
and
sarl
sub
and
cs
and
adc
jg
sbb
cmpsb
mull
adc
push
xchg
es
add
hlt
mov
insb
mov
pop
inc
xchg
or
inc
jg
stos
fisubrs
pop
push
jle
ja
push
and
jle
pushl
and
push
adc
and
xor
push
in
adcb
cmpsl
jne
inc
popf
clc
push
cld
scas
add
jno
popa
add
jp
ja
andb
fistpll
stos
ss
sbb
movb
push
inc
ja
mov
jbe
cmp
scas
or
jl
cmpsl
cmp
mov
pop
push
inc
je
je
push
push
jg
mov
lahf
sub
outsb
or
and
jmp
sub
insb
push
mov
and
cmp
int
xchg
or
push
ds
cmp
ljmp
pop
cmpsb
and
inc
popa
out
and
sub
jbe
and
inc
jns
aaa
push
call
and
jp
aaa
xor
jge
push
or
cs
adc
inc
jg
lock
xor
pusha
and
push
pmuludq
xorl
dec
cmp
arpl
cmp
mov
sub
push
inc
xchg
aaa
jl
push
adc
dec
jge
jbe
and
movlps
and
dec
addr16
or
push
mov
sbb
sti
loope
cmp
jl
jp
xor
cs
and
bound
ucomiss
inc
jp
ja
jge,pt
jbe
ss
cli
scas
imul
or
inc
dec
inc
jo
inc
loopne
inc
push
inc
sbb
xor
aaa
jge
or
xchg
sbb
rclb
jo
clc
push
add
ffreep
mov
pushf
xchg
cmp
mov
xchg
push
jbe
aad
push
loope
jg
or
aam
cmp
fnop
cmp
pop
dec
nop
call
pop
xchg
push
xchg
inc
xchg
mov
dec
ret
lock
cld
pop
xlat
sbb
fs
jg
aas
xchg
adc
inc
mov
ja
into
loop
pop
inc
test
jge
fildll
add
jmp
call
pop
xchg
int3
pop
inc
into
cmpsl
int3
das
pop
icebp
lret
jg
and
popa
dec
xchg
lds
mov
jmp
and
daa
jl
sbb
bound
popl
jg
or
and
push
or
sti
paddd
mov
and
ss
xor
lods
lods
into
fmull
insb
mov
pop
scas
cwtl
int3
xchg
rcrl
and
out
pop
mulps
outsl
cli
xor
cwtl
aad
enter
into
cmpsl
sub
in
mov
and
into
xchg
pop
adc
inc
pusha
negb
jl
or
das
inc
fbstp
inc
push
out
gs
fwait
mov
lods
cwtl
mov
daa
dec
fistpl
insl
inc
ret
decl
pusha
in
adc
adc
pop
dec
xor
aaa
fwait
jmp
inc
push
inc
scas
cmpsl
enter
sahf
push
fs
dec
popf
pop
xchg
jns
fucomp
lcall
lahf
cwtl
add
sbb
push
push
pop
pop
std
aas
inc
addb
adc
aad
jmp
stos
cmp
jg
lcall
lods
jae
sarb
xchg
daa
pop
dec
shll
or
push
insb
inc
iret
jne
and
scas
and
leave
ljmp
sbb
int3
mov
outsl
call
rcr
fldl
pop
or
cwtl
lods
xchg
mov
out
insb
push
xor
or
das
cli
mov
incl
call
mov
pop
mov
xchg
xor
mov
lea
or
lods
dec
lods
sub
pop
das
decl
les
jnp
lods
in
aad
out
jmp
mov
sahf
jmp
out
mov
inc
stc
mov
mov
mov
xchg
divl
xor
add
xchg
cmpsl
decl
out
jno
push
int3
scas
loop
xchg
mov
jmp
aas
sbb
scas
jbe
or
int3
mov
scas
mov
push
stc
or
inc
or
das
cmc
adc
popw
and
xchg
or
push
jg
mull
adc
mov
daa
adc
lods
and
cmpsb
or
pop
add
cwtl
aas
dec
cwtl
nop
xchg
adc
cmc
sbbb
scas
and
mov
cmpsb
mov
fisubs
bound
pop
cmp
inc
jo
jle
dec
arpl
cmp
jnp
mov
jbe
xlat
push
dec
cmp
pusha
add
mov
xor
popa
inc
pop
or
imul
mov
jbe
out
xor
std
call
sub
inc
jl
jle
xor
jg
jo
addr16
stos
ret
sub
add
imul
ja
jg
sub
ss
rep
fstpl
jo
jnp
xor
insb
sahf
int
ja,pn
gs
and
jb
aaa
lcall
data16
push
dec
outsl
popa
jb
outsb
jb
push
and
sbb
aas
sub
popa
sub
scas
push
arpl
lcall
or
sub
sbb
push
inc
ja
adc
aaa
pop
inc
dec
jge
push
dec
cmp
push
mov
inc
jno
ja
xor
jnp
push
cmp
outsl
enter
fnstsw
ja
jo
jecxz
aaa
and
jle
xor
add
data16
popa
data16
cmp
lcall
es
jge
das
inc
pop
mov
cmp
inc
push
mov
push
inc
cmp
pop
pop
jne
mov
cmp
inc
ds
out
jb,pn
aas
mov
push
add
jge
adc
mov
pop
pop
xor
xorb
mulb
popa
daa
inc
cs
add
jbe
pop
jae
sbb
xor
jbe
das
insl
jge
push
cli
or
xor
arpl
dec
xlat
and
lds
xlat
jbe
sub
js
shr
jbe
jbe
and
and
xchg
repz
ss
push
fs
je
push
ds
jo
and
dec
push
rcr
mov
dec
data16
push
xor
cmp
xchg
push
adc
insl
jbe
and
jg
jo
pop
pop
and
mov
shrl
out
xor
outsb
jle
push
or
jl
cmp
xor
xor
push
push
or
jbe
imul
xor
es
push
ss
add
sub
xor
scas
mov
fists
xor
lock
sbb
pop
inc
jbe
xor
std
insb
xor
adc
push
addr16
addr16
push
aam
push
je
aam
push
orl
out
jo
cld
lcall
xchg
dec
cmp
jb
daa
imul
arpl
push
jno
xor
pushl
pop
xor
insl
adc
dec
and
jae
outsb
ja
and
xor
inc
arpl
and
adc
xchg
je
cmp
or
test
inc
sub
aaa
jg
out
inc
jg
inc
sbb
cmpb
mov
jb
inc
xor
je
adc
and
push
mov
jle
push
test
cmp
es
aas
pop
mov
push
insl
cs
data16
mov
inc
xor
mov
stc
decl
and
inc
popa
popa
jp
and
xchg
sub
mov
repz
scas
pop
push
jle
cmpsb
inc
cmp
neg
add
sbb
popa
cmp
sub
aad
mov
imul
scas
mov
lcall
or
sub
push
push
pop
addr16
loop
out
push
gs
push
dec
cmp
bound
pusha
dec
adc
cmp
jge
push
inc
pop
pusha
xor
adc
mov
inc
xor
es
popa
jae
push
and
dec
data16
test
pop
out
rcrl
dec
daa
jne
aas
jne
fwait
hlt
out
jg
mov
push
and
xchg
jns
popa
xchg
sbb
xchg
lcall
and
inc
push
adc
adc
push
inc
scas
sub
call
arpl
dec
pop
add
or
cs
dec
sbb
loopne
arpl
popf
cmp
pusha
adc
inc
push
popa
pusha
dec
xor
xchg
dec
arpl
sub
shll
or
mov
out
push
mov
jl
inc
or
jle
xchg
scas
dec
aaa
add
inc
pop
scas
dec
push
push
jp
js
into
add
push
out
incb
jmp
mov
inc
inc
push
add
push
inc
insl
lds
push
testb
mov
adc
jl
adc
int
push
and
inc
pop
popa
pop
jbe
inc
adc
inc
pop
dec
and
sub
je
js
clc
dec
and
pop
push
aaa
sub
pop
je
out
push
push
jbe
pop
outsl
enter
and
sub
insl
adc
dec
sbb
push
pop
xor
in
push
xchg
pop
xchg
pop
xor
rcll
gs
dec
inc
and
jb
ja
mov
out
and
and
jne
sbb
cs
ja
sti
data16
or
jb
and
jb
jbe
and
data16
ret
pop
es
cmp
jbe
inc
fcomp
jne
xor
imul
pop
add
and
das
aaa
push
jb
jo
aas
xor
test
and
push
cmp
loop
pop
sub
add
outsl
out
mov
sub
jp
ja
push
sbb
and
add
bound
popa
pop
push
push
into
mov
jle
out
fwait
leave
aaa
leave
xor
dec
or
jns
out
inc
pop
sbb
cmp
repz
mov
mov
sti
divl
aas
inc
ss
mov
pusha
add
xor
call
incl
and
xor
push
insb
pusha
and
adc
scas
insl
gs
jb
and
inc
addr16
dec
add
pop
add
mov
jbe
insb
add
jo
inc
ds
mov
imul
sub
pop
pop
dec
push
add
es
ds
jb
xor
std
mov
pop
xor
das
push
jbe
pop
gs
and
into
out
adc
dec
xor
push
jge
and
insb
mov
xor
push
add
xor
sbb
inc
xor
jnp
cmp
jo
dec
imul
push
add
push
addr16
cmp
mov
jo
push
jbe
pusha
xchg
mov
clc
cmpsb
xor
jo
cmp
js
fisubs
cwtl
add
dec
dec
mov
ss
jnp
push
push
and
gs
dec
xchg
pop
xchg
iret
sub
dec
jl
jbe
pop
out
push
mov
xor
jbe
inc
or
mov
sub
pop
inc
pop
movb
push
lret
pop
aas
jb
je
push
pop
push
mov
aaa
je
outsl
insb
jl
jle
cmc
or
sbb
pop
lahf
jg
xor
jp
sbb
sbb
dec
and
xchg
adc
push
dec
addr16
das
pop
es
cmpsl
sbb
pop
sub
mov
xor
push
jle
push
mov
cmp
push
ljmp
ja
add
and
and
data16
dec
jg
and
inc
inc
push
add
xor
xor
sub
std
sbb
mov
cmp
or
das
fs
xor
arpl
test
xor
sbb
nop
cmp
popa
xor
lods
cmc
mov
jbe
dec
add
cs
pop
pop
stos
push
jg
and
dec
pop
outsl
xor
xor
cmp
inc
and
dec
sbb
mov
xor
jno
jne
xor
inc
add
xor
push
xor
sbb
or
jp
inc
sbb
pop
and
loope
inc
jp
jge
outsb
js
add
pusha
roll
js
jg
fildll
jle
jl
cmp
outsl
js
adc
inc
ss
pop
xor
les
pop
test
dec
push
rcll
sahf
and
pusha
data16
fidivs
push
jo
push
xor
inc
jp
jb
out
sub
sbb
fbld
mov
cmp
lahf
adc
and
push
dec
mov
xlat
lea
les
cs
push
movb
fists
ja
data16
sub
test
pusha
pop
scas
inc
outsb
popa
push
addb
insb
mov
sub
sahf
xchg
adc
sahf
jl
mov
mov
inc
cmpsb
jne
lods
xlat
mov
xchg
jb
xor
add
xor
and
jge
push
popa
pop
jge
add
fwait
icebp
mov
and
cmp
xchg
jp
ds
inc
mov
stos
inc
scas
jg
mov
out
shrb
inc
jle
das
movsl
adc
inc
sahf
pusha
xchg
sub
xor
rcr
popa
outsl
daa
out
pop
test
data16
dec
cmp
outsl
jge
aas
and
jp
outsb
add
add
adc
sub
push
idivl
mov
pop
into
push
add
jbe
idivl
push
mov
jp
push
adc
adc
pop
popa
push
cs
or
rol
jle
cmp
jbe
inc
cmp
push
jle,pt
outsb
addr16
inc
push
sbb
adc
jo
xlat
push
je
adc
jle
mov
mov
push
jo
out
sub
lods
pop
ja
dec
out
sbb
out
popa
inc
cmp
decl
lods
sbb
mov
fcompl
inc
ss
js
lock
xor
aaa
dec
jp
pushf
push
fildll
out
sbb
push
inc
loope
xchg
inc
ds
add
jp
aas
jb
sahf
jbe
cs
push
jbe
push
imull
inc
ja
out
lock
mov
jecxz
ss
adc
movsb
cli
js
pop
jp
jl
movl
mul
loope
in
and
push
push
push
push
cltd
icebp
jne
fbld
mov
sbb
mov
incl
cmp
icebp
push
push
aaa
jp
aas
inc
addw
xchg
or
dec
jne
dec
xchg
sbb
xchg
add
push
dec
and
stos
push
dec
pop
jg
inc
popa
mov
adc
jg
inc
daa
pusha
ss
xor
popa
add
paddb
jb
sbb
adc
das
gs
clc
push
js
push
adc
inc
push
push
xor
mov
jbe
inc
aaa
outsb
clc
and
fnsave
inc
incl
cmp
cwtl
sbb
lcall
and
sbb
sub
out
pop
push
es
adc
dec
jb
xor
mov
rcrb
push
cmp
divb
dec
xchg
arpl
push
add
syscall
xchg
scas
pop
test
mov
cs
test
ds
scas
ja
scas
mov
dec
and
ja
int
sub
aas
push
push
xor
push
pop
hlt
mov
cwtl
inc
pop
sbb
inc
inc
jg
inc
popa
pop
inc
add
cs
outsl
lcall
rorl
push
popa
and
inc
es
inc
loop,pn
pop
push
call
xor
mov
int
sbb
lods
dec
outsb
movsb
add
adc
loope
lcall
shr
pop
sbbb
gs
jne
pop
inc
and
pop
push
dec
movsl
xchg
fbld
pushf
inc
sbb
das
sub
jbe
pop
and
ja
incl
mov
sbb
push
adc
sbb
pop
fisubl
sub
xchg
inc
pop
mov
inc
cmpsl
sub
outsb
xchg
fcom
notb
push
decl
enter
in
je
xor
cmpsb
push
mov
test
inc
incl
adc
jle
xor
test
test
ljmp
pushw
cmp
sahf
in
mov
les
adcl
lods
stc
fstl
add
fcmovnb
dec
sahf
cld
in
mov
inc
int3
lret
mov
xor
test
push
call
push
out
addl
push
arpl
inc
test
pushl
push
and
pop
jns
cmp
sahf
and
adc
adc
adc
adc
js
push
fadds
dec
nop
popa
sbb
aam
stos
inc
ss
adc
mov
push
dec
push
xchg
insl
adc
inc
push
sub
add
dec
cwtl
inc
shll
pushl
sahf
mov
lahf
mov
fldl
scas
incl
pushl
adc
pop
sbb
sahf
push
and
faddl
xchg
gs
inc
in
push
mov
lret
lcall
sub
rcrb
inc
popa
sub
lods
sub
pop
mov
mov
leave
sub
sbb
adc
clc
or
lret
mov
and
sub
data16
gs
mov
jg
and
push
lcall
push
clc
pop
fistpll
cmp
fmulp
adc
cmpsb
rolb
mov
mov
clc
and
pusha
cli
cli
lea
ss
mov
add
sbb
mov
jmp
int3
pop
mov
rolb
add
iret
mov
decl
xor
call
scas
add
lcall
data16
xchg
das
sahf
sub
test
cld
xor
insb
sbb
dec
ficoms
das
mov
xchg
imul
mov
jb
adc
add
pop
rorb
rcr
fbstp
nopl
jno
enter
in
lods
in
testb
aad
pop
xchg
add
test
sub
inc
adc
jge
rcrb
jle
xlat
test
outsb
sbb
push
mov
sahf
adc
fldt
fistpll
adc
popa
in
and
sahf
add
sbb
pop
mov
in
in
adc
xchg
mov
jg
out
in
cli
mov
push
ror
in
sahf
addr16
pop
repz
pop
fwait
jle
dec
out
sbb
fldl
fcmovbe
sub
lcall
in
test
inc
add
es
jo
int3
jbe
push
pop
push
lcall
loop
push
mov
and
data16
gs
xchg
mov
mov
cmp
push
cld
or
sub
shrb
addr16
mov
decl
es
fldt
adc
pop
adc
lock
ja
inc
xlat
je
dec
ljmp
jb
xchg
in
push
in
adc
lods
or
or
dec
test
inc
incl
adc
mov
in
inc
mov
or
mov
push
sub
shrl
mov
or
cli
repz
std
xchg
mov
popa
inc
imul
fildl
cmpsl
xor
push
mov
add
outsb
mov
ds
inc
mov
outsl
xor
je
test
fsubrs
dec
cmpsw
jle
fnstcw
roll
scas
or
in
jbe
int3
rorl
pop
mov
pop
int3
mov
xor
enter
pop
jg
int3
cmp
mov
pop
mov
cmpsb
data16
popa
mov
outsw
mov
aam
and
mov
stos
lcall
in
jne
jb
in
faddp
scas
and
push
mov
sbb
in
sbbl
testb
lock
mov
add
in
pop
push
cmp
int
inc
data16
jle
xchg
adc
adc
or
cli
gs
adc
out
inc
dec
dec
data16
movsl
loop
and
sti
sbb
xchg
daa
jbe
test
enter
in
xchg
xchg
sti
and
inc
push
xchg
pop
gs
xchg
sub
adc
arpl
adc
les
mov
rcrl
movsl
dec
popf
push
adc
cld
ljmp
xor
jne
rorl
push
inc
outsl
rcl
ror
pop
popf
pop
mov
jmp
dec
frstor
insl
shlb
mov
and
jl
repz
shlb
dec
push
sti
mov
push
add
outsb
rcrl
push
jg
pop
ja
setbe
push
pop
sub
sbb
iret
adc
into
mov
aas
mov
sti
stos
mov
ret
add
loope
fwait
xchg
out
cwtl
out
into
push
lea
mov
outsl
and
pop
je
xlat
out
mov
js
loop
adc
pop
pop
dec
sarl
adc
test
sbb
dec
jns
dec
cmp
push
push
sarb
cmp
sahf
inc
pop
je
shlb
insl
in
idivb
movq
inc
dec
pop
jmp
sub
lock
rcll
push
pop
pop
mov
popf
inc
notb
lea
mov
into
aad
push
mov
out
sahf
sbb
pop
out
lea
mov
call
mov
fbstp
mov
pop
jbe
scas
push
shrb
fstpt
scas
fxch
sbb
push
cwtl
and
jle
push
out
shll
inc
popa
mov
xor
int3
pop
in
xor
sub
jecxz
ss
nop
mov
adc
jecxz
push
ss
out
hlt
rclb
dec
mov
sub
jbe,pt
adc
outsb
or
push
gs
xchg
add
jno
lock
mov
cmp
dec
pop
cwtl
inc
insl
cmpsl
rolb
nop
pop
mov
imul
jle
xchg
pop
std
jbe
sar
xchg
xchg
adc
scas
pop
jle
pop
mov
jecxz
mov
mov
aam
and
call
push
mov
push
mov
test
loop
mov
sub
mov
xchg
pop
cmpsl
mov
nop
mov
pop
rcrl
dec
movsb
in
test
dec
insl
sub
dec
push
lea
scas
es
xchg
xchg
daa
int3
push
push
mov
stos
shrb
in
mov
fistps
in
and
push
ljmp
sub
call
jp
jbe
ja
scas
call
pop
mov
outsb
aad
inc
push
inc
cmc
push
and
jle
pop
pop
sub
out
shld
addr16
out
dec
fwait
adc
aad
aas
push
decl
mov
adc
shlb
pop
inc
and
jns
int
cld
pop
bound
dec
aad
jecxz
gs
in
and
sbb
rorb
push
cmp
out
cmp
fucomi
pop
jnp
shl
loop
scas
mov
or
aas
inc
ja
addl
data16
fs
loope
scas
adc
into
adc
and
nop
fsubrl
mov
lods
out
push
mov
lcall
pop
std
cwtl
or
push
inc
xor
inc
fidivl
mov
xchg
sbb
add
cwtl
adc
lods
sbb
adc
add
sub
mov
adc
adc
adc
mov
cwtl
or
mov
int
pop
iret
test
fwait
sbb
pop
jl
inc
lcall
das
add
nop
test
mov
inc
fstl
push
int3
xor
jno
push
push
cwtl
mov
push
movl
sbbl
loopne
sti
data16
jmp
in
and
out
jo
ret
sbb
bound
fbld
call
lahf
adc
sbb
mov
int3
xorb
mov
fildl
data16
jle
jecxz
mov
cld
scas
scas
in
pusha
dec
cmpsb
jecxz
dec
sub
mull
arpl
into
and
daa
jg
add
add
fistl
inc
cmpsl
mov
mov
outsb
sarb
and
add
fs
jae
int3
imul
inc
cmpsb
sti
jno
add
into
cmpsb
fnstsw
push
sti
inc
fs
mov
lcall
push
aad
mov
sbb
testl
inc
call
fsubr
xchg
movsb
outsb
notl
xchg
imul
sub
pushf
inc
sbb
sub
sti
jle
shll
ret
test
clc
inc
jno
in
nop
enter
pushl
outsb
insl
in
xor
push
adc
test
push
mov
or
push
xor
mov
rcl
push
sahf
aas
push
repnz
push
popa
clc
stos
frstor
mov
xor
fwait
pop
push
xchg
inc
aad
jmp
and
xor
xchg
cltd
add
push
cmc
jns
fildl
out
push
loop
hlt
push
sub
cmpsb
xchg
shrb
xchg
ret
call
inc
int3
jle
dec
dec
add
call
incb
inc
and
rclb
test
fucomip
cmp
dec
mov
fisttpll
jne
push
xchg
lods
mov
adc
pop
call
cld
xor
enter
fs
lret
sti
daa
jns
in
xor
add
pop
ret
fldl
xor
call
ret
lock
rol
inc
dec
ret
dec
xchg
sbb
icebp
loope
shrl
cs
sete
cmpsb
push
in
call
fmuls
incl
add
jmp
xchg
in
dec
push
loopne
jg
lahf
pop
jle
int
mov
push
sahf
mov
or
sub
inc
pop
clc
pop
fstpl
mov
and
inc
sub
adc
and
xchg
data16
ss
inc
or
out
std
aas
mov
inc
call
sahf
xchg
sbb
pop
loope
push
inc
adc
mov
mov
sub
insl
fbstp
mov
sahf
inc
ret
je
inc
cld
pusha
push
push
jl
into
hlt
pop
repz
test
fwait
lock
dec
rorb
push
push
mov
call
dec
push
enter
aad
adc
nop
lahf
cmp
jbe
jns
add
sti
inc
in
lahf
adc
pop
icebp
pop
fnstenv
lcall
nop
mov
push
pop
es
jmp
jg
jmp
test
push
das
dec
ss
lods
add
mov
adc
xchg
sti
ficoml
push
into
cmp
out
call
mov
aad
adc
adc
std
mov
leave
shll
push
and
rorl
call
aas
dec
dec
add
scas
cmpsb
in
push
outsb
inc
int3
fadds
mov
mov
int3
cmp
push
into
pop
cmc
and
pop
jns
push
clc
gs
lods
and
or
sbb
shrl
lds
adc
lret
push
rclb
mov
adc
ret
in
test
mov
adc
decl
inc
cld
jb
lock
add
in
mov
int3
mov
incl
xchg
test
cmp
xor
aaa
sti
push
push
movsb
sub
gs
add
fcompl
jp
ret
pushl
decl
mov
shlb
test
jne
jecxz
lea
repz
std
mov
data16
popa
cmpsl
jmp
mov
sub
mov
xchg
ss
je
dec
and
not
cmpsl
sbb
push
xchg
mov
jno
call
pop
push
daa
push
inc
ja
dec
sar
mov
push
lods
push
add
out
pop
jns
inc
mov
and
push
iret
or
and
jae
adc
or
incl
push
push
rcrl
in
xchg
adc
ds
jl,pn
ljmp
jne
mov
nop
pop
sti
sub
push
loopne
dec
pop
je
scas
sub
jbe
orl
out
loop
scas
dec
aad
pop
xchg
pop
rcrl
or
lcall
test
xchg
in
aam
jmp
sahf
push
loope
fs
call
inc
jbe
gs
jne
shrl
repnz
mov
mov
int3
cltd
das
into
xor
inc
mov
jnp
jg
sub
gs
in
movsl
mov
scas
data16
pop
lea
and
push
inc
jb
sti
je
jg
jl
jecxz
test
je
cmpsl
mov
xor
ljmp
loope
scas
fs
lods
lods
jl
fildl
aaa
les
into
xchg
scas
fucomp
aas
orps
sbb
je
sbbb
ffreep
pop
jge
inc
push
xor
sub
fucomp
sti
std
cmp
mov
sbb
push
adc
or
inc
or
mov
sahf
sti
dec
push
into
jmp
call
push
adc
mov
push
mov
fsubrp
loopne
sti
cmp
jnp
xchg
jg
mov
cmp
pop
cli
neg
xlat
test
sahf
jnp
sub
mov
or
adc
fs
sbbb
mov
lods
loopne
insl
incl
cmp
test
sahf
and
push
fisttpll
lcall
jb
inc
lea
dec
lods
inc
lahf
push
xchg
jecxz
xchg
shlb
jle
mov
insb
xchg
adc
out
loope
cs
jl
adc
or
push
mov
jge
cmc
pop
jecxz
rcll
cmpsb
sub
sti
and
adc
jle
push
lods
ss
pop
sub
inc
fbstp
aaa
adc
sub
adc
or
sbb
pusha
add
sub
push
imul
mov
push
test
adc
fisubrl
jl
push
push
and
jns
out
add
and
ud0
mov
cs
push
cmp
movswl
ss
ljmp
pop
or
lcall
aaa
push
insb
xor
adc
pop
jmp
dec
push
das
adc
in
push
ljmp
push
xchg
mov
inc
lods
ljmp
aaa
loopne
xlat
pop
push
pop
call
inc
mov
outsl
negb
addr16
dec
fcmovnb
pop
cmpsl
test
xchg
mov
scas
and
and
pop
xchg
jge
xchg
data16
mov
mov
sti
jle
scas
imul
scas
push
loop
testb
pop
mov
xlat
loop
jno
cmp
mov
es
jbe
rcrl
aaa
and
mov
mov
out
sahf
incl
mov
ljmp
in
pop
mov
add
out
xchg
cld
xchg
adc
mov
xor
sar
aad
mov
or
ss
incl
jl
popa
mov
in
insl
jne
shrl
adc
and
ds
into
cld
ret
or
sahf
je
sahf
lcall
ret
and
add
xchg
xor
iret
lods
xchg
call
xchg
push
xor
adc
filds
sbb
xor
mov
fwait
sarl
call
roll
inc
jmp
jae
sub
push
stc
das
adc
cmp
xor
imul
adcl
sahf
enter
push
inc
sahf
ds
mov
xor
ds
mov
mov
adc
jg
mov
xor
push
jns
inc
push
out
mov
cld
inc
sub
sahf
xor
xchg
ss
pop
rcrl
decl
aaa
add
pop
fidivrs
outsb
pop
jecxz
sarl
call
into
jbe
pop
fists
jl
jmp
inc
lods
or
aas
cmp
dec
sbb
data16
sub
dec
sbb
cwtl
cmp
in
xor
test
xchg
inc
push
jle
and
testl
push
jbe
push
rcpps
push
ficomps
dec
into
push
mov
xchg
into
pop
sub
sti
daa
fiadds
sub
test
jge
or
push
sub
bound
adc
pop
jne
daa
mov
mov
inc
jbe
and
sbb
fwait
push
sahf
mov
or
mov
stos
push
mov
shlb
sub
push
jnp
push
push
or
push
cmp
int3
imul
jle
popa
mov
xchg
push
enter
mov
ret
push
and
or
push
sub
enter
dec
jmp
push
and
lods
data16
sbb
cmovle
icebp
pop
jno
dec
addr16
inc
push
mov
shlb
aaa
cld
push
pop
xchg
xor
push
ffreep
dec
inc
jecxz
test
sbb
sahf
ds
loopne
push
mov
mov
push
jle
push
pop
push
fists
inc
js,pn
dec
xchg
pop
scas
adc
push
and
mov
in
inc
mov
or
push
jle
xchg
into
adc
into
fbld
in
test
filds
mov
ss
fldl
pop
xchg
sub
push
je
cwtl
bound
das
shll
ljmp
inc
sbb
push
cmpsb
dec
movsl
adc
sti
insb
inc
loopne
xchg
sbb
test
push
push
adc
paddsw
inc
mov
popa
mov
mov
test
js
and
push
cmp
jns
jns
test
fbstp
aas
aaa
xlat
loop
mov
sbb
jg
add
scas
pop
mov
and
push
dec
sar
jg
pop
popa
inc
dec
ret
fsubrs
loopne
xor
clc
idiv
jg
mov
or
jns
push
or
mov
sbb
add
push
pop
test
inc
dec
adc
jbe
iret
adc
push
xchg
aam
incl
incl
data16
aam
out
and
and
clc
fldl
dec
mov
andb
push
inc
jne
pop
xchg
scas
inc
cld
adc
ror
pop
xor
jne
xor
and
into
shrb
clc
mov
mov
xor
push
add
inc
scas
jmp
mov
push
aad
jmp
lock
aaa
fistpll
dec
pop
cli
ficomps
jbe
push
lcall
push
adc
add
inc
push
je
jne
incl
jle
negb
inc
pop
adc
mov
pop
push
lcall
lock
cmp
fisubrs
push
sti
loope
and
xor
int3
idivl
ds
adc
jbe
aad
in
test
mov
xchg
push
xchg
enter
cs
sti
xchg
fadds
das
ja
jno
push
jns
or
xchg
out
mov
mov
jg
cwtl
inc
dec
fisttpl
dec
sti
outsl
sbb
pop
push
fnstsw
or
daa
mov
lret
jp
add
lahf
out
rcr
out
shrb
push
jecxz
sub
mov
ljmp
adc
lods
add
cmp
inc
inc
frstor
decl
shrb
lcall
push
test
fwait
push
lods
mov
push
pop
in
roll
jp
push
jns
push
xor
std
scas
ljmp
cmp
and
xchg
cwtl
mov
sbb
jmp
inc
push
jns
mov
incl
mov
sbb
adc
aaa
dec
push
scas
aam
mov
insl
decb
cs
scas
xchg
mov
pop
test
popw
push
sti
or
mov
adc
enter
icebp
aad
jmp
sbb
mov
jae
jne
aaa
cs
outsb
xchg
cmpsb
setne
mov
xchg
shlb
xor
sahf
lds
mov
sbb
adc
and
sub
movsl
lahf
jo
jle
enter
adc
insl
and
pop
je
inc
ja
aad
jns
jb
adc
adc
out
jmp
popa
pop
and
sbb
outsl
fdivl
sahf
mov
jno
xchg
and
scas
out
test
pop
xchg
loop
out
mov
inc
sti
mov
popf
icebp
mov
xor
hlt
sub
mov
jle
xchg
pop
sub
adc
icebp
in
seta
ficoms
test
jbe
and
push
out
add
cmpsb
mov
cmpsl
test
dec
je
push
repnz
out
lahf
cmc
imul
es
cmp
mov
jnp
push
mov
fwait
or
sub
cmp
cld
and
cs
push
ljmp
sub
test
add
movsl
scas
imul
aas
mov
movsb
rcl
int3
inc
out
loope
fdivp
fwait
out
push
cmp
addr16
enter
add
mov
sbb
push
lods
dec
inc
sahf
mov
add
dec
mov
out
push
fildll
in
into
idivb
mov
not
dec
push
divl
mov
mov
addr16
xchg
pop
or
cmpsb
jae,pn
adc
popa
loop
shlb
mov
push
sahf
and
dec
addl
jmp
push
mov
push
add
dec
pop
rolb
in
xchg
dec
call
push
test
sub
shrl
xor
fs
pushl
push
sahf
ss
mov
inc
push
jb
jne
push
ja
cld
mov
adc
adc
push
push
ljmp
mov
mov
or
inc
mov
out
cmpsb
testb
push
in
xchg
push
pop
pop
and
clc
stos
push
stos
xor
mov
sub
fadd
pop
out
inc
scas
pop
adc
lods
jl
add
je
xor
pop
jle
scas
ds
mov
or
jmp
add
mov
cwtl
xor
xor
mov
push
pop
insl
adc
daa
push
and
addl
jle
adc
into
sbb
int3
jg
clc
ss
fwait
sbb
pop
jmp
add
mov
decl
mov
adc
int3
jb
adc
mov
jns
jo
mov
test
js
pop
xchg
add
pop
push
call
rclb
data16
push
fisttpl
icebp
int
push
dec
pop
shll
sahf
in
xchg
addr16
pop
jb
adc
fstl
inc
out
jmp
sbb
bound
pop
jns
int3
mov
mov
xor
sub
lock
popl
pop
dec
out
inc
data16
xchg
jno
push
in
and
into
push
addr16
jg
mov
lea
pop
push
cwtl
sub
inc
inc
xor
out
es
scas
push
xor
push
in
push
pop
cmpsb
push
lcall
scas
xor
add
adc
iret
dec
jne
sti
push
pop
xor
jmp
ret
jne
jns
inc
jno
test
jmp
pop
push
cwtl
xor
mov
or
jo
mov
inc
and
pop
lods
sub
in
clc
gs
xorb
or
dec
cld
jns
cltd
jp
ret
pop
call
scas
mov
push
and
ljmp
shrl
xor
or
mov
cld
pusha
in
iret
out
data16
jb
jne
jecxz
sarl
push
popf
cmpsb
push
adc
rcrb
std
stos
aas
mov
adc
sarb
cwtl
cs
push
pop
js
loopne
xor
jle
movlhps
mov
mov
jg
icebp
xchg
jle
mulb
test
push
cmp
inc
inc
ljmp
and
test
jle
xchg
mov
jg
cmpsb
push
push
jb
or
xor
dec
mov
clc
fildl
lret
xor
inc
add
sbb
lret
lahf
cmpsb
xor
or
sbb
lods
int3
sub
jmp
cwtl
daa
pop
lods
sbb
xchg
pop
std
add
sbb
inc
call
and
sub
sbb
enter
jmp
jb
sbb
add
dec
lahf
mov
jg
addr16
mov
cmp
in
jo
sub
cmc
add
ss
mov
jne
lahf
shr
pop
xchg
pop
int3
jp
lret
in
push
xchg
push
iret
adc
dec
mov
test
xor
dec
addr16
sti
add
adc
and
bound
lahf
pop
adc
pop
mov
cli
fcomip
inc
lods
inc
stc
dec
lcall
scas
push
jb
aaa
xchg
dec
loopne
jl
push
xchg
js
int3
push
test
gs
incl
xor
xchg
jns
and
mov
das
push
pop
rcrl
rcll
ja
cmc
test
iret
adc
out
das
mov
xchg
in
lahf
and
fisttpl
xchg
nop
ljmp
push
aaa
adc
or
cltd
in
xor
cmpsl
jmp
addr16
and
incl
inc
lcall
fs
mov
jne
shrb
or
cmp
cs
xchg
push
jg
out
mov
aad
xchg
pop
dec
sti
pop
sub
push
sti
outsb
adc
push
sub
sti
mov
inc
push
xor
mov
es
inc
out
push
mov
sbb
adc
hlt
stos
fbstp
adc
pop
je
add
sbb
gs
lods
push
inc
push
pop
shl
pop
and
dec
sub
and
stos
inc
pop
loop
inc
adc
fimuls
pop
sbb
cltd
push
mov
xor
std
xchg
lods
shlb
les
pop
cmp
push
stos
cs
cmp
icebp
ds
jae
std
add
pop
adc
mov
and
mov
adc
inc
push
testb
aad
lods
push
adc
loop
ds
lea
xchg
cld
add
xchg
and
sbb
xchg
fdivs
addr16
jg
sub
popa
dec
inc
jae
das
ss
das
sub
pop
aaa
pop
sarb
nop
adc
aad
push
scas
test
cmp
dec
push
ret
and
mov
xor
out
and
test
cmpsb
mov
sahf
or
add
xor
mov
test
dec
xor
push
push
lret
not
inc
cmp
pop
jge
enter
outsb
adc
inc
mov
es
loopne
inc
xor
sahf
gs
inc
xchg
fdivrp
add
jo
ss
jnp
test
xchg
cmpsb
dec
push
cmpsl
outsl
int
test
and
and
add
sbb
clc
inc
ss
inc
push
mov
and
icebp
pop
in
nop
jb
enter
icebp
cmp
gs
sub
xor
loopne
es
cmp
pusha
or
aaa
insb
mov
push
and
repnz
xchg
sub
je
jmp
mov
call
loop
push
adc
pusha
mov
jbe
pop
pop
jl
popa
add
mov
push
mov
loop
out
jnp
jbe
cmp
stc
mov
mov
ljmp
adc
inc
push
jnp
sub
mov
shl
ss
leave
push
push
into
or
xor
jbe
push
adc
fwait
jle
mov
stos
test
pop
pop
movsl
stos
fs
in
xchg
or
popa
mov
jo
hlt
push
das
jl
jbe
mov
sub
outsl
jp
in
mov
sar
or
in
les
xchg
pusha
loop
outsl
push
dec
loope
lcall
inc
fstpt
push
or
fstpt
and
and
call
scas
addl
sti
je
es
int
cs
xchg
std
ja
out
or
adc
popf
aad
lea
pop
mov
lcall
inc
mov
scas
data16
and
mov
push
lret
mov
mov
sub
adc
jecxz
xchg
lock
lcall
fstpl
cmp
sub
jne
push
es
mov
dec
jle
pop
sbb
or
ss
dec
push
push
xchg
pop
stos
inc
sbb
adc
fdivrs
in
orps
mov
sbb
adc
nop
call
dec
mov
push
or
jb
pop
inc
jg
lock
adc
test
inc
fwait
and
lods
clc
jg
adc
sub
xor
adc
cmp
loope
in
mov
xchg
xor
mov
xchg
adc
sar
stc
je
es
mov
mov
pop
sti
lcall
incl
data16
outsb
xchg
xor
dec
pop
pop
sti
loop
ds
test
sub
stos
mov
and
int3
adc
cwtl
inc
ljmp
jbe
mov
aaa
loopne
jbe
lock
fbld
call
negb
inc
add
scas
xlat
adc
clc
cmp
ret
or
sti
lret
les
rcrl
xchg
adc
push
shrl
pop
cmpsb
jle
mov
mov
imulb
outsb
movsb
jmp
mov
je
jbe
jns
mov
int3
insb
lds
scas
pop
dec
add
clc
jle
test
xchg
pop
add
gs
psraw
push
das
in
mov
cld
cs
out
push
das
faddl
sbb
inc
jb
and
mov
repz
sbb
push
pop
lods
pop
clc
sbb
jle
add
sbb
mov
test
jmp
scas
mov
or
push
push
arpl
and
jmp
inc
mov
mov
shrb
shll
sahf
lods
pop
fisubrs
sbb
cld
scas
jle
inc
stc
add
push
and
jo
clts
sbb
frstor
adc
shlb
pushl
jne
push
sub
dec
xchg
sti
push
pop
hlt
negl
ds
lods
or
jp
cwtl
imul
aas
aas
out
and
int3
xor
xchg
out
or
push
add
das
clc
and
lods
rol
push
inc
ja
cltd
stc
sbb
mov
push
mov
xor
popf
into
adc
movsb
pop
jo
out
push
inc
push
sti
sahf
mov
outsl
ss
jbe
sahf
sbb
outsb
clc
idivb
nop
loopne
jmp
shl
out
jecxz
das
adc
jg
dec
mov
sahf
repnz
push
rolb
cmc
std
pop
push
insl
push
jl
in
scas
mov
lea
push
out
mov
fistpl
incl
add
loop
push
sub
fbld
inc
lcall
push
nop
pop
push
inc
addr16
xor
xchg
movl
int3
mov
mov
jg
test
in
jb
pop
movb
inc
sti
pop
dec
orl
ljmp
and
dec
or
testb
jg
aas
cmp
push
shlb
add
push
call
add
push
inc
push
rolb
jbe
scas
std
or
xchg
lea
inc
mov
sbb
adc
pop
repz
sbb
pop
or
hlt
mov
fdivr
add
jmp
ja
xchg
inc
aaa
jge
pushf
or
inc
pop
xchg
mov
out
inc
shrb
xor
rorb
movsb
sub
aaa
push
shl
popf
in
push
leave
lret
scas
sbb
cmc
es
mov
xlat
fldl
adc
xlat
mov
sti
lret
rcrb
mov
adc
push
xor
xor
imul
pop
mov
mov
push
je
pop
stos
addl
std
jg
into
sbb
jecxz
cwtl
out
fbstp
add
jg
decb
ljmp
adc
insl
andb
enter
jle
movsl
ficoms
fcoms
sbb
lods
ret
add
add
enter
mov
ljmp
sti
push
test
push
fisubs
cmp
push
add
mov
mov
pusha
gs
mov
xchg
xlat
jmp
mov
xlat
aaa
arpl
inc
mov
xchg
xchg
push
push
daa
push
fistpl
adc
cli
sub
cld
das
cli
add
inc
adc
dec
push
enter
pop
adc
dec
add
sbb
push
fstp
mov
xchg
cmpsb
nop
gs
and
iret
cmp
clc
add
mov
hlt
scas
jge
mov
push
out
mov
dec
fistpl
cs
popw
inc
mov
dec
inc
aaa
lock
std
jmp
xchg
popa
mov
fistps
aaa
jb
and
inc
call
fiaddl
cmp
sbbl
inc
mov
mov
cli
and
int3
xchg
out
mov
cmpsb
xchg
push
shll
icebp
filds
fst
jns
cwtl
out
hlt
icebp
mov
orl
adcl
imul
iret
add
adc
or
cmp
pop
hlt
les
mov
cmp
mov
mov
scas
push
ljmp
fisttpll
cld
dec
sti
mov
out
pop
test
ficompl
loope
jmp
dec
test
jecxz
push
mov
popf
lds
aas
data16
in
addr16
loop
add
fldl
test
sub
push
lds
adc
cmp
test
ljmp
pushaw
pop
outsb
mov
aaa
call
xchg
f2xm1
mov
cmp
sti
test
mov
ss
xlat
outsl
jp
adc
scas
ja
pop
jbe
aaa
adc
inc
add
decb
ffree
dec
ret
mov
test
mov
icebp
xor
or
push
xchg
into
aam
outsl
clc
or
mov
fs
and
pop
hlt
aaa
add
rcll
xor
adc
ss
test
and
jle
pop
int
sarl
and
gs
out
push
shr
inc
xor
test
call
sarl
push
sub
shrl
ss
outsb
fsubs
fstpt
shll
stos
stos
clc
jg
in
mov
and
jne
lea
out
imul
mov
mov
movsl
sti
jns
imulb
sbb
rolb
sbb
mov
xchg
adc
xchg
jne
xchg
xor
pop
vandps
mov
push
mov
mov
jne
fisttpl
std
clc
mov
sub
xor
lods
mov
fildl
popa
jle
pop
mov
ret
test
data16
adc
lahf
call
xchg
lret
scas
data16
outsb
or
push
jle
pop
mov
shll
pop
cwtl
das
add
pop
ss
je
movsl
sbb
shrb
mov
es
pop
or
push
jbe
pop
ret
jmp
sbb
outsl
clc
pop
adc
add
cmpsl
scas
jne
fs
outsl
push
add
in
jmp
nop
cltd
dec
xor
rcrl
push
jle
add
jl
and
xchg
xchg
xchg
movsl
cmp
mov
mov
popa
in
add
adc
cs
fnstenv
rol
addr16
jns
jp
inc
ficompl
ss
pop
or
fadd
inc
gs
insl
mov
inc
mov
sbb
push
and
aas
adc
mov
push
xor
mov
movsb
or
mov
into
pusha
pop
or
hlt
xor
pop
xorl
popa
adc
sub
cmp
popa
addr16
lods
add
inc
rcll
inc
notl
jle
shl
sbb
fidivs
and
dec
push
xchg
or
push
sub
mov
sar
sarl
push
jns
jg
xchg
sarb
mov
popf
dec
in
shlb
rcll
cmpsb
rclb
inc
das
inc
out
cmc
push
inc
or
es
and
sahf
xchg
cs
pop
lcall
push
dec
int3
sub
lcall
lds
repz
lods
in
mov
data16
jmp
adc
adc
pop
adc
add
adc
test
dec
in
jnp,pn
ds
outsb
cltd
lods
dec
push
push
test
imul
mov
sbb
mov
push
mov
jne
fistps
incb
jae
inc
mov
adc
and
lock
push
sub
outsb
or
mov
push
call
xchg
xor
adc
mov
lcall
rclb
shrb
add
xchg
clc
pusha
push
loop
xchg
outsb
lea
dec
ror
data16
icebp
add
test
mov
js
mov
push
aas
and
cltd
sahf
cmpsl
jnp
mov
inc
sub
cmpsl
icebp
ret
test
out
in
cmp
mov
sub
push
sbb
fldenv
jne
roll
cmpsb
cmp
clc
or
push
test
test
iret
and
sahf
icebp
stos
jne
sarb
push
add
lea
lahf
dec
cmp
dec
outsl
hlt
out
push
sti
sbb
test
pop
adc
adc
in
mov
call
pusha
mov
and
jecxz
out
out
add
fwait
addr16
sahf
push
dec
mov
jns
adc
sbb
test
lock
mov
scas
cmpsl
outsb
clc
adc
aam
dec
into
adc
dec
pop
pushl
std
decl
xchg
adc
jnp
outsl
or
call
xchg
xchg
mov
daa
push
jmp
int3
das
cmp
out
xorb
sti
fiadds
sub
cmpl
inc
xchg
imul
or
mov
sti
pop
push
ds
mov
out
and
popf
clc
push
fsubr
cs
fmull
push
lcall
xchg
fnstenv
lock
data16
mov
fistps
mov
imul
inc
mov
in
jnp
sub
mov
mov
dec
cs
xor
repnz
and
lcall
sbb
cld
cmpl
xchg
push
lock
inc
or
cmp
jne
lods
adc
into
sbb
clc
test
mov
loop
xchg
aad
inc
loop
push
jl
int
rcrl
xchg
mov
pop
inc
fsubr
xchg
pop
cld
cmpsl
mov
shrb
in
push
xchg
push
in
mov
jne
xlat
rorb
mov
dec
lahf
inc
fsubr
mov
dec
jnp
outsb
out
les
inc
pop
adc
test
fs
xchg
xchg
mov
push
scas
fcmovnb
push
dec
push
stc
adc
cld
mov
push
stc
xor
cmp
aam
xchg
dec
stos
xlat
sbb
xchg
lcall
lods
jle
cltd
pop
push
fstps
call
insb
sub
mov
sbb
shlb
jmp
icebp
je
inc
orl
lods
dec
mov
dec
icebp
fstl
icebp
leave
in
adc
push
ds
outsb
mov
sbbl
scas
insl
xlat
fiadds
js
sahf
inc
mov
sub
les
push
movsb
dec
lahf
das
ja
inc
jnp
ja
dec
push
int3
push
add
or
lea
dec
in
mov
mov
add
adc
lcall
fsubrl
pop
jmp
push
jbe
mov
sub
dec
movsb
xchg
lcall
iret
add
test
push
cwtl
lock
jno
pop
or
mov
fildl
popf
adcb
mov
or
or
add
push
xchg
xchg
call
dec
push
push
push
insl
mov
xchg
call
sbb
adcl
insb
popf
insb
inc
push
idivb
mov
sub
das
inc
es
sub
inc
pop
call
push
adc
inc
adc
mov
or
xchg
sahf
pop
in
scas
lock
push
mov
scas
sub
cmp
inc
arpl
xchg
je
xchg
scas
dec
add
jmp
popf
cmpsb
jmp
mov
inc
pop
scas
inc
push
adc
push
xor
cld
push
mov
xor
xchg
ss
into
and
xchg
sbb
pop
jno
call
sti
mov
data16
sub
inc
addr16
lds
sti
cmpsb
test
call
cmpl
push
arpl
aam
push
mov
jg
pusha
push
pop
bound
push
popa
mov
pop
cmp
push
cld
add
cmp
inc
sub
push
mov
call
jo
sub
loopne
cwtl
add
push
in
pop
test
xchg
not
lahf
ficoms
cmp
cmp
cmc
mov
xor
sub
out
icebp
jg
mov
in
push
mov
dec
jecxz
add
out
and
sub
imul
fbstp
push
loope
shlb
dec
movb
lcall
cmpsb
sahf
in
mov
insb
outsb
mov
cmp
stos
data16
mov
mov
jg
inc
fildl
dec
push
scas
pop
scas
add
pop
lahf
adc
inc
pop
inc
ret
and
je
mov
out
inc
adc
mov
mov
adc
mov
adc
mul
cmpsb
push
push
cmpsb
jbe
test
push
jbe
cmpsb
and
outsl
sbb
adc
mov
dec
mov
pop
daa
adc
outsb
adc
das
clc
mov
cs
clc
xchg
daa
jg
mov
imul
rorl
pop
decl
nop
mov
not
cld
scas
push
inc
inc
scas
or
enter
adc
mov
inc
dec
fstpl
incl
into
lods
adc
cld
add
das
out
and
sub
fidivl
and
jns
sahf
popa
inc
adc
dec
dec
dec
jp
xchg
or
push
xor
jmp
jbe
sbb
test
pushl
jae
add
xor
mov
out
outsb
mov
cmpsb
sub
mov
aas
inc
sbb
add
scas
jae
add
sbb
xchg
pop
jae
insb
aam
aas
cwtl
orb
jle
mov
ja
int3
pushf
jle
das
data16
add
int3
sub
sar
rcl
addr16
jae
pcmpgtd
in
out
pop
hlt
cmpsl
jle
add
ss
push
or
cltd
mov
sti
sub
and
mov
rolb
pop
and
mov
outsl
lock
fiaddl
ret
gs
sarl
into
xor
lods
adc
pop
repz
das
inc
fnsave
int3
jbe
sbb
adc
ds
out
mov
int3
jne
jae
adc
ds
stos
fildl
mov
cwtl
int
pop
out
je
inc
jnp
imulb
adc
jle
jbe
outsb
jno
out
sahf
scas
adc
mov
out
cmp
loop
inc
and
into
jae
adc
jns
add
mov
jbe,pt
incl
loop
mov
or
jbe
ss
xor
aas
add
sbb
mov
mov
inc
aaa
and
jbe
je
fs
xor
ret
mov
jbe
je
scas
sub
fbld
cs
mov
push
int
or
lahf
mov
mov
loopne
and
jge
add
sti
sbb
cs
push
shlb
add
jns
cmp
out
pop
push
push
adcl
adc
outsb
push
adc
jl
cs
icebp
or
or
popf
xchg
add
sbb
fstpl
sbb
adcb
into
sub
stos
shrl
je
int3
pop
jo
sahf
stos
sahf
dec
mov
xor
mov
stos
je
add
lods
loopne
inc
lock
sbb
sub
ja
jbe
ds
arpl
jmp
rorl
fistps
addr16
pop
jns
inc
and
insb
inc
iret
pop
scas
pop
cld
xchg
in
and
lcall
pop
or
cmp
idivb
mov
push
mov
push
and
or
jl
mov
jg
in
cmpsl
xchg
mov
jle
xchg
xchg
push
mov
mov
mov
imul
scas
xor
shrb
in
inc
loop
inc
mov
dec
aas
rolb
push
ds
aaa
xchg
mov
sbb
gs
stc
mov
lahf
loop
adc
mov
push
clc
in
ret
sti
mov
pop
pusha
jnp
lea
mov
adc
dec
ds
imul
jmp
shlb
in
dec
sbb
inc
inc
dec
xor
push
push
mov
push
and
jmp
and
out
jp,pt
xchg
cmp
sti
and
insl
sbbb
cmpsb
aaa
clc
sub
inc
cmpsb
cmp
xchg
jl
add
outsl
jp
sub
test
mov
sti
push
rcr
adc
xchg
dec
push
dec
cmpsl
int3
fsubrs
xor
dec
pop
mov
sub
and
cmpsb
adc
sbb
arpl
shll
add
adc
push
or
mov
or
scas
add
les
lods
je
sahf
pop
jb
push
les
or
cwtl
ss
add
or
adc
movsb
imul
clc
sbb
push
pop
ds
push
jb
inc
mov
popf
push
test
xchg
lret
jne
mov
and
inc
push
inc
je
ud2
dec
push
xor
pop
mov
outsl
inc
out
and
push
jno
adc
sahf
jl
je
push
loope
jns
push
push
lahf
push
sbb
dec
lods
and
rolb
cwtl
repnz
and
push
negl
aam
nop
jmpw
cli
out
out
ljmp
repz
mov
jns
inc
lcall
inc
inc
push
aaa
pop
mov
outsb
push
mov
inc
jmp
sub
xchg
inc
loopne
inc
adc
sahf
loopne,pn
fmul
push
xlat
push
push
cwtl
loopne
negb
out
cs
in
and
leave
fmuls
outsb
je
jle
jns
fdivrl
lods
cmp
sti
add
aas
int3
ja
add
push
sub
sub
rcrb
outsb
cmp
inc
cs
jg
ljmp
pop
inc
push
aas
pop
push
aam
sahf
sub
dec
lcallw
xchg
inc
cmc
fdivs
push
ja
enter
lods
ja,pn
cmp
inc
mov
stos
out
dec
cld
inc
fistps
adc
dec
xor
ss
lret
mov
scas
xchg
push
xlat
clc
push
addb
adc
xchg
aam
mov
shrl
mov
adc
pop
clc
aas
sbb
xor
push
inc
dec
in
clc
sahf
int3
xchg
into
mov
cmpsl
jmp
into
adc
mov
add
das
push
lods
sub
rorl
push
push
and
mov
pop
inc
xchg
lcall
push
lods
mov
push
ret
cmp
inc
sahf
mov
mov
fdivl
shlb
xchg
sub
pop
incl
cmp
pop
lret
and
xchg
lock
sahf
jae
sub
pop
push
setle
xor
cmp
sahf
mov
insb
push
cltd
mov
out
cmpl
outsb
cltd
mov
sti
and
dec
cli
sti
popf
jbe
in
push
mov
test
mov
or
loop
addr16
jg
ja
inc
mov
add
inc
call
rolb
push
or
xchg
fimuls
test
add
sbb
inc
jg
adc
pop
mov
dec
xorb
sahf
inc
pop
bound
inc
dec
xchg
or
call
xchg
adc
es
dec
incb
push
adc
inc
fwait
add
push
jnp
out
adc
xchg
sub
cli
inc
add
shrl
sbb
ss
adc
repz
mov
or
add
mov
mov
out
lods
movsl
movsb
in
nopl
pop
push
inc
incl
jo
mov
divb
out
clc
fwait
enter
cmp
pushf
cld
mulb
sbb
clc
out
ret
scas
xchg
dec
out
mov
outsb
clc
out
jbe
pop
fnstenv
jecxz
fmull
cs
out
mov
jo
test
test
cmp
adc
xor
pop
in
je
dec
jp
sti
aaa
mov
movsl
shl
movsl
out
push
push
ljmp
in
fcmovnu
add
xor
push
mov
xchg
mov
sub
lea
call
into
push
xchg
sahf
dec
push
scas
push
or
scas
pop
inc
and
scas
adc
cli
and
xchg
push
cld
testb
sbbb
sbbl
clc
popa
cmc
mov
scas
adc
pop
ds
sbb
test
call
mov
inc
add
and
mov
sbb
insb
inc
icebp
add
sti
jl
lcall
and
cmp
pop
dec
das
rcrb
jp
inc
clc
imul
push
sub
lret
incl
js
mov
cld
mov
jb
adc
mov
push
cmp
rclb
push
xchg
mov
js
pop
pmaddwd
push
stos
cmp
jb
das
or
out
orl
iret
fistpll
mov
cmp
insl
rorb
jp
mov
ja
out
cmp
pop
ss
js
ljmp
ret
dec
nop
mov
outsb
ucomiss
sbb
sub
mov
addr16
push
jae
mov
push
idivl
jbe
jg
jae
push
sub
jb
pop
sub
std
decl
push
jb
repnz
outsl
cmp
push
jns
pushl
cmp
pop
cs
xor
mov
mov
lcall
js
aaa
das
push
shlb
mov
dec
js
sarl
fdivrs
inc
mov
mov
sub
lock
repz
adc
orl
movb
nop
mov
js
outsl
clc
das
fistpll
mov
sbb
mov
pop
inc
fwait
syscall
pop
scas
sti
xchg
and
cmp
mov
std
outsl
pop
mov
sub
cmpsb
mov
outsl
mov
imulb
ljmp
fldt
adc
jbe
dec
sub
ja
idiv
orb
and
pusha
cmpsl
sbbb
jno
lds
cs
shlb
sbb
push
push
push
jge
mov
xchg
xchg
sbb
cmp
mov
leave
dec
pop
jae
dec
sbb
dec
out
xor
mov
mov
mov
pop
jo
jl
xchg
or
in
jle
iret
rclb
jmp
adc
pop
jle
mov
mov
push
jae
bswap
and
shlb
lcall
jge
adcl
addr16
or
and
lock
push
out
mov
cmp
dec
cmc
mov
jnp
ret
pop
mov
add
shrb
cmc
xchg
dec
push
out
sub
decl
pop
push
cmpsb
adc
cld
clc
inc
cmp
xor
aad
iret
mov
push
mov
pop
xor
nop
sub
fabs
mov
or
popf
aas
rclb
icebp
data16
es
insl
mov
pop
pop
sub
lods
dec
pop
mov
mov
and
push
jg
rcrl
ret
stc
jmp
dec
je
aad
popa
and
jnp
mov
push
adc
test
jbe
mov
mov
ret
mov
mov
sub
sub
inc
push
lcall
pop
sahf
repz
cli
jbe
push
add
mov
pop
adc
cld
cmpsb
adc
cmp
or
mov
lea
sti
sub
inc
push
or
aaa
inc
lcall
pop
push
and
enter
and
xor
xor
ficoml
jae
jge
pop
adc
mov
adc
mov
sar
testl
or
or
add
xor
out
cli
jmp
fnstsw
imull
and
or
and
xchg
jbe
sub
decl
in
add
es
add
outsb
fisubl
pusha
outsb
test
shll
nop
and
cmp
ds
jge
pop
je
and
mov
jecxz
jmp
cmp
ret
in
or
insb
ret
cmp
je
mov
cmpsb
outsb
pushl
xchg
outsl
test
jnp
or
out
pop
jnp
incl
test
cmpl
jne
repz
push
fs
sbb
fwait
aaa
jmp
test
pop
outsl
popa
cmp
mov
es
sub
fdivr
incl
ret
insl
or
sub
inc
imul
out
sarl
or
lea
or
in
add
inc
popa
dec
ss
jnp
and
inc
and
dec
add
mov
rolb
cmpsl
mov
xchg
add
repz
clc
dec
sub
cmpsb
lahf
add
or
xchg
aas
mov
mov
and
pop
jecxz
fisttps
push
or
nop
pop
scas
int3
jecxz
repnz
push
cld
mov
dec
add
push
lcall
push
jl
aaa
in
fbstp
cmpsl
outsb
cmp
cs
cwtl
and
add
lret
xchg
int
xchg
or
div
sub
inc
push
dec
cmpsb
nop
sbb
cmpsb
sahf
jg
out
out
cli
xchg
mov
fisttpl
mov
pop
sub
scas
subl
loope
add
in
lods
and
stc
add
add
ljmp
pop
mov
pop
lods
into
mov
data16
shlb
fs
insb
ljmp
mov
mov
dec
mov
adc
in
das
cs
loop
ljmp
aam
cmp
fldt
les
cs
jg
int
add
pop
insl
cmpsl
int3
out
insl
in
push
jecxz
sbb
pop
mov
pop
xchg
les
push
lock
out
pop
jns
pop
stc
icebp
mov
je
pop
imul
jg
or
outsb
outsl
scas
xchg
add
popa
rolb
jbe
jo
push
popa
in
pop
fiadds
pop
sbb
or
adc
loop
pushf
lock
cs
add
mov
xchg
dec
dec
adc
psubusw
in
pop
pushl
and
in
mov
ds
aaa
test
push
pop
cmpsb
mov
push
test
mov
mov
cmc
inc
add
icebp
sti
dec
lods
es
aas
or
sub
andb
hlt
int
fiaddl
fiaddl
pushf
dec
mov
shrl
pop
es
inc
mulb
push
push
dec
jecxz
sbb
decb
xlat
out
aas
cld
push
sahf
data16
leave
leave
xchg
andl
jg
jb
jb
cmp
xchg
pop
fs
neg
popa
popa
sub
cmpsb
in
test
rcr
cmp
outsl
decl
mov
scas
mov
sbb
mov
int3
mov
mov
gs
pop
push
out
jae
pop
adc
jbe
mov
ss
and
push
fcmovnb
dec
cmp
icebp
jge,pn
dec
inc
jns
sbb
pop
jecxz
arpl
inc
decl
jne
fisttpl
add
sbbl
pop
jmp
and
sbb
lock
ret
repnz
cmpsb
outsl
xchg
aas
in
mov
jae
jbe
int3
iret
stc
xchg
scas
rcr
daa
out
push
loope
sysret
cmp
ds
sub
cmp
icebp
loope
imul
insl
frstor
cmpsb
fisttpl
imul
xor
dec
add
in
cmp
add
dec
cmp
sbb
jbe
pop
sub
cmc
ljmp
pop
sbb
jnp
jp,pn
add
popa
mov
jg
jne
decl
pop
dec
dec
dec
rcll
xchg
jmp
arpl
sbb
ds
pop
mov
ds
xor
sub
cs
out
dec
cmp
xorb
xchg
and
addr16
in
and
and
sbb
test
lcall
adc
xorb
sbb
lcall
adc
nop
push
pop
inc
fbld
lea
adcb
and
jg
push
or
and
sti
push
je
adc
enter
sti
jg
sahf
inc
push
je
add
mov
add
push
inc
sti
ret
cmpsb
incl
cmp
push
enter
sti
nop
cmpsb
and
aam
add
pop
pop
ljmp
enter
adc
fildl
or
mov
bnd
movsb
ret
jg
sub
int3
jbe
adc
enter
adc
mov
sahf
or
jo
enter
adc
adc
add
loope
sbb
sti
inc
call
mov
test
jo
loopne
push
nop
test
sti
iret
movsl
push
loopne
dec
pop
fs
add
into
enter
loopne
cmp
xchg
sbb
sbb
mov
push
ret
push
es
sbb
jmp
call
dec
push
jbe
jae
jne
pushf
movsb
mov
fwait
sbb
xorl
es
mov
xchg
testb
shufps
or
stc
cld
push
sahf
sarb
jbe
jo
imul
inc
push
fcoml
xchg
aad
adc
add
inc
out
fld1
cmp
mov
add
mov
jne
push
loope
fildll
mov
lods
adc
popf
mov
out
push
jae
lahf
sbb
jbe
or
nop
enter
loopne
in
mov
xchg
aad
test
mov
mov
and
mov
hlt
adc
pop
cmp
and
xchg
divl
inc
mov
ss
fidivrs
inc
push
fistpll
incl
pop
jl
les
xchg
outsb
xchg
movsl
push
jmp
dec
fcompl
outsb
cld
add
sub
repz
enter
add
imul
push
in
push
mov
aaa
ljmp
out
dec
cmp
out
sahf
movsb
ds
adc
lods
sub
dec
and
xchg
mov
je
shlb
lret
or
xchg
pop
dec
ss
or
add
das
rcrb
inc
inc
loope
int3
xor
insb
push
dec
daa
or
mov
inc
lods
jmp
nop
jmp
loopne
loop
shrb
mov
inc
jbe
inc
call
push
mov
dec
xchg
sub
push
xor
push
aam
int
ss
mov
sarl
mov
jns
jnp
inc
pop
push
rorb
inc
shr
rcrb
test
push
mov
sti
mov
mov
rolb
ja
cmp
mov
adc
jmp
pop
rclb
add
mov
cmp
adc
mov
cwtl
xchg
fcmovnb
push
test
mov
in
ss
adc
lods
adc
mov
inc
inc
cmpsl
pop
test
adc
and
fisubrs
cli
mov
test
mov
inc
out
adc
out
pop
mov
sti
loop
xchg
pop
in
ror
loopne,pn
lret
cmp
adc
inc
ret
xchg
inc
jno
arpl
push
push
mov
xchg
and
imul
rclb
scas
cmpsl
in
ja
inc
fwait
popa
mov
sbb
jl
inc
movsb
outsb
pop
fwait
add
rorb
xchg
pop
cmp
mov
into
xchg
je
je
enter
hlt
cmpsl
inc
dec
fiadds
jge
jl
fildll
movb
sahf
push
nop
js
arpl
ljmp
jbe
pop
dec
xchg
push
push
cwtl
test
cld
jg
mov
push
into
and
mulb
fldl
add
or
pop
dec
jp
rorl
and
or
pushw
or
mov
mov
fisubl
mov
xor
pop
and
add
inc
je
push
fildl
clc
outsb
jge
pop
add
pop
cwtl
insb
jnp
push
and
lcall
push
push
cwtl
je
push
sub
addr16
push
rcrl
test
mov
fisttpll
inc
cs
cmp
test
mov
and
outsb
cwtl
mov
pop
and
ljmp
push
adc
insl
test
clc
dec
js
sub
or
adc
enter
shrb
xor
mov
stc
iret
adc
or
push
jbe
fildll
push
into
les
sarl
ja
push
and
push
lcall
mov
call
sbb
add
push
pop
subb
mov
cmp
mov
jl
scas
xchg
ss
jnp
dec
sahf
fisubrl
es
pop
cmpsl
jo
mov
mov
bound
add
dec
push
orb
lds
scas
push
jle
cwtl
into
fdivp
dec
cmp
scas
fldl
xor
push
inc
inc
pop
sahf
ficompl
or
nop
mov
pop
cli
pop
pop
xor
jmp
xor
inc
cli
xorl
sbb
and
inc
jg
add
dec
sarl
lods
pop
mov
mov
cmp
jbe
sbb
add
pushl
sub
outsl
popa
pop
ss
or
and
push
or
dec
add
sbb
into
mov
decb
pop
into
mov
push
out
cli
jg
mov
aaa
gs
push
addr16
xor
add
jns
jnp
cmp
stos
lret
outsb
sub
inc
out
add
sub
xlat
icebp
push
das
ds
cld
cmp
les
dec
push
lds
adc
dec
inc
push
jno
idiv
or
int3
sub
lcall
sbb
push
pushl
std
pushl
aad
stos
lods
add
push
lods
out
sbb
sti
imul
adc
mov
mov
loop
add
pop
idiv
pop
es
int
mov
filds
paddsb
out
dec
pop
cwtl
inc
jg
jg
mov
int3
adc
sahf
inc
or
and
mov
nop
add
sbb
xchg
jb
pop
int3
inc
xchg
adc
aas
mov
push
inc
lea
loope
mov
test
push
add
mov
call
cltd
xchg
inc
add
mov
adc
ss
push
popf
lahf
jle
mov
ja
testl
das
sbb
stos
mov
call
mov
jg
sahf
popa
mov
sti
or
es
push
cltd
test
lock
dec
rcrb
std
inc
std
cmp
ss
out
pop
mov
and
sti
outsb
xchg
pop
mov
sarl
push
sub
out
in
push
imul
rorb
ret
pop
xchg
inc
das
push
inc
js
mov
inc
lods
mov
faddp
push
test
mov
aam
inc
cmpb
insl
mov
insb
mov
repnz
cmpb
shr
addr16
cwtl
popa
scas
scas
stos
loop
mov
ret
jno
call
stos
outsb
sbb
xchg
int3
ja
adc
fwait
dec
inc
cmpsb
sahf
lahf
sub
jmp
adc
push
hlt
lcall
mov
mov
mov
pusha
jns
xchg
and
add
xchg
add
push
jnp
or
sbb
xchg
sbb
sbb
sbb
sbb
push
mov
push
repz
dec
inc
mov
xor
std
cli
jecxz
mov
stos
add
addb
insl
or
cmp
mov
subb
fldl
pop
adc
aad
add
push
int3
push
insl
sti
std
mov
mov
push
or
xor
cmp
push
sub
pop
dec
fnstsw
push
or
ret
pop
sub
cltd
inc
sub
into
push
sti
in
rorb
sbb
push
push
scas
sub
push
jp
out
jge
ds
sbb
xor
cltd
out
dec
sub
mov
and
addr16
fstpl
pop
adc
out
out
push
sbb
xor
cmp
popfw
fsub
ljmp
clc
and
push
data16
sti
gs
nop
bound
add
xor
sbb
cmp
add
pop
ficoms
shlb
add
jnp
divb
push
dec
adc
sub
mov
idivb
jmp
mov
xor
outsb
lods
adc
pop
cmp
adc
sahf
dec
in
movsl
mov
outsb
adc
pop
push
lcall
jg
sahf
add
push
cli
jg
pop
out
lods
xchg
sub
sarl
scas
and
and
fwait
subl
daa
jbe
mov
int3
dec
push
adc
and
into
jmp
mov
js
jl
sbb
repnz
mov
sti
enter
fldl
inc
inc
fs
sbb
push
inc
mov
add
xchg
mov
push
inc
ljmp
lods
ror
push
aam
mulb
push
and
gs
dec
push
lahf
inc
adc
divl
popf
scas
jnp
jp
call
int3
cmp
adc
icebp
inc
lods
jmp
fstl
decl
test
outsb
or
jne
cltd
mov
inc
cmp
cmp
ret
inc
outsl
add
loop
in
ljmp
test
add
mov
sbb
inc
lods
icebp
cmpsb
ds
int3
and
shrb
fcoms
inc
lahf
ret
cli
inc
add
push
xlat
cmp
add
push
sbb
push
data16
scas
outsb
int3
leave
pop
xor
push
add
cld
and
andb
jp
add
push
adc
sbb
adc
and
out
xor
ljmp
sbb
sahf
int3
pop
insl
cli
dec
pop
lcall
shrl
adc
nop
add
incl
ficoms
lea
lcall
push
in
add
aad
repz
mov
out
or
jl,pt
inc
xchg
into
fsubr
dec
test
fldenv
adc
out
popl
out
push
imulb
sarb
out
fmul
mov
fistl
cwtl
sbb
daa
or
pop
dec
sti
test
inc
insb
fidivs
cs
push
cld
mov
lea
push
fisttps
data16
jle
xchg
push
sub
scas
adc
cli
inc
loop,pn
mov
inc
mov
in
sub
lcall
dec
into
pop
popf
jbe
pop
pop
jmp
mov
cmp
icebp
das
and
outsb
insl
inc
adc
icebp
xor
mov
test
fbld
or
adc
ret
lcall
pop
add
ljmp
push
jnp
mov
mov
fmul
dec
xchg
sub
popf
ret
pop
ljmp
and
adc
jbe
pop
arpl
sbb
xchg
pop
lcall
jns
and
push
cwtl
mov
jp
inc
add
jne
into
pop
jno
adc
aas
pop
clc
arpl
or
scas
arpl
insb
dec
cs
sti
cs
inc
pop
push
adc
pushl
add
adc
scas
cmp
aaa
dec
gs
sub
ljmp
sub
test
pop
inc
frstor
subl
xor
ljmp
and
or
mov
mov
adc
sub
xorl
cmpsb
jg
mov
in
inc
push
jbe
jnp
cwtl
insb
jbe
pop
jge
pop
fistl
or
or
and
in
and
call
addl
pop
push
ljmp
sahf
adc
adc
and
lahf
clc
sbb
adc
inc
in
or
mov
aaa
int3
or
push
jle
add
fs
sti
pop
mov
clc
sub
and
cwtl
enter
adcl
inc
frstor
cmp
insl
adc
push
notl
ljmp
jle
fs
push
jp
push
push
in
xor
outsb
mov
pop
addr16
js
dec
pop
dec
jnp
mov
xlat
add
clc
ret
negb
inc
ljmp
sahf
push
cmp
dec
push
pop
fistps
icebp
fstl
cmpsb
or
jge
and
fisttpll
aam
das
imul
cmp
out
inc
or
or
push
xor
add
in
dec
adc
adc
mov
sub
sbb
aas
outsb
data16
clc
lds
push
int3
andb
push
push
ds
scas
adc
push
fidivrs
push
lods
pusha
sahf
cld
xchg
xlat
pop
clc
add
push
mov
jecxz
xchg
mov
or
xlat
push
clc
cmpsl
cmp
jns
dec
je
push
jle
out
imul
push
or
inc
mov
cli
dec
aas
int3
das
cwtl
inc
pop
lods
adc
inc
cwtl
and
int3
add
jbe
inc
movsl
fs
push
sbbl
call
pop
mov
das
pop
int3
jle
in
mov
jle
adc
scas
out
paddq
pop
push
sub
sar
and
add
mov
bound
cmpsb
push
push
ret
push
push
xchg
push
ja
es
mov
out
lret
inc
rcrl
imul
cmovbe
mov
lcall
das
inc
jns
dec
adc
gs
scas
add
adc
aad
lods
and
fidivs
sbb
cli
cmp
and
adc
dec
add
or
and
sahf
jo
les
xor
jbe
and
lock
push
jae
das
loop
call
inc
cwtl
adc
cmpsb
hlt
inc
scas
mov
repnz
sbb
mov
push
je
cs
into
sbb
in
sbb
mov
pop
pmuludq
mov
cli
push
push
jns
ds
or
adc
pop
ja
sub
mov
dec
int
outsb
inc
das
bound
mov
ja
mov
pop
dec
adc
pop
sbb
outsl
sar
outsb
mov
enter
pop
sti
cwtl
inc
int3
push
popf
mov
les
test
push
mov
cli
cmpsl
inc
adc
fimull
lods
mov
lds
add
mov
pop
cld
or
jbe
jne
or
push
sub
int3
push
dec
cwtl
push
fbstp
cwtl
dec
cmpsb
sbb
imul
lods
mov
cmpsl
mov
cs
out
fistpll
in
nop
out
jmp
adcl
lcall
stos
int3
and
das
fdivrp
and
test
xlat
pop
xor
out
jp
dec
outsb
jno
mov
add
aas
dec
push
lahf
out
add
nop
test
outsb
pop
inc
or
add
add
sub
push
loopne
or
xor
cmp
adc
aas
imul
push
inc
ja
cs
das
hlt
ljmp
pop
fdivs
adc
mov
add
aad
mov
jg
dec
cmp
fiaddl
xor
jge
shlb
mov
mov
ret
outsl
pop
cmp
cmp
test
ds
mov
push
arpl
jbe
jl
arpl
sub
and
mov
jmp
mov
lods
ss
mov
sub
push
pop
mov
pop
enter
mov
jbe,pn
std
mov
mov
and
aam
push
dec
xchg
les
int
pop
into
sbb
lods
pop
ret
repz
std
shlb
scas
push
or
ja
arpl
scas
sahf
fs
mov
scas
inc
sub
or
jp
lock
inc
pop
push
inc
call
jnp
sub
shl
test
jp
pop
jo
lcall
push
inc
adc
outsl
cmp
sti
or
pop
xchg
cmp
push
lcall
mov
je
adc
or
lcall
mov
push
xor
push
mov
test
ljmp
pop
je
scas
sbb
es
add
add
push
aaa
inc
inc
int3
bound
sub
push
dec
popa
pop
subl
add
movsb
mov
ss
pop
fists
inc
jl
add
nop
lea
push
dec
push
jmp
jge
scas
mov
pop
inc
pminub
notb
into
push
jge
or
xlat
cmp
jecxz
push
loop
adc
ret
test
out
ficoms
or
push
push
ja
pusha
push
test
and
push
mov
test
xchg
xlat
dec
cmp
int3
arpl
mulb
xor
aad
punpcklwd
or
fildll
push
fcmovne
pop
xor
inc
pop
test
mov
hlt
outsl
pop
pcmpeqw
push
pop
cmp
push
lods
decb
je
inc
push
and
and
adc
xor
mov
mov
aaa
adc
jg
aam
jge
nop
fimull
push
mov
rolb
sbb
push
cmpps
icebp
je
rcl
pop
jle
adc
add
mov
fs
shl
or
inc
scas
dec
iret
pop
mov
out
adc
inc
pop
std
push
push
push
test
jge
cmp
jge
add
aas
sahf
push
loop
inc
sbb
mov
outsl
and
jnp
clc
xchg
cmpsb
int3
fidivs
add
lea
jmp
add
shrl
adc
in
pop
sbb
and
imul
dec
inc
jecxz
clc
add
clc
jb
pushf
mov
inc
bound
push
dec
jg
sbb
push
outsb
nop
loop
arpl
scas
cmp
jle
cmc
cmpsl
mov
push
fisubrs
out
mov
incb
imul
mov
xchg
add
pop
ret
cwtl
es
das
je
notb
jns
ds
rcll
inc
jne
and
aam
int3
cmpsl
fcomip
mov
fistps
pusha
xor
cmp
jne
outsb
clc
std
cmp
into
in
int3
and
pop
cmpsl
xor
popa
fnstsw
das
cld
fwait
or
fldl
cmp
push
dec
mul
lods
adc
icebp
lcall
ja
pop
and
or
and
lods
mov
or
mov
addr16
inc
ret
xor
push
push
in
mov
fldl
pop
call
pop
mov
rclb
adc
push
inc
pop
push
mov
lock
loop
dec
push
pop
fidivrl
out
and
data16
add
pushl
pop
shlb
unpckhps
sbb
into
cmpsb
sbb
dec
pop
scas
push
jb
sub
xor
adc
adc
sub
inc
xor
fisubrs
push
ret
lahf
inc
add
loopne
sbb
mov
jo
cmpsb
mov
sbb
or
sub
or
pop
sub
sub
push
adc
dec
push
dec
pop
pop
dec
jp
push
push
mov
xor
cmpsb
mov
outsl
jecxz
call
mov
outsb
jmp
adc
xchg
push
mov
push
lods
ss
lahf
xchg
in
push
out
and
push
inc
dec
ljmp
pop
ljmp
fnstsw
inc
aaa
xor
mov
lret
mov
out
popl
inc
mov
outsb
ss
andl
lret
leave
mov
push
push
test
andl
dec
inc
xor
push
pop
pop
cmpsl
outsb
or
hlt
push
clc
cmpsb
out
jns
push
int
push
sub
xor
xor
cmpsb
xchg
call
sahf
mov
popa
sbb
in
scas
movsl
sub
addr16
pop
cli
pmaxsw
insl
ja
rcl
pushl
inc
aas
pop
in
arpl
and
adc
hlt
push
inc
sub
sub
jp
mov
xor
ljmp
aad
jecxz
jmp
pop
mov
lea
mov
outsb
es
dec
and
aaa
cmp
dec
sbb
add
jb
xchg
mov
adc
push
data16
sub
and
and
add
clc
lahf
out
call
jns
and
dec
adc
xchg
push
mov
es
pop
jmp
xchg
mov
loopne
sar
out
jbe
mov
jns
inc
fstl
push
scas
dec
jns
dec
mov
push
outsb
inc
int3
aaa
inc
adc
adc
enter
push
incb
push
adc
sub
outsb
xchg
pop
jle
mov
pushl
cmpsb
pusha
cwtl
jg
inc
std
das
mov
loop
pop
pop
inc
push
cwtl
mov
add
dec
and
cmp
sub
ljmp
outsl
ljmp
dec
decl
add
pop
add
call
add
adc
adc
lods
clc
cmp
jle
testl
jmp
fsubl
int3
push
xor
sub
push
push
add
sti
daa
and
pop
cmpb
jecxz
push
mov
inc
nop
dec
pop
fstpt
xor
push
cwtl
imul
pop
scas
cld
add
ret
adc
in
jae
jp
jo
mov
je
push
fmulp
ljmp
fidivrl
pusha
add
inc
and
sub
mov
imul
test
inc
inc
lock
loopne
lahf
gs
insb
mov
add
or
push
inc
scas
sbb
imul
divb
sti
mov
cs
dec
jp
pop
aaa
dec
add
inc
jb
sahf
sub
adc
cmpsb
sub
mov
push
dec
ds
mov
xor
push
cmpsl
lods
pushl
inc
in
inc
data16
push
out
cwtl
and
dec
sbb
scas
imulb
inc
mov
add
rcl
or
scas
push
fbstp
sub
push
push
into
adc
inc
push
jge
pop
dec
jg
push
pop
push
shrl
inc
push
inc
jne
test
cmpsb
sbb
jge
sbb
movsl
je
es
mov
shll
xor
mov
ss
jae
repnz
cmp
push
fnstsw
push
cwtl
jns
push
jle
stos
jnp
pop
enter
push
inc
in
inc
std
dec
in
sub
xlat
push
sahf
sti
ficoml
icebp
outsl
inc
inc
pop
jb
imulb
fisubl
or
inc
ljmp
fisubs
jle
adc
sbb
paddusw
pop
xor
sahf
outsl
adc
and
cmc
xchg
pop
xchg
mov
das
imulb
pop
push
lcall
cmc
es
adc
sbb
add
sti
dec
int3
cmpsb
jns
cmp
outsl
inc
es
jb
xchg
dec
adc
lods
nop
gs
fisttps
and
cmp
xor
in
daa
jae
decl
inc
lea
push
clc
push
aad
pop
ss
mov
push
sub
out
pop
sbb
jge
ret
in
mov
ljmp
int
adc
inc
test
push
dec
into
cs
imulb
mov
test
rcpps
imulb
mov
mov
shrl
cmpb
loopne
dec
mov
and
add
jg
decl
nop
ds
push
pop
add
xchg
push
loopne
sbb
dec
adc
movsl
mov
adc
lods
mov
jl
js
hlt
fcomi
add
js
ficoms
jmp
sbb
adc
mov
mov
filds
inc
into
cmpsb
nop
sub
push
clc
sub
sbb
push
aad
sbb
xchg
add
adc
in
inc
sahf
aaa
and
mov
into
inc
dec
insl
rclb
cmp
jle
sub
add
mov
scas
add
mov
adc
inc
loopne
loop
in
inc
lock
std
pop
roll
mov
sbb
pop
push
xchg
lahf
adc
sbb
jecxz
addb
sar
dec
aaa
cld
mov
adc
inc
inc
push
pop
js
and
pop
js
aaa
loopne
mov
pop
inc
sbb
xchg
and
aad
dec
add
inc
adc
fmull
loope
dec
and
xchg
xor
mov
pop
mov
aaa
notb
cld
ret
mov
dec
xchg
mov
loopne
out
out
and
sti
jg
mov
push
jnp
jle
das
ljmp
aam
gs
dec
cli
push
sbb
scas
sub
lods
sbb
cli
ja
inc
push
or
cmp
sbb
dec
cmp
cwtl
insl
jg
loope
push
call
in
jbe
mov
mov
mulb
sbb
outsb
mov
mov
shrb
out
sub
xor
scas
cltd
and
arpl
es
jle
ds
call
clc
adc
in
outsb
nop
adc
iret
adc
xor
inc
jne
movsb
sub
inc
inc
adc
lds
cmpsl
test
jecxz
scas
sbb
call
pusha
xchg
mov
addr16
mov
and
sti
inc
popa
push
adc
mov
cmp
clc
sbb
xor
dec
xlat
fistps
inc
jno
shlb
loop
jns
pop
dec
mov
fsubrs
lods
jbe
push
push
push
ficoms
test
jbe
push
adc
lcall
sub
or
xor
adcb
call
jnp
into
dec
call
mov
pushf
fstpt
dec
scas
cwtl
lods
cmc
ret
adc
sahf
nop
jb
mov
notb
imul
jbe
add
int3
pop
sbbl
lock
out
btl
inc
mov
sbb
shrb
and
xchg
jle
xchg
xlat
inc
inc
stos
mov
int3
pushw
and
addl
cmc
sti
mov
jg
lods
jo
adc
je
sub
sbb
unpcklps
int3
mov
cmc
fwait
add
test
ss
mov
dec
fimuls
aaa
or
push
dec
pushl
inc
pop
and
in
add
sbb
push
cmpsb
pop
add
mov
push
adc
cmpsb
scas
mov
pop
gs
inc
dec
xor
and
mov
push
test
push
and
iret
pop
or
cmp
test
pop
rolb
es
adc
fisttps
testb
mov
lock
xchg
lahf
or
cld
cmpsl
pushl
inc
dec
pusha
inc
dec
lods
loop
push
rorb
mov
inc
das
dec
pop
insb
imul
jle
push
hlt
cmp
fadds
popl
rcr
insb
call
jp
int
sbb
inc
loopne
jns
into
push
jns
jecxz
sti
push
int
in
dec
push
rcrb
push
sahf
xor
xorl
iret
mov
addr16
dec
arpl
fcmovnb
fistpl
ret
fwait
out
or
sbb
cs
clc
and
cmp
enter
push
inc
adc
popf
shl
emms
push
cwtl
inc
adc
pop
hlt
sahf
imul
in
push
dec
adc
push
sti
push
adc
xchg
mov
inc
fldt
push
sub
cs
sbb
mov
jle
xchg
fnsave
dec
lock
adc
sti
pop
cmp
jp
mov
xchg
cmpsb
push
and
outsl
add
jno
lea
pop
cwtl
pop
push
pop
push
add
fs
sti
push
divl
outsl
add
popa
jae
add
lods
pushf
testl
or
ss
addps
cwtl
or
shrl
movsb
xchg
pop
insb
call
inc
call
xchg
outsb
out
and
into
xchg
ret
sahf
adc
in
cwtl
sbb
fistl
sti
xor
pop
or
scas
pop
adc
mov
inc
push
call
push
dec
adc
mov
inc
rolb
ds
ja
lock
scas
inc
inc
or
adc
or
insl
sbb
daa
sahf
dec
sbb
mov
mov
fwait
fs
inc
sahf
sub
adc
outsb
ja
ja
xor
dec
into
imul
ljmp
inc
sub
mov
push
xchg
into
push
ja
push
pop
lahf
push
add
push
addr16
cwtl
xor
aas
xor
inc
pop
jnp
xchg
rcrl
movb
testb
fsubl
sub
negl
jge
cs
sub
pop
sarl
aaa
cmp
inc
or
inc
dec
mov
cwtl
and
add
push
cmp
xor
or
jle
jbe
jo
pusha
push
jnp
insb
mov
inc
loope
mov
or
push
pop
in
loopne
movb
xchg
es
out
insb
inc
idivb
cwtl
repz
inc
push
pop
and
push
out
stc
cmpsb
mov
pop
stos
sub
scas
sbb
jne
into
adc
dec
xor
ficomps
sub
inc
dec
mov
and
in
fdivrs
push
out
add
pop
dec
outsb
dec
xchg
pop
push
in
and
fcmovne
xchg
push
adc
xor
pop
fisttpl
aam
inc
xchg
push
push
sar
add
push
nop
inc
pop
inc
clc
jne
rcl
pop
push
aaa
push
mov
sub
mov
inc
inc
and
test
in
push
dec
adc
xor
xor
sti
int
test
clc
jb
fidivl
insl
mulb
roll
push
push
int3
xchg
rcll
push
inc
push
cmp
outsl
add
ss
test
outsl
rcrb
xchg
sahf
mov
stos
jne
lods
mov
cmp
jbe
adc
pop
cltd
inc
decl
xor
gs
and
push
rorb
pop
cmc
sbb
dec
dec
lea
push
lods
jne
jle
adc
push
push
mov
pop
popa
in
shrl
add
pop
hlt
xchg
nop
sbb
mov
add
jg
cmp
cs
or
scas
add
ss
decb
mov
pop
lret
scas
xchg
lods
cmpsb
decb
outsb
int3
jge
call
cmp
xor
inc
lret
aaa
ds
dec
inc
pop
mov
add
es
into
sahf
add
movb
fistps
negl
pop
xabort
incl
lcall
xchg
cwtl
mov
pop
lcall
inc
negb
sti
cmpb
mov
fisttpl
loop
xchg
dec
add
ss
sbb
call
adc
jbe
sbb
jne
pop
xchg
pop
out
sarb
shrl
push
lods
jecxz
aas
cld
es
sahf
rcl
incb
cmpsb
inc
es
xor
int
inc
mov
fistps
decl
in
add
lret
enter
ljmp
pop
mov
jecxz
and
inc
out
and
clc
orl
mov
cmp
add
cmp
sbb
pop
add
lds
insl
fbld
cwtl
rep
roll
mov
sbb
fistpl
movsl
xor
pop
sub
stos
and
test
inc
xor
into
sti
sbb
xchg
enter
push
lea
scas
shrb
cmpsb
mov
stos
cs
lret
jg
mov
adc
and
enter
lods
fdivs
notl
jecxz
mov
ds
incl
sub
jmp
aam
ljmp
cmp
icebp
out
dec
in
out
and
jns
ss
dec
mov
mov
loope
push
add
mov
inc
mov
aaa
push
push
mov
mov
mov
adc
data16
dec
shlb
notb
push
inc
cmp
rcll
cs
jge
loope
dec
mov
or
outsb
mov
sahf
cwtl
cmpsb
pop
into
push
popf
cwtl
dec
outsb
push
add
into
sbb
inc
mov
clc
lahf
add
jle
ss
call
inc
add
pop
scas
sub
jle
dec
call
dec
mov
fiaddl
push
xlat
call
sub
pop
mov
jmp
decl
mov
jg
inc
fldt
push
ret
cwtl
jmp
push
in
icebp
xchg
cs
xchg
push
push
out
fisubl
in
sahf
popa
xchg
ss
push
scas
mov
cmc
in
outsb
jns
dec
jae
push
push
jmp
movsl
imul
mov
pushl
aam
add
outsb
xchg
test
test
jle,pt
add
xchg
rorb
or
mov
clc
filds
call
pushl
push
jbe
test
push
mov
dec
or
outsb
movsb
sti
out
push
cmp
xchg
int3
cld
ljmp
clc
test
ja
scas
sub
and
cltd
adc
cmp
pop
mov
xchg
sbb
or
in
in
inc
data16
outsb
shll
cmpb
xchg
arpl
enter
hlt
dec
ja
add
mov
sahf
inc
movl
flds
fidivrl
pop
mov
test
mov
mov
mov
lcall
mov
sti
aas
sahf
pop
cmpb
push
pop
lea
outsb
lds
stc
scas
cli
jg
dec
mov
cmpsb
push
out
sbb
jle
push
hlt
insl
inc
decl
fstpt
into
loop
into
inc
jno
into
pop
je
out
orb
fcmovnb
push
jbe
push
sti
js
or
inc
mov
fs
scas
aad
add
xor
cmpsb
xchg
loop
add
sbb
adc
adc
mov
repz
and
repz
push
jmp
mov
xchg
push
and
jg
mov
fcmovne
pop
push
sti
lods
outsl
add
aam
or
scas
int3
outsb
lea
int3
inc
cmpsb
ret
sub
adc
fildl
push
ss
test
lahf
fsub
pop
ds
mov
cmpsb
leave
fistpll
xchg
mov
scas
push
das
sbb
into
or
inc
out
notb
pop
xchg
mov
ds
push
inc
in
mov
pop
cmc
add
jns
gs
pop
jmp
jmp
push
es
pop
test
adcb
sahf
adc
mov
pop
into
or
mov
fwait
cmpsb
call
mov
das
sbb
xor
mov
add
xchg
dec
loopne
addr16
mov
pushw
outsb
popf
mov
ljmp
cmp
inc
std
pop
test
data16
adc
pop
in
jle
push
and
fsubs
dec
frstor
into
ret
loop
dec
sbb
nop
jge
push
push
mov
subb
jle
sahf
iret
data16
adc
ljmp
es
adc
xchg
outsb
shrb
call
sahf
sbb
loope
shl
lcall
movaps
mov
test
inc
add
lods
stos
popf
ljmp
cmpsl
xlat
add
inc
jns
sahf
xor
loopne
incl
mov
mov
in
sbb
outsb
cmp
ds
je
and
xor
sti
push
stos
je
mov
push
or
bound
cmpsl
mov
mov
mov
sub
addb
mov
repnz
orb
mov
mov
rcll
jg
mov
dec
add
inc
test
xchg
pusha
or
inc
sti
outsl
push
das
push
in
lea
int3
ja
in
fstpt
and
test
push
dec
cs
sbb
shlb
stos
cmc
xlat
ljmp
popa
jns
loop
xor
sti
add
or
mov
daa
out
int3
mov
cmpb
dec
jns
ss
iret
dec
push
out
icebp
decl
dec
mov
ss
pusha
xchg
aad
jnp
adc
push
out
add
dec
dec
mov
in
xchg
and
lock
shrb
hlt
sarl
sti
or
cmp
fsubrs
out
pop
decl
inc
inc
dec
sub
addl
incb
aaa
jle
cwtl
cmpsl
inc
enter
pushf
push
mov
sti
jo
mov
loope
jb
push
adc
cmpsb
inc
cmp
jno
jo
xchg
sub
mov
fstpt
xlat
xchg
push
je
sahf
push
xchg
lods
xor
mov
cmc
push
add
cld
inc
test
mov
mov
sbbl
add
jno
mov
dec
js
rol
ja
cmp
mov
cwtl
or
adcb
rcll
cmp
repz
cmpsl
pop
cld
cmpsb
fisttps
push
push
sub
mov
mov
push
aas
inc
ret
ss
adc
ss
lods
fnsave
cld
sub
push
dec
aaa
out
call
pop
mov
aam
lods
iret
push
lea
repz
dec
cmc
and
int3
or
sub
sbb
cwtl
std
ljmp
data16
push
push
inc
lcall
xchg
push
fiadds
push
into
sbb
cli
pop
push
daa
and
jecxz
je
insl
and
cwtl
sbb
das
push
jle
inc
ret
ja
jp
out
dec
das
lahf
push
scas
lret
jmp
aam
cld
es
cs
mov
mov
ss
pushw
loopne
sub
decl
leave
add
pop
inc
out
fadds
lock
adc
jnp
add
fwait
ss
or
adc
call
shll
paddb
bound
xchg
emms
inc
test
mov
sbb
fldl
iret
ljmp
clc
inc
sbb
sub
es
imul
inc
jns
ret
xor
outsl
inc
rep
jp
jbe
mov
lahf
or
lahf
cmp
clc
inc
xchg
dec
mov
mov
ret
fildl
mov
jg
ret
xchg
adc
mov
mov
pop
gs
push
and
jge
imul
dec
enter
imul
and
jae
or
inc
pop
out
setle
iret
cmpsb
call
pop
lea
scas
into
jl
sbb
sbb
inc
push
lcall
mov
ss
and
add
add
sbb
sahf
mov
aaa
enter
ss
daa
pop
lret
shrb
mov
xchg
xlat
jecxz
call
aaa
jno
in
push
mov
push
roll
push
in
dec
add
cmpsl
xchg
daa
pop
sahf
cltd
pop
mov
sahf
push
pop
dec
pop
cmp
cmp
or
cmpsb
dec
pop
rolb
lcall
sbb
push
adc
mov
je
push
pop
sub
lret
cmpsb
push
or
or
xchg
hlt
and
scas
push
das
mov
fdivrl
dec
xlat
in
pop
pop
pop
lock
or
jmp
addr16
ficomps
xchg
or
ficoml
sbb
and
js
cmp
jl
add
cmpsl
sbb
xor
outsb
inc
mov
sbb
inc
dec
sub
add
push
dec
cwtl
sbb
sub
add
dec
add
aad
cmp
adc
push
scas
push
sbb
out
xchg
add
push
scas
lods
call
xchg
xchg
mov
mov
shr
pop
out
out
push
decl
bound
cmpsb
int3
cltd
xchg
out
addr16
cwtl
mov
push
lock
adc
scas
inc
test
fbld
jecxz
xchg
ss
icebp
out
out
ljmp
cmp
pop
rcr
xchg
xchg
xchg
outsb
xor
mov
push
les
cmpsl
push
dec
mov
xchg
std
test
mov
jmp
adc
mov
push
xchg
or
add
cltd
cmc
push
std
dec
cmp
push
push
mov
loopne
icebp
idiv
in
mov
outsl
pop
add
scas
outsl
xchg
gs
fisttps
out
mov
aas
adc
shufps
inc
das
or
xchg
iret
scas
imulb
jg
sbb
push
fistps
xchg
dec
enter
call
jb
add
cmpl
into
nop
lods
into
stos
dec
call
dec
test
push
mov
out
pop
pop
es
mov
push
push
and
jg
jne
repnz
xor
xchg
rcll
mov
adc
mov
je
insl
in
xor
mov
por
jae
inc
or
dec
sahf
pop
shl
inc
add
out
inc
xlat
data16
cmp
inc
mov
or
pusha
jle
sub
jle
mov
ss
nop
fwait
or
dec
rolb
pop
sbb
mov
or
rcll
jmp
jbe
xchg
mov
lcall
in
addr16
cs
pop
jno
cmp
push
imul
arpl
andb
out
mov
mov
inc
jmp
popa
xor
cmc
outsl
jne
or
arpl
xor
fmulp
push
enter
enter
mov
dec
xchg
jmp
scas
arpl
scas
loopne
dec
divps
je
inc
mov
xor
testb
xor
out
daa
xor
jl
mov
adc
pop
adc
idivl
adc
dec
xchg
fisubrs
xchg
fwait
mov
addl
outsl
adc
outsb
test
xor
repnz
push
pop
pop
inc
pop
lods
and
int3
out
xor
xor
add
bound
das
push
int3
movsl
outsb
jo
movsl
mov
outsb
xor
adc
fistl
fidivs
mov
sub
fildl
mov
scas
dec
rorl
fs
push
push
add
jbe
std
or
cmpsb
hlt
mov
jb
add
or
je
mov
pop
cmpb
out
xchg
ss
push
xor
inc
jmp
mov
loope
sahf
negb
lods
cmpsl
fisttps
out
jne
dec
xor
data16
push
lods
inc
movsl
addl
sahf
sahf
lret
inc
or
ss
stos
test
ror
in
add
fisubs
lock
xor
test
pop
ds
cmpsb
jp,pt
inc
xchg
inc
sahf
lea
mov
push
sub
and
sub
xor
clc
add
dec
sarb
je
mov
add
cwtd
sti
cmc
xlat
cmp
inc
lahf
xchg
mov
cmp
icebp
ljmp
mov
sbb
pop
push
int3
lret
lea
sub
mov
pop
push
mov
ret
out
pop
enter
mov
push
fsubrl
ss
int3
mov
ljmp
pop
enter
pop
popa
xchg
mov
cmp
sahf
imul
enter
mov
lods
test
push
adc
and
mov
mov
repnz
rcll
lea
popa
scas
cmpsb
push
fldl
adc
imul
mov
pop
lcall
jmp
call
jmp
enter
scas
rcrb
push
fcoml
jns
push
and
and
jbe
and
pop
mov
out
xchg
test
lods
inc
push
and
fsubl
outsl
out
out
push
mov
ss
decb
std
mov
cs
das
sarb
arpl
outsl
ret
test
lahf
add
jmp
sahf
xor
ljmp
loop
test
lcall
push
add
sarl
rcl
adc
das
aam
data16
clc
dec
stos
adc
out
and
lcall
roll
je
das
leave
mov
in
inc
mov
mov
lahf
inc
inc
push
cmp
sti
stc
daa
ljmp
test
test
jae
lahf
cmpl
sbb
pop
pop
mov
cmp
add
dec
icebp
pop
cli
fistpll
rcrb
shlb
push
inc
cwtl
cmpsl
sti
aas
je
push
jle
filds
xchg
pop
sub
pop
jbe
push
stos
sub
outsb
rcrb
jp
ret
jbe
incl
cld
scas
sahf
call
xchg
push
sarl
enter
call
mov
xor
in
jmpw
fcomip
push
int3
inc
test
cmp
sahf
adc
xchg
insl
xchg
push
movsb
outsb
xchg
ficomps
popa
ret
adc
pop
or
push
inc
repnz
ss
lock
popl
lcall
addr16
push
push
shr
outsb
inc
pusha
xor
add
xchg
dec
sarb
and
in
roll
aam
xchg
inc
lea
idiv
data16
mov
sub
inc
sub
jns
sahf
lock
or
int3
loop
sub
test
jle
cmpsb
inc
ljmp
scas
les
scas
sti
ret
cmpsl
xlat
adc
ja
sub
adc
mov
adc
adc
push
lods
imul
mov
add
out
cs
mov
mov
xchg
sub
call
imul
ds
scas
loope
pop
enter
lods
leave
addb
or
in
loopne
shrl
je
cmpsb
movb
pop
and
clc
sub
jp
jecxz
and
ror
je
test
mov
cmpsb
sub
aad
pop
jecxz
jg
jl
and
dec
mov
test
shrl
icebp
fiaddl
clc
adc
rorb
js
insl
mov
inc
aam
jo
or
dec
lahf
cs
mov
push
into
pop
mov
add
pop
test
jl
popf
sbb
dec
push
xlat
out
cs
test
lods
cmp
jns
dec
and
cmpsl
ss
jbe
int3
push
shrb
out
into
aad
cltd
jb
mov
xor
xor
rolb
push
xchg
push
sub
jmp
mov
xor
outsl
lods
dec
push
adc
inc
inc
push
jp
loopne
pop
push
lahf
inc
pop
push
inc
fsubrs
adc
xchg
pop
and
inc
dec
pop
ss
inc
loopne
or
xor
enter
sbbb
mov
popa
mov
inc
mov
filds
xchg
out
mov
jne
jl
sub
cmpsb
scas
je,pt
mov
push
imulb
clc
ffree
fwait
ds
in
push
jno
xor
ja
sahf
into
aam
in
push
mov
fsubrs
scas
fmulp
jb
out
mov
and
adc
fcoms
add
int
ret
fidivrs
jl
mov
cmp
inc
test
add
xchg
pop
outsb
pop
sub
adc
ds
pop
dec
push
das
adc
add
insl
out
popl
mov
movsb
test
mull
clc
xchg
xor
cmp
lods
out
and
es
xchg
data16
stc
ja
mov
sti
push
mov
dec
rcrb
sbbb
sub
dec
push
mov
loopne
pop
out
out
sahf
dec
adc
int
add
nop
stos
jge
push
push
dec
insl
out
jnp
push
movsl
pop
jo
into
js
out
inc
or
push
jbe
gs
and
push
aaa
adc
push
push
xor
inc
sub
push
imul
dec
movsl
jns
dec
aas
xor
mov
ds
lret
ret
inc
notb
das
enter
fiadds
adc
xor
mov
js
outsb
adc
test
or
in
stc
das
inc
push
das
cld
shrl
pop
pop
in
mov
out
xchg
fs
push
inc
movsl
xchg
mov
pop
bound
out
push
outsb
aaa
mov
xor
sahf
mov
dec
test
adc
add
inc
scas
inc
and
call
push
mov
push
adc
sbb
test
into
test
add
and
inc
or
add
inc
mov
jp
push
in
daa
pop
cs
cmpsb
push
iret
push
sbb
es
dec
notb
add
adc
leave
sub
jns
pusha
loopne
dec
addr16
out
aad
push
ficomps
add
fwait
mov
ja
mov
stc
push
cmpsb
lahf
push
xchg
sbb
push
mov
and
cmp
push
ja
imul
mov
xor
outsb
enter
jl
push
out
pop
push
cmpsl
aam
mov
lock
test
jecxz
push
es
les
loopne
and
ja
loope
push
pop
add
fdiv
jb
or
and
inc
shrb
sahf
loope
int3
in
lea
push
bound
jbe,pn
sarb
jnp
inc
insl
pop
sti
sbb
cmpsb
sbb
add
scas
xor
fs
xchg
mov
inc
mov
push
int
ffreep
aas
push
push
sub
int3
pop
lods
jge
xchg
cli
mov
adc
das
into
inc
pop
mov
fisubrs
nop
push
aas
push
mov
test
fcoml
popa
jns
je
or
mov
loopne
popa
mov
sub
xor
iret
mov
mov
and
je
pop
out
andl
stos
movsb
pop
push
cmp
add
test
nop
pushf
add
fmull
push
stc
add
add
popa
pop
mov
jmp
js
les
xor
push
adc
pusha
sarl
inc
mov
jbe
xor
mov
sbb
mov
mov
mov
out
inc
stos
cmpsb
fistpll
cs
add
aaa
jne
scas
lds
dec
test
jecxz
lods
aam
xchg
or
mov
fistpll
divb
pop
sbbl
divb
into
xorb
std
mov
mov
scas
mov
stos
test
add
push
ret
scas
jbe
out
mov
xchg
push
push
jle
add
incb
into
and
cmpsb
sahf
inc
push
clc
inc
add
mov
mov
inc
mov
sub
ret
pop
cmp
push
sub
rclb
clc
sub
aas
insl
call
bound
clc
mov
dec
pop
repnz
jns
adc
cmpsb
sarb
adc
movsl
push
pop
xor
push
pop
nop
mov
sub
lock
dec
into
enter
into
push
lods
rcrl
mov
xor
jmp
daa
je
jp
pusha
adc
xchg
cmp
mov
outsb
jbe
clc
out
push
lods
pop
push
inc
test
jbe
test
pop
jge
ss
pusha
addr16
iret
stos
stos
fiadds
push
mov
mov
lods
orl
nopl
add
popa
sahf
sub
push
cmp
pop
jns
mov
jp
inc
dec
out
movsb
cmp
rcll
loope
jbe
sub
pop
inc
sbb
sbb
add
jbe
lcall
lods
prefetch
or
push
sti
lret
test
movsb
pop
cmpsb
in
xchg
movb
ret
scas
mov
add
jg
pop
scas
inc
add
adc
push
test
stos
push
jmp
cld
mov
inc
nop
fistl
xlat
pop
loopne
add
dec
popf
out
stos
ret
clc
mov
in
dec
stos
jne
mov
dec
add
loope
fisubrs
data16
add
ja
popa
scas
xchg
aaa
ja
call
jbe
loope
adc
ret
push
dec
push
aam
mov
adc
call
push
add
rcll
push
int3
mov
arpl
adc
mov
push
xor
mov
or
adc
and
cmpsb
adc
adc
js
fsts
lcall
mov
jmp
adc
lods
adc
sub
mov
rol
cmp
add
stos
lods
aas
popf
mov
pushf
fdivr
sub
callw
cmpsl
in
pop
add
lahf
test
imul
lods
js
outsb
mov
imul
test
rclb
rolb
inc
add
dec
into
cs
popf
ret
shlb
aad
rcr
aaa
push
or
into
rol
or
test
test
mov
orl
add
cld
adc
sti
cmc
push
fstpl
ss
aad
xchg
cs
pop
shlb
nop
mov
jnp
add
xlat
dec
divl
xchg
cmpsb
lds
cltd
inc
jne
lock
add
inc
push
scas
int3
pop
mov
jmp
jmp
lret
inc
scas
into
xchg
mov
pop
xor
fldt
sti
or
pop
inc
push
lret
subb
ret
cmp
pop
push
push
pushf
push
enter
rclb
adc
xor
aad
notb
fmulp
mov
sbb
or
lret
cmpsb
testb
or
mov
insb
jmp
push
adc
cld
sbb
enter
test
icebp
insb
movsl
stos
aaa
push
addl
sti
test
adc
sub
lods
imul
push
popl
mov
stos
xor
outsb
out
pop
inc
pop
mov
gs
insl
add
mov
into
decb
repnz
add
or
fsubrl
ds
sti
mov
and
cmp
and
sbb
sub
sbb
mov
into
adc
adc
movnti
cmp
adc
dec
insl
subb
cwtl
lock
mov
add
mov
enter
sti
inc
sbb
outsl
dec
push
push
movsb
loop
jge
out
fildll
or
outsl
xlat
pop
fisttps
scas
lret
inc
in
aas
mov
iret
push
enter
movsl
or
mov
sahf
push
inc
sub
mov
and
pop
clc
lds
fs
push
or
clc
ja
push
adc
sbb
outsb
movsl
xchg
fcomip
pop
inc
sub
daa
imul
push
cmp
pop
movsl
jbe
pop
lcall
out
orb
and
pop
xchg
sarl
cli
add
mov
call
andl
mov
cli
outsb
push
mov
lock
out
stos
push
or
xchg
mov
dec
or
mov
fs
jb
in
mov
rcrl
xor
mov
mov
rorl
cmpsb
jns
add
cmp
inc
das
daa
je
inc
rol
mov
popa
inc
pop
rcrl
jbe
stos
xorl
fcomp
add
or
cmp
cmpsb
push
mov
in
xor
pop
add
scas
ss
sahf
push
push
jo
lods
out
and
cmpl
mov
sbb
sub
jbe
lahf
adc
dec
out
test
jle
aam
cltd
ret
add
mov
mov
inc
pop
scas
outsb
loopne
fstl
je
das
lods
jae
cmpsb
jecxz
shl
aam
out
cmp
push
iret
push
sti
les
push
fcomip
or
cmp
inc
mov
jecxz
ret
add
es
adc
inc
jnp
pop
sahf
xchg
push
pop
inc
test
dec
lods
add
mov
pop
cmpl
push
push
test
pop
jns
stos
mov
cmp
nop
les
add
sahf
or
pop
or
in
add
repz
xchg
fcoml
push
sub
stos
jle
stc
jo
fs
cmpsb
into
push
es
sub
adc
xchg
push
cs
or
sarb
cs
sbb
clc
cwtl
cmp
pop
inc
clc
and
xchg
sub
jg
sub
dec
into
imull
mov
decl
sub
or
in
mov
inc
or
inc
das
mov
aas
cmpl
lahf
add
sahf
add
test
hlt
jne
leave
int
mov
jg
loop
pop
push
add
decw
or
aaa
sub
jmp
or
jbe
push
bound
push
or
addr16
push
out
mov
jns
dec
cs
mov
movsb
aas
xor
das
test
inc
pop
shrb
enter
cld
mov
movsl
push
push
and
mov
xor
aam
sbb
enter
mov
xchg
and
js
jg
add
test
pop
addr16
mov
jl
enter
dec
dec
adc
pop
cli
or
sub
aam
addb
adc
loop
cmc
xor
adc
dec
adc
adc
jl
add
lea
or
cmp
or
outsl
sub
jno
fcmovnb
mov
xor
cmpsb
ja
es
adc
mov
shlb
jle
mov
adc
pop
adc
repz
pusha
loopne
imul
aad
lcall
or
push
mov
fisubl
outsl
push
mov
les
and
xor
mov
loopne
dec
aas
lods
and
xchg
sub
sbb
inc
cld
fstl
cmpsb
push
push
das
push
ds
cmp
push
and
insb
cltd
and
jg
pop
das
jne
and
xor
mov
sub
addr16
hlt
pushl
jno
js
lds
adc
push
push
or
and
addl
ss
cwtl
jl
nop
mov
jbe
or
add
xor
and
sbb
mov
jp
push
fistl
in
ret
add
insl
push
adc
pmuludq
icebp
xchg
add
dec
jle
scas
xchg
into
sub
dec
push
mov
push
add
lds
out
push
inc
in
out
fdivrl
mov
mov
nop
push
inc
inc
data16
in
inc
push
jl
and
jno
cmpb
fdivr
adc
sbb
dec
cltd
gs
mov
into
inc
push
out
test
fdivrp
xchg
inc
popa
movsl
sub
stos
push
pop
mov
mov
rep
insb
ss
int3
and
sub
jg
push
pusha
movsl
scas
es
es
cmpl
adc
jg
repz
cmc
mov
push
ss
mov
out
repz
pushf
lret
pushf
out
fcoms
xchg
clc
mov
std
lea
bound
cltd
stos
lods
add
das
dec
lahf
mov
jnp
fildl
jmp
jge
and
inc
and
repz
insb
out
add
ret
aad
lcall
push
cmp
inc
mov
jbe
add
cmp
outsb
rcrb
test
and
scas
mov
je
xchg
std
into
mov
or
cmpsl
ret
push
pop
add
xchg
jecxz
mov
mov
mov
pop
into
in
mov
clc
sub
inc
out
adc
cs
xlat
lods
mov
push
inc
pop
add
cmp
jp
add
pop
jl
pushf
ljmp
clc
jns
cmpl
sahf
add
fisttps
add
ss
inc
test
repnz
cmp
adc
ljmp
sbb
jne
stos
cmp
int3
mov
ljmp
test
adc
xchg
shrb
dec
das
pushf
inc
fistpll
xchg
movb
jmp
jno
xor
clc
cmpsl
push
hlt
sti
cmpsb
cmp
pop
outsb
test
lret
sti
in
lock
mov
jg
dec
fisttpl
mov
std
je
cld
inc
mov
jle
stos
dec
in
inc
lcall
mov
adc
and
mov
das
stos
popf
pushf
rclb
inc
repz
ret
shrl
in
fs
enter
std
fadd
fldcw
adc
lret
das
mov
mov
std
testl
mov
jnp
mov
mov
jmp
lret
cmp
mov
stos
rorl
aas
push
movsl
pushf
fldcw
in
mov
stos
stc
stos
call
pop
xor
inc
sar
mov
stc
in
popf
aad
xchg
jg
stos
jno
fscale
inc
lret
xchg
pop
mov
xchg
sbb
stos
jg
in
pop
jle
std
fs
xchg
stos
adc
lds
stc
cld
stos
fstps
leave
std
daa
je
cltd
stos
cmc
mov
pop
jle
int
push
push
les
outsb
adc
stos
pushf
pop
cmc
pushf
in
int3
stos
pop
test
std
pushf
jle
in
lcall
imul
stc
in
pop
loope
stos
sahf
insb
in
lret
xchg
pop
jle
stos
call
push
mov
pop
jle
in
pushf
sbb
adc
in
out
pushf
ret
sub
sbb
std
out
pop
xor
cmc
dec
sbb
sbb
mov
xchg
mov
std
lret
adcl
test
pushf
mov
inc
cmp
cmp
or
cmp
movsl
cmpsb
or
lea
lods
pop
and
ret
pop
lcall
int3
pop
inc
stos
xchg
pushf
add
out
lcall
xchg
pop
incb
stos
jge
jl
xor
stos
xchg
lret
push
jle
js
daa
arpl
stos
and
dec
fwait
insb
adc
cmpsb
popa
push
cld
or
sub
add
bound
repnz
add
pop
adc
pop
js
and
push
pushf
mov
repnz
or
insb
stos
inc
mov
xor
pop
jle
or
nop
xorl
inc
pop
jle
in
iret
aam
stos
jmp
jecxz
stos
cmp
int
std
or
xchg
dec
das
mov
inc
stos
push
out
std
pop
xor
stos
mov
adc
pushf
sub
std
pop
loopne
repnz
das
sub
iret
repz
stos
sbb
jmp
jne
pop
jae
popa
sub
test
imul
push
mov
push
adc
loop
ds
call
lea
cmp
jbe
loopne
std
shl
in
jno
ss
jne,pn
pop
xchg
sbb
rol
pop
and
mov
jbe
popa
xchg
push
out
dec
insl
loop
cli
jmp
push
cwtl
cmpl
xchg
cmp
push
ficoms
cmp
out
inc
mov
jmpw
lods
cmp
xchg
int
pushl
test
je
push
jnp
jge
outsb
aas
inc
loope
cli
scas
popf
lods
pop
mov
mov
jns
ret
lahf
lret
fnsave
fiadds
jne
int
and
pusha
lahf
sub
cld
adc
jno
inc
stos
xchg
xor
add
cli
adc
adc
sub
inc
js
pop
fidivs
lods
dec
aam
loope
xor
aas
xor
jne
mov
sahf
dec
mov
repz
jl
inc
jge
stos
xor
fnstenv
mov
outsl
ss
cwtl
ljmp
pop
loop
mov
inc
xor
dec
xlat
loopne
iret
cli
dec
repz
leave
mov
and
std
inc
cwtl
or
lcall
das
and
sti
pop
sti
xchg
xchg
clc
inc
fistps
lea
out
loopne
mov
dec
pop
stos
cmc
pop
aam
jle
inc
pop
mov
mov
test
mov
enter
stos
out
outsb
fstpl
fstpt
add
pop
fisttps
cld
nopl
hlt
inc
sahf
clc
clc
daa
fistpll
lock
mov
sbbl
sub
lods
jbe
mov
loopne
icebp
in
aaa
inc
sub
addr16
outsl
inc
adc
push
ljmp
pop
js
loop
fidivrs
jns
scas
in
cmpsl
test
adc
lock
jbe
daa
cmp
dec
loop
push
mov
cmpsb
dec
mull
aas
cs
mov
into
aad
add
xchg
je
iret
xor
data16
pop
je
rorb
add
mov
int3
jne
out
dec
clc
xor
dec
ret
outsb
jmp
push
ret
and
mov
jbe
addb
mov
xchg
add
ret
inc
sub
mov
das
fstpt
dec
jg
clc
inc
jbe
xchg
sub
loop
aad
add
fsubl
stos
test
movsb
or
mov
mov
sub
imull
mov
push
enter
mov
cmpsb
push
mov
loope
inc
aaa
xor
sahf
mov
mov
mov
fcmovne
daa
popa
and
in
lods
mov
es
pop
fistpl
mov
mov
lock
pop
mov
aas
mov
dec
jbe
inc
push
push
add
jg
push
ret
lock
push
icebp
mov
fidivrs
mov
sbb
fcom
xor
jbe
inc
rorl
and
mov
xchg
ds
shrl
pusha
jle
cmp
pop
or
mov
mov
movsl
pop
jbe
popa
ds
subl
push
jmp
sahf
push
jne
into
cmpb
xlat
cli
adc
in
sbb
ja
outsb
movsb
pop
into
cs
xchg
jle
push
pop
mov
ljmp
jge
loope
test
loopne
data16
cmp
push
lcall
inc
lea
insb
divl
mov
push
nop
push
enter
scas
add
outsl
push
sti
cmpsb
aaa
inc
out
cmpsl
clc
adc
mov
dec
pop
add
dec
pop
sub
sbb
push
in
sarb
pop
gs
lods
pop
add
pop
push
cwtl
and
popa
out
mov
add
cmp
jbe
lods
mov
fistpll
dec
jbe
cmc
mov
inc
cmp
mov
sti
rol
or
jbe
pop
push
popa
pop
push
push
negb
pusha
xchg
lret
sbb
pusha
test
xor
inc
and
in
add
mov
mov
scas
push
xchg
rcr
cmp
xchg
inc
call
xchg
aaa
inc
js
es
jbe
call
nop
outsl
and
sbb
gs
mov
lcall
mov
ret
out
nop
sbb
cmpsl
lock
or
and
inc
push
xchg
incl
adc
mov
sbb
je
mov
and
push
movb
movsb
das
pop
subl
push
popa
sbb
aas
aaa
or
stos
cs
adc
jns
fcmovnb
jg
xor
dec
dec
lods
call
inc
xchg
lret
pop
xchg
add
sbb
test
cmp
out
xlat
outsb
test
sub
js
inc
xchg
push
int3
lahf
gs
dec
rep
mov
push
xchg
testl
outsb
add
adc
inc
push
pop
sbb
pop
clc
and
test
jle
call
outsb
and
loop
push
fucom
inc
call
hlt
pop
out
mov
aaa
iret
bound
out
or
fs
inc
cmp
aad
add
adc
sbb
outsl
push
mov
jb
rclb
pop
pop
fwait
push
push
ss
in
adc
inc
jle
nopl
sbb
or
pop
dec
pushw
outsb
jmp
pop
adc
add
cmpsb
jbe
add
mov
or
sahf
out
or
mov
dec
cmpsl
out
shlb
in
mov
rorl
fildl
jne
scas
xchg
lods
sahf
push
cmpsb
std
decl
xchg
and
adc
pop
cmpsl
in
or
adc
pusha
push
jg
fsubs
push
in
ss
xor
pushl
scas
aad
addr16
lods
adc
and
cwtl
fistpll
stos
decl
into
jmp
sbb
cmp
clc
out
dec
xchg
je
pop
rclb
testb
rorb
sti
jae
cmpsb
sti
adc
shld
push
int
pop
lods
data16
push
sbb
add
add
pop
out
ds
ja
rol
fcmovne
gs
fbld
adc
into
outsb
scas
lcall
push
inc
ss
loopne
ljmp
pop
push
mov
pop
enter
cmpl
test
xchg
inc
mov
sub
dec
into
in
inc
fildl
es
add
adc
mov
push
sub
mov
sub
and
sti
pusha
xor
jns
jo
or
adc
fmull
xor
sub
ret
call
subb
sbb
and
lods
add
mov
mov
jne
inc
inc
or
rolb
decl
push
adc
cmpsb
lock
neg
add
jo
dec
pop
pop
xchg
cmp
push
xchg
pop
int3
sub
add
add
es
je
testb
mov
inc
jbe
mov
andl
push
les
mov
cmpsl
test
aaa
outsl
push
cmc
cwtl
and
mov
rcrb
arpl
add
jno
add
test
cmc
push
jae
jbe
cld
add
arpl
cmp
jbe
sbbl
push
lods
jg
rcr
mov
add
outsl
ss
xor
ss
add
lods
mov
sbb
je
shlb
rorb
inc
jo
pop
aaa
xchg
dec
sti
jbe
mov
scas
xor
sti
data16
and
fidivl
cmpl
push
sahf
rorb
icebp
outsl
inc
outsb
dec
mov
push
das
inc
insb
push
dec
push
mov
enter
adc
cmpsb
sbbl
push
mov
rolb
dec
adc
or
lahf
lcall
push
push
movsb
mov
dec
cmp
add
cbtw
or
sbb
sbb
push
and
sub
and
pop
xchg
filds
sub
xchg
sbb
xchg
iret
and
cmpsb
arpl
lock
addr16
mov
jl
xchg
addr16
mov
inc
sbb
inc
mov
xor
loope
xchg
test
cmpsl
mov
adc
and
fwait
cmp
data16
push
jae
in
jg
out
cmp
jnp
repnz
lods
mov
inc
jle
jmp
inc
sbb
dec
inc
mov
push
pop
fisubl
pop
push
shrb
mov
add
sbb
outsb
push
out
jb
addr16
fnstsw
adc
push
add
push
add
xor
sub
push
and
mov
lods
js
xor
lods
sbbl
jns
call
aam
les
jle
adc
fwait
sbbb
outsb
repnz
fimuls
sub
add
xlat
int3
cwtl
adc
sbb
inc
push
out
inc
and
push
xor
int3
adc
cmp
mov
out
rolb
dec
xchg
in
and
adc
jno
pop
in
dec
loopne
into
fsubl
sti
jge
pop
mov
loop
add
xor
sub
dec
scas
and
sahf
cmp
lods
jmp
push
inc
mov
mov
push
mov
data16
inc
jbe
sub
mov
adc
dec
pop
cmpsb
dec
jp
ss
pop
inc
dec
clc
pop
mov
addr16
jns
fstp
jnp
insb
fs
push
mov
or
jle
nop
jecxz
into
push
popf
jns
mov
je
out
or
and
aam
xchg
addr16
add
push
sbbb
cmp
xchg
cmpsl
add
pavgb
fadds
xchg
mov
sbb
fwait
push
push
dec
loopne
pop
mov
lds
out
jne
lods
adc
and
dec
pop
cltd
pop
push
ja
mov
lock
adc
pop
mov
pop
sbb
enter
loopne
arpl
sub
sub
pop
add
inc
xor
jmp
push
push
pop
dec
push
ja
mov
vxorps
incb
aas
push
mov
out
outsb
add
and
xchg
outsb
jo
decl
cmpsl
xchg
inc
nop
cmpsl
pop
insl
and
rol
inc
into
adc
or
dec
jmp
and
cwtl
xchg
mov
mov
pop
ljmp
xor
les
loop
inc
aad
or
es
lea
scas
movaps
and
pop
icebp
jmp
cmpsl
xchg
dec
sub
out
aas
lods
arpl
aad
add
mov
lods
lcall
dec
xchg
popa
inc
mov
adc
out
pop
fdivr
call
setp
jle
push
cmp
sbb
insl
mov
sti
pop
out
push
add
fcomi
pop
inc
aaa
into
fwait
daa
pop
outsb
movb
adc
mov
outsb
sbb
inc
clc
outsl
and
movb
int3
rcrl
jnp
xchg
hlt
iret
in
and
xchg
mov
fs
fcoms
and
lss
push
jns
adc
gs
out
inc
inc
not
push
inc
adc
pop
add
mov
mov
outsb
xchg
push
and
cld
int
imull
out
add
int
negb
ret
adc
fs
mov
lods
cmp
int
stos
push
push
fldt
iret
lret
push
mov
test
pop
test
addr16
sahf
xchg
or
and
pop
jns
pop
sub
test
xor
xchg
lret
fwait
dec
add
lods
push
sub
stos
rolb
out
sahf
push
sahf
xchg
test
popf
pop
sti
std
pop
out
pop
jns
enter
enter
sub
or
jle
jbe
inc
sub
lahf
xchg
addr16
pop
and
mov
test
cld
pop
push
sub
lret
inc
mov
mov
xchg
add
and
out
xchg
pop
jns
sub
pop
add
dec
in
insl
sbb
pop
jns
and
popa
in
inc
jl
lahf
xchg
lods
push
popa
addl
dec
movsl
bnd
mov
cmp
cld
add
xchg
lret
inc
stos
sbb
lds
movsl
push
test
xchg
mov
nop
add
sub
push
and
pop
jbe
jle
mov
lods
add
es
sub
int
push
or
inc
ret
adc
fwait
call
add
jae
adc
push
mov
add
bnd
ss
mov
and
mov
cmp
and
into
xchg
pusha
ss
lock
add
or
lock
push
fnsave
outsl
mov
adc
dec
sarb
or
sbb
push
push
clc
and
mov
mov
mulb
and
out
cmp
push
das
into
pop
imul
add
sbb
cmp
ljmp
and
fmulp
push
and
pop
cmp
addr16
jg
mov
dec
jne
cmc
rol
xchg
push
cmp
pop
iret
test
adc
es
pop
xor
pop
dec
notb
mov
or
mov
sub
ja
pusha
clc
inc
fs
inc
out
or
pop
push
push
es
jns
xchg
clc
es
inc
mov
xchg
xor
push
and
insl
adcb
or
lock
jbe
pop
sub
cmp
jae
outsb
insl
cwtl
xchg
loop
enter
inc
adc
jg
fisttpl
dec
push
pop
loopne
mov
add
xlat
scas
push
cs
mov
lock
xor
and
xorl
aas
addl
scas
xchg
test
mov
fisttpll
or
lds
add
shll
out
mov
add
push
nop
pop
adc
inc
test
push
in
adc
into
or
in
jo
js
inc
cli
imul
pop
rclb
xchg
sahf
shll
nop
fdivp
jns
outsb
push
sahf
fwait
push
jns
jle
pop
and
es
cld
nopl
imul
lcall
rol
inc
push
sub
push
pusha
into
adc
dec
cwtl
fisubrl
test
dec
pushl
cwtl
sub
mov
cmp
scas
xchg
mov
push
nop
movnti
les
notl
pop
cld
decl
push
clc
nop
in
outsb
cltd
pop
scas
int3
popa
scas
xchg
mulb
dec
push
in
inc
pop
or
imulb
lcallw
aaa
es
cld
add
xchg
bound
aaa
ds
sbb
mov
adc
cmpsb
arpl
mov
loope
push
and
xorl
aad
pushl
mov
sub
and
insl
sub
push
xor
gs
mov
pop
xchg
push
ss
jmp
sahf
daa
fcoml
fnstsw
mov
cmpsl
nop
push
nop
sbb
inc
and
mov
aas
scas
jmp
xchg
test
mov
testb
and
popa
inc
shr
lds
mov
adc
shlb
mov
pop
inc
ljmp
loope
inc
into
push
sbb
push
enter
or
sub
lahf
push
xor
rclb
mov
in
pop
inc
insl
cmc
pusha
add
fwait
cli
xor
jmp
cmc
cmp
mov
nop
movl
xchg
jnp
les
mov
decl
dec
xchg
cmc
cmp
data16
ss
adc
sub
or
lods
imul
mov
int
push
or
iret
repz
add
inc
add
sub
and
or
cmp
adcb
cmpsb
fwait
push
cmp
cmp
sbb
fs
call
mov
sbb
pop
pop
pop
gs
int3
push
addr16
sub
mov
dec
inc
xchg
insb
jge
inc
std
dec
rorb
sbb
aam
jmp
and
jmp
es
or
test
out
into
es
pop
fidivrs
outsb
and
call
dec
jmp
push
adc
push
inc
xchg
dec
js
adc
sahf
dec
sub
adc
out
pop
incb
into
or
int
outsl
sub
nop
pop
push
adc
in
inc
add
scas
or
cmp
and
jbe
pusha
lret
call
mov
out
adc
mov
xchg
add
push
or
inc
inc
and
push
fidivs
push
cmpsb
jno
sbb
repz
aad
xchg
loop
insb
sub
mov
out
xor
sub
push
decb
adc
popa
push
cmpsb
fiaddl
cmpsb
pop
jle
cmc
test
mov
jbe
shl
sbb
adc
lds
add
fildll
push
cmp
je
int3
or
add
jne
push
add
mov
adc
cld
mull
rdpmc
in
mov
dec
movsb
outsl
push
push
jge
ja
jb
adc
shl
dec
mov
out
adc
push
popa
jb
popa
std
adc
push
out
pop
pop
or
mulb
lods
or
or
pop
aaa
insl
jns
jbe
adc
push
dec
and
pop
ret
mov
int3
push
gs
push
clc
mov
cli
es
cmp
call
popa
fildll
add
fstl
add
push
pop
add
adc
pop
inc
push
and
adc
push
adc
jle
add
and
mov
aad
cmp
dec
subb
outsb
ds
dec
rclb
cmp
sbb
pop
mov
int
sub
imul
inc
inc
aaa
jo
shl
outsb
jnp
adc
adc
adc
mov
push
int3
xchg
cld
fiadds
mov
mov
jns
jmp
sti
and
mov
adc
xchg
jo
xchg
sti
or
mov
or
jg
enter
pop
jns
adcl
aad
andl
pop
lods
fwait
add
jge
sbb
push
in
add
lods
push
or
cwtl
or
lcall
decb
loopne
lods
fiadds
pop
adcb
popa
movsb
adc
repz
cmc
dec
sti
call
push
nop
adcl
mov
sahf
push
push
sub
pusha
mov
dec
roll
icebp
xchg
dec
pop
lods
scas
lcall
jbe
mov
inc
fwait
mov
and
lock
sub
mov
lods
mov
adc
inc
sub
movsb
mov
loop
pop
sub
in
xor
scas
pop
sbb
call
sub
popa
pop
sbb
bound
repz
ror
cs
sub
ds
xor
rolb
pop
cmpsb
xchg
jbe
negb
popa
aaa
jbe
pop
add
fisubrl
inc
fildll
jbe
nop
loop
scas
dec
popa
subl
movsl
jno
mov
call
pop
dec
jmp
outsl
inc
dec
inc
push
hlt
addr16
nop
out
sub
loopne
iret
dec
int3
adc
sahf
inc
in
in
inc
cwtl
loope
push
lcall
mov
adc
push
nop
out
jg
repz
movsb
pop
lcall
jnp
daa
in
test
int
fimull
lcall
out
pop
jg
and
pop
cmpsl
mov
push
scas
xchg
or
rcll
mov
fimuls
psubsb
fildl
repnz
int3
sbb
out
lock
lret
pop
xor
mov
nopl
jecxz
dec
pop
mov
sub
xor
sbb
mov
mov
adc
scas
cs
pop
mov
mov
iret
ljmp
push
xchg
push
or
scas
push
mov
loop
dec
and
pushl
in
and
imul
mov
iret
data16
pop
jmp
std
ljmp
cwtl
or
iret
jnp
cwtl
sub
scas
inc
scas
pop
mov
rorl
or
inc
fucomp
sbb
xchg
push
lock
pushl
jne
jnp
xchg
adc
push
gs
dec
push
push
push
push
sahf
out
sahf
pop
pop
fs
jne
or
jns
jg
mov
or
dec
inc
ljmp
inc
add
sbb
adc
mov
adc
pop
in
push
dec
or
pop
adc
inc
push
pop
cmpsl
scas
dec
fs
sahf
xchg
clc
pop
or
call
jmp
or
loopne
xchg
fmull
cmp
enter
jmp
daa
nop
mov
repnz
jmp
stc
mov
loopne
loope
enter
adc
sbb
xchg
in
xchg
and
inc
test
aas
fiaddl
out
iret
jae
lea
fnstcw
mov
pop
push
pop
shrb
addr16
pop
jbe
es
idiv
decl
movsb
insb
push
dec
movsb
xor
scas
sub
in
and
test
lods
and
and
add
sub
call
pop
adc
arpl
inc
sub
xor
sub
lock
test
call
cld
dec
xchg
cmp
inc
cmpb
push
jle
dec
out
lahf
pop
or
add
out
ljmp
push
out
pop
jno
dec
imul
call
call
aad
in
mov
int3
mov
inc
les
aas
xor
insl
lcall
push
add
jg
fmuls
inc
inc
mov
outsb
or
je
subl
dec
xchg
inc
rolb
jno
lcall
aaa
push
ds
in
shlb
cld
insl
cs
adc
pushl
jg
lods
cli
outsb
adc
and
rcrl
xchg
fbstp
pop
jmp
jnp
movsb
xchg
out
test
jns
pop
adc
outsl
imul
xor
incl
sub
and
inc
insb
daa
fistl
push
sbb
jg
test
mov
jmp
xchg
movsb
pop
imul
cmpsl
aad
cwtl
popa
pop
mov
dec
pop
data16
popa
mov
out
dec
mov
fstpt
cwtl
add
pop
xor
jbe
pusha
mov
pop
outsb
adc
add
out
test
pop
mov
js
shrl
data16
mov
aaa
testl
aam
or
andb
adc
add
cmpsl
sbb
add
cs
call
orl
fbstp
repz
push
std
out
scas
push
jns
adc
xchg
inc
dec
mov
and
pop
faddl
sub
dec
aad
data16
sub
push
movsb
or
mov
jbe
mov
xchg
adc
jo
jne
sbb
or
inc
iret
add
xchg
mov
out
jle
cld
mov
adc
scas
push
test
push
sub
scas
add
bound
push
imul
push
xchg
or
outsb
inc
or
lea
cmp
mov
inc
sub
scas
push
cs
inc
shl
imul
mov
fisttps
mov
add
pop
divb
pop
inc
jbe
scas
pop
dec
cwtl
jg
add
pop
jg
aad
xchg
out
dec
ret
xchg
adc
cs
in
inc
fnsave
inc
in
imul
mov
inc
dec
imulb
sti
sbb
and
push
out
dec
pop
fisubrl
insb
cmp
loopne
ret
mov
in
inc
adc
push
rorl
incl
ja
or
repnz
mov
mov
cltd
xchg
ljmp
pop
pop
adc
lahf
push
xlat
adc
mov
imul
jg
faddl
mov
or
dec
mov
arpl
int
push
mov
push
pop
into
mov
testl
jbe
cmpsl
jbe
mov
mov
fdivrs
fstpt
jo
aaa
std
mov
mov
int
push
inc
call
sub
cwtl
ret
std
out
xchg
ss
mov
jle
xchg
sbb
xchg
cli
sub
outsb
mov
mov
rclb
jecxz
dec
fbld
loopne
test
inc
add
push
cld
dec
push
or
push
sub
jbe
lcall
cltd
push
inc
movb
jg
pop
push
jecxz
fs
dec
pop
ds
insl
xchg
push
outsb
into
mull
xchg
adc
lcall
push
push
adc
ja
xchg
jl
mov
call
push
push
aad
add
addr16
mov
push
inc
inc
xor
sub
cmpl
mov
fildll
cwtl
push
scas
bound
adc
js,pn
cs
inc
enter
xor
decb
or
inc
cs
inc
and
xor
ret
sub
mov
adc
inc
clc
bswap
popl
negb
incl
adc
push
pop
test
xor
iret
cmpl
sub
insb
into
sub
adc
xchg
cmp
push
inc
mov
push
jbe
jmp
verw
adc
jo
out
dec
or
das
push
mov
addr16
push
cwtl
fisttps
add
into
sbb
fs
mov
filds
sub
out
cli
cli
dec
inc
cmpsb
nop
mov
sbb
fadd
outsb
test
and
hlt
adc
cmp
jbe
or
xlat
xchg
rolb
add
sub
push
jmp
push
add
or
push
mov
mov
xlat
mov
jnp
decl
fisubs
xor
ds
mov
int
xor
cmp
mov
add
xor
pop
lods
lock
dec
int3
insl
inc
lcall
lock
push
xor
call
psubsb
daa
int3
sub
and
testl
in
mov
sbb
loope
outsb
inc
push
int3
sub
xchg
ret
add
jnp
pop
mov
xor
pop
ret
sbb
pop
test
aaa
jge
xchg
push
push
dec
xor
cmp
adc
fucomip
rorb
data16
sbb
lods
pop
cmp
divb
mov
mov
jle
sahf
mov
mov
mov
shrl
int3
xchg
cs
jbe
decl
add
inc
scas
ja
pop
or
jns
cmp
mov
sahf
xchg
sub
cld
pop
cmp
adc
imul
fwait
jbe
ss
punpckhdq
stos
dec
sahf
bound
pop
add
and
jns
xor
xlat
add
mov
loopne
incb
outsb
paddsb
pop
add
std
dec
and
sub
shll
outsl
pop
pop
xchg
push
mov
pop
and
sub
push
pop
sbb
pop
and
lcall
lods
sub
mov
pop
lds
adc
xlat
dec
sti
pushl
sub
and
lcall
jae
sub
outsb
mov
adc
adc
stos
xor
rclb
cli
in
and
inc
aad
test
test
sub
outsb
jne
rorb
jl
dec
xor
clc
xchg
test
fiadds
and
dec
jns
cwtl
cld
lahf
outsb
push
push
mov
les
cmpsb
subb
xchg
push
pop
add
pop
push
mov
jae
inc
jnp
sahf
aam
xchg
sahf
sti
adc
or
in
fisttps
out
mov
sub
push
xor
inc
cltd
sub
add
pop
insl
fisttpll
cli
cwtl
iret
sbb
sahf
outsb
cmove
inc
pop
jbe
ret
dec
cs
mov
push
imul
inc
and
cli
cmp
jecxz
loop
add
inc
lods
cmp
adc
movsb
xor
lods
and
and
in
xchg
inc
scas
mov
scas
push
out
lea
push
or
lret
push
mov
dec
je
iret
mov
movsl
pop
fnstsw
aas
sbb
mov
sti
adc
mov
push
into
dec
xchg
xchg
sahf
and
dec
sbb
pusha
cmp
pop
scas
adc
hlt
adc
loop
or
add
and
mov
inc
cmovo
mov
and
push
pop
inc
jmp
out
sti
dec
adc
or
xlat
fidivrs
fildl
out
mov
ss
ljmp
imul
cs
int3
mov
push
ja
ds
lods
and
lahf
test
sbb
add
daa
mov
ds
into
data16
mov
cmpsb
push
sbb
jmp
push
cwtl
and
xor
push
pop
sub
add
push
push
pushf
push
lret
mov
pusha
mov
popf
or
mov
inc
pop
nop
loopne
or
xor
pop
int3
sahf
dec
push
inc
xchg
push
pop
push
sub
mov
ss
dec
xchg
xchg
and
adc
sub
cld
or
jnp
fcoms
outsb
and
xor
mov
push
jg
push
into
push
lds
aaa
sahf
int3
push
testb
push
mov
sub
push
mov
inc
jle
outsl
cmp
es
xchg
rcl
jecxz
idiv
sub
aad
in
push
cwtl
loop
xchg
stos
jmp
sbbb
sub
pop
pop
pop
dec
push
cmp
jne
mov
nop
popf
dec
sub
add
lret
xchg
fldl
data16
xchg
adc
adc
xor
push
aas
es
mov
or
add
pushf
testb
push
jbe
out
adc
cld
test
aaa
jmp
add
ss
arpl
mov
mov
dec
fs
add
push
inc
fnstcw
cmp
mov
sar
pop
int3
adc
dec
xor
xor
jnp
xchg
lods
scas
jl
and
jns
fcmovnu
cmpsl
frstor
xchg
into
scas
inc
sub
lock
push
addr16
pop
jle
pop
pop
lret
pop
mov
testb
cmp
stos
les
aas
lea
ss
fwait
jno
inc
xchg
pop
mov
add
add
pop
add
or
pusha
mov
xchg
jbe
mov
out
adc
push
into
push
jnp
push
push
cmpsb
adc
jae
add
mov
test
sub
push
inc
add
lods
sbb
subb
mov
pop
xchg
mov
inc
mov
out
or
add
roll
mov
sub
or
and
out
sbb
cmpsl
xor
push
and
mov
inc
lods
add
jno
inc
sub
js
std
fisttps
mov
nop
out
test
cmpsb
sti
ss
and
adc
cmp
jbe
pop
ja
outsb
pop
jnp
out
je
jno
hlt
daa
jge
inc
inc
lods
in
adc
lods
adc
pop
jno
mov
mov
mov
std
lea
cli
xchg
rcll
push
sub
inc
pop
pop
test
lretw
dec
es
jle
orl
imul
sti
mov
push
mov
sbb
inc
addl
cmpsl
inc
outsb
adc
cld
pop
jmp
xchg
lcall
sub
out
xor
xchg
xchg
cmp
fimuls
jae
movsl
lods
xchg
ds
xorl
fwait
jle
xchg
dec
clc
dec
inc
push
scas
lds
cli
rcl
xchg
or
inc
sahf
arpl
lods
xor
fadds
js
std
sti
mov
mov
push
cmp
push
push
jg
daa
cli
fcoms
sbb
adc
push
fists
inc
fwait
and
push
sub
add
jnp
or
call
lret
cld
sub
mov
xlat
sub
test
scas
fidivrs
inc
stc
jmp
mov
xor
push
das
dec
cltd
mov
push
nop
fnsave
jge
sbbb
rcrl
rcrl
dec
sahf
notb
jecxz
push
and
dec
scas
call
or
ds
out
sbb
ds
in
sub
jp
test
ja
incl
rorl
decl
aas
or
sti
das
pop
insl
sub
inc
xchg
call
aaa
cmp
inc
pop
mov
lods
repnz
push
sbb
es
lcall
into
adc
cmp
mov
jl
daa
call
cmpsb
in
mov
adc
or
cmp
out
xor
repz
jb
cs
pop
sub
pop
pop
movl
jg
cld
rcrl
mov
imul
into
inc
push
xchg
pop
cmc
or
ds
nop
testb
jle
mov
dec
scas
in
gs
out
sbb
hlt
pop
push
dec
and
pop
cmp
cmp
mov
jnp
mov
xchg
push
pop
inc
clc
out
jge
xor
push
je
pop
out
xchg
jbe
dec
pop
push
scas
jno
test
addl
xchg
es
push
push
push
xchg
das
in
js
inc
sti
dec
movsl
push
out
cmp
scas
xor
mov
cmp
mov
and
add
loopne
aam
mov
inc
aaa
int3
les
lahf
xchg
fcmovnbe
sahf
lcall
repz
outsb
int3
test
jno
push
das
dec
pop
or
adc
dec
push
add
ficoml
xor
clc
or
iret
xor
add
jecxz
rcrb
lock
scas
out
dec
out
mov
mov
popa
pop
cmpsl
pushf
mov
ds
jnp
and
pop
stos
dec
cld
jmp
sub
into
and
clc
inc
cmpsb
adc
and
push
push
daa
adc
outsl
fsubr
stos
and
aaa
incl
push
dec
jbe
sbb
ficoms
outsb
xor
jo
mov
mulb
testb
mov
sub
inc
imul
loope
dec
sub
bound
popa
movsl
lea
insb
push
into
outsb
push
jno
ljmp
and
adc
or
lock
data16
mov
mov
popa
pop
cmp
in
nop
dec
inc
mov
xchg
cmp
movsb
scas
pushf
sub
cmc
push
inc
data16
inc
and
add
adc
scas
dec
push
lret
ss
aas
fbstp
rclb
sbb
sbb
jno
xor
lods
inc
addb
pop
orb
xor
rorb
popl
inc
adc
xor
inc
inc
fsts
outsl
subb
xor
adc
mov
and
add
sahf
lahf
dec
xchg
add
mov
and
or
push
xor
bt
pop
xor
sahf
add
loop
xchg
sub
iret
inc
lods
nopl
sbb
push
and
xor
in
jo
out
shr
sahf
cs
testb
stos
fiadds
mov
dec
mov
hlt
dec
cmp
mov
ds
lcallw
fwait
add
pushf
adc
adc
enter
jecxz
add
push
je
push
les
loopne
xor
es
test
roll
add
movsb
and
movsb
mov
je
or
rorl
test
inc
into
scas
data16
sbb
ss
add
shrb
lods
mov
push
lea
lods
roll
and
xchg
mov
push
outsl
ja
pop
mov
sahf
les
fwait
push
das
inc
popa
or
je
rorl
mov
data16
das
sub
sahf
fucomip
lods
add
lcall
lcall
xor
loope
inc
and
and
jne
pop
scas
sbb
das
push
insl
push
inc
and
cltd
and
sahf
push
adc
adc
sub
jne
shrb
push
cltd
and
mov
lahf
dec
outsl
in
dec
stc
in
sbb
jecxz
loope
fwait
cmp
loopne
data16
adc
sub
sbb
enter
mov
lahf
push
fistps
cmp
sub
fstl
aas
add
adc
nop
add
inc
push
std
nop
xchg
arpl
push
add
inc
scas
xchg
lods
dec
mov
pop
xchg
push
push
pop
insl
inc
push
and
sahf
fbstp
pop
mov
pop
adc
mov
adc
push
adc
into
adc
cld
ljmp
clc
and
push
fwait
jo
push
insl
cld
popa
idiv
or
data16
lcall
daa
shr
adc
and
mov
jmp
sbb
add
aaa
cld
cltd
aaa
fidivrs
rcrb
dec
fsubl
dec
lcall
sub
xchg
js
inc
mov
mov
shrl
jecxz
add
lcall
out
cwtl
inc
adc
lcall
jmp
icebp
out
ss
add
jno
iret
pop
xchg
icebp
bound
test
sbb
adc
adc
cli
pop
dec
mov
fistpll
out
mov
mov
cmp
sub
incl
sbb
dec
sub
jl
imul
addr16
pop
cmpsb
cmp
pushl
repz
insl
cmp
sbb
nop
gs
fildll
outsb
mov
pop
data16
mov
imul
pop
lods
jge
jmp
ljmp
ret
gs
inc
test
clc
cwtl
jns
outsb
jecxz
mov
aam
xchg
jmp
or
lcall
mov
adc
test
sar
sahf
or
inc
adc
sub
popa
mov
and
mov
outsb
jge
popw
cltd
imul
sbb
shl
pop
cs
push
cltd
or
and
push
in
imul
mov
loopne
pop
icebp
inc
lcall
xchg
cmp
inc
movsl
fstl
outsb
fidivs
xchg
cwtl
xor
clc
sbb
and
sbb
data16
mov
pop
jg
scas
jmp
pop
push
cmc
fwait
sbb
gs
or
sbb
xor
lock
and
out
sbb
outsl
rolb
scas
call
shrb
sub
scas
sub
pop
cltd
push
imul
add
popa
inc
dec
lahf
pop
aas
or
mov
or
ljmp
fistl
mov
into
pop
jge
adc
imul
pop
fnstsw
daa
jmp
xchg
adc
pop
mov
cmp
xchg
mov
test
test
push
scas
pop
aam
mov
adc
sub
sbb
rcrl
decl
dec
inc
sbb
out
sbb
sub
outsb
daa
push
cmpl
outsb
add
je
push
mov
and
inc
enter
fisubl
loope
sbb
mov
test
xor
adc
popa
lcall
lods
dec
fdivs
outsb
adc
in
push
lock
push
popf
adc
lea
subl
xor
jmp
int
fistpl
adc
xchg
pop
out
and
incl
and
inc
fisubs
cmp
and
and
outsb
inc
sbb
in
dec
lret
fs
lret
cmpsb
add
decl
lea
repz
scas
adc
push
scas
push
pop
cltd
dec
insl
lds
cmpsb
pushf
adc
xor
and
out
fsts
push
movsl
push
lds
fsubr
mov
cs
pop
movl
xchg
sbb
inc
fdivl
je
push
add
icebp
mov
fisubs
fwait
adc
mov
mov
push
or
jmp
sahf
add
sub
push
or
into
ss
jmp
daa
push
or
cmpsb
push
and
push
adc
jno
add
pop
cwtl
mul
adc
and
xchg
dec
data16
push
test
aas
sub
push
outsb
cmpsb
daa
aad
fcomip
push
sti
xchg
gs
loopne
adc
add
ret
jno
nop
mov
je
jnp
mov
xchg
out
outsb
nop
insl
fbstp
or
xor
pop
dec
hlt
or
jbe
arpl
rcl
aad
mov
mov
sub
dec
fbld
cs
pop
xchg
xchg
pop
add
pop
lret
insl
mov
inc
aam
negl
mov
data16
dec
xchg
xor
jg
mov
fistl
cwtl
aam
mov
jb
aam
jmp
sbb
outsl
cmp
push
sti
sub
pop
mov
xor
inc
adc
outsb
adc
sbb
fbstp
jle
scas
int3
sub
xchg
pop
sub
inc
dec
cmpsl
outsb
in
pop
pop
jle
lea
pop
pop
xorl
jp
into
adc
ja
inc
cmp
ljmp
pop
fdivrs
push
and
out
js
mov
stos
mov
mov
mov
inc
lcall
and
xchg
sub
sbb
mov
ljmp
xchg
in
pop
dec
inc
sahf
adc
push
test
inc
and
pushl
inc
test
pushf
in
sahf
push
cltd
movd
adc
push
pop
outsb
cli
fisubrs
and
jg
push
push
mov
xchg
stos
in
add
in
fimuls
jmp
mov
add
incl
popf
fisubrs
add
int3
popa
sti
insb
sbb
scas
pop
out
jle
testl
into
inc
xorl
add
fdivrs
xor
fwait
push
insl
jbe
inc
scas
or
dec
dec
jne
daa
ja
jle
mov
clc
add
fcoml
inc
mov
jl,pt
sbb
ja
lods
mov
and
add
push
jle
jne
leave
movsb
mov
mov
popa
pop
iret
pop
fwait
dec
fucom
test
clc
aas
xchg
pop
adc
scas
mov
hlt
stos
es
or
jb
mov
pop
ljmp
xor
adc
adc
gs
push
outsl
or
lcall
rorb
sahf
ret
out
add
call
jmp
scas
add
cwtl
and
push
xchg
rcrb
out
or
xchg
popa
fildll
adc
cld
aaa
loopne
lret
pop
xchg
ficoms
frstor
cmp
pop
push
adc
mov
movsb
dec
sbb
push
xchg
rclb
jle
pop
test
add
stc
cltd
dec
mov
xorl
and
jle
aad
sti
popa
push
mov
sahf
cmp
bound
fildll
mov
nop
add
pusha
aad
inc
and
dec
inc
jo
decl
ss
xchg
add
adc
mov
push
push
add
aaa
fdivrl
int3
mov
and
mov
repz
add
mov
data16
mov
adc
sub
mov
inc
xchg
adc
or
mov
push
decl
inc
mov
lcall
shll
dec
movsb
sbb
fwait
and
ljmp
shr
lods
push
push
adc
inc
test
loop
inc
adc
adc
mov
sbb
mov
jle
cltd
data16
xchg
scas
clc
neg
xor
mov
add
pop
gs
mov
iret
mov
loopne
jg
sub
push
loop
call
lods
add
nop
cmpsl
adc
jb
arpl
int
sahf
xchg
fistpl
adc
ss
push
add
andb
push
xor
cs
ss
lea
pop
cld
fcomip
movsb
push
jecxz
mov
adc
adcl
jge
lods
push
fwait
and
pop
stc
cli
loop
rcl
inc
enter
jns
sahf
out
aam
fucomip
dec
sarb
mov
inc
cmpsb
in
lret
aas
cltd
movsb
sbb
xchg
movsb
test
pop
popf
sbb
pop
cmp
roll
sarb
and
ss
or
push
xor
sbb
lret
out
sub
cs
adc
es
ljmp
xor
sub
pop
movsb
or
xchg
push
fistps
mov
insl
cmp
sbb
cld
aaa
dec
push
dec
sub
cmp
loop
aaa
push
mov
test
pop
and
lret
cwtl
add
pop
lock
outsb
ret
and
enter
and
ljmp
sub
sbb
loope
outsl
pop
or
mov
out
fisttps
inc
adc
hlt
call
pop
adc
pop
inc
and
sahf
dec
adc
and
adc
fldcw
jge
call
popa
mov
adc
jle
fwait
or
scas
sbb
clc
call
add
push
adc
xchg
and
inc
sbb
scas
push
scas
stos
call
inc
mov
fwait
push
cld
aaa
shlb
or
mov
hlt
lret
push
xchg
push
push
add
les
inc
js
iret
dec
clc
push
aad
jmp
dec
addb
dec
ljmp
sbb
push
pop
xor
lock
mov
cs
mov
add
pop
xchg
cld
sbb
inc
les
push
imul
repz
xor
pop
push
insl
cmp
mov
add
sbb
cmc
outsl
xor
scas
pop
sbb
jae
ss
push
mov
ficoms
incb
push
in
adc
adc
ljmp
cmp
in
enter
xchg
test
fistpl
lcall
test
lcall
inc
loopne
push
montmul
cmpsb
xchg
mov
daa
push
sbb
nop
mov
outsb
sbb
xor
inc
sub
dec
scas
pop
mov
and
clc
out
mov
add
add
or
xchg
jecxz,pt
das
cmp
out
mov
lcall
ss
adc
pop
or
outsb
or
fldl
mov
push
pop
loopne
xor
negl
push
mov
scas
jle
push
scas
lock
test
aad
pop
loop
xchg
push
pop
fstpt
jns
scas
jle
iret
scas
push
cli
dec
or
fcoml
data16
adc
push
pop
decb
out
or
dec
adc
pop
pop
shr
mov
ret
test
xlat
in
pop
fwait
xor
or
pushf
push
loope
out
sub
out
xchg
push
in
add
jb
inc
and
dec
scas
push
loope
loope
bound
jmp
cwtl
rcl
int
jg
into
xchg
in
adc
add
mov
jns
add
fwait
dec
or
jns
pop
jbe
mov
inc
jle
push
jmp
sub
and
out
lahf
fwait
add
mov
sub
dec
adc
ret
cmp
jecxz
enter
adc
lea
shrl
fimull
int
and
int3
fildl
data16
sbb
test
push
push
pop
mov
push
inc
cwtl
push
pop
inc
and
cs
cmpl
xor
inc
push
and
push
dec
cmpsl
loope
lcall
sahf
jle
push
add
pop
repz
push
adc
repz
pop
cwtl
xor
iret
or
clc
mov
loope
inc
and
repnz
adc
pop
fwait
jns
add
out
pop
std
fucomp
or
mov
movsb
push
or
or
mov
add
call
mov
sbb
insl
popa
xchg
outsb
sub
push
daa
push
or
pop
jno
ret
pop
cld
pushl
dec
jg
in
and
sbb
and
outsb
movsb
adc
cmpsl
incl
and
sbb
xor
out
bound
nop
int3
rclb
push
daa
ret
outsb
neg
lcall
cwtl
adc
inc
adc
sbb
test
push
mov
mov
lea
push
dec
sbb
pusha
add
adc
sub
dec
nop
push
dec
bound
jecxz
jg
fsubrs
arpl
sbb
adc
insl
and
push
daa
mov
outsb
frstor
xchg
push
insb
insb
sarb
ss
cmp
push
push
xchg
clc
inc
inc
xchg
cmp
movsw
sbb
jg
jne
int
mov
mov
dec
movsb
sbb
ljmp
ljmp
sahf
sbb
mov
mov
push
and
fcoml
pop
jmp
stc
sbbl
rcrb
or
out
cwtl
loop
movsb
push
faddp
mov
and
scas
and
mov
out
out
or
adc
push
ret
cli
call
push
dec
into
pop
jne
lea
cltd
adc
dec
xchg
shl
outsl
cmpsb
out
sub
push
mov
mov
hlt
cli
test
fdivr
ljmp
mov
jg
add
inc
call
sub
pop
sub
daa
cmpsl
int3
mov
notb
insl
jne
cmp
jb
sbbl
sub
movsb
scas
inc
sbb
and
inc
enter
inc
arpl
or
add
ficoms
adc
ja
cmp
sti
decl
cmpsb
inc
loop
test
push
rorl
push
cld
sub
fwait
xchg
mov
add
roll
adc
sbbb
push
pop
cmc
test
outsl
loop
mov
push
adc
mov
adc
mov
mov
scas
mov
mov
pop
lock
xchg
xchg
pop
lcall
xchg
dec
jne
inc
inc
push
decl
xchg
lock
hlt
inc
fnsave
mov
aad
pop
and
sahf
or
mov
fldl
mov
clc
jbe
loopne
mov
outsb
insb
or
inc
pop
out
inc
mov
pop
cmpsb
lret
scas
add
inc
mov
int3
sarb
insl
decb
mov
or
sti
jbe
aaa
dec
insl
adc
popf
mov
sbb
lods
rcl
outsb
stos
jmp
into
sbb
jbe
test
test
out
shlb
lahf
add
out
mov
lods
jmp
dec
or
dec
scas
outsl
pop
shll
jbe
rol
push
dec
dec
jle
dec
pop
test
icebp
dec
mov
popfw
movsl
push
ret
out
cmc
je
push
push
adc
xor
bound
es
aas
mov
xchg
push
cmp
dec
sub
ja
mov
call
xchg
mov
push
scas
into
inc
inc
pop
and
es
dec
add
add
inc
loop
jns
cwtl
mov
int3
add
mov
adc
sbb
pop
xchg
cmpsb
xor
bound
mov
push
or
rcrb
movsb
dec
sbb
mov
out
cmp
xchg
push
mov
and
imul
jg
push
push
jg
loope
push
sbb
sbb
std
outsl
cmpsb
sbb
mov
int
adc
mov
incb
lcall
in
push
push
adc
test
pop
dec
fsubl
call
add
inc
cltd
es
inc
xor
and
ret
in
inc
xor
mov
clc
scas
jle
pop
cmpsl
jmp
xor
jg
stc
inc
clc
repz
out
jmp
cmpsl
scas
gs
add
push
push
push
mov
mov
add
enter
enter
mov
push
or
stos
sub
add
out
mov
cwtl
add
jbe
or
xor
mov
mov
int
sahf
add
sti
sub
push
push
push
fwait
add
cmp
sbb
pop
cmpsl
push
jno
int3
mov
fwait
out
add
jbe
cmp
xlat
jno
pop
aad
ja
movlps
orb
mov
sub
popf
xchg
mov
inc
mov
push
ja
add
jecxz
test
incl
shr
jg
xchg
sahf
gs
mov
pop
sti
adc
inc
inc
inc
sti
dec
pop
pop
mov
and
adc
push
ret
sahf
pop
adc
mov
pop
push
ljmp
xchg
into
fucom
repnz
push
mov
stos
in
or
in
shrb
cld
pop
enter
jg
jbe
test
push
dec
out
and
pop
jbe
lahf
push
xor
sbb
jl
aas
movsl
jl
add
sbb
dec
add
push
imul
sbb
dec
push
sbb
and
std
adc
outsb
inc
test
mov
adc
xchg
popf
or
dec
dec
and
mov
int
scas
fwait
lock
hlt
mov
loopne
sahf
ja
mov
sbb
roll
or
stos
dec
stos
and
aad
pop
test
inc
mov
add
push
dec
decl
inc
inc
test
out
add
xchg
cli
fbld
ret
mov
outsb
and
cwtl
mov
mov
and
in
mov
pop
repz
xchg
cmpsl
cmp
pop
sbb
das
ja
push
sub
aam
xchg
subb
into
jecxz
or
hlt
inc
dec
push
xor
add
je
out
mov
inc
xchg
adc
ljmp
stos
pop
sbb
jbe
pop
shlb
cmp
push
jmp
push
rcr
xchg
fistl
incl
fildl
fwait
mov
add
outsb
lcall
hlt
fists
xlat
pop
dec
fst
jne
push
sub
test
imul
cld
jg
inc
fldl
sbb
or
shl
sbb
test
jecxz
fsubr
add
loop
out
fistl
mov
cwtl
into
in
negb
push
into
lds
dec
pushf
in
or
pop
dec
rolb
jecxz
inc
sbb
je
mov
sti
cmp
mov
xacquire
mov
or
jl
jle
subb
mov
mov
jne
inc
sub
les
es
pop
add
add
xchg
pop
or
fwait
incb
aam
mov
int3
sbb
sti
mov
popw
aas
vpmadcswd
inc
pop
jne
fistpll
decl
sbb
mov
inc
dec
jp
cwtl
inc
xchg
and
sti
pop
xor
popa
nop
jne
mov
lods
dec
lret
je
xor
adc
leave
pop
or
or
shlb
jle
icebp
push
repnz
and
push
fbstp
decl
enter
sbb
incl
data16
insl
xor
nop
rolb
mov
and
outsb
sub
in
or
lcall
jg
pop
divb
scas
adc
ss
dec
out
cmpsl
mov
xor
roll
jns
jns
shll
cld
fwait
pop
adc
sti
ljmp
aaa
test
jo
add
ds
push
enter
jbe
ja
cld
pop
dec
mov
ja
and
jb
sbb
aaa
aaa
scas
pop
jmp
add
loop
inc
mov
clc
sbb
movsb
sahf
pop
mulps
add
cli
es
and
pop
sub
mov
popl
inc
das
push
jl
addr16
pop
cld
mov
outsb
push
scas
fsubr
pop
inc
pop
cmpsb
js
pusha
and
incl
cwtl
rcl
into
inc
dec
shr
ret
xor
loope
inc
sbb
fcomip
out
jbe
sti
dec
ja
jge
cmc
decl
les
cltd
test
jmp
loope
testb
push
std
data16
inc
jge
lods
push
add
jnp
sub
aaa
jg
dec
add
jbe
filds
dec
mov
xchg
mov
sub
insb
popa
jns
call
mov
stos
sahf
pop
inc
push
lret
xchg
inc
and
jne
push
pushl
jl
cld
push
xchg
addr16
call
cltd
sub
iret
mov
jg
adc
xor
mov
pop
mov
nop
rcll
pop
jbe
ds
inc
in
xor
aad
pop
push
iret
sbb
cltd
fcoms
sub
dec
addr16
mov
insl
nop
loope
cmpsl
xchg
dec
clc
outsl
shrl
rcrl
push
insl
aad
out
shrb
mov
cltd
dec
out
mov
aaa
arpl
lea
or
mov
mov
aam
add
imul
or
sbb
sub
xorb
push
pop
les
xlat
fwait
jns
not
pop
mov
jno
loope,pn
in
loope
sarb
fstl
mov
mov
cli
pop
mov
ret
fbld
into
popf
int3
mov
cltd
xchg
jge
jo
lock
shlb
xchg
cwtl
hlt
pop
mov
and
mov
mov
sahf
cmpsb
shlb
stc
cmc
iret
pop
lods
xchg
imul
inc
or
sbb
scas
int3
das
aaa
jo
fwait
mov
push
push
mov
lds
call
out
rclb
and
gs
fcomip
scas
xchg
inc
xor
sbb
sbb
inc
jne
xchg
push
mov
dec
inc
cld
mov
push
fldl
shrl
push
lds
pop
scas
js
sbb
or
sub
jmp
or
fdivrp
push
out
mov
inc
int3
inc
sbb
insl
push
popf
daa
mov
jl
xchg
or
adc
or
loop
or
shlb
push
rolb
sbb
jne
adc
adc
sub
and
ret
cmp
add
popf
jg
jnp
fs
ret
int3
jle
mov
int3
or
xlat
push
mov
test
jg
pop
push
dec
pusha
outsb
fldl
lods
fldt
orl
mov
add
decl
sahf
and
mov
xlat
dec
inc
xchg
ret
sti
sub
inc
pop
cld
decl
jecxz
and
jl
mov
add
mov
aas
fcos
add
and
cwtl
es
cld
mov
xchg
cmpsl
cmc
incl
ljmp
jecxz
mov
repz
loop
das
orb
inc
adc
outsb
push
jne
cmpsl
sub
imul
rolb
xchg
xlat
push
es
pop
push
push
mov
aas
scas
pop
sti
scas
cmpsl
je
ds
jmp
push
adc
sti
fisttpll
outsb
cmp
arpl
push
fsubl
sbb
cmp
pop
cmpsl
adc
push
imul
mov
jbe
fstps
and
les
loope
repz
mov
fiadds
movsl
aam
push
test
adc
adc
jmp
cmpsl
in
inc
fwait
es
lods
scas
inc
push
jp
loope
addr16
push
push
xchg
scas
adc
fisubrs
jle
mov
fnsetpm(287
mov
cmp
and
loopne
ljmp
mov
xchg
mov
fisttps
pop
lahf
pushw
cwtl
sub
xchg
push
adc
imul
sarb
cwtl
dec
jb
inc
adc
mov
gs
lret
pop
rcll
sub
aaa
sahf
inc
pop
fdivl
ja
push
les
fildll
loope
sub
and
xchg
aaa
out
sbb
cmpsb
dec
in
adc
fstpl
push
dec
shll
lods
loopne
push
add
xchg
loopne
daa
sbb
pop
fdiv
and
fnsave
arpl
cs
jae
mov
daa
jle
int3
cmp
aam
sub
jg
pop
jns
int3
adc
lcall
pop
push
inc
sbb
cwtl
mov
or
mov
jae
xor
loop
sahf
ffreep
stos
out
pushw
sbb
jle
push
inc
loope
test
inc
cmpsb
adc
xor
sbb
shll
push
inc
int3
daa
or
out
fisubs
push
ljmp
jne
cmp
sahf
sub
jle
mov
jle
push
xor
sbbl
pop
sti
mov
push
add
jge
cs
adc
pop
lods
sub
add
xchg
or
push
sbb
adc
mov
call
mulb
dec
sub
xor
sub
popa
shl
add
es
sbb
sub
pop
jl
ss
outsl
pop
pop
je
fs
xchg
mov
jp
push
nop
jmp
dec
inc
mov
incl
scas
pop
lahf
rol
or
repnz
shrb
out
push
jle
fcompl
test
mov
lea
mov
lods
loope
call
stos
ds
dec
dec
scas
cs
mov
repz
mov
mov
push
lods
sbb
xchg
into
push
lds
push
xor
mov
adc
dec
xchg
push
arpl
push
mov
jg
and
sahf
push
xchg
fcom
jg
ret
mov
out
scas
xor
mov
jne
enter
cs
iret
sbb
in
inc
lods
pop
add
lods
int3
aas
mov
js
out
push
push
ret
rclb
dec
jb
xchg
lea
push
test
test
lcall
sti
jecxz
in
mov
out
mov
orb
in
push
inc
movsb
imul
imul
lcall
jne
insl
push
and
test
gs
in
ss
sahf
push
dec
js
push
or
mov
fsubr
xchg
add
adc
ja
pop
inc
xor
mov
in
sub
inc
push
cmp
mov
sarl
or
pop
data16
add
mov
add
aad
push
xor
je
mov
mov
sub
mov
cmpl
jmp
sti
outsb
jbe
aad
in
or
push
iret
push
cmpsb
xchg
das
dec
push
imul
testl
je
mov
push
ja
mov
loop
adc
or
enter
rcr
push
lock
into
rorb
xchg
aam
cmp
arpl
test
xchg
mov
lcall
addr16
adc
decb
imul
pop
dec
lods
dec
cmp
dec
dec
jg
cmc
fisttpl
ljmp
adc
inc
lahf
addb
sahf
clc
push
imul
dec
push
sti
lret
pop
add
dec
push
daa
lea
xchg
add
sub
push
push
push
ret
push
dec
insb
mov
or
and
mov
fisttps
jnp
cmpb
lods
cmp
imul
sub
pop
enter
mov
sub
andl
xchg
push
jns
mov
xor
or
xor
or
push
push
sub
mov
mov
jbe
mov
pop
xchg
fsubrs
cmp
sub
dec
call
sahf
and
and
cmp
ss
fwait
or
xchg
and
sbb
sbb
fmulp
out
fucomip
xor
push
xchg
sbb
rcll
outsl
mov
lods
sub
jmp
imull
sbb
cld
add
jno
mov
pop
in
push
sub
inc
pushf
out
lods
mov
xchg
wrmsr
iret
and
add
test
mov
fimuls
jge
dec
loopne
mov
mov
sbb
xor
add
cs
push
jb
lods
jge
ljmp
outsb
push
pop
pusha
inc
pop
jbe
push
push
sbb
mov
xchg
and
enter
xchg
fisubrs
pop
cwtl
mov
sub
les
or
mov
xor
push
add
out
xor
mov
sahf
or
fsubs
decl
sahf
pop
adc
pop
mov
pop
adc
addr16
notb
and
mov
adc
dec
cs
aas
scas
test
fidivl
pop
inc
jmp
in
inc
cmova
xor
mov
or
inc
into
adc
inc
int3
jg
outsl
pop
dec
clc
adc
sbb
movb
push
and
dec
je
mov
mov
and
add
mov
lods
push
jb
call
adc
movl
add
ret
and
outsl
add
dec
dec
jge
mov
rcrl
sahf
jno
mov
pop
push
lcall
pop
adc
pop
mov
lea
sbb
inc
push
cmp
mov
inc
sti
shll
pop
mov
add
pop
push
jns
cmc
int
scas
into
xor
aaa
dec
sti
and
rolb
cmpb
call
mov
filds
adc
sbb
add
jbe
adc
pop
movsb
scas
cmpsb
pop
lea
pop
popa
dec
hlt
pop
sbb
push
xchg
neg
or
lea
pop
or
rorb
lods
outsl
jp
xchg
fldl
out
push
inc
mov
lea
loopne
push
sti
xchg
inc
out
xchg
ret
sahf
out
sub
popa
pop
shlb
xchg
cwtl
pop
test
mov
js
fldl
sub
dec
cmpsl
insb
or
loopne
arpl
test
and
fildll
mov
jbe
ret
xchg
dec
sbb
lods
test
mov
sbb
lods
iret
mov
sub
outsb
push
push
data16
subb
jno
test
xor
cmp
aas
pop
push
loop
dec
push
push
push
cmp
ret
lahf
inc
xor
fdivp
add
mov
jg
push
cmp
jb
inc
lock
pop
pop
call
lcall
cmpsl
outsb
adc
dec
push
mov
xor
add
push
push
int3
push
mov
mov
push
jo
cmp
jns
addl
sub
mov
jnp
aaa
es
mov
mull
aad
aaa
insl
and
outsb
jb
inc
rorl
popa
xor
push
jg
loopne
pop
dec
mov
scas
pop
cmpl
mov
sbb
xchg
jp
ljmp
pop
aad
sub
jl
push
sub
fwait
xor
push
ss
sbb
gs
push
hlt
fwait
push
insl
loop
or
add
clc
dec
or
and
mov
push
fidivrs
mov
mov
popa
inc
pop
lcall
mov
jecxz
adc
xor
lock
inc
mov
sub
dec
pop
jns
imul
pop
jo
jle
inc
cmp
add
icebp
sbbb
out
fmul
sub
int
push
mov
add
cmpsb
fistpl
cmpsb
mov
sahf
cs
scas
pop
bound
out
scas
push
xor
incl
adc
mov
mov
xchg
ror
sbb
pop
cs
inc
divl
das
dec
jb
dec
xor
mov
loop
into
mov
fidivrs
ss
mov
rorl
adc
daa
push
or
sbb
xor
cli
test
cmp
sbb
mov
sub
jmp
es
pop
dec
xchg
jne
in
lar
push
dec
jl
lcall
push
test
fsubrs
jae
push
pop
rclb
add
fldl
cmp
adc
and
add
into
adc
jbe
jnp
lds
clc
or
pop
rclb
push
pop
push
cwtl
aaa
mov
adc
scas
and
outsb
mov
jae
pop
call
push
lds
jle
mov
cmpsb
in
push
sti
cmp
push
mov
mov
cmp
mov
mov
int
push
pop
into
scas
jbe
add
cmpsb
outsl
push
push
jp
ss
mulb
xchg
scas
inc
push
push
iret
add
std
push
stos
and
inc
push
lods
mov
enter
pop
scas
int3
es
adcb
movb
push
or
mov
xor
sub
dec
add
aas
push
data16
lods
sbb
es
loop
fimull
jle
clc
xor
inc
adc
popf
lods
adc
cmp
lock
adc
out
jnp
js
pusha
add
pop
outsl
inc
push
jno
ja
in
adc
outsb
adc
dec
add
push
rclb
push
fdivrs
test
aas
leave
mov
out
xor
xor
outsb
push
xor
inc
into
push
or
adc
dec
jb
jbe
add
stos
and
call
jmp
lods
aas
cmpsb
or
fldl
out
es
xchg
mov
pop
das
xor
push
or
fistl
dec
cld
xchg
push
aam
push
dec
ds
int3
xchg
inc
push
pop
aas
add
push
sbb
adc
pop
push
add
add
jae
ds
mov
or
inc
lcall
or
sahf
ds
lods
push
adc
rcr
jb
sahf
jnp
call
inc
or
mov
test
loopne
jle,pt
push
xchg
popa
out
jbe
movsb
sub
fcomip
mov
adc
mov
pop
jne
lods
adc
cmp
imul
mov
add
mov
ss
ret
adc
cld
fldl
ljmp
adc
sbb
enter
add
pop
adc
or
pop
nop
jp
xor
mov
icebp
pushw
sbb
xor
lock
sub
pop
adc
or
lods
adc
jg
mov
call
pop
cmc
push
sub
ds
pop
out
out
repnz
mov
inc
or
xlat
aaa
out
add
pop
add
lods
inc
or
sub
testl
mov
test
mov
cmpsb
and
clc
int
xchg
sahf
js
add
dec
mov
test
mov
int3
arpl
adc
mov
cmp
pusha
add
rclb
lea
push
or
add
push
mov
seta
xor
or
and
jns
mov
or
mov
sahf
sbb
push
outsb
push
dec
bound
sbb
push
push
and
das
pop
out
lods
and
push
faddl
jle
lcall
cmp
push
or
and
mov
add
push
sahf
arpl
lcall
xor
adc
sar
adc
adc
inc
xor
dec
loop
mov
sahf
dec
aaa
add
lahf
cmp
inc
pop
sarl
dec
sbb
push
xor
stos
pusha
das
xchg
pop
neg
dec
pop
aas
cmp
das
ds
fs
dec
loop
loop
neg
lcall
jl
imul
mov
xchg
lcall
call
adc
sahf
push
pop
dec
adc
sbbb
pop
xchg
mov
xorl
jbe
je
xorb
push
or
popw
add
xchg
dec
and
sarb
lock
adc
cs
add
jl
add
mov
cwtl
scas
fimuls
xor
add
popf
add
popa
ds
add
jne
add
daa
sahf
rcl
ret
cmp
sbb
or
and
jns
clc
cmpsb
aaa
loope
xchg
or
mov
and
mov
das
or
xchg
dec
adcb
pop
inc
sbb
sub
das
lcall
sbb
xchg
cmp
mov
jmp
test
clc
inc
movsb
ja
cmp
popf
insb
inc
aaa
loope
loopne
jp
iret
jecxz
addl
je
insb
mov
cmp
mov
jb
lcall
mov
mov
cmp
dec
inc
fucomi
call
in
sahf
cwtl
addb
push
xor
std
test
fistpl
mov
arpl
pcmpgtw
push
jns
fldl
mov
xor
cmpl
mov
fsts
sahf
das
in
adc
jb
ljmp
jmp
or
jbe
dec
lret
push
mov
inc
pop
icebp
or
mov
fs
lock
mov
mov
push
outsb
dec
sbbb
xchg
sub
sbb
xor
add
pop
xchg
sti
les
ds
inc
aad
adc
das
aaa
popf
mov
adc
pop
test
test
push
sub
push
xchg
outsl
int3
sbb
dec
inc
jg
outsb
imul
add
sbb
das
add
mov
or
je
fistl
lock
inc
mov
adc
iret
push
mov
mov
push
dec
xor
outsb
inc
adc
sub
cwtl
imul
leave
clc
sti
xor
inc
or
mov
and
dec
das
mov
pop
jo
or
das
ja
push
push
inc
dec
pop
ja
adc
stc
daa
in
mov
inc
pop
mov
jb
data16
add
int3
ss
out
fidivs
mov
push
je
push
add
sbb
push
push
jbe
pop
xor
fidivs
add
xlat
pop
push
loopne
adc
sti
iret
ret
mov
mov
cmp
cwtl
shlb
lods
mov
out
xor
xorb
nop
jge
cli
stos
cmp
and
inc
jge
push
mov
add
add
or
fistpl
clc
or
sti
ss
mov
jmp
xor
xchg
cmp
stos
inc
data16
sub
xor
repz
mov
pop
testl
mov
sub
cmp
add
add
jne
sub
call
lock
ds
daa
gs
xchg
dec
aas
aaa
sti
movsl
and
test
mov
cmp
and
adc
and
xor
mov
popa
sbb
lcall
xor
mov
mov
push
cmp
fisttps
and
aaa
cld
cmpsb
cmp
sub
inc
fisttps
int
push
cmp
inc
ja
test
imul
scas
push
inc
lods
adc
and
pop
les
push
sbb
inc
adc
mov
adc
clc
jbe
adc
mov
scas
inc
clc
mov
mov
or
ret
aas
add
sbb
mov
rclb
jbe
ljmp
sbbl
cmpsb
push
and
dec
cmpb
scas
xor
sbb
inc
int3
and
je
push
lods
mov
push
loop
ss
xchg
push
lea
and
addr16
pop
out
sbb
and
bound
jg
push
mov
loop
push
sti
add
sub
cli
xchg
add
lret
dec
and
imul
push
cwtl
insb
andl
cmp
lods
pushw
jns
out
dec
aaa
cmpsb
jg
aaa
cwtl
push
add
sub
dec
inc
add
pop
cld
push
jae
sub
dec
push
jno
test
clc
shr
iret
push
dec
in
push
sbb
inc
push
fildl
enter
test
aad
add
jle
dec
jge
cltd
test
mov
push
mov
mov
sti
push
outsl
and
sahf
imul
call
pop
xchg
call
out
push
pop
jmp
pop
outsb
or
dec
mov
or
popf
aam
xchg
xchg
add
push
fildll
movsb
clc
mov
movsl
fildll
push
addr16
adc
out
pop
and
cmc
mov
add
insb
dec
sbb
push
push
aaa
stos
inc
push
push
push
push
pop
pop
sub
stos
xor
ss
xchg
xchg
fildll
sbb
and
push
daa
pop
or
cli
pushw
nop
pop
jle
addr16
add
cmp
jmp
lods
cmc
push
aas
push
cmpsb
inc
jecxz
outsb
jns
push
bound
lock
jns
pusha
cmpsb
xlat
adc
and
adc
inc
mov
jae
into
adc
sbb
rcll
inc
xchg
sbb
imul
data16
cmp
sbb
inc
frstor
add
out
jo
in
add
push
push
popa
jne
imul
je
jbe
test
push
lcall
push
insl
jns
sti
je
out
fmul
pop
push
adc
test
add
inc
fsubp
and
es
mov
fildll
ljmp
into
fsubr
les
push
mov
jnp
jg
or
push
jle
scas
mov
into
xor
imul
mov
mov
adc
add
mov
in
sbb
icebp
pushw
and
inc
inc
mov
or
dec
insb
loope
test
inc
mov
inc
dec
push
mov
lea
add
addr16
test
pop
pop
add
out
mov
or
sbb
adc
xchg
adc
xchg
insb
faddl
or
test
cwtl
imul
cmp
nop
rcll
add
sub
aad
pop
cmpl
ror
ds
call
add
xchg
xor
aaa
mov
mov
pop
push
xor
imul
add
add
pop
push
gs
xor
jae
pop
inc
jmp
lods
in
push
push
fdivs
jle
data16
ss
andb
das
adc
jmp
adc
test
xchg
rolb
jae
xchg
sahf
outsl
push
cs
mov
insl
adc
aam
inc
add
addr16
xor
mov
bound
push
adc
jg
adc
test
lods
sub
adc
dec
push
mov
inc
fsubp
and
lea
in
adc
pop
inc
xor
sub
mov
loopne
pop
les
inc
xor
push
sub
ja
jmp
in
outsb
cmp
call
daa
push
lods
adcl
pop
and
ss
rol
imulb
pop
push
push
out
inc
dec
dec
out
jns
rolb
ja
negb
sbbl
push
or
add
ret
inc
out
push
sar
lods
daa
add
jg
sub
ss
test
mov
pop
jg
jbe
decl
mov
test
sub
dec
cmpsb
mov
sub
je
test
loopne
sti
dec
imulb
scas
jge
push
inc
pop
sti
popf
add
sub
or
ret
pop
shlb
test
es
adc
je
push
dec
lods
xchg
dec
pop
iret
lret
in
outsl
or
mov
adc
outsb
xchg
shlb
inc
shrb
incb
pop
xor
dec
push
push
insl
or
cmpsl
into
fdivs
scas
mov
cmp
mov
push
push
mov
shl
call
push
cs
loope
sub
leave
xchg
push
lea
hlt
inc
mov
lea
sbb
hlt
dec
sahf
xchg
push
pop
xlat
pop
popa
add
mov
rolb
and
je
adc
xchg
dec
into
rcll
pop
fwait
jbe
push
push
cs
cmpsb
pop
and
cs
lahf
and
push
inc
ja
push
fcmovne
out
mov
push
sbb
add
jg
test
clc
sub
dec
sub
adc
mov
inc
push
out
or
push
test
and
mov
pusha
xchg
mov
pop
cld
add
test
insb
fidivrs
xchg
rolb
ficoms
ret
cmpsl
add
outsl
inc
add
cli
inc
mov
inc
sbb
fisttpll
lahf
aam
stos
mov
stos
imul
and
jl
mov
jbe
and
mov
xor
dec
dec
or
fisubl
testb
sub
sbb
push
fcompl
pop
mov
cmp
push
push
or
sbb
pop
mov
mov
cmpsb
subb
sbb
test
mov
nop
add
shrb
gs
movsl
outsl
mov
ljmp
enter
jle
out
mov
dec
gs
scas
dec
or
sarb
jne
lods
xor
adc
lcall
or
les
add
mov
adc
fists
pop
data16
and
cmp
xchg
adc
int
sub
int
xor
icebp
jmp
and
jp
jns
mov
ss
jmp
incl
int3
adc
adc
mov
push
sti
out
push
sahf
push
jne
in
inc
ret
cld
fs
lods
jo
xlat
bound
cmc
addr16
xchg
test
test
lods
outsl
push
addr16
insb
outsb
jne
xor
movsl
xor
push
pop
push
inc
lods
pop
enter
xor
jg
mov
mov
mov
test
push
jecxz
jnp
out
cld
jnp
inc
out
jae
int3
ja
lcall
loopne
xor
mov
push
and
test
mov
dec
pop
cmpsl
test
mov
jp
out
and
jg
loop
pop
push
push
cmp
xor
ljmp
cmp
jmp
xor
lods
cmp
mov
jl
or
push
adc
fists
movsb
sub
call
cmp
sbb
hlt
jo
nop
das
ds
add
dec
jmp
out
pop
or
pop
cmpsb
into
dec
imul
pop
and
add
adc
xchg
lret
dec
jle
aaa
add
push
push
adc
rclb
push
sti
aas
mov
jnp
lcall
or
outsl
add
test
and
xor
xchg
or
out
dec
inc
mov
out
push
inc
xchg
into
adc
insb
loope
stos
pop
jno,pn
mov
mov
mov
adc
dec
insb
data16
sbb
push
ror
cmpsb
rclb
fwait
pop
ja
xor
push
jbe
push
test
cmp
pop
repnz
inc
lret
adc
xchg
jne
test
into
add
push
addr16
push
ss
in
ljmp
pop
into
xchg
inc
bound
sbb
loopne
push
jne
outsb
int3
lret
pop
mov
add
sar
mov
xchg
sub
xchg
int3
pop
test
roll
fsubrl
mov
in
inc
jl
popl
pop
push
test
mov
loop
cli
sti
xlat
lds
pop
push
jmp
scas
test
lea
add
adc
rolb
inc
cmp
push
rol
xchg
pushf
sbb
cltd
rorb
push
lret
outsl
scas
jg
xor
jg
cs
mov
addr16
mov
das
pop
mov
inc
out
in
cs
loope
push
sahf
xchg
pop
cld
sub
lcall
sarl
add
pop
jle
sub
inc
mov
enter
pop
jg
fisubrs
xchg
mov
addr16
insl
lcall
popf
fdivr
aad
pop
aaa
jno
nop
sub
push
in
sub
jp
pop
jmp
incb
cld
pop
mov
lock
mov
and
mov
cs
or
int3
movsb
and
fmull
jnp
dec
in
cmpsb
call
ljmp
clc
dec
fisttpll
and
push
or
mov
add
inc
sbb
push
gs
packuswb
xor
fiaddl
push
pop
in
nop
inc
aaa
in
xchg
sbb
in
push
into
in
out
aaa
pop
filds
jbe
mov
mov
pop
pusha
add
push
push
cmp
cs
clc
cmpsb
ret
xlat
stos
push
loop
push
push
repnz
ret
jge
jmp
mov
call
rcl
mov
cli
inc
cmp
adc
roll
mov
cwtl
daa
xor
add
arpl
and
aaa
adc
sub
mov
outsb
lea
and
dec
cmp
inc
es
shlb
jecxz
inc
and
out
xlat
inc
jnp
or
jmp
cmp
xor
sti
jl
push
out
les
clc
adc
dec
rolb
dec
xchg
xor
push
mov
xor
mov
daa
inc
scas
push
cmpsl
insb
shr
js
into
rcrb
sbb
sub
xchg
cld
ret
jns
jns
test
cmpsl
push
mov
or
sbb
xor
mov
push
enter
pop
add
sbb
inc
arpl
mul
jecxz
pusha
push
fstpl
mov
dec
cld
out
mov
out
push
imul
jg
lods
adc
mov
scas
call
mov
lahf
jne
pushf
out
mov
dec
add
icebp
aas
fiaddl
inc
decl
pop
push
in
pop
sti
sahf
std
adc
add
or
shrb
outsb
out
es
test
es
ss
gs
fldl
pop
or
sbb
mov
cmp
jg
xchg
adc
ja
clc
dec
nop
in
test
es
pop
adc
clc
sbb
fisubrs
cmp
cltd
out
and
clc
push
nop
fcoml
push
es
pop
cli
fs
jae
push
add
mov
pop
push
sti
jmp
clc
and
lods
nop
add
push
popa
negb
push
dec
aam
scas
mov
imul
inc
in
sbb
xor
inc
scas
or
test
sbb
and
mov
pop
dec
inc
inc
adc
push
adc
dec
nop
jb
push
or
orb
out
fistpl
adc
dec
jg
mov
mov
loop
adc
sahf
into
or
inc
xor
es
loopne
out
pop
push
dec
lret
insb
jle
push
push
mov
mov
aam
mov
add
icebp
jg
loope
add
ja
dec
adc
mov
ret
jo
lock
ss
pop
into
and
and
scas
into
inc
and
xchg
testb
pop
push
iret
push
fisubrl
ret
ss
push
int3
jle
addr16
outsb
cwtl
jbe
adc
inc
out
pop
push
int3
imul
inc
lea
call
movsb
sub
pop
aam
mov
notb
cmp
fsubrl
add
cwtl
and
lcall
pop
lods
inc
cmpsb
sahf
and
push
pop
add
push
mov
imul
adc
lea
mov
mov
clc
pop
insb
mov
fucomip
add
jmp
addl
inc
in
lds
mov
sti
mov
push
dec
inc
iret
pop
adc
outsl
shlb
push
jbe
int3
push
or
mov
lods
jno
cltd
je
inc
loop
mov
mov
dec
ja
enter
jo
sti
or
mov
pop
aam
adc
enter
icebp
pop
mov
inc
out
add
into
or
mov
mov
xchg
adc
stos
sbb
mov
sub
mov
cli
out
push
push
mov
inc
adc
jge
out
test
jno
mov
inc
adc
test
shr
add
xchg
imulb
ja
fisttpl
push
mov
in
into
add
ja
pop
or
adc
int
add
es
pop
pop
jmp
aaa
inc
scas
mov
pusha
adc
loopne
out
ja
sub
popa
test
cwtl
movsb
mov
cmc
daa
xchg
or
sbb
mov
push
pop
sbb
jnp
sbb
push
jl
sub
or
sbb
mov
xlat
sub
pop
push
add
jle
hlt
mov
repz
test
out
mov
xchg
mov
push
outsb
xchg
mov
pop
shrb
mov
add
outsb
xchg
jbe
sbbl
int
mov
cmp
cmp
test
push
ljmp
and
jl
aaa
sbb
mov
mov
aad
lcall
or
iret
shlb
fwait
es
adc
sub
into
mov
imul
xor
jl
out
fiaddl
cmp
push
cs
sub
fisubrs
mov
mov
movsb
sub
adc
xchg
or
es
repnz
cmpsb
std
xor
cmpsb
jmp
inc
inc
dec
sahf
es
adc
and
lcall
jecxz
pusha
dec
gs
jne
int3
sub
jne
scas
xchg
mov
xchg
inc
fwait
das
call
shlb
jg
pusha
sub
mov
iret
dec
dec
inc
sahf
ret
in
pop
dec
inc
mov
jp
xchg
push
and
lea
add
cmp
mov
lods
pop
outsb
mov
sahf
cs
bound
dec
test
mov
shrl
lods
mov
inc
in
outsb
inc
inc
adc
inc
sbb
sti
fimuls
sbb
cli
in
push
ds
lock
pop
jle
je
int3
lcall
dec
iret
adc
out
xchg
cmpsl
subb
cmpsl
ret
incb
sbb
push
lahf
out
inc
aam
xchg
fsubl
popa
enter
inc
jmp
inc
mov
xchg
call
pop
xchg
sub
data16
outsl
sbb
adc
and
bound
mov
dec
push
jnp,pt
pop
lea
shrb
xchg
jns
push
sbb
xlat
pusha
daa
push
fsincos
inc
push
das
add
push
push
out
xchg
stc
cmpsb
pusha
outsl
push
sti
cwtl
or
pop
sbb
stos
fstl
jo
ss
push
mov
divb
es
lahf
push
ss
cs
js
jne
pusha
pop
addb
movsl
into
test
fildl
or
popf
pop
push
int
mov
jp
xor
xchg
pusha
fistl
cmpsl
ss
aad
pop
addr16
inc
out
or
xor
xchg
test
push
data16
clc
dec
scas
adcl
inc
mov
test
imul
mov
sbb
and
aam
sub
cmpsl
xor
xchg
adc
arpl
in
mov
add
inc
dec
ljmp
ja
sbb
std
aad
nop
pop
push
mov
push
div
lcall
add
enter
call
test
das
sub
lcall
shll
pop
pusha
mov
mov
sub
ss
xor
mov
aaa
sti
cmpsb
push
xor
sbb
ja
sbb
rcrl
out
push
inc
push
fisttpl
or
xchg
add
ret
call
adc
ret
clc
xor
push
or
add
add
pop
dec
inc
mov
mov
les
inc
fstl
dec
mov
push
sti
mov
mov
hlt
cs
inc
lds
les
jns
decb
add
jbe
nop
ret
sbb
lock
mull
jp
xchg
or
ds
cmp
dec
dec
pop
cmp
pop
add
push
ds
jae
cmp
cmp
stos
push
sub
mov
scas
mov
jle
lahf
idiv
fisttpl
mov
pop
and
push
pop
call
gs
movl
push
mov
and
push
xor
inc
and
mov
mov
andl
jo
push
cmpsb
lock
mov
call
loopne
sbb
add
arpl
and
aas
into
sub
push
popa
xor
mov
lmsw
outsb
dec
jno
fisubrs
aaa
pusha
jbe
js
loop
out
fsubs
shrb
roll
push
add
dec
iret
sahf
and
sahf
xor
loope
es
scas
fdivrs
ret
mov
xchg
das
pop
les
pop
jb
scas
dec
add
or
mov
and
adc
cs
mov
adc
subb
push
jmp
aad
push
mov
dec
ss
push
test
mov
xchg
push
and
and
int3
xchg
ds
jmp
lods
jecxz
test
jl
adc
out
es
aas
push
das
or
das
scas
lods
outsb
loope
add
mov
or
pushl
jp
inc
mov
aad
pop
sahf
ss
cmp
jp
aaa
or
mov
idiv
inc
lock
fmull
pop
jle,pt
fidivrl
push
push
scas
cs
out
pop
push
mov
push
psubsw
push
adc
pop
push
outsl
inc
out
add
jbe
in
notl
adc
sar
mov
and
xchg
addr16
inc
inc
call
adc
fucom
clc
add
insb
push
sbb
jecxz
xchg
push
fdivr
lea
sub
adc
sub
sbb
lret
jb
lcall
out
jle
push
dec
sahf
dec
inc
test
ret
movsb
sub
data16
aad
aaa
mov
add
or
pop
ja
xlat
call
sbb
xor
outsl
jno
inc
div
push
out
push
push
pop
test
push
push
into
inc
gs
xchg
and
mulb
add
pop
es
sbb
mov
cmp
push
iret
jp
shll
jge,pt
call
inc
mov
std
sub
xor
cmpsl
ss
cltd
cs
and
sub
sbb
mov
sbb
insl
aam
sub
aad
cmp
ds
pop
add
fcmovnb
notb
rcl
data16
jno
mov
hlt
fists
notl
ror
push
shll
mov
ficoms
cmp
and
hlt
mov
mov
push
sarl
push
ja
icebp
ja
in
mov
adc
into
jle
cwtl
and
fwait
std
adc
cmpb
testb
inc
dec
add
sbb
movsl
xchg
test
in
xchg
push
and
daa
addr16
fdivp
orl
dec
out
inc
inc
adcb
iret
mov
mov
in
out
les
jg
in
xor
into
imul
jo
aas
loopne
ss
bswap
mov
nop
adc
and
and
jne
and
sbb
push
sti
jae
lahf
push
push
xchg
les
stos
in
das
jo
stos
fs
push
fstps
cli
sub
ds
inc
add
and
or
addr16
mov
cmpsb
inc
lods
sub
lcall
xchg
mov
es
clc
sbb
out
or
test
into
mov
ret
fadds
dec
ficoml
push
dec
inc
inc
cmpsb
out
cli
sbb
xor
mov
adc
lods
es
and
pop
out
push
xchg
cmpsb
in
and
cld
push
aas
je
int3
aaa
sbb
and
aad
rcrb
unpckhps
xor
das
insl
push
jae
es
dec
mov
xor
aam
push
jl
add
mov
mov
rorl
sub
dec
cli
and
sub
push
sbbl
data16
xchg
xchg
cs
jne
test
mov
inc
mulb
cwtl
xchg
clc
and
cltd
jae
or
cmpsb
jg
and
push
scas
pop
pop
sahf
pop
push
dec
push
roll
push
xor
jge
daa
and
fdivl
mov
pop
sbb
dec
adc
or
jmp
sbb
inc
and
sub
and
sti
inc
mov
bound
or
nop
loope
sbb
push
jle
jns
shlb
testb
xchg
mov
push
inc
in
repz
push
sbb
push
mov
mov
fwait
rolb
movq
push
push
mov
hlt
lds
data16
mov
mov
xor
adc
sub
push
or
mov
sbb
push
or
mov
xor
mov
push
push
adc
lds
insb
mov
je
push
enter
jo
addb
cmp
push
sbb
stos
sub
loopne
ds
les
out
or
pop
adc
sbb
and
dec
call
lods
push
ret
gs
fnstcw
sti
add
mov
outsb
pop
add
aad
push
push
scas
xchg
into
sti
pop
lea
xor
fldt
or
dec
mov
das
mov
iret
xchg
cmpsb
sbb
les
cs
or
out
int3
jg
jo
mov
or
addl
mov
and
sub
scas
xlat
fsubs
xchg
test
jle
push
push
sub
and
pop
shll
mov
cmpsl
xor
adc
cmp
lret
data16
mov
call
cld
pop
push
mov
fbstp
sti
mov
mov
add
lds
jecxz
mov
push
sub
jnp,pt
or
adc
cmp
aaa
adc
cmp
pop
movsb
sub
and
dec
push
ds
adc
and
push
inc
inc
test
push
lahf
ja
inc
jbe
aam
add
mov
repz
pop
in
dec
mov
mov
fldenv
add
aam
adc
mov
inc
mull
push
sub
fisttps
testl
jbe
mov
stos
test
sahf
sahf
dec
rep
adc
sbb
ds
adc
ds
add
jbe
imul
cmpsb
push
sti
push
cs
inc
call
fisttpl
iret
pop
aam
mov
cmp
pop
out
pop
add
add
add
dec
adc
adc
dec
jg
cmpsl
call
xchg
sbb
adc
loopne
inc
xchg
push
and
mov
insl
cmpsb
xor
pop
inc
mov
and
call
dec
out
test
scas
fdivrl
cmp
mov
mov
fwait
mov
cmc
sti
pop
in
push
inc
cld
or
loop
fsubr
lcall
dec
cmp
push
ljmp
xlat
push
into
test
jle
lahf
pop
sub
cwtl
mov
stos
out
sbb
mov
clc
lahf
inc
or
in
inc
jb
int3
cmp
push
dec
pop
cltd
push
jbe
push
push
das
xor
in
inc
mov
clc
add
mov
mov
in
push
inc
and
add
mov
and
inc
outsb
add
jo
push
and
push
ja
shlb
add
add
rolb
adc
aaa
jle
test
jae
and
inc
imul
je
out
push
fwait
popa
test
dec
push
ret
mov
push
pop
jmp
push
inc
jb
adc
ret
dec
dec
scas
dec
add
push
clc
and
mov
and
out
testl
iret
add
icebp
iret
outsb
fldl
xor
pop
inc
inc
push
gs
sbb
push
fidivrs
push
add
shr
outsl
lcall
adc
inc
cld
sub
fmul
or
out
xor
dec
adc
add
add
adc
add
adc
jle
push
push
pusha
test
nop
ds
bound
add
push
pop
jg,pn
dec
xorl
mov
jmp
jecxz
aaa
outsb
fidivs
jmp
inc
cmc
add
mov
gs
hlt
dec
imul
push
shrl
ror
sub
ljmp
je
jo
into
xor
jmp
adc
test
jne
iret
aaa
ds
jg,pn
jle
clc
mov
iret
xor
fsubl
test
push
cld
mov
mov
out
cltd
sti
sub
add
jne
lods
outsb
sti
scas
mov
jmp
jmp
pop
ret
inc
push
mov
in
xchg
jle
and
rcrl
and
cmp
dec
loope
adc
mov
mov
repnz
nop
pop
sub
adc
jg
imul
sub
pop
movb
xor
pop
ds
cmp
jl
sub
adcl
pop
push
dec
pop
cmpsl
in
call
inc
cmpsb
push
insl
sbb
mov
sbb
lock
mov
scas
mov
mov
scas
pop
cmpsl
and
sahf
sub
sti
dec
shll
pop
adc
sbb
in
xor
hlt
sti
pop
cs
pop
or
pop
cwtl
inc
pop
scas
add
cs
mov
xchg
mov
lods
subb
sub
scas
test
std
inc
cld
push
dec
xor
insl
adc
and
or
mov
push
inc
lock
fstl
arpl
push
test
and
sub
sahf
pop
cld
es
mov
in
inc
sub
push
jg
cmc
clc
pop
inc
pop
mov
adc
pop
add
mov
addr16
sub
push
jmp
mov
lea
push
lods
outsb
or
in
pop
pop
or
mov
pusha
dec
sar
mov
inc
cmpsl
lods
push
inc
push
add
popa
nop
or
xor
outsb
pusha
cmpsb
mov
sarl
mov
out
cmpsb
sbb
add
jg
cs
ja
nop
push
das
punpckhbw
cmp
dec
dec
push
push
sbb
insl
push
xchg
dec
cmpsb
data16
mov
xor
pop
decl
mov
fisubrs
mov
jmp
adc
lock
xchg
into
ret
pop
sbb
out
xchg
lea
xchg
mov
in
lods
push
outsb
inc
push
jecxz
sbb
dec
cli
mov
dec
sbb
adc
clc
fprem
jg
cmpsl
jbe
adc
pop
inc
aam
fdivr
add
jns
mov
into
dec
loopne
decb
mov
inc
xchg
je
les
xchg
pop
xchg
push
push
jne
jbe
push
mov
aam
cmpsb
movsl
stc
fadds
rcl
mov
cs
push
xor
add
sub
push
xor
ficompl
cs
loope
lock
jmp
into
mov
mov
popa
loope
scas
push
add
dec
rcrl
loop
lods
popf
test
ja
lahf
ja
mov
inc
and
lsl
jg
cmc
fistl
push
jns
push
es
mov
fucomi
cmp
push
sub
push
arpl
add
test
add
sub
sahf
ss
shlb
xor
ss
adc
and
push
push
push
es
enter
stos
mov
out
push
into
fistl
add
dec
sahf
xor
loope
push
adc
mov
push
mov
ja
mov
push
or
push
xorb
push
into
jecxz
mov
xor
test
cmpl
mov
mov
mov
cwtl
es
rclw
insb
push
loop
adc
fidivs
arpl
cld
fs
add
sahf
jns
into
lods
icebp
jae
test
and
mov
cltd
stc
or
mov
aad
fisubl
clc
data16
lds
outsb
je
fs
enter
push
mov
and
mov
fucomp
mov
push
pop
es
aas
arpl
push
int
pop
and
das
jo
adc
fs
and
or
divl
imul
push
and
lock
push
sub
push
int3
pop
cmp
js
mov
popf
clc
dec
mov
adc
add
pop
dec
inc
mov
ret
ja
lret
add
data16
push
fildl
push
enter
outsl
mov
test
mov
clc
or
hlt
das
mov
scas
dec
cltd
or
movsb
scas
js
dec
clc
mov
mov
push
cmp
push
les
loop
inc
and
cwtl
add
xchg
cli
push
cmpsb
mov
dec
pop
push
incb
scas
jno
ljmp
inc
cmp
push
pop
dec
lods
and
sahf
sub
cmpsl
outsl
mov
jo
negb
into
insl
fwait
lods
inc
ret
sbbb
sahf
jne
or
fldl
idivl
stos
js
cmpsb
mov
andb
sub
inc
out
mov
addb
ficomps
fdivl
ret
lock
add
lcall
ds
mov
scas
mov
rorl
sti
fnsave
xor
xor
notb
hlt
lret
aaa
sti
and
movsb
aam
xchg
jle
xchg
cmpsl
sahf
shrl
and
mov
addr16
outsl
pop
aas
pop
push
movb
xor
push
ja
lock
or
xor
enter
jo
leave
ficomps
sti
cmp
add
inc
bound
mov
xor
imul
hlt
out
cs
add
xchg
push
dec
cs
xor
imul
pop
sbb
jg
into
push
sub
xchg
hlt
add
sub
jae
push
test
inc
jbe
adc
push
dec
lods
or
test
inc
cmpsb
mov
fwait
or
test
push
shr
or
lahf
cltd
sbb
adc
cli
addr16
ss
js
mov
xor
adc
aad
adc
ucomiss
pop
xor
pop
shlb
cmp
ficoms
xor
push
iret
paddb
cld
cld
push
scas
add
scas
sbb
pop
or
push
dec
lods
mov
xor
pop
push
dec
jbe
push
aad
xchg
mov
push
cmpsl
mov
mov
inc
push
and
mov
add
and
xchg
xchg
lcall
adc
pop
mov
sbb
lods
ret
sarl
mov
hlt
dec
es
lcall
clc
fcoml
xchg
stos
ss
test
xchg
pop
inc
aad
call
imul
fimuls
xchg
pop
cmp
jbe
lods
sbb
in
scas
fwait
add
dec
lcall
cmpsb
pop
bound
jmp
call
push
cmpb
jo
push
es
or
push
push
and
xchg
fists
nop
mov
push
cmp
add
scas
or
ret
das
das
loopne
or
inc
sti
shll
push
xchg
pop
es
or
add
sub
push
dec
aam
mov
pop
or
insb
mov
and
ljmp
jne
push
dec
enter
int3
dec
icebp
ljmp
outsl
xchg
cmp
clc
add
pop
jbe
sbb
push
mov
xor
stos
or
lods
aam
cmpsb
rcl
push
xchg
xchg
out
mov
repz
push
or
aad
ss
in
xchg
mov
or
mov
popf
ds
sbb
xchg
xchg
js
and
inc
add
pop
lretw
push
cmp
movsb
js,pn
into
fbstp
jp
into
lock
sub
cmpsb
dec
sub
xor
imul
push
outsb
lcall
sti
pusha
repz
sti
mov
mov
sarb
or
aas
pop
add
in
push
sbb
in
insb
jl
das
adc
test
mov
fcmovnb
test
outsb
lods
xchg
jo
into
mov
call
pop
andb
inc
dec
cmc
pop
push
incb
imul
adc
pop
sub
adc
or
add
sahf
xchg
jb
clc
mov
push
push
outsb
outsb
fs
mov
int3
jbe
push
addl
add
mov
inc
mov
test
mulb
jns
pop
hlt
adc
jge
jg
movsl
pop
jle
pop
cmp
shrl
mov
mov
sub
inc
fiadds
rolb
sub
leave
xchg
push
push
xchg
xor
inc
es
xor
and
pop
test
addb
pop
scas
adc
push
add
setle
pop
mov
xchg
nop
add
xchg
mov
mov
mov
cmp
cmp
xorb
xchg
cmp
clc
cmp
add
lahf
inc
cmp
sub
aas
cwtl
sarb
xor
call
inc
in
pop
dec
fdivl
xor
imul
fnstsw
jne
loop
gs
pop
push
jne
clc
and
xchg
out
or
cld
push
lods
jnp
xchg
add
clc
inc
push
push
jl
push
jbe
cmp
push
lcall
in
push
jge
int3
add
and
xchg
cmp
cwtl
arpl
push
repz
rolb
loop
stc
sbb
ljmp
or
cmp
pop
add
lcall
sbb
sar
and
es
lock
decb
int3
xor
in
fcmovne
xchg
sbb
into
xor
jo
jno
out
push
sbb
add
or
push
test
push
je
das
in
mov
mov
cltd
dec
push
call
ljmp
shrb
aad
jecxz
lcall
hlt
mov
int3
sbb
cwtl
and
pop
pop
test
call
xchg
in
call
adc
nop
lock
push
mov
test
adc
push
test
push
mov
adc
int3
scas
sub
cs
inc
idiv
push
jns
lock
out
xchg
sahf
movsw
mov
xchg
jno
mov
xchg
cwtl
push
push
sub
mov
push
dec
sub
pop
in
or
into
inc
mov
mov
add
jae
pop
out
adc
popf
es
add
into
aam
call
mov
pop
ds
into
xchg
insb
jg
shufps
gs
mov
push
push
imul
iret
add
jne
adc
mov
mov
mov
das
je
sar
inc
fistpl
lea
out
push
pop
call
dec
or
shlb
mov
cmpsb
cld
insb
inc
fistl
clc
cmp
jge
test
pop
stos
popa
xor
sbb
add
or
xchg
lcall
or
movl
inc
push
mov
loope
pusha
outsb
or
popa
mov
sahf
xchg
mov
daa
or
mov
out
in
loopne
or
cmpsb
push
mov
inc
adc
jecxz
mov
outsb
push
incl
sbb
jge
int3
xchg
inc
out
lret
sub
fcomi
addb
inc
inc
lds
sub
push
pop
xor
out
sti
add
sbb
lahf
insl
inc
imul
push
or
jne
ret
dec
popa
lods
sarb
mov
mov
fisttpll
mov
mov
push
add
insl
mov
jne
cs
aas
cmp
mov
testl
adc
ret
xorb
stos
add
pop
or
push
dec
cmpsb
ds
inc
inc
lods
jle
sub
xchg
push
mov
lcall
adc
das
sbb
lods
dec
and
ss
inc
pop
add
pop
popa
adc
dec
jg
mov
shld
push
daa
rorb
subb
push
xchg
idivb
xchg
add
mov
push
outsb
dec
ss
lods
and
sbb
daa
jle
adc
insl
into
data16
mov
xchg
dec
pop
push
xor
in
xor
aaa
mov
and
jbe
into
sbb
filds
aaa
aad
pop
adc
and
mov
scas
loopne
ds
sbb
xor
add
cmp
fisttpl
pop
xor
xor
push
popf
stos
mov
sahf
bound
sbb
pop
xor
sub
pop
pop
into
outsb
xor
ja
mov
mov
pop
cmpsb
add
enter
push
push
sahf
lcall
sbb
pusha
movb
sbb
mov
movhps
or
or
and
adc
andl
and
or
add
pop
xchg
pop
leave
inc
ljmp
add
xlat
into
or
cmp
aaa
inc
mov
push
dec
push
push
cld
hlt
sub
pop
xchg
int3
pop
lahf
mov
and
cmpsb
fimuls
and
movsb
fwait
ljmp
xlat
dec
test
mov
insl
inc
mov
mov
pop
outsb
pop
inc
cmp
mov
pop
push
aaa
inc
cwtl
daa
fildl
add
add
mov
mov
push
cmc
adc
sbb
jbe,pt
or
push
jle
pusha
std
add
mov
dec
sub
mov
sub
ja
mov
mov
scas
cmp
adc
mov
incb
push
or
xor
push
inc
adc
lahf
add
fildll
icebp
and
outsl
into
pop
rcll
mov
and
adc
das
adc
dec
inc
ljmp
mov
out
movb
mov
pop
add
ss
add
push
push
add
push
ds
lods
sub
add
sub
aam
sub
sbb
mov
into
sbb
js
sbb
push
dec
fimull
fidivrs
roll
mov
push
inc
data16
push
adc
mov
jnp
testb
ja
call
cmpsb
pop
push
shrb
sbb
and
out
insb
sbb
mov
insb
push
pop
xchg
push
adc
or
scas
imull
ss
sahf
push
and
je
repnz
adc
inc
or
inc
inc
jg
dec
dec
sarb
push
adc
inc
cli
mov
andb
das
adc
cltd
incl
xchg
sar
ret
cs
fdivrl
jns
inc
mov
popf
ds
dec
int3
inc
fwait
push
xor
and
push
inc
inc
out
or
pop
sbb
sub
mov
out
jns
and
std
lock
inc
cld
adc
mov
icebp
ja
cmp
dec
popf
sbb
andb
in
ret
adc
jl
mov
mov
ficomps
mov
call
mov
scas
dec
iret
push
inc
int3
inc
sahf
test
movsl
ds
add
test
ja
inc
aam
aam
arpl
push
popa
mov
ds
sub
add
mov
push
test
dec
inc
out
jmp
adc
sub
fwait
pop
cmp
push
dec
xor
sub
dec
mov
std
mov
fisubs
cs
add
jle
es
cmc
sahf
cmpsb
mov
test
lods
push
push
push
inc
outsl
jle
sahf
cmpsb
inc
mov
js
push
loopne
pand
call
call
ficomps
jnp
rorb
and
lea
js
stos
xchg
xor
out
dec
xor
stc
repnz
mov
xchg
push
cs
int3
mov
int3
into
sub
jl
int3
fwait
push
int3
pop
mov
pop
push
and
sti
lods
lds
cli
jl
popf
loope
xor
fnstenv
sti
xchg
xchg
cmp
mov
sarl
dec
pop
dec
push
cmpsl
std
sbb
lcall
cli
adc
mov
scas
mov
daa
cmp
adc
sahf
ss
es
dec
clc
dec
scas
ss
incl
test
into
ss
sbb
push
push
mov
push
push
insl
sub
scas
cmc
sbbl
push
aaa
pop
fnsave
pop
jne
sbb
pusha
adc
inc
orl
and
dec
sbb
and
push
aaa
outsb
or
dec
fs
testb
xchg
arpl
xchg
ss
out
add
sbb
add
scas
push
or
andl
jbe
aaa
popf
inc
xor
xor
cmp
lcall
fidivrs
int3
mov
push
ljmp
sbb
xchg
insl
xchg
loope
xchg
test
loope
sub
inc
push
in
push
pop
sub
loope
ds
nop
jle
push
inc
pop
pop
nop
xor
test
adc
push
movsb
push
sar
insl
push
arpl
sbb
inc
push
or
add
nop
adc
cmp
dec
dec
insb
mov
aas
pop
stos
pop
je
add
push
scas
add
adc
add
fiadds
das
call
sti
mov
es
adc
jb
aam
sbb
pop
inc
mov
inc
add
aaa
or
push
cli
in
adc
mov
int
inc
test
push
push
sbb
xor
sahf
call
cmpsb
add
adc
mov
adc
inc
jl
pop
push
inc
cmpsw
sbb
pop
leave
pop
and
xor
adc
sbb
inc
ss
push
test
lahf
aam
jbe
dec
add
lea
adc
daa
inc
xor
fiadds
fbld
cmpsb
sub
aad
imul
pop
je
lahf
subb
sub
insb
gs
popf
xor
out
stos
dec
lcall
outsl
add
outsb
xchg
add
mov
fldenv
inc
shlb
fs
leave
xor
and
xchg
push
inc
sahf
jno
cli
push
jmp
mov
xlat
fcomps
data16
mov
dec
call
sub
arpl
ss
add
pop
sti
dec
jmp
and
sbb
dec
imulb
inc
cs
adc
fbstp
icebp
sub
in
outsl
or
ljmp
imulb
fbld
adc
cmp
addr16
insl
outsl
or
popa
jbe
cmp
js
mov
jg
push
icebp
aaa
adc
sarb
ds
inc
mov
sub
jbe
ss
or
xchg
mov
sahf
in
rcrl
push
loopne
and
in
add
call
cwtl
gs
sub
sahf
test
sub
jno
cltd
imul
inc
inc
or
lods
cmp
add
rclb
sbb
rcl
rolb
pop
xor
xchg
cmpsb
ds
add
ret
int3
push
les
xchg
jbe
jp
xchg
clc
adc
sbb
sar
jne
jbe
dec
orb
sbb
fiadds
ret
push
into
xchg
sarl
mov
ljmp
adc
mov
lods
add
out
pop
cwtl
push
cmpsb
jle
adc
pusha
clc
daa
mov
repz
push
push
mov
inc
test
adc
into
pop
pop
or
push
inc
sbb
mov
incl
xchg
push
adc
inc
test
jnp
pusha
xchg
dec
stos
dec
push
loop
sbb
adc
outsb
ds
or
testb
mov
out
mov
lcall
out
push
mov
testb
xchg
mov
jb
jae
mul
or
push
add
imul
cmp
xchg
sbb
adc
shrb
ljmp
inc
aaa
push
sbb
pushw
jnp
xchg
dec
add
or
addr16
and
nop
cmp
jle
ret
dec
addl
ds
mov
add
movsl
cs
ja
cmpl
rorl
dec
fsubs
dec
inc
aaa
repnz
fnstsw
jmp
pop
jb
xchg
xchg
sbb
add
xchg
subb
adc
mov
sub
ret
mov
sbb
arpl
xchg
xor
or
aas
scas
cmp
sti
stc
add
icebp
ret
pusha
imul
fwait
aaa
xchg
clc
scas
data16
and
cmp
movsl
push
inc
push
add
scas
xchg
fs
push
lcall
xchg
into
jle
ret
lock
jmp
push
incb
jg
sub
iret
adc
insl
xlat
faddl
mov
loopne
sti
inc
inc
and
aam
mov
sbb
adc
mov
pop
jg
std
sub
push
scas
stos
adc
sub
sbb
lcall
push
nop
lret
stos
add
daa
test
cwtl
and
adc
dec
ljmp
push
subl
inc
cmp
outsb
hlt
pop
xor
sahf
mov
js
or
or
out
hlt
push
adc
adc
push
enter
pusha
je
inc
repz
adc
adc
out
ja
stos
test
pop
mov
outsb
inc
adc
adc
data16
pusha
loope
scas
xor
pop
dec
mov
ds
outsl
and
add
test
or
inc
add
aas
test
sbb
push
jmp
cmp
inc
aad
ss
ljmp
pop
outsb
push
or
sbb
jge
ds
inc
outsb
lcall
xchg
add
dec
or
es
xor
mov
idivb
out
jnp
movl
xchg
test
add
or
and
sub
xlat
pop
push
lods
dec
std
insl
pop
rclb
roll
inc
lods
es
dec
sahf
andl
jle
hlt
mov
fcmovnb
fistps
push
cld
adc
mov
cmp
adc
lcall
cli
or
scas
movl
dec
cli
adc
dec
inc
addr16
inc
lods
dec
cmp
arpl
rorl
adc
jbe
and
jle
mov
mov
cld
add
es
incl
es
and
dec
and
scas
call
push
outsb
pop
call
subl
cwtl
push
push
inc
lcall
jmp
jecxz
lea
addr16
rclb
lcall
jb
scas
pop
xor
pop
sub
ja
loopne
add
mov
mov
sahf
mov
fwait
loopne
mov
xchg
and
ds
sub
ljmp
je
lea
aam
rcrb
adc
cs
xchg
push
lods
inc
sub
and
inc
cmpsb
insb
stos
cmp
ds
mov
movsb
cs
cs
xchg
testb
aaa
icebp
into
push
call
cmp
mov
xlat
push
cmpsb
push
xor
inc
push
or
inc
lcall
outsb
cs
sub
subb
in
ss
rolb
push
call
mov
mov
add
mov
das
push
dec
adcl
or
adc
shll
outsb
and
sub
addb
push
xor
inc
shll
mov
cmp
jnp
xlat
add
sub
pushw
repnz
push
in
mov
shl
lret
out
push
mov
inc
xor
xlat
jne
pop
test
lods
js
cld
pop
push
sbb
add
testb
es
sbb
fisubrs
jle
mov
out
jne
push
pop
adc
into
mov
mov
addr16
add
ja
outsb
fsubr
fiadds
das
cmp
mov
mov
cmpsb
push
xor
sub
popw
int
push
cli
add
clc
inc
or
ret
daa
leave
dec
les
aaa
pop
dec
sahf
xchg
xor
mov
scas
addb
push
sbb
cmpsl
ret
push
dec
shlb
sahf
stc
mov
xchg
add
fistpl
and
jns
inc
dec
popa
fs
jae
arpl
jb
lahf
pop
ds
mov
out
sbb
sub
inc
pop
push
push
dec
ss
push
scas
mov
xchg
mov
arpl
or
cmp
jbe
jbe
test
addr16
js
daa
mov
les
jmp
emms
fidivrl
push
lahf
mov
sahf
je
jmp
cltd
lcall
js
popa
jnp
loopne
call
sahf
in
jo
insb
sub
test
push
and
lds
std
sub
jns
jnp
jae
mov
jmp
push
mov
and
pop
jns
cmp
pop
pop
into
arpl
movsb
pop
pop
cs
ficoms
mov
adc
fildl
sti
pop
dec
pushl
stos
add
sub
and
or
push
nop
sahf
inc
pop
aas
push
testb
mov
dec
adc
mov
jg
mov
es
xor
cmpsl
cmp
add
jbe
cli
repz
push
sahf
pop
in
xchg
addl
outsb
and
add
jge
cs
ret
ror
out
mov
aaa
inc
mov
push
stc
xor
adc
fs
jmp
das
stos
int3
mov
das
push
push
outsb
call
pushfw
dec
int3
bound
scas
lods
jge
add
ds
fistpl
sub
mov
pusha
and
lret
add
outsb
rcrl
mov
jle
decb
and
loope
cs
xchg
dec
xlat
dec
es
push
or
dec
cmpsb
jp
cwtl
dec
pop
loop
outsl
jecxz
aaa
ds
shlb
add
imul
test
shrb
enterw
clc
divl
icebp
pushf
cs
dec
mov
lea
sub
pop
add
je
inc
punpckldq
inc
jle
dec
out
icebp
xchg
cmpsb
jbe
xorl
add
prefetch
xlat
sahf
push
mov
imulb
divb
xchg
fcmovbe
sub
and
and
inc
or
cs
das
cs
sub
jg
inc
jl
mov
dec
out
std
push
inc
call
push
dec
inc
pop
xchg
push
mov
or
out
xchg
push
jb
push
push
mov
pop
ss
jecxz
into
xor
inc
ja
pop
adc
adc
cmp
pop
add
adc
loopne
loopne
mov
adc
and
jbe
ds
adc
or
cli
jbe
inc
dec
ja
scas
add
inc
sub
pusha
cmovae
mov
ljmp
and
xor
outsb
or
push
pop
jl
shlb
je
in
sbb
sbb
xor
push
dec
push
mov
mov
dec
jge
cwtl
in
repz
cmpsb
test
mov
loope
jmp
lods
xor
cld
pop
les
jecxz
xchg
out
je
je
mov
xabort
jl
xchg
adc
inc
sarb
lods
addb
fmuls
loope
leave
pop
out
test
mov
jle
cmpsl
lods
sub
xor
out
pushl
and
fistpll
mov
mov
add
pop
pop
addr16
sahf
pop
shlb
ja
mov
outsb
rcrl
xchg
mov
sbb
sbb
popf
inc
jp
push
jae
mov
sub
mov
sub
cmp
mov
jle
push
inc
cld
and
push
shlb
loop
mov
jl
adc
mov
inc
xchg
push
sqrtps
repz
xor
cltd
popa
lods
push
aaa
pop
or
xchg
push
mov
outsb
sti
mov
mov
mov
fiadds
ret
mov
movsb
movsb
outsb
mov
push
jo
push
push
outsb
arpl
cmc
dec
enter
lea
call
push
pop
and
mov
push
gs
sub
inc
cmp
pop
push
add
push
push
and
mov
mov
push
nop
pop
push
test
add
or
adc
inc
in
add
loop
push
addr16
push
adc
movsl
out
loope
cmpsb
out
push
lods
jmp
dec
mov
sub
push
push
mov
push
jge
addb
sbb
sti
jne
ljmp
push
cmpsl
or
je
jbe
xor
loop
mov
popa
adc
cs
push
add
or
lret
cmpsb
jmp
pop
stos
or
dec
pop
adc
out
daa
pop
in
aam
test
push
push
push
ret
push
rclb
dec
adc
mov
nop
cli
data16
dec
sti
sbb
sub
and
data16
push
fildl
push
orl
add
inc
aam
adc
js
addr16
test
pop
adc
cmp
sub
xchg
push
sahf
push
inc
dec
mov
stos
mov
loop
aam
aaa
adc
sti
add
push
xchg
jle
out
pop
xchg
jl
imul
mov
fwait
cmp
pop
mov
sub
cmc
imulb
pop
fadd
lahf
push
cmpsb
xor
push
mov
shl
pop
ss
cmpsl
sub
mov
cs
movsb
inc
pop
shl
xchg
sub
add
mov
cmpsl
push
adc
rorl
add
xchg
jle
in
mov
inc
sub
jle
sbb
jg
xchg
mov
out
xchg
fcoml
test
clc
sub
movsb
sub
outsl
add
inc
dec
adc
dec
imull
adcb
scas
mov
clc
fs
sti
push
adc
into
nop
jle
outsl
aaa
loope,pn
push
sbb
push
cmp
add
imul
les
and
cmpsb
sahf
sbb
xor
adc
frstor
push
testb
scas
pop
mov
mov
scas
jbe
xchg
cmpb
and
or
jbe,pn
pop
and
xchg
sbbl
or
dec
fmull
test
adc
cmp
in
push
jbe
mov
out
mov
dec
and
push
adc
add
jmp
loope
adc
cwtl
inc
je
jo
ss
xor
or
sub
add
push
xor
popa
push
mov
push
sbbl
addl
and
xor
pop
and
lock
ss
sahf
sub
xchg
out
lahf
lahf
fstl
mov
jbe
cmp
add
sub
stos
inc
sub
xor
inc
xlat
ret
xor
out
sahf
fstl
cmp
lea
mov
neg
les
sbb
and
and
sub
shrl
xchg
ret
sub
mov
orl
mov
cs
lods
lock
pop
xchg
sti
add
es
cmp
xchg
test
clc
inc
cwtl
jb
dec
sub
movsb
push
shl
dec
mov
jp
dec
aaa
adc
pop
xchg
inc
shrb
jae
sti
and
pop
lods
mov
fisubrl
mov
cmp
aas
cmpsb
inc
mov
sub
lock
push
incb
iret
pop
outsb
add
adc
add
pop
push
push
lods
mov
pop
mov
arpl
inc
out
das
inc
push
scas
inc
in
mov
inc
ljmp
arpl
les
inc
pop
mov
bsf
jge
icebp
mov
daa
and
stc
xor
xchg
mov
fists
jmp
es
inc
sbb
push
mov
cmp
scas
dec
or
add
fldt
inc
mov
sub
sti
xor
es
cs
xor
mov
mov
out
fimuls
and
addb
pop
mov
mov
mov
or
or
push
push
adc
clc
sub
into
add
lcall
dec
adc
mov
xor
out
test
popf
scas
dec
das
inc
ret
into
pop
cltd
adc
ljmp
decb
lcall
insl
in
repnz
inc
push
popf
sub
and
outsl
mov
cmp
lret
fstp
sti
add
movsb
mov
mov
je
xchg
push
lods
aaa
inc
pushl
rclb
cmp
insb
call
sbb
push
outsb
mov
std
in
dec
sbb
cmpsl
and
push
test
repnz
push
or
push
push
push
emms
fsubs
roll
inc
jl
outsl
pop
jns
push
ja
mov
dec
dec
cmp
mov
outsb
pop
and
loopne
jmp
mov
insb
xchg
or
xchg
push
pusha
mov
outsb
push
lock
sub
inc
push
jecxz
shlb
add
add
decl
popa
jp
add
in
mov
je
lods
or
and
pop
jg
xor
xchg
aaa
outsb
sbb
adc
cmp
cwtl
test
mov
mov
out
pop
into
xchg
adc
mov
sarb
mov
clc
dec
add
add
dec
fisubs
dec
sub
push
fcoml
adc
outsl
jne
and
xor
dec
stos
adc
jae
into
jecxz
or
rcr
ds
push
add
pushf
popa
shrl
retw
push
sbb
and
cli
add
cmc
and
mov
jns
rclb
dec
cmpsb
pop
mov
inc
mov
clc
jge
call
mov
lret
push
push
nop
jp
sub
mov
imul
mov
movsb
sub
stc
mov
jne
test
jbe
and
dec
pop
js
repz
pop
dec
test
pop
push
push
xor
sbb
enter
inc
aam
jle
dec
add
xchg
jb
ds
pushw
fwait
cmp
mov
xor
mov
xchg
or
out
aaa
push
cmpsb
push
mov
xchg
sahf
imul
hlt
popf
push
out
mov
xchg
cmp
test
sbb
jle
lods
dec
adc
jns
xor
ljmp
push
jb
repz
jge
aaa
adcl
mulb
into
lcall
xor
lock
je
mov
mov
adc
push
rorb
stos
dec
clc
pop
dec
push
and
cmp
xchg
rclb
shlb
mov
mov
dec
sbb
aaa
std
int
mov
xor
or
adc
xor
jg
arpl
out
push
incb
mov
cmpsb
push
cmc
scas
jns
push
in
adc
or
xor
addr16
pop
dec
mov
outsl
inc
pop
cs
or
scas
pop
jmp
push
inc
jne
fbld
das
pop
jb
pop
adc
ret
mov
testl
fwait
jle
xchg
cmpsb
into
ret
mov
rorb
test
push
sahf
xor
push
and
jecxz
sbb
aad
enter
or
xchg
outsb
js
xlat
outsb
mov
lock
adc
add
adc
mull
push
mov
dec
fistpll
xchg
adcb
outsl
popa
pop
push
inc
call
lcall
xchg
decb
hlt
scas
push
sub
push
push
aas
push
add
sbb
inc
scas
scas
push
adc
inc
aaa
out
fldl
divps
inc
pop
je
cs
cs
push
push
sub
inc
adc
pop
aam
add
sbb
adc
std
dec
and
sti
jo
xchg
or
ss
movsl
or
loope
cmp
and
pushf
dec
insl
inc
scas
pop
push
push
xchg
inc
lea
xchg
sub
fcomip
pop
pop
xor
add
aaa
ret
aaa
or
ficomps
mov
push
daa
addr16
insl
pop
add
adc
sbb
sar
and
adcl
or
dec
cmpsb
pop
add
insl
adc
cmpsb
xor
and
out
in
jo
add
es
push
and
sub
scas
adc
add
cmp
jecxz
or
pop
xor
addr16
mov
cli
sub
les
lds
and
jnp
pop
push
pop
es
imul
pop
sub
jbe
and
pop
cmp
add
ficoms
xchg
negb
mov
imull
adc
push
ds
das
mov
pop
fistpll
pusha
ret
aaa
mov
sbb
jl
dec
sti
adc
mov
cld
jg
jnp
je
pop
or
cs
cmp
vmwrite
fildl
pop
xor
loopne
sahf
xchg
xor
jno
xor
add
or
fisttps
std
fdivrl
div
lret
aas
xchg
adc
and
cmc
in
pop
sbb
sarb
inc
dec
lods
adc
outsb
jmp
and
notb
in
or
adc
arpl
xlat
popa
xchg
pusha
imull
and
lahf
mov
lock
in
mov
adc
sbb
push
inc
mov
jp
mulb
fidivs
ja
inc
dec
push
popf
imul
ret
inc
pop
into
jmp
pop
repz
das
adc
inc
mov
push
cmp
aas
or
adc
lds
es
push
mov
or
into
xchg
push
movsl
push
push
dec
xchg
add
lea
pop
cld
pop
dec
add
call
add
fsubrs
or
iret
cmpsb
push
dec
inc
ljmp
imul
xor
aaa
sti
mov
dec
pop
lcall
fimuls
push
aas
add
sahf
and
push
cmp
add
pop
xchg
sub
cmp
xchg
fimuls
sub
dec
cld
push
or
adc
and
mov
int3
mov
into
mov
adc
aas
aad
xor
stos
jne
pop
push
sahf
outsl
mov
push
mov
fbld
cmp
out
pop
mov
jo
sahf
clc
popa
xor
sub
outsl
or
out
jne
test
or
dec
pop
sbb
xor
jbe
push
lods
and
into
push
mov
lods
xchg
push
sbb
jbe,pt
xor
push
xor
push
stos
jle
pop
mov
sbb
shl
inc
movb
add
and
adc
bound
jg
push
cmpsl
or
arpl
mov
aam
xor
push
pop
push
sbb
fwait
sbb
cmp
std
xchg
push
xchg
in
jo
aaa
std
das
sbb
insl
in
out
and
in
push
push
subb
inc
loope
incb
sub
push
sbb
mov
xchg
shlb
inc
clc
pop
mov
lcall
xor
sub
pop
fcmovbe
repz
clc
ljmp
and
arpl
push
ja
push
scas
push
fcmovb
fsubr
out
movsb
mov
or
test
pop
neg
sahf
pop
jnp
dec
in
dec
fisubrs
sub
clc
mov
inc
lds
sbb
scas
dec
mov
pop
cld
push
pop
sbb
inc
icebp
int3
xor
mov
push
out
inc
bound
scas
rcl
inc
add
push
pop
movsb
jo
xchg
scas
or
mov
add
xchg
scas
add
lea
lcall
xlat
or
cmpsb
mov
pop
adc
and
jne
adcb
mul
cs
bound
pop
call
fstpt
pop
mov
into
push
roll
in
push
addr16
fucomp
scas
sbb
addb
pop
insb
jecxz
mov
clc
pop
ret
sahf
cmpsb
mov
aad
pop
xor
mov
in
pop
mov
mov
sbb
test
mov
sahf
add
int3
lods
mov
or
push
negb
cmp
cmp
aaa
push
pop
insl
push
loope
lock
or
jbe
pusha
inc
shrb
jl
mov
adc
mov
dec
das
adc
sti
repnz
inc
pop
das
rcl
out
jbe
add
sbb
outsb
test
icebp
push
or
jne
test
cmp
jbe
sbb
sbb
pop
outsb
std
pop
cmp
imulb
stos
imul
xlat
fstl
add
lret
ja
aaa
push
jmp
cmp
cs
inc
mov
mov
in
or
insl
out
xchg
out
and
xor
add
add
jbe
ljmp
mov
inc
push
jmp
rcrb
dec
inc
pop
cmpsl
add
hlt
xor
rorl
push
mov
inc
clc
pop
pusha
add
mov
pop
test
call
mov
pop
fsubs
clc
or
test
xchg
out
ss
push
sub
insl
push
pop
fcmovbe
les
push
fwait
and
or
call
inc
xor
ret
gs
and
jne
dec
and
and
out
les
mov
scas
sbb
adc
or
pop
inc
push
ror
sbb
ficoml
mov
xchg
icebp
outsb
xchg
or
sub
add
outsb
jbe
push
inc
mov
and
inc
jae
cld
xlat
inc
rorl
sbb
mov
push
sub
sbb
hlt
mov
clc
dec
add
jle
add
mov
inc
cli
aas
arpl
aam
jnp
and
lods
idivb
jmp
fwait
push
gs
dec
test
sbb
rcrb
mov
or
out
push
and
add
pop
rorb
mov
aad
lcall
fstpl
loopne
pop
inc
mov
mov
adc
and
adc
outsb
cmp
fimull
daa
idivl
test
pop
inc
mov
and
mov
hlt
xchg
xor
push
pop
add
cmpsb
loop
push
aaa
fdivr
add
ljmp
add
pop
inc
adc
out
xor
cmpsl
shrl
sub
and
ss
mov
xchg
pop
push
add
movsb
mov
push
or
push
pop
xor
insb
inc
data16
jbe
pop
in
cmpsb
pop
xchg
jbe
sub
pop
shll
or
push
adc
popa
das
push
mov
cmpsl
nop
decl
mov
xchg
sbb
ljmp
scas
int3
js
push
lock
rcrl
xchg
xchg
rcll
push
cmpsb
inc
and
push
aaa
sar
sub
add
inc
ret
pop
jle
cwtl
add
dec
faddl
push
ss
and
mov
scas
xchg
rcrb
test
loopne
lret
sbb
pop
xchg
into
push
imul
xor
nop
xchg
pop
pusha
imul
aaa
ret
out
mov
xor
mov
mov
scas
push
into
mov
out
push
es
and
idivb
outsl
mov
dec
xchg
xor
mov
xchg
jg
in
cs
out
mov
jmp
mov
add
jecxz
loop
dec
mov
sbb
pop
int3
xchg
xor
ficompl
negl
mov
push
mov
cwtl
mov
ss
xchg
iret
push
xor
adc
inc
gs
xor
and
sbb
fdivrl
dec
nop
inc
clc
mov
xor
aas
pop
inc
lods
lods
xchg
inc
jb
icebp
push
mov
jne
fisttpl
cmp
in
mov
inc
mov
int3
lods
push
inc
jae
mov
and
and
cmp
cwtl
xbegin
sarl
xchg
dec
call
mov
testl
inc
stos
dec
adc
es
mov
add
mov
sbb
inc
daa
push
test
cmpsl
idivb
sti
in
lock
adc
mov
xchg
fmuls
mov
ljmp
decl
dec
push
cwtl
push
pop
scas
insl
and
inc
cwtl
xor
jbe
push
lock
scas
daa
lret
enter
test
subb
out
js
mov
push
insl
cwtl
or
lods
outsb
or
cltd
mov
ds
jl
popf
popa
lahf
mov
insb
mov
sahf
pop
or
adc
sub
push
sbb
add
push
jle
or
popl
add
pop
add
pop
ljmp
inc
push
jle
add
iret
fsubp
mov
push
adc
push
add
not
int3
dec
xchg
dec
cmp
movsb
push
movsb
xor
adc
pop
sahf
insl
or
and
pop
mov
iret
test
or
adc
push
into
adc
add
daa
jbe
leave
adc
push
xchg
adc
and
pop
into
dec
imul
dec
inc
dec
out
mov
add
add
jmp
popf
push
mov
sbb
int3
into
push
shrb
and
into
je
sub
imul
or
sub
adc
xor
aam
lock
ja
xchg
jne
lret
orb
jbe
xchg
nop
out
pop
popa
cs
in
mov
in
movb
inc
or
pop
adc
adc
add
icebp
aaa
decl
push
pop
and
sbb
xor
test
sub
sarb
mov
stos
sbb
add
mov
popa
and
popa
pop
add
shrb
pop
mov
jl
add
gs
scas
adc
add
ja
push
push
dec
mov
add
incl
rolb
enter
add
inc
xchg
lahf
dec
fistl
cwtl
pop
jle
cli
adc
clc
adc
movsb
mov
dec
add
decl
iret
lods
adc
inc
addr16
mov
lock
loope
data16
sti
and
sub
aad
pop
mov
ds
arpl
xchg
xchg
cs
adc
stc
push
inc
cli
loope
or
bound
pop
xlat
insl
mov
dec
jno
into
add
push
mov
ds
test
test
pop
outsl
inc
jae
adc
mov
inc
adc
jp
sahf
movsb
mov
lods
push
sbb
push
pop
call
mov
cltd
lcall
xor
in
in
push
popf
shlb
fidivrs
stos
out
push
mov
scas
cmp
dec
ljmp
sti
sub
push
sbb
pop
mov
pop
pop
sar
fs
incl
jbe
xchg
pop
xchg
adc
in
xor
pop
loopne
sub
outsb
inc
daa
adc
call
push
das
add
fisttpll
cli
cmp
push
or
bound
pop
push
aas
or
je
scas
jae
or
xor
fistl
sub
dec
sbb
and
jne
push
xchg
bound
sbb
pusha
adc
pop
test
dec
idiv
pop
aam
int3
adc
pop
xchg
add
sbb
xchg
daa
pop
push
push
int
lea
cmpsb
xor
cs
xchg
dec
sbbb
dec
ss
jp,pn
orl
lods
fcompp
ss
xor
out
inc
out
pop
add
add
mov
ja
dec
pop
rclb
sub
xor
imul
icebp
add
add
cmpsb
pop
stos
mulb
add
push
and
lock
pop
xchg
push
stos
gs
addr16
pop
scas
inc
push
std
xor
out
mov
cmp
gs
jmp
icebp
insl
fdivp
ds
jbe
pop
call
out
cmpsl
sub
adc
fs
rorb
filds
bound
xchg
out
mov
lahf
pop
into
jmp
int
and
mov
fld
and
and
mov
dec
out
push
push
jmp
outsb
fistl
and
sti
dec
cmpsb
outsb
lods
fldenv
jl
aas
das
inc
sbb
lods
xchg
scas
sbb
cmpsb
adc
enter
mov
jns
or
scas
jle
sarl
mov
pop
xchg
push
lods
push
adc
or
or
adc
pop
cmpsb
or
into
push
aad
add
and
out
xchg
dec
nop
sti
scas
fucomi
fiadds
push
jbe
cmp
decb
dec
adc
or
cmpsb
int3
jge
adc
add
pop
fisttpl
out
adc
cmpsl
popf
ret
mov
add
jne
es
push
lcall
push
scas
mov
pop
fcmove
sbbb
ss
sbb
adc
jmp
xchg
leave
cmpl
pop
add
out
out
test
dec
loopne
jl
addr16
cwtl
or
sti
out
inc
mov
cltd
or
cli
sar
into
lods
outsb
inc
fisubs
clc
inc
inc
adc
mov
dec
mov
push
jnp
cmp
scas
lods
rolb
fbld
push
pop
xchg
cmpsb
sub
mov
fildll
jl
jl
sbb
movsb
js
mov
add
movsb
jno,pn
iret
sti
jp
push
aam
pop
or
pop
jp
cmp
test
xchg
lock
and
and
cli
lds
mov
inc
repz
test
push
icebp
cvtdq2ps
test
adc
lds
mov
or
push
dec
xor
mov
push
jnp
cli
loopne
mov
pcmpgtw
adc
lcall
aam
ficomps
ja
or
subl
jl
jle
lahf
dec
mov
les
jns
out
enter
or
push
cmpsb
adc
shrb
insb
or
call
imul
mov
test
xor
ret
inc
les
loope
push
cld
push
mov
push
into
inc
loope
outsl
inc
push
popw
sbb
adc
cmp
int3
imul
mov
stos
inc
xor
or
xor
adc
aas
scas
scas
mov
enter
icebp
mov
push
jbe
cmp
inc
dec
flds
repz
mov
gs
dec
ja
test
add
outsb
push
lahf
cmpsl
stos
xor
outsb
inc
addr16
test
add
fs
stc
pop
push
mov
dec
clc
sahf
js
pop
into
out
or
mov
sahf
cmp
test
cmp
xor
int3
rcll
not
fcomip
xchg
in
xchg
in
outsb
mov
std
popa
fcmovnb
push
clc
push
das
stos
lods
dec
or
fadd
add
xlat
sbb
add
push
sub
stos
int
cmpsb
xchg
ficoms
sub
dec
jmp
mov
icebp
jnp
lods
mov
jp
push
mov
ljmp
scas
pop
jle
adc
sbb
fs
sahf
mov
or
lods
cmp
adc
pop
shrb
cmp
push
pop
jbe
mov
jg
mov
call
hlt
lcall
and
push
or
insl
mov
push
mov
mov
cltd
fcoms
inc
leave
scas
inc
fiadds
mov
pop
in
push
pop
in
pop
xor
mov
push
add
pop
add
push
es
add
pusha
sti
testb
add
sub
push
addb
loop
gs
cmp
push
cmp
and
mov
pop
or
dec
inc
je
sbb
inc
inc
clc
rorl
mov
push
jo
call
and
fwait
pop
jmp
fidivrs
mov
adc
data16
in
xchg
jecxz
dec
jge
jle
adc
adc
jg
loop
add
push
sbb
xchg
test
inc
cmpsb
mov
enter
into
dec
loope
pop
pusha
add
sub
aas
pop
mov
adc
popa
mov
and
scas
mov
jg
inc
and
scas
aad
push
loopne
lds
xor
data16
clc
sub
psraw
push
dec
out
test
mov
xor
mov
jb
ds
dec
mov
push
xlat
or
cmpsl
pop
adc
pop
ljmp
xchg
sbb
shrl
and
sbbl
cli
dec
mov
cmp
movsl
inc
inc
jo
cmp
and
fdivl
and
je
or
cs
cmpsb
adc
nop
aam
mov
daa
inc
inc
cwtl
lock
and
lods
add
pop
rolb
inc
dec
xchg
mov
or
mov
cmpsb
test
inc
push
in
sub
popa
cld
cmpsl
cmpsb
xor
int3
or
addl
test
lods
outsb
outsb
mov
jae
jge
or
pop
push
cmp
outsb
popf
push
jbe
scas
xor
push
adc
pop
clc
jbe
pushl
daa
jno
jle
adc
add
mov
dec
pushl
push
sub
and
clc
insb
js
inc
jecxz
sub
cmpsb
out
pop
mov
xchg
push
das
xor
shr
and
in
pop
add
lock
cld
and
adc
and
jg
add
add
sti
pop
pop
pop
inc
mov
pop
dec
mov
mov
mov
inc
stos
jle
dec
add
aad
clc
das
repnz
inc
sub
mov
je
clc
or
and
inc
sarb
push
add
test
mov
inc
mov
arpl
jecxz
pushf
mov
mov
ret
sbb
or
pop
int
sub
mov
addr16
jg
sahf
mov
jg
stc
scas
push
adc
xchg
nop
fs
inc
xchg
stc
xchg
rol
and
addr16
sti
les
cmpsb
push
cmpsl
adc
dec
clc
imul
dec
push
add
loop
shll
outsl
scas
inc
ljmp
scas
sbb
rol
test
adc
dec
jbe
jo
es
xchg
lock
add
rcrb
jb
mov
ljmp
fstps
pop
adc
outsb
jle
cwtl
inc
mov
push
mov
loopne
out
movsb
notb
xchg
das
aaa
lods
adc
push
scas
push
cmp
mov
sbb
jne
jne
cwtl
sbb
adc
push
xchg
mov
sbb
decl
dec
aam
jae
lds
push
stc
inc
mov
mov
adc
call
pop
ret
out
movsl
out
pop
repz
adc
mov
sbb
scas
mov
shr
pop
xchg
test
jbe
xlat
push
push
loopne
outsb
in
lcall
add
push
inc
xchg
push
scas
hlt
sahf
int3
cltd
popa
lods
prefetcht1
cs
mulb
push
push
jmp
pop
push
adc
xchg
xor
out
mov
mov
cmpsl
adc
dec
add
aam
xor
cmpsb
inc
jmp
bound
xchg
arpl
adc
rorb
ds
mov
mov
dec
das
pusha
sub
out
cli
iret
inc
xchg
fldt
incl
out
jle
pop
push
scas
je
push
das
push
or
rolb
insb
add
shlb
mulb
mov
scas
xor
das
nop
xchg
pop
mov
push
push
sbb
add
in
testl
add
xlat
or
lods
xchg
adc
lods
fisubs
pop
int3
mov
push
pop
popa
pop
ljmp
xchg
cmp
push
scas
adc
push
or
scas
cmp
cli
iret
sti
out
jne
out
cmp
in
adc
clc
push
jns
pop
sub
dec
mov
ficomps
pushl
xchg
out
jmp
adc
test
imul
test
inc
or
xchg
jmp
push
sahf
add
mov
or
mov
sti
popf
cmpsl
aaa
adc
movsl
aaa
or
add
or
add
mov
mov
jecxz
daa
ljmp
and
int3
inc
cmpsb
mov
movsb
pop
jmp
aad
mov
inc
pop
pop
pop
push
fdivs
in
pop
shrb
push
or
cmp
cmp
fcomp
cmp
jg
shrb
imulb
pop
imul
adc
test
shufps
and
movups
out
and
push
sub
inc
push
loop
pop
push
inc
push
mov
add
stc
fs
fcmovbe
imul
ja
ljmp
into
dec
imul
mov
mov
inc
adc
cmc
out
push
dec
push
adc
mov
lods
pusha
int
add
sahf
dec
cli
or
mov
cmpsl
mov
pop
xlat
sbb
mov
adc
push
jp
notb
sbb
pop
pop
addr16
add
out
inc
sub
movl
scas
or
sbb
sti
dec
add
pop
mov
das
mov
out
mov
pop
bound
in
pop
pop
mov
push
sub
clc
data16
scas
or
jle
call
push
dec
inc
xor
xchg
add
call
out
scas
push
cmp
push
pop
out
jmp
ja
lock
aam
sub
lods
dec
test
outsb
inc
outsl
jb
inc
push
movsl
xchg
loope
dec
inc
les
mov
push
out
mov
imul
sub
pop
aas
into
or
fists
push
or
mov
push
xor
or
adc
pop
xchg
sti
sbb
das
sub
and
loopne
jmp
xchg
and
inc
or
jbe
aas
pop
push
inc
stos
mov
pop
or
in
xchg
pop
cmp
enter
inc
outsb
daa
aam
repz
adc
push
adc
ret
fnsave
enter
xchg
cs
jne
std
or
scas
jl
dec
or
dec
push
add
inc
shrb
pop
inc
and
inc
push
outsb
or
xchg
fildl
idivl
stos
jmp
mov
and
push
pop
scas
add
cwtl
adc
cld
dec
cld
aas
xchg
test
or
rcr
push
mov
or
mov
add
sbb
out
mov
cmpsl
mov
xorw
xchg
lahf
push
push
mov
nop
shlb
pop
ret
cmpsb
lret
mov
aam
dec
mov
jp,pn
test
fadds
jnp
push
scas
jle
test
jbe
out
sarb
inc
cld
movsl
push
push
push
int3
call
lock
cmpsl
imul
jp
aaa
xchg
adc
movsl
mov
sbb
jb
push
pop
lcall
pop
ja
add
arpl
jne
xor
sbb
push
sub
xchg
cmpsb
push
mul
and
or
jnp
les
sahf
jg
cmp
inc
add
fnstcw
outsb
inc
or
cmp
ss
aam
cmp
aam
xor
inc
cs
dec
xlat
and
pop
sbb
fnsave
push
add
sahf
xchg
xor
lods
scas
or
sbb
mov
movsb
jns
mov
pop
outsl
js
adc
push
std
adc
std
lock
ds
das
scas
jg
aad
pop
and
jmp
dec
lea
loop
gs
and
jb
jmp
push
pop
out
loop
arpl
das
or
adc
push
jg
pop
dec
mov
fstl
jecxz
movb
in
xor
bound
es
outsl
sbb
out
push
lcall
lret
sbb
jp
data16
repnz
mov
fwait
movsw
or
sti
gs
jne
movsl
mov
inc
ljmp
gs
ret
lods
lahf
add
fidivs
pop
movsb
pop
push
je
push
ja
xor
push
xor
push
dec
cli
aas
sbb
lods
ss
mov
mov
jne
cmpsb
mov
out
mov
les
or
push
lods
jbe
cmp
filds
je
xchg
mov
xchg
scas
lods
scas
jbe
ja
xchg
pop
iret
jg
xchg
mov
and
pop
xor
shlb
pop
data16
push
in
je
mov
xchg
ja
out
jb
push
mov
test
push
and
outsb
data16
data16
or
pop
push
rol
push
lods
or
sahf
int3
xchg
in
addr16
add
inc
cmpsl
mov
sar
call
nop
ds
cmp
repnz
adc
mov
je
lods
xchg
pop
in
mov
cmpsl
ljmp
sbb
jbe
sbb
cmc
cmp
xchg
or
xchg
cmpsl
mov
inc
push
sbb
enter
jo
xchg
call
js
out
sahf
and
les
xor
add
pop
xor
dec
stos
shrl
test
jle
es
cmp
dec
fld
mov
cwtl
dec
das
or
setg
out
push
add
sbb
jle
or
push
hlt
call
data16
outsl
pop
add
sub
aaa
or
je
adc
inc
fiadds
aaa
push
pop
mov
jnp
add
sbb
scas
jl
adc
mov
mov
push
push
subb
push
es
clc
fistps
add
xchg
add
out
into
adc
xchg
mov
push
scas
xchg
in
lods
je
int
ret
xlat
jo
and
rorl
aas
sub
or
out
addr16
orl
out
clc
mov
mov
inc
js
fs
xchg
mov
idivl
cmpsb
cmc
mov
jl
les
pop
jl
test
inc
jg
push
pop
cmp
jbe
pop
cs
stos
inc
jl
push
ss
fwait
sbb
inc
sbb
cld
es
sbb
add
push
inc
and
data16
es
or
push
mov
mov
push
pop
and
sub
push
sub
neg
cmp
sub
dec
mov
rorl
inc
adc
and
mov
inc
mov
lock
cmpsb
lds
mov
xchg
mov
sbbl
inc
inc
push
insb
imul
cmpsb
aam
js
outsl
cmpsl
push
mov
pop
jbe
rolb
xchg
add
lock
fwait
call
mov
mov
xor
push
adc
pop
test
lods
adc
push
xchg
cltd
add
mov
pop
xchg
cmpsb
incb
add
daa
push
and
jg
out
adc
js
jo
and
lahf
dec
jge
outsb
out
lods
les
sub
sbb
into
push
cmp
mov
mov
sahf
cmp
sahf
ret
mov
jle
sar
inc
inc
push
popa
push
xlat
cmc
outsl
outsb
mov
sub
mov
mov
add
mov
push
mov
in
int3
push
std
fiadds
call
mov
mov
sub
push
adc
lret
xor
out
mov
xor
push
inc
dec
cmp
sub
xchg
fmulp
nop
cmp
add
in
push
mov
xchg
ds
mov
incb
mov
push
mov
and
popa
jne
arpl
cld
push
and
cmpsb
aam
jle
mov
adc
xchg
mov
pop
dec
out
fisubs
test
call
adc
inc
adc
cmp
out
add
pop
adc
sub
inc
das
popa
mov
cld
cmpsb
popa
inc
je
mov
cmpsb
scas
addr16
push
and
adc
ja
and
mov
cld
pop
pop
mov
mov
sti
cmp
push
adc
inc
lahf
xchg
mov
call
and
ds
int3
jmp
dec
jo
inc
out
pop
lea
decl
scas
ss
xor
into
add
push
enter
xor
sbb
push
dec
or
out
out
mov
das
test
xchg
pcmpgtw
fdivs
jo
ds
mov
inc
xchg
adc
push
rcrb
data16
das
idiv
dec
rolb
xchg
test
ja
out
out
and
jle
stos
mov
je
test
aam
push
add
jg
cmp
pop
push
inc
outsl
sbb
clc
and
or
out
lcall
lods
imul
bound
loopne
push
jb
mov
adc
or
inc
ret
and
push
mov
adc
test
push
aaa
pushf
push
div
imul
pop
jbe
adc
xchg
ficompl
in
jg
ja
inc
pop
xchg
scas
add
sbb
adc
insb
cmpsb
push
in
xor
push
mov
test
scas
push
jle
les
push
jno
std
out
and
movsb
mov
push
popa
out
lea
pop
adc
and
cmpsb
add
cmp
pop
cmp
adc
enter
push
inc
cs
mov
mov
add
jne
addr16
push
sbb
mov
push
std
daa
aam
stos
sahf
imul
dec
sub
movb
sub
inc
mov
imul
mov
stos
and
push
data16
adc
add
inc
or
inc
pop
xchg
js
xchg
out
out
push
cmp
arpl
adcb
cmp
stos
mov
inc
xor
or
push
mov
in
ja
decb
pop
nop
adc
mov
data16
pop
int3
lea
sahf
inc
in
push
add
das
clc
dec
ds
leave
cli
lret
pop
adc
int3
notl
aas
lcall
decl
sub
mov
cmpxchg
adc
xor
int3
lret
push
fs
push
std
stc
cmc
mov
add
ret
inc
ret
add
jge
ja
sahf
mov
jbe
push
aaa
cmp
dec
mov
addr16
sbb
out
xchg
or
addr16
sub
clc
push
dec
or
test
cs
xor
or
test
add
jbe
and
mov
cmp
dec
das
pop
cwtl
fidivrl
xchg
ds
outsl
cs
xchg
int3
push
fisttps
xchg
push
push
rolb
add
lret
out
dec
xchg
loop
popa
jae
cmpsb
pushf
cmc
decl
xchg
fidivrs
mov
push
jne
and
sar
hlt
xor
ds
icebp
push
aaa
std
insb
adc
ss
andb
jno
imul
add
mov
push
leave
and
jmp
push
add
jbe
outsl
push
lock
mov
inc
mov
mov
cmpsl
into
dec
jbe
ljmp
ds
cmpsl
icebp
add
xchg
add
sub
adc
cmpsb
push
notb
ja
jle
jne
adc
xchg
mov
scas
xchg
adc
pushl
and
or
je
insb
and
lods
cmp
mov
bound
scas
or
mov
and
insl
clc
imul
cli
xor
push
dec
jbe
into
sahf
jle
mov
les
mov
mov
push
nop
sbb
inc
and
jnp
xchg
rol
pop
sahf
je
push
push
dec
jmp
sub
sub
xlat
push
xor
test
repz
ljmp
mov
sar
mov
scas
pop
test
fstpt
lds
sbb
push
loopne
ret
sahf
imul
or
mov
push
aam
sub
add
pop
rcr
lret
rolb
sbb
data16
or
push
dec
aaa
cs
lock
mov
jb
sti
lahf
aad
mov
inc
adc
push
aaa
xor
pop
iret
inc
mov
lahf
out
out
fistpl
mov
rclb
mov
add
and
push
jns
xchg
dec
test
movsb
cmp
mov
lods
dec
addl
mov
push
ss
out
push
shrb
push
fdivp
stos
ficomps
rcrl
xchg
or
push
stos
mov
int
sbb
iret
push
xchg
push
xchg
movhps
xor
xor
mov
test
out
sti
movsb
sbb
testl
dec
push
movsl
pop
xchg
push
push
lahf
ss
push
sbb
inc
push
push
add
adc
or
lea
ds
out
data16
inc
xlat
das
jecxz
lods
mov
test
mov
inc
mov
xchg
inc
push
imul
call
xchg
jne
ja
out
xchg
pop
adc
sarb
inc
push
xchg
cmpsl
repnz
rolb
and
inc
push
mov
aam
loop
mov
inc
sbb
dec
push
sbb
add
add
xor
push
push
ds
icebp
jnp
nop
xchg
sti
mov
pushf
jg
or
mov
push
pop
xchg
icebp
jns
cs
dec
lcall
mov
push
pushf
adc
adc
or
lahf
mov
stc
out
xor
cwtl
mov
push
dec
std
xor
adcb
mov
aas
pop
pop
xor
cs
sbb
out
outsb
nop
in
push
les
push
cs
shlb
and
fistpl
addb
push
inc
adc
imul
in
xchg
scas
jl
jns
sti
mov
ljmp
popa
nop
lock
shl
ja
xchg
pop
ds
cli
xchg
sbb
insb
add
mov
xchg
add
sbb
ror
xor
mov
cld
push
in
aaa
inc
push
xor
mov
adc
dec
aaa
sbb
mov
and
lock
pop
pop
mov
into
sub
mov
pop
dec
imul
add
and
xchg
insb
xlat
sub
mov
clc
xor
cli
data16
out
mov
stos
jle
ds
cs
xor
sti
mov
cmp
into
popa
outsb
push
cmp
incb
lods
mov
push
inc
cmp
aaa
jbe
int3
daa
ret
out
add
out
and
sub
push
pop
dec
loop
dec
jge
push
adc
dec
add
add
out
xor
mov
pop
sbb
xor
inc
add
in
sbb
xlat
and
push
push
fs
xchg
push
orb
pop
scas
pop
push
mov
add
out
jbe
inc
clc
ljmp
negl
jbe
jns
jmp
adc
stos
or
das
mov
out
sub
les
inc
pop
pop
ljmp
and
sub
in
loope
in
lods
jl
gs
adc
adc
in
push
invlpg
fadds
fsubs
inc
ds
adc
loopne
sbb
adc
shl
fs
adc
stos
pop
cmpb
dec
mov
add
divb
adc
xlat
cmp
jno
inc
sahf
frstor
pop
filds
lcall
jnp
decb
leave
test
adc
push
add
fs
xor
rolb
nop
inc
add
rolb
xor
test
test
in
jle
pop
loop
fdivrs
addr16
dec
ds
push
imul
aas
ss
rcr
lds
out
xor
notl
sub
adc
add
or
into
icebp
add
negb
aam
rclb
rcrb
aaa
or
stc
sub
inc
stos
adc
dec
js
xchg
movhlps
decb
popl
xchg
push
adc
push
mov
mov
dec
in
cmp
dec
jmp
pop
push
inc
fnstsw
pop
dec
pop
lock
inc
sarb
jle
out
add
imul
adc
sti
sti
out
iret
inc
lds
into
ds
mov
loopne
cmpsl
in
scas
jns
test
inc
cmp
jbe
clc
adc
ror
sbb
or
sub
idiv
jne
pop
cli
lea
and
cli
jnp
or
cmpsl
pop
jnp
ds
test
push
popa
test
ficomps
mov
test
or
repz
punpckhdq
int
mov
mov
test
xor
fiaddl
scas
push
inc
fmuls
mov
xchg
ret
incb
push
or
sub
pop
push
and
add
xchg
pop
lret
or
cwtl
inc
mov
sbb
cs
sub
xor
jbe
fwait
inc
push
insb
adc
loope
mov
adc
ds
or
dec
pop
inc
push
dec
int3
in
repz
call
xor
lea
in
pop
pop
push
pop
ds
xchg
push
inc
push
or
mov
roll
xor
fiaddl
xor
xor
mov
cli
dec
int3
mov
data16
out
adc
inc
jnp
pmulhw
jmp
inc
push
cltd
xchg
shlb
aaa
jle
clc
vmwrite
cld
daa
cli
dec
movsb
inc
xor
lock
nop
push
xchg
add
pusha
mov
test
mov
push
pop
bound
pop
jb
jmp
push
jle
xchg
sub
pop
cld
call
sub
sub
pop
arpl
sub
and
cwtl
xor
jne
or
data16
fidivs
sbb
pop
and
mov
push
push
mov
fsubrl
test
push
push
dec
jecxz
cld
inc
or
scas
adc
mov
xor
fcmove
mov
aaa
sti
cld
ret
popa
lds
pop
add
mov
add
push
lods
loop
clc
xor
inc
xlat
es
jp
dec
jg
add
dec
fidivs
shll
movsl
push
xchg
js
add
xchg
xchg
add
ljmp
ds
int3
fwait
insl
jbe
adc
cld
std
cmpb
das
push
xor
jno
rorb
mov
insl
or
or
add
dec
push
sahf
add
xchg
ret
pop
fcmovnbe
ret
mov
adc
mov
xchg
dec
out
vmread
jle
xor
lret
mov
fisttpl
mov
sbb
xchg
push
dec
pusha
cmpsl
cmpb
sbb
xor
adc
push
mov
inc
data16
xor
lods
pop
sbb
data16
lea
outsb
call
jns
inc
outsb
xchg
adc
mov
insb
insb
pop
and
pop
mov
addr16
push
push
xor
sar
xor
mov
int3
sub
clc
es
push
cmp
lock
aas
data16
mov
pop
xchg
pop
pop
in
out
clc
push
mov
pushl
sub
pop
das
cmpsb
adcl
cli
push
push
je
mov
cmp
pop
pop
pusha
loopne
mov
or
int
pop
xchg
cmp
sub
mov
rolb
sub
cs
cmp
or
jbe
inc
add
sarl
pop
inc
inc
push
or
scas
inc
adc
imul
js
cs
shlb
or
and
mov
test
mov
push
xor
iret
jnp
push
popf
adc
or
scas
mov
loopne
inc
faddp
adcb
mov
inc
mov
mov
add
mov
dec
cmp
pop
cli
adc
into
fmuls
dec
pop
cwtl
mov
ja
mov
cli
xlat
mov
es
mov
mov
sbb
test
xchg
sub
jbe
sub
mov
push
add
loop
mov
lcall
mov
pop
sbb
push
jecxz
test
or
xor
in
pop
adc
inc
jne
xchg
mov
sahf
cld
insl
sbb
xor
clc
mov
xchg
aam
adc
add
mov
or
test
jg
subl
adcl
sub
dec
adc
push
out
adc
movsb
sbb
xchg
movsl
add
sub
pop
push
mov
cmp
adc
scas
es
jbe
data16
add
mov
cmpsb
data16
repnz
push
pop
andb
inc
push
add
cli
xor
jg
insb
cmp
decb
loop
dec
pop
stos
add
leave
ret
push
push
aad
adc
cmp
inc
push
push
push
add
pop
fwait
sarl
push
push
cmp
out
mov
and
imul
push
test
and
testl
inc
cmp
cs
push
or
sahf
pusha
cmpsb
jge
cmc
bound
negb
jmp
mov
add
gs
pop
push
ret
in
scas
mov
stos
add
sar
test
scas
and
xchg
adc
dec
clc
aaa
in
repz
sbb
push
lahf
std
imul
and
ss
push
mov
mov
addb
out
jns
popa
jl
pop
gs
pop
adc
scas
cmpsb
pop
scas
sbb
sub
or
push
add
and
stos
inc
pop
nop
cli
out
iret
xchg
sub
and
out
pop
mov
add
lods
aaa
cld
in
call
push
setbe
cmpsb
ja
stos
mov
adc
add
lret
xchg
cs
adc
dec
xorb
divb
inc
add
mov
inc
arpl
mov
pop
iret
mov
mov
sbb
pop
out
cwtl
shll
push
test
testb
sbb
mov
hlt
xchg
jns
mov
add
xchg
add
loopne
adc
sahf
out
jl
es
mov
xor
cmpsb
clc
lahf
push
mov
int3
or
nop
and
in
sbb
pop
pop
inc
clc
and
pusha
inc
cs
hlt
push
adcb
sub
add
in
or
ret
lahf
mov
push
jno
and
or
add
scas
add
push
push
sbb
js
pop
pop
mov
jbe
add
pushl
adc
push
mov
gs
add
shll
mov
push
push
das
adc
pop
cmp
mov
push
into
fisttpll
inc
sti
cmpsl
xor
repz
shlb
dec
inc
rcll
into
cwtl
int3
cld
inc
add
sahf
add
push
cmc
add
cmp
jbe
pop
clc
mov
js
daa
cmpsl
shl
ds
jmp
shrb
aam
dec
enter
sub
xchg
ljmp
add
in
je
lea
loope
ds
adc
inc
mov
adc
test
pop
lock
mov
filds
mov
adc
push
das
ficoms
xor
js
movsb
push
scas
int3
call
nop
out
dec
push
adc
push
lods
add
nop
addl
outsl
sbbb
push
adc
pop
lods
dec
ret
call
push
scas
mov
lods
iret
add
xchg
lock
lds
cmp
outsb
gs
sti
xor
outsb
imul
sbbb
lock
mov
cmpsl
fidivs
jle
mov
jns
out
test
jno
popf
mov
add
add
add
add
add
push
mov
sti
lds
mov
and
test
adc
das
scas
daa
pop
jecxz
mov
lea
add
adc
mov
sbb
and
inc
push
jnp
or
inc
test
test
js
cmp
sub
out
pop
or
jle
push
adc
inc
std
addr16
add
xor
xor
add
or
jae
pop
mov
ds
xchg
pop
dec
mov
sub
inc
ss
push
inc
clc
jae
add
addr16
push
loopne
push
es
scas
enter
into
cwtl
jle
sub
dec
xchg
push
ficoms
push
inc
dec
mulb
mov
shlb
pushf
rclb
cmc
imul
in
inc
pop
into
xor
lods
andb
mov
cmp
xor
push
xchg
push
add
dec
testb
roll
scas
pop
aaa
adc
shl
or
push
xchg
jno
movsb
movsl
push
ja
pop
dec
mov
mov
shrb
mov
fistpl
out
into
inc
cmpsb
mov
dec
scas
lcall
sahf
mov
inc
das
xchg
jo
cwtl
in
pusha
xchg
jle
add
pushl
js
loop
pop
loop
xor
mov
push
push
int3
fwait
int
pop
popf
popa
mov
scas
pop
xchg
xor
xlat
orl
out
mov
and
scas
je
out
mov
mov
pop
aaa
xor
inc
or
or
xor
lcall
pop
push
out
add
inc
push
inc
scas
scas
cmpsl
or
jle
jmp
push
jb
clc
mov
add
movsb
stc
xchg
lock
jmp
add
cmp
test
stos
sub
cmc
xchg
scas
jle
xlat
dec
into
jle
es
cld
orl
mov
mov
mov
add
adc
xchg
data16
test
xchg
jle
dec
je
int3
pop
dec
data16
sub
ret
mov
sub
hlt
pop
pop
mov
popa
les
jbe
lcall
ds
dec
pop
decl
or
outsb
movsl
pop
call
addr16
scas
and
je
mov
cmp
stc
sub
pop
dec
xlat
pop
pop
shrb
cld
jle
loope
cs
pop
ficoms
aam
cwtl
lds
lcall
push
popa
sub
mov
nop
cmp
inc
push
mov
pushf
push
aam
dec
xchg
test
inc
jle
or
xchg
fldl
mov
outsb
xchg
mov
push
xchg
int3
push
out
mov
pop
inc
pop
adc
push
xor
inc
pop
xor
cmc
mov
fdivrl
pusha
xchg
add
daa
movsb
push
or
pop
addb
xchg
test
jmp
test
sti
jp
add
lods
das
adc
enter
inc
aaa
inc
add
jbe
inc
cmp
aas
in
pop
imul
popa
int
cld
test
cmp
sti
loope
xchg
fidivrs
out
sub
fs
push
inc
pusha
xchg
sahf
inc
comiss
push
nop
push
jecxz
jbe
outsl
es
je
lds
int3
cmp
incb
addr16
add
adc
adc
dec
or
gs
or
sub
adc
lret
ds
xchg
insb
outsl
or
jge
or
daa
imul
xchg
icebp
mov
mov
inc
xor
xchg
xchg
int3
movl
fists
sbb
mov
pop
shll
adc
xor
push
sbb
xchg
and
jmp
loopne
xchg
insb
addr16
adc
mov
mulb
dec
fstpt
ret
sub
ja
adc
mov
les
test
loop
stos
xor
pop
js
ljmp
lods
sbb
fs
push
adc
mov
in
out
clc
out
dec
push
mov
nop
or
adc
aaa
scas
push
outsl
decl
jl
push
or
ret
leave
xchg
add
jbe
mov
rclb
xchg
xchg
inc
ss
outsl
inc
push
enter
inc
adc
inc
cmp
arpl
sbb
inc
sbb
pop
fnstcw
lea
inc
lods
movsl
fists
or
sub
pop
or
das
add
sbb
divl
popa
sub
push
or
clc
fs
popa
or
add
lods
test
adc
adc
xchg
ret
mov
or
aam
out
out
lcall
iret
ret
adc
cwtl
div
or
data16
mov
int3
mov
pop
adc
enter
imulb
ljmp
cmp
xor
addl
mov
jle
ja
gs
aad
popa
add
pop
popa
shlb
call
adc
xor
incb
push
mov
mov
jb
fwait
inc
cmp
pop
nop
cmp
popa
dec
testl
inc
ljmp
stos
outsl
jo
lock
dec
add
and
mov
icebp
movsl
xchg
iret
sarb
push
pop
add
xchg
shrb
int
in
dec
xchg
pop
cmp
inc
mov
add
cmp
xchg
dec
outsb
shlb
gs
mov
xchg
ljmp
les
ss
dec
aas
shlb
push
mov
add
jo
jns
push
shr
jo
clc
inc
mov
scas
inc
xchg
mov
sbb
int3
add
out
inc
mov
push
sar
sub
dec
pop
into
mov
les
add
pop
adc
fstpt
cmpsb
sub
imul
and
sarb
xor
and
sti
js
int
mov
xchg
cli
push
clc
dec
xchg
push
imull
add
jb
mov
fwait
adc
dec
scas
push
add
addr16
outsl
dec
xor
xor
movsb
outsl
sbb
jle
iret
cmpsb
cmpsb
shlb
js
mulb
lock
cld
inc
mov
int3
cmpl
or
mov
adc
pop
or
mov
pusha
imul
and
out
pop
mov
pop
fildll
pop
iret
lds
outsl
cmpsb
cmpsb
xor
popa
pop
test
cmp
ret
lcall
es
mov
iret
push
lods
adc
mov
fmull
jg
popa
in
push
sti
dec
sub
mov
sbbl
das
aad
loopne
fucomip
shlb
popa
or
and
cmpsl
ljmp
jo
lods
inc
popa
imul
das
push
dec
pop
in
sbb
call
hlt
call
rcl
sub
mov
subb
push
cmpsl
shlb
addr16
adc
lret
popa
nop
mov
push
add
es
and
xchg
rol
shlb
push
push
pushf
sahf
dec
add
inc
mov
aam
sbb
mov
push
sbb
sub
mov
jno
pop
negb
add
mov
ds
outsl
inc
shrd
push
or
ds
cs
adc
outsl
xchg
iret
out
inc
add
mov
out
push
jmp
imul
sub
adc
pushl
aaa
sub
mov
test
or
pop
scas
gs
push
jbe
fiadds
lahf
push
aas
test
es
outsl
inc
in
into
fcmovnu
lcall
out
add
push
sub
loopne
cmpsl
xor
daa
lods
adc
call
adc
mov
add
jbe
lods
mov
movsb
adc
xor
mov
dec
insb
mov
mov
inc
mov
imul
inc
int3
push
insb
andb
xlat
ror
push
add
sti
sub
and
in
ljmp
cltd
adc
dec
and
cmc
jmp
xchg
dec
inc
mov
fimuls
and
push
push
iret
jno
jp
sub
pop
lods
fidivl
cs
lds
das
mov
cmp
sbb
mov
call
aas
inc
iret
dec
das
adc
xor
mov
adc
push
in
out
cli
and
or
push
sti
lahf
aaa
mov
stos
add
push
push
sti
xchg
push
sub
jge
test
dec
cli
xor
incl
dec
push
das
adc
push
mov
and
jbe
sbb
decl
push
into
lods
scas
loop
xrelease
bound
add
addr16
not
mov
into
shlb
push
and
mov
icebp
inc
cmp
inc
das
push
fwait
cmp
adc
xor
adc
push
sbb
jo
int3
lods
push
inc
lods
je
mov
or
push
push
fs
insl
add
push
scas
ljmp
lods
push
nop
gs
out
dec
mov
mov
sti
mov
fisubrl
es
subb
in
into
xlat
lcall
xor
pop
sti
inc
mov
cmp
in
pop
push
sbb
pusha
loopne
mov
mov
dec
loop
div
lret
inc
jo
cmpsb
or
xor
es
sbb
xchg
mov
xchg
sub
das
pop
rcrb
pop
rcrb
add
lds
push
jne
inc
lcall
es
mov
pop
inc
jb
mov
ljmp
bound
mov
jg
addr16
ds
pop
fcompl
subb
sbb
ss
pop
ss
dec
dec
adc
push
lods
adc
aas
test
push
imul
pop
cs
popf
mov
jnp
jl
add
mov
push
ucomiss
loop
push
cld
inc
dec
scas
outsl
out
int3
jge
loope
jp
filds
enter
adc
mov
into
mov
fidivs
pop
mov
int
bound
inc
int
mov
push
mov
adc
cli
adc
das
rolb
adc
lret
mov
add
push
jecxz
lods
mov
and
jmp
fnstsw
not
sub
push
and
sub
loop
and
lcall
out
aam
sub
add
dec
mov
data16
jns
add
int
mov
faddl
xor
outsl
das
lods
test
out
cmp
insb
lds
out
or
push
add
scas
cmp
lret
dec
xchg
cmp
mov
out
add
int3
mov
cs
loope
push
addr16
pop
pop
aaa
sbb
push
mov
adc
adc
sbb
pop
mov
pop
mull
xchg
add
out
test
and
xchg
jecxz
cli
sub
sbb
loopne
inc
lcall
enter
xchg
mov
push
pop
xchg
sbb
dec
push
std
dec
nop
cwtl
push
xor
add
test
arpl
test
fldt
in
pop
popf
ss
cmp
sub
cs
mov
ficomps
pop
or
lea
mov
fsubrs
pop
incb
aad
leave
push
jbe
xchg
in
les
scas
xor
push
mov
pop
mov
fwait
subl
and
pop
pop
push
mov
es
fdiv
outsb
xchg
sub
scas
xchg
push
push
cs
mov
xchg
hlt
pop
push
cli
fsts
pop
mov
fiadds
out
setne
orb
out
cmpsb
imulb
es
scas
sbb
shll
inc
sub
push
into
in
sbb
cld
insl
push
jbe
test
or
dec
lret
sbb
dec
lods
stos
mov
mov
inc
sbb
inc
aas
test
xchg
lock
das
sahf
andb
jbe
pop
cld
aas
push
dec
dec
adc
mov
popf
push
sbb
fildl
std
dec
adc
cmpsb
dec
rorb
adc
push
sbb
xchg
dec
adc
into
inc
add
pop
leave
call
mov
ja
cwtl
sti
sti
cmp
and
pop
and
aad
jecxz
mov
aaa
in
add
pop
sbb
sub
clc
pop
incb
push
out
mov
mov
rcll
jne
pop
and
sub
out
jg
inc
shrl
aad
pop
stos
mov
out
out
inc
push
mov
pop
das
cld
xchg
lock
push
gs
fs
movb
arpl
adc
jbe
subl
dec
xchg
jle
dec
adc
mov
movb
mov
mov
scas
cmp
ficomps
shlb
ljmp
fisttpl
add
nop
lods
inc
dec
cli
std
pop
xor
lock
lods
pop
and
mov
lds
or
imull
sbb
dec
jmp
ficomps
aaa
cs
dec
mov
xlat
rcrb
xchg
push
lods
aam
ret
cmpsb
push
adc
adc
movaps
xchg
mov
adcb
jno
insl
sti
xchg
daa
jl
test
push
enter
or
mov
ficompl
mov
mov
sbb
push
data16
push
cmp
push
mov
adc
aas
and
jne
dec
push
jb
push
jne
ds
pop
pop
inc
jno
jnp
inc
cmp
sti
jo
aam
push
out
sti
insb
bound
dec
mov
push
xchg
cli
loope
push
fiadds
push
sub
cmp
test
pop
shrl
imul
xor
call
jge
and
pop
mov
bound
xchg
sub
gs
inc
push
mov
xchg
lods
cli
add
inc
jle
lret
mov
jle
adc
jno
push
inc
fs
inc
adc
sarb
fwait
sub
sub
xor
sbbl
imul
jmp
add
push
fildl
or
jg
in
sbb
pop
dec
scas
xchg
push
or
pop
cmpsl
jbe
lock
mov
adc
and
rcrl
ss
jecxz
fs
mov
adc
pushf
out
cmpsb
xor
sbb
aaa
sub
in
fs
clc
int
out
ds
jmp
xchg
adc
out
test
adc
jbe
pop
in
add
hlt
mov
insl
xchg
mov
insl
andl
lods
mov
lcall
in
xlat
mov
es
mov
mov
sub
mov
add
jle
cld
inc
and
cmovae
arpl
cli
fisubs
lock
mov
repz
out
sub
and
out
aas
ss
test
xchg
sbb
idivb
subb
shrb
sidtl
int3
sahf
outsl
ja
sbb
lods
es
pushf
inc
adc
mov
xchg
adc
pop
pop
adc
iret
mov
adc
jmp
jbe
pop
add
xchg
xchg
idivl
mov
rolb
and
push
sbb
inc
mov
xchg
jbe
and
push
pop
mov
jle
add
xchg
adc
push
hlt
ds
mov
insb
nop
add
test
sbb
inc
add
fcmovnb
jnp
jae
into
test
scas
mov
inc
movb
int3
subl
add
pop
push
mov
add
in
adc
pop
xchg
or
ljmp
mov
in
jmp
dec
jg
mov
cwtl
jo
out
repnz
pop
imul
sbb
shll
push
sbb
mov
xchg
outsb
daa
push
jnp
push
pusha
js
outsb
lcall
pop
xchg
jle
pop
mov
in
clc
fwait
jne
ds
test
mov
dec
test
je
push
and
push
pop
xor
mov
std
inc
sbb
sbb
lods
or
sbb
or
lcall
push
push
or
add
rorl
lods
xchg
push
cwtl
jecxz
push
add
push
jo
sub
scas
add
cld
or
pop
or
adc
scas
repz
add
outsb
fdivrl
jge
xchg
cmp
mov
in
jg
lcall
adc
divb
mov
in
pop
push
sahf
cmpsl
sub
or
lods
sub
insl
fsubl
xchg
dec
inc
mov
scas
push
mov
ja
clc
outsb
cwtl
cmpb
pushf
jg
rclb
xor
sbb
adc
xchg
cmp
jle
lahf
in
pop
pop
cmp
xor
pushf
test
mov
mov
js
jle
lods
inc
jns
sahf
and
mov
divb
adc
outsl
mov
ret
popa
mov
aaa
insb
xchg
dec
mov
ja
sub
dec
add
mov
adc
sti
cli
and
push
test
cmpsl
aaa
aam
lcall
cmpsb
enter
inc
sub
sub
fcomip
ss
je
or
sub
jge
jle
mov
outsb
mov
add
scas
push
sbb
lods
cmc
out
mov
data16
cmpsb
seta
push
xchg
sbb
cmp
sub
mov
adc
pop
shrl
push
divb
lret
test
pop
mov
jle
inc
inc
nop
cmp
push
das
dec
cmp
pop
sbb
cs
xor
loop
inc
and
push
fildll
and
adc
ret
mov
mov
in
iret
adc
inc
mov
outsb
xchg
mov
lahf
scas
inc
pushf
fisubs
cli
sbb
jns
push
sbb
push
cmc
mov
idivl
lcall
push
push
inc
mov
shrl
call
mov
aaa
jnp
jno
sbb
scas
adc
inc
scas
xchg
xchg
out
inc
outsl
test
out
cld
dec
enter
inc
push
test
push
or
imulb
mov
or
cwtl
push
ret
push
jg
add
jmp
cmc
dec
rcr
das
sub
insb
cmp
ss
mov
imulb
bound
or
ret
jp
pop
inc
or
shlb
fwait
scas
das
scas
enter
jo
outsb
pop
fistl
or
and
fiadds
xchg
mov
insb
dec
mov
adc
mov
fisttps
aas
adc
pop
add
cmpsb
aam
xchg
add
sbb
int3
or
and
xchg
push
cld
and
popa
inc
mov
adc
inc
out
add
push
jmp
and
push
insb
shll
pop
add
dec
push
mov
sahf
jge
add
arpl
inc
cwtl
out
jo
pop
mov
mov
sti
out
out
out
dec
rolb
pop
shrl
jns
inc
or
ss
dec
jle
xor
mov
lock
sbb
es
push
push
faddp
stos
cs
cmc
rcrl
xorb
sub
movsl
pop
push
ss
jbe
push
sbb
cs
adc
fnstsw
push
cmc
aad
dec
out
push
test
test
add
cs
adc
push
nop
lcall
dec
ljmp
add
and
mov
adc
jge
icebp
testb
and
mov
add
fldl
stc
es
push
or
loopne
mov
frstor
filds
or
sbb
mov
adc
sahf
lods
sub
inc
das
mov
int3
popf
mov
mov
push
test
adc
push
ja
call
bnd
jbe
jg
sub
das
xchg
push
test
cmp
push
dec
subb
or
mov
sti
filds
lahf
dec
mov
add
adc
jne
shlb
mov
ss
xlat
popl
sbb
pop
fidivs
js
call
ficomps
data16
or
and
inc
and
dec
aam
fimuls
adc
scas
pop
cmpsl
outsb
hlt
mov
inc
cld
sbb
pop
dec
push
adcb
lahf
scas
mov
adc
cmp
lahf
into
fstpl
pop
out
dec
dec
sbb
push
jp
sti
mov
mov
jl
inc
fcmovbe
scas
dec
mov
fldl
cwtl
dec
pop
int3
push
push
incb
fdivp
mov
cli
pop
sahf
ss
adc
and
rorl
scas
cwtl
bound
add
jne
push
sub
mov
inc
pop
scas
sbb
nop
cmpb
or
jno
fldt
sar
pop
cmpsb
push
adc
out
push
or
inc
sbb
call
pop
inc
pop
cli
popf
mov
scas
or
sbb
hlt
xor
cmp
je
cmp
sbb
add
sahf
push
adc
loop
or
dec
sti
popa
fadds
dec
push
or
sub
pop
dec
out
lret
scas
sbb
sub
adc
mov
jbe,pn
adc
mov
push
adc
xor
push
insl
pop
pushf
xor
outsb
negl
adc
cltd
cmpsb
fldcw
out
jb
loopne
ljmp
xchg
out
add
or
sub
pop
imul
pop
lods
out
or
dec
pushf
icebp
decl
cmp
xor
push
jge
test
push
mov
fwait
push
pop
inc
mov
push
into
sub
mov
mov
ret
push
jle
xchg
addb
mov
add
and
pop
sub
scas
rcrb
rclb
gs
sub
es
push
mov
xorl
xchg
fisubl
das
add
xchg
or
xor
add
fmul
cli
orl
pop
stos
dec
sbb
fistpl
data16
or
fs
adc
inc
pop
mov
cmp
xchg
and
pop
fists
test
adc
stos
daa
push
xor
mov
imul
inc
push
push
sub
pop
rclb
les
out
adc
sbb
outsb
ljmp
loopne
cmpsl
xor
push
add
test
fisubl
aas
cmp
pop
pop
dec
int3
jge
addr16
dec
push
icebp
xchg
jbe
adc
mov
icebp
adc
jne
xlat
daa
xlat
in
sub
inc
add
push
cmp
fbstp
add
mov
roll
sub
incb
push
xchg
jbe
dec
sub
call
and
fildl
fstpt
push
push
out
push
cmp
sbbb
dec
cmp
inc
xor
sti
push
push
push
xor
pop
imul
xchg
mov
dec
jl
fsubs
inc
lea
lods
cmpsb
notb
dec
ljmp
push
into
adc
cmpsl
fildl
lcall
cltd
mov
sub
adc
sub
add
aaa
inc
adc
cmp
push
ret
lret
cmp
lret
les
test
dec
push
test
aaa
add
gs
jp
dec
out
test
dec
add
lret
sahf
and
or
push
lods
les
mov
aas
sti
fwait
mov
das
and
mov
dec
pop
cwtl
out
pop
nop
in
ss
test
movl
xchg
adc
lea
into
mov
dec
or
mov
inc
adc
out
sti
push
out
inc
out
pop
ja
xchg
push
mov
push
sub
dec
push
mov
sbb
movsb
movl
xchg
pushf
sub
sahf
push
fadds
and
iret
daa
mov
call
inc
arpl
cwtl
jo
adc
mov
inc
push
stc
dec
ret
adc
sahf
push
inc
lods
xor
aaa
pop
enter
push
push
cwtl
push
sarl
add
adc
addr16
dec
pop
inc
mov
shlb
and
push
test
add
addb
xchg
xchg
call
addl
adc
mov
movsl
incb
sub
xor
sti
add
aam
testb
mov
sub
test
push
dec
xor
mov
adc
aas
adc
jns
push
adc
or
fisttpll
cmpsb
add
cli
xchg
sahf
pusha
sbb
out
xor
int3
adc
test
call
push
test
cmp
and
cmc
insb
add
std
sub
daa
in
push
jnp
mov
inc
sbb
mov
dec
jl
daa
cmpsb
es
jno
fwait
in
xchg
pop
nop
or
push
push
and
inc
push
nop
adc
jns
lods
inc
imul
push
mov
or
add
inc
mov
fldl
pop
test
mov
sub
std
fldl
or
bound
divb
jge
xor
or
cmpsb
mov
call
lcall
pusha
sbb
sti
or
pop
test
add
cmpsb
xor
xor
mov
imul
xchg
and
cmp
xor
jae
lods
sbb
int3
adc
push
es
cwtl
and
int3
sbb
inc
adc
mov
jg
pop
pusha
adc
ss
in
push
or
xor
xor
je
jmp
stos
and
bound
fadds
stc
inc
movl
mulb
call
aad
sub
sub
xchg
jns
xchg
ss
dec
xchg
and
cmp
xchg
sahf
nop
and
das
ja
fsubs
xchg
push
add
out
xchg
jbe
jns
negb
das
andb
jbe
call
dec
add
movsl
push
loop,pn
gs
adc
inc
add
pop
fisttps
add
mov
xchg
mov
mov
cli
addl
lods
sbb
repnz
pop
cs
je
filds
popa
cmp
aaa
and
outsl
xchg
mov
xlat
gs
mov
cmp
pop
push
add
incb
outsb
xchg
xchg
stos
lcall
xchg
xchg
pop
ficomps
add
lcall
lock
pop
pop
pop
out
sti
enter
mov
jae,pn
or
lods
mov
and
scas
adc
lcall
mov
ss
mov
mov
data16
pusha
cmpsb
sub
lods
push
and
sahf
and
pusha
ja
add
push
gs
jnp
push
jmp
dec
pop
arpl
add
mov
addl
jl
vmovhps
dec
add
mov
fsubl
mov
cs
add
push
pop
xor
sbb
push
outsb
add
push
cmpsl
divl
lods
popf
aad
mov
dec
xchg
xchg
and
dec
sahf
and
pop
push
cmp
or
lods
enter
jbe
iret
pop
jle
insl
addr16
add
jb
data16
lods
test
sbb
inc
cmp
xchg
scas
lods
adc
mov
fbstp
arpl
incb
cmp
aas
xchg
ds
jnp
jecxz
jmp
or
pop
jae
inc
push
mov
and
xchg
add
xchg
cmp
jp
mov
or
mov
pop
lds
mov
iret
push
jg
mov
adc
pop
arpl
fsubs
jae
sub
cmp
sahf
das
push
or
sbb
sub
subb
nop
imul
add
mov
xchg
pop
push
push
push
js
bound
js
or
cmp
adc
nop
xlat
movsb
cmc
nop
test
push
push
sbb
daa
mov
jns
ds
adc
aad
cmpsb
scas
mov
sub
dec
or
push
fucom
mov
add
inc
dec
mov
divl
or
mov
daa
add
fiadds
adc
adc
xor
arpl
aaa
push
cwtl
fisttps
lahf
and
inc
sub
addr16
mov
incl
pop
repnz
ljmp
push
outsl
cmpsl
sar
dec
adc
test
dec
cmp
dec
call
in
sub
xor
dec
rorl
shrb
stos
stos
xor
mov
call
pop
lock
scas
inc
push
and
movsb
outsb
pop
arpl
data16
mov
or
mov
aam
pop
add
out
arpl
dec
jbe
add
cmp
inc
mov
scas
arpl
mov
push
and
js
inc
mov
mov
fdivr
es
pop
call
inc
cmp
into
pop
lcall
pop
rcrb
adc
add
out
push
rorl
inc
inc
pop
jle
lea
mov
in
popf
js
mov
decl
sbb
call
sbb
sahf
cmp
pop
push
and
aad
mov
ss
push
dec
into
xor
jb
pop
push
xor
test
cmpsb
adc
push
pop
pop
js
int3
inc
pop
inc
decl
dec
ljmp
push
leave
add
push
popf
clc
cmp
jae
sbb
jmp
out
add
daa
push
or
cmpsb
mov
mov
jle
fistps
inc
jb
mov
inc
xchg
push
cmpsl
adc
and
jp
pop
cltd
setb
out
orb
push
pop
inc
adc
mov
add
add
imul
fiadds
dec
add
sbb
push
push
mov
sahf
mov
sahf
pop
and
sub
inc
jmp
mov
pop
sbb
inc
dec
sahf
push
js
cmpsl
inc
adc
pop
adc
add
sahf
stos
lcall
mov
push
pop
pop
icebp
ret
test
je
out
ret
sahf
xchg
add
sub
sti
jge
imul
cmp
in
jbe
jecxz
or
push
sub
add
adc
aas
scas
cli
pop
mov
push
inc
data16
and
sahf
xchg
add
sub
dec
ss
dec
inc
int3
dec
push
jbe
inc
clc
sub
mov
dec
mov
test
pusha
test
inc
scas
sti
inc
cmp
lods
repnz
iret
dec
test
call
lcall
incl
mov
jbe
scas
jno
xor
fiaddl
push
add
cmp
repz
push
daa
imul
jnp
ds
repz
out
dec
pop
push
aaa
or
int
jns
push
push
out
xor
jno
xor
iret
repz
das
jle
xor
jns
lret
inc
mov
out
ds
mov
shll
out
mov
xlat
stos
xchg
imull
imul
jns
repz
mov
ret
xor
xchg
sub
addr16
iret
repz
outsl
jbe
out
pop
push
pop
xor
jmp
out
fwait
or
xchg
xor
mov
iret
repz
jp
aaa
jbe
je
repz
inc
mov
mov
xor
mov
int
imul
cmpb
mov
inc
adc
xor
fistpll
xchg
scas
stos
loop
cmp
repz
cmpsl
mov
repz
testb
iret
repz
xchg
xchg
sub
imul
xor
iret
repz
pop
pop
push
adc
outsb
repz
out
and
pop
jo
idivl
data16
cmp
xor
jl
out
dec
pop
add
xor
xchg
rcll
push
out
sub
jmp
mov
sub
push
repz
fdivp
cs
inc
push
sbbb
jns
repz
shrl
out
sahf
cmpsl
out
mov
out
into
repz
mov
jns
out
ret
lcall
stc
cmp
movsb
outsb
xor
repz
xchg
push
jg
test
jns
push
pop
push
push
jnp
bound
fnstcw
ucomiss
cmp
sub
insb
lahf
cmpsl
or
fdivl
push
scas
xor
fwait
int
mov
cmp
cmp
and
cmpsl
fldcw
insb
cmpsb
sub
sub
mov
repz
mov
mov
fdivp
mov
cs
stos
push
cmpsl
int
xor
notl
loopne
pusha
xor
insb
daa
dec
xor
sbb
idivl
outsl
inc
mov
idivl
in
push
push
cs
lods
outsb
pop
sahf
idivl
or
push
cs
mov
dec
repz
lea
aas
outsb
push
sbbl
push
inc
pop
fwait
int
jns
push
xchg
xor
insl
scas
sub
sub
mov
mov
jle
mov
sub
sub
mov
push
and
pop
ljmp
push
out
mov
repz
mov
lret
lahf
mul
cmpsb
loope
xor
out
jns
mov
cs
adcb
jae
repz
out
or
push
push
pop
pop
cmp
repz
push
das
outsb
daa
repz
repz
aaa
jbe
repz
ud2
inc
add
pop
int
repz
adc
sahf
out
lcall
jns
out
iret
mov
ret
lcall
xchg
scas
stos
sahf
out
sahf
loop
mov
mov
xor
outsl
cs
idivb
repz
ret
outsl
mov
cs
cmp
icebp
sub
jnp
push
out
out
jns
lcall
iret
jnp
inc
xchg
out
sahf
xchg
outsl
imul
jns
out
cmovle
add
jl
out
pop
push
out
cs
repz
mov
jecxz,pn
mov
iret
jecxz
sti
inc
sbb
insb
ds
fistps
cmpsl
push
cmp
jnp
cs
jns
repz
iret
repz
xchg
sub
sahf
out
addr16
push
xor
dec
cs
inc
inc
sbb
repz
lret
pop
pop
out
sahf
notl
push
push
das
outsb
daa
sahf
out
sahf
xor
pop
inc
pop
fwait
iret
sarl
push
adc
push
imul
sti
div
cmp
repz
lret
add
jns
iret
fistpll
das
xlat
shr
jns
repz
mov
cmp
repz
das
into
xchg
sahf
ficompl
imul
iret
repz
ds
cmp
jae
dec
inc
push
pop
cmp
repz
adc
outsb
cmp
lea
das
test
push
outsl
cs
das
xchg
aam
pop
ss
out
and
push
jge
cmp
jne
fwait
lods
bnd
ljmp
imul
push
out
sub
cli
cmp
jns
mov
pop
and
cmp
or
add
cmp
jns
imul
mov
cmp
sti
in
cs
mov
repz
sahf
lcall
mov
repz
cs
lods
cs
loopne
mov
jns
mov
mov
out
cltd
rclb
sahf
out
popa
cmp
sahf
out
sahf
xor
dec
add
jns
out
sbb
push
push
out
fs
jns
xor
ss
out
sbb
push
mov
cmc
repz
repz
mov
lds
fsts
iret
repz
mov
cmp
repz
lea
cmp
popf
fcoml
iret
repz
and
jns
repz
repz
or
inc
iret
repz
sbb
adc
sub
repz
and
iret
repz
add
iret
sbb
imul
sub
sub
mov
mov
leave
add
cmp
repz
cmp
test
lock
repz
int3
test
fcomps
repz
imul
cmp
repz
or
add
cmp
repz
pop
adc
iret
repz
insb
and
cmp
repz
or
dec
mov
cmp
jge
adc
insb
jmp
std
stc
out
sahf
out
icebp
int
lds
cwtl
xchg
lods
ss
out
test
xor
cmp
shrl
dec
or
fdivp
jb
pop
cltd
rclb
sub
and
and
mov
dec
pop
dec
add
repz
inc
sbb
push
cs
sub
iret
repz
jo
or
iret
repz
sbb
cmpsl
fldcw
mov
repz
jnp
cs
mov
lds
fwait
iret
test
and
iret
repz
out
in
movsl
push
mov
repz
hlt
lea
shl
sahf
out
popf
fcoml
sahf
sub
and
jns
sahf
out
xor
or
ss
int
inc
pop
and
adc
daa
repz
out
sub
cmp
jl
xor
add
inc
sbb
data16
in
lods
and
and
mov
stc
cmc
mov
leave
out
sahf
out
rcr
aad
out
sahf
shr
test
sahf
out
mov
out
sahf
out
sbb
jns
aam
imul
out
cmp
jno
dec
out
sahf
out
add
pop
adc
sub
jns
out
cmp
jge
out
add
cmp
pop
gs
iret
repz
movsb
std
stc
mov
int
iret
repz
kortestb
repz
repz
lods
test
iret
mov
enter
cmp
test
popf
cltd
repz
repz
repz
popa
cmp
xor
cmp
repz
add
sbb
cmp
repz
push
push
cmp
fs
cmp
repz
add
fwait
iret
repz
bound
imul
repz
out
leave
lds
pushw
pusha
dec
and
loop
iret
cs
push
idivb
cmp
ljmp
mov
repz
movb
xchg
shrb
cmp
mov
fwait
cli
decl
pushf
popa
jne
push
inc
mov
xor
mov
push
adc
push
filds
ret
addr16
push
xor
loopne
sahf
jg
jmp
gs
inc
roll
hlt
push
adc
hlt
fdivr
sbb
nop
movsl
xor
push
sti
lahf
add
sahf
jne
movsl
inc
adc
xchg
push
xor
push
stos
add
cmpsl
int3
push
imul
insb
pop
cmpsb
pop
into
ds
ds
inc
cld
incl
popa
or
jno
test
adc
jle
decl
mov
dec
movsl
and
mov
shr
adc
push
shlb
popaw
dec
cmp
mov
adc
loop
incl
dec
adcb
cs
xor
loop
pop
push
rcrl
jmp
nop
jge
add
inc
nop
and
inc
xchg
jle
add
jnp
xchg
scas
adc
fiaddl
adc
in
mov
ret
out
push
lods
iret
xchg
push
dec
pop
call
xchg
outsb
arpl
xor
fnstcw
add
mov
nop
pop
gs
ds
ja
adc
sbb
jg
and
inc
adc
and
push
push
shrl
push
cmpsl
adc
pushw
daa
shr
xchg
mov
inc
and
pop
jl
mov
adc
pop
push
and
imul
test
int
imul
pop
in
ficoml
addr16
sbb
dec
and
mov
call
xchg
sub
add
jle
shll
mov
xchg
jle
adc
or
sub
dec
lahf
dec
pop
xor
data16
pop
incb
movsl
sub
inc
popf
mov
and
rcl
cmpsl
sub
sbb
shrb
mov
mov
pop
cmp
ficoms
xor
pop
outsb
js
int
xchg
adc
sarb
gs
or
sub
push
sbb
into
ret
sti
ds
out
push
or
xchg
hlt
push
adc
add
adcl
push
pop
push
adc
leave
jae
adc
rolb
push
xor
cs
ja
call
cmpsb
inc
push
inc
pop
lret
sub
inc
inc
das
mov
jno
addr16
outsb
pop
push
jbe
pop
es
push
out
push
out
add
jno
das
push
and
pop
jnp
cmp
out
and
scas
ret
fstpt
enter
push
push
add
add
out
inc
rorb
jbe
ja
aad
lcall
popa
push
xchg
push
cld
xchg
pop
scas
adc
rclb
push
inc
jno
sbb
aas
and
push
test
sbb
outsl
pop
stos
mov
out
adc
or
pop
mov
call
lcall
adc
dec
cwtl
ds
shrd
xchg
push
adc
jo
adc
aad
adc
ja
mov
mov
or
adc
inc
dec
cmp
and
xor
jg
mov
js
cmp
pushw
push
out
add
mov
lahf
ret
xchg
add
or
out
sub
adc
pusha
shl
adc
shlb
push
nop
add
mov
mov
xor
cwtl
push
sahf
pop
mov
pop
mov
add
push
repz
mov
call
sarb
cs
xor
inc
add
jbe
fisubrl
xchg
shrd
daa
push
adc
data16
push
dec
xchg
sub
cli
mov
dec
cmpsl
outsb
push
adc
imul
es
dec
adc
scas
iret
jno
push
xchg
addr16
push
push
add
cmpl
push
dec
xchg
or
mov
xor
or
push
or
dec
pop
push
pop
cmp
push
incb
into
das
xchg
dec
ds
cmp
dec
dec
jg
pop
jbe
adc
pop
int3
pop
lods
adc
mov
push
es
mov
mov
and
roll
cwtl
add
bound
and
inc
ror
jno
xchg
scas
sti
adc
xchg
out
jns
adc
dec
sahf
pop
mov
xchg
dec
jp
jbe
fwait
std
mov
add
xor
sti
push
rclb
adc
adc
int3
sbb
aaa
pop
daa
addr16
sti
insl
cs
daa
sbb
push
das
ficoml
lret
push
lods
fists
call
cmp
or
push
push
add
adc
cmpsl
push
mov
sub
add
sti
pushf
out
aaa
inc
fcompp
mov
data16
pusha
mov
cmp
arpl
ljmp
adc
testb
in
imul
add
inc
addr16
in
stc
jmp
inc
inc
lret
data16
cmp
out
xor
mov
mov
fsubrs
jmp
push
pop
push
popa
xor
ret
mov
pop
mov
out
popf
xchg
push
cmc
popf
dec
pop
adc
lods
and
das
sbb
sbb
sub
mov
mov
push
xor
mov
in
scas
dec
call
xlat
pop
stc
fcompl
out
push
xor
mov
popf
mov
sbb
and
call
cmp
filds
pop
and
scas
inc
push
jle
sar
test
jle
iret
jmp
push
lods
rcr
sbb
mov
fistps
mov
jl
push
add
mov
pop
pop
jl
int3
aaa
mov
cmp
and
pop
pop
daa
and
jmp
iret
add
jl
daa
pop
and
lods
xor
data16
pop
scas
xchg
add
dec
jmp
std
fistpl
jne
int3
pop
xlat
adc
adc
mov
inc
es
ror
jo
jl
push
push
scas
and
mov
jl
call
test
and
mov
sti
mov
scas
inc
movsb
in
jne
jge
mov
cli
das
inc
int3
sahf
mul
sbb
popa
push
stc
dec
mov
testb
mov
ds
mov
mov
aas
sbb
ret
aas
aam
push
adc
cs
xchg
cmpb
push
cmp
outsb
data16
or
and
das
inc
fstpl
repnz
jmp
rcr
test
xor
outsb
addr16
cs
fbld
xchg
adc
lock
pushl
adc
sbb
push
push
jns
adc
mov
sbb
sbb
push
stos
adc
nop
in
inc
test
push
mov
xlat
mov
test
sbb
addr16
das
loopne
adc
cmpsb
addr16
push
addr16
ret
das
out
and
das
stos
add
das
call
cmp
scas
addr16
addr16
sub
ss
insl
sub
imul
and
das
packuswb
mov
ficoms
inc
fistps
mov
inc
rcrb
xorb
push
push
jbe
pop
mov
mov
sub
adc
sahf
ret
das
dec
or
add
movsl
dec
stos
xor
push
inc
test
or
jmp
bound
inc
adc
sbb
inc
out
push
into
pop
icebp
decb
fisubs
sbb
push
inc
ficoms
pop
out
pop
ror
pop
fwait
push
das
inc
mov
and
xchg
xchg
cmpsb
add
stc
insl
xchg
sbb
push
and
mov
mov
loope
repnz
sub
inc
sti
subl
cmpsb
pop
inc
mov
mov
mov
jmp
mov
xor
pop
jg
fcompl
nop
mov
ljmp
inc
nop
cwtl
adc
ljmp
rcrb
cmp
jo
ja
shl
xchg
cmpsb
mov
ja
or
pop
js
push
insb
cs
ja
js
notl
and
cmpsb
mov
xchg
outsl
add
xchg
mov
int3
xchg
cmpsl
repnz
pop
xor
out
dec
and
enter
sbb
div
movsb
xchg
aas
sbb
scas
xchg
add
fistps
lods
push
sub
mov
pop
loop
inc
js
xor
pop
push
mov
jg
loop
cmp
xchg
cmpsl
mov
add
sbb
add
adc
add
scas
es
sti
jno
into
mov
jg
sub
sub
and
es
xchg
pop
adc
ja
pop
dec
shrb
and
lock
sti
pmulhuw
push
adc
icebp
mov
mov
mov
fistpl
dec
inc
out
push
sbb
push
and
paddb
dec
int3
sbb
inc
fs
mov
insb
decl
sti
aam
push
cs
ss
lcall
lds
insl
dec
aad
cmpsb
int3
ret
sub
pop
out
sub
mov
test
mov
testb
fistps
popf
and
push
add
fwait
push
push
add
lock
jle
inc
insl
inc
sti
push
mov
sbb
jmp
stc
add
in
movsb
sbb
jmp
sbb
and
cs
jecxz
inc
cmpsl
fs
js
pusha
push
mov
dec
loopne
add
int3
out
cmc
js
sub
ret
push
int3
shl
repnz
aad
pop
xchg
orl
mov
sub
mov
repz
push
add
pop
negb
cmp
shll
xchg
push
sub
outsb
pop
out
cmc
test
xor
scas
es
and
cmp
mov
outsb
mov
push
jmp
lcall
mov
fimull
push
notb
push
inc
xchg
mov
mov
adc
sbb
xor
xor
jo
ss
xchg
jl
sbb
rcrb
cmpsl
mov
add
push
out
cmc
jno
xchg
insb
ss
push
or
pop
aaa
mov
fwait
int
ss
adc
push
pop
and
jne
push
ja
and
in
arpl
jbe
adc
sbb
and
adc
pop
sub
inc
xor
inc
inc
push
imul
adc
gs
out
push
rolb
int
repz
sub
repz
ret
int
ds
mov
adc
sub
cmp
pop
cmp
repz
insl
test
xlat
ss
iret
repz
cmpsb
adc
add
sub
shl
sub
sub
add
out
iret
mov
aaa
jb
lock
fldcw
jge
aaa
inc
add
inc
xor
repz
jne
and
iret
repz
nop
shll
push
repz
pusha
repnz
insb
ds
mov
adc
and
and
jns
cmpsl
cmp
jnp
sahf
out
sahf
fwait
mov
movsl
aad
fstps
jbe
daa
daa
push
das
pop
stc
xor
cmpsl
push
addr16
mov
push
push
es
repz
es
and
iret
repz
mov
cmpsl
fcmovnu
ds
repz
in
pop
and
or
mov
data16
sbb
lods
sbb
cmp
testb
leave
pop
lcall
sub
pop
pusha
and
sahf
idivl
loope
repz
jns
mov
addr16
fisubs
pop
repz
out
ja
add
xor
inc
iret
cmp
iret
pop
cwtl
sbb
mov
cmp
imul
inc
imul
xor
push
adc
out
mov
fstpl
aad
repz
repz
iret
repz
or
jle
adc
mov
pop
call
cmp
out
xorl
jne
lods
es
movsb
sbb
movsb
push
push
mov
in
into
loope
inc
bound
pop
repz
popa
sub
in
sub
push
fstpt
out
loopne
adc
sahf
cmpsl
inc
jae
sub
inc
out
imul
mov
loop
shr
cmp
xlat
add
out
int
sub
and
out
sahf
pop
insb
cmp
iret
shrl
addr16
and
out
jne,pn
push
and
ds
inc
adc
data16
mov
xor
cmpsl
mov
cmp
rcl
jecxz
pop
sub
repnz
divb
or
push
stc
iret
repz
push
das
fildll
repz
sub
dec
add
cmp
repz
and
lcall
lds
mov
mov
and
iretw
jnp
cmpsl
fisubs
add
push
sub
cmp
gs
mov
lds
jns
out
fldlg2
mov
sahf
out
jno
sub
inc
jmp
cmpsb
sti
fs
and
and
fildll
ds
rep
cmp
fwait
addr16
jecxz
lahf
pop
data16
xchg
xor
jae
jl
mov
lock
dec
inc
cmpsl
fnstcw
iret
aas
inc
out
cs
je
cmp
repz
popa
dec
push
out
iret
repz
daa
cmp
mov
jae
xor
cs
int
xor
add
push
push
xchg
add
push
daa
push
sahf
idivl
pop
inc
cmp
imul
cmpsb
xor
xor
sbb
daa
daa
dec
iret
pop
arpl
add
fidivrs
repz
mov
fistps
scas
inc
inc
add
adc
push
jp
xor
jbe
jno
xor
add
out
mov
and
push
jae,pn
aaa
sub
mov
push
outsl
popa
imul
sub
adc
jno
push
adc
inc
adc
insb
aaa
sub
jbe
enter
scas
add
adc
jae,pn
daa
sbb
aaa
jp
and
inc
jp
inc
adc
dec
xor
gs
sub
push
jp
and
jne
or
mov
add
inc
and
xchg
xlat
add
data16
push
sti
filds
mov
inc
addr16
jnp
push
push
test
cmp
push
dec
xor
jbe
push
adc
std
pop
andb
ljmp
inc
jge
inc
dec
ss
or
pop
and
and
rcr
cs
aad
popa
add
adc
jg
std
jmp
xor
inc
ss
pop
outsl
gs
adc
add
cmp
pop
push
xor
inc
adc
xor
push
add
std
mov
gs
dec
aas
sub
jbe
dec
jo
pusha
lahf
mov
jbe
test
pop
add
ret
in
adc
jbe
add
cmp
jbe
pusha
jbe
cmp
clc
test
inc
dec
cmp
jnp
lock
and
cwtl
push
inc
outsb
jb
and
add
push
or
jbe
add
mov
and
jno
or
sbb
fisubrs
mov
ja
popa
push
das
inc
sbb
fs
ja
pop
dec
xor
jb
push
mov
aaa
jo
arpl
push
ret
mov
dec
xor
dec
stc
xchg
cld
adc
and
imul
pop
lea
js
push
add
decl
pop
aas
xor
xchg
xlat
adc
gs
sub
pop
imul
movzbl
mov
jmp
inc
add
rcr
leave
push
call
dec
jbe
sub
adc
ss
add
cmpsb
pop
mov
shrl
dec
push
loopne
fildl
lret
inc
frstors
es
inc
out
jp
jge
mov
push
xchg
dec
xor
addr16
scas
aam
xchg
xor
and
outsb
xchg
or
insb
fsubrs
dec
into
es
inc
xor
mov
and
das
adc
jo
cmp
rcrb
push
inc
adc
ss
add
or
insb
jbe
push
aas
ficomps
adc
das
add
or
inc
jb
jo
loop
inc
aas
mov
es
adc
cmp
and
push
dec
pop
or
and
jae
call
ret
sbb
es
subb
movsb
andl
cmp
mov
mov
orl
dec
push
mov
pop
adc
sbb
and
call
add
roll
inc
add
test
mov
mov
push
sub
add
dec
imul
loopne
sahf
or
jae
pop
shr
jp
jl
data16
iret
or
dec
rcrb
push
mov
add
add
push
cli
es
scas
mov
imul
add
push
jp
dec
scas
movsb
add
cmp
data16
dec
jb
call
and
xor
sub
inc
inc
imul
pusha
add
push
add
aaa
push
jbe
jp
nop
jbe
cwtl
js
arpl
das
jb
xor
shll
cmpsb
inc
adc
pop
dec
jg
inc
inc
outsb
jge
je
mov
push
popa
mov
dec
add
fdivl
popa
cmp
pop
pop
cmpsl
pop
fcoms
cmp
xor
add
jmp
push
xlat
inc
sub
inc
sar
mov
inc
xor
pop
sub
push
jbe
ficomps
push
cmpb
or
mov
jb
cmpsl
xchg
ss
popa
faddl
outsb
jo
out
sarb
dec
xchg
pop
push
ficoms
pop
and
add
decb
ss
add
mov
les
jns
inc
bound
jo
sub
incl
add
inc
cmp
add
cmp
pop
pop
stos
dec
pop
sahf
and
mov
and
cli
dec
mov
sub
ds
sarb
jg
aas
pushw
and
mov
inc
sbb
imul
stos
test
das
jg
xor
jb
into
pop
mov
xchg
pop
jl
adc
je
das
inc
fisubs
xor
js
dec
pop
inc
cmp
jo
das
sub
pop
xor
rcrb
imul
add
mov
dec
jbe
jge
pop
pusha
sbb
sub
ss
sbb
jg
in
jg
adc
jl
aas
and
jnp
add
loopne
inc
or
xchg
ss
xor
cmp
inc
and
es
push
xchg
xchg
adc
jnp
loop
push
aas
popa
sar
sbbb
and
inc
pop
adc
sbb
imul
lds
popa
and
jl
and
push
mov
mov
adc
stos
or
xor
shl
cli
inc
and
cmp
fidivrs
cmp
push
inc
inc
add
sub
inc
push
inc
pop
jo
pop
mov
push
mov
inc
push
xor
and
sbb
ds
push
push
lret
jnp
inc
inc
mov
push
mov
jo
mov
aas
jmp
adc
jb
imul
and
push
add
scas
sub
fisubs
cmp
xor
adc
sub
push
insl
jbe
push
push
lcall
add
out
push
jl
test
sbb
jmp
or
inc
jbe
cmp
cmp
lret
dec
andl
cmp
xlat
add
add
inc
pop
xor
push
jo
push
pop
gs
and
data16
mov
out
or
sub
ret
add
add
aam
jge
cmpsb
lea
aas
jle
pusha
xor
jb
add
popa
jge
fidivs
xorb
mov
mov
pop
sub
cs
subb
inc
andb
jle
push
xchg
inc
jae
das
push
ficompl
cmpsb
ss
je
push
xor
lret
sbb
cmp
repnz
fbstp
notb
xor
imul
pusha
inc
jbe
aas
add
inc
insb
pusha
ja
xor
sbb
push
push
or
jle
push
cld
frndint
jb
ja
xor
inc
inc
jl
cmp
mov
inc
pop
dec
xchg
and
cli
rclb
pushf
pusha
push
addr16
cmc
dec
ficoms
and
daa
sbb
add
mov
sub
inc
ss
push
fimuls
and
iret
add
popa
mov
cld
add
jle
jle
mov
mov
and
cmp
push
jnp
fstpt
inc
push
inc
cmp
pop
es
je
sub
mov
cmc
mov
push
xor
fs
mov
mulb
test
push
inc
xor
popa
add
das
mov
lret
jne
aas
dec
ja
fs
sub
lock
dec
and
jg
add
jl
inc
ret
scas
pop
xor
ds
scas
dec
data16
and
outsb
outsb
push
push
ja
push
or
add
cmp
inc
ja
jno
push
mov
xchg
adc
or
and
or
insl
cmp
out
and
hlt
add
insb
mov
inc
mov
sub
cmpsb
push
dec
adc
shll
dec
push
or
xor
cs
push
into
pop
push
lock
out
dec
xor
sub
test
add
and
xchg
divb
and
mov
jle
pusha
cmp
mov
xchg
pop
and
out
or
data16
jle
pop
sbb
inc
push
dec
sti
ss
jp
jmp
dec
adc
or
es
or
push
sub
mov
adc
inc
adc
pop
iret
push
das
fildll
and
or
mov
push
das
jp
pusha
adc
insb
push
sbb
dec
mov
es
jns
push
sub
pusha
cmpsb
jmp
push
pop
sub
mov
cmp
mov
jne,pt
inc
ja
jbe
stos
mov
outsb
insw
fidivrs
cmpsb
and
add
icebp
out
shlb
cs
push
mov
fwait
adc
jbe
and
pop
mov
push
cld
sbb
jge
pop
mov
pop
hlt
push
sub
inc
jle
pop
jo
scas
inc
add
pop
sub
mov
push
sbb
out
shlb
dec
icebp
testb
add
jg
cmpsl
sub
test
jns
sbbb
fwait
mov
jns
dec
aaa
aaa
ja
addr16
inc
insl
push
jle
adc
pusha
je
bound
xor
push
divb
adc
xchg
sahf
adc
pop
mov
push
sbb
loopne
das
dec
and
mov
add
mov
and
pop
sub
push
arpl
inc
cmpsl
mov
es
popa
arpl
aaa
addr16
sbb
inc
inc
mov
scas
jle
and
add
dec
ret
cmp
and
dec
cmp
or
or
into
push
pop
es
jnp
outsl
add
jecxz
inc
sahf
test
cmp
fisubs
jl
xor
jae
dec
dec
repz
cmp
xchg
roll
je
aas
sub
mov
jl
xor
push
ja
and
jbe
icebp
dec
lahf
mov
inc
xchg
or
arpl
outsb
or
add
mov
repnz
sub
dec
jp
jl
xor
imul
mov
inc
push
sub
xor
push
loop
dec
fdivl
and
inc
dec
and
pop
adc
cwtl
jno
test
inc
push
or
es
xabort
jmp
jbe
jb
and
out
fs
inc
add
sbb
orb
inc
shll
pop
push
and
dec
fdivl
inc
pusha
push
popa
adc
add
arpl
cmpsb
push
xor
add
push
adc
dec
mov
aaa
xor
sub
xorl
mov
inc
je
fiadds
xchg
mov
decb
cmp
inc
mov
outsb
adc
stc
imul
jb
push
popf
pusha
xlat
rcrl
mov
aas
xor
data16
xchg
inc
inc
psllw
add
push
and
add
arpl
es
clc
pop
mov
sub
dec
fs
jl
xor
inc
adc
or
popa
jbe
daa
iret
push
fbld
sub
dec
out
push
dec
inc
pop
adc
dec
addr16
jl
push
mov
push
pop
bound
int3
lock
sub
cld
inc
pop
dec
lahf
sarl
jo
outsl
insl
xlat
bound
push
mov
ficomps
jg
mov
fiaddl
and
or
xor
and
lcall
sub
add
xor
add
ds
and
jp
and
push
push
inc
shl
movsl
mov
push
fs
xchg
mov
mov
jo
mov
lock
aas
and
in
push
jbe
je
das
clc
jno
aaa
push
ja
pop
cmp
addr16
add
dec
pusha
inc
pop
push
add
cmp
es
cld
dec
aas
dec
inc
dec
cmp
jl
dec
nop
jae
sub
fs
bound
push
data16
jg
inc
fiadds
cmp
inc
popa
ja
mov
test
pusha
mov
ja
add
push
mov
pop
cs
mov
mov
icebp
jg
ds
adc
inc
popa
jns
dec
xor
pop
add
pop
inc
lods
xor
inc
add
jbe
insb
mov
test
incl
inc
and
popa
jge
jle
aaa
sub
je
xchg
sahf
popa
or
rclb
out
and
je
xchg
loope
ja
adc
push
push
sub
adc
xchg
mov
push
xor
and
scas
test
aaa
sbb
push
into
push
jp
push
push
jo
inc
add
and
xor
and
mov
fwait
icebp
sbbb
inc
rclb
push
xor
push
jp
fbld
imul
outsl
xor
sbb
cmc
dec
sbb
xor
adc
push
push
cmp
movq
sbb
xlat
push
negb
add
popa
pusha
dec
push
mov
out
popa
aas
xor
jo
imul
std
mov
jp
inc
push
xor
adc
and
jns
subb
out
push
gs
dec
and
adc
ds
inc
add
filds
sub
pop
push
jbe
incl
ja
and
jno
and
mov
cmp
jbe
inc
lds
inc
dec
adc
pop
pop
dec
jne
cmpb
iret
cmpsb
stc
mov
aas
push
push
xor
js
popf
xlat
jbe
insb
jbe
and
add
xor
pop
inc
popa
jg
push
xchg
sbb
and
das
and
or
into
jo
xlat
dec
add
adc
scas
jl
lahf
sub
movsl
arpl
add
jg
out
push
aaa
sub
jbe
pop
pop
ret
mov
and
and
loope
push
pop
in
scas
push
loop
push
and
in
aas
inc
sub
push
mov
das
scas
jo
adc
call
ja
es
movsl
push
push
and
push
xchg
jg
push
dec
inc
push
add
inc
test
cmp
data16
and
aas
mov
sahf
xlat
add
xchg
or
jb
test
lock
dec
mov
incl
idiv
push
ja
cmp
dec
jbe
xchg
jg
pop
int
and
mov
jp
and
add
je
jbe,pt
sub
outsb
aas
push
mov
scas
inc
pop
and
sub
mov
add
clc
mov
and
leave
and
popa
addr16
add
bound
and
ja
or
inc
push
jbe
jbe
sub
push
and
jne
imul
adc
mov
aad
fidivrl
addr16
pop
insl
push
sahf
lret
and
dec
inc
sahf
inc
cmp
cmp
in
and
push
inc
es
gs
add
jns
inc
aaa
cmp
ds
mov
xor
fs
push
es
lea
and
add
pop
adc
and
lret
roll
push
mov
add
push
cs
aaa
loop
out
xchg
inc
inc
push
sub
cmpsb
ss
pop
sbb
jbe
add
aas
add
roll
jne
xorb
imul
sub
adc
inc
cmp
xchg
leave
divl
into
cld
movsl
push
mov
inc
negb
push
fs
jge,pn
xchg
xchg
pusha
push
inc
pop
fstpt
mov
push
je
or
jle
cld
add
popa
jl
and
arpl
pop
push
inc
sub
pop
xor
jbe
es
cmpsb
pusha
ret
pop
repnz
jbe
jbe
or
pop
call
pop
adc
rolb
insb
cmpsb
bound
sub
popa
adc
aaa
out
je
inc
stos
sub
popa
imul
jmp
and
sub
dec
jle
push
add
dec
or
jbe
shrb
cmpsb
inc
sub
sbb
and
ja
mov
popa
scas
add
outsl
out
imul
jbe
add
ret
dec
add
outsl
ss
je
xor
jo
inc
mov
sbb
aaa
dec
js
loopne
push
and
push
inc
sub
dec
jbe
inc
cmp
insl
or
push
adc
sbb
insl
adc
popa
push
jle
and
ss
daa
cs
adc
pop
and
outsl
int
outsl
les
sub
push
push
das
into
sub
aas
pop
jo
jnp
imul
xor
rclb
mov
inc
and
jbe
adc
jg
push
mulb
adc
js
ss
inc
cmp
mov
cwtl
test
inc
fmuls
mov
movb
scas
inc
lock
push
push
in
mov
pop
addr16
jg
inc
scas
shrb
pop
es
push
insl
adc
jbe
lahf
jp
push
ret
pusha
adc
es
hlt
add
push
push
add
mov
pop
xor
and
mov
dec
mov
jl
addr16
dec
mov
notb
mov
xor
xor
xor
leave
fmull
add
call
push
ret
sbb
ja
inc
and
push
jbe
push
inc
push
pop
mov
inc
push
jbe
insb
nop
add
or
inc
xor
jnp
dec
sbb
insb
adc
and
rolb
lea
cmpsb
jo
es
daa
aas
add
push
add
jle
cmp
inc
jbe
and
icebp
cmp
and
and
push
add
incl
mov
push
aas
and
out
bound
jle
and
xorb
mov
das
jbe
sbb
movsb
incb
decl
and
push
inc
das
adc
inc
fs
adc
xor
mov
outsb
dec
insw
cmpsl
jp
jp
jae
out
inc
push
out
add
pop
adc
arpl
addl
jne
out
sti
sbb
xor
dec
inc
imul
cmp
and
aaa
push
sbb
push
adcb
inc
xchg
loope
rclb
jo
testb
xor
lret
pop
jle
sahf
dec
popa
pop
and
push
inc
ds
insb
fisttps
push
and
add
bound
push
and
int
pop
outsb
jle
sub
inc
jbe
push
push
and
mov
add
lret
fsubl
pop
outsb
and
jbe
clc
mov
mov
pop
push
add
shrl
test
testb
addr16
loopne
adc
jge
inc
and
push
mov
cmp
pop
into
bound
and
sbb
adc
xor
orl
std
add
iret
pop
fdivp
es
pop
xor
es
mov
push
in
inc
dec
cmpsl
inc
gs
inc
loopne
icebp
pop
push
sub
jbe
jno
push
xor
js
pop
inc
sbb
or
dec
xor
addr16
adc
popa
lds
pop
sub
je
push
cmpsb
push
es
xchg
dec
mov
arpl
pusha
add
mov
adc
cli
dec
imul
or
push
test
push
pop
and
add
test
cmpsb
mov
push
es
jmp
push
add
mov
push
xor
cmp
out
and
pop
loopne
mov
pop
jp
xor
jb
xchg
xchg
cs
jb
js
inc
fiadds
std
sub
add
xor
dec
xchg
jmp
out
push
jbe
sbb
je
data16
pop
push
xor
pusha
and
inc
into
push
shlb
jg
add
cld
hlt
aaa
inc
js
cs
sub
out
sbb
push
and
gs
cmp
fwait
mov
dec
arpl
outsl
jle
xchg
pop
pop
jbe
pop
add
or
xor
loopne
adcb
push
pusha
mov
add
jle
popa
inc
inc
inc
insl
call
xor
ja
pop
push
lock
adc
lods
inc
pop
push
cmp
push
inc
das
push
push
addb
sub
dec
inc
out
add
std
pop
incb
inc
push
pop
imul
fs
inc
pop
jne
xlat
inc
ret
pop
decl
and
out
sub
arpl
dec
cmp
jle
inc
clc
pop
sbb
ret
sub
into
sbb
inc
dec
aaa
cmp
cmpl
insl
sbb
pop
orb
popa
into
inc
mov
sti
lcall
xchg
sub
dec
movsl
mov
sbb
xchg
mov
mov
xor
iret
shl
jmp
call
xchg
stos
adc
sarl
cltd
out
test
lods
sub
push
inc
sub
mov
adc
xchg
enter
fcompl
jmp
test
in
inc
add
loope
mov
sbb
xor
cmpsb
mov
jg
adc
shl
fists
push
push
ds
or
inc
push
adc
and
or
adc
mov
add
ss
imul
cmc
test
push
mov
pop
orl
stos
adc
lahf
inc
sbb
add
ds
das
divl
jns
das
dec
fwait
ret
mov
jg
sub
jo
and
mov
and
outsb
jbe
sti
xchg
cmpsb
test
push
movsl
adc
cmpsl
pop
out
mov
inc
jne
sbb
push
test
jle
and
loope
pop
add
aas
adc
sub
leave
in
xchg
xchg
jo
orb
movsb
mov
push
out
pop
and
jbe
xor
mov
ss
cltd
dec
push
scas
add
fsts
add
pop
push
cld
push
ret
inc
addb
sahf
sbb
test
movsl
sarl
mov
and
adc
push
inc
push
pop
ljmp
dec
xlat
cld
sbb
cmp
daa
add
inc
pop
test
push
popa
fs
cmpsl
xchg
loope
fidivs
mov
sarb
sarb
xor
mov
add
sub
inc
in
or
mov
sub
and
inc
sahf
push
inc
sub
es
movlps
out
insb
aaa
lods
xlat
test
shlb
bound
push
push
rclb
mov
mov
scas
push
je
inc
pop
cwtl
mov
shll
call
into
adc
pop
inc
jle
add
testl
push
sbb
lcall
out
push
lods
push
test
mov
add
scas
aaa
inc
adc
daa
inc
dec
or
das
add
jl
add
jle
pop
call
pop
xchg
cmp
pop
xlat
inc
into
mov
mov
xchg
jecxz
call
rol
dec
push
push
cwtl
cld
out
dec
movsb
lods
add
rclb
out
inc
cs
mov
xchg
scas
fiaddl
iret
inc
dec
inc
inc
outsl
pop
pop
test
movsl
mov
aad
or
adc
call
je
pop
ret
clts
insl
inc
xchg
insl
outsl
sub
jb
outsl
incl
jle
mov
pop
add
inc
lods
fildl
test
hlt
imul
dec
pop
outsb
imul
out
mov
jmp
in
cmp
sahf
add
int3
and
xchg
xor
adc
mov
add
xchg
xor
mov
push
dec
ficomps
push
mov
mov
insl
enter
push
ret
sahf
xchg
inc
out
movsl
unpcklps
mov
rolb
jo
dec
adc
sub
inc
mov
aas
ror
mov
lods
or
cltd
scas
pop
ja
sbb
sub
test
daa
scas
into
adc
sub
aam
fistpl
js
sbb
push
imul
sti
and
outsl
out
in
dec
mov
nop
outsb
pop
inc
lret
loopne
test
ja
test
addb
mov
clc
mov
xorl
outsb
out
fisttpll
sbb
adc
enter
inc
out
mov
ljmp
loopne
jns
dec
popa
pop
inc
sub
or
aad
adc
aad
xor
loope
movsl
in
dec
dec
pop
sub
dec
notb
jne
mov
or
mov
push
test
adc
es
xor
pop
jno
loop
ret
pop
add
dec
imul
lods
push
xor
test
push
lods
cld
lcall
push
xchg
es
push
or
movsb
into
loop
jbe
sub
pop
push
data16
nop
mov
jmp
call
cwtl
dec
mov
adc
ss
sti
push
call
lahf
add
push
aas
inc
pop
pop
in
pop
mov
int3
adc
lcall
or
push
lods
mov
mov
out
nop
and
cmpsl
sub
push
pop
mov
pop
scas
iret
jno
insl
lods
xor
dec
decb
sti
repz
pop
ret
xchg
enter
dec
mov
arpl
adc
mov
or
inc
sub
data16
inc
out
js
cmpsl
lods
xchg
data16
leave
push
fsubp
aas
mov
nop
outsb
fcompl
repnz
push
add
ja
nop
add
ss
inc
std
insb
add
xor
xchg
cltd
adc
movsb
lods
dec
outsb
xchg
loopne
mov
jmp
fwait
sbb
push
gs
cmp
pop
mov
shr
daa
jl
insb
int
in
pop
ficompl
pop
push
inc
pop
push
sbb
and
add
push
movsb
jmp
push
sub
out
sub
adc
cmpsb
aad
sub
loopne
xchg
mov
jg
call
adc
test
insl
push
sbb
inc
xor
fwait
push
xor
or
mov
sub
insl
mov
cmpl
pop
lea
loope
mov
push
imul
nop
push
push
pop
aaa
mov
aad
xor
test
gs
or
rorb
push
pop
pop
sbb
push
or
lcall
inc
push
inc
int3
sub
loope
adc
outsb
xorb
adc
incl
fs
push
adc
cmp
mov
call
iret
add
push
data16
mov
add
mov
scas
leave
jmp
jg
mov
xor
test
lods
loope
inc
and
fidivl
lods
or
xchg
fdivrp
ljmp
data16
in
pop
sti
shr
jmp
cli
cwtl
jmp
scas
lods
loope
jl
add
addl
out
push
outsb
int
decb
lods
out
lods
and
scas
dec
into
fdivl
repz
incl
and
mov
lret
xchg
addr16
cltd
or
mov
pop
lds
sub
mov
inc
iret
push
add
in
test
cmp
rclb
xchg
rcr
call
mov
xchg
inc
cmpsl
fs
iret
xchg
add
in
pop
lcall
xchg
andl
pop
cli
iret
aam
pusha
insl
out
fwait
inc
pop
mov
rorl
inc
pop
test
aaa
nop
mov
jg
clc
dec
push
ljmp
bound
jnp
loope
adc
mov
pop
xchg
lahf
dec
xor
ja,pn
mov
mov
test
fs
fidivl
cmpsl
in
add
sub
ljmp
push
sub
mov
xchg
in
in
not
adc
cmpsb
addl
mov
pop
fs
cmp
test
in
inc
dec
xchg
nop
frstor
idivb
sbb
sar
sahf
or
scas
xchg
xchg
inc
cmpb
fdivrl
dec
mov
add
call
nop
push
pop
or
lea
fwait
and
sub
cwtl
ljmp
cmc
sarl
nop
xchg
dec
iret
dec
scas
add
push
pop
jmp
add
loope
jne
sub
and
mov
push
xchg
call
das
sub
rolb
test
je
fisubrs
xchg
es
sbb
shlb
mov
clc
inc
lahf
das
and
dec
adc
push
add
xchg
sar
cmpsb
and
pop
repnz
loopne,pn
cmp
and
shll
sub
inc
push
test
jg
aaa
iretw
sbb
jmp
in
pop
add
pop
adc
fs
clc
add
mov
nop
es
or
and
add
in
xchg
adc
or
inc
sbb
push
jl
sbb
and
inc
enter
add
loop
dec
roll
xor
add
sub
das
push
andl
sub
mov
scas
sub
xor
push
rcrb
std
cmp
fistpl
xor
mov
rcrb
sub
dec
mov
sahf
inc
shll
xchg
jbe
icebp
jbe
das
and
add
inc
mov
outsl
or
sub
adc
call
ljmp
inc
addr16
inc
jbe
pop
lods
inc
pop
jg
es
outsb
int3
mov
test
scas
dec
mov
push
or
dec
insl
addr16
push
xor
in
mov
popa
inc
jmp
and
jbe
outsb
mov
xchg
pop
negb
lcall
sub
ds
iret
jae
adc
and
push
push
push
ljmp
in
fmuls
inc
loopne
std
xchg
mov
dec
inc
aad
xor
scas
addr16
test
sbb
xor
dec
nop
cwtl
dec
jg
das
inc
inc
cmpsl
ljmp
adc
xchg
es
decl
fnstsw
xor
xchg
inc
sub
lods
or
stos
inc
cwtl
pushf
cmp
cmpsb
xchg
sarl
xchg
test
pop
xchg
mov
roll
jbe
clc
inc
mov
addb
fistpll
dec
fnsave
mov
mov
inc
jns
scas
mov
pop
insb
push
nop
out
mov
xchg
test
mov
sub
or
push
and
rol
sarl
and
sbb
lret
xchg
pop
push
sub
sbb
scas
pop
bswap
xchg
xchg
fdivl
or
pop
push
adc
loop
inc
pop
xchg
adc
aaa
xchg
shll
outsl
and
out
sub
push
or
mov
clc
jg
pop
mov
adc
xor
xor
lods
push
cmp
pop
orb
push
jl
jmp
push
push
pop
push
aam
or
mov
push
pop
jecxz
sbb
pop
jle
ss
lahf
xchg
gs
mov
lret
ljmp
dec
add
shrb
push
enter
and
sahf
mov
jbe
sbb
sahf
and
cli
or
stc
shlb
push
and
or
ss
xchg
mov
mov
dec
mov
dec
adc
inc
mov
push
and
push
lods
ljmp
cmp
leave
jne
scas
push
dec
lods
jbe
fiadds
ret
push
pop
add
and
pop
adc
cmp
ret
iret
sub
ds
xchg
aad
jne
jg
rolb
jl
cld
sub
push
inc
pop
lea
xchg
mov
sub
add
call
xchg
cli
jmp
adc
push
pop
sarb
mov
mov
mov
out
fmuls
in
or
sbb
scas
scas
lret
mov
mov
inc
pop
adc
xchg
cld
int
push
xor
roll
lods
push
shrl
nop
fiadds
pop
leave
xor
push
sbb
cld
or
inc
outsb
ret
adc
into
cltd
pshufw
pop
arpl
adcl
adc
xor
in
faddp
adc
add
es
adc
lret
jle
push
ss
push
ja
lcall
inc
push
sahf
enter
push
sbb
sbb
adc
aad
xchg
mov
stos
adc
sub
clc
add
mull
hlt
aas
sarl
xchg
scas
shrl
pop
push
pop
cmc
ja
aaa
scas
push
pop
fnstenv
pop
ficoms
mov
push
rorb
xlat
std
test
xchg
mov
fstpl
push
push
loope
push
inc
xor
xchg
cmp
push
mov
nop
hlt
cmp
push
inc
pop
sbb
pop
inc
xchg
leave
dec
adc
leave
jl
adc
lds
jle
into
push
roll
mov
clc
pop
subb
aaa
inc
and
cmpsb
sub
mov
loop
sbb
ljmp
addr16
cs
lds
addr16
ret
adc
or
shl
xchg
mov
data16
fdivl
das
imul
adc
jns
push
lods
mov
je
fcoml
and
clc
push
in
xor
pop
sbb
add
data16
pop
outsb
sub
mov
push
inc
ss
inc
pop
xchg
xchg
jge
mov
xor
popa
imul
cs
movsb
jge
jp
sbb
and
imulb
mov
outsb
push
push
lret
jno
jmp
movsb
push
push
mulb
scas
mov
push
es
cmp
or
add
push
push
shlb
sahf
jno
ds
mov
adc
pop
ja
adc
jbe
pusha
jmp
in
jp
and
imul
mov
jg
inc
shr
mov
or
xor
or
push
inc
push
xchg
test
jno
push
xor
adc
lods
aaa
adc
mov
mov
mov
inc
sub
pop
or
push
push
mov
push
push
adc
outsb
outsb
or
xor
mov
xor
adc
jbe
sub
push
ja
or
cmpsb
aam
mov
xchg
sbb
cmpsb
fildll
and
nop
push
sub
xor
adc
inc
js
add
sahf
dec
movsb
xlat
aaa
mov
das
cs
out
int3
inc
push
jo
xorb
jbe
imul
or
lahf
and
xor
push
fadds
out
mov
lock
das
dec
ds
aam
and
dec
push
sahf
out
sbb
mov
rclb
mov
xchg
cs
rcl
inc
mov
test
xorl
lods
scas
fisttps
dec
lock
insl
inc
inc
sub
sub
rcr
or
push
es
sahf
int3
insl
fildl
es
bound
inc
out
pop
add
jg
aad
adc
add
sub
cs
cmp
lahf
adc
ljmp
sahf
xchg
fstl
jb
cmp
loopne
pop
cs
inc
nop
jl
fsubr
fdivr
pusha
jle
inc
ret
and
push
lds
cs
movsb
sub
hlt
push
repnz
movlhps
test
jbe
sbb
js
and
mov
xchg
push
cmp
call
mov
into
movl
push
jle
xor
jmp
addr16
push
cmp
dec
or
jne
adc
xchg
es
adc
inc
nop
mov
mov
adc
and
lods
jbe
ret
cwtl
out
or
insl
adc
gs
push
fsubl
dec
addr16
sbb
cld
scas
xchg
outsb
shr
inc
inc
insl
jo
add
sub
jl
lds
data16
imul
mov
inc
sysenter
add
inc
or
inc
movsl
mov
pop
mov
outsb
jbe
mov
mov
sbb
cwtl
add
aam
sbb
ficomps
dec
aam
mov
inc
repz
jle
cld
decl
insl
xor
fwait
lcall
and
aam
insl
push
fbld
push
dec
pop
pusha
js
jbe
push
out
sub
sub
pusha
dec
dec
or
or
cmp
push
iret
push
daa
sub
data16
insl
cmp
outsb
xchg
cmpsb
mov
pop
adc
insl
cmp
xchg
push
push
add
pop
cld
ret
mov
mov
fisttpll
pop
jmp
dec
mov
std
pop
je
rclb
movsb
jmp
gs
xor
xchg
in
scas
add
jmp
test
fwait
push
jmp
mov
loope
add
lock
fildl
jo
jg
sahf
add
popf
ds
push
shlb
adc
add
pop
adc
sub
and
adc
inc
jle
xor
fs
clc
sbb
push
sbb
or
aas
push
mov
push
clc
cs
fstpl
cmp
sbb
setbe
sahf
idivb
bound
seto
push
inc
outsb
push
push
lock
push
call
adc
sbb
xchg
adc
dec
xchg
push
pop
loope
pop
push
lods
insl
sbb
filds
add
add
jmp
adc
sbb
push
cmp
push
push
jge
js
mov
dec
insb
scas
xchg
outsb
inc
lods
scas
lahf
cmp
ret
stos
outsb
hlt
push
lods
or
sub
fistpll
or
adc
adc
push
jno
adcb
dec
mov
je
add
adc
lcall
ja
pop
inc
sub
aaa
rorl
jmp
or
add
pop
imul
jbe
pop
ret
mov
inc
test
add
scas
popf
dec
mov
fcoms
push
mov
cwtl
xor
push
test
aam
jle
ficoml
lods
push
cld
aas
push
pop
cwtl
lret
fisttpl
shrb
lds
sahf
cmc
mov
movsb
mov
and
pushf
movb
push
push
and
xchg
xor
pop
fisttpl
adc
adc
push
pop
outsl
ret
cmp
outsb
push
fdivrp
jbe
sub
push
inc
and
jle
add
fprem
adc
das
clc
out
and
inc
scas
ret
fcompl
ljmp
pop
mov
mov
cld
in
das
xor
test
adc
pop
test
sub
fsubl
pushf
add
and
ficomps
ret
pop
iret
negb
pusha
sti
jl
call
les
in
pop
lea
sub
add
push
dec
jmp
xchg
pop
stc
dec
xor
adc
inc
mov
test
sub
test
inc
xor
retw
jmp
jg
notb
inc
mov
inc
insl
mov
insb
jl
push
push
xor
xor
mov
bound
mov
sbb
outsb
pop
push
adc
add
push
add
clc
pushw
xor
enter
xlat
movsl
inc
cmp
in
dec
mov
xchg
incb
fisttps
loope
in
ds
xchg
shrb
in
filds
jg
loop
xchg
rclb
imul
sbb
mov
push
xchg
sbb
dec
aaa
fisttpll
push
jb
jl
jecxz
jo
pop
xchg
sub
cmpsb
ljmp
call
cwtl
rcrb
or
dec
adc
add
sbb
inc
lds
idivl
data16
cmp
cwtl
mov
sbb
sti
adc
stos
mov
inc
xchg
pop
jne
lods
mov
rorl
movsl
ljmp
sub
adc
mov
cld
lock
pop
pop
popa
pop
push
xor
movsl
jne
jbe
movsl
icebp
aaa
ja
inc
es
imul
insl
or
inc
mov
mov
dec
sbb
jae
dec
in
lods
sbb
add
mov
sahf
adc
dec
pop
bound
mov
into
jmp
sub
dec
or
mov
jmp
inc
pushf
and
sbb
pop
cltd
jge
mov
xor
xchg
hlt
outsl
sub
and
pop
jne
outsb
daa
pop
xor
divps
lods
add
inc
add
cltd
int
lock
lods
mov
fimuls
in
pop
outsb
dec
and
mov
adc
iret
inc
fistpl
in
sub
cs
inc
fidivrs
adc
test
pop
and
pop
push
sub
sahf
fsubrl
cld
pushl
adc
jle
insl
popa
lea
jg
data16
lock
cmpsb
iret
sbb
fwait
mov
es
faddl
xchg
inc
cmpsb
jmp
push
jle
cwtl
stc
sti
ret
call
shl
lock
push
lcall
xchg
xchg
adc
and
and
outsl
cmp
cld
dec
pop
pop
ja
mov
cltd
push
mov
aad
fistps
xor
outsb
movsl
mov
lods
xchg
xchg
call
xchg
mov
sub
xchg
incl
fdivrs
push
fsubl
xchg
test
inc
adc
fimull
nop
fwait
pop
cmp
decl
cs
scas
sbb
or
shr
pop
in
inc
sbb
pop
testb
cmp
mov
in
lock
xor
int
jg
ljmp
iret
or
out
mov
popa
sub
mov
or
aad
outsb
jle
sub
sbb
mov
sbbb
or
dec
or
pop
inc
sub
mov
push
push
testb
outsl
mov
clc
push
sbb
adc
pop
jbe
push
sbb
push
icebp
ja
xor
xchg
aad
adc
daa
jp
lea
sub
das
mov
outsl
push
in
in
dec
sbb
decl
mov
mov
movsl
je
add
mov
repz
cwtl
lret
xchg
lds
repz
cld
pushl
push
push
sub
orl
gs
sub
fadds
cmpsb
orl
fs
and
gs
out
into
je
xor
cmpsl
xchg
inc
and
pop
fisttps
push
xor
decl
cmpsl
xchg
push
nop
sahf
cmp
lds
mov
out
or
dec
dec
idiv
jno
sbb
push
push
sti
jne
test
ror
push
enter
and
inc
mov
jns
dec
daa
xchg
into
add
inc
imul
add
or
ja
mov
and
dec
push
test
push
cld
cmp
add
ret
push
fidivrs
jg
jbe
inc
pop
xchg
mov
loopne
xchg
das
fdivrl
cmp
dec
or
sbb
mov
xchg
or
jb
fisubrs
dec
gs
or
mov
decl
sub
xor
cmpsl
scas
dec
clc
sub
push
inc
jnp
adc
cmp
jns
data16
or
pop
pop
call
dec
sbb
ret
or
es
subl
pop
cs
inc
dec
push
in
or
jle
fbstp
sahf
inc
pusha
cs
cs
sbb
movsb
push
jno
mov
ss
das
cs
into
sbb
out
and
incb
ss
pop
shl
pop
xchg
scas
imul
push
xchg
ret
inc
call
fildll
loop
dec
sub
je
xor
test
mov
out
and
mov
call
fs
test
imul
pop
mov
push
or
out
push
add
inc
scas
daa
adc
das
add
mov
lcall
lcall
adc
cld
xchg
stos
sbb
into
push
jnp
aas
dec
pushl
cs
sar
pop
jae
and
pop
push
outsl
jmp
fdivrs
push
cli
and
ror
pop
cmpsb
cltd
cwtl
cmp
xor
mov
lcall
sub
das
mov
jbe
sub
sub
adc
fstps
cmpsb
pop
popf
lcall
or
xor
fnstsw
or
pop
das
popf
jnp
sbb
test
insl
jmp
pop
add
movsb
cmc
ret
cmp
jg
cmpsl
insl
dec
cwtl
xor
adc
mov
jle
cmc
xor
xor
jmp
int3
push
inc
dec
xchg
iret
add
jno
dec
pop
mov
pop
mov
cld
jnp
iret
je
jmp
and
ss
fdivrl
sbb
xor
jl
mov
xchg
cwtl
jne
xor
push
outsb
outsb
or
push
pop
clc
ds
cmpsl
data16
incl
cld
imul
push
jno
popf
sbb
push
scas
dec
filds
mov
rclb
jo
das
notb
lods
add
ds
sub
out
add
mul
outsl
lcall
jmp
dec
fisubrs
fsubrl
mov
pop
dec
clc
jnp
es
jmp
pusha
adc
pop
fsubrs
xchg
mov
movsbl
cmpsb
out
mov
fcom
lret
ss
das
dec
inc
sub
sbbb
jmp
push
mov
out
inc
adc
loopne
lret
leave
jg
das
xor
shll
push
xchg
lcall
mov
sarl
jbe
mov
outsl
jo
sbb
mov
cld
inc
imul
push
pop
push
xor
xchg
scas
xchg
push
pop
fmulp
into
dec
mov
inc
f2xm1
cs
into
push
ret
sub
loopne
out
or
retw
idivl
addr16
add
stc
jns
les
jo
adc
jbe
and
mov
jnp
fcomps
lret
ds
scas
add
mov
addr16
xor
lods
lock
notl
xchg
jnp
mov
addl
or
mov
fsubp
js
push
loope
out
sbb
xchg
push
push
xchg
pop
movsb
repnz
add
out
push
mov
stos
incb
enter
scas
xchg
testb
cmp
sbb
es
in
dec
pop
push
sti
sbb
cwtl
xchg
jne
inc
cmc
and
mov
and
inc
and
add
or
push
movsb
xchg
repz
mov
xor
push
mov
icebp
push
xchg
stos
add
psubsw
daa
cmpsl
std
xchg
cmpsb
call
jno
cmpsb
mov
dec
mov
and
iret
or
adc
adc
cmpsb
xor
or
pop
out
insb
lahf
mulb
out
mov
push
cmpsb
mov
dec
jbe
fnstsw
out
cld
fmull
lcall
sahf
fdivrl
out
jge
xchg
faddp
xchg
push
jge
sub
jmp
sbb
pop
bsr
cmpsb
pop
out
ljmp
fsubs
inc
inc
push
jnp
sahf
push
in
inc
jg
stc
ficomps
xchg
inc
test
mov
push
std
cmp
mov
xor
cmpsb
push
iret
fisttpl
jbe
inc
lock
roll
pop
xor
das
and
jle
xor
push
call
in
cld
into
inc
mov
dec
xlat
add
mov
pop
dec
clc
out
dec
jbe
outsb
mov
xchg
add
sub
clc
push
rorb
mov
mov
dec
pop
into
or
or
test
mov
pop
inc
sbb
xor
ds
gs
fsubr
push
push
mov
cwtl
sbb
push
push
and
push
sub
mov
lret
setns
aaa
lods
adc
test
cld
in
imul
sbb
push
push
sbb
ffreep
stos
mov
pop
mov
or
mov
scas
mov
or
adc
mov
out
sahf
into
pop
hlt
jnp
inc
mov
cmpsb
aaa
mov
pop
xchg
xor
daa
add
outsb
lcall
sbb
movsl
sub
cmpsb
ror
push
mov
lock
mov
fbld
cs
fcomps
int
push
fdivl
repz
xchg
lretw
fidivrs
mov
ret
loopne
out
jmp
data16
add
pop
loope
std
jl
push
aad
aam
movsl
push
push
loopne
cwtl
fildll
ja
xlat
pop
adc
or
inc
mov
xor
and
mov
cmp
scas
out
inc
xchg
lock
push
scas
mov
popf
push
push
ljmp
dec
jbe
pop
bound
ror
dec
dec
rorb
sbb
and
pop
loop
movsl
mov
rolb
add
xchg
cli
jb
mov
rcll
inc
insl
cs
cmp
pop
loope
mov
sbb
in
filds
inc
int
bound
mov
std
jmp
push
mov
call
mov
in
pop
fwait
sub
push
sti
jmp
inc
cwtl
mov
fwait
jl
into
lret
pop
fisubrs
flds
sti
dec
dec
push
int
sub
jno
scas
dec
or
popa
jecxz
inc
outsb
push
popl
adc
push
add
ss
mov
sarl
in
pop
push
dec
jle
filds
add
pushl
clc
out
xor
push
jb
jae
in
inc
push
or
xchg
lods
adc
push
sti
bound
adc
sbb
loope
in
inc
insw
jns
rorb
arpl
fcmovb
scas
push
data16
leave
dec
shlb
push
or
daa
rcll
into
jmp
jnp
mov
and
pop
cli
mov
outsb
pushw
push
xchg
call
scas
dec
mov
insl
mov
sbb
dec
and
inc
push
add
push
inc
push
int3
fstpl
mov
jecxz
xor
nopl
and
or
add
jae
mov
fildll
lahf
jp
ds
subps
mov
sbb
insb
push
mov
pop
pop
sbb
inc
mov
mov
out
adc
xor
rclb
addr16
xor
cld
fistpll
pop
or
pop
pop
pop
cmc
mov
jbe
pop
xchg
push
iret
pop
mov
xorl
push
sub
push
daa
sahf
dec
shll
ja
movsb
iret
ljmp
add
mov
xchg
sub
fsubl
or
mov
jo
inc
cmpl
adc
sbb
jg
xchg
push
inc
sbb
adc
pop
je
mov
cld
fistpl
add
sbb
push
or
jo
dec
cs
cmovae
jne
mov
ret
lods
jmp
inc
inc
icebp
arpl
push
inc
int3
sbb
dec
push
arpl
gs
outsl
les
dec
add
or
out
push
or
sub
mov
push
cwtl
add
pop
jnp
popf
xor
inc
mov
sti
or
sub
cmpsb
inc
jge
cmc
into
fistl
popf
pop
ss
std
dec
jge
ret
mov
or
inc
push
xlat
xor
sahf
testl
mov
sahf
xor
rorb
loopne
mov
mov
hlt
xchg
scas
xor
add
rcll
jmp
jne
fmulp
imul
cmp
repnz
out
push
adc
fiadds
add
lods
sub
dec
cmp
pop
test
test
das
inc
negb
test
iret
cmp
inc
insl
cld
pusha
es
xchg
mov
add
nop
push
iret
es
jmp
cmc
push
xchg
scas
shrl
dec
pop
pop
add
into
adc
aam
sahf
out
outsl
push
adc
stos
inc
mov
push
cmp
mov
enter
pop
mov
out
xchg
frstor
in
pop
sbb
outsb
movsb
adcl
pop
xchg
push
pop
inc
dec
inc
or
in
xor
imul
jg
sbb
dec
cli
sahf
scas
fs
addr16
pop
inc
inc
das
inc
scas
mov
sahf
into
gs
dec
pop
adc
pop
dec
test
jle
push
pusha
sbb
inc
mov
dec
jne
and
mov
shrb
cmpsb
gs
mov
rcl
cli
sti
sub
inc
int3
sub
inc
loop
dec
xchg
incl
adc
sahf
add
incl
push
shlb
sub
add
lock
inc
jmp
movntq
pop
jo
stos
mov
pusha
push
and
push
add
push
pop
pop
imul
sbb
dec
testl
sub
mov
mov
lahf
adc
insl
adc
pop
push
add
cmp
inc
mov
push
incl
push
shl
movsl
mov
and
mov
inc
mov
mov
add
and
je
adc
mov
inc
xlat
push
and
dec
dec
aaa
add
test
data16
outsb
lcall
push
jo
add
inc
imul
ja
ja
addb
push
push
lock
insb
mov
movsb
lock
cmp
push
jle
pop
sub
adc
das
xor
test
and
add
es
add
clc
pop
sbb
xor
sahf
xchg
mov
sar
lret
push
daa
decl
cmp
jl
pop
push
mov
mov
pushl
lock
xchg
ds
mov
fdivrs
movsb
xchg
ds
fildl
push
pop
imul
inc
lods
add
push
rcrb
stos
out
jae
pop
and
add
andb
nop
ds
pop
xchg
dec
sub
scas
push
jg
pop
cmp
orl
das
mov
cwtl
and
inc
xor
push
push
sbb
mov
into
or
sti
or
fs
xor
je
push
decl
fisubs
jg
xor
pop
xlat
adc
pop
lea
adc
xchg
mov
mov
loopne
in
push
out
inc
sub
adc
leave
daa
dec
sub
test
insl
sub
jne
dec
cmpsl
push
pop
pushl
push
in
inc
mov
xchg
inc
adc
movsb
lock
enter
adc
xchg
pop
dec
pop
jb
movsb
jo
out
lret
xor
roll
ds
pop
ljmp
add
adc
push
lcall
add
xor
mov
dec
out
dec
pop
ret
dec
ds
insl
sub
add
ds
fwait
pop
test
in
loopne
push
lock
jnp
fsubrp
int
or
into
mov
in
insl
subl
sbb
or
jae
outsb
push
mov
les
and
add
pop
mov
xchg
pop
dec
test
int3
push
xchg
add
adc
sarl
es
jp
jnp
fwait
mov
and
fs
add
push
out
popa
add
call
stos
pop
push
cmpsb
lods
cs
aad
sbb
mov
pop
mov
dec
push
pop
and
add
clc
cmpsl
outsb
scas
jmp
mov
sbb
ss
mov
inc
or
pop
push
test
ljmp
mov
add
push
paddb
add
xor
pop
fcomp
adc
fisttps
mov
rcrb
sahf
sub
push
adc
mov
lcall
lahf
imul
mov
lock
shrb
xor
dec
mov
inc
fildl
pop
add
push
push
jbe
add
sub
imul
out
push
aam
xor
outsb
pop
mov
xor
sub
inc
jbe
sbb
lret
push
stos
xor
cmp
cmp
push
popl
cmc
mov
enter
sub
push
insl
push
and
sbb
and
mov
outsb
push
cs
nop
in
and
adc
or
cmp
jbe
fidivs
ss
aaa
fimuls
imul
mov
nop
outsb
fistpll
movsl
add
pop
adc
cmpsl
inc
aaa
mov
xor
and
sti
adc
mov
pop
mov
xchg
lea
and
add
fdivp
loope
sub
jnp,pn
scas
fistpl
mov
icebp
jge
mov
push
cmp
das
test
mov
mov
cs
or
push
mov
cld
ljmp
jne
das
or
idivb
mov
mov
adc
jecxz
call
adc
sti
insl
xchg
into
xor
iret
mul
mov
call
inc
sar
mov
insl
mov
stos
lods
push
push
inc
roll
adc
push
out
adc
mov
dec
ret
incl
inc
push
movsl
call
xor
dec
push
fbld
jg
sbb
inc
adc
inc
push
insl
add
ss
add
lea
scas
push
dec
push
push
xor
jne
push
test
push
or
aas
push
dec
mov
idivb
ja
inc
pop
sub
jo
jnp
addb
jmp
push
outsl
and
popa
dec
add
nop
jge
and
or
mov
push
ss
sub
mov
cmpsl
scas
and
dec
sahf
fildl
or
and
mov
call
dec
out
cmp
bound
mov
mov
xchg
ficompl
mov
cmp
adc
pop
ja
sbb
jg
test
add
add
and
xor
fadds
loop
sub
in
or
and
test
dec
xchg
push
xchg
cwtl
ljmp
adc
data16
test
mov
ds
out
or
push
cmpsl
add
jo
sub
lahf
iret
testb
aaa
sahf
xor
pop
in
xor
out
clc
or
int
adc
pushf
aas
mov
ucomiss
jne
outsb
sahf
clc
adcl
push
inc
inc
movsb
scas
sub
jmp
inc
lods
and
and
push
jbe
push
fcmovb
das
inc
scas
pop
sbb
jle
mov
clts
push
sbb
ds
cwtl
cmpsb
clc
dec
add
sbb
push
or
or
cld
and
stos
jg
xor
cmpsb
push
pop
lret
jbe
scas
mov
mov
in
jg
mov
mov
mov
jbe
les
ret
sub
add
cs
dec
push
sub
lahf
ret
aad
fiaddl
in
pop
jnp
stos
and
jp
sub
js
pop
adc
lods
push
mov
push
mov
ja
xlat
pop
jg
sub
pop
mov
lods
cs
clc
addr16
ljmp
xchg
movsb
pop
xchg
jle
push
push
incl
sub
insb
jmp
and
and
cltd
inc
ss
mov
mov
xorb
sbb
movsl
cmpsb
mov
add
test
dec
push
mov
call
lods
nop
hlt
cmp
lcall
add
inc
xchg
xchg
jno
push
cs
or
sub
inc
insb
jbe
and
clc
or
scas
iret
add
aam
pop
adc
loope
xor
push
fdivrp
mov
or
add
push
sub
sbb
and
fisttps
add
dec
jg
pop
push
mov
push
scas
push
and
or
out
fimull
push
lods
push
xchg
xorb
jbe
jecxz
sub
outsb
lock
std
push
daa
xor
and
out
and
push
push
dec
sub
push
filds
std
cmpsl
popa
mov
pop
adc
adc
push
push
cltd
cmp
loop
stos
sbb
adc
push
fbld
popf
xchg
sahf
mov
xchg
push
push
out
fsubrl
mov
mov
imul
lcall
inc
mov
jge
add
fs
push
dec
inc
test
mov
mov
imulb
add
or
frstor
fidivrs
xchg
call
xchg
mov
push
out
jnp
fwait
mov
outsb
push
lock
pop
push
test
in
jmp
mov
xchg
push
inc
add
adc
lahf
push
mov
pop
mov
push
inc
or
pop
data16
test
les
jle
pop
lea
jmp
push
lods
cmpsb
jbe
mov
popa
jmp
sub
inc
adcb
imul
outsb
bound
inc
push
jl
inc
ret
mov
mov
cli
inc
outsb
pop
push
and
mov
push
lods
xchg
out
sub
int
fs
and
mov
adc
cmpsl
adc
imul
xor
mov
and
das
adc
and
filds
mov
xchg
add
dec
adcb
cmp
add
decb
sti
inc
enter
das
mov
shlb
enter
les
call
test
in
shll
mov
fldl
call
push
inc
scas
imul
adc
and
mov
adc
push
gs
inc
jo
imul
pop
xchg
pop
pop
ja
add
test
in
ret
das
test
ds
ljmp
scas
pop
fnsave
jne
ret
sbb
jle
ja
adc
xchg
aam
addb
adc
gs
lret
les
xor
ljmp
scas
sar
push
jp
push
fistpll
or
iret
pop
push
mov
fdivp
push
dec
cmp
inc
add
xchg
cmp
cmp
and
mov
and
inc
loop
aas
and
cwtl
pop
nop
in
subb
cmp
pop
in
repnz
adc
jecxz
call
into
xchg
iret
sbb
xchg
or
clc
fbstp
jno
adc
fiaddl
sbb
outsl
imul
or
jl
call
push
add
inc
cltd
cwtl
adc
inc
lods
add
test
movsl
sbb
sub
add
cmpsb
lcall
pusha
shlb
movsl
js
inc
in
sub
test
stos
sub
add
mov
scas
add
fistpll
and
fisttps
ljmp
xchg
and
or
inc
nop
outsb
movsb
inc
pop
scas
rorb
sbb
sub
cmpsl
pop
xchg
js
std
outsb
ja
ja
inc
frstor
idiv
mov
push
mov
or
pop
lods
or
fidivrl
inc
push
jl
int3
out
mov
push
fwait
pop
and
sbb
inc
push
dec
clc
lret
shrb
inc
xchg
push
int3
or
sbb
mov
inc
into
enter
push
mov
adc
or
ficoms
fildll
sub
or
rolb
mov
outsl
sbb
cmp
pop
ror
mov
xchg
sahf
jp
inc
negb
out
cs
std
adc
push
sbb
fbld
fcmovnb
pop
or
or
mov
imul
xor
cmp
push
jbe
daa
xchg
inc
pop
lcall
ss
sar
push
sbb
pop
cwtl
sub
into
push
add
rcrl
jmp
lods
dec
xor
adc
push
jne
arpl
mov
pop
xchg
xor
call
dec
inc
push
outsb
push
lods
or
cld
jg
bound
mov
push
or
adc
cwtl
inc
aas
pop
adc
and
lcall
jp
insl
adc
push
pop
into
push
dec
sub
or
dec
add
add
scas
pop
inc
in
or
jle,pt
adc
mov
push
sub
daa
pop
lcall
jbe
push
jl
push
shlb
in
xor
int3
lcall
xor
sub
jl
cld
fistps
out
gs
bound
inc
call
fcomp
rcl
dec
xchg
ss
adc
and
sti
adc
cvtps2pd
pop
adc
shl
push
cld
inc
into
sub
in
outsb
xchg
les
ljmp
or
add
pop
sbb
jb
dec
iret
inc
adc
adc
push
cmpsb
ja
cli
pop
iret
add
add
jg
push
inc
aad
jo
adc
lret
ss
call
or
cmp
stos
cmp
gs
xchg
cmc
mov
imul
xor
imul
sbb
ss
dec
mov
sub
lds
or
inc
dec
test
mov
ficoms
in
mov
loop
push
or
pushf
pop
adc
fldl
pop
std
call
adc
push
and
pop
repz
shlb
jl
test
outsb
mov
ja
inc
call
sub
pop
decl
push
sbb
lcall
add
adc
ljmp
and
inc
dec
loopne
std
push
push
adc
aad
xor
mov
cwtl
pop
inc
dec
xchg
sbb
and
data16
arpl
fwait
and
daa
push
outsb
aam
subb
es
mov
dec
inc
adc
sahf
cs
ret
lcall
push
push
notb
into
cmpsb
mov
cs
adc
inc
decl
subb
shll
dec
mov
dec
outsb
sbb
hlt
xorl
pop
pusha
adc
clc
push
sbb
pop
into
dec
cmp
ljmp
cmp
dec
push
lods
dec
or
imul
bound
dec
push
popf
rolb
push
jecxz
decl
dec
js
and
sub
into
pop
push
cwtl
adc
and
fnstenv
setl
rorb
cmp
adc
push
sbb
mov
mov
movsl
fnsave
daa
jle
cld
mov
pop
sub
pop
sub
push
dec
jp
inc
cltd
decl
ds
cmp
jle
inc
pusha
dec
fst
sbb
mov
fbstp
sahf
pushf
jbe
lcall
sub
sub
pop
jle
push
or
lcall
imul
xor
aas
add
ljmp
ficoms
ds
or
outsb
fistl
sub
arpl
and
scas
and
adc
clc
jmp
mov
daa
push
push
int3
arpl
call
pop
inc
gs
rorl
daa
mov
out
scas
push
dec
outsl
ljmp
test
and
shl
push
pop
nop
push
adc
into
or
and
fs
push
int3
push
orl
les
add
xchg
mov
sub
je
jno
push
lcall
lock
lret
push
sub
add
push
push
scas
inc
pop
pop
aam
pop
add
xchg
push
add
adc
and
xor
mov
ja
or
lods
sahf
jge
push
iret
push
or
sbb
fs
mov
adc
adc
scas
add
adc
xchg
jg
jl
cmp
sets
dec
call
rcrl
and
iret
push
into
loop
inc
fsubl
mov
unpckhps
cs
addr16
pop
dec
sarl
lock
adc
cs
das
inc
add
xchg
insb
adc
outsl
mov
pop
jmp
inc
sub
pop
xor
jg
mov
dec
mov
pusha
int3
add
jnp
jle
aam
pushl
inc
cmp
dec
jmp
insl
xchg
lods
sbb
sbb
pop
jbe
xchg
cli
adc
pop
nop
cli
or
cld
adc
stc
bound
stc
jne
out
out
push
push
outsb
mov
pusha
cmp
push
imulb
adc
nop
out
int3
inc
push
push
jle
pop
push
push
lods
push
insl
lcall
out
cmp
and
sbb
push
out
xchg
add
or
aad
pop
cld
fwait
jb
into
pop
push
add
cmpsl
rolb
int3
jp
std
or
aam
inc
adc
sub
push
push
mov
int
sahf
push
jno
and
ficoms
push
cwtl
in
xor
dec
push
call
add
sbb
adc
std
pop
test
daa
sub
dec
aaa
xor
cltd
mov
int
add
xor
iret
mov
popa
sub
nop
mov
adc
pop
int
jmp
ljmp
in
rorl
fisttps
xchg
cmpsb
or
mov
mov
jbe,pn
arpl
pop
sbb
jae
jg
inc
add
jle
xor
sti
leave
icebp
dec
les
pop
es
mov
dec
test
sbb
jbe
test
sub
xor
mov
dec
cwtl
xor
mov
xchg
mov
and
clc
fucomp
rorb
jle
mov
outsb
popa
dec
stos
jmp
sahf
sub
push
lret
aas
in
test
pop
cmpsl
hlt
add
out
add
movsl
mov
dec
push
es
pop
mov
jg
inc
in
sbb
clc
xor
adc
inc
cmp
adc
xor
sbb
push
movsl
dec
insb
incb
mov
int
and
adc
fwait
cs
repnz
adc
and
jmp
aas
popa
nop
and
shl
xchg
dec
add
inc
jno
mov
inc
mulb
cli
xchg
fwait
inc
cmp
push
pop
push
dec
jne
test
cld
loopne
cmp
fs
xor
pop
inc
scas
adc
lcall
pop
jle
out
and
inc
shlb
jle
es
sub
adc
jae
ja
jbe
dec
mov
fcompl
pop
stos
sub
aas
pop
call
mov
sti
and
in
mov
jle
cltd
fadds
xchg
inc
pop
mov
push
inc
out
push
arpl
stc
sub
outsb
popf
sub
ljmp
pop
xor
ror
in
xchg
jns
xor
rol
xchg
shll
inc
xchg
popf
xchg
inc
cmp
mov
fcoms
pop
adc
sar
push
inc
sarb
push
or
out
inc
insb
lcall
mov
pop
and
std
popl
mov
mov
inc
es
stos
mov
pop
jp
xchg
js
movsl
call
out
cmp
push
xor
out
mov
mov
pusha
in
pop
aad
addb
inc
int3
aaa
xchg
mov
add
aaa
and
or
ja
dec
or
gs
gs
fwait
clc
mul
outsl
out
xor
imul
inc
add
ds
es
jle
gs
cld
xor
push
enter
sbb
das
xor
ds
push
inc
nop
loop
mov
push
push
sbb
jp
mov
and
adc
add
bound
push
cmovns
mov
daa
nop
inc
fmull
fiaddl
push
and
dec
je
mov
and
pop
mov
rorb
cmpsb
cmp
xchg
mov
push
shl
push
cwtl
std
and
inc
scas
sub
cmpsb
imul
packsswb
enter
mov
xchg
mov
loope
insb
push
outsb
clc
shrb
inc
xchg
xlat
xchg
xchg
jb
rolb
out
cmpsb
cmp
and
aas
fs
jmp
cmpsb
adc
scas
sub
and
add
pop
in
aaa
lods
insl
mov
adc
jae
jnp
push
aam
mov
xchg
mov
out
or
cmpsb
clc
dec
sahf
mov
out
pop
or
inc
push
dec
outsb
lods
push
push
mov
jg
clc
test
mov
mov
ret
pop
mov
inc
add
pop
pop
clc
pop
adc
addr16
divl
add
mov
jle
adc
sub
mov
mov
or
push
jbe
pop
mov
fdivl
ljmp
push
add
std
cmp
stos
push
mov
inc
push
xchg
fwait
dec
pusha
adcl
dec
iret
lahf
fmuls
sub
and
mov
mov
sub
inc
or
or
dec
cli
lea
mov
lcall
pop
cmpsb
js
jmp
out
nop
ret
sbb
cmp
or
or
rcrb
fisubrs
ljmp
sbb
lock
cmpsl
mov
sbb
cmpsl
scas
mov
pop
push
mov
or
js
outsl
jbe
jmp
stos
nop
xchg
fdivr
adc
fnclex
rorl
mov
inc
cmpsb
shr
or
inc
out
pop
scas
pop
scas
outsb
dec
es
sbb
fisubs
enter
push
lea
inc
jo
outsb
push
adcl
mov
dec
into
mov
shlb
iret
sbb
jle
jp
jnp
out
or
add
insl
pop
int3
sbb
fcomip
cli
adc
popa
out
add
incl
clc
dec
in
in
adc
xchg
cwtl
mov
push
jmp
incb
fcompl
into
and
sbb
gs
data16
cmp
je
sahf
mov
adc
push
imul
clc
insb
add
adc
mov
hlt
jg
jle
insl
dec
sbb
sub
xchg
ficomps
add
mov
push
push
test
inc
outsb
insl
push
aaa
or
adc
xor
jle
sub
add
push
out
mov
das
push
scas
scas
add
pop
sar
xor
scas
xchg
sti
inc
mov
cld
lea
fcoms
lret
movsb
hlt
fwait
dec
jle
lea
pop
in
shrl
mov
jecxz
hlt
jbe
sbb
lret
fcoml
in
dec
mov
cmpsb
pushf
testb
aaa
incl
lods
stos
mov
into
jecxz
add
xor
enter
jne
push
adc
adc
stos
xchg
mov
sbb
mov
cmpsl
jle
rcll
add
push
out
loope
sbb
in
negb
clc
js
adc
in
into
push
sahf
add
add
loope
mov
repnz
sbb
xchg
push
fidivs
iret
jmp
pop
or
addr16
inc
or
sbb
fisttpll
cmpsb
xchg
outsb
movsb
inc
jae,pn
fwait
int3
push
out
pop
out
or
adc
jno
push
js
dec
jp
dec
test
add
mov
mov
fbstp
dec
adc
test
mov
add
clc
inc
pusha
or
incl
test
or
push
ret
xchg
mov
pop
sub
fistpll
xchg
inc
or
cli
clc
sub
push
scas
cmp
dec
aad
adc
push
xor
adc
or
scas
rcl
imull
inc
jbe
pop
ret
ljmp
and
push
dec
jle
adc
push
or
test
pop
cwtl
fldt
addr16
mov
mov
or
out
xor
inc
lods
xor
push
pop
and
mov
mov
inc
add
dec
addr16
gs
dec
jmp
rcrb
push
push
aas
je
mov
nop
pop
adc
xor
aad
cmc
push
push
jmp
xor
pop
push
push
outsb
push
mov
cs
sub
fdivl
ss
jg
jae
sbb
nop
scas
out
es
inc
push
xchg
inc
adc
mov
nop
ficoms
jmp
add
ja
vunpckhps
movsb
mov
loope
add
add
je
xchg
jle
outsb
push
mul
dec
sahf
push
sahf
xor
movsl
shll
mov
jno
call
imul
jmp
test
test
push
movb
mov
shlb
and
push
arpl
cmpsb
inc
mov
dec
into
adc
xchg
cmpsl
pop
shlb
jl
imul
xchg
add
lock
push
ja
pop
je
je
or
into
jnp
or
jge
outsl
push
inc
push
cs
aas
inc
pop
pop
insb
push
xchg
sub
ds
call
fldl
arpl
mov
jb
scas
adc
inc
aaa
lcall
and
fs
adc
mov
addl
inc
dec
jp
andb
adc
pop
inc
aaa
mov
mov
push
mov
dec
sahf
das
adc
scas
fs
jns
pop
push
test
push
or
lock
jp
add
or
mov
testb
fistps
scas
push
add
cmc
mov
test
out
xor
adc
cmpsb
enter
shlb
lods
dec
mov
cmp
adc
adc
add
dec
pop
push
inc
fadds
negl
mov
jbe
adc
imul
mov
cld
inc
fdivs
sbb
aaa
sti
mov
into
push
mov
cmp
and
sbb
in
xchg
imul
imul
popf
push
fidivs
add
push
cmpsb
xchg
iret
jbe
cmpsb
subl
or
add
inc
adc
push
inc
ss
inc
xor
and
ds
mov
xchg
inc
loopne
icebp
dec
dec
fdivl
dec
stos
xlat
xchg
jg
data16
or
sub
inc
fisubrl
cmp
add
xchg
push
xor
ds
cmpsl
inc
xlat
push
fsubr
repz
or
adc
sbb
ret
inc
das
push
clc
dec
sbb
xchg
jnp
jne
xor
add
sahf
in
dec
in
pop
pop
and
repnz
dec
adc
imul
or
sub
pop
test
dec
pop
pop
fadds
mov
outsb
es
cmp
enter
mov
loopne
std
mov
adc
ds
push
mov
adc
pop
mov
mov
rcll
mov
inc
out
ficomps
push
mov
cmp
addr16
mov
and
clc
ljmp
int
dec
fsubrl
sub
and
cwtl
xor
push
sbb
shr
mov
out
mov
push
loop
push
hlt
imul
push
push
and
hlt
outsb
jle
or
inc
lcall
pop
push
sti
push
jbe
or
int3
adc
std
out
fs
jne
rol
adc
xlat
xchg
push
xor
popf
cmpsl
pop
scas
cs
or
stos
inc
insb
dec
lea
inc
ficoml
ret
dec
push
insb
inc
outsb
repz
cs
mov
sbb
mov
dec
loopne
lods
jne
in
popf
mov
loopne
push
out
jle
push
xor
stos
xchg
jo
testb
inc
out
sub
jecxz
pop
out
jle,pn
ret
dec
into
pop
sub
test
sbb
outsb
dec
sbb
ret
add
or
out
addr16
or
loope
inc
cmpsl
jg
pop
sbb
frstor
add
pushl
icebp
rcll
adc
push
add
test
and
in
jnp
pop
cmp
add
inc
outsl
test
jo
jg
ss
cs
ret
ss
mov
mov
inc
pop
push
or
ds
pusha
jl
or
add
pop
ds
pop
mov
mov
lcall
iret
jbe
push
mov
and
push
xor
add
xor
jg
pop
mov
cmp
dec
add
push
cmpsb
adc
cmp
ficoml
ja
xchg
mov
sub
sub
inc
inc
into
arpl
out
and
neg
add
cmpsl
fiadds
das
sbb
pop
inc
sbb
push
rolb
les
data16
dec
xchg
lock
das
ss
dec
fwait
sub
mov
push
push
add
adc
addl
cs
jmp
das
insl
adc
xchg
inc
jb
into
add
or
xchg
divb
fisubs
test
push
push
sbb
outsl
scas
fimull
or
loop
xchg
adc
adc
jecxz
fdivr
add
inc
ss
adc
jmp
std
or
aad
dec
push
int3
push
inc
inc
mov
pop
lods
add
jecxz
dec
jmp
aas
cmpsl
jo
sub
nop
jp
cwtl
and
push
clc
dec
xor
mov
and
push
daa
cmc
xchg
and
dec
sbb
mov
flds
cmp
inc
sbb
imul
jbe
mov
cwtl
xchg
mov
push
mov
ret
sahf
ret
popf
pop
in
mov
dec
jmp
in
fnsave
out
cmp
scas
mov
dec
ficoms
fs
addb
and
add
or
cs
icebp
sbb
mov
out
mov
cwtl
cld
out
imul
jae
loopne
dec
adc
add
jg
dec
fsubrl
fstl
ss
ljmp
idivl
shll
movsb
repnz
ror
inc
call
xchg
sbb
int
and
jg
mov
sub
add
pop
or
loopne
push
cmp
leave
ja
aad
adc
add
dec
addr16
xor
mov
pop
mov
lcall
and
iret
push
sti
scas
adc
pop
mov
outsl
mov
inc
push
cmp
pop
jle
xor
dec
or
loop
or
dec
aam
mov
jbe
adc
jns
mov
rol
add
cmpsb
dec
mov
fwait
outsl
mov
imul
adc
testb
or
sub
add
adc
xlat
push
add
cs
das
call
sti
or
lods
push
adc
decl
pop
dec
jns
clc
in
push
cld
arpl
add
push
or
bound
stos
dec
sar
cli
sub
mov
dec
outsb
clc
jns
out
mov
into
cmpsl
xchg
adc
sbb
stos
sub
jbe
pop
jns
stos
inc
fdiv
push
rcrb
lock
xor
dec
mov
mov
scas
push
or
std
push
or
hlt
push
hlt
pop
jbe
cmpsb
push
aas
aas
sahf
sbb
pop
push
fistl
outsl
into
pop
repnz
push
sub
ds
cmpsb
popa
aaa
xor
cmp
test
xchg
push
push
pop
adc
jle
popf
fs
fstps
sti
cmpsb
inc
and
push
xchg
cmpsb
push
pop
mov
jae
ficoml
xor
adc
jbe
test
mov
inc
or
aad
mov
pop
scas
jecxz
xor
mulb
pop
enter
das
lods
mov
mov
dec
jle
sbb
sbb
and
push
mov
inc
adc
std
adc
inc
dec
enter
rcrl
rorb
and
inc
xchg
adc
mov
or
push
inc
aam
sub
ds
adc
scas
xchg
outsb
cmpsl
incl
and
cmpsb
lcall
cmp
jbe
dec
sbb
add
mov
xor
out
sbb
add
in
add
push
out
and
pushw
test
mov
data16
xor
mov
or
into
sbb
in
sbb
fwait
dec
insb
daa
cmpsb
mov
imul
sti
les
pop
das
sbb
pop
add
xchg
mov
imul
outsl
push
rolb
sbb
scas
push
daa
adc
push
or
addr16
jns
pushf
or
das
jl
inc
push
dec
pop
lret
scas
inc
push
and
or
ljmp
shr
adc
xlat
cmpsl
and
add
mov
pop
iret
push
es
lods
cs
xchg
mov
dec
adcb
mov
add
lock
out
xchg
rol
cs
cmp
or
outsb
push
fisttps
into
scas
push
xor
bound
push
es
push
cmpsb
push
adc
inc
in
mov
and
add
je
jg
add
xchg
or
sbbb
jae
pop
xor
and
stos
data16
lcall
sub
mov
add
insb
mov
add
test
mov
pop
add
pop
cs
mov
adc
incb
dec
call
arpl
cltd
ret
das
aaa
mov
lret
pop
mov
or
int
rep
frstor
or
mov
pop
pop
ds
pusha
ljmp
aad
sbb
xlat
sub
sub
aam
fisubs
sub
cmp
pop
insl
or
lock
push
inc
inc
sbb
inc
fcomip
out
add
out
sub
xor
mov
stos
push
out
inc
popl
push
ret
in
sub
cmpsb
adc
mov
pop
jo
pop
add
dec
pop
inc
comiss
ds
adc
dec
outsb
sub
dec
adc
outsb
fcmovnb
mov
inc
mov
inc
jecxz
xlat
add
orl
push
sub
xchg
xchg
bound
inc
add
scas
scas
cld
or
arpl
push
lcall
incl
xchg
push
push
lods
sbb
das
cmp
je
out
fs
inc
xlat
into
ds
xor
cmpsb
dec
jne
sub
sar
dec
push
and
xlat
iret
and
adc
push
mov
mov
lcall
adc
jnp
enter
jnp
push
inc
ds
lret
ja
decb
push
add
pop
fstpl
or
int
ds
and
push
or
cwtl
mov
enter
not
sbb
into
push
jle
xchg
mov
idiv
dec
push
jo
mov
push
push
call
ja
lahf
and
shrb
loope
lea
fldt
or
xchg
fwait
pushf
mov
fwait
cmpsb
push
aas
outsl
pop
mov
shll
daa
bound
in
fistpll
xchg
xchg
add
cmp
clc
mov
cmpsb
sahf
shlb
and
pop
sahf
iret
in
dec
or
repz
sbb
scas
outsl
mov
stos
ret
mov
mov
aad
xor
test
push
subb
sahf
add
and
sub
mov
aad
sbb
out
fnstsw
das
and
inc
in
sahf
mov
pop
lods
movd
daa
scas
addr16
adc
sbb
int3
mov
fbld
in
inc
pop
mov
enter
stos
jp
and
push
pop
adc
addb
cmpsb
ljmp
out
outsb
pop
xchg
xor
add
cmp
jl
fistps
rolb
dec
rolb
test
cs
out
loopne
popa
sbb
dec
mov
dec
sbb
sub
add
sbb
imulb
push
push
mov
ljmp
sahf
pop
pusha
jecxz
push
dec
adc
cmpsl
inc
xchg
dec
cs
xor
ret
lea
sub
and
push
fistl
add
mov
lret
addb
mov
inc
inc
inc
std
popa
clc
dec
pop
xchg
push
out
popf
pop
hlt
call
sarb
or
nop
sbb
xchg
jmp
aaa
sbb
mov
sbb
imulb
or
push
nop
test
cmp
fsubrs
mov
outsl
addr16
sub
and
and
scas
fimuls
call
xchg
and
jne
push
arpl
divb
or
inc
mov
out
xor
pop
lods
fisubrs
push
aas
push
dec
stos
or
cmp
divb
cmp
iret
pop
jbe
cmp
data16
mov
push
push
rclb
jbe
and
inc
data16
xchg
lock
push
scas
pop
mov
enter
mov
mov
sub
dec
push
sbb
sbb
mov
cld
nop
clc
adc
test
xor
sti
cwtl
mov
push
push
pop
mov
mov
mov
sti
mulb
sub
lea
sub
jmp
cs
push
pop
lahf
roll
mov
scas
aaa
jg
or
and
test
and
push
fldl
aam
insb
ds
scas
push
into
nop
fcoml
adc
inc
mov
add
sahf
or
es
jg
dec
jmp
scas
push
popa
mov
daa
scas
xor
fldl
inc
fcompl
push
out
dec
pushl
pop
add
in
push
inc
fwait
ret
xor
mul
or
jle
pop
popf
inc
push
adc
je
sub
je
outsb
adc
push
ss
push
pop
mov
pop
enter
ret
push
out
cmpsl
cltd
out
jne
push
dec
inc
add
pop
cltd
fstl
dec
push
decb
sub
ss
outsb
popf
sbb
sub
push
inc
sub
pop
jmp
and
sub
inc
imul
jecxz
push
mov
mov
add
or
add
xor
ja
sahf
clc
inc
add
dec
inc
js
jg
inc
loop
test
aam
inc
push
jbe
jp
adc
lods
and
adc
add
or
xor
insb
xor
xchg
scas
pop
es
cmpsb
mov
popa
xchg
inc
pop
sti
inc
lds
mov
add
and
inc
mov
jle
mov
mov
jmp
enter
sbb
dec
jmp
jmp
add
movsl
rolb
test
pop
sub
test
xor
outsb
lea
icebp
sbb
int3
ja
xchg
dec
aam
mull
enter
push
mov
gs
data16
negl
enter
dec
xchg
add
repz
push
popf
jo
and
fdivrp
into
xor
dec
in
popa
mov
and
scas
pop
sbbb
test
cmpsb
sti
testb
adc
fnsave
stos
push
inc
jg
mov
movsl
push
loop
inc
mov
mov
outsb
adc
mov
pop
sub
lods
cmp
mov
stos
add
js
data16
xor
arpl
push
scas
add
jg
fiadds
jne
lods
inc
data16
dec
dec
dec
jle
sar
call
insl
pop
out
xchg
dec
ss
popa
sbb
cmp
push
cwtl
cmp
push
ja
ss
inc
xor
mov
notl
add
push
dec
cld
xor
sbb
push
ss
adc
mov
adc
xor
jb
push
fdivrs
int
pop
mov
adc
inc
lea
cmpsb
sub
orl
adc
push
add
inc
or
pusha
and
pop
xor
decl
push
ss
add
fidivl
mov
addr16
mov
test
inc
es
mov
inc
out
jns
mov
dec
mov
lods
or
out
inc
mov
call
sbb
outsb
jle
adc
cmp
push
or
test
inc
out
mov
pop
mov
xchg
ud2
orb
outsb
or
cli
das
stos
mov
popa
cmpl
sbb
popa
in
iret
inc
jecxz
pop
sahf
sub
xchg
in
daa
lea
mov
push
sbb
loope
dec
jae
fstps
mov
lds
scas
fisubrl
jno
scas
jnp
push
push
rolb
push
jnp
mov
pop
jns
add
dec
neg
xor
dec
push
scas
jnp
cmp
outsl
sahf
mov
xchg
bound
fildll
cwtl
push
xchg
jns
jecxz
fadd
mov
adc
ss
sub
int3
imul
mov
xchg
push
nop
loope
maxps
rorb
ss
es
cmpsb
aaa
ljmp
in
and
inc
xor
mov
push
idiv
pop
and
push
test
jo
clc
push
cmpsl
scas
ss
cmp
pop
add
into
es
pusha
push
loopne
jecxz
es
scas
sti
or
divb
scas
lods
mov
lock
xchg
out
inc
pop
cmpsl
mov
sbb
stos
dec
test
or
outsl
shrb
dec
ljmp
mov
or
out
int
out
jecxz
dec
cmovne
arpl
out
hlt
lret
xchg
mov
xchg
out
sub
mov
test
xchg
pop
push
add
mov
pop
sub
outsb
fiadds
or
and
xchg
sahf
not
into
fcmovnu
lret
imul
inc
cmpsb
pop
xchg
push
or
es
mov
jnp
rcrb
xchg
fwait
push
inc
aaa
jbe
shufps
cmp
or
or
mov
push
cwtl
js
sbb
xchg
ss
pop
sbb
jns
movsb
ss
out
scas
mov
xchg
int3
pop
sbb
ss
cs
push
xchg
loopne
lock
jns
push
in
mov
cld
lea
out
push
add
mov
testl
mov
inc
aaa
jns
orl
into
inc
adc
add
inc
xor
push
sbb
sub
negl
and
jle
gs
test
cltd
xchg
xchg
cwtl
jo
adcb
mov
mov
outsb
jae
lcall
int
sahf
add
clc
push
dec
sbb
xchg
je
fucom
out
loope
inc
mov
pop
push
sbb
cwtl
push
and
mov
mov
es
lea
jne
sub
cmp
push
pop
add
jns
arpl
mov
sbb
add
inc
jecxz
in
pop
pop
mov
outsl
dec
fmull
cwtl
cli
ljmp
xchg
inc
push
ds
adc
das
adc
mov
pop
es
add
sbb
pop
aad
outsb
incb
or
popa
pop
lea
aad
push
call
inc
testb
adc
xchg
or
out
sbb
add
cmp
nop
int3
push
into
fsubl
push
sar
pop
sbb
mov
es
cld
and
mov
or
add
test
push
dec
dec
dec
add
push
push
iret
ret
xlat
gs
incl
add
sahf
popa
xchg
mov
pop
mov
add
inc
xor
mov
cmpsl
enter
mov
je
jne
xchg
nop
mov
dec
sub
ljmp
push
pop
jmp
out
pop
dec
mov
inc
pop
and
ret
loope
push
push
add
sti
movsb
pop
iret
dec
loop
mov
jl
in
es
fldt
sub
outsl
ljmp
lcall
sbb
xchg
cmp
pushl
sub
mov
scas
aad
xchg
xchg
add
ret
rcrb
push
orl
inc
dec
lds
int3
dec
cltd
mov
out
sbb
jmp
dec
into
adc
sti
mov
out
sbb
test
adc
mov
aad
in
xchg
mov
add
adc
addl
mov
dec
push
jnp
cs
inc
push
sar
pop
dec
push
push
jb
pop
push
adc
test
xchg
in
scas
xor
ds
js
or
cwtl
pop
pop
dec
loop
rorl
cmp
jns
push
mov
es
jmp
add
sbb
iret
cmp
dec
scas
jmp
inc
sahf
iret
adc
dec
loop
mov
iret
pop
jb
xchg
sti
xchg
repnz
xor
or
es
cmpsl
xorb
or
or
cmp
or
pop
out
adc
sbb
inc
popf
pop
and
jle
insl
xchg
jle
push
lcall
xchg
and
mov
ja
mov
push
cmp
clc
lods
dec
nop
into
dec
dec
int3
push
ret
or
scas
sbb
aam
outsb
ja
fs
xchg
ss
outsb
movsb
xor
push
xchg
std
or
push
xchg
fcompl
out
ror
inc
ret
mov
not
cmpsl
in
incb
stos
aaa
movsb
mov
scas
mov
push
test
jb
xlat
das
ret
sahf
xor
shll
mov
insb
scas
pop
cwtl
push
das
fdivs
or
adc
push
cmp
inc
popa
push
or
xchg
outsl
xchg
int3
xorb
lahf
dec
push
test
pop
push
mov
pop
fidivrl
lret
lock
jl
outsb
push
and
dec
ljmp
mov
push
jnp
and
xor
outsb
test
lds
fcomip
push
xchg
pop
mov
cmpsl
in
or
aad
jmp
std
int3
sbb
addr16
inc
dec
movsb
sub
add
sub
push
add
sbb
outsl
push
out
enter
or
mov
sub
in
mov
iret
push
pop
adc
sti
pusha
cli
add
inc
sub
pop
sbb
addr16
ficomps
nop
add
push
pop
dec
xor
pop
fbld
rcrl
fisubrl
mov
and
lods
call
cltd
and
addr16
cmp
sub
ljmp
outsb
sub
dec
addr16
dec
and
push
jmp
jae
sbbl
mov
scas
xor
in
iret
push
sbb
je
sbb
pop
sbb
scas
stos
andb
arpl
xor
aam
outsl
jle
push
loop
shr
push
lods
clc
test
cmp
clc
add
int3
sub
inc
inc
aad
aaa
push
inc
inc
int3
lods
loopne
addr16
or
jbe
sbb
icebp
and
sbb
out
in
inc
stos
imul
jmp
pop
xchg
mov
add
dec
shld
jmp
aad
xor
cmovle
jmp
add
clc
ficoml
push
jo
cmpsb
clc
lcall
dec
sahf
sub
fisubs
sahf
sbb
data16
push
rorl
sbb
outsb
nop
cltd
jle
addb
or
notl
jg
lcall
outsl
cmp
mov
inc
cmp
ret
xor
incb
sub
add
xchg
aam
xchg
fldt
nop
loope
push
mov
aad
push
push
mov
lods
nop
mov
push
fstpt
divb
incl
int3
arpl
test
rorb
pop
add
js
scas
sti
outsl
push
outsb
aad
pop
add
mov
shlb
push
cld
xchg
and
inc
data16
push
inc
push
fdivrp
nop
mov
nop
test
jle
movsl
and
addb
xchg
int
mov
adc
sahf
nop
push
mov
push
inc
aaa
sti
cli
testb
mov
mov
and
negb
test
movsb
sub
xchg
out
and
outsl
jns
ja
mov
out
fistpl
add
notb
js
aad
mov
fidivl
sar
lea
cmpsb
je
lock
clc
movsl
es
cwtl
add
aaa
icebp
pop
or
push
imul
notb
and
dec
sbb
fs
pop
mov
test
push
push
pop
mov
push
sahf
fistps
fwait
jp
jbe
dec
push
push
sub
adc
xchg
mov
cmp
scas
inc
mov
push
cwtl
in
addr16
scas
sub
hlt
fwait
lods
mov
adc
cmp
call
pop
or
outsb
jl
je
je
xchg
rol
lods
out
sub
and
cmp
into
movb
jg
es
inc
push
subl
add
call
mov
fistl
psadbw
das
dec
clc
fst
xchg
ds
push
push
add
pop
fcmovnbe
xchg
sub
aaa
jg
push
incb
jbe
inc
add
pop
aaa
rcl
pop
pop
push
xor
sub
pop
pop
inc
imul
add
subb
jmp
cmc
lret
ds
fdivl
xchg
jae
mov
mov
xor
sbb
push
movsb
scas
sub
jnp
xchg
cli
dec
lea
mov
sar
or
into
out
decl
in
sub
mov
cmp
and
in
inc
pop
mov
cmp
xchg
xchg
mov
mov
addr16
sbb
cmp
jecxz
mov
int
push
inc
or
call
dec
mov
int
out
out
cmpsl
pop
adcl
lods
ret
inc
xchg
jg
pop
xchg
stos
rcrb
xor
pop
add
bound
in
push
pop
push
jbe
jb
testl
add
outsb
lcall
push
xchg
xor
ds
lcall
pop
pop
pop
mov
out
or
sub
inc
das
sub
pushw
add
scas
inc
gs
mov
aam
test
mov
pushl
inc
or
scas
push
pop
cmp
scas
sbb
adc
jmp
or
outsb
sbb
add
iret
cmpsb
rolb
testb
rclb
sbb
cmp
push
add
daa
pop
xchg
ret
mov
mov
and
or
jns
push
push
push
jl
js
jg
jle
dec
push
addr16
and
and
push
adc
fcmovnb
add
push
jnp
cs
and
inc
dec
and
dec
rcr
ss
add
push
push
push
cmpsl
rolb
clc
not
cs
outsl
add
pop
inc
xor
or
adc
or
in
push
nop
mov
sahf
mov
orb
push
and
xor
xchg
incb
test
rcl
add
aad
pop
pop
sbb
jmp
call
loop
mov
sub
push
jns
subb
adc
add
adc
pusha
push
xchg
inc
cmpsb
mov
mov
addr16
push
jne
sbb
out
adcb
addr16
nop
pop
inc
inc
addr16
sbb
test
lahf
jmp
sarb
push
sub
xchg
cmpsl
cmpsb
shll
adc
gs
nop
loopne
test
mov
lcall
por
pop
push
cwtl
mov
sub
adc
outsl
setae
pop
cmp
loop
inc
and
rclb
dec
add
add
cltd
popa
movsl
aad
adc
lods
inc
shl
lret
push
data16
or
push
data16
lods
or
jmp
sub
adc
outsb
movsb
sahf
and
mov
push
mov
aaa
dec
add
pop
sahf
inc
adc
pop
outsl
sub
jle
add
adc
sahf
int3
sbb
push
popl
mov
mov
call
ret
pop
or
movsb
ds
pusha
mov
xor
scas
push
cmp
and
adc
cmpsb
jp
testl
jae
xchg
sbb
data16
fdivrl
addl
mov
sti
inc
mov
mov
dec
jmp
cwtl
jne
pop
mov
jbe
mov
inc
das
lock
pop
push
sti
ds
pop
push
inc
add
inc
call
ret
xchg
fisubrl
mov
inc
inc
pusha
imul
test
inc
mov
cwtl
cmp
xchg
xchg
insl
mov
sbb
add
dec
push
cmp
sbb
adc
scas
out
call
addl
xchg
cs
adc
inc
aad
mov
pop
inc
inc
cmpsl
sub
inc
bound
xor
pop
ds
ficomps
inc
stos
mov
push
jnp
mov
nop
clc
jne
fistl
int3
jg
push
pop
bswap
daa
movsl
pop
incl
int
mov
in
lcall
test
xchg
dec
adc
add
fbstp
clc
stos
xchg
adc
inc
push
jle
mov
cld
imull
test
test
mov
jmp
dec
clc
cmpsb
pusha
fsubrl
push
push
add
push
push
cmpsb
lcall
jae
movsb
scas
dec
imul
shrb
mov
jl
lahf
dec
cs
in
sahf
out
and
xchg
adc
lods
aam
ret
out
aas
insl
pop
mov
outsl
hlt
xorb
fisttpll
or
add
arpl
pop
loope
jno
das
xor
add
sti
orb
mov
push
lock
sub
popf
or
or
mov
adc
jle
scas
ljmp
mov
clc
nop
int3
nop
ds
cmp
adc
movsb
xchg
ljmp
cmp
and
jnp
push
scas
roll
gs
decb
loope
sahf
dec
adc
sbb
inc
jmp
adc
push
pop
push
add
mov
inc
push
mov
inc
jbe
decl
inc
mov
xor
mov
lcall
or
int
add
mov
sti
xchg
mov
sarl
or
jae
inc
inc
push
mov
add
sub
pusha
push
inc
test
inc
xchg
ss
pop
xor
adc
out
scas
sbbl
lea
aas
mov
sbb
mov
mov
add
pop
push
push
adc
xchg
sti
jle
xor
and
mov
pop
xchg
add
push
dec
inc
or
iret
divb
push
adc
add
add
jle
mov
xchg
jmp
xor
or
insb
cmp
jb
xchg
std
test
dec
lcall
push
add
xor
adc
decb
das
into
in
cmp
data16
mov
nop
enter
sbb
mov
xchg
inc
inc
jo
cmp
daa
sbb
movsl
push
mov
xor
inc
add
data16
mov
xor
and
addr16
dec
jg
add
int3
adc
jae
xor
xor
hlt
pop
xor
xor
xchg
add
push
jecxz
sub
push
lahf
pop
and
pop
sahf
sub
pop
gs
das
xchg
or
js
daa
xchg
sbb
iret
outsl
jnp
shlb
push
sbb
mov
dec
ret
lret
ds
jns
sub
cmp
imulb
rcl
mov
hlt
add
inc
xchg
mov
mov
adc
cwtl
adc
fldl
lahf
push
inc
cmpsb
pop
sbbb
sub
imul
aad
sahf
rorl
jbe
xchg
mov
adc
or
das
push
aad
call
das
out
add
ret
jb
call
cwtl
sub
jp
rorl
jnp
pushf
pushw
addr16
or
out
push
pop
pop
xchg
hlt
bound
sbb
lcall
push
daa
xor
push
cmp
sahf
stos
cmpsb
xchg
je
dec
sub
jle
dec
and
aas
push
jns
dec
outsb
inc
inc
cmpsb
pop
inc
dec
dec
femms
gs
aam
cmp
push
inc
scas
scas
jnp,pn
mov
mov
fimuls
lcall
outsb
mov
jge
xchg
int3
mov
xchg
and
xchg
pop
fbstp
jle
mov
ret
sub
inc
and
sbb
addr16
push
scas
pusha
inc
stos
inc
push
mov
xor
mov
ss
imul
push
fiaddl
sti
insb
cs
push
xor
pop
rcr
mov
push
into
outsb
jnp
add
and
fsubl
mov
pusha
mov
mov
scas
push
aam
xor
add
or
xlat
dec
pop
mov
add
scas
and
sbb
push
sbb
lock
inc
es
dec
ss
push
andb
push
dec
dec
movsb
sub
and
cmp
mov
nop
fnstsw
sbb
nop
cmp
dec
xchg
ja
mov
pop
jbe
ja
and
inc
scas
ss
push
jns
lcall
sbb
adc
add
inc
jae
dec
adc
dec
setbe
mov
iret
cmpsb
into
dec
out
push
inc
sub
xchg
xchg
cmp
mov
out
jbe
pop
nop
push
jbe
jnp
and
mov
roll
xchg
inc
nop
cmp
cmpsb
jle
add
xchg
sti
cmpb
aaa
das
add
test
mov
xchg
mov
jg
fwait
or
pop
call
inc
push
movsb
sub
aad
testb
inc
hlt
xchg
push
mov
sub
das
test
mull
pop
jg
dec
xor
fiadds
call
ljmp
enter
pusha
and
xchg
sarb
xlat
push
out
push
sub
int
push
das
adc
add
pop
add
cld
push
addr16
xchg
punpckhdq
aas
jb
xchg
rolb
or
pop
sahf
mov
add
dec
fs
inc
xor
cs
pushl
scas
rclb
mov
sbb
add
push
jp
jmp
add
sahf
lret
ret
scas
and
inc
ss
pop
xchg
inc
mov
add
pop
inc
xchg
sub
std
aad
mov
aas
aas
rcrb
cmp
mov
jae
pop
inc
sbb
std
cmpsb
push
cmovb
xchg
push
scas
das
pop
and
jmp
dec
inc
into
add
sub
jle
xchg
cmc
xor
cmpsb
xchg
stos
push
arpl
ret
sbbb
push
sti
adc
inc
cld
xchg
pop
or
shlb
arpl
sbb
jbe
lcall
xchg
push
lods
or
add
adc
popf
ja
roll
ja
adc
inc
sbb
mov
xchg
push
pop
daa
loopne
ja
fists
insb
stos
dec
mov
scas
push
lods
inc
and
mov
mov
inc
enter
cmp
dec
cmpsl
loope
data16
xor
and
dec
scas
pop
aas
adc
mov
ljmp
stos
movsb
mov
je
jg
xchg
xor
xchg
rcrb
out
daa
cmc
xor
jo
dec
mov
mov
and
popaw
mov
push
cmp
mov
pop
sub
xchg
into
mov
pop
lods
stos
ljmp
mov
or
inc
test
ss
add
jne
jbe
addr16
notb
push
addr16
push
sbb
adc
scas
jg
repz
pop
or
lods
dec
out
pop
cs
orb
into
add
imul
arpl
ds
divb
mov
inc
cmp
add
fidivl
dec
cld
dec
xchg
jae
xchg
sub
push
adc
mov
push
adc
pop
aas
js
cwtl
cmp
push
mov
push
pop
mov
push
pop
movsb
adc
psubb
lea
mull
pop
nop
call
and
addr16
daa
sti
adc
rcl
mov
fldt
call
dec
mov
test
jns
push
lods
and
inc
inc
mov
fs
mov
dec
inc
packuswb
and
adc
xor
pop
sbb
sbb
aad
mov
add
jmp
rcrl
xor
jno
in
dec
inc
jno
pop
lock
lcallw
jo
outsb
sbbb
rclb
dec
in
mov
add
mov
xchg
adc
cmp
sub
inc
sub
sbb
or
or
sbb
jbe
cmpsb
mov
clc
cmpb
adc
lcall
pop
add
add
movsb
imul
data16
mov
cmpsb
shll
insb
ficoms
mov
nop
push
push
push
jb
inc
ficoms
sahf
in
pop
leave
inc
pusha
inc
pushw
sti
sti
mov
xor
push
repz
mov
mov
cmp
xchg
push
or
mulb
fisubrs
icebp
idiv
and
jecxz
or
and
xchg
push
and
mov
pop
push
cltd
out
xchg
or
dec
lcall
es
mov
xsha256
cmpsb
adc
pop
clc
sti
sbb
outsb
mov
push
adc
arpl
pop
sbb
pop
fnop
dec
and
pop
cs
cld
fistpll
push
xor
pop
jmp
push
or
inc
es
bound
add
outsb
adc
push
push
scas
push
adc
loop
or
out
xchg
jp
xor
sub
popfw
push
cmp
nop
fidivs
push
fisubs
data16
rorl
fstl
push
sti
inc
fadds
push
or
lahf
inc
mov
cmp
push
adc
scas
xchg
test
ja
sti
push
push
push
add
inc
inc
mov
sbb
cmpsb
add
push
cmp
decl
sbb
add
and
pop
imul
pop
xor
enter
pop
pop
nop
dec
mov
or
es
adc
push
adc
mov
cwtl
dec
insl
inc
cltd
mov
pop
loopne
sbb
das
mulb
push
xor
fwait
jle
notb
push
or
fstpt
add
shrb
jne
inc
pop
jae
ss
adc
scas
adc
or
in
pop
and
pop
pop
push
orl
mov
lods
cwtl
in
push
clc
or
push
pop
adc
add
outsl
push
sahf
dec
jge
adc
inc
pop
in
ja
fcmovne
lea
addr16
xlat
test
test
ficoms
lcall
aas
aaa
sub
mov
cltd
push
mov
mov
push
outsb
dec
test
push
xor
in
xchg
cs
xor
xchg
mov
iret
pop
mov
lods
push
orb
test
rolb
add
into
cltd
adc
and
lods
mov
xchg
jmp
scas
jo
sbb
cmpsl
mov
lcall
outsb
push
add
adc
xchg
push
pop
cmc
aaa
adc
cmp
push
popw
popfw
pop
pop
xchg
sub
push
add
outsb
scas
jmp
dec
out
cld
sbb
push
push
inc
sahf
push
push
mov
cmpsb
pop
pop
nop
gs
mov
lods
push
inc
into
jl
push
or
mov
jecxz
cs
xchg
outsl
jp
mov
ds
inc
mov
icebp
mov
cmpsb
aam
push
jecxz
jne
int3
test
jmp
out
push
push
adc
adc
mov
inc
push
pop
xchg
mov
and
mov
mov
jbe
adc
sub
adc
add
aam
and
push
inc
insl
add
pop
pop
add
das
and
fiaddl
roll
or
repnz
sbb
dec
shlb
sarb
adc
push
aad
and
bound
pop
and
mov
les
orl
out
test
xor
aaa
jbe
sub
push
cld
lret
pop
pop
iret
sbb
pop
adc
rclb
out
lock
push
cmpl
inc
dec
fimuls
inc
push
xor
sti
aad
loop
inc
clc
idivl
sarb
imul
push
jle
cwtl
xchg
out
andb
pop
inc
or
cmp
ficoms
addl
inc
out
cld
or
out
aaa
je
lahf
shlb
jo
lods
iret
subl
mov
pusha
js
or
inc
aam
and
adc
xor
jbe
scas
dec
scas
sbb
fdiv
cmp
xor
xchg
pop
rcll
push
sbb
and
push
mov
out
bswap
iret
dec
push
cwtl
or
ss
add
push
xor
and
lret
lcall
adc
xchg
jp
push
xor
outsl
adc
lods
pop
fmulp
call
fmulp
scas
dec
loop
inc
and
pop
adc
add
push
mov
aad
inc
xchg
test
je
xchg
idivb
pop
into
mov
mov
inc
lcall
sbb
repz
dec
pop
xchg
sub
rcl
mov
pop
jno
xchg
out
inc
scas
jl
loope
jle
inc
out
cwtl
jno
lods
int3
push
xchg
mov
add
jne
xor
adc
push
pop
add
push
das
pop
aaa
sti
jecxz
pop
lods
inc
sbb
xor
jne
jns
cmp
iretw
pop
push
add
mov
ficomps
push
aam
mov
inc
push
push
adc
lahf
or
out
sahf
or
push
addr16
add
out
add
mov
data16
pusha
call
ror
iret
inc
in
mov
test
adc
fisttpl
fs
push
mov
outsb
cmp
pop
rclb
cmpsb
mov
std
xchg
out
in
push
xor
incl
sbb
pop
jne
adc
xor
mov
je
jmp
adc
fistpll
ljmp
inc
push
lock
jle
add
cld
int
lock
adc
in
aad
pusha
or
pop
ss
lcall
outsb
in
push
xchg
imul
pop
adc
daa
data16
lods
test
push
mov
mov
aaa
es
ss
lods
jb
cld
mov
and
push
sahf
es
sbb
lods
pushl
push
pop
xor
sub
xchg
ret
call
and
scas
mov
movsl
inc
mov
mov
push
push
mov
nop
clc
and
enter
lods
add
push
adc
out
adc
and
jnp
addr16
and
inc
scas
pop
sbb
imul
jge
or
cli
xor
adc
sbb
in
pop
jne
int3
data16
mov
push
inc
add
jecxz
adc
test
push
inc
outsb
fimuls
and
movsb
ja
movsb
adc
stos
push
add
hlt
xorps
shrl
es
dec
pop
push
xchg
push
inc
xchg
cli
movsb
test
dec
shrb
cld
mov
push
cmpsl
and
add
mov
push
into
add
sbb
fsubs
dec
sub
das
push
mov
test
and
test
add
mov
mov
fstpt
jnp
sbb
add
pop
mov
jle
lods
pushl
mov
cld
adc
scas
mov
aaa
ljmp
cmp
push
cs
or
outsb
mov
mov
add
or
xchg
xlat
mov
jbe
inc
pop
dec
ja
inc
adc
call
ja
push
out
data16
clc
scas
sub
sub
das
and
outsl
test
jae
data16
inc
loope,pn
jl
push
sub
xchg
xor
pop
mulb
pop
or
adc
ss
ss
push
push
inc
pop
rol
out
pop
frstor
xchg
push
mov
aaa
nop
dec
test
add
js
add
daa
add
ret
fmull
sbb
hlt
mov
dec
pusha
cmpsl
ss
push
or
jns
add
dec
jmp
sarb
sub
xchg
out
inc
inc
inc
out
adc
xchg
call
es
cmpsb
rcrb
push
icebp
sbb
fsubl
push
pop
movsl
xorl
cmpsl
sub
xor
jp
push
push
aas
jae
sub
jo
outsl
pop
push
mov
push
inc
fimull
outsl
mov
cmpsb
and
inc
xor
adcb
repnz
mov
lods
mov
mov
inc
cs
sbb
dec
sahf
mov
wbinvd
xchg
pop
push
into
mov
loopne
fbstp
cs
add
dec
add
or
xchg
stc
pop
jl
add
jle
das
push
ja
out
sub
dec
jb
sti
mov
mov
lcall
sub
ss
mov
pop
sub
call
or
inc
mov
sarb
dec
dec
iret
or
popa
jg
ja
insb
movsb
push
data16
adc
sbb
pop
fsubr
mov
pop
adc
cmpsb
out
or
pop
mov
push
mov
adc
push
add
push
sti
sbb
fsubrl
call
add
ret
pop
fisttps
and
clc
outsl
dec
dec
sbb
sub
push
aaa
push
bound
mov
daa
dec
rcll
lock
idivb
push
sub
ja
inc
mov
xor
aas
cmp
cmp
add
xchg
dec
pop
jo
mov
lods
add
pop
addb
or
int3
cs
mov
xchg
movsb
or
and
sub
icebp
out
ja
pop
outsb
add
xor
mov
pop
add
addb
adc
dec
lcall
daa
mov
orb
iret
clc
push
sti
jg
out
dec
xchg
and
loope
xorl
outsb
inc
push
dec
fimuls
pop
psadbw
sbb
aam
out
and
lods
out
ret
push
out
xchg
mov
into
jb
cs
es
enter
sbb
add
sub
pop
fidivrs
xor
pop
and
add
cmpsb
mov
xchg
dec
mov
mov
add
fisttps
sub
data16
cs
xchg
xchg
add
push
decb
push
push
add
push
pop
outsl
push
mov
add
repz
out
dec
cltd
jbe
or
jb
jno
in
inc
push
sub
jl
jmp
repnz
jmp
lret
and
xor
add
cmpsb
push
inc
xor
add
testl
dec
inc
bound
add
pushf
xlat
test
lock
daa
pusha
fidivrs
cwtl
or
fs
nop
sbbb
pop
aas
mov
inc
call
lock
in
arpl
loopne
add
jb
push
adc
adc
sub
mov
add
or
daa
pop
xor
in
jle
pop
pusha
ljmp
adc
mov
add
gs
popl
adc
hlt
adc
rclb
pop
and
mov
jg
pop
sbb
xchg
push
enter
call
outsl
out
jns
cmp
sti
xor
in
push
dec
fcompl
xchg
inc
ljmp
add
lods
or
fdivl
loopne
dec
je
dec
cmpsb
push
inc
adc
sahf
in
nop
jecxz
mov
nop
mov
testb
int
pop
pop
xchg
fstl
pop
sahf
clc
je
test
aam
and
jle
push
dec
lods
mov
adc
addr16
jnp
lahf
lods
adc
push
out
sbb
push
push
sbb
dec
les
inc
inc
popa
and
adc
lea
xchg
mov
popa
adc
ss
xchg
or
repnz
add
add
pusha
sub
pop
pusha
mov
xchg
xchg
pop
popf
jle
add
push
jg
cmp
xchg
clc
or
call
fidivrl
push
sub
pop
sbb
ret
inc
xor
sbb
test
imul
cs
aaa
hlt
cli
sbbb
ss
cmp
adc
or
mov
shlb
imulb
repnz
inc
notl
sub
pop
es
ret
mov
iret
mov
nop
mov
mov
fadds
fs
dec
or
outsb
add
pop
adc
icebp
xor
xchg
jg
jb
jecxz
pop
or
dec
add
pop
add
add
pop
das
mov
aas
cmpsb
lds
cmp
scas
mov
and
divl
out
test
lods
scas
mov
mov
and
dec
or
xchg
fildl
psadbw
jge
mov
cmp
ja
mov
lcall
add
mov
inc
or
enter
stos
or
into
bound
fnsave
lea
add
add
pop
mov
inc
es
cmp
xchg
mov
jo
sbb
pop
cs
xchg
popa
push
outsb
popf
sub
dec
jo
pop
fdiv
mov
and
scas
adcb
xor
push
add
xor
adc
cs
aaa
jb
jns
or
imul
subl
sbb
and
push
mov
pop
mov
xchg
idivl
sub
pop
push
dec
rorb
dec
into
push
add
push
push
push
pop
mov
and
pop
jle
inc
mov
cwtl
aaa
mov
fs
add
popa
outsl
test
aas
inc
imul
mov
outsl
fmull
out
and
dec
outsb
xor
mov
fcmovu
mov
daa
cmp
inc
jns
mov
xor
lahf
mov
pop
push
jg
xchg
fbld
mov
out
push
aam
pop
mov
inc
dec
ret
aam
mov
dec
shll
adc
sbb
pop
sub
lods
clc
lahf
loop
sbb
push
push
push
loop
sbb
add
addr16
loope
push
aas
xlat
fbstp
sbb
mov
jg
push
pop
fs
and
aaa
addr16
push
lea
cwtl
inc
fistps
xlat
ds
stos
mov
movsl
lock
inc
dec
inc
scas
fidivrl
movsb
dec
adc
mov
pop
cmpsl
push
pop
xchg
mov
pop
push
lock
lahf
cmp
cli
mov
mov
das
or
jmp
mov
push
aas
pop
sbb
dec
cld
inc
sbb
and
in
je
into
aam
and
push
subl
outsb
push
pop
xchg
pop
in
testl
fsubrl
outsb
push
cwtl
daa
xchg
xor
inc
insl
push
int3
orl
and
dec
mov
ja
adc
and
push
pop
into
push
gs
dec
or
xchg
aam
adc
mov
jo
mov
dec
xorl
dec
loop
mov
adc
add
inc
xor
cli
in
adc
mov
push
nop
cli
adc
gs
clc
add
mov
jne
or
cmp
popf
and
into
adc
or
and
or
call
mov
scas
mov
shll
mov
push
pop
adc
clc
fst
push
inc
adc
xor
cmpsb
jbe
mov
xchg
adc
jle
and
or
pop
cmp
mov
jecxz
jge,pt
sub
sbb
pop
jle
popa
call
add
xor
pop
sub
scas
pop
push
aaa
cwtl
inc
add
nop
out
testl
scas
mov
mov
add
cmp
xor
aad
es
rcll
cmpsb
and
add
cmp
push
xor
js
pop
sbb
sub
decb
cmpsb
in
cmp
insl
loop
cmp
or
mov
scas
out
data16
xor
ret
aas
sbb
out
add
iret
xchg
jo
sub
cmp
popa
push
rolb
mov
loope
or
inc
into
push
cmpsb
xchg
inc
xchg
into
inc
cmpb
pop
pop
shl
or
aam
rcpps
add
or
cmpb
push
or
sbb
ds
add
jb
adcb
test
inc
adc
inc
orl
test
jl
xchg
aas
mov
aas
dec
pop
ljmp
fbstp
bound
mov
insb
lcall
nop
lods
push
push
cmc
jg
insb
xor
push
jns
clc
dec
fistpll
push
shr
lret
pop
lcall
dec
sbb
pop
mov
cltd
nop
push
inc
shll
shrl
shl
jg
inc
mov
push
adc
sub
scas
add
mov
cmpl
mov
out
xchg
outsl
sbb
adc
mov
cmp
push
icebp
mov
iret
xchg
push
pop
insl
loopne
out
add
cmp
pop
loopne
xchg
push
push
push
xor
or
sub
jle
push
push
cmpl
das
mov
cs
cmp
call
lds
sbb
push
popa
or
add
iret
repz
push
jg
add
or
into
repz
rcrl
fldt
sahf
leave
push
popa
addl
sti
push
mov
push
leave
xchg
repz
popf
repnz
mov
fwait
adc
iret
repz
sub
arpl
push
cmp
repz
adc
cmp
repz
and
outsl
jle
or
and
mov
or
xlat
into
call
cs
mov
mov
push
ret
cmpsb
push
lock
das
ss
xchg
or
stos
popa
imul
subl
inc
ret
pop
scas
enter
fistl
in
adc
pusha
js
in
enter
in
mov
pop
mov
in
pushf
nop
rclb
and
and
inc
dec
enter
ret
test
int
and
in
int3
push
mov
enter
pop
mov
adc
push
pop
ljmp
nop
scas
xchg
sbb
adc
dec
pop
mov
cmc
int
or
xor
cmp
das
fs
dec
mov
nop
adc
mov
pop
enter
pop
rcll
cmpl
or
and
pmullw
enter
sbb
nop
pmulhuw
insb
dec
adc
push
push
daa
in
cmp
dec
dec
dec
mov
and
push
addr16
das
fs
dec
adc
jp
push
enter
es
mov
fisubs
dec
enter
outsb
fildll
cltd
in
jl
sub
js
push
test
push
cmpsw
adc
lds
push
roll
dec
sahf
dec
sahf
push
adcl
dec
sahf
dec
sahf
adc
sahf
dec
sahf
sbb
mov
sbb
add
adcl
rcll
mov
shll
test
mov
in
es
shll
test
test
adc
roll
jg
aaa
leave
out
adc
add
jg
xchg
insb
dec
mov
xchg
xchg
in
adc
add
xchg
les
loopne
mov
sbb
cmpsl
jg
lds
ja
dec
enter
lds
cmc
pop
xchg
mov
call
push
inc
dec
xor
cmp
push
outsl
jne
adc
xor
push
mov
popa
cld
adc
xor
adc
dec
jne
adc
xor
add
stos
xchg
je
adc
jp
idiv
fwait
subb
adc
or
jg
cmpsb
inc
mov
lcall
adc
xchg
lret
je
adc
mov
je
ds
jmp
adc
sbb
push
adc
adc
lahf
mov
sub
push
lahf
jno
adc
pushl
push
scas
jno
adc
xor
adc
jno
adc
xor
adc
pop
push
pshufw
pushl
aas
xor
push
push
pop
jo
adc
ja
cmp
push
outsl
jo
adc
jo
pushl
adc
jo
push
iret
jo
adc
xor
pop
push
pop
jae
adc
ss
pushl
adc
daa
push
das
jae
adc
inc
adc
jae
push
jg
and
outsl
ss
adc
jae
push
jae
incl
repnz
jb
adc
jb
push
scas
jb
call
adc
jb
adc
aaa
pop
sbb
jge
pop
jb
aas
cmp
sbb
jge
call
pop
jge
sbb
cmp
cmp
pop
outsl
jge
sbb
cmp
pop
mov
cmp
sbb
jge
pop
iret
jge
sbb
cmp
sbb
jge
pop
pop
jl
aaa
sbb
nop
cmp
jl
sbb
or
jg
and
outsl
cmp
pop
jl
sbb
ljmp
sbb
mov
incl
push
pop
cmp
push
dec
pop
pop
aas
jg
push
das
cmp
sbb
pop
dec
jg
mov
jg
addr16
sub
jg
push
cmp
push
cli
jg
pop
scas
jg
push
fistpll
push
mov
pop
jg
push
out
cmp
pop
pop
jle
pop
movd
outsl
lcall
aas
cmp
pop
push
push
pop
pop
jle
pop
dec
cmp
jle
pop
outsl
jle
fdivrp
std
sub
push
jg
push
mov
mov
cmp
call
push
sahf
jg
pop
fistpll
sbb
cmp
sbb
jns
sbb
cmp
sbb
jns
jae
call
pop
cmp
add
out
jle
pushl
adc
call
cmp
mov
xchg
jg
push
jno
mov
movsl
jns
pop
or
xor
idivb
xor
jg
in
stos
xor
adc
je
push
add
adc
mov
fisttps
pop
adc
adcl
jae
push
push
arpl
push
mov
repz
sbb
jg
test
incb
jge
pop
test
icebp
sbb
jl
lcall
pop
stos
jl
sbb
jg
pop
and
push
jae
imul
jg
pop
into
jg
jmp
pop
mov
or
jns
sbb
js
sti
jns
pop
in
jns
sbb
js
dec
pop
loop
push
sbb
ds
jnp
pop
xchg
jnp
sbb
jnp
pop
jmp
aas
push
std
push
push
sbb
jp
push
aam
mov
test
pop
adc
mov
sub
xor
clc
ljmp
or
push
mov
xor
adc
je
push
push
je
call
enter
adc
fnsave
adc
add
push
push
push
jg
lcall
add
dec
xor
cmp
bound
ja
push
xor
inc
jbe
push
ja
and
call
movsl
xor
adc
jo
jecxz
lods
jg
xorb
adc
jnp
es
push
xchg
jae
adc
ss
adc
call
jge
sbb
xchg
jl
pop
je
ficomps
popf
cmp
push
sbb
pop
pop
jns
lcall
popa
jp
pop
jns
icebp
sbb
jbe
mov
jne
cwtl
adc
jne
push
stc
jne
adc
xor
fbstp
push
clc
ljmp
push
push
aaa
xor
pop
dec
jbe
push
jno
fists
popf
xor
lods
testb
push
jno
push
inc
jno
call
or
sahf
jno
push
mov
out
scas
xor
adc
jo
push
pushf
jo
popf
add
lret
adc
hlt
jb
push
sarb
jge
cli
das
sar
sbb
hlt
jl
sbb
jg
pop
jg
cs
inc
das
push
cmp
push
dec
pop
sub
mov
ljmp
sbb
outsl
pop
lock
push
mov
sbb
jp
jg
jle,pt
data16
jne
adc
lcall
mov
pop
fcoml
je
adc
lea
ljmp
push
xor
pop
push
dec
jo
adc
sbb
mov
or
jg
push
sbb
add
fs
sbb
push
in
scas
clc
jmp
js
sbb
jae,pt
mov
int3
jnp
sbb
push
add
pop
adc
jne
push
ja
jmp
adc
jne
push
adc
jns
sub
push
adc
ja
and
adc
mov
xchg
push
lahf
je
lcall
and
incl
push
mov
jbe
push
shlb
dec
xor
adc
jo
adc
mov
pushl
jge
sbb
cmp
sbb
jge
pop
add
push
cmp
xor
jnp
ljmp
orb
sbb
fnstcw
pop
lds
into
lret
cmp
pop
sbb
pop
leave
jle
sbb
jns
lock
pushl
jp
sbb
cmp
mov
jnp
sbb
ds
lods
jnp
pop
sub
sbb
call
jne
sar
jp
pop
xor
adc
je
push
xchg
je
adc
mov
push
or
push
pop
icebp
lcall
adcb
movsl
ja
pop
cmp
xchg
pop
sahf
mov
pushf
xchg
icebp
call
out
xor
daa
jno
push
scas
jo
adc
mov
jae
push
flds
adc
ss
sar
adc
adc
jge
pop
mov
std
sbb
cmp
and
jg
push
push
cmp
jg
pop
int
add
and
js
pop
mov
push
outsl
mov
jbe
jp
cs
push
and
jne,pt
mov
dec
pop
pop
xor
adc
ja
push
leave
clc
adc
out
sbb
pop
jl,pt
sbb
call
push
cmpb
testb
cmp
cltd
pop
mov
and
inc
jle
and
pop
jne
adc
xor
ljmp
push
xchg
jbe
pop
pop
xor
adc
jo
push
stc
jae
adc
lret
adc
jg
pop
lret
jle
lcall
jb
and
pop
push
jp
and
jo
and
decl
les
lcall
adc
or
sbb
jnp
pop
cmp
push
jnp
sbb
ds
pop
jp
pop
test
inc
aas
and
ljmp
xchg
jp
sbb
jp
pop
fistpll
sbb
aas
sti
sbb
mov
add
push
popa
jne
adc
xor
push
decb
pushl
adc
xor
adc
xchg
je
adc
jg
or
and
popf
push
xorl
pop
or
jg
es
push
sub
or
cmp
push
xchg
adc
aaa
pop
sbb
jmp
dec
jge
sbb
cmp
outsb
jge
sbb
cmp
pop
decl
cmp
pop
stos
jge
sbb
cmp
sbb
jge
pop
les
sbb
cmp
sbb
aas
mov
jge
sbb
cmp
sbb
dec
sbb
jno
aas
pop
ljmp
and
sub
push
test
pop
pop
pop
jl
sbb
xor
jle
and
cmp
jl
pop
cwtl
push
sbb
leave
jg
jl
pop
mov
sbb
aam
lcall
jl
pop
idiv
scas
cli
jl
sbb
scas
jl
pop
adc
push
cmp
push
inc
jg
pop
xor
push
cmp
and
arpl
pop
sub
adc
pop
cmp
add
jg
push
je
jg
daa
jg
pop
aas
decb
push
xchg
cmp
jg
push
mov
mov
add
andl
jg
out
ss
cmp
push
scas
jg
pop
push
jle
pop
add
or
jbe
and
jle
pop
push
cmp
sbb
jnp
pop
lods
jnp
sbb
aas
cmp
push
stos
iret
incl
pop
mov
mov
push
jne
adc
xor
adc
je
push
mov
je
adc
out
rcll
je
adc
stos
cs
lcall
dec
rclb
xorl
push
pushl
push
shll
push
or
pushl
pop
pop
jne
daa
push
pop
jbe
pop
jnp
push
fnstenv
push
mov
or
adc
jno
push
dec
jno
adc
jbe
aas
jno
clc
jg
jno
adc
lcall
jo
adc
inc
adc
jo
push
dec
jo
adc
pushl
bound
cmp
push
test
xchg
adc
mov
adc
idivl
cmp
loopne
fistpl
jns
sbb
mov
scas
pop
int3
mov
arpl
std
cmp
lcall
jnp
sbb
aas
or
or
sbb
aas
negb
lods
jp
xor
or
add
testb
pop
ja
push
cmp
push
jmp
lcall
jbe
pop
push
xor
adc
jno
push
xor
popa
adc
lcall
decl
sub
adc
loop
ficoml
jb
sbb
cmp
push
and
push
aaa
loop
cld
adc
jl
pop
leave
push
in
cmp
pop
cmpb
push
jnp
sbb
cs
lock
fidivs
push
rclb
pop
in
out
pop
add
push
push
add
jg
push
adc
out
scas
push
adc
xor
adc
in
pushl
ja
fs
jo
push
lods
jo
xor
out
push
adc
lcall
sbb
push
adc
stc
push
in
inc
push
les
int
inc
jle
pop
cmp
decl
clc
cmp
mov
sbb
jns
pop
sub
cmp
sbb
jns
pop
dec
js
sbb
js
pop
adc
lcall
jb
mov
call
push
jne
push
lahf
jne
adc
xor
mov
ja
push
lods
xor
call
loopne
mov
and
mov
cmpsl
pop
xchg
jbe
push
lds
pop
xor
ljmp
cld
pop
jge
and
xor
push
jno
push
inc
jo
adc
ja
clc
sbb
push
adc
outsl
jb
cld
aaa
fcmovnb
push
inc
jl
aaa
xchg
adc
jb
push
mov
lock
inc
jl
lock
sub
jge
push
ljmp
fdivrs
pop
fdivrl
jle
sbb
inc
jl
sbb
cmp
mov
mov
sbb
dec
xor
lcall
push
cmp
pop
sbb
js
sbb
mov
jg
notb
dec
adc
jne
push
and
call
sub
push
shll
pusha
xor
adc
jno
push
dec
jb
adc
cmp
adc
pop
inc
jge
lcall
and
pop
xchg
jge
sbb
cmp
pop
hlt
jge
sbb
cmp
sbb
jl
sbb
jg
enter
push
push
add
mov
pop
int3
jg
push
clc
cmp
mov
pop
cmp
lcall
jle
pop
cmp
and
or
pop
mov
clc
pop
test
jle
pop
ljmp
ss
sbb
sub
sbb
cmp
sbb
js
sbb
sbb
or
jecxz
pop
js
sbb
decl
cmp
imul
fistpl
jnp
sbb
jp
pop
test
sbb
aas
in
decl
mov
jae
jne
push
push
jne
adc
push
pop
clc
pushl
imul
test
jne
adc
xor
je
push
incl
push
adc
das
ja
push
hlt
ja
pop
dec
xor
jl
pop
outsl
jl
sbb
lahf
js
pop
popa
js
sbb
pop
aad
pop
sbb
fcomps
mov
jg
jmp
jne
push
or
xor
ljmp
mov
jbe,pn
pop
push
xor
sbb
push
inc
xchg
xchg
xor
pop
jecxz
rclb
icebp
xchg
mov
push
pop
inc
jl
sbb
incl
xor
pop
cwtl
jg
push
test
std
pop
mov
jg
cmp
js
xchg
jle
sbb
mov
sbb
jns
pop
mov
jae
sub
nop
pop
enter
cld
mov
sbb
pop
lret
jnp
sbb
aas
or
adc
dec
pop
mov
loope
adc
nop
xor
xor
push
ret
push
in
pop
adc
xchg
je
push
cld
je
push
xchg
adc
mov
ja
push
out
xchg
pop
inc
fldl
push
js
and
hlt
push
pop
mov
adcb
xchg
jo
adc
or
mov
push
jo
cmp
xchg
ss
push
jl
adc
call
adc
jge
sbb
cmp
cmp
pop
jl
rcrl
cld
add
pop
mov
sbb
js
pop
das
dec
inc
stos
and
lret
mov
xor
adc
je
push
lcall
je
push
add
fs
lcall
jp
ja
push
stos
ja
push
loope
pop
pop
or
fisttps
xchg
xor
jbe
pop
jmp
jno
push
jb
sub
xchg
icebp
pushl
push
shlb
in
out
adc
or
adc
dec
adc
clc
cmp
xorb
movsb
xor
out
push
sbb
jb
and
pop
adc
jae
xor
lds
adc
mov
jb
insb
in
lock
jg
mov
lret
adc
jb
sbb
cmp
std
jge
pop
or
cmp
fistpll
idivl
pop
cmp
pop
leave
jle
pop
les
call
sbb
movsb
ds
movsl
push
jge
outsl
adc
je
loopne
jg
push
divb
jle
pop
dec
jbe
push
sub
arpl
jg
mov
push
push
jb
adc
dec
sbb
daa
push
mov
mov
pop
cmc
jns
mov
add
jne
push
int3
jne
adc
pushl
dec
adc
fwait
je
adc
dec
push
stc
je
adc
lcall
add
jo
jns
push
xchg
mov
push
shlb
push
jecxz
mov
loop
out
push
push
jbe
push
sbb
xor
jo
push
push
mov
pop
enter
lods
jbe
jecxz
mov
incl
cld
jg
adc
xor
adc
jno
push
jno
jle
adc
jo
fcos
clc
adc
jo
push
fidivs
adc
xor
loop
js
dec
push
out
xor
push
jbe
adc
ss
clc
cmp
gs
push
inc
jae
adc
je
gs
outsl
jae
adc
sar
adc
jae
push
fdivs
adc
mov
jae
push
push
inc
ret
out
es
data16
push
es
scas
jle
aaa
lcall
fdivr
jg
shlb
aam
fwait
cs
adc
aaa
clc
adc
jge
sbb
cmp
push
les
jge
sbb
mov
pop
movq
out
push
ret
cmp
jge
and
cmpsb
push
cld
push
in
ficompl
jbe
pop
sbb
sub
jns
lcall
loopne
or
adc
addr16
fdivrl
sbb
jp
test
incl
dec
jp
sbb
insl
sbb
jp
pop
mov
in
rcrb
jp
scas
repz
push
and
ss
push
jne
adc
xor
sbb
cmc
adc
jne
push
dec
mov
cwtl
ja
fcomip
stos
call
ja
pop
add
push
pop
cmpsb
adcl
push
scas
xor
pop
push
icebp
cs
pushl
push
sub
adc
scas
adc
adc
xor
lret
outsb
mov
int3
xor
or
cmp
insl
adc
outsl
adc
jae
push
mov
xchg
adc
ss
and
jg
cmc
adc
aaa
sub
pop
push
jl
into
dec
jo
mov
sbb
push
jle
pop
clc
ljmp
xlat
sbb
mov
in
ds
sbb
std
jp
pop
push
jp
sbb
sbb
jp
pop
mov
lcall
mov
pushf
aas
jecxz
pop
jecxz
adc
and
xchg
cmp
sub
mov
sbb
xchg
cmp
sub
mov
lods
je
push
cmp
in
call
std
call
dec
jbe
push
pusha
jo
adc
rclb
ret
push
cmp
loopne
fcompl
jl
sbb
jbe
and
sbb
adc
cmp
pop
xchg
sbb
movsb
sbb
out
and
cltd
int
ss
cs
call
aad
push
cmp
xlat
call
jmp
xchg
ja
push
test
xor
push
push
jbe
pop
icebp
jmp
push
lcall
adc
sub
adc
jae
push
push
jecxz
out
out
inc
ss
jae
push
data16
adc
aad
mov
jae
adc
jae
push
dec
jb
xor
inc
push
clc
pop
sbb
jge
clc
mov
cmp
mov
fisttps
jg
into
pop
pop
add
mov
pop
pop
jmp
jle
pop
in
pop
sbb
sbb
jns
pop
pushf
jns
add
jg
sbb
js
pop
jmp
adc
repnz
sbb
outsl
jb
cwtl
inc
aas
inc
sbb
jp
sbb
or
push
jne
xchg
aad
add
xor
je
ss
ljmp
mov
ja
push
pop
xor
ret
push
in
pop
pop
pop
incl
jbe
push
or
es
adc
jno
push
insb
jno
hlt
pop
cmc
lds
stos
xor
int3
jo
ljmp
and
jne
push
pop
jne
adc
xor
sub
xchg
push
xchg
adc
xor
adc
mov
xor
adc
pop
sub
mov
outsl
cli
push
xor
pop
push
xor
or
movb
stos
jg
test
lret
pop
mov
jno
adc
adcb
jno
push
mov
jno
rclb
mov
or
adc
inc
ret
roll
dec
fbstp
adc
aaa
cmpsb
adcl
pop
mov
xor
lahf
jge
out
scas
sbb
inc
and
incl
adc
inc
cmp
call
roll
push
mov
jg
pop
idivl
push
out
cmp
pop
ja
jle
pop
sub
pop
inc
cmp
cmp
pop
xchg
pop
mov
jle
pop
out
pop
sbb
cmp
sbb
pop
pop
inc
jns
je
xchg
sbb
jns
pop
mov
decl
test
fstpl
mov
pop
js
sbb
cmp
jo
pusha
js
sbb
into
loope
into
pop
clc
js
sbb
sbb
and
cmc
mov
in
ds
jnp
pop
jnp
push
ficompl
jmp
jmp
pop
stc
jnp
sbb
ucomiss
push
sbb
fs
jp
mov
incl
sbb
aas
lret
sbb
sbb
jne
push
push
ds
xor
ss
addr16
jg
inc
adc
scas
push
fnsave
jle
adc
sub
mov
and
adc
mov
aad
cltd
xor
je
push
ret
push
out
dec
adc
jno
push
jge
mov
sbb
jbe
and
xchg
push
adc
dec
jae
push
pop
jae
adc
pushl
xchg
ss
mov
adc
ss
adc
xor
push
jb
adc
aaa
aad
xorl
or
sbb
cmp
and
pop
xchg
jge
sbb
cmp
sbb
xchg
jl
sbb
addr16
pop
jae
and
mov
pop
and
outsl
js
inc
ja
mov
scas
lds
jns
sbb
jbe
cmp
mov
xchg
sbb
cmp
sbb
outsl
pop
nop
js
call
sbb
js
pop
hlt
js
sbb
imul
xchg
jp
sbb
decl
icebp
arpl
lods
jp
test
pop
jne
push
jmp
cmc
out
shlb
mov
mov
in
xor
push
add
push
mov
or
jne,pn
adc
xor
adc
jne
push
pop
loope
xchg
es
jmp
dec
ja
push
and
scas
pop
pop
mov
clc
mov
push
adc
adc
jno
push
pop
sbb
mov
adc
jae
adc
nop
adc
jae
push
notb
mov
aas
push
add
jge
sub
jb
push
test
pushl
push
fdivl
adc
cmp
sbb
jge
pop
data16
sbb
cmp
pop
cmc
jge
sbb
mov
les
lcall
rcrb
jns
sbb
mov
push
cmp
sbb
and
rcrb
or
js
lcall
pop
sbb
add
dec
jnp
pop
cmp
sbb
sub
pop
jnp
pop
pop
jnp
sbb
ja
cmp
sbb
jnp
pop
xchg
jnp
test
mov
jnp
pop
cmpsl
jnp
sbb
aas
and
daa
sbb
jp
sbb
mov
adc
pop
sahf
aas
sbbb
movsl
negb
ljmp
adc
jne
push
dec
jne
adc
pop
push
incl
adc
pop
ja
jbe
push
jae
jge
iret
jbe
cmc
push
mov
jle
out
rclb
jno
sar
ljmp
adc
jo
push
sub
sbb
arpl
xchg
adc
jae
push
or
jg
aaa
push
adc
jb
pop
aas
jge
sbb
cmp
in
or
cmpl
lods
ljmp
jle
pop
fnstcw
lock
pop
jns
pop
je
mov
mov
pop
dec
jnp
jg
scas
pop
lock
cmp
out
inc
into
mov
xor
pop
or
dec
push
out
sub
sbb
decl
pop
lea
int
loop
dec
jl
pop
pop
dec
pop
mov
sbb
dec
push
and
pop
mov
jg
push
fnstcw
icebp
push
mov
inc
pop
jnp
cmp
mov
adc
scas
jns
mov
pushl
sbb
pop
pop
bound
sbb
das
pop
pop
jnp
sbb
sbb
loope
jecxz
aad
add
sbb
adc
incb
scas
mov
repnz
jge
xchg
sbb
ret
sar
pop
fstpt
pop
fdivrs
jle
push
pop
jge
ret
filds
add
out
jne
adc
pushl
and
pop
je
adc
lret
push
lods
jbe
pop
add
xor
ss
push
ret
xor
jl
jno
adc
mov
outsl
inc
xor
adc
mov
add
adc
xor
adc
jne
push
das
jne
adc
xchg
or
push
mov
int
jg
and
fidivl
push
jne
adc
xor
jg
pusha
jne
push
scas
jne
adc
xor
aaa
add
jg
jne
adc
xor
adc
or
xor
outsl
aaa
push
pop
je
adc
push
mov
pop
inc
lcall
pop
push
aas
xor
push
clc
lcall
ja
push
jg
sub
lahf
xor
push
fbstp
push
call
pop
lcall
jbe
push
aas
jbe
pop
pop
es
cmp
push
lahf
jbe
pop
mov
jbe
push
and
stos
pop
pop
xor
adc
das
adc
push
lcall
jg
adc
jno
push
mov
adc
jo
jg
jbe
das
adc
dec
push
jg
sub
xchg
decl
xor
popl
cli
adc
jo
push
ret
jo
adc
decl
xchg
add
movlps
aas
push
and
adc
nop
and
ss
mov
aaa
loope
cmp
outsl
adc
jae
push
xorl
mov
out
scas
ss
call
jae
adc
ss
adc
jae
adc
aaa
pop
adc
dec
add
and
mov
fistpll
jb
push
inc
jb
lods
aaa
cs
push
xchg
jb
xor
jecxz
ds
adc
push
mov
sbbl
push
add
sahf
pop
inc
jg
iret
mov
out
pop
les
jb
loopne
add
inc
or
mov
fsubrs
pop
pop
cmpsl
out
cs
jne
addl
decl
out
insl
mov
add
mov
xor
push
push
mov
xchg
bound
jo
jp
pop
std
cmp
int3
push
inc
pushl
jae
jnp
mov
xor
in
in
sub
inc
ljmp
jl
jmp
inc
lcall
loope
outsb
jge
mov
push
in
call
cmpsb
out
lea
jbe
xor
ljmp
lret
xor
ljmp
addr16
outsl
js
mov
or
xchg
test
mov
cmp
xchg
cmp
jl
lcall
aad
mov
adc
adc
push
nop
loope
shl
xchg
test
call
ret
push
js
and
lret
leave
in
test
ljmp
iret
cmc
and
fs
imul
out
fstl
fisubl
jae
jb
push
cld
fbstp
inc
dec
mov
shll
jp
sub
jns
xchg
pop
inc
adc
lahf
jg
or
call
cmc
mov
and
enter
pop
mov
cmc
jecxz
cmpsb
scas
outsl
xchg
jge
es
add
sbb
mov
jmp
sarb
ds
mov
xchg
pop
fcomip
add
daa
insl
push
mov
mov
mov
inc
push
jmp
cli
shlb
adc
adc
icebp
ljmp
cwtl
ss
or
in
adc
cli
add
lcall
push
loope
mov
test
adc
sub
pop
mov
mov
mov
xlat
push
jl
mov
dec
push
sub
pop
mov
xor
cmp
cmp
mov
incl
xorl
sbb
sbb
jo
cmp
out
sarl
jmp
inc
jg
ja
insb
mov
cmpsb
mov
mov
iret
call
push
cld
adc
ljmp
pop
std
scas
aas
or
aas
xor
pop
mov
aaa
outsl
push
lcall
pushl
sahf
xchg
xchg
pop
icebp
xor
test
dec
sti
push
rcr
fstpl
js
lcall
ret
pop
sbb
das
inc
pop
pushf
lret
sbb
ljmp
out
pop
or
stc
pop
js
cmp
test
xlat
insb
jns
jp
jle
pushl
pushl
xchg
pop
call
cmp
cmp
shlb
int3
test
lcall
mov
pop
cmp
cmp
cmpsb
jno
ret
sbb
icebp
into
fildll
movsl
dec
ljmp
clc
std
mov
pop
cmp
mov
js
cs
fmuls
dec
xchg
sahf
cmp
mov
push
je
dec
xchg
pop
or
dec
mov
pop
lret
mov
inc
sub
lock
lcall
push
push
jbe
dec
adc
shl
pusha
push
je
stos
mov
das
and
cli
mov
lcall
sbb
repnz
mov
loop
dec
lcall
pop
jmp
or
lods
xor
xchg
inc
fisubrs
mov
ljmp
enter
sub
shr
dec
pop
addr16
fidivrs
adc
fstps
push
dec
aam
lahf
dec
inc
addb
or
lahf
stos
mov
add
insl
dec
aam
pop
push
adc
out
or
or
jo
xor
mov
push
sbb
ljmp
or
and
mov
bound
loopne
mov
or
ja
mov
mov
xor
movsl
cmc
repnz
ja
test
xchg
add
xchg
sbb
outsl
xchg
cmpsl
ret
out
ret
dec
jl
mov
xlat
adc
cld
push
or
pop
or
cwtl
push
adc
iret
repz
sbb
out
sahf
out
push
sbb
sahf
sbb
sbb
push
repz
xor
push
js
push
jns
fdivl
sub
dec
push
cld
scas
push
push
data16
iret
or
sbb
pop
jb
lea
mov
and
xchg
jns
pop
jb
xchg
add
pop
mov
test
decl
sbbb
add
add
jg
pusha
cmpb
das
cmpsb
fisttps
mov
repnz
mov
les
add
cs
daa
mov
inc
mov
test
mov
sbb
in
call
adc
in
notl
push
ficompl
mov
xor
stc
mov
neg
fsubp
stc
jb
jle
pusha
pop
inc
add
add
lods
add
ucomiss
add
mov
es
or
pop
adc
jae
addb
rolb
and
into
mov
incl
and
push
cs
adc
add
decl
lock
mov
nop
or
add
pop
and
decl
lock
pop
insl
add
das
rcrl
and
cmovno
das
or
lock
test
push
pop
lock
sbb
xchg
pop
comiss
fs
lock
mov
ds
das
add
comiss
add
das
popa
mov
stc
btc
das
lahf
inc
bound
pop
push
lock
pop
push
shll
mov
icebp
lock
rcrl
mov
push
and
lock
mov
shl
lock
ss
push
lods
cmc
or
imul
lods
lods
insl
stos
lcall
jns
adc
bound
jb
inc
inc
inc
enter
add
adc
push
adc
mov
mov
inc
adc
aam
add
add
mov
push
shlb
gs
adc
cmpsb
mov
punpcklbw
sbb
inc
in
out
test
dec
outsl
arpl
gs
popa
notb
push
push
push
outsl
jg
inc
insb
outsl
sahf
cmp
gs
mov
gs
dec
inc
rcrl
jmp
inc
xor
fs
pop
dec
popa
insl
daa
xchg
xor
mov
rclb
mov
or
gs
pop
sbb
mov
arpl
pusha
mov
fisttpll
cwtl
jo
mov
mov
and
insl
insl
lret
iret
push
in
popw
adc
inc
je
loope
and
sbb
xor
sub
in
insl
push
sbb
scas
jns
push
out
jb
or
out
jne
xchg
cltd
sub
push
mov
mov
jb
push
push
inc
pusha
jnp
sbb
daa
xchg
sahf
inc
xchg
fistl
out
cmp
fs
push
mov
mov
mov
sysexit
fs
cmp
push
outsb
push
jo
sbb
rcll
sbbl
xchg
popa
xchg
in
jae
das
xchg
movsl
pop
push
imulb
push
pop
sbb
push
pusha
rcr
flds
mov
popf
aas
rclb
jo
ss
dec
addr16
loopne
push
push
je
jp
imul
sar
mov
push
inc
sbb
cmovg
loop
mov
adc
jg
imul
inc
dec
adc
les
pop
or
mov
pop
stc
aaa
loopew
inc
dec
add
repz
dec
loopne
out
std
scas
cld
sidtl
add
or
rolb
daa
mov
pop
add
xchg
roll
and
sbb
fistl
fcoms
prefetch
sbb
adc
add
fwait
cwtl
push
push
pop
loopne
push
dec
aam
je
js
fdivrs
and
add
pusha
jb,pn
fcmovne
xchg
cmpsb
rclb
negb
add
xchg
xchg
out
dec
add
dec
sarb
fstpl
pop
out
setg
dec
or
add
adc
dec
xchg
and
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
pop
inc
add
add
add
add
add
sub
add
push
add
add
add
addb
add
mov
add
inc
add
addb
add
sbb
add
add
inc
ret
call
add
add
add
add
add
add
add
addb
add
or
add
xor
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
add
add
sbb
add
add
add
add
call
add
add
add
add
add
add
inc
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
pop
add
push
add
add
add
add
arpl
test
add
sbb
add
add
add
mov
test
add
sbb
add
add
add
add
push
add
add
add
add
add
sbb
add
add
add
cltd
add
jbe
add
sub
add
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
ja
ja
ja
ja
ja
js
mov
mov
mov
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
ja
ja
ja
ja
ja
ja
ja
jo
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
add
add
jo
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
mov
mov
mov
ja
ja
ja
ja
ja
ja
jo
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
adc
add
sub
add
adc
add
and
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
ja
js
pushl
pushl
pushl
pushl
pushl
pushl
pushl
ja
ja
ja
jo
inc
inc
inc
lock
inc
inc
inc
inc
inc
inc
jo
mov
jo
ja
ja
ja
ja
stos
stos
stos
stos
stos
stos
stos
cmp
add
sub
add
xor
add
pusha
add
add
add
add
mov
jnp
xchg
add
add
add
push
daa
add
dec
and
cmpsl
push
and
cmpsl
push
and
add
push
add
inc
add
and
stos
push
and
test
and
test
and
xchg
imul
mov
push
add
pop
and
lods
pop
and
mov
pop
sbb
mov
sbb
mov
sbb
mov
sbb
add
pusha
sbb
mov
adc
les
add
fs
mov
insb
or
lret
imul
leave
imul
add
imul
add
mov
mov
bound
add
je
add
jae
add
pop
add
stos
pop
add
mov
jb
add
jbe
add
jo
add
jno
add
outsl
or
shll
add
js
add
outsb
or
mov
ja
add
outsl
adc
je
add
jns
add
jge
add
mov
enter
ljmp
add
movsb
push
add
mov
addl
shlb
add
arpl
add
arpl
add
je
add
jne
add
je
add
jb
add
push
add
add
mov
pop
add
stos
pop
add
stos
pop
add
fnstenv
add
jbe
add
je
add
jne
add
je
add
add
stos
pop
add
fnstenv
add
jne
add
jbe
add
jne
add
jno
add
outsb
add
lret
add
jbe
add
ja
add
jne
add
jbe
add
jne
add
ja
add
jbe
add
ja
add
ja
add
jbe
add
ja
add
js
add
js
add
jns
add
jp
add
jp
add
jp
add
jnp
add
jns
add
ja
add
sbbb
les
ret
add
nop
daa
add
nop
sub
jmp
sub
jmp
sub
in
xchg
sub
add
xchg
cs
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
fisttpl
add
cwtl
aaa
add
lcall
in
cltd
cmp
in
lcall
in
pushf
ds
pushf
cmp
add
popf
aas
add
sahf
inc
add
lahf
inc
add
lahf
inc
add
mov
dec
add
mov
push
add
test
movl
in
incl
lock
incl
hlt
incl
clc
incl
stc
incl
cli
incl
sti
incl
cld
incl
std
incl
incl
inc
jo
add
mov
incl
jae
jae
jo
jo
imul
add
pusha
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
stos
lods
stos
stos
stos
stos
test
test
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
stos
cmpsl
or
stos
lods
lods
lods
lods
lods
stos
stos
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
movsbl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
sbb
lods
lods
lods
lods
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
mov
scas
lods
scas
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
sbb
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
sbb
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
and
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
and
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
and
mov
lods
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
lods
mov
lods
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
es
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
aas
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
mov
xor
xor
pop
pop
insl
pop
insl
insl
xor
xor
xor
pop
pop
pop
xor
pop
pop
xor
mov
pop
das
push
cs
xor
xor
push
push
xor
das
pop
push
push
xor
xor
xor
xor
xor
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
cltd
cltd
xchg
mov
test
xchg
xchg
sub
mov
jns
dec
dec
dec
dec
dec
dec
push
bound
jb
jb
js
js
js
js
jb
imul
dec
dec
dec
dec
push
jne
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
flds
add
add
add
add
add
add
add
or
jle
xchg
add
add
pop
push
dec
add
dec
and
mov
dec
and
cmpsb
push
sub
movsb
push
sub
js
xor
jle
xor
ja
xor
ja
xor
jb
add
xor
mov
add
add
dec
add
dec
and
movsb
dec
and
mov
dec
and
mov
dec
xor
jo
add
dec
add
insb
inc
add
xchg
jae
xchg
jp
mov
inc
add
mov
aaa
add
xchg
jno
lret
add
dec
add
pop
add
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
sahf
inc
add
mov
insb
add
outsb
add
xchg
jae
pop
push
dec
add
dec
add
cmpsb
dec
add
movsb
dec
add
jae
add
jb
add
jo
add
pushf
push
rorb
add
lcall
pop
push
dec
add
dec
add
mov
add
ja
add
jbe
add
sahf
push
add
imul
add
jnp
add
jp
add
js
add
mov
data16
insl
add
shrl
add
insb
add
shrl
add
outsb
add
shrl
add
outsb
add
iret
push
add
insl
add
lret
imul
shll
add
jge
add
jg
add
xchg
add
mov
add
xchg
aaa
add
popf
aas
add
mov
cmp
in
inc
add
mov
bound
out
arpl
loop
bound
loopne
bound
iret
outsl
add
mov
jno
add
jb
add
js
add
jg
add
orl
jecxz
or
add
jp
add
jnp
add
jp
add
jne
add
adcb
faddl
push
add
adcl
add
adcb
faddl
sbb
fldl
sbb
faddl
add
test
in
mov
add
xchg
add
nop
and
fldl
es
xchg
daa
add
xchg
sub
lock
sub
out
xchg
sub
add
xchg
das
add
xchg
das
add
cltd
xor
lock
xor
cmc
sahf
xor
add
lcall
lock
aaa
add
fwait
cmp
lock
cmp
lock
cmp
add
lea
add
cmpsl
push
add
scas
jo
test
sahf
add
pop
add
shrb
add
iret
mov
fmul
mov
fmul
mov
int
add
shll
add
sarl
add
sarl
add
aad
add
fadd
add
add
incl
stc
incl
cli
incl
sti
incl
cld
incl
std
incl
incl
cs
add
incl
addb
add
pusha
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
sbb
es
adc
push
adc
adc
push
add
add
add
add
add
add
adc
adc
mov
sbb
mov
mov
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aas
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ds
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
scas
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
dec
mov
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
scas
mov
dec
inc
mov
dec
mov
scas
scas
scas
mov
mov
mov
mov
mov
scas
mov
mov
mov
mov
scas
mov
dec
xor
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
test
cmpsl
cmpsl
cmpsb
cmpsl
cmpsl
cmpsl
cmpsl
test
test
cmpsb
cmpsb
test
mov
mov
mov
dec
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
dec
and
inc
mov
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
mov
imul
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
xchg
jns
jle
addl
jno
outsl
outsb
pushf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
add
add
add
add
add
cmc
repz
dec
xor
mov
push
aas
add
xor
xchg
pop
cmp
test
add
mov
add
mov
inc
add
mov
repnz
inc
add
gs
add
mov
popf
add
ret
pushf
add
mov
or
mov
arpl
mov
arpl
add
jae
add
js
add
xchg
add
mov
repnz
test
scas
xchg
js
in
and
out
es
nop
sub
out
sub
out
sub
out
sub
out
sub
add
xchg
das
add
xchg
xor
jecxz
xor
in
ss
lcall
out
leave
add
add
cmc
repnz
fidivrl
add
fst
add
fmul
add
fcmove
add
loopne
add
fst
add
std
add
incb
cld
incb
cli
incl
sti
incl
cld
incl
std
incl
incl
incl
xchg
xchg
xchg
add
jg
jle
jle
jge
jge
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
pop
pop
pop
pop
pop
pop
pop
add
push
dec
or
adc
cmp
adc
adc
adc
add
or
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
or
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
pop
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmovg
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
inc
ds
aaa
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pushl
mov
out
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
call
push
daa
jmp
push
daa
jmp
push
daa
incl
add
cmpsl
add
add
mov
push
jmp
daa
jmp
jmp
jmp
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
incl
add
cmpsl
add
add
movsl
push
es
cld
out
clc
clc
clc
stc
clc
clc
clc
clc
in
push
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push
clc
cld
out
movsl
push
incl
add
cmpsl
add
add
cmpsl
push
and
clc
clc
stc
stc
stc
stc
stc
clc
clc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jmp
add
cmpsl
add
add
test
and
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
ljmp
add
cmpsl
add
add
stos
push
and
cli
stc
stc
cli
stc
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
ljmp
add
cmpsl
add
add
lods
push
and
cli
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
ljmp
add
cmpsl
add
add
scas
pop
pop
sti
cli
cli
stc
cli
cli
sti
sti
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
ljmp
add
cmpsl
add
add
mov
push
sti
sti
sti
stc
sti
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
pushl
add
cmpsl
add
add
mov
sbb
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
pushl
add
cmpsl
add
add
mov
sbb
cld
sti
cld
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
pushl
add
cmpsl
add
add
mov
cld
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
mov
add
cmpsl
add
add
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
shlb
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
fs
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
imul
test
enter
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
imul
lods
add
add
lret
imul
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
imul
add
add
int
or
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
insb
or
pop
pop
pop
scas
add
add
iret
outsb
or
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
outsb
or
pop
pop
pop
scas
add
add
shrb
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
call
jo
call
pop
pop
scas
add
add
aam
push
call
jno
call
pop
pop
scas
add
add
jb
call
ja
call
add
sbb
mov
add
lods
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
lods
pop
add
mov
add
decl
or
add
add
mov
data16
mov
arpl
mov
arpl
mov
arpl
mov
bound
mov
bound
mov
arpl
mov
bound
mov
arpl
mov
arpl
mov
bound
mov
bound
mov
bound
mov
bound
mov
arpl
mov
arpl
mov
bound
inc
outsl
adc
mov
mov
bound
dec
jns
dec
jge
mov
gs
jno
mov
xchg
imul
je
incl
add
test
add
sbb
push
dec
outsb
add
aam
add
fdivs
fnstenv
fnstenv
fnstenv
fdivs
fnstenv
fnstenv
fnstenv
fidivrl
fidivrl
fidivrl
fidivrl
fnstcw
fidivrl
fdivs
fnstenv
fnstenv
fdivs
fdivs
fdivs
fdivs
fdivs
fdivs
fdivs
fnstenv
fdivs
fnstenv
fnstenv
fdivs
fnstenv
fnstenv
ljmp
fldl
or
in
movsb
push
stc
mov
add
jnp
xchg
incl
jecxz
arpl
dec
xorb
int3
ja
incl
add
xchg
add
add
lret
call
jns
jmp
mov
pop
in
lahf
inc
out
lahf
inc
out
mov
dec
out
lahf
inc
in
lcall
out
mov
ss
in
xchg
xor
in
cwtl
cmp
in
popf
aas
out
popf
inc
in
pushf
cmp
in
pushf
ds
in
pushf
cmp
in
pushf
cmp
in
pushf
cmp
in
pushf
cmp
jmp
sub
in
xchg
xor
in
xchg
xor
jmp
sub
ljmp
jmp
sub
in
xchg
xor
in
xchg
sub
in
xchg
xor
in
cwtl
aaa
in
lcall
fisttps
xor
shlb
incl
add
dec
add
add
fnsave
xor
jno
call
jbe
fdivrs
call
js
call
jbe
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
je
call
je
call
je
call
jne
call
jne
call
jne
call
jne
call
jne
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
jne
call
jne
call
jne
call
je
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
je
fdivs
fnstcw
call
jbe
pushl
add
pop
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
sbb
add
add
add
add
sbb
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
or
add
add
sub
mov
and
and
and
and
and
and
and
and
and
and
and
and
push
sub
add
add
cli
push
sti
std
dec
xchg
jae
syscall
add
add
inc
xchg
jp
or
add
add
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
dec
xchg
jae
or
add
add
std
cli
stc
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
jb
or
add
add
sti
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
jno
or
add
add
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
outsb
sbb
add
add
mov
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
cltd
insl
sbb
add
add
shll
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
lcall
add
jb
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
fwait
imul
add
add
jb
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
fwait
imul
add
add
jae
stc
cli
cli
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
call
pushf
push
push
add
add
leave
jbe
cli
stc
sti
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
fstps
add
add
ja
stc
cld
cld
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
fistpl
add
add
js
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
frstor
add
add
jp
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
cli
cli
cli
cli
sti
std
sti
stc
fbld
add
add
jnp
cli
stc
cli
cli
cli
cli
cli
cli
cli
stc
stc
cld
stc
cli
cli
cli
cli
sti
stc
sti
stc
sti
jmp
mov
add
add
jg
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
std
jmp
mov
add
add
xchg
jmp
test
add
add
jge
into
fcmovbe
mov
sarb
sarl
sarl
sarl
sarb
sarb
sarb
sarb
sarl
int
mov
iret
mov
iret
mov
shll
ret
aam
aaa
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
push
push
add
add
add
insl
add
imul
outsb
add
outsb
add
outsb
add
insl
add
jno
shlb
shlb
shll
shrl
shrl
iret
insl
add
insl
add
insb
add
outsb
add
outsl
add
outsl
add
imul
stos
iret
push
in
mov
pushf
ds
jle
xchg
outsl
add
pop
pop
add
add
outsb
add
mov
in
cmpsl
push
lock
cmp
popf
aas
icebp
fwait
aaa
lock
xor
lahf
aas
out
xchg
das
out
xchg
das
lock
cmp
fwait
aaa
out
lcall
ss
xchg
sub
xchg
sub
xchg
daa
in
mov
lock
sub
cwtl
xor
nop
and
cltd
xor
sahf
xor
mov
mov
fnstcw
sbb
add
add
fidivl
js
faddl
jge
fstpt
fstpt
fstpt
fstpt
jp
fstpt
fdivrl
jge
fdivrl
fdivrl
fstpt
fstpt
fidivrl
fidivrl
jp
fnstcw
xlat
jae
xlat
jae
fidivrl
xlat
je
fdivs
jnp
out
add
jl
int3
insl
add
add
incl
add
add
incl
add
sub
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
es
addl
addl
addb
addl
addl
addl
addl
addl
addl
addl
jg
and
xchg
out
push
sub
iret
add
add
mov
cli
cli
cmc
repz
stc
cmc
repnz
clc
cmc
repnz
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
cli
cmc
repz
stc
cmc
repnz
sub
add
add
mov
icebp
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
pushl
sub
add
add
mov
icebp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
std
pushl
fildl
add
jo
mov
icebp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
std
pushl
daa
fildl
add
jo
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
cld
jp
fildl
add
jo
mov
cli
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
std
jge
and
jo
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
sti
std
incl
add
jo
rclb
incl
add
jo
mov
icebp
in
xlat
jmp
fmul
jmp
fst
jmp
jmp
jmp
fst
jmp
jmp
jmp
jmp
fcmove
jmp
fcmove
jmp
fcmovne
in
fidivrl
fiaddl
add
jo
arpl
clc
mov
arpl
mov
fs
mov
bound
mov
arpl
enter
lret
pushl
push
push
lcall
add
push
jns
shl
sub
in
push
jmp
xchg
jmp
mov
jmp
xchg
jmp
mov
jmp
test
loop
adc
in
sbb
out
sbb
loope
and
lret
jg
out
mov
add
or
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
add
cwtl
lcall
movsb
lcall
ret
add
lcall
out
lcall
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
