push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
pop
ret
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
movl
jmp
mov
add
mov
mov
push
call
add
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
ret
mov
pop
pop
ret
int3
push
mov
sub
push
push
push
movl
movl
mov
movl
cmpl
je
cmpl
je
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
push
lea
push
push
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
call
movl
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
call
lea
push
push
push
call
test
jne
call
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
jmp
call
push
call
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
push
add
loopne
add
test
xor
mov
xor
xchg
add
mov
and
aaa
call
and
aaa
ficomps
push
aaa
inc
and
je
lods
aaa
ret
and
aaa
mov
pop
cmp
inc
cmp
sub
cmpl
mov
pop
cmp
sub
jge
movsb
cmp
sub
cmp
push
sub
cmp
sub
lret
sub
cltd
sub
outsl
sub
cmp
add
push
ds
and
ds
sub
ds
sub
sub
ds
out
lods
sub
ds
sub
aas
in
and
shlb
sub
aas
add
daa
xchg
jl
xchg
aas
test
aas
push
daa
clc
aas
clc
xchg
sbb
add
hlt
es
xor
daa
sub
jmp
es
xor
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
inc
add
js
inc
push
jae
imul
js
fs
jle
jb
gs
inc
push
add
sub
popa
fs
jle
jb
gs
and
add
jb
dec
daa
jae
insb
adc
jnp
inc
clc
push
add
mov
jno
imul
arpl
jne
inc
clc
push
add
mov
sarl
outsl
scas
arpl
jno
je
fs
clc
push
add
mov
jb
insb
popf
pop
popa
outsb
xchg
jp
push
clc
push
add
hlt
adc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
add
jb
push
sub
inc
adc
jb
or
cmp
popa
fs
bound
gs
add
push
add
jecxz
jb
fnstsw
xor
jae
insb
clc
push
add
frstor
arpl
bound
fs
jp
add
bound
add
bound
movsb
jp
add
insl
add
cmpsb
jge
je
js
inc
pop
jae
arpl
push
add
inc
jne
popa
dec
dec
imul
jae
add
jo
je
js
push
add
jbe
sbb
add
jl
jo
jae
outsl
sbb
add
adc
adc
jnp
insb
clc
push
add
mov
jne
gs
imul
clc
push
js
clc
mov
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
add
out
add
clc
out
add
clc
out
add
clc
out
add
clc
iret
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
aaa
pop
add
dec
mov
jmp
sti
push
add
hlt
sbb
repnz
verw
add
pop
add
sti
push
add
popa
push
add
or
add
sub
add
add
push
add
jmp
add
cmc
push
add
sti
adc
add
push
pop
add
push
pop
add
popa
xlat
add
popa
jecxz
call
add
push
pop
add
and
add
adc
adc
adc
add
and
add
xor
add
adc
add
adc
add
mov
add
cmp
add
rcll
add
rcll
add
loope
add
loope
add
add
push
add
rcll
add
mov
xor
add
push
add
mov
push
add
xchg
push
add
xchg
push
add
clc
out
add
clc
out
add
clc
xlat
stos
add
scas
add
clc
out
add
clc
out
add
clc
out
adc
clc
dec
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
or
add
and
adc
clc
out
xor
out
call
out
add
clc
out
add
clc
out
add
clc
iret
add
sbb
pop
popa
and
add
clc
sub
add
out
decl
push
jmp
add
push
jmp
add
pop
jb
jb
clc
push
movsl
cmp
push
jmp
aaa
clc
push
jmp
add
add
add
cld
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
xchg
adc
add
adc
add
adc
add
add
popa
adc
add
add
push
adc
add
add
popa
adc
add
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
sbb
add
rcrl
add
loope
add
loope
add
rcrl
add
rcrl
add
mov
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
mov
add
aas
das
add
das
das
add
clc
cmp
add
or
cs
fistpll
add
adc
add
add
add
and
add
dec
cmp
jno
add
dec
cmp
cmp
push
mov
cld
push
mov
hlt
push
popf
cmp
push
out
hlt
push
jecxz
cld
push
ret
cmp
push
pop
cmp
push
pop
cmp
push
xchg
cmp
push
daa
cmp
push
xor
cld
push
inc
cmp
push
inc
cmp
push
mov
add
add
add
hlt
push
xchg
cmp
push
dec
cmp
push
fnstcw
cld
push
std
cmp
push
jecxz
cld
push
jmp
xor
push
int
hlt
push
mov
xor
push
mov
cld
push
add
hlt
push
jmp
cld
push
xchg
das
hlt
push
jmp
das
hlt
push
add
adc
dec
movlps
dec
out
add
adc
cmp
iret
adc
out
add
ficoms
add
add
adc
fcmovne
adc
jmp
adc
dec
sbb
adc
pop
push
adc
jmp
or
add
sti
push
add
adc
add
adc
add
add
add
cld
adc
loope
adc
shr
adc
mov
adc
cltd
fcoml
add
adc
dec
adc
add
adc
pop
add
add
pop
add
imul
add
imul
add
incl
add
stc
add
push
stc
add
aad
add
out
add
test
add
in
cld
add
ja
add
xchg
add
pop
std
add
cmc
cld
add
mov
add
or
add
and
add
inc
cli
add
sbb
add
pop
cli
add
dec
cli
add
jnp
add
mov
add
mov
add
ret
stc
add
add
sti
add
clc
iret
sbb
clc
mov
pop
add
adc
add
das
and
pop
and
or
add
aaa
and
jae
add
push
pop
add
push
pop
add
mov
add
pop
add
pop
pop
add
jne
add
out
add
out
add
fistpl
add
stos
push
add
jg
add
aad
add
movsl
push
add
xchg
push
add
clc
inc
push
add
cmp
add
stc
sbb
add
out
and
xlat
inc
add
mov
pop
sub
push
sub
sub
push
pop
sub
push
outsl
sub
push
push
sub
push
subl
cld
push
mov
hlt
push
shrl
push
test
hlt
push
xchg
sub
push
icebp
sub
push
fldcw
cld
push
iret
sub
push
mov
cld
push
mov
sub
cld
push
shrl
push
xlat
sub
push
jno
hlt
push
push
sub
push
test
hlt
push
jno
cld
push
aaa
sub
push
add
sub
push
movaps
push
or
cs
push
add
aad
add
sbb
adc
das
push
adc
jge
adc
xor
adc
cmp
sbb
adc
sbb
adc
mov
adc
mov
aad
add
adc
aad
adc
mov
pop
adc
leave
push
adc
loope
adc
insl
push
adc
jns
adc
addr16
adc
lea
adc
jne
adc
and
adc
cmp
adc
or
adc
sbb
repz
add
cld
add
aas
cld
add
inc
cld
add
cltd
sti
add
sub
sti
add
aas
sti
add
add
add
loope
add
push
sub
cmp
sub
mov
adc
adcb
add
xchg
adc
add
sub
add
sub
pop
sub
add
add
lahf
sub
add
adc
andb
add
out
sub
dec
sub
add
sub
add
add
sub
add
xor
clc
xor
clc
sbb
sub
clc
dec
sub
cmp
clc
gs
clc
daa
sub
clc
and
sub
lds
add
xchg
xor
clc
lahf
xor
clc
xorl
jg
add
pop
xor
clc
cmp
xor
clc
std
sub
mov
sub
sub
clc
adc
sub
mov
add
add
add
add
out
xor
mov
xor
push
or
xor
push
and
cld
push
inc
xor
push
pop
xor
push
addr16
push
ja
cld
push
imul
push
ja
cld
push
test
cld
push
stos
xor
cld
push
lds
cld
push
jmp
xor
hlt
push
hlt
push
out
cld
push
or
add
push
add
ss
push
jns
cld
push
jge
hlt
push
xorl
hlt
push
sbb
cld
push
dec
ss
push
add
sbb
sbb
cmpsl
xlat
sbb
xchg
iret
sbb
mov
sbb
cmpsl
fistps
add
xlat
sbb
add
daa
sbb
loope
sbb
sbb
lds
sbb
mov
push
sbb
jge
sbb
adc
in
sbb
daa
in
add
out
add
int3
sbb
sub
int3
sbb
ror
add
sub
add
sub
add
sbb
rorl
sbb
ret
push
sbb
add
add
push
or
icebp
xor
shll
add
xor
mov
xor
mov
add
mov
add
xchg
add
test
add
add
cs
add
add
add
cs
mov
xor
pop
xor
daa
xor
cmp
or
scas
or
dec
or
orl
add
fnsave
add
pop
sub
add
lea
sbb
sbb
add
pop
ss
xchg
xor
clc
mov
sub
clc
pop
sub
inc
sub
mov
sub
subl
clc
mov
add
add
mov
add
repz
xchg
es
jne
add
test
es
outsl
es
mov
add
js
sub
clc
int
add
add
js
add
js
add
js
add
js
add
js
add
js
andl
add
add
add
push
in
clc
xchg
gs
hlt
push
xlat
daa
cld
push
fadds
clc
xchg
lahf
daa
cld
push
movsl
daa
hlt
push
out
clc
xchg
cld
add
xchg
cmc
add
xchg
shll
hlt
push
out
clc
xchg
fiadds
clc
xchg
sub
push
jns
clc
xchg
ljmp
xchg
in
add
xchg
call
sub
push
in
daa
hlt
push
out
daa
cld
push
or
sub
push
jmp
inc
add
push
lahf
es
push
jmp
es
push
aad
cld
push
add
push
sbb
rcrl
add
pop
sbb
sbb
push
sbb
mov
push
sbb
ficomps
add
sti
push
add
sbb
pop
fistpl
add
out
sbb
sbb
sbb
jmp
and
add
adc
add
and
add
add
sbb
pop
adc
add
loope
add
sti
push
add
sti
push
add
pushf
repz
lds
clc
aaa
fsubp
jecxz
and
mov
fisttpll
xor
lret
push
movb
mov
fdivs
testb
out
cmp
lahf
cmp
add
pop
inc
lret
mov
jno
jle
rcrl
adc
cs
push
mov
jp
movsl
popa
and
dec
and
push
jae
scas
push
push
jp
sub
cmp
mov
ret
dec
pop
cmc
adc
add
imul
xor
scas
rclb
clc
imul
inc
xor
movsl
push
dec
mov
or
mov
pop
sbb
call
mov
add
add
add
outsl
movsb
mov
mov
or
pop
cli
pop
sub
xor
ja
or
jns
out
hlt
mov
adc
sbb
jle
movsl
add
sub
inc
movsl
xchg
lahf
dec
sar
jge
add
dec
call
insb
sub
les
andl
pop
adc
sub
clc
push
scas
jo
out
add
push
ss
sub
push
repz
jo
sub
clc
sub
push
repz
std
cmc
mov
sub
clc
es
add
inc
jne
adc
lret
sub
sahf
lret
std
int
lea
daa
inc
xchg
clc
sahf
lret
andb
pusha
push
xor
clc
push
lcall
cs
add
daa
add
adc
inc
or
lea
inc
cmpsl
sub
jge
mov
jmp
rcrb
sahf
and
call
rcrb
mov
mov
push
adc
mov
out
inc
jae
rcrb
jl
mov
jmp
add
add
add
add
lahf
and
sub
pop
daa
fcoml
popa
sub
stos
jmp
data16
adc
add
or
addl
mov
adc
int
bswap
pop
push
pop
jne
lods
inc
in
mov
add
mov
and
jae
xor
dec
lret
imul
rcrl
cltd
cmp
rclb
jl
add
add
std
incl
popa
jns
xor
add
adc
add
pop
mov
pop
xchg
iret
adc
add
shr
nop
inc
sbb
iret
adc
add
xchg
mov
push
sahf
mov
mov
add
sub
cmp
and
jmp
sub
std
ja
test
rorb
pop
pusha
add
sub
mov
sbb
xchg
push
shr
xchg
lret
add
lods
cltd
mov
outsl
and
or
mov
cmp
adc
push
iret
jmp
mov
rcrl
jmp
xor
cs
dec
pop
jecxz
stos
mov
pop
es
pushf
daa
adc
fucomp
add
push
jmp
ja
pop
in
cld
push
icebp
add
hlt
push
fnstcw
pop
in
add
push
stc
add
pop
mov
add
push
leave
add
pop
mov
add
push
stc
add
push
leave
jp
push
loope
or
or
push
leave
jp
push
loope
or
imul
mov
push
imul
cmp
leave
add
jmp
clc
adc
mov
add
sti
adc
jmp
push
adc
inc
push
add
sti
push
add
sti
push
add
push
add
repz
repz
add
sti
imulb
add
repz
add
repz
add
add
add
negb
jmp
repz
call
add
add
repz
add
repz
add
add
add
notb
add
rep
add
repz
add
add
testb
jmp
add
add
add
push
add
add
add
rclb
adc
rcrl
add
sbb
add
sbb
add
sbb
add
sbb
add
adc
xchg
sbb
add
sbb
add
sbb
add
sbb
add
or
add
and
popa
sbb
add
test
push
sbb
add
and
call
add
sbb
add
sbb
add
sbb
add
sbb
add
mov
or
clc
jmp
pop
clc
mov
or
mov
or
mov
or
or
clc
in
add
clc
mov
or
clc
loop
mov
clc
mov
or
clc
mov
add
add
add
add
out
add
clc
mov
or
clc
mov
or
clc
mov
or
mov
add
clc
mov
or
clc
mov
std
add
push
jmp
or
pop
jmp
add
pop
jmp
or
pop
jmp
or
push
jmp
or
jmp
add
std
push
jmp
or
push
sub
push
cli
add
push
jmp
or
pop
jmp
add
push
jmp
or
pop
jmp
or
push
jmp
or
pop
flds
push
jmp
jmp
add
add
repz
add
add
add
cld
and
jmp
add
add
add
xor
jmp
add
add
repz
add
add
jmp
sti
push
add
repz
add
add
add
add
repz
add
add
add
cld
fadds
fsqrt
adc
jmp
add
call
repz
add
repz
add
add
jmp
inc
sbb
add
adc
add
adc
add
adc
add
adc
loope
cmp
loope
rolb
rcrb
add
adc
loope
sub
loope
mov
rcll
or
rcll
mov
mov
adc
add
sbb
xchg
adc
mov
adc
add
adc
popa
adc
add
or
add
and
add
add
add
popa
adc
add
test
clc
lods
or
lods
or
clc
fldl
or
lods
or
lods
or
clc
roll
clc
lods
or
lods
or
clc
filds
pop
clc
lods
or
lods
or
clc
lods
or
clc
lods
or
lods
or
clc
fldl
add
lods
or
lods
or
clc
ljmp
add
add
add
rolb
clc
lods
or
lods
or
clc
lods
or
clc
fiadds
or
lods
or
lods
or
clc
lods
or
sti
push
jmp
or
push
flds
notl
jmp
or
push
jmp
add
pop
jmp
or
pop
fildl
or
jmp
or
pop
jmp
or
repz
jmp
or
jmp
add
push
jmp
or
push
sub
push
cli
add
push
jmp
or
pop
jmp
add
push
jmp
jmp
bnd
jmp
add
add
repnz
fprem
verw
add
jmp
repnz
add
add
inc
add
add
add
repnz
sbb
add
add
call
repz
jmp
add
jmp
lahf
sar
add
jmp
repz
add
jle
add
add
jmp
hlt
xlat
add
inc
rorb
popa
or
and
push
adc
add
or
add
add
add
add
or
loope
inc
rolb
and
xchg
add
sarb
loope
js
loope
cmp
rcll
roll
rol
add
or
add
or
add
adc
add
or
add
roll
mov
or
add
sub
popa
or
add
lods
or
clc
lods
or
clc
fdivrp
or
lods
or
or
lods
or
clc
lods
or
lods
or
lods
or
clc
pop
clc
lods
or
or
lods
or
clc
sar
clc
lods
or
or
lods
or
clc
push
clc
lods
or
or
lods
or
clc
lods
or
lods
or
lods
or
add
add
lods
or
lods
or
clc
ljmp
sbb
jmp
or
pop
jmp
cld
add
jmp
or
pop
jmp
or
push
jmp
or
push
frndint
push
jmp
or
push
jmp
cld
cmp
jmp
or
pop
jmp
cld
add
push
jmp
or
pop
jmp
or
pop
jmp
or
pop
jmp
cld
cld
push
jmp
jmp
in
push
add
je
add
add
jmp
repnz
add
push
or
add
repz
call
add
add
repz
add
repnz
add
adc
add
add
pop
add
repz
jmp
hlt
cmp
jmp
repz
call
aam
add
add
call
mov
add
mov
add
mov
mov
add
mov
rcll
movsb
roll
popa
shll
shll
push
mov
or
popa
shll
push
shll
push
mov
add
and
addb
roll
mov
push
add
rcrl
rcrl
adc
cmp
loope
js
rol
cmp
sarl
adc
loope
push
add
mov
or
mov
lods
sti
dec
clc
lods
cld
repnz
fisttpll
add
lods
sti
push
clc
lods
sti
adc
clc
add
rorb
clc
lods
sti
je
lods
sti
xor
lods
cld
lret
or
clc
lods
sti
and
lods
cld
stos
clc
lods
sti
add
lods
sti
test
lods
sti
inc
clc
lods
cld
ljmp
sti
pop
clc
lods
sti
sbb
lods
cld
lcall
sti
jl
lods
sti
cmp
lods
cld
fisttps
pop
clc
lods
sti
insb
clc
lods
sti
sub
lods
cld
mov
add
add
add
push
jmp
sti
je
jmp
cli
xchg
push
sti
push
jmp
sti
ljmp
or
pop
jmp
sti
sub
jmp
or
pop
jmp
sti
sbb
jmp
sti
cli
push
jmp
sti
mov
push
notl
jmp
sti
loop
jmp
or
cmp
jmp
sti
and
jmp
or
push
jmp
jmp
mov
add
mov
add
mov
dec
add
xchg
roll
add
jmp
andl
sub
cli
add
add
arpl
jmp
push
leave
add
add
add
inc
xor
jmp
xor
jmp
add
xchg
add
and
jmp
add
add
add
jmp
repnz
add
add
add
jecxz
add
jecxz
call
mov
sbb
sarl
add
mov
mov
xchg
mov
incb
mov
add
scas
push
add
mov
push
add
jo
add
add
pop
push
inc
add
inc
xor
add
pop
push
add
sbb
push
add
xor
or
sti
sidtl
pop
push
addl
xor
add
cs
addl
lret
sbb
sysret
add
or
or
stos
or
pop
fimuls
add
mov
add
xor
leave
or
call
adc
add
mov
roll
add
add
add
add
in
or
clc
fldl
adc
fildl
add
mov
pop
clc
mov
push
clc
ret
add
clc
mov
add
fiaddl
add
mov
add
clc
lods
add
clc
lods
add
clc
lods
add
clc
lods
add
clc
lods
add
clc
lods
add
clc
lods
add
clc
lods
add
clc
scas
add
clc
scas
add
clc
push
call
add
push
jmp
clc
push
jmp
add
push
jmp
clc
push
jmp
clc
push
ljmp
push
ljmp
push
in
add
push
in
clc
push
in
add
push
in
clc
push
in
add
push
in
clc
push
in
add
push
in
clc
push
jmp
bnd
adc
push
repz
add
push
jmp
add
push
jmp
add
push
call
add
add
add
clc
push
call
jmp
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
adc
add
adc
add
loope
add
loope
add
rcrl
add
rcrl
add
loope
add
loope
add
rcrl
add
rcrl
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
or
add
sbb
add
sbb
add
sbb
add
or
fstpl
or
sbb
sbb
add
or
fstpl
or
sbb
sbb
add
roll
clc
inc
add
clc
addl
or
pop
add
clc
lahf
add
clc
lahf
add
clc
pop
add
clc
scas
add
clc
das
add
clc
popl
or
or
outsl
add
add
out
add
clc
dec
add
clc
iret
add
clc
mov
or
aaa
add
clc
out
or
add
clc
pop
add
clc
xchg
add
clc
pop
add
clc
xchg
or
cmpsl
add
clc
daa
add
clc
testl
or
add
clc
out
or
push
jecxz
lock
arpl
add
out
add
pop
addr16
push
scas
add
push
daa
add
pop
add
xchg
add
push
popl
lock
pop
add
pop
incl
add
ja
lock
lahf
add
push
pop
add
pop
mov
add
push
pop
add
push
xlat
add
pop
out
add
pop
add
push
aaa
add
push
scas
add
pop
pop
add
pop
jg
lock
pop
add
push
popl
pop
testl
lock
daa
add
push
lahf
add
pop
add
cld
push
add
add
push
add
push
add
sti
push
add
push
add
cld
push
add
hlt
push
add
sti
push
add
cld
push
add
sti
push
add
push
add
cld
push
add
cld
push
add
push
add
sti
push
add
sti
push
add
push
add
hlt
push
add
hlt
push
add
hlt
push
add
add
add
add
push
add
sti
push
add
push
add
sbb
or
pop
push
or
push
adc
or
cwtl
adc
or
pushf
adc
or
sbb
or
cld
sbb
add
add
add
adc
or
dec
push
or
pop
adc
or
insb
adc
or
cmp
or
lods
sbb
add
xchg
adc
or
les
or
movsb
sbb
add
sbb
add
sbb
add
or
test
or
clc
stos
add
clc
inc
add
clc
cli
add
clc
xchg
add
clc
push
or
add
clc
mov
add
clc
lods
add
clc
lods
add
clc
dec
add
clc
dec
add
or
mov
clc
in
add
clc
in
add
clc
int3
add
add
int3
add
clc
in
add
clc
in
add
clc
sub
or
sub
or
int3
add
clc
int3
add
clc
mov
or
mov
or
and
or
and
or
hlt
add
clc
hlt
add
clc
push
mov
add
mov
add
ret
push
ret
push
push
add
pop
push
add
pop
add
push
add
add
push
add
pop
repnz
push
repnz
icebp
push
bound
add
bound
pop
xchg
add
push
xchg
add
push
inc
add
pop
inc
add
pop
rolb
icebp
push
rolb
push
inc
add
pop
inc
add
pop
jb
icebp
push
jb
icebp
push
loop
add
loop
add
out
add
push
out
icebp
push
outsb
add
pop
add
pop
add
cld
sbb
add
sti
sbb
add
cli
sbb
add
add
add
add
sbb
add
cld
sbb
add
sbb
add
sti
sbb
add
pop
add
pop
add
cli
pop
add
cld
pop
add
sti
pop
add
sti
pop
add
cli
pop
add
cld
pop
add
sti
pop
add
pop
add
pop
add
sti
pop
add
cli
pop
add
sti
pop
add
cli
pop
add
out
sbb
add
ficomps
or
push
adc
add
sbb
add
sbb
add
sbb
add
or
into
sbb
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
adc
add
mov
add
clc
pop
add
clc
pop
add
clc
iret
add
clc
pop
clc
iret
add
clc
pop
clc
mov
pop
clc
testl
pop
clc
pop
add
clc
movl
pop
clc
testl
pop
clc
mov
add
clc
sbb
clc
roll
pop
clc
leave
add
add
addl
pop
clc
addl
or
inc
add
clc
addb
clc
add
clc
loopne
or
pusha
add
clc
push
dec
add
pop
lret
push
jmp
add
push
icebp
add
push
loope
std
push
in
add
push
aad
std
push
cmc
add
push
std
add
push
jmp
cmc
push
sti
add
push
repz
push
jecxz
std
push
out
add
push
xlat
add
std
push
testl
std
push
call
add
push
lock
push
loopne
std
push
in
add
push
aam
std
push
hlt
add
push
cld
add
push
ljmp
push
repnz
push
loop
std
push
add
sti
adc
sti
adc
jmp
call
add
out
adc
icebp
add
or
repz
or
repnz
or
add
and
repz
and
jecxz
and
jecxz
and
repnz
pop
or
hlt
pop
or
in
pop
or
add
or
lcall
or
negl
or
out
sbb
lcall
or
negl
or
out
sbb
sbb
in
sbb
add
or
or
xchg
push
push
add
or
push
push
or
push
or
or
push
push
or
push
aaa
or
push
inc
or
push
push
or
push
push
or
push
push
or
push
daa
or
push
pop
or
push
pop
or
push
aaa
or
push
push
pop
movhps
movhps
push
push
push
push
movzbl
shufps
push
sldt
add
add
add
add
mov
sysret
leave
adc
jmp
adc
out
mov
sysret
leave
adc
mov
adc
jmp
pop
adc
mov
adc
push
push
leave
push
pop
out
rclb
out
sbb
loopne
sbb
loopne
sbb
adc
sbb
add
sbb
icebp
sbb
icebp
adc
sbb
loop
sbb
add
movsb
sbb
adc
sbb
les
sbb
ret
sbb
repnz
add
jecxz
add
jecxz
repnz
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
pop
fmull
cmc
pop
adc
in
pop
or
in
add
fstpl
cld
or
pop
hlt
or
pop
in
or
pop
fmull
cmc
pop
adc
in
pop
add
in
add
fstpl
cld
or
pop
hlt
or
pop
in
or
in
cld
and
or
and
or
and
or
aam
or
add
or
hlt
fmuls
sbb
in
or
aam
or
jmp
notb
pop
loope
push
or
add
cmc
add
sbb
out
sbb
fdivrp
pop
psubw
push
adc
jmp
adc
or
adc
or
adc
or
adc
call
add
std
out
add
ud2
adc
pop
or
les
adc
adc
or
push
or
push
mov
push
push
cmpsl
or
push
or
pop
add
or
pop
mov
pop
pop
cmpsb
or
pop
stc
add
sbb
add
sbb
sbb
imul
sbb
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
test
sbb
add
sbb
add
leave
sbb
repnz
sbb
loop
sbb
jecxz
sbb
adc
sbb
add
sbb
repz
enter
scas
add
clc
scas
add
clc
mov
add
mov
add
mov
add
mov
add
clc
mov
add
clc
test
add
clc
lds
add
mov
add
clc
movl
add
add
add
clc
roll
add
push
or
push
adc
push
sbb
push
adc
push
test
add
push
leave
add
push
mov
add
push
dec
add
push
sub
push
or
push
jmp
add
push
jmp
add
push
jmp
clc
push
ljmp
push
out
clc
push
icebp
add
push
in
add
push
flds
clc
push
roll
add
push
leave
add
push
flds
clc
push
sub
push
or
push
imul
clc
push
add
hlt
push
add
push
add
cmc
push
add
push
add
out
mov
add
repz
add
call
add
jmp
add
jecxz
add
jmp
fistl
add
sti
push
add
sbb
vunpcklps
xor
cltd
add
mov
xor
iret
aaa
jmp
sti
jae
push
test
ret
mov
enter
insb
or
jle
push
imul
pcmpgtb
sbb
mov
test
ficompl
dec
ja
insl
mov
aam
push
and
cmpl
adc
xor
mov
std
add
dec
add
cmp
add
cli
or
or
ja
imul
data16
push
movl
mov
cs
lds
mov
lods
jb
xlat
xor
filds
js
inc
out
rclb
repz
aad
fisubrs
lret
aas
subl
add
mov
mov
test
add
mov
xor
outsl
out
inc
push
mov
aas
inc
fmull
mov
loop
pusha
aad
aad
xorl
xchg
iret
mov
shrb
insb
or
fwait
push
pop
push
bound
mov
push
jle
add
jge
mov
add
add
movsb
push
xchg
xor
pusha
stc
sti
daa
mov
xchg
mov
out
test
cltd
lods
xchg
lods
mov
xor
sbb
lret
xchg
test
pushf
mov
push
inc
fnstsw
je
hlt
inc
lret
sub
dec
mov
push
loop
rorb
scas
add
push
lods
loope
mov
je,pn
lods
cltd
ret
ficompl
and
test
adc
ss
stos
mov
int3
sbb
mov
daa
fldpi
or
or
das
push
lcall
mov
notl
sub
fs
mov
push
enter
fs
push
dec
bound
leave
add
in
aaa
or
in
push
je
xor
lds
push
ret
xor
arpl
aad
arpl
cmp
jp
fimull
in
imul
or
mov
jge
test
lock
or
aam
imul
imul
popf
push
xchg
call
incb
inc
mov
mov
fsts
fstl
addr16
mov
mov
mov
in
mov
jmp
xchg
mov
arpl
dec
push
sti
mov
cmpsb
clc
std
mov
stc
in
mov
jns
or
in
sbb
xchg
pop
dec
add
push
cmp
jo
pusha
dec
jecxz
addr16
xchg
test
push
jbe
mov
mov
add
add
add
add
outsl
aad
mov
or
mov
or
popf
fldl
pop
or
adc
xlat
mov
cmp
fidivs
loopne
fs
mov
xchg
inc
pusha
push
mov
nop
or
jnp
cli
cmc
mov
sub
sub
pop
clc
adc
popl
xchg
add
or
jno
mov
mov
xor
popf
sub
ja
incl
scas
xchg
ret
movsl
dec
cmp
decl
add
and
cmc
xor
clc
add
nop
popa
sbb
movsb
ret
andl
jbe
dec
sub
out
pop
cmp
xor
shlb
sub
ds
lds
dec
aas
mov
aaa
cmp
pusha
ficoms
cmp
orb
in
pop
mov
mov
pop
arpl
icebp
lret
mov
add
push
mov
mov
mov
add
cs
push
sub
fiadds
sub
mov
jns
ret
repnz
pop
pop
sbb
add
sbb
adc
xor
sub
insb
fs
ja
iret
sub
inc
dec
dec
sbb
enter
rcr
jp
cli
pop
iret
hlt
jecxz
push
mov
aam
lods
mov
mov
cwtl
xchg
add
dec
and
repz
push
out
popa
lods
mov
add
add
add
add
jo
aaa
push
and
add
fnstcw
sub
test
movsl
cli
imul
loopne
inc
lods
sub
pop
mov
or
dec
mov
cmp
imul
test
cmp
lds
xchg
movsl
les
imul
sbb
loope
dec
sub
fcom
cli
push
add
stc
inc
daa
fiadds
pop
ss
push
jo
pop
es
mov
mov
mov
fs
push
xchg
jle
out
shrw
in
push
sub
sub
or
push
int
lods
ds
inc
add
outsb
faddp
aam
pinsrw
imul
push
add
jno
int
pop
hlt
enter
mov
mov
xchg
jge
lock
xor
inc
push
bound
adc
mov
push
inc
pop
aam
pop
jne
out
test
mov
pop
lods
sarb
stos
fldcw
movsl
pop
and
add
xor
dec
orb
or
push
add
fisubs
jb
xor
cltd
gs
xor
push
test
dec
mov
test
lret
outsb
lea
or
jo
dec
mov
xchg
pushf
rep
iret
sub
mov
jnp
lahf
cmp
pop
push
leave
xchg
add
mov
xor
jg
xlat
cs
repnz
mov
add
dec
lcall
jns
outsl
sbb
add
gs
ds
std
insl
adc
pushf
xor
int3
xchg
lcall
cmpsb
test
mov
and
outsb
mov
fstps
cs
out
pop
dec
div
inc
pushf
test
shll
repz
mov
ljmp
ja
shll
pop
jno
mov
movsl
xchg
mov
mov
add
sub
ja
mov
pop
call
adc
clc
or
sbb
inc
adc
push
jb
cwtl
xorl
push
mov
xchg
hlt
mov
adc
ret
xchg
call
int
mov
sub
sub
movsb
cmp
fisttpll
pop
push
xchg
flds
pop
cmc
fst
lahf
add
add
and
repz
mov
cli
fcmovnb
test
enter
rcl
pop
lds
mov
cmc
leave
mov
call
xchg
xchg
pop
dec
mov
into
jmp
sarl
inc
cmp
decl
inc
loop
mov
mov
and
fiadds
and
popa
out
movsl
pop
push
add
add
add
add
pop
xchg
xor
xchg
repnz
int3
mov
inc
sbbl
pop
lock
cli
cmc
sub
adc
scas
xchg
jmp
mov
rclb
push
pop
and
stos
add
ljmp
push
stc
xor
push
into
fiadds
jbe
xchg
loope
push
pop
shrl
adc
add
add
add
bound
sbb
lods
xor
insb
rcrb
cmp
adc
inc
xchg
je
imul
and
cmp
add
push
adc
or
xchg
test
rorb
push
inc
sahf
mov
dec
nop
data16
inc
xchg
ror
jge
add
cmpsl
or
xlat
or
add
add
add
cwtl
jae
jo
daa
lret
imul
dec
std
pop
cmp
gs
loope
lds
jg
testl
adc
arpl
add
scas
xor
add
test
mov
inc
add
pop
lret
push
jae
lea
sub
jns
adc
cmpsb
adc
or
in
mov
add
add
add
add
test
popf
repnz
repz
cmp
mov
stos
std
cs
and
repnz
outsb
imul
push
mov
or
aaa
jae
xchg
dec
cmp
pop
repz
in
jns
out
mov
jp
pop
inc
dec
xor
fmuls
and
or
cmp
inc
pop
test
add
dec
out
mov
std
aaa
adc
loopne
pushf
out
jle
sbb
push
insl
push
gs
sbbl
lods
add
inc
pop
sahf
arpl
inc
js
cmp
cmp
ss
ss
outsl
xor
mov
ss
mov
cmp
jo
cmp
scas
and
sbb
xor
jae
add
inc
sub
push
negb
push
push
push
hlt
inc
add
loope
or
aaa
test
or
and
adc
outsb
ret
adc
fbld
and
fisubl
dec
enter
not
ja
pushf
sbb
inc
pop
jnp
into
int3
insb
data16
insl
xchg
xchg
dec
outsl
addb
ret
push
sub
adc
int3
test
fidivrs
arpl
inc
cmp
cwtl
mov
pusha
cmp
and
arpl
xor
pop
fnsave
leave
mov
dec
aam
dec
cmpsl
jecxz
jo
cmpsb
dec
in
jno
mov
sub
jnp
in
dec
test
scas
dec
add
les
inc
addr16
inc
inc
push
jo
inc
in
int3
inc
repnz
inc
cmp
mov
adc
icebp
push
notb
push
scas
divl
popa
mov
dec
push
clc
push
lcall
push
add
mov
pop
push
in
pop
pop
scas
pop
and
movsb
pop
mov
jmp
mov
outsb
pop
cld
push
xor
loopne
enter
divl
mov
pop
out
sub
jns
adc
add
add
add
add
and
push
das
xchg
and
int3
jl
adc
in
stos
adc
inc
imul
mov
shl
out
xchg
std
push
xlat
and
sbb
sbb
fadd
ret
shll
mov
lcall
push
out
test
dec
inc
mov
or
lea
mov
in
mov
add
add
add
jp
inc
mov
scas
leave
insb
jb
mov
loop
insb
les
out
push
mull
gs
packsswb
in
in
pop
lcall
xor
push
or
fldenv
test
fld
push
and
xor
out
pop
mov
or
push
cmp
pusha
das
sub
mov
cmp
add
cld
cmp
push
jle
repz
pop
test
cmpsl
aad
add
mov
jle
test
xchg
xchg
add
xchg
fisttpl
jbe
roll
scas
test
inc
pushf
mov
nop
popf
int
ret
cwtl
cli
lock
fwait
or
mov
out
loopne
pop
xchg
sbb
add
add
add
xchg
jns
mov
xchg
lahf
push
mov
mov
jle
out
orl
imul
adc
test
andl
add
ret
into
in
pop
test
pop
data16
dec
inc
movsb
stos
aad
jmp
or
outsb
lods
cld
pusha
lods
lods
sbb
xor
loopne
mov
add
mull
mov
adc
mov
mov
mov
xorb
mov
loop
mov
sub
insb
mov
xchg
adc
lods
push
mov
sub
mov
inc
pop
mov
xchg
scas
jge
add
xchg
sub
mov
ljmp
add
add
add
ja
xchg
fiadds
ret
frstor
in
mov
pop
push
or
jle
add
cmc
pusha
mov
mov
inc
hlt
bound
cmp
dec
xchg
aam
shrb
rorb
les
fwait
imul
sub
shlb
lods
lea
adc
inc
pop
movsb
xlat
fnstenv
stos
mov
stos
nop
add
mov
in
and
push
jo
mov
lret
outsb
das
cmp
adc
push
fdivl
mov
data16
dec
cwtl
mov
je
loop
adc
pop
out
jmp
add
sbb
sbb
add
xchg
rcrl
in
sbb
xor
or
lds
push
add
add
add
fs
ret
lods
sti
mov
xchg
pop
fistpl
lahf
mov
cmp
add
mov
jnp
adcb
mov
and
aas
lret
sub
sbb
mov
add
rcrl
decl
mov
fwait
or
pop
jbe
sub
hlt
in
dec
and
push
rorl
out
jnp
add
ret
dec
negl
lret
cmpsb
or
jae
mov
iret
fstps
inc
jns
fs
xlat
jmp
in
repnz
outsb
push
add
push
or
add
out
mov
sbbb
sbbl
shrb
add
mov
lcall
dec
xchg
sub
psubb
cld
dec
push
mov
cmpsb
add
xchg
test
sub
push
and
in
lcall
leave
rcll
inc
arpl
imul
shll
sbb
in
inc
loope
clc
mov
jl
scas
int3
mov
out
inc
inc
xor
in
inc
pop
call
xchg
shlb
pop
sub
pop
add
mov
lods
dec
sbb
jmp
loope
cmp
xchg
push
pop
stos
xor
lea
rorb
fwait
push
push
adc
ret
push
xor
js
xchg
andb
aam
inc
popf
scas
xchg
std
pop
ljmp
pop
pop
push
sbb
repz
xchg
rcrl
sahf
in
mov
movsb
decl
outsb
add
sub
lea
es
add
data16
jbe
in
xchg
sbb
rcl
mov
fidivrl
push
es
mov
pop
push
stos
insl
add
loop
addr16
ds
outsb
xor
es
jge
mov
rol
vcvtsd2si
arpl
and
ljmp
add
add
add
add
mov
lcall
xchg
push
mov
scas
stos
push
cmp
push
mov
fcomp
cli
add
sbb
or
lret
push
push
cmpsb
in
push
out
inc
push
mov
sbb
shll
addb
add
xor
inc
mov
cmp
mov
jmp
cmp
insl
popf
fisttpl
dec
add
add
add
add
add
shlb
ret
test
insb
test
add
push
es
shr
mov
pop
mov
xchg
xor
jno
test
pop
mov
add
cltd
cmpl
cmpsb
pop
pop
les
dec
sub
icebp
mov
subb
aam
push
mov
push
bnd
fstpt
je
ret
xchg
jbe
out
mov
les
cmpsb
enter
jmp
loope
jle
pause
and
adc
stc
sarl
popf
test
and
js
lahf
test
outsb
aam
gs
adc
push
pop
mov
shll
add
or
or
add
cmp
cmp
fistl
sbb
add
add
add
add
or
add
ficomps
add
clc
or
xor
or
out
push
xorb
fisubrs
movsl
in
repz
xchg
pop
mov
push
dec
scas
jmp
jo
lock
inc
cs
push
insb
les
pop
std
cmpsl
in
call
test
dec
iret
fs
cmp
mov
add
imul
pusha
push
xor
cmp
std
add
rorl
or
mov
sub
dec
lods
sub
loopne
and
jp
and
add
add
inc
fidivrl
or
pusha
jge
push
jo
call
cmpsl
jg
loop
mov
test
inc
pop
iret
xchg
inc
lods
sbb
out
cs
adc
mov
pop
and
inc
lods
cltd
xchg
inc
mov
sahf
sahf
mov
mov
in
outsl
and
and
xchg
and
adc
sbb
push
sbb
call
lea
mov
pop
int
mov
mov
jp
roll
add
add
add
add
enter
stc
xor
adc
sbb
sub
cmp
xchg
ja
pop
add
sub
lods
cmp
push
ss
inc
xor
xchg
in
cli
sbb
roll
in
mov
call
ljmp
sbb
dec
ffree
jl
or
dec
add
add
add
add
add
push
into
mov
pushl
fldt
loop
movsl
inc
or
xchg
xlat
clc
xchg
mov
lea
jmp
add
push
mov
xor
sub
fst
or
or
add
pop
add
inc
or
call
shrb
aad
daa
test
sbb
in
mov
stc
add
es
cwtl
fidivrl
scas
test
push
push
cmp
jns
push
pop
and
pop
insb
movsl
sub
sbb
push
mov
insb
dec
loop
or
push
shrl
scas
scas
in
mov
out
xchg
lret
and
in
xchg
inc
xor
push
scas
lea
mov
pushf
jecxz
mov
or
jne
jns
imul
or
fwait
imul
std
mov
fsubrl
pop
push
lock
out
mov
mov
add
mov
jbe
mov
ret
pop
dec
out
outsb
push
push
cmp
sahf
fimull
scas
fwait
outsl
dec
mov
std
pushl
insb
mov
shl
lock
in
push
scas
adc
and
xor
mov
and
clc
shl
sub
add
sbb
push
add
push
fcoms
mov
mov
adc
mov
xor
lock
or
and
mov
xor
sub
inc
mov
add
loope
enter
pushf
jge
push
stos
dec
xor
mov
lods
sbb
mov
ss
and
or
add
aas
ret
adc
sbb
push
adc
jns
lret
scas
aad
sbb
jae
mov
add
lods
fbld
pop
rcl
inc
mov
mov
stos
subl
adc
pop
mov
jbe
mov
inc
ja
jnp
out
pop
push
scas
push
cmp
push
adc
pop
add
sub
scas
imul
test
iret
mov
std
loope
and
rorb
pop
or
push
mov
lea
es
mov
sbb
ja
movsb
mov
mov
mov
or
stos
cmp
out
scas
dec
mov
push
iret
push
pop
pop
jmp
rorb
in
dec
ret
push
xchg
call
mov
add
add
add
add
add
sub
push
loope
lods
addr16
add
jp
xor
inc
mov
and
test
pop
movsl
inc
sub
insl
mov
or
pop
mov
add
push
loopne
or
mov
loopne
push
dec
and
sarl
cs
xchg
push
inc
push
mov
jb
cwtl
movb
mov
rorl
push
aaa
or
pop
int3
jbe
and
dec
xor
ljmp
xchg
sub
mov
iret
in
push
xchg
and
imul
test
in
outsl
loopne
add
pop
add
sbb
push
dec
lcall
jmp
cmp
push
or
insl
leave
and
dec
into
rcrb
das
roll
popa
fadds
addr16
add
and
lds
xlat
test
and
adc
jl
loopne
in
lods
leave
mov
adc
filds
cmpsb
xor
cmpsl
push
adc
jne
hlt
das
mov
lret
pusha
cmpsl
cmpsb
jne
add
mov
mov
pop
jecxz
cmp
popf
dec
mov
add
cmovg
jecxz
sub
or
movsl
jg
add
out
jle
fadd
stc
repnz
fildl
cmpsl
rclb
add
adc
xor
mov
out
push
lret
pop
push
xor
imul
add
xchg
aas
rcrb
clc
shll
add
and
sbb
or
adc
cmpsl
test
push
lret
outsl
xor
inc
arpl
movsb
pop
push
cltd
mov
cmp
jp
sbb
push
std
cwtl
mov
into
iret
out
lock
cmp
mov
or
ja
popa
into
js
mov
cld
sbb
icebp
sub
push
mov
pop
test
sub
inc
dec
movsl
mov
nop
cmp
sbb
cwtl
cmp
es
je
mov
inc
data16
lret
or
pop
xor
pop
xor
es
movsb
or
dec
push
ret
mov
inc
add
sbb
adc
fisubrs
fstpl
dec
jmp
jb
adc
jae
ljmp
add
dec
frndint
mov
hlt
pop
push
mov
adc
orb
mov
push
into
clc
pop
iret
leave
rolb
push
and
cmp
aad
cmc
mov
sub
add
add
add
add
imul
mov
lock
mov
ficoms
outsl
enter
dec
dec
sub
mov
sbb
sti
and
dec
push
add
pop
movsb
fnstenv
rclb
add
scas
mov
popl
std
jnp
shrl
js
pop
std
jae
or
jp
cmp
and
inc
dec
inc
xor
pop
dec
jbe
test
push
shl
imul
ss
mov
or
out
sub
lea
out
and
test
outsl
enter
mov
jl
inc
pop
lock
stc
jo
test
das
cwtl
inc
mull
test
cli
mov
dec
les
mul
repz
xor
cmpsb
test
lock
add
cmp
xor
or
dec
jle
mov
lea
sbb
dec
js
jmp
jno
stos
insb
dec
call
sub
ret
cmp
iret
aaa
divb
popa
jbe
push
xchg
outsb
lret
shll
faddl
dec
xchg
mov
jge
pop
pop
fwait
mov
add
add
add
test
mov
cltd
mov
enter
jnp
scas
je
hlt
fdivs
in
stos
mov
pop
icebp
and
jecxz
and
shrb
ss
sub
cmp
in
pusha
cld
movsl
movsl
dec
cmc
outsb
data16
xor
jp
cmp
call
lds
add
inc
pop
int
cli
pop
push
out
add
jg
jbe
test
cmp
cltd
div
dec
scas
out
mov
mov
fisttpll
and
in
fs
mov
inc
or
pop
fidivrl
pusha
inc
sbb
adc
add
clc
lcall
stos
cmc
fildl
enter
fmul
cmp
cld
aas
rclb
cmc
andl
add
add
add
add
jp
shr
ffreep
mov
xlat
mov
test
es
fwait
or
test
add
aas
pop
pop
out
jl
in
ret
ss
test
mov
mov
mov
stos
imul
fs
lds
in
mov
mov
mov
pop
leave
add
dec
dec
add
es
mov
and
lock
adc
or
fstpl
clc
sahf
pusha
inc
stc
pop
or
add
hlt
cmp
mov
mov
shlb
pop
scas
mov
in
sbb
sub
clc
shr
lock
mov
cmp
xor
mov
sub
pop
push
inc
mov
sbb
test
inc
push
imul
mov
mov
add
add
add
mov
dec
cs
sbb
stc
mov
inc
push
xchg
push
in
and
push
cli
push
xchg
cmp
pop
sbb
pop
pushf
shrl
pop
mov
sbbb
lret
fsubs
xor
scas
mov
jne
push
cmpsb
fwait
jb
call
inc
test
aad
das
rolb
add
add
add
add
mov
and
mov
das
in
cmp
test
sbb
sar
negl
dec
scas
sbb
mov
pop
in
mov
mov
lret
sbb
jg
les
inc
adc
pop
out
or
adc
add
add
add
add
pop
out
or
mov
pop
jle
imul
divl
lds
sbb
into
loopne
iret
cwtl
aaa
pextrw
pop
lea
sbb
popa
xchg
movsl
js
nop
outsl
lahf
roll
adc
mov
jge
dec
ja
sti
popf
outsb
out
test
bound
push
push
push
inc
push
and
dec
cmp
lcall
add
add
add
cmp
adc
addl
pop
in
insl
int
fcomps
pop
pusha
fchs
ss
or
loop
aaa
or
mov
inc
popf
and
movsl
pop
dec
in
push
or
shlb
jge
fdivs
xchg
aaa
movsb
add
stc
int
orb
pop
pop
xor
adc
xchg
daa
dec
mov
add
add
add
add
aas
dec
jecxz
push
int3
sar
cmp
shlb
out
sub
les
sbb
icebp
add
in
insb
inc
clc
xor
rcll
push
add
mov
rcl
inc
out
cltd
sub
in
test
push
push
ljmp
mov
mov
lods
scas
ret
outsb
fstpt
add
xchg
sti
add
call
jbe
sub
stc
into
pop
div
adc
ss
mov
call
testl
and
add
or
pop
lcall
sub
insl
xchg
xor
arpl
xchg
clc
insl
sbb
xor
stos
sbb
dec
mov
and
test
sti
pop
inc
test
insl
xchg
outsb
add
filds
mov
xor
sarl
clc
sub
cmpl
push
dec
cmp
mov
dec
roll
xor
ret
pop
lods
test
sbb
int3
push
stc
cwtl
mov
roll
mov
pushl
popa
push
jo
mov
fldenv
add
add
add
add
jbe
push
push
leave
and
jmp
pop
repz
add
mov
push
mov
push
push
lcall
insb
push
das
mov
cmp
xchg
sti
xchg
add
and
fisttpll
xchg
sbb
add
sahf
xchg
push
daa
cli
jae
mov
dec
outsl
jno
test
lods
faddl
insl
adc
lret
add
mov
sbb
or
sahf
sti
out
mov
mov
fcompl
lods
sbb
mov
scas
sbb
addr16
lahf
add
out
inc
aaa
imul
icebp
xchg
xchg
loopne
sahf
xchg
push
and
aas
imul
xchg
dec
jbe
loope
xlat
or
add
add
add
cmp
mov
jmp
xor
xorl
not
loopne
xchg
clc
sub
cmpsb
in
stos
jg
add
shrb
rcrl
cwtl
cmc
jge
loope
ret
outsl
ja
mov
lret
hlt
push
pop
fstpl
mov
push
nop
inc
mulb
into
xchg
fwait
dec
test
cmp
fnstenv
pusha
add
jo
push
and
xor
sbb
add
inc
out
pop
jg
add
testl
insl
mov
mov
xchg
bound
ja
inc
out
call
idivl
lea
mov
pop
mov
rcll
jp
push
arpl
and
add
add
add
adc
lcall
rclb
ret
jmp
xchg
xchg
mov
popf
sbb
es
adc
mov
out
mov
js
or
sahf
rcll
pop
mov
test
push
lock
jb
cwtl
and
mov
inc
push
and
xlat
add
js
in
jns
imull
xor
adcb
bound
mov
adc
mov
pop
scas
sub
scas
out
xchg
or
insb
ret
jge
or
jbe
adcb
test
pop
stos
pop
mov
pusha
int
repz
adc
in
pop
or
insl
add
loopne
pushf
out
roll
add
add
add
add
in
dec
dec
jecxz
jbe
jmp
adc
icebp
mov
sbb
and
cs
sarb
movsl
fimuls
jns
adcl
outsl
sbb
js
mov
mov
push
adc
aaa
cmp
inc
fldenv
ret
xor
shll
popl
int
popa
add
jo
add
movsb
cmpsb
mov
clc
fidivl
or
icebp
dec
jb
dec
sub
inc
inc
loope
loop
flds
mov
mov
out
movsl
jbe
cmp
int
stc
add
mov
lock
icebp
ficoml
xchg
mov
scas
cmp
adc
in
in
xor
and
add
jbe
jns
das
xchg
push
and
and
lahf
loope
loope
shlb
push
in
dec
movsl
gs
aas
jg
subl
into
iret
push
jle
insb
scas
arpl
or
mov
out
xor
push
clc
shrl
xchg
dec
fs
mov
sar
jle
test
xor
cs
ss
xor
pop
sti
mov
shll
and
sbb
repz
movsb
test
jnp
lods
popa
xchg
fimull
dec
xchg
repnz
test
jo
mov
call
fs
jle
fistps
or
insl
outsl
cltd
or
lds
sahf
dec
lock
lock
add
int
repnz
xor
stos
lods
and
inc
popa
mov
ret
cwtl
pop
xchg
xchg
notl
fs
xchg
das
clc
sbb
ljmp
add
sti
push
add
sti
adc
repnz
adc
out
sti
pop
add
sti
or
repnz
add
add
sbb
add
push
cmp
adc
push
add
sbb
and
mov
add
xchg
adc
add
mov
adc
mov
adc
mov
push
adc
jo
adc
jo
adc
arpl
adc
arpl
adc
xor
adc
xor
adc
and
push
adc
xor
adc
add
push
lret
add
add
push
add
and
add
adc
pop
add
push
or
add
sbb
add
cs
add
out
add
clc
outsb
add
sti
outsb
incl
imulb
add
adc
adc
add
outsb
ret
add
jo
add
aas
add
clc
aas
add
clc
add
clc
cmp
add
clc
imul
clc
bound
adc
clc
inc
add
clc
ja
sbb
inc
add
clc
inc
add
clc
adc
sbb
arpl
sbb
push
sbb
add
cmpsb
jmp
arpl
jno
loop
jae
pop
pop
and
negb
pop
sti
or
dec
aaa
sub
ljmp
pop
ljmp
in
jmp
iret
cmp
cmp
cmp
jmp
cmpl
test
jmp
jle
xchg
std
add
fldenv
add
push
sbb
push
add
add
add
clc
push
jmp
into
mov
es
mov
roll
push
mov
scas
out
nop
jmp
push
add
add
outsl
jbe
out
pop
icebp
sti
push
or
repz
pop
loope
push
add
mov
call
xchg
call
xchg
lcall
pushl
ljmp
push
incl
popa
lcall
lcall
add
incl
hlt
stc
cli
sti
lock
sti
repnz
cld
and
pop
hlt
cli
mov
sti
push
add
push
repz
daa
into
insl
push
pop
pushl
sti
push
add
lcall
jae
cmpl
insl
aas
jno
jb
jmp
jb
jb
imul
out
add
adc
rcrl
add
mov
adc
fists
push
add
adc
rcll
inc
add
adc
call
sbb
jb
outsl
add
sbb
sbb
cmp
outsb
add
sbb
icebp
adc
pop
sbb
sbb
xchg
sbb
jl
outsb
add
jnp
push
clc
xchg
add
loopne
imul
addl
add
loope
outsl
clc
int
imul
xor
clc
rolb
clc
xor
clc
incl
jb
sbb
data16
push
add
clc
adc
clc
adc
clc
adc
gs
incl
popa
clc
arpl
push
clc
outsl
add
clc
xchg
es
ret
mov
fldl
push
xchg
daa
push
hlt
out
mov
arpl
dec
add
and
inc
cmp
mov
sbb
arpl
mov
and
outsb
inc
pop
push
and
sbb
aaa
ret
xchg
or
popf
cmp
inc
sbb
das
repnz
dec
aas
pop
bound
jmp
cmp
movsb
mov
nop
mov
cmp
jl
sbb
push
cmp
inc
push
sub
test
jg
je
mov
outsl
push
mov
mov
lcall
sti
cltd
cmpsl
fucomip
xor
rorb
loopne
int
imul
imul
and
dec
int
arpl
jne
insb
mov
push
das
jl
pop
xchg
inc
pop
jno
ret
cmp
push
cli
mov
fwait
scas
mov
int
xor
fsts
push
jbe
push
pop
add
or
add
mov
pop
add
mov
sbb
add
add
fstl
add
icebp
sbb
add
push
add
cld
adc
add
hlt
adc
add
adc
add
add
hlt
adc
add
add
and
add
hlt
adc
add
add
jno
add
lds
add
mov
push
add
xchg
push
add
pusha
adc
add
mov
add
cmpsb
popf
inc
add
xchg
add
clc
cld
mov
add
sub
inc
clc
xchg
add
clc
pop
mov
add
ss
add
clc
insl
mov
add
insl
mov
add
or
inc
clc
jg
add
inc
movb
add
clc
cmp
inc
clc
fldl
add
cmp
inc
clc
faddl
add
je
inc
clc
mov
mov
add
das
mov
add
ss
sbb
add
or
mov
lret
nop
add
push
arpl
add
push
jae
mov
push
pop
enter
add
push
pop
enter
add
push
fistpll
clc
push
fidivrs
clc
push
mov
add
push
out
cmp
test
clc
push
sub
clc
push
sub
cmp
call
add
adc
call
add
adc
call
add
add
add
stc
adc
add
stc
adc
jmp
adc
stc
adc
jmp
adc
jmp
adc
stc
adc
jmp
adc
in
notl
jmp
adc
add
add
and
cli
adc
ljmp
add
cli
adc
ljmp
add
cli
adc
add
cli
adc
je
add
sbb
push
xlat
in
push
or
xor
mov
ret
pop
pop
and
scas
roll
pop
push
mov
addr16
int3
and
jp
inc
clc
mov
notl
push
mov
faddl
pop
scas
insb
push
rclb
rcr
mov
adc
jl
dec
shr
fsubrl
into
shll
add
inc
jb
mov
ret
popf
insb
xor
xchg
xlat
push
and
bound
or
ds
je
push
jmp
roll
add
out
jecxz
popf
insb
mov
push
pop
xchg
aam
clc
jae
add
sub
xchg
andl
and
and
add
push
jge
add
popa
loope
dec
push
enter
push
in
mov
popf
push
inc
sub
les
xchg
loope
fdivrl
mov
adc
xchg
xorl
adc
adc
insl
mov
enter
adc
mov
enter
pop
cld
les
xor
mov
and
push
rclb
dec
dec
pushf
int3
ret
out
addr16
test
subb
ds
jge,pt
lods
lea
mov
pop
push
dec
out
xchg
mov
ret
sarl
ret
cltd
stc
mov
jmp
inc
inc
cmp
xchg
adc
pop
cmc
mov
addb
add
add
add
add
shrl
or
sub
xchg
pop
fnsave
insl
loopne
mov
mov
inc
pop
jg
out
add
add
xor
or
xor
add
xorl
push
in
xchg
xor
inc
int3
test
add
push
sub
inc
jecxz
xchg
mov
jg
fcoms
add
cltd
dec
sbb
dec
cmp
add
push
pop
sub
mov
icebp
and
jmp
nop
popa
lret
xor
int3
xor
fdivl
jne
in
xor
cld
xor
shrl
or
subl
ret
ds
xor
jl
aad
mov
aad
pushf
xor
lods
xor
and
in
ja
sub
rorb
add
icebp
sbbb
test
cmp
movsl
add
xchg
add
pop
pop
xor
pop
insb
xor
movsl
mov
cmpsl
in
aad
mov
test
mov
jge
sbb
push
inc
fdivrp
and
pop
lds
das
add
jae
adc
cmp
and
fs
add
mov
mov
daa
and
push
daa
js
into
loop
push
int3
jmp
out
xor
xor
aam
data16
es
push
mov
mov
push
test
push
jo
and
stc
mov
push
movhps
push
or
dec
or
je
pop
xor
stc
lcall
push
dec
dec
aas
cs
les
hlt
push
add
in
adc
int
sub
mov
mov
mov
mov
dec
pop
dec
jl
add
jnp
jb
or
lret
imul
sub
sbb
sub
or
test
scas
push
adc
dec
add
les
push
sbb
cmp
lret
cmp
fwait
cmp
stos
cmp
fnstsw
aad
and
aaa
pop
sbb
add
imul
push
sub
push
loopne
int
or
cmp
adc
cmp
and
cmp
and
fmulp
jno
jo
cld
dec
in
xchg
ja
dec
xor
pop
ss
outsb
mov
inc
loop
cmp
rcrb
cmp
and
cmp
pop
xor
add
cld
lcall
mov
imul
mov
cmp
cmp
cld
mov
and
jnp
stc
shl
pop
mov
mov
stos
in
arpl
inc
je
pop
cmp
testl
xor
divl
and
mov
mov
add
mov
jp
xchg
add
div
cmp
sub
add
insb
sub
pop
sub
lods
xchg
rorb
iret
adc
inc
pop
dec
add
andb
dec
scas
repz
cmc
xchg
movsb
in
daa
add
aas
repz
push
xor
enter
or
sbb
push
sbb
das
les
jmp
add
add
add
cmpb
fisttpl
fdivl
in
or
xor
or
or
inc
xor
sbb
fists
pop
imulb
test
jmp
mov
jne
mov
dec
xor
sub
xor
push
cltd
xchg
xchg
mov
popf
test
mov
dec
stos
aam
xor
xor
sub
or
xor
or
test
hlt
xchg
insb
inc
in
enter
xchg
clc
pop
fstpt
in
and
rcll
add
cmc
xor
or
xor
or
adc
bswap
das
mov
jno
fwait
sub
mov
aaa
jle
mov
mov
xor
or
adc
add
cmp
or
stos
pushf
adc
push
dec
nop
jg
sbb
adc
dec
push
sbb
adc
mov
aas
fstpl
repnz
sti
cmp
imul
mov
cmp
jae
push
test
fucompp
sti
push
add
adc
add
adc
sbb
or
inc
adc
add
dec
sbb
fstl
push
pop
mov
and
mov
and
sub
and
xor
sub
cmp
std
cmc
cmp
arpl
cmp
int
insl
outsl
loope
jno
in
jne
or
pop
sbb
xor
cmc
cmp
imul
bound
and
clc
fdivrl
pop
loopne
cmpsl
mov
xchg
sub
mov
jae
imul
xchg
xchg
mov
mov
cmpsb
lahf
fsubrs
scas
xchg
mov
mov
movsb
xchg
mov
test
mov
addb
je
mov
lods
dec
into
mov
xor
stos
test
dec
mov
fiaddl
push
jl
fiadds
arpl
pop
xchg
addr16
cwtl
imul
int3
outsb
out
push
pop
pop
push
dec
inc
push
push
cs
push
pop
xor
pop
es
jmp
push
adc
or
push
fisttpll
negb
stc
bnd
and
cli
adc
in
incb
test
push
repnz
mov
adc
push
adc
sbb
or
add
add
add
add
or
jecxz
mov
out
mov
jmp
mov
sbb
or
adc
in
rcll
icebp
in
sub
ret
mov
sar
and
dec
sbb
mov
push
mov
jecxz
mov
out
jp
inc
lret
jle
jp
andl
xchg
pushf
mov
cwtl
jns
movsb
xchg
jne
mov
fwait
insl
test
add
jno
inc
mov
jns
cltd
test
xchg
lea
mov
movsl
inc
push
mov
sub
mov
xor
mov
insl
fldt
jno
loope
jge
in
jns
jmp
out
mov
in
cmc
test
mov
call
sub
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
clc
cmp
add
clc
cmp
add
add
mov
add
clc
cmp
add
clc
cmp
add
clc
cmp
add
clc
cmp
pop
push
cmp
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
sti
dec
pop
jg
pop
push
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
test
lea
add
push
jmp
add
push
jmp
add
push
jmp
pop
dec
inc
jbe
inc
inc
outsb
pop
aas
call
add
push
jmp
add
push
jmp
pop
clc
inc
call
add
mov
jmp
add
push
jmp
pop
xlat
inc
jmp
add
push
jmp
add
add
add
clc
xchg
jmp
add
push
jmp
add
push
imul
clc
push
add
cli
pop
add
cli
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
push
add
xchg
sub
xchg
add
das
and
sti
push
sub
pop
sbb
adc
adc
or
adc
or
adc
add
es
jmp
subb
adc
rcrl
sbb
rcrl
adc
leave
es
leave
es
lods
es
movsl
es
lods
subb
add
mov
sbb
add
sbb
add
add
popa
sbb
add
add
push
sbb
add
add
popa
sbb
add
add
push
sbb
add
sbb
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
loope
add
loope
add
rcll
add
rcll
add
loope
add
loope
add
rcll
add
rcll
add
mov
pop
add
clc
sub
add
clc
sub
cwtl
inc
clc
cs
inc
clc
das
and
inc
add
xor
inc
clc
xor
decl
cltd
inc
clc
xor
aas
ds
inc
clc
xor
inc
clc
xor
lcall
pop
cltd
inc
clc
inc
and
inc
clc
ss
inc
clc
inc
hlt
out
lahf
cltd
inc
clc
xor
add
gs
inc
clc
dec
hlt
dec
mov
and
inc
clc
push
mull
cmp
out
add
push
adc
stc
push
add
stc
push
repz
mov
push
jecxz
mov
push
rcll
stc
push
ret
xchg
mov
push
mov
mov
push
and
stc
push
adc
stc
push
add
incl
cltd
cmp
add
out
inc
cwtl
cltd
cmp
repnz
cltd
add
pop
in
iret
inc
js
cmp
add
lret
js
xlat
incl
stos
inc
lcall
xlat
push
aad
add
jo
decl
pop
add
pusha
xlat
incl
pop
add
xlat
dec
adc
xlat
dec
adc
xlat
dec
dec
inc
clc
popa
xlat
dec
dec
inc
clc
xchg
xlat
decl
sub
fadds
inc
fdivs
call
add
pop
add
pusha
xlat
call
pop
add
call
adc
inc
adc
jmp
test
add
inc
add
cmc
add
fistpl
add
jmp
inc
add
sahf
inc
add
test
add
lcall
inc
add
ljmp
test
add
cmp
ljmp
inc
add
dec
incl
inc
add
dec
pushl
stos
inc
add
dec
incl
inc
add
dec
pushl
dec
incl
fs
call
sahf
xchg
inc
clc
pop
hlt
inc
mov
hlt
pushl
div
jmp
sub
call
in
and
clc
adc
add
add
add
clc
out
and
clc
inc
xchg
inc
clc
jmp
add
xor
add
arpl
add
push
xchg
inc
clc
repnz
clc
adcl
clc
repz
inc
clc
jo
add
and
add
adc
add
dec
xchg
inc
clc
push
mov
stc
push
jecxz
cmp
mov
xchg
cmp
mov
stc
push
ret
xchg
cmp
movsb
and
stc
push
mov
cmp
aaa
and
push
and
stc
push
adc
stc
push
add
stc
push
repz
mov
push
jecxz
mov
push
rcll
stc
push
ret
xchg
mov
push
mov
mov
push
and
stc
push
adc
stc
push
add
sbb
add
add
sbb
jecxz
xlat
pushl
xlat
jmp
xlat
call
xchg
incl
pop
add
adc
xor
jo
decl
pop
add
pusha
xlat
incl
sbb
repz
decl
sbb
add
xchg
decl
sbb
add
xlat
decl
sbb
ret
xlat
decl
ficoml
add
add
pop
add
adc
int
pop
add
jo
ljmp
testl
add
movsb
inc
add
movsb
inc
add
add
stos
movsb
inc
add
add
mov
testb
imul
add
jmp
inc
add
and
add
cmpsb
inc
add
and
add
inc
add
and
add
pop
mov
repnz
add
mov
inc
repnz
cmp
add
inc
add
add
and
inc
clc
push
hlt
jle
inc
clc
xchg
out
jle
inc
clc
ja
fistps
hlt
dec
sahf
xchg
inc
clc
xchg
hlt
mov
ret
scas
mov
and
inc
add
in
add
daa
nop
inc
clc
lods
pop
adc
pop
nop
inc
clc
scas
pop
adc
inc
popl
scas
pop
adc
aaa
popl
mov
adc
popl
test
popl
stos
pop
adc
xchg
sbb
pop
and
call
push
jno
call
pop
pusha
sbb
pop
repz
cmp
jae
or
jecxz
cmp
bound
add
push
rorl
call
pop
sbb
pop
mov
cmp
ja
or
and
call
pop
pop
es
push
add
stc
push
repz
mov
push
jecxz
mov
push
rorl
stc
push
ret
mov
pop
add
pop
add
push
pop
add
add
jmp
pop
add
mov
decl
sbb
repz
incl
xchg
pushl
sbb
shll
jmp
add
xchg
call
pop
add
aad
add
push
pop
add
push
push
add
mov
incl
ja
decl
pop
add
xchg
decl
sbb
shll
incl
lods
and
add
mov
mov
mov
outsl
inc
pushl
cmpsl
inc
add
jmp
cmpsl
inc
add
sti
cmpsb
inc
add
jmp
inc
add
fisttpl
add
stos
mov
and
mov
xor
add
imul
add
cmpsb
inc
add
add
jmp
inc
add
cmc
add
add
cmpsb
inc
add
hlt
add
imul
add
inc
add
fsubl
add
arpl
add
push
popl
cli
and
clc
orl
clc
repz
cwtl
and
clc
and
push
jle
inc
clc
hlt
jmp
jle
inc
clc
mov
add
xor
add
arpl
add
push
popl
clc
add
add
orl
clc
repz
mov
nop
inc
clc
insl
and
clc
adc
add
inc
popl
push
stos
and
push
jecxz
mov
push
rorl
stc
adc
lods
adc
adc
das
adc
adc
cs
push
adc
clc
push
add
add
push
repz
cmp
xor
clc
push
jecxz
cmp
and
clc
push
rorl
clc
push
ret
cmp
and
clc
push
mov
cmp
mov
clc
push
and
clc
push
adc
ja
cmp
sbb
add
outsl
fdivr
mov
jg
mov
outsl
fdivr
pushf
ficoml
add
jg
lcall
add
ficoml
add
push
pop
add
push
sbb
add
sbb
rep
xlat
incl
sbb
jecxz
xlat
pushl
sbb
add
outsl
xlat
jmp
pop
add
jg
call
ficoml
add
fsts
add
push
pop
add
push
testl
add
testl
add
xor
add
inc
add
add
sub
add
cmp
add
imul
add
xchg
mov
add
jmp
inc
add
add
sti
xchg
cmp
add
jmp
inc
add
cmc
add
add
testb
mov
cmc
add
imul
add
sahf
inc
add
pop
es
pop
mov
insl
cmc
ljmp
mov
outsb
es
daa
xchg
es
aaa
xchg
nop
es
inc
xchg
mov
add
push
xchg
mov
add
xchg
shll
inc
clc
aam
add
pop
mov
aad
add
pop
mov
out
add
daa
xchg
mull
inc
add
or
add
inc
xchg
sbb
add
push
xchg
sub
inc
clc
push
out
stc
push
and
jg
pop
mov
push
jmp
add
push
fcomps
clc
push
jmp
pop
clc
push
jmp
pop
clc
push
jmp
pop
clc
push
jmp
pop
clc
push
jmp
pop
clc
push
jmp
add
add
add
clc
push
clc
pop
clc
push
jmp
pop
clc
push
call
add
pop
call
add
pop
call
add
pop
call
add
pop
add
hlt
pop
add
cld
pop
add
cli
pop
add
cli
pop
add
cli
pop
add
cli
pop
add
cli
pop
add
cli
pop
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
aas
push
add
add
push
add
das
push
add
daa
push
add
pop
push
add
pop
push
add
movhps
pop
push
add
call
add
out
adc
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
mov
adc
add
mov
adc
add
xchg
adc
add
add
add
push
adc
add
dec
cltd
inc
add
add
pop
cltd
inc
add
add
dec
cltd
inc
add
sti
add
cmp
decl
inc
add
add
fistpl
decl
lahf
inc
add
and
inc
add
cli
add
lret
cwtl
inc
add
cli
add
fistpl
and
inc
clc
and
add
clc
push
xchg
cmp
inc
clc
sub
add
xrelease
aaa
hlt
pushl
mov
sub
jmp
test
dec
and
clc
and
add
xor
add
inc
xchg
dec
and
clc
push
xchg
push
and
clc
arpl
add
xrelease
das
hlt
push
add
jmp
adc
add
add
add
clc
inc
and
clc
and
and
push
jecxz
cmp
repz
push
roll
stc
push
ret
xchg
pop
aad
clc
push
mov
cmp
add
clc
push
and
ja
adc
addr16
add
stc
push
xrelease
push
jecxz
mov
push
roll
stc
push
ret
xchg
clc
push
mov
mov
push
and
imull
cld
mov
pop
push
cmc
out
add
sbb
add
ja
dec
sbb
add
ja
inc
fsts
add
ja
call
fsts
add
ja
inc
fsts
add
notl
add
jo
incl
imul
cld
jbe
call
jo
clc
sbb
add
add
call
sbb
add
ja
fcmovu
pop
add
ja
mov
ja
mov
ja
lcall
notl
add
jo
lcall
jmp
cld
jbe
jmp
sub
sti
sahf
inc
add
testl
add
testl
add
testl
add
xchg
inc
add
decl
inc
add
fcompl
inc
add
sub
ljmp
add
sub
sti
sahf
inc
add
sub
decl
inc
add
sub
lcall
inc
add
sub
decl
inc
add
sub
cmp
decl
inc
add
fistpl
repnz
out
or
fistps
mov
jne
dec
sub
incl
mov
ja
ljmp
push
xchg
jno
decl
loop
add
idivl
clc
repz
clc
pop
addb
adc
clc
pop
addb
adc
inc
clc
out
adc
clc
aaa
jg
clc
out
adc
clc
inc
jg
clc
adc
inc
clc
or
inc
clc
push
mov
addb
add
add
add
add
pop
mov
cmpb
sahf
adc
push
add
clc
push
repz
pop
rclb
jecxz
cmp
mov
clc
push
sarl
pop
mov
jg
pop
xchg
adc
push
mov
cmp
inc
adc
mov
push
adc
clc
push
add
clc
push
repz
push
or
mov
clc
push
sarl
push
or
clc
push
ret
jg
push
add
js
dec
in
add
fdivr
into
add
add
fdivr
int
pop
add
shrb
push
inc
fdivr
mov
add
aaa
fdivr
adcb
call
pop
fdivr
test
push
add
jmp
add
js
incl
pop
add
add
call
pop
add
js
cmp
add
xlat
call
push
sbb
or
sbb
or
xor
add
stos
inc
add
test
sldt
test
add
xor
add
xor
add
test
add
test
add
test
add
test
add
jp
sldt
xor
add
inc
add
sldt
test
mov
inc
add
test
add
dec
test
add
test
in
daa
inc
jg
clc
mov
jg
clc
mov
jg
clc
mov
jg
clc
mov
add
add
add
clc
adc
add
and
clc
cmpsb
in
clc
xor
clc
mov
add
inc
jg
clc
movsb
in
clc
push
jg
clc
mov
add
arpl
clc
mov
jg
clc
scas
loope
clc
add
add
adc
add
and
clc
push
js
clc
push
jecxz
mov
push
sarl
push
pop
adc
add
push
mov
mov
push
and
clc
push
adc
clc
push
add
clc
push
repz
pop
adcb
pop
jae
cmpsl
pop
sarl
pop
bound
cmp
push
adc
cmp
test
push
and
clc
push
adc
clc
push
add
add
pop
repz
daa
pop
jecxz
aad
dec
and
pop
rcrl
daa
pop
ret
aad
dec
in
push
add
or
add
js
decl
js
decl
js
incl
aas
fdivr
dec
mov
jmp
das
fdivr
inc
or
add
pop
fdivr
push
in
push
add
psubusb
inc
in
push
add
add
add
add
xlat
call
js
incl
js
ljmp
add
sti
xchg
inc
add
cmp
decl
inc
add
cmp
lcall
cmpsb
inc
add
cmp
decl
inc
add
cmp
cmp
decl
inc
add
inc
add
xchg
inc
add
sti
xchg
inc
add
jg
movsl
inc
add
sbb
lcall
cs
dec
movsl
inc
add
cs
mov
sub
inc
add
inc
add
idiv
pop
or
decl
addb
lock
sub
clc
outsb
lock
cmp
clc
jno
lcall
dec
jg
clc
jo
add
pop
jg
clc
jae
add
imul
add
idivl
clc
repz
add
pop
addb
les
hlt
pop
addb
mov
out
add
aaa
jg
clc
imul
out
inc
jg
clc
call
jg
clc
stc
adc
call
push
mov
outsl
adc
js
push
cmpsl
adc
mov
push
add
push
cltd
out
push
repz
push
mov
ja
mov
push
shll
push
lcall
push
popf
out
and
out
and
js
pop
aas
adc
cmp
push
adc
cmp
adc
clc
push
repz
pop
inc
out
push
jecxz
cmp
xor
clc
push
shll
pop
and
clc
push
ret
ja
pop
add
out
aad
ret
push
push
add
loopne
pushl
add
add
add
add
rcl
jmp
rcl
enter
repz
aad
xchg
aad
mov
aad
mov
aad
mov
fdivr
dec
aad
jmp
pusha
fdivr
dec
aad
call
push
fdivr
dec
aad
incl
inc
fdivr
inc
enter
das
fdivr
push
adc
jecxz
fdivr
add
and
roll
psubusb
ljmp
add
or
add
push
add
sbb
add
jmp
inc
add
push
add
sti
sahf
inc
add
test
add
add
add
push
test
add
xor
inc
add
add
stos
test
add
sbb
add
pop
popf
inc
add
push
sbb
add
sahf
inc
add
push
add
stos
test
add
fwait
test
adc
clc
inc
ja
clc
adc
add
push
ja
clc
sub
add
gs
clc
cmp
add
cmc
ja
clc
dec
in
clc
add
add
clc
out
inc
clc
das
add
clc
das
add
clc
cs
add
sub
add
clc
add
add
cmp
add
sub
add
clc
sub
add
clc
sub
add
clc
sub
add
clc
sub
add
clc
push
jmp
imul
add
jmp
out
push
mov
out
cli
ja
jmp
movsb
fnstenv
inc
lods
loope
cmp
xor
add
cmpsl
xor
into
mov
add
xchg
mov
lods
mov
scas
clc
mov
mov
lock
outsb
pop
jmp
add
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
push
lcall
push
call
push
decl
push
incl
ds
in
out
in
incl
fsubp
fsubp
in
out
in
in
call
pop
push
pop
pop
or
lcall
lcall
or
adc
ljmp
in
ds
ds
jle
ljmp
lcall
lcall
or
adc
ljmp
jle
jle
jle
ljmp
lcall
incl
rcrl
add
rcrl
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
add
das
add
clc
das
add
clc
das
add
clc
das
add
clc
das
add
clc
sub
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
adc
call
add
adc
call
add
push
call
add
stc
adc
call
add
adc
call
add
adc
call
add
adc
call
add
adc
add
cld
adc
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
adc
add
loope
add
loope
add
rcll
add
loope
inc
add
push
add
loopne
add
add
addb
push
add
leave
push
add
lods
xchg
ret
push
add
stc
adc
add
inc
add
push
add
adc
add
dec
push
add
int
inc
add
add
add
adcb
add
fadds
jb
inc
add
add
pop
add
pusha
add
adc
fs
roll
jns
flds
jge
stc
rolb
stc
fiadds
add
cli
faddl
inc
stc
jp
ds
addl
cli
xchg
popa
stc
xchg
add
xchg
add
mov
add
cli
mov
jle
mov
add
add
stc
ljmp
stc
testl
sbb
arpl
sbb
push
add
stc
pop
add
jge
inc
add
addb
stc
xchg
pop
stc
xchg
outsb
stc
push
ret
pop
mov
add
pop
mov
xor
xchg
notl
addl
push
push
add
adc
pop
add
adc
cmp
inc
push
xor
dec
push
xor
inc
push
xor
movhps
add
push
pop
add
push
push
add
adc
push
add
add
add
add
push
inc
add
and
cwtl
add
push
xchg
add
push
xchg
add
adc
movsb
add
push
add
cli
testb
cli
cli
add
mov
add
cli
cmc
add
stc
add
add
mov
add
sti
out
add
sti
add
addb
add
add
add
add
hlt
add
mov
pop
sti
mov
add
fiaddl
push
sti
add
inc
sti
repz
sti
int3
add
sti
lret
add
cli
call
add
nop
adc
add
adc
add
adc
add
push
jno
add
jbe
das
add
sbb
add
inc
add
arpl
dec
add
sbb
add
jae
sub
imul
mov
push
add
jae
or
jb
or
xor
sti
xor
push
repnz
push
mov
xor
sbb
cmpsl
xor
pop
jecxz
jl
in
clc
popf
pop
out
xchg
or
call
mov
mov
call
enter
enter
enter
enter
sub
scas
sub
mov
dec
or
or
mov
or
or
call
inc
or
enter
enter
enter
enter
sub
int
inc
or
sub
or
sub
or
or
mov
add
inc
cmpsl
pop
and
pop
push
inc
cltd
pop
dec
inc
cwtl
pop
sbb
pop
sbb
pop
sbb
pop
adc
mov
push
inc
mov
pop
loope
mov
pop
roll
pop
int3
inc
xchg
pop
in
inc
pop
filds
pop
lret
inc
aaa
pop
arpl
pop
xchg
inc
xchg
push
cld
sbb
push
add
sub
fstps
push
ficompl
push
add
sbb
push
aam
and
sbb
sbb
add
idivb
push
and
cmp
push
mov
aas
push
movsl
stc
inc
push
pushf
stc
inc
push
mov
inc
push
scas
stc
inc
push
cltd
stc
inc
push
cwtl
stc
inc
push
mov
stc
inc
push
mov
stc
dec
push
lahf
stc
dec
push
xchg
stc
dec
push
xchg
stc
dec
push
nop
stc
dec
push
inc
stc
push
push
dec
stc
push
push
dec
add
push
push
dec
stc
pop
push
dec
stc
push
push
inc
stc
pop
push
dec
stc
pop
push
inc
stc
pop
push
push
stc
pop
push
adc
pop
push
add
pop
push
add
pusha
push
add
push
dec
push
cmc
adc
dec
push
push
push
dec
push
es
dec
push
and
push
push
and
push
push
push
push
push
push
adcb
add
adc
push
add
adc
push
add
adc
add
add
add
add
sbb
dec
sbb
dec
sbb
cmp
pop
add
sbb
sbb
add
sbb
xchg
sbb
and
sbb
add
sbb
add
sbb
add
sbb
sub
add
add
jo
pop
cld
add
hlt
push
add
cld
push
add
hlt
inc
add
cld
inc
add
mov
add
hlt
test
paddb
add
add
add
add
mov
add
hlt
mov
add
ret
cld
mov
add
cld
mov
inc
hlt
movb
cld
lds
cmp
mov
cmp
mov
cmp
dec
add
inc
add
cld
dec
add
hlt
add
sub
add
sub
inc
hlt
push
cmp
cmp
aaa
add
sbb
add
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
aam
mov
or
addl
add
xchg
add
sbb
add
sbb
sbb
fstpl
inc
add
sbb
bndstx
add
sbb
add
fcomps
add
stc
xor
add
stc
xor
stc
sub
stc
and
adc
inc
add
stc
cmp
stc
daa
add
clc
ds
clc
inc
add
inc
aas
add
cmp
ss
das
lcall
pop
lahf
add
movsbl
dec
pop
pushf
add
mov
add
mov
add
sub
cmp
xlat
mov
add
mov
fldl
xchg
scas
lahf
add
es
add
int3
add
adc
add
adc
add
seto
and
xchg
add
adc
add
xchg
add
adc
add
adc
add
lcall
adc
add
sahf
add
lahf
add
mov
add
or
movsl
add
cmpsb
add
cmpsl
add
or
mov
clc
popa
mov
pusha
mov
pop
mov
push
mov
pop
mov
push
mov
daa
mov
es
mov
sti
sbb
mov
sti
sbb
mov
sti
or
mov
add
add
add
out
cld
mov
sti
icebp
cld
ret
cld
sar
cld
ret
sti
ret
sti
int
cld
sti
mov
sti
mov
enter
mov
cld
or
push
cld
pop
sbb
and
push
cld
add
cmp
cld
pop
cmp
cld
cmpb
cld
je
test
insl
cmp
cmp
add
pop
cld
mov
cmp
cmp
aam
ds
and
sub
or
sub
in
stos
sti
fnstsw
movsb
sti
cmp
sti
mov
aaa
scas
sti
sub
cmpsb
sti
cwtl
cmp
sti
jns
ret
cmp
sti
adc
cmpsl
sti
push
cmp
xchg
push
and
cmpsb
add
pushf
and
mov
and
and
test
and
xchg
shlb
xchg
cmpsb
and
sbbb
or
sbb
jb
and
bound
and
bound
and
push
and
add
and
aam
and
std
shlb
fprem1
iret
and
add
leave
and
in
xor
sahf
add
cmp
add
sbb
add
inc
sbb
add
and
or
jle
or
jns
or
mov
and
adc
jne
and
sbb
and
and
sbb
and
sbb
and
sbb
push
and
pop
and
pop
and
add
and
jne
sub
je
add
sbb
pop
sbb
sbb
lahf
sbb
and
mov
and
mov
adc
les
sbb
mov
lret
sbb
push
or
sbb
dec
or
sbb
fldenv
or
xor
es
lods
sbb
inc
or
iret
add
and
stos
sbb
fisttpll
mov
or
stos
fucom
or
mov
push
xchg
push
push
xor
push
pop
xor
push
xor
sbb
js
sbb
jnp
sbb
jp
jmp
pop
push
rdmsr
push
push
pop
xor
adc
xor
add
xor
xor
push
in
xor
and
push
adc
pop
push
push
aaa
dec
or
push
pop
push
or
pop
xor
stos
or
xor
or
xor
or
xor
mov
lock
or
xor
and
add
and
hlt
xchg
and
add
and
cld
mov
xchg
negl
and
pop
out
dec
jmp
add
mul
add
out
loop
dec
pop
loop
inc
jmp
add
neg
add
out
out
add
pop
out
add
in
add
imul
add
out
ljmp
call
add
out
testb
testb
cmc
add
or
add
or
add
push
daa
in
inc
daa
out
add
out
dec
daa
call
add
xor
add
xor
add
inc
add
xor
es
push
xchg
or
js
or
jnp
or
push
or
jge
or
jl
or
push
into
and
adc
shlb
push
adc
adc
add
es
add
add
add
pop
es
push
xchg
es
push
pop
sbb
clc
cmpsb
nop
mov
nop
mov
sbb
adcb
out
ja
push
push
jge
pop
scas
mov
scas
mov
mov
and
mov
and
mov
out
mov
adc
incb
sub
adc
out
cmp
sub
dec
adc
xor
sub
cmp
sub
add
dec
adc
aas
adc
idivb
adc
out
inc
adc
push
and
xor
sub
xor
and
xor
push
pop
mov
pavgb
psraw
psrld
bswap
adc
adc
adc
adc
mov
cmp
test
cmp
adc
orl
inc
adc
add
add
add
add
push
rdpmc
adc
cmp
inc
adc
cmp
sub
cmp
lret
adc
pinsrw
int
pop
shufps
scas
adc
cmpxchg
pop
adc
dec
out
inc
xor
dec
xor
cmc
dec
xor
dec
xor
cmc
xor
add
aas
xor
cmc
inc
xor
xor
add
inc
xor
cmc
push
xor
in
push
xor
add
push
xor
in
pop
xor
std
pop
xor
in
dec
xor
push
xor
dec
xor
push
xor
xor
push
xor
mov
dec
xor
adc
adc
push
xor
adc
bound
push
xor
push
xor
dec
adc
pop
adc
pop
adc
dec
adc
pop
adc
fwait
adc
stos
adc
xchg
adc
adc
ja
pop
xor
adc
pusha
adc
xchg
adc
repnz
in
adc
adc
adc
adc
adc
or
scas
adc
adc
mov
jmp
cmp
mov
or
or
or
or
or
or
jmp
in
mov
or
or
or
shr
or
jmp
orb
or
js
jge
jg
pop
or
jmp
imul
add
add
add
leave
inc
or
jmp
inc
or
or
or
aaa
push
imulb
pop
inc
test
dec
jecxz
aaa
dec
jecxz
aaa
dec
jecxz
aaa
mov
pop
aaa
test
pop
aaa
mov
pop
aaa
xchg
push
aaa
mov
pop
aaa
xchg
in
aaa
and
ss
ss
in
ss
in
ss
clc
push
loope
clc
push
lock
clc
push
lock
push
loop
clc
push
fldl
clc
push
hlt
sbb
push
in
add
push
cli
sbb
push
cli
add
push
loop
clc
push
loop
clc
push
add
adc
add
cli
push
add
cli
push
add
cli
push
add
cli
push
add
cli
push
add
sti
push
add
push
add
sti
push
add
loope
add
add
push
add
adc
add
sti
push
add
add
add
sti
push
add
icebp
push
add
loope
add
sti
push
add
adc
add
pop
add
hlt
push
add
lock
add
cli
push
add
adc
add
icebp
sbb
add
push
add
pop
adc
add
push
add
dec
adc
add
jno
add
mov
adc
add
rcrb
add
mov
add
movsl
daa
add
ret
add
add
cmpsl
daa
add
hlt
sbb
add
add
negl
add
jns
add
mov
add
dec
sub
add
sub
add
sub
add
adc
add
add
repz
add
mov
add
loope
add
ja
add
adc
clc
push
add
add
add
add
incl
add
arpl
add
mov
pop
add
xchg
add
clc
imul
add
pop
pop
add
addb
clc
cmpsl
adc
add
cwtl
adc
add
jge
add
dec
add
clc
jle
add
dec
add
clc
popa
push
add
adc
clc
pusha
push
add
adc
clc
cmp
add
adc
clc
cmp
add
adc
add
push
lahf
push
clc
push
movl
clc
push
movb
push
adcl
clc
push
jo
clc
push
rolb
push
addr16
clc
push
cltd
add
push
push
push
clc
push
cwtl
add
push
sub
clc
push
jnp
clc
push
sub
clc
push
jp
clc
push
stos
adc
clc
push
stos
adc
clc
push
lods
adc
clc
push
lods
adc
clc
push
scas
adc
add
add
add
push
and
push
scas
adc
clc
push
mov
clc
push
add
push
add
sti
push
add
add
push
add
in
add
sti
push
add
sti
push
add
push
add
add
push
add
in
add
push
add
in
add
push
add
add
push
add
add
push
add
sti
push
add
sti
push
add
push
add
sti
push
add
sti
push
add
jb
add
inc
sbb
add
add
xor
add
dec
and
add
add
cmp
add
jl
add
sub
add
lcall
add
add
outsb
and
add
add
add
add
add
and
sbb
fs
ds
test
sbb
test
ror
xlat
ds
imul
cmp
int3
fdivrs
sub
ds
xlat
incb
int3
xlat
fdivrp
test
sub
ds
fdivr
sbb
push
sbb
sbb
sahf
adc
mov
hlt
lods
add
mov
sbb
ss
int
cs
adc
es
lret
loop
es
mov
enter
int3
and
negb
test
popf
int
fisubs
outsl
cmp
xor
cmp
in
push
ss
fldcw
int3
add
clc
xorl
pop
add
pop
test
add
push
popf
je
cmp
scas
add
pop
xchg
je
pop
mov
hlt
push
test
insl
add
push
push
je
pop
stc
add
push
loope
cmp
pushf
add
pop
loope
mov
push
std
jne
push
jle
cli
push
aad
mov
push
shll
push
dec
add
pop
test
add
push
xchg
jne
push
lock
push
inc
jbe
push
imul
push
lods
add
add
pop
jbe
pop
add
add
push
add
adc
inc
inc
push
add
sti
adc
cmp
cld
push
add
cld
adc
test
cld
and
xor
push
add
push
push
add
adc
inc
out
add
in
add
adc
in
les
add
adc
cmc
les
inc
cld
ltr
add
add
movsb
push
add
sti
push
add
sti
adc
and
adc
add
addb
adc
add
addb
adc
add
addl
in
addl
sub
adc
inc
addl
adc
add
inc
add
or
addl
adc
add
addl
mov
add
addb
adc
add
addl
adc
add
addb
adc
add
addb
adc
add
adc
add
jle
add
scas
add
clc
xor
clc
mov
adc
xor
add
clc
cmp
clc
pop
add
clc
insl
js
clc
das
add
clc
imul
clc
dec
js
clc
cmp
add
sub
clc
hlt
add
inc
js
clc
sub
adc
cmp
clc
add
push
clc
in
ja
clc
daa
add
clc
in
inc
clc
lcall
clc
test
clc
mov
inc
clc
inc
add
clc
jns
inc
clc
rolb
or
jno
inc
clc
push
xchg
add
pop
jns
mov
push
insl
js
pop
addb
push
cltd
js
pop
sub
js
cmp
out
add
push
xchg
js
pop
and
push
jge
cmp
or
pop
jne
cmp
jbe
hlt
push
aad
cmp
int3
add
push
std
jne
pop
js
out
push
add
add
cmc
jne
push
inc
add
push
popf
jne
push
add
push
mov
add
push
mov
push
push
add
push
xchg
jne
push
add
sti
sbb
jns
push
add
add
pop
add
push
add
outsb
push
add
outsb
push
add
dec
push
add
sbb
dec
dec
push
add
hlt
sbb
inc
cs
add
add
push
add
adc
movsl
push
push
add
push
push
add
and
cmp
sti
xor
inc
out
push
add
sbb
icebp
int3
push
add
int3
push
add
sbb
cltd
lods
push
add
test
add
add
sbb
add
sbb
add
sbb
add
inc
add
add
add
sbb
add
inc
add
adc
and
add
sbb
add
or
popf
addb
sbb
add
sbb
add
addb
sub
or
add
add
cmc
addb
pop
or
dec
addb
sbb
add
out
pop
clc
lods
push
clc
jae
or
mov
inc
clc
mov
push
clc
fiadds
or
dec
insb
inc
clc
ds
clc
jge
inc
clc
jmp
insb
inc
clc
jmp
insb
inc
clc
mov
sub
lds
xchg
add
add
sub
clc
sbb
clc
sbb
add
clc
dec
outsb
inc
clc
test
or
jno
inc
clc
or
clc
xchg
insl
inc
clc
xor
or
xor
add
outsb
inc
clc
push
fildl
cld
push
fldcw
push
lcall
push
outsl
add
push
test
add
push
popf
outsb
mov
push
xor
add
push
dec
outsl
add
pop
addl
cmp
push
outsb
cmp
hlt
add
push
jns
cmp
pop
add
pop
inc
outsb
cmp
out
add
push
inc
outsb
cmp
pop
add
push
test
add
push
inc
outsb
cmp
aas
add
push
push
outsb
mov
pop
jmp
idiv
sbb
aad
push
add
xlat
push
add
sti
inc
add
xchg
push
add
add
or
cltd
xchg
push
add
sti
or
adcl
push
add
pusha
push
add
cld
adc
lea
add
cmp
popf
pusha
push
add
cld
sbb
xchg
push
push
add
cld
sbb
jmp
cld
sbb
icebp
push
push
add
and
fsts
push
add
pop
push
add
and
adc
aad
or
add
sbb
add
inc
add
push
add
inc
add
sbb
add
sbb
add
jns
add
adc
inc
add
js
add
adc
add
adc
add
adc
add
jle
add
sbb
sarl
jb
add
test
sbb
add
data16
add
adc
add
jl
add
mov
add
mov
add
clc
movsl
push
or
lea
clc
roll
clc
mov
inc
clc
lret
clc
jno
inc
clc
cmp
or
xchg
push
or
jne
inc
clc
inc
add
clc
imul
clc
popf
gs
clc
clc
add
clc
insl
inc
clc
roll
or
add
add
add
andl
clc
shll
push
gs
clc
mov
adc
jno
inc
clc
xchg
add
clc
leave
gs
clc
push
xchg
add
push
add
add
push
adc
add
push
movsl
mov
add
push
cltd
mov
add
push
mov
push
cmp
mov
add
push
jno
mov
push
push
add
add
add
add
add
push
lea
pop
push
add
pop
lea
pop
lds
or
cltd
data16
adc
data16
icebp
add
push
popf
data16
fiaddl
pop
pop
cmc
arpl
pop
cmc
add
pop
int
cmp
add
sbb
add
sti
mov
sti
cmp
rcr
push
add
sti
xor
pop
fistl
lods
sti
adc
and
add
sbb
or
adc
add
adc
add
sti
pop
add
lcall
xor
add
pop
push
add
add
push
add
or
test
add
add
popa
sbb
sbb
or
mov
cmp
sbb
add
add
sbb
add
jns
add
add
add
adc
add
inc
add
js
add
sub
add
adc
add
jbe
add
jbe
add
adc
add
inc
add
or
sbb
sbb
add
jbe
add
jne
add
sbb
cmp
add
sbb
fnstenv
add
clc
in
or
push
pusha
inc
clc
and
clc
and
clc
test
or
mov
inc
clc
ljmp
clc
push
add
clc
pop
pusha
inc
clc
mov
pusha
inc
clc
lods
add
clc
cmp
clc
dec
add
rcrl
clc
jo
adc
clc
aas
add
clc
jo
adc
cltd
pop
inc
clc
rolb
or
dec
test
clc
sbb
add
pop
test
clc
leave
add
clc
dec
test
clc
rolb
adc
xchg
cmpsl
aas
clc
push
insb
add
pop
pop
test
push
cmpsl
add
pop
popf
test
push
std
add
mov
lock
jns
mov
pop
pop
test
pop
inc
add
push
loope
pop
pop
test
sti
push
aad
movhps
add
push
shrl
clc
push
jmp
add
push
leave
push
add
push
mov
clc
push
call
add
push
mov
add
push
sbb
push
loopne
repz
fldl
clc
push
jmp
ja
adc
fidivrl
fidivl
fisubrs
or
pop
add
cs
add
pop
pop
add
int
add
push
add
cs
add
daa
pop
add
and
add
and
add
add
push
add
iret
push
add
sti
push
add
std
sbb
jecxz
sbb
jecxz
sbb
jmp
adc
ljmp
add
cld
jle
push
hlt
je
inc
cld
bound
and
and
adc
gs
adc
add
push
add
adc
pop
adc
popf
adc
add
mov
adc
add
add
test
push
outsl
inc
das
xor
inc
data16
bound
add
adc
add
add
inc
adc
and
xor
add
xchg
bound
je
jbe
jne
insb
add
gs
push
jo
outsb
inc
jl
outsl
clc
dec
outsl
gs
inc
inc
insb
addr16
insl
add
xor
add
jns
sub
sub
jb
adc
adc
clc
or
push
clc
sbb
clc
stos
add
clc
adc
clc
roll
clc
xor
repnz
sbb
jae
jecxz
imul
lods
jbe
sbb
jne
fcomps
data16
fwait
add
addl
arpl
xchg
or
add
add
add
aad
push
or
jo
cmp
and
xor
in
sbb
add
push
push
add
pop
or
pop
or
dec
pop
or
push
sub
pop
or
dec
pop
sbb
push
fstpt
cmp
outsb
cmp
pop
cmp
cmp
and
mov
push
push
mov
push
call
cmp
push
flds
clc
push
fadds
add
push
sti
add
push
cli
add
push
std
add
push
hlt
add
push
filds
clc
push
add
push
add
sti
push
add
sti
push
add
hlt
push
add
cld
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
hlt
push
add
cld
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
cld
push
add
sti
push
add
xlat
jnp
aad
jb
pushf
push
xchg
popf
pop
jns
pushf
je
test
push
add
jb
je
push
jl
jb
jnp
imul
outsb
fs
sbb
repnz
or
je
sub
sbb
icebp
sbb
add
sbb
clc
sbb
sbb
cld
sbb
add
insl
add
add
add
insl
add
sbb
push
sbb
add
sbb
add
sbb
add
cmp
stc
sbb
sbb
add
sbb
clc
mov
add
mov
cmp
fadds
cmp
mov
add
clc
dec
jae
clc
out
incl
add
push
push
jae
push
jo
clc
cmp
imul
arpl
add
cmp
imul
push
ja
adc
jne
clc
cmp
imul
jmp
insl
popa
call
mov
dec
lods
addb
mov
imul
fsubrl
shll
add
push
cmpsb
addr16
data16
data16
add
add
add
add
lods
insl
fwait
jae
data16
push
jp
add
push
cs
push
addr16
fs
inc
gs
jp
push
je
popa
dec
push
cs
and
gs
imul
dec
sbb
add
push
cmp
and
xor
int3
pop
push
cmpsl
pop
add
and
push
jmp
cmpb
add
add
add
add
push
and
popa
or
popa
or
adc
jo
add
adcb
ja
add
mov
pop
add
and
push
add
adcb
push
add
outsb
push
add
push
add
sti
push
add
sti
push
add
sti
push
add
fstl
data16
add
add
add
add
add
add
bound
scas
nop
push
add
push
add
mov
sti
or
sahf
aas
add
and
pop
and
add
sahf
aas
add
push
add
sub
add
sbb
add
sbb
add
or
push
add
loop
add
aad
add
aam
add
xlat
adc
add
loope
add
cmpxchg
add
loopne
add
mov
add
mov
add
mov
add
mov
add
aas
add
scas
add
aas
add
dec
pop
dec
adc
add
xor
add
clc
sbb
clc
pop
and
clc
add
icebp
add
clc
clc
add
clc
mov
add
mov
insb
clc
stos
add
clc
addl
clc
mov
popa
clc
xchg
add
add
add
add
add
in
add
clc
repz
clc
fidivl
test
js
shr
imul
add
pop
mov
inc
clc
dec
jmp
inc
clc
push
jmp
or
jae
decl
mov
test
js
or
cmp
fcompl
pop
aad
mov
push
arpl
mov
push
push
adc
push
xorb
add
add
das
add
dec
or
xlat
adc
push
push
idiv
dec
leave
add
popf
mov
inc
fisubl
test
imul
sbb
or
pop
mov
adc
pop
stc
add
push
flds
clc
push
fnstcw
enter
clc
push
jmp
add
push
jmp
scas
or
loop
andnps
xchg
add
inc
lock
add
lock
add
jmp
push
add
fcoml
aam
add
notl
out
push
add
push
add
sti
push
add
sti
push
add
adc
add
cmp
add
cmp
xor
pop
inc
jmp
aas
dec
push
jmp
add
add
add
push
add
sub
sub
dec
dec
and
inc
add
movb
es
push
add
adc
add
sbb
add
sbb
add
add
push
push
push
inc
adc
add
popa
dec
dec
push
pop
dec
dec
inc
and
add
inc
dec
dec
push
popa
push
push
inc
test
push
inc
push
xchg
push
add
sbb
dec
dec
add
push
add
adc
push
dec
add
add
inc
inc
or
inc
add
rorb
inc
ljmp
add
xor
push
aas
xor
clc
and
push
mov
out
add
clc
std
inc
push
mov
pop
add
mov
push
dec
mov
jp
push
int
dec
inc
lret
inc
clc
jg
push
mov
lahf
dec
push
add
nop
arpl
mov
popa
lea
pop
jno
pusha
arpl
gs
inc
imul
add
clc
push
outsb
inc
dec
data16
dec
pop
outsb
pop
sbb
and
push
pop
sbb
imul
pusha
adc
add
push
cld
jae
push
or
add
push
rcrb
data16
fsubrl
pop
add
push
lret
addr16
add
push
int
mov
push
push
dec
mov
push
cmovg
push
pop
dec
mov
pop
jmp
add
jp
dec
pop
push
add
pop
inc
add
pop
pop
add
push
or
pop
sti
add
push
testl
sti
push
add
hlt
imul
cld
add
add
inc
add
add
insb
add
sti
push
add
sti
addr16
sti
push
add
sti
jno
imul
sti
dec
add
sti
push
add
sti
jno
jmp
sti
push
add
sti
outsl
add
push
add
cld
dec
add
add
inc
add
jae
add
notb
xor
mov
add
fistpll
add
jns
add
js
add
js
add
js
add
cmp
lds
add
inc
add
arpl
mov
sub
mov
add
bound
mov
add
inc
add
sub
add
add
inc
add
lea
jb
xchg
adc
add
adc
clc
dec
add
clc
sub
clc
sbb
add
clc
push
add
clc
and
clc
add
clc
out
add
clc
and
clc
add
clc
push
add
clc
adc
clc
push
add
clc
adc
clc
roll
clc
enter
or
clc
add
clc
or
clc
jecxz
js
clc
addl
clc
pushf
add
clc
pushf
cmp
cmpl
xchg
js
inc
pop
addr16
popa
je
out
add
clc
sub
inc
clc
push
ljmp
pop
stc
test
pop
and
cmp
addb
jge
dec
mov
call
test
insl
cmc
dec
ret
cwtl
mov
fdivs
add
clc
push
gs
imul
dec
cmpsl
push
mov
inc
jmp
fstpl
in
loopne
test
add
sbb
call
jne
popa
test
inc
add
bound
dec
pop
add
adc
and
pop
in
and
xor
hlt
push
add
movsl
scas
mov
ljmp
add
add
add
movsl
mov
sti
push
add
aas
into
scas
mov
jg
cmp
leave
lcall
cltd
movsl
mov
mov
std
mov
push
add
in
inc
push
lock
push
repz
push
dec
jecxz
pushf
loope
icebp
aad
add
enter
sbb
add
mov
mov
add
add
add
sbb
add
ret
div
test
iret
jecxz
mov
sbb
add
js
mov
das
out
xchg
sbb
add
pop
inc
add
loope
xlat
xchg
loope
fiadds
aad
mov
sbb
add
in
clc
aad
xlat
fimull
out
fildl
fadd
movb
jmp
fstps
add
add
add
jns
add
out
sub
icebp
sub
fisubrs
sarb
lea
mov
fcmove
addb
clc
imul
or
unpckhps
xor
dec
push
aaa
rolb
clc
outsb
mov
pop
ss
jnp
add
clc
bound
sahf
clc
rolb
cli
xchg
xor
clc
insb
loopne
push
push
ror
add
fsubl
stos
mov
jg
mov
jnp
jbe
pop
mov
push
dec
test
ret
add
push
sbb
std
enter
in
das
rclb
rcrl
sbb
and
or
sahf
lea
sahf
mov
xchg
pop
mov
pop
jle
aam
dec
aas
or
jb
dec
inc
add
push
or
fstl
leave
push
jno
add
insl
lea
pop
or
fsubrs
or
push
es
sbb
adc
unpcklps
sbb
add
or
jmp
sub
rcrl
cmp
ret
sbb
lock
ret
jmp
ror
and
int3
icebp
add
leave
sar
push
std
pusha
dec
inc
inc
imul
inc
pop
inc
sbb
pop
jbe
push
pop
add
mov
adcl
dec
add
pop
cld
push
add
mov
bound
js
jmp
mov
push
test
add
imul
outsl
pusha
jo
jo
insb
dec
cmp
inc
jno
add
sbb
or
pop
or
add
add
add
cmpsb
sub
pop
add
mov
sbb
sti
sub
add
add
cmp
dec
sub
or
add
adc
mov
mov
das
movsl
lcall
rcl
loopne
in
xchg
fmul
xchg
lea
add
xchg
and
or
adc
sub
out
add
add
inc
xchg
mov
push
fwait
lahf
dec
push
lods
mov
testl
outsb
jae
dec
jo
pop
dec
insb
jnp
xchg
dec
add
dec
mov
test
mov
pusha
cmpsb
test
push
push
mov
push
sahf
jg
xchg
int
add
mov
adc
ret
enter
add
ljmp
push
push
testl
add
add
push
push
in
pop
adc
leave
inc
ret
pop
lcall
test
adc
dec
fidivs
ret
imul
push
or
lods
outsl
aam
out
pop
cmp
add
push
popa
test
mov
int3
jl
sar
stc
add
push
sub
adc
out
push
das
in
or
filds
add
std
notl
fadds
lret
insb
pop
ss
dec
int
out
pop
in
sti
sub
push
enter
clc
push
add
test
fmul
inc
imul
test
cmp
sti
push
add
hlt
or
add
push
daa
push
call
push
adc
mov
ss
inc
jmp
into
push
ror
iret
sbb
inc
fwait
xchg
sti
push
add
push
sbb
clc
pop
add
sahf
sti
ret
fwait
into
leave
int
mov
jg
jnp
dec
push
jmp
mov
out
test
test
push
adc
add
fwait
aad
movsb
mov
call
imul
fists
adc
add
mov
add
push
pop
popa
adc
add
cltd
xorb
inc
adc
add
jmp
cwtl
out
in
fcmovnu
add
cmpsb
mov
add
sbb
add
jmp
sbb
add
dec
xchg
fwait
pop
ljmp
mov
rcll
add
lea
sub
fisubl
and
int3
and
iret
mov
push
add
call
add
clc
mov
dec
mov
dec
dec
clc
pop
in
push
adc
lcall
sub
popa
outsb
cmpsb
bound
stos
bound
sahf
push
xor
cmp
js
cmp
repz
inc
clc
or
hlt
sub
inc
cmp
decb
aaa
xor
es
push
neg
add
clc
push
mov
add
clc
push
int3
sub
or
push
pop
sbb
lret
divl
insl
decb
pop
pop
cmpsb
ss
gs
sti
sub
sbb
sbb
cmc
rclb
mov
clc
push
jmp
xor
out
add
push
iret
jb
repnz
es
add
cs
push
mov
sbb
mov
add
push
cwtl
pop
test
add
add
add
cmpsl
int3
out
push
sbb
add
push
adc
cmp
add
dec
loopne
movsl
inc
roll
jl
lds
cli
or
jbe
sbb
or
inc
dec
imul
pusha
dec
lock
ss
ljmp
push
add
xor
fists
and
fidivrs
and
out
sbb
arpl
add
sub
mov
sub
lret
jecxz
lret
mov
jle
insl
and
mov
adcb
add
lret
rcll
call
mov
repz
push
inc
push
popa
dec
je
push
pop
add
cmp
subl
adc
pop
adc
adc
pop
add
add
and
daa
sti
and
pop
add
jns
mov
push
test
jmp
repz
push
add
js
imul
js
jae
and
je
jne
dec
insl
xor
jno
clc
outsb
pop
jne
pop
pop
jnp
bound
sub
mov
cld
and
push
pop
mov
or
cmp
push
pusha
add
sub
mov
adc
in
pop
jo
and
xor
sub
sbb
xlat
mov
inc
movsb
shlb
loopne
stc
cmp
in
push
add
rclb
sbb
or
add
mov
jmp
adc
aam
adc
loop
pop
mov
popf
push
in
pushf
int3
xchg
cmpsb
mov
popf
jecxz
shlb
add
lahf
xchg
les
mov
inc
in
lods
mov
ljmp
jae
dec
cmpsb
nop
cmpsb
inc
test
push
ja
scas
push
jecxz
scas
data16
cmpsl
pop
test
xchg
jb
addr16
rcrl
imul
js
ja
jns
test
cmp
dec
cmp
add
and
arpl
or
cmp
sbb
cmp
aaa
jge
cmp
cmp
je
sub
addr16
sti
leave
pusha
push
shlb
ds
sbb
adc
and
je
mov
imul
pop
pop
mov
mov
push
pop
lods
ret
outsb
pop
cwtl
push
dec
scas
mov
push
mov
dec
cmp
add
add
add
adc
mov
or
in
pusha
sbbb
xchg
cmp
add
bound
arpl
ud2
cmp
pop
adc
push
bound
add
addl
adc
xchg
insb
lods
nop
cltd
inc
mov
ljmp
lret
sahf
xorb
mov
adc
add
popf
andl
or
lret
push
push
jmp
leave
lcall
sbb
xor
fists
nop
sbb
inc
mov
loopne
cmp
aad
aas
add
sub
jnp
bound
addr16
rol
lret
lret
dec
add
clc
insb
xor
cmc
cmp
pop
pop
pop
int3
icebp
cmp
jb
fdivrp
inc
dec
sar
push
lcall
cmp
jnp
sti
dec
push
cmpsb
scas
add
clc
mov
xchg
popf
jg
jbe
xchg
cmp
inc
stos
rclb
push
movsl
xor
scas
aaa
addr16
lods
dec
cmp
cmp
mov
sub
dec
xchg
inc
jle
dec
dec
sbbb
pop
push
add
ss
insl
adc
popa
sbb
jmp
cs
jmp
add
sbb
sub
dec
jmp
mov
movl
xchg
out
fdivl
lds
cmp
insl
scas
cmp
pusha
test
movsl
push
lcall
push
dec
lods
pusha
testb
xor
add
mov
add
add
add
add
push
add
xchg
xchg
xor
enter
xor
xor
inc
dec
sbb
adc
dec
jg
das
add
mov
rorl
aam
dec
push
hlt
push
add
cmc
add
int3
pop
clc
jo
loopne
cs
jecxz
sub
jmp
sub
jmp
sbb
in
push
push
cmp
add
repnz
negb
pop
adc
in
sbb
call
dec
xchg
lcall
and
ret
push
cmp
shl
sub
mov
xor
push
sbb
mov
or
push
arpl
aam
inc
inc
sar
pop
sbb
inc
adc
pop
dec
dec
repz
inc
push
jmp
outsb
inc
aas
xor
out
jno
inc
cmp
stc
pop
push
pop
add
or
aaa
push
push
clc
jae
inc
sarl
clc
je
jle
shlb
jae
jb
iret
push
jne
xchg
push
dec
jnp
xchg
fs
cld
jmp
lret
rcl
sbbl
in
ret
in
clc
add
mov
pusha
xchg
mov
scas
push
mov
add
clc
and
sbb
jmp
adc
push
paddw
sbb
adc
rdpmc
clc
pushf
call
repz
in
mov
loopne
fistl
or
cmp
add
call
or
daa
incb
clc
push
int
lock
jmp
fcoml
clc
push
dec
jge
stos
dec
cmpl
jle
stos
call
roll
mov
mov
clc
push
mov
insb
outsb
arpl
dec
shll
inc
loop
call
sti
push
add
popf
cwtl
js
jbe
xchg
popa
mov
lahf
adcb
or
add
add
or
add
or
cmc
push
xor
aad
sbb
cmp
fdivl
pop
add
xchg
mov
movsb
inc
nop
js
in
ret
jae
int3
outsl
mov
mov
insb
je
mov
out
pushf
jne
stc
test
lcall
scas
fisttpll
pushf
movsl
fwait
xchg
js
dec
sti
push
add
sub
pop
stc
sub
push
add
add
add
adc
add
in
add
sub
cli
xor
adc
add
xor
mov
push
pushf
fs
mov
inc
outsl
movsl
mov
rcll
add
xchg
or
mov
hlt
cmp
xchg
adc
add
popl
fists
xchg
add
cmpsb
sahf
mov
outsb
cmpsb
mov
imul
add
and
sub
or
lods
add
clc
iret
push
das
fwait
pop
pusha
add
outsb
ret
dec
das
mov
dec
add
and
fisttps
sub
mov
jbe
push
cmp
mov
add
aaa
popf
mov
xor
movsb
mov
clc
adc
shlb
shl
clc
fmuls
in
and
add
add
add
testl
scas
jge
nop
mov
xchg
sahf
mov
xchg
add
clc
add
mov
push
sbb
push
jno
jae
xchg
cmpsb
imul
movsl
pop
push
push
test
sub
pop
stos
jecxz,pn
mov
push
clc
push
dec
aam
fidivrl
in
scas
ds
cmp
mov
inc
out
mov
add
push
mov
add
add
add
bound
aaa
sub
cmp
das
cmp
add
push
cmp
dec
mov
cmpsl
inc
push
mov
leave
mov
xchg
mov
sti
push
add
inc
bound
stos
inc
addr16
faddl
sti
push
add
inc
ret
incb
jle
mov
xchg
popf
jle
xchg
xchg
jmp
add
ljmp
and
xor
sbb
das
jmp
jle
movsb
jbe
jnp
push
push
jge
inc
imul
mov
or
movsb
hlt
adc
lahf
mov
in
test
xlat
in
int3
scas
ret
in
add
add
and
push
inc
mov
add
mov
cld
dec
inc
std
stc
inc
pop
add
dec
push
pop
push
in
pop
push
and
add
cwtl
xchg
cltd
lea
cmp
nop
test
xchg
mov
add
clc
hlt
cmp
in
and
daa
into
lds
sub
pop
add
insb
pop
outsl
jns
bound
xor
test
jne
popa
jg
xchg
pop
add
push
pop
push
inc
sub
pop
push
leave
add
push
clc
add
cs
xor
add
add
gs
push
imul
popa
es
pusha
insl
leave
adc
add
or
inc
pushf
out
dec
adc
pop
inc
pop
int3
sbb
les
inc
inc
enter
pop
scas
add
clc
insb
pop
jb
rcrl
iret
pop
bound
sub
sbb
rorb
rolb
clc
rorb
inc
jbe
cmp
aas
mov
pop
push
add
add
add
pop
bound
mov
and
pop
cmp
adc
dec
xlat
inc
inc
sbb
inc
push
arpl
cmp
adc
cmp
dec
out
sub
shrb
in
movb
popa
loop
clc
push
stc
sbb
fnsave
es
shrb
sub
and
inc
loope
mov
gs
pop
cld
cmc
or
pop
push
add
add
add
js
pop
jg
push
jmp
pop
sti
adc
sub
popa
leave
filds
repz
mov
out
aaa
xor
loope
dec
icebp
fs
ds
adc
and
dec
push
loope
add
adc
and
and
inc
adc
mov
xor
jmp
push
mov
inc
inc
fabs
jno
jle
call
pop
and
hlt
inc
orl
jbe
cmp
stos
idivl
mov
loope
xlat
mov
out
test
fnsave
ret
add
ror
rorl
leave
repnz
cmc
loop
clc
add
jmp
adc
add
or
clc
sbb
add
cmp
pop
sar
mov
mov
xlat
xchg
jl
int3
pop
leave
rorb
adc
add
and
push
pop
xor
sub
adc
mov
push
xor
adc
sbb
cmpsl
cmp
hlt
fstpl
sbb
fdivrp
add
std
int
mov
daa
jb
imul
add
inc
int3
cltd
inc
sahf
mov
mov
cltd
mov
add
lods
add
clc
adc
ds
adc
pushf
mov
adc
mov
xor
out
and
adcb
cltd
into
sbb
rep
hlt
adc
add
mov
push
jae
enter
iret
add
out
push
mov
add
popa
sbbl
bound
and
repz
mulb
sub
clc
pop
daa
fistl
fwait
lahf
insb
test
clc
push
movsb
mov
fcompl
inc
iret
mov
gs
iret
adc
in
rolb
inc
mov
push
scas
repz
sbb
clc
decb
adc
out
lahf
pop
mov
add
pop
lret
cmp
sbb
bnd
popf
cli
add
mov
clc
push
add
and
cmpsl
add
push
mov
push
stos
jmp
jno
in
pop
dec
mov
rorl
jb
cmp
sbb
jge
cmp
imul
add
lahf
fdivr
mov
loopne
xchg
movsb
in
push
mov
shr
sti
push
add
imul
add
stos
stc
mov
mov
std
lcall
int
push
add
jg
fwait
mov
mull
sar
in
dec
iret
call
add
jns
outsl
popa
imul
add
push
jae
push
pop
dec
inc
jae
push
push
cs
jp
sub
jge
arpl
add
add
add
outsl
sbb
jb
adc
add
daa
daa
pop
adc
sbb
mov
inc
or
and
add
jl
cmp
mov
mov
adc
ja
repz
cs
insl
add
sub
cmp
sbb
sub
jmp
pop
cmpsl
and
add
loopne
adc
shl
or
or
add
aad
or
loope
adc
je
ljmp
pop
in
pop
or
xor
and
ret
test
shrl
jns
shrl
into
in
xor
xchg
fsubr
sub
jae
jg
movsl
mov
inc
push
sahf
add
push
add
div
and
cld
add
add
add
add
add
push
sbbl
adcb
inc
dec
cmp
and
sub
dec
mov
push
xor
daa
xor
inc
movhps
ljmp
add
push
and
lret
push
fldenv
daa
pop
int3
cmp
pop
lret
push
lret
sarl
stos
mov
es
nop
xlat
pop
mov
mov
ja
ljmp
jno
pushf
aas
push
gs
lea
or
clc
jecxz
inc
fwait
int3
pop
adc
sti
push
add
dec
mov
add
cmpb
sti
push
add
je
outsl
adc
mov
in
test
mov
mov
movsb
mov
repz
mov
add
add
add
push
add
rcll
pop
icebp
lcall
mov
add
push
add
add
inc
add
das
inc
add
inc
add
sub
add
cs
add
sub
leave
pusha
je
sti
or
xchg
insb
insb
push
arpl
sldt
jns
je
lret
comiss
inc
bound
orb
add
nop
ds
nop
add
adc
imul
add
add
and
add
lahf
lahf
inc
add
scas
lea
testb
clc
push
pop
imul
loopne
push
loop
outsb
push
enter
addb
clc
mov
push
clc
jns
inc
clc
xchg
add
clc
add
clc
addr16
aas
clc
je
inc
clc
xchg
ret
inc
clc
jle
je
mov
dec
imul
sti
fs
pop
and
clc
and
clc
sbb
clc
adc
add
clc
in
add
clc
sbb
clc
push
int3
add
push
loope
mov
jmp
add
push
xchg
or
push
and
fistpll
cmp
repz
pop
movsl
fstpt
pop
mov
enter
das
clc
push
mulb
cmp
out
cmp
push
mov
sbb
mov
and
xchg
sbb
push
lea
and
lea
clc
push
scas
inc
xor
pusha
sbb
dec
add
push
daa
inc
rcll
mov
push
das
inc
rcll
add
fnstsw
imul
mov
lret
and
mov
add
inc
push
add
das
push
add
pop
add
push
add
pop
add
ljmp
ljmp
adc
add
mov
inc
push
push
in
cld
xor
sti
push
add
aas
cld
dec
mov
jne
ds
leave
sti
push
add
sbb
imul
cmp
add
add
add
add
add
cmp
cld
arpl
lods
dec
add
push
cmp
inc
push
jae
dec
inc
addr16
je
add
adc
add
mov
add
inc
add
mov
inc
add
inc
add
mov
add
mov
add
inc
add
add
add
add
stc
inc
add
loopne
inc
add
and
or
jae
add
ja
or
and
mull
and
idivb
inc
mov
in
dec
ret
stc
ss
mov
xor
add
push
iret
fstps
and
rcrl
pop
shl
pop
mov
pop
popa
fs
adc
xchg
pop
pop
insb
lea
add
clc
mov
inc
inc
xor
cmp
add
cmp
jnp
dec
sub
sub
push
xlat
sub
mov
pop
imul
test
or
dec
jne
sub
adc
sub
sbb
std
adc
call
dec
mov
std
clc
repz
jmp
dec
mov
push
add
add
push
std
add
mov
push
or
clc
push
fwait
add
pop
cmp
cmp
gs
cmp
pop
cmp
push
cmp
insl
cmp
daa
cmp
stos
mov
pop
mov
clc
push
jmp
add
push
jmp
add
push
jmp
jmp
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
push
mov
cmp
xor
cmp
inc
jbe
popf
dec
sarl
push
push
pop
dec
adc
and
push
je
lcall
xor
mov
dec
stos
dec
icebp
cmpsb
fiadds
fs
shl
popf
dec
add
cwtl
call
xchg
sbb
mov
rolb
add
pop
sbb
push
faddl
lea
fadd
mov
or
je
adc
adc
faddl
loopne
rolb
inc
sbb
mov
xchg
rcll
mov
inc
push
push
dec
jl
and
push
filds
add
inc
add
dec
or
clc
stos
inc
push
cmp
out
enter
in
cmp
add
inc
les
daa
cmp
shll
mov
cli
add
mov
mov
sbb
ss
sti
repz
mov
aam
mov
subl
notb
add
mov
jb
test
mov
imul
and
push
add
jns
add
jg
lock
out
addr16
mov
leave
sub
push
lea
adc
adc
out
out
sbb
mov
out
aam
mov
cmp
xchg
ret
adc
ret
enter
add
cltd
aaa
hlt
push
and
aad
stos
inc
and
mov
adc
loopne
sub
sub
xchg
push
mov
clc
xchg
xor
cmpsl
inc
movsl
add
add
dec
sbb
aam
or
xchg
fnstcw
cmpsl
out
sub
push
into
push
call
pop
inc
inc
jmp
cmp
cmp
jne
inc
pop
stos
int
lock
lods
sbb
out
aas
push
inc
jmp
jb
push
jle
imulb
cmc
xor
sub
push
mov
mov
cli
push
pop
dec
xchg
inc
pop
mov
mov
ljmp
jecxz
inc
add
mov
add
notb
test
sbb
add
inc
cmp
mov
cmp
clc
fisubrs
sar
inc
add
fidivl
xchg
sbb
add
jp
add
shlb
jae
sahf
rorl
test
jmp
xchg
sbb
mov
bound
xchg
nop
call
cmp
shl
movb
outsl
jbe
pop
sbb
clc
repz
addb
add
add
add
add
add
ror
test
js
inc
add
pop
pop
cmp
addl
mov
jnp
pop
jne
sbb
jne
repz
sbb
add
push
clc
xor
dec
testl
icebp
jae
sbb
add
stc
ljmp
clc
mov
push
sbbb
add
add
add
add
idiv
lret
shll
in
add
add
into
addr16
imul
add
mov
sub
clc
pop
xor
cli
cld
addb
rcll
ja
xor
xchg
addps
and
and
ficoms
sbb
sub
sbb
fisttpll
add
add
add
add
scas
add
push
sahf
ja
and
push
cmp
call
andl
or
cmp
dec
jp
inc
jmp
cmp
andl
ds
sub
push
add
pop
add
cmp
mul
xchg
xor
sub
add
incb
js
jae
add
cmp
fisubrs
pop
push
fsubrp
adc
hlt
inc
mov
stos
mov
cmp
add
dec
mov
aas
arpl
aam
mov
xor
sub
add
sti
pushl
mov
cmp
loope
call
cmp
adc
rclb
xchg
adc
inc
add
inc
mov
add
loope
add
mov
dec
pop
adc
adcl
mov
jne
stc
xor
call
mov
cmp
push
add
loope
cmp
sbb
push
ss
adc
sbb
mov
dec
inc
add
and
loope
test
clc
add
addr16
inc
add
out
add
add
stos
cwtl
pusha
cmp
push
ja
scas
push
incl
loopne
mov
jb
dec
jmp
cmp
inc
mov
les
ljmp
idivb
mov
push
push
incb
clc
and
pop
cmp
mov
js
add
in
add
stc
mov
or
clc
push
cmpsb
xor
repz
jmp
jmp
jne
push
jmp
mov
dec
pop
cs
dec
pop
push
push
mov
repz
in
jmp
mul
adc
sti
ret
mov
test
popa
incl
scas
push
lret
bound
leave
adc
pop
mov
jmp
addb
add
add
add
add
sub
dec
dec
inc
loope
xchg
cs
popf
cmp
sub
incl
pop
mov
push
pop
scas
inc
push
cmpsb
lods
adc
xchg
lods
push
push
mov
dec
adc
cld
xchg
cmc
hlt
lret
int
and
mov
cli
xor
mov
or
sub
jbe
test
cmp
bsr
xchg
pop
cltd
inc
or
aaa
popl
or
jmp
sub
inc
inc
mov
xor
ja
lods
xchg
jmp
or
divb
jb
push
adc
lret
call
xchg
fnstenv
shlb
xor
into
inc
pop
pop
push
xchg
inc
and
popf
push
push
xor
pop
xchg
add
rcrb
in
dec
push
mov
in
cmpsb
push
inc
shr
add
out
decl
arpl
mov
incl
mov
imul
lea
dec
push
incl
inc
popa
sbb
je
sub
jmp
lcall
enter
aam
dec
decl
mov
ret
in
cld
pushf
cmp
xor
clc
scas
add
add
xor
mov
pusha
mov
mov
mov
pop
mov
push
mov
mov
jbe
and
inc
adc
sub
push
cmp
in
adcb
decl
das
pop
jnp
loop
mov
add
mov
push
ror
pop
jmp
add
xlat
push
add
ljmp
or
adc
scas
sbb
imul
popf
idiv
sub
lcall
or
lods
decl
cwtl
add
xchg
pop
cs
xor
out
mov
stos
loopne
clc
push
aaa
ret
into
sub
movsl
add
call
out
jl
jnp
add
xlat
das
rcr
add
stc
cmp
add
daa
ljmp
xchg
test
cld
fwait
adc
push
push
add
mov
lahf
mov
jmp
push
push
add
nop
pop
enter
jmp
cwtl
addb
sti
inc
push
pop
mov
pcmpgtw
jmp
aas
pop
add
addl
add
add
in
cli
push
mov
dec
inc
jmp
dec
cltd
out
mov
mov
dec
push
cld
push
imul
cld
decb
inc
push
mov
push
int3
insl
sti
jmp
mov
cmp
mov
pusha
into
dec
add
xchg
adc
pop
jb
add
or
gs
jb
js
imul
mov
cwtl
push
and
adc
push
inc
xchg
cmp
loopne
mov
push
add
aas
add
inc
in
push
mov
sub
scas
add
push
jl
push
pusha
in
add
sub
scas
add
stc
scas
repz
sub
jge
add
push
push
stos
fdivl
add
xor
pop
dec
inc
lret
and
sub
mov
mov
xlat
inc
add
mov
and
test
ss
in
sub
xchg
jmp
mov
loopne
mov
add
dec
test
scas
add
cmp
clc
jecxz
pop
iret
sub
pop
mov
push
imul
inc
cmpsb
inc
or
out
clc
xchg
mov
incb
icebp
adc
pop
bound
sbb
inc
faddl
ss
arpl
cs
repz
jmp
jmp
dec
lods
inc
inc
push
adc
pushl
cli
and
jb
test
ljmp
into
cld
push
test
or
leave
push
add
sub
call
mov
stos
add
jbe
rclb
mov
lret
jb
sub
add
pop
inc
test
notl
hlt
scas
clc
xchg
cmpsl
xchg
mov
imul
mov
jmp
cld
fildll
inc
jmp
add
add
add
push
lods
sti
fwait
mov
add
decl
into
lds
add
pop
dec
push
sbb
decb
std
mov
inc
push
adc
call
in
or
add
shl
mov
popa
xchg
orb
sbb
aad
push
push
leave
sbb
add
lds
mov
mov
mov
pop
lds
add
add
add
ficomps
test
in
push
push
or
cmp
fdivrp
movsb
jmp
or
jl
clc
mov
xchg
lahf
jg
das
das
les
add
fwait
lcall
inc
add
incb
addr16
lods
adc
outsl
inc
add
scas
arpl
scas
inc
add
or
dec
add
das
sbb
add
push
fiadds
adc
les
les
insb
ljmp
add
ss
dec
stc
xor
add
mov
mov
notb
pop
jmp
add
fcmovnu
jl
add
clc
push
jmp
add
push
jmp
dec
xor
push
mull
in
lods
add
jnp
test
push
adc
adc
jmp
mov
xchg
insb
ret
lret
sub
sar
out
fwait
into
xchg
int
adc
cli
ret
fistps
roll
push
or
dec
cmp
jno
js
hlt
sti
out
xchg
ss
mov
jge
xchg
pop
add
sti
mov
push
inc
dec
add
xor
jmp
mov
add
add
add
add
insb
scas
push
lahf
and
pop
movsl
sti
jle
jecxz
push
mov
fs
cld
push
xchg
pop
call
ficoml
lods
lods
in
cmpsb
adc
cld
lahf
out
insb
push
push
into
or
adc
hlt
push
mov
sti
push
jne
test
lds
mov
push
bound
push
add
jmp
mov
add
cli
inc
mov
add
rorl
test
mov
mov
popa
call
inc
add
pop
inc
mov
push
pop
pop
enter
lods
adc
xor
push
push
out
call
in
xchg
push
xchg
enter
in
add
nop
adc
sbb
enter
add
adc
mov
enter
add
add
add
add
lcall
mov
inc
and
jge
decb
jns
adc
push
push
sub
and
inc
clc
or
sbb
jg
add
sbbb
cmp
or
mov
aam
jg
push
push
insb
int
lret
cli
ds
rclb
rcrb
stos
adc
insl
inc
add
mov
add
mov
pushl
test
or
cmpsl
push
mov
pop
push
mov
ss
clc
cmp
out
dec
fucomi
add
out
test
cli
nop
test
inc
adc
mov
imul
lods
add
and
ret
cmp
add
add
jmp
jecxz
jbe
aas
clc
fwait
push
pushf
lods
lea
add
pop
repnz
add
or
lahf
jp
inc
clc
fwait
cmpsb
fwait
jmp
push
cmp
push
push
fs
mov
add
jecxz
sub
out
sbb
ficoml
sub
jge
mov
daa
pop
pop
aaa
out
shl
cld
ljmp
outsl
pop
lods
add
adc
push
xlat
lcall
sub
push
mov
adcb
add
and
inc
or
lahf
rorl
inc
pop
inc
lds
aas
add
sti
adc
add
or
insb
mov
jmp
sti
jmp
inc
mov
push
add
hlt
xor
xchg
jbe
add
adc
dec
pop
add
add
or
and
adc
add
sub
and
test
les
cli
add
sbb
add
adc
add
xlat
and
lea
sbb
call
fsub
and
enter
popa
mov
iret
pusha
sbb
lea
sbb
lea
add
add
add
add
dec
loopne
popa
popa
add
clc
push
aas
and
addr16
jg
inc
aam
push
push
dec
jns
adc
add
clc
out
add
call
orl
fisubs
mov
cmpb
pop
jns
fmull
fisubrs
test
ficomps
mov
clc
cs
fadds
addl
imull
or
add
cltd
add
pusha
mov
add
clc
mov
adc
add
adcl
loopne
pushf
xor
int3
add
push
pusha
inc
fdivl
roll
aas
pop
jmp
add
push
adc
bound
je
adc
inc
pushf
or
sbb
cli
cltd
adc
out
addb
sbb
jbe
xor
movsb
sub
std
push
insl
roll
add
add
add
xchg
sub
jno
add
xlat
in
ret
andb
divl
dec
lahf
pop
mov
fwait
sahf
pop
out
mov
and
cli
push
add
cmp
push
mov
lahf
lock
in
jmp
push
xlat
pushl
jo
and
lods
sar
imul
rorl
in
pop
stos
inc
mov
add
add
add
add
add
sti
cltd
test
mov
pop
inc
mov
mov
nop
inc
out
jmp
sti
lahf
push
insb
push
test
ss
fisttpl
jmp
stc
push
add
sub
std
add
mov
push
lret
lea
std
stc
pop
cltd
add
xchg
mov
lea
push
xor
pop
jmp
add
push
pop
pop
pop
push
push
mov
push
add
xchg
mov
notl
testl
push
adc
call
lea
cld
incl
mov
sbb
and
cs
leave
mov
call
pop
out
in
add
inc
inc
jmp
int3
ret
inc
movb
clc
scas
xor
jg
push
lds
mov
and
xlat
mov
mov
add
aam
mov
dec
cli
aas
clc
cld
or
into
aad
xorb
and
cmp
daa
cmp
ret
jnp
inc
sarb
add
out
nop
fstpl
add
cld
es
jg
lea
lock
insl
mov
sbb
pusha
out
ljmp
insl
ret
jmp
imul
add
pushf
push
jmp
and
dec
lcall
idivl
lret
fwait
pushf
out
jg
pop
cli
push
les
adc
xor
or
pop
jl
add
xchg
test
add
fldenv
mov
neg
aas
inc
add
inc
jg
jne
out
push
pop
sbb
add
xchg
sub
jae
mov
enter
add
push
jmp
sti
mov
inc
jmp
cwtl
inc
mov
cltd
bound
xchg
aad
call
mov
xor
ds
sub
sbb
add
lcall
out
push
pcmpgtw
push
add
add
push
jmp
xor
add
sbb
cmc
inc
jmp
pushl
dec
out
dec
push
add
inc
shlb
pusha
add
mov
sub
repz
push
push
xchg
adc
dec
xor
mov
mov
test
add
push
pop
sbb
loope
push
mov
inc
adc
cli
add
decl
inc
jmp
and
push
push
aad
test
lds
push
xor
jmp
xchg
pusha
inc
shll
aas
add
or
cmp
add
les
sbb
add
mov
sub
addl
add
jo
aad
xor
or
push
or
orl
mov
pushf
popl
cmpl
push
dec
jo
mov
xlat
repz
js
pop
cmpsb
mov
movsb
adc
inc
clc
push
js
stc
outsl
mov
iret
inc
add
push
push
andl
mov
jmp
add
xchg
sbb
jns
pop
add
outsl
rcll
jmp
push
jmp
clc
xchg
mov
xor
orl
repz
or
pop
stc
push
jmp
add
test
add
cltd
and
jl
jbe
leave
xchg
arpl
nop
sub
pop
stc
push
jmp
add
fwait
test
and
pop
xchg
andb
jmp
call
popf
add
in
push
xor
sub
notl
add
jg
mov
push
test
sub
cmp
pop
scas
jno
pop
xor
mov
mov
adc
das
xor
sub
test
jg
jae
loope
call
pop
es
jmp
rclb
add
pop
jne
jo
cmp
pop
sbb
and
push
jne
adc
add
push
decb
bound
shl
jmp
ljmp
jmp
or
and
cwtl
call
and
xchg
call
fstl
ficoml
mov
ljmp
xchg
push
cwtl
jmp
xchg
dec
cwtl
stc
rorb
add
mov
add
add
add
sub
jb
cli
adc
leave
ret
int3
xchg
ljmp
pop
add
std
cmp
add
and
adc
push
loop
dec
mov
ss
inc
loope
push
and
dec
mov
mov
test
push
loop
xor
testb
lock
in
jae
ficoms
jae
mov
add
or
xchg
adc
outsl
lods
pop
subl
jns
stos
add
outsl
or
cmpl
jns
outsl
add
outsl
add
xor
cmp
loopne
xchg
out
cli
ds
and
push
clc
xor
mov
fwait
xchg
or
add
adc
fadds
outsb
push
jmp
lcall
cmp
je
ljmp
addl
add
xchg
insb
fistpll
push
jmp
add
lcall
daa
adc
add
std
repnz
push
clc
imul
push
pop
loope
lcall
bound
and
xchg
pushf
in
call
add
add
add
xchg
inc
int
sar
hlt
pop
es
jmp
fsubrs
in
int3
shlb
in
add
push
dec
mov
sti
outsb
scas
sub
push
mul
fwait
jmp
or
imul
sub
sub
push
add
mov
cmp
mov
std
jg
mov
fwait
in
jne
jmp
add
add
add
add
jg
inc
push
inc
add
js
add
ja
push
scas
jo
adc
sbb
je
adc
subl
test
adc
add
sbb
call
mov
sar
jmp
and
cwtl
mov
or
add
inc
mov
test
cmc
and
adc
mov
xor
pushl
push
inc
lret
add
xlat
and
jo
adc
or
add
push
adc
add
ds
movsb
insb
std
aaa
clc
hlt
or
cmp
outsl
mov
pop
das
add
cltd
fldl
add
fucomip
clc
outsl
add
clc
outsl
stos
ss
jo
jmp
cmpsl
sbb
scas
std
jg
imul
sar
jo
addl
jbe
cld
test
stos
imul
jo
push
mov
add
cmp
xchg
clc
outsl
add
jmp
xor
xchg
movsb
ds
and
add
push
rol
cmpsb
push
jmp
ret
ja
add
jnp
cmp
dec
mov
inc
shl
cmp
sarl
movsl
mov
xor
or
xor
push
cmp
inc
clc
jge
xor
xlat
call
mov
xor
mov
add
xchg
sub
icebp
out
lock
test
ret
mov
out
add
xchg
icebp
pop
pop
push
adc
jmp
inc
clc
add
xchg
stos
xor
xchg
inc
jge
filds
jle
push
xchg
and
outsb
arpl
jmp
ds
or
add
notb
hlt
outsb
hlt
and
push
mov
sti
nop
inc
int
fstpl
add
mov
out
mov
push
push
icebp
jbe
cwtl
mov
imul
es
jmp
dec
popa
fdivrl
es
jmp
push
xchg
rcrl
mov
sbb
add
jg
ss
push
push
sub
or
subl
jb
leave
lret
sbb
jmp
jmp
xchg
leave
add
pop
dec
cld
and
daa
adc
mov
or
push
mov
push
xchg
loope
test
or
call
jp
shr
mov
xorb
mov
cmp
inc
sti
mov
testb
add
add
add
add
inc
push
adc
std
adc
ljmp
or
clc
aas
or
or
xchg
add
mov
into
iret
xchg
mov
sbb
add
mov
adc
add
pop
push
or
xor
int3
add
sbb
ljmp
dec
inc
add
mov
lret
adc
lret
das
inc
pop
es
les
clc
out
lahf
sub
outsl
add
cltd
cmp
clc
outsl
jge
xorl
adc
add
pop
out
xchg
add
aaa
jp
cltd
ss
xlat
add
xchg
ss
iret
push
jp
adc
push
jmp
cld
push
xchg
pop
aad
jns
xchg
add
adc
xchg
sbb
out
clc
sub
lsl
jg
xor
inc
aam
outsl
das
outsl
aas
aam
pop
xchg
loop
add
lea
pop
jmp
add
das
jo
sbb
jno
adc
add
xor
jge
movd
rolb
pop
xchg
idiv
mov
pop
rclb
add
or
imul
xor
jle
call
xor
mov
stc
xchg
mov
ss
shrb
aam
or
rolb
and
xor
push
test
aam
flds
and
cmp
dec
add
ss
or
pushf
adc
mov
xchg
push
shl
jnp
pmovmskb
pop
mov
outsb
xchg
adc
mov
xadd
sbb
mov
adc
sub
testb
nop
call
cld
andb
add
pop
xchg
add
adc
call
clc
dec
and
cld
andb
and
adc
or
ljmp
adc
add
add
add
xchg
cld
push
clc
cmpl
jnp
sub
je
add
clc
in
mov
icebp
mov
clc
aam
adc
jnp
sbb
sbbl
cli
mov
jmp
clc
add
and
add
xor
mov
movsb
sbb
add
jg
lret
push
and
add
mov
stc
jg
jmp
add
jg
adc
aas
lret
sar
and
clc
push
jmp
rclb
fwait
loope
addr16
pop
adc
push
mov
push
jmp
decb
pop
repnz
dec
shll
fsubp
add
repz
jp
and
xlat
xchg
fs
jmp
addb
in
mov
jmp
add
add
add
sbb
mov
cltd
inc
in
mov
add
cmp
jp
and
cs
mov
sbb
out
xor
push
xchg
icebp
out
out
and
fistpll
sbb
aaa
cmp
pop
cmp
bound
xor
push
mov
mov
xor
daa
lahf
or
icebp
push
int3
and
out
cmp
mov
or
mov
mov
pop
or
or
inc
add
stc
pop
cmp
faddl
jmp
cmp
and
add
cmp
shr
jbe,pt
out
dec
and
mov
aad
and
or
and
xor
paddq
call
inc
add
call
mov
sbb
push
insb
dec
push
popa
sbb
pushf
pop
or
add
lret
iret
fiaddl
shl
or
adc
add
loope
or
push
pop
cmp
jae
and
jg
inc
pop
or
adc
and
ficompl
psubb
cs
jge
inc
aam
ja
add
popa
xchg
pushf
addl
xchg
mov
ja
sti
mov
cmp
loope
push
loopne
push
sub
incl
xchg
jg
add
clc
dec
xor
stc
jecxz
clc
jge
jae
dec
jg
xchg
jl
or
jge
cmpl
mov
jg
xorl
and
jge
sbb
jg
add
icebp
std
push
mov
add
mov
push
loopne,pt
cs
jecxz
jp
sbb
cmp
aam
bound
cmp
aam
sbb
jl
call
iret
ds
jl
cmp
fidivs
inc
je
cli
mov
inc
clc
iret
scas
sbbb
jle
cmp
cli
inc
sbb
push
add
sbb
call
add
dec
icebp
mov
mov
fs
and
scas
loopne
push
dec
popf
inc
push
int
xor
cs
repnz
insb
int
mov
cwtl
sahf
push
or
sub
cld
sub
inc
jmp
call
cmp
jg
and
add
add
add
hlt
push
fcomip
ss
mov
jno
jmp
dec
or
test
frstor
fld1
mov
pop
cmp
and
cmp
jl
loope
dec
call
jecxz
fisttps
lret
or
push
mov
cmp
and
xchg
outsl
andl
sbb
out
add
adc
mov
mov
movzbl
into
mov
xchg
jmp
add
enter
dec
xlat
adc
mov
jmp
lcall
ret
and
mov
orl
adc
xchg
clc
and
clc
jge
mov
cmp
jmp
jae
outsb
pushl
stc
mov
hlt
push
jge
idivb
mov
jge
add
hlt
rcrb
jmp
addl
mov
out
and
fiadds
inc
testl
stc
jge
cmovle
add
clc
jge
add
pop
or
xchg
out
insb
loopne
sbb
add
mov
push
cs
mov
jmp
xchg
cmp
push
fcmovne
out
clc
jno
xchg
or
inc
ret
push
hlt
lret
xor
xchg
pop
andl
xchg
in
in
outsb
in
dec
mov
out
mov
sub
and
out
jp
jae
test
inc
aam
adc
js
cltd
and
cli
sub
sub
cmp
cltd
in
add
push
test
lds
jmp
insl
fiadds
add
cmp
adc
jg
cld
ret
adc
mov
aad
jmp
sti
push
mov
roll
jmp
add
or
sbb
sbb
jmp
jle
and
hlt
push
add
mov
pop
call
push
jne
add
xchg
std
xor
xlat
cmp
push
in
jl
loope
cmp
minps
and
cld
xchg
jb
hlt
jge
incl
xchg
std
in
inc
add
outsb
cmp
test
sbb
mov
mov
pop
fisttps
lcall
push
dec
jbe
mov
rolb
add
inc
and
jle
iret
and
bswap
sub
shll
jle
and
jmp
out
pop
clc
jle
add
repz
and
jge
sti
out
and
push
inc
stc
idivl
cmp
add
lock
sub
lcall
add
add
add
clc
jge
pop
inc
xor
rcrl
and
ds
sti
ret
fildl
add
call
inc
mov
pushl
repz
jle
sbbl
add
clc
cmp
icebp
ficoms
mov
stc
ficomps
je
int
stc
push
jmp
fistps
jmp
addr16
imul
add
aas
sub
lods
fsubr
jp
xor
mov
lcall
jmp
jae
addl
adc
jnp
xor
mov
xor
clc
push
jb
jnp
jmp
mov
push
mov
call
sub
or
inc
push
mov
add
cld
push
add
push
adc
clc
rclb
add
cmpl
sti
xchg
out
xchg
imul
jp
or
push
add
mov
mov
inc
or
xchg
lea
imul
int
push
add
jp
and
jg
out
add
mov
outsl
test
add
add
add
cmp
out
jo
sbb
sti
sbb
add
enter
jnp
test
mov
adc
jmp
lcall
add
adc
and
adc
mov
cmp
inc
sbb
ficoms
movzbl
movzbl
shl
sbb
add
in
jmp
mov
xchg
jmp
lahf
and
adc
pmulhw
fisubrs
pop
and
pop
test
mov
mov
mov
cmc
adc
ffreep
add
daa
push
stc
jge
clc
icebp
stc
daa
push
stc
jge
mov
add
jge
jg
jge
dec
out
repnz
clc
jge
movsb
push
fiadds
clc
jge
mov
adc
add
clc
sub
add
push
mov
sbb
add
dec
cmc
push
mov
push
cmpsl
cmc
cmpsl
mov
mov
clc
jge
imul
mov
clc
xchg
mov
jle
mov
push
jmp
pop
push
repnz
cli
jge
decb
aam
push
mov
cmpb
fs
aam
jmp
fldenv
mov
jmp
add
add
add
sub
pop
daa
lods
adc
cmp
pushf
adc
int3
push
jmp
ret
in
fisttpll
icebp
push
jmp
push
xchg
ljmp
outsl
push
imul
pop
lock
bound
lods
xor
cmp
loopne
dec
add
iret
nop
addl
cmp
push
dec
cmpb
call
sti
gs
sbb
add
jb
push
es
cmp
push
lcall
ret
sti
gs
pop
pop
add
arpl
outsb
fwait
mov
jmp
push
gs
out
rolb
fimuls
push
or
hlt
lret
adc
sti
cmpsb
push
adc
mov
cli
push
loopne
add
dec
mov
pop
xor
mov
and
mov
push
add
movsl
cmp
mov
test
and
add
sbb
and
sbb
and
sbb
adc
sbb
loope
pop
minps
sbb
shll
add
and
je
and
sldt
add
add
add
add
jmp
popl
rcr
or
enter
icebp
add
clc
ret
ret
xor
jl
mov
cmp
cs
les
jae
push
sub
repz
adc
jle
inc
in
call
call
add
adc
icebp
daa
dec
stc
insl
add
icebp
inc
add
daa
dec
stc
insl
add
add
add
add
test
or
dec
jae
aaa
roll
dec
xor
inc
insl
xchg
scas
bound
dec
movsl
icebp
or
ss
inc
clc
push
jb
push
add
loopne
jnp
xor
clc
push
jb
sbb
pusha
out
sbb
pusha
xchg
out
clc
insl
push
ja
arpl
sbb
imul
fistpl
jo
add
out
clc
adc
and
cmp
adc
shl
xchg
sbb
dec
jp
dec
popa
xchg
ret
out
clc
push
mov
mov
fldl
dec
bound
sbb
jmp
and
and
dec
ss
call
fadd
add
sti
popa
mov
inc
pop
add
add
pmuludq
lcall
sti
lea
jmp
or
jmp
xchg
outsb
push
jmp
daa
mov
fistl
add
js
push
call
xlat
mov
es
jae
push
ret
push
insb
push
jmp
js
jae
aas
push
add
cmc
sbb
inc
int
dec
mov
pop
in
pop
adc
adc
rcrb
xchg
adc
sbb
pop
fwait
rcrb
adc
mov
sbb
paddq
rolb
jb
stos
pop
cmp
jne
push
repnz
cli
cmp
or
xchg
push
adc
stc
nop
test
xchg
insb
cmp
cli
hlt
mov
add
and
adc
jmp
dec
jno
adc
add
clc
imul
xorl
cmp
sbb
jge
or
rorb
mov
xor
out
js
and
sbb
inc
jns
cmp
sti
xor
sub
cli
xor
clc
insl
xor
mov
in
inc
stc
std
daa
sub
ja
out
pop
cmp
ja
mov
insl
add
xchg
out
shlb
popa
out
ja
inc
inc
jge
dec
pop
or
in
jmp
rolb
mov
mov
push
in
mov
iret
add
loop
sub
pop
out
xchg
pushf
sbb
push
jae
xor
int3
or
add
and
pop
adc
cmp
add
add
add
add
add
sbb
push
pusha
xor
or
push
add
insl
jmp
rclb
push
js
xchg
xchg
sbb
jl
and
fidivrs
jmp
loopne
dec
bound
jbe
sti
stc
push
test
cld
push
lea
add
pop
mov
ds
data16
aaa
add
add
cmp
and
test
sbb
mov
std
and
notl
mov
aam
test
pop
ss
addr16
sub
jb
sbb
ja
std
mov
test
ja
out
dec
ljmp
xor
pop
pop
add
and
call
cmp
outsl
jo
push
gs
add
cmp
imul
into
ds
inc
in
xchg
mov
lock
pop
adc
or
sub
rorl
inc
add
push
cmc
push
add
cmp
adc
xor
cli
rorb
jl
ljmp
stc
xchg
shlb
cmp
orl
add
jge
push
push
out
out
mov
ficoms
cli
insl
jg
ljmp
cmp
inc
inc
repz
push
jp
jbe
cmpsl
icebp
hlt
jnp
je
pop
fsubrs
cmp
add
insl
add
xor
testl
rcr
aad
adc
add
pop
aaa
fadd
orl
mov
loope
push
pcmpeqb
add
test
notl
add
aaa
jmp
subl
add
xchg
out
adc
push
and
xchg
xlat
adc
push
sbb
es
adc
imul
nop
and
add
insl
inc
jne
pop
rcl
jecxz
lahf
add
mov
add
adc
jg
sti
call
je
pop
mov
lods
add
stos
sarb
push
pop
pushl
or
aad
dec
inc
stos
ja
add
inc
sbb
push
aaa
lock
mov
outsl
dec
out
pop
cmp
fmuls
addl
fidivs
mov
loopne
cmc
in
push
jmp
add
mov
cmpsb
or
mov
mov
mul
cli
xchg
mov
outsl
xor
call
sbb
sub
add
loope
daa
or
push
packuswb
call
daa
sub
adc
ja
or
sete
push
add
mov
cmp
adc
std
cmpb
std
incl
mov
in
pop
sub
in
ja
adc
jne
sahf
xchg
fstps
mov
adc
sarb
add
cwtl
pop
add
cmp
call
test
loope
decl
mov
push
adc
jno
in
outsl
and
clc
pusha
test
sbb
add
add
push
mov
add
add
add
outsl
das
das
fsubrs
repz
clc
dec
rcrl
clc
insl
add
outsb
xor
clc
adc
cmp
ret
dec
cmp
pop
js
mov
cmp
xchg
xchg
mov
incl
jnp
and
jl
insb
outsl
dec
mov
andl
add
xchg
adc
inc
pop
data16
add
ss
adc
push
or
pop
pop
jmp
jno
sbb
and
push
fiadds
mov
pop
insl
repnz
or
add
outsb
jo
sbb
outsb
push
cmc
mov
add
imul
push
int
scas
or
mov
xchg
call
dec
in
jmp
add
pop
xchg
aad
outsb
push
lret
sbb
pop
jmp
add
insl
inc
fcompl
mov
jmp
push
pop
pop
clc
mov
or
jge
sbb
sti
xchg
imul
clc
nop
rdmsr
mov
fs
push
add
ja
sti
push
push
jne
push
mov
cltd
sbb
sti
aas
out
repz
push
push
aaa
xchg
setg
and
ljmp
add
add
cwtl
ljmp
and
loop
and
cmc
push
add
mov
mov
pop
bound
add
lret
inc
adc
cmp
je
rcl
mov
and
pop
rcll
ljmp
mov
inc
std
or
es
loope
and
cmp
dec
pop
cmp
popf
aad
adc
movzbl
and
add
push
mov
pusha
add
sbb
inc
rcr
fimuls
sub
adc
pop
and
sub
adc
cwtl
ret
add
int
xor
xchg
mov
mov
insb
dec
mov
inc
sarl
clc
mov
es
jnp
adc
xchg
es
jne
incb
lret
inc
mov
xor
lods
pop
rolb
clc
cmp
aad
jae
pop
out
in
insb
test
cmp
sub
cmp
sbb
ret
inc
aam
sub
push
cmpl
insl
daa
enter
in
jg
cmpsb
xor
lcall
sbb
out
add
pop
jmp
sti
sbb
clc
push
mov
and
addr16
or
pop
jmp
pop
xchg
inc
xor
xorb
enter
mov
push
sti
in
das
ss
adc
int
das
xor
jmp
fistpll
imull
test
lcall
add
add
add
add
and
jg
adc
inc
in
jo
mov
fcoml
aas
arpl
lods
incb
shlb
testl
sub
or
insb
jae
inc
or
sahf
dec
add
movsl
jecxz
jmp
sub
add
fisubs
stc
jb
and
jle
je
xchg
push
incb
in
inc
or
add
fmuls
mov
out
stc
sub
and
xlat
pop
jnp
iret
icebp
imul
cltd
jae
mov
or
mov
filds
and
fimuls
jnp
inc
test
or
add
push
and
fimull
inc
and
add
jle
roll
stc
add
setne
mov
sbb
test
lcall
inc
or
add
rolb
ret
ret
mov
push
adc
rcl
add
push
decl
and
sbb
mov
push
aaa
shl
jl
cmp
aas
add
inc
cmp
push
sub
dec
stc
mov
mov
faddl
mov
pop
call
out
or
add
pop
mov
add
or
cmp
xor
inc
mov
add
inc
jp
rcr
std
iret
sub
cmpb
and
addl
cmp
adcl
shll
jmp
sub
cmp
xor
andb
je
xor
sbb
test
add
add
add
aaa
les
and
adc
dec
jl
in
add
cltd
lcall
ficompl
mov
clc
push
jmp
adc
jecxz
or
fildl
jno
or
out
lcall
pop
sahf
mov
or
pop
add
pushf
mov
call
add
les
dec
out
enter
pop
push
mov
add
add
push
setg
fwait
jnp
call
pop
mov
loop
jmp
sbb
test
repz
jecxz
and
sbb
push
gs
cmp
jbe
lret
and
sti
pop
test
push
pop
add
sahf
inc
or
mov
pop
int
xchg
mov
sti
push
emms
cld
mov
add
fs
add
add
add
shll
leave
out
inc
add
lret
xchg
sbb
add
mov
and
aas
and
xchg
inc
cmpl
inc
andb
add
xchg
sbb
sbb
mov
and
adc
add
out
mov
push
jmp
std
mov
push
call
mov
add
ror
call
pop
xchg
mov
add
add
add
pushf
push
or
and
mov
adc
add
push
and
jle
adc
adc
cmp
out
sub
inc
stc
aas
add
dec
jne
nop
inc
aas
xorl
sub
cwtl
push
xchg
mov
add
xchg
out
jg
inc
aas
xor
out
and
cmc
call
lods
add
mov
cmp
add
cmpl
fninit
stc
cmc
orl
gs
jnp
push
and
cmp
jl
aas
add
or
loop
negb
rol
arpl
test
dec
call
mov
cmp
mov
xor
jno
fcmovnbe
out
clc
lahf
sub
call
push
idivb
push
ds
adc
xchg
int3
xbegin
ror
das
test
lea
clc
lahf
xchg
gs
adc
clc
push
push
gs
add
push
pop
mov
ljmp
pop
inc
push
gs
loopne
inc
out
xchg
pushl
jo
aas
call
incl
cmp
xor
jle
add
lahf
mov
mov
xchg
cmp
xchg
xchg
xor
jecxz
jnp
add
aas
lahf
mov
dec
mov
xlat
add
sti
cmp
cmp
inc
sbb
mov
popf
sbb
fwait
cmp
mov
pop
out
jmp
xor
push
xchg
pushw
mov
jmp
jmp
mov
add
push
lret
popf
pop
add
push
jmp
cmova
mov
cmp
jne
call
inc
mov
mov
shl
or
loopne
jmp
es
nop
and
loopne
pop
push
xor
loope
and
inc
cltd
int3
pmulhw
xchg
ljmp
test
xchg
inc
jmp
push
and
inc
stos
fucompp
in
add
ds
icebp
mov
and
adc
mov
xor
pop
jae
rcr
nop
inc
lods
insb
xor
xor
lret
jae
sub
movd
movl
push
pop
adc
add
dec
adc
mov
sbb
lea
pusha
mov
inc
adc
sub
movsb
push
testb
cmp
mov
push
cli
mov
test
mov
lret
cmpsl
mov
jmp
mov
aam
testb
iret
clc
push
jmp
adc
add
fwait
movsb
daa
in
pop
mov
and
out
xchg
xchg
imul
cmc
add
fwait
test
sbb
sbb
dec
call
test
sub
ret
repnz
xchg
rorl
add
icebp
roll
lret
fsubs
hlt
aas
call
xlat
cmpl
scas
out
pop
or
push
jmp
add
add
add
fwait
or
push
add
mov
out
decb
push
mov
test
inc
sti
push
add
sbb
into
outsl
repz
call
les
lods
iret
fmuls
test
sti
push
mov
xlat
add
sti
fwait
inc
cmp
adc
mov
cmpl
mov
pop
xchg
add
insl
xorb
push
xchg
sub
jl
test
jmp
mov
pop
sub
std
mov
aas
add
sbb
push
adc
inc
lods
dec
cmp
xor
daa
orl
inc
cmp
out
pop
nopl
add
pop
xchg
cmp
daa
xlat
cmp
inc
sahf
fwait
out
out
jl
decl
clc
mov
push
add
das
mov
jno
daa
adc
mov
lea
add
jecxz
lock
jnp
add
clc
xor
add
jae
and
loopne
xorl
mov
hlt
sbbb
pop
mov
sbb
divl
mov
clc
outsl
mov
mov
pop
stc
das
add
and
add
add
pop
xchg
and
add
outsl
ret
es
stc
das
add
push
mov
cltd
cmp
mov
int3
ret
clc
push
jmp
lret
rep
orl
push
jmp
mov
test
clc
push
mov
xchg
push
test
jecxz,pt
arpl
fcom
inc
sbb
pop
jb
jmp
add
add
add
pop
inc
std
pop
decb
add
or
les
add
jnp
jmp
add
mov
sub
push
jb
and
add
inc
jmp
leave
call
or
out
adc
test
cmp
aad
xor
daa
mov
xor
mov
xor
sub
add
add
add
add
aad
push
or
test
add
inc
call
mov
pop
fisubs
add
mov
xor
sbb
add
mull
out
insl
xchg
inc
cmp
push
add
sbb
mov
testb
and
inc
mov
out
pop
mov
adc
addl
add
add
add
add
cmp
or
add
cmc
fwait
lcall
push
rorb
insl
xor
inc
and
dec
insb
ljmp
add
push
add
mov
mov
mov
lods
push
sarb
mov
jmp
sbb
xchg
push
subb
xor
lock
add
pusha
jle
jmp
add
adc
das
add
mov
test
xchg
push
add
das
lea
and
cmp
cmp
add
out
add
das
adc
and
add
imul
or
mov
insb
test
add
push
pcmpeqd
lcall
push
pop
stc
xchg
fwait
call
imul
jmp
addb
add
add
pop
nop
sub
in
stos
flds
sarb
repnz
pop
mov
pop
mov
xchg
into
add
xchg
adc
jmp
adc
xchg
push
out
andb
or
je
cli
add
add
clc
push
fidivrs
and
out
out
ljmp
dec
call
sbb
mov
add
cmp
push
adc
fisubrs
inc
push
push
je
jl
pop
sbb
sti
push
cmp
add
je
and
cmp
shl
cs
call
add
add
add
push
xor
xor
inc
add
ja
add
sti
sti
pop
push
cmp
inc
push
pop
cmc
roll
push
adc
pop
add
add
mov
adc
test
and
mov
lea
ret
lods
cmpsb
add
xor
and
pmullw
insb
inc
lcall
add
cmp
push
adc
cmpl
or
jmp
push
test
pop
pop
adc
cwtl
jg
adc
aad
int
cmp
call
and
inc
pop
jle
adc
or
mov
jg
psubb
pop
mov
leave
mov
add
sub
test
pop
add
sub
adc
mov
jge
push
push
and
clc
das
adc
mov
dec
xor
test
add
cmp
pop
clc
das
add
xor
xor
add
mov
jge
xlat
insb
push
das
adc
cmp
mov
push
insb
sub
clc
inc
dec
inc
adc
out
cltd
dec
push
mov
xchg
movsl
sldt
add
add
add
add
xlat
test
pop
pop
pop
jmp
ret
jo
add
ret
xor
call
ret
jo
add
and
xchg
jmp
sbb
inc
xchg
push
push
test
mov
or
push
jl
fadds
clc
xchg
lods
pop
in
outsl
mov
jne
inc
jmp
push
test
add
repz
enter
repnz
jp
push
jmp
jb
xor
stos
or
jb
clc
adc
repnz
jge
adc
xor
push
add
std
xchg
jae
sti
push
movq
nop
inc
cmc
cmp
pcmpgtw
and
cmp
ret
jecxz
inc
int
xchg
mov
cmp
add
loopne
and
cmc
xchg
jp
dec
cmp
out
mov
add
nop
pop
and
xchg
testb
mov
jmp
push
inc
mov
add
cmpl
add
and
add
insb
mov
xchg
lcall
shlb
push
cmc
inc
jmp
add
add
add
cli
push
sbb
push
sbb
xor
loope
inc
sbb
inc
mov
sbb
inc
inc
cwtl
imul
dec
imul
sbb
push
clc
das
jg
adc
add
jge
fists
sbbb
dec
mov
clc
das
ret
dec
push
push
inc
or
add
push
mov
mov
add
add
add
add
mov
add
clc
pop
xchg
and
add
leave
mov
out
push
push
mov
inc
push
jge
push
add
mov
and
hlt
daa
xor
add
adc
lret
imull
add
test
clc
das
mov
push
inc
fidivl
sub
adc
or
mov
inc
push
rol
cmp
daa
sbb
add
add
add
add
dec
roll
dec
xchg
or
adc
add
and
xor
dec
adc
test
jnp
into
push
xchg
add
in
shll
jnp
loop
in
pushl
push
cmp
add
clc
xchg
or
add
or
cmp
jne
xlat
cmp
add
hlt
pop
inc
push
cld
pop
mov
dec
cmp
ja
xchg
mul
cli
xchg
loop
sub
andb
or
pop
cmp
jmp
dec
cmp
push
data16
sub
std
out
sub
and
test
cmp
into
stc
addb
lods
push
je
jl
pop
cmp
sti
push
iret
cmp
sahf
add
pop
call
add
or
pop
cmc
adc
std
maxps
cmp
push
test
out
orl
test
in
jmp
or
pop
xor
call
xchg
testb
out
test
test
push
push
inc
cmp
mov
in
lcall
push
and
stos
sbb
pop
lds
add
add
add
add
std
jg
pop
sbb
loop
or
testb
adc
psubb
ret
inc
jecxz
into
into
and
decb
test
std
ljmp
xor
inc
add
mov
ret
inc
adc
jecxz
add
incl
call
sti
mov
aas
dec
pop
add
inc
incl
cmp
into
ficoms
stc
scas
imul
sub
addr16
mov
test
xor
add
inc
test
inc
test
inc
add
cmp
pop
xchg
jp
orl
aaa
sti
sbb
push
sti
pop
call
dec
neg
stos
or
rol
aas
ficoml
fidivs
push
int3
xor
or
lods
lods
xor
mov
fdivs
std
dec
rcl
test
in
aaa
sti
jb
sbb
sti
pop
stc
jnp
rorl
fldcw
or
cli
or
pop
aas
adc
xor
fnsave
std
cmpsb
mov
add
les
mov
add
es
add
getsec
cmp
setg
push
rorl
enter
jl
cmpsl
test
push
sbb
pusha
cmpsl
clc
sbb
ja
add
sti
popf
mov
arpl
add
inc
roll
jmp
dec
xor
add
add
xor
sti
lret
xchg
and
add
sti
xor
add
mov
add
add
add
add
push
call
test
sbb
mov
sub
nop
mov
mov
fstl
add
mov
std
je
pop
push
inc
pop
add
pop
pushl
loop
and
sbb
add
push
pushf
mov
call
xchg
ret
add
jae
decl
xor
xchg
fcomp
or
adc
add
add
add
cwtl
push
inc
adc
mov
or
andl
add
cmpsb
adc
adcl
xchg
adc
add
clc
xlat
add
adc
outsb
add
rcrl
test
stc
cmp
mov
mov
add
mov
jo
mov
inc
mov
lods
and
add
aas
sti
mov
xor
and
add
add
or
clc
aas
ja
cmpsl
aam
pop
stc
aas
add
dec
fs
add
aas
pop
dec
movsb
sub
mov
pop
in
outsb
lods
ss
lods
in
cli
movsl
fsubr
jle
sti
and
lcall
ja
clc
and
stc
push
xchg
repnz
popa
rcr
imul
je
in
subb
and
pop
imul
rcrb
in
aas
sbb
test
push
cmp
dec
daa
rorb
sbb
push
jmp
sbb
out
clc
cwtl
into
cwtl
dec
dec
cli
call
xor
jmp
nop
push
add
pop
jge
rolb
jmp
nop
push
add
sarl
cmpsb
add
cmp
loop
stos
push
rorb
push
fs
sbb
jmp
or
xchg
push
add
mov
xchg
mov
sti
push
mov
fiadds
jmp
sti
push
add
hlt
inc
call
pop
xor
jmp
lret
fwait
rcll
sub
push
fs
pop
add
cmp
incl
ljmp
add
add
add
push
adc
inc
and
mov
jle
jmp
push
and
fbstp
or
fimuls
call
lods
test
popf
idivb
add
adc
pop
or
mov
add
mov
and
sbb
and
mov
fistl
add
insl
testb
adc
jge
sub
adc
sbb
fldl
add
clc
cmp
push
mov
add
cmp
ret
inc
mov
int3
add
jae
inc
mov
ljmp
dec
mov
pop
stc
cmp
test
clc
cmp
add
clc
test
pop
mov
mov
inc
mov
cmpsb
lods
push
mov
clc
aas
jnp
sbb
scas
push
jae
pop
pop
add
insb
out
mov
and
rolb
rorl
repz
lret
test
stos
call
xlat
or
ret
out
clc
movsb
fstl
xlat
outsl
mov
out
popf
add
adc
ficompl
jmp
test
push
jmp
bswap
les
add
mov
add
add
add
add
and
clc
push
jb
cmpsb
sub
jmp
test
push
jmp
add
push
inc
dec
mov
inc
addl
lret
and
repnz
lret
in
sub
push
pop
sbb
jmp
outsb
xchg
stc
loope
push
cmp
sti
aas
test
sub
dec
inc
sub
add
add
add
add
xor
cmp
xlat
adc
imul
sbb
cli
ljmp
sub
dec
mov
cli
xlat
sub
sbb
bound
pop
call
xchg
or
inc
popa
jp
mov
jg
jmp
or
add
aad
and
adc
add
fwait
and
add
add
add
add
or
add
call
test
aam
fdivrs
adc
ljmp
cli
and
xchg
mov
inc
bound
mov
or
sub
pop
push
and
stos
imul
fucom
jmp
add
dec
ljmp
cmp
ret
mov
aas
orb
sub
jae
lahf
hlt
inc
cmp
out
push
jp
cli
decl
aas
add
cmp
lods
movsb
push
cmpsb
add
cmp
push
pop
stc
cmp
inc
mov
repnz
clc
insb
mov
aam
add
das
mov
add
pop
push
inc
jge
repz
jae
pop
xor
pop
cmpsb
and
add
add
add
add
pop
out
fistps
gs
push
jmp
fwait
push
jmp
lods
push
inc
fwait
pop
scas
sub
fcmovne
out
clc
adc
add
jmp
ret
negb
shll
in
rep
push
jb
in
jns
pop
adc
sbb
fisttpll
jae
add
clc
push
jmp
sbb
mov
repz
clc
push
bound
arpl
push
jmp
js
lret
jmp
sti
push
pushl
sti
sub
jmp
cmp
add
mov
ljmp
frstor
stc
ljmp
cmpsb
dec
sbb
out
adc
mov
cmc
pop
testb
add
add
add
add
add
or
cmp
dec
or
mov
push
add
sub
jmp
xchg
pop
call
mov
adc
mov
dec
call
cld
test
push
aad
shrb
std
mov
pop
add
adc
jmp
xchg
push
and
sub
leave
add
add
add
or
jmp
and
comiss
add
popf
xor
paddusw
add
andb
push
and
push
dec
push
ss
and
add
cmc
adc
add
ds
add
cmp
fiadds
clc
cmp
add
clc
xchg
or
out
xchg
ror
inc
mov
je
loopne
clc
cmp
iret
and
adc
lea
cmp
jae
inc
add
shll
out
mov
mov
clc
jle
dec
adc
ret
dec
jbe
lods
add
jae
aas
mov
repnz
clc
movsb
dec
push
das
test
add
fs
int
clc
push
jmp
add
clc
push
sbbl
cwtl
and
push
sub
loope
mov
mov
sub
jmp
adc
lret
xchg
push
push
clc
push
rclb
loop
adc
sbb
mov
adc
add
pop
jne
or
fnstenv
ror
xchg
mov
mov
out
jne
in
rcrb
jmp
add
add
add
jae
or
and
adc
adc
decl
and
sub
jmp
sbb
jg
add
sti
nop
inc
call
ja
add
sti
xchg
inc
lds
push
mov
jp
stc
stos
jp
push
out
mov
dec
jmp
insb
fsubrs
aas
jmp
jg
call
add
add
adc
jp
or
loope
clc
insb
add
push
add
andb
sti
fbstp
out
fwait
cmc
in
sti
push
jmp
adc
mov
push
and
cmp
push
mov
jmp
mov
leave
add
adc
lds
sbb
add
cmp
pop
cmp
pusha
jecxz
add
sbb
mov
jecxz
jb
cltd
testl
add
sbb
add
dec
cmp
xchg
sbb
sub
jbe
loopne
addl
sbb
test
pop
xor
push
sbb
fsub
std
dec
pop
xor
clc
xor
add
push
mov
arpl
add
inc
cmpsl
daa
insl
mov
imul
stc
mov
mov
sbb
cmp
aas
bound
stc
cmp
add
add
add
add
xor
add
out
stc
sub
out
cmp
incb
xchg
scas
test
add
fcompl
add
add
and
add
jg
out
stc
sub
cmp
test
push
mov
aam
pop
call
sbb
pop
adc
fsubr
add
in
mov
fwait
insb
add
push
pusha
sbb
jno
and
adc
jb
les
xchg
fsub
out
mov
or
push
cmpsl
mov
sti
fmull
aaa
and
sbb
add
imul
or
xchg
shll
pop
sahf
cmp
sti
pushf
add
push
add
and
add
add
add
aaa
pop
add
jle
xchg
pop
mov
cmp
jns
jae
jl
sbb
add
cltd
sub
push
maxps
pop
xorps
or
jl
scas
stos
adc
cmc
adc
cmc
sub
mov
inc
repnz
decb
fmuls
jb
cmc
cmp
mov
jae
inc
fldl
jl
xchg
jbe
punpckldq
movsl
and
push
xchg
xor
data16
ficoml
add
push
sub
ljmp
adc
inc
add
adc
inc
add
fnsave
add
cmpsb
mov
adc
sub
adc
aad
add
dec
rcll
inc
pop
add
test
or
sbb
std
mov
mov
jmp
fmull
add
sub
ficomps
sub
add
mov
add
sub
aad
clc
dec
outsl
and
add
jge
push
push
daa
stos
fistps
sub
call
add
jp
add
sub
cmp
orl
adc
fbstp
sbb
sub
incb
int
in
pop
adc
data16
pop
jp
movsb
loopne
call
cmpl
rcll
pop
cwtl
xchg
call
cmp
cmp
sub
cmp
int3
xlat
clc
push
jmp
fbld
push
add
add
add
add
push
fdivr
push
jmp
aad
push
mov
fcmovnb
out
clc
adc
clc
push
jmp
add
push
sbb
ficomps
imul
push
xor
push
cmpsb
sbb
mov
jmp
fdivr
push
jmp
filds
add
sti
or
mov
scas
pop
add
lock
decl
add
add
add
stc
pop
call
dec
sbb
add
adc
inc
std
push
add
jae
out
lret
fs
test
sbb
jg
sbb
mov
rolb
sti
xchg
or
pop
add
mulb
mov
roll
sti
or
mov
scas
push
add
mulb
stos
pop
dec
cli
pop
call
mov
cmc
ds
call
aaa
pop
add
ljmp
pop
popf
jne
popa
sbb
call
aad
pop
add
inc
push
pop
lods
and
add
addr16
xchg
cmp
movzbl
sub
adc
mov
in
adc
add
push
jmp
sbb
mov
inc
jmp
inc
mov
mov
add
add
add
add
mov
lcall
pop
jo
add
lcall
jmp
add
sub
fadds
clc
sub
ret
lcall
dec
imul
inc
push
add
sub
sarb
clc
adc
and
int
test
add
sub
fistps
sub
sub
cmp
add
add
add
add
das
mov
mov
cld
jl
xor
test
je
add
sub
fistps
sub
add
mov
or
add
xchg
shr
push
dec
jo
mov
adc
xchg
bound
clc
push
jmp
add
push
mov
push
outsb
sbb
notb
ds
push
sbb
mov
jnp
movsb
add
push
jo
arpl
jmp
inc
sub
int
jnp
and
clc
push
out
insl
lods
adc
add
clc
push
jmp
xor
repz
clc
push
fisubrs
out
fistps
xor
xor
add
sti
adc
and
cli
push
add
dec
sbb
jmp
push
pop
push
insb
inc
es
add
add
add
add
add
aad
fucom
sbb
push
jle
add
jge
call
dec
das
arpl
or
push
aas
ds
getsec
xchg
ror
or
mov
push
mov
inc
shr
or
sub
push
loopne
push
mov
nop
sbb
jmp
adc
test
adc
add
add
add
in
pop
mov
lcall
mov
lea
lcall
filds
jmp
popf
adc
and
jae
mov
out
push
in
mov
adc
sahf
push
push
ljmp
andb
and
push
and
push
incb
lock
push
jecxz
fdivrp
clc
jecxz
ret
out
stc
sub
out
cmp
xor
clc
sub
scas
jp
pop
stc
sub
repnz
cmp
fsin
inc
or
add
sub
out
stc
sub
ja
les
add
push
jp
push
pop
cmp
push
sub
out
add
push
xor
add
xor
test
fimull
cmp
test
jle
fsubr
jp
fs
jmp
call
dec
sbb
das
sbb
call
add
sbb
pop
out
xor
fidivrs
adc
xor
jb
call
loopne
rolb
add
sbb
mov
scas
push
jmp
add
add
add
and
xchg
add
aad
push
enter
dec
dec
pop
in
mov
repnz
jle
call
out
push
jmp
in
cmp
scas
enter
int3
pop
add
fs
and
pop
bound
sti
push
mov
add
sti
push
enter
adc
les
sbb
jo
add
mov
stc
push
jp
ss
mov
adc
pop
mov
push
add
es
add
push
push
add
push
add
push
add
mov
push
add
notl
out
push
add
lret
push
add
ficoms
add
cmp
add
push
add
cmp
add
push
cmp
add
add
add
push
pop
cmp
add
push
cmp
add
outsl
cmp
add
outsb
cmp
add
outsb
cmp
add
outsb
cmp
add
cmp
add
popa
cmp
add
bound
add
sbb
dec
aas
clc
dec
dec
aas
add
pop
dec
aas
clc
fs
aas
clc
push
dec
aas
clc
das
push
aas
clc
adc
clc
cld
xor
clc
insb
inc
aas
clc
scas
cmp
clc
push
aaa
aas
clc
in
inc
aas
clc
test
aas
clc
xchg
inc
aas
clc
cmpl
clc
xchg
aas
clc
loop
aas
clc
or
clc
push
cmp
clc
inc
sbb
aas
clc
jmp
aas
clc
js
aas
clc
pop
sbb
clc
mov
push
aas
add
jnp
aas
clc
outsb
push
aas
clc
push
cmp
cmp
push
shll
push
out
cli
pop
jmp
cmc
sbb
sti
lock
in
pusha
and
push
daa
clc
adc
repz
push
sub
or
xor
or
das
loop
in
xor
or
ss
loope
cmp
loope
aaa
or
aad
pand
cmp
add
jecxz
adc
mov
add
inc
mov
mulb
aad
sub
push
lret
jmp
shll
add
push
inc
movsl
ds
inc
jmp
mov
add
scas
push
add
add
mov
add
lods
push
add
inc
push
add
push
add
push
add
repnz
add
push
add
cs
add
add
add
ficoml
clc
fsts
push
ficoml
movsb
fsts
push
push
add
push
add
sbb
cmp
push
add
repnz
add
lret
xor
cmp
add
cmp
add
xor
add
xor
add
xor
add
xor
add
add
add
xor
cmp
add
xor
add
xor
add
cmp
add
das
cmp
xchg
adc
add
mov
sbb
add
iret
and
lcall
cmp
ror
mov
neg
sti
psrlq
adcl
pop
aam
jnp
add
cmp
aam
jnp
fcompl
jnp
aam
jge
fdiv
xor
and
fwait
cld
loope
stc
jmp
jnp
push
je
stc
call
jnp
push
je
stc
inc
test
push
incl
add
popa
fstpl
std
add
jp
push
outsl
jl
call
jecxz
call
out
nop
ret
cmp
jl
cmp
add
add
add
cmpsb
pop
repz
cmp
xchg
jl
cmp
add
push
xor
mov
pop
and
cmp
scas
popf
sub
mov
push
jo
rcr
pusha
enter
hlt
jl
lret
pop
stc
push
out
push
pop
fs
sbb
call
sbb
xchg
call
cwtl
fldt
fs
and
shll
nop
sbb
jnp
add
push
out
andl
mov
sbb
push
pop
xchg
cmpsl
sbb
call
sti
push
add
enter
jecxz
orl
and
mov
lock
lods
mov
enter
filds
test
xchg
and
sti
push
add
xor
sti
push
mov
pop
call
dec
push
jmp
add
push
add
cmp
jmp
xor
add
push
mov
cmpsb
xchg
aad
add
sbb
or
pop
mov
mov
mov
xor
push
xchg
andl
and
test
and
arpl
add
test
cmc
xchg
std
call
xchg
mov
pop
xchg
and
xchg
push
in
ret
test
nop
mov
sbb
add
repnz
mov
clc
sbb
clc
notl
into
lret
dec
ja
mov
imul
clc
incl
mov
pop
decl
jl
sbb
add
add
xchg
push
incl
add
shrl
add
cmp
cmp
incl
incb
and
call
sub
ret
rcrb
xlat
sbb
xorl
test
mov
inc
mov
jmp
inc
inc
ret
or
call
add
mov
add
lahf
sub
cmp
clc
add
push
aam
clc
ss
add
add
pop
jae
hlt
push
out
das
mov
call
movsl
mov
xor
scas
dec
mov
cmp
out
test
add
cmp
push
out
icebp
sbb
add
adc
cli
loop
add
and
pop
xorl
add
add
add
add
push
jle
and
mov
add
sti
sahf
inc
add
dec
add
call
mov
mov
add
jmp
pop
ja
call
xor
ficoms
fs
insl
xchg
rclb
enter
add
add
repnz
add
add
add
add
popf
int
sbb
std
cld
out
inc
jmp
in
push
test
popl
in
mov
inc
std
ljmp
sbb
pusha
nop
push
add
pop
repz
push
stc
shrb
andb
add
andl
dec
shll
test
and
leave
and
inc
adc
movsb
push
inc
add
push
add
popf
popa
add
push
or
and
adc
add
xor
mov
lea
incl
inc
sti
lcall
cmpsl
repz
sub
xchg
cmpsl
jl
add
ja
cmc
or
pop
adc
push
jae
in
jnp
in
clc
ret
mov
jmp
pop
iret
add
daa
or
pop
decb
adc
xchg
or
dec
clc
mov
adc
adc
mov
or
mov
mov
add
cmp
lock
hlt
mov
les
cmpsb
pop
imul
adc
lret
fistpll
ret
mov
clc
push
jecxz
mov
cmp
clc
push
bound
xor
or
xchg
out
clc
cltd
xrelease
call
sub
xor
adc
aaa
or
outsb
jb
ret
mov
andb
mov
xor
add
insl
jb
rolb
mov
in
push
call
test
lods
aas
add
popf
int
mov
call
ja
jae
add
push
hlt
push
add
push
pushf
ret
dec
clc
mulb
xor
xchg
imul
outsl
sbb
or
dec
or
and
insb
mov
add
sbbl
push
add
xor
ret
jg
shlb
jge
dec
cmc
fidivs
jmp
mov
mov
add
adc
test
loope
add
pop
outsl
call
loope
mov
ficompl
test
sbb
add
in
jb
xor
mov
std
call
sbb
add
sahf
and
adc
sbb
lock
nop
mov
push
sbb
mull
idivb
mov
push
call
dec
jmp
and
add
add
add
gs
cs
and
add
add
mov
and
jb
je
fsubr
mov
out
out
mov
push
add
and
xchg
sbb
icebp
xlat
inc
sbb
xchg
or
push
mov
add
cmp
je
repz
cmp
adc
add
out
mov
ret
cmpl
pop
add
add
add
add
add
jo
add
stc
jmp
cmpl
jno
in
jne
xchg
je
arpl
ret
clc
out
add
js
and
push
jb
loop
sbb
cli
push
out
mov
cmp
push
ljmp
dec
push
sbb
out
in
aas
mov
jnp
call
call
cmp
xchg
add
inc
scas
xchg
add
xchg
cmpsl
lock
fcmovb
adc
xchg
clc
push
out
inc
push
test
cmp
xor
clc
dec
repnz
out
xchg
mov
push
jo
sbb
ja
mov
add
inc
cld
mov
imul
add
xchg
add
stc
imul
les
jmp
cld
push
add
aaa
push
mov
jno
cmp
mov
jmp
mov
and
inc
mov
lea
xchg
std
sar
add
fidivrs
add
sti
xchg
std
add
add
fisttpll
add
or
jmp
cmc
add
cld
jbe
push
add
jmp
and
add
and
cmp
lods
push
mov
mov
add
pop
add
loop
cmp
jno
pop
aas
jno
cli
and
push
cmpsb
stos
and
fisubl
push
dec
push
in
jge
add
mov
out
pop
mov
mov
xchg
push
jmp
or
rcr
jbe
sbb
inc
std
sahf
je
loop
add
fldl
call
inc
add
and
inc
lcall
clc
out
and
loopne
ret
clc
out
add
adc
test
clc
pop
jne
xor
jb
outsl
xchg
incl
imul
xor
cld
cmc
cmp
loope
add
sbb
cli
cli
and
addl
inc
in
mov
push
and
loopne
xchg
outsl
sbb
xchg
mov
pop
xor
mov
test
adc
in
mov
clc
push
cmpsb
and
int3
into
adcb
xchg
sbb
sbb
lea
or
lea
xchg
pop
out
jnp
fbstp
push
push
repz
ja
out
xor
call
or
pusha
jg
xchg
out
clc
push
sub
sub
fsubl
addr16
push
sti
mov
jb
lret
repz
jp
or
xchg
sub
pop
out
imul
jmp
add
sbb
bound
xor
insb
or
xor
push
decl
imul
jmp
cld
push
add
xchg
push
call
jb
add
add
push
mov
xlat
add
sti
popf
sub
testb
jb
xor
pop
cwtl
scas
add
sti
mov
orb
jmp
and
jmp
cmc
insb
incb
cltd
mov
sarl
add
sub
push
mov
cltd
jmp
add
mov
add
test
movsl
fmuls
fs
dec
push
adc
xchg
push
je
pop
mov
sub
leave
and
sbb
mov
xchg
inc
hlt
add
je
imull
adc
movsb
adc
add
pop
pop
leave
rol
push
push
clc
js
xor
xchg
add
mov
jne
lea
dec
sub
sbb
les
aas
clc
loopne
inc
idivl
mov
sub
lock
clc
out
mov
xorb
decb
mov
mov
xlat
insb
dec
lods
cmpb
out
aas
clc
push
je
sub
mov
add
loopne
ret
add
and
mov
xor
rclb
and
clc
push
lea
push
xlat
lods
lret
fcomip
data16
scas
and
pop
les
mov
fisttps
addr16
icebp
jmp
cmpsl
add
fs
push
xchg
pop
add
push
out
lock
daa
add
int
mov
out
cld
into
jg
addl
adc
add
or
clc
push
jbe
out
dec
push
hlt
ret
cmpsl
xchg
ja
movsl
adc
pop
pop
add
sti
es
sbb
std
cld
lahf
and
sub
pop
jg
std
hlt
andl
jmp
dec
cmp
bound
stc
std
es
std
adc
mov
fs
aam
and
add
pop
and
jle
je
adc
push
std
std
ss
sti
pop
pop
rcll
xlat
and
xchg
nop
in
push
inc
push
jb
push
push
sub
fs
add
mov
dec
mov
dec
or
mov
push
inc
xor
rcll
aad
pushf
or
les
test
std
jmp
adc
add
std
test
mov
xor
das
mov
and
push
jnp
push
incl
mov
rcl
sbb
call
mov
jl
je
dec
hlt
pop
test
push
cmp
je
or
mov
lea
xor
loop
add
sbb
out
out
mov
scas
out
subl
or
add
add
add
addr16
out
out
sub
mov
lahf
adc
push
ret
adc
je
mov
inc
hlt
mov
std
xorb
call
je
add
lods
add
clc
test
pop
sahf
je
fistl
xor
loopne
xchg
push
xor
aaa
add
jmp
mov
or
aas
fiaddl
stc
push
inc
mov
push
shrb
and
mov
dec
inc
mov
adc
sti
popf
jb
jae
xor
shl
lret
sti
outsb
sbbl
xchg
cli
ret
pop
xchg
daa
cwtl
mov
cmp
cmp
test
pop
mov
stc
testl
in
lret
setb
cltd
call
loopne
sbb
pop
out
add
fbld
xlat
mov
jb
fucomip
add
clc
std
bound
idiv
jb
pop
stos
popa
lea
popa
add
cli
hlt
hlt
push
xorb
addr16
data16
adc
pop
mov
jo
je
inc
sbb
in
aaa
or
das
stc
je
inc
cmp
sub
add
push
jmp
cmpsl
mov
pop
push
pushf
inc
push
lds
xlat
jb
xor
ss
in
int
xor
pop
fs
mov
enter
call
nop
in
je
xchg
cmp
lahf
mov
std
call
push
test
add
or
test
adc
adc
lea
mov
xor
add
add
add
cmc
add
loop
push
pusha
std
call
aaa
das
push
nop
test
and
mov
ret
addr16
imul
adc
ss
and
adc
adc
xor
adc
and
xchg
and
dec
or
in
aas
clc
xlat
std
mov
call
call
dec
aam
jle
add
add
xor
cld
push
mov
addb
mov
or
hlt
xchg
jl
jge
mov
clc
js
out
inc
adc
jl
xchg
sbb
in
push
inc
jns
int
mov
jle
stc
add
ljmp
cli
jns
rep
out
jmp
xor
mov
add
add
add
add
pop
add
mov
push
testl
push
out
fldenv
cli
imul
mov
stc
or
stos
cld
jmp
and
in
jb
sbb
add
out
in
testl
out
aaa
inc
cs
aas
or
cld
cmp
fucom
sbb
jmp
and
add
add
add
add
or
add
mov
fstps
push
dec
mov
or
and
addr16
mov
cli
xchg
testl
lds
sub
sbb
sbb
imul
out
aaa
incb
jne
jnp
pop
aam
xchg
not
test
in
cmp
inc
xor
pushf
leave
push
add
add
add
add
sbb
int
pop
inc
loop
gs
scas
xchg
fstps
push
rcrl
sbb
pop
jno
mov
insl
into
imul
repz
pop
mov
pop
or
mov
and
shlb
pop
ret
adc
sub
insl
call
cmp
sbb
add
add
inc
add
and
push
dec
sbb
mov
jo
add
das
je
push
push
call
mov
push
call
push
std
jmp
outsb
inc
add
add
pop
stc
std
add
lock
loopne
add
cmpl
decb
je
incl
scas
addr16
sar
test
scas
mov
xor
fisttpll
xor
pop
lahf
repz
cmp
cwtl
or
and
fsub
sarb
adc
jns
adc
sbb
xchg
incl
test
aam
mov
js
jae
or
adc
jge
fdivrl
mov
mov
fisttpl
mov
div
cwtl
sti
push
imul
decb
lahf
lock
pop
pop
sbb
aaa
or
or
cli
ret
fistpll
stos
push
rclb
loopne
icebp
aam
ljmp
subl
sahf
jg
pop
fs
push
cld
sub
insb
nop
dec
popa
pushf
inc
inc
or
popf
push
jns
cmp
mov
or
adc
sbb
add
add
cli
ficoms
push
push
pop
ret
add
add
add
add
sub
adc
push
lock
push
jb
mov
dec
lahf
add
bound
mov
out
pop
iret
aas
push
dec
cld
into
mov
mov
push
stos
mov
add
sti
mov
std
aaa
fs
dec
add
in
lock
adc
cwtl
dec
clc
or
cld
push
subl
lcall
add
adc
test
push
push
pusha
mov
and
push
cwtl
sar
mov
enter
add
xchg
push
push
xchg
rcll
pushl
sarl
push
mov
mov
dec
jmp
jb
cld
pop
adc
imul
mov
push
add
add
or
sar
test
xor
lahf
or
add
add
add
push
mov
mov
rcrl
push
call
loop
or
lods
out
jne
cmc
mov
aas
push
lods
adc
std
jl
lock
xor
clc
std
test
ds
cmp
clc
std
or
in
addr16
jp
mov
xchg
and
dec
mov
push
add
sbb
sbb
js
add
add
add
add
xchg
dec
mov
add
sbbl
xor
add
test
push
push
lcall
stc
jl
and
sar
xor
push
enter
inc
pushf
mov
or
pusha
mov
mov
xor
mov
in
adc
fistpll
push
pusha
xchg
jmp
xchg
out
add
out
sbb
add
jo
sbb
out
jg
push
out
jne
fidivrs
push
out
jne
out
jg
push
out
jno
pusha
les
in
sahf
icebp
outsl
or
add
push
xchg
scas
jle
ret
out
ret
add
idivb
lods
aas
adc
cmp
and
jno
xor
inc
std
popf
pop
xor
add
add
add
add
adc
lds
cmp
leave
xchg
popa
adc
in
jp
add
loope
adc
ret
addr16
arpl
std
push
fcoms
call
bound
aad
add
lret
bound
sub
ja
and
incl
cmp
in
pop
das
push
push
addl
pop
adc
add
pop
push
jecxz
mov
mov
in
cmpsl
push
pop
push
mov
push
out
xchg
mov
mov
mov
rorl
aas
cwtl
xchg
xchg
cmpsl
jg
fisttpl
mov
sbb
scas
xchg
addr16
pop
jg
sbb
mov
cltd
jmp
jecxz
addr16
mov
fwait
das
mov
xchg
jmp
jo
add
push
and
add
add
add
add
fs
and
adc
clc
test
repnz
jns
in
fistpll
mov
jnp
sbb
add
push
sub
in
aaa
cmp
inc
lret
push
in
xor
xchg
in
cmp
shll
arpl
or
movsb
test
lods
arpl
or
add
cmp
add
add
add
lret
jns
dec
mov
bound
popa
pop
stos
xchg
or
pop
push
ds
sub
inc
arpl
adcb
pop
jns
sahf
mov
add
fwait
stos
inc
iret
ja
push
out
in
pop
cmc
ret
aas
xchg
sub
test
out
into
jmp
out
add
fwait
stos
fildll
pop
xchg
or
cmpsb
movsl
push
dec
jb
dec
pushf
js
xchg
sti
loop
push
out
cs
cmp
dec
clc
jmp
out
mov
add
sti
scas
sti
ljmp
mov
push
mov
std
xchg
push
pop
push
add
inc
jmp
mov
sub
fs
jns
imul
add
add
add
decl
std
push
subl
pop
push
mov
cwtl
lret
popf
xorl
inc
std
cld
mov
inc
jmp
xchg
and
bound
hlt
add
shlb
dec
push
fcomps
push
mov
push
call
std
add
or
cwtl
and
data16
xor
add
loopne
outsb
adc
adc
lahf
shlb
xchg
mov
push
dec
jne
jne
leave
adc
in
mov
adc
push
add
out
add
and
call
pushf
pop
aam
out
push
nop
adc
out
or
dec
mov
scas
adc
add
std
mov
test
push
inc
clc
jb
je
jae
cld
dec
dec
lea
mov
add
test
lret
mov
movsb
stc
addr16
push
dec
sarb
add
mov
inc
add
jne
insl
jb
sti
aaa
push
push
std
add
jbe
cld
enter
adc
call
jb
sti
pop
add
cmp
add
add
add
add
jb
jae
imul
fcomip
imul
pop
sti
inc
adcl
insb
sbb
add
or
add
ret
push
sbb
add
shrl
pop
push
test
fs
mov
inc
fs
je
fs
adc
je
jae
rcrb
add
push
pushw
or
cmpsl
add
insb
add
adc
and
out
add
fwait
inc
add
push
bound
pushf
and
jl
out
clc
sub
mov
out
sbbl
bound
ss
jo
jmp
cmp
subl
push
mov
cltd
fidivrs
add
sti
popl
mov
call
insl
mov
outsl
insb
jno
stc
xchg
jg
xchg
inc
stc
in
sbb
loopne
std
insb
xor
push
pop
imul
test
rclb
xchg
in
std
inc
les
sarl
add
xchg
inc
xchg
stc
in
fidivl
pop
test
push
subl
cmp
xchg
cwtl
clc
jecxz
xor
repz
cltd
loopne
test
sub
xchg
mov
or
jmp
jno
add
xor
loope
xchg
pop
aaa
jne
adc
sti
push
xchg
xor
and
jge
mov
add
push
pushf
out
out
mov
subl
andb
push
mov
push
adc
add
test
dec
dec
push
clc
xchg
push
xchg
out
nop
xchg
cwtl
sbb
std
sub
jmp
addl
add
add
add
add
push
cwtl
rol
xor
in
or
shll
push
xor
mov
pop
cs
leave
sarl
or
sbb
add
clc
add
push
lret
fdivrp
pop
jp
and
out
add
pusha
lahf
pushf
incl
xor
push
add
pop
jne
jl
int
push
and
jle
mov
add
clc
push
out
test
xchg
xor
stos
inc
dec
imul
mov
jns
push
cmp
pop
dec
adc
aaa
mov
jae
or
std
push
out
lcall
xchg
mov
cmpsl
gs
lret
or
push
out
je
filds
push
aaa
std
or
fiaddl
xchg
imul
adc
dec
add
fwait
daa
jnp
mov
insb
dec
adc
mov
mov
leave
inc
ds
xlat
add
mov
je
rcl
enter
inc
pop
adc
adc
sti
lea
jecxz
jno
sti
xchg
shr
test
sbb
add
jo
and
call
add
xchg
add
sub
add
add
add
dec
inc
jmp
rcrl
xchg
push
adc
hlt
and
jno
push
roll
std
hlt
jecxz
inc
jmp
sti
lea
adc
fld
and
call
in
int
adc
add
loope
and
rclb
sarb
lea
popl
add
incl
ja
sarb
xor
or
aad
cmp
push
cmp
xchg
adc
out
adc
call
in
pop
and
add
add
lods
xchg
and
dec
adc
call
clc
jb
or
lods
jecxz
rclb
add
jge
sbb
push
nop
out
add
js
adc
add
add
add
scas
add
clc
jb
and
out
add
sub
and
lock
sub
rorb
clc
in
push
mov
add
in
push
std
scas
jp
and
in
add
inc
test
lods
js
in
xchg
std
test
std
test
push
mov
je
jmp
clc
push
mov
je
daa
add
clc
push
xchg
xchg
or
hlt
push
out
adc
js
clc
xchg
and
jnp
xchg
pop
orl
jmp
adc
add
or
pop
out
outsb
std
dec
out
or
daa
add
in
call
pop
clc
pop
out
jo
es
or
adc
cmpl
lea
or
out
lods
inc
out
mov
mov
adc
cltd
jl
mov
popl
cmp
or
dec
jno
fs
push
push
pop
jle
incb
xchg
push
icebp
cmp
call
ficomps
add
push
lock
loopne
adc
dec
or
negb
add
mov
add
dec
sbbl
xlat
push
inc
nop
jae
je
sarb
add
add
outsl
push
jne
adcl
pop
in
popl
cli
call
insl
xor
ds
sti
js
cmp
add
je
dec
push
lcall
xchg
addr16
imul
or
ficomps
add
xchg
rclb
add
sbb
rclb
ret
inc
xchg
add
or
outsl
in
adc
das
hlt
mov
out
pop
mov
pop
push
nop
sbb
inc
in
hlt
loopne
jno
or
call
mov
movsl
mov
xchg
jl
clc
in
push
mov
cmp
ret
mov
adc
fimuls
inc
stos
jmp
add
mov
lock
add
add
add
icebp
js
sub
pushf
mov
jno
adc
sbb
pop
jae
or
mov
ret
jbe
mov
add
cwtl
add
mov
xchg
jne
jo
jae
and
pop
insl
push
subl
and
in
add
xor
adc
cld
push
or
xchg
mov
mov
push
mov
out
add
inc
sbb
cmpsb
inc
jb
fdivr
jno
orl
jle
adcb
mov
and
scas
push
mov
inc
lock
dec
fdivr
push
jb
jnp
jae
orl
or
ficompl
in
push
hlt
adcl
xchg
jecxz
sub
ss
les
ror
add
jo
mov
add
add
add
fsubr
sti
xchg
call
jo
or
adc
je
adc
pop
and
add
rolb
sub
ficoml
mov
xor
inc
or
mov
sti
popl
cmp
pop
adc
dec
push
mov
add
sbb
lret
fisttpl
add
leave
roll
in
std
daa
out
xlat
and
mov
cmc
cs
jae
add
out
pop
pop
mov
xchg
in
adc
add
cmp
and
pusha
adc
aad
dec
ds
fdivs
fs
fs
adc
or
pop
push
add
pop
jle
nop
in
add
adc
jmp
push
or
fistps
mov
xchg
adc
add
adc
cmp
pop
pop
mull
adc
adc
push
mov
das
dec
in
sar
push
jae
aad
xchg
fs
add
out
add
clc
sbb
xchg
aam
and
icebp
std
subl
push
jae
flds
dec
jae
jae
adc
push
push
add
add
je
xchg
movsb
adc
orl
test
stc
in
add
mov
in
jle
dec
gs
sbb
je
sbb
scas
or
je
bound
jae
adc
roll
out
inc
push
bound
add
add
push
jb
in
mov
add
call
inc
hlt
mov
cld
jle
filds
mov
pusha
shl
xlat
push
fs
call
inc
popw
rolb
add
jecxz
mov
sbb
lods
mov
fcompl
fisubrs
andb
adc
add
xlat
aaa
push
jae
xlat
push
subl
mov
and
insl
mov
pusha
cwtl
dec
inc
adc
sub
std
push
sti
daa
call
add
sub
pop
and
notl
add
jle
je
shrb
adc
out
sbb
add
sti
push
mov
adc
call
insb
sub
mov
mov
inc
or
push
mov
add
call
lret
bound
push
xor
dec
jne
mov
ficoml
call
lds
dec
push
add
push
or
xchg
das
fcoml
rcrl
xchg
or
je
and
ljmp
xor
jge
or
insb
push
bound
adc
arpl
mov
shlb
adc
sbb
add
aam
fsubs
jmp
push
enter
add
stos
xchg
call
xor
fs
ret
insb
push
in
xorl
add
add
adc
mov
insb
xchg
pop
int
test
add
clc
cmp
adc
int3
xchg
sbb
dec
out
xchg
add
jae
mov
out
inc
cltd
add
mov
jne
xchg
cld
adcb
std
ja
orb
ret
and
clc
inc
out
je
or
jmp
inc
cmpsb
jle
cli
mov
add
add
add
add
inc
out
std
hlt
mov
jne
xchg
orb
xchg
and
clc
dec
inc
adc
add
dec
jnp
rclb
push
lods
xor
mov
sub
call
sbb
xchg
mov
lods
repz
aam
push
push
push
out
mov
stc
inc
or
aam
sbbb
out
jmp
flds
cltd
cmpsl
js
xchg
pop
add
popa
sbb
ret
jnp
adc
ja
cmp
out
adc
and
out
cmp
dec
aas
fcomp
add
sub
dec
push
out
or
jmp
clc
shl
jg
pop
add
in
cmp
subl
push
or
mov
cltd
xor
mov
add
call
mov
add
add
add
add
push
insb
rcll
xchg
popa
mov
enter
jmp
inc
jmp
lock
cld
rol
add
loopne
adcl
xor
in
lods
cmp
jle
sar
es
jmp
mov
pop
add
push
aam
dec
sbb
push
pop
mov
pop
leave
and
in
push
testb
add
add
add
add
ret
adc
rcll
mov
xchg
enter
je
sbb
in
xchg
inc
in
sbb
add
sbb
adc
pop
lock
push
mov
push
call
inc
popa
xchg
shlb
sti
adc
fcmovbe
pop
pop
or
in
and
gs
push
jb
dec
push
push
in
jmp
adc
clc
mov
adc
inc
les
inc
aas
cld
dec
aam
push
add
adc
jle
cmpl
cmp
xor
mov
push
jno
aad
cmp
mov
inc
add
insl
and
or
push
push
xchg
call
inc
clc
inc
shll
mov
cmpsb
aad
rolb
leave
std
add
mov
inc
add
dec
pop
shll
push
adcl
lret
push
je
and
sti
mov
sub
adc
lcall
in
lcallw
jo
iret
hlt
and
push
out
mov
xchg
flds
xchg
ljmp
bound
lods
cltd
and
imul
jl
cltd
fnsave
mov
add
add
add
add
sarb
es
mov
sbb
daa
add
sbb
pop
or
add
adc
jb
imul
in
mov
pop
add
and
std
aam
es
jmp
jp
add
hlt
push
jno
dec
iret
ljmp
push
sbb
outsl
add
mov
pop
push
addr16
std
cld
xor
inc
jmp
add
cwtl
arpl
sti
rcrb
ljmp
inc
jmp
sub
xchg
cld
data16
fsub
sub
not
je
out
cld
sbb
lret
std
mov
or
push
cld
jmp
mov
jg
fstps
mov
add
push
stos
mov
or
scas
cmp
push
inc
inc
and
pop
push
incl
int3
or
les
push
and
lea
add
fs
and
xchg
dec
testb
xlat
push
ljmp
sub
add
lea
push
sbb
or
bound
mov
shlb
and
inc
push
push
dec
inc
and
imul
adc
clc
inc
rorb
out
fsub
jp
add
movsl
in
aam
out
xorl
and
xor
cmpsl
jge
xorl
jp
dec
lods
xor
jne
in
lret
dec
pusha
lcall
jo
add
dec
scas
pop
js
jle
push
nop
jge
lcall
jle
sbb
jae
aam
or
out
outsl
cmp
cld
add
adc
out
push
imul
rcrb
sub
cld
pop
jbe
or
flds
lahf
aas
xorb
arpl
clc
push
out
scas
lahf
adc
ljmp
add
sbb
pop
mov
xor
pop
in
xchg
daa
idivb
out
clc
xchg
or
jnp
out
clc
lahf
jae
add
fs
push
ja
or
or
and
ret
loop
add
push
and
out
and
les
hlt
inc
jmp
mov
push
and
lret
popf
inc
int
popa
push
jbe
sub
add
push
lret
std
jmp
js
add
dec
fs
xchg
push
and
in
push
test
add
fs
es
push
lods
sti
push
add
repz
push
pop
repz
sti
xchg
sarb
je
negl
add
mov
lret
bound
repz
add
xor
popa
cmp
jmp
addr16
adc
rsqrtps
les
push
in
subl
std
jae
mov
add
sbb
popa
push
jg
add
cmp
jmp
mov
push
shrl
push
sbb
adc
mov
lea
jno
andl
sbb
adc
add
les
inc
mov
adc
sar
movb
in
jns
push
add
mov
loope
enter
sbb
inc
add
loopne
add
xor
sarb
inc
clc
inc
xchg
xchg
mov
adc
stc
mov
les
xor
call
je
push
add
mov
lret
inc
lock
scas
or
clc
xor
push
dec
push
add
cmp
lcall
pop
rolb
clc
push
insb
mov
loop
sub
xor
pop
stc
daa
pop
mov
je
dec
aas
out
lea
xchg
call
xchg
enter
pop
out
jno
imul
cltd
je
adc
pop
jmp
sub
jno
dec
sarb
arpl
clc
push
out
jnp
and
int
sub
out
jnp
adc
add
push
xchg
jmp
xchg
add
sti
xchg
fnstcw
std
addr16
aas
add
sti
push
mov
std
into
sub
cmp
push
std
aam
and
jmp
sti
push
jne
ficoms
aaa
ja
mov
hlt
mov
rorb
cmp
pusha
mov
mov
pushw
jle
nop
arpl
leave
mov
std
dec
orl
add
mov
call
ss
and
push
mov
sti
push
fldcw
xor
loope
vmovsd
int3
add
outsl
ljmp
or
push
mov
out
push
ljmp
inc
popa
fwait
les
lods
and
pop
sbb
test
and
add
or
out
roll
add
add
add
add
mov
mov
xchg
rorl
adc
xchg
mov
jno
adc
in
loope
add
outsl
fisttpl
fistl
lock
roll
add
mov
mov
clc
cmp
pop
clc
scas
mov
jge
push
shll
and
into
mov
dec
mov
mov
sti
int
scas
ljmp
push
sub
dec
and
sub
das
ljmp
shll
in
and
xchg
fisttpll
dec
das
pusha
and
mov
add
scas
push
adc
jmp
mov
push
mov
fsts
pop
add
cmp
sbb
add
pop
cld
inc
out
push
out
mov
fs
imul
hlt
lea
fcom
add
clc
bound
mov
fcomp
add
fmuls
xor
out
or
out
push
sub
testb
push
hlt
fs
cmp
push
call
cli
xor
hlt
or
scas
mov
adc
ret
mov
lock
mov
sub
pop
mov
out
imul
pop
lock
sbb
rolb
ret
call
jnp
std
jmp
mov
in
scas
fisubrs
hlt
push
mov
jg
je
scas
inc
cld
jb
imul
bound
jmp
rcll
ss
adc
pop
mov
jno
dec
cmp
push
nop
xchg
cmc
push
std
cld
repz
cmpl
and
shll
inc
or
sbb
add
rorl
call
mov
popl
call
rcl
xor
jg
ret
or
subl
push
call
lret
imul
xor
sahf
lods
cld
add
push
push
mov
daa
xlat
push
cltd
add
test
and
sahf
enter
sbb
mov
adc
out
push
or
clc
sub
sbb
mov
icebp
mov
scas
add
imul
or
xor
or
aas
sub
sbb
push
push
andl
and
dec
std
add
mov
into
add
scas
jmp
test
add
xor
add
shlb
pushf
leave
clc
scas
add
mov
outsl
push
sbb
xor
push
push
je
aam
mov
cmc
sub
mov
fisttpll
lock
pop
testb
cli
int3
rcr
push
add
or
push
add
psubsw
lea
in
cmp
out
xchg
push
je
aam
iret
add
rcl
scas
jno
clc
push
jb
push
movsb
mov
clc
xchg
and
in
ja
clc
push
jb
popf
pusha
inc
sbb
pop
clc
bound
fmull
sbb
xchg
das
add
or
cmc
cli
add
push
push
pop
add
subb
inc
testb
add
add
add
jbe
push
pushf
outsb
outsb
pushf
call
xor
xor
or
adc
test
adc
js
je
outsb
push
add
jle
mov
jl
je
insb
ret
data16
jmp
cli
sbb
pop
and
shll
push
jae
sti
sub
cmp
and
and
jmp
mov
sbb
add
push
push
call
popf
fidivl
dec
and
lods
or
je
repnz
call
dec
shll
or
add
push
and
xorl
call
mov
lcall
ja
ret
or
insb
or
sub
loopne
aam
pop
add
lcall
add
add
add
cli
std
pop
jbe
fadds
sbb
adc
sbb
inc
stc
jbe
add
hlt
pop
adc
inc
push
add
js
jl
fistpl
sbb
xor
pop
or
cmp
scas
add
divl
xlat
add
scas
fdivs
cmp
add
clc
sbb
test
mov
cmp
or
and
xor
in
out
aas
clc
dec
inc
and
pop
test
clc
scas
mov
inc
cmp
insl
or
out
inc
out
out
add
jns
incl
mov
dec
out
pop
jnp
repz
test
or
icebp
xlat
testb
push
or
shl
push
add
xor
clc
push
xchg
xor
jae
cmpsl
xor
push
out
lea
fistps
lock
xchg
out
clc
mov
lock
jmp
add
pusha
ds
mov
clc
push
add
cmpsb
xchg
call
lahf
repnz
push
add
mov
sub
cs
add
call
add
add
add
add
add
inc
add
mov
jmp
mov
push
add
pop
push
inc
enter
sti
pop
pop
xchg
jno
pop
nop
cld
fmuls
lds
or
gs
lahf
scas
daa
aam
cmp
mov
inc
hlt
inc
sbb
and
movsl
pop
in
sub
push
add
cmpsb
mov
inc
pop
adc
mov
push
add
int
loope
pop
ret
push
add
sbb
pop
ret
push
in
nop
inc
add
mov
pop
test
push
push
ret
xchg
add
mov
mov
adc
sub
add
mov
inc
jns
ret
pop
insl
nop
inc
add
push
xchg
add
aad
pop
clc
call
adc
add
scas
add
jb
add
iret
adc
inc
decb
mov
xchg
pop
enter
int
pushf
dec
add
cmp
je
inc
call
jae
xor
hlt
scas
xor
inc
inc
add
clc
dec
and
xor
call
shl
xor
sbbl
flds
sub
jle
and
aam
fadd
mov
mov
scas
jmp
call
clc
lea
add
lea
cmp
gs
add
inc
fstpt
movsb
sbb
pop
mov
mov
test
sub
test
hlt
pushl
adc
add
in
jae
in
roll
push
pop
push
pop
add
gs
loopne
in
add
stos
aam
clc
mov
divl
cs
or
out
out
jb
arpl
cli
inc
lock
jnp
add
cmp
call
jnp
add
xchg
cs
rol
fsincos
add
shlb
xchg
in
aad
fs
push
pop
inc
jmp
adc
add
add
add
cmp
shlb
and
pop
or
push
inc
repz
bound
repz
cltd
out
push
stos
push
mov
inc
sbb
or
jmp
ret
xchg
jbe
sti
popa
std
add
adc
dec
out
aas
xor
push
xor
test
adc
push
adc
dec
mov
test
fdivs
adc
rclb
add
adc
add
mov
pushf
iret
add
adc
dec
jo
push
and
push
inc
rorl
shll
cltd
fldl
ss
sbb
pop
dec
dec
push
dec
and
outsb
jmp
sub
mov
jl
add
lret
jle
aam
xor
sarl
sub
hlt
daa
sbb
stc
pop
cmp
jmp
push
sub
sbb
ja
dec
js
sub
clc
adc
mov
cmpsl
xor
mov
in
xchg
rclb
mov
inc
add
orb
xor
and
mov
jp
lock
das
add
add
out
hlt
cmc
mov
add
add
add
jg
cmp
pop
add
ja
lret
sbb
pop
pop
inc
aam
xchg
pop
sbb
jae
xor
idivb
sbb
out
fdivr
stc
add
add
jns
lcall
clc
push
scas
pop
aam
cmpsb
pop
fcompl
pop
aam
xchg
pop
fcompl
iret
es
clc
push
push
add
add
add
add
add
push
or
incl
dec
mov
push
pop
in
mov
repz
sub
into
dec
pop
cwtl
mov
ss
push
ret
xchg
in
leave
ljmp
dec
andl
sub
movsl
xlat
incb
pop
lds
sti
push
imulb
inc
sbb
je
addr16
test
iret
sbb
or
call
xchg
and
mov
sti
popf
jl
repz
pop
lds
inc
lds
inc
push
cs
dec
jb
mov
xchg
xchg
sti
cmp
jne
aaa
mov
cmp
xor
add
sub
mov
dec
lea
pop
push
or
and
popa
dec
sub
pop
and
push
pop
add
add
push
sbbl
pop
repnz
or
add
xor
jmp
and
ljmp
adc
xchg
das
leave
movsb
fimull
inc
dec
add
inc
and
xor
jmp
and
push
subb
dec
mov
xchg
adc
cmp
adc
push
test
out
jnp
dec
addl
add
clc
aas
pop
ljmp
aaa
inc
and
outsl
js
nop
mov
jg
inc
and
insl
scas
cmpl
inc
lret
sub
jno
sub
loop
xor
sarb
mov
add
jecxz
mov
xor
xor
call
jae
and
sbb
stos
and
push
adc
outsl
inc
add
push
push
adc
pop
inc
sbb
inc
push
adc
cli
mov
dec
dec
lcall
cmp
xchg
clc
popf
das
xchg
mov
bound
clc
popf
xor
sbb
bound
adc
mov
jle
mov
int
or
jns
mov
and
mov
add
push
sbb
movsl
mov
jmp
into
add
or
fsubr
mov
in
or
adc
mov
pop
jns
jae
in
out
cld
push
add
inc
test
aaa
clc
imul
push
adc
push
lods
std
push
mov
pushf
imul
sti
ds
sti
push
std
aam
add
call
or
add
or
std
mov
in
scas
in
into
push
add
xchg
std
adc
lahf
into
adcl
call
add
sbb
add
in
iret
push
adc
mov
xor
jne
lret
lahf
pop
rcll
xchg
dec
jmp
add
call
sti
push
lret
jge
mov
adc
add
add
add
lods
mov
mov
push
call
ljmp
sti
bound
movq
mov
mov
sbb
cli
mov
add
movsb
push
and
clc
in
pop
add
pop
insb
xchg
loope
call
jnp
lock
add
adc
xor
dec
int3
enter
ret
jmp
add
add
add
stos
std
and
pop
in
adc
mov
adc
sub
ja
clc
mov
add
lret
nop
jbe
js
add
push
repz
clc
sub
mov
fsub
dec
clc
mov
insl
sar
sub
cmp
pop
cmp
add
pop
inc
and
inc
fcmovb
test
xchg
dec
fmull
pop
add
pop
out
add
xchg
jbe
std
call
out
sub
out
mov
rorb
push
jb
jnp
mov
sbb
je
pop
out
mov
and
and
fwait
adc
scas
add
push
out
sbb
mull
mov
in
fildl
jmp
popa
out
rcrb
icebp
and
daa
add
pop
add
add
push
add
inc
call
test
lahf
mov
std
push
add
mov
subl
sbb
push
dec
ret
popf
inc
add
out
fcomps
fcompl
mov
jns
jae
jmp
push
add
add
sti
popf
int
jne
add
add
mov
mov
js
jae
ret
leave
add
add
dec
jge
sahf
test
test
inc
and
iret
push
mov
pop
and
call
pusha
add
sub
jne
cwtl
mov
add
jo
push
add
mov
mov
xchg
sub
mov
and
xchg
adc
lods
adc
add
add
add
add
xor
xor
xor
mov
inc
and
xor
fsubrs
movb
into
pop
lea
inc
test
pop
fdivr
inc
mov
mov
cli
mov
das
push
jae
ja
and
or
and
cmp
jae
pushf
mov
mov
jne
mov
add
add
add
jo
sbb
add
mov
mov
call
rcl
sbb
idivb
aam
aaa
shlb
mov
add
sub
movsb
gs
sbb
lea
add
push
out
cli
popf
sahf
fildl
out
adc
add
add
add
add
add
inc
xlat
inc
dec
sbb
inc
push
cld
push
push
push
imull
iret
icebp
movhps
hlt
mov
bound
mov
les
arpl
pushf
inc
pop
ds
inc
xchg
out
and
movsb
cld
push
out
jge
arpl
aaa
pop
sahf
js
test
add
fisubs
sub
popa
imul
roll
add
add
add
add
xlat
add
xchg
call
push
lcall
jmp
mov
mov
adc
push
bound
adc
add
dec
or
sub
iret
mov
insb
dec
and
test
loope
xlat
or
jmp
xchg
in
movb
xlat
je
add
and
test
mov
push
aam
and
jno
inc
and
inc
push
push
lret
mov
int
cmp
or
inc
mov
mov
jns
inc
loopne
mov
mov
test
lcall
lods
mov
and
inc
xchg
sub
cld
jmp
jns
dec
scas
cmp
add
add
add
xchg
dec
dec
mov
jnp
sti
out
mov
sbb
and
or
adc
xor
and
jbe
iret
in
xor
popa
mov
cmp
js
add
lds
fsubrl
cld
push
fdivl
mov
pop
aam
ss
stos
in
push
push
xor
call
subl
add
inc
adc
mov
scas
add
loopne
dec
add
add
inc
rcrl
inc
fcompl
sti
inc
in
adc
cmp
fs
sub
fildll
loop
cmp
or
rorb
popa
mov
cltd
and
cmp
out
lods
xchg
sbb
mov
pop
out
je
cmp
and
sbb
or
adc
add
or
lret
jecxz
sub
jecxz
dec
lret
jecxz
cmp
lea
push
jno
ret
pop
inc
xchg
sti
out
fwait
xchg
aaa
adc
loop
testl
ljmp
push
xchg
add
je
lcall
pushf
xor
push
das
sti
das
push
daa
sti
xor
das
sti
xor
add
sti
aaa
xchg
stos
int
in
std
fidivs
call
bound
inc
pop
and
dec
ret
dec
mov
jnp
clc
push
repnz
aas
jae
adc
jae
out
inc
pop
adcl
push
jae
xchg
std
inc
jmp
lock
sbb
or
icebp
adc
mov
mov
add
sbb
and
add
push
inc
adc
add
xor
dec
sti
adc
loop
or
cmpb
je
mov
xchg
outsl
decl
and
mov
jmp
scas
sbb
shlb
std
je
cwtl
fs
pop
jg
lds
add
add
sbb
clc
shl
scas
leave
in
cmpsl
popa
in
adc
aaa
or
jg
int
mov
std
jg
mov
jae
add
cmp
pop
ret
sub
push
sbbl
jae
dec
test
jae
les
std
movsl
mov
jo
lds
pop
fs
ret
push
mov
xor
inc
add
test
std
les
shl
mov
adc
or
sbb
mov
pop
lods
sub
mov
lock
xor
sbb
dec
jb
jge
jmp
inc
stos
add
repz
in
mov
cmpsl
stos
jo
out
mov
stos
lret
addb
add
add
add
add
push
in
xor
dec
clc
dec
cli
fsubs
fsubrl
add
lcall
std
sub
mov
cld
mov
out
clc
cld
jb
jmp
mov
mov
adc
sub
je
xor
xor
mov
inc
push
cs
pop
push
test
xchg
out
lret
lea
push
mov
stos
into
add
into
mov
or
xor
call
dec
xchg
sbb
jae
jnp
add
add
cmp
int3
xchg
cmc
add
movsl
sti
ret
and
mov
jb
sub
inc
and
inc
sti
jne
lods
pop
jno
jle
xchg
sub
inc
nop
enter
or
ja
insb
and
pop
rorl
cmpsl
fadds
sti
jg
pusha
out
cmp
or
lahf
dec
dec
push
stos
sbb
and
sti
imul
inc
xchg
mov
adc
mov
mov
mov
into
inc
adc
je
add
push
jno
fistpll
add
cmp
lds
in
clc
lods
add
es
lods
or
mov
mov
call
sub
pop
and
add
in
fsts
std
in
adc
in
fsts
std
in
adc
and
add
inc
add
outsb
test
push
push
cld
movsb
push
pop
loope
das
add
xor
call
jae
inc
loopne
xchg
lahf
jg
and
and
out
adc
jmp
jmp
ja
add
ret
fildll
sahf
xlat
pop
addl
mov
push
bound
pop
pop
add
inc
pusha
dec
fdiv
ds
inc
pop
out
push
mov
inc
adc
popf
dec
cmp
clc
push
notb
cltd
out
add
out
jno
add
and
sbb
xchg
popf
jb
and
pusha
add
xchg
add
clc
adc
psubsb
sahf
std
bound
push
mov
cmp
cmpsb
xchg
sub
ret
ret
dec
mov
mov
push
repnz
adcb
jl
dec
pusha
add
repnz
push
jb
push
push
push
push
push
bound
sti
mov
orb
jbe
jo
cmp
adc
pop
pop
pushf
jbe
or
pop
or
addl
out
call
lcall
outsb
loope
push
mov
and
pop
fstl
push
outsb
mov
sti
jne
gs
test
dec
add
sbb
mov
sbb
movsb
std
decl
push
and
adc
or
adc
xchg
ljmp
jmp
gs
push
sbb
mov
add
or
add
ret
xchg
test
es
stc
lods
xor
or
mov
push
mov
movb
shrb
adc
add
xchg
push
std
dec
mov
mov
loope
lock
pop
nop
arpl
cmp
call
je
das
adc
mov
adc
push
pop
shrl
mov
mov
sbb
push
cmpsl
xchg
pop
shrb
push
mov
add
add
add
add
cs
add
not
xor
out
mov
sbb
in
inc
pop
icebp
and
rorb
sbb
dec
sub
lret
pop
dec
inc
cmp
or
out
cmp
rorb
aas
xchg
dec
add
aam
mov
repz
inc
xor
ficoms
or
push
bound
add
sub
fs
add
push
pop
push
movb
orl
add
lea
and
mov
add
scas
mov
stos
scas
add
cmp
pop
and
or
call
push
bound
inc
fadds
add
xchg
push
call
xchg
repz
sub
add
imul
ljmp
std
cmp
and
add
and
push
call
insl
mov
repz
es
repz
push
pop
repz
push
psllq
daa
repz
add
jmp
and
call
leave
call
dec
and
add
inc
push
push
repnz
push
push
fisubs
inc
mov
push
cmp
data16
sbb
test
xchg
std
call
sbb
incl
xor
add
loope
adc
adc
inc
lods
add
shrb
add
sbb
test
xor
xchg
adc
imul
push
fbld
inc
call
adc
mov
repnz
adcb
test
sbb
mov
add
xor
call
andl
mov
or
mov
pop
std
add
pop
std
test
pop
std
insb
adc
fs
insb
rclb
jae
cltd
out
mov
cmp
lods
push
mov
jno
rcl
sbb
inc
and
or
lods
mov
add
in
outsb
sub
test
add
jge
stos
out
inc
xchg
loopne
and
cmp
ret
lret
out
sti
push
out
cmp
repnz
xchg
adc
add
jae
or
test
and
xor
xchg
adc
jno
sbb
pop
rolb
xchg
out
push
fucomip
mov
pop
out
rsm
pop
add
push
jb
sbb
outsl
xchg
jo
out
sub
ss
mov
out
mov
stos
out
mov
add
add
add
add
mov
mov
pop
cmp
mov
inc
call
jge,pn
add
sti
pop
add
sti
mov
mov
sti
push
add
dec
ds
je
mov
inc
cld
mov
sti
push
add
clc
cltd
cmpsb
jmp
rclb
bound
mov
jbe
jle
add
je
sub
adc
cs
lods
jle
jae
sbb
sbb
call
fcmovbe
xchg
out
ljmp
inc
lock
shlb
je
push
push
push
inc
and
push
call
lcall
add
sbb
inc
add
test
je
in
cli
je
in
cli
je
in
cli
je
in
cli
je
in
cli
je
in
dec
jmp
push
call
mov
in
js
mov
out
jg
icebp
mov
adc
scas
je
push
lods
je
push
push
std
int3
popa
or
add
cmp
scas
mov
aaa
inc
adc
das
or
sldt
add
add
add
add
mov
push
push
test
xor
pop
mov
jno
jo
das
pushf
sub
les
je
mov
mov
sub
std
dec
bound
add
lea
nop
push
in
mov
xchg
sub
clc
xchg
incl
scas
or
xlat
scas
add
xlat
push
enter
adc
mov
add
ljmp
cmp
out
jno
cwtl
push
cmpsb
jmp
lock
icebp
stos
add
cmc
mov
clc
lahf
pop
adc
outsb
arpl
mov
mov
mov
out
orl
out
jno
loop
pop
out
mov
jmp
les
xor
sahf
add
sti
xchg
jae
dec
push
sbb
add
cs
fsub
call
lock
mov
add
dec
add
mov
pop
ret
in
or
insb
out
inc
jmp
pop
daa
std
je
xchg
jae
pop
pop
pop
cwtl
addl
out
out
shl
in
lds
mov
inc
jmp
cs
std
cmp
xchg
jae
xchg
push
pop
cmp
sahf
movsb
in
sar
sti
in
jge
sbbb
jmp
imul
shl
ljmp
inc
or
xchg
jno
inc
mov
ljmp
and
xor
lods
fiaddl
push
adc
jmp
jmp
adc
sub
xor
cmp
push
in
mov
mov
ljmp
add
mov
loop
mov
sbb
lea
push
push
xchg
push
shlb
sub
dec
cwtl
push
sar
push
pushl
xor
cmpl
dec
in
xor
jg
stc
jge
inc
mov
inc
inc
jne
stc
and
test
push
fs
cltd
gs
xchg
push
push
add
sub
ret
or
daa
xchg
fimull
ret
add
pushf
push
scas
pusha
xchg
cli
out
out
enter
sub
xlat
insb
inc
loopne
cmp
push
jnp
idivb
nop
jle
and
push
pushf
in
jle
das
push
out
cmp
push
lea
inc
sub
daa
cli
jnp
inc
stos
add
clc
js
xchg
add
push
push
lods
cmp
imul
lcall
sub
dec
and
add
mov
in
jg
cmp
pop
imul
mov
adcb
fs
jg
push
xchg
push
shr
ret
xchg
add
pop
das
jg
xchg
and
call
add
add
add
sbb
shll
repz
lcall
pminsw
mov
or
call
jecxz
addr16
test
dec
mov
bound
xchg
out
incb
test
mov
out
dec
mov
out
sub
std
pop
mov
ror
pop
inc
add
add
add
add
or
push
dec
fucom
pop
imul
call
and
test
mov
leave
push
xchg
std
push
or
pop
inc
xchg
sbb
sub
add
and
dec
push
fidivrl
xchg
sbb
fnsetpm(287
jno
imul
cli
xor
sbb
adc
add
add
jno
lcall
adc
jmp
adc
test
insl
cmc
cmpl
add
cmpl
scas
push
jnp
xlat
mov
sar
push
inc
jle
jle
jle
test
jge
adcl
cltd
mov
jle
cmpl
add
and
imulb
mov
jle
addl
add
add
add
add
test
adcl
sub
jle
cmpl
cmpb
repz
dec
mov
fwait
nop
test
add
testb
jp
js
xlat
jo
and
out
sub
out
insb
push
out
jns
repz
roll
aam
out
loopne
out
jnp
fsubrl
add
jmp
fists
fwait
sbb
out
jnp
mov
jns
jecxz
scas
fidivl
or
out
call
push
pushf
push
jns
fstpt
out
insb
ljmp
jmp
pop
xchg
in
cmc
xchg
push
mov
arpl
jmp
int3
xchg
in
in
outsb
fsts
adc
jmp
sti
xchg
rclb
add
add
add
add
xchg
in
in
fstps
jle
aas
jmp
sti
xchg
sar
jmp
xchg
or
sar
fs
sbb
inc
add
notl
bnd
in
pushf
daa
pop
js
jg
bound
pop
lods
sti
pushf
pop
push
dec
lret
inc
aad
pusha
das
jb
add
call
jmp
adc
popf
pop
je
pushf
mov
add
lcall
pop
push
into
mov
mov
mov
aam
aad
mov
xchg
add
roll
jmp
cwtl
xchg
adc
adc
mov
sbbl
aam
lock
movsl
add
popa
cmp
push
subb
adc
enter
push
adc
and
add
int
mov
jg
add
lds
mov
mov
push
jmp
adc
ja
clc
jg
push
dec
hlt
xor
pop
adc
mov
add
arpl
inc
jae
call
mov
xor
jo
and
jle
inc
add
add
jb
roll
fwait
out
add
jge
pop
or
xlat
call
ret
je
push
pop
add
add
out
xor
push
cmpsb
inc
ret
pushf
sub
cmp
out
cmpl
sbb
fists
jno
xor
cmp
outsl
inc
in
xchg
and
mov
sbb
xchg
and
clc
add
mov
mov
xchg
cmpsl
pop
add
cltd
and
dec
lcall
ja
repnz
add
bound
jo
push
sbb
jmp
vmovhps
sti
cmp
imul
popf
pop
lds
push
mov
ja
je
jbe
pop
adc
sahf
outsl
lea
mov
ja
je
je
push
shl
popf
outsl
dec
test
and
jge
and
int3
pop
xchg
add
add
add
and
xchg
lock
ja
and
or
push
xchg
jb
push
cmp
jmp
xchg
shl
dec
inc
int
or
xchg
adc
out
or
dec
sahf
dec
add
cmc
push
jno
bound
add
popa
xchg
inc
and
popf
shlb
and
sahf
xlat
je
xor
push
cmpl
push
push
add
push
jmp
fwait
clc
add
xchg
lahf
jg
add
mov
pop
sbb
push
ret
je
pop
fisubs
sbb
lret
repz
jns
enter
dec
lds
xchg
sub
and
mov
in
sbb
mov
in
mov
push
sub
pop
clc
and
add
test
adc
les
rclb
fwait
std
aas
pusha
lret
dec
inc
test
fs
xlat
ljmp
cmc
xor
les
jle
jle
outsl
adc
aaa
jbe
adc
cmpl
push
pop
fdivs
add
fnstcw
inc
scas
pop
jae
or
sti
roll
add
or
jnp
or
inc
mov
dec
aam
test
ret
xor
add
add
add
dec
cld
xchg
sti
mov
push
out
push
std
xchg
add
lcall
popa
sub
mov
jno
ret
sbb
mov
pop
dec
daa
mov
mov
in
popa
xchg
movsl
xchg
insl
psubb
repnz
sbb
in
dec
sahf
dec
adc
mov
push
push
ds
nop
and
add
cwtl
fidivl
add
sbb
subl
lahf
callw
mov
fstl
outsb
push
jmp
cmp
add
imull
jl
push
orl
sbb
in
out
sahf
jb
add
mov
and
repnz
dec
in
mov
outsl
add
mov
orl
jmp
mov
lock
xchg
push
hlt
push
pop
aas
mov
cmp
ljmp
or
add
lds
add
lea
testb
sub
push
ja
insb
inc
push
dec
sti
adc
subl
je
xchg
and
je
incl
adc
xor
pop
ds
push
inc
and
loope
cmp
mov
pop
inc
loope
divb
lcall
mov
adc
sbb
call
adc
lods
add
outsl
andb
xor
clc
cmp
adc
jns
clc
jg
inc
mov
jnp
aam
outsl
add
add
add
cmp
out
jg
add
loop,pn
push
jo
scas
add
xor
shrb
clc
outsl
mov
jne
sbb
adc
sar
pop
repnz
or
and
incl
sti
shlb
mov
clc
insl
sarl
jnp
adc
test
aaa
shrl
add
clc
sbb
std
in
pop
div
push
aaa
fwait
or
cld
inc
clc
cltd
cmpsl
adc
cmc
inc
cmpsl
lods
arpl
out
adc
xor
sarb
fwait
in
call
icebp
ret
sub
jg
pop
out
jns
xor
cltd
push
mov
cmpsb
pusha
mov
or
fwait
jae
push
cs
out
and
jg
das
out
out
mov
fiadds
dec
adcb
lcall
add
add
flds
mov
mov
jo
add
jbe
std
cmp
icebp
mov
sub
jg
addl
cmpsb
and
push
dec
adcb
gs
add
call
bound
outsb
dec
cmp
mov
test
ret
call
dec
mov
inc
jmp
add
inc
jmp
sti
inc
divb
jnp
sub
pop
mov
fimuls
add
je
sub
pop
aaa
pop
xlat
jae
mov
adc
mov
sti
je
sub
movsb
mov
movb
push
in
fcompl
or
and
mov
dec
lods
lahf
das
shrb
add
add
andb
ds
inc
movb
stos
movsb
xchg
cwtl
and
add
mov
sbb
setne
add
loope
lea
clc
rorl
jae
add
stc
rolb
mov
mov
mov
ds
ds
push
rolb
sbbl
or
addl
add
add
xorb
jnp
cltd
iret
pusha
push
loopne,pt
fimuls
jno
test
lret
xorl
ljmp
jo
add
js
or
mov
movsb
jae
enter
inc
call
jo
or
mov
pop
jb
fcom
rol
stc
call
sbb
aad
call
inc
mov
lret
add
push
jp
sbb
shl
add
pop
pop
icebp
aas
clc
outsb
pop
mov
jg
mov
mov
out
inc
pop
dec
xor
push
testl
mov
fcoml
sub
xchg
and
push
mov
push
jo
sub
daa
adc
lock
call
cmpsl
enter
add
add
add
add
fldt
add
inc
cld
jns
leave
push
in
xor
jns
cmp
jae
flds
jae
fnstenv
jno
cmpsb
push
cli
cmpsb
jmp
popf
repz
push
push
int
jae
mov
inc
sti
mov
pop
aam
mov
std
bound
shlb
andl
push
push
add
dec
sbb
stc
push
xchg
insb
stos
xchg
xchg
ss
add
lea
test
xchg
add
loope
jae
inc
mov
mov
push
mov
push
inc
icebp
mov
dec
fmull
je
sbb
adc
pop
mov
sbb
mov
mov
jle
rclb
add
inc
dec
ljmp
enter
daa
fidivrl
in
sbb
add
push
ret
clc
in
mov
jmp
pop
inc
add
in
mov
sbb
jnp
cwtl
std
sub
add
cld
outsl
xorb
cmp
or
pop
inc
add
xchg
cltd
mov
add
xchg
std
setno
push
pop
xchg
jae
hlt
xchg
push
call
add
adc
jge
add
xchg
jae
jge
jmp
clc
outsl
addl
jnp
mov
jns
inc
aam
push
xchg
nop
add
push
cli
push
out
neg
popa
sahf
push
push
sti
add
lret
xor
sub
xchg
add
fiaddl
xchg
cmpsl
sbb
inc
cmpsl
lahf
or
jge
lea
ja
ljmp
loope
mov
cmp
out
clc
ja
xchg
or
cli
inc
clc
xchg
daa
sbb
inc
daa
lahf
call
lret
repnz
movsb
adcl
sub
push
std
xchg
pop
or
jmp
push
and
add
std
aam
and
sbb
xchg
pop
ret
jecxz
int
in
jmp
jnp
into
lock
cmp
jp
mov
cld
lea
jbe
std
insb
mov
mov
push
cmpsl
jp
in
mov
out
cld
push
out
popa
psrlq
mov
mov
sar
xor
pop
add
test
add
add
add
inc
add
adc
add
inc
sti
adc
pop
repnz
popa
push
adc
rorb
jle
inc
rcrl
call
jmp
stos
popa
in
add
mov
sub
and
xchg
call
fcomps
push
nop
fcomps
pop
or
add
xor
jmp
sbb
std
mov
or
jl
mov
xor
in
adc
aas
clc
lahf
les
pop
jmp
pop
pop
mov
jp
fs
inc
add
jg
rorb
adc
subb
fiadds
jne
push
sub
aas
inc
clc
mulb
ljmp
addr16
inc
add
dec
vmovntps
inc
add
push
push
dec
add
push
add
mov
nop
je
dec
cmp
cs
mov
push
dec
shl
push
xor
and
addl
sahf
jl
fwait
xor
sbb
stos
cli
mov
mov
popa
call
jne
xchg
jmp
aad
jg
add
push
push
add
into
add
or
inc
sbb
enter
int
lock
xorl
add
and
dec
je
add
cwtl
adc
jae
mov
cwtl
add
mov
push
cmpsw
jle
jb
push
mov
xorl
mov
xchg
std
fcoml
pop
inc
jmp
add
je
xorb
icebp
push
push
mov
or
mov
cmpsb
call
in
jae
jb
jecxz
ss
test
xorl
push
jno
es
sti
mov
jbe
test
pop
push
adc
add
imul
test
add
test
insl
xorl
push
sti
call
add
push
je
aam
sti
call
rcrl
or
sti
jmp
push
pop
pop
call
lock
std
lahf
jg
cmp
push
mov
or
nop
adc
call
repnz
and
es
mov
movsb
test
std
sbb
xchg
in
jae
or
or
add
mov
jnp
jg
or
cld
cli
inc
and
adc
adc
push
stc
cld
int
jle
adc
xor
dec
std
or
ja
jae
roll
shrb
jle
aam
xor
adc
push
adc
repnz
cld
insl
js
xor
cmp
xchg
fadds
daa
inc
ja
sbb
in
push
dec
shl
or
daa
add
jb
arpl
out
mov
shrb
lahf
or
adc
rclb
jmp
add
xchg
mov
xchg
and
mov
ljmp
ret
jb
ljmp
scas
lret
add
add
add
add
repnz
add
out
ss
nop
dec
sbb
popl
pusha
ljmp
mov
mov
out
ja
add
sbb
fdiv
cmp
cld
adc
jb
std
mov
add
or
cmpsb
or
xchg
clc
movsl
incl
cltd
mov
jmp
mov
push
pop
cmpsl
add
push
ret
ret
mov
adcl
jmp
mov
imul
stc
jle
pop
push
or
mov
sub
bound
negb
push
stc
sti
push
add
call
xor
jbe
and
addr16
cmp
lock
imul
jno
sbb
test
pusha
adc
das
add
add
push
pop
pop
cwtl
pop
or
xchg
lock
mov
jg
pop
cwtl
fs
adc
fcmovu
push
push
test
daa
and
sub
or
push
out
dec
and
mov
adc
test
gs
repz
in
inc
or
xchg
or
xor
sbb
je
add
and
cmpb
jl
add
add
std
xchg
xor
jg
int
xchg
clc
xor
jmp
mov
in
out
stos
add
addb
mov
pushf
pop
cmp
dec
stos
mov
rcr
lret
out
and
stc
xor
cmp
and
add
call
mov
xor
fwait
call
addl
movb
add
add
add
add
cltd
adc
pop
out
andl
mov
xchg
sub
sbb
lret
inc
xor
pmaddwd
ja
push
xchg
xchg
shrl
scas
jl
jle
data16
push
jb
pusha
jmp
movsl
fwait
int3
mov
sub
ljmp
ljmp
mov
sbb
ret
cmp
out
add
cltd
cli
leave
dec
jmp
cli
sub
decb
sbb
add
cmp
out
push
in
imul
inc
aas
rcll
std
mov
xorb
jmp
leave
popf
lods
lds
popf
cli
arpl
xchg
sub
sti
push
mov
clc
hlt
ss
cwtl
pop
call
add
add
add
push
push
mov
mov
sbb
jb
adc
push
push
xlat
fsubrl
gs
test
hlt
push
add
sub
or
test
shr
mov
and
lahf
mov
pop
lcall
out
out
leave
call
sbb
je
mov
and
test
dec
and
mov
je
test
daa
test
xchg
in
adcl
test
mov
inc
push
out
inc
and
and
xchg
dec
sbb
pop
mov
mov
in
notl
add
adc
mov
in
subl
add
xlat
loope
cld
in
hlt
aas
clc
daa
lds
add
jg
jne
lea
test
sub
xor
in
sbbl
push
add
das
push
add
loop
and
adc
push
pop
dec
xor
mov
popa
sarl
or
xor
hlt
lods
mov
cmp
inc
repz
cmp
mov
aaa
pop
inc
add
enter
push
mov
add
jmp
test
sub
clc
ret
popa
cwtl
inc
enter
ret
fisubrs
rolb
mov
and
pusha
ret
mov
jmp
sub
cmp
fwait
xor
daa
jg
jbe
pop
jo,pt
mov
arpl
xlat
out
dec
xchg
jne
sbb
rcrl
push
cmpsl
add
sar
add
xlat
out
imul
jmp
divb
mov
add
mov
adc
mov
adc
in
imul
push
std
stos
lock
std
pop
loopne
xor
push
imul
adc
sbb
jnp
mov
push
push
aas
push
lahf
repnz
mov
mov
sti
and
inc
shl
fwait
dec
xor
push
mov
popa
add
xchg
sarb
inc
sub
outsb
or
and
mov
lret
dec
mov
dec
xchg
std
into
xchg
call
test
aam
or
shll
adc
clc
mov
xchg
adc
lcall
or
dec
in
addr16
push
std
mov
ret
clc
jle
cld
adc
rclb
or
push
xor
sbb
jg
inc
clc
jge
push
hlt
jl
push
jne
push
sti
pop
sub
jge
add
add
rolb
xor
mov
or
in
icebp
insb
or
test
cs
outsl
mov
imul
int3
or
in
xchg
add
imul
lret
dec
aam
imul
mov
mov
add
cmpsl
add
pop
add
hlt
outsl
imul
mov
add
jae
test
int
jbe
pusha
testb
inc
lock
notl
out
stos
pushaw
cmpsl
clc
push
out
mov
aam
in
fcoml
je
clc
fwait
daa
testl
sub
cmp
push
int3
or
add
dec
insb
dec
and
jo
decl
loop
pop
out
jg
insl
ret
ja
jmp
mov
mov
sbb
lods
cmpsb
jmp
add
add
add
push
call
jb
sbb
jle
repz
jae
call
and
xchg
bound
in
pushl
cwtl
negb
jb
or
mov
pop
inc
mov
xchg
inc
jmp
sti
fwait
inc
stc
and
mov
jmp
xchg
xchg
not
push
sub
push
mov
stos
add
push
bound
xchg
in
add
mov
sti
push
adcl
movsb
push
add
rolb
ljmp
push
adc
mov
xchg
je
xor
or
push
std
or
pop
pop
sbb
mov
adc
icebp
nop
inc
or
aas
and
jmp
jl
in
dec
add
inc
and
stc
mov
add
fwait
shlb
add
add
add
cli
dec
push
aad
and
push
and
sub
call
sbb
sbb
add
loope
clc
scas
add
orl
push
cmpsl
clc
outsb
mov
aam
and
fldl
lods
cmpsl
cmpb
mov
jno
jne
mov
repnz
stos
adc
in
outsb
add
mov
in
sbb
cmp
in
pop
sub
jbe
imul
mov
movsl
insb
and
jne
add
scas
fistpl
cmpsl
inc
add
add
pop
stc
push
cmp
int3
rorl
push
out
fisttpll
out
jl
out
clc
in
jmp
fcmovu
out
or
ret
das
lea
add
jmp
mov
shll
inc
mov
push
movb
or
xor
fwait
adc
or
xchg
jl
iret
mov
jne
jno
ljmp
push
out
cmp
inc
sub
dec
inc
mov
fdivr
in
fldl
jmp
decb
popf
jecxz
add
sti
popl
add
pop
jno
bound
xchg
hlt
into
subl
push
je
dec
bound
rorl
lcall
std
in
jno
arpl
sti
mov
push
add
sub
xchg
pusha
mov
loopne
cmpsb
ljmp
call
push
jb
xchg
in
test
lds
xchg
xor
fucomp
add
add
xor
mov
dec
mov
sbb
adc
aam
jae
fcmovbe
out
dec
adc
mov
xchg
jae
aam
jae
fimull
call
movsl
fidivl
adc
inc
cmp
adc
pusha
in
sti
sbb
inc
or
jb
stos
std
pop
mov
flds
add
add
loope
push
push
add
xchg
xchg
rorb
jge
add
rolb
je
add
clc
in
pop
xorl
cld
insb
roll
xor
outsl
orl
imul
or
lcall
push
adc
out
sbb
xor
mov
out
or
jne
mov
outsb
mov
les
mov
or
outsb
je
ret
cmc
xor
call
sahf
xor
fcomip
inc
je
jecxz
clc
int
ja
jae
imul
pop
jo
sti
outsb
lock
pop
insb
inc
and
aaa
jns
out
fadd
scas
call
in
jle
popf
jns
sub
inc
cld
push
cmp
dec
lcall
clc
push
sbb
jo
add
push
cli
jmp
push
add
push
mov
xchg
loop
jmp
xlat
ret
call
stos
pop
and
sbb
add
ret
pop
fdivl
rorb
jmp
cltd
cwtl
push
rorl
adc
loop
dec
jne
pop
xor
mov
test
jmp
pop
jae
subl
iret
push
jae
or
pushaw
cmc
xchg
push
lds
cmpsb
movsl
jmp
jecxz
std
fs
xor
jmp
push
push
je
cmp
int3
pop
push
fs
inc
in
push
push
mov
sti
xchg
cmc
push
push
or
inc
xchg
inc
and
xchg
jl
rcll
add
add
add
add
adc
jl
std
xchg
incb
iret
add
inc
cltd
dec
mov
out
inc
sbb
in
cmp
sbb
mov
adc
test
inc
pop
mov
add
cmp
rorl
lods
add
push
add
loope
dec
or
nop
std
imul
jg
std
mov
mov
add
pop
mov
xchg
clc
addl
roll
add
call
add
jno
and
cmpl
xor
or
add
mov
add
insb
jle
stc
insl
add
mov
mov
clc
push
call
add
sti
daa
inc
pop
mov
add
add
add
insl
add
and
add
jnp
idivb
add
add
pop
inc
sub
xor
xchg
sbb
add
lea
add
dec
out
push
sbb
cmpb
add
mov
leave
mov
rcr
push
jge
imul
jecxz
xor
push
cmp
add
fstpt
mov
es
jne
add
lea
and
mov
sti
push
pop
insb
inc
mov
rcrb
mov
sub
je
add
push
add
adc
gs
out
pop
sub
add
cmp
movsl
out
push
mov
dec
push
cwtl
jmp
adc
dec
add
rclb
imul
add
add
add
add
es
lods
dec
enter
push
je
in
loop
stc
jo
and
or
test
stc
push
add
pop
cwtl
vpsubq
xchg
xchg
cmpl
add
test
cmp
mov
mov
adc
ret
push
mov
fsubr
sbb
bound
rolb
jns
cmp
push
mov
inc
mov
cld
aas
add
iret
or
lods
mov
test
add
mov
jmp
xchg
dec
call
push
nop
shlb
add
adc
mov
mov
out
or
add
sub
mov
add
add
add
insl
stos
insl
call
push
cmc
inc
pop
inc
daa
inc
xorl
out
mov
popf
clc
adc
and
add
jmp
pop
sub
insl
add
mov
lods
fildl
push
out
pop
mov
jno
call
repnz
je
in
push
mov
imul
inc
xor
add
add
xchg
jl
das
insl
xchg
clc
push
sar
push
mov
testl
and
fiaddl
int3
flds
lods
fsubr
xchg
iret
xchg
or
scas
clc
cli
shl
clc
gs
fsts
pushf
add
fs
mov
int
inc
lcall
jle
xchg
inc
sub
lcall
jle
mov
inc
sub
pop
sbb
sbb
inc
cli
inc
stos
ljmp
add
push
mov
sub
xor
ss
pushaw
cmc
out
pop
sub
lahf
cli
insb
ret
lret
mov
arpl
pop
cli
dec
in
mov
jne
sub
sbb
push
sbb
jmp
call
mov
mov
xchg
ret
pop
or
jmp
mov
dec
int
jno
inc
mov
sbbl
nop
push
add
ds
arpl
shlb
jae
cbtw
push
pop
pop
shrb
ficompl
std
gs
fnstenv
add
push
mov
fwait
clc
xor
jg
add
pusha
jb
jnp
pop
add
insb
push
push
gs
jo
inc
sarb
clc
or
push
mov
shrb
cmp
mov
leave
dec
push
mov
cmp
lds
push
mov
test
clc
rolb
jnp
addb
jae
sarb
test
xchg
sub
fstpt
add
add
add
add
or
mov
arpl
push
sub
add
lret
push
add
and
aaa
push
push
mov
call
icebp
aam
imul
insl
add
pushl
loop
in
shr
or
mov
dec
sbbb
mov
lods
popf
fcmove
mov
shr
rclb
jnp
xchg
adc
cltd
mov
add
lahf
aam
jp
out
cmp
out
jg
lods
sarl
out
or
pop
pop
fadd
aas
push
and
push
jb
jnp
pushf
push
push
push
add
cmp
push
std
and
clc
push
out
aam
fwait
rcl
push
jb
idiv
push
ljmp
add
add
fsubr
pop
in
xchg
add
in
adc
ret
mov
ljmp
inc
cli
lret
test
adc
dec
xchg
call
andb
outsb
rcr
test
push
je
or
aas
jmp
aas
xor
push
sub
fisubs
and
idivb
sbb
add
adc
adc
inc
sbb
out
mov
cmc
cmp
add
push
mov
enter
mov
outsl
sti
pop
femms
ret
rolb
data16
add
data16
data16
data16
push
add
data16
add
data16
insl
add
add
lock
adc
mov
adc
push
cs
add
adc
jg
push
inc
mov
inc
mov
jg
and
add
clc
jmp
and
outsl
xchg
add
push
add
jge
and
scas
subps
pop
aas
add
add
push
add
aas
add
insl
inc
stc
push
mov
adc
add
jae
sbb
jb
inc
mov
mov
push
cs
xor
iret
cld
in
cmovo
mov
pop
add
std
enter
aas
adc
push
out
mov
fimull
add
inc
fildl
push
sbb
mov
call
add
add
add
clc
call
icebp
inc
into
sbb
inc
popa
lret
dec
call
imul
fadd
das
out
pop
pop
push
mov
bound
repnz
jno
fdiv
out
clc
mov
call
add
dec
adc
sarl
aas
mov
dec
push
adc
out
clc
push
jnp
lods
add
cmpsl
dec
add
add
and
sti
mov
scas
mov
fsubs
push
sbb
dec
fucomi
sti
xchg
adc
mov
pop
or
jp
adc
sti
push
push
xor
pop
add
sti
in
js
imul
mov
mov
popf
fdiv
add
sti
push
mov
jb
and
fcomip
cld
jne
repz
sti
xchg
fs
add
add
add
pop
mov
ds
std
fs
fisttpll
call
sbb
adc
push
fdivrl
and
xchg
sbb
mov
sbb
add
and
cli
std
call
push
cmp
fbld
pop
sbbl
add
lcall
push
add
in
mov
lret
in
out
inc
adc
aad
dec
push
es
xor
popf
sub
call
clc
mov
and
fstpt
inc
mov
adc
outsb
sar
in
cmp
idivb
jne
lock
pop
adc
xor
mov
sub
pop
cmp
add
mov
das
xor
mov
add
and
xor
clc
outsb
sar
sub
adc
xor
mov
enter
fsubl
jl
pop
push
ja
or
mov
jp
sub
push
clc
push
push
icebp
out
mov
push
icebp
testl
je
outsl
jnp
jnp
insl
or
xchg
cmpsl
out
add
in
lock
cmp
rcll
out
shlb
add
push
xor
dec
out
jnp
out
sub
das
xor
clc
push
jle
out
mov
outsb
lock
jae
outsl
fistpl
jnp
iret
or
push
enter
daa
out
or
pushl
mov
pushf
ret
sar
xchg
call
add
add
add
push
jmp
mov
shl
and
sti
dec
je
mov
dec
push
fsubrp
bound
sub
jbe
cmp
dec
movsl
call
call
sbb
movsl
dec
imul
je
add
dec
push
mov
data16
cld
call
aaa
mov
clc
add
fisttpll
aam
sub
rdmsr
shrb
add
add
cmp
jl
int
add
jb
push
mov
sbb
rcll
and
mov
out
cmp
nop
cmp
cmp
xor
iret
ret
pop
add
cmpsb
les
push
add
fmuls
and
or
inc
cmc
and
mov
shl
dec
lea
or
and
adc
add
int3
imul
add
add
add
add
adc
adc
and
adc
inc
mov
int3
add
std
test
std
loop
and
call
jge
in
sub
jge
pop
ljmp
es
enter
add
clc
sti
clc
incl
dec
dec
test
pop
adc
lret
clc
mov
adc
std
jl
fmuls
jne
xlat
out
aas
ret
xor
or
mul
cmp
mov
aas
inc
stc
adc
aam
adc
and
mov
adc
push
pop
pop
cld
or
out
call
repz
inc
mov
push
mov
loope
stc
stos
and
or
add
inc
cmpsb
mov
sbb
loop
nop
cmp
repnz
inc
ss
andl
add
push
xor
jns
mov
into
loopne
xlat
sbb
insb
pop
les
push
sti
adc
adc
cs
xchg
insl
push
out
adc
add
jbe
add
and
mov
mov
fsubs
and
mov
daa
push
add
add
add
add
add
adc
test
jo
je
xchg
stos
sbb
stos
sbb
dec
lcall
cmpsl
adc
jmp
repnz
fcompp
lock
leave
sbb
push
mov
sti
pop
pop
cmp
pop
adc
mov
out
nop
sbb
adc
and
add
stos
loop
call
clc
add
xor
daa
inc
enter
in
or
inc
rcrl
push
push
dec
sbb
mov
inc
cld
adc
sub
push
ljmp
cld
adc
and
cli
mov
push
pop
ret
adc
pop
add
cs
push
sub
mov
push
mov
pop
and
sbb
add
and
add
test
sub
dec
mov
andl
mov
and
das
mov
xchg
mov
mov
clc
xor
add
sub
les
sbb
cmc
lret
in
insl
add
inc
mov
jmp
dec
mov
and
add
jae
mov
xor
mov
in
xor
inc
jae
jnp
lcall
xlat
and
or
nop
push
lds
popl
mov
aaa
repnz
sub
sub
sub
adc
xor
pop
cld
lahf
or
out
xor
adc
jecxz
mov
clc
push
stos
test
call
cwtl
aam
call
pop
adc
sub
fldl
sub
out
sub
cmp
add
push
push
pop
pop
imul
enter
mov
xor
je
sbb
xor
sub
push
in
cltd
mov
inc
pop
sbb
sbb
push
add
daa
cmp
subl
shlb
lret
xor
jmp
dec
mov
mov
jo
jae
ror
and
sti
inc
adc
lds
add
inc
pop
je
or
sti
push
ret
xchg
clc
push
iret
sub
push
int
cmp
std
sub
sbb
sbb
mov
call
es
popa
scas
sbb
mov
jle
mov
fdivrl
dec
push
xchg
inc
and
jecxz
and
daa
push
std
pop
arpl
std
push
mov
jle
mov
push
mov
adc
cmpsl
loop
adc
push
std
pop
adc
add
push
cmovbe
push
push
dec
add
lock
cli
je
cmp
pop
jnp
push
push
jge
inc
leave
test
dec
int
push
adc
push
jmp
inc
clc
das
or
lock
add
out
clc
mov
push
pop
and
cld
das
les
cs
aas
adc
insb
or
dec
mov
std
in
out
aas
clc
jge
adc
ds
mov
fistpll
xor
jnp
dec
imul
cmp
sahf
add
sub
or
clc
sub
mov
pop
ljmp
add
add
add
mov
pop
and
add
sub
cmpsl
mov
push
aaa
jmp
clc
jecxz
insb
ds
add
pop
sbb
jb
ret
aas
shrb
add
push
pusha
add
out
lea
aas
insb
pop
mov
daa
insl
ficoml
pop
jo
stos
out
clc
jge
or
inc
aas
ds
inc
dec
mov
dec
push
add
out
mov
insb
call
push
pop
adc
pop
enter
mov
in
pop
jmp
call
mov
add
or
xchg
clc
std
inc
stc
xor
add
dec
mov
lcall
cli
imul
sti
push
call
insb
mov
push
jae
out
data16
cli
repz
add
add
add
push
mov
cld
push
add
std
jmp
push
mov
mov
xchg
and
sti
push
add
mov
inc
add
sti
out
hlt
pop
sub
outsb
pop
call
add
push
and
fwait
aad
popa
sbb
push
or
add
push
movsl
enter
push
decl
inc
push
cmp
add
and
add
orl
and
and
adc
add
xchg
dec
jns
adc
loope
cld
xor
inc
or
add
sbb
je
test
add
and
pop
xchg
les
pop
add
rcll
add
subb
clc
addb
mov
add
sbb
add
add
add
add
and
jmp
mov
add
test
mov
and
inc
jae
pusha
inc
push
cmp
inc
shll
and
fs
das
add
cmpb
ficoml
std
imull
push
call
insl
jnp
mov
add
loopne
sub
mov
add
js
jge
scas
pop
es
add
movsb
jnp
in
out
jae
cmpsl
add
jl
pop
inc
call
lret
or
out
mov
jmp
cmp
lret
ds
icebp
xlat
es
add
push
xor
test
xchg
notl
cmp
push
stos
ds
icebp
fwait
es
add
pop
mov
pop
inc
mov
jecxz
out
mov
cmp
inc
push
pop
outsl
mov
add
add
add
xchg
push
add
leave
pop
adc
xchg
push
in
popa
dec
xchg
jle
sti
ret
mov
std
hlt
mov
dec
pop
add
call
lock
call
popf
nop
jne
jp
call
ss
dec
sti
movaps
xchg
jl
lock
je
mov
adc
sti
push
std
sbb
daa
cmp
add
cmp
jmp
cmp
cmp
add
sub
jp
or
push
sti
in
sti
push
add
in
lods
decl
push
dec
push
cmc
push
mov
loope
cmp
dec
or
xchg
lea
sub
jno
inc
xchg
addl
add
and
dec
xchg
mov
dec
stos
mov
cs
pop
add
inc
cmp
add
imul
mov
push
xchg
xchg
enter
out
lods
xchg
add
mov
cmp
outsb
push
pop
adc
inc
mov
dec
cmp
ret
out
add
push
add
inc
pop
mov
jp
cld
in
icebp
aas
clc
mov
cld
cmpsl
and
fdivs
push
rcll
ds
imul
add
add
add
das
stos
mov
mov
push
adc
ds
sar
jnp
add
add
std
in
out
aas
clc
lods
sbb
insb
jmp
push
pop
jnp
add
mov
xor
mov
arpl
sbb
mov
ss
xor
pop
les
or
xor
adc
mov
push
roll
in
mov
divl
aam
xor
out
mov
xor
jmp
push
out
loop
testb
and
negb
pop
jb
jg
fimuls
inc
pop
out
or
inc
das
xchg
mov
cmp
push
out
mov
push
pop
ret
jg
pushl
jb
add
lea
das
or
aas
mov
sub
std
inc
cmc
mov
call
addr16
call
sti
mov
das
hlt
push
inc
mov
inc
lds
std
push
lock
add
mov
loopne
xor
std
out
ret
movsl
shr
sti
xchg
arpl
sti
cmp
sub
cmp
sub
mov
xor
std
pop
lret
roll
and
adc
in
lret
sti
mov
push
rorb
push
stc
lcall
add
xchg
sbb
add
faddl
add
addl
push
mov
xchg
mov
cli
call
sbb
addr16
fcompl
jmp
std
dec
add
inc
push
adc
jg
gs
sti
je
mov
xor
scas
mov
sub
sbb
push
mov
add
mov
fdivr
shl
clc
rol
shrl
add
out
push
mov
cmp
fdivs
incb
or
or
or
sub
fiadds
and
push
adc
dec
xor
jl
aam
jge
add
dec
mov
cmpl
pop
mov
aaa
cmp
jae
enter
inc
pop
lock
adc
xor
jp
arpl
pop
mov
test
test
test
out
clc
jne
repz
fiadds
xor
jg
push
or
ret
out
mov
fs
in
lcall
add
add
add
push
mov
iret
mov
mov
idiv
add
push
xchg
xor
mov
aaa
or
fstpt
pop
add
jle
pop
cmc
dec
gs
lahf
xor
push
xor
decb
push
daa
inc
jno
mov
jnp
push
mov
fsubl
and
pop
jmp
add
and
addl
fldcw
xor
and
repz
and
aaa
jno
add
stos
or
push
std
aam
add
ljmp
sbb
sub
sbb
mov
mov
mov
push
les
dec
mov
ljmp
int
outsb
jno
jbe
add
shll
mov
adc
lea
ja
into
in
in
ljmp
rsqrtps
in
push
fistl
jb
fwait
lods
ja
mov
icebp
test
pop
in
aaa
lods
gs
xchg
sbb
xor
xchg
push
add
sbb
and
data16
push
push
out
cs
adc
push
push
add
lea
je
xchg
clc
adc
inc
xor
lods
dec
inc
stc
mov
and
daa
mov
and
cmp
add
sti
xchg
cmp
inc
jae
sub
addw
lcall
jo
add
and
scas
mov
stos
mov
inc
stc
aas
mov
stc
aas
add
les
adc
inc
js
add
mov
pop
or
jnp
sbb
stos
jne
stc
aas
add
stc
aas
mov
mov
ret
cmpsb
inc
clc
sub
inc
push
addb
cmp
repz
cli
es
inc
xor
mov
aad
and
cmpsl
inc
jnp
clc
push
push
fistpl
out
stos
enter
mov
lret
pop
inc
add
or
out
jo
pusha
iret
sbb
insl
idivb
or
jle
sti
add
mov
sbb
add
in
mov
mov
lcall
popf
pop
jp
sti
testb
push
xchg
add
sbb
fdivrs
xor
test
sbb
call
sbb
fwait
dec
or
add
rcrb
jge
mov
sti
push
shll
enter
mov
push
stos
aaa
call
movsl
enter
or
lods
mov
sbb
pop
push
xchg
mov
jge
push
adc
and
dec
pushf
inc
int
dec
mov
nop
push
test
push
arpl
popf
punpcklbw
add
dec
mov
inc
push
xchg
rorb
pusha
cld
pushl
fdivl
inc
scas
dec
and
lret
idiv
data16
je
repz
adc
cli
jne
add
in
push
sbb
pushf
push
cmovo
loope
ljmp
lret
inc
jmp
loope
in
lods
adc
add
std
dec
mov
pop
mov
cmp
sti
lcall
or
add
add
aas
add
in
dec
jle
jnp
sbb
mov
je
clc
stc
jne
test
push
jae
pop
test
cmp
sub
aaa
mov
rorb
test
jp
hlt
in
lret
adc
fwait
std
idivl
ret
mov
jmp
inc
clc
xchg
or
stc
aas
jge
dec
adc
mov
fadds
stc
aas
jge
sub
jbe
aam
pop
cmp
pop
lret
jmp
dec
nopl
ds
xchg
push
jno
push
sbb
lods
push
roll
push
and
add
leave
cmp
sub
out
in
xchg
addr16
push
jb
add
out
add
push
aaa
mov
add
repnz
pop
add
jbe
ljmp
sbb
ja
sbb
ja
pop
dec
mov
push
out
xor
sahf
movsl
pop
adc
outsl
rcr
jmp
rorl
push
loopne
fidivrs
push
jmp
imul
add
sti
rorb
js
add
sti
mov
pop
add
add
sbb
jmp
sti
mov
push
add
dec
sub
arpl
sub
jmp
std
push
add
jno
fsubr
sti
push
call
insb
cmp
orl
lahf
dec
add
std
push
mov
sahf
push
std
call
adc
add
and
nop
pop
add
add
daa
inc
pusha
pop
add
push
pop
push
push
jno
andl
add
add
rclb
adc
push
std
xor
dec
ss
loop
jae
sbb
call
pop
xor
xchg
scas
andl
add
push
push
push
pop
stos
and
loopne
add
lods
incl
clc
ljmp
add
add
add
xchg
cmpsl
inc
js
aam
cmp
clc
jg
jb
mov
add
clc
insl
js
pop
cmp
add
lret
aas
add
adc
add
jge
rcrb
or
add
fsubl
add
push
insl
mov
stc
aas
add
call
cs
pop
cmpsb
shlb
add
jl
add
sub
add
add
add
clc
sub
push
sahf
cmpsl
xlat
inc
clc
or
movsb
dec
sar
push
in
sbb
out
sub
out
mov
dec
mov
jecxz
mov
add
sub
xor
xlat
out
cmp
scas
out
clc
rorb
or
mov
mov
sar
ret
das
xchg
mov
icebp
add
push
mov
mov
out
sti
enter
add
push
aam
sub
loop
movsb
cmp
jo
ror
and
loop
mov
pop
lods
sti
xor
incb
movsl
sti
xor
push
aam
js
enter
sub
mov
enter
add
cmp
ret
cmp
mov
rclb
stos
fwait
xchg
xor
ds
push
mov
std
into
dec
ret
clts
inc
jmp
enter
cmovg
mov
ljmp
fisubl
stc
in
and
mov
mov
fnstsw
pop
inc
rcll
mov
xor
mov
add
jp
adc
cmpl
or
add
adc
add
orb
push
std
mov
lret
loop
call
dec
and
insb
cld
call
clc
test
test
adc
mov
pop
loope
jmp
cwtl
dec
and
push
inc
adc
push
call
sahf
cld
in
std
call
mov
pop
inc
loope
in
add
das
add
fistps
inc
or
add
cmc
sbb
xor
cli
das
add
clc
xchg
arpl
xor
cli
das
add
clc
mov
fstpt
xor
cli
das
add
clc
aad
fstpt
das
add
clc
cmc
out
fnstsw
das
add
adc
pop
test
test
cli
das
add
add
in
push
add
fwait
push
clc
push
rcrb
pop
inc
cmp
push
out
mov
inc
cltd
push
or
mov
push
mov
sub
push
insb
inc
add
push
jne
cs
sub
xchg
in
push
xlat
out
adc
test
add
xchg
les
out
out
add
test
add
xchg
and
add
cmp
add
imul
add
xchg
add
jmp
out
test
add
cld
cmp
mov
jecxz
inc
jmp
cld
cmp
jmp
push
mov
iret
or
jns
jecxz
cld
cmp
call
inc
or
jns
xchg
sti
push
mov
or
jns
xchg
sti
push
mov
decl
inc
jmp
add
add
add
test
sti
push
mov
pop
or
jns
test
sti
push
mov
or
lods
cwtl
test
cld
cmp
add
ljmp
rcrl
in
adc
add
loope
sti
xchg
sbb
adc
add
loope
xor
adc
in
rclb
add
mov
push
pop
in
nop
pop
add
mov
pop
in
nop
pop
add
popa
mov
in
push
pop
add
popa
mov
in
push
pop
add
and
add
fsubrs
add
sbbl
adc
out
add
call
cmp
adc
xor
jno
add
add
add
sbbl
cmp
jnp
jb
add
enter
cmp
adc
xor
jb
add
cwtl
xor
add
xor
jb
add
test
add
cmpl
adc
outsb
add
cmp
add
sbbl
mov
outsb
add
mov
add
adcl
adc
out
lea
add
ja
add
clc
lea
jmp
mov
add
xchg
add
in
or
out
mov
xchg
out
clc
les
in
out
rorl
popa
mov
out
ret
int
jecxz
cli
ret
xchg
arpl
cmp
push
ficoms
cmp
insl
xchg
test
out
mov
xlat
out
inc
xchg
test
incl
dec
add
jmp
and
mov
cmp
mov
rcll
cmp
outsl
lea
sar
mov
rorl
inc
jmp
hlt
sub
adc
hlt
pusha
outsb
and
loopne
orl
imul
iret
and
cmp
stos
mov
popf
or
add
add
add
mov
sbb
js,pn
std
adc
sarl
adc
in
std
add
add
imul
aaa
insl
add
jae
add
jae
add
jae
add
jno
add
jno
add
jno
add
add
add
jno
add
add
ds
jno
add
sahf
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
ds
jo
add
jno
add
loopne
ds
sbb
ds
cmp
ds
pop
scas
ds
add
ds
loope
ds
into
lods
ds
lods
ds
aam
ds
mov
add
add
add
add
add
ret
clc
shrl
ds
ret
lods
ds
in
jne
xchg
cmp
and
lock
loop
add
jge
lods
or
ljmp
mov
jge
call
loopne
xlat
inc
clc
push
adc
cmpsl
add
vmovss
scas
ljmp
or
xor
std
andb
fisttpl
cmp
cmp
pop
adc
scas
sti
call
sbb
notl
cmpl
sbb
push
push
jl
repz
xlat
xorl
cmpsb
or
arpl
pop
aas
sahf
xchg
sbb
in
sub
cmp
mov
add
add
add
add
adc
xlat
jmp
das
dec
mov
mov
mov
sti
mov
std
jne
int3
cld
cld
add
inc
jmp
gs
adc
mov
sbb
cmp
rol
call
in
sti
mov
mov
adc
pushl
das
std
cs
sbb
sti
mov
add
add
add
add
fldl
int3
cld
hlt
repz
xchg
popf
mov
add
push
incl
inc
push
mov
call
inc
popa
mov
push
fbstp
add
std
push
add
inc
and
adc
jl
leave
push
add
rolb
push
mov
add
and
xchg
insb
and
rcll
add
add
add
call
or
pop
pop
jmp
sbb
and
adc
add
popa
in
and
push
sar
aad
sti
xchg
imul
mov
and
popa
stc
sub
dec
add
sub
fisttpll
jae
iret
push
aas
jge
cmpb
or
clc
sub
adc
pop
stos
addb
clc
sub
lods
push
insl
icebp
fistpll
dec
mov
call
jl
lods
push
jae
mov
mov
sub
xor
lock
inc
jae
mov
mov
xor
cmc
dec
jae
mov
add
push
aas
pop
call
movsb
jmp
clc
mov
or
dec
pmulhuw
mov
xchg
xor
add
mov
cmp
mov
popa
add
ret
ret
shl
repz
filds
mov
or
into
cs
mov
loopne
popa
inc
loopne
out
clc
xchg
cmpsl
mov
in
xchg
testb
inc
dec
add
push
add
mov
xlat
ljmp
or
stc
int3
sbb
inc
add
fsubrs
adc
pop
add
fdivr
aam
add
jmp
xchg
adc
inc
xchg
sti
cld
aad
mov
cmp
push
push
out
sub
test
inc
mov
add
sti
push
add
adc
in
mov
in
fcoms
shr
xchg
aas
in
adc
loope
fmuls
cmpsb
mov
push
ret
xchg
jl
iret
sbb
add
pop
add
pop
adc
ljmp
in
dec
jb
fsubrs
jbe
lea
sub
decl
inc
popa
cltd
mov
ja
data16
inc
popl
fsubs
jmp
inc
cld
je
add
adc
pushf
shll
lcall
add
out
popa
adc
push
str
add
sbb
mov
sbb
clc
sti
call
add
push
push
jno
adc
jnp
push
xchg
cmpsl
cmpb
mov
xchg
cmp
mov
add
jle
cld
jg
push
jae
test
or
push
xor
cmpsb
mov
std
in
jne
inc
clc
stos
inc
je
pop
dec
push
lret
xchg
add
add
inc
mov
rorb
imul
sub
sar
shlb
pop
sub
sub
xor
xor
push
ret
mov
cmpsb
mov
push
cld
aaa
movsl
mov
sub
mov
ret
fwait
es
mov
inc
mov
or
xchg
push
cmp
in
or
out
ja
jmp
cmpsb
push
add
rcr
sub
addb
fxch
mov
out
pop
mov
pop
fsubs
daa
add
xlat
cmp
hlt
sub
cmp
add
xchg
jae
pop
cld
insb
adc
add
inc
pop
adcl
data16
hlt
fildll
rclb
leave
or
insb
add
add
inc
add
bound
fcom
sti
push
xor
dec
jae
sub
pop
and
cli
insb
mov
mov
cwtl
jb
adc
jne
sti
lahf
lds
mov
push
insb
inc
sbb
push
inc
pop
sti
lahf
imull
or
rorl
jmp
adc
add
pop
pop
mov
xor
add
sbb
push
mov
add
loope
das
fildl
xchg
call
fcoml
inc
mov
std
pop
inc
xchg
mov
mov
sub
ljmp
xchg
mov
sub
sti
call
faddl
xchg
mov
popf
mov
lea
dec
call
inc
and
xor
or
inc
adc
ljmp
add
add
add
clc
jbe
inc
and
scas
mov
add
clc
in
adc
std
jg
shrb
call
jge
cld
xchg
mov
roll
pop
dec
mov
lcall
jp
std
adcb
pop
dec
dec
cmp
mov
in
cmc
sbb
incb
sbbl
lock
std
sbb
add
add
add
add
aad
xor
mov
adc
decl
pop
out
mov
sti
cld
adc
xchg
testl
fildl
cld
push
ljmp
enter
out
dec
pop
out
or
cmpsb
mov
popf
sahf
sbb
pop
fs
dec
sbb
add
xlat
movsl
int
insb
jb
jns
push
pop
mov
xor
dec
mov
add
adc
push
or
xor
aaa
adc
je
xchg
out
adc
rolb
or
cwtl
push
add
int3
adc
cltd
or
push
jb
mov
incl
fs
add
xchg
pop
call
add
add
add
mov
test
enter
push
pop
in
push
leave
aam
call
dec
pushf
dec
push
or
shr
jl
cmpsl
sbb
mov
adc
shl
add
and
sub
push
pop
add
push
add
mov
jge
jne
add
mov
sbb
push
mov
inc
jae
repz
in
add
adc
lea
pop
add
adc
stos
in
adc
lea
push
mov
sub
jmp
inc
xchg
cltd
cmc
jne
xchg
inc
and
ljmp
nop
adc
add
pushf
adc
push
inc
mov
loop
mov
imul
add
push
clc
mov
imul
mov
out
add
add
add
clc
std
scas
dec
xchg
cld
enter
adc
jge
loopne
dec
xchg
jae
xor
sbb
xlat
std
add
ret
sub
mov
std
jp
aam
push
stc
std
add
xchg
std
decl
rol
pop
jae
mov
jnp
add
mov
inc
adc
call
clc
pop
push
test
add
ret
or
call
fisttps
addr16
andb
jl
cmp
pop
clc
push
mov
jle
xchg
lds
andb
loopne
decl
sub
push
xor
int3
lcall
clc
push
sbb
jo
push
jns
xor
add
add
fwait
mov
push
sbbl
sbb
sub
add
inc
or
cld
push
add
mov
xchg
inc
cs
aam
push
inc
jmp
nop
push
and
sub
mov
fsubs
add
cmp
or
add
or
sbb
add
add
add
sub
insb
ljmp
call
cwtl
sub
test
push
add
cmp
add
sti
push
add
lret
call
lret
mov
sub
jb
sbb
adc
mov
and
test
addl
testb
and
sub
add
xlat
je
xchg
das
jmp
add
mov
pop
mov
loopne
add
rcrl
inc
dec
in
xchg
out
loopne
mov
push
sub
push
or
aas
sti
test
mov
add
clc
bnd
xorl
pop
ljmp
mov
mov
clc
std
repz
jae
rclb
iret
xchg
add
shll
lock
scas
and
ljmp
into
loop
into
imul
mov
call
mov
sbb
jae
sbb
incb
xor
inc
jns
jns
aas
add
std
lret
xchg
pop
std
jl
rorb
popa
daa
jne
add
add
sbb
cltd
imul
or
lcall
ds
push
out
jnp
and
xor
push
addl
add
sbb
shrb
popa
sbb
adc
iret
in
and
push
cmp
push
in
fwait
adc
pop
jge
int
adc
lds
std
jp
xor
ljmp
add
add
add
add
push
daa
or
ret
xchg
xchg
ljmp
jns
jmp
inc
mov
push
bound
pop
push
insb
sbb
or
and
push
add
or
es
mov
or
aam
or
insb
mov
lcall
bound
push
push
xor
push
add
jecxz
cld
ficomps
out
out
stos
or
jae
cmp
stos
sahf
jmp
test
outsb
push
jb
jge
frstor
andb
lods
bound
scas
stc
incl
nop
lock
mov
sbb
push
lret
scas
adc
loop
or
pop
sub
jo
adc
push
leave
loop
xchg
mov
adc
in
inc
add
loop
adc
xchg
push
or
mov
or
adc
data16
loop
mov
sub
jo
ret
push
fdivrl
cmp
fcoml
inc
lret
mov
xchg
and
lds
or
clc
xorb
outsl
popa
jge
divl
add
std
ja
pusha
mov
add
add
add
int
loopne
cmp
jne
and
adcl
shll
sbb
mov
mov
push
fisubrl
std
icebp
and
pop
adc
mov
mov
mov
xchg
inc
adc
add
mov
ljmp
sub
adc
xchg
lret
and
cli
roll
jb
ret
jecxz
shr
add
xchg
es
push
jl
mov
push
push
in
add
xchg
es
call
pushf
xchg
out
pushf
mov
pop
ljmp
pop
ret
jecxz
push
in
add
cltd
stos
out
sbb
popf
push
add
repz
inc
nop
cmp
imul
mov
bound
sahf
imul
add
add
rcrb
mov
std
jmp
push
arpl
sarl
mov
call
clc
add
inc
xchg
fnstsw
xchg
push
xor
mov
lock
add
adc
andl
fisubrl
jl
cmp
mov
add
add
add
cmp
and
out
ret
push
mov
mov
xchg
imul
xchg
mov
xchg
push
and
leave
push
mov
adc
or
sub
push
adc
add
dec
inc
and
sbb
fsub
and
fwait
add
popa
xchg
testl
jge
and
test
sub
cld
xor
cli
aaa
mov
pushf
out
sub
xor
adc
clc
into
aaa
mov
clc
dec
ret
jno
sub
jno
adc
sub
daa
jae
mov
jge
cltd
or
cmc
jnp
cs
mov
mov
dec
call
insl
sub
daa
addl
jb
and
add
add
add
adc
xor
dec
mov
clc
xchg
add
xchg
repnz
je
xchg
sub
or
je
rorl
enter
sub
call
jl
cmpsl
cltd
xchg
sub
imul
rorb
clc
push
bound
or
aaa
loope
jp
jae
or
xlat
pop
jecxz
clc
nop
test
cmpl
add
add
add
clc
xchg
jp
sub
mov
push
lret
jecxz
jb
jmp
bound
in
and
gs
clc
jo
nop
mov
mov
in
out
cmp
vmwrite
pop
out
int3
cmp
pop
test
out
jg
lret
rcll
xor
pop
add
sub
pop
loopne
pop
fs
push
add
ja
sbb
or
shl
jo
call
adc
mov
imul
hlt
push
jo
jbe
ss
cmp
push
data16
push
test
jo
jb
sbbb
movsb
add
ficoms
pop
call
jb
ss
lods
adc
add
imul
push
xchg
fldenv
xor
cmpsl
push
and
cmpsb
dec
and
xor
sarb
pop
and
add
lcall
dec
std
or
add
push
daa
add
xchg
cmp
mov
cmpsl
adc
push
mov
mov
ljmp
inc
push
xchg
ret
or
out
pop
sub
push
sub
mov
lea
dec
out
in
pop
and
ljmp
je
and
adc
mov
daa
push
insb
clc
out
xchg
insl
mov
sub
pop
out
add
push
inc
xchg
xchg
mov
add
in
cmc
mov
sub
shl
out
test
std
jb
mov
int3
lods
mov
sub
mov
add
lock
test
call
add
gs
pop
imul
dec
sbb
cmpsb
pop
or
mov
dec
pop
pushf
call
push
cmp
nop
fldcw
test
fisttps
jmp
ffree
notl
or
loop
leave
das
cli
ret
out
mov
pushl
sbb
dec
pop
stos
mov
push
adc
jp
sbb
lahf
dec
sti
add
mov
test
mov
jl
push
out
push
or
jno
pusha
cmp
fcmovnb
add
mov
das
imulb
sub
add
or
arpl
sub
jmp
dec
imul
movsl
cmpsl
call
adc
mov
add
je
jbe
cld
push
jmp
shlb
jmp
cmpb
mov
cli
out
push
bound
mov
push
xor
sub
icebp
fs
xor
sub
ljmp
jmp
add
daa
mov
sti
push
add
test
mov
mov
xor
sbb
adc
mov
das
rcrb
xor
fcomps
xchg
pop
push
push
mov
ret
xchg
lcall
sti
lcall
xor
jge
into
mov
sub
dec
jge
add
outsl
sub
push
sbb
neg
mov
pop
cwtl
push
dec
push
push
mov
test
cmpsl
das
test
cmpsb
sub
pop
cmp
dec
out
mov
push
fisubrs
xorl
cld
xor
in
push
jae
pop
lcall
pop
std
sbbl
adc
hlt
imul
out
add
rcr
or
pop
ss
pop
mov
pop
mov
jae
test
xchg
clc
in
sub
scas
mov
mov
out
js
sti
and
rcl
and
subl
xchg
add
pop
xor
add
add
and
push
mov
fs
lods
fwait
das
xchg
cli
sub
add
adc
rcl
sub
adc
jae
das
dec
repz
sti
in
decl
out
or
add
add
add
add
nop
rolb
dec
bound
jnp
xor
jp
sbb
adc
iret
test
jnp
sti
dec
fists
or
dec
or
data16
mov
mull
sti
in
or
cli
or
or
cld
arpl
pop
pop
arpl
push
jb
xchg
cmp
lahf
add
out
mov
sti
push
xor
test
xchg
je
or
cmp
push
aam
inc
jmp
sti
xchg
cmp
lea
test
mov
xor
jae
jnp
or
sti
test
add
push
add
mov
into
clc
jp
cmp
inc
and
clc
jmp
push
call
add
add
add
fistl
add
mov
mov
mov
add
mov
xchg
ja
adc
and
aad
pop
mov
add
fstl
shlb
mov
dec
or
or
dec
or
cmc
xchg
push
cmp
pop
or
or
cli
add
add
add
add
mov
mov
or
jae
add
stos
roll
lcall
add
int
xchg
jge
mov
sti
xchg
and
out
pcmpeqb
loope
inc
cmp
addb
lret
and
add
xlat
les
std
dec
push
test
insb
fdivr
inc
icebp
test
in
add
add
add
add
add
in
mov
jge
mov
cmp
xchg
and
out
iret
push
push
hlt
lea
xchg
sub
mov
enter
push
movl
adc
adc
mov
cmp
scas
in
notl
push
cld
adc
jecxz
stc
shr
add
mull
stc
shl
add
imull
sub
xchg
mov
inc
pop
sub
clc
pop
jb
js
out
sti
inc
cmpsl
pop
and
or
push
mov
mov
ret
adcl
push
aas
pop
int3
out
scas
clc
cld
bound
mov
and
shrb
fs
aam
and
xor
add
xchg
adc
call
adc
fs
or
inc
add
enter
add
dec
cmpsl
mov
pop
ret
arpl
xchg
movsb
daa
fstps
sti
lahf
stc
out
adc
hlt
lahf
out
insb
loope
pop
cmp
pop
call
mov
push
add
mov
inc
add
lods
dec
add
shrl
adc
sbb
pop
stc
ljmp
add
add
add
sti
adc
xchg
adc
mov
adc
incl
or
inc
adc
cld
push
out
out
adc
pop
pop
fwait
pop
push
leave
and
add
shrl
div
inc
push
mov
inc
call
pop
and
fwait
add
add
les
fcompl
cmp
popl
mov
fmull
and
add
clc
insb
cmc
cmp
inc
add
cmp
test
stc
incl
mov
test
incl
cmp
xlat
stos
inc
clc
cld
test
stc
incl
xor
subb
idiv
test
adcl
clc
inc
cmp
mov
std
jno
in
jne
incl
clc
repz
call
add
add
add
and
add
push
jb
jnp
in
imul
add
in
aaa
ja
xchg
jl
dec
mov
fisttps
daa
add
shr
xchg
arpl
fistl
and
mov
inc
sub
sti
push
cmpsl
add
sbb
mov
mov
or
adc
imulb
fnclex
xchg
cmp
jl
cmp
jle
cmp
jle
mov
in
sti
push
add
cltd
js
jmp
jo
jae
inc
pop
and
xor
pop
and
and
and
and
aad
sahf
dec
int
sahf
aam
mov
cld
xchg
add
leave
dec
lds
sub
pop
lret
aaa
and
push
sahf
enter
add
ret
icebp
add
pop
mov
pop
pop
push
and
test
das
arpl
add
pop
sti
xchg
mov
add
and
mov
lahf
cli
subps
jmp
mov
and
rcrb
pop
dec
add
movsl
push
push
or
sub
rcrl
push
mov
enter
sti
xor
jbe
push
mov
fstps
cli
je
xchg
inc
and
cmpsb
push
ljmp
and
or
mov
je
incb
sbb
in
clc
decl
lock
adc
pop
inc
xchg
or
jl
dec
sub
mov
or
xor
and
jbe
clc
fcom
les
cmp
loopne
clc
incl
std
scas
push
in
mov
add
adc
jl
clc
mov
xor
and
sbbl
clc
andb
jl
add
clc
adcb
jl
add
clc
in
inc
xchg
clc
xchg
lret
out
mov
mov
aaa
jnp
fldl
jno
ret
out
add
in
and
out
pop
pop
or
hlt
lcall
sbb
out
mov
and
add
inc
mov
scas
xchg
fistl
cmpsb
xor
das
idivb
push
ficoml
in
sub
lock
or
inc
fwait
es
repz
push
les
shl
or
sbb
push
add
add
fwait
inc
add
into
xchg
ret
in
js
and
sti
popf
jae
fistpl
add
js
and
sti
and
je
xor
cmp
out
std
hlt
pop
or
js
or
and
add
push
pop
and
js
jae
jg
and
sti
xchg
jnp
push
out
jb
mov
mov
loopne
add
add
mov
add
add
add
imul
and
inc
in
pop
adc
jmp
cmc
sarb
ret
or
sahf
add
and
push
sbb
dec
out
push
jmp
into
adc
lods
into
xor
dec
scas
and
stos
sti
je
xchg
sti
push
pop
xchg
xchg
push
jecxz
push
ljmp
adc
dec
ret
push
cmp
push
add
adc
shl
inc
inc
add
in
scas
and
test
icebp
xchg
sbb
adc
mov
push
insl
pop
adc
cld
push
clc
lods
lcall
cmpsb
inc
call
xorl
add
sbb
add
fstpt
mov
mov
je
clc
jbe
pop
jno
clc
les
aaa
hlt
js
cmp
cltd
push
jl
add
aas
int3
js
cld
cmpsw
pop
addl
lds
lock
std
in
idivb
clc
jb
sub
incl
call
sub
ds
in
call
add
push
bound
dec
mov
into
mov
out
push
push
or
push
imul
cmpsb
in
jno
add
ljmp
inc
mov
idivl
mov
repz
mov
or
scas
mov
out
add
aaa
jb
fildl
cli
push
sbbl
or
jno
mov
push
fsubrs
pop
cld
jmp
add
nop
xchg
call
clc
roll
add
jbe
jmp
add
add
add
cld
scas
sub
or
scas
dec
pop
fs
adc
push
jmp
lds
sti
cmp
stc
jp
test
xor
mov
mov
cmc
popa
jmp
adc
jns
jmp
fisttps
inc
jmp
jp
add
jp
or
push
js
mov
jmp
sub
cwtl
mov
add
add
add
dec
mov
push
cld
lret
push
out
jg
xchg
mov
adc
mov
testb
dec
sbb
sar
out
mov
lcall
pop
add
shll
push
lods
mov
and
imul
clc
and
push
xchg
pop
adc
mov
adc
add
popf
or
xchg
cwtl
pusha
add
in
cli
cld
xor
jl
movsl
dec
cmpsl
push
dec
mov
data16
or
mov
std
add
jae
loopne
addl
or
adc
ja
xchg
cmpb
jl
stc
incl
mov
add
clc
pushl
ja
incb
lret
and
add
pushl
cmc
mov
clc
rolb
cld
in
sub
aas
clc
mulb
mov
add
push
ja
jmp
add
sti
cld
mov
add
mov
and
add
jmp
ffree
push
xchg
mov
divb
jg
fcoms
out
ficoms
push
das
jmp
test
adc
add
bound
in
add
or
jno
insb
xor
cmpsb
pop
inc
bound
sub
push
jecxz
pop
out
cmp
imul
add
jb
jnp
pop
stc
sbb
push
ficoml
fcmovnbe
mov
jo
push
pop
jge
jge
cmp
out
push
cmp
lahf
rclb
in
call
sti
popl
add
jb
pop
push
add
adc
lods
dec
insb
jae
mov
bound
nop
push
or
push
adc
dec
cltd
sti
bound
jmp
cmc
js
cld
xchg
out
mov
add
pushf
dec
roll
xchg
dec
pop
xchg
js
sub
or
hlt
jbe
push
mov
and
add
daa
jo
add
adc
aam
enter
xchg
add
sbb
or
push
adc
fldcw
nop
mov
and
xchg
xchg
imull
jb
ja
and
mov
add
js
mov
cltd
inc
loopne
inc
adcl
aam
push
mov
inc
or
mov
call
test
pusha
inc
mov
add
add
add
add
sub
clc
inc
mov
jae
adc
sbb
add
xor
and
std
in
je
mov
ret
lea
mov
pusha
clc
out
xchg
push
jbe
call
in
sti
lea
les
jno
fmuls
add
and
add
add
or
inc
roll
xor
out
ret
push
push
inc
lcall
inc
dec
into
js
jbe
push
aam
insb
push
fdivr
mov
xchg
in
mov
mov
cmc
xchg
out
or
imul
lock
je
aam
dec
dec
add
out
pop
adc
out
ret
cmp
mov
push
cs
cwtl
add
in
mov
adc
xlat
in
add
fwait
jo
clc
push
add
mov
xchg
mov
or
cld
push
mov
jne
and
insb
repnz
sti
push
add
and
mov
add
add
add
pop
mov
int
out
sub
jbe
jb
test
leave
hlt
out
sub
movsb
jge
jbe
jb
test
sub
sbbb
int3
fucomi
in
insb
pop
and
jle
jb
jl
and
dec
dec
call
arpl
sub
add
xchg
dec
and
out
mov
mov
decb
pop
imul
add
add
add
add
test
xchg
and
adc
sub
or
fsubrl
jbe
ret
or
add
cmp
dec
push
sti
pop
dec
push
outsl
add
adc
test
xchg
mov
sti
adc
lcall
push
mov
push
mov
fists
inc
clc
je
addb
add
add
add
add
arpl
lret
push
sub
inc
and
dec
inc
or
jecxz
movbe
push
jae
sub
cmp
adc
and
pusha
push
cld
data16
add
out
xchg
int3
clc
push
std
in
adc
jp
jae
insb
sti
cld
lods
clc
push
std
add
mov
pop
subb
add
add
add
cmp
add
je
cld
or
push
jb
shrb
fcmovb
pop
lea
shlb
jns
mov
push
xchg
es
inc
jns
add
or
adc
pop
push
clc
push
orl
push
and
inc
or
add
mov
push
ret
jae
sbb
daa
or
push
out
jnp
fildl
pop
pop
repz
adcl
xor
xchg
adc
push
add
stos
loope
sub
push
sub
pushf
cld
push
data16
je
jns
add
int
mov
test
add
sti
inc
push
jb
adc
adc
cmp
add
or
push
mov
add
add
add
in
data16
adc
call
fnsave
push
xchg
out
mov
push
icebp
lods
mov
out
xlat
subl
mov
iret
out
std
push
adc
inc
add
xchg
hlt
js
sbb
mov
push
pop
push
and
insb
pop
and
mov
loop
cvtps2pd
or
nop
inc
and
inc
call
test
loope
or
in
adc
shl
xchg
aam
add
stos
std
pop
or
pop
ret
push
mov
mov
in
push
addl
aas
add
aad
jno
rcl
sti
jmp
cwtl
js
sbb
dec
or
mov
jp
mov
lods
add
add
incl
inc
xor
add
repz
sbbl
mov
in
call
test
in
in
es
and
inc
sbb
sbb
ds
push
stc
jae
mov
adc
jo
or
or
mov
mov
and
dec
mov
inc
and
push
pusha
imul
push
jmp
add
sbb
ds
dec
jmp
cmp
add
sbb
ret
jnp
mov
mov
xchg
aad
xchg
sub
add
nop
lcall
or
sbb
xlat
ljmp
adc
test
inc
push
add
out
add
je
add
je
add
je
add
push
add
add
add
add
add
or
out
mov
int3
incl
js
or
cs
jmp
out
add
jle
and
stos
jo
insb
cmp
sub
testl
cld
jmp
sti
bound
xor
in
mov
add
and
test
std
add
mov
adc
dec
faddl
or
out
cmp
jnp
call
adc
push
push
mov
call
popf
xlat
jo
xchg
push
and
mov
test
jg
std
adc
inc
in
xor
push
pop
sti
jmp
xchg
js
mov
or
notb
jmp
add
sbb
and
and
mov
push
push
sbb
in
jecxz
sti
test
or
out
jecxz
add
fnstenv
push
inc
pop
pop
sbb
xchg
shlb
je
cwtl
cmp
in
or
ss
test
sbb
sub
pop
scas
aaa
pop
mov
and
mov
push
scas
movsb
data16
iret
cmp
add
mov
test
mov
jge
jo
jnp
cmc
addb
cmpb
cmc
sbbb
adcl
jmp
cmc
sub
pop
mov
cmp
cmc
cmpl
call
call
movb
jae
xchg
andb
inc
dec
inc
cmp
adc
call
mov
mulb
outsb
sbbb
xor
lock
clc
push
roll
inc
lds
xchg
hlt
xchg
es
je
out
clc
mov
jmp
test
idivb
lcall
stos
out
adcl
adc
pop
pop
inc
mov
insl
in
cmp
ss
int
mov
xor
in
add
insl
add
jle
adc
lods
dec
and
mov
add
adc
push
aam
push
int
fildl
and
sbb
mov
mov
mov
add
cmpsl
cld
ds
std
fdivr
add
cld
adc
xlat
pop
mov
rol
xchg
jmp
dec
inc
push
jb
inc
mov
or
push
jle
and
and
add
sub
test
std
add
inc
popa
pop
mov
and
fnstenv
lret
sbb
dec
sbb
mov
jmp
jns
pop
and
xchg
iret
add
dec
and
cmpsl
aam
je
pop
iret
jne
inc
push
call
push
aam
mov
add
add
add
rcrl
mov
xchg
test
mov
sub
mov
mov
push
test
mov
push
or
mov
sbb
cmp
pop
add
add
je
out
cmp
ja
jae
adc
cmc
test
std
fs
add
jae
xchg
movsb
cs
add
loop
adc
pushf
jge
loopne
mov
out
dec
fdivrl
xchg
punpckhdq
add
and
dec
fimull
sub
jnp
jl
js
push
stc
fldt
mov
jb
call
push
repz
lds
lods
cmp
cmc
xchg
jae
out
jae
lret
and
push
cld
lcall
aam
fisttpll
mov
jo
neg
imul
pop
push
sbb
stc
loopne
pop
xchg
push
jno
mov
mov
mov
orl
dec
mov
inc
clc
fwait
ljmp
daa
pop
subl
mov
add
add
add
add
or
cld
pop
and
sub
sbb
cli
pop
jno
cli
pop
cli
mov
pop
ret
xchg
mov
shll
dec
add
push
dec
push
jb
pushf
push
out
pop
dec
push
sti
outsl
push
pop
sarb
and
loope
int3
inc
or
jge
and
sti
dec
out
inc
daa
xchg
inc
bound
add
mov
addb
sub
sub
xchg
sti
inc
or
ret
sti
nopl
call
dec
or
iret
shl
rolb
dec
jbe
aam
cld
push
mov
push
adc
adc
add
jne
jno
stos
push
sbb
aam
xchg
or
mov
and
push
or
jbe
aad
dec
clc
ss
or
cmp
mov
inc
in
push
clc
cmp
dec
and
adc
cmp
jae
inc
outsb
cld
std
dec
add
mov
or
cmp
cs
mov
mov
xchg
xorl
ds
or
add
movl
mov
xchg
in
je
je
add
imul
cmpb
jns
inc
mov
pop
clc
mov
jmp
xor
mov
jp
pop
push
sti
cmp
jl
sbb
hlt
lahf
in
sub
push
add
lcall
pop
out
jae
out
push
jae
rcll
pop
xor
push
add
xchg
scas
out
jp
in
ret
rorb
sar
xor
push
xchg
mov
js
repnz
ret
push
lds
roll
or
daa
sub
insb
lret
adc
dec
scas
sub
pop
mov
dec
addr16
cld
data16
aam
and
xor
adc
add
shl
hlt
add
push
add
xor
or
dec
je
or
add
maxps
sub
lahf
inc
stc
js
or
pop
jmp
bound
xor
loopne
fildl
or
sub
and
mov
push
or
cli
adc
and
movsl
xlat
es
fs
sti
ud1
inc
add
push
or
movsl
clc
and
add
pushf
std
call
fbld
ret
gs
dec
je
or
and
test
add
jbe
adc
cmpsl
push
add
lds
pop
cmp
sti
ds
adc
inc
push
add
bound
jne
ret
jno
push
ret
pop
dec
or
sbb
rorl
test
sar
adc
add
cmp
popa
pop
jmp
out
xor
adc
adcb
inc
sbb
mov
in
jns
sub
push
jno
dec
call
jmp
dec
pop
inc
inc
out
mov
sbb
sub
adc
test
or
imul
push
cld
ljmp
mov
or
mov
add
add
add
mov
add
jae
clc
lds
clc
mov
ja
push
push
cmpsl
inc
sysenter
out
push
cmpsl
add
shll
cmp
or
clc
push
out
jnp
call
and
push
mov
mov
or
pop
clc
push
out
mov
push
lret
push
lahf
mov
outsl
add
bound
lahf
bound
add
mov
or
fwait
es
push
or
ja
add
push
push
add
push
add
into
lea
es
hlt
sbb
add
sti
lahf
inc
dec
or
add
adc
test
cld
jb
repz
repz
inc
push
lcall
add
push
add
into
das
cmp
fistl
add
sti
push
add
or
fwait
jmp
decl
and
les
dec
jb
mov
popa
sti
push
mov
movsl
adc
cmp
adc
repz
push
and
or
pop
sbb
add
jp
test
inc
pop
lahf
idiv
incl
cmp
xchg
ss
in
sbb
je
mov
add
pop
pusha
out
sbb
or
push
sub
mov
test
push
dec
push
xchg
add
adc
loope
and
popa
cmp
imul
gs
xchg
dec
add
add
dec
sbb
clc
mov
add
add
add
add
inc
add
sub
pop
clc
xor
fsubr
dec
push
jae
sbb
jl
jbe
add
cmp
mov
add
jne
outsb
add
test
push
sub
mov
jp
std
or
dec
icebp
orb
or
fidivrs
inc
and
inc
adc
decl
sti
sti
xchg
faddp
in
and
inc
add
mov
notb
stos
es
inc
clc
xchg
cmpsb
jno
mov
jge
sbb
fnstenv
mov
mov
add
push
mov
clc
xchg
sti
iret
xchg
int3
test
shrl
cmpsl
cmpsl
cmpsb
add
pop
push
add
push
jb
sub
mov
fnstsw
sbb
call
fildl
shll
sti
push
cmpsb
add
fwait
ljmp
cld
xchg
mov
jmp
les
hlt
sub
jmp
js
jae
jp
cld
std
out
arpl
cld
daa
inc
jmp
inc
sbb
dec
sti
push
push
jb
lret
lret
jmp
xchg
cmc
testb
shlb
pusha
push
jb
repz
test
out
push
ds
cmp
imul
and
sti
mov
lret
jae
add
dec
lret
mov
fcmovb
xor
xor
std
inc
and
fs
fadd
inc
shl
sti
je
xor
xchg
loopne
loope
in
test
sbb
shl
je
pop
imul
lret
inc
inc
add
mov
sub
push
add
pop
rclb
popa
adc
mov
pop
out
ret
pop
jecxz
add
aas
and
xchg
pop
xchg
add
and
je
push
clc
push
adc
test
adc
inc
add
pop
or
subb
add
add
add
add
push
add
sub
sbb
sbb
daa
cmp
jae
xor
add
lret
jge
cld
test
loop
movsl
cmp
rorb
jle
pop
cmp
jmp
inc
cld
clc
jp
sbb
stc
mov
and
lcall
inc
cmp
insl
dec
jne
insl
dec
lret
and
outsb
call
ficoml
mov
jbe
pop
sub
iret
jmp
addr16
int
and
pop
adc
imul
inc
add
cmp
cmp
adc
aam
push
ficomps
popa
roll
jge
cmp
repnz
xor
dec
add
in
or
fisttpll
xor
dec
or
int
add
and
push
lcall
adc
lcall
into
xlat
adc
add
call
cld
jmp
or
push
cmp
and
pop
scas
push
mov
jo
or
add
adc
out
sbb
mov
dec
dec
std
call
arpl
pushl
push
mov
add
test
inc
daa
movsl
pop
sti
incb
sub
mov
mov
add
sti
push
or
bound
mov
inc
std
pop
xor
xchg
std
mov
xchg
test
ljmp
ret
cmp
xchg
xchg
sub
fdivr
xchg
je
push
mov
add
add
out
daa
in
out
daa
decl
pop
and
xchg
and
push
pop
pop
pop
and
cld
push
push
jg
frstor
dec
push
stos
int
fstps
pop
or
fbld
pop
add
lods
aam
inc
clc
lods
push
and
add
in
and
nop
popa
mov
rcr
cmpb
inc
add
jnp
mov
icebp
add
push
mov
dec
add
push
sub
std
ficoms
inc
rolb
sahf
test
mov
ss
in
repnz
clc
xor
call
or
dec
inc
aas
sbb
lret
cmp
add
movb
es
add
inc
std
or
push
jo
add
push
loopne
out
popa
push
hlt
mov
add
add
add
subl
xchg
push
out
nop
and
add
xchg
fwait
out
mov
push
out
mov
imul
sbb
adc
and
int
push
scas
in
clc
push
fld
lds
ret
lds
mov
ret
cld
incl
jae
mov
inc
clc
lea
fistl
jno
mov
sti
push
mov
lahf
add
push
subl
or
jb
xor
mov
mov
xlat
fs
inc
or
sbb
fisttps
in
out
xorb
dec
rcl
ss
add
cmp
pop
andl
dec
sbb
shl
in
ret
cld
insl
cmp
add
sub
inc
arpl
add
add
add
add
cs
ret
mov
in
pop
ja
jae
imul
inc
add
cld
add
sub
ret
fs
cmpl
sti
adc
or
mov
lock
pop
add
add
call
test
pop
popa
jmp
popa
clc
push
xchg
popa
cld
popa
nop
dec
clc
cmp
fldl
push
cltd
mov
clc
add
push
add
das
pop
in
push
call
pushf
pop
in
jle
and
rcrl
add
mov
in
inc
sbb
call
dec
outsb
mov
clc
push
add
popa
lahf
add
shlb
mov
dec
clc
mov
and
ss
in
std
icebp
aas
clc
outsl
leave
sarb
push
jae
xor
aas
add
xor
and
inc
dec
and
out
adc
push
sbb
xchg
push
in
orl
push
adc
push
and
test
mov
fimuls
and
testb
out
adc
mov
adc
dec
jae
push
out
jnp
rorl
jno
or
shrb
call
push
add
mov
daa
fsubrs
mov
ljmp
pmullw
add
mov
jg
es
push
and
xlat
in
stc
push
out
aaa
rcll
and
mov
sub
cmc
fists
jb
adc
push
cs
xchg
push
jl
and
enter
sbb
cmc
push
sub
nop
out
bound
out
aaa
pop
add
pop
add
shrb
push
sub
out
imul
push
jae
adc
and
sti
xor
decb
mov
sti
mov
ljmp
ljmp
pop
and
and
cmc
jo
xor
push
sub
mov
int
stc
push
add
add
pop
stos
movsbl
ja
imul
or
push
dec
std
adc
sub
jle
mov
sbb
add
add
push
jmp
aam
mov
out
add
jg
sbb
mov
out
and
or
sub
adc
aam
xor
adc
xchg
ds
je
add
xchg
sub
jbe
inc
push
loope
xchg
xchg
rorb
adc
lods
cmp
clc
out
add
jo
mov
sbb
inc
cld
scas
add
clc
insb
add
je
add
xlat
inc
pop
inc
and
push
daa
inc
mov
clc
lods
add
clc
ss
sub
add
cwtl
add
add
add
add
add
clc
and
mov
mov
mov
jno
sbb
clc
lods
mov
add
je
das
cli
lods
add
mov
inc
mov
push
jb
fsubl
jo
call
fcomp
add
push
jmp
mov
push
out
ljmp
add
push
aas
or
out
add
out
clc
scas
cmp
sub
jae
in
scas
mov
aas
fmull
call
inc
clc
inc
out
cmp
push
vpminsw
test
bound
scas
arpl
pop
sbb
add
les
stos
and
bound
lea
loop
inc
and
jnp
add
ss
repnz
add
addr16
dec
adc
mull
pop
sub
push
xor
rol
push
bound
add
sti
pop
rclb
xchg
xor
sti
push
mov
repnz
jae
cmp
jno
or
pop
lahf
cmp
add
scas
hlt
xchg
jb
aaa
jmp
push
xor
or
mov
mov
add
add
lea
cmp
or
jnp
cmp
bnd
xchg
mov
push
lcall
pop
mov
jecxz
push
or
daa
xchg
ljmp
lret
dec
mov
lods
and
loope,pt
dec
xchg
js
pusha
sbb
pop
cmp
add
adc
and
stc
cmp
add
dec
and
lods
sub
add
ret
xchg
js
gs
sti
ret
add
push
inc
sar
jnp
inc
push
lds
sub
divl
roll
decb
scas
dec
cmp
and
and
push
or
shll
push
xchg
shlb
call
sub
into
sar
add
xor
inc
ret
out
add
jae
sbb
add
sbb
mov
scas
add
jge
dec
push
jno
sbb
arpl
xor
jmp
add
sbb
sti
mov
repnz
mov
mov
and
out
cld
lea
push
mov
imul
out
cmp
arpl
add
pcmpeqw
sti
inc
loop
clc
sub
mov
les
jb
js
push
mov
repz
dec
cld
sub
call
sub
roll
adc
lahf
ja
add
mov
andb
xchg
jmp
adc
dec
icebp
sub
jmp
arpl
add
add
fs
call
hlt
push
add
pop
call
bound
xor
rolb
sub
aaa
lret
or
sti
push
inc
std
sbb
call
pop
loope
xor
or
aam
dec
std
fmull
or
jo
or
lret
cltd
cmc
mov
lahf
int
insl
call
out
test
push
add
scas
mov
xchg
sbb
jnp
push
mov
xor
cld
incl
sub
sub
pop
push
ljmp
adc
lahf
mov
je
and
inc
and
and
into
ret
inc
sub
sbb
pop
pusha
in
jg
sbb
sbb
sti
sbb
rorb
in
or
add
mov
std
pop
push
loopne
and
push
add
mov
pop
add
add
mov
and
push
fmuls
cmpsl
inc
loop
mov
hlt
dec
int
rol
aaa
xchg
and
mov
jmp
mov
lods
xchg
jae
daa
roll
sub
lahf
repz
jle
sarl
jns
sbb
cmpl
add
xor
mov
add
add
add
add
mov
icebp
cmc
mov
pop
mov
cli
push
jmp
daa
fsubs
mov
cmp
sbb
push
adc
out
pop
dec
out
push
adc
dec
test
cmc
sbb
add
or
out
sub
aaa
and
jle
add
filds
fdiv
imul
cmp
out
mov
test
fiaddl
fs
sbb
dec
sti
cli
pop
xchg
push
out
push
sbb
add
mov
shll
dec
mov
daa
adc
test
clc
push
add
sbb
jmp
push
pop
and
lret
dec
mov
push
push
add
sti
lods
shr
notb
cli
imul
sbbl
mov
or
out
aaa
jmp
add
add
add
push
cmc
stos
hlt
push
add
scas
cld
imul
and
xor
sti
and
push
mov
mov
sbb
std
aam
or
push
push
pop
ret
dec
sub
jae
cmc
cmpsb
push
mov
adc
mov
fwait
cli
pop
xchg
push
add
cli
add
push
add
push
add
pop
scas
sbb
mov
daa
imul
int3
pop
and
icebp
sub
fs
jae
mov
push
add
inc
cmpsb
pop
enter
and
loope
sbb
dec
push
cmp
pop
add
cltd
adc
jl
cmc
add
push
mov
call
xor
mov
andl
mov
fisttps
movsl
rorl
add
add
add
add
and
lret
cmp
adc
cmp
and
in
push
add
mov
add
int3
jecxz
or
scas
and
out
mov
xchg
das
mov
xor
inc
mov
jle
add
jnp
stc
mov
add
clc
cmp
add
cmp
clc
sti
test
push
push
add
leave
add
call
mov
fistl
out
in
cmp
xchg
mov
push
fcoml
out
aam
sbb
ja
out
aam
cltd
add
push
xchg
add
push
xchg
pop
clc
inc
div
xchg
cmpsl
add
jno
push
scas
mov
sub
inc
xor
mov
cmp
pop
or
adc
addr16
pop
out
imul
add
mov
fisubs
dec
add
push
hlt
and
push
std
cmc
pop
add
sti
cli
push
add
cmp
pop
cmpsl
into
dec
ret
das
decb
mov
call
sti
push
add
mov
mov
jmp
jp
mov
gs
scas
cld
jmp
add
add
add
jmp
into
scas
std
push
fdiv
push
push
hlt
dec
std
aam
add
mov
mov
mov
call
mov
cld
add
and
dec
push
and
loope
add
sbb
rcrl
in
push
loop
orl
inc
xor
pushl
loop
sti
mov
stos
or
jo
adc
adc
or
cli
incl
push
xchg
cli
mov
fadd
cli
push
lcall
inc
loope
adcl
sbb
sti
loope
decl
xchg
cli
mov
sti
sub
cmp
add
mov
and
test
cld
sbb
sub
sbb
mov
add
jns
mov
add
add
add
scas
mov
lret
pop
cmpl
leave
gs
stc
andb
sbb
cltd
dec
out
sbb
jge
sbb
mov
pop
add
clc
dec
inc
push
push
sbb
lods
sbb
je
or
jae
sbb
or
pop
add
clc
push
data16
stc
push
out
rol
leave
mov
std
sbb
add
mov
out
clc
push
cmp
jne
add
mov
out
imul
cmpsl
add
pop
xor
push
lock
push
out
jmp
loopne
fistl
roll
mov
mov
pop
push
inc
out
filds
daa
add
pop
pop
in
call
fwait
adc
inc
add
push
add
xor
call
fistps
push
int
xchg
lods
add
dec
dec
call
sti
push
add
dec
pop
in
pop
jmp
inc
push
lret
inc
sub
std
aam
add
std
mov
sahf
mov
cli
push
add
mov
std
hlt
ret
sbb
add
push
and
or
fdiv
add
mov
stos
cld
jmp
repz
jb
mov
mulb
sub
xor
std
js
add
notl
add
negl
jmp
sub
jnp
lds
daa
jg
xchg
pop
sbb
in
jne
sub
add
add
add
add
sub
movsl
int
mov
sub
movsl
or
xchg
or
mov
xchg
in
aad
dec
je
out
jae
cltd
inc
mov
negb
jmp
sub
jnp
aam
cmp
sub
hlt
pop
sbb
sarb
aam
jnp
sbb
jns
adc
jnp
sbb
ja
adc
xor
in
jmp
aas
clc
xor
jb
ss
aam
mov
rcrb
push
imul
mov
adc
shlb
clc
loopne
inc
in
add
mov
in
addr16
pushf
add
enter
sbb
cmp
lock
jae
loopne
jae
loopne
add
push
out
adc
daa
add
dec
xor
jns
repnz
ja
cmp
out
mov
cmpsb
popf
mov
std
ret
clc
and
push
out
jno
sub
sti
push
jb
adc
jb
sbb
sbb
jbe
sbb
sbbl
mov
sub
add
and
int3
cmpsl
aam
js
inc
cwtl
js
pop
pusha
aas
jo
stos
lret
mov
pop
jg
pop
test
xor
shrb
pop
cli
push
add
add
sub
xor
adc
popl
aam
mov
xor
cli
push
add
jl
call
push
add
dec
dec
call
out
ljmp
sbb
call
stos
cld
jo
repnz
mov
nop
inc
add
lock
mov
and
push
lock
repz
jb
dec
sbb
pop
pmaddwd
push
mov
xchg
xchg
pop
adc
sbb
mov
je
and
test
and
stos
inc
and
mov
inc
push
ljmp
push
inc
adc
jo
pop
dec
and
push
adc
add
sbb
repz
call
sbb
cli
mov
popa
jo
and
add
add
data16
call
dec
and
cli
sbb
cli
sbb
adc
add
pop
jge
mov
enter
cmp
dec
stc
add
clc
xor
in
cltd
fdivr
scas
add
sbb
add
jl
aaa
push
jae
out
and
add
clc
push
pop
aam
add
out
scas
push
push
out
inc
push
add
mov
imul
mov
cmp
hlt
lds
mov
out
xorl
push
aaa
dec
pop
test
sub
dec
out
outsl
add
stc
insl
inc
dec
pusha
push
movsl
jno
scas
xchg
and
js
fidivrl
push
xor
fnstsw
movsl
out
or
mov
clc
and
inc
pop
add
xacquire
push
les
fisttps
out
sub
mov
nop
mov
out
lret
jg
ret
testl
sti
mov
mov
adc
pop
or
mov
inc
movsb
pop
jns
push
sti
push
add
adc
rcrl
fdivs
addb
add
mull
add
sti
lods
ja
call
cltd
ljmp
pop
and
fisttpll
std
cmp
out
push
sub
xchg
ret
fnsave
jae
je
and
xor
fld1
sti
push
xchg
or
lods
fsubr
sti
push
add
stos
jno
jne
sub
dec
pop
jno
incl
xchg
pop
xchg
sub
decb
insl
xchg
push
ljmp
mov
xchg
lret
call
int3
push
and
stc
dec
enter
mov
adcl
cmpl
dec
and
test
push
mov
adc
aas
and
pop
aaa
and
mov
into
jle
in
jl
test
adc
inc
xchg
inc
and
mov
call
popa
jo
clc
jg
adc
inc
add
jae
jns
fdivr
addr16
jae
lods
fsubl
cmpb
add
sbb
js
or
scas
push
jnp
lret
sub
inc
scas
add
sti
lret
mov
fsin
pop
mov
ret
test
xchg
fadds
stc
scas
add
clc
scas
xchg
je
xor
inc
aaa
cmp
cmp
test
adc
or
dec
aam
mov
push
mov
lea
stos
aaa
in
add
and
mov
inc
xchg
cmpb
sub
mov
push
jae
sbb
jp
xchg
pop
mov
xor
jo
push
hlt
repnz
out
add
test
lret
dec
cmp
push
jae
or
adc
xchg
mov
in
jecxz
cmpsl
lods
adc
aad
lret
jmp
sarl
ret
mov
sarb
or
out
and
loopne
mov
add
mov
test
add
scas
cli
push
mov
jg
jae
jno
and
scas
lea
add
inc
add
dec
fnstcw
test
subl
push
xlat
bound
mov
mov
icebp
push
jae
adc
ja
mov
pop
and
xchg
ret
in
mov
sti
add
dec
dec
push
jb
pop
mov
jle
push
lret
out
push
loop
xor
into
or
push
std
incl
scas
xchg
hlt
xor
in
ljmp
call
push
sub
mov
lret
call
jp
loope
and
call
dec
mov
inc
push
call
fidivl
ss
adc
movl
and
adc
pop
pop
std
adcl
dec
add
adc
mov
mov
or
mov
filds
pop
inc
or
hlt
scas
sub
mov
add
pop
dec
xchg
loopne
insl
fcoml
pusha
ds
outsl
cmp
pop
movsl
jl
cli
scas
add
push
mov
add
clc
scas
mov
jg
out
sub
add
scas
cmc
fadds
add
jae
mov
inc
mov
call
jl
sub
jne
xchg
das
and
add
cmp
push
mov
pop
push
add
ret
out
shll
inc
jle
add
jno
or
sub
clc
push
stc
aad
dec
add
push
iret
cmpsl
add
mov
sub
push
out
add
push
ret
sub
mov
add
cli
imul
xchg
test
ror
aad
enter
sahf
and
iret
aas
jb
pop
movsl
mov
ljmp
test
or
int
xor
rclb
fistpll
shll
test
call
mov
push
cld
dec
add
test
sti
push
mov
jg
push
sti
push
add
mov
rcrb
icebp
xchg
push
jmp
xor
movsl
dec
lock
out
gs
adc
repnz
xchg
inc
or
adc
mov
stos
bound
push
or
push
pop
dec
fsubl
sub
mov
fisubs
fmull
add
or
xlat
scas
data16
xchg
inc
and
inc
mov
incl
mov
cmc
lcall
int
lcall
mov
mov
nop
sti
cld
ficoml
sub
sti
xor
and
mov
cld
lcall
outsl
and
add
test
fwait
add
scas
add
cmpsb
add
dec
fcomps
imul
call
add
clc
dec
hlt
jb
scas
dec
push
sub
and
xchg
clc
inc
nop
insl
clc
scas
jl
or
mov
aam
add
clc
and
and
add
xor
mov
dec
std
test
jl
imull
xchg
aas
mov
jnp
mov
jae
sar
sbb
out
dec
call
jl
cmpsl
das
rcl
cmc
push
lea
fbld
lds
imul
pusha
push
adc
mov
jg
and
sub
mov
loopne
inc
aaa
mov
inc
fldl
xchg
mov
or
add
mov
mov
repz
lods
jns
dec
mov
mov
pushf
outsl
cltd
out
xchg
xor
add
add
add
add
add
addl
add
push
out
jae
stc
mov
and
mov
pop
out
dec
xchg
mov
inc
das
and
cmp
dec
sbb
and
mov
inc
push
cmp
add
js
or
inc
xchg
movsb
sar
jle
mov
push
hlt
push
add
add
scas
inc
lret
mov
jl
cld
shl
push
aas
loopne
call
jo
out
push
cwtl
cld
fstpt
cmp
mov
push
add
add
push
add
arpl
iret
lcall
jne
xchg
lret
adc
rcr
sti
mov
imul
cmpsb
bound
add
add
add
in
cltd
xchg
dec
sar
push
fsts
xor
mov
adc
xchg
mov
push
mov
call
aad
add
mov
test
call
mov
push
cmp
dec
push
cmp
lods
inc
popa
in
decl
clc
lods
add
jb
fs
pop
leave
out
mov
xchg
cmp
int
add
and
push
xor
cld
or
les
rcrl
xchg
rolb
xor
ja
inc
add
push
mov
mov
inc
add
mov
adc
int
jb
les
lds
out
jl
call
rolb
push
sub
pushf
mov
mov
cld
dec
jl
int
pop
sub
lret
add
add
add
add
xor
lret
in
jno
call
add
out
clc
dec
cmpsl
imulb
mov
cmp
insb
pop
ljmp
fsub
xchg
fildl
jns
add
cltd
or
jecxz
fidivrl
push
imul
ss
add
jp
mov
mov
daa
dec
hlt
pop
sbb
jnp
mov
cmp
sbb
insb
aas
adc
add
sti
push
push
jmp
adc
subl
xchg
test
xor
inc
cld
push
mov
mov
pushf
inc
or
clc
cwtl
jne
test
mov
bts
pop
imul
jmp
inc
jmp
sub
add
add
add
hlt
in
cld
fmul
es
jmp
cld
mov
and
sub
call
sldt
les
add
or
xchg
sbb
xor
push
inc
popa
out
push
lret
pop
xchg
sbb
into
stc
sub
add
adc
call
mov
sbb
pop
push
out
push
mov
mov
cmp
jb
xor
xchg
fstl
sbb
pop
adc
xchg
je
add
adc
call
sub
in
push
pop
add
xchg
pop
inc
cmp
lret
outsl
mov
adc
or
aas
clc
aad
mov
jl
hlt
aam
add
into
push
ljmp
lds
or
call
cmp
add
cld
lods
cld
sti
call
fdivs
ljmp
fs
jge
aaa
adc
ja
or
dec
call
push
xor
inc
cmp
ret
add
xor
jno
add
and
push
out
jnp
call
cld
outsl
xchg
sar
dec
jae
mov
sbb
xor
cmpsl
add
lcall
fdivl
out
outsb
sub
mov
fs
lcall
out
lock
sbb
push
out
stc
inc
mov
sub
lret
cmpsl
pushf
cmpsl
push
out
ja
adc
fwait
cmpsb
aaa
hlt
jmp
sub
adc
fwait
scas
mov
jl
jp
sahf
call
mov
inc
test
push
call
insb
cmp
add
cwtl
test
push
xchg
cld
push
xchg
jae
loope
push
es
popf
popa
movsl
sti
xchg
adc
cmp
xor
adc
fucomip
or
add
and
bound
mov
icebp
sti
push
mov
and
js
cld
sbb
lahf
shll
inc
add
and
sub
test
dec
push
mov
jle
nop
adc
iret
sub
lret
call
add
pop
xchg
fists
adc
mov
in
jbe
sbb
push
pop
and
jmp
jl
nop
push
mov
bnd
jge
jne
jl
add
mov
addl
add
add
add
add
aaa
push
add
jmp
xchg
mov
incb
pop
xchg
mov
push
mov
test
mov
add
clc
jge
int
pop
clc
incl
test
push
and
mov
jns
mov
clc
rorl
std
int
ja
call
into
xlat
aas
add
jb
les
sub
jle
xorl
inc
sbbb
xor
adc
std
lea
fsubs
jle
xor
stc
imul
fisttps
push
jge
sarb
mov
push
out
clc
in
addl
jmp
and
push
sub
cli
fcomip
sti
iret
or
out
add
fcmovu
add
jecxz
jo
cmp
stos
hlt
xchg
insb
add
push
addr16
es
movb
js
sbb
add
fwait
cmp
sahf
negb
fdivrp
decl
fs
xchg
jbe
clc
push
bound
adc
divb
iret
out
clc
push
add
lods
sbb
ds
pop
je
mov
jmp
add
add
add
and
mov
fidivs
inc
add
ret
and
jmp
ja
or
fldl
sub
out
fcoml
and
and
inc
jmp
fbstp
sub
dec
mov
push
js
jae
xor
std
mov
push
dec
lcall
subl
fdivrl
push
add
add
add
add
xchg
push
add
mov
and
out
fsts
mov
push
inc
mov
daa
add
scas
jg
cltd
sbb
adc
add
xor
test
lea
notb
cld
jmp
jns
popa
cmp
add
and
sti
xor
inc
add
adc
or
add
sar
ljmp
jb
sbb
cmp
loop
add
ficoml
cmp
xor
push
lds
push
daa
add
and
cmp
jae
std
and
mov
clc
jg
nop
jle
jmp
lock
mov
push
sub
aaa
mov
add
lock
add
add
mov
adc
mov
and
mov
cmpsl
adc
inc
add
out
imul
jp
mov
or
stos
aam
jno
jp
xor
push
sbb
add
mov
dec
adc
jg
mov
mov
sti
push
out
add
pop
jg
jb
cmpsl
jmp
idivl
mov
fucomip
jle
test
mov
inc
clc
jmp
xchg
jp
loope
jp
sbb
jp
lcall
cli
cltd
jp
es
mov
ljmp
and
jne
loope
cld
mov
pop
push
xchg
add
bound
mov
repnz
add
add
add
add
subps
jmp
cmpsb
push
inc
in
jg
pop
jl
or
sti
dec
adc
std
push
inc
in
xchg
pop
jmp
outsl
sahf
int
sub
push
xchg
add
dec
or
call
xchg
sahf
and
fstpt
in
sar
in
or
lods
jle
adc
xor
fisubrl
sub
jns
bound
sti
adc
add
add
add
ret
xor
daa
pop
test
or
sahf
dec
sbb
push
sar
pushf
rorb
mov
or
shl
incl
clc
sti
lcall
mov
xor
mov
lock
mov
movb
shrd
push
test
xchg
mov
mov
mov
shlb
ret
clc
in
add
sbb
clc
jge
call
test
fcoml
cmp
mov
test
mov
add
cmc
xchg
andb
notb
cld
in
aaa
xor
add
and
in
adc
ljmp
add
add
out
das
add
test
pushf
imul
add
jne
sub
dec
das
push
cld
rorl
xlat
out
lret
movsb
adcb
std
adc
cmp
cld
call
add
xchg
mov
in
xlat
adc
mov
xor
stos
xlat
ja
out
inc
add
jb
add
out
add
inc
sub
mov
adc
or
insl
inc
cmp
out
jno
mov
mov
cmp
pop
icebp
xchg
movsb
pop
jno
add
push
into
cld
fwait
decl
mov
fs
test
sub
xorl
sub
popa
jg
sti
push
test
jle
add
add
add
add
add
add
sbbb
add
cmp
out
shlb
fstpl
jmp
repz
sti
push
loop
jmp
mov
enter
mov
call
repz
sbb
popa
adc
xchg
sbb
pusha
stc
sbb
inc
add
mov
adc
and
loope
add
aas
xchg
add
xchg
inc
add
sub
sti
ss
add
add
mov
incl
mov
xlat
loopne
xchg
mov
fwait
and
push
xor
cvtps2pd
push
rdmsr
rorb
sti
lcall
stos
xor
mov
imul
inc
rol
and
push
sub
idiv
inc
cs
sbb
add
add
add
clc
add
popf
sub
aaa
ret
aad
out
stc
insl
test
aas
mov
decl
outsb
add
cs
sub
dec
xchg
ret
inc
mov
jnp
add
cld
pop
call
pop
lahf
mov
cli
xchg
jae
ret
inc
and
outsl
sub
out
cmp
cmc
cmp
or
or
xlat
adc
and
insl
sub
imul
insl
test
and
movsl
pop
cli
push
out
mov
dec
ss
pop
out
ja
xchg
xchg
mov
xchg
adc
js
adc
jns
push
add
xchg
mov
jo
push
mov
xor
scas
or
sub
jo
rorl
hlt
lea
adc
jb
call
sbbl
and
add
ficoms
bound
addl
stos
or
mov
jb
mov
ret
orb
insb
cmp
xor
add
cmp
sahf
cmp
aad
pop
dec
mov
into
out
mov
or
add
adc
sbb
sbb
add
cmp
out
aas
inc
add
mov
add
cmp
shr
rcll
loop
push
xchg
mov
arpl
add
jnp
mov
out
push
dec
xchg
jns
sub
push
mov
test
jns
push
mov
je
jp
aad
inc
sti
call
add
push
jo
stos
push
in
inc
adc
or
shrl
add
xchg
pop
adc
mov
mov
mov
pop
call
sbb
jne
mov
out
push
mov
js
stc
dec
push
push
clc
pop
mov
sub
sub
out
ss
push
clc
jge
sbb
pop
add
mov
iret
mov
push
adc
mov
xor
push
add
cmp
and
add
mov
testl
lcall
xchg
jge
sbb
cmpsl
inc
aas
test
or
data16
clc
insl
xchg
jne
adc
jae
call
std
sub
in
std
nop
adc
rolb
add
add
add
add
or
int
inc
add
inc
cmpsl
test
mov
call
cli
into
mov
or
jmp
mov
or
stos
pop
jle
jbe
mov
es
es
gs
add
aas
mov
nop
jae
jbe
insb
lret
orl
pop
pop
shl
add
out
jae
movsb
push
pop
xlat
out
dec
mov
pusha
lods
out
in
jbe
mov
sti
int
jb
xor
ja
push
aaa
lret
jb
add
sti
push
and
notb
or
mov
aas
add
mov
orb
fdivp
xor
sbb
mov
mov
test
and
jbe
or
add
nop
add
sbb
fiaddl
lds
test
jle
or
jno
minps
mov
fmuls
and
lods
push
jno
sbb
and
cmc
push
jo
popf
fnstenv
lods
add
daa
incl
dec
stos
push
jmp
and
gs
and
inc
rcll
and
xchg
rorb
jo
add
push
push
out
or
in
adc
add
ljmp
dec
xor
sbb
inc
gs
xchg
test
add
rorl
mov
movq
clc
test
cvtps2pi
pop
push
aaa
cmp
cld
insl
xor
cmp
adc
pop
and
cmp
std
add
clc
mov
lea
add
add
add
pop
pop
mov
or
mov
push
bound
mov
aaa
pop
mov
ret
mov
pop
das
or
inc
stc
inc
and
stc
inc
or
mov
hlt
sub
out
fld1
test
add
sti
xor
ds
clc
inc
adc
push
out
repnz
out
jb
or
in
xchg
pop
inc
mov
sub
add
push
outsl
inc
cli
push
jecxz
clc
push
inc
xchg
or
xor
nop
scas
mov
xor
xor
push
mov
fcomip
into
mov
in
dec
mov
in
test
aam
andl
jle
in
ljmp
xor
xchg
sbb
daa
fcompl
ret
data16
cmovno
jp
shlb
add
in
out
in
aad
outsl
dec
jo
cmp
jecxz
push
add
push
jg
jnp
inc
push
mov
lods
xchg
pop
jmp
mov
mov
loopne
jg
addr16
call
fs
ljmp
adc
clc
xchg
stc
fsubrp
adc
jmp
in
ret
push
adc
add
and
mov
loopne
xchg
daa
es
loopne
adc
es
add
in
stc
jmp
mov
jae
mov
dec
dec
mov
in
pop
inc
rorl
sti
push
popf
inc
pop
pop
push
adc
nop
adc
add
mov
add
xchg
stos
arpl
xchg
inc
adc
mov
notb
adc
push
add
es
push
mov
std
add
xlat
sti
cmp
popf
out
out
div
adc
pop
mov
mov
loope
call
cld
shrl
cmp
js
decl
sahf
xchg
jb
les
imul
clc
xchg
pop
mov
xchg
mov
hlt
add
icebp
inc
add
xchg
dec
nop
cwtl
xchg
cld
ja
rorl
sbb
mov
pop
xchg
xorb
cmp
pop
repnz
and
jae
or
jae
adc
jae
jns
jb
cmc
inc
or
jbe
call
cli
mov
add
xchg
pop
adc
xor
and
add
dec
mov
add
rcrb
lahf
roll
mov
push
cmpsb
push
cmpsl
pop
push
out
sub
adc
and
jno
jo
imul
out
clc
fnstsw
xor
xor
clc
push
jbe
sbb
add
mov
stos
in
add
inc
mov
rorb
pop
js
xor
sti
jns
int
verw
add
and
sub
imul
out
insb
cmp
call
fs
push
add
popa
fisubl
std
fwait
jmp
adc
paddb
cmp
lret
push
sti
pop
add
xor
cld
jmp
repz
test
sti
push
cmp
loope
mov
add
sbb
adc
add
push
inc
mov
das
mov
sub
mov
lahf
bnd
mov
shl
cmp
cmp
incb
mov
lods
add
rcll
push
push
test
fsubl
add
adc
or
cltd
mov
mov
frstor
fs
pop
cli
sarb
incl
jle
xchg
sarb
jge
pop
sbb
add
xor
jne
hlt
in
mov
xchg
cld
je
sbb
clc
jg
adcl
stos
clc
cld
test
add
loop
add
jl
adc
push
sbb
sub
stos
cmp
add
xor
int3
sti
mov
cld
es
std
add
sbb
xchg
in
sub
add
test
add
aaa
mov
call
lcall
mov
add
push
out
jle
cmp
xor
and
scas
push
out
imul
add
push
fs
aam
aas
int3
aaa
pop
out
aas
xor
xor
add
mov
jno
addr16
out
sub
xchg
jle
pop
jecxz
mov
jae
les
lahf
sahf
jp
imul
popf
sub
test
fildll
inc
ljmp
ret
into
adcb
xchg
jb
popa
push
imul
mov
push
popa
xchg
shll
pusha
mov
pushf
inc
cmp
add
add
add
jb
pop
push
repz
jb
imul
ja
add
outsl
lahf
xlat
add
pop
push
xor
adc
xor
cmp
jmp
cld
leave
out
mov
popf
aas
jmp
jg
sarb
jae
sub
loope
push
mov
cld
add
inc
in
xchg
inc
lock
add
add
add
add
sbb
mov
cld
call
pop
adc
out
in
call
lcall
xor
lahf
minsd
out
mov
test
ret
fimull
or
pop
sub
and
pop
pop
inc
loope
add
adc
mov
and
or
cld
xchg
fisttpll
mov
cmp
add
add
add
int3
bound
or
loopne
clc
adc
mov
jg
push
push
mov
hlt
test
and
add
sti
inc
add
jnp
mov
push
aas
inc
roll
mov
cmp
stos
push
cli
jg
mov
push
cltd
jae
dec
fwait
jae
bound
jae
mov
jae
stos
mov
jb
idiv
or
fmul
loop
shl
cmp
leave
repz
xor
cmp
sub
cmp
or
pop
call
or
cmp
add
push
test
xor
add
mov
jp
shl
enter
daa
jo
dec
aam
xchg
sbb
ret
xchg
mov
push
fadds
ret
xchg
xor
or
add
pop
jb
jp
fwait
mov
mov
and
lcall
push
out
xor
fs
push
addr16
cmpsl
outsl
out
in
xlat
sahf
xor
cwtl
out
nop
out
jmp
outsl
cld
jmp
xorl
jl
mov
cmpl
or
aam
mov
mov
lock
fnsave
cs
fildl
xor
int
jge
call
cmp
fs
jecxz
bound
and
sub
pop
cmp
in
xchg
pop
call
jbe
xchg
lret
inc
jmp
mov
lahf
in
and
outsb
cld
jmp
sti
push
push
popf
and
add
fsubr
pushl
inc
popa
xchg
rorb
add
add
add
add
and
jle
push
jle
js
and
add
push
adc
cmp
cmp
pop
inc
and
push
adc
in
add
into
inc
lds
mov
adc
xor
sbb
push
push
xchg
pop
push
adc
rcrl
das
leave
mov
add
mov
add
clc
jg
test
clc
jg
nop
aad
add
call
cmp
pop
inc
jg
push
das
stc
inc
push
out
inc
push
inc
add
xor
ja
sbb
sbb
add
inc
add
stc
andl
add
pop
fcompl
lods
add
int
mov
stc
mov
repnz
in
clc
or
call
dec
mov
and
testl
add
lods
add
and
dec
inc
add
jl
int3
pop
inc
inc
clc
xchg
mov
loopne
mov
mov
aad
jle
mov
test
shl
aam
sahf
call
out
inc
int3
and
cltd
cmpsb
mov
cmp
clc
push
out
mov
bound
popa
outsl
ds
lahf
fdivr
loopne
fsubr
shlb
in
add
and
push
xchg
jp
adc
out
cmp
loop
mov
call
xor
lcall
adc
jmp
jmp
mov
adc
in
je
or
das
xchg
clc
leave
pop
stos
sub
inc
ss
push
arpl
sub
adc
jmp
call
add
sbb
cmp
cld
insl
cmp
and
jle
adc
mov
jle
std
fs
imul
test
pop
sub
cwtl
cmp
add
inc
add
sbb
mov
mov
xor
cmp
adc
loope
loopne
fstl
sti
adc
sbb
jo
add
rorb
lea
inc
push
jmp
fsubs
xlat
decl
popa
jmp
in
decl
and
xor
sub
jmp
out
inc
and
es
cmp
add
and
adc
lcall
shlb
je
clc
mov
and
mov
dec
add
and
add
add
add
add
xlat
dec
cmp
xor
repnz
repnz
add
jns
call
loope
sub
add
mov
add
mov
ja
ret
test
jae
cwtl
imul
add
cmp
out
mov
fildl
pop
mov
inc
test
lock
or
cmpsl
add
jb
xlat
sub
add
fwait
or
es
adc
aas
clc
and
cwtl
scas
adc
dec
repnz
push
add
cmpsl
enter
sbb
out
inc
push
out
jns
andl
jg
test
dec
inc
push
mov
sub
jns
add
add
add
add
add
clc
loop
add
int
cltd
cmpsl
jecxz
addr16
cld
add
mov
sbb
jb
pop
mov
inc
add
adcl
inc
fdivrp
popa
testb
sub
push
jo
rclb
push
addr16
jmp
cli
push
andl
cli
popf
xor
jb
ss
pop
sub
inc
xchg
cltd
jmp
repz
inc
jmp
jmp
je
shll
std
cli
push
call
mov
pop
jo
add
pop
inc
loope
bnd
fisttps
add
or
je
fists
stos
mov
add
or
inc
sub
loopne
and
sbb
add
and
add
add
add
add
xchg
or
or
shrb
cli
dec
or
push
sbb
dec
popa
xchg
push
dec
sti
ja
xchg
mov
int
mov
cld
jmp
xchg
xor
decb
out
cld
pmullw
pushl
pop
pop
cmp
xlat
jne
clc
dec
jne
and
dec
jmp
adc
add
in
std
in
adc
clc
enter
les
dec
inc
pop
mov
das
add
pop
jl
or
sub
xorl
cmp
das
jmp
add
orl
sub
cmp
call
jle
aaa
clc
aas
ror
cmp
jge
testw
pop
adc
push
bound
add
dec
fcomp
push
out
cmc
lcall
adc
fisttps
out
outsb
jnp
mov
push
out
js
ret
ds
mov
pop
mov
add
jmp
jbe
enter
mov
push
into
call
loope
push
fs
add
rolb
lret
or
mov
push
add
push
fs
or
sbb
ret
mov
hlt
jb
jnp
cmp
pop
das
mov
out
and
jns
inc
int
push
ret
xchg
ljmp
in
jle
call
sti
push
push
shll
popf
xlat
call
out
adc
cld
xlat
jo
aaa
xor
add
call
out
sti
push
add
jnp
mov
and
subl
jbe
push
and
add
cwtl
dec
and
test
and
mov
out
lcall
and
push
mov
xchg
icebp
mov
in
ljmp
xchg
daa
loop
std
inc
mov
cmp
lret
sub
sbb
sbb
in
test
sbb
xor
adc
or
xor
jecxz
jae
lea
std
lcall
cmp
hlt
iret
and
sbb
sub
and
jb
das
cmc
push
mov
dec
sub
sbb
add
outsl
les
call
in
jp
push
mov
sbb
push
add
repnz
mov
and
in
and
hlt
mull
in
dec
xchg
in
and
jg
inc
out
inc
pop
dec
cmpb
sar
shll
and
mov
addl
mov
icebp
mov
mov
out
sub
ss
fisubrs
mov
cmp
mov
add
dec
add
adc
cli
sub
incl
insl
outsl
aam
xchg
daa
or
dec
mov
jmp
pop
out
inc
outsl
push
inc
repz
mov
ret
dec
leave
outsl
fcmovnbe
cmc
pop
clc
add
pop
ss
or
jl
jmp
sbb
lret
fnstsw
pop
add
ja
mov
bound
add
add
add
push
sbb
jmp
sets
mov
aam
jno
outsb
sub
bound
xor
jo
sbb
stos
notl
shlb
jo
add
pop
stc
xchg
sbb
sar
fnstcw
ret
mov
or
pushf
subb
vsubpd
lea
ret
mov
add
cld
bound
push
addl
push
cld
cmp
push
mov
das
mov
clc
sti
loope
into
jns
testl
push
fwait
cli
call
adc
add
pop
leave
loop
xchg
push
dec
xchg
dec
data16
adc
sbb
adc
lea
push
or
out
jg
push
mov
cld
push
xlat
dec
lea
push
inc
in
in
sbb
jmp
fdivr
decl
push
add
clc
mov
adc
jae,pn
lock
outsl
and
cmp
mov
pop
xor
les
push
jl
out
and
xor
ljmp
std
out
jge
movsl
jbe
iret
and
or
add
outsl
insl
add
daa
loop
add
js
imul
cmp
gs
jl
outsl
out
add
xor
jae
insb
add
out
aaa
dec
mov
iret
mov
rcll
sub
xor
jp
fcmovnu
mov
adcl
pushf
jp
ror
cmovle
add
and
movl
add
add
fildl
sti
cmp
jle
lret
movsb
es
push
ja
loope
pop
imul
dec
mov
xor
cli
out
pop
out
dec
nop
xor
jle
or
lods
iret
pop
out
mov
adc
mov
nop
xchg
int
into
fisubrs
nop
push
and
or
sbbl
dec
out
stos
pop
cld
cmp
int
add
adc
jmp
sub
jmp
in
roll
cmp
mov
sti
xchg
mov
bound
das
inc
or
pop
adc
mov
outsl
cmp
imul
sbb
xchg
cld
js,pn
jae
jle
and
nop/reserved
insb
dec
out
fstpl
add
or
add
xchg
stc
sub
mov
xchg
sti
call
into
sti
jmp
out
xchg
or
xchg
dec
jge
jmp
xchg
sti
fcmove
in
sti
adc
pop
pop
and
pop
fidivrl
in
jno
add
add
sbb
cmc
ss
lods
mov
add
and
minps
add
add
add
add
dec
xchg
push
lea
dec
xchg
clc
pop
mov
aam
xor
jecxz
div
outsb
pop
test
add
and
adc
clc
cmp
loopne
sub
std
or
adc
jmp
imul
add
clc
outsl
rorl
sub
sbb
aam
aaa
mov
sbb
stc
outsl
xchg
dec
rolb
add
add
add
xchg
push
push
mov
in
pop
jae
leave
out
and
sbb
out
sbb
jae
sbb
bound
jl
lods
jmp
or
clc
mov
insb
stc
inc
out
addr16
mov
add
rclb
jnp
in
inc
push
out
loop
push
add
push
insb
sbb
mov
mov
shll
idivl
cmp
pop
out
out
out
mov
ret
jno
jle
jg
insl
jg
loop
ljmp
sti
lock
xchg
mov
dec
xor
mov
cld
xlat
xor
adc
and
gs
outsb
out
aam
icebp
ret
shlb
mov
jb
dec
pop
jmp
jae
add
and
sti
in
or
pop
xor
aam
mov
cld
mull
sub
cld
xor
aaa
pop
dec
ds
lret
sub
dec
in
adc
jmp
mov
cmp
xchg
hlt
push
test
pop
adc
jmp
push
add
add
xlat
sti
andnps
sti
decl
mov
mov
lret
call
add
jno
pop
pop
std
mov
or
jle
dec
lea
daa
call
or
call
fcmovbe
in
imul
and
pop
enter
and
sub
add
xchg
call
push
sti
jae
jmp
fsubr
pop
mov
adc
incl
adc
push
je
clc
dec
out
jge
cld
dec
jne
sbb
jae
imul
push
push
inc
clc
ret
adc
fs
aas
test
mov
mov
adc
ret
sbb
gs
aas
jg
aam
jno
sbb
jno
adc
jno
sbb
rorb
sbb
pop
sti
cmp
sbb
lods
clc
aas
add
add
add
add
fdivrs
sti
add
in
out
adc
mov
testb
sub
mov
imul
cmp
add
iret
nop
lret
push
pop
push
cmp
sub
cmp
jb
jp
jb
orb
sbb
pop
adcl
jb
loop
je
popa
enter
fldl
and
sbb
cltd
mov
ljmp
cs
xor
sub
lds
add
sti
push
or
mov
cwtl
mov
inc
or
add
pop
pop
out
push
push
cld
sti
cmp
pop
mov
jmp
imull
mov
out
add
mov
lret
push
push
cld
jo
clc
sbb
add
call
pop
adcl
cld
out
fdiv
and
mov
xchg
mov
call
sti
push
mov
std
decb
push
movsb
push
and
lock
call
mov
jg
push
push
test
sti
pop
add
mov
std
xor
jno
or
xchg
jle
movsl
lcall
imulb
jl
push
pop
jg
rorl
aam
and
or
mov
pop
add
jmp
sarl
ja
xchg
mov
roll
add
enter
clc
inc
clc
or
jge
add
mov
inc
xorl
sbb
sbb
lds
and
out
add
cld
scas
outsl
jne
xlat
fs
jle
adc
pop
mov
lds
add
insl
mov
adc
ret
jge
outsl
cld
jg
mov
test
imul
jae
daa
sbb
divl
subl
add
add
add
sbb
add
test
je
adc
ds
stc
push
push
repz
rcl
push
fstpt
cmp
je
sbb
dec
shl
push
push
cmpl
xor
stos
sub
add
mov
arpl
outsb
or
stc
ret
scas
adc
add
push
xchg
test
lret
xchg
add
add
xchg
jp
lcall
enter
jb
add
push
cmp
mov
dec
push
stc
mov
dec
add
and
sahf
push
xchg
and
xor
add
push
inc
xchg
push
mov
pop
daa
push
jae
pop
insb
push
les
pop
jmp
push
js
int
cmpsl
hlt
pop
inc
xchg
inc
call
add
fisubl
cmpsl
mov
push
retw
dec
jne
roll
jnp
mov
cmp
out
shll
cmc
dec
popf
push
add
add
and
jo
adc
test
decb
xor
repnz
push
mov
fsubrs
mov
pop
jns
adc
adc
dec
and
jmp
lahf
add
xchg
scas
popa
pop
pop
push
filds
in
push
mov
mov
push
addr16
dec
and
imul
sbb
mov
call
mov
mov
call
rolb
sbb
xor
insb
cld
push
les
in
les
movsb
and
xchg
adc
cmp
adc
stc
cmp
cmp
sti
xchg
aam
jge
cld
mov
sub
adcl
out
jns
sbb
loop
pushf
adc
call
inc
add
ja
sbb
add
clc
push
sub
enter
cmp
add
fsubl
clc
aas
add
add
loop
jl
test
jg
loop
mov
repnz
jp
out
add
fwait
and
test
dec
inc
mov
mov
shl
or
out
mov
repnz
shll
ret
and
push
mov
cli
pop
rcr
cmpsb
rcrb
in
add
push
dec
xchg
mov
out
lahf
ret
enter
repz
jo
cmpsb
jmp
out
cmp
cli
jle
repz
jle
xrelease
repz
sub
add
add
add
adc
inc
lcall
out
xchg
out
mov
aas
or
stc
adc
stc
pop
bound
stc
pop
add
xchg
mov
pusha
inc
stc
pop
jo
stc
sbb
lret
sbb
imul
dec
pop
cmc
push
sahf
iret
bound
inc
outsb
pop
out
push
pop
add
daa
inc
loop
cld
inc
add
pop
lahf
mov
loop
xor
dec
xorb
mov
jae
out
push
bound
and
je
hlt
push
jne
push
andl
mov
incl
pop
add
xchg
out
sub
mov
incb
ja
add
xchg
out
mov
inc
cmpsb
incb
ja
add
xchg
out
add
dec
mov
ucomiss
cmp
pop
int
jg
ror
ret
rclb
pop
and
shrb
test
imul
leave
lea
add
jo
push
subl
sub
sub
cmp
lret
or
jge
jmp
fiadds
sub
mov
or
add
or
addl
jnp
mul
push
or
jbe
add
repz
mov
repz
out
sub
xor
pop
cld
xorl
jnp
jns
lods
add
aas
rcll
mov
out
pop
add
jne
shl
mov
cli
addr16
push
scas
adc
pop
xchg
adc
into
fistl
out
mov
test
dec
cmc
add
add
add
add
add
fadds
clc
popf
pop
dec
out
mov
push
push
dec
out
jp
lds
push
mov
icebp
xor
je
lds
scas
fwait
sub
jnp
rcr
ret
pop
xchg
mov
add
dec
out
dec
js
ljmp
mov
sbb
mov
sbb
jmp
add
dec
aad
cmp
mov
mov
pop
and
in
sbb
xchg
jnp
sti
push
subl
imull
dec
dec
adc
or
jmp
cli
dec
cld
jmp
xor
sti
addl
cmp
ja
sti
push
call
jb
loope
call
adc
cld
aas
aaa
dec
cld
jmp
mov
dec
cld
jmp
add
add
add
jae
lret
dec
adc
dec
in
call
adc
rolb
or
mov
adc
test
aaa
add
es
into
pop
jmp
fs
adc
in
jge
push
push
xchg
in
call
aad
jno
repz
mov
add
sub
push
in
pop
mov
cmp
pop
rolb
and
push
inc
and
cld
mov
enter
insb
cld
in
adc
ror
hlt
test
loopne
mov
in
icebp
adc
jge
stc
cmp
adc
mov
cwtl
dec
sar
mov
decb
xor
add
clc
inc
or
or
jno
enter
add
add
add
add
repz
sub
push
adc
jmp
pop
into
sbb
cmpb
mov
or
lret
mov
jae
mov
repz
cmp
sbb
pop
outsl
imul
xchg
popa
mov
outsb
int
add
mov
in
dec
dec
push
subl
sbb
add
sub
add
jle
add
push
outsl
shr
shrb
out
clc
xchg
jae
insl
cltd
mov
push
addr16
cmp
push
out
jo
xlat
outsb
jecxz
push
subl
out
js
movsb
fdivr
jle
add
push
pop
testl
add
js
fadds
imul
dec
inc
in
leave
add
push
imulb
add
add
add
lds
jbe
add
mov
xchg
int
xchg
mov
pop
push
pop
jmp
mul
mov
into
add
add
lds
push
sbb
xor
inc
cld
jmp
ja
adc
jmp
jb
nop
inc
test
nop
je
mov
jmp
dec
pushf
jp
lcall
add
dec
adc
mov
loopne
add
int3
test
inc
shll
cld
dec
and
inc
loope
mov
lea
add
sarl
mov
sbb
jmp
sbb
call
adc
je
mov
lret
mov
xchg
popa
sbb
xchg
std
out
or
add
out
or
in
out
or
leave
sar
fisttpll
add
xchg
call
jle
xchg
add
push
dec
leave
push
stos
or
add
inc
add
cmp
adc
es
add
or
push
fldcw
mov
add
and
mov
xchg
add
mov
add
add
add
sar
insl
aam
addl
mov
add
jl
add
clc
mov
pop
cld
je
cmpsl
adc
add
inc
sti
pop
in
out
aas
adc
pop
in
xchg
ret
jnp
add
cs
iret
inc
arpl
clc
out
in
cli
fisttps
pop
pop
out
add
stos
mov
sti
testb
push
mov
mov
bound
jmp
nop
ret
sbb
lret
int
jmp
cmp
insb
mov
out
clc
and
mov
sub
call
sbb
rcrb
sti
jmp
loopne
inc
jmp
filds
insb
cmp
and
jl
add
inc
and
add
add
add
and
mov
daa
inc
jmp
pop
insb
cld
mov
dec
push
xor
outsb
jmp
sar
add
ss
xorb
out
push
addr16
call
jae
cld
jle
mov
and
pop
imul
std
sub
fadds
xor
inc
and
jns
inc
add
fadds
sbb
aam
adc
inc
and
clc
aam
loope
inc
and
ss
shrl
iret
sub
ljmp
lret
call
pop
aad
adc
shl
xchg
cmp
sti
mov
stos
dec
or
mov
scas
pop
ret
inc
call
add
push
xchg
stos
xchg
stos
pop
fstps
test
dec
cltd
mov
rclb
add
lret
sub
cmp
add
dec
add
pop
or
sub
inc
aaa
mov
lea
dec
jne
sub
cmpb
add
mov
out
arpl
call
lea
popf
lea
in
arpl
jns
jp
pop
inc
ss
jns
push
jg
shlb
mov
jge
pop
out
xchg
pop
cld
je
xlat
and
and
add
push
pop
cli
jo
rolb
cs
xchg
and
imul
push
mov
rolb
clc
push
fnstcw
jb
xchg
imul
pop
mov
out
clc
mov
out
jne
fidivrs
daa
lret
jo
sub
rorl
out
add
xchg
push
andb
pushf
mov
ret
xor
arpl
or
arpl
pop
loop
add
cltd
jnp
addr16
js
aad
sub
xchg
inc
mov
into
dec
cmp
arpl
roll
fs
cld
mov
cmp
divb
adc
adcl
add
add
jg
or
outsl
pop
jae
jo
jno
xchg
pop
insb
cmp
xor
call
jno
sub
push
push
jb
mov
add
cmp
push
mov
push
inc
cld
push
insl
rolb
pusha
cmp
mov
out
dec
in
push
add
popa
mov
call
je
mov
orb
add
add
add
add
cld
dec
push
inc
insb
adc
adc
cmp
xchg
hlt
adc
imulb
leave
decl
inc
fadds
popf
push
into
jns
sahf
add
xchg
mov
rcrb
sarb
add
adc
out
out
test
popa
dec
jno
or
pop
pop
clc
mov
int
adcb
add
add
mov
dec
push
xorl
jae
sub
les
and
mov
push
push
cmpl
jl
clc
sub
cld
lds
or
mov
xchg
cld
out
test
or
pop
test
sub
sbb
sub
nop
mov
in
jae
pop
jl
and
test
popa
mov
aam
push
test
inc
xchg
or
call
cmp
push
mov
pop
popa
cmc
arpl
repz
es
pop
enter
or
adc
repz
mov
mov
testb
dec
imul
repz
cmp
lret
push
adc
add
add
add
mov
fsubrl
inc
jecxz
addr16
dec
test
lea
imul
incl
push
std
jl,pn
sbbb
xchg
and
sti
push
mov
call
gs
push
add
and
jb
call
and
push
cmp
mov
mov
xor
xchg
mov
call
add
add
add
lea
or
in
cmc
push
test
sti
push
mov
je
cld
fs
out
rcl
mov
push
imul
push
js
or
cmp
add
lods
ret
andl
jo
fisubs
adc
outsw
fcmovbe
in
scas
loopne
mov
aam
and
add
std
jo
aad
or
add
add
aad
add
int3
push
and
cmp
hlt
test
dec
sbb
in
xorps
sub
mov
push
das
pop
loopne
iret
mov
in
fcoms
test
notl
call
pop
js
adc
inc
dec
push
stos
fs
sub
jl
and
xchg
pop
push
mov
call
mov
add
lds
or
cld
sbbl
xlat
push
js
add
mov
jb
mov
call
jae
imul
sub
cmp
loop
insb
lods
mov
adc
sub
add
dec
mov
and
mov
and
inc
jg
stc
sub
add
xorl
or
push
jo
arpl
add
lret
add
push
pop
enter
rcr
push
dec
nop
adc
out
dec
pop
arpl
xchg
out
xor
repnz
add
ret
push
jp
pop
ret
in
out
dec
fcoms
repnz
mov
je
clc
push
arpl
hlt
xchg
cmc
add
push
jb
fisttpl
fs
fcomi
mov
xchg
aaa
ljmp
add
add
pushf
imul
xchg
in
jg
pop
add
sti
rolb
fsubl
jb
cmp
xor
jmp
jle
and
dec
in
mov
fs
xor
gs
push
add
add
xor
lods
test
cwtl
popa
stos
mov
shrl
sub
stos
cltd
mov
call
add
dec
push
cmp
add
mov
jbe
gs
cld
jmp
iret
and
sbb
in
add
out
adc
cli
lcall
jo
push
push
and
addl
gs
das
push
rcll
rcrb
mov
jb
jmp
sbb
jmp
dec
mov
imull
add
add
add
divb
add
xchg
and
sbb
push
sbb
add
idiv
ss
call
lcall
mov
or
out
jl
clc
cmp
lret
add
cmp
jl
sub
mov
jg
jo
mov
orl
stc
mov
sub
add
add
add
sub
xchg
mov
fiadds
jno
aaa
mov
hlt
adc
jge
jge
aad
addl
hlt
mov
in
repz
enter
movsl
xor
hlt
adc
push
pop
repz
imul
insl
dec
mov
mov
out
add
sarl
mov
push
xor
rcll
jp
add
mov
repz
pop
jg
xor
rcll
xchg
loop
mov
das
adc
xchg
xchg
lret
pop
xchg
push
mov
test
push
jecxz
out
mov
jo
pop
addr16
clc
lcall
jo
repnz
stos
inc
jno
divl
pop
hlt
pop
cwtl
lret
push
sbb
sahf
jl
inc
into
jb
push
add
add
enter
ds
lret
mov
pop
sub
mov
sub
jb
jbe
cld
fmull
inc
push
dec
movsl
pop
inc
repz
inc
sub
out
icebp
push
add
xor
jmp
movl
cld
lcall
cld
jmp
add
add
add
cld
hlt
fbld
inc
jmp
sti
push
jne
ficoml
sti
push
loop
push
rcrl
mov
xor
adc
loopne
cld
test
jecxz
decl
push
popa
dec
loop
rol
dec
lea
stc
decl
lret
adc
call
imul
std
into
loope
aas
into
loope
lea
in
loop
decl
lods
aam
ss
decl
repnz
add
push
push
data16
aad
ss
add
out
out
jnp
add
xlat
add
inc
pop
add
out
mov
inc
pop
sbb
mov
mov
imul
add
push
mul
xchg
in
mov
sbb
outsl
jns
add
cmp
jg
aam
mov
lods
sub
add
jae
xchg
add
dec
sub
sbb
dec
cld
jl
xlat
adc
and
ljmp
pop
daa
add
pop
ljmp
popa
cmp
shr
add
iret
sbb
mov
push
out
jbe
push
push
clc
push
cmp
add
add
add
arpl
clc
fwait
js
out
call
fyl2xp1
push
out
jae
push
clc
push
adc
popl
sbb
cmp
ficomps
sbb
add
imul
mov
clc
push
mov
jnp
das
out
add
mov
out
jecxz
call
mov
pushf
dec
add
add
cmp
sbb
adc
or
ljmp
mov
inc
add
inc
add
and
fisubl
mov
sbb
and
push
inc
cmpsl
lds
mov
add
call
cmp
mov
mov
ja
outsl
jmp
push
push
es
adc
aaa
rcrb
mov
mov
rclb
inc
and
stc
bound
int
arpl
push
pop
jnp
add
inc
xor
lea
cmpsl
and
add
loope
call
test
sbb
push
leave
cltd
cld
call
push
cld
jmp
std
mov
sti
adc
fcmovb
jg
push
dec
sbb
inc
clc
aas
test
test
stos
mov
sbb
std
pop
add
js
xor
call
aam
mov
lods
in
adc
push
sar
jg
or
sti
pop
adc
les
add
add
fildll
in
cmp
scas
cld
in
idivb
add
cmpsl
mov
jb
lret
je
xor
add
nop
jmp
aaa
out
inc
add
cmpb
xchg
xor
in
stc
cmp
lret
andl
jnp
mov
test
xchg
sub
std
push
out
sti
push
push
add
sarl
fwait
add
out
stos
repnz
fwait
add
add
push
out
outsl
push
out
sub
inc
outsl
fstl
lock
lret
pop
sbbb
call
mov
add
repnz
fs
sub
rcll
repz
dec
lock
sbb
adc
cltd
mov
jb
les
out
and
pop
call
mov
mov
xchg
xchg
and
std
push
add
ja
sti
push
push
fimuls
push
adc
cld
popf
mov
es
mov
mov
and
sub
push
insb
lahf
imulb
cmp
and
scas
push
push
xchg
cmpsb
call
inc
sub
cs
and
imul
jmp
adc
mov
mov
add
add
add
aad
std
call
andb
add
xchg
mov
cld
jmp
adc
and
mov
stos
testl
xchg
outsb
and
cs
and
sub
jmp
scas
nop
and
adc
add
test
adc
cld
call
test
xchg
cld
call
dec
ljmp
dec
cld
jmp
movsl
add
add
push
call
cld
je
hlt
orl
add
sbb
enter
or
cmpsl
and
or
pop
or
decl
jns
sbb
jns
repz
and
mov
or
cmc
test
add
mov
cmp
aas
mov
ja,pt
cli
mov
movsl
out
jns
add
int3
cmp
lret
or
inc
adc
dec
sar
inc
call
cmp
and
addr16
rolb
and
sbb
mov
add
push
dec
xchg
sti
adc
sarb
sahf
idivb
sub
sbb
push
lock
add
add
lret
xchg
jp
or
fwait
ret
push
out
jb
fldl
jp
pop
adc
lods
push
inc
cld
cltd
bound
adcb
add
lods
out
pop
push
daa
add
push
in
jle
sub
cmp
pop
out
clc
cmp
cmp
cmp
pop
push
pop
mov
adc
cli
popf
clc
andl
cld
jmp
hlt
push
add
call
les
add
push
push
jb
xchg
shll
or
jmp
or
cmp
pop
push
mov
daa
std
aam
or
push
push
std
test
mov
xchg
clc
mov
sbb
add
mov
pop
bound
sbb
jno
sub
arpl
sbb
xor
adc
push
cmp
data16
adc
sti
adc
or
sti
imul
xor
divb
adc
and
test
loope
pop
ret
movsb
pop
add
adc
xor
ss
adc
sbb
xor
fdivs
mov
dec
cld
dec
lds
inc
clc
das
inc
xorb
add
add
add
add
inc
xor
and
cmp
inc
push
inc
test
inc
jae
mov
jae
test
cld
ja
xchg
in
mov
xchg
sub
pop
cld
inc
pop
mov
aam
cmpsl
mov
push
out
sbb
cld
sbbl
cmc
movsb
cmp
push
into
xor
dec
push
lock
ss
fadd
stos
mov
add
add
add
test
push
out
je
cld
je
cmpsl
mov
aam
add
or
ret
mov
mov
dec
nop
sbb
inc
call
mov
mov
test
out
repz
shl
push
and
out
and
out
int
sbb
loop
xchg
and
loop
int
sub
clc
and
and
fildll
mov
cmp
sbb
hlt
or
sbb
pop
add
adc
test
div
push
cld
and
mov
and
pop
dec
adc
cld
jbe
cld
mov
movsb
call
enter
sti
adc
and
sti
mov
pop
les
aas
and
pop
inc
adc
jl
jmp
aas
and
mov
das
mov
mov
cmp
out
adc
hlt
int
and
into
je
jmp
push
dec
cld
decl
fmull
mov
in
mov
cltd
jmp
call
aas
mov
cmp
and
or
adc
rcrl
xchg
repnz
xlat
jg
mov
das
rolb
inc
pop
xlat
adc
push
push
cld
call
xchg
adc
pop
lahf
aas
sbb
sub
out
push
data16
jo
pushf
push
adc
add
add
stc
popf
stc
lcall
mov
inc
clc
sub
inc
push
lock
mov
ret
pop
aas
add
fistpll
das
add
in
sbb
sub
in
mov
cmp
pusha
xchg
add
clc
lods
inc
pop
push
cmpsl
rcrb
cld
mov
into
mov
aas
cld
ja
inc
jae
xor
add
pop
imul
add
test
rclb
mov
pop
jne
enter
enter
add
add
cmp
pushl
mov
loop
scas
leave
popa
xor
and
push
or
out
movsl
movsl
jp
cmp
jo
into
mov
das
ret
and
jp
adc
call
fsubl
sub
add
inc
mov
ljmp
fptan
rorb
pusha
adc
rcll
xlat
out
xor
mov
push
mov
cmp
xor
mov
adc
pop
hlt
lcall
push
adc
ljmp
cld
jmp
or
push
fistpl
insl
pop
and
jmp
mov
daa
inc
sahf
cwtl
inc
notl
das
cltd
jmp
mov
and
mov
pop
xchg
mov
insb
mov
rorl
jmp
push
repz
sti
xchg
jl
cld
mov
jmp
inc
xchg
pop
and
cmc
jmp
add
add
cld
dec
nop
inc
and
inc
data16
add
adc
add
repnz
mov
std
sub
lds
mov
dec
in
insb
mov
inc
sti
push
add
arpl
jne
dec
and
clc
jmp
xchg
jae
dec
fistl
rolb
cltd
ja
popa
sbb
add
jae
aam
and
fistl
push
dec
pop
cld
test
push
push
das
cmpsb
push
test
enter
jl
add
enter
push
push
cmp
wrmsr
sar
mov
cmp
lods
sbb
jl
mov
add
add
add
jnp
add
mov
pop
lock
push
loop
mov
and
dec
mov
jmp
mov
mov
adc
je
push
xchg
lods
cmp
pop
or
pop
loop
repnz
int
lea
inc
rcll
cmp
cmp
idivl
or
cltd
sbb
les
push
add
jl
add
vmovupd
add
mov
int3
add
loop
call
repz
or
lahf
loopne
cli
dec
popa
pop
adc
jo
mov
sbb
mov
roll
adc
fwait
sub
nop
sub
mov
push
cmp
sub
add
sbb
rolb
pop
add
sbb
call
cmp
jb
mov
add
loop
and
pop
fdivr
in
cmp
sub
out
fs
aas
xor
int3
sti
mov
pop
xor
mov
and
jmp
jecxz
jl
icebp
xchg
mov
inc
push
nop
aas
jmp
add
add
add
cld
jb
cwtl
cmc
fdivp
cs
xor
adcb
mov
nop
sahf
fdivrp
test
insb
add
jmp
xlat
pop
ret
mov
in
add
push
mov
mov
dec
push
jnp
dec
push
ret
or
fists
pop
icebp
push
cld
test
jecxz
push
fldl
push
xlat
insb
add
cmp
add
aam
push
push
or
push
add
jno
push
imul
inc
xchg
cltd
mov
or
rorb
in
add
cmp
pop
je
cli
pushf
add
int
aaa
adc
pop
sar
mov
pop
inc
out
adc
int
movsb
and
and
cli
das
add
add
dec
lret
push
rclb
or
mov
dec
push
pop
or
add
call
repz
or
cmpsb
inc
pop
jnp
mov
cmpsl
movsl
nop
xor
lahf
inc
insb
adc
xor
cld
sub
adc
fiaddl
xchg
jle
sbb
ret
push
mov
mov
and
add
sbb
add
xchg
jne
xchg
cmpl
mov
pop
sar
pop
sarl
in
pusha
add
add
push
pop
mov
mov
sbb
addr16
out
adc
inc
adc
mov
loopne
jno
mov
pop
push
cmp
fsubrs
sub
fiadds
add
test
sbb
out
jae
mov
or
cmp
test
pop
addb
inc
xor
xchg
stc
loope
xor
movsb
jmp
pop
mov
pop
movsl
push
cld
mov
cmp
cld
je
hlt
pop
xchg
jmp
mov
inc
sbb
testb
jo
mov
clc
mov
push
aad
add
js
aas
jmp
lock
insb
dec
add
push
mov
insl
add
sub
push
inc
mov
push
ljmp
pop
mov
mov
add
push
and
dec
xchg
push
sbb
or
hlt
incl
mov
pop
rcll
add
out
jge
mov
aam
mov
dec
xor
aas
adc
je
sahf
mov
mov
cld
mov
sbb
jge
mov
insb
add
adc
jb
jae
pop
popf
popf
xor
or
call
and
repz
loop
cld
outsl
jns
out
addr16
mov
dec
mov
std
jmp
inc
mov
cld
jnp
sub
jl
sub
lods
xorl
add
add
add
test
mov
scas
jge
xor
mov
mov
inc
and
push
loopne
cltd
inc
jb
not
push
or
adc
xor
jae
stc
mov
sbb
stc
fs
and
inc
adc
pop
adc
add
test
sub
arpl
incb
adc
daa
cltd
push
les
or
push
and
sti
mov
mov
pop
pop
push
addl
lret
negb
xchg
cld
mov
pop
add
cld
mov
pop
mov
imul
push
add
ret
adc
mov
lret
cwtl
repnz
add
jle
mov
push
push
outsb
loopne
push
test
jae
push
push
add
sti
fdivl
inc
jmp
jg
dec
mov
icebp
pusha
je
cld
jmp
sti
insb
push
mov
sti
push
test
dec
sub
mov
jp
cld
insb
cmp
add
add
or
add
aaa
dec
add
and
call
or
pop
sbb
out
pop
sub
pushf
sti
call
outsb
popl
popa
xchg
inc
and
das
mov
scas
inc
jg
xchg
add
lea
sti
add
xor
sbb
inc
xor
pop
addl
inc
xor
adc
lds
jmp
push
call
cld
jae
lret
test
jle
or
add
jp
idivl
mov
mov
jne
daa
cli
lahf
mov
add
mov
xor
aam
cmp
divb
jecxz
leave
lret
loop
popf
movsl
test
les
hlt
cld
test
cmpb
add
add
pop
andl
das
add
jne
jecxz
leave
xchg
aaa
mov
stos
xor
cmpb
jne
clc
push
outsb
enter
fcomps
aaa
pop
cld
dec
jge
lcall
jmp
mov
jmp
movntq
jecxz
xchg
and
xchg
rorl
jnp
mov
or
add
add
add
add
sub
pop
popf
xor
ds
in
cmp
adc
jp
mov
lock
push
inc
add
lcall
sarl
imul
dec
hlt
push
xchg
adc
cmc
out
pop
jg
mov
xchg
jb
xor
jb
xor
negb
push
cmpsb
lret
cmp
add
add
add
nop
and
bound
sbb
fistps
jb
arpl
into
andl
adc
adc
notl
cld
push
push
test
rcrb
push
inc
sub
mov
es
xchg
out
or
mov
sbb
mov
and
outsb
inc
je
bound
inc
mov
dec
pop
enter
push
xchg
dec
push
roll
add
inc
dec
sbb
sbb
pop
push
push
data16
pop
cmp
push
jecxz
xchg
mov
sub
adc
push
mov
pop
adc
inc
dec
inc
fcompl
rcl
pop
adc
adc
pop
pop
movsb
fiadds
add
xorl
adc
cwtl
adc
sub
jl
decl
jl
add
clc
int3
sub
cmpl
cld
dec
cld
cmpb
sub
daa
push
push
xor
cmpl
mov
aas
clc
cmpsl
xor
jge
mov
jge
xor
jae
std
jg
iret
mov
ja
aad
cmp
clc
xor
xchg
add
sub
stc
jmp
and
cld
xor
cld
enter
mov
or
mov
mov
or
pop
mov
adc
clc
push
ljmp
or
push
add
fs
jle
add
add
imul
mov
stos
out
add
mov
jb
or
subl
or
jmp
sbb
aad
sub
add
lea
test
sti
push
sbb
sti
mov
pop
sahf
fistl
out
data16
and
cmc
push
add
and
or
jmp
inc
cmp
add
add
add
push
push
mov
cmp
int3
sub
add
mov
add
mov
call
bound
lahf
or
adc
notb
add
xchg
adc
inc
bound
lret
inc
fisttpl
inc
and
jecxz
mov
js
add
out
push
adc
rolb
add
pop
adc
fcompl
sub
pushf
sti
call
das
or
loope
xchg
mov
rcll
add
shrb
pop
test
pop
add
adc
mov
sahf
int3
les
pop
jle
mov
rolb
mov
sete
incl
pop
test
push
stc
inc
cmp
and
adc
iret
cld
out
inc
or
add
add
or
cmpsb
clc
std
test
fdivrl
out
das
sub
jae
sbb
or
mov
sbb
out
stc
enter
jg
js
mov
pop
add
clc
sub
push
daa
xchg
pop
mov
add
jge
add
mov
mov
jp
pushl
add
jl
adc
hlt
cmc
into
sub
adc
sub
mov
xchg
add
add
jl
sarb
aad
ja
insb
clc
stc
push
jmp
ja
xor
jl
fs
inc
hlt
xchg
adc
clc
push
mov
adcb
andl
jno
aaa
aam
and
insb
je
or
in
inc
xor
idivb
call
loopne
jle
add
push
outsb
cld
add
lds
or
rcll
pop
out
jmp
xchg
test
xchg
daa
push
add
popf
xchg
or
dec
shr
in
or
in
dec
or
sti
push
xchg
mov
and
std
push
add
pop
pop
sti
mov
pop
sahf
fistl
jmp
data16
jo
and
cmc
push
add
push
or
add
add
add
push
fs
pop
mov
xorb
test
xchg
test
ja
inc
jmp
cld
std
add
xchg
inc
jmp
push
xchg
fmuls
sbb
dec
mov
push
dec
push
in
pop
push
xchg
adc
orl
add
lcall
mov
sub
icebp
add
xor
leave
xchg
xor
setge
inc
mov
incl
mov
aam
sti
lcall
pop
adc
adc
stos
cmc
add
push
push
jmp
or
mov
jecxz
push
mov
pop
nop
icebp
stos
cmp
fldt
xchg
sahf
add
clc
push
cmp
add
add
add
std
js
adc
jb
fsub
iret
addr16
cmp
ret
or
cwtl
out
adc
cld
cmp
insl
rcr
loopne
sub
out
jns
and
pop
cld
jae
mov
and
pop
dec
lock
mov
decl
cmp
adc
movb
or
xor
rcll
std
fwait
mov
lret
mov
out
jmp
cltd
add
shrb
je
sbb
int3
jae
jae
jmp
aad
mov
cvtps2pd
notl
mov
out
xchg
icebp
rol
add
loop
syscall
sub
or
sbbb
test
stc
and
push
pop
cld
movsb
add
jmp
xor
fsubl
shll
movsl
mov
sub
jmp
add
add
add
clc
insb
adc
ja
or
call
insb
rcr
cmp
je
fildl
shrl
inc
hlt
push
jg
insb
cwtl
shr
mov
je
sbb
sti
push
sbb
dec
les
shlb
or
fucomi
fnstcw
sbb
push
sti
addr16
lahf
xchg
and
add
push
add
imul
push
add
cmp
cwtl
add
into
outsb
or
add
sbb
add
dec
mov
sbb
lcall
shrb
sbb
add
data16
push
jle
cld
mov
sbb
inc
fidivrs
cld
mov
mov
add
mov
fcomp
pop
and
fdivrp
out
mov
mov
or
pop
cltd
fistpl
adc
sbb
add
cmp
sub
pop
sbb
subps
pop
sbb
jecxz
push
ss
mov
imul
push
fsubrl
push
nop
clc
in
jmp
cmpsb
jns
add
call
adc
jae
and
adc
xchg
push
sub
daa
jne
call
add
add
add
push
sub
adc
jl
adc
push
jge
mov
out
js
add
inc
push
test
sbb
mov
jmp
cld
test
testl
das
jge
test
mov
add
sub
fistpl
sbb
fnclex
jmp
add
add
add
clc
xchg
sub
and
sahf
stc
ret
jg
xchg
add
pop
outsb
mov
pop
outsb
iret
sbb
adcl
dec
add
out
add
xchg
jmp
cmp
sub
lock
and
popf
jmp
pop
add
fildl
fs
add
sub
xchg
jmp
jecxz
xor
out
add
jbe
or
inc
push
xchg
add
add
add
push
lea
add
movsl
hlt
push
add
mov
push
mov
xor
je
jo
xor
pusha
xor
sti
hlt
out
daa
inc
jmp
rolb
cld
push
xor
in
out
mov
mov
mov
in
sti
mov
popa
add
xorb
aas
adcb
add
pop
mov
aad
jmp
in
jnp
sub
jg
mov
mov
cwtl
pop
mov
popa
lock
lea
adc
aad
adc
test
test
adc
pop
mov
adc
push
adc
imul
cmp
cwtl
add
push
adc
push
add
iret
pop
or
cld
nop
lods
adc
add
add
lcall
add
or
clc
sub
mov
jae
and
jne
xlat
in
daa
adc
in
decl
sub
and
aad
mov
faddl
neg
xchg
ljmp
idivl
jg
sarb
add
add
add
bound
jmp
xchg
cli
daa
fadds
adc
mov
mov
sub
jmp
in
cmpb
add
push
add
and
fldt
decb
sub
pop
sbb
push
int
dec
mov
add
push
add
jmp
mov
xor
mov
fistpl
mov
test
add
push
insb
inc
or
pop
iret
fldt
xchg
inc
std
lcall
xor
add
xchg
mov
ret
xor
mov
adc
xchg
in
dec
jne
hlt
jno
je
daa
and
cs
add
jle
or
pop
lret
mov
cmp
jmp
add
dec
call
push
sub
add
sub
mov
push
movaps
inc
shl
iret
test
inc
or
dec
cmp
pusha
push
sti
jmp
sti
insb
int
nop
inc
lds
sti
std
aaa
and
lea
loopne
sti
sbb
or
add
rorb
add
add
add
adc
add
mov
and
leave
cld
je
add
call
push
push
outsl
add
push
xchg
mov
rcrl
add
inc
mov
lcall
pop
adc
pop
outsl
and
popl
or
jecxz
dec
and
test
add
push
jl
je
lea
jno
cld
lea
call
mov
ljmp
cld
cld
mov
add
paddw
cmc
xor
repz
mov
jp
add
das
pop
add
sub
mov
in
and
jb
rol
je
push
xchg
mov
jge
cld
lods
mov
js
mov
scas
in
daa
add
in
decl
clc
in
jmp
add
push
cli
jg
scas
dec
test
xor
stc
in
jg
subb
jl
mov
push
jae
in
jp
notl
insl
dec
aas
sti
jmp
jg
push
jmp
scas
cmp
pusha
pop
out
jo
pop
sti
je
add
add
insb
xchg
in
cli
or
test
sbb
outsb
fld
iret
xchg
sub
add
add
add
mov
das
popa
insb
scas
mov
cli
push
add
in
out
mov
jo
mov
aas
or
push
popf
mov
cli
hlt
mov
cmp
pop
scas
ja
jae
clc
push
xchg
mov
jbe
nop
pusha
xchg
lea
xchg
push
movsb
xlat
mov
jb
fsubrl
std
ss
lea
stc
sti
jmp
sti
push
add
cmpsb
cmc
call
imul
mov
push
fcoms
mov
subl
cvtdq2ps
sub
pop
add
andb
dec
fs
ds
out
ljmp
mov
add
dec
push
xchg
cmp
in
notb
push
adc
jo
add
xchg
repz
jns
add
adc
inc
add
adc
sti
call
vunpckhps
sub
in
js
add
adc
push
mov
adc
call
inc
mov
cld
adc
sbb
or
mov
add
bnd
xchg
dec
in
sub
inc
jle
xchg
jecxz
add
in
decl
leave
xlat
mov
sbb
push
adc
scas
dec
jno
loopne
aas
mov
andb
loopne
les
aam
add
imul
lds
jae
mov
cmpb
in
jle
sbb
sti
or
mov
mov
and
test
and
lcall
add
cmp
inc
or
cs
clc
je
and
pop
mov
xor
outsb
or
arpl
adc
hlt
xchg
ljmp
aaa
insb
mov
das
pop
or
arpl
sbb
adc
dec
fs
cld
xchg
out
clc
push
pop
nop
fldt
jo
fildl
idiv
nop
inc
add
push
pop
sbb
int
cs
rorb
std
pushf
aas
add
push
pop
inc
add
int
addb
mov
mov
es
loop
insb
pop
stos
out
push
or
or
icebp
xlat
push
fs
or
bound
data16
jbe
and
and
xchg
jmp
cmp
jne
add
jo
cmp
test
hlt
inc
data16
sub
call
jb
cwtl
in
cmp
into
mov
add
add
add
add
incb
lods
daa
pop
xchg
pop
call
ktestw
popf
jmp
add
mov
and
and
jmp
xlat
xchg
inc
or
shrb
pusha
mov
sub
mov
sbb
mov
mov
cld
je
cmc
mov
xor
dec
sbb
ficomps
xor
mov
sub
sahf
les
ficomps
xor
cmp
or
fisubl
pop
inc
stos
ficomps
adc
je
push
scas
stos
adc
mov
cld
push
sbb
add
add
test
xor
fnstenv
and
test
adc
stos
add
sub
cld
push
test
std
decl
mov
push
push
lret
jg
add
scas
pop
sbb
add
add
sub
jns
dec
pop
decb
out
cmp
dec
addr16
cmp
incl
jns
daa
incb
call
pop
inc
jne
decl
clc
std
jmp
cs
cmp
dec
shrb
sar
cs
test
cld
mov
add
std
decl
mov
xor
aaa
aaa
insb
inc
in
cltd
ljmp
hlt
mov
add
mov
ja
outsb
jae
outsb
cld
fs
in
mov
repz
jp
ljmp
pop
insl
jg
out
cld
leave
inc
pop
mov
lcall
clc
lahf
lods
adc
dec
shrl
hlt
or
fwait
dec
add
push
push
add
test
mov
pushf
adcl
jp
add
call
cli
xchg
test
push
jg
stos
xchg
rclb
inc
aad
inc
in
sbb
lea
sti
mov
dec
lea
sti
cmpsb
rclb
push
add
dec
push
mov
sub
xchg
dec
ja
repnz
outsb
cs
test
add
add
add
xchg
rcl
cmp
cmpsb
pop
cli
dec
call
jo
jmp
or
add
popf
inc
jmp
cltd
test
jmp
test
add
cli
je
pop
rolb
push
cld
ljmp
loopne
push
sub
cld
push
cltd
insb
lock
push
repnz
stos
mov
inc
stos
or
xchg
and
mov
add
mov
stos
mov
xchg
push
dec
pop
test
push
adc
es
xchg
and
xor
push
lcall
test
inc
repz
mov
adc
push
and
or
cli
lock
clc
or
shll
or
fldz
or
mov
pop
push
popf
mov
push
jnp
add
add
dec
pop
stc
std
incl
stc
inc
add
mov
clc
int3
aas
gs
lea
stc
std
lcall
add
jns
adc
inc
scas
push
cmpsb
je
xor
orl
call
or
mov
pushl
jecxz
aaa
ret
pop
fwait
mov
out
decl
fucomip
pop
popl
sbb
dec
bound
xorb
add
mov
jmp
jnp
cmp
jnp
cmp
jp
cmp
jns
pop
outsb
pushf
clc
popf
dec
call
lds
je
sbb
pushf
testl
mov
out
testb
pop
lds
xor
push
insb
inc
stos
or
dec
mov
testl
add
add
pop
add
ljmp
jmp
add
shr
sti
push
popa
pop
and
push
push
sti
add
add
jg
jne
test
bound
ja
add
sti
cmpsl
add
pop
sub
adc
and
repnz
jmp
rolb
cld
divl
jmp
cmp
test
pusha
push
or
pop
or
add
testb
adc
xchg
add
xchg
push
and
ja
je
out
outsl
add
dec
mulb
push
xchg
sbb
push
pop
outsb
and
cld
data16
mov
mov
test
jmp
hlt
fmul
pop
std
rcrb
pop
xor
xlat
pop
sub
pop
or
mov
test
mov
add
add
add
ffree
ja
mov
push
ljmp
test
loop
int
outsb
adc
test
pop
mov
adc
sahf
loop
lock
add
clc
decl
mov
pushl
jae
cmc
dec
adcl
add
movsl
mov
cmc
sbbb
div
mov
rolb
mov
add
jns
and
xchg
jl
cld
xor
loopne
mov
in
inc
fcompl
jl
adcl
js
sub
sbb
je
testb
cmc
js
sbb
mov
aas
push
faddl
inc
jge
ss
subb
push
arpl
jle
sub
add
adc
cli
lods
push
mov
add
add
add
add
mov
out
jmp
popf
pop
dec
jg
xor
int3
test
cmp
cmpsl
aaa
lcall
lahf
sbb
clc
xchg
movsl
hlt
jp
inc
repnz
mov
push
mov
push
add
loopne
push
mov
and
lcall
jp
jmp
add
add
cmp
movsl
aaa
add
das
paddd
xchg
vpcmpeqb
xor
and
sbb
adc
sti
push
dec
jmp
fldl
push
test
das
sub
push
and
sub
pushf
call
and
outsl
ret
jmp
sub
push
test
icebp
and
jmp
add
push
add
fwait
and
sti
push
cli
addr16
sti
add
lcall
pop
add
and
mov
pushf
push
outsl
pop
es
lea
and
add
cmpsl
cmc
cli
call
and
sbbl
dec
jne
xchg
clc
add
or
stos
pop
cmp
pusha
aas
and
movsl
cld
adc
and
pop
lea
mov
leave
andl
add
add
add
or
adc
jp
lods
adc
add
push
xor
in
cli
dec
push
clc
das
mov
in
das
out
aas
clc
data16
stc
incl
cmp
aas
scas
stc
sarl
andb
arpl
repz
mov
shlb
clc
je
pop
stc
std
incl
jg
add
add
jbe
and
dec
jnp
stc
std
decl
ret
sub
cmp
into
ljmp
repnz
incl
cmp
mov
sbb
jns
addr16
jbe
push
pop
push
push
call
and
ja
int
jg
mov
sarl
fimull
orl
dec
push
fnsave
mov
jmp
push
out
jmp
jp
xor
jnp
pushf
movsl
aaa
out
or
pop
xchg
sub
cmpsb
popf
fisttps
sahf
pop
loopne
sti
dec
add
xchg
incb
cwtl
push
out
addb
sti
popf
enter
and
sti
sbb
add
add
insl
jmp
lock
jo
inc
lds
sahf
lret
test
std
dec
out
das
push
std
ljmp
std
loop
popf
cli
push
add
xlat
es
test
leave
je
fists
inc
shlb
adc
cld
loop
imul
pop
or
jg
sti
pop
test
aas
fnsave
add
add
add
add
push
inc
push
ljmp
jl
pop
cmpsb
and
popa
pushf
or
jmp
jecxz
push
inc
sbb
jne
pop
inc
and
retw
pop
jmp
hlt
sbb
decl
lods
pop
adc
pop
adcl
xchg
push
and
push
imul
pop
outsb
adc
bound
out
pop
test
add
add
sbb
inc
push
push
add
sbb
clc
js
call
test
clc
out
dec
sti
or
adc
pop
mov
enter
push
dec
lods
and
sbb
jne
je
es
add
je
add
out
lea
dec
int3
lea
add
inc
adc
xor
add
ret
rorl
cmp
cmp
pushl
add
in
mov
or
test
push
pop
in
in
add
pop
and
faddl
insb
ret
add
push
int
push
fsts
cmp
test
xchg
mov
dec
sti
inc
clc
xchg
movsl
xlat
cld
adc
lds
jle
int
add
push
out
call
mov
xchg
mov
add
adc
rcll
in
jmp
xchg
jmp
or
in
add
or
shlb
arpl
push
add
jbe
cwtl
jmp
sti
push
lea
pop
sbb
jmp
dec
adc
jmp
add
add
sbb
punpckldq
add
sti
xchg
inc
jecxz
out
pushf
cld
push
test
jl
add
mov
fisubrl
push
test
orb
lret
in
sti
push
pop
lahf
inc
dec
pop
nop
mov
add
mov
aas
add
sti
xor
cli
push
add
mov
test
sbb
pop
inc
cmp
and
add
xchg
insb
loop
and
pop
pusha
push
add
push
lret
or
rcr
cmpsb
pop
pop
ret
adc
aas
add
xchg
stc
xor
adc
adc
jmp
xchg
push
add
lea
mov
pop
iret
push
nop
jg
loopne
add
push
iret
push
nop
jg
loopne
add
push
iret
addl
add
add
add
add
repz
mov
pop
and
clc
out
insl
adc
jne
call
addl
push
cmp
nop
cmpl
lea
add
fwait
out
incl
out
mov
aas
mov
mov
jne
movsb
add
out
dec
mov
add
test
out
decl
add
add
add
add
mov
in
decl
clc
jbe
xchg
stc
in
decl
clc
push
sbb
ja
mov
dec
aad
add
clc
jmp
pop
jmp
or
push
mov
out
mov
and
lds
aad
add
dec
xor
cli
imul
jae
stc
push
jmp
int3
int3
sbb
adc
add
add
add
add
lock
loope
and
jg
adc
cmovo
lea
fbld
add
fs
mov
pop
lea
push
add
sub
shll
dec
add
sti
out
aaa
sub
fildl
jmp
sub
adc
je
outsb
add
sti
inc
sti
mov
add
push
push
dec
xchg
mov
push
add
pop
ret
lods
roll
adc
mov
bound
jo
call
insb
cmp
push
bound
add
sti
js
mov
sti
xchg
rcl
jne
ljmp
call
test
pop
sbb
shll
push
jmp
xchg
shlb
jmp
add
add
add
adc
add
sbb
push
xlat
dec
and
xchg
fistl
orl
arpl
bnd
mov
test
add
sbb
add
jo
je
lea
mov
fistpl
sub
notl
mov
incl
jo
mov
add
out
cli
jle
clc
sub
inc
ljmp
add
cld
adc
jb
and
inc
jge
mov
aam
push
push
cs
cmp
fisttps
andb
out
xor
push
jnp
add
in
adc
shl
jle
add
xchg
add
mov
add
xor
adc
int3
xor
rcll
adc
repz
mov
push
dec
dec
or
xchg
pop
mov
jmp
in
cli
jno
sti
ja
mov
clc
push
ss
cmp
xor
jmp
outsl
sti
stos
jmp
fcmovnbe
cli
jge
or
sti
add
cmp
pop
add
push
cld
push
out
dec
xor
jg
cmp
jmp
out
icebp
lea
add
sti
push
xchg
fistps
xchg
or
test
or
stc
fcoml
add
sbb
jo
add
sti
inc
call
insb
into
pusha
dec
ficoml
xor
sti
fbstp
fmul
out
add
xor
or
dec
ss
add
sbb
loop
bound
lss
out
aam
sbb
in
cmp
cmp
idiv
mov
cmpsl
orl
mov
call
pop
push
and
xchg
inc
pop
pop
xlat
and
lods
push
push
mov
jg
fsts
xchg
pushf
add
lea
sub
push
push
call
test
rcrb
inc
clc
das
inc
bound
or
adc
leave
and
jne
sbb
addl
jne
stos
push
or
jne
cld
push
xchg
in
clc
adc
int
clc
loop
jle
jno
or
sub
ds
mov
jne
call
aaa
rcrl
lds
clc
insb
jecxz
sub
dec
xchg
mov
orb
cmp
das
insl
mov
adc
mov
add
imul
std
ret
jmp
jne
and
jae
in
pop
push
out
jmp
sub
cmp
push
pusha
xor
push
jmp
add
add
add
jne
sbb
jb
jo
les
xor
or
jno
lds
fs
dec
shrl
inc
adc
call
inc
clc
xchg
sub
lea
dec
mov
mov
subl
leave
add
mov
jmp
test
xor
sbb
in
cli
ds
inc
outsb
lds
mov
clc
xchg
add
push
test
inc
lds
lock
std
inc
push
bound
push
mov
adc
outsb
push
nop
lret
mov
and
sti
sub
mov
jnp
and
sti
bound
hlt
out
imul
xchg
sbb
scas
fisttpl
add
add
add
adc
add
sub
adc
fs
xor
pop
inc
jbe
jmp
pop
xor
sti
xchg
rclb
lock
insl
add
loope
call
stos
mov
testl
and
jle
adc
add
out
ret
scas
insb
pop
pop
push
xlat
inc
ret
bound
add
sbb
lahf
call
pop
repz
xchg
out
je
es
jne
add
jne
ret
lahf
call
cli
mov
push
addr16
push
ljmp
add
mov
cmp
fmull
aam
incl
xchg
xor
mov
mov
pop
add
mov
mov
mov
filds
or
mov
mov
inc
sbb
je
cmp
and
inc
ja
or
adc
mov
pop
incb
inc
mov
clc
mov
sbb
nop
hlt
adc
jnp
add
clc
lods
hlt
adc
clc
mov
push
mov
int
jg
xchg
call
add
add
add
clc
mov
cmpsl
jl
pop
jmp
add
mov
xor
cli
fdiv
in
xlat
inc
clc
mov
xor
stc
push
jmp
dec
in
pop
jmp
insl
add
jmp
inc
add
adc
sbb
xchg
pop
outsb
sti
pop
int
push
gs
call
jg
aam
pop
xlat
add
add
add
add
bound
aad
push
jo
sbb
adc
add
clc
fwait
dec
add
movsb
mov
test
inc
outsl
lea
add
cli
pop
fdivrs
cmp
hlt
jmp
fwait
adc
ljmp
sub
cld
lret
and
jmp
mov
jg
aas
xchg
or
sub
adc
sbb
add
pop
repz
repz
mov
mov
mov
ret
jg
std
mov
sti
jmp
dec
push
jns
xor
popa
push
fcos
insb
inc
push
lcall
std
cli
decl
cmpsl
add
pop
mov
nop
rcrl
mov
jns
mov
and
int3
and
subl
add
add
add
add
xchg
add
push
add
loope
mov
push
lahf
and
rclb
add
sahf
and
mov
pop
add
clc
adc
cmp
aas
add
es
and
mov
dec
sti
inc
dec
andl
jnp
sti
mov
clc
dec
andl
ljmp
xor
dec
cmp
mov
ss
and
xchg
les
setns
xchg
mov
and
test
jnp
push
clc
mov
ja
js
ljmp
and
cmp
add
push
jmp
push
jno
int
xorl
xor
pop
int
ficoms
cltd
lock
xchg
lods
add
add
add
add
add
es
add
shll
add
add
sub
rorl
clc
push
insb
dec
aam
pusha
cmpl
ja
xchg
push
sarl
lock
out
sub
iret
cld
iret
notb
mov
into
test
mov
ret
insl
stos
add
xor
call
gs
pop
bound
push
mov
test
add
add
jbe
jg
hlt
push
add
mov
push
cmp
push
sti
mov
dec
push
cld
stc
adc
or
push
add
sti
pop
rcrl
cwtl
movl
sti
push
add
rorb
jmp
hlt
push
add
jg
add
add
xchg
jg
popf
sbb
add
ljmp
sbb
imul
and
notl
fildl
add
add
in
test
push
and
sarl
push
add
pop
mov
dec
mov
dec
adc
add
add
lods
sahf
and
adc
add
dec
or
out
notl
add
add
add
inc
add
add
addr16
and
rcrl
add
lds
cmp
mov
les
jne
add
clc
pop
and
clc
test
jmp
clc
mov
jl
jae
sub
cmp
call
mov
add
inc
andl
ljmp
mov
pushl
cmp
lds
test
jae
clc
mov
jnp
and
clc
mov
mov
popf
clc
mov
xchg
add
sbb
jne
clc
push
mov
add
push
mov
sti
je
mov
daa
jl
jmp
out
clc
push
jmp
add
fs
or
outsb
inc
call
pop
lds
xchg
inc
lock
das
sbb
or
clc
push
dec
add
xchg
add
push
and
or
jno
outsb
mov
adc
sub
xchg
lds
cmc
pop
test
nop
repz
sti
push
add
push
cwtl
mov
sar
mov
and
add
add
add
int3
imul
cs
xchg
adc
sar
mov
cli
push
mov
jp
jmp
cld
push
jg
rdpmc
add
aas
push
sub
inc
add
out
arpl
sub
fcoml
je
push
inc
and
and
lea
fistl
add
out
push
sub
cltd
inc
int
data16
mov
pop
and
add
aam
jbe
lea
shr
enter
lea
addr16
push
xor
insb
sarl
insl
sub
dec
test
adc
add
iret
mov
pop
mov
add
out
xor
mov
cmp
out
popa
pop
orl
inc
std
sbb
nop
adc
call
pop
pop
push
push
mov
mov
add
add
add
stos
out
jnp
pop
xchg
in
nop
clc
mov
sbb
mov
or
in
inc
jae
inc
mov
cmp
push
xchg
icebp
std
dec
outsb
cmp
std
das
pop
inc
clc
mov
jl
xor
push
sti
in
add
inc
clc
sub
iret
adc
incl
add
leave
call
xor
pop
inc
clc
mov
add
add
add
add
inc
add
fmuls
shr
incl
pop
xor
or
cli
jnp
cld
pushl
sub
jge
push
in
cmp
sti
jmp
repnz
pop
sbbl
dec
adc
loopne
aaa
call
jle
jmp
xlat
xor
jmp
push
mov
pop
adc
add
inc
shrl
lret
leave
aam
push
jmp
aas
clc
pop
pop
or
push
xchg
test
ror
push
jmp
pop
mov
add
or
add
pop
and
sti
mov
pop
lea
lea
sti
xchg
leave
sti
push
push
xor
add
inc
sahf
pop
pop
xlat
and
add
pop
test
dec
sbb
jns
cli
ds
xor
cltd
sahf
and
pop
jg
nop
dec
mov
out
xor
push
mov
push
pop
or
enter
inc
faddl
ret
pop
xchg
sti
and
bound
sub
jle
dec
ds
dec
mov
add
push
add
rclb
addl
add
add
add
add
xchg
inc
add
dec
inc
or
or
repz
adc
test
dec
inc
or
nop
and
icebp
and
add
gs
stos
add
into
dec
dec
jne
inc
je
add
cli
pop
jnp
jecxz
mov
cmp
dec
inc
or
jmp
add
dec
push
adc
add
clc
jbe
clc
aas
cmp
pop
imul
into
jl
xchg
cmp
or
add
xchg
cmp
adc
mov
inc
add
les
push
sti
dec
mov
adc
jge
push
jno
cmpxchg
push
in
shl
add
idiv
leave
out
inc
pop
mov
pop
cmpl
mov
jb
hlt
les
les
mov
sti
inc
clc
cltd
sub
inc
lcall
stos
push
ret
sub
add
cmp
add
fsts
and
xchg
aaa
stos
xchg
cwtl
pop
stc
lds
add
sub
push
cmp
insb
ret
sbb
std
push
negl
fsubs
mov
in
mov
hlt
ret
or
std
call
add
add
add
sub
xchg
movsb
scas
and
lret
data16
and
add
cli
push
jmp
in
mov
leave
outsl
std
ljmp
adc
inc
jge
cld
dec
mov
mov
dec
int3
xor
pushf
jns
pusha
leave
stos
add
push
jb
xchg
in
and
push
add
push
pop
orl
add
add
rolb
or
inc
xor
add
fisubrl
add
cmp
test
push
adc
ds
sub
mov
divb
dec
xchg
cmc
dec
je
out
mov
add
push
je
shlb
rol
sbb
mov
daa
dec
je
push
je
xor
mov
push
add
add
add
add
mov
dec
dec
in
es
or
sti
xor
bound
fsubl
sbb
push
mov
dec
mov
enter
push
push
mov
cld
mov
pushf
les
dec
cld
push
out
or
pop
sbb
adc
out
jg
rclb
ret
call
das
push
cmpl
push
shrb
dec
cld
add
inc
adc
cmp
enter
das
add
sti
or
test
cmp
add
mov
repz
lock
shlb
jle
test
push
sbbl
lds
test
xor
call
jl
push
sub
and
pop
dec
out
jle
pop
out
add
sub
cmp
and
inc
cmp
loopne
sbb
imulb
sub
add
pop
or
sar
or
fildl
roll
clc
dec
fisttps
ret
sub
cld
ret
or
push
lret
dec
mov
sti
enter
daa
hlt
call
dec
or
adc
ret
dec
or
insl
or
fs
and
add
inc
jl
clc
push
je
cwtl
dec
and
cwtl
in
sub
orl
mov
xchg
jnp
cli
pop
or
pop
mov
push
bound
scas
inc
inc
mov
xchg
add
jmp
sbb
ret
mov
add
add
add
add
mov
push
sbb
rclb
fadd
inc
jnp
hlt
dec
adc
sti
cmovle
sti
add
rclb
xchg
pop
jne
movsb
add
test
push
add
or
adc
xor
add
pop
adc
mov
in
test
add
pusha
lea
sub
add
add
add
add
sbb
mov
es
sbb
loope
jne
cmp
inc
fnstcw
rol
cmp
addb
call
call
mov
test
adc
push
clc
xorb
jne
and
inc
sahf
xchg
mov
xor
jnp
or
add
mov
pop
add
xor
mov
add
add
add
sar
call
inc
inc
and
adc
xchg
fiadds
cmp
data16
dec
and
pop
xchg
das
xchg
in
cli
pop
mov
adc
mov
sbb
inc
xor
decl
aaa
inc
inc
mov
push
mov
outsb
xchg
pop
xlat
sbb
cmp
gs
push
daa
hlt
add
push
xor
imulb
fldl
pshufw
lods
filds
push
daa
xor
inc
icebp
fsubr
adc
div
and
add
data16
push
adc
xor
out
push
aas
clc
leave
mov
jmp
inc
clc
xchg
test
lret
adc
sahf
fdiv
xchg
cltd
xchg
inc
imul
ret
add
std
notl
adc
jno
xor
bound
mov
shl
gs
rcll
movsb
and
cmp
dec
push
outsb
or
mov
sub
push
jmpw
and
sub
and
and
add
dec
rcll
jmp
adc
dec
pop
outsl
inc
or
xchg
or
dec
mov
ljmp
jb
rcll
xlat
jp
idivb
je
std
fists
cmp
int3
add
jne
popl
leave
sub
mov
int3
call
test
gs
pop
insb
and
inc
in
pop
mov
je
loop
fadds
mov
test
jbe
mov
jbe
push
leave
and
sti
incb
int3
mov
or
fsubr
sbb
jne
and
notl
and
jecxz
in
mov
push
cmp
lret
or
cld
clc
mov
mov
dec
xchg
push
adc
ret
dec
stos
adc
mov
add
and
je
jno
push
lock
out
insl
mov
aam
xor
jae
sbb
dec
push
and
cmp
clc
and
ret
or
popf
xchg
mov
or
insl
push
add
in
lock
push
dec
pop
fidivrl
das
xlat
lods
pushl
push
and
push
je
sbb
lcall
sub
jmp
and
push
int
lds
sbb
add
or
cmp
scas
test
mov
lock
jmp
in
sbb
popf
pop
lock
fsub
repnz
int3
repnz
leave
adc
out
inc
and
add
shlb
xor
je
outsb
or
jg,pn
out
pusha
outsb
rcrb
push
mov
sub
sti
cs
hlt
push
jne
roll
insb
add
jecxz
mov
dec
mov
add
sti
xchg
sar
lds
cmc
inc
add
add
sti
fsubrl
or
mov
je
imul
and
hlt
imul
jmp
or
dec
push
xchg
xor
bound
push
sti
pop
clc
mov
ljmp
cmp
or
mov
add
mov
mov
fiaddl
test
fcomip
rcr
rorl
dec
clc
out
push
jmp
lock
pop
inc
adc
ljmp
xchg
shlb
or
sbb
sbb
jmp
xchg
decl
mov
mov
add
adc
orl
inc
clc
dec
gs
rorb
divl
loope
lock
mov
imul
jne
dec
add
in
add
addr16
decl
jg
mov
mov
sbb
mov
sbb
ja
mov
iret
add
lods
inc
xor
clc
lods
mov
incl
insl
push
push
adc
inc
inc
jmp
add
xor
push
shlb
rcll
fwait
imul
aas
loop
adc
push
sbb
ljmp
sub
cs
mov
push
or
lods
in
push
pop
jmp
out
mov
addb
add
add
add
add
movb
lret
inc
lods
add
cmpsl
add
cld
mov
push
jmp
ficoml
or
add
sbb
and
lret
mov
mov
clc
imul
data16
push
sub
addb
jl
add
bound
or
sub
dec
sti
mov
mov
arpl
push
pop
sub
jne
jle
xor
add
add
add
add
xor
std
mov
stos
js
adc
cmp
cmp
push
add
inc
jmp
cmp
jg
imull
mov
dec
stos
cmpsl
add
call
or
insb
lods
sti
dec
sti
aam
and
jmp
daa
pop
add
mov
add
adc
add
mov
add
leave
adc
xor
add
leave
notl
scas
add
and
cmp
enter
or
sbb
push
in
xchg
inc
and
call
and
out
addr16
mov
into
mov
not
and
divl
leave
adc
cmp
add
test
mul
xchg
clc
add
sti
orl
repnz
loopne
push
jne
and
test
push
and
mov
push
mov
in
into
iret
jne
push
or
xchg
sarl
add
pop
add
xorl
or
stos
pushf
into
jg
incl
cmp
mov
inc
and
sub
or
ret
jp
aam
add
sbb
push
loop
pop
sub
push
and
push
push
test
shl
sub
rorl
and
adc
mov
sub
lock
mov
push
shrl
push
jmp
das
cmpsl
dec
adc
dec
sahf
mov
pusha
add
call
jge
sub
xor
lahf
adc
imull
sbb
pusha
xor
call
aad
mov
les
imul
stc
ftst
mov
pop
add
and
ds
outsb
repnz
ficomps
mov
cmp
inc
add
and
repnz
out
es
sub
fwait
rclb
add
add
add
add
xor
mov
mov
sub
add
shl
add
sub
mov
lahf
inc
insb
and
push
roll
inc
inc
inc
jmp
lods
icebp
pushl
insb
lods
sti
pop
jne
mov
lcall
loope
inc
add
pop
add
pop
add
test
push
lea
movsb
loope
push
jnp
or
pop
cld
xor
add
into
iret
idiv
xchg
out
notb
xchg
fidivl
push
xchg
jmp
adc
add
jecxz
jno
push
pop
cwtl
aam
not
fs
inc
rcrl
dec
push
pop
call
jne
cmp
insb
inc
shl
notb
daa
push
shrb
add
rcl
repnz
dec
lret
test
mov
or
ret
fiaddl
ror
inc
add
clc
clc
iret
or
xchg
fprem1
aas
clc
push
dec
and
lea
mov
ss
and
mov
and
cmpsb
push
add
out
adc
aam
lret
iret
jge
push
adc
add
out
inc
adc
mov
mov
pop
add
sti
es
mov
xor
cli
out
push
pop
into
mov
dec
push
push
pop
data16
pop
lods
shll
xchg
cmp
add
xor
or
xchg
and
inc
mov
or
push
xlat
push
adc
inc
pop
inc
lock
loop
mov
sub
fdivr
fwait
and
jno
in
cld
add
xlat
gs
fsubs
mov
or
sbb
xor
sub
inc
sbb
clc
jmp
xor
jb
xchg
icebp
jo
repz
repz
dec
rorb
test
inc
and
ret
jae
adc
fidivrl
ror
sti
push
xchg
out
inc
icebp
mov
xchg
mov
pop
and
jg
je
mov
pop
pusha
mov
repnz
mov
aaa
repz
sbb
mov
or
inc
jmp
sti
and
sbb
je
and
add
sbb
add
xchg
cs
mov
cmc
and
popf
sub
and
xor
sub
and
imul
outsb
add
movsl
out
mov
xchg
add
out
inc
sub
jns
add
and
stos
test
adc
add
and
dec
mov
push
add
push
and
pop
sarl
pop
out
jo
cmp
mov
inc
and
sbb
xor
and
push
add
clc
mov
repz
add
clc
cmp
loopne
les
dec
add
sbb
xor
insl
cs
je
testb
mov
call
hlt
push
cld
ss
and
cmp
jns
lock
lret
sbb
add
xor
clc
mov
pop
je
sbb
loopne
sbb
adc
ja
int
prefetchwt1
push
push
adcb
aam
add
and
ret
imul
xchg
aad
in
adc
or
adc
inc
xor
sti
sub
lret
or
add
and
jle
repnz
int3
fdivl
cli
leave
orl
add
insl
movb
add
add
clc
push
data16
push
sbb
stos
pop
push
pop
sub
ljmp
xlat
sbb
scas
cmp
or
xor
xchg
mov
test
cmpsl
sbb
sub
nop
inc
int
dec
pop
or
sub
mov
or
jg
mov
in
in
les
sub
ret
jmp
xor
sub
add
xchg
cwtl
jmp
daa
movsl
inc
add
pop
mov
jb
sub
add
push
and
sti
push
adc
inc
jg
mov
negl
push
scas
mov
test
into
cmp
test
cmpsl
jp
vpsadbw
adc
je
sbb
push
adc
add
or
and
ficoms
add
add
add
test
test
scas
xchg
ror
sub
aad
je
cs
adc
aas
out
call
lret
inc
xor
loop
inc
inc
or
cmp
xchg
aad
or
mov
add
loope
add
aas
fadds
or
jae
and
enter
dec
lods
repnz
add
add
add
add
mov
pop
adc
and
call
mov
ja
xor
add
mov
adc
addr16
and
pop
call
jge
sbb
push
lock
sub
nop
mov
sbb
je
dec
push
push
pop
cmpsb
repz
dec
int3
cmpsl
cld
pop
jmp
stos
pop
cmc
imulb
push
fidivrs
sub
pop
cmp
aad
repz
fidivrs
dec
out
fdivl
add
cmpsl
aam
or
jmp
pop
sbb
fisttpl
xchg
add
repnz
push
insb
ret
repz
and
clc
push
je
lock
pop
mov
clc
xchg
sub
fwait
jecxz
call
push
mov
xor
mov
add
push
mov
add
stos
adc
in
repnz
jmp
xor
fwait
add
sti
mov
ljmp
sub
mov
sti
jmp
xlat
push
push
sub
fwait
rclb
add
sti
add
sti
pop
je
and
fidivl
idiv
hlt
jae
inc
jmp
dec
mov
fwait
jmp
add
add
add
push
repz
mov
xlat
add
into
pop
and
or
decl
mov
add
and
adc
push
inc
add
xchg
push
add
sbb
adc
popa
sbb
ljmp
ret
out
inc
lods
movsl
add
leave
mov
add
push
mov
mov
movsb
xchg
sbb
push
cmp
dec
mov
push
rorl
out
ljmp
das
and
jne
push
int
pop
xchg
ja
out
sub
stc
scas
jmp
dec
jp
jmp
sub
mov
add
scas
das
dec
jge
out
nop
fiadds
clc
fildll
jle
ret
insb
mov
mov
add
sbb
sahf
pop
add
rolb
mov
clc
cmp
call
and
mov
divb
les
pop
mov
pushl
jecxz
lret
in
and
dec
adc
push
xchg
cmp
dec
and
push
out
stc
lods
add
push
xchg
sub
mov
dec
add
cmp
fwait
sub
test
inc
pop
jmp
roll
test
nop
xor
fcoml
nop
jmp
mov
jmp
rcl
test
call
xor
sub
xchg
sub
repnz
add
push
cmp
mov
cli
sub
mov
nop
xrelease
add
xchg
call
jb
sub
xchg
test
pop
scas
cwtl
dec
subl
xchg
ret
out
lret
nop
inc
jmp
test
call
jb
scas
movd
push
add
cld
sub
jb
scas
sti
push
mov
cmp
cltd
dec
jno
mov
test
and
insb
mov
xor
pop
and
xchg
stos
mov
movsl
mov
add
xchg
mov
add
dec
and
cwtl
ss
test
and
subb
and
jnp
sub
adc
call
pop
pop
test
and
inc
push
decl
pop
mov
scas
sub
and
jne
sbb
push
adc
push
or
adc
jns
xchg
lcall
xchg
fadds
clc
in
clc
flds
and
jnp
sub
adc
xor
cmpsl
cmp
adc
lea
sar
add
lea
out
adc
lret
call
add
add
add
nop
mov
add
jno
fsubrl
xchg
cmp
sti
mov
push
adc
inc
inc
push
and
daa
pusha
and
xchg
inc
xchg
sub
insl
xor
bound
sbb
lock
jno
or
mov
ljmp
adc
dec
movsl
add
das
jmp
pop
add
int
and
test
mov
push
add
mov
outsb
icebp
aaa
add
pop
inc
sbb
nop
add
out
push
jmp
mov
push
pop
jmp
sbbb
push
push
mov
pop
add
call
xchg
data16
mov
fs
mov
pop
call
add
add
add
pop
pushf
sti
sahf
mov
push
bound
inc
das
inc
stos
xchg
stc
jb
scas
lret
fwait
test
out
sub
jb
push
call
insb
cmp
out
fs
sub
sub
mov
jne
jmp
cmovg
hlt
mov
add
pop
cmpsb
cld
mov
hlt
jo
push
popf
xchg
push
xchg
shlb
add
add
add
add
xchg
idiv
sbb
call
jmp
nop
enter
idiv
je
andl
or
nop
mov
pop
aaa
aas
mov
inc
and
jne
outsl
sbb
insb
dec
sbb
sub
or
cmp
insl
pop
sbb
and
loope
add
fsubrl
rcrl
mov
add
and
inc
add
insl
inc
roll
adc
clc
in
sti
sub
pop
sti
and
pop
sti
or
ret
or
mov
push
jae
sub
sub
pop
sub
ds
call
sbbl
inc
push
jg
jb
cmc
rorl
movsl
lods
icebp
mov
clc
mov
lea
xchg
incl
jne
mov
cmp
cli
iret
daa
ds
outsb
xor
push
lods
mov
imull
mov
lcall
jge
adc
push
lods
andl
sbb
jno
mov
mov
mov
clc
push
pop
inc
fs
inc
xor
adc
int3
mov
add
add
add
insb
inc
adc
xor
add
mov
and
jo
mov
sub
mov
ds
push
jecxz
std
mov
jge
ljmp
xor
pop
sub
add
adcb
arpl
sub
lret
xor
or
mov
mov
cmp
add
add
add
add
push
add
push
push
sub
cli
ss
mov
mov
leave
sub
sbb
push
xchg
add
push
push
call
cmp
add
cmc
jmp
mov
adc
cmp
push
sub
push
xchg
int3
push
inc
loope
fdivr
loopne
pop
mov
inc
dec
push
add
imul
fistpll
mov
call
out
add
adc
pop
xchg
push
bound
mov
push
inc
mov
xor
sbbl
sbbl
mov
mov
jbe
pop
pop
adc
movsl
push
incl
mov
pop
push
jno
and
clc
push
fisttpl
adc
inc
mov
xchg
scas
jp
and
lods
push
xchg
testl
cmp
adc
repz
xor
and
lock
nop
pop
inc
clc
ss
and
dec
inc
sti
clc
scas
test
clc
pop
jmp
dec
lods
mov
pop
push
add
mov
inc
fildll
mov
pop
mov
pop
out
mov
adc
cmp
pop
inc
adc
sub
xchg
lods
sbb
stos
sbb
sub
xchg
sti
repnz
lcall
scas
inc
mov
cwtl
insl
les
sub
add
sub
stos
mov
lahf
insb
mov
in
dec
xor
call
push
jmp
jg
push
jmp
sti
xchg
adc
push
adc
sbb
adc
add
xchg
cmpsb
pop
movsl
sti
fwait
jne
cmp
rorb
stos
scas
push
push
fwait
xchg
or
mov
scas
call
fistpll
cmp
stos
dec
nop
in
aaa
andl
insb
add
je
es
jbe
je
movl
cmp
ds
lock
pop
movsl
sti
xor
sar
inc
ljmpw
xchg
es
cmp
and
xchg
movb
and
dec
incl
inc
call
mov
fdecstp
mov
stc
out
pop
sbb
aad
notb
xchg
les
lret
call
mov
loop
xchg
mov
jbe
or
push
jmp
orl
pop
mov
jbe
push
ljmp
mov
jns
push
sbb
sahf
push
sbb
test
sbb
xchg
and
add
les
jl
add
clc
mov
inc
in
scas
or
push
aas
and
test
aam
inc
add
out
cli
xlat
jp
jbe
repz
jle
sub
xorb
andl
data16
cli
xchg
aad
jge
xor
ss
mov
inc
cwtl
or
cmp
cld
xchg
sub
in
shr
mov
adc
les
in
add
movsb
cmp
lret
push
mov
mov
adc
mov
pop
movsb
test
mov
call
push
dec
xchg
cmp
in
push
inc
lock
movb
cmp
ret
and
in
xchg
stos
movl
xor
xchg
pop
mov
dec
mov
and
cltd
filds
push
fs
add
add
add
cmp
push
jne
dec
dec
push
gs
pop
push
sub
pop
dec
mov
xchg
jmp
jo
add
sti
cld
push
cmp
xor
add
sti
fwait
lock
mov
push
bound
pop
out
mov
sub
cmc
inc
repnz
sbbl
add
jle
mov
popl
add
add
add
lcall
cmpsl
nop
sti
gs
push
add
and
mov
lods
out
inc
jmp
mov
in
add
inc
xor
push
sub
cwtl
fmulp
test
test
jp
or
jbe
inc
and
test
test
inc
cmp
pop
es
shrl
add
add
add
add
jae
in
lods
adc
jnp
sub
scas
fcoml
in
call
test
add
movsb
mov
inc
mov
sub
inc
add
cwtl
cmp
movl
sar
push
leave
cmp
lahf
adc
je
push
jmp
jge
jne
cmp
enter
clc
jg
xchg
sbb
jno
jecxz
jge
xor
cmpl
aaa
mov
jo
mov
sbb
xor
or
dec
daa
xchg
mov
test
xchg
xchg
xor
clc
jg
dec
fdivl
stos
xor
mov
push
sti
mov
push
adc
mov
fwait
add
aam
mov
jle
inc
adc
jo
fsubrl
insb
sahf
add
outsb
inc
aam
stos
enter
stc
push
jmp
fwait
jle
sti
scas
jge
loop
add
jmp
call
mov
push
gs
repz
fsubrl
pop
mov
mov
pushf
lods
pushf
cmpsl
ficoms
pop
add
pop
cmc
mov
push
add
xchg
shll
or
jg
add
sti
mov
adc
jno
jg
ljmp
xchg
xor
inc
lds
add
ljmp
movsl
fbld
mov
in
sub
sahf
jl
aam
jmp
sub
faddl
stos
and
movsb
or
cmp
in
push
dec
mov
outsl
cmp
test
xchg
mov
add
inc
xor
cmpsl
inc
sub
mov
adc
fcoml
adc
aas
and
push
sbb
add
divb
out
push
sbb
dec
push
lcall
push
add
mov
jb
sbb
push
mov
xor
int3
testl
sbb
call
mov
push
pop
cmp
or
sub
push
daa
or
sti
add
ror
cmp
mov
test
insb
and
mov
js
call
cmpsl
pop
jns
jno
out
or
imul
dec
or
aas
add
mov
pop
add
js
sbb
mov
adc
inc
sub
ret
jecxz
ja
clc
testb
xor
xchg
nop
sbb
pop
addl
pop
int
xchg
and
push
cmp
data16
hlt
leave
call
adc
mov
add
add
add
add
pop
in
fistpll
push
lods
in
js
dec
lods
in
sub
inc
clc
fwait
ret
pop
lret
lahf
movsl
out
mov
aam
out
call
fildl
xchg
jge
clc
push
pop
push
aam
enter
outsl
das
adc
pop
das
sbb
shl
mov
sub
add
xor
jle
xor
hlt
add
push
mov
jecxz
fidivrs
pop
jg
add
xchg
dec
int
fisubl
int
nop
jne
cld
adc
inc
icebp
mov
jg
sti
add
bound
xor
and
sbb
jmp
inc
repnz
mov
cli
pop
jo
push
mov
aad
add
xchg
dec
inc
int
and
push
daa
mov
ret
stc
mov
xor
add
pop
pop
aaa
xor
adc
arpl
jnp
imul
push
and
testl
pop
or
cmp
dec
and
push
sub
sbb
adc
adc
in
adc
add
or
rclb
add
pushf
sub
push
and
out
adc
add
add
add
and
lcall
mov
sbb
push
mov
and
and
pop
jne
clc
mov
pushf
jp
test
push
cmp
push
xchg
test
decl
gs
call
je
xor
jae
push
data16
jmp
call
add
add
add
add
push
mov
jnp
stc
inc
and
mov
sti
and
test
psubsw
in
lahf
mov
inc
mov
out
aaa
and
pop
adc
xlat
push
loop
push
in
aaa
loope
jge
fwait
sub
inc
mov
iret
call
stc
xchg
popf
ja
xchg
popf
xor
xchg
xchg
push
test
cld
clc
dec
add
add
stc
pop
stc
ss
cld
loopne
cmp
jmp
push
inc
and
adc
iret
push
push
add
loope
add
insl
outsb
pop
insb
pop
jmp
fildll
mov
test
push
jne
jne
dec
lcall
mov
xchg
mov
inc
push
jne
inc
shll
add
dec
nop
lret
mov
mov
cwtl
cmp
sbb
mov
sti
xor
es
sti
cltd
inc
lds
out
xor
lcall
add
cltd
inc
or
fs
push
xchg
lcall
add
mov
push
mov
sub
lcall
push
push
sti
enter
loope
mov
add
sbb
dec
std
sbb
adc
mov
rorl
sbb
stos
fwait
add
loop
push
push
mov
sub
xchg
sub
cmp
cmova
push
push
inc
and
or
les
dec
orl
lcall
clc
inc
and
imul
adc
jg
inc
and
push
xchg
and
std
clc
loop
and
sub
out
jp
fs
sbb
clc
aas
jae
sbb
push
lea
add
outsl
xchg
scas
push
jo
mov
add
outsl
dec
push
and
int
xor
add
clc
fwait
movsl
sti
test
fildll
inc
test
push
add
outsl
sbb
test
daa
test
mov
iret
jecxz
sti
insl
mov
fisttpl
enter
adc
sti
pop
cli
shr
xor
sti
jns
adc
push
movsl
in
mov
pop
call
filds
pop
aas
clc
test
jbe
cmp
sbb
or
add
sbb
pushf
out
mov
std
add
push
shrb
pop
insb
aaa
aam
cmp
outsl
test
js
jmp
fwait
xchg
mov
jg
add
or
insl
pop
mov
mov
movsl
filds
pushf
add
or
xchg
jmp
daa
and
sti
ret
sbb
jmp
push
call
bound
mov
fwait
add
bound
cmc
adc
push
push
mov
add
outsb
push
call
fs
add
cli
sar
bound
mov
addb
out
or
xchg
jb
jl
jb
outsl
aaa
push
pop
adcb
mov
add
cmp
insl
int
test
jmp
imul
pop
sub
mov
cs
scas
fidivrs
cmpsl
ficoms
and
push
add
sbb
call
xor
repz
aad
adcl
or
xor
test
adc
sbb
push
and
icebp
movsl
inc
add
mov
add
add
add
add
incl
cmp
cs
rolb
clc
insl
push
mov
imul
test
mov
faddl
gs
dec
test
test
add
xchg
fidivrs
repz
adc
sbb
insl
das
or
pop
mov
pop
mov
add
adc
add
add
add
and
xchg
or
mov
divl
decb
out
xchg
pop
push
cmpsl
xchg
sbbb
aam
sub
aad
jg
lret
fidivl
call
push
push
jp
test
jne
xchg
fidivl
inc
xchg
icebp
jl
in
outsl
sbb
push
std
out
mov
push
jg
aaa
xchg
sub
sub
call
add
add
add
mov
fs
sub
sub
adc
mov
inc
test
cmp
outsb
arpl
adc
rorl
jmp
add
je
jl
call
jb
fdivrl
inc
je
clc
push
fimull
insb
xchg
xor
mov
out
jl
jecxz
pop
lds
ds
in
fiaddl
stc
jb
pop
ljmp
push
cmp
in
cli
imul
add
jl
and
jo
jne
jb
and
dec
dec
mov
pusha
cltd
pop
jle
xchg
jae
jl
jl
inc
cmp
es
pop
stos
lods
pop
ret
bound
les
add
add
push
mov
je
test
push
sub
sahf
rcrl
pop
pop
je
pop
lret
call
pushw
and
out
mov
femms
push
pop
mov
lret
inc
je
xchg
call
mov
cmp
mov
sub
idiv
xchg
mov
sub
xchg
jnp
addr16
nop
dec
adc
daa
sti
add
sbb
xchg
pusha
fildl
test
add
or
jne
jns
inc
or
das
sti
cmpsb
pop
nop
inc
fdivrl
fsub
push
lret
cltd
sti
je
adc
cli
pusha
mov
pop
adc
add
outsl
or
mov
or
call
jge
call
pop
dec
push
inc
add
stc
pop
and
clc
pop
and
push
outsb
dec
sbb
lret
xchg
popf
arpl
xor
sbb
and
stos
out
fidivs
in
ret
idivl
push
in
mov
mov
xchg
mov
out
push
int3
push
pop
fists
adc
push
and
cmp
icebp
jge
repz
adc
fiadds
or
pushf
or
wbinvd
xlat
call
pop
std
jge
or
pop
xor
loope
imul
xchg
and
sub
push
bound
xor
js
insb
mov
int
jl
cmp
mov
lea
test
jbe
jne
sub
add
cli
mov
cld
mov
call
fs
xor
adc
xchg
sbb
loope
in
loop
fmul
daa
inc
jmp
mov
loope
jmp
jg
loope
cmp
add
je
in
movsb
mov
inc
xchg
fadds
push
sub
add
and
sbb
popf
cmpl
sti
or
mov
data16
adc
popa
mov
and
test
adc
test
inc
insb
dec
push
fs
aas
adc
mov
mov
call
cli
adc
lds
mov
mov
cmp
mov
test
lahf
idiv
sub
and
clc
lret
mov
rol
call
incl
mov
mov
push
insb
jmp
and
insb
lock
out
fcoms
and
repz
jo
cmpsb
imul
or
dec
das
sbbb
mov
repnz
sti
packuswb
ljmp
cli
out
jmp
and
shlb
stc
xchg
rcll
jo
adc
jge
mov
pop
jo
push
pop
inc
cmp
add
ret
test
sbb
add
aam
addl
iret
movups
or
fiadds
call
push
add
out
push
adc
outsl
cld
ss
push
stos
adc
aas
fiadds
xchg
scas
add
push
mov
sahf
and
insb
push
jmp
test
out
fidivrl
sbb
add
mov
xchg
out
adc
repz
cmp
push
adc
or
adc
std
add
insl
aas
jp
jnp
sub
add
add
xchg
out
adc
ljmp
imul
sub
pop
xchg
testb
adcb
test
add
add
add
sti
imul
cmp
jle
add
sti
lock
mov
sbb
mov
adc
adc
ja
push
lcall
shll
popf
pusha
popa
jbe
xchg
repnz
adc
sbb
push
cmp
je
subb
xor
sti
jge
ret
ss
add
adc
test
mov
sbb
sub
pop
rorb
scas
ret
xlat
outsl
popa
adc
je
and
xchg
repnz
es
jmp
adc
outsl
clc
lods
decl
push
xor
jnp
mov
test
and
popa
add
ucomiss
pop
repz
cli
push
jg
add
push
xchg
xorb
test
scas
aas
mov
adc
sub
je
sub
cmp
sub
out
stos
stc
in
fcmovu
stos
mov
into
stos
jmp
mov
ret
cs
cmpsl
add
cmpsl
add
add
push
cmp
add
int3
xchg
mov
leave
into
pop
cmp
cltd
imulb
fmull
jo
aam
popa
dec
fmull
push
std
ficoms
dec
xchg
cmp
cmc
add
fistpl
stc
lcall
ljmp
test
std
mov
jo
push
out
daa
cld
jl
cmc
mov
bound
fistpll
loop
mov
sahf
in
or
fldl
enter
and
jmp
adc
cmp
nop
xor
fimuls
push
mov
mov
lahf
pop
lds
xor
jb
cmp
aad
mov
xchg
pop
inc
add
sti
popf
std
pusha
daa
cmp
nop
and
in
pop
cmp
call
cmp
sti
and
add
add
add
sub
divb
outsb
cmp
jmp
xchg
sti
push
inc
adc
add
loope
cmp
sbb
pop
jnp
addb
int3
add
mov
lock
push
sub
add
jbe
repz
xchg
sbb
mov
pop
sbb
jmp
jle
repz
popa
sbb
rsqrtps
add
loopew
xor
lahf
in
je
hlt
push
and
imul
jae
xor
and
clc
inc
adc
incl
jo
testb
idivb
and
push
mov
jge
xchg
repz
jmp
mov
std
mov
add
stc
roll
clc
jge
or
or
clc
mov
loop
outsl
les
repnz
mov
mov
incb
cmp
push
js
stc
add
push
in
pop
jg
push
sub
mov
cltd
sub
or
inc
add
add
stc
add
clc
xchg
jecxz
ja
idivl
flds
faddl
ljmp
popf
sub
jle
dec
add
pusha
sahf
iret
jge
and
mov
sbb
or
pop
or
outsb
sahf
ja
loop
dec
mov
call
fdivl
add
cmp
ljmp
xchg
add
sbb
divb
add
sti
icebp
jnp
aam
lds
or
stc
adc
xor
add
and
cmp
cwtl
lret
insl
aad
mov
push
and
xchg
pop
mov
xchg
fwait
dec
idivb
jnp
mov
cmp
cwtl
ret
rolb
fucom
and
je
xchg
add
add
lret
cmp
pop
add
repnz
test
or
mov
xchg
test
or
mov
pop
addl
mov
mov
data16
loope
push
and
fbstp
jl
push
push
test
mov
and
sbb
je
sbb
test
dec
rorb
movsb
test
add
js
or
in
cmp
jg
lahf
push
popa
adc
dec
clc
popa
jmp
mov
jb
xchg
orl
ror
in
sti
sub
ret
je
hlt
inc
adc
stc
incl
jo
repnz
ds
or
jne
cli
jmp
hlt
inc
and
in
and
sti
mov
add
and
pop
jae
xlat
rolb
add
add
add
add
push
clc
test
jno
jge
jl
inc
out
inc
adc
push
mov
jge
xchg
sbb
test
fiaddl
ret
push
std
mov
ljmp
sub
pop
mov
lods
sbb
inc
or
imul
sahf
and
sub
stc
push
add
pop
inc
fdivl
stos
sub
sbb
icebp
add
add
mov
jnp
in
add
mov
incb
mov
stos
add
push
mov
and
pushfw
std
loop
adcb
insb
popa
add
jmp
loope
push
cli
scas
insl
pop
inc
jmp
jg
lahf
jge
ret
adc
push
outsb
jb
scas
mov
jo
jbe
flds
mov
mov
mov
stc
xchg
iret
imul
mov
cld
push
add
ja
add
sti
in
out
fcompl
lock
mov
push
insl
fidivs
repz
xor
sbb
sbb
das
cli
push
jmp
imul
sti
add
out
dec
and
pop
fmuls
or
add
add
add
push
cltd
repz
inc
or
pop
fstpt
or
pop
divl
add
or
in
aas
insl
push
addb
sti
jmp
jo
pop
jmp
sbb
mov
ja
subl
pop
test
insb
sti
decl
or
jge
xor
lds
out
lods
mov
orb
stc
pop
add
jbe
mov
pop
mov
clc
hlt
inc
add
dec
jg
mul
aaa
and
jne
pop
mov
out
call
ds
add
cmp
push
jg
jge
adc
and
xchg
andl
fstpt
xor
push
shl
jmp
ss
jbe
clc
mov
xchg
and
jmp
sarl
adc
testb
add
sti
lahf
jnp
incl
insl
out
adc
fwait
movb
jno
ret
fstpl
sbb
aas
dec
imul
clc
push
popw
fmull
jmp
pushf
dec
push
jmp
fisubl
xor
mov
lahf
sub
add
add
add
push
aad
jmp
into
into
hlt
inc
sbb
ret
cmp
mov
cmpb
jmp
cmpb
sti
out
adc
adc
inc
imul
je
or
movb
lret
outsb
xchg
dec
ss
dec
jg
in
sti
push
adcb
add
add
or
add
cmc
cli
sahf
add
and
orb
push
inc
idiv
push
inc
ljmp
xchg
inc
subl
loope
jmp
div
rclb
adcb
sbb
pushf
jg
sti
add
pushf
dec
nop
add
xchg
push
add
cmp
outsl
test
add
push
call
rcrl
add
popa
push
add
cmp
data16
cmp
jo
xchg
adc
or
pusha
xchg
idiv
xchg
lcall
and
or
xlat
add
add
idiv
push
ror
cmp
outsl
jle
ljmp
data16
and
pop
add
jg
cmp
divl
fsubrp
cmc
sarl
cld
call
rcrb
repnz
clc
jge
test
jle
popa
andl
popa
shll
mov
daa
mov
cmp
mov
jge
lcall
sahf
idiv
daa
in
and
xchg
pop
notl
stc
js
sub
std
or
idiv
call
mov
adc
mov
add
add
add
stc
jns
mov
dec
pushf
xchg
cmp
adc
push
mov
mov
push
bnd
sbb
add
mov
addb
xor
div
loope
mov
in
fidivrl
xor
xor
pop
inc
in
cld
lret
testl
adc
fcompl
js
leave
idivb
outsb
xchg
pushf
stos
out
fistpl
filds
clc
xchg
cmpsb
mov
adc
out
pop
repnz
sar
or
stc
xor
cmp
jecxz
sti
push
bound
or
arpl
adc
outsb
push
jne
out
hlt
notl
mov
sbb
rcrb
xor
pop
inc
call
add
add
add
mov
bound
test
sti
scas
notb
sub
xchg
cmc
mov
or
jb
push
jmp
add
lcall
adc
push
inc
cli
sbbb
testb
push
mov
sbb
cmp
push
stos
test
add
fists
inc
mov
mov
add
add
add
mov
sbb
rcll
inc
je
xchg
call
je
xchg
call
paddq
ds
dec
jle
push
xor
xlat
je
ljmp
dec
xlat
je
ljmp
inc
xabort
in
adc
or
inc
fs
cmp
dec
dec
aaa
je
mov
or
add
add
add
insl
jp
icebp
insl
inc
ds
out
cmp
adc
or
shll
in
out
xor
sarl
add
hlt
mov
movb
push
mov
addr16
mov
out
stc
pop
or
insl
lea
inc
mov
subb
clc
adc
add
outsb
mov
cmp
outsb
clc
or
xor
mov
add
clc
push
outsl
repnz
add
add
add
add
adc
dec
cs
adc
add
xchg
inc
or
imul
mov
sbb
add
xchg
adc
add
imul
pop
jmp
insb
lahf
push
jmp
clc
leave
xchg
aam
in
imul
or
insb
inc
push
jmp
clc
sbb
mov
add
add
add
or
addb
jmp
adc
int3
clc
add
das
repnz
cmp
push
add
or
add
jnp
inc
fidivs
or
sti
clc
adc
imul
jmp
jecxz
std
call
sti
push
adcb
or
add
rorl
add
cmp
loopne
jmp
imul
rcl
fst
mov
add
and
fwait
pop
icebp
sti
push
ret
jmp
sub
fcoml
add
pop
dec
adc
jp
cmp
imul
pop
cmp
cmp
push
test
ficoms
pop
test
add
dec
nopl
cmp
add
add
add
les
jmp
orb
idiv
or
sub
aad
inc
sahf
xchg
jbe
pop
mov
push
lds
push
bswap
inc
add
xchg
xchg
mov
and
psubb
mov
inc
pop
push
xchg
or
xchg
clc
outsl
jg
repnz
push
in
cmc
push
je
aad
and
repz
add
add
add
add
or
jnp
inc
call
insl
sbb
cs
or
jnp
push
test
add
in
add
and
clc
inc
and
jns
xchg
jns
xlat
in
xchg
xchg
adc
test
and
xchg
push
out
mov
xchg
mov
jg
les
repz
mov
add
push
outsb
fcomp
or
fldt
jmp
jg
pop
or
je
pop
jg
xchg
dec
int3
repnz
jp
clc
push
and
clc
cmp
lret
pop
sub
bound
jg
fsub
sub
xchg
xlat
add
sub
clc
cmp
in
mov
subl
mov
out
push
enter
xchg
mov
add
add
add
add
sti
cmpsl
xor
fs
sahf
mov
lret
aad
or
sysret
popf
mov
sarl
mov
fs
repnz
outsb
xchg
testl
pop
jmp
fs
cltd
xor
sti
push
out
insl
sahf
daa
mov
daa
popl
sti
testb
add
add
add
add
or
call
in
popa
adc
adc
add
or
decl
xchg
add
mov
addl
icebp
push
push
adc
pop
mov
xchg
mov
in
push
sti
orl
xchg
sbb
push
std
inc
fildl
orps
icebp
decl
and
aas
push
cli
jg
insb
push
xchg
adc
and
shl
in
mov
cltd
stc
outsb
sahf
test
fldcw
sti
call
push
cli
jg
imul
loop
pmuludq
cmc
enter
pushl
xor
jns
dec
popf
std
add
jl
jl
inc
inc
ss
mov
cmp
jne
xchg
jl
mov
pop
shlb
sub
pop
jmp
repnz
mov
sbb
jl
sti
out
decb
push
or
ja
mov
in
mov
outsb
or
in
jl
jb
and
js
or
and
adc
jge
jb
jg
push
pop
arpl
lods
jp
pop
outsl
shlb
into
or
xchg
bnd
pop
repnz
and
jae
call
jnp
xchg
xor
add
add
add
call
int3
psllq
stos
ret
nop
mov
pop
jb
mov
in
neg
and
arpl
rep
daa
andb
dec
lret
pop
xor
scas
push
outsb
rcr
add
andb
adc
aam
push
mov
pop
mov
jmp
jp
repz
lss
add
add
add
pop
or
sti
jge
and
jnp
add
aaa
adc
js
hlt
cmpsb
mov
inc
jmp
insl
cmp
or
mov
cmp
andb
sti
data16
ss
pop
inc
call
sbb
or
pop
sti
jbe,pt
pop
insb
push
jecxz
ss
cmp
mov
cmp
js
je
test
adc
mov
pop
push
mov
and
lea
push
sub
add
mov
dec
and
jmp
mov
ss
lods
ss
cmp
repz
repz
adc
sahf
mov
cmp
and
fdivrs
minps
idiv
inc
mov
dec
mov
add
add
add
add
and
dec
loop
push
fcompl
cmovge
or
mov
idiv
clc
hlt
mov
or
xchg
inc
inc
stc
lahf
inc
inc
sti
outsl
jg
std
mov
ljmp
jl
jo
dec
in
or
jmp
jae
pop
sbb
mov
inc
aam
lret
push
test
sti
or
add
imul
js
clc
xchg
or
jns
out
lret
in
fisubl
hlt
insl
adc
shll
ret
fs
xchg
or
mov
outsl
loopne
inc
iret
xchg
and
cmp
add
imul
arpl
jge
pop
je
push
dec
or
add
add
add
pop
sbb
sbb
pop
inc
sahf
or
cmpsl
pop
jnp
out
clc
pop
push
inc
fists
lea
insl
xor
pop
imul
adc
pop
ja
pop
movb
push
dec
dec
adc
jno
lds
outsl
ret
push
add
adc
fs
pop
sti
jmp
fdivrs
adc
mov
test
or
incb
jmp
imul
pop
sti
imul
pop
sti
imul
pop
sti
mov
hlt
add
popf
aam
imul
push
xchg
adcl
lret
adc
jmp
adc
push
xchg
decl
dec
sti
push
mov
flds
add
ret
or
dec
orb
add
add
add
add
push
je
mov
pop
sbb
jae
out
add
pop
out
cltd
fildl
add
jmp
shlb
add
shl
cs
or
int3
cli
call
mov
ljmp
shr
mov
idiv
stos
push
pop
and
jl
dec
mov
call
getsec
fadds
add
add
add
mov
add
sbb
add
cmp
shlb
pop
jno
add
ss
sub
adcb
sti
js
add
add
test
xchg
sub
mov
mov
cmp
or
js
pop
or
clc
jge
add
mov
enter
fwait
dec
add
into
ds
cmp
incb
aas
push
pop
aaa
mov
ds
incl
dec
cmpl
mov
lds
test
pop
call
or
dec
dec
je
push
hlt
add
sub
je
inc
push
cmpsl
and
jle
dec
and
lock
jmp
or
leave
push
dec
cli
jae
fucom
cmp
clc
jae
mov
add
add
add
add
push
dec
push
fmuls
jno
scas
jg
and
push
lret
and
or
pop
or
pop
dec
jg
int3
and
ljmp
imul
loopne
imulb
sbb
add
sbb
mov
mov
adc
subb
call
sub
xor
pop
test
and
push
negl
jmp
add
add
add
add
cli
lcall
out
xlat
jne
pushf
push
int
pushf
ret
ret
pop
jb
out
mov
int
adc
xor
xchg
adc
and
cli
cltd
pusha
movsl
stos
dec
xchg
loopne
jg
inc
sti
add
repz
lahf
jl
lds
fstl
jmp
mov
std
rcrl
adc
lods
add
push
addb
xchg
or
repz
inc
sahf
shrl
cltd
cli
lea
pause
add
cli
lea
repz
popa
push
addb
test
into
cmp
xor
testb
push
jecxz
stos
pop
push
and
push
add
mov
cmp
or
clc
xchg
add
clc
aas
add
dec
jns
sti
and
or
pop
ljmp
add
xchg
sbb
loopne
inc
or
sti
mov
cmp
or
sti
lahf
fdivrl
sbb
insb
and
sti
jb
sbb
inc
sbb
divl
lcall
jo
sbb
inc
idiv
inc
pusha
and
add
add
in
cmp
aaa
nop
jo
mov
add
out
add
mov
daa
add
add
add
add
add
fisubl
add
fisubl
add
fsubs
add
fldenv
add
fldenv
add
cmpsb
add
cmpsb
add
fisubs
add
fisubs
add
dec
fisubs
add
cmpsb
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fdivrp
sub
jo
sub
call
inc
sub
xchg
inc
sub
lods
inc
sub
ja
sub
xchg
inc
sub
insb
inc
sub
inc
inc
sub
and
inc
stos
sti
cmc
aas
stos
sti
adc
sti
ret
sti
or
add
add
add
add
scas
inc
stos
sti
dec
stos
sti
fisttpl
sti
mov
dec
stos
sti
inc
dec
stos
sti
mov
sti
jle
stos
sti
and
sti
mov
push
sub
daa
inc
sub
push
dec
sub
addr16
sub
mov
jb
jecxz
mov
sbb
jecxz
sbb
push
dec
rcrl
orl
dec
and
mov
dec
add
adc
push
dec
ret
sbbl
xchg
dec
scas
dec
lds
ror
cwtl
pop
out
push
sub
je
sub
add
mov
jp
jne
xor
gs
shr
les
ret
push
dec
or
dec
xchg
stc
jmp
pop
decb
or
cmp
neg
es
add
push
cld
icebp
stc
dec
repz
lret
jg
repnz
aaa
repz
out
insb
sti
test
inc
push
dec
sub
push
jae
and
push
js
cs
das
mov
cmp
leave
cmpl
fnsave
and
jecxz
cld
jle
aas
incl
leave
push
sti
jg
jae
jbe
in
sub
cltd
xor
mov
shrl
int3
push
add
jmp
fisttpl
ret
insl
loope
push
xorl
dec
fdivp
xlat
mov
jmp
es
pop
in
in
mov
aaa
stc
aaa
ret
mov
push
xlat
and
pop
fists
iret
add
adc
in
shll
xchg
xor
fists
jp
pushf
in
mov
xor
jecxz
mov
pusha
mov
cli
pop
xor
adc
imul
out
aad
out
fcoml
jb
lret
pop
loopne
mov
xor
lcall
xchg
and
cmp
adc
sti
cmpsb
hlt
push
jb
into
push
inc
addb
enter
cli
xchg
mov
sti
mov
adc
pop
add
iret
xchg
in
loope
push
add
or
xchg
or
mov
and
push
sti
adc
push
je
test
add
dec
or
int3
ds
rolb
push
shl
addb
int3
xlat
jae
outsb
adc
mov
sub
imul
add
sbb
loope
out
fdivr
sarb
add
rolb
pop
enter
sub
adc
hlt
mov
dec
divb
addb
cmp
or
add
add
test
pop
push
inc
jmp
rol
push
dec
mov
enter
adc
popa
push
test
insl
sbb
sti
or
cmp
incb
push
dec
hlt
js
pop
jb
add
push
add
add
add
cs
pop
or
js
insb
je
add
movsb
cmp
ss
sti
pextrw
inc
pop
cmp
push
cmpsl
mov
xchg
out
sub
jge
lock
repz
or
scas
pop
xchg
inc
incl
fmull
mov
push
jae
push
sti
or
push
sub
and
es
xchg
pop
add
or
jp
iret
jbe
pushaw
push
xchg
std
pop
pop
push
cmp
lahf
and
and
and
and
popf
and
cmp
or
and
sub
ret
jo
notl
lock
mov
or
jg
ret
mov
dec
repz
xor
lock
repz
jp
repz
pop
lock
push
add
lea
inc
pushl
xor
sbb
sti
or
out
push
je
xor
push
lcall
push
jo
hlt
pshufw
adc
mov
call
les
lock
lahf
sbb
insb
xchg
sbb
rorb
arpl
xchg
ds
call
add
add
add
test
dec
ja
call
pop
call
bound
xlat
add
push
jmp
adc
into
and
jnp
lea
dec
and
pop
lods
aas
stc
je
add
shrb
gs
imul
push
int3
mov
add
add
adc
xchg
pop
or
adc
and
mov
and
push
adc
pop
or
lcall
rorl
rcrb
push
pop
call
mov
add
aam
add
clc
and
das
rolb
jnp
out
sub
fmull
scas
lret
leave
mov
nop
imul
je
std
clc
enter
repnz
dec
mov
add
add
add
add
jbe
adc
mov
and
mov
fmull
dec
push
add
test
pushl
aam
iret
mov
out
sub
jge
lock
and
xorl
push
xor
mov
or
fcomp
push
pop
mov
sub
repnz
push
jmp
pop
add
lret
jmp
mov
or
jmp
pop
jbe
jmp
sbb
cli
dec
jns
dec
and
popl
les
push
and
jo
clc
push
fs
lea
mov
ficoms
pop
in
pop
jmp
jo
rcrl
add
clc
dec
xlat
clc
pop
je
jg
pop
insb
xbegin
and
inc
dec
sub
lods
out
push
push
pop
inc
clc
aas
mov
shr
jae
sti
cltd
rclb
rcrb
shlb
cltd
sub
inc
cmp
rcr
lahf
add
sti
fwait
je
sub
cmp
xchg
outsl
sub
and
add
add
add
pop
push
fs
cmp
scas
add
test
int
cmp
jns
cmpb
and
xchg
inc
dec
pop
dec
subl
xorb
inc
lods
dec
add
jmp
cmpsb
inc
and
xchg
cmpsb
dec
and
scas
lods
outsl
popa
pop
test
int
sbbb
frstor
add
add
add
add
jge
push
cmpsb
dec
and
mov
outsl
and
test
int3
push
sbb
adc
imul
pop
xchg
adc
filds
mov
xor
cli
mov
clc
das
andb
cli
fs
add
das
andb
cli
or
sub
lods
je
sarb
mov
mov
call
sbb
and
lds
dec
ret
rolb
movsb
adc
das
cmp
or
clc
inc
push
leave
push
cwtl
and
xor
incl
aad
add
mov
je
sbb
nop
sti
mov
jmp
lock
rolb
imul
jmp
ret
push
pop
mov
cmp
or
scas
cmc
add
clc
negb
dec
xor
clc
pop
clc
push
jmp
ret
ja
and
in
pop
rcrb
negl
addl
add
push
jae
ja
push
add
fwait
cmpsl
add
push
dec
push
jge
or
shrl
xor
push
je
fcomi
sbb
dec
xchg
push
add
mov
daa
xchg
mov
jmp
mov
sbb
add
add
add
and
jg
and
mov
call
and
testb
das
aas
jle
je
jge
and
jl
mov
cmpsl
es
fisttpll
add
bound
sub
incb
out
jnp
cwtl
dec
lds
iret
rcll
or
add
cmc
out
sub
add
add
add
rclb
xor
call
in
pop
loopne
or
pop
shl
dec
loope
add
adc
pop
add
pop
mov
call
mov
pop
call
sbb
js
rorb
lea
orb
mov
fcomip
pop
outsl
push
push
mov
hlt
push
mov
in
cmc
movsl
inc
hlt
out
sub
clc
add
pop
test
ja
clc
sub
xchg
add
sub
les
xor
push
jno
das
mov
pusha
nop
inc
shlb
mov
cmp
cwtl
adc
jge
or
imul
dec
jmp
inc
hlt
mov
jno
dec
mov
sub
push
mov
mov
add
cltd
add
xor
ljmp
fcmove
jmp
pop
mov
inc
lods
sub
cmp
mov
jmp
ljmp
cmp
cmp
cmc
xchg
ds
xchg
out
or
add
call
pop
push
push
mov
add
in
mov
push
outsb
int
fmull
outsb
xchg
xor
pop
test
dec
ret
clc
es
sti
jecxz
lahf
xor
lea
aam
out
jge
add
stc
pop
cli
sahf
popl
jo
sbb
fldl
int
out
jo
test
and
xchg
cld
cmp
call
jecxz
mov
sti
loope
push
cmpsb
push
push
test
jbe
je
jo
out
dec
xchg
lret
push
cli
or
mov
sti
loope
std
xlat
xor
add
stos
pop
push
outsl
add
push
pop
sti
dec
push
inc
call
add
adc
jbe
fists
adc
xor
inc
test
dec
mov
testb
pop
and
bound
adc
xor
loope
push
dec
sbb
arpl
add
sbb
mov
adc
add
lret
jg
nop
daa
andb
add
dec
or
adc
pop
xchg
aam
pop
sbb
push
sti
mov
clc
cmc
cmp
mov
dec
or
pop
jae
mov
add
sub
adc
jae
mov
movsb
adc
mov
lret
adc
test
add
arpl
or
clc
das
decl
je
add
call
jne
sbb
sti
das
jmp
xchg
jne
clc
das
mov
nop
test
add
pop
mov
and
sahf
scas
push
lret
pushf
push
adc
addr16
sub
or
lock
pop
iret
ds
sbb
xor
jo
lods
sub
jl
mov
push
insb
mov
adc
add
cs
es
push
insb
inc
repz
ficoms
mov
adcb
add
jg
add
push
sbbb
add
add
add
clc
mov
ret
xor
jle
insb
mov
jmp
sub
mov
mov
in
rcl
ret
jg
add
jbe
and
cld
push
add
cmc
push
pusha
cmp
pop
push
pop
mov
test
adc
adc
shll
cli
out
pop
adc
jae
inc
cmc
pop
sbb
and
imul
jae
repz
sti
push
call
sbb
cld
xchg
sarb
or
aad
sbb
sti
hlt
cmpsl
daa
inc
jmp
in
out
push
mov
sub
lea
fists
addr16
sti
mov
adc
pop
adc
inc
pop
notl
add
add
add
cmp
movsb
shll
jb
dec
incl
loopne
mov
pop
stos
cltd
mov
adcl
lock
add
adc
cmp
cld
dec
inc
pop
inc
loope
adc
rcll
mov
out
je
mov
call
jp
xor
leave
jae
sub
out
clc
add
je
iret
or
imul
add
add
add
add
inc
call
jae
imul
sbb
sub
mov
sbb
push
xlat
cmpsb
les
rolb
push
mov
add
or
stos
cld
scas
dec
movsl
dec
lret
and
sbb
call
or
mov
jge
orl
sbb
or
sbb
add
insl
std
clc
push
jmp
ret
xchg
icebp
sub
mov
cmp
push
or
lahf
xchg
pushl
lock
stc
aad
mov
stos
mov
lock
jo
aad
into
or
xor
mov
push
mov
mov
sbb
add
stos
sub
sub
hlt
sti
call
fwait
xchg
rorb
lock
inc
call
add
inc
or
xlat
mov
lahf
add
adc
pop
inc
and
cmp
fstl
test
js
sbb
pop
out
movsb
in
mov
xorb
mov
negb
or
pop
cmc
add
test
inc
int
ss
stos
dec
push
and
mov
push
mov
and
aam
push
inc
jmp
scas
or
sbb
hlt
das
adc
add
sbb
ja
lahf
lock
notb
lods
inc
cmp
cs
dec
lret
outsb
or
aas
sbb
inc
ret
adc
sbb
rclb
divb
push
notb
imul
sub
push
lret
push
ss
notl
lcall
je
and
lods
push
ja
leave
outsb
adc
push
or
cs
divl
enter
push
sti
adcb
jae
insl
divb
xor
mov
jae
test
dec
adc
cmpsb
aad
mov
add
mov
sbb
ds
pop
aas
fdivr
cli
in
dec
dec
jne
jno
push
add
pop
cmp
mov
add
xchg
push
enter
lcall
and
adc
in
cmc
aas
clc
mov
dec
test
inc
add
aas
call
or
add
ss
dec
sti
rorb
call
add
add
add
clc
xor
xchg
call
and
clc
push
jmp
add
popa
xlat
pop
clc
dec
pop
test
xchg
jmp
aaa
or
call
xor
stc
pop
pop
rolb
loope
jle
sub
jl
push
mov
add
pop
or
xlat
cmp
dec
cld
xorb
add
repz
or
addb
push
mov
out
jo
mov
xlat
pop
inc
jmp
inc
lods
push
stos
outsl
xor
std
fcomip
cli
cmc
xlat
idiv
fstp
notb
sub
lods
stc
mov
sub
jne
in
call
insb
and
or
stc
cmp
xchg
mov
pop
mov
add
add
add
adc
dec
std
xor
aad
add
outsb
add
xchg
daa
mov
add
out
in
add
aas
add
adc
ret
push
sti
mov
mov
add
testb
insb
inc
mov
lods
sbb
popf
pop
sti
push
push
sub
adc
jnp
sub
arpl
in
adc
add
add
add
add
jecxz
test
rorl
and
je
xorb
push
add
aam
push
push
test
add
arpl
add
dec
push
sbb
add
test
addr16
jb
sti
sub
js
cmp
les
xor
lcall
stc
cmp
add
add
add
add
adc
push
ds
ds
jle
rolb
sti
leave
aad
insl
stc
cmp
ret
mov
addb
sti
push
add
ds
xchg
addr16
mov
push
push
outsl
ds
jle
xor
cli
jmp
cmp
test
pop
sahf
mov
jge
cmp
repz
stos
sbb
inc
pop
mov
add
add
add
add
shr
pop
mov
call
fadd
lds
mov
lds
cmpl
push
pusha
enter
push
xchg
inc
notb
mov
aas
mov
arpl
fildl
and
dec
add
push
pop
sar
xchg
and
jnp
jmp
mov
sub
call
jp
xchg
add
add
bound
sub
jb
mov
bound
popf
bound
pop
xchg
mov
fwait
pusha
mov
lahf
inc
cmc
inc
aam
pusha
mov
xchg
lahf
inc
in
xchg
inc
dec
sahf
sahf
inc
leave
xchg
xchg
inc
cmp
xchg
inc
xchg
sahf
sahf
inc
or
pop
sahf
inc
orps
add
sarl
mov
xchg
leave
xchg
inc
lcall
sub
cli
add
inc
adc
shr
addl
jecxz
sti
imul
sbb
cmpl
imul
pop
add
mov
andb
xchg
pop
dec
push
filds
addb
arpl
push
push
arpl
int
call
cmpl
add
add
add
loopne
add
or
sarl
ret
ljmp
inc
lods
xchg
dec
cld
es
mov
sbb
sbb
jns
out
ret
std
jmp
jns
and
aad
pop
stos
idiv
leave
adc
add
xor
dec
call
mov
aas
inc
mov
movsl
mov
orl
jnp
shlb
add
add
add
clc
jg
jp
testl
jae
mov
dec
sbb
cs
xor
push
inc
jp
daa
sbb
int3
adc
xchg
cmp
negl
or
sbb
clc
push
jo
sbb
jo
sbb
popf
add
hlt
pop
cmc
lahf
cli
jle
add
repz
sti
lret
push
dec
loop
push
push
sub
rorb
add
cld
pop
stc
mov
dec
jg
repz
sbb
add
rcr
push
dec
and
push
mov
into
push
push
inc
mov
out
idivb
jl
repz
hlt
mov
add
mov
inc
outsb
in
ss
push
xor
pop
out
cmp
adc
idivb
outsl
mov
add
add
sub
test
add
lods
mov
cld
and
lret
push
push
sbb
aad
cmp
jmp
push
lea
sti
scas
test
push
cmp
add
std
mov
inc
jnp
or
out
imul
aaa
dec
loopne
aas
jmp
int3
cmpsb
aas
jmp
hlt
sub
add
mov
adc
jp
sub
inc
shll
adc
testb
xchg
inc
cmp
or
sub
adc
add
push
mov
lods
add
adc
pop
adc
stos
lds
daa
fdivp
fiadds
jg
into
test
bound
pop
test
pop
into
push
or
add
or
mov
push
mull
clc
inc
sbb
pop
sbb
into
sub
ret
mov
sarb
clc
cmp
jmp
clc
mov
clc
mov
and
ds
dec
mov
jb
fsubrl
cli
in
jmp
clc
mov
jl
sbb
jnp
fs
inc
sbb
push
inc
hlt
ljmp
add
add
add
adc
add
cmp
add
pop
sub
mov
and
sub
bnd
outsl
add
cmp
lret
sbb
push
sub
idivb
repnz
jg
mov
movb
xchg
push
fwait
js
repnz
push
mov
mov
add
inc
repz
jg
mov
add
add
add
add
add
push
push
mov
cmp
pusha
mov
sbb
jmp
and
loop
enter
jl
sti
enter
negb
xchg
and
jnp
sti
pop
mov
add
mov
cli
test
scas
call
adc
aaa
cli
and
sti
and
imul
add
add
add
add
push
push
push
sub
test
pop
pushf
sarb
aam
push
inc
jmp
push
int
lods
nop
push
add
cmp
add
mov
test
js
scas
jmp
sbb
pop
jmp
xor
and
mov
rorl
inc
sub
idivb
inc
add
push
pop
fs
pop
dec
mov
inc
and
mov
das
mov
jo
sub
adc
adc
sub
pop
add
pop
inc
sbb
sti
test
push
jae
push
xor
adc
sbb
in
dec
pop
test
dec
push
gs
jae
ljmp
jnp
lods
ds
mov
imulb
mov
data16
push
pop
popl
clc
sub
inc
data16
add
test
sub
fistl
mov
jp
or
das
lods
addr16
xor
ljmp
insl
decl
mov
xor
push
inc
xor
inc
sti
movsb
push
out
daa
sub
adc
mov
sbb
pushf
adc
or
add
add
mov
and
cs
sbb
jnp
and
sub
call
sbb
int3
adc
pop
stos
xlat
lods
xchg
and
out
and
out
int3
imul
ficoms
insb
fcomps
xlat
pop
push
push
inc
dec
inc
arpl
xchg
inc
in
fadd
inc
sub
inc
cli
add
cmp
mov
mov
cwtl
inc
add
mov
jne
xchg
push
repnz
imul
mov
out
cmp
cmp
ret
out
mov
aas
add
pop
dec
adc
call
orl
push
xchg
add
adc
sbb
jecxz
divb
lcall
imul
aas
test
add
add
bound
negl
call
filds
inc
jmp
push
and
sbb
scas
jmp
and
push
fiadds
or
add
and
jecxz
mov
imul
sbb
mov
in
add
test
add
dec
push
incl
mov
cmovo
jae
mov
sub
into
xlat
addb
sti
push
jno
adc
and
push
xor
repz
mov
cmp
and
cmovo
aas
notb
fucomi
jl
notb
ds
divb
xor
pop
push
cmp
mov
add
sub
incl
sbb
pushl
test
bound
sub
adc
outsb
decl
sub
adc
sub
jg
sbb
call
sub
decl
xor
mov
adc
mov
jmp
add
fildll
std
lods
xor
sbbl
loope
push
dec
mov
pop
jmp
add
adc
cmc
jb,pt
out
clc
xchg
in
sub
push
mov
div
ret
fcoml
add
sbb
or
mov
loope
jbe
fs
call
fdivrs
or
add
push
icebp
fisttpl
mov
inc
repz
repz
pop
cmp
dec
dec
mov
stos
push
out
cmp
xchg
cmp
mov
inc
aam
sub
adc
sub
mov
push
mov
imul
push
je
mov
push
xchg
aam
cli
jbe
shll
roll
push
imul
roll
xlat
ljmp
mov
rorl
lock
sub
jnp
pop
aaa
cmp
sbbb
add
ja
lea
leave
mov
dec
lea
pop
inc
and
push
nop
dec
cmp
and
xlat
sbb
sbb
lds
mov
fs
pop
je
leave
in
add
orb
add
cmovp
pusha
sbb
jmp
sub
ret
addl
inc
and
sbb
pushl
outsl
sbb
pop
pop
or
xor
insb
add
mov
je
out
popa
aas
mov
sub
decl
lcall
add
add
and
incl
aam
leave
push
popl
clc
sub
jae
mov
and
cs
pop
cs
ljmp
stc
or
push
jmp
stos
mov
clc
sub
pop
add
mov
mov
addr16
add
sarb
and
inc
call
repz
sub
clc
nop
stos
in
fwait
xchg
pop
int3
jnp
ret
pushl
sbb
mov
pop
addl
xor
and
jbe
rcl
sti
rorl
inc
pusha
mov
add
out
add
mov
sub
clc
push
fs
mov
lret
clc
scas
aam
testb
cmp
insl
enter
negl
mov
addr16
or
jmp
mov
add
push
add
cs
loopne
mull
xor
inc
sub
cmp
aam
outsb
and
cmpsl
jb
push
repnz
stc
jb
sub
mov
xchg
inc
add
xchg
enter
nopl
jmp
leave
xchg
stc
daa
add
xor
jmp
ja
sub
push
ret
movsl
aas
out
jns
sbb
sbb
push
add
lret
lea
popl
inc
addb
rolb
fisttpll
movsl
aad
test
adc
add
pop
pop
sbb
cmp
and
mov
mov
mov
decl
add
add
add
int
push
call
sbb
out
ljmp
test
adc
pop
mov
mov
push
jecxz
dec
adc
mov
push
adc
jmp
sbb
clc
mov
jmp
fnstsw
jnp
imul
pop
addb
addb
mov
mov
fisttpl
mov
out
lods
aas
sbb
or
clc
sub
clc
addr16
cmp
stos
clc
jl
stos
dec
scas
jecxz
xchg
and
and
cmp
daa
pop
dec
cltd
aaa
test
sbb
cli
in
mov
push
bound
sbb
inc
pop
mov
cmp
add
or
mov
and
sub
xor
cs
pop
add
ljmp
sbb
mov
lret
push
cmp
jbe
add
mov
cmp
jbe
jo
fmull
gs
push
jmp
xchg
clc
push
add
add
or
push
mov
dec
in
rcrl
aam
nop
dec
fldcw
ja
and
sti
jb
cs
xor
cli
cmpsb
pop
xchg
jp
sti
mov
inc
add
xlat
jns
ljmp
sbb
jae
adc
push
sbb
jb
cmp
push
add
incl
aas
adc
fdivs
push
push
mov
mov
pop
add
in
inc
imul
testl
pop
out
fcoms
in
add
mov
push
mov
dec
test
insl
sbb
adc
mov
xchg
out
jne
jmp
ret
add
jmp
mov
out
push
mov
push
mov
push
mov
mov
notl
or
idiv
cld
jp
clc
decb
inc
dec
or
call
iret
sbb
rcrb
enter
addr16
ljmp
mov
cli
cs
xchg
stos
inc
add
ljmp
sti
daa
or
clc
add
xchg
xchg
xor
cld
js
and
in
pop
shrb
sti
mov
mov
dec
cmpsl
lods
fsqrt
lahf
pop
mov
rclb
sub
je
cld
add
jne
mov
cmpsl
or
gs
filds
jmp
mov
aas
cld
mov
adc
mov
add
test
pop
subl
lods
movsb
mov
xor
imul
xor
sbb
test
dec
and
mov
cmp
sbb
data16
lret
add
hlt
xchg
cmc
shr
adc
test
add
add
add
xchg
pusha
and
push
xor
mov
daa
aaa
mov
subl
jmp
xor
add
sti
test
mov
pop
jmpw
cli
mov
sub
je
mov
sbb
mov
pop
and
push
adc
je
test
add
add
add
add
mov
cmp
outsb
iret
scas
nop
xor
sbb
sbb
in
addb
push
adc
pop
cmp
jb
mov
xchg
ds
cmp
inc
sbb
xchg
inc
add
xchg
cmp
dec
inc
cli
adc
mov
pop
sbb
push
add
xor
pop
dec
loope
pop
rorl
add
add
add
add
sub
ja
xor
jne
xchg
lret
mov
clc
clc
ja
jae
inc
add
aas
add
hlt
mov
hlt
int3
or
mov
cmp
mov
jg
call
out
xchg
xor
jl
mov
sub
jl
mov
cld
ljmp
leave
idivb
add
dec
xor
cmp
or
mov
xchg
std
enter
das
je
out
into
cli
add
push
inc
cld
fwait
and
je
call
shlb
jmp
mov
idivl
nop
add
jl
in
repz
in
repnz
roll
jp
add
mov
je
hlt
adc
icebp
jl
push
into
push
in
and
push
mov
shll
pop
clc
fwait
xchg
out
dec
cwtl
sti
mov
pusha
sar
jnp
jg
mov
xor
sbb
jle
cwtl
sarb
imul
out
scas
popa
push
jo
pop
sti
hlt
arpl
inc
jmp
cmp
sbb
pop
push
pop
add
cld
sbb
clc
xchg
sub
add
add
out
jp
cli
push
or
sti
and
nop
jge
cmc
mov
push
or
fistl
ror
adc
mov
fidivs
dec
mov
mov
loop
add
sti
jg
fidivrl
cwtl
aad
and
jl
ror
and
add
sbb
adc
pop
add
shl
dec
ljmp
mov
lcall
dec
call
mov
sti
orb
pop
lret
or
out
sub
aam
notb
adc
imul
jnp
jmp
dec
push
enter
xchg
notl
pushf
pop
jne
stos
out
add
xchg
inc
clc
jno
inc
hlt
add
dec
cld
jmp
call
jg
sti
mov
and
mov
enter
push
das
jnp
and
dec
sub
icebp
scas
dec
call
data16
xor
pshufb
jge
cld
inc
cld
fildl
sti
or
mov
mov
inc
js
push
stos
rolb
jge
sub
stos
jmp
gs
jle
leave
xchg
incl
jne
push
and
scas
or
or
ret
out
pop
sub
mov
arpl
mov
ret
mov
fprem
add
sbb
dec
lcall
sub
aad
out
xor
add
add
add
xchg
mov
or
inc
in
pop
sbb
fs
lds
outsb
sub
sti
xchg
pop
mov
sbb
jge
mov
insb
push
add
inc
cmp
xchg
sti
popa
sti
fcmove
and
or
fildll
xchg
sbb
pop
repz
adc
das
fsubrp
jbe
sub
cld
xchg
ret
push
and
pop
add
aas
xchg
xchg
cmp
jmp
xchg
inc
mov
cli
addr16
xchg
clc
and
push
xchg
aas
inc
push
sub
adc
mov
or
sahf
inc
add
xor
and
mov
rorb
rolb
and
dec
push
cmp
pop
xor
mov
mov
add
and
push
jmp
andb
xor
inc
hlt
jp
pop
movb
addr16
test
sbb
mov
testb
mov
mov
cmp
lret
aam
xchg
jne
pop
mov
cmp
int
xchg
fucomip
cmc
iret
push
pop
mov
adc
test
movl
add
jle
cli
push
lret
ds
cs
stos
sub
push
aaa
jmp
sti
and
xchg
loop
sti
lds
insl
add
mov
out
xchg
add
stos
push
xor
jne
stos
pop
mov
add
stc
inc
cld
ret
fwait
jae
aam
ret
cltd
insb
clc
and
clc
mov
cmp
ds
in
add
sub
jle
xlat
inc
add
jl
dec
jne
cmc
fildll
or
push
jmp
imul
add
test
jbe
xor
roll
and
fidivrl
pop
jmp
mov
add
pop
aam
cmc
push
jmp
push
adc
call
cmc
lods
into
rolb
clc
push
pop
inc
mov
pop
mov
ss
ja
xor
sbb
or
scas
pop
pushf
sbb
fistpl
inc
mov
sti
push
push
je
jl
je
cmp
out
sti
push
aaa
pop
insl
mov
sub
outsb
pop
mov
adc
stos
call
jl
rclb
xor
jmp
fs
or
or
jmp
add
out
cmp
pop
repnz
push
cmp
nop
call
jmp
add
cli
mov
mov
call
aaa
inc
jno
xor
add
add
call
mov
pop
orl
popf
call
das
mov
add
sarl
testl
sbb
mov
push
incl
shll
or
and
ficompl
mov
sub
and
pop
loope
lret
mov
sub
mov
es
and
and
loope
mov
mov
es
mov
adc
rcll
and
clc
inc
bound
or
cmpsl
dec
or
cmp
inc
loope
clc
inc
bound
jno
push
or
or
inc
loope
or
mov
or
add
cmp
pop
or
xor
stc
inc
bound
add
xor
add
cmpsl
jne
jae
xor
shl
and
xor
xor
lahf
fdivl
cld
mov
sti
xchg
daa
jae
inc
loopne
pop
data16
inc
shlb
lret
movsl
push
jmp
add
push
mov
add
sub
mov
xchg
and
outsb
insb
pop
xor
sub
add
or
pop
mov
jbe
inc
aaa
mov
daa
add
insb
outsb
xor
in
add
pop
jge
push
test
add
repnz
insb
sub
in
and
fsubrs
add
inc
test
mul
into
cmp
js
loop
stc
xchg
cmp
xor
stos
scas
popf
jmp
jns
cld
jmp
dec
jl
and
sub
adc
insb
mov
add
sub
ret
addb
sti
jmp
fcoml
xchg
cmp
cmc
sub
xchg
notl
int3
add
fwait
inc
add
pusha
xchg
and
aaa
sbb
mov
lcall
nop
add
jmp
mov
pop
add
add
pop
notl
aam
je
mov
sub
add
pusha
mov
addr16
pop
add
into
pop
and
and
add
cmp
call
scas
std
mov
popa
pop
jnp
jno
std
cmp
sbb
add
ret
popa
and
stos
cmc
decl
ljmp
fmuls
decl
push
pop
insb
sarl
sbb
add
sti
push
out
fcoms
movsl
popf
xor
mov
xchg
incl
mov
sub
mov
pusha
aas
fdivrp
fisttpll
xor
call
mov
dec
push
cld
pop
add
in
add
lret
sti
mov
push
hlt
les
test
and
adc
and
shl
bnd
and
pop
das
mov
xor
clc
insb
sub
jge
loop
sub
ret
and
push
cmp
je
or
lea
xchg
add
repz
sti
stc
aam
aas
adc
cwtl
stc
aas
xor
and
cmp
mov
add
out
xchg
cmpsl
add
cli
adc
clc
push
mov
and
in
out
dec
lcall
clc
aas
mov
sbb
mov
pop
test
and
mov
xchg
daa
add
cmp
inc
insb
aad
imul
clc
dec
sti
out
insl
rolb
mov
push
cmp
sbb
cli
adc
sti
push
in
test
adc
notb
add
mov
adc
sbb
out
test
subl
inc
cmp
pop
inc
outsb
or
push
cmp
fmuls
ljmp
add
add
add
cs
mov
inc
cmpl
mov
cld
cli
arpl
fwait
add
addb
sarb
inc
add
push
jmp
cmpsb
inc
and
ret
or
mov
jnp
fstpl
je
cmp
lea
dec
decl
lret
adc
xchg
ret
or
into
push
adc
lret
lret
test
add
push
sbb
mov
in
nop
inc
sbb
and
dec
push
outsb
lds
std
pop
call
mov
nop
in
minps
add
out
int
pop
out
or
add
jo
sti
mov
sub
jne
pop
sti
cmpsl
inc
sbb
jl
test
clc
out
add
icebp
test
loopne
incl
mov
popf
sbb
xor
call
je
xchg
imul
cwtl
das
andl
push
leave
adc
adc
sbb
pop
insb
aas
je
jo
repz
jle
push
sbb
mov
scas
cli
gs
and
ret
fists
mov
nop
xor
cld
icebp
xchg
sti
loope
add
sub
add
dec
aad
sub
idivl
xor
sbb
or
popa
stos
sbb
mov
nop
test
cld
xchg
mov
pop
and
stos
xchg
ja
mov
js
daa
cld
repz
push
jmp
pop
adc
insl
dec
cmp
mov
sar
adcl
test
add
add
add
pusha
jmp
bound
addl
cmp
add
enter
add
sbb
and
jbe
jae
push
pop
or
cmp
inc
push
adc
scas
imul
push
stos
notl
xchg
cli
xchg
adc
push
outsb
xchg
jmp
mov
dec
add
cmp
add
movsl
mov
movsb
xor
das
inc
push
mov
cld
call
out
push
out
in
bound
push
cmp
push
pop
je
scas
mov
jne
sahf
movsl
add
hlt
icebp
cmc
lcall
and
pop
out
jmp
add
scas
movsl
add
lahf
pop
sub
mov
xadd
ret
add
add
add
add
push
mov
dec
push
out
inc
cld
adc
jne
lcall
add
fchs
xchg
push
inc
addr16
push
mov
jne
nop
sbb
lods
out
ret
push
sti
or
insb
sbb
dec
add
cli
mov
dec
mov
addl
mov
cmp
mov
cmp
cld
dec
jae
cmpsb
or
ja
and
out
ja
xor
push
out
or
dec
lods
add
test
and
mov
add
andb
inc
xor
clc
push
pop
inc
mov
shll
push
push
js
xlat
outsl
jmp
lods
adc
adc
jmp
inc
and
cmp
test
call
in
jle
ret
jg
rolb
adc
sbb
mov
jo
cmpsl
call
lea
mov
inc
les
outsb
nop
fistpl
add
dec
add
dec
mov
jg
je
or
jl
out
dec
nop
pop
or
add
je
add
ficompl
out
push
add
arpl
subl
insl
jno
incb
push
cmp
xchg
xchg
mov
rorl
jno
mov
cmpl
fldcw
cli
jb
nop
int3
xorl
movl
es
add
add
add
add
pop
pop
or
add
fcoms
push
dec
pusha
mov
sbb
mov
xlat
push
test
mov
int3
shlb
xlat
or
enter
jnp
dec
lea
mov
lds
adc
orb
fcmovnbe
lds
push
mov
adc
rcll
xor
data16
data16
add
add
add
add
or
push
xor
mov
call
je
ljmp
mov
cmp
call
mov
inc
insb
mov
ds
sub
xchg
adc
jg
test
clc
inc
add
mov
outsl
sahf
inc
clc
data16
lret
and
popf
rcrb
add
inc
add
mov
ds
rorb
sbb
jae
sub
adc
mov
rcll
int
pop
mov
in
jmp
pop
cmp
ljmp
push
and
jle
bound
cli
ret
pop
cmp
sti
mov
in
push
mov
mov
mov
inc
sarl
push
jmp
add
add
add
in
cmp
ret
iret
lcall
cmp
cltd
push
or
lcall
ds
jmp
mov
and
push
xchg
cmp
mov
jle
jmp
add
pop
sti
adc
pop
adc
xchg
mov
add
and
std
inc
and
aam
or
xchg
call
add
add
add
add
push
icebp
in
or
and
andl
test
push
mov
mov
iret
sub
mov
push
push
lahf
push
popf
jnp
cmpsl
jp
jb
fwait
lock
jae
gs
add
ret
add
out
pmullw
add
push
lahf
ret
cli
dec
aas
cmp
add
ret
sbb
add
lahf
mov
testb
test
jmp
sbb
and
add
fcomps
test
sub
or
loope
push
push
xchg
adc
adcb
or
sahf
cli
cmp
inc
jmp
sahf
in
je
xchg
adc
std
incl
clc
push
mov
ficoms
enter
mov
inc
adc
sarl
ljmp
cmp
dec
cmp
stos
and
mov
into
insb
stc
inc
push
ds
les
lock
add
js
loop
clc
mov
gs
mov
inc
insb
cld
mov
dec
daa
stos
or
jp
add
mov
push
pshufb
xchg
sarl
xor
inc
inc
hlt
push
xor
xchg
xchg
int3
or
add
mov
dec
sbb
dec
dec
add
or
repz
pop
pop
adc
sbb
into
ficomps
add
pop
repz
mov
lret
dec
jp
jge
loope
jno
jmp
adc
pushf
sub
cmpl
cmp
lods
add
push
jmp
mov
pop
int
sbbb
je
int
das
movsb
movsb
out
inc
fwait
adc
lcall
lahf
add
cli
jo
xor
cmp
jns
je
xor
and
movsb
inc
sti
aam
push
inc
jmp
pop
and
mov
int3
xchg
pop
icebp
cli
jmp
add
add
add
or
andl
insl
imul
xor
jb
dec
pop
pushf
xchg
cltd
in
xor
xchg
sbb
call
ds
and
imul
call
sbb
sub
fcomps
sbb
adc
rclb
and
test
sub
ljmp
add
add
add
inc
lea
adc
call
and
lea
mov
call
mov
bswap
jmp
stc
out
add
cmp
jns
jecxz
aaa
xor
dec
ljmp
push
and
xchg
cmp
adc
pushl
imull
ret
and
pushl
add
add
add
aam
daa
imul
sub
and
sub
mov
push
imul
and
xchg
add
mov
incb
aaa
ljmp
jae
call
push
mov
sti
jb
mov
test
loop
push
dec
dec
jmp
add
push
xlat
ret
jp
add
pop
jmp
jp
mov
movsb
out
xor
negl
jp
xchg
out
insl
xchg
fildl
gs
add
pop
sbb
cmp
xor
in
mov
inc
lcall
push
out
insl
ds
lcall
rcll
sub
fsubr
add
je
and
insb
inc
mov
add
ja
ret
add
sub
sbb
out
adc
fsubrp
cmp
cmp
adc
hlt
stc
es
je
jecxz
call
scas
cmp
repnz
push
mov
pop
shl
push
pop
call
bound
je
dec
lods
out
js
cld
call
dec
cmp
sub
add
add
add
add
lods
aas
bound
mov
lret
pop
leave
stos
clc
push
push
jb
insl
in
dec
pop
push
push
xchg
out
gs
mov
lock
das
sti
add
sbb
call
push
push
je
dec
lods
push
call
and
sbb
add
addl
movb
push
push
call
adc
fsubrl
idiv
ljmp
out
mov
in
xchg
adc
mov
pop
call
mov
outsl
inc
and
push
add
push
pop
cmp
cs
sbb
adc
pushf
or
test
inc
add
in
inc
hlt
adcb
dec
repnz
sti
lock
inc
inc
inc
btsl
add
add
add
inc
jns
jg
adc
ljmp
jns
push
jmp
rolb
sbbl
add
out
loop
inc
pusha
push
std
out
imul
and
mov
gs
lcall
cmp
icebp
cwtl
xchg
add
std
andl
call
fisttps
jle
repnz
add
add
add
xchg
testb
outsb
cmp
fcmovb
or
xchg
lods
fucomip
push
bnd
sbb
add
in
add
xchg
push
add
push
je
fldt
and
fildl
ljmp
sub
stos
leave
jmp
or
xor
xchg
ds
inc
jo
int
repnz
fadds
or
fldt
xchg
lock
jmp
and
sti
arpl
jb
inc
jmp
iret
inc
call
movsb
jmp
jmp
repz
repnz
xor
nop
push
add
push
jmp
push
mov
mov
xor
sub
or
shll
add
ficoms
dec
call
imul
add
add
add
add
stos
pop
icebp
in
out
icebp
add
cmp
jge
sub
outsb
fsubl
jg
and
mov
push
xor
mov
enter
enter
scas
push
sub
xlat
push
and
fs
add
xlat
push
sub
push
inc
and
and
inc
mov
sbb
mov
mov
popa
adc
jl
jecxz
mov
inc
dec
jmp
add
pop
or
loop
add
add
jle
xchg
pop
negl
mov
inc
push
jae
pushf
ljmp
out
decl
sti
push
cmp
pop
stc
mov
outsb
mov
cmp
dec
faddl
sti
jae
test
or
in
ds
add
dec
jg
clc
mov
xchg
or
cmp
divl
lret
mov
mov
jbe
rcll
insl
mov
or
cmp
add
scas
mov
adc
shll
fwait
mov
push
js
jmp
adc
add
mov
fdiv
add
mov
test
pop
sub
sahf
push
nop
pop
clc
push
jmp
popf
adcb
popf
push
and
js
jmp
add
inc
cmp
jge
clc
inc
es
xchg
mov
sbb
mov
shrl
leave
jp
repnz
push
fwait
scas
popl
out
cmp
adc
ss
cmpsb
add
sbb
adc
mov
sbb
mov
int
push
stos
pop
out
pop
subl
mov
loop
or
fwait
aad
std
push
lret
loope
in
out
inc
jmp
imulb
cmc
gs
arpl
push
enter
into
jae
repz
std
popf
rorl
pushf
jmp
add
jnp
bound
test
hlt
out
roll
aam
testl
enter
dec
add
sub
and
outsb
xchg
push
call
dec
jmp
adc
incb
incl
cmc
jne
sbb
dec
xor
cli
push
pop
aam
pop
movsl
sbb
nop
inc
sbb
add
adc
loope
fiadds
push
ret
add
add
add
add
mov
xor
jmp
sbb
mov
or
dec
clc
add
xchg
stos
inc
clc
in
pop
pop
test
roll
add
out
dec
js
push
jae
inc
pop
mov
fs
roll
call
imul
pop
add
pop
adc
out
jg
inc
mov
add
push
fildl
clc
stos
ja
dec
jns
mov
mov
add
cli
or
int
dec
add
push
dec
and
in
add
push
pop
int3
push
rcrb
clc
out
in
push
push
pop
mov
or
int3
or
push
jmp
in
into
xor
out
push
mov
add
add
add
jecxz
jns
jecxz
adc
cld
sbb
fnstsw
inc
sub
psllq
mov
push
ds
in
inc
adc
jns
loope
bound
mov
ja
cmp
pop
add
loope
add
fwait
sub
jmp
lock
pop
cld
cltd
rcr
dec
add
dec
adc
fnsave
cli
imul
push
sti
lahf
flds
aad
dec
xchg
cltd
pop
add
cli
imul
nop
or
and
sub
jo
sti
faddl
lcall
into
sqrtps
fnsave
imul
psubq
pop
inc
mov
adc
sbb
add
imul
pop
adc
add
add
add
imul
dec
lods
pop
or
int3
adc
add
add
sbb
jne
push
jne
xchg
push
lcall
inc
adc
mov
jne
push
jne
pushf
fisubrl
mov
cmp
push
jne
pushw
sub
cltd
dec
rcll
or
adc
jne
pop
into
pop
fimull
add
pop
xchg
out
sbb
lock
pop
adc
addb
clc
adcb
or
rorl
add
jne
out
and
dec
out
enter
dec
adc
shll
add
clc
into
xor
mov
add
jmp
mov
inc
xor
stc
pushl
add
add
add
add
call
out
dec
out
dec
jb
xlat
lret
inc
out
shll
add
clc
jg
xor
nop
inc
add
fistps
ja
adc
ja
adc
or
sbb
add
enter
push
cmp
clc
out
lods
mov
fbld
lret
xor
loope
mov
push
les
stos
or
dec
cld
imul
adc
test
cmp
decb
cmp
outsb
lock
inc
outsb
inc
or
lods
add
jg
rclb
in
call
cmp
xchg
adcl
scas
push
loopne
adc
lea
sub
adc
jl
loope
adc
push
sbb
out
loopne
sti
push
or
loopne
arpl
into
rorb
sti
cmp
loope
push
sahf
cmp
hlt
adc
jmp
push
xchg
mov
mov
adc
cld
xchg
dec
mov
in
jo
icebp
rorb
push
inc
jmp
jae
cld
loope
add
nop
xor
mov
call
adc
outsb
and
sub
adc
sbb
or
outsb
or
pop
cltd
add
ficompl
jmp
dec
jecxz
ds
and
les
push
sbb
inc
xor
push
icebp
lret
mov
fildl
xor
sbb
rcll
orl
shl
cmp
fs
or
in
or
lds
jmp
cmp
add
add
add
add
in
push
xchg
movsb
xchg
mov
add
insl
scas
stc
mov
jae
scas
mov
cmpl
or
pop
pop
mov
adc
and
lds
pop
mov
jno
dec
inc
or
cmp
push
push
jae
out
dec
movsl
sti
out
lods
aam
lds
xor
sub
add
ds
cli
jge
jb
jae
or
scas
jne
add
in
or
clc
push
sub
pop
adc
call
mov
inc
xchg
mov
dec
xchg
inc
clc
out
loope
mov
in
sub
int
jne
xchg
pop
jg
in
mov
call
mov
adc
in
cmp
push
pop
xlat
mov
add
add
add
inc
bound
pop
jbe
jmp
pop
mov
fcompl
mov
push
jo
call
add
jle
and
je
add
sti
push
das
sub
add
dec
dec
xor
stos
inc
mov
cld
push
ds
jmp
mov
xchg
mov
and
add
add
add
add
icebp
std
std
dec
inc
mov
mov
cmp
mov
push
xchg
mov
in
add
mov
pop
or
sti
push
jne
out
dec
cmp
sub
jb
repnz
mov
pop
notl
mov
pop
ret
push
enter
mov
push
cmp
scas
ss
mov
add
sub
inc
add
adc
add
mov
cld
dec
lcall
mov
push
mov
pop
fdivr
ss
jmp
mov
aas
add
aam
mov
xorl
jmp
scas
push
fcomip
jne
mov
clc
cli
adc
lea
int
call
add
or
dec
call
aaa
gs
add
cmp
dec
call
cmpsl
mov
imul
addl
add
jp
add
divl
leave
push
pusha
testb
mov
psubb
jmp
je
andb
test
aaa
cltd
imul
add
imul
adc
clc
sub
clc
test
outsb
enter
push
clc
push
adc
or
mov
xorb
add
out
icebp
test
xlat
inc
outsb
adc
outsb
or
mov
mov
mov
jle
fdivrp
or
pop
enter
push
clc
push
lcall
pop
cmp
add
xor
add
mov
mov
clc
in
jmp
cmp
call
cmp
add
sti
push
mov
cmp
inc
add
aaa
jae
jle
dec
jae
popa
aad
daa
dec
aas
sub
sti
fcom
mov
test
dec
sbb
sub
xchg
xchg
ja
push
in
push
add
sub
pop
sub
sub
sbb
sahf
inc
mov
xor
xchg
stc
insl
daa
sub
add
mov
push
add
int3
sbb
lods
ja
cli
insb
cmp
sbb
push
jmp
mov
push
add
sbb
call
outsb
inc
and
pushf
pop
push
push
jns
xchg
loope
rcrb
mov
jb
or
arpl
dec
add
sahf
dec
push
mov
int3
outsl
add
dec
mov
xchg
xchg
mov
jmp
xchg
inc
push
mov
inc
and
sbb
push
push
xor
cli
jmp
adc
lock
ret
dec
jmp
out
jmp
loop
hlt
addr16
sar
jge
push
ret
rcrl
xchg
mov
mov
add
add
add
test
clc
cmp
push
orl
clc
mov
push
add
leave
loopne
pop
sti
cmp
push
orl
dec
inc
std
stc
xor
out
cmpsb
repz
mov
mov
call
push
sbbl
or
push
dec
jg
in
jae
pop
je
movsb
call
add
pusha
sub
mov
mov
ds
dec
flds
int3
push
jmp
addb
cli
sbb
adc
jle
push
jmp
xor
jae
lret
jmp
fbld
addr16
dec
ja
in
cmp
mov
js
clc
push
loop
mov
add
add
add
add
dec
ljmp
push
add
sub
jo
cli
or
scas
fwait
leave
shl
cli
into
sti
mov
ja
jp
and
cltd
in
jmp
loopne
mov
shlb
test
sti
push
xchg
dec
pop
dec
std
dec
pop
dec
fiadds
cmovb
cli
lcall
sub
add
add
add
add
pop
adc
push
pop
adc
or
xchg
sti
lmsw
cli
add
sahf
mov
call
add
jg
add
pop
lea
outsl
call
test
jge
out
push
orl
insl
or
pop
dec
outsb
call
test
gs
add
pop
imul
add
sub
je
dec
or
test
cmc
ja
divl
in
add
add
out
dec
and
sahf
rorl
push
and
js
clc
mov
dec
add
or
pop
add
test
bnd
mov
push
or
psubb
jge
lret
sub
add
int3
lret
dec
test
and
notb
mov
cld
jmp
xchg
out
mov
icebp
icebp
xor
bnd
hlt
inc
dec
adc
adc
icebp
xor
adc
add
sub
cmp
xor
pop
data16
cld
dec
out
and
inc
adc
or
push
lcall
xchg
sub
pop
ja
rclb
clc
push
jmp
add
sbb
and
pop
jg
pop
inc
in
ljmp
push
js
clc
push
xchg
mov
iret
jns
xor
adcb
jb
inc
clc
jo
push
das
push
lret
add
or
push
outsb
aas
aam
add
mov
roll
sti
push
mov
pop
imul
sub
call
cmp
bound
pop
adc
loopne
sti
push
adc
push
dec
sar
bound
inc
and
xchg
roll
repz
jmp
lret
shr
or
add
dec
ret
jmp
pop
ret
cmc
jbe
pop
inc
sbb
mov
xchg
lock
add
add
add
add
sarl
out
jg
add
das
sub
rcrl
pop
pop
mov
icebp
cmp
add
xchg
les
and
adc
mov
mov
pop
pop
mov
icebp
fimull
push
movsl
inc
push
lahf
je
push
add
push
xorl
jmp
push
lcall
sbb
cli
jae
adc
cltd
arpl
loope
mov
pop
add
jns
fdivrp
pop
push
jmp
daa
inc
aaa
mov
cwtl
arpl
clc
mov
push
sti
dec
mov
mov
nop
cmp
sub
and
into
jne
jne
pusha
les
jno
ljmp
cmp
xchg
cmp
mov
jg
leave
cmp
jns
test
push
lock
jns
cld
adc
idivb
in
icebp
rolb
jg
mov
cmp
test
in
mov
pop
xchg
inc
or
adc
pop
pop
in
je
mov
jg
mov
xchg
stos
push
lds
jg
cltd
push
arpl
xchg
repnz
stc
fs
or
ljmp
xchg
test
lock
loop
adc
xor
fs
push
mov
sub
aad
dec
mov
jmp
push
dec
mov
jns
jle
add
sbb
or
negb
or
add
add
add
add
repz
mov
add
pusha
and
enter
je
pusha
das
std
push
jnp
jmp
cli
jge
xchg
add
movsb
xchg
or
mov
cli
cmp
mov
test
mov
daa
sbb
inc
and
and
sti
cmpsb
adc
fstpt
mov
add
ja
cmc
mov
cmc
je
dec
push
out
mov
dec
mov
dec
or
aas
and
dec
add
arpl
mov
adc
ja
push
pop
mov
addr16
push
push
inc
and
fidivrl
xchg
adc
push
xor
push
push
add
mov
push
cmp
add
incl
shl
mov
xor
or
cli
add
insb
aam
hlt
pop
push
push
xlat
loop
push
cmp
jg
inc
jae
inc
mov
mov
xor
push
aaa
repz
clc
fsin
jp
out
mov
push
push
jg
sbb
mul
adc
int
add
test
clc
mov
std
incl
cwtl
mov
add
aaa
call
jmp
jae
out
push
sti
iret
mov
test
incl
test
pop
mov
sub
add
in
sti
out
in
mov
and
pop
jmp
pop
or
leave
jg
in
sbbl
daa
test
adc
ljmp
jo
popa
ds
imul
jle
sub
sti
pop
pop
hlt
lret
dec
js
icebp
popa
bswap
ffree
into
mov
test
sbb
popa
out
xor
lahf
clc
popa
pop
xlat
inc
jnp
adc
pop
cmp
push
push
jne,pt
xchg
je
cli
sbb
arpl
hlt
outsl
sbb
dec
add
pop
sub
faddl
and
add
add
add
add
sbb
pop
mov
adc
mov
iret
xchg
push
int
in
pop
sub
mov
arpl
cld
xchg
inc
jmp
leave
cltd
inc
jmp
fidivs
xor
out
fs
inc
or
fs
hlt
repz
jmp
pop
insl
push
add
rorl
pop
pop
xor
add
loope
add
cmc
jne
imul
add
mov
push
test
sub
jp
call
mov
cwtl
cmc
je
push
dec
push
dec
sub
push
sbb
lea
pop
outsl
push
mov
mov
inc
aad
push
inc
aas
mov
xchg
or
push
cltd
clc
call
push
dec
jmp
inc
jmp
xchg
pop
lods
adc
add
add
add
add
sbb
mov
jl
loopne
aam
cmpl
or
divl
repz
pop
jecxz
inc
add
repnz
stc
cwtl
add
mov
jb
ljmp
pop
dec
push
jae
dec
sti
in
adc
dec
out
test
scas
decb
ficompl
push
lret
and
orl
ret
cmp
adc
clc
scas
inc
mov
scas
incb
add
add
outsb
lods
and
cmpsl
mov
push
fdivrs
inc
adc
insb
add
sub
push
push
mov
in
icebp
test
sbb
lds
mul
lods
sti
addr16
sub
ficoml
std
pop
add
pop
cvtdq2ps
cmovne
sub
inc
mov
dec
pop
aam
adc
loop
jl
adc
push
sldt
add
add
add
add
sub
hlt
xor
fs
dec
and
xchg
dec
jg
mov
inc
clc
sbb
inc
xorl
xchg
call
aad
xchg
loop
and
add
pop
clc
add
test
mov
mov
mov
fstpl
add
pop
divl
pop
push
jl
add
adc
les
ret
add
add
loop
loope
jno
cs
jns
xor
dec
adc
dec
pop
cmp
cmp
mov
in
sub
out
out
push
rorb
push
adc
lea
xor
and
mov
rclb
sbb
add
and
add
test
pop
mov
test
jecxz
out
pop
jne
lcall
shrl
pop
out
mov
insb
std
lret
sub
sub
adc
jns
or
and
or
xor
inc
adc
cmp
add
imul
shlb
iret
clc
ss
and
clc
mov
scas
incl
jae
nop
ja
pop
rorb
mov
mov
fcoml
mov
movsb
mov
out
or
scas
mov
dec
xor
add
sub
call
ds
insl
cwtl
inc
leave
pop
and
pop
mov
xor
out
mov
cli
jnp
fsubp
xchg
jle
dec
sub
mov
sbb
xor
push
add
or
xchg
push
jmp
lret
cld
or
orl
into
sub
lcall
pop
adc
xchg
test
iret
aad
out
jbe
or
les
pop
xor
std
mov
or
fcoms
sub
mov
cmp
imul
sahf
add
push
jmp
loopne
fwait
sub
lcall
in
sbb
or
cmp
jbe
add
adcb
cmp
das
jb
cli
sbb
aas
cmp
hlt
dec
or
call
mov
sbb
dec
or
cli
bound
pop
sub
pop
pop
stos
notl
xchg
and
dec
add
cli
push
mov
inc
int
push
push
aaa
adc
pop
insb
mov
or
jmp
push
jae
testl
mov
jl
cli
jmp
add
jecxz
loopne
add
add
fistl
lea
xchg
icebp
daa
lds
cmp
push
sub
je
fcomi
or
or
sar
cli
call
sub
hlt
aaa
push
and
sub
insb
push
imul
rcrl
subb
pushl
push
xor
ret
mov
cmc
mov
inc
lds
orl
fdivrp
sbb
cli
jl
push
das
jne
pop
push
sub
ds
push
lods
test
add
jmp
push
and
out
xchg
dec
dec
and
dec
add
or
mov
movsb
fiaddl
cmpsb
scas
jmp
pop
fstp
xchg
or
xchg
pop
call
jnp
cli
cmp
pop
inc
push
aaa
pop
mov
sub
and
test
xorb
jmp
and
inc
pop
jo
aam
outsl
push
add
sbb
inc
aam
faddl
clc
push
sub
push
cmp
clc
push
pusha
aaa
adc
out
loopne
cltd
std
add
push
ljmp
sub
gs
push
adc
rcrb
cltd
test
mov
or
jmp
mov
inc
loopne
out
flds
ja
insl
mov
add
ret
pop
pop
and
sbb
add
into
popa
mov
inc
psrlq
pop
lea
faddl
bound
repz
sarl
inc
add
mov
xchg
pop
daa
xchg
scas
mov
je
adc
add
push
out
mov
cli
cmp
insb
push
inc
xor
add
mov
shll
adc
xor
adc
outsb
out
add
int
inc
ret
push
and
fldenv
sbbl
cmc
mov
loope
sbb
repnz
jbe
cmc
lea
orl
outsb
sbb
dec
and
cmp
push
push
mov
mov
mov
jne
sub
fistpll
push
mov
mov
push
pop
mov
or
addl
push
fisttps
adc
pop
push
and
push
pop
and
clc
sub
or
add
and
jl
xor
icebp
call
fsubl
bound
or
div
loope
mov
add
adc
jae
sub
std
testb
jne
push
arpl
add
or
xlat
adc
fidivrs
add
fildl
inc
lock
jmp
rorl
sub
jae
xor
and
sub
pop
push
aaa
sti
jb
xor
or
jmp
cmp
in
push
cmp
outsb
out
lea
add
add
add
add
adc
cmc
add
iret
and
or
les
nop
in
push
jg
add
cmp
pop
add
ficoml
insl
ret
mov
sar
jbe
int
pop
add
sub
push
arpl
lret
jg
inc
idivb
inc
loope
aas
mov
call
add
push
add
add
add
add
add
inc
or
mov
push
add
jge
and
or
leave
xchg
fidivs
and
or
int
ljmp
and
or
icebp
out
mov
inc
and
push
xchg
jne
cli
rolb
and
push
xchg
jne
cli
mov
inc
push
add
add
add
add
add
sbb
push
sbb
push
or
mov
jne
clc
ds
ljmp
repz
cmp
data16
divb
stc
push
pop
arpl
add
mov
mov
cmp
jne
cmp
je
xchg
ret
dec
sub
cmp
divb
cmp
test
jnp
add
adc
or
cmc
cmpsl
sub
shlb
jnp
pop
pop
in
jmp
sub
pop
ljmp
clc
sub
aad
xchg
push
roll
mov
and
cmp
cli
sar
sub
sbb
adc
insb
cmc
push
adc
sub
add
inc
rorb
jge
sbb
sub
push
jg
xchg
mov
es
cmp
fdivr
in
sub
in
xor
aas
clc
or
xor
xor
roll
das
xchg
fucomi
push
jae
sbb
jne
push
add
push
out
xor
xchg
push
xor
or
fildl
cltd
movsb
pop
jne
or
rorl
insl
repnz
mov
add
add
add
add
adc
push
jmp
adc
push
or
push
dec
outsb
out
lcall
call
ljmp
insb
mov
mov
xor
mov
push
pop
mov
inc
shl
lods
push
pop
inc
xor
out
cmp
mov
add
out
jnp
or
sub
pop
cmp
and
leave
xchg
int
xlat
push
mov
into
push
mov
hlt
dec
ret
je
jo
call
enter
add
push
add
jo
out
xor
xchg
shll
jb
inc
jg
cmpsl
mov
pop
aaa
pop
push
inc
mov
mov
xchg
xlat
movsl
js
andb
cmp
push
sbb
pushf
add
pushf
inc
add
lahf
decl
jg
out
mov
shlb
stos
sbb
cld
repz
or
push
mov
lret
fadds
notl
dec
enter
add
out
popf
int
mov
cli
decl
lahf
jbe
mov
std
test
arpl
push
or
jl
or
mov
add
add
add
add
sbb
add
push
pop
adc
push
sahf
out
push
out
icebp
sbb
clc
xchg
pop
data16
and
xchg
cs
or
inc
pop
and
mov
sti
jnp
incl
xchg
jnp
add
rorl
rcrb
mov
cmp
iret
cli
cmp
je
cld
or
push
stos
mov
aam
jns
add
call
cmp
xor
cld
jl
in
es
sbb
fistl
stc
mov
mov
xchg
cmpsl
push
or
cmp
decl
jmp
jge
cli
cld
jle
sbb
das
lock
in
jp
stos
outsl
inc
pop
mov
or
sbb
jmp
push
lcall
add
loop
add
push
adc
add
add
adc
sub
cmpl
cld
push
add
sbb
in
sti
inc
clc
and
jnp
cli
icebp
rolb
fildl
pushf
lods
daa
out
pushf
lcall
add
push
sbb
cli
lcall
xor
and
cmpsb
inc
and
out
inc
adc
add
sti
out
sub
cmp
clc
fwait
and
leave
lods
inc
sub
jg
out
test
enter
ret
and
les
or
je
sti
xchg
leave
cltd
inc
in
dec
sbb
clc
cltd
cmc
jg
lods
ds
inc
and
inc
icebp
lods
add
in
dec
or
jle
sti
dec
dec
add
add
sub
sub
add
adc
sarl
pop
mov
pop
add
jg
imul
add
push
or
mov
into
and
sbb
jmp
adc
loopne
and
fadds
sub
ret
sbb
add
aas
and
xor
lret
dec
lds
call
add
add
add
pop
cmc
mov
das
add
clc
jne
adc
mov
cli
pop
js
jp
imul
movsl
dec
cli
lods
and
jle
lods
xor
push
lar
pushf
jns
add
xor
add
jge
lahf
and
add
push
sbb
les
bound
out
or
add
in
fwait
pop
inc
clc
popa
lods
imul
add
add
add
add
xor
or
cmp
pop
movsb
daa
xor
cmp
dec
sub
sti
mov
pop
mov
push
jmp
into
sub
push
test
xchg
and
jns
lods
sub
jg
and
sub
xor
cmpsb
add
pop
dec
sahf
mov
mov
jmp
xchg
push
jmp
add
add
add
inc
inc
cmp
and
jg
sub
mov
push
jmp
add
pop
sbb
ds
mov
clc
aam
jp
push
jmp
popa
cmp
add
in
decl
inc
inc
jmp
imul
adc
mov
push
xor
shrb
jge
push
add
add
mov
jno
pop
in
fwait
xor
mov
je
scas
dec
aaa
push
push
add
cmp
clc
out
adc
cld
sub
call
jl
std
sbb
sti
int
orl
in
adc
scas
in
call
filds
fadd
cli
mov
mov
add
fcoml
cmp
push
fidivl
add
add
add
add
add
subb
or
jecxz
cli
fcmovb
sub
outsl
fistl
adc
add
lcall
les
jmp
rclb
mov
mov
dec
mov
fs
loop
ficoms
add
xchg
out
adc
and
idivl
mov
clc
test
nop
mov
cli
add
add
cmp
sub
int
mov
add
push
pop
loop
jns
push
dec
int3
cli
enter
inc
into
add
xlat
testb
mov
repz
cli
lods
movsl
ja
xor
pop
sarb
in
adcl
add
nop
int
add
mov
inc
or
add
mov
fsts
rcl
mov
add
or
leave
mov
shlb
push
es
cmp
sahf
lahf
xor
cmp
pop
xor
push
jo
faddl
xchg
dec
push
jmp
adc
sbb
mov
pop
cld
popf
xor
dec
test
or
rclb
popf
mov
adc
xor
push
push
add
test
out
add
add
or
adc
add
mov
mul
test
mov
popa
psllq
adc
enter
lods
cli
jae
nop
leave
xorl
imul
mov
jmp
cmp
push
pushw
test
stc
lahf
inc
in
push
or
dec
mov
cli
add
out
cmp
inc
in
push
sub
push
test
lds
cs
inc
lods
mov
push
sbb
and
xor
nop
lock
sbb
iret
les
jle
adc
push
loop
sub
ret
push
pop
pop
addl
ss
xchg
fildll
mov
loope
test
test
add
add
add
add
mov
adc
xchg
push
mov
js
lcall
subl
loopne
cld
mov
xchg
stc
adc
out
std
push
push
mov
adc
push
pop
shl
push
push
lcall
adc
clc
or
cmp
mov
js
repnz
adc
in
jl
jne
decl
mov
enter
cmpl
add
or
sbb
add
sbb
or
sbb
ret
mov
dec
dec
and
and
jbe
stos
mov
jae
scas
pop
sti
scas
rol
cli
in
hlt
aas
clc
cmp
mov
sbb
cmpsl
jmp
ret
mov
sbb
fildl
pusha
pop
fcmovb
inc
dec
shl
scas
or
add
inc
outsl
ret
es
add
pop
ds
dec
pusha
or
or
inc
clc
imul
jnp
dec
je
cld
dec
jp
stos
or
add
pop
loope
jae
cmp
das
pop
push
les
ret
add
inc
xor
pop
in
aas
xchg
in
imul
icebp
inc
cmp
icebp
add
or
sbb
stc
ds
mov
call
mov
adc
jmp
popf
mov
sti
xchg
mov
xchg
shll
cmpsb
and
test
mov
cli
xor
cmpsl
ja
sub
testl
add
add
add
push
add
lcall
push
fidivrs
dec
sub
idiv
adc
pop
je
jge
add
jnp
stos
out
inc
fsubrl
sbb
aas
and
fsubrl
leave
and
push
push
loop
rcrl
add
movb
loop
push
mov
cmpsl
cli
push
or
sbb
fmuls
pop
push
jmp
ficomps
jg
sbb
jae
sbb
jae
adc
cmc
incl
pop
outsb
add
roll
push
aam
and
aam
and
lock
jmp
jmp
rcpps
test
push
sbb
je
pop
aas
and
pop
leave
data16
divb
push
inc
add
sub
leave
out
lods
dec
and
inc
inc
and
mov
lods
dec
jae
mov
lods
incb
add
add
add
enter
jmp
ja
push
cmp
adc
jmp
xchg
scas
sti
jg
pushf
dec
add
jg
or
cli
ja
dec
incb
sarl
adc
mov
inc
aas
add
jb
and
mov
out
aaa
or
test
push
pushf
jle
or
cld
xchg
scas
into
xor
sub
and
jne
cli
xor
or
in
das
pop
enterw
add
xchg
imul
or
cmp
or
stos
or
push
out
inc
pushf
lcall
lea
add
scas
cli
fwait
xchg
cmp
jmp
bound
lea
divl
dec
pop
mov
dec
jmp
cmp
fwait
push
cmp
lock
pushl
cmp
test
jno
ja
sbb
and
xchg
in
mov
pop
incb
frstor
loopne
jne
pushf
pop
lock
repnz
jne
add
and
imul
sti
fsub
add
jmp
in
add
popa
ja
xchg
aam
out
adc
adcl
popa
pusha
add
sub
loopne
jmp
inc
or
call
adc
rolb
pop
lcall
mov
incb
xchg
cmc
push
xor
mov
inc
jne
stos
mov
add
xchg
add
je
cltd
mov
mov
jno
addb
push
pop
add
jo
test
cli
add
mov
and
dec
sub
in
outsb
xor
ds
jne
in
cmp
clc
rorl
cmp
xchg
xchg
pop
add
sub
shlb
xor
ja
rorb
jo
out
push
pop
add
sub
or
add
add
sub
int
mov
mov
push
clc
mov
std
je
js
and
add
cli
imul
lret
insl
or
jg
sarb
jbe
clc
mov
and
in
and
and
test
jne
aam
jno
daa
or
dec
outsb
scas
enter
fisubrs
ss
add
inc
outsb
pop
call
jmp
xchg
sub
sti
pcmpgtw
imul
add
push
mov
dec
fdivrl
ds
and
dec
inc
pop
dec
add
xchg
stos
add
jge
cmp
sub
jmp
mov
leave
sbb
ds
sub
jmp
sbb
jo
call
push
sub
movl
add
add
test
jle
cli
push
inc
mov
mov
push
jmp
jmp
adc
repnz
insb
cmp
inc
mov
or
imul
mov
in
scas
movsl
fists
sbb
into
jo
or
xchg
shlb
xchg
enter
mov
popf
sub
add
add
add
add
xchg
sbb
add
mov
rcrl
dec
push
add
lcall
jne
mov
jne
xchg
hlt
push
pop
jne
and
xor
push
adc
subps
pop
mov
mov
jne
repz
insl
mov
jp
adc
inc
ret
lret
mov
jne
push
push
or
mov
outsb
pop
test
cmc
mov
idivb
pop
push
lldt
adcl
fnstsw
in
mov
pop
std
addr16
mov
lods
test
mov
sti
lds
dec
cld
das
in
mov
sub
and
sub
add
imull
incb
rcrb
scas
test
ss
adc
icebp
mov
xor
lods
incb
xchg
sbb
mov
jmp
je
sub
jae
bound
insl
ret
lret
in
aaa
adc
pop
aad
and
mov
ds
iret
mov
js
scas
add
xchg
fwait
push
js
lds
clc
and
mov
xchg
add
add
fwait
add
xlat
std
or
sbb
lods
lods
sbb
fnstcw
and
shl
lock
stos
in
push
dec
mov
mov
cwtl
or
ss
adc
cli
jmp
leave
scas
pop
jg
mov
xchg
test
out
inc
add
jnp
jp
xor
inc
or
lock
subl
js
jns
jl
cli
arpl
cli
push
rcl
inc
int
pop
xchg
jno
and
mov
nop
pop
int
xchg
mov
or
pop
repz
sub
or
add
pop
je
add
loop
adc
out
mov
mov
jmp
xchg
cmc
jne
mov
mov
loope
cs
push
rorl
cmc
dec
aam
pop
mov
jnp
pop
roll
add
dec
and
stos
push
and
pushf
fldenv
adc
insl
ja
ficomps
inc
mov
decb
out
adc
sti
idiv
out
rclb
add
xchg
cmp
xor
or
clc
in
add
scas
es
out
add
add
sub
je
fwait
mov
scas
stc
xlat
roll
ja
testl
push
mov
into
and
aam
out
add
mov
or
or
out
jmp
aas
stos
mov
mov
sbb
mov
jno
push
pop
fwait
into
or
dec
and
mov
mov
test
je
les
sbb
fmull
stos
movsb
jbe
inc
clc
lea
mov
clc
xchg
test
xchg
mov
ret
jl
nop
add
pop
ud1
push
insb
inc
pop
inc
sbb
pop
xchg
xor
add
add
add
outsb
inc
call
push
stc
mov
faddl
int
inc
push
scas
mov
scas
mov
jmp
push
jge
pushf
dec
adc
sub
cmp
call
xor
movb
jle
out
or
jb
xchg
je
js
je
inc
xchg
push
fnstsw
or
jge
mov
sub
jmp
add
sahf
movb
popa
xchg
dec
mov
cmpsb
xchg
xchg
jmp
je
mov
push
std
jp
or
add
push
jb
out
bound
mov
sti
call
test
enter
xchg
dec
add
aas
sti
mov
ret
push
out
cmc
jne
mov
test
add
dec
in
es
movsl
mov
jae
adc
jnp
mov
ljmp
data16
or
mov
or
fcmovbe
loope
out
adc
sub
dec
decl
push
pop
fcoms
add
xor
xchg
call
popf
pop
outsb
adc
inc
or
add
add
mov
lock
xor
repz
cmp
dec
cs
fmull
mov
fsubrl
mov
pop
lret
clc
mov
loopne
jg
loopne
ja
loopne
pusha
loopne
cli
rcrl
inc
add
enter
adc
mov
sbb
mov
adc
cmpsb
add
in
mov
add
add
add
push
inc
clc
push
xor
pop
rcr
lret
movhps
mov
xchg
and
add
push
mov
imul
stos
dec
xchg
icebp
mov
mov
push
xor
loop
xor
push
loopne
jle
mov
xchg
movsl
dec
ja
cmpsl
adc
adc
rorb
and
clc
push
jmp
mov
fisubrl
add
sub
out
adcb
imul
push
pop
stos
stos
clc
pop
mov
add
cmp
dec
pushf
out
fs
and
lods
mov
lret
pop
cli
push
data16
jecxz
add
addb
lcall
mov
mov
lea
add
add
add
cli
fmull
mov
dec
roll
stos
sbb
add
add
pushf
mov
cld
out
cltd
or
xchg
jp
idiv
push
test
rorl
inc
cli
dec
cld
jl
mov
xor
in
notb
xchg
popa
outsb
pop
jnp
popa
add
popl
adc
add
xor
adc
jecxz
sahf
pop
add
mov
mov
lock
xor
in
push
call
or
jecxz
mov
and
and
test
gs
adc
pusha
adc
add
mov
cmc
xor
aas
dec
pop
shll
ret
addr16
mov
xchg
movsl
mov
movsl
fistpll
lret
aam
pop
cld
add
bound
scas
cli
jne
jb
add
mov
jge
push
jae
fwait
rorl
or
jbe
les
inc
insb
jge,pn
nop
or
add
js
notl
mov
xchg
mov
clc
pop
in
clc
testl
jns
sub
push
xchg
xchg
adc
clc
push
jmp
les
fwait
mov
clc
push
pop
inc
dec
out
jl
jg
and
push
pop
mov
mov
xchg
loop
test
inc
loop
sub
jmp
jge
arpl
fadds
addr16
jo
mov
add
push
pusha
ss
popf
in
xchg
add
in
out
outsl
ds
mov
xor
sbb
add
lock
or
stos
push
jmp
push
imul
add
in
mov
dec
enter
xchg
mov
in
pushf
fcmovbe
push
lea
fbld
outsb
ss
sbb
push
sti
push
add
adc
mov
inc
inc
icebp
clc
or
xchg
inc
sbb
out
out
jns
add
in
jno
cs
inc
inc
icebp
shrb
cs
inc
inc
ffree
popa
xchg
in
inc
stc
das
pop
xchg
adc
cmc
das
rolb
inc
pop
inc
scas
mov
daa
xor
inc
cmpsl
mov
dec
lahf
mov
xor
dec
xchg
mov
xor
dec
mov
xor
dec
xchg
in
pop
add
call
inc
add
mov
lods
push
push
inc
rcrl
mov
adc
xlat
fisttpl
mov
cmc
mov
pop
aas
jmp
adc
sti
decl
pop
loope
push
pop
cmp
clc
clc
daa
call
sub
xchg
or
jle
mov
push
lcall
les
sub
push
add
fsubrl
inc
clc
jg
adcl
js
pushf
pop
mov
decb
jge
add
clc
cli
mov
push
cwtl
push
lea
dec
call
bound
push
inc
clc
add
add
dec
add
incb
jge
cs
inc
orb
aas
clc
sub
je
jo
sbb
ljmp
add
add
add
sbb
sahf
repz
insb
fimull
add
fwait
lret
adc
inc
pushf
inc
inc
inc
lods
and
add
jle
add
push
pop
aas
adc
clc
repnz
inc
mov
adc
stc
push
jmp
inc
clc
lahf
stos
addr16
mov
inc
in
lahf
and
adc
addr16
inc
fcompl
add
add
add
add
pop
lcall
roll
xor
rol
cmp
dec
pusha
adc
in
mov
sub
cmp
xchg
adc
stc
jbe
lret
or
mov
jmp
mov
jg
daa
lcall
sti
jle
aam
nop
test
add
xchg
jmp
scas
in
inc
jmp
and
fidivrl
add
cli
and
incb
jne
je
inc
sbb
mov
pop
jg
mov
dec
and
fldt
cmc
push
lea
pushf
mov
out
sbb
cmp
push
out
cmp
mov
push
decl
or
push
xlat
incl
sbb
jg
adc
call
test
inc
mov
push
inc
adc
dec
mov
add
xchg
mov
mov
test
inc
add
add
out
pop
xchg
adc
dec
mov
out
fcoml
clc
mov
movsl
cs
xor
or
add
subl
push
iret
insb
movsl
cmp
ja
adc
xchg
outsl
or
cmpsb
inc
add
jp
insl
daa
push
jns
hlt
out
das
daa
loopne
popa
hlt
jg
popa
add
mov
js
repnz
fimull
insb
test
hlt
add
mov
ffreep
jns
loopne
jp
iret
test
push
push
jae
fimull
adcl
in
xor
push
in
or
add
ss
pushf
xor
ja
pusha
pushf
testl
cld
add
ja
push
ja
nop
test
ret
add
outsl
divl
cmc
and
push
into
mov
add
jg
cmc
clc
xchg
daa
add
cli
in
adcb
adcb
int3
aas
clc
or
in
aas
clc
push
mov
aas
clc
xchg
adc
xchg
clc
add
add
inc
repz
jg
pushl
xchg
mov
outsb
xor
xchg
mov
aad
lcall
mov
pop
pop
mov
aad
pushl
or
call
divb
sub
lahf
out
inc
jmp
xchg
jmp
fsubrp
sti
push
jl
jp
push
sti
push
jge
leave
cltd
cmp
inc
jmp
pop
sub
cli
adc
roll
adc
fnstcw
cld
push
add
add
addl
inc
add
orb
lea
fstpl
sbb
add
push
mov
fiaddl
jo
sub
lret
dec
inc
xchg
mov
clc
mov
push
addr16
push
add
mov
cmp
pop
mov
mov
mov
ret
ja
ffreep
mov
add
add
add
add
mov
inc
lcall
cwtl
xor
xor
fdivrl
push
mov
adc
clc
cmpl
dec
iret
bound
mov
adc
add
xor
dec
outsb
mov
inc
clc
les
fsubr
das
add
outsb
jp
imul
rorl
xor
add
add
add
jmp
dec
sti
cs
add
lods
imul
sub
adc
mov
add
inc
add
scas
mov
pop
xchg
clc
out
int
or
cmpsb
rclb
sbb
cmp
outsb
mov
dec
nop
idivb
inc
fisubrl
add
fidivrl
or
xchg
adc
jle
test
ja
sub
inc
scas
ljmp
jbe
imul
jecxz
jle
popf
pushf
outsb
test
ja
adc
out
mov
xchg
jecxz
inc
push
psubsw
jg
insl
cmp
and
bound
call
call
bound
test
add
push
add
push
inc
int
imul
push
movsb
sub
jnp
scas
xlat
cmp
cmp
xchg
push
inc
add
imul
cmp
pop
aaa
test
sti
push
xchg
pop
cmp
arpl
stc
pop
scas
jmp
sti
push
je
push
xlat
and
aas
mov
ds
sbb
lahf
or
xchg
bound
int3
xor
inc
xchg
bound
aam
decl
bound
xor
add
lds
push
test
sub
push
jb
subl
clc
mov
push
sbb
push
jae
mov
sub
mov
out
popa
push
add
xor
xor
add
add
add
and
call
add
fs
jne
sbb
xchg
xchg
xor
arpl
testl
mov
cmp
mov
cmp
in
mov
stc
movsb
fiaddl
pop
mov
inc
jmp
lods
jb
js
popa
out
mov
inc
pop
clc
hlt
inc
and
cmpsl
add
cmpsl
add
push
repz
add
add
add
add
jecxz
fidivs
pop
pop
sub
test
and
out
xchg
popf
cli
nop
outsb
adc
orb
inc
int
mov
push
adc
ret
cmp
inc
mov
cmp
cmp
fildl
mov
shr
enter
scas
sub
es
aas
outsb
out
sub
mov
add
add
add
scas
ljmp
xchg
shlb
push
adc
or
ja
mov
or
pop
xchg
mov
cmp
loopne
pop
inc
clc
lea
filds
mov
mov
xor
sub
fwait
xchg
call
jge
add
mov
sub
jmp
fildll
mov
add
add
add
inc
mov
jmp
push
push
je
cmp
cwtl
xchg
and
mov
push
add
shl
rcll
mov
movaps
xchg
xlat
fs
test
cli
push
add
cltd
sub
stc
mov
jb
insl
mov
jmp
push
adc
or
push
push
xchg
mov
adc
add
jle
shrb
dec
push
mov
ficoms
sbb
inc
std
xchg
fsubl
mov
and
mov
int3
mov
inc
not
sbb
and
jnp
dec
lcall
ds
inc
divl
dec
decl
ljmp
sahf
adc
inc
mov
pop
pop
push
add
add
add
dec
dec
mov
jl
daa
aaa
test
and
sbb
sti
or
ljmp
in
lods
jae
clc
dec
and
sub
cmp
push
pushl
aam
xor
inc
data16
mov
xor
sub
scas
push
mov
jecxz
jge
loop
dec
sbb
sahf
je
notl
gs
add
das
add
jg
mov
mov
mov
fwait
adc
push
stc
inc
clc
xchg
and
sbb
sahf
lret
xor
sahf
in
inc
clc
xchg
mov
mov
leave
sub
add
call
sahf
mov
adc
sbb
cmc
call
inc
das
cwtl
and
mov
jmp
cmpsl
add
cwtl
adc
inc
loop
ss
pop
xchg
mov
psubsb
add
loope
xchg
mov
sub
mov
pmaxub
rol
cli
scas
outsl
fsubs
add
pusha
sub
sub
cmp
lods
sub
mov
sub
call
sub
mov
call
out
je
dec
xor
adc
inc
pusha
add
inc
pusha
add
dec
adc
call
fs
lea
or
add
push
mov
jmp
fistl
dec
or
pop
addb
test
xchg
mov
push
data16
pop
data16
call
aam
outsb
sbb
stos
lret
jns
add
xchg
mov
ret
cld
lret
je
lcall
roll
xchg
ret
cmp
loop
lods
fwait
cmc
lea
cmp
push
pop
pop
aas
and
push
jg
insl
adc
add
mov
add
cmp
and
sbb
sub
jno
loopne
jno
loopne
adc
loopne
jno
loopne
jne
rsqrtps
add
das
jo
stc
cli
xor
test
incl
outsl
push
test
inc
and
call
test
jle
insl
mov
jge
ficompl
jno
fisubl
mov
pop
dec
lahf
mov
cmpsl
add
mov
cmp
or
push
push
mov
mov
popa
add
push
shrl
jl
jecxz
jmp
inc
sbb
xchg
and
sub
dec
out
dec
add
push
je
fisttpl
sbb
clc
in
fists
in
sub
pop
out
pusha
cmp
xor
adc
mov
add
add
add
insl
leave
push
clc
push
outsb
scas
jo
int3
shll
sti
lahf
xor
fbstp
xchg
push
cmc
add
cwtl
into
lock
int3
and
and
popa
jno
inc
push
cld
dec
mov
hlt
test
aad
adc
sti
fisttpll
and
adc
and
sbb
xlat
jb
and
add
add
add
add
add
push
xchg
xor
lea
enter
call
mov
xchg
mov
call
scas
js
add
pop
and
sub
subl
mov
mov
and
mov
push
sub
dec
daa
push
inc
push
xchg
mov
or
xchg
ret
adc
mov
add
add
add
add
pop
and
fisubrl
and
push
mov
lods
add
adc
add
xchg
lret
add
adc
dec
in
bound
sub
jle
lods
jl
adc
xlat
pop
push
pop
ss
loop
dec
dec
loop
inc
clc
jg
ret
add
add
out
and
out
and
sti
invd
roll
fsub
sbb
inc
add
jg
mov
clc
jg
leave
push
cmp
add
add
or
add
dec
sbb
cmpsb
or
push
jg
stc
jg
jle
cmc
jle
aam
sarb
add
and
ljmp
mov
incb
orb
clc
call
inc
add
out
addl
push
jmp
xchg
push
dec
dec
add
add
add
add
add
pop
jmp
fistpll
cwtl
es
push
jmp
mov
jle
testl
jne
xchg
ret
cmp
stos
mov
pusha
insb
ret
jle
add
add
subl
add
out
sub
and
popf
icebp
xlat
push
pop
aas
aam
and
in
out
mov
xor
lock
add
sahf
movsb
fisttps
int
lock
or
test
fbstp
cmpsl
xor
jne
pushf
inc
int
lcall
mov
cld
xchg
sti
push
push
out
cmp
xor
push
jb
hlt
add
sti
jle
repnz
push
test
add
callw
dec
or
hlt
push
out
or
push
insb
mov
xor
push
call
add
and
mov
gs
insb
call
out
xor
out
adc
insb
fbld
sub
cmp
loope
ds
mov
cli
decl
and
sbb
and
sbb
and
sub
and
push
xchg
sarb
daa
and
sbb
and
fisubl
and
sbb
orl
ret
cmp
cmc
mov
and
ja
call
lret
inc
enter
lcall
inc
xor
mov
mov
jbe
mov
jbe
lea
pop
push
sub
incl
jg
cmp
dec
fisubrl
jno
ficoml
lods
fisubrl
orl
dec
stc
jg
ret
or
adc
jg
test
sbb
add
cmc
cmp
in
and
cli
ret
or
mov
pop
adc
xchg
cli
xorl
test
sub
clc
mov
lahf
jle
call
cmp
push
outsb
lods
add
dec
adc
mov
jmp
enter
mov
std
call
out
jle
shlb
jno
sbb
ja
adc
jno
xchg
mov
inc
sub
rcll
jle
in
sbb
cmp
add
push
add
push
stos
clc
out
add
add
push
adc
push
sbb
ret
out
sahf
and
cmc
jno
out
in
call
shll
cmp
add
cltd
imull
movsl
mov
add
cmp
insl
mov
push
add
and
jo
jmp
mov
jnp
fwait
adc
negb
inc
xchg
adc
and
jae
and
imul
push
mov
fisttps
out
and
jb
cmp
push
sti
in
jb
stc
jle
lds
out
in
xchg
lret
xor
repz
lcall
test
lea
clc
inc
adc
sub
add
dec
fbld
and
outsb
lods
push
dec
mov
mov
xchg
xchg
push
xchg
mov
xchg
or
adc
out
mov
jmp
stos
jle
add
adc
sbb
sub
fsubrs
and
clc
xor
cli
jmp
lock
pop
call
test
mov
pushl
add
cmpl
cld
out
cmp
je
adc
dec
jmp
pushl
inc
aas
mov
bnd
mov
call
jle
add
jg
lods
lods
sbb
pop
or
jg
lock
aas
aas
xchg
jg
dec
ja
out
enter
adc
sbb
jg
mov
adc
mov
cld
push
call
scas
xor
les
or
xlat
rcrl
idiv
lods
mov
call
clc
cltd
pop
sbb
sbb
ds
mov
mov
mov
cmpsl
pop
pop
push
test
cmp
jmp
jp
xor
dec
daa
push
sarb
and
ljmp
loope
sbb
rcrb
test
push
ds
jnp
xor
ja
inc
scas
sub
jmp
or
jg
add
jge
ja
sbb
add
add
add
sub
gs
cli
gs
hlt
jmp
je
inc
xchg
sub
adc
loope
test
arpl
stc
xchg
std
test
xor
bound
jno
jae,pn
and
in
mov
jmp
jge
sar
mov
xchg
scas
add
fstl
add
sub
int3
mov
xchg
mov
loope
adc
jecxz
notl
movsb
push
add
jp
addl
lds
fs
pop
push
pop
lods
ds
push
push
mov
out
dec
jo
adc
test
test
or
fisttps
out
inc
mov
pushl
out
enter
add
add
add
add
jle
lcall
push
pop
ret
push
mov
dec
push
dec
add
mov
cmpsb
mov
mov
int
mov
adc
stos
jo
out
jge
incl
icebp
jg
daa
jge
mov
mov
adc
icebp
inc
out
add
mov
push
jne
pop
cmc
aas
and
xorl
pop
push
gs
add
inc
xchg
pop
jne
inc
dec
mov
jae
xchg
ljmp
dec
inc
adc
cmpb
xchg
repz
push
testl
add
xor
push
enter
mov
call
fwait
sub
test
pop
cmp
imul
xchg
sbb
mov
pop
ret
mov
sbb
xor
pop
sti
add
mov
loop
jle
and
push
repz
ficoms
outsb
inc
in
stos
out
pop
pop
xor
in
mov
sbb
lds
jle
add
clc
push
jmp
add
aam
clc
push
add
clc
push
add
in
lds
stc
in
and
sub
and
std
push
add
jp
call
inc
sub
inc
add
cmp
cmp
push
sti
mov
pop
or
jmp
cli
adc
scas
das
cmc
mov
jle
test
insl
jae
ret
mov
std
cld
push
add
sti
push
dec
es
sti
imul
mov
leave
add
dec
and
xchg
inc
mov
inc
popa
mov
sub
insl
jo
test
fisubrl
add
add
jp
adc
test
jnp
push
sahf
or
popa
ds
pop
ficoml
add
sub
fcoml
add
rcll
mov
rclb
add
sbb
cmp
lea
cli
call
outsb
lods
fcomps
push
xor
push
push
cmp
cmp
sar
jo
mov
scas
pusha
inc
lock
mov
or
dec
xchg
jae
fidivl
stc
jge
test
dec
push
mov
adc
push
cmp
sahf
idivb
adc
add
cli
daa
out
adc
testl
jge
or
xchg
dec
lea
cmp
sti
add
lock
add
add
add
jae
fimull
jge
or
bound
aas
mov
sti
in
lock
clc
lock
pop
jmp
xlat
clc
push
jmp
dec
call
jl
xor
fsubl
jmp
add
iret
mov
jmp
jl
pop
mov
add
xchg
adc
xchg
xor
add
or
out
iret
push
outsb
pop
fcmovnu
out
clc
lret
jno
sbb
out
clc
cltd
sub
dec
repz
xlat
call
dec
mov
xor
mov
scas
test
aad
fldenv
add
push
add
js
jae
lret
popa
jb
adc
and
arpl
ret
pop
cli
out
cmpsw
inc
or
and
adc
popa
push
inc
or
bound
icebp
stc
ljmp
aad
lock
cli
cld
and
inc
jmp
xor
call
jg
push
sub
movsb
jle
push
mov
dec
add
negl
sbb
xchg
sub
fisubs
adc
sbb
jae
loope
pop
pop
xor
add
sbb
adc
out
xchg
inc
push
push
pop
je
adc
sbb
incl
inc
push
incb
push
in
lea
dec
incl
inc
adc
mov
push
lcall
inc
adc
notl
orps
loope
jmp
pop
notl
clc
bnd
jae
sahf
adcl
add
mov
sub
and
jnp
sub
cmpl
or
sub
aas
clc
or
dec
leave
insb
jmp
out
and
icebp
mov
mov
jge
repz
add
ret
cli
jl
or
jne
or
jnp
loopne
clc
add
cli
mov
dec
test
sub
cs
add
xchg
ljmp
dec
pop
jle
adc
repnz
and
shr
jg
jmp
andb
in
add
sbb
fcompl
mov
xchg
or
lock
push
push
in
enter
or
shrb
gs
bound
jp
dec
fld
cmp
cmpsb
or
and
in
add
cld
push
fdiv
hlt
daa
aas
mov
in
or
test
inc
push
pusha
gs
lds
sbb
add
xor
outsb
hlt
outsb
pop
out
pop
pop
cli
bound
xor
jo
xor
add
cmp
call
xlat
adc
push
xor
push
xor
jmp
jmp
add
outsl
inc
call
push
and
or
push
outsb
adc
in
das
in
cmp
daa
cmc
cmp
mov
and
sbb
xchg
mov
add
decb
inc
mov
imul
jmp
xchg
xor
cmp
lock
pop
push
sbb
icebp
pop
mov
cmp
add
add
add
and
mov
xchg
inc
and
xchg
inc
and
add
push
adc
and
jb
lock
cs
xor
push
fwait
ret
add
cmpb
pop
test
push
test
dec
and
in
das
jnp
clc
jo
test
inc
xor
sbb
sti
cltd
out
insl
js
stc
inc
adcl
add
add
add
les
jne
add
clc
aaa
enter
imul
and
clc
mov
icebp
sub
or
in
cmp
dec
faddl
push
mov
jno
push
cmp
insl
sub
jno
xor
cmpl
xor
sbb
xchg
sub
cmp
fcoms
sbb
test
lods
imul
add
add
add
add
xchg
cmpb
ja
int3
daa
jg
daa
mov
int
cmp
and
je
call
daa
call
and
cmpsl
inc
xorb
lea
xor
iret
jbe
int3
adc
stc
faddl
ja
int
sti
xor
mov
push
pusha
or
inc
pop
jmp
and
sahf
lret
add
sbb
clc
fst
cmp
mov
jmp
and
xchg
loopne
daa
sub
ss
lret
popl
pusha
add
shll
sbb
lds
push
add
cmc
xchg
inc
or
or
pusha
std
xchg
inc
add
mov
xlat
add
xchg
cli
imul
leave
and
add
add
insb
cmp
out
jno
cmp
adc
lock
sbb
dec
sbb
xchg
mov
fdivs
add
loopne
inc
popl
cmp
pop
add
cmp
std
push
scas
fnstenv
ret
in
inc
cmp
loopne
sbb
xor
add
jecxz
mov
mov
adc
pop
cmc
add
inc
aad
jl
add
mov
sub
mov
jmp
dec
fcoml
lock
dec
or
lret
outsb
sbb
arpl
or
stos
dec
add
mov
jmp
xchg
inc
or
pop
mov
out
or
clc
or
adc
jl
cmp
pop
scas
stc
add
add
lock
jne
pop
add
clc
pop
add
sti
notl
add
add
add
push
xchg
jmp
insl
roll
xlat
jbe
xchg
sub
xor
mov
or
rorl
mov
cld
imul
addr16
or
clc
pop
xorl
sbb
loopne
daa
ds
out
sti
imul
lds
jge
lret
aaa
pop
cmp
in
xor
add
les
add
out
ret
mov
inc
stc
and
xchg
fdiv
aam
jecxz
xor
pop
fcmovne
or
call
je
push
loop
pop
mov
push
push
mov
faddl
inc
mov
mov
sarl
adc
outsb
les
pop
fs
jmp
jmp
inc
xchg
call
pop
mov
cli
push
push
es
loop
sbb
cli
aam
or
jbe
or
xor
xchg
add
adc
and
cmpl
xlat
or
popl
stos
push
pop
mov
jle
jle
in
mov
leave
gs
add
cli
ss
je
add
push
out
jle
or
gs
outsb
xlat
add
cmp
add
roll
add
out
push
push
aam
push
or
rclb
divl
cmp
cltd
push
adc
jl
pushl
fnstcw
call
mov
std
inc
loop
xor
cmc
mov
lock
and
jmp
push
push
push
push
adc
and
mov
movb
add
add
add
add
mov
and
inc
sbbl
sbb
jle
mov
iret
jno
idiv
fdivrl
insl
jno
inc
clc
dec
push
xchg
jno
or
in
pop
sti
sub
sar
jmp
test
cli
and
inc
arpl
adc
out
mull
or
or
add
hlt
adc
insl
jns
in
add
scas
js
and
insb
cmp
adc
outsb
add
in
or
or
shll
sub
mov
clc
insl
imul
outsb
fistpl
add
sub
add
swapgs
insl
addl
pop
mov
mov
jno
or
jl
call
pop
in
xchg
jmp
add
push
dec
add
ja
sbb
call
js
push
jmp
add
mov
add
std
outsb
add
or
push
repz
test
jecxz
jmp
cmp
cmp
hlt
rcll
push
add
mov
push
call
into
sti
push
xchg
push
dec
jae
xchg
or
push
out
push
test
add
add
add
popf
mull
inc
jb
cli
adc
mov
imul
into
xchg
jns
jns
jns
sub
xchg
sti
ds
aam
push
xchg
incb
jmp
sub
cld
jmp
outsb
push
xchg
add
jmp
cmc
popf
leave
andl
out
or
mov
or
add
add
push
add
subb
xchg
rcll
cltd
cli
jmp
sbb
add
daa
sbb
xchg
sbb
je
xchg
jmp
cmp
inc
adc
xchg
push
adc
int
and
push
or
xchg
mov
push
pop
es
sti
adc
mov
int
pop
add
mov
push
lahf
out
dec
sbb
push
loop
dec
push
stos
sbb
clc
ds
scas
jle,pt
jae
jb
add
incl
add
push
sub
incb
adc
push
mov
cmp
add
cmp
int
add
stc
test
cmp
xor
test
ja
add
xor
sti
in
cmovo
ret
cld
mov
add
or
add
clc
cmp
bound
mov
int3
loopne
add
test
add
es
in
pop
jae
adc
call
add
adc
push
and
lock
sbb
add
add
add
add
push
fucomi
std
call
addr16
clc
pushl
push
arpl
dec
leave
je
jmp
in
sub
jmp
push
sub
sub
adc
es
cmp
mov
or
pop
pop
adc
xlat
call
dec
dec
addr16
cli
push
add
and
ret
icebp
js
cli
mov
jle
divl
add
dec
pop
jbe
mulb
add
mov
dec
test
pop
xor
push
sar
call
sti
mov
add
int3
lret
loope
movaps
shl
xor
inc
push
sti
rclb
mov
add
mov
push
call
pop
xchg
jmp
call
add
mov
push
push
icebp
jb
add
rcll
fcoml
popa
adc
add
into
outsl
sub
dec
pop
loopne
push
sbb
lea
add
repnz
push
bound
adc
lret
push
cltd
mov
je
xchg
cmp
cmc
push
les
or
ss
mov
push
push
test
loope
test
int3
push
addl
add
add
add
add
insb
lods
rcl
push
pop
clc
jbe
scas
stc
xchg
cs
jae
sub
sub
and
mov
cmp
test
push
popa
repz
or
daa
lds
and
mov
dec
and
test
fimull
mov
xor
inc
outsl
jno
add
lret
jae
mov
call
xchg
inc
push
add
dec
adc
mov
rcll
imul
adc
je
inc
adc
pop
sahf
ret
adc
mov
adc
movsl
int
jmp
jo
shr
in
add
call
les
pop
pop
insb
loop
add
cltd
sub
pop
mov
jmp
daa
add
out
pop
sbb
test
jno
lret
cmp
add
inc
dec
loope
ja
or
cmp
pop
pop
je
add
adc
test
in
ljmp
call
and
je
push
fwait
cli
xchg
push
stc
xchg
and
cmc
push
add
mov
ljmp
ret
mov
sub
and
add
push
add
mov
adc
clc
mov
pop
sub
jmp
xlat
inc
jle
pop
ficoms
int3
lret
stos
sahf
push
cli
in
lcall
cli
int
call
and
add
and
push
inc
adc
ljmp
sbb
sbbl
add
add
add
add
mov
cli
xor
ltr
push
sbb
sarl
sub
adc
sbb
xchg
fs
jmp
mov
add
mov
cli
mov
cmp
cmpl
sarb
add
mov
add
divl
out
cmc
adc
clc
mov
and
call
mov
incl
aas
sti
aas
decb
jne
pushf
add
add
xor
push
cmp
adc
pop
test
std
add
js
decl
int
or
shrb
mov
jne
fsubl
out
mov
pushl
xchg
pmulhuw
rcll
inc
jbe
mov
adc
xchg
aas
jg,pt
fcoml
or
lret
insl
or
cld
ret
pop
xchg
test
jnp
call
rolb
ret
or
add
add
pusha
pop
sub
dec
adc
sub
or
call
sti
iret
dec
hlt
pop
pop
push
jge
ret
ret
dec
dec
sti
orl
call
mov
push
out
adc
push
jmp
add
add
add
andb
pop
cmp
sub
clc
cld
stos
push
outsl
enter
mov
popf
movsb
daa
and
unpcklps
push
ljmp
roll
jo
imull
rol
cli
into
mov
sti
cmp
push
adc
out
jmp
notl
scas
jmp
sti
cld
mov
lock
cmp
add
sub
scas
xchg
jae
add
out
nop
call
shrb
pop
popf
cli
sbb
push
je
negb
jb
lahf
inc
or
in
xchg
rcrl
jle
arpl
add
inc
decb
or
addl
jge
add
push
lea
gs
adc
lcall
mov
sbb
int
sbb
add
in
inc
loope
inc
and
dec
lods
add
mov
jmp
je
add
jmp
enter
xchg
sbb
mov
adc
adc
add
xchg
enter
add
cmp
pop
mov
and
inc
adc
mov
lea
dec
push
clc
mov
add
cmp
addr16
jno
sbb
lcall
add
and
jae
pop
adc
repz
xor
jae
stc
pop
mov
jae
mov
xchg
insl
cmp
dec
jns
jo
incl
bnd
mov
sar
dec
push
or
xor
pop
xor
push
push
jnp
push
mov
cwtl
aas
ljmp
stos
jns
add
clc
cmpsl
jnp
sbb
int
cmp
add
jmp
idiv
add
pop
sbb
into
add
fwait
lock
mov
mov
lds
insb
mov
test
and
repz
test
das
negl
inc
insl
je
inc
sbb
jle
les
sub
imul
dec
push
cmp
outsb
mov
add
add
add
xchg
sub
stc
popf
lods
pop
fdivrs
jmp
rcr
jmp
scas
mov
lods
pop
and
lods
idiv
dec
mov
shlb
inc
xlat
cmp
jle
enter
mov
in
and
das
jg
leave
push
jne
fiaddl
shll
je
je
and
in
dec
or
add
add
add
sti
jmp
jmp
xchg
pop
jo
cli
jb
fistl
cmp
hlt
push
test
mov
xchg
dec
add
cli
out
in
sbb
cmpl
cmpsb
and
sbb
add
orl
inc
sub
dec
push
push
adc
add
stos
cs
adc
inc
push
inc
mov
cmp
xlat
in
push
sub
sbb
int
cmp
lea
jecxz
call
adcl
or
pushl
cltd
dec
out
arpl
pop
js
adc
xchg
mov
inc
cld
clc
jg
adc
dec
mov
call
xorl
ja
dec
jg
inc
cli
jg
adc
dec
mov
add
add
add
mov
jg
adc
popa
cmpl
or
jmp
mov
mov
je
pop
pop
insb
inc
pop
xor
adc
add
or
mov
inc
cmpsb
call
lock
popa
popa
cmp
jge
add
repnz
popa
cli
addl
hlt
stc
push
jmp
adc
dec
bswap
call
daa
js
sub
cmc
insl
fscale
iret
idivb
out
js
cli
fcom
test
sub
mov
xor
data16
arpl
sub
xchg
jp
cs
ss
shl
inc
leave
jns
cli
fcompl
and
adc
dec
loopne
inc
adc
jmp
sti
sub
xchg
sub
je
jmp
add
shl
iret
inc
fstp
into
inc
aad
iret
inc
fisttpll
adc
jno
push
add
imul
rcll
sub
or
cli
push
mov
dec
add
fidivrs
add
sti
push
push
jb
sbb
mov
lahf
add
sti
xchg
inc
mov
jno
out
add
or
add
clc
xchg
inc
popf
mov
mov
cld
out
add
mov
test
adc
mov
pop
mov
mov
inc
xchg
xchg
mov
test
adc
cmc
mov
adc
mov
mov
fisttpll
shlb
push
add
push
bound
add
add
add
sub
movsb
dec
mov
ss
inc
push
loope
addl
outsl
cs
ss
sbbb
mov
mov
push
add
xor
clc
repnz
dec
jne
pop
cli
mov
xor
jg
or
or
add
scas
loopne
clc
xor
gs
push
decb
out
xor
and
pop
cli
add
lret
pusha
jb
decl
cwtl
dec
xchg
sub
aaa
das
mov
jnp
call
jae
and
jae
and
jae
lods
pop
mov
sub
imull
sub
out
mov
mov
cs
rol
jg
mov
and
jne
call
repnz
add
push
jmp
bound
mov
mov
clc
push
fs
dec
push
inc
and
mov
xchg
pushf
or
dec
xchg
jmp
ljmp
stc
aas
jnp
jg
pop
add
push
cmp
fisubl
shll
ret
aas
leave
popa
scas
mov
popa
jnp
cmp
xchg
mov
pop
cmp
cli
sahf
add
adc
and
fmuls
sti
push
add
mov
cltd
add
das
test
mov
sti
cltd
js
add
outsb
cltd
jecxz
int
pop
and
sub
mov
jmp
hlt
push
add
fnstcw
dec
lds
aaa
mov
je
xchg
dec
or
adc
sti
add
mov
loopne
rorl
push
or
stos
into
std
sahf
mov
into
imul
sarb
mov
mov
pop
push
push
add
add
addb
inc
mov
lret
cs
add
cmpl
push
inc
into
adc
shrb
fimull
addb
add
add
add
add
sbb
xchg
mov
push
cs
lret
sbb
add
or
test
in
xchg
push
add
sub
insb
clc
fucomi
out
add
shrb
mov
mov
xchg
add
clc
and
jae
jno
addr16
das
push
add
mov
je
or
dec
out
sub
jge
xlat
pop
jae
test
loop
pop
imul
push
cmp
incb
and
lods
push
movb
divb
xlat
pop
adcl
cmc
aas
add
add
pop
pcmpeqb
sbb
sbb
mov
mov
call
fcoml
mov
das
xchg
pop
jbe
arpl
fiaddl
add
add
add
fucomi
insl
shlb
cmp
xchg
popa
xchg
fsubl
fcoml
fstpl
ja
fmuls
outsl
cmp
subb
das
ja
fmuls
aaa
xor
nop
mov
into
aad
out
mov
or
inc
jle
call
cld
push
add
pushf
lods
cmp
rcrl
stc
into
sbbl
movsl
add
jge
jmp
in
sbb
rorb
lds
and
mov
push
data16
mov
enter
and
pop
lea
int3
call
leave
inc
sbb
cli
andl
xchg
pop
sti
xchg
inc
cli
add
pop
inc
mov
pop
xorl
mov
jmp
xchg
shrb
or
loope
scas
rcrb
dec
ljmp
jae
sbb
cs
sub
cmp
push
cmp
shrb
add
loop
mov
mov
out
das
push
or
es
pop
cmpsl
jns
sbbl
dec
mov
mov
mov
jmp
lea
and
aas
cmpb
test
out
sti
das
cs
mov
mov
or
insb
pop
in
add
sti
pop
sbb
imul
xor
xchg
mov
je
pop
ds
sub
decb
or
cmpsl
and
sti
xchg
mov
addl
add
add
add
add
adc
gs
loopne
jp
or
cltd
adc
clc
pushf
out
in
gs
iret
and
pop
outsb
dec
pop
les
roll
mov
stc
lods
out
testl
mov
pop
cmp
adc
insl
add
loope
fwait
xchg
push
jmp
enter
mov
sbb
test
pop
add
pushf
xorb
in
scas
ror
inc
or
pop
jbe
imul
adc
xor
mov
ret
pop
jnp
rorl
ja
push
mov
aaa
cmp
les
jmp
cmp
test
xor
das
out
hlt
dec
int
cmp
add
or
adc
cld
cli
js
or
pop
jmp
cmc
xchg
int
out
xchg
test
jle
clc
push
jb
imul
cli
xchg
iret
popa
stc
jbe
dec
mov
test
dec
sbb
add
inc
add
lds
das
xchg
jbe
xor
divl
push
arpl
push
xchg
add
jecxz
jnp
call
mov
sbb
testl
into
mov
sar
pushl
imul
rol
les
add
rep
sbb
enter
push
aam
mov
dec
add
and
add
jmp
iret
int
and
push
nop
clc
int
pop
add
inc
push
jae
mov
xorl
pop
mov
data16
push
test
mov
lret
imul
stc
pop
repz
pop
xor
int3
bts
sti
lea
push
shll
jg
insb
inc
data16
jg
push
xchg
dec
push
sbbl
subl
pop
cmp
xor
push
cli
sub
or
cli
add
mov
xchg
mov
repz
inc
inc
jno
dec
insb
mov
lcall
lret
xchg
mov
jae
dec
mov
lcall
dec
mov
push
js
mov
es
pop
cmc
std
inc
push
push
mov
outsl
dec
in
cmpsb
jg
and
inc
add
das
xor
dec
insl
inc
lret
cmp
dec
arpl
clc
aas
out
mov
pop
adc
dec
in
sar
xchg
mov
lock
adc
div
std
mov
xor
lahf
add
inc
repnz
add
jmp
or
adc
add
adc
insl
sbb
sub
jnp
pop
je
dec
and
sub
je
xor
out
dec
xor
insl
xor
cmp
jno
out
jnp
pop
xor
stos
and
xchg
clc
les
das
sbbl
add
pop
cmp
bound
inc
dec
loop
icebp
sbb
and
adc
jno
ljmp
insl
push
pop
adc
push
inc
add
loopne
add
subb
lret
dec
cmp
pop
mov
xor
es
fiadds
and
push
push
lcall
lret
sub
idiv
popf
ds
mov
jne
push
out
rcll
add
xchg
xchg
jbe
in
sbb
push
int3
ret
push
pop
adcb
add
cmp
mov
jmp
pop
icebp
adcl
and
sub
xchg
sub
loope
test
jae
inc
adc
shl
orl
jae
xchg
and
cli
das
mov
and
repnz
xor
mov
mov
movsl
aas
clc
mov
test
push
mov
into
inc
mov
adc
add
jmp
add
xchg
movsb
in
jbe
nop
pop
cli
xor
sarl
or
in
jle
or
enter
mov
pop
sub
xchg
or
xor
scas
mov
push
mov
and
pop
add
sbb
stos
mov
lock
fcmovnu
sbbb
add
add
add
aas
in
mov
stc
xchg
dec
add
scas
aad
rolb
xlat
pop
add
out
push
add
cmp
out
ja
add
cmp
clc
stos
sub
or
push
push
jae
out
fimull
cs
das
cli
jmp
inc
sbb
xor
loope
out
push
inc
pusha
inc
cmp
loop
repz
xor
push
xchg
idiv
int
xchg
fimull
jo
cmp
leave
xchg
mov
std
das
stos
sbb
call
je
add
clc
faddl
xor
push
mov
add
inc
cmp
cltd
repnz
mov
sbb
fisttps
jns
pusha
dec
into
mov
add
add
add
add
add
mov
or
cmp
xchg
mov
fdivrp
add
adc
jmp
and
xchg
outsb
add
inc
mov
xor
cmp
aad
add
push
add
aas
shlb
jnp
daa
add
in
and
stos
in
jmp
cmp
jg
ds
incl
cmp
jg
hlt
ds
incl
inc
cmpl
decb
mov
push
push
gs
cld
adc
out
mov
cli
arpl
hlt
aas
clc
xor
aas
and
orl
adc
and
jmp
pop
rorb
fdivl
jns
hlt
test
out
mov
adc
push
pop
inc
stos
lods
push
jmp
in
shr
pop
add
ret
dec
sub
shl
sub
repz
sub
in
jp
shr
xor
mov
push
fwait
dec
xchg
xchg
test
hlt
shr
or
fdivrs
ds
xor
pop
fcomps
sbb
jbe
fs
adc
jbe
cmp
int3
lea
push
xchg
jp
leave
mov
daa
xor
or
jmp
and
test
cli
fdiv
sub
shll
cwtl
pop
adc
inc
std
stc
mov
stc
movb
je
inc
push
gs
hlt
mov
and
cli
bound
sbb
sbb
jg
mov
dec
adc
leave
mov
loope
cli
popa
aaa
clc
push
gs
push
add
imul
ret
and
cwtl
xchg
jmp
fcomip
xchg
xchg
gs
daa
cmp
jne
mov
xor
pop
cmp
dec
push
pop
in
push
test
sub
inc
inc
test
fldcw
std
push
cmc
mov
das
test
sub
in
gs
sbb
add
sbb
add
fisubrl
adc
pop
scas
flds
inc
std
repnz
fdiv
jmp
scas
push
and
into
decb
stos
pushw
and
popa
push
push
clc
jo
jae
inc
dec
push
aam
jne
fcompl
das
jae
and
mov
daa
sub
fsubl
sub
stos
and
mov
iret
in
daa
xor
imul
and
call
inc
jne
fcompl
aas
nop
push
cmp
xchg
mov
jae
mov
xor
cli
in
push
adc
push
jae
add
lret
rcl
adc
shlb
adc
out
push
dec
cli
js
and
clc
arpl
call
and
mov
scas
iret
scas
inc
repz
pushf
js
xchg
js
mov
mov
icebp
sub
rorl
popf
rorb
rcl
add
push
cld
rolb
push
jnp
xor
jne
xor
lahf
cmp
shl
rcrb
xchg
sub
cld
adc
sub
push
lahf
jb
jle
or
mov
mov
and
mov
push
rolb
sub
das
xchg
sbb
add
sub
fs
and
add
add
add
xor
sub
cmc
daa
mov
out
movl
das
cmc
sub
hlt
sub
mov
fildll
ret
jnp
lock
imul
hlt
sub
mov
hlt
sub
leave
nop
out
fisubs
stc
jle
push
cli
cmc
psubq
or
add
add
add
mov
jae
cmc
add
test
cmpsl
shll
decb
xlat
jge
pop
jecxz
cli
push
inc
xorw
pusha
mov
fldl
leave
xchg
cmpsl
mov
and
test
cmc
je
testb
cmc
mov
loop
inc
mov
jno
sbb
in
negb
push
incb
and
fisubrs
xor
fst
mov
xchg
shll
pop
mov
cmp
jle
ds
adc
mov
aam
jge
daa
mov
and
add
pop
mov
lret
xchg
adc
push
mov
xor
rcll
jl
jnp
inc
jle
faddl
and
or
jne
aam
jns
sub
xchg
test
pop
or
sbb
xchg
movsl
jns
in
std
jl
adc
mov
jl
pop
inc
add
push
xchg
pop
jle
lods
jmp
inc
mov
or
lret
into
notl
sbb
jmp
mov
add
es
dec
je
jg
jle
add
out
and
pop
stc
fwait
mov
jnp
lds
stos
jbe
sub
push
pop
repz
adc
or
mov
gs
or
les
scas
mov
js
sti
les
pushf
out
mov
call
mov
and
mov
add
add
add
cli
xchg
aam
mov
popf
negb
je
js
je
hlt
lahf
pop
jp
fwait
lock
popf
push
int
fists
lret
cmp
fwait
call
bound
clc
and
adc
adc
fadds
outsb
mov
jne
pop
xchg
cli
push
add
mov
popf
hlt
add
cmp
imul
call
ja
call
popf
sbb
fdivp
push
inc
mov
outsb
and
rolb
add
sbb
jae
adc
and
decl
pop
test
push
mov
out
inc
loope
pop
pop
pop
push
sbbl
push
push
sub
push
incl
int3
repz
xchg
push
rorl
out
add
sbb
dec
add
pushl
pop
lock
in
ljmp
xor
push
sub
ret
hlt
mov
mov
jl
clc
stos
cli
jne
fsubrl
repz
add
xchg
jnp
or
inc
mov
cmpsb
mull
add
mov
ljmp
mov
scas
cli
in
jmp
or
lods
cli
or
push
inc
cmpsb
jge
cmp
jns
lret
not
or
add
jno
bound
xor
gs
sbb
jmp
sti
push
hlt
add
stos
or
mov
sarl
add
add
add
xlat
call
mov
jno
loopne
mov
mov
ja
sti
loopne
cmp
jle
rep
test
sub
or
adc
sub
inc
mov
ljmp
sti
aaa
add
push
icebp
pop
push
or
cmp
daa
mov
cmc
add
insb
movb
add
das
imul
les
std
push
add
mov
push
cs
adc
jle
out
push
add
mov
push
xchg
rcrb
call
sbb
or
and
notl
out
cli
sub
cmp
mov
repnz
add
add
add
add
dec
push
jb
pop
sbb
push
adc
jb
out
xchg
push
adc
push
sti
xor
cmp
call
loop
mov
mov
loop
cmc
jecxz
leave
lcall
adc
aam
xsha256
cmpsb
shrl
leave
sbb
adc
loopne
add
in
iret
cmc
mov
xchg
roll
in
or
add
pop
dec
cli
mov
jo
andb
loopne
cmp
xor
dec
es
push
jae
test
inc
push
out
add
sbb
rorb
cmp
cli
aas
mov
ret
clc
sub
sbb
mov
jnp
cmp
ljmp
sub
add
add
add
add
out
std
clc
das
decb
jg
jle
xor
ljmp
pop
loop
dec
push
add
sub
add
mov
mov
call
add
push
sbb
clc
push
mov
add
call
jp
in
clc
insl
dec
pop
fs
clc
mov
cli
push
jmp
adc
call
inc
add
push
cmpsl
sub
dec
cmp
gs
xor
inc
pop
push
cmpsl
inc
sbb
adc
xor
push
fisttpll
cltd
or
clc
push
outsb
mov
verw
sti
rorl
lods
xchg
mov
cmp
stc
adc
adc
sbb
rorb
popa
cli
sahf
jae
jnp
fxch
adc
cld
popl
add
add
add
hlt
push
add
or
subl
cwtl
jmp
stos
mov
out
push
lea
sbb
andb
push
add
hlt
mov
insb
addr16
add
sti
and
aaa
and
inc
shrl
movl
adc
xchg
add
add
ljmp
jle
sub
data16
add
add
add
add
inc
cmp
fisttpll
cmp
jge
jb
or
popl
mov
jmp
jmp
add
push
dec
mov
xchg
fstl
dec
dec
pop
cli
orb
add
movsb
jl
add
sbb
mov
loope
es
inc
dec
mov
clc
pop
in
mov
jge
mov
add
add
add
sub
movsb
cmp
jae
repz
add
sub
xorl
xor
call
mov
sub
decb
sbb
adc
mov
decb
xchg
sarb
rorb
add
sub
or
jmp
rorl
cli
cmpb
add
add
xchg
inc
out
enter
iret
sbb
or
fwait
in
orb
mov
out
clc
pop
jmp
inc
sti
push
xor
rcrl
jmp
cmp
pop
insb
subb
add
mov
xchg
sbb
add
fwait
in
in
pop
mov
popa
sbb
in
orl
add
add
add
sub
inc
cwtl
inc
dec
stc
push
jmp
fildl
call
push
rcrb
push
testb
jbe
and
cli
push
add
and
jmp
sti
push
push
fs
cmc
lmsw
in
aaa
leave
push
xchg
xchg
mov
add
rol
mov
xor
scas
mov
aaa
movsb
sbb
int
enter
stos
adc
cld
xchg
mov
out
adc
jge
je
add
repz
addb
fcoml
dec
inc
push
cli
mov
push
mov
nop
mov
add
aam
pop
stos
rolb
add
xchg
mov
lods
mov
adc
call
add
dec
adc
dec
push
mov
inc
cmc
adc
adc
js
cltd
inc
add
in
jnp
jne
sbb
or
push
sbb
xchg
rolb
adc
jmp
adc
mov
and
mov
clc
cs
jnp
add
cmp
push
cmp
decb
mov
incb
add
xor
and
push
inc
rorb
cltd
ficompl
sub
adc
pop
mov
or
and
xor
roll
mov
das
outsb
add
add
mov
lret
data16
mov
mov
int
mov
xor
clc
sub
ret
pushl
mov
jno
in
mov
push
push
sldt
add
add
add
add
hlt
mov
mov
inc
adc
push
jmp
add
or
fisubl
or
call
sub
push
mov
loop
notl
out
inc
daa
mov
inc
stc
scas
outsb
ret
xchg
je
aam
mov
inc
or
sub
aad
pop
cmp
cmc
ret
add
sub
repnz
xor
icebp
sti
mov
jb
cmp
push
xchg
add
push
dec
cli
lods
dec
push
loope
and
dec
push
stc
hlt
adc
jae
mov
and
lds
and
mov
mov
mov
add
mov
std
lea
hlt
push
call
jo
adc
mov
inc
jmp
gs
inc
hlt
daa
sbb
and
xchg
rorb
movsb
push
mov
xchg
mov
lea
lea
fstpl
add
lahf
inc
cld
mov
dec
in
pop
ds
xchg
mov
add
add
add
out
dec
lea
add
mov
inc
push
rcrl
bound
and
jmp
push
inc
daa
dec
push
rcrl
jns
stc
popf
dec
in
ret
ds
std
ror
cmp
push
jb
xchg
pusha
mov
imul
sub
ss
test
and
imul
sbb
add
mov
inc
clc
jne
std
ja
stc
mov
incb
data16
test
add
or
es
insl
dec
add
stc
hlt
xor
and
es
insl
inc
sbb
xchg
lods
jg
cld
sub
push
mov
push
push
add
push
xor
jbe
pop
push
mov
xchg
jge
add
jns
add
add
sbb
rcr
addr16
push
fistl
jne
add
mov
xchg
xor
repnz
pop
lcall
loopne
call
fcomip
pop
rcrb
xchg
rcl
sub
push
cmp
and
mov
sub
dec
add
or
aaa
movsb
and
mov
test
ss
sbb
ja
and
dec
or
in
xchg
jae
mov
push
push
xchg
and
push
and
clc
or
and
dec
mov
stc
pop
js
sbb
jl
fs
ss
sti
data16
cld
mov
inc
jmp
addr16
jmp
cld
aam
shrl
push
in
add
and
hlt
aad
or
sti
cwtl
test
add
lea
mov
adc
ficomps
and
push
mov
ja
cmp
or
pop
std
dec
pushf
out
sbb
aam
inc
divb
fcomps
add
out
adc
pop
add
nop
ss
add
adc
push
add
sbb
mov
inc
divb
or
cld
push
and
mov
lea
push
mov
xor
clc
mov
cmp
add
add
out
cmpl
and
add
lret
dec
jg
adc
add
clc
movsl
nop
popa
dec
xchg
cmpl
mov
in
add
jge
add
jmp
xor
stos
cmpb
inc
std
incl
ret
cli
add
inc
ja
and
leave
addb
int
inc
cli
in
in
inc
clc
les
jge
testb
cmp
mov
call
add
add
sti
jb
inc
outsb
rcrb
or
fadds
sbb
rcrb
aas
pminub
jnp
xchg
imul
out
mov
stos
push
add
pop
enter
popf
ljmp
aam
xchg
or
push
push
pusha
mov
addr16
sbb
jns
xor
ret
xlat
dec
xor
adc
test
aad
add
jae
je
and
cmp
adc
fwait
xchg
add
jecxz
arpl
ja
call
pop
adc
mov
lock
cmp
add
test
cli
push
add
or
insb
jg
in
jmp
xchg
aas
mov
sti
push
dec
bound
cmp
cli
fwait
push
int
jmp
sub
test
clc
xchg
sub
sti
push
xchg
add
pop
test
sbb
xor
push
scas
shl
inc
and
jmp
jmp
cmp
cld
add
decl
xor
adc
sbb
add
mov
adcl
push
mov
call
repnz
adc
sbb
add
add
add
pushf
dec
insl
adc
cmpl
mov
lret
clc
ss
inc
test
cli
dec
scas
cld
test
and
add
sbb
ds
sub
aam
jae
or
scas
jecxz
cli
or
jae
or
add
mov
cmp
or
inc
dec
jne
adc
xchg
add
call
add
add
add
push
insb
mov
jae
out
data16
clc
mov
jns
mov
cmc
scas
stc
jne
and
pop
pop
data16
push
mov
sbb
pop
sub
fnstsw
mov
cs
aas
and
call
xchg
or
and
lahf
daa
mov
orb
add
imul
add
xlat
push
add
xchg
out
ficompl
jo
cmp
push
pop
std
jnp
jmp
xchg
sbb
dec
adc
stc
push
out
jg
add
sti
lahf
inc
add
fwait
fwait
inc
lds
jle
push
nop
and
out
add
sti
xchg
shl
outsb
add
add
fwait
inc
or
xchg
xchg
std
call
mov
and
jbe
or
add
xchg
lahf
inc
int
js
or
rclb
add
ss
insb
jg
push
outsb
mov
xchg
pop
jge,pn
int3
sbb
out
push
add
clc
push
call
mov
incl
pop
inc
loope
into
mov
xchg
divb
ljmp
jmp
inc
sbb
sbb
push
dec
mov
sbb
sahf
cmp
test
mulb
add
adc
sub
or
mov
mov
test
add
popa
loop
test
in
mov
testb
testl
add
or
cli
in
cmovo
jp
or
stc
push
aam
pop
subl
idiv
std
std
out
pushf
daa
cli
je
mov
or
aam
mov
scas
es
jecxz
jl
testb
mov
idiv
std
std
xchg
jge
clc
aad
pop
outsb
mov
aaa
std
pop
js
add
int
mov
xchg
dec
or
std
dec
sub
pushl
dec
jl
xor
dec
push
or
xchg
repnz
out
pop
pushf
mov
ja
xchg
out
clc
pop
fs
pop
sub
jnp
arpl
clc
push
scas
mov
sbb
std
jl
lret
inc
lcall
add
add
add
addr16
sbb
out
clc
mov
and
add
rcr
jle
pop
insb
mov
rclb
clc
je
in
clc
inc
cmpsl
mov
in
adc
jmp
inc
cmpb
push
xor
xchg
and
std
push
add
mov
js
jne
push
add
sti
mov
fidivrl
popl
add
and
cmc
push
add
cmp
pusha
mov
jle
jmp
push
cmp
loope
inc
idivl
add
or
pop
add
test
sarb
fwait
call
jmp
sbb
add
sub
xchg
std
dec
lds
and
push
add
and
notb
add
add
add
inc
add
add
add
sbb
minps
scas
call
in
enter
aam
inc
pushf
jmp
sti
jmp
adc
add
push
add
and
jmp
push
aam
sbb
mov
fiadds
cmp
decl
in
cmovo
clc
jp
or
add
clc
jns
xchg
push
or
jne
jl
in
inc
hlt
ret
push
xchg
or
inc
and
mov
in
jbe
call
ret
loopne
shlb
sahf
and
in
jp
clc
popa
loope
loopne
or
jb
jg
in
std
mov
cwtl
cli
in
sbb
cli
add
fdiv
jle
pop
in
testb
test
sbb
pop
lcall
paddq
shrl
mov
add
mov
cmp
mov
jmp
nop
xchg
fbld
jno
popf
jo
add
int
xchg
push
xlat
jg
movl
lret
jnp
add
shll
cmp
cmpl
lcall
dec
inc
repz
jae
negl
out
sbbl
inc
push
add
int
or
out
mov
call
daa
jns
and
jge
push
mov
pushf
dec
add
adc
lods
xlat
inc
jae
adc
and
outsl
push
and
add
xor
mov
clc
sub
cld
hlt
mov
push
test
fmull
adc
push
add
clc
jmp
jecxz
pop
iret
aam
rolb
cmpb
cmc
repnz
dec
lea
push
dec
mov
cmp
lea
loop
incl
inc
adc
test
lods
mov
sbb
xor
cmpl
mov
incb
call
add
push
addl
out
mov
pop
xchg
mov
push
int3
xor
xor
dec
aad
imul
shl
inc
push
xor
xor
stos
std
iret
pop
popl
inc
mov
mov
cmp
testl
or
add
mov
mov
mov
dec
xchg
push
adc
jecxz
jmp
cli
mov
ljmp
jnp
sbb
std
and
and
out
std
jmp
mov
sti
sub
add
je
and
push
jo
fistpl
call
add
add
add
clc
gs
sbb
add
data16
clc
push
mov
mov
xlat
repnz
test
lcall
and
fildl
iret
popf
lds
jae
or
add
arpl
in
sbb
inc
jne
pop
push
fbld
and
mov
add
adc
out
js
leave
lds
icebp
add
repz
addr16
aas
xchg
mov
fdivl
rorl
imull
shlb
test
sbb
clc
mov
sti
push
stc
xor
mov
rolb
test
jle
sti
mov
ja
and
imul
and
pop
pop
fstps
call
add
add
add
push
ja
inc
jne
stc
mov
xchg
lret
inc
outsb
xor
test
fstps
xchg
dec
int
dec
sub
add
jb
jmp
sbb
sbb
sbb
cmc
cmp
mov
mov
mov
testb
fdiv
jmp
xlat
sub
lret
and
pop
fisubl
test
cmp
mov
jns
idiv
sub
test
and
or
repz
cmpsb
mov
or
insl
and
in
push
push
loope
sub
testb
into
sbb
xchg
xchg
imul
clc
incb
stc
xchg
das
mov
pop
shll
hlt
test
nop
adc
stc
jg
sbb
in
ljmp
add
xchg
in
jae
adc
lds
sbb
inc
pushf
xchg
aas
xchg
sub
das
xchg
mov
adc
xor
js
jle
insb
cwtl
cmp
ds
psubb
std
jae
pop
iret
sti
dec
or
dec
mov
mov
adc
das
pop
fimuls
leave
ret
addr16
fwait
addr16
add
ffree
cmpsl
icebp
add
add
add
add
pusha
leave
jne
leave
cltd
lock
sarb
jne
enter
or
push
outsl
enter
nop
mov
sbb
push
and
cmc
pop
pop
sub
add
dec
insl
movntq
addr16
stos
lea
call
add
push
dec
ret
sbb
ja
jo
test
pop
mov
movsl
add
aaa
call
insl
cmp
in
jnp
and
sti
sbbb
mov
sbb
sti
dec
mov
dec
std
stc
insl
cmp
jecxz
xor
pop
xor
xchg
les
jno
and
les
sub
adc
fsubrp
sti
incl
loop
xchg
mov
jmp
mov
icebp
or
add
cmp
jmp
test
stc
jmp
lods
repnz
push
add
sbb
test
lahf
mov
mov
cmp
sbb
add
mov
leave
sub
sbb
aad
inc
push
fmul
sbb
adc
and
rcrl
inc
add
push
insl
sub
std
jae
outsl
sbb
and
incl
add
push
push
lea
sub
add
clc
scas
std
xchg
lock
add
aas
clc
push
jae
jne
and
repz
adc
shll
mov
mov
and
insb
inc
or
ja
and
inc
add
add
add
add
mov
std
inc
pop
faddp
mov
cld
push
jae
loopne
jae
loopne
lods
rclb
push
add
cli
aas
jb
or
rcll
daa
or
call
orb
fcoml
pop
xchg
stc
aam
mov
in
and
push
pop
outsb
xor
loope
sbb
mov
cmpb
add
add
jge
ret
iret
lahf
mov
stos
fcomip
mov
sub
sbb
clc
loop
mov
sbb
add
jle
dec
pop
dec
dec
mov
dec
clc
stos
mov
xchg
nop
testb
sub
mov
jle
mov
jbe
ret
jecxz
jg
pop
repnz
jge
loop
andb
or
enter
sbb
das
out
push
dec
add
bound
xor
movl
and
insb
push
and
jecxz
push
pop
adc
or
cld
stc
incb
cld
stc
bound
and
mov
sbb
cmpsb
popa
test
add
cmp
dec
add
xchg
pop
cli
scas
adc
addb
cmp
sbb
das
mov
jne
call
jmp
cs
xchg
xchg
jne
stc
mov
idiv
cmp
idiv
ss
push
push
adc
div
popf
add
pop
pop
or
push
movsb
mov
addl
inc
sbb
push
or
jmp
jecxz
stc
call
notl
add
add
add
sub
jmp
in
je
pop
lods
inc
push
fwait
icebp
add
hlt
or
aaa
inc
loopne
cld
std
pushl
mov
scas
adc
jge
add
jg
add
std
insb
lds
ss
std
call
sbb
mov
xor
jge
mov
sub
and
add
add
add
inc
add
mov
int3
out
adc
test
clc
xchg
inc
popa
jno
lock
leave
adc
addl
notl
or
hlt
fdivp
pop
aas
push
xor
je
mov
add
push
out
mov
inc
in
push
loop
mov
loop
scas
in
pop
pop
inc
add
addl
mov
or
inc
add
push
shll
test
or
push
out
sti
push
xchg
mov
cmp
mov
outsb
lret
iret
fs
cmc
rorb
out
jl
shr
jo
jmp
add
cs
sti
js
and
mov
dec
aaa
fs
adc
es
mov
add
stc
cli
or
adc
fbld
dec
inc
enter
sti
jae
or
mov
inc
push
jb
inc
repnz
ja
adc
outsb
pop
or
hlt
stc
jmp
jb
cmp
jo
aaa
sbb
cmp
adc
cld
push
add
repz
add
pop
jmp
mov
iret
add
push
add
and
inc
cmpl
in
dec
ds
mov
push
add
aad
pop
xor
add
add
mov
add
adc
cmp
bound
test
mov
loope
movsb
push
add
inc
xor
pop
xor
push
bnd
or
sbb
adc
mov
add
add
add
add
fdivrs
sbb
mov
add
and
mov
mov
add
push
test
aaa
mov
jg
or
add
leave
and
sti
incl
test
pop
dec
gs
out
cli
std
jge
xchg
adc
inc
out
std
pushl
add
inc
mov
pop
push
ds
incl
inc
and
mov
mov
sbb
nop
jp
jae
jne
sti
jnp
jnp
push
dec
cld
aad
fcmovu
jae
sub
or
adc
call
out
fstps
out
xor
push
jle
lahf
sarl
jg
adc
addb
popf
loope
adc
imul
ja
dec
std
add
aas
xor
icebp
dec
xlat
xchg
push
mov
mov
sbb
out
jg
outsb
xchg
sti
cltd
xor
sarl
int3
jle
unpcklps
lcall
pop
cmp
xor
call
bound
hlt
cli
mov
es
push
sti
push
add
movsl
pop
aaa
add
push
and
inc
dec
push
jb
adc
bound
mov
outsb
or
cs
repnz
jo
jp
pop
pop
jge
out
aaa
mov
cld
repnz
stos
jle
cmp
push
sbb
mov
enter
xorb
pop
pop
jbe
mov
mov
cmp
outsl
sbb
pop
sbb
add
add
add
push
sbb
sbb
out
push
adc
jns
push
cwtl
mov
leave
fcompl
std
jnp
movsl
add
mov
dec
push
lcall
sbb
imul
mov
push
jbe
nop
insl
ds
imul
sub
push
jbe
mov
loop
rcrb
pop
addr16
std
clc
js
and
jns
add
cmpl
mov
add
cmp
mov
cmp
push
loope
pshufw
into
out
cli
jnp
icebp
mov
andl
into
push
mov
pop
jp
add
jge
hlt
ljmp
mov
jae
loope
inc
jns
xchg
hlt
add
hlt
enter
rolb
mov
fs
clc
push
outsb
leave
sti
cltd
and
push
mov
push
pusha
fildl
repnz
pushf
jp
xor
mov
push
cld
fs
loope
push
cmp
ret
xor
jnp
cltd
cmpsl
cld
aad
out
dec
stos
stc
lret
add
add
shr
mov
sbb
xor
enter
jl
xor
addb
add
add
add
add
por
dec
mov
pop
xlat
fsubr
jle
jecxz
mov
xor
sbb
lret
incl
cwtl
xor
add
mov
adc
and
stc
adc
cmc
mov
sub
adc
cmp
pusha
cmp
adc
out
stc
fsubrp
push
pop
bound
xchg
lret
clc
cli
mov
add
or
xor
test
inc
test
sti
repz
ja
or
inc
dec
test
fistps
test
adc
pop
push
out
stc
jo
pop
push
bound
lock
adc
mov
loopne
into
or
xchg
mov
add
xor
mov
xlat
dec
push
fcom
std
incb
inc
scas
cmovo
mov
pop
mov
fimull
out
arpl
inc
or
inc
add
aas
notb
stos
mov
push
loope
bound
aam
push
mov
sbb
fistps
not
adc
cld
inc
mov
fcmovb
imul
jb
adc
dec
enter
add
add
add
add
scas
or
push
gs
cmp
bound
cli
pushl
xchg
imul
dec
ret
and
or
fidivs
jnp
stc
popa
jno
call
inc
fmul
lods
xchg
cld
cli
daa
mov
pop
mov
mov
ja
adc
insb
stc
jmp
or
ja
xorl
pop
or
loop
daa
xchg
out
popf
stos
out
jle
lret
adc
lret
sub
idivb
add
push
clc
dec
roll
mov
xchg
fildl
jle
iret
popf
sub
or
sbb
mov
jge
or
push
xlat
inc
int
ss
mov
adc
fwait
sub
movsb
inc
mov
add
rcr
andb
mov
pop
ret
out
add
fs
repnz
jg
bound
inc
push
jmpw
test
es
or
mov
in
jae
pop
lahf
inc
or
sub
aad
inc
data16
adc
pop
mov
add
call
shlb
test
sahf
in
stc
add
or
xchg
sarb
stc
xor
jb
cmp
sbb
add
cmp
jle
ud1
in
push
xor
xor
jmp
pop
mov
stos
add
mov
pop
ret
dec
mov
imul
stos
sub
add
adc
dec
lea
loope
std
sbb
mov
add
add
add
rcll
adcb
lret
cmp
sub
negb
push
add
punpckhdq
adc
sub
scas
sbb
negl
and
std
adc
cld
out
ret
inc
test
icebp
xor
stc
jns
jnp
and
fnstenv
mov
xchg
xor
mov
in
aaa
mov
mov
add
loope
xchg
jmp
jnp
aam
jl
fwait
adc
fstps
enter
and
or
int
jp
icebp
test
js
xchg
lds
mov
test
pop
into
or
pop
clc
push
outsb
inc
push
jmp
nop
aam
and
add
jle
inc
divl
add
inc
push
sbb
popa
out
sub
jecxz
xchg
sarl
dec
sub
mov
test
inc
and
sbb
sub
fistps
and
lret
jae
out
loopne
xchg
repnz
addr16
push
out
bound
cmpsl
inc
or
cs
mov
leave
xchg
add
push
cmp
or
jb
cmp
xor
sbb
pushf
add
mov
jae
jno
and
orl
pop
jae
xor
out
sbb
scas
mov
ret
iret
xchg
inc
or
iret
xor
test
arpl
cmc
pop
ds
ret
sub
clc
push
push
loopne
in
add
icebp
pop
cli
testb
add
add
add
add
push
push
add
idiv
out
int
cmp
push
hlt
rcrl
rcrb
push
outsb
out
adc
sbb
mov
pop
sbb
in
call
scas
push
pop
inc
loope
mov
lea
decl
mov
add
loope
test
movsl
jmp
in
call
adc
repz
add
xlat
stc
imul
sbb
dec
push
xlat
stc
adcb
in
call
fwait
or
add
mov
lret
add
ss
std
inc
ret
pop
xorb
out
cmp
ret
adcb
ljmp
sub
cwtl
inc
clc
out
mov
rcr
add
fistpll
add
insl
fldpi
pop
mov
adc
push
mov
sub
mov
into
mov
adc
add
dec
cs
push
out
std
jle
in
or
adc
les
jge
push
xchg
lds
gs
outsb
or
sub
call
pop
out
or
add
iret
add
repnz
test
push
decl
add
loope
cmpb
inc
jbe
fistps
xlat
adc
std
aaa
dec
repz
cld
mov
insl
divl
movzwl
cmp
mov
adc
cmpsb
jnp
and
xchg
and
sbb
das
popf
adcb
in
jmp
cmp
mov
mov
js
mov
adc
aas
popf
loopne
sub
sbb
call
rcrb
pop
xor
fwait
dec
or
cli
faddl
jecxz
fdivr
cmp
mov
push
pusha
dec
cmp
push
pop
je
xor
and
test
jmp
sbb
sti
push
shr
pop
add
movsb
or
call
sti
in
mov
cli
add
add
mov
add
add
add
add
push
add
cmp
adc
cmp
xchg
sub
shlb
add
je
in
cli
call
dec
cmp
in
mov
add
bound
sbb
push
lock
add
sysexit
add
adc
je
and
inc
or
bound
popw
mov
sbb
adc
dec
in
negb
add
add
add
add
ss
cmpsb
xchg
nop
add
adc
add
popl
add
jb
push
in
xor
mov
repnz
adc
sub
int3
std
xchg
jne
add
lods
jno
xorl
sbb
lods
js
aaa
in
add
inc
mov
sub
movsb
mov
sbb
call
add
add
add
stc
jl
js
jae
jmp
sub
sbb
jne
or
jecxz
push
cmp
xchg
orl
stc
and
mov
nop
jecxz
cli
lahf
jns
call
adcl
in
mov
into
adc
cmp
xchg
arpl
cmp
jae
int
or
clc
xchg
lock
jo
add
cmc
inc
clc
icebp
icebp
add
lods
xor
push
adc
stc
add
xchg
cmpsl
jp
inc
outsb
ja
or
push
xchg
push
mov
daa
add
adc
in
repnz
and
lock
cmpsl
ja
aad
pop
clc
push
out
mov
and
out
inc
inc
pop
repnz
xchg
cmp
test
lcall
sti
bound
jb
je
cmp
add
in
cli
push
je
test
add
add
add
add
je
fs
fimull
mov
xor
loope
or
pop
add
adc
xor
lcall
ljmp
jb
or
jmp
jp
stc
push
ds
loope
inc
test
dec
push
jb
cwtl
repnz
pop
cli
push
xor
test
shlb
cmovs
push
or
shll
push
xchg
sbb
jmp
outsb
cli
pop
cli
pop
sub
nop
xchg
mov
push
jno
fnsave
movsl
incb
push
cmp
shlb
clc
dec
xor
je
fisttpll
mov
icebp
add
rolb
add
push
shl
pop
cwtl
aad
add
out
jmp
mulb
mov
xchg
sub
xchg
nop
bound
cli
xchg
js
call
jae
in
popf
sti
stc
sub
jne
jno
aas
out
push
add
in
pop
mov
mov
out
std
ljmp
cld
sti
aaa
les
cmc
in
cli
in
std
cmpl
sbb
lea
mov
add
add
add
mov
stc
adc
mov
shrb
inc
lock
jnp
sti
mov
push
outsb
pop
adc
pop
js
push
pop
push
aam
aas
and
fiaddl
mov
inc
or
xchg
arpl
adc
dec
lret
seto
std
jno
pop
pop
adc
pop
push
sbb
adc
cld
int3
xor
mov
testl
add
sar
insl
inc
pop
out
jge
xlat
orb
add
mov
fisubrl
jmp
sbb
add
adc
xchg
xlat
stos
js
stc
xor
push
add
clc
lea
inc
retw
xor
nop
mov
je
out
outsb
fs
lods
add
ljmp
or
fyl2xp1
jmp
adc
sbb
inc
add
pop
cmp
and
lret
lea
sbb
add
subl
decl
or
lock
sbb
scas
and
rcll
mov
sub
mov
and
testb
fdiv
test
pop
xor
push
outsb
inc
dec
push
inc
fisttpll
test
pop
and
jne
testl
stc
mov
add
inc
notl
add
jnp
and
aam
pop
in
jns
and
add
push
and
inc
mov
insb
loope
add
pop
sbb
stc
push
stc
dec
divb
stc
daa
stc
hlt
jae
xchg
das
cli
mov
xor
andl
imul
jnp
das
mov
add
loope
push
adc
call
jnp
mul
mov
inc
clc
test
inc
fsubrs
lods
std
cmpb
adc
lods
fldl
or
enter
or
add
mov
insb
in
sahf
jbe
jl
push
jmp
imul
jge
xchg
adc
out
filds
js
out
pop
mov
adc
ficoml
mov
out
jne
sbb
cmp
mov
sub
lcall
mov
daa
outsl
out
stos
or
xor
add
data16
aad
xchg
out
push
out
add
outsb
add
push
jg
lcall
ret
stos
push
outsb
inc
add
cmp
inc
clc
insb
mov
sub
cltd
shlb
call
insb
mov
aam
jmp
iret
stc
sbb
sub
cld
sub
inc
jmp
sbb
mov
test
and
add
add
add
push
std
sub
sbb
stc
test
jb
and
push
lret
push
mov
adc
inc
stc
test
or
stc
out
pop
aas
rcr
mov
bound
insl
add
xchg
mov
add
inc
js
rcrl
notl
push
push
mov
rcrl
push
push
int
mov
repz
add
movsb
in
or
mov
je
addr16
mov
mov
add
add
sbb
sub
pop
add
inc
int
mov
pop
add
dec
loop
dec
pop
inc
mov
inc
sub
mov
mov
or
inc
or
idiv
jae
push
pop
or
add
add
add
add
or
push
into
imul
stc
cwtl
or
dec
ja
stc
xorl
sub
add
push
add
test
mov
dec
mov
das
or
std
cmpb
cli
sub
clc
mov
imul
mov
mov
rolb
add
add
add
add
push
mov
mov
loope
clc
lahf
sub
push
out
mov
scas
out
shrb
lock
loope
clc
popf
sub
inc
inc
inc
clc
lahf
dec
inc
cli
push
out
cmp
sub
shl
add
fisttps
clc
popf
mov
push
cli
push
out
mov
mov
pop
lods
sbb
add
push
out
mov
jo,pt
mov
push
add
sub
push
test
add
mov
adc
jmp
mov
adc
adc
cmp
sub
data16
pop
push
adc
sbb
sub
ds
cmp
mov
add
add
add
ds
cmpl
push
dec
sub
test
jb
xchg
adc
cmp
sub
push
push
bound
inc
in
dec
std
decl
sbb
or
jno
push
adc
cli
lcall
cltd
in
or
outsl
dec
push
ss
and
mov
notl
pop
ret
sub
fs
testl
add
add
add
push
pop
and
fwait
icebp
loope
add
pop
xchg
add
rcll
or
dec
and
and
push
mov
cmp
xchg
incl
shlb
divl
test
call
mov
dec
pop
cmp
mov
jp
sbb
push
push
or
fistpl
shr
mov
push
sbb
icebp
xor
or
and
inc
in
mov
mov
add
icebp
inc
add
lcall
mov
cmpsb
inc
clc
cwtl
sub
les
inc
mov
cli
and
jp
nop
fcmovnbe
cli
lahf
xor
call
das
js
xchg
sti
hlt
dec
xor
test
push
push
add
mov
add
add
add
jne
xchg
xorb
icebp
inc
mov
fs
movsb
das
outsb
dec
hlt
mov
sarb
push
aaa
jge
fwait
xor
test
mov
les
dec
add
cmpsl
push
mov
mov
ss
sub
sahf
pop
hlt
fwait
and
sub
enter
mov
aas
icebp
or
inc
clc
cltd
and
sbbl
and
add
adc
mov
dec
mov
test
shlb
test
mov
jns
jmp
mov
sbb
clc
insb
cmp
inc
jne
inc
mov
add
sbbl
jno
mov
xchg
lret
mov
aaa
xor
dec
sbb
ss
push
adc
xchg
sbb
outsb
dec
sbb
or
ljmp
cmp
mov
dec
jmp
testl
ljmp
jmp
cmp
add
clc
jne
or
pop
dec
mov
add
push
jmp
jmp
sbb
mov
outsl
add
add
pop
inc
add
mov
add
rcrl
or
les
push
inc
roll
rcrb
stc
pop
bound
je
int3
test
push
dec
and
dec
adc
clc
fs
mov
in
sbbb
std
xchg
clc
inc
subb
mov
mov
out
push
ljmp
add
add
add
add
add
mov
test
or
add
or
subl
mov
cmp
cli
out
je
push
jbe
add
cld
movsb
ljmp
dec
hlt
repnz
ljmp
add
call
and
push
pop
ret
add
repz
mov
adc
xlat
add
pop
out
or
ret
adc
test
cltd
pop
push
ret
clc
popf
pop
sbb
lret
out
add
arpl
js
outsb
jmp
inc
or
mov
in
add
jns
in
clc
adc
adc
sbb
dec
lret
call
xor
add
imul
dec
bound
jbe
repz
shlb
add
je
lock
test
lds
test
mov
sbb
stc
jmp
rcr
call
fs
inc
or
dec
inc
and
mov
call
lcall
add
xchg
ret
sbb
cmp
xchg
divl
sti
leave
or
push
add
jbe
jp
add
rclb
enter
jb
cmovp
mov
sbb
call
adc
add
adc
stc
cli
fadds
dec
xor
std
es
xchg
pop
add
divl
fimull
testl
adc
call
test
dec
cmp
ljmp
stc
call
dec
lds
inc
and
mov
pop
add
call
and
clc
xchg
mov
cltd
inc
push
mov
cmpsl
dec
bnd
add
clc
mov
imul
stos
out
xchg
les
stos
add
mov
testb
scas
sub
mov
add
clc
xchg
add
pop
add
adc
test
lods
out
aad
mov
aad
out
mov
sbb
mov
and
jp
clc
out
dec
in
push
cmp
dec
repz
mov
and
divl
pushf
js
jl
out
jne
or
in
outsb
enter
add
clc
fwait
pop
push
lret
popa
cmp
sti
imul
push
cs
popa
and
mov
adc
daa
xor
inc
jmp
cmp
addr16
push
mov
cltd
sub
test
adc
lret
xchg
push
out
sbbl
adc
in
imul
rorl
stc
rorb
fchs
or
hlt
outsl
sub
inc
pop
add
mov
pop
jb
jb
add
xor
getsec
insb
mov
pop
lods
cli
call
sti
dec
or
sbb
aam
sub
jl
add
je
add
decl
and
mov
push
jb
inc
jp
sti
dec
or
test
sub
jl
or
roll
jmp
sub
dec
cmp
rcrl
dec
push
push
mov
or
fiadds
notb
inc
add
sbb
xor
incb
xchg
loope
decl
scas
out
test
sbb
inc
popa
clc
push
push
sbb
mov
repz
jmp
test
xchg
sbb
ja
add
mov
cmp
popa
sbb
setne
push
pushl
adc
add
cwtl
push
or
popa
jecxz
add
sbb
clc
mov
dec
aam
push
inc
push
mov
add
lods
loop
jl
cmp
sti
iret
dec
daa
xchg
in
in
add
hlt
mov
pop
mov
xor
je
arpl
call
es
sarl
add
lods
std
clc
or
cmp
jae
inc
loope
add
lods
sub
sbb
repnz
mov
jp
and
sbb
jl
outsb
std
xchg
and
push
je
aam
dec
in
pop
push
out
add
pop
push
cmp
outsb
aas
adc
mov
sub
sbb
jmp
jmp
clc
inc
clc
sub
call
addr16
aam
pop
out
into
sbb
xchg
ret
out
add
mov
dec
cli
adc
sbb
call
sti
pusha
jmp
jmp
dec
in
subb
negl
push
or
mov
call
pop
mov
mov
stc
jmp
sbb
or
out
cmpsb
adc
cld
inc
clc
call
rcrl
cmpsl
mov
icebp
mov
add
add
add
xor
pop
call
dec
push
test
and
fstpl
in
mov
test
push
jo
cli
mov
ret
jae
add
mov
cmp
fsincos
push
sub
insl
ficompl
push
out
loop
test
pushf
mov
add
xchg
cs
and
or
mov
add
add
add
add
mov
add
sub
test
push
mov
and
divl
cmp
and
mov
add
sbb
jns
loop
aad
out
je
ds
add
in
into
mov
inc
shlb
and
incb
lahf
rcll
adc
xchg
adc
add
add
add
add
rcll
inc
hlt
and
test
daa
rcrb
enter
jmp
leave
and
mov
pop
cmp
je
xor
call
sub
pop
inc
cmc
cmp
add
ss
clc
lods
std
gs
cld
imul
cmp
push
and
dec
notl
jmp
add
idivl
movsl
add
lods
ss
add
add
add
mov
pop
mov
jns
clc
add
xor
orl
pop
stos
mov
sbb
push
or
repnz
cmpsl
add
adc
add
dec
xchg
nop
mov
divb
jge
add
xchg
push
testl
add
fsubl
mov
sti
mov
xchg
pushf
add
jbe
pop
loopne
pop
dec
add
and
xor
imul
jnp
repz
je
or
int3
pop
add
or
hlt
cld
push
out
mov
jmp
iret
add
pop
pop
push
cs
aaa
push
test
mov
push
call
cmpsl
jne
push
push
adc
std
jne
sbb
dec
aaa
rcrl
fsub
ret
add
popa
das
out
jb
je
add
std
cmp
mov
leave
shlb
dec
in
xchg
call
mov
lea
xchg
leave
pop
daa
sbb
sub
jae
pop
or
add
adc
add
dec
in
call
lret
call
fwait
rcll
push
mov
push
add
add
add
outsl
inc
add
lds
clc
xchg
mov
push
xchg
push
adc
notl
push
jge
adc
sbb
push
mov
mov
dec
add
mov
or
mov
test
es
or
and
icebp
add
push
nop
pop
and
mov
test
out
push
or
insb
and
divl
and
dec
add
add
mov
pusha
jns
cli
inc
fdivrs
stc
in
repz
clc
cmp
pop
int
ss
leave
xor
clc
popf
cmp
jne
fistl
repnz
mov
idivl
clc
sub
jae
jge
mov
rorb
push
xor
inc
jecxz
rol
movsb
flds
shlb
add
xor
fdivl
stc
add
push
idivl
clc
push
data16
jmp
int
es
dec
pusha
mov
ljmp
xor
sbb
pop
xor
in
push
mov
xor
fs
dec
push
jnp
xlat
push
pop
fcoml
inc
ret
pushl
or
scas
addr16
fcomip
push
out
icebp
and
daa
pop
insb
ret
imul
clc
xchg
sub
add
mov
add
add
add
add
nop
xor
call
int3
sub
scas
aaa
shll
repz
orl
les
outsb
xorb
add
clc
push
roll
jmp
push
sti
ljmp
mov
and
jno
je
adcb
jl
xchg
adc
test
adc
lret
pushl
pop
push
nop
cmp
add
shl
sbb
xchg
hlt
lea
ja
jmpw
inc
stos
cmp
bound
arpl
cmp
pusha
cmp
test
rorl
addl
lea
add
push
or
lea
divl
divl
divl
scas
sti
call
mov
pop
std
ret
test
or
jns
mov
fsubrs
test
mov
sub
or
dec
decl
pop
in
push
push
roll
adc
aad
push
add
sbb
pop
idiv
push
ret
dec
push
pop
in
jle
push
jl
movsl
add
adc
jl
push
add
outsl
call
inc
hlt
ss
add
or
and
xorl
add
inc
or
adc
stc
jge
push
or
and
sti
out
jb
mov
sub
leave
inc
and
test
mov
pushl
xor
and
test
add
stos
adc
jecxz
mov
hlt
popf
add
jmp
imul
add
incl
jne
mov
cmp
jae
ret
repz
sub
mov
mov
outsb
push
sbb
fs
adc
mov
outsb
lret
pusha
pop
stc
flds
daa
push
mov
lea
jne
incl
mov
test
push
addr16
and
adc
in
mov
or
push
adc
fs
out
lret
adc
ret
and
add
pop
add
or
stc
mov
cmpsb
mov
jns
xchg
fwait
or
or
loopne
divb
pop
shll
idivl
jb
repnz
jb
adc
mov
mov
push
xor
mov
dec
and
mov
push
jb
scas
adc
sti
push
repnz
pop
ud0
call
aam
sub
mov
bound
push
xchg
aaa
push
lock
cmp
test
daa
and
ret
stc
je
fwait
rolb
xchg
lcall
aas
andl
jle
dec
in
sbb
pop
pop
add
ss
add
mov
dec
push
mov
cmpb
add
decl
loop
pcmpeqb
dec
cmp
pop
xor
pop
mov
ds
ja
aad
xchg
cwtl
add
and
lret
jae
or
xor
inc
and
sbb
adc
and
clc
sbb
adc
pop
aaa
daa
ret
jnp
stc
dec
jae
fcoms
sub
jge
xchg
dec
push
jae
and
adc
dec
inc
and
imul
cs
add
rorb
testl
pop
jnp
ljmp
leave
in
mov
lret
mov
aas
push
and
rorb
ss
and
mov
aaa
pop
popf
mov
mov
jne
callw
push
or
inc
xor
jge
bnd
pop
out
inc
xor
add
icebp
lcall
sbbl
clc
inc
xchg
icebp
cmp
out
xorb
mov
pusha
in
jno
lods
pop
in
push
lea
mov
mov
push
jo
pop
lcall
jp
fwait
in
je
outsb
adc
pop
mov
sahf
je
sbb
mov
add
add
add
add
je
jns
je
js
je
sbbb
sub
test
adc
scas
stc
xor
cmpsl
lcall
lods
mov
bound
call
jb
mov
stc
mov
cmp
adc
sub
dec
mov
scas
jae
ljmp
movsb
push
fwait
pop
inc
test
hlt
adc
cld
push
stc
push
cmpsl
je
inc
daa
or
shrb
decl
arpl
ljmp
iret
bound
push
call
lcall
or
ret
xchg
sar
in
push
mov
rol
push
dec
mov
pop
arpl
test
fwait
enter
shlb
enter
jp
add
push
add
or
sub
lahf
mov
sub
inc
and
popa
lret
or
sbb
addl
dec
add
ss
or
xchg
mov
jae
sbb
jae
add
shlb
cmpb
add
testb
add
orb
addr16
cmpb
rcl
dec
add
and
add
add
add
scas
xchg
add
xchg
mov
std
test
stc
xor
mov
or
dec
pop
jg
cld
inc
int
pop
dec
mov
pop
stos
mov
mov
cld
pop
sub
push
out
jge
ret
out
enter
call
mov
aam
into
fs
pop
jge
and
jmp
push
sbb
aaa
pop
clc
dec
sar
add
daa
add
fcomi
jle
cld
test
mov
pop
lahf
lgs
stc
ss
mov
sub
scas
cld
aaa
ljmp
les
or
lcall
clc
push
mov
lds
pop
sarl
ss
stos
pop
jb
adc
add
std
cltd
inc
in
aad
push
in
std
cmp
jmp
add
add
add
adc
loope
push
adc
outsb
pop
adc
not
test
daa
mov
loopne
dec
push
stos
ret
scas
push
xlat
pop
dec
pop
das
shrb
icebp
popa
callw
test
push
add
push
pop
push
sub
mov
subl
scas
cmp
and
std
pusha
or
test
add
int3
addr16
adc
and
rol
lcall
adc
call
mov
fdivrs
mov
add
adc
pushl
pop
andl
divl
loope
fcmovne
testl
rcl
or
xchg
lcall
mov
fdivp
mov
rorl
jge
dec
push
sub
cld
push
or
call
add
add
add
mov
add
pop
mov
pop
mov
xlat
notl
clc
cmp
jp
outsl
jl
push
test
aas
cmp
enter
mov
std
jge
dec
aad
mov
or
lret
repnz
sub
dec
cmpsb
test
hlt
jl
loopne
cld
jmp
sub
and
daa
aaa
dec
mov
dec
inc
int3
xor
mov
shlb
add
inc
push
add
inc
mov
add
mov
hlt
sub
push
subl
and
pop
insb
shl
adc
jl
inc
mov
cmp
sub
sbb
sbb
xchg
sub
lret
repz
ss
out
cltd
adc
lods
inc
outsb
rorb
imul
add
add
clc
push
out
mov
pop
mov
add
int3
call
adc
sbb
scas
and
or
sbb
icebp
pop
and
orb
mov
push
out
clc
push
mov
jge
add
sub
xchg
jg
stc
bound
mov
push
sub
mov
scas
add
inc
fwait
call
call
out
test
pop
add
repnz
xchg
inc
fldenv
in
jp
mov
sti
push
popa
inc
pop
or
or
lcall
sarl
pop
jmp
sti
push
test
push
add
daa
testb
and
add
addl
rolb
add
add
add
add
scas
xchg
iret
je
mov
jge
jge
addb
shrb
sahf
popf
pop
add
jge
addl
call
jne
xor
call
or
or
filds
add
xchg
mov
rcll
add
sub
xor
pusha
push
xor
push
xor
xor
adc
or
and
add
cmpsb
xchg
jl
clc
stos
std
jb
xor
jae
cmp
mov
mov
cmpb
lret
hlt
xorl
add
lret
push
test
add
clc
adc
jl
cmp
scas
test
or
add
adc
add
clc
and
call
jae
addb
mov
xor
inc
lock
add
jae
enter
iret
mov
clc
cmp
mov
mov
js
nop
call
insl
aas
fcompl
arpl
jo
out
jle
in
dec
popf
and
ja
jle
jge
filds
cmp
loop
call
sbb
divl
test
fmul
xor
mov
and
out
clc
popf
lods
repz
jo
pop
les
dec
and
fbld
mov
dec
inc
outsb
int
push
aaa
lret
dec
xor
call
push
out
push
aaa
test
scas
test
inc
mov
add
push
cmpsl
adcl
test
push
les
and
pop
or
hlt
xchg
lret
dec
add
call
jb
mov
pop
scas
add
sarb
aas
inc
xchg
sarb
ss
xchg
xchg
mov
sti
push
jge
ret
push
jb
jg
jle
lret
push
xchg
dec
cld
pusha
cmp
std
pop
mov
inc
rolb
sbb
subl
pop
ljmp
add
int3
ret
ss
cmp
push
out
push
enter
lea
dec
push
pop
in
stc
out
test
xchg
lret
jge
scas
faddl
test
add
stos
cld
jae
mov
adc
add
xchg
sbb
jne
sub
jle
sbb
test
mov
add
loope
insl
push
sbb
jae
clc
loope
dec
pop
pop
cli
test
es
and
loopne
cmp
sub
lret
jb
fdivl
push
xchg
or
das
mov
jnp
lock
push
data16
inc
xor
aad
fadds
jne
sbb
pop
jb
fdivrl
adc
add
faddl
cmp
shlb
fsub
sub
cmp
add
add
add
push
lcall
lock
cmc
inc
clc
fwait
cmpsl
dec
cmp
pop
pop
cmp
nop
push
pusha
mov
xchg
cmp
sbb
add
push
addr16
push
out
mov
mov
add
scas
adc
popa
movsl
fs
adc
jns
pop
out
pusha
inc
push
enter
cmpl
out
repz
add
pop
xor
add
sub
out
clc
xchg
mov
leave
icebp
inc
mov
pop
movsl
inc
add
push
cltd
dec
cmp
clc
fs
cmp
rorl
jae
mov
movsb
jmp
les
in
or
xor
push
movsl
mov
aam
add
push
inc
push
sub
lcall
dec
inc
stc
jg
pop
add
mov
es
jns,pn
or
pop
add
ljmp
jmp
fs
outsl
setge
push
pop
arpl
pop
adcb
adcl
pop
test
add
push
ljmp
fdivl
inc
in
xor
lret
pop
add
dec
loopne
fadd
call
push
aam
int3
push
in
fucomip
xor
jmp
mov
mov
mov
outsb
je
jecxz,pn
and
insl
pop
dec
sbb
repnz
imull
push
cmp
loopne
adc
add
imul
inc
mov
sub
jae
push
test
ret
stc
add
adc
cmp
mov
fbstp
test
jno
cwtl
enter
imul
mov
push
repnz
fsub
fwait
cltd
ret
stc
scas
pop
add
clc
xor
push
pusha
je
cli
dec
fldenv
cmp
dec
pop
jecxz
dec
adc
mov
dec
cmp
push
out
pop
lods
xlat
js
outsl
mov
add
fwait
xor
pop
lock
dec
cld
lea
clc
push
out
mov
in
mov
aas
xchg
add
js
clc
push
out
mov
cmpsb
and
inc
dec
adc
dec
outsb
cmp
imull
fistps
dec
cmp
mov
ret
sub
cmpsl
dec
hlt
sub
fcoms
jno
clc
push
out
add
cmpsb
js
cli
fidivrs
xchg
jmp
repz
push
insb
lcall
xor
mov
mov
pop
add
add
fsqrt
xchg
nop
jmp
insl
lea
ja
xchg
jmp
jp
add
sti
jmp
jmp
cmp
and
xchg
stc
stc
add
pop
and
push
clc
in
and
sahf
stc
jb
cli
pop
insb
mov
sbb
pop
xlat
push
add
xchg
call
lcall
dec
inc
pop
cmp
flds
jmp
sbb
clc
into
aam
rolb
jl
idiv
jae
sarl
dec
divl
divb
add
add
add
add
cmpsb
loope
mov
mov
repz
mov
scas
sbb
popa
adc
xchg
adc
add
rcrb
push
pop
adc
lea
addb
inc
add
shl
mov
addl
fildl
clc
mov
adcb
mov
dec
add
push
test
cmp
jo
or
std
rcrb
add
clc
cmp
fsub
mov
push
mov
call
call
out
scas
std
incl
scas
xor
testl
dec
dec
mov
nop
clc
push
out
stos
inc
pop
cmp
repnz
pop
rolb
jge
or
pushf
shr
mov
enter
clc
push
out
pop
and
hlt
and
jp
clc
push
out
nop
mov
add
and
lahf
push
adc
out
mov
test
jns
out
clc
mov
test
push
or
sbb
out
scas
jmp
out
clc
and
sub
mul
add
popf
fmull
or
bound
add
jae
adc
push
add
jp
jmp
or
push
add
jle
jmp
sub
cmp
repnz
xchg
sti
idiv
call
adcl
jmp
stos
cwtl
into
out
idiv
call
hlt
push
add
lds
xchg
pop
add
insb
xchg
jg
add
add
popl
inc
dec
xor
into
call
bound
jge
stc
xchg
orl
cmp
pop
or
testl
and
add
cmpsb
jbe
add
fmull
mov
mov
decl
pop
je
mov
cmc
div
pop
or
lret
bound
add
pop
divl
add
add
add
add
fwait
push
and
or
cmp
pop
testl
or
push
push
jecxz
and
incb
clc
in
add
clc
sub
sbb
ret
xchg
std
clc
cmp
or
std
clc
xor
or
std
cli
cwtl
insb
lods
std
decl
lods
std
decl
lods
std
incl
insl
lods
out
aam
xor
inc
and
daa
adc
stc
adc
repnz
call
incl
scas
xchg
xor
and
imul
pop
aam
add
cltd
adc
testl
call
and
adc
fs
and
out
jae
mov
pop
stos
cmp
js
arpl
push
and
mov
push
fisttps
inc
nop
mov
jg
addr16
push
pusha
mov
out
mov
push
call
lea
mov
clc
push
push
ret
add
add
iret
or
jmp
sti
push
xchg
adcl
jmp
sti
push
test
lods
xchg
out
and
push
and
cli
and
bound
lahf
test
mov
add
movsl
xchg
out
bound
ja
jmp
lods
sbb
cli
and
jmp
lea
and
aaa
fsubrl
shr
dec
inc
jmp
add
add
add
push
add
xchg
notb
xchg
add
xchg
adc
push
fs
mov
add
push
adc
fimull
arpl
jge
inc
cmovge
int3
call
mov
imul
mov
mov
mov
jle
adc
add
adc
push
in
incl
mov
push
inc
loope
les
sbb
cli
je
jbe
mov
aaa
xor
or
inc
adc
scas
add
add
inc
test
add
lods
andb
mov
xchg
push
jmp
scas
notl
scas
xor
test
das
mov
mov
or
sahf
popa
std
xchg
mov
add
add
add
add
xor
pop
sarl
jae
jo
in
into
mov
xor
js
aas
sub
inc
pop
cmpl
xor
jne
mov
clc
mov
sub
fsubrs
std
out
xor
push
pop
dec
add
mov
mov
lret
mov
out
add
testl
sbb
add
add
add
add
jb
sti
jle
mov
outsb
and
push
jge
data16
subb
pop
out
into
fiaddl
or
mov
out
jp
out
clc
cmp
repz
out
clc
mov
add
push
add
cli
push
add
sbbb
stos
repz
jge
repz
pop
sub
push
rcrb
bound
jge
call
lock
add
jge
repz
add
out
ret
stc
fistpll
sbb
out
fdivrl
pop
or
cmp
test
int3
std
add
cmp
pusha
inc
cmp
jl
add
dec
andb
in
sbb
lret
push
add
es
push
loope
or
sbbb
rolb
add
loope
lock
bound
in
and
mov
int3
bound
jmp
inc
cmp
int3
decb
int3
sub
jmp
or
leave
mov
inc
and
loop
push
mov
push
push
push
sbb
adc
mov
add
add
add
add
cmp
dec
and
pop
cmc
pop
sbb
sub
bound
movsb
jb
mov
cmc
adc
jns
incl
lds
clc
jge
add
pushl
addl
cli
jg
movsb
andl
movsl
clc
jge
test
pop
adc
sbb
std
test
mov
les
adc
pop
std
incl
xchg
jns
mov
mov
inc
das
add
or
test
sbb
out
pop
into
or
mov
sub
jmp
out
xor
pop
mov
sbb
aam
lahf
add
push
out
cmp
pusha
dec
fsubrl
fs
or
outsb
mov
mov
add
push
sbb
add
xchg
mov
or
clc
push
or
mov
cmp
stos
popf
xchg
push
xchg
xchg
rorl
xchg
push
mov
stos
xchg
cmp
or
and
lods
inc
call
push
mov
rclb
out
pop
movsb
and
loope
and
push
cmp
dec
out
jb
cmp
push
cwtl
cltd
jmp
add
add
add
push
add
xchg
add
sti
fwait
mov
pusha
aaa
cmp
cmpsb
rorl
pop
test
adc
stc
mov
pop
cmp
add
sbbl
jno
dec
or
testl
pop
popl
jmp
jno
and
or
inc
add
rclb
dec
adc
jmp
pushf
mov
rclb
pop
pushf
out
mov
mov
jge
add
je
out
pop
lds
and
sbb
mov
jg
pmullw
cmp
mov
pop
fistps
add
out
dec
push
fiaddl
adc
pop
addl
jge
cs
enter
test
and
adc
sti
xor
loopne
incl
addl
cmp
in
sti
aas
add
mov
adc
adc
push
sbb
jns
mov
jl
mov
mov
ds
add
aas
jp
aam
jnp
cwtl
mov
add
jmp
fdivrp
mov
jnp
pop
cwtl
cmp
cmp
add
jns
mov
jo
inc
add
movsb
add
or
xor
notl
cltd
lret
loope
dec
pop
leave
jl
adc
jns
clc
outsl
dec
hlt
pop
jno
pop
mov
fistps
push
sbb
xchg
mov
mov
push
insb
inc
rorl
dec
aad
mov
in
inc
dec
pop
pop
out
movsb
sbb
jge
xor
pop
jge
out
sub
add
add
add
add
mov
imul
out
or
mov
pop
push
pusha
arpl
adc
out
add
add
je
incb
inc
dec
dec
adc
mov
mov
in
add
sub
xlat
sub
pop
cmp
or
xchg
test
out
enter
mov
movsb
imul
add
add
add
pop
daa
ds
adc
xorl
shll
clc
add
insl
test
adc
mov
jecxz
and
fstl
std
push
loopne
dec
push
rorb
and
leave
aam
push
and
xchg
in
and
or
inc
pusha
jp
jl
jp
setae
or
frstor
cli
add
push
pop
mov
nop
stc
mov
adc
mov
sbb
or
test
or
add
testb
fnstsw
repnz
jl
gs
push
xchg
cs
push
adc
jnp
gs
inc
clc
cli
mov
das
aas
into
add
roll
add
add
je
mov
aam
lret
jno
loope
cmpsl
pop
mov
sub
jbe
jae
outsl
add
jge
xchg
mov
cs
jae
jbe
jae
loope
pop
inc
mov
je
pop
mov
fcoml
mov
add
hlt
or
cmp
pop
testl
lods
inc
add
insl
aas
adc
and
xchg
sub
xchg
stos
pushl
out
cs
out
and
ret
sti
jb
ljmp
push
data16
hlt
pop
jecxz
nop
sbb
add
fwait
test
dec
mov
cmp
xlat
out
mov
popf
call
adc
add
jp
xor
jl
adc
fcompl
pusha
inc
lock
js
xor
jle
iret
adc
fcoml
aaa
pushf
xlat
mov
lods
mov
out
jne
add
or
jmp
add
call
test
cmp
jae
mov
call
sbbb
outsl
loope
cli
add
push
stc
aam
xchg
iret
inc
push
sbb
icebp
dec
nop
jae
pusha
pop
call
pop
sti
in
mov
add
add
add
add
xchg
jae
inc
pop
cmp
adc
jmp
push
and
pop
cwtl
shll
roll
mov
roll
imul
imul
push
adc
inc
or
stos
data16
outsb
mov
clc
jb
push
inc
or
and
cmp
orl
cmp
loopne
push
add
sahf
sti
ds
push
pop
adc
dec
mov
jecxz
jl
and
push
dec
je
cltd
inc
and
xchg
pop
sbb
stc
mulb
adc
sub
cmp
aas
add
push
mov
cli
outsl
add
add
and
add
call
jge
xor
jae
loopne
add
xor
cmpb
adc
lret
jno
pop
sub
ret
or
lret
jae
sub
leave
in
inc
fs
call
mov
xchg
call
rorl
outsl
add
xor
mov
jp
nop
xchg
stos
stc
xchg
push
into
adc
aad
jle
pop
aaa
stos
or
pop
aam
jno
stos
add
call
push
jne
adc
sbb
jnp
adc
adc
adc
mov
rolb
cmp
repz
loope
jle
push
mov
lds
mov
jle
daa
outsb
cmp
in
ds
xchg
jle
jb
stos
pop
movd
lock
push
mov
jb
jle
xor
add
test
mov
fiadds
loop
jmp
test
in
or
into
inc
xor
push
out
jb
cli
sahf
lds
push
mov
adc
xchg
fdivrl
jbe
push
je
xchg
rorl
insb
push
or
outsl
sti
fwait
ret
fwait
lret
mov
inc
in
pop
lahf
lds
add
pop
data16
push
push
sti
or
cmp
push
jb
jmp
outsb
inc
add
addl
fdivrs
mov
push
mov
push
out
mov
adc
sbb
lock
sbb
ljmp
incl
mov
pop
out
addl
mov
inc
je
add
test
ljmp
mov
je
jmp
inc
add
or
mov
loop
inc
rol
mov
call
je
sub
jnp
push
insb
xor
std
jg
outsl
jne
pusha
ljmp
ljmp
pop
cmp
push
jae
jne
lock
and
clc
and
clc
into
jns
adc
std
jae
sub
out
add
add
cs
cmp
jne
stos
ret
jbe
scas
or
or
sub
jae
jg
in
sti
and
sub
sbb
sarb
bswap
ret
lahf
xor
mov
push
cli
jl
ljmp
push
xchg
push
cmp
subb
adc
pop
insb
ret
jmp
pusha
push
push
pop
push
cmpsl
jmp
mov
cmpsb
jmp
inc
clc
into
cltd
lret
in
push
daa
fwait
adc
cmp
outsb
sub
adc
jmp
inc
test
adc
out
dec
insl
out
repnz
scas
sbb
aad
ja
ja
inc
loope
dec
sahf
verw
sub
mov
add
fdivrs
or
call
sbb
sub
xchg
ja
sti
or
push
hlt
lea
int3
jg
loope
cmp
cmp
xchg
inc
xor
sbb
or
flds
xor
xorb
pop
jb
push
icebp
cwtl
mov
pop
mov
push
jns
or
lods
rorl
add
add
add
cmpsl
fwait
out
inc
aaa
jge
add
or
push
xor
xchg
jge
fstpl
mov
or
or
stc
push
idiv
xchg
shlb
ljmp
call
mov
push
leave
push
jge
mov
dec
push
fidivl
and
push
add
cmp
xor
cmp
xor
xor
xorb
and
dec
xor
fwait
cmp
movntq
mov
outsl
lret
push
pop
mov
in
push
sahf
adc
push
adc
inc
pop
push
sub
decl
insb
inc
adc
hlt
mov
jle
push
decl
push
or
shl
inc
pop
add
and
insb
mov
test
insl
mov
inc
aam
hlt
mov
push
or
call
sbb
mov
add
add
add
add
push
and
pop
xor
jns
rclb
or
pushl
call
cld
and
sahf
cmpl
fiadds
push
fldl
pop
sti
fidivl
loop
jg
adc
cmp
push
mov
jno
or
lea
iret
fmulp
add
dec
cmp
mov
mov
mov
mov
aaa
pop
insb
clc
out
stos
out
adc
cmp
and
in
push
adc
jmp
mov
add
fscale
xchg
out
mov
add
xchg
into
mov
add
fmul
xchg
xchg
mov
aam
outsb
inc
fdivl
add
fcoml
xchg
pop
aaa
xor
pop
lcall
sub
jle
push
ret
sti
arpl
add
add
add
jle
int
push
add
cmpsb
mov
mov
je
and
test
and
jl
and
movsb
ljmp
sti
push
test
shrb
jae
and
jb
and
pusha
subl
push
xchg
sub
les
es
mov
and
test
xchg
inc
and
sbb
add
mov
cmp
mov
mov
stos
add
popf
jne
cmp
mov
dec
push
xor
xchg
addl
nop
and
aas
mov
xlat
and
pop
pop
in
cltd
nop
inc
and
xchg
inc
and
mov
pop
mov
pop
in
jp
pop
std
jb
testb
xor
add
add
add
add
push
push
xchg
aad
adc
adc
idiv
sub
leave
jecxz
loope
pushf
int
je
dec
mov
mov
in
mov
adc
inc
and
sbb
aas
adc
cmp
and
or
or
push
inc
adc
adc
mov
push
stc
in
or
aam
dec
and
imulb
and
in
sbb
sbb
nop
push
loop
mov
jo
shl
inc
and
sbb
clc
les
add
pop
and
push
out
movsb
xor
sbb
xchg
sub
hlt
mov
in
mov
adc
ret
rorl
push
dec
or
dec
in
lret
jne
or
jg
clc
add
pop
data16
mov
lea
jmp
cmpsl
stc
rorl
add
add
cmp
sti
mov
add
mov
out
lea
fldt
xor
and
arpl
adc
cmp
lret
xchg
int3
sahf
in
je
add
outsb
mul
aas
add
jb
and
cmp
sub
jb
and
mov
ret
xor
cli
mov
bound
xor
aas
xor
je
and
or
ds
stc
cmp
scas
xchg
pop
int
xchg
insb
dec
int
inc
pop
mov
jne
stc
jb
xor
iret
xor
popa
mov
push
push
aas
mov
ret
jmp
and
inc
subl
mov
inc
cmpl
add
rcrb
add
out
aad
or
cwtl
into
and
push
iret
and
loope
push
and
mov
pusha
repz
lods
stc
jmp
mov
inc
cmc
bound
lcall
add
das
adc
lods
pop
dec
fcompl
minps
dec
setbe
push
push
dec
and
clc
testb
sbb
dec
and
push
cmp
pop
inc
and
divb
and
push
jmp
aaa
mov
inc
aam
or
mov
dec
stc
xchg
inc
and
mov
sub
lret
into
mov
adc
cmp
clc
shll
mov
xchg
in
das
cmpl
xor
add
icebp
aas
xorl
std
jb
push
test
lea
cmp
and
fisttpl
sub
out
sbb
out
jne
in
shll
pop
out
ret
adc
adc
dec
addr16
and
psubd
fildll
add
mov
xor
pop
add
push
stos
filds
cld
adc
test
fisttps
mov
addb
filds
jbe
jae
pop
sti
dec
test
out
lret
and
sbb
imul
xor
hlt
or
scas
pushl
push
jmp
sbb
std
mov
jge
int
xchg
dec
lds
jle
int
jle
lds
and
jne
jge
js
push
jae
xchg
jmp
add
and
xchg
and
mov
cmp
out
cmp
sbb
jae
and
push
push
testb
pushf
inc
add
jle
lds
notl
loop
or
int
and
mov
imul
push
and
inc
push
dec
and
pop
mov
nop
testl
pop
imul
inc
and
push
jne
loope
mov
addr16
negl
mov
les
stc
adcb
stc
cmpb
dec
xor
dec
mov
ljmp
xchg
xchg
xchg
xchg
inc
add
or
jae
filds
inc
loopne
adcl
jp
testl
push
xor
jl
std
clc
idivb
and
rolb
addl
pop
stc
jg
incl
cmpsb
adc
fstps
jae
fnstenv
pop
pop
adc
mov
test
arpl
jae
jle
add
cmp
faddp
and
scas
fdivl
mov
mov
rorl
and
fwait
in
repnz
addr16
pop
loopne
mov
fcmovu
mov
jae
loopne
jg
sbbb
sbb
das
sub
mov
inc
mov
mov
pop
inc
sbb
pop
inc
adc
push
ret
add
inc
pop
jmp
fistpl
sbb
fisubl
cmp
mov
add
xchg
arpl
repnz
cmp
adc
cltd
inc
lds
cmp
pusha
cmp
adc
cmp
lock
jnp
lahf
jp
sbb
sub
lods
jno
adc
sar
add
pop
cmp
out
push
jmp
or
test
add
icebp
shr
mov
mov
sbb
sub
mov
sbb
jb
cmp
ljmp
roll
mov
xrelease
or
or
dec
mov
adc
dec
push
or
jecxz
inc
and
popf
inc
and
popf
ret
push
xor
popf
pop
and
adc
incl
cs
push
lea
cmp
inc
cmp
or
mov
pop
and
xor
out
jl
lcall
sub
ds
mov
and
inc
and
daa
idiv
mov
aas
std
mov
pop
ja
mov
fldcw
cmpl
in
lahf
adc
inc
add
hlt
mov
jge
scas
mov
in
cld
cmpsl
dec
jae
loopne
lret
in
and
xor
mov
cmpsb
in
sbb
mov
mov
pop
lock
cmp
or
mov
movsl
mov
jge
clc
push
outsb
shll
and
lret
or
je
add
sbb
sub
fsubrl
pop
mov
lret
add
popa
xacquire
adc
jge
es
divb
mov
and
cwtd
add
push
cwtl
add
inc
aaa
jge
cmp
jg
cmp
ss
add
or
popf
and
fwait
popf
sbb
xchg
jle
fwait
and
dec
aam
ljmp
cmp
xchg
add
add
add
add
ret
pushf
add
shrb
std
pop
pop
add
xlat
incl
repnz
xchg
xlat
fildl
lods
xchg
aaa
jmp
xor
push
test
icebp
adc
inc
int
push
mov
and
inc
int
in
bound
fisubl
dec
ja
jge
pusha
call
lcall
add
inc
add
mov
jo
mov
cmp
cmp
jle
cmc
jle
add
ret
loop
lahf
and
shr
inc
and
pop
cmp
mov
jbe
jmp
in
inc
and
in
dec
and
lcall
call
insl
test
pop
cmp
and
add
iret
mov
lea
mov
jg
add
push
xadd
imul
push
lcall
scas
adc
add
jle
add
decl
and
jg
add
pop
pop
cmp
insb
scas
mov
adc
jnp
sbb
stc
add
ds
or
clc
mov
add
incb
xchg
jbe
movzbl
add
cld
scas
scas
nop
je
stos
jl
sbb
nop
je
push
nop
je
rclb
dec
repnz
and
stc
cmp
push
adc
call
adc
testl
fdiv
outsb
inc
aam
xchg
pop
fdivl
mov
cltd
icebp
insb
outsb
inc
adc
arpl
out
and
add
lds
sbb
out
sub
ljmp
xchg
jge
add
rorl
fsubs
xlat
test
rcr
aaa
aam
loope
mov
nop
jne
lret
sti
ret
push
xlat
test
pusha
inc
adc
push
xor
jmp
jge
sub
mov
pop
roll
lods
jp
std
jp
and
sti
jmp
add
add
add
add
push
dec
xor
cmp
fidivrl
movb
xchg
divl
xor
or
inc
pusha
xor
cmp
xor
jo
xor
inc
xor
and
call
hlt
cmp
jb
xchg
dec
or
sbb
and
stos
pop
orl
lret
call
xchg
fildl
push
and
call
aam
and
add
shlb
adc
hlt
push
add
and
ret
jg
jge
out
jae
dec
nop
add
in
sbb
pop
lcall
pop
lds
sbb
paddw
stos
pop
jl
pop
cmp
mov
jne
in
pop
and
jmp
and
jmp
and
in
imul
subl
jge
outsl
push
inc
add
shll
adc
sbb
imul
pop
mov
imull
stc
xorb
inc
clc
sbb
test
jne
aam
js
fmull
mov
inc
cmp
aam
cld
test
pop
in
lods
push
aad
cmpsl
mov
js
sbb
cwtl
or
call
dec
adc
jne
sbb
jge
add
std
mov
jle
std
jl
add
mov
pop
inc
fsubl
test
ja
add
clc
sbb
xor
adc
jg
jl
lods
adc
jae
loope
adcb
int
rolb
into
jg
adc
jo
or
jle
or
ja
clc
add
push
movl
rcrb
ret
pop
adc
add
add
add
pop
outsb
inc
adc
outsl
aas
and
out
pop
push
in
dec
xor
jns
sahf
mov
push
sub
pushf
shl
jecxz
fwait
out
fwait
mov
jp
xor
js
xor
out
jmp
cmpsl
xorb
jb
add
mov
fsubl
and
pop
rolb
xchg
and
inc
add
je
inc
xchg
pop
or
aam
dec
int
xchg
jl
sub
xor
popl
cmp
sub
pop
std
jo
lret
and
inc
jmp
sbb
fwait
or
insl
test
mov
push
pop
loopne
jl
test
adc
cmpsb
cmpsl
in
jg
dec
add
es
add
push
orl
inc
cmp
pop
sbbl
inc
in
push
inc
std
ds
lret
mov
and
adc
mov
jbe
mov
jbe
cmp
xchg
sbb
mov
ja
mov
push
and
ljmp
inc
in
dec
mov
loop
and
push
dec
and
cmc
popa
xchg
mov
inc
and
and
mov
adc
cltd
in
xor
insl
xor
rcrb
lods
cs
or
int3
fbld
jno
loopne
addl
addl
aaa
jno
loopne
and
xchg
stc
psubsw
and
je
inc
aam
test
add
rorl
push
repz
sub
loopne
add
mov
in
test
lock
jbe
faddl
inc
cmp
and
loopne
fnstcw
push
cmpb
pop
jmp
fists
xchg
sbb
pop
mov
push
gs
or
pop
clc
jmp
jl
pop
sub
fistl
and
lret
aas
fdiv
leave
aaa
aam
gs
cld
cltd
cmp
pop
pop
xor
sbb
aam
out
mov
or
cli
xchg
and
pop
jo
jl
nop
sbb
pop
xchg
sti
fucomip
push
sti
add
xor
lds
fwait
add
sub
nop
pop
jo
aam
add
jb
xchg
mov
adc
imul
clc
push
out
add
sti
xchg
or
jnp
and
sti
pushf
add
xor
jnp
dec
fs
out
inc
enter
es
mov
fwait
mov
and
cmp
cmp
xchg
incb
sbb
fcoms
ljmp
sbb
loopne
adc
lods
cmpsl
adc
jno
pop
je
mov
pop
je
cmc
inc
test
clc
je
dec
clc
je
push
loope
ficompl
add
add
add
add
xchg
shlb
je
xor
pushf
je
sub
pushf
je
imul
je
mov
inc
and
pushf
je
cmc
movsb
incb
dec
dec
ljmp
pop
fiadds
out
je
stc
fldl
das
rcrl
adcb
and
push
and
pop
sub
bound
je
fiaddl
add
add
add
clc
adc
and
fmuls
je
cmp
in
and
cmc
cmp
in
mov
xchg
int
push
jns
fildll
sbbb
mov
dec
cmp
stos
mov
sbb
jbe
adc
js
repz
fists
clc
jae
clc
outsl
sub
sbb
in
push
pop
xchg
cmpl
roll
cmc
mov
add
cmp
and
aas
jae
loopne
sti
jg
mov
mov
mov
adc
rcr
pop
mov
jmp
or
jns
xlat
in
int3
pop
mov
ret
adc
jmp
sbb
ja
test
sub
or
jg
test
add
or
std
ja
sub
in
fs
mov
int3
cmp
jp
cmp
enter
hlt
jns
test
arpl
mulb
add
mov
xchg
dec
mov
loopne
mov
loopne
leave
jmp
cmp
add
cmc
subb
xchg
das
in
push
or
imul
add
inc
fdivr
jmp
add
and
add
and
sub
test
insb
cmpsl
shlb
add
add
add
add
cmp
jb
cmp
mov
mov
ds
insb
shll
push
bound
dec
xor
jb
clc
pop
and
and
and
mov
inc
mov
jg
test
xchg
insb
and
xchg
pop
and
xchg
push
and
xchg
dec
and
xchg
inc
and
and
add
cwtl
xchg
adc
data16
push
test
dec
sbb
add
aas
sbb
bswap
pusha
cld
push
mov
addb
inc
sub
pushf
shlb
sbb
xor
lret
popa
pusha
mov
push
sbb
mov
cs
jmp
mov
sar
call
nop
insb
and
lea
arpl
mov
js
dec
sub
roll
pop
test
and
loope
xchg
lea
test
push
adc
std
xor
or
push
test
js
add
clc
orb
mov
aaa
add
jge
add
clc
clc
push
xor
mov
nop
or
call
inc
xchg
sbb
mov
mov
inc
fsubl
mov
sbb
or
cld
clc
clc
and
mov
push
cmp
fstpl
xor
jne
out
cmp
in
lea
xlat
mov
add
xor
mov
scas
sub
or
mov
out
inc
mov
jp
add
rorl
cld
xor
cmp
xor
andl
fwait
daa
rclb
adc
mov
dec
ljmp
movsl
mov
mov
xor
mov
and
jmp
pop
add
xchg
cmp
sti
push
bound
pop
mov
xchg
outsb
shll
aad
popa
jo
cmp
push
call
test
in
mul
call
push
stc
mov
xor
add
add
add
test
fimull
popa
stc
insl
mov
push
add
stc
push
add
pop
je
insb
inc
xor
fisubrs
nop
or
jb
and
in
pop
mov
cmp
sbb
loop
addb
mov
divps
rcrb
mov
sbb
dec
mov
imul
inc
add
roll
shl
loop
fdiv
orb
test
fdiv
decl
les
sti
sahf
xchg
dec
fildl
adc
dec
sbb
inc
xor
cld
addb
mov
and
nop
add
ficoml
insl
sbb
push
sbb
add
stc
daa
pop
mov
push
cld
call
repz
jp
mull
inc
cmp
enter
add
add
add
add
inc
add
std
jl
and
je
int3
and
jo
std
jp
xor
dec
or
std
mov
ds
mov
adc
push
nop
dec
faddl
insb
xchg
insb
sbb
mov
sub
int3
dec
and
bound
and
cs
es
in
and
inc
shl
mov
in
je
add
cltd
push
cmpsl
or
lcall
enter
inc
cmp
dec
mov
jae
add
sub
sbb
sub
lock
or
cli
in
out
dec
or
sbb
pop
push
sub
mov
mov
lret
sub
sahf
neg
into
scas
div
lret
daa
in
outsl
sbb
pop
pop
fcomps
push
mov
sbb
sbb
adc
sbb
or
add
sub
jnp
pop
add
sbb
stos
dec
pop
je
loopne
je
rcrb
add
mov
xchg
shlb
xor
push
int
push
mov
lret
pop
je
daa
pop
je
pop
pop
je
pop
enter
ret
call
pusha
mov
push
test
es
stc
bound
xor
push
cmp
std
sub
pop
add
in
pop
test
ds
leave
add
jnp
add
mov
add
inc
mov
fisttpl
leave
jmp
and
mov
or
or
add
add
fsubrl
repz
stc
mov
icebp
ljmp
add
add
add
add
mov
test
or
mov
je
inc
xchg
jne
inc
cltd
or
inc
popf
inc
sub
and
adc
jne
inc
fwait
or
arpl
add
movsb
or
or
inc
je
jge
daa
stc
insl
std
clc
les
mov
or
test
inc
fs
lret
inc
call
add
add
clc
hlt
lock
mov
and
scas
enter
or
mov
dec
inc
sbb
roll
mov
xchg
inc
mov
pop
add
or
jle
add
inc
mov
xchg
cmp
outsl
roll
add
int3
loope
mov
int3
fidivrl
aaa
out
add
pop
mov
add
inc
adc
dec
pop
out
clc
xchg
out
clc
push
mov
add
push
mov
loop
pcmpeqw
lret
fcmovb
jae
in
ret
push
jb
sbb
roll
mov
enter
ret
jae
fistpll
nop
jp
push
add
data16
dec
jecxz
je
add
push
out
ficoms
test
std
pop
test
test
cmp
inc
sub
push
in
mov
popf
inc
loope
push
je
or
mov
dec
adc
test
push
mov
clc
out
or
lcall
aas
push
leave
movd
push
test
add
add
add
cltd
lret
stos
cli
push
int3
dec
test
lods
out
pop
add
add
jmp
ss
and
divl
iret
or
push
pop
stc
mov
call
mov
int
mov
int
mov
loop
mov
notb
addr16
push
out
loop
mov
sbb
sbb
out
rcll
testl
pusha
mov
or
sbb
adc
xor
ror
push
xchg
sbb
lcall
mulb
mull
sbb
std
jl
inc
lock
out
or
adc
add
cmp
ror
fcoms
cmp
or
incl
clc
adc
ljmp
out
pusha
and
inc
clc
mov
jb
jnp
add
jge
add
and
fdivrs
test
dec
mov
pop
imul
xor
clc
push
mov
mov
jae
add
pop
mull
push
jnp
out
add
mov
mov
add
add
add
mov
mov
pop
mov
inc
or
push
fs
fildl
pop
fcmovnu
into
fwait
lock
out
dec
jecxz
xor
mov
and
mov
in
dec
add
stos
jne
push
out
clc
mov
or
clc
push
pop
test
mov
add
mov
add
add
sbb
and
fstp
and
sti
push
add
or
add
or
cmc
sbb
fwait
mov
dec
cld
push
stc
jmp
notl
stc
jmp
in
sbb
in
cmp
loop
out
dec
pop
cmp
cmp
movsl
lret
sub
sub
fdivs
jge
test
mul
cld
rol
pusha
mov
sbb
ds
test
std
xchg
loop
sti
push
test
add
adc
xchg
sahf
lret
push
sbb
mov
ltr
pop
stc
push
or
notb
sarb
jmp
inc
add
iret
and
in
sbb
cmp
pusha
add
lcall
and
adc
lea
adc
enter
pushl
shl
test
adc
jp
ficoms
add
sub
aas
or
cmp
scas
dec
clc
ss
fidivl
jnp
fsubl
out
inc
xor
mov
xor
out
test
xchg
and
aad
test
adc
pop
insl
jp
adc
inc
xor
xchg
int
and
filds
add
push
push
jno
and
cmc
adc
test
mov
add
push
cmp
jb
push
aaa
fsubrp
mov
xchg
out
clc
push
pop
sbb
push
jae
repz
lcall
clc
push
insb
jns
and
pop
mov
aaa
push
inc
jb
push
ljmp
jge
mov
cmp
dec
out
clc
in
cmpb
clc
push
xchg
jnp
repnz
jb
dec
ljmp
fwait
arpl
pop
sbb
add
das
notb
jo
rcrb
idiv
pop
sar
cmpsb
mov
arpl
sti
push
add
test
cli
push
add
cmpsb
mov
call
loopne
out
movsb
dec
stc
push
or
or
add
or
sar
dec
cmp
rclb
add
jle
add
sti
lret
mov
jmp
enter
outsl
dec
stc
jmp
cmp
mov
dec
push
ftst
pop
test
jg
or
push
add
xchg
shlb
or
stc
sbb
xchg
je
add
add
daa
cmp
pop
push
outsb
pop
add
sbb
call
push
shl
and
xchg
rorb
int3
cld
call
testl
jne
xchg
jl
push
lret
popf
hlt
sbb
mov
push
bound
xor
dec
push
out
and
push
xchg
sbb
sub
lret
dec
and
add
mov
aam
mov
movsl
and
clc
push
out
xorb
and
sub
jae
sub
cmp
mov
mov
ds
mov
mov
les
cmp
and
nop
cmp
cli
jg
inc
or
add
cmp
inc
sbb
cs
clc
xorl
int3
and
cmp
in
cmp
mov
das
cmp
add
clc
jne
adcl
add
fsubrp
mov
adc
add
add
xlat
cmp
clc
loopne
add
or
mov
mov
xchg
fcmovnb
or
ljmp
aas
pop
pop
mov
xchg
mov
clc
push
outsb
mov
add
sub
cwtl
inc
add
dec
out
aaa
sahf
sub
push
add
push
sub
push
pop
sti
hlt
pushaw
xlat
jae
cs
xor
jnp
in
sti
push
call
jb
xchg
repnz
jg
add
sti
xchg
dec
add
add
stc
xor
cmp
add
gs
shl
or
sti
xchg
push
int
xchg
dec
jmp
add
add
add
dec
push
in
pop
call
andb
stc
outsb
adc
and
lods
or
cld
mov
mov
adc
inc
adcb
or
add
push
mov
push
test
xor
bound
xor
sub
lea
sub
dec
adc
jne
inc
add
and
lods
rcrl
xor
xor
sbb
fdivrl
jg
adc
pop
in
sub
lret
dec
jg
shl
clc
cmp
inc
add
in
xchg
push
cmp
push
pop
jge
xchg
and
dec
jmp
add
and
sti
or
or
pop
cmp
arpl
cld
imul
push
psubb
add
sbb
add
add
add
cli
push
aaa
je
xchg
mov
mov
sarb
jmp
xor
pop
out
jl
je
sarl
cmp
flds
jne
pop
sub
mov
and
push
adc
mov
and
mov
iret
test
incb
jns
das
subl
test
adc
add
gs
subl
repnz
push
lea
jae
lret
ja
push
out
sbb
imul
adc
add
ret
jg
push
out
jge
add
mov
mov
out
push
jge
test
or
out
mov
daa
push
add
push
pop
mov
data16
out
scas
inc
sbb
add
xchg
mov
loopne
cmpsb
repnz
mov
mov
popa
fwait
daa
cli
jnp
add
sti
push
bound
cli
ds
pop
test
push
bound
ja
inc
loope
test
push
cmpb
jmp
push
pop
add
sub
and
stc
mov
add
pcmpeqb
mov
xor
mov
add
add
add
lcall
fsubs
xchg
lea
gs
test
std
push
add
or
std
fsub
and
push
lods
dec
out
hlt
mov
inc
add
les
sar
decl
les
sub
lret
inc
adc
xchg
loope
add
mov
rorb
add
sbb
inc
xchg
adc
push
push
dec
lea
call
fadds
test
xchg
aas
scas
enter
sarl
inc
dec
jg
data16
pop
test
add
scas
xchg
shll
outsl
in
int
insb
loopne
xchg
pop
scas
add
les
test
sub
aad
out
std
push
pusha
test
stc
dec
mov
std
incl
clc
pusha
cmp
inc
shlb
inc
aam
clc
mov
cwtl
cli
test
std
jnp
cmp
test
sbb
clc
sub
pop
sub
stc
mov
add
inc
adc
inc
out
scas
pop
add
mov
scas
cmp
push
jno
pop
and
xor
dec
cmp
mov
loop
and
jge
or
leave
rolb
jp
push
dec
adc
pop
push
ds
dec
outsb
inc
jg
out
inc
push
push
cmp
mov
rcll
xor
push
insb
xchg
inc
fcmovu
sti
sbb
add
das
aam
or
loope
pop
mov
add
fcmove
cmpb
out
jns
xchg
data16
add
add
add
add
ljmp
fs
repz
add
and
bound
pop
sarl
inc
push
inc
cmc
inc
sti
dec
out
or
pop
add
rcl
and
xor
jno
sti
mov
push
lds
cmp
xchg
aas
test
pop
int3
test
daa
sbb
pop
push
cmp
or
push
fnstenv
pop
aaa
add
and
mov
sbb
lock
test
cmc
arpl
jnp
and
cld
out
sub
jbe
and
repz
stc
mov
negb
pop
ds
inc
enter
xchg
mov
add
ud0
mulb
adc
ljmp
incb
rol
jge
idiv
add
test
mov
loop
notb
mov
sbb
sbb
pop
push
pop
sbb
ret
dec
mov
mov
jmp
push
jae
and
or
xchg
add
in
lods
data16
testl
in
aam
cmp
inc
aas
add
mov
sub
ja
cmp
xlat
fisttps
outsb
negl
jb
ret
push
enter
inc
lock
cmp
clc
fadds
adcl
lock
outsl
and
adc
mov
cmp
idiv
mov
sbb
mov
ja
push
out
cmp
repnz
pop
je
fcomi
push
out
add
sub
mov
mov
out
mov
fadds
das
push
inc
lret
mov
rcrb
out
push
and
inc
sbb
mov
fdivr
rcr
bound
and
shlb
decl
cltd
inc
dec
mov
mov
das
jecxz
loop
fs
fs
gs
xlat
lret
sti
add
push
add
xlat
lcall
hlt
es
push
cltd
mov
sti
push
xchg
pop
add
push
aas
adc
mov
ljmp
cli
clc
fcompl
jmp
jae
fcmove
cmovle
stc
mov
in
lock
push
ret
add
sub
cmp
jecxz
mov
pop
call
jle
and
add
sub
out
andl
stc
adc
xor
add
sbb
incl
adc
rcrl
divl
mov
and
adc
add
sbb
call
out
adc
mov
inc
cld
call
adc
add
rolb
test
add
ficoml
add
push
sbb
push
add
add
add
add
movsb
lods
push
mov
sbb
add
and
adc
add
push
xchg
icebp
add
sbb
push
xchg
jmp
fucomi
xchg
loope
loope
divl
clc
fs
or
add
clc
sub
pop
push
mov
cmp
add
sub
call
xor
mov
in
mov
inc
xchg
rolb
add
add
add
add
addr16
out
mov
jno
and
jge
sarb
std
jae
mov
mov
and
pusha
sub
mov
dec
add
stc
sub
mov
cmp
push
out
sub
pop
push
adc
adc
mov
pop
xlat
xlat
clc
pop
jnp
lods
push
out
adc
aas
cmp
mov
insb
repnz
enter
add
es
add
push
hlt
repnz
addr16
mov
pop
in
repnz
pop
sub
movl
scas
aam
aas
xor
pop
insb
repnz
add
push
sbb
clc
cmp
mov
xchg
andl
push
jae
adc
pop
popl
push
fsubr
sti
push
mov
add
add
add
hlt
mov
add
xchg
xchg
sub
test
lcall
dec
jns
scas
push
xchg
mov
xlat
cmp
jmp
ja
or
pop
add
addb
sub
mov
jmp
sub
stc
jmp
sub
stc
jmp
mov
mov
in
cmp
jmp
xlat
and
test
inc
push
adcl
ljmp
add
add
add
mov
add
popa
and
cmc
or
push
arpl
mov
dec
clc
push
add
mov
push
jle
push
ret
mov
cmp
call
out
adc
lea
jge
stc
daa
jnp
xchg
popa
daa
pushl
push
stc
mov
hlt
aas
inc
scas
adc
add
out
sub
push
adc
cli
jmp
cmp
cmp
fcmove
mov
pop
test
std
jae
daa
int
push
cmp
jle
pop
clc
imul
dec
lds
int3
or
clc
incl
sti
jns
mov
sbbl
lods
test
and
out
fcompl
jl
xchg
ljmp
add
add
add
add
pop
stc
jg
or
clc
sub
push
rclb
add
insl
jb
ret
movsb
dec
shl
adc
test
aas
sahf
scas
test
push
jecxz
adc
push
pop
and
movsb
aaa
and
in
pop
adc
jae
jb
sbb
pop
das
pop
xchg
jecxz
arpl
xchg
add
je
push
add
sub
pop
pop
mov
lret
cmc
out
push
outsb
push
jae
sahf
mov
rorl
pop
jmp
fcmovb
xchg
mov
das
ret
cmp
out
leave
arpl
pop
push
mov
pusha
ja
dec
pop
jmp
xlat
ret
aas
mov
movsb
out
mov
sarl
or
cmp
pop
clc
cmp
xchg
stc
decb
ja
addl
add
add
add
add
popf
inc
clc
sbb
cmp
outsl
cwtl
xor
pop
das
cmp
mov
flds
fwait
out
inc
hlt
enter
or
jbe
or
mov
dec
jns
adc
mov
xor
pop
jg
out
iret
je
add
outsb
fs
xor
cmp
call
mov
xchg
shlb
add
add
add
inc
movsl
inc
cld
cs
cmp
and
xlat
lcall
aaa
mov
testb
iret
testb
iret
push
mov
adc
mov
or
mov
test
jle
inc
cld
mov
mov
je
mov
leave
cmp
aas
xlat
sbb
pop
mov
sbb
testb
sbb
call
add
add
add
es
aam
jae
clc
rcl
or
popa
icebp
jge
test
sub
ss
mov
shl
inc
jg
pop
add
clc
jo
push
scas
lret
stos
mov
mov
inc
xchg
repz
clc
test
inc
push
incb
xchg
lock
adc
jae
orb
hlt
cmp
add
in
ret
int3
lock
cmpsl
sarl
xchg
push
cmp
mov
into
lods
jmp
mov
push
call
pop
lock
and
add
mov
aas
add
stos
and
clc
mov
and
popf
pop
jmp
mov
fcmovnb
fbstp
cli
pop
or
ret
out
xchg
daa
iret
or
and
add
arpl
sbb
ret
test
sub
loopne
push
push
leave
xchg
stos
or
ret
mov
pop
rcr
push
mov
sub
sub
sub
xchg
rcr
lcall
xor
inc
add
hlt
xchg
mov
push
hlt
pop
pop
lahf
sbb
mov
sti
cltd
lock
dec
negl
bound
divl
ljmp
std
add
lcall
push
test
fsubrs
js
cli
xor
jmp
add
jne
jae
add
hlt
mov
sub
push
test
xorl
mov
inc
and
push
addb
test
add
add
add
add
pop
mov
sbb
insl
adc
add
mov
sbb
mull
mov
or
popa
sbb
ucomiss
sbbl
pop
cmp
push
xlat
or
sub
pop
sbb
call
dec
and
mov
addb
pop
es
pop
add
mov
cmp
clc
jl
push
jae
cmp
stc
or
rorb
aaa
aad
std
jl
out
clc
push
push
das
push
sub
mov
mov
out
je
stc
jl
iret
or
adc
ds
jg
gs
clc
ds
clc
add
xlat
pushf
jle
add
jno
std
out
ljmp
add
add
add
and
lret
pop
mov
add
sbb
out
pop
call
leave
jb
arpl
and
and
and
xchg
hlt
sbb
add
out
pop
cltd
mov
cli
ds
and
pusha
mov
pop
xlat
out
jbe
fnsave
or
or
inc
pop
add
clc
push
xchg
scas
dec
enter
jmp
stc
aas
push
daa
add
fimull
adc
push
or
das
out
lods
sar
inc
das
stc
jmp
pop
roll
or
and
sub
sti
mov
and
mov
adc
dec
mov
sti
ffreep
out
cld
xchg
dec
add
cs
jmp
mov
add
add
add
add
xchg
jmp
adc
or
sti
xchg
inc
int
mov
pop
xor
mov
lock
push
test
stos
gs
jmp
and
stc
push
cli
aaa
jmp
in
dec
aad
sub
push
push
sbb
add
push
sbb
pop
mov
lods
roll
sbb
add
nop
mov
add
xchg
rolb
pop
mov
pop
lea
pop
push
xlat
push
sbb
inc
adc
inc
dec
inc
and
sub
add
dec
sbb
xchg
cmc
or
inc
mov
std
ljmp
jecxz
clc
jge
and
inc
jmp
inc
sub
mov
clc
aas
std
addr16
ds
pushl
daa
pushf
clc
aas
std
dec
loop
loope
sarl
jp
adc
lods
clc
in
and
aas
clc
mov
je
adc
mov
mov
je
insb
add
aas
lods
clc
add
shl
sarb
adc
jne
and
loopne
stc
idivl
jp
sbb
add
clc
lea
aam
clc
ret
add
xchg
cmpsl
in
xchg
rcl
ljmp
dec
fcompl
sti
add
and
xchg
adc
push
and
stos
lret
rol
ret
cltd
sub
mov
ror
pop
enter
add
mov
sahf
jp
sbb
fcmovnu
outsl
enter
daa
mov
roll
enter
std
mov
lock
mov
or
push
push
outsb
iret
sbb
add
aaa
fadds
out
push
jle
ss
bound
imull
jo
ds
fnsave
int
adc
cmp
push
xchg
in
push
das
jge
mov
push
aaa
scas
xchg
dec
int
mov
insb
cmp
daa
cmpl
pop
or
add
xchg
shl
or
call
cld
xchg
je
hlt
sub
call
sub
sbb
jae
add
pop
sbb
mov
xchg
std
subb
in
xchg
sbb
rcll
bound
sbb
push
xorl
adc
sbb
xchg
jbe
and
add
xchg
jnp
int
pop
test
jns
add
mov
add
pop
sarl
stos
sub
add
xchg
test
adc
popa
push
aas
stos
inc
and
jnp
jl
add
stos
stos
lods
jne
ljmp
insb
mov
or
sbb
sbb
add
ret
mov
mov
mov
mov
add
add
add
fidivrl
bound
hlt
jb
mov
and
jno
and
mov
jae
mov
pop
loop
lods
mov
mov
mov
mov
pop
jne
rcrb
aas
std
popa
xorl
cmpl
pop
aam
pop
add
push
lret
adc
clc
out
nop
punpckhdq
cmpl
pushl
pop
enter
call
sub
push
sub
lcall
mov
insb
inc
sub
mov
aad
xchg
mov
jp
mov
sub
adc
pusha
pop
inc
dec
popa
pushf
ja
push
mov
pop
out
enter
loope
lds
pop
add
push
shr
xchg
adc
cld
cmp
add
out
arpl
das
inc
daa
addr16
es
je
lods
shlb
lret
mov
std
jnp
pusha
pop
call
cmp
test
xor
out
xchg
lock
sbb
pushf
jp
jle
add
enter
js
je
lods
pop
jge
test
clc
adc
sbb
out
mov
add
repz
add
or
add
sub
and
fimull
mov
and
enter
lcall
sub
sbb
add
enter
mov
fisubs
push
mov
outsl
mov
in
and
sub
les
inc
xchg
popf
les
push
mov
add
add
add
push
sbb
aam
inc
add
sub
add
fnstenv
ljmp
lods
mov
xchg
shlb
icebp
jmp
pop
addl
mulb
dec
sub
mov
insb
jnp
push
pop
inc
sbb
inc
and
xor
inc
call
std
or
cli
fiadds
mov
ss
das
push
adc
add
das
std
out
cmova
jge
push
mov
mov
xchg
dec
stc
andl
adc
xor
dec
jno
clc
cmpsb
cmpsl
mov
rolb
test
pop
flds
clc
das
or
movl
leave
push
sarl
leave
jp
adc
test
je
pushaw
adc
out
aam
mov
add
add
add
jbe
ret
xchg
mov
jnp
sti
mov
cmp
mov
xor
scas
jp
sti
stos
jp
sti
es
sti
and
sti
push
jnp
sti
sbb
sti
push
pop
mov
mov
cmp
out
test
out
mov
shll
add
ret
ret
ret
lret
mov
add
jb
jmp
sti
push
call
add
add
add
fistpl
stos
jmp
addr16
push
push
jecxz
cli
ss
stc
gs
cli
sub
push
push
cmpsl
notl
cmp
cli
push
pop
push
or
and
jmp
dec
sbb
adc
and
and
sbb
aad
sarl
cmpsl
sub
push
inc
lds
and
jmp
add
add
add
mov
and
cltd
sbb
add
push
inc
xchg
in
sub
cmc
dec
xchg
pop
notl
lcall
add
pop
test
sbbb
clc
adc
push
jl
cmc
addb
push
lods
xor
outsb
addr16
jmp
test
sub
sbb
push
inc
pop
mov
add
add
add
add
and
sbb
jnp
and
lea
adc
std
inc
cwtl
lods
jo
push
jnp
sbb
scas
test
scas
mov
adc
dec
lret
push
add
test
sbb
jl
sbb
pop
test
fs
repz
xor
in
ret
xor
roll
ret
dec
loopne
adc
pop
sub
sti
clc
dec
sub
das
popa
mov
jnp
pop
sbb
lods
cmp
jle
xor
and
add
xchg
jnp
cli
push
jns
xchg
mov
adc
scas
push
int
inc
inc
xchg
sbb
fsubrl
push
cmc
xor
insb
mov
fildl
ret
sahf
mov
dec
push
aad
xor
mov
lret
sti
bnd
lds
inc
imul
hlt
imul
jle
arpl
aas
cmc
cmp
insb
mov
add
js
sti
sub
sti
incb
cmp
lcall
jns
or
and
push
imul
push
inc
jno
xchg
insl
call
add
add
add
shlb
mov
jecxz
xlat
cmp
xorl
mov
loope
testb
xor
push
cs
mov
mulb
icebp
out
jge
add
mov
shl
test
add
cmp
and
push
mov
and
aam
xor
cmp
popa
xchg
testb
add
add
inc
call
ljmp
mov
in
push
ret
hlt
in
cmpl
push
push
sub
push
pop
push
pop
inc
and
adc
xchg
into
or
adc
not
pushf
test
dec
shl
jmp
fdecstp
mov
push
stc
mov
dec
nop
or
into
flds
cli
add
dec
mov
repnz
clc
sbb
or
jge
ljmp
stc
dec
mov
sbb
add
mov
mov
mov
call
orl
aaa
xor
lcall
int3
push
call
mov
in
pop
cmp
cmp
add
add
add
cmp
inc
cmc
ret
aas
push
fdivrs
subl
ret
pop
jno
or
or
jo
pop
nop
sub
jg
push
mov
negb
fisttpl
or
lret
mov
add
cmp
movsl
xor
cmp
jecxz
mov
xchg
ja
in
xchg
xchg
in
or
add
add
add
add
call
out
jge
dec
mov
lods
repnz
jp
push
out
jg
push
add
sbb
shr
sub
mov
xor
mov
lods
leave
jmp
das
iret
inc
negl
jae
je
call
pusha
push
sbb
call
nop
or
inc
cld
push
add
mov
sti
xchg
lret
jbe
mov
fldcw
xor
fdivr
insl
push
cmp
test
loope
push
bound
clc
punpcklwd
xchg
inc
in
xorb
jmp
sub
mov
adc
pop
cmp
jno
leave
ljmp
fildl
xchg
popl
adc
sbb
add
add
add
loope
jmp
cmp
pushf
std
inc
shlb
and
cwtl
icebp
or
or
adc
or
fnsave
popl
aam
sbb
hlt
insb
pop
add
cmpsl
lods
hlt
lcall
push
sub
xor
sbb
or
lock
pop
or
clc
and
add
add
add
mov
pop
xorl
add
roll
inc
or
and
test
mov
je
scas
hlt
decl
mov
jae
out
and
jns
add
clc
scas
mov
cli
mov
cmp
or
and
test
lods
jp
mov
inc
pop
loopne
shr
push
cmpl
add
add
add
mov
mov
mov
xchg
adc
stc
divl
cmp
or
xchg
or
push
push
stc
cmp
xor
ljmp
cs
mov
ja
xchg
sub
jb
pop
dec
pusha
adc
popa
mov
sub
mov
adc
add
add
add
les
jp
mov
jg
mov
push
ret
sub
pop
cmp
in
adc
jl
outsb
int
adc
stc
cs
loop
mov
sub
pop
sti
mov
add
sti
push
test
adc
jmp
int
aam
loop
out
inc
nop
insb
add
jae
and
add
push
add
cs
jmp
jns
call
jl
call
sti
push
add
in
xchg
leave
call
decl
add
adc
in
pop
call
enter
adc
lea
sbb
loope
call
mov
in
pop
inc
in
fidivrl
add
push
push
push
cmp
inc
jmp
mov
in
xchg
ds
fstpt
mov
adc
dec
sbb
push
loop
or
push
push
stc
test
aas
cmp
clc
push
pop
pop
xor
xor
sbb
loope
push
mov
lcall
clc
fcomi
clc
pop
fsts
or
sti
sti
pop
sbb
clc
jnp
add
cld
out
pop
xor
xbegin
js
and
mov
and
mov
mov
jmp
add
pop
xor
cmpsl
std
jg
out
mov
sub
fdiv
add
clc
xchg
pushl
mov
xchg
test
jecxz
test
andb
test
leave
and
rorb
scas
mov
add
add
add
add
or
add
mov
out
jge
insl
lret
pop
dec
mov
push
xor
push
sbb
adc
inc
pop
mov
not
pop
sbb
add
push
pusha
fstpt
xor
push
addr16
mov
mov
adc
pop
insb
inc
or
rcrb
pop
xchg
je
add
out
clc
xchg
mov
cmp
add
jns
add
outsl
mov
loopne
pusha
stc
cmp
xor
xor
sub
fwait
dec
icebp
cld
bound
in
fdivl
jle
and
push
add
cli
push
add
jnp
adc
push
add
cmp
sti
push
bound
cmp
call
add
add
add
push
ret
cmp
ljmp
sti
in
add
in
in
adc
inc
lcall
sti
push
mov
add
stc
call
in
push
stc
add
adc
or
mov
pop
inc
adc
clc
ljmp
outsb
add
pop
xor
out
add
pop
out
inc
add
sbb
int
add
out
inc
popf
pop
adc
mov
adc
je
inc
aas
add
idiv
ljmp
call
add
es
call
test
sbb
xorl
lods
clc
xchg
jmp
inc
std
xchg
movsl
push
jbe
mov
cli
pop
out
pop
mov
cld
mov
add
add
add
jns
dec
cld
test
loopne
icebp
clc
out
addl
or
sub
int
iret
adc
sarb
lcall
jl
adc
mov
roll
cmp
add
mov
jnp
clc
cld
out
jmp
loopne
push
sbb
sbb
subl
jl
pop
out
add
fidivl
xor
add
sub
cs
jl
sti
add
push
aas
call
and
mov
mov
add
push
pusha
and
jl
in
add
push
outsl
sbb
pusha
je
jne
sub
pop
mov
fistpl
out
mov
rolb
and
aas
mov
les
daa
sub
cmp
mov
push
jge
clc
xchg
cmc
stc
mov
sub
outsb
cwtl
std
cmpb
and
popa
adc
push
add
popf
add
push
add
sub
jmp
lds
add
mov
or
add
lods
insl
xchg
mov
les
clc
push
add
clc
push
test
mov
jecxz
ja
in
xchg
and
js
inc
dec
mov
push
inc
mov
add
jmp
aam
aam
out
dec
idiv
lret
adc
orl
dec
or
or
enter
ds
adc
and
ret
addr16
jae
popf
or
xor
clc
mov
iret
clc
out
ret
idiv
add
je
push
add
add
iret
pop
inc
shl
dec
inc
fisttpl
inc
mov
iret
pop
inc
xchg
xchg
ret
or
ss
xchg
testb
push
jle
dec
push
mov
das
std
xchg
cmp
add
jle
sub
std
cld
dec
movsl
test
or
cld
jmp
test
cmpl
orl
add
std
cld
incl
adc
aas
test
call
aam
or
sar
jno
rolb
jb
cmp
cld
jns
lods
hlt
out
ljmp
mov
jnp
or
add
push
bnd
lcall
clc
push
pop
add
add
pop
xor
sbb
out
add
in
jbe
out
jge
jecxz
mov
repz
mov
test
and
call
add
stos
out
sbb
out
lcall
call
subb
sbb
xchg
mov
shll
mov
and
sbb
mov
push
psubw
outsb
jmpw
mov
mov
push
inc
mov
imul
xchg
inc
xlat
inc
aad
repz
fisttpll
cli
outsb
xchg
push
sbbl
sti
pop
leave
mulps
aam
stc
jmp
mov
add
sbb
xchg
mov
test
add
push
test
cmc
push
add
ret
jmp
sbb
add
inc
or
adc
stc
call
inc
stc
jmp
pop
clc
add
mov
pop
and
xor
add
test
push
xchg
pusha
add
sbb
fimuls
dec
push
mov
call
popf
push
pop
test
add
inc
lea
or
inc
stos
cli
mov
xor
add
pop
test
xchg
xor
rcll
adcl
add
outsl
or
nop
das
sahf
pop
clc
and
test
std
cld
mov
pop
push
jae
jp
add
lods
testb
cli
jg
jg
sbb
int3
or
std
cld
aas
enter
test
mov
sti
inc
xchg
and
inc
or
jl
add
clc
mov
and
test
add
in
aam
mov
div
out
aam
stc
subb
push
in
outsl
sti
xor
hlt
mov
adc
std
jnp
add
push
add
stc
lahf
mov
add
jne
mov
ret
add
ficomps
fldt
pop
rcr
insb
inc
or
or
fstpt
mov
cmp
pusha
mov
das
popa
mov
sbb
negl
sbb
inc
sahf
xor
out
sahf
jp
xor
jl
xor
mov
test
jp
xor
jl
xor
jnp
xor
jl
xor
sbb
lcall
cmpsl
sbb
jmp
sti
xchg
dec
int
xchg
push
inc
int
xchg
mov
jl
call
dec
int
icebp
and
fisttpll
in
jle
jb
lcall
push
xor
stc
sbb
mov
mov
stc
dec
jge
dec
push
jge
push
adc
xchg
cs
dec
int
icebp
hlt
xchg
fisttpll
test
int
dec
incb
jno
je
xor
sub
enter
out
pop
add
rcll
add
add
add
add
adc
add
ljmp
in
ljmp
sbb
sub
incl
roll
insl
lock
ja
idiv
loop
xor
push
shl
das
cli
xor
xchg
ret
xor
in
push
lret
sbb
pop
dec
mov
mov
mov
decb
add
mov
or
mov
jnp
or
cld
pushl
push
cld
cmp
cld
pushl
add
in
add
and
add
lock
call
cld
or
stc
lock
jmp
cld
test
std
jl
hlt
fdivrs
and
inc
mov
rorb
add
inc
repz
stc
test
jnp
sti
jae
jl
adc
jb
add
std
arpl
add
mov
std
cld
jge
xor
add
enter
cmp
push
imul
add
pop
aas
aad
pop
adc
push
xchg
mov
jl
ret
push
xchg
mov
jge
fistpl
cltd
jns
xchg
mov
xor
xlat
add
clc
mov
xchg
sbb
mov
push
test
sbb
out
push
xchg
sbb
je
jmp
push
adc
or
add
mov
xchg
sub
pop
pop
divl
mov
call
cmpsb
stos
decb
add
jnp
jle
das
cmp
add
add
pusha
scas
cmp
or
or
add
ss
aad
out
popa
and
add
fwait
mov
mov
ret
or
movsl
lods
push
push
bound
cltd
int
negl
call
decb
sub
push
add
les
push
cld
jae
push
and
out
mov
call
sti
push
adc
adc
jg
and
add
mov
pop
pop
test
sbb
add
add
add
xchg
adc
mov
testl
loope
inc
adc
fs
push
sbb
cmp
jl
mov
das
outsl
or
inc
divl
and
sbb
je
sbb
test
icebp
inc
dec
int3
loope
adc
cs
sub
or
test
je
or
mov
orl
add
add
add
jbe
pop
jno
clc
in
sarb
xor
test
test
int3
push
incl
repz
insl
imul
data16
dec
inc
mov
and
pop
mull
stc
js
cld
jae
mov
cld
jb
js
adc
mov
push
xchg
and
les
je
jo
add
clc
push
sub
xchg
pop
scas
sub
mov
dec
push
data16
insb
xor
out
lds
clc
push
arpl
fiaddl
push
or
sbb
ret
imul
cmp
mov
je
fistps
shl
dec
daa
jnp
icebp
sbb
out
lret
add
lcall
cmp
mov
push
subps
add
add
add
add
data16
cmpsb
add
sbb
outsb
mov
fidivrl
ss
add
addr16
xchg
sub
mov
callw
dec
cltd
adc
dec
int
fldt
add
insb
push
repnz
sahf
clc
sbb
dec
lock
or
clc
push
pusha
dec
lock
mov
clc
inc
add
or
xchg
int
pushl
shl
sbb
xor
jb
std
rclb
inc
push
sbb
adc
pushl
pop
pop
push
add
pop
jecxz
sub
xchg
mov
in
andl
adc
inc
add
adc
rcr
jle
adc
shl
mov
out
push
cmp
add
jbe
push
jle
push
cmp
rcll
call
add
pop
sbb
add
adc
loope
dec
push
roll
dec
adcl
divl
jns
std
xchg
adc
int
sbbl
testl
ljmp
mov
mov
and
cli
test
arpl
add
add
add
add
jbe
and
push
shll
or
stc
in
cld
cmpb
cmc
ss
out
cld
jmp
adc
jmp
cmp
shl
dec
loopne
scas
stc
out
mov
aaa
jge
test
jae
insl
mov
mov
fmull
fwait
clc
test
addr16
sti
clc
in
adc
cmp
and
nop
jp
or
incl
clc
je
aaa
mov
ljmpw
sbb
dec
sub
ss
push
fimuls
stos
jbe
and
in
pop
lret
jecxz
testb
fldt
xor
adc
rcr
jle,pn
xchg
cmp
das
shrb
or
and
rcrb
das
lods
sub
inc
and
arpl
icebp
xchg
insb
add
push
pop
push
add
xchg
es
jmp
xor
clc
push
mov
and
xchg
and
xchg
push
push
insb
aas
cmp
cmp
test
cs
insb
mov
inc
mov
mov
stc
xchg
dec
inc
mov
push
adc
jle
push
push
bound
adc
push
sub
add
add
add
sti
xchg
mov
sub
xchg
mov
insb
add
cwtl
icebp
jno
xchg
aas
jmp
adc
aas
jmp
ljmp
and
leave
test
dec
push
xchg
stos
clc
push
dec
pop
stc
push
in
push
jnp
pop
leave
loopne
mov
ljmp
in
incb
push
mov
call
add
add
add
idiv
lcall
jbe
dec
and
xor
outsb
xchg
or
xor
push
push
pop
imul
or
push
jnp
jmp
dec
and
test
adc
add
jmp
test
clc
in
cld
incl
add
cld
jl
ljmp
clc
mov
dec
sub
mov
sub
and
sub
or
cld
clc
and
ret
test
fucomi
stos
pop
mov
js
out
out
insl
push
cmp
sub
inc
ret
adcb
subb
imul
and
loope
test
out
sub
inc
and
xor
mov
loopne
scas
push
fwait
out
cld
repz
push
out
add
outsb
iret
outsb
and
std
lods
adc
es
daa
inc
out
xchg
add
cli
pop
and
adc
sti
ror
jmp
or
push
aad
insl
shr
outsb
stos
mov
push
ret
cli
push
rep
gs
insl
shll
cli
pop
enter
inc
imul
push
sar
pop
mov
add
add
add
mov
add
xlat
call
cmp
push
push
mov
push
call
mov
pop
lods
sti
xchg
out
jb
xchg
jae
arpl
adc
and
rol
stc
clc
jmp
test
mov
sti
out
sub
cmp
xchg
or
and
icebp
gs
lret
xchg
push
int
add
add
sti
aam
jge
push
xchg
mov
pusha
call
add
sub
js
std
out
xchg
mov
inc
mov
dec
lea
xor
sbb
sbb
push
cmpsb
inc
and
scas
sub
shrl
ljmp
ret
adc
push
insl
or
mov
and
into
sbb
cli
sbb
add
sbb
jne
push
xchg
mov
jl
repnz
mov
adc
push
popl
mov
out
and
jg
test
hlt
jae
and
adc
in
inc
and
add
add
stos
loopne
sti
sbb
xor
fcoml
mov
test
aas
jne
and
sahf
mov
add
scas
cld
jl
fimull
je
push
mov
int3
or
clc
in
repnz
clc
insb
inc
or
xor
sbb
je
xchg
xchg
sbb
lock
or
sbb
incl
stc
xorb
adc
sarl
xchg
inc
idivl
stos
out
bound
sbb
xchg
mov
pop
lcall
add
add
in
pusha
mov
ss
fistpl
out
lahf
dec
call
out
xchg
cmpsl
add
push
insl
int
ja
rolb
xchg
mov
clc
push
addr16
push
mul
xchg
xor
add
ret
xor
mov
sub
xor
int
aam
push
or
out
push
and
cmp
out
dec
mov
push
outsb
add
pop
adc
repnz
sbb
add
jnp
das
mov
cmpsl
sahf
dec
or
mov
fadds
test
loopne
adc
clc
bound
imul
repnz
xor
push
push
add
outsb
dec
and
xchg
bound
cmp
or
shlb
lds
lock
add
or
push
add
jle
test
je
subl
bound
addr16
or
or
sub
gs
mov
inc
fldt
adc
std
lret
lret
sbb
sbb
sbb
je
or
add
addl
add
and
push
or
lods
testb
prefetchw
fprem
sbbb
iret
cmp
arpl
push
mov
sti
out
clc
js
and
jbe
test
sub
sti
addl
stos
out
pop
mov
fdivl
adc
out
cld
sub
scas
inc
sub
xor
in
dec
sbb
dec
inc
mov
test
mov
add
add
add
divb
and
js
push
xchg
cld
mov
xor
xchg
sbb
lock
pop
fidivrs
add
and
and
fildl
or
lret
xchg
fldl2e
mov
add
mov
cmpsl
mov
mov
pop
mov
fistl
jo
sbb
or
lret
incb
loope
insl
cmp
add
jbe
or
add
lea
mov
add
jbe
or
jp
mov
jb
lret
ret
andb
xchg
adc
sbbl
or
jl
out
clc
lahf
pop
loopne
mov
sub
pop
inc
pop
rcrb
pop
scas
xor
shlb
xchg
out
clc
scas
jae
and
js
or
hlt
clc
jmp
add
sbb
push
ss
xchg
aad
sti
push
orw
cli
sub
lahf
push
mov
xor
clc
bound
shrb
or
cmpsl
xchg
clc
out
and
call
push
pop
jge
hlt
push
add
in
and
add
adc
mov
imul
test
add
shl
jbe
or
jmp
popf
call
mov
pop
test
add
outsb
loop
mov
je
mov
mov
dec
bound
or
in
sti
jae
rorb
xchg
iret
mov
inc
mov
cmp
fyl2x
orl
enter
and
movsl
test
movsl
not
ljmp
add
add
add
loop
or
pushf
int
push
lods
or
mov
orl
or
je
and
or
mov
cld
adc
aad
sbb
add
jae
sub
xchg
mov
aaa
je
sub
fldl
fmuls
rcr
inc
jae
jg
cli
cld
sub
scas
xor
add
add
add
sub
xchg
sti
imull
inc
out
cld
test
je
jl
sar
sarb
add
or
incb
mov
pop
scas
sub
or
push
sbb
adc
xchg
shl
mov
ss
fildl
sbb
lret
out
dec
das
add
clc
and
mov
out
jge
jno
add
popf
repnz
lock
push
pop
dec
xor
out
push
jg
pop
arpl
and
data16
out
adc
lret
add
testl
jne
ret
out
jl
sbb
pop
gs
push
add
inc
aam
and
add
cli
movsl
inc
in
scas
adc
ja
call
cli
xchg
shr
push
jge
out
daa
cmp
add
add
add
cli
xchg
mov
sti
push
leavew
push
jns
lahf
mov
push
faddp
lods
jl
loopne
add
inc
xlat
mov
cld
xchg
inc
or
data16
stc
fincstp
xchg
subps
call
push
mov
add
mov
sbb
lods
xchg
adc
inc
cmp
xchg
scas
dec
in
cmc
cmp
insl
call
add
pop
je
pop
insb
je
cmp
adc
add
aam
jae
insl
dec
cmp
lods
cld
jno
insl
inc
and
push
add
loope
test
dec
push
pop
sbb
pop
aam
sub
stos
divl
insb
or
mov
cmc
or
add
ja
out
and
mov
lahf
sbb
clc
add
stc
jnp
loopne
clc
push
iret
test
negl
mov
repnz
push
cs
js
adcl
clc
movsb
sbb
test
xchg
and
xor
lcall
stc
pop
push
push
stc
orl
pop
loopne
cmpsb
stc
out
push
ljmp
add
mov
loopne
push
stc
imul
add
add
add
adc
and
mov
enter
shlb
call
mov
pop
and
xor
aam
dec
into
inc
rorb
daa
scas
push
cmp
mov
ret
pop
loope
mov
iret
sarl
mov
jl
xor
jb
in
mov
ret
jp
in
mov
sbbb
add
add
add
add
jo
icebp
jmp
rorl
xchg
stc
inc
jg
fwait
jmp
insb
adc
inc
rorb
sbb
push
jne
adc
mov
test
dec
hlt
inc
or
hlt
mov
add
loop
and
jp
clc
out
ljmp
outsb
std
jmp
and
push
add
add
lahf
push
or
push
aaa
insb
pusha
jo
jo
dec
aaa
je
pushf
jmp
and
xchg
in
push
xchg
push
xchg
and
push
add
test
mov
push
stc
push
adc
clc
add
adc
add
push
add
xchg
dec
and
mov
push
inc
popa
xchg
ret
or
aam
pop
test
adc
add
andl
cli
mov
stos
idiv
cwtl
rcrl
xchg
push
pop
test
dec
and
and
add
adc
add
rcrb
xor
insb
call
pop
rcrb
push
push
pop
test
cmpsl
sbb
clc
lock
cld
dec
jne
loopne
add
shll
jg
aam
adc
xor
or
cmp
sbbb
cld
test
fcomi
sbbb
or
cld
gs
dec
mov
movsb
push
jne
adc
jne
faddl
sbb
cli
fmuls
mov
add
ljmp
pop
test
shlb
xchg
inc
incl
ja
adc
add
clc
jp
or
incl
clc
jl
push
decl
inc
pop
out
int3
sbb
jle
xor
or
fs
out
addl
jb
lret
ret
xchg
jle
add
xchg
es
jp
out
clc
sub
bound
call
scas
or
fs
push
rol
fisttpl
call
lods
popf
push
into
push
xchg
add
lcall
add
add
add
add
sahf
out
pop
out
std
shrb
cmc
adc
sbb
mov
or
xchg
jmp
sti
push
add
xchg
leave
push
mov
mov
add
stc
jecxz
mov
test
lods
push
cmc
clc
in
loope
arpl
cmc
cmp
sub
push
push
cltd
out
adc
add
js
sub
mov
xchg
and
push
add
inc
pushf
inc
add
sbb
add
jnp
xlat
cltd
clc
add
in
lods
mov
xchg
in
fbld
and
gs
popf
pop
push
and
mov
adcb
jl
mov
xlat
sbb
popa
pop
dec
and
pop
add
inc
push
adc
call
mov
and
sbb
add
dec
and
push
sbb
test
push
mov
sbb
call
pop
inc
and
stos
test
dec
in
push
lcall
insl
add
js
in
js
and
mov
clc
inc
aam
test
clc
test
je
add
out
add
clc
stos
add
test
enter
fdivrs
xchg
stos
out
lock
incl
ljmp
push
push
push
stc
jae
adc
test
sub
pop
ret
jo
insb
cmp
cld
jl
pop
push
add
pop
sar
add
mov
pop
jo
add
or
mov
dec
sub
or
add
sbb
cmp
call
es
bound
notl
add
pop
out
and
mov
or
idivb
dec
or
fwait
lsl
push
pop
test
aas
insb
sub
clc
push
data16
inc
jecxz
in
xchg
push
mov
lcall
add
add
add
push
cmp
test
lcall
aas
cmp
push
or
clc
jmp
mov
xchg
pop
and
int
add
add
dec
add
test
in
push
push
jmp
clc
jmp
add
test
ja
std
xchg
jo
int3
bound
out
sbb
add
fldl
shlb
bound
pusha
pusha
xchg
push
in
xchg
in
mov
aas
jmp
call
and
adc
test
stc
jmp
xchg
idivb
xchg
mov
jmp
xchg
jne
enter
cmpsl
clc
jge
orb
jne
adc
dec
arpl
decb
inc
and
addb
add
dec
push
xchg
ret
or
pop
insl
add
test
sti
je
xchg
jnp
jns
je
jnp
test
push
call
fimull
test
dec
push
dec
and
jg
movsl
adc
jl
inc
jecxz
in
gs
adc
addb
repz
out
cld
decl
cmp
lock
cld
clc
popa
mov
inc
fmul
jnp
or
testl
mov
fsubrs
xor
add
subl
xchg
adc
mov
mov
and
sub
mov
push
sub
loope
mov
sarb
jns
dec
iret
add
pop
loope
push
mov
mov
cld
push
pop
lcall
in
add
dec
push
pop
add
mov
add
popa
repnz
add
out
push
out
mov
pshufw
fsubrl
add
fsub
sbb
cmpsl
inc
mov
les
out
stos
dec
xchg
js
cmp
fldl
shr
out
xchg
test
and
inc
in
pop
cs
sti
test
dec
jo
sub
fmul
adc
xchg
aas
pusha
sub
ja
clc
xchg
pop
xlat
jb
push
push
cmp
cli
push
ja
dec
sti
iret
xchg
mov
add
arpl
fs
push
push
adc
xlat
xchg
lcall
dec
ficoms
sbb
mov
fwait
scas
xor
loopne
push
jb
dec
lret
xchg
loop
add
sub
jne
sbb
jnp
loopne
cli
sbb
test
adc
push
repnz
inc
adc
add
dec
add
xchg
out
adc
xlat
adc
daa
dec
push
push
loopne
sbbb
sub
add
sbb
cld
in
in
faddl
jnp
insl
inc
dec
push
add
mov
idivl
xchg
mov
mov
xchg
pop
loopne
xchg
pop
in
xchg
inc
addl
insb
std
mov
in
int
or
cmpb
adcb
repz
jge
add
clc
jo
or
or
sti
pop
push
mov
add
mov
in
jb
or
mov
add
push
jb
pop
or
mov
pop
call
sub
or
imul
jae
loopne
outsl
inc
stc
scas
push
add
icebp
pop
hlt
xor
lret
sbb
enter
stc
stc
ja
popl
push
mov
mov
idiv
push
adc
ljmp
adc
push
lret
lea
in
add
clc
push
mov
bound
dec
adc
test
nop
mov
lock
add
enter
rcr
pop
dec
and
repz
push
xlat
jge
jge
ret
daa
jnp
loopne
jge
add
fmull
cmp
jo
int3
xchg
es
sub
xor
mov
xchg
fdivs
push
std
adc
clc
pushf
add
fidivs
fisttpll
call
gs
adc
inc
hlt
movsb
or
fisttpll
call
jge
pop
es
pop
add
outsb
mov
fstpl
push
inc
mov
xchg
jl
pop
cmp
adc
xor
xchg
add
aam
hlt
fdivr
call
jp
clc
jmp
cs
sbb
add
and
xor
bound
mov
xchg
mov
in
ljmp
cmc
push
test
lds
jge
lds
mov
call
stos
inc
xor
iret
and
in
dec
push
out
jno
fildl
or
int3
insb
push
pop
push
in
mov
lea
mov
addl
or
sbb
mov
jp
orl
loopne
pop
fidivrl
fsts
push
pop
clc
jg
push
shrl
add
sbb
mov
jne
and
aaa
js
fdivp
jae
xchg
cmp
lret
out
cmp
jns
sbb
clc
mov
jb
jmp
in
and
mov
dec
lret
popf
xchg
cld
push
dec
addb
add
add
add
add
insl
jl
stc
and
aaa
dec
adc
add
mov
in
jne
dec
jne
jo
jae
dec
jge
out
inc
cld
je
in
jne
jge
push
repz
sbb
test
hlt
arpl
sub
or
sbb
orl
dec
mov
push
outsb
inc
hlt
aad
ret
add
out
lods
ljmp
adc
ret
mov
xchg
scas
add
fwait
mov
and
mov
call
stos
add
add
mov
inc
push
inc
adc
cmpl
jb
js
clc
push
jecxz
jl
call
push
or
mov
jo
add
add
add
add
add
xor
cltd
fs
jge
call
push
lcall
push
pop
cmpsl
cmp
xchg
sub
movsl
xlat
push
test
xchg
pop
xchg
ljmp
add
rcrl
cli
mov
fldcw
test
fmull
jb
pcmpgtw
repz
add
push
ret
adcl
push
add
or
stc
xchg
mov
ss
cld
jmp
dec
push
ljmp
adc
mov
test
insl
imul
adc
fsubl
push
test
and
cli
adc
inc
stos
in
repnz
xor
movsl
sub
pop
mov
jmp
loopne
dec
insb
dec
mov
sub
lret
clc
add
enter
roll
orb
jp
add
lods
inc
sar
mov
mov
add
add
clc
call
mov
pop
mov
add
xor
jae
cmp
test
push
aas
push
jmp
dec
test
mov
jae
cltd
add
shll
and
add
add
add
es
xchg
in
or
addb
cmpb
mov
rclb
leave
je
cltd
faddl
in
cmp
insl
ret
mov
inc
fisubl
clc
inc
fistps
fidivrl
or
mov
sahf
stc
jo
rorb
cltd
enter
es
jne
fisttps
or
add
out
cmp
cltd
push
jge
jmp
add
fisttpl
jl
outsl
pop
aam
pusha
inc
fsubl
push
int
cltd
nop
push
clc
push
insl
add
adc
fidivs
std
call
rcll
lock
stos
jmp
jl
sub
sbb
out
cmp
notb
mov
inc
in
add
divb
sbb
and
add
clc
jmp
push
fwait
rcll
in
add
decb
int
dec
or
fistpl
add
ffree
or
aam
jmp
loope
clc
jmp
loope
mov
add
mov
sbb
repz
test
sbb
add
loopne
add
into
testl
cltd
mov
sbbl
sbb
pop
dec
int
mov
sbbl
jmp
fistl
and
test
pop
jge
pusha
pop
add
sub
insl
xor
add
and
add
cmp
mov
add
bnd
add
lcall
insl
mov
jge
cld
cmpsb
dec
sarb
inc
ja
mov
int
test
cmp
sub
lds
xor
addl
and
jp
lea
fbstp
jo
sub
jo
and
jb
out
inc
les
push
sar
lds
in
je
add
add
decl
jp
add
clc
xor
jl
pop
adc
xchg
push
push
mov
xor
jnp
call
add
cmp
sbb
sub
adc
and
add
out
icebp
fwait
mov
clc
push
test
mov
cmp
data16
pop
jo
aam
ljmp
push
fildl
add
insl
add
add
add
add
add
fwait
es
je
out
clc
cmp
aaa
aam
xchg
pop
dec
pop
jmp
icebp
stos
xorb
or
pop
jecxz
icebp
stos
ljmp
jp
inc
fisubs
mov
adc
clc
fs
push
and
inc
into
xor
hlt
push
add
hlt
xchg
mov
int
mov
subl
xor
lret
add
add
add
add
pop
mov
test
stc
pop
jno
or
test
add
gs
subb
mov
inc
pop
push
push
mov
imul
add
push
add
shl
xchg
xchg
sbb
and
push
push
inc
or
inc
lcall
imull
push
out
aas
adc
bound
add
xchg
cmpsl
lret
rcrl
jp
ds
testb
xor
jp
and
imul
cwtl
xchg
sar
iret
addl
pop
mov
pop
add
adc
fadd
int3
adc
sahf
in
outsl
bound
cmp
inc
je
clc
mov
xor
iret
loope
sbb
push
adc
mov
add
add
add
add
mov
inc
or
mov
sarl
lret
xchg
call
mov
jl
addr16
jge
das
push
xchg
mov
ja
nop
aam
add
cwtl
push
call
jno
sub
jno
adc
xchg
loop
jnp
pop
pop
sarb
mov
movsb
stc
dec
pop
and
add
mov
jle
and
shr
or
out
clc
push
call
sbb
or
push
lods
fidivl
mov
xor
adc
xchg
or
mov
testl
jp
repnz
xlat
jle
sbb
push
aas
mov
call
add
add
add
in
pop
adc
repz
es
repz
bound
jo
sub
loope
mov
mov
cmp
xchg
mov
scas
pop
lcall
sti
test
dec
stc
add
jl
aaa
inc
and
push
je
jne
push
cmp
push
das
jge
dec
inc
or
call
add
add
add
inc
add
xchg
push
test
xchg
cltd
mov
or
and
into
push
adc
mov
xchg
cmp
je
dec
inc
and
dec
aas
sub
leave
adcl
cmp
shrb
pop
and
stos
pusha
sub
jmp
dec
sbb
push
cmp
iret
decb
daa
sub
add
outsb
sbb
pop
sub
pushl
mov
jmp
adc
ds
pop
add
fisttps
jnp
sbb
mov
lcall
push
pop
rcll
add
int
int3
clc
cmp
cmp
xor
mov
test
lock
sarb
mov
lea
xchg
xchg
cld
incl
mov
inc
in
mov
jnp
enter
adc
pop
add
mov
jnp
sub
in
std
fs
dec
push
loopne
pop
add
inc
inc
xor
jmp
rcrl
mov
lret
lods
jl
lret
les
inc
test
pop
stos
add
xlat
enter
dec
jnp
pop
outsb
inc
add
xchg
xchg
push
clc
push
insb
or
fwait
out
push
push
out
cmp
out
dec
cmpsl
ds
jae
out
add
out
jno
out
clc
sbb
mov
rcr
xor
push
jo
xor
sub
push
sub
inc
jo
imul
add
jg
add
or
pusha
pusha
cmp
mov
iret
sti
push
int3
mov
loop
sub
fsubrl
add
mov
hlt
jo
ret
jb
cli
mov
ret
stc
push
push
repnz
ret
pop
jb
push
dec
fs
cltd
and
push
sub
cmp
dec
cmc
add
insb
clc
xchg
out
test
cli
push
lret
dec
adc
test
cs
add
push
adc
pop
push
nop
xchg
cmpl
adc
cli
cmp
inc
add
and
cli
xor
or
loope
and
cmpl
add
fldl
pop
je
pop
insb
mov
adc
loopne
idivl
addl
mov
das
adc
lea
sub
inc
insl
mov
aaa
sbbl
dec
pop
cli
loopne
mov
addl
or
add
aam
inc
std
dec
inc
dec
sbb
insb
push
clc
xor
dec
jae
dec
test
sti
mov
out
incb
sub
mov
inc
push
and
xchg
jle
out
inc
add
js
test
jne
mov
test
cld
incl
mov
mov
jnp
add
xor
je
mov
jns
jnp
add
pushl
mov
cmpb
daa
xor
dec
or
jno
pop
faddp
and
int
je
addr16
movsl
pop
out
sub
push
xchg
out
cmp
in
xor
jg
adc
cmp
out
rorl
out
jne
mov
add
push
out
std
repz
push
into
mov
jge
pop
cmp
sbb
push
scas
mov
clc
push
data16
xor
jmp
xchg
ret
dec
lods
sarb
jg
xor
movd
lcall
sarb
stc
cmpsb
sti
push
insl
ljmp
add
add
cld
bound
dec
jge
hlt
inc
push
jb
mov
test
or
call
out
dec
pop
bound
xlat
inc
mov
rcrb
mov
or
iret
jo
dec
xchg
cli
fwait
push
shl
aad
jmp
aam
jmp
test
push
test
push
lcall
add
scas
xchg
sarl
jb
loope
inc
mov
dec
adcl
aas
sub
jmp
add
popa
mov
testl
jp
sub
sti
sbb
mov
ljmp
inc
aaa
adcl
cmp
push
scas
adcl
xor
add
inc
aas
fisubrs
and
fildl
add
add
add
cmp
xlat
jle
daa
sbb
add
sbb
orl
insl
inc
push
pop
test
repz
mov
dec
dec
insb
bound
dec
call
xor
test
xor
call
or
rcl
adc
bound
test
ret
test
sub
jns
cmp
ja
decl
cmp
pop
fdivr
or
pop
add
lock
dec
into
and
jnp
xchg
cmp
jge
mov
movsb
cmc
pinsrw
or
stc
notl
loop
mov
out
clc
pusha
pop
loope
lcall
shrl
jnp
adc
scas
ret
jge
pop
ds
loope
clc
push
mulb
add
mov
ret
cmp
std
jbe
out
notb
imul
out
xchg
adc
dec
ret
dec
push
mov
jne
lahf
jp
pop
outsb
dec
pushf
lea
ss
push
cmp
adc
xchg
jp
pop
add
adc
dec
dec
jae
aas
inc
gs
jbe
and
pushf
push
sub
xchg
xor
inc
push
dec
bound
xor
xlat
pop
subl
pushf
push
mov
sar
rcr
jo
sub
loope
push
add
sbb
leave
cli
movd
dec
insb
loop
jo
insl
mov
inc
mov
push
or
aaa
xchg
fwait
xchg
add
jnp
push
add
adc
xor
ja
push
add
lret
scas
rcl
mov
cli
pop
add
cwtl
mov
dec
xchg
nop
add
adc
rcll
lcall
sbb
call
mov
scas
sbbl
aam
pop
data16
sbb
pop
add
cwtl
jle
pop
adc
mov
mov
add
shrl
in
jge
add
add
rcrb
je,pt
xor
test
test
cld
decl
cmp
xorl
push
push
inc
inc
dec
jae
dec
test
es
lods
dec
fildl
or
inc
dec
xor
cmp
outsl
mov
dec
inc
push
aaa
stc
push
incl
cmp
cmp
cld
repz
add
je
clc
lods
imul
sbbl
dec
mov
lods
cld
call
pop
add
scas
sarb
mulps
pop
add
and
stos
fwait
js
xor
xor
xchg
out
insl
jp
and
inc
lea
push
outsb
jp
and
dec
cli
mov
pop
or
pop
andl
or
out
push
or
clc
push
outsb
xchg
arpl
push
push
ds
add
or
rorl
jnp
jmp
xor
adc
out
jbe
cmp
xor
std
fnstcw
xchg
push
jge
push
and
adc
add
xchg
bound
cmp
stc
je
pop
roll
or
jge
les
clc
mov
mulb
bound
test
icebp
test
call
call
daa
add
and
test
mov
xchg
dec
and
aam
jmp
dec
add
dec
dec
mov
aaa
pop
add
adcl
ss
adcl
mov
xor
adc
xchg
loopne
push
lea
push
ret
xchg
ja
push
loope
add
dec
pop
push
test
push
cmp
fwait
stos
cli
xor
add
test
mov
sbb
jp
mov
inc
out
ljmp
incb
adc
push
push
mov
out
int3
sub
out
int3
clc
jp
jmp
stos
orl
aas
scas
cld
test
cmp
jns
push
jmp
scas
push
and
sbb
pop
adc
jge
scas
cld
decl
scas
je
jge
je
or
idiv
pop
inc
test
push
mov
dec
aaa
insb
addl
int
cmp
negl
psubd
mov
dec
xor
fiaddl
add
add
cs
test
adc
add
cmp
sbb
mov
jne
cmpsl
adc
dec
pop
cmp
jo
mov
fs
and
dec
lahf
mov
xchg
es
mov
mov
cwtl
outsl
jne
mov
push
fistpll
pop
xor
scas
mov
push
enterw
add
add
add
testl
dec
mov
xchg
sahf
add
sub
sbb
xor
out
jg
lock
add
sbbl
inc
mov
clc
jmp
jbe
call
iret
xor
xchg
lahf
xchg
inc
lds
lret
test
push
pop
js
outsb
aam
pop
push
sub
jmp
add
add
add
or
sti
push
test
sub
jmp
rorl
mov
bound
lcall
mov
add
call
sti
push
mov
mov
mov
mov
xor
enter
mov
or
add
shl
pop
inc
mov
add
and
jg
sbb
verr
in
mov
mov
dec
pop
pop
xchg
and
dec
je
aam
mov
pop
orl
cli
imul
sbb
pop
sbb
xor
mov
inc
cmp
daa
mov
test
repnz
rcll
in
popa
xchg
cld
and
mov
loope
dec
rolb
or
scas
cld
clc
push
dec
js
cmp
pop
pushf
sub
or
xor
insb
aaa
push
cld
shlb
or
lahf
cmp
ss
xsavec
daa
mov
xchg
jmp
outsl
test
sub
jno
sbb
add
add
add
jae
stc
orb
xchg
faddl
pop
and
hlt
cmp
add
xchg
push
add
push
pop
inc
int3
mov
fdivl
cmc
inc
mov
lea
mov
mov
gs
jne
and
add
inc
cmc
pop
mov
pop
notb
out
dec
out
add
xchg
mov
add
add
add
add
push
out
lock
push
adc
add
add
jne
jmp
xlat
test
and
push
aas
xchg
sbb
jmp
xchg
jl
fs
inc
adc
inc
fwait
or
adc
scas
mov
mov
cmpsb
lahf
scas
dec
mov
push
push
ja,pn
push
mov
xchg
fwait
inc
shll
decb
sti
push
test
pop
add
push
mov
pusha
add
jg
pop
add
jle
xchg
sti
push
mov
les
lcall
sub
add
mov
movsl
ds
sbb
jnp
arpl
mov
rorb
add
lahf
lods
push
popa
sbb
lret
test
add
mov
sti
leave
lret
leave
xchg
add
push
and
pop
mov
add
mov
in
out
loop
testl
inc
fcoms
push
fdivr
pop
mov
sbb
add
push
sbb
add
xor
mov
ror
cli
mov
gs
sbb
dec
sub
jmp
xor
mov
add
xrelease
xor
push
adc
aam
push
cmp
ret
push
movsl
add
lret
sub
enter
lret
cmp
enter
mov
lret
mov
mov
cld
clc
cmp
jns
add
idivl
in
in
lods
xlat
test
jle
cli
push
call
test
out
je
out
add
cltd
rorl
clc
fldt
fs
push
out
adc
jns
add
lahf
sub
fnstcw
push
out
jne
mov
dec
popa
mov
icebp
xchg
out
sub
cmp
lock
cmp
cwtl
es
lahf
fsub
add
push
repnz
cmpsl
adc
cmpsb
or
call
sbb
add
add
add
imul
aaa
adc
sub
jne
ljmp
jecxz
jb
fs
call
xchg
pop
mov
cmc
push
xor
pop
int3
mov
loop
and
mov
cmp
xchg
fsubrl
call
sbb
mov
jp
pusha
ljmp
outsb
mov
jno
pusha
bound
adc
sti
add
jno
cmp
dec
push
mov
bound
adc
loope
mov
sbb
pfrcpit2
arpl
stc
fwait
dec
cs
jmp
mov
call
pop
add
sub
mov
lldt
fsubrl
sarb
fwait
cwtl
push
push
adc
add
add
add
add
sbb
add
xchg
ret
jae
lahf
cmp
dec
jne
cmp
xchg
push
add
add
cbtw
or
xchg
add
pushf
mov
cmpb
jmp
rorl
insb
mov
push
clc
mov
ljmp
pop
jp
push
mov
rorb
or
xor
add
clc
aaa
addl
test
mov
push
dec
test
in
mov
flds
xchg
icebp
rolb
sarb
push
pop
and
mov
shll
add
and
or
add
push
out
imul
inc
xor
pop
pop
add
fwait
sub
xlat
pop
sub
cmp
dec
out
jne
inc
mov
xchg
mov
in
xchg
cmpsb
cltd
aam
and
ret
cs
divl
mov
ss
xchg
xor
jmp
inc
movsb
cltd
das
pop
stc
fwait
test
xor
insl
sub
das
inc
add
sti
push
test
add
add
add
pop
xchg
les
adc
hlt
xchg
pusha
imulb
inc
pop
stos
mov
loop
cmp
ret
dec
and
cmp
xchg
stc
rcrl
clc
mov
xor
xchg
mov
daa
sbb
idiv
push
shrl
push
add
sti
xchg
add
lahf
mov
data16
add
add
add
add
push
test
pop
add
adc
std
or
nop
enter
add
and
pop
add
sbb
dec
insl
leave
inc
je
lahf
mov
daa
verr
sub
insb
ljmp
call
push
fstpl
inc
cmp
push
add
aam
push
lret
xchg
sbb
add
add
add
std
sub
addl
enter
pop
adc
cs
inc
fmulp
sub
jle
mov
cmpb
rol
jle
idiv
pop
mov
lds
test
ja
sub
sti
fscale
sub
jns
push
mov
and
loopne
xor
insb
jae
add
es
pop
mov
scas
cmp
sub
pop
cmp
mov
mov
mov
jnp
aam
mov
idivl
inc
cmp
jle
std
sub
push
in
add
sub
xor
push
pop
pop
cmp
push
outsb
dec
movsb
lahf
adc
les
insl
add
xchg
rolb
lods
pop
add
push
out
push
fdivrs
push
add
inc
cltd
fstpt
scas
imul
and
in
lcall
dec
xor
sti
push
fwait
mov
mov
stos
mov
mov
sub
xchg
pop
out
call
xchg
mov
ds
ljmp
sbb
clc
push
sbb
out
jg
or
sti
sub
jmp
add
push
or
add
mov
in
xchg
test
jge
lcall
sbbl
pop
add
pop
add
inc
loope
sahf
aas
jmp
mov
pop
jb
dec
mov
add
xchg
cmp
stos
xchg
cld
arpl
call
repnz
orl
push
add
add
sbb
xorb
add
adc
add
push
add
inc
xor
call
mov
pop
sub
loopne
or
mov
inc
or
push
or
adc
adc
in
sub
pop
roll
test
add
dec
loope
mov
mov
aas
adc
in
pop
popf
lods
clc
add
scas
addl
dec
or
adc
mov
fildll
cld
pop
xchg
adc
ljmp
sar
cld
mov
mov
idivl
push
add
add
mov
movsb
mov
idiv
roll
sub
hlt
mov
hlt
xchg
scas
add
and
hlt
sar
cmc
cmp
cs
clc
push
sar
mov
cmp
scas
aam
int
fdiv
lock
and
lock
mov
cltd
mov
into
jae
das
hlt
push
mov
add
xchg
into
add
out
cld
push
in
je
fistpll
push
call
idivl
cld
imul
add
push
mov
cld
dec
inc
in
js
add
add
sahf
cli
sti
testb
inc
or
xchg
adc
add
cwtl
sti
jg
xlat
add
add
in
xor
stc
fwait
sub
jl
out
jnp
pop
call
xchg
add
mulb
add
jae
clc
jmp
test
jnp
js
std
or
stc
mov
jmp
inc
popl
fdivr
dec
adc
add
or
in
inc
or
pop
jmp
js
adc
sbbb
ficoml
or
adc
dec
in
popa
pop
adc
or
fsqrt
inc
adc
std
or
or
cmp
dec
lock
mov
fnstcw
and
pop
add
add
add
in
add
das
subl
loope
fwait
mov
cmp
dec
and
adc
lock
cmp
add
mov
decb
movsb
faddl
xor
push
fisubl
jle
sbb
sbb
mov
test
add
faddl
add
add
add
clc
outsb
jecxz
shll
sarl
cld
out
fadd
clc
jnp
push
add
mov
aam
push
mov
or
mov
clc
loop
pop
add
scas
aam
movsl
scas
cld
xchg
jp
cmpb
cld
pushl
loopne
nop
mov
cld
clc
mov
aaa
adc
imul
ss
push
mov
aas
adc
and
or
das
sbb
cwtl
adc
dec
or
dec
pop
outsb
inc
add
test
xor
xor
lea
adc
xchg
int
adcb
aaa
add
sub
jmp
insl
xor
sbb
je
jge
push
outsb
sub
push
fisttps
aaa
pop
sti
add
adc
inc
add
mov
add
add
add
cmpsb
jle
xor
xchg
mov
jl
or
ret
into
ret
mov
cmp
inc
mov
add
mov
sub
add
divl
cmpsl
sub
scas
cmp
call
clc
pop
add
sti
and
rorb
add
add
pusha
mov
clc
jmp
mov
sub
jb
adc
jge
loopne
je
in
fs
mov
xor
ss
test
ljmp
scas
jmp
mov
scas
setp
repnz
je
insb
push
and
add
in
aam
xchg
xchg
orb
adc
test
push
mov
call
xchg
jo
mov
cmpsb
xor
add
cmpsl
orl
mov
push
push
jmp
call
fsub
das
test
sti
mov
call
jbe
or
add
in
sbb
test
lock
adc
inc
add
test
sbb
clc
cmpsb
add
dec
or
mov
cld
add
xchg
incl
mov
jae
out
test
adc
fsubs
sbb
add
or
jmp
je
lock
adc
fs
cmpsl
arpl
cld
test
scas
dec
sbb
jno
xor
leave
out
test
lods
mov
cmpsl
lahf
xor
aas
and
xor
jge
push
add
pop
out
pop
and
pop
dec
ds
cmp
clc
sub
les
sbb
jno
mov
fs
fnsave
clc
or
insb
sub
ja
fistpll
push
jo
clc
push
out
mov
outsb
ds
xor
ficoms
std
add
or
add
lea
adc
cmp
push
clc
push
out
mov
scas
sahf
ficoml
mov
mov
cmp
add
ds
mov
cmp
lcall
clc
or
add
adc
enter
sbb
clc
in
jge
xor
push
adc
aad
pop
and
in
push
scas
add
and
pop
push
inc
sahf
clc
mov
pop
add
adc
push
stc
push
add
adc
jns
sti
sub
add
pop
mov
mov
cmc
mov
add
dec
adc
aad
mov
call
cltd
icebp
lcall
clc
jmp
sbb
push
add
pop
cli
je
jb
idivl
insl
sbb
or
sahf
in
lcall
add
add
incb
push
jg
sbb
adc
popa
xchg
mov
jae
xchg
lock
inc
adc
scas
xchg
pop
mov
idiv
lods
subb
cld
mov
scas
cld
jmp
icebp
or
jnp
cld
incl
subl
mov
jmp
add
xor
add
and
clc
dec
add
clc
in
jmp
mov
cmpl
in
dec
test
jmp
mov
data16
jae
inc
mov
mov
clc
scas
add
clc
lcall
jno
test
sbb
push
aas
into
add
popf
dec
xchg
inc
lcall
pushf
cmc
ret
inc
nop
or
movntq
pushf
out
dec
sbb
pop
icebp
xchg
pop
rcrb
cmc
and
cmpsl
inc
fldz
add
xchg
out
clc
sbb
jbe
testl
fs
je
repz
push
pop
sbb
push
sub
add
fs
je
rorl
ud0
add
mov
and
inc
cmc
test
popa
lock
ljmp
repz
inc
aad
dec
or
ud0
repnz
inc
cmc
test
popa
lock
ljmp
in
xchg
inc
aad
dec
or
ud0
in
xchg
inc
cmc
test
popa
out
ljmp
loopne
adc
add
dec
jb,pn
mov
iret
cmp
out
xchg
sahf
clc
xchg
mov
sbb
add
mov
mov
push
pop
inc
cmpl
or
jnp
adc
pop
test
mov
jmp
mov
push
ret
mov
inc
loope
mov
pop
dec
jno
ret
add
add
add
add
mov
push
sbb
xor
cmp
add
roll
test
pop
test
and
inc
jmp
push
push
dec
mov
or
stc
clc
sti
or
loopne
ret
jae
dec
and
mov
stc
daa
sub
mov
cld
inc
aaa
add
jae
add
scas
cld
dec
cmpl
add
bound
xchg
mov
xadd
scas
jge
call
push
inc
jnp
add
jg
add
clc
sub
adc
test
cld
mov
enter
mov
cld
mov
mov
jmp
sti
wbinvd
ja
or
in
adc
xchg
popf
out
cmp
sub
jne
pop
dec
add
inc
inc
or
out
pop
inc
pop
shll
repz
push
push
je
out
clc
mov
mov
pop
pop
sub
clc
push
mov
xchg
pusha
dec
sub
mov
scas
cwtl
out
mov
pop
push
add
inc
cmp
pusha
inc
sub
jge
push
insl
mov
inc
or
add
sti
push
xchg
add
push
inc
orl
jmp
inc
stc
mov
mov
xchg
push
leave
rcrl
xchg
orb
lods
mulb
stos
inc
stc
sbb
push
jge
pop
call
and
shll
add
sti
push
add
jb
push
test
xchg
inc
stc
sbb
fwait
incl
sti
push
jge
mov
jp
cld
mov
pop
sti
push
add
popa
mov
or
inc
or
sbb
jbe
push
fistpll
sbbl
add
mov
sarl
or
lods
cmovs
pusha
mov
cwtl
sbbl
jns
add
cwtl
mov
adc
add
fsubl
or
lahf
in
decl
hlt
push
pop
dec
mov
add
add
add
add
sbb
call
jmp
inc
cltd
jle
inc
mov
rclb
jmp
repnz
pop
sbb
clc
dec
jl
jg
mov
andl
sbb
mov
push
and
pop
clc
lret
lret
cmp
lret
xor
mov
jae
or
jmp
stc
leave
movsb
and
jae
divb
sbb
outsl
or
add
clc
push
or
dec
xor
jnp
add
sub
mov
push
xor
subl
inc
adc
incl
add
mov
inc
sub
test
xchg
out
mov
push
lret
xchg
cmc
ret
shl
movsb
jmp
mov
pusha
xchg
or
sbb
movl
cmp
add
add
add
sbb
xor
add
movsl
das
in
out
push
loopne
mov
jbe
push
lods
mov
pop
loop
mov
inc
mov
out
fwait
mov
mov
das
das
inc
mov
lcall
lcall
roll
repnz
push
jge
test
std
imul
jge
add
add
pop
jp
shr
mov
clc
push
scas
aam
jmp
cmp
sbb
or
je
lret
cltd
sarl
sbb
test
adc
loope
xlat
xor
sti
push
add
leave
cmp
mov
mov
cmpsl
dec
out
pop
sub
push
mov
mov
aad
jmp
mov
lret
mov
or
sub
add
xchg
mov
call
fwait
jne
flds
push
or
cmp
jnp
pop
pop
xchg
mov
and
and
cmpsl
into
idiv
mov
mov
int3
sbb
pop
bound
adc
enter
mov
or
icebp
mov
xchg
into
negl
pop
or
lcall
push
push
ror
idiv
pop
outsb
jge
lea
addl
inc
and
out
sar
cld
mov
add
jg
pop
inc
add
or
clc
aad
mov
lods
roll
xchg
aaa
inc
push
pop
clc
jg
sarb
mov
clc
mov
test
leave
dec
test
xor
sub
add
add
add
movsl
push
test
hlt
dec
and
cld
clc
dec
movsb
test
iret
mov
jnp
or
gs
mov
cs
outsb
mov
push
fnstcw
fbld
out
clc
gs
cmp
ds
nop
jmp
or
push
mov
add
xor
mov
jle
push
clc
push
pop
cmp
add
add
add
xchg
mov
push
cmp
add
push
out
ja
pop
mov
call
pop
clc
add
imul
call
mov
shl
stos
test
loop
cmpb
and
cmp
test
sub
out
dec
pop
add
aas
jge
call
push
lds
pop
in
mov
test
sbb
push
shll
nop
clc
jmp
popa
pusha
insb
in
clc
pop
xchg
pusha
out
sub
scas
cltd
loop
cmp
cmpl
mov
mov
jmp
mov
add
js
or
cld
lcall
stc
sbb
push
push
add
ficoms
xchg
adc
adc
add
inc
inc
pop
add
mov
sub
adc
fildl
push
sbb
aaa
mov
inc
inc
sahf
call
inc
cmp
sbb
adcl
push
fadds
push
adc
orl
add
sahf
outsl
jge
xchg
decl
add
mov
add
xchg
notb
adc
jge
adc
test
or
push
out
stos
mov
mov
popf
cmp
sub
ds
or
mov
xchg
scas
mov
cld
gs
daa
and
clc
jg
inc
lock
decb
sbb
dec
push
call
jae
lods
sub
pop
inc
sbb
into
les
stc
jg
call
adc
clc
or
add
cmp
cld
cmpb
add
clc
pop
add
std
subl
add
sbb
fidivrs
push
aas
cld
in
cmc
aad
sub
aaa
mov
xchg
add
js
out
aaa
push
mov
push
lret
out
lret
sbb
adc
cmp
sub
sahf
sbb
cmpsl
sti
add
push
out
jle
or
out
ficoms
xchg
movsl
aad
cmp
fwait
insl
add
fidivrs
mov
xchg
mov
ljmp
test
sub
mov
pop
add
lods
push
ret
bound
out
or
add
pop
shrl
xchg
push
and
jmp
out
jge
add
or
sbb
jmp
iret
mov
mov
xchg
mov
push
sbb
scas
jecxz
punpckhwd
es
nop
lret
dec
cld
push
je
mov
cs
mov
out
or
add
stos
fstpl
test
add
xchg
mov
mov
iret
aas
adc
adc
add
and
jecxz
add
adc
in
pop
ficoms
push
popa
scas
decb
pop
adcl
inc
sbb
pop
sub
ficomps
jecxz
and
sbb
xchg
jne
xchg
push
test
pop
add
adc
dec
inc
or
shll
sarl
imul
jnp
add
mov
jae
rcr
sbbl
jge
add
and
xchg
xorl
cwtl
add
hlt
add
cmpb
pop
xlat
cmc
aas
sbb
xchg
lea
cld
test
mov
sub
cmp
std
mov
cld
in
cld
scas
movntps
jp
cmp
mov
cld
decl
stc
xor
pusha
cmp
push
jo
les
fidivl
in
cmp
add
mov
xchg
outsb
ret
outsb
jg
jl
sbb
add
add
jnp
jp
fwait
cld
in
stos
jp
push
jecxz
mov
or
pop
out
dec
outsl
inc
lock
push
repz
push
jmp
mov
daa
out
clc
push
xchg
and
mov
xor
xchg
mov
add
out
dec
adc
inc
add
gs
xor
add
jp
ss
mov
sahf
call
loopne
inc
fsincos
mov
jmp
pop
enter
mov
xchg
xchg
out
sbb
push
test
nop
inc
add
arpl
xchg
push
test
notb
fsincos
push
add
mov
add
sti
push
icebp
cmpsb
add
push
add
sti
sbb
add
xlat
test
leave
jno
adc
xchg
sti
call
ja
jae
loope
punpcklbw
arpl
mov
jb
dec
and
in
mov
mov
outsb
add
push
push
dec
clc
icebp
or
jecxz
loope
inc
dec
adc
inc
add
dec
clc
bound
notl
adc
loopne
mov
dec
push
cmp
dec
add
rclb
mov
inc
in
adc
adcb
ja
xchg
mov
lahf
adc
es
jmp
mov
clc
pusha
inc
adc
test
push
cmp
jge
jp
jge
sub
cld
incl
jmp
jns
clc
jo
or
jne,pt
or
inc
and
mov
test
repz
pop
or
and
push
aam
mov
xchg
mov
clc
jnp
mov
inc
movsb
jns
cld
sub
mov
or
clc
add
cmp
sbb
mov
cs
xchg
xor
add
add
jle
out
jle
mov
inc
push
sbb
jl
jle
orb
outsb
inc
fcomps
es
push
out
cmp
es
push
out
clc
sbb
and
es
add
sub
push
fidivrl
adc
add
pop
loop
repz
jl
mov
fmuls
lcall
add
add
je
ret
imul
outsb
cmp
inc
add
leave
push
sub
popf
add
xchg
aas
enter
cwtl
test
fdiv
add
psubsw
push
add
cmpsb
call
dec
cmp
test
pushf
inc
sarl
repz
cld
cmp
in
fs
or
add
jns
jb
aaa
subl
push
shrl
push
add
sti
push
add
cmp
add
sti
push
je
jle
lldt
pusha
test
adc
cld
add
lret
sbb
mov
scas
inc
cld
fcmovb
lret
loopne
lcall
cltd
lcall
push
adc
fldenv
add
sub
inc
movb
add
add
push
mov
xorl
dec
mov
push
and
add
pop
add
and
push
lahf
push
dec
loope
orl
dec
clc
pop
pop
mov
mov
add
jg
add
insl
cmp
mov
add
jl
lock
jg
outsb
std
jbe
mov
cmp
lds
fdivrs
fsubrl
or
add
add
add
scas
pushf
vmwrite
clc
clc
insl
add
xorl
pop
aad
cmpsl
call
jo
test
jo
xchg
mov
add
clc
outsl
cld
jl
jl
or
dec
data16
gs
gs
out
mov
incl
pop
jp
inc
outsb
dec
mov
and
adc
in
clc
jnp
in
add
clc
xchg
jae
stc
adc
hlt
push
out
loopne
out
add
mov
fwait
adc
test
add
fldl
clc
xchg
test
popf
sub
jb
out
clc
push
sub
fidivrl
push
out
icebp
enter
sbbb
jbe
cmpl
aas
and
aad
jl
aaa
fwait
je
movsl
xchg
inc
add
in
add
cld
mov
andb
je
cmp
mov
std
sub
sti
add
ljmp
rolb
xchg
out
jp
or
cmpsb
push
or
add
gs
inc
cmp
out
or
add
jp
cld
dec
sbb
jmp
mov
push
shr
push
add
xor
std
imul
add
add
icebp
cmp
lods
add
out
jno
inc
jp
pop
fcmovu
add
cmp
jle
lcall
mov
cmp
jmp
jae
fimuls
mov
sbb
sar
xor
outsb
add
ds
jnp
sub
ret
push
adc
shld
add
and
decl
add
adc
mov
fiaddl
setne
call
incl
cmp
add
incb
sbb
push
addl
stc
jge
clc
insl
ja
les
clc
xorl
and
outsb
cld
test
push
cmp
loope
lods
cmp
ja
sub
or
mov
out
jbe
jnp
repnz
add
repz
in
and
clc
pusha
js
repnz
cld
or
hlt
mov
sbb
jg
lock
dec
clc
sti
push
jg
push
sbb
test
popf
sbb
movsb
stc
jle
outsb
std
clc
clc
mov
in
push
outsb
mov
mov
cmpsl
orb
push
cmc
ds
add
cmp
pop
xor
push
push
cmpsb
jle
addb
add
add
add
add
jg
movsb
mov
push
out
clc
daa
out
clc
xchg
cltd
sbb
jno
nop
mov
or
adc
add
or
stos
xor
inc
popf
push
out
mov
jl
adc
icebp
mov
xchg
les
push
bound
fsubrs
inc
out
test
add
add
add
mov
cld
add
fldt
push
or
jmp
push
sbb
out
mov
add
out
or
jmp
sub
cmpsb
or
addr16
xchg
nop
sbbb
pop
add
xchg
je
dec
je
insl
std
call
lock
cmpsb
sti
pop
add
sti
hlt
or
ret
add
outsb
out
add
push
test
fcompl
cmp
test
add
push
cmp
loope
aas
fs
pop
cmp
adc
add
jmp
add
loop
orl
sbb
sbb
mov
push
loopne
xchg
mov
out
js
jge
sbb
test
fdivrp
adc
or
mov
dec
add
aam
sub
fdivrs
xorb
clc
leave
jno
mov
jno
test
scas
stos
pop
out
cmp
xchg
fcmovnb
scas
mov
xor
jge
push
mov
ss
adc
mov
push
test
mov
dec
lcall
cs
mov
mov
int
add
lock
clc
pop
orb
cld
or
clc
into
int3
pop
clc
dec
hlt
mov
mov
mov
lock
xor
push
adc
adc
mov
faddl
aaa
or
push
ljmp
xchg
xchg
adc
stos
xchg
inc
imul
add
xchg
mov
add
add
add
decb
jns
jle
or
cmp
ljmp
fiaddl
add
in
ret
shll
pop
dec
cmp
gs
call
pusha
cmp
xlat
adc
data16
je
movb
push
jmp
push
jnp
movsb
ja
clc
xchg
mov
push
jp
sti
jmp
sti
push
or
add
jg
insl
jae
int3
dec
or
stos
jp
pop
ljmp
testl
arpl
jl
repz
inc
sbb
insl
jle
push
xchg
mov
repz
sti
push
test
mov
cld
sub
jbe
std
call
sti
add
stos
into
jecxz
and
incl
cld
sahf
pop
mov
leave
outsl
call
sub
gs
arpl
xor
inc
or
jp
outsl
cltd
testl
mov
mov
rcll
add
adc
xchg
leave
imul
add
add
xor
inc
inc
inc
dec
popa
or
add
test
inc
bound
stc
add
add
mov
test
lods
or
sbbl
mov
bnd
cli
insl
cld
dec
test
cmp
test
outsb
add
clc
insl
xchg
push
mov
jle
data16
xchg
ss
clc
insl
jg
lock
inc
fdivs
or
jnp
or
sbbl
clc
jo
jb
insl
cld
sar
cld
incl
clc
in
sbb
fwait
sub
sbb
push
arpl
adc
dec
or
push
xor
jbe
outsb
dec
pop
lea
hlt
je
lret
out
xor
decb
mov
push
outsb
xor
mov
hlt
jl
into
mov
mov
data16
lcall
jbe
sub
inc
int3
es
add
push
out
js
in
add
jne
pushf
mov
pop
push
clc
push
pop
dec
inc
scas
out
clc
push
mov
xchg
add
push
lahf
loopne
mov
insl
pop
jo
jmp
cmp
fisubrs
sub
push
mov
jb
fnsave
pop
mov
and
bound
arpl
lret
cmp
std
shlb
add
add
add
sti
arpl
bound
xchg
fstpl
ja
jg
lods
mov
loope
test
xor
jmp
subl
lcall
add
test
mov
pop
pusha
inc
dec
or
pushf
dec
add
xor
movsb
scas
lods
jmp
add
icebp
movsl
inc
in
jl
sar
movsl
inc
hlt
mov
movsb
rorb
cltd
and
hlt
push
roll
lahf
pop
sti
rorb
outsb
pop
push
test
xchg
push
cld
add
hlt
sbb
shll
inc
fsubl
sti
inc
loop
pop
mov
mov
roll
iret
stc
jmp
or
adcl
mov
sti
sar
inc
dec
cmpl
add
test
sti
ret
ds
push
xchg
mov
mov
dec
test
andl
stc
cld
mov
in
mov
adc
dec
cmp
ret
jb
vmovshdup
jge
out
cmp
mov
add
adc
jge
clc
mov
jle
jmp
clc
test
out
clc
cmp
mov
push
cmpsl
add
and
hlt
jne
mov
fisubrs
add
pop
out
jne
sahf
jle
ljmp
fwait
cmp
add
push
pushw
xor
fidivrl
sbb
add
lods
in
mov
pop
leave
inc
jbe
test
push
jo
add
mov
mov
out
jb
add
aaa
cmpsb
add
xlat
xchg
lods
into
mov
insl
dec
cmp
out
clc
or
add
popf
test
jmp
inc
adc
jb
fwait
inc
mov
inc
mov
loope
movsl
jo
imul
xlat
pusha
cld
call
data16
bound
arpl
bound
sbb
mov
add
arpl
bound
ficompl
jae
jg
les
jo
imul
mov
jns
xchg
scas
jmp
mov
dec
or
mull
mov
add
sahf
inc
in
je
shr
popf
inc
hlt
and
or
and
addl
scas
dec
cmc
mov
add
add
add
add
ret
add
addr16
sti
rcrb
outsb
push
mov
icebp
cmp
adc
roll
inc
fcompl
sti
inc
adc
cmp
add
adc
loopne
andl
sbb
add
sar
inc
push
cmpl
cmp
orb
ret
mov
data16
dec
stos
mov
xor
mov
out
orb
clc
mov
in
dec
test
xchg
pop
cmc
cmp
aaa
ds
and
add
sarb
xorl
sahf
add
inc
sar
clc
jge
test
es
fs
out
dec
pop
jg
int3
jge
test
in
add
pop
xchg
add
inc
inc
inc
and
outsl
in
int3
out
adc
adc
push
jmp
outsb
fsubs
rolb
mov
clc
xchg
imul
outsl
out
ret
inc
sub
cmp
push
outsl
ds
sub
mov
push
inc
or
add
pop
fs
add
outsb
out
inc
daa
into
ret
into
ret
mov
inc
aas
add
arpl
nop
adc
ljmp
dec
xor
ss
xor
add
and
jb
xchg
fpatan
bound
sbb
ret
dec
stc
jg
fistl
jl
inc
shll
mov
xchg
dec
popf
jg
in
js
jmp
inc
test
cld
xchg
inc
xchg
jl
inc
sahf
cmp
sub
call
jmp
sahf
aaa
add
sbb
add
stc
call
xchg
jne
mov
sbb
mov
dec
push
icebp
add
xlat
out
mov
pop
lods
sbb
add
stc
jmp
ja
popa
sbb
add
add
add
add
in
and
loop
cld
add
xchg
dec
add
pop
mov
mov
lcall
or
xchg
mulb
shrl
cmp
add
outsl
stc
inc
clc
popa
jnp
fdiv
mov
call
and
xor
jge
popf
idivb
in
aad
aaa
clc
jge
dec
add
call
in
cmp
js
jge
inc
mov
inc
loopne
inc
sbb
addr16
mov
mov
add
mov
mov
subl
xor
adc
cmp
sarb
fwait
push
lret
mov
icebp
aaa
pop
ljmp
pop
out
jl
out
clc
xchg
add
add
sbb
mov
imul
shll
in
ljmp
clc
push
loop
movsl
insb
fwait
je
adc
cld
jbe
cs
or
jecxz
jl
push
sub
xor
push
jmp
jl
xchg
out
icebp
lock
mov
xor
xor
lret
pop
cmpsb
ret
add
out
jl
jle
cmp
cld
lahf
jmp
insb
xchg
punpckldq
push
xor
xchg
dec
in
out
aaa
arpl
aaa
xor
clc
jmp
push
test
sub
mov
sbb
sti
push
shll
add
ss
cli
inc
push
xchg
dec
inc
add
or
data16
hlt
sti
jo
pop
xchg
sti
xchg
pop
rcl
cmp
dec
or
xor
pcmpeqw
xchg
add
or
adc
loop
add
push
or
push
unpcklps
out
clc
jmp
cmp
lea
fstpl
push
mov
insl
addl
ds
sub
sub
adc
nop
cmp
scas
insl
clc
mov
xor
insb
sub
add
or
stc
dec
lret
push
mov
adc
or
data16
lret
pusha
daa
call
mov
jp
inc
adc
incl
in
mov
or
jg
jnp
cli
jb
mov
cld
incl
adc
mov
or
std
dec
add
fnstsw
cld
sti
mov
push
add
cld
clc
out
sub
jp
aam
jo
jp
jp
pop
xorl
mov
shl
test
outsl
or
test
mov
fdivs
mov
clc
aas
jns
test
push
lcall
push
pop
push
aam
out
int3
push
xor
les
mov
mov
pop
ss
add
fwait
pop
and
push
push
adc
in
push
or
loopne
add
push
cld
push
mov
hlt
push
push
push
in
push
jb
in
testb
dec
dec
aam
mov
dec
les
popa
dec
mov
pop
test
dec
and
mov
sbb
mov
adc
push
ret
add
add
cmp
add
add
int
add
lods
sub
mov
pop
lret
lods
inc
pop
lret
sbb
jnp
bound
jae
daa
call
fwait
dec
lds
jae
push
es
mov
fsubs
sbb
fwait
dec
std
and
daa
bound
push
jl
xchg
push
inc
push
add
test
pop
mov
sbb
popa
jge
clc
push
adc
sti
push
lret
sbb
add
cmpsb
int3
pop
push
lcall
add
not
mov
sbb
movlhps
cmp
mov
dec
mov
mov
outsl
addl
dec
call
mov
rorb
ret
fsub
in
adc
dec
mov
loopne
cld
sub
incl
mov
xchg
testl
std
filds
mov
mov
push
xchg
jnp
clc
jae
mov
dec
call
mov
xchg
mov
int
jns
lock
sar
cld
clc
sub
lods
mov
lret
xor
mov
sub
jns
dec
add
push
xorl
dec
mov
mov
xlat
outsb
cld
out
xor
xor
jge
wbinvd
jge
orb
test
lahf
stc
aaa
cld
jnp
stc
test
aaa
cmpb
jle
adc
and
cmp
sub
ljmp
inc
gs
mov
cli
jl
bound
lock
cmpsl
cmpsb
out
pop
mov
ja
push
jge
sbb
movsl
jge
push
adc
mov
push
jge,pt
shll
jecxz
jp
cmp
sbb
xchg
and
cmp
add
push
dec
push
mov
stos
xchg
and
jne
outsl
das
sbbb
mov
sbbb
cmp
test
fstp
sti
jo
mov
loope
enter
sbb
add
add
add
mov
enter
in
out
loop
in
pop
test
mov
test
movsb
cld
dec
andb
shl
cmp
lahf
push
test
shlb
imull
ss
jb
es
mov
jo
ret
in
adc
test
mov
inc
pusha
test
sub
testl
and
jge
les
inc
cmp
lcall
stos
xlat
sti
cltd
push
mov
jge
movsb
inc
test
sub
loope
lcall
push
movsb
insl
and
sti
cltd
push
addl
out
or
ficompl
lret
pop
dec
dec
push
mov
pop
add
or
fstpl
fnstsw
add
outsl
cld
clc
cmp
outsl
cld
pushl
and
lret
cmp
mov
lret
sub
mov
jmp
arpl
dec
jae
lock
cmpsl
in
or
popa
push
inc
mov
clc
pop
outsl
cld
xchg
testb
adc
add
in
mov
add
add
pushf
and
dec
das
xchg
add
cmc
jnp
hlt
test
imul
push
push
add
mov
mov
sti
push
out
ja
out
or
aas
clc
xchg
sub
jbe
sbb
ss
loop
clc
push
mov
add
push
pop
inc
and
lret
lret
popfw
add
pusha
out
add
pop
daa
sub
push
mov
jns
insw
pop
fmuls
out
out
gs
sbb
adc
call
fidivrs
jae
bswap
imul
dec
jae
pop
out
test
lcall
mov
or
fs
loopne
in
pop
clc
mov
sti
push
in
inc
cmp
add
add
add
add
dec
loope
push
push
mov
shl
popf
push
add
add
xchg
jg
inc
cmc
call
push
test
and
int
aas
sysexit
stos
push
lret
ja
mov
movsl
and
adc
push
jmp
notl
addb
pop
cli
add
pop
js
cltd
pop
jae
fnstsw
cltd
mov
sbb
dec
call
mov
cwtl
and
push
xchg
outsl
or
and
cmp
idiv
fisubrl
push
imul
adc
lcall
les
jns
pop
mov
push
ret
int3
in
inc
das
dec
mov
or
push
or
scas
insb
cli
push
cmovb
or
idiv
loope
xorl
fdiv
mul
sarb
inc
adc
testl
and
test
fcomps
clc
outsl
add
aad
mov
ljmp
arpl
xchg
clc
jno
hlt
imul
mov
cmp
mov
out
sti
jge
lock
mov
add
outsl
cld
xor
cs
clc
insl
cld
test
jle
jge
pop
out
clc
outsl
hlt
nop
ss
pop
loopne
nop
adc
xchg
mov
insl
enter
add
push
out
scas
pop
push
push
and
inc
fmuls
jg
cmp
ret
ret
add
mov
clc
arpl
mov
inc
int
jp
add
push
jns
insl
adc
add
outsl
in
xor
fsubrp
pop
lds
aam
outsb
jp
negl
dec
or
test
xchg
inc
cmc
lods
leave
dec
jb
adc
in
pop
int
inc
or
stos
cmpsl
enter
cltd
mov
gs
fstpt
icebp
stos
call
jmp
add
mov
add
je
jbe
js
in
xchg
ljmp
add
jae
out
adc
xlat
out
out
xor
out
js
or
addr16
push
jle
js
clc
decb
test
adc
dec
push
xchg
or
mov
orl
enter
add
ficoms
xorl
clc
push
adc
call
add
add
add
rorb
das
xchg
testl
and
sar
test
pop
jge
seta
lea
call
rcl
cld
test
push
jge
das
cmp
test
idiv
mov
aam
mov
or
push
adc
decl
ret
cld
ljmp
out
sti
add
inc
test
xchg
cmc
iret
js
ret
cld
ljmp
mov
sti
stc
push
js
cmp
lahf
int
daa
mov
cld
jl
arpl
cli
outsl
sbb
shlb
xor
jns
xor
xchg
aas
or
add
push
jns
mov
fstps
adcl
fidivl
inc
xor
mov
lea
or
shrl
shrb
pop
loope
mov
outsl
testb
sub
jne
fldcw
add
outsl
stc
testl
loope
mov
push
ds
mov
pop
in
addb
shl
daa
push
movsb
addr16
add
mov
insl
cli
xchg
push
ds
loope
aaa
mov
jmp
inc
mov
lret
mov
dec
lret
lods
test
lret
cmp
insb
jl
lock
andl
mov
jb
pop
inc
xorl
mov
test
cwtl
or
add
dec
pop
or
ds
jbe
jae
add
clc
inc
int3
mov
dec
xchg
inc
stc
orb
loop
clc
push
adc
xor
jb
push
cli
pop
insb
in
cmp
neg
addl
inc
mov
jmp
pop
sti
sbbb
inc
adc
call
push
fdivrp
test
roll
inc
add
shl
jmp
fdivrp
test
sti
sbbb
inc
push
movsl
inc
cwtl
push
lahf
call
adc
cld
test
dec
sti
subb
addl
dec
pushf
sbbl
jmp
test
dec
sti
cmp
jnp
mov
mov
out
push
je
jae
sub
test
push
add
ret
add
rorb
add
roll
test
jae
rorb
add
inc
movsb
mov
enter
leave
inc
xchg
les
inc
jg
or
add
test
dec
addl
stos
jno
lods
out
or
clc
jnp
sub
jnp
xchg
push
mov
push
pop
leave
add
insl
dec
pop
push
icebp
jp
cltd
sub
jnp
jb
lea
mov
call
sarl
cwtl
stos
jp
xor
pop
pusha
mov
cmp
cmp
outsb
dec
fbld
stos
jp
adc
sub
pop
insb
enter
dec
lahf
into
jno
nop
cwtl
sub
jp
rolb
std
pop
push
mov
jmp
add
add
add
add
xor
cwtl
ljmp
cltd
mov
es
sti
mov
sarl
push
mov
jl
daa
cltd
mov
testb
test
dec
lds
sti
insb
push
pop
orl
subl
or
cmp
sahf
sbb
jb
sti
xchg
cmc
fwait
dec
xchg
aaa
dec
jae
cs
jae
je
sti
jb
mov
dec
bound
pop
dec
mov
in
inc
push
push
cli
jp
mov
icebp
insl
jne
dec
adc
test
addl
jne
pop
imul
sarb
std
sbb
xchg
hlt
mov
bound
test
dec
push
addr16
jnp
add
popf
cmp
lret
mov
dec
and
add
add
add
add
mov
sub
sbb
dec
lock
lret
es
mov
xor
test
jnp
push
mov
and
clc
ds
cmp
sti
jae
jns
pop
ret
inc
decb
jns
test
and
rep
pop
mov
mov
dec
scas
mov
scas
into
out
inc
cmp
jnp
das
jno
mov
in
push
clc
test
fs
jl
nop
jl
nop
aas
add
jae
xor
sub
xchg
add
scas
mov
inc
jae
les
ds
xchg
sub
pop
jno
push
gs
sti
fwait
es
pushf
sub
loope
mov
stc
lahf
push
mov
add
push
aam
fcom
mov
push
outsb
xor
inc
sti
fwait
es
jp
sbb
sub
iret
mov
mov
jbe
pop
ljmp
push
xor
dec
xor
fists
sbb
jne
mov
xor
sarl
outsb
mov
cltd
cmpsb
out
xchg
popf
call
fstpl
add
add
add
add
pop
out
call
adc
fdivl
divl
add
popa
push
dec
fwait
xor
push
jge
pop
xchg
mov
bound
inc
test
cltd
inc
std
rcl
mov
jns
stc
out
xchg
aam
jbe
call
cld
lret
out
test
or
cmp
lcall
jb
repz
add
xchg
inc
popf
jns
sti
jmp
int3
into
xchg
push
gs
mov
or
jns
xor
adc
fisubrl
test
das
add
popf
jne
ficoml
mov
addl
dec
mov
dec
push
push
in
les
push
mov
lret
push
imul
jne
xchg
jne
loope
add
add
add
add
inc
sbb
lea
jmp
dec
lea
in
mov
dec
imul
aas
push
jae
sarl
jl
lret
mov
repz
test
nop
xchg
popl
push
or
into
gs
scas
xchg
xlat
sbb
aas
cmc
jg
fmuls
xchg
add
mov
ljmp
add
pushl
hlt
test
inc
popa
inc
jo
lret
gs
ret
clc
aas
cld
dec
jge
cmp
aas
int3
test
push
and
scas
dec
out
mov
push
out
lds
jae
pop
mov
add
mov
lahf
mov
jle
in
stos
inc
add
push
xor
pop
sub
pop
fwait
jle
in
stc
notl
mov
or
mov
mov
std
mov
adc
rolb
out
test
or
lock
out
imul
jb
sub
leave
inc
mov
jmp
jle
push
xor
leave
add
pop
mov
xchg
sub
pop
stos
notl
test
dec
dec
clc
jmp
sti
push
test
dec
clc
jmp
js
push
pop
std
fcoms
sti
mov
imul
fdivr
ret
ljmp
call
call
jnp
clc
jmp
out
inc
clc
decb
pop
pop
fs
movsb
xchg
aam
push
dec
lea
sbb
add
popf
int3
in
in
adc
orl
in
out
testl
movsl
shlb
mov
mov
xchg
imul
inc
adc
out
jmp
inc
xor
out
outsb
cmp
jnp
and
xchg
sar
lret
loop
xor
loopne
add
testl
add
ljmp
loop
je
mov
jns
fcoml
jnp
or
ds
mov
jnp
add
jno
inc
call
mov
out
scas
outsl
clc
jnp
add
mov
jnp
enter
lret
out
in
outsl
clc
jnp
add
inc
rcrl
jne
repnz
js
add
inc
and
cmpb
jl
xor
add
std
rolb
inc
add
jnp
enter
lea
aad
lock
mov
add
leave
jnp
pop
je
shl
pop
jnp
xor
dec
pop
shrl
push
adc
and
xchg
mov
ljmp
add
push
sti
stc
mov
clc
add
mov
jo
imul
out
setle
pop
mov
push
loop
xchg
jmp
xor
sbb
andl
xchg
and
fwait
bswap
push
int
outsl
push
out
mov
mov
jmp
cmp
jae
sahf
mov
inc
sbb
sti
cmp
out
dec
dec
clc
push
adc
test
xor
jb
mov
les
insb
push
lds
fidivrl
add
hlt
addl
dec
sti
push
add
jno
mov
adc
clc
bound
flds
xchg
pop
xor
add
add
dec
in
jo
jb
shrb
add
xchg
incl
mov
sbb
pop
add
add
add
add
leave
sub
inc
xchg
mov
add
clc
mov
adcl
roll
jmp
adc
adcl
shll
push
addl
inc
or
adc
mov
ret
adc
into
in
adc
push
lret
mov
ret
test
int
pop
jecxz
add
sbb
add
cmp
clc
mov
adc
cmpsb
les
cmp
cld
ss
lret
clc
mov
cmp
popa
pop
mov
repz
or
test
sub
or
mov
adc
je
cld
decl
dec
repz
sarl
repnz
shl
pushl
icebp
push
or
jmp
jne
add
ja
add
and
xor
xor
adcb
cld
dec
inc
jno
pop
loopne
aas
pop
out
movsb
push
pop
aad
sbb
jp
sub
jmp
ljmp
add
ret
and
jp
push
cld
jp
icebp
jg
push
out
adcl
cmpsb
repz
ljmp
mov
pusha
add
add
add
add
push
outsb
addb
add
es
pop
out
clc
sub
add
push
mov
js
mov
add
out
fildl
pop
add
jle
adc
add
push
add
lcall
jp
call
adcb
out
inc
ret
ret
stc
push
push
or
clc
jmp
hlt
sarb
add
adc
ja
mov
inc
clc
jmp
adc
jbe
jmp
xchg
ret
mul
jb
fsubrp
sti
push
test
cmp
rolb
add
loopne
mov
inc
sbb
jbe
adc
push
inc
cmc
out
mov
pop
or
jne
add
sub
addl
test
push
adc
pop
sti
sbb
sub
clc
call
ret
sbb
sbb
clc
call
test
add
scas
jnp
mov
xor
ljmp
or
xorb
cmp
xor
clc
in
std
and
sarb
adc
jno
add
mov
or
mov
je
lock
sub
mov
inc
call
orb
movsl
int3
dec
or
cld
call
jp
fbstp
jne
dec
inc
xchg
inc
dec
adc
psubw
add
sub
lods
out
clc
xor
xchg
test
push
lds
mov
jl
pop
add
push
out
les
dec
lea
out
xor
aaa
xor
aaa
inc
push
fwait
jl
out
jl
push
dec
jp
xchg
cli
mov
movsl
lea
insl
mov
pop
out
jnp
jnp
sbb
leave
inc
fiadds
sti
push
outsb
jle
pop
out
cmc
cwtl
bound
push
cmp
pop
mov
cmp
je
sub
xor
sbb
jae
jno
jmp
sub
inc
notl
out
sti
push
add
push
shl
mov
xor
cmpsl
addl
sti
aas
adc
aas
aad
imul
push
add
sti
filds
sti
push
lret
xor
xor
jb
jle
out
inc
clc
jmp
add
add
add
out
jb
mov
sti
push
mov
jne
sub
mov
repz
push
aas
dec
fidivl
cltd
or
aas
clc
addl
jl
dec
dec
addl
adc
add
mov
call
mov
xchg
mov
inc
mov
adc
mov
add
add
add
add
push
dec
push
push
mov
notl
push
aam
loope
add
adc
add
orb
idiv
and
hlt
push
inc
enter
mov
testl
jbe
jge
clc
test
clc
jne
pop
dec
insl
lret
ja
pop
jmp
cmp
jns
in
jg
push
mov
out
add
shlb
insl
add
aaa
in
jmp
or
cld
mov
ss
cmpl
dec
or
mov
arpl
loopne
push
clc
out
mov
add
out
cld
jp
arpl
mov
out
sub
jno
mov
dec
arpl
jnp
clc
cmpb
mov
jns
repz
add
add
add
add
add
sbbl
push
ljmp
ds
jle
ds
orb
jb
inc
xor
xchg
push
xor
gs
sti
xchg
es
sbb
sub
adc
arpl
psubsw
or
or
lock
sub
jp
jb
pop
push
loope
cmp
sbb
arpl
pop
roll
ret
add
cmp
pushl
inc
leave
add
cwtl
sub
clc
sahf
sbb
clc
pop
add
mov
clc
jbe
xor
outsb
fstpt
jae
jbe
clc
fs
clc
dec
fcmovne
test
clc
mov
out
test
clc
push
sbb
and
ds
adc
outsl
cmp
and
pop
aas
dec
pop
popa
dec
stc
out
lret
dec
aas
clc
bound
adc
add
cmp
lret
outsb
lea
push
xlat
orb
in
ljmp
cmpl
sbb
inc
mov
fimull
test
addb
mov
xchg
mov
add
add
add
xchg
xlat
insb
add
repz
fisubs
test
out
mov
idiv
aam
test
fs
sbbb
test
mov
lcall
clc
fs
out
pop
pop
clc
jnp
pop
cmpl
mov
test
pusha
dec
jge
push
stc
xchg
jl
sub
les
addr16
pop
dec
subl
mov
clc
jno
das
stc
aaa
aam
mov
adc
push
pop
mov
add
xlat
cld
jp
pop
test
mov
stc
notl
rorl
out
roll
std
push
and
ffreep
jecxz
outsb
cmp
pusha
je
add
cmp
mov
imul
xchg
inc
mov
pop
jnp
adc
sub
pop
jae
insl
xchg
cmp
jb
jp
pusha
cmp
fstpt
popa
pusha
jbe
into
pusha
inc
cmp
dec
push
cmp
cmp
insb
inc
stos
adc
mov
popa
adc
jae
lret
cmp
pusha
jle
andb
mov
addb
lock
cmp
loopne
push
push
add
out
add
mov
jae
jp
clc
bound
clc
into
push
xchg
mov
jb
test
or
loop
lods
or
xor
insl
out
or
mov
adc
outsb
orl
cmpsb
movsb
pop
push
lahf
jl,pt
add
pop
cli
mov
jp
adc
pusha
test
adc
add
add
add
scas
ds
add
sbb
push
add
mov
dec
mov
jmp
mov
mov
jmp
fincstp
mov
orl
dec
clc
mov
std
insb
adc
xchg
cmpsl
lods
hlt
addr16
mov
and
push
mov
aam
int3
add
adc
in
cmc
out
mov
sar
insb
sub
and
mov
inc
clc
and
out
sub
gs
inc
pop
jl
xor
mov
lock
fwait
mov
cld
sub
gs
cmpsl
js
ret
hlt
pop
xchg
xor
orl
add
rolb
jne
rolb
jne
jne
mov
out
decl
cld
jae
jg
mov
pop
test
lds
int
push
cld
clc
in
cmc
mov
dec
testl
ljmp
arpl
push
mov
sub
arpl
movaps
loope
inc
rcpps
jae
insb
mov
add
add
add
inc
or
sbb
sub
pop
lds
and
call
insl
ss
pop
and
out
mov
out
clc
stos
loopne
push
adc
pop
push
movsb
sbb
mov
mov
mov
inc
add
jp
pushl
mov
data16
call
push
or
scas
add
pop
or
sbb
cmp
sti
call
leave
pop
pop
and
xchg
mull
in
xor
pushf
dec
adc
cmp
xchg
jl
push
jo
aad
and
push
add
mov
adc
mov
clc
mov
jae
jmp
dec
fnsave
add
inc
add
and
xor
gs
add
pop
cltd
addb
sbb
xlat
popf
loopne
xor
jecxz
add
push
xchg
sbb
call
sbb
push
sbb
jmp
sbb
add
sbb
add
push
push
jnp
mov
test
popa
sbb
add
ljmp
jmp
mov
call
add
clc
cmp
les
test
mov
xor
cmp
clc
cmpsb
fsts
jae
cmp
cmp
out
iret
mov
sarb
clc
ds
clc
mov
cld
xchg
mov
xchg
cmp
xlat
test
add
clc
cmpsb
mov
clc
cmp
add
clc
test
sti
jno
jg
ja
adc
sti
mov
jmp
repz
cmp
cld
jnp
cmc
or
mov
pop
jno
scas
ret
jbe
mov
add
iret
pop
pushf
sbb
out
ret
mov
jmp
pop
ljmp
jno
or
mov
xor
inc
dec
inc
jmp
movsb
cmpsb
add
ja
mov
push
das
mov
pop
fdiv
ds
dec
mov
sub
or
fiadds
add
push
nop
mov
xor
dec
rcr
out
cmp
push
lea
rcrl
lea
ljmp
mov
pop
lret
sub
jl
test
mov
call
add
lret
sub
jl
dec
mov
lods
pop
cs
push
add
sti
fwait
aad
clc
push
add
sti
xchg
fsubr
xchg
jmp
push
xor
call
bound
jmp
sti
push
add
sti
int
lahf
mov
xor
add
rol
adc
add
mov
or
push
sbb
add
aad
add
adc
int3
in
int3
in
int3
adc
jge
dec
add
and
add
sub
mov
lock
xlat
add
iret
inc
add
daa
pusha
adc
sbb
mov
push
cmpl
gs
int3
gs
int3
in
fwait
in
in
sub
addl
add
add
dec
clc
adc
mov
out
mov
clc
cmp
jge
cmp
les
test
mov
scas
test
mov
dec
test
jge
test
push
into
clc
notl
mov
andl
mov
lods
jmp
inc
lret
mov
mov
xchg
and
xchg
jge
iret
and
adc
dec
test
push
dec
addl
dec
sub
push
adc
push
test
lcall
cmc
out
addr16
sti
add
fwait
sub
fwait
xorl
bound
dec
inc
bound
mov
fnstcw
jg
stos
testl
inc
pushf
mov
repz
add
add
add
add
sbb
ret
xlat
xchg
es
ljmp
out
cmc
pop
add
push
outsl
mov
inc
mov
mov
ret
pop
stos
inc
ret
pop
lcall
jno
jl
repz
enter
push
clc
push
cs
das
flds
popa
sub
push
sbb
divl
xor
hlt
sbbl
jb
imull
ret
jb,pn
xor
stc
push
xchg
fsubs
jl
inc
stos
lds
lods
xchg
loop
cmp
sti
sahf
test
lret
sbb
cmp
lods
cmp
cmp
inc
push
and
call
insb
add
xor
add
push
xor
adc
add
add
add
add
add
add
push
sub
aam
insb
es
inc
adc
notl
xchg
jne
enter
pop
clc
mov
jnp
into
push
push
pop
and
int3
movsb
lods
in
cmpsb
lods
jne
fincstp
test
inc
adc
fsubrs
adc
adc
dec
push
cmp
jp
hlt
pop
add
or
jae
add
jne
in
jns
cld
loop
lret
sub
cmp
inc
bound
lret
cmp
cmp
xor
jns
jae
sti
sar
cs
hlt
mov
pushl
jle
pop
aaa
cmp
fdivrs
sbb
mov
mov
cmp
cmp
cld
clc
cmp
add
add
add
add
cmp
cmp
les
mov
ret
pop
stos
inc
mov
arpl
dec
or
add
les
fistl
negb
sahf
testb
fs
push
out
add
out
and
cwtl
cmpsb
or
stos
faddl
clc
insl
cmc
add
push
insb
call
cltd
popf
push
test
mov
or
add
push
leave
jp
jge
loop
clc
in
jnp
jnp
add
lahf
fs
or
out
push
fadds
clc
lahf
movsb
jmp
imul
cmp
mov
pop
lret
lods
out
lret
cmp
ds
bound
ficoml
jmp
scas
adc
jmp
repnz
sti
loop
pop
mov
push
add
xchg
mov
pop
adc
jmp
cmp
nop
push
mov
nop
push
cltd
hlt
pop
insl
lock
add
jmp
push
adc
jmp
out
sub
sahf
cli
jmp
add
sti
xchg
push
or
cs
scas
sbb
inc
xor
inc
push
insl
adc
popa
hlt
mov
pop
adc
adc
or
mov
sub
add
adc
add
add
add
add
sub
lret
orl
test
out
and
aad
push
movsl
lods
inc
or
stos
mov
push
fstpl
stos
xchg
mov
sub
jmp
and
aam
int3
adc
xlat
int3
adc
push
jmp
sub
loope
mov
test
mov
fildl
jno
arpl
cs
or
jne
mov
mov
cmp
ds
xchg
hlt
lcall
je
add
cld
xchg
cmpsl
je
repz
cmc
ljmp
cmpsl
je
repz
cmc
call
mov
push
in
cld
test
add
cmp
mov
jnp
add
add
or
dec
pop
rcl
popf
jnp
inc
cs
orb
add
push
out
dec
and
mov
cmp
popl
xlat
cld
test
jne
icebp
pop
sub
int
rcll
and
popf
sti
dec
fstps
sbb
pop
iret
sbb
in
add
jecxz
or
sub
cmp
ss
sbb
add
xchg
cld
push
in
outsl
enter
adc
sti
fwait
dec
xor
int3
addr16
pop
cli
and
out
pop
inc
pop
pop
or
jmp
into
jl,pn
inc
sbb
and
test
test
outsl
scas
cmp
sti
push
test
fsubl
ja
cmp
sti
push
add
cmp
add
push
jae
jns
jmp
shll
inc
pop
jns
fmul
mov
gs
add
sti
and
dec
mov
sbb
pop
loopne
add
xchg
out
push
int3
ja
push
hlt
test
dec
mov
mov
mov
insb
push
sbb
in
push
or
sbb
add
popa
hlt
in
lret
add
pop
loopne
and
je
sbb
cli
add
lock
outsl
rorb
push
pop
orl
sar
mov
sub
push
mov
cmpl
insl
loopne
mov
jb
mov
add
bound
mov
cmpsb
mov
lods
repnz
lret
les
jmp
and
dec
test
add
hlt
mov
xor
into
mov
inc
clc
cmpsl
cmp
ja
mov
iret
pop
inc
test
clc
mov
cld
scas
insl
inc
ljmp
jp
xchg
aam
movsl
insb
call
add
inc
test
push
test
popf
jns
adcl
or
inc
in
int3
push
les
cltd
adc
out
add
repz
out
shr
out
loope
lcall
rcrb
or
lret
icebp
subl
dec
dec
js
in
add
out
jnp
pop
arpl
jg
out
in
mov
scas
sbb
add
xchg
pop
inc
pop
push
push
add
push
out
and
inc
sbb
sub
add
add
add
add
push
mov
lret
sub
mov
jl
adc
push
jb
push
mov
std
repz
insb
sub
movsb
dec
pop
clc
xor
add
sti
push
andl
push
mov
cld
push
add
outsl
sub
call
mov
push
jge
stc
xlat
xchg
jp
insb
and
jmp
xor
jbe
lock
jb
hlt
push
xchg
cwtl
jp
rol
sti
rorb
popf
pop
add
movl
ljmp
lock
and
push
add
push
xchg
mov
mov
loope
add
push
adc
jle
push
scas
mov
pop
add
loope
adc
ljmp
push
mov
add
daa
clc
incl
sub
mov
sub
decl
arpl
adc
sbbb
mov
mov
jmp
stc
push
clc
and
ficomps
lods
push
dec
popa
sbb
jne
sbb
out
popa
jae
xchg
jnp
xor
popa
sub
flds
push
sub
es
loop
xchg
fdivr
pop
push
add
sub
js
stc
sub
icebp
andl
jmp
ja
es
lcall
cld
clc
add
xchg
sub
inc
push
push
pushl
pop
popa
dec
pop
test
push
jo
pop
mov
out
jne
fidivrl
pop
rolb
clc
mov
hlt
jl
addb
outsb
lret
jmp
scas
sti
add
in
pop
and
lock
or
out
jb
out
or
sbb
rcrl
js
or
lock
mov
mov
pop
out
push
mov
in
add
mov
xchg
out
xchg
inc
sti
inc
pop
fadds
clc
adc
jbe
pushl
clc
add
cltd
push
movsl
dec
xchg
pop
clc
push
add
jmp
les
clc
mov
popf
pusha
fisubrs
repz
push
xchg
xlat
pop
pusha
aas
xor
imul
sti
xchg
dec
frstor
mov
sti
push
mov
lret
add
mov
test
cmpsb
push
clc
jno
jne
jmp
arpl
scas
stc
icebp
push
popa
mov
add
lret
mov
mov
iret
pop
mov
xchg
push
add
adc
xchg
mov
push
sbb
jbe
add
and
mov
lahf
cmpb
jnp
pop
push
push
mov
roll
inc
or
fsubl
test
adcl
js
sbb
mov
sub
adc
sub
mov
push
add
cs
mov
xchg
push
add
cs
dec
pop
ljmp
popa
mov
mov
mov
das
cld
out
xor
fisubs
popa
icebp
lahf
jnp
clc
das
cmpl
clc
das
cld
jl
sub
push
jl
mov
icebp
cmpsl
into
testl
add
add
andl
enter
mov
out
or
clc
cmpsb
jmp
loope
test
mov
mov
nop
jo
cld
pushl
adc
clc
push
outsl
pop
decl
cli
mov
add
call
out
or
xchg
mov
lcall
push
push
or
nop
sbb
ret
in
xor
cmp
add
push
pop
fsubs
mov
jnp
add
rorb
mov
sub
sbb
push
rorl
fadds
clc
pop
pushf
cmp
bound
clc
push
outsb
mov
pop
or
jbe
or
mov
xchg
push
add
je
adc
arpl
jmp
jl
jecxz
inc
pop
test
add
xchg
jo
push
add
adc
push
loop
add
das
and
insb
psrlq
pop
in
pusha
insb
pop
adc
sti
mov
add
shl
call
mov
pop
add
sbb
fdivr
push
add
push
xchg
shl
push
and
bound
xor
daa
outsl
pop
mov
iret
add
add
fimull
lods
jo
nop
mov
add
ljmp
add
cld
adc
push
faddl
mov
mov
fildl
mov
mov
mov
stc
push
sub
outsl
lret
out
mov
lea
lcall
mov
adc
cmpl
add
add
sbb
ret
clc
mov
adc
das
cmpsb
push
jo
push
add
sub
divl
js
clc
das
mov
jnp
ss
ss
popa
dec
dec
test
cmpsb
jecxz
mov
test
xchg
and
pushl
adc
add
mov
adc
das
test
mov
jg
add
das
test
cs
test
std
sub
mov
pop
mov
mov
push
out
fldl
push
popf
mov
xchg
outsl
add
add
pop
rolb
clc
mov
mov
icebp
pop
insb
add
push
stos
enter
add
sub
cli
push
mov
out
cmp
scas
add
push
out
repz
loope
add
push
stos
enter
add
xchg
sub
in
sbb
xchg
xchg
cmp
sbb
fisubs
sub
dec
mov
enter
jg
pop
out
cli
pop
pushl
push
pop
push
jb
push
add
jp
add
movsl
mov
cmp
frstor
add
push
and
add
add
arpl
adc
sti
mov
clc
cli
mov
add
add
add
add
xchg
jns
jo
pop
jb
sbb
insl
out
add
and
push
popa
mov
addl
jo
pop
adc
sti
xor
test
pop
adc
sti
cltd
mov
idiv
push
mov
xchg
es
pop
sub
out
or
mov
adc
add
xchg
adc
xchg
lahf
push
or
popf
scas
push
mov
sbb
or
jle
lahf
dec
or
fdivr
mov
jge
add
pusha
hlt
adc
addb
mov
add
fwait
scas
push
adc
fstl
mull
data16
rcll
mov
clc
ret
jle
or
add
add
add
clc
addb
push
pop
jp
out
iret
push
xor
test
adc
inc
mov
adc
or
clc
xchg
push
stc
lods
jbe
clc
mov
test
js
mov
mov
mov
repz
js
clc
jmp
add
cwtl
punpckldq
mov
add
add
add
jbe
adc
clc
cmpb
clc
push
jmp
adc
movsl
outsl
add
push
bound
pop
push
in
pop
and
xchg
cmp
test
xchg
inc
and
add
mov
lret
lock
addr16
dec
jl
push
jmp
pop
out
adc
adc
int
jl
pop
jmp
shl
sahf
aad
add
insl
adc
push
js
push
loope
push
push
shr
add
push
call
ss
popf
addr16
pop
jmp
push
jmp
repnz
push
add
xchg
add
dec
repnz
lock
push
jmp
jl
mov
sti
push
add
mov
jno
push
repnz
sti
push
add
cld
inc
icebp
add
push
mov
sbb
jmp
sub
clc
cs
lcall
rcr
sbb
incl
inc
in
inc
leave
aaa
dec
dec
mov
pop
add
cmpsl
lret
adc
fldl
movsb
mov
add
jbe
add
push
mov
stos
mov
add
popl
daa
inc
push
adc
loope
push
cld
add
test
adc
jnp
mov
push
sbb
push
cmpsb
xchg
mov
mov
jl
mov
add
push
mov
mov
daa
mov
dec
aaa
adc
mov
mov
daa
jge
sub
xchg
mov
mov
dec
adc
inc
and
jne
imul
add
add
stos
pop
xchg
mov
incl
std
mov
incl
test
or
jge
clc
cmpsl
and
mov
std
idiv
xchg
test
mov
incl
add
sar
lds
addb
mov
push
lcall
mov
fisubrs
push
push
push
out
insl
add
popf
cmp
jo
clc
fildll
out
insl
outsl
iret
iret
add
popf
and
jge
loope
jecxz
jb
mov
jmp
je
cmp
sahf
lods
add
or
rcl
add
js
je
sub
add
jb
push
aam
insl
popa
das
ret
and
nop
dec
sbb
add
lret
flds
clc
push
ret
push
mov
push
and
icebp
jne
outsb
mov
pop
adc
addr16
and
loope
sbb
mulb
push
mov
or
or
movsl
cmpsl
mov
and
cltd
push
loope
sub
jb
lret
push
jmp
cs
or
or
lret
sti
mov
cltd
nop
insl
in
push
add
sti
push
jmp
add
adc
jmp
cld
cmpsb
mov
pushf
ret
cwtl
mov
adc
rorb
cmp
mov
cltd
push
add
std
xor
fisubl
mov
sub
mov
incb
data16
leave
and
leave
xchg
adc
adc
mov
cltd
sbb
adc
add
adc
add
decl
sahf
lahf
mov
popa
push
cmpsl
adc
lahf
dec
lock
cld
out
ja
cmpsl
mov
popf
lods
out
and
add
mov
add
ret
sti
jns
add
inc
add
pop
loope
cld
in
mov
adc
cld
mov
or
aas
add
mov
scas
cli
js
mov
or
add
and
jp
sub
pop
jns
or
out
lods
push
mov
popa
mov
aad
nop
jo
add
jmp
mov
add
jmp
movl
adc
decl
adc
mov
jmp
adc
loope
push
add
and
jb
jecxz
jbe
gs
push
jb
xor
outsl
and
add
jne
adc
lcall
push
jmp
jo
pop
jmp
out
pop
add
xor
inc
aad
outsl
cmp
sbb
push
push
adc
push
jmp
add
jne
add
add
add
add
add
call
or
sti
push
pop
xchg
jae
push
jmp
shrl
xor
cmp
pop
ja
lds
jmp
mov
or
and
jmp
jmp
lret
icebp
pop
jo
les
jmp
sub
mov
sti
push
jmp
push
fwait
add
sti
push
pop
sbb
push
es
fstl
sub
mov
sti
push
pop
shlb
sbb
lds
int3
aad
lret
int3
lret
enter
add
call
add
push
divb
mov
inc
inc
rclb
sarl
xchg
out
pop
out
popa
adcl
jae
out
xchg
mov
add
popa
add
idiv
adc
jae
add
repz
loope
mov
push
add
lods
sbb
and
cmp
rclb
add
mov
add
push
lret
int3
clc
in
inc
push
subl
loope
add
inc
test
cs
dec
sbb
mov
xor
aaa
lret
sub
jnp
out
incl
dec
jnp
adc
stc
jns
sub
add
rolb
sbb
test
mov
shr
dec
lock
ud0
sbb
mov
add
jno
addr16
inc
mov
pop
test
pop
jae
jbe
clc
ja
push
call
push
xchg
outsb
and
add
lret
out
add
push
mov
into
iret
add
insl
sub
inc
ficoml
inc
add
fisubl
jl
and
add
xor
jne
into
xlat
add
popf
sbb
jne
icebp
jnp
sub
sbb
loope
dec
scas
inc
push
clc
push
xchg
adc
fucomip
adc
loope
aas
and
scas
and
add
clc
cs
and
cmp
jmp
lret
add
sti
push
pop
sub
fadd
xor
add
fadd
mov
adc
mov
jecxz
idiv
into
mov
sti
addb
and
cmp
clc
push
dec
or
sub
dec
bound
lock
daa
imull
adc
or
add
imull
lock
js
xchg
push
or
push
shrb
push
push
inc
aad
xchg
fcmovnu
fistpl
bound
xchg
and
add
pop
mov
sbb
xor
pop
push
lret
int3
push
mov
mov
andb
jg
popa
adc
dec
or
call
adc
or
roll
jecxz
add
sub
and
or
aad
jg
inc
push
clc
jmp
das
or
and
sub
adc
mov
add
cmpl
dec
pop
ljmp
ret
jnp
fcoml
ret
and
cwtl
add
clc
out
fcom
jge
ret
movsb
out
fists
icebp
xor
and
jp
cmp
cmc
movsl
jecxz
push
jg
lock
mov
movsb
add
xor
filds
jno
iret
fists
es
aaa
push
jnp
addr16
test
inc
jns
jnp
sti
test
fdivrs
add
or
push
sbb
popa
jp
add
test
sub
add
push
jmp
pop
clc
push
in
add
push
pop
push
and
and
jmp
shr
push
jmp
add
clc
pop
xchg
rcll
jmp
inc
jnp
inc
adc
push
jmp
idivb
sbb
out
mov
les
adc
push
jmp
mov
mov
jg
icebp
jmp
dec
add
jmp
add
lea
insl
mov
jmp
sti
push
pop
jo
xchg
mov
jmp
sbb
add
add
insb
loop
cmp
cmp
or
add
push
or
sti
add
pop
add
sbb
mov
fwait
jle
call
add
ret
les
test
cld
adcb
iret
aad
shr
divl
ja
cld
imul
pop
clc
pusha
cmp
out
mov
push
add
push
or
sti
cltd
test
jmp
test
add
add
add
ficoml
add
xchg
inc
adc
pop
pop
add
jle
roll
cmp
andl
xor
xchg
lea
add
sub
adc
pop
jg
pop
fdivr
call
pop
add
popa
addb
scas
adcl
lahf
fcmove
out
data16
mov
and
jle
pop
iret
adc
add
lcall
push
leave
hlt
push
clc
arpl
mov
sub
or
add
cmpsl
lahf
mov
popa
jno
mov
xorb
clc
out
ret
je
xchg
inc
sub
jl
dec
in
add
cli
or
xchg
and
clc
jle
pop
add
je
push
in
add
outsl
jne
pop
jno
sbbb
add
add
add
add
out
add
dec
jmp
xchg
cmp
out
add
imul
jne
lds
aaa
inc
shll
jge
mov
cmc
push
jmp
add
push
addr16
cs
xchg
addr16
push
jmp
sub
xchg
addr16
push
jmp
sub
and
add
clc
in
ljmp
pop
lret
jnp
addl
lock
push
jmp
cmpsb
cmc
push
jmp
insl
ja
or
aaa
jnp
push
sti
push
add
push
scas
jns
and
insl
xorb
test
push
adc
cmp
inc
adc
gs
ret
mov
push
dec
inc
clc
cld
mov
sub
add
adc
sub
pop
ret
push
add
addr16
add
mov
les
xor
les
fwait
mov
sbb
jbe
sub
push
call
mov
jmp
movsb
scas
push
adc
mov
insb
adc
and
adc
cltd
pop
pop
xcrypt-ecb
cmpsl
mov
inc
lds
pop
in
xchg
adc
add
aam
mov
fnstsw
dec
rcll
push
xchg
adc
mov
adc
add
pop
add
lods
in
out
xchg
ret
add
push
popa
mov
mov
fdivrs
push
popa
adc
push
mov
push
add
clc
je
or
rcrb
sub
cmp
inc
leave
cmp
cmp
cmp
xor
jns
jae
hlt
pop
loope
sub
out
lods
cmp
mov
jns
jae
hlt
test
mov
xchg
int3
fcmovb
lds
push
pop
xchg
mov
lock
fistpl
mov
out
add
lock
sldt
add
add
add
add
jg
or
out
js
add
int3
pop
adcb
adc
xchg
or
jmp
cwtl
adc
sarb
clc
push
jmp
inc
or
pop
addr16
mov
cs
cltd
test
jg
cmp
jnp
and
add
je
xchg
xchg
add
loope
xor
mov
jmp
add
add
add
jne
int
aas
punpcklwd
out
pop
mov
push
push
jmp
shl
mov
adc
aad
jg
iret
add
movl
and
out
mov
mov
daa
add
xchg
xchg
mov
xor
mull
outsl
pusha
jmp
push
push
push
pusha
test
push
jmp
cmp
xchg
test
les
dec
rol
lods
add
les
lock
sbb
mov
push
cwtl
add
sti
push
dec
roll
jmp
jbe
xorl
movsl
clc
fistl
loop
push
push
add
clc
add
movsl
mov
sbb
push
stc
jmp
jmp
ret
or
dec
fbld
and
clc
mov
lea
adcl
roll
add
add
add
add
push
fldl
pusha
sub
mov
ss
out
paddusw
xchg
int3
add
mov
iret
or
in
push
push
xchg
mov
clc
orl
add
xchg
adc
test
add
mov
test
add
or
add
hlt
jo
or
lahf
test
filds
sbbl
adc
in
adc
aaa
js
pop
xor
stc
mov
xchg
call
js
adc
add
add
divl
clc
scas
or
dec
popa
lret
cmpsb
jge
jmp
mov
cmpl
or
cmp
push
adc
out
jl
sti
xchg
test
loopne
repnz
lea
cmc
push
jmp
lds
cli
mov
jmp
js
cli
jmp
nop
dec
cli
into
test
and
lea
cli
jmp
add
lea
adcb
push
or
mov
lea
rorl
jno
jns
and
add
rclb
pop
jmp
stc
cmpsl
testl
add
add
lock
push
jmp
mov
jl
jne
lahf
stc
add
shll
cmp
jp
sbb
mov
sti
push
pop
pusha
add
adc
add
shr
mov
sti
push
push
inc
adc
inc
jmp
or
imull
adc
cmpsb
out
notl
add
add
add
xchg
mov
mov
pop
ret
lods
dec
int3
les
in
mov
dec
mov
lret
mov
out
adc
imul
sti
jns
add
or
mov
adc
clc
add
and
add
out
cmp
cmpsb
add
popa
rol
add
nop
mov
push
mov
aam
xor
or
inc
adc
or
mov
int3
je
cmpsl
mov
add
popa
add
cltd
shl
clc
sub
clc
add
movsl
add
rcrl
adc
lock
sub
subl
and
cld
mov
cmp
call
mov
clc
outsb
sbb
jp
add
add
data16
scas
push
fdivrl
and
xchg
loop
add
push
and
lock
adc
mov
mov
out
add
sti
ret
add
idiv
mov
mov
in
add
sti
ret
add
idiv
mov
add
sti
test
add
sti
mov
out
sbb
or
cmpsl
sbb
or
add
add
add
lock
dec
jecxz
xchg
and
xchg
xor
sbb
or
sbb
or
inc
sbb
or
inc
sbb
repz
pop
xchg
and
mov
orl
test
add
sahf
add
scas
sbb
add
stos
mov
jmp
add
add
add
loopne
sbbl
add
jbe
imull
cwtl
fcomi
ja
add
sti
jae
stc
cld
je
jmp
cmp
cld
imul
out
or
and
test
call
add
dec
jmp
in
add
hlt
test
ljmp
dec
in
clc
in
add
hlt
test
in
imul
add
imul
add
imul
add
add
add
add
test
add
imul
add
imul
add
ljmp
push
aad
out
add
sbb
mov
xchg
sbb
mov
cmpsb
sbb
fcoml
mov
loopne
test
clc
fdivl
jae
push
inc
add
sbb
hlt
clc
stos
xchg
mov
add
mov
es
lds
push
adc
add
data16
lock
inc
or
and
call
out
mov
mov
and
mov
loope
lret
int3
clc
xor
icebp
fs
mov
clc
jae
cld
dec
or
lcall
pop
jmp
jo
int
add
inc
stos
sbb
pop
add
jg
jg
xchg
cmp
test
cld
test
and
in
jg
clc
clc
std
add
add
add
push
mov
pop
in
cmp
and
pop
fnstsw
add
lret
push
cmc
jle
das
sub
fadds
add
popf
fnstsw
daa
sub
notl
jmp
into
out
bound
pop
loope
sti
xchg
icebp
out
push
push
add
sbb
push
jmp
xor
std
stc
mov
adc
cmc
testb
push
push
add
je
out
jmp
into
out
bound
pop
loope
jmp
icebp
out
push
add
icebp
imul
and
jge
add
xor
fisubrl
cli
adc
add
imul
test
add
mov
loope
shl
jmp
sbb
sub
or
in
push
sbb
ss
push
add
jg
or
cmp
xor
adc
cli
or
out
add
sti
fwait
or
repz
inc
jmp
sti
push
xor
add
fsubrs
xor
sbb
call
adc
cmp
sbb
sarl
call
adc
mov
xchg
pushl
and
jge
nop
cmp
xorb
jmp
aaa
add
sub
add
and
and
inc
popa
xchg
mov
push
fucomi
addl
add
add
add
add
cli
jl
fidivl
mov
xor
or
xor
add
jge
movsb
and
inc
and
add
clc
icebp
js
in
cld
test
mov
js
aad
cld
and
std
add
sub
addb
ds
sub
mov
and
std
add
cmp
pop
or
cld
test
pop
push
ljmp
cmc
sarb
add
je
mov
insl
in
aas
clc
jle
clc
clc
std
add
mov
or
clc
pop
jl
add
lea
test
cld
jl
stc
mov
cmp
into
hlt
scas
not
add
push
fsubs
sbb
pop
pushf
mov
and
push
jmp
or
push
jmp
cld
adc
insb
or
push
jmp
add
add
add
rclb
jmp
or
push
jmp
mov
xchg
dec
nop
or
sub
xorl
push
or
adc
push
jmp
or
xor
mov
push
mov
je
sbb
xchg
inc
repz
add
push
mov
out
push
stos
call
les
add
xchg
jge
add
mov
xchg
cmp
flds
push
les
add
notb
add
xchg
push
sub
loop
sub
dec
inc
push
push
cmp
lods
cmpsl
xor
pop
sti
push
add
mov
inc
je
clc
lods
jmp
inc
lods
jecxz
xor
fmuls
add
add
add
sbb
add
xchg
mov
imul
insb
cmp
mov
mov
pop
mov
adc
inc
mov
testl
call
dec
aad
mov
push
and
sbb
adc
push
and
insl
insl
inc
or
and
add
or
push
sahf
xlat
add
std
add
incb
decl
jnp
clc
std
add
xchg
cltd
fiaddl
test
loop
call
adc
push
xchg
fadds
or
mov
mov
clc
jne
lret
pop
stc
std
add
iret
std
jbe
or
jbe
add
icebp
into
inc
repnz
cwtl
add
sti
jb
pop
mov
push
clc
std
add
cmpb
stc
subb
jl
mov
add
ret
lahf
xchg
out
mov
sub
negl
std
pushl
add
adc
in
jle
std
out
jbe
cmp
mov
hlt
jl
imul
add
mov
push
mov
ljmp
repz
int
cmp
mov
or
out
adc
mov
lret
je
add
int3
cmpsl
push
jmp
stos
andl
stos
ret
sub
push
add
into
push
add
push
add
mov
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
cld
push
add
hlt
push
add
cli
push
add
lock
add
enter
test
idivl
jmp
imull
jmp
negl
pop
add
push
add
push
add
ds
cmp
mov
pop
clc
add
pop
clc
add
pop
clc
add
incb
clc
pop
out
push
clc
paddd
clc
pop
incb
clc
aas
ds
jg
sbb
incl
xchg
jmp
cmp
insl
jns
lcall
subl
jle
add
out
jl
mov
jl
loope
pop
or
or
fucom
or
add
shrb
jle
mov
jle
cmc
loop
inc
dec
insl
dec
push
add
jbe
and
ja
and
xchg
std
clc
std
jp
int3
or
inc
xor
add
jae
stos
int3
pop
mov
inc
adc
jp
adc
das
jae
iret
xchg
roll
xor
and
je
and
adc
jo
jl
add
mov
or
std
add
cld
mov
ror
in
add
data16
and
test
lock
loope
sub
push
jae
cmp
and
incb
jl
add
mov
push
jmp
jnp
jmp
clc
pop
xchg
mov
inc
mov
test
xor
add
pop
pop
outsl
movsl
and
xchg
mov
xchg
repnz
xchg
loopne
mov
xchg
fists
add
add
add
add
scas
call
popa
scas
out
loope
push
push
stc
imul
xchg
pop
jmp
sbb
fucom
ret
das
pop
jmp
jmp
mov
push
add
popa
dec
pop
mov
xchg
nop
imul
cmpsb
pop
mov
fiaddl
loop
fwait
or
loopne
sbb
pop
leave
mov
lret
ret
pop
shl
insl
add
stos
mov
cmp
fidivrs
cld
call
adc
rolb
adc
rorl
pushf
enter
jl
sti
push
add
int3
mov
jae
push
std
xor
jnp
adc
bound
cld
out
and
add
jno
sbb
in
mov
bnd
cmpsb
mov
xor
mov
add
add
add
add
lcall
fisubrl
and
sub
add
pop
mov
sub
lahf
adc
popf
movsl
add
sbb
cmp
lea
mov
int
data16
push
ljmp
imul
xlat
dec
lret
xor
clc
cwtl
cld
xchg
test
fdivrs
add
add
add
jp
cld
clc
js
and
imul
cld
xor
cld
test
lock
sti
gs
ja
std
jl
icebp
push
mov
popa
fimuls
clc
dec
jno
dec
push
lds
movb
adc
jge
icebp
jnp
stc
gs
cmp
push
movsl
adc
or
incl
clc
gs
incl
clc
in
fbstp
pop
lret
aad
scas
sbb
incl
push
or
jecxz
ret
add
xor
push
jmp
inc
xchg
aad
scas
fistl
incl
jecxz
cmp
iret
push
pop
repnz
lock
aas
add
int3
push
fidivrs
stc
jge
cmp
into
outsb
insb
mov
out
jle
sub
fistpl
mov
into
fisttpll
cmp
int3
mov
add
hlt
out
cwtl
mov
mov
push
sub
xlat
sub
test
add
test
mov
pop
mov
jmp
hlt
out
pop
add
mov
repz
out
cmp
fpatan
test
gs
add
adc
push
add
data16
cli
pop
xchg
push
ss
jle
push
test
pop
outsb
std
push
out
xchg
cmp
xchg
int3
mov
adc
out
jg
int
aad
in
push
and
punpckhdq
fildl
mov
mov
lcall
lret
shlb
jl
jmp
xchg
lea
add
call
push
ficoms
arpl
fstl
jns
or
xor
vmovdqu
call
and
pop
ja
call
cmp
or
add
jmp
loopne
testl
jge
inc
cmp
add
add
mov
xchg
out
imul
push
cld
clc
insb
sbb
and
out
int3
mov
mov
clc
subb
cli
ss
adc
jnp
adc
out
jge
out
add
andl
adc
and
jae
xchg
arpl
jge
in
jnp
stc
jne
std
jp
cmpsb
add
xor
add
push
rcr
fistpll
or
push
int3
arpl
add
jne
push
les
jmp
cmp
ds
jecxz
jp
cmp
sbb
loopne
push
jl
xchg
ret
add
push
lock
add
loop
lcall
je
bound
loopne
push
je
push
ret
lock
aas
add
push
push
add
adc
inc
add
loop
cltd
add
pop
add
xor
rcrb
not
cmc
lcall
enter
mov
cmp
cmp
orb
pop
je
stos
fisubrs
popf
add
ror
repz
and
sub
push
cmp
jmp
jmp
test
inc
outsb
adc
stc
bound
inc
cmp
xchg
cmp
mov
mov
xchg
add
or
jmp
pop
lock
iret
jbe
mov
lock
pop
mov
and
pusha
pop
and
add
cmpsb
adc
mov
push
lahf
and
fisubrs
mov
add
popf
idivl
sub
jl
std
mov
idivl
lret
inc
std
stos
or
push
jg
sub
sbb
jmp
aaa
push
clc
stos
add
lods
icebp
js
subl
dec
cld
cs
loop
inc
fdivrp
or
mov
js
test
cmp
insl
or
out
mov
add
sbb
lock
mov
ljmp
in
sub
stc
in
add
lret
xchg
inc
and
dec
cmp
out
js
pop
cmpl
push
js
sbb
or
outsb
add
loop
cmp
test
pop
push
sub
loop
ss
repnz
adc
faddl
shl
cmpsb
or
loop
fsubr
add
push
jo
or
fsubrl
add
in
test
call
adc
shrl
mov
mov
lret
mov
adc
fcoml
stc
ss
aad
in
adc
mov
scas
jo
push
lea
adcl
dec
dec
lea
in
or
add
jge
jmp
out
adc
movl
add
add
cli
sbb
push
pop
ret
insl
icebp
jle
mov
push
nop
jle
cmp
xor
add
lea
in
sbb
jb
pop
shlb
cmp
and
push
add
sti
lea
jb
sub
lea
pusha
xchg
add
sbb
add
das
push
mov
add
add
add
push
add
mov
xchg
je
xchg
pop
insl
add
fsubs
adc
add
mov
int3
outsb
adc
push
lahf
fs
mov
shrb
pop
pop
push
inc
xchg
jne
mov
xchg
shrb
fbld
fldl
je
cmp
cltd
push
dec
mov
mov
sahf
add
loope
jmp
dec
mov
add
rcll
cmp
adc
mov
rclb
cmp
arpl
mov
rclb
sub
leave
jl
mov
outsl
and
pop
pop
aas
out
pusha
inc
inc
jl
outsb
adc
jbe
inc
idivl
pop
aas
clc
ds
jl
outsb
or
inc
jl
aam
jb
fs
andl
mov
insb
into
daa
js
aaa
xor
mov
inc
cs
mov
cmp
test
lds
add
cmp
sbb
dec
aam
es
inc
clc
rolb
add
in
mov
clc
test
mov
mov
fsubr
push
jmp
jecxz
inc
cmc
mov
and
lea
mov
stc
push
jmp
pop
push
mov
xchg
rcl
addl
add
add
cmp
pushf
sub
push
int
ljmp
adc
jmp
clc
pop
push
stc
push
jmp
pop
call
pop
bound
jae
cltd
mov
jae
loop
popa
dec
or
dec
add
into
ret
or
add
jge
adc
xor
pop
xchg
sti
mov
cli
mov
add
mov
jb
aam
sbb
into
jl
adc
and
das
mov
pusha
xchg
lret
mov
popa
adc
loop
test
sar
jno
call
adc
sti
sbb
pop
or
fwait
jmp
mov
inc
clc
je
into
mov
mov
jg
insb
add
movsb
movsl
xchg
and
sbb
add
jne
mov
jne
popf
es
not
add
mov
mov
mov
xchg
xor
call
push
add
cmovge
push
sahf
lret
add
sbb
adc
testb
incl
push
mov
jne
push
gs
popf
add
add
pushf
shlb
sahf
cmp
mov
xor
enter
mov
test
add
mov
jecxz
and
jmp
pushf
mov
rcr
inc
inc
jnp
add
cmp
dec
in
pop
mov
dec
dec
fadds
mov
add
jno
iret
mov
stc
push
or
clc
call
jo
jns
dec
add
mov
xchg
dec
add
jb
testl
mov
sbb
enter
push
aam
pop
into
pop
les
adc
or
bound
mov
jno
jmp
and
add
mov
jmp
add
lahf
pushf
sbb
jae
adc
xchg
mov
mov
add
push
aas
aad
stos
mov
xor
fcompl
fs
sub
call
push
push
cmpsb
int3
xchg
mov
and
mov
dec
in
mov
shrb
sbb
add
fcmovb
sub
jbe
mov
insb
loop
popa
sbb
sub
test
push
jb
es
jb
sbb
and
andl
xor
into
insl
in
popa
or
clc
xchg
enter
mov
mov
add
and
mov
and
push
pushl
mov
in
fstpt
add
mov
int3
in
fmull
mov
mov
mov
or
pop
cld
xor
inc
cmc
iret
rolb
mov
pushf
lret
shrb
pushl
cmp
jne
push
push
push
xor
mov
in
mov
jge
or
out
mov
incl
into
pushf
aam
ljmp
xlat
fmuls
negl
xchg
mov
dec
fcomip
scas
mov
test
sbb
notl
inc
xchg
rolb
scas
cmc
ja
popl
addr16
cld
jo
jmp
push
pop
jle
hlt
clc
jne
inc
or
add
mov
out
imull
inc
inc
hlt
add
ss
adc
inc
or
hlt
lret
xor
push
clc
push
jmp
divl
pusha
test
sub
add
jecxz
or
sbb
adc
add
mov
imull
pushf
fwait
cmp
dec
ficoml
shlb
jb
popa
sbb
sahf
clc
inc
mov
insb
scas
ret
add
add
add
add
adc
enter
enter
imull
push
dec
or
stc
xchg
inc
bound
mov
movsb
idivl
push
add
lret
xor
outsl
jno
push
add
and
sub
xchg
add
mov
adc
repnz
add
dec
pop
mov
add
sub
pop
sub
mov
xlat
nop
arpl
pushf
or
subl
mov
es
fs
inc
lock
cld
clc
add
pushf
lahf
mov
rol
sbb
aaa
fcmovb
sub
es
mov
jnp
add
and
add
outsb
or
dec
cld
test
inc
sub
in
pop
push
inc
roll
push
inc
add
loope
add
rcrl
add
ret
les
mov
push
sbb
adc
hlt
add
ret
add
push
inc
add
inc
add
mov
push
push
sbb
call
loop
add
outsw
mov
xlat
cmp
dec
in
es
add
mov
add
ss
hlt
adcl
add
add
add
clc
cmp
out
out
cmp
sbb
in
rcpps
dec
mov
mov
jnp
jmp
orl
rcll
orb
and
xor
jbe
cmp
subl
mull
ss
nop
push
imull
cmp
jbe
dec
inc
adc
jae
xchg
and
imull
push
jb
add
push
daa
arpl
adcb
xchg
jb
call
mov
mov
pop
xor
push
or
mov
in
lahf
xor
inc
push
push
cld
xchg
test
jnp
sbb
repz
repz
and
hlt
xchg
test
xorb
ret
or
addr16
mov
mov
enter
jae
adc
jnp
mov
add
cmp
mov
hlt
sahf
dec
loop
jl
popa
lock
mov
jle
lock
pop
mov
neg
pop
enter
ret
imul
dec
daa
cmp
js
add
sub
cmp
add
add
add
mov
pop
dec
cmp
adc
pop
mov
jmp
js
add
call
psubb
push
mov
push
push
mov
andl
mov
inc
clc
lcall
lock
insb
sub
loopne
adc
xchg
xchg
js
dec
mov
push
mov
cld
fnstenv
sbb
push
adc
mov
inc
add
pushf
sbb
out
lcall
test
rorb
hlt
stos
fbstp
sbb
mov
cs
out
mov
dec
xor
mov
icebp
testl
icebp
divl
jg
aaa
add
mov
sti
jp
and
mov
and
add
pop
and
movsl
xor
adcl
xor
mov
ret
mov
mov
mov
mov
sub
sub
push
xor
cmp
and
xor
dec
lock
ds
and
mov
inc
sbb
push
cli
clc
inc
and
add
add
add
add
pop
js
rcrl
dec
out
jo
adc
aad
xchg
and
add
lahf
lods
jmp
in
jae
push
icebp
inc
faddl
js
mov
lock
push
jo
int3
xchg
test
jbe
or
dec
shll
lods
or
adc
and
pop
clc
mov
adc
xor
add
add
add
add
shl
add
pushf
sbb
andb
arpl
push
pop
in
inc
jo
cmp
lret
sub
cs
shl
pusha
mov
lret
lcall
subl
ffree
std
sti
fwait
divl
es
out
sbb
jo
divl
insl
icebp
ret
mov
fsubp
pop
push
stos
rol
cmp
cs
mov
loopne
mov
dec
push
adc
and
pop
shrb
aas
addr16
xchg
add
mov
call
mov
mov
dec
cmp
cmc
add
mov
movl
sub
fs
lds
movsb
jmp
push
test
mov
dec
dec
or
cmp
incl
jl
push
mov
sbb
mov
dec
pop
or
sldt
mov
sbb
add
push
pop
ret
sbb
add
pop
hlt
add
clc
scas
add
clc
sub
mov
sti
mov
xor
pusha
lods
ljmp
cmp
adc
enter
inc
push
in
xor
inc
mov
mov
adc
cli
inc
add
clc
scas
rorb
pop
or
adc
sbb
ds
or
repz
add
add
mov
xor
and
imull
jno
ljmp
sti
push
jmp
enter
ror
lds
push
insl
adc
loop
add
or
push
push
in
clc
gs
movsl
fnstenv
test
scas
insl
in
daa
lds
cld
arpl
sti
pop
shrl
mov
mov
cmc
jg
push
jb
add
dec
cld
insb
bound
pop
mov
inc
iret
pop
sahf
inc
fcoml
jmp
adc
mov
daa
add
roll
cli
add
xchg
inc
cmc
push
push
or
push
or
xchg
push
add
cmp
out
sub
fs
fs
push
add
loopne
call
ret
cmp
pusha
mov
xor
cli
cltd
fwait
jmp
or
popf
mov
test
or
jge
mov
mov
aam
idiv
loop
cmp
insl
add
dec
inc
jb
mov
negb
jne
sti
xor
add
push
cmp
xor
mov
push
add
mov
mov
inc
or
mov
or
push
in
andps
inc
in
add
popa
in
mov
pop
loopne
and
add
xor
push
mov
and
setp
punpckhdq
push
adc
bound
call
mov
cmp
xor
mov
add
push
daa
xor
lods
imulb
xor
testl
cld
lods
mov
dec
add
cmp
sub
add
jge
cmp
clc
mov
add
call
adcb
aaa
pop
dec
add
cmp
daa
or
lock
push
mov
pop
testb
fistpl
pop
sub
not
jnp
inc
clc
sbb
push
push
jo
les
je
sbb
cmc
cld
popl
inc
jae
add
int
fsubrp
jp
cli
int3
jp
sti
fdivrs
cld
push
inc
cmc
inc
subl
add
fsubrp
jp
sti
fdivrl
cli
loopne
cmpsl
dec
sarl
sarb
hlt
xor
leave
pop
jl
lea
jl
lods
test
push
lea
pop
in
lea
shlb
out
shlb
or
sbb
test
add
xor
call
call
sbb
cmp
dec
sarb
add
daa
outsb
call
outsb
pop
insl
out
fucomp
xchg
jnp
add
ds
divl
mov
add
lcall
jge
add
pusha
or
adc
jo
dec
lods
sti
lea
iret
cmpsl
adc
xchg
out
pop
and
add
push
cmp
movsl
lcall
add
loopne
jmp
push
int3
push
lea
mov
loope
xor
inc
sarl
inc
mov
cmovne
jne
gs
inc
inc
xchg
sbb
add
sbb
pop
adc
ret
mov
incl
push
adc
mov
cwtl
xchg
fdivr
add
decl
out
add
or
adc
pop
sub
clc
insl
add
or
cmpsl
hlt
sti
out
fisttpll
sub
sti
enter
les
clc
mov
js
aam
xor
jg
fadds
lahf
jns
jae
in
sbb
js
subl
add
add
push
in
js
orl
cmpl
je
or
push
rcr
dec
pop
rcr
add
addr16
das
add
daa
int3
pop
or
clc
js
aam
stc
in
sbb
jb
add
jno
add
xor
repz
inc
in
add
or
leave
cmpsl
fisubrs
clc
xchg
mov
lret
xchg
mov
add
add
add
mov
cmpsl
inc
mov
lret
inc
cmp
mov
push
leave
cmpl
aaa
add
jo
lock
xor
dec
test
pop
ret
mov
adc
mov
lret
xor
add
dec
mov
into
pusha
add
popf
incl
popf
testl
inc
add
add
xor
mov
pop
cmp
mov
fsts
enter
enter
enter
fwait
dec
mov
xor
add
cs
pop
push
lds
icebp
arpl
out
call
jne
jle
add
and
push
add
pop
shlb
xchg
rolb
sbb
jb
and
pop
outsl
std
dec
ret
add
adc
sti
dec
add
test
add
bound
in
add
adc
inc
sar
out
fidivrs
fs
xchg
pop
inc
call
call
in
mov
shr
pop
xchg
cld
pop
mov
mov
mov
mov
leave
cmp
outsb
inc
rorl
shlb
incl
loop
call
ret
clc
cmp
sbb
cmp
or
lret
mov
aas
sbb
add
ret
cs
sbb
mov
or
push
aam
add
inc
aas
sbb
shl
stos
movsl
mov
sbb
pop
testl
aaa
jo
or
sbb
and
mov
xor
sub
call
mov
leave
cmp
pop
inc
aas
clc
test
lret
pop
fwait
mov
add
push
sub
std
push
jmp
inc
into
pop
jb
lds
lea
fs
lock
inc
int
xchg
es
push
hlt
mov
filds
cs
xor
adc
mov
mov
repz
pop
pop
jb
mov
adc
addr16
push
jmp
inc
cld
es
hlt
es
outsl
in
es
sub
lea
bound
rcrl
outsl
mov
orl
sti
aad
mov
pop
mov
sti
push
add
repnz
push
mov
addr16
xor
inc
rol
lcall
rcrb
cmp
add
add
fdivs
sbb
test
mov
bound
sbb
add
adc
sbb
popf
out
mov
lods
sub
mov
mov
mov
mov
cmp
xchg
push
shlb
sbb
push
hlt
inc
cmp
or
adc
xor
mov
ljmp
int3
in
mov
and
sbb
and
mov
or
jb
mov
pop
xchg
push
mov
adc
test
lods
jmp
push
mov
out
int3
xlat
fsubr
jmp
fsubr
call
fsubr
jnp
cmp
push
mov
add
push
fsubr
decl
inc
add
rclb
add
clc
nop
notl
push
inc
clc
pop
push
inc
clc
lods
add
clc
xor
divl
gs
inc
clc
lods
add
clc
push
notl
je
inc
clc
mov
add
clc
lock
idiv
bound
clc
bound
mov
not
popa
inc
clc
loope
inc
clc
mov
aad
mov
push
inc
clc
push
inc
clc
mov
aad
add
les
add
push
sahf
jle
mov
push
jmp
fisttpll
shll
push
mov
add
push
pop
mov
bound
push
jmp
fisttpll
mov
popa
mov
push
jmp
fucomp
mov
popa
cmp
push
popa
cmp
jmp
fmul
mov
bound
cmp
or
cmp
jmp
fsubrl
pop
jb
cmp
jmp
fmull
pop
add
pop
add
sti
push
add
ficompl
xchg
ficompl
jmp
xor
idivl
imul
jmp
sti
push
add
and
mov
jmp
add
push
add
int
negl
sbb
add
sti
push
add
mov
or
mov
jmp
sti
push
add
mov
jmp
aam
testl
mov
adc
pushl
lods
idiv
in
cli
repz
add
push
sbb
add
adc
push
stos
idiv
and
sbb
add
push
sbb
add
stos
idiv
fsincos
repz
sbb
add
sbb
add
adc
lcall
lods
sti
jmp
pop
add
loope
add
dec
adc
lcall
stc
repz
pop
add
rcll
add
cmp
hlt
call
scas
sti
clc
mov
add
clc
inc
sbb
and
sbb
add
clc
mov
sbb
addr16
lock
sbb
push
mov
add
clc
cmp
out
pushl
lds
cld
das
mov
add
clc
lcall
cld
pop
or
decl
add
add
clc
mov
sbb
out
and
jmp
mov
cld
ffreep
add
clc
mov
sbb
insb
icebp
mov
pop
jmp
add
add
add
clc
push
jmp
sbb
jmp
add
push
jmp
add
push
jmp
adc
adc
adc
adc
adc
adc
xor
or
sub
adc
push
sbb
ret
push
adc
imul
mov
mov
paddb
or
in
mov
sldt
add
add
add
add
mov
adc
mov
adc
mov
adc
mov
adc
mov
addr16
scas
or
test
jmp
mov
pop
jmp
mov
stc
or
div
or
add
out
divl
out
mov
add
btr
add
mov
jmp
mov
popf
add
mov
jmp
in
mov
imul
test
adc
notl
mov
mov
mov
mov
hlt
mov
add
adc
jmp
adc
inc
or
hlt
call
or
jmp
or
call
add
jmp
add
incl
add
incl
dec
add
ljmp
add
cmp
hlt
jmp
add
incl
add
incl
hlt
incl
hlt
call
add
ljmp
hlt
call
add
jmp
hlt
aas
add
call
std
repz
clc
cld
xlat
int
cld
iret
subl
cld
mov
push
sub
scas
lahf
sub
cmpsl
xchg
cld
lahf
jg
cld
xchg
imul
add
add
add
loope
cld
xchg
sub
jg
sub
ja
sub
outsl
mov
cld
addr16
cld
pop
jmp
sub
dec
dec
sub
inc
pop
sub
aas
jmp
cld
aaa
jge
cld
das
jmp
cld
daa
pop
sub
pop
dec
sub
pop
test
sub
pop
jge
cld
incl
cld
out
pop
mov
daa
fsubrl
push
daa
int3
scas
daa
daa
add
scas
or
mov
scas
rep
scas
icebp
movsb
scas
add
pushf
scas
std
es
scas
sbb
daa
test
xor
je
push
daa
insb
scas
push
daa
fs
dec
daa
pop
scas
lahf
daa
push
scas
andl
scas
jmp
inc
cmp
fldl
scas
scas
pop
sub
lods
pop
and
mov
sbb
fistpl
adc
pop
and
push
and
xchg
and
cld
lods
add
stos
mull
sbb
testl
out
stos
neg
out
test
push
stos
negl
pop
stos
notl
stos
negl
stos
mull
stos
negl
stos
testl
push
stos
testl
imulb
idivl
stos
neg
add
add
add
add
stos
divl
shrl
not
in
stos
testl
fwait
or
jns
hlt
ljmp
hlt
ljmp
or
cmp
hlt
stc
or
call
or
jmp
or
lcall
hlt
incl
add
call
add
lcall
add
ljmp
hlt
std
push
lcall
xchg
add
pushl
hlt
incl
adc
decl
hlt
pushl
adc
incl
or
incl
adc
incl
hlt
clc
cmp
movsbl
add
and
cld
jmp
adc
negl
add
clc
movsl
add
js
add
js
add
js
add
js
add
clc
pop
add
cld
scas
and
add
add
add
add
jecxz
cld
xchg
mov
add
add
xchg
add
cld
outsl
int
cld
addr16
or
push
xchg
or
dec
jns
cld
inc
jns
cld
aas
in
or
aaa
inc
or
das
dec
or
daa
push
jecxz
sbb
mov
or
stos
decl
add
jecxz
cld
stos
fisttps
hlt
stos
aas
sbb
stos
dec
sbb
stos
sub
add
add
add
fsubrl
inc
sbb
stos
addr16
stos
outsl
sbb
jmp
or
scas
or
jmp
adc
adc
adc
stos
mov
adc
stos
mov
push
stos
inc
adc
stos
outsl
adc
stos
addr16
stos
notl
xor
add
stos
negl
stos
testl
add
add
add
stos
imull
jmp
divl
jmp
divl
add
stos
test
in
stos
div
in
imul
ljmp
lea
stos
negl
stos
testl
in
idivl
in
test
add
imull
add
testl
lock
not
out
stos
testl
sbb
hlt
lcall
add
ljmp
add
call
add
jmp
hlt
ljmp
hlt
jmp
hlt
stc
add
lcall
add
hlt
pushl
hlt
incl
add
mov
add
inc
add
decl
hlt
decl
add
cmp
incl
cmpsl
add
call
or
incl
hlt
incl
pop
hlt
inc
pop
hlt
clc
and
cld
inc
ss
cld
aas
test
cld
aaa
adc
cld
das
or
cld
daa
cld
push
cld
pop
or
cld
pop
adc
cld
shrd
pop
inc
push
cld
lcall
cld
div
adc
cld
out
adc
fbld
cld
xlat
adc
iret
rcll
cld
lea
add
cmp
cld
scas
and
cld
lahf
loope
cld
xchg
call
cld
xchg
adc
jg
adc
ja
add
clc
sub
cld
addr16
push
cld
pop
push
jae
push
cmpsl
jmp
push
inc
cmpsl
pop
push
cmp
mov
xor
lret
or
and
insl
adc
aas
adc
xor
or
xchg
adc
jge
cld
cmpsb
pop
adc
hlt
cmpsb
jmp
add
xchg
sbb
fsubl
xchg
clc
xchg
testl
clc
xchg
flds
clc
xchg
jmp
clc
xchg
in
clc
xchg
push
setl
adc
clc
add
xchg
pop
adc
adc
out
sti
push
adc
push
cmp
push
and
mov
xor
push
subb
sti
push
sub
push
sbb
push
xor
push
sub
push
adcb
mul
out
mov
testl
sti
push
add
mov
mul
in
mov
neg
cld
mov
idivl
add
mov
divl
in
mov
hlt
jmp
push
sbb
add
div
call
repz
repz
add
or
hlt
incl
adc
ljmp
adc
in
adc
stc
adc
lcall
pmuludq
jns
hlt
jmp
sbb
add
in
popa
test
loope
imul
je
xor
loopne
outsb
jne
push
add
sbb
je
orb
sbb
pop
ds
pop
popa
clc
inc
push
addr16
fimuls
fistl
jae
push
push
pop
aam
sbb
sti
mov
sti
pop
jb
push
pop
pop
int3
sbb
bound
mov
daa
imul
xor
ds
sarl
test
push
pop
dec
xlat
dec
insb
push
shll
pop
fldl
cmp
inc
lea
pop
fwait
cmp
xchg
dec
pop
daa
scas
add
sti
je
insb
inc
fwait
dec
jae
popf
pop
cmp
cli
push
es
sbb
pop
pop
sbb
pusha
or
pop
push
clc
push
dec
add
enter
mov
adc
push
pop
fnsave
mull
push
cmp
cmp
inc
stos
sub
push
mov
std
pusha
clc
push
push
add
iret
cmp
inc
lahf
xor
push
mov
fstpt
pop
xor
xor
push
xor
inc
dec
cmp
dec
clc
push
dec
add
xor
inc
dec
cmp
inc
xor
sahf
add
jl
sub
add
pop
jne
cmp
inc
ds
and
daa
inc
dec
jmp
movb
jecxz
dec
ret
jmp
fldt
insb
daa
add
xor
rolb
or
inc
arpl
int3
push
add
stc
cmp
lods
xor
add
stc
cmp
movsl
xor
add
pop
jo
inc
in
int3
inc
xor
sti
filds
lods
ds
fs
pop
cmp
cmp
dec
inc
add
daa
sbb
jbe
push
dec
jo
push
insb
jl
adc
fiadds
inc
sub
jb
add
inc
push
jb
cmp
jae
ficoms
xchg
sbb
mov
pop
inc
adc
add
inc
push
push
jecxz
arpl
dec
cmp
jns
adc
fs
or
jb
daa
push
inc
push
pop
inc
add
in
pop
jae
dec
pop
gs
add
imul
popa
jb
adc
add
insb
dec
pop
add
mov
and
arpl
dec
jns
scas
add
sti
sbbl
or
jns
scas
add
ljmp
scas
cmc
add
push
mov
add
fucomp
dec
lretw
sbb
lret
sbb
mov
lods
add
negb
push
insb
mov
jns
lods
add
js
insb
mov
inc
imul
add
add
add
add
inc
dec
pop
pop
push
popa
pop
fisubl
clc
loopne
inc
dec
pop
test
mov
push
sub
add
adc
insb
push
sub
jg
inc
das
jnp
sbb
jmp
push
sbb
xor
jmp
add
cli
adc
cmp
push
imul
fnstcw
ficoml
mov
push
adc
add
cmp
aaa
cltd
and
inc
mov
push
clc
push
sub
mov
sub
rolb
repz
sub
cs
fucompp
dec
data16
sub
inc
pop
add
hlt
pop
jb
sbb
pop
xchg
inc
sub
aaa
pop
add
xor
and
pop
sub
das
insb
inc
fnstenv
fs
cmp
lds
je
push
pop
dec
mov
sub
push
or
sub
lds
add
sti
mov
sub
fwait
xor
cwtl
sub
movsl
push
add
cli
ficompl
sub
xchg
inc
imul
arpl
pop
add
inc
insb
jge
arpl
jo
dec
gs
ss
cmp
add
jno
dec
orb
and
outsl
sbb
aas
add
ds
jo
dec
push
popa
and
pushf
push
gs
fidivs
out
dec
add
rcrb
insb
cs
xchg
pushf
dec
insb
and
jno
add
jp
fadds
popa
xor
jmp
add
pop
bound
dec
addr16
imul
clc
jecxz
push
pop
jp
push
insl
push
and
notb
sbb
and
or
add
mov
dec
imul
push
cld
lock
cld
sub
imul
hlt
sub
xor
add
jb
insb
xchg
add
clc
cmc
pop
push
xchg
push
sub
mov
cmp
add
xor
add
sub
dec
push
sub
dec
sub
add
push
nop
das
push
dec
cmpb
sbb
das
xor
pop
lret
xor
or
pop
sub
enter
aam
push
xor
sub
mov
xor
or
xor
inc
mov
sti
sub
and
std
loopne
dec
jmp
ret
es
iret
pop
fsubl
sbb
addr16
inc
sub
or
jae
sti
addr16
xchg
adc
insb
pushf
adc
push
fwait
ljmp
stos
lock
pop
jge
das
jb
fdivrl
push
jnp
xor
iret
pop
add
cmc
push
popa
pop
add
das
pop
pop
leave
cmp
inc
sub
pop
testl
inc
pop
sub
mov
fs
lds
sub
cmp
xlat
fsubrs
ficoms
add
out
outsb
aas
add
int3
push
push
gs
pop
gs
icebp
jmp
inc
insb
ret
je
hlt
pop
jne
adc
jb
mov
loopne
add
push
imul
add
add
ja
xor
inc
mov
push
push
mov
in
pop
fs
jmp
fwait
add
out
pop
fs
bnd
pop
out
pop
gs
adc
or
arpl
out
arpl
repz
add
pop
je
scas
add
divb
insb
xchg
popf
daa
addr16
add
pop
mov
sbb
data16
sub
push
es
cmp
sub
push
push
shll
insb
pop
subb
push
pop
add
sub
in
xor
xchg
sub
jge
sbb
lret
sti
inc
pop
lock
dec
add
push
add
fldl
jb
xlat
sub
sub
fiadds
aas
fucom
dec
xlat
push
adc
cltd
sub
xor
push
jb
add
sub
push
and
imul
fidivl
dec
and
lahf
cs
shrb
pop
sub
ret
push
lcall
xor
sub
mov
clc
push
into
add
xor
adc
jl
pop
sub
xor
aad
push
sub
rcll
sub
in
inc
and
sub
sbb
sti
movsb
add
loope
push
and
sub
shrb
sbb
and
shrb
pop
rclb
push
testl
dec
add
int3
and
add
in
int
fisubl
or
data16
add
imul
adc
jp
lods
lock
imul
decb
fcomip
inc
xchg
add
or
jmp
push
pop
jne
pushl
sbb
inc
dec
push
add
and
add
imul
pop
add
cmp
inc
fs
add
sbb
gs
std
jmp
add
inc
sbb
gs
cmp
pop
arpl
inc
jae
lret
outsb
lds
insb
sahf
imul
pop
insl
xchg
cmp
add
push
mov
inc
gs
loopne
jae
inc
arpl
cmp
je
stos
add
aam
pop
inc
mov
jg
inc
xor
push
pop
inc
lds
js
jg
dec
sti
aaa
pop
popa
test
pop
inc
pushf
and
aas
xchg
sub
and
jae
inc
pop
popa
mov
inc
add
cmp
addr16
pop
daa
inc
pop
popa
sub
clc
les
aas
dec
aad
popa
fs
fs
popa
sub
clc
adc
dec
addr16
es
ds
es
ds
xor
adc
gs
or
adc
dec
fstl
pop
sub
add
xor
ljmp
sbbb
ss
inc
xor
or
add
or
sub
stc
or
cltd
add
sub
or
and
std
cmc
sub
push
testl
pop
pop
rolb
mov
inc
cli
mov
das
and
cli
mov
add
and
xchg
inc
pop
sti
jnp
and
test
pop
lods
add
add
jp
cmc
imul
add
add
add
add
sti
cmp
inc
adc
dec
std
push
pop
cmp
mov
cmc
fs
lret
push
add
push
imul
leave
icebp
jno
lods
icebp
jno
rorl
or
negb
add
aad
add
outsl
les
fsubrl
cmovg
sti
and
jb
loopne
imul
add
add
add
add
pushf
aam
cmp
jmp
loop
insl
add
pusha
je
in
incl
aas
gs
gs
jb
out
decl
push
imul
aas
jae
lock
push
push
clc
cmp
or
pop
jae
dec
arpl
cmp
add
adc
inc
imul
arpl
mov
push
insl
mov
xor
arpl
dec
dec
mov
xor
cmpsb
sub
sbb
lahf
es
dec
inc
sbb
push
add
ret
std
ds
dec
jb
fcoml
jae
dec
sub
dec
cld
adc
jecxz
insb
lret
jo
jg
inc
sti
inc
sub
push
sub
sbb
jb
xchg
dec
xor
xchg
sub
cmpb
sti
inc
pop
insb
dec
lea
jb
arpl
popa
insl
bound
dec
xor
and
jle
sub
mov
sub
ds
push
pop
dec
pop
cltd
and
cli
fwait
cmp
pop
movl
add
fiadds
and
std
jne
mov
loopne
dec
sub
pop
faddl
jmp
add
add
add
dec
pop
and
rorl
push
sub
stos
fnstenv
add
adc
xor
add
sub
stos
or
xor
push
cs
imul
inc
pop
std
ret
and
sbb
fs
mov
aas
pop
inc
add
cli
lods
dec
push
add
cmp
ljmp
lods
sti
shll
lret
test
sti
imul
add
add
lret
push
add
sbb
add
mov
add
dec
pop
pop
lods
add
dec
sbb
push
adc
in
dec
call
add
sub
icebp
pusha
adc
fdiv
outsb
cmp
cmc
imul
clc
dec
jmp
and
jb
aas
add
push
push
aad
sti
push
jl
dec
pop
add
mov
push
inc
les
je
dec
add
or
push
gs
jno
xorb
jae
cmp
outsb
cmp
imul
dec
push
popa
lds
outsl
mov
jmp
dec
inc
outsl
push
cs
push
and
mov
aad
push
inc
add
pop
gs
pop
arpl
adc
sub
jae
imulb
add
add
add
add
sbb
push
enter
jmp
inc
add
jge
inc
pop
fs
dec
push
pop
pop
addr16
mov
sbb
clc
shlb
or
sub
xchg
and
or
add
pushf
push
popa
jmp
inc
popa
call
jg
xchg
clc
xor
pop
lds
dec
inc
loopne
daa
pop
test
sbb
cltd
clc
cmp
pop
add
and
push
add
push
xor
xor
jae
mov
clc
in
add
inc
and
push
pop
lds
cld
leave
dec
clc
push
adc
inc
push
or
xor
push
mov
in
icebp
mov
and
out
and
call
push
sbb
xchg
sbb
sbb
push
add
pop
dec
sub
push
es
shrb
dec
rclb
push
test
cmp
mov
repz
push
rolb
icebp
or
pushf
std
sbb
xchg
cmc
sbb
cmc
hlt
and
push
mov
dec
repnz
cld
ss
jno
sbb
push
es
add
fidivl
sbb
fs
int3
push
or
loopne
add
hlt
dec
pop
mov
imulb
add
or
sti
cmp
scas
loopne
cmp
sar
dec
jns
imulb
vpunpckldq
adc
sub
in
push
inc
adc
add
shrl
sbb
gs
cli
cmp
imul
push
add
ret
add
out
lcall
ficomps
adc
arpl
adc
inc
add
inc
fs
aas
add
jbe
aaa
gs
push
inc
bound
jae
pop
aas
fs
insb
inc
jae
jle
inc
add
out
outsl
fs
push
push
jle
add
jbe
aaa
gs
push
jae
xor
ljmp
sub
sub
loop
popa
jb
inc
jo
jecxz
incl
inc
push
add
sub
jb
jg
or
inc
sub
cmp
clc
lods
add
push
insb
pop
imul
sub
jb
pop
push
jae
pop
add
cmp
sbb
pop
imul
cltd
sbb
lods
add
cli
mov
dec
adc
add
fsubrl
sub
out
pop
fucomip
aaa
dec
add
je
push
aad
pop
imul
arpl
aas
xchg
push
adc
xor
stc
sbb
pop
push
daa
mov
mov
clc
in
aas
push
stc
add
add
repnz
pop
neg
xor
clc
mov
add
icebp
mov
and
mov
sub
pop
mov
fcomip
xchg
push
sbb
jl
sub
cltd
aaa
add
out
jnp
clc
push
and
daa
repnz
pop
sar
inc
pop
out
cmp
fcoml
test
shl
dec
and
std
inc
sub
push
add
incl
insb
cmp
loopne
pop
sbb
cmc
pop
add
push
add
cli
jecxz
cli
daa
ljmp
adc
pop
fisttpl
fisubs
out
xlat
lcall
sti
fisubl
add
jmp
pop
mov
cmc
jno
sub
pusha
xchg
loopne
add
add
mov
sti
push
test
sti
jmp
cld
dec
jb
es
pop
dec
and
add
hlt
dec
imul
pop
add
adcl
inc
imul
cmp
push
push
adc
mov
fs
jae
add
ds
push
rcrl
jno
add
outsb
mov
push
add
sbb
push
les
fs
sbb
gs
bound
popa
insb
das
inc
add
in
push
insb
stos
das
jns
popa
sbb
push
js
push
outsl
mov
or
adc
fs
clc
adc
cmpsb
aam
add
aam
dec
add
cmp
adc
sbb
cmp
popa
pop
adc
clc
aas
add
pop
test
push
insl
sub
clc
sub
inc
push
dec
xor
push
jb
jo
dec
stc
mov
adc
xor
sbb
cmp
sub
sbb
sti
cmp
add
popa
in
sbb
add
popa
add
lcall
mov
ds
push
inc
xlat
or
pushf
or
xchg
sti
and
cmp
hlt
add
lods
hlt
or
pop
and
xchg
out
or
cmp
or
push
clc
push
push
add
cli
in
ds
cli
ret
inc
pop
or
add
stc
mov
dec
cmc
stos
push
adc
mov
clc
push
out
add
inc
or
xor
or
das
cli
insb
ds
jnp
repz
jl
loope
pop
hlt
cmc
add
sbb
inc
dec
loop
ljmp
fstps
int
inc
add
inc
add
inc
repnz
inc
pop
adc
frndint
insb
jmp
sbb
dec
add
stc
data16
jecxz
cmc
sbb
pop
jmp
add
add
add
out
add
loope
dec
aad
stc
dec
lods
sti
lods
add
out
pop
mov
in
divl
sti
filds
scas
fdiv
inc
mov
repz
add
sbb
inc
push
pushf
jmp
pop
insb
push
pop
lea
sbb
cmc
push
dec
outsb
movb
enter
fistpl
aaa
gs
push
outsb
incb
push
add
add
ljmp
jb
jmp
push
je
and
repnz
push
sbb
pushf
dec
gs
mov
push
add
push
outsb
orl
push
and
mov
aaa
fs
clc
xchg
pop
push
in
lea
rorl
and
clc
pusha
std
inc
enter
loopne
push
popa
fmull
imul
add
add
add
add
fsincos
arpl
cmp
insb
lret
out
push
lods
int
insl
movsb
xlat
sbb
dec
sub
and
insb
clc
adc
aas
xchg
and
arpl
sbb
adc
jb
wrmsr
imul
cs
pop
fs
push
dec
push
sbb
dec
pop
inc
jae
pop
push
jb
jo
movsl
stc
mov
addr16
xor
push
xor
pop
test
and
cld
mov
add
pop
test
loop
jp
mov
xchg
push
out
sbb
out
je
scas
sti
pop
add
pop
xor
rorl
inc
and
inc
pop
lret
out
sub
mov
decb
addl
add
jno
jmp
push
div
cs
or
ss
pop
in
inc
sub
out
xor
rclb
stos
xor
add
add
add
pop
mov
sbb
int3
dec
loop
add
sti
shll
lret
repnz
int3
pop
nop
sti
rolb
sub
loop
jge
clc
js
sbb
jmp
out
imul
push
dec
jmp
inc
pop
cmp
add
cmp
divl
sti
jae
cmp
repnz
or
bnd
sub
cmp
sub
jno
and
data16
pop
mulb
sti
xchg
add
or
push
fucomp
in
gs
dec
loop
add
je
aas
push
jae
inc
imul
in
arpl
je
aas
push
jae
inc
imul
adc
cmpsb
ss
je
gs
inc
jns
mov
arpl
dec
outsl
shl
pusha
arpl
sbb
add
add
fs
les
gs
inc
jns
hlt
inc
arpl
dec
outsl
adc
pusha
arpl
sbb
add
push
inc
jecxz
popa
je
inc
push
jns
sub
mov
fstps
clc
pusha
and
add
and
ret
and
sahf
sbb
add
jo
mov
shll
lahf
and
xchg
and
loopne
add
add
sti
das
pop
mov
ret
cld
inc
stos
out
insb
mov
das
dec
cltd
inc
adc
cltd
inc
and
scas
cld
inc
mov
insb
mov
and
inc
addr16
xor
and
add
mov
sub
sub
sbb
adcl
das
sbb
push
stos
xor
pop
int
sub
das
cmp
pop
adc
cmp
mov
adc
xchg
adc
xchg
fsts
test
mov
dec
iret
pop
aam
call
xor
jecxz
push
lret
stc
inc
xor
xlat
call
xor
iret
daa
add
push
sbb
movsb
out
sbb
xchg
in
cs
out
or
stos
push
cld
and
ret
add
sbb
pop
das
cmp
pop
daa
add
idiv
cld
repz
incl
out
imul
push
int3
call
sti
out
aad
into
jb
dec
rorl
sti
nop
add
out
data16
pusha
mov
or
out
dec
jmp
sbb
addr16
es
imul
dec
jmp
adc
inc
inc
add
dec
jmp
aad
addr16
ljmp
ret
push
add
add
add
add
out
adc
and
js
adc
jb
or
push
loope
jle
icebp
xor
sub
xor
jae
dec
pop
push
xchg
pop
and
xorl
push
inc
shlb
inc
xor
ds
lods
add
cs
xor
inc
add
mov
cs
gs
dec
fdivrs
add
add
adc
int
dec
jae
sub
mov
pop
jb
aas
add
movhps
int
inc
fs
int
je
inc
jae
clc
adc
dec
clc
std
add
jl
push
pop
or
insb
pop
jp
imul
cld
outsb
es
push
jo
push
xor
add
rcrb
or
or
inc
clc
jo
push
in
popf
sub
add
add
add
loopne
cmp
clc
dec
cld
push
in
cmp
add
cld
push
int3
std
cmp
sbb
cmp
jb
rorb
inc
mov
sbb
jb
out
inc
clc
out
dec
cltd
inc
and
xchg
push
adc
ljmp
dec
clc
or
sub
add
xor
clc
or
dec
loop
add
pop
mov
es
fisubrl
add
hlt
xchg
push
adc
pop
lcall
sub
add
into
popf
es
jge
repz
push
filds
mov
call
inc
cmp
loope
add
pop
cmp
repz
pop
pushf
repz
test
xor
jmp
add
add
in
or
add
cmc
repnz
loopne
ja
sti
verw
or
inc
int3
or
popa
push
add
sti
cmp
in
outsl
mov
fcmovbe
pop
jmp
push
jmp
lcall
cmp
adc
add
sub
test
repz
data16
ljmp
call
stos
sub
inc
jb
xor
push
jb
add
outsb
sub
pop
outsl
repz
adc
repnz
xor
sub
lds
movsl
add
jb
mov
inc
aaa
push
pop
iret
xor
cwtl
adc
bound
dec
outsb
inc
pop
popa
outsb
subb
add
imul
sub
add
push
add
pop
imul
sub
and
mov
sub
dec
sahf
out
imul
ss
inc
pop
sub
jae
cmp
gs
pop
clc
or
pop
or
cld
das
clc
inc
adc
push
sub
arpl
popa
sub
and
and
and
outsb
add
or
insb
adc
sahf
punpckhwd
mov
add
cli
mov
frstor
sub
jg
std
clc
mov
push
daa
mov
push
daa
fwait
ljmp
pushf
sti
xor
int3
fld1
add
sbb
daa
mov
cmp
popa
cli
add
out
add
sbb
daa
imul
adc
sbb
and
and
add
push
jnp
dec
cld
aam
dec
cli
int3
xor
jmp
es
scas
inc
and
mov
adc
loopne
xor
stc
mov
filds
add
daa
loope
mov
lret
call
lcall
jo
or
inc
pop
fnsave
js
sti
sub
sub
shll
xlat
xor
cld
or
sub
add
add
pop
add
inc
fidivs
fcmovnbe
shlb
hlt
mov
pop
or
shll
push
aad
jmp
filds
popa
int
call
lcall
hlt
jecxz
test
shrb
in
jno
outsl
int3
xlat
enter
sti
imul
fcos
mov
push
mov
jecxz
add
pop
pop
add
inc
push
lods
add
add
add
add
add
ss
ret
add
sbb
loopne
push
fs
xor
push
je
inc
pop
and
adc
cs
inc
add
popa
je
aad
gs
add
mov
inc
push
adc
gs
push
lds
arpl
sub
pop
sub
inc
push
push
pop
dec
mov
inc
xor
jae
pop
adc
scas
sub
inc
add
jb
clc
nop
push
dec
out
pop
jb
mov
dec
clc
push
add
mov
push
add
sbb
dec
lret
ds
fs
shlb
cmp
clc
adc
xor
fldenv
add
pop
std
dec
fadds
and
insb
cmp
push
insb
sub
jb
addb
clc
cmp
jns
je
data16
insb
adc
dec
sbb
add
push
cld
inc
sbb
dec
and
and
push
and
pop
pop
pop
mov
fwait
sub
lds
mov
stos
and
ljmp
lret
ljmp
int
call
pop
stos
ljmp
pushf
add
pop
clc
push
add
adc
cld
sbb
push
stc
pop
jmp
adc
add
add
add
cmp
push
in
add
push
sub
dec
jmp
movaps
add
inc
in
sub
add
and
test
sbb
add
fcos
nop
ss
outsl
mov
or
in
lods
repz
add
sub
test
sti
lcall
fbld
push
in
dec
or
jno
aad
dec
pop
loopne
call
hlt
fisubrs
in
insb
inc
out
dec
inc
sbb
inc
jmp
adc
pop
sbb
shrb
and
gs
add
sti
mov
xor
add
loope
imul
negb
sar
pop
jmp
loope
pop
fndisi(8087
shrl
bound
fs
inc
and
aas
aad
pushl
add
jo
ds
gs
push
jae
aad
incl
imul
lds
inc
test
push
jno
adc
jmp
add
inc
and
add
push
fs
xor
jno
inc
add
inc
loope
lods
add
cmp
cmp
push
or
and
jg
or
fs
cmp
loop
pop
jae
loop
outsb
mov
push
add
sbb
clc
push
and
pop
pop
push
or
das
scas
pop
imul
mov
cmpsl
inc
dec
push
lcall
mov
dec
pop
fs
jge
in
clc
mov
insb
jb
loop
dec
mov
push
add
es
inc
xchg
leave
cmp
xchg
cmp
pop
xchg
ficoml
ds
and
clc
mov
inc
pop
or
jae
adc
dec
adc
inc
xor
mov
and
add
test
cmp
sbb
cmp
repz
or
mov
xor
fistpl
aas
mov
call
and
call
aam
jae
movsl
loop
add
test
popf
stc
js
clc
push
cmc
pushf
repz
daa
xchg
in
add
adc
adc
push
rolb
xchg
repz
and
call
add
add
add
xchg
push
subps
or
add
out
adc
pop
sar
dec
jecxz
nop
incl
std
sti
pop
fucompp
pushl
stc
lds
outsl
fnclex
hlt
imul
pop
add
or
mov
add
repz
xchg
sbb
jno
sti
repz
sbb
imul
push
add
xlat
lret
dec
test
or
push
inc
fstp
clc
sti
fcompl
sti
pop
cmp
fsubl
pop
lret
sti
imul
pop
sti
cmp
add
out
push
push
fisubs
sbb
or
cvttps2pi
fcom
cmp
add
imul
cmp
push
add
sub
cmp
pop
imul
sbb
add
sbb
sbbl
outsb
outsb
fcos
call
insb
inc
outsb
jns
pop
movsl
or
inc
cltd
xor
lods
or
fisttps
pop
je
add
add
sbb
pop
push
cmp
xor
je
aaa
pop
inc
clc
push
and
cld
push
stc
xor
js
adc
dec
push
sbb
jb
jge
add
clc
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jg
add
jg
add
jg
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
jmp
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
loope
add
loope
add
rcll
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
popa
adc
add
add
push
adc
add
add
popa
adc
add
add
xor
add
jb
add
adc
add
push
adc
add
jae
add
adc
add
pop
add
clc
dec
add
clc
jge
add
jecxz
clc
jge
add
dec
add
clc
js
add
jge
add
jle
add
pop
sahf
inc
jae
in
add
add
clc
pop
or
clc
jge
add
jge
add
jge
clc
jle
divl
add
clc
add
clc
mov
add
clc
std
sti
clc
incb
add
jne
add
pop
add
clc
call
add
clc
jge
add
push
jmp
add
push
jmp
mov
clc
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
jo
call
add
push
sbb
not
call
add
push
mov
add
push
jmp
imul
call
add
ss
add
call
pop
push
add
xlat
call
mov
mov
lods
jns
pop
mov
sub
test
aas
sbb
imul
popa
lcall
mulb
adc
inc
shlb
xchg
lahf
inc
data16
sahf
scas
jne
push
adc
jbe
nop
je
aas
inc
sub
dec
mov
out
fstps
inc
popf
push
pushf
push
punpckldq
iret
rol
inc
mov
das
daa
insl
jnp
cmp
add
and
pusha
cmp
aad
repz
xchg
ja
add
mov
xchg
pop
sti
popf
mov
add
pop
or
cltd
jbe
lahf
mov
shll
jns
fcoml
cli
aam
in
dec
cmp
xchg
pop
xor
xor
push
cmp
es
nop
xchg
mov
mov
pop
sbb
div
add
shll
outsb
push
mov
add
pop
adc
add
mov
int3
add
push
or
clc
rclb
xor
out
mov
cmp
jbe
mov
sub
xor
pop
out
mov
and
ds
mov
out
bound
xchg
insb
sub
add
cmp
fcomip
scas
mov
mov
mov
pop
das
pop
cltd
add
mov
loop
leave
fistpll
lds
cmpsw
das
cmp
mov
fidivrs
mov
add
mov
and
push
lret
loop
dec
iret
and
lcall
int3
mov
and
popa
add
jo
pop
and
inc
pop
cltd
jnp
pop
insb
fstps
dec
or
pop
xchg
sahf
je
and
lea
add
daa
adc
and
jl
pop
imul
jmp
jnp
lar
jbe
popa
sti
sbb
fstl
in
cmc
scas
push
sbb
add
cmpsl
and
cmp
test
orb
add
add
add
add
movsl
adc
mov
lret
int3
aam
and
xchg
inc
out
sbb
shll
test
mov
pop
push
imul
sbb
sbb
or
cltd
cmpsl
out
in
adc
dec
cld
mov
sti
push
add
or
ljmp
xlat
pushl
cld
jmp
cmp
in
incl
jecxz
add
loop
add
loop
add
loop
add
loop
add
fdivrl
add
fdivrl
add
fdivrl
add
fdivrl
add
fdivrl
add
aas
add
aas
add
fidivrs
add
fidivrs
add
fidivrs
add
fistpll
add
fistpll
add
fnstsw
add
fistpll
add
fistpll
add
fnstsw
add
fnstsw
add
fnstsw
add
fistpll
add
inc
js
clc
push
js
clc
rclb
clc
insl
add
clc
adc
popa
push
popa
inc
clc
insl
add
clc
insl
repz
jb
add
sbb
lret
or
leave
sti
rcrl
ret
add
adc
clc
adc
cmpsl
add
xchg
mov
mov
repnz
mov
sti
imulb
add
imul
pop
jmp
imul
mov
push
jge
arpl
aad
and
sbb
aad
and
aad
repz
shl
and
rcrl
push
enter
enter
enter
movl
add
add
sbb
cmc
or
sti
and
enter
enter
leave
sub
leave
dec
sbb
leave
pop
sbb
leave
dec
sbb
enter
enter
enter
enter
enter
enter
enter
jge
push
in
sbb
std
mov
ss
sub
movsl
cmp
lret
cmp
xor
lcall
cmp
stos
ss
xor
jp
std
xor
ss
sbb
std
xor
aaa
add
mov
aaa
and
mov
ss
mov
jmp
aaa
jge
mov
inc
mov
test
aaa
add
sarl
jge
jecxz
or
xchg
cmp
add
pop
add
pop
dec
add
insl
dec
adc
std
inc
and
pop
dec
xor
popf
dec
inc
xor
push
xor
dec
jae
popf
inc
xorl
inc
xchg
xor
inc
mov
fldl
xor
inc
shll
std
inc
jecxz
sbb
dec
add
in
dec
adc
std
inc
and
fisttpll
xor
inc
push
xor
fldl
xor
xchg
jmp
sbb
mov
mov
ret
leave
jns
ror
xchg
shl
leave
mov
roll
sub
adc
adc
and
pop
shll
or
rcll
push
shll
jp
jae
icebp
rolb
ljmp
mov
xor
ret
lret
ror
adc
jecxz
cmp
hlt
add
jb
add
pop
cs
adc
and
pop
cs
xor
inc
or
cs
or
cs
adc
aaa
je
jne
mov
cmp
aaa
dec
daa
popf
aaa
mov
xchg
aaa
lods
daa
jge
xchg
daa
push
aaa
insb
daa
fnsave
hlt
and
aaa
or
std
aaa
adc
cmc
aaa
or
popf
aaa
mov
xchg
aaa
lods
and
aaa
lods
and
add
cmp
cmp
cmp
or
cmp
fnstsw
hlt
and
cmp
and
cmp
cmc
cmp
std
cmp
and
adc
add
sub
insl
icebp
mov
jne
jp
cmp
rcrl
cs
sarl
jge
push
xor
in
xor
das
cmc
add
sti
cs
and
das
add
adc
cs
add
movsl
repnz
insl
repnz
jne
jp
cmp
rcrb
das
adc
shrl
xor
in
xor
cmp
and
aaa
std
and
cmp
std
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
pop
sbb
cmp
aam
std
sbb
cmp
sbb
cmp
add
insl
sbb
cmp
and
std
sbb
inc
cmp
push
cmp
cmp
je
popf
sbb
xchg
cmp
sbb
mov
fstpl
aam
std
sbb
cmp
sbb
add
clc
popa
xor
sub
adc
ss
sub
dec
add
ss
add
ss
repnz
jl
jmp
xor
loop
xor
mov
ret
fadd
fnstenv
xor
xor
xor
or
bound
and
sub
adc
dec
add
xor
repz
jl
jmp
xor
shll
mov
add
add
add
sub
ret
add
ret
pop
cmp
xor
fnstsw
in
sbb
aas
hlt
sbb
aas
cld
sbb
aas
and
std
aas
or
and
inc
sbb
xor
inc
sub
gs
je
insl
inc
jl
xor
inc
dec
sbb
inc
pushf
sbb
sbb
insb
sbb
inc
hlt
sbb
inc
cld
sbb
inc
and
std
inc
or
movsl
inc
add
mov
movsb
sbb
inc
je
insl
inc
jl
xor
repz
int
clc
push
add
les
xor
sub
icebp
and
xor
jnp
add
or
xor
or
xor
in
xor
in
sub
int
cli
xor
int3
or
sub
int
xor
add
add
add
mov
xor
fwait
xor
stos
xor
or
xor
or
xor
cmp
xor
jmp
sub
int
cli
xor
leave
or
add
cmp
insl
or
or
or
or
or
insl
or
insl
or
xor
insl
or
xor
push
or
lods
push
sbb
lods
push
sub
fldl
cmp
in
pop
dec
xor
pop
pop
xor
insb
xor
pop
jl
in
pop
mov
insl
pop
pushf
xor
lods
xor
pop
int3
xor
pop
in
xor
or
das
and
imul
les
das
push
les
je,pn
and
test
cs
and
das
movsb
or
das
mov
subb
or
das
aam
bound
in
mov
hlt
in
cs
dec
cs
popa
cs
imul
inc
int
das
push
lds
das
fs
ret
sub
mov
cs
add
les
loop
in
or
hlt
in
in
add
or
xor
fmull
xor
movsb
or
xor
fs
insl
xor
lea
test
xor
lods
xor
in
xor
lds
fmull
int
les
and
xor
add
xor
or
jl
insl
xor
test
test
pushf
or
xor
or
dec
jmp
das
xor
jecxz
cmp
jecxz
cmp
sar
aaa
aad
or
lods
ret
fidivl
xchg
ret
ljmp
xor
cmp
push
out
cmp
push
mov
xor
mov
xor
loopne
xor
out
xor
add
cmpsb
xor
scas
xor
iret
jbe
inc
jle
inc
das
mov
daa
xchg
xor
das
pop
xor
daa
arpl
packssdw
pop
jae
add
or
cmp
nopl
sbb
sub
push
sysenter
cmp
mov
push
movsb
cmp
add
aam
mov
or
pop
ds
xor
or
js
in
or
ds
or
aas
orl
in
aas
mov
sbb
add
or
adc
mov
sub
mov
int3
or
sub
or
sub
or
sub
call
pop
sub
call
inc
xor
leave
ret
xor
add
add
add
jecxz
test
jecxz
mov
mov
add
xor
cmp
add
dec
add
xor
pop
add
loope
cwtl
in
and
mov
int
es
hlt
int
xor
lds
xor
xor
leave
xor
and
xor
cmp
xor
and
add
dec
xor
xor
pop
xchg
xor
pop
mov
rolb
xor
pop
jne
mov
jne
addb
xor
xor
cmp
cmp
mulps
setne
push
push
cmp
or
mov
dec
or
pop
cmp
or
cmp
or
cmp
add
fnsave
sub
mov
fnstsw
mov
adc
cmp
movsl
cmp
add
cs
cmp
repz
ss
xor
out
xor
iret
sub
push
xor
iret
cwtl
fbstp
xchg
xor
les
pop
and
xor
xor
pop
pop
xor
xor
pop
aas
xor
out
inc
xor
add
pop
xor
shl
cli
xor
rcr
xor
shr
xor
sarl
cmp
repz
out
inc
add
ds
add
ds
add
aas
cmpsb
add
aas
xlat
add
aas
fiadds
aas
jmp
add
adc
add
or
xor
arpl
insb
or
xor
or
xor
or
xor
ljmp
xor
shlb
or
xor
pop
rdmsr
sti
or
fmuls
dec
xor
or
or
inc
or
xor
sahf
xor
lret
or
outsl
xor
sub
xor
sub
xor
cmp
jbe
enter
dec
daa
sbb
xor
push
das
lcall
adc
in
daa
cmp
jle
push
lds
es
lds
daa
aam
cmp
int
xchg
and
push
and
pop
pop
and
add
cmp
fdivrs
xchg
in
cmp
loope
mov
mov
fwait
cmp
mov
cmp
adc
cmp
adc
cwtl
adc
push
adc
add
unpcklps
mov
scas
cmp
xor
dec
adc
cmp
je
xor
or
lds
mov
jl
xorb
or
push
or
xor
push
or
sub
int3
or
xor
or
popa
or
xor
or
xor
push
jmp
aad
push
add
in
xor
int3
adc
and
mov
sub
jmp
sti
push
add
daa
inc
xor
adc
cmp
lods
cmp
setbe
jmp
hlt
push
add
in
sub
int
cmp
enter
enter
leave
out
xor
mov
mov
jmp
cld
push
add
movsb
xor
or
xor
xor
add
add
add
xor
add
xor
movsl
add
xor
add
xor
add
xor
add
xor
add
sbb
add
in
add
inc
add
xor
add
xor
add
xor
add
xor
add
xor
lods
add
xor
add
xor
add
xor
add
xor
imul
or
jmp
sub
jmp
sub
jmp
sub
jmp
sub
lret
xchg
sub
test
shrl
lret
jecxz
mov
sub
sub
sub
loopne
aam
call
or
sub
add
shrl
in
das
or
xor
adc
arpl
sbb
adc
and
push
das
sub
push
das
xor
arpl
cmp
das
inc
and
das
dec
sub
das
push
and
das
pop
or
clc
ss
or
das
pusha
or
xor
or
xor
or
mov
or
xor
pop
iret
xor
or
add
stc
push
dec
add
push
or
pop
xchg
xor
lea
xor
inc
xor
add
xor
movb
xor
add
aaa
add
cld
aaa
mov
add
ss
ss
add
ss
add
cmp
add
int
decl
and
das
lret
aaa
sub
fdivl
pusha
adc
cmp
in
cmp
fnsave
add
add
add
add
jl
xchg
int
cmp
loop
cmp
shl
cmp
xchg
jecxz
clc
xor
pop
or
sub
xor
adc
xor
jmp
hlt
push
add
in
bound
mov
jmp
sbb
add
sti
xor
xor
lret
adc
das
or
mov
dec
xor
push
data16
lcall
xor
push
in
xor
pushl
xor
and
xchg
xor
mov
fdivl
testb
pop
or
ss
or
ss
out
inc
or
mov
aaa
ja
or
sub
cmp
repnz
cmp
xor
jl
js
lods
out
mov
cmp
out
pop
cmp
hlt
push
sti
cmp
bound
mov
push
xor
or
pusha
sbb
adc
xor
sub
insb
out
lret
and
out
and
repnz
das
and
clc
aaa
add
clc
dec
xor
sub
xor
js,pn
cld
daa
cmp
xchg
adc
ja
adc
sub
add
lahf
repz
sub
out
aam
add
das
xor
clc
jecxz
clc
pop
xor
xor
or
testb
xor
or
ss
repz
push
or
lods
xor
icebp
or
xor
or
push
or
xor
or
xor
jmp
xor
incb
sub
call
sub
jmp
add
add
add
sub
add
xor
add
add
das
and
add
mov
fldl
ss
int3
imul
mov
push
add
sub
das
insb
sub
and
push
xor
or
xor
or
xor
add
xor
in
adc
cli
in
xor
in
in
xor
in
xor
scas
xor
shll
lds
xor
jl
aas
sub
xor
mov
xor
movswl
mov
pop
cs
ljmp
aaa
enter
into
pop
push
cmp
repnz
cmp
mov
add
add
add
push
hlt
mov
cmp
hlt
adc
test
pop
cmp
fistpll
xchg
cli
aaa
cmp
cli
mov
test
loopne
push
lock
cmp
xlat
in
mov
xchg
data16
pop
push
add
cmc
or
xor
or
mov
or
cltd
or
xor
or
xor
icebp
mov
clc
xor
dec
add
pop
xor
out
dec
xor
out
xor
iret
sbb
movl
lret
aam
xor
xor
sub
and
adc
and
add
add
mull
in
in
and
jecxz
and
jecxz
and
shll
and
inc
push
pop
cs
daa
mov
shll
add
push
sub
mov
sub
push
pop
pop
sub
add
add
pushf
add
push
add
inc
add
sub
push
add
xor
pop
inc
xor
pop
out
xor
mov
dec
push
jns
addr16
dec
xor
push
fbstp
or
xchg
xor
cli
add
add
add
xor
or
das
insl
or
das
cmp
in
fwait
or
xor
adc
lret
decl
lret
or
xchg
call
jle
xor
data16
pop
enter
enter
enter
rcl
aaa
mov
and
cmp
push
cmp
add
bound
stc
and
cmp
adc
stc
or
cmp
in
cmp
ffree
cmp
enter
cwtl
cmp
test
sbb
cmp
mov
mov
pop
cmp
and
cmp
nop
adc
in
std
cmp
or
cmp
in
cmp
cmp
in
pop
cmp
insl
cmp
in
lea
add
popf
cmp
in
mov
cmp
lock
or
in
cmp
icebp
std
cmp
icebp
or
cmp
repnz
cmp
cmp
cmp
cmpl
cs
mov
jge
test
and
movsl
cmp
lock
aaa
pop
add
inc
pop
or
cmp
adc
push
pop
sbb
pop
pop
and
add
pop
sub
mull
xor
outsl
pop
cmp
ja
inc
in
pop
dec
fdivl
push
aam
pop
pop
int3
push
pop
les
insb
mov
mov
jl
mov
push
mov
push
xchg
adc
push
pushf
or
push
movsb
add
pop
lods
cld
ja
mov
outsl
sub
in
subl
cli
faddl
push
aad
push
test
out
popf
lds
add
add
add
add
sti
jnp
pop
sti
out
repz
mull
scas
cld
or
aad
imul
clc
push
imul
push
insb
xor
push
xchg
xor
push
and
pop
lea
popl
jnp
mov
push
loopne
cmp
imul
jno
push
xor
or
mov
fidivl
add
pop
lock
pop
or
rolb
sbb
and
arpl
mov
mov
aaa
enter
into
lea
dec
and
scas
jns,pn
shll
cli
adc
cmp
adc
push
sbb
pop
add
jnp
add
push
add
push
xor
lret
bound
dec
lret
sub
aaa
lret
icebp
xor
sub
inc
add
cmp
add
inc
xor
sub
xor
or
and
and
lds
ljmp
pop
sbb
add
sub
xor
dec
sbb
adc
bound
add
cmp
xor
push
and
cmp
sbb
cmp
sbb
cmp
in
stc
sbb
cmp
sbb
add
add
add
inc
testb
push
cmc
bound
sub
data16
jo
js
call
movl
add
or
int3
and
xor
and
xor
and
xor
pusha
xor
and
pop
lods
xor
in
sbb
into
cmp
aaa
rcrb
jbe
stos
sbb
mov
sbb
leave
sbb
add
xchg
sbb
adc
adc
test
fists
fwait
add
adc
icebp
pop
adc
loope
adc
loope
adc
inc
rcrb
clc
ret
or
xor
adc
push
sbb
pop
jae
ret
or
push
roll
and
std
imul
pop
leave
sti
frstor
mov
and
stc
push
adc
adc
pop
arpl
add
push
mov
mov
mov
call
jb
mov
dec
add
sbb
add
adc
push
sbb
mov
decb
sbb
lds
inc
clc
cld
and
stc
sub
clc
push
jmp
add
push
loope
sysret
adc
pop
rclb
cmp
mov
ds
add
or
xor
pop
xor
or
inc
out
mov
xchg
in
xor
in
pushf
out
sub
push
sub
push
test
add
sahf
jle,pn
adc
jmp
mov
loope
das
stos
adc
pusha
adc
cmp
add
cmp
cmp
sub
cmp
add
add
add
fidivrl
and
mov
xor
shld
pop
out
je
xor
pop
sbb
aaa
add
roll
add
adc
add
and
ds
and
sub
xor
mov
xor
push
outsb
xor
push
scas
xor
push
pushl
push
and
xor
push
and
sub
cmp
add
and
outsb
and
and
and
ss
and
and
adc
sti
pop
sub
nop
or
mov
aaa
clc
movsb
sbb
aam
xchg
adc
adc
add
sbb
icebp
pop
adc
icebp
notl
loope
adc
rorb
sbb
ret
out
jo
out
in
xor
push
cs
inc
pop
mov
add
aas
xor
clc
pop
cld
clc
jmp
or
call
scas
adc
call
lds
push
lret
jnp
xor
dec
int3
xlat
pop
add
test
es
or
cmp
movsl
push
xor
adcb
out
pop
push
xchg
in
push
mov
out
lcall
add
add
push
lock
out
cmpsl
sbb
icebp
sub
adc
arpl
insl
lock
push
lock
cmp
icebp
jbe
ss
clc
push
jmp
add
push
in
or
mov
adc
clc
pop
movsl
ljmp
enter
outsb
jmp
adc
in
enter
incl
add
or
divl
iret
repz
int3
repz
cwtl
jecxz
cmp
fdivl
cmp
adc
cmp
add
cmp
sarl
repz
dec
pause
cmp
loop
cmp
adc
cmp
mov
mov
inc
cmp
out
out
ja
pusha
xor
fbld
xor
pop
pop
xor
and
fidivl
add
popa
xor
pop
out
add
add
sub
outsb
ds
adc
ds
adc
aas
movsb
adc
rol
add
mov
add
or
lods
xor
pop
jmp
xor
push
xor
mov
pop
or
xor
jae
movsl
ss
shll
or
out
adc
cmp
xor
cmp
adc
cmp
dec
or
cmp
push
jg
mov
adc
add
pop
add
xor
add
adc
popf
xor
add
enter
leave
repnz
lret
dec
sub
mov
test
adc
pmullw
xor
sbb
add
adc
icebp
inc
adc
or
notl
fwait
jecxz
push
out
sarl
sub
int3
pop
stos
les
sbb
ss
stos
das
inc
repz
lahf
add
clc
cmp
invd
cmc
or
or
or
or
push
pop
ljmp
push
outsb
jmp
in
push
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
call
add
add
add
add
mov
adc
jmp
xchg
adc
ljmp
push
jmp
and
sbb
out
add
ss
sbb
out
cmp
shr
or
sbb
in
dec
sbb
and
js
daa
in
pushl
or
xor
add
xor
out
xor
cwtl
add
mov
jnp
and
ss
add
aaa
in
fdivs
mov
int3
ss
mov
aaa
xor
ss
movups
repnz
add
fistl
fsincos
push
add
jmp
xor
jmp
xor
in
shrl
push
in
xor
or
xor
or
xor
or
xor
or
xor
xchg
inc
ljmp
xor
popl
repz
or
xor
or
push
or
cmp
pop
xor
jp
popa
or
xor
or
xor
and
xor
and
add
enter
cld
xor
add
int3
ss
and
aaa
les
je
push
and
mov
outsl
adc
sub
jp
in
popf
cmp
push
sbb
pusha
sbb
sbb
jle
ret
repz
sbb
jecxz
sbb
push
sbb
push
sbb
fstpl
inc
ss
or
loop
sti
or
push
pop
cmpsb
push
fimuls
adc
add
aas
adc
clc
sti
clc
cmp
dec
call
call
jo
fxch
pop
adc
leave
sub
leave
decb
leave
adc
sub
push
sub
push
mov
mov
pop
ljmp
and
jl
fucom
dec
adc
in
push
in
push
inc
out
adc
sbb
icebp
mov
xchg
icebp
push
sbb
adc
pop
or
notl
dec
jmp
pop
add
insl
pop
lods
ljmp
xor
mov
mov
in
push
adc
ret
push
lcall
push
mov
into
push
sub
push
popa
in
call
or
or
sub
call
in
cmp
loope
xor
adc
ss
cli
push
add
add
add
add
push
xor
jmp
xor
or
pop
or
pop
or
xor
inc
xor
jmp
xor
jmp
xor
jmp
xor
jmp
or
xlat
or
xor
or
xor
or
xor
ljmp
pop
ljmp
add
or
pop
or
wbinvd
bound
mov
push
out
or
add
or
out
or
xor
add
mov
xor
mov
addr16
mov
xor
add
shlb
incb
mov
addr16
xor
sbb
xor
xor
jb
xor
packuswb
lods
or
fidivrl
repz
adc
push
and
clc
mov
out
mov
mov
adc
fwait
adc
adc
dec
adc
into
adc
pop
adc
add
xchg
out
loop
enter
ljmp
cld
clc
sub
adc
push
adc
sub
or
sub
or
or
or
or
or
add
in
or
jmp
mov
push
mov
lds
lret
push
fists
jb
adc
sbb
int3
sbb
push
sbb
sbb
loope
sbb
loop
sbb
jecxz
add
cs
out
imul
cmp
mov
and
or
out
rorl
lock
lock
or
out
out
movsl
or
xchg
jle
in
sti
push
push
jmp
xcrypt-ofb
cmpsl
ljmp
inc
ljmp
stc
push
dec
add
push
add
in
repz
add
test
dec
xor
stos
xor
pop
xor
pop
pushf
sub
cmp
loope
das
shl
enter
cmpb
add
or
hlt
fnstcw
adc
mov
repz
xor
dec
xor
divl
xchg
call
add
mov
int
movsb
xor
arpl
ss
arpl
pop
ljmp
or
dec
add
or
mov
pop
arpl
sbb
out
aas
xchg
xchg
add
imul
xor
loope
mov
pop
add
mov
xor
add
xor
xor
add
xor
and
insl
xor
aad
xor
pop
push
or
out
or
ss
or
outsl
ss
push
xchg
decb
cmp
aaa
sbb
add
clc
inc
or
or
lock
or
fisttps
repz
add
add
add
add
inc
add
shlb
ret
out
cmp
or
lret
and
sub
out
jge
or
adc
add
adc
std
push
adc
out
or
mov
xchg
push
xor
sysret
jns
cmp
add
clc
push
adc
in
or
sub
adc
sub
add
add
add
add
scas
adc
iret
jmp
sbb
aaa
sbb
in
mov
lods
in
mov
adc
or
or
nop
or
jecxz
adc
jecxz
adc
in
push
lock
or
cltd
out
push
pop
out
mov
clc
push
in
das
out
adc
adc
jmp
leave
adc
call
scas
adc
mov
jmp
lcall
call
adc
loopne
incl
jmp
xor
ljmp
xor
sub
sub
jae
mov
out
out
sub
and
fsubrl
ja
ja
lret
cmp
cmp
dec
cmp
add
cli
xor
out
shll
pop
xor
pushl
xor
out
xchg
xor
sti
std
cmp
ss
in
scas
imul
add
xor
or
xor
or
xor
or
or
xor
add
popa
pop
mov
xlat
add
stc
xor
sbb
add
ss
jmp
sub
or
xor
adc
xor
test
or
xor
push
or
ss
or
ss
xor
dec
or
sub
jns
push
or
test
movsb
or
cs
or
loopne
aad
jmp
loopne
out
push
es
pop
cwtl
or
add
fucom
and
out
out
sbb
mov
jo
inc
rorl
or
roll
xor
push
dec
and
mov
movsl
add
aad
jg
sar
push
or
out
mov
inc
add
mov
or
enter
enter
add
cmc
push
xor
mov
add
cmp
icebp
ljmp
stos
jmp
adc
jmp
adc
in
movsb
adc
jmp
mov
adc
xchg
adc
ljmp
test
in
neg
mov
stos
fidivs
or
in
or
loopne
or
loope
or
inc
or
loop
or
xor
stos
or
push
jmp
std
sti
push
add
jmp
das
ret
jmp
das
aad
jns
push
or
xor
or
xor
push
xor
in
sub
xor
in
xor
pop
xor
add
fdivs
mov
out
pop
xor
push
sub
clc
sub
push
push
das
mov
or
cmp
add
xor
fildl
sarb
and
adc
lock
fwait
adc
add
push
add
adc
add
mov
xor
adc
clc
add
test
lea
in
or
cmp
dec
cmp
adc
cmp
sbb
cmp
inc
sbb
add
add
add
sub
ret
cmp
push
push
ds
mov
push
push
inc
aas
mov
jl
dec
sldt
push
les
add
add
inc
xor
or
in
sbb
xchg
in
pop
es
pop
mov
into
cmc
adc
cs
adc
and
and
jg
adc
add
add
ljmp
or
hlt
in
sbb
dec
out
or
in
aam
add
push
clc
loope
add
pop
or
sub
or
outsb
sub
adc
sub
adc
or
adc
mov
scas
or
adc
add
call
in
ljmp
out
pop
out
push
add
dec
divps
cmp
fucomip
or
loopne
or
loopne
or
cmpsl
loope
pop
cmp
mov
popa
fisttpl
or
fmull
or
fcompl
or
fadd
add
sbb
addb
fnstsw
pop
jno
jns
xchg
lea
movsb
fidivrs
xchg
ljmp
add
dec
aaa
mov
sub
add
push
add
or
inc
jmp
xor
in
jg
mov
or
xor
ljmp
or
inc
pop
pop
sub
call
cmp
push
or
cs
in
sub
jnp
xor
hlt
clc
cs
imul
add
add
add
add
and
cmp
mov
pop
in
nop
cmp
push
or
cmp
adc
cmp
adc
aas
cmove
mov
adc
cmp
lcall
adc
inc
rclb
add
sar
add
fstpl
add
add
inc
xor
test
es
cmp
adc
cmp
add
and
setge
adc
imul
add
sbb
add
add
xor
pop
es
popa
adc
sub
push
in
popa
push
stc
or
dec
add
xchg
out
add
out
push
add
out
clc
sub
add
clc
mov
mov
out
loop
jecxz
aaa
sub
jg
and
stos
sbb
aad
xor
pusha
std
mov
sub
add
clc
inc
adc
jmp
push
mov
je
pop
int
add
js
insb
das
pop
add
cld
jge
jge
xchg
ficoms
cld
cltd
std
clc
loopne
std
pop
loope
std
mov
sti
std
sahf
loopne
incb
push
loopne
jmp
fisubl
add
push
add
lahf
add
fsubr
add
popl
stos
add
mov
pop
fisubrl
push
fidivrl
jb
sub
lret
add
mov
clc
push
jecxz
shl
test
imul
inc
insl
scas
xor
dec
xor
dec
outsl
sub
inc
daa
sub
inc
fs
or
xor
add
mov
aaa
or
aaa
push
or
cmp
push
cmp
repz
mov
dec
cmp
fsubrl
or
clc
xchg
xor
dec
clc
cmp
xchg
cli
aaa
jge
jge
inc
cli
jno
add
adc
aas
mov
in
aas
xchg
add
popf
adc
cld
das
and
dec
and
xor
and
mov
xlat
sbb
aaa
sub
and
xchg
pop
lds
nop
sbb
cmp
mov
mov
fwait
cmp
push
or
sub
enter
add
loope
add
adc
and
xor
and
xor
and
mov
inc
xor
add
add
add
and
fistpl
xor
mov
mov
sahf
iret
mov
clc
outsb
ret
pop
add
clc
sub
add
clc
stos
in
mov
in
movsl
sub
clc
mov
jb
ljmp
arpl
clc
dec
add
clc
and
mov
loopne
cli
or
dec
add
into
aam
clc
sub
add
add
add
add
inc
add
clc
mov
icebp
sub
bnd
in
clc
inc
and
add
clc
sub
add
clc
adc
sub
in
pop
jmp
jecxz
hlt
iret
jecxz
hlt
iret
jecxz
hlt
iret
jecxz
hlt
aas
in
hlt
das
in
hlt
iret
jecxz
hlt
iret
jecxz
repz
inc
repz
jecxz
repz
jecxz
repz
jecxz
repz
rep
jecxz
repz
add
add
add
add
jecxz
repz
in
mov
cmp
push
sti
push
mov
negb
push
ljmp
push
jo
jbe
sub
push
push
outsl
dec
push
idiv
cmp
ljmp
add
add
jmp
sti
push
add
mov
das
jl
adc
jmp
mov
add
cltd
xor
xchg
pop
shlb
jmp
hlt
push
add
mov
or
sub
cs
xor
cmp
and
xor
clc
cmp
aaa
stc
jbe
or
clc
mov
cmp
clc
in
xor
clc
add
ss
inc
add
adc
adc
ds
adc
add
add
add
add
add
adc
ds
adc
ds
aas
pusha
adc
aas
add
hlt
ljmp
push
dec
xor
or
mov
jecxz
push
or
aaa
aas
or
pop
unpcklps
adc
cmp
adc
ds
adc
ficoms
idiv
and
hlt
inc
sbb
add
push
fbstp
ud0
xchg
or
clc
iret
in
push
push
in
pop
push
jmp
in
jg
test
test
push
xchg
out
out
movsb
out
out
ror
out
dec
out
sub
clc
adc
sti
cs
jmp
daa
dec
in
mov
and
cli
xor
insl
sti
jnp
mov
xchg
add
mov
mov
clc
shl
popf
clc
jecxz
lods
clc
repz
add
add
add
add
std
testl
ret
and
int
xor
ds
inc
xor
stc
push
and
leave
clc
pop
push
fprem
dec
push
imul
imul
fwait
dec
jns
imul
mov
adc
shll
push
jmp
repz
inc
int
das
dec
lock
inc
lock
inc
jge
filds
test
inc
dec
testl
add
add
iret
inc
pop
idivl
insl
imull
dec
testl
inc
dec
testl
dec
testl
lods
imull
inc
test
repnz
out
xor
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
adc
add
loope
add
loope
add
rcll
add
loope
add
loope
add
rcll
add
add
add
add
adc
add
mov
adc
add
mov
adc
add
xchg
adc
add
popa
adc
add
push
adc
add
popa
adc
add
push
adc
add
and
add
adc
add
clc
incl
add
incl
add
incl
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
add
std
add
clc
std
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
jmp
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
and
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
loope
add
loope
add
rcrl
add
rcrl
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
popa
sbb
add
add
push
sbb
add
add
popa
sbb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
incl
add
incl
add
incl
add
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
jmp
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
popa
push
add
push
push
add
push
push
add
popa
push
add
popa
push
add
push
push
add
push
push
add
and
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
loope
add
add
adc
add
rcll
add
loope
add
rcll
add
mov
adc
add
xchg
adc
add
mov
adc
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
xchg
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
popa
sbb
add
add
push
sbb
add
add
and
add
and
add
adc
add
adc
add
and
add
and
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
add
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
in
add
clc
in
add
clc
in
add
clc
in
add
clc
in
add
clc
in
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
rcll
add
loope
add
loope
add
rcll
add
rcll
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
popa
push
add
popa
push
add
push
push
add
push
push
add
popa
push
add
popa
push
add
push
push
add
push
push
add
and
add
and
add
adc
add
add
push
add
and
add
and
add
adc
add
adc
add
loope
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
add
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
and
add
and
add
adc
add
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
popa
sbb
add
add
push
sbb
add
add
popa
sbb
add
add
push
sbb
add
and
add
and
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
add
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
popa
pop
add
push
pop
add
push
pop
add
and
add
and
add
adc
add
adc
add
add
pop
add
and
add
adc
add
adc
add
loope
add
loope
add
rcll
add
rcll
add
loope
add
loope
add
rcll
add
rcll
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
popa
push
add
popa
push
add
push
push
add
clc
out
add
clc
out
add
add
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
add
out
add
clc
out
add
clc
out
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
xchg
adc
add
adc
add
add
push
adc
add
add
popa
adc
add
add
push
adc
add
add
and
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
rcll
add
mov
pop
add
xchg
pop
add
xchg
pop
add
mov
pop
add
xchg
pop
add
xchg
pop
add
popa
pop
add
popa
pop
add
push
pop
add
push
pop
add
popa
pop
add
popa
pop
add
add
add
push
pop
add
and
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
loope
add
loope
add
rcll
add
rcll
add
loope
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
loope
add
loope
add
rcll
add
rcll
add
loope
add
loope
add
rcll
add
rcll
add
mov
adc
add
adc
add
adc
add
adc
add
add
popa
adc
add
add
add
add
popa
adc
add
add
push
adc
add
add
and
add
and
add
adc
add
adc
add
and
add
and
add
clc
std
add
clc
std
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
jmp
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
loope
add
loope
add
rcll
add
rcll
add
loope
add
loope
add
rcll
add
rcll
add
mov
pop
add
xchg
pop
add
xchg
pop
add
mov
pop
add
xchg
pop
add
xchg
pop
add
add
add
popa
pop
add
push
pop
add
push
pop
add
popa
pop
add
popa
pop
add
push
pop
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
add
add
clc
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
jmp
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
push
adc
add
add
add
add
popa
adc
add
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
adc
add
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
std
add
clc
xchg
mov
pop
mov
lds
inc
sub
and
xchg
stc
sahf
mov
int3
aam
add
mov
gs
fistpl
jae
jle
es
jp
add
ss
jo,pt
push
fcoml
push
dec
nop
aam
push
jp
dec
lret
xchg
lea
fstpl
icebp
rorl
push
nop
mov
bound
call
xor
jbe
movsb
aad
stc
sbb
and
dec
shrb
add
push
cmpsl
scas
movsl
test
int
sub
dec
fldenv
add
add
add
add
int
js
add
add
cli
mov
lods
pop
push
jle
inc
scas
inc
push
and
sbb
mov
scas
dec
xor
lock
xchg
ljmp
gs
cltd
mov
and
dec
movsb
fists
stos
mov
stos
xchg
imul
push
shlb
jbe
lahf
mov
add
add
add
mov
stos
pop
test
xor
push
test
out
cli
pop
insl
inc
xchg
inc
loop
mov
xor
inc
and
into
sbb
stos
ret
and
mov
dec
mov
in
out
lahf
cli
cld
ja
push
add
jp
enter
aam
sarb
test
jg
mov
add
or
shlb
xor
cmp
icebp
rcrb
push
pop
int
jl
data16
mov
push
jecxz
in
out
dec
outsl
lods
cmp
push
sbb
out
fdivl
xor
pop
test
filds
push
stc
push
push
adc
sbb
jno
test
push
jl
mov
lea
clc
leave
rclb
les
jae
jle
sbb
jmp
or
scas
jae
mov
and
dec
pop
iret
dec
pop
imul
test
out
jae
lret
loope
mov
test
int3
int
jecxz
jae
or
cmp
ret
lods
jecxz
cmpsb
dec
xor
pop
mov
subl
outsb
add
add
add
add
lock
cmp
andl
push
xchg
imul
xor
jmp
inc
push
mov
mov
orl
loopne
push
loopne
sub
dec
in
pop
fmull
lock
dec
clc
mov
nop
cmp
jae
clc
mov
nop
dec
lock
add
dec
lock
aas
pop
in
add
push
add
icebp
lea
aad
mov
mov
lea
dec
sbb
mov
adc
inc
add
push
mov
push
call
jnp
add
sub
adc
in
jae
in
mov
adc
mov
xchg
rolb
lock
xchg
and
ret
int3
sub
ret
int3
inc
rol
int3
cmp
ret
int3
int
jecxz
or
out
pop
loope
mov
inc
call
cmpl
push
jae
call
nop
xor
mov
push
insb
add
adc
add
pop
mov
fdivrs
clc
push
add
mov
test
xor
pop
jae
mov
jae
jge
sti
push
add
dec
call
nop
mov
mov
mov
add
mov
int3
sub
ret
int3
inc
rol
int3
cmp
ret
int3
lods
mov
mov
mov
xor
dec
or
rol
int3
rol
int3
mov
mov
mov
xor
sqrtps
add
inc
ret
int3
lods
rol
int3
rol
int3
mov
mov
orl
fdivr
push
add
or
lea
loopne
add
mov
test
mov
les
mov
adcl
jae
add
jae
or
dec
hlt
mov
mov
push
aaa
pop
hlt
add
clc
push
add
add
add
aam
inc
adc
mov
sbb
out
movsb
add
lods
push
scas
adc
fsubrs
pusha
sbb
add
icebp
sti
ljmp
ret
int3
lods
lret
ret
int3
inc
lret
ret
int3
cmp
ret
int3
int
jecxz
add
add
fcoml
popl
ret
int3
sub
ret
int3
inc
lret
ret
int3
add
ret
int3
int
jecxz
or
mov
lcall
clc
push
add
cld
cltd
jmp
push
in
xchg
cmp
jnp
pop
mov
push
add
clc
icebp
or
stc
popl
inc
hlt
cmp
jb
jae
hlt
mov
push
mov
push
sar
cltd
stc
add
xchg
inc
lock
add
add
add
add
testb
push
mov
xchg
cmp
orl
lock
dec
clc
jae
adc
mov
xchg
dec
or
pop
mov
sti
or
scas
mov
xchg
cmp
sti
pop
cld
mov
fdiv
mov
cmp
int3
dec
nop
jecxz
int3
xor
in
dec
fmull
cld
lea
push
call
clc
lea
jnp
lock
xchg
cli
add
push
mov
pop
dec
lock
loopne
mov
pop
pop
test
add
rclb
push
orl
movsl
push
add
dec
notl
adcl
cmp
bound
mov
sbb
mov
nop
inc
or
dec
adc
addl
cmp
mov
add
lsl
jno
in
xor
push
mov
xchg
ja
clc
bound
mov
inc
xor
push
mov
xchg
cmp
in
jne
inc
popl
sbbl
adc
lods
loop
add
inc
mov
inc
call
xorl
inc
inc
out
adc
orl
add
hlt
push
adc
mov
mov
nop
adc
hlt
cmp
jae
in
mov
out
mov
or
dec
loopne
or
call
lret
ret
int3
sub
punpckhbw
sti
push
add
add
cmp
rcr
add
lea
test
xor
add
add
add
inc
fiaddl
cld
orl
inc
add
jae
or
inc
hlt
mov
lret
ret
int3
lods
jecxz
adc
push
inc
clc
dec
add
cmp
int3
mov
mov
or
mov
mov
and
xor
orl
stos
popl
push
in
mov
xor
mov
lea
inc
hlt
mov
jne
imul
add
adc
rclb
dec
inc
lea
repz
or
mov
jae
add
mov
mov
lea
adcl
adc
mov
mov
mov
mov
sbb
cld
adc
shl
jmp
or
mov
and
lret
ret
int3
add
lret
ret
int3
mov
mov
mov
decl
xchg
adc
inc
in
cmp
int3
inc
lret
ret
int3
cmp
ret
int3
int
jecxz
dec
sub
add
mov
jno
fmuls
add
cmp
inc
loopne
mov
add
or
lea
nop
adc
aas
clc
mov
mov
push
add
pop
hlt
jmp
xchg
mov
push
outsl
add
clc
push
push
push
xlat
dec
lock
inc
dec
inc
mov
inc
mov
inc
call
cmpl
add
jmp
mov
lea
jae
loopne
popl
cmp
push
call
je
mov
pop
adc
add
inc
adc
sbb
dec
sbb
shl
imul
cmpsl
inc
and
mov
mov
or
subl
mov
call
xorl
sub
call
in
mov
add
ds
mov
pop
add
sti
incl
pop
lcall
or
push
insl
or
mov
mov
repnz
dec
adc
mov
push
mov
imul
lock
jp
inc
clc
rorl
aas
add
clc
push
mov
push
lock
jnp
pushf
nop
xor
add
inc
inc
push
add
pop
notl
jns
nop
xor
mov
lahf
inc
fadds
out
add
mov
loopne
test
mov
popl
call
cmpl
push
sbb
add
test
mov
mov
lahf
add
push
mov
mov
popl
inc
xor
out
inc
add
lahf
add
push
sub
xor
iret
idiv
jnp
add
push
cmpsl
cmp
sti
sub
clc
xchg
xor
mov
add
add
push
andl
nop
mov
push
mov
xchg
popl
call
xorl
movsb
mov
push
adc
call
cwtl
mov
and
cld
push
add
clc
gs
cmpl
movsb
push
pop
loopne
cmc
jp
inc
clc
pop
dec
sub
or
mov
push
nop
mov
mov
inc
clc
sbb
cld
push
mov
push
inc
decb
clc
push
mov
add
push
add
add
add
add
ret
loop
int3
cmp
ret
int3
int
jecxz
mov
mov
jno
int3
cmp
ret
int3
lods
lahf
jecxz
cmpsb
imul
xorl
cmp
mov
aaa
jno
pop
mov
sahf
jecxz
push
or
aas
clc
ja
nop
xor
push
call
jnp
pop
mov
push
fcoml
add
rorb
int3
int
jecxz
dec
sti
mov
add
fnstcw
rclb
add
pop
in
add
push
add
mov
clc
push
mov
add
popf
inc
or
push
call
mov
adc
dec
add
cmc
fimull
add
mov
popl
add
clc
xchg
xor
add
sbb
cmp
clc
push
add
jnp
mov
jne
cmp
decl
jne
nop
mov
cmpsb
cmp
andl
inc
clc
popf
cmp
sti
push
xor
mov
lahf
add
mov
push
pop
sub
enter
cmc
out
popl
cld
aas
clc
ds
add
cmp
mov
sub
add
jae
nop
xor
notl
pop
mov
xlat
nop
xor
push
call
jnp
sti
mov
callw
shl
xorl
rorb
push
push
jne
nop
mov
push
call
jnp
add
sbb
jae
ret
loopne
fwait
inc
fsubrl
rolb
nop
cmp
mov
dec
jbe
nop
xor
add
mov
sti
popa
hlt
push
shlb
mov
add
add
popf
dec
in
pop
hlt
add
fwait
inc
loopne
and
nop
mov
mov
clc
push
jmp
add
sbb
clc
add
jae
fwait
add
mov
add
imul
add
pop
clc
mov
fwait
inc
clc
jns
call
adc
sti
arpl
xor
ja
nop
cmp
add
mov
and
push
xchg
mov
jle
inc
clc
or
mov
mov
add
add
add
clc
mov
mov
leave
mov
jl
in
adc
rclb
and
jnp
sti
addb
insb
or
popl
cmp
mov
mov
stos
fnstenv
shlb
ret
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
clc
push
add
jns
mov
cmpsl
dec
pop
dec
mov
rorl
mov
push
dec
sub
iret
or
mov
std
popa
pop
ja
les
push
mov
out
sbb
jle
mov
and
movsb
add
call
xorb
test
in
or
mov
call
les
jle
xor
dec
sub
sub
xchg
push
mov
mov
mov
shr
sub
inc
pop
jle
sbb
mov
jmp
mov
push
dec
sub
mov
sbb
add
jecxz
add
jae
mov
test
jmp
xorb
jl
pop
iret
and
aaa
test
inc
outsl
and
push
inc
pop
stc
push
adc
dec
les
sub
sub
lods
shll
pop
insb
mov
sbb
inc
jae
lea
outsb
inc
imul
xor
inc
sti
push
popf
iret
stos
add
clc
gs
leave
es
insb
push
ret
in
lret
mov
mov
push
sbb
add
mov
loopne
enter
out
shr
pop
test
cmpsb
jno
jge
fldl
adc
mov
xchg
xchg
outsl
cmp
jne
mov
iret
cmp
xor
push
pop
mov
jmp
in
mov
lods
sub
push
sbb
es
jae
fistpll
arpl
pop
int
xlat
push
xchg
loop
add
pusha
push
jo
sub
jp
movsb
inc
mov
xor
pop
jl
jo
xchg
mov
sbb
ss
or
popl
lods
mov
push
push
in
push
daa
mov
cmp
or
add
mov
.byte
pop
clc
.byte
data16
data16
add
add
push
add
data16
push
add
push
add
pop
add
insb
add
jae
jae
add
pop
add
outsb
add
add
data16
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
and
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
add
add
add
add
add
and
add
and
add
and
add
and
add
inc
gs
push
dec
outsb
outsw
add
imul
insb
insb
outsl
arpl
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
imul
add
or
inc
insb
imul
je
lds
inc
jb
ja
gs
inc
add
add
fs
popa
imul
push
outsl
jae
push
jne
je
gs
popa
addr16
add
fs
arpl
inc
add
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
add
fwait
mov
push
add
add
add
add
add
add
orb
add
clc
add
orb
add
cmp
add
js
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
pop
add
addb
add
addb
orb
add
test
add
rolb
add
fwait
mov
push
add
add
add
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
fwait
mov
push
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
fwait
mov
push
add
add
add
add
sbb
add
add
and
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
addb
add
fwait
mov
push
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
fwait
mov
push
add
add
add
add
sbb
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
addb
add
fwait
mov
push
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
rol
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
sbb
adc
add
adc
lock
pop
lock
adc
adc
push
add
push
or
int3
pushl
xchg
decl
ud0
decl
clc
int3
iret
decl
push
add
decl
dec
iret
pushl
adc
add
adc
mov
lcall
add
pop
add
clc
sldt
loopne
add
rolb
add
add
add
add
add
add
pop
add
add
add
add
addb
pop
addb
aas
addb
jg
pop
add
sub
add
adc
add
and
add
add
or
bound
add
add
ja
add
je
add
outsl
add
add
add
pop
add
add
cmp
add
jbe
add
mov
add
cmp
dec
add
add
outsl
add
push
add
pop
add
jle
add
push
add
adc
pop
das
adc
add
movsl
lcall
cmpsl
popf
add
into
leave
add
lea
xchg
arpl
mov
bound
mov
outsl
pop
add
lret
ret
add
sub
xchg
arpl
stc
enter
xchg
xchg
add
add
xchg
imul
cmpsb
jnp
stos
js
add
mov
cmpsl
add
ret
icebp
jmp
add
mov
int
xchg
add
mov
loop
mov
push
out
call
lahf
outsl
add
mov
add
mov
add
mov
add
jecxz
add
out
add
div
add
stos
xchg
shlb
mov
cmc
xlat
mov
in
scas
add
in
add
shrl
call
roll
xlat
rolb
fmulp
add
jmp
add
mov
aad
out
faddl
out
fiadds
std
out
loopne
enter
mov
add
mov
mov
fidivrl
mov
out
test
jmp
movb
aad
add
jecxz
add
mov
rolb
in
add
out
flds
out
leave
add
out
add
ljmp
in
rolb
in
aad
push
faddl
push
fldl
push
call
add
clc
hlt
add
repz
add
in
add
out
add
cmc
jmp
add
ljmp
call
hlt
jecxz
mul
les
out
iret
add
lock
add
hlt
out
add
in
lret
add
out
roll
push
flds
push
filds
clc
jmp
sti
repz
cli
out
add
cli
jmp
cli
in
clc
roll
push
les
std
out
add
out
add
jmp
add
in
add
push
add
push
add
push
add
clc
add
stc
add
cli
add
cld
add
incb
in
in
repnz
cmc
add
in
out
add
incl
incl
adc
add
add
sub
add
sbb
adc
add
add
and
inc
pop
jo
test
cmp
adc
add
xor
jne
mov
jno,pn
cmp
jbe
jge
mov
or
pop
sbb
aas
jbe
push
adc
pop
xor
bound
ss
mov
addr16
push
xor
push
dec
add
mov
push
jb
cmp
xchg
imul
dec
sbb
push
fs
push
adcl
nop
add
insb
adcb
add
or
add
add
xor
xchg
xchg
xchg
cmp
add
add
add
inc
outsl
xchg
xchg
xchg
outsb
daa
add
add
add
aas
add
pop
jbe,pt
pop
xorb
js
add
addb
imul
pop
add
add
add
addb
rolb
clts
lock
add
sub
add
adc
add
and
add
add
and
inc
sbb
and
sbb
cmp
add
lahf
outsl
ljmp
adc
add
sub
add
xchg
imul
test
ljmp
add
add
sub
cmpsl
jle
cmp
mov
dec
stos
xchg
fdivl
call
aas
adc
leave
inc
sbb
push
pop
sub
push
mov
shlb
test
std
in
jmp
sar
cmc
mov
fdivrs
lcall
adc
mov
mov
je
mov
in
aad
jmp
clc
mov
shlb
jmp
lea
cmpsb
jnp
jmp
ret
push
mov
xlat
mov
pushl
sub
cmp
add
pop
xor
sub
mov
sar
out
sar
out
iret
jmp
pushl
add
cs
push
in
in
lret
jmp
ret
push
xlat
mov
fidivrl
adc
inc
sbb
aaa
lods
xchg
ja
call
lock
in
sar
jmp
into
in
dec
mov
ljmp
add
movsb
pop
aaa
push
jmp
leave
jmp
ljmp
lods
mov
cmp
mov
aad
push
in
in
push
dec
scas
xchg
pushl
jmp
push
call
lret
ljmp
in
scas
decl
pop
test
ret
add
add
push
jecxz
out
fdivrp
push
fdivr
call
shrl
cmpsb
pop
ss
clc
in
aad
jmp
sar
push
fcos
in
xlat
sar
push
or
std
cmc
jmp
push
out
std
out
out
out
decl
add
mov
push
jmp
out
fcos
cli
in
repnz
decl
or
div
out
stc
push
in
stc
jmp
fxch
pushl
movsl
lcall
clc
push
jecxz
out
fdivr
cli
jmp
cld
jmp
lret
inc
adc
ss
mov
in
in
cli
sti
repz
cli
stc
enter
out
push
call
decl
add
add
add
add
fcmovnbe
stos
in
in
out
decl
add
lcall
dec
mov
faddl
add
add
fcmovnbe
xchg
repnz
cmc
call
into
leave
jmp
inc
inc
mov
fcmovne
mov
add
leave
ret
iret
ret
xchg
cmc
repnz
out
stc
div
repz
pop
inc
add
add
lcall
add
pop
add
cld
pop
add
loopne
add
rolb
push
addb
dec
add
sub
add
test
add
incl
add
incl
add
inc
pop
xchg
jmp
setg
sub
add
and
add
inc
add
add
add
add
incl
add
add
lcall
std
std
jmp
decl
ret
cld
jg
stc
jg
mov
fnstsw
pxor
clc
aas
idivl
clc
aas
repz
aas
sti
jg
aas
sti
jg
aas
sti
jg
aas
sti
jg
aas
sti
aas
push
mov
clc
jg
fcomip
aas
out
out
lock
fcomip
clc
jg
stc
jg
jg
decl
ret
jmp
pop
lcall
pop
cld
pop
cld
pop
jmp
pop
incl
add
cld
add
clc
add
jg
add
aas
loopne
add
rolb
jo
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
pop
addb
pop
rolb
pavgb
add
lock
aas
clc
add
jg
add
incl
add
jmp
pop
ljmp
add
add
add
add
add
add
add
add
addb
add
add
addb
rol
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
adc
adc
adc
adcl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adcl
adc
adc
adc
adc
invd
adcl
adc
adc
adc
adc
decl
adcl
adc
adc
adc
sbb
decl
adcl
adc
adc
adc
mov
adc
adc
mov
mov
adc
adc
add
pushl
mov
adc
add
push
add
adc
jg
push
or
ud0
push
mov
decl
mov
cld
int3
int3
int3
int3
push
mov
cld
int3
int3
push
or
cld
int3
int3
decl
mov
cld
int3
int3
pushl
cld
int3
int3
push
mov
cld
int3
int3
push
mov
cld
int3
int3
push
mov
cld
int3
int3
push
mov
cld
int3
int3
int3
push
addl
pushl
sbb
decl
adc
jg
jl
push
add
adc
int3
int3
int3
push
adc
adc
dec
int3
int3
incl
adc
adc
jl
push
adc
adc
adc
jg
push
adcl
adc
push
mov
adc
adc
adc
adc
js
adc
adc
adc
adc
adc
sbb
adc
adc
adc
jmp
inc
incl
incb
clc
pop
inc
add
incl
add
incb
add
cld
add
psubb
add
lock
add
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
aas
clc
add
jg
add
incl
add
jmp
pop
ljmp
add
add
add
add
add
add
or
div
testl
pop
cs
add
sbb
inc
or
add
xor
push
and
cmp
imul
add
data16
dec
sbb
bound
das
add
scas
scas
add
add
xor
fwait
jne
add
add
xchg
add
sbb
add
xor
mov
add
and
add
mov
ret
mov
add
sub
add
and
add
add
mov
add
xchg
add
test
add
mov
xchg
addl
xchg
mov
in
fiaddl
pushf
xor
add
inc
adc
xchg
adc
cltd
inc
sbb
lds
add
push
xor
test
push
aaa
add
div
add
out
add
push
add
jnp
add
adcb
jnp
add
mov
push
lods
xchg
fmul
movl
rclb
add
pushf
addl
mov
aad
add
sti
stc
add
ret
stos
add
in
loope
push
in
add
aam
add
out
jmp
mov
push
add
stos
lea
shll
add
mov
add
mov
push
jmp
add
arpl
mov
pushf
jge
mov
jnp
aam
movsl
add
jecxz
add
out
add
fcmovnb
add
jecxz
add
fcmovne
add
icebp
in
in
add
in
add
add
lahf
jb
mov
scas
addl
mov
add
cltd
ja
fidivl
test
jmp
fwait
add
mov
jnp
xchg
add
scas
lea
mov
jl
mov
aam
add
leave
movsb
add
mov
add
mov
add
cmpsl
mov
stc
aad
add
lds
add
stos
popl
fstpt
add
cmpsl
add
fnstsw
add
fdivrs
add
mov
mov
iret
mov
add
shlb
cli
fdivrl
add
stos
xchg
add
loope
add
loope
add
jecxz
add
fadd
add
loopne
add
in
add
sarb
add
out
add
ffreep
add
xlat
rolb
scas
fwait
add
call
aam
ljmp
icebp
fmulp
add
rol
add
jmp
add
out
add
in
fildl
rol
mov
in
faddl
out
fldl
out
filds
lret
push
in
rol
mov
add
repz
push
jmp
bnd
jmp
add
clc
icebp
add
xlat
roll
stc
repz
call
cmc
add
jmp
add
clc
hlt
add
div
add
in
add
jmp
add
stc
clc
add
stos
mov
sti
fdivs
add
enter
loopne
add
loopne
add
loop
add
out
add
int
add
out
add
loop
add
leave
mov
jmp
into
add
in
fadds
push
loopne
repnz
add
icebp
loop
imul
fldl
push
in
add
imul
add
loope
add
jmp
add
ljmp
push
jecxz
push
out
push
jmp
add
lock
add
jecxz
add
jmp
aad
push
faddl
clc
cmc
icebp
add
in
add
out
flds
cld
lock
push
jmp
clc
out
add
hlt
loopne
push
jmp
add
cli
icebp
add
cld
testl
cld
clc
add
hlt
repnz
in
ljmp
std
cli
add
loop
add
cli
jmp
add
stc
add
sti
add
std
add
cld
sti
add
repnz
add
lock
add
incl
out
out
out
add
in
in
or
add
add
imul
push
add
push
outsb
outsl
push
add
add
add
or
pop
je
insl
adc
sbb
sbb
pop
jo
outsl
insl
push
adc
add
add
add
sbb
inc
jne
jno
jo
outsl
js
mov
push
or
add
push
jbe,pt
jl
je
jae
js
ja
jae
jl
imul
pop
add
lea
fsubp
aam
sarb
mov
add
add
add
add
rcll
xorb
cmp
cmp
jnp
imul
add
add
add
mov
xor
xor
cmp
test
imul
add
add
xchg
xchg
xchg
icebp
inc
and
filds
adcl
push
or
add
xchg
leave
xchg
xchg
xchg
xchg
xchg
filds
sub
xchg
or
dec
dec
pop
leave
pop
cltd
cltd
cwtl
cwtl
xchg
xchg
aad
daa
sub
xchg
xchg
les
or
push
pusha
popf
popf
popf
popf
popf
enter
inc
daa
sub
xchg
xchg
xchg
lds
mov
movsb
mov
lret
popf
popf
in
daa
sub
cwtl
xchg
xchg
pop
pop
xchg
xchg
xchg
pop
inc
or
lods
bound
mov
inc
daa
sub
cltd
cltd
cwtl
cwtl
cwtl
cwtl
pop
xchg
lea
or
stos
fs
movsl
movsl
int
call
cmp
enter
enter
or
test
test
inc
and
in
sahf
sahf
lret
lret
popf
popf
aad
lret
lods
inc
lods
fldcw
into
into
ror
xor
sub
xor
int
mov
in
lret
stos
dec
shrb
arpl
push
das
sbb
and
xor
mov
mov
gs
dec
scas
push
push
push
out
ds
ds
stos
into
test
hlt
in
mov
sub
rcl
dec
shr
out
jmp
scas
stos
arpl
rcl
test
or
mov
clc
mov
mov
out
shr
dec
pusha
dec
out
push
scas
fldcw
iret
bound
add
add
cld
in
mov
mov
negb
cmp
dec
in
shrb
mov
lods
push
adc
add
add
cld
imul
mov
loop
and
cmp
in
shll
bound
add
add
add
cld
cld
clc
clc
fstpl
pop
and
xor
out
fdivl
add
add
add
pop
mov
cld
cld
cld
dec
and
push
cld
cld
cld
repnz
add
mov
mov
push
data16
cld
repnz
add
fisttpll
sti
cli
add
cld
cld
cld
stc
aaa
out
cli
mov
add
add
std
std
std
std
mov
add
jmp
inc
incl
incb
jmp
add
incl
add
cld
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
pop
clc
add
jg
add
incl
add
and
add
inc
add
add
add
add
adc
and
dec
push
sub
push
sub
add
add
add
or
xchg
xchg
pop
xor
loop
daa
adc
sub
add
or
mov
fildll
adc
push
and
adc
add
or
push
and
fstpt
int3
mov
call
push
jecxz
and
popa
push
and
es
and
mov
mov
movsl
call
mov
or
dec
and
pop
push
sub
add
and
or
xor
jle
xor
jmp
mov
cmpsl
call
test
call
push
out
and
xchg
push
sub
push
sub
or
add
add
adc
dec
and
push
and
test
bound
and
je
xor
mov
jno
int3
stos
mov
in
ret
cltd
push
lret
mov
jmp
sbb
inc
adc
ljmp
adc
push
sub
or
add
add
or
jno
and
stc
mov
lcall
mov
mov
mov
out
lahf
in
ret
pushf
call
scas
mov
mov
bound
jnp
sub
inc
sbb
std
dec
push
or
dec
and
mov
sub
push
sub
add
or
push
and
outsb
inc
sub
mov
stos
inc
stos
mov
cmpsb
test
lret
dec
stos
mov
shll
lahf
cld
aam
push
int
fstpt
nop
dec
lods
mov
lds
pusha
pushl
decl
or
dec
pop
or
push
sub
xchg
push
sub
add
inc
sbb
add
adc
test
lods
mov
ret
lods
xchg
dec
scas
xchg
call
mov
fdivrs
movsl
push
aad
stc
fnstenv
jmp
mov
jmp
mov
jmp
rcrl
int3
lods
dec
lods
mov
lret
test
push
call
incl
or
push
daa
adc
push
sub
add
pushf
jp
lds
cwtl
call
mov
test
jmp
mov
push
rcrl
cli
shrb
push
lret
jmp
mov
push
int
clc
aad
call
mov
xchg
dec
mov
mov
inc
and
dec
push
or
push
adc
test
push
lds
cltd
dec
mov
jmp
stos
push
xlat
mov
jmp
push
sar
iret
lahf
jl
popw
add
lcall
dec
pop
sub
int3
pop
sub
mov
xor
fisubrl
ret
fdivrl
jmp
ret
mov
dec
mov
inc
mov
and
inc
sbb
in
push
sub
mov
adc
add
add
add
or
mov
mov
dec
mov
jmp
lret
cli
faddp
jmp
enter
jmp
in
call
mov
lcall
ds
cltd
xor
decl
fdivs
fistpll
fistpll
call
mov
dec
mov
inc
lcall
dec
and
fcoms
pop
push
sub
add
cmpsl
dec
mov
mov
std
loope
jmp
leave
jmp
enter
jmp
enter
int
sti
lahf
fs
incl
add
jle
add
rorl
jmp
jmp
sar
fidivrs
jmp
mov
call
mov
sahf
jmp
sbb
cli
push
adc
insb
aas
es
shlb
mov
sti
loopne
jmp
int
jmp
int
jmp
lret
in
jmp
lret
jmp
fdivr
fwait
popa
incl
xor
incl
xchg
je
push
jmp
jmp
ret
jmp
ret
loope
jmp
sar
loop
std
fnstsw
call
mov
xchg
ljmp
and
inc
sbb
lret
push
sub
stos
xchg
leave
mov
mov
icebp
fcmovb
in
aam
ljmp
call
into
jmp
iret
jmp
int
jmp
push
fdivrp
fwait
popa
inc
incl
xor
incl
xchg
jne
clc
jmp
leave
jmp
jmp
jmp
loopne
jmp
in
push
fdivrs
faddp
stos
call
sbb
ljmp
lahf
out
int
mov
loop
mov
out
xlat
ljmp
ljmp
jmp
sar
jmp
aad
clc
loope
fwait
bound
xchg
add
sbbb
dec
xchg
ja
sti
jecxz
jmp
int
jmp
lret
in
jmp
jmp
enter
jmp
leave
jmp
iret
mov
faddp
mov
fdivs
or
jb
mov
stc
rol
mov
push
out
in
in
fdivr
in
xlat
jmp
jmp
jmp
out
fcos
cli
out
fwait
popa
inc
incl
xor
incl
cwtl
jns
cld
out
jmp
into
jmp
lret
jmp
lret
out
jmp
lret
jmp
lret
call
sar
int3
mov
loop
test
icebp
push
and
jb
shlb
icebp
loope
push
loope
push
out
fdivr
out
fdivr
in
in
in
fcos
in
fdivr
push
fdivr
sti
jmp
fwait
arpl
test
add
sbbb
dec
lcall
jmp
call
sar
jmp
sar
call
into
jmp
int
jmp
stc
loopne
jmp
into
mov
out
mov
push
and
icebp
dec
and
jb
ret
leave
mov
push
in
push
loope
push
loopne
out
out
out
fdivrp
out
out
push
jecxz
push
jmp
sbb
lcall
sbb
dec
lcall
in
xlat
ljmp
jmp
sar
jmp
sar
in
stc
loope
jmp
into
mov
call
adc
dec
and
jb
shll
repz
push
ljmp
repnz
push
jecxz
push
jecxz
out
loop
push
loop
push
in
push
push
call
es
lahf
xor
incl
jg
push
out
in
fdivr
in
xlat
jmp
jmp
jmp
sar
push
stc
in
jmp
sarl
call
push
jmp
and
imul
ror
push
call
out
push
jmp
push
out
push
out
push
out
push
in
push
out
sti
out
dec
lahf
xchg
subl
decl
and
ljmp
add
rclb
push
fdivrp
out
fdivr
in
in
in
fdivr
ljmp
clc
in
cli
call
jmp
sarb
int
and
inc
fcmove
mov
out
in
sti
repnz
sti
icebp
push
jmp
push
jmp
push
ljmp
imul
sti
out
jmp
aaa
push
incl
xor
insl
xor
decl
add
mov
push
push
jecxz
push
loopne
out
out
fdivrp
out
fdivr
jmp
push
loope
in
stc
in
push
loop
jmp
lods
call
or
faddp
cmpsl
inc
fcmovbe
aam
call
repz
std
clc
out
clc
in
push
out
push
in
clc
in
stc
lock
stc
push
stc
cmc
sti
icebp
in
push
jmp
push
in
push
in
push
jecxz
push
loope
out
loopne
push
push
stc
jmp
repnz
inc
adc
push
push
sub
add
lret
sti
loopne
fdivr
icebp
jmp
std
clc
repnz
push
lock
stc
icebp
stc
lock
stc
lock
cld
repz
cli
push
push
push
ljmp
hlt
call
push
in
push
loope
push
stc
jmp
push
ljmp
cmp
fwait
inc
sbb
pop
in
mov
jmp
repnz
sti
cmc
stc
repnz
cli
hlt
stc
repz
std
idiv
inc
popf
test
stos
dec
sbb
jecxz
push
dec
xchg
cli
cld
hlt
push
in
push
ljmp
cmc
jmp
cld
hlt
jmp
clc
jmp
cmpsl
test
inc
adc
add
add
out
lret
jecxz
jmp
out
stc
hlt
icebp
std
cli
cli
cmc
cld
idiv
push
ljmp
pushf
das
add
filds
add
aam
cltd
stc
icebp
push
in
cli
icebp
std
imul
push
jmp
cld
imul
fld
lods
testl
push
add
add
add
fst
in
jmp
jmp
leave
decl
add
test
add
lea
add
arpl
add
mov
jo
cli
stc
hlt
push
in
out
sti
clc
out
imul
push
out
mov
mov
out
out
lock
cmc
hlt
std
js
cmp
cmp
sbb
idiv
cld
std
div
stc
div
sti
call
ret
insl
inc
daa
cmp
add
add
loopne
sub
loop
cmc
stc
sti
push
clc
cli
clc
clc
idiv
cld
cld
sti
dec
ret
mov
div
std
sti
std
stc
idiv
cld
cli
stc
stc
icebp
pushl
add
add
mov
sar
repnz
cmc
push
repz
push
div
cld
cld
std
stc
stc
stc
push
clc
clc
std
cli
hlt
pushl
adc
add
out
jecxz
jmp
lret
movsl
ljmp
imul
in
in
imul
out
out
imul
out
out
imul
in
out
imul
jmp
clc
icebp
jmp
repz
mov
jle
inc
pop
xor
push
incl
incb
cld
pop
clc
add
incl
add
cld
add
pop
lock
pop
loopne
add
loopne
add
rolb
add
add
add
add
add
add
pavgb
add
clc
add
jg
add
incl
add
sub
add
xor
add
pusha
add
add
add
add
add
add
pop
sbb
pop
xor
add
push
add
popa
add
and
cmp
sbb
dec
sbb
add
xor
add
xor
add
push
dec
add
xor
add
sub
add
jbe
add
push
add
push
sbb
add
add
cltd
aaa
push
add
xor
add
dec
sbb
mov
sbb
xchg
inc
sbb
mov
gs
sbb
add
adcl
mov
jp
add
std
cld
add
ljmp
cltd
push
xor
ljmp
pop
add
lahf
test
mov
jae
mov
jns
add
push
add
jbe
add
mov
add
test
mov
xlat
ret
les
add
xlat
movb
mov
ljmp
sbbl
lods
pushf
add
add
xlat
int
std
icebp
out
ror
rolb
loope
add
loopne
add
stc
hlt
add
repz
add
call
filds
mov
imul
xchg
jns
mov
mov
xchg
add
jecxz
add
in
add
jecxz
add
jmp
flds
jmp
in
add
into
roll
out
loopne
ljmp
add
jecxz
add
cmc
in
add
ror
add
jecxz
add
cmc
out
add
nop
push
sahf
jbe
int
jl
mov
stos
addb
mov
add
mov
lcall
mov
jg
lret
add
movsb
addl
mov
add
lods
mov
out
enter
mov
xchg
add
cmpsb
xchg
cmc
iret
test
add
mov
add
mov
loopne
pushf
add
ret
fnstenv
add
fidivl
add
add
scas
xchg
add
fdivrl
add
lret
stos
add
mov
add
fidivrs
add
fistpll
add
fdivrl
ffree
movsl
add
mov
lcall
shlb
jmp
les
jmp
lds
jmp
movl
jmp
leave
add
faddp
add
mov
lret
add
int
add
out
add
mov
add
out
add
out
add
jmp
mov
add
jmp
add
jmp
add
fadd
add
in
flds
repz
add
aam
add
jmp
mov
in
faddl
out
fldl
out
fiadds
cld
in
faddl
push
loope
std
out
filds
push
jecxz
push
in
std
icebp
in
hlt
jmp
jmp
push
in
add
in
in
loope
aad
cli
cmc
add
sti
testl
hlt
icebp
out
add
out
add
jecxz
add
cld
sti
add
sti
cli
add
clc
testl
in
in
jmp
shll
add
mov
rolb
fnstcw
add
ffreep
add
ret
lods
add
out
add
call
into
add
call
les
ljmp
fcmove
mov
add
out
fildl
push
out
push
call
add
icebp
out
push
out
add
leave
mov
in
add
fadd
add
les
add
loope
add
hlt
out
icebp
out
add
imul
add
out
add
clc
lock
repz
stc
repnz
stc
cmc
add
out
fadds
div
icebp
add
repnz
push
jecxz
sti
repz
cli
clc
add
div
add
sti
lock
cli
out
stc
add
cld
jmp
push
add
push
add
cld
add
icebp
lock
incl
in
in
in
add
add
es
aaa
imul
inc
addr16
add
add
daa
addr16
ss
add
imul
add
outsb
jno
insl
insb
aaa
add
add
add
outsl
imul
add
add
or
cmp
insl
insl
jae
or
add
add
or
es
sub
push
je
jae
insl
jae
or
pop
add
add
add
cmp
push
push
push
je
js
jbe
jae
outsl
gs
add
add
add
xor
push
push
je
outsl
outsb
jno
js
jbe
jbe
js
jo
je
aaa
or
push
add
add
dec
push
push
leave
test
jg
jp
jle
jbe
jae
jno
jo
fs
add
jge
lret
lret
jg
orb
addl
jns
push
add
imul
mov
mov
addl
xorb
js
jns
fs
add
push
xchg
xchg
xchg
xchg
int
mov
push
and
and
addl
pop
add
add
push
xchg
xchg
xchg
int
int3
int3
int3
int3
mov
sub
push
and
and
jl
test
js
leave
or
add
push
mov
cwtl
into
xchg
xchg
xchg
int3
int3
int3
sub
adc
adc
pop
orb
mov
add
add
add
add
test
mov
lcall
xchg
xchg
cmp
adc
adc
mov
mov
mov
add
add
add
push
inc
mov
lahf
pushf
push
pushf
pushf
lcall
adc
adc
xor
int3
int3
int3
mov
mov
or
add
add
xchg
inc
mov
mov
lahf
push
push
push
push
push
cmp
adc
sbb
into
xchg
xchg
xchg
xchg
int3
int3
int3
mov
mov
add
add
sahf
mov
shll
lahf
lahf
lahf
lahf
cmp
adc
sbb
lcall
xchg
xchg
xchg
xchg
int3
lea
push
add
add
mov
movsl
movsl
movsl
aam
aam
mov
mov
adc
xor
lcall
cwtl
cwtl
iret
xchg
xchg
lret
xchg
xor
add
add
cmpsl
cmpsl
cmpsl
cmpsl
movsl
movsl
movsl
aam
aam
mov
adc
sbb
lahf
lahf
lahf
push
push
push
push
lcall
xchg
xchg
lret
jo
add
add
stos
test
test
cmpsl
cmpsl
cmpsl
movsl
movsl
movsl
movsl
aam
adc
adc
sbb
mov
lahf
lahf
push
pushf
pushf
pushf
lcall
add
add
inc
scas
pop
pop
pop
mov
fldcw
test
test
movsl
movsl
xor
adc
adc
xor
mov
lahf
pushf
rcrl
add
add
scas
jecxz
pop
mov
mov
mov
mov
stos
stos
test
xor
adc
adc
xor
mov
mov
mov
add
jecxz
pop
pop
mov
pop
pop
mov
mov
mov
mov
stos
stos
test
adc
xor
movsl
movsl
movsl
movsl
movsl
aam
aam
mov
mov
add
jecxz
popa
in
mov
mov
pop
pop
pop
mov
mov
mov
mov
adc
adc
sbb
test
cmpsl
test
cmpsl
movsl
movsl
movsl
movsl
movsl
cmpsl
loope
cmpsb
rolb
add
add
dec
popa
in
fdivl
mov
mov
pop
pop
pop
push
pop
sbb
adc
sbb
fldcw
test
cmpsl
cmpsl
push
cmpsl
loope
xlat
cmpsb
loopne
add
add
jecxz
inc
pop
inc
mov
mov
in
mov
aas
xor
adc
adc
adc
mov
mov
stos
stos
stos
test
lock
lods
fcoms
fsubs
call
pop
fcmovnu
mov
xor
push
adc
adc
pop
mov
mov
mov
mov
stos
stos
lock
stos
cmpsb
xchg
push
add
add
mov
pusha
pusha
mov
pop
pop
pop
push
xor
adc
push
mov
pop
pop
pop
mov
mov
mov
icebp
stc
scas
lods
stos
lods
xor
add
add
popa
mov
ljmp
mov
pop
pop
pop
fcmovnu
mov
mov
mov
mov
mov
pop
pop
in
clc
pop
inc
loop
or
add
add
lods
mov
imul
ljmp
pusha
pusha
pusha
mov
pop
pop
pop
mov
mov
std
mov
pop
pop
xchg
add
add
add
add
dec
mov
ljmp
fistpll
mov
pop
pop
out
mov
add
add
add
add
dec
dec
inc
mov
dec
dec
in
in
ljmp
and
pusha
pusha
mov
fsubr
cli
std
neg
out
pop
push
add
mov
dec
dec
dec
dec
in
in
pop
adc
cmp
fbld
pusha
ljmp
in
add
add
ret
idiv
std
std
idivl
push
adc
adc
sbb
ljmp
std
std
fidivrs
add
add
ret
idiv
std
std
std
sti
idivl
adc
adc
std
std
std
std
sti
jmp
jmp
add
sub
std
std
std
std
std
std
notl
push
push
adc
std
std
std
std
std
in
dec
inc
dec
jmp
add
dec
sub
cld
hlt
repz
std
std
std
std
dec
movhps
and
std
std
std
dec
rorb
pop
add
add
ret
cld
hlt
mov
std
std
std
dec
popa
std
std
std
std
std
in
shr
inc
inc
bound
add
sub
cld
cld
mov
sub
sub
repz
mov
add
mov
cld
mov
mov
jmp
mov
enter
sub
dec
out
add
incl
add
push
incl
add
jmp
incl
add
inc
incl
add
incl
incl
incl
add
incb
incl
add
incb
incl
add
cld
add
incl
add
inc
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
rolb
add
add
incl
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
rolb
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
loopne
add
add
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
addb
pop
incl
add
loopne
add
incl
add
clc
add
jg
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
push
sub
or
adc
sbb
push
sub
add
add
add
adc
or
adc
inc
push
sub
inc
push
sub
or
adc
add
adc
or
sub
gs
sub
mov
push
sub
or
sub
add
adc
add
adc
inc
push
sub
fisttps
sub
nop
push
sub
push
push
sub
add
adc
sbb
adc
scas
mov
inc
stc
aad
jnp
mov
inc
sti
push
sub
xchg
push
sub
andnps
adc
add
adc
and
push
sub
cli
shlb
test
mov
inc
cld
push
sub
xchg
push
sub
andnps
adc
add
adc
add
add
add
adc
sbb
adc
rcrb
mov
xchg
loope
mov
mov
dec
cld
push
sub
xchg
push
sub
andnps
adc
add
adc
add
adc
add
sub
adc
adc
int
jns
cli
lahf
js
aad
test
in
jmp
mov
dec
cld
push
sub
nop
push
sub
adc
adc
add
add
add
adc
add
adc
or
adc
push
push
sub
andnps
adc
jl
xor
mov
cmp
mov
out
ret
cwtl
jmp
mov
push
std
push
sub
lcall
adc
push
push
sub
push
push
sub
add
add
add
adc
add
adc
adc
adc
sub
push
sub
inc
push
sub
mov
sahf
jne
test
lods
xchg
out
xchg
in
ret
cltd
fistpll
pop
sub
adc
xchg
push
sub
dec
push
sub
and
adc
pop
push
sub
add
add
add
adc
push
push
sub
and
adc
pop
push
sub
xchg
push
sub
into
pop
cs
pusha
xor
dec
stc
mov
mov
mov
in
les
fdivl
data16
pop
xor
push
sub
mov
push
sub
pop
push
sub
and
adc
push
push
sub
add
adc
add
adc
sbb
sub
pop
push
sub
mov
das
sbb
adcb
lahf
je
mull
andl
lea
mov
js
mov
cmpsb
test
fnstenv
call
mov
inc
cltd
jno
mov
cmp
stc
push
sub
in
push
sub
into
push
sub
mov
adc
cmp
adc
or
adc
add
add
add
adc
add
sub
daa
push
sub
adcl
scas
cwtl
push
call
scas
mov
mov
jnp
mov
cwtl
jns
mov
cltd
jp
mov
movsb
cmp
mov
jmp
mov
mov
fdivl
mov
ret
mov
push
mov
pop
jmp
adc
repnz
sub
rcll
adc
adcl
push
push
sub
andnps
adc
add
add
add
adc
push
push
sub
xor
adc
fwait
lods
sbbb
lea
mov
popf
cmp
sahf
cmp
sahf
cmp
mov
cmp
lret
dec
lods
mov
mov
fistpll
mov
push
lret
loop
cwtl
call
mov
dec
test
inc
mov
jle
mov
mov
stos
jnp
push
sub
stc
push
sub
jecxz
sub
cltd
push
sub
xor
adc
push
push
sub
add
adc
add
push
sub
outsl
stos
sbbl
mov
mov
mov
lds
mov
int
xchg
call
mov
fdivs
xchg
fistpll
popf
jmp
ret
mov
sti
aad
scas
sti
shrl
loop
lcall
scas
mov
leave
test
inc
mov
cmp
mov
arpl
mov
sub
in
push
sub
cmpsl
push
sub
cmp
adc
add
push
sub
adc
adc
jge
mov
mov
jle
mov
cmpsb
mov
enter
shlb
fnstsw
mov
out
int3
stos
push
shrl
cli
aad
cld
mov
fdivs
fnstenv
cld
aad
push
iret
test
jmp
mov
xchg
call
mov
dec
stos
mov
lds
cmp
cltd
jne
mov
pop
jmp
sbb
icebp
push
sub
scas
push
sub
aaa
push
sub
add
add
add
adc
or
sub
popf
mov
jno
mov
movsl
inc
lods
xchg
call
mov
fidivrl
cmpsb
jmp
lods
push
aam
stc
xlat
mov
sti
fnstenv
fidivrl
fstpt
fidivl
fidivl
fidivl
sti
mov
not
lods
in
leave
movsl
jmp
rcrl
aam
xchg
dec
lods
mov
les
test
mov
push
xor
repz
sub
lods
push
sub
sub
sub
add
add
add
adc
pop
push
sub
cltd
mov
ja
mov
test
dec
mov
call
mov
test
clc
fnstcw
fnstsw
fidivrs
cwtl
cmp
mov
push
and
mov
pop
pushl
push
and
mov
orl
xchg
xor
loope
mov
fidivl
clc
shrl
jmp
ret
fstpt
xchg
inc
test
inc
mov
push
mov
std
push
sub
xlat
push
sub
pop
push
sub
pop
push
sub
add
add
add
adc
adc
je
insl
mov
jns
mov
stos
xchg
dec
mov
fcmovb
cmpsb
jmp
lret
neg
mov
jmp
sar
loopne
ffreep
ffreep
fistpll
call
xor
ljmp
jne
fstpt
jmp
adcl
pushf
cmp
incl
je
in
lds
std
fnstenv
call
mov
xchg
inc
test
xchg
mov
dec
sub
push
sub
int
sub
inc
push
sub
add
add
add
adc
or
adc
idivb
xchg
dec
mov
fcmovb
test
clc
fadd
loope
jmp
jmp
ret
jmp
ret
jmp
ret
jmp
ret
loopne
jmp
sar
loopne
lcall
xor
lcall
xor
lcall
xor
decl
shlb
fnstsw
fdivrl
fdivrl
stc
mov
ljmp
call
mov
inc
stos
inc
cmpsl
mov
mov
sub
out
sub
imul
sub
adc
add
adc
adc
test
inc
lods
cltd
dec
mov
lods
jmp
into
mov
stc
faddp
jecxz
jmp
jmp
jmp
jmp
loop
jmp
loope
jmp
ret
jmp
ret
andb
sub
lcall
xor
lcall
das
add
stos
imul
fidivrs
fidivrs
fidivrs
fnstsw
fdivrl
ljmp
call
mov
dec
lods
nop
inc
cmpsl
mov
mov
pop
push
sub
push
sub
inc
push
sub
add
adc
pop
mov
scas
pushf
dec
mov
fcmovb
scas
jmp
iret
mov
clc
ffreep
in
jmp
lret
in
jmp
leave
jmp
leave
jmp
enter
jmp
jmp
jmp
jmp
andl
cwtl
xor
lcall
xor
decl
sbbl
loopne
ffreep
ffreep
jmp
sar
fistpll
fidivrs
fidivrs
cli
fdivs
ffreep
movsb
call
mov
dec
scas
xchg
inc
lahf
jl
jns
xor
push
sub
mov
sub
and
adc
or
mov
sahf
dec
mov
call
ret
in
mov
in
jmp
int
jmp
int3
jmp
int3
jmp
lret
jmp
lret
in
jmp
leave
jmp
leave
jmp
enter
enter
enter
incl
xor
lcall
xor
decl
test
jmp
ret
jmp
ret
jmp
ret
jmp
ret
loopne
jmp
sar
loopne
jmp
sar
fistpll
fistpll
jmp
shll
mov
mov
sub
into
push
sub
xor
sub
sbb
test
mov
jmp
int3
mov
std
out
call
sar
jmp
into
jmp
into
jmp
into
jmp
int
jmp
int
jmp
int3
jmp
lret
jmp
lret
jmp
lret
jmp
lret
pushl
sub
lcall
xor
lcall
cs
mov
jecxz
jmp
jmp
loop
jmp
ret
jmp
ret
jmp
ret
jmp
ret
loopne
jmp
ret
loope
jmp
sar
aam
jmp
leave
lods
fdivrs
lcall
cs
push
sub
popf
push
sub
adc
stos
mov
lret
mov
mov
out
sar
in
call
sar
call
sar
call
sar
call
iret
jmp
into
jmp
into
jmp
into
jmp
int
jmp
int3
pushl
sub
lcall
xor
lcall
cs
mov
jecxz
jmp
leave
jmp
enter
jmp
jmp
jmp
jmp
loope
jmp
jmp
jmp
cld
faddp
in
iret
mov
loopne
test
dec
mov
ljmp
adc
test
push
sub
in
leave
mov
mov
loope
mov
ljmp
ljmp
ljmp
jmp
sar
call
sar
call
sar
jmp
sar
jmp
into
pushl
sub
lcall
xor
lcall
cs
mov
in
jmp
lret
jmp
lret
jecxz
jmp
leave
jmp
enter
enter
jmp
jmp
jmp
jmp
jmp
push
fdivrs
fcmovnb
cmpsl
call
mov
jl
push
sub
lods
push
sub
adc
mov
cld
int
mov
fmul
mov
clc
in
in
fcos
jmp
jmp
jmp
jmp
ljmp
ljmp
jmp
sar
jmp
sar
call
incl
lcall
xor
lcall
cs
mov
out
jmp
int
jmp
int3
jmp
int3
jmp
lret
jmp
lret
in
jmp
leave
jmp
lret
in
jmp
leave
jmp
jmp
lret
ffreep
in
sarl
call
mov
call
adc
scas
push
sub
adc
mov
mov
fcmovne
mov
sti
jmp
fdivr
in
in
in
in
fcos
in
fdivr
jmp
jmp
jmp
ljmp
ljmp
jmp
push
lcall
xor
lcall
cs
mov
out
jmp
sar
jmp
iret
jmp
into
jmp
into
jmp
int
jmp
int3
jmp
int
jmp
lret
jmp
lret
jmp
lret
in
jmp
lret
jmp
lret
out
mov
fld
stos
call
mov
adc
scas
push
sub
adc
shll
fmul
sar
fmul
cld
in
fdivr
out
fdivrp
out
in
out
fdivr
in
fdivr
in
in
in
in
fcos
in
fdivr
in
fdivr
jmp
jmp
jmp
pushl
sub
lcall
xor
lcall
cs
mov
call
sar
call
sar
jmp
sar
jmp
iret
jmp
iret
jmp
into
jmp
into
jmp
into
jmp
into
jmp
int
call
iret
push
fdivrs
fcmovb
lods
fadd
cmpsl
call
adc
scas
push
sub
adc
les
fst
ret
in
std
out
push
loop
out
loopne
out
out
fdivrp
out
fdivrp
out
fdivrp
out
out
out
fdivr
in
in
in
in
in
fdivr
mov
imul
sub
lcall
xor
lcall
cs
mov
ljmp
jmp
sar
call
sar
call
sar
call
sar
jmp
sar
jmp
iret
jmp
sar
icebp
fcmovb
jmp
into
mov
fcmovb
scas
fcmovb
lods
call
adc
lods
push
sub
adc
ret
mov
fst
in
std
out
loop
push
in
push
loop
push
loop
push
loope
out
loopne
push
loopne
out
loopne
out
out
fdivrp
out
fdivrp
out
out
in
fdivr
in
mov
sub
add
cltd
xor
lcall
cs
mov
in
xlat
jmp
ljmp
ljmp
jmp
sar
jmp
sar
jmp
sar
jmp
in
aad
repnz
jmp
sarb
fadd
lods
call
adc
test
push
sub
call
enter
aam
in
loope
std
icebp
in
push
call
push
in
push
in
push
jecxz
push
loop
push
jecxz
push
loope
push
loope
out
loopne
out
loopne
out
out
mul
sar
mov
sbb
xchg
xor
lcall
xor
lcall
cs
mov
in
in
fcos
in
fcos
in
fdivr
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
out
fdivr
repnz
jmp
sarl
call
shrb
push
sub
inc
push
sub
cld
aam
ret
jmp
xlat
into
out
jecxz
std
icebp
out
clc
in
push
call
push
out
push
out
push
in
push
in
push
jecxz
push
jecxz
push
jecxz
push
loop
out
xlat
inc
mov
xchg
inc
sbb
mov
add
xchg
xor
lcall
xor
call
sub
mov
in
fdivr
in
fdivr
in
in
in
in
in
fcos
in
fdivr
jmp
jmp
ljmp
push
push
fdivrp
repz
call
int3
mov
call
adc
adcl
xor
sub
in
fcom
enter
sar
in
in
stc
out
out
sti
lock
push
jmp
push
ljmp
hlt
call
push
call
push
out
push
out
push
in
mov
jno
imul
add
subb
jl
add
jns
add
jns
add
jo
add
imul
pushl
out
out
out
fdivrp
out
fdivrp
out
out
fdivr
in
fdivr
in
in
in
in
out
cli
out
push
fdivrp
repz
ljmp
call
mov
std
push
sub
pusha
push
sub
push
fmulp
mov
fcmovnbe
int
loopne
sar
jmp
hlt
jmp
cld
repz
cli
icebp
push
in
push
in
push
jmp
push
ljmp
repz
push
call
jmp
mov
jb
cmpsl
test
test
jno
test
jo
xchg
imul
ss
jge
ss
mov
icebp
loop
push
loope
out
loope
push
loopne
out
out
fdivrp
out
out
out
in
out
fdivr
push
jecxz
push
sti
jmp
into
jmp
rol
mov
sub
inc
push
sub
add
mov
leave
std
sar
out
fcos
icebp
jmp
out
clc
clc
icebp
push
in
push
in
push
in
push
in
push
in
push
jmp
push
jmp
push
ljmp
repz
repz
push
out
push
out
push
out
push
in
push
in
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
loop
push
loop
push
loope
push
loope
out
loopne
out
loopne
push
loop
push
cld
jmp
mul
aad
out
fmulp
jmp
fadd
jmp
lret
mov
pop
xor
mov
push
sub
or
adc
add
int
fcom
jmp
fstp
in
out
push
lock
stc
clc
icebp
clc
lock
push
lock
push
out
push
out
push
out
push
in
push
in
push
in
push
in
push
in
push
jmp
push
ljmp
repz
repz
push
out
push
out
push
in
push
in
push
in
push
in
push
jecxz
push
jecxz
push
jecxz
push
in
push
cld
out
repz
jmp
into
jmp
fmul
call
mov
stc
push
sub
inc
push
sub
add
add
add
add
add
iret
mov
fst
into
std
loopne
fdivr
jmp
in
out
sti
div
cld
stc
hlt
clc
icebp
clc
icebp
clc
icebp
clc
lock
push
out
clc
out
push
out
push
out
push
out
push
in
push
in
push
loope
push
xlat
ret
cmc
jmp
push
jmp
push
ljmp
repz
push
call
push
out
push
out
push
out
push
out
push
cld
out
push
ljmp
jmp
sarl
mov
push
sub
pop
push
sub
add
rol
lret
fcos
in
in
call
jmp
cli
cmc
cli
cmc
stc
repz
stc
repz
stc
repz
clc
repnz
clc
repnz
clc
icebp
clc
lock
push
lock
ffreep
mov
mov
inc
adc
jno
pushl
lahf
test
push
in
push
in
push
jmp
push
jmp
push
ljmp
hlt
ljmp
imul
push
cli
stc
out
loope
repz
in
loope
jmp
mov
out
push
sub
sub
sub
add
add
add
fxch
out
jecxz
out
loope
out
ljmp
cld
clc
std
clc
cli
cmc
cli
hlt
stc
hlt
stc
hlt
stc
repz
stc
repnz
stc
repnz
sub
ss
pushl
jbe
cwtl
ss
push
out
push
out
push
out
push
in
push
in
push
in
stc
out
cli
out
in
hlt
ljmp
jmp
aad
loop
mov
jb
sub
adc
adc
add
sarl
clc
in
loopne
call
in
jmp
cli
std
clc
sti
idiv
sti
idiv
cli
cmc
cli
cmc
fadd
mov
outsb
and
jg
add
xchg
xor
lcall
aaa
push
call
js
push
icebp
push
lock
clc
lock
push
lock
cli
repnz
cli
cli
icebp
out
hlt
jmp
out
in
in
loop
jmp
aad
std
xchg
insl
push
nop
push
sub
adc
push
sub
add
shll
in
loope
call
in
jmp
div
icebp
std
stc
cld
cld
stc
sti
idiv
ret
mov
pushl
add
xchg
xor
call
xor
pushl
add
scas
subl
cli
hlt
idiv
cld
cli
repz
cmc
in
in
out
out
in
jecxz
jmp
fxch
std
mov
jns
push
sub
adc
sub
add
add
add
mov
mul
in
ljmp
push
hlt
repz
cli
stc
idiv
std
stc
pushl
sub
pusha
and
ljmp
add
jb
add
imul
add
jmp
fdivr
cld
stc
repnz
cli
repz
push
out
jmp
in
out
call
xchg
jp
push
sub
andnps
adc
add
add
add
iret
mov
out
out
out
jmp
ljmp
icebp
icebp
push
div
sti
cli
clc
call
lds
decl
add
push
sbb
jmp
sbb
stc
cmc
cli
div
push
repnz
push
out
jmp
out
call
out
sbbb
push
sub
or
adc
add
add
add
fmul
mov
out
sti
in
in
jmp
out
out
in
push
lock
repz
div
stc
clc
idiv
std
cld
sti
jmp
loop
fcmovnbe
iret
cld
stc
cmc
cli
div
push
hlt
lock
icebp
in
push
out
ljmp
in
cld
mov
push
sub
adc
adc
add
add
add
mov
add
in
ljmp
out
in
out
push
lock
push
repnz
push
hlt
hlt
clc
clc
idiv
cld
sti
cli
std
cld
std
cld
cld
std
cld
cld
std
cli
sti
stc
idiv
clc
cmc
hlt
push
repz
icebp
out
push
out
in
push
out
in
out
jmp
fldenv
sub
push
sub
pop
push
sub
add
add
add
adc
mov
in
in
jmp
in
in
in
out
out
out
push
icebp
icebp
push
repnz
repz
repnz
repz
repz
repz
repz
repz
repz
push
icebp
out
push
out
out
push
in
ljmp
vandnpd
adc
or
push
sub
add
add
add
aam
pop
jmp
int3
test
jmp
loop
jmp
jmp
in
in
in
in
in
in
in
in
in
in
in
in
in
ljmp
in
out
stc
in
loop
in
xlat
scas
mov
sub
pop
push
sub
add
add
add
incl
incl
jg
add
incb
jg
add
clc
add
add
clc
add
add
push
add
add
jmp
add
add
cld
add
aas
incl
add
loopne
add
incl
add
addb
add
add
incl
add
add
add
cld
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
incl
add
add
add
incl
add
jmp
add
pop
incl
add
cld
add
aas
incl
add
add
add
daa
add
pop
daa
add
sub
add
sbb
add
sbb
add
faddl
add
and
add
es
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
imul
outsl
add
jae
and
add
add
add
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
and
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
and
add
add
add
xor
add
add
and
add
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
cld
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
fadds
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
sbb
add
add
add
add
add
add
add
add
add
add
imul
outsl
add
jae
and
dec
add
inc
add
add
add
bound
and
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
dec
add
inc
add
inc
add
add
add
pop
add
add
add
jle
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
inc
add
inc
add
dec
add
add
pop
add
add
add
jb
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
mov
add
aam
add
xor
outsl
xor
xor
xor
adc
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
pushf
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
lea
test
cmp
fistpll
add
or
pop
and
gs
jp,pt
cmpb
mov
xchg
ds
ds
movsb
ds
ds
mov
