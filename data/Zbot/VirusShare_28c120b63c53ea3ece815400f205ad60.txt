push
mov
sub
movl
movl
mov
add
mov
mov
add
mov
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
sub
imul
mov
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
sub
mov
movl
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
movl
movl
mov
or
mov
add
cltd
idiv
add
mov
jmp
movl
movl
lea
mov
movl
mov
add
mov
mov
cltd
idiv
mov
sub
mov
movl
mov
and
add
mov
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
lea
mov
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
movl
movb
movl
movl
mov
add
imul
mov
movl
cmpl
jl
mov
sub
mov
jmp
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
add
push
push
lea
push
push
call
mov
movl
jmp
mov
ret
mov
movl
movl
mov
imul
imul
mov
movl
mov
or
mov
add
cltd
idiv
imul
mov
lea
mov
mov
mov
add
imul
mov
movb
movl
cmpl
je
movzbl
test
je
movl
movl
movl
mov
or
add
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
sub
mov
sub
mov
lea
mov
mov
mov
imul
imul
mov
jmp
lea
mov
mov
or
mov
mov
add
mov
sub
mov
movl
cmpl
je
mov
sub
mov
jmp
movl
movl
lea
mov
mov
and
mov
imul
imul
mov
call
movl
call
movl
mov
push
call
add
mov
or
mov
add
cltd
idiv
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
mov
and
sub
mov
sub
mov
movl
movl
mov
and
mov
or
sub
imul
mov
jmp
cmpl
je
movl
mov
or
mov
add
cltd
idiv
imul
mov
jmp
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
movl
mov
mov
movl
mov
and
mov
sub
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
lea
mov
movl
mov
and
mov
mov
sub
mov
movl
mov
sub
mov
movl
lea
mov
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
mov
mov
movl
mov
imul
add
mov
movl
lea
mov
mov
mov
and
mov
sub
mov
movl
mov
cmp
jne
movl
mov
and
imul
mov
sub
mov
lea
mov
mov
mov
add
mov
sub
mov
lea
mov
mov
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
lea
mov
mov
mov
or
mov
mov
sub
imul
mov
jmp
movl
mov
push
mov
push
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
push
mov
push
mov
push
call
add
jmp
call
call
movl
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
sub
imul
mov
mov
or
mov
add
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
add
mov
lea
mov
mov
and
mov
mov
add
add
mov
movl
cmpl
je
movl
mov
cmp
jne
mov
add
mov
cltd
idiv
imul
mov
jmp
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
mov
add
mov
sub
mov
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
movl
lea
mov
lea
mov
mov
mov
and
mov
imul
imul
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
movl
cmpl
jne
movl
cmpl
jg
movl
mov
add
add
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
cmpl
jne
movl
mov
sub
add
mov
cmpl
jne
cmpl
jg
movl
lea
mov
mov
and
mov
imul
mov
movl
lea
mov
lea
mov
mov
mov
and
mov
add
mov
sub
mov
jmp
movl
movl
mov
and
imul
mov
mov
add
mov
cltd
idiv
add
mov
mov
or
sub
add
mov
mov
and
add
add
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
imul
imul
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
movl
mov
and
sub
imul
mov
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
sub
mov
jmp
jmp
movl
movl
lea
mov
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
movl
lea
mov
mov
or
mov
mov
add
mov
sub
mov
cmpl
jne
movl
lea
mov
mov
mov
sub
mov
jmp
movl
mov
add
mov
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
mov
or
mov
and
sub
imul
mov
movl
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
mov
add
mov
movl
mov
add
mov
cltd
idiv
add
mov
jmp
movl
lea
mov
mov
mov
sub
mov
sub
mov
movl
movl
mov
or
add
mov
movl
cmpl
jg
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
movl
mov
imul
add
mov
movl
mov
cmp
jl
lea
mov
mov
mov
add
mov
sub
mov
movl
mov
or
mov
or
sub
imul
mov
jmp
movl
movl
mov
or
mov
or
imul
imul
mov
movl
movl
mov
or
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
movl
mov
add
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
imul
mov
movl
movl
mov
and
mov
add
cltd
idiv
mov
movl
lea
mov
lea
mov
mov
mov
and
mov
imul
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
movl
lea
mov
mov
and
mov
mov
sub
add
mov
movl
lea
mov
movl
mov
or
mov
sub
imul
mov
jmp
cmpl
je
movl
movl
mov
cmp
jl
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
movl
lea
mov
mov
or
mov
imul
mov
movl
mov
add
mov
cltd
idiv
imul
mov
movl
movl
lea
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
imul
mov
mov
add
mov
cltd
idiv
add
mov
push
call
add
mov
movl
lea
mov
mov
mov
or
sub
imul
mov
movl
mov
cmp
jg
mov
push
push
mov
push
call
add
mov
mov
mov
movl
mov
add
add
mov
mov
push
call
add
mov
mov
mov
mov
add
mov
cmpl
jb
movl
mov
or
sub
imul
mov
movl
cmpl
jne
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
lea
mov
mov
or
mov
add
cltd
idiv
add
mov
push
call
mov
movl
mov
or
mov
and
sub
mov
mov
push
call
add
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
cmpl
je
movl
movl
movl
mov
or
add
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
imul
mov
jmp
movl
mov
sub
mov
sub
mov
cmpl
jne
movl
movl
mov
cmp
jne
movl
mov
or
imul
add
mov
mov
add
mov
cltd
idiv
add
mov
movl
mov
or
add
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
add
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
add
mov
jmp
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
imul
mov
lea
mov
mov
mov
and
mov
or
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
imul
imul
mov
mov
add
mov
cltd
idiv
mov
movl
mov
add
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
jmp
movl
movl
lea
mov
mov
and
mov
mov
sub
imul
mov
movl
cmpl
jg
jmp
movl
mov
imul
mov
lea
mov
mov
mov
imul
mov
mov
and
mov
or
add
mov
sub
mov
movl
movl
lea
mov
lea
mov
mov
mov
and
mov
mov
add
imul
mov
lea
mov
movl
mov
and
mov
imul
add
mov
movl
lea
mov
mov
and
mov
mov
add
add
mov
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
movl
mov
imul
add
mov
jmp
movl
lea
mov
mov
and
mov
add
add
mov
movl
movl
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
sub
mov
sub
mov
movl
movl
lea
mov
mov
mov
sub
mov
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
or
mov
mov
and
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
imul
mov
sub
mov
mov
sub
imul
mov
jmp
lea
mov
lea
mov
movl
mov
mov
or
mov
imul
mov
sub
mov
mov
and
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
mov
and
imul
mov
sub
mov
jmp
movl
movl
mov
sub
mov
mov
sub
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
movl
mov
add
mov
cmpl
je
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
lea
mov
movl
mov
mov
or
add
imul
mov
jmp
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
lea
mov
mov
add
mov
cltd
idiv
mov
mov
imul
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
jmp
jmp
jmp
shlb
shlb
add
xor
add
xor
add
xor
add
sub
add
inc
xor
add
push
add
xchg
add
movsb
xor
add
xor
add
loop
add
repnz
add
sbb
add
xor
add
dec
add
pop
add
push
add
xorb
add
add
mov
add
fidivl
add
in
add
clc
add
push
aaa
add
sbb
add
es
add
xor
add
inc
aaa
add
push
aaa
add
fs
add
jb
add
xorb
add
aaa
add
enter
aaa
add
call
aaa
add
or
add
push
cmp
add
cmp
add
add
push
cmp
add
add
add
jl
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
je
add
scas
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
es
add
inc
cmp
add
cmp
cmpb
add
add
add
add
data16
add
add
dec
cmp
add
cmp
add
cmp
add
add
or
add
cli
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
add
add
add
add
push
cmp
add
add
es
add
add
clc
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
inc
push
pop
dec
dec
inc
inc
pop
push
pop
pop
dec
push
inc
push
pop
inc
push
inc
pop
inc
inc
dec
dec
push
push
inc
add
add
add
dec
adc
aad
inc
add
add
add
call
add
inc
add
add
add
add
xor
add
add
add
or
add
pushf
cmp
add
add
fs
add
xor
add
add
mov
xor
add
xor
add
cmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
inc
xor
add
push
add
xchg
add
movsb
xor
add
xor
add
loop
add
repnz
add
sbb
add
xor
add
dec
add
pop
add
push
add
xorb
add
add
mov
add
fidivl
add
in
add
clc
add
push
aaa
add
sbb
add
es
add
xor
add
inc
aaa
add
push
aaa
add
fs
add
jb
add
xorb
add
aaa
add
enter
aaa
add
call
aaa
add
or
add
push
cmp
add
cmp
add
add
push
cmp
add
add
add
jl
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
je
add
scas
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
es
add
inc
cmp
add
cmp
cmpb
add
add
add
add
data16
add
add
dec
cmp
add
cmp
add
cmp
add
add
or
add
cli
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
add
add
add
add
push
cmp
add
add
es
add
add
clc
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
pusha
add
gs
inc
imul
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
jb
outsl
arpl
fs
js
push
inc
fs
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
jb
jns
jbe
inc
gs
jns
je
insl
dec
outsb
outsw
add
jae
inc
imul
jb
add
call
fs
gs
jne
arpl
add
add
imul
je
jo
gs
bound
arpl
js
add
bound
inc
insb
insb
outsl
arpl
dec
add
insb
gs
jae
dec
jne
gs
add
add
jb
popa
je
gs
popa
addr16
add
push
add
gs
je
push
push
add
cmp
insb
jae
jb
outsb
push
add
lods
add
je
je
dec
popa
outsb
fs
add
sub
inc
gs
imul
js
xchg
add
je
jb
outsl
jb
outsl
fs
add
push
popa
imul
insb
gs
bound
arpl
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
imul
adc
push
jb
je
inc
imul
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
jb
popa
je
gs
popa
addr16
add
xor
popa
je
inc
jbe
outsb
je
add
xchg
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
gs
fs
imul
add
imul
outsl
jne
arpl
add
add
jp
outsl
push
gs
jne
arpl
add
add
popa
insb
inc
jb
add
inc
gs
gs
inc
imul
outsl
insl
jo
jb
push
je
imul
add
gs
je
inc
imul
gs
jbe
outsb
je
add
push
popa
imul
jo
imul
inc
gs
jns
je
insl
push
imul
gs
gs
imul
sub
inc
gs
imul
cmpsl
add
outsl
bound
inc
jb
add
movsb
add
outsb
fs
insb
outsl
jae
inc
push
dec
outsl
je
imul
outsl
outsb
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
cmp
insb
jae
jb
outsb
inc
add
cmp
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
bound
push
outsb
insb
outsl
arpl
add
inc
outsb
fs
inc
imul
gs
je
jbe
outsb
je
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
lcall
insb
gs
outsl
imul
add
mov
fs
insb
outsl
jae
add
add
gs
js
daa
add
je
imul
bound
gs
add
add
push
popa
imul
insb
gs
bound
arpl
add
bound
dec
outsl
arpl
add
inc
gs
imul
bound
gs
add
dec
add
imul
imul
insb
gs
bound
arpl
add
gs
je
inc
jbe
outsb
je
add
cltd
add
je
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
popa
fs
imul
outsl
insl
jo
jb
push
je
imul
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
add
je
outsl
jns
arpl
add
push
gs
arpl
gs
imul
add
gs
je
push
imul
inc
add
add
je
gs
je
je
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
cmc
add
data16
je
arpl
inc
add
imul
arpl
outsb
add
sub
push
gs
gs
jae
inc
popa
jo
jne
add
add
push
outsl
jae
dec
gs
popa
addr16
add
cmp
inc
gs
outsb
jne
je
imul
add
dec
outsb
push
arpl
pop
add
je
jne
dec
outsb
jne
add
imul
popa
jae
inc
add
inc
add
je
popa
jo
jne
add
mov
dec
outsb
data16
popa
je
push
arpl
add
arpl
outsb
jne
je
insl
add
add
jbe
push
imul
mov
inc
jb
ja
outsl
arpl
push
arpl
add
je
imul
outsb
addr16
add
movsb
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
arpl
gs
imul
push
inc
push
xor
cs
insb
add
imul
outsl
push
outsb
imul
imul
inc
outsl
push
jb
popa
je
jae
insb
popa
jae
add
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
outsl
push
ja
je
push
inc
outsl
outsb
je
js
add
outsl
push
jne
jo
outsb
fs
insb
popa
jae
dec
bound
arpl
bound
inc
outsl
push
gs
jb
js
inc
insb
popa
outsb
imul
pusha
add
push
gs
imul
insb
insb
outsl
arpl
jns
pop
add
push
gs
imul
imul
push
jo
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
push
gs
jb
push
outsl
push
gs
data16
pop
add
push
gs
insl
gs
insb
popa
jae
dec
bound
arpl
add
inc
outsl
push
gs
gs
jae
push
gs
gs
jb
arpl
jae
add
inc
outsl
push
gs
gs
jae
dec
popa
jb
push
je
add
push
add
push
imul
jb
outsl
addr16
je
add
inc
outsl
push
imul
inc
insb
jae
add
inc
outsl
push
imul
jae
popa
addr16
imul
inc
outsl
push
imul
insb
insb
outsl
arpl
jns
push
add
push
imul
imul
push
jo
add
inc
outsl
push
imul
popa
jae
dec
bound
arpl
add
push
imul
popa
outsb
outsb
gs
dec
outsl
outsl
imul
insb
xor
cs
insb
add
push
dec
inc
imul
jb
outsb
je
add
inc
dec
dec
xor
cs
insb
add
add
js
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
sub
add
add
add
dec
dec
lods
cmc
repnz
push
and
loop
add
fistl
adc
repz
in
or
in
xor
or
add
or
pusha
pop
add
ss
add
dec
cmc
data16
testl
mov
inc
adc
mov
inc
jnp
adc
sbb
cmc
sbb
dec
sbb
sbb
loopne
push
jne
arpl
adc
xor
add
fisttpll
push
xchg
imull
mov
mov
std
mov
and
pushf
dec
mov
sahf
add
sbbb
std
out
popa
int3
add
scas
shrb
sub
mov
inc
sbb
adc
jnp
stos
insl
lods
and
in
fwait
subb
sub
nop
jb
mov
sub
cmc
adc
mov
insl
push
inc
mov
add
sub
xor
mov
mov
add
int
xchg
orl
pop
sub
push
scas
mov
scas
gs
das
ss
push
sahf
push
inc
insw
insb
and
mov
add
sub
pusha
sbb
jns
imul
aam
xor
cli
sahf
jne
add
sub
adc
push
mov
nop
repnz
push
gs
adc
pop
inc
jbe
sub
inc
in
and
in
push
std
int
xchg
add
mov
inc
inc
push
adc
push
cs
dec
mov
dec
sub
inc
jp
xchg
or
mov
xchg
shll
repnz
sbb
add
insl
mov
inc
lods
adc
nop
int
adc
xchg
out
fbstp
insl
shrb
cmp
scas
inc
sbb
mov
inc
dec
mov
in
imul
in
sti
and
push
hlt
in
rolb
cmpsl
pop
bound
adc
cmp
cmp
negb
cli
pop
imul
scas
mov
dec
sahf
pop
inc
push
insl
dec
and
mov
add
xchg
in
inc
mov
add
out
or
fs
decl
jo
aam
clc
inc
hlt
std
add
outsb
mov
scas
mov
leave
lahf
cmc
inc
adc
test
dec
sahf
imul
or
sub
rolb
out
in
shll
sahf
test
outsl
pop
jno
lcall
sub
pop
inc
into
arpl
cmpsb
vmovddup
or
mov
mov
mov
popa
inc
push
mov
or
and
mov
mov
mov
sbb
push
adc
sahf
xor
adc
stc
je
gs
in
mov
add
inc
outsb
adc
ss
pop
and
mov
stc
rolb
adc
dec
in
dec
and
cmp
cmpsl
imul
xchg
pop
sbbb
jmp
in
and
xor
mov
sahf
jno
bound
and
mov
add
stos
or
or
lods
cwtl
inc
adc
mov
dec
in
adc
inc
inc
push
insl
and
aam
loope
push
cmp
mov
or
mov
mov
jle
mov
in
decl
mov
add
subl
add
repnz
int
adc
movsb
loopne
adc
clc
scas
push
std
pop
jmp
mov
popf
mov
ret
inc
fisttpl
and
int3
adc
and
iret
push
jb
dec
stc
inc
fsubr
js
jmp
mov
mov
cld
xchg
in
data16
xchg
or
lods
cmp
jae
mov
pop
adc
push
cmpb
cmp
sub
ja
adc
xchg
cmc
into
inc
les
mov
push
xchg
popf
xchg
scas
pushf
mov
movsb
ss
jmp
dec
cmpsl
aaa
xchg
adc
divb
dec
out
cmp
and
imul
lret
test
scas
jbe
out
repnz
pop
cli
mov
leave
dec
rcll
push
mov
test
add
ja
mov
push
xchg
cmpsl
out
sub
adc
xor
inc
inc
ret
or
jg
mov
jl
popf
xchg
jge
lea
dec
lcall
jne
lahf
loopne
jne
add
add
stos
or
fmul
jnp
fs
or
xchg
adc
insl
imul
cli
and
add
push
stos
movsb
out
in
push
lods
loopne
and
and
ss
pushf
mov
pop
sub
div
push
jb
sbb
mov
outsl
sbb
jns
cwtl
pop
sub
mov
push
pop
jge
mov
jbe
lcall
push
cltd
jg
sbb
ss
enter
dec
addb
lcall
es
mov
fistps
movsl
aas
std
cmpsl
out
outsb
xor
inc
xchg
cmpsl
dec
daa
push
and
jp
cmpsb
cmc
mov
cmc
int
adc
cwtl
inc
nop
push
arpl
sbb
push
dec
scas
shl
rorb
mov
mov
sbb
cmp
cmp
mov
pop
imul
xor
sbb
or
bound
test
jb
divb
xchg
mov
mov
call
adc
aas
test
fldln2
out
mov
ljmp
cltd
xor
fadd
daa
not
loop
leave
cmp
aaa
cmp
xchg
fnsave
sub
hlt
or
sub
incl
mov
push
adc
aam
and
shl
or
cwtl
clc
pop
push
rolb
cmp
or
outsb
lea
and
push
push
mov
push
sub
pop
cli
jmp
fxam
adc
lock
rorb
and
pop
decl
xchg
lods
sub
xchg
lods
divb
xchg
test
add
incl
leave
faddp
call
std
sub
rorl
shlb
sub
jnp
cmp
rclb
push
ret
cli
or
ret
cmp
push
inc
dec
xor
dec
ds
sub
cwtl
ss
pop
lea
incl
and
mov
or
xlat
jne
scas
mov
sbb
add
call
rcrl
jle
push
mov
dec
inc
rclb
repnz
pop
jbe
scas
mov
cmp
rcrl
lret
pop
imul
js
and
cld
cld
pop
jmp
inc
lods
xchg
cli
adc
jecxz
xchg
mov
sub
in
subb
pop
mov
sti
jle
and
cmp
cmp
mov
pushl
mov
xor
and
sahf
sbb
imul
fs
shrb
inc
iret
out
mov
loope
xchg
pop
das
xor
shrl
lret
push
push
cmpsl
mov
push
adc
mov
jne
dec
outsb
call
push
jg
jnp
and
or
inc
gs
in
out
mov
fcompl
out
aas
lods
sti
sbb
repnz
mov
icebp
mov
repnz
loope
cmc
push
mov
pushl
dec
inc
push
pop
cli
dec
shlb
dec
add
enter
pop
add
jbe
mov
jno
inc
gs
outsb
cmp
mov
xor
incl
push
scas
cmp
lret
mov
loop
xchg
xchg
mov
loop
repz
out
fcompp
xchg
ret
mov
mov
add
xlat
aad
push
test
iret
add
dec
mov
push
inc
data16
sub
ds
lods
mov
cmp
cmpsb
sbb
push
cmpsb
sbb
push
sahf
cmp
add
adc
sbb
or
pop
mul
cli
add
out
cmp
loope
sbb
jbe
insb
testb
inc
rcrb
sub
xor
jle
les
aas
rclb
adc
int3
sti
inc
movl
and
push
repz
aad
fwait
pop
das
out
jmp
sbb
in
ret
test
loop
or
mov
sti
and
int
daa
xor
mov
mov
and
aaa
and
aaa
stos
lods
mov
out
mov
mov
mov
pusha
pop
idivb
mov
mov
rcr
cwtl
rcl
jne
xlat
dec
daa
ret
std
mov
out
xor
icebp
loope
in
sarb
loope
pop
sbb
enter
sar
cmp
xor
or
outsl
push
mov
add
xchg
mov
mov
std
xor
push
inc
dec
and
inc
or
sbb
mov
nop
test
push
dec
cmp
loop
sti
in
mov
in
call
mov
pop
adc
push
testb
xor
in
imul
xor
mov
push
xor
pop
aad
adc
sub
mov
jo
mov
xor
xchg
add
and
xchg
push
push
jb
notb
mov
mov
test
mov
mov
push
mov
inc
inc
jne
push
pop
sbb
jo
fdivr
sbb
fsqrt
inc
sbb
imulb
xor
xor
sbb
push
sub
cmp
or
mov
ljmp
mov
shlb
adc
fwait
roll
out
lds
lcall
aas
insb
stos
dec
outsb
adcb
cli
mov
lret
cltd
daa
repz
fstpt
and
cli
xchg
in
inc
out
shr
push
in
in
sbb
mov
sbb
jmp
popl
push
adc
lcall
add
cwtl
or
pushf
xchg
lcall
aas
mov
cwtl
xchg
mov
lods
scas
cmp
inc
push
mov
sbb
sahf
cmp
sbb
jns
shlb
daa
rorl
jb
mov
pusha
jns
cs
mov
test
mov
mov
jne
mov
sahf
ror
pusha
test
leave
push
xchg
xchg
dec
jg
daa
pop
faddl
push
mov
fs
jo
pop
les
inc
cmc
outsl
cmp
dec
adc
pop
incl
xor
pop
cmp
or
mov
push
daa
jno
sub
mov
dec
stos
cmp
or
sahf
mov
rep
scas
cmp
es
push
dec
dec
add
push
pop
pop
insb
jo
cli
push
jb
ja
imul
incb
mov
aas
push
jne
cmp
sbb
dec
pop
cmpsb
lods
sub
cmp
mov
and
lret
sub
pop
push
movsb
daa
psrad
repz
jnp
pop
pop
push
jo
inc
addr16
jmp
popl
das
mov
sub
cli
pop
in
and
lds
sub
cld
fcoms
cwtl
cmp
loop
je
ljmp
and
and
jmp
cmpsb
inc
repz
jmp
add
roll
fdivl
out
lcall
xchg
adcb
and
or
mov
push
mov
mov
adc
jne
jnp
cli
or
pop
push
cmp
push
sbb
and
and
mov
push
leave
outsl
orl
push
sahf
lret
add
cwtl
or
imul
fdivr
das
mov
ds
outsl
cmpsl
or
mov
xchg
pushf
ficomps
stc
mov
inc
adc
sub
out
adc
push
loope
cmpb
pop
sub
insl
and
jg
divb
adc
and
sub
cld
movsl
adc
jl
icebp
in
in
cmc
jp
cmpl
jecxz
jecxz
fdivr
or
dec
push
add
pop
jmp
loope
int3
mul
cld
cli
out
sub
and
lret
xchg
cmp
das
and
sti
das
cs
xchg
or
leave
cld
or
adc
out
pcmpgtw
mov
mov
movsb
movsl
jnp
xchg
mov
cmp
mov
popa
jns
inc
xor
jo
dec
adc
push
sub
lcall
pop
pop
negl
sub
push
jnp
mov
lods
ss
cli
testl
out
xor
stos
mov
xchg
jg
and
sub
sbb
inc
adc
add
sbb
jg
push
jo
jnp
jg
pop
pop
jae
shrb
jecxz
push
pop
scas
cmp
scas
push
dec
xchg
dec
add
xchg
sbb
cmp
movsl
sub
hlt
scas
inc
dec
or
clc
shl
mov
in
mov
ret
sahf
scas
out
adc
in
or
cmp
mov
call
repnz
iret
xor
hlt
std
jg
stc
out
mov
mov
lods
add
sbb
stos
repnz
data16
pop
insb
aam
push
gs
jb
je
pop
pop
scas
fs
cld
push
sarb
imul
xchg
push
loop
mov
rcl
and
fisttpl
mov
jne
mov
jns
mov
addb
mov
mov
ja
leave
pushw
imul
dec
inc
xor
repnz
repnz
clc
decl
sub
mov
sbb
loope
mov
jae
movsl
stos
cmpsl
sub
jb
inc
fcoms
dec
mov
mov
pop
inc
jae
shlb
jae
fs
xchg
lods
dec
das
xchg
sub
or
cmp
pop
xlat
orb
push
sbb
fcoml
cmp
mov
sub
sub
adc
cmp
mov
xor
mov
add
push
imul
adc
pop
pusha
jle
inc
imul
mov
pop
movl
mov
aas
das
lcall
push
jle
pop
jae
jb
aas
cli
mov
xchg
pop
sbb
enter
hlt
pop
cmp
push
out
cltd
mov
addl
jg
out
or
push
or
cmc
push
push
ljmp
pop
popa
dec
arpl
cli
xor
fucomip
pop
or
incb
call
or
hlt
lret
xchg
xchg
pop
scas
idiv
inc
jnp
cmpsb
xor
pop
xchg
outsl
pop
cltd
jl
movsl
fisubl
cmpl
push
jge
arpl
fldt
dec
adc
adc
mov
sbb
and
xor
push
inc
pop
cmc
scas
clc
adc
jnp
add
jge
pop
je
mov
and
scas
lret
add
xlat
lock
fwait
in
mov
push
cmpsl
fistps
stc
stc
std
jmp
push
xor
add
mov
or
fs
inc
push
inc
pop
cmp
addr16
push
xor
push
das
mov
das
mov
fdivrl
fdivl
pop
push
sbb
dec
mulb
inc
adc
mov
pop
push
movsl
or
xor
jns
lret
mov
ljmp
idivb
mov
and
inc
adc
push
add
addr16
mov
dec
dec
jl
fcoml
pop
inc
inc
or
add
stos
sub
icebp
std
ficomps
sti
mov
jmp
jmp
ljmp
aad
incl
outsb
lret
rolb
pop
push
mov
jne
cmp
xor
dec
je
sub
enter
fidivrs
ret
jecxz
or
out
inc
test
xor
cli
and
jge
push
and
mov
push
sub
sub
nop
sub
and
lods
cltd
sub
arpl
arpl
sub
js
add
cmp
mov
call
ret
mov
popf
lret
xchg
rorl
cwtl
sub
mov
in
rcl
clc
lret
rorb
mov
xchg
frndint
lock
jg
daa
jp
adc
arpl
adc
lret
stos
sub
fidivrs
xchg
rolb
jnp
dec
push
mov
xchg
bound
std
out
adc
mov
mov
into
aam
cli
sti
xchg
cmc
out
fildll
inc
or
push
movsl
jmp
imul
jb
dec
push
jbe
pop
and
adc
cmp
ljmp
ss
cmp
repnz
lret
mov
cmp
add
or
aas
lahf
lock
outsb
jns
inc
lcall
jb
dec
js
jge
pusha
jns
js
outsl
inc
mov
testb
adc
sbb
sti
push
sbb
int3
mov
cmp
mov
dec
dec
jo
insb
jno
jp
pusha
pop
mov
adc
cmp
or
jnp
pop
jg
add
dec
jg
or
dec
loope
int3
xchg
sbb
or
push
pop
pushf
test
repnz
lcall
jp
pushf
fidivs
pop
arpl
mov
sub
lds
jnp
data16
mov
dec
out
inc
enter
pop
add
enter
fstpl
scas
add
ficompl
cmpsb
jne
call
aaa
rcrb
test
ss
mov
sub
and
loopne
mov
bound
fsts
out
pop
loop
mov
or
cmp
or
add
cld
mov
fisubrs
sbb
ljmp
ret
out
add
rorb
jp
imul
push
cmp
xchg
push
nop
pop
jl
data16
inc
sbb
lret
pop
push
test
add
nop
mov
pop
mov
cltd
xor
sbb
test
icebp
or
mov
lock
cs
or
mov
jecxz
mov
stos
or
jmp
push
imul
test
ja
pop
cmp
mov
and
cli
mov
mov
push
pop
xchg
cmc
lret
in
cmp
filds
pop
xor
stos
out
and
mov
dec
push
add
pusha
and
push
dec
xchg
or
mov
iret
mov
nop
fsub
fmuls
cmp
mov
sbbl
in
xchg
ret
add
scas
and
push
in
jp
jmp
xor
pushf
pop
push
loop
leave
aad
xchg
into
pusha
mov
push
or
push
mov
adc
out
cmp
in
ret
dec
insl
sub
cmpsb
pop
push
jb
cld
xchg
mov
test
shrl
loopne
enter
test
dec
or
adc
push
imul
push
jae
jp
push
bound
push
jns
inc
push
push
ret
std
and
sub
stos
jo
loopne
out
or
adc
add
push
clc
sarl
out
sbb
sahf
daa
ljmp
add
mov
jno
mov
enter
enter
rcrl
fadd
jg
ret
roll
fcoms
aaa
push
or
mov
cmp
sbb
xchg
cmp
sbb
sub
sbb
sub
cmc
adc
sbb
jle
and
jne
or
fisttpll
iret
add
xchg
pop
push
idivb
outsl
jge
arpl
aad
or
movsl
cmp
movsb
aaa
add
and
enter
mov
sbb
in
sub
call
mov
xchg
inc
out
shl
push
call
fucomip
out
enter
fbstp
test
iret
fldl
inc
stos
jge
xchg
scas
sbb
mov
or
push
inc
jl
lods
mov
pop
testl
icebp
sbb
sbbb
out
sbb
and
mov
cli
scas
cmpsl
psraw
mov
outsb
add
popf
adc
rorb
pop
jno
addb
mov
pop
mov
mov
add
push
mov
out
out
add
jg
jnp
pusha
push
inc
scas
pop
mov
pop
jne
inc
pop
push
cmpsb
cmp
cmc
xchg
out
iret
in
bound
mov
bound
mov
aaa
xor
or
inc
cmp
dec
gs
loop
or
je
jne
js
jmp
out
inc
sbb
push
dec
addr16
or
xlat
inc
insl
adc
js
mov
dec
fistpl
adc
addl
lock
ljmp
mov
ss
dec
cs
jo
xor
xchg
fildll
pop
add
and
fs
jno
aas
sbb
mov
sbb
cmp
sti
dec
fbld
add
in
decl
lahf
clc
sbb
cltd
add
fdivrl
addr16
fbstp
ljmp
insb
xor
and
negb
call
xchg
insl
jnp
cmp
xor
jo
mov
scas
rcrb
adc
lret
jb
jo
push
mov
pop
int
es
inc
sub
ss
add
outsl
jne
lahf
arpl
dec
sub
out
or
out
repz
loopne
fcmovbe
test
push
cmpsl
repnz
cmp
icebp
aas
pusha
shlb
rolb
push
mov
jle
jge
hlt
xchg
ficoms
clc
mov
fdivr
test
mul
loopne
movsb
mov
mov
divb
sbb
and
or
mov
std
or
lock
sbb
cli
push
ds
inc
popa
adc
inc
popa
sbb
cmpsb
jle
movsb
xor
push
adc
cld
std
cmc
mov
ds
xor
imul
mov
sub
jns
in
cmp
pop
and
leave
mov
fisttpll
pop
pop
push
inc
or
fisttpl
adc
cwtl
xor
push
lock
push
inc
cmp
push
or
lock
call
lock
stc
stc
cmc
fildll
jbe
arpl
imul
mov
gs
dec
sbb
or
cmpsl
push
xor
mov
push
inc
sahf
test
push
negl
xchg
outsb
push
add
add
sub
notb
lret
lahf
push
cmp
mov
xor
jne
ljmp
lock
repnz
push
pop
loope
ds
enter
in
clc
cmp
push
lahf
sub
fists
lahf
mov
mov
test
sub
dec
jne
out
push
ffreep
sti
mov
shll
dec
iret
mov
icebp
lods
push
lret
cli
xchg
lock
mov
mov
cmp
loope
add
adc
sub
push
rorb
xchg
jns
or
mov
cmpsl
ficomps
sub
and
aas
into
push
icebp
scas
lock
in
loop
xor
lods
or
dec
clc
lcall
cmp
sub
pop
lock
test
les
fwait
sub
into
mov
popl
fucomp
cmp
pop
in
scas
sbb
add
jg
mov
push
or
out
or
dec
push
jg
arpl
mov
cmp
sub
pop
add
aam
aam
mov
je
mov
jg
mov
jns
lds
push
inc
mov
and
push
or
dec
insl
add
sub
cmp
inc
add
int3
rcl
inc
sbb
into
clc
adc
or
xlat
pop
test
and
add
sub
aam
sbb
aad
cs
mov
xlat
push
mov
xor
push
gs
adc
int3
inc
outsb
insl
into
and
into
jno
fiaddl
mov
or
cld
aas
jmp
adc
ss
insb
jbe
int3
lock
in
lcall
and
aaa
out
mov
cli
xchg
jno
xor
xchg
sub
and
test
xlat
and
lahf
mov
pop
loope
push
imul
outsl
loope
andl
fcoml
cmp
jle
lahf
in
leave
adc
repnz
sub
cmpsl
inc
into
xchg
lcall
mov
out
cmp
inc
mov
push
mov
mov
idiv
jecxz
and
xchg
aas
xchg
jge
pop
lock
fisttpll
pop
adc
sub
js
loopne
add
cmpsb
sbb
ficoml
loopne
pop
mov
ret
insl
test
jge
lock
aas
dec
jge
add
fisubl
clc
mov
sarb
fs
movsb
lods
mov
mov
inc
cmp
clc
call
test
mov
loopne
adc
aad
xchg
push
cwtl
jbe
in
sub
xchg
xchg
mov
jmp
xor
sbb
push
push
int
lds
divb
xchg
popf
jne
loop
repz
cmp
sub
or
mov
movsl
idivb
test
xor
jmp
mov
sub
pop
push
movsl
pop
incl
adc
test
inc
mov
adc
push
mov
inc
pusha
inc
push
stc
lock
aam
adc
push
xchg
add
je
sahf
pop
mov
mov
lock
fimuls
mov
sub
idiv
mov
mov
lock
cmp
xor
lock
out
jnp
pushf
jae
rcrb
aas
ret
xchg
cli
pop
inc
in
pusha
sbb
and
xchg
push
or
shl
inc
cmp
negb
push
push
xchg
add
xchg
and
das
movsl
in
call
jp
dec
push
cli
inc
jle
xchg
movsb
dec
roll
enter
call
icebp
mov
cmp
mov
sti
sbb
jo
addr16
ficompl
and
jbe
in
xchg
add
jo
xchg
jae
jg
mov
jae
jl
in
std
aam
inc
or
nop
dec
aaa
mov
and
push
push
mov
sbb
sub
lods
push
sbb
jno
out
ds
lea
lcall
push
jno
push
gs
jl
arpl
jp
out
mov
inc
dec
and
daa
inc
mov
lahf
push
pop
push
in
inc
cmpsl
aaa
sub
xchg
ds
jle
push
cmp
pop
jns
js
xchg
stc
rcrb
ds
adc
xchg
das
loope
mov
testb
lret
sub
inc
movsb
xchg
into
sub
jmp
push
subb
faddl
sub
jge
into
call
or
js
or
mov
adc
test
mov
cltd
inc
xor
add
dec
mov
jg
dec
pop
loope
mov
push
dec
das
lahf
pop
jle
imul
int
or
sarl
push
xchg
jae
xchg
jp
ja
or
dec
aaa
mov
push
add
adc
mov
stos
dec
inc
adc
jo
or
xor
adc
stc
sbb
jae
popa
loop
mov
add
mov
test
xchg
mov
in
and
jb
xchg
mov
imul
push
insl
jmp
bound
dec
cmpsl
orl
sub
push
lahf
xlat
test
bound
out
sbb
pop
add
in
notl
adc
pop
test
rcll
je
pop
fs
xchg
push
loopne
mov
jle
jge
dec
sub
push
sahf
xchg
xor
dec
scas
push
loop
stos
out
jg
fdivl
mov
insb
adc
mov
inc
ds
popf
lret
lea
dec
lret
mov
incl
fdivl
scas
shrl
dec
jno
dec
cmpsb
pop
or
and
mov
pop
bound
aaa
and
adc
add
bnd
cmpl
and
xor
xchg
mov
loope
adc
pop
mov
test
inc
adc
fisttpl
xor
xchg
inc
sub
push
lcall
fdivrl
sub
adc
cs
ja
scas
fcom
js
ss
lea
lret
mov
sarl
push
pop
and
sbb
add
sub
cld
add
ret
xchg
inc
sub
mov
dec
mov
mov
pop
jle
cmp
adc
ss
imul
or
lea
std
jl
inc
or
mov
sub
test
fcmove
imul
push
xchg
hlt
sub
cli
push
adc
imul
sahf
mov
fisttpll
aaa
addr16
aam
mov
xchg
sub
jno
xchg
ja
pop
add
lock
movsb
lea
daa
fadds
jb
fs
mov
push
inc
popf
test
push
std
mov
decl
pushw
xor
mov
push
fmul
aaa
enter
push
adc
shr
ja
mov
shlb
pop
or
std
inc
test
loope
mov
rolb
sbb
call
leave
loopne
mov
notl
mov
shrl
stos
test
fsubl
iret
imul
mov
cwtl
ja
fldenv
xchg
ds
mov
and
stos
pop
xchg
iret
loope
mov
mov
dec
mov
dec
jp
or
xchg
daa
fs
lret
lahf
and
outsb
fsubrl
ret
adc
shr
rcll
jl
out
add
dec
stos
and
add
mov
inc
sahf
cld
inc
mov
mov
add
add
aaa
popa
inc
rclb
or
jbe
fldenv
js
les
cld
push
les
xchg
adc
adc
lahf
popf
inc
insb
insl
dec
and
push
add
and
arpl
ret
nop
imul
or
mov
lcall
lods
inc
push
insl
or
push
mov
add
inc
lock
mov
and
xchg
les
add
gs
adc
sahf
enter
into
and
inc
cmp
inc
rcll
in
and
mov
incl
jp
out
les
xor
dec
gs
adc
push
and
mov
sbb
adc
add
xchg
mov
sub
int3
jns
les
subl
pop
rcll
sahf
push
inc
jo
fwait
and
mov
cmp
jne
loope
cltd
adc
mov
mov
in
or
imul
adc
push
dec
sub
stos
gs
adc
and
insl
dec
and
sub
fildll
push
cmp
inc
jecxz
and
or
in
in
pop
and
dec
jns
lret
push
lods
andb
ja
fwait
aad
les
insl
jbe
dec
mov
add
inc
std
adc
or
dec
mov
in
mov
nop
das
js
aaa
in
adc
aam
xor
scas
cmpsb
adc
lahf
addl
mov
add
sub
push
inc
aam
xor
and
and
add
cwtl
mov
les
jbe
ja
icebp
aam
xor
mov
adc
lahf
push
inc
and
and
and
subl
mov
fbld
mov
pushf
sahf
inc
push
push
jns
les
adc
push
stc
adcl
sbbb
and
mov
add
aaa
movb
ret
test
iret
mov
roll
cmpl
dec
adc
push
jg
sub
xchg
out
adc
dec
inc
push
insl
inc
and
mov
add
sub
adc
xchg
in
fsubl
mov
dec
inc
insb
daa
jnp
push
mov
dec
aam
xor
rclb
sahf
cltd
inc
rep
xor
add
add
sub
aaa
jle
stos
adc
or
cwtl
mov
mov
mov
icebp
jnp
push
xor
maskmovq
mull
adc
add
loop
dec
xchg
dec
mov
cmp
or
mov
in
bound
push
mov
lret
inc
aam
js
les
inc
push
enter
out
xor
adc
adc
insl
sub
int3
mov
add
cmp
rolb
adc
insl
test
out
mov
jns
les
adc
push
add
xor
in
gs
adc
inc
into
push
and
adc
dec
xchg
add
inc
ret
or
mov
in
lods
and
jns
pushfw
sub
inc
cld
adc
push
call
xor
gs
mov
or
push
insl
shll
mov
add
sub
xchg
inc
pop
adc
sub
and
mov
nop
inc
dec
jmp
adc
push
inc
addl
fs
inc
sbb
and
mov
add
int3
cmp
dec
adc
or
sbb
lock
gs
mov
les
xor
push
xor
out
popf
adc
insl
mov
stos
mov
add
sub
and
or
mov
and
mov
movl
and
push
aas
adcl
pop
notl
les
das
mov
add
mov
pop
mov
and
sub
sub
jg
push
push
sub
lock
push
testb
andl
cmp
mov
add
sub
cli
inc
mov
je
or
call
nop
push
pushf
sub
add
les
aas
push
imul
stc
les
insl
lret
mov
add
sub
cmp
inc
out
adc
or
mov
in
push
and
pushf
sub
push
jns
les
push
jge
dec
aam
xor
sub
adcb
sahf
xor
and
mov
add
sub
cmp
inc
mov
or
movsl
cmc
xchg
in
dec
and
push
inc
inc
adc
les
out
and
adc
insl
pop
and
mov
add
or
pop
inc
xor
ja
sbbl
nop
out
pushf
int3
inc
jp
js
les
adc
push
subl
cmp
lret
lahf
in
shrb
cmp
add
sub
adc
or
add
inc
mov
or
int
scas
adc
push
fildl
mov
bound
inc
outsb
insl
xor
pop
mov
cmp
aaa
adc
push
js
fs
or
stos
aas
mov
adc
sub
push
mov
dec
add
fcomip
xchg
mov
imul
mov
dec
sub
ds
divb
das
aam
lock
pop
jg
movsl
push
cmp
sub
or
xchg
notb
mov
hlt
sti
jo
out
jl
pop
pop
lock
insl
mov
lods
out
push
pushf
cs
andb
fs
sub
fildll
jge
cmc
and
mov
pop
repz
push
xor
rorl
lret
mov
int
push
lock
xchg
movsb
pop
in
mov
pop
lods
and
scas
outsb
inc
testb
jbe
aaa
pop
lods
dec
cli
in
adcb
pop
and
outsb
push
inc
dec
mov
stc
or
nop
cli
pop
xchg
call
shrl
dec
cmp
xchg
fisttps
push
inc
push
push
push
mov
mov
sub
mov
push
fwait
mov
mov
sub
fidivs
mov
cli
jns
rolb
icebp
iret
int
dec
insl
fcoml
int3
enter
imulb
and
xlat
aas
xchg
std
dec
enter
sbb
out
mov
mov
dec
sub
ss
fildll
hlt
ss
syscall
mov
int
xor
aam
mov
mov
pshufw
pop
pop
push
cli
add
fstl
jmp
cwtl
cmp
out
xor
inc
leave
push
push
jae
out
ret
test
notb
mov
lret
mov
jne
out
jle
adc
pop
jbe
jae
and
pop
stos
bound
div
std
repz
aaa
sbb
sub
cltd
cwtl
and
or
rclb
add
lcall
sbb
movsl
outsl
inc
out
pmaxub
pop
sub
lcall
aas
pusha
xchg
lcall
shr
or
int3
cmp
ds
mov
std
mov
mulb
popf
sub
add
pop
int
test
enter
pop
outsl
call
stc
out
sub
dec
jno
into
lods
inc
push
cli
insl
xor
sbb
lahf
repz
test
lock
jg
ljmp
mov
or
insb
shll
cmc
and
popl
lea
add
mov
test
addr16
lock
xor
cmp
pextrw
push
and
add
mov
call
nop
xor
ja
imulb
mov
mov
xchg
std
pop
cs
xor
icebp
lock
add
cs
incl
lods
mov
sbb
notb
aam
jle
std
push
sbb
popa
clc
imul
mov
mov
lcall
ret
pop
idivb
push
cltd
cli
sbb
xchg
lock
xor
pop
jl
ret
imul
mov
mov
pop
notb
icebp
addl
adc
arpl
mov
out
xor
lcall
ficompl
divb
xor
jae
decl
sbb
mov
aas
divb
test
iret
popl
xchg
out
out
lret
inc
loop
out
ja
inc
or
cmc
jno
aad
mov
lcall
fmuls
dec
insb
bound
shlb
cmpsl
decl
inc
inc
jle
pop
fiaddl
idiv
jnp
adc
ja
jnp
ljmp
push
lock
xchg
sub
call
popa
shlb
adc
mov
mov
or
adc
xor
test
enter
and
jns
cli
mov
pop
sbb
repz
xchg
add
jge
mov
mov
inc
testb
lock
dec
add
or
jbe
mov
jecxz
mov
mov
xor
cmp
aas
pop
cli
add
loope
out
xor
xor
cmp
loop
pop
inc
rolb
add
pop
lds
mov
dec
cmc
into
mov
std
inc
and
pushf
loopne
les
push
lock
inc
insl
cmp
outsl
mov
add
sub
cmp
inc
ret
adc
in
ret
mov
addr16
arpl
jns
les
adcl
or
adc
or
insl
dec
and
mov
add
sub
sub
adc
or
and
addl
cs
push
sbbl
sahf
cmc
inc
add
mov
pop
xchg
inc
dec
adc
or
cs
inc
xlat
jns
adc
adc
sahf
ljmp
pop
add
sub
adc
or
mov
in
xchg
and
add
inc
or
adc
push
and
mov
mov
mov
cmp
and
and
cvtpi2ps
adc
sti
in
pop
and
mov
mov
stc
les
adc
enter
gs
adc
sahf
mov
and
pop
add
cmp
out
pop
adc
or
insb
mov
mov
push
int
jns
les
adc
push
js
pop
jae
leave
adc
insl
lahf
jb
mov
mov
inc
or
adc
movsb
out
shr
and
xchg
inc
sbb
jns
les
add
push
xor
and
adc
and
push
and
mov
add
leave
dec
popa
or
mov
scas
and
mov
jns
les
xorl
gs
adc
insl
push
and
arpl
add
sub
cmp
inc
adc
xrelease
cmpsb
js
les
inc
push
pop
sbbl
gs
sahf
xchg
insl
dec
and
imul
inc
cmp
inc
adc
mov
pushf
and
pushf
and
jnp
jbe
or
push
xchg
imul
ret
adc
lahf
jle
push
mov
add
sub
loope
inc
jb
shr
mov
nop
cli
pushf
lods
inc
adc
jns
les
sub
bound
mov
imul
adc
notl
call
xor
jp
adc
incb
cmp
subl
lds
cmp
insl
inc
and
mov
add
inc
cmpsl
adc
or
mov
mov
cwtl
inc
fucom
js
les
and
aam
xor
mov
adc
mov
dec
mov
add
mov
mov
or
and
mov
cs
and
dec
les
adc
push
out
adc
xor
mov
lea
inc
sahf
mov
and
jp
xchg
sub
adc
stos
mov
nop
mov
sbb
into
out
mov
cmp
mov
gs
ss
sub
cmp
inc
adc
stos
in
cwtl
in
lahf
sub
mov
stos
adc
push
mov
jae
mov
inc
adc
sahf
push
inc
ret
and
mov
add
inc
sub
or
lcall
mov
das
inc
mov
adc
push
jno
cmpl
jecxz
xor
mov
add
sub
adc
or
sbb
movsl
mov
in
inc
daa
cmpsb
js
les
mov
insb
subl
rclb
lea
inc
mov
sub
adc
or
pop
and
testl
les
ljmp
in
inc
mov
repz
mov
add
aam
add
mov
movsl
or
in
dec
pushf
dec
inc
gs
jns
push
mov
shll
notb
push
sahf
xchg
insl
xor
popf
mov
aaa
movl
mov
jbe
sbb
sarb
les
xor
and
mov
add
sub
adc
adc
int
jp
mov
pushf
fs
pop
jnp
add
dec
adc
push
testl
push
outsb
insl
xchg
mov
add
sub
cmp
or
pusha
mov
fsubs
repnz
and
mov
leave
les
adc
push
je
mov
push
xor
jle
dec
adc
jl
sahf
insl
sub
mov
add
push
cmp
inc
push
push
sub
dec
and
nop
pop
pushf
out
inc
mov
js
les
sahf
push
or
movsb
push
gs
inc
scas
insl
hlt
and
mov
add
sub
xchg
inc
sub
push
mov
in
jnp
dec
mov
lret
sarl
les
adc
pop
sbb
test
gs
setle
inc
in
add
mov
add
or
addr16
sahf
adc
xor
cld
and
push
jns
les
addb
mov
xchg
xchg
add
aam
push
jg
xchg
aaa
xor
sbb
xor
and
negb
xor
idiv
mov
mov
scas
pop
rolb
inc
mov
sbb
sbb
cmpsb
imul
jecxz
int
lods
pop
pop
sub
mov
pushf
ficoms
add
mov
fistps
lret
lock
push
mul
jo
repnz
jbe
je
and
pusha
jp
or
jg
cmp
xchg
and
popf
mov
dec
mov
jp
ljmp
pop
aam
test
xor
pushf
fsubl
fcmovnb
push
xchg
nop
int
idivb
ret
mov
push
jbe
mov
pop
mov
pusha
mov
in
mov
jp
sbb
mov
cmpb
mov
arpl
popa
test
pushf
shll
lods
mov
sbb
inc
xchg
pop
icebp
clc
mov
jl
cmp
inc
mov
rolb
mov
in
out
jne
test
bound
leave
imul
cli
stc
fisubl
cmp
idivb
outsb
xchg
mov
enter
popa
test
pop
aaa
divb
jo
sti
lcall
es
mov
pop
sbb
sti
or
pop
rclb
dec
or
push
jge
divb
inc
iret
pop
iret
repz
test
mov
call
xor
sbb
xor
repz
inc
lods
repz
mov
dec
shlb
iret
xor
add
inc
repnz
push
repnz
iret
fs
je
inc
iret
test
push
iret
xchg
repnz
iret
mov
or
dec
or
inc
or
cmc
gs
lods
scas
mov
aam
dec
jmp
loope
subl
dec
adc
imul
call
sbb
fsubl
xchg
idivb
jo
push
call
iret
jg
repz
fs
ja
dec
adc
pop
adc
call
sub
xchg
jg
jecxz
pop
jb
ljmp
lahf
sbb
and
adc
gs
jle
adc
jp
je
lock
gs
or
or
test
idivb
cmp
adc
inc
jno
jne
adc
pop
pop
push
repz
fistpll
push
icebp
adc
add
xchg
inc
out
or
jecxz
scas
mov
mov
ds
jle
push
jb
outsb
jmp
into
outsb
sti
sar
sub
push
out
or
push
sahf
or
add
iret
cmp
sbb
dec
repnz
pop
bnd
insb
out
dec
lds
xchg
push
loopne
ljmp
and
mov
inc
adc
outsl
sahf
out
out
pop
lock
imul
gs
push
in
or
add
dec
or
cli
sbb
and
jecxz
repnz
je
aam
pop
call
jmp
adc
iret
pop
test
cld
aam
in
pop
add
pusha
jecxz
daa
add
mov
lcall
xchg
dec
lcall
lret
add
scas
scas
andb
lds
inc
jns
sbb
adc
jle
sti
add
xchg
and
int3
mov
mov
dec
jne
cli
aad
outsb
jecxz
adc
lds
lret
orl
pop
in
sub
cli
clc
xor
mov
jecxz
pop
adc
xchg
pop
add
sbb
fistl
xchg
out
loope
xor
bound
fwait
jno
stos
adc
lret
mov
mov
jmp
leave
sbb
ret
jl
std
iret
ror
mulb
addr16
push
jl
push
les
int3
idiv
or
fisubrs
xchg
or
sbb
test
loopne
xchg
shl
xor
cmp
adc
sbb
inc
sarl
stc
imul
mov
xchg
out
jae
lods
js
loop
aam
mov
xor
lahf
mov
es
cmp
mov
mov
cs
je
ja
push
iret
inc
mov
add
test
repz
outsl
lods
mov
sti
enter
test
out
cli
sub
mov
lret
fidivrs
xchg
dec
jg
mov
pop
lock
out
and
aaa
fmull
jae
int
mov
test
sub
jno
cli
retw
jl
push
sub
mov
imul
cli
arpl
int3
mov
jno
inc
sub
lock
cmp
adc
lock
xor
sbb
repz
push
jecxz
add
and
pusha
lods
and
lods
ret
dec
out
ret
push
out
ret
imul
cmpsl
ret
imul
ret
cmc
in
add
cmc
cs
mov
lret
jo
outsb
pusha
jo
outsb
pop
jo
outsb
fs
outsb
jns
cmp
fdiv
cmp
jnp
int
push
push
aas
das
std
jo
outsb
cmp
outsb
add
jo
outsb
pop
jo
outsb
sbb
mov
sti
test
xor
test
aaa
sti
cltd
testb
iret
dec
repnz
iret
pop
jge
js
jge
js
jge
js
jge
js
jl
js
jge
js
jl
js
jl
js
jge
js
jge
js
jl
js
jge
js
jge
js
jge
js
jge
js
jge
js
jge
js
jge
js
notl
repnz
inc
cmpb
sahf
sub
hlt
mov
call
es
cmp
inc
xor
nop
mov
mov
into
arpl
pop
repz
mov
orl
rorl
jb
xor
aad
aaa
inc
mov
notl
push
cmp
push
loopne
dec
fsubrl
inc
cmp
add
dec
pushf
sub
push
mov
and
xlat
jmp
jnp
inc
loope
aad
loopne
iret
sub
push
cmp
sbb
jnp
test
jp
mov
loope
mov
repnz
adcb
out
mov
cmp
stos
rolb
push
daa
out
andb
inc
jae
arpl
push
push
fstl
test
repnz
div
repnz
mul
repnz
notl
cwtl
imull
repnz
imul
imul
nop
sahf
mov
imul
stos
imul
scas
imul
pop
cmpsl
mov
addr16
mov
imul
imul
cmp
cmp
jg
inc
aas
jg
push
cmp
xor
cs
jl
mov
clc
repz
loop
fistpll
loop
ffreep
in
dec
enter
lret
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
ret
xchg
loop
fisttps
test
pop
or
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
loop
fists
loop
fistps
loop
fistps
loop
fistps
loop
fistps
loop
fistps
sbb
push
loop
fistps
loop
fbld
loop
fbld
loop
fbld
loop
fbld
loop
fbld
cltd
fbld
loop
fbld
loop
fildll
loop
fildll
loop
fildll
loop
fbstp
loop
fbstp
loop
fbstp
loop
fbstp
loop
fbstp
jmp
fbstp
loop
fbstp
loop
fistpll
loop
fistpll
loop
fistpll
loop
fistpll
loop
fistpll
loope
cmp
loop
fistpll
loop
filds
in
inc
loop
filds
push
icebp
jae
push
int3
inc
inc
test
inc
inc
je
inc
inc
lods
faddl
dec
faddl
mov
fmull
movsb
fmull
inc
fmull
inc
push
jg
dec
push
call
dec
pop
call
nop
adc
xchg
pushl
popf
imul
out
xor
jle
pop
in
cmpsb
lock
into
test
into
lcall
int3
lcall
ret
lock
int
lock
lock
mov
and
mov
mov
cmp
or
mov
cmp
or
mov
ret
cmp
mov
mov
xlat
cwtl
sub
push
test
ds
cwtl
fwait
das
push
fwait
fwait
xor
lcall
push
cwtl
xchg
and
push
call
fwait
cmp
pushf
in
es
loopne
aaa
push
xchg
fwait
cmp
xchg
in
cmp
clc
ljmp
iret
aas
add
fucomi
push
xchg
les
push
cltd
out
push
std
fistpl
push
add
sahf
imul
or
mov
sbb
cmp
enter
jb
insb
push
jb
cmp
in
jbe
pop
les
and
insb
and
insb
and
lock
rep
adc
insb
sub
insb
sub
dec
push
les
daa
in
jbe
sub
stc
insb
sub
insb
es
dec
sub
loopne
test
sbb
ja
dec
push
mov
popl
mov
mov
add
jle
xlat
or
adc
or
lods
movzwl
xor
xor
int3
xor
mov
aaa
mov
cmp
mov
aas
mov
ds
and
xchg
and
xchg
and
mov
daa
mov
es
sub
lahf
sub
mov
mov
push
fwait
xchg
push
sahf
fwait
xchg
push
popf
fwait
cwtl
push
xchg
fwait
mov
push
jmp
pop
push
ljmp
push
call
xor
xor
xor
insb
ljmp
paddsw
cmp
out
and
ja
jnp
jbe
jnp
jbe
jnp
jbe
jnp
jbe
jnp
jbe
jnp
jbe
mov
jbe
jnp
jbe
jnp
jecxz
pop
mov
sahf
xchg
loop
mov
xchg
aad
xchg
hlt
and
stos
and
test
fwait
push
and
push
and
scas
and
shrb
lock
sub
scas
lock
mov
cmp
mov
ror
mov
ror
mov
iret
lret
xor
mov
out
lcall
into
jb
insb
aad
xchg
imul
jl
fidivl
insb
imul
test
jb
imul
sbbb
imul
inc
std
ljmp
ret
ficomps
into
or
lahf
iret
iret
mov
insb
loope
int
lock
lock
lock
lret
sarb
ficomps
fdivl
xchg
leave
loope
in
loope
in
loopne
sub
jae
jbe
mov
in
loope
in
loope
in
stos
addr16
sub
xor
sub
repnz
out
push
call
mov
and
xor
xor
cs
add
push
xor
cmp
xor
or
add
lods
repnz
lods
repnz
mov
or
and
or
pop
mov
sub
xor
cs
xor
cs
xor
cs
xor
cs
xor
cs
aas
xor
pop
mov
sbb
jb
pusha
sub
jb
cvtps2pd
aas
or
pop
xlat
and
pop
xlat
and
and
and
mov
sub
sub
xor
cs
xor
call
sub
inc
sub
sbb
sub
sbb
jae,pn
aad
shll
jmp
shll
jmp
nopl
xlat
imull
psubusw
into
in
lcall
jmp
mov
push
jmp
and
out
add
out
or
call
mov
push
ljmp
push
repnz
jmp
loopne
into
pop
loop
aad
loop
jb
in
fbstp
push
addr16
popa
fwait
out
xor
out
ss
call
add
stos
push
shlb
imul
sbb
clc
les
roll
or
rolb
adc
xlat
add
xlat
cmp
xlat
cmp
adc
xlat
aas
adc
xlat
and
xlat
and
sete
sub
mov
jb
insb
pop
jb
xor
rorb
or
insb
mov
lret
adc
leave
fcmovbe
rolb
shl
fsubp
shl
shl
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
out
std
sbb
jmp
xchg
sbb
lret
push
leave
cwtl
xchg
push
enter
iret
cwtl
xchg
push
into
cwtl
cwtl
push
int
cltd
daa
std
cmpsl
lcall
or
fiadds
imul
cmpsl
int
out
cmpsb
int
lock
stc
add
movsb
int
lock
int
lock
int
lock
int
lock
int
lock
or
mov
or
mov
or
lock
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
lock
int
lock
sbb
int
lock
sbb
or
lock
lock
push
lock
pop
lock
and
test
and
test
and
fwait
int
lock
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
xor
ljmp
lock
int
lock
int
lock
int
lock
int
lock
cmp
loop
cmp
loope
cmp
lock
inc
lock
inc
lock
int
lock
int
lock
int
lock
int
lock
inc
lock
dec
lock
int
lock
cmc
and
push
cmc
and
stos
cmc
and
stos
cmc
and
test
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
int
lock
cmp
mov
cmp
mov
cmp
lock
aas
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
int
lock
dec
lock
int
lock
dec
lock
lock
lock
dec
lock
dec
lock
push
lock
push
lock
push
lock
int
lock
aad
jg
push
shrl
int
push
mov
setb
fsub
fdiv
ret
fidivs
shl
xchg
jecxz
loop
jmp
jnp
shl
iret
aas
xlat
push
mov
inc
in
int
push
mov
psrad
in
in
test
out
popa
shl
int
loopne
int
lock
int
lock
int
lock
int
lock
int
lock
jle
lcall
jb
fucom
mull
fwait
jo
sub
jle
fs
jb
push
add
xchg
and
add
cmpsb
sub
cmp
or
clc
dec
mull
loopne
xchg
in
adc
out
or
mov
or
push
cmp
sub
inc
and
mov
inc
inc
das
scas
js
les
andl
push
sbb
lds
sub
pop
mov
inc
cmp
aad
jns
les
cmpsl
inc
out
cld
and
gs
adc
popa
adc
outsb
arpl
pop
mov
adc
cwtl
les
sbbb
bound
inc
and
jns
les
mov
pop
add
or
insb
inc
or
insl
or
pop
test
or
pop
sub
adc
rcpps
mov
pushf
push
inc
mov
inc
adc
push
inc
test
mov
mov
mov
arpl
mov
gs
mov
adc
push
jne
aam
xor
jae
mov
inc
jno
mov
jle
sub
jg
sub
addb
orl
xchg
lods
enter
test
cmp
or
nop
mov
xchg
nop
ljmp
mov
inc
adc
dec
mov
divl
pop
ljmp
outsb
gs
les
add
inc
mov
lds
or
into
incb
pop
push
inc
pop
imul
xor
pop
jno
dec
push
inc
jnp
pop
pusha
flds
fistpll
jecxz
std
idivl
pop
insb
aas
push
repnz
addr16
adc
enter
xor
in
inc
adc
and
mov
mov
push
in
arpl
add
add
aam
xor
push
sbb
ficomps
or
int
add
enter
popf
sti
in
shrb
cld
push
in
sbb
adc
popf
ljmp
out
cwtl
and
mov
cmc
fstl
jmp
popf
cmp
movsl
mov
iret
das
inc
cmpb
add
inc
popf
add
test
loopne
adc
jmp
sub
mov
jo
js
mov
ficoms
xchg
push
pop
push
add
das
mov
add
les
or
out
das
xchg
jmp
pop
test
lret
cltd
bound
fsts
cs
sbb
mov
cli
dec
xchg
push
mov
fstpl
sbb
ficoml
mov
mov
mov
and
stc
popa
pop
xor
push
adc
xchg
in
cmp
jnp
add
ficompl
jne
sbb
push
lret
mov
ret
lds
mov
jbe
and
mov
add
xor
popl
sub
int
adc
popf
inc
aaa
push
mov
pop
ss
cmc
scas
lds
mov
push
or
mov
mov
les
rcll
push
clc
mov
add
cmp
dec
cs
lods
pop
mov
push
mov
add
lds
mov
stc
inc
repnz
punpckldq
push
out
lds
mov
adc
mov
mov
cli
addr16
xchg
adc
add
xchg
jg
lds
add
pop
sarb
lds
gs
daa
add
inc
in
xchg
cwtl
sub
dec
pop
sbb
mov
lds
mov
aam
lret
push
xlat
std
shll
or
shlb
lahf
adc
add
lahf
dec
test
movl
insb
adc
push
rcrb
loop
mov
in
jno
push
addb
add
mov
adc
mov
lds
mov
mov
push
push
dec
add
adc
inc
mov
and
mov
js
lds
jae
in
lods
mov
aam
aas
rol
sbb
adc
sub
adc
movsb
inc
and
dec
add
punpcklbw
add
aad
iret
nop
vunpcklps
adc
int3
adc
ljmp
push
pop
pushf
adc
andb
add
nop
insl
sbb
adc
jle
cmpsl
andb
and
dec
insl
cmp
cmc
bound
adc
insb
and
ljmp
dec
mov
pop
scas
cmp
or
xchg
pushf
add
rcr
xchg
sahf
pop
les
push
mov
cmp
pop
push
add
inc
jge
and
and
inc
and
mov
insl
cmpl
xlat
cmp
sub
arpl
and
pop
mov
mov
and
insl
push
or
sahf
nop
lds
push
repz
sbbl
aad
iret
test
jge
adc
in
mov
test
push
adc
popf
jae
fidivs
cld
sbb
pusha
xor
fisubl
sub
and
sahf
js
fildl
xorb
into
movsl
data16
pop
pop
pushf
and
lds
repnz
ljmp
add
aam
cmp
mov
in
test
sub
mov
lds
push
scas
mov
pop
nop
scas
test
mov
in
or
pop
pop
adcl
adcb
pushf
adc
ljmp
lcall
dec
shrl
cwtl
xchg
lcall
adc
add
add
add
xchg
lds
jg
in
jae
pop
jbe
movsl
cmp
and
or
mov
adc
inc
testb
xor
fldl
mov
mov
push
add
sbb
xor
pop
in
push
popf
xchg
bound
gs
adc
adc
aad
dec
dec
pop
xorl
sbbb
inc
or
sbb
add
sbb
xchg
sub
inc
jbe
mov
xchg
push
inc
dec
adc
popf
xor
add
mov
and
cwtl
push
ljmp
lds
sbbl
cmpsb
pushf
add
std
in
xor
pop
push
adc
outsl
mov
pop
push
mov
inc
pop
mov
add
or
xchg
adc
ljmp
add
inc
fisttpl
add
sub
jns
jbe
jae
add
pop
push
imul
inc
fwait
mov
aaa
lcall
push
das
lds
daa
fiadds
clc
pcmpgtw
cmp
pop
and
mov
cmpsb
sahf
xchg
into
pop
ds
inc
fists
dec
adcl
jne
jnp
inc
and
dec
cs
test
dec
push
sbb
dec
adc
insl
aad
jnp
cmp
push
sbb
std
jo
mov
and
xorb
sub
test
push
sahf
loopne
pop
jge
or
push
xchg
xor
inc
adc
cltd
push
and
xchg
xor
ds
dec
xchg
pop
inc
dec
ss
pop
dec
arpl
rclb
arpl
push
outsb
orb
scas
pop
dec
and
inc
lret
rorl
mov
mov
jne
sahf
xor
add
push
jp
lds
mov
adc
mov
dec
push
movsb
add
push
dec
and
inc
and
nop
pop
push
xor
inc
cmp
adc
popf
sbb
adcb
sub
cwtl
in
jge
sbb
inc
imul
push
inc
push
push
jnp
cmp
adc
test
repz
xor
pop
push
push
outsb
jmp
arpl
pusha
inc
jb
out
sub
data16
xchg
push
outsl
popa
sbb
push
hlt
lods
in
movb
dec
cmpsb
jg
mov
inc
sbb
push
jp
leave
xor
sbb
mov
sbb
mov
inc
and
jnp
cmp
clc
xlat
ljmp
xor
mov
sti
adc
or
cmpb
out
imul
mov
sbb
push
or
dec
addr16
data16
lcall
outsl
call
pop
lds
imul
into
xchg
xor
or
shlb
pop
icebp
push
repz
jns
mov
xor
dec
push
xor
mov
sub
ret
sub
pop
imul
xchg
popf
int3
inc
pop
push
mov
mov
ror
dec
xchg
or
adc
and
push
loop
dec
sbbb
fs
mov
idiv
pop
arpl
pop
jecxz
inc
movsb
pop
lret
push
jge
xor
je
pop
jns
jg
xor
in
cmp
mov
jbe
movsb
stos
add
adc
fsubp
subl
leave
jge
adc
and
jbe
mov
jno
scas
idiv
sbb
stc
cs
xchg
pop
shlb
adc
lahf
incl
push
and
fiaddl
sti
jbe
out
cli
mov
sbb
push
mov
je
in
add
leave
fdivrs
push
sub
or
adc
mov
js
aaa
mov
imul
push
lods
call
dec
insw
sahf
jb
or
mul
aaa
das
ret
shrb
imul
rdtsc
imul
add
sub
fs
add
dec
cwtl
mov
and
adc
sub
popa
jge
inc
push
jge
mov
test
xor
test
addr16
lcall
or
inc
test
dec
sub
outsb
mov
inc
into
or
loop
inc
xor
aas
dec
sbb
jge
jge
cmp
movsl
ljmp
aam
js
pop
dec
jns
mov
jb
popa
jg
imul
sbb
adc
xchg
sub
arpl
mov
and
inc
xchg
shrd
daa
mov
cld
outsb
dec
int3
or
insb
fwait
mov
fwait
jae
cmovb
inc
xchg
fcomps
es
pusha
push
push
bound
pop
outsl
cwtl
imul
pop
cmp
repz
leave
xor
push
sbb
fs
mov
shll
cmpl
fildl
mov
shrb
push
mov
add
mov
cmp
mov
push
popf
cmpsl
dec
loop
data16
xor
or
sub
mov
push
or
adc
subb
and
adcb
dec
test
mov
pop
mov
and
adc
push
loope
sub
test
cld
lods
pop
ss
add
jne
pop
movsl
push
sub
xor
jo
push
insb
pop
in
jge
dec
scas
stos
subl
pop
ret
lcall
xchg
add
into
mov
les
inc
xor
adc
inc
pop
cmc
add
pop
sub
push
add
cs
adc
mov
sbb
cmp
xchg
xor
or
test
add
arpl
lahf
add
jo
addr16
jno
jmp
push
fwait
je
dec
lcall
push
arpl
sub
xor
loope
cmp
inc
mov
ja
mov
es
lss
inc
jo
sbb
push
shll
xor
loop
gs
mov
popa
fwait
ss
cli
iret
test
dec
outsl
or
out
packuswb
dec
hlt
jb
dec
fsubrs
pusha
sbb
xchg
pop
pop
js
mov
xchg
es
push
bound
loop
inc
lods
mov
adc
pop
sub
aam
fs
in
xchg
mov
xor
sbb
adc
sub
mov
or
adc
jb
popf
xor
fisubs
insl
jp
lcall
jne
clc
mov
sub
inc
in
xchg
or
dec
movsb
cmp
mov
in
stc
mov
jp
add
jl
out
pop
sti
gs
fisubl
stos
mov
std
xchg
mov
js
cmpsb
adc
mov
mov
push
sbb
div
aaa
jmp
je
jecxz
push
ret
add
out
adc
stos
lock
fstl
dec
cmp
or
or
out
fwait
push
mull
minps
inc
pop
fidivl
inc
mov
pop
and
push
xor
dec
jbe
jl
pop
jp
mov
jge
xor
sbb
mov
jle
pop
test
mov
pop
and
test
xchg
mov
xor
adc
je
jns
loope
cs
out
jne
and
aad
cmc
adc
or
sub
out
mov
and
adc
sti
xchg
sub
jb
inc
ljmp
jbe
and
dec
popa
adc
dec
inc
add
adc
mov
push
call
inc
add
arpl
add
pop
add
aam
cmp
dec
jg
test
jbe
cmp
or
sbb
insl
xor
inc
sbb
adc
or
imulb
jecxz
and
testl
mov
push
cmpsb
mov
je
cli
jl
imul
push
mov
mov
mov
mov
clc
faddl
sub
dec
mov
push
xchg
push
aaa
clc
iret
jl
divl
hlt
das
and
add
cmp
or
fbstp
fisubrs
out
xor
pop
data16
call
mov
jp
test
cmc
repnz
stos
push
std
pop
sbb
scas
test
movsl
mov
mov
pop
mov
bound
ss
rorb
das
dec
cmp
xor
aam
outsl
cmp
cmp
adc
clc
shlb
sub
dec
cmp
sub
jp
pop
pop
dec
push
sbb
sbb
xchg
jp
add
xor
inc
ret
int3
jecxz
push
fs
adc
xorl
push
dec
jmp
jns
sbb
and
cmpsl
sub
add
sub
std
bound
stc
jb
push
pop
jno
loop
xchg
aam
cmpsb
std
imul
jns
jnp
gs
jb
jns
ja
add
mov
mulb
cmp
ds
add
inc
add
push
push
dec
pop
repnz
icebp
pop
pop
pop
push
popa
imul
insb
inc
pop
insb
pusha
dec
pusha
mov
cmpsl
push
lea
js
fisubs
mov
pop
dec
mov
mov
push
and
dec
inc
sub
lar
jno
mov
dec
cmp
ret
sbb
jl
mov
outsb
push
addr16
mov
adc
mov
add
pop
cwtl
orb
bound
pop
mov
cmp
dec
addr16
aam
pop
rcl
cmp
mov
div
cmp
push
out
xchg
sbb
jmp
jp
pop
jnp
xorb
push
add
cmp
inc
sub
cmp
stc
in
repnz
xchg
push
mov
dec
mov
pusha
xchg
jl
imul
flds
pushl
dec
adc
and
clc
mov
popf
in
mov
add
push
cmp
push
xchg
popa
dec
cmp
adc
jg
xchg
daa
xlat
and
inc
push
jno
dec
dec
popa
jmp
and
ds
dec
loopne
cmp
popa
adc
nop
pop
divl
stc
dec
adc
shrb
test
hlt
add
das
xchg
mov
mov
enter
cs
hlt
dec
xchg
lods
mov
pop
adc
jp
and
sub
data16
lret
inc
loope
inc
sub
stos
loop
ja
stos
mov
or
pop
int
push
and
iret
or
test
inc
ret
das
je
imul
mov
out
mov
repnz
jns
mov
fstps
push
dec
xor
cmpsb
dec
dec
scas
test
push
aas
cmp
xchg
xor
rolb
pop
or
and
lock
fmul
and
outsl
and
add
and
xchg
lods
mov
jle
jmp
ljmp
mov
loop
mov
in
inc
and
mov
aaa
inc
or
adc
add
repnz
xchg
stc
jg
sub
ja
adc
fnstcw
test
or
movsb
pusha
jle
lock
jle
sbb
or
ljmp
sbb
rolb
outsl
sbb
xchg
sti
push
daa
cmpb
add
push
sub
sarb
dec
mov
add
inc
pop
or
imul
cmpb
movsb
add
aad
lcall
in
cmp
jbe
dec
lcall
push
and
scas
lods
insb
cld
out
stc
cmp
lds
bsr
mov
add
jl
dec
jo
dec
pop
and
ret
outsb
out
dec
sbb
jne
in
pop
outsb
push
add
mull
imul
ret
sub
sub
adc
stos
repnz
pop
pop
imul
cli
aad
inc
subb
adc
jp
int3
mov
inc
jg
fimuls
or
lock
push
int
mov
push
arpl
enter
sahf
ss
ret
test
outsb
imul
call
sahf
mov
iret
loope
push
cmp
mov
pusha
icebp
test
cmp
push
jp
mov
xor
pop
jge
push
insl
je
sbb
loopne
inc
sbb
ja
fcmove
xor
or
jmp
jle
or
dec
cmp
daa
sub
adc
or
inc
or
xchg
push
and
into
adc
in
test
pop
test
dec
adc
std
pop
push
xor
xor
jp
push
fucomi
xor
ret
push
inc
js
dec
or
sahf
dec
mov
mov
mov
addr16
mov
xor
lcall
add
idiv
fs
ret
mov
jns
and
xchg
dec
shlb
ret
clc
sbb
pusha
ds
jne
jle
or
push
fs
bound
sub
sbb
cmp
inc
add
sbb
push
adc
mov
andl
fs
xor
push
sub
mov
jle
fadd
jp
lods
cwtl
ficompl
pop
xchg
lea
push
pop
pop
xor
pop
xor
data16
adc
dec
xchg
adc
mov
fs
xor
cmp
lcall
and
inc
fdivs
sbb
xor
pop
dec
cmp
adc
loop
aas
enter
pusha
clc
fs
lret
stos
jae
add
inc
or
ljmp
rcll
sub
lea
mov
out
sbb
shlb
lods
pop
orb
ljmp
sub
and
or
pop
cltd
clc
lcall
adc
dec
adc
or
cmp
cmp
mov
mov
dec
mov
jl
aam
or
gs
pop
cmc
ja
push
inc
push
sub
inc
jae
and
aas
sub
mov
movsl
pusha
xchg
fldl
subl
or
fnsave
rorw
js
outsl
int
jmp
jae
movsb
fists
or
sahf
add
add
lods
mov
cmp
dec
lds
rolb
cld
and
cmp
lock
xor
cmp
in
je
inc
insb
pop
sahf
mov
mov
inc
xor
ljmp
push
add
mov
jae
ja
add
xlat
pop
fidivs
or
adc
mov
xor
dec
je
jmp
out
push
dec
mov
xchg
and
stos
and
inc
daa
jp
cs
lahf
add
jmp
jbe
mov
or
inc
cmp
sbb
insb
or
hlt
xchg
add
lods
arpl
dec
inc
push
inc
pop
shll
jge
push
scas
rcl
pop
xor
sbb
icebp
inc
jp
add
mov
and
jg
movl
push
pop
data16
sbb
fists
add
mov
mov
je
and
sbb
lea
lods
clc
mov
sub
adc
xor
sbb
ja
cmc
loopne
mov
mov
icebp
add
xchg
aas
orl
adc
rcll
out
push
cmp
inc
gs
sbb
cwtl
and
out
push
adc
mov
loop
dec
dec
pop
cmc
push
jnp
adc
inc
push
or
outsl
push
add
push
mov
and
push
es
adc
mov
movl
rorl
rcl
jns
cmc
scas
das
pop
adc
and
cld
jp
adc
jnp
jns
cmc
or
aas
jne
mov
ja
or
inc
loope
add
lret
xor
jb
sti
mov
add
in
jle
stc
ret
les
xlat
inc
jnp
stos
jle
popa
cmp
jmp
add
inc
or
adc
inc
andb
xor
fucompp
not
lds
jg
push
mov
pop
pusha
sahf
out
xor
push
xlat
cmpsl
push
sbb
push
ret
mov
out
jl
sub
das
out
xchg
fninit
push
xchg
sub
xor
inc
lcall
pop
out
push
sbb
and
out
push
hlt
cmp
bound
pop
lods
push
ss
sbb
xchg
jns
call
repnz
pop
test
sarl
xchg
lahf
jns
mov
in
add
mov
mov
aas
xor
dec
sub
enter
lods
sbb
cmp
outsl
jbe
bound
inc
fbld
mov
cmpsb
pop
inc
mov
gs
cmp
das
hlt
stos
dec
inc
xlat
adc
xor
xchg
cmp
jp
jno
pop
dec
mov
lea
es
fcmove
dec
sub
lock
fidivrs
sub
pop
adc
xchg
push
cmp
xchg
or
adc
out
rcrl
pop
pushf
push
adc
jbe
mov
xor
scas
push
xchg
cmp
cltd
outsb
mov
ds
jp
add
xchg
sub
sub
mulps
pop
and
adc
fcoml
movsl
mov
xor
jbe
sbb
adc
mov
push
fucom
add
les
xchg
cmpsb
mov
jmp
bound
xor
insb
ss
ja
push
and
xchg
cmp
pop
test
jo
xor
mov
mov
xchg
shl
std
add
fsub
xor
dec
mov
daa
add
insb
xchg
jge
sub
and
xor
scas
xchg
add
pop
scas
jecxz
cmp
sbb
xchg
aas
pop
dec
jno
add
fs
sbb
jns
data16
pop
icebp
je
rcrl
pop
loopne
into
in
push
cmp
push
ficomps
mov
fidivl
jae
fucomp
repz
inc
repnz
lods
test
cmp
pop
cmc
or
inc
je
xor
insb
mov
lds
or
add
add
pop
and
inc
mov
testl
add
in
decl
sahf
and
xchg
sti
push
add
xchg
xor
adcb
gs
adcl
xor
add
xlat
adc
push
dec
xorl
std
popa
bsr
cmp
outsb
jg
jns
or
pop
daa
push
std
mov
adc
xchg
inc
dec
mov
jo
dec
and
inc
in
testb
arpl
ja
clc
inc
andl
push
dec
leave
dec
out
into
cli
arpl
jne
arpl
daa
xor
mov
std
cld
clc
add
xor
adc
jg
pop
lock
int
mov
pop
mov
sbb
or
cwtl
fs
movsb
add
xchg
inc
aam
cmp
pushf
cli
stos
xchg
out
in
pushf
mov
xchg
pop
cmp
cld
xchg
add
in
addr16
out
push
out
fwait
jno
or
ss
dec
lea
test
sbb
stos
rol
lea
enter
repnz
xor
inc
bound
mov
push
cmp
push
adc
mov
cmc
mov
ret
or
mov
outsl
dec
inc
gs
outsb
loope
aas
lcall
xchg
or
fisttpll
or
adc
stos
dec
push
sub
cs
adc
out
push
or
sbb
or
mov
jno
rorl
out
dec
mov
in
jns
dec
sbb
or
jp
fcoml
lods
fwait
sub
movsb
add
jo
jno
sub
or
movsb
arpl
out
mov
jp
div
cmc
dec
cmp
clc
fidivs
cmp
ret
cmp
dec
fstl
pop
enter
xor
sbb
add
and
push
repnz
or
lcall
je
jge
out
std
xchg
mov
xchg
mov
outsl
fldcw
call
push
sub
jg
andl
sub
sub
dec
cmp
push
jae
mov
push
xlat
dec
jnp
mov
adc
hlt
adc
psubw
fwait
arpl
ret
sbb
dec
adc
inc
and
popa
addr16
pop
ljmp
lret
les
js
sahf
inc
shll
mov
sysenter
sarl
cmc
repz
push
mov
jl
add
or
faddl
aas
cmp
mov
mov
xlat
lds
push
mov
mov
xor
jbe
inc
ja
inc
sbb
dec
mov
or
cmp
mov
mov
ret
and
ljmp
aad
stos
mov
jmp
sbb
push
or
ficompl
adc
fdivr
jno
iret
pop
push
call
pusha
xchg
push
loopne
std
mov
or
mov
mov
sub
out
push
iret
loop
mov
scas
fs
jb
inc
shll
aas
pop
int
aas
addr16
out
test
out
dec
sub
insl
adc
jno
shufps
or
call
and
addr16
pop
push
inc
push
push
andb
push
fidivrl
xchg
push
cwtl
push
lock
mov
gs
mov
mov
inc
and
mov
sbb
xchg
and
add
stos
rol
mov
push
xor
fsubrp
lahf
shrb
add
jp
or
cmp
push
sbb
aaa
add
sub
and
test
sub
mov
inc
mov
rorb
insl
and
adc
jbe
push
xchg
std
mov
insb
sub
movsb
ja
sbbb
jl
push
loop
jnp
add
dec
loopne
out
jp
xor
dec
add
sub
inc
testb
and
sub
fwait
clc
cmpsb
das
xchg
sub
push
lret
out
leave
cmp
das
jmp
inc
add
ret
dec
pop
jns
cmp
cmc
adcl
mov
cmc
inc
lret
popa
sub
or
mov
mov
jmp
inc
inc
inc
call
aad
pop
outsl
mov
push
leave
cmc
jmp
shlb
mov
inc
and
mul
stos
inc
repnz
lret
stos
and
pop
pusha
out
in
cmovae
repnz
daa
jnp
in
push
push
je
cmc
sahf
sbb
push
or
adc
out
inc
jns
stc
mov
ret
push
cmp
ret
sbb
add
pop
dec
cmp
loop
mov
dec
shlb
repz
call
pop
jecxz
stos
mov
jb
mov
jns
mov
add
imul
sub
out
add
repz
add
insl
lret
push
xchg
xor
mov
or
aaa
mov
inc
orb
push
lcall
scas
and
sarl
inc
xor
fs
je
je
sub
scas
outsl
dec
insl
adc
dec
jg
push
lret
shlb
lods
pop
or
cwtl
mov
jo
ret
inc
arpl
xchg
scas
mov
and
jp
fldt
adc
mov
add
inc
aas
pop
add
loope
mov
ljmp
lock
mov
mov
xchg
pop
cmpsb
xchg
bnd
and
inc
jbe
rcr
stc
aam
mov
sbb
filds
mov
stos
fiaddl
dec
jmp
cmp
dec
lret
and
repz
sbb
imulb
imul
scas
fs
cli
aas
mov
pop
dec
into
lret
xchg
ds
shl
jge
xor
and
mov
repz
scas
inc
mov
mov
clc
add
ret
mov
int3
loop
pop
xor
sti
xchg
inc
gs
xchg
inc
arpl
hlt
jae
xor
pop
sbb
sbb
out
dec
xchg
rcll
dec
test
repz
rcrl
mov
ss
adc
jecxz
or
adc
jno
inc
and
pusha
jne
xchg
fbld
pop
out
xchg
and
mov
jns
outsb
inc
adc
lds
push
inc
dec
out
gs
add
mov
add
mov
mov
xor
out
rcll
mov
aas
add
xchg
pop
pop
mov
insb
adc
xor
inc
aad
add
jg
jae
cmpsb
js
pop
cs
mov
mov
mov
nop
aas
mov
out
sub
lret
imul
inc
cmpsb
loop
mov
jg
or
xor
insb
dec
cmpsb
imul
dec
popa
aas
inc
inc
add
sbb
mov
ljmp
or
xorb
jb
sbb
or
pop
cmp
es
add
sub
jbe
lret
inc
cmp
int3
sbb
mulb
add
ljmp
fnsave
cmovnp
test
mov
loope
sbb
insl
push
push
pop
add
ret
bound
imul
stc
add
xchg
sbb
pop
ret
sub
add
pop
clc
and
nop
addr16
add
dec
or
les
pop
nop
mov
out
data16
mov
or
xchg
stos
aad
mov
lods
stos
mov
push
mov
pop
jg
cmp
mov
jg
add
aaa
lcall
hlt
jae
cmp
aaa
or
xor
prefetch
syscall
or
xor
insl
fadds
push
out
cs
cs
lods
jecxz
cltd
push
mov
arpl
jo
pop
fdivs
push
jecxz
push
mov
add
popa
je
pop
daa
add
push
scas
cmp
jb
sbbb
call
add
jecxz
gs
xchg
push
push
or
shll
ret
fisttpl
push
outsb
or
adc
jp
fucomp
cmp
and
push
andl
testb
jno
arpl
sub
pusha
jp
les
insb
and
mov
pop
lahf
dec
loope
out
ljmp
push
add
frstor
lods
add
faddl
mov
leave
repnz
or
and
test
mov
mov
loop
push
and
test
xor
pusha
cmc
sbb
pop
fisubrl
dec
cmp
icebp
inc
imul
xor
les
sub
movsb
clc
les
xor
scas
mov
ss
leave
out
in
inc
mov
mov
ficoml
jmp
mov
or
rolb
jae
dec
cli
dec
fldcw
sub
xor
addr16
testb
inc
outsl
fcomps
or
and
dec
lock
ds
dec
clc
sbb
push
lahf
movsl
lods
adc
loop
sub
and
or
inc
gs
insb
xor
loopne
xor
jae
jnp
pop
sub
or
pusha
mov
test
push
clc
xor
dec
and
inc
clc
or
push
xor
cmp
fwait
shrl
insb
inc
les
sub
jle
jo
jbe
pop
shlb
add
aam
add
and
pinsrw
adc
lea
jbe
pop
scas
cmp
std
cmp
and
sub
lock
insb
call
jnp
movsb
pop
push
sub
in
shlb
inc
aad
addr16
daa
cmp
cmpsl
mov
icebp
jno
ds
stos
inc
data16
fadds
mov
lea
jb
add
xlat
in
pop
pop
inc
lds
js
dec
sbb
jne
lock
hlt
jmp
out
into
sarl
xor
repz
fsubl
cli
mov
iret
adc
dec
je
test
jno
jb
mull
scas
sub
sbb
push
insl
idivl
iret
mov
pop
sbb
pop
push
jns
into
xchg
jns
pop
xchg
add
push
inc
stc
sub
push
mov
ret
add
push
and
fistps
les
mov
xor
jg
push
and
jle
ret
or
jae
mov
xor
mov
push
cmp
jge
add
jne
sub
dec
adc
add
and
shrb
pop
aaa
in
pop
insb
jmp
jno
pop
xchg
sub
cmp
neg
inc
lret
dec
mov
ret
aam
icebp
popf
inc
adc
loop
out
and
jb
mov
stc
mov
inc
and
jo
popa
ds
add
inc
icebp
push
cmc
aas
addr16
jg
xor
mov
out
push
hlt
adc
mov
push
xchg
adc
movsb
je
push
mov
jno
ffreep
ret
imul
mov
sbb
in
push
ss
pop
xor
loop,pn
std
pusha
cwtl
inc
fdivrs
enter
mov
dec
inc
or
inc
imul
gs
pushf
into
dec
and
sahf
sub
dec
es
jl
insb
inc
pop
je
cmp
adc
test
sub
inc
in
loop
int3
xor
push
jecxz
insl
pop
sub
add
mov
or
fcomps
ja
subl
fs
jnp
dec
add
mov
ss
dec
notrack
cmp
sbb
fs
mov
js
push
pop
loope
sbb
cs
mov
inc
mov
or
xor
test
cs
sub
push
push
dec
inc
jmp
or
outsl
inc
mov
pop
not
mov
les
aad
cmp
out
mov
test
mov
mov
jnp
rcr
pop
inc
fldenv
gs
bound
add
push
das
mov
jae
dec
movsb
xor
pop
movsb
sub
jnp
jb
mov
imul
xor
popa
jecxz
int
dec
xchg
aas
adc
scas
jno
enter
in
fs
inc
or
xchg
xlat
arpl
clc
jo
or
jle
fimull
in
fistpl
popl
out
dec
fidivs
sbb
and
std
mov
and
sub
mov
nop
push
es
add
clc
mov
out
fcoms
test
out
mov
imul
jp
push
jge
jnp
push
and
cmpsb
dec
hlt
adc
into
loop
stc
insb
in
out
jo
adc
out
mov
imul
popa
clc
jo
xor
jnp
cmp
xorb
inc
xorb
sbb
into
sub
or
adc
or
shll
jns
jp
in
mov
mov
add
jecxz
out
sbb
jp
in
int3
pop
jmp
fisubrl
shr
iret
xchg
jb
dec
enter
dec
in
stos
fmull
mov
push
xor
imull
adc
fsts
daa
orl
lea
xor
jge
mov
aas
bswap
push
in
and
sub
faddl
cmp
hlt
dec
sbb
out
je
cmp
fistl
hlt
ret
lea
hlt
push
out
mov
push
inc
ljmp
push
cmp
sbb
or
and
out
inc
pandn
sbb
fwait
jns
adc
mov
sti
outsl
and
cmc
sub
call
popa
adc
je
movsl
lret
into
jmp
movsl
mov
fisubs
and
pop
pop
pop
rolb
rol
cmp
out
jecxz
xlat
ret
sub
aam
mov
rclb
inc
repz
loop
gs
and
dec
imul
aaa
adc
xchg
and
out
mov
mov
into
and
std
sub
add
daa
fwait
leave
cltd
add
cmpsb
loopne
pop
repz
shll
lods
add
cmpsl
aaa
ret
ljmp
lcall
cmp
and
scas
cli
lds
mov
jecxz
cmp
push
mov
fcoms
sub
cmp
jne
cli
pop
push
adc
xchg
andb
aaa
repnz
stos
cwtl
inc
sub
add
ret
leave
jae
notl
outsl
push
fldcw
pop
lods
cmp
xor
push
xor
out
movsb
cmc
nop
xchg
dec
pop
inc
icebp
cs
das
fs
ret
or
ja
movsb
mov
sbb
jbe
pop
lcall
xchg
or
dec
and
inc
cmp
add
int
enter
fcoms
inc
movsb
pop
sub
pop
leave
push
cmpsb
jl
cmp
cltd
xchg
ror
ljmp
inc
cmc
sub
into
imul
jnp
popa
mov
decb
or
test
nop
adc
sarb
ficomps
testb
sub
mov
movsl
jae
or
rolb
xor
xchg
popf
pop
lcall
pop
add
mov
adc
or
jnp
clc
out
daa
ret
inc
iret
lods
popa
jo
icebp
aas
shl
insl
sarb
mov
add
mov
xor
mov
mov
lret
pusha
iret
ret
fnsave
adc
ret
add
mov
lea
push
loope
cs
out
jmp
xchg
dec
pushf
sub
clc
push
rol
cltd
fisttpll
mov
add
stos
inc
xchg
xor
dec
jb
push
sbb
adc
les
mov
clc
std
jl
jmp
shll
xchg
movsb
mov
and
data16
xor
loopne
adc
xchg
insb
mov
sub
out
decl
sbb
gs
push
outsb
popa
addr16
and
imul
pushf
fstpt
ret
xor
mov
out
mov
stos
dec
xor
iret
rcrl
dec
test
jecxz
ja
jb
enter
scas
pop
insb
mov
fs
das
outsb
cmp
ficompl
sahf
jns
mov
ficomps
adc
in
into
jns
loopne
sub
out
call
call
jnp
mov
or
mov
outsl
jmp
insl
add
jb
lahf
xchg
push
je
pop
jmp
bnd
xor
cmp
pop
les
jecxz
inc
outsb
push
in
test
sbb
fnclex
rcll
sub
mov
or
addr16
mov
pop
adc
inc
aam
dec
mov
sub
pop
cmpsl
ljmp
test
nop
push
push
pop
loope
jo
ret
ret
adc
push
scas
adc
fisubrs
sub
and
mov
js
sub
je
cmp
stos
adc
dec
int3
add
ret
mov
fcomip
cmp
add
stos
outsl
sar
and
pop
iret
push
jnp
iret
mov
in
mov
lret
jno
jmp
add
dec
fwait
jmp
cmp
mov
jno
jo
call
in
mov
cld
and
adc
in
in
ret
add
mov
dec
lods
lock
aas
mov
fcomip
pop
cmp
cwtl
iret
or
or
ss
imul
cwtl
or
push
out
mov
fadds
push
and
mov
leave
es
push
inc
or
mov
sarl
aaa
ret
es
xor
xor
inc
inc
sub
jno
ja
jg
inc
and
push
push
bound
iret
lock
out
cmpsb
fsubs
dec
jns
cmp
stos
add
xor
movsb
fcompl
in
add
mov
nop
sub
push
loope
addb
dec
test
aam
fldenv
xlat
cmp
iret
cmp
inc
sub
add
fstp
repnz
scas
icebp
mov
je
enter
xor
xchg
sub
movsb
into
jecxz
xchg
mov
xchg
ja
repz
iret
call
outsb
cmc
movsl
dec
mov
jb
fildll
movsl
pop
lcall
scas
or
cs
push
mov
inc
push
cs
aaa
mov
enter
fidivs
iret
lock
dec
leave
icebp
out
add
adc
int3
push
cmp
and
mov
aas
sbb
dec
sbb
xchg
sti
push
pop
call
xlat
dec
and
ds
lock
ret
sahf
aaa
pop
fiaddl
pop
adc
inc
xchg
repnz
aas
pop
cmpsl
icebp
mov
fcoms
xor
or
pop
dec
lods
fwait
sar
pusha
stos
mov
inc
or
mov
call
inc
pushl
or
clc
bound
aad
popa
xchg
mov
push
popf
inc
mov
cmp
jae
inc
shlb
aad
decl
aaa
das
int3
adc
scas
rclb
sub
ja
call
shlb
lcall
gs
mov
out
mov
lock
leave
enter
cmp
mov
pop
push
push
sbb
mov
cltd
jp
out
xor
cmp
inc
shrb
mov
nop
lods
fs
rcl
sbb
add
ljmp
shll
loopne
sub
enter
cmp
in
cmp
xchg
jbe
sarl
adc
aas
inc
dec
and
mov
jge
mov
jae
sbb
outsb
popa
jnp
iret
leave
insl
fsubr
dec
add
and
nop
or
hlt
add
cli
sti
testl
push
outsb
push
mov
cld
dec
and
add
and
stos
sbb
fmull
mov
or
test
push
adc
push
in
shrl
adc
adc
or
rorl
insb
push
inc
sbb
cwtl
inc
stos
mov
test
insb
pop
sub
mov
out
test
lods
fwait
mov
push
and
aas
push
inc
and
mov
int3
xchg
jecxz
adc
insb
or
inc
bound
scas
enter
push
mov
insb
out
jns
iret
les
fsubs
outsb
mov
add
movsl
in
cld
movsb
cmp
bound
dec
rcrl
cld
out
cwtl
or
adc
fmull
jb
sarb
popa
jecxz
pop
pop
gs
call
ret
les
fimuls
mov
sbb
push
cli
and
sub
or
lahf
jbe
test
xor
push
mov
popf
pop
mov
mov
repnz
repnz
cmc
es
stos
dec
inc
test
addr16
pop
aad
sub
mov
or
mov
sub
xchg
and
iret
ret
mov
jb
pushf
sarb
ljmp
xchg
ja
test
rcr
inc
cmp
popl
sub
pop
rclb
ret
add
shll
push
dec
and
cmp
mov
into
adc
and
inc
or
das
mov
fndisi(8087
shlb
bound
call
and
sub
sarl
adc
int
dec
xor
gs
cmp
cmp
xor
fnstsw
nop
and
ds
lea
pop
jmp
hlt
pop
lret
add
adc
ret
arpl
clc
cmp
out
mov
cltd
out
jl
inc
fdivrs
sbb
shrb
ss
nop
ds
pop
out
sub
mov
psubd
sub
pop
cmp
cmp
aas
inc
mov
in
andl
xor
arpl
xchg
incb
stc
xchg
xlat
or
in
xchg
xlat
mov
sbb
repz
call
add
mov
arpl
jnp
xor
leave
dec
outsl
jp
fwait
adc
mov
mov
cmc
leave
addr16
dec
std
sti
ss
std
jb
adc
or
in
push
push
jl
add
mov
fstl
aam
test
pop
inc
frndint
ret
ljmp
add
sub
fsubrl
add
cmp
mov
jmp
inc
push
add
cmp
lret
les
jg
push
sub
loope
add
pop
mov
sti
xchg
add
sbb
sbb
es
mov
sub
nop
pop
mov
fsts
int3
aas
shll
fidivl
mov
or
cwtl
aam
sub
enter
mov
bnd
fdivrs
push
mov
mov
push
inc
pop
cld
add
dec
sbb
cmp
xchg
cli
jp
jne
loop
push
jg
push
adc
xor
jb
inc
into
push
cmp
lret
or
imul
push
aam
ret
dec
push
in
notl
jl
fs
sahf
insl
jns
xchg
inc
out
shrb
and
ljmp
jb
sub
jecxz
xorl
ret
jae
in
repz
pop
fisttpl
xor
push
enter
push
ja
or
imul
push
or
pop
push
aam
adc
cli
jle
sbb
xchg
das
outsl
out
adc
mov
adc
aam
inc
scas
adc
pop
and
and
push
adc
rcl
mov
inc
mov
adc
pop
mov
jecxz
mov
xchg
cmp
imul
icebp
ret
dec
movsl
jae
xor
mov
lea
fbld
roll
fists
stos
and
sbb
data16
sbb
xor
or
lret
bound
je
mov
jg
lret
cmc
adc
ljmp
xor
sbb
add
push
mov
push
sti
jbe
in
dec
ja
and
adc
adc
leave
fwait
mov
and
adc
rclb
dec
ror
addb
jl
les
mov
mov
or
cmpb
into
sarl
movsl
adc
dec
add
into
jp
sub
xorl
cmp
or
in
jmp
iret
arpl
sub
fldt
hlt
dec
mov
jns
enter
or
dec
and
ljmp
repz
imul
add
negl
ret
adc
pop
cmc
jb
pop
shll
inc
push
xchg
add
ret
imul
shrl
xchg
jns
arpl
push
dec
or
adc
jle
mov
jno
addl
cmp
sub
dec
shlb
daa
aad
pop
xor
jmp
sub
gs
fldt
mov
dec
dec
dec
mov
clc
adc
outsl
popa
out
mov
and
in
je
test
jae
pusha
jo
push
or
xchg
pop
mov
mov
inc
push
popf
jp
imul
andb
out
cmp
in
sub
inc
add
jg
mov
je
push
andb
movsl
mov
xlat
scas
cmp
push
pop
and
add
imul
mov
mov
cltd
xor
mov
xchg
sub
mov
inc
xlat
mov
add
std
test
xchg
in
mov
imul
insb
test
push
aad
or
mov
sub
jo
xchg
xchg
cmp
in
mov
fisubrs
cltd
xchg
movsl
aas
jno
fisubl
jmp
out
lret
pop
cs
out
push
fadds
sbb
mov
jae
cmc
mov
aaa
adc
jmp
mov
inc
lods
add
movsl
jle
dec
xchg
aad
ret
add
sbb
add
mov
cmp
xchg
mov
fstpt
dec
addr16
jecxz
push
jbe
cs
into
inc
lret
test
insl
bound
push
js
inc
dec
inc
lds
cmp
jb
inc
outsb
mov
cmp
imul
leave
scas
mov
pop
repz
enter
mov
mov
mov
lcall
fucomip
sbb
mov
push
ljmp
inc
adc
cli
clc
push
sub
inc
lret
pop
mov
dec
add
cwtl
jge
lret
loop
addr16
lods
sbb
loop
ret
cwtl
fucomip
addl
sarb
repnz
rorb
cmp
xlat
jo
daa
adc
rorb
inc
pop
mov
imul
mov
inc
mov
lret
sub
cmpsb
jle
mov
push
lcall
repz
push
xor
dec
push
in
add
xchg
sub
or
clc
or
lcall
mov
or
xor
pop
adc
fwait
test
mov
sub
or
int
xor
nop
repz
int
push
cmp
decb
mov
out
xor
stos
sbb
stos
hlt
aam
cmc
mov
sti
jno
mov
in
inc
lcall
inc
aad
xor
sbb
daa
xchg
sub
adc
push
stos
notl
pop
popa
push
sub
in
push
cld
pop
cltd
pop
add
lret
lcall
push
push
rorl
lret
inc
mov
push
mov
movsl
repz
out
dec
loopne
jl
movsl
push
xchg
or
xchg
mov
js
pop
sbb
out
in
shll
mov
sub
xchg
add
add
pop
sub
subb
mov
mov
xor
pop
pushl
add
rcrl
xor
out
inc
adc
lret
push
or
inc
adc
jns
es
mov
add
les
je
or
incb
mov
inc
mov
dec
rcr
push
stos
filds
mov
cltd
loope
inc
mov
add
push
cmp
mov
std
fs
sbb
add
adc
add
dec
outsb
pusha
sub
int
or
jmp
int
push
adc
cmp
xchg
push
dec
imul
outsl
add
scas
rcrl
ficomps
sub
cmp
adc
push
lods
mov
dec
in
jbe
xor
rorl
js
int3
stc
push
jecxz
inc
in
in
xlat
xchg
incb
adc
cli
in
cmp
fneni(8087
cmpsb
mov
fadds
outsb
sahf
jge
pusha
mov
pop
ss
pusha
sbb
sti
es
enter
loope
add
lret
jecxz
inc
ds
jp
loope
adc
iret
lcall
jecxz
rcll
mov
das
sbb
sub
push
sub
xchg
jne
push
adc
add
mov
incl
pop
cmp
push
mov
jo
and
imulb
ret
test
stc
pop
pop
test
pop
mov
fildl
dec
fbld
cmpsl
repz
dec
sti
dec
mov
mov
test
icebp
testl
add
mov
adc
xchg
leave
pop
mov
sbb
je
mov
fsubrs
xor
faddp
imul
out
mov
sbb
mov
ss
jae
adc
sbb
or
fldl
and
cmp
scas
jp
or
pop
mov
jmp
sbb
cmp
sub
add
cs
call
inc
mov
xchg
push
xor
inc
cmpsl
sub
out
loope
ficompl
ret
xchg
fwait
insb
addr16
add
in
andl
pavgb
xrelease
icebp
mov
cld
stc
add
and
in
adc
test
pusha
add
and
xchg
sahf
test
cmp
cltd
mov
dec
fcom
popa
xor
fisubl
inc
push
and
and
fs
jle
nop
bound
inc
jne
cmp
dec
push
fsub
or
lahf
xchg
push
inc
cltd
jecxz
and
add
mov
xor
sbb
and
ret
adc
or
xchg
inc
sub
fistpl
or
out
mov
sbb
lcall
aad
loop
and
mov
mov
mov
xor
and
fisubl
shll
or
loopne
push
aam
pushf
fistps
pop
rclb
out
or
les
fidivrl
lds
xor
cmp
pop
mov
push
add
sub
pop
xchg
pop
add
mov
rcrl
adcl
jb
out
push
in
inc
jp
jb
ret
mov
insb
xchg
std
cmp
enter
push
inc
repnz
testb
clc
ret
fists
and
xor
loopne
add
dec
cld
add
in
pop
and
iret
out
xor
data16
pop
mov
shlb
aas
mov
clc
pop
pushf
add
adc
sar
andl
dec
nop
jbe
mov
xlat
cli
sti
adc
sbb
and
push
pop
dec
idivl
call
les
orl
inc
jno
js
outsl
jge
cld
mov
out
and
cmc
mov
testl
ret
push
sub
jg
and
add
or
pop
add
pusha
sub
pop
jno
stos
mov
imul
loopne
lds
hlt
rcrl
aas
push
adc
ss
mov
sbb
xor
xor
mov
jecxz
test
xchg
xchg
jne
xchg
aas
mov
aaa
mov
aad
xor
jno
push
imul
into
out
out
insb
ss
dec
in
pop
jbe
ja
cmp
push
mov
and
adc
in
or
fs
pop
in
xchg
or
xchg
inc
lret
jne
pushf
js
push
xchg
ret
jo
jmp
push
test
add
add
outsl
xor
jecxz
jle
push
fadd
fs
fiadds
adc
pop
lcall
jns
int
ret
xor
sbb
pop
imul
push
ljmp
inc
cs
pop
aaa
repnz
add
pop
mov
mov
ds
sbb
add
fistpl
inc
inc
pop
xorb
test
js
or
gs
xor
mov
xchg
push
cmc
fmull
dec
addl
in
mov
es
ret
mov
scas
and
inc
lds
es
xchg
cs
cmpsl
and
cmp
sub
bound
xchg
push
pop
jnp
push
jp
fmuls
stos
adc
call
orl
mov
lret
cmp
xchg
push
cmpsl
jo
sub
inc
loop
out
flds
aas
mov
notb
inc
mov
fs
push
push
pusha
adc
testl
or
inc
lret
dec
mov
push
jl
cmp
mov
iret
jns
jmp
fnstcw
fwait
das
scas
in
push
jmp
push
into
dec
and
lret
and
inc
mov
push
and
xchg
mov
push
ljmp
lods
testl
mov
stos
adc
outsl
lods
lods
inc
ret
popa
lret
and
cld
movsb
faddl
push
repz
out
aaa
xor
sbb
lret
push
or
add
inc
sbb
jecxz
fildl
insl
adc
and
xchg
adcb
sbb
les
fiadds
das
insl
fwait
inc
stos
adc
jno
stos
out
inc
int3
data16
or
sub
cmpsb
lods
repnz
cli
stos
inc
ret
ss
dec
out
pop
cltd
dec
xchg
sbb
dec
ja
cmp
mov
ror
jp
addb
imul
xor
xor
arpl
pop
xor
and
fisubrs
push
sbb
pop
arpl
movsb
test
sub
test
push
fs
fwait
sbb
mov
clc
mov
sbb
inc
out
cmp
enter
and
sub
dec
pop
cld
es
pop
or
out
arpl
mov
and
pusha
xlat
jae
pop
out
cmp
call
inc
pop
push
test
lahf
ljmp
xchg
push
je
out
sub
cltd
mov
pushl
push
push
adc
jp
rorl
shr
pop
cmc
cmpb
ljmpw
inc
aas
cmp
ss
pop
int3
jl
lret
imul
test
lret
inc
and
sbb
test
xor
mov
pop
fldenv
add
xchg
dec
mov
sbb
and
adc
or
dec
fisubs
je
xor
enter
mov
daa
rcrl
cs
aad
add
mov
in
icebp
cmp
inc
or
jne
repz
out
xchg
add
bound
and
inc
push
lock
in
in
rcrl
xor
test
sub
jmp
xchg
mov
ret
mov
gs
pop
sti
mov
rcll
js
pop
ja
arpl
lea
sbb
hlt
ret
dec
push
cli
out
out
pop
jecxz
push
mov
fisubrs
adc
insb
pop
add
xlat
inc
in
es
jecxz
jp
call
lods
sbb
nop
sarl
push
arpl
jecxz
das
inc
adc
cvtps2pi
mov
pop
cmp
sbb
hlt
inc
sbb
ret
jns
sti
inc
imul
cmpsl
icebp
das
lret
in
inc
imul
jp
bound
rorb
pop
adc
adc
and
je
test
bnd
push
jo
ja
xlat
fdivs
mov
ds
jmp
inc
loop
xchg
and
or
scas
jge
sbb
xchg
subb
mov
test
ret
inc
sbb
ds
aad
ret
xchg
lahf
mov
enter
xchg
mov
insb
cmp
cmpb
test
and
ror
repz
aas
out
test
add
shlb
cs
loopne
out
in
subb
lds
es
das
sbb
faddl
push
dec
sti
addr16
mov
sbb
mov
les
fwait
xor
push
sub
sub
pop
mov
sbb
add
out
jnp
add
je
xchg
ds
rcr
insl
cmc
xor
jle,pn
das
pop
mov
sbb
push
and
lret
sub
xchg
jecxz
test
mov
addb
cltd
sub
mov
clc
xor
ret
rol
sbb
cmpb
pop
shr
cmp
or
mov
jmp
mov
in
inc
adc
cs
cmc
loope
sti
orb
push
and
pop
xchg
xor
addr16
xchg
leave
xor
mov
ret
in
fmuls
pop
jp
sub
push
fidivrl
push
leave
fs
scas
jg
enter
xchg
mov
fstl
or
push
scas
mov
test
lods
movsl
xchg
add
inc
xor
and
ja
sub
jbe
xchg
dec
mov
pop
adc
or
inc
adc
pop
dec
test
enter
pop
ljmp
cmp
out
pushf
cs
insl
and
fwait
gs
out
jge
imul
push
inc
push
test
mov
dec
pop
cld
test
rcrl
mov
mov
hlt
fdivl
mov
push
adc
adc
imul
sbb
xor
adc
or
and
aas
and
cli
push
cld
icebp
add
sbb
loop
cld
cld
hlt
sbb
push
add
cmp
xchg
stos
push
cltd
das
cmp
outsb
out
add
divl
in
add
inc
fidivl
sbb
xor
mov
shll
mov
mov
lahf
xor
lods
data16
into
mov
pop
movsl
jge
std
out
xchg
enter
jbe
aaa
jge
sahf
pop
cmp
out
add
sbb
dec
fnsave
popa
test
lidtl
lods
xlat
adc
push
add
into
gs
sbb
jp
and
stos
rolb
std
ror
div
xor
iret
loopne
jle
data16
mov
out
push
add
jg
and
loope
xchg
mov
push
cltd
hlt
jae
int3
cmp
add
jp
push
and
xor
pop
testb
or
bound
out
xlat
pop
in
faddp
div
cmc
cmpb
inc
mov
cmp
in
iret
jmp
daa
mov
cmp
mov
jl
adc
mov
and
ss
test
bound
ljmp
xor
or
rorb
ljmp
and
ss
push
out
inc
and
mov
jo
adcl
inc
or
scas
sub
xor
test
jl
orb
popf
sub
cltd
jl
rclb
push
imull
loope
and
out
xor
jns
das
jg
cmp
mov
pop
add
xchg
call
adcl
icebp
xor
mov
mov
mov
xor
out
leave
jmp
push
fwait
or
mov
das
daa
pushl
adc
adc
lea
into
sub
pusha
cmp
outsb
mov
testl
in
shll
std
faddl
pop
pop
icebp
jnp
jge
jae
jne
out
add
pusha
les
nop
pop
pop
mov
scas
sbb
lods
sbb
inc
mov
xor
push
inc
mov
scas
out
movb
add
xchg
loope
bndldx
add
stc
mov
scas
add
test
ja
fimull
dec
rorl
mov
lds
lret
and
add
lahf
pop
and
push
popa
mov
xchg
es
pushf
sti
ficoml
or
int3
out
fwait
popf
dec
mov
leave
in
daa
fsubs
mov
xor
xchg
out
push
test
mov
mov
xor
lret
jbe
dec
jl
fdivl
push
xor
mov
enter
jno
inc
adc
push
inc
pop
outsb
adc
and
cwtl
out
ljmp
add
loop
xchg
out
cmp
inc
xor
nop
mov
push
fnstcw
xor
aad
mov
lret
jne
or
nop
xchg
sub
es
jp
cmp
push
mov
out
inc
cltd
dec
std
test
and
sbbb
lret
adcb
mov
jle
inc
jae
mov
sub
mov
lock
mov
xor
inc
js
xor
xor
and
or
enter
xor
xchg
mov
orb
movsl
jle
or
adc
xor
push
loop
mov
test
inc
scas
sbb
push
fmuls
inc
dec
sub
adc
fwait
pop
out
inc
jge
and
ret
mov
aas
mov
data16
gs
dec
or
roll
in
cmc
cmp
and
das
mov
sub
and
xchg
and
adc
es
add
and
div
cmpsl
sarb
inc
ret
mov
pop
packsswb
in
outsl
jle
sub
dec
out
jl
jb
push
sahf
test
in
jo
ljmp
mov
loope
push
mov
fs
les
push
test
sub
cli
and
mov
lock
int3
mov
bnd
ljmp
pusha
adc
out
push
movaps
jecxz
test
cmp
pop
leave
outsl
shl
sbb
out
lods
lods
and
mov
repnz
inc
lcall
adc
cmc
jbe
aas
sahf
fists
lcall
pop
leave
cmpsl
ds
insl
jns
in
xchg
lret
add
and
imul
xchg
mov
out
xchg
cmp
pop
int3
mov
testb
adc
not
sub
mov
test
adc
pop
mov
fidivl
sahf
xchg
sub
mov
push
push
mov
pop
outsb
jge
and
jo
fs
and
orb
and
mov
dec
fcmovb
cmp
popf
fst
pop
mov
push
and
xor
mov
add
sbb
stos
daa
out
sub
subl
fimuls
pushf
int3
xchg
das
fs
push
call
inc
mov
add
std
addr16
es
xchg
cwtl
sti
inc
xor
push
push
ds
sub
fimull
mov
lods
sub
push
jle
fwait
lret
sbb
negb
pop
cmp
or
lcall
fdivs
orb
je
incb
mov
push
push
mov
fs
repz
int
sub
cmpsl
js
cmpsl
stos
fadds
scas
or
pop
sub
pop
and
mov
push
inc
nop
pop
jbe
movb
xor
popa
push
xor
pusha
negb
fs
movsb
out
out
das
add
mov
daa
fstl
fs
xor
adc
or
stos
ds
fistpl
scas
or
dec
cwtl
int3
in
inc
orl
adc
sub
add
out
push
aaa
add
test
dec
jmp
push
sub
mov
cwtl
call
inc
mov
xchg
inc
xchg
cmc
jl
cmpsb
mov
rolb
je
sahf
rorl
dec
push
loop
lods
push
push
and
mov
or
insl
repz
hlt
inc
jecxz
das
or
sub
maxps
notl
leave
dec
nop
jg
inc
fdivrs
sub
fiadds
mov
roll
push
roll
imul
stos
and
imul
sbb
fldt
subl
sbb
in
in
and
xor
in
xor
lock
aaa
jmp
das
inc
in
pushf
dec
incl
mov
enter
or
jmp
mov
and
xchg
shl
inc
or
dec
dec
daa
sbb
push
add
cltd
xchg
xchg
cs
and
fcoms
cmp
inc
sbb
js
xor
sub
ljmp
insb
xchg
lds
mov
fcomps
and
jg
jae
idivb
outsb
idivb
xchg
add
dec
loop
add
and
sub
in
cmp
cltd
imul
test
int
mov
enter
out
repz
push
testb
dec
into
scas
sbb
les
imul
cltd
ret
inc
test
jmp
out
ss
lret
xchg
fcmovne
add
and
pop
es
push
sbb
sbb
mov
push
loop
int
inc
mov
mov
sub
jg
inc
mov
cli
scas
adc
stos
fildl
add
daa
jae
ret
jb
outsb
pop
mov
mov
mov
inc
test
mov
jecxz
jl
cli
dec
fstps
adc
aam
xorb
push
sub
fadds
popa
ljmp
je
sbb
push
xlat
mov
repnz
or
out
clc
push
pusha
sbb
mov
and
pop
sbb
or
das
and
mov
xchg
push
push
cmpb
or
adc
mov
insl
inc
pop
inc
out
and
rcr
pop
out
rcrb
mov
js
cmpsb
fldt
jmp
inc
cmc
les
fistps
xor
loop
ljmp
mov
add
add
aaa
adc
out
xlat
inc
xchg
sub
scas
in
jbe
dec
xchg
push
orb
stos
test
ja
xchg
lods
icebp
lock
dec
jecxz
test
addl
adc
js
dec
or
into
inc
jle
in
push
push
sbb
aas
outsb
fnsave
xor
dec
shrw
dec
leave
mov
push
or
movsb
sub
addl
add
outsb
cmp
scas
push
mov
xchg
jns
jo
adc
arpl
cld
loopne
adcb
stos
pop
pop
add
inc
ret
out
loopne
fnstenv
js
roll
das
sub
mov
fisubl
dec
pop
fcoms
gs
test
xor
cmp
xchg
push
or
sub
loopne
dec
xor
xor
and
mov
sbb
lret
hlt
jge
int3
sub
push
mov
cmp
inc
movsl
sub
inc
mov
out
shrl
add
clc
hlt
je
dec
jo
or
insl
test
stos
add
enter
mov
int3
out
xor
xchg
jb
sub
mov
mov
dec
mov
or
pushf
daa
mov
mov
adc
push
push
dec
arpl
sar
ret
lods
outsl
add
rcr
fcompl
xor
sbb
xchg
in
add
adc
mov
mov
and
add
mov
popa
loopne
pop
cwtl
lods
ds
push
push
rcrl
stc
mov
xchg
stc
divl
mov
lds
sub
sub
sub
xchg
dec
rcll
xor
es
mov
mov
jae
cmp
test
add
or
lahf
lock
or
andl
loopne
out
out
mov
mov
dec
loope
stc
popf
jnp
or
js
lds
adc
jmp
sbb
xor
insl
and
mov
sbb
xchg
das
or
in
inc
mov
insl
push
faddl
mov
nop
pop
mov
popf
mov
mov
lock
sbb
mov
push
enter
sti
sub
outsb
mov
outsb
cmp
adc
push
push
mov
adc
pushf
sbb
cmp
sub
iret
and
jns
inc
inc
rclb
and
mov
out
in
insl
mov
and
and
stos
cmpsb
and
ljmp
jbe
mov
cmp
inc
lods
or
popf
cmp
lret
sahf
jecxz
xchg
add
fdivs
xchg
mov
dec
or
mov
inc
or
inc
jns
jns
fcompl
nop
inc
adc
or
pop
push
mov
std
cmp
testb
push
addr16
aad
bound
in
fsubl
mov
cmp
jg
je
add
xchg
movsb
jp
jecxz
jg
xlat
int
and
mov
xor
shrl
imul
out
xor
adc
adc
mov
dec
jno
xchg
arpl
pop
in
cmp
daa
lods
or
call
ficoml
pop
sarb
xor
mov
jle
jge
ss
hlt
inc
ret
stc
adc
adc
mov
lods
mov
add
cld
jle
scas
xlat
out
into
add
cmp
fmuls
les
rol
push
and
pop
add
and
out
mov
imul
mov
mov
ss
jl
mov
enter
or
sti
and
lcall
popa
daa
xor
sbbb
adc
push
stos
cmpsb
pop
enter
pop
addr16
add
mov
xchg
sarl
popf
xor
rolb
jne
aaa
je
lcall
jg
incl
in
sub
adc
loope
cs
add
jmp
or
movsl
daa
lcall
inc
inc
test
add
mov
les
push
push
sub
stos
movsb
in
popf
addr16
das
adc
xchg
arpl
push
push
mov
cmp
int
and
idivb
mov
outsl
orb
or
and
fidivs
fsub
cmc
ds
bound
andl
dec
ret
shll
add
out
push
ljmp
mov
data16
or
sub
pop
xorb
xchg
pop
std
pop
mov
movsb
outsl
icebp
pop
out
jae
pop
and
mov
adcb
dec
adc
jb
test
bound
add
push
je
addr16
dec
popa
jno
adcb
cli
pop
clc
and
xchg
in
or
mov
aad
add
jbe
jge
dec
ja
add
sbb
push
xorb
adc
and
push
sbb
test
and
pop
jp
imul
jno
pop
inc
or
add
xlat
enter
ret
push
push
jmp
lock
xlat
std
xchg
mov
fisubs
add
sahf
add
mov
incb
shll
jne
xchg
jl
cmc
jg
inc
gs
mov
inc
lds
xor
lret
xor
sub
pop
and
jge
push
scas
mov
cmp
and
cmp
mov
in
add
sub
sbb
mov
sbb
lret
clc
arpl
test
add
in
add
test
cmp
fs
push
test
bound
xor
loop
inc
jnp
pop
pushf
jns
pop
ret
into
mov
aam
jecxz
push
in
popl
out
sbb
inc
and
pop
inc
jns
int3
cmpl
cs
cli
in
and
dec
sub
out
cs
xor
scas
or
or
stos
mov
loopne
mov
inc
sar
xor
sub
mov
lret
jecxz
loopne
mov
das
mov
pop
stc
jmp
inc
lret
ljmp
int3
fwait
int
mov
jmp
inc
cld
daa
jbe
dec
fucom
sbb
sub
ss
jg
adc
loop
jbe
mov
xor
aaa
testl
movsl
cld
les
loopne
aaa
iret
shrl
jecxz
push
ret
jle,pt
push
xchg
loope
push
push
jp
lret
orb
dec
push
repz
sub
mov
jl
jmp
in
mov
dec
pop
mov
repnz
cmp
std
mov
enter
aaa
mov
stos
fcmovu
insl
mov
ja
out
and
xor
adc
cmp
out
dec
fwait
dec
mov
xchg
xor
xor
dec
int
lahf
iret
sub
jecxz
adc
xor
pop
xchg
mov
push
movq
orl
push
gs
push
jo
aas
cmc
mov
aaa
lret
movsb
jl
lret
int3
or
cmpsb
dec
scas
scas
pop
push
loope
fcmovnbe
das
adc
icebp
lock
adc
add
mov
je
in
lret
hlt
xor
dec
xor
and
cmp
sub
push
in
jmp
xchg
cld
inc
mov
cmp
and
call
iret
push
aad
addr16
pop
sub
push
add
ds
inc
xor
inc
adc
out
daa
das
mul
xchg
dec
shll
sub
jns
psraw
xor
out
pop
mov
fisttpll
mov
jecxz
mov
xchg
ljmp
fbld
mov
adc
movsl
adc
sub
add
popf
aad
adc
neg
lds
mov
lahf
adc
sub
gs
adc
call
jge
lahf
jo
enter
xchg
and
dec
fildll
cmpsl
sti
loop
jl
pop
ss
dec
pop
addl
dec
std
fs
std
ffreep
cmp
xor
jp
lret
dec
push
cmc
or
jb
cs
cld
push
mov
xchg
stc
bound
out
ljmp
mov
sbb
mov
push
out
push
dec
inc
les
add
in
mov
das
sbb
xchg
add
in
dec
cmpsl
pandn
jp
daa
mov
push
test
movsb
mov
in
notl
std
xor
test
imul
sub
cs
add
mov
sub
arpl
add
lods
push
aas
lret
add
ret
and
call
dec
sbb
stos
into
sub
jg
sub
add
in
test
jle
add
hlt
sahf
dec
ja
xchg
insb
inc
and
inc
sbb
inc
xor
add
and
ja
dec
fisubl
fadds
cmc
jl
mov
mov
jns
sub
push
cmc
std
pop
mov
or
stos
jae
scas
cmp
hlt
mov
mov
int
and
xor
movl
enter
push
ret
lahf
test
push
lcall
insl
gs
fnstcw
and
or
push
imul
push
xor
outsb
out
or
stos
push
test
mov
subl
movl
dec
mov
and
mov
sbb
arpl
cmp
xor
mov
leave
jns
jg
adc
clc
das
ret
les
xor
sbb
jb
outsb
lods
adc
test
sub
out
fcoms
jmp
imul
repz
push
mov
add
jae
sub
adc
jp
test
cli
add
pop
push
fdiv
loope
and
sbb
daa
andl
pop
add
repnz
out
cmp
pusha
out
enter
rol
repnz
dec
mov
mov
or
jg
adc
cmp
pop
push
push
fdivl
jne
jmp
mov
xor
stos
sti
dec
cmp
adc
and
jae
out
dec
mov
testl
mov
addr16
add
cli
push
je
decl
mov
mov
in
arpl
mov
add
mov
lods
xor
rolb
cmpl
in
jmp
push
push
jmp
enter
mov
mov
sbb
xchg
popa
cwtl
xchg
lahf
lahf
repnz
cmp
loop
and
cmpsl
adc
insl
mov
ret
and
sub
cs
nop
data16
or
cmp
cld
jo
xchg
mov
xor
add
sbb
push
adc
dec
mov
repnz
xchg
push
xchg
add
test
jae
cmp
lock
int
jp
mov
push
stc
inc
push
lcall
inc
in
cmp
test
daa
jge
inc
leave
adc
pop
aam
pop
insb
mov
push
sbb
cmp
xlat
push
mov
rcr
std
mov
cld
mov
in
flds
adc
negl
pop
push
int
out
std
rcll
dec
jb
mov
jne
mov
jg
cmpsb
daa
mov
std
add
je
fbstp
xor
outsl
add
push
aaa
test
fistpll
je
loope
jle
push
mov
jecxz
lahf
pop
lcall
or
xor
fldt
andb
inc
popa
cmp
mov
mov
sub
cmp
gs
in
add
or
ficompl
stos
add
adc
pushf
outsb
add
push
out
jge
ss
stos
add
push
stos
outsb
in
out
mov
fistpl
push
add
xchg
out
push
cmp
les
popf
xchg
mov
mov
int
inc
and
outsb
xchg
jno
rolb
cmpl
shlb
dec
into
dec
sub
xchg
int3
pop
xchg
out
push
rcll
cmpsl
out
add
cmp
inc
push
leave
fs
cmp
pusha
jo
inc
scas
out
and
pop
pop
ret
push
jl
or
imul
paddusb
push
dec
dec
or
pusha
push
out
push
sub
inc
in
arpl
jns
xor
adc
mov
xchg
les
add
je
iret
inc
out
pop
sub
mov
xor
sub
or
sbb
mov
sub
cltd
or
cmp
jae
cmpsl
fildll
sub
aam
xchg
xor
sub
outsb
cmc
jle
push
js
fwait
hlt
cmp
pop
adc
sub
fsqrt
or
push
fxch
fidivs
inc
inc
jecxz
lea
in
adc
mov
inc
mov
repnz
xchg
mov
or
inc
mov
loop
sbb
in
xchg
rcrl
inc
push
push
lea
movsb
das
jmp
mov
insb
xor
out
lods
xchg
xor
enter
xchg
repnz
incl
adc
mov
lods
loop
test
mov
mov
mov
fs
dec
mov
jo
pop
or
add
add
not
loope
push
ret
movsb
or
test
fnclex
fcomi
jl
dec
and
insl
adc
xor
cmc
loop
test
xchg
jmp
or
pop
enter
add
dec
inc
cmc
mov
scas
fwait
cld
andl
lods
mov
push
xor
push
ds
aam
pop
ljmp
push
lcall
add
inc
icebp
push
mov
sub
cmp
es
clc
sub
push
push
out
add
xor
jp
fdivrp
mov
out
jecxz
xchg
cld
lea
lods
das
dec
sbb
lock
push
pop
add
stos
push
push
and
pop
xchg
nop
mov
add
inc
sarb
scas
into
movsl
addr16
mov
adc
mov
test
jecxz
jb
sub
and
inc
and
pop
and
and
mov
into
xor
lret
movsb
ud0
test
and
inc
sbb
hlt
xchg
mov
or
insl
inc
ret
xlat
mov
jp
adc
loop
cmp
and
or
icebp
sbb
inc
movsb
xchg
icebp
das
mov
repz
and
and
dec
mov
stc
jno
push
cmpsl
in
fadds
sbb
xchg
lea
push
sub
adc
ret
mov
dec
pushf
mov
es
cmpsb
cmpsb
mov
fwait
xchg
inc
xor
test
int
call
mov
iret
and
ss
sbb
mov
stc
sub
dec
xor
mov
cmp
push
daa
sbb
xlat
mov
cmp
xor
out
jecxz
cld
add
mov
cmp
xchg
les
push
stc
hlt
imul
adc
push
push
addl
or
jnp
adc
cmpsb
hlt
dec
movsl
in
and
cmc
pop
push
xor
popa
mov
ds
aam
xchg
add
add
movsb
into
cmp
push
fwait
push
sub
imul
add
xlat
nop
adc
movsb
lcall
and
cmp
cmp
hlt
cmc
dec
dec
push
fmul
push
clc
test
jmp
test
mov
in
out
xrelease
ret
shl
cmpsl
repz
out
fsts
sub
iret
jns
out
add
mov
scas
fsubs
inc
mov
jge
stc
push
sbb
jo
shl
pop
test
jp
push
shl
xor
ss
loope
in
jle
movl
adcl
dec
ljmp
or
lcall
and
or
add
out
sbb
mov
inc
jl
cld
sti
out
xlat
mov
add
add
popf
adc
xchg
les
mov
add
pop
rcll
sbbb
in
jae
adc
or
loopne
mov
mov
mov
sbb
ret
pop
dec
sarl
fdivrs
rcll
pop
push
cmp
sub
aas
nop
push
fisubl
push
dec
in
idivb
jb
jl
lds
jo
xchg
rolb
fmuls
inc
aas
test
jns
mov
fwait
repnz
xchg
jb
sbb
mov
jb
inc
inc
inc
dec
adc
jae
out
mov
xor
orl
xor
or
das
sub
leave
arpl
mov
xor
shlb
pop
ret
je
sbb
jp
shl
fsubrl
arpl
cltd
and
fs
adcb
fstps
xchg
sbb
enter
and
and
mov
add
cmp
scas
sahf
push
add
push
test
xor
stos
sbb
xor
add
sbb
int
fwait
divb
push
sub
mov
hlt
fcomps
clc
mov
pop
xchg
fbstp
push
je
mov
addb
jl
arpl
inc
jmp
ljmp
xor
mov
mov
inc
scas
sub
xchg
xchg
jge
and
mov
sahf
movsl
mov
or
out
addr16
push
or
mov
inc
xchg
andb
and
int3
or
int3
lods
aas
ss
fstpt
test
ret
rorl
sub
in
insb
jne
inc
add
lea
push
out
cmpl
mov
fdivs
sbb
add
mov
or
popa
dec
cmp
flds
inc
lret
orps
xor
fwait
mov
sub
jp
mov
ss
mov
lret
or
inc
and
or
cmp
mov
shll
jecxz
inc
dec
cmpsb
jbe
jmp
lea
jnp
and
jnp
loop
push
scas
sub
inc
loope
mov
dec
lds
loop
jp
pop
xchg
sahf
mov
scas
stos
pop
mov
and
int
or
push
and
sbb
add
insl
bound
test
rcll
mov
test
add
int
daa
or
inc
mov
mov
lods
out
or
pop
xchg
aam
mov
xchg
xchg
dec
dec
cli
shrl
push
cmp
inc
fnstcw
sub
das
nop
fwait
popa
dec
push
add
lds
outsl
mov
es
jg,pt
xor
pop
sub
sub
mov
xchg
inc
movsb
inc
ficoml
sbb
xchg
sbb
rolb
das
movsb
nop
and
jb
lea
cmp
push
mov
jnp
jo
sub
insl
xor
cmpb
sti
stos
add
jnp
inc
aas
jne
push
jle
jg
punpckhdq
fs
test
xor
xchg
daa
pop
mov
sti
cmp
mov
mov
mov
jb
aaa
aad
sbb
cmc
enter
in
xchg
stos
shlb
xchg
paddq
jp
fldl
aas
scas
lods
jle
mov
fldz
int
cmp
cmpsb
push
test
add
std
mov
push
mov
fnsave
cmpsl
sbb
mov
mov
test
gs
cwtl
push
add
sbb
add
sub
fwait
pop
lret
lods
xor
sbb
push
cmpsl
movsb
rcrl
pusha
test
jb
and
mov
xchg
repnz
in
xchg
jp
out
inc
ss
aad
sti
xor
xchg
mov
cmp
xchg
pop
xlat
hlt
push
and
cli
test
lret
adc
cld
mov
movsb
testb
push
outsl
leave
pop
add
mov
fisubrs
and
mov
and
jp
pop
pop
pop
add
inc
jle
repnz
add
and
int
inc
jb
aas
mov
jbe
negl
fiadds
sub
cmp
aad
add
pusha
lods
jg
test
in
outsl
pushf
imul
int3
inc
out
pop
xchg
fsts
repz
xor
aas
lock
jle
lds
push
aas
and
pushf
xchg
std
dec
out
jae
into
jge
fmuls
adc
sbb
push
sbb
lahf
sub
and
aad
arpl
push
jb
out
clc
test
enter
lret
pop
sub
pop
pop
inc
pop
sub
aaa
push
cmp
scas
icebp
rolb
outsl
and
dec
fsubrs
bswap
andl
mov
xchg
lcall
addr16
mov
mov
pop
lahf
aam
pop
out
ss
fs
mov
add
lret
adc
es
mov
pop
daa
nop
xlat
mov
cmp
or
or
adc
cmpb
inc
xor
dec
in
aaa
xor
mull
add
inc
std
fisubrl
jecxz
lods
mov
out
mov
jno
jno
fwait
test
je
std
ljmp
dec
sahf
in
or
and
insb
ljmp
mov
push
out
cmpsb
int3
gs
inc
insb
repnz
sub
lret
inc
push
or
aaa
xchg
sbb
xchg
loopne
pusha
cs
cmpsb
sbb
adc
mov
enter
inc
mov
pop
incb
jl
insl
push
pop
inc
xchg
aaa
mov
cwtl
pop
imulb
mov
pop
jmp
push
push
or
mov
add
sbb
jbe
sub
add
or
fwait
nop
gs
push
or
sbb
rolb
xchg
mov
push
and
outsl
jecxz
into
imul
cmpsb
sub
shll
xchg
movb
adc
fsubrs
or
adc
adc
ret
jnp
ret
cmp
xchg
out
mov
jp
xor
sbb
fmull
pop
in
push
lock
lock
leave
xchg
xchg
std
dec
xor
cmp
xchg
add
and
and
jg
add
sub
dec
mov
push
mov
adcb
mov
jl
sbb
outsb
cld
add
ljmp
mov
jae
into
pop
outsb
pop
ret
jecxz
popf
ds
jae
imul
push
mov
lret
frstor
fs
pop
inc
cmpsb
sub
cmp
sub
insb
cmp
lds
sti
ljmp
mov
push
adc
int3
sbb
cmpsb
push
ds
pop
inc
mov
mov
pushf
sbb
sbb
mov
mov
orl
test
aas
in
mov
inc
out
icebp
mov
hlt
jmp
inc
sti
lods
sbb
push
arpl
mov
xchg
stos
repz
add
cld
mov
ljmp
out
and
fisttpl
arpl
adc
fsubrp
scas
sahf
push
test
sbb
dec
adc
or
sub
jecxz
xor
test
stos
and
fwait
push
or
faddl
ljmp
push
in
mov
cmp
das
dec
fldenv
mov
or
xchg
inc
pop
mov
jno
mov
pop
xchg
sbb
loopne
jb
jbe
xor
ret
daa
dec
arpl
movsb
or
dec
pop
push
xchg
gs
add
test
jmp
jbe
shrl
sbb
cmc
cltd
jge
or
test
xor
dec
in
jp
sbb
mov
xchg
out
adc
lods
repnz
or
push
sbb
fwait
jmp
outsb
jp
sub
mov
lods
push
lgs
lcall
inc
or
iret
mov
xor
adc
lds
std
pop
pop
xorl
mov
mov
into
pop
xchg
adc
jmp
cmp
inc
outsl
inc
subb
pop
jecxz
pop
iret
mov
xlat
pop
jl
in
push
or
cli
lds
movd
xorl
push
jae
lcall
decb
fcoml
into
xchg
andl
mov
pop
inc
es
and
or
fwait
xchg
sub
pushf
ljmp
in
in
fimull
xor
dec
popf
adc
cwtl
fs
jmp
fistl
sbb
sub
xor
jmp
cld
jb
ret
ficoms
addl
popf
xor
pop
add
out
xor
shll
sbb
mov
and
neg
arpl
xor
cmpsb
pop
cwtl
mov
cli
xchg
imul
fidivrl
add
pop
and
adc
sbb
call
cld
xchg
in
xlat
push
out
xchg
xchg
adc
push
xchg
jecxz
bound
out
testl
jo
and
cmp
lea
loopne
jns
mov
mov
iret
and
xchg
roll
iret
cmpsb
push
and
and
js
jge
adc
cmpsb
xlat
pop
push
bound
test
xchg
mov
push
int3
test
mov
pop
xor
stc
adc
insb
dec
inc
bound
xor
mov
out
test
jb
cmp
in
std
and
pop
and
fwait
adc
fsubrp
int
repz
sub
leave
in
jne
data16
cmc
pop
add
mov
pop
loopne
xchg
pop
mov
fdivrp
je
test
adc
lock
mov
test
scas
scas
xchg
shll
inc
cltd
pop
add
dec
jno
div
mov
sti
dec
jp
sbbl
inc
imul
or
sahf
dec
daa
push
dec
sub
and
out
mov
mov
test
ds
jp
fisubrl
xlat
push
jno
and
int
add
ljmp
mov
push
add
cmpsl
ja
adc
xor
jbe
push
sub
ljmp
aad
mov
ret
mov
mov
mov
fsub
pop
nop
jmp
and
dec
or
fs
mov
out
int
pop
in
pop
scas
dec
popa
out
out
pop
push
jbe
incl
jp
xlat
int
in
mov
sbb
adc
xor
cmc
cmp
dec
jmp
mov
aas
shl
popa
or
insb
insl
testl
call
add
mov
push
jns
gs
sub
jb
dec
push
pop
es
lret
push
mov
xchg
push
pinsrw
movsl
pop
mov
fisubs
add
mov
inc
xchg
fadds
in
sti
je
hlt
mov
mov
jbe
fstps
fldl
xor
sbb
test
outsl
and
movb
sbb
lods
mull
in
lods
push
sub
jle
or
xchg
jno
adc
push
mov
push
add
mov
orb
sub
jle
xchg
ret
xchg
cmc
pop
cmpsb
cmpsl
mov
mov
mov
daa
std
enter
movsb
sub
jge
clc
aas
jnp
mov
pop
addr16
mov
fadd
jno
mov
mov
bnd
jle
push
sbb
cmp
push
shlb
or
sub
inc
adc
incb
or
push
push
repz
in
jns
dec
dec
in
scas
movsl
lret
out
jb
mov
inc
shr
adc
lock
cmp
lods
lcall
xor
test
dec
fcoms
dec
lcall
xchg
mov
out
xor
sarb
popf
and
xor
mov
mov
inc
fcompl
out
or
mov
cmp
jne
call
xchg
call
pop
dec
mov
push
mov
or
inc
mov
jo
lcall
mov
inc
xchg
inc
push
in
iret
or
sti
dec
lret
dec
out
mov
xchg
shll
pop
loop
clc
aaa
push
outsb
es
mov
xchg
cmc
stos
xlat
daa
push
mov
ljmp
mov
xor
bound
inc
pusha
mov
push
daa
into
stos
stos
aad
ret
les
ret
loop
mov
push
inc
hlt
and
and
jp
pop
insl
lret
and
out
jp
inc
jmp
lock
in
icebp
fdiv
loope
fsubr
test
outsl
xchg
je
sbb
xchg
add
repnz
or
jmp
pop
dec
cwtl
das
popf
dec
add
fcom
lahf
in
cld
cmpl
mov
add
xor
xor
jns
inc
cmp
lods
cs
outsb
cltd
add
ljmp
fs
pop
adc
insl
xor
popa
test
data16
test
jbe
push
inc
cld
cmp
add
movl
jp
xor
cli
push
mov
push
fcom
pop
sarb
xchg
xchg
outsb
das
push
pop
ficoml
fwait
mov
inc
inc
mov
xchg
xchg
mov
imul
jle
sbb
aas
jp
push
xchg
out
ja
xor
scas
fldenv
dec
inc
sbb
out
in
insb
lds
sti
and
xchg
pushf
push
add
push
mov
test
iret
sbb
push
sub
mov
sbb
aas
dec
inc
outsb
call
fwait
sub
cmpsl
xchg
roll
and
mov
jns
es
xor
adc
out
jns
insb
sub
adc
mov
aam
int
adc
fldt
outsb
aaa
adcb
bound
dec
push
mov
ja
push
adc
jmp
les
xchg
cld
and
inc
enter
je
ljmp
hlt
push
mov
sub
push
psllw
and
pop
and
sub
dec
sbb
push
dec
das
fmull
stos
scas
movsl
pop
mov
inc
sbb
jb
lods
popa
fidivs
js
mov
movsb
leave
arpl
cld
aas
mov
or
mov
and
ret
sbb
stos
jbe
insb
xchg
leave
mov
xchg
inc
nop
and
stos
xchg
pushf
jae
call
push
cltd
add
or
cwtl
daa
rol
push
loope
push
into
jecxz
mov
clc
xchg
jmp
adc
push
add
lret
add
ret
out
mov
push
add
mov
inc
xchg
int
push
mov
sbb
xor
in
loopne
xchg
sahf
add
push
inc
push
jmp
sub
fmul
pop
bound
or
test
fwait
hlt
mov
clc
or
fadd
rol
lret
scas
xchg
test
clc
cs
lret
and
stc
cmp
roll
stos
leave
push
adc
fisttps
loop
adc
imul
adc
lods
pop
push
adc
pop
inc
test
jl
pop
aad
rolb
leave
add
jecxz
mov
or
add
aaa
out
xchg
dec
mov
pop
push
pop
ret
xor
mov
push
repz
loopne
xlat
add
sub
icebp
adc
ds
icebp
cltd
pop
ret
in
sub
out
add
ljmp
mov
stos
out
inc
jbe
dec
stos
and
mov
ljmp
add
jo
dec
es
addr16
scas
scas
dec
cmp
stos
adc
orl
pop
mov
push
ret
jecxz
loopne
inc
out
xchg
and
xchg
pop
adc
hlt
mov
roll
cs
not
add
js
sub
jnp
push
aas
sbb
mov
and
fbstp
push
dec
add
test
and
pop
lds
add
imul
add
jmp
insl
repnz
dec
dec
cmp
and
sub
pop
lret
das
lock
movsb
jo
rcr
adc
sbb
rclb
ja
push
add
sti
negb
or
into
lahf
xor
jg
arpl
pop
or
paddq
and
jae
push
test
in
xor
cmpsl
lds
and
fs
add
add
mov
jg
xchg
test
scas
xorl
adc
xor
ljmp
add
add
push
xor
lea
push
rolb
addl
and
mov
pop
add
pushf
dec
lret
lods
or
mov
dec
fimuls
cmpsl
jl
sbb
and
adc
xacquire
mov
jle
cmp
popf
mov
movsb
sbb
mov
daa
xchg
sbb
les
flds
pop
cmp
pop
pop
push
sahf
adc
mov
lods
cwtl
and
sahf
and
cmp
inc
iret
inc
sbb
or
movl
cmp
test
out
jl
test
or
lock
jb
pop
sbb
xchg
mov
lret
test
mov
dec
mov
mov
int3
or
out
rorl
sub
add
push
test
loope
imulb
inc
test
ficoms
pop
loop
out
ret
aas
ss
sub
pop
pop
int
sbb
dec
cmp
xchg
xor
cmpsl
stos
sbb
sub
dec
push
lcall
cmp
sbb
decl
fistps
xchg
xchg
mov
add
aam
adc
push
enter
and
fisubl
fwait
adc
cmp
ljmp
lea
or
out
dec
sbb
sti
mov
test
fstpt
xchg
dec
sub
icebp
and
xchg
mov
or
rorl
sbb
xor
inc
adc
cmp
rorl
or
sbb
mov
lret
lods
jns
cli
pop
push
aas
loope
insl
add
pop
jbe
stc
out
cmpsl
lret
fisubrl
gs
adc
add
adc
ret
jg
hlt
ret
add
cmp
pop
loop
fdiv
enter
jmp
inc
cs
push
mov
mov
call
cmp
adc
aas
shlb
pop
stos
movsb
lcall
xchg
or
daa
jge
aad
mov
bound
loopne
lods
lret
xchg
push
cmpb
cmp
imul
cld
xor
loope
jb
repz
push
push
inc
push
mov
xlat
mov
sbb
mov
sbb
popf
inc
xor
loop
inc
push
cli
xchg
pop
jno
jecxz
mov
dec
cmc
fsubl
pop
push
cmp
hlt
pop
mov
push
mov
jecxz
or
jmp
ja
in
stc
jb
testb
mov
mov
clc
je
outsl
lea
or
jbe,pt
dec
push
jg
into
lock
fcoms
and
scas
push
into
addr16
test
push
cmc
test
pop
xor
cmc
jnp
arpl
mov
mov
mov
ljmp
pop
pop
pop
shrb
ret
jnp
cmp
jbe
dec
sahf
cmpsl
addr16
mov
cs
mov
mov
out
js
aaa
mov
scas
in
rcll
push
mov
sub
in
xchg
shlb
cmpsb
jl
je
pushl
jp
sbb
int
outsl
xchg
and
sbb
addl
adc
add
lods
push
mov
sub
jnp
adc
movsl
mov
mov
mov
pusha
and
out
outsb
fmuls
or
jmp
push
push
sbb
and
xor
scas
sub
or
outsb
add
test
fwait
fwait
out
subb
clc
adc
out
pop
mov
jle
data16
lret
cmp
and
test
adc
jb
push
dec
std
mov
leave
sti
mov
out
mov
mov
andl
cld
mov
and
leave
sbbb
mov
das
mov
xorl
mull
lret
push
test
add
pop
clc
arpl
mov
or
stos
mov
push
xorb
push
pop
xchg
mov
pop
and
lock
cwtl
movsb
mov
xlat
orl
call
cmpsl
ret
mov
mov
je
lret
rorl
add
mov
jmp
movsb
push
lret
fdivs
and
jae
decl
pusha
shr
dec
mov
sbb
fisubs
aaa
aad
aad
addb
jg
bound
in
mov
movsl
cmp
xor
or
add
div
int3
add
aad
insb
jecxz
aad
std
outsb
pusha
or
lds
inc
or
cmp
jecxz
sbb
mov
mov
bound
lock
shll
js
js
ret
push
or
cwtl
push
rcrb
push
idivb
push
nop
outsb
incb
mov
std
sbb
mov
or
xchg
xor
push
sub
inc
adc
inc
jp
scas
insb
es
lea
out
les
push
xchg
movsl
outsl
pop
jbe
sbb
popa
mov
xorb
je
loop
push
add
movswl
repz
icebp
cli
sub
nop
lret
aas
icebp
imul
mov
jge
lahf
inc
jmp
cltd
inc
pop
fimull
push
mov
les
cmp
sbb
inc
mov
cmp
pop
arpl
xchg
xor
and
aam
movsb
movsb
push
mov
adc
aas
mov
xor
push
iret
scas
dec
nop
leave
movsb
cmp
lock
lods
jle
inc
pop
es
fimuls
in
outsl
dec
mov
push
xor
lcall
aad
push
jo
sub
adc
cmpsb
inc
inc
imul
mov
stos
shl
cmp
sbb
shlb
add
out
xchg
std
cmpsl
inc
adc
mov
orb
inc
test
das
xor
mov
sub
dec
int
or
ljmp
sbb
cmp
xchg
and
jb
popf
push
adc
inc
iret
push
push
dec
insl
mov
sub
fiadds
add
add
xchg
bound
push
mov
stc
arpl
es
cmovl
arpl
aam
bound
scas
stc
mov
js
jae
lcall
mov
inc
mov
mov
incl
sbb
push
mov
jae
mov
inc
mov
mov
mov
adc
sub
out
addr16
dec
dec
clc
xor
jle
out
iret
lret
or
inc
xchg
mov
cmp
std
sub
mov
push
imul
pusha
lret
xlat
jae
sahf
add
cs
cmpl
push
out
mov
cmp
and
mov
sub
adc
sub
stos
push
xchg
dec
xchg
inc
or
icebp
jns
xor
mov
adc
aas
sahf
and
dec
jmp
jp
xor
aam
add
imul
scas
mov
popa
cmc
mov
popf
inc
out
rolb
aaa
sub
xchg
jbe
and
fsubrs
sbb
mov
xlat
mov
xchg
sbb
jmp
je
dec
mov
or
inc
jno
aas
xor
out
mov
and
mov
adc
movsl
jle
js
data16
int
das
sbbl
je,pn
mov
in
add
add
mov
pop
dec
add
lahf
or
mov
jmp
adc
or
pop
or
and
mov
mov
sbb
dec
mov
push
imul
cmc
xor
mov
and
fwait
sarl
xchg
nop
jmp
ret
push
jge
in
xchg
mov
mov
clc
xchg
pop
ja
pop
outsb
mov
sti
ret
sbb
pusha
or
lods
xor
dec
test
aaa
pop
aad
fcmovb
xor
stos
cmp
sarl
daa
hlt
lock
cli
aas
insl
jns
call
in
or
int
adc
fwait
notl
xor
scas
loope
icebp
loopne
leave
pop
add
push
das
cmp
test
sbb
insb
and
or
leave
cmp
sub
inc
hlt
cld
mov
out
les
das
das
mov
sbbl
mov
repz
cmp
and
bound
xchg
mov
xchg
add
stos
cmp
pop
hlt
je
rolb
or
fucomp
cmp
mov
shll
into
adc
pop
cmp
xor
dec
aas
inc
sarl
or
hlt
add
cmp
dec
int3
mov
lcall
and
cmp
dec
js
and
pop
in
pop
sbb
dec
mul
mov
roll
add
in
pop
mov
repnz
movsl
dec
jae
xor
cmp
hlt
call
xchg
xchg
int
das
sub
inc
pop
dec
test
jno
mov
cmp
imulb
dec
push
push
je
lahf
dec
xchg
cmp
scas
ret
lret
lret
xchg
js
test
sahf
pop
icebp
jnp
push
and
mov
adc
into
jae
xchg
pusha
cmp
loop
pop
mov
push
jne
cmp
mov
push
cmpsl
mov
adc
add
test
stos
test
pop
xchg
aam
aaa
incl
nop
aam
xchg
js
stos
out
mov
sub
ficoml
scas
lcall
sbb
mov
sub
clc
add
pushf
mulb
xlat
jbe
insb
mov
rclb
xchg
scas
jg
cmp
and
and
in
mov
shrl
mov
mov
cld
lret
xlat
add
fs
adc
mov
loop
jecxz
sbb
jl
and
test
dec
rolb
mov
xchg
call
in
scas
and
scas
pushf
mov
adc
fldl
popa
dec
pop
movsb
or
jnp
jp
int
jae
lret
cmp
imul
lds
jl
loop
sbb
ret
push
jae
push
sub
inc
push
inc
or
dec
cmpsb
sti
push
das
rol
test
outsb
push
cmp
rcrb
sub
popf
mov
add
jl
nop
sbbl
out
arpl
sahf
fcmovb
repnz
inc
adc
cltd
xlat
sub
lock
mov
mov
clc
clc
mov
out
xor
or
fs
out
dec
out
xor
out
mov
movl
pop
pop
cmp
in
jb
jle
push
mov
sbb
in
or
test
sbb
jno
out
pusha
push
ja
rcr
sbb
lcall
dec
fmuls
lcall
les
call
cld
xchg
mov
iret
js
hlt
dec
add
out
es
cltd
repz
lea
stc
add
add
sbb
out
inc
jg
push
adc
das
pop
jnp
loop
sub
add
test
int
adc
pop
out
shll
mov
push
aaa
adc
jg
xchg
ret
dec
mov
mul
arpl
in
mov
mov
imul
stos
lods
mov
mov
shll
xor
mov
cmpsb
in
pop
bound
insb
xchg
out
xor
push
leave
xor
fmuls
stc
push
cltd
test
psubw
das
sbbb
pop
in
loop
adc
cld
add
sbb
ljmp
pop
cmc
inc
sbb
scas
or
cltd
mov
and
cmp
inc
nop
scas
add
inc
cmc
ret
pop
shl
lret
out
stos
sarl
nop
adc
xchg
jo
jno
rorb
push
pusha
test
and
ja
or
adc
xchg
shll
and
ret
dec
in
mov
push
jo
mov
pop
sub
cwtl
mov
mov
lds
jae
xchg
add
stc
adc
cld
adc
cmp
pop
add
push
push
popf
adc
cmp
aas
cld
clc
lods
sti
sahf
lret
sub
pop
jmp
jo
pop
pop
into
mov
lea
jne
xor
out
sahf
arpl
sub
dec
rolb
sbb
lret
shll
testb
inc
sbb
cmpsl
push
stos
fcomps
push
pop
outsb
or
push
ficomps
cmpsl
inc
lcall
enter
jl
mov
in
or
dec
xor
adc
lods
movsb
sub
stc
sbb
test
cmpsb
aam
sti
fnsave
enter
inc
ds
aam
xchg
test
int
and
fs
add
inc
in
and
popa
out
in
xchg
mov
jbe
mov
mov
jecxz
cs
push
jae
sbbb
dec
in
into
aas
mov
xchg
xor
and
inc
pop
sbb
fidivrl
or
das
cmp
push
aam
mov
aam
jecxz
sub
lods
adcb
rcll
arpl
xchg
sbb
sbb
add
lret
xchg
sbb
lret
adc
xchg
stc
into
sbb
adc
mov
sbb
push
inc
mov
push
sub
icebp
pop
mov
adc
int
adc
mov
jns
push
repnz
xchg
mov
add
push
push
mov
es
cmp
inc
sbb
mov
loopne
test
sub
rep
xor
subb
subb
loope
out
and
ds
sub
hlt
cmp
mov
mov
pop
and
cld
and
pop
lds
rolb
call
mov
add
jae
adc
mov
enter
loop
stos
xor
ja
fdivrp
jb
mov
bnd
push
ljmp
mov
push
cwtl
aam
dec
push
aaa
sub
stos
cmp
ret
xchg
sub
cmp
clc
mov
aaa
ret
xchg
das
xor
nop
and
out
xchg
out
sub
sub
fstpt
xlat
insb
in
cmpsl
add
mov
xor
dec
xor
fcoml
add
cmc
aas
jnp
cli
sbb
je
mov
xor
adc
xlat
jo
jecxz
loop
cmc
pop
int3
lret
fs
inc
mov
dec
sub
add
fcomps
lcall
lds
shll
hlt
adc
sbbl
xchg
inc
nop
dec
cmp
adc
loope
adc
fsubs
push
insb
pminsw
jne
jge
jo
lret
shl
adc
pop
adc
scas
clc
dec
ss
outsb
lods
cmpsl
pop
xor
cmpsb
jmp
xchg
decb
xor
daa
ljmp
arpl
das
xchg
adc
inc
add
or
shr
cli
aam
scas
dec
xchg
or
mov
mov
clc
jb
mov
in
inc
rclb
push
jge
cli
jecxz
sub
jae
or
mov
stc
or
ljmp
push
push
xor
je
out
and
aam
loopne
sub
sbb
adc
dec
ret
xor
data16
sbb
fidivrl
and
iret
push
test
xchg
cmp
andl
xor
pop
cmp
dec
test
mov
shrb
out
mov
shlb
mov
sub
pop
cmc
mov
xchg
ss
popf
push
jmp
shlb
shll
std
dec
dec
cmp
or
cmp
xchg
dec
in
or
and
xchg
leave
inc
imul
xor
aaa
or
ret
or
sbb
stos
pop
hlt
and
jmp
mov
jle
stos
jl
ret
lcall
fbstp
add
jae
and
mov
ror
sti
psrld
js
aam
xchg
out
jno
ljmp
inc
pop
popf
push
pop
sbb
aas
lret
movsb
xchg
cmc
adc
icebp
or
or
fcmovnu
insb
in
add
sbb
mov
mov
xor
insb
or
arpl
mov
mov
xlat
cli
scas
pop
add
pop
xchg
inc
sbb
push
mov
pop
jb
and
sbb
push
add
nop
jne
sub
adc
dec
push
cwtl
mov
or
or
or
sbb
or
dec
mov
loope
jecxz
cmp
xor
xchg
movsb
inc
sti
and
jp
cmp
adc
ret
pop
xchg
rol
scas
mov
lcall
std
les
xor
lahf
add
xor
shll
loope
aaa
xor
hlt
das
ret
in
je
or
xor
adc
mov
mov
lods
in
pop
jmp
fwait
maxps
inc
push
or
fs
inc
mov
mov
dec
jnp
icebp
hlt
repz
lea
outsb
enter
mov
push
or
mov
cmp
not
das
out
mov
int
push
cmp
pop
lds
ficompl
lods
outsl
mov
push
popa
fs
xchg
add
sbb
imul
ds
push
inc
sti
out
in
and
fwait
or
jae
pop
push
lcall
pop
sub
das
inc
sar
mov
ljmp
pop
mov
roll
cs
in
inc
adc
rorb
adc
and
jge
mov
lea
mov
inc
pop
dec
test
adc
call
lock
push
imul
test
push
xchg
pop
add
mov
mov
mov
negl
xor
ret
mov
inc
mov
in
and
sbb
add
fimuls
pop
ljmp
hlt
mov
fimull
mov
cmp
cmpsb
jns
mov
mov
push
sbb
or
sub
jae
dec
pop
push
xor
add
jp
rolb
mov
loop
add
out
les
roll
xchg
movl
cmp
loope
pop
pop
jge
das
addr16
iret
fstps
cmp
or
lret
mov
jp
mov
sub
mov
push
mov
dec
out
jb
movsl
notl
addr16
xor
inc
xchg
mov
cmpsb
ret
out
sahf
test
push
and
xor
add
cmp
cmpsb
dec
mov
out
push
pop
mov
mov
xchg
es
out
cmp
inc
pop
cld
adc
out
test
mov
sahf
cwtl
pop
ja
adc
xchg
sahf
nop
loope
push
mov
inc
jno
jle
daa
imul
repnz
bound
cmpl
sub
push
adc
jecxz
outsb
ret
xor
sub
adc
jle
sti
mov
cmp
mov
ds
cld
inc
xchg
sti
push
lea
fistpll
mov
push
xor
mov
add
sub
cmp
mov
repz
inc
inc
aam
adc
jnp
dec
mov
bound
int3
clc
cmc
add
and
add
push
mov
dec
mov
mov
outsl
addr16
pop
pop
dec
in
and
sbb
cmpl
pop
dec
xchg
js
xlat
cmp
sbb
xor
inc
jnp
cld
push
mov
add
sti
dec
pop
out
cmp
mov
aad
lods
nop
dec
mov
dec
jnp
stos
std
fisubrl
pop
cmpsl
dec
sbb
sbb
inc
adc
cmp
cmp
das
scas
add
mov
test
jl
cmp
cmp
add
jbe
mov
stc
adc
pop
adcl
cmp
lea
enter
aas
or
sub
xchg
idivl
divb
mov
cmc
jnp
std
dec
or
sbb
test
test
adc
inc
lods
sub
fnstenv
ds
and
pop
dec
cmp
mov
jo
push
push
pop
dec
cmpsb
and
jns
xor
dec
sbb
sub
mov
iret
push
out
mov
arpl
sbb
insl
and
mov
mov
fwait
sbb
int3
outsb
fdivl
sahf
gs
mov
inc
mov
mov
adc
mov
adc
gs
xor
jns
inc
out
lods
divb
test
cwtl
insb
xchg
and
repnz
jno
push
aad
das
mov
movsb
cmc
or
inc
and
mov
fwait
imul
inc
push
pop
int3
dec
sbb
mulb
jo
call
pop
fists
fst
enter
or
repnz
jmp
je
inc
test
push
jae
sbb
add
aaa
push
pop
dec
xchg
insl
and
pop
daa
lcall
cwtl
mov
jae,pt
pop
lock
xor
movsl
cmp
cmpsb
ret
xor
dec
imul
xchg
mov
xlat
add
stos
in
rorl
mov
aaa
popf
sbb
hlt
int3
sbb
mov
pop
jae
in
pop
add
sti
sar
mov
pop
dec
sbb
lods
pop
fists
dec
jg
push
xor
and
jae
add
icebp
xor
and
add
mov
outsl
cli
inc
gs
mov
pop
test
ret
cmp
xor
sahf
jg
jae
add
inc
nop
xorl
adc
jecxz
cmp
cmp
orb
cmpsb
mov
xorl
ds
insb
in
rorl
out
decb
jmp
pop
fnstcw
xor
aam
xchg
aaa
aas
push
mov
mov
push
or
mov
data16
test
cmp
scas
cmp
mov
out
mov
jae
hlt
mov
mov
jno
and
push
and
push
and
sub
dec
cmpsl
inc
push
mov
scas
and
fldcw
mov
insl
insl
and
sub
and
aas
jnp
iret
mov
mov
pop
dec
rcl
lcall
or
inc
loop
sarb
addl
clc
push
aas
xchg
dec
insl
lds
sub
imull
fwait
dec
pop
repnz
aaa
outsl
into
std
jo
xor
lcall
inc
enter
inc
cltd
sbb
icebp
testl
push
sub
mov
xchg
cmp
nop
out
jne
ret
add
ss
inc
jae
add
lods
mov
jo
lock
ss
sbb
and
add
pop
xor
jmp
ret
sub
and
es
or
dec
inc
xchg
out
in
sti
cmp
inc
xor
lock
jo
inc
push
insb
pop
es
add
scas
push
xor
and
xchg
jno
ret
movsl
loop
cmpsl
sub
aaa
lcall
inc
mov
add
das
sub
cs
out
add
ret
cs
fnstcw
and
dec
out
pop
out
push
xchg
palignr
push
push
incb
aaa
xlat
dec
nop
push
xchg
clc
out
in
std
roll
pop
xor
cld
adc
and
jecxz
movb
xchg
inc
mov
ds
ljmp
add
rcll
mov
cmc
dec
dec
adc
xor
repz
add
lahf
pop
dec
jno
sti
out
cmpsl
mov
cmp
mov
cmp
bswap
scas
xor
or
xchg
mov
add
mov
test
and
and
icebp
cmovle
push
jae
jle
xor
push
fstpl
in
out
repz
inc
fcmovnu
std
mov
xchg
fsubp
repz
jmp
adc
fimuls
sarb
cld
aad
fdivrs
ja
lds
mov
aad
push
popf
ds
xor
or
inc
jo
xor
insb
orb
mov
and
lods
or
or
bound
in
insl
das
xor
scas
in
daa
aas
aad
cs
sub
aam
dec
les
pop
or
cmp
and
arpl
add
fbld
or
pop
jmp
cld
negb
scas
pop
insb
es
loop
mov
jmp
or
sub
popf
pop
inc
pusha
rorb
mov
das
out
cmp
dec
inc
fidivrs
fidivrs
mov
mov
and
or
icebp
dec
xor
add
mov
mov
daa
or
ljmpw
sub
fldt
scas
pop
dec
daa
cld
hlt
mull
or
in
push
in
jo
mov
dec
lcall
jnp
repz
pusha
popa
test
je
push
jp
decb
jl
mov
es
pop
daa
loop
das
stos
stc
insl
mov
leave
insl
test
xor
sahf
add
mov
or
adc
aaa
mov
enter
fists
lock
adc
out
gs
add
incl
mov
nop
sar
inc
adc
or
out
inc
mov
cmpsb
stos
out
xchg
enter
pop
jp
cmc
push
mov
xlat
push
mov
lock
or
ficoml
mov
dec
and
bound
inc
aam
sbb
pop
adc
push
or
cs
xor
jo
lahf
adc
ds
pop
pop
cli
inc
outsb
adc
pushf
fwait
stc
out
jp
dec
in
mov
or
mov
fstps
arpl
aam
repz
outsb
sbb
pop
rcrb
aaa
cli
in
pop
imul
aaa
xchg
cltd
dec
jmp
push
mov
push
mov
ret
push
pop
into
shr
sub
cmpsb
es
push
jo
xor
out
sbb
clc
rcrl
add
or
xor
fdivrl
sbb
sbb
lds
push
sub
dec
mov
cmpb
xchg
jp
mulb
cmp
sahf
gs
mov
test
or
dec
dec
pop
cmp
dec
mov
sbb
cwtl
dec
arpl
push
push
inc
and
andl
xchg
mov
in
inc
nop
push
lret
jp
js
xor
sbb
push
sbb
lret
add
inc
or
out
and
jae
or
xchg
subb
jle
jmp
mov
fdivs
push
cld
sbbb
cmp
mov
mov
fmul
xchg
xchg
out
jae
fs
dec
xchg
pop
cld
mov
jno
mov
and
out
int
int3
jbe
in
bound
lea
xchg
add
push
jle
add
mov
or
rclb
pop
jno
shlb
cwtl
xor
jge
cmpsl
ss
fldl
mov
jae
jecxz
pop
or
push
lret
in
jns
out
cmpsl
shlb
insl
pop
shll
imul
inc
mov
ret
inc
sbb
aad
and
lods
mov
fisubrs
jne
mov
daa
fimuls
sub
test
sbb
dec
nop
mov
and
push
pop
pop
rol
in
and
or
inc
xor
mov
dec
cmpsb
test
mov
and
pop
scas
xor
xor
shlb
fnsave
or
sub
out
outsb
sbb
rol
and
add
sub
lahf
mov
cwtl
mov
sub
xor
inc
xchg
push
aaa
mov
nop
ret
rcr
add
push
popf
xchg
xor
dec
jl
out
cmp
xorb
push
rorb
cmp
cs
fiadds
je
sbb
add
jge
fs
mov
movsb
and
adc
test
rolb
lahf
inc
fs
sub
out
fsubp
push
fs
nop
out
enter
ret
or
test
xchg
pop
xlat
jmp
sahf
fcoml
fildl
arpl
sub
mov
push
arpl
aam
mov
cmp
pop
pop
in
cmp
inc
and
cmp
add
xchg
mov
sub
out
mov
outsl
push
and
push
mov
push
cmpsl
in
and
jge
jbe
mov
sbb
cmp
xor
pop
jnp
cld
jne
jmp
dec
adc
pop
popa
cmc
jmp
stc
loop
dec
cmp
fdivrp
std
push
push
cmp
fsub
and
mov
pop
ljmp
mov
xchg
xor
fimuls
jbe
xor
cs
std
pop
mov
cmc
xor
inc
xchg
sbb
jns
inc
ljmp
cmp
nop
push
inc
mov
jno
adc
mov
or
inc
pop
imul
mov
adc
mov
pop
jl
lcall
dec
in
out
sbb
addr16
lods
fists
daa
repz
pop
adc
pop
mov
rcll
adc
xor
into
and
mov
sahf
fimuls
mov
mov
loopne
or
push
cmp
fsubrs
inc
inc
adc
bound
imul
cvtdq2ps
in
insb
cmpb
cmp
push
inc
push
fs
ret
adc
jg
and
cwtl
pop
push
cmpsl
push
lods
add
sarb
adc
inc
rcrb
in
mov
inc
stos
aad
in
enter
push
cmpsb
push
pop
adc
xchg
and
fwait
sub
cmp
cwtl
call
pop
add
mov
stc
mov
aad
pop
cmp
dec
les
scas
or
pop
mov
mov
fbstp
inc
sarb
dec
add
xchg
rorl
jle
xchg
cwtl
adc
jbe
cmp
insl
and
loope
push
push
pop
ret
out
movsb
fsubr
imul
dec
dec
mov
mov
ss
test
xchg
fisubl
xor
and
cwtl
mov
mov
aad
ja
xchg
mov
add
pop
ret
pop
int
jecxz
arpl
inc
out
mov
push
pop
mov
or
push
repnz
mov
jp
stos
cmc
scas
add
lret
hlt
icebp
push
or
popa
data16
scas
push
jmp
jns
xchg
push
aad
mov
push
cmp
out
test
mov
mov
inc
daa
lahf
sbbl
jecxz
inc
iret
dec
repz
sarb
lods
call
fs
pop
cmp
sub
clc
mov
in
pusha
fwait
shl
ljmp
cwtl
mov
xchg
or
inc
mov
xchg
fistpll
sbb
push
or
in
and
lds
xor
clc
mov
and
pop
ret
pop
xchg
or
inc
sub
adc
ficompl
fucomip
lods
pop
call
hlt
iret
jl
out
orb
jbe
push
out
iret
sub
mov
aad
add
into
cli
sub
inc
mov
jl
cmp
adc
arpl
pop
mov
push
push
sub
aam
cmpsb
roll
inc
ret
outsb
cmp
push
pop
lret
dec
mov
lock
out
cmpsb
dec
adc
add
aam
lods
pop
jg
dec
dec
mov
and
and
jne
mov
cmp
mov
icebp
cmp
ljmp
or
pop
xlat
push
outsb
pmuludq
mov
icebp
push
inc
and
test
popf
lea
lds
lret
xchg
push
mov
stos
or
lahf
lods
jb
faddl
and
std
sbbb
lods
fcomip
aas
dec
xchg
test
mov
pusha
inc
in
call
xorb
adc
mov
xor
sub
push
lcall
mov
mov
jge
cs
out
scas
jle
nop
subl
lock
sbb
rol
in
cmpsl
mov
arpl
aas
lods
dec
xchg
sub
jnp
test
mov
out
jp
mov
movsb
arpl
adc
xorl
xorl
cli
in
stc
lods
pop
inc
ss
mov
scas
mov
pop
sub
push
cmp
and
mov
ljmp
and
ret
outsb
test
xchg
mov
lock
subb
xchg
inc
or
lret
shrl
mov
mov
xchg
rcrb
cmp
sbb
mov
testb
js
adc
fwait
xchg
mov
bound
sbb
in
dec
inc
cmc
inc
loopne
sub
sbb
out
stos
mov
sbb
mov
lahf
mov
dec
sahf
jae
clc
push
lcall
sbb
inc
push
loopne
outsb
jg
push
test
sub
test
mov
and
std
jmp
add
sbb
sbb
xchg
repz
jmp
std
stc
push
arpl
xchg
cmp
js
aam
cmc
cmp
jnp
loopne
idivl
cld
in
fwait
mov
cli
sub
fdivl
xor
fistpll
dec
in
out
les
pushf
xchg
test
cmp
cmp
push
pop
pushf
push
dec
push
cmpsb
out
dec
pop
loop
xchg
jg
xor
notl
sub
ret
fs
sbb
xor
fimull
insb
out
push
push
clc
push
mov
data16
mov
xor
pop
adc
sub
push
mov
cmp
or
and
or
aam
adc
je
leave
sbb
push
xchg
arpl
stos
and
mov
cmp
fidivl
xchg
outsl
or
nopw
sbb
test
pop
idivl
mov
cmp
push
adc
das
icebp
arpl
sub
out
sbb
xchg
mov
push
or
inc
xor
ss
nop
xor
sbb
aam
lds
cmp
jno
push
out
insl
inc
movsl
adcl
mov
cli
cld
xchg
add
adc
ret
mov
jl
pop
test
fs
inc
sti
mov
mov
push
es
ss
dec
sbb
movsl
lock
cmp
jl
add
ljmp
mov
in
mov
sbb
add
mov
or
stc
adc
cmp
mov
dec
jle
mov
loope
pop
ret
xchg
sbb
je
mov
jp
cwtl
in
int
mov
lea
testb
arpl
push
subb
sahf
xchg
push
pop
adc
push
ds
pop
xor
push
clc
sub
xor
sub
inc
enter
js
push
mov
aas
and
pop
or
or
and
dec
out
and
mov
sbb
lret
frstor
push
filds
in
push
adc
loope
mov
jmp
out
fsubrp
pop
mov
ret
divl
adc
xor
and
adc
jae
xor
add
push
pusha
add
push
lock
cli
jecxz
aaa
ficoms
inc
adc
adc
mov
jl
mov
xchg
sbb
ret
mov
lea
inc
out
add
iret
add
call
shrb
sbb
xchg
fsubr
inc
fsts
ljmp
addl
jmp
ja
xchg
icebp
ret
jp
xchg
lret
adc
sub
sub
and
aaa
int3
ja
mov
inc
add
lds
xor
sbb
cmpb
les
outsb
mov
movsl
mov
sbb
mov
jno
addr16
adc
push
push
fwait
jge
cmpsb
adc
loopne
fwait
xchg
flds
push
mov
and
repnz
sbb
std
cltd
stos
mov
push
clc
cmp
pop
cmp
add
popf
mov
cmp
je
cmp
jbe
insl
adcl
inc
xchg
mov
sbbb
outsl
mulb
jnp
push
repz
outsb
inc
aaa
stc
sbb
and
push
sub
xor
xchg
cmp
cmpsb
rcr
je
sbb
push
push
add
dec
inc
int3
clc
rol
xor
aad
icebp
inc
or
sub
inc
add
adc
dec
movsl
call
cltd
jecxz
mov
cmp
or
mov
and
les
dec
pop
daa
iret
arpl
insb
lret
cmp
loop
sub
in
rolb
inc
pop
and
add
xchg
add
or
jnp
add
xor
sti
add
js
shr
mov
push
pop
cmc
or
fwait
and
ss
sar
push
adc
or
arpl
mov
and
gs
fildll
ficompl
roll
cmp
std
and
pop
inc
sub
inc
popaw
stos
xor
pop
jbe
orl
je
push
and
inc
pop
jecxz
push
js
mov
mov
popf
xor
and
sub
xor
xchg
cmp
inc
arpl
mov
dec
cmp
xchg
mov
cmp
xorb
cmp
push
das
fs
lods
and
aaa
stos
adc
insb
jno
jp
add
xchg
loop
stos
pop
mov
shrb
add
js
popa
mov
xor
cmp
lret
pop
cmpsb
jnp
enter
pop
repnz
mov
mov
stos
jae
clc
jg
imul
and
fadd
push
and
inc
leave
stos
js
jg
adc
cmp
pop
push
mov
adc
cli
insb
xor
out
out
js
jo
aas
mov
mov
xchg
std
leave
dec
inc
add
mov
out
xlat
ljmp
clc
iret
dec
adc
dec
lcall
out
dec
shrb
outsb
add
cmp
adc
pop
imul
movsb
jecxz
ficoml
mov
jle
sub
mov
sbb
data16
in
ljmp
inc
mov
xchg
sbb
jnp
lahf
cmpsl
mov
add
dec
hlt
or
movb
dec
in
xchg
sub
lcall
dec
lret
es
dec
xchg
and
int
xlat
add
fs
add
movsl
dec
pop
arpl
push
push
leave
push
inc
xchg
rorl
push
loopne
mov
insb
push
jg
push
stos
mov
dec
dec
fsubr
dec
inc
or
in
ds
stc
add
pop
aaa
pop
ss
mov
insl
mov
ds
in
stos
sahf
jnp
mov
push
lods
sti
jns
shrl
push
xor
adc
and
mov
shlb
cmpsl
and
test
jecxz
mov
jecxz
mov
stos
inc
movsl
push
fxch
sub
cmp
xor
add
ret
repz
or
and
out
cmp
lods
arpl
cltd
nop
dec
jl
jg
push
mov
ja
insl
dec
mov
jae
pushw
xor
shll
mov
jmp
or
test
imull
xor
loop
xlat
inc
push
push
mov
sub
or
out
rolb
push
lods
adc
sub
mov
aad
xchg
pop
shlb
mov
jns
xchg
mov
fisttpll
inc
js
cmp
add
xor
int
xlat
outsb
notb
cmp
mov
les
xor
adc
dec
lret
sbb
test
mov
sub
and
shrb
pop
cltd
cmpsl
sub
adc
push
sbb
cmp
jl
push
dec
mov
cld
and
icebp
adc
popf
das
mov
mov
stc
and
fcompl
int3
loop
int
repnz
pop
push
scas
cld
lock
sbb
scas
pop
lsl
or
jecxz
repz
push
fwait
push
movsb
jo
add
and
les
mov
xor
dec
push
mov
push
dec
push
cmp
ret
jl
push
ret
cli
push
sbb
or
inc
inc
cwtl
aas
cmp
lahf
stc
jno
fadds
ret
mov
sub
adc
lods
fldt
fs
mov
test
xor
aam
inc
mov
popa
jmp
insl
jecxz
xor
mov
fistpll
fiadds
cmpsl
jge
cmp
fsts
movsb
jg
push
addr16
pop
push
or
pop
mov
xor
cmp
mov
xlat
push
xor
add
xlat
dec
lcall
dec
aad
inc
das
sbb
sahf
test
add
movsb
push
ficompl
rorl
filds
stos
jns
filds
inc
or
ljmp
lock
and
scas
inc
sub
dec
daa
or
hlt
adc
mov
adcb
in
sbb
jg
lods
xlat
iret
adc
inc
shl
mov
and
popf
fcoml
notl
movsl
shlb
mov
icebp
in
imul
in
out
lods
test
jl
inc
insb
into
inc
ret
xor
insb
js
pop
cmp
and
and
loopne
cmp
incb
mov
pop
adc
cmp
cmp
xlat
adcl
stc
adc
inc
and
clc
xchg
cmp
clc
and
adc
dec
mull
popa
daa
xor
jae
fstl
je
mov
and
fsubs
loope
dec
or
pushf
or
mov
loop
xchg
lahf
jmp
adc
jge
test
cmpsb
jnp
xchg
xchg
push
lret
adc
push
orb
sahf
cld
jne
inc
out
test
shr
sub
es
inc
je
xchg
push
movsl
mov
xor
mov
cmc
xor
in
movsb
xchg
in
or
mov
cmc
scas
and
sbb
es
movsb
or
scas
adc
or
imul
fld
jp
pop
adc
pushf
mov
cmc
push
ds
rol
imull
adc
in
dec
out
add
std
pop
xlat
xor
sbb
adc
inc
jge
push
xchg
xor
sub
push
fadd
and
jo
inc
mov
fdivrp
je
test
in
dec
add
mov
adc
jns
or
sub
idivl
hlt
popa
xor
les
stos
sbbl
xchg
lods
jecxz
add
es
adc
out
out
sub
mov
adc
sub
xchg
push
push
push
bound
sbb
les
sti
mov
and
outsb
or
stos
push
jns
arpl
and
and
jns
xor
je
inc
mov
cmp
cld
call
pop
mov
push
push
cwtl
push
xlat
loope
fmuls
ljmp
xor
xchg
scas
sbb
mov
add
add
xchg
mov
les
dec
pop
test
sub
jg
mov
test
jbe
fdivs
xchg
mov
repnz
das
dec
ret
push
push
inc
lods
jnp
push
jl
hlt
dec
cmp
push
in
xor
xor
stc
int
test
sbb
scas
in
mov
push
out
call
in
sti
cwtl
inc
popa
inc
roll
cmp
adc
ret
jl
dec
mov
mov
enter
sub
adc
cmp
jns
xor
pop
test
xorb
jecxz
out
out
pop
or
mov
mov
xlat
xor
pop
shlb
out
push
xor
inc
imul
mov
call
fcmovne
and
jb
adc
fiaddl
cmc
ljmp
movsl
adc
mov
hlt
pop
std
ljmp
stc
ret
inc
lods
mov
adc
fcomps
sub
push
test
pop
jle
jno
iret
or
inc
je
or
add
ret
cltd
ja
iret
cltd
cmc
sti
push
inc
ret
add
sub
adc
insb
lock
lret
icebp
sbb
add
sub
xchg
mov
ror
cltd
stos
cmc
xor
inc
pop
je
inc
ljmp
scas
xor
adc
sbb
fdivr
out
mov
add
sbb
and
subb
mov
into
jecxz
dec
lods
loopne
shlb
sub
mov
les
iret
jns
leave
add
inc
ret
das
add
or
loop
loop
pop
jno
sbb
sahf
sub
adc
push
inc
mov
jns
int
dec
or
loopne
je
push
sbb
xor
data16
jns
push
ljmp
mov
add
icebp
pop
mov
mov
inc
packsswb
add
js
sub
insl
inc
and
into
add
inc
sub
mov
sbb
xchg
iret
repz
xchg
andl
int3
push
dec
lods
mov
movaps
dec
jl
test
jl
int
sbb
sti
adc
fsubrs
ss
loope
scas
xor
out
cmp
bound
and
repnz
scas
adc
jns
shl
cmpsl
repz
test
mov
addr16
jg,pt
out
mov
xor
ror
out
pop
lcall
or
add
orb
outsl
add
push
jge
add
push
sbbb
cltd
xchg
int
mov
imul
sbb
cmp
jo
sub
push
hlt
adc
js
scas
lret
mov
test
pushf
and
mov
push
in
out
sti
ret
lods
aaa
aas
out
inc
push
subb
dec
add
and
aaa
pop
leave
loopew
push
pop
push
sbb
ret
in
xchg
les
cmpb
add
mov
fisubrs
sub
lcall
mov
repz
mov
jl
out
ljmp
add
xchg
shr
xchg
fwait
push
sub
int3
push
sbb
cs
pop
inc
loop
dec
mov
enter
in
dec
lcall
add
sbb
push
mov
aaa
dec
outsb
xor
in
mov
js
filds
sbb
sbb
or
hlt
xchg
mov
xor
sub
loop
daa
popa
fs
push
sbb
call
pop
out
and
js
xchg
mov
pop
sbb
outsb
inc
out
and
inc
ljmp
inc
pushf
cli
push
icebp
add
lret
fdivrs
loop
xor
pop
sahf
mov
cmpsl
testb
idiv
ret
adc
xor
sbb
js
or
adc
mov
lret
je
or
and
ret
out
out
sbbl
leave
adc
adc
add
jle
js
fimuls
push
dec
pop
in
pop
lcall
push
adc
cltd
lock
dec
das
inc
mov
jp
xchg
xchg
jne
lahf
outsb
cwtl
mov
repz
push
sub
xor
sub
inc
dec
fidivrl
mov
jno
repz
scas
movhps
fsubrs
mov
ret
movsb
hlt
add
ror
out
push
xchg
mov
andl
cmpsl
leave
adc
cmc
or
mov
jp
imul
push
fisubl
xor
and
dec
stc
mov
in
xor
push
arpl
mov
out
dec
mov
inc
mov
push
shrb
out
stos
fwait
push
fwait
mov
movsl
xor
jb
mov
gs
je
dec
paddw
pop
imul
add
jno
negb
add
or
jp
push
outsb
enter
sub
out
cmpsl
ja
pop
in
adcl
pop
jge
add
xor
cmp
enter
mov
jge
pop
push
test
fcmovb
jbe
repnz
ss
inc
mov
mov
lsl
iret
pop
pushf
je
push
in
roll
rcll
ja
pop
inc
lods
cmp
jae
cmp
in
push
jl
mov
add
inc
mov
mov
ljmp
mull
enter
ss
adc
or
jnp
dec
jg
lods
push
fxch
cmp
ja
mov
inc
cmp
int3
mov
adc
or
push
out
shlb
outsl
cmc
inc
addl
push
scas
sub
js
mov
scas
cmp
cmp
jecxz
insl
gs
sti
mov
nop
inc
shr
cli
cmp
gs
int
push
pop
lahf
hlt
in
pop
shr
out
dec
jae
gs
jae
sbb
jl
scas
jo
inc
mov
sbb
push
adc
add
shr
loopne
arpl
add
and
sti
jo
nop
pop
leave
rcrb
movsb
sarb
add
xchg
lods
push
mov
cs
adcb
out
vmaxpd
fisubs
lcall
adc
mull
add
sbb
pop
and
and
fwait
lcall
push
ljmp
sub
inc
daa
int3
lcall
xchg
inc
push
xor
push
bound
aam
add
into
pop
je
es
jg
mov
jae
push
bound
push
pushf
inc
adc
aas
xorl
xchg
imul
sbb
cmpsl
lds
clc
out
mov
mov
xchg
mov
add
int3
out
repz
push
std
stc
lret
movlps
pop
adc
cmpsb
adc
add
sub
or
shll
jbe
sub
outsb
in
neg
imul
rclb
add
mov
jp
int3
jmp
xchg
sub
add
nop
iret
int3
ljmp
push
sub
jle
pop
js
or
adc
jle
stos
sbb
inc
jle
or
mov
lahf
sub
sbb
iret
int
je
xchg
pushf
adc
fstpt
and
pushf
decl
loop,pn
adc
add
insb
mov
xchg
and
sub
jae
pop
mov
nop
xchg
aad
xchg
xor
sub
repz
inc
pop
loop
mov
mov
add
movsl
sub
cmovle
push
out
jge
or
fistl
adc
cmp
fstl
or
hlt
les
ret
aas
loopne
push
imul
fisttpll
sbb
ljmp
sub
hlt
sbb
je
je
jecxz
adc
cmp
jno
sbb
cltd
sbb
testl
sbb
frstor
mov
ret
dec
adc
es
insb
pop
cmp
cmp
ljmp
clc
cmp
pop
or
loopne
pop
sti
andb
mov
mov
stos
ljmp
sub
mov
rcll
les
jp
or
sahf
mov
fwait
xlat
adc
sbb
or
sub
pop
mov
das
and
lods
scas
pop
xchg
xchg
sbb
movsb
fs
in
ds
hlt
ret
dec
fnstsw
sbb
xorb
mov
out
lret
add
jno
pop
sbb
adc
jecxz
repz
popa
sub
jle
push
pop
xchg
out
pxor
and
ret
fnstsw
mov
lock
loope
mov
or
cld
push
movb
js
insb
jmp
repz
jecxz
mov
fnstcw
jle
ss
mov
cmp
inc
push
enter
mov
or
mov
push
mov
sub
inc
cwtl
mov
xchg
imul
mov
push
xor
sahf
or
or
jle
fwait
push
push
cld
xchg
mov
xor
lret
subl
aam
pop
mov
or
adc
push
pop
aaa
jnp
test
cmc
int3
and
jae
mov
xor
subb
inc
mov
add
sti
mov
or
mov
test
cmp
test
adc
cmp
jns
adc
ljmp
xor
jae
stos
inc
sbb
and
inc
repnz
mov
icebp
cld
mov
add
mov
jnp
call
outsb
jno
lahf
jge
mov
add
popf
mov
outsl
outsb
pop
pop
dec
stos
leave
dec
ljmp
sub
inc
icebp
dec
imul
xchg
cmp
adc
ficompl
jo
out
mov
inc
mov
jnp
pop
stos
leave
subb
subl
mov
dec
push
data16
cmp
pop
arpl
ja
mov
es
dec
sbb
aaa
cwtl
fs
push
cs
popf
daa
xor
das
pop
cmp
bound
jmp
or
lwpval
loope
js
inc
out
jecxz
sub
add
xchg
hlt
psrad
jl
push
xor
shll
pop
ficompl
inc
daa
in
sbb
sti
cwtl
add
test
xor
inc
aad
and
and
stos
add
xchg
mov
xor
inc
rcll
jecxz
pop
adc
xor
cmp
jb
jbe
sahf
inc
daa
xchg
mov
cmp
adc
pop
inc
jl
fld1
js
or
sbb
adc
push
or
dec
add
in
mov
adc
or
adc
lods
add
mov
xor
ret
mov
rcll
cmp
mov
dec
shrb
mov
jae
adc
in
bound
pusha
aam
push
das
mov
sahf
ja
mov
popf
addl
in
mov
lahf
fwait
mov
mov
inc
mov
and
push
scas
cmpsb
sub
stos
out
das
sub
jg
aas
jae
xchg
pop
iret
pop
hlt
mov
data16
or
es
int
add
les
mov
xor
adc
sub
pop
ss
and
inc
xor
rcr
mov
mov
test
ret
fwait
push
hlt
int
aaa
fisubl
xor
inc
dec
cmp
jae
add
xor
testb
or
push
popf
and
sbb
lea
add
hlt
mov
pop
mov
lds
addr16
adc
mov
iret
push
sub
in
out
xor
jo
in
pop
or
mov
stos
adc
or
mov
push
aaa
adc
and
xchg
and
adc
xchg
insb
inc
ret
in
lds
or
push
in
cmp
xor
sub
lea
clc
pop
xchg
ja
lcall
cmp
pushf
inc
addr16
xchg
xor
cli
popw
push
mov
push
aad
jp
cmp
cmp
cmp
pop
mov
inc
mov
and
icebp
arpl
lds
in
adc
loope
fs
sarb
dec
bound
cmp
xor
cmp
insl
outsl
call
ud0
loop
mov
dec
cld
xor
lret
aad
int3
test
inc
aam
xor
je
fmuls
xchg
arpl
xor
pushf
cmp
or
jo
ss
xchg
push
mov
and
das
rcrb
subb
add
and
stc
pop
add
into
std
or
mov
repz
jns
loop
pop
inc
mov
or
test
int
sbbl
mov
insl
mov
cmpsb
das
mov
outsb
or
mov
sub
ss
bound
sub
in
ret
push
push
stc
jg
stos
cmp
hlt
daa
ss
int
mov
sarb
in
xlat
aaa
sub
ds
pushf
xchg
or
or
std
rorl
inc
in
out
popf
clc
pop
ret
push
ljmp
add
push
int
andl
gs
pop
sahf
mov
insl
lahf
inc
cli
in
jg
sbb
mov
in
mov
fs
xchg
fdiv
jns
lret
pop
inc
inc
jno
into
push
ret
dec
stos
and
sbb
roll
scas
mov
xor
or
cmp
xor
ss
les
iret
push
addr16
sti
push
faddl
icebp
addr16
cmp
sub
xchg
mov
mov
pop
or
cmc
sarb
cli
sub
out
outsb
xor
mov
loopne
vphsubdq
adc
lret
adc
icebp
mov
sarb
in
test
shlb
out
cltd
dec
inc
pop
pushf
stos
aas
daa
rcll
je
sahf
data16
sbb
add
lcall
sub
jmp
pop
popa
mov
repz
push
xor
add
sbb
imul
ljmp
sbb
adc
sbb
lcall
out
stc
push
mov
xchg
int
je
jecxz
ret
mov
jo
jecxz
je
in
push
imul
insl
mov
test
scas
mov
cmpsb
ljmp
add
sbb
push
ret
pop
cmp
addr16
push
cmpsl
out
xchg
pop
inc
sub
das
pop
ds
xchg
add
mov
push
pop
fwait
in
out
clc
cmpsl
adc
out
outsb
outsb
push
std
arpl
or
and
mov
pushf
and
incb
fsubs
imul
and
mov
pop
lods
pop
sub
stos
push
pop
pusha
insb
scas
xor
stc
hlt
jns
add
push
jns
jo
iret
push
dec
mov
xchg
hlt
and
push
flds
push
pop
add
xchg
dec
mov
stos
xor
loopne
nop
nop
shlb
mov
rolb
xchg
orb
es
jnp
jle
xchg
mov
ss
dec
push
mov
inc
adc
jmp
loope
cltd
adc
cmc
imul
ret
ja
jnp
stos
and
inc
mov
push
jle
inc
jne
fbstp
jecxz
mov
sbb
mov
or
jl
adc
and
rorb
stc
jecxz
add
in
aas
xor
xchg
xchg
ficomps
sbb
mov
inc
sti
push
leave
sbb
je
aad
repnz
dec
add
xchg
fs
push
les
pop
je
je
js
cli
popa
cmc
fmuls
ret
xchg
cmpsl
outsl
inc
xchg
adc
cltd
incb
fld
dec
or
shrl
mov
jns
inc
inc
das
mov
inc
push
pop
xchg
cwtl
fistpll
movsb
jl
and
pop
mov
mov
inc
das
cmpl
in
jne
mov
jl
arpl
mov
adc
repnz
push
and
sub
stc
sbb
cltd
mov
jecxz
cli
sub
sub
and
adc
pusha
adc
xlat
in
call
js
stos
sbb
popa
jns
push
inc
cli
andb
in
out
test
jnp
and
inc
stos
push
jge
pop
jp
jg
inc
loopne
cmp
mov
pop
loop
xor
lods
idivl
mov
adc
into
lea
jecxz
jge
ljmp
cmp
popa
mov
cmp
push
rolb
dec
repnz
push
test
jno
or
inc
ljmp
test
aas
lods
cmpsb
inc
adc
in
je
icebp
cmp
xorps
dec
inc
addb
dec
or
dec
sub
sub
imul
ret
push
sbb
sub
pop
in
mov
push
jmp
xchg
jmp
ret
movsb
dec
hlt
and
mov
adc
ds
dec
mov
mov
cmp
loop
sbbb
add
push
jmp
cs
sub
mov
leave
ret
sbb
test
dec
pop
ljmp
push
out
or
imul
out
add
aam
inc
push
cld
fs
out
sbb
dec
rorb
shrb
pusha
mov
addr16
push
in
sahf
or
fildll
orb
fimull
lcall
xor
hlt
or
push
dec
pop
shrb
inc
ficompl
test
fisubs
pop
lret
jp
pop
push
lahf
or
pop
ficoml
je
inc
int3
repz
mov
mov
test
add
add
gs
fcmovnu
inc
fsubrs
xchg
jecxz
sbb
fs
scas
push
icebp
xchg
out
movb
faddl
sti
insb
fwait
out
add
mov
xchg
mov
pop
mov
mov
mov
push
dec
hlt
jl
std
xor
lahf
mov
sahf
ret
or
sbb
dec
aaa
dec
adc
pusha
mov
push
xchg
adc
cld
frstor
xchg
mov
repnz
xorl
rolb
movsb
ja
orb
fcomps
push
pop
xor
mov
pusha
or
mull
mov
fisubrl
shrb
mov
fldl
mov
daa
mov
ds
mov
sahf
push
xor
inc
xor
leave
mov
decl
pop
mov
pop
loop
and
loop
sbb
inc
jns
pushf
dec
xor
adc
clc
clc
inc
push
stos
cltd
cltd
dec
sbb
jae
fadd
imul
loopne
rorb
sbb
mov
xor
xchg
mov
xor
in
cmp
aaa
dec
sub
dec
or
cmp
notb
adc
mov
out
outsl
inc
lods
insb
xchg
jecxz
xchg
hlt
dec
jbe
push
add
cwtl
xor
cld
aas
adc
sahf
jge
jle
jne
mov
imul
xor
fmull
jg
push
dec
push
mov
mov
loopne
pushl
adc
cmpsb
sub
fisubrl
stos
movsb
add
xchg
aas
dec
loope
insl
push
test
push
xchg
cli
ss
cmp
inc
lret
add
mov
mov
outsl
add
je
sub
push
imul
out
ret
pop
hlt
push
cmp
enter
cli
inc
inc
xchg
fwait
sbb
dec
in
adc
xchg
std
shll
ss
jno
pop
decb
adc
jae
adc
cwtl
pusha
fwait
test
leave
or
in
mov
pop
aam
jmp
mov
cli
mov
mov
jae
inc
inc
in
adc
out
sub
add
lds
mov
ja
jge
jnp
inc
fs
pop
jb
mov
add
in
ja
or
sub
in
popf
sub
std
je
pushf
push
inc
popf
imul
mov
push
loope
mov
mulb
loope
add
test
leave
cmp
dec
ret
pop
fisubs
or
and
stos
mov
xlat
scas
xlat
fs
mov
or
data16
cwtl
int3
ss
aaa
xchg
ljmp
cli
jecxz
adc
sub
sti
jae
imul
nop
lods
jb
nop
mov
inc
cmpl
dec
xchg
sbb
cmpsb
xor
push
test
cmpsl
mov
push
push
push
mov
jle
movl
sbb
cmpsl
dec
popf
push
les
and
mov
adc
sub
and
and
lret
adc
mov
sbb
divl
cmp
inc
or
dec
cld
incb
test
push
jmp
or
add
sbb
fs
shlb
das
jp
cmp
jp
das
pop
hlt
dec
xor
in
push
pop
pop
dec
loopne
out
pop
push
lahf
enter
cmp
sbb
cmp
test
das
into
notb
dec
nop
xchg
lret
rcll
adc
sbb
or
addr16
dec
movl
loop
cmpsl
inc
sbb
in
or
cwtl
xchg
xchg
add
aaa
jecxz
mov
jmp
add
aas
xorb
aaa
sub
in
mov
jge
xlat
or
cmp
or
jmp
movsb
stos
jbe
jg
jle
aad
xchg
sbb
jp
aaa
mov
mov
xor
movsl
sbb
out
in
lds
mov
adc
cs
shlb
imul
sbb
xchg
test
xor
stc
and
pusha
shl
push
enter
out
scas
fidivrs
out
jg
and
inc
lcall
add
lds
cmpsb
or
mov
into
lcall
sub
push
adc
sti
into
fnstsw
jge
cmp
push
pop
insb
test
arpl
das
sbb
adc
sub
push
xor
call
jecxz
aam
int3
sbb
push
ret
cs
push
jns
loope
dec
and
scas
maskmovq
testl
dec
xor
hlt
mov
movsl
pop
add
push
fsubl
push
ljmp
adc
adc
mov
popa
pop
cli
or
xor
cltd
cli
orb
lds
dec
idiv
repz
scas
out
mov
dec
mov
pop
add
pop
mov
les
add
xor
jecxz
or
and
sbb
fadds
outsl
jp
mov
ds
les
faddl
jb
notl
test
jg
in
sub
and
or
mov
cld
add
add
jae
mov
sub
cmp
cmp
sbb
fistpl
cmp
mov
jnp
sub
or
test
pop
pop
ljmp
inc
mov
idivl
push
out
daa
xor
lahf
push
and
fimull
fldenv
mov
add
aam
xorb
xchg
daa
sbb
xor
sti
sbb
bound
push
lock
xchg
mov
inc
je
imul
les
xlat
inc
cmp
loopne
scas
adc
movsb
test
rcrb
mov
or
fsubp
dec
inc
inc
adc
outsl
fiaddl
cmc
dec
xchg
ret
mov
xlat
mov
mov
push
in
inc
or
adc
pop
sti
push
sti
xchg
lock
add
push
jno
mov
ljmp
push
cld
punpcklbw
pop
aas
cs
jp
inc
cmp
sbbl
and
pop
das
sbb
cmpsb
xchg
jmp
pop
or
subb
cmp
jnp
sub
push
pop
or
cmp
imul
stos
jp
ret
sahf
ljmp
mov
std
mov
push
xchg
jmp
lahf
daa
xor
mov
jmp
mov
in
push
pusha
fldt
pop
pop
push
mov
mull
ret
insl
and
lcall
or
jnp
cld
or
clc
jae
pop
push
jle
jl
cwtl
jecxz
pxor
or
xor
sub
dec
movsl
xor
xchg
lods
jno
pop
inc
pop
shl
jg
mov
sub
scas
outsb
pusha
xor
imul
xchg
and
ret
sbb
sbb
aam
push
mov
sahf
movsl
enter
lahf
jp
rol
ret
out
inc
push
mov
inc
push
mov
xor
mov
rcll
bnd
mov
lea
mov
shll
aaa
rolb
or
into
push
push
test
enter
addr16
jae
dec
inc
adc
dec
daa
cld
inc
and
or
lods
popf
mov
divl
test
and
loopne
test
jno
lret
clc
in
sub
cmp
push
mov
mov
inc
dec
bound
hlt
mull
ret
sbb
pop
dec
imul
shrl
repnz
test
xor
xchg
gs
cmp
in
repz
mov
push
cmp
dec
dec
fsub
inc
add
out
pop
adc
std
inc
shlb
dec
dec
mov
or
lds
xor
bound
test
mov
subl
arpl
cmp
xlat
mov
imul
scas
lret
jno
inc
loope
adc
out
aas
xor
insb
nop
movb
mov
push
sahf
sub
lcall
and
or
jl
dec
setbe
test
test
mov
push
cmpl
and
stos
push
cmp
adc
loop
sub
sbb
jnp
adc
dec
push
pop
lds
fwait
mov
push
dec
push
bound
lods
adc
push
or
mov
sub
popl
je
inc
ret
mov
insb
test
lock
ss
andb
jne
bound
jb
stos
push
jns
jge
or
roll
inc
fisttpl
sahf
jbe
mov
les
dec
mov
pop
aaa
mov
adc
jne
gs
lods
cmp
std
stos
adc
cmpl
stc
cmpsl
pop
shlb
mov
lods
add
test
and
js
mov
jl
cmp
pushf
xchg
ret
jg
and
cmc
push
adc
jns
pop
stc
out
xchg
lret
gs
lret
scas
out
inc
sbb
or
and
adc
in
push
adc
mov
push
call
sbb
repz
mov
inc
leave
dec
test
sar
je
ror
xchg
jmp
add
std
fcmovnu
jne
test
outsl
fcom
pop
je
std
imul
dec
and
or
jmp
ret
mov
sti
in
push
nop
dec
mov
dec
xchg
cmpb
andl
pusha
pop
xor
inc
pop
pop
ds
lcall
aam
aad
adc
xchg
aam
cmp
bound
rorl
fistl
jle
call
and
das
mov
jno
sub
stos
mov
aad
mov
xchg
xor
dec
repnz
push
mov
and
rcr
jns
movq
addr16
jno
cmp
sub
mov
cmpsb
mov
cltd
xchg
pop
fwait
xchg
stos
cmp
mov
stos
sub
adc
inc
add
push
aas
jge
stc
out
sarb
sub
push
cmp
cmpsl
subb
adc
jl
or
pcmpeqw
jle
or
orl
dec
sub
adc
scas
femms
push
arpl
sbb
add
or
mov
and
mov
or
outsl
cmp
icebp
xorl
cmp
gs
or
wbinvd
aaa
test
aad
sub
enter
xor
adc
jg
dec
fwait
mov
adc
cld
adc
mov
cmpsb
fisubrl
cmp
adc
mov
aas
fwait
gs
cmc
fisttpl
enter
adc
lds
sub
shlb
cmpsl
fisubs
sbb
sbb
bound
pop
daa
popl
bound
rolb
adc
ror
adc
jo
cmpb
int
push
jl
cli
dec
and
inc
mov
int
pmaxsw
ljmp
and
out
jbe
mov
shr
scas
pop
lret
xor
sub
jp
xor
lods
mov
inc
xchg
xchg
cmp
jnp
js
out
lea
gs
inc
dec
dec
mov
fsubl
ret
sub
popf
sbb
dec
push
mov
es
xchg
push
dec
add
inc
stos
inc
pushf
test
cmp
data16
and
and
cmp
inc
mov
xorb
pop
test
addr16
pushf
jnp
sub
adc
lods
ret
sub
and
pop
fisttpl
or
dec
mov
cmpsb
in
xorb
push
es
adc
std
sahf
mov
push
or
arpl
adc
dec
inc
sti
enter
popa
aas
sub
push
push
ret
out
adc
sub
xchg
and
idivb
imul
dec
aam
or
mov
in
outsb
sbb
mov
adc
inc
inc
jle
inc
cmp
sbb
shr
out
orl
outsl
dec
ljmp
gs
enter
test
jns
aaa
jns
jne
jne
clc
mov
xchg
incl
jno
jae
sahf
dec
clc
jae
xor
hlt
loop
in
xchg
cmp
pop
mov
scas
in
jb
mov
ljmp
cmpsl
pop
jo
fldcw
adc
mov
out
adc
pop
std
leave
mov
mov
sahf
sbb
int
jo
adc
inc
cmc
adc
jnp
pop
add
rcll
jae
lods
lcall
sbb
icebp
ja
jle
mov
bound
jbe
or
std
rorb
sub
or
xchg
stos
adc
inc
push
jnp
lods
out
mov
mov
pop
movsl
rol
aad
jb
sub
dec
jns
xor
adc
adc
stos
pop
cmpsb
ds
push
jno,pt
fstps
adc
sarl
lea
sub
jp
je
mov
jmp
shl
inc
jns
btrl
out
test
daa
insb
in
mov
pop
nop
imul
adc
adc
mov
out
jecxz
aam
subb
dec
pop
ljmp
adc
push
xor
test
mov
sti
mov
xchg
out
or
pop
jmp
cwtl
xchg
or
daa
into
scas
adc
sbb
cmp
bnd
inc
into
sub
test
pop
inc
pusha
mov
sti
mov
xor
out
testb
movsl
addr16
icebp
enter
jnp
nop
push
push
stc
outsb
mul
scas
and
push
sub
adc
jae
mov
jmp
or
push
inc
mov
call
dec
hlt
nop
xchg
pop
pop
dec
cmpb
cmpsl
push
mov
shlb
sub
sahf
xor
ja
dec
add
sbb
jns
pop
push
cmp
nop
fnsave
loop
bound
adc
and
xchg
stc
lret
adc
jnp
leave
addb
mov
vpcmpgtb
js
adc
fs
mov
dec
lock
aas
ffreep
std
push
push
jno
ret
or
cmc
pop
add
push
xchg
rorb
or
out
sbb
dec
in
insl
dec
outsb
or
jle
or
test
jle
lcall
cli
lcall
xchg
in
iret
xchg
in
fstpt
out
xlat
jns
add
mov
cmpsb
sub
pop
and
les
cmp
xlat
and
int
outsl
daa
mov
sub
icebp
dec
sbb
jae
xchg
icebp
mov
cmp
adc
cmc
adc
scas
aad
cmp
scas
call
mov
aad
mov
inc
jbe
daa
jbe
inc
jp
repnz
in
dec
into
or
fstl
cmp
cmp
push
xor
xchg
cmp
aad
adc
les
add
inc
lret
test
inc
int3
or
lds
inc
lcall
pop
pop
sbb
jbe
hlt
mov
add
jo
insb
jg
push
adc
cmp
dec
pop
push
xchg
lcall
cwtl
xor
sub
lods
imul
mov
adc
mov
clc
out
in
stc
and
push
pushf
sub
pop
pushf
lret
fstpl
rcr
and
xchg
cmp
jno
mov
in
pop
mov
pusha
pop
arpl
add
out
fisttpl
aas
std
jne
jae
push
mov
imul
xchg
adc
add
jnp
sti
jl
or
inc
cmc
rorb
pop
stos
inc
xor
jae
mov
mov
cmc
adc
jmp
jecxz
lcall
sub
pop
add
cwtl
testl
notb
mov
shll
push
loop
inc
popf
pop
fdivs
sub
cmp
mov
push
mov
mov
call
xchg
fcompl
and
jecxz
mov
mov
sbb
inc
cmpb
or
jecxz
push
imul
ret
push
push
out
mov
dec
inc
test
leave
js
push
push
xor
add
pop
or
adc
loope
pushf
jg
push
movsb
xchg
ret
mov
rol
sarb
inc
push
lahf
gs
ds
xchg
push
jecxz
pushf
dec
and
repnz
xchg
cs
insl
sbb
popa
dec
add
cltd
cmp
fsubl
or
cmpsb
pusha
cmp
cmp
jnp
add
das
mov
cmp
xchg
add
incb
jp
lcall
jae
fsubl
repnz
in
negl
jmp
lahf
mov
xchg
push
push
adc
loope
cwtl
add
stos
pushf
push
sub
aaa
inc
int
lods
mov
sbb
imul
js
js
out
mov
jmp
out
cmpsl
test
inc
jg
in
je
lcall
jb
sub
fwait
nop
xor
addr16
movsl
test
push
or
sbb
shll
sub
stos
dec
mov
sub
pop
inc
aad
outsb
sahf
push
ret
les
and
pop
mov
dec
popa
nop
int
cmpsl
fwait
mov
add
stos
or
shll
ds
fs
push
xor
test
repnz
xlat
and
mov
daa
js
popf
xchg
pop
mov
pusha
jns
hlt
mov
scas
add
repnz
dec
mov
add
rclb
jns
inc
scas
dec
fwait
or
cs
and
fdivr
into
repnz
inc
call
ljmp
xchg
in
or
lret
dec
xor
ds
jge
jns
sbb
test
push
xchg
push
push
dec
aad
js
sub
bound
cmp
pop
std
push
test
lar
lahf
xlat
pushf
out
daa
push
adc
out
std
sub
dec
add
ja
sbb
mov
dec
rclb
add
push
inc
jns
jp
jecxz
cmp
push
addl
jne
sbbb
pop
jno
push
jg
inc
icebp
pusha
xor
push
shrl
mov
popf
adc
mov
and
pop
je
lcall
jns
cwtl
pusha
mov
dec
scas
out
inc
xor
dec
and
jne
jb
cld
xchg
push
xor
xor
sub
xor
inc
or
xor
mov
test
mov
fwait
popf
pop
mov
addb
xchg
mov
inc
fidivs
push
lods
pop
inc
xor
adc
sub
mov
xchg
and
nop
aaa
add
sub
pusha
imul
int
pushf
and
out
lea
cmpsb
insb
mov
fisttpll
pop
mov
js
mov
imul
insb
stos
out
sarl
xchg
xchg
stos
out
rorb
mov
mov
movl
cmc
pop
sbb
cmp
in
leave
push
in
frstor
insb
sbb
pop
xchg
dec
ss
cwtl
or
les
sub
and
aad
or
push
xchg
push
add
faddl
sbb
jne
and
mov
jecxz
stc
aas
callw
mov
ret
aam
pop
pusha
imul
loop
out
int
fiadds
pop
push
out
je
cmc
pop
in
add
into
adc
ja
in
push
fdivr
mul
ret
xor
in
inc
gs
cmp
std
lret
divl
mov
hlt
inc
loopne
push
add
into
fisttps
push
jne
pop
movsl
sub
jmp
xor
cmp
test
add
push
add
adc
int
loopne
xchg
loope
or
sub
inc
dec
jne
rcl
add
loopne
fdivr
cmp
mov
pop
adc
mov
pushf
sub
adc
sbb
popf
xor
xchg
shll
das
ret
lret
mov
pop
push
mov
xor
lret
mov
xor
xchg
aas
mov
mov
test
ja
out
imul
dec
scas
mov
sti
sbb
dec
inc
shll
push
sub
ds
sub
xor
mov
int
and
push
push
fldl
dec
enter
pop
inc
xor
pop
addb
pop
aaa
arpl
sbb
insb
outsb
clc
fldl
cmp
pusha
imul
mov
in
inc
mov
repz
xor
fbstp
pushf
push
sub
inc
sub
sbbb
add
das
pusha
loop
mov
out
jmp
ljmp
and
shll
addr16
cmp
pop
xchg
rol
scas
mov
mov
add
fisubl
mov
testb
addr16
inc
test
and
ret
je
mov
and
push
sbb
shrb
xor
inc
sub
add
push
jle
sub
jle
mov
popa
xor
push
ret
dec
adc
pop
andb
mov
daa
pop
shll
out
or
sub
pop
lods
into
sbb
lahf
xchg
push
std
out
sub
dec
push
cmpsl
sbb
fistpll
inc
add
rcrl
mov
and
paddusb
adc
rcr
add
add
cmp
add
ljmp
into
dec
ret
pop
fs
mov
lret
fldenv
mov
sbb
out
cltd
mov
adcl
mov
add
fs
xor
cmpsb
jg
enter
insb
in
inc
inc
push
out
pop
clc
push
xchg
xor
sti
mov
or
mov
sbb
ret
in
push
adc
push
loop
addr16
cmp
pop
lock
mov
idiv
cmp
xor
ljmp
lds
xor
popa
jmp
jmp
and
jmp
mov
inc
in
loope
hlt
stos
jmp
std
xor
gs
popf
xor
adc
stos
aad
stos
lcall
sarl
mov
cmc
xor
pop
fsubrs
mov
es
push
lods
xchg
jl
add
jge
xchg
push
push
fcmovu
test
xchg
lods
inc
mov
xorl
insl
aad
nop
cld
mov
insb
cld
and
scas
ffree
add
xor
pop
cmpsl
syscall
es
aam
popf
cmp
rcrl
into
jmp
cli
push
or
xor
mov
lret
movb
xor
xchg
mov
fdiv
mov
aaa
inc
cmc
sbb
xor
jl
and
orb
out
or
stos
inc
xchg
and
ficoms
sub
scas
xlat
ret
add
lods
or
scas
inc
pop
data16
fdivl
adc
xchg
xchg
adc
lcall
pop
sbb
xlat
mov
add
pop
pop
pusha
testb
xchg
aad
xbegin
hlt
pop
fsub
mov
punpckldq
ljmp
or
fldenv
addps
jp
lds
mov
inc
or
sbb
stc
aam
inc
jg
mov
lds
mov
add
cmp
sbb
jno
es
clc
push
insb
mov
int
lcall
jl
sub
xor
sub
js
popa
mov
pop
cmp
insl
sbb
mov
sbb
sbb
scas
add
mov
xor
inc
fidivl
cmp
dec
out
ljmp
dec
mov
sbb
out
and
inc
nop
add
xlat
mov
xlat
addr16
mov
push
test
in
nop
lahf
popa
push
out
andb
enter
mov
fildll
sub
outsb
adc
xchg
jno
cmp
out
in
repz
scas
test
popa
sub
mov
xchg
je
lods
adc
lea
xor
pushw
jl
fdivr
mov
fcom
loopne
or
or
hlt
cmc
incl
adc
cmp
cmp
repnz
iret
lock
imul
sbb
hlt
push
inc
pop
mov
das
daa
insl
jnp
jl
sbbl
sarb
lods
fwait
lock
xchg
popa
outsb
and
adc
ret
orps
loopne
movsb
sub
sub
xchg
xlat
xor
loope
push
add
jmp
fiaddl
add
sarb
pop
cltd
out
enter
es
cmp
push
ficomps
stos
sub
mov
xor
lahf
mov
and
jge
je
cmp
fldenv
je
arpl
cmpsb
repnz
daa
push
fstp
push
xor
outsb
cwtl
xchg
fwait
jbe
pop
fs
outsl
cmpb
imul
movsl
mov
jae
das
cld
push
out
sahf
mov
lret
test
jne
pop
test
imull
jbe
sahf
add
cmp
push
shll
lret
mov
dec
add
ret
mov
jmp
inc
pop
mov
xchg
push
call
push
adc
and
pop
or
mov
or
shl
std
fistpl
jle
pop
mov
cltd
call
mov
dec
bswap
fistpll
push
hlt
out
dec
adc
int
mov
aam
dec
push
or
lock
jg
xchg
jmp
rcr
xor
push
pop
scas
mov
pop
scas
leave
out
sarb
out
fsubrl
mov
mov
add
ret
lret
lods
repz
cmpsb
cmp
cmpsb
jns
mov
popf
mov
dec
cld
jne
nop
aaa
ja
stos
xchg
popa
xor
cmp
pop
fisttpll
dec
mov
mov
xchg
adc
aaa
pop
pop
and
mov
jne
jp
sbb
inc
stc
mov
xorl
dec
mov
stos
jae
adc
dec
out
or
lock
jno
in
push
jmp
test
sahf
jns
iret
testl
pop
dec
sub
movsl
xor
out
mov
loopne
lcall
cmc
scas
push
mov
inc
lods
inc
push
sub
add
dec
dec
adc
add
xchg
mov
inc
fisubs
int
or
pop
shrl
cmp
aam
subl
add
mulps
test
shrl
addl
fisttpl
cs
clc
mov
adc
cmpsl
jae
and
sti
lods
push
or
and
mov
adc
jp
sti
into
xor
cwtl
mulb
dec
sbb
jb
cld
imul
inc
jne
test
mov
sbb
clc
jle
mov
pop
jb
das
scas
sbb
hlt
mov
aam
adc
iret
jl
aaa
xor
hlt
mov
repnz
addr16
push
inc
call
add
and
shrb
adc
jne
clc
push
xchg
repnz
sbbl
es
xor
dec
inc
pop
out
cmp
mov
leave
test
and
dec
icebp
mov
leave
sbb
pop
jno
push
inc
sub
mov
jmp
fisubl
dec
mov
sbb
pop
and
mov
sahf
js
sbb
add
push
leave
cltd
xchg
pop
dec
pop
ret
xchg
and
cmp
pop
cs
mov
xchg
iret
out
inc
cmp
outsb
inc
rcrb
fisubrs
pop
iret
orl
and
jmp
leave
leavew
jo
fimull
xchg
sahf
arpl
addb
punpckhbw
jo
cld
out
xchg
orl
fisttps
mov
idivl
and
lods
insb
or
jne
mov
xchg
mov
loopne
mov
mov
dec
icebp
roll
loope
mov
dec
ffreep
inc
mov
icebp
lea
pop
aad
inc
lea
or
push
cmp
shll
sub
push
push
xor
lods
lds
push
cmpsb
xlat
jecxz
mov
pop
or
popa
in
pop
sti
xor
add
stos
add
gs
pop
cwtl
ljmp
dec
xchg
fiaddl
loopne
loope
pop
sbb
rorl
out
hlt
push
ret
popa
mov
cld
imul
out
pop
pop
pop
xchg
inc
mov
xchg
xchg
cs
iret
in
sbb
js
aam
scas
jle
je
clc
xorb
dec
jae
xor
add
in
cwtl
or
push
fmull
and
ja
and
dec
xor
testb
out
jge
in
imul
jge
jmp
out
inc
aam
jl
call
arpl
int
jmp
fcomi
jp
imul
adc
lods
inc
in
jg
scas
add
xlat
inc
cmpsb
inc
mov
into
or
scas
clc
push
pop
cltd
lock
ljmp
lcall
mov
pop
xor
pop
js
mov
xor
sub
fwait
xlat
or
out
inc
fucomp
jmp
sub
ficoml
jl
push
scas
xor
pop
xchg
dec
adc
scas
xlat
adc
xor
mov
dec
daa
cld
test
add
cltd
aam
mov
das
add
ss
jmp
fwait
mov
or
out
sarl
xchg
into
jmp
sbb
fstpt
sub
sbb
stos
sbb
inc
push
jae
out
rcr
imul
pop
test
mov
mov
movsb
subb
in
cld
pop
or
cmp
xor
out
jo
or
xchg
sub
mov
mov
in
pop
add
and
icebp
rorb
lcall
or
xchg
or
sub
cmp
push
bnd
pop
fcompl
sbbb
jmp
test
lret
push
adc
pop
insl
mov
imul
jp
stos
loope
ja
jl
in
jecxz
jmp
mov
addr16
test
xchg
inc
jge
dec
les
les
pop
ds
test
fildl
and
in
push
nop
loopne
pop
fistl
je
mov
lods
fsubrl
pop
push
push
icebp
mov
dec
jns
enter
std
cmc
lcall
mov
mov
fidivl
loop
lds
push
daa
popa
push
rcll
rcrb
xor
sbb
pop
out
and
cltd
das
adc
shll
clc
loop
push
cmpl
retw
je
sarb
out
lret
es
add
xor
mov
andl
aam
push
xor
sub
push
inc
push
cmp
and
push
mov
add
jo
mov
rolb
dec
mov
dec
and
arpl
or
jp,pn
js
pop
pop
push
js
fmulp
fistpl
xor
cmp
push
dec
pop
imul
lock
xor
arpl
xor
mov
push
add
repnz
fdiv
movsl
shlb
into
data16
jae
aaa
jns
out
mov
dec
mov
mov
sub
adc
rclb
mov
loope
mov
adc
cmp
sahf
mov
aad
fwait
mov
sbb
sub
mov
pop
jl
push
lret
adc
xor
jmp
sub
inc
sbb
mov
clc
mov
xor
or
push
bound
or
leave
outsl
je
loop
push
and
and
add
mov
jbe
fwait
ror
decl
clc
xchg
inc
add
sbb
pop
bound
mov
lahf
jl
xchg
lahf
inc
cmpl
jo
and
inc
lret
jbe
imul
lcall
dec
xchg
test
dec
jp
sub
xchg
outsb
push
mov
je
jae
mov
jo
pop
clc
out
cmpsl
cmc
adc
or
je
data16
sub
xchg
and
xchg
or
fbstp
push
stos
repnz
ror
add
aam
cmc
movsl
testb
ljmp
ja
hlt
xchg
add
les
rorb
fsub
lea
iret
and
and
out
mov
stc
sahf
and
cmp
fcompl
lds
pop
scas
adc
hlt
nop
leave
sub
arpl
add
mov
or
pop
jae
dec
dec
daa
xlat
stc
addr16
sub
ret
movsb
adc
add
je
stos
or
scas
bound
or
dec
push
sbb
lods
add
jo
in
cmp
pop
mov
outsl
push
or
stos
jge
cmp
cmp
jg
add
std
popf
out
not
out
inc
add
nop
idiv
aam
inc
in
ret
sahf
jecxz
pop
and
pop
daa
imul
xchg
push
add
imul
loope
adc
fwait
lret
push
lds
jl
mov
loopne
out
stos
lock
jns
in
in
loop
js
xor
add
in
hlt
insl
fs
test
add
pop
insb
in
out
mov
mov
andb
fs
mov
adc
xor
ljmp
ffree
adc
aam
sbb
xchg
es
add
cmp
mov
dec
pusha
inc
xchg
xchg
pop
lret
scas
pop
mov
inc
push
pop
clc
stos
addr16
inc
in
arpl
mov
cli
sti
jl
jns
add
and
sub
dec
cmp
out
jns
divb
sub
pushaw
pop
divl
lahf
loope
ret
fld
std
decl
sub
xor
mov
stos
lds
inc
mov
dec
xor
inc
mov
pop
jo
out
sti
movsl
push
repnz
lcall
lds
repz
mov
into
mov
idivl
sbb
int3
bound
ljmp
and
cmpl
inc
cmp
test
xchg
mov
stc
adc
inc
jne
sahf
pop
movsb
xchg
cmc
xor
mov
jnp
jbe
ljmp
loope
aaa
repz
mov
cmpsl
ljmp
mov
mov
fidivs
cli
pop
mov
lahf
jmp
stos
loop
or
shlb
mov
icebp
mov
out
jmp
inc
lret
or
or
dec
inc
mov
xchg
mov
xchg
ss
femms
fcompl
mov
movsb
roll
loope
out
jmp
dec
push
mov
pop
repz
out
outsl
lret
pop
adc
push
adc
dec
push
insb
hlt
fs
ficomps
cmp
test
aas
pop
idivl
shlb
pop
add
cmpsb
mov
xor
ja
mov
push
sbb
stc
adc
sbb
sub
outsb
call
jle
repz
mov
mov
mov
jae
roll
rcrb
jecxz
cmp
xor
bound
cmp
sbb
xor
nop
jge
inc
lret
add
jbe
fwait
aas
insb
daa
ret
mov
in
cs
lods
and
mov
leave
jbe
mov
fs
push
fs
and
add
daa
pop
into
xor
inc
jo
sti
add
lock
rolb
lods
mov
inc
push
cmp
pop
adc
aaa
xor
hlt
mov
sbbl
cs
mov
dec
ja
inc
fisubs
movsl
lock
lret
lahf
cld
jnp
add
dec
cmc
lea
repz
popa
in
mov
mov
testl
sbb
frstor
repz
jg
jo
pop
inc
inc
mov
cmc
pop
cmc
or
mov
dec
push
adc
mov
jo
loope
mov
mov
xor
ret
lds
fs
dec
lahf
adc
pop
loope
aaa
inc
negb
aas
mov
push
and
mov
fwait
lds
cld
cmp
iret
lds
imul
fidivs
cmp
jecxz
sub
push
dec
inc
add
jmp
iret
pop
xor
fsubrl
shl
and
mov
lret
in
add
xor
push
loop
sbbb
mov
in
fiadds
stc
outsb
cwtl
int
xchg
outsl
dec
iret
push
cmp
dec
cld
clc
and
mov
inc
lahf
in
adc
ret
out
roll
mov
ljmp
and
shll
fsts
clc
dec
push
sub
inc
cmp
sbb
lret
pushf
dec
pop
fwait
popf
inc
mov
or
movsl
outsl
cmp
test
mov
pop
jb
jge
jge
sbb
lret
daa
dec
xor
sub
mov
fidivl
cwtl
mov
dec
or
xchg
clc
push
jmp
dec
xor
imull
jg
pop
adc
in
pop
or
fcmovnb
hlt
xchg
js
cwtl
pop
das
push
mov
out
test
shlb
mov
xor
sbb
xor
or
incb
adc
mov
in
lods
and
push
out
jp
ljmp
fistpl
sbb
lods
out
pop
xchg
pushf
scas
shrl
sbb
cmp
imul
xchg
icebp
add
push
xchg
lahf
decl
xor
lahf
lds
cmp
sarl
lcall
scas
enter
shlb
or
xor
push
cwtl
les
inc
fldt
cld
ffreep
push
add
std
adc
dec
in
add
and
repnz
je
std
cmp
sub
stos
fld1
push
inc
mov
insb
sbb
int3
cmp
imul
xchg
dec
pop
jecxz
jmp
xor
jl
cmp
loopne
pop
xchg
movsl
sub
ja
jle
call
jno
aaa
loopne
adc
dec
xlat
and
xor
imul
add
sarl
mov
movsb
dec
sahf
sub
push
out
inc
ret
pop
push
loopne
mov
scas
mov
lcall
cwtl
cwtl
es
and
fs
lret
enter
xlat
jge
repnz
repnz
lret
push
shlb
icebp
dec
push
mov
xor
adc
dec
pop
dec
inc
pop
push
int3
lds
add
roll
ds
dec
shll
dec
mov
and
jo
packuswb
mov
mov
cwtl
mov
jbe
push
or
jo
addr16
insl
adc
dec
jle
xor
andl
decb
out
je
xor
push
xorb
es
fs
adc
fs
mov
into
loope
push
andb
loop
ret
mov
int3
scas
cltd
pop
xor
xchg
jmp
xor
ret
pop
outsl
test
xor
cmpsb
adc
in
sbb
sbb
adc
out
push
pop
jge
mov
or
jecxz
adc
push
popa
mov
inc
cmpsb
or
insb
repz
shl
dec
fisubs
pop
push
out
push
jns
sbb
loopne
and
andb
xor
les
das
and
add
in
repnz
xchg
es
and
jns
cmpsw
cmp
adc
out
pop
popf
je
lret
add
stos
in
push
test
pusha
bound
test
ret
stos
orl
iret
dec
push
pop
in
outsb
int3
fdivr
inc
add
add
enter
mov
push
mov
int
cli
add
push
sub
sub
nop
lock
fwait
outsl
shl
in
add
out
push
mov
or
outsb
aad
push
fsubl
or
and
inc
sub
ret
mov
pop
or
mov
pop
sbb
push
mov
sahf
jb
out
repz
nop
std
mov
les
sbb
stc
jns
fidivl
push
add
std
jl
push
lahf
or
jp
xor
stc
in
sti
and
call
out
test
add
dec
sub
xor
cmp
add
ljmp
sti
outsb
hlt
cwtl
inc
or
fwait
pop
out
add
jae
stos
movsb
xchg
das
js
outsl
add
push
xchg
cmp
or
lds
pusha
lret
xor
out
xlat
ret
or
adc
movsl
lcall
repz
dec
cmp
stc
ficoms
lret
jbe
hlt
xor
dec
sbb
scas
sub
sar
clc
jge
jae
sar
in
or
sbb
addr16
pop
sbb
or
pop
push
cmpsl
push
xchg
push
xorb
jmp
and
mov
and
pop
cmp
inc
ljmp
mov
je
xchg
stos
in
inc
xchg
lea
movsb
or
adc
into
inc
push
les
fildl
repz
out
push
xor
push
push
push
sub
cld
cltd
or
mov
sub
jnp
mov
push
in
stc
jb
cld
cld
dec
mov
dec
fmull
inc
mov
push
jb
popa
outsl
or
or
cs
rcr
pop
arpl
rorl
inc
aaa
stc
jns
mov
leave
push
jg
add
sub
sub
xchg
fcom
inc
js
pop
cmp
shr
mov
fincstp
das
jl
je
jb
or
daa
js
lds
cli
ficomps
call
mov
xlat
sub
sub
test
rorl
mov
test
mov
sub
sbb
sub
push
mov
push
xchg
jle
test
and
push
int3
push
aam
pop
pop
pushf
jg
in
jg
test
xor
push
out
fnsave
and
in
xchg
mov
es
push
inc
insb
and
xchg
add
dec
pop
xchg
xchg
cmc
movsb
pop
into
add
lahf
add
push
call
repz
mov
jno
push
mov
pop
cmp
fcomip
in
sub
jecxz
shl
dec
js
fwait
insl
enter
mov
stc
data16
mov
les
out
std
sti
mov
pop
cmp
sbb
cmp
std
adc
sbb
jecxz
aaa
adc
mov
jb
ret
cmp
mov
test
mov
push
stos
adc
in
add
repz
ret
insl
sub
imull
ss
stos
iret
dec
icebp
pop
ljmp
insl
rol
dec
xchg
mov
in
cmc
jns
sti
push
ss
cmp
test
cli
jno
push
aad
and
and
xor
sub
out
shrl
sti
dec
or
mov
inc
stos
xor
mov
fcmovb
push
cmp
or
add
xchg
jle
sarl
cmp
lcall
jb
jnp
cmp
das
or
jns
ljmp
mov
das
out
pop
pop
lcall
pop
stos
out
divb
mov
test
adc
pop
sbb
cmpb
sub
mov
loop
xchg
push
jo
hlt
insl
mov
mov
jbe
lcall
test
iret
hlt
fcoml
dec
adc
mulb
jns
jne
pop
jl
jbe
mov
aas
je
js
jmp
addl
mov
popf
inc
inc
mov
arpl
in
jnp
xor
or
ss
jmp
shll
hlt
lret
hlt
shll
mov
sbb
jmp
add
add
sbb
in
xor
ficompl
gs
fstpl
and
out
nop
sahf
popf
or
mov
and
or
xor
fimull
addr16
mov
ljmp
out
push
sahf
int
out
hlt
repnz
loope
ss
test
or
repnz
sub
mov
mov
aam
inc
ds
jmp
mov
pushw
jns
stos
jmp
loop
and
notl
jbe
arpl
push
aas
jbe
sbb
xor
jnp
aam
ret
lods
mov
sub
add
lds
sbb
and
add
fwait
addr16
ljmp
addr16
out
pop
aad
push
dec
int3
pop
loope
flds
cmp
fsubl
mov
jne
repnz
in
movsl
int
dec
sub
fldenv
mov
lahf
sub
cmp
mov
sub
dec
sbb
call
icebp
lret
xchg
push
cmp
add
pop
andb
out
dec
and
adc
xor
push
sti
pop
mov
add
out
sub
pushf
jno
call
mov
call
jp
int
in
lret
cld
ficoml
or
pop
jl
dec
out
xlat
jl
ret
test
adc
mov
inc
loopne
sbb
and
pop
jo
xor
and
aam
pop
or
cld
or
cmpb
xor
sub
clc
pop
loopne
insb
sbb
jl
icebp
mov
pop
xor
imul
aaa
dec
push
cmp
fcomps
inc
stos
mov
adc
push
mov
or
shl
gs
pop
inc
dec
jmp
movsb
frstor
mov
or
push
leave
mov
retw
ljmp
subl
or
add
rcrl
dec
mov
add
out
lds
cld
mov
jle
push
mov
add
xchg
and
adc
ret
or
imul
out
or
sbb
adc
sub
mov
push
addl
ret
cli
repz
lods
int
mov
das
push
dec
cmp
push
push
lods
mov
xchg
inc
mov
inc
mov
cmc
cmp
repz
sub
add
mov
push
sub
cwtl
mov
push
pop
loop
shlb
sbb
jl
hlt
cmp
in
movsb
jnp
push
int
or
xchg
xlat
cmp
cmp
jno
cld
in
jge
cmp
xor
sbb
out
add
and
push
xlat
sbbl
xchg
aas
call
outsb
or
mov
cltd
or
divb
push
pop
dec
pop
mov
inc
mov
sbb
mov
jge
fisubrl
cld
and
lods
fstl
push
sub
adc
push
add
fiaddl
sub
xchg
fidivl
and
cmp
jmp
add
es
xor
inc
in
and
lods
add
jne
clc
adc
sub
mov
fldcw
sbb
sbb
cmp
pop
pop
loop
pop
push
insb
inc
mov
fdivl
int3
sbb
in
scas
aad
mov
sbb
mov
nop
js
xor
cmpsl
js
push
mov
shrb
mov
xor
sahf
data16
adc
fildl
cmp
lcall
mov
mov
jno
dec
or
mov
mov
cmpsb
mov
ljmp
or
in
sbb
clc
cmp
xchg
pop
and
stos
inc
icebp
dec
leave
in
and
cmpps
add
mov
fsubp
or
leave
adc
sub
lods
mov
adc
sti
ljmp
fisubl
cmp
hlt
or
fs
or
ljmp
xchg
xor
es
movsb
xchg
incb
sbb
jbe
mov
sbbl
pop
jmp
jns
repnz
bound
inc
fisubs
in
ja
cmpsb
aam
cmp
or
mov
adc
outsb
sub
out
or
stc
push
outsb
pop
mov
shlb
adc
dec
add
mov
lret
addb
pop
insb
stc
cmp
or
es
clc
jb
ljmp
inc
cmp
mov
jge
lahf
in
push
or
out
add
loopne
jb
and
rol
cmp
rorl
jb
enter
ret
dec
or
xrelease
dec
and
jbe
leave
clc
sbb
adc
pop
sbb
push
jae
sbb
addr16
movsl
out
pop
lea
je
sub
xor
xchg
out
rol
or
xor
push
lods
or
lret
mov
sbb
and
sub
and
lds
insl
lret
sbb
pushf
jle
lahf
js
popf
cmpsl
rcr
popf
or
mov
adc
test
les
mov
cmpsb
outsl
pop
inc
dec
push
sbb
pop
cltd
lcall
and
push
cmp
push
jns
negl
inc
iret
rcll
in
xchg
fdivr
jmp
insb
ret
ljmp
ja
pushf
xorb
mov
sbb
arpl
lock
fstps
nop
mov
and
outsb
xchg
adcl
insb
sbb
mov
xlat
cli
mov
pusha
xchg
pop
fiadds
fneni(8087
fidivs
cmpsb
pop
adc
aad
inc
aas
outsl
loopne
lea
fwait
adc
pop
add
pop
cli
push
icebp
lds
xor
mov
popf
mov
mov
data16
inc
add
jb
cwtl
cmp
test
dec
testl
cmp
push
add
jb
pop
xor
jge
and
push
lret
lcall
add
imul
cmc
fld1
or
out
sti
lods
add
fldt
decb
xor
mov
test
adc
jg
mov
push
and
clc
loop
jne
lret
and
dec
cmp
mov
jb
jp
cltd
mov
out
mov
sub
xchg
sub
roll
add
mov
icebp
gs
and
push
inc
divl
pop
mov
jb
out
pushf
mov
lret
cmc
hlt
cmp
mov
add
mov
inc
gs
andl
mov
sub
mov
dec
test
dec
inc
ret
aaa
jae
cmp
adc
out
add
jbe
in
pop
aaa
out
inc
xchg
xchg
xor
repz
jo
hlt
xor
sahf
adc
mov
out
ljmp
pop
pop
das
adc
fs
int3
push
mov
enter
int
mov
jb
adc
or
popf
jo
sbb
orb
pop
or
gs
jne
leave
das
sub
icebp
xorb
xor
mov
xchg
dec
bnd
add
aaa
into
icebp
and
scas
pop
sbb
push
ja
int3
mov
and
jmp
and
testl
ds
lcall
std
or
scas
es
fnstcw
jno
insl
jne
or
fiadds
add
dec
sub
add
cmp
sub
dec
call
hlt
cmp
xchg
dec
xchg
ret
adc
pop
sbb
pop
stos
cmc
out
mov
mov
lods
mov
popl
lcall
ret
outsb
sbb
mov
or
xchg
sub
xchg
lea
push
adc
shrl
push
ret
idivl
ja
mov
pop
popf
pop
outsb
scas
jmp
loopne
orl
sub
lods
mov
lret
add
out
rcrl
sbb
jne
das
rcrb
shlb
lret
adc
sub
lds
les
ss
sub
shlb
cmc
xchg
add
lea
jne
mov
sbb
lock
and
jno
add
cld
adc
sub
push
dec
sub
sub
repz
aaa
js
add
aad
mov
stos
or
ljmp
aaa
inc
out
jge
add
dec
mov
and
xor
mov
adc
scas
pop
loopne
insb
lock
mov
inc
outsb
fistpll
insb
jmp
pop
jecxz
jbe
dec
pop
loop
mov
push
sbb
fldt
mov
add
mov
sub
inc
les
xchg
dec
sub
mov
mov
subl
addb
inc
mov
repz
and
or
mov
sub
lahf
pop
mov
or
add
insb
cld
jno
inc
sub
dec
sub
xor
mov
jns
mov
dec
fimuls
iret
movsl
into
pop
mov
and
mov
outsb
movsb
inc
test
push
inc
cltd
jbe
jns
sbb
push
movsl
adc
jns
sub
pop
pop
pop
pxor
cli
andb
rclb
push
sub
gs
in
icebp
ja
mov
addr16
repz
out
lahf
push
lods
scas
sbb
and
lock
cmp
lock
mov
jb
xchg
ret
leave
aas
mov
lods
or
adc
lret
cld
jg
adc
mov
arpl
out
cli
pusha
into
push
pusha
int3
std
out
fucom
icebp
jmp
call
testl
add
adc
lahf
xor
sar
test
mov
ljmp
sbb
fdivs
icebp
sbb
test
push
ds
andl
ds
sub
sbbb
sub
pop
mov
std
outsl
cmc
iret
outsb
gs
cmpsl
inc
jae
ja
dec
test
int3
das
shrb
ret
mov
cld
icebp
lret
repnz
add
and
xor
inc
sbb
xor
outsl
fsubrs
sub
std
xchg
jmp
fs
es
enter
ficoms
pop
add
jbe
pop
arpl
mov
sbb
mov
daa
ljmp
adc
jmp
mov
aam
fistl
adc
push
push
jecxz
das
cmp
cltd
xor
add
sub
fsubs
das
sub
aam
mov
mov
pusha
adc
stos
sbb
lds
jg
aam
nop
pop
int
fstl
sub
jle
iret
repnz
pop
ds
out
rol
lcall
sahf
or
sbb
test
cld
and
popa
fs
adc
adc
hlt
aaa
aaa
cmpl
int3
jg
fbld
iret
js
scas
sti
adc
xorb
mov
jb
scas
cmp
std
mov
inc
ljmp
faddp
stos
xlat
pop
xor
iret
shrl
xor
sbb
sar
jp
outsb
call
cltd
dec
mov
push
imul
or
inc
or
gs
test
fisubrl
add
dec
sahf
pop
pushf
inc
imul
dec
js
dec
mov
mov
pop
movsl
sub
mov
sbb
in
ficomps
jns
mov
pop
mov
mov
addb
filds
stos
xorb
es
jnp
icebp
lret
cwtl
mov
cmp
ds
inc
push
ror
jecxz
mov
repz
aam
mov
dec
or
and
loop
xchg
les
or
xchg
add
adcb
push
sbb
imul
jno
cmp
dec
mov
push
push
lcall
out
push
adc
mov
cmp
inc
dec
fs
xlat
mov
mov
sub
xor
pop
jle
enter
out
pop
mov
adc
clc
lods
adc
sahf
jno
cmp
enter
inc
pop
gs
pop
dec
xchg
fwait
ja
inc
adc
pop
pop
scas
cmpsl
and
or
mov
or
fs
in
lret
and
dec
popl
pop
cmpsl
pusha
fmul
repz
xchg
les
scas
push
jmp
cmc
lods
stos
stc
push
clc
iret
imul
in
out
fldt
and
out
iret
dec
jmp
pop
test
sub
xchg
out
or
jno
pop
sarl
nop
roll
push
sbbb
xchg
jns
jge
scas
out
enter
lret
dec
or
and
fbstp
out
pop
ljmp
andl
xlat
divb
cmp
mov
jnp
mov
pop
jge
fs
cbtw
adc
lock
into
stc
sub
and
sbb
xchg
cmp
mov
jo
shll
iret
ss
iret
sub
popa
subb
mov
mov
testl
repz
test
or
mov
mov
or
jp
stc
xor
out
pop
cli
mov
dec
cmpsb
add
and
push
fsubl
mov
in
es
adc
fwait
add
out
std
cmc
jge
dec
fisttpl
scas
repz
push
cmpsb
fcmove
leavew
cmp
insb
dec
pop
mov
mov
cwtl
lea
jno
repnz
pusha
pusha
cmpsb
or
inc
xor
mov
out
pop
sbb
in
insl
adc
jl
cli
mov
jmp
arpl
hlt
cmp
cmp
jno
add
dec
loope
enter
dec
ljmp
sbb
in
arpl
aam
xor
leave
add
adc
nop
cld
sbb
lock
fldl
xor
jp
mov
movsb
mov
sti
and
or
lea
dec
or
rcr
add
fs
xlat
jg
or
cmp
aad
hlt
sub
and
or
cli
and
pop
movsb
ljmp
pushf
je
mov
xor
mov
fcmovb
pop
adc
dec
push
push
or
ljmp
imul
add
xchg
bound
or
pop
fwait
add
insb
and
aad
pop
push
lds
mov
cmc
gs
add
mov
and
pusha
inc
out
mov
es
negl
or
lar
clc
mov
add
jbe
lret
and
int
adc
repnz
hlt
testl
or
loope
subl
rcl
adc
aam
add
cltd
in
ljmp
dec
jp
or
int3
ds
sbb
pop
cmp
xor
repz
cwtl
mov
mov
xor
or
mov
addb
out
loop
inc
mov
and
ret
and
or
cmp
inc
jle
fwait
add
adc
fwait
es
add
mov
inc
and
push
movsl
lret
test
xor
xchg
adcb
or
loopne
pop
mov
leave
dec
hlt
leave
jbe
inc
mov
stos
dec
fiadds
leave
xor
lock
je
push
idivl
jp
jne
data16
test
inc
ljmp
and
addr16
lods
popf
add
cld
out
jmp
and
into
popf
mov
je
adc
dec
jb
je
dec
cwtl
in
loope
dec
pop
scas
outsb
xchg
subb
idivb
shl
ja
jmp
xchg
sbb
ljmp
xchg
es
loopne
and
mov
sbb
dec
sub
pop
sbb
xchg
lock
enter
adc
leave
mov
dec
ja
adc
mov
je
int
dec
loope
mov
data16
adc
mov
gs
mov
push
fsubs
pop
jecxz
push
or
mov
cmp
and
lahf
add
fmulp
cmp
daa
lock
loope,pt
ret
add
sub
mov
fs
movsb
sbb
loope
xor
out
push
jo
repnz
inc
lret
jg
mov
jns
mov
mov
out
jle
popf
pop
stos
mov
or
sbb
subl
jg
mov
jp
xor
mov
std
mov
out
hlt
or
jae
cli
loopne
inc
lcall
lock
sub
inc
lods
and
mov
mov
jge
cmp
aaa
cmc
punpckhwd
clc
sahf
dec
ljmp
jbe
jb
imul
adc
dec
sbb
repnz
jo
jle
fwait
cmp
adc
xor
aaa
jg
orl
rol
push
sar
orb
sti
mov
adc
adc
shrl
and
leave
orl
movsl
arpl
data16
jge
scas
lods
sub
rorl
in
jbe
push
cmp
and
test
add
sbb
mov
fcmovnu
sub
inc
imul
outsl
or
fcoms
fstpl
dec
cltd
or
stos
mov
fs
jl
idivb
xor
sbb
outsl
sbb
es
les
cmpsl
xlat
mov
mov
mov
popf
out
insb
xchg
and
testb
lods
pusha
rolb
out
pop
lock
sahf
lret
not
stos
or
leave
sbb
pop
roll
int
cli
push
lret
jle
out
sbb
jp
add
push
fidivl
out
push
sub
in
mov
ljmp
pop
xchg
out
mov
iret
cwtl
fwait
jecxz
inc
mov
div
cwtl
call
push
jle
je
es
jb
or
mov
push
imul
das
das
sbb
jecxz
inc
adc
mov
add
lods
inc
push
add
inc
jle
dec
fsubrs
dec
mov
enter
pop
mov
in
int
testb
xlat
mov
fildll
adc
test
cmc
mov
sbb
pop
int3
out
mov
std
add
repnz
out
xchg
hlt
arpl
xchg
jo
push
icebp
loope
mov
clc
mov
or
mov
add
adc
push
repz
cmpl
add
clc
jl
jns
jo
xor
fcomps
fldenv
mov
xor
sub
mov
cmc
js
ffree
sub
aaa
fsubrs
jmp
ret
sti
push
xor
out
iret
aaa
and
ljmp
and
daa
dec
jecxz
ret
mov
in
pop
inc
sti
ficomps
into
repz
cmp
int
mov
push
mov
aam
rcll
ljmp
daa
test
into
sbb
lret
les
xor
mov
sub
cmp
jbe
cli
jns
inc
das
mov
stc
shr
scas
js
inc
int
int3
in
add
cmpl
and
outsl
lods
sahf
and
lret
sarb
jmp
mov
xor
lds
stos
push
das
adc
xchg
dec
out
aaa
pop
and
push
fmul
adc
out
fsubs
push
popf
push
xchg
arpl
sahf
mov
inc
push
sbb
jg
adc
stc
push
pop
mov
jb
hlt
mov
mov
fistpll
ljmp
jns
shr
push
cmp
std
fs
mov
mov
inc
mov
add
inc
jl
insb
mov
xchg
and
lea
std
adc
fistl
int3
xchg
pop
out
xor
inc
sbb
sub
loop
rcrl
adc
mov
inc
and
push
and
pop
dec
jp
out
mov
fwait
test
dec
lods
repz
or
sbbb
fstps
out
pop
loop
ret
mov
mov
subl
dec
mov
push
inc
int
sbbl
or
fidivs
adcl
fxsave
add
push
jp
adc
mov
call
bound
mov
push
dec
scas
mov
inc
and
ret
imul
adc
and
or
jle
sbb
fwait
or
lret
jmp
inc
int
add
lea
pusha
fsubrl
jecxz
das
dec
clc
xor
in
into
fldenv
stos
xchg
adc
pop
ja
stos
icebp
loopne
out
fildll
pushf
sbb
inc
inc
aaa
dec
fisttps
test
lcall
nop
stos
xchg
les
cmpsl
mov
jle
iretw
ret
lock
in
sub
es
ja
mov
inc
imul
mov
es
stc
ds
in
xor
in
stc
add
iret
insb
xchg
sbb
cmp
cmp
sub
pushf
add
add
pop
add
jg
jnp
popf
ucomiss
mov
pop
push
jmp
dec
repnz
test
cli
adc
add
mov
jo
mov
push
ljmp
xor
loope
sbb
test
mov
dec
mov
out
addr16
rol
jmp
sbb
call
lahf
inc
lock
mov
ljmp
pop
and
push
enter
in
cmpsb
insl
pop
in
pusha
stos
inc
mov
lock
fwait
sub
lcall
xor
sub
insb
std
pop
pushf
out
stc
pop
cltd
test
mov
je
cmpsl
jnp
cmpsb
sbb
inc
sub
cwtl
mov
fmuls
mov
sub
push
aas
fs
mov
and
pop
outsl
aaa
jecxz
sti
jno
xor
mov
das
pop
movsb
lret
rcrb
out
sahf
dec
insb
adc
jmp
inc
cmovle
ds
sub
sbb
je
outsb
aaa
xchg
mov
aam
adc
ficomps
leave
cmp
vmovaps
sbb
fmull
stos
fwait
idivl
or
jae
adc
or
pop
pop
loop
test
cmpsb
xor
call
into
sbb
dec
sub
pop
ja
cmp
jg
dec
shll
loopne
out
mov
lcall
push
outsl
out
dec
mov
add
pop
je
add
fstpt
arpl
or
out
cmp
pop
mov
dec
pop
cmp
or
xlat
mov
movsb
int
scas
xchg
imul
out
pop
stc
pop
jge
adc
fcomi
fs
in
mov
das
xchg
mov
dec
sub
leave
adc
add
xor
inc
push
aad
pushf
pop
arpl
stc
sub
cld
sub
push
and
leave
dec
adc
in
ret
mov
xchg
pop
decb
mov
aad
out
mov
cli
sahf
sub
fs
mov
push
mov
adcl
jmp
xlat
add
sub
lods
push
mov
iret
gs
lock
add
inc
sub
inc
dec
sbb
lods
mov
adc
icebp
incl
cmpsb
add
jp
sbb
inc
add
inc
sbb
test
sbb
adc
mov
sub
xchg
pushf
mov
fwait
cwtl
mov
dec
out
incb
dec
jbe
and
jecxz,pn
movd
imul
sbb
subb
add
out
inc
cltd
pushf
jb
pop
push
mov
negl
fistps
mov
mov
int3
or
aas
adc
cli
xchg
iret
xor
sub
mov
das
scas
into
pop
int3
arpl
dec
jb
cmpb
xor
ss
and
xlat
fdivrl
xchg
xchg
inc
xchg
fists
xchg
pop
jl
arpl
pop
shlb
lcall
mov
or
or
xlat
add
fcoms
and
xchg
sbb
dec
imul
dec
push
dec
or
lret
dec
xor
jae
jbe
sbb
jnp
push
mov
popf
rorl
fsubl
leave
cmc
pushl
hlt
dec
or
push
push
inc
jns
add
insl
test
sub
insb
pop
mov
sub
dec
rorb
lcall
ds
jae
fldenv
pop
push
and
test
leave
mov
fiaddl
push
ds
mov
movsl
cmp
test
aam
ficoml
movsl
pop
xchg
in
adc
mov
ret
push
jns
lods
scas
pop
aaa
out
icebp
jb
fs
add
jl
out
fsts
imul
push
mov
jp
cmp
xchg
sbb
ljmp
add
scas
or
jae
or
sbb
sub
das
push
nop
pop
dec
and
add
ds
aaa
push
pop
js
mov
jle
inc
pop
sbb
outsb
push
inc
jnp
test
stc
inc
xor
and
pop
jo
jg
pop
bound
dec
sbb
nop
enter
mov
into
cli
rclb
pushf
sub
stos
push
mov
ljmp
dec
xorb
es
gs
loope
into
xchg
test
scas
push
jecxz
mov
dec
sbb
les
scas
dec
adc
fsub
mov
idivb
mov
mov
fs
repnz
mov
sbb
pop
in
outsb
inc
sub
mov
orb
pop
icebp
jae
fs
pop
clc
js
mov
push
stos
insb
out
pop
fmull
ss
jecxz
clc
lahf
cld
cld
jge
dec
add
or
mov
xor
xchg
lods
cld
jmp
loop
jo
rcrb
sbb
dec
or
out
add
lds
xchg
test
out
test
xor
pop
jp
pop
add
xor
cmp
ljmp
ret
xlat
xor
int
test
push
out
outsb
mov
es
inc
ret
mov
push
test
mov
xor
pop
sub
push
xchg
fcmovnbe
nop
push
adc
call
insb
call
in
mov
inc
enter
ja
push
adc
in
xchg
adc
in
xchg
and
or
test
gs
cli
push
cmp
xchg
mov
push
mov
jp
repz
addr16
jo
or
shr
add
call
inc
out
iret
xor
xchg
jecxz
xchg
mov
mov
or
cmp
lret
jg
dec
jae
lcall
das
jno
pop
sub
inc
lcall
ds
and
xor
mov
or
adc
loop
xor
mov
or
or
adc
stos
xor
dec
jnp
pop
outsl
adc
aas
inc
je
sub
imul
movsb
out
aaa
lahf
pop
es
rcrb
addr16
and
popa
mov
ret
out
stos
mov
sub
lds
jae
loop
jle
lds
lods
das
pop
push
add
arpl
dec
cmc
or
scas
cmc
icebp
rorb
xor
lock
frstor
stos
loop
sti
push
jle
daa
or
gs
push
mov
mov
sub
push
xchg
push
mov
jno
in
and
fs
sbb
fnstcw
int
aas
inc
dec
loop
and
mov
inc
in
adc
loopne
or
sbb
and
push
sbb
rclb
jno
inc
scas
mov
aad
xor
subl
div
jmp
dec
stc
dec
in
cs
popf
mov
sbb
xor
movsl
sub
fucomp
insl
mov
out
push
bound
add
cmp
and
lret
popf
cmpsl
jg
test
out
xchg
aas
in
lock
cmp
sbb
aaa
fildl
in
xor
pop
dec
movsb
push
pop
fmulp
pop
or
fisttpl
cmp
sti
mov
mov
fwait
cmp
fbstp
test
roll
mov
lahf
push
js
repnz
jmp
cmp
lock
jmp
add
jge
jne
xchg
xor
enter
lock
add
pop
lret
adc
cmp
inc
into
popf
jp
ljmp
add
ficomps
pop
xchg
xor
jno
inc
aam
or
sbb
mov
out
pop
outsb
hlt
js
out
jnp
loop
arpl
movsl
add
mov
mov
inc
scas
push
addr16
je
push
xchg
stos
andb
aaa
mov
into
in
pextrw
stos
pop
jae
inc
icebp
pop
rcll
xorb
fsubs
out
jge
cmpb
clc
or
mov
fsubs
xchg
and
lcall
lahf
sarb
xor
aaa
lret
test
cmp
add
xchg
xchg
andl
lcall
lahf
js
push
ret
out
sbb
popl
les
mov
aad
sub
sbb
arpl
into
xor
sub
aam
pop
push
mov
push
jbe
js
mov
lods
mov
cmp
daa
push
adc
inc
pop
or
sub
dec
aas
and
adc
in
es
loopne
lods
mov
ret
push
cmpsl
xchg
lret
pop
cld
adc
cmp
pop
clc
mov
fdivrp
push
sub
cli
add
adc
and
sbb
cmc
jo
shl
or
jg
jno
xchg
ss
adc
or
sbb
sti
hlt
loop
pop
js
add
mov
or
into
scas
xor
xorl
test
loop
xchg
mov
mov
inc
xchg
xrelease
add
imul
ljmp
aam
out
icebp
fdivl
in
js
dec
jno
lret
mov
call
jno
stos
out
das
xor
mov
cmp
sahf
xor
aaa
mov
mov
or
jmp
sub
push
mov
dec
pop
fldenv
mov
inc
sub
inc
xchg
bound
ficoml
push
and
je
mov
and
xor
sub
loop
or
push
jmp
es
ds
repz
pop
inc
push
inc
repnz
es
inc
ljmp
mov
add
sub
dec
pop
mov
inc
dec
cmp
sbb
inc
clc
test
and
pop
leave
stc
push
sub
add
lahf
sar
jae
ret
add
daa
mov
ret
fcoms
sub
and
imul
or
loop
movsbl
add
in
popa
dec
or
mov
sub
and
adc
ret
rorb
add
fucompp
mov
adc
mov
jo
xor
pop
shr
xchg
mov
out
jecxz
pop
adc
iret
into
dec
mov
mov
or
rorb
ds
into
fnstenv
push
adc
or
dec
rcr
sbb
and
icebp
pop
ret
mov
mov
call
mov
clc
dec
roll
sarl
xchg
mov
ret
sti
pusha
or
mov
jge
out
push
sbb
mov
or
cmpsb
xchg
loope
xchg
sbb
xchg
lcall
xchg
adcl
hlt
adc
mov
cmp
dec
sbb
in
lmsw
in
pop
add
addl
in
leave
or
lods
sub
mov
mov
repnz
pusha
inc
pushf
sub
jmp
loop
adc
jge
mov
je
xor
pop
xlat
cli
pop
test
cmc
add
loop
orl
out
fstpt
sbb
ss
clc
fsubrp
push
cmpsb
stos
mov
sti
inc
cmpsb
ficompl
out
jns
sub
dec
add
orl
and
lock
in
andnps
sbb
incb
jmp
sbb
out
mov
fcoms
pop
xchg
insb
ljmp
mov
aad
nop
cmc
cmp
adc
mov
cld
push
inc
cmc
test
aas
mov
xchg
xchg
mov
jno
out
and
fnsave
sub
shlb
mov
adc
add
ret
or
sti
mov
cld
out
mov
repnz
fsubl
sbb
fisubl
sub
adc
cmp
push
lret
jg,pn
imul
mov
sub
clc
xchg
dec
pop
insl
movsl
mov
fs
push
inc
mov
gs
xor
mov
lret
test
or
and
xchg
xchg
and
stos
js
cmp
inc
dec
sbb
leave
jno
pop
jmp
out
repz
jnp
pop
or
shrb
stc
aad
xor
out
cmp
jbe
ds
out
repz
push
out
adc
mov
or
fcompl
pmullw
imul
adc
jecxz
aad
out
loop
in
add
fstpt
std
jo
ljmp
jecxz
cltd
add
add
lret
es
adc
aam
push
mov
out
js
movb
arpl
jle
div
into
dec
push
jl
add
iret
cmp
xchg
loop
scas
test
fcompl
or
flds
cltd
push
addb
adc
push
ja
in
push
int
hlt
adcl
outsl
dec
mov
pop
jae
in
jae
xor
add
jl
ret
pop
xorb
sub
jnp
fstps
push
inc
mov
in
adc
mov
or
push
add
add
inc
push
les
or
rorl
or
dec
push
push
je
pop
cld
adc
adc
repnz
add
cs
data16
xchg
cmpsl
add
cld
sub
hlt
cld
inc
add
testb
xor
mov
sub
jb
sbb
xchg
jns
lret
push
mov
inc
add
pop
push
ljmp
xor
sahf
mov
sub
fists
adc
fucomi
pop
fisttps
sti
test
sahf
xchg
inc
adc
cmp
mov
fadds
ret
mov
adc
cmpb
cmp
ja
aam
repnz
jle
sub
pop
pushf
outsb
xor
xor
ja
divl
sub
jle
fildll
jle
add
out
xchg
cli
adc
adc
sub
xchg
or
js
loope
cld
sti
lret
pop
into
loopne
fmul
or
negb
lret
ljmp
xchg
mov
imul
xchg
or
cmpsl
rorb
mov
xchg
iret
xor
xor
rolb
lcall
sahf
rorl
loope
nop
jl
es
ljmp
rcrb
dec
ds
repnz
pop
femms
ficoms
into
pop
imul
shlb
adc
bound
idivb
xchg
or
lock
cli
decb
lock
and
sub
das
mov
rcrl
xlat
fistpl
aad
jg
dec
push
out
ret
je
or
pop
mov
ja
and
sub
add
insb
in
stos
fcomi
jae
int3
jo
pushf
mov
and
mov
inc
inc
sbb
dec
loopne
aas
and
or
lcall
jecxz
stc
and
dec
mov
fwait
in
cmp
push
fstpl
hlt
iret
ds
push
into
mov
icebp
sbb
mov
xchg
hlt
test
mov
sbb
mov
xchg
mov
cmp
adc
push
nop
inc
xchg
jg
push
outsb
adc
or
inc
cmp
push
pop
xorl
mov
mov
push
ret
scas
inc
in
add
mov
mov
mov
add
mov
fistl
jecxz
pop
lcall
push
insb
into
cli
jae
jns
mov
xlat
xor
scas
rorl
xchg
cmpsl
or
fnstcw
pushf
mov
mov
outsl
dec
mov
mov
jo,pt
arpl
push
in
pop
jae
jg
dec
clc
outsl
cmpsl
dec
cmc
push
mov
outsb
cmp
or
lock
mov
incl
into
rorb
test
rol
mov
jo
fucom
xrelease
adc
or
or
or
or
inc
aad
or
iret
inc
std
dec
or
xor
cmp
lods
xor
lret
lock
repz
add
insl
push
add
jg
jmp
fs
jb
sub
mov
pop
adc
xor
push
dec
mov
and
daa
mov
adc
ss
fadds
jno
loopne
repnz
jmp
jns
xchg
stc
xor
inc
test
push
aad
mov
adc
gs
mov
sbb
dec
pop
dec
les
shlb
mov
js
sub
sbb
jge
push
ds
lcall
ljmp
xor
std
popa
lret
xchg
jno
hlt
hlt
cli
outsl
rolb
repz
mov
out
filds
xlat
jle
addl
test
or
int3
cld
mov
bound
cmpsb
push
or
mov
shlb
loop
adcb
les
and
sub
sbb
mov
push
fcomps
repnz
adc
shr
popf
aam
andb
out
lret
and
lret
cmp
stos
mov
sub
in
inc
testl
fcoml
out
in
lea
ss
sysexit
adc
cmp
adc
or
push
mov
fistl
add
lds
xlat
es
or
aam
jmp
movsb
pop
lcall
fimull
add
cmp
lea
adc
sub
nop
insb
sahf
adc
in
inc
sub
push
js
dec
xor
sti
cwtl
sbb
cmp
push
inc
mov
test
mov
lods
mov
in
mov
jne
ficoms
or
mov
loopne
dec
repz
fsubs
and
pusha
fs
push
cmp
add
lds
dec
adc
repz
adc
stos
mov
cmpsl
jge
xor
sub
stc
xchg
mov
and
pop
shlb
inc
pop
incb
sbb
loopne
aaa
sbb
sarl
loopne
std
imul
xlat
xchg
repz
inc
jge
out
dec
repz
ss
dec
sbb
sbb
mov
add
enter
sbb
xor
adc
imul
fbstp
lret
cld
or
cltd
inc
add
ret
push
out
dec
mov
orl
icebp
or
sbb
cltd
jmp
out
mov
lcall
out
loop
dec
movb
nop
popf
roll
mov
aaa
int3
dec
xchg
add
add
stc
cmc
mov
ljmp
out
out
and
pop
or
xlat
sbb
dec
adc
out
shr
aad
and
call
shrb
ja
je
aam
jno
ljmp
ret
pop
mov
ret
insl
call
and
ret
jmp
movsb
mul
push
mov
pop
and
movsb
mov
enter
int3
movsb
js
ret
jae
pop
rcrb
faddl
add
mov
loope,pt
out
mov
insl
push
mov
ds
adc
inc
testl
imul
ljmp
movsl
stc
xor
cmp
jns
xchg
enter
inc
popf
call
ret
and
rcr
ds
push
ja
stos
lock
xor
or
cmp
jmp
jle
mov
shrb
mov
lahf
xchg
add
add
cmp
mull
adc
out
xor
push
dec
cs
mov
mov
mov
lods
xlat
pop
dec
xor
imul
cmp
pop
sti
or
lret
pusha
cmp
xor
lret
or
xchg
repnz
sub
push
mov
out
sub
and
movsl
fisubs
xor
pop
adc
enter
sbb
loop
jbe
or
lret
mov
ljmp
loope
cmc
jmp
in
mov
xchg
ss
push
gs
push
and
inc
mov
mov
dec
leave
mov
inc
push
imulb
push
xorb
inc
mov
fmul
jno
shl
jne
out
shll
mov
cld
ret
push
stc
test
mov
inc
xchg
sbb
push
out
fbstp
insb
mov
sbb
mov
dec
jnp
lock
mov
dec
dec
stos
push
sub
adc
sub
push
or
mov
movsb
inc
jbe
pushf
mov
iretw
cwtl
adc
nop
add
adc
aaa
mov
dec
sub
sub
jns
jge
lds
mov
or
cmpsb
jbe
pop
mov
cmp
xor
and
testl
xor
mov
stos
shlb
inc
das
dec
outsl
mov
mov
outsl
push
scas
xchg
mov
jge
shrb
sub
dec
in
lock
cmpsb
je
xor
add
jp
bnd
and
dec
inc
cltd
in
mov
gs
sbb
mov
xor
imull
cmpsb
test
aaa
fidivrs
test
notl
sbb
les
imul
aaa
mov
sbb
sub
add
lret
inc
inc
mov
pop
outsl
mov
adc
les
lock
sbb
ja
dec
xor
out
sub
add
push
jne
and
test
pop
pop
je
xchg
fiaddl
cwtl
nop
rcll
push
pop
repnz
out
hlt
and
jno
adc
add
repz
jge
ret
addl
inc
in
or
fistl
push
jae
sub
push
popf
loop
cmp
movsl
daa
xor
rcll
jl
xlat
out
adc
adc
add
les
test
sti
int
outsb
pop
cmp
jl
mov
faddl
aam
cmp
mov
mov
loope
xchg
push
jno
aam
hlt
xchg
dec
ljmp
hlt
fstpt
btc
out
and
int3
add
out
pushf
add
mov
cli
sub
in
test
mov
cld
leave
inc
out
cmp
mov
xchg
mov
push
stos
test
mov
push
push
push
fmull
outsb
std
ds
lret
sbb
outsb
mov
or
xor
addr16
iret
outsl
mov
call
inc
imul
push
lret
jmp
jno
ds
fsts
enter
stc
jle
xlat
jb
lret
arpl
mov
loop
or
out
dec
shll
inc
shlb
dec
ljmp
lds
mov
push
and
lock
stos
inc
stc
out
sbb
cwtl
cmp
or
jecxz
mov
ficompl
into
mov
je
mov
lret
stos
pop
sub
adc
inc
and
out
add
ja
test
and
dec
mov
fadds
inc
and
sbb
jae
inc
and
test
inc
mov
jbe
and
cmp
push
mov
mov
lods
cmp
or
or
cmp
mov
xor
lock
push
cmp
dec
sub
xor
xor
mov
and
in
or
aas
jg
in
scas
push
pop
or
pop
mov
jne
sahf
js
push
or
lahf
arpl
jecxz
mov
popa
sarb
sti
test
leave
inc
or
fistpll
xchg
xor
lds
out
xlat
stc
mov
pop
xchg
lods
pop
pushf
stc
xchg
call
in
and
dec
pop
sbb
inc
ret
cmp
xor
popf
xchg
mov
iret
cmpsb
hlt
push
outsb
mov
insb
inc
ficoml
and
fisubl
clc
cltd
fidivrl
lds
aas
bound
xor
mull
and
push
lret
adc
fdivr
dec
shr
shll
sti
imul
in
repnz
jno
sti
push
insl
loop
jns
ret
or
aam
es
push
add
fsubrl
and
lock
cld
sub
mov
mov
iret
xchg
icebp
sbb
cs
and
push
into
fsubrs
in
fwait
xlat
pushl
dec
jg
out
enter
xorl
stos
ret
into
mov
test
pop
shrb
fadds
daa
inc
lcall
cmc
into
jg
mov
adc
pop
bound
cli
sbb
xor
out
cs
clc
in
xchg
gs
sub
dec
or
jl
xor
clc
inc
mov
inc
push
iret
ror
add
add
jno
xchg
adc
sbb
testb
mov
pop
push
xor
out
mov
dec
and
cmp
inc
leave
add
fsubr
mov
les
xchg
mov
inc
xchg
test
sbb
cmp
lret
data16
or
jg
adcb
sbb
sub
push
and
xchg
mov
jmp
out
test
pushf
push
add
out
and
jne
add
fimull
fsub
sub
das
push
rcrb
cmp
test
movsb
mov
enter
jns
mov
js
ljmp
repnz
mov
adc
gs
loopne
inc
sbb
mov
mov
out
adcb
push
ljmp
xchg
out
jg
sti
mov
out
dec
mov
aas
test
inc
daa
in
ljmp
outsl
push
dec
push
bound
dec
cmp
push
inc
insb
jmp
sbb
gs
aam
in
push
push
sub
xor
sbb
adc
ja
lret
xor
movswl
sbb
cmc
pop
mov
lret
add
push
ds
dec
adc
mov
or
add
mov
ret
rclb
addr16
mov
fucom
data16
rol
rcl
xor
mov
cli
stos
or
mov
push
inc
out
cmpsb
cmp
jne
mov
scas
push
int
gs
fnstcw
cli
popf
hlt
cmp
lods
in
call
mov
rolb
mov
cmp
ret
inc
push
jo
cmp
jno
cs
add
mov
sahf
adc
cmpsb
loopne
dec
roll
cmp
and
sarl
das
mov
flds
cmc
add
out
add
lret
lcall
xor
into
add
sub
aaa
in
mov
andb
lahf
cld
jg
xchg
ja
cmp
inc
bound
clc
cmpsl
stos
in
shlb
in
dec
in
je
gs
fxch
mov
and
pushw
xchg
jne
imull
or
mov
pushf
or
and
cmc
in
dec
xchg
mov
psraw
adc
rcl
loop
and
push
lcall
clc
push
in
sti
push
push
mov
rclb
jne
sub
jp
jle
iret
aam
call
inc
lret
xchg
jno
js
popa
mov
idiv
jl
in
je
sbb
in
cmp
xor
loop
push
je
cs
arpl
push
ljmp
adc
std
repz
enter
repz
cmp
or
adcb
xor
sub
fistpll
roll
pop
in
pop
leave
mov
mov
inc
sub
cmp
fcomip
mov
scas
jge
rolb
xor
dec
add
or
cmp
add
xor
cs
imull
int
or
icebp
sub
call
pop
jecxz
outsl
push
repz
adc
jecxz
in
and
sbb
roll
dec
add
clc
cmp
cmpl
lds
adc
ret
sar
ljmp
mov
xor
inc
dec
jne
hlt
jae
outsl
sbb
lcall
movsl
lods
add
pop
sub
dec
mov
add
decl
sbb
inc
mov
enter
xchg
and
out
adc
jge
mov
aam
or
ja
add
lret
xor
add
les
leave
aaa
sbb
xor
jno
repnz
xor
dec
sub
mov
xlat
pop
xchg
inc
jp
mov
xrelease
mov
imul
sbb
mov
sub
push
jg
arpl
sbb
push
ljmp
mov
mov
lds
xor
jg
iret
cltd
mov
mov
dec
out
push
mov
into
cmp
push
lods
cmp
cmp
inc
sbbb
jl
aas
ds
lods
imul
mov
arpl
hlt
mov
jmp
inc
mov
push
adc
inc
pop
adc
pop
sbb
and
cli
jmp
xor
xor
aam
fs
push
and
xchg
sub
dec
ljmp
hlt
jmp
pop
pop
pushf
stc
pop
les
ds
mov
lods
ret
add
or
neg
jo
shlb
imul
ds
xor
mov
sub
int
addr16
aas
aad
pop
fdivrl
pusha
pop
subl
cld
mov
add
ja
xchg
add
lods
sbb
sbb
jl
and
jle
push
inc
aas
repnz
out
inc
dec
std
jg
and
adc
add
mov
adc
out
test
lds
dec
pop
cmpsl
sbb
fwait
mov
xor
xchg
mov
push
add
fistpl
mov
jge
out
ret
inc
pushf
ljmp
cmp
popa
xor
mov
cmp
add
jb
gs
lret
ja
fldl
xchg
pop
jne
fidivrs
mov
inc
data16
fwait
dec
jl
sub
inc
add
fsub
lds
shll
push
les
stos
xchg
push
or
sub
push
jbe
mov
jp
dec
jmp
add
cmp
cli
fnclex
leave
loope
fdivrl
push
repz
or
in
jl
jo
push
imul
ret
mov
cmp
adc
lcall
add
jae
xor
std
jo
inc
jge
orl
test
lret
add
jmp
pop
xor
add
mov
lock
ss
add
cld
pop
mov
cs
repnz
clc
mov
push
push
test
sahf
arpl
dec
pop
adc
leave
aam
mov
add
out
arpl
sbb
stos
xor
inc
adc
sub
pop
or
shl
enter
lods
lock
std
arpl
outsb
in
cwtl
inc
jns
leave
inc
add
adc
scas
stos
fcompl
aaa
xchg
or
jecxz
adc
inc
pop
inc
cmp
sbbl
or
out
sub
push
push
lods
insb
adc
mov
enter
adc
js
push
cld
sub
addr16
aam
sti
xchg
cmp
fnsave
mov
add
add
rcr
or
arpl
push
daa
repnz
arpl
xchg
syscall
adc
jmp
and
test
cs
dec
dec
out
push
xchg
ljmp
inc
mov
push
dec
insl
cmpsl
popa
lcall
sahf
and
and
cmp
add
shll
push
sub
lock
mov
sarb
adc
pop
fs
loopne
out
fimull
sbb
jl
aad
mov
inc
inc
ret
dec
xchg
ja
inc
and
inc
sub
and
pop
ficomps
dec
cwtl
inc
and
rclb
bound
loop
ja
and
outsb
jle
mov
stc
movsb
out
adc
mov
xor
ror
inc
pop
cmp
cs
push
loop
adc
sub
pushf
test
and
cmpsl
jg
out
inc
cmp
lcall
test
mov
push
shld
lcall
ret
into
jb
mov
iret
in
in
xchg
mov
inc
in
xchg
pop
jg
push
pop
insl
movsb
xchg
clc
out
add
mov
push
ficoml
mov
lea
mov
fmuls
pushf
fistps
or
and
call
fnstenv
mov
mov
outsb
repz
jmp
pop
pop
jnp
sbb
std
sub
and
inc
mov
mov
call
icebp
lods
push
push
inc
sarb
addr16
and
or
js
jo
iret
mov
sti
outsb
mov
sbb
test
sub
xchg
mov
repz
xor
add
mov
jmp
inc
jp
repz
fcmovne
test
add
and
test
ret
jmp
call
jle
lret
bound
out
aas
cmpsb
cmpb
sti
bound
mov
inc
fucomip
xchg
pop
sub
fstps
mov
stos
or
push
pop
fimull
mov
ret
iret
subb
pop
xchg
add
dec
cmpsl
push
loope
adc
dec
lods
dec
pusha
pop
adc
fisubs
mov
cs
hlt
pop
movsb
sbb
lods
int3
int
lods
sbb
push
push
lds
in
dec
xor
repz
test
ficoms
inc
adc
fistpl
lret
push
mov
push
ja
mov
cmpsl
test
jecxz
xchg
and
test
cwtl
adc
fdivrp
sbb
jecxz
push
scas
insl
cmp
mov
cmp
lret
imul
call
and
or
mov
outsl
cmp
push
ret
outsb
lods
pusha
jb
out
rcrl
and
sbbl
mov
shll
inc
orb
cmp
adc
out
xchg
dec
dec
pop
loope
clc
loop
out
dec
sbb
sub
dec
test
fdivl
in
jbe
mov
bound
rorb
dec
pop
sbb
hlt
movsl
cli
jl
in
addl
jp
lock
jecxz
and
xor
das
fisubrl
enter
cmc
in
mov
loope
arpl
cmp
stos
pop
mov
cmpsb
data16
icebp
pop
pop
mov
sub
mov
pusha
cwtl
mov
mov
mov
mov
push
shll
imul
pop
cmp
adc
stos
testl
bound
mov
loop
std
test
lock
jo
hlt
not
out
movsl
fwait
lea
push
adc
notl
cmp
adc
jmp
or
xchg
test
ficoms
sarl
into
or
aaa
mov
daa
lds
or
inc
mov
aad
insl
xor
cld
and
inc
sbb
jle
addr16
pop
mov
pop
xchg
mov
movsb
aaa
pop
push
lods
imul
imul
jne
sub
pusha
or
scas
adc
sbb
mov
movl
or
call
dec
in
fisttpl
shlb
sbb
fldt
mov
push
push
sbb
push
push
sub
je
dec
imul
jo
ja
icebp
xchg
inc
les
mov
and
mov
gs
cltd
xchg
adc
xlat
jge
jg
repnz
pushf
movsb
pop
std
aam
faddl
push
je
jp
mov
push
cmpsb
stos
dec
pop
push
lahf
mov
adc
popa
push
dec
fucomip
in
ljmp
into
mov
rcrl
sahf
pop
pop
out
inc
mov
out
fildl
repnz
shl
testl
adc
cmp
je
mov
daa
cmpsl
and
push
jne
and
xchg
and
sbb
xor
outsb
mov
mov
pop
or
inc
js
dec
adc
xchg
ja
std
or
fildl
mov
imul
push
sub
arpl
int
mov
rorb
mov
imul
and
mov
inc
fimuls
xor
bnd
add
jnp
scas
dec
jo
pop
pop
add
leave
call
mov
sar
pop
outsb
cmp
ds
mov
pop
adcb
andb
mov
xor
cwtl
test
push
stos
mov
rol
push
loopne
inc
mov
xorb
ljmp
pop
adc
or
jp
in
sbb
jbe
push
pop
fwait
sbb
lods
lcall
pop
frstor
jp
ds
xor
jle
mov
inc
mov
adc
mov
aad
jae
dec
inc
push
sub
nop
add
movsl
xor
in
xor
jg
addl
adc
pop
es
enter
lods
xlat
jb
in
sub
ror
jno
out
or
arpl
add
aad
rcll
ret
push
inc
sti
mov
or
cltd
mov
push
sub
jnp
ss
add
jmp
pop
in
sti
inc
dec
addl
test
mov
pop
jnp
add
mov
mov
stc
dec
dec
push
add
cmp
lret
mov
cmp
adc
jge
pop
dec
mov
sub
imul
sub
mov
lcall
or
mov
cli
out
stc
dec
lcall
lock
pop
sbb
fwait
push
and
fwait
aad
lret
jg
cli
jg
pop
lock
ljmp
out
jl
inc
or
xorb
fmuls
dec
inc
xor
ds
and
xchg
xlat
push
stos
ljmp
mov
rclb
adc
into
les
xor
imul
cmc
scas
mov
push
cmp
sub
jg
cli
jecxz
pushf
fdivs
std
stos
pop
cmpsb
xchg
mov
push
dec
cli
nop
push
sbb
cli
js
cmp
or
aad
fcoms
push
in
mov
into
add
jns
cmp
or
sub
add
inc
repnz
adc
int
inc
adc
add
pop
shrb
and
sbb
lahf
dec
sub
out
into
arpl
sbb
mull
pop
ds
push
lock
icebp
and
sti
xchg
cmp
out
pop
mov
fdivr
lock
ret
pop
dec
fiadds
lcall
push
or
popa
mov
test
push
push
repnz
sbb
mov
inc
sti
inc
xor
fidivrs
mov
aam
pop
inc
mov
xchg
lahf
or
jp
outsb
daa
xor
dec
pop
jge
das
fs
aaa
js
add
in
call
stos
ret
loopne
jg
and
push
insb
xlat
or
sbb
lahf
add
jno
jnp
test
mov
sub
push
test
push
enter
inc
cmpb
enter
push
test
dec
std
repz
out
xlat
sub
pop
mov
rolb
push
inc
and
fsts
dec
ret
pop
mov
imul
dec
mov
ret
dec
in
push
mov
insb
out
mov
out
adcb
ret
popf
pop
mov
dec
pop
push
test
mov
aad
aaa
push
pop
in
lret
xlat
sbb
idivb
aam
add
ss
ja
push
adc
je
mov
jo
ficoml
setge
movsl
jno
sbb
jmp
aad
or
sbbb
cmp
clc
xlat
mov
or
mov
xlat
js
icebp
test
xchg
add
loopne
nop
aaa
adc
pop
mov
sub
pop
jne
repz
aad
pop
push
jecxz
das
cli
push
sbb
roll
adc
icebp
cmpsb
mov
add
sbb
loop
out
daa
arpl
inc
mov
leave
xchg
js
pop
sub
cwtl
lahf
cltd
call
and
out
push
push
stc
add
sbb
jno
cmp
cmp
xchg
cwtl
cmpsl
xlat
dec
mov
lret
repz
clc
lock
mov
jmp
fidivrs
and
ret
cld
loopne
and
daa
fmuls
pop
adc
lret
jbe
add
in
movsl
push
xorl
faddp
add
loop
movsb
dec
sbb
stos
dec
or
add
inc
mov
daa
lea
and
push
jmp
sub
insb
jne
xchg
or
mov
stos
arpl
pop
sub
dec
mov
in
jb
cmp
sub
add
test
or
dec
cmpsb
popf
cmp
pop
aas
adc
rcrb
inc
adc
xchg
and
shrb
or
cmp
push
or
or
popa
mov
mov
xchg
rorl
lock
cmp
ss
or
mov
xor
pop
fistps
dec
inc
jnp
jb
xchg
js
inc
push
add
jbe
decb
insb
jae
dec
ja
outsl
aaa
jne
jns
inc
aas
sub
ret
push
xor
add
popf
fimuls
xchg
wbinvd
adc
mov
cmc
imul
cmp
out
ja
inc
imul
test
das
icebp
xor
das
pop
mov
add
pop
out
bswap
sub
xor
enter
aad
ja
add
pop
loopne
scas
testl
xchg
lahf
add
cltd
cli
sub
out
loop
and
add
stos
fildll
lret
mov
clc
jg
in
dec
ret
mulb
adc
adc
cld
xor
adc
pop
and
xchg
sbb
sub
bound
imul
mov
add
jbe
test
adc
icebp
ret
cld
in
fstpl
test
popa
jmp
adc
sub
repz
fstps
inc
mov
mov
mov
push
pop
push
sbb
insb
arpl
jle
cwtl
and
jb
mov
addl
mov
pop
out
repz
ret
out
leave
inc
cli
ds
cmp
fisttps
fisubrs
push
inc
xlat
cmc
mov
je
fdivp
outsl
mov
aas
jb
loop
jmp
data16
js
in
cmp
scas
and
pop
push
dec
jmp
test
xor
faddl
jbe
fwait
arpl
xor
cli
fs
mov
dec
clc
aaa
or
xchg
ljmp
push
ret
dec
pop
data16
cmpsb
fstl
daa
and
sbb
shll
cld
cld
jmp
pop
dec
lahf
pop
lods
out
adc
sarb
pusha
or
sti
and
shlb
or
push
and
add
incl
xchg
pop
mov
inc
fwait
mov
loop
loope
push
cltd
pop
or
adc
je
mov
lcall
loope
std
xlat
adc
pop
xchg
loope
lock
fmulp
pop
adc
mov
pop
pop
jp
popf
lret
lds
mov
je
lock
iret
add
repz
scas
sub
mov
mov
in
xchg
dec
inc
pop
pop
push
loope
or
inc
inc
js
xchg
lods
in
or
or
cmpsl
mov
fmuls
and
and
mov
shr
xorb
cmpsb
pop
jge
xor
nop
push
xlat
mov
cmp
arpl
pop
or
lds
and
inc
inc
ljmp
insb
mov
xlat
incl
jl
push
xor
js,pt
mov
push
inc
and
cmp
sbb
xchg
pop
call
mov
mov
out
orl
inc
repz
subb
iret
mov
and
jge
std
or
in
les
gs
mov
mov
repnz
xchg
shr
pushf
or
daa
cmp
fidivrl
sbb
ret
adc
push
dec
mov
cs
and
cmp
sub
ret
sub
push
daa
sahf
dec
repz
call
jbe
aad
or
mov
sbb
imul
adc
test
or
inc
inc
push
repnz
ljmp
or
xchg
mov
xchg
pop
push
dec
es
xor
push
mov
sub
sbb
inc
inc
mov
jmp
dec
sub
int3
adc
xor
imul
out
push
je
jge
cs
dec
add
cld
push
dec
inc
xor
mul
xor
fdivs
data16
out
pop
js
dec
dec
and
push
add
out
sub
pushf
stos
dec
fcoms
jb
xchg
add
mov
xor
adc
push
xor
adc
pushf
std
ss
lret
and
push
ret
adc
testl
ret
mov
dec
out
push
icebp
test
push
adc
stos
and
fs
insb
shll
push
cli
loopne
ja
sbb
adc
mov
sti
lcall
daa
inc
arpl
mov
xchg
adc
pop
push
cmp
adc
shl
sub
xchg
imul
mov
es
lahf
adc
jecxz
sub
fidivs
les
stc
add
sbb
bswap
pop
add
dec
push
xchg
int3
fbstp
jbe
inc
imul
xor
cmp
je
lods
in
pop
ja
or
xor
in
mov
xor
adc
xchg
test
cmc
scas
xor
mov
mov
shrl
sbb
inc
and
nop
or
jb
in
push
xchg
xlat
hlt
or
cmc
or
stos
test
adc
loope
inc
sar
test
mov
pop
mov
sbb
sarl
daa
push
orb
lret
lock
cmc
push
mov
sub
movb
jno
lds
jo
jg
xchg
loope
inc
call
lcall
bnd
neg
and
in
pop
jnp
fidivrl
pop
inc
call
push
mov
push
fmuls
cmp
mov
fistpl
rcl
hlt
inc
mov
int3
fdivrl
xchg
jae
dec
adc
dec
xor
in
inc
test
dec
jne
mov
jae
je
imul
mov
jbe
cmp
lret
or
ljmp
inc
dec
outsl
rcll
xor
cs
lods
mul
cmp
mov
aad
mov
mov
push
adc
test
jg
int
bound
lea
dec
pop
xchg
pop
clc
loope
movsb
push
and
jmp
daa
test
sbb
add
adc
decb
push
int
mov
insl
inc
inc
xchg
sbb
mov
dec
insb
push
int3
dec
push
fldenv
in
ret
xchg
inc
cli
adc
shll
lods
lock
gs
outsl
dec
xchg
fstpt
out
pop
push
mov
adc
pop
cmp
es
push
push
xchg
mov
outsl
addb
enter
pop
out
jae
xchg
das
inc
stos
mov
mov
and
sahf
xchg
fcomps
inc
popa
dec
dec
loop
in
jle
repnz
and
sub
xchg
fs
mov
pop
xorb
inc
xchg
hlt
gs
jmp
mov
cld
or
addb
fisttpll
xchg
leave
xchg
fisttpl
xor
inc
and
mov
cltd
fiaddl
shr
nop
add
jmp
arpl
js
and
fdivr
push
push
jb
testl
xor
clc
xor
push
stos
out
lcallw
push
cli
out
mov
mov
jmp
fcomps
aaa
in
int
aad
lods
adcl
int3
xor
fs
cmp
and
daa
inc
out
push
xchg
bound
mov
push
mov
out
divl
clc
jno
fiadds
fwait
pop
mov
idiv
cmp
add
cmp
and
jge
mov
or
sbb
jns
xor
inc
push
cmp
sbb
int3
iret
xor
jmp
adc
test
jbe
inc
pop
inc
jecxz
call
dec
icebp
lahf
and
js
add
iret
push
fnstcw
xchg
notl
loop
loope
cld
fdivrs
add
clc
dec
clc
ret
sbb
cltd
bound
cltd
inc
xor
bound
mov
aas
sbb
mov
rclb
jg
and
xor
mov
cvttps2pi
xor
inc
sub
add
cld
xor
pop
mov
xor
fldcw
mov
or
sahf
gs
stos
out
add
out
push
dec
sbb
inc
adc
add
adc
and
and
inc
push
aad
push
sub
mov
or
sub
out
jns
add
outsl
sub
jecxz
xor
xchg
ljmp
jg
clc
jne
or
push
pop
inc
pop
xchg
daa
inc
xor
jle
push
fmuls
jg
repz
outsl
jmp
inc
loop
pop
in
dec
lahf
push
jle
cmc
jbe
or
scas
dec
imul
roll
test
jns
fisubs
rcrl
adc
in
ljmp
mov
into
jl
jbe
dec
imul
xlat
daa
repz
pop
sti
pusha
jl
pop
jnp
mov
inc
outsl
ret
lods
sub
call
add
jmp
jge
mov
pop
das
sti
jns
movups
jns
int3
pop
push
or
fidivl
addr16
scas
mov
dec
sub
xor
lcall
je
push
cmp
jp
cmp
xchg
push
push
testb
fwait
pop
stc
negb
or
lret
ret
ljmp
std
fs
sbb
cmp
and
mov
jns
jl
insb
or
jl
xchg
jecxz
add
dec
lret
int
add
xchg
fs
dec
enter
fmull
cmp
jg
push
fsubrs
std
flds
and
pop
fildl
out
add
dec
ss
loopne
add
rorl
push
xchg
cmc
in
adc
lea
nop
push
addl
loopne
rorb
jno
movsl
pop
pop
xchg
rorb
ret
xchg
adc
jne
sbb
add
icebp
out
idiv
and
jecxz
push
insb
ljmp
pop
mov
dec
push
inc
dec
xor
sbb
clc
sub
fsubp
nop
or
jmp
std
inc
sub
push
dec
xchg
jb
ret
sarb
not
incl
mov
rcrb
mov
loopne
pusha
pop
lret
std
pushf
shl
das
gs
adc
or
test
mov
sub
js
mov
jae
cli
or
pop
cmp
call
mov
repnz
in
repnz
fldl
fcoms
inc
loopne
xlat
xor
jmp
or
sub
arpl
scas
out
repnz
and
mov
push
scas
test
sub
ret
pop
orl
stos
test
and
adc
pop
sbb
out
ljmp
or
scas
mov
push
lret
mov
cmp
sub
push
orl
xor
xchg
pop
push
loope
jecxz
pop
xor
std
jnp
fs
cs
pop
rorb
push
or
jp
adc
mov
fs
lret
push
ret
sbb
in
dec
lea
sub
adc
mov
cmp
cmp
xor
mov
lods
cltd
hlt
mov
xchg
mulb
testb
repnz
xchg
add
repz
dec
adc
into
fdivl
ds
xchg
ffreep
add
adc
dec
in
cld
cmp
jno
aas
rclb
xor
inc
je
mov
roll
mov
std
push
cmc
mov
mov
mov
in
sahf
or
test
jmp
testl
sarb
cmpl
in
hlt
arpl
nopl
stos
fsts
cmpb
lahf
stc
and
pop
and
sahf
scas
js
mov
mov
dec
sbb
rcr
enter
popa
sub
popf
mov
int
inc
aam
in
shrb
jle
sub
das
cmp
and
and
pop
pop
pop
dec
std
je
push
push
dec
xor
testl
push
pop
cmp
jg
xchg
adc
push
ss
and
xor
jg
rolb
sarl
lcall
bound
es
movsb
jnp
idivl
roll
adc
scas
mov
repnz
fadd
fisttpl
push
int
addr16
inc
jb
das
mov
cmp
push
in
sbb
nop
stos
rcrb
inc
test
leave
mov
cwtl
ret
mov
pop
xor
pop
loop
push
shrb
outsl
push
push
mov
or
mov
pop
movsb
jne
add
push
addr16
mov
mov
out
es
mov
mov
sti
cmpl
addl
mov
xchg
ljmp
add
out
pop
cmpsl
sub
les
jo
popa
das
xchg
inc
and
inc
hlt
mov
inc
sub
ljmp
daa
out
outsl
into
sub
test
xor
xor
mov
dec
pop
dec
xchg
jmp
in
cli
fwait
es
cmp
mov
decb
ja
sti
daa
int
push
mov
push
out
mov
sub
inc
mov
mov
std
mov
cmp
jmp
push
dec
mov
cs
je
stos
mov
out
ret
test
rorl
test
inc
push
ja
arpl
in
jo
stos
movsl
jecxz
jmp
gs
dec
xchg
insl
dec
notl
lret
loop
dec
testb
sbb
decl
push
dec
or
mov
xchg
xchg
movsb
scas
xchg
insl
lods
fwait
mov
out
jae
xchg
addb
je
sbb
mov
cs
mov
pop
aas
xor
push
leave
dec
xchg
lods
push
pushf
mov
lock
jmp
gs
jecxz
lods
inc
or
popf
negl
push
inc
mov
mov
dec
mov
sub
mov
les
or
ljmp
sub
xchg
and
shl
mov
inc
daa
and
clc
or
aam
lret
dec
and
clc
mov
push
mov
hlt
stos
jne
inc
xchg
xchg
or
movsl
push
test
and
outsl
xor
and
jae
adc
add
ret
xor
lahf
addr16
jle
inc
cmpsb
push
jns
inc
in
and
mov
add
sub
cld
xchg
in
repz
xchg
jmp
mov
dec
or
in
lds
xor
in
push
adc
clc
inc
loope
cmp
es
mov
xor
mov
or
stos
sub
cmp
or
test
dec
mov
imul
jns
or
xchg
aaa
mov
in
das
and
mov
pop
inc
and
add
sub
movups
lahf
pop
inc
fisubrl
and
jb
or
add
idiv
add
mov
aas
nop
int
adc
ficompl
fcmovne
mov
xor
pop
in
mov
mov
stos
and
mov
xchg
inc
push
push
jns
fidivl
iret
dec
es
or
mov
pusha
add
or
add
in
das
add
adc
or
add
test
xchg
stos
or
test
add
int
and
jecxz
nop
loop
xlat
inc
ljmp
dec
and
mov
mov
stc
mov
or
in
dec
adc
mov
mov
inc
xchg
push
mov
arpl
addl
jnp
ss
aam
xor
push
sbb
cmp
sbb
in
adc
sbb
sub
mov
nop
mov
pop
or
lahf
incl
push
and
fwait
je
idiv
inc
dec
jns
adc
push
fiadds
inc
jge
mov
and
scas
dec
push
stc
mov
push
subl
push
mov
loop
int
add
adc
mov
stc
push
sub
adc
mov
daa
and
mov
pop
inc
sub
adc
push
ljmp
into
arpl
or
repz
or
fmull
xchg
mov
ret
inc
xchg
jns
les
adc
push
xorl
stos
sahf
popl
ljmp
aad
stc
inc
dec
outsb
jns
les
in
call
dec
xchg
pop
int
andl
add
jo
jno
xchg
or
orl
rclb
adc
push
loop
add
in
or
add
sub
cmp
inc
ret
pop
les
pop
mov
xor
in
push
lea
cmpsb
and
add
dec
outsb
add
inc
jle
jg
arpl
or
or
int
sbbl
gs
adc
sahf
aaa
inc
popf
call
stc
ds
mov
aaa
or
pop
and
mov
cwtl
or
incb
or
divl
or
gs
out
fildl
insl
aam
xchg
mov
add
sub
cmp
jne
mov
mov
mov
xchg
nop
adc
stc
xchg
aam
xor
dec
gs
jbe
imul
and
pop
addr16
sub
js
pushf
dec
inc
push
scas
js
les
cmpb
mov
aaa
cmp
cwtl
insl
adc
xchg
les
cmp
jl
sub
popf
adc
js
or
dec
add
mov
clc
jg
in
xlat
and
stc
gs
loope
clc
out
shll
cmp
xchg
les
test
adc
lea
sbb
xchg
adc
add
mov
inc
test
add
les
mov
popa
addl
adc
xor
subl
pop
sahf
test
insl
jle
dec
mov
add
jo
jno
dec
adc
inc
push
mov
in
dec
and
mov
cmp
mov
adc
aam
xor
fcompl
jge
loopne
add
stc
stc
add
mov
fldl
sarb
fsts
push
rolb
leave
mov
adc
insl
mov
movsl
dec
sbb
popf
sub
xchg
inc
insb
adc
je
insl
and
nop
fs
pop
inc
insb
inc
jns
les
pop
push
push
adcl
xor
xor
and
and
add
inc
in
adc
hlt
ljmp
push
int3
sub
xchg
gs
adc
mov
rorl
mov
inc
or
test
push
in
mov
pop
mov
jns
dec
jl
jge
jne
jne
dec
subl
gs
adc
inc
inc
add
and
xor
cmp
mov
xor
adc
or
or
fsubs
add
cmp
or
cmp
in
sbb
pushf
clc
hlt
or
fimuls
xchg
mov
lds
sub
les
adc
push
cmp
mov
mov
add
push
cmp
scas
adc
push
mov
mov
aas
in
adc
sbbb
inc
stc
fs
pop
sbbl
gs
mov
add
nop
cmp
and
push
xchg
adcb
notb
hlt
sub
cmc
or
fimuls
xchg
mov
lds
xor
dec
gs
mov
adc
push
or
lods
aam
xor
push
mov
pop
sahf
test
insl
jle
dec
mov
add
jo
jno
dec
adc
inc
push
mov
in
dec
and
mov
testl
cmp
and
and
adc
inc
fcoml
adc
pop
fdivl
lock
add
sub
cmp
inc
rclb
or
lret
in
shll
mov
mov
mov
jns
les
andl
inc
sahf
jge
dec
insl
jbe
je
insl
jns
jo
jno
dec
cmp
inc
adc
pop
dec
mov
in
inc
and
mov
xor
mov
xor
push
test
sbb
les
mulb
hlt
fwait
in
add
hlt
out
in
frstor
in
mov
int
pushf
sarb
les
adc
push
and
mov
mov
insl
xchg
and
mov
sub
inc
jl
jge
je
mov
and
nop
adc
dec
inc
sbb
jns
les
addb
xor
cmp
adc
sahf
sbb
insl
adc
sarb
add
inc
cld
cld
lret
popf
jmp
in
lds
aam
xor
test
add
add
sub
adc
loope
es
loop
clc
aam
xor
loope
fsts
jmp
insl
leave
and
and
cmp
or
xchg
pop
adc
gs
mov
or
sub
incb
jg
xor
mov
push
roll
mov
flds
cs
jge
push
cmp
loope
xchg
pusha
daa
pop
dec
pop
ds
xchg
jmp
sub
push
sbb
ss
adc
js
sub
lret
sub
stc
and
lret
sbb
mov
stc
out
push
es
aad
out
sbb
mov
mov
mov
lret
dec
sub
pop
jbe
inc
xor
push
jns
dec
sahf
inc
and
dec
sti
push
scas
nop
icebp
mov
mov
jecxz
or
cmc
out
xor
dec
loopne
add
subb
daa
xchg
sbb
xchg
test
inc
fidivs
int3
test
mov
call
int
push
dec
ret
outsb
mov
xchg
shrl
lods
cwtl
pop
jno
sahf
sub
insb
add
fwait
sahf
jmp
cmpsb
cmc
gs
jne
icebp
aam
xorb
ljmp
mov
xchg
or
cltd
shlb
xlat
cmp
ficompl
sbbb
mov
or
scas
pop
add
daa
ror
arpl
pop
les
adcl
mov
adc
in
xor
xchg
pop
xchg
movsb
in
mov
or
pop
adc
dec
subl
stos
stc
fidivrs
outsl
bound
scas
or
test
jge
int
nop
or
enter
mov
pop
fnsave
mov
into
xor
out
or
push
and
icebp
mov
xchg
push
in
pusha
pcmpeqb
pop
adc
mov
sbb
imul
dec
shlb
js
and
inc
test
and
or
stos
push
add
pop
bswap
sbb
ja
mov
insl
and
cmc
xchg
clc
jnp
out
push
jno
ret
in
sahf
xchg
and
dec
popf
mov
fmull
pushf
xchg
dec
call
xchg
adc
aaa
roll
pop
cld
push
inc
data16
je
fistpl
pop
add
testb
mov
les
enter
addl
aaa
cmp
push
xchg
int3
fdivs
call
rclb
movsb
loopne
ror
leave
ljmp
or
push
icebp
popf
ja
es
in
pop
ret
int
lods
nop
fidivs
mov
add
mov
push
jo
ja
jo
test
jno
sahf
dec
jb
in
rorb
mov
dec
addr16
adc
daa
leave
push
dec
jl
or
in
cld
das
push
in
jnp
mov
jo
int3
or
mov
push
mov
dec
loop
clc
push
pop
in
xchg
push
push
and
add
pop
xor
mov
dec
ret
mov
incl
test
imul
push
dec
jne
push
into
xor
dec
fucomp
jb
aad
cli
and
jns
add
mov
pop
xor
mov
xchg
call
mov
popa
nop
cmova
xchg
and
imul
cld
push
test
js
call
ja
push
sub
mov
push
aad
adc
xor
cmp
icebp
clc
adc
scas
sub
pop
pushf
push
shl
xchg
xchg
and
lds
testb
mov
and
xchg
cmp
add
sub
sbb
mov
jmp
mov
or
pushf
push
or
and
mov
jb
sbb
cmp
test
jns
adc
and
inc
add
outsb
sub
test
dec
pop
mov
xchg
cmp
sub
xor
sub
push
daa
cld
loope
xchg
std
sahf
dec
cmp
call
cmp
test
and
sub
fwait
loop
fistps
rcrb
push
imul
cmp
dec
rolb
fildll
lock
nop
mov
dec
push
sub
and
repnz
or
sbb
outsl
xor
outsb
scas
cmp
cmc
adc
xor
stc
pusha
cmpb
inc
sub
jno
je
xor
sub
shlb
rorl
mov
cld
jae
lret
jmp
out
popf
push
pop
rorb
test
scas
jo
push
outsl
sti
lret
mov
push
lea
leave
fstl
inc
pop
xchg
in
jae
sbb
ljmp
and
call
dec
into
ljmp
int3
and
ret
lret
inc
cli
sahf
repz
jmp
push
loope
xlat
push
jbe
js
in
out
push
jno
xchg
in
jp
cltd
cld
ss
push
mov
ja
std
or
sub
add
and
pusha
adc
dec
mov
call
in
push
leave
push
mov
cmc
in
dec
mov
popa
test
aam
mov
lods
adc
nop
repnz
movsb
push
and
push
popf
popf
xor
test
mov
icebp
push
push
or
or
cs
fildl
mov
outsb
mov
jle
xor
lds
mov
cltd
icebp
dec
pop
repnz
and
daa
xor
or
inc
mov
jb
scas
jne
add
out
movlps
insl
and
pop
popf
jnp
mov
ss
fcomps
mov
mov
daa
adc
mov
out
xor
lret
sub
adc
aas
xchg
bound
cmp
add
jb
js
add
sti
mov
lds
xor
xchg
in
cwtl
ds
clc
sub
mov
inc
push
push
subl
lods
adc
bound
stos
lds
push
mov
mov
mov
pushf
jmp
inc
adc
adc
xchg
inc
mov
mov
adc
xchg
orb
int
xchg
orl
pop
sub
cmp
jb
ljmp
or
push
and
imul
or
pop
pusha
sbb
jns
imul
mov
or
ds
cmpb
mov
xorl
rclb
sahf
fldl
lahf
lds
inc
mov
pop
and
sub
mov
stos
nop
xchg
add
int
xchg
add
sahf
pop
inc
or
and
test
add
mov
mov
dec
les
outsl
push
jp
xchg
aam
xor
xchg
adc
sbbl
add
lea
mov
mov
push
or
sub
int
orb
gs
insl
rol
cmp
push
sbb
mov
inc
xor
xchg
add
imul
cld
pslld
repnz
sarb
movl
mov
adc
cmp
fisubl
imul
dec
in
pop
and
mov
sub
xchg
js
fcmovne
and
mov
sbb
mov
pop
int
aas
add
xor
movsl
lock
aas
adc
adc
sub
add
and
mov
pusha
add
inc
cmp
stos
popf
sbb
in
or
sti
aad
adc
lcall
xchg
sub
addr16
ljmp
sub
xor
scas
loop
nop
xchg
pushf
mov
movsl
les
adc
push
jp
jno
pop
push
inc
insl
mov
adc
and
inc
movsb
insl
xchg
and
pop
popa
dec
push
add
mov
push
jne
mov
and
test
mov
lahf
and
adcl
mov
adc
lods
pop
popa
or
pushf
xchg
inc
pop
fs
les
dec
push
mov
push
scas
mov
add
push
scas
out
loop
stc
inc
and
jmp
mov
add
inc
mov
testl
sub
cmp
pop
push
mov
aad
stc
jbe
inc
add
mov
add
test
nop
lahf
mov
gs
sbb
cmp
aam
jae
pop
ret
or
xor
mov
lcall
insl
inc
and
mov
mov
in
adc
or
adc
lock
scas
lgs
clc
xchg
adc
adc
xor
ljmp
lret
enter
mov
inc
xchg
jecxz
jnp
pop
and
xchg
xor
adc
movsb
xor
cmp
adc
adc
in
pop
sub
nop
mul
ret
pop
cld
push
dec
inc
orl
push
push
jns
les
repz
imul
insb
sbb
fsubrl
mov
push
lds
outsb
xchg
lcall
in
adc
or
jnp
pop
arpl
std
call
pop
or
pop
fs
pop
pop
out
sti
mov
add
bound
loopne
fistps
dec
cwtl
cmp
dec
jno
inc
js
nop
pop
loop
notb
fs
or
fsubp
or
fwait
sarb
adc
aad
cmp
inc
test
pusha
mov
fisubl
jne
outsb
mov
push
mov
or
adc
test
mov
shll
pop
inc
inc
leave
enter
dec
lods
xor
xchg
mov
inc
inc
popa
or
add
arpl
pop
dec
adcb
ret
imul
imul
fcmovnu
dec
arpl
jns
and
adc
push
lcall
mov
push
outsb
cmp
test
imul
in
je
or
xchg
sub
hlt
sub
fisttps
in
xorb
adc
push
lods
xor
dec
adc
pop
push
call
jne
out
fisubrl
fcomps
mov
xchg
mull
inc
cmp
sbbl
dec
aad
sbbl
into
mov
sarl
mov
xor
cmpsb
sbb
insl
jb
ss
or
jne
inc
inc
sub
inc
inc
insl
sbb
enter
test
mov
jmp
add
pop
outsb
mov
test
pop
add
or
xchg
or
popf
aam
int3
and
dec
xor
cmpl
xchg
test
test
lods
xchg
notl
test
add
mov
inc
inc
scas
pop
bound
imul
dec
pusha
insl
arpl
movsb
add
inc
imul
jne
mov
subb
xchg
add
adc
cli
jl
push
sbb
iret
inc
pop
fiadds
scas
inc
mov
int3
xchg
outsb
mov
pop
dec
inc
pop
repz
repz
pop
xor
cmp
mov
push
jmp
addr16
test
xor
pop
dec
jb
adc
enter
sub
jp
outsl
aam
incl
push
inc
popa
enter
hlt
daa
cli
outsb
mov
jmp
and
dec
push
out
scas
add
outsl
dec
xor
fistl
jecxz
mov
mov
pop
shrb
or
mov
xor
mov
movsb
and
insl
add
add
mov
gs
add
xor
cmc
insl
mov
push
pop
or
rcrb
jecxz
retw
movsb
test
xchg
and
les
push
push
mov
jno
scas
mov
ret
or
lcall
fsubrs
sbb
or
inc
mov
dec
sub
sahf
push
xchg
push
scas
cmp
xchg
cmp
addr16
test
lods
mov
ror
sub
fiaddl
bextr
mov
mov
xor
inc
int
mov
mov
lret
mov
dec
imul
test
fwait
pop
aaa
mov
mov
push
bound
add
sub
jp
hlt
dec
scas
mov
push
rorb
inc
lea
cmp
pop
hlt
fs
add
jno
push
les
xchg
mov
inc
lds
nop
xchg
add
and
addr16
cmc
mov
repz
push
cmp
test
dec
fdivrl
or
lret
pop
fsubrs
xor
xchg
add
push
push
dec
mov
cmp
sahf
ja
stos
jo
sub
add
fs
push
out
dec
lcall
sbb
pop
xchg
adc
add
mov
and
incl
or
imul
dec
mov
xchg
push
xchg
inc
test
push
xchg
inc
dec
pcmpeqd
mov
mov
mov
sub
in
xorl
imul
xchg
fists
push
jmp
mov
mov
fsubrl
push
pusha
arpl
leave
dec
xchg
or
les
lret
jle
js
cmpsl
fisttpll
fsts
ds
xor
scas
dec
xchg
lods
dec
addr16
sub
dec
or
inc
and
js
add
mov
mov
adc
sbb
arpl
inc
jg
lret
push
add
aas
pop
mov
je
pop
aad
pop
inc
mov
lcall
scas
push
insl
inc
adcb
outsl
adc
insb
inc
push
xchg
or
adc
sub
pop
dec
jno
ljmp
fwait
loop
or
cmp
cmpsl
out
call
dec
fildl
xchg
jae
jno
inc
rcl
lret
imul
inc
std
xorb
pop
inc
xor
dec
mov
mov
lods
std
aaa
inc
adc
cld
jg
movsl
adc
cmp
stc
mov
add
mull
push
xchg
imul
out
cmp
push
push
popf
pop
inc
pop
xchg
sbb
bound
ss
add
dec
push
addr16
inc
inc
push
mov
sti
sahf
jl
test
fcompl
movsb
adc
hlt
mov
inc
or
add
pop
sub
add
sbb
movsl
loopne
es
aam
xchg
jg
dec
gs
cmpsl
ja
sbb
xchg
adc
xor
mov
and
dec
ret
cmp
sbb
xchg
insl
leave
xor
inc
cltd
xchg
popa
test
push
fsubs
mov
xchg
in
aam
xlat
pop
imul
push
push
push
push
push
mov
in
inc
mov
add
inc
cmp
cmp
sbb
lret
push
ss
adc
into
cltd
leave
push
data16
cli
addb
xlat
ljmp
sub
mov
sub
jb
xor
loop
pop
dec
inc
outsb
push
sahf
adc
mov
mov
jnp
or
push
rorl
call
pop
scas
cmp
inc
mov
aas
push
jg
xor
mov
cmp
clc
nop
aas
sti
pop
push
add
rcrb
cmp
ret
sub
or
movsl
xchg
pop
pop
push
sbb
sub
sub
pop
leave
adc
dec
popf
jno
dec
ficoms
arpl
ljmp
cld
add
outsl
lods
inc
mov
mov
mov
insb
insl
std
inc
ret
mov
imul
or
push
lahf
test
out
outsl
jle
and
jnp
imul
mov
stos
lea
ss
or
adc
push
fcom
mov
or
clc
xchg
cmp
mov
repnz
imul
jno
lods
stos
out
out
stos
sub
mov
cmpl
lcall
or
and
jecxz
jmp
xor
cld
cmp
pop
push
sub
loope
and
push
mov
lods
test
dec
sbb
pop
sete
iret
and
xor
dec
lret
jnp
push
mov
sub
xlat
push
aad
sbb
into
jnp
cs
or
push
and
xchg
sub
xor
mov
jmp
mov
jnp
ds
mov
aam
fsubl
jb
sbb
test
add
in
cmpsl
pop
or
and
add
push
aam
lods
incl
ret
pop
sub
push
repnz
adc
inc
xchg
loopne
and
xor
jns
adc
pop
sbbb
or
inc
aad
dec
imul
push
jecxz
push
sub
bound
jno
and
clc
aaa
jl
in
bound
ss
cmc
outsb
or
inc
sbbl
mov
movsl
xchg
mov
outsl
mov
or
les
insl
cmp
sub
or
test
mov
adc
mov
push
and
cmp
xchg
jae
add
pop
push
aas
add
cwtl
les
lock
clc
jns
dec
dec
fisubrs
add
fstl
js
or
rolb
adc
movsb
adc
cmc
imul
pop
ds
out
dec
sbbb
test
aas
xor
dec
jo
fstpl
loop
adc
add
cmp
rcl
cmp
inc
sbb
sbb
shrl
jbe
push
imul
add
js
jae
mov
jg
adc
jno
jno
dec
jb
push
mov
test
sub
adc
or
idivl
add
sub
stos
test
add
pop
or
mov
inc
dec
or
jge
stc
jne
inc
pusha
push
mov
jle
dec
jb
fs
arpl
dec
xlat
jnp
nop
xchg
inc
xchg
movsb
loope
lods
dec
sub
fwait
xor
cmp
insb
repnz
idivb
inc
cmp
sbbl
jns
lock
push
int3
jecxz
inc
mov
dec
pushf
cmp
fisubrl
test
fisubrl
cmpsl
fistps
push
cmp
xchg
xchg
andb
lods
js
test
shll
sub
pop
loop
push
and
mov
xchg
pop
sub
popa
vpcmpeqb
and
add
jecxz
loope
outsb
xor
test
or
pop
ret
jb
aas
inc
push
add
push
repz
and
inc
addr16
ret
ljmp
adc
add
inc
sub
lds
jno
pop
data16
cli
loopne
aas
adcb
adc
jo
cmpsb
push
cwtl
into
scas
ss
jl
sub
lcall
aad
subb
dec
out
add
cs
pop
pop
fcompl
mov
enter
jnp
push
mov
pop
lret
add
lret
in
ss
push
mov
aas
cwtl
dec
push
and
cs
push
ds
push
xchg
enter
sahf
mov
rcrb
dec
in
or
popf
or
pop
pop
insl
sub
or
or
sub
pop
dec
inc
ljmp
pop
popa
push
inc
fists
xor
fsubl
add
dec
add
xor
loop
pop
lahf
inc
je
jnp
push
lods
out
or
cmp
lret
bound
and
pop
or
dec
sbb
shl
or
bound
xor
jns
mov
mov
stos
dec
jmp
icebp
rol
sub
stc
out
insl
lret
pushf
hlt
adc
mov
cmp
xor
mov
fimull
adc
cmc
in
arpl
xor
pushf
fsts
addb
or
sbb
push
add
mov
loopne
rcll
js
ret
pop
dec
pcmpeqb
inc
mov
lahf
pop
dec
push
stos
add
push
add
push
mov
stc
push
sbb
push
mov
jp
pusha
inc
das
sbb
popa
cmpsb
pop
lods
arpl
pop
xchg
and
pop
sbb
mov
fxch
icebp
stos
sbb
mov
pop
dec
scas
repnz
call
pop
sbb
fcomps
pop
dec
pop
imul
and
xchg
push
movsb
aas
adc
pop
loope
in
cmp
mov
dec
scas
xlat
jl
icebp
xor
test
outsb
rolb
push
mov
fs
sub
out
pop
call
lods
adc
push
ss
push
arpl
mov
mov
in
adc
test
and
inc
sub
popa
jecxz
push
cmp
inc
push
xor
mov
xchg
inc
dec
add
xor
pop
mov
dec
add
pop
outsl
mull
xor
nop
adc
pop
xor
and
pop
push
sub
push
mov
out
outsb
movsb
mov
push
push
push
int
sbb
ds
pop
push
stos
leave
sbb
and
jne
dec
inc
mov
lcall
cmpsb
jne
addb
in
mov
enter
push
mov
cmp
ret
ret
dec
subb
and
adc
jmp
out
call
cmpsl
pop
jp
movsb
loope
pop
ret
stos
fs
loop
xor
sbb
fwait
dec
mov
adc
cmp
out
inc
jecxz
cmp
sbb
dec
sbb
mov
sub
pop
fs
add
mov
je
and
shrb
shr
cmp
je
push
ret
dec
ret
js
mov
push
jno
pushf
add
push
dec
pop
adc
sub
inc
xchg
mov
lret
data16
inc
push
pop
cld
je
fs
out
and
jp
enter
mov
push
btsl
fs
xor
xor
add
sbb
outsl
jmp
and
fwait
cltd
inc
push
scas
jmp
pop
and
popa
and
jmp
mov
out
push
inc
or
push
pop
adc
jnp
jecxz
movsl
fsubs
stc
or
dec
movsl
pop
rcrb
aaa
test
fwait
cmpsb
sub
mov
insl
mov
lcall
fimull
sarb
mov
xchg
movsb
stos
push
sub
push
loope
jle
test
pop
adc
dec
adc
inc
add
cmp
inc
aas
and
push
pmaxsw
shll
into
mov
std
and
push
hlt
nop
shll
sahf
dec
ret
cmp
dec
out
sub
aad
stos
inc
push
into
shll
sub
hlt
out
or
push
mov
shrb
cmp
dec
inc
jmp
int3
aas
cmp
adc
xchg
mov
outsl
popa
push
dec
mov
jo
ss
addr16
pop
inc
pop
les
dec
adc
inc
adc
out
test
xor
push
jge
add
mov
or
xor
pop
popfw
ss
inc
sarl
imul
aam
xchg
stos
sbb
pushf
jnp
or
loopne
add
hlt
clc
outsb
push
xchg
data16
inc
test
xorl
xor
sarb
adc
loope
in
dec
out
mov
jno
repnz
mov
xor
in
jo
mov
insl
andl
jnp
testl
test
and
sbb
or
xlat
sbb
repnz
lahf
mov
imulb
sub
jno
jnp
shlb
cmpb
icebp
mov
sarb
cltd
clc
pop
sub
push
cmp
xchg
in
cmp
mov
add
xchg
into
shrl
lods
iret
push
lea
adc
cld
scas
pop
pop
lods
jecxz
xchg
stos
lret
shl
or
inc
sub
in
mov
sbb
loopne
mov
push
sbb
in
and
xchg
add
xchg
push
inc
cmpsl
push
jbe
push
jno
mov
add
mov
jmp
pop
push
call
adc
push
jle
and
push
inc
xchg
xchg
testl
push
stos
mov
icebp
jne
push
pop
inc
test
mov
lret
loope
add
outsl
xchg
loop
imulb
and
loop
add
or
nop
daa
fistl
mov
pushl
cmpsb
clc
orb
imul
jge
push
gs
cmp
sbb
out
sub
jb
in
jmp
push
in
adc
or
insb
loop
cmp
aas
inc
pop
and
and
jbe
aaa
dec
jge
sub
pushl
xchg
into
stos
xchg
fcmovb
mov
dec
cmpsb
pop
int
leave
xchg
pop
or
cltd
mov
jo
inc
or
dec
push
pop
nop
xchg
in
add
xchg
inc
xor
movsl
jb
push
pop
sub
add
pop
sub
js
std
popf
ret
data16
adc
pop
fcoms
addr16
inc
add
out
xlat
inc
fs
adc
stc
loope
sub
cmp
fisttpl
sbb
mov
and
jge
inc
negb
lds
cltd
push
fldenv
iret
fwait
cwtl
add
fistl
fidivrs
sub
lods
aaa
mov
inc
ret
and
lret
xchg
xlat
fwait
and
mov
hlt
mov
mov
add
dec
or
jle
mov
push
sbbb
divb
in
jecxz
cmc
sahf
jg
or
inc
jne
fstl
imul
movsb
out
pop
xor
xor
stos
xchg
mov
mov
lds
fidivrs
sahf
adc
mov
hlt
add
mov
icebp
mov
mov
hlt
mov
mov
fcomip
out
nop
negl
ja
add
pop
sbb
inc
addb
cld
mov
ret
lret
aam
xor
cmpsb
jg
dec
jmp
lcall
and
arpl
add
nop
rcrb
xor
push
fisubl
popf
scas
xor
mov
loope
sub
add
in
sub
imul
sbb
cmp
lret
cmp
fiadds
fidivrs
cwtl
ss
dec
mulb
sti
jns
inc
mov
data16
mov
or
scas
iret
loopne
int
sarb
sbb
ja
adc
pop
je
push
lds
sbb
dec
loop
ret
jg
sbb
icebp
push
jle
mov
add
stc
mov
out
or
lret
ret
ljmp
pop
enter
popf
dec
out
add
xchg
movb
std
inc
hlt
mov
jecxz
adc
mov
push
push
cli
jbe
rcrb
test
das
xor
mov
add
xchg
cmpsb
cmp
adc
inc
lret
push
mov
loope
sarl
inc
mov
addr16
sub
push
mov
sub
cmpsb
popf
pop
cwtl
pop
stc
cmp
xchg
cld
mov
cmp
sub
or
pop
mov
cmp
ljmp
cli
ficompl
sub
xchg
jl
cmc
mov
jmp
adc
dec
fldcw
imul
or
or
cmp
cmp
mov
cmp
std
sbb
xor
dec
mov
iret
call
push
pop
ja
push
mov
cs
lds
fcmovbe
imul
inc
icebp
test
add
pop
rcr
stos
sub
push
shrl
lret
stc
jo
sahf
or
out
scas
sub
dec
xor
ljmp
add
pop
test
into
jo
repnz
in
xchg
and
sub
sbb
hlt
mov
fucomip
addr16
and
fistpl
push
in
int3
fldt
inc
sub
xor
jl
inc
test
pop
test
mov
stc
push
cmp
dec
cli
rolb
lds
pop
xor
mov
jmp
push
mov
fsubr
sbb
cli
cld
xor
out
dec
addl
stc
or
out
add
arpl
int3
sti
mov
xchg
add
xchg
push
mov
shll
into
shll
fwait
mov
xor
inc
stos
popw
out
repnz
insb
lea
and
scas
pop
js
pop
pop
push
stos
push
test
popf
xchg
adc
pop
shl
roll
adc
push
maxsd
jbe
sbb
xor
cld
movups
lds
mov
dec
jecxz
fwait
jecxz
out
aaa
loope
jbe,pt
and
adc
jmp
xor
and
jns
dec
cmp
ja
pop
adc
fmuls
inc
xor
jbe
or
xor
mov
xchg
incb
xchg
lea
fs
rorb
adc
out
adc
pop
push
jl
adc
fwait
rcll
stc
or
sbb
xor
pop
aad
rcll
sub
data16
xchg
cmp
or
cli
shll
pop
stos
das
and
ret
movsl
popf
mov
inc
push
push
test
dec
int
insb
and
push
lods
jo
andl
jmp
fcompl
add
jecxz
incb
test
and
add
inc
out
and
xor
into
inc
lock
aam
xor
shll
sbb
clc
scas
lds
inc
jecxz
cmp
jp
orl
xor
add
mov
sub
cs
stos
or
cwtl
and
into
inc
sub
in
and
fisttpll
add
push
mov
ja
jb
test
adc
loope
enter
data16
cmp
sub
sub
pop
sub
xchg
jns
vunpckhps
lock
clc
jns
xor
mov
ret
scas
add
xor
push
inc
and
push
cmp
mov
jmp
cmp
sti
sub
adc
les
stc
xorl
test
lcall
dec
dec
jnp,pn
add
nop
dec
ret
add
mul
pushf
jno
jae
add
push
dec
xor
dec
pop
sbb
fildl
mov
mov
inc
mov
fwait
jbe
or
push
fadds
mov
cmpsb
stc
outsl
and
cmp
iret
xlat
sti
out
idivb
push
es
aas
dec
xchg
cld
repz
inc
and
sti
pushf
into
clc
xchg
mov
and
dec
call
mov
add
push
frstor
sbb
mov
sub
sar
mov
adc
push
mov
lahf
inc
andb
stos
xchg
jns
dec
mov
cmc
pop
mov
sahf
mov
clc
arpl
jmp
push
mov
out
jge
decb
lock
cltd
mov
add
ffree
sub
and
push
cmp
arpl
cmpsl
and
jl
ret
mov
cmovle
add
push
fsts
xchg
dec
dec
add
loop
aad
jmp
std
aam
xor
push
decb
in
mov
add
push
push
mov
adc
jne
int
mov
das
inc
sbb
push
ja
lock
mov
sbb
aam
xchg
sti
xchg
ja
xchg
in
hlt
or
nop
jno
loop
mov
adc
xor
lods
adc
dec
xor
lock
gs
cmp
xor
negb
dec
fistpll
cmp
push
cmc
add
or
enter
lds
je
dec
repnz
push
jmp
aas
dec
jae
jno
mov
jecxz
icebp
ss
push
mov
insb
lcall
out
cmp
and
pop
jp
pop
jno
incl
sti
add
ljmp
fcomp
fcomps
hlt
and
pcmpgtb
lods
outsl
push
and
xor
adcb
or
sub
lea
fnstcw
fs
jle
repnz
out
pop
loopne
xchg
mov
pop
je
js
addl
in
int
xor
mov
sbb
jns
icebp
pslld
stc
push
sub
testb
or
std
repz
jmp
stc
sub
cmp
ja
xor
aas
jbe
push
cmc
add
or
addr16
int3
data16
xchg
and
mov
dec
dec
sti
cld
mov
divb
xor
mov
int3
and
enter
std
stc
inc
pop
inc
sub
pop
es
push
arpl
lods
dec
popa
out
testl
xchg
xor
or
sbb
decb
out
cmc
lods
shll
lahf
fists
ds
clc
mov
fcmovne
mov
divl
mov
jp
dec
lds
test
push
jg
clc
leave
idiv
adc
sbb
inc
imul
jecxz
xchg
mov
dec
nop
jp
dec
pop
sub
call
stos
lods
cld
out
scas
add
loope
add
or
push
imul
lock
bound
xor
popa
test
rol
xor
and
insl
push
cmc
fs
xlat
xor
cmp
bound
push
loop
hlt
push
jmp
sti
xor
sahf
out
pushl
push
cmc
int
jge
fsubrl
add
repnz
cs
shr
inc
imul
loopne
mov
testl
sbb
add
pop
in
bound
mov
jecxz
xor
push
push
dec
andl
std
dec
add
gs
iret
cmp
inc
add
push
push
or
add
int3
xchg
adc
aas
mov
ljmp
pop
sti
mov
movsb
jecxz
ss
loop
sbb
push
xor
in
jl
in
fidivl
in
push
add
int3
arpl
out
push
fdiv
push
or
cld
cmp
stos
xchg
subb
mov
inc
sbb
mov
mov
movsb
divl
jnp,pn
dec
sbb
or
mov
vpor
insl
push
pop
jo
je
xchg
dec
lcall
pushf
in
sti
jae
andl
js
mov
or
add
jp
push
or
inc
scas
push
sbb
add
or
mov
mov
add
jl
enter
pop
xor
jle
jns
jae
cmp
xor
adc
xchg
pushl
xor
jnp
addr16
or
divb
inc
pop
mov
inc
pop
jl
scas
aam
xchg
mov
sub
mov
jle
sub
into
mov
or
and
cmp
hlt
rclb
out
jp
incl
pop
mov
andl
std
out
insb
or
adc
xchg
xchg
push
ds
popa
inc
xorl
adc
push
xchg
inc
outsl
dec
dec
arpl
incb
inc
movsl
shl
inc
jb
adc
insb
cld
pop
inc
cs
call
dec
scas
inc
push
push
cmpb
lock
push
fiadds
ljmp
cld
std
sbb
jg
xchg
test
jge
movups
test
loop
xorl
or
dec
and
mov
lret
jne
xlat
lods
mov
cwtl
dec
add
in
pop
push
daa
pop
xchg
rcr
aad
in
lds
in
push
cld
jmp
clc
xor
out
inc
mov
icebp
push
mov
dec
out
jmp
ljmp
into
fsubs
ja
cld
arpl
cmp
adc
xor
addr16
in
mov
rorb
push
roll
out
or
xorb
xor
loope
cmpsl
adc
mov
fcoml
and
or
xor
xchg
jae
jbe
xor
adc
or
xchg
push
mov
jle
mov
imul
clc
xor
push
cwtl
fildl
in
cmp
repnz
fs
insl
fsubrs
lret
mov
popf
and
and
dec
pop
int
sub
orb
mov
ljmp
in
repnz
pop
mov
jno
mov
iret
add
cld
enter
in
sub
cmp
loopne
xor
dec
fcmove
cs
loop
push
cmp
push
pushf
add
push
push
jecxz
or
mov
insl
sub
sahf
and
ja
rolb
push
inc
ret
push
push
mov
dec
int
and
fstp
lods
imulb
inc
pop
dec
cmpsb
push
jg
jecxz
in
jo
mov
dec
repnz
ret
jecxz
jge
jecxz
xchg
jmp
xor
clc
out
cmc
jmp
int3
pushf
mov
shlb
cmpsb
shrl
xchg
ror
incb
cmp
mov
inc
jne
adc
sub
pinsrw
test
or
mov
sbb
mov
div
add
clc
adc
inc
xchg
xlat
mov
push
repnz
inc
adc
inc
pop
bound
jno
or
insl
jg
nop
shlb
shr
jp
pop
leave
push
cmp
mov
mov
sub
fstl
add
push
es
sahf
push
in
sbb
sub
xor
stos
adc
sbb
dec
pop
push
cld
jle
xor
hlt
gs
clc
and
cs
ret
jmp
mov
jp
lds
inc
dec
jg
movsl
sub
inc
pop
sub
or
xor
mov
insl
mov
push
lds
stos
fildl
xor
inc
lods
adc
jp
outsl
clc
sub
daa
ret
mov
std
pushf
mov
pop
iret
mov
add
xor
xchg
add
in
std
xchg
jns
stc
sub
sbbb
mov
push
loope
in
xchg
add
and
shrb
mov
enter
add
hlt
mov
cmp
pop
jo
jns
cs
jae
inc
jnp
jnp
and
jns
repz
rolb
scas
scas
das
jns
or
jb
clc
je
jp
aas
stc
xchg
ret
and
jbe
mov
in
out
outsb
lahf
sub
xor
add
sub
mov
js
fimuls
aas
push
jecxz
mov
into
in
push
out
or
stc
jne
cmp
fstpl
rclb
shlb
xor
mov
nop
aas
cmp
loopne
inc
push
inc
dec
mov
mov
xadd
aas
je
dec
rorb
pop
or
and
fdivp
mov
sbb
decb
pop
clc
aad
ja
rorl
into
popaw
inc
xchg
fld
dec
arpl
out
int
daa
jmp
mov
add
mov
hlt
push
mov
jno
aaa
clc
addr16
jb
into
loop
push
dec
ret
inc
sub
addl
pop
mov
test
sub
mov
cmp
nopl
add
add
xchg
sbb
inc
mov
cli
decb
out
dec
into
cmp
pop
cmp
pop
faddl
mov
push
or
inc
hlt
dec
aaa
movsl
add
hlt
pop
sbb
je
push
inc
adc
mov
cld
outsb
lret
push
ja
popf
xorl
test
push
in
or
or
fs
nop
push
sbb
clc
pop
lret
dec
out
mov
outsb
int
stc
test
adc
or
dec
jge
adc
sbb
sti
or
cld
out
cmp
push
repz
push
and
sbb
into
inc
xchg
jmp
je
mov
divl
shl
loop
testl
lret
xchg
sti
dec
dec
fcomps
mov
mov
sub
cmp
dec
and
and
insb
mov
adc
adc
sub
push
out
inc
add
out
inc
insb
cmp
inc
cmp
enter
push
test
fistps
or
out
xchg
xchg
out
std
mov
fs
cli
shl
xchg
sbb
xlat
mov
cli
lods
out
test
pop
inc
xor
and
mov
xchg
add
and
sbb
imul
aam
xor
rolb
js
scas
lods
aas
jno
fs
into
sbbl
jge
xor
icebp
inc
add
jnp
aam
dec
jmp
pop
lret
fcomp
leave
mov
cmc
sbb
test
pop
mov
movsb
and
loopne
sti
xor
jnp
mov
mov
pop
das
cmp
xchg
jmp
xchg
cmpsb
fucomi
aad
sbb
pop
adc
das
cmp
pop
cmp
movsb
inc
ljmp
xchg
push
loop
adc
adc
push
sub
sub
sbb
ret
inc
test
xchg
fstl
or
mov
xchg
jb
mov
pop
movsb
cli
sbb
lret
repz
mov
decl
test
sub
fs
das
test
out
int
movsb
aam
nop
mov
out
ljmp
push
mov
lods
shll
mov
sti
aam
push
pop
sahf
and
or
adc
movsl
in
loopne
mov
scas
mov
insb
gs
xor
or
pop
mov
shl
out
cltd
cmp
jae
and
in
out
arpl
repz
imul
xor
insl
mov
sbb
es
rorl
flds
leave
out
push
cmpsb
push
das
or
adc
mov
imul
mov
add
cltd
add
xchg
sbb
mov
push
dec
lret
xchg
push
sub
inc
or
movsl
lods
xchg
nop
lret
and
mov
test
cmp
ss
ret
lcall
lds
sub
sbb
sbb
cmp
inc
fistl
in
fistpll
movsl
test
hlt
hlt
dec
pushf
jbe
scas
or
pop
push
ljmp
dec
call
lahf
cmp
mov
mov
push
xor
decl
inc
jle
sub
sub
and
in
bound
out
shll
cmpsl
add
push
add
test
add
lcall
jg
push
enter
into
movsl
sub
rolb
test
inc
or
aam
sbb
in
daa
rclb
or
lea
and
movsl
add
pop
push
cmpl
pushl
out
and
sub
push
aas
mov
fldl
lret
movhps
inc
ljmp
add
pop
xchg
adc
dec
rcll
jb
cld
test
je
pop
scas
int3
jecxz
pushf
or
or
imul
cmp
pop
and
fsubrp
adc
out
cmp
jno
xchg
jecxz
xchg
or
and
add
or
add
mov
loopne
xlat
sub
add
shl
jecxz
aam
icebp
adcb
test
mov
mov
lea
pop
mov
mov
mov
das
filds
pop
push
inc
push
sbb
xchg
cmp
cmp
inc
xchg
ja
xor
and
or
adc
scas
ret
push
mov
cmp
xor
idivl
cmp
mov
rorl
lock
rol
adc
mov
xor
insl
loop
fidivs
add
dec
sub
mov
lea
jbe
push
sub
jg
repz
gs
pushf
mov
ljmp
sbb
addr16
dec
cli
lods
aaa
arpl
lcall
mov
mov
shl
cmc
out
repz
push
enter
mov
pop
mov
or
adc
sbb
lcall
cltd
addb
cmp
es
cmp
ljmp
xor
jnp
adc
rorb
sbb
pop
addr16
mov
mov
inc
pop
jp
mov
insl
jae
imul
fs
daa
pushf
sbb
test
fisttpll
shll
or
les
dec
cli
insb
mov
dec
mov
pop
pop
lret
out
aad
clc
dec
sbb
int3
imul
es
and
mov
xchg
sub
ret
divb
pusha
stos
mov
subl
and
inc
adc
test
dec
lock
in
push
inc
inc
sbb
ja
loop
pop
mov
jae
push
and
out
ret
xor
sub
stos
shl
test
add
pop
pop
jmp
fwait
xor
dec
add
sbb
movsl
arpl
ficoml
sbb
test
ficoml
in
jo
mov
lea
fdiv
or
dec
daa
insl
xchg
mov
add
rorb
lcall
cs
or
and
hlt
test
int3
je
outsl
pop
sbb
inc
jp
inc
push
shr
sbb
dec
xchg
out
fsubrs
pop
into
add
push
les
fisubrs
lds
xor
mov
dec
pop
bound
mov
xchg
les
sub
and
ret
lock
push
outsb
or
scas
or
mov
sub
aas
pop
sub
inc
shr
or
lahf
jno
aas
dec
fisttps
sbb
jb
jl
ljmp
lret
jmp
cmp
and
sbb
xchg
add
insb
hlt
push
jns
les
mov
mov
call
shrb
roll
cmp
out
xchg
repz
mov
scas
ret
std
add
insl
cld
mov
fs
mov
and
aaa
or
repnz
je
inc
xor
sbb
sti
subb
js
sti
push
or
hlt
dec
in
push
and
inc
pop
or
push
xor
push
add
inc
sbb
test
mulb
into
scas
dec
scas
mov
dec
lret
sbb
push
pop
cmp
fcmovne
sbb
pop
cwtl
dec
jmp
fistpl
stos
or
pop
rorl
out
xlat
jnp
add
dec
pop
ljmp
inc
rorl
inc
ret
lret
test
sahf
filds
cmp
mov
xchg
xor
pop
pop
cmp
mov
sbb
add
iret
sub
adc
jge
aad
xchg
enter
sar
pop
adc
inc
sub
push
aaa
mov
xchg
imull
jmp
mov
enter
push
pop
mov
mov
add
xor
mov
cmp
cmp
mov
add
sbb
stos
mov
pop
divl
or
inc
xchg
and
adc
cmp
sbb
cmp
push
outsb
xor
insb
enter
mov
jp
push
or
sub
fwait
aam
daa
sbb
mov
add
fidivrs
into
pop
dec
pop
imulb
mov
fistps
or
mov
xor
loopne
or
addl
sub
int
pusha
sub
adc
in
mov
push
xor
sub
cli
imul
pop
adc
shr
js
or
xor
xor
into
xor
out
cmp
xor
fs
dec
xor
loope
insl
dec
push
in
inc
outsb
fbstp
out
leave
xor
cs
mov
jne
xorb
cld
push
outsl
popf
inc
test
add
add
xor
push
push
fwait
and
fnsave
sub
jo
add
pusha
adc
jo
dec
xor
loop
popf
cmp
xchg
int
sbb
lods
push
add
test
je
sub
sbb
ds
fwait
daa
adc
test
jmp
ljmp
pop
lods
xchg
inc
sub
leave
sub
or
xor
mov
cmc
mov
fcmovne
cmp
adc
mov
inc
outsb
mov
add
data16
push
mov
mov
sbb
dec
std
ficomps
repz
and
daa
lret
ja
pop
sub
jns
sbbb
stos
add
push
and
mov
and
adc
insb
xchg
sbb
push
lods
repz
jne
dec
and
fidivl
jno
add
jp
add
mov
sbb
ret
ds
in
and
dec
scas
jge
dec
inc
pop
inc
and
cmp
fcompl
sub
fcmove
imul
inc
push
fwait
xor
aam
sbb
inc
or
mov
divl
rorl
jg
mov
leave
mov
inc
dec
lock
jg
rcl
xchg
movsb
push
or
or
xacquire
push
pop
in
aam
xor
sbb
je
scas
xor
lret
inc
push
sub
ljmp
push
pop
cmpsl
int3
dec
and
push
ja
dec
xorb
cmp
pop
mov
pop
ret
cli
push
jns
xchg
stos
sub
sbb
or
subb
ss
popf
add
loop
mov
movsb
mov
cmp
dec
loopne
enter
mov
das
sub
jno
gs
bound
jns
and
les
subl
arpl
adc
and
daa
loopne
cli
outsl
out
test
loope
adcl
cmp
sub
ret
shll
arpl
sti
pop
lea
lock
pop
divb
in
stc
movsl
testb
es
add
loopne
push
rolb
sub
lock
mov
sub
push
mov
or
and
or
jae
cmp
out
ficoml
sbb
daa
scas
aam
and
adc
daa
xchg
adcl
test
ror
adc
loop
pop
add
aaa
dec
inc
fsubr
gs
stos
sti
aas
jbe
jno
in
imul
out
pop
jmp
aaa
adc
dec
subb
jns
arpl
pop
sbb
dec
and
pop
and
ds
sub
pop
jp
add
mov
rolb
mov
testb
arpl
mov
loop
jmp
ja
ss
hlt
sbb
jge
inc
xorb
xchg
movl
and
loopne
lret
adc
mov
fwait
xlat
pop
jp
cmp
roll
jae
add
mov
pop
ret
mov
in
mov
das
mov
cli
or
jecxz
jbe
xor
mov
mov
xor
loope
dec
mov
sbb
into
in
sarb
mov
cmpsl
xor
xchg
outsb
inc
icebp
dec
push
and
adc
dec
xlat
jae
jno
je
repz
and
inc
lcall
test
aam
test
jmp
stos
mov
test
mov
push
aam
mov
cld
mov
pop
or
pop
out
stos
xor
push
jnp
or
loop
outsb
movb
bnd
inc
add
pop
test
mov
mov
call
push
cmp
and
call
add
push
cmc
sahf
fisubs
mov
sub
mov
into
mov
mull
and
and
lret
cmc
shrl
xchg
bound
mov
and
outsl
mull
out
and
jbe
into
xchg
mov
es
push
bnd
inc
addr16
daa
movsb
sbb
idivb
out
and
iret
subb
mov
cmpsb
xchg
je
test
outsb
dec
iret
sub
mov
add
imul
push
std
cmp
sbb
adc
xlat
dec
lods
fs
push
inc
dec
orl
add
rclb
ss
mov
or
dec
jno
sbb
je
adc
pop
fiaddl
pop
mov
sub
cmp
mov
adc
cli
pop
cs
movb
dec
stos
das
lret
push
mov
gs
inc
cmp
test
dec
inc
adc
xchg
jb
and
into
add
and
pop
or
lock
xchg
dec
lret
movsl
stc
xchg
das
or
push
xchg
xchg
mov
xlat
daa
cs
repz
cmc
lret
and
and
in
pop
cli
mov
loop
cmpsl
or
sub
outsb
adc
inc
inc
add
gs
adc
notl
push
hlt
pop
out
fidivs
mov
xchg
dec
scas
inc
call
out
add
mov
or
and
mov
push
sub
cmp
pushl
nop
sub
in
dec
in
jbe
sbb
jbe
push
int3
ret
ds
or
fstpt
push
out
fsubrl
push
mov
rorb
stc
xor
dec
add
sub
push
ds
kaddw
push
or
ret
hlt
add
sahf
sbb
rcl
add
es
xor
mov
lods
mov
inc
es
into
in
out
and
inc
add
icebp
jae
cmp
cmp
jno
mov
hlt
dec
push
push
aam
icebp
cmpsl
js
aas
pop
in
or
mov
xorb
xchg
xor
cmp
fildl
cld
leave
pop
aad
inc
movsl
mov
dec
sub
and
stos
push
mov
sahf
lret
sbb
xor
aam
sbb
jecxz
addr16
pop
cmp
mov
jae
mov
mov
lret
push
and
mov
lahf
push
cmp
sahf
add
sub
cmp
fs
mov
sbb
add
cmp
and
add
idivl
sti
pop
js
cmc
xchg
xor
addr16
adc
aaa
fcoms
bound
dec
xchg
ss
cld
arpl
and
inc
leave
inc
or
not
bound
adc
jno
push
insl
push
ret
jbe
sar
dec
jl
mov
out
test
sub
mov
and
dec
inc
cmpb
pop
call
mov
hlt
xchg
mov
inc
je
outsb
mov
push
xchg
cmc
adc
fdivrs
sub
in
ret
xor
pop
mov
inc
push
imul
jne
dec
xchg
lds
icebp
inc
lahf
dec
dec
addl
ret
paddusw
in
decl
inc
and
jl
jle
dec
pop
ljmp
out
js
sbb
dec
ljmp
pop
mov
ja
jge
sbb
sbb
and
dec
cli
lds
cmp
inc
xor
or
dec
dec
je
mov
outsl
cld
or
hlt
push
push
sbb
pop
mov
dec
aas
pop
dec
loope
add
mov
jo
cmp
repnz
jne
add
int3
push
push
dec
xor
fildl
inc
push
sub
xor
mov
dec
push
xchg
and
lahf
ret
fucomi
aaa
pop
and
data16
ret
dec
adcb
push
xor
jnp
xor
cmc
or
inc
dec
dec
out
testb
out
loopne
aad
jmp
mov
mov
or
and
jp
out
sub
push
xchg
sub
pop
jecxz
aaa
idivl
lret
push
das
jnp
loope
cmp
pop
popf
les
mov
mov
fwait
xchg
dec
xchg
xor
push
aam
test
jno
mov
adc
cmpl
movsl
fildll
shrl
push
xor
adc
out
inc
mov
mov
add
or
sbb
stos
mov
push
call
clc
js
sbb
or
arpl
sub
or
inc
add
cli
jno
and
mov
pop
mov
inc
imull
push
jnp
xor
jne
insl
push
cmp
xor
mov
addr16
xchg
jnp
out
das
and
or
ret
scas
inc
imull
add
gs
dec
hlt
test
cltd
jg
mov
fstps
jecxz
sbb
loope
ds
jae
cmp
mov
cmc
clc
pop
std
fisttpl
cmp
scas
iret
es
adc
mov
ljmp
sti
dec
and
shll
cwtl
std
fucomi
inc
add
hlt
cmp
rorl
inc
arpl
push
push
and
add
pop
int
rclb
inc
std
push
xor
fstpt
test
lods
xchg
ja
add
pushl
cmp
dec
jae
fsubrp
addr16
push
and
push
mov
dec
pop
cmc
ljmp
ja
pop
fcomps
pop
insb
mov
jecxz
out
push
bound
aad
add
xchg
xor
dec
mov
sub
jo
add
loopne
push
insb
push
sub
mov
fiadds
inc
clc
adc
inc
out
adc
jecxz
and
adc
hlt
jo
adc
addr16
mov
pop
movb
pop
les
add
sub
push
fcomps
mov
ret
stc
or
sbb
inc
leave
push
cmc
ljmp
push
mov
sbb
cmp
xchg
dec
and
dec
add
loop
test
aad
and
pop
xchg
aaa
jno
cmp
loop
dec
in
or
sub
fisubrs
pop
pop
fbstp
pcmpeqb
or
inc
add
push
es
mov
push
mov
jl
mov
rolb
into
mov
fists
out
lahf
or
cmp
push
lds
icebp
popl
loope
int3
push
mov
pop
out
repz
push
pop
add
add
lods
shrb
or
mov
jno
enter
icebp
mov
jae
push
or
lds
cli
movsb
addb
dec
pop
outsl
cmc
outsl
inc
mov
ds
cmp
push
sub
mov
outsb
or
sub
les
or
sub
sahf
jl
xorl
cmpsb
sbb
sbb
sub
fisubs
icebp
cmp
xchg
in
sub
stc
je
xchg
jp
cmc
ja
data16
adc
mov
fbld
inc
sbb
push
clc
lret
sbb
fildl
pop
lret
mov
pop
je
or
sub
jp
cwtl
mov
dec
adc
sbb
pop
inc
inc
lret
lea
loopne
inc
pop
and
in
subb
or
inc
into
add
clc
and
sbb
mov
cld
or
ljmp
insb
jp
mov
cld
std
jl
dec
mov
scas
orb
aad
mov
adc
and
scas
cmpsb
xchg
sbb
and
into
roll
call
push
call
test
and
shll
dec
cmp
pop
movsb
pop
out
lret
jae
repnz
inc
out
adc
fcoms
gs
ljmp
jecxz
lock
aad
icebp
shrb
push
inc
and
push
outsb
cmp
aam
pop
adc
or
imul
dec
adc
pop
test
jge
adc
jo
jmp
addr16
push
and
lds
out
repz
call
inc
inc
test
shl
arpl
sub
loop
sti
popa
xor
and
cltd
hlt
cmp
add
outsl
test
test
sub
in
push
incl
sbb
in
inc
test
ds
jmp
jg
loopne
call
pop
push
cmp
pop
mov
jecxz
cmc
add
jae
sbb
js
cmpsb
mov
shrb
jl
add
or
cmpsl
sub
cmpsb
loope
out
jecxz
and
mov
cmp
add
xor
ljmp
out
add
loop
fcomp
outsb
lds
ffree
push
push
cwtl
sbb
adc
add
sbb
lret
or
xchg
jno
subb
enter
popf
std
pop
shll
add
and
adc
or
jns
add
repz
dec
xchg
and
stos
add
push
sahf
decb
inc
add
push
fstps
dec
aad
push
aaa
loope
mov
or
jmp
loopne
push
push
ljmp
popa
incb
iret
rcll
lret
pop
ljmp
ret
push
test
mov
and
divb
lock
ror
inc
rclb
mov
rclb
sahf
lahf
insb
popa
pop
repz
and
dec
push
repnz
test
loop
dec
jnp
iret
scas
xor
jo
pop
xchg
push
fsubl
out
adc
jno
push
test
addr16
push
testb
std
push
and
and
ret
je
mov
popf
xchg
pop
inc
push
neg
add
dec
push
cmpl
je
fnstsw
ret
jmp
push
notl
xchg
xchg
lret
test
xchg
add
cmp
add
mov
adc
das
sbb
mov
or
imulb
pop
in
stc
ffreep
add
mov
jo
push
xchg
mov
int3
fs
aaa
lods
sbb
test
add
dec
push
jb
and
ljmp
jno
js
notl
out
imul
je
mov
or
js
add
mov
je
movb
mov
insb
call
aaa
daa
movsl
pop
out
ja
jmp
jp
mov
cmp
xchg
xor
les
sub
loopne
cld
cmpsl
mov
rolb
mov
dec
loopne
je,pn
cli
push
in
cmp
push
xchg
cwtl
insl
jle
aaa
sub
aaa
insl
sub
sub
fmuls
loopne
cmp
mov
out
mov
push
push
shrl
cmp
movsb
and
out
adc
dec
testl
pop
in
adc
dec
cmp
lret
test
xchg
ja
ret
loope
repz
mov
pop
jle,pn
inc
ret
testl
sarb
jg
out
pop
in
nop
pop
mov
jb
fs
sbb
mov
or
ficoml
out
sbbl
push
cmp
jmp
and
mov
adc
fcomps
push
inc
mov
mov
insl
jbe
mulb
cmp
inc
mov
adc
aad
mov
int
jge
ret
sbb
scas
jmp
xchg
jg
mov
fs
lahf
imul
jp
cmp
dec
pop
lods
lcall
daa
fmul
inc
pop
popa
adc
dec
jns
in
mov
jmp
inc
insb
out
ljmp
cmp
outsl
cltd
aad
or
jg
jb
je
sbb
sub
jle
push
jnp
inc
pop
imul
xorl
cli
aas
xor
int
push
sbb
xchg
bound
xor
mov
movsb
test
push
bound
dec
pop
aad
xchg
imul
hlt
adc
or
jmp
and
leave
les
sbb
lea
mov
in
das
jb
movsl
cmp
leave
jecxz
lret
mov
xor
lods
ss
jecxz
xchg
xlat
adc
and
rclb
out
cli
mov
or
les
repz
add
mov
outsb
cmpsb
push
ret
adc
push
stos
in
xor
and
int3
pusha
cmpsb
sub
ret
jb
xchg
push
push
pop
or
jbe
fs
aad
fs
cs
xchg
out
enter
cmpsl
sub
mov
and
or
or
fiadds
cmpsl
in
in
jb
adc
rcll
mov
mov
pop
cmp
into
pop
iret
jecxz
mov
mov
pop
adc
aam
xlat
mov
into
dec
pop
pop
mov
push
dec
sahf
adc
adc
icebp
push
shl
and
ds
mov
push
pop
add
je
ret
jg
ret
add
jmp
push
lret
xor
cmp
jmp
lods
leave
add
lcall
in
jne
jg
push
push
aaa
dec
mov
sub
cwtl
js
out
or
cmpsb
repnz
mov
hlt
data16
push
out
adc
mov
push
mov
mov
dec
dec
les
sub
add
testb
jne
cmpsb
inc
mov
stos
or
jns
lahf
sub
sti
push
fs
daa
mov
in
imul
push
fwait
mov
jne
and
mov
rorb
jmp
and
pop
jge
dec
jns
sbb
xchg
test
mov
inc
stos
xor
sub
jge
mov
sub
or
mov
adc
scas
aas
adc
mov
ja
dec
sbb
lret
mov
or
pop
je
adc
fimull
adc
movsl
cli
or
xchg
pop
shrl
int
cmpsb
scas
dec
pop
xchg
jo
pop
and
loopne
jo
dec
dec
out
std
popf
inc
sbb
and
cmp
dec
xchg
insb
fsubs
std
andl
ljmp
and
pop
sbb
mov
jno
xchg
outsb
xchg
cmp
cli
pop
in
ja
pop
adc
jmp
jae
mov
sub
jp
mov
enter
inc
dec
sbb
and
sub
int3
jecxz
ret
or
lahf
xor
xchg
test
out
fcomps
fcomps
pop
mov
daa
std
push
sbb
mov
mov
push
mov
xor
adc
das
xor
add
rorl
push
jae
sbb
push
out
lcall
insb
aam
jae
js
xor
ja
int3
pop
and
cmp
push
sbb
negl
xor
lods
jl
adc
in
xchg
pop
push
hlt
js
dec
xchg
cs
popa
mov
dec
les
mov
mov
or
sbb
insl
inc
inc
lcall
xchg
adc
xlat
xor
scas
movsb
adc
pop
xchg
clc
and
test
mov
arpl
dec
test
test
popf
cli
hlt
fwait
cmp
push
pushf
mov
insb
lock
cwtl
ret
fwait
mov
adc
shr
xlat
aaa
jmp
and
lds
sbb
mov
repz
fs
std
cmp
inc
fmuls
std
cmp
aam
fwait
pop
pop
mov
sti
test
popf
repz
xchg
push
push
ret
pop
pop
out
repnz
fwait
mov
add
loop
xchg
imul
cmpsl
iret
call
mov
mov
jnp
push
nop
ret
fcoms
inc
sarl
pop
je
sbb
data16
adc
xor
jnp
aaa
out
jmp
mov
xor
in
pop
ret
pop
dec
adc
pop
jbe
stos
ror
add
mov
aam
xor
int
sub
insb
or
lret
nop
fs
cmpsl
fiaddl
mov
loope
or
xchg
or
subb
mov
data16
pop
add
jge
inc
cmp
imul
mov
add
mov
cmp
add
das
cwtl
pop
rcr
in
or
cltd
pushf
jle
mov
dec
fcmovnu
pop
jae
testb
test
out
cmp
mov
inc
xchg
jecxz
jg
mov
test
or
hlt
mov
mov
call
lahf
cmp
lds
sub
sti
push
dec
lret
cmp
aas
and
mov
iret
ret
iret
xchg
push
stos
andl
scas
out
and
scas
adc
loopne
xchg
mov
cmpl
call
add
ret
out
pop
ror
adc
add
or
sahf
mov
mov
or
sldt
add
xchg
out
and
mov
rcll
fst
xchg
jg
mov
adc
movsl
xchg
push
hlt
lret
sub
push
or
and
in
add
pop
inc
fstpt
dec
filds
mov
hlt
or
push
sub
mov
daa
sub
mov
and
shl
in
add
or
mov
pusha
je
shlb
std
int3
imul
sbb
pop
sbb
jmp
and
pop
add
das
xchg
push
push
xor
and
dec
popf
sahf
push
iret
mov
cmc
and
in
pop
loop
inc
dec
or
add
ror
lret
stc
aam
in
aas
call
jbe
out
stos
loope
sub
inc
pop
sub
lods
in
cmc
les
cld
dec
inc
lea
mov
pop
sbb
dec
pop
aam
pop
jp
inc
outsb
insl
divl
dec
js
push
out
pop
jge
loop
in
cmpsl
dec
cmp
xlat
je
push
adc
pop
pop
and
sbb
adc
push
adc
mov
in
mov
into
out
inc
cmp
xor
lret
std
mov
pop
scas
pop
and
dec
push
xchg
xor
das
dec
add
sahf
xchg
lods
dec
or
or
js
or
jno
inc
out
push
xor
pushf
xchg
jnp
or
arpl
dec
popf
sti
xchg
adc
adc
fdiv
xor
incl
cltd
rcrb
mov
clc
adc
inc
push
pop
or
xchg
xchg
inc
mov
sbb
loope
mov
pop
icebp
adc
lahf
call
aam
jp
aad
adc
xor
or
xchg
xchg
xor
xor
insb
mov
adc
lock
xchg
ja
pop
ror
test
sbb
frstor
in
dec
test
jle
mov
cmp
inc
add
cmc
es
mov
pop
push
add
push
add
into
fwait
js
dec
push
add
scas
mov
fldcw
jge
imul
add
ret
sbb
andl
dec
push
aaa
cmp
jg
lock
dec
or
subb
pop
xor
xchg
leave
and
mov
subl
or
pop
mov
xchg
cli
mov
jge
xor
mov
jno,pt
xchg
mov
mov
pop
out
add
inc
inc
cmp
inc
test
or
sbb
cmp
pop
subb
ret
scas
loope
xchg
push
fsubl
dec
outsb
dec
adc
push
movsb
sti
nop
repnz
pop
lods
pop
mov
jae
loope
enter
sub
mov
sti
add
mov
xor
inc
fistpl
in
pop
sub
inc
cmp
mov
lret
and
cmp
dec
sahf
xchg
jno
xchg
stc
adc
or
cmp
addr16
mov
sbb
or
dec
imul
inc
push
pop
imul
nop
mov
pop
lret
xchg
and
push
rcl
testl
rorb
insl
out
adc
jno
inc
sti
push
xor
xor
fwait
gs
add
ja
xor
jnp
pop
in
in
adc
dec
adc
rcr
and
xchg
xchg
push
faddp
int
push
jno
ljmp
jbe
das
loopne
inc
mov
data16
in
sub
sub
cld
mov
daa
mov
test
std
xchg
push
daa
xor
mov
push
mov
xor
mov
and
out
jl
dec
mov
cltd
sub
mov
out
xchg
xor
stos
or
adc
add
xor
in
imul
push
data16
xchg
mov
xchg
push
fs
fnstsw
incb
imul
pop
xchg
ljmp
fsubrp
das
cmp
sub
in
in
add
adc
fwait
add
repnz
mov
pop
jne
adc
ret
push
push
jns
mov
dec
push
test
mov
inc
xor
adcl
mov
jl
into
jmp
inc
adc
pop
outsl
sbb
daa
and
sub
cmp
push
cwtl
sarb
lods
mov
cltd
iret
mov
jl
pop
adc
lcall
jne
add
cmp
inc
inc
dec
in
stos
sbb
xchg
mov
jmp
mov
jb
add
into
inc
xchg
and
add
inc
add
sbb
imul
sbb
mov
subb
xchg
sti
imul
cs
add
notl
xor
lods
xor
inc
jmp
pop
fldcw
stc
dec
pop
testl
fisubl
filds
fsubrs
dec
pushf
les
jnp
insb
cmp
mov
ret
out
pop
xor
pusha
dec
xor
les
aas
ss
scas
out
mov
push
dec
call
int
adc
scas
jmp
lret
push
mov
fsubr
mov
daa
xor
into
ret
add
out
stos
pop
mov
cltd
fsubs
lds
sub
cli
mov
out
adc
adc
lahf
icebp
cmp
jmp
popf
add
fidivl
dec
jmp
jl
xor
dec
jne
cmp
leave
bnd
jg
or
lods
fcmovnb
xor
sbb
jge
je
ret
pop
mov
sti
sbb
gs
cmpsl
orb
mov
push
push
mov
pop
daa
movsl
cmpsb
add
jne
jno
mov
xor
leave
cs
repz
xchg
mov
or
sti
jae
test
and
sarl
cmc
jge
data16
or
testb
adc
jbe
mov
jae
xor
icebp
aas
dec
pop
push
pop
add
dec
inc
pop
mov
sub
pop
mov
and
mov
or
dec
jmp
bound
push
fcomps
sarl
cmc
adc
insb
nop
cmc
outsb
ss
sub
call
data16
cmp
shrb
sbb
enter
or
loopne
jnp
push
enter
xor
inc
inc
lcall
mov
adc
shll
pop
outsb
sub
xchg
mov
lds
cli
pop
insl
cs
icebp
rorb
jnp
dec
dec
loopne
cltd
xor
and
repz
push
adc
jl
insl
cmp
push
scas
add
lock
push
loope
mov
inc
jbe
decb
out
adc
xor
lods
inc
testb
dec
repnz
ret
ja
push
stos
cs
jnp
xchg
loop
and
lods
or
inc
ficompl
xchg
enter
push
push
jo
push
clc
mov
add
mov
or
mov
bound
repnz
jo
mov
fldcw
jle
out
jae
jmp
shr
clc
cmpsb
mov
fsubrl
sub
sti
add
xor
xchg
inc
imul
jmp
loope
cmp
idivl
jg
sbb
aad
xchg
or
pushf
dec
enter
sbb
push
pusha
sub
cmp
lahf
lods
out
data16
call
cmp
dec
subb
mov
mov
mov
mov
push
pop
aaa
jo
dec
fimuls
out
arpl
mov
fs
sub
ret
mov
mov
or
imul
in
int3
pop
adc
or
jmp
cmp
dec
pop
and
cmp
sti
sbb
inc
fdecstp
xor
jno
int
popf
fs
fsubr
roll
sub
test
push
xchg
adc
mov
push
aas
push
lahf
aaa
lret
mov
clc
movsb
in
enter
pop
dec
inc
fsubl
push
out
pop
std
jle
not
lock
dec
icebp
xor
aam
add
into
lret
out
fimuls
loopne
fisttpll
push
in
addr16
stc
sahf
or
ret
push
or
pop
cmp
inc
and
daa
in
or
clc
cmp
pop
lahf
cmp
jns
idivl
pop
inc
pop
dec
das
int3
sbb
aas
fimuls
pushf
fcoml
test
mov
add
fdivrl
cmp
lods
leave
xchg
xchg
adc
push
xchg
scas
xor
or
pop
xor
imul
shlb
ljmp
stc
int3
fucom
jns
fildll
and
adc
lds
fildl
js
int
nop
scas
cmpl
addb
xor
and
cmp
mov
jo
cli
xchg
jns
out
jnp
mov
shlb
ljmp
jb
repnz
imul
in
dec
movsb
lcall
fidivrl
std
add
jge
or
lds
repnz
xor
shl
jb
xorb
fldenv
sub
mov
movsl
xor
lods
and
sub
and
ret
mov
ja
iret
mov
mov
jecxz
repnz
ret
xchg
inc
jp
ret
jnp
call
aas
jno
enter
inc
out
dec
or
add
fcoms
iret
leave
mov
mov
in
mov
push
leave
out
sub
sbb
push
and
shll
add
int3
push
jnp
push
test
movb
scas
shlb
pop
sbb
mov
enter
out
out
repnz
call
jbe
sbb
aaa
push
mov
mulb
jnp
testl
ret
adc
sub
cmp
push
std
fsub
leave
cmp
in
dec
jno
jae
fcoms
fadds
push
or
sbb
sub
sbb
jae
movsl
rcrb
or
dec
sahf
inc
insb
testl
cwtl
mov
push
lock
ret
fisttps
cs
jne
sahf
xlat
and
push
and
add
push
dec
cmp
push
push
cmp
or
das
jecxz
inc
addr16
jae
aaa
or
sbb
jns
push
fsubl
scas
and
push
lret
mov
and
pop
or
lret
mov
or
mov
sbb
xor
or
pop
xor
dec
in
and
dec
test
sub
cld
adc
add
or
jbe
push
xchg
pop
outsl
lock
cmp
mov
ret
push
loopne
push
inc
scas
loopne
out
repnz
xlat
jge
add
js
and
jp
fsubrl
rclb
inc
sub
or
mov
clc
xor
mov
outsl
sti
outsb
mov
jo
mov
lret
sti
fldl
imul
movsb
jne
or
leave
adc
les
in
pop
ljmp
mov
mov
addr16
lock
push
lret
mov
lcall
shll
scas
stos
clc
adc
addl
insb
mov
sub
lcall
enter
stc
aaa
inc
dec
xchg
push
js
jnp
push
in
sub
stc
popf
mov
cmp
rcrb
lret
cmp
cmp
dec
hlt
das
cmpsl
ljmp
push
enter
dec
adc
dec
push
jns
dec
in
ljmp
dec
push
sub
pop
icebp
cmp
and
repnz
mov
sub
and
dec
test
lcall
adc
adc
ja
xchg
movsb
cmp
ficompl
jle
xchg
add
push
adc
or
cmp
push
mov
mov
jecxz
jns
xor
adc
jl
mov
dec
in
push
jbe
add
pop
out
mov
ret
ds
popa
cs
sbb
stc
sbb
cs
adc
mov
mov
movsl
addb
dec
mov
ret
movsb
addr16
adcb
xchg
test
icebp
sbb
enter
jbe
xchg
push
pop
ret
fstpt
and
stos
cmpsb
pop
fistl
les
sbb
ret
scas
out
push
mov
movsl
nop
out
stc
cmpl
loope
add
in
iret
mov
mov
adc
std
mov
lods
ds
insb
jbe
adc
repz
les
ljmp
aam
inc
add
mov
add
mov
nop
mov
fdivp
cmpsb
enter
mov
outsb
mov
mov
xor
lea
mov
ss
loope
fnstsw
bound
jo
cltd
sub
xor
loopne
les
lods
call
adc
and
lods
aas
adc
push
mov
mov
sub
mov
fwait
imul
push
adc
ljmp
cli
std
pop
cmp
sti
and
pop
cmp
pop
je
rcr
jbe
dec
inc
lret
dec
cmp
xchg
pop
ror
ds
push
lret
add
mov
jl
pusha
insb
jns
and
ja
ds
shrl
cmp
push
adc
xor
ja
dec
cli
les
xlat
repnz
xchg
cld
jmp
sub
push
dec
fisubl
out
sbb
xor
mov
xchg
div
out
pop
jl
xor
movsb
and
mov
in
inc
repz
jle
adc
das
mov
or
mov
test
fwait
and
add
aam
cld
and
mov
ret
sti
sub
inc
scas
pop
push
dec
mov
cmp
notl
and
popa
sub
clc
xor
adc
scas
sub
mov
sub
int3
popf
dec
scas
or
out
xchg
mov
cmp
or
or
cli
jle
fwait
sub
mov
cmp
cmp
jmp
lods
inc
and
xor
sbb
in
pop
dec
and
jo
jno
cmp
imul
insb
outsb
stos
cmpl
adc
add
mov
test
test
pop
loopne
xchg
inc
and
dec
repnz
es
out
pop
loop
pop
cli
sbb
sub
mov
xchg
pop
mov
xchg
push
adc
lahf
outsl
inc
lds
outsb
out
shrb
dec
xor
sarl
sub
sahf
aaa
adc
dec
xor
or
andl
loope
and
and
ficoml
roll
inc
lods
adc
psrlw
xor
jge
sti
out
dec
test
sbb
int3
insl
sbb
mov
jecxz
ja
mov
add
push
dec
cmpsb
insb
push
test
sub
xor
sti
xchg
lcall
pop
in
sbb
and
mov
out
mov
add
and
imul
push
add
mov
adc
xchg
loopne
lods
and
sub
aad
repz
push
mov
repnz
sub
push
inc
dec
xchg
mov
testl
outsb
pop
cmp
lret
rcrb
std
repz
ret
stos
sahf
in
mov
call
or
rcrb
out
mov
aad
fs
jnp
addl
test
sub
jp
in
popf
cmp
ljmp
cmp
sub
sbb
out
push
xchg
idivb
mov
repz
scas
jne
dec
push
add
mov
ljmp
and
lock
lahf
xchg
fs
mov
sarl
mov
xor
dec
into
test
hlt
mov
rcrb
adc
jge
addr16
fcoml
push
imul
pop
call
lods
mov
stc
mov
mov
repz
xor
pusha
cmpsb
mov
or
out
push
add
stc
xchg
ret
xor
and
sub
inc
popf
mov
lahf
test
mov
sbb
cmp
xchg
pop
mov
xor
outsb
fs
repz
xchg
ror
movsl
outsl
push
jno
mov
sub
insl
jle
sbb
or
nop
push
cli
inc
dec
sbb
mov
push
test
or
incl
shlb
out
test
iret
sbb
cmp
stc
out
or
jp
push
lcall
add
mov
fcoml
and
dec
sub
sub
dec
fs
adc
gs
sbb
push
or
mov
dec
dec
xor
cld
or
dec
xchg
mov
in
rolb
nop
dec
es
mov
aam
adc
orb
test
jns
mov
jmp
aad
adc
push
test
inc
push
js
push
mov
cmp
mov
xchg
loopne
das
or
pushf
sbb
dec
cmp
cmp
cld
ret
xor
fiaddl
test
psubsw
push
cmpb
pop
lods
std
aaa
cmp
out
mov
lahf
sub
pusha
xor
mov
inc
mov
push
popl
iret
push
or
add
popa
sub
pop
mov
cld
cmp
and
cld
dec
rcl
sub
fildll
and
or
stos
push
lds
lods
cmpb
xlat
push
cmp
jecxz
jns
xchg
arpl
movsb
mov
ss
xor
enter
jne
pop
jb
jg
fistpll
cmpsb
xchg
mov
adc
int
jmp
push
movsb
mov
and
cmp
dec
and
and
in
mov
inc
cmc
pop
adcl
cmp
mov
test
inc
orb
pop
in
dec
les
pop
fsubrl
lock
xchg
or
xchg
add
mov
out
add
clc
pop
cmp
jno
aad
xor
cld
ret
adc
aam
xchg
stc
add
sub
push
adc
or
cbtw
push
sbb
mov
cmp
xchg
bound
faddl
sub
clc
sbb
frstor
sbb
push
mov
enter
push
push
push
pop
sbb
sbbl
sbb
adc
push
cmpsb
add
mov
sti
jns
add
incb
dec
scas
loopne
cmp
insb
ss
inc
push
fnstenv
lds
mov
add
xchg
pop
jl
dec
xchg
mov
jne
and
jae
ljmp
lods
popf
cmp
sub
push
xchg
repz
push
sub
cmp
mov
lods
xchg
xor
pop
sub
mov
inc
sub
jl
xchg
inc
loope
mov
dec
ljmp
xchg
fnstcw
mov
insl
orb
ds
adc
fwait
pushf
jbe
and
pusha
pop
in
dec
mov
add
pop
mov
jl
adc
mov
mov
mov
lea
fnsave
jl
nop
cmpsl
and
scas
push
je
mov
jp
inc
xchg
lea
push
or
and
mov
addl
test
pop
sbb
clc
cmp
lds
or
xchg
sbb
popa
andb
data16
jmp
cmc
or
shr
stos
inc
sti
pop
and
jl
mov
mov
sbb
xlat
lahf
stos
mov
xor
ja
sbb
push
cmp
and
loop
je
mov
xchg
xchg
pushf
add
sti
mov
in
ja
mov
dec
in
or
cwtl
out
subl
in
fnstsw
loopne
cvtpi2ps
ja
add
stos
lret
leave
fidivrs
xor
neg
daa
ret
data16
mov
mov
or
jmp
mov
add
dec
dec
addr16
sbb
jecxz
jge
pusha
mov
loop
orb
sub
jnp
fsub
xchg
sub
stos
bound
xor
adc
dec
cwtl
pop
push
pop
mov
stc
mov
clc
lds
les
sbb
rcl
and
rorl
inc
inc
cli
in
je
roll
outsl
in
push
jmp
cs
adc
push
sbb
jnp
lds
push
fidivl
jo
scas
ljmp
pop
mov
lods
mov
out
pop
popf
push
pop
shl
insb
dec
ss
jmp
fcompl
adc
sub
hlt
mov
int3
inc
mov
repnz
lahf
adc
cmp
cmpsb
and
fwait
in
leave
popa
pop
mov
cli
cwtl
orl
cmp
push
fcmovbe
add
cmpsl
fists
inc
xor
jmp
sbb
fdivr
popf
jns
cmpb
inc
mov
js
scas
xor
out
mov
iret
mov
adcl
mov
mov
notb
add
addr16
jb
mov
sub
les
in
mov
sub
mov
adcl
pop
dec
fcmove
add
icebp
mov
jns
and
mov
xor
cmp
pop
outsb
add
enter
add
push
adc
and
fs
jne
xchg
mov
pop
lods
cmpsb
add
mov
push
cwtl
add
dec
rorl
push
sub
cmp
push
cmp
pusha
push
ja
nop
inc
js
and
fsubl
aaa
adc
or
gs
insb
cli
mov
inc
mov
push
lods
enter
fcoml
enter
push
adc
pop
int
adc
mov
popf
data16
aas
in
loop
insb
xor
and
inc
out
pop
adc
iret
and
adc
dec
out
or
pushf
std
call
inc
add
sbb
pop
jl
add
stos
arpl
push
mov
test
inc
test
adcl
out
stos
pop
push
xor
xlat
jo
dec
xchg
inc
mov
jecxz
daa
movsl
push
add
pop
jno
jns
in
in
cmc
in
add
ret
jae
lods
push
pusha
mov
jp
mov
call
movhps
mov
cmp
xchg
shld
scas
fidivl
call
stc
xlat
jge
and
jmp
and
mov
mov
jecxz
stos
addb
ds
mov
mov
mov
push
inc
shrb
data16
mov
fs
or
sbb
pop
jg
cld
inc
xor
xchg
lret
inc
out
std
jp
aas
or
scas
pop
call
sbb
imul
cmpsl
int3
repnz
scas
cmpsb
and
mov
arpl
test
insl
test
dec
add
out
mov
movsl
jl
loop
outsb
adc
push
jg
inc
adc
fadd
das
cld
mov
test
or
jne
rclb
mov
sbb
jae
mov
in
sub
add
pushf
dec
xchg
jo
in
xchg
ds
data16
insw
mov
cli
cmp
pop
pop
xlat
stos
adc
filds
lret
push
and
pop
dec
push
ss
inc
sbb
les
je
jbe
hlt
jmp
les
mov
sbb
sbb
sub
pop
jecxz
mov
cmp
lods
nop
mov
sub
out
add
repnz
xchg
dec
jne
cld
mov
mov
les
pop
lret
jb
mov
or
mov
movsb
xorl
fistpl
cmp
push
push
xor
dec
cs
jmp
arpl
and
or
cmp
xor
sbb
je
mov
xchg
test
pmaxsw
dec
ja
pushf
imul
out
inc
lods
cmp
xchg
mov
mov
stos
out
lea
ret
jb
fisubrs
dec
dec
enter
add
mov
insl
pop
jecxz
das
pop
mov
cmp
cmp
out
pop
nop
sahf
in
pusha
mov
mov
dec
sub
icebp
fldl
loope
cld
inc
jo
cli
fcoml
mov
sti
testb
insb
imul
adc
mov
push
insb
lret
daa
mov
lahf
std
mov
in
jle
stos
mov
dec
mov
mov
pushf
xchg
insl
leave
iret
push
jno
push
lahf
mov
movsb
jno
ret
mov
shlb
add
fs
iret
cld
cmc
or
std
mov
cltd
cmp
dec
addr16
fcmovnb
dec
inc
lock
mov
dec
ds
push
loop
pop
dec
add
into
dec
xlat
adc
push
insb
addl
fucomi
jae
and
or
std
xchg
pushf
int3
les
xor
inc
ja
loop
xchg
mov
lret
rclb
pop
add
cmp
fs
or
scas
test
movsb
repz
xor
or
out
aaa
lods
xchg
scas
cltd
shrb
nop
in
jae
and
adc
inc
ret
mov
dec
pop
std
sub
add
ds
pop
jb
sbb
and
out
dec
fimuls
xorl
aad
xlat
mov
pushf
fisubs
cwtl
dec
iret
mov
lods
aam
test
mov
xlat
into
loopne
dec
es
push
fsubl
xchg
mov
cli
mov
lahf
mov
out
cmp
inc
pop
inc
aam
dec
and
dec
test
push
add
dec
lods
lcall
ljmp
add
addr16
popa
mov
xchg
mov
jg
dec
and
notl
in
cmp
ret
out
pusha
xor
adc
sti
cmpps
negl
mov
mov
je
loope
jne
incl
cmp
and
xchg
into
popa
inc
je
dec
orb
cmp
pop
xchg
pushf
pop
stc
adc
pop
mov
cmpb
push
in
pop
dec
in
inc
xchg
test
or
mov
xchg
ret
adc
add
je
mov
ss
das
or
inc
mov
or
xor
out
push
lret
sahf
data16
mov
push
xor
outsb
andb
lret
popf
dec
sbb
int3
outsl
jb
jns
sub
jae
out
cmpsl
out
add
aad
adc
jl
or
jo
adc
xchg
cmp
jmp
dec
inc
jp
and
or
pop
inc
xchg
jne
add
cmpsl
push
fxch
jo
mov
jl
shrd
rol
inc
incl
or
push
push
outsl
dec
push
inc
stos
std
jo
es
dec
loopne
push
div
lods
jl
into
sub
inc
jne
adc
mov
push
xchg
iret
mov
add
cmp
jo
ss
mov
out
stc
ds
inc
push
push
icebp
pushf
add
lret
pop
mov
cs
and
sub
test
add
std
out
out
int
sbb
gs
cmp
sbb
shll
movsb
sbb
clc
and
mov
adc
rorb
ljmp
jmp
add
and
jmp
outsl
pop
je
sub
rolb
mov
mov
pop
push
dec
cmpl
and
jae
or
out
cmp
push
add
ret
stc
leave
rorl
cmp
jecxz
mov
filds
mov
andb
push
in
xlat
pusha
out
dec
mov
adc
pop
ds
xchg
push
lahf
enter
and
sbb
movsl
cmp
ds
int
cld
pop
hlt
or
rcrl
mov
xchg
sub
sbb
add
mov
arpl
loope
jl
fwait
sahf
push
dec
pop
cmpb
pusha
mov
loope
adcl
mov
in
xor
inc
xchg
dec
adc
inc
stos
mov
inc
loop
arpl
fiaddl
xor
sbb
mov
add
cmp
add
pop
push
das
popf
inc
fldl
pop
pop
fldl
repnz
sub
pop
inc
adc
fcmovne
jle
outsb
ljmp
and
rcr
push
mov
mov
or
sbbb
push
in
leave
call
mov
gs
or
lock
cmc
dec
fnsave
sub
in
cmp
push
cmpsb
addr16
sbb
out
aas
std
mov
pop
inc
mov
hlt
mov
jnp
dec
mov
loope
mov
sbb
xor
sar
and
mov
push
mov
sbb
or
out
dec
popf
inc
aam
pminsw
movsl
pop
pop
jnp
sbb
mov
push
jp
popa
call
jl
fcompl
sub
fdivs
adc
fwait
lahf
cmp
sub
mov
pop
and
lahf
mov
test
jle
or
adc
fsubr
push
sub
push
stc
insb
add
test
add
push
sub
mov
mov
mov
addb
aas
cmp
add
js
fcom
push
hlt
orb
jp
and
lds
jg
adc
orb
lds
int
icebp
xchg
mov
mov
sub
in
add
and
test
js
leave
sbb
ljmp
mov
mov
add
pushf
dec
pusha
sbb
or
xchg
push
pop
push
and
mov
push
leave
sahf
imul
shlb
jbe
jno
or
xor
push
xor
lea
hlt
jp
xchg
int
insl
or
cwtl
cmpsl
cmc
das
mov
add
mov
push
adc
test
mov
pop
fsubs
push
add
jnp
sub
inc
or
ja
arpl
sti
sub
push
repz
xchg
cmpsl
dec
mov
enter
adc
xor
inc
push
cmpsb
aaa
cmpsl
mov
ss
dec
inc
loopne
push
or
xchg
stos
jg
jle
jae
pop
std
mov
fisubl
pushf
retw
xor
lahf
push
xor
aam
jg
dec
pop
lret
inc
arpl
loope
and
popa
jecxz
stc
cld
pop
and
mov
pop
jno
sbb
inc
or
loopne
and
notl
fdivrs
lcall
js
xor
icebp
ret
movnti
add
add
xchg
dec
push
fdivl
mov
xor
or
mov
out
fidivl
hlt
fwait
dec
jne
mov
arpl
cld
nop
push
ds
dec
sub
push
push
inc
cmp
je
cli
ds
jne
fwait
adc
xor
fucom
in
cmc
movsl
mov
test
and
out
mov
popf
sbb
adc
loopne
dec
adc
shrb
dec
cmpsl
enter
mov
fisttpll
out
aad
adc
inc
push
dec
mov
je
add
jbe
int3
jo
ja
cltd
pop
pop
int
sbb
fcoml
lds
inc
sub
jp
lret
jo
dec
enter
sub
fwait
shlb
gs
pop
dec
pop
out
out
push
sbb
xchg
mov
xchg
sub
test
or
pop
stos
mov
aas
jb
gs
mov
adc
adc
cmpsb
mov
pop
das
int3
push
out
std
and
lock
shll
cmp
outsl
xor
cli
and
iret
mov
call
jnp
and
mov
orl
in
fs
aaa
push
lret
stos
dec
mov
divl
mov
pop
das
cli
movsb
imul
add
push
in
dec
pop
xchg
pop
movsb
in
cmpsl
push
cs
stc
jbe
dec
jae
insb
in
testl
ds
ret
js
mov
shl
push
int3
inc
pop
mov
xchg
ret
fisttpll
and
pop
sub
xchg
xor
and
hlt
insb
mov
cmp
mov
pop
test
mov
dec
mov
mov
imul
or
cmp
stos
into
mov
cmp
pushf
aaa
mov
ja
push
sub
push
daa
inc
sbb
ljmp
adcl
inc
fnsave
or
fdivrs
pop
push
cld
jmp
dec
jecxz
lret
pop
js
pop
push
and
popw
inc
test
mov
out
inc
movsl
xchg
cmc
sbb
out
adc
leave
aam
sub
sbb
in
xlat
sub
xchg
dec
xor
into
jo
jmp
or
jbe
xor
pop
gs
push
lock
sahf
jns
stos
repnz
aam
rcrb
jo
jns
das
jnp
outsl
out
dec
xor
sahf
int
lds
push
mov
aad
dec
inc
fdivl
icebp
jle
or
bound
pop
idiv
xor
cmpsb
xchg
jns,pn
dec
lock
movb
add
or
mov
lret
or
or
pop
fstps
mov
mov
shr
test
pushf
xchg
dec
cmp
jp
inc
ret
cmp
jmp
data16
push
cmc
dec
es
mov
loopne,pn
dec
daa
loopne
loope
roll
sub
aaa
jae
stos
or
pop
jg
push
mov
mov
jg
scas
cmp
out
int3
mov
adc
sti
int3
aas
adc
cs
jne
lahf
pushf
push
jp
add
in
icebp
push
push
lahf
add
xor
out
xchg
adc
and
test
jbe
rol
sti
xchg
xchg
out
imul
movsl
ja
sub
cwtl
cltd
incb
cmc
enter
and
dec
jg
and
rcrl
xchg
stc
jb
ret
jecxz
pop
fldt
cmpsl
daa
push
xchg
orb
xchg
mov
sbb
ret
adc
or
enter
or
pusha
mov
sahf
adc
stos
nop
cmpsl
aam
imul
mov
ja
cmp
and
aad
xchg
mov
in
or
in
adc
cmp
int3
aaa
lret
adc
sti
and
lahf
sbb
and
mov
dec
call
fdivp
push
pop
and
daa
test
loopne
cmp
fsubrs
xor
mov
sub
cmp
mov
sub
mov
add
test
decb
inc
cld
xchg
aad
aas
subb
out
sub
rorl
les
ja
mov
inc
push
pop
push
std
inc
push
dec
jmp
ror
mov
push
and
out
and
and
dec
fidivl
into
dec
and
adcb
xchg
pop
jp
test
das
sbb
and
push
cli
fs
jle
xchg
in
and
clc
fdivrp
clc
pop
in
jge
inc
ror
add
ljmp
mov
orb
and
jecxz
mov
or
xor
push
jge
mov
push
icebp
adc
cmp
pop
xor
or
in
cmpsb
lock
and
fidivrl
mov
hlt
popa
inc
in
dec
icebp
dec
mov
mov
das
xchg
out
mov
push
dec
jle
ljmp
inc
and
imull
xchg
jle
insb
int3
mov
jge
jae
mov
or
push
or
addr16
or
mov
loop
xor
adc
pushf
scas
loope
lahf
sub
and
mov
fsubl
sub
push
stc
or
clc
inc
add
sub
xor
ds
out
and
shrl
jae
push
lock
and
mov
int
test
push
aaa
addr16
add
mov
negb
ds
inc
jne,pn
pop
push
pushf
clc
inc
fdivp
ss
in
out
in
cli
adc
lahf
mov
scas
insl
js
push
adc
mov
inc
cwtl
adc
add
imul
push
movups
call
icebp
rcrb
mov
push
movsb
scas
jo
gs
inc
cmp
push
xchg
aaa
sub
and
push
or
add
mov
mov
and
into
lahf
jp
fisubl
lret
xlat
dec
imul
dec
lret
inc
loop
mov
cmpb
idivl
xchg
pop
stos
gs
cmc
lret
int
je
inc
sub
les
jae
std
jae
je
je
push
and
push
ds
inc
cmpsb
incl
js
add
fisubl
sarl
lods
jg
stos
mov
adc
out
add
inc
fiaddl
bnd
rol
mov
aam
faddp
jno
les
lret
pop
push
and
mov
adc
sbb
sub
cmc
loopne
scas
into
adc
jnp
test
jae
inc
and
xchg
loopne
lds
xor
clc
xchg
cmc
aam
loop
in
repnz
cmp
adc
and
imul
cmc
xor
add
inc
clc
adc
push
clc
cmc
fs
jb
je
inc
cmc
test
push
cmc
xchg
clc
mov
divl
arpl
jae
inc
push
mov
je
jnp
xor
and
rcl
rclb
loopne
lds
lock
and
aaa
cld
daa
xor
aaa
add
inc
adc
mov
ds
or
fisubrl
into
sub
sbb
mov
cmp
sbb
pop
jp,pt
imul
mov
mov
stos
mov
stos
mov
lret
ds
or
fisubrl
into
sub
sbb
imul
sub
sbb
dec
into
push
pop
into
jp
insb
into
dec
sub
sub
mov
sub
ljmp
ret
sti
xchg
ficompl
mov
aas
sbb
cmp
sub
or
cmp
sbb
dec
repnz
pop
bnd
insb
repnz
iret
jl
pop
iret
mov
stos
iret
pushf
repnz
iret
mov
repnz
out
lret
loop
ret
or
sub
sbb
in
sub
or
cmp
sbb
dec
repnz
pop
bnd
insb
repnz
iret
jl
pop
iret
mov
stos
iret
pushf
repnz
iret
mov
repnz
out
lret
loop
ret
or
sub
sbb
cmp
sub
or
cmp
sbb
dec
sti
push
pop
sti
jp
insb
sti
dec
idivb
testb
imulb
lcall
sti
cli
imul
sti
lret
or
sub
xor
cmp
mov
cs
aaa
pop
das
imul
das
jnp
jle
mov
outsb
das
fwait
aaa
push
das
stos
aaa
push
das
mov
aaa
cs
fisubrs
jmp
into
das
sti
sar
or
out
jge
xchg
jle
xchg
mov
imul
mov
fwait
xchg
mov
mov
xchg
mov
jmp
into
mov
or
xchg
sbb
lret
add
insl
dec
jo
insl
pop
jo
outsb
imul
jnp
pusha
bound
in
pop
mov
mov
jp
out
fdivs
fnsave
push
int
clc
push
cmc
inc
clc
push
cmc
dec
clc
push
cmc
push
clc
outsb
cmc
pop
clc
data16
fs
jle
adc
into
mov
cmp
xchg
not
test
iret
push
out
adc
xor
xorb
sub
rolb
cmpsl
xchg
faddl
ret
mov
or
xchg
inc
mov
jg
pop
lret
loop
das
jl
mov
jecxz
ret
and
sub
xor
loopne
std
pop
jmp
mov
std
leave
jmp
jno
dec
das
jne
jb
jns
jbe
jge
js
dec
lods
hlt
das
mov
aaa
es
shll
shrb
fst
xchg
jecxz
mov
xor
addr16
jno
xchg
movsb
sbb
xchg
mov
insb
mov
mov
push
cmp
gs
inc
fdivl
jne
jge
popa
in
mov
push
xchg
repnz
mov
pop
add
jo
outsb
lds
outsb
shlb
outsb
loop
movl
movsl
femms
movsl
sbb
inc
out
lods
push
out
jns
sub
aam
fwait
sbb
repnz
shl
iret
fdiv
loopne
ljmp
mov
fnstenv
jne
jle
popa
jmp
xchg
std
sbb
mov
std
sub
sbb
pop
cwtl
mov
lea
mov
aad
in
loopne
sbb
push
xor
into
dec
sub
jno
dec
mov
xchg
sbb
dec
push
push
lea
xor
xchg
jmp
cltd
pop
js
jle
lods
popf
xor
loope
std
jmp
jno
dec
es
jb
jns
jbe
jge
js
jge
js
sbb
mov
xchg
mov
mov
cmp
inc
push
xchg
jge
pop
ret
in
rorl
fsubs
jo
pop
int
and
aad
sbb
mov
pop
ret
rorl
int
dec
push
dec
out
or
jns
jbe
pop
mov
mov
pop
mov
mov
movsl
pop
or
and
insl
nop
mov
es
and
std
sub
jb
js
stos
insl
js
dec
sahf
adc
ja
cmp
pop
push
jp
push
imul
addr16
aaa
and
scas
dec
push
jns
mov
jecxz
ret
pop
lret
repnz
sti
roll
sub
jnp
js
jge
js
jge
js
jge
push
jnp
aaa
pop
das
ror
std
sub
inc
lds
xchg
mov
mov
add
jle
mov
sbbl
pop
add
push
and
pop
ficompl
and
out
xor
test
pop
cli
outsb
call
je
jbe
mov
cli
loop
pop
pop
xchg
mov
xorl
mov
fwait
not
or
nop
rcrl
cmp
mov
in
popa
push
in
mov
orb
cmp
xor
jae
jo
dec
xchg
into
stc
sub
lea
in
gs
push
jmp
mov
cmp
pop
fs
cmp
xchg
hlt
add
scas
popf
xor
adc
xor
je
dec
stc
xor
orb
cs
xor
testl
pusha
dec
cmpb
test
fucom
fidivs
xchg
jle
push
jb
outsb
shlb
dec
lea
xchg
cmp
in
cmp
push
mov
lds
pop
adc
ficoms
cmp
lcall
roll
or
fisttpll
jg
cmp
addr16
mov
mov
orl
pop
jne
and
imul
lret
xor
sub
pop
cmp
xchg
push
inc
enter
add
fcomps
xchg
and
cltd
shrl
out
sbb
shl
in
pop
es
push
gs
in
mov
and
mov
lret
xor
pop
lods
sub
push
pop
mov
or
xchg
jg
xor
mov
sub
mov
std
scas
mov
clc
daa
add
and
and
mov
imul
jbe
sahf
push
cmp
adc
les
pop
xchg
push
fdivl
and
lea
rcll
std
fistl
fisubs
out
nop
into
clc
aaa
cmp
sub
idiv
mov
fnsave
pop
cmp
mov
cmp
pushf
and
sbb
mov
jb
jns
xchg
icebp
aaa
les
adc
sbb
jne
mov
sub
ljmp
mov
cmp
inc
sbb
push
xchg
jo
outsb
les
outsb
cld
push
out
jno
mov
push
jb
outsb
lods
jo
outsb
fbstp
cmp
clc
dec
fs
push
cmpsb
jo
outsb
lret
outsb
std
fucomi
sub
mov
dec
rcll
inc
add
std
jne
test
cmp
sar
jmp
xchg
fmull
jne
jb
jns
dec
add
imul
lcall
pop
scas
xchg
pop
movsb
dec
inc
ja
push
outsb
call
push
push
or
mov
sbb
repnz
sarl
out
lret
cmp
inc
mov
out
movsb
mov
mov
jbe
jnp
xchg
lret
sub
das
mov
push
add
aaa
repnz
cmc
jno
cmp
xchg
sub
jge
inc
xor
sub
arpl
popa
loopne
pop
xor
rolb
or
aam
pop
adcl
or
test
push
cmp
mov
sbb
xchg
mov
sub
xor
mov
or
adcl
ja
ds
adc
xchg
hlt
mov
ret
out
and
cmp
sub
fistpll
dec
xchg
stos
fldenv
mov
lret
xchg
arpl
loopne
fucomip
outsb
hlt
add
das
jne
and
add
or
push
nop
jbe
jge
cmpsl
movb
out
and
pop
movsl
xchg
pop
mov
sbb
mov
rcl
clc
cld
repnz
xor
js,pn
push
xchg
adc
mov
and
push
xchg
push
movsl
add
push
pusha
repnz
iret
xor
int3
lahf
outsl
fsubrl
mov
and
pop
xchg
sti
mov
neg
sti
lds
pop
cmpsb
dec
and
cmpsb
xchg
and
out
ret
fucomip
dec
or
sbb
popa
mov
fwait
repz
out
jb
xchg
out
in
pop
mov
mov
fbstp
xchg
dec
cmpsb
call
lret
push
and
add
bound
inc
sbb
dec
mov
aad
loopne
mov
movsl
repnz
in
call
cmp
mov
and
xlat
js
xchg
xchg
push
adc
lahf
dec
or
lret
sub
mov
andb
orb
or
cmp
test
push
push
jne
ja
push
sub
enter
cmp
xchg
test
and
cmc
inc
fucom
out
mov
test
or
pop
xchg
xor
test
negl
jmp
into
jno
dec
aas
jne
movsb
push
push
pop
outsl
jg
xorl
xlat
mov
enter
daa
inc
mov
cmc
push
out
sbb
mov
inc
pop
fsubrl
scas
push
xlat
mov
xchg
in
cs
lea
sarl
stos
inc
les
std
das
or
jb
jns
jbe
jge
js
jge
movsb
int3
or
and
shlb
aad
loopne
scas
lds
sti
mul
adc
xchg
shrl
out
lods
fistpl
jl
cwtl
pop
dec
in
mov
shr
filds
push
cli
mov
or
and
mov
ds
sahf
out
lea
sbb
mov
xchg
jg
sarl
ficomps
mov
test
add
mov
mov
dec
and
inc
mov
or
add
xor
shll
jo
mov
int3
and
stc
push
jp
pop
xor
je
addb
xchg
dec
rcrb
xor
add
loopne
add
std
sbb
insb
xor
mov
stc
pop
in
insb
test
cwtl
xor
shll
add
sbb
mov
enter
fdivr
fiaddl
xor
test
cmp
xchg
sti
cmp
sbb
mov
stos
dec
out
ljmp
push
dec
push
movsb
repnz
in
div
pushf
test
mov
sub
sbb
int
sub
and
imul
call
pop
cmp
xor
orl
and
push
cmc
loop
outsl
xor
mov
jnp
test
imul
ljmp
loope
out
mov
mov
xchg
call
push
ds
mov
div
out
cmc
xlat
std
xchg
jmp
pop
adc
xchg
imul
popf
cs
and
adc
je
push
push
push
pop
pop
pop
pop
jns
andb
iret
imul
jb
pop
dec
in
xchg
das
xchg
in
sbb
xchg
xlat
aaa
pop
push
and
cmpsl
pushf
int3
iret
idivl
push
push
iret
mov
ss
jecxz
cmp
sub
push
shrl
sbb
daa
sahf
jne
xchg
sbb
icebp
push
iret
cmp
outsl
lods
js
jge
js
jge
js
pop
jl
mov
adc
cmc
mov
mov
inc
mov
xor
mov
jmp
test
nop
not
sti
out
push
pop
adc
mov
sub
pop
jb
sbb
fwait
add
out
pop
into
xor
xor
add
inc
into
push
sub
imul
push
repz
push
cmp
js
add
jnp
add
mov
sub
dec
cmp
jge
insl
into
push
and
jmp
add
jb
es
mov
lock
cmc
ljmp
cltd
dec
sub
icebp
xor
fcomps
xlat
scas
out
cmp
in
enter
daa
push
jmp
lret
pushf
repnz
mov
cwtl
aad
in
sbb
sahf
in
out
cld
sbb
xchg
mov
and
sbb
aad
aam
popa
xlat
fisttpll
in
mov
cli
inc
xor
mov
jae
popa
test
lret
or
cltd
pushf
cmp
test
mov
lahf
lods
mov
nop
orb
xor
mov
fs
dec
outsb
dec
jecxz
sar
cmc
sub
mov
add
sub
mov
add
repnz
insb
xchg
pop
fdivrp
aaa
xor
sub
push
mov
and
outsl
jo
cmp
fstp
push
ret
je
or
xor
push
push
cmp
jp
mov
or
cltd
mov
adc
jle
xchg
shl
and
sub
sub
sub
adc
sub
mov
cmc
jmp
sub
mov
push
jb
imul
js
loopne
jmp
cmp
dec
addr16
dec
sub
cmp
lea
aaa
xor
dec
dec
insb
sub
js
insl
inc
pop
bound
testb
cli
testb
insb
sahf
sbb
mov
xchg
popf
fwait
nop
in
ret
sbb
outsl
scas
inc
test
xor
jno
adc
dec
rorl
pusha
dec
sbb
jl
xchg
xchg
mov
loop
and
faddl
mov
xchg
push
push
dec
aas
push
mov
popa
xor
dec
xchg
xor
mov
sahf
xchg
sub
loope
push
push
and
add
pop
scas
scas
add
test
mov
push
adc
mov
aas
loop
pop
les
mov
sbb
xor
sbb
xchg
sbb
xchg
cmp
addr16
insb
pushf
jo
outsb
das
xchg
push
or
movd
jmp
or
jnp
test
add
insl
and
push
xchg
arpl
cmpsb
ss
aas
dec
fs
shlb
mov
mov
adc
jo
dec
cmp
push
jo
ja
je
jnp
js
jge
pop
jmp
and
jo
dec
aas
mov
insl
cmp
clc
xchg
notl
out
mov
imul
outsb
sub
jmp
add
cmp
dec
cwtl
andl
sbb
pop
sbb
lahf
xchg
daa
in
shl
xlat
in
loopne
in
or
mov
cmpb
stos
lret
push
mov
jmp
movl
sbb
jo
ja
je
jnp
push
scas
push
mov
mov
cs
inc
jbe
cmp
hlt
xor
push
les
ret
sub
pop
leave
mov
lcall
call
ret
jmp
rcll
push
fsub
je
and
incb
lods
fldt
pop
cmpsb
inc
jge
xchg
imul
or
cmp
dec
adc
mov
xchg
movsb
xorl
je
mov
pop
setle
mov
mov
adc
cli
and
add
out
adcb
dec
nop
xchg
pop
repnz
jne
test
cs
push
out
popa
sbb
pushf
pusha
add
dec
dec
gs
mov
dec
stos
mov
test
jp
aaa
adc
test
push
cmp
sub
cmp
adc
sub
push
xchg
fnstenv
aaa
xor
aam
loop
jecxz
lret
cmp
sbb
mov
cs
sahf
mov
jp
mov
jecxz
xor
es
mov
in
push
lcall
or
pop
and
pop
sbb
repnz
iret
fptan
out
repnz
insl
sahf
push
outsb
mov
shlb
sub
xor
adc
pop
sbb
enter
sub
sti
cmc
adc
pop
loope
ret
mov
test
into
out
pop
cmp
and
adc
test
and
es
pushf
iret
cmp
ret
add
insl
into
lods
sub
into
out
jmp
nop
fimuls
inc
add
mov
ljmp
xor
out
sub
pop
xor
fcoml
xchg
pop
mov
mov
xchg
mov
inc
jbe
jecxz
jbe
out
pop
mov
xor
inc
push
out
and
jbe
inc
jne
push
pop
or
lret
cmp
mov
enter
lods
xlat
dec
stos
add
jecxz
add
mov
pop
dec
stc
cmpsb
mov
insb
jno
dec
ss
clc
in
cmp
loop
xchg
fstpt
icebp
push
lret
stc
repnz
pop
loop
stc
lret
lods
shlb
xchg
xor
sbb
out
sbb
inc
mov
mov
loopne
bound
imul
xchg
xchg
test
fwait
daa
faddp
sbb
mov
or
cmp
mov
push
sub
mov
lret
mov
pop
popf
not
sahf
mov
mov
jmp
adc
cmpsl
and
mov
insl
loopne
mov
jne
sbb
or
test
pusha
outsl
mov
xor
or
push
outsb
and
mov
inc
push
arpl
dec
cmp
adc
cmp
xor
movsl
mov
outsl
out
leave
mov
inc
jp
jle
mov
gs
insb
popa
pop
inc
lcall
and
rolb
mov
lods
lcall
into
push
sarb
outsb
sub
int3
lcall
int
rcl
jbe
loopne
iret
cmp
mov
lock
mov
movsl
mov
das
inc
je
mov
idiv
repnz
sub
shlb
sub
and
das
je
pop
ja
xchg
shl
or
mov
add
sub
adc
shll
cmp
mov
sub
stos
pop
mov
or
lcall
enter
insb
movsb
push
xchg
iret
mov
mov
push
cmp
mov
es
test
pop
sub
lods
push
dec
ljmp
enter
xlat
sbb
add
test
sub
sub
addr16
mov
mov
clc
xor
sub
or
enter
decb
mov
jns,pn
push
das
les
shrl
icebp
aaa
negb
or
mov
xor
adc
imul
lods
mov
out
lret
rcl
ret
lahf
and
repnz
xor
mov
popa
clc
jo
jp
inc
add
mov
cmp
fdiv
roll
mov
jae
push
pushw
test
and
loop
adc
or
fwait
add
bound
pop
inc
sarb
xor
rorl
je
add
add
cmp
gs
xor
insb
shll
and
notl
mov
enter
andb
mov
movsl
push
sahf
dec
xchg
cmp
xor
shll
mov
loopne
xchg
iret
jecxz
in
or
cmp
subl
in
jmp
dec
cmp
negl
inc
stc
cmp
jmp
push
jp
and
mov
jno,pn
cmpsl
pop
push
mov
clc
out
lret
push
ljmp
js
dec
mov
test
xor
add
repnz
jne
adc
orl
aas
add
cld
jl
js
pop
daa
aam
mov
fimull
mov
gs
scas
int
cld
outsl
imul
aam
arpl
jecxz
jnp
aad
xchg
inc
jmp
arpl
or
lret
push
cmc
fidivs
sbb
jle
xchg
pop
pusha
mov
xchg
hlt
aaa
xor
mov
pop
rclb
lea
fnsave
cmp
sbb
sbb
scas
sbb
es
mov
call
pop
hlt
mov
fnstcw
add
mov
aaa
lock
cmpsl
and
inc
inc
cmp
outsl
pop
mov
sub
jge
out
xchg
pop
push
ljmp
jmp
test
faddl
mov
sub
aam
mov
push
lret
je
cmp
xor
cli
push
ret
pop
xchg
inc
loopne
sbb
jb
jb
lods
jge
push
jle
daa
push
idivl
inc
sub
out
int3
pop
cmc
mov
repnz
rcrb
pop
lods
jmp
mov
xor
mov
mov
sub
inc
pop
pop
nop
andl
lods
sub
shlb
sbb
hlt
sbb
ja
or
loopne
pop
cli
insb
shlb
or
stc
sbb
cmp
adc
je
mov
out
cmp
mov
ja
push
inc
jae,pn
bound
scas
and
push
push
stos
and
xchg
out
js
push
stos
out
sbb
les
mov
sahf
sarb
cmp
adcl
cmp
or
arpl
sahf
inc
jecxz
jmp
cmpl
sub
inc
arpl
sub
sub
mov
out
out
and
add
inc
in
push
arpl
loopne
cli
out
xor
imul
sahf
xchg
mov
in
testb
dec
mov
jo
stos
add
out
out
xchg
push
test
cltd
out
cmpsb
pop
cmp
mov
and
fnsave
cmp
push
push
xchg
inc
test
loopne
sbb
adc
xor
or
xor
xchg
mov
lahf
das
in
in
out
adc
lcall
enter
orl
aas
fisubl
fstpt
lret
cs
mov
adc
das
fcompl
pop
out
add
or
dec
push
xchg
pop
scas
mov
std
xchg
mov
sbb
ss
xor
js
loope
js
pop
cmp
pop
sub
mov
push
aam
sub
and
mov
arpl
push
nop
inc
mov
pop
lahf
cmp
mov
arpl
pop
adc
outsb
inc
test
lcall
and
lahf
ret
cmp
fstpt
cmpsl
pop
mov
cs
cli
sub
pop
fisubl
pushf
add
mov
pop
subl
mov
test
loopne
ljmp
shrl
xorb
mov
push
inc
scas
insl
test
mov
add
sub
adc
push
pop
mov
ja
pop
mov
mov
sahf
ret
push
addb
outsb
gs
fists
mov
push
andb
mov
mov
push
dec
xor
pop
pop
push
push
fwait
arpl
pop
popa
push
xchg
push
pusha
scas
cmc
fsubrs
mulb
mov
mov
xchg
decb
int
xchg
jb
jo
mov
ffreep
push
pop
sub
inc
add
std
xor
jecxz
cltd
push
jecxz
or
xchg
add
mulb
pop
loop
cmp
repz
or
jecxz
mov
push
add
leave
cld
and
push
push
jp
pop
mov
xor
pusha
pushf
aad
enter
pop
sub
out
add
cmpsl
or
push
jae
dec
or
insb
out
inc
lods
sub
aam
sahf
lock
fucomip
mulb
mov
lahf
mov
test
jnp
xchg
jl
movsb
sbb
xor
mull
daa
adc
mov
add
mov
outsb
cmp
lret
sbb
pop
rcl
mov
rcl
addr16
inc
sbb
or
xor
jecxz
xor
bound
and
pop
je
mov
sub
add
push
xchg
push
push
testl
outsl
and
lahf
xor
dec
rorb
into
add
jae
in
sub
sbb
mov
xorb
and
adc
cld
int3
dec
xor
scas
dec
pop
xor
hlt
addr16
loop
jbe
jle
bound
iret
mov
pushf
inc
fidivl
stc
sub
sbb
call
out
pop
push
mov
cli
jecxz
rorl
and
rolb
sub
aaa
icebp
adc
lcall
mov
xor
inc
ds
push
jl
xor
inc
mov
inc
scas
test
aas
or
aad
xor
add
mov
bound
lods
sub
imul
add
mov
in
xlat
aad
lea
repnz
nop
aam
das
lods
mov
mov
out
add
inc
xchg
adc
jp
dec
jno
mov
xor
mov
aam
and
sbb
jns
add
jbe
mov
repz
xchg
cmpsl
lcall
pop
jo
and
popa
and
jp
xchg
dec
sbb
imul
stos
fisubs
fdivs
inc
mov
xchg
push
push
lret
rcrb
jecxz
imulb
cmp
ja
xchg
push
jno
xchg
push
test
jo
repnz
ss
roll
sahf
fimull
decb
and
mov
outsb
lret
add
mov
fs
pop
scas
xor
xor
adc
loope
push
or
push
mov
pop
dec
stos
out
add
std
sbb
mov
ds
leave
sbb
inc
sub
andl
push
and
xor
dec
call
movsl
test
adc
fs
dec
jne,pn
lahf
cli
sub
inc
sub
scas
pop
loop
data16
xor
bound
idivl
adc
adc
add
dec
mov
test
rol
clc
out
push
ret
scas
push
jecxz
lods
test
clc
sub
ss
pop
mov
sbb
mov
add
bound
xlat
es
into
xchg
pop
popf
pop
mov
in
test
lcall
or
fwait
xchg
xor
and
dec
mov
ds
push
pop
loop
scas
xchg
imul
or
mov
jg
jne
inc
mov
adc
or
hlt
inc
sbb
inc
or
inc
sub
add
add
add
aad
mov
lcall
fistps
xchg
jae
cltd
sub
cs
std
aaa
repz
lcall
lcall
mov
jl
inc
mov
int3
test
addl
std
adc
adc
clc
mov
lcall
out
fwait
or
out
xchg
incb
subb
aas
lock
adc
test
das
sub
mov
lock
and
jecxz
pop
call
xor
dec
add
out
je
andl
lcall
lcall
add
mov
jecxz
fwait
or
out
sub
push
gs
fwait
or
out
sub
das
fninit
gs
fdiv
xchg
pop
mov
lcall
inc
mov
xor
push
xor
cmpsl
testl
push
mov
add
fs
subb
aas
lock
adc
test
das
sub
mov
lock
and
jecxz
gs
jg
sub
mov
andl
lcall
add
out
iret
add
out
jnp
dec
enter
out
sub
jne
aad
je
jnp
stos
push
insl
pop
das
or
icebp
and
loope
cld
jne
aad
gs
jp
pop
test
das
rolb
test
push
and
inc
mov
clc
rclb
and
inc
imull
sti
pop
fidivl
add
aas
aaa
into
repz
lcall
mov
nop
jp
mov
xor
mov
lcall
lcall
lcall
add
aas
adc
test
dec
add
jnp
xchg
add
call
enter
push
and
mov
lcall
leave
lcall
lcall
dec
fwait
or
aaa
ret
lcall
mov
mov
lcall
cmp
fidivl
mov
repz
lcall
dec
fwait
or
aaa
ret
lcall
dec
cmpsb
sub
lcall
cmp
fidivl
mov
lcall
dec
fwait
or
aaa
ret
lcall
fwait
pop
jae
cmpsb
sub
decb
inc
push
mov
das
sar
pop
pushf
js
add
push
mov
lock
dec
test
rcrl
je
fsubs
arpl
mov
pop
out
jns
daa
mov
bnd
adc
sub
test
or
mov
bnd
lock
cwtl
jl
cld
test
rcll
jecxz
push
cwtl
xor
mov
out
adc
bnd
cmp
je
sbb
mov
pop
mov
lcall
jnp
clc
jmp
sbb
lret
xchg
insb
lcall
out
sub
pop
in
and
lcall
jb
xchg
scas
jb
or
test
lcall
out
sub
clc
fwait
rolb
mov
rolb
into
mov
sub
sbb
add
add
lcall
pop
imul
xchg
pushf
pushl
lea
ljmp
pop
mov
add
cmpb
ret
adc
and
sbb
aaa
fs
shlb
pop
push
arpl
cmp
lcall
popa
or
bound
addb
xor
pusha
push
pop
imul
lock
add
fs
cmp
jno
cmp
push
add
fs
cmp
jno
xor
bound
xorb
xor
or
push
arpl
cmp
repnz
imul
out
lcall
lcall
lcall
int3
in
push
mov
add
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
add
add
add
add
sub
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
call
add
add
add
add
js
add
push
add
add
add
add
adc
mov
add
push
adc
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
ja
jo
inc
add
inc
pop
ja
clc
test
add
ja
add
jo
add
js
or
mov
push
addb
lock
push
orb
or
jo
testl
add
jo
or
divl
add
add
pop
xchg
add
add
add
mov
emms
xor
add
add
xorl
add
pop
add
lock
loopne
add
rolb
add
add
add
add
add
pop
add
lock
cld
pop
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
inc
add
dec
test
add
test
add
add
add
add
xchg
ja
or
add
add
ja
ja
inc
js
add
add
add
or
ja
add
js
inc
add
add
add
add
ja
mov
add
dec
js
or
push
add
add
add
ja
add
push
add
divl
inc
add
add
ja
add
jo
push
ja
inc
add
inc
dec
ja
add
divl
inc
add
xchg
lock
push
ja
dec
add
xchg
incl
or
divl
add
xchg
incl
push
ja
add
mov
add
push
js
inc
add
jg
jo
add
js
add
xchg
add
pushl
add
aaa
ja
pushl
add
pushl
add
xchg
add
push
ja
add
add
ja
lock
aaa
jg
xchg
mov
add
cmp
lock
add
incl
ja
xor
add
ja
ja
add
add
add
add
aaa
ja
lock
aas
addb
ja
add
add
add
ja
add
add
add
cmp
add
add
ja
ja
add
add
sbb
add
add
ja
js
add
add
add
add
ja
add
ja
ja
cmp
aaa
aaa
js
add
cmp
jae
xor
inc
add
incl
add
incb
add
cld
add
pop
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
addb
push
pop
ljmp
add
add
add
add
add
add
or
add
add
addb
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
adc
push
adc
add
pop
pop
add
sbb
adc
pop
and
sbb
and
sbb
sub
and
sub
and
add
sub
sub
add
and
and
daa
sbb
add
adc
add
verw
or
add
pop
pop
add
or
pusha
adc
add
pop
add
add
sbb
and
cmpsl
daa
sub
scas
sub
add
xor
mov
aaa
add
cmp
add
inc
inc
add
inc
dec
add
dec
dec
add
push
push
add
push
pop
add
pop
pop
add
pop
bound
xlat
gs
add
insl
outsl
add
jo
add
jae
add
je
add
je
add
jno
add
imul
imul
mov
add
push
push
add
dec
add
inc
add
inc
add
add
add
add
cmp
cmp
add
cmp
xor
add
dec
add
push
push
add
push
push
add
pop
add
data16
push
jo
dec
jb
add
jp
pop
jnp
add
addl
imul
popl
dec
xchg
add
xchg
cltd
add
cwtl
sahf
add
pushf
mov
add
scas
add
stos
mov
inc
lods
mov
inc
mov
add
mov
add
ret
add
add
lret
int
popa
lret
arpl
rolb
gs
aam
imul
add
xlat
add
xlat
add
fadds
jl
fadds
adc
aad
mov
iret
add
mov
mov
add
test
movsb
cmpsb
cmpsb
add
mov
sahf
add
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
nop
xchg
add
nop
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
cltd
add
cwtl
lcall
fwait
pushf
add
pushf
sahf
add
sahf
mov
add
mov
cmpsl
add
test
lods
add
lods
scas
add
scas
mov
call
mov
add
mov
add
mov
add
mov
mov
add
rol
faddp
ret
add
lds
fcmovb
movl
lret
lret
int
jecxz
into
add
iret
roll
jmp
roll
out
rcl
add
flds
hlt
fcmovu
add
add
fstp
add
fnstsw
add
add
fnstsw
add
add
add
fstp
add
add
add
fcmovnu
add
fcmovu
add
add
fcmovu
add
fcmovnu
add
fucom
add
loope
add
in
add
jmp
out
add
in
lock
out
icebp
add
out
icebp
add
out
lock
in
out
add
in
in
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
out
add
out
lock
lock
add
repnz
repz
cmc
cmc
add
div
add
clc
clc
add
stc
cli
add
cli
sti
add
cld
cld
add
std
std
add
std
incb
std
incb
incb
incl
std
incb
packuswb
or
aaa
xor
xor
packuswb
aaa
cmp
dec
inc
aas
inc
inc
cmp
invd
add
dec
dec
dec
inc
dec
push
push
dec
inc
inc
cmp
or
invd
cmp
push
movsl
cmpsl
cmpsl
lods
mov
mov
or
pop
push
dec
inc
aaa
or
invd
cmp
stos
mov
mov
or
push
dec
inc
or
invd
cmp
add
mov
out
xor
lret
mov
inc
add
invd
aaa
aas
dec
or
push
pop
lret
mov
or
inc
cmp
packuswb
aas
dec
cmpsb
pop
or
or
int3
out
repz
data16
sahf
out
ret
test
dec
cmp
invd
cmp
test
xor
or
icebp
div
cmc
divb
or
iret
out
leave
mov
add
lar
push
mov
or
fwait
std
idiv
and
adc
out
int3
mov
inc
cmp
packuswb
aas
inc
dec
mov
ret
or
std
std
xor
or
mov
movsl
dec
inc
or
invd
insb
fwait
jne
aam
repz
and
std
data16
xor
std
imul
mov
mov
inc
dec
add
xchg
xchg
rcl
repz
adc
or
or
sar
stc
hlt
out
int3
mov
invd
popf
xchg
xchg
shr
icebp
std
insb
or
or
or
or
std
std
stc
clc
out
int3
mov
pfadd
sahf
sahf
mov
je
or
or
or
cmc
in
leave
mov
inc
dec
cmp
invd
cltd
jae
xchg
aam
sar
xchg
or
or
or
clc
repz
into
mov
invd
test
in
std
popf
or
or
idiv
std
std
cli
stc
imul
in
ljmp
invd
jp
nop
fsub
in
std
cltd
or
or
data16
std
std
cli
cli
clc
cmc
repz
rcll
outsl
mov
cmc
lds
or
or
vpaddw
clc
idiv
in
jmp
aad
sahf
lcall
jl
fsub
fnsetpm(287
jmp
or
sar
std
jne
aam
jne
popa
or
invd
outsl
jnp
fsub
out
or
or
or
adc
jmp
xchg
jecxz
xchg
cmpb
packuswb
jecxz
out
or
or
sub
or
and
nop
mov
invd
jl
nop
fsub
out
or
or
push
or
loop
lea
movlps
lea
or
or
or
adc
or
or
or
or
invd
and
in
sub
or
jbe
or
outsl
outsl
outsl
outsl
or
invd
sub
jg
nop
loop
or
or
loop
popl
invd
pop
jle
mov
or
nop
mov
invd
sub
mov
jle
mov
packuswb
sub
mov
outsb
imul
packuswb
or
or
or
ud0
inc
add
incl
add
incb
add
cld
add
pop
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
addb
push
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
sub
pushl
push
push
call
add
incl
add
popf
add
add
jg
sbb
xchg
fiadds
mov
jmp
add
decl
xor
fdivs
sarl
incl
add
popa
inc
add
adc
or
sub
adc
clc
mov
mov
out
rol
sti
fdivr
add
add
hlt
lret
shrb
dec
lcall
incl
add
popf
add
add
push
push
out
lahf
mov
incl
add
out
lock
cld
icebp
repz
mov
add
push
repnz
out
test
jb
call
add
incl
add
add
add
popa
movsb
and
inc
dec
dec
in
mov
push
mov
add
cmc
out
icebp
cli
std
call
add
push
idiv
repnz
into
out
rol
fimuls
inc
incl
add
popa
add
add
lahf
mov
test
out
out
out
incl
add
lcall
sbb
inc
inc
inc
incl
add
call
cld
std
clc
loope
push
aad
ljmp
incl
add
out
add
jmp
mov
jmp
in
in
in
in
incl
add
incl
add
incl
add
incl
add
std
std
std
push
hlt
hlt
incl
add
in
mov
call
outsb
jno
add
add
add
add
pop
mov
lret
fsubr
jmp
decl
ud0
add
incl
add
push
cmc
cmc
incl
add
std
std
std
push
repnz
jmp
rcl
lcall
add
incl
add
out
mov
ret
ljmp
incl
add
incl
add
std
std
std
cld
cld
cld
push
repz
out
dec
int
jmp
add
add
add
dec
push
cmp
add
lods
jecxz
call
add
incl
add
pushl
xor
decl
cld
std
jmp
sub
mov
mov
jb
add
add
add
add
add
jmp
lret
decl
ljmp
add
add
add
add
test
add
incl
add
dec
repz
jmp
enter
add
incl
add
add
adc
ljmp
int
dec
mov
ljmp
add
incl
or
incl
add
incl
add
decl
adc
adc
adc
incl
add
popf
add
add
sbb
dec
mov
jns
aam
nop
fcmovu
incl
add
incl
add
decl
fdivr
pop
mov
pusha
incl
add
incl
add
popf
add
add
push
push
call
mov
leave
iret
ljmp
pushf
mov
incl
add
incl
add
popf
add
add
add
add
add
add
add
add
add
add
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
clc
pop
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
add
add
jo
add
jo
add
insb
add
add
add
pop
add
add
add
add
add
mov
inc
or
pushl
and
and
incl
or
pop
pop
pop
incb
add
roll
add
xchg
add
sub
add
inc
add
add
jbe
or
fsts
movsl
sbb
sub
lret
inc
push
push
ljmp
daa
sub
xlat
push
push
jmp
incl
add
icebp
add
add
add
add
add
outsl
push
inc
inc
call
imul
loopne
nop
flds
popf
jmp
pushf
popf
fadds
add
add
add
fildll
inc
cmp
aas
push
ud0
add
mov
add
add
sbb
or
add
add
out
xchg
jmp
mov
mov
jmp
mov
sar
push
pop
incl
add
jmp
lahf
mov
call
imul
pop
incl
or
add
add
add
xor
add
mov
add
ljmp
adc
pushl
enter
mov
in
mov
push
rcl
sti
fdivr
and
push
cmp
sub
hlt
lret
faddl
popa
dec
fs
dec
dec
ljmp
add
incl
add
jbe
add
add
mov
cs
jmp
inc
incl
add
incl
add
pushl
in
push
cli
jmp
sar
add
add
add
add
jmp
call
fmull
popf
fdivs
mov
add
cmc
add
add
add
add
cs
aad
insb
jmp
mov
incl
add
incl
add
incl
add
cli
sti
std
idiv
std
idiv
jmp
add
add
lock
fstp
push
into
sar
ljmp
call
imul
sbb
xchg
add
add
add
add
add
xchg
enter
ret
jmp
lahf
mov
push
mov
add
add
add
cmc
out
icebp
push
sti
call
add
incl
push
idiv
stc
in
in
mov
ret
mov
push
dec
inc
inc
incl
add
aad
add
add
add
add
xchg
call
rcl
jmp
loope
push
lock
add
incl
add
incl
ljmp
cs
add
incl
add
push
div
std
cli
sti
cli
ljmp
icebp
leave
call
pop
pop
inc
inc
inc
lcall
add
add
add
add
add
gs
test
fcmovu
ljmp
incl
inc
incl
add
incl
add
ljmp
imul
add
add
scas
scas
scas
std
std
std
cld
div
cli
call
fdivr
in
mov
xchg
call
imul
adc
add
add
add
addl
pushl
in
in
in
in
in
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
std
std
std
sti
sti
sti
push
in
push
fcmovnu
out
rol
flds
jno
bound
pop
incl
add
jo
add
add
jo
cltd
lahf
lahf
call
rcl
jmp
in
jmp
jmp
jmp
add
incl
add
incl
add
incl
add
lcall
pop
push
div
jmp
jmp
call
mov
scas
addl
pop
cmp
incl
add
jo
add
add
cwtl
lahf
sar
jl
aam
mov
in
out
jmp
jmp
fdivr
add
add
add
add
add
add
jle
jle
std
std
std
cli
cli
cli
in
in
in
ljmp
pushl
stos
stos
pushl
add
data16
add
sbb
int3
decl
in
dec
lock
ljmp
incl
add
incl
add
incl
add
ljmp
sub
std
std
std
cld
cld
cld
clc
clc
clc
out
out
out
jmp
out
call
mov
movsb
movsb
call
pop
pop
cmc
add
add
add
cmpsb
lods
decl
lcall
jmp
ljmp
add
incl
add
incl
add
incl
add
stc
stc
stc
push
div
cld
cld
sti
cli
stc
stc
call
rcl
fcmovnbe
xlat
fcmovnbe
xlat
dec
mov
xchg
mov
incl
add
mov
add
add
add
add
lahf
cmpsb
cmc
inc
stos
mov
xchg
fcmovu
pushl
fsubp
jmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
pop
in
cli
sti
decl
or
ljmp
out
decl
mov
ljmp
xchg
lcall
add
add
lret
jge
aad
pushf
mov
clc
cli
incl
add
incl
add
incl
add
incl
add
ljmp
add
incl
add
incl
add
decl
pop
mov
loop
jle
fdivr
int3
sar
add
add
add
add
add
add
sbb
aad
leave
incl
rol
mov
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
push
or
adc
call
push
push
sti
add
add
add
sub
mov
cmp
mov
push
add
call
incl
add
incl
add
ljmp
cmp
cs
inc
lcall
and
jmp
xchg
cmp
cmp
cwtl
jmp
add
insb
add
add
sub
rorb
mov
incl
fcmovu
incl
add
incl
add
incl
add
call
fucom
incl
lret
sar
push
mov
pusha
icebp
add
add
add
adc
push
mov
lods
icebp
pop
ret
insb
into
aam
or
incl
push
incl
jne
push
mov
ljmp
int
pop
cmp
mov
mov
add
xor
add
sub
sbb
cmp
push
outsb
fnstsw
mov
xor
movsl
lock
xor
mov
add
add
incl
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
or
or
or
or
or
cs
or
add
or
or
inc
add
or
or
ss
or
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
or
or
add
and
add
adc
add
or
hlt
dec
pop
pop
notb
push
testl
add
sbb
add
add
add
add
add
or
or
or
or
add
add
add
popf
xor
add
andl
jmp
sbb
ljmp
inc
dec
ficompl
mov
sbb
scas
and
cmpsl
xor
pusha
sbb
decl
add
lret
add
add
add
add
add
add
or
or
or
or
add
add
add
out
jbe
adc
fistpl
dec
pop
pusha
mov
dec
dec
call
jae
fidivrl
dec
imul
inc
incl
sub
xchg
ss
ljmp
add
incl
add
mov
add
and
add
add
or
or
or
or
add
or
add
test
sbb
mov
push
push
fidivl
fidivrl
jmp
nop
xchg
jmp
xchg
jmp
xchg
xchg
jmp
mov
mov
call
add
add
jne
inc
jmp
jno
call
dec
push
jmp
push
push
loope
add
xor
or
or
or
or
add
add
jle
and
outsb
and
lcall
xchg
xchg
jmp
lcall
jmp
mov
in
mov
mov
decl
incl
add
call
cmp
out
pushf
jmp
mov
pushl
push
push
out
add
add
add
or
or
or
or
add
add
cmpsb
cmp
incl
add
decl
add
lcall
stos
stos
out
mov
mov
ljmp
push
rcl
sti
rcl
cmp
pop
out
mov
mov
fmull
pop
call
push
frstor
lods
xor
sbb
add
add
add
or
or
or
or
add
add
add
pushl
dec
dec
decl
add
decl
pop
or
inc
inc
push
int3
into
push
in
mov
fdivr
in
out
lcall
add
push
or
dec
test
fmull
outsb
dec
arpl
fnstcw
dec
dec
dec
jg
adc
add
add
add
add
or
or
or
or
add
add
add
add
sahf
sbb
ljmp
incl
add
incl
add
incl
add
jmp
pop
in
out
clc
fsubp
clc
loop
std
lock
idiv
incl
aas
incl
add
incl
add
lcall
out
out
ret
fwait
sahf
jmp
cmpsb
cmpsl
jmp
xchg
xchg
fnstenv
dec
dec
dec
decl
or
add
add
add
add
or
or
or
or
add
add
add
outsl
imul
pop
call
jae
jmp
xchg
xchg
jmp
test
incl
xor
incl
add
incl
add
fst
sar
clc
stc
cld
hlt
cmc
cli
cld
push
repnz
das
das
incl
add
incl
add
call
jmp
push
fcmovu
push
into
sar
in
mov
movsb
fldl
jno
mov
aas
lcall
add
int
add
add
or
or
add
add
mov
xor
fidivrl
out
mov
in
rol
aas
xor
incl
add
incl
add
lcall
idiv
call
rcl
call
add
lcall
out
lock
std
in
out
clc
push
icebp
enter
mov
in
pushf
call
insb
outsb
dec
inc
inc
lcall
sbb
cmp
or
add
or
push
add
add
dec
adc
lods
sub
ljmp
gs
stos
lods
jmp
ret
into
sar
mov
incl
add
incl
add
incl
inc
cld
std
in
in
in
cmp
cmp
add
add
add
add
push
push
push
cld
out
repnz
fcmovu
out
ret
jmp
mov
fimuls
push
pushl
sbb
add
add
or
or
add
add
push
push
call
test
fdivr
jecxz
jecxz
icebp
out
out
pushl
add
incl
add
call
adc
fdivr
cli
sti
cli
decl
dec
incl
add
incl
add
ljmp
sub
fcomp
fdivr
std
idiv
cli
out
push
rcl
push
int
push
enter
test
mov
inc
inc
lcall
add
or
or
add
add
stos
lods
lods
pushl
int
fstp
fdivrp
call
repnz
lock
and
add
add
add
add
jne
jne
jae
jae
add
add
add
add
add
add
mov
mov
std
std
cld
cld
std
cld
repz
cli
in
push
fnstsw
push
int3
into
in
mov
jmp
xchg
xchg
call
outsb
jo
rclb
pushl
or
in
add
or
or
or
push
push
push
mov
mov
pushl
rcl
jmp
loopne
jmp
ljmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
cld
std
std
cli
cli
cli
stc
in
out
stc
loope
push
iret
sar
out
mov
sahf
call
jbe
fstps
incl
pmaddwd
or
aas
or
or
mov
xchg
call
mov
jmp
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
push
div
cld
cld
cld
push
div
out
in
in
push
fcmovnu
push
iret
sar
jmp
mov
ja
inc
inc
dec
call
dec
push
call
push
testb
or
or
add
or
xchg
ljmp
mov
js
popf
jmp
fsubp
jmp
in
std
std
std
ljmp
add
incl
add
incl
add
incl
add
incl
add
pushl
xor
jmp
in
cld
cld
cld
push
div
in
in
in
jmp
loope
jmp
loope
ret
mov
xchg
call
ja
cmp
sub
inc
or
or
add
push
lods
ds
mov
imul
leave
lcall
out
jmp
in
in
out
in
in
incl
add
incl
add
incl
add
incl
add
incl
add
incl
inc
jmp
out
std
std
std
std
std
std
clc
clc
clc
out
out
out
out
out
out
jmp
out
fcmovnu
fdivrp
mov
mov
stos
jmp
sub
repz
push
push
cmp
add
add
mov
decl
loopne
mov
icebp
repnz
jmp
jmp
add
incl
add
incl
add
incl
add
decl
dec
std
std
std
sti
sti
sti
clc
clc
clc
push
repz
in
in
in
jmp
loop
call
aad
inc
mov
lcall
sbb
in
pop
pop
or
or
add
add
imul
push
mov
fdivrp
mov
ljmp
lock
jmp
cli
call
into
int
ud0
add
incl
add
incl
add
incl
mov
sti
sti
sti
cli
cli
stc
in
jmp
ljmp
call
aam
pushl
xchg
xchg
decl
add
or
or
or
add
add
push
xor
icebp
cs
cmpsl
pushl
mov
ret
jmp
call
out
out
repz
fsub
out
es
add
add
add
add
add
add
add
popa
popa
popa
mov
mov
std
std
cld
std
lcall
mov
call
fcmovu
call
fcmovu
mov
mov
incl
inc
incl
add
pop
or
or
or
or
add
add
add
add
sub
mov
loopne
scas
in
jmp
ljmp
sub
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
ljmp
outsb
in
cmc
cmc
dec
fcomp
ljmp
ss
lcall
out
ljmp
rcl
call
mov
sub
mov
stc
add
add
or
or
or
or
add
add
add
add
inc
inc
testl
into
decl
loope
pushl
out
lock
repnz
pushl
xor
add
add
add
add
add
add
add
sbb
lcall
add
incl
add
call
sub
ljmp
jg
lret
pushl
loope
incl
int
jmp
jg
incl
pop
pop
mov
or
or
or
or
add
add
add
add
add
add
lret
jns
aam
xchg
fcmovnu
jmp
out
dec
hlt
idiv
das
ss
add
incl
add
incl
add
incl
add
cmp
inc
mov
je
decl
adc
incl
add
incl
add
ljmp
ss
or
ljmp
lret
call
enter
xor
add
add
add
add
or
or
or
or
add
add
add
adc
xor
lret
js
sar
insb
enter
leave
iret
pushl
xchg
cltd
incl
add
incl
add
incl
add
incl
add
incl
add
call
adc
jmp
pop
or
add
add
add
add
add
add
add
add
or
incl
fwait
lcall
pop
incl
add
insl
or
or
or
or
add
add
push
and
inc
stos
mov
pop
aas
stos
mov
dec
mov
pushl
sar
mov
lock
nop
lcall
daa
daa
incl
add
incl
add
incl
jbe
lcall
sbb
cmp
dec
imul
push
push
ljmp
insb
jno
sub
cmp
outsl
incl
add
movsb
add
add
or
or
or
or
add
add
sub
mov
dec
mov
mov
adc
stos
idiv
decl
jne
add
add
add
add
add
add
push
imul
xlat
nop
aad
jmp
out
pushl
aam
inc
mov
jmp
outsl
je
add
add
or
or
or
or
add
add
sbb
jecxz
nop
xchg
call
lret
ljmp
aam
jae
sar
test
jecxz
dec
je
incl
add
incl
add
incl
add
incl
push
xchg
in
incl
iret
aam
jo
aam
fs
aam
dec
mov
call
dec
dec
incl
add
xchg
add
add
or
or
or
or
add
add
add
add
mov
jmp
fcos
dec
lods
mov
sbb
lcall
push
pop
ljmp
decl
mov
lcall
sar
inc
stos
mov
and
incl
add
dec
or
or
or
or
add
add
add
popf
adc
cmp
push
pop
pop
call
push
lcall
test
call
ljmp
xchg
popf
call
imul
pop
lcall
dec
dec
incb
sbb
add
add
add
or
or
or
or
add
add
add
inc
add
add
add
stos
add
adc
add
add
add
add
add
add
or
or
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
add
or
jg
add
jg
add
add
js,pt
add
jo
add
jo
add
pusha
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
pusha
add
push
jo
add
js
add
jl
add
jle
add
addb
jg
add
add
pusha
add
add
add
add
add
add
add
and
add
add
andb
add
push
push
add
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
ltr
push
push
add
or
sbb
add
jno
add
lea
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
push
or
or
sldt
add
pop
add
add
add
lahf
or
add
sub
or
xor
pop
incl
jmp
and
jo
and
js
and
and
lcall
sbb
inc
or
pushl
add
lcall
pop
pop
incl
add
ljmp
add
add
or
add
add
str
sldt
add
xor
add
mov
add
repnz
ljmp
push
lcall
and
sbb
stos
sbb
ss
dec
push
call
pop
pop
call
dec
dec
inc
xor
stos
sbb
jmp
and
and
pop
sbb
jmp
add
add
add
add
add
sbb
str
sldt
add
add
add
xchg
add
stc
daa
add
pushl
or
mov
push
push
mov
sbb
daa
ljmp
sub
fnstenv
inc
push
push
ljmp
sub
mov
sub
mov
sub
leave
dec
dec
call
push
push
pushl
pop
pop
call
add
incl
add
jmp
str
sldt
add
inc
add
add
add
ljmp
dec
push
dec
pop
pop
call
fs
imul
outsl
jb
mov
dec
dec
fidivrl
fildl
xchg
fildl
cmp
dec
push
pushl
sub
pushl
sbb
call
push
push
lcall
add
decl
add
add
add
str
sldt
add
push
add
add
push
aas
inc
dec
inc
inc
dec
push
push
call
imul
fidivrl
fiadds
nop
fnstcw
flds
pushf
jmp
pushf
popf
jmp
pushf
popf
jmp
pushf
popf
jmp
fwait
popf
fadds
incl
add
incl
add
incl
add
decl
outsl
jno
dec
dec
inc
cmp
jmp
push
ud0
add
lds
add
sbb
add
add
str
sldt
add
add
add
popa
or
add
jg
sbb
movsl
xor
js
xor
xchg
dec
imul
jnp
fiadds
xchg
jmp
cwtl
lcall
test
lods
jmp
lods
scas
jmp
lods
scas
push
mov
js
pop
incl
add
incl
add
incl
add
decl
xor
faddl
jg
fdivs
aam
push
aad
pop
inc
cmp
or
add
add
add
add
str
sldt
add
push
add
add
jnp
push
inc
inc
inc
call
pop
or
add
add
add
add
mov
xchg
xchg
jmp
cltd
pushf
jmp
mov
stos
ljmp
jmp
mov
sar
mov
sar
leave
lret
pushl
pop
incl
add
incl
add
pushl
sub
jmp
lahf
mov
jmp
xchg
call
jbe
call
imul
push
dec
inc
inc
incl
or
add
add
add
add
str
sldt
add
inc
add
sbb
dec
inc
dec
decl
and
add
add
add
add
bound
and
in
cmp
test
stos
jmp
mov
in
mov
ret
jmp
mov
test
repnz
int3
push
int
push
int
push
int
call
fdivr
push
push
incl
add
jmp
push
pop
fldt
call
mov
push
fdivs
call
push
call
pop
pop
dec
inc
inc
aas
or
incl
add
lds
add
or
add
add
str
sldt
add
adc
add
jecxz
add
mov
push
mov
or
incl
add
incl
add
ljmp
adc
lcall
xor
mov
jbe
clc
mov
leave
in
mov
mov
ljmp
out
rol
hlt
rcl
push
fcmovnu
sti
fdivr
aad
scas
jmp
push
incl
add
cmp
sub
cmc
leave
push
lret
out
stos
faddl
jno
lret
pop
popa
dec
pop
pop
dec
fs
outsb
jno
leave
dec
dec
lcall
add
incl
add
cltd
str
sldt
add
cwtl
sub
add
xchg
adc
ljmp
pop
pop
lcall
incl
add
incl
add
incl
add
incl
add
call
or
jmp
fcmovu
push
leave
out
mov
ret
push
enter
sar
neg
sti
out
sti
fsubp
decl
incl
add
incl
add
incl
add
call
jmp
mov
flds
jb
int
push
fstpt
dec
pop
pop
pushl
adc
incl
add
cli
add
add
str
sldt
add
aaa
or
pop
or
mov
cs
bound
jmp
mov
incl
add
incl
add
incl
add
incl
add
incl
push
push
pushl
out
stc
in
push
aad
push
cli
ljmp
push
hlt
sar
or
or
add
add
add
add
add
add
push
out
push
rcl
push
lret
int
in
mov
jmp
cmpsl
test
in
popf
fisttps
js
aam
push
call
add
add
add
add
add
str
sldt
add
or
add
fisubl
adc
cmp
inc
push
push
call
jo
faddl
mov
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
loopne
out
lock
sti
jmp
out
cld
icebp
repz
cld
icebp
repz
cld
mov
add
incl
add
incl
add
incl
add
lcall
lock
push
aad
push
in
mov
jmp
mov
out
test
loop
xchg
fldl
je
int3
push
pop
pushl
add
incl
add
push
add
add
str
sldt
add
inc
add
cs
aad
pop
call
push
fnstcw
jmp
mov
jmp
mov
test
incl
add
incl
add
incl
add
incl
add
incl
add
inc
mov
cli
sti
std
hlt
cmc
std
idiv
std
cmc
idiv
std
idiv
jmp
add
add
add
add
add
add
ret
push
repnz
clc
loop
push
fstp
push
fcomp
push
into
sar
out
mov
mov
in
mov
fidivrl
call
imul
push
pop
incl
add
fadds
add
or
add
add
str
sldt
add
lcall
inc
mov
pop
pop
fisttps
fwait
call
mov
sar
mov
decl
or
add
add
add
add
add
add
mov
std
repz
std
idiv
stc
sti
cli
cld
incl
add
incl
add
incl
add
lcall
call
repz
cli
out
stc
jecxz
push
rcl
out
ret
push
enter
mov
stos
jmp
lcall
int
fs
inc
inc
inc
inc
inc
jmp
pop
pop
incl
add
inc
add
add
str
sldt
add
add
add
sbb
add
hlt
movsb
and
dec
inc
inc
pushl
dec
dec
fiadds
mov
out
mov
lret
mov
xor
add
add
add
add
add
add
cs
icebp
stc
cld
push
sti
cli
std
dec
enter
adc
add
add
add
add
add
inc
inc
inc
std
clc
cli
push
idiv
sti
in
out
stc
in
push
int3
into
in
mov
enter
ret
mov
jmp
mov
mov
les
pushl
inc
inc
call
adc
add
add
str
sldt
add
add
add
dec
sub
or
call
cmp
pushl
data16
fstpl
jmp
mov
push
iret
sar
pop
dec
dec
incl
add
incl
add
incl
add
incl
add
inc
mov
clc
sti
call
aad
lcall
push
push
incl
add
incl
add
incl
add
incl
add
incl
clc
cli
cli
ljmp
repz
push
ret
jmp
mov
out
rol
loop
fwait
dec
pop
pop
mov
sub
push
incl
add
jmp
add
or
str
sldt
add
add
add
outsb
xor
xchg
incl
xchg
xchg
mov
rcl
jmp
fnstsw
jmp
loope
jmp
jecxz
push
lock
add
incl
add
incl
add
incl
add
incl
jmp
jmp
cs
add
incl
add
incl
add
incl
add
decl
dec
push
div
std
cli
sti
std
repnz
cli
ljmp
repz
iret
push
lret
icebp
leave
push
ret
call
mov
mov
inc
inc
mov
add
std
add
add
str
sldt
add
add
add
test
lahf
mov
test
jmp
rcl
loope
loop
jmp
out
out
out
out
out
dec
into
into
decl
or
incl
add
incl
add
incl
add
lcall
sbb
in
in
in
std
std
incl
inc
incl
add
incl
add
incl
add
incl
add
decl
dec
call
std
std
std
std
cld
std
cld
clc
stc
std
hlt
idiv
clc
loope
push
aam
clc
push
aad
push
in
mov
scas
call
jae
inc
inc
dec
call
gs
pushl
or
incl
add
mov
str
sldt
add
or
gs
test
mov
call
rcl
fcmovu
jecxz
jecxz
ljmp
push
cmc
cmc
stc
stc
stc
incl
inc
incl
add
incl
add
incl
add
incl
add
incl
imul
add
add
add
add
add
add
add
add
scas
scas
scas
std
std
std
std
std
std
sti
cld
cld
cld
div
cld
out
icebp
cli
call
loope
cmc
fdivr
icebp
leave
lret
mov
stos
jmp
xchg
xchg
fnstcw
shll
call
dec
dec
decl
incl
add
test
sldt
add
adc
pop
pop
repnz
stos
mov
mov
fdivr
in
in
jmp
jmp
lock
hlt
hlt
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
std
std
std
cld
cld
cld
cli
sti
sti
sti
hlt
cmc
cli
jmp
jecxz
neg
repnz
out
mov
lods
jmp
cwtl
lcall
imul
adc
incl
add
mov
sldt
add
push
or
addl
scas
scas
scas
lcall
mov
incl
add
fdivrp
in
in
in
in
in
push
icebp
icebp
in
in
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
std
std
std
cld
cld
cld
sti
sti
sti
push
hlt
hlt
push
in
stc
jecxz
push
fcmovnu
push
int3
iret
out
rol
in
mov
flds
pop
call
outsb
jno
ficoml
jmp
pop
incl
add
mov
str
sldt
add
pop
or
test
decl
lea
ret
fcomp
fdivr
out
out
out
out
jmp
jmp
cli
cli
cli
call
rcl
incl
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
sti
sti
sti
clc
clc
clc
push
repnz
in
out
in
out
push
rcl
push
into
sar
in
mov
jmp
xchg
xchg
call
push
inc
inc
inc
dec
call
inc
dec
js
and
add
add
sldt
add
and
mov
ljmp
jo
xchg
lahf
ljmp
rcl
jmp
in
jmp
loope
jmp
jmp
cmc
cmc
cmc
jmp
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
pop
cli
cli
cli
push
div
push
icebp
icebp
jmp
jmp
loope
call
ffree
mov
addl
mov
jmp
cmp
incl
add
mov
sldt
add
pop
add
adc
dec
test
ret
ljmp
vsqrtsd
lret
ljmp
call
jmp
in
in
in
jmp
stc
stc
jmp
jecxz
decl
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
push
push
jmp
pusha
push
cmc
cmc
std
std
std
cld
cld
cld
cli
cli
cli
push
repnz
jmp
jmp
in
out
in
jmp
in
fcmovu
int
sar
test
xchg
xchg
lcall
movsb
movsb
incl
inc
incl
add
mov
sldt
add
push
add
repz
int3
ljmp
sar
pop
mov
aam
lods
in
mov
out
lock
in
out
push
out
out
jmp
jmp
cli
cli
cli
fdivr
or
or
add
add
add
add
add
add
add
add
add
add
add
add
jle
jle
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
repz
in
in
in
out
out
out
ljmp
fcmovnu
aam
aam
mov
mov
lcall
lcall
xor
add
sldt
add
add
add
mov
jl
lcall
int3
ljmp
incl
loopne
movsl
loope
pushl
out
lock
icebp
repz
jmp
repnz
sti
sti
sti
jmp
jecxz
decl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jp
jp
std
std
std
std
std
std
std
std
std
cli
cli
cli
stc
stc
stc
push
div
push
repz
out
out
out
call
loope
fcomp
fdivr
into
into
into
inc
mov
mov
test
test
cwtl
cwtl
cwtl
ljmp
sub
incl
add
mov
str
sldt
add
add
add
jnp
push
push
call
int3
jmp
int3
pushl
decl
loopne
pushl
in
out
dec
lock
fcomi
hlt
ljmp
push
icebp
icebp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
std
std
std
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
clc
clc
clc
push
repz
out
out
out
in
in
in
jmp
out
fdivrp
dec
int
mov
stos
stos
jmp
xchg
call
pop
pop
incl
add
jo
str
sldt
add
add
add
pop
push
xor
decl
ret
lret
incl
mov
loop
ljmp
ljmp
aad
hlt
inc
jmp
icebp
ljmp
imul
add
add
add
add
add
add
add
add
add
add
add
add
jg
jg
cld
cld
cld
std
std
std
sti
sti
sti
cli
cli
cli
clc
clc
clc
cld
cld
cld
push
repz
loop
ljmp
fcmovnu
rcl
sar
iret
iret
iret
jmp
addl
incl
add
sbb
str
sldt
add
add
add
sub
lahf
cmpsl
cmp
stos
decl
pushl
sar
popf
fucom
mov
jmp
ljmp
in
icebp
push
std
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
stc
stc
stc
incl
add
push
div
cld
cld
sti
cli
cli
stc
cli
stc
stc
cli
clc
clc
call
rcl
jmp
xlat
xlat
xlat
fcmovnbe
xlat
fdivr
lret
mov
mov
stos
call
outsl
outsl
incl
cmp
incl
add
cltd
add
add
str
sldt
add
add
add
add
add
mov
dec
push
lcall
mov
cmp
mov
pushl
in
lcall
mov
stc
std
call
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
pushl
xor
incl
add
incl
add
decl
clc
cli
stc
push
cld
std
push
call
pop
jmp
sub
mov
rcl
mov
fsubp
jmp
mov
decl
test
aaa
insl
jb
or
pop
incl
add
pop
add
add
str
sldt
add
push
add
adc
cmp
mov
jnp
aad
xchg
fcmovu
jmp
call
lcall
jmp
lcall
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
pop
fsubrp
jmp
ljmp
or
decl
ljmp
scas
out
jmp
fcmovnu
jp
inc
mov
jmp
test
incl
or
hlt
add
add
add
add
str
sldt
add
sbb
add
jmp
je
cmp
mov
decl
fsubp
ljmp
out
jmp
jmp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
aas
incl
inc
ljmp
xor
mov
out
pushl
jecxz
lcall
jl
call
mov
decl
add
lea
add
add
add
add
str
sldt
add
bound
mov
jmp
lret
ljmp
jge
aad
lcall
add
add
add
add
add
add
add
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
push
ljmp
push
push
incl
add
add
add
add
add
add
add
add
add
add
dec
pop
pop
dec
repz
mov
out
jmp
fsub
jle
fdivr
insb
enter
int3
sar
xor
add
add
add
add
add
add
add
str
sldt
add
add
add
enter
incl
jmp
leave
pushl
sar
adc
fdivrp
sahf
call
jecxz
dec
hlt
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
decl
repnz
jmp
popa
incl
add
incl
add
incl
add
incl
add
incl
or
ljmp
cmp
decl
fcomp
decl
int3
ljmp
enter
into
incl
decl
and
add
str
sldt
add
xor
add
clc
sbb
call
leave
jmp
leave
pushl
sar
adc
fdivr
pop
rol
mov
fcos
mov
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
push
decl
adc
sbb
xor
call
sar
push
push
push
incl
add
roll
add
str
sldt
add
addl
adc
decl
mov
lcall
decl
mov
jmp
leave
pushl
sar
cmpsl
in
ljmp
daa
sub
add
add
add
add
add
add
add
add
add
add
add
add
push
or
decl
adc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
adc
adc
add
adc
es
dec
decl
mov
incl
add
out
add
add
str
sldt
add
mov
adc
pushl
mov
call
mov
cmp
mov
push
mov
lret
call
ljmp
push
jge
call
push
incl
add
incl
add
incl
add
incl
add
ljmp
cmp
xchg
iret
sar
cs
inc
call
es
sbb
and
inc
bound
popa
test
cmp
cmp
pushf
cmp
xchg
cwtl
incl
xchg
jmp
add
add
add
add
str
sldt
add
add
add
cmpsl
add
sbb
cmp
lcall
ljmp
movsb
call
mov
decl
fdivrp
mov
in
icebp
ljmp
inc
inc
incl
add
incl
add
incl
add
incl
add
call
mov
fdivr
ja
iret
lcall
out
lcall
loop
incl
mov
jmp
int
pop
lret
sar
and
add
add
add
add
add
add
str
sldt
add
add
add
mov
sbb
sub
call
leave
decl
mov
pushl
sar
jns
aam
adc
decl
fcmovu
jmp
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
cmp
call
call
xlat
adc
jns
sar
jno
sar
pop
mov
ret
mov
pusha
incl
add
add
add
str
sldt
add
test
pop
pop
icebp
pop
insl
incl
mov
pop
int3
lcall
lret
jmp
int3
ljmp
iret
pushl
aam
adc
dec
incl
add
incl
add
incl
add
incl
add
incl
or
pushl
mov
incl
rcl
pushl
sar
outsl
lret
addr16
int3
jmp
int3
lcall
int
aas
mov
aas
incl
add
fildl
add
inc
str
sldt
add
xor
add
ret
add
push
jmp
insb
jb
inc
cmpsb
lods
call
lcall
jmp
lret
into
aam
ds
xchg
decl
and
decl
or
push
decl
adc
inc
jb
js
push
mov
decl
mov
jmp
lret
push
mov
mov
incl
or
add
str
sldt
add
add
add
arpl
add
in
adc
insb
incl
mov
dec
mov
call
ljmp
mov
movsl
call
mov
dec
mov
mov
lcall
ljmp
popf
movsl
ljmp
pushf
mov
decl
mov
call
inc
dec
incl
add
add
add
add
str
sldt
add
push
add
add
add
mov
pop
sbb
or
inc
decl
pop
decl
outsb
lcall
jg
cmp
mov
dec
mov
movsl
call
cmp
pop
push
decl
xor
decl
es
add
or
add
add
add
add
add
add
str
sldt
add
sub
add
push
add
add
add
mov
add
lock
or
add
sbb
add
sbb
add
pop
repz
push
lock
add
add
add
add
add
add
sbb
add
add
str
or
sldt
add
add
add
add
add
add
add
add
add
add
add
or
add
push
push
add
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
ltr
push
push
add
incl
add
inc
add
incl
add
incb
add
incl
add
clc
add
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incb
add
add
add
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
clc
add
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
pop
add
lock
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
incb
add
add
add
add
add
incl
add
rolb
add
add
jmp
add
add
add
push
add
ud0
add
cld
add
pop
incl
add
incl
add
clc
ud0
add
incl
add
add
add
add
adc
add
add
sub
add
add
and
adc
add
add
call
add
and
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
and
mov
add
add
add
add
add
add
xor
add
add
add
