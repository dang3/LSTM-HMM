push
mov
pop
inc
adc
incl
fs
push
mov
int3
add
int3
int3
addl
and
sbb
or
and
int3
insl
jbe
add
sbb
jbe
mov
inc
inc
mov
call
add
inc
and
jb
mov
inc
add
aaa
add
int3
push
push
int3
jmp
add
add
int3
int3
inc
rol
mov
sub
decl
sbb
int3
or
dec
int3
int3
mov
int3
add
bswap
and
test
testl
dec
lock
jns
int3
mov
rorl
ja
int3
jl
aam
dec
add
int3
cmp
testl
or
and
or
mov
push
add
ret
add
int3
add
add
or
add
pop
and
push
push
add
int3
push
int3
data16
lcall
add
inc
int3
rol
mov
add
int3
int3
inc
shll
and
add
inc
int3
int3
adc
int3
add
adc
dec
testl
jmp
icebp
int3
int3
int3
decl
push
add
aas
int3
fstl
jne
int3
int3
inc
push
sti
int3
lea
decl
adc
inc
xor
push
inc
and
aas
push
add
mov
push
add
add
incl
or
mov
mov
sub
lock
add
inc
int3
or
add
xor
int3
roll
add
add
ret
test
add
mov
int3
mov
and
icebp
addl
add
or
dec
add
dec
and
int3
inc
pop
int3
mov
add
add
add
int3
add
add
call
push
mov
adc
incl
and
and
call
add
int3
or
mov
add
push
push
int3
jae
add
push
add
mov
dec
add
call
int3
and
push
je
lods
pop
sbb
int3
adc
inc
add
ror
insl
add
int3
int3
call
add
add
inc
int3
push
add
lea
add
and
add
call
incl
add
int3
or
adc
int3
add
decl
mov
inc
add
and
inc
push
push
insl
xor
int3
int3
pop
dec
adc
add
dec
inc
add
int3
lea
and
ret
mov
add
mov
add
push
int3
int3
testl
or
adc
decl
inc
or
add
jae
and
decl
add
pop
add
or
call
add
ret
call
int3
mov
add
int3
push
ficomps
shlb
flds
add
js
lods
add
add
adc
js
or
mov
add
mov
cmpl
add
in
fsubrp
add
std
clc
mov
mov
add
scas
fwait
xchg
lea
jnp
mov
or
and
pop
add
loop
add
adc
inc
popa
andl
push
add
xor
add
add
call
cmpsl
incl
sub
xchg
nop
xchg
jne
and
cmp
repnz
add
aad
lcall
add
outsl
ja
jle
add
or
roll
and
orl
test
mov
add
add
js
xor
push
mov
push
lods
lret
push
add
jecxz
js
push
mov
add
and
pop
lret
das
in
add
sbb
push
roll
add
das
add
clc
arpl
or
add
into
outsl
push
pop
sub
mov
mov
incl
xchg
sub
xor
jl
loop
fstpl
sub
add
movsb
out
into
dec
jp
add
push
xchg
pop
adc
add
or
ds
das
out
insl
dec
call
clc
cmc
and
imul
dec
jecxz
mov
add
add
add
xchg
sub
add
cmpsb
movsl
and
incl
mov
add
add
in
or
loope
pushf
mov
incl
add
push
jmp
subl
pop
add
add
addr16
add
add
mov
add
or
fdivrl
add
bound
aas
rolb
mov
and
into
or
add
add
add
outsl
mov
jg
pop
add
es
inc
add
inc
add
or
and
sti
cmp
xchg
mov
mov
jae
mov
mov
mov
mov
add
loop
dec
jnp
jbe
incl
add
imul
inc
add
inc
add
xchg
add
lcall
out
jb
add
js
mov
mov
dec
cmp
inc
std
popa
xchg
or
inc
cmpsb
inc
add
mov
das
ficoms
mov
mov
add
bound
bound
add
add
and
test
mov
mov
stos
aad
les
ljmp
add
cld
add
add
add
mov
cmp
shll
push
add
ja
fs
add
jecxz
ljmp
gs
imull
or
or
test
jb
icebp
rol
ss
and
push
and
sbb
ja
mov
add
add
insb
filds
sub
rolb
add
add
add
add
add
stc
sub
cs
add
and
add
xchg
and
add
add
add
sarb
rcll
add
xchg
push
xchg
adc
and
jle
and
leave
mov
add
int3
mov
add
inc
add
mov
inc
sbb
cwtl
cmp
lock
jle
aad
jmp
or
pop
aad
daa
xor
outsl
and
inc
cmpsl
aas
mov
out
dec
jns
jecxz
add
add
add
add
movsb
xchg
js
sub
xlat
mov
and
sub
xor
dec
mov
inc
add
push
call
add
daa
aam
cmpsb
and
or
test
pop
xchg
add
add
add
dec
test
ret
cmpsb
lret
imul
insb
mov
test
add
pop
add
jns
sub
add
mov
add
das
and
std
cmpsb
inc
mov
add
add
es
mov
xchg
add
xchg
pop
push
add
add
cli
ljmp
add
adc
add
add
add
or
dec
out
and
jle
and
push
mov
test
and
adc
mov
aam
inc
dec
add
inc
add
enter
inc
fnstenv
add
add
incl
add
int
add
mov
cmp
int3
shll
test
int3
test
ror
int3
ret
mov
mov
stc
stos
aas
push
pop
add
xor
addl
imul
add
mov
add
add
jmp
add
jle
sbb
cmp
add
out
es
add
push
add
loop
mov
inc
add
ret
loop
leave
add
loopne
orl
sbb
jbe
loop
add
hlt
mov
mov
add
mov
mov
popa
repz
repz
test
scas
add
data16
ret
push
or
mov
cmpsb
std
add
dec
and
out
cli
cmpsl
in
cmpsb
repz
pop
add
add
dec
add
adc
add
stos
or
adc
sti
gs
add
sbb
xchg
dec
jg
or
push
push
incl
call
pusha
cmp
add
xor
adc
ds
add
push
add
add
pusha
fs
roll
dec
or
sbb
cmp
fisubs
jae
dec
or
add
and
mov
loop
sbb
add
or
xlat
outsl
mov
cmp
add
add
jle
and
cltd
in
insl
imul
arpl
sbbl
add
pop
mov
imul
jmp
adc
add
call
scas
xlat
xchg
jmp
add
cmp
pop
fucomip
dec
and
pop
call
dec
inc
and
add
add
add
add
popf
pop
push
in
cmp
jnp
add
cmpsb
fldenv
add
daa
dec
aas
lds
out
call
add
jne
out
add
add
add
add
dec
cs
mov
or
in
loop
cwtl
lock
dec
add
or
add
jecxz
out
xacquire
repz
divb
test
xor
outsb
cmp
add
fiaddl
rorb
repz
jecxz
repz
mov
cmpsb
outsb
jne
add
dec
test
add
add
jbe
loope
cs
push
add
jp
xchg
add
add
jecxz
lret
je
outsl
cwtl
std
add
add
and
sbb
orb
jp
cltd
sub
xchg
addl
sbb
pop
gs
lds
lret
add
clc
mov
and
dec
jno
add
add
loop
dec
test
add
ret
add
add
inc
aad
faddl
mov
add
mov
out
roll
add
fdiv
pop
and
add
outsl
or
mov
sbb
add
or
addb
iret
rcrl
adc
or
add
aas
mov
jle
or
rcrb
and
add
and
mov
mov
add
cmpsb
arpl
adc
pusha
and
inc
and
fs
pusha
cli
rolb
jno
rolb
push
xor
add
add
add
cmpsl
add
add
mov
in
add
add
cltd
dec
jne
add
incl
enter
dec
and
push
mov
loop
xor
xor
add
push
and
loop
add
add
test
mov
dec
add
add
ror
nop
and
add
addr16
hlt
push
dec
orl
imull
sbb
add
cmp
call
sub
loop
add
ljmp
int3
push
int3
int3
int3
int3
add
int3
int3
ret
inc
jbe
lcall
cmp
and
loop
xchg
fmuls
and
test
or
in
in
fdivrs
add
adc
jecxz
pop
popa
daa
lret
incl
add
in
rcll
mov
loop
cmp
and
lods
loop
add
repz
inc
cmp
push
aas
nop
sti
cmp
add
push
cli
push
pop
adc
mov
ljmp
dec
cltd
jecxz
add
add
pop
jecxz
add
or
xchg
add
orl
in
add
jb
add
sbb
rcll
add
mov
push
mov
inc
ret
mov
add
xor
out
lcall
add
add
outsl
add
mov
add
mov
mov
jno
xor
adc
add
or
add
add
push
insb
or
cmp
and
add
add
or
push
das
int3
or
jecxz
ja
scas
jmp
enter
pop
repz
mov
lcall
lret
push
shrb
incl
add
js
and
das
add
ja
mov
add
push
add
aam
jae
add
add
adc
add
push
sub
leave
add
sbbb
add
xor
ljmp
and
or
add
add
jmp
je
cmp
outsl
pop
js
add
repz
in
jle
xlat
mov
mov
incl
xchg
lea
adc
xor
nop
insb
pusha
add
cli
dec
mov
repz
add
push
xchg
push
mov
in
add
add
add
add
xor
or
js
push
pop
push
and
adc
in
jns
scas
add
into
lea
add
and
enter
add
cmp
or
les
fnstsw
add
add
push
sti
aam
aaa
add
outsb
xor
ja
pop
add
mov
and
sub
add
dec
mov
mov
popa
incl
fistps
incl
add
sub
mov
mov
data16
ret
mov
add
jns
incl
add
int3
add
add
or
mov
int3
int3
and
mov
add
in
add
cld
add
cmpsl
loop
push
mov
out
test
add
add
pop
testl
mov
add
loop
and
call
lret
jae
fdivs
push
xor
dec
aad
testb
xor
jae
and
idiv
incl
add
or
aaa
dec
loope
mov
in
test
add
and
inc
add
ds
movsb
cltd
pushl
sbb
add
out
cwtl
sbb
dec
add
push
pop
cwtl
or
jle
add
add
fldl
add
mulb
add
add
pop
push
fs
adc
out
fwait
cmp
mov
mov
sbb
into
je
add
mov
add
add
push
ficoms
add
mov
dec
inc
imul
add
pop
add
sub
popa
add
jle
xchg
sub
movl
aad
and
lds
jns
mov
add
clc
dec
arpl
push
mov
decl
push
outsl
and
call
or
mov
jle
add
out
mov
add
out
lret
xlat
add
push
or
pusha
sahf
stc
sbb
add
bound
jns
add
add
add
jmp
dec
push
push
mov
jbe
movsl
mov
decl
or
scas
lods
loope
mov
call
ss
mov
ret
cli
add
push
and
add
shll
and
jbe
add
add
incl
outsb
aaa
in
adc
inc
adc
imul
lcall
adc
mov
add
pop
dec
or
add
jmp
xchg
movsb
out
cmpsb
add
add
add
cmp
add
sbb
fwait
push
ret
bound
add
cmp
call
lods
inc
push
add
pop
and
loope
add
or
add
add
jo
fwait
incl
add
pop
add
jbe
cs
add
adc
and
icebp
movsl
push
fdivs
int
and
and
pop
add
add
and
push
add
mov
add
add
jp
jae
mov
jecxz
dec
cld
scas
ljmp
add
cmpsl
add
sub
les
add
add
dec
and
add
lea
rolb
in
add
mov
call
or
or
add
cmp
cltd
dec
fsts
mov
add
add
add
loop
ret
int3
add
shlb
call
int3
rorb
sbb
jae
add
inc
aaa
dec
jp
add
call
xchg
add
les
add
add
movsl
mov
xchg
ret
add
stc
ja
cld
loope,pn
jbe
mov
or
add
dec
and
mov
jno
decl
or
add
or
adc
add
push
rolb
and
and
icebp
adc
aad
jmp
sub
rclb
and
add
mov
aaa
add
loop
lods
loop
lods
push
pop
inc
add
xor
add
in
out
movsl
stc
and
repz
scas
ljmp
add
mov
pop
in
jg
add
add
imul
add
add
add
test
push
and
sbb
pop
call
mov
push
mov
add
sti
mov
inc
add
xor
in
movsb
sbb
rolb
add
repz
lea
js
loop
add
push
cmp
add
cld
pop
aam
push
add
stc
incl
loop
js
add
addl
pushaw
add
add
and
mov
add
ljmp
loop
add
mov
push
or
jmp
int3
popf
dec
cld
inc
mov
push
and
jecxz
aam
xor
add
ds
or
push
xor
add
rcrb
mov
add
xchg
add
mov
cmp
adc
or
in
inc
gs
xchg
push
and
sbb
or
sahf
hlt
mov
jle
arpl
sub
incl
imulb
add
add
add
out
cmp
orl
mov
call
add
or
push
mov
add
xchg
and
and
add
add
pop
push
mov
add
ror
add
and
addl
add
int3
add
and
ret
add
cmpps
int3
push
add
and
dec
cmp
add
add
test
inc
jo
cmc
clc
dec
lcall
ja
add
xor
add
cmc
in
inc
mov
add
pop
dec
cmp
sub
inc
add
pushf
fisubs
add
add
lahf
lods
lret
jge
add
add
mov
and
or
outsl
cmpsl
dec
cltd
push
mov
jge
and
dec
cmp
xor
add
lods
loop
sbb
add
add
ja
fcomps
and
and
aaa
push
sbb
add
pop
pushf
pop
jp
jmp
jecxz
std
repz
mov
add
add
inc
ret
adc
add
lea
add
add
mov
pop
cmp
hlt
pop
adc
incl
add
xchg
inc
or
movsb
wrmsr
out
mov
jbe
cmc
and
daa
out
add
add
les
pop
cmp
add
out
inc
mov
add
cmpl
sub
int
adc
add
push
jg
pop
mov
jnp
or
bound
or
rcrb
and
jle
add
dec
jmp
mov
add
mov
adc
add
add
rep
add
fidivrl
ljmp
sub
movsl
mov
mov
les
pop
push
popf
cmpsl
sbb
stos
add
or
sbb
repz
jg
popf
fadd
cmp
outsl
loop
rolb
hlt
and
add
repnz
add
sahf
mov
push
xor
out
pop
roll
inc
add
aad
js
add
add
out
cmp
cwtl
fdivrs
add
mulb
pusha
out
adc
mov
int3
mov
mov
cmp
and
and
jecxz
mov
lods
repnz
sbb
add
mov
pop
add
add
incl
int
xor
dec
add
or
sbb
mov
scas
cld
subb
aad
sub
add
loop
add
inc
and
sbb
sti
pop
mov
add
or
add
add
shlb
jle
add
jmp
and
out
movsl
inc
aam
out
mov
enter
je
add
incl
pop
inc
sbb
push
cmp
pop
cmp
mov
add
jle
push
ficompl
add
jle
and
in
push
outsl
xchg
jne
clc
add
xor
mov
aaa
pusha
mov
fisubrl
add
imul
add
xchg
add
add
add
jg
pop
xchg
incb
mov
add
xor
push
add
push
adc
pop
add
or
mov
mov
add
or
out
cmp
add
das
lahf
sbb
add
lret
je
incl
repz
popa
xorl
mov
fisttpll
dec
pop
scas
pop
add
inc
or
loopne
add
jg
loop
cwtl
lret
mov
push
imul
int3
mov
jne
add
inc
sub
ljmp
mov
mov
int3
mov
add
add
add
add
jge
sub
add
test
addl
mov
ds
mov
push
adc
in
je
add
repz
test
insb
iret
stc
mov
test
add
incl
add
adc
incl
test
cmc
jecxz
cltd
jmp
imul
divl
add
out
lock
mov
add
add
cmp
in
xor
stos
add
add
add
or
fimuls
popf
stc
cwtl
pushf
xor
add
cmp
mov
adc
out
outsb
lods
pop
loopne
call
dec
add
das
add
aas
mov
mov
add
fnstsw
jle
and
mov
and
add
xor
negl
pushf
outsl
jle
int3
add
add
nop
add
xor
add
pop
and
dec
iret
imul
jecxz
pop
mov
mov
pop
or
push
je
popf
pop
in
aas
mov
loope
mov
loop
jae
cmp
sbb
mov
popf
cmp
add
add
add
jo
xchg
add
jecxz
jno
push
addl
dec
sbb
sbb
loop
das
xor
jmp
lods
and
incl
outsl
call
ljmp
icebp
js
in
add
je
hlt
aaa
add
fists
add
pop
in
add
adc
xchg
ja
loop
decl
shlb
inc
add
stos
mov
imul
cltd
mov
repz
xchg
pop
stos
add
add
or
or
xchg
xchg
add
add
pop
mov
xor
add
and
out
inc
or
inc
add
and
and
mov
mov
mov
gs
add
stos
jmpw
incl
add
les
add
push
push
push
jecxz
mov
out
add
insb
xor
imul
pop
pop
xchg
add
or
add
add
popa
pop
inc
outsl
jns
scas
ljmp
decl
or
jg
add
add
loop
in
dec
and
scas
or
mov
divl
add
or
mov
mov
add
add
icebp
jg
jle
outsl
jecxz
or
ds
jle
mov
lret
int
clc
movb
add
imull
mov
push
addr16
hlt
dec
lods
mov
mov
cli
mov
aam
add
add
xchg
xor
out
mov
add
out
add
fildl
jle
add
dec
dec
mov
mov
jle
dec
or
or
mov
popf
mov
add
and
pusha
cmp
cltd
pushf
add
repz
jle
add
bound
decl
mov
dec
sub
push
xlat
xchg
and
mov
or
pushw
lds
add
dec
pushf
lods
lods
push
sbb
repz
jle
ficomps
lea
add
jle
add
int3
call
push
push
or
int3
pop
push
imul
add
mov
stc
addr16
cltd
xor
xlat
je
jecxz
aaa
mov
add
leave
addr16
int
add
and
dec
lods
adc
add
cmp
push
add
add
add
divl
push
adc
js
or
cmpsl
rcr
call
xchg
pop
inc
jge
add
mov
add
dec
add
vmovmskps
dec
nop
lcall
mov
incl
imul
add
jg
jl
jb
sti
ds
add
add
xlat
xor
add
pop
add
mov
mov
mov
sub
add
pop
mov
sti
add
add
add
adcb
incl
add
subl
lcall
inc
adc
or
mov
push
xchg
push
jnp
add
add
jns
mov
cmpsl
enter
add
popa
push
ljmp
lcall
imul
xchg
add
cmp
fldl
or
incl
add
add
jmp
dec
ja
pop
add
jmp
jg
or
add
cmp
incl
add
ret
push
and
fwait
sub
pop
out
add
mov
add
sbb
mov
add
xorl
mov
xor
stos
pop
outsl
pop
add
add
sbb
jecxz
add
decl
add
and
add
mov
int3
add
int3
add
add
add
push
incl
mov
aaa
inc
dec
enter
add
in
out
add
int
shlb
jecxz
add
inc
in
shll
scas
mov
add
mov
addl
int3
pop
add
add
or
add
push
push
push
mov
sbb
xorb
sub
cmpsb
jl
add
aaa
pop
cmp
pop
je
add
mov
or
add
add
leave
mov
add
mov
vpshlw
cltd
mov
push
stos
js
cmpl
and
lods
stos
add
add
add
mov
xchg
pop
add
mov
mov
imul
add
add
lret
fdivs
or
mov
out
lahf
cmp
iret
dec
mov
mov
add
inc
incl
addl
or
loop
or
rolb
outsl
jmp
jl
mov
add
add
pop
out
out
mov
mov
es
add
pop
cmp
add
add
sub
lock
add
andb
push
add
dec
xchg
sarl
add
add
and
lcall
pop
mov
lret
incb
lahf
cmc
outsb
or
add
inc
movsl
loop
incb
add
add
iret
adc
std
pop
lret
add
cmp
pop
cli
out
les
push
jle
jg
add
push
divb
add
test
add
in
dec
test
pop
add
das
xor
arpl
or
or
mov
test
pop
adc
and
jecxz
add
add
add
adc
add
out
sbb
test
and
outsb
dec
aaa
mov
adc
lret
lods
outsb
pusha
cli
add
stos
int
cmc
stc
incl
ljmp
imul
add
lock
jg
or
in
or
or
or
xchg
shr
aam
add
xor
imul
mov
pop
popa
mov
out
mov
lret
adc
sarl
jl
inc
mov
or
push
jmp
add
daa
xlat
mov
loope
mov
cwtl
fs
outsl
add
add
hlt
insl
cltd
cmp
add
add
push
loope
mov
or
call
int3
int3
int3
inc
push
push
fisttpll
add
and
mov
ret
int3
mov
int3
lock
push
add
inc
add
or
add
add
push
xor
sub
sub
leave
add
pmaxub
add
mov
cmp
inc
inc
loopne
ja
add
jle
add
dec
out
cmpl
rolb
in
mov
or
fwait
jg
add
or
in
lds
add
loopne
clc
insl
inc
pop
adc
out
mov
inc
std
add
jno
dec
daa
addl
add
jmp
in
add
add
add
add
ret
and
and
push
xchg
add
mov
loop
push
fcoms
add
add
roll
mov
loopne
pushf
fsubs
jle
fwait
call
call
int
cwtl
neg
das
and
cmpsb
jecxz
add
pushf
inc
scas
movsl
lds
adc
xchg
pop
out
incl
cwtl
popa
mov
or
jle
aas
scas
push
cs
xchg
in
push
scas
dec
and
mov
push
fs
add
jmp
adc
cli
mov
inc
push
sbb
xchg
add
mov
add
adc
or
out
sub
mov
loope
jo
dec
sub
jmp
add
mov
add
pushl
sbb
dec
or
xchg
add
or
push
xor
mov
add
add
fwait
adc
jb
add
xor
sub
and
add
pop
fwait
sub
inc
pop
inc
cmp
inc
pop
xchg
das
mov
ja
lahf
jle
test
mov
push
adc
addl
jg
add
add
outsl
add
loop
shll
add
add
push
decb
loop
ljmp
cmp
push
add
add
and
int3
aam
imul
add
add
add
mov
add
jecxz
mov
js
movsl
and
add
xorb
add
and
add
add
add
mov
das
cs
add
push
hlt
fwait
clc
add
add
add
lock
insb
push
mov
dec
incl
pushf
mov
roll
add
jecxz
jne
mov
jae
nop
int3
mov
inc
adc
add
and
test
rolb
add
mov
and
and
aas
test
in
and
jae
mov
inc
jne
jle
stos
in
sbb
lods
lods
lret
add
jmp
mov
add
pop
add
add
pusha
pop
jns
or
add
add
mov
add
add
or
inc
inc
lods
and
pop
icebp
cld
ficoml
pop
les
loop
mov
add
incl
and
sbb
ret
and
sub
ret
les
int3
mov
ret
xor
loopne
int3
mov
pushl
fidivrs
jg
in
and
sbb
je
outsb
loope
add
sub
and
es
or
cmp
inc
jp
decl
push
mov
repz
jmp
xchg
in
out
mov
add
jmp
add
jae
in
add
outsl
add
add
in
xlat
or
add
jle
push
aad
call
jmp
xchg
shll
call
jecxz
push
jb
fcoms
loop
pop
insl
or
mov
add
pop
mov
pop
xchg
and
xchg
jle
pop
aam
jb
add
adc
arpl
or
add
add
jno
jne
add
mov
and
repz
add
incl
jb
ljmp
cmp
in
lcall
loop
and
mov
jle
inc
mov
movl
das
pop
aas
loope
add
ds
aam
or
call
adcb
call
or
das
add
out
xchg
xchg
add
mov
inc
call
cmp
add
scas
push
testl
add
jns
in
arpl
inc
aas
xchg
adc
int
adc
xor
cmp
mov
cs
add
incl
jb
jle
daa
mov
add
add
fstpl
jle
rclb
inc
and
add
mov
popa
aas
pop
fsubs
roll
add
in
in
rorl
orl
and
adc
add
jb
lock
add
jecxz
xchg
add
jecxz
mov
jg
and
add
sbb
add
dec
xchg
cmp
add
push
jle
in
xor
jge
add
add
test
inc
fwait
insl
iret
add
xchg
notb
and
add
das
xor
xchg
add
push
add
flds
add
clc
xchg
jg
outsb
xchg
add
and
add
add
jmp
out
dec
lods
in
and
and
out
sbbl
rorb
add
loopne
sahf
add
and
ljmp
dec
mov
and
lea
add
add
add
add
stos
dec
adc
test
add
loop
add
movsl
inc
imul
mov
add
mov
sub
dec
test
idivl
push
in
das
cmp
add
add
out
pop
mov
add
xor
add
mov
in
cmp
lods
or
lcall
and
inc
sbb
add
sub
arpl
jge
and
das
add
lea
sbb
hlt
lods
stos
cmp
add
cmpsl
rol
mov
add
add
inc
push
pop
add
loopne
adc
cmc
jecxz
movsl
mov
mov
enter
add
sbb
add
loope
push
pop
or
and
mov
or
das
jl
mov
add
add
xor
add
popa
stc
jnp
inc
sti
dec
push
and
jecxz
or
cmp
xchg
and
dec
push
cs
lock
add
add
add
and
push
lea
mov
add
adc
int3
and
int3
int3
jae
incl
incl
add
add
sti
jle
jmp
decl
in
inc
dec
imul
jns
jg
mov
sbb
pop
push
inc
loop
add
sub
add
add
pop
test
or
cld
adcl
add
add
mov
add
ja
cwtl
add
lods
call
jns
add
jns
push
add
pop
loop
test
jle
and
mov
jg
popa
data16
add
mov
das
lock
xchg
add
lcall
test
jno
jecxz
pop
add
and
inc
out
ljmp
divb
add
loope
add
and
out
pop
add
add
pop
rol
sub
lret
loopne
test
xor
add
sbb
dec
xchg
out
and
xor
mov
pop
pop
or
and
lods
int
outsl
pop
lcall
in
stos
test
or
mov
loopne
inc
cmp
aam
sti
lcall
jecxz
loopne
repz
mov
add
mov
add
test
mov
stc
jecxz
fisubl
fnstenv
loopne
push
ljmp
in
loop
mov
sub
add
call
aas
add
add
loope
add
incl
jmp
xchg
push
jecxz
out
xor
add
xchg
rorb
mov
mov
add
add
dec
shrl
and
add
fisubl
push
add
xchg
jecxz
hlt
out
jecxz
add
pop
mov
pop
mov
sbb
sub
orb
sub
add
mov
and
add
add
push
fisubs
loope
mov
or
and
dec
lock
mov
jae
xchg
push
mov
sbb
xor
add
xchg
xchg
add
mov
inc
mov
and
add
sbbl
and
add
popa
lret
add
add
inc
lods
lcall
add
and
add
pop
andb
pop
sbb
mov
lret
add
out
jl
cmpsb
jecxz
add
add
or
or
or
lods
xchg
add
add
add
call
iret
sub
jmp
inc
movsl
sbb
jle
popa
les
jg
into
into
not
scas
and
incl
int3
mov
divb
int
fistl
jecxz
add
mov
fadds
add
push
cmpsb
mov
mov
add
xor
out
add
add
pop
add
ljmp
nop
pop
add
jae
xchg
daa
add
bound
mov
mov
and
pop
cs
add
jb
rcl
add
add
das
mov
add
push
add
pushf
sub
xchg
test
test
pop
rolb
add
mov
xchg
mov
decl
mov
add
sarb
add
dec
and
add
add
imul
add
jo
mov
xchg
in
cltd
push
rolb
push
dec
xor
xchg
lods
roll
add
jecxz
frstor
pop
shrl
jle
movsb
in
sti
loop
add
add
add
jmp
xor
add
out
add
mov
mov
clc
mov
mov
jmp
inc
fdivr
mov
add
mov
call
add
scas
int3
and
push
and
add
int3
int3
and
and
int3
push
lea
aas
clc
les
add
out
add
das
add
add
jb
add
fwait
sub
in
movsl
push
add
add
aas
test
cmpsb
mov
jle
add
xor
xchg
add
add
add
add
jg
mov
add
sub
mov
cmpsb
mov
pop
add
or
sahf
in
outsl
or
or
add
mov
lret
jnp
and
fdivs
inc
add
dec
in
add
repz
leave
add
mov
push
mov
inc
mov
inc
inc
sub
in
add
xchg
jnp
stos
inc
sub
loope
jbe
dec
jecxz
add
add
add
jl
mov
outsl
jle
mov
icebp
test
ljmp
inc
mov
adc
xor
and
add
incl
jle
fcoml
inc
cmpsb
jge
add
jecxz
add
pop
stos
xlat
add
mov
xchg
lret
xor
das
add
mov
js
dec
mov
jno
mov
add
jl
stc
and
mov
add
cmp
push
mov
inc
dec
mov
dec
add
cmp
add
ret
or
aam
ficoml
es
add
sbb
inc
ret
add
inc
sub
add
pop
inc
lret
dec
add
add
std
rcrl
loope
push
push
and
add
jl
push
in
add
add
add
add
fs
clc
outsl
sbb
push
mov
das
push
adc
inc
lahf
add
addl
xchg
lret
cld
ret
add
incl
and
and
add
dec
or
jle
aad
fsubrp
add
mov
adc
and
and
add
or
cltd
lret
cmp
bound
out
adc
or
pop
add
or
jle
and
into
add
sub
mov
loop
aaa
lret
fs
mov
mov
add
test
call
push
sub
or
add
js
mov
or
add
add
and
add
mov
out
sub
insl
roll
and
mov
add
jle
lods
mov
add
pop
stos
add
loope
adc
in
out
add
add
mov
push
shr
test
add
xor
lods
mov
jae
cwtl
jae
sub
popa
push
add
enter
dec
daa
inc
add
movsb
push
add
and
xchg
subl
add
ds
out
je
fcmovnbe
out
adc
call
push
push
add
lret
add
andl
inc
add
loop
and
mov
and
push
add
push
leave
aas
sub
pop
incl
mov
push
mov
cmpsb
out
movb
sbb
jcxz
loop
mov
xchg
add
add
or
je
add
or
aas
arpl
add
lcall
add
add
scas
ds
lret
mov
mov
or
push
loope
mov
add
outsl
in
jle
cmp
add
add
add
dec
push
adc
jl
jne
jmp
int3
int3
clc
int3
mov
incl
add
or
fldl
add
add
adc
test
add
add
and
add
or
into
or
add
ljmp
gs
push
das
sbb
xchg
insb
and
aam
add
or
in
shlb
incl
orl
dec
dec
loop
adc
dec
cmc
jecxz
or
add
mov
les
jecxz
pop
mov
and
sti
pop
jno
add
pop
data16
adc
sbb
add
add
inc
dec
add
icebp
xor
test
jle
add
and
loop
push
add
add
inc
xor
add
sub
add
add
incl
out
clc
lret
and
andb
mov
adc
and
add
add
add
xchg
add
add
divb
test
add
add
ss
add
dec
sbb
add
jg
aad
sbb
or
loop
loop
and
shl
les
jmp
call
lea
dec
add
inc
inc
xchg
shl
rep
pop
cmp
push
cmc
inc
icebp
pop
cmp
jl
mov
call
or
sahf
cmp
jnp
or
add
adc
inc
pop
cmpsb
bound
in
mov
imul
add
cld
cmc
int
add
and
and
add
mov
add
mov
xchg
in
sub
add
xchg
jmp
or
arpl
add
dec
or
sub
add
ss
sbb
repz
or
add
scas
push
fistpll
push
push
in
add
xor
sti
das
mov
push
out
ret
dec
jnp
and
mov
in
mov
inc
sbb
jg
add
clc
lcall
in
push
pop
mov
and
mov
xor
inc
add
in
lahf
movsl
mov
add
xor
movsl
add
or
aas
inc
das
add
mov
and
or
sbb
mov
loop
sub
lret
add
div
mov
add
add
add
and
jle
cmp
add
and
in
in
mov
add
and
std
loop
and
mov
add
xchg
aas
add
scas
pop
shl
sub
add
xor
pop
push
mov
dec
test
stos
xchg
das
add
add
or
lahf
cld
sti
xor
in
inc
popa
test
andl
or
and
and
cwtl
add
add
add
push
sub
add
mov
jle
or
repz
add
in
cmp
add
fisttpl
adc
xchg
dec
aad
jo
add
cmp
add
jbe
sub
les
add
out
xchg
xlat
add
add
dec
add
mov
jecxz
add
in
jle
popl
add
mulb
jae
popf
sahf
mov
dec
push
xor
ret
decl
add
dec
fs
mov
ljmp
adc
int3
in
mov
add
adc
lea
add
bound
and
lea
add
and
bound
add
add
cmp
test
incl
clc
incl
int3
mov
jg
sbb
push
add
incl
adc
add
fiadds
cltd
xor
fadd
pop
mov
mov
push
jb
aaa
adcl
mov
add
imul
sahf
dec
add
add
mov
pushf
loope
add
icebp
mov
jmp
sahf
xchg
jae
mov
jns
add
pop
add
add
add
leave
xor
pop
add
add
add
add
add
mov
fucomi
xor
shll
jne
add
ja
mov
add
loop
and
jmp
xor
push
call
add
imul
or
in
fcmovnb
addb
jecxz
das
mov
insb
mov
jmp
incl
push
in
rolb
add
add
or
xor
loopne
add
jb
stc
std
mov
add
and
mov
loopne
scas
add
add
fsubrs
or
sub
jle
ds
enter
stos
sub
push
pop
hlt
pusha
fldcw
das
add
and
and
rolb
sub
les
and
ja
add
add
add
push
add
jnp
mov
add
push
stc
jge
xor
shl
push
add
cltd
testb
incl
add
jg
repz
xlat
repnz
add
cmp
add
and
push
and
jecxz
shll
add
pop
add
inc
sbb
mov
or
int3
popf
xchg
std
je
add
add
decl
outsb
mov
loopne
add
dec
sbb
sbb
or
add
add
xor
lcall
out
lahf
out
mov
data16
lahf
frstor
aaa
and
cli
push
add
out
aas
jmp
loop
mov
test
and
mov
lret
add
jecxz
jmp
rorb
mov
fisubl
and
push
into
in
inc
in
dec
cld
push
inc
and
add
iret
sbb
add
add
add
jo
pushf
adc
add
and
dec
out
outsl
jge
inc
inc
mov
lret
mov
rclb
add
pop
and
add
inc
int3
int3
int3
jae
ret
push
add
dec
and
int3
mov
int3
add
xor
jns
add
leave
in
outsl
mov
in
add
mov
add
cmp
in
jmp
stos
pop
mov
or
adc
or
sbb
mov
and
push
stos
or
call
dec
pop
sti
adc
add
add
push
cmp
add
mov
aaa
adc
outsl
pushl
mov
stos
mov
add
xor
jecxz
adc
add
decl
sub
add
les
in
cmp
xor
les
mov
or
test
popf
add
pop
mov
cmp
add
add
incl
or
push
aam
mov
mov
imul
lcall
out
inc
jle
xor
add
lret
gs
pop
jecxz
add
xchg
sub
sub
fwait
outsl
add
or
mov
or
add
outsl
test
or
inc
testb
jg
cli
cmp
and
dec
add
pop
jmp
add
sbbl
jl
xor
jecxz
inc
gs
fpatan
inc
add
out
mov
add
mov
fisttpll
das
or
or
or
and
adc
or
sub
or
test
mov
add
pop
add
ja
mov
mov
incl
das
shr
inc
xchg
jle
nopl
jbe
repz
add
mov
and
push
fnstcw
add
cmp
dec
mov
int3
dec
int3
add
decl
daa
in
addl
jnp
jp
icebp
add
add
into
scas
jecxz
inc
mov
call
les
add
dec
sbb
add
mov
pushf
data16
les
dec
sbb
jnp
add
add
pushf
enter
cmp
push
pop
adc
loop
mov
add
movsb
pop
add
jecxz
in
mov
loopne
imul
mov
mov
sub
insb
add
ljmp
jmp
jecxz
sbb
jle
add
dec
add
mov
xor
movl
shl
call
cmp
fimull
xor
jecxz
stos
jns
out
and
push
call
jbe
sub
dec
pop
add
add
dec
add
or
add
jle
in
add
dec
mov
or
and
dec
mov
repz
or
xchg
out
std
fs
push
add
and
xor
call
lds
dec
add
cld
add
add
sub
add
pop
xor
jbe
xchg
mov
cs
loop
popf
arpl
jmp
out
inc
pop
xchg
scas
in
adc
sub
test
call
push
cmp
add
movsl
mov
cmc
int3
and
mov
int3
and
add
int3
int3
int3
add
mov
mov
mov
mov
sub
add
push
iret
or
add
ja
add
stos
adc
das
loope
cmp
pushf
and
add
cmp
or
jge
add
mov
add
dec
jle
lcall
mov
or
dec
and
cmp
adc
or
mov
jmp
add
cmp
add
stc
fisubs
push
js
adc
add
fstps
inc
jns
add
mov
dec
add
mov
add
incl
mov
xchg
adc
loope
scas
jp
cmp
add
dec
add
std
add
push
mov
loope
add
add
and
sub
ret
out
jl
stos
les
out
pop
add
add
add
cmp
les
add
bound
jae
add
add
add
and
in
add
in
fisubl
roll
adcb
lret
jmp
ficompl
les
add
addl
int3
adc
add
sbb
in
mov
adc
in
add
add
and
xchg
dec
xchg
mov
stos
out
push
stos
jle
or
adc
or
mov
and
ljmp
leave
inc
loopne
and
jmp
pop
fidivl
inc
inc
add
jl
rolb
lahf
mov
xchg
mov
sahf
decl
and
mov
add
pop
ljmp
out
dec
inc
andps
inc
leave
mov
add
call
xchg
test
add
jb
movsb
icebp
add
jo
lret
jne
inc
lret
sbb
ret
outsb
inc
xchg
ret
enter
std
add
add
add
and
push
add
add
inc
sbb
add
xor
imul
add
push
mov
add
xor
push
add
add
mov
cmp
or
mov
add
add
in
dec
out
nop
popf
jg
mov
jnp
adc
aas
add
lds
ljmp
cmp
or
jae
incl
and
push
mov
outsb
mov
sbb
mov
loope
add
ds
jmp
mov
add
pop
pop
lods
pop
add
pop
das
add
sub
cmp
daa
test
or
cli
jge
add
add
add
cld
aas
sub
add
call
mov
addl
lret
and
dec
lods
mov
int3
add
or
add
add
pmulhuw
jecxz
in
jmp
and
and
add
push
mov
jle
inc
xor
fwait
scas
add
pop
call
add
mov
add
cmp
add
out
add
ds
scas
push
mov
or
dec
add
cmc
adc
jns
mov
icebp
mov
dec
add
add
ror
lahf
incl
add
sbb
inc
add
adcl
add
scas
and
or
adc
and
pop
add
mov
or
lds
sub
add
add
add
nop
lods
scas
in
push
jbe
ret
add
mov
dec
add
sbb
add
add
cmp
ja
outsl
inc
dec
lret
ret
and
and
les
pop
incl
and
lock
and
add
add
aas
add
or
repz
aaa
mov
and
inc
push
mov
and
mov
push
add
lods
dec
ret
add
sbb
iret
lods
add
add
sar
outsl
sahf
add
loop
or
out
shlb
add
add
pop
mov
sub
loopne
add
pop
daa
push
addr16
cmpb
decl
jmp
out
add
add
test
and
add
fdivr
mov
dec
add
jp
mov
pop
push
cmp
mov
add
add
lahf
mov
dec
add
add
dec
cmp
xchg
add
mov
pop
lcall
jg
mov
cmpsb
dec
xlat
loope
add
pop
jno
dec
into
dec
lcall
sub
sahf
mov
add
notb
decl
in
fiaddl
cmp
dec
add
insl
loop
fiadds
jle
and
aam
cmpsb
add
add
call
xchg
in
ficoms
ljmp
jns
push
mov
int3
xchg
xchg
sub
add
pop
jb
sbb
mov
scas
int3
add
or
dec
int3
int3
icebp
ret
int3
int3
sbb
int3
decl
int3
int3
add
inc
int3
dec
push
inc
int3
mov
incl
int3
int3
cmp
ret
add
mov
out
mov
pop
and
xchg
lds
sbb
cmp
dec
mov
shl
and
add
cmc
clc
mov
and
add
or
mov
jae
mov
dec
and
mov
and
add
movsb
imull
add
lods
adc
mov
call
mov
xlat
dec
psraw
dec
add
inc
xchg
and
pop
arpl
add
add
ds
add
add
imul
and
stos
cmp
mov
faddl
and
sub
and
and
mov
and
in
and
das
data16
decl
pushf
repz
add
or
cmp
pop
and
fucomi
inc
push
fldl
flds
ljmp
jns
add
mov
sbb
sub
add
xchg
dec
inc
pop
adc
add
add
mov
and
loope
mov
lcall
jbe
push
call
add
dec
shlb
add
add
stc
mov
add
movsb
inc
pop
pop
add
mov
add
adc
inc
incl
les
cltd
and
add
cmp
jg
pop
arpl
jbe
data16
add
push
push
add
out
repnz
xchg
mov
int3
clc
adc
add
mov
push
add
add
add
push
mov
imul
xchg
push
pop
repz
fnstsw
insb
push
mov
add
add
pop
add
jmp
and
fwait
decl
ljmp
add
add
mov
add
call
inc
loope
sbb
lods
push
add
adc
add
add
inc
mov
inc
outsl
jg
jle
out
out
arpl
add
add
cs
addl
and
mov
fcomps
sbb
pop
sub
xchg
pop
add
xor
jge
add
mov
cmp
in
outsl
push
sbb
push
repnz
incl
add
jle
add
pop
add
stos
in
scas
cmpsb
mov
jg
jns
int3
jle
and
add
add
jle
mov
and
pop
fdivl
add
mov
fbstp
call
dec
sbb
push
cmpsb
call
outsb
aaa
mov
cltd
jns
add
flds
mov
add
add
shll
and
scas
cmp
loopne
into
or
add
add
out
imul
cmc
ror
add
pusha
add
test
movsl
fisttpl
mov
fnsave
sbb
add
push
jg
divb
outsl
mov
add
shlb
inc
add
sti
xor
add
add
add
and
repz
add
and
mov
mov
add
and
out
cli
xchg
leave
add
cmp
loope
push
mov
jecxz
inc
in
cmpsb
add
cli
iret
enter
add
add
jge
xlat
xor
add
ret
sub
cmp
outsb
add
add
mov
add
or
test
jbe
aaa
jge
and
notb
mov
or
xor
xchg
add
jle
and
mov
and
int3
gs
jmp
xchg
aaa
lods
xchg
mov
add
add
add
mov
and
add
incl
add
and
add
mov
lcall
lea
add
lea
lods
fldl
and
add
mov
mov
test
outsl
in
outsl
xchg
sti
addl
pop
sub
cmp
xor
dec
jecxz
sarb
add
add
add
insl
cmpsb
add
add
xor
add
gs
shlb
add
repz
dec
std
cmp
idivl
and
or
lock
call
sub
out
out
pusha
and
or
ljmp
incl
adc
in
adc
add
sub
xchg
mov
and
into
add
and
pop
and
push
or
adc
fistps
add
jg
int
outsl
xchg
add
push
iret
mov
jecxz
dec
lret
fiaddl
int
loope
push
and
or
fcoms
xor
loop
rcr
add
xor
into
les
add
fucom
les
dec
add
lcall
jecxz
pop
add
cmp
jecxz
imul
push
jnp
dec
subl
lret
jecxz
les
mov
add
mov
jne
add
loope
add
and
push
pushf
sar
loopne
iret
lea
jmp
dec
cs
push
jecxz
pop
or
or
add
jno
nop
or
push
and
push
and
loope
add
cli
jbe
push
cmp
ljmp
add
jns
or
or
dec
mov
add
add
jecxz
inc
out
mov
add
fwait
mov
xor
add
jg
add
dec
mov
in
cmp
jnp
imul
add
mov
xchg
cmp
mov
cmp
add
sub
in
add
incl
arpl
add
push
call
add
add
xlat
rorl
and
push
incl
jns
aad
jae
and
jecxz
cltd
std
addl
imul
add
in
fstl
or
jmp
mov
inc
inc
xor
add
add
add
add
das
in
into
outsb
cmpb
fistpl
mov
or
add
popw
jmp
sbb
enter
loope
push
lret
add
test
add
call
cwtl
push
add
add
into
popf
bound
inc
and
pop
mov
xchg
aad
mov
leave
add
mov
add
or
and
in
lcall
loop
xor
add
jmp
and
mov
stos
sti
mov
popf
pop
outsl
call
mov
scas
cs
mov
cmp
cmp
push
incl
pushl
ror
jb
add
loop
mov
xchg
add
and
push
out
xor
add
fisubrl
mov
outsl
push
add
pop
and
int3
push
je
jmp
adc
mov
inc
mov
adc
push
mov
adc
sub
dec
mov
mov
add
in
cmc
mov
and
pushl
add
add
add
add
add
add
sub
add
push
jg
cmp
add
test
add
add
add
add
cmp
add
add
das
add
or
and
push
add
ds
fidivrl
pusha
sbbl
jecxz
xor
fwait
addb
addl
add
in
dec
push
add
jl
jecxz
int
stos
cmp
and
or
add
pop
roll
add
and
ret
mov
sbb
xor
xlat
loope
sub
add
push
mov
in
add
loop
mov
in
addr16
inc
loop
incl
add
dec
fucomip
cmpsb
lods
add
movsl
mov
or
sahf
jbe
stos
mov
arpl
mov
jecxz
add
pop
sbb
add
or
jl
mov
in
add
add
mov
mov
add
add
in
and
adc
fadds
mov
loope
cmpsl
add
push
xchg
jbe
add
repz
push
jno
ds
cmp
hlt
push
ja
incl
in
and
je
push
add
add
jl
mov
adc
and
adc
in
add
call
les
jecxz
add
push
leave
cmp
add
push
test
movsl
incl
and
loopne
add
mov
add
xor
jp
sub
xor
out
add
lahf
daa
jecxz
or
aas
in
add
enter
loop
push
cmp
mov
add
add
fistpll
add
add
add
xor
sbb
or
loope
jge
and
mov
lods
sub
mov
add
add
add
data16
xor
lods
and
int3
inc
mov
inc
int3
fisttpll
and
js
mov
add
pop
or
push
and
or
add
dec
add
loop
jg
xchg
daa
sbb
sub
add
jb
enter
and
int
cmp
lea
jg
add
incl
xorl
and
pushf
in
mov
and
rclb
in
icebp
call
insl
movsb
daa
add
ret
lret
sbb
cwtl
or
cmpsb
addr16
add
add
outsl
or
test
or
rorl
incl
or
push
cwtl
sbb
and
mov
inc
cli
loope
das
cld
fwait
mov
mov
add
add
add
push
mov
push
add
add
inc
and
mov
or
add
add
ljmp
js
lods
xor
lock
sbb
mov
loope
mov
add
mov
push
pop
mov
or
and
mov
add
mov
push
mov
dec
mov
push
jg
dec
sbb
mov
and
cmp
jae
daa
sbb
add
mov
inc
decl
add
add
out
jge
das
incl
inc
add
add
add
rolb
call
out
jo
add
pop
call
outsl
test
addr16
repz
add
les
test
mov
add
add
jns
jle
jmp
and
repz
std
push
add
iret
imul
out
add
sbb
or
aad
icebp
add
add
add
add
mov
add
in
pushf
push
scas
loope
add
add
inc
ret
add
add
or
sbb
gs
adc
fidivs
add
adc
jle
les
jne
hlt
inc
push
stos
aam
andl
add
inc
in
aam
lea
addl
cwtl
dec
xchg
std
rclb
jmp
in
popa
shll
inc
aas
add
adc
repz
add
mov
roll
add
add
test
add
add
add
imul
add
dec
inc
mov
add
testb
push
add
add
add
int3
ret
int3
inc
dec
das
insb
add
add
insl
mov
add
and
test
add
arpl
call
jle
mov
and
add
das
cmp
add
mov
test
push
push
insb
test
mov
add
fisubl
jmp
lahf
outsl
and
scas
jle
add
mov
add
enter
das
incl
add
ficomps
dec
add
bound
or
adc
subb
jne
add
jns
xchg
add
add
push
ret
int
add
stos
push
mov
xchg
add
add
and
or
cmp
mov
add
add
jmp
inc
loope
or
mov
pop
and
fwait
mov
inc
mov
add
js
push
jecxz
add
xchg
je
inc
or
add
inc
pop
outsb
pop
nop
add
sahf
fldenv
mov
mov
cmp
add
in
dec
mov
add
or
dec
fnstcw
and
cmc
stos
lds
add
dec
les
add
xorb
add
xchg
cwtl
ljmp
add
aaa
test
xchg
xchg
filds
add
add
add
insl
mov
pop
xlat
faddl
add
add
add
leave
into
incl
jmp
inc
and
jle
dec
shll
jecxz
add
add
dec
aad
dec
and
add
fimull
mov
and
add
xchg
aam
in
add
add
xor
add
or
add
add
negl
add
into
dec
movsl
mov
add
add
mov
add
mov
filds
add
and
add
incl
sbb
outsl
add
std
cld
cs
dec
imul
add
xor
add
loope
out
dec
pushf
or
mov
add
jbe,pt
push
leave
cs
mov
and
add
add
sbb
xchg
mov
add
mov
gs
jmp
call
and
dec
out
add
dec
decl
insl
push
adc
pop
xchg
add
mov
lds
add
sub
fmull
hlt
adc
add
push
insl
mov
push
int3
add
pinsrw
and
add
int3
pop
insl
scas
inc
mov
add
add
call
and
test
xlat
xor
mov
and
ljmp
movsl
xchg
pushw
xor
mov
decl
xchg
xchg
subl
sarb
cli
pop
mov
in
sub
stos
ret
scas
rcrb
testb
add
test
and
lret
adc
dec
or
lock
sbb
add
add
incl
mov
lahf
add
incl
adc
mov
xor
mov
jno
inc
sahf
add
inc
adc
adc
loope
in
add
push
mov
stos
mov
add
pop
xchg
cmp
and
fildl
add
pop
jle
add
ret
xchg
lea
add
icebp
mov
and
into
dec
sub
add
inc
ljmp
add
outsl
fsts
iret
ret
ds
add
add
xchg
sti
or
outsl
jle
sbb
xor
push
add
in
push
sbb
dec
ds
xor
add
call
mov
aas
jno
pusha
jle
add
xchg
popf
jg
lods
add
call
lock
fldl
and
fwait
or
inc
xor
add
addb
pop
jmp
add
dec
rcrb
or
jmp
add
mov
cmp
pop
add
and
add
or
call
or
add
mov
jne
loop
mov
add
dec
shll
push
inc
aad
inc
add
bound
sbb
repz
sbb
cmp
add
pop
push
add
mov
add
cmp
lahf
mov
add
pop
das
aad
mov
lods
ret
faddp
add
int
les
add
in
insl
loop
mov
add
or
repz
mov
hlt
insb
mov
push
add
and
pusha
loop
jg
or
or
dec
sar
and
xchg
add
add
mov
add
sbb
cli
test
fwait
and
cmp
pop
push
jecxz
jl
outsl
sbb
incl
add
add
add
add
jle
add
jns
out
sub
daa
daa
out
xchg
or
imul
add
subb
mov
jle,pt
adcl
jecxz
ja
imul
and
rcll
sub
inc
ja
out
out
and
repz
add
das
xlat
in
add
push
and
add
addr16
dec
loop
add
jle
add
and
push
mov
add
mov
orb
and
jnp
xchg
sbb
add
pop
pop
mov
and
pop
jl
dec
pop
sub
loop
je
dec
lret
add
add
pop
add
push
shrb
add
addr16
das
add
pop
decb
pop
pushf
imul
dec
scas
mov
push
jg
and
flds
das
xchg
mov
add
or
add
outsb
stos
addr16
incl
addr16
je
add
sub
test
add
lods
cmp
dec
xchg
clc
pop
inc
sbb
add
add
daa
mov
lock
xor
add
add
add
popl
lcall
ficoml
and
scas
sub
mov
scas
or
fmull
mov
mov
int3
int3
add
int3
call
adc
add
ret
add
add
fldl
mov
mov
out
add
lods
and
ret
adc
mov
rcll
jecxz
mov
dec
cmp
or
sub
repz
mov
add
or
in
and
shl
stos
add
aas
cld
sub
pop
sub
jg
ret
jmp
ret
sbb
jl
add
decl
int3
addr16
out
add
add
clc
addr16
in
add
jecxz
and
insb
jge
xchg
ret
sub
sub
add
and
add
imul
test
add
call
daa
ret
hlt
add
call
add
and
dec
add
jle
call
add
cmpsb
sti
inc
add
mov
je
cmp
cli
lret
mov
loop
repz
jne
out
dec
and
cmp
in
outsl
insl
and
outsb
or
xor
add
mov
add
lods
and
add
cmp
ror
test
or
push
shll
pop
inc
shrl
and
addr16
addb
add
mov
fiaddl
mov
mov
add
gs
into
call
sbb
push
push
xchg
mov
rcl
adc
sbb
outsl
rcrb
test
add
fsubl
lcall
add
iret
cmpsl
pop
test
add
add
add
add
add
adc
subl
push
pop
pop
ds
sub
pop
add
xchg
push
push
inc
add
push
roll
inc
lcall
mov
sub
out
add
add
jecxz
add
rolb
mov
popf
add
and
into
mov
ss
add
cmp
add
in
movl
add
or
jl
and
add
test
shll
add
or
mov
mov
add
loop
fisubrs
imul
add
sbb
jmp
add
push
movsl
addr16
push
add
add
ret
mov
cmpsb
nop
loop
add
jg
dec
mov
add
jmp
sbb
shl
sahf
add
mov
sbb
inc
lcall
repz
sbb
dec
add
dec
pushf
insl
push
jo
mov
and
and
pushf
add
add
lcall
fwait
sbb
add
mov
xchg
fiaddl
lret
into
mov
test
pop
mov
xor
test
mov
add
out
and
add
add
add
jecxz
add
lods
xchg
mov
pop
enter
add
add
daa
xor
add
jecxz
test
int
and
cld
xchg
int3
mov
add
mov
push
mov
int3
mov
add
int3
and
int3
push
mov
xor
movsl
mov
and
push
dec
add
add
push
dec
add
add
gs
push
aad
out
mov
cld
in
add
mov
pop
mov
jge
add
add
mov
add
or
add
add
add
jg
and
loop,pt
push
bound
sub
jle
mov
or
lea
leave
xchg
add
out
mov
decl
aam
sub
shrb
movb
jecxz
clc
repnz
mov
int3
dec
bound
out
push
mov
xchg
aam
adc
pop
push
xchg
and
pop
incl
and
mov
in
dec
jle
add
add
jg
test
add
add
stc
mov
or
data16
stc
sub
cmp
add
or
insb
jns
add
add
out
mov
das
loop
add
dec
push
data16
loop
or
adc
add
loop
cwtl
imul
cltd
cld
jecxz
test
add
jae
mov
add
mov
add
das
repz
add
sbb
add
add
int3
add
insl
dec
dec
pop
js
push
adc
add
addr16
add
addr16
mov
add
and
add
jl
pop
lds
add
dec
add
sub
add
std
jns
push
scas
addr16
cwtl
jle
in
dec
pop
adc
sbb
in
insl
pop
jo
add
and
cwtl
clc
pushf
add
or
popf
ja
add
fcomp
push
imul
dec
and
push
scas
ja
cbtw
add
sti
push
push
outsb
add
inc
addr16
shll
add
add
xchg
mov
int
add
sbb
add
add
int
mov
pop
lahf
imul
adc
add
fstl
roll
inc
or
push
inc
dec
inc
add
orb
add
and
pop
sub
add
push
hlt
fdivr
add
in
add
dec
mov
out
pusha
add
add
lahf
push
adc
scas
inc
mov
or
push
or
out
add
add
push
stos
pusha
pop
mov
incl
or
out
add
inc
jg
mov
add
das
mov
xor
outsl
inc
jecxz
push
out
or
or
push
mov
mov
add
ds
mov
out
cmp
add
add
add
and
add
inc
cmpb
add
xchg
or
sub
aad
dec
mov
mov
add
subb
mov
add
add
sub
ret
add
or
rorl
jecxz
cmp
outsb
incb
repz
adc
cmc
mov
and
int3
mov
lock
dec
inc
sahf
add
sub
dec
xchg
push
add
mov
ds
push
popa
cmp
add
int3
int3
and
int3
je
and
add
or
push
add
int3
int3
int3
add
add
mov
add
add
jle
je
into
push
add
out
mov
cmp
and
or
push
xor
mov
add
pop
lock
inc
sub
xor
add
adc
mov
in
dec
test
add
addl
inc
lret
imul
je
xor
test
jecxz
mov
and
add
call
xchg
jg
add
and
add
add
add
pop
cmp
and
ja
add
xchg
jmp
pop
mov
adc
es
cld
add
push
cmp
pusha
das
sub
add
inc
addl
add
std
mov
nop
les
add
pop
and
xchg
jbe
push
dec
add
repz
repnz
call
jae
adc
jg
xchg
jbe
push
add
popf
flds
incl
add
and
mov
and
out
mov
fcoml
push
inc
xchg
das
add
mov
add
jecxz
icebp
sbb
pushl
push
xor
add
or
add
sub
mov
mov
mov
loop
mov
lret
sarb
jns
and
jg
ds
movsl
mov
mov
fistps
or
jle
add
je
mov
add
lret
ja
loope
loop
ja
mov
mov
cld
jecxz
out
pop
adc
and
add
add
ljmp
fmuls
out
adc
push
into
pusha
add
mov
and
cmp
add
add
push
jnp
fadds
jb
dec
sbb
add
loop
push
imul
orb
dec
mov
inc
push
xchg
incl
push
sbb
add
and
out
mov
add
and
xchg
push
ror
incl
push
and
shlb
shl
add
call
and
add
add
add
mov
dec
add
out
mov
iret
das
add
stos
mov
add
outsb
fnstsw
mov
mov
pop
gs
dec
jae
pop
insl
cmp
incl
add
sbb
push
ret
in
int3
roll
call
add
or
int3
mov
add
call
int3
jecxz
and
add
add
or
in
iret
test
call
add
jne
xlat
and
dec
out
inc
xchg
loop
sbb
and
xchg
imul
sbbb
incl
add
add
and
dec
jmp
mov
cmc
mov
mov
loopne
pop
cmpsb
repz
add
movb
jle
push
or
mov
add
out
outsl
add
xrelease
mov
add
add
cmp
out
add
adcl
push
sub
adc
faddl
loopne
call
pop
and
jecxz
mov
pop
push
rcll
fwait
insb
add
add
lds
loop
and
testl
rcl
in
add
jg
fs
add
xor
ljmp
cmp
ja
xor
add
lds
dec
xchg
pusha
and
stc
popf
jecxz
add
add
sub
and
add
mov
cli
daa
test
jecxz
push
dec
cmc
jp
mov
or
add
or
scas
and
loopne
jns
pop
add
xchg
mov
add
out
es
loop
add
div
mov
aad
cmpsl
hlt
cmpsb
push
out
cmp
insl
add
sub
rorb
das
add
pop
sbb
jecxz
add
and
repz
outsl
add
inc
mov
add
dec
add
add
cmp
lods
xchg
add
push
inc
test
add
or
inc
mov
jle
and
enter
or
xchg
jmp
mov
out
pop
dec
shl
add
and
jb
test
addl
jnp
scas
mov
push
ja
add
cltd
shlb
add
add
aaa
mov
or
icebp
rclb
stos
or
add
xchg
add
or
add
mov
and
add
loope
xor
add
in
push
and
mov
add
and
adc
jecxz
and
xchg
sbb
shrb
add
and
add
add
dec
adc
cld
mov
mov
cmp
jae
xchg
push
out
inc
jle
pop
dec
ret
dec
push
add
in
lods
cmc
test
stc
fidivl
call
int3
add
incl
add
adc
into
dec
jle
add
or
or
std
test
lahf
sbb
in
add
mov
inc
bndldx
loop
mov
or
adcl
inc
adc
movsb
add
mov
add
jmp
xchg
aaa
and
test
dec
push
sbb
jnp
das
adc
push
add
add
add
negl
jle
add
mov
add
rolb
add
outsl
dec
jl
outsb
adc
adc
popf
jg
and
add
mov
add
sbb
add
mov
and
push
cmpb
or
ja
fists
mov
and
rol
inc
stos
mov
add
je
data16
ficomps
add
roll
add
repz
adcb
fldl
add
int3
int3
lods
addl
and
or
int3
dec
orl
add
movl
add
and
addl
add
or
loop
jo
test
loopne
or
sbb
shl
add
daa
inc
cmp
xchg
adc
in
mov
jge
add
add
add
insl
dec
sbb
jg
inc
inc
add
add
add
in
dec
and
arpl
aam
iret
aam
add
push
push
cmpsl
in
bound
ret
and
dec
outsb
add
les
add
adc
or
add
or
andl
jp
and
je
cli
mov
push
scas
call
pop
dec
repnz
mov
and
sti
icebp
and
adc
repz
add
fidivrl
add
testl
sahf
loop
not
mov
out
in
push
out
pop
icebp
add
loop
push
mov
add
or
je
mov
add
add
add
setb
pop
add
add
xor
jg
jecxz
outsl
cmc
cwtl
dec
lahf
mov
lds
add
outsl
mov
ret
mov
add
ljmp
fists
cs
leave
add
add
stc
mov
add
push
dec
add
pop
enter
push
add
add
mov
mov
and
add
pop
jg
jbe
mov
repz
add
add
add
inc
jae
add
add
add
add
add
dec
mov
add
push
subb
fildl
call
js
lret
addb
notb
add
sbb
or
mov
jle
imul
mov
out
or
and
sbb
add
add
add
sahf
mov
mov
add
imul
js
decl
fiadds
adc
jno
cmpl
mov
cmpsb
ljmp
aad
sub
in
add
dec
stc
and
jno
mov
and
fs
lret
and
insb
pop
jmp
jle
mov
sbb
adc
incl
xlat
pop
fimull
mov
add
push
jle
inc
ja
inc
mov
add
add
mov
inc
jle
add
fisubrl
push
or
nop
add
xor
xchg
or
sbb
out
inc
add
adc
dec
int3
fldl
add
fstl
and
inc
sahf
sarl
das
add
inc
fstpl
andb
sub
push
incl
push
imul
int3
mov
incl
pop
icebp
scas
or
into
decl
ret
inc
test
add
scas
cld
movsb
mov
inc
ret
stc
fstpt
sbb
add
loope
pop
mov
add
add
inc
cmp
jecxz
mov
sbb
push
idiv
outsl
or
add
subb
das
or
stos
cmp
loop
add
add
pop
and
add
call
and
decl
add
add
pop
cmc
sbbl
add
sbb
iret
pop
add
adc
pop
sarb
add
and
pop
scas
es
xchg
test
cmp
or
mov
add
mov
out
dec
mov
mov
or
pop
add
push
add
sub
incl
outsl
add
and
or
add
add
dec
popa
imul
add
add
mov
jns
inc
lea
and
imull
add
addb
jge
iret
add
pop
sub
add
jge
loope
incl
mov
add
ja
mov
loopne
mov
popa
lret
pop
add
add
add
sarl
cmp
es
js
add
pop
fsubrs
add
ret
add
push
popa
and
test
add
fcompl
add
add
and
or
add
les
add
ds
mulb
pushf
cmp
setp
add
cli
sahf
mov
xchg
inc
loopne
incl
inc
les
sbb
dec
add
add
jge
cwtl
cwtl
das
add
out
decl
iret
stos
and
rcl
and
dec
jl
sbb
add
mov
add
movsl
sub
and
sub
incl
in
mov
flds
and
sub
aam
add
pop
add
mov
aaa
mov
in
inc
sbb
fadd
and
push
mov
add
mov
sbb
addr16
lods
add
int3
dec
add
int3
int3
int3
int3
and
inc
adc
dec
add
ret
int3
pop
push
int3
add
mov
pcmpeqw
int3
int3
inc
add
inc
and
in
inc
and
pop
movsb
stc
add
add
add
add
and
push
add
add
fcomi
inc
shlb
call
inc
inc
lret
cmp
or
inc
mov
add
xorb
add
add
fs
adc
add
cmpsb
std
pop
or
add
add
loope
rorb
leave
cmp
jb
shrb
add
jae
jbe
add
inc
mov
loope
jbe
jecxz
mov
xchg
xchg
add
add
sbb
dec
add
and
gs
mov
pop
add
mov
das
imul
add
push
cmp
mov
add
add
pop
and
inc
test
or
xor
xchg
mov
add
sbb
fwait
jns
cmc
stos
adc
lods
fimull
fimuls
inc
pop
add
add
push
int3
in
add
add
mov
and
cmp
mov
ljmp
arpl
lods
mov
add
mov
mov
add
push
sub
add
and
inc
push
lds
add
or
add
add
and
cmp
mov
add
add
lea
mov
xchg
xchg
fldt
add
inc
and
add
add
mov
scas
mov
arpl
add
in
outsl
lods
popa
test
add
ficoml
test
pushl
add
lods
int
jle
xor
sub
jno
add
jmp
sbb
push
xchg
test
add
or
add
pusha
ret
aam
mov
add
dec
cld
decl
pop
pop
dec
enter
idivb
test
icebp
push
sub
loop
incl
mov
fistps
add
adc
inc
insl
and
pop
add
add
ficomps
add
inc
xchg
xchg
jle
xor
mov
add
fucomip
adc
lcall
and
add
and
mov
add
sahf
push
push
add
mov
add
jg
adc
add
das
push
call
mov
mov
mov
or
add
add
mov
dec
and
and
sub
dec
and
add
add
add
push
add
add
or
push
sub
jae
add
lock
add
sub
pop
and
dec
lcall
add
sbb
cwtl
pop
mov
in
aad
dec
je
add
add
lods
jb
testb
add
subb
pop
pop
dec
jbe
xchg
rolb
inc
fidivrl
outsl
sub
mov
pop
jecxz
mov
data16
test
add
add
sti
addl
jmp
inc
xchg
test
add
add
add
shll
hlt
push
add
add
or
add
dec
sar
loope
sub
jge
push
add
call
repnz
or
add
add
lea
mov
jl
das
add
or
test
shrl
add
rorl
push
sub
add
add
call
add
pop
mov
int3
int3
int3
add
and
ret
add
push
or
add
add
inc
sub
mov
add
jle
mov
or
rorl
in
test
jae
inc
or
add
mov
add
jle
in
popl
add
add
add
add
xor
add
add
dec
dec
sub
or
mov
add
mov
mov
add
inc
xchg
inc
aas
inc
add
mov
popf
mov
int3
add
orl
mov
add
or
ret
mov
push
sbb
cmp
jbe
pop
int
lock
sbb
add
add
sbb
add
jecxz
add
jge
push
add
jmp
mov
cwtl
movsb
jbe
out
enter
add
into
stos
xchg
enter
add
inc
lods
pushl
add
jecxz
das
or
add
out
add
pop
add
mov
sub
mov
fisubs
mov
xchg
add
shll
add
cld
push
add
add
and
dec
and
das
arpl
lahf
rcrl
mov
lret
or
add
push
enter
add
dec
fmull
add
mov
add
add
or
lret
popf
or
adc
and
stos
test
mov
jb
test
addr16
and
test
add
dec
mov
add
xor
out
pop
add
enter
shll
mov
add
sbb
add
pop
dec
adc
adc
and
or
and
std
pop
xor
add
dec
lret
mov
and
loop
lahf
pusha
dec
jb
add
add
sub
pop
out
adc
outsl
mov
aad
popl
or
sub
incl
xor
mov
pop
jno
mov
insl
movsb
sti
add
inc
inc
push
sbb
or
mov
add
decl
add
int3
inc
add
dec
int3
lret
mov
dec
mov
add
dec
inc
inc
int3
and
dec
int3
int3
and
add
add
int3
pop
rcrb
aad
aaa
outsl
cltd
sbb
in
out
mov
xor
add
scas
and
pusha
fdiv
fmul
popa
jnp
pop
loop
cld
in
sbb
jle
movsb
add
jecxz
adc
les
jge
inc
xor
add
jg
push
jmp
testb
or
add
push
add
jb,pt
cs
add
cmp
xor
les
loop
jns
cwtl
xchg
das
pop
scas
pop
mov
inc
inc
arpl
out
jecxz
divl
xor
jg
decl
add
idivl
movsb
loop
repz
add
pop
jmp
add
pop
sub
push
xor
inc
add
jmp
addl
jecxz
enter
add
loop
add
add
and
add
dec
sbb
addr16
imul
lds
pusha
sbb
popa
insl
dec
shrl
mov
sub
add
adc
addr16
dec
mov
adc
int3
incl
add
add
ficompl
pop
insb
mov
mov
lcall
and
je
aam
daa
in
inc
dec
jle
cmp
or
push
and
stos
mov
cmpsl
nop
or
jle
shlb
add
add
push
pcmpeqd
add
add
dec
call
add
int3
cmp
and
incl
add
add
add
aas
fidivrs
add
jmp
fidivs
mov
and
push
mov
add
pop
mov
lret
xchg
fisttpl
lock
shr
jle
out
jns
mov
and
fiadds
mov
incl
das
dec
mov
or
add
pop
adc
add
and
or
xchg
and
sub
push
decl
int
gs
add
cmpsl
outsl
jae
loope
cmovbe
add
add
and
mov
add
xchg
add
add
add
add
fadd
in
lret
outsl
incl
sbb
loop
clc
sub
add
loop
add
std
inc
rorb
add
in
add
loope
pop
jno
daa
jmp
add
ljmp
push
insl
push
repnz
pop
dec
add
jns
iret
movb
jno
dec
rcrl
add
lahf
loop
out
mov
add
add
jmp
imul
push
adc
in
mov
fldl
and
add
mov
add
mov
or
add
pop
lods
stos
scas
push
add
add
popa
or
jecxz
pop
adc
jo
iret
orb
pop
pushf
aad
test
add
pop
mov
aaa
lock
add
dec
test
push
jp
out
add
or
insb
lods
mov
subl
sub
das
add
and
xor
add
cmp
ja
pop
test
loop
ss
mov
jbe
add
pop
cmc
and
add
sub
mov
add
into
mov
movsb
add
in
add
mov
ja
subl
mov
adc
add
add
int3
adc
incl
int3
incl
add
add
int3
int3
add
add
xchg
daa
cwtl
add
mov
les
add
add
cltd
int
add
mov
add
sahf
add
xchg
pop
mov
and
arpl
push
ret
sub
xorl
addl
mov
add
repz
loop
xor
addl
and
pop
popa
and
add
and
mov
adcl
and
cli
shl
add
and
adc
add
call
andl
loop
add
out
push
call
and
popf
pop
aad
push
mov
fsub
push
fcmovne
add
add
or
inc
xchg
or
add
add
add
and
sbb
ds
das
add
pop
mov
repz
jmp
out
outsl
push
test
lods
pop
lock
cli
sub
mov
in
add
dec
loopne
push
testb
ret
add
dec
into
pusha
push
add
add
or
or
inc
mov
xor
push
dec
xor
mov
pop
mov
incl
dec
fimuls
mov
or
add
popf
adc
add
add
fisttps
in
ret
pop
mov
dec
fldl
or
xchg
add
adc
sub
jo
mov
pop
pop
imul
mov
add
lcall
mov
mov
add
xchg
jne
jmpw
add
mov
incl
inc
lea
cs
loop
mov
incl
testb
aaa
loop
add
call
add
in
mov
mov
add
pop
or
add
pop
add
add
lods
in
push
add
or
int3
jecxz
pop
xchg
push
stos
jnp
ja
add
jle
sub
jge
push
incl
push
incl
jno
cmp
add
adcb
test
or
in
add
lahf
repnz
and
mov
jae
or
shlb
push
imul
rolb
outsl
mov
add
push
jle
outsl
add
add
bnd
add
jnp
pop
adc
mov
jmp
pop
adc
and
pop
rorb
outsb
dec
xchg
out
int
jle
repz
push
flds
jg
call
repz
jbe
in
push
rclb
xor
jg
add
inc
insb
shll
add
push
repz
jo
and
jle
jl
or
mov
jp
add
out
mov
jmp
das
popa
push
loop
decb
test
add
add
add
add
sub
mov
add
jmp
and
add
sub
pop
push
add
stos
decb
mov
std
xor
add
notl
cli
mov
add
loope
inc
jnp
cs
add
les
push
nop
fwait
cmp
clc
cmpsb
pop
bound
jecxz
adc
jmp
add
in
mov
add
add
and
mov
add
stos
test
scas
add
add
add
inc
push
cmp
add
int3
ret
insl
ret
push
add
int3
mov
dec
add
int3
push
push
add
outsl
loope
pop
pop
div
outsl
jecxz
mov
push
imul
jae
xor
add
xchg
mov
dec
and
add
push
jmp
add
in
and
dec
dec
jle
jg
push
and
push
cmp
push
xor
add
ljmp
in
rcr
add
and
insl
mov
add
add
jge
mov
out
frstor
add
dec
add
add
and
mov
mov
cmp
add
pop
mov
loop
jle
xchg
aad
add
add
sbb
pop
inc
outsb
in
xor
add
fs
jno
dec
add
loop
mov
push
push
inc
pop
or
or
aad
mov
cmc
add
sub
shrl
jge
sub
add
fnsave
push
rcrl
add
add
rcll
mov
add
sub
add
add
jle
or
bound
add
pop
out
daa
dec
cmp
pop
sbb
cmpsl
add
mov
insl
add
and
add
add
add
rcrl
and
popa
add
call
pop
lea
cmc
in
or
mov
fildl
je
clc
or
pop
jmp
roll
add
inc
in
pusha
xchg
data16
dec
xchg
ljmp
add
mov
mov
mov
std
std
test
int3
jae
push
push
int3
test
mov
and
and
add
add
jnp
add
add
mov
int3
scas
rcrb
sbb
insb
imul
in
jns
cli
pop
loope
add
pop
mov
hlt
add
or
nop
jno
and
or
cmc
lds
pop
lods
paddb
aas
xor
mov
add
repnz
dec
add
inc
mov
add
jle
jbe
xchg
cmpsb
loope
jle
add
add
push
repnz
pop
fisubs
and
or
add
mov
xor
daa
cmpsl
sbb
sbb
cmp
divl
inc
cmp
in
mov
or
add
xor
out
add
add
mov
out
mov
mov
adc
cmp
in
test
mov
inc
repz
jle
pop
or
inc
dec
xchg
lret
dec
sbb
incl
test
add
incl
add
jae
pop
jp
add
decl
pop
add
xor
jmp
data16
leave
int3
jmp
fnstenv
add
decl
mov
or
lret
aam
add
out
loop
mov
outsb
jmp
rorb
cli
mov
mov
std
das
xor
cltd
mov
push
add
pop
leave
insb
jp
add
add
mov
sbb
aam
add
add
add
jg
add
faddl
outsl
pop
add
nop
popf
ljmp
out
xchg
data16
inc
lret
xor
aad
mov
adc
jle
orb
and
jmp
add
push
pushf
or
cmp
and
and
add
gs
nop
add
and
jl
in
mov
aaa
xchg
stc
push
xchg
incl
cmp
add
mov
incl
shl
adcb
jle
lret
cmp
js
loop
jmp
out
add
loop
lods
cmp
add
and
or
dec
in
add
lea
fwait
std
add
xchg
sub
xor
or
and
mov
add
add
jl
add
jmp
add
mov
add
add
mov
test
push
xor
dec
add
and
cmp
out
jmp
mov
add
shrl
add
loope
adc
add
mov
add
decl
jg
mov
add
jle
dec
dec
push
mov
mov
shlb
call
out
loop
mov
add
scas
jmp
add
cmc
or
add
add
mov
lea
call
add
xor
add
or
and
and
add
mov
jecxz
and
sub
add
xchg
add
fildll
adc
mov
xchg
add
mov
add
inc
add
dec
mov
mov
int3
and
mov
add
xor
lahf
pop
ret
or
jecxz
add
add
xor
add
sbb
cmp
fidivl
fstpt
inc
repnz
add
add
sarl
insl
add
in
xlat
insl
in
loop
add
mov
mov
add
fcoml
add
xchg
and
sub
mov
pusha
add
mov
dec
or
add
pop
pop
repz
call
jbe
add
add
add
mov
add
add
repnz
cmp
out
in
in
xchg
jg
or
shrb
leave
loopne
or
lcall
mull
loop
add
mov
lods
push
ljmp
in
les
dec
add
pop
add
clc
and
sub
add
fisubs
xor
ljmp
jp
jmp
and
dec
add
jg
add
xchg
add
in
fld
and
gs
add
mov
mov
mov
filds
push
add
rolb
adc
les
mov
jbe
or
or
dec
insl
and
fldl
add
decl
mov
mov
sub
nop
or
mov
out
pop
into
jle
dec
and
es
or
repz
inc
rclb
add
lahf
add
and
psraw
test
loope
add
aaa
adc
jnp
sub
xchg
gs
add
out
jle
mov
out
or
mov
push
mov
jecxz
push
scas
mov
daa
out
add
insb
cs
add
add
fimull
flds
add
int3
push
push
lldt
cmp
add
pop
cmc
jge
lock
add
pop
enter
fadd
add
sbb
jle
add
add
shr
jo
mov
mov
mov
add
mov
nop
test
add
ror
xor
or
enter
cmp
and
inc
dec
xchg
add
and
bnd
jle
lcall
add
loopne
adc
and
add
add
jbe
in
add
out
pushf
or
call
pop
xchg
aam
cmpsl
adc
add
pop
mov
add
in
leave
outsl
cmp
add
jo
add
mov
pop
sub
or
add
jg
and
add
decl
mov
mov
sub
call
pop
add
and
pop
cmpsl
loop
and
add
mov
outsl
adc
xchg
ret
idiv
call
mov
fimuls
mov
stc
xchg
add
and
add
inc
out
mov
mov
add
mov
cmpsb
mov
decl
loop
popf
add
inc
jg
int
nop
sub
push
leave
fisttpl
add
insl
jno
cmp
in
jg
out
inc
dec
add
data16
or
jecxz
inc
xor
inc
dec
add
inc
add
insl
cwtl
push
incl
jecxz
dec
mov
pop
ficoml
das
pop
icebp
call
inc
addl
sbb
and
popa
incl
add
add
add
jb
out
std
dec
jecxz
jecxz
repz
add
mov
fisubrl
fwait
dec
je
loop
fsubs
push
sub
add
pop
pop
scas
cld
dec
add
or
add
in
int3
insl
add
and
inc
dec
push
add
and
adc
decl
add
int3
incl
and
push
arpl
incl
inc
int3
add
jecxz
jns
cli
add
add
and
dec
lods
js
in
mov
out
addw
lods
jo
jecxz
addb
add
pop
jle
cmp
add
jecxz
xchg
sub
cmp
or
fcmovb
inc
sub
outsl
add
add
pop
enter
testb
loop
pop
push
push
cmp
add
mov
cmpsl
sub
add
iret
mul
inc
add
loop
repz
mov
loope
jmp
mov
cwtl
rcrb
add
and
mov
or
xor
mov
pop
dec
arpl
pop
lods
jae
add
aaa
popa
addps
add
or
loopne
shll
inc
add
or
insb
push
add
add
add
lcall
add
push
mov
and
sarl
scas
sbb
fldl
adc
add
or
push
add
icebp
nop
add
add
and
add
add
popf
mov
dec
mov
or
or
jg
mov
add
add
pop
out
add
adc
fstpt
add
imul
clc
cmp
or
test
mov
add
iret
test
aas
lahf
dec
add
add
loop
cmp
add
mov
sub
sahf
lcall
push
jecxz
add
enter
add
add
in
in
daa
jmp
add
add
push
in
push
repz
enter
xor
xor
add
mov
add
add
pushf
or
push
jle
scas
push
mov
or
add
add
jbe
push
mov
jle
rcll
loop
dec
jnp
icebp
mov
jmp
jmp
or
icebp
jl
jo
incl
decl
mov
xchg
add
jle
pop
mov
mov
loop
ds
call
dec
add
mov
xchg
mov
filds
sbb
pushl
jg
or
sub
add
shrl
add
add
call
xor
add
imul
into
and
jecxz
and
aad
add
ds
xor
add
xor
in
or
lcall
add
in
adc
add
add
sub
mov
and
mov
out
add
clc
and
popl
add
and
and
mov
and
mov
add
add
or
movsb
and
add
out
leave
add
inc
ret
add
and
sbb
add
add
rorl
sbb
push
int3
incl
add
add
and
cmpsl
and
sahf
adc
dec
add
fcoml
add
or
fcompl
bound
add
dec
dec
jns
stos
leave
ljmp
pop
cwtl
lods
scas
dec
xorb
movsb
mov
xlat
add
loopne
add
mov
outsl
add
das
add
std
sub
mov
fcmovbe
pop
add
incl
and
mov
in
add
out
in
xchg
stos
mov
je
add
stos
cmc
fistl
and
iret
push
loope
loop
and
js
add
add
nop
cld
inc
popa
dec
out
add
xchg
inc
add
cmp
rorl
movsb
add
cmp
in
loop
xlat
sti
jp
add
clts
xchg
jmp
and
incl
outsl
pushf
sti
adc
add
mov
sbb
add
add
fiadds
dec
int3
add
int3
add
add
push
and
call
jne
int3
int3
add
mov
add
push
dec
or
int3
add
int3
int3
incl
add
jecxz
das
mov
sbbb
lock
fistpl
mov
mov
or
mov
add
dec
repz
in
and
add
add
add
jbe
pusha
out
loope
jb
dec
jl
cwtd
cmp
test
insb
out
sbb
les
testb
incl
jnp
mov
inc
add
mov
add
add
add
out
addr16
mov
add
add
jmp
push
mov
pop
ja
or
aas
shll
add
mov
sti
add
call
in
jmp
and
cltd
add
or
add
push
mov
add
fcompl
ja
shlb
add
add
sbb
int
dec
xor
push
and
and
arpl
dec
or
jle
add
jecxz
into
shrl
or
mov
ds
push
sbb
addr16
mov
mov
cmpsl
xor
ljmp
add
add
add
push
or
add
xchg
cmpl
cltd
inc
cltd
jle
add
bound
lret
pop
jmp
add
xchg
lcall
jns
repz
loope
jle
push
popa
pushl
and
or
mov
add
jmp
and
scas
sub
mov
add
sbb
mul
add
lods
insl
push
leave
or
dec
jecxz
xchg
inc
lret
adc
add
mov
sbb
add
and
loope
std
xchg
push
inc
movsl
inc
cli
pop
add
and
jle
or
add
cmp
decl
cmc
mull
mov
add
xor
sar
xor
test
outsl
add
ljmp
add
dec
mov
and
filds
add
shll
jg
and
sub
lret
xchg
add
lods
mov
pop
sbb
add
add
pop
push
sahf
std
into
rcrb
add
pop
popf
adcb
add
test
cmp
sub
inc
js
add
icebp
push
pushf
mov
and
cwtl
pop
ret
add
xchg
xor
add
push
add
das
add
dec
lds
xor
add
mov
push
shl
loope
or
add
gs
add
inc
cmp
aas
or
add
in
sti
add
inc
xor
push
and
add
cld
xor
lret
in
add
add
pop
add
rcll
add
outsl
pop
dec
nop
sub
mov
push
add
test
add
negl
add
add
add
mov
in
add
and
es
and
addl
loopne
push
out
out
loope
xchg
add
jge
orb
jo
js
cmpsl
sub
aam
add
push
pop
test
or
in
das
mov
jl
add
add
add
out
pop
jg
add
xor
bound
jle
cmp
pop
or
adc
in
jnp
or
dec
or
pop
lret
sahf
dec
or
fstl
add
and
jnp
inc
faddl
add
mov
add
push
call
pop
mov
adc
push
add
ret
call
add
add
dec
insb
mov
add
push
xor
add
or
in
cmp
add
int3
call
push
pushl
mov
push
or
int3
int3
int3
inc
int3
add
pop
cli
mov
in
sub
cmpsb
push
call
out
fldt
jb
add
pop
add
ja
mov
pusha
mov
add
and
js
add
add
push
xor
aas
push
add
add
out
xchg
arpl
popa
test
and
add
and
push
add
adc
leave
add
and
cli
add
jle
add
notb
push
add
leave
mov
repz
xchg
sbb
add
out
dec
xor
call
fdivl
mov
xor
jg
loope
add
cmp
dec
push
add
cmp
mov
push
divl
push
add
ds
jns
sbb
lret
add
add
add
movsb
pusha
pop
enter
add
jns
outsb
jb
loope
repz
and
fisttpll
or
mov
rcll
xchg
pop
pop
add
imul
sbb
xchg
add
mov
jecxz
add
add
add
sub
add
add
xchg
aas
in
movsl
ret
and
imul
add
leave
add
mov
push
add
add
pminub
daa
add
aad
inc
cmp
in
or
ds
xor
add
ficompl
add
add
mov
into
push
popa
lods
add
xchg
clc
repz
mov
ljmp
dec
add
bound
inc
add
jecxz
xor
loop
add
xor
add
and
sub
loop
subl
add
xor
sub
sbb
sbb
les
add
cwtl
in
push
out
add
add
add
add
add
repnz
mov
add
pop
pop
pushf
or
mov
mov
incb
inc
fisttpl
push
add
int3
int3
add
int3
sub
jae
add
add
mov
out
add
pushf
filds
add
test
jns
popf
mov
scas
sub
loop
sub
inc
outsl
cmp
lret
jmp
pop
shll
add
add
or
leave
cmp
jecxz
add
add
sbb
pop
add
and
jecxz
fwait
roll
or
push
pop
stc
mov
in
jp
add
nop
xchg
jl
pusha
add
add
aaa
mov
add
add
dec
hlt
cwtl
scas
rolb
in
imul
call
push
jecxz
in
add
pop
movsl
mov
loop
add
ss
rcl
fsub
or
add
add
movb
add
xchg
xchg
jns
or
xchg
sbb
add
int3
mov
int3
add
inc
int3
xorl
mov
int3
int3
into
add
add
jbe
add
pop
add
jecxz
add
dec
or
add
add
faddl
mov
xchg
pop
mov
pop
mov
mov
out
mov
add
loope
adc
clc
push
or
add
add
incl
outsb
or
add
loop
adc
xor
vprotd
fcomi
add
xor
imul
mov
add
add
andb
lcall
loop
idiv
add
les
add
mov
mov
shlb
aam
mov
and
bound
and
mov
or
dec
mov
push
mov
dec
add
add
je
lock
add
xchg
add
in
add
lods
fmull
fiadds
add
out
xor
gs
dec
cmpsb
js
shrb
scas
adc
push
jno
add
iret
inc
imul
loop
outsl
pop
pop
into
and
mov
push
push
add
mov
add
jg
or
push
add
repz
push
pop
mov
add
aad
add
and
testb
in
fwait
jne
mov
int
add
or
add
das
or
add
loope
xor
jecxz
and
sahf
sbb
mov
or
sub
iret
ret
add
mov
arpl
sub
out
mov
pop
xchg
add
add
add
lcall
mov
jge
sarb
mov
pop
add
test
add
into
add
mov
and
fisubrs
out
cmpsb
dec
sbb
jg
outsl
in
ds
xor
add
add
add
xor
mov
jl
add
out
imul
lret
leave
push
in
add
push
mov
add
add
jg
add
mov
out
std
test
add
mov
push
loope
cmp
xchg
cltd
mov
fidivl
xchg
mov
jecxz
sbb
add
je
push
add
jecxz
js
sbb
add
sbb
jnp
cwtl
cmp
add
in
jae
mov
inc
cmc
andb
sbb
xor
ja
lahf
add
add
push
mov
addl
add
sub
call
xchg
sbb
pop
lret
jmp
add
mov
sbb
cmpb
add
jnp
mov
add
ja
les
in
bound
sbb
and
jle
lea
dec
pop
add
inc
mov
leave
xor
pushl
jmp
out
insb
addb
orl
sub
out
cmp
add
add
stc
xor
and
add
js
push
enter
inc
sub
mov
add
sub
inc
in
add
mov
flds
add
cmp
add
and
decl
ja
jno
movsl
cwtl
incl
add
xchg
xchg
out
into
add
popa
mov
cs
add
mov
xchg
inc
dec
and
out
add
inc
mov
incl
int3
or
pop
or
and
int3
int3
and
add
add
mov
push
jae
clc
or
add
jecxz
xchg
mov
adc
cmpsl
ret
xchg
mov
jne
lods
mov
adc
out
jle
loope
add
add
loop
jo
gs
add
add
dec
sbb
add
or
mov
arpl
add
repz
dec
popa
cltd
push
in
int3
mov
cwtl
add
ret
cmp
add
pop
add
add
mov
ss
cmp
pop
xlat
incl
add
adc
ljmp
add
into
cli
add
scas
xchg
adc
add
jo
xor
push
shlb
mov
xor
add
mov
pusha
stos
nop
aaa
add
jle
and
movsb
into
push
add
push
and
incl
test
jl
mull
add
pop
xchg
mov
inc
xor
loop
add
add
push
imull
pop
inc
xchg
movsl
shll
add
add
jmp
adc
testl
stos
cmp
in
in
sbb
add
movsb
jb
and
int3
mov
or
add
jle
sbb
add
and
add
add
pop
mov
inc
add
aad
or
loope
shll
mov
dec
sub
jb
in
sbb
add
add
out
mull
out
and
es
inc
loope
dec
mov
add
xchg
data16
add
loope
mov
sbb
int3
adc
mov
add
push
sbb
int3
cmp
cmp
test
incl
add
clc
int3
add
add
inc
mov
mov
push
fldl
jecxz
mov
mov
add
pop
mov
in
xor
or
mov
enter
add
les
add
add
ror
fidivrs
add
add
test
add
in
xchg
pusha
imul
adc
add
inc
push
fwait
add
add
decl
out
loop
jg
hlt
xchg
dec
mov
out
push
inc
mov
movsl
into
stc
xlat
pop
dec
adc
nop
rorl
add
cld
sbb
test
incl
push
loopne
xchg
gs
jg
out
movsl
ljmp
rol
sbb
jmp
add
add
lods
push
xchg
outsb
add
or
stos
in
cmp
jb
inc
in
stos
dec
mov
pushl
push
addl
add
and
fists
aas
sub
jg
xor
int3
push
inc
and
add
fdivrs
lret
out
mov
sbb
or
xchg
lahf
es
jecxz
into
cmpsb
leave
outsl
add
pop
cltd
or
incl
add
mov
add
add
lcall
add
mov
mov
inc
std
dec
imul
push
fildl
shlb
inc
cmc
sub
add
add
add
xor
inc
pop
movsl
mov
add
add
mov
xor
incl
add
inc
and
popa
das
mov
aad
and
pop
add
repz
jae
enter
or
push
fnsave
add
add
and
out
xchg
cmp
jmp
das
iret
add
popl
and
cmp
xlat
add
add
imul
sub
add
add
pop
shl
xor
push
add
out
add
or
add
outsb
jns
loop
add
add
loop
pop
xor
xor
in
jne
loop
addb
pushl
push
push
sbb
mov
and
call
adc
add
nop
mov
add
add
leave
pushf
push
add
les
mov
add
add
int
and
repz
push
call
nop
lahf
nop
mov
add
repz
xorl
add
jle
sub
add
add
gs
and
and
dec
imul
add
decl
test
adc
add
push
stc
jnp
add
ljmp
adc
add
jecxz
push
push
in
mov
push
xchg
mov
adc
sbb
and
sbbb
cld
std
ficomps
add
xorl
sti
dec
sbb
add
jecxz
add
sbb
xchg
add
add
inc
dec
not
xchg
ljmp
xor
pop
add
incl
outsb
in
out
or
add
and
popf
mov
add
clc
scas
movsl
adc
add
add
add
push
xchg
fstpl
dec
add
out
xchg
mov
mov
scas
add
mov
add
int3
mov
mov
add
pushf
loope
fists
push
test
add
in
mov
testl
icebp
hlt
xchg
and
add
adc
or
stos
cmpsb
int3
cltd
mov
mov
lahf
inc
mov
test
vcvtsd2si
add
int
inc
or
and
sub
nop
or
and
add
pop
or
xchg
popf
orb
dec
sbb
and
dec
faddl
enter
mov
mov
pop
push
repnz
dec
jne
movsl
mov
add
out
out
cld
mov
add
add
add
and
decl
and
dec
adc
jne
les
push
ret
call
das
pop
lret
jnp
mov
or
jns
sbb
sbb
and
xor
add
add
mov
push
jo
cld
mov
jmp
enter
mov
ljmp
pop
repz
xchg
pop
mov
or
xor
int3
adc
dec
aaa
or
add
add
fbstp
or
dec
mov
add
sbb
add
add
pop
ror
movsl
push
inc
sub
or
je
int3
or
dec
sti
add
mov
add
decl
scas
dec
int3
adc
add
jb
hlt
bound
lods
sbb
sti
add
sti
imul
loope
add
sbb
add
xchg
dec
add
add
jg
sbb
add
add
dec
loop
pop
add
addr16
rcrb
cmpsl
movsl
fcomps
cld
out
push
mov
and
mov
add
mov
jle
add
add
xchg
xor
push
add
add
ljmp
jmp
add
add
js
add
add
and
outsl
mov
imul
add
add
xchg
pop
adc
add
iret
xchg
sub
add
in
out
ja
add
repnz
mov
xor
push
int3
push
repz
push
sbb
repz
pop
add
add
add
dec
mov
add
xorb
scas
int
add
es
shlb
fcomip
in
add
xor
call
xor
add
es
add
mov
inc
in
outsl
loope
add
scas
cld
adc
or
adc
pop
mov
jae
xchg
add
js
push
add
in
pop
dec
stos
cmc
and
add
insb
ja
rorl
add
hlt
lods
aaa
fdivrl
add
mov
sub
or
cmp
mov
jne
jl
loope
cmpsl
in
cmp
add
inc
btr
add
add
lcall
repz
add
dec
mov
mov
add
decl
cmpsl
sbb
push
mov
pop
sbb
or
out
mov
pushl
sti
push
fists
jmp
add
pop
test
add
add
sahf
out
repz
and
add
repz
enter
js
mov
add
jle
mov
add
popf
cltd
add
jb,pt
add
and
insl
mov
and
add
pop
cmp
add
das
and
or
sub
or
int3
cmp
add
push
add
adc
mov
test
adc
cmp
jnp
mov
add
sbbl
data16
je
imul
js
arpl
and
int
add
jns
mov
add
mov
add
add
roll
add
in
adc
rolb
fs
and
lcall
or
add
xor
and
push
inc
divl
jecxz
and
add
lock
add
xchg
pop
aas
push
add
and
xor
and
push
and
out
jge
and
inc
mov
scas
add
repz
add
inc
sub
enter
lcall
and
xor
adc
and
mov
sub
lcall
jmp
xor
cld
cmpsl
pop
aam
add
mov
pop
add
mov
xchg
mov
or
scas
cmpsl
mov
jecxz
sarb
add
add
xchg
out
scas
insb
outsl
loop
fcmovb
jle
sarl
inc
outsb
sub
inc
sub
not
add
add
add
jne
and
and
mov
and
add
mov
out
insl
shll
ds
pop
mov
and
or
cmp
add
xchg
add
or
and
pop
sub
jg
lret
or
dec
incl
and
add
sbb
cli
or
and
loopne
and
and
jp
std
aas
add
out
cmp
inc
or
xchg
add
add
neg
or
insl
popf
add
jecxz
inc
push
insl
stos
outsl
add
add
add
jne
lock
incl
add
or
sbb
push
add
in
sti
cld
xchg
call
dec
pop
or
mov
cmc
pop
and
or
or
iret
add
add
add
add
add
sahf
sbb
sar
incl
pushl
add
imul
ds
es
bound
jle
outsl
or
out
add
add
or
aas
sub
nop
xchg
ds
add
mov
add
jne
nop
out
add
mov
out
sub
add
dec
adc
and
int3
rorl
add
ret
add
add
or
push
fdivrp
add
int3
mov
add
or
cmp
out
aad
out
out
pop
pop
xchg
icebp
pop
add
add
add
pusha
xchg
mov
pop
roll
and
out
push
push
mov
repz
outsb
sub
mov
pop
adc
sbb
roll
fisttps
add
cs
clc
mov
jg
xor
add
add
call
dec
add
pop
leave
popa
add
mov
icebp
xlat
out
push
jmp
pop
add
imul
cmpsl
push
lret
add
incl
insb
sbb
rorl
add
add
imul
inc
add
fwait
test
cld
add
push
or
mov
mov
imull
enter
gs
out
jle
add
jle
fistpl
or
add
add
add
mov
add
loop
loop
sbb
stc
mov
adc
add
dec
stc
in
sub
or
jle
lods
mov
lret
mov
jle
cs
or
add
cmpl
loopne
fiaddl
and
cmp
or
loop
pop
push
push
loop
inc
mov
add
fldenv
notb
and
fcomps
mov
add
je
pop
xor
add
add
add
sbb
lcall
clc
fwait
add
push
xlat
cmc
pop
add
int
push
mov
outsl
jnp
push
push
and
out
in
test
add
dec
mov
jle
dec
enter
outsl
and
add
add
movsb
sbb
add
add
jo
xchg
lds
add
stc
pop
lret
fnstsw
aam
cld
sbb
loop
movsl
jae
adc
add
add
leave
arpl
cmp
test
add
stc
fbstp
xor
add
push
or
mov
add
add
jae
loop
cwtl
add
add
stos
add
aas
out
add
hlt
pop
sbb
mov
and
add
mov
add
outsl
and
movsl
adc
add
add
add
int3
int3
jne
int3
add
inc
and
inc
add
roll
clc
and
ret
int3
int3
int3
insl
jecxz
inc
test
and
inc
xor
jl
cwtl
nop
test
jmp
mov
add
add
mov
add
pop
xchg
popa
ljmp
add
jmp
and
scas
pop
in
adc
inc
call
push
lods
pop
inc
add
jno
add
mov
or
add
imul
add
inc
aad
pmuludq
and
aam
mov
or
or
add
and
mov
add
add
and
and
xor
imull
loop
ret
pop
sbb
and
add
inc
iret
adcb
les
repz
hlt
std
dec
cwtl
iret
mov
xchg
add
repz
andb
jecxz
loop
add
xor
call
popl
add
loop
cs
add
or
das
add
dec
push
xor
pop
mov
mov
enter
add
add
mov
pushf
pop
dec
movsb
in
add
loop
add
add
aaa
push
pop
add
gs
dec
loope
outsb
popl
add
dec
cmp
loop
xchg
and
stc
inc
cmp
out
and
pop
lods
and
jle
inc
notb
mov
add
add
and
mov
lods
sahf
lods
mov
ljmp
insl
mov
add
cs
sti
sub
push
xor
dec
inc
push
add
lret
cwtl
add
add
add
or
push
inc
pop
add
add
adc
xchg
ds
in
jg
pop
sub
lds
int
inc
imul
add
or
pop
in
test
sub
push
sub
add
add
add
pushf
int
add
add
and
jl
testl
cmp
mov
add
add
push
addr16
add
arpl
mov
and
add
pop
jecxz
xchg
call
popa
repnz
cltd
jle
jns
jno
jbe
adc
push
fldl
das
inc
dec
aam
dec
add
add
add
popf
add
fwait
add
pushl
sbb
fildl
add
add
add
outsb
sbb
add
xchg
mov
add
push
jne
jg
sti
xchg
add
inc
ss
outsb
mov
loop
rcl
clc
push
stos
pop
push
add
dec
mov
add
add
push
jp
cmpsl
das
or
add
xchg
dec
ficoms
nop
inc
inc
adcb
add
hlt
shl
vunpcklpd
pop
aad
sbbl
fnstenv
push
add
out
add
mov
int3
enter
out
mov
cmp
add
orb
dec
outsl
cmp
in
scas
sub
repz
jns
lods
push
add
addl
sub
sub
dec
sbb
mov
add
jle
mov
aaa
into
fiaddl
loope
rep
sbb
stos
stos
daa
add
add
mov
xor
jge
and
inc
add
add
add
and
add
sub
inc
iret
add
and
aas
lea
lods
in
add
add
cwtl
pop
dec
loop
add
mov
dec
je
mov
mov
or
in
incl
mov
add
and
push
addr16
add
mov
cmp
pop
push
incl
and
jge
int3
inc
and
int3
int3
mov
mov
add
jne
add
int3
mov
mov
mov
int3
int3
add
lea
incl
add
cmp
dec
and
mov
mull
add
mov
xor
bound
and
hlt
lods
test
jns
add
xchg
xchg
pop
add
decl
and
push
push
incl
aaa
mov
jmp
arpl
ljmp
repnz
push
pop
or
loop
cmp
pop
setg
jle
lds
add
add
rcl
mov
outsl
xchg
dec
jnp
js
outsb
pop
cmpsb
aaa
jo
add
mov
rol
mov
call
mov
add
out
sub
and
add
push
fistpl
add
mov
std
add
or
xor
sarl
mov
jecxz
mov
add
and
add
mov
add
push
repz
sub
add
insb
mov
and
jle
mov
add
pop
push
jge
add
add
xchg
adc
adc
hlt
out
rcr
inc
call
adc
add
arpl
add
mov
add
add
jle
mov
add
imul
xor
add
fcoms
push
add
mov
outsl
fildll
sarl
and
add
push
clc
fnstsw
lods
inc
add
and
mov
add
das
cmp
fcmovbe
test
dec
add
sahf
data16
lret
add
ja
imul
loope
mov
loop
add
add
add
and
dec
add
add
jno
leave
les
cltd
aaa
mov
jg
decl
add
fldl
xor
add
pop
cmp
push
and
addr16
add
loop
incl
cmp
or
add
rcrl
pop
push
sbb
flds
xor
sbb
and
xchg
sub
or
and
out
clc
cs
add
test
add
add
adc
cmc
bound
sar
decl
dec
add
add
push
pop
out
mov
aaa
aaa
out
inc
repnz
loop
add
sti
roll
cmc
sbb
add
add
addr16
add
mov
add
xchg
shl
add
add
mov
pop
mov
mov
jne,pt
xchg
mov
and
mov
push
mov
and
jle
dec
add
inc
push
dec
les
mov
cs
mov
incl
outsl
push
fcmovnu
xchg
add
add
add
sti
add
or
hlt
jecxz
or
pop
pop
cld
pop
add
test
inc
or
dec
add
call
data16
insl
les
addl
lcall
int3
adc
mov
sbb
mov
push
add
inc
add
int3
mov
push
push
or
dec
add
sub
loop
clc
mov
xor
mov
and
mov
mov
add
lods
call
scas
adc
lret
add
in
aam
loop
mov
cld
jle
add
add
add
jae
pop
call
mov
int
mov
add
mov
add
mov
mov
dec
add
jmp
and
out
clc
cli
outsb
mov
push
hlt
dec
add
add
mov
in
jecxz
add
mov
jecxz
dec
add
sbbl
and
xchg
push
sar
lahf
jl
ljmp
int
xor
push
or
ljmp
cli
in
add
or
or
mov
push
imul
sbb
mov
or
lahf
pushf
clc
movsb
jb
add
add
xor
sub
add
xor
or
xchg
xchg
mov
jle
aam
or
add
add
mov
sub
inc
mov
das
in
rclb
cmpl
mov
push
sub
xor
pop
scas
insl
outsl
add
push
scas
sbb
ja
repz
mov
stc
decl
lret
jle
add
push
add
aaa
mov
movsl
enter
add
dec
lock
add
inc
mov
test
lahf
enter
mov
mov
incl
and
ret
in
and
inc
insb
testb
xorl
fcmovnbe
pop
inc
add
add
mov
push
enter
mov
daa
xlat
in
sub
mov
loope
push
dec
mov
ficoms
add
adc
push
fdivrl
add
dec
and
or
cs
add
add
dec
out
lods
in
add
js
subb
mov
cmp
fnstsw
dec
push
icebp
jmp
mov
add
mov
loop
into
std
pop
mov
add
mov
sub
mov
mov
jecxz
push
push
or
cli
push
enter
add
or
add
popa
add
add
add
jno
xchg
or
out
aaa
pop
jbe
or
pop
add
imul
rol
cmp
out
xchg
jle
outsl
aas
fcoms
add
add
pop
or
jg
cmp
fcomp
add
and
sldt
out
jecxz
lcall
or
inc
xchg
dec
push
or
lret
jne
xor
std
inc
push
add
out
jns
cmp
and
jbe
rorb
and
incl
and
and
insl
cs
mov
add
mov
rcl
push
mov
fadds
add
add
andnps
scas
or
and
add
add
and
inc
add
and
sti
inc
sub
sub
sub
test
popf
andps
mov
mov
add
dec
cmp
add
add
add
xchg
sbb
push
add
add
xchg
loope
add
add
or
and
in
jne
jbe
jecxz
rol
xor
sub
add
and
ret
add
mov
int3
int3
add
add
add
or
inc
add
incl
add
decl
int3
incl
aaa
add
mov
call
mov
fstp
add
pop
cli
add
add
add
inc
nop
mov
add
inc
sti
sub
mov
mov
push
out
and
push
xchg
mov
in
int
add
pop
xlat
or
out
loope
into
sar
add
jecxz
outsl
jle
aas
push
stc
lret
test
movsb
inc
xor
add
ret
adc
mov
ret
sub
les
aam
add
add
mov
jecxz
in
loop
and
addb
add
ret
add
int
jecxz
add
xor
jle
inc
mov
inc
mov
sbb
call
insb
jnp
xchg
mov
add
and
inc
and
add
add
fwait
aam
and
mov
mov
adc
pop
es
popa
outsl
mov
pop
verr
enter
js
add
jle
hlt
sarl
lahf
jbe
add
shll
in
or
add
add
hlt
sub
int
daa
lods
es
add
pop
sahf
insl
lds
xchg
push
int
add
out
jmp
jnp
push
and
add
add
js
add
add
add
or
jle
cmp
in
pop
loop
mov
pop
insb
push
jg
shrl
nop
rclb
or
ret
lret
fiadds
add
mov
call
repnz
out
add
gs
add
and
push
jo
stos
push
das
jmp
cmp
dec
icebp
jp
sbb
dec
addl
cmp
lds
dec
fwait
sub
les
jle
aas
mov
call
sbb
add
test
pop
outsl
add
fisubs
sub
mov
icebp
mov
inc
inc
mov
mov
pushl
mov
add
jecxz
pop
sub
jl
imul
and
gs
add
dec
call
sub
push
add
hlt
rcll
pop
pop
icebp
mov
dec
aad
fs
stos
add
mov
int3
inc
sub
les
push
dec
xchg
add
and
das
out
fsubl
add
or
add
add
add
push
and
adc
bound
dec
jle
int
outsl
xor
add
cmp
and
das
mov
fcmovb
and
dec
aam
add
or
and
pusha
inc
xor
xchg
push
add
out
push
ss
push
repnz
add
cmp
inc
add
jmp
ja
in
xor
or
call
add
add
add
loop
sub
das
jecxz
les
outsl
mov
mov
jmp
add
mov
add
jae
xchg
push
xor
daa
mov
adc
add
and
push
lret
add
add
xchg
fiadds
jmp
jmp
mov
add
and
add
pop
mov
dec
je
add
push
jne
pop
stos
mov
call
mov
pop
loop
add
or
aad
arpl
add
add
fsts
dec
adc
push
in
mov
mov
push
shl
jmp
add
xlat
xor
daa
add
push
and
add
decl
out
incl
add
mov
incl
add
pop
xchg
dec
xchg
mov
add
jl
push
fwait
jl
insb
push
sbb
pop
jl
add
insl
insb
xor
jg
and
test
add
and
in
div
adc
push
imul
inc
push
popa
push
push
jmp
pop
jp
cmp
repz
outsl
jl
mov
add
add
mov
add
je
adc
and
call
add
mov
mov
and
pushf
sbb
or
cltd
call
lds
aaa
cli
and
sub
xor
add
andl
add
ss
call
mov
add
add
or
mov
lock
lods
mov
mov
or
and
add
add
add
and
arpl
inc
add
loop
cmp
sbb
add
jb
jae
rorl
int
inc
mov
aaa
and
jle
pop
xor
es
dec
mov
add
and
and
inc
ds
xor
mov
mov
add
dec
insb
mov
mov
inc
cmp
fwait
sbb
sahf
and
jmp
cmpsl
push
add
scas
add
dec
add
add
outsl
jb
sub
push
add
add
dec
mov
ret
push
and
inc
add
and
scas
int3
add
and
pop
and
add
clc
pop
cmpsb
push
out
mov
cmp
lock
and
mov
into
jmp
int
xorl
int
mov
sub
int
loopne
add
or
and
dec
lds
add
add
insb
cltd
jl
add
dec
jbe
daa
and
cmp
push
or
and
out
outsl
add
add
mov
idiv
clc
ret
repz
inc
ds
int
jp
mov
add
popf
mov
xchg
jg
popa
xor
gs
mov
pop
pop
add
aad
mov
push
add
add
pop
in
add
inc
push
clc
add
add
add
fmul
insl
mov
jg
dec
fsubl
add
lods
outsb
scas
fldenv
lea
add
or
add
xor
pop
mov
add
add
fcomps
cmp
loopne
dec
jbe
and
shrl
mov
add
inc
inc
ret
add
xchg
outsb
test
and
add
insb
test
pop
push
fisttpll
add
jle
decl
add
add
add
lods
lret
add
or
aad
loop
verr
sbb
cmp
cltd
sub
push
inc
leave
mov
add
add
jp
inc
gs
dec
add
jg
xor
out
and
add
and
sub
push
loop
pop
cmp
ret
shll
add
sub
stos
or
jno
addr16
and
or
sbbb
add
xchg
jp
pop
mov
out
or
sar
add
add
mov
and
push
push
or
nop
je
or
add
inc
insb
mov
add
cltd
adcl
add
pop
lods
lcall
add
fidivl
cmpsb
sbb
jmp
cmp
jp
inc
sub
or
and
pop
add
push
mov
add
or
and
add
int3
int3
pop
lldt
int3
and
mov
mov
int3
add
lret
push
ror
and
xadd
push
adc
addl
pop
add
push
add
add
dec
and
inc
sbb
mov
add
add
inc
sub
adc
int3
add
ffree
int3
add
int3
add
add
add
int3
int3
dec
int3
jmp
int3
push
add
add
int3
inc
int3
int3
test
adc
add
push
test
add
add
dec
divb
int3
jns
add
jae
add
or
lret
mov
add
int3
or
add
pop
add
inc
lods
add
add
push
dec
and
pop
ret
push
mov
push
mov
sub
push
push
push
sub
mov
lea
push
push
push
mov
mov
sub
push
movl
call
mov
mov
imul
mov
add
lea
cmp
mov
jb
movzbl
movzbl
lea
mov
cmp
je
cmp
mov
je
add
shl
add
mov
jmp
movzbl
movzbl
sub
inc
mov
sub
add
lea
add
and
sub
sub
mov
and
mov
mov
mov
sub
lea
cmp
mov
lea
je
sub
add
mov
mov
mov
sub
lea
mov
mov
sub
mov
lea
movzbl
lea
cmp
lea
mov
jle
movzbl
sub
inc
mov
movzbl
lea
mov
mov
call
mov
lea
mov
cmp
je
cmp
je
add
shl
add
mov
jmp
movzbl
sub
inc
sub
pop
dec
pop
mov
pop
leave
ret
xor
push
mov
lea
mov
sub
mov
dec
mov
movzbl
add
add
sub
cmp
mov
jb
pop
ret
mov
push
push
push
mov
movzbl
add
cmp
push
mov
mov
je
cmp
je
lea
mov
shl
add
mov
jmp
movzwl
lea
jmp
movzbw
inc
movzwl
mov
add
mov
push
call
add
lea
cmp
pop
je
mov
sub
add
mov
jmp
sub
add
mov
push
pushl
call
mov
add
add
dec
mov
jne
movzbl
lea
cmp
je
sub
add
mov
mov
mov
push
call
dec
pop
jne
movzbl
push
push
lea
call
lea
cmp
pop
pop
jbe
movb
mov
pop
pop
pop
pop
ret
push
mov
sub
push
push
lea
push
call
mov
mov
push
pushl
push
call
mov
add
add
add
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
call
movzwl
mov
lea
lea
movl
call
movzwl
movzwl
add
sub
push
mov
sub
call
cmp
pop
pop
je
cmp
je
mov
lea
movzbl
lea
jmp
movzwl
sub
sub
jmp
mov
movzbw
push
pop
sub
mov
movzwl
sub
add
push
mov
call
pushl
call
pop
pop
movzbw
mov
mov
sub
inc
mov
call
mov
add
add
mov
call
pop
pop
xor
pop
pop
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
mov
sub
push
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
xor
cmp
je
mov
decl
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
decl
mov
mov
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
mov
incl
cmp
je
cmp
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
call
ret
mov
cmp
je
push
call
orl
jmp
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
mov
mov
mov
cmp
je
decl
jne
cmp
je
push
call
pop
orl
call
push
call
pop
movl
mov
mov
cmp
je
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
mov
decl
cmp
je
cmp
je
cmp
jne
push
call
pop
orl
call
push
call
pop
call
ret
xor
mov
push
call
pop
ret
mov
push
call
pop
ret
call
test
jne
call
xor
ret
push
push
push
call
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
call
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
mov
call
orl
mov
mov
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
push
call
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
movl
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
call
movl
push
lea
push
call
add
xor
jmp
mov
jmp
push
call
pop
orl
call
xor
inc
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
jne
pushl
call
push
call
mov
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
jb
mov
cmp
je
call
jmp
push
mov
call
pop
push
mov
call
pop
orl
call
cmp
jne
mov
pushl
call
xor
xor
inc
cmp
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
in
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
arpl
inc
add
inc
add
inc
add
inc
add
in
add
in
add
in
add
in
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jl
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
out
add
out
add
out
add
out
add
out
add
out
add
out
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
out
add
out
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
call
add
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
push
icebp
inc
add
inc
add
icebp
inc
add
icebp
inc
add
icebp
inc
add
icebp
inc
add
icebp
inc
add
icebp
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
insb
icebp
inc
add
add
icebp
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
inc
add
repnz
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
lods
repnz
add
inc
add
repnz
add
repnz
add
repnz
add
repnz
add
repnz
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
inc
add
repz
add
repz
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
cmpl
je
movb
inc
neg
push
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
call
mov
pop
pop
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
pusha
mov
add
pushf
mov
add
mov
mov
add
hlt
mov
add
push
mov
add
inc
mov
add
jl
add
mov
add
mov
mov
add
clc
mov
add
sub
add
add
add
add
add
hlt
rolb
in
add
lret
add
add
xchg
rolb
test
add
outsb
rolb
push
rolb
and
add
ds
add
mov
je
add
test
add
mov
add
out
add
hlt
mov
add
push
mov
add
cmp
add
push
mov
add
jbe
add
mov
add
stos
mov
add
enter
fdivrs
add
mov
add
push
mov
add
ss
add
push
mov
add
cmpb
add
mov
add
fidivrl
add
cli
mov
add
and
add
push
mov
add
mov
add
mov
mov
add
ljmp
add
rolb
push
rolb
xor
add
cmp
add
inc
rolb
add
add
idivb
add
mov
add
lcall
add
add
push
mov
add
mov
add
mov
mov
add
push
mov
add
add
push
add
mov
add
decl
xchg
push
insl
add
outsb
xor
add
xchg
jae
xchg
xchg
dec
call
add
das
jmp
les
and
mov
roll
loop
pushf
incl
adcl
mov
jg
xchg
add
or
xor
add
orl
and
test
sbb
mov
incl
add
push
or
mov
dec
jl
daa
int
add
xor
push
sub
or
or
adcb
add
sub
cltd
sub
decl
sub
jge
ds
incl
add
jecxz
out
loope
mov
ret
cmpsl
xchg
mov
add
loop
cmp
push
outsl
dec
push
sahf
sbb
ret
das
fidivrs
subl
sbb
inc
add
rclb
mov
mov
add
incl
int
ss
jne
add
and
jns
jp
xchg
pop
pop
jnp
js
add
push
ret
test
add
push
pop
sbb
and
std
add
add
add
jmp
repz
pop
rolb
add
jecxz
and
cs
loope
add
mov
jmp
add
outsl
test
negl
lea
pushl
add
aad
add
pop
push
xor
add
and
scas
nopl
xchg
or
pop
jg
add
add
jno
add
dec
add
insl
jno
jecxz
jecxz
jns
stc
add
jl
inc
jnp
ds
lea
mov
add
add
enter
pop
add
in
inc
dec
imul
add
push
mov
das
add
stos
pop
jecxz
jmp
cmp
lods
sahf
roll
insb
mov
cli
add
inc
loop
scas
lcall
mov
pop
add
loop
div
mov
mov
repz
cwtl
or
add
cld
aad
jnp
loop
std
mov
aas
add
or
dec
jbe
push
sub
repz
jecxz
mov
push
mov
in
and
inc
lds
loop
or
das
mov
add
mov
cli
fwait
xlat
pop
and
cmp
xor
mov
and
jne
xor
jg
orb
gs
mov
add
add
push
or
or
mov
dec
sbb
add
push
pusha
sub
jae
pop
insl
ljmp
test
loop
nop
incl
add
add
stos
in
xor
add
add
cltd
add
or
jle
fs
ds
mov
add
lcall
jns
dec
sti
xchg
bound
repz
popf
or
add
loop
in
push
xor
and
pop
add
inc
loop
pop
loop
add
sahf
sbb
adc
jmp
xchg
cwtl
adc
or
mov
xlat
loopne
add
clc
jbe
add
add
cltd
pushf
popa
or
or
add
inc
mov
loop
fnstenv
push
push
add
add
mov
jno
add
ds
mov
les
pusha
mov
and
push
push
add
add
add
in
and
sbb
add
outsl
mov
roll
add
incl
mov
out
out
mov
and
add
fidivrs
fcomp
jae
and
sbb
test
add
fdivs
mov
add
out
add
add
sbb
or
jg
and
add
add
mov
loopne
mov
add
xchg
add
loop
cmp
jns
xor
push
push
fidivs
add
stos
mov
dec
add
cmpsb
lds
and
xor
add
add
or
ret
aad
add
loope
popf
fadds
rcrb
xchg
add
and
loopne
daa
add
dec
xchg
add
lahf
imul
add
add
push
and
pop
xchg
das
cmp
add
mov
out
xor
add
mov
pop
add
cmp
mov
pop
add
mov
and
cmp
jecxz
mov
ss
mov
xchg
add
or
or
inc
roll
and
pop
cmp
add
fcmovu
aas
cmp
in
mov
jg
cltd
mov
cltd
icebp
gs
add
cmp
add
in
push
je
add
add
ds
add
add
mov
add
add
insb
addr16
int
jecxz
sub
test
add
xchg
aaa
iret
add
scas
fdivl
incl
add
fs
jb
add
and
add
sarl
roll
clc
fisubrl
movsl
jle
dec
and
mov
add
out
and
iret
sub
add
add
add
and
add
int3
fdivs
and
and
mov
jns
mov
test
add
and
pusha
and
subb
rolb
cmp
shlb
loope
push
das
loop
mov
inc
pop
or
and
or
sub
add
mov
or
mov
incl
mov
jle
mov
pushf
add
add
outsl
ror
jg
add
mov
add
dec
or
add
popf
insl
and
add
add
out
jmp
jne
ds
jbe
decl
pop
pushf
sub
push
add
add
push
scas
out
adc
add
out
dec
xchg
rolb
adc
mov
call
xchg
add
add
add
scas
fs
incl
add
mov
lcall
test
dec
mov
jne
gs
outsb
jns
jns
popa
insl
jne
popa
jno
imul
lods
lahf
jmp
add
pop
out
cmpsb
or
add
add
xlat
cmpsb
or
incl
mov
add
add
in
dec
xchg
pop
fwait
add
add
outsb
loope
pop
or
sub
imul
add
pop
dec
jp
outsl
add
stos
stos
lret
mov
add
add
xchg
dec
lds
add
jmp
arpl
xor
add
or
leave
in
sbb
mov
add
add
mov
lea
add
pop
iret
pand
stos
cltd
lret
add
in
pop
ffree
add
jle
stos
push
mov
add
stos
xor
or
add
mov
loope
and
ficompl
sub
stc
roll
xchg
xchg
movsl
xlat
xor
add
or
push
and
and
fs
and
pop
fimuls
add
sbb
add
lea
mov
int3
das
pop
add
xchg
sub
orl
xor
out
push
add
in
jnp
insb
add
add
mov
xchg
add
or
incl
push
sti
into
or
dec
fwait
mov
mov
adc
mov
add
call
or
jle
jno
bound
mov
add
fcmovne
int
jecxz
jg
add
fiaddl
push
dec
fnstsw
add
out
mov
sbb
add
jnp
testl
adc
or
mov
add
jle
lods
fisubl
and
add
add
sbb
add
in
pop
xor
sub
push
cld
xchg
lock
mov
mov
jmp
fldl
add
add
adc
add
insl
out
add
and
lcall
mov
push
jo
xor
or
das
add
add
push
cmp
add
add
push
jno
roll
add
mov
add
and
mov
add
and
in
out
sti
scas
aam
popf
push
jmp
fstp
add
pop
inc
std
adc
add
jo
incb
lcall
add
xchg
jns
inc
popf
je
jo
cli
aad
add
pushl
add
jmp
xchg
xorl
pop
in
xchg
pop
add
sbb
and
lock
add
loop
and
pop
cmp
test
ja
dec
inc
mov
inc
push
add
dec
loope
xchg
jmp
les
xchg
pop
xor
mov
pop
pop
in
mov
add
adc
add
jecxz
ds
lds
pusha
out
add
add
lds
lds
cli
xchg
sbb
outsb
jle
scas
and
add
roll
add
jmp
add
pop
inc
lret
add
add
cmpsl
inc
pusha
incl
add
add
shl
inc
jecxz
add
outsl
mov
lods
shll
cwtl
aaa
cmp
jns
add
lret
arpl
test
xor
mov
push
cltd
xor
add
jbe
cmpb
test
add
pop
imul
in
or
add
add
mov
xor
pop
adc
adc
loop
repz
inc
jle
add
jecxz
outsl
add
mov
fsubrs
and
or
into
mov
add
and
push
push
pop
add
loop
cs
push
idiv
fisubl
pop
add
push
incl
mov
add
add
pop
lock
and
daa
aad
loope
add
add
jmp
mov
les
sbb
lds
add
lahf
jo
push
add
xor
jg
jle
sbb
mov
out
dec
push
and
data16
inc
mov
push
in
and
les
in
lea
stos
cmpsl
movsb
je
adc
imul
pop
int
and
or
repz
and
add
and
aas
inc
xor
jecxz
add
pop
cwtl
add
add
add
lcall
add
pop
les
pop
add
cld
or
xchg
mov
add
dec
and
and
jmp
mov
call
add
add
push
jae
xchg
add
dec
and
sub
int
add
adc
shlb
jne
jecxz
pop
lods
lock
add
add
add
cmpsl
cmpsb
xchg
jns
and
int
add
add
fidivl
mov
and
jns
incl
adc
mov
inc
mov
outsb
sbb
jmp
add
jb
call
add
mov
rorl
pusha
xchg
and
cwtl
insb
dec
add
ljmp
mov
mov
add
add
loopne
push
addr16
int
mov
dec
push
add
xor
add
add
and
or
add
sbbl
pop
jae
in
mov
add
dec
fiaddl
stos
outsb
cli
sti
jmp
pushf
inc
mov
out
or
xchg
outsl
add
call
ret
incl
mov
or
add
decl
jne
loope
sbb
add
jg
adc
mov
dec
jp
fsubl
add
pop
or
add
xor
jle
mov
scas
or
add
loope
xor
add
fs
jg
rolb
outsl
in
out
outsl
xor
add
out
push
xor
lock
add
stos
cmp
mov
call
mov
fstl
ljmp
add
add
in
mov
jmp
add
adc
jp
mov
arpl
add
outsb
add
add
lret
incl
add
jl
movsb
mov
inc
sbb
jmp
add
mov
push
add
add
call
or
add
xor
sub
sbb
add
add
add
add
in
push
incb
outsl
call
dec
js
add
add
and
xchg
push
mov
add
add
add
add
in
push
movsl
add
in
jp
dec
adc
xor
jae
mov
mov
dec
add
in
mov
in
mov
xchg
and
add
add
aad
roll
pop
jl
cmp
ljmp
inc
or
sbb
and
cmp
mov
xor
call
rorl
push
mov
jno
mov
stc
sub
xchg
add
add
mov
push
ficoms
adc
jg
mov
loope
andl
mov
test
pop
in
mov
es
inc
add
xchg
dec
loop
lock
aaa
scas
cs
add
add
fnstenv
add
int
or
add
add
loope
mov
add
add
ret
in
insl
sub
or
fcmovne
cmp
lds
mov
addl
and
jle
call
in
push
mov
or
scas
scas
aad
lcall
pop
loopne
sub
add
add
dec
repnz
cmp
mov
add
fwait
jp
sti
stos
add
add
adc
std
std
add
or
adc
jp
jle
aad
jp
out
add
das
add
into
sahf
xor
add
cmp
mov
aam
cld
mov
pop
sar
lcall
sarb
popl
xchg
popf
lret
roll
outsl
xchg
xchg
ret
jle
add
jecxz
add
sub
add
jb
xor
pop
shl
stc
xor
fs
repz
js
and
fs
incl
add
cmp
inc
add
scas
and
add
in
push
or
xlat
pushf
inc
mov
and
add
push
inc
jne
shl
test
mov
add
addr16
or
push
pop
jmp
add
or
jno
gs
jle
and
cmp
add
add
inc
ret
and
movsb
dec
test
jge
dec
nop
or
jnp
cmpsb
xchg
jb
jmp
sub
pusha
and
add
add
dec
repnz
loope
add
add
add
leave
xchg
fs
imul
fistl
add
mov
fwait
pop
outsb
jmp
cmp
test
add
mov
mov
or
jle
sbb
jo
jne
add
add
sbb
lret
or
add
and
fisubl
incl
add
stc
add
fildl
add
dec
jmp
pop
jae
adc
add
out
pop
sub
add
or
test
add
pop
pop
loopne
add
and
lods
xchg
jl
add
decb
and
jae
cmp
add
add
add
scas
add
call
call
pop
addr16
sub
add
xor
cli
in
add
cmp
mov
add
pop
jns
add
mov
daa
xor
add
add
addr16
xchg
sbb
das
jmp
mov
inc
incl
mov
incl
or
fs
xchg
pushf
into
insl
mov
outsl
push
gs
cmp
int3
loop
mov
add
incl
loop
insb
xor
incl
and
add
and
lods
lock
add
pushl
pop
jmp
incl
jg
and
jg
sbb
shl
mov
add
das
add
add
sbb
loop
jle
js
cwtl
jne
ljmp
addl
ja
mull
loop
inc
insb
xor
bound
mov
cmp
xchg
mov
add
movsl
ljmp
add
into
ljmp
sub
test
jecxz
dec
xchg
imul
add
mov
add
std
jle
decb
lret
ss
cmp
clc
jbe
or
add
mov
lret
cmpsl
stos
jnp
jecxz
in
add
add
add
popa
dec
add
mov
add
outsb
loopne
ljmp
and
xchg
add
add
cmp
dec
add
jmp
stos
add
or
mov
fldl
mov
xor
add
add
pop
daa
xchg
jno
std
jne
movsb
dec
inc
cmp
movsb
fldcw
push
cmpsb
pop
repz
add
add
lret
lods
pop
pop
cwtl
scas
adc
out
mov
add
jle
jmp
orb
call
into
es
inc
xor
incl
add
in
add
jmp
add
jecxz
add
and
add
jle
add
add
add
mov
add
add
and
push
shll
movl
in
add
ljmp
and
xchg
pop
test
push
jmp
add
pop
out
sub
add
mov
pushl
adc
add
add
fisubs
xchg
ss
out
and
pop
add
stos
and
repz
mov
add
loop
dec
nop
outsb
incl
ds
add
dec
add
mov
fwait
xchg
imul
add
add
outsl
inc
ret
add
fnsave
jae
sbb
ljmp
add
or
test
sbb
hlt
fildll
add
mov
jecxz
das
jg
jp
mov
fnstenv
or
add
add
leave
mov
outsl
add
add
add
add
in
push
xchg
pop
repz
and
mov
xorb
dec
add
add
inc
add
pop
mov
cmpb
add
dec
or
call
loope
addl
push
call
loopne
cmc
addb
add
dec
add
pop
sub
sbb
loope
jmp
push
push
jne
add
insb
pop
stos
xor
cmp
mov
push
xor
add
mov
mov
sti
sub
je
and
push
mov
call
cwtl
push
xchg
ss
in
add
sti
std
dec
dec
call
pop
inc
in
add
leave
xchg
jle
fsubl
mov
or
and
sub
lahf
outsl
add
push
inc
sub
or
xlat
or
mov
mov
add
or
imul
int
inc
add
outsl
pushf
xchg
mov
inc
and
jnp
popf
push
add
add
jecxz
lods
ficompl
pause
loope
add
aaa
or
add
les
ljmp
inc
add
jns
es
add
dec
fldcw
fdivl
cmp
xchg
push
add
and
fbld
add
add
add
addb
inc
and
add
sub
in
add
add
add
add
lods
das
rorl
inc
mov
dec
xchg
stc
out
ret
cmpsl
add
sbb
add
ror
add
inc
add
jmp
add
cmpsb
ljmp
add
test
inc
stos
adc
loop
jle
mov
testb
add
incl
add
add
insl
and
sti
push
add
and
add
aad
loopne
fwait
mov
add
push
notb
mov
pop
jb
out
pop
lret
add
call
xor
addb
add
call
mov
loop
jbe
lods
ret
and
add
repnz
int
cmp
add
add
addl
mov
push
and
sbb
aas
add
std
out
add
add
xchg
cmp
add
mov
push
pop
xchg
cld
add
jecxz
loope
cli
mov
add
add
test
jo
pop
and
push
sti
mov
inc
push
xchg
add
jle
leave
sub
in
std
notb
add
jl
mov
loopne
add
loopne
mov
add
pop
mov
mov
add
push
bound
leave
sbb
and
or
add
add
std
je
andl
loop
jg
popa
lods
imul
pop
sbb
filds
inc
mov
rcr
pusha
and
jbe
add
add
add
pop
loope
mov
add
iret
lock
add
adc
mov
add
push
mov
aas
cmpsl
xor
jecxz
cli
ljmp
imul
call
mov
pop
add
outsl
rorl
add
add
repz
xchg
add
jmp
jb
or
imul
jg
push
inc
mov
add
add
mov
outsl
add
outsl
stos
loopne
add
add
add
adc
out
and
and
jmp
stc
and
outsl
add
fldl2e
bnd
dec
mov
scas
scas
xchg
push
roll
or
push
lods
mov
pop
dec
add
ljmp
add
add
icebp
push
out
xlat
sarl
pop
or
loopne
lahf
pop
incl
sahf
hlt
xorb
push
add
cmp
jecxz
popa
add
mov
add
sbb
add
inc
shll
add
sbb
lret
add
add
or
in
mov
std
cld
add
movsb
xchg
es
addl
out
jmp
dec
ret
cli
jmp
add
addr16
or
add
push
and
stos
cmp
add
lret
jmp
inc
jo
call
or
add
jecxz
push
fldl
jno
test
jecxz
pop
enter
insb
pop
jno
jecxz
fwait
cmp
jecxz
mov
and
loop
add
sub
add
mov
jmp
add
cmp
loop
or
xor
ds
add
xor
and
xchg
add
outsl
cmc
fnstcw
sbb
jle,pt
mov
lock
mov
outsl
lods
popa
inc
in
dec
add
add
adc
add
fildl
pop
popf
jecxz
sbb
leave
in
jle
icebp
add
mov
mov
mov
xchg
movsb
fsubrl
add
add
js
jle
or
add
mov
arpl
add
in
push
inc
mov
outsl
dec
add
cld
aaa
jmp
and
or
in
jae
or
sbbl
cmpsb
pop
test
add
add
add
test
and
lods
cmp
das
pop
mov
lods
fwait
jb
popa
and
or
sarl
add
add
push
jmp
dec
mov
add
mov
jbe
cmp
or
add
add
cli
add
mov
rcl
pop
jnp
jle
roll
fsubs
push
pusha
jg
out
add
aaa
aad
dec
in
and
dec
ljmp
mov
and
test
sahf
jbe
data16
add
mov
aam
or
mov
das
or
add
add
jg
andl
jo
mov
das
jle
jo
loope
dec
add
mov
stos
pop
sbb
mov
shl
xor
sub
push
adc
add
jmp
fldt
add
add
jecxz
sar
test
or
pop
add
jle
pop
mov
add
add
incl
decb
add
out
jae
jmp
xchg
std
nop
mov
add
cld
insl
out
scas
dec
push
roll
push
push
jg
sbb
mov
push
add
lahf
pop
out
or
add
incl
cmp
jnp
xor
out
cmp
out
out
add
jg
add
add
loope
out
aaa
lret
push
jecxz
add
push
fnstenv
and
mov
add
jmp
cmpsl
mov
pop
das
mov
fs
inc
inc
dec
add
jle
add
push
pop
inc
mov
not
test
cmp
cltd
test
ficoms
cmp
fsts
stos
xchg
add
or
add
mov
pop
mov
aas
xor
and
or
add
js
imul
cmp
jecxz
or
test
push
out
adc
fisubl
add
adc
add
add
push
or
and
add
jg
lahf
imull
jns
pop
fiadds
add
or
repz
mov
jecxz
add
scas
xor
dec
dec
dec
inc
add
aaa
mov
add
out
int
jecxz
and
add
lcall
out
and
pop
and
mov
in
push
std
iret
cmp
xor
mov
cwtl
add
scas
test
add
add
add
cld
icebp
cwtl
mov
mov
incl
sbb
repnz
add
jbe
add
lods
and
shll
les
test
incl
pop
add
mov
inc
mov
add
dec
add
add
shlb
dec
loop
loop
or
ja
dec
inc
mov
add
pop
mov
xchg
dec
add
jmp
xchg
subb
add
mov
mov
jb
add
test
or
out
mov
mov
inc
push
and
in
pop
les
dec
add
pop
nop
ficoml
jge
cmp
pop
pusha
inc
ret
test
add
loop
mov
outsb
pop
push
xor
dec
xchg
jle
decl
add
in
in
mov
call
lcall
cmp
dec
ljmp
addr16
add
jecxz
jbe
push
and
cmp
push
pop
aad
sbb
mov
add
in
mov
dec
add
stc
lcall
and
decb
add
add
add
in
lds
pushf
mov
jae
das
repz
loop
mov
outsl
xchg
int3
jb
add
clc
mov
ret
push
ds
mov
lret
dec
add
lcall
mov
in
add
add
incl
mov
in
cmp
aam
xchg
or
push
aad
add
dec
cmpsb
mov
jecxz
jle
adc
add
xchg
enter
dec
add
mov
add
add
imul
aad
push
xor
xor
fistps
add
add
lods
jne
sets
xchg
jp
add
pop
push
dec
fmulp
add
add
add
test
mov
add
out
inc
sahf
shl
pop
ficoml
negl
mov
mov
int
mov
jle
cmc
push
or
outsl
add
or
ja
orb
add
mov
sub
lea
and
fldcw
movb
jae
outsb
jbe
jmp
add
cmpsl
inc
in
negb
mov
and
add
add
add
xor
sub
or
and
arpl
jb
cmc
sub
popf
out
fucom
fsubrl
out
add
and
inc
sub
mov
dec
into
xorb
jle
add
cmp
out
add
add
and
insl
cli
dec
sbb
add
les
xor
out
push
add
in
test
loope
pop
loope
stos
arpl
add
xor
loope
add
call
es
push
jmp
and
and
jbe
test
call
cmc
ds
cmp
add
mov
add
add
movsb
pop
push
jmp
popf
xchg
decl
incl
pushf
nop
popl
lods
add
mov
add
add
sub
xchg
and
fisttps
jge
out
mov
inc
or
inc
jo
add
cwtl
cmc
add
cmp
or
add
and
jg
add
incl
and
incl
call
lahf
incl
or
imul
jecxz
add
pop
std
cmp
call
mov
cmp
add
add
add
jecxz
mov
add
add
ss
add
das
mov
xor
loop
fimuls
pusha
std
xor
xor
add
mov
add
add
add
lea
jp
add
in
pushf
and
jle
add
add
mov
loope
xor
mov
in
rorb
xchg
fisubl
sub
fadds
add
add
add
and
adc
clc
add
add
mov
inc
push
and
decl
add
sub
dec
add
mov
rclb
ja
mov
mov
and
mov
mov
add
mulb
insb
adc
and
add
in
add
lods
incb
loop
add
add
jp
add
repz
lcall
push
aaa
add
add
add
dec
cmc
adc
xlat
mov
cmp
fdivr
outsl
add
add
mov
mov
ret
cmp
outsl
pop
lods
jns
add
jecxz
les
add
icebp
push
les
out
cltd
jecxz
add
test
dec
add
sub
add
add
fldt
loope
push
popf
cltd
int
add
inc
adc
into
test
dec
xchg
mov
and
hlt
xchg
aaa
shrb
add
add
add
in
stc
inc
add
stos
fisttpll
add
cmpl
cmp
xchg
in
add
stos
repz
mov
and
add
add
sti
cmpsb
out
inc
subl
and
xchg
jl
or
hlt
add
outsl
out
add
shrl
cli
add
add
pop
add
arpl
and
repnz
ret
out
push
jge
mov
jle
int
add
incl
stos
outsb
lods
dec
sub
and
cmp
and
add
add
push
add
cmpsb
inc
pop
ss
rcrl
and
xchg
mov
clc
add
jmp
sub
add
add
movsl
sbb
aaa
xor
add
add
add
add
and
add
mov
mov
jne
mov
push
pusha
dec
lock
add
lcall
lea
popa
add
dec
das
add
iret
orl
add
add
add
mov
sarb
cwtl
shl
add
out
add
inc
dec
dec
mov
add
and
subl
add
jbe
mov
jmp
stc
nop
and
fucomip
les
mov
mov
stos
ret
call
lock
add
loopne
add
add
add
mov
loope
mov
cltd
jb
data16
add
sbb
push
enter
add
ret
fs
xchg
add
add
ss
or
incl
add
add
fsubr
cli
cmpsl
add
jmp
jns
ss
push
je
add
xor
cmp
push
dec
insl
add
pop
pop
repnz
lds
imul
mov
mov
add
adcb
jecxz
mov
stc
xor
xor
dec
add
notl
or
stos
add
mov
add
add
in
cmp
mov
fsubs
add
nop
loope
cmp
mov
add
lock
add
add
dec
or
fsubs
push
push
mov
aaa
notb
add
or
mov
jmp
add
bound
dec
and
outsl
add
add
xor
add
jb
test
add
into
xchg
lock
inc
or
stc
mov
lods
adc
jp
add
loop
add
push
dec
mov
call
incb
push
fwait
std
cld
daa
das
outsb
add
and
add
mov
add
dec
subl
fcomip
add
jle
mov
mov
lock
cmpsl
jg
push
and
inc
cmp
add
add
out
jne
pop
pop
or
mov
and
sbb
or
add
mov
or
xchg
adc
pop
pop
and
pmulhuw
add
add
pop
push
add
and
repnz
ficoms
add
pop
lds
jb
add
add
jnp
mov
and
lret
mov
in
push
incl
add
xor
jmp
add
add
cmpsb
test
add
dec
test
in
add
inc
sbb
xchg
std
xchg
pushl
add
mov
aad
mov
js
mov
mov
fs
ret
arpl
aam
imul
add
adc
mov
xchg
outsl
mov
jge
mov
and
leave
xchg
adc
mov
mov
add
cli
mov
add
add
out
add
mov
inc
add
add
das
subb
mov
test
mov
mov
mov
add
sub
incl
or
daa
or
add
add
mov
jg
pop
mov
dec
jecxz
inc
cwtl
add
in
in
js
nop
cmp
or
jnp,pn
add
fdivrs
or
aaa
push
sbb
repz
adc
add
add
add
and
add
popf
sub
and
fucom
fiadds
add
jb
xchg
fwait
les
add
lahf
jnp
add
jmp
into
add
dec
add
add
outsl
push
mov
add
xor
orb
repnz
scas
js
repz
js
adc
hlt
cmpsb
les
pop
mov
add
lock
xor
or
inc
jle
add
inc
arpl
ja
add
add
test
cli
mov
push
incb
dec
test
aad
and
stc
or
loop
add
inc
xchg
pusha
mov
and
mov
rcrb
and
rorb
jo
filds
add
jg
pop
fsubl
jno
mov
inc
jl
subl
or
es
and
add
mov
jno
incl
add
jo
jge
data16
add
mov
scas
lock
add
incl
in
out
xchg
xlat
add
sbb
jnp
ljmp
repz
jae
sub
xchg
outsl
and
mov
push
add
add
sbb
add
out
pushf
fbstp
sbb
add
mov
cmpsb
not
add
add
out
sbb
fnstenv
or
add
mov
cltd
out
mov
in
arpl
out
fwait
inc
pop
mov
jnp
push
imul
mov
incl
add
inc
not
jl
in
add
add
movsb
pop
addb
jg
loop
mov
cmpsl
jb
out
add
data16
pop
add
aaa
fsub
ds
mov
add
inc
cld
mov
decl
dec
cmpsb
ret
add
add
jbe
and
xor
add
roll
add
add
ret
ficompl
mov
lcall
cmpsl
cli
jecxz
hlt
in
ds
repz
fisttpll
mov
add
mov
sti
xorps
out
add
dec
enter
flds
add
add
and
add
mov
push
inc
mov
test
push
xchg
stos
add
xorl
sbb
jae
add
add
sbb
ljmp
arpl
add
mov
add
add
add
in
cmovbe
mov
and
xchg
lcall
mov
das
repz
hlt
lcall
add
aaa
xor
repz
cmpsb
call
inc
adc
and
or
and
jae
in
loop
and
xor
rcrb
lcall
mov
popa
xor
inc
je
xor
pop
imul
mov
mov
ret
or
jno
call
pop
lret
pop
dec
dec
aad
add
xorl
inc
fdivl
jmp
jno
or
cmp
mov
add
add
cmp
int3
or
lcall
add
jmp
nop
movsb
fnstenv
out
xchg
xor
pop
fiadds
add
add
fisubs
add
sub
incl
jae
dec
shrb
add
or
and
add
mov
mov
add
test
add
rolb
scas
repz
add
and
cmp
add
repz
in
inc
loop
xor
fisttpl
mov
add
inc
add
dec
cs
inc
or
movsb
popf
popf
xor
add
add
mov
loop
jle
push
add
add
add
add
pop
xor
jle
add
fwait
push
imul
mov
adc
jmp
add
xorb
cs
add
cltd
jmp
dec
std
xor
dec
into
add
mov
add
add
inc
jge
es
fnstenv
pop
and
and
inc
loop
add
add
pop
xor
and
or
add
inc
xchg
add
pop
xchg
rcrb
add
inc
pushf
add
in
icebp
jl
add
jmp
dec
xor
sub
in
mov
or
pop
outsl
jge
fsubl
sub
test
add
mov
cmc
or
add
sub
loope
fwait
xor
add
and
add
outsl
jecxz
add
mov
in
or
mov
mov
incl
add
js
mov
or
and
jmp
pop
add
lock
inc
push
pop
add
mov
or
out
lret
and
test
addl
xor
add
js
in
dec
cwtl
add
add
std
xor
add
pop
xchg
pushl
cld
mov
jmp
roll
jne
or
add
mov
mov
stc
xor
sbb
add
enter
icebp
jmp
mov
dec
ret
push
xchg
or
add
cmp
lahf
mov
add
movsb
fcmovb
outsb
adc
scas
mov
cmpsl
mov
jmp
inc
or
incl
push
jl
add
mov
add
add
je
mov
add
fidivl
cltd
in
add
fcmove
inc
and
push
fldl
add
add
inc
dec
cld
mov
add
adc
cmp
add
dec
ret
dec
ja
and
add
add
push
mov
jg
incl
add
mov
fldt
push
lods
in
mov
add
int
jecxz
arpl
mov
roll
mov
xchg
xorb
add
add
filds
add
add
add
and
push
loope
jnp
or
es
mov
mov
sti
or
mov
add
mov
add
mov
pop
add
add
into
loopne
add
and
fimuls
pop
add
add
enter
sar
mov
and
stc
add
arpl
sahf
cmp
add
xor
outsl
incl
sahf
es
push
jle
subl
add
mov
or
jne
add
or
mov
or
sbb
jno
add
ret
cmp
add
dec
ds
cld
add
outsl
cli
scas
mov
add
xor
dec
jle
add
stos
outsl
xchg
xor
add
and
imul
adc
mov
fisubrs
mov
aaa
cmpsl
pop
icebp
pop
sub
dec
stos
and
add
xor
loop
add
imul
jp
xchg
data16
add
out
incl
mov
mov
cmc
jmp
and
insl
pushl
push
incl
xchg
jl
cltd
and
cld
incl
cmp
add
dec
out
sbb
in
add
int3
test
mov
add
push
add
iret
ss
call
and
incl
add
inc
add
stos
aam
add
aad
cmp
sbb
add
jge
cmp
or
dec
xchg
sub
add
in
sub
std
frstor
je
add
add
add
mov
jecxz,pn
in
loop
loopne
xor
add
inc
test
pop
orl
or
out
ja
add
int
call
push
popf
pop
sub
sti
dec
jle
iret
dec
repz
xchg
add
jecxz
add
push
xchg
mov
das
in
push
lea
fs
outsl
mov
sarl
add
add
jmp
mov
add
loop
leave
arpl
sti
and
mov
leave
add
and
add
or
std
shl
ret
add
outsl
sahf
arpl
jl
xor
push
add
add
sub
pop
xchg
jb
in
add
outsb
adc
incl
xor
or
jle
xchg
mov
add
imul
pop
pop
dec
and
mov
pop
mov
dec
add
mov
add
add
add
dec
mov
test
add
add
sub
lea
inc
mov
add
das
jno
push
pop
add
jg
popf
movsl
mov
mov
lret
dec
and
xchg
xlat
dec
in
add
add
and
push
movsb
jl
incl
push
sbb
fiadds
mov
add
add
sub
ret
jecxz
outsl
pop
loopne
cmp
jmp
add
jnp
int
comiss
xchg
fs
aas
sbb
outsl
and
add
test
add
pop
jo
mov
dec
mov
jle
aam
jbe
inc
mov
inc
dec
pop
push
imul
sahf
rcr
mov
add
mov
outsb
xor
add
loop
hlt
ljmp
decl
mov
add
mov
jmp
test
and
push
cmpsl
jbe
add
out
push
jp
jecxz
cmp
mov
add
lret
loop
and
mov
sbb
jg
jb
or
or
repz
outsl
or
int3
lock
xor
add
or
call
sub
add
or
cmp
inc
mov
sbb
jg
pop
ja
mov
add
add
popa
in
roll
add
out
aam
dec
cwtl
sti
cmp
outsb
adc
add
add
jns
cli
arpl
add
add
push
lret
fiaddl
add
add
cmp
in
add
and
add
add
loop
fcomip
jg
in
xchg
pushf
repz
mul
dec
xor
add
xorl
add
add
cmp
add
add
das
das
or
jns
lahf
push
xor
add
lea
inc
fistpl
sbb
xchg
icebp
mov
add
call
add
dec
add
mulb
out
negl
fwait
add
mov
or
pop
in
add
add
cmpsl
and
cmp
add
loop
insl
or
jmp
mov
push
mov
push
les
in
mov
push
push
adcl
mov
negb
push
add
or
mov
ljmp
addr16
loopne
test
jg
jp
cltd
ljmp
add
incb
cmp
mov
sub
or
or
add
xlat
fwait
bound
or
add
jle
mov
and
xchg
mov
xor
add
scas
aas
sar
std
dec
mov
int
and
outsl
pop
add
inc
sbbl
fldt
and
shl
decl
xchg
inc
sbb
mov
inc
cmp
jecxz
jl
mov
lcall
idivl
dec
aad
dec
add
adc
add
jle,pt
inc
jmp
dec
dec
dec
add
aas
dec
nop
pop
add
loop
add
in
mov
mov
add
jmp
shrl
jecxz
mov
add
push
xlat
lret
pop
incb
ss
aas
push
imul
add
add
add
repnz
inc
add
jle
je
lret
jle
jmp
add
test
aas
xchg
cmp
and
aaa
stc
and
pop
mov
loopne
das
mov
adc
xchg
les
dec
push
jno
add
push
inc
xchg
paddusw
add
add
sub
add
cltd
add
loop
or
lock
dec
jle
add
mov
stc
sahf
jle
xor
popa
loope
mov
or
cmpsl
dec
mov
add
mov
adc
add
out
fs
stos
inc
dec
loop
add
inc
or
add
lods
push
ss
xchg
call
add
add
xchg
xchg
or
add
dec
out
inc
adc
sahf
ret
cmpb
dec
fsubp
arpl
test
jb
dec
push
addr16
lea
add
and
add
test
incl
decl
sbb
and
xchg
out
mov
insb
adcl
ja
or
add
xor
arpl
ret
lds
add
divb
incl
repz
insl
push
adc
add
add
lahf
adc
add
ljmp
jecxz
stos
orl
pushl
incl
add
fisttps
add
add
mov
add
jns
mov
push
add
add
aad
frstor
add
add
ds
xor
add
inc
mov
add
pop
sar
mov
add
fdivrl
adc
mov
add
mov
add
jmp
or
dec
add
add
push
leave
arpl
mov
imul
leave
mov
mov
mov
xor
js
pop
popf
mov
jmp
or
in
roll
out
sub
cmpsl
add
and
sub
hlt
lea
and
inc
je
jb
add
jle
inc
push
incl
insl
insl
inc
add
add
xchg
fcmovnb
push
mov
cmp
xchg
mov
jle
add
movsb
adc
incl
outsl
cwtl
jo
jnp
rorb
and
test
sbb
add
out
into
movsb
mov
add
rcll
and
ret
cmp
sub
test
lds
jmp
add
push
cmp
sbb
add
stos
jns
xchg
jle
add
stos
inc
in
jle
sub
or
mov
outsb
add
into
sbb
cli
push
push
in
outsl
add
jmp
add
jmp
xor
inc
add
sub
or
lahf
add
add
mov
fidivl
add
xchg
nop
lock
mov
xchg
cmp
incl
inc
sub
std
jnp
nop
std
decb
les
imul
pushf
std
cmc
add
pop
xchg
jge
inc
mov
mov
jmp
add
add
loope
iret
xor
outsb
mov
add
scas
ret
lret
or
or
rcl
std
add
incl
dec
pop
cmpsl
xor
mov
add
or
mulb
add
or
xchg
jns
cmp
dec
jl
mov
jle
add
fsubrl
sbb
je
leave
add
add
add
fstps
push
sub
mov
add
mov
add
loopne
add
add
es
cli
jmp
aaa
repnz
leave
js
mov
add
or
add
add
and
in
push
decl
jmp
mov
add
add
push
mov
adc
add
js
or
inc
add
outsl
daa
push
push
mov
add
add
aas
and
fnstsw
push
add
pop
clc
jne
add
add
add
fldt
mov
clc
std
cli
cltd
mov
sbb
decl
or
outsb
loop
insb
add
shl
fs
in
add
add
in
ret
mov
iret
mov
out
repz
add
inc
and
bound
add
imul
adc
stos
and
loop
push
xor
jne
orl
jecxz
out
jge
xchg
into
adc
loop
add
dec
add
mov
loope
push
popa
scas
inc
add
loop
pop
test
inc
mov
mov
call
shrb
push
add
leave
push
inc
sub
mov
push
ss
jecxz
add
add
jb
jbe
outsl
push
jns
jne
jns
popa
jno
ja
outsl
jbe
jb
ja
jo
jb
bound
add
add
and
jle
add
add
cmp
mov
cltd
ret
aam
fwait
mov
shlb
incl
mov
add
lds
xchg
pushf
pop
mov
out
arpl
int
lcall
cmp
es
arpl
add
add
in
push
jae
lret
mov
jae
mov
data16
xor
decl
loop
sub
movsl
ret
xchg
add
add
mov
add
mov
add
add
aam
cmp
adc
enter
sub
fcoms
cmp
or
add
jb
adc
ds
add
fmull
cmpsb
xor
and
add
decl
push
pop
and
addl
mov
je
or
add
loope
test
aaa
mov
sub
and
add
add
add
cwtl
addr16
jmp
mov
jecxz
add
pop
or
jbe
inc
push
lods
mov
loop
add
push
jo
sub
pop
mov
icebp
stos
and
scas
addr16
rcrl
rcr
mov
or
add
les
hlt
add
and
add
das
add
loop
or
and
movb
pop
sub
sub
inc
add
push
loop
add
call
xchg
addl
dec
push
mov
das
fadds
repnz
mov
add
xor
xchg
or
bound
add
cmp
cmpsl
out
roll
pop
hlt
xor
and
add
or
and
mov
outsl
add
call
mov
mov
push
push
ficomps
jno
add
dec
icebp
cmp
add
add
aaa
insl
repnz
add
add
xchg
pop
or
add
das
mov
add
mov
and
xchg
pop
add
add
fimuls
ret
insb
pop
cli
xchg
sbb
jmp
push
add
lock
addl
cmp
popf
or
les
push
inc
add
lods
cmp
jp
incl
add
mov
ret
sub
sub
lods
add
jne
or
jle
add
push
adc
cmpsb
clc
inc
incl
mov
in
add
out
mov
add
outsl
out
mov
mov
push
ja
fadds
int3
add
xor
xorb
xor
or
add
out
mov
and
xor
add
and
pop
out
and
mov
pop
adc
adc
add
mov
jecxz
rorl
dec
decl
jl
in
add
in
hlt
lahf
add
jmp
inc
push
sub
mov
add
xchg
push
iret
test
or
xchg
push
jmp
add
add
add
mov
add
popl
cltd
in
add
xchg
xor
add
jmp
std
cltd
mov
push
inc
shlb
and
loopne
loop
incl
add
ficoms
mov
mov
incl
fcompl
iret
push
decl
add
mov
dec
les
adc
mov
or
cmp
mov
add
call
in
in
mov
les
jmp
loopw
mov
and
clc
and
push
xchg
jle
call
add
fidivl
fnstcw
add
inc
sub
jecxz
xchg
dec
and
mov
push
mov
sbb
sub
loop
jecxz
shrl
mov
jg
sub
and
sti
xchg
in
add
inc
mov
imul
roll
in
repnz
push
aaa
adc
rorl
add
mov
stc
jl
adc
and
add
loope
add
or
jno
lcall
xchg
add
push
adc
add
add
mov
pop
sbb
adc
das
out
popa
sub
or
dec
add
out
and
push
adc
mov
dec
push
add
add
inc
pop
cli
lret
adc
sbb
add
out
xor
mov
lock
add
add
fdivrl
enter
add
movsb
add
pusha
nop
push
mov
aad
ret
xchg
push
mov
add
outsl
add
push
mov
jg
fimuls
and
add
add
loope
sbb
mov
add
leave
mov
aad
mov
fidivrl
mov
add
mov
test
add
das
les
incl
repz
hlt
lcall
lods
inc
add
das
jg
in
enter
add
pop
pop
flds
and
test
das
clc
stos
or
std
in
jne
inc
in
mov
jmp
add
jmp
in
ss
mov
sub
mov
add
mov
xchg
cmp
leave
add
jmp
inc
jns
push
in
test
dec
jno,pn
call
popl
or
dec
add
pusha
lods
jae
add
add
or
xchg
fisubrs
add
std
dec
lret
add
outsl
loop
js
lret
inc
popf
push
add
dec
repz
in
xor
jb
sbb
jg
add
outsl
mov
mov
loop
add
mov
add
push
das
outsb
mov
dec
in
add
add
add
add
insb
fsubrl
xchg
inc
outsb
mov
daa
bound
jecxz
mov
push
jg
xor
add
ror
add
add
dec
sub
push
push
add
add
add
and
xor
and
add
mull
sub
cld
movsb
cld
cmp
sbb
les
ret
outsl
add
sbb
xor
add
add
sub
incl
add
mov
jle
add
add
add
sub
add
add
leave
mov
add
or
xor
cmp
cltd
stos
mov
popa
or
int3
cmpsl
std
mov
add
dec
add
cmp
add
add
xor
push
or
add
call
test
xor
daa
rolb
cmp
add
add
loop
add
fisttpl
or
add
mov
add
add
mov
out
add
add
adc
dec
jg
in
dec
add
inc
add
pop
stos
nop
or
add
loop
add
or
add
jg
dec
loopne
les
add
stc
test
add
and
inc
and
or
adc
add
pop
insb
jnp
ret
rolb
out
xchg
jmp
add
negb
incl
mov
push
dec
dec
add
add
ss
add
add
add
cld
push
gs
add
loop
sub
add
inc
sub
popl
or
pop
iret
xchg
mov
add
add
out
add
add
mov
add
ja
push
add
add
add
mov
pop
imul
enter
rcrl
or
insb
ja
in
test
and
incl
dec
jl
cmp
add
in
add
xchg
fucomp
xchg
xor
outsl
add
add
addl
adc
or
lcall
add
xor
jmp
scas
incl
cmpsb
xchg
add
daa
or
xorb
ror
jle
repz
mov
mov
add
inc
xchg
push
add
add
incl
mov
add
jno
lds
mov
cmpsb
enter
daa
jge
and
jb
ret
enter
arpl
outsl
or
mov
mov
add
add
and
movsb
sbb
fisubs
add
fsubrs
lcall
add
std
imul
mov
sbb
popa
inc
jg
add
add
add
or
add
or
and
dec
add
stc
mov
mov
add
xor
add
dec
mov
add
add
jecxz
mov
les
add
add
test
lds
jle
mov
or
add
or
jno
pop
pop
loopne
les
call
jns
outsl
adc
and
add
add
pushl
in
dec
add
add
add
or
add
add
dec
jg
cld
push
addr16
dec
aaa
pop
mov
and
xchg
out
add
lods
add
lcall
add
add
das
xchg
mov
add
pusha
testb
into
aaa
js
dec
js
in
or
xor
xor
sbb
leave
add
shlb
add
cld
mov
add
loope
mov
lahf
sbb
out
add
je
mov
add
and
dec
lret
in
add
into
fstl
add
insl
mov
test
add
jmp
and
add
mov
push
xor
add
data16
stc
mov
add
and
frstor
orl
push
push
jne
popa
add
and
push
int
das
mov
je
scas
add
decl
pop
cltd
jecxz
add
and
repz
dec
movsb
das
and
add
stc
mov
dec
out
jne
pop
add
dec
sbb
jecxz
adc
jne
add
jmp
add
cmp
mov
xorl
add
imul
add
cmp
push
push
mov
or
xchg
repnz
cltd
ja
push
push
and
outsl
xchg
testl
pop
mov
add
add
and
and
xchg
lods
add
push
dec
pop
icebp
add
adc
add
cmp
xchg
add
add
push
xchg
test
sbb
out
mov
add
and
ret
adc
incl
add
lock
mov
and
mov
or
adc
add
pop
add
inc
add
out
cltd
push
cld
mov
add
insl
mov
cmp
add
add
and
mov
jle
add
adc
xchg
scas
ret
inc
add
mov
jnp
rolb
inc
test
add
or
orl
add
frstor
add
pop
add
mov
inc
cmp
out
sub
cmp
add
mov
xor
mov
outsl
mov
add
mov
in
loop
add
xor
jle
or
and
ds
test
ss
sub
lods
push
mov
stc
and
jge
into
sub
imul
dec
incl
jne
outsb
jns
or
add
fcmovnu
std
loop
incl
add
repnz
lahf
fldenv
push
or
flds
or
dec
pop
pop
outsb
add
test
push
inc
decl
push
sub
outsl
pop
es
lea
jmp
sbb
addr16
gs
jbe
ss
in
incl
add
fldln2
hlt
jno
mov
add
xor
mov
adcl
add
outsl
mov
add
add
push
cli
dec
add
and
dec
jle
add
xor
insl
addl
mov
jo
add
loop
jns
out
jecxz
out
add
adc
add
sub
testb
add
add
push
stc
and
mov
outsl
out
insb
es
incl
add
jecxz
cmp
add
add
pop
mov
hlt
pop
js
add
out
and
into
loop
inc
push
lsl
arpl
and
xor
scas
cmp
mov
add
dec
sub
add
decl
std
fimull
push
repz
add
cmpsb
pop
sti
push
xchg
add
bound
add
add
add
xchg
fisubrl
aad
shlb
and
add
or
in
jle
add
mov
cmpsb
clc
or
jg
add
out
lcall
in
add
inc
das
add
and
popf
test
add
incl
and
add
add
stos
xor
add
and
jmp
mov
mov
inc
jg
dec
jecxz
sbb
incl
add
add
jnp
movsb
incl
ljmp
lods
add
mov
std
mov
out
push
js
call
fstpl
add
jle
add
cmpsb
push
pop
or
sahf
lea
in
mov
push
mov
mov
mov
imul
add
add
andb
mov
add
jp
call
add
push
fsubrs
dec
add
pop
into
inc
xlat
mov
add
outsl
leave
cmpsb
cltd
inc
test
scas
xchg
dec
dec
xor
ljmp
icebp
mov
ljmp
and
add
pop
repz
jle
incl
in
xchg
movsl
xchg
add
add
lret
jl
sub
je
pop
cmp
out
jg
fs
jae
and
pop
sbb
cli
xchg
add
les
aas
xor
pushl
add
add
add
inc
and
in
pop
push
add
incl
pop
mov
add
cmp
leave
shrb
sbb
add
ljmp
loope
add
fcompl
mov
iret
sbb
incl
add
jge,pt
js
jl
out
add
addr16
inc
shlb
pusha
add
jle
lods
add
inc
add
add
pop
mov
cmc
incl
add
add
add
stc
addr16
jg
jg
call
mov
add
xchg
dec
out
xchg
loopne
sbb
inc
xlat
add
enter
dec
add
and
jecxz
pop
in
add
jmp
sarl
out
add
add
adc
jmp
mov
scas
xchg
jl
outsl
popl
add
and
jecxz
addb
loope
xchg
or
add
out
and
sarl
add
outsl
addl
divb
add
or
xchg
adc
and
into
xor
jle
mov
and
and
jg
xchg
add
add
jmp
stc
add
jp
add
in
ljmp
js
mov
std
add
add
push
call
cmpsl
lods
cmpsl
or
outsl
add
push
in
jecxz
sbb
add
add
xorl
out
dec
add
and
jae
test
add
and
les
mov
adc
xor
fdivrs
mov
or
ljmp
add
add
dec
inc
push
mov
incl
add
add
add
add
jmp
push
mov
add
cld
pop
xchg
std
add
or
sbb
add
loope
add
add
pop
sti
stc
enter
loope
aaa
inc
outsl
mov
add
jecxz
out
divl
mov
outsl
insl
xchg
orb
push
idiv
jmp
jnp
out
data16
incb
incl
add
mov
sub
mov
or
inc
lds
xchg
pop
add
xchg
lcall
add
mov
and
add
mov
push
jg
add
jecxz
not
add
incl
call
and
jg
add
or
out
push
lods
rolb
add
mov
add
loop
cwtl
xchg
mov
mov
sbb
in
decl
add
add
xor
cli
mov
add
add
js
scas
bound
sub
mov
adc
push
add
dec
or
cli
jns
and
pop
in
in
leave
jne
add
add
add
xchg
addr16
or
add
aaa
xchg
fsubrl
pop
sub
add
xor
dec
push
add
imul
dec
das
push
out
mov
push
in
sbb
add
fucomi
xchg
add
and
and
add
xchg
scas
sub
add
sbb
andb
and
xor
add
pop
add
add
mov
js
add
add
inc
incl
mov
or
incl
jecxz
sub
or
mov
das
add
sbb
outsb
add
jle
aam
pop
jmp
add
add
mov
jecxz
cmpsl
dec
cmpsb
dec
add
js
xor
add
add
in
sub
insl
add
and
adc
sub
rcr
incl
sbb
movl
push
add
jl
jnp
jo
lcall
jne
and
add
adc
add
mov
rorl
xor
dec
jmp
in
clc
mov
add
mov
add
add
test
xor
add
push
and
imul
pop
mov
add
dec
add
jl
ja
dec
add
cld
cmp
inc
addr16
add
sub
or
add
add
lcall
lret
mov
add
cmp
add
repz
fldl
add
lea
lret
mov
ja
std
rcll
mov
add
add
add
jg
jp
out
es
add
add
or
add
imul
popf
jcxz
loop
sub
inc
adc
dec
push
xor
outsl
add
mov
jle
das
and
test
stc
add
or
cmp
jl
add
subl
arpl
add
pushf
inc
mov
push
mov
inc
in
ljmp
mov
add
pop
lock
add
xchg
and
add
jno
inc
inc
mov
add
jle
loopne
jnp
jl
or
ds
dec
mov
scas
cmp
mov
outsl
add
inc
pusha
pop
and
js
jle
sbb
add
add
add
add
mov
jecxz
or
and
aad
add
loope
lods
cmp
inc
and
jg
add
je
push
jno
add
das
inc
mov
add
jg
data16
xchg
adcl
pop
cmpsb
notl
rorb
add
fwait
pop
insb
jns
or
mov
pop
add
jne
dec
pop
mov
loop
add
sub
mov
mov
les
push
add
outsl
inc
pop
push
jb
popa
mov
adc
add
sbb
in
out
call
iret
add
das
add
mov
adc
mov
add
repz
ds
add
inc
pop
repnz
add
pop
cli
xchg
jbe
adc
and
dec
movb
loope
add
add
out
test
mov
mov
sub
dec
decl
adc
add
insl
iret
std
loope
sarb
mov
jge
and
lods
xor
fmuls
add
es
incl
inc
sbb
add
add
xchg
nop
scas
pop
cmp
out
jmp
add
add
add
mov
cltd
into
jecxz
add
xor
or
mov
jle
lretw
add
mov
xchg
lcall
add
std
add
add
pop
jg
adc
orl
adcb
out
repz
loope
inc
or
add
mov
and
jb
rcrl
mov
cmp
out
lea
arpl
dec
pop
mov
mov
cmp
add
test
add
add
ss
add
mov
loop
xchg
mov
dec
addb
add
add
mov
mov
add
fcomi
xchg
or
sub
ret
add
add
sbb
add
daa
xchg
int3
call
xor
stc
mov
inc
add
adc
push
int3
and
add
loop
mov
add
cmp
add
mov
add
out
rolb
add
lahf
daa
imul
pop
pop
clc
stc
stos
dec
adc
mov
mov
add
pop
pop
inc
stos
in
add
in
lods
xlat
or
add
xchg
in
inc
or
and
or
add
push
sub
jmp
mov
xchg
add
ret
xchg
out
sbb
mov
and
lods
inc
arpl
add
mov
sub
pop
jle
add
adc
cmpsl
mov
add
and
add
and
jne
add
and
and
pop
out
jae
outsl
mov
pushf
test
lret
dec
in
dec
and
or
inc
insb
add
add
divl
add
add
push
or
xlat
stos
pushf
dec
pop
xchg
push
jno
int
add
jb
xor
dec
mov
push
imul
test
loop
out
jg
cmc
movaps
dec
and
out
add
das
mov
out
mov
add
mov
shr
add
push
or
and
sbb
mov
pop
les
in
add
add
add
add
cmpsb
cmp
xchg
add
add
xor
flds
jecxz
add
add
mov
add
pop
inc
inc
mov
shlb
in
les
and
and
mov
mov
jbe
add
stos
out
lcall
pop
sub
add
les
add
dec
ds
aas
sbb
push
or
or
jge
popa
cld
cli
mov
add
add
xor
xor
cld
gs
cld
cld
inc
xor
xchg
ljmp
add
inc
sbb
jmp
call
dec
ja
xchg
add
dec
dec
sbb
pop
add
mov
and
push
and
add
rclb
or
xor
add
je
jle
add
add
shll
addl
adc
or
and
push
add
repz
cmp
loope
add
das
cmp
sub
add
and
gs
pop
add
or
add
adc
dec
and
pop
push
push
or
inc
sbb
dec
nop
loope
add
jnp
and
ret
into
lds
outsl
push
and
add
jg
fs
adc
popf
add
incl
subl
sbb
pop
popf
rolb
fadds
add
jnp
movsl
inc
and
call
rcrb
add
daa
cs
addr16
mov
add
add
adc
out
fildl
sahf
dec
mov
push
add
add
jle
add
fwait
xlat
daa
test
add
add
add
div
jg
call
add
loop
dec
add
dec
add
mov
add
and
inc
add
fdivl
sbb
loop
insb
add
lods
js
or
in
jmp
fdivp
mov
add
ret
and
jl
add
ds
add
rcrl
add
add
pop
and
cmc
cltd
flds
add
push
mov
mov
mov
push
add
outsl
add
outsl
mov
add
pop
add
add
mov
mov
mov
jmp
rorl
test
xchg
mov
in
mov
rolb
add
iret
jne
lcall
add
enter
and
cmpsl
pop
and
jge
push
add
jg
ja
fs
jp
cs
add
cltd
int
addb
lock
add
cmp
cmpsl
add
add
insl
lret
fisubrs
adc
add
movsl
pop
mov
and
add
add
push
pop
outsl
xchg
adc
add
add
mov
test
and
dec
inc
add
xor
inc
fld
out
loope
add
mov
test
add
or
decl
push
subl
addl
addl
and
clc
pop
add
jge
add
add
outsl
pop
test
test
mov
add
add
lret
nop
jge
testb
xchg
mov
loop
jmp
iret
in
jle
cltd
in
sbb
add
call
mov
jbe
inc
add
add
outsb
xchg
inc
in
dec
add
sarb
or
decl
add
dec
add
loop
clc
push
mov
xchg
shlb
add
std
mov
cld
dec
aad
add
pop
in
inc
xchg
dec
add
add
loop
inc
cltd
or
mov
add
aas
arpl
and
cwtl
out
aad
sub
jecxz
and
dec
add
push
pop
clc
sub
les
add
ljmp
imul
jno
add
scas
jg
clc
xchg
jae
mov
jle
ss
clc
mov
add
or
mov
xchg
pop
lsl
mov
push
add
and
or
push
xchg
sbb
sub
add
call
mov
add
or
call
push
out
aaa
add
dec
add
add
jecxz
mov
add
or
out
test
ficomps
leave
pop
les
orl
jecxz
leave
loopne
add
add
test
insb
leave
jns
orb
nopl
add
or
add
jle
mov
push
mov
push
mov
add
cmpsb
xchg
incb
mov
add
mov
add
scas
scas
mov
add
xor
rcll
add
sbbl
or
mov
add
ds
jnp
sti
or
sub
jl
add
cmpsl
fcmovu
add
inc
add
pop
stos
loopne
lock
jg
and
mov
add
add
out
dec
inc
pop
dec
add
add
test
and
fnstcw
dec
push
or
out
pop
les
dec
add
mov
add
test
and
and
rclb
add
xchg
call
add
mov
add
add
dec
and
ds
lods
aaa
mov
add
sub
out
rcrb
add
lods
cmp
cmp
and
add
add
and
xchg
jle
add
sub
notb
mov
incl
xor
xchg
sbb
lahf
sbb
loop
dec
push
incl
or
mov
cmp
outsb
cmp
push
loop
add
jb
divb
push
add
jle
mov
and
loopne
fstps
mov
or
clc
add
and
ret
pop
pop
mov
add
jle
lret
mov
sbb
incl
add
outsb
adc
push
lds
dec
ret
push
les
push
out
pop
adc
add
push
xor
mov
ljmp
in
add
and
push
pop
add
add
add
pushf
adc
add
add
repz
and
les
into
adc
jecxz
stos
jbe
ret
add
jp
sub
add
add
dec
dec
test
jmp
insl
das
jg
xchg
pop
cmp
mov
add
or
jbe
xor
add
int3
test
mov
or
mov
pop
inc
lret
out
pop
mov
pushf
lcall
std
test
xor
xor
sahf
add
sti
es
pop
adc
add
or
xor
and
fstl
add
or
add
and
push
and
add
or
call
lods
and
mov
push
cmp
and
add
mov
in
es
fdivrp
push
dec
mov
out
mov
out
dec
add
jg
mov
and
add
cs
mov
xchg
xor
add
lret
stos
movsb
add
repnz
loopne
aam
mov
jle
add
addr16
add
or
out
add
aam
testb
loop
add
or
jle
mov
add
add
lods
in
ja
add
mov
add
xlat
and
add
mov
mov
pusha
push
aaa
pusha
cmp
add
add
test
xchg
ds
and
inc
idivb
xor
dec
inc
jp
aaa
jbe
fadds
and
jmp
jmp
add
aas
mov
add
sub
stc
aam
add
add
mov
add
cmp
stos
add
outsl
dec
adc
adc
ljmp
ror
outsl
jg
add
adc
add
push
cmp
sar
push
jle
jle
les
xchg
add
jl
inc
inc
mov
add
call
add
ds
add
push
mov
addl
sbb
xchg
and
aas
rorl
lahf
and
lods
out
add
push
pushf
jecxz
add
xchg
leave
mov
add
loope
iret
shll
incl
add
rcl
outsl
push
inc
mov
dec
pop
outsl
cmp
jle
add
push
rcl
push
add
incl
xchg
imul
adc
sub
loop
or
and
xchg
mov
inc
jecxz
and
or
add
xchg
mulb
mov
add
add
jae
add
mov
jbe
movsl
add
cwtl
ljmp
jge
outsl
add
add
sarl
mov
add
enter
aam
incl
add
jg
arpl
dec
or
arpl
std
xor
cmp
or
jle
ds
iret
outsb
push
outsl
call
or
cli
test
add
mov
push
jle
add
das
mov
add
add
popf
adc
add
incl
repz
and
repnz
add
jle
xchg
sbb
and
cmpsl
sbb
add
sahf
or
ret
roll
jle
add
cmp
push
add
bound
inc
shll
add
stos
dec
loop
or
add
add
xor
in
enter
mov
add
add
fadd
and
call
add
add
add
mov
insb
jp
add
insb
cmpsb
cmc
jp
add
add
cmpsb
popf
fcomps
xor
and
cmp
int3
imul
dec
fnstcw
stc
mov
call
outsb
loop
mov
add
and
sub
jnp
add
in
fcomps
jecxz
dec
out
mov
pusha
add
add
addr16
and
or
mov
add
lea
je
ss
andl
data16
add
dec
mov
add
mov
ret
ljmp
add
add
add
or
dec
add
aam
inc
jmp
sub
push
xor
inc
and
stc
call
enter
or
add
dec
bound
pusha
nop
inc
popl
decl
fisubrs
jl
mov
add
hlt
sub
dec
incl
sti
leave
ljmp
jnp
add
mov
adc
dec
and
add
in
add
jg
add
pop
or
dec
dec
add
jle
add
cmpsw
cwtl
cltd
add
in
out
xchg
mov
andl
outsl
add
lcall
jno
and
test
add
jecxz
popa
mov
xor
mov
test
xchg
cmp
dec
lret
cmp
or
inc
lds
jbe
or
push
and
in
pop
mov
push
pusha
add
fs
adc
add
add
rolb
in
fnstenv
mov
jmp
dec
push
jns
fstpl
add
mov
jo
ljmp
sub
add
mov
jmp
iret
out
add
jecxz
push
and
pop
push
dec
das
jmp
pop
or
xor
in
or
inc
cmp
xor
adc
push
add
jno
insl
in
mov
incl
decb
add
call
jnp
out
incb
or
add
jle
mov
mov
aam
or
add
fadds
add
add
add
nop
sub
in
and
jnp
je
incl
repnz
jmp
dec
adc
add
push
sub
decl
mov
mov
add
nop
sbb
push
and
add
or
jg
ds
cwtl
roll
jecxz
xchg
push
stc
xor
xor
add
add
roll
adc
cmp
add
aas
mov
add
rorb
push
mov
mov
and
ret
mov
and
fwait
mov
cmc
movsl
fsubl
loope
pop
loope
mov
lret
and
sub
dec
sbb
out
pushf
push
les
add
or
add
add
cmpsb
repnz
pop
andps
outsl
das
clc
call
or
fsubrp
into
test
mov
add
out
add
jle
jno
jl
add
add
pop
pop
outsl
push
loop
jecxz
xchg
mov
stos
cmp
adc
stos
add
xchg
stos
faddl
mov
jmp
or
pusha
stos
sbb
fnstcw
add
test
loope
add
add
dec
mov
mov
add
push
sar
das
mov
out
fimuls
mov
add
jle
add
add
incl
xchg
add
jl
mov
incl
cli
jnp
jmp
add
add
incl
add
sub
loop
les
inc
inc
dec
add
outsl
add
jae
mov
outsl
repz
add
repnz
shl
mov
add
add
sub
jmp
scas
dec
loope
xor
add
mov
add
in
mov
push
add
jbe
decl
jle
incl
lret
xchg
call
add
pusha
cmp
jl
inc
mov
add
data16
or
mov
add
icebp
or
mov
hlt
dec
push
lret
notb
sbb
mov
addl
test
mov
or
sub
mov
icebp
ficompl
sub
xor
mov
in
xor
add
add
ds
adc
int
sbb
add
mov
incl
add
add
xchg
push
mov
call
add
xchg
add
jnp
or
xor
es
jb
mov
jecxz
add
sahf
mov
add
cmpl
and
add
ss
push
push
and
and
add
dec
jnp
testl
stos
add
aad
mov
orl
jp
dec
stos
stos
out
jp
jecxz
adc
and
jmp
mov
adc
into
jmp
add
loope
dec
imul
mov
ljmp
push
aad
or
andl
outsl
add
cltd
pop
leave
fwait
jle
in
add
adc
mov
repz
add
dec
add
add
adc
and
test
cmpsb
movsb
add
cmpsb
movsb
mov
in
mov
add
add
ficoml
and
pop
popf
aas
add
add
jb
lods
add
add
xor
lods
pop
mov
mov
add
pop
rolb
add
cs
inc
or
addl
and
repz
add
inc
in
mov
incl
pop
test
ficoms
das
mov
xor
jl
push
mov
and
jne
les
inc
pop
add
add
dec
mov
popa
xor
mov
add
in
jg
insl
push
loop
add
jp
jns
sbbl
jl
add
sbb
nop
test
mov
cs
adc
add
jbe
shrb
rcrl
add
jle
incl
fistps
or
add
pop
add
xor
cmpsb
push
jle
mov
cmpsb
push
stos
ss
add
add
push
mov
in
adc
daa
notb
add
add
add
call
rep
loop
fnstenv
in
mov
push
and
jae
mov
and
pop
cwtl
mov
add
add
inc
jbe,pn
in
incl
push
jp
test
call
jecxz
push
add
mov
imul
movsl
xchg
jmp
xlat
sbb
loopew
add
mov
mov
repz
add
outsl
mov
add
sarb
lods
add
repz
push
add
in
pop
daa
cmp
or
jg
cmpl
xlat
sub
call
pop
cmpsb
mov
add
or
std
cmp
jns
ja
or
cmp
add
and
fiaddl
lcall
pop
xchg
jmp
jp
or
jl
sahf
add
add
add
inc
pop
or
in
call
mov
adc
sub
psubw
add
and
outsb
mov
jl
add
andl
dec
mov
add
das
mov
add
in
sub
pop
test
das
std
mov
call
dec
repz
iret
movsb
and
lods
jno
xchg
je
add
mov
sbb
and
mov
out
imul
add
add
nopl
jae
or
and
stc
add
add
ljmp
adc
test
add
inc
fbstp
mov
add
movsb
popa
inc
push
adc
add
add
lahf
fbld
and
dec
sti
or
add
repz
loop
std
inc
xor
xor
sub
add
add
dec
add
callw
andl
add
add
add
add
loopne
adc
mov
jmp
push
out
out
sti
enter
pop
mov
jmp
outsl
inc
ds
add
or
bound
mov
inc
and
cmp
pop
add
add
add
jb
loop
add
or
xor
pop
jno
xchg
add
mov
xchg
fistpll
pop
and
imul
jle
add
xor
pop
or
lahf
pop
je
add
in
insl
sub
jne
add
cld
xor
pusha
sub
dec
xor
add
add
add
add
pop
or
jge
add
add
lcall
loop
add
add
mov
add
mov
add
clc
shlb
fcmovbe
out
add
mov
jl
jle,pt
mov
mov
push
call
daa
jae
add
add
jge
pop
add
icebp
mov
arpl
mov
dec
sub
aas
mov
iret
dec
jbe
mov
incl
push
call
arpl
outsl
imul
jp
bound
imul
jp
ja
outsl
outsb
inc
sbb
inc
inc
mov
add
and
xchg
movsl
jmp
sub
xchg
add
pop
or
add
cltd
es
cmpsb
repz
push
add
loope
dec
outsl
das
or
add
jne,pt
inc
add
add
push
lret
inc
incl
push
or
sub
push
imull
aad
inc
push
incb
out
inc
cmp
mov
incl
add
dec
inc
mov
add
add
out
popf
insb
loope
les
jae
loop
add
add
and
fldcw
incl
das
inc
mov
push
jb
das
add
je
mov
add
daa
ret
xor
or
and
add
add
and
gs
add
jle
scas
mov
add
andl
fs
lret
jbe
call
inc
xor
add
jg
test
data16
and
and
loope
mov
bswap
sub
inc
add
mov
out
incl
repnz
push
mov
iret
add
imul
add
add
xchg
add
outsl
ret
jmp
das
add
je
inc
and
add
and
cmp
cmpsl
add
mov
sbb
in
add
add
loop
jnp
jno
lahf
push
in
add
add
add
add
xor
xchg
insl
mov
test
add
pop
in
adc
xchg
leave
addl
mov
add
add
loope
rol
fisubrl
push
orl
add
incl
dec
push
lock
and
push
popa
leave
dec
repz
icebp
push
pop
stos
xchg
lods
les
jge
cld
mov
and
add
pop
dec
das
repz
add
mov
add
dec
add
add
movsl
pop
shl
mov
dec
cld
fs
mov
cs
add
mov
add
loope
dec
imul
test
add
das
add
add
and
or
incl
add
jbe
jl
in
sub
xor
imul
pop
call
cld
scas
cld
add
add
call
cs
movsb
cltd
cmc
cmp
pusha
and
sub
inc
add
fisttpll
aad
add
dec
and
adc
aaa
jo
add
add
test
adc
add
mov
loop
mov
add
add
push
mov
mov
jmp
or
xor
das
ret
je
jecxz
mov
jecxz
incl
add
push
adc
xchg
add
mov
and
add
jle
addr16
and
das
jg
shl
push
xor
add
cli
out
inc
mov
mov
pop
stc
or
test
inc
add
and
lret
xchg
fwait
jae
or
shlb
jae
add
add
add
adc
add
add
incl
push
test
enter
pop
pop
xchg
and
js
add
and
add
int
out
push
add
outsl
add
dec
add
jle
mov
popa
insb
add
and
cltd
mov
das
incl
ret
xor
mov
jo
imul
dec
or
add
insl
into
std
incl
cld
xor
and
ss
insb
lods
aad
add
aam
mov
add
mov
mov
dec
lcall
sub
push
and
test
add
in
sub
jge
or
add
dec
fstpl
das
add
out
jne
lret
xchg
add
add
sub
mov
call
cmp
and
pop
and
mov
mov
or
dec
add
arpl
jecxz
mov
add
and
repz
add
jne
pop
jp
sub
incl
mov
dec
ja
add
das
add
add
inc
out
cld
sldt
and
and
mov
in
insl
sldt
mov
jno
add
jmp
fninit
add
dec
mov
or
add
xor
add
add
mov
aam
incl
add
add
dec
cmp
and
loop
sbb
inc
andl
dec
push
int
and
mov
adc
ljmp
add
lahf
xchg
push
sub
loop
add
mov
add
incl
stc
pop
testl
repnz
lods
loopw
lods
jmp
dec
add
std
leave
fldl
add
add
and
out
and
pop
add
mov
add
push
add
add
add
lahf
add
ja
mov
sahf
repz
dec
jl
add
push
and
xor
and
sbb
js
push
jns
pop
add
mov
dec
or
nop
pop
xchg
and
add
add
mov
pop
xor
and
fwait
jg
stos
add
into
or
or
add
clc
and
flds
jmp
add
and
mov
mov
add
or
push
adc
or
jecxz
insl
mov
xchg
xchg
add
and
add
repz
sbb
add
mov
out
pop
fadds
add
add
mov
outsb
pop
insl
add
add
ret
sbb
push
incb
add
xchg
sbbl
jecxz
dec
and
push
add
incl
add
mov
icebp
sahf
int3
or
add
ret
cmp
add
add
add
mov
add
add
out
mov
add
push
stos
inc
cmp
mov
mov
inc
cmp
sbb
or
add
loope
cmp
and
pop
call
add
fcomi
push
adc
add
pop
ja
movsl
lds
fldt
and
movsl
jmp
xor
cld
xchg
mov
clc
dec
ljmp
nop
jnp
xchg
fwait
mov
addl
or
cld
jp
fwait
add
mov
add
lea
add
cmp
and
add
jecxz
in
xchg
sbb
add
xchg
dec
dec
loop
add
push
sbb
lea
add
mov
in
fldl
push
int3
jmp
add
popf
mov
cmp
cmp
cmpl
sub
add
inc
pop
push
leave
add
add
repz
jecxz
add
xchg
icebp
mov
mov
mov
inc
add
cmpl
lret
mov
loop
push
pop
jmp
imul
mov
jecxz
add
test
add
aaa
dec
fwait
or
add
add
je
add
arpl
jp
xchg
add
jecxz
pop
fsubs
add
and
test
sub
les
mov
add
dec
cwtl
add
or
or
dec
xchg
pop
mov
add
cmp
add
mov
iret
xor
jle
add
hlt
rcrb
das
and
pop
incl
add
das
cli
fwait
imul
decl
nop
sub
subl
or
aas
cmp
add
syscall
rolb
add
and
fmuls
and
add
ds
dec
incl
add
mov
or
test
subl
push
adc
repz
add
add
mov
inc
inc
add
fwait
and
add
fidivl
lahf
push
dec
mov
add
push
enter
add
push
mov
push
xor
xchg
xor
xor
les
sbb
add
push
xlat
dec
or
add
add
mov
add
or
and
xor
imul
add
ret
shlb
mov
jecxz
pop
lock
mov
mov
add
out
sbb
cmp
sarl
or
loop
add
mov
add
push
lcall
ss
push
push
push
call
xchg
ret
add
jle
add
adc
add
inc
std
mov
mov
jg
add
imul
in
mov
out
sbb
in
jno
cwtl
add
insb
fs
ljmp
ds
jb
pop
add
add
in
jmp
lds
add
adc
add
xor
and
loope
inc
add
add
jl
push
add
xor
jge
and
push
add
sbb
in
add
mov
add
incl
add
push
in
out
add
or
jle
mov
adc
add
add
mov
pop
mov
rolb
out
lret
cmpsb
enter
int
and
popa
mov
add
sub
add
xchg
add
add
icebp
push
pop
std
xor
jle
add
movsb
cwtl
loope
mov
scas
push
lcall
addb
mov
xchg
jno
int
add
add
dec
cltd
jbe
sbb
add
addr16
or
add
les
test
push
add
add
in
ja
pop
movsb
inc
add
and
xchg
scas
add
enter
jmp
jle
or
sub
cmp
or
incl
pushl
ds
je
popf
cli
inc
and
jecxz
loop
add
mov
add
pop
mov
add
sub
pop
aam
push
arpl
add
xor
mov
loop
fadds
mov
mov
xchg
push
loop
add
add
stos
push
pop
inc
add
xlat
dec
jle
add
jo
lcall
in
add
mov
or
pminub
add
cmp
jb
and
sub
loope
pop
out
incl
add
mov
add
in
dec
adc
andb
scas
out
stos
test
pop
jb
arpl
xor
mov
add
jge
adc
jecxz
add
in
pop
in
int3
or
repz
icebp
ljmp
pop
jp
xchg
pop
add
mov
add
jns
push
insl
lock
add
add
movsb
cmpsb
test
out
cmp
add
add
mov
or
insl
cltd
or
add
sti
and
pop
lcall
inc
cmc
movsl
leave
add
out
jp
jno
add
add
frstor
push
and
push
out
and
and
add
mov
cmp
test
jno
movsl
test
and
add
das
or
add
js
stc
jecxz
les
add
adc
inc
jne
pop
add
fmull
pop
mov
add
push
sub
ljmp
outsb
arpl
jne
imul
adc
aaa
in
fnstsw
loopne
test
add
shl
addl
sub
add
pop
xchg
dec
test
mov
add
add
les
add
pop
les
add
xor
stc
push
and
xchg
push
add
add
fildll
les
out
xchg
sti
inc
push
lret
add
mov
add
mov
add
outsl
dec
cmp
mov
and
ret
add
sub
lods
nop
dec
pushf
push
das
incb
mov
aaa
jecxz
jecxz
and
ror
lods
mov
incl
scas
sbb
pop
add
add
out
jg
inc
lods
pop
add
jle
lret
ret
jne
in
bnd
add
ds
sbb
add
add
add
add
xchg
adc
and
mov
mov
mov
mov
add
cmp
add
jg
pushf
test
or
decl
incl
imulb
dec
add
jp
cltd
push
clc
sub
and
jecxz
cli
xchg
sbb
inc
sti
add
es
icebp
sbbb
push
shrl
add
or
decl
xchg
cwtl
test
xchg
and
inc
add
add
xchg
pop
lods
add
outsl
add
cwtl
pop
add
cs
add
xorl
mov
add
shl
call
imul
xorb
jno
inc
ljmp
fdivl
loop
jle
dec
hlt
std
ret
add
mov
add
add
in
pop
shrb
add
add
inc
cltd
cmpb
out
cmp
mov
add
mov
lods
les
add
sub
mov
add
add
add
jmp
loop
lds
cld
add
add
in
cwtl
sub
xchg
in
inc
push
fisubrl
adc
jecxz
fisubrl
add
add
popa
repz
decl
icebp
std
add
add
add
ror
mov
jns
mov
imul
and
call
or
bound
decl
and
adc
roll
jecxz
dec
add
add
add
loop
jmp
push
push
xchg
add
add
or
decl
push
repnz
das
push
sbb
push
imul
test
push
std
add
xchg
push
pop
or
add
add
sub
das
je
ret
add
std
sbb
add
into
mov
jmp
call
icebp
mov
add
ret
mov
ja
nop
add
or
and
out
push
or
adc
and
pop
sub
and
add
loop,pt
or
in
mov
add
add
or
shll
mov
sub
sub
es
and
lods
movsl
push
mov
pop
sbb
adcl
inc
sti
mov
add
or
aad
xchg
add
add
into
jecxz
stos
stc
dec
mov
and
fstp
mov
or
add
ss
mov
xchg
adc
add
add
incl
add
xor
mov
jecxz
jp
add
ficomps
dec
outsb
je
add
cli
add
add
mov
out
inc
and
add
aaa
adc
roll
les
add
add
xchg
mov
jmp
stc
outsl
add
outsl
je
mov
mov
test
cmp
add
dec
shll
adc
add
es
jle
aas
mov
outsl
jg
fmuls
pop
adc
cltd
shrb
add
xor
and
add
mov
pop
mov
in
sbb
lcall
ja
add
faddl
or
jns
add
add
mov
xor
and
add
dec
pop
sbb
loope
jecxz
add
jno
mov
add
or
dec
lds
js
cmp
or
loop
lret
lret
add
mov
xchg
popa
mov
add
add
stos
movsl
pop
push
dec
mov
das
add
add
add
pop
ja
sbb
xchg
add
and
add
sti
push
cld
or
fldl
call
add
add
add
cmp
add
dec
sahf
bound
jo
jle
and
mov
add
decl
jp
mov
in
in
popf
out
mov
add
and
add
out
jae
mov
adc
in
lock
and
add
jb
fisubrs
lods
and
int
add
dec
jmp
jp
sub
lods
add
std
movsb
enter
inc
addr16
movsl
incl
and
cltd
in
loop
loope
add
add
lret
jl
lahf
incl
jae
ljmp
jmp
xor
add
add
add
jmp
cli
cwtl
std
gs
add
jle
add
push
cmpsl
jne
add
xchg
in
mov
push
leave
push
imul
mov
adc
add
jne
push
negl
mov
add
add
adc
inc
xor
cltd
add
add
enter
push
dec
or
int3
mov
dec
dec
cmp
add
mov
mov
add
add
push
test
add
and
xor
pop
add
pop
add
push
cli
out
mov
out
and
or
clc
arpl
add
push
addb
and
incl
pop
sub
add
int3
pusha
push
jne
add
add
xchg
mov
add
add
or
pop
push
rcl
in
jecxz
and
nop
sbb
pop
hlt
add
arpl
aad
add
add
insb
int
add
pavgw
add
bound
jnp
fnstcw
add
push
scas
rorl
mov
mov
mov
cltd
cmp
xor
outsl
add
push
push
psubusb
jecxz
sub
and
fstps
mov
add
add
mov
sbb
adc
xchg
jo
jb
loop
into
call
add
call
ljmp
adc
mov
add
add
mov
jmp
cs
cld
sbb
pop
setg
in
js
outsb
dec
call
jecxz
or
xchg
jecxz
incl
add
mov
dec
and
and
adc
push
addb
add
ds
popf
outsb
push
and
out
test
lahf
add
add
bound
mov
add
add
cs
jbe
decl
pop
add
jle
or
sbb
leave
pushf
inc
add
add
cmp
or
fstpl
mov
dec
xor
shll
rol
scas
add
push
inc
mov
pop
add
std
push
imull
jle
xchg
pop
fsubrp
incl
dec
les
andl
and
add
mov
mov
push
cmpsl
cmpsl
out
push
mov
add
push
push
fsubrs
imul
jecxz
add
sub
xor
or
pop
add
add
outsb
pusha
out
add
add
adc
mov
xchg
stos
add
mov
add
pop
int
mov
das
inc
mul
sbb
inc
add
adc
ret
push
add
add
loop
add
and
lods
ficomps
jecxz
or
or
push
and
add
mov
xchg
pop
stc
push
add
pop
push
data16
pusha
inc
add
das
or
add
xchg
test
pop
divl
mov
or
add
jg
stc
inc
insl
rcll
aas
mov
pop
sti
jbe
stos
movsb
dec
aaa
sub
add
cmp
add
mov
fsubrp
jns
xchg
inc
and
lahf
xor
pop
in
xor
incl
jmp
jecxz
jecxz
add
xchg
je
incl
incl
xchg
lahf
xor
add
xchg
add
or
jo
filds
add
push
push
sbbb
addb
xchg
sbb
lock
jecxz
add
sbb
and
mov
add
push
and
xor
push
in
pop
js
loop
test
int3
ror
repz
add
add
out
incl
mov
pop
add
add
outsb
add
add
sbb
jo
add
addl
jae
inc
add
push
or
fisubrl
in
inc
push
lods
imul
hlt
rolb
cmpsl
sbb
or
sbb
repz
cwtl
ljmp
pop
add
call
cmpl
lods
add
mov
or
mov
js
add
fbstp
adc
pop
add
xor
add
jp
add
das
add
loope
out
mov
mov
and
xchg
jecxz
lret
js
or
cmp
jle
stc
mov
jle
mov
out
mov
call
jmp
fistpll
std
add
add
jno
dec
out
add
and
add
je
stos
push
add
add
push
pop
pop
andb
iret
sbb
jmp
pushl
loope
lds
add
xor
scas
ss
xchg
outsl
and
xor
push
in
int3
mov
in
lock
imul
clc
jae
pop
inc
xchg
addr16
scas
call
or
add
jmp
add
stos
mov
add
add
fwait
shlb
jmp
loopne
cmp
add
and
cmpl
pop
add
test
add
enter
shlb
pusha
out
xchg
push
add
add
add
lret
mov
xchg
sahf
mov
loop
out
add
cmp
insl
icebp
mulb
add
incl
gs
cmp
test
test
lret
inc
sbb
insl
add
add
iret
fbstp
add
add
das
test
jns
and
jecxz
add
add
pop
or
push
add
xor
cmp
lea
rolb
and
call
in
mov
mov
or
fmul
cmp
outsl
add
out
insb
lahf
mov
add
add
add
jl
inc
pusha
add
or
add
adc
ret
nop
lahf
mov
imul
jle
jecxz
mov
xchg
les
add
jle
addr16
out
push
ret
jecxz
push
aaa
cmc
xchg
loop
mov
mov
jmp
push
xchg
add
add
arpl
sub
pop
sub
fdivrp
inc
push
xchg
in
add
popa
in
ret
mov
add
add
xchg
push
imul
add
add
mov
movsl
les
mov
sbb
dec
orl
testl
rcr
ret
add
jmp
lods
in
lret
mov
inc
add
xchg
xchg
pop
xchg
std
ljmp
ljmp
jmp
pop
les
jg
stos
dec
das
lret
add
out
and
ret
les
jns
stos
cmp
pusha
push
and
pop
leave
mov
clc
dec
out
or
filds
imul
and
pop
add
push
negl
add
orb
mov
loopne
sbb
xor
add
or
sub
fsubp
sub
add
test
call
pop
lods
or
fdivr
in
inc
xlat
sub
out
loope
incl
or
add
add
xor
dec
inc
pushf
pusha
js
in
ret
add
cs
cltd
mov
push
movsl
push
and
and
jne
jecxz
add
sbb
mov
loop
add
pusha
fsubrs
loop
add
hlt
push
xor
mov
and
add
fldenv
dec
push
jg
les
in
add
jno
push
mov
sbb
and
mov
add
and
cld
push
in
add
add
pop
mov
adc
addb
je
testb
or
je
add
fcmovne
push
dec
add
add
or
fildll
mov
call
imul
in
jne
jmp
add
mov
nop
mov
incl
xchg
jmp
xchg
add
add
imul
ds
add
and
scas
pop
cld
pop
roll
add
add
cmpsl
dec
rorl
pop
xchg
xorl
pushf
xor
xchg
das
jecxz
and
scas
sub
jge
pop
add
pop
and
and
add
hlt
aam
and
or
lret
leave
and
jp
aas
call
outsl
out
dec
add
stos
mov
outsb
or
incl
add
push
mov
loop
pop
mov
add
add
add
mov
add
add
mov
jmp
out
arpl
sub
add
cwtl
and
and
add
add
cmp
mov
add
add
repz
or
add
mov
pop
add
dec
pop
bound
add
mov
movsb
mov
test
aad
cmpsb
add
mov
fcompl
add
cmpsb
movsb
pop
inc
xor
and
lods
inc
jg
add
push
inc
cltd
mov
popl
jecxz
add
push
popa
dec
loope
leave
popa
xchg
add
add
adc
cmc
out
add
add
add
add
or
jg
repz
push
add
push
lock
jo
jmp
outsl
data16
add
rcr
xchg
testb
add
incl
add
or
addl
sti
andb
mov
mov
add
inc
aaa
decl
dec
in
cmp
xor
leave
and
inc
sbb
cmp
ret
add
outsl
sub
add
add
add
pushf
mov
in
xor
nop
mov
jle
and
loop
add
mov
sbb
pop
fistl
in
mov
and
out
fidivrs
out
addb
add
and
mov
jl
add
add
adc
add
or
xchg
out
or
mov
adc
cs
add
lret
lea
pop
and
rorb
sub
out
inc
sbb
stos
add
mov
fdivl
add
add
in
sub
hlt
nop
add
pop
add
add
imul
or
aaa
xchg
mov
out
test
add
jae
sub
adc
mov
add
frstor
incl
loop
add
xor
lods
loope
xorl
add
in
or
add
mov
popf
mov
add
cltd
in
add
cmp
mov
mov
push
aas
sub
in
incl
dec
inc
xor
add
add
add
out
add
or
mov
and
jbe
dec
testb
sarl
movsl
nop
incl
add
mov
add
add
scas
rcrl
add
add
clc
outsl
mov
add
mov
jo
xchg
add
add
pop
and
mov
add
mov
neg
sub
jo
add
lahf
fildl
add
add
ss
jae
fstpl
add
push
or
jecxz
mov
add
aas
xchg
pop
loop
jle
add
icebp
aas
mov
leave
push
dec
divb
js
inc
aam
or
mov
and
mov
das
lods
ljmp
incl
out
mov
jmp
and
outsl
outsb
orl
add
or
push
negb
push
add
sub
jns
and
add
add
or
into
test
or
sbb
sub
or
add
out
flds
add
add
out
jns
in
add
outsl
std
pop
mov
add
lcall
movsb
daa
sub
fwait
add
jnp
jmp
call
jmp
fwait
add
hlt
test
call
push
add
in
push
sbb
add
cli
push
jnp
add
incl
add
push
mov
or
push
loop
inc
std
pop
sub
mov
pushl
maskmovq
testl
scas
js
add
sub
in
sahf
fstl
insl
sub
mov
add
pop
xor
push
add
add
incl
and
mov
inc
incl
and
cltd
or
mov
add
nop
mov
data16
or
lcall
dec
add
adc
mov
imul
mov
or
jle
in
push
sbb
add
pushf
mov
and
lret
inc
cmpsl
or
pop
nop
decl
les
outsl
add
loop
xor
stc
mov
fs
orb
add
add
add
out
lret
and
mov
add
out
jb
mov
xchg
mov
popa
jo
add
inc
loope
incl
ror
add
in
sub
and
inc
repnz
add
inc
inc
cmc
and
add
add
jecxz
and
inc
push
orl
add
or
lock
xchg
mov
cld
outsl
fmul
out
mov
mov
add
mov
cmc
inc
mov
jmp
jecxz
add
and
add
ljmp
jae
in
cmpl
dec
add
inc
nop
pop
or
inc
mov
add
add
in
pop
and
add
jle
or
add
mov
cmp
add
orb
push
mov
push
loop
jp
aas
lret
in
stc
call
incl
or
mov
cli
jno
aaa
out
add
push
cmp
add
add
add
sahf
inc
cmpsb
add
sbb
sbb
adc
lods
movsl
add
mov
cltd
verw
add
and
imul
add
add
sahf
and
add
xchg
add
adc
add
add
sbb
add
xchg
rcll
adc
xorl
jecxz
adc
add
loop
push
push
xchg
inc
shll
jbe
xchg
mov
incl
xor
mov
add
xor
sbb
lret
lahf
out
add
lcall
fwait
mov
jp
add
das
or
xchg
push
sub
add
and
add
add
add
sbb
add
mov
or
ret
data16
cs
pushf
or
xchg
cmp
out
test
jecxz
arpl
outsl
add
pusha
xchg
mov
inc
add
add
add
add
mov
mov
add
test
mov
incb
decl
pop
jecxz
dec
movsl
adc
add
ja
hlt
mov
in
add
add
mov
pop
lods
inc
lcall
sub
add
add
add
inc
xor
test
addl
xchg
icebp
add
push
sub
and
xchg
mov
mov
add
mov
pop
je
jl
add
dec
out
arpl
add
add
or
lret
ja
inc
and
add
outsb
cltd
mov
cwtl
add
mov
add
xchg
xchg
or
sbb
add
add
mov
repnz
mov
add
add
or
js
sub
add
int
mov
mov
mov
lods
inc
add
mov
add
push
mov
add
add
iret
sub
or
cld
jl
incl
stc
add
jmp
push
jbe
and
popf
std
jmp
stc
add
jl
out
cld
pushl
xor
ficomps
and
add
incb
add
add
iret
mov
into
insl
and
mov
pop
test
and
idivb
incl
add
push
pop
dec
pop
xchg
rorl
or
adc
or
xchg
std
mov
add
and
mov
lods
scas
push
adc
pop
call
mov
in
lcall
in
dec
mov
cmp
add
outsl
ljmp
or
add
add
cwtl
ds
loope
xorb
fldl
out
inc
add
mov
in
mov
inc
in
sbbb
add
add
add
dec
ret
pop
and
add
outsl
popf
mov
les
nop
jmp
mov
out
fists
in
loop
add
mov
or
xchg
add
add
popf
aam
js
add
add
add
sbb
fsts
mov
in
movsb
movsb
stc
int3
das
add
incl
shrl
mov
mov
mov
xchg
mov
mov
inc
es
add
add
push
adc
scas
add
das
into
add
in
add
jg
jle
fucomp
sub
and
dec
and
add
aaa
mov
adc
pushl
and
jmp
mov
aad
inc
lods
loopne
rcll
push
add
dec
mov
ficoms
add
add
sub
imul
jecxz
loope
pop
mov
sub
dec
or
insl
movsb
sbb
push
dec
testl
outsl
add
add
test
add
add
aaa
cmp
add
or
jle
dec
sahf
pop
push
rcll
jmp
lcall
xlat
fdivl
insb
mov
cli
roll
rcrl
inc
mov
add
jle
and
or
mov
daa
imul
adc
add
add
inc
pop
adc
jecxz
sbb
or
loope
xchg
and
xchg
cmp
dec
add
or
add
add
insl
pusha
ror
int
add
and
mov
loope
incl
pushf
das
sub
fidivrl
add
add
movsb
or
cwtl
add
imul
aaa
loopne
fimuls
add
movsl
test
push
or
inc
jno
clc
cmc
add
and
test
add
add
dec
add
add
jle
es
inc
mov
enter
adc
push
push
fadds
mov
inc
mov
out
loop
stos
mov
add
adc
icebp
xor
mov
pushf
leave
loop
add
outsl
cs
dec
pop
mov
jge
in
inc
xchg
stos
xchg
and
push
jno
insl
loopne
add
add
call
xor
loopne
ja
jmp
imul
and
mov
cmp
add
add
clc
cmc
out
push
in
mov
and
push
loope
jne
mov
loop
sub
or
and
je
loop
add
out
cmp
add
or
inc
ss
cld
addl
add
xchg
dec
add
jg
add
dec
add
or
mov
es
insl
add
inc
imul
add
jmp
fwait
xor
aaa
adc
pop
adc
dec
and
add
and
mov
out
sub
jg
decl
pop
or
add
add
pop
add
add
and
mov
test
in
call
dec
dec
add
inc
insb
cmpsb
mov
adc
ljmp
xchg
sub
add
xor
or
add
or
and
out
das
dec
add
or
mov
and
add
push
or
and
and
and
push
add
pop
inc
cmovne
jmp
or
push
jl
push
jnp
add
add
jp
call
jno
mov
jns
stc
ror
pop
idivb
mov
adc
sub
sub
add
pop
inc
fbstp
or
add
xor
dec
or
and
add
xor
shrl
add
add
mov
lods
cmpsl
jnp
mov
fbstp
and
cli
mov
ja
cmc
add
inc
or
push
and
xor
inc
add
add
add
nop
add
add
add
and
mov
add
call
add
pop
fcomps
sub
mov
mov
and
push
add
add
add
adc
xchg
add
or
sbb
add
add
add
sarb
call
mov
je
arpl
bound
or
call
mov
xchg
imul
add
scas
leave
push
rcrb
out
mov
and
insl
push
mov
add
mov
and
mov
bound
std
ljmp
jp
cwtl
fsubl
or
add
jecxz
add
add
ret
lds
jg
push
mov
ss
add
xchg
add
cmp
add
es
movsb
outsl
pop
adc
loop
mov
cmc
inc
add
sti
xchg
add
dec
rdmsr
ret
arpl
add
add
shlb
mov
and
ljmp
add
mov
add
mov
shll
call
nop
fld
push
xchg
mov
gs
or
add
pop
and
pop
dec
jle
mov
sbb
mov
add
mov
add
das
add
pop
sbb
out
out
aad
hlt
daa
insl
aad
dec
loop
add
pop
js
loope
lds
lods
mov
add
add
inc
pop
adc
sahf
jnp
and
or
mov
cld
add
mov
add
out
in
insl
jl
out
xchg
add
add
add
add
lahf
std
add
mov
decb
add
add
lcall
call
add
loopne
icebp
add
push
mov
loop
sub
cmp
jle
stc
clc
mov
pop
add
add
add
je
jle
add
add
mov
mov
aad
pop
rcr
adc
add
nop
outsl
push
outsl
jno
dec
popa
add
testl
flds
lret
fstp
add
add
fidivl
add
add
loop,pn
loop
pop
jg
pop
and
push
iret
adc
addb
xor
mov
add
push
outsb
or
or
add
pushl
lock
incl
dec
mov
add
add
add
addl
mov
pop
sub
mov
inc
lock
or
jle
mov
mov
add
mov
add
shr
cmp
add
push
push
nop
popa
dec
add
add
dec
movsb
int
push
dec
add
jle
mov
jp
lahf
mov
push
xor
shll
daa
dec
pop
and
inc
rcll
add
add
into
movsl
pop
sub
cmp
add
incl
add
repnz
inc
add
iret
nop
js,pt
divb
stos
inc
jbe
and
pushf
mov
jmp
jmp
add
into
mov
xor
das
mov
pop
add
add
repz
add
in
and
mov
add
mov
adc
aad
add
xorl
add
add
push
insb
cmp
lahf
add
add
jle
add
loope
cmp
add
add
rorl
jg
inc
add
add
jmp
mov
inc
loopne
mov
add
mov
add
pusha
rcll
imul
inc
mov
incl
add
aam
test
and
and
sub
mov
les
fnstenv
mov
add
jp
push
outsb
aas
add
sub
cmp
cmp
in
add
and
dec
xchg
dec
or
mov
sbb
roll
ret
mov
add
fdivl
jl
jg
sbb
push
popf
add
out
add
in
cmc
mov
and
add
addl
pusha
jne
add
add
in
cmp
decl
mov
dec
mov
inc
mov
bound
add
incl
and
adc
fldenv
add
stc
shll
mov
add
add
js
cmp
cmp
fs
sub
push
cmp
xor
and
inc
add
add
push
mov
jmp
repz
mov
add
and
and
add
roll
ss
and
jecxz
adc
jmp
add
sub
rcll
lods
jl
imul
push
mov
add
out
mov
sub
pop
mov
add
push
lods
jl
add
add
or
jl
jmp
add
inc
pop
push
push
dec
xor
or
sub
mov
and
das
es
hlt
add
add
jmp
arpl
inc
jl
or
mov
daa
mov
add
les
in
fcmovbe
add
add
and
xor
les
jae
jne
cmc
add
loop
cmp
add
add
pop
jbe
test
dec
jbe
add
or
in
add
jecxz
loop
push
out
icebp
or
add
mov
aas
mov
add
pushf
sbb
repz
add
in
incb
std
add
add
jl
and
scas
add
fdivs
add
add
jns
sbb
push
call
jmp
sub
incl
sub
xchg
loop
add
xor
fidivrl
subb
or
in
adc
add
cmp
iret
pushf
jns
pop
add
jecxz
cld
push
rorb
arpl
pop
nop
inc
loop
jle
add
xchg
jo
shrb
popa
jne
cmp
and
scas
iret
dec
lea
out
popa
push
fs
and
stos
loopne
mov
shll
cmp
add
add
movsb
xlat
pop
leave
mov
lods
pusha
test
cmp
add
push
sar
scas
sub
pop
add
mov
rep
cmpsb
mov
aad
add
add
gs
adc
addl
jmp
add
ret
or
or
repz
in
testl
lret
stos
push
cmp
adc
jmp
add
in
insb
pop
cmpsb
lds
add
add
add
and
das
test
add
add
bound
add
repnz
ljmp
mov
sub
add
xchg
sbb
cmp
les
mov
insb
setne
and
aas
dec
add
add
and
out
add
out
insl
mov
in
inc
add
les
frstor
pop
jns
add
jle
scas
popf
or
and
scas
ljmp
out
add
sti
add
add
add
jle
jmp
add
mov
add
cmp
add
mov
aam
dec
add
jb
add
add
add
mov
flds
lcall
aam
inc
repz
in
orl
adc
add
add
mov
outsb
fsubs
add
cmp
and
lock
cmp
pop
clc
add
dec
push
add
lods
aam
test
and
imul
and
loop
and
sub
add
leave
lret
insb
add
pusha
jne
mov
mov
into
lcall
add
mov
add
das
add
js
inc
dec
insl
repz
add
pop
cmp
mov
and
dec
and
xchg
mov
cmp
aam
inc
push
add
xor
mov
subl
pusha
iret
push
and
out
inc
pop
add
dec
or
jg
imul
dec
arpl
mov
cld
add
push
jge
fadds
add
jae
imul
inc
and
ret
push
in
mov
add
add
add
add
and
lahf
jb
cmp
jno
xchg
cmc
jecxz
add
dec
add
outsb
fcompl
add
lds
mov
addr16
pushf
inc
xor
and
cmp
mov
add
sub
mov
add
movl
push
sub
add
les
pop
lret
jmp
mov
and
pop
pushf
add
add
jo
sbb
addl
mov
mov
adc
sarb
sub
add
stos
push
sub
adc
orl
push
add
add
dec
jo
js
imul
sub
das
and
mov
mov
incl
div
add
mov
and
xor
ror
inc
ljmp
adc
rcr
add
addl
pushf
dec
sti
mov
ja
dec
push
add
add
mov
sub
mov
xor
jg
add
in
or
mov
mov
add
sti
dec
into
mov
ficomps
stc
mov
or
add
aaa
sub
scas
in
and
fidivrl
das
incl
add
jge
sbb
add
jg
pop
mov
out
sti
jb
lret
sahf
mov
adc
add
jne
or
add
add
push
jae
repz
fnstenv
push
xchg
aam
and
mov
and
add
pop
push
aaa
and
imul
aad
loop
cld
std
loop
movsb
addr16
shl
add
mov
gs
in
xor
xchg
add
add
imul
sbb
das
add
add
outsl
push
les
add
cld
add
out
stos
mov
pushf
jp
and
sub
ds
inc
add
xchg
and
out
add
imul
jecxz
pop
fisttpll
popa
out
add
add
sbb
fistps
add
loope
adc
iret
pop
or
xor
mov
cmp
xchg
aaa
add
scas
ja
in
add
lcall
add
les
add
add
add
and
adc
or
mov
push
in
push
jge
add
mov
mov
cli
pushf
das
mov
add
jmp
jne
add
add
and
mov
jecxz
ror
jp
add
stos
inc
xchg
mov
call
sbb
xor
inc
cli
hlt
popf
mov
roll
lods
jge
jnp
add
dec
jecxz
cs
icebp
push
add
dec
insb
into
add
add
add
sub
push
cmp
cmp
add
dec
test
jb
add
and
mov
repz
mov
or
in
jge
jle
or
in
add
mov
xchg
pushf
call
jb
mov
movsl
xor
jbe
jecxz
xor
mov
add
jle,pn
add
movaps
push
add
add
in
sub
call
inc
lcall
and
add
and
or
jmp
decl
xchg
idiv
decl
jp
and
add
jnp
add
incl
xchg
adc
cltd
lock
mov
add
in
sbb
jecxz
add
sbb
cmp
inc
cmp
sub
in
jle
add
add
js
dec
ja
add
add
iret
sbb
rcrb
xchg
movsb
push
xchg
mov
imul
xchg
cwtl
jle
mov
add
or
pusha
mov
add
adc
add
inc
cmc
aam
add
loop
xrelease
stc
adc
cmp
sbb
jae
or
frstpm(287
jno
and
mov
sbb
test
dec
or
add
push
rclb
mov
popa
aad
mov
add
or
arpl
into
jle
call
in
js
sub
js
in
mulb
imul
scas
jmp
sti
add
add
add
push
loop
out
add
call
jl
cld
xchg
adc
dec
incl
add
icebp
das
or
jle
pop
loop
shll
add
inc
add
daa
icebp
xchg
add
add
cwtl
loope
lea
inc
inc
cltd
movb
add
add
xchg
out
lods
dec
xor
push
loopne
divb
stos
sbb
jg
cmp
es
add
sub
enter
add
incl
cmpsl
fimull
sti
xlat
or
std
mov
addl
jle
add
xor
sub
sbbb
and
aaa
repz
lds
mov
xor
ljmp
dec
add
mov
add
push
incl
and
mov
outsl
push
adc
push
and
add
sbb
repz
mov
and
sub
jge
incl
xor
roll
pop
pop
int
mov
mov
data16
and
ss
ret
add
in
dec
aas
add
add
add
jmp
sbb
inc
decl
sbb
add
stc
xor
dec
or
cmp
xor
add
pushl
add
add
in
je
or
or
pop
push
stos
add
out
add
and
jo
decl
mov
sbb
shl
and
out
xchg
insl
add
pop
xor
mov
ret
pop
js
and
outsl
cld
mov
mov
xchg
and
lcall
jg
loopne
movsb
xlat
cmc
xchg
or
add
shll
jle
xor
jno
xchg
jmp
add
and
clc
in
push
and
ret
or
add
cmpsl
jge
imul
add
push
lret
jmp
lcall
scas
dec
jg
das
fwait
xor
cld
add
pop
rdtsc
and
popf
cwtl
add
pop
sbb
inc
sar
add
xor
add
das
sbb
jecxz
add
mov
ja
mov
add
shr
adcb
jecxz
imul
fists
add
imul
jno
add
add
data16
lcall
cmpsb
data16
add
add
or
shrb
mov
add
insl
les
add
jl
lret
adc
sub
cwtl
add
and
mov
fs
xor
fiadds
mov
adc
cmp
testl
add
jmp
add
add
mov
fildll
bound
loope
adcl
add
iret
jne
sbb
fsubrl
and
inc
das
add
push
ret
std
add
and
push
incl
jg
cmpsl
push
les
or
mov
jecxz
sbb
fwait
adc
jecxz
pushf
rol
sbbl
jle
mov
add
add
insl
pop
stos
arpl
ljmp
add
loop
add
call
mov
add
add
mov
inc
add
cmp
dec
incl
sbb
leave
popa
loope
add
int3
add
ret
repz
pop
mov
fs
pop
xchg
add
add
out
arpl
loop
add
mov
cmp
add
mov
and
out
call
add
out
xorb
mov
inc
out
bound
call
push
dec
outsl
push
add
sbb
fiadds
add
add
push
pcmpgtb
add
mov
or
pop
sbb
jbe
mov
testl
daa
sbb
add
add
cmpsl
xor
add
jmp
add
jmp
inc
addl
sbb
add
or
sub
negb
lret
rclb
and
add
and
and
xchg
push
add
jecxz
add
xchg
out
mov
lret
sbb
add
mov
jns
mov
and
cmp
jmp
sub
lods
jle
stos
cmpsb
loop
add
scas
adc
add
decl
push
cmc
jle
imul
add
pusha
cmp
add
add
jmp
add
jbe
rorb
mov
dec
add
dec
fimull
xor
sub
xor
outsl
out
or
add
or
push
dec
add
mov
ficompl
add
incl
cmc
cmp
pop
and
imul
lods
lret
fildl
add
add
dec
pop
fbld
add
mov
add
jecxz
add
in
in
xchg
mov
das
cld
mull
pop
push
ja
cmc
roll
add
loopne
or
add
jg
push
and
or
sub
add
pop
aaa
sbb
add
and
pop
push
movsl
out
mov
movsb
xorl
mov
mov
xchg
xchg
inc
xor
add
movsl
and
push
dec
add
clc
ret
sub
jecxz
add
add
add
jle
out
fs
jo
jecxz
add
stos
cmp
in
insb
push
lret
loope
jbe
or
enter
jecxz
bound
push
add
nop
jmp
data16
push
outsb
jmp
fcomp
push
subl
in
add
popf
hlt
jge
std
xor
mov
jg
loop
add
push
fdivrl
fildll
xor
push
sbb
add
leave
and
add
cmp
sbb
add
jp
andl
add
sbb
mov
incl
inc
into
jbe
js
addl
call
jo
dec
add
lea
inc
xchg
loop
mov
cli
jle
mov
and
insb
lret
out
decl
dec
pop
hlt
div
or
or
pop
sub
out
es
mov
aas
fnstsw
add
jle
loop
jns
popf
add
add
pop
add
test
inc
or
push
mov
sub
dec
xchg
bound
inc
xor
std
fisttpll
fcompl
int
incl
add
or
ss
orb
add
cmpl
or
shlb
or
xor
mov
adc
aaa
add
add
add
or
mov
ds
and
in
add
mov
add
mov
dec
clc
negl
add
add
in
xchg
popf
mov
jmp
add
jg
add
call
push
imul
lcall
out
push
add
decl
add
in
pop
popa
add
addl
push
and
lock
add
add
loope
mov
outsl
test
xchg
je
loope
test
ficompl
add
push
insb
add
add
sub
add
xchg
dec
aad
hlt
jge
add
stos
rcrb
ret
incl
mov
add
add
insl
mov
xor
in
sarl
loope
push
lods
sbb
inc
add
pop
push
insl
test
add
jle
add
push
and
fdivp
int
add
cmp
test
idivl
mov
xchg
xor
in
jle
add
add
and
mov
and
jp
jg
add
add
jg
int
lret
add
mov
jnp
and
mov
cmp
mov
iret
fmull
xchg
call
aas
inc
scas
cltd
xor
sub
add
in
or
add
outsl
add
stos
mov
add
add
adc
inc
adc
mov
lret
jo
xchg
in
cli
and
jl
push
in
addb
add
adc
add
xor
mov
aaa
add
loope
push
and
je
add
mov
mov
mov
lock
cmp
add
jbe
jecxz
in
push
shrl
or
add
push
std
cmp
lcall
cld
popl
mov
std
std
incl
xchg
in
push
popf
add
dec
add
icebp
mov
add
mov
out
dec
rcll
mov
in
jecxz
and
out
in
push
hlt
add
incl
add
subb
loope
add
popa
adc
nop
add
lcall
out
call
xchg
lcall
adc
stc
add
std
dec
insl
or
stc
stos
scas
sbb
and
add
test
out
sub
add
add
add
add
mov
add
fildl
sbb
pop
repz
add
mov
cmp
inc
add
inc
cld
in
popa
insb
loope
dec
add
decl
arpl
or
ljmp
loop
loop
cmp
cmp
mov
call
add
sbb
loop
pop
cmp
scas
in
add
cmc
in
inc
pop
add
add
gs
test
xchg
dec
add
add
popa
pop
hlt
add
mov
jb
fwait
dec
incl
mov
in
mov
mov
addl
adc
aas
mov
sbb
mov
add
iret
or
mov
add
loop
sbb
add
add
mov
cli
cmp
mov
push
outsl
add
add
jecxz
pusha
stos
mov
fucomp
loope
pop
iret
movsb
out
add
insl
gs
inc
add
add
add
fstps
cmp
mov
lret
je
push
lahf
add
lcall
add
aas
in
xchg
add
and
ss
iret
mov
push
gs
cmp
add
sub
add
inc
aad
incl
ds
mov
xchg
add
add
mov
loop
add
and
mull
xor
out
add
pushl
add
fwait
push
pop
incb
nop
push
cld
fwait
push
je
jns
test
add
push
ljmp
scas
add
add
in
add
pop
call
mov
xor
add
data16
stos
cmp
jecxz
movsl
ljmp
add
xchg
sbb
imul
rclb
and
add
in
sub
mov
jecxz
lcall
jg
ljmp
mov
push
into
jo
or
incl
mov
cli
or
and
scas
out
jg
dec
add
cwtl
push
push
xor
and
add
add
jge
adcl
mov
dec
dec
add
add
fbld
arpl
cltd
add
xor
add
mov
add
fsubl
push
add
dec
mov
add
add
jns
les
sbb
add
out
or
add
add
mov
pop
out
je
push
push
mov
adc
or
les
add
pop
mov
outsl
and
inc
ret
lds
and
and
add
add
dec
add
adc
mov
cld
inc
inc
and
and
push
add
mov
push
jo
sub
add
out
jmp
mov
js
add
add
add
dec
jle
pop
jns
and
xchg
arpl
stos
ds
lahf
mov
jns
dec
push
push
mov
add
imul
add
jecxz
lcall
and
sub
sarb
sbb
add
pop
iret
fistpl
push
add
clc
jo
sub
adc
inc
jl
lcall
testl
in
fiadds
add
inc
loop
pop
clc
js
and
mov
add
add
push
mov
add
mov
orl
orl
inc
mov
sbb
add
js
aad
mov
add
add
xchg
jg
stos
lret
add
add
fsub
clc
mov
in
faddl
pusha
mov
mov
rcrb
inc
add
data16
call
and
popl
leave
cmc
test
les
jmp
add
out
add
add
loop
les
add
mov
dec
sub
outsb
add
add
add
mov
adc
xchg
stos
push
dec
add
fadds
push
sbb
pop
sarb
add
add
mov
lds
add
add
jmp
jle
dec
or
pop
sbb
jle
add
das
pop
test
sahf
or
mov
dec
and
cmp
push
ret
aaa
inc
sbb
xchg
xlat
mov
xor
add
ljmp
ds
or
add
mov
add
add
daa
mov
add
imul
dec
in
add
out
and
add
cmpsl
call
xor
enter
and
add
loopne
pop
mov
add
std
mov
pop
movl
in
sub
out
daa
add
ss
fidivl
add
xor
or
sbb
in
jg
add
inc
or
add
mov
ret
hlt
js
add
insl
in
test
addl
jmp
sub
incl
push
cmpsb
test
add
inc
shl
and
mov
leave
add
add
rolb
jns
incl
out
out
into
xorl
add
mov
jne
negl
loopne
mov
sbb
aam
xchg
inc
add
mov
or
out
call
outsl
bound
incl
mov
orb
loop
add
or
xor
jmp
or
add
adc
inc
mov
ja
and
mov
les
push
clc
stc
mov
add
pop
add
dec
pop
pop
add
add
jnp
sbb
jg
add
add
add
xchg
adc
xchg
decl
shrl
aas
adc
mov
test
clc
or
add
add
out
or
jo
and
inc
outsl
sub
push
add
mov
and
outsl
inc
pop
cld
dec
repz
repz
ss
jl
mov
dec
inc
repz
ljmp
xor
call
jbe
add
or
jg
mov
pop
mov
fnsave
dec
mov
add
dec
popf
adc
add
sbb
loopne
and
add
hlt
popa
push
add
mov
inc
add
loope
pop
out
xchg
add
add
add
loop
add
clc
std
inc
mull
fistpll
jnp
js
cwtl
xor
incl
popl
incl
add
decl
add
insb
or
jecxz
add
xchg
push
insl
xor
sbb
mov
ljmp
les
hlt
outsb
dec
into
inc
add
or
mov
in
jl
mov
lcall
das
mov
incl
mov
add
add
enter
add
add
fcom
jb
add
add
cmp
orl
lcall
pusha
add
add
add
sti
or
add
add
push
add
push
inc
push
xchg
add
pop
nop
add
dec
dec
rcl
cmp
add
or
cmp
into
fstpl
mov
add
mov
pop
aad
add
add
add
jmp
mov
aaa
int
popa
rcll
addl
mov
filds
add
and
mov
jecxz
and
scas
sub
or
jecxz
xor
add
jmp
add
pop
fistpll
or
bound
add
ljmp
loope
je
in
jle
push
notb
aam
dec
mov
add
add
rol
sbb
aam
addl
jno
add
add
incl
mov
add
add
push
fidivl
ret
mov
and
add
rcl
xchg
and
push
push
incl
add
sub
mov
or
dec
aam
ds
loop
mov
fnsave
or
pop
inc
pop
cwtl
or
or
lods
loope
jne
mov
fs
fimull
and
add
fwait
or
add
sub
aad
dec
lahf
add
ljmp
ja
mov
addl
mov
mov
and
fisttps
lret
pop
fnstsw
inc
add
add
bound
add
add
inc
leave
jg
add
outsl
and
movsl
popa
in
dec
dec
add
sti
andb
add
mov
or
mov
jp
xor
jns
add
add
filds
fnstcw
add
add
add
mov
and
in
mov
dec
popa
incl
jle
cwtl
std
pop
pop
data16
sbb
add
xchg
rolb
mov
int
or
sub
incl
and
pop
jns
stos
add
pushl
push
add
dec
add
pop
sub
sbb
mov
add
out
movsb
add
mov
jmp
mov
popf
incl
pop
std
jnp
js
mov
add
incl
add
push
imulb
adc
dec
loop
shlb
pop
cmpsl
add
add
add
ss
fcom
or
add
xor
cltd
and
pop
repnz
and
sahf
xchg
add
shl
and
adc
add
mov
add
sbb
shll
add
out
add
mov
mov
mov
add
add
mov
pop
andb
sbb
sbb
mov
xor
jns
loop
mov
jns
repnz
dec
add
mov
jb
add
or
add
add
add
dec
stc
mov
mov
fidivrs
sub
loop
shr
add
xor
add
push
or
xchg
hlt
sub
add
outsl
add
add
hlt
pop
adc
pop
call
and
push
lds
jge
enter
testb
hlt
xchg
js
add
sbb
jge
add
cmp
jae
sbb
add
mov
in
les
mov
mov
dec
mov
mov
push
popf
jno
add
xor
add
mov
shlb
add
add
add
sub
cltd
outsb
add
add
add
inc
add
mov
add
and
adc
mov
mov
sub
jo
nop
mov
inc
jmp
or
inc
stos
leave
movsb
cli
mov
fwait
inc
push
add
add
jle
jmp
outsl
mov
or
fs
and
repnz
sbb
add
add
add
lcall
inc
add
fldcw
loop
mov
cli
add
add
jne
jb
cli
repz
ja
or
jle
adc
das
push
test
or
pusha
inc
xor
add
add
mov
out
add
add
nop
jl
call
add
jnp
lods
sar
inc
xchg
add
je
incl
dec
mov
decl
lcall
push
lret
daa
loop
or
add
pop
cltd
movsl
add
add
and
sbb
sub
push
fwait
mov
inc
fst
push
add
xchg
inc
cmpsl
add
ret
adc
add
pop
xchg
adc
and
jp
add
adc
aad
pop
add
add
add
cmp
xor
dec
in
add
lds
mov
sbb
imul
add
mov
inc
pop
add
add
movl
sbb
pop
push
inc
jle
add
add
lods
out
fiadds
outsl
jle
into
xchg
mov
test
push
inc
or
mov
ds
jecxz
dec
loop
ljmp
add
add
fidivrs
imull
add
scas
shr
and
and
add
add
fmull
add
add
ds
nop
adc
mov
and
mov
mov
insb
ss
cwtl
in
mov
scas
jle
dec
and
add
pop
rolb
add
decl
pop
ljmp
add
data16
cld
iret
imul
movsb
repz
mov
add
lcall
add
mov
jnp
imul
add
mov
out
dec
xor
fwait
pop
outsb
les
and
call
add
into
push
stos
in
mov
jnp
stos
or
pop
or
add
add
mov
ret
add
sbb
inc
add
in
jg
sbb
loopne
add
add
add
andl
jl
dec
pop
add
pop
adc
repz
xor
add
and
push
mov
inc
jecxz
jecxz
sub
jecxz
add
and
add
jnp
jecxz
in
xor
pop
push
imul
add
decl
add
add
jecxz
adc
and
or
push
xchg
add
add
xchg
sub
dec
in
mov
inc
sbb
in
xlat
add
xor
mov
xchg
movhps
add
mov
les
add
fsubs
inc
dec
add
cwtl
sub
lcall
pop
daa
jbe
cmpsb
in
mov
loop
add
mov
add
notb
add
pop
js
add
mov
cld
stc
pop
jecxz
add
out
jl
movsb
scas
std
in
in
add
dec
das
mov
add
xchg
sub
daa
mov
mov
jbe
jecxz
jb
mov
cli
call
mov
shl
or
add
shlb
add
pop
mov
sahf
jge
scas
fwait
or
add
ss
or
jle
add
jmp
pop
cmp
add
add
scas
xor
add
add
aaa
notb
mov
scas
jecxz
out
dec
jle
mov
out
cli
daa
cmp
xchg
sub
and
pop
enter
add
add
sub
push
and
in
ja
loop
idiv
push
pop
pop
and
add
xor
loope
add
xchg
mov
repz
add
loope
mov
add
or
add
sbb
and
rolb
lods
ljmp
add
add
outsl
lcall
jmp
call
cltd
add
das
sub
ljmp
popf
push
add
add
sahf
xchg
out
add
add
add
fldenv
adc
enter
adc
and
add
push
sub
and
dec
push
xchg
xchg
jg
mov
rcrl
lock
add
movsl
jl
or
mov
pop
rolb
add
fs
and
add
mov
jmp
out
add
add
cli
pop
mov
jns
and
and
cwtl
pop
xchg
add
enter
and
jo
loopne
jns
add
in
in
cmp
inc
jnp
jg
add
lods
push
xor
add
ja
movsb
and
imul
test
mov
mov
add
inc
push
dec
scas
lret
add
dec
and
incl
cld
mov
and
out
ds
nop
repnz
or
mov
das
loopne
sti
sub
jb
jl
jp
out
hlt
push
add
cld
xor
decl
inc
insl
mov
repnz
add
inc
jle
add
adc
sbb
incl
mov
das
icebp
adc
push
arpl
movsl
jb
jle
std
dec
mov
mov
sahf
push
imulb
mov
add
add
and
add
mov
pop
sub
jecxz
dec
loope
sbb
incl
add
cmp
jecxz
lcall
xlat
ds
ficompl
mov
out
xchg
mov
rorb
mov
mov
pop
call
push
xchg
das
add
add
add
and
jne
loop
outsl
add
popa
xchg
push
jns
fsubrl
out
add
jb
mov
ja
out
push
dec
jmp
add
xadd
pop
add
add
add
std
out
inc
jnp
outsl
and
add
sbb
dec
xchg
xor
mov
xor
mov
xor
ljmp
imul
jne
and
mov
dec
add
mov
arpl
das
popl
xlat
dec
mov
orl
loop
mov
adc
fildll
aaa
out
clc
arpl
add
add
out
or
add
mov
pop
nop
sub
das
fcmovnb
repz
mov
or
dec
add
cli
xor
data16
jb
cmp
cs
add
or
and
push
push
in
fsub
add
outsl
aaa
xor
mov
mov
push
daa
lret
in
add
inc
add
pop
and
or
and
push
mov
adc
repz
and
repz
aam
je
or
add
add
call
dec
scas
imul
xlat
cmpb
add
push
insb
fmul
mov
shll
mov
and
or
add
add
add
add
jecxz
mov
cmpsb
sbb
decl
or
mov
lret
decl
add
push
lret
and
dec
lods
pop
jge
sbb
add
add
stos
or
fidivrs
add
test
adc
add
or
jmp
outsl
loop
mov
inc
or
or
or
pop
in
or
add
xor
std
das
pushl
std
incl
popf
in
and
lea
add
pop
test
jns
les
xchg
dec
fnstenv
jg
nop
push
adc
add
xor
aaa
rol
add
incl
and
cmp
add
in
cwtl
pushf
cmpsb
or
loope
add
mov
add
push
sti
js
add
daa
xor
in
arpl
inc
add
lods
loopne
and
mov
add
sbb
lds
loopne
mov
add
inc
add
mov
cmpsl
dec
add
add
sbbl
fadds
repz
testb
or
add
outsb
enter
add
add
add
and
add
inc
out
sub
add
add
inc
je
dec
and
add
mov
repnz
orl
add
add
push
ljmp
cmp
add
add
cmpsb
pop
jmp
or
adc
cld
add
add
add
sti
mov
add
fimuls
enter
add
les
sbb
icebp
movsb
or
adc
and
dec
inc
sub
jecxz
add
mov
add
add
and
and
xchg
and
add
stos
xchg
aam
popl
add
add
push
fwait
mov
add
xchg
push
out
add
jl
and
ret
add
add
mov
and
ljmp
dec
xchg
mov
daa
in
pop
add
mov
jg
fmuls
lahf
divb
add
incl
out
add
mov
add
cltd
leave
lea
imul
add
pop
fcoms
add
mov
cmp
jae
pop
es
dec
fcomp
add
out
jmp
out
mov
push
or
add
add
fadds
pop
insl
add
incl
mov
or
int
and
imul
fcoml
shlb
loop
repz
bnd
add
shl
inc
dec
inc
in
outsl
add
pop
pusha
xchg
daa
adc
fwait
xor
cmp
daa
xchg
scas
pop
add
push
jge
mov
jnp
mov
out
inc
fwait
add
or
add
jmp
jecxz
add
ficoms
xchg
shlb
fstl
mov
loop
add
push
sahf
or
add
aad
push
jg
mov
dec
int
jmp
movsb
pop
add
jle
push
es
add
xor
pop
popa
orb
add
adc
add
cmp
popa
shl
or
pushf
push
add
inc
inc
sarl
out
fnsave
stc
in
clc
faddl
add
dec
or
adc
add
out
and
sub
gs
mov
ret
jae
add
ds
add
rcll
dec
out
xor
push
cmpb
add
add
xchg
out
push
mov
and
add
add
add
add
mov
add
cmpsb
dec
add
call
add
push
add
add
add
add
shlb
add
push
in
sbb
add
add
call
sbb
and
sub
subb
jecxz
add
mov
push
test
and
je
fmuls
add
add
shll
add
add
cmpl
sahf
addr16
add
add
lods
mov
gs
or
cmpsb
push
addl
pop
les
jae
popf
mov
add
scas
adc
loope
pop
jnp
notb
jmp
add
jge
imul
out
xchg
clc
pop
rep
rcll
add
scas
shlb
dec
pop
in
pop
dec
idiv
add
add
into
aam
sahf
sarb
in
mov
mov
mov
call
xchg
insb
add
add
les
rorl
or
inc
imul
repnz
pop
mov
or
sti
out
add
fistpl
push
inc
pusha
add
mov
aad
ds
add
add
mov
mov
in
and
or
push
cmpsl
mov
xlat
push
addl
repnz
jae
add
arpl
nop
jge
add
les
shll
jmp
iret
inc
or
incl
jmp
mov
cmp
adc
addb
gs
in
add
or
cmp
add
decb
pop
mov
and
or
push
jnp
dec
push
int3
loopne
add
cmp
or
jle
or
add
add
incl
add
incb
incl
std
or
out
xchg
jbe
or
and
incl
jg
mov
lahf
push
out
push
mov
or
add
lahf
jge
xor
add
mov
mov
add
jns
jbe
sub
mov
cmpl
loope
dec
hlt
mov
in
cmp
movb
movsb
sub
stos
add
decl
mov
sub
mov
add
dec
gs
repz
add
cmp
push
clc
push
out
add
mov
adc
xchg
xor
ds
mov
add
add
add
cmp
jle
pop
jb
add
imul
add
and
add
xchg
xchg
cs
jecxz
add
push
mov
xchg
dec
add
pop
mov
xchg
and
add
imul
jo
dec
leave
push
mov
decl
leave
jo
cwtl
test
add
jecxz
xchg
add
mov
and
and
hlt
lds
lea
in
sbb
fs
xchg
mov
sbb
lahf
add
or
lods
out
lret
add
test
and
lods
sbb
and
xchg
add
pop
cmp
clc
jl
icebp
loop
jl
and
jnp
fsubs
in
xchg
lods
incb
pop
std
call
cli
cli
jnp
fisubrl
ljmp
cmp
add
add
jb
ds
add
add
movb
das
add
jb
les
or
sub
or
inc
cmpsb
scas
pusha
add
lret
add
das
in
add
and
aam
xor
loopne
fadd
add
mov
add
cli
xchg
mov
out
add
stos
repz
cmpsl
or
or
add
in
out
jg
add
jle
add
aas
jle
movsb
push
xchg
add
in
iret
inc
subb
add
lds
insl
mov
add
mov
adc
mov
shrb
or
mov
cmp
sti
add
lret
cmpsl
add
sub
or
mov
mov
ljmp
add
add
add
add
or
sbb
test
call
jne
bnd
pop
add
shll
inc
jle
add
add
push
pop
xchg
mov
cmp
inc
xchg
jae
add
add
add
fmulp
cmpsb
jns
incl
outsl
add
xor
xchg
cmp
add
inc
cmp
out
ljmp
pop
sahf
add
or
fcoml
lea
inc
fiadds
add
mov
add
cli
or
mov
or
pop
fildl
sbb
dec
subb
or
jge
dec
insl
popa
push
ss
add
stc
cmc
ss
and
add
inc
jmp
test
push
frstor
out
icebp
lea
outsb
dec
mov
add
and
add
outsl
data16
test
add
add
add
add
xchg
leave
mov
add
std
imull
inc
mov
std
lcall
pop
es
jle
lahf
je
lcall
insl
stc
sub
dec
sub
add
int3
jns
push
add
add
cmp
mov
mov
push
push
or
cmpsb
sub
in
in
push
mov
add
int
add
dec
loop
repz
mov
add
add
mov
add
mov
add
jle
add
imul
adc
mov
out
jp
and
incl
fdivl
inc
incl
add
les
adc
dec
xor
add
pushf
jl
fwait
in
add
mov
daa
scas
sub
das
fisubl
sbb
add
and
mov
in
enter
add
or
decl
mov
in
incl
add
imul
and
jg
adc
add
sub
mov
pushl
add
mov
mov
in
jo
and
mov
cmp
add
mov
loop
xchg
jle
lahf
jo
jg
add
fnsave
jno
fsubrl
das
xadd
sub
lret
add
inc
inc
cmp
add
push
das
or
xchg
push
icebp
add
mov
aad
add
add
loope
push
jns
stc
shlb
mov
aam
push
dec
sub
call
xor
jp
adc
dec
jg
add
in
xchg
test
add
and
xchg
add
add
add
push
mov
adc
add
add
scas
repnz
ret
inc
add
dec
xchg
mov
outsb
add
mov
and
lret
mov
add
add
bound
cli
stos
adc
pop
add
add
add
add
popa
js
int
and
add
jns
jns
mov
decl
icebp
or
repnz
jle
mov
sub
mov
loop
ljmp
lods
add
add
cmc
xchg
cld
lahf
or
add
add
mov
cs
test
pop
cmpl
add
jecxz
push
incl
mov
and
jns
pop
mov
add
addl
jne
or
in
add
jns
mov
add
mov
add
and
lea
into
or
add
mov
sbbl
add
add
ljmp
xchg
nop
js
outsb
sub
and
fnop
pop
sbb
jle
and
lods
les
mov
mov
xchg
arpl
pop
lret
mov
dec
and
call
ds
repz
mov
divl
dec
and
shrb
das
add
test
inc
jge
jle
add
std
test
add
outsl
loope
lcall
sbb
loopne
inc
push
lcall
je
or
add
incl
mov
dec
sbb
pop
outsb
addl
fildl
incl
add
lret
outsl
add
add
repz
jge
jmp
and
leave
push
or
add
scas
mov
pop
add
mov
add
addl
and
int3
mov
add
enter
fiadds
add
jnp
cmp
and
push
push
in
jp
add
jnp
add
add
lds
jnp
mov
add
loop
pop
add
add
add
dec
loop
je
and
add
xor
push
pop
cmpsl
je
pop
bound
xlat
xor
add
xchg
incl
mov
add
pop
mov
and
add
test
cli
inc
jmp
push
add
cmp
sub
jne
and
xor
cld
cs
add
loopne
mov
add
lods
pushf
mov
xchg
add
add
add
and
insl
rorb
add
scas
out
and
insl
daa
stos
daa
add
in
loope
add
popa
push
xor
incl
es
int
pushf
mov
loop
outsl
inc
loopne
add
or
add
cmp
bsr
out
je
inc
arpl
add
add
pop
add
leave
xor
jle
or
mov
mov
push
xchg
decl
incl
push
incl
lcall
add
add
in
cmpsl
popa
sub
jnp
das
inc
daa
xchg
std
add
push
lcall
sub
repz
bound
add
add
out
push
add
loope
add
cmpsl
pop
je
adc
xchg
push
decl
mov
add
ja
roll
out
mov
or
push
jle
push
xor
iret
out
add
sub
add
add
dec
cmpsb
mov
rolb
add
daa
cltd
movsl
icebp
in
das
or
pop
test
jecxz
sbb
ds
jle
sub
es
in
add
mov
xchg
nop
add
add
inc
mov
dec
jg,pt
add
mov
in
add
dec
mov
pop
in
or
aad
mov
jecxz
cld
pop
std
js
push
add
add
dec
add
decl
mov
add
add
std
fdivrl
or
add
pop
lods
xchg
and
jns
add
and
mov
lcall
cwtl
mov
int3
call
pop
aas
or
push
pop
incl
in
xchg
add
incl
add
push
in
xchg
add
ret
dec
jbe
jb
popa
and
daa
test
pop
add
test
jl
jmp
mov
add
mov
and
loopne
add
cmp
add
call
push
in
jbe
add
add
mov
sub
stc
or
xchg
clc
add
lea
cli
add
mov
fmuls
out
sbb
pop
aaa
pop
insl
add
decl
inc
sub
and
push
stos
add
mov
dec
push
es
out
sbb
xor
loop
xchg
fisubrl
jo
add
push
mov
ja
add
add
mov
ds
movsl
xchg
outsl
data16
mov
add
add
add
fsub
jg
inc
dec
cmpl
out
adc
add
add
aam
sub
das
add
dec
jmp
add
adc
jl
mov
jge
adc
jecxz
cltd
mov
cld
mov
add
jp
outsl
dec
jnp
inc
add
cld
cmpsb
aad
mov
das
mov
popf
add
add
or
mov
jle
add
add
cwtl
adc
xchg
fnstenv
pop
xor
in
flds
add
enter
mov
add
xor
xchg
in
daa
add
sub
lods
sti
insb
add
add
call
fs
fistl
aad
mov
pop
add
jns
add
jmp
add
sub
in
shrb
incl
add
jo
je
test
mov
add
add
add
push
add
add
in
aas
stos
jg
add
fadds
push
les
lcall
jg
xor
loopne
push
dec
out
pop
push
jmp
xchg
es
add
add
add
cmpsl
add
xchg
jmp
add
jo
mov
add
adc
push
or
mov
pushf
fsts
mov
sbb
out
repz
outsb
add
loope
add
add
clc
inc
push
and
push
add
or
shll
mov
add
add
or
mov
hlt
add
add
add
roll
hlt
movsb
pop
sub
incl
dec
leave
push
rorb
mov
in
add
iret
push
add
jbe
in
xchg
add
cwtl
gs
stos
cmpsb
out
add
test
dec
xor
add
push
adc
jg
call
ljmp
add
mov
add
add
mov
addb
or
ja
cmc
stos
cmp
or
add
pop
xchg
jmp
stc
or
and
and
jmp
add
pushf
loop
fstpt
add
xchg
cli
and
mov
or
mov
add
add
mov
je
add
das
in
mov
jbe
loope
mov
jg
add
mov
mov
sub
add
mov
add
inc
inc
lret
pop
lods
mov
add
out
add
testl
inc
add
inc
jmp
or
push
jae
cmp
add
add
fwait
test
xchg
add
and
fdivrp
mov
and
add
pop
xlat
xlat
add
or
xchg
movsl
pop
lahf
int
push
arpl
in
pop
fiaddl
mov
out
add
stos
fsubs
jle
jns
jbe
dec
jge
mov
hlt
testb
add
cmc
lods
stc
fldln2
adc
add
add
cltd
fwait
popl
add
das
jnp
fsubrl
sub
add
dec
mov
inc
xchg
add
jmp
stos
pop
out
mov
in
push
add
or
addl
decl
stc
bound
and
add
add
movsb
sub
and
cmp
add
sub
lahf
sub
add
stos
or
decl
fldcw
add
andb
add
mov
mov
ds
inc
cmp
and
flds
loope
movsb
mov
aam
lahf
fcom
add
add
fcomps
jno
std
add
add
add
push
div
sub
add
incl
add
dec
dec
add
add
push
jge
mov
je
push
add
sbb
cli
mov
push
and
jecxz
out
stos
mov
add
add
add
lds
mov
or
add
add
pop
push
inc
adcl
test
loop
sub
cmpsb
add
hlt
shlb
mov
add
test
mov
popf
orl
add
and
movl
add
add
xor
cli
test
jmp
lods
adc
mov
or
cmp
fisttpll
add
jle
cmp
jg
loop
sbb
mov
add
jmp
mov
aas
lret
add
and
int
or
call
shll
lds
cli
test
aaa
add
cld
lds
add
add
mov
jbe
call
out
in
mov
add
push
out
xor
xlat
aas
xor
add
and
add
add
in
stc
js
dec
test
jns
mov
mov
outsl
hlt
xchg
jmp
or
dec
jmp
divb
push
out
push
and
push
and
das
sub
and
add
add
jo
lock
repnz
add
cwtl
jae
lods
cmp
and
push
jnp
or
adc
push
les
and
sbb
popf
fidivs
mov
inc
mov
jle
add
push
enter
add
int
xchg
mov
xor
cmp
movsl
loop
xchg
push
loop
pop
inc
dec
add
iret
mov
jmp
add
pop
jnp
mov
add
incw
or
dec
add
incl
or
sbb
add
and
add
cmpsl
push
in
push
jmp
lcall
jle
push
int3
add
in
add
jl
mov
dec
ret
imul
roll
in
incl
jae
jecxz
and
add
add
stos
mov
movsb
pop
jp
add
cli
in
testl
fisttpll
scas
scas
out
in
add
add
xor
add
icebp
sub
je
jle
call
aas
test
and
add
fsubrl
add
int
add
dec
push
xchg
xor
and
out
push
add
add
xchg
aas
mov
add
xchg
add
or
mov
mov
jmp
sub
jo
cmpsl
std
incb
ljmp
jmp
sub
imul
jg
xchg
test
gs
negl
jne
outsb
ss
femms
incb
les
cmp
repz
ljmp
or
cmp
test
add
add
add
repnz
jmp
sub
add
add
dec
in
push
addb
sti
xor
sbb
stos
addr16
int
in
add
jecxz
imul
shl
cmp
cmc
out
jbe
add
jecxz
add
jo
into
adc
in
add
mov
dec
jmp
jecxz
inc
mov
push
shlb
inc
add
add
dec
and
cmp
sub
loop
add
add
xchg
mov
and
mov
shrb
adcl
xchg
push
sbb
cltd
dec
loopne
add
add
outsb
cmpsl
cltd
fs
in
movsl
add
or
mov
and
test
lahf
test
negb
sarl
mov
jecxz
dec
mov
add
sbb
cmp
mov
add
adc
in
jbe
mov
add
add
jmp
or
iret
out
push
and
in
add
add
mov
lret
cmpsl
test
insl
push
enter
call
add
pop
add
cld
add
int
add
adc
sbbb
or
cmpsb
fs
sbb
add
add
jge
mov
adc
mov
mov
sbb
fs
mov
inc
dec
jg
add
dec
add
lret
ja
jbe
and
repnz
add
add
add
jnp
out
pop
mov
and
out
cmp
add
dec
shr
xor
stc
and
out
mov
add
add
dec
xchg
add
add
mov
inc
sarl
mov
loope
add
add
ja
add
and
push
xchg
ja
jae
jle
hlt
mov
or
incl
lds
dec
loop
add
aad
add
mov
and
jo
dec
sahf
mov
add
add
mov
in
faddl
mov
mov
mov
add
jb
xchg
out
mov
stc
xor
pop
into
or
add
add
jbe
popa
into
add
sti
and
cwtl
ds
push
push
loop
ja
and
aam
movsb
xlat
cs
loop
mov
add
add
cli
mov
add
add
jg
add
in
call
add
add
xchg
ss
gs
or
cmp
sub
int3
test
jg
test
mov
add
add
inc
xchg
pop
jg
xor
lcall
data16
incl
in
pushf
jmp
add
es
add
add
sbb
add
jo
pop
fistpl
push
mov
push
add
ror
repz
add
cmp
add
mov
add
add
loope
inc
xorl
outsl
add
add
push
test
mov
sub
rcll
add
xor
add
add
ret
add
inc
jno
loope
and
insb
popa
shrl
add
push
add
add
push
cmc
in
add
push
pushf
aad
lods
cmp
fs
lret
xchg
add
adc
push
add
add
xchg
sahf
jne
add
add
xchg
add
or
mov
test
mov
and
aad
pop
add
pop
pop
in
push
fisubrs
pop
fimuls
roll
decl
pushf
cs
jle
in
xor
loopne
add
loop
ja
lret
scas
incl
add
dec
add
outsl
lret
add
add
mov
lds
rclb
cmpsl
addr16
cli
cmc
xchg
insl
stc
incl
popa
cmp
dec
add
and
push
and
jmp
add
pop
inc
das
mov
incl
jle
add
or
add
add
mov
popa
fsubl
add
pop
lret
jmp
add
mov
inc
mov
xchg
xchg
add
and
add
xchg
sbb
add
or
cmp
push
incl
ret
inc
or
or
dec
ss
xor
jmp
out
sti
and
dec
cmp
add
aas
add
lds
sub
repz
and
sbb
outsl
add
mov
loope
gs
mov
add
cmp
jecxz
mov
fidivl
add
bswap
sub
jb
jmp
add
pusha
sub
fcomi
into
and
pop
sbb
in
das
fildll
or
pop
dec
cltd
data16
stos
sbb
adc
and
cmp
mov
jno
or
dec
dec
cltd
adc
add
add
outsl
or
add
xor
add
add
push
pop
jb
imul
mov
adc
lahf
inc
loop
test
outsl
mul
xor
or
mov
xchg
js
mov
imul
xor
leave
add
incl
daa
insb
and
push
jo
pushf
xor
fmuls
cli
jnp
std
popa
out
add
and
add
les
jo
add
add
jbe
test
orl
or
lcall
add
mov
add
add
add
ja
mov
movsl
or
scas
jp
jle
add
jecxz
push
pop
and
add
mov
and
pop
xor
lods
lods
popf
add
cmp
cs
add
mov
add
or
fsubrl
cld
das
dec
add
idiv
xchg
add
mov
add
add
test
bound
xchg
or
insl
add
add
addl
outsb
or
adc
out
add
iret
es
add
neg
cs
pusha
add
add
loope
aam
test
in
push
in
hlt
ss
pop
and
nop
and
loope
add
add
xor
enter
jg,pt
loop
fcomps
mov
add
cwtl
aaa
loop
add
jle
mov
popa
xor
imul
ret
hlt
in
insb
add
sbb
cmc
sbb
or
or
popf
lret
roll
jecxz
pop
cmp
add
or
add
xor
add
add
pop
mulb
pushf
lret
mov
call
xchg
mov
rorb
jp,pt
pop
outsl
add
add
sub
pusha
push
mov
aam
and
dec
roll
add
add
add
cmp
xchg
add
mov
inc
pusha
rol
or
sub
scas
sbb
or
scas
xrelease
aad
das
mov
add
or
add
add
cld
inc
pushf
sub
add
or
cld
jmp
add
mov
scas
out
fmulp
bnd
fmuls
add
pop
mov
outsl
sbb
int3
loopne
loope
shll
pop
xchg
addl
add
and
inc
add
decl
shrl
pushf
bound
aaa
rclb
pop
mov
jnp
sbb
add
jmp
mov
push
add
jle
out
dec
inc
add
or
add
stc
in
adc
and
inc
add
jp
ja
addl
push
adc
cmp
mov
and
cmp
loop
lret
mov
push
and
add
xor
jns
incl
pop
mov
mov
or
mov
add
out
mov
jle
xorl
es
lcall
lcall
movsb
dec
pop
and
out
add
test
jle
lea
mov
jmp
mov
mov
mov
stos
scas
cs
push
add
lcall
jne
add
pop
out
hlt
decl
pop
add
add
mov
push
outsb
mov
sbb
repnz
mov
add
or
add
and
fdivp
call
or
jb
push
mov
addr16
incl
loop
add
add
sub
movl
xchg
dec
add
add
add
jg
imul
add
and
nop
adcl
orl
ljmp
movb
push
incl
shrl
out
or
add
pxor
add
add
push
add
ficoml
jbe
out
repnz
mov
lods
into
add
rolb
add
divb
das
add
movsl
lahf
adc
push
add
shrb
add
and
addb
das
mov
dec
add
test
fcompl
mov
mov
add
add
jne
aaa
decl
add
jae
or
push
mov
loop
xor
and
pop
pop
jne
sarl
add
cmp
scas
sbb
inc
mov
adc
add
out
jle
aad
jae
jnp
jo
or
dec
loope
subl
add
xchg
mov
or
ds
add
es
mov
mov
je
js
lahf
incl
add
in
mov
jno
pop
add
add
push
repnz
or
jle
nop
adc
mov
ret
push
xchg
push
sbb
add
mov
je
add
call
pop
push
mov
call
xchg
popf
dec
adc
das
loop
add
add
add
add
cmp
or
lock
add
sbb
pop
leave
shlb
add
std
divps
add
push
add
push
add
add
xchg
mov
cmp
mov
data16
pushw
cld
add
jnp
call
popa
std
add
add
ljmp
cld
clc
mov
std
xchg
add
call
add
add
cli
or
and
aaa
lcall
out
fucomip
xchg
push
add
nop
dec
hlt
or
into
je
incl
or
cmpsb
push
outsb
addl
jecxz
insb
lds
add
add
add
and
mov
and
jg
add
das
gs
in
sub
aas
jg
fs
push
add
out
lahf
xlat
add
or
add
addl
add
jns
movsl
xor
mov
mov
add
add
inc
jo
arpl
ljmp
lea
and
jle
cmp
or
add
mov
pop
push
incl
scas
mov
or
mov
fadds
mov
mov
into
out
or
mov
mov
aad
cwtl
call
pop
in
dec
add
add
jge
loop
or
icebp
push
std
push
add
in
incl
outsl
pop
mov
mov
call
jb
sub
or
fldt
dec
adc
add
rol
jnp
jmp
jns
adc
or
or
in
add
add
and
add
add
mov
gs
add
lahf
std
xchg
call
dec
add
and
in
add
lret
cmp
add
jmp
sub
loopne
add
call
repz
or
add
movsl
push
loopne
rolb
add
arpl
mov
sub
jne
inc
fistpl
push
add
lds
add
jg
push
nop
aam
loope
add
xor
mov
add
add
jb
sbb
add
andl
in
and
out
push
insb
outsb
add
adc
inc
aad
add
add
add
sbb
rcrb
lods
out
add
sub
outsl
out
or
add
test
cli
lods
or
add
popf
xchg
inc
dec
popa
xor
aad
pop
mov
outsb
icebp
add
xor
lret
rol
fiadds
add
and
add
add
add
in
add
mov
add
and
inc
mov
subb
out
add
ss
test
mov
mov
arpl
repnz
loop
decl
loop
pop
cmpsb
outsb
aad
lcall
or
loop
inc
xchg
mov
loope
add
jnp
sub
mov
and
add
call
cwtl
addr16
adc
addr16
sbb
or
add
popa
xchg
stos
mov
dec
mov
jle
add
enter
popa
jb
add
add
out
enter
mov
and
xor
push
add
popf
inc
out
sub
jno
and
add
add
sarb
cmp
inc
repz
cld
mov
add
incl
mov
js
test
loope
add
xchg
xchg
into
xchg
pop
jecxz
insb
lret
adc
leave
aaa
test
push
pop
cmc
out
add
add
imull
in
add
cmpsb
out
inc
add
add
adc
jns
outsl
push
popa
gs
popa
bound
arpl
imul
jb
jb
push
imul
or
out
sub
add
test
popf
stos
or
jmp
and
xchg
xor
rolb
add
cmp
add
jecxz
dec
add
mov
add
and
stos
and
jg
cmpb
aas
xchg
dec
jg
scas
pop
or
add
inc
xchg
faddl
add
fbstp
adc
add
out
mov
addl
outsb
xchg
xchg
ds
mov
push
cmp
push
or
add
cmp
rorb
mov
pop
add
test
das
mov
mov
loop
add
add
sbb
add
add
imul
loop
out
pop
sbb
sub
decl
add
mov
add
and
mov
and
cmp
mov
add
in
gs
dec
sub
inc
mov
test
mov
pop
scas
movsl
negb
add
incl
mov
cmp
add
and
pop
das
sub
add
mov
add
test
add
loop
push
out
push
push
mov
add
std
lock
icebp
jle
enter
add
cmp
jecxz
and
sub
out
add
and
sbb
add
add
test
add
scas
cltd
xchg
add
xchg
pop
lea
jg
lock
in
ss
mov
loop
add
lahf
loope
or
mov
add
mov
mov
add
add
dec
push
sahf
mov
lret
out
ds
cs
push
add
lret
add
loope
sub
add
jecxz
leave
push
and
test
cmp
xor
mov
jecxz
add
sub
and
out
pusha
dec
or
add
repnz
leave
orl
ds
xor
add
lock
add
cmpsl
xchg
add
add
add
add
incl
xor
incl
jecxz
gs
add
cmpsb
add
fwait
mov
add
push
out
aas
js
imul
in
jns
sub
iret
add
out
cmp
repz
addl
add
in
ljmp
add
int
jle
jmp
adc
cltd
pop
pop
cmp
cli
incl
push
xchg
push
imul
pop
inc
and
xchg
loope
add
sahf
add
add
or
mov
outsl
add
add
mov
jno
inc
cmp
jo
add
incl
test
mov
and
and
es
add
inc
test
xchg
add
or
mov
bound
jmp
loop
jge
mov
in
mov
jle
cmp
in
sub
ljmp
das
mov
repz
jae
pusha
or
dec
in
fcoms
mov
add
dec
add
insb
cmp
add
cld
add
xchg
incl
mov
mov
add
decl
outsl
popf
std
jp
jns
jmp
in
incl
cltd
adc
cmpsb
jmp
bound
add
jecxz
and
fisttpll
push
test
add
add
out
lret
cmp
mov
pop
and
adc
pop
push
add
push
ret
or
lods
stc
mov
add
add
add
xchg
mov
add
lea
or
les
ja
shlb
or
xor
int3
pop
jo
orl
cmpl
push
call
add
lods
mov
in
add
jae
xchg
mov
add
loop
and
mov
add
add
daa
add
sub
ds
push
mov
fs
add
cld
or
sub
add
lret
shrl
cmp
or
add
add
add
add
dec
inc
cwtl
pop
jp
rolb
jmp
jl
adc
sbb
add
add
dec
add
mov
mov
add
xchg
dec
add
dec
in
or
push
add
and
pop
iret
add
xchg
or
lcall
pop
mov
mov
mov
jle
sub
dec
xchg
adc
incl
push
loop
push
mov
add
add
or
and
dec
add
in
fisubrs
xchg
xor
sahf
test
and
aaa
add
addr16
add
push
push
enter
add
incl
cmp
inc
xchg
mov
hlt
mov
or
out
std
adc
pop
pop
add
incl
insl
cmp
std
xor
pop
fistpll
pop
and
add
popf
jae
jecxz
mov
mov
dec
add
nop
lahf
repnz
mov
mov
add
test
add
add
outsl
cmc
daa
sbb
outsb
add
add
sub
dec
icebp
stos
push
add
push
in
cmc
and
lds
cwtl
lret
jle
add
add
arpl
add
loop
push
loop
add
leave
pushf
sub
mov
outsl
sub
or
outsl
push
dec
jmp
pop
pop
mov
fst
mov
add
jecxz
or
or
or
add
and
pop
add
mov
inc
clc
add
and
ss
outsb
mov
mov
jg
loopne
int
add
add
dec
mov
outsl
and
inc
insb
add
cwtl
loop
add
adc
add
inc
add
add
jmp
add
add
pop
sbb
lods
push
mov
sub
mov
incl
mov
cmpsl
cmp
mov
add
test
adc
add
pushl
mov
decl
std
cli
add
orl
add
mov
dec
add
inc
paddd
add
add
cs
add
std
or
add
inc
mov
mov
incb
aam
or
add
jo
shl
shlb
lcall
repz
push
push
ss
mov
xchg
enter
lret
div
xor
ss
add
mov
jl
and
add
add
mov
je
add
add
ret
add
add
add
fimuls
add
add
pop
inc
rol
into
cmp
pop
xchg
jp
das
cmp
lods
push
ljmp
add
xchg
jno
dec
add
mov
lahf
dec
imull
fwait
and
and
add
pop
mov
les
jle
jnp
add
mov
jno
cmp
lahf
outsl
sbb
jb
add
inc
sub
sub
add
jle
add
mov
add
xor
add
pop
sti
inc
fiaddl
add
add
outsb
out
dec
clc
loopne
inc
dec
mov
inc
mov
mov
js
fnsave
pop
add
add
sbb
test
mov
test
lods
or
add
incl
add
push
icebp
mov
push
add
incl
jae
mov
mov
or
and
lds
mov
mov
cmp
pop
and
ljmp
mov
jb
add
add
out
sbb
mov
add
dec
mov
decl
loopne
xor
jge
and
rcl
push
inc
add
xchg
loope
pop
xor
add
push
add
pushf
jnp
out
add
in
inc
xor
mov
hlt
loope
inc
ja
in
add
xchg
in
sbb
add
pop
or
and
push
mov
and
add
sbb
in
mov
mov
add
mov
punpcklbw
mov
fisubs
or
or
test
stos
incl
pop
push
ja
in
and
mov
mov
decl
outsl
add
add
js
insl
popa
dec
ret
add
ds
andb
or
pop
pushl
stc
push
sub
adc
lahf
pop
enter
and
mov
stc
dec
adc
mov
ds
xchg
mov
push
repz
push
push
ffree
test
mov
outsb
add
mov
jg
and
add
add
popa
out
mov
jnp
xchg
popf
xor
in
std
jnp
jmp
xor
incl
outsl
arpl
imul
add
cmp
fistl
adc
mov
loop
jmp
xchg
and
add
fcomps
cmp
test
pop
push
push
jecxz
push
sub
fildl
pop
inc
and
in
jl
sbb
add
mov
lret
add
adc
bound
add
mov
and
pop
mov
sub
cmpsl
incl
nopl
insb
movsb
jecxz
loop
pop
push
incl
add
push
aas
mov
cld
repz
fsubs
add
add
add
add
xor
call
mov
roll
adc
add
imul
ret
addb
xchg
add
das
mov
and
ret
stc
call
add
and
cmpsb
imull
add
mov
mov
dec
inc
or
cmp
pushf
dec
jmp
or
push
or
inc
mov
add
and
sbb
mov
or
add
repz
outsb
cmp
pop
add
out
add
push
mov
add
lcall
mov
popf
sbb
cmc
add
and
jecxz
add
add
in
and
pop
add
cs
mov
add
add
call
les
xor
cmp
hlt
nop
outsl
scas
add
mov
add
aam
xlat
jg
imul
dec
add
mov
mov
lock
incl
push
fsubrl
les
or
jb
sub
in
jle
jno
popf
xchg
add
lods
rorl
in
xor
call
add
sahf
add
lahf
into
cmp
cmp
incl
in
xlat
xchg
mov
call
mov
xchg
push
jle
add
mov
add
ljmp
push
xchg
je
add
jle
repz
add
and
in
and
xchg
in
mov
add
pop
cmpl
xchg
or
mov
and
lock
pop
pop
inc
sbb
add
jmp
ds
add
add
rclb
add
mov
add
add
jno
imul
xchg
add
shr
xor
mov
sub
or
mov
mov
or
subl
gs
jecxz
xchg
jmp
incl
mov
aam
jne
sub
mov
lcall
je
loop
stos
dec
lods
add
add
pop
out
xor
add
add
dec
sbb
or
loope
mov
insl
mov
add
enter
xor
cmp
nop
xchg
sbb
mov
add
lods
gs
rolb
stos
sarl
jp
push
rorl
incl
adc
jmp
xchg
add
jmp
mov
jmp
jecxz
jecxz
add
add
add
dec
add
add
aad
mov
add
adc
mov
add
add
jmp
out
or
lods
rcll
mov
testb
cmp
lock
jne
add
fcoms
ja
add
add
add
cmc
push
mov
add
pop
aad
in
and
add
add
dec
std
shrb
nop
fcmovnbe
iret
sub
dec
loop
jge
add
fsubp
sub
jo
xchg
add
stc
xchg
fiaddl
add
add
cwtl
inc
js
int3
or
les
cmp
add
loop
or
mov
add
add
mov
mov
add
mov
add
add
repz
xor
add
in
add
nop
popa
inc
dec
add
mov
dec
push
lock
les
out
add
dec
sub
pop
cwtl
cmc
pop
cmp
std
popa
dec
push
mov
mov
and
add
loope
outsb
mov
add
jmp
add
add
add
ja
cld
mov
testb
inc
jecxz
push
jne
adc
inc
cmp
ret
arpl
add
sti
mov
out
add
ds
shr
call
stos
mov
add
pushl
mov
loopne
add
call
fwait
mov
scas
dec
and
mov
add
pop
sub
mov
add
or
mov
adc
dec
add
andl
add
jmp
aas
add
xchg
mov
add
js
pushl
mov
push
inc
xor
out
adc
nop
add
or
add
incl
add
sub
loope
mov
enter
add
outsl
loop
in
mov
sub
inc
jbe
xchg
mov
xor
add
dec
adc
add
lods
iret
ds
invd
add
add
push
mov
or
jl
f2xm1
add
jle
add
out
xchg
ljmp
jmp
add
xorb
adc
and
lods
repz
pop
add
add
and
add
pop
cmc
and
fwait
mov
add
jmp
add
cmpsl
add
add
jecxz
sub
or
add
jb
xor
mov
add
shll
pop
add
add
loope
cmpsb
pop
enter
xor
les
add
dec
add
add
jecxz
pop
dec
dec
adc
decl
push
jae
popa
sub
and
mov
add
xchg
mov
and
out
push
sub
and
dec
push
testl
add
add
or
into
adc
add
lahf
mov
xchg
cmp
dec
and
popa
mov
jbe
add
aad
cmpsb
jno
sub
add
jns
jp
cld
add
jns
daa
add
cld
incl
cltd
dec
call
insl
xorl
stos
jbe
loop
add
add
int
mov
add
add
int3
lock
xor
adc
cmp
or
cwtl
jno
add
push
add
add
or
inc
xor
add
mov
or
add
out
xor
add
add
fcmovb
lods
xchg
imul
cmp
dec
repz
divb
mov
lods
mov
add
fcomps
add
add
sub
lret
mov
push
jl
mov
add
add
and
lods
pop
cld
mov
fsts
push
jp
cs
es
add
add
je
data16
xchg
mov
add
std
test
jge
mov
xchg
mov
and
jmp
out
mov
push
pop
cmpl
add
out
add
enter
cwtl
in
add
dec
jnp
add
incl
add
das
or
xchg
js
incl
add
je
sub
add
sahf
mov
pop
cmp
sub
inc
mov
add
int3
jmp
ret
add
out
pop
xor
or
and
pushf
fildll
mov
mov
dec
add
pop
in
jmp
inc
dec
mov
add
es
add
jmp
pop
add
add
add
jbe
xchg
add
add
add
mov
add
inc
xchg
paddsw
add
and
ret
jle
ret
push
ds
jne,pn
add
das
jmp
jo
insb
jecxz
loope
fnstsw
ss
add
push
mov
lods
out
or
jmp
or
xor
add
aaa
mov
add
popa
inc
mov
jp
mov
dec
push
and
pop
clc
mov
decl
pop
movsb
lock
or
mov
das
add
push
jl
clc
xlat
add
jo
les
sti
lret
mov
out
enter
add
sti
dec
loope
jnp
add
cld
stc
testb
lcall
incl
xor
dec
decl
jp
push
orl
add
add
es
cmp
sti
out
add
shlb
push
out
add
popa
add
add
or
xor
mov
add
adc
or
or
inc
jmp
mov
add
add
add
mov
add
add
and
cli
movsl
insb
loopne
pop
add
mov
pop
js,pt
sub
lcall
add
inc
popa
jecxz
imul
call
dec
xor
cmp
add
pop
dec
jb
add
mov
and
clc
dec
add
add
inc
test
xchg
nop
add
pop
test
lea
cmp
dec
roll
loope
add
mov
pusha
sub
add
mov
in
incl
mov
in
add
add
pop
or
or
dec
ret
das
xchg
adc
add
loopne
fimull
bound
add
jle
add
add
add
or
add
sbb
xor
popa
mov
add
ds
mov
xor
lea
push
jmp
add
pop
fcmovu
add
loop
popf
pusha
push
add
mov
adc
or
add
movsb
jo
and
mov
aam
push
jecxz
arpl
cmp
jecxz
hlt
cltd
lods
cmpsb
pushf
xor
push
outsl
pop
pop
jecxz
push
les
ret
pop
in
incl
pop
scas
aad
imul
add
xchg
mov
or
add
add
add
addb
dec
sbbl
xchg
add
out
nop
adc
decl
pop
loop
add
add
add
inc
xchg
push
add
mov
add
add
cmp
push
dec
test
add
jecxz
mov
je
addl
loope
stos
arpl
add
lret
pop
repnz
insb
lahf
push
cmpsb
add
jmp
outsl
test
bound
stc
dec
xor
call
inc
rolb
and
lods
repnz
xlat
jno
mov
or
mov
loope
les
pop
dec
mov
repz
jle
iret
mov
cmp
push
jg
dec
decl
sub
add
ds
rcll
add
add
add
repnz
and
mov
iret
mov
packssdw
add
das
addr16
jb
out
add
add
mov
add
push
addr16
loope
clc
call
mov
popa
fwait
xchg
in
mov
pop
lret
adc
mov
mov
add
add
loope
cmp
push
in
pop
xor
sub
add
add
sbb
xchg
repnz
and
and
xor
repz
cmpsl
dec
mov
inc
rolb
xchg
jnp
pop
in
leave
incl
add
jbe
fsubrs
dec
and
jle
lods
add
jg
jg
add
dec
or
or
sub
imul
mov
lods
jbe
add
dec
iret
inc
xchg
add
push
stos
int
adc
and
into
xor
jae
add
push
pop
adc
les
add
cli
add
mov
and
add
inc
shrl
add
dec
pop
sti
fcoms
lods
adc
jmp
dec
add
movsb
pop
cwtl
jp
sbb
jnp
incl
sbb
idiv
mov
inc
add
mov
jmp
incb
add
cltd
decl
call
mov
repz
fnclex
inc
and
in
addr16
sbb
mov
in
add
aam
mov
add
or
cmpsb
cld
lds
jg
jg
dec
pop
testl
jle
xchg
popf
fldenv
pop
add
add
movsl
jae
scas
and
add
outsb
popf
xchg
add
add
out
sub
iret
add
dec
out
mov
iret
test
mov
pop
lahf
scas
js
add
xlat
xchg
cmpb
mov
jmp
ret
push
enter
lock
out
jb
add
incl
add
xchg
pushf
dec
sahf
incl
inc
add
pop
in
sub
cmpl
lret
dec
mov
push
jb
add
loopne
sar
add
orl
ja
popl
pushl
add
add
add
leave
int
sub
and
aad
das
dec
out
pop
test
in
and
inc
dec
add
mov
add
add
or
lret
fsts
or
dec
das
scas
jo
jp
pop
jecxz
mov
add
divb
add
push
shlb
or
test
xor
xchg
jb
inc
or
add
out
loope
mov
jno
inc
add
outsb
add
pop
pop
xchg
fsubrl
add
loop
add
std
aas
movsb
sbb
and
shlb
add
lods
aas
sti
push
loop
add
add
mov
loope
add
add
add
loope
int
insl
and
das
andl
adc
or
add
sub
mov
push
decb
mov
add
add
and
cmp
test
jle
incl
add
add
jb
add
add
movsb
nop
xor
mov
xchg
xchg
std
inc
add
scas
incl
push
dec
mov
mov
mov
inc
cmp
pop
mov
xchg
int
or
mov
ds
cmp
add
and
jge
imul
pop
adc
add
loopne
outsl
jecxz
mov
mov
add
adc
ds
out
lret
or
cmpl
inc
bound
jle
add
addb
add
lahf
lret
repnz
pop
insl
bt
mov
and
in
or
add
mov
push
add
add
add
incl
and
jbe
add
dec
sub
jl
dec
push
push
add
iret
sub
in
mov
jle
dec
mov
add
or
loope
lods
pop
rorb
push
mov
out
cmpsl
inc
addr16
in
add
or
or
push
jne
pop
shlb
lock
outsl
popa
pop
and
cwtl
jle
adc
loop
repnz
cmp
movsl
test
repz
sbb
enter
mov
mov
cwtl
push
loop
or
add
inc
pop
gs
lds
add
lods
mov
test
add
fildl
pusha
push
jp
add
loope
mov
and
jbe
outsl
add
add
outsl
cmp
arpl
mov
xchg
enter
add
repz
xchg
les
out
test
lcall
jno
popf
incl
incl
add
icebp
dec
cmc
xor
add
add
push
inc
in
mov
mov
cmp
add
and
repnz
mov
loopne
cltd
incl
jge
sub
loop
test
mov
pop
add
add
add
jmp
lods
pop
dec
loop
jecxz
and
add
add
cmpsl
push
push
add
pop
add
jecxz
aas
lcall
mov
and
mov
shll
loope
add
add
jecxz
shrb
mov
loop
sbb
mov
add
add
add
ret
pop
pop
loop
repz
xor
shlb
ret
mov
call
dec
mov
mov
push
test
mov
add
das
add
fmuls
adc
lock
scas
cs
add
imul
add
ss
add
ja
inc
push
mov
mov
and
lea
add
in
loop
sar
push
or
pop
cmp
data16
add
or
mov
mov
fiaddl
add
add
int
lds
fidivrl
cmp
incl
cld
add
test
add
popl
jmp
add
gs
mov
ds
stos
cmp
and
sub
add
or
or
scas
loop
loope
sarb
or
adc
movsl
in
dec
jbe
xchg
add
leave
push
ljmp
add
divb
aad
pushf
jecxz
add
xchg
mov
jne
add
arpl
enter
add
or
xor
or
adc
iret
int3
dec
add
and
loop
outsl
add
incl
and
pop
add
and
push
ds
jle
dec
xlat
jle
adc
add
add
and
cmp
add
test
mov
adc
jno
xchg
dec
incl
add
add
sbb
out
push
and
test
add
inc
cmc
int3
in
add
jmp
push
outsb
sub
mov
xchg
mov
push
cmp
jnp
stos
dec
dec
mov
mov
xor
mov
add
or
mov
add
sub
add
and
out
loope
insb
and
sub
mov
ljmp
jl
and
add
add
data16
inc
pop
mov
mov
add
add
add
mov
add
jae
iret
je
add
popf
movl
mov
push
mov
add
das
jne
in
add
mov
xchg
cmp
int
in
repz
ds
fs
test
and
daa
dec
push
add
dec
inc
mov
dec
subl
xor
rolb
jmp
das
jle
cltd
sub
push
incl
add
in
test
add
mov
push
mov
add
add
and
fdivrs
add
and
push
hlt
aaa
out
mov
xchg
jmp
nop
add
add
mov
add
aad
sub
add
xchg
jmp
add
add
dec
imul
and
jne
dec
dec
jno
mov
in
out
aas
pushf
repz
and
add
dec
js
xchg
pushf
mov
and
mov
lods
sub
out
add
pop
mov
and
jno
or
mov
or
jo
or
push
or
add
push
mov
add
and
dec
jns
push
add
call
xchg
add
lea
subb
adc
movsb
push
xor
jo,pn
inc
pushf
aaa
stos
add
add
in
sub
and
dec
and
pop
xor
add
sub
xor
jecxz
add
add
cmp
lahf
dec
adc
jnp
and
add
cli
mov
xchg
pop
jns
add
adc
jle
jle
enter
push
sub
or
add
test
call
jge
incb
mov
add
lret
push
add
and
mov
xchg
sti
push
lods
into
les
add
pop
inc
add
jle,pt
push
dec
mov
mov
add
cwtl
int3
jle
add
add
jge
or
out
dec
mov
cmpl
or
out
daa
jae
stc
loope
es
add
outsl
add
and
add
cmp
add
fnstcw
ja
insb
add
mov
shr
inc
addr16
push
adc
std
pop
mov
add
jo
mov
mov
push
push
mov
add
and
sbb
pop
add
and
clc
push
sub
sbb
outsl
sbb
push
xchg
call
cmpsl
shlb
shl
pop
adc
push
sbb
and
sub
dec
lret
das
mov
add
out
mov
adc
outsb
or
lret
sbb
out
scas
in
mov
mov
rcrb
cmp
inc
jge
negl
mov
add
mov
sahf
iret
mov
add
cmp
sbb
or
add
add
fidivl
int
add
mov
add
subb
jmp
leave
mov
add
ds
add
jmp
inc
mov
add
fucomi
mov
add
and
ret
jl
jbe
xor
push
add
jle
jmp
add
add
pop
sub
add
ljmp
pop
stos
iret
incl
and
add
inc
mov
and
add
jg
push
arpl
ljmp
rolb
lock
pop
mov
das
lahf
movsb
paddusb
add
xor
sarl
add
jecxz
add
incl
rolb
add
add
in
mov
cltd
and
sbb
in
lret
sti
add
sbb
mov
andb
jno
add
test
jae
inc
add
mov
jmp
fcomi
jge
cltd
jle
add
sub
xchg
movsb
xchg
add
les
xor
or
push
pushl
add
add
in
daa
idivb
add
jg
and
add
add
add
int
add
and
and
sbb
mov
or
or
fsts
jnp
movsl
cltd
sahf
jecxz
and
in
popf
repz
add
dec
add
xchg
in
add
push
mov
xchg
js
add
jnp
cmp
inc
mov
xor
add
push
addl
iret
pop
cmpsl
pop
repz
aas
movsb
pop
pop
in
add
jae
ds
add
dec
add
subb
xor
das
movsb
dec
aam
sbb
jmp
loope
xchg
incl
xchg
out
ljmp
add
call
jnp
add
sbb
lcall
decl
and
add
push
xor
add
mov
add
add
add
add
add
mov
in
cwtl
ljmp
or
ss
add
repz
add
push
rolb
mov
add
or
jg
and
add
mov
mov
push
push
in
xor
dec
sub
xchg
divl
test
ja
pop
mov
les
or
jp
dec
push
jle
jg
jg
mov
add
ds
add
mov
xor
pop
repnz
sbb
jmp
fcmovne
jb
and
jo
cmp
popf
xchg
ror
out
mov
loope
lods
mov
ds
add
push
mov
cs
fs
call
cmp
test
movsb
dec
add
and
fadds
jbe
loopne
jecxz
add
aad
bound
add
add
jle
adc
or
and
xlat
cmpsl
mov
adc
incl
daa
adc
or
cmp
outsl
arpl
xor
adc
push
mov
icebp
sbb
mov
mov
cmp
add
add
lds
adc
add
add
mull
test
movb
int
mov
add
pop
dec
add
add
ds
cmp
add
fbld
or
mov
mov
aad
xor
add
or
or
fisubl
cmp
xchg
mov
arpl
pop
push
and
loope
in
add
and
and
add
mov
or
mov
add
incl
in
fwait
pop
adc
hlt
add
add
stos
sub
mov
imulb
cmp
stos
adc
add
add
ja
ret
loope
pop
ds
popl
jecxz
add
push
mov
add
or
push
aam
push
daa
jbe
lods
repz
add
push
jl
add
jo
loop
add
mov
add
or
dec
out
xchg
xchg
add
push
mov
dec
jle
add
aam
mov
dec
jg
cmpsb
pop
sub
mov
shll
aad
add
add
cmc
movsb
sbb
add
data16
mov
cmp
jle
jecxz
sbb
or
add
cmpsl
add
and
mov
jge
dec
into
and
mov
or
add
das
popf
aad
les
add
sub
push
sbb
add
or
loopne
loope
call
mov
xchg
add
fnsave
mov
sub
mov
test
mov
mov
add
push
dec
xchg
mov
jecxz
fbld
pop
mov
add
das
mov
push
pop
push
add
sub
mov
inc
jecxz
loope
xchg
xchg
notb
adc
filds
add
mov
shrb
or
icebp
jbe
add
inc
pop
rorb
and
lock
add
mov
or
mov
xor
xchg
xchg
push
add
insb
cli
add
scas
and
incl
inc
mov
pushf
mov
add
mov
out
add
and
adc
call
xchg
inc
sub
lds
add
add
dec
jns
lahf
xchg
push
outsl
add
add
incl
add
add
incb
and
jnp
popf
call
add
cli
inc
pop
fwait
cmpsl
daa
add
add
add
out
jle
adc
and
xor
add
js
jmp
inc
push
in
adc
popf
incl
push
and
fadds
add
add
test
sub
add
outsl
mov
in
add
jecxz
mov
or
cmp
xchg
jmp
jb
incl
adc
cmp
xchg
jg
and
mov
pop
add
push
movsl
xchg
xor
cmp
add
add
add
or
add
add
addr16
in
enter
fdivrp
jmp
inc
aam
cmp
mov
add
add
aaa
frstor
leave
sti
add
loope
stos
rolb
jle
imul
enter
add
xchg
icebp
movl
sahf
xor
pop
daa
stos
aad
dec
dec
sub
add
add
je
orb
pusha
mov
add
jg
add
int3
dec
fmull
add
add
call
lea
dec
add
sub
mov
lock
add
dec
or
hlt
imull
add
jb
add
incl
add
jno
mov
cmpsb
or
loop
sbb
rcrb
add
xchg
mov
add
jne
call
add
rorb
jmp
int3
cmp
xchg
and
inc
inc
xor
push
push
in
jecxz
mov
mov
pop
inc
jo
js
jle
dec
sbb
add
std
push
xor
and
jge
mov
mov
decl
mov
add
push
fwait
pop
push
loop
btrl
inc
dec
xchg
xor
add
icebp
push
jmp
inc
call
xchg
add
imul
mov
inc
stos
inc
add
fiaddl
add
repz
out
adcl
add
add
and
xchg
push
add
test
fst
imul
push
ffreep
mov
icebp
sbb
outsl
lcall
add
rorl
xor
xchg
mov
add
icebp
in
add
add
sbb
add
add
es
and
cli
clc
xor
sub
add
mov
das
mov
mov
popa
nop
and
add
fs
aaa
add
jle
mov
das
push
sub
repz
nop
mov
xor
or
or
pusha
add
jno
sahf
add
push
or
enter
es
dec
and
sahf
imul
cli
lahf
jp
incl
add
incl
add
add
mov
add
add
xor
mov
sarl
movsl
xchg
addl
add
fs
or
popf
add
add
xchg
add
inc
jg
and
mov
add
add
bound
mov
jo
sarb
cmp
popa
add
push
call
bound
jo
add
mov
add
add
add
xchg
add
dec
push
les
dec
push
mov
add
leave
fcmovb
mov
loope
or
or
jns
add
pop
addl
out
out
add
mov
add
add
push
push
dec
ja
nop
dec
add
or
or
push
mov
popa
je
add
addl
dec
js
fsubl
gs
jmp
add
mov
lret
add
add
add
inc
lock
sti
and
jle
add
mov
fs
dec
sub
and
das
pop
xorb
ficoml
add
roll
xchg
test
add
xchg
add
mov
mov
and
jle
adc
add
or
inc
xlat
cmpsl
xchg
pushf
or
mov
mov
xchg
add
mov
add
mov
xor
loop
add
xor
and
or
js
xchg
add
add
lds
inc
fisubrs
dec
add
mov
mov
pop
dec
add
cmp
mov
outsl
outsl
push
and
mov
add
mov
decl
jecxz
gs
orb
add
daa
stc
mov
jle
jl
loopne
mov
cwtl
xor
das
lahf
cmp
decb
add
add
fisttpll
jne
add
xlat
jnp
movb
add
incl
repz
cmpb
add
mov
shlb
add
cmp
or
incl
jmp
ljmp
and
add
add
call
dec
add
and
data16
mov
jle
push
lods
add
dec
add
add
dec
mov
push
adc
add
pop
push
int
add
ja
add
pusha
jle
lahf
jo
lret
add
mov
mov
add
jl
add
in
ds
pusha
dec
mov
mov
jmp
xchg
repz
add
pop
xor
ljmp
loop
or
das
add
das
jecxz
mov
jbe
add
nop
dec
xchg
lea
and
jo
push
mov
dec
lret
pushf
add
dec
out
fisubrs
imul
test
pop
out
ja
mov
add
adc
add
jle
xor
add
mov
mov
jmp
inc
lahf
mov
xchg
ljmp
add
repz
xchg
jmp
jecxz
add
js,pt
aaa
add
add
and
mov
or
pop
pop
das
add
loop
cli
cmp
mov
add
addr16
hlt
xor
nop
and
push
add
add
mov
or
filds
sti
loop
ljmp
out
add
in
pusha
das
jae
push
in
loop
call
jb
call
xlat
mov
xor
add
stos
scas
mov
xlat
add
add
jbe
xor
lea
adc
or
dec
incl
mov
or
add
mov
jnp
push
fcos
add
mulb
inc
scas
cmp
mov
into
lcall
dec
and
loop
and
and
ds
push
iret
fldl
add
and
out
inc
popa
loop
in
add
dec
xor
loope
xchg
ret
pushl
or
out
add
scas
push
add
pop
sub
add
ljmp
mov
testb
push
xchg
add
add
sti
add
cld
sti
popa
je
sub
outsb
jnp
mov
jle
mov
mov
sbb
loop
or
ret
sub
addl
in
push
loopne
add
jecxz
mov
xchg
add
mov
pop
xor
loop
xchg
cwtl
mov
dec
imulb
dec
add
popf
adc
dec
add
jg
mov
add
add
jecxz
mov
enter
jecxz
jbe
jge
notb
aaa
adc
add
scas
pop
int
add
mov
out
add
and
sub
add
in
insb
sbb
pop
add
shrb
add
pushf
push
jbe
ds
add
jno
pop
ds
jle
adc
mov
andl
add
dec
leave
cwtl
add
out
add
stos
subl
add
cmp
cmp
add
add
cmp
mov
testl
in
std
repz
lods
out
add
cwtl
scas
mov
jno
repz
mov
adc
add
add
mov
jecxz
jecxz
add
fcomps
add
jns
scas
and
add
jnp
jg
push
out
fwait
mov
xlat
pop
pop
aad
add
and
sbb
add
test
add
add
sub
add
add
mov
push
sti
gs
jbe
add
cmp
add
aam
cmp
sub
add
cli
outsb
cltd
shl
add
sbb
stos
add
and
into
push
ret
das
add
incl
fisubrl
stos
mov
iret
push
shlb
loopne
push
push
insl
les
add
pop
cmp
iret
inc
add
add
jle
sti
sub
mov
call
out
pop
jne
add
adc
negl
les
add
mov
scas
test
cmp
int
xlat
xchg
aam
and
mov
add
scas
mov
add
add
popa
jbe
add
and
jb
addl
jno
addb
adc
lods
add
add
pop
out
mov
push
mov
add
repz
stos
repz
push
mov
js
jae
add
and
and
and
add
mov
mov
imul
cltd
inc
out
add
inc
pop
ficoml
add
jg
scas
sbb
aas
xlat
add
jecxz
loope
and
jecxz
add
add
jno
add
add
in
jecxz
addr16
popa
fstpt
mov
int
insb
and
jbe
and
xor
add
dec
jle
sub
leave
add
sub
add
xor
inc
inc
ret
incl
or
dec
icebp
rorl
adc
push
add
jns
lods
xor
cmp
aam
add
push
nop
pop
in
add
jecxz
jle
out
jmp
dec
mov
add
or
add
adcb
push
add
inc
ljmp
push
xor
add
and
mov
push
adc
add
fstps
out
add
ljmp
add
sub
lret
add
or
pushf
push
push
adc
and
inc
ja
js
movsl
in
add
outsl
add
les
add
push
out
dec
or
sbb
add
add
add
sbb
les
lock
add
adc
sti
push
stos
sbbb
inc
push
mov
incl
add
xchg
ds
xlat
add
add
mov
inc
pusha
jecxz
add
add
add
add
cli
incl
call
incl
dec
or
popl
add
stos
jle
std
test
adc
ss
add
mov
outsl
repz
push
pop
addr16
aam
inc
add
inc
mov
or
add
mov
jno
jmp
xchg
mov
dec
or
dec
pusha
push
rorl
pop
pop
ljmp
loope
mov
add
dec
add
add
sahf
loope
add
sti
mov
in
incl
add
push
or
and
jge
inc
sub
lret
pop
adc
jecxz
testb
mov
add
or
dec
or
jge
add
cbtw
xchg
jmp
and
jns
push
js
in
add
and
jecxz
add
bnd
fwait
enterw
or
and
xchg
dec
incl
das
add
inc
jl
cmp
sti
sub
push
add
add
repz
in
add
jle
adc
popa
daa
cmc
jmp
sub
adc
test
push
pop
test
add
inc
add
aas
fmull
stos
dec
mov
cmp
jecxz
repz
mov
add
push
add
mov
stos
pop
xor
js
add
out
mov
or
inc
jnp
ds
fucom
push
and
add
mov
add
or
pop
inc
push
fisttpll
jge
add
lcall
push
call
sar
cld
test
add
add
out
sbb
adc
call
jl
mov
add
xor
int
lcall
add
cmp
ljmp
insl
test
outsl
add
add
and
cltd
xor
mov
add
test
out
xchg
jle
jo
std
or
adc
jmp
xlat
add
add
jg
mov
or
in
cmpb
js
incl
and
add
ret
mov
repnz
add
aam
movsl
or
inc
lcall
or
and
mov
push
pop
add
mov
and
pop
and
incl
add
mov
add
add
jmp
add
add
lcall
or
adc
inc
loopne
push
pop
fs
jecxz
repnz
pop
fstps
fadd
das
mov
add
jo
jae
add
add
add
sbb
add
add
fs
jo
leave
push
add
dec
sahf
cmc
or
sti
xor
mov
pop
js
add
incl
add
imul
jmp
add
add
add
cmp
pusha
mov
insl
mov
mov
lea
cli
je
sub
jp
loopne
and
or
lods
or
out
loop
andb
pop
frstor
add
inc
daa
int
stos
add
add
or
cmp
or
mov
clc
pop
xchg
and
mov
jnp
mov
js
lock
cmp
add
add
add
add
xlat
or
cmp
mov
add
jecxz
jle
cmp
stos
aaa
sbb
notrack
xchg
sarl
sbb
das
mov
cmp
mov
add
aam
stos
dec
mov
add
stc
jns
repz
jle
pop
bound
rorb
or
pop
imul
out
nop
mov
cld
push
jmp
dec
mov
stc
sbb
icebp
jl
mov
iret
pop
loop
pushf
mov
dec
and
pop
imull
jmp
add
push
push
rcr
dec
mov
add
jecxz
cmpsl
mov
push
jp
inc
nop
sahf
std
push
insb
add
pop
pop
lods
bound
add
add
add
movb
inc
gs
and
add
mov
loope
call
and
or
xor
dec
cmp
add
or
pop
xlat
xor
je
jg
mov
repz
xchg
jmp
add
add
add
jb
test
cmpb
and
or
add
lds
icebp
adc
stc
mov
popa
adc
sub
cmp
dec
add
add
and
jecxz
add
and
mov
lret
decl
and
jmp
inc
sahf
mov
loop
movsl
in
mov
xchg
add
push
cmp
outsl
jge
aam
mov
icebp
dec
mov
add
add
add
add
and
sub
or
add
pop
repz
add
push
and
fwait
cmp
in
push
loope
lcall
add
add
jae
loope
mov
sub
test
das
add
repz
jecxz
out
mov
add
mov
out
in
insl
add
push
xor
pop
add
add
jle
mov
add
add
add
or
in
imul
inc
loope
jae
call
call
add
inc
add
add
dec
jmp
jae
in
data16
cmp
call
add
jge
ss
mov
add
push
adc
mov
mov
jecxz
add
add
jle
shlb
repz
js
jle
xchg
stc
and
sbb
aaa
mov
add
add
mov
add
jle
jbe
xchg
mov
add
mov
decl
mov
in
add
add
cmp
sbb
addl
daa
sub
dec
jmp
pop
pop
cltd
push
fwait
repz
add
add
ror
jmp
sub
loope
add
out
stos
dec
xchg
cmp
add
dec
inc
pop
dec
add
add
and
mov
addl
push
cmpsl
mov
out
inc
adc
xor
les
push
imul
add
and
add
ljmp
call
sub
lock
decl
push
mov
in
lret
lods
call
incb
scas
movsb
bound
or
mov
insl
cld
add
inc
popa
pop
aam
incl
push
add
lcall
jle
mov
repnz
xchg
cld
add
add
add
out
das
test
sub
in
add
popf
mov
add
add
and
or
add
and
pop
pop
add
jl
repz
incl
add
aaa
add
jecxz
jecxz
insb
mov
add
jecxz
mov
mov
add
out
xchg
add
jp
xchg
mov
pusha
cmp
scas
incl
add
push
int3
inc
stc
push
orl
push
popf
mov
add
mov
incl
jle
or
stc
add
dec
cmp
add
add
jp
push
add
add
dec
add
jmp
lods
jbe
mov
out
cmp
sar
movsb
xor
add
daa
sub
xchg
or
mov
add
pop
xchg
call
add
inc
out
sbb
mov
rolb
and
sbb
movsl
add
in
add
add
cli
add
and
add
add
mov
xlat
loopne
sahf
aaa
mov
incl
mov
add
movsb
jo
jne
or
push
je
mov
xor
add
rorb
loopne
add
addr16
adc
jmp
and
jb
ja
push
add
jecxz
mov
and
xor
add
inc
shll
mov
mov
mov
jne
cmp
inc
ljmp
lcall
orl
push
push
lcall
jecxz
mov
jecxz
add
pop
int3
jae
int3
or
mov
shlb
add
jle
cmpsl
hlt
inc
mov
add
and
orb
popf
push
mov
and
scas
sti
add
pop
insl
popf
add
xchg
mov
bound
add
and
fmuls
add
loop
inc
mov
add
add
push
dec
jbe
add
add
loop
cmpsb
xor
inc
and
pop
mov
jnp
add
mov
mov
add
daa
push
xchg
mov
add
add
in
xor
stos
add
mov
add
fucomp
jle
dec
inc
stc
adc
jmp
mov
shl
stc
data16
add
add
add
dec
lret
inc
ja
les
cmc
clc
jge
test
add
and
inc
loope
add
add
push
jl
xchg
inc
push
repz
pusha
movl
add
mov
add
add
or
and
jno
incl
add
mov
movsl
movsb
jp
iret
add
add
mov
shlb
jmp
shr
incl
xorl
dec
cmp
add
add
shll
push
out
add
sbb
loope
and
add
add
inc
sahf
mov
lcall
xor
add
cli
xchg
mov
sbb
add
stos
xchg
add
sub
and
lods
ljmp
add
in
stos
add
lock
jno
jbe
dec
aaa
cmp
rcll
sub
mov
or
cltd
incl
inc
and
jecxz
pop
xor
jecxz
stos
sbb
or
incl
or
jecxz
loop
xchg
add
jle
xchg
push
xor
adc
xchg
add
pop
xchg
outsl
sub
ja
dec
xlat
jg
movsb
fisubrs
jb
add
dec
outsl
jle
call
aam
add
cld
movsb
mov
add
add
add
scas
cmpb
add
cld
lods
in
cmp
add
adc
pop
lret
clc
in
pusha
mul
lock
xchg
pop
out
add
sbb
push
xchg
jmp
mov
fmull
sahf
xor
add
add
add
push
mov
push
arpl
loope
ds
les
mov
ret
in
adc
cmpsl
imul
cmc
rorl
inc
shr
enter
add
clc
jbe
insb
mov
xchg
cmp
sub
in
and
add
stos
add
jg
loop
in
add
and
mov
pop
cmpsl
repz
inc
nop
insl
add
cmp
mov
pop
inc
add
add
sub
fisttpl
or
shl
xor
add
out
out
data16
pusha
mov
incl
out
leave
popa
out
or
cmp
add
add
jecxz
add
cld
sub
incb
mov
cld
incb
pop
std
inc
jl
add
jmp
jmp
incl
addl
les
fdivs
add
add
mov
and
add
icebp
cmpb
sti
xchg
xchg
scas
pop
jmp
das
aad
push
loop
cmp
stc
jb
add
dec
add
or
jbe
add
ret
popf
aad
add
add
add
test
lret
test
loop
add
push
enter
out
fisubl
add
mov
dec
movsb
jg
xchg
mov
test
xchg
add
add
push
lock
ret
add
bnd
mov
add
lds
sub
rcr
jle
hlt
push
or
decl
out
mov
push
or
fimull
xor
or
dec
ret
loop
test
add
out
xchg
mov
and
cmp
lret
pop
cmp
add
les
inc
add
xchg
out
add
jnp
xchg
mov
and
add
dec
lret
rorb
or
add
mov
mov
movsb
push
inc
add
jmp
add
and
clc
xchg
test
add
push
das
out
mov
add
in
cmp
iret
mov
push
sub
mov
jmp
cmp
add
add
mov
add
imul
inc
dec
mov
add
jecxz
fs
mov
or
incl
xchg
jns
push
jge
sbb
add
add
rorl
add
in
inc
mov
add
icebp
push
stos
jbe
pop
add
or
jl
add
add
add
dec
or
add
adc
sarb
movsl
sub
fistps
add
lock
mov
add
les
dec
xor
add
gs
imul
out
sti
jmp
pop
add
loop
loope
ja
jo
mov
add
loope
inc
test
jno
aaa
xchg
pop
add
add
out
lahf
add
lcall
mov
add
push
inc
sub
add
add
adc
or
ds
cmp
ljmp
out
sldt
mov
or
ss
cmpsb
lss
fcomps
push
jg
mov
cmp
adc
add
jne
and
jle
add
xchg
add
and
add
cmp
in
js
adcl
pushf
popa
test
aas
inc
add
leave
int3
fs
pop
dec
jg
mov
add
add
adc
add
ljmp
add
add
cmp
ljmp
idiv
cltd
mov
inc
mov
js
xor
test
cltd
mov
or
les
or
mulb
testb
in
adc
mov
add
add
add
pop
outsl
dec
add
and
sbb
fsubrl
inc
scas
lahf
add
hlt
mov
arpl
rolb
pushl
add
in
xchg
ret
loop
add
add
and
push
popa
jb
add
out
call
add
popa
sub
dec
roll
add
adc
add
orl
in
mov
dec
pop
mov
es
jle
xchg
cs
std
repz
loope
ss
mov
mov
out
adc
mov
outsl
mov
add
dec
add
in
pop
jno
push
add
jp
jmp
imul
jmp
incl
in
cld
nop
jnp
push
and
sbb
orl
add
add
mov
insl
inc
adc
stos
lret
out
cs
pop
imul
movsb
xchg
mov
or
je
add
push
inc
pop
mov
add
add
cmpsl
inc
cmc
insb
insl
movl
cmc
inc
movb
jecxz
ja
inc
push
xchg
xor
js,pt
xchg
or
in
add
sbb
add
or
decb
std
faddl
add
add
add
sub
repz
mul
add
mov
and
outsb
les
jge
add
call
jle
mov
fsubrl
lret
add
jg
loop
pop
adcb
mov
pop
stos
cmp
jg
loop
add
add
mov
add
bound
jnp
add
hlt
aaa
bound
mov
into
add
roll
stos
jmpw
and
scas
add
je
fwait
pop
and
nop
nop
sbb
add
out
xor
incl
mov
dec
dec
xchg
cmp
push
stos
or
cmp
incl
add
add
jecxz
test
add
jge
shlb
pushf
outsl
add
in
add
ret
cmp
add
daa
movb
insb
repz
out
test
daa
cmpsb
add
cli
mov
stc
pop
insl
loop
add
add
add
and
add
and
mov
addl
arpl
scas
add
jbe
add
push
aaa
mov
mov
mov
ljmp
push
xor
jg
jg
add
mov
les
jo
sbb
and
pop
mov
push
fs
std
rcr
push
repnz
add
fwait
out
ret
or
add
out
ss
xlat
adc
add
in
sub
add
add
pop
das
push
popa
and
push
dec
add
jb
and
aam
xchg
xchg
add
repz
decl
add
call
xor
bound
add
or
mov
and
add
clc
iret
mov
add
add
dec
sbb
iret
or
add
jl
adc
cmp
push
sti
and
add
mov
add
add
call
int
loop
add
or
pop
add
mov
add
repnz
hlt
fnstenv
inc
add
and
sahf
faddl
add
xor
inc
inc
out
mov
jle
pop
jp
xchg
movsl
add
add
add
test
incl
jecxz
push
fdivr
add
cmp
lods
lds
add
add
add
setne
mov
loopne
push
or
push
imul
cmp
in
cmp
movsb
incl
xchg
push
out
ss
clc
cs
add
dec
or
jle,pt
addl
push
repz
add
rcrl
and
pop
add
mov
mov
sti
and
add
mov
in
add
rcrb
adc
mov
mov
xor
and
fisubrs
movsl
pop
mov
cmp
test
jecxz
dec
add
cwtl
add
push
and
jp
leave
iret
test
add
push
loopne
push
add
and
repz
jecxz
add
imul
cmpsl
in
mov
addl
mov
ja
add
mov
add
xchg
testl
mov
mov
jecxz
add
inc
fcomp
dec
mov
add
test
push
insl
pusha
add
add
mov
add
jecxz
dec
pop
jle
mov
jae
or
jecxz
jecxz
inc
pushf
push
add
add
movsb
jp
push
inc
add
inc
jle
xchg
lock
call
pop
and
add
and
mov
push
ja
call
add
inc
out
mov
shrb
insl
jle
int3
push
cmp
add
dec
out
push
jo
incl
or
push
mov
scas
or
negl
fsubs
add
mov
pop
add
push
and
jne
scas
popa
lds
adc
xlat
add
test
or
add
lods
jg
cltd
mov
add
cld
mov
add
add
jnp
incb
incl
std
jnp
ds
add
jae
add
mov
mov
add
dec
flds
lcall
addl
jle
add
loop
push
sbb
xchg
pop
xor
lods
add
pop
add
cmp
or
cmp
lret
gs
add
in
or
mov
fsubrl
imul
out
and
sub
js
or
and
std
xor
push
arpl
loop
test
jp
add
add
fcompl
and
mov
or
rep
xchg
add
add
in
shrb
xorb
mov
jecxz
repz
insb
fdiv
mov
xor
adc
filds
add
cmpsl
stos
movsb
and
jg
jmp
add
add
inc
adc
pop
pop
and
add
add
daa
loope
pop
jecxz
stos
mov
and
outsl
jmp
ds
jg
jo
pop
mov
mov
and
loop
in
add
cmp
add
xchg
jne
add
add
jle
orl
add
mov
shrl
cmp
mov
or
mov
add
stos
mov
and
in
lea
add
in
and
mov
ret
xchg
jl
jae
add
mov
iret
xor
add
sbb
add
mov
bound
mov
add
es
inc
jl
mov
mov
inc
shrb
in
add
incl
arpl
in
cmp
cli
or
aaa
and
stos
and
sbb
stc
add
add
or
add
jle
push
mov
add
inc
bound
fsubrp
cmp
incl
iret
fwait
cli
sbb
xorb
add
fucom
leave
test
add
add
sub
add
iret
add
add
mov
jae
das
pop
sbb
out
or
add
arpl
incb
aad
adc
mov
add
add
inc
adc
or
xor
or
add
xchg
roll
add
out
add
pop
cltd
xchg
and
jle
jecxz
imul
push
jbe
xchg
sub
add
fbstp
clc
stos
dec
loop
bnd
add
push
and
incl
add
mov
push
add
es
jb
and
add
cli
jo
inc
and
in
jmp
xchg
cltd
sbb
add
test
and
add
add
andl
jns
inc
add
add
mov
add
add
loopne
mov
push
and
ret
mov
out
xor
je
test
and
sbb
mov
add
outsb
or
add
add
cmp
ljmp
jb
adc
jns
jp
sub
aad
sub
cld
call
in
cwtl
cmp
jns
xor
xchg
insl
std
ljmp
add
add
addb
add
and
push
add
out
and
incl
xchg
cmpsb
xor
scas
add
sarl
jecxz
add
pushf
or
ds
mov
add
and
mov
mov
cmp
cmp
push
inc
outsb
add
scas
adc
mov
add
dec
xchg
inc
add
and
add
add
push
cmp
and
push
scas
pusha
outsl
les
jl
lods
or
xlat
mov
push
and
call
mov
mov
add
popf
and
pop
mov
add
mov
sahf
sub
mov
out
push
sti
inc
add
add
leave
rorl
add
add
sbb
es
sbb
sti
pop
out
test
jg
dec
jbe
das
or
mov
add
mov
mov
or
sbb
repz
popa
inc
sarl
add
add
pop
add
push
out
dec
mov
outsb
pop
out
repnz
mov
jns
or
and
add
int
aad
xchg
jns
or
mov
das
add
add
pusha
sti
xlat
filds
mov
add
pop
out
or
xor
push
cli
pop
fs
sbb
add
cmp
mov
and
loop
and
add
dec
cmp
add
add
sahf
dec
popl
add
add
pop
xchg
sub
jle
cld
push
std
in
and
xchg
pop
fwait
mov
divb
add
in
or
shl
movb
jle
outsb
inc
xchg
incl
jmp
add
add
repz
lcall
jb
add
in
add
enter
inc
add
dec
cmp
incl
xchg
lret
incl
add
add
jo
add
inc
fcom
jle
jle
adc
movsb
adc
dec
pop
xchg
sbb
and
loope
add
add
inc
mov
jmp
mov
rorb
add
add
cld
dec
sub
ret
add
pop
cmp
lahf
cs
lock
jecxz
pop
out
stos
stos
and
and
xor
add
cmpsl
push
nop
pop
sub
add
negb
or
add
add
dec
cmp
xchg
inc
rolb
add
add
and
jno
loop
and
jno
outsl
clc
mov
aas
popf
adc
incl
and
add
call
nop
jp
mov
add
push
pop
mov
ds
pushl
push
lea
shrb
jg
lea
fs
xor
fistpl
fisubs
add
add
mov
les
add
add
add
or
add
add
cld
add
mov
pop
pushf
cld
je
push
inc
stos
or
imul
add
dec
jg
int
xchg
fcoml
add
sub
xchg
or
mov
in
shl
push
dec
inc
add
dec
mov
sarb
add
and
xorb
add
shrb
add
out
test
add
mov
sub
add
add
test
add
repz
lcall
or
add
add
mov
dec
mov
add
loop
ss
and
jl
incl
es
imul
lcall
jecxz
jecxz
sbb
fiadds
add
inc
jno
dec
add
or
incl
fdivl
add
jb
insb
lock
fidivs
loope
add
mov
out
ret
mov
xchg
add
or
inc
dec
in
ds
add
sarb
add
jle
mov
adc
je
or
mov
push
lods
sti
ficompl
sbb
lods
movsb
xchg
std
inc
or
ljmp
jle
or
and
fmull
add
inc
sub
loope
or
add
add
inc
fwait
adc
add
add
push
lods
fbld
xor
add
mov
or
xor
orb
add
repnz
mov
add
fcmovne
inc
mov
add
pop
pop
push
add
dec
mov
add
scas
xchg
int3
negb
dec
and
xor
call
pop
aad
add
add
mov
in
cwtl
mov
mov
add
clc
xor
fmull
incl
add
sub
or
add
push
push
sbb
and
popa
fimull
inc
mov
aas
inc
cmp
xor
add
sub
mov
add
je
cwtl
and
mov
add
ds
add
sub
mov
insb
push
or
roll
or
icebp
decl
mov
or
mov
ljmp
lods
mov
add
add
outsl
and
sbb
lret
pop
stc
add
xor
fs
insb
add
test
lahf
fwait
xchg
jmp
add
add
sub
mov
pop
daa
sbb
imul
out
pop
add
push
addl
in
stos
and
movsl
push
mov
push
lcall
cmc
or
add
insb
dec
xor
outsl
add
cmpsb
dec
cmp
push
add
add
push
push
jle
jnp
and
mov
add
push
xor
adc
mov
jecxz
dec
sahf
jne
push
add
call
inc
out
lret
push
rcr
ja
in
add
loop
push
scas
addr16
cmpsl
and
scas
fisubl
xor
mov
int
lret
pop
xchg
pop
jnp
mov
incl
movsb
xlat
std
lea
add
add
cmp
jecxz
in
add
ds
xchg
incl
add
and
cmp
xor
lret
jecxz
or
shlb
xor
dec
or
fidivrl
add
adc
pop
and
add
xor
adc
add
mov
bound
loope
pop
incl
add
in
dec
incl
mov
flds
add
dec
divl
mov
inc
mov
adc
pop
and
dec
add
mov
add
add
popa
mov
mov
pusha
lea
add
add
fwait
mov
dec
add
add
shl
outsb
lock
xchg
jmp
or
or
incl
add
add
lea
mov
add
stc
jl
jne,pt
dec
inc
inc
ret
push
test
add
call
bound
in
add
jbe
jnp
clc
or
aam
bound
repnz
iret
add
push
add
iret
pop
in
add
add
dec
mov
fdivrp
add
int
add
mov
add
add
xchg
outsb
jns
inc
aad
pop
inc
fiaddl
add
adc
popf
and
out
data16
add
add
jo
lret
add
and
add
lods
sbb
das
add
mov
stc
xchg
sahf
cmpsl
shlb
outsl
movsl
cmpb
mov
or
dec
add
or
pop
in
add
add
add
and
add
mov
and
incl
outsl
sbb
insb
sbb
addr16
adc
rorb
xor
mov
add
add
or
mov
pop
les
jecxz
add
clc
aam
add
add
in
mov
jmp
add
add
add
sub
sub
xlat
push
inc
push
and
andl
push
pushf
cmp
ret
scas
add
add
popf
popf
mov
aam
mov
popf
je
ret
add
test
jnp
mov
rcll
xor
add
repz
nop
add
jle
fucomip
popf
add
add
cmp
mov
nop
addr16
mov
mov
cmc
mov
sbb
cmpsb
push
pop
mov
add
xchg
lea
jle
add
xchg
incl
ljmp
popf
jp
jp
cld
add
addl
and
xchg
incl
movsl
push
pop
popl
add
add
outsb
mov
inc
mov
js
jmp
push
into
sti
jle
mov
xchg
fs
out
or
insl
jmp
aad
add
add
inc
dec
mov
add
add
cs
or
outsl
add
ds
leave
add
add
add
xchg
push
inc
insl
incl
add
add
testb
mov
loope
add
cld
mov
int3
mov
push
rcrl
in
and
add
push
cmp
outsl
add
outsl
mov
pop
mov
mov
jle
decl
add
mov
add
add
call
jp
and
add
add
push
add
loope
and
and
and
ljmp
push
lock
mov
fstps
jge
sbb
mov
and
and
mov
add
add
add
push
push
mov
call
out
sub
in
inc
mov
add
out
xchg
xchg
pop
iret
fcomip
dec
imul
add
iret
jnp
add
aad
add
xchg
jmp
mov
add
iret
insl
call
mov
incl
or
in
mov
push
jmp
add
or
jecxz
cmp
fsubrp
iret
xorb
pop
mov
and
int
sub
adc
call
dec
adc
pop
jae
out
ljmp
popf
xchg
push
mov
add
dec
pop
sub
insl
add
add
subl
add
lods
pop
insb
dec
je
jge
xchg
pop
adc
pop
mov
iret
dec
in
add
push
add
add
add
xchg
push
inc
add
add
sahf
fisubs
add
test
and
sub
or
mov
add
in
aam
xlat
add
ss
mull
and
or
add
lods
sub
and
or
addl
outsl
mov
xor
and
add
out
lcall
adc
popf
dec
add
inc
mov
add
and
pop
data16
add
and
jg
and
push
pop
and
iretw
mov
and
pop
mov
add
jle
mov
inc
add
mov
jo
ficoml
add
add
add
test
inc
dec
add
movsl
rorb
ficompl
push
iret
stc
les
loope
add
push
add
jb
mov
add
mov
std
add
add
or
inc
add
cltd
mov
int3
add
loope
jmp
imul
add
out
mov
incb
cld
mov
add
insl
pop
push
sti
pop
mov
mov
mov
adcl
mov
or
cmp
and
loop,pt
add
repz
add
fdivrl
jp
dec
lds
adc
lea
inc
dec
in
int3
add
lds
dec
mov
outsl
in
test
jae
loop
decl
sub
adc
add
incl
add
jns
add
add
int
and
adc
push
inc
and
out
repnz
stc
call
jecxz
inc
js
scas
out
and
add
shll
loope
in
jo
mov
mov
mov
pop
add
test
xor
inc
push
cmp
add
pop
xchg
sub
inc
adc
pushf
adc
insl
add
add
add
jmp
add
jg
add
jecxz
add
lahf
mov
add
js
add
or
pop
push
xchg
cmp
cmp
add
add
jl
sub
and
push
incl
mov
add
fwait
push
pop
push
push
sahf
xchg
add
or
stos
jb
add
jecxz
or
add
incl
sbbl
xlat
shr
dec
add
add
mov
sub
outsl
popf
addr16
sub
add
movsl
cltd
out
lret
pop
xchg
add
add
xorb
add
add
popf
mov
inc
or
test
lret
mov
xchg
push
inc
push
inc
jle
mov
call
add
in
add
out
push
add
mov
add
and
and
cmp
das
add
lcall
ljmp
sub
pop
dec
dec
call
add
js
xchg
cmp
out
mov
test
add
adc
push
sbb
incl
call
pop
and
mov
xchg
insl
sbb
addr16
loope
add
mov
pushf
inc
data16
add
out
jl
std
lock
add
or
mov
ret
add
add
and
js
in
sub
pop
push
sub
lods
test
pushl
add
pushw
xor
mov
mov
cmpsb
inc
or
jecxz
lock
aam
pusha
add
call
add
aad
mov
mov
inc
add
add
mov
add
sub
add
push
add
jecxz
in
pop
cli
loop
add
add
mov
or
inc
cmp
or
add
ljmp
outsl
je
jae
ja
outsb
gs
push
jne
popa
outsl
js
jo
push
in
sub
add
push
mov
repz
repnz
mov
add
pushf
mov
repz
mov
ret
add
das
add
inc
adc
cmpsb
add
call
orb
add
dec
jecxz
cmpl
add
add
and
sarl
and
sbb
jle
repz
sarb
add
add
popa
add
mov
or
add
add
add
add
sub
jecxz
fs
push
jle
pop
xor
add
mov
scas
jb
push
out
and
or
and
ret
add
add
add
xor
jecxz
call
fisubrs
pop
movl
shrb
xchg
loopne
stos
arpl
orb
mov
add
add
and
gs
bound
add
daa
dec
mov
add
add
sahf
xor
jnp
add
add
in
dec
imul
add
repnz
add
mov
push
add
call
add
add
std
jno
mov
mov
add
add
pop
or
mov
add
mov
push
arpl
popa
add
mov
add
in
ds
add
add
ret
inc
add
out
jecxz
add
add
add
lods
add
add
or
or
ret
test
test
dec
and
add
push
cmc
loope
loope
add
sub
jne,pt
in
add
add
ds
mov
mov
mov
dec
xchg
out
jmp
scas
and
int3
or
out
dec
jge
testl
push
jg
add
in
insl
rdpmc
imul
and
jle
add
add
and
and
xchg
movsb
and
out
enter
mov
fcomi
les
roll
incl
add
pop
adcl
fidivrs
add
repz
jp
ds
incl
cmc
or
pop
inc
adc
add
ljmp
sub
jo
pushl
mov
sub
fsubrs
add
add
push
mov
inc
push
add
addr16
add
fprem
testb
jnp
jae
push
mov
ss
cld
add
add
cmpsl
mov
cwtl
or
out
push
hlt
in
cmp
add
add
mov
and
lods
jecxz,pt
or
in
xor
add
jle
or
xchg
and
in
mov
orb
jno
mov
jecxz
bnd
sar
or
mov
inc
inc
gs
dec
or
add
mov
add
xor
push
push
push
add
and
int3
orl
pop
enter
mov
add
push
jmp
out
clc
roll
add
jecxz
add
test
add
out
scas
jne
dec
add
dec
mov
stos
iret
adc
mov
xor
add
incl
add
mov
or
mov
add
or
inc
neg
int
add
add
sbb
inc
sahf
mov
stos
xor
sub
dec
dec
add
and
lret
bound
add
fs
mov
andl
add
out
push
adc
pop
and
fimuls
outsl
jnp
jbe
jle
dec
into
mov
add
outsl
add
dec
test
add
pop
mov
add
pop
add
cli
adc
cld
divb
call
xchg
xchg
incb
ds
xchg
cld
pushl
add
push
add
push
mov
jle
loop
add
add
xchg
jmp
jnp
bswap
jle
insb
mov
subb
jecxz
add
mov
mov
lret
add
add
add
push
add
pop
out
add
cmp
fisttpl
shlb
call
ret
mov
add
pop
je
pop
or
add
or
cmpsl
push
enter
and
inc
adc
mov
and
ret
and
fildl
add
and
mov
cmp
into
push
add
add
repnz
mov
aam
push
sub
loop
add
xor
add
add
mov
mov
loop
mov
mov
enter
dec
jmp
rolb
jl
dec
in
les
js
and
mov
sbb
sub
outsl
jg
out
fidivrs
mov
jmp
inc
pop
stos
mov
add
add
icebp
loope
or
lahf
sub
jbe
jg
mov
add
aaa
out
mov
add
xchg
adc
fsubr
das
call
std
arpl
ljmp
divl
add
add
in
jmp
ss
aam
add
or
inc
cmp
mov
jecxz
mov
pusha
adc
cmp
stc
push
loop
add
add
loop
or
movsb
cmp
add
sub
add
and
nop
imul
in
cltd
fbld
out
addr16
pop
std
jmp
mov
pop
add
jle
das
dec
gs
mov
or
ffreep
push
adc
sbb
add
ds
add
mov
fldl
add
mov
add
jbe
out
add
lock
adc
in
jae
jne
add
push
push
add
add
or
and
stos
sbb
mov
add
add
int3
cmpsl
add
mov
test
xchg
sub
mov
jmp
add
jmp
jle
decl
add
ret
xchg
dec
adc
add
mov
add
add
mov
add
mov
aas
jb
jecxz
add
jle
xchg
adc
add
jle
test
inc
or
add
daa
mov
mov
mov
xor
add
loope
add
add
inc
stos
push
push
cwtl
bound
push
subl
push
add
loop
add
jno
cmp
mov
mov
and
cmp
add
std
repnz
mov
mov
das
shll
add
pop
loope
dec
and
mov
les
push
xor
add
add
or
loop
push
inc
in
inc
fsub
add
or
pop
lret
jecxz
fnstenv
test
add
push
add
inc
xlat
add
int3
and
add
or
movb
and
jns
mov
push
call
loopne
fildl
fwait
in
aas
das
pop
ss
mov
out
lcall
add
lods
add
add
add
das
and
add
add
mov
add
nop
js
rcl
sub
mov
sbb
incl
outsl
mov
xchg
out
int
jmp
loop
add
add
jp
add
xchg
out
add
ja
sub
xchg
aam
pop
sub
add
mov
popa
sti
pusha
or
jno,pt
add
jecxz
addl
outsb
sbb
add
xor
add
decl
dec
add
push
scas
icebp
cmovle
add
pushl
jbe
add
cmpsb
mov
cmp
sbb
ret
add
lret
stc
adc
add
push
jbe
push
xor
incl
clc
clc
mov
and
mov
sbb
add
mov
dec
xchg
ja
pop
call
cmp
shlb
add
loope
aas
ret
push
jge
outsl
add
add
call
outsb
icebp
pop
mov
add
lret
and
adc
jle
add
mov
incl
and
add
xlat
cli
es
les
mov
in
xor
add
jge
sahf
push
add
rcrl
push
scas
add
repz
iret
fnstsw
incl
cs
mov
add
add
xlat
repz
add
hlt
jns
lahf
add
mov
dec
pop
imul
lcall
jg
lea
mov
sarl
add
pusha
mov
jmp
and
mov
pushl
mov
jg
pushl
pushf
mov
push
xchg
addr16
movsb
in
sti
in
cltd
out
push
jle
mov
ja
mov
add
add
mov
xor
add
ja
adc
xchg
add
and
inc
sub
add
int
or
imul
add
arpl
xchg
mov
les
add
pop
es
and
pop
rcr
xchg
or
add
call
add
enter
jp
add
add
mov
outsl
xor
stos
addr16
add
add
sub
icebp
jp
mov
add
addl
sbbb
add
add
pushl
jp
lock
in
and
fisttpll
xchg
in
sub
outsb
loop
and
hlt
add
mov
test
add
adc
sbb
add
add
das
xchg
sub
adc
or
push
inc
sub
add
add
test
call
inc
cld
and
shrl
and
jbe
dec
incl
xchg
mov
cmpsl
add
add
xchg
mov
add
std
ret
lods
pop
add
and
add
pop
xchg
add
inc
gs
arpl
add
and
lods
dec
out
ss
addl
and
outsl
adc
add
daa
add
ljmp
cli
pop
rcl
mov
and
adc
ljmp
outsb
gs
arpl
jne
popa
ja
and
test
sub
lret
mov
dec
add
add
and
mov
add
add
fldl
das
pop
jle
mov
in
out
mov
cmp
sub
add
ret
in
popf
add
cmp
loop
and
enter
call
dec
and
pop
add
call
pop
add
add
clc
xor
pop
or
push
push
xor
mov
add
adc
add
pop
aad
cltd
fldl
add
dec
repz
and
add
add
jg
add
and
and
sub
and
mov
dec
lods
dec
loop
adc
pop
imul
jmp
add
das
jg
dec
les
lret
outsb
add
ds
inc
dec
aas
add
mov
add
ds
out
and
and
das
sub
mov
fucomi
fwait
sbb
add
ret
sarb
adc
outsb
add
jle
mov
arpl
dec
add
add
add
xor
sub
outsl
add
or
jp
in
add
or
add
mov
lret
and
cwtl
cwtl
xor
incl
std
push
adc
add
add
addr16
aad
add
add
loope
push
push
xchg
jle
jp
repz
dec
and
das
xor
pusha
jno
add
call
adc
jmp
push
add
add
out
gs
mov
call
cmpsb
addl
adc
mov
pop
jle
or
xchg
adc
mov
orl
add
movsb
xchg
mov
add
mov
dec
and
xor
add
add
stos
outsl
adc
in
je
push
iret
add
lcall
and
cmp
add
add
add
mov
add
jmp
mov
outsb
jmp
enter
mov
inc
leave
add
mov
cmc
push
inc
sbb
movsb
jge
or
loop
out
add
push
add
pop
fcmovbe
inc
les
outsl
cmp
add
add
pop
aaa
je
xchg
add
add
lea
lods
mov
ficompl
adc
mov
push
jecxz
or
mov
outsl
imul
mov
or
add
in
add
xor
mov
add
jnp
push
adc
sahf
jp
add
outsl
inc
push
insb
dec
and
dec
sub
and
xor
add
xchg
xchg
and
add
add
push
gs
pop
add
push
lock
repz
dec
ret
popf
in
xchg
es
out
scas
or
jg
call
cmp
lods
ljmp
xchg
pusha
stos
std
sbb
and
sbb
in
cmp
inc
mov
add
add
mov
loope
aam
xor
add
and
lret
add
or
incl
fadds
add
lea
mov
add
jecxz
scas
xchg
out
test
xlat
ret
add
mov
test
jnp
or
idivb
add
xor
popf
xor
or
dec
add
add
and
inc
add
xchg
add
cmp
test
jp
ljmp
sbb
imul
add
fidivrl
add
jne
add
movsl
daa
sub
stc
das
jecxz
add
repnz
sbb
jle
movsb
push
add
outsl
mov
add
shlb
add
incl
incl
jns
stc
jl
insl
cld
pop
add
or
or
dec
mov
fisubrs
add
add
add
shl
jmp
xor
and
and
les
mov
mov
mov
adc
ds
jmp
xor
repnz
push
xchg
in
inc
pop
add
mov
incl
out
cs
incl
add
xchg
and
add
add
pop
jle
xchg
cmpsl
mov
add
or
jae
push
add
incl
out
mov
pop
fdivrl
enter
lret
sbb
inc
decl
lcall
or
shl
bound
int3
add
lret
push
jb
outsl
push
add
add
jmp
add
decl
jecxz
fdivs
sbb
and
jnp
and
add
scas
lahf
add
fimull
push
dec
add
outsl
loope
jg
push
das
and
imul
in
add
pop
subb
add
mov
adc
loope
imul
ds
xor
les
pop
cmc
adc
and
movsb
sbb
add
mov
inc
add
and
jle
and
in
popl
decl
add
sub
in
push
and
sub
mull
add
add
decl
lock
add
out
das
add
or
add
and
loope
or
lods
sahf
mov
cli
mov
gs
and
sub
lods
dec
add
sub
or
add
mov
lret
jno
add
push
lcall
or
incl
gs
adc
push
pop
inc
xorb
adc
loop
test
mov
mov
cmp
add
push
add
inc
sub
das
add
cmp
add
add
mov
jg
add
loop
or
and
loopne
sbb
data16
pop
jmp
mov
add
push
nop
push
scas
movsl
mov
add
or
add
or
sub
inc
add
or
mov
inc
pop
dec
inc
jp
pushl
sbb
in
loop
add
call
dec
mov
das
sbb
mov
fldl
add
mull
mov
lcall
add
outsl
nop
mov
and
or
insl
inc
mov
jg
movsl
jo
mov
add
cmp
in
jg
dec
adc
aas
dec
inc
xchg
or
add
add
add
das
dec
xchg
add
leave
ret
add
mov
loop
sahf
arpl
aaa
and
or
call
or
pusha
cmp
pushf
add
add
and
pusha
stc
das
pop
mov
mov
and
add
repnz
add
or
or
or
add
add
loop
cwtl
mov
add
add
xor
mov
add
dec
push
rcrl
add
and
add
add
loop
add
pop
push
jbe
jae
sahf
cmp
add
add
mov
stos
dec
add
jns
ss
outsl
test
xchg
cmp
stc
xchg
xchg
add
add
jo
cli
push
add
in
jmp
out
xchg
mov
add
cmpl
adc
or
dec
xor
xchg
add
add
ds
add
mov
cmpsl
orl
add
xor
pop
jp
xchg
add
xchg
jbe
add
pushf
test
add
pop
mov
xor
push
push
sbb
leave
mov
incl
out
in
sub
repnz
add
cld
adc
out
mov
roll
add
js
adc
add
add
or
pop
movsb
and
js
stos
sbb
add
arpl
sub
dec
das
add
scas
shl
dec
loop
add
cli
lea
outsl
add
add
jne
add
sub
ja
add
loope
or
inc
xchg
adc
add
mov
mov
push
dec
add
add
loop
addl
add
add
arpl
ss
pushf
push
dec
mov
test
and
pop
test
pop
les
or
dec
and
subb
pop
sahf
or
add
lods
rorl
and
push
icebp
dec
inc
mov
and
jecxz
rclb
mov
je
xor
jbe
mulb
or
jg
mov
jg
jecxz
decb
and
dec
stc
add
cmp
or
add
in
movsb
xchg
pop
mov
lret
dec
addl
adc
roll
add
lds
incl
add
add
addr16
mov
loop
cld
ds
add
or
mov
loop
add
adc
ss
pop
xor
add
into
jp
push
loope
mov
or
add
pop
cmp
cmc
mov
shll
add
add
add
and
out
pop
scas
pshufw
mov
scas
gs
sub
inc
add
mov
add
cmpsb
fcmovu
ret
mov
add
jns
adc
dec
add
test
and
add
add
and
cmpsl
mov
add
sub
push
mov
fildll
jno
push
movsb
and
mov
mov
imul
add
jecxz
add
scas
fisubs
jle
mov
add
mov
in
mov
add
fwait
imul
cmpsb
and
cmp
xor
add
cmp
call
sub
loopne
and
jg
aas
loope
repz
add
add
add
add
pop
ret
test
push
xchg
rcr
jge
int
and
cmc
pushf
jg
sbb
imul
mov
adc
frstor
add
add
sbb
mov
xchg
mov
add
add
hlt
mov
add
add
stos
sub
jae
xor
mov
sbb
xor
or
movsl
out
call
add
out
xchg
fldenv
add
pop
jbe
das
add
add
jl
or
jecxz
pushf
pop
dec
test
add
aaa
mov
loop
add
mov
add
pop
ds
outsb
pop
add
inc
pop
and
cmpsl
add
and
add
lds
lcall
stc
sub
xchg
out
sbb
in
lods
mov
sbb
add
lret
shlb
inc
jmp
add
dec
xchg
out
jge
movsb
inc
add
call
sahf
xchg
xchg
add
add
out
add
scas
and
mov
and
stos
add
scas
lods
jno
and
outsl
or
and
mov
and
les
add
add
xchg
incl
cmpl
cwtl
call
incl
in
outsl
popf
lcall
jae
imul
addr16
jae
jo
jae
jne
inc
cmp
add
add
out
sti
fs
dec
jecxz
testb
stos
mov
stc
test
mov
mov
leave
clc
xchg
loop
loop
add
jl
les
mov
and
imul
add
dec
xchg
lret
lds
mov
sbb
shrl
push
xchg
push
and
imul
jns
add
add
add
adc
lods
sub
add
gs
incl
add
mov
add
incl
add
or
test
iret
mov
ret
fmul
inc
clc
les
cltd
mov
add
and
add
das
add
inc
in
add
add
add
mov
sbb
add
xor
add
mov
icebp
add
add
sbb
call
cmp
cmpsl
imul
cs
and
inc
and
add
dec
outsl
inc
xchg
xor
add
movsl
dec
inc
and
add
repz
adc
push
ficomps
add
mov
jbe
adc
dec
loop
jne
push
mov
add
insl
ret
add
xor
add
add
pop
push
push
pop
cli
int
add
cltd
mov
add
and
das
xchg
test
jle
pop
aam
dec
out
or
lret
rorl
je
sbb
add
pop
and
and
add
xchg
mov
mov
xchg
movsl
add
decl
mov
jg
push
cld
in
xchg
mov
lea
mov
mov
in
out
loopne
xlat
push
movl
and
sbb
add
add
and
jg
add
jle
adc
mov
jg
jle
add
dec
loope
sbb
repnz
xchg
inc
sub
mov
popf
addr16
leave
cmpsb
subl
insb
add
add
add
int3
decl
mov
add
add
das
shll
add
mov
add
xor
mov
add
mov
add
add
add
and
pop
mov
mov
add
add
cs
mov
out
add
pop
loop
dec
sub
mov
outsl
adc
and
xchg
add
inc
xchg
push
cmp
fsts
sbb
add
inc
fnstsw
or
mov
jge
pop
jecxz
and
ja
pop
incb
mov
pop
mov
or
cmp
push
lods
or
pop
lds
mov
dec
sbb
push
add
sub
addl
or
and
add
subb
pop
ljmp
hlt
lods
pop
insb
add
arpl
jle
bound
dec
addr16
xor
mov
inc
out
adc
add
mov
and
add
lock
add
arpl
lcall
inc
xchg
jp
divl
in
mov
xchg
or
sbb
lods
or
cli
inc
out
add
jg
pop
ss
fisttps
add
lods
jae
jns
and
mov
movsl
loope
add
add
in
shlb
push
mov
aas
in
inc
fwait
push
add
stc
in
sti
and
lods
outsl
add
add
push
and
jecxz
jecxz
or
fiadds
lcall
add
add
popf
mov
add
mov
xor
mov
ret
jmp
mov
add
addl
incl
add
add
add
lcall
xchg
xchg
std
std
add
sub
incl
xchg
cmpsl
jmp
icebp
shlb
inc
add
loop
mov
cmp
mov
cltd
ret
loope
add
and
xchg
hlt
loop
add
xchg
push
add
or
dec
jmp
fsubrs
jns
add
loope
jns
outsl
add
add
xchg
dec
in
sbb
push
lds
incl
push
add
mov
add
mov
cmpsl
pop
add
enter
enter
sub
jle
faddl
incl
mov
mov
push
add
cmp
add
in
or
sub
dec
stos
jns
outsl
loop
mov
and
cmpsl
loope
jle
aad
or
loop
adc
loope
and
scas
es
adc
jecxz
les
mov
add
cld
or
cmp
add
mov
mov
adc
jbe
call
or
mov
mov
jp
rcll
aad
jmp
mov
orl
add
stc
inc
jmp
aaa
xchg
add
mov
add
aad
pop
inc
add
in
and
outsl
inc
or
jb
pop
incl
add
adc
add
add
pop
jp
idivb
test
xchg
sbb
in
push
mov
cld
fadds
jns
mov
push
cltd
xchg
in
loop
add
xchg
popa
jmp
out
sbb
add
repz
incl
push
xor
xchg
and
add
addl
lret
adc
mov
add
pop
cmpsl
push
add
push
lcall
mov
add
stos
ret
loope
add
arpl
cltd
add
add
add
mov
add
test
icebp
aam
and
gs
stos
arpl
xchg
rorl
pop
xchg
push
inc
loop
sub
decl
add
and
jle
jle
cltd
orl
dec
add
and
xor
ss
add
adc
cli
push
xor
orl
and
add
add
xchg
add
jb
push
insl
jecxz
jecxz
repnz
mov
add
daa
push
data16
add
add
or
push
shll
mov
xchg
mov
into
lahf
pop
das
add
mov
out
pop
add
xchg
fimuls
rolb
add
adc
add
add
add
inc
sbb
sub
pushl
faddl
mov
adc
add
mov
ja
add
add
test
mov
loope
loop
adc
jle
dec
les
bound
and
aam
adc
in
and
fwait
lock
and
push
inc
shr
and
pop
mov
incl
add
outsl
cld
add
and
call
bound
inc
add
mov
mov
bound
ret
xor
add
add
repz
jb
jecxz
mov
outsb
test
mov
iret
mul
jg
jg
jb
pop
add
cld
out
call
lea
add
out
jnp
mov
cmp
in
add
jle
mov
mov
add
add
in
jg
and
arpl
js
icebp
add
add
and
pop
jecxz
lret
fsubrs
in
rcr
add
incl
jbe
push
add
jmp
push
xor
xor
gs
fs
incl
repz
sahf
or
loop
push
push
sub
jmp
add
add
inc
mov
or
add
dec
mov
add
insl
filds
insb
aas
or
in
in
aaa
lahf
loop
add
data16
mov
imul
incl
add
and
add
and
dec
or
jg
add
fsubrl
fmuls
inc
add
or
negl
push
mov
loope
in
inc
stos
scas
cmp
jecxz
sbb
xor
and
dec
call
add
shll
jle
loope
add
xchg
jge
mov
dec
dec
int
test
enter
out
add
or
add
add
pop
mov
add
mov
test
clc
mov
sbb
pop
add
add
and
sbb
and
jg
add
test
movsl
sub
and
dec
lds
jp
decl
push
sbb
add
incl
outsb
stos
call
add
and
sbb
jb
and
fstpl
js
add
add
push
dec
inc
pop
int3
pop
cmp
add
add
cwtl
orl
jecxz
xchg
push
push
add
or
fidivrs
or
sbb
loop
mov
es
and
add
das
or
cld
sti
add
mov
roll
jmp
add
addl
xchg
dec
sbb
sbb
pop
mov
add
add
add
loope
xor
push
movsb
and
out
cmp
add
out
adc
add
lods
and
push
fwait
mov
or
inc
xor
add
test
faddl
and
add
add
mov
cmp
decl
mov
add
aas
dec
adc
mulb
cld
jle
sbb
test
loop
cmpsb
or
dec
add
cltd
jnp
add
js
sbb
incl
jb
jae
xor
cli
es
popf
xchg
std
add
ds
call
pop
cmp
pop
xor
add
add
sub
test
add
loopne
popa
xchg
add
in
and
add
mov
add
add
cmpsl
push
mov
add
or
add
adc
xchg
add
add
orl
dec
jnp
mov
inc
dec
adc
pop
xchg
stos
add
add
inc
mov
jecxz
add
pushf
pop
fs
add
and
or
mov
cmpsl
inc
add
incl
shlb
jg
fldt
xchg
jg
leave
add
pop
xlat
cmpsb
stos
mov
out
or
jae
and
mov
add
add
stc
adc
lcall
testb
outsl
add
loopne
sub
loop
fcoml
enter
andl
insb
add
add
out
mov
add
lods
xlat
repnz
or
mov
sahf
add
add
popa
jecxz
cmp
mov
adc
sub
sbb
mov
leave
cmp
add
dec
cli
and
and
lods
cltd
add
add
or
loopne
mov
add
add
stos
lret
jle
int
xor
pop
xchg
arpl
pop
push
adc
add
mov
add
add
add
into
aam
push
xchg
incl
loope
loopne
mov
incl
xchg
fs
lret
jle
xlat
pop
push
clc
inc
jge
pop
lods
pop
loopne
or
enter
push
les
lods
mov
add
mov
data16
jle
icebp
mov
outsl
add
dec
aaa
leave
stc
jnp
add
or
lock
adc
sub
mov
in
lret
xorb
jmp
xchg
lahf
fadds
add
add
dec
add
xor
sbb
mov
add
pushl
xor
add
in
lret
pop
outsl
mov
mull
and
ss
insb
add
jns
xchg
sbbl
inc
mov
mov
push
nop
add
jg
add
imul
and
or
inc
add
cmpl
jecxz
pop
das
cs
sarb
incl
cwtl
inc
inc
push
mov
add
scas
adc
add
cmp
sahf
mov
add
add
mov
je
cltd
fldcw
inc
add
cmp
and
mov
aaa
sbbl
xchg
popa
mov
add
cmpsl
add
push
mov
dec
popf
xchg
enter
add
add
das
jae
in
stc
out
add
add
mov
outsl
add
dec
mov
xchg
push
xchg
add
mov
cmpsl
imul
jp
jmp
std
bound
add
jl
add
add
adc
lret
nop
mov
add
fcmovu
in
add
bswap
inc
sti
in
add
push
mov
add
incl
add
add
add
inc
cld
or
add
fsubrl
push
and
push
and
shl
jbe
pop
add
cmp
das
add
jno
mov
sub
inc
add
add
mov
decl
out
out
les
clc
add
and
adc
add
push
vunpckhps
sbb
ret
enter
add
mov
mov
add
mov
aaa
jno
add
daa
or
add
add
mov
add
push
jbe
add
push
push
lahf
dec
push
loop
adc
push
jbe
outsl
push
inc
cld
int3
sahf
incl
or
rcrb
add
mov
add
jmp
data16
ljmp
add
add
add
fistpll
fisttpl
xor
rolb
loope
jg
fldenv
loop
or
sub
sub
add
add
repz
aaa
out
rcll
add
aad
dec
out
aaa
pop
mov
adc
mov
inc
jl
outsb
push
add
mov
mov
stos
cmp
mov
lahf
out
add
add
sub
xchg
scas
dec
test
add
or
add
enter
sub
mov
mov
adcb
and
or
adc
adc
and
int3
ret
loope
add
add
inc
pop
mov
and
sbb
clc
sub
push
loopne
cli
out
and
push
popf
jb
mov
stos
fcompl
and
mov
jle
jmp
fnsave
xchg
xchg
incl
and
and
in
mov
add
add
mov
sub
push
incl
loop
or
and
pop
movsb
mov
add
cmp
cmpb
jmp
add
add
mov
add
add
dec
fcomi
shll
add
stos
sbb
dec
fdivrp
ljmp
shll
call
dec
pop
mov
mov
add
and
inc
cmpsb
mov
add
test
nop
add
loope
les
push
in
add
add
jg
sbb
jecxz
push
shlb
inc
mov
add
sahf
xchg
cld
cltd
jns
add
jnp
in
jnp
sub
add
imul
jmp
xchg
add
filds
adc
add
mov
xchg
add
or
add
jo
push
cmp
add
add
jbe
pop
data16
add
add
cmpb
jno
add
cmp
das
xchg
add
lahf
sti
lcall
filds
dec
add
adc
add
sub
add
add
into
mov
popf
lret
push
add
add
in
vfrczps
mov
mov
int3
sbb
sbb
ds
mov
add
mov
lret
addb
add
add
or
imul
pusha
es
push
jne
xor
add
mov
xchg
or
pop
sub
lcall
or
adcl
inc
mov
or
cmc
inc
dec
pusha
outsl
lock
add
incl
fs
popa
add
jne
lcall
outsl
ljmp
out
jb
testl
das
xchg
mov
inc
or
or
imul
add
add
sub
mov
dec
add
leave
push
cmp
into
bnd
jp
add
jmp
push
xor
pushf
cmc
pop
add
ds
ss
add
sbb
jnp
mov
jle
add
fistpl
add
divl
pusha
add
push
pop
adc
dec
or
sahf
jbe
mov
and
in
add
jbe
scas
mov
test
mov
incl
jecxz
add
mov
add
fwait
cs
arpl
and
rcl
xchg
or
fadds
push
jne
jmp
dec
xchg
add
and
in
add
incl
pushl
push
addl
pop
pop
and
dec
and
jbe
incl
add
jl
xor
into
les
dec
add
add
and
loop
push
add
add
inc
jbe
xlat
pop
jmp
addr16
add
mov
add
xor
jb
add
add
test
out
mov
das
sub
add
xlat
add
xor
add
ss
xchg
add
add
or
inc
mov
and
mov
pop
incl
add
das
aam
pushf
inc
stos
rcrb
jecxz
insl
cmovnp
loope
cli
pop
cli
pop
hlt
out
mov
push
jg
add
pop
imul
add
mov
add
inc
xchg
add
mov
pop
mov
sbb
add
in
add
add
orl
cltd
mov
faddl
push
xor
push
mov
and
or
cmp
add
mov
jmp
jle
mov
repz
mov
loopne
insb
jns
ds
repz
add
add
ret
pusha
lret
inc
int
repz
mov
mov
bound
loope
xchg
mov
in
or
jae
incl
jecxz
cmp
mov
into
je
jnp
sarb
imul
les
incl
lock
and
lods
addb
out
notl
leave
add
sti
call
incl
pop
les
mov
out
push
je
adc
movsl
and
push
add
fdivl
test
or
add
test
mov
cmp
add
sbb
mov
stos
and
outsl
movsb
mull
xchg
aad
fsts
aam
loope
add
mov
dec
inc
dec
xchg
arpl
and
cwtl
cmp
and
in
mov
add
cli
mov
and
test
fwait
int
and
inc
testl
push
add
ljmp
add
add
fldcw
loop
jno
add
push
lret
data16
out
mov
adcl
inc
and
bound
adcl
cs
loopne
add
mov
stos
and
fsub
ljmp
add
jno
ds
inc
cmp
add
in
data16
lcall
add
jmp
std
sbb
incl
add
add
call
lds
sub
pop
push
cmpsb
jbe
inc
jecxz
repnz
arpl
add
mov
in
pop
loop
cmp
mov
add
jecxz
sub
add
jg
insb
icebp
push
add
add
jl
fwait
sbbb
aad
and
in
xor
xchg
dec
add
lock
add
jecxz
lds
icebp
rolb
jg
dec
xor
out
and
add
in
or
mov
or
scas
imul
add
lret
into
pop
and
lds
out
incl
mov
in
inc
add
add
rolb
add
add
add
repz
add
and
or
stos
sub
sbb
icebp
shl
jle
sub
imulb
dec
mov
sbb
mov
add
mov
and
faddl
add
add
add
add
outsl
sub
add
adc
adc
and
add
insb
mov
jl
imul
and
imul
add
xchg
xchg
add
or
add
add
add
adc
mov
call
mov
andb
jb
mov
fisubrl
imul
add
dec
bound
cmpl
jnp
add
mov
sahf
or
leave
push
pop
das
add
es
int
add
jmp
mov
push
push
add
add
pop
push
add
add
xchg
mov
sbb
inc
repz
add
or
add
or
mov
xchg
out
ss
add
ret
js
add
imul
add
loope
gs
add
out
push
mov
into
popl
les
xchg
and
add
mov
or
add
add
neg
mov
adc
add
inc
mov
out
std
mov
jmp
add
push
jl
loop
and
subl
add
push
mov
and
sub
add
movsl
bound
add
or
dec
fwait
mov
add
in
divl
push
insb
outsl
lcall
add
add
sub
mov
and
addl
int
mov
jle
dec
mov
nop
ror
xchg
mov
push
mov
jg
adc
mov
loope
cli
imul
add
and
fs
dec
add
add
sub
xchg
pop
jae
add
jmp
jbe
pop
shrb
pop
js
das
push
in
out
shll
or
and
int3
jmp
inc
add
sbb
outsb
push
pop
loope
sbbl
add
add
jmp
mov
add
add
je
cmpsl
cltd
push
divb
fwait
lret
add
jp
or
and
dec
add
add
ds
inc
jne
add
ljmp
icebp
daa
fidivrs
add
in
jecxz
or
frstor
sub
in
mov
add
xchg
mov
cwtl
call
push
add
sti
in
sti
aaa
loop
add
or
pop
test
push
andl
or
add
in
mov
loop
frstor
loope
add
xchg
imul
pop
add
and
jg
cmp
add
in
dec
imul
dec
mov
ljmp
pop
dec
mov
imul
je
jae
arpl
outsl
arpl
dec
add
adc
xor
push
or
xor
lds
xor
shlb
inc
add
lcall
out
jecxz
pushf
out
out
leave
add
inc
lods
movsl
std
in
add
fsubp
inc
pop
int
add
dec
add
mov
add
add
cmp
imul
mov
pusha
loopne
xor
add
loope
test
aam
jecxz
movsl
xlat
ss
jle
addl
lret
add
add
movsb
test
mov
jg
and
add
daa
cmp
clc
mov
inc
add
add
lods
cmp
in
fdivrs
add
add
add
inc
inc
pop
sbb
add
dec
icebp
fmull
adc
es
or
add
ja
mov
inc
lret
add
add
add
jle
add
add
inc
xor
add
loop
add
add
mov
lods
addb
add
mov
lods
jno
xchg
xchg
jmp
push
dec
rorl
ljmp
jecxz
jnp
inc
ljmp
sbb
fimull
sub
das
mov
push
jp
or
cmc
fdivs
mov
lret
mov
cwtl
ja
dec
add
decl
xor
dec
add
dec
lds
fisttps
add
add
inc
or
mov
test
fwait
mov
add
out
cmp
add
add
push
inc
inc
test
or
add
sbb
add
inc
push
les
in
mov
ret
xchg
push
daa
jle
jp
pop
cltd
and
add
cld
addl
fistpll
add
scas
mov
mov
xchg
pushf
add
add
lret
cmpsl
sub
jle
mov
lret
fcoms
add
in
push
enter
in
outsl
xchg
lcall
mov
dec
cmpsl
sbb
add
mov
mov
add
add
sahf
push
fmuls
xchg
inc
push
out
jle
sbb
add
lret
jg
add
add
addl
xchg
add
mov
aam
inc
js
add
je
inc
inc
and
popa
dec
and
les
inc
pop
fdivl
add
movsb
ficoms
add
or
dec
aaa
arpl
add
and
jb
icebp
jg
jecxz
ret
add
jg
mov
jecxz
add
pop
add
xor
add
iret
int3
les
add
loope
sub
add
add
sub
pop
rol
add
jae
jo
divl
push
cmpsb
rclb
cmp
xor
out
add
cmp
jb
dec
jnp
addl
flds
jecxz
ds
jle
add
repnz
add
dec
lock
rolb
enter
inc
out
push
ds
add
jae
cli
dec
test
jecxz
add
sub
cmp
add
add
pusha
add
push
and
and
inc
add
add
clc
stc
pusha
outsl
add
and
pop
js
lds
xor
aas
add
sbb
mov
and
add
pop
testb
pushl
je
addr16
popa
imul
imul
jbe
jbe
bound
add
jp
fwait
pushl
jmp
aaa
subl
cmpsl
xchg
add
cmp
sbb
ja
pusha
repz
ldmxcsr
mov
andl
push
push
bound
loop
add
xchg
dec
add
add
lret
sub
mov
or
add
dec
or
jle
add
mov
jecxz
xor
jbe
insl
fistpl
xlat
pop
stos
mov
add
inc
xchg
inc
dec
add
add
add
in
rorl
jecxz
mov
lea
test
call
lds
add
add
rcrl
lods
ret
push
loop
add
mov
pop
cwtl
jl
add
in
mov
outsl
das
add
add
or
mov
and
add
outsb
outsb
add
inc
add
add
mov
in
roll
and
add
icebp
mov
popf
jecxz
ret
xor
cmpsl
adcl
dec
cmpsl
jmp
les
incl
adc
test
pop
add
test
mov
out
add
add
inc
adc
cmp
int3
imul
lret
lcall
add
push
pop
cltd
xor
add
add
mov
lahf
mov
in
fdivrl
in
add
add
add
push
fdivr
pusha
mov
jp
xlat
and
add
ss
into
movsl
push
or
xor
jecxz
cmc
test
xlat
lea
add
mov
add
rolb
in
mov
loope
push
or
or
loop
cwtl
popf
loop
jmp
movsb
gs
add
add
mov
ss
aad
inc
out
cmp
roll
add
dec
add
nop
add
in
pop
xor
dec
incl
mov
and
les
mov
add
loope
add
pop
mov
in
jle
push
cmp
push
je
testl
jnp
jecxz
add
scas
add
or
jge
mov
mov
add
stc
test
add
sbb
lea
cmpsl
add
das
mov
jo
mov
push
call
jno
add
add
jecxz
mov
add
mov
call
pushl
lret
incl
add
std
inc
cld
aaa
mov
or
sub
cmp
add
fs
or
add
pop
in
lds
mov
xchg
iret
xchg
adc
add
jecxz
xchg
or
or
adc
push
dec
test
jg
mov
sub
pop
add
jnp
sbb
and
add
mov
sub
add
add
fs
sub
ds
enter
jecxz
xchg
and
notl
add
xchg
int3
mov
lods
sub
add
add
adc
mov
and
dec
add
add
dec
cmp
pop
jmp
inc
add
or
jno
mov
or
add
lock
add
daa
push
in
mov
jle
mov
cld
js
add
add
or
and
mov
out
add
jle
in
jle
ljmp
add
test
dec
mov
incl
scas
hlt
outsb
call
jmp
add
add
je
mov
or
xchg
call
in
lods
mov
add
add
sbb
add
sub
push
mov
and
adc
add
add
mov
insl
in
inc
mov
sbb
add
mov
movsb
jecxz
in
movsl
add
stc
xchg
in
add
or
add
mov
add
sbb
sub
add
mov
imul
cmp
xor
add
sbb
add
add
mov
fsts
lock
call
and
mov
add
add
push
les
js
cmp
add
inc
jmp
xor
loop
incl
add
mov
inc
add
sub
addr16
push
push
popf
or
inc
add
mov
in
loopne
and
add
incl
add
add
imul
add
jle
add
outsl
dec
loop
xor
dec
add
das
add
add
dec
xchg
mov
jmp
lahf
add
subb
xor
push
out
jmp
mov
jecxz
mov
mov
loop
add
push
out
sbb
popa
stos
mov
icebp
jne
mov
loop
scas
in
push
add
test
cmp
push
call
adcl
jne
incl
jmp
xor
add
add
and
out
imul
add
dec
inc
push
and
push
cmp
mov
lcall
mul
add
outsl
add
cli
cld
xchg
lea
or
add
loop
loop
in
xchg
mov
mov
mov
sub
add
add
cmp
cld
pop
add
add
and
jp
fwait
dec
sub
pop
add
lods
shrb
sbb
mov
iret
clc
add
dec
inc
push
jns
mov
add
dec
outsb
rorl
adc
mov
cmc
sub
add
adc
xor
add
inc
pop
dec
sub
in
lods
test
loop
jo
push
add
test
gs
add
call
mov
add
mov
int
loope
add
add
add
add
xchg
stos
mov
xor
push
cmpsl
movb
fwait
mov
add
pushf
fbld
add
add
add
mov
add
test
or
pusha
les
das
mov
or
add
dec
add
mov
jns
push
pop
test
add
dec
in
gs
add
add
xchg
iret
pop
add
test
add
dec
sti
incb
jmp
mov
add
add
mov
jmp
xchg
incl
incl
pop
jp
add
and
insl
pop
and
adc
add
add
call
add
movsb
add
sbb
add
jne
or
jecxz
data16
das
add
rcll
add
shlb
add
addl
mov
incl
add
in
add
mov
mov
pop
js
add
movsb
push
push
imul
mov
jb
jno
mov
inc
imul
rolb
insl
pop
add
mov
sbb
mov
add
add
and
mov
add
xchg
jle
jb
xchg
das
add
jne
cmp
insb
lret
hlt
sub
dec
add
cmp
add
add
add
add
xchg
add
mov
add
jle
mov
pop
out
add
incl
jmp
testl
movsb
arpl
fstpt
das
scas
add
add
add
in
add
add
add
push
test
add
and
add
and
aaa
cmp
inc
push
adc
xchg
repz
imul
fs
bound
ret
mov
add
add
jg
outsb
nop
pop
xlat
in
das
cwtl
sbb
inc
add
add
add
popa
les
add
xchg
fadds
push
jg
and
cmp
cmp
repnz
dec
lock
popf
fucom
add
mov
pop
mov
mov
cld
stos
shr
pop
mov
or
add
push
loop
xchg
add
add
cld
sarb
mov
or
inc
pop
mov
add
push
je
ja
loop
bsf
push
mov
add
inc
loop
jecxz
andb
jle
mov
and
ret
aas
jp
and
xchg
mov
out
jmp
pop
adc
add
adc
sarb
cmp
mov
mov
inc
cli
dec
out
pop
add
add
dec
add
add
add
inc
xchg
shlb
insl
mov
inc
in
jle
stc
cld
sbb
call
push
pushf
cmp
add
add
test
incl
out
mov
or
mov
dec
in
ficomps
loope
or
add
or
sbb
sbb
rcl
ja
outsl
insb
jge
mov
int
je
add
add
mov
xlat
add
mov
jg
and
inc
and
orl
push
xchg
call
movsb
test
push
scas
aad
scas
add
add
add
dec
lret
mov
add
mov
add
or
push
and
add
xchg
add
icebp
aaa
jns
add
clc
test
out
sub
mov
in
movsb
add
dec
test
add
or
ljmp
add
add
inc
lret
je
repz
add
add
push
xor
insb
les
and
sub
add
mov
mov
pop
fwait
sub
add
add
add
and
push
roll
add
xchg
addr16
addb
add
in
cmp
fwait
popa
iret
sub
add
das
adc
in
into
add
shl
xor
movsl
popl
ret
xchg
dec
pop
push
add
pop
or
inc
das
and
mov
dec
push
aam
add
out
pop
insl
call
dec
add
incl
jmp
out
cmp
iret
inc
add
movsb
movl
out
sbb
add
je
sub
inc
movsl
and
and
and
outsl
push
add
add
outsb
cli
add
add
fstps
jl
dec
add
xlat
nop
jmp
sbb
jecxz
add
add
fwait
loop
movb
sahf
xor
gs
add
repz
insl
mov
or
jnp
xor
ljmp
xchg
stos
aaa
and
loop
inc
pop
daa
jno
add
and
ds
sbb
cmp
push
or
jbe
add
add
add
adc
fists
add
and
sbb
or
daa
xor
xchg
ret
add
add
lock
mulb
outsb
add
out
add
mov
add
add
scas
xor
scas
dec
out
loop
add
shl
adc
add
add
push
pop
in
popa
sbb
and
out
loopne
lret
and
xlat
lahf
fidivrl
mov
inc
inc
add
dec
sub
decl
pushl
and
les
mov
cmp
mov
or
mov
mov
jbe
pop
pop
jp
mov
add
xlat
in
and
ret
and
ds
pop
and
and
add
insl
mov
jle
or
sbb
add
adc
add
add
dec
leave
in
sbbl
add
loop
lcall
add
lds
ret
add
add
mov
adc
adc
mov
call
add
pusha
dec
xchg
leave
mov
dec
xchg
jp
and
aam
cmpb
add
jge
pop
rolb
cltd
add
add
hlt
adcl
out
popf
mov
add
or
sar
cmp
test
std
cmp
add
inc
decl
and
lea
std
lcall
adc
mov
outsb
xor
xchg
out
cli
xor
cmc
cmp
add
repz
loop
inc
inc
mov
add
or
xchg
mov
xchg
sub
mov
and
ljmp
add
mov
pop
pop
sbb
test
repnz
jle
lcall
imul
add
das
jmp
sbb
mov
out
add
in
add
pop
sbb
dec
les
test
ret
pop
xor
push
mov
add
xor
rcrb
jmp
mov
add
and
add
mov
jecxz
jg
fistpll
ds
das
mov
shrl
jb
pop
and
incl
stos
cmc
mov
mov
or
push
cmp
adc
and
add
pop
imul
incl
incl
aam
push
mov
mov
add
in
lock
cltd
cmp
pop
shll
add
xchg
dec
pop
mov
add
pop
mov
std
nop
dec
mov
mov
mov
add
jne
and
jle
stos
adc
fidivrs
aaa
fmulp
add
sub
in
add
add
add
add
dec
push
xor
add
mov
mov
or
outsl
dec
dec
loopne
xchg
add
jmp
push
cmc
in
pop
arpl
dec
fisubl
mov
pop
call
sbb
add
addr16
in
add
add
lcall
rol
lret
inc
add
call
add
ds
mov
in
cmpsb
stc
and
push
inc
add
in
int3
inc
jb
testb
fildl
cmp
or
movsl
incl
add
ds
cmp
add
cmpsb
lods
divl
and
lock
repz
pop
jl
and
jl
and
pop
dec
loope
pop
out
mov
add
fisubrl
jecxz
sarb
add
xor
mov
add
mov
sbb
jae
cmp
and
outsb
out
add
je
int3
xchg
jle
inc
add
xor
mov
xor
or
add
inc
mov
add
data16
inc
or
add
add
add
outsl
jno
mov
add
add
sub
daa
xor
fisttpl
pop
sti
add
test
decl
pop
add
add
add
add
add
xor
add
add
and
test
jae
mov
fptan
mov
jnp
mov
mov
or
xchg
add
aaa
int3
mov
add
pop
fs
sbb
add
add
and
idivl
push
jns
loop
pop
push
push
add
xor
loopne
pop
add
inc
adc
add
out
jmp
movsb
add
add
and
push
push
add
insb
incl
dec
mov
add
das
add
jg
test
dec
or
xchg
repz
add
xchg
add
in
das
xor
jnp
add
add
cwtl
mov
add
pop
iret
mov
xchg
add
in
and
or
insb
xchg
mov
insb
aaa
outsb
dec
ljmp
add
repz
and
sbb
in
sbb
xchg
inc
push
jecxz
mov
and
add
xor
in
decb
ljmp
jecxz
sub
mov
andb
rol
mov
loopne
das
popf
ret
out
jmp
add
mov
jecxz
push
popf
mov
and
mov
add
and
cmp
add
std
xchg
mov
mov
and
dec
add
aad
jecxz
insb
push
sub
add
incl
call
xor
inc
cmp
add
add
add
fstl
jecxz
or
mov
aaa
lock
jge
fmull
dec
xor
add
test
icebp
jo
mov
jecxz
add
jns
add
add
sbb
or
add
add
add
decl
loop
stc
rol
adc
int3
dec
adc
sbb
ds
add
and
push
and
push
mov
stos
das
jle
add
add
inc
add
fsubs
add
add
mov
dec
xchg
out
xor
add
orl
push
adc
pushf
inc
hlt
outsw
push
imul
xor
push
sub
call
cwtl
cltd
xchg
out
add
xor
jecxz
add
in
incl
incb
lcall
mull
decl
in
add
repz
add
std
enter
add
add
in
jno
sbb
add
in
pop
xchg
in
ret
dec
pop
roll
test
dec
addb
lret
or
cmp
mov
popa
out
shrb
and
add
xor
jmp
negl
test
mov
mov
mov
push
add
or
dec
lods
add
pop
sub
jmp
add
add
add
rep
mov
cli
fprem1
push
mov
jle
mov
cmp
dec
xchg
addl
mov
adc
add
adc
movsl
jecxz
add
adc
inc
and
add
add
loope
sbb
mov
int3
inc
arpl
pop
add
add
les
add
imul
push
lea
dec
sub
dec
and
cwtl
add
jmp
jmp
dec
and
pop
sub
pushf
cmp
add
adc
pushf
and
and
fiadds
jmp
jle
add
jle
lock
jl
rorb
lds
test
ds
add
cmp
inc
add
add
add
add
subl
jb
incb
rclb
jp
add
adc
push
add
out
mov
sub
aaa
enter
stc
xchg
pop
add
mov
mov
add
add
icebp
push
xor
lods
mov
and
insl
insl
and
scas
sub
mov
inc
fidivrl
add
mov
ljmp
out
idiv
clc
int
mov
mov
jmp
incl
add
mov
add
add
sbb
les
incl
adc
jns
fs
and
jno
jecxz
push
jge
in
add
add
mov
sbb
add
add
add
or
jle
jecxz
cmp
add
xchg
mov
mov
movsb
movsb
add
inc
movsl
out
mov
add
mov
mov
cli
dec
add
sub
or
add
inc
adc
add
add
add
jo
mov
add
jb
mov
or
cmp
push
stos
push
sbb
and
hlt
add
fildl
jecxz
incl
js
push
push
dec
jl
mov
mov
push
lcall
mov
in
add
mov
or
xchg
outsb
xchg
filds
add
inc
push
mov
daa
dec
pop
in
add
or
in
sar
call
popf
add
out
add
aaa
out
getsec
ret
add
add
clc
lahf
testb
or
lds
jae
mov
mov
and
popf
xor
pusha
pop
push
cmp
in
xor
add
add
in
shrb
jp
les
and
and
setl
cld
incl
gs
incb
or
cld
popf
pop
add
add
loop
jnp
pop
add
jp
test
decl
add
mov
add
add
pop
aam
dec
sub
adc
mov
add
popf
cld
pushf
jg
add
add
std
sbb
repnz
add
fcoml
jb
add
aas
sub
and
add
mov
xchg
mov
or
xchg
add
and
jg
add
and
xor
cmp
inc
or
or
add
add
xor
inc
mov
adc
jge
repz
add
ss
jecxz
out
xchg
leave
lock
and
cmp
pop
mov
or
add
ljmp
adc
add
or
sub
add
add
add
jns
xor
add
cmpsl
mov
add
add
int3
aaa
lods
inc
sub
sbb
je
push
cmp
mov
pop
pop
xchg
inc
add
push
add
add
or
adc
add
and
add
mov
mov
add
arpl
ret
decl
dec
outsb
and
cmpsb
in
dec
fwait
and
pop
add
aam
cmp
call
mov
and
incl
popf
int
or
add
add
xor
add
jmp
cmp
and
in
push
xor
or
xor
add
mov
dec
push
and
inc
pop
out
and
mov
add
stos
and
decl
inc
add
mov
decl
add
or
add
jb
add
add
shrl
mov
add
pop
or
loop
inc
jnp
out
ret
add
mov
or
xor
fs
add
and
push
pop
adc
pushl
mov
test
jmp
xchg
shll
inc
or
add
jno
sub
or
aaa
and
add
in
pusha
add
add
add
iret
add
incl
addl
pop
and
push
and
mov
sub
popf
pop
outsb
aas
int
add
lea
add
rcrl
ret
add
pop
or
add
add
out
in
mov
add
inc
and
lret
and
outsb
add
add
inc
in
adc
add
push
cmpsl
mov
and
out
add
test
arpl
xor
scas
ret
add
lcall
outsb
mov
hlt
add
add
mov
call
add
adc
add
add
jb
xchg
add
or
sub
xor
sti
inc
scas
add
jle
inc
mov
dec
add
sbb
icebp
lds
jecxz
mov
xor
jno
mov
add
add
scas
mov
mov
add
add
stc
fildl
add
sub
in
loop
mov
out
shl
add
add
xorl
xchg
jle
js
repnz
rolb
add
push
aad
lods
adc
add
decl
ret
pop
fildl
incl
mov
xchg
cltd
add
subb
and
xor
mov
test
add
icebp
rorl
andl
repnz
pop
dec
testl
cmp
push
mov
mov
stos
push
add
add
or
inc
inc
nop
lds
loop
add
add
inc
push
pop
test
pop
dec
fcmovnu
jg,pn
lds
cmp
les
mov
scas
test
sahf
add
or
add
add
add
out
mov
add
inc
push
push
std
sub
or
xchg
xchg
sbb
lret
std
gs
mov
lcall
pop
imul
jl
call
jns
std
add
orl
outsl
push
insl
add
or
lcall
in
lret
fcmovnbe
adc
add
and
aas
leave
cmp
jle
incl
sbb
add
int
nop
sbb
icebp
dec
mov
or
rcrl
mov
add
jmp
movsb
or
and
test
add
in
dec
jecxz
and
jg
sbb
outsb
jge
xchg
sub
dec
test
add
inc
cmc
ret
jnp
xchg
call
xor
add
add
add
mov
add
xor
and
add
add
stos
jecxz
out
fisttpl
add
decl
lods
clc
sub
mov
pop
aaa
rcrl
aaa
add
movsl
ret
sub
les
jmp
mov
push
add
cs
fsubrl
add
out
xchg
mov
add
out
outsb
mov
sub
mov
push
add
mov
mov
and
jno
outsb
push
add
add
mov
inc
das
test
stos
add
add
iret
nop
sub
das
add
xchg
daa
pop
or
dec
mov
add
xchg
and
add
dec
and
mov
movsl
repz
and
jge
mov
mov
and
mov
jbe
sub
add
add
xor
popa
jle
or
add
out
imul
scas
enter
jmp
push
stc
pop
incl
mov
mov
add
mov
inc
xor
sub
arpl
outsb
cmpsl
jle
cltd
jo
cmpsb
and
add
in
fidivs
repnz
and
dec
add
dec
in
shll
das
add
add
add
adc
int3
mov
add
add
not
sub
cmp
push
out
out
cltd
pop
or
imul
pop
pushf
ret
jecxz
incl
loop
xchg
xchg
inc
push
fs
and
loop
add
pushl
in
mov
outsl
xlat
repz
add
add
out
aas
imul
test
add
leave
mov
mov
add
incl
add
fldl
mov
repz
xor
jle
loope
scas
pop
lcall
xor
and
sub
popl
add
loopne
push
add
xor
incl
add
mov
fwait
and
insb
lret
jecxz
add
dec
or
add
ljmp
add
push
add
mov
mov
mov
ret
cmp
in
mov
js
jmp
add
add
inc
add
popa
dec
loopne
jle
jecxz
mov
xor
add
push
inc
in
dec
lea
sub
insb
inc
loope
fcmove
jae
jecxz
mov
add
jae
or
mov
dec
out
sub
addb
or
adc
add
add
add
xchg
ret
adc
jbe
fnsave
push
gs
add
shll
lds
dec
loop
or
pop
xor
add
xchg
xlat
mov
mov
and
roll
and
sbb
push
test
mov
aaa
inc
and
push
or
push
lcall
mov
out
lock
mov
or
add
mov
outsl
fildl
inc
jp
add
push
cmc
fwait
push
add
add
mov
xchg
jo
add
add
leave
test
arpl
add
lods
ret
aad
add
xor
mov
je
add
loop
in
sub
popl
and
cs
in
jle
add
andb
add
rclb
adc
cmpsl
rolb
pop
xchg
add
lret
enter
add
fidivs
and
xorl
inc
mov
add
and
int
add
jg
ficoms
cwtl
jg
add
js
stc
shlb
repnz
adc
jbe
out
call
add
idiv
daa
mov
or
mov
mov
icebp
xor
add
stc
xchg
ffreep
add
add
sub
cmpsb
mov
jle
in
add
test
xchg
cli
mov
or
add
nop
add
or
and
outsl
or
inc
and
and
add
cwtl
jnp
add
incb
cmp
cmp
sub
jns
mov
insl
into
mov
insl
mov
add
jle
cld
scas
int
xor
iret
std
aam
in
fbld
call
add
outsl
mov
add
call
into
adc
popf
push
dec
dec
cltd
popa
mov
in
mov
repnz
mov
les
pop
sbb
add
xchg
mov
add
add
mov
add
xor
ljmp
or
fldpi
mov
and
add
or
add
pause
fs
dec
jle
cltd
popa
adc
add
add
fcmovne
and
repz
or
sti
pop
insl
push
add
add
xchg
repnz
scas
out
push
add
add
mov
aad
outsl
add
jle
das
add
and
push
add
jecxz
pop
sub
sub
add
das
lds
add
add
testb
jle
or
arpl
push
ljmp
cmp
loop
das
mov
add
and
pop
pop
stos
sbb
ret
jnp
sbb
add
loop
add
add
add
aam
cmp
fiaddl
lcall
jle
mov
add
and
xor
mov
add
jecxz
dec
or
add
mov
rorb
daa
inc
or
mov
pushf
lock
mov
or
add
movsb
sub
add
add
sahf
addr16
mov
add
out
fisttps
test
push
loope
cs
hlt
mov
add
push
loop
insl
xchg
mov
mov
cli
enter
in
arpl
icebp
or
add
pop
add
push
push
add
out
push
add
add
add
popf
pop
dec
fwait
in
add
add
add
or
movsl
dec
pop
shll
inc
add
add
fildll
insl
add
or
mov
push
jl
clc
sbb
add
pusha
dec
xlat
sub
add
jle
lcall
add
jbe
aad
jb
leave
imul
jns
cmp
jbe
outsl
add
pop
mov
repz
jmp
add
fsubrl
add
or
add
add
popf
adc
testb
and
arpl
mov
loopne
and
pop
and
mov
push
inc
in
mov
out
in
add
addr16
mov
add
jmp
xchg
inc
push
dec
add
and
sbb
pop
mov
mov
or
add
push
jnp
add
mov
xchg
pop
loopne
add
dec
movsl
cmpsb
imul
out
and
mov
jl
pop
mov
mov
dec
xadd
add
fsubrs
std
cmp
sub
out
mov
or
inc
add
add
inc
add
add
gs
ss
add
jle
add
adc
push
mov
jle
add
ret
mov
mov
add
fsubl
jg
test
cmc
push
xor
add
jecxz
call
out
call
and
gs
xor
cmp
loope
push
sbbb
loop
leave
les
std
ljmp
cmp
add
loop
adc
popl
push
push
push
add
cmp
call
add
lcall
jmp
les
lods
sbb
outsl
std
and
jmp
je
mov
add
sahf
shrl
sbb
jmp
sbb
adc
inc
jmp
jle
add
shlb
add
mov
sbb
gs
adc
add
pop
and
ret
xchg
jns
filds
sbb
shrb
in
mov
add
dec
adc
add
fwait
or
add
add
iret
pop
dec
jns
mov
incl
mov
cli
lea
add
xchg
and
jmp
xor
add
mov
imul
add
push
dec
sete
add
jp
or
xchg
xchg
mov
push
rcll
push
push
add
das
add
add
jg
bound
jle
and
mov
add
enter
pushf
imul
cmp
arpl
push
push
xor
add
loope
dec
mov
mov
add
fst
fisubl
add
mov
das
and
add
incl
orl
out
or
add
and
mov
add
loop
outsb
cltd
mov
add
add
fs
xchg
mov
add
arpl
add
add
out
out
decl
add
xor
and
insl
xchg
lcall
add
rolb
adc
add
popf
gs
movsb
add
mov
sahf
cmpsl
and
add
cmpsl
dec
mov
das
jle
mov
jg
add
or
adc
in
cmp
add
aaa
xchg
and
rorl
jp
and
es
mov
cmp
add
sbb
add
data16
push
repz
out
mov
mov
jecxz
adc
data16
and
jmp
jmp
cli
lret
jne
fsubrl
in
add
mov
add
jp
add
add
jle
add
add
add
adc
xchg
lahf
xchg
lods
movsb
sub
and
and
and
inc
and
sbb
add
add
mov
mov
add
or
add
jle
out
mov
add
dec
fbld
add
lret
jmp
mov
add
mov
or
jmp
add
dec
incl
mov
in
stc
adc
dec
in
sahf
jg
decl
dec
cmp
ret
into
add
loope
dec
push
lods
mov
in
enter
add
pop
outsb
out
ficoms
add
add
stos
ljmp
add
add
push
jecxz
or
add
add
decl
pop
mov
in
inc
lahf
popa
add
adc
xchg
sarb
repz
sub
add
dec
les
in
lods
mov
jae
jecxz
pop
fildll
cld
xor
outsl
ja
test
and
sbb
or
jns
mul
cmp
adcl
jle
out
adc
add
inc
push
sbb
adc
mov
or
iret
lret
and
xchg
sub
and
add
add
fimuls
xchg
or
fwait
std
addr16
and
popf
sub
inc
sub
sbb
jo
int
incl
jecxz
negl
ss
add
push
lods
pop
jne
and
loop,pt
sub
sub
xchg
add
and
dec
push
pop
jmp
or
clc
mov
aam
add
jecxz
jae
mov
push
out
mov
mov
and
jmp
cmc
mov
cmp
add
dec
sbbl
incl
addr16
jl
add
push
sub
aaa
sarl
outsb
addl
shr
getsec
lock
incl
cmp
cltd
adc
add
jnp
lahf
add
add
repz
ljmp
sub
aam
add
and
mov
add
orb
inc
mov
pop
mov
ljmp
or
in
incl
dec
xor
cmp
incl
dec
sbb
jecxz
add
orl
push
jnp
jnp
add
push
or
in
movsb
add
cmp
call
jmp
sub
test
pop
add
push
mov
in
es
test
repz
xor
mov
sub
sub
jl
add
mov
add
in
repz
adc
add
dec
inc
xor
lock
jecxz
mov
or
incl
jl
jg
data16
jg
aaa
mov
jg
add
jg
loop
jle
inc
mov
sti
in
lcall
fs
incl
std
cltd
out
add
add
add
cmp
add
add
jb
jae
add
add
add
jl
xchg
ret
and
incb
mov
or
mov
pop
mov
aaa
add
pusha
xlat
outsl
stos
add
incl
add
xor
add
sahf
jb
icebp
jg
add
lahf
arpl
jecxz
mov
pop
dec
add
adc
pop
jle
into
jp
ds
jg
pop
dec
out
inc
add
add
repz
jle
and
aaa
sub
inc
rorb
add
xchg
in
cmp
dec
inc
add
dec
enter
mov
stos
shll
mov
pop
pop
pop
inc
sbb
cwtl
mov
mov
add
leave
test
outsl
add
add
jg
or
add
incb
add
das
filds
mov
jbe
push
or
xchg
cs
jnp
jb
in
add
add
in
xchg
test
insl
out
test
xor
add
popa
jge
out
loope
add
add
shlb
aam
jbe
push
insl
mov
add
imul
add
or
mov
jecxz
jmp
addl
jnp
add
dec
popa
ljmp
movsl
or
lret
and
clc
xchg
and
lea
xchg
mov
add
add
cmp
add
out
adc
call
in
pop
cmp
mov
add
add
pop
imul
pop
pop
pusha
jecxz
dec
push
push
cmp
incl
test
xchg
and
inc
and
mov
das
outsl
repz
jle
mov
add
cmc
lea
push
and
add
cwtl
jmp
cmp
or
mov
add
pop
out
mov
subl
ds
inc
push
scas
int3
fsubrs
inc
enter
call
testl
add
fisubrs
movsl
testl
add
dec
fs
in
dec
std
add
cltd
incl
cltd
dec
xor
les
add
repz
and
inc
and
loop
or
add
bound
cmp
incl
add
xchg
dec
popa
or
dec
in
icebp
xor
add
pop
popa
pop
pushf
inc
sbb
add
imul
xor
sbb
stc
pop
jecxz
add
sub
outsl
add
adc
add
add
hlt
xchg
sub
mov
ret
or
cmpsl
add
dec
and
inc
and
pop
jecxz
and
sub
sub
add
out
loope
aam
and
cli
jmp
dec
adc
mov
mov
add
add
enter
xchg
jmp
lret
sbb
outsl
add
repz
or
imul
pop
pop
dec
je
add
push
push
cmp
push
scas
jnp
add
mov
add
mov
das
movsl
testl
cmp
jg
and
xlat
adc
add
loope
add
add
faddl
xor
or
stos
add
ret
push
addl
lcall
add
ljmp
je
ljmp
add
add
mov
lcall
sub
mov
push
sbb
call
mov
outsl
add
add
cwtl
inc
es
xchg
dec
call
cmpsb
adc
inc
add
xor
add
dec
imul
les
daa
add
mov
out
xlat
inc
in
jecxz,pt
jecxz
loope
or
pop
outsl
or
push
and
div
jmp
add
dec
add
cmp
push
roll
and
cmp
rcll
jns
call
jl
add
les
add
xor
xchg
sbb
add
mov
or
add
arpl
jl
add
scas
aad
mov
lahf
insb
adc
loope
mov
add
adcb
and
add
add
add
inc
orl
mov
pop
xlat
add
add
sbb
jecxz
call
cmp
or
add
dec
push
xor
ret
loop
add
aad
shll
or
add
jle
jae
xor
add
int3
pop
ds
jmp
push
add
lods
or
add
dec
add
fucomi
sub
iret
add
cmpsb
sti
jecxz
add
add
or
jle
add
add
jmp
add
movb
push
mov
test
add
adc
add
add
add
stos
xlat
or
jmp
push
bound
add
mov
cwtl
pop
test
add
stc
lret
jge
and
dec
scas
add
lahf
das
jno
movsb
mov
bound
add
push
mov
aad
push
jle
jne
dec
clc
add
add
add
imul
scas
jo
and
nop
lds
je
cmp
pop
xchg
sbb
movsb
adc
out
in
mov
add
rorb
addl
add
mov
add
add
add
pop
mov
sub
scas
jmp
or
xchg
cltd
add
and
or
ljmp
loopne
daa
or
pop
loope
imul
add
out
cmp
add
jo
xor
mov
push
mov
jb
xchg
sbb
add
push
sub
pushf
cld
mov
add
add
stos
ret
or
sub
cmp
add
adc
les
int
cmp
pusha
ror
pop
aam
and
scas
jbe
lret
dec
loop
xor
incl
add
add
decl
std
jmp
cltd
jmp
call
add
sar
fcoms
rolb
dec
pusha
xchg
stos
add
add
add
test
decl
inc
cwtl
xchg
add
lret
xchg
push
xorl
and
sti
and
or
inc
mov
inc
sbb
call
jge
or
add
jle
xchg
push
repz
loope
and
or
sahf
inc
repz
in
jnp
cmp
jno
sti
add
test
das
adc
add
add
pop
or
or
add
inc
pushf
out
scas
xchg
mov
jecxz
dec
adc
jae
add
out
sbb
sbb
or
int
and
jl
push
lds
add
jecxz
pushl
add
loop
and
add
add
add
add
add
mov
mov
mov
xor
outsl
add
incl
add
ljmp
or
add
rcll
and
add
adc
dec
inc
loop
inc
cmp
jbe
jp
cmp
pop
add
movsb
push
rol
add
add
add
xor
xor
test
les
jmp
out
dec
dec
xchg
ja
mov
addl
xchg
insb
scas
inc
mov
add
loope
lods
incb
fadd
xchg
repz
cld
flds
add
add
add
mov
test
add
std
or
call
mov
sbb
add
imul
sub
rorb
adc
jb
sbb
add
mov
add
loope
in
mov
pop
clc
jg
movsl
push
add
add
out
es
mov
and
call
adc
loop
fwait
push
daa
ret
div
and
movsl
das
push
add
sub
clc
cmp
in
jecxz
ficompl
test
pop
and
jmp
xchg
inc
sbbb
rcll
jecxz
jle
jb
add
ljmp
mov
add
pop
mov
add
sub
xlat
add
adc
out
jecxz
in
add
or
push
in
dec
add
push
incl
add
add
add
jp
add
cmp
jp
jmp
cwtl
or
add
mov
loope
sti
jnp
and
jecxz
incl
add
add
jg
jmp
add
xor
fwait
pop
or
fdivrl
pop
or
adc
stc
and
dec
adc
shl
or
xor
scas
cli
and
inc
int3
pushf
shrl
add
shl
jg
clc
xor
call
pop
pop
jno
add
push
mov
out
and
jecxz
and
mov
add
subb
incl
aaa
pop
xlat
ja
xchg
out
add
js
mov
call
adc
add
loop
test
dec
adc
add
jno
or
mov
add
sbb
add
scas
clc
loope
jecxz
mov
outsb
test
sti
push
outsl
stos
ja
add
aas
pop
cs
iret
push
in
add
adc
hlt
add
add
push
lods
lret
pop
icebp
jle
mov
dec
scas
add
das
add
fildl
jmp
sub
les
add
xor
jb
jb
add
add
mov
shrb
push
jg
mov
test
nop
add
dec
add
adc
add
add
incl
mov
add
addl
xchg
stos
mov
or
inc
scas
push
fwait
ud0
scas
movsl
mov
sbb
testb
mov
lcall
stc
and
lret
or
or
add
movsb
insb
cmp
mov
add
outsl
dec
xchg
cltd
add
add
jg
inc
outsl
popf
pop
add
jbe
mov
push
loope
jge
loop
add
testb
outsl
loop
fldl
sti
or
stc
testb
and
add
es
mov
loop
add
lock
mov
xor
pusha
add
adc
leave
pop
add
mov
hlt
xor
sub
inc
adc
lods
pop
pop
das
dec
and
mov
out
add
and
and
pop
and
sub
dec
popf
ret
and
ret
sbb
add
popa
ljmp
mov
cmp
sub
or
add
push
add
add
negb
mov
mov
shlb
in
mov
mov
add
add
fidivs
je
mov
and
scas
push
loope
in
das
fsubs
add
add
and
push
in
ds
jecxz
lret
add
add
xchg
dec
test
jecxz
sbb
mov
or
jns
mov
add
add
adc
int
rcr
out
in
sti
test
aas
data16
imul
js
cld
jns
push
jmp
add
add
add
dec
leave
ss
add
stc
lds
subb
decl
out
ja
jb
sti
jnp
lock
repz
mov
sbb
add
jns
jle
addl
add
repz
add
jle
add
rolb
add
and
shr
addl
adc
xlat
lahf
push
lods
std
cwtl
invd
xor
fs
lods
add
mov
shlb
add
add
inc
cwtl
bswap
scas
aam
mov
add
and
or
mov
add
jg
cmp
cmp
dec
adc
movl
dec
loope
add
add
sub
scas
int
add
add
or
add
jle
add
add
add
fmuls
inc
xchg
sbb
add
sbb
add
aam
jg
shl
iret
popl
and
fsub
add
incl
orb
mov
fiaddl
add
loope
jnp
movsb
loop
add
add
cmp
add
add
push
add
inc
ja
push
add
push
jbe
pop
push
in
test
pop
add
scas
cmp
repz
add
in
and
jno
loop
pushl
add
inc
add
add
sbb
leave
push
out
addl
xor
add
jmp
cmp
mov
jbe
and
aaa
push
add
test
jp
cld
dec
pushl
lods
in
xchg
add
add
add
add
jnp
popf
inc
sub
lcall
jmp
add
incl
jae
decl
mov
jp
cmp
stc
mov
sub
add
decl
push
add
ss
pushl
xchg
decl
std
cld
jle
incl
fidivrs
mov
add
sbb
jle
ljmp
mov
mov
cwtl
imul
or
ret
test
jmp
std
std
std
incl
call
add
add
incl
add
data16
add
xchg
cld
sti
lcall
call
cld
and
jp
jo
add
call
cmp
notrack
lcall
outsl
jecxz
add
popf
add
ja
incl
test
incb
xchg
cli
incl
add
addr16
out
ljmp
aas
std
loop
xchg
cld
std
dec
std
popl
cli
inc
add
ljmp
std
nop
xchg
add
insl
cltd
js
incl
out
jp
stc
incl
cli
incb
decl
xchg
jp
std
decb
std
ret
jae
sub
jnp
xchg
xchg
cmpsl
adc
sti
add
popf
jnp
jmp
jl
add
xchg
incl
and
add
add
incl
add
add
inc
add
add
add
incl
add
add
mov
add
ljmp
mov
inc
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
incl
add
add
add
add
incl
add
add
inc
add
incl
add
add
inc
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
gs
xor
cs
insb
incl
add
add
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
jne
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
call
fildl
add
add
call
fildl
fcmovu
inc
add
add
add
incl
fldl
or
inc
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
jp
inc
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
add
add
fsubr
inc
add
out
inc
add
add
add
incl
add
add
inc
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
mov
clc
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
push
sti
inc
add
sti
inc
add
add
add
cli
incl
incl
push
std
inc
add
std
inc
add
inc
incb
leave
incb
add
add
incl
add
add
add
add
incl
add
add
add
add
add
dec
add
add
fldl
inc
mov
add
add
add
add
add
add
test
add
inc
mov
add
and
add
push
mov
add
or
add
add
add
adc
add
pusha
adc
add
add
jle
add
pushf
mov
add
mov
mov
add
hlt
mov
add
push
mov
add
inc
mov
add
jl
add
mov
add
mov
mov
add
clc
mov
add
sub
add
add
add
add
add
hlt
rolb
in
add
lret
add
add
xchg
rolb
test
add
outsb
rolb
push
rolb
and
add
ds
add
mov
je
add
test
add
mov
add
out
add
hlt
mov
add
push
mov
add
cmp
add
push
mov
add
jbe
add
mov
add
stos
mov
add
enter
fdivrs
add
mov
add
push
mov
add
ss
add
push
mov
add
cmpb
add
mov
add
fidivrl
add
cli
mov
add
and
add
push
mov
add
mov
add
mov
mov
add
ljmp
add
rolb
push
rolb
xor
add
cmp
add
inc
rolb
add
add
idivb
add
mov
add
lcall
add
add
push
mov
add
mov
add
mov
mov
add
push
mov
add
push
add
je
arpl
imul
imul
outsb
gs
add
push
gs
arpl
imul
imul
outsl
jne
add
inc
add
addr16
jo
outsb
dec
gs
add
push
gs
gs
gs
dec
gs
add
add
addr16
jb
popa
je
dec
gs
js
add
add
gs
push
gs
imul
jne
add
rolb
dec
jo
outsb
push
push
push
outsl
imul
mov
dec
jo
outsb
push
gs
imul
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
mov
dec
outsl
outsl
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
push
gs
imul
jne
add
aaa
add
je
arpl
imul
imul
arpl
add
imul
jb
imul
dec
popa
outsb
fs
gs
add
push
gs
gs
popa
insb
jne
inc
js
add
fiadds
push
gs
outsb
jne
dec
gs
add
je
popa
insb
imul
jb
je
inc
gs
jb
jo
outsl
jb
add
jb
push
gs
imul
inc
imul
gs
add
add
outsb
push
jb
arpl
jae
outsl
imul
add
add
gs
imul
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
addr16
jne
jb
push
popa
insb
jne
inc
js
add
xor
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
repz
je
jo
jne
jne
inc
gs
gs
push
arpl
outsb
inc
add
adc
jne
inc
fs
arpl
outsb
push
outsl
inc
imul
gs
imul
push
gs
jo
fs
outsb
jae
popa
insb
insb
push
arpl
outsb
push
outsl
inc
imul
gs
imul
add
je
jo
jne
jne
inc
outsl
jo
push
arpl
outsb
inc
add
push
add
je
jo
gs
outsl
jbe
push
arpl
outsb
inc
jb
insl
inc
imul
gs
imul
add
je
jo
gs
outsl
jbe
dec
outsb
jae
popa
insb
insb
push
arpl
outsb
inc
jb
insl
inc
imul
gs
imul
push
gs
jo
outsb
jae
popa
insb
insb
push
gs
imul
insl
dec
outsb
push
arpl
outsb
inc
js
add
jne
inc
imul
dec
imul
gs
jo
imul
je
imul
push
gs
jo
fs
outsl
inc
imul
gs
imul
add
je
jo
jb
popa
je
inc
imul
gs
imul
push
gs
jo
gs
jb
jns
imul
gs
imul
gs
jo
jne
jb
inc
jb
jbe
jae
outsb
inc
imul
gs
imul
add
je
jo
gs
outsl
jbe
inc
jb
insl
inc
imul
gs
imul
push
push
push
inc
push
dec
cs
insb
add
in
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
pop
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
jns
je
insl
push
imul
jo
outsb
push
jb
arpl
jae
cmp
inc
gs
gs
imul
ret
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
insb
add
je
popa
je
inc
outsl
jb
popa
je
add
fwait
add
jp
outsl
push
gs
jne
arpl
add
popa
je
inc
jbe
outsb
je
add
testb
imul
outsl
dec
outsl
arpl
inc
imul
das
add
je
gs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
arpl
push
imul
inc
jb
popa
je
inc
imul
gs
outsl
jbe
inc
imul
jns
add
mov
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
push
gs
popa
jo
push
outsl
jae
je
outsl
outsb
add
add
jb
jne
insb
push
jb
je
arpl
inc
add
imul
gs
gs
jne
arpl
add
incl
inc
gs
jns
je
insl
dec
outsb
outsw
add
jo
jb
add
push
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jne
jb
outsb
je
push
dec
add
addb
gs
popa
jae
inc
jb
outsl
jb
add
inc
jb
add
inc
gs
popa
insb
jne
add
add
je
jb
arpl
fs
jae
add
sbb
dec
gs
jo
gs
jb
jns
and
dec
gs
jo
jb
popa
je
add
aad
push
imul
jb
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
loope
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
jo
gs
insb
insb
outsl
arpl
loopne
inc
js
je
jb
arpl
jae
js
push
gs
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
rolb
push
jb
je
inc
imul
je
je
dec
popa
outsb
fs
add
lret
gs
outsl
fs
gs
imul
add
jnp
push
outsb
push
gs
js
gs
imul
gs
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
cmp
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
imul
fldl
inc
gs
je
imul
inc
add
xchg
dec
jne
je
inc
jns
gs
outsl
push
imul
pop
add
je
je
imul
push
add
or
inc
gs
push
dec
outsb
outsw
add
dec
outsl
arpl
gs
outsb
outsw
inc
add
iret
add
insb
push
outsb
ja
outsb
add
add
je
inc
push
add
out
inc
gs
inc
dec
inc
push
add
sub
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
jb
jne
insb
push
jne
jb
add
jge
dec
outsl
popa
fs
imul
add
xlat
add
je
imul
je
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
popa
jo
imul
push
dec
inc
dec
xor
cs
insb
add
add
push
sti
inc
add
inc
add
cmc
inc
add
dec
add
inc
outsl
outsb
popa
add
add
popf
add
add
add
add
or
and
sarl
aam
inc
lahf
xchg
arpl
mov
dec
sbb
fstpt
or
cmpsl
or
xlat
cmpsl
leave
push
jecxz
fistpll
call
mov
add
or
js
out
mov
imul
pop
xchg
into
cmpsl
xchg
pop
xchg
repnz
out
in
imul
and
mov
cmp
test
les
movsb
jl
mov
mov
mov
xchg
fimull
imul
mov
mov
lods
dec
xor
inc
pop
and
and
cwtl
mov
mov
out
addr16
movsl
dec
and
in
inc
push
test
inc
ja
pop
cmp
jbe
inc
add
cltd
or
pop
dec
lcall
stc
iret
mov
outsb
je
idivl
imul
fs
jl
aam
jp
lahf
dec
dec
cmc
push
cmp
xchg
sbb
pop
in
popf
mov
data16
fildl
or
add
mov
cli
mov
inc
insl
movb
arpl
daa
aaa
jo
lret
aad
ret
cltd
push
inc
dec
stos
inc
jle
cld
outsb
das
test
jmp
in
jbe
mov
jmp
jp
aam
ret
pop
outsb
iret
xchg
jle
xor
jne
jnp
filds
les
mov
negb
gs
ss
in
mov
enter
nop
imul
cmp
aaa
sbb
out
pop
std
jb
mov
dec
push
xor
scas
arpl
mull
popa
jb
rcll
test
jnp
jl
cmp
lods
scas
pop
sub
subb
sub
and
sub
stos
rorb
dec
mov
adcl
pop
mov
lea
clc
mov
xlat
push
shl
je
lcall
movsb
aad
pop
mov
addr16
adc
movsl
dec
aad
sti
cltd
loope
jo
xchg
mov
shll
xchg
mov
js
mov
dec
or
js
jbe
and
pop
cmp
movsb
jl
cmp
roll
add
xchg
or
sub
inc
push
loop
scas
jl
out
mov
jne
lret
jmp
das
inc
aam
xchg
xlat
mov
jne
cmpb
mov
xchg
call
sahf
ss
sarl
and
jmp
in
ljmp
jmp
push
nop
jnp
xchg
ljmp
xchg
js
ret
sbb
je
insb
jecxz
mov
jb
mov
pusha
imul
addr16
mov
faddp
sbb
test
mov
inc
bound
mov
mov
leave
aad
mov
hlt
mov
push
jnp
jle
jp
aam
or
push
sub
cmp
cmp
pop
push
add
movsl
fisttpl
test
xor
loope
test
push
mov
in
rorb
hlt
xor
in
push
pop
insb
daa
xchg
cmp
inc
lds
xlat
inc
push
leave
add
sub
and
pop
nop
pop
jge
and
and
add
xor
imul
sar
das
out
add
push
shrl
jle
repz
stc
aam
mov
sbb
inc
scas
shrb
into
jb
cmp
das
inc
and
lods
sub
pop
adc
push
xchg
mov
int
add
fsubl
repz
push
push
out
movb
mov
pop
xchg
insl
mov
mov
aas
pop
inc
scas
inc
shld
and
ss
cli
mov
xlat
iret
mov
jle
push
jno
call
movsl
das
daa
testl
xchg
adc
mov
popf
cld
scas
and
cmp
jo
or
jmp
lods
in
and
xchg
fwait
mov
jo
gs
dec
push
inc
int
mov
into
push
popf
mov
jge
xchg
xchg
pop
pop
mov
mov
faddl
jb
mov
adc
sbb
jp
data16
shrb
ror
jp
aaa
aam
and
xchg
xlat
pop
loope
cwtl
lods
scas
push
stos
dec
xchg
cmpsb
stos
mov
fdivr
jle
mov
mov
hlt
pop
iret
seta
or
scas
loope
clc
je
cs
mov
mov
xor
aas
jl
jle
push
mov
icebp
inc
arpl
fidivs
jne
cmp
in
or
icebp
shlb
mov
cmp
fists
adc
cmpsl
sbb
jle
lock
push
cmp
and
lahf
jb
ret
outsl
and
into
lea
cwtl
dec
dec
je
mov
cmp
mov
adc
cli
insb
sub
das
inc
daa
cmp
fs
fstl
in
movsb
xchg
mov
cmp
inc
cld
sub
pop
pusha
movsl
sti
cmp
popa
xor
stos
sub
and
dec
and
sub
out
dec
aam
push
movsb
jle
mov
add
mov
loope
ds
add
jle
aaa
or
push
pop
jbe
inc
lods
imul
sub
bound
pop
cmpsl
arpl
lcall
inc
pop
mov
lcall
sub
fists
and
fwait
mov
in
and
pop
shrb
pop
add
test
cmp
cmp
jne
xor
arpl
add
out
jl
mov
bound
fsts
test
mov
xchg
cmp
out
je
mov
out
test
push
clc
aad
aad
jge
dec
mov
sbb
or
in
inc
or
inc
imul
pop
mov
lods
or
idiv
cld
and
jg
ljmp
mov
decb
iret
mul
mov
pop
hlt
mov
in
adc
mov
or
int
mov
and
mov
cmp
sub
xlat
int3
inc
mov
xchg
popa
and
add
cltd
shll
sub
pop
das
sbb
fs
ret
sbb
lods
test
or
aas
popa
push
pop
jne
inc
push
scas
add
fs
push
adc
pop
jns
adc
cmpb
ja
cli
push
xor
testb
lock
aas
inc
inc
stos
je
mov
push
filds
mov
je
mov
cmp
xchg
push
test
fwait
or
xchg
mov
cmp
stos
test
push
mov
decl
mov
popw
jno
movsl
xor
cli
aas
mov
sbbb
imul
clc
adc
in
pop
pop
call
lods
and
push
movsl
sub
cld
inc
bound
outsl
xchg
or
push
das
int3
sti
lahf
cmp
mov
and
xor
insb
cmp
jge
xchg
mov
cmp
in
hlt
add
inc
mov
outsb
test
js
cmp
subl
add
sahf
jecxz
std
pusha
adc
dec
xlat
push
cwtl
lods
adc
and
outsl
pushf
lcall
sarl
call
lods
popa
test
in
jle
scas
mov
adc
mov
jmp
ficompl
pop
outsl
or
jp
sahf
push
xchg
xor
push
icebp
jp
push
insl
ror
or
ds
jbe
movsb
dec
insl
jg
sub
mov
cs
xor
xchg
outsl
inc
inc
sub
dec
lods
mov
les
testw
mov
in
divl
mov
xor
cmpsl
cmpsb
cmp
cld
pop
rol
cld
sbb
and
sub
sarb
add
xlat
mov
iret
dec
addr16
and
std
jne
sti
jle
repz
outsb
adc
jecxz
or
movsl
aas
xchg
leave
jg
xchg
push
lods
mov
ljmp
cmp
lds
push
outsl
in
scas
and
push
mov
aaa
dec
stc
xchg
mov
in
popa
pop
push
lods
and
inc
mov
lock
jp
int3
mov
lods
cmpsb
movsb
and
add
mov
popa
pop
loope
push
mov
mov
mov
pop
jbe
cmpsl
push
imul
sub
mov
ds
jl
mov
pmaxsw
test
pop
fsubl
lds
aaa
gs
out
pop
xor
aaa
je
mov
int
jge
into
xlat
mov
repnz
xor
stc
loop
mov
and
imul
cmp
mov
sarb
in
insl
into
je
outsb
sbb
cli
repz
jo
fdiv
xlat
sub
lret
test
push
cmc
cld
dec
loope
cmp
in
je
into
es
jecxz
mov
ss
mov
cmp
and
sub
scas
pusha
ds
and
add
push
xchg
push
cmp
cmp
jle
dec
jp
push
adc
xor
adc
jbe
pop
imul
movsb
sub
lea
inc
mov
mov
xor
jbe
and
mov
add
movsb
pop
popa
cld
das
idiv
mov
xor
insl
iret
stc
test
test
outsb
push
sbb
mov
push
add
mov
cmp
fucom
int
pcmpeqb
pop
sub
cmp
insb
out
call
hlt
and
pusha
and
cmpsb
push
inc
sub
pop
add
or
mov
insl
cmp
jge
repnz
or
sbb
xlat
add
xchg
insb
and
stos
mov
jb
inc
mov
in
js
mov
inc
xor
dec
scas
imul
sbb
mov
dec
pop
loope
mov
aaa
aam
in
xchg
push
push
cli
mov
pop
scas
insl
jnp
push
sub
mov
xor
add
push
subb
hlt
jmp
cmp
mov
pusha
mov
in
dec
popf
jp,pt
jmp
ds
pop
pop
leave
mov
jmp
in
mov
mov
decl
fwait
in
je
in
in
xchg
push
add
sti
or
xchg
lcall
xchg
xor
jmp
add
js
jnp
nop
add
cld
add
call
add
add
incb
add
jo
outsl
incl
add
popf
add
xor
call
clc
xchg
jp
sbb
cmp
cmc
push
mov
jb
add
out
test
add
jl
in
add
decl
mov
add
add
je
jmp
add
inc
add
fs
push
add
in
popf
add
add
lea
jmp
out
lcall
add
pushl
push
dec
add
push
ljmp
std
mov
add
in
add
popl
add
add
sahf
add
out
ljmp
add
and
incl
xchg
incl
add
cld
ljmp
incl
add
add
pop
incl
clc
pushl
mov
jmp
lcall
jns
mov
push
imul
decl
cmpsl
ljmp
push
cltd
addl
stc
add
add
call
jmp
cmp
std
call
add
incl
stc
jmp
lcall
jp
add
jl
in
add
jmp
pop
xchg
sbb
jl
mov
cli
xchg
mov
in
jbe
mov
xor
xchg
xor
std
daa
sub
incl
add
add
incl
decl
incl
add
or
add
cmp
dec
jne
jns
outsl
imul
gs
gs
addr16
jb
bound
imul
outsb
imul
je
push
jae
arpl
outsl
jae
push
gs
jo
fs
arpl
jns
jns
jns
jne
popa
jb
fs
data16
push
and
incl
in
call
call
inc
and
test
add
push
out
xchg
xchg
xor
scas
cmp
cmp
in
add
popf
bound
inc
out
sub
in
addb
cmp
add
push
jnp
cld
in
cld
add
or
jbe
add
jnp
call
add
jmp
incl
addr16
mulb
mov
incl
push
add
lcall
xchg
lcall
mov
xchg
add
incl
ljmp
incb
cld
add
pop
cld
popf
ljmp
aaa
data16
dec
mov
add
pushl
sarl
call
out
pop
and
cltd
incl
add
jl
add
test
xchg
add
mov
incl
add
add
and
add
clc
inc
insl
add
cli
test
push
cld
add
add
push
add
add
incl
xchg
xchg
xchg
cmp
and
mov
call
jp
add
jnp
mov
js
inc
jge
add
out
aaa
fwait
mov
lcall
adc
add
add
mov
jmp
incl
add
and
jp
data16
cltd
std
loop
incb
std
add
mov
cwtl
add
std
adcb
sbb
add
call
incl
incl
cld
jae
add
mov
mov
add
push
add
decl
add
std
xorl
add
fbld
xchg
push
lcall
sbb
mov
xchg
std
sub
mov
xorl
xor
add
les
add
xor
std
mov
call
cmp
std
xchg
cmpl
cmp
add
jmp
mov
cld
jmp
ljmp
add
test
in
add
mov
nop
adcl
std
add
popf
ljmp
cld
js
popf
jnp
cld
xor
cld
add
push
jb
incb
orl
add
mov
daa
sub
add
les
add
push
stos
adc
mov
and
sbb
repz
lods
fs
iret
pushf
push
cmp
loop
cmp
ljmp
lods
imul
mov
inc
pop
inc
xchg
pop
movsb
or
out
sbb
and
add
sub
mov
sub
movsl
xchg
scas
test
popf
cwtl
ja
popa
or
and
fwait
lcall
icebp
xchg
sub
and
rorl
pop
test
add
or
hlt
inc
dec
out
sbb
test
adc
shl
or
ficompl
lds
mov
push
push
stc
insl
loopne
lret
mov
inc
stc
cmp
das
mov
xor
mov
jp
push
enter
jge
cmpsb
pushl
cs
mov
cmpsb
push
scas
mov
std
cmp
mov
xchg
movsb
or
int3
mov
mov
out
push
adc
pop
push
data16
pop
das
hlt
push
stos
sbb
dec
mov
loopne
mov
and
mov
jle
xchg
push
dec
movsl
sub
cld
outsl
and
jae
jge
out
mov
shll
pop
adc
dec
daa
mov
inc
cld
sbb
das
insl
pop
push
dec
int
out
or
ss
je
pop
das
std
add
xor
jmp
pusha
lods
sbb
sub
aaa
jno
call
out
pop
xchg
or
test
sub
repz
ret
sbb
fbstp
cmp
adc
mov
fs
sub
pusha
sub
arpl
pop
mov
cmpb
dec
sub
jno
fwait
push
inc
das
fdivrs
aas
cli
add
or
push
cmp
dec
push
insl
or
fnstcw
lea
xchg
fs
ss
inc
sub
sbb
jae
and
test
jb
cmp
add
in
push
int3
or
jl
push
inc
inc
push
add
push
sti
jl
int
push
fisttpl
sub
cltd
in
stos
mov
sbb
fsubrp
or
cmp
scas
and
add
or
ds
inc
jl
mov
cmp
bound
sbb
jae
testb
mov
pop
cli
imul
add
fists
lcall
adc
insl
mov
mov
loop
push
jl
jge
cwtl
int3
push
xchg
inc
mov
mov
aaa
inc
sbb
insl
cltd
xchg
inc
xchg
and
push
scas
inc
inc
mov
aam
mov
call
dec
push
pop
iret
in
xchg
jb
xchg
movaps
mov
mov
sbb
aam
push
sbb
inc
arpl
add
add
fdivr
sub
movsb
fcomps
or
lds
xchg
les
jg
jge
test
mov
cmpsl
aam
shll
mov
sbb
rolb
clc
cli
sub
shlb
movsb
insb
jmp
outsb
jge
rol
cmp
adc
lret
icebp
jl
hlt
sub
cli
pop
imul
dec
xor
jnp
sbb
bound
sub
outsb
test
jbe
stc
dec
dec
and
shlb
int3
xchg
int3
inc
std
or
jno
cmp
fildll
ss
fcoms
mov
push
or
pop
sahf
sbb
cmp
ss
mov
push
sbb
mov
inc
fldcw
stos
aad
stos
dec
jmp
shr
mov
push
push
and
inc
mov
into
xchg
dec
jae
cmp
sarb
dec
mov
xchg
inc
fisttpll
or
xor
xchg
ret
sub
incl
add
test
bound
rcrl
jmp
incl
call
loopne
add
movsl
cmp
and
mov
outsl
add
add
repz
add
mov
and
or
and
cli
shrb
jae
jmp
cmp
mov
mov
mov
and
push
add
fldenv
push
cmp
loope
add
add
addb
add
cs
cmp
lahf
mov
dec
sub
xor
jle
add
rclb
add
adc
shlb
and
testl
sub
outsl
shll
mov
mov
loopne
stos
mov
add
inc
out
push
dec
out
incl
add
inc
add
enter
push
add
sub
add
add
arpl
mov
mov
add
pushf
mov
add
stc
mov
sub
add
lret
add
or
push
mov
add
mov
mov
and
add
push
insb
lods
icebp
add
jle
and
sub
sbb
add
push
and
and
push
sbb
add
add
pop
mov
loop
add
add
out
andl
inc
and
fmull
incl
scas
xchg
in
pop
cmp
push
and
xlat
addl
mov
lds
jle
add
add
fdivr
test
mov
sub
or
xor
adc
add
and
push
jbe
repz
add
or
xchg
mov
test
mov
add
in
add
mov
add
push
inc
mov
and
inc
sub
and
xchg
fdiv
add
hlt
fwait
rorb
sub
sti
add
call
aas
lds
add
push
add
cld
jne
dec
nop
mov
mov
sbb
inc
sub
incl
and
jns
loope
and
dec
sbb
push
mov
xlat
out
adc
in
xchg
xor
add
or
add
and
add
add
add
imul
call
add
pop
stos
subl
add
push
in
mov
lret
mov
add
xlat
dec
push
sub
add
lods
pusha
adc
jecxz
loop
movsb
loop
cwtl
and
aam
or
loope
in
inc
pushw
loop
in
push
lock
jmp
inc
and
jle
and
ljmp
mov
inc
lea
push
out
lahf
jb
pop
and
or
add
add
add
int3
sub
repz
add
mov
das
add
add
sbb
jle
push
lcall
arpl
les
mov
lea
xchg
mov
add
stos
cmc
adc
pop
or
pop
das
ja
pop
incl
add
jle
inc
andl
fdivr
add
add
mov
jp
nop
ret
sahf
sarb
inc
mov
fdivrp
pusha
add
dec
movsl
stos
outsl
jge
or
dec
add
jae
js
add
mov
scas
push
or
repz
add
mov
mov
outsl
jecxz
outsb
dec
shrb
cli
cmp
std
add
addb
es
incl
ret
jbe
stos
add
dec
add
push
pop
jle
add
jb
add
add
and
cltd
lock
mov
add
aad
push
daa
sbb
popf
loop
add
add
pop
jb
add
push
push
sub
or
add
jg
sub
jo
or
add
sub
add
add
add
enter
push
add
add
sbb
into
mov
lods
loope
and
mov
push
inc
xor
jbe
into
shrl
add
add
add
jecxz
out
outsl
xor
add
aas
int3
cmc
xchg
int
out
dec
fs
add
add
loop
xor
cmpsl
add
dec
add
outsb
jno
bound
mov
or
add
int3
mov
add
sub
and
mov
xorb
sub
aas
cmc
repz
aas
xchg
adc
xchg
outsb
outsl
add
add
mov
out
add
add
adc
pop
mov
and
int
dec
les
mov
add
add
jle
add
repz
mov
mov
xor
add
and
subb
jle
adc
sbb
nop
add
cmpsl
sbb
repnz
inc
cmp
mov
out
fwait
add
add
or
mov
imul
jge
repnz
add
and
int3
jmp
xchg
testl
or
sbb
stos
pusha
loope
inc
ds
pop
add
add
add
fildll
pop
sbb
sbb
add
add
mov
stos
stos
pop
roll
and
adc
movsb
scas
scas
xchg
fisubl
jecxz
jmp
jge
call
pop
jp
add
jle
pop
mov
cmp
adc
test
out
inc
xchg
hlt
add
in
or
fcmove
add
pop
jae
and
popa
mov
outsl
sub
call
ja
add
add
pop
ja
pop
std
sub
add
in
loop
add
outsl
fcompl
mov
add
mov
mov
fcomp
mov
in
mov
xorl
data16
shlb
and
mov
add
rcrb
inc
add
jmp
ret
shlb
add
int
inc
call
dec
enter
push
fiadds
lahf
call
pop
aaa
outsl
add
or
aad
or
addl
add
and
mov
in
insl
add
out
jno
mov
jmp
cwtl
xor
loop
inc
stos
and
add
add
mov
dec
adc
jmp
and
add
jle
inc
dec
dec
movb
add
fcompl
pushf
outsl
cmpsl
shlb
or
cmpsl
adc
pop
and
dec
xor
and
pop
cmc
nop
das
das
and
mov
add
mov
out
push
and
out
add
pop
jnp
gs
mov
dec
jl
lods
jp
pop
sub
add
add
add
adc
imul
add
cwtl
push
lcall
jmp
mov
incl
add
and
mov
dec
stos
incl
imull
jo
add
add
lea
add
add
icebp
imulb
jle
inc
repnz
dec
les
subb
push
les
jmp
cmp
fsub
jecxz
mov
push
sbbl
ds
cmp
adc
or
dec
adc
jle
les
and
cmc
adc
jl
in
xorl
add
jecxz
in
test
outsl
jg
pop
call
shrl
inc
add
add
repz
ja
add
test
lock
incl
add
add
frstor
add
mov
add
add
int
movsb
js
or
jmp
sub
imul
in
sbb
or
sti
fnstcw
pop
out
out
add
add
sbb
pop
mov
add
sarb
jmp
cli
adc
mov
pushf
fwait
xchg
sbb
loop
jno
mov
add
add
loop
add
pop
xchg
push
push
sbb
or
jecxz
outsl
mov
inc
add
inc
add
std
add
add
call
ret
jmp
add
lcall
je
out
add
std
xor
add
or
dec
call
jo
mov
loop
outsl
add
nop
and
and
push
add
or
adc
dec
fsubs
jle
xchg
idivb
mov
arpl
aaa
out
add
add
add
add
add
int3
cld
icebp
pop
add
add
mov
add
add
add
jnp,pt
xchg
mov
mov
push
test
sbb
xor
add
sub
imul
add
roll
inc
xchg
and
push
shrl
and
stos
mov
clc
and
out
jge
dec
cs
addr16
sahf
dec
jmp
mov
adc
cli
add
imulb
sub
jecxz
mov
sub
add
aam
add
add
add
aaa
ljmp
sub
add
gs
sarb
xchg
push
add
loopne
mov
jl
cmp
out
add
add
insb
popa
add
jecxz
xchg
mov
loope
sub
add
add
in
sub
ljmp
add
dec
push
js
filds
std
mov
neg
addl
sub
lahf
loope
mov
push
lods
icebp
add
loop
add
into
test
test
add
add
adc
lods
mov
pop
les
cld
sub
xorl
pop
add
mov
rcl
add
add
mov
pop
push
jbe
lahf
mov
and
sub
pop
add
and
das
lcallw
add
pusha
mov
pushl
xor
jg
inc
add
lret
add
push
cmp
or
out
add
add
mov
mov
mov
adc
and
adc
jle
sbb
add
push
adc
jg
mov
daa
sbb
decb
fdivrp
dec
mov
add
outsl
pop
xchg
jno
ds
add
icebp
xchg
cmp
and
out
out
jae
in
or
add
pop
ja
aam
or
add
pop
cmp
leave
mov
sub
mov
sub
add
xchg
aad
and
add
add
add
mov
pusha
xchg
clc
add
add
add
loopne
add
insl
add
mov
mov
push
dec
testl
inc
jbe
stos
ds
add
pop
pop
cwtl
add
jle
add
mov
decl
cmp
jp
or
iret
fists
or
mov
mov
inc
dec
cmpl
nop
xor
jl,pt
push
and
outsb
repz
es
xchg
add
add
xor
incl
inc
test
cmpsl
push
les
orl
jnp
outsl
mov
cmp
mov
inc
mov
or
sub
cmp
ret
sub
or
pop
fcomps
popa
add
inc
sub
sysenter
mov
and
pop
add
add
insb
push
jmp
incl
out
mov
sbb
add
mov
add
add
sbb
add
mov
call
add
test
sub
idivl
repz
std
add
pop
scas
fsub
push
add
add
repz
jno
dec
add
mov
add
or
or
add
cld
and
inc
mov
add
adc
decb
mov
jmp
call
imul
and
aas
cmp
shr
pop
dec
add
es
inc
mov
push
les
std
add
add
add
xchg
add
and
lcall
push
mov
add
xlat
cld
sbb
dec
push
add
add
mov
xor
add
push
cwtl
or
out
aaa
dec
mov
loope
inc
jge
push
add
add
popf
pop
add
add
mov
add
and
pop
add
jecxz
in
push
push
cmpb
push
mov
fisttpll
and
out
sbb
mov
mov
add
xchg
push
sbb
dec
add
lds
add
or
or
fdivrs
loop
scas
movsl
out
cmp
mov
aam
jbe
cwtl
fldenv
hlt
push
fs
jge
jecxz
les
pop
test
loope
or
popa
mov
jmp
loop
mov
add
mov
adc
stc
dec
test
mov
pushf
cmp
pop
cltd
and
nop
in
add
add
repz
out
shll
add
mov
adc
mov
out
cmp
xchg
ret
mov
mov
add
and
and
pop
push
loop
fdivr
popa
cmp
add
sub
in
ds
repnz
repz
mov
loop
fimull
loope
popf
mov
ljmp
or
rorl
sti
xor
incl
add
popa
enter
jle
jo
inc
push
add
add
call
jne
leave
mov
out
out
fnstenv
testb
push
adc
or
aas
orb
adc
rolb
les
add
leave
xorb
xor
add
jmp
std
dec
mov
add
add
aas
jbe
int3
in
or
push
int3
sbb
pusha
pop
xchg
dec
ficoms
in
xchg
dec
jg
push
mov
add
rolb
add
add
mov
scas
add
loope
daa
rcr
add
loop
add
ja
dec
inc
lahf
pop
mov
and
popf
add
sub
mov
push
push
scas
jns
or
sub
and
loop
stc
add
xor
and
aad
add
add
mov
pop
stos
and
add
add
xchg
lods
sarb
sub
movsb
add
and
mov
cmp
add
shll
add
pop
xchg
mov
add
mov
aad
inc
dec
and
add
outsl
dec
pop
lock
or
mov
incl
adc
out
test
add
test
mov
add
add
incl
in
inc
flds
outsl
pop
hlt
lods
incl
jle
add
in
ja
push
mov
add
sub
arpl
mov
incl
movb
add
push
in
mov
cli
stc
lock
loop
add
fwait
sub
mov
add
add
test
in
add
and
or
mov
loop
enter
add
or
and
bound
daa
roll
mov
xor
and
jmp
add
mov
pop
xlat
loop
add
cmp
add
repnz
pop
or
jecxz
sub
add
add
add
add
pushf
jmp
incb
cmpsl
push
decb
je
call
mov
dec
add
inc
ret
popl
ficoml
mov
mov
incl
out
jb
cwtl
adc
pop
add
sbb
add
add
add
pop
mov
outsl
or
popa
sub
sbb
das
lods
inc
dec
push
cmp
lahf
and
pop
incl
xlat
push
mov
call
fwait
add
adcl
add
add
xchg
outsl
out
mov
mov
ds
incl
addb
and
and
jg
push
mov
xchg
push
sbb
mov
add
add
imul
outsl
add
je
add
adc
pop
sahf
cs
mov
jno
fwait
xchg
add
push
push
flds
jns
mov
jmp
xchg
mov
adc
add
jg
push
push
jbe
out
sbb
and
jg
push
sub
popa
mov
add
xor
add
rclb
jb
out
sub
iret
add
add
add
cmc
loopne
std
jb
mov
pushf
xchg
lea
add
push
cmp
and
add
loope
int
andl
outsb
cmp
jmp
and
add
rorb
enter
dec
add
addb
add
add
and
add
add
xchg
shl
in
inc
add
out
mov
in
sub
and
mov
add
xor
jae
add
add
xor
movsl
add
push
add
and
ds
addr16
mov
and
and
in
jge
outsl
movsb
push
movsl
lahf
xor
xor
or
xchg
out
add
dec
mov
jl
add
and
sldt
add
add
pusha
jmp
mov
add
add
jl
loopne
fistps
lret
add
test
add
push
jbe
jne
xor
or
jle
jo
push
lret
add
in
ljmp
add
xchg
lods
pop
pop
push
popl
add
in
xchg
cmp
sbb
add
movsl
loop
dec
incb
add
mov
add
decl
imul
and
adc
add
das
loope,pt
cmp
xor
addr16
pop
mov
push
ja
add
jmp
or
inc
add
sub
cwtl
std
cmc
or
loope
add
jb
add
adc
add
or
add
loope
cmp
addl
sahf
in
pop
add
inc
push
jb
and
jnp
sbb
xlat
dec
pop
add
add
les
mov
in
add
int
test
mov
add
nop
add
or
push
movsb
sbb
jae
and
mov
movsb
add
and
sub
jle
add
add
lea
out
mov
mov
jnp
jo
jnp
add
xchg
add
add
mov
inc
icebp
add
loope
push
in
jne
sbbl
out
test
mov
or
dec
cmp
iret
add
cltd
jmp
cld
rorl
loop
inc
mov
dec
add
clc
mov
add
push
mov
adc
rolb
add
add
jge
push
add
jae
clc
ret
add
and
lds
add
mov
xor
pop
loope
push
hlt
es
aad
add
jecxz
out
and
push
add
insl
dec
aaa
mov
xor
enter
cmp
dec
lods
dec
scas
insb
add
add
aaa
pop
call
add
adc
add
push
out
dec
shl
insb
sldt
add
and
and
xchg
push
in
aas
sbb
addr16
add
jns
fs
dec
add
mov
mov
and
mov
add
add
add
sbb
add
and
popf
add
add
sbb
pop
test
mov
sub
sbb
mov
and
add
add
imul
je
push
jbe
js
addr16
imul
addr16
dec
xor
jp
add
and
cmpsb
add
repz
add
fisubl
mov
cltd
stc
shl
or
sub
adc
add
add
cmpl
add
push
add
add
jle
movsl
mov
das
add
sbb
adc
add
addl
jno
mov
jae
dec
pop
push
add
leave
lret
mov
mov
jp
or
add
jle
add
jle
mov
negb
scas
mov
incl
add
call
icebp
add
mov
mov
xchg
adc
aaa
jb
dec
xchg
iret
movsl
add
adc
pop
aad
fbstp
repnz
add
or
out
inc
loope
shll
insl
cli
lcall
push
mov
cmpsl
mov
mov
add
shrb
jae
add
out
mov
das
add
pusha
xorl
add
add
jne
sub
outsb
jae
mov
add
scas
inc
addb
or
mov
inc
push
scas
mov
add
add
mov
jge
lock
fisubs
into
cmpsl
imul
cli
jmp
add
add
popf
call
pop
add
test
aas
je
and
jge
ja
fnstcw
gs
jne
mul
jecxz
xor
test
jbe
movsb
and
aad
loop
mov
add
push
add
mov
pop
ucomiss
add
lcall
xchg
lods
mov
add
add
dec
cmc
sub
or
sbb
loop
jbe
jbe
cmpsb
mov
push
mov
in
fadds
loop
incl
and
jg
add
add
ret
jb
or
add
movsb
repnz
push
cmp
outsl
and
dec
das
xor
jle
outsl
hlt
pop
and
add
addb
xor
fcmovnb
iret
mov
in
dec
mov
enter
add
out
psrlq
jne
inc
add
xchg
push
jb
dec
jle
stos
imul
add
xchg
decl
movsb
add
jb
mov
add
jl
dec
das
pop
inc
add
cmp
imul
int3
out
push
add
mov
adc
add
cli
addr16
lcall
jns
and
or
mov
mov
and
js
les
add
add
cmp
jno
shrl
push
xchg
add
add
clc
incl
push
add
jae
jae
xchg
push
xchg
aam
add
adc
addl
in
sbb
lods
jb
adc
add
or
jle
inc
cmp
fwait
movl
cmp
in
repz
ret
fs
stos
push
pop
sub
push
movsb
jne
outsl
add
mov
add
add
aas
dec
dec
xorb
jmp
xchg
jl
add
incl
or
outsb
mov
in
sub
add
lahf
sbb
xor
add
push
inc
bound
or
add
jo
xchg
add
add
mov
jb
sahf
outsl
add
or
lods
fnsetpm(287
out
les
add
push
fs
and
add
and
fsub
loope
mov
scas
scas
add
cmpsl
dec
in
mov
xchg
insb
repz
mov
and
outsb
dec
cmp
add
lods
push
or
pop
pop
or
repnz
ficoms
out
stos
mov
push
movsb
filds
add
cmp
adc
xor
out
add
jns
mov
pusha
add
add
add
add
sub
pushl
mov
mov
xchg
add
jl
cmpsl
inc
imul
or
orl
add
add
push
nop
or
nop
and
call
push
pop
inc
xor
sbb
pushf
jmp
fistpl
leave
add
add
dec
add
sub
add
jecxz
add
or
pop
in
incl
jecxz
test
lahf
mov
inc
xchg
add
or
and
test
or
sub
jb
add
jg
and
jno
mov
add
add
add
ja
push
test
jecxz
xchg
into
cmp
inc
sub
repz
incl
call
push
inc
push
mov
sub
das
add
addl
aad
add
aam
xchg
sbb
pushl
add
test
mov
add
adc
pop
stc
add
add
mov
jmp
add
push
ret
add
loop
dec
mov
xchg
data16
inc
out
dec
and
jg
incl
sbbl
xor
add
cltd
add
rolb
add
ds
push
xor
fnstenv
add
and
sahf
or
das
sub
mov
jecxz
nop
je
xchg
icebp
movsl
cmp
mov
and
jno
das
inc
mov
dec
add
jbe
jp
ret
add
and
fcomp
shll
loop,pt
jbe
jg
or
das
or
mov
bnd
mov
add
or
loope
cmpb
sbb
loope
mov
add
mov
push
add
add
mov
add
add
add
and
add
push
add
push
mov
repnz
out
ljmp
jl
jmp
cmp
loop
cmp
in
and
call
xor
in
js
loope
mov
add
jno
lret
add
add
jns
movsb
sub
add
ds
les
cltd
push
sub
sar
fmul
fimull
add
push
mov
loopne
add
add
in
cli
xchg
daa
inc
add
add
add
dec
push
sbb
rcrl
add
add
cwtl
mov
adc
and
inc
sahf
fwait
and
jecxz
inc
jmp
add
or
add
or
add
and
add
aaa
loop
mov
add
out
loopne
adc
sbb
add
add
inc
lods
mov
es
imul
fisubl
jmp
mov
add
fsubrp
lods
or
imul
mov
rolb
add
jecxz
lret
add
in
mov
add
adc
add
or
mov
call
incl
decl
addl
add
mov
push
and
jle
xchg
mov
add
jg
mov
lahf
xor
js
add
and
add
lahf
mov
jle
add
cmp
add
loopne
add
add
insl
mov
cmp
cltd
pop
lcall
lcall
add
jno
rcll
add
popa
push
in
sub
sahf
ret
push
jle
mov
mov
add
iret
mov
jo
add
mov
add
sbb
add
add
add
add
adc
ret
in
push
sbb
xor
sti
fwait
or
inc
dec
in
inc
in
loop
cltd
xor
mov
repz
and
test
incb
loop
xor
add
add
add
add
or
int3
cmp
sbb
in
popf
adc
dec
add
rorb
rep
in
leave
lret
loop
adc
jle
add
daa
sbb
mov
xor
inc
and
dec
add
add
jp
mov
add
xor
mov
and
insl
das
inc
lahf
lods
sub
insl
jg
flds
adc
add
dec
and
push
inc
filds
add
clc
icebp
orb
add
push
sbb
call
add
mov
jo
addl
and
sbb
mov
scas
sub
dec
loop
adc
pop
jmp
xchg
insl
jno
or
add
add
das
add
movsb
mov
and
pushf
inc
insb
jns
add
in
test
pop
test
mov
mov
pop
mov
sub
jmp
incl
add
jp
fnclex
jecxz
ljmp
add
and
push
add
roll
add
lds
iret
stos
sbbb
add
push
xor
ljmp
push
daa
add
enter
jns
add
into
jp
aam
ljmp
loop
add
add
in
std
push
xor
in
test
xchg
mov
mov
add
cli
pop
xchg
dec
add
dec
xchg
insb
rorb
cmp
sbb
xchg
lds
das
nop
cmc
es
fldl
out
loop
pop
adc
hlt
add
int
add
add
lcall
pop
push
inc
add
add
push
test
iret
sahf
add
adc
add
ds
push
repz
push
add
jle
inc
enter
imul
arpl
dec
les
incl
jge
adc
scas
add
add
sti
out
cmp
push
aam
push
das
daa
jb
and
add
or
arpl
jmp
add
jg
setl
xchg
loope
mov
add
mov
ds
add
push
ds
stc
and
jge
push
arpl
mov
pop
leave
xor
ret
in
xor
cmp
add
jecxz
loopne
mov
add
or
add
xlat
sbbb
add
ljmp
sbb
in
add
and
dec
mov
add
test
add
and
pop
pop
add
repz
push
in
clc
movsl
notb
inc
mov
insb
sub
xor
and
incl
add
sub
cmp
add
jecxz
push
mov
xor
aad
mov
cmpl
call
add
pop
xlat
getsec
dec
or
jmp
or
repz
mov
jmp
add
lds
add
mov
or
add
xlat
mov
in
xchg
in
jle
shr
lahf
ret
add
add
mov
add
add
add
add
lcall
popa
add
add
ret
xchg
clc
jecxz
daa
xchg
in
inc
add
orb
insb
xchg
cmc
add
lahf
add
fldl
bound
add
jle
add
add
cmp
add
or
aam
push
and
sbb
mov
push
roll
sbb
pop
loope
cmpsl
loope
xchg
fisttpl
jle
add
stos
dec
sbb
xchg
add
push
sbbl
add
xchg
lcall
decl
jnp
cltd
mov
xchg
cli
ret
out
dec
out
cmp
and
add
add
and
les
pop
out
gs
jb
xchg
test
jecxz
cmpsl
sub
hlt
scas
add
push
mov
mov
add
xor
or
and
jg
jg
add
or
add
int
in
testb
sub
fstl
in
xchg
sbb
out
sbb
jae
mov
add
add
insb
ror
nop
mov
sub
add
add
dec
add
pop
add
cmp
add
mov
out
push
cmp
inc
imul
outsb
shll
mov
in
decl
sub
mov
pop
arpl
add
repz
xchg
clc
mov
add
mov
ret
xchg
adc
inc
add
cmpsl
pop
out
out
pop
dec
mov
jmp
ja
mov
aaa
jns
push
mov
and
and
in
push
test
clc
mov
add
add
fs
add
jge
outsl
movsb
xor
enter
inc
outsl
in
push
dec
jno
test
mov
and
mov
add
inc
idivl
add
bound
add
mov
add
or
stos
xchg
inc
xchg
add
jmp
mov
shl
push
mov
push
jmp
movsb
xlat
and
and
fdivrl
test
call
dec
mov
add
mov
call
call
mov
or
xadd
aam
ret
add
or
or
ja
xor
add
cmp
lcall
fidivl
and
in
lods
jae
and
or
add
xchg
xchg
js
push
sub
mov
or
pop
cmpsb
add
mov
add
or
push
inc
cmp
add
shrl
add
inc
mov
dec
cmp
add
inc
fcmovbe
add
xchg
add
scas
mov
mov
fneni(8087
add
ds
rdtsc
push
add
add
add
adc
pop
inc
test
add
call
and
add
add
xor
rolb
add
mov
push
insl
adc
add
and
push
add
and
mov
add
adc
add
fldcw
outsl
dec
inc
test
daa
and
push
ret
fwait
mov
out
and
add
mov
das
faddl
add
out
push
arpl
and
sbb
lods
out
faddl
xor
add
add
add
mov
add
fdiv
out
sub
or
jecxz
popa
mov
dec
lds
stos
inc
add
sbb
out
insb
sbb
les
add
or
adc
out
mov
and
add
add
les
fwait
sysenter
inc
adc
add
mov
cs
mov
out
pop
jge
lds
jl
mov
sarb
xchg
out
add
add
inc
xor
cmpl
push
xchg
push
add
or
xor
in
pusha
add
add
mov
incl
add
mov
iret
pop
add
dec
or
add
xor
out
add
jecxz
bound
add
add
add
in
add
xor
and
jmp
add
out
pop
mov
stc
inc
xlat
add
rolb
jl
add
push
and
add
add
jecxz
out
orl
lahf
add
in
add
mov
je
add
cld
hlt
pop
aad
add
and
addr16
shlb
jecxz
insb
xchg
mov
dec
dec
xor
add
add
add
push
sub
dec
add
shlb
add
add
popa
push
push
inc
add
jle
sub
add
or
add
fidivrl
inc
sub
gs
lret
cmp
enter
add
out
xlat
dec
popf
fidivs
fisttpl
or
or
and
mov
xor
add
aaa
mov
test
sub
sub
lods
add
mov
dec
das
les
add
or
push
arpl
inc
jle
data16
push
lahf
add
add
add
mov
ficoml
mov
add
xor
test
out
adc
popf
in
add
lds
pushf
jle
jmp
fstpl
jmp
xor
aad
mov
add
das
ret
sbb
dec
push
mov
push
in
xchg
shr
imul
std
test
jmp
add
mov
and
add
fcoms
sub
add
xor
aam
add
das
and
addr16
ret
and
mov
xorps
or
and
fisubl
clc
add
push
es
push
jle
out
add
add
jne
add
arpl
dec
add
jle
add
sbb
mov
add
mov
add
test
rcrb
cmpsl
imul
sub
jecxz
insb
repnz
and
lcall
add
add
adc
out
incl
mov
mov
mov
and
sbb
stc
mov
mov
add
or
pop
mov
add
sub
jb
add
push
cltd
adc
jle
add
add
or
add
mov
sub
dec
mov
add
sbb
push
push
cwtl
test
nop
adc
filds
decl
add
lock
stc
sub
add
add
mov
add
add
in
aas
out
jns
add
add
jo
mov
mov
ljmp
mov
xchg
outsl
loope
xchg
imul
add
fsts
mov
add
add
lds
or
add
add
inc
mov
lds
and
mov
rol
xchg
lret
pop
popa
loopne
jne
test
jnp
add
call
xchg
sub
push
add
incl
out
mov
or
imul
and
add
dec
add
xor
jns
xchg
jne
out
ret
xchg
mov
jecxz
incl
add
mov
jecxz
xchg
mov
xchg
mov
outsl
add
xor
ljmp
and
arpl
add
add
push
popf
mov
jecxz
or
sub
incl
add
add
test
lcall
and
mov
or
nop
js
loop
inc
add
add
out
cmp
mov
jmp
jne
add
sbb
repz
and
dec
sbb
mov
xchg
pop
sti
sub
mov
sbb
in
incb
incl
fsubl
add
pop
mov
in
or
and
add
add
xchg
xor
add
in
mov
bound
int3
sub
mov
lea
and
adc
add
add
xorl
jge
and
lret
push
or
and
out
or
add
outsb
shlb
sbb
enter
ljmp
cld
sub
add
arpl
ds
xor
add
jecxz
inc
mov
test
loop
add
add
xor
lret
add
pop
cmc
rolb
mov
cmpsl
iret
std
fsubrl
add
xchg
addr16
mov
add
cltd
outsb
sub
mov
jp
add
and
pop
cmp
and
mov
add
incl
cmc
out
andl
mov
mov
inc
or
in
sub
test
or
sub
or
mov
outsl
add
lds
jg
lcall
jnp
and
cltd
add
inc
stos
adc
out
sbb
add
out
or
add
and
jecxz
add
or
je
xlat
or
and
dec
and
cltd
sahf
imul
fsubs
call
into
add
jle
daa
add
pop
call
add
cmp
lcall
shll
add
out
add
xchg
incb
add
dec
inc
and
dec
add
lret
rorb
out
xor
lahf
mov
add
cmpsl
call
fsub
add
shrl
pop
pushf
call
clc
movsl
sub
decl
push
enter
or
int
out
push
movsb
push
xchg
fbstp
mov
xchg
test
lcall
test
frstor
add
mov
pop
scas
sub
add
movsl
add
add
dec
mov
mov
sbb
adc
cltd
cld
jb
add
xchg
insl
xchg
xchg
cmp
add
add
scas
add
out
roll
jge
pop
and
add
mov
loope
add
push
add
add
fldt
adc
add
add
int3
sbb
or
cmpsb
lods
add
pop
or
jecxz
add
and
add
add
cmp
js
pusha
add
out
and
inc
cmp
add
add
xchg
adc
add
pusha
pusha
std
cmc
cli
mov
pusha
add
ja
int
push
add
xor
dec
add
loop
scas
sahf
mov
jle
ret
inc
and
add
add
add
incl
pushf
lods
pop
lock
cmp
xchg
ficoms
add
stc
mov
mov
add
add
dec
mov
les
mov
add
je
outsb
add
pop
push
mov
push
cltd
add
in
jg
push
xor
jg
imul
inc
push
adc
out
shlb
and
jne
into
int
and
cwtl
or
cmc
add
cltd
test
jmp
dec
add
filds
add
cmp
lret
xchg
rcrb
dec
add
mov
in
or
inc
cltd
or
add
push
push
jge
pop
notl
add
xor
add
add
jb
add
jle
fs
push
mov
and
sarb
mov
pusha
add
cmpsb
mov
inc
xorl
loope
add
lahf
mov
add
out
add
int3
ficompl
das
outsb
and
icebp
mov
and
fadds
adc
push
xor
jecxz
push
add
xor
roll
add
add
sub
das
and
add
in
sbb
incl
les
jle
ret
orl
mov
fcompl
add
pop
std
fwait
repz
sbb
test
mov
and
mov
add
jg
add
fldt
jecxz
je
outsl
add
lret
jecxz
and
aam
adc
in
enter
add
add
mov
add
and
mov
xor
ds
push
ret
int
incl
add
sub
imulb
add
into
dec
rorl
add
jecxz
outsb
sub
and
add
in
or
add
push
addr16
jmp
loop
inc
push
sbb
xor
js
dec
leave
outsb
mov
cmp
dec
mov
clc
sbbl
je
ds
pop
inc
fsubl
add
sbb
inc
shll
add
mov
pop
add
and
sbb
lods
mov
mov
xor
repz
jb
fst
dec
jle
pop
andl
add
ret
jmp
add
xor
jle
add
lods
add
add
hlt
popf
mov
add
divb
add
or
mov
pop
xor
jl
dec
add
add
and
les
incl
xor
mov
repz
fnstsw
loope
add
pop
lcall
call
lret
pop
jo
out
jecxz
cmp
xchg
jp
jg
add
add
pusha
sbb
mov
dec
mov
add
in
adc
jle
add
scas
addr16
stos
push
or
add
jecxz
fisubrl
add
cli
rcrb
mov
loop
es
pop
testb
push
andl
add
clc
mov
xchg
decl
add
jnp
mov
jle
outsl
xchg
enter
pusha
les
hlt
shrb
mov
cs
add
xchg
pop
xchg
ficoml
incl
add
sub
add
pusha
shll
mov
mov
je
subl
push
gs
rorb
add
lds
mov
movsb
in
fucom
add
in
mov
add
pop
jnp
add
mov
mov
xchg
mov
and
add
in
outsb
jmp
pop
push
or
jecxz
ret
addb
add
jg
push
sbb
mov
push
pusha
popa
push
sub
add
mov
pop
shrl
adc
mov
and
or
movsb
jnp
cmp
jg
ja
andb
ffreep
ds
mov
ljmp
jecxz
ljmp
push
dec
or
in
test
xor
add
jp
sub
sbb
test
ss
aas
imul
fistps
mov
push
add
push
add
add
das
add
lret
sub
fstpt
jne
pop
leave
sub
mov
dec
cvtps2pi
mov
jecxz
xor
lcall
ds
aaa
lds
ret
mov
add
jmp
sbb
fisubs
add
out
xchg
jnp,pn
jg
pop
dec
cmpsb
ret
mov
mov
repz
add
les
jmp
add
add
in
xor
loop
and
cmp
and
sahf
add
std
jl
add
inc
outsb
mov
sbb
xchg
lods
lock
shr
jle
mov
ret
add
bound
movb
add
dec
and
movsb
test
add
nop
inc
stos
les
and
jo
and
add
push
out
fisubrs
mov
cmc
dec
sub
out
pop
lcall
pop
jae
add
push
jbe
cld
sub
add
incl
cmp
dec
or
add
nop
jmp
das
add
add
and
mov
packsswb
xchg
jo
pop
add
add
xor
mov
call
dec
out
shll
add
les
incl
cmc
sub
in
add
or
jns
iret
inc
add
test
push
xchg
add
hlt
push
sub
add
push
add
mov
sti
fcoml
and
mov
stc
adc
add
mov
adc
out
add
push
fwait
aas
sbbl
add
sbb
add
xor
lret
sub
xchg
aam
add
das
add
mov
add
add
lods
stos
mov
add
pop
inc
jnp
pop
jecxz
add
fwait
sub
xor
sqrtps
jg
scas
lret
add
mov
dec
add
and
inc
incl
inc
add
divb
out
xchg
xor
add
add
int3
lds
roll
jmp
fwait
jmp
jbe
lcall
sarl
add
pop
ljmp
or
add
add
add
xchg
jo
add
das
ret
in
shll
add
mov
pop
mov
add
add
call
les
rorl
sub
iret
add
pop
add
rorb
sub
lock
in
out
dec
shlb
mov
stos
outsl
pop
lock
jo
push
pop
jp
add
push
push
xchg
lcall
and
cmp
cld
ljmp
ljmp
add
inc
sti
add
decl
stos
jae
jle
add
in
call
sbb
dec
cld
mov
add
jecxz
aam
and
add
jmp
or
inc
dec
test
outsl
push
das
dec
notb
inc
mov
pop
jle
out
stc
andb
cmp
loop
add
jle
ljmp
or
stos
std
sbb
jle
repz
cmp
push
dec
in
add
jle
popa
ljmp
les
xchg
icebp
add
jle
movsb
int
inc
andl
imul
jle
and
and
add
loop
sti
imul
or
and
xor
insl
dec
and
aad
add
sbb
and
imul
loop
orl
add
jg
das
bound
rolb
rorl
pushf
xchg
push
mov
add
cli
imul
add
insl
and
jecxz
mov
ret
adc
loop
add
add
mov
dec
mov
xor
int
add
jle
loopne
or
int3
adc
int3
dec
sti
pop
lods
add
icebp
mov
jne
into
mov
and
loop
add
mov
add
mov
add
mov
push
jle
call
iret
loope
add
ss
jne
das
incl
ljmp
sub
cmpsb
fildl
mov
imul
jge
add
dec
jno
mov
jle
xor
sti
out
cs
incl
fildl
outsl
or
add
repz
ret
or
add
add
adc
sub
cmp
iret
es
call
es
add
test
add
loop
outsl
add
cmpsb
mov
stos
incl
add
int
dec
das
or
add
jecxz
dec
movb
add
xchg
scas
mov
add
sbb
sub
add
sub
sbb
add
out
jg
arpl
and
add
pop
in
mov
add
mov
push
shlb
add
decl
movl
fbstp
push
dec
jg
lock
jle
lock
add
insl
stos
out
sbbl
jg
inc
or
xchg
enter
or
add
jmp
repz
inc
dec
or
and
inc
jge
add
inc
out
roll
fmulp
mov
in
add
add
push
mov
and
pop
add
imul
add
and
outsl
add
or
push
jge
mulb
inc
jnp
ret
clc
add
and
add
sbb
pop
and
int3
shlb
add
add
inc
add
cmp
std
xchg
out
xchg
nop
add
sbb
scas
push
jmp
pusha
add
ror
adc
add
and
add
mov
jo
lret
dec
add
add
jle
mov
cmp
std
add
and
push
add
das
pop
daa
add
lahf
loop
inc
sbb
scas
hlt
out
popa
add
add
add
jecxz
xlat
mov
mov
add
mov
call
add
add
add
mov
add
in
sarb
cmp
fs
mov
int
cld
repz
add
out
fnstcw
dec
mov
add
jecxz
add
add
dec
mov
dec
push
sbbl
cmp
out
mov
inc
mov
mov
js
and
mov
int
pop
push
add
or
or
or
add
in
pushw
mov
and
fcomps
lahf
daa
add
or
lret
jb
lods
pusha
lcall
dec
mov
and
cmp
loop
pop
mov
add
jecxz
add
pusha
pop
inc
jecxz
lret
and
and
jecxz
add
lret
add
add
ror
clc
data16
lcall
sub
pop
and
cmp
aad
add
sbb
loope
lcall
dec
cli
and
js
add
in
test
add
ds
mov
or
loopne
xchg
pushf
add
sub
add
mov
out
mov
pushf
push
add
add
fwait
cmc
push
push
jno
add
add
jge
out
add
and
add
pop
xchg
sub
add
mov
mov
addr16
daa
loop
fs
mov
icebp
into
mov
mov
aaa
cmc
add
pusha
jecxz
push
add
ret
scas
js
add
scas
xchg
push
enter
or
add
add
mov
mov
out
outsb
jecxz
mov
add
loop
xchg
or
test
and
repz
and
or
mov
and
add
mov
mov
and
rcrb
dec
or
dec
lret
mov
aam
add
sub
call
add
add
pop
std
les
mov
jp
add
lcall
push
cld
mov
cwtl
hlt
add
add
in
jno
sub
add
add
hlt
push
and
popa
bound
add
sti
mov
mov
xchg
pop
add
pop
mov
push
add
add
ficomps
dec
and
lahf
test
mov
jmp
jbe
xchg
popa
cmp
lds
jne
loop
test
add
dec
add
jge
lods
add
sub
add
test
out
and
sahf
pop
mov
psubsb
add
fidivl
jl
cld
repz
outsl
fistpll
adc
push
add
scas
repz
push
add
jle
add
cmovb
xlat
loopne
mov
lahf
xchg
push
and
add
add
movsb
shrb
add
stc
enter
incl
and
dec
cmpb
mov
add
jecxz
lds
das
in
add
dec
add
xchg
push
popa
jnp
add
fstpl
nop
pop
addb
mov
inc
xchg
loop
or
sub
adc
mov
cwtl
incb
dec
or
lcall
jmp
add
test
add
jecxz
add
aas
add
add
lock
orl
inc
xor
jecxz
inc
sahf
fsubrl
lcall
mov
jne
fwait
add
insb
pop
push
add
add
or
pop
fcomps
pop
sbbb
out
incl
out
pop
jb
ds
add
sub
ljmp
test
mov
sti
dec
ljmp
ss
and
cwtl
movsb
std
pushl
mov
adc
inc
push
jecxz
add
les
lret
arpl
popa
cmp
add
add
add
outsb
test
add
cld
and
int
mov
dec
sbbl
ret
add
jo
lahf
incl
loop
xchg
mov
andl
add
mov
add
dec
add
mov
jge
imul
or
add
addl
push
pop
add
add
test
cs
adc
or
mov
hlt
outsl
add
or
jecxz
push
add
add
popf
das
adc
push
sub
mov
add
and
fidivs
outsl
dec
sub
out
add
scas
shl
and
add
outsb
jns
and
add
pop
fsubrp
js
add
add
and
adc
icebp
or
push
add
mov
lds
add
ds
adc
decl
add
add
pop
jg
or
push
xorb
or
cld
insb
insl
jnp
add
or
dec
xchg
jne
jge
add
or
leave
mov
xchg
ds
xchg
and
arpl
or
pop
ja
jle
ds
mov
lcall
mov
call
ret
or
add
mov
xor
mov
aam
int
add
mov
dec
add
cltd
jb
mov
xchg
imul
add
add
pop
call
add
mov
jo
and
add
sub
xchg
in
loope
or
and
fidivs
fs
xor
adc
add
test
inc
and
jecxz
test
int3
dec
ret
in
add
xchg
mov
add
add
jecxz
les
sub
mov
rol
test
sahf
add
sbb
loop
insl
insb
add
xlat
mov
pushf
and
ds
add
fsubl
call
add
js
pop
mov
dec
mov
and
lods
sub
addb
add
inc
ds
or
and
aas
lods
rcrb
cmp
add
in
iret
push
shlb
inc
jmp
mov
add
add
cmp
pop
incl
mov
pop
add
out
insl
aam
cmp
add
mov
mov
ds
or
add
add
and
mov
out
test
xor
add
add
dec
pop
in
mov
sbb
incb
add
xchg
jnp
or
xor
fsubrp
js
sbb
scas
xor
add
mov
out
sbb
add
dec
cmpsl
mov
add
incl
cmp
inc
out
jecxz
lcall
add
les
add
lahf
gs
test
add
das
ret
pop
ret
cld
dec
in
jnp
call
daa
mov
inc
dec
mov
int
es
addl
dec
les
data16
dec
das
incl
or
add
mov
in
test
add
dec
fistps
or
lcall
jnp
jmp
add
add
icebp
test
loope
mov
xchg
rorb
add
push
mov
lret
xchg
xor
add
push
lret
dec
mov
daa
arpl
inc
push
mov
jmp
and
repz
or
and
push
dec
in
add
jg
in
jmp
add
fcoms
fisubrs
in
out
add
sub
add
into
and
sbb
add
add
add
or
add
cmp
call
add
loop
or
movsb
push
add
and
dec
pop
sub
into
cltd
pop
push
mov
push
inc
add
das
sahf
mov
inc
call
lds
or
add
add
jecxz
mov
das
test
add
add
add
int3
outsl
jp,pt
add
add
add
insb
fwait
stos
push
add
and
ja
add
lea
pop
add
add
popa
aam
add
add
mov
jecxz
dec
add
jmp
mov
stos
push
lcall
data16
ljmp
add
add
add
pusha
inc
stos
inc
mov
call
cmpsl
mov
add
mov
sbb
add
add
jmp
dec
sbb
add
or
insb
sub
addr16
dec
call
adc
add
add
mov
ss
or
cltd
call
add
mov
popa
add
pop
add
insb
xor
xchg
add
mov
add
pop
add
addl
mov
or
mov
icebp
mov
jecxz
jge
xchg
pushl
addl
call
inc
cwtl
add
add
add
mov
add
out
jecxz
sarb
stc
push
scas
sub
mov
addr16
and
ss
add
pop
test
or
add
mov
add
pushf
das
repnz
add
incl
cmp
xchg
xor
addb
aas
dec
xor
add
repnz
popa
add
data16
aaa
scas
arpl
loope
call
ss
sbb
movsb
popf
fiadds
add
pushw
cli
and
add
sbb
idiv
dec
jb
outsb
inc
pop
and
dec
jle
mov
jecxz
add
and
push
mov
xchg
bound
add
and
stos
cmpsb
add
add
jle
pop
rorb
jg
mov
add
data16
incb
pop
sarb
or
add
add
out
xchg
std
xor
ds
dec
test
add
andl
add
dec
inc
xchg
add
push
dec
lea
int3
arpl
aad
pop
fcompp
add
imul
or
add
and
or
loopne
lahf
add
add
push
add
das
add
pusha
mov
mov
jle
gs
sbb
and
and
and
or
jg
mov
out
xchg
and
add
mov
mov
jle
xor
mov
out
cmp
imul
and
je
outsl
lcall
or
and
mov
das
clc
loop
inc
ds
je
adc
loope
dec
add
jl
adc
or
push
loope
mov
loopne
stos
movsl
popf
add
sub
adc
xlat
fidivl
jmp
fnstenv
gs
inc
add
shl
add
and
fadd
sbb
mov
call
clc
int3
push
loope
sub
and
daa
aam
scas
jmp
dec
add
daa
rclb
out
add
add
sub
xchg
xor
out
mov
notl
or
loop
add
jl
popa
loop
or
icebp
adc
pop
push
sbb
xor
and
and
and
push
add
xorl
or
or
pop
mov
xor
and
les
pop
imul
or
add
andl
mov
mov
loope
and
mov
pushf
test
ljmp
mov
scas
or
add
cltd
gs
jp
imul
jp
push
mov
add
les
add
add
movsb
aad
fs
fldenv
cmp
sub
jle
orb
add
add
push
pusha
xor
incl
add
in
pop
aaa
addr16
jg
add
subl
jmp
xchg
and
add
and
out
cmp
add
dec
inc
add
xchg
mov
clc
mov
sub
add
mov
add
add
jp
insb
mov
push
mov
add
les
inc
dec
add
jecxz
and
or
ds
sarl
xor
dec
add
lcall
fcmovnb
add
xchg
sti
loop
mov
and
push
add
add
rorb
add
test
stos
in
add
jp
in
mov
mov
insb
and
add
pusha
cmpsl
insb
stos
jp
add
adc
jae
add
ds
or
scas
cmp
out
xor
sbb
jg
inc
loop
bound
aaa
and
sub
insl
inc
test
add
lahf
dec
out
loop
add
add
imul
loop
out
add
incl
stos
and
and
frstor
gs
dec
inc
sbb
fldl
mov
ret
lret
fnstenv
add
or
sbb
pushf
xchg
test
inc
add
aam
out
add
dec
or
mov
add
rorb
sahf
test
adc
jb
pop
idivl
or
add
and
jle
or
and
mov
incl
addr16
fdivr
add
cmpsl
popa
call
addl
scas
jmp
fildll
and
lret
adc
pop
lret
inc
xor
incl
push
pusha
xchg
jecxz,pn
jecxz
add
xchg
mov
add
mov
mov
loope
dec
jae
sbb
lods
add
add
clc
je
xchg
scas
jae
sub
mov
test
dec
jnp
add
add
dec
jmp
sbb
dec
cmp
lods
movsb
jns
add
ds
cmp
add
loop
ds
mov
sub
push
lods
loop
add
push
pop
mov
and
add
add
test
into
xchg
iret
and
add
and
mov
add
and
mov
or
sti
mov
add
and
mul
movb
mov
inc
fidivs
cwtl
xchg
jae
out
push
data16
faddl
add
dec
in
sub
or
dec
repz
add
add
or
or
add
cmp
add
mov
add
lcall
stos
repz
cltd
insb
add
add
add
pop
sbb
add
or
add
inc
add
loope
shl
add
mov
ret
pusha
popf
enter
sbb
jecxz
xlat
inc
insl
out
ljmp
add
add
fs
popa
inc
and
add
add
fiaddl
push
pop
xchg
or
fadds
add
add
insb
adc
jae
data16
and
jbe
or
pushl
and
data16
faddl
add
outsb
iret
call
add
movsb
adc
jle
cmc
mov
gs
les
mov
out
aaa
stos
mov
dec
add
add
mov
dec
xchg
sbb
jmp
and
push
lods
and
inc
add
mov
add
add
adc
cmp
movsl
jle
add
add
gs
push
add
les
decl
mov
xor
je
shrb
jle
xchg
add
mov
les
add
and
cld
in
das
add
stos
sti
add
loop
addl
jg
jecxz
imul
add
jecxz
adc
mov
out
xchg
sub
fs
push
add
popf
cli
stos
jl
add
add
loop
add
and
mov
and
add
add
add
push
and
in
mov
add
mov
and
mov
pushf
cmp
call
in
add
mov
outsl
sub
add
ljmp
add
out
data16
test
add
add
jmp
stos
loop
clc
gs
mov
hlt
pop
pop
testl
jecxz
push
cmp
shl
add
add
or
call
add
add
mov
jecxz
out
and
add
xchg
push
mov
add
mov
fbstp
dec
insb
pop
mov
pusha
out
add
inc
cmpb
ja
add
call
jne
scas
loop
add
or
and
jns
jecxz
add
and
std
jmp
cltd
loop
and
mov
lcallw
call
and
inc
dec
or
loop
jecxz
push
push
push
jg
out
add
mov
mov
add
add
je
lret
add
shrl
add
jle
sbb
jecxz
and
xchg
pop
das
jmp
data16
orl
sbb
jecxz
sti
movsl
lret
fstp
and
and
add
cmp
add
loope
loopne
test
repz
or
xor
add
mov
add
add
or
add
cwtl
add
mov
pushf
push
ja
or
add
negl
mov
je
decb
into
jno
xor
add
jo
mov
add
outsb
xlat
aaa
xor
incl
ds
dec
shrl
repz
fildl
add
mov
add
add
ja
jecxz
loope
xchg
xchg
push
cmpsb
fs
dec
incl
and
cmpsl
mov
push
add
test
and
xchg
sub
das
test
add
add
and
or
add
add
dec
add
add
jg
aas
add
mov
mov
add
add
decl
loopne
mov
add
add
push
sahf
out
xchg
add
or
jb
nop
add
loope
or
adc
jmp
jecxz
lea
jmp
lret
mov
mov
incl
add
les
add
fistpll
incl
add
jle
or
loope
add
add
mov
mov
sub
ss
repnz
ja
outsl
faddl
mov
jnp
sbb
mov
add
jmp
add
mov
incl
mov
incl
add
add
and
add
in
add
inc
jno
add
mov
xor
xorb
push
outsl
add
add
pop
shl
mov
std
and
movsb
jbe
add
add
add
test
jmp
call
jno
jmp
shrb
or
out
arpl
add
dec
shl
and
jmp
add
add
add
and
mov
daa
fcoms
add
dec
inc
ret
aam
add
add
add
mov
ss
cld
jle
add
push
pop
mov
rcll
mov
mov
repz
dec
jns
arpl
push
and
pop
fildl
add
jb
inc
push
outsb
inc
add
add
xor
add
gs
adc
xor
adc
call
push
jb
dec
mov
add
out
add
dec
mov
push
std
dec
add
mov
xorl
jg
add
sbb
decl
mov
and
or
add
popf
and
hlt
mov
add
add
push
push
add
add
cmp
and
xor
cmc
test
mov
add
mov
test
adc
lods
lds
mov
ss
sub
add
add
add
inc
mov
jb
lea
in
sahf
jge
push
add
loop
add
sbb
or
add
popa
jg
mov
jle
push
dec
adc
or
add
or
and
inc
xchg
mov
add
add
in
add
push
jmp
add
jae
loop
cmpl
mov
and
decl
inc
ficomps
sbb
mov
add
repz
std
jmp
out
xchg
ds
mov
add
in
je
pop
lcall
mov
jg
and
push
dec
fwait
cmp
dec
rol
ret
sti
les
push
sub
decl
add
js
add
repz
add
add
add
dec
bound
xchg
ljmp
loop
fidivrl
in
jg
or
sbb
jo
movl
or
pop
mov
inc
fs
out
adc
sarl
arpl
sbb
mov
or
or
add
pop
test
and
add
or
outsb
xor
mov
cmp
add
lahf
es
and
dec
add
pusha
dec
sub
mov
add
push
sub
add
dec
arpl
stos
add
add
add
push
out
data16
mov
push
or
sub
add
add
push
cmp
cli
das
lods
and
incl
add
fcomi
pop
cs
pop
loopne
loop
movsl
lret
inc
js
or
lcall
add
sub
inc
in
shll
std
push
add
lahf
add
add
outsl
jg
mov
mov
dec
add
cmpsl
imul
xchg
mov
add
add
inc
sub
mov
dec
or
add
xor
sbb
pusha
mov
addb
outsb
mov
pop
lock
sub
mov
and
push
jbe
mov
stc
fildll
add
add
popf
sbb
rolb
jle
jmp
ljmp
xchg
popa
jle
or
xor
int3
dec
insl
loope
add
incl
add
je
cmp
loopne
incl
pop
mov
lahf
add
add
loope
mov
add
add
pusha
adc
mov
mov
ljmp
jle
mov
and
orb
add
add
xchg
push
cmpsl
jne
out
das
dec
inc
mov
add
xchg
data16
fcmovnb
jmp
scas
and
mov
pop
add
sub
jmp
loope
cltd
cmp
les
and
xchg
jbe
add
add
add
add
les
mov
scas
frstor
sub
out
mov
xchg
jmp
add
call
ljmp
loope
add
inc
add
imul
mov
dec
add
adc
jae
sub
ret
lcall
pop
inc
incl
add
jne
out
mov
dec
dec
aad
cli
dec
fiaddl
jno
popf
incl
clc
dec
sbb
add
pop
movsl
add
mov
sbb
add
or
je
repz
pusha
and
add
mov
mov
lahf
add
add
outsb
out
lret
or
iret
movsl
into
pop
push
aas
add
xchg
mov
inc
mov
data16
dec
ja
and
ficoms
push
das
jae
decl
imul
shrb
add
add
xchg
mov
and
addb
clc
cltd
dec
or
jb
and
das
dec
pop
add
add
add
subl
mov
ljmp
pop
cmpsb
jp
add
jecxz
in
jb
pop
xchg
and
or
push
xor
mov
fs
jmp
lock
popf
or
incl
mov
add
mov
stos
jg
add
and
jns
or
jecxz
jle
mov
inc
add
cmp
or
add
add
and
xchg
mov
and
and
add
or
rolb
add
and
aas
aam
lds
add
ds
fcomps
sub
add
aas
andl
scas
rolb
add
fmuls
mov
and
loopne
jle
call
pop
mov
mov
add
cmpb
and
pop
mov
add
jg
ficoml
mov
push
or
add
xor
add
xor
and
add
out
dec
icebp
cwtl
movsb
in
add
call
fiadds
add
rorb
mov
and
mov
cmc
mov
mov
bound
mov
mov
adcl
add
or
push
add
or
add
add
add
lahf
pushf
sahf
das
inc
add
add
cli
cld
cld
xchg
add
add
mov
ljmp
addl
add
nop
dec
sti
ror
and
out
mov
mov
adc
add
or
out
inc
pop
mov
scas
jle
add
or
add
xchg
mov
mov
add
mov
add
outsb
lcall
cwtl
dec
sub
subb
aas
cltd
mov
add
add
cmp
data16
add
mov
pop
or
jmp
xor
add
dec
pop
ret
imul
xchg
xorl
add
mov
mov
pop
pop
test
add
add
mov
pushf
fstl
cmp
add
add
or
add
outsl
add
dec
add
mov
jns
cmpsl
jecxz
or
push
dec
jbe
add
call
add
add
nop
jae
pop
jle
and
pop
pop
add
mov
not
nop
add
popa
jmp
fwait
lcall
sahf
pop
pop
adcb
popf
or
push
add
nop
gs
jno
add
dec
inc
add
push
add
add
add
add
mov
xchg
out
mov
add
pop
push
hlt
cmp
sbb
jbe
add
mov
sub
aad
loop
inc
push
mov
xchg
and
inc
jmp
or
insb
je
inc
dec
and
push
add
cmp
in
shrl
add
stos
sub
or
cmp
add
or
in
mov
add
cld
iret
and
add
add
ds
mov
xchg
ret
push
add
adc
incl
lahf
lret
hlt
popf
repz
sub
pushaw
add
add
pop
ljmp
loope
daa
outsb
icebp
mov
push
movsb
je
pop
loop
incl
add
pushf
insl
sub
addb
mov
clc
add
add
sub
icebp
add
adc
les
outsw
arpl
outsb
popa
addr16
imul
outsb
gs
imul
add
jecxz
imul
add
jae
jne
add
or
loop
jle
sbb
add
add
xchg
dec
loopne
dec
or
lods
mov
add
xchg
lea
add
pop
incl
loop
aad
sub
add
and
add
test
add
mov
push
sub
mov
iret
xchg
clc
adc
jnp
push
push
add
mov
sbb
and
scas
jmp
andl
fimull
stos
add
jecxz
add
and
xchg
jmp
mov
jmp
mov
fbstp
mov
xchg
mov
fdivs
stc
sbb
or
sarb
hlt
push
bound
incl
and
mov
add
in
sete
shlb
aam
loop
addl
dec
addr16
and
mov
incl
add
in
add
lcall
jbe
in
adc
add
sbb
aas
mov
jns
mov
mov
ret
sbb
jecxz
cwtl
mov
dec
cmp
call
add
aas
dec
dec
add
mov
incl
and
aad
arpl
or
xchg
fistps
pop
push
push
pusha
loope
add
stos
pop
popf
cmc
add
cmpsl
fsubrp
jg
pop
out
cmc
lods
jg
add
adc
out
adc
mov
das
and
xor
jne
pop
stos
push
mov
dec
sti
jnp
lock
jno
sbb
movb
adc
inc
aaa
les
sbb
mov
add
fidivrl
pop
or
add
aaa
hlt
in
jae
jg
and
scas
lret
add
sti
add
insb
test
dec
add
ret
mov
xchg
lods
sbbl
or
in
adc
add
in
pop
aas
mov
push
imulb
add
adc
outsl
and
add
sarl
loop
add
inc
mov
or
incl
mov
out
and
lea
adc
lock
add
add
mov
inc
add
add
repnz
add
das
int3
lods
cmp
dec
ret
mov
add
or
testb
mov
add
jmp
in
add
xor
add
or
add
bound
insl
jmp
xchg
popf
xor
or
jnp
testb
add
lahf
ss
test
incl
jecxz
adc
idiv
sub
add
mov
popf
push
jecxz
stos
mov
fiaddl
ds
pop
loop
add
fisubrs
and
loop
add
sub
xchg
add
pop
or
and
lret
or
mov
or
cmp
mov
dec
icebp
sbb
dec
sub
jne
scas
dec
lcall
add
add
out
dec
cltd
mull
add
and
hlt
shlb
out
fwait
jbe
dec
mov
cli
orl
add
repnz
adc
or
enter
add
add
and
sbbl
add
mov
scas
cmp
add
add
add
and
jae
in
add
jecxz
push
dec
lods
ja
push
jns
and
lods
iret
jne
mov
arpl
add
add
pop
add
dec
xlat
mov
aaa
add
or
pop
sahf
add
add
add
daa
imul
dec
fdivr
add
add
add
ljmp
in
jo
mov
add
and
mov
fstp
add
add
add
mov
pop
leave
call
push
push
lcall
jnp
add
imul
adc
sub
cld
hlt
addr16
jecxz
add
pop
ror
out
sbb
das
add
jg
cmc
dec
mov
incl
add
rcr
sbb
jecxz
add
stos
stos
fldenv
pop
scas
cmp
mov
push
jecxz
xor
add
add
add
add
dec
lret
call
aaa
lods
ds
mov
add
mov
xor
test
es
mov
xchg
popf
outsl
call
lcall
mov
and
mov
cs
or
add
pushf
mov
outsl
add
sub
and
and
inc
mov
cli
aam
jle
pop
jno
and
fdivrs
mov
add
das
add
push
mov
sub
jecxz
sti
and
add
inc
inc
repz
incl
add
xchg
cmpsb
mov
sub
cmp
add
iret
cmp
pop
add
inc
addr16
jne
mov
mov
mov
add
int
adc
arpl
add
std
popf
mov
jecxz
add
out
dec
cmc
or
add
mov
add
mov
out
jmp
cmpsb
fnsave
ljmp
jle
pop
add
pop
add
mov
aad
pop
cmovae
mov
sbb
incl
jle
repz
push
ret
nop
scas
add
cli
out
jo
cmp
mov
les
pushl
and
mov
add
mov
dec
imul
dec
mov
stc
pop
add
or
add
adc
xchg
add
dec
aad
in
bound
add
in
jge,pn
or
cs
add
mov
xor
add
add
xor
cld
je
xchg
inc
add
add
in
mov
add
add
cmp
pop
jnp
les
andl
add
sbb
sbb
mov
call
or
xchg
mov
add
add
sahf
pop
call
into
inc
add
aam
jno
push
andl
xchg
ja
add
add
jmp
std
movsb
xchg
push
or
add
je
mov
add
sub
bound
cmp
call
mov
add
and
ljmp
mov
inc
jmp
and
lret
jge
out
push
add
bound
mov
lcall
repz
insl
add
add
in
add
and
js
leave
dec
call
aaa
fidivrs
in
sbb
call
cli
add
lea
call
and
and
xchg
lods
mov
add
imul
and
leave
sub
in
jle
fcoms
mov
std
sub
clc
aas
sub
dec
out
cmp
lds
das
add
add
sti
jecxz,pt
popa
into
daa
add
add
and
out
xchg
inc
add
add
mov
ja
outsb
loop
xchg
icebp
push
and
str
aad
sub
lods
adc
loope
add
mov
cmp
lret
add
jecxz
mov
out
pop
mov
add
call
dec
pop
jg
add
mov
imul
out
pop
cld
cmc
add
add
cmpsb
push
lret
add
add
aam
xchg
scas
dec
or
call
add
inc
in
jle
rorl
add
add
int
das
pop
add
pop
ficomps
sub
jp
jbe
add
rorl
test
loop
push
add
shlb
aas
add
add
sub
jo
loope,pt
jle
add
add
add
lahf
cmovl
imul
call
mov
add
xor
add
add
or
and
lahf
pushf
add
add
add
adc
mov
and
xchg
add
loope
jb
pop
aaa
add
testl
imul
cmp
xchg
decl
mov
mov
mov
xchg
add
and
loop
mov
and
jmp
loopne
pop
push
jl
subb
mov
in
mov
loope
dec
or
clc
and
scas
adc
jle
cmpsl
mov
add
add
add
add
add
call
adcl
decl
popf
push
imul
add
pop
jle
stos
jle
incl
icebp
pop
mov
or
aam
fchs
lock
jge
and
cmc
pop
push
sbb
or
add
pand
dec
movsb
inc
add
pushl
arpl
and
add
mov
int3
inc
fwait
add
add
jl
adc
stos
pop
sti
mov
ret
and
lock
jmp
add
mov
add
pop
test
je
and
call
incl
in
dec
mov
in
mov
cltd
shrl
or
fs
lods
out
fisubrs
push
pop
incl
insb
mov
out
inc
pop
cltd
sarl
push
mov
add
add
outsl
das
add
jae
stos
addb
or
jno
orb
add
jg
in
add
or
mov
les
test
add
sarb
add
add
add
dec
jns
pop
adc
and
mov
add
jl
mov
imul
or
add
loopne
addr16
mov
outsl
enter
repz
testl
cli
addl
cwtl
adc
jg
popa
les
and
and
xchg
jnp
iret
push
and
add
pop
pop
xchg
mov
sti
les
add
incl
nop
pop
adc
add
mov
add
add
in
xor
add
test
add
gs
and
add
or
add
add
add
mov
add
add
add
add
and
or
mov
jle
add
or
mov
push
sbb
inc
aad
add
pop
inc
call
xlat
or
cmp
add
decl
mov
dec
out
int
fistl
add
and
push
or
jb
add
ficoms
rcl
push
add
fs
mov
dec
inc
sbb
dec
push
jecxz
repnz
add
mov
in
mov
mov
jle
and
add
add
add
roll
add
das
dec
mov
push
xchg
add
pop
add
setb
add
dec
jbe
ror
add
cld
iret
scas
add
cmc
xlat
sbb
add
add
add
dec
movsl
adc
xor
add
out
test
pop
mov
push
dec
pop
out
xor
add
fdivs
mov
add
hlt
test
add
mov
dec
pop
add
add
out
mov
add
add
mov
or
add
jle
mov
bound
cwtl
aam
add
inc
pop
insl
dec
add
xor
data16
and
and
gs
jecxz
xchg
pop
cli
out
or
add
and
addr16
or
pop
cli
mov
or
roll
add
addl
push
cmpl
add
and
jno
sub
xor
mov
xlat
add
add
dec
add
mov
sti
lods
add
add
mov
mov
push
fsts
push
jle
xor
adc
and
incl
test
add
outsl
and
push
adc
or
int
jbe
add
jecxz
add
stc
jg
nop
lea
and
xlat
icebp
lret
add
cmp
push
mov
loope
ret
mov
jne
repnz
add
aas
cmp
add
jg
xchg
jg
add
add
loope
adc
fistpll
jecxz
mov
and
mov
adc
mov
daa
xchg
pusha
sub
loop
cwtl
add
dec
ret
bound
add
or
insl
jb
adc
add
add
pop
and
out
add
aam
loop
nop
out
add
aas
loope
push
adc
and
leave
cmp
loopne
pop
int
fwait
cmpsl
ds
cmpl
insl
and
in
xorl
out
add
mov
add
or
add
incl
in
pop
dec
fs
xchg
nop
add
pushf
add
add
cmpl
add
lea
or
out
and
mov
add
mov
add
add
lret
push
add
mov
sbb
test
add
ret
flds
add
add
push
xor
mov
inc
mov
shll
add
and
mov
or
add
cmp
dec
push
add
add
push
pop
movsl
add
cwtl
add
xlat
jne
push
sbb
add
add
in
lret
loope
add
clc
arpl
add
add
mov
loop
xchg
dec
xchg
add
add
xor
cmc
xor
mov
data16
decl
add
and
add
dec
cmp
add
push
add
push
add
push
js
in
add
jle
movsb
mov
aad
add
dec
xor
pop
loope
les
mov
jbe
add
ret
xor
out
add
scas
dec
cmp
or
mov
sbb
add
xor
mov
add
pop
sub
cmc
lahf
add
or
movsb
mov
add
add
sti
mov
add
mov
loopne
mull
fwait
jecxz
add
call
cs
repz
frstor
mov
add
jle
jns
inc
adc
add
inc
adc
ds
xchg
cmovbe
jmp
test
int
scas
jbe
loop
cmp
pop
mov
add
add
mov
pusha
cltd
stc
flds
and
mov
imul
add
stc
xchg
push
cld
int3
das
add
jae
mov
mov
sarl
xchg
incl
fs
test
add
xor
aad
notl
inc
loopne
sub
and
js
ja
add
add
sub
add
sub
pushf
add
cmp
and
pop
decl
out
and
add
add
jns
add
jmp
add
jae
xor
add
jecxz
cmpsb
xchg
add
mov
test
jle
pop
ja
add
sahf
addb
add
or
xor
sub
add
add
add
fimull
add
xchg
mov
add
add
jecxz
fs
sbb
adcl
mov
and
sbb
sbb
mov
add
cmp
fcmovbe
ljmp
add
xorl
add
add
mov
xchg
xor
add
lahf
roll
xchg
pushl
sub
and
out
incl
lcall
or
or
add
loope
imul
test
loop
mov
add
in
jo
mov
ja
fs
add
add
jecxz
sbb
sbb
rorb
pop
in
fstps
dec
and
cwtl
jle
adc
jle
mov
mov
xor
add
call
cmpsb
mov
mov
jg
daa
mov
add
add
int
fcoml
add
cmp
hlt
add
and
dec
push
jbe
fmull
jecxz
add
decl
or
mov
pop
add
add
cmc
jl
cmp
add
add
fcomps
roll
add
add
add
add
mov
and
inc
xchg
insb
pop
in
and
out
xchg
jmp
outsl
and
jg
hlt
dec
or
add
add
mov
or
jmp
add
add
nop
and
add
pop
add
and
inc
cmp
in
ljmp
pop
add
loope
out
sbb
int3
add
and
repz
or
mov
add
add
in
decl
add
mov
ljmp
fcompl
imul
out
inc
mov
add
add
dec
xlat
iret
aad
add
add
mov
aad
stos
dec
add
imull
jg
les
das
das
or
outsl
loope
add
add
mov
add
andb
movsl
xchg
loope
cli
shl
add
popa
jecxz
mov
or
xchg
add
das
cmp
adc
pop
add
add
add
sbbl
ss
xchg
xchg
xor
loopne
mov
inc
push
mov
mov
int3
mov
or
sub
add
add
jne
xor
and
mov
sbb
ja
in
popa
jbe
xchg
sbb
or
add
add
outsl
jp
add
dec
or
addb
add
lea
out
decl
xchg
xchg
add
jle
xchg
incb
mov
add
add
mov
movsl
addl
imul
and
cmp
mov
add
es
mov
into
xor
in
jb
je
lea
or
insb
mov
loopne
cmpsb
dec
dec
push
jge
pop
ss
sub
adc
add
sub
test
pop
cld
out
pop
loope
out
sbb
add
repz
push
add
loop
mov
xor
and
and
popa
incl
mov
jp
inc
xchg
add
jmp
add
push
test
mov
mov
pop
in
sbb
add
add
or
jne
mov
mov
push
add
inc
cmp
mov
adc
in
add
inc
mov
add
add
jle
or
add
test
add
pushf
mov
ffreep
jecxz
in
fwait
cmp
pop
cwtl
cwtl
scas
and
add
out
pop
add
ret
xor
add
mull
inc
add
and
daa
pop
loope
add
or
jl
in
add
add
mov
jbe
pop
aaa
mov
clc
daa
and
pop
lea
pusha
mov
test
aam
add
fcmovne
jecxz
out
add
out
mov
mov
xchg
add
adc
repz
mov
add
add
cli
xor
mov
sub
out
add
repz
mov
popf
xchg
add
add
inc
sub
add
add
add
out
sti
or
out
add
repnz
xor
add
adc
rolb
mov
cmp
mov
dec
jecxz
mov
mov
das
xlat
insl
popl
and
xchg
daa
mov
sub
add
outsb
mov
sti
and
xlat
pop
and
popa
mov
add
jle
test
incl
mov
add
cmp
xchg
sub
add
mulb
fildl
cmpsl
imul
popa
clc
cmp
jle
out
ret
mov
testl
xchg
fnsetpm(287
repz
das
lods
push
ds
rcrl
add
mov
roll
dec
clc
insl
push
mov
push
jmp
add
add
clc
and
roll
jle
push
iret
mov
jecxz
add
add
test
add
add
sub
movsb
and
hlt
insl
adc
out
pop
sbb
incl
loop
mov
or
add
add
mov
loop
add
add
add
mov
xor
jecxz
push
out
jne
add
mov
adc
inc
xchg
fistpll
stos
xor
aam
mov
and
dec
sbb
add
add
add
and
incl
and
xor
les
scas
fcmovbe
and
xor
jge
in
fsts
xor
add
out
mov
stc
incl
mov
add
sbb
incl
add
incl
das
add
cmp
testl
dec
test
popl
sbbl
xor
adc
or
mov
push
je
in
in
add
add
xchg
testb
sbb
and
jns
ljmp
outsb
bound
sub
shlb
int3
loopne
add
add
add
inc
add
ret
mov
add
mov
pop
mov
dec
add
add
jns
mov
add
aad
mov
mov
mov
cmp
lods
xor
pushf
cmpl
btr
and
push
shll
mov
hlt
or
inc
out
add
add
or
add
xor
insb
push
sbb
sti
mov
lock
jg
mov
call
add
out
add
lea
adc
or
and
jmp
add
lods
out
mov
sbb
lods
pop
mov
scas
pop
icebp
das
add
add
stos
ret
push
xlat
mov
out
cltd
repnz
add
add
add
addb
jnp
add
outsl
add
pop
jno
stc
or
and
aam
xchg
jg
pop
add
outsl
xor
cmpl
add
or
js
xchg
repz
add
add
leave
inc
imul
push
scas
fld
fstpt
add
add
and
xchg
incl
and
jmp
push
addl
xor
std
push
cmpsb
mov
mov
pop
lcall
arpl
cwtl
pop
add
aaa
loope
sahf
add
loop
das
jmp
xor
add
add
repnz
cmp
add
jecxz
add
add
add
mov
cs
out
mov
arpl
add
add
movsb
out
loop
jecxz
nop
int3
incl
add
add
and
mov
mov
cmp
cmp
ljmp
add
mov
jle
outsl
rcr
add
push
pusha
mov
imul
call
cmp
pop
data16
add
add
cmp
add
pop
ret
add
add
add
fildll
add
add
xor
xchg
icebp
repz
add
in
adc
out
ja
add
dec
incl
pop
fwait
mov
or
add
outsl
test
jecxz
add
lods
jmp
add
ss
xlat
les
push
add
sbb
lret
mov
cmp
in
sub
jno
or
scas
push
add
cmp
add
jbe
add
in
dec
add
xor
add
adc
inc
ret
loop
push
rep
cld
pop
add
add
lret
bound
add
mov
xchg
loop
mov
movsb
inc
mov
and
imul
add
and
cmpsl
test
dec
lea
lods
push
pop
add
mov
inc
subl
add
dec
and
cmp
mulb
in
jecxz
arpl
jmp
add
jl
add
das
cmp
push
rol
sub
sbb
aad
add
push
mov
les
add
add
or
mov
jne
loope
lods
and
stos
ljmp
and
in
mov
loop
decl
addl
xor
xchg
ud2
add
loopne
jp
add
jb
cwtl
push
add
call
es
adc
mov
add
xchg
pop
inc
std
add
sahf
and
cmp
jnp
jg
ret
mov
out
in
lcall
incl
icebp
mov
sub
add
add
es
gs
push
int
mov
add
and
nop
fsubs
dec
incl
outsl
add
adc
or
cmp
lock
and
lock
jecxz
imul
jle
mov
movsl
fwait
cwtl
jb
add
add
sti
out
popa
loop
add
inc
jl
sbb
add
sub
or
and
sarb
lock
add
cmp
repz
repz
lods
cmp
das
and
sub
dec
add
sbb
dec
dec
add
mov
clc
lret
mov
sbb
fwait
pop
cltd
xchg
ss
cld
add
fidivl
sub
xchg
sbb
pop
fildl
loop
jmp
lahf
or
add
add
inc
adc
mov
ret
sub
outsl
add
or
outsl
lds
incl
and
ja
cmp
jae
aaa
sahf
push
add
push
mov
daa
add
movsl
sti
and
inc
sahf
por
incl
and
jnp
mov
inc
pop
mov
and
stc
dec
pop
inc
sbb
loope
add
dec
sub
pop
loop
hlt
dec
imul
jne
inc
cmp
loop
mov
movsb
and
repz
jle
and
roll
or
or
mov
add
decl
add
add
and
test
push
cli
cmp
add
add
jno
cmc
dec
add
and
mov
add
add
add
adc
incl
and
into
mov
add
add
adc
add
fcmovnbe
inc
decl
movsl
xchg
aas
incl
jmp
test
cmp
std
out
xchg
loop
inc
in
in
jle
mov
add
in
daa
ret
test
addl
jge
jecxz
add
add
mov
loop
add
sbb
call
xchg
add
imul
add
das
xor
jnp
sbbl
add
test
xorl
jmp
add
jmp
aam
add
add
add
xchg
cltd
add
stos
in
shlb
xor
sti
nop
std
add
mov
add
add
jg
int
shll
das
shll
out
outsl
or
repz
push
fwait
mov
std
nop
jmp
dec
popa
jb
adc
xor
add
cwtl
mov
jecxz
add
jno
cltd
incl
add
movsb
cmp
add
incl
jle
or
cmpl
cmp
incl
pop
lahf
cmp
dec
jnp
pop
mov
das
or
pop
jle
add
mov
and
add
dec
cltd
je
js
add
add
add
xor
out
add
jp
fdivs
imul
and
loop
mov
movsb
dec
mov
es
pusha
imul
or
dec
cs
and
mov
add
jg
add
mov
mov
xor
add
shl
push
inc
pop
fmul
ja
add
add
add
leave
pop
add
add
es
inc
dec
push
lock
and
cmc
xchg
sub
and
fwait
test
jbe
fdivrl
loop
add
shrl
cmc
aam
loop
jge
mov
or
das
add
jae
lcall
mov
and
add
ds
sub
data16
add
xor
xor
loope
gs
bound
cmp
sub
add
jl
mov
add
scas
fdivrs
add
cmpsb
push
sub
add
add
lods
and
mov
add
push
add
add
mov
mov
dec
sbb
add
add
ljmp
pop
add
jae
mov
add
add
test
add
into
add
cmpb
pop
sub
fidivrs
add
addr16
std
call
call
add
inc
lcall
add
add
call
jns
rcrl
fists
add
add
add
stos
add
add
push
sbb
in
repnz
outsl
sub
inc
ja
add
popa
pop
dec
fucom
inc
les
mov
ljmp
add
add
sti
push
fiaddl
add
mov
aad
add
push
jbe
pop
shlb
mov
and
push
add
or
add
loop
cwtl
lahf
xchg
add
pop
ljmp
incl
add
jnp
or
and
gs
push
mov
shlb
incl
jae
enter
insl
testb
in
xchg
sub
dec
jle
add
pushf
adc
int
add
add
jle
add
add
pop
sti
outsb
inc
lea
add
add
aaa
and
cmpl
insb
jo
std
pop
add
xor
mov
out
pop
fwait
and
add
ds
add
imul
add
mov
sbb
add
and
add
addl
push
cmpsl
xchg
hlt
fisubs
lods
in
and
outsl
push
xchg
inc
or
and
xchg
out
add
xchg
jle
and
or
mov
jle
or
pop
ficompl
add
add
jg
leave
in
shl
xor
jno
jmp
int3
cld
js
incl
inc
add
jg
and
pop
or
loop
add
pop
out
add
or
mov
mov
jle
add
stos
xor
or
add
out
jl
iret
add
mov
jecxz
add
shl
pushl
mov
das
add
repz
sbb
add
or
cmp
dec
add
cmp
scas
lret
rorl
movsb
add
or
add
add
data16
add
dec
imull
add
dec
call
add
and
les
and
lea
cmp
popl
data16
in
push
ljmp
xchg
incl
stc
add
jo
add
adc
add
shll
add
push
mov
add
add
mov
add
xchg
inc
jecxz
cmpsl
add
incl
xchg
inc
push
cmc
popa
add
mov
pusha
mov
nop
rorl
scas
xchg
dec
mov
inc
jmp
rorl
cmpsb
lods
xor
mov
aas
add
and
adc
adc
add
incl
mov
lret
xchg
cmpsl
jmp
sbbl
mov
outsl
add
pop
stc
js
ds
repnz
pusha
adc
mov
add
add
mov
jge
out
add
ds
call
shll
and
xchg
imul
or
adc
aas
inc
add
imul
das
or
pop
cmp
add
add
int
lret
or
and
pop
and
add
insb
shl
nop
stos
and
fstpt
mov
add
call
adc
jle
movsl
mov
add
lcall
add
loop
inc
fwait
mov
add
pop
mov
test
add
in
shrb
inc
testb
rorb
insb
add
es
dec
jnp
jle
mov
add
lahf
or
add
push
decl
add
add
popa
rcrb
add
ds
pop
mov
jl
dec
add
fwait
cmpsl
ja
incl
mov
jecxz
loop
lcall
cli
ret
jle
push
dec
mov
add
jecxz
add
cmp
jmp
dec
addl
leave
add
jae
and
pop
stc
add
mov
mov
and
jb
jle
and
mov
add
scas
or
add
jo
mov
incl
push
mov
mov
push
sahf
fists
adc
add
popa
jo
leave
push
jle
or
add
adc
in
push
pop
add
mov
add
addl
aam
add
or
add
mov
add
add
cmp
das
pop
ja
or
in
inc
push
and
pop
ljmp
add
push
fimuls
incl
data16
jecxz
add
or
add
shll
ret
add
imul
cld
popf
stos
inc
icebp
sub
mov
imul
lcall
add
jl
std
incb
dec
out
loop
call
add
add
and
fs
or
fs
out
add
les
ljmp
and
add
fcmovbe
xchg
testb
jno
or
lods
cmp
add
sahf
xchg
dec
std
add
aas
pop
pop
loop
add
add
add
and
add
gs
push
xor
add
add
add
dec
aaa
dec
ja
add
and
enter
enter
and
pop
add
call
mov
add
add
fwait
or
cli
dec
stc
add
sbb
add
jmp
pop
push
idiv
dec
add
add
add
shrl
push
ljmp
pop
pop
mov
mov
add
add
add
mov
add
scas
dec
cmp
add
call
mov
dec
add
or
add
xor
xor
mov
add
add
add
or
lret
add
or
mov
add
add
pushf
mov
add
add
jmp
adc
adc
inc
push
add
add
in
and
sub
add
add
adc
add
jae
lret
add
dec
outsl
aad
dec
inc
add
add
adc
and
testl
xchg
das
mov
int3
test
cmpsl
mov
or
pop
cmp
and
into
pop
testb
add
or
add
add
adc
jecxz
vmread
out
call
pop
add
mov
enter
and
push
dec
adc
filds
add
add
inc
call
lds
je
add
cmp
call
add
add
add
push
add
and
pop
fcmovnu
test
dec
mov
ds
add
repz
imul
add
add
scas
cmpl
add
add
add
insb
add
mov
add
cmp
push
push
add
add
cmp
cmpsl
and
ljmp
jnp
add
sub
loopne
add
add
sarl
loopne
inc
int
dec
addl
loope
or
das
push
scas
das
pop
or
iret
pusha
mov
pop
ret
mov
sub
jmp
jle
add
movsl
jne
mov
add
xor
and
add
sti
dec
and
add
and
fisubrs
lcall
fwait
sbb
lea
push
add
mov
inc
add
xchg
repnz
add
jle
das
imul
xchg
and
add
mov
add
xchg
pop
fcmovnbe
cmp
add
and
lahf
or
loop
mov
loope
mov
cmp
dec
and
out
jns
push
jecxz
add
es
add
lret
add
add
jmp
pop
mov
and
outsl
cmp
add
xor
xor
test
jle
mov
in
loop
shrl
incl
add
cld
pop
xor
sub
add
pop
xorb
add
cmp
add
cmp
fnstsw
xchg
xchg
add
test
add
push
add
repnz
fiaddl
add
daa
add
incl
movsl
and
xchg
or
repz
loop
mov
add
jmp
mov
mov
or
in
test
in
adc
outsl
xchg
xchg
xchg
adc
add
add
add
cmp
inc
aad
mov
add
call
add
repnz
xor
add
or
es
cwtl
push
mov
add
inc
and
sub
stos
mov
jbe
add
and
cltd
lcall
in
mov
in
add
and
aam
jle
add
decl
lahf
cmp
cli
add
ds
push
rcrl
pop
pop
and
loop
ds
leave
aaa
jae
add
add
or
call
jmp
jecxz
add
jp
pop
jmp
scas
lret
jecxz
dec
jnp
xor
xor
mov
mov
incl
out
push
jno
adc
loop
add
adc
das
das
add
mov
lret
sbb
add
mov
or
xchg
call
incl
std
in
cmp
notl
bound
push
in
cwtl
lds
pop
cmp
outsl
add
loopne
push
callw
add
fs
and
jg
add
or
cmpsb
dec
mov
fs
iret
add
adcl
outsl
lods
cmpsl
or
push
ds
mov
add
imul
jp
pop
loope
andl
repz
dec
sbb
or
in
push
loop,pt
pop
sahf
mov
jecxz
mov
imul
cwtl
loope
inc
add
cld
push
popa
in
testb
add
add
pop
mov
bound
add
push
dec
dec
or
cmp
add
out
cs
sarl
testb
and
out
int3
add
add
sti
int3
sub
in
das
sub
add
add
xchg
mov
pop
add
incl
xchg
adc
mov
xor
add
shll
add
rorl
ss
add
and
inc
cltd
ja
add
in
add
xchg
inc
pop
sub
lock
ficompl
xchg
add
cmp
leave
jge
ret
jbe
hlt
incl
lret
push
add
in
and
out
add
add
js
add
cmp
cltd
scas
inc
add
add
push
loopne
ss
mov
xchg
bound
add
sub
scas
mov
stc
or
add
add
inc
jp
xchg
popf
mov
cmp
add
and
dec
aas
les
add
and
lods
or
bnd
adc
clc
sarl
jns
dec
lods
pop
push
fdivs
add
cltd
xor
incl
mov
or
add
cmp
add
mov
mov
jmp
int3
inc
pop
or
daa
jge
pop
testb
fsubrl
or
or
add
pop
cmp
testb
add
popa
sub
out
add
and
cmp
mov
popa
int3
shll
daa
sbb
xchg
movsl
and
add
arpl
add
aad
add
mov
mov
jle
and
pop
call
fadds
out
cld
mov
and
xor
pop
call
add
sahf
pop
and
out
cltd
dec
mov
xchg
adc
aad
jg
fdivrs
mov
dec
add
add
out
aas
push
test
mov
mov
das
das
clc
sub
mov
add
pop
sbb
add
cld
pop
pushf
mov
shlb
xor
pop
je
fimuls
dec
and
xlat
add
and
cmp
jb
and
lock
test
mov
out
add
std
inc
or
add
add
or
in
cmp
fwait
cmc
pop
add
jecxz
je
jae
pop
incl
cld
add
add
cli
mov
incb
jnp
incl
cltd
stc
push
add
add
rcrb
mov
and
test
addl
mov
add
add
add
in
dec
fisubrl
mov
cmpsl
arpl
adc
add
jle
mov
ds
jg
inc
push
test
incl
push
and
popa
fcmovnbe
jmp
adc
dec
add
adc
aas
call
sub
mov
out
or
and
in
add
add
sti
incb
sbb
add
mov
and
bnd
add
inc
mov
pop
decl
inc
add
add
xchg
jno
add
pop
leave
pop
xor
add
loop
mov
or
add
sbb
jmp
and
push
jae
lcall
and
push
add
pushf
sub
sti
dec
cmpsl
lock
outsl
test
jecxz
movsb
psubq
out
add
add
mov
cmp
add
and
repnz
mov
cli
adc
jecxz
mov
sbb
and
out
sarl
scas
xor
mov
js
xchg
or
mov
repz
in
push
inc
mov
add
jle
orl
add
lret
add
ja
cwtl
sub
ljmp
cmp
add
xchg
xorb
push
dec
add
hlt
cld
fcoms
decl
or
mov
add
add
jne
push
add
add
rcll
clc
stc
push
mov
lret
or
push
scas
push
in
pop
jne
and
mov
push
jle
add
sahf
dec
mov
add
ffree
arpl
add
add
add
and
xlat
pop
out
jecxz
jp
mov
xor
cmp
std
add
jae
cmpsl
jmp
add
add
push
mov
insl
add
jle
add
icebp
call
add
in
in
lret
ljmp
and
lret
mov
sub
loop
cli
jecxz
add
add
in
fstpl
add
add
iret
push
jle
add
and
mov
dec
dec
add
add
lods
and
add
sub
add
in
incl
sbbl
cltd
popl
xchg
xchg
ds
jmp
fadds
movsb
mov
xchg
test
add
into
add
and
ficoml
push
fiadds
add
bound
pop
add
add
add
mov
xor
daa
iret
ds
dec
incb
mov
and
jmp
fildl
stos
inc
pushf
roll
add
add
and
mov
lret
scas
push
jecxz
ljmp
imul
outsl
and
add
add
xchg
incl
jecxz
sbb
pop
jae
mov
jae
mov
jp
add
and
xchg
add
enter
data16
add
sbb
add
daa
outsb
bound
add
subl
rolb
aas
mov
lds
add
dec
xchg
aam
add
xchg
and
dec
and
pushf
les
les
add
add
add
das
jg
loope
inc
lahf
add
add
sbb
fst
std
dec
pop
adc
pusha
fyl2xp1
aad
add
cmp
jecxz
add
or
int
pop
or
shlb
dec
out
add
add
loop
xchg
sbb
mov
fwait
ds
outsl
icebp
fisubl
fs
pop
fldenv
mull
add
add
adc
leave
and
add
cld
pusha
popa
ljmp
dec
add
mov
mov
mov
add
jle
sub
add
mov
sub
add
stos
out
enter
xor
dec
out
in
and
icebp
add
popf
xor
dec
or
es
shl
add
or
xchg
shlb
inc
jbe
loope
add
pop
xor
add
add
add
add
add
icebp
jg
and
add
inc
les
popf
or
sub
or
jle
add
cmpsb
out
push
lahf
push
pushf
lret
test
gs
loop
adc
imul
and
sub
das
add
mov
pusha
mov
add
rorl
add
add
insb
leave
psadbw
mov
xchg
push
shl
out
push
push
bound
add
mov
movsl
test
aaa
incl
add
add
add
or
loopne
sbb
and
into
lcall
jle
sub
rcrl
test
dec
ss
test
xchg
inc
pop
add
pop
dec
mov
add
cwtl
jge
loope,pn
add
or
push
and
loopne
daa
pop
add
add
and
jb
jp
or
add
jge
sbb
jnp
mov
xchg
mov
mov
pop
enter
lret
sbb
rolb
and
fisubs
jge
inc
add
mov
add
add
inc
rcr
lahf
or
incl
add
mov
jle
add
fistl
xchg
outsb
push
add
lret
adc
idiv
loopne
add
and
xchg
add
roll
add
add
jmp
jmp
add
xor
sbb
pop
ret
jg
sbb
add
mov
fistpl
pop
dec
add
push
fsubrs
add
add
add
add
dec
dec
mov
add
add
sbb
pop
mov
mov
add
cli
repnz
lret
add
std
lret
pushf
aaa
xor
adc
mov
xor
pop
pop
mov
add
and
decl
nop
test
and
or
xchg
fimull
mov
xor
mov
or
sahf
add
mov
inc
stc
push
out
dec
add
mov
add
add
fs
push
popf
out
mov
jp
push
xor
call
ds
xchg
add
cmp
popf
loop
add
mov
push
add
lahf
pop
sbb
xchg
add
out
orl
roll
dec
push
mov
mov
push
add
inc
test
fidivrl
add
add
arpl
in
das
std
sub
add
jo
loope
or
add
les
data16
add
nop
jbe
cmp
das
cmpsl
sub
cli
xchg
add
add
in
cmpsl
and
iret
repz
add
incl
shrb
add
fsubrs
jmp
add
arpl
add
test
pop
subb
jbe
fs
call
in
adcl
lret
pop
or
add
popf
idivl
mov
mov
and
add
fcompl
and
loop
jecxz
mov
iret
mov
sarb
and
add
pop
adcl
and
shl
incl
mov
fstpt
add
jg
and
or
and
test
add
cmp
sbbl
arpl
aad
and
xor
xchg
mov
add
loope
jno
xchg
aaa
orb
scas
into
xchg
push
add
add
jge
bound
lcall
lret
in
in
and
fisubs
add
push
outsl
in
test
jne
and
add
aas
pop
jg
inc
add
add
repz
lcall
cmp
pop
clc
add
add
add
icebp
and
or
mov
cli
add
add
out
cmpb
mov
inc
arpl
insb
addr16
dec
add
imul
loop
jecxz
mov
xor
jne
cmp
movsl
add
add
fmull
add
add
push
shlb
je
insl
loopne
mov
push
je
cmp
mov
insb
push
cmp
out
call
add
cmp
jg
or
sar
add
add
mov
arpl
ficoml
add
add
leave
ret
push
add
cli
repz
dec
sbb
lock
loop
bound
out
daa
loope
sbb
add
add
jecxz
insl
js
jg
add
sub
sbbl
add
mov
add
sub
add
sarb
dec
les
xchg
cltd
push
add
int3
ljmp
add
mov
push
add
call
add
inc
mov
add
jmp
roll
add
cmc
loop
loop
mov
aaa
mov
add
mov
pop
cmpsb
inc
inc
add
mov
add
and
or
add
add
add
add
xor
xchg
add
aas
fld1
ljmp
add
pop
popa
jmp
add
cmp
or
add
add
jg
mov
test
add
add
mov
add
scas
jmp
mov
aas
jmp
mov
popa
jae
sub
adc
lods
xor
out
xor
call
add
jmp
addr16
aam
and
add
mov
mov
outsl
jg
jecxz
xor
sbb
incl
ds
aad
repnz
icebp
scas
add
push
inc
sti
or
dec
mov
mov
pop
and
int3
and
jle
test
add
in
std
add
jl
or
mov
and
jecxz
xchg
add
and
in
push
pop
push
cltd
lahf
les
stos
add
jmp
add
add
incl
mov
lea
xor
mov
js
push
and
fmuls
add
push
push
test
in
mov
push
jne
repz
enter
sub
add
mov
lea
jmp
mov
add
dec
mov
add
add
add
or
push
sarb
cmpsl
add
xor
dec
xchg
and
add
add
or
mov
mov
jle
out
or
and
repz
xor
sub
jecxz
jmp
mov
push
cmp
dec
pop
std
mov
adcb
test
outsb
dec
roll
mov
add
dec
dec
icebp
sub
add
incl
push
filds
and
add
add
jl
aam
mov
mov
jno
add
in
in
fcoml
imul
push
ss
xlat
fs
call
scas
pop
and
inc
data16
psubd
cwtl
fcmovbe
add
add
add
xchg
jp
icebp
and
les
push
cmpsb
mov
and
clc
add
dec
jae
add
sti
jl
mov
jle
incl
loopne
and
enter
mov
out
add
aad
test
inc
xchg
or
add
pop
jl
lret
dec
fimuls
adc
daa
mov
sbb
ror
adc
add
add
aaa
xor
push
loopne
add
out
in
cwtl
cltd
mov
and
int3
sbb
xor
inc
incl
push
pop
inc
outsl
jmp
js
add
lcall
out
pusha
loop
inc
stos
cmc
fsubs
dec
into
cmp
in
pop
push
push
movl
add
imul
pop
add
dec
push
add
stos
xchg
mov
mov
std
incl
sahf
in
xchg
jnp
out
mov
xchg
add
nop
add
xchg
sbb
sub
and
mov
sub
and
enter
sub
add
and
add
add
add
imul
je
idivb
jns
add
test
push
hlt
add
mov
or
add
or
add
sti
dec
pop
add
add
ja
or
add
or
add
mov
add
mov
add
or
popf
cmpsl
or
jno
jmp
pop
pop
cltd
add
add
and
cs
repnz
sub
add
and
xor
in
add
lock
dec
fwait
les
xchg
dec
jg
jae
add
jmp
pushf
inc
imul
mov
xchg
loope
add
and
leave
cmp
decl
hlt
xchg
cmp
add
add
add
pop
cmp
jecxz
add
jo
test
loop
jnp
pusha
negl
lret
jl
pop
add
jbe
test
mov
jle
add
pop
lret
push
xchg
repnz
mov
and
push
and
add
add
mov
xchg
flds
and
in
cld
push
imul
mov
jb
xor
add
dec
adc
push
mov
add
or
add
loope
cld
add
loope
push
jb
add
add
loop
xchg
and
in
xor
add
cwtl
ficomps
mov
mov
push
cmp
pushf
and
add
add
rcr
bound
add
add
dec
shrb
add
test
xchg
or
cwtl
bound
pusha
jbe
add
dec
or
loop
outsl
xchg
jl
rclb
insb
sub
dec
sub
out
mov
out
mov
pop
xchg
add
pop
pop
int3
mov
and
jg
sti
sti
mov
add
pusha
mov
inc
or
stc
and
mov
add
sahf
icebp
stos
or
in
add
subb
add
sub
mov
add
add
pusha
add
jmp
mov
popf
or
push
mov
add
ds
cmp
out
add
shrl
add
add
push
push
sub
jmp
inc
pop
and
out
mov
pushf
outsl
xchg
loope
add
sbb
xor
mov
add
into
xlat
mov
decl
add
push
or
add
cmp
push
or
inc
adcb
ds
out
mov
sbb
lock
add
dec
add
push
mov
add
push
cli
in
push
or
stos
mov
push
inc
imul
add
aam
sahf
fstpt
outsb
pusha
mov
loop
ljmp
aad
jmp
outsl
divl
adc
inc
add
pop
or
leave
and
fnsave
add
inc
shl
pop
std
jecxz
add
add
jne
push
sbb
sbb
out
sahf
pop
pusha
add
push
add
jecxz
push
imul
add
aam
maskmovq
testl
hlt
in
mov
jle
fistpll
push
xor
jmp
add
repz
lcall
inc
inc
pushf
dec
push
mov
enter
add
add
je
xor
pop
add
mov
insl
cmpsb
xor
addr16
repz
jl
mov
mov
add
jp
pusha
call
add
daa
cmp
mov
ds
stos
mov
jecxz
add
lods
orl
and
add
clc
leave
add
xor
add
sbb
add
add
js
ss
adc
jecxz
rcrb
mov
pop
add
mov
and
pushf
xor
int3
add
mov
jbe
mov
add
jo
and
add
or
in
imul
add
fstl
add
stos
jp
pop
ljmp
add
or
int3
sbb
add
test
xor
add
incl
mov
outsb
sub
pushl
add
add
ljmp
adc
add
add
and
lods
mov
push
dec
jb
incb
mov
add
mov
add
mov
add
jae
or
out
jecxz
push
or
add
add
insb
and
and
mov
stos
std
ficomps
add
mov
xor
sbb
pop
clc
jo
add
add
inc
mov
add
gs
xor
dec
orl
add
incl
jne
popa
jno
and
adc
outsb
add
incl
pop
rol
add
jle
add
push
jecxz
mov
xor
insl
mov
jecxz
add
cmp
mov
jecxz
xchg
jae
testb
inc
jbe
out
add
sub
cmpsb
std
mov
popf
popa
out
push
add
sub
add
add
pop
xchg
inc
test
outsb
add
add
mov
jbe
add
add
or
cmc
mov
add
addr16
cmp
fldt
fistpl
shl
or
in
sbb
add
insl
cmp
sbb
aaa
and
jecxz
or
add
mov
mov
jmp
push
insb
cmp
pushl
sarl
xor
xlat
sbb
push
add
inc
add
add
cmp
mov
ja
mov
outsl
add
cli
and
adcl
out
sbb
mov
add
or
xchg
addr16
mov
ds
lea
add
or
inc
loop
add
lcall
in
push
dec
add
inc
jecxz
into
add
lret
push
jmp
ljmp
sbb
in
mov
dec
add
movb
or
dec
mov
add
jg
xchg
inc
scas
out
add
scas
ss
dec
and
add
sub
ror
mov
subb
or
add
add
add
pop
lcall
or
aad
dec
bnd
add
out
test
add
add
cmovg
add
fs
outsl
adc
pusha
cli
lret
jg
xchg
out
dec
jecxz
pop
add
pop
test
jecxz
and
jns
add
jg
sub
incl
decl
jg
mov
sbb
mov
pop
cltd
add
stos
mov
inc
mov
mov
jmp
fdivl
jbe
add
cmpsb
push
pop
std
jae
add
outsb
or
push
add
mov
add
pop
mov
add
mov
jo
orb
mov
decl
add
xchg
sub
and
loop
aad
dec
push
push
add
or
jb
add
add
add
pop
mov
mov
addl
mov
add
cmp
mov
xchg
dec
sbb
fidivrl
jle
add
and
aas
lods
andb
add
mov
jg
out
add
add
stc
and
fsubl
mov
pop
add
cmp
add
add
add
insl
sahf
jnp
cltd
xchg
jmp
outsl
cwtl
fs
std
cltd
add
add
test
lahf
cmc
xor
jp
add
pop
ss
or
jle
jl
movsb
cmp
mov
add
les
add
sti
cmc
rcll
and
adc
cwtl
imul
and
jle
ljmp
loope
add
in
fs
cmp
push
xchg
add
dec
jae
xor
add
incl
mov
subl
sbb
jmp
aaa
or
sar
fnstenv
dec
add
jecxz
jl
scas
add
or
incl
mov
les
jecxz
add
add
and
dec
addl
or
push
fldenv
cmp
mov
or
les
add
mov
cwtl
fs
loop
cli
fsub
adc
loop
loop
or
stos
sti
scas
dec
add
cmpb
and
cmp
cmpsl
mov
push
inc
add
add
push
push
and
add
add
loop
iret
bound
inc
add
imul
fisubl
push
push
jl
mov
das
rcll
fisttpll
mov
movb
add
mov
push
and
data16
dec
mov
mov
das
pushl
dec
aam
add
or
iret
in
icebp
or
fcmovnb
ljmp
pop
cmp
and
add
jmp
je
mov
mov
or
fwait
nop
lret
sahf
iret
sbb
inc
les
jg
jmp
dec
push
mov
add
in
stos
push
pop
fwait
std
add
sub
les
fcomps
and
add
das
jle
pop
xchg
cmpsb
or
les
mov
add
add
dec
decl
and
mov
add
add
outsl
inc
imul
sub
aad
mov
xor
call
pop
fs
add
add
add
xchg
addl
sarb
add
and
test
test
cwtl
mov
frstor
les
mov
adc
repz
rcll
aam
sbb
aaa
dec
add
add
cmp
or
pop
xor
add
push
add
xchg
add
inc
jnp
add
jmp
out
repz
out
and
out
mov
jmp
add
pushf
pop
xchg
and
jle
adc
aaa
pop
jno
dec
mov
mov
push
test
decl
add
add
das
addr16
lahf
xchg
add
and
test
int
add
jl
inc
daa
add
add
and
cmpsb
pop
mov
add
loope
adc
sti
cld
pop
add
mov
loop
and
jecxz
add
add
in
fbstp
jnp
add
add
dec
cli
gs
sbb
inc
and
stc
mov
push
sbb
pusha
mov
add
xchg
xor
add
sbb
add
xorb
in
fmull
add
insl
inc
and
les
cmp
mov
addr16
cld
jnp
push
mov
pop
movsl
jecxz
push
je
aam
add
add
adc
and
dec
jbe
outsl
add
add
aaa
cmp
xor
add
dec
add
push
gs
jge
jno
dec
xor
imul
mov
jns
add
lock
add
mov
incl
or
rorb
or
add
sahf
jmp
jl
mov
mov
cmpsb
pop
test
add
pushf
fstpl
add
and
or
adcl
mov
jae
and
add
incb
add
add
sub
fsubp
mov
xor
pop
sub
sub
add
mov
loop
add
std
rclb
sbb
jle
add
incl
jle
xor
and
adc
inc
add
adc
fst
add
lcall
add
in
push
mov
add
incl
mov
cmp
mov
pop
ret
pop
pop
das
add
negb
xor
add
or
xor
stc
bound
xchg
mov
and
add
mov
fs
add
les
test
mov
add
inc
xchg
call
add
sarb
add
push
add
mov
xchg
pop
xlat
ja
cmp
mov
inc
sahf
push
mov
mov
add
cwtl
mov
mov
jnp
mov
jecxz
add
inc
add
lret
pop
add
and
add
call
or
mov
loope
in
imul
add
outsl
pushl
pushf
sahf
sti
mov
dec
mov
das
adc
lock
dec
call
add
test
lahf
cmp
add
dec
xchg
push
add
jmp
dec
aam
repz
add
ljmp
add
mov
mov
and
and
clc
and
add
sbb
jecxz
xor
jnp
cmp
cmp
cmpsb
xchg
or
jns
dec
pop
and
mov
add
add
fdiv
sbb
add
add
add
inc
sub
decl
mov
add
add
adc
or
push
add
aam
rcl
cs
sbb
in
lcall
add
data16
dec
aas
fwait
incl
add
add
imul
sub
jle
les
inc
add
add
add
or
mov
loop
verr
hlt
cmp
and
mov
xor
push
sbb
add
dec
mov
repz
inc
fstps
add
inc
test
xor
add
inc
sub
mov
icebp
sarl
inc
lcall
mov
push
mov
mov
add
inc
pop
jnp
pop
add
les
push
cmp
in
mov
mov
and
test
mov
mov
fnstsw
pop
in
push
enter
add
sub
in
ja
add
incl
xchg
int
sub
jg
jae
mov
loop
or
xlat
jl
add
add
jle
nop
lret
sbb
add
in
stos
inc
lcall
jmp
add
aas
scas
aam
pop
fadds
add
push
rol
loop
add
push
sbb
decl
jle
add
or
add
dec
cmc
fcoms
and
outsl
add
clc
lods
mov
add
add
and
push
cmpsl
dec
movl
orl
add
add
cmpsb
addb
add
add
and
out
add
dec
push
cs
mov
add
and
add
push
jg
insb
out
add
add
pop
out
pop
add
pop
ljmp
mov
ljmp
decl
push
clc
jne
jnp
decl
call
insl
add
incb
or
mov
bnd
add
dec
std
rcll
add
add
movsb
or
out
inc
mov
add
das
flds
add
add
add
jecxz
sbb
or
cltd
imul
movsb
addl
mov
sbb
add
mov
fs
jp
add
push
incl
or
fwait
dec
pop
pop
jg
lcall
jo
addl
gs
add
add
cli
lods
mov
dec
aam
add
mov
aam
dec
inc
les
inc
je
lret
add
add
cld
fdiv
aas
fmull
add
add
or
js
jecxz
add
aaa
xchg
or
lds
or
push
dec
add
pushl
gs
incl
std
rcll
add
and
jecxz
push
sbb
repnz
or
fsubrl
sub
pop
addr16
cmp
lahf
dec
add
and
add
add
inc
cmp
dec
mov
out
fwait
push
inc
inc
addl
sahf
jg
in
les
int
repz
enter
call
pop
add
jnp
dec
xchg
fmuls
sub
or
loop
mov
mov
mov
add
pop
ds
test
jnp
push
pop
fisttpll
mov
sbb
ret
add
add
cmpb
movsl
scas
push
push
or
xor
jle
push
and
ds
mov
add
add
sbb
dec
stos
add
mov
add
xor
push
xor
addl
cmp
cli
jge
mov
sbb
add
jecxz
add
add
push
cmp
xor
add
add
add
call
mov
das
jg
push
pushf
xlat
mov
jnp
cmp
loop
test
xchg
out
add
mov
lds
jecxz
add
add
xchg
add
jecxz
orl
add
pop
or
incl
ljmp
adc
mov
add
jne
mov
stc
inc
pop
shr
js
add
pop
mov
add
pop
add
rcr
add
mov
pop
jbe
push
add
call
les
add
add
xchg
add
fistps
int
dec
add
add
lret
or
adcl
add
add
mov
xor
out
add
lea
aaa
inc
incl
add
std
sbb
add
push
loop
dec
std
roll
fsubs
and
pop
call
adc
and
mov
push
jbe
sarb
add
mov
mov
das
or
insb
shll
sahf
jmp
add
sbb
xchg
imul
inc
dec
add
cmp
test
add
and
movsb
add
push
push
push
addl
dec
add
jle
add
mov
les
incl
das
pop
frstor
cmp
movl
pop
outsl
add
mov
add
add
inc
jp
or
jg
cmp
add
ljmp
jb
jnp
incl
nop
in
and
aam
mov
and
mov
dec
mov
inc
xor
add
jl
add
sbb
or
push
call
lods
cmp
add
and
add
add
cmp
roll
add
jg
aaa
jecxz
add
movsl
insl
cmc
stc
outsb
js
push
subb
out
in
test
cmp
jle
add
clc
dec
cmp
out
fsubs
dec
repz
mov
add
orl
lods
mov
add
fwait
jb
ljmp
cmp
sbb
imul
xor
in
in
lods
mov
add
add
or
add
les
push
out
les
jg
add
insl
addr16
add
add
and
mov
les
inc
lods
add
enter
adc
ret
call
out
les
add
sbb
add
mov
add
int
fcompl
add
add
repz
dec
mov
sub
push
ret
add
loop
aam
sbb
lret
mov
inc
sahf
lods
sub
mov
add
aas
popa
rcrl
subl
in
add
out
add
pop
lahf
and
cmp
pop
outsb
loop
inc
ds
outsl
sub
mov
adc
jle
fistpl
js
add
dec
sub
gs
repz
call
rorb
in
mov
dec
jle
jmp
xor
add
add
and
lcall
jp
add
call
jmp
cld
negl
and
popf
cmp
repnz
cmp
inc
add
mov
jmp
add
out
lods
add
adc
jmp
add
add
jbe
add
test
sti
push
fisubs
adc
sbb
add
cmp
addl
shlb
add
or
pop
jle
dec
add
incl
jecxz
add
lahf
add
add
push
xchg
and
add
int
and
and
jo
add
jo
lcall
add
xchg
or
mov
and
and
insb
add
or
nop
or
adc
add
jmp
add
adc
ret
stos
add
repz
push
or
push
push
not
mov
and
dec
or
mov
fs
push
add
ds
add
das
and
aam
dec
inc
aad
jb
jp
add
jg
xor
aas
add
cmc
cwtl
icebp
pop
add
dec
or
mov
inc
loop
loope
pop
jo
add
incl
add
mov
clc
add
or
std
or
add
daa
mov
rorl
jmp
mov
int3
add
add
push
sbb
addr16
inc
lret
dec
das
add
dec
add
out
xchg
jnp
fs
mov
les
add
dec
jp
ljmp
add
mov
movsl
mov
mov
cs
or
dec
mov
mov
out
add
push
leave
fs
int
scas
sub
pop
ljmp
mov
xor
jmp
xchg
mov
add
add
add
std
in
movsb
repnz
and
add
addr16
mov
add
add
pushf
xchg
and
jecxz
fsub
mov
mulb
xchg
jecxz
mul
popa
pop
jbe
add
inc
sub
jecxz
es
jb
add
add
and
and
incl
xchg
mov
push
xchg
imul
testb
decb
add
adc
imull
add
add
add
stos
fwait
inc
leave
add
add
dec
adc
sbb
jmp
or
mov
add
push
ds
add
sbb
add
jb
sbbl
add
add
add
push
sub
pop
jg
or
popl
mov
add
les
pop
add
dec
ss
aad
add
ds
dec
in
sbb
xor
pop
or
add
jg
add
sub
test
add
add
mov
cmp
add
or
sbb
cmp
xchg
dec
inc
out
pushf
and
repz
mov
or
add
cmp
inc
jns
add
or
add
inc
sub
loop
incl
and
xor
xchg
jno
xor
add
cmp
outsb
call
flds
jecxz
clc
addr16
add
incl
add
ret
rcrl
pop
add
loop
fimuls
in
add
add
push
pop
arpl
in
adc
cmc
pop
and
and
jb
jnp
and
aaa
xor
fsubrs
ficomps
mov
dec
lds
loopne
add
mov
add
add
addr16
repnz
add
xchg
sub
sub
bound
add
mov
add
push
ljmp
xor
out
xchg
insb
lahf
ds
out
add
iret
mov
add
mov
add
das
mov
jle
movsb
cltd
xchg
jae
add
scas
movsl
add
push
or
add
lods
in
sahf
out
add
add
or
add
loop
sarl
add
add
out
cwtl
xor
add
in
mov
subl
inc
mov
mov
mov
aas
pushf
add
das
pop
fwait
mov
or
and
xchg
xchg
add
in
stc
mov
and
push
jl
repnz
outsl
jle
out
in
add
pop
in
push
fwait
add
jg
jns
lds
add
xlat
outsl
cli
mov
add
or
loop
sbb
mov
add
mov
add
outsl
and
xchg
leave
clc
icebp
or
add
jno
mov
cmp
push
insb
mov
mov
add
outsl
add
add
aam
mov
shl
and
pop
sbb
add
and
insl
movsl
xchg
or
call
add
mov
inc
fldt
xor
and
and
add
fimull
mov
add
in
add
pop
mov
mov
out
add
xchg
xorb
lcall
add
call
add
pushf
or
pop
xchg
lcall
add
add
add
and
insb
movsb
mov
add
push
push
loop
mov
add
add
mov
jle
jno
mov
dec
add
cmp
add
add
cltd
sbb
add
add
add
mov
add
fwait
int
push
xchg
mov
jb
lretw
add
pushl
mov
out
jmp
lret
add
pushf
jbe
add
loop
sahf
cwtl
mov
dec
add
jg
jo
adc
add
out
into
pop
fcoml
pop
cmp
and
movsb
roll
add
mov
add
add
add
fidivl
add
dec
xor
in
add
add
hlt
jg
mov
add
jle
lret
jge
add
popf
dec
shll
fdivrs
xchg
repz
icebp
mov
repnz
jns
jle
add
icebp
ljmp
add
and
add
and
and
mov
adc
lahf
push
cwtl
jb
loope
mov
add
mov
inc
jp
into
hlt
in
add
in
jnp
mov
loop
imul
add
mov
add
add
add
add
jecxz
xor
inc
add
insb
adc
int3
int
in
push
adc
mov
add
adc
shlb
add
sub
push
push
add
add
add
or
jae
loop
shlb
xchg
in
xor
add
and
aaa
add
add
cmp
mov
add
add
add
nop
cmp
add
and
add
add
mov
addl
ss
in
adc
pop
or
pop
dec
movsl
out
test
add
nop
stos
dec
and
add
add
or
jno
push
mov
add
stc
mov
sbb
add
decl
or
xchg
cmp
jecxz
add
loopne
add
aaa
inc
lods
or
add
icebp
cmpsl
lret
lcall
add
and
out
and
mov
jg
fbld
add
lret
cmp
add
add
adc
ljmp
add
add
sub
xchg
cmp
lahf
and
cmc
add
mov
jnp
repz
jecxz
lea
cmp
clc
bound
dec
nop
popf
scas
add
add
add
dec
cltd
push
gs
add
mov
dec
inc
insb
mov
mov
fucomip
sahf
xchg
ret
add
add
add
add
cmp
add
enter
add
and
or
les
call
sti
addb
sarb
jne
ds
addl
add
add
jp
jnp
and
and
fisubl
lret
add
or
movsb
xchg
xor
add
add
mov
adc
stos
add
ficompl
int3
add
add
push
xor
xchg
add
test
add
xchg
repnz
add
add
cwtl
sbb
pop
add
jns
mov
sub
rorl
inc
aad
jle
sbb
nop
movsl
outsb
les
loop
ljmp
and
push
pop
mov
add
ficompl
js
add
jle
mov
jnp
mov
dec
cmpsb
in
jecxz
cmpsb
sti
das
mov
and
add
add
call
mov
inc
dec
pop
add
add
add
jbe
test
imul
out
pop
cmpsb
mov
movsb
sbb
movsl
jecxz
push
movsl
clc
push
add
mov
outsb
pushl
ss
dec
jmp
incb
cmpsl
inc
xchg
dec
lret
add
add
arpl
int
out
add
add
add
push
add
add
dec
or
add
call
and
push
add
lock
les
mov
cmp
cmp
dec
repz
adc
add
add
jnp
dec
or
add
or
incl
mov
out
cltd
add
add
shlb
add
repz
sti
roll
nop
cmp
fimuls
add
loop
repz
add
call
add
addl
decl
inc
imul
dec
add
jae
js
dec
orl
in
repz
or
test
loope
mov
add
add
or
stc
cmp
jne
add
mov
xor
add
decl
mov
add
fidivl
mov
push
movsb
fistps
loopne
adc
add
incl
mov
and
add
pusha
int
add
xchg
pop
sub
mov
loope
or
jns
mov
incb
dec
fstl
jmp
add
out
push
popf
add
sbb
repz
outsl
imul
out
dec
add
dec
call
incl
add
dec
mov
sbb
jecxz
and
outsl
or
notb
xchg
and
add
adc
pop
lds
in
lahf
xor
dec
and
dec
fsub
shlb
bts
hlt
and
add
shrl
add
mov
rolb
add
fmuls
cmpsl
ret
mov
fiaddl
jecxz
mov
repz
push
add
dec
imul
add
inc
pop
test
pop
sub
out
mov
movsb
addb
popf
mov
call
and
and
bnd
test
add
popa
add
add
mov
sbb
in
ljmp
push
and
ret
gs
bound
imul
bound
jne
imul
imull
xchg
add
scas
add
lret
jle
mov
add
push
jbe
iret
call
add
in
jmp
loope
jo
les
add
push
fucomp
int
add
mov
mov
add
cmp
aad
pop
adc
js
and
add
rolb
push
push
das
inc
mov
je
add
rolb
mov
add
cld
add
das
mov
push
test
or
das
add
add
jno
add
clc
or
and
dec
test
sbb
add
add
in
or
mov
add
add
sbb
and
jno
add
sub
pop
and
cltd
std
xchg
shl
ljmp
jmp
bound
add
jmp
packssdw
add
add
test
jg
pop
mov
jmp
xor
insl
xchg
dec
mov
sti
popa
add
andl
add
loop
cli
or
push
add
std
mov
or
add
add
cwtl
loop
incl
mov
or
fiadds
loop
push
stc
and
insl
add
dec
ss
add
and
popl
add
add
movsb
int
mov
add
mov
loop
add
loop
jnp
pavgw
add
das
xor
imul
out
add
mov
jl
enter
and
out
aad
add
or
test
ss
loope
mov
add
inc
adc
jecxz
add
iret
xchg
sbb
mov
dec
sbb
or
cmpsl
mov
and
dec
pop
add
and
or
mov
outsl
out
fsubl
xor
add
add
pop
jns
shl
and
addl
add
sbb
cmp
mov
std
xchg
add
scas
xor
xchg
inc
add
add
add
mov
mov
sub
and
and
add
or
aam
add
test
andl
inc
push
jo
out
push
adc
or
and
add
scas
jbe
pop
add
loop
pop
mov
add
push
add
add
in
pop
call
adc
filds
and
add
dec
lds
rep
jns
inc
cmp
add
cmc
cwtl
mov
add
xchg
jns
in
add
call
sub
clc
mov
addl
fdivrl
std
stos
mov
add
xor
sub
sahf
jle
add
add
dec
insb
push
adc
add
mov
jbe
and
inc
add
add
leave
jge
push
xchg
add
jle
push
jb
rorl
fldt
aaa
leave
jecxz
inc
mov
jnp
jecxz
loope
data16
cmp
add
push
pop
mov
and
mov
add
add
call
or
or
xchg
dec
add
and
jae
xchg
rorl
popf
or
nop
ja
add
fstl
add
add
int
add
aaa
fisttps
mov
add
incl
push
es
add
mov
inc
aad
out
push
adc
mov
pop
sti
popa
test
loope
add
js
jl
out
add
add
push
and
dec
lret
adcb
jecxz
out
mov
call
sub
add
cmp
add
cli
push
icebp
and
and
andl
or
sub
fwait
cmp
add
xchg
loope
inc
add
add
imul
sti
in
cwtl
mov
jbe
lcall
add
movsl
rcll
add
add
add
jp
push
enter
mov
mov
outsl
add
add
add
add
pop
add
add
pop
push
ljmp
mov
fs
xor
mov
rolb
mov
enter
add
add
ret
stos
repnz
add
insl
mov
xor
loop
mov
insl
sub
in
mov
xor
mov
add
lcall
adc
call
pop
add
add
dec
lock
clc
mov
add
mov
mov
and
in
cmp
test
pushl
lods
hlt
cmp
test
out
or
add
dec
inc
arpl
add
jle
js
stc
insl
loopne
add
push
and
or
add
lcall
lods
pop
or
mov
jmp
mov
int
or
push
out
jo
dec
mov
pop
sub
and
add
xchg
jmp
incb
imul
add
add
cmp
add
add
mov
cmc
imul
add
or
mov
ret
dec
pusha
in
cmp
les
mov
xchg
sbb
cld
ret
insb
push
jo
add
cmp
pop
mov
mov
sahf
sub
insb
lods
cmp
add
roll
and
cli
inc
rcrb
xchg
loop
decl
push
pusha
popf
icebp
mov
in
or
in
and
mov
sahf
addr16
mov
and
jle
add
repz
mov
pop
fistpll
cmp
incl
dec
add
push
sbb
pop
sub
in
add
and
sbb
scas
les
and
roll
xor
mov
add
add
pusha
push
jbe
mov
and
pop
into
loope
jmp
add
add
loope
sbb
jl
mov
add
mov
mov
ss
cmp
jno
jmp
or
and
incl
or
stos
iret
sbbl
mov
mov
loop
shll
rclb
dec
or
mov
pop
inc
push
mov
scas
data16
add
add
push
mov
imul
mov
incl
add
add
ret
jb
ret
loope
jecxz
cmp
cmp
jno
push
inc
test
xlat
mov
test
imul
mov
sbb
lcall
adc
push
add
dec
add
add
addr16
push
add
in
push
and
cmp
cmpsl
sbb
push
les
and
mov
ja
dec
jecxz
add
jecxz
inc
mov
es
pop
jecxz
add
and
or
add
mov
add
in
and
outsb
cmpl
add
imulb
add
mov
nop
ret
add
mov
push
xchg
add
add
cmp
incl
dec
incl
cmpsl
rcrl
add
scas
mov
movsb
push
add
fbstp
mov
cmpsl
mov
cld
rcrl
jle
jecxz
or
dec
add
dec
add
cld
imul
add
or
scas
and
mov
jecxz
mov
or
lret
pop
aam
in
pop
lods
pop
adc
sbb
into
add
mov
add
jb
jnp
and
mov
loop
and
fnstenv
add
call
sbb
add
imul
add
add
incb
call
out
test
add
fmul
loop
jmp
add
add
add
jle
or
lcall
cwtl
imul
inc
add
icebp
and
fwait
xchg
test
scas
ret
add
add
cmp
loop
add
jle
push
add
out
jle
daa
mov
or
add
scas
pop
scas
lret
enter
add
jecxz
int3
mov
mov
adc
dec
pop
in
dec
xor
out
scas
pop
pop
das
inc
jle
mov
add
mov
pop
add
jp
rorl
mov
decl
add
mov
call
inc
pushf
jb
pop
pusha
stc
cmc
jno
add
addb
mov
xor
mov
sbb
popa
and
add
add
shlb
dec
jle
stos
clc
pop
bound
jecxz
add
add
dec
ljmp
dec
rcll
add
lcall
cmpb
push
push
movsl
int
jnp
dec
jecxz
and
cmp
out
mov
in
mov
cmpsl
notl
icebp
xor
stos
dec
push
orl
mov
loope
add
inc
loop
push
stos
xchg
mov
mov
mov
insb
sar
add
add
mov
add
cmpsl
push
jae
mov
add
insl
sbb
repz
aam
xor
je
sarl
inc
movsl
repz
movsl
add
int3
adc
insl
sbb
add
jecxz
push
shll
add
add
cmpsl
adc
cmc
add
add
mov
push
movsb
ljmp
add
dec
push
mov
movl
or
cld
cmp
sbb
and
daa
mov
insl
cwtl
adc
add
jge
inc
mov
add
leave
sbb
or
add
add
xor
pop
shl
mov
ljmp
out
loop
and
sub
and
xchg
add
dec
repnz
add
daa
add
add
add
jo
xor
test
sahf
movsl
loope
inc
cld
xor
pop
sbb
lret
mov
add
add
add
add
add
in
in
pushf
orb
add
movsb
add
add
aam
add
add
sbb
in
cwtl
xor
decl
fistpll
test
cli
inc
js
cmp
shll
loopne
cs
add
mov
popl
add
je
xor
add
inc
push
or
pop
incl
das
add
jnp
xchg
cmpl
es
jp
clc
leave
jb
and
add
add
loopne
jnp
add
addl
xor
mov
dec
lock
and
mov
mov
cmp
jne
mov
pushf
cmp
fwait
jecxz
push
mov
sub
add
mov
in
loopne
jecxz
and
xor
add
add
mov
decl
add
push
sti
ret
xor
mov
idiv
push
add
jecxz
jl
out
dec
mov
add
jmp
mov
stos
test
jl
add
mov
icebp
cmc
int
add
mov
fsubrs
adc
xlat
add
add
sub
clc
add
fwait
sbb
add
add
add
mov
mov
mov
mov
add
outsl
das
fistpl
arpl
add
add
gs
inc
cmpsb
jecxz
push
inc
aam
add
clc
or
rolb
repz
into
sbb
add
aas
sbb
or
sub
add
jmp
out
mov
ds
jge
std
sub
lret
and
add
xchg
fcmovnb
add
add
ss
inc
add
add
push
lods
test
outsl
xchg
movsb
jp
das
push
cmpsb
dec
ss
add
insb
testl
pusha
mov
leave
outsb
cmp
add
outsb
add
add
jecxz
addr16
loopne
add
popa
out
repz
sahf
ss
loop
sbb
mov
and
add
lret
sbb
or
add
push
mov
add
and
add
das
and
mov
cwtl
and
jecxz
add
xor
test
movsl
fiaddl
incl
add
in
add
scas
cmp
add
shrl
add
loop
mov
sti
xor
dec
add
mov
lea
cwtl
ret
jge
push
fwait
insl
testl
adc
push
adc
add
add
mov
hlt
add
jle
pop
ljmp
add
lret
xchg
in
add
add
imul
incl
scas
daa
xor
jmp
xchg
push
cli
sbb
add
mov
add
add
notb
add
cltd
xor
jecxz
loope
in
loope
out
testl
fnstcw
sbb
cmp
add
test
out
aad
rorl
aam
and
dec
add
cmpsb
loopne
aas
mov
mov
das
and
aaa
push
jae
aad
add
or
js
das
xor
add
jge
sbb
cltd
or
sub
into
ret
add
jle
sbb
push
lcall
sub
pop
jl
and
or
add
and
les
add
adc
stos
rcrb
cld
xchg
and
mov
loop
xchg
jecxz
xlat
sub
movsb
lock
mov
decl
sbb
add
movl
loope
incl
in
add
add
repz
ljmp
pop
jo
jmp
jb
out
mov
lock
mov
add
incl
add
fidivrl
pop
test
incl
sti
add
mov
jmp
mov
les
add
xor
push
stos
iret
sahf
and
ret
nop
xor
push
cmp
lcall
push
add
dec
xor
std
cmp
and
push
add
push
add
push
loope
add
mov
inc
add
add
add
xchg
popf
fwait
or
call
fdivr
call
add
in
std
and
add
xlat
je
add
add
add
mov
pop
sbb
add
outsb
and
add
add
pop
outsl
stos
and
fistpl
sub
cmpsb
or
in
out
and
jge
jecxz
das
das
or
insb
fbstp
add
push
push
or
or
sbb
pushf
addr16
inc
incl
out
lods
inc
xchg
and
ret
xchg
push
and
insb
mov
call
add
add
decl
fnsave
and
outsl
in
sub
jmp
add
add
add
add
add
mov
dec
pop
out
rorl
dec
lods
clc
xor
decl
fildll
add
add
shrl
sbb
add
rorb
add
jecxz
add
mov
mov
call
int
add
out
mov
ss
xchg
xor
test
add
add
add
add
loop
mov
dec
stos
inc
and
xchg
repz
test
out
mov
ljmp
imul
out
incl
incl
add
sub
jecxz
add
or
add
mov
mov
jmp
mov
leave
aas
or
rol
jl
push
add
mov
into
jle
add
inc
mov
call
pop
push
mov
out
das
or
mov
add
add
push
into
subl
jg
flds
lahf
shrl
cmc
jp
add
add
add
push
jbe
pop
dec
out
add
mov
mov
add
scas
clc
loope
add
add
repz
pushf
fwait
push
add
add
aam
stc
ljmp
rclb
daa
cmpsb
lds
or
flds
add
add
outsb
call
aad
loop
pop
das
dec
add
add
mov
xchg
cmp
sahf
cmc
arpl
add
outsb
clc
dec
add
sti
jnp
jecxz
stos
andb
mov
mov
jmp
in
imul
repz
add
add
adc
sbb
add
sarb
lret
rcrl
sbb
sub
sbbb
and
mov
adc
pop
or
push
jnp
jp
cmc
xchg
jle
xor
add
xchg
add
xchg
inc
out
incb
pushl
cmpsl
jmp
jge
cmpsl
or
dec
add
add
pop
mov
add
les
inc
pop
xchg
movsb
mov
arpl
test
add
sub
data16
add
nop
jge
add
outsl
jp
std
sahf
add
add
sbb
inc
add
pop
jae
jmp
add
inc
adcb
add
add
push
lods
movsl
xchg
add
mov
ret
lods
mov
and
loop,pt
or
and
in
dec
cli
outsb
aad
add
add
in
mov
add
jg
cli
cmp
jmp
sbb
or
jne
fsubrl
adc
add
add
in
add
subb
push
xor
and
aaa
int
mov
loope
cli
imull
inc
aad
add
jp
fcmovnb
push
icebp
les
push
outsb
mov
ljmp
incl
add
aaa
push
mov
cmpsb
mov
inc
cmpsb
fistl
and
add
add
rcrl
add
test
sbb
cld
push
in
add
js
mov
mov
leave
mov
sbb
subl
add
add
mov
mov
xchg
inc
add
add
add
mov
add
add
arpl
cmp
add
es
fcmovne
shrb
fs
scas
xlat
and
lods
test
cmp
add
xchg
add
outsl
outsl
add
les
sbb
add
sbb
add
add
pop
mov
or
pop
inc
iret
int3
and
and
mov
rcr
incl
loope
out
cli
mov
add
sahf
sub
push
add
insl
push
pop
cwtl
test
das
jmp
mov
add
sbb
arpl
ret
lcall
sti
loop
push
dec
sahf
mov
add
add
add
lock
das
add
shrb
add
add
adcl
movsb
cmp
xorl
leave
stos
shr
add
push
and
outsl
push
add
fs
push
push
pop
dec
call
add
mov
sub
mov
or
pop
mov
add
jle
in
push
xor
jo
sbb
pop
ljmp
ret
cmp
dec
jle
dec
jo
push
inc
inc
lcall
jl
add
or
add
sub
mov
loop
mov
and
lret
aad
jmp
cmc
pop
add
mov
aas
fdivl
and
add
mov
mov
pop
loop
add
cmpsl
fcmovb
add
or
outsl
add
mov
add
add
fs
sbb
aam
rcll
jnp
stc
xor
push
and
add
dec
les
add
dec
inc
outsl
and
icebp
cld
sub
add
add
add
add
jl
mov
out
cmp
cmp
mov
add
pop
daa
str
xchg
js
or
fldl
add
add
lds
addl
and
and
test
out
add
and
and
add
rcrl
outsl
call
test
in
pusha
mov
das
add
cmc
jge
mov
jle
std
jge
inc
add
or
ds
mov
add
add
mov
lcall
das
and
add
jne
mov
in
or
lods
imul
adc
std
sarl
repz
add
add
and
sub
add
testl
add
in
std
incl
je
std
addb
js
add
or
decb
mov
xchg
add
or
jle
pushf
cmp
add
or
and
inc
das
add
mov
incl
cmp
mov
push
lret
add
mov
add
icebp
or
inc
sub
jmp
push
push
add
add
and
inc
add
jle
pop
incl
dec
incl
add
insb
insl
addr16
or
and
pop
push
add
lock
arpl
xor
mov
insl
cmp
pop
bound
mov
add
mov
mov
ret
mov
add
out
sbb
xlat
fildl
and
cmp
push
pop
aaa
cmp
pop
xchg
ret
and
and
xchg
sbb
adc
and
or
or
jg
fcomi
push
add
loop
add
xchg
and
movsl
xchg
push
adc
add
fs
cwtl
imul
pop
and
idiv
cmp
add
aaa
lret
das
pop
out
repz
mov
dec
add
add
outsl
aad
jne
filds
or
inc
mov
jbe
push
insb
push
mov
and
mov
loop
jae
fstl
cli
jno
cmpsl
add
add
and
adc
mov
add
lcall
fucomi
jne
mov
mov
mov
add
std
lcall
ljmp
in
or
lcall
xchg
jp
add
dec
sbb
or
add
add
je
push
jb
loop
loop
loopne
push
cmp
and
xor
lea
xchg
sti
inc
xchg
mov
adc
add
imull
orl
fistpll
add
es
cmp
add
mov
cmp
fwait
xor
add
jo
ja
and
add
jo
xor
or
cmp
repnz
sub
mov
mov
and
xchg
xor
add
push
add
pop
xor
pop
and
cmpsb
leave
lcall
iret
testl
icebp
add
sahf
into
pusha
out
add
mov
call
fiaddl
incl
adc
or
add
pop
mov
js
stos
in
and
mov
sahf
hlt
cli
push
sub
adc
cwtl
mov
loop
adc
add
loope
subb
test
add
add
fisttps
add
add
sbb
and
cmpsb
pop
jp
push
shrb
pop
or
or
dec
call
fsub
add
and
inc
add
push
or
add
out
ss
add
add
movsb
mov
aad
add
daa
adc
cmp
add
dec
adc
dec
add
dec
push
pop
cwtl
add
in
mov
mov
sub
test
negl
jecxz
pop
sub
repz
and
ret
pop
mov
and
movl
fiadds
in
or
push
aas
call
add
add
mov
stos
add
push
add
and
mov
clc
xor
xor
add
mov
cltd
shrb
inc
pop
fwait
adc
add
loope
dec
xlat
and
add
in
or
daa
es
add
dec
in
lret
add
outsl
add
stc
stos
sbb
add
add
dec
mov
and
add
mov
add
xor
xchg
add
xchg
push
pop
jecxz
in
add
push
jb
mov
add
mov
add
and
call
loop
mulb
pop
cli
add
cwtl
sti
fiaddl
sarl
push
sbbb
add
xor
add
add
cwtl
je
add
push
push
add
loop
push
dec
ds
les
add
add
push
inc
and
pop
aas
xchg
movsb
mov
popa
daa
mov
daa
insl
data16
adc
imul
add
test
add
inc
add
add
add
das
mov
loope
mov
dec
lods
out
clc
mov
xchg
xchg
adc
stos
scas
add
test
adc
bound
fiadds
jecxz
add
sarb
call
addl
pop
sbbb
add
add
or
int
stos
jns
mov
mov
loop
mov
xor
call
data16
add
add
aam
sti
add
dec
scas
dec
outsb
dec
mov
add
jle
add
add
loope
xchg
iret
xchg
jnp
xlat
push
add
out
jbe
nop
add
lahf
dec
repz
add
add
inc
lods
xor
add
loope
dec
push
dec
add
add
or
pop
fimull
add
push
stos
inc
decl
mov
pushf
jecxz
incl
decl
add
js
or
jle
and
or
pop
pop
add
cmpsl
xchg
mov
and
in
and
add
mov
jmp
add
mov
mov
jmp
mov
incl
add
add
xor
mov
xor
xor
dec
data16
add
repz
insl
shl
shrb
add
les
sahf
add
add
les
jge
dec
add
in
mov
jns
mov
add
adc
ljmp
and
add
in
xchg
fcmovb
iret
and
andb
add
add
add
cmp
add
and
pop
dec
add
test
jns
and
pop
ret
jecxz
aad
shlb
add
add
add
add
and
incl
pop
xor
hlt
mov
cmp
add
add
xchg
clc
mov
iret
dec
jle
ljmp
mov
test
into
or
in
ss
jmp
repz
add
add
dec
add
add
add
mov
clc
cmp
call
or
repnz
mov
in
popf
add
inc
scas
in
add
sbb
sub
add
jecxz
std
shrb
cli
xchg
add
add
loop
sub
jle
add
push
cmp
jle
add
sub
push
icebp
xchg
dec
lods
jnp
test
decl
sub
xchg
enter
mov
add
dec
pushf
clc
sub
add
add
shll
add
push
incl
add
int3
insl
test
loop
add
lret
dec
add
test
aam
and
mov
push
aad
and
shrb
mov
add
add
jl
sbb
incl
add
add
add
or
mov
dec
add
hlt
rcl
adc
jne
add
add
cmpsl
sub
add
int3
add
add
add
jg
xchg
push
stos
add
out
aaa
cmp
add
add
jecxz
fisubl
mov
repz
call
or
scas
fimuls
roll
or
add
add
mov
movsl
lahf
xchg
add
jle
push
in
testb
add
add
mov
add
decl
test
in
pop
std
add
jnp
mov
sub
jecxz,pt
test
lret
loop
add
add
push
leave
dec
inc
lods
add
mov
hlt
testl
add
jb
xchg
idivl
sbb
add
and
in
add
mov
push
mov
repz
aaa
mov
loopne
lock
out
add
add
mov
sbb
add
add
cld
subb
add
incl
sbb
inc
call
je
and
and
cmp
out
add
int
or
mov
add
movsl
subb
mov
add
out
add
and
mov
jle
xor
inc
decl
out
mov
push
js
and
mov
sbb
mov
lods
or
add
mov
das
add
jnp
add
add
jecxz
inc
xchg
mov
add
dec
mov
stc
mov
mov
movsl
out
cmc
shlb
and
loop
in
dec
mov
jecxz
add
add
out
add
test
add
rcl
add
stc
jmp
mov
lret
xchg
popf
jne
add
add
loope
and
fsts
enter
add
int3
add
jecxz
and
xor
add
xchg
jg
mov
shlb
pop
xchg
sbb
sub
inc
inc
add
pop
mov
jecxz
add
fstpt
add
push
pop
addb
add
and
cmpl
std
dec
add
add
mov
jmp
sti
ret
xchg
loopne
push
jmp
imul
pop
push
add
add
add
or
or
jecxz
add
add
jle
call
mov
xchg
fnsave
repz
imul
or
mov
pop
ja
or
push
pop
mov
scas
add
or
push
cmp
incl
jecxz,pt
imul
add
out
fnstenv
cmp
mov
jl
add
sub
call
add
loop
cs
lahf
inc
jg
add
add
add
or
add
in
arpl
ds
ret
sub
scas
mov
ss
mov
mov
outsl
in
jmp
push
and
jle
shll
imul
cld
fs
add
add
pop
fdivrl
and
inc
xchg
cmpsb
add
jbe
stc
sub
test
add
inc
ljmp
incl
out
iret
imul
push
jecxz
out
xchg
stc
lea
mov
incl
add
movsb
enter
add
imul
fwait
call
loope
out
shrb
mov
in
adc
add
inc
pop
mov
add
fwait
xor
add
or
mov
sbb
in
pop
repz
ljmp
mov
pop
sbbl
iret
dec
insl
pop
les
leave
in
pop
add
fbld
test
and
and
push
push
push
sub
add
pop
call
add
in
loope
inc
sbb
push
dec
add
add
repnz
mov
cld
adc
into
add
movsl
outsb
push
push
jecxz
and
lret
push
pop
mov
add
xlat
or
ret
jge
add
stos
add
add
or
add
out
lock
enter
jecxz
push
cmp
addl
sbbb
push
out
cld
incl
pop
shl
sar
add
add
shll
mov
bnd
and
or
add
add
add
out
mov
fidivrs
insb
div
addb
add
pushl
push
cwtl
cli
add
xchg
dec
out
push
add
mov
xchg
loop
push
add
add
call
push
add
add
add
xchg
add
add
add
mov
and
sarl
pushl
dec
movsb
inc
cld
rol
add
test
sbb
rol
add
add
mov
sub
fsubs
mov
xchg
sbb
pop
out
add
incl
loop
dec
fnstenv
add
mov
and
in
add
add
add
cmp
mov
add
or
add
das
mov
sub
adc
in
lea
or
add
jbe
ds
push
lcall
adc
leave
in
test
rcrb
sub
and
add
faddl
loop
add
fs
aaa
cmp
or
add
aam
push
push
mov
mov
add
sbb
loop
add
pop
push
mov
fldl
pop
add
lock
add
pop
jp
xchg
and
rorb
jle
add
mov
mov
jecxz
mov
repz
jg
xchg
fld
roll
add
mov
sbb
call
add
add
enter
add
add
pop
lds
aaa
and
fsub
loop
dec
or
std
cwtl
push
jle,pn
and
test
mov
repnz
mov
mov
xchg
adc
cld
add
loop
add
repnz
dec
out
add
inc
daa
inc
add
add
add
call
pushl
xor
sti
nop
cld
fsub
add
xchg
incl
lcall
sbb
pop
loope
fmull
imul
movsb
push
mov
icebp
scas
in
jno
ljmp
jl
sbb
mov
push
add
dec
jae
jbe
stc
add
add
add
cwtl
xchg
mov
cli
add
add
mov
add
movl
push
outsb
and
and
sub
mov
loope
cmp
add
xchg
add
jmp
inc
mov
or
inc
add
and
sub
cmp
lahf
push
add
jge
jecxz
loope
rcll
fcoml
mov
add
push
mov
loop
fmulp
mov
push
add
jecxz
das
mov
les
add
shrl
dec
fscale
push
jge
in
add
sbb
outsb
add
add
and
push
or
and
add
outsl
add
dec
imul
lock
sbb
insb
or
or
or
xchg
out
pusha
out
adc
add
mov
add
repz
mov
push
adc
add
les
add
dec
lcall
les
and
fists
cld
sbb
add
add
sub
sahf
xchg
inc
adc
rcl
add
mov
daa
rolb
or
jo
in
add
sbb
mov
jecxz
add
jle
or
inc
outsl
bound
ljmp
out
push
lock
mov
clc
lret
pop
sti
test
stc
mov
leave
sub
fisttpll
cli
and
and
mov
int3
add
add
loop
dec
cltd
repnz
add
jle
aam
insl
cmc
jbe
ficomps
cmpsl
or
dec
xchg
add
pop
or
add
jecxz
pusha
and
test
add
decl
inc
sbb
mov
cmp
add
call
xor
fildl
addb
loop
add
mov
call
add
inc
jmp
pop
in
jnp
push
mov
lcall
incl
cld
popf
outsl
call
mov
jl
inc
dec
js
mov
add
and
outsl
shl
loop
or
inc
mov
stos
fisttpll
mov
jno
imul
mov
xor
inc
mov
add
and
add
lea
inc
xchg
rcr
add
add
loopne
test
xor
jmp
les
jecxz
dec
add
mov
dec
pop
add
nop
incl
mov
or
das
int
dec
inc
bound
adc
add
arpl
das
mov
decl
ss
and
rcrb
das
mov
and
add
xchg
xchg
push
add
add
mov
mov
cmp
stos
in
xchg
xchg
add
arpl
test
mov
mov
gs
add
fstpt
add
jmp
in
add
and
lods
or
lcall
fs
arpl
cwtl
cmc
fld
add
add
cwtl
lock
faddl
add
je
dec
mov
jecxz
add
and
sbb
jle
and
adc
push
dec
test
ss
sti
add
add
mov
mov
cmpb
jg
push
aas
sub
loop
add
add
add
out
mov
add
jecxz
add
rcll
and
stos
imul
loop
bound
add
add
push
lret
mov
dec
nop
je
fs
add
add
xchg
incl
mov
dec
adc
add
add
or
add
mov
jmp
in
cmp
add
and
xchg
addr16
add
adc
add
incl
es
js
sahf
add
add
xor
out
bound
or
shlb
out
rcl
flds
add
add
jle
add
add
xor
add
movsl
aad
add
add
add
js
and
pop
add
cmc
or
push
arpl
lret
out
push
or
iret
push
dec
in
mov
fldenv
sbb
loope
fs
add
inc
add
add
jecxz
pop
cmp
sbb
add
add
fdivrl
fwait
sbb
push
mov
shlb
add
or
dec
cli
sbb
in
in
ds
and
add
mov
jecxz
ja
add
add
aad
pop
int
insl
jb
and
dec
jno
call
and
add
inc
dec
aas
xchg
movsb
and
add
add
sbb
jne
dec
add
loop
iret
xchg
adc
and
mov
add
add
dec
jno
push
sub
or
mov
sub
sbbl
jl
xchg
das
jmp
popf
jmp
jg
outsl
jecxz
add
inc
xchg
mov
pop
add
mov
lods
jecxz
dec
and
fwait
jl
add
les
xor
xchg
xor
aas
jp
ret
addb
incl
cmp
es
pop
lcall
mov
add
mov
add
lret
dec
shll
jno
add
and
add
dec
repz
or
add
cli
push
dec
add
add
aam
pop
test
add
fwait
popl
in
add
lahf
leave
sub
movsl
pop
add
add
je
xor
fwait
lret
adc
jle
inc
push
std
jp
in
xchg
daa
push
jmp
and
or
xorl
loop
add
add
add
aam
xchg
add
add
add
add
xchg
incl
add
pop
xlat
push
leave
add
aad
mov
mov
dec
add
aam
daa
repz
jae
subb
add
push
add
push
add
dec
xchg
mov
out
xor
sbb
inc
daa
outsl
in
movsb
roll
mov
jp
xchg
and
fs
pop
bound
push
incl
and
aaa
sbb
xchg
test
jecxz
test
push
mov
add
mov
jle
add
dec
dec
mov
cmp
and
xchg
lods
mov
add
mov
enter
arpl
test
add
fstl
add
test
cmc
add
add
decl
lock
lds
add
add
out
stos
repnz
loope
add
mov
add
jmp
mov
inc
repz
push
jecxz
lock
decl
jmp
mov
jae
push
push
add
add
pop
fsubrp
xlat
bound
addr16
cmp
mov
ret
and
decl
jnp
jmp
add
add
push
in
and
faddl
pusha
mov
dec
and
jne
adc
mov
add
je
jnp
add
movsb
popf
add
add
add
pop
push
add
add
out
out
push
out
in
imul
add
sub
add
push
loope
mov
add
add
lods
mov
mov
add
ss
neg
nop
add
adc
in
dec
cmc
xchg
aam
add
add
xchg
sbb
inc
xchg
add
ds
or
nop
jle
popa
add
loope
jo
push
pop
add
xchg
inc
sub
or
call
fstpl
dec
popa
incl
jns
fwait
mov
clc
bound
jle
jmp
pop
mov
add
and
addb
add
jmp
jg
jecxz
stos
dec
pop
pop
repz
or
incl
mov
sbb
imul
xor
incl
add
jne
iret
ss
outsb
inc
add
mov
add
scas
mov
dec
cmc
in
mull
fimull
in
loope
adc
push
jo
cmp
add
imul
add
add
dec
ljmp
mov
add
add
jg
lds
add
mov
sarb
daa
jg
cmp
or
add
pop
call
add
and
inc
mov
adc
add
dec
ds
gs
add
or
and
jae
fadds
jmp
in
out
jns
stc
mov
cmp
popa
add
rol
xchg
test
stos
ud0
sbb
ds
stc
add
loope
add
mov
das
xor
std
cld
incl
add
sbbl
add
add
aam
pop
in
xchg
add
mov
mov
cmp
sahf
lods
and
add
arpl
call
incl
jmp
popf
add
ljmp
xchg
pushl
cld
jnp
add
mov
lds
add
incl
add
pop
inc
pusha
push
and
or
rcrl
sbb
add
inc
sub
insb
mov
fldt
jecxz
cs
xor
add
add
adc
dec
add
insl
gs
add
add
add
fwait
and
loopne
jle
add
or
leave
add
push
xchg
xor
add
xor
add
jns
xchg
or
adc
xor
in
and
loopne
add
test
adc
cs
loope
mov
adc
leave
jp
add
pop
xchg
out
xchg
bound
and
sbb
sbb
jmp
repnz
jbe
add
add
add
xchg
lds
sbbl
push
push
les
test
rol
push
jno
lahf
mov
add
and
add
cmp
ret
cwtl
inc
push
and
movsl
or
add
add
ljmp
and
pop
nop
aad
push
enter
dec
mov
cltd
lods
shl
mov
add
add
and
xor
add
add
add
add
aas
pop
push
push
jle
or
add
std
xchg
mov
incl
orl
pop
iret
or
cmp
xlat
test
add
add
sbb
push
sub
roll
mov
jno
add
add
add
andb
add
add
xor
repz
inc
add
ljmp
push
dec
xor
add
or
popf
in
decl
ficomps
push
dec
test
mov
add
add
add
lds
add
jmp
inc
in
pop
pop
add
jmp
loop
jmp
mov
scas
jmp
repz
imul
dec
repz
dec
xlat
push
xchg
add
lds
lcall
push
lea
decb
inc
lea
jmp
jmp
aas
repz
mov
scas
ret
or
mov
mov
xor
dec
lock
les
add
mov
xchg
mov
and
push
incl
and
push
or
add
jg
jle
add
add
in
mov
push
scas
call
out
repnz
jle
ds
sub
add
jecxz
fstl
dec
inc
pop
xor
icebp
mov
and
dec
xor
fisubrl
mov
pop
rol
add
add
outsl
push
push
jbe
call
or
jle
add
add
std
test
loop
xor
popa
inc
cwtl
dec
decl
stos
cmp
add
and
lods
and
pop
add
das
add
test
enter
sub
aad
sbb
jle
add
dec
add
mov
add
jne
sub
sub
imul
jl
add
inc
mov
add
add
sti
or
add
add
push
in
push
and
scas
ss
or
negl
cltd
adcl
xchg
daa
popf
add
jmp
push
insb
xor
sbb
jecxz
std
scas
js
pushf
jg
add
testl
in
fidivrs
add
and
scas
or
loop
ljmp
xchg
imul
jb
loop
mov
test
rclb
icebp
popf
bound
add
mov
or
fdivr
pushf
pushf
jg
add
add
sub
fcmovu
mov
add
add
fbstp
stos
dec
xlat
or
lds
out
int3
aad
lea
push
xor
add
lods
ret
jecxz
repz
je
xchg
repnz
clc
insl
add
add
add
cmp
sub
add
shr
shrl
or
in
fildl
std
cmp
aam
add
jle
add
movsb
or
inc
add
add
push
jbe
add
orl
and
das
aam
cld
add
shlb
addr16
cltd
and
mov
lods
enter
hlt
push
addl
add
add
andb
add
pop
les
or
or
add
mov
mov
sbb
outsl
enter
pop
cmp
ja
add
bswap
repnz
pxor
adc
jnp
les
cmp
inc
pop
mov
add
mov
dec
push
in
and
sbb
add
cmp
or
adc
sar
mov
push
mov
add
jmp
pop
xor
add
pop
in
add
and
or
incl
in
add
mov
add
add
pop
mov
xor
add
gs
cmp
out
add
movsl
add
and
mov
loope
lods
jmp
mov
and
push
and
add
imul
jbe
call
lock
jl
lahf
sti
add
dec
fldenv
add
and
add
mov
cmp
add
add
pop
imul
incl
and
push
add
add
add
insl
jnp
ret
scas
and
daa
call
and
mov
mov
jecxz
loopne
adc
or
add
mov
es
decl
and
scas
add
shl
sub
add
ds
jecxz
aas
inc
or
les
add
add
js
arpl
push
add
or
add
incl
jle
xchg
stos
pop
add
or
or
stos
and
add
loopne
add
add
repz
xchg
mov
add
aad
jne
cmp
outsl
call
jg
ljmp
add
outsb
out
and
sti
out
out
mov
movb
jmp
loop
pop
push
daa
mov
add
imul
lds
add
or
aas
push
add
add
jle
jmp
outsb
iret
cmp
add
add
rcrb
push
jno
xor
dec
add
and
loop
and
xchg
testl
leave
mov
add
in
fcmove
add
call
int
inc
adc
addl
mov
cmp
dec
movsb
add
and
sti
int
mov
mov
and
push
xchg
ja
add
fs
mov
sub
cmp
and
add
add
rorl
adc
repz
pop
mov
imul
add
addr16
incl
out
call
les
mov
sub
mov
add
lock
cs
dec
mov
mov
pushf
outsl
xchg
add
dec
je
pop
dec
lods
test
add
cmc
push
loop
ret
call
mov
dec
add
inc
sbb
mov
or
xor
sub
in
mov
je
add
enter
rorl
aaa
mov
add
orl
cmp
fldenv
inc
pop
dec
mov
pop
and
mov
add
jnp
test
and
add
je
push
adc
add
add
jl
lods
or
mov
test
dec
xchg
outsl
test
jecxz
decb
add
movsl
cmp
add
arpl
jmp
add
add
pop
add
or
out
jno
and
incl
out
lret
add
je
jmpw
or
add
pop
pop
mov
das
add
and
out
fwait
add
jg
mov
add
add
insb
xchg
add
rclb
loop
shrl
mov
push
mov
ljmp
and
add
add
add
pop
jmp
cltd
or
add
sub
or
add
add
idivl
sbb
incl
add
in
loopne
mov
and
in
add
jl
add
and
jnp
test
ja
and
shl
in
or
rolb
add
enter
aad
fnstsw
add
fldcw
pop
dec
inc
sbb
add
add
add
cmp
mov
cli
es
inc
jecxz
add
or
cmc
jl
jle
add
add
ja
mov
fiaddl
sub
or
scas
repnz
jg
sbb
add
add
add
stc
repz
std
add
xchg
add
incl
add
in
stos
cmpsb
je
push
jmp
data16
idiv
add
jp
popf
xchg
xchg
add
add
add
add
jg
in
daa
inc
pop
jo
add
dec
addr16
fnsave
dec
add
add
in
rcr
pop
sbb
add
loope
xchg
jnp
lret
add
pop
dec
mov
jg
loop
call
dec
lods
mov
and
push
cmp
adc
iret
add
add
xor
dec
incl
sti
aam
in
and
out
add
cmp
dec
add
in
push
xchg
es
loop,pt
add
mov
repz
out
inc
push
cs
sub
mov
adc
push
incl
or
out
sub
decl
add
add
xchg
xchg
jae
mov
addl
outsl
add
and
cmp
add
mov
imul
pushf
jle
enter
mov
fsub
or
dec
mov
mov
and
push
repz
push
pop
add
mov
es
pop
mov
and
pop
and
jns
repnz
clc
and
add
outsl
add
hlt
mov
fisttpll
push
lret
in
add
add
add
push
popa
add
add
call
jno
inc
and
add
sbb
leave
or
mov
shlb
jecxz
dec
adc
pop
add
add
int3
pmaddwd
or
add
or
repz
cmpb
sbb
clc
gs
adc
add
loop
xchg
or
jle
test
or
ret
incl
add
test
and
loop
aaa
dec
adc
pop
and
outsl
add
mov
add
add
pushl
les
xor
rcrl
add
pop
lds
mov
add
shl
mov
add
add
inc
mov
add
add
mov
decl
in
pop
mov
xchg
mull
xchg
mov
leave
push
pushf
sub
inc
adc
push
fidivrs
fsubs
push
push
cmp
fs
insb
sarl
xchg
orb
dec
xchg
loop
and
add
call
stc
fsubl
int
repz
and
addb
movsb
pop
add
cli
lock
and
add
adc
xor
or
add
adc
mov
and
jo
pop
enter
mov
test
push
scas
and
fstps
add
mov
icebp
pop
dec
add
repnz
dec
add
bound
sti
loope
add
out
pop
add
add
add
int
fld
or
adc
xchg
push
mov
dec
jl
cmc
add
cmpsb
inc
xorl
mov
and
or
add
mov
sbb
jecxz
add
mov
cld
add
add
jbe
add
repz
sti
push
call
mov
and
push
in
jg
popa
sbb
xchg
or
pop
loop
fsubr
jg
and
add
push
cmp
out
dec
add
inc
mov
cmpsb
insb
add
and
and
seto
add
add
cltd
mov
dec
sbb
xlat
repz
loop
xor
push
mov
or
jmp
mov
add
decl
cmpsl
cmp
call
push
repz
add
jbe
add
add
mov
jge
jmp
lahf
push
sbb
and
enter
imul
loop
add
mov
fiadds
add
mov
loop
push
mov
add
lea
or
pop
mov
int
and
xchg
inc
and
enter
xlat
jmp
add
cli
cmp
jp
add
in
inc
cmp
or
mov
test
incl
or
call
xchg
mov
cmp
add
add
stos
aas
inc
pusha
xchg
add
jns
lahf
push
fisttpl
xlat
shlb
pop
add
mov
in
and
mov
add
ljmp
add
incl
adc
inc
pop
data16
add
sbb
jno
mov
shll
movsl
jg
sub
or
mov
ja
repnz
or
jle
add
mov
add
test
mov
add
or
les
add
mov
push
add
shrb
mov
in
sbb
je
mov
sbb
mov
add
dec
jp
xchg
stos
es
mov
jecxz
jp
out
and
add
imul
rorl
cmp
mov
cmp
add
jecxz
add
cmp
add
imul
add
call
push
fistps
jnp
xchg
insb
cmpsb
loop
adc
jg
or
jle
adc
add
dec
xor
add
add
scas
pop
into
popa
dec
add
lds
sbb
xor
add
add
add
ret
push
xchg
out
add
add
aam
mov
fcomi
dec
out
sub
das
test
xchg
mov
adc
sahf
cs
add
loope
loop
mov
call
inc
inc
rorl
and
mov
ds
out
sahf
out
cmp
sub
add
outsl
je
add
add
cmp
pop
jmp
sbb
add
jns
or
push
add
add
adc
add
mov
add
leave
mov
add
pop
jge
xchg
sbb
add
mov
lcall
jg
cmp
ficoms
or
add
add
imul
mov
lret
hlt
add
push
add
pop
ljmp
add
call
push
add
add
jne
push
push
les
hlt
xchg
call
int
mov
add
add
sbb
fstpl
call
rcpps
add
add
dec
scas
incl
mov
mov
addr16
push
incl
out
sahf
add
testb
cmp
outsl
add
add
pop
mov
jle
push
adc
jg
mov
add
jno
add
and
decl
std
jns
jmp
pop
data16
add
add
incl
pop
and
daa
jle
push
add
or
imul
xchg
add
sbb
dec
out
add
testb
push
rolb
add
out
add
or
xchg
and
jmp
dec
pop
emms
jnp
xchg
xchg
or
add
push
xor
add
add
add
lods
cltd
and
push
mov
push
add
jno
cld
pop
sub
add
sub
jp
add
scas
mov
mov
or
xor
test
das
jecxz
mov
or
add
loopne
sbb
mov
mov
das
pop
pop
add
incl
add
pop
cmpsb
sub
mov
push
int
inc
xor
add
call
add
and
scas
add
add
cmp
rcll
add
lcall
adc
pop
add
inc
add
loop
repnz
inc
add
add
loop
test
pop
popf
mov
sti
outsl
imull
dec
sbb
xor
das
jl
add
and
std
xlat
xor
sbb
popa
add
add
add
jae
outsl
scas
ud0
add
sbb
mov
repnz
xchg
shlb
or
or
pop
jg
or
and
mov
add
add
arpl
add
add
jle,pt
add
push
mov
sbb
jge
cli
xor
push
cltd
das
int3
mov
xor
sti
js
ljmp
add
add
add
popf
out
nop
and
add
dec
es
xchg
out
push
les
dec
jg
mov
push
mov
call
ret
dec
dec
cs
in
testb
sbb
in
cmp
and
loop
push
fwait
test
pop
cmp
add
imul
and
jae
and
decl
add
loop
push
in
xchg
inc
test
adc
and
sbb
xchg
call
cmc
sbb
add
call
add
jmp
add
jg
add
pop
push
cld
pop
mov
add
xor
or
jbe
js
jecxz
scas
sbb
fbstp
add
pop
js
es
add
lret
call
pop
add
add
dec
and
add
mov
push
movsb
mov
outsl
aaa
adc
popf
and
mov
dec
arpl
add
aam
imul
mov
int3
lods
imul
outsl
daa
jp
rcll
add
add
or
dec
mov
out
jnp
addr16
and
scas
or
aad
cmpl
iret
in
scas
lret
pop
push
add
jmp
aam
xchg
push
add
add
and
add
jnp
xchg
pushl
in
decb
das
add
push
inc
repz
jmp
dec
jmp
add
xchg
sbb
outsl
in
scas
ljmp
add
lock
jg
add
mov
popa
loop
adc
loop
or
add
add
or
cmp
in
and
add
xor
decl
mov
push
add
testb
ret
mov
add
das
in
faddl
fldenv
cmp
loop
add
imul
add
and
js
add
out
pop
inc
and
sbb
sbb
dec
jns
and
mov
add
in
out
pop
xchg
add
add
or
and
and
stc
lods
add
out
sbb
xchg
lcall
mov
add
jo
mov
movsb
xchg
xchg
das
add
push
lods
ret
icebp
add
add
add
pop
add
movb
mov
call
push
add
dec
add
test
mov
ret
lcall
incl
int3
add
in
and
sub
add
mov
incl
and
cmpl
out
loop
prefetcht0
inc
mov
jecxz
popa
dec
jecxz
add
arpl
pop
out
lret
scas
insb
add
add
jle
pushl
aaa
mov
add
fwait
jmp
enter
add
add
jp
sub
mov
add
dec
stc
xorl
add
mov
rorb
add
inc
and
mov
add
add
movsl
xchg
or
pop
out
cmp
out
add
loop
jg
lcall
push
into
dec
lea
add
in
popf
sahf
inc
or
inc
add
push
outsb
mov
jbe
jne
or
add
add
repz
enter
add
js
xlat
push
incl
call
rep
mov
add
mov
jl
add
mov
mov
add
clc
addr16
aad
call
sahf
add
add
add
out
or
cmp
add
out
jo
mov
and
ss
lahf
dec
add
mov
pop
data16
sahf
pop
add
mov
pop
add
add
pop
shll
or
push
ss
jg
add
push
sub
add
mov
add
add
push
sahf
push
lret
jnp
add
mov
addl
push
cmc
stc
mov
add
add
add
mov
fcoml
addl
loope
repz
out
ret
jg
sub
loope
cmp
pop
das
and
sub
adc
jno
add
add
loope
jle
add
and
leave
adc
in
add
in
je
int
add
inc
mov
mov
and
fmulp
mov
ret
in
test
add
xor
push
mov
and
and
inc
adcb
add
sbb
mov
add
add
out
add
adc
jns
xor
lret
mov
jmp
js
mov
lcall
adc
int3
jg
and
or
add
add
in
iret
jge
xchg
add
add
loope
icebp
sbb
inc
mov
lret
int3
int
pop
incb
fucomp
add
stos
fxch
and
or
dec
sbb
mov
xchg
add
enter
loopne
out
add
add
mov
inc
orl
into
out
mov
add
pusha
call
adc
jle
add
out
insl
sarl
mov
push
add
loop
arpl
movl
add
adc
sub
jle
add
roll
dec
cld
fcoms
add
pusha
stc
gs
add
daa
push
push
add
sbb
cli
cmpsl
xor
add
add
push
cmp
in
add
rcll
les
add
daa
call
mov
add
cmpsl
inc
dec
dec
sbb
data16
mov
aam
xchg
add
cwtl
pop
add
add
add
ss
inc
jmp
mov
add
adc
mov
add
dec
dec
cld
inc
or
sub
pushf
push
in
inc
jae
add
add
lcall
mov
pop
xchg
cwtl
or
sbb
mov
xchg
add
add
outsl
add
and
push
testb
adc
outsb
mov
shr
into
ljmp
cmp
mov
add
push
mov
add
ja
in
into
add
inc
ficompl
or
rcl
xchg
adc
and
add
test
mov
add
inc
out
loopne
loop
add
jne
lods
xor
jns
add
add
jecxz
add
mov
add
mov
and
push
add
ja
pop
or
and
add
into
add
add
and
scas
fwait
add
or
pop
xchg
jp
incl
add
add
in
call
push
mov
repz
cmpsb
xchg
sti
mov
mov
add
sub
add
jle
xchg
lret
dec
call
sub
push
dec
jecxz
mov
add
add
nopl
popa
es
cld
adc
lcall
lods
gs
call
add
je
lcall
push
add
iret
movsb
incb
decl
inc
inc
add
add
xor
mov
add
add
nop
fwait
xchg
insb
test
push
testl
xchg
icebp
repz
add
mov
andl
add
add
clc
mov
add
mov
jbe
and
jo
fs
add
imul
add
stc
decl
cmp
add
and
decl
push
in
add
addl
nop
cli
add
jnp
out
clc
jl
mov
mov
add
cwtl
in
jge
add
jnp
jns
incl
jp
xor
jmp
jmp
incl
ss
cli
pushl
call
cld
add
pushl
std
call
add
jo
popa
add
cmpsl
out
xor
add
add
out
std
add
xor
add
mov
in
addl
push
arpl
outsl
data16
je
outsb
jns
arpl
popa
ja
bound
imul
outsl
bound
popa
push
imul
insb
add
jp
call
loop
shll
incl
add
incb
incl
notrack
incb
push
incl
ljmp
xchg
std
jp
sti
decb
sbb
add
add
jl
cltd
std
add
add
in
jne
cltd
xchg
add
mov
add
out
sti
pushl
out
jmp
sub
rcl
inc
add
add
add
add
add
add
add
add
add
add
add
add
cld
faddl
shrb
add
add
add
fadds
add
add
add
add
inc
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
inc
add
add
add
add
subb
add
stos
inc
add
add
add
add
mov
add
push
add
add
inc
add
add
add
inc
add
add
add
test
add
movsb
test
add
insb
test
add
inc
test
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
faddl
add
add
mov
lods
inc
add
inc
add
inc
add
inc
add
inc
add
lods
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
lods
inc
add
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
inc
add
add
add
add
add
add
shrb
add
add
add
faddl
add
add
add
add
add
add
add
add
add
jg
jg
jg
jg
cld
faddl
dec
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
xorb
add
add
lock
incl
add
add
push
add
push
add
filds
adc
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
lret
add
xor
jb
test
cwtl
xor
xor
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
lcall
ss
ss
ss
ss
aaa
cmp
aaa
lds
adc
cmp
popa
cmp
mov
cmp
cmp
pop
cmp
mov
cmp
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
pop
jns,pt
ds
icebp
ds
aas
mov
xlat
aas
add
add
add
lret
add
je
scas
xor
xor
xor
xor
mov
movsb
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
ss
aaa
pop
aaa
sub
inc
aaa
js
xchg
aaa
enter
adc
cmp
insl
cmp
cmp
inc
cmp
mov
into
cmp
cmp
pop
cmp
xchg
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fistpll
adc
jne,pt
ds
fnstcw
push
aas
and
aas
mov
add
xor
add
add
add
xor
xor
jp
scas
xor
xor
aas
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
mov
sub
ss
ss
aaa
xchg
aaa
mov
hlt
aaa
aas
cmp
cmp
cmp
cmpl
lock
cmp
pop
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
loope
cs
jg
test
mov
aas
cmp
push
aas
cmpl
aas
lret
add
inc
add
enter
pop
xor
xor
xor
xor
xor
xor
jle
scas
xor
xor
xor
xor
mov
fdivs
add
xor
xor
xor
xor
shlb
xor
insb
ss
mov
out
xor
push
aaa
imul
aaa
test
mov
mov
cmp
cmp
mov
mov
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
aas
ds
ja
jg
sarb
pop
aas
push
aas
jg
leave
aas
out
add
add
add
add
add
jns
lcall
xor
xor
lods
xor
xor
xor
xor
xor
xor
mov
mov
xor
xor
xor
jle
les
cli
xor
xor
xor
xor
xor
xor
lcall
ss
ss
shll
or
adc
dec
aaa
pop
aaa
data16
mov
aaa
and
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
lcall
cmp
cmpl
in
std
ds
aas
bound
stos
aas
mov
add
pusha
add
mov
xor
xor
xor
xor
xor
je
cwtl
xor
xor
xor
pop
xor
sub
xor
xor
xor
xor
xor
xor
xor
lret
ss
movsl
ss
or
inc
aaa
jp
lods
aaa
fdivs
and
cmp
bound
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
or
jp,pt
sarl
aas
or
das
aas
cmpl
repz
add
add
add
add
add
xor
xor
inc
xor
scas
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
jb
test
and
fs
jg
xchg
xchg
aaa
shll
push
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
sarl
and
data16
test
mov
xchg
aas
test
mov
aam
add
add
add
sbb
xor
xor
xor
xor
lahf
xor
out
xor
xor
imul
mov
xor
xor
mov
fnsave
out
sbb
xor
xor
xor
xor
xor
xor
mov
in
in
xor
pop
ss
cmpsl
ss
call
aaa
jb
xchg
aaa
mov
cmp
push
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
jno
cwtl
cmp
cmp
xchg
mov
fstpt
sbb
dec
cmp
cmp
cmp
cmp
cmp
mov
xor
je
sarl
aas
adc
cs
aaa
aas
pusha
aas
test
in
cmc
aas
add
add
add
push
xor
mov
xor
xor
mov
xor
xor
xor
xor
aam
adc
pop
xor
stos
xor
xor
nop
xor
xor
xor
loopne
ljmp
mov
xchg
ss
shll
push
aaa
imul
aaa
and
sub
inc
cmp
test
mov
cmp
cmp
cmp
cmp
mov
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
or
push
xchg
xlat
ds
insl
aas
mov
idivl
add
add
add
xor
mov
iret
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xorb
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
pop
ss
cmpsl
ss
pop
aaa
test
scas
aaa
fidivs
pop
cmp
cmp
imul
cmp
cmp
sbb
pop
cmp
cmp
cmp
lahf
cmp
cmp
push
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
ds
jns,pt
scas
add
cmp
pop
aas
mov
aas
add
add
add
push
xor
xchg
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xchg
int
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
stos
xor
inc
mov
lret
ss
ss
xor
pop
aaa
data16
imul
aaa
shlb
jmp
das
cmp
push
cmp
xchg
cmp
cmp
cmp
cmpl
or
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
das
jno,pt
stos
fidivrl
std
ds
inc
aas
mov
xchg
aas
sarb
add
add
add
les
add
xor
cmp
push
xor
or
xor
outsl
xor
xor
xor
xor
push
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
out
xor
aas
outsl
ss
shlb
ss
aaa
inc
aaa
nop
aaa
mov
repnz
daa
cmp
jp
leave
cmp
cmp
arpl
jae
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
lods
cmp
pop
ds
ds
and
aas
into
aas
aas
add
add
add
rolb
add
xor
dec
xor
lcall
xor
cwtl
xor
xor
xor
mov
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
shll
adc
pop
aaa
cltd
aaa
aad
fbstp
hlt
aaa
xor
imul
iret
cmp
cmp
cmp
cmp
cmp
imul
clc
cmp
cmp
cmp
jl
xchg
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lods
cmp
aas
mov
xchg
movsb
ds
aas
mov
sarl
out
aas
add
add
add
ret
add
xor
je
xchg
xor
xor
xor
xor
mov
xor
push
xor
sahf
xor
push
xor
jno
ja
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
mov
loope
jmp
cmc
ss
aaa
mov
xchg
aaa
fidivs
sub
pop
cmp
jbe
leave
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
scas
cmp
cmp
aas
cmp
cmp
cmp
cmp
cmp
xchg
fdivrl
movsw
ds
ds
inc
aas
mov
mov
jmp
add
and
add
add
add
pop
xor
xor
xor
xor
xor
jbe
cwtl
xor
xor
xor
xor
jb
mov
mov
xor
xor
xor
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
ss
ss
ss
mov
into
ss
aaa
sub
insl
aaa
jge
enter
pop
cmp
jb
movsb
cmp
cmp
cmp
mov
aad
in
cmc
cmp
cmp
cmp
dec
cmp
data16
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
xor
ds
repnz
aas
popf
aas
aas
add
add
add
int3
add
add
popa
xor
push
xor
ja
les
or
push
xor
xor
jl
lret
xor
xor
xor
js
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
movsl
xor
push
mov
divl
sbb
dec
aaa
jo
cmpsl
aaa
int3
aaa
in
aaa
xor
jb
mov
mov
jecxz
repz
cmp
cmp
cmp
lahf
cmp
cmp
cmp
push
cmp
data16
cmp
cmp
cmp
mov
in
clc
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
es
ds
fnstcw
std
ds
aas
jno
mov
idivb
add
add
add
xor
test
leave
xor
xor
mov
test
xor
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
ss
ss
ss
fbstp
sub
insb
aaa
mov
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
jae
test
jmp
lock
cmp
pop
cmp
cmp
cmp
cmp
cmp
scas
cmp
and
das
jl,pt
scas
sarl
sti
ds
aas
dec
aas
popf
aas
loope
add
add
add
add
add
ja
mov
xor
xor
xor
xor
mov
aad
add
cmp
dec
xor
xchg
fdivs
or
xor
xor
xor
xor
xor
xor
shll
movsl
ss
clc
ss
ss
push
aaa
pop
aaa
lods
aaa
loop
ljmp
cmp
cmp
cmp
test
lret
cmp
cmp
cmp
cmp
jge
mov
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
cmpb
cmp
jb
lods
ds
aas
push
aas
mov
add
jo
add
mov
ret
xor
push
xor
shll
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
in
xor
mov
stos
ss
or
sub
jnp
test
mov
lock
divb
sbb
arpl
mov
mov
cmp
cmp
js
mov
mov
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lret
adc
inc
mov
loopne
or
sub
dec
aas
mov
fstpt
add
add
add
dec
xor
scas
xor
xor
xor
xor
xorl
xor
xor
jge
mov
xor
jb
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
ss
scas
ss
aaa
movsb
aaa
mov
aaa
adc
sbb
push
mov
cmp
cmp
push
cmp
js
ret
cmp
cmp
pop
cmp
lahf
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
cmp
fs
mov
ds
aas
mov
nop
add
rolb
add
xor
ja
movsl
xor
xor
sub
inc
xor
popf
xor
xor
xor
xor
jecxz
sbb
xor
push
xor
mov
sti
xor
xor
xor
xor
xor
xor
test
push
ss
mov
aaa
dec
aaa
xorl
aaa
into
aaa
jmp
cmp
cmp
cmp
lahf
cmp
cmp
cmp
lods
cmp
cmp
cmp
cmp
cmp
jns
jge
scas
cmp
cmp
xchg
cmp
cmp
cmp
cmp
test
lret
cmp
jo
test
ret
or
cmp
push
aas
movsl
aas
lret
aas
hlt
aas
add
add
add
wrmsr
cmp
pop
xor
xor
xor
jns
int3
xor
xor
xor
xor
jns
mov
xor
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
cld
xor
bound
lods
ss
sbb
xor
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
pop
cmp
cmp
mov
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int3
cmp
cmp
pop
ds
lods
fdivrl
cli
sub
ja
xchg
cltd
aas
sarl
add
mov
add
add
add
pusha
xor
xor
cmpsl
xor
xor
xor
popa
xor
insl
xor
mov
lock
xor
jg
lds
std
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
mov
xor
test
ret
ss
out
cmp
jl
xchg
aaa
enter
cmp
jb
mov
cmp
cmp
cmp
adc
pop
cmp
sbb
inc
cmp
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
sarl
or
aas
mov
add
rolb
ret
add
and
push
xor
xorb
xor
xor
xor
nop
xor
xor
xor
xor
mov
xor
lea
popf
xor
xor
xor
xor
xor
xor
xor
cmpsl
xor
inc
ss
ss
ss
ss
ss
aaa
pop
aaa
stos
aaa
mov
aaa
jmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
xor
push
je,pt
mov
mov
aas
cmp
xchg
sarl
loop
add
add
add
fiaddl
add
sbb
push
xor
cmp
xor
xor
xor
xor
xor
jb
jg
mov
loop
xor
xor
xor
je
mov
xor
xor
xor
xor
xor
xor
xor
xor
fnsave
je
cmpsl
shlb
pop
aaa
sbb
das
aaa
inc
aaa
push
aaa
lahf
aaa
aaa
fidivl
add
sub
arpl
mov
movsb
cmp
cmp
cmp
cmp
xchg
stos
cmp
cmp
cmp
inc
cmp
jnp
lea
into
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
repz
pop
jle,pt
lea
sarl
pop
aas
sub
imul
aas
enter
add
add
add
mov
xor
xchg
xor
xor
xor
xor
xor
jl
xor
xor
xor
pop
xor
push
lods
xor
xor
xor
xchg
xor
cs
xchg
ss
ss
aaa
pop
aaa
data16
cltd
aaa
jmp
cmc
aaa
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
cmp
test
cmp
cmp
cmp
cmp
ja
lcall
cmp
cmp
cmp
cmp
cmp
cmp
lds
pop
ds
cmp
jb
mov
aas
data16
test
add
add
add
add
add
ja
lods
xor
xor
xor
xor
xor
xor
xor
mov
fidivl
add
sbb
inc
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
ret
ss
ss
ss
lahf
ss
and
inc
aaa
pop
aaa
xchg
aaa
fwait
aaa
cmp
xchg
cmp
cmp
cmp
cmp
jo
cmpsl
cmp
cmp
cmp
cmp
sub
push
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
ds
mov
ds
push
aas
jge
aas
idivl
add
add
add
mov
xor
pusha
xor
xor
xor
xor
xor
xor
mov
mov
fnsave
add
cmp
push
mov
loop
sbb
and
pop
xor
xor
xor
xor
xor
xor
xor
xor
fnsave
xchg
enter
inc
aaa
je
lea
fnsave
cmp
mov
cmp
cmp
cltd
cmp
cmp
popf
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
imul
ds
ds
ds
add
pop
aas
or
inc
aas
mov
leave
aas
fstpt
repnz
add
add
add
enter
adc
xor
xor
xor
push
xor
xor
push
xor
mov
add
sub
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sahf
xor
and
xor
cmp
pop
ss
movsb
fbstp
ss
aaa
push
aaa
test
leave
aaa
fdivs
cli
aaa
xor
cmp
cmp
cmp
cmp
sahf
cmp
cmp
cmp
cmp
or
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
push
ds
ds
ds
aas
and
aaa
aas
push
jbe
mov
mov
add
inc
add
mov
xor
xor
xor
xor
xchg
cltd
xor
xor
xor
xor
out
adc
and
je
sahf
xor
xor
xor
xor
xor
xor
xor
xor
jle
xchg
xor
pop
ss
ss
jl
stos
ss
aaa
js
mov
popf
aaa
shlb
aaa
sbb
insl
cmp
cmp
cmp
ret
cmp
cmp
cmp
lea
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
xor
pop
jp,pt
nop
ds
aas
ss
cmpb
aas
hlt
aas
add
add
add
xor
pop
xor
xchg
xor
xor
xor
xor
mov
mov
xor
xor
bound
scas
xor
xor
xor
xor
adc
cmp
xor
xor
xor
xor
xor
in
xor
mov
fnsave
jecxz
clc
adc
push
aaa
pop
aaa
je
shlb
cmp
imul
cmp
cmp
cmp
bound
xchg
cmp
cmp
cmp
cmp
cmp
movsb
cmp
cmp
cmp
cmp
int
jmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
jne
xchg
ds
add
aas
cmp
aas
add
add
add
add
add
xor
xor
xor
xor
xor
mov
leave
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xchg
pop
and
dec
ss
mov
aaa
inc
aaa
pusha
aaa
xchg
aaa
ret
aaa
add
cmp
mov
lret
cmp
cmp
cmp
cmp
jl
mov
mov
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
lods
cmp
and
inc
ds
ds
cmpb
ds
and
dec
aas
lea
xchg
aas
mov
fstpt
in
add
add
add
add
add
xor
xor
xor
xor
xor
jb
ret
xor
xor
jns
xorb
xor
xor
xor
stos
xor
xor
xor
xor
xor
xor
xor
xor
loope
cmc
xor
xchg
lahf
fnstenv
jmp
and
sub
pop
aaa
jo
mov
aaa
pushl
adc
sub
push
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
xchg
cmp
cmp
cmp
jo
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
xchg
adc
and
pusha
ds
lods
xlat
add
sbb
outsb
aas
cmpb
aas
clc
aas
add
add
add
xor
test
shlb
fdivs
jecxz
adc
cmp
dec
xor
fwait
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
pop
xor
xchg
xor
jnp
mov
aaa
push
aaa
gs
imul
adc
push
cmp
xchg
cmp
cmp
cmp
movsb
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
lds
pushf
cmpsl
fidivrl
add
cmp
pop
aas
addr16
cmpsb
aas
lret
aas
add
add
add
and
cmp
pop
xor
xor
xor
xor
xor
xor
js
test
xor
xor
xor
xor
jge
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
popa
ss
les
adc
and
jno
sahf
aaa
aaa
or
xor
cmp
cmp
imul
cmp
cmp
cmp
cmp
xchg
lcall
cmp
cmp
xchg
test
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
mov
sub
push
ds
jnp,pt
mov
out
sbb
push
aas
lcall
mov
add
add
add
xor
xorb
xor
xor
xor
xor
xor
xor
mov
xor
xor
jb
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
fnsave
pop
lea
shlb
aaa
es
dec
aaa
pop
aaa
lahf
aaa
aad
sbb
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmp
cmp
test
ljmp
cmp
cmp
cmp
cmp
cmp
fstpt
jl
sarb
ds
ds
and
sub
jb
mov
ret
aas
add
add
add
enter
cmp
dec
xor
mov
xor
push
nop
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
addr16
add
inc
imul
lds
fbstp
push
aaa
cmp
jg
aaa
aad
jecxz
add
xor
cmp
cmp
cmp
lea
enter
and
popa
cmp
mov
add
dec
cmp
imul
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
stos
cmp
xor
aas
ds
mov
ds
aas
push
aas
bound
push
jle
aas
add
add
add
enter
inc
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
insb
ss
cltd
fnsave
adc
xor
jp
stos
aaa
les
adc
inc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
call
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
movsb
cmp
xor
ja
ds
aas
cltd
aas
xlat
aas
std
aas
add
add
add
rolb
add
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsb
xor
jecxz
pop
ss
ss
ss
ss
mov
aaa
popa
aaa
mov
aaa
sbb
inc
cmp
movsb
cmp
cmp
cmp
jle
lret
cmp
cmp
cmp
dec
cmp
jae
lahf
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
test
scas
ds
ds
aas
or
push
aas
popf
aas
in
aas
add
add
add
enter
adc
arpl
mov
loopne
add
rdtsc
and
insb
xor
xor
xor
push
mov
sti
xor
xor
scas
xor
xor
xor
xor
xor
xor
xor
xor
jne
mov
call
ss
ss
mov
or
and
cs
pop
aaa
xchg
mov
cmp
cmp
cmp
cmp
inc
cmp
fwait
cmp
cmp
cmp
cwtl
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
inc
ds
test
xchg
ds
ds
aas
xor
push
xchg
xchg
aas
in
add
add
add
add
add
pop
xor
push
xchg
xor
xor
xor
mov
xor
xor
xor
xor
xchg
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
cmp
ss
fdivl
adc
pop
aaa
jg
mov
aaa
sbb
xor
jb
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cli
cmp
push
sahf
ds
clc
ds
aas
xor
push
aas
pop
aas
fs
mov
std
aas
add
add
add
add
add
pop
xor
jnp
mov
xor
xor
mov
xor
xor
xor
xor
sbb
aaa
xor
arpl
xchg
xor
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
and
mov
mov
stos
shll
push
aaa
sbb
imul
iret
aaa
in
and
pop
cmp
cmp
cmp
cmpb
cmp
cmp
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
out
cmp
mov
xchg
ds
ds
aas
push
aas
jp
popf
aas
out
add
add
add
add
add
xor
mov
mov
xor
xor
jo
lods
xor
xor
pop
xor
xor
xor
jge
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
int
divl
fwait
cmpsb
lds
iret
ss
aaa
mov
cmp
popa
cmp
cmp
cmp
mov
repnz
cmp
jle
lcall
cmp
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
mov
mov
ds
movsl
sarb
fdivrl
pop
aas
cmp
cmpl
add
add
xor
pop
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
jl
mov
lahf
xor
xor
xor
xor
xor
xor
xor
int3
xor
jle
int3
ss
ss
pop
aaa
cltd
aaa
shll
aaa
sbb
sub
dec
cmp
lcall
cmp
xchg
cmp
cmp
cmp
jl
xchg
cmp
cmp
cmp
cmp
push
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
ds
add
push
aas
test
aad
add
add
add
dec
xor
insb
xor
xor
mov
iret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorl
xchg
ss
aaa
inc
aaa
ja
lds
aaa
sub
pop
cmp
mov
cld
cmp
imul
sbb
insl
cmp
cmp
inc
cmp
jp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
ds
ds
mov
enter
inc
aas
pusha
aas
test
scas
aas
mov
in
std
aas
add
add
add
mov
xor
lea
stos
xor
xor
xor
dec
xor
xor
xor
xor
lods
xor
xor
xor
jo
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
cmc
xor
xchg
movsl
ss
cli
ss
aaa
adc
pop
aaa
outsl
aaa
xchg
aaa
shlb
adc
cmp
cmp
cmp
ret
cmp
cmp
pusha
cmp
cmp
cmp
cmp
cmp
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
cmp
push
jp,pt
sarb
sarb
add
sub
jo
popf
aas
lods
aas
aas
add
add
add
int3
add
add
xorl
sub
xor
js
mov
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
mov
xor
push
mov
mov
sub
push
mov
aaa
loop
add
cmp
bound
lea
leave
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
stos
cmp
pop
cmp
jb
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
idivb
mov
loopne
adc
pop
aas
pop
aas
cmpl
aas
sti
aas
