lcall
jle
je
dec
leave
shr
inc
mov
cltd
mov
mov
push
loope
addb
call
imul
inc
icebp
pop
loope
mov
inc
adc
data16
mov
pushl
and
into
stos
cmc
in
sub
sarl
mov
mov
sub
push
aad
sbb
sub
outsl
call
icebp
sarb
shll
xchg
xor
or
subb
jecxz
or
lcall
ljmp
push
or
pop
xor
add
inc
or
push
jmp
jmp
or
cmc
push
inc
je
das
incl
xchg
add
inc
add
mov
and
inc
adc
mov
push
shrl
sbb
ljmp
nop
addl
adc
fs
mov
sbb
inc
incl
inc
mov
out
rorl
adc
jnp
and
add
adc
inc
add
rorl
lods
jmp
incl
or
and
mov
or
adc
jmp
add
push
shll
cmp
pop
inc
adc
mov
lcall
adc
mov
push
decl
add
pop
add
sub
loopne
inc
and
push
or
inc
stos
incl
sub
dec
push
push
lods
incl
or
add
pushl
adc
or
aad
incl
inc
add
vmovsd
adc
incl
dec
dec
test
add
pop
call
add
call
mov
and
sbb
adc
decl
or
add
adc
call
adc
test
cmp
dec
lcall
call
jmp
mov
mov
loopne
aas
ljmp
and
shrl
mov
jmp
movsl
incl
or
inc
adc
add
lcall
cmpsb
add
test
incl
shll
or
roll
or
add
test
inc
decl
inc
push
repz
pusha
add
or
xchg
adc
test
and
xor
scas
and
sub
add
inc
mov
nop
adc
add
bound
cmp
call
mov
movsl
stos
and
dec
cmp
pop
add
inc
dec
mov
sub
and
adc
aam
sbb
sbb
and
incl
adc
sub
add
dec
push
push
call
nop
add
inc
add
push
add
and
popa
add
push
sti
xchg
add
lods
or
nop
push
adc
call
inc
mov
or
or
jmp
mov
adc
adc
adc
incl
dec
fs
incl
andb
decl
mov
or
and
or
and
xchg
and
sbb
inc
mov
and
inc
or
and
add
and
inc
mov
addb
inc
push
push
lcall
pop
inc
ret
sbb
lcall
or
jmp
mov
decl
stos
xor
incl
nop
mov
or
incl
xchg
mov
add
jmp
cmp
nop
add
out
push
inc
xchg
and
adc
lea
dec
cltd
incl
popa
adc
stos
sbb
andb
xor
push
mov
xchg
mov
stos
test
decl
add
mov
or
call
andb
inc
xor
xchg
incl
xchg
dec
iret
or
push
sub
inc
and
push
sub
jmp
dec
inc
xor
push
and
sar
and
stc
popa
inc
add
ljmp
inc
inc
jmp
adc
ljmp
mov
add
inc
dec
add
test
mov
sbb
cwtl
inc
push
incl
adc
mov
add
push
adc
push
decl
xchg
inc
adcb
inc
mov
mov
add
sub
push
shll
sbb
add
push
sti
inc
dec
orb
cmp
andb
lret
xchg
or
call
or
dec
add
inc
push
pop
add
dec
add
dec
incl
inc
inc
add
add
std
or
outsl
add
add
mov
add
and
test
test
or
fisttpll
xchg
xor
dec
aas
add
sub
adc
and
pop
push
pop
add
jae
add
shlb
xchg
and
inc
addb
call
add
dec
adc
push
leave
or
subb
incl
push
movsb
adc
dec
incl
and
push
push
or
or
incl
inc
push
add
push
adc
mov
or
pop
and
sbb
add
incl
and
popa
test
and
addb
push
xchg
mov
call
and
sub
icebp
nop
mov
and
subb
add
repz
mov
and
adc
adc
test
sub
add
test
inc
dec
jmp
add
push
lcall
roll
add
or
push
dec
mov
incl
mov
cltd
test
add
adc
push
xor
into
test
call
or
adcb
add
loopne
dec
daa
or
push
push
call
dec
add
xor
sbb
call
add
mov
call
push
xchg
and
incl
andb
incl
andb
roll
and
inc
xchg
andb
dec
push
ret
add
jmp
mov
incl
cmp
push
or
pop
adc
adc
and
bound
xchg
and
decl
dec
inc
add
add
add
mov
push
xchg
dec
inc
add
mov
test
sub
adc
call
test
imul
adc
and
addl
mov
int3
fs
ljmp
and
and
inc
push
push
jmp
es
rolb
inc
xchg
call
pop
adc
push
dec
lods
test
and
mov
test
inc
nop
addb
add
push
enter
stos
andb
xchg
movsb
add
and
mov
mov
or
pushl
or
cmp
call
sbbb
jmp
add
add
mov
and
add
test
call
sub
stos
xchg
xchg
mov
movsl
xor
and
xor
xchg
ret
call
enter
test
push
call
mov
test
jecxz
xor
sub
rcl
xchg
mov
stos
incl
inc
inc
in
xor
add
xor
pushl
stos
mov
sub
mov
and
add
mov
xchg
test
pop
call
test
or
or
jmp
mov
or
mov
sub
push
decl
inc
push
xchg
mov
and
and
push
test
and
mov
aad
into
inc
mov
add
mov
stos
inc
add
dec
incl
push
and
bound
inc
lcall
ret
and
jmp
mov
add
push
xchg
call
and
adc
test
add
stos
and
mov
add
mov
mov
add
dec
push
incl
ljmp
push
add
sub
inc
inc
or
decl
add
lea
adcb
decl
adc
or
inc
add
add
aad
decl
incl
call
xchg
and
add
xchg
push
dec
push
inc
inc
call
imul
inc
sbb
inc
mov
inc
or
in
iret
mov
incl
add
dec
decl
cmp
pop
shrl
and
push
subl
lea
test
push
leave
sub
xor
inc
ljmp
adc
shrl
mov
call
mov
or
jmp
add
add
test
push
test
add
jmp
add
sub
incl
adcb
addb
push
jmp
and
sbb
inc
pusha
inc
adc
jmp
xchg
adcb
nop
inc
mov
and
test
sar
inc
dec
adcb
xor
mov
andb
iret
inc
xchg
test
incb
add
decl
dec
adc
or
inc
xor
incl
adcb
jmp
stos
addb
and
dec
adc
fistl
push
add
sbb
ljmp
incl
mov
decl
add
mov
decl
add
inc
pushl
inc
push
add
subb
or
jmp
push
test
inc
xor
adc
stc
inc
stos
stos
test
pusha
add
decl
fs
nop
decl
dec
adc
inc
sbb
adc
and
push
movsb
incl
adc
mov
lods
or
inc
jmp
mov
add
sbb
inc
sbb
add
sub
adc
add
add
incl
enter
add
jmp
push
add
adc
fildl
inc
sub
add
nop
and
sub
mov
or
and
mov
mov
incl
or
test
call
and
lds
lcall
mov
add
add
adc
nop
stos
call
push
adc
push
jmp
adc
sub
test
nop
decl
or
adc
add
pop
and
mov
incb
or
lret
lret
jb
sub
mov
addl
adc
sub
push
inc
subb
cmp
and
addl
push
call
push
test
or
movsb
push
xor
adc
xchg
stos
and
dec
mov
int3
sub
add
sub
lcall
or
decl
inc
subl
adc
sub
jmp
inc
mov
andb
inc
mov
mov
sbb
xlat
movsb
and
push
xchg
incl
nop
test
push
fs
push
adc
mov
andb
adc
push
xchg
incl
pop
inc
mov
call
xor
and
xchg
or
in
xchg
mov
push
test
inc
call
or
or
ljmp
and
addb
dec
add
and
or
mov
and
and
jmp
inc
mov
push
incl
xor
incl
cwtl
pop
pushl
add
add
call
xchg
enter
fadd
sub
inc
and
and
push
jmp
stos
addb
stos
and
or
jmp
adcb
push
nop
out
subl
adc
sub
mov
push
jmp
incl
inc
mov
add
add
gs
adc
inc
and
mov
dec
add
or
subb
sub
pop
push
dec
test
ret
adc
pop
add
stos
add
push
decl
inc
add
orb
stos
mov
or
sbb
pusha
inc
adc
add
add
and
decl
dec
sub
add
call
push
cmp
or
and
mov
decl
or
and
mov
andb
add
push
and
push
or
incl
xchg
or
push
and
and
or
inc
jb
or
pop
xor
adcb
andb
add
add
mov
push
roll
push
add
movsb
stos
pusha
inc
stc
movsb
mov
inc
pusha
add
fisttpll
xchg
inc
call
push
add
or
xor
mov
test
sub
mov
cmp
xor
and
or
lods
test
mov
inc
mov
xor
jmp
push
jb
adc
xor
stos
add
ljmp
sub
add
adc
andb
push
leave
add
pusha
movsb
test
inc
adc
stos
sti
mov
jmp
pop
add
jmp
mov
andb
dec
in
add
or
xchg
add
mov
ljmp
mov
adc
call
add
inc
push
add
mov
stos
addb
mov
add
repz
and
enter
add
sub
pop
push
lcall
or
push
and
and
pop
inc
enter
stos
stos
incl
pop
inc
and
call
dec
sub
incl
add
test
adc
mov
inc
aad
and
xor
mov
inc
inc
inc
inc
lcall
adc
movsb
sub
icebp
add
push
lcall
adc
sub
inc
push
ljmp
add
add
ud0
andb
and
sub
pop
add
push
add
dec
sub
add
jmp
daa
add
add
les
incl
mov
mov
push
inc
lcall
fwait
ret
adc
mov
xor
call
adc
xchg
mov
dec
incl
pop
inc
and
sbb
test
stos
and
pushl
incl
push
xor
nop
call
inc
push
mov
adc
add
sbb
enter
add
pop
pop
add
or
lcall
add
xor
dec
push
popa
inc
adc
adc
add
xor
test
call
adc
bound
decl
adc
sbb
or
rol
mov
test
and
add
and
inc
orb
adc
add
mov
mov
adc
inc
ljmp
push
decl
sub
jmp
mov
cmpsb
addl
add
stos
sub
shll
mov
test
add
inc
inc
lods
mov
sbb
sbb
decl
push
xchg
xchg
and
sbb
cmp
sub
add
test
test
mov
adcb
orb
decl
incl
adc
ljmp
add
aad
and
pop
push
rorl
decl
adc
sbb
mov
and
add
test
add
stos
xchg
rolb
enter
subl
sti
sub
adc
decl
nop
push
lods
add
push
add
or
add
mov
call
inc
nop
or
adc
and
inc
incl
and
mov
bound
stos
and
add
xor
decl
mov
in
dec
push
adc
call
stos
xchg
or
adc
mov
add
jmp
push
sub
test
out
and
sub
push
insl
push
orb
incl
decl
call
add
mov
decl
pop
inc
cmp
shll
dec
mov
adc
fmuls
add
and
add
pop
adc
fldl
ret
add
adc
ljmp
pop
add
and
dec
adc
call
nop
add
or
inc
add
or
cmp
adc
mov
mov
dec
adc
jmp
jmp
adc
add
mov
add
or
xor
mov
inc
fistl
adc
adc
inc
stos
and
incl
xchg
dec
adc
pop
push
push
and
add
or
dec
or
sub
push
and
inc
and
push
add
mov
add
incl
push
es
push
mov
add
inc
sub
pop
add
pop
or
enter
incl
adc
push
sbb
or
add
mov
push
call
inc
sub
add
ljmp
sub
adc
jne
add
and
adc
fcoml
xchg
adc
ret
and
call
movsb
and
xchg
mov
nop
add
decl
incl
adc
add
decl
xchg
push
xchg
stos
push
dec
les
add
lret
leave
add
adc
add
inc
adc
mov
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
test
xor
or
fs
or
sub
inc
into
addb
dec
sub
and
dec
cltd
lods
xchg
or
add
sub
fs
and
add
test
and
dec
mov
add
mov
andb
inc
mov
mov
mov
cmp
test
add
decl
dec
inc
add
adc
inc
xchg
sub
push
or
push
add
mov
and
aad
inc
adc
push
jmp
adc
stos
adc
out
adc
or
sub
or
ljmp
add
incl
inc
mov
addl
nop
and
sub
sub
fs
push
orb
and
dec
add
and
xchg
mov
xor
adc
bound
and
and
and
stos
xchg
add
stos
and
and
push
mov
add
nop
add
dec
push
add
nop
push
xchg
add
dec
sub
and
sub
and
pop
add
inc
inc
add
fs
and
push
inc
xor
xchg
add
xchg
and
add
or
fs
add
push
adc
xchg
sub
dec
adc
xchg
lods
stos
mov
and
and
test
push
dec
or
movsb
stos
and
and
push
lods
and
push
leave
push
adcb
inc
inc
stos
xchg
adc
enter
sub
orl
sub
adc
and
dec
push
mov
sbb
mov
xchg
adc
sub
push
mov
fs
dec
push
add
pop
add
and
xchg
add
inc
and
sub
enter
lods
sub
inc
adc
xchg
sub
push
leave
xchg
push
adc
mov
sbb
add
adc
nop
addl
adc
nop
add
xchg
nop
adc
orl
add
add
or
adc
addb
dec
and
add
adc
dec
adc
inc
push
inc
add
andb
add
and
and
mov
mov
add
dec
fs
dec
sub
add
inc
inc
and
sbb
add
dec
andb
fs
add
leave
xchg
add
and
add
or
dec
test
test
add
or
fs
inc
test
push
xor
push
xchg
or
push
and
and
adcb
lret
nop
push
and
push
inc
mov
mov
sbb
mov
adc
enter
xchg
push
and
inc
test
test
test
lods
add
adcb
sub
adc
test
fs
sub
push
mov
push
xchg
or
push
and
inc
push
adc
and
push
dec
orb
or
dec
xchg
inc
addl
leave
orb
dec
sub
mov
dec
or
lods
and
adc
nop
and
mov
and
mov
add
and
mov
inc
dec
test
dec
and
sbb
nop
adc
xor
adc
orb
xchg
and
or
push
mov
nop
addb
and
push
add
inc
xchg
subl
or
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
or
cmpsl
or
mov
pavgw
jne
jl
jp
fst
cmpsb
inc
mov
inc
test
dec
add
lods
les
or
jno
roll
mov
jge
xor
lret
sbb
test
inc
mov
cltd
adcb
pushl
xchg
mov
mov
imul
cwtl
xchg
loop
loope
cmp
push
sbb
push
daa
push
fcmovnu
iret
repz
lods
mov
mov
adc
sub
jg
daa
and
cmp
add
mov
fcmovnu
cs
push
jmp
push
sub
pop
idivl
jmp
mov
sub
mov
mov
mov
jp
add
add
orl
ret
loope
imul
push
jmp
stos
imul
mov
pop
mov
dec
mov
mov
imulb
mov
bound
sub
jmp
dec
je
imul
and
add
add
inc
mov
adcb
movsl
in
pop
inc
sti
mov
inc
sub
add
cmp
sbb
test
je
lds
out
ret
mov
xor
fld
fadds
test
or
mov
add
out
mov
jnp
cmp
cmp
pusha
mov
popa
xchg
ret
push
push
mov
popa
icebp
fstpl
inc
sub
push
push
xor
xorb
jmp
pop
lahf
cmp
out
dec
lock
push
call
push
xor
mov
sti
jnp
addr16
xchg
popf
nop
mov
fsubr
fcmovb
sub
mov
std
jbe
or
rclb
aaa
in
mov
jmp
out
seta
sub
leave
jmp
jne
jge
aaa
mov
sar
pop
pop
call
lahf
dec
xor
nop
call
push
cmp
xchg
mov
ja
dec
notb
dec
dec
inc
cmpsl
sahf
stos
inc
fldenv
jo
inc
and
mov
and
call
decl
sbb
mov
fisubs
aam
cmpsb
dec
pop
mov
out
std
iret
jno
add
call
jge
subl
outsb
jns
mov
fs
cmpl
sbb
loop
fildll
pushl
cmc
adc
lds
sti
mov
int
sbb
lahf
scas
fldl
ljmp
push
int
addr16
je
inc
xor
and
mov
mov
mov
pop
popf
repnz
decl
push
dec
jge
sti
popf
out
mov
add
sbb
arpl
mov
ficompl
mov
lahf
and
sub
stos
fldl
in
sar
dec
dec
or
mov
test
adc
add
popf
sbb
mov
add
fs
add
nop
push
add
push
inc
shlb
decl
pop
call
cmp
xchg
and
sahf
add
push
dec
test
xchg
aam
into
js
cmp
and
nop
jmp
pushl
mov
mov
push
lods
data16
cltd
mov
shlb
sub
bound
inc
call
mov
pop
xchg
imul
sahf
or
mov
xchg
in
mov
das
sub
ljmp
out
adc
popf
dec
sbb
ja
cld
push
mov
mov
jmp
push
or
sub
mov
pop
jge
bound
rcr
mov
or
xor
outsb
sbb
or
ljmp
rclb
in
xchg
ss
pushf
sbb
mov
fstpt
and
or
mov
js
test
clc
shr
icebp
or
mov
xchg
aam
stc
cli
movl
mov
in
push
aad
push
call
out
ds
subl
sub
pushl
decl
movsl
gs
cmc
aad
push
out
pop
sub
push
sbb
mov
mov
push
mov
dec
and
ljmp
cmp
jle
popa
jp
rcl
call
loope
adc
ja
test
out
or
movsl
test
mov
pushw
shlb
decl
in
fwait
ss
jg
jbe
int
and
xchg
or
lret
std
or
pushf
push
xor
mov
fcomip
fimuls
jp
jecxz
aad
pop
mov
push
cmp
xchg
inc
mov
jb
inc
fadd
cmc
mov
mov
inc
mov
inc
ret
cmpsb
clc
xorb
outsb
out
stos
pop
outsb
scas
popf
or
enter
push
inc
mov
incl
lock
stos
das
repz
ret
and
xchg
cs
in
dec
mov
addr16
stc
lock
ljmpw
dec
sbb
sub
and
nop
and
shl
pop
incl
jmp
in
aam
add
sub
rcrl
shrb
sbb
dec
jmp
je
movsb
leave
mov
inc
fwait
movsl
push
dec
sbbl
mov
jmp
aas
test
movsb
and
xor
cmc
repnz
and
stc
mov
loope
cmp
pop
in
jmp
and
dec
gs
test
sub
fmuls
inc
push
pushl
rclb
and
sub
loopne
in
ds
inc
inc
fsubl
push
hlt
sub
cli
pop
repz
das
call
inc
imul
xor
xor
ret
les
lds
adc
ljmp
nop
popf
inc
pop
jb
in
add
inc
cmc
or
pop
sbb
sub
cld
call
dec
sar
popf
jb
cld
push
imul
and
scas
push
fists
mov
call
lret
push
and
or
cmp
add
negl
xchg
scas
pop
inc
xor
and
mov
mov
mov
jle
push
fsubrl
cmp
xor
lcall
push
ficomps
adc
test
inc
stos
xchg
and
cmc
lret
or
out
lahf
pop
mov
mov
fmuls
adc
mov
mov
pop
insb
std
cmp
gs
incl
arpl
scas
mov
xor
sub
fistps
lret
jnp
incl
in
leave
inc
cwtl
push
negl
in
jge
cli
push
hlt
cli
cmp
test
shrb
add
mov
jmp
mov
fnstenv
mov
xchg
push
pushf
xlat
jne
addr16
outsb
out
jb
sbb
sbb
decl
ss
cli
js,pt
icebp
fiaddl
fisubrs
cmpsb
dec
hlt
xor
push
ret
cs
incl
jle
push
xor
pop
into
cmp
pop
movsl
or
pop
sbb
dec
aad
jmp
xchg
jl
sahf
aas
xor
cltd
inc
cmpsl
sub
xchg
xchg
adc
xor
test
and
push
out
push
adc
mov
test
xchg
repz
pop
or
mov
lcall
roll
data16
xchg
je
fstl
je
jnp
jne
cmpsl
aaa
xor
xchg
sti
incl
mov
ret
and
mov
je
js
mov
arpl
and
fidivl
ss
nop
and
mov
std
add
je
jae
jno
push
fcomi
mov
call
add
cmc
jae
sahf
icebp
xor
push
cmpb
stos
jae
fdivrs
lods
imul
push
pop
sbb
add
add
push
test
es
add
ss
push
dec
xor
mov
jp
dec
jmp
and
jae
lods
pop
pop
pop
mov
mov
sub
xchg
fistps
mov
bound
dec
sbb
mov
sbb
cld
in
pop
xchg
push
mov
incw
mov
inc
mov
pop
inc
and
add
dec
pop
push
test
push
dec
sub
scas
push
adc
jmp
imul
enter
movl
scas
xor
mov
outsb
pop
and
mov
cmp
clc
sbb
aaa
push
xlat
mov
cld
inc
cli
cmp
outsl
cmp
adc
sti
das
cs
adc
cmpsb
pusha
xchg
aas
divb
mov
das
lods
inc
ss
mov
sbb
in
lods
push
sub
pop
adc
or
mov
inc
adc
push
pop
test
pop
es
mov
das
clc
jb
xchg
fbld
pop
mov
pop
adc
push
jbe
mov
incl
movsb
jno
sbb
mov
push
sbb
pop
pop
jbe
inc
daa
sarl
mov
pop
mov
cmp
icebp
icebp
mov
cmovle
pop
push
cmp
pop
push
insb
clc
jmp
sbb
cmp
mov
push
inc
add
mov
jo
push
push
pop
test
push
fwait
popa
jmp
stos
cmp
inc
or
push
nop
xor
clc
decl
incb
movsb
popf
pop
mov
pop
adc
jge
or
or
out
mov
pop
std
mov
icebp
inc
cwtl
mov
mov
bound
mov
call
sti
push
adc
out
nop
inc
sbb
andb
pop
push
mov
or
in
mov
inc
pop
cmp
sti
scas
leave
ss
sub
mov
pop
and
and
pop
je
inc
inc
in
rcll
insl
push
sub
push
aad
movsb
sub
ds
lret
mov
and
pop
inc
xor
outsl
int
decl
sbb
lods
leave
lret
dec
dec
cmp
movl
jbe
xorb
lret
cmp
push
lock
aas
pop
jbe
ljmp
xchg
xor
mov
mov
repz
mov
lret
mov
pushl
or
mov
xor
jne
xor
lcall
out
inc
dec
mov
inc
pushf
jbe
stos
mov
nop
and
mov
pop
in
sti
outsl
decl
push
nop
sub
scas
pop
mov
mov
fisubrs
mov
pop
fbstp
mov
sahf
push
adc
orb
sub
cmp
enter
inc
pop
xor
push
add
xor
pop
repz
xchg
jne
dec
push
mov
ja
scas
mov
lcall
sub
out
cmc
add
add
or
int3
xor
mov
rol
push
aaa
cld
rcrl
ss
xchg
or
jl
push
out
xlat
push
bound
stc
shll
fistl
jo
imul
call
hlt
imul
decl
stc
out
add
jle
mov
mov
stc
mov
inc
shlb
push
popf
cmp
mov
push
cmc
and
jae
popl
std
pop
mov
fs
jge
incl
iret
popa
xorb
and
jbe
jge
xor
orb
ja
pusha
sub
inc
mov
gs
add
ljmp
insl
out
mov
xor
push
dec
push
sub
jmp
adc
adc
ja
imul
dec
fisubrl
cmp
dec
idiv
pop
mov
mov
ss
stos
fildl
mov
cmc
loope
incl
cmpsl
jle
mov
ds
push
aas
decl
cmc
jne
pop
push
adc
mov
push
dec
mov
inc
mov
enter
pushl
imul
movl
xchg
cmp
lret
cmp
test
jg
pop
fsub
jle
mov
mov
add
pop
xor
mov
add
push
mov
dec
jae
lahf
ds
insb
cld
or
inc
shll
pop
mov
jl
outsl
shll
call
test
mov
mov
pop
cld
outsl
push
inc
fadds
icebp
add
nop
dec
fdivs
push
test
incl
les
inc
or
mov
push
xor
xor
add
fisubrs
mov
fisubrl
dec
into
dec
xchg
out
lods
pop
rcl
sub
mov
scas
mov
dec
xchg
into
fnstcw
jle
inc
mov
into
cmp
push
rcr
std
outsb
mov
hlt
addr16
jl
adcb
cmc
push
xchg
test
popa
cmp
aaa
ljmp
dec
lcall
addb
mov
cltd
pop
incl
add
mov
push
xor
cmp
cmp
call
std
popa
cmp
cwtl
out
xor
sbb
ljmp
testl
imul
mov
pop
repz
sub
fidivrl
dec
stos
fidivl
inc
mov
rorl
adc
and
jno
outsl
fisubs
fucomp
call
jns
aaa
cld
incl
push
insl
dec
imul
push
arpl
dec
xor
arpl
imul
call
xor
jne
aaa
push
imul
xor
inc
inc
xor
pop
fs
ja
pushl
inc
dec
jne
jp
insl
dec
inc
dec
jns
dec
jo
xor
cmp
dec
push
pop
ja
cmp
push
popa
pushl
push
xor
inc
inc
inc
xor
arpl
push
push
push
xor
bound
push
jno
data16
xor
push
pushl
dec
inc
push
xor
insb
insl
clc
dec
popa
jbe
cmp
fs
jbe
addr16
jno
std
js
jb
popa
outsb
pop
inc
dec
dec
dec
bound
push
inc
push
jns
je
dec
inc
xor
xor
inc
imul
dec
dec
insb
push
push
outsb
jne
ss
push
jb
dec
jae
pop
dec
pop
inc
dec
push
jns
fbld
push
arpl
mov
inc
jns
jo
dec
jne
inc
push
pushl
push
jbe
cmp
push
push
inc
dec
push
inc
pop
js
dec
inc
jbe
inc
jb
dec
push
in
decl
push
push
je
push
inc
dec
jp
gs
dec
insb
push
mov
imul
fs
jg
call
xor
jne
dec
shlb
dec
pop
push
bound
jno
push
jg
push
push
inc
push
xor
addr16
xor
cmp
cmpsb
push
gs
dec
xor
js
dec
push
push
xor
jno
dec
inc
mov
cmp
insl
xor
push
inc
sbb
mov
jns
jne
jae
inc
add
inc
inc
stos
and
inc
xchg
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
jae
aam
sbb
mov
gs
imul
je
insb
jae
and
sti
push
popa
insb
jne
sbb
inc
popa
fs
jb
je
push
je
sbb
jb
popa
adc
data16
jb
arpl
jae
jae
jne
sub
dec
fs
idivb
je
jbe
push
inc
je
xchg
fs
test
jo
bound
imul
fildll
je
jo
outsb
outsw
and
pop
pusha
in
pop
arpl
push
and
xor
gs
rcrb
fsubrs
adc
push
jbe
insl
mov
cmp
inc
imul
jl
and
push
and
fbld
cmpsb
inc
js
jb,pn
imul
insl
aas
mov
cmp
jne
loopne
jns
push
outsl
push
imul
jb
or
stos
dec
push
mov
mov
jbe
jg
pop
push
je
dec
outsl
jbe
mov
popa
jno
testb
nop
jns
mov
mov
outsb
cltd
dec
shlb
into
mov
lret
inc
adc
adc
test
lcall
sar
or
rorl
js
roll
mov
push
ljmp
sub
mov
outsb
adc
jb
imulb
mov
imul
mov
jae
dec
inc
inc
xor
xor
ret
and
es
stos
cmp
jb
push
push
push
stc
mov
sub
jmp
out
ret
mov
push
imul
xchg
je
in
pop
push
sub
out
ficoml
ror
popa
bound
inc
sarl
push
cmp
inc
xchg
shr
das
add
cmp
dec
bound
arpl
jns
popa
movsl
test
lods
loop
adc
arpl
sbb
mov
jb
fldl
push
xor
pop
push
imul
lahf
sbb
clc
rol
nopl
and
sti
push
gs
jns
push
push
das
test
into
mov
dec
test
nop
inc
insl
push
outsl
mov
sub
add
lock
cli
cmc
cmp
pmaddwd
shlb
push
dec
movsb
adc
call
aaa
fldl
imul
sub
mov
push
roll
add
cmp
orl
aaa
adc
or
mov
mov
dec
and
inc
dec
add
mov
jmp
add
mov
ja
adc
cmpsb
stos
dec
push
and
push
sbb
and
or
ss
movsb
dec
add
popa
jb
dec
popa
insl
gs
and
mov
inc
push
dec
add
sub
loopne
popl
add
add
mov
or
inc
pop
xor
and
pop
fsubs
inc
add
jae
add
movsl
lods
pop
pop
lea
mov
or
or
add
js
es
sub
add
and
js
insb
pusha
cs
je
sbb
push
outsb
pop
in
jo
add
outsb
dec
push
mov
fwait
jge
dec
shrb
add
imul
xor
cmpsb
lock
adc
mov
ret
mov
adc
paddusw
cmp
xor
ficomps
mov
add
and
fiadds
add
inc
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
adcb
add
add
addb
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
in
add
add
add
add
add
add
add
mov
add
add
add
in
add
add
add
add
add
add
add
loopne
add
xor
inc
add
add
in
add
add
add
add
add
add
add
or
add
cmp
inc
add
add
in
add
add
add
add
add
add
add
xor
add
inc
push
inc
add
add
in
add
add
add
add
add
add
add
pop
add
add
add
add
in
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
add
add
test
add
pop
or
add
add
in
add
add
add
add
add
add
add
rolb
add
or
add
add
in
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
insb
or
jo
add
in
add
add
add
and
add
add
add
inc
add
add
add
push
inc
add
add
add
add
xor
add
add
add
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
push
add
aaa
call
stos
add
mov
or
pop
mov
in
out
add
out
in
add
in
add
movsb
orl
pop
out
add
lret
add
scas
addl
out
addb
add
mov
addb
movd
adc
sbb
push
addb
sbb
add
sub
add
add
add
in
add
xchg
push
pop
or
xorb
lcall
lcall
cmp
sub
add
mov
mov
add
lret
add
sarl
cmp
or
add
rolb
mov
jo
int3
inc
add
rolb
into
or
lods
inc
add
jg
jg
jg
jg
inc
inc
adc
add
add
add
push
pusha
add
push
pusha
add
pusha
add
pusha
ds
pusha
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
xor
add
pusha
add
push
pusha
add
add
add
add
add
pusha
add
add
xor
add
xor
add
push
push
test
add
pusha
add
add
sub
add
add
cmovno
dec
dec
xor
add
pusha
add
pusha
add
xor
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
es
add
test
in
add
pusha
add
add
stos
cs
add
pusha
add
pusha
add
pusha
add
lret
fisubs
stos
test
add
add
pusha
add
add
add
pusha
add
push
pusha
add
pusha
add
ds
push
pusha
add
pusha
add
add
pusha
add
add
in
add
pusha
add
pusha
add
aas
in
add
pusha
add
pusha
add
add
pusha
add
add
sub
pusha
add
pusha
add
pusha
add
cmp
in
add
pusha
add
pusha
add
pusha
add
bound
lods
lods
or
pusha
add
pusha
add
pusha
add
mov
add
les
clc
pusha
add
pusha
add
and
add
pusha
add
pusha
add
pusha
add
outsb
pusha
add
pusha
add
add
pusha
add
sbb
pusha
add
pusha
add
add
stos
insb
pusha
add
movsb
pusha
add
pusha
sbb
loopne
call
and
add
pusha
add
pusha
add
insb
pusha
add
pusha
add
xor
add
and
add
pusha
add
pusha
add
add
add
pusha
add
add
pusha
add
add
add
pusha
add
pusha
add
test
add
pusha
add
add
add
pusha
add
add
adc
inc
mov
pusha
and
loope
shlb
out
add
dec
outsb
add
inc
adc
in
add
stos
pusha
add
add
loopne
sub
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
loopne
or
stos
ds
add
pusha
add
add
push
pusha
add
add
ret
push
mov
add
pusha
add
pop
pusha
add
cmp
punpcklbw
xor
and
pusha
add
inc
pusha
add
add
add
mov
mov
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
add
pusha
add
xor
add
inc
xor
in
cmp
add
xor
into
push
xor
fidivl
add
add
xor
push
add
add
adc
add
xor
adc
in
push
add
add
xor
sub
add
xor
pop
mov
xorb
jbe
add
xor
mov
add
push
push
xor
and
add
add
xor
sbb
add
cmp
or
add
xor
sub
add
xor
dec
xor
jle
add
xor
mov
add
add
push
xor
int3
xor
clc
xor
call
jo
push
xor
xor
fidivl
add
xor
les
add
xor
adc
mov
add
add
xor
push
xor
inc
push
xor
stos
jo
mov
add
xor
jbe
add
add
xor
sub
add
xor
jno
call
mov
push
xor
and
add
add
xor
cwtl
xor
mov
add
xor
xor
push
lock
stos
or
add
xor
push
xor
dec
xor
stos
push
add
xor
scas
xor
push
mov
xorl
pusha
subl
add
xor
fdiv
dec
enter
jp
outsb
popf
xor
loopne
add
jo
clc
cmp
add
jge
sub
outsb
std
push
lock
xor
pushl
add
xor
cld
fwait
jo
xor
jg
push
xor
push
stc
mov
jno
xchg
xor
push
xor
jbe
add
inc
xor
push
push
xor
sub
add
xor
cmp
add
inc
xor
jp
sub
stos
xorb
mov
add
add
fcoms
loopne
mov
jnp
add
popa
jmp
cmp
add
add
or
jbe
mov
movsb
test
into
add
xor
test
push
int
pop
add
mov
lods
push
add
mov
dec
aad
push
adc
test
cltd
scas
add
sbb
sbb
add
test
add
or
push
sbb
stos
dec
loop
add
andb
call
mov
ss
jp
push
std
sub
loop
cmp
add
pushf
popl
pushf
nop
add
into
lcall
fwait
sbbb
add
addl
lods
add
add
add
or
outsb
outsl
add
inc
in
push
add
jmp
stos
stos
stos
imul
add
outsb
mov
out
leave
mov
jmp
mov
add
outsb
data16
mov
out
jmp
sahf
sahf
out
jo
out
add
jo
add
movb
add
add
add
mov
add
jo
mov
add
add
add
add
xchg
add
add
adc
mov
add
cli
add
add
cmpsl
add
add
add
add
popa
lods
lods
add
jo
and
add
add
stos
lods
add
jo
stos
jno
add
jo
push
jo
and
stos
sub
and
cmp
add
jo
cmp
cmp
jo
cmp
add
add
jo
mov
cmp
mov
jo
mov
add
jo
jo
stos
aaa
jo
pop
jo
xor
add
add
xor
add
jo
scas
cmpsb
test
add
jo
xchg
jo
xor
sub
add
jo
push
jo
in
out
daa
rclb
adc
mov
add
aam
push
adc
xor
fisubrs
fwait
jno
add
out
or
in
in
and
add
out
out
in
add
ljmp
iret
add
inc
add
add
iret
iret
add
in
call
jmp
in
and
lock
add
jp
adc
out
jo
rorb
das
add
add
add
int3
int
lret
enter
add
lds
ret
rol
add
fcmovu
fcomp
add
push
add
mov
mov
addl
popf
lcall
xchg
add
mov
mov
incl
testb
xchg
nop
inc
add
add
add
pop
add
add
add
add
add
ltr
add
sbb
add
in
in
ljmp
inc
add
in
jecxz
loopne
sbb
lods
add
add
add
or
add
add
add
add
add
add
add
add
push
in
and
aas
add
add
add
push
mov
add
pop
ret
jns
ret
push
adcl
lock
ret
mov
fisttps
add
test
pop
add
adc
lock
sub
cmpsl
add
cmp
add
fldt
inc
mov
test
push
enter
push
xchg
add
movsl
fiaddl
or
sahf
add
mov
repnz
mov
add
cli
add
add
inc
dec
or
add
mov
push
fwait
sbb
add
fsub
mov
test
xchg
dec
fucomip
xchg
xlat
repnz
mov
or
jg
shr
inc
ret
add
repnz
in
ds
daa
add
inc
or
pop
add
ja
sbb
jmp
cmpsl
adc
and
ffreep
add
push
repnz
add
push
js
getsec
incb
sub
sbb
out
add
loop
dec
int
add
adc
mov
es
push
scas
add
jb
add
jo
add
cmp
add
dec
mov
xchg
push
cmpsb
dec
or
in
add
dec
lret
addb
addb
loope
add
push
addb
sbb
add
sbbl
scas
add
add
addb
addb
addb
rolb
rolb
test
mov
add
les
cmpsb
rolb
rorl
add
rolb
add
add
add
rol
add
add
add
inc
rolb
add
add
rolb
add
add
mov
loopne
add
rolb
add
add
adc
pop
rolb
add
push
add
rolb
rorb
rolb
adc
in
add
add
add
add
dec
rolb
add
add
rolb
rorb
rolb
rolb
push
rolb
rclb
rolb
rorb
inc
rolb
add
add
rclb
fiadds
movb
jb
jmp
xchg
add
rclb
rolb
add
cld
add
mov
add
add
rolb
rorb
inc
rolb
add
add
add
adc
faddl
sahf
rolb
add
add
mov
cmc
add
inc
rolb
add
add
rolb
push
add
add
rolb
shrb
add
add
rolb
add
aaa
push
mov
call
rolb
rolb
rolb
push
shlb
rolb
shrb
add
add
add
rcrb
rolb
rolb
add
push
add
add
pop
lcall
xchg
add
rolb
rolb
adc
sti
add
in
add
rolb
rolb
rolb
push
shlb
rolb
sarb
rolb
inc
rorb
scas
add
rolb
shrb
adc
push
rolb
rcrb
rolb
rorb
push
rolb
rolb
add
add
add
inc
add
add
inc
add
movl
jp
loopne
loopne,pt
xlat
add
add
loopne
std
loopne
jp
add
loopne
inc
loopne
out
add
add
loopne
cmpsb
loop
stos
add
loopne
jne
loopne
sbb
add
push
loopne
stos
loopne
push
loopne
jmp
cmp
inc
loopne
or
enter
add
loopne
inc
loopne
daa
loopne
dec
loopne
outsl
add
add
add
add
loopne
dec
loopne
lcall
adc
sub
add
adc
push
ret
scas
add
push
add
loopne
fucom
or
loopne
or
add
loopne
xor
loopne
sub
add
add
push
add
add
add
loopne
mov
inc
loopne
fs
add
loopne
push
push
loopne
ret
jbe
pop
lret
jle
loopne
repnz
lret
loop
add
inc
loopne
push
movsl
scas
add
loopne
loopne
ss
jo
xor
inc
loopne
lcall
imul
add
and
lods
loopne
mov
add
loopne
shl
add
lret
add
loope
loopne
push
loopne
cli
loopne
stos
jg
add
loopne
jae
sbb
loopne
xorb
push
movsb
scas
add
loopne
je
add
loopne
mov
inc
loopne
sti
loopne
dec
loopne
stos
shl
add
add
loopne
data16
stos
dec
loopne
push
add
xchg
loopne
stos
lret
lcall
loopne
stos
into
loopne
mov
add
loopne
mov
loopne
scas
loopne
jge
dec
add
loopne
add
add
loopne
imul
loop
add
and
add
loopne
pop
loopne
sbb
loope
loopne
adc
loopne
arpl
add
add
loopne
inc
push
loopne
std
loopne
jbe
add
loopne
bound
add
sbb
add
loopne
mov
add
loopne
mov
loopne
aam
add
cmp
loopne
mov
notb
loopne
mov
adc
loopne
inc
push
loopne
repnz
lret
loopne
cli
loop
jmp
add
loopne
jle
push
add
add
inc
loopne
push
cmpsb
scas
add
loopne
push
push
loopne
insb
loopne
push
loopne
xor
add
push
loopne
xor
add
loopne
imul
add
loopne
inc
loopne
xor
loopne
fnstsw
adc
add
loopne
xchg
add
add
loopne
mov
addr16
add
loopne
mul
add
and
loopne
adc
add
push
add
add
loopne
mov
add
loopne
lahf
loopne
sub
add
loopne
into
loopne
inc
loopne
out
loopne
jbe
loopne
pusha
loopne
xchg
loopne
loopne
sahf
lods
loopne
repnz
loopne
sub
add
loopne
mov
add
loopne
mov
loopne
mov
shl
add
jo
or
ret
push
icebp
or
jo
cmp
divb
lock
flds
push
test
add
add
lock
add
jb
out
data16
pop
lock
xchg
jo
mov
add
jo
shll
stos
mov
pop
cmpsb
jo
mov
jo
jg
push
ret
or
jo
xorl
jo
ja
or
lock
stos
scas
add
xor
cwtl
lock
stos
sub
or
push
jo
add
add
lock
add
jo
stos
push
add
add
add
lock
sub
pop
jo
fidivs
cmp
stos
bnd
ret
loop
add
stos
scas
add
jo
or
stos
xchg
lock
jo
ret
jo
push
jo
stos
js
cmp
add
lock
data16
stos
push
jo
lcall
jo
mov
fidivl
and
jnp
loop
add
scas
add
jo
shl
jo
stos
and
xor
mov
push
jo
stos
add
add
jo
inc
jo
and
add
add
test
add
jo
mov
add
jo
sbb
add
pusha
sbb
push
push
jo
addr16
xor
pop
jo
and
sbb
push
add
jo
adc
add
jo
mov
aaa
lock
imul
scas
jo
xor
push
jo
sub
cli
jo
mov
test
add
and
jo
ja
add
jnp
adc
xchg
jno
jo
stos
enter
jo
sahf
jo
data16
stos
sbb
xchg
in
sbb
push
jo
mov
add
mov
insl
addl
add
add
jo
xor
mov
add
push
add
cs
add
scas
and
add
sub
add
ljmp
dec
out
scas
add
dec
out
shr
dec
out
mov
out
inc
out
mov
inc
out
mov
out
inc
out
mov
inc
out
xchg
add
inc
out
xchg
out
inc
out
xchg
add
pop
out
jmp
pop
out
xor
lods
out
pop
out
rolb
out
pop
out
mov
pop
out
sub
in
push
out
out
push
out
mov
out
push
out
mov
push
out
xchg
add
push
out
xor
push
out
nop
add
push
out
xchg
out
cs
mov
in
out
sub
xlat
add
sub
call
add
and
imul
and
hlt
add
and
loopne
ds
incb
out
aas
out
lods
out
cmp
test
mov
add
aaa
out
sub
out
sahf
add
xor
mov
push
out
mov
in
out
or
aam
out
or
jmp
add
add
imul
add
cmc
add
add
loope
push
out
incl
out
pop
out
stos
out
sbb
cmpsb
add
sbb
mov
add
pop
out
sub
out
adc
out
adc
aaa
add
dec
in
enter
lret
inc
in
fsubrp
inc
in
lock
inc
in
pop
in
leave
add
pop
in
lret
out
push
in
filds
out
push
in
icebp
out
push
in
fildl
out
sub
in
sub
out
out
cmp
into
adc
repnz
or
add
xor
mov
or
in
out
or
out
sbb
iret
add
push
in
repz
adc
addl
adc
mov
dec
in
add
dec
in
mov
add
dec
in
aad
inc
in
cld
add
inc
in
int3
out
inc
in
mov
out
pop
in
mov
add
pop
in
shr
push
in
std
add
push
in
int
push
in
mov
out
push
in
movsb
out
push
in
movsl
add
cs
add
sub
rolb
and
clc
out
and
les
out
aas
in
stos
out
cmp
mov
fsubr
aaa
in
pushf
add
xor
xchg
xor
test
out
push
in
out
out
or
roll
add
stc
out
add
lds
out
pop
in
test
sbb
mov
pop
in
popf
add
adc
xchg
adc
test
out
nop
ljmp
fimuls
fimuls
jecxz
fimuls
out
fimuls
adc
sbb
dec
ljmp
fiadds
dec
add
inc
ljmp
fiadds
or
add
inc
ljmp
ficomps
adc
pop
ljmp
ficomps
dec
add
pop
ljmp
ficomps
inc
ficomps
inc
add
push
ljmp
ficoms
ficoms
pop
add
push
ljmp
ficoms
push
ficoms
push
add
cs
fisubrs
sub
sub
sub
fisubrs
ljmp
fisubrs
ljmp
fisubs
ljmp
fisubs
and
cmp
and
ss
and
xor
add
ds
fidivrs
pmaxub
cmp
or
cmp
or
fidivrs
ljmp
fidivs
ljmp
fidivs
add
xor
xor
add
xor
sbb
jne
xor
jb
fiadds
loop
push
jmp
add
push
jmp
call
call
sub
sub
lret
jmp
add
sub
enter
leave
add
es
call
call
and
and
ret
jmp
add
and
shr
jmp
add
ds
call
call
cmp
cmp
cmp
fildl
call
cmp
flds
call
aaa
jmp
add
xor
aam
push
jmp
add
por
add
or
jmp
add
or
stos
call
call
push
jmp
add
pop
jmp
call
call
add
mov
mov
add
add
mov
add
pop
jmp
call
call
dec
call
call
mov
mov
add
dec
call
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
clc
add
pop
call
in
add
pop
call
ljmp
pop
call
call
out
ljmp
in
ljmp
loop
ljmp
loopne
ljmp
mov
fsubrp
sub
filds
ljmp
fiaddl
ljmp
stos
add
sub
fucomp
es
call
xlat
add
and
call
call
roll
ljmp
roll
ljmp
scas
add
cmp
call
call
fadds
ljmp
mov
movsl
ljmp
call
mov
cmpsl
ljmp
call
rolb
psubsb
ljmp
call
cli
add
or
sti
ljmp
call
lret
add
pop
call
testl
ljmp
call
repz
add
lock
call
into
add
sbb
call
call
clc
add
sbb
cld
ljmp
call
stc
add
adc
call
call
leave
add
adc
ljmp
jmp
addr16
dec
jmp
inc
add
dec
jmp
pusha
add
inc
jmp
popa
add
inc
jmp
sti
add
pop
jmp
inc
add
aas
pop
jmp
inc
in
pop
jmp
jle
pop
jmp
and
push
jmp
pop
in
push
jmp
jg
sub
jl
sub
jmp
jnp
sub
js
sub
jns
es
ja
and
je
and
jmp
jae
and
jo
and
jno
ds
dec
in
cmp
dec
in
cmp
dec
in
cmp
dec
in
cmp
dec
in
cmp
dec
in
ss
inc
in
psubsw
or
pop
in
or
jmp
pop
in
or
pop
in
or
pop
in
push
jmp
push
in
add
push
in
add
jmp
push
in
out
jmp
push
in
push
jmp
das
in
sbb
sub
in
sbb
sub
sbb
sub
sbb
sub
sbb
sub
push
jmp
daa
in
dec
out
int
out
lret
dec
out
lret
dec
out
int
out
int
out
lret
dec
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int3
push
out
int3
push
out
int3
push
out
int3
cs
int3
das
out
int3
sub
lock
sub
jmp
int3
daa
out
int3
and
cmp
and
cmp
and
int3
cmp
hlt
int3
xor
insb
int3
xor
out
int3
xor
int3
xor
leave
int3
xor
int3
add
in
int3
sbb
jl
adc
out
iret
adc
jl
adc
jge
xor
int3
lret
sub
movntq
out
lret
loop
or
jecxz
or
in
push
out
lret
in
add
test
out
lret
add
loop
add
cli
lret
out
out
lret
add
push
int
out
int
out
lret
sbb
push
int
out
int
out
lret
sbb
lret
out
lret
sbb
ret
out
lret
dec
in
into
dec
in
into
dec
in
into
dec
in
into
dec
in
into
dec
in
into
dec
in
into
inc
in
into
inc
in
into
inc
in
into
inc
in
lret
enter
lret
into
pop
in
iret
pop
in
iret
pop
in
iret
pop
in
iret
pop
in
iret
pop
in
iret
pop
in
iret
pop
in
iret
push
in
iret
push
in
into
push
in
int
in
add
int
in
iret
sub
mov
sub
mov
sub
mov
daa
in
iret
and
std
enter
lret
and
pop
lret
and
and
lret
ds
into
aas
in
into
cmp
repnz
cmp
in
iret
cmp
fmul
cmp
aaa
in
leave
xor
in
lret
xor
pop
lret
xor
and
xor
inc
lret
push
in
lret
pmulhuw
or
inc
lret
or
in
lret
or
call
into
or
inc
lret
push
in
lret
pop
in
lret
add
repnz
enter
enter
enter
enter
leave
pop
in
into
sbb
iret
into
sbb
in
leave
sbb
or
sbb
lods
enter
enter
enter
int
in
iret
adc
into
adc
hlt
into
adc
lock
dec
in
add
rolb
inc
in
int3
inc
in
int3
cs
add
int3
sub
in
sub
mov
and
test
in
int
in
int3
and
and
int
in
int3
ss
int3
xor
insb
int3
xor
dec
int3
adc
dec
int3
xor
stc
into
push
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
jecxz
loopne
loopne
fisttps
fisttps
fstp
dec
loopne
fisttps
fcmovnu
dec
loopne
fisttps
inc
loopne
filds
xlat
filds
filds
aad
inc
loopne
filds
rcr
inc
loopne
filds
rcr
pop
loopne
fistps
scas
fistps
fistps
lods
fistps
stos
fistps
stos
fistps
test
pop
loopne
fists
cmpsb
fists
cmpsl
fists
fists
movsl
fists
mov
fists
mov
fildll
loopne
fildll
loopne
fildll
mov
fildll
loopne
fildll
loopne
fildll
loopne
fildll
loopne
fbld
loopne
fbld
loopne
fbld
mov
and
loopne
fbld
loopne
fbld
loopne
fbld
loopne
fistpll
loopne
fistpll
loopne
fistpll
mov
cmp
loopne
cmp
inc
cmp
inc
cmp
inc
pushl
loopne
pushl
loopne
pushl
inc
pushl
loopne
pushl
loopne
pushl
loopne
pushl
loopne
decl
loopne
decl
loopne
decl
pop
decl
loopne
decl
loopne
decl
loopne
decl
loopne
incl
loopne
incl
loopne
incl
push
incl
loopne
incl
loopne
out
loopne
incl
loopne
fistps
loopne
fistps
loopne
fistps
xchg
fistps
loopne
fistps
loopne
fistps
loopne
fistps
loopne
fists
loopne
call
loopne
call
pop
call
loopne
into
dec
std
inc
into
push
std
mov
out
push
std
xchg
out
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
inc
into
inc
into
inc
into
inc
into
inc
into
inc
into
inc
into
inc
into
inc
into
inc
into
out
add
out
add
out
add
out
add
in
add
loop
add
jecxz
add
jecxz
add
std
adc
add
add
add
adc
add
add
add
adc
add
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
add
movl
add
ret
add
add
lea
add
ret
out
add
test
add
roll
add
out
add
outsb
adc
add
add
add
add
out
add
arpl
add
jecxz
add
jg
add
sahf
add
add
add
adc
add
add
popf
add
add
add
lret
add
add
lret
add
add
add
enter
jbe
add
leave
add
add
add
movb
add
add
int
add
je
add
iret
add
add
add
int3
add
add
add
loop
add
jo
add
ret
add
add
add
rolb
add
add
add
test
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
lea
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
popf
add
add
add
lcall
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xchg
add
add
add
xchg
add
add
add
add
adc
add
adc
add
adc
add
add
and
add
outsl
add
add
adc
add
add
adc
add
add
cmp
add
push
add
cmp
add
add
adc
add
add
cmp
add
imul
add
dec
add
add
add
dec
add
add
add
add
adc
add
add
pop
adc
add
add
add
add
dec
out
add
add
add
add
adc
add
adc
add
push
mov
out
sbb
dec
popf
mov
in
dec
call
out
sub
adcl
shlb
loope
shlb
rcr
or
jno
outsl
testb
lods
or
insb
repz
push
cltd
out
out
arpl
jle
adc
pop
mov
add
cltd
lcall
mov
loope
adc
dec
aaa
scas
insl
sbb
andl
mov
xor
imul
insl
sub
lahf
pop
js
das
sti
out
imul
ret
aas
lret
pushf
je
pop
mov
movsl
pop
cs
mull
pop
add
out
jne
sub
out
xchg
lahf
dec
xor
stc
jb
imul
mov
sub
mov
mov
in
adcl
scas
mov
xchg
mull
xchg
xchg
cli
cmc
nop
jecxz
xchg
ds
icebp
jle
mov
mov
xchg
and
cmp
lret
cld
into
cltd
js
push
mov
mov
fistps
and
cwtl
xchg
pop
test
and
aas
pop
repz
outsl
fistpll
jl
xchg
fmull
fsubrl
fsub
fcompl
rorb
scas
mov
repnz
fcmovne
nop
jo
adc
xor
xchg
imul
mov
out
fsubl
xchg
loopne
cmp
sbb
ficompl
iret
jmp
out
fldl
fnstsw
jb
dec
fldl
movupd
loope
nop
xor
outsl
xchg
dec
loope
cmpsl
inc
cmpsl
js
ret
fcmove
fcmovb
fcmovu
fcmovbe
fisubrl
fidivl
jmp
jne
xor
js
inc
test
daa
sbb
jecxz
dec
test
xor
or
add
sbb
adc
ljmp
cmpsl
add
andl
pushf
frstor
ret
or
cmpsb
dec
int
fldt
fstpt
jb
dec
fildl
pop
fistl
sub
xorb
dec
sti
movsl
sbb
sub
scas
sahf
mov
sti
sbb
fsubrs
fdivs
fcoms
js,pn
movsb
jecxz
test
mov
mov
in
pushf
pop
push
add
add
roll
scas
add
cli
add
add
ficoms
fisubs
out
or
ja
jmp
stc
das
jnp
cmp
js
leave
xlat
mov
xor
pmullw
shrb
rorb
sub
cmp
push
sti
push
sbb
lods
andl
aas
stos
rol
shll
shrl
shll
roll
rcll
roll
add
mov
dec
js
add
ja
lret
shll
push
jb
or
cmp
pop
fistpll
fsubl
fld
repz
sub
jns
push
mov
fs
rcr
mov
mov
sbb
insb
fldt
pusha
fstpt
pop
pop
push
jo
add
push
mov
fbstp
add
mov
lods
dec
aam
cmpsb
shlb
std
fdiv
fdiv
fcom
fsubrs
fcomps
xchg
cmp
fsts
mov
js
xor
mov
outsb
jne
xor
add
inc
fstps
push
fldcw
fnstcw
js
jno
ds
inc
push
xchg
shll
push
repz
pop
cwtl
test
aas
rcrb
hlt
mov
xchg
aam
aam
aam
aad
aad
aad
aad
xor
nop
sub
dec
and
inc
aas
jne
or
fbld
sub
and
jmp
in
clc
ror
rol
rcl
shrl
ds
push
jns
test
fadds
sahf
imul
in
fsubp
jae
out
lock
arpl
jnp
jne
dec
rolb
push
rorb
arpl
lret
sbb
pop
fldt
adc
jnp
adc
xchg
and
mov
fisubrl
fimull
add
push
fcmovbe
fistl
mov
iret
insl
rorl
lret
pop
jg
add
das
push
dec
es
sbb
out
aam
aam
aam
aam
aam
aam
sbb
or
fisubrl
and
xor
insb
repz
sarb
rolb
rcr
rcll
shll
rorl
or
dec
addr16
jmp
push
adc
sub
pmulhuw
ror
rol
rorl
and
add
add
sub
jne
addr16
stc
cmp
enter
std
cwtl
xchg
mov
mov
jne
sbb
ret
fidivl
sbb
mov
add
out
in
in
ljmp
in
jecxz
loope
cld
std
cli
sti
clc
stc
div
hlt
cmc
repnz
into
iret
int3
int
lret
enter
rol
fstp
fcmovnu
xlat
aam
rcl
rcl
scas
mov
xchg
addb
fwait
cwtl
cltd
xchg
xchg
xchg
mov
mov
mov
mov
xchg
addb
fwait
cwtl
cltd
xchg
xchg
xchg
xchg
xchg
xchg
nop
xchg
outsb
outsl
insb
insl
push
push
bound
popa
jle
jl
jp
js
jbe
je
jb
jo
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
cs
sub
sub
sub
es
and
and
and
ds
cmp
cmp
cmp
ss
xor
xor
xor
push
or
push
pop
add
add
out
add
pop
sbb
sbb
sbb
push
pop
adc
adc
adc
add
in
in
ljmp
in
jecxz
loope
cld
std
cli
sti
clc
stc
div
hlt
cmc
repnz
into
iret
int3
int
lret
enter
rol
fstp
fcmovnu
xlat
aam
rcl
rcl
scas
mov
pop
mov
test
sahf
lahf
pushf
popf
lcall
xchg
mov
mov
mov
mov
test
add
mov
mov
mov
mov
xchg
xchg
nop
xchg
add
insb
insl
push
push
fs
popa
add
jl
jp
js
add
je
jb
jo
add
dec
dec
dec
dec
dec
dec
add
inc
inc
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
pop
add
push
push
push
push
push
push
add
das
sub
sub
sub
add
daa
and
and
and
add
aas
cmp
cmp
cmp
add
aaa
xor
xor
xor
add
or
add
pop
add
add
out
add
push
pop
sbb
sbb
sbb
add
pop
adc
adc
adc
inc
add
add
out
add
nop
add
add
adc
adc
adc
and
jmp
lods
sbbb
xchg
and
xchg
xchg
xor
xchg
jo
push
addb
xchg
lea
sbbl
mov
lea
ret
or
add
add
repnz
add
hlt
add
cld
adc
outsb
outsb
add
fildl
mov
aas
add
adc
mov
cmpsl
rolb
add
and
rorb
popl
mov
mov
lods
cmpsl
lods
pushf
mov
lcall
mov
add
rolb
sbbb
or
or
pushf
adcl
scas
add
scas
add
in
gs
inc
invd
add
ret
inc
add
lea
mov
rcr
push
mov
pop
add
test
add
popf
add
inc
add
add
add
in
or
add
inc
lret
inc
jns
add
into
add
sbb
mov
add
add
add
into
inc
sbb
lret
inc
adc
rclb
lcall
or
mov
add
lcall
inc
add
or
add
add
mov
and
imul
add
mov
add
scas
add
add
pushf
add
add
add
xchg
sbb
add
add
add
mov
add
mov
and
mov
pop
xchg
mov
mov
bound
arpl
stos
add
mov
or
xchg
adc
add
rol
or
mov
lea
add
add
orb
xchg
scas
add
pusha
add
loopne
mov
and
loopne
andb
or
or
pusha
add
pusha
add
jle
add
add
add
fstpl
shlb
xor
add
add
stc
subb
add
and
mov
iret
xchg
jg
add
jl
jg
inc
add
fs
data16
pusha
add
fs
popa
jne
outsl
jne
push
add
in
stc
add
push
add
add
test
add
nop
stos
lods
add
mov
pop
ret
shl
add
neg
clc
icebp
lock
loopne
loopne
sub
sub
sbb
adc
inc
pop
add
add
add
push
adc
push
or
adc
rolb
xor
push
dec
dec
pop
popa
add
add
iret
lret
fmul
lock
ret
lock
in
add
idiv
ret
xlat
rolb
xabort
iret
ljmp
popf
aaa
or
adc
pop
out
adc
xor
pop
or
sbb
sbb
add
add
pop
inc
inc
inc
or
sbb
adc
push
pop
adc
or
add
sbb
inc
sbb
or
or
push
sbb
pop
adc
sbb
sbb
add
inc
pop
pop
pop
pop
inc
pop
add
ret
int
movb
ffreep
fldl
xor
add
and
dec
ss
inc
add
dec
imul
add
push
dec
add
or
pop
sbb
or
add
add
xchg
test
mov
mov
test
stos
add
xchg
mov
add
xchg
fwait
addb
xor
subb
sub
cs
add
adc
or
dec
add
push
or
sbb
adc
or
add
lahf
lcall
add
jge
jne
jl
jl
jo
jb
add
mov
loope
aam
xchg
fcmovb
fadds
push
insb
data16
data16
push
inc
popa
add
pusha
jg
je
dec
add
jns
jp
push
insl
outsb
js
push
push
add
dec
dec
inc
ja
or
inc
add
pusha
add
mov
movsb
jecxz
sahf
in
loopne
add
ljmp
add
repz
add
std
test
call
roll
int3
add
fwait
leave
lret
sbbl
xchg
lcall
mov
mov
jecxz
ljmp
pop
pop
adc
dec
push
push
add
test
mov
mov
scas
mov
cli
jmp
add
call
hlt
lock
mov
lods
jecxz
lds
cli
jecxz
cmc
popa
push
inc
inc
inc
inc
push
dec
add
test
add
add
or
add
repnz
lock
cmc
mov
sti
lock
divl
loop
out
stos
mov
inc
dec
dec
inc
inc
add
push
inc
or
dec
dec
add
push
adc
pop
pop
add
pop
sbb
sbb
adcb
and
jbe
addb
out
out
test
add
cmpsl
call
in
add
cld
std
icebp
mov
lock
repz
repnz
add
roll
add
dec
push
or
pop
add
out
sbb
xor
sbb
or
add
push
jno
push
ds
add
cmp
aas
xor
cmp
xor
sub
mov
mov
fwait
mov
mov
stos
mov
mov
or
and
adc
add
add
pop
adc
push
lmsw
mov
mov
cmpsb
stos
movsb
cmpsb
stos
mov
mov
mov
jecxz
loopne
repnz
cli
add
repnz
call
in
add
jne
dec
add
js
imul
adc
js
jo
js
push
jl
jge
pop
jno
and
pusha
imul
mov
mov
mov
test
cmpsb
lods
movsb
add
dec
add
dec
bound
dec
inc
add
inc
push
pop
pop
inc
dec
add
sub
out
cmp
and
aaa
xor
add
add
push
inc
imul
dec
popa
dec
pop
add
push
inc
add
mov
mov
mov
adc
pop
adc
out
push
add
sbb
push
push
icebp
add
sti
add
rolb
loopne
jmp
mov
mov
mov
push
pop
add
pop
dec
dec
jg
inc
adc
push
inc
icebp
add
pop
add
gs
popa
push
push
outsb
rorl
js
jns
jnp
fs
gs
cli
testb
hlt
jmp
add
div
loope
repnz
add
out
mov
xor
out
xor
sub
cmp
xor
and
das
sub
add
add
xchg
lea
sbb
sub
adc
add
sbb
add
loope
cmc
add
bnd
call
add
push
jl
adc
gs
add
or
prefetch
add
add
aad
leave
int
ror
add
ffree
rol
fcmovb
add
sbb
push
sbb
sbb
mov
cmpsb
cmpsb
mov
add
clc
in
in
add
mov
loop
idiv
mov
add
add
xlat
mov
add
bound
gs
jp
js
xor
jnp
jns
add
cmc
cli
call
nop
insl
add
push
or
clc
inc
add
ja
add
addr16
dec
push
pop
add
pop
dec
push
jle
dec
add
dec
push
or
pop
sbb
jae
dec
pop
addr16
ja
fs
ja
js
insb
push
add
cli
loope
in
add
mov
cmc
in
add
call
mov
cmpsl
mov
mov
cwtl
mov
lea
les
mov
mov
add
mov
mov
stos
mov
mov
imul
or
pop
jno
fdivr
ljmp
js
jno
movsl
andl
ret
mov
mov
jb
xchg
nop
xlat
add
lahf
mov
mov
add
push
pop
dec
xor
sbbb
mov
xor
cs
xor
add
xor
push
sbb
or
add
sub
sbb
inc
pop
and
adc
sbb
and
test
test
adcl
movsb
movsl
movsb
cmpsl
test
rcrb
adc
repz
mulb
xchg
mov
mov
add
rcl
or
aad
jno
rol
fcmovb
lds
add
loopne
fmul
fldl
add
in
cld
in
in
out
imul
incl
icebp
add
mov
add
gs
bound
gs
js
lahf
push
push
imul
outsb
jae
jns
outsb
jns
jg
pop
add
inc
pop
pop
adc
add
pop
push
inc
jbe
dec
add
inc
push
add
inc
outsl
cmpb
jno
je
rolb
pushf
lcall
add
push
pop
push
push
adc
add
xor
and
xor
mov
scas
test
pop
data16
add
jno
ja
jp
add
imul
dec
add
jl
push
pop
jo
add
pop
pop
add
pop
add
pop
dec
pop
dec
push
jb
pusha
dec
inc
jnp
outsb
popa
add
push
jle
push
ja
add
add
inc
getsec
add
add
pop
push
dec
pop
pop
push
sbbb
push
inc
inc
mov
adc
push
or
mov
mov
add
arpl
push
push
add
push
sub
push
add
in
movsl
xor
cltd
xchg
mov
xor
xor
adc
add
cli
add
loopne
add
add
add
sub
sub
sbbb
ss
add
add
in
loop
or
lea
sbb
cs
and
sbb
jns
imul
add
sub
adc
sbb
add
sbb
adc
cltd
cltd
test
add
xlat
mov
cltd
add
xchg
xchg
orb
xor
rolb
dec
dec
add
adc
push
or
add
add
add
jae
addr16
jg
jns
jae
nop
xor
add
ret
ret
rolb
enter
out
sti
lret
sti
loope
pushl
icebp
cld
hlt
std
jmp
or
push
fisubrl
fs
push
inc
push
inc
push
dec
inc
dec
xor
or
dec
dec
dec
dec
add
pop
add
imul
bound
add
in
jmp
mov
cmp
push
or
mov
pop
push
inc
adc
dec
dec
jo
push
push
inc
add
pop
pop
push
pop
dec
add
add
mov
test
mov
xchg
cltd
mov
bound
icebp
add
jno
xor
sub
jno
add
scas
scas
add
out
stos
scas
add
mov
sti
or
mov
rcrb
fnclex
add
popf
into
add
ror
fxch
vpsraw
xlat
test
incl
mov
add
adc
push
dec
add
push
and
sub
inc
pop
adc
in
add
mov
stos
mov
loopne
mov
popf
add
add
add
pop
push
add
cmp
inc
pop
adc
add
add
and
cmp
add
xor
push
add
adc
sbb
imul
jno
jns
add
xor
adc
aaa
xor
and
and
pop
add
daa
sub
or
neg
loopne
lock
loop
jmp
jno
mov
lock
sbb
fprem1
jmp
lret
addb
add
sbb
add
pusha
fs
or
pop
add
adc
add
or
sub
adc
adc
add
inc
sbb
ss
xor
jg
bound
mov
lock
repz
lock
repnz
int3
mov
add
add
add
cmp
and
xor
sbb
adc
add
adc
add
xchg
lods
mov
subl
leave
faddl
fcmovnu
call
rcr
fildl
shlb
jl
jnp
add
sbb
jle
push
jg
add
add
mov
mov
jo
dec
pop
pop
push
add
and
add
and
add
jb
aas
xor
add
add
or
adc
out
adc
add
and
or
push
sbb
adc
sub
sbb
push
sbb
or
pop
xor
nopl
or
sub
out
rcr
add
iret
fmul
fsubrp
clc
filds
aam
faddp
fmul
fptan
add
rol
rcl
xchg
ljmp
faddl
ror
iret
rcrl
rcl
rol
fld
add
add
pop
popa
arpl
jg
js
pop
outsl
insb
jl
add
mov
scas
stos
stos
add
mov
out
xorb
mov
jmp
aad
lret
cltd
sti
add
fsts
filds
add
add
dec
addr16
inc
pop
dec
add
insb
inc
inc
inc
push
push
add
pop
pop
sbb
pop
add
jle
pop
dec
data16
jb
and
sub
add
push
jle
cmp
add
add
add
add
mov
fimull
ret
aad
orl
add
add
add
orb
xchg
test
stos
mov
mov
fwait
mov
xchg
add
xchg
stos
scas
movsb
test
mov
in
scas
lods
mov
in
xchg
mov
and
into
nop
lea
add
cmp
add
insl
daa
and
add
mov
mov
mov
add
scas
mov
sbb
or
pop
adcb
or
sbb
popa
popa
imul
dec
insb
jne
jne
pusha
jo
cmp
push
add
xor
jns
jge
dec
pop
adc
or
add
fimull
add
add
xchg
mov
add
add
add
inc
addl
outsb
fs
fs
add
push
add
dec
inc
jge
jb
add
inc
pop
imul
je
push
push
dec
dec
add
arpl
dec
pop
inc
add
adc
inc
inc
pop
add
dec
addr16
push
pop
adc
sbb
subl
test
add
popa
jae
jbe
jl
cmp
outsb
jae
add
push
js
push
dec
pop
or
push
rorl
jle
jo
jns
jae
and
add
xchg
popf
lahf
add
mov
mov
xchg
add
mov
lods
mov
mov
stos
add
movsb
cwtl
test
nop
xchg
xchg
add
xchg
addl
add
nopl
or
sub
adc
add
xor
and
add
sub
and
push
sbb
and
and
jnp
and
addb
cmp
pop
push
push
rcrb
movsb
mov
lea
idiv
mov
add
mov
mov
lods
mov
xlat
rcl
add
icebp
lea
xchg
nop
xchg
sahf
sbbb
in
hlt
loopne
in
add
mov
scas
mov
jg
add
push
jg
push
outsl
arpl
push
jo
ss
jo
je
cmp
jl
jo
dec
add
pop
inc
inc
pop
out
verw
adc
sbb
das
dec
dec
add
popa
dec
dec
pop
push
sbb
adc
pop
inc
push
sub
add
and
sub
adc
xor
and
sub
xor
aaa
xor
and
jb
jbe
xor
inc
push
arpl
push
pop
adc
aas
adc
add
or
sbb
or
pop
add
adc
sub
jecxz
add
loopne
call
add
in
stos
movsb
jecxz
testl
xchg
xchg
out
add
jecxz
out
lock
addl
fcmove
int3
lret
xlat
add
rol
lret
in
add
fmul
rcr
in
fiadds
fxch
rcl
lcall
mov
out
add
cmpsl
cmpsl
stos
mov
repz
aad
stos
lods
mov
add
mulb
xchg
fwait
xchg
ret
xchg
adcb
xchg
add
adcb
addr16
daa
add
pop
ja
gs
add
pusha
jl
cmp
add
jnp
imul
jnp
pop
pop
dec
inc
add
jb
dec
push
inc
inc
add
inc
adc
push
push
dec
add
push
push
push
adc
pop
cmp
popa
jb
addb
int3
cld
ljmp
mov
mov
add
inc
arpl
jne
jns
xor
add
imul
jno
insb
sbb
jp
add
sbb
xchg
roll
lret
add
inc
push
push
push
add
jb
inc
push
push
pop
add
mov
add
icebp
popa
add
sbb
sbb
arpl
fs
add
push
adc
add
or
pop
pop
push
dec
insl
jge
add
arpl
jno
add
jae
add
push
add
dec
jge
outsb
jo
add
cltd
stos
add
outsb
insl
arpl
jp
dec
jbe
pop
push
jb
pop
inc
jp
push
inc
pop
inc
add
push
pusha
or
add
call
repz
add
pop
inc
inc
and
and
popa
add
add
push
dec
push
inc
push
inc
or
pop
add
insb
pop
pop
pop
inc
dec
loopne
mov
add
add
int
ror
nop
out
lret
loope
jmp
filds
leave
ret
fiaddl
add
int
add
xchg
pushf
sahf
add
mov
test
scas
test
addb
outsb
fs
imul
add
neg
xchg
lock
rcr
add
rcl
cwtl
loope
adc
xchg
mov
and
addb
xchg
test
iret
iret
addb
js
jbe
popa
jge
outsl
add
add
and
es
imul
sub
add
fmul
iret
xchg
add
fcom
fcmovnbe
fcmovnu
xlat
add
ffreep
add
fildll
add
pop
sbb
or
adc
add
sbb
push
add
dec
inc
or
or
add
pop
inc
inc
or
and
rclb
lcall
popl
mov
test
lret
add
clc
cmc
mov
add
std
stos
in
pusha
sbb
insl
outsb
jae
jp
add
jp
cmp
add
push
add
imul
pop
add
loope
add
ja
bound
push
add
jae
jae
jg
add
pusha
jle
jb
and
imul
jle
add
cmc
add
bnd
mov
jmp
mov
in
addb
insb
pop
add
or
or
add
xlat
add
movsb
addb
add
pop
add
add
clc
cli
mul
hlt
loop
add
cli
in
std
add
cmc
mov
mov
add
popf
fcom
rorb
out
or
aaa
xor
xor
and
inc
rorl
add
js
imul
insl
add
or
bound
add
int3
popf
add
inc
add
xor
arpl
add
pop
pop
pop
adc
add
push
add
add
pushf
mov
mov
stc
jecxz
mov
out
add
add
adcb
add
add
call
or
add
add
mov
stos
add
pusha
or
dec
push
add
and
pop
add
inc
jle
sub
xor
rolb
add
mov
rolb
and
addb
pusha
or
dec
jo
mov
stos
scas
add
cli
mov
add
cld
idiv
add
out
test
add
out
mov
lods
add
mov
lahf
fadds
mov
jo
push
dec
dec
dec
dec
add
adc
inc
inc
push
add
push
dec
inc
pop
pop
add
or
dec
inc
add
jle
imul
je
outsb
ja
cmp
add
je
and
shrb
dec
bound
mov
add
scas
lods
lods
stos
stos
test
test
mov
mov
mov
mov
mov
mov
add
pushf
popf
lcall
xchg
add
fstp
fcmovnu
xlat
or
roll
add
xchg
push
add
rcl
scas
clts
add
add
pusha
push
mov
mov
mov
add
add
add
add
add
mov
cltd
add
add
rolb
mov
cmpsl
add
add
lods
mov
lea
add
add
add
jno
add
and
adc
adc
add
add
add
jo
mov
nop
push
andb
add
shll
add
add
popa
add
add
add
test
mov
stos
rolb
mov
mov
mov
add
xor
add
test
ss
scas
mov
add
mov
or
lcall
mov
ret
mov
hlt
add
add
add
pushf
xchg
cmpsl
add
lcall
add
mov
add
add
adc
push
stos
addb
and
mov
mov
nop
or
lcall
std
sub
xchg
add
xor
cld
int
dec
mov
lods
mov
or
add
mov
sub
mov
add
mov
verw
mov
or
movsl
scas
lods
mov
mov
mov
add
movsl
add
add
scas
mov
add
jo
mov
add
addl
add
add
inc
add
mov
add
mov
mov
mov
cmpsb
add
scas
xor
stos
mov
add
lea
adc
add
sahf
pushf
adcl
add
ret
orb
lcall
mov
orl
pushf
add
mov
mov
inc
cwtl
mov
add
add
test
mov
mov
or
and
add
add
xor
lock
xor
xor
xor
fwait
xchg
add
adc
rol
lods
mov
aam
into
lea
jecxz
nop
add
add
out
push
add
addb
xor
mov
popa
push
scas
mov
xchg
jae
rolb
repnz
out
in
ljmp
or
xor
xchg
add
fdivs
add
xor
push
mov
add
xor
xchg
cwtl
add
xor
xor
push
xor
in
add
in
inc
add
add
sbb
in
xor
and
popf
lea
orb
lods
popf
xchg
fildll
mov
popf
add
test
shrl
fwait
adc
add
sbbl
add
pushf
addl
mov
adc
push
cmpsl
orl
add
repnz
pushf
popf
mov
mov
inc
adc
xor
mov
add
mov
or
ret
stos
jb
mov
pop
mov
mov
mov
xor
push
jno
mov
arpl
sub
jo
mov
icebp
add
mov
mov
fwait
lock
lock
push
cltd
push
inc
jno
xchg
mov
mov
add
add
ljmp
ljmp
add
mov
mov
lock
add
inc
add
aas
in
shrb
push
insb
mov
adc
sub
add
cld
add
loop
or
movsl
aas
jmp
add
cld
add
test
or
jno
xorb
popf
mov
push
inc
inc
int3
add
xor
mov
add
xor
add
fwait
jo
mov
cwtl
jb
xor
stos
sbbb
adcl
rolb
stos
mov
add
aam
jecxz
mov
lret
popf
int3
jecxz
xchg
xchg
loopne
sbbl
add
into
orl
shrl
shll
into
or
adcl
add
fistpll
popa
add
add
add
push
xchg
mov
add
fwait
in
scas
add
mov
lcall
pop
adc
push
cmp
add
add
fistpl
push
add
std
add
add
lods
add
adc
push
in
pusha
cmp
mov
sub
mov
push
jecxz
out
add
mov
ljmp
add
add
test
add
add
push
pop
movsl
out
add
stos
push
imul
call
xlat
mov
test
arpl
adc
adc
mov
adc
jae
movsl
out
add
mov
adc
adc
xchg
insl
add
ficoms
add
adc
daa
push
push
out
inc
add
mov
sub
mov
scas
add
add
add
scas
add
adc
push
xor
lcall
push
add
and
add
inc
enter
sbb
add
push
add
mov
call
arpl
frstor
adc
stos
add
add
adc
add
test
add
arpl
ret
add
xor
cmp
push
lock
add
daa
sub
add
shll
add
xchg
sbb
sub
push
add
mov
pcmpgtb
add
sbb
add
mov
push
xor
cs
in
add
cs
mov
add
add
sbb
xorb
jl
jbe
andl
out
add
xor
add
push
add
arpl
adc
data16
xchg
orb
jae
stos
adc
popa
andb
adc
addr16
adc
sti
add
scas
or
add
incl
fbld
subb
fsubrl
add
outsb
adc
add
pop
out
add
mov
adc
mov
adc
add
stos
in
add
mov
mov
arpl
daa
add
ss
adc
adc
out
fwait
mov
adc
out
lcall
add
fwait
jmp
add
add
lods
adc
mov
test
add
cwtl
aad
frstor
mov
test
push
in
cwtl
les
push
lret
clc
shrb
sbb
mov
or
sbb
add
gs
shrb
sub
push
add
push
pop
cs
pop
negl
mov
push
cs
push
cmc
add
adc
ljmp
lcall
sub
out
adc
cmp
cmpb
insl
or
adc
cmp
adc
adc
add
rclb
loope,pn
and
inc
add
adc
and
inc
dec
mov
mov
inc
outsb
mov
orb
shlb
adc
mov
rolb
add
push
sbb
pop
out
addb
adc
sub
cli
rcll
push
adc
push
inc
xorl
addr16
inc
sbb
sub
adc
adcb
add
add
ljmp
aam
add
sbb
add
inc
and
or
xorb
sbb
add
add
sbb
ss
push
add
or
cs
lret
xchg
sbb
sub
inc
les
insl
add
sub
cli
inc
xor
sub
add
add
mov
out
xchg
scas
add
sti
add
mov
sbb
pusha
add
loopne
adc
sbb
sub
lret
andb
dec
push
rorb
bound
fwait
jecxz
and
insl
mov
lcall
cmp
ljmp
in
mov
xchg
or
sub
in
add
movhps
xchg
aad
jecxz
adc
movhps
mull
sarb
incb
sti
repnz
adc
xor
adcl
inc
add
inc
xadd
addl
add
push
xchg
fwait
shll
and
sbbb
pop
adc
or
add
sub
sbb
je
mov
ljmp
adc
pusha
daa
and
xchg
lret
lcall
add
and
pusha
pop
gs
add
insl
push
in
insl
push
add
lcall
adc
je
and
cs
add
outsb
addb
int
sub
add
add
aad
adc
adc
roll
and
pop
lcall
mov
roll
in
add
fwait
pop
test
in
add
in
test
in
mov
sti
roll
jmp
inc
add
rolb
xor
sub
jbe
pushf
and
or
test
test
mov
sti
pop
loopne
gs
insl
adc
loop
rolb
andb
imul
cli
and
inc
dec
pusha
add
add
sbb
add
add
stc
cld
adc
add
adcb
test
and
cmp
add
add
loop
adc
mov
test
push
push
add
loopne
pop
sub
push
out
sub
inc
adc
mov
and
add
outsl
sub
add
gs
add
mov
out
add
add
pusha
or
push
test
mov
ljmp
mov
loopne
addl
test
and
sub
inc
push
add
mov
sarb
stos
adc
mov
add
arpl
pusha
pop
mov
push
test
jmp
movsb
add
inc
mov
adc
daa
sub
and
gs
out
push
adc
lret
loop
lcall
mov
adc
ljmp
add
push
inc
add
loope
mov
adc
lcall
inc
out
lcall
rclb
ljmp
lahf
push
rorl
rorb
or
test
inc
sub
out
or
and
pop
adc
add
adc
inc
push
andl
sbb
add
gs
lret
rorb
inc
dec
cmpsb
fwait
les
in
mov
loopne
scas
mov
add
mov
add
repz
add
pusha
add
sbbb
adc
push
repz
adc
adc
xor
add
adc
add
xchg
xor
mov
mov
cmp
push
test
inc
add
and
fadds
and
insl
adc
adc
adc
outsb
add
push
inc
inc
sti
out
add
add
pop
hlt
add
fstpl
sub
test
sub
insl
add
inc
inc
pusha
pop
repnz
imul
pusha
or
sub
lea
cs
arpl
add
jb
ret
or
or
add
inc
sbb
add
lock
sub
mov
mov
out
outsb
push
ficoml
add
xor
add
jge
jecxz
xor
mov
insl
sub
xor
daa
sub
shll
xchg
add
imul
xchg
inc
adc
sti
inc
lock
sub
aad
sub
push
jo
jo
inc
xor
add
mul
add
gs
add
adc
dec
push
pusha
add
add
push
pop
add
add
add
cs
add
lcall
lcall
lcall
add
je
add
cmp
add
jno
loopne
bound
addb
sti
ds
add
xchg
or
mov
adc
jecxz
add
jno
add
rolb
loope
inc
push
mull
jno
xchg
and
inc
push
gs
rolb
arpl
aas
inc
mov
push
and
loope
push
push
add
xchg
and
pusha
add
nop
loope
or
add
add
add
addr16
daa
scas
add
mov
arpl
push
add
push
pop
in
xchg
cmp
and
mov
nop
scas
add
lea
add
add
mov
xor
stos
popl
filds
arpl
push
xor
insl
sub
addr16
inc
adc
add
sbb
xor
negb
jo
push
scas
mov
adc
push
into
adc
or
jnp
sbb
adcl
rcl
or
and
shlb
arpl
add
xchg
push
cmc
jo
scas
insw
inc
and
subb
in
xchg
inc
push
add
pusha
sub
inc
rolb
push
push
les
xchg
or
inc
nop
add
adc
fstl
sti
loope
insl
sub
and
adc
adc
adc
lcall
add
roll
test
rolb
fs
xor
lods
ret
jnp
push
mov
adc
lcall
pusha
lock
xor
cmp
add
adc
or
adc
out
jo
jb
jo
mov
add
stos
push
aad
add
sbb
sti
add
push
aad
cwtl
loop
insl
adcb
scas
add
add
out
mov
push
mov
mov
and
jp
inc
xlat
fwait
rcrb
iret
gs
push
mov
mov
shrb
sub
or
sbb
adc
gs
add
sti
inc
xor
sbb
pop
and
sbbb
test
out
das
mov
out
lcall
insl
push
add
movsb
fwait
out
addr16
outsl
pop
xchg
je
add
pop
out
sub
inc
cmc
xchg
mov
or
push
scas
fidivs
jmp
call
mov
cmpsb
lcall
mov
add
adc
into
inc
das
rolb
fstpt
pusha
ss
push
sub
add
push
xchg
xorb
nop
loopne
lret
lret
sub
loope
fst
cwtl
bound
inc
dec
rcrb
inc
push
pusha
add
ljmp
aad
pop
shll
or
loopne
mov
cmpsl
roll
mov
add
cs
ljmp
add
loop
fwait
nop
sub
add
in
addb
icebp
scas
adc
mov
adc
addr16
add
scas
mov
adc
sbb
push
sub
add
xor
mov
cwtl
icebp
inc
sbb
pop
inc
cli
fnstsw
outsl
or
cs
and
out
ljmp
loop
packuswb
inc
inc
push
test
gs
cmpsl
add
add
or
adc
jb
incb
ljmp
je
push
mov
cmpordps
insl
add
out
cmpb
add
add
ds
jmp
xor
mov
xor
shlb
gs
xor
or
jg
ret
push
ljmp
add
mov
test
add
jno
gs
pusha
sbb
imul
cld
gs
add
mov
xlat
fcompl
sub
aad
pushf
sbb
sub
or
nop
add
add
add
inc
or
aad
jo
addb
gs
lock
add
sbb
in
sbb
push
fwait
lds
push
roll
xor
shll
adc
push
add
icebp
add
mov
and
adc
adc
repnz
mov
add
mov
addr16
add
into
addr16
gs
mov
mov
adc
add
mov
sub
mov
gs
cli
push
lock
loopne
testb
lods
and
gs
lret
call
inc
cld
dec
xor
push
add
stos
or
adc
loopne
arpl
xlat
add
insl
pop
mov
push
lcall
mov
add
roll
out
lods
add
test
push
add
popf
cld
and
add
loop
pop
mov
add
mov
dec
lods
add
ds
add
push
xor
out
add
add
push
loope
imul
stos
insl
push
fstpl
test
fsubrl
add
sbbb
insl
mov
add
mov
add
out
arpl
stos
adc
push
add
cs
mov
incb
add
push
push
adc
push
scas
add
fiaddl
adc
adc
xor
lcall
movb
mov
ljmp
out
sti
jp
and
sub
add
mov
xor
insl
xchg
decb
and
fwait
cli
adc
add
mov
cli
add
mov
fldl
aad
xor
loop
pusha
add
xchg
adc
arpl
lret
xlat
ret
or
or
fwait
hlt
mov
ljmp
sub
or
nop
sub
push
subl
aad
cwtl
cli
gs
add
addb
add
or
add
ljmp
test
add
orl
orl
sub
repnz
adc
orl
xorl
inc
aad
lcall
and
sbb
adcb
aad
test
mov
add
test
xchg
test
call
sub
mov
lcall
add
add
add
mov
add
mov
aas
orl
mov
inc
ja
add
mov
stos
sti
scas
add
ss
push
stos
add
mov
xchg
adc
adc
imul
mov
lcall
push
lcall
add
or
insl
xchg
push
add
push
add
add
mov
daa
add
outsw
add
lcall
inc
fstl
xchg
add
add
adc
xor
xorb
add
mov
shll
loope
push
xor
insl
aad
lcall
mov
out
add
test
arpl
and
add
sbb
add
in
mov
stos
add
push
and
add
adc
add
jmp
or
arpl
adc
rorb
arpl
add
add
sub
andb
xchg
stos
lcall
mov
push
rcrb
outsb
sub
adc
adc
add
sahf
add
mov
push
add
ljmp
test
push
je
pop
lods
arpl
popa
ret
adcb
or
cmp
adc
dec
add
scas
add
jecxz
sub
fwait
lcall
or
fsubrl
add
arpl
cmp
sbb
test
addr16
push
sbb
push
test
stos
arpl
sbb
mov
into
addl
mov
push
sti
addb
stos
adc
stos
stos
inc
cmpsb
addr16
lcall
adc
dec
mov
arpl
adc
adc
or
in
add
add
test
arpl
icebp
mov
mov
push
in
inc
or
mov
bound
and
addb
mov
lcall
cmpb
sub
xchg
loopne
add
mov
adc
add
fwait
out
arpl
push
scas
pop
inc
and
orb
xor
inc
gs
push
push
xchg
jmp
mov
add
or
push
push
xor
adc
push
loopne
add
sub
cmp
imul
arpl
mov
arpl
add
fnstsw
mov
aad
loope
push
mov
sbb
data16
push
imul
loope
push
pusha
add
add
loope
inc
addl
test
push
imul
dec
loope
shl
add
data16
xor
aad
add
insl
adc
push
in
bound
filds
mov
sbb
pop
dec
sbb
add
inc
sub
and
or
out
loopne
lcall
xchg
push
mov
sub
push
and
loopne
inc
push
lds
lea
repnz
stos
out
add
stos
push
loope
insb
fadds
add
push
push
mov
adc
scas
push
and
sbb
mov
add
pusha
insl
sub
add
out
push
mov
add
adc
adc
pop
subl
jmp
and
add
stos
add
loopne
fdivrs
add
gs
push
test
ret
inc
gs
pusha
aaa
mov
or
add
add
mov
out
mov
add
lds
and
pop
out
add
daa
and
insl
or
outsl
add
fiaddl
movsl
arpl
push
imul
cmp
xor
lret
sbb
add
fldl
adc
lret
mov
mov
pusha
add
ficoms
sti
fdivrp
and
test
rolb
mov
mov
mov
mov
scas
add
mov
mov
inc
or
add
or
lret
push
outsb
mov
test
out
add
add
lcall
mov
add
repnz
xchg
or
insl
and
mov
in
push
add
xorb
xor
add
arpl
pop
loope
dec
movsb
arpl
popf
inc
add
pusha
xchg
or
gs
test
inc
and
out
push
and
cli
sbb
andl
orb
ljmp
call
add
add
adc
add
add
mov
adc
fwait
loop
sti
outsb
pusha
xor
movb
inc
dec
and
adc
movsl
addr16
and
dec
addr16
push
add
outsb
adc
mov
mov
sbb
xor
pop
add
sti
xorb
and
addr16
or
sti
addb
adc
adc
push
nop
add
add
fwait
iret
arpl
scas
lahf
out
add
or
or
or
and
add
pop
loopne
sbb
push
push
in
add
adc
rolb
adc
push
inc
icebp
lock
push
push
add
sub
add
fisubrl
lret
dec
mov
mov
add
cmp
sbb
bound
loopne
loope
add
add
out
daa
xlat
mov
pop
jo
insl
nop
cli
out
fwait
add
gs
xlat
cmpsb
ljmp
addr16
add
pop
aad
lcall
repnz
imul
sub
bound
sti
icebp
outsb
push
rsm
add
fisubl
cmpb
pusha
and
shrb
mov
stc
xchg
or
adc
adc
ret
nop
add
xchg
adc
std
cmpb
mov
lods
in
fcmovnbe
mov
and
rolb
xchg
out
add
daa
ret
push
add
gs
sbb
out
add
add
nop
or
and
cli
fnsave
shlb
and
and
mov
xor
adc
test
mov
mov
add
addb
lcall
add
add
addb
push
mov
add
lock
mov
cltd
roll
push
mov
and
pop
repnz
in
xor
and
xor
repnz
mov
jmp
add
mov
push
lcall
add
mov
divb
push
mov
push
sbb
xor
testb
adc
addl
push
xor
pop
fisubs
mulb
fiaddl
test
gs
and
add
test
gs
lcall
fwait
cld
xchg
into
add
push
testl
loope
xchg
add
loope
lcall
test
mov
adc
lock
lock
sub
jo
loopne
popa
sbb
sbb
and
cmp
add
or
fiadds
mov
lcall
sub
insl
mov
cli
add
adc
data16
add
add
mov
ss
inc
jecxz
adc
sbb
add
ljmp
sub
adc
outsl
roll
aas
inc
add
test
add
sub
ds
test
and
rcll
rolb
in
andb
cwtl
rorb
cmp
adc
arpl
imul
xor
out
add
adc
mov
sub
jo
xchg
and
insl
push
out
fwait
add
xlat
stos
adc
push
mov
adc
add
arpl
test
outsb
jno
dec
jo
and
add
outsl
pop
adc
adc
add
daa
add
addr16
xchg
test
jno
mull
gs
xchg
mov
in
push
add
xor
rorb
fadds
addr16
addr16
add
xchg
fwait
popa
or
sub
push
add
test
lock
inc
or
loope
int
add
addb
push
aaa
call
cmp
jne
add
push
or
insl
add
loopne
adc
and
inc
out
and
pop
mov
push
xorl
xor
mov
lock
shl
sub
cwtl
xchg
sbb
xor
loope
add
add
adc
out
add
xchg
lret
movsb
mov
xchg
ljmp
scas
shll
add
bound
addl
xchg
sub
xor
movb
loopne
adc
sti
dec
stos
add
lock
rclb
xor
cli
add
add
add
xchg
and
mov
jo
jle
fisttpl
mov
push
dec
mov
sub
stos
into
lock
mov
nop
test
add
add
test
mov
cli
int3
mov
mov
adc
into
lock
sbb
add
rolb
aam
xlat
pop
add
adc
sub
inc
mov
gs
and
fdivrp
gs
fdivrp
push
adc
enter
add
lcall
pushf
rolb
insl
mov
push
divb
nop
add
xchg
add
call
adc
addr16
lds
sub
add
rolb
add
xchg
gs
outsb
mov
mov
cs
add
mov
push
sub
jmp
add
rolb
lcall
jae
add
mov
loope
test
lods
jecxz
push
loope
or
loop
imul
add
fidivrs
stos
loopne
mov
push
aaa
cs
push
inc
and
icebp
js
lea
out
rcll
add
fwait
loop
mov
bound
sbb
sub
sbb
addr16
addr16
loop
stos
lcall
shlb
rclb
jmp
in
add
outsl
add
add
frstor
push
pop
adc
adc
add
push
inc
add
or
mov
or
jnp
jnp
dec
and
jo
add
push
add
xlat
lcall
add
lcall
test
lcall
add
pusha
jle
push
test
or
add
add
nop
cmp
xchg
icebp
mov
fwait
out
sti
outsb
sti
add
mov
cli
add
mov
push
insl
add
ret
out
out
add
push
lcall
arpl
loop
add
mov
clc
scas
add
insl
sub
sub
add
add
loop
push
jmp
add
xlat
and
add
lcall
adc
push
add
mov
lret
add
cli
add
mov
daa
push
sub
push
adc
add
loop
fwait
notb
fwait
push
cli
adc
pop
movsb
mov
lret
adc
andb
mov
add
push
adc
push
scas
add
adc
add
push
lcall
adc
adc
mov
sub
add
push
movb
movl
loop
int3
xlat
add
stos
cli
lcall
arpl
add
movsb
sbb
dec
jmp
xchg
sbbl
gs
loop
add
lret
gs
lcall
out
daa
lcall
mov
push
call
add
jp
sti
addb
mov
test
push
je
andb
adc
sbb
in
cmpb
test
push
xchg
and
xchg
sahf
xchg
push
test
mov
fwait
out
in
add
lock
in
jmp
add
lods
add
cli
out
fwait
add
cmpsb
insl
xchg
ljmp
lret
out
xchg
push
push
testb
inc
mov
rorb
mov
add
ret
add
add
out
fwait
stc
insl
add
push
aaa
les
mov
or
or
stos
lret
add
mov
pop
mov
sub
arpl
add
gs
imul
push
out
call
and
sub
mov
imul
loop
fadds
addl
enter
add
insl
das
ljmp
test
adc
incb
and
add
push
sahf
add
or
fsubrl
sub
out
sub
pop
add
lret
fwait
and
add
test
es
int3
push
rclb
push
imul
stc
add
ficompl
add
adc
imul
sbb
inc
add
inc
andb
inc
push
testb
dec
mov
mov
loop
add
lods
out
ljmp
fs
call
sbb
loop
xchg
jo
loop
add
mov
fiaddl
loope
push
sub
push
or
adc
orl
out
icebp
inc
sub
adc
xlat
xchg
lret
sti
add
lds
fs
fs
aam
fwait
loope
scas
aad
add
shlb
cmp
pop
das
lds
add
and
inc
imul
or
add
loopne
popf
cmc
aad
add
das
mov
adc
in
pop
out
add
andb
inc
outsl
add
call
mov
add
adc
push
mov
add
inc
cmp
pop
and
fldl
ja
adc
sbb
loope
rcrb
push
imul
mov
arpl
and
mov
adc
add
insl
xchg
adc
add
push
push
add
out
add
daa
arpl
ds
adc
scas
arpl
or
mov
sub
std
scas
add
mov
stos
in
out
add
stos
inc
in
sub
add
mov
rolb
mov
and
add
adc
add
mov
xchg
push
xor
in
adc
mov
push
jb
pop
and
rclb
jae
push
push
mov
loope
push
pusha
add
xor
push
test
mov
test
loopne
gs
insl
adc
and
addb
push
add
adc
add
push
mov
lods
add
adc
push
sarb
mov
add
push
out
xlat
xchg
adc
in
add
dec
rolb
mov
fwait
loop
or
addr16
jne
inc
sub
push
mov
sub
in
repz
sub
jbe,pn
movsl
and
cmp
sub
es
sub
and
xor
and
test
arpl
sti
out
out
add
loope
or
pop
push
sbb
push
add
mov
and
mov
and
stos
dec
and
cmp
cltd
shlb
add
sti
add
jmp
mov
add
mov
loop
in
pop
arpl
inc
add
or
or
sub
sub
or
or
mov
mov
add
gs
push
in
add
adc
cltd
inc
test
or
in
aad
lcall
gs
arpl
sarb
sti
push
shrb
cs
push
loope
daa
xlat
fwait
push
or
imul
aad
fwait
xchg
sub
mov
dec
andb
dec
and
ljmp
fisubs
sub
fwait
and
add
outsb
xchg
sbb
sbbb
sbb
and
sbb
fwait
mulb
andl
push
sub
adc
add
arpl
xorl
and
sbb
jae
sub
loope
add
add
gs
sahf
sub
mov
adc
push
cmp
adc
sbb
test
pusha
test
call
or
mov
mov
mov
xor
inc
or
or
gs
aad
add
into
lcall
stos
mov
add
stos
loope
pop
test
into
mov
mov
das
and
test
gs
push
add
sbbb
mov
push
add
add
push
add
jo
mov
subb
mov
inc
nop
addr16
mov
dec
mov
xor
xor
mov
fnstsw
insl
push
in
fwait
out
mov
adc
add
addr16
mov
inc
inc
sarb
xor
ljmp
outsl
add
shlb
add
inc
cltd
nop
test
push
add
adc
sbb
rclb
nop
sahf
sub
and
or
stos
xor
mov
mov
add
add
xor
push
std
push
sub
call
rolb
mov
cltd
sahf
loopne
stc
nop
pop
xchg
cli
pusha
xor
push
loop
sbb
out
add
fwait
jmp
inc
push
adc
add
add
repnz
add
add
adc
loope
cs
add
les
loope
pop
sub
mov
add
stos
into
loope
stos
into
add
insl
cs
addr16
push
xchg
loopne
addr16
insl
xchg
inc
mov
push
lcall
arpl
xor
test
lock
mov
subl
lods
lock
gs
test
arpl
adc
add
mov
pop
in
mov
insl
sub
mulb
mov
add
sub
loopne
test
add
nop
cmp
fadds
add
sub
cmc
xor
inc
sub
mov
lods
loop
xchg
xor
add
loop
sub
lcall
out
and
xor
arpl
xchg
adc
add
mov
mov
arpl
sbb
inc
sbb
cmp
push
add
mov
add
mov
add
popa
xor
ret
mov
jo
repnz
push
addb
fldl
add
mov
add
cs
gs
lret
push
and
out
add
stos
lret
aad
nop
mov
add
fnstsw
sbb
aad
add
scas
rolb
aad
cwtl
repnz
adc
fcoms
mov
adc
sub
mov
push
adc
push
adc
icebp
push
push
inc
mov
stos
loope
cs
sbb
dec
xchg
push
jg
add
nop
mov
adc
or
add
push
fnsave
push
inc
addr16
addr16
inc
inc
add
mov
addr16
popa
mov
jnp
or
cs
sar
push
in
loope
add
push
push
std
fucomi
add
out
cmpsl
ljmp
add
stos
pop
arpl
stos
inc
mov
add
mov
or
jge
jo
mov
nop
cs
in
out
add
inc
dec
and
stos
push
cli
lock
xor
push
movsl
xlat
out
add
mov
add
mov
loop
jo
arpl
add
out
arpl
stos
out
mov
add
or
add
sbb
sbbb
adc
push
mov
push
sbb
mov
add
cs
and
add
add
fwait
add
insb
add
mov
push
insl
xchg
or
sub
stos
adc
xchg
jmp
stos
sbb
add
stos
mov
push
push
add
pusha
loopne
add
add
add
addr16
xlat
fwait
es
pusha
int
add
pop
scas
ljmp
and
xchg
ds
xchg
add
addr16
push
addr16
and
add
fwait
xor
rol
add
adc
insl
add
cli
aad
add
stos
add
stos
push
loope
imul
sarl
adc
insl
add
mov
arpl
sbb
lock
add
push
xor
mov
mov
adc
out
inc
test
dec
sub
sahf
shlb
shrb
addr16
add
mov
loope
inc
xor
andb
and
push
faddl
add
and
insl
mov
faddl
gs
enter
rolb
leavew
loopne
inc
adc
sahf
xchg
adc
stos
popaw
pop
xchg
pop
test
push
js
stos
jb
push
xlat
mov
arpl
sub
nop
sbb
nop
adc
or
fadds
or
add
xor
push
out
xchg
loop
sbb
mov
lea
movsl
sahf
gs
mov
and
sahf
ret
mov
sarl
and
xor
imul
fists
aad
popf
mov
adc
arpl
andl
andl
push
mov
push
xchg
add
ret
adc
adc
and
mov
scas
and
out
xchg
mov
or
ljmp
dec
mov
in
jo
add
stos
and
xchg
loop
test
arpl
add
push
push
imul
and
nop
or
fmull
push
divl
cld
adc
fwait
push
gs
or
sbb
lock
mov
add
stos
ss
stos
push
add
aad
pop
sbb
bound
xchg
push
mov
sub
add
mov
inc
push
scas
add
add
sbb
cs
add
sub
loopne
in
jo
cli
outsb
xchg
adc
loope
push
mov
and
sub
fcoml
add
push
or
add
fwait
ss
shrb
dec
mov
adc
mov
jnp
adc
gs
ljmp
and
in
roll
add
fwait
mov
push
add
xor
push
fwait
leave
mov
scas
push
push
roll
testl
leave
out
sub
add
add
add
imul
loope
nop
add
sub
jae
out
add
add
xchg
lret
xlat
nop
ljmp
add
mov
xor
add
in
mov
mulb
xor
mov
xor
data16
lret
xchg
cwtl
or
data16
nop
push
adc
add
sbb
xchg
or
jle
in
add
pop
mov
stos
jae
add
cs
add
push
add
sbb
ljmp
add
add
lret
and
pop
add
out
add
mov
or
add
xor
push
add
stos
add
aad
ljmp
adc
ljmp
push
add
xor
lcall
ljmp
add
insl
push
fcoml
notl
add
scas
add
stos
lret
add
dec
add
test
mov
jle
adc
add
fwait
stc
mov
push
insl
add
mov
mov
fwait
add
xor
lods
sbb
adc
add
push
rolb
mov
push
add
or
outsb
add
xchg
adc
add
loope,pn
sti
and
adc
add
sub
mov
mov
or
adc
adc
dec
addl
add
insl
add
addr16
mov
mov
push
mov
add
out
arpl
stos
xor
les
add
push
inc
push
add
daa
sub
loop
add
cli
insl
mov
add
insl
xchg
loop
mov
out
stos
adc
fwait
icebp
add
add
add
gs
push
add
lcall
stos
push
pushf
add
add
addr16
loope
insb
out
add
gs
add
stos
sbb
add
add
ljmp
cmp
add
adc
loope
sub
add
adc
add
loope
pop
and
or
or
in
add
stos
push
gs
loop
lcall
add
insl
push
add
lcall
inc
insl
push
loope
inc
or
jle
cmp
test
fwait
nop
imul
add
mov
gs
push
add
movsl
add
add
movsl
inc
cli
add
subb
inc
sbb
add
fwait
loop
out
add
test
add
out
movsl
loop
clc
add
xor
cwtl
ret
add
sbb
mov
test
test
mov
loop
fstl
push
and
out
cs
jecxz
test
ljmp
gs
in
push
insl
xchg
sbb
sbb
insl
adc
insb
shll
xlat
stos
push
fwait
in
or
fsubrl
add
outsl
add
push
mov
test
jmp
sub
add
xchg
fwait
inc
test
push
push
adcb
out
add
and
pop
add
insl
xchg
push
out
stos
push
mov
insb
fadds
rolb
insl
pop
out
insb
enter
aad
push
loope
repz
insl
add
out
gs
insl
out
out
test
test
cmp
add
push
stos
add
int3
add
pop
je
add
adc
fwait
add
test
test
push
push
loop
add
inc
add
mov
push
inc
add
push
inc
add
addl
out
push
adc
adc
out
imul
add
addr16
sbb
inc
cmpb
movsl
dec
addb
subl
add
into
loope
int3
addb
or
testl
loope
decb
add
fs
out
loope
imul
add
adc
fwait
arpl
add
adc
andb
arpl
adc
test
mov
add
out
gs
inc
insl
push
loop
arpl
dec
xorb
sbb
orb
sbb
add
mov
insl
add
ljmp
add
mov
cs
add
mov
add
push
outsb
mov
cmp
or
sti
add
add
arpl
stos
ds
rorl
mov
ljmp
loopne
xor
out
add
xchg
add
fwait
rep
xchg
out
loope
push
inc
sbb
icebp
add
in
mov
imul
jo
rclb
dec
ss
or
sarb
pop
scas
call
mov
mov
ss
and
push
add
adc
loope
pop
addl
cs
sbb
insl
adc
pushf
lock
cltd
add
sbb
lds
xor
and
adc
add
pusha
add
lods
add
fwait
sbb
daa
mov
das
addr16
or
mov
stos
push
push
add
add
movsl
mov
add
fnsave
addr16
addr16
mov
push
fwait
jmp
mov
fwait
ljmp
fwait
pop
push
inc
icebp
loopne
add
add
shrb
and
shrl
gs
test
imul
call
rolb
mov
or
pop
xchg
add
sbbl
stos
inc
and
out
insl
clc
cmpb
add
test
jecxz
add
stos
pop
mov
push
xchg
aad
lcall
int
cmovl
add
mull
add
jbe
add
push
dec
inc
add
inc
pusha
push
adc
adc
add
aad
shl
sbb
inc
mov
mov
sub
ret
sahf
mov
enter
cmpsl
rcrb
sub
add
ss
add
mov
add
rclb
stos
andb
je
fwait
ds
jno
mov
push
frstor
imul
add
sub
add
xchg
out
add
pop
outsl
punpcklwd
jmp
subb
scas
loope
aaa
mov
adc
stos
cmp
push
leave
loopne
and
mov
add
cltd
loop
rolb
insl
mov
cs
std
loope
sbb
add
inc
imul
loopne
test
test
arpl
lret
movb
inc
cmp
stos
push
insl
push
adc
push
mov
add
roll
bound
mov
add
add
out
addb
fnsave
mov
add
add
orb
push
xlat
and
rorb
push
mov
pusha
xor
inc
loope
ljmp
dec
dec
addb
adc
add
test
outsb
pop
rcrl
xlat
adc
dec
arpl
outsl
subb
lcall
lcall
pop
adc
pusha
rolb
sti
add
push
arpl
add
xchg
push
sub
add
in
add
btr
add
xor
aad
or
lock
sub
in
enter
and
ficompl
add
add
pop
mov
add
out
adc
push
add
gs
add
or
inc
aad
fwait
mov
dec
add
jbe
xor
jge
add
mov
add
addr16
add
or
ss
jp
add
push
gs
or
push
addr16
xchg
add
fwait
out
push
and
inc
adc
mov
xchg
outsl
add
jmp
shlb
and
add
xchg
mov
push
push
dec
sarl
xor
push
adc
add
stos
push
cltd
faddl
sbb
gs
out
inc
adc
popf
add
fstl
mov
sub
inc
xchg
mov
push
push
push
fwait
add
push
add
bound
mov
fisubl
add
nop
inc
mov
or
mov
stos
add
xor
mov
loope
jecxz
add
sbb
sbb
icebp
push
adc
repnz
jmp
push
push
inc
pop
adc
pop
loop
loop,pn
inc
jae
add
cmp
or
mov
stos
fildl
add
test
push
lret
push
fldl
push
push
iret
sbbb
arpl
imul
add
mov
adc
push
in
adc
movl
ror
lcall
shrb
mov
ljmp
ljmp
pop
sub
in
pop
out
test
cwtl
loop
cwtl
out
mov
and
or
loop
loope
add
mulb
loopne
pusha
add
add
cmpsb
lcall
mov
sbb
outsb
adc
and
inc
daa
push
imul
push
push
push
or
xchg
push
inc
push
mov
sbb
stc
lods
loop
es
sbb
jno
ljmp
iret
pushf
ret
hlt
arpl
add
test
sub
push
adc
add
iret
rcrb
aad
ljmp
lods
or
frstor
nop
lcall
add
mov
out
push
push
addb
lods
fidivs
add
add
addb
cmc
arpl
loopne
mov
push
or
bound
popf
fisubs
or
popf
ret
push
mov
jo
sub
pop
jle
add
inc
mov
arpl
out
clc
scas
add
loop
imul
sbb
stos
dec
jo
lock
and
mov
sub
adc
sar
jo
push
add
push
insl
xchg
inc
add
mov
nop
add
mov
mov
xor
add
add
cmp
lods
fcmovbe
das
lcall
test
arpl
sbb
mov
movsb
jb
and
or
push
or
loop
cs
or
in
jo,pn
push
arpl
inc
cmp
adc
out
jmp
mov
fwait
push
push
hlt
add
adc
insl
mov
add
into
xor
add
out
fwait
call
add
nop
lcall
fwait
icebp
adc
sbb
adc
adc
in
xorb
cld
test
arpl
imul
test
jmp
lcall
stc
xor
and
push
add
fwait
lods
cwtl
stos
add
arpl
out
in
pop
add
fwait
jmp
in
in
out
outsb
pop
lds
add
push
add
add
imul
arpl
aam
out
mov
sub
xchg
push
add
add
add
push
and
add
mov
inc
add
jecxz
add
fabs
pop
sbb
pusha
add
loope
push
sti
and
mov
stos
add
lcall
into
popf
jmp
mov
cmpsb
aam
loopne
aad
pushf
or
add
adc
push
mov
mov
loope
inc
shll
mov
ret
adc
jno
popf
loop
pop
mov
loopne
and
pop
fwait
sahf
test
test
ja
arpl
add
gs
imul
mov
scas
add
loope
push
imul
cmpb
daa
fwait
jmp
mov
add
adcb
push
adc
fwait
push
mov
arpl
imul
mov
insl
push
mov
mov
add
jp
mov
or
mov
stos
and
mov
add
jb
push
push
cmc
jo
outsb
dec
xchg
in
push
sbb
push
or
out
add
add
sub
sbb
adc
in
xor
lcall
lods
insl
xchg
add
add
push
add
add
adc
and
shll
stos
push
pop
gs
add
insl
add
mov
gs
repnz
adc
adc
add
divb
fs
fsubp
insb
loop
add
xlat
add
imul
xor
jmp
fwait
call
mov
sbb
sub
add
add
fwait
ljmp
add
xor
out
mov
adc
push
data16
push
adc
sbb
stos
loope
repnz
add
gs
add
mov
push
arpl
jno
push
and
sub
ss
xchg
pusha
popa
pop
and
gs
gs
add
adc
or
add
lds
and
call
lds
add
fwait
push
gs
testb
out
push
mov
sub
in
fwait
push
insl
adc
insl
arpl
ljmp
xor
jno
add
fstl
push
and
mov
cmp
nop
add
add
push
addr16
add
adc
adcb
aad
loope
cmp
movsb
pop
out
loop
testb
int
icebp
add
sbb
in
mov
test
gs
adc
subb
sbb
icebp
ficoms
add
aad
sbb
xchg
decb
incl
fwait
sbb
sub
mov
pusha
rolb
call
adc
aad
mov
push
addr16
sbb
cs
or
push
add
push
add
lcall
loope
out
add
add
out
stos
sbb
mov
adc
loop
adc
adc
adc
loope
inc
jmp
add
add
out
imul
add
xchg
dec
add
mov
add
pop
fwait
add
imul
addw
stos
loop
insl
and
or
arpl
sub
cli
lds
in
fwait
sbb
push
push
add
sub
test
add
push
add
adc
add
mov
adc
adc
push
add
pcmpgtw
add
aas
mov
aas
add
in
es
mov
push
popf
add
popf
incb
roll
and
addr16
cmp
stos
adc
add
fwait
leave
gs
mov
mov
adc
cmpb
lcall
test
add
sbb
push
gs
add
arpl
jno
gs
inc
or
in
aad
call
in
addr16
or
push
add
fs
adc
sub
add
add
mov
add
stos
or
and
sbbb
nop
imul
xchg
push
fldl
xor
mov
mov
and
or
adc
mov
or
or
cli
iret
mov
add
mov
gs
add
push
call
orl
mov
add
pop
sbbb
and
cli
loope
jp
push
outsb
verw
loope
daa
sbb
cmc
daa
add
push
insl
das
into
loope
add
addr16
push
loopne
add
lods
in
add
mov
test
mov
mov
add
mov
adc
push
xchg
adc
add
push
add
add
ljmp
outsl
mov
inc
dec
cmp
push
pop
push
adc
addb
add
adc
adc
cwtl
arpl
add
dec
add
rorb
xchg
sbb
movl
insl
xchg
adc
or
insl
aam
or
add
test
xchg
push
push
cmp
imul
fwait
inc
add
xor
andb
out
add
or
push
lods
rolb
jmp
data16
sahf
adc
cld
scas
add
rolb
adc
gs
gs
add
add
push
loop
pushf
mov
sub
sbb
das
orb
lcall
sbb
out
lcall
push
in
es
data16
cltd
xorb
cmp
adc
gs
add
in
inc
pop
mov
clc
test
loop
jmp
or
add
jmp
insl
push
adc
pop
bound
pop
adc
stos
or
or
push
and
aad
jge
in
int
cs
stos
push
mov
cs
add
add
push
adc
cwtl
out
insl
rcrb
dec
push
xchg
adc
add
push
popf
ret
push
test
ret
push
ret
push
mov
rolb
cwtl
scas
imul
jecxz
adc
push
mov
test
sub
rorl
fcmovnb
add
push
ret
rolb
sub
hlt
clc
mov
sbb
in
lcall
push
and
mov
mov
out
add
push
or
push
gs
out
add
in
add
add
ljmp
insb
imul
sbb
dec
fnsave
lret
out
data16
add
push
sub
out
add
and
push
stos
lret
add
lret
mov
sti
fiaddl
sti
scas
add
add
pop
xor
adc
mov
adc
loope
js
pop
mov
mov
mov
pusha
add
adc
scas
pusha
add
sub
add
adc
add
imul
push
xchg
loopne
adc
add
daa
outsb
add
loope
das
add
outsb
add
daa
add
ljmp
out
sahf
and
or
adc
and
cli
and
loop
and
test
arpl
push
or
pop
fstpt
pusha
ds
test
gs
adc
push
adc
test
and
and
add
gs
fldl
adc
cmpsb
mov
mov
add
cs
hlt
les
sbb
add
pop
mov
add
adc
and
out
inc
add
stos
push
addl
or
nop
out
shll
mulb
adc
rcll
push
outsl
popa
or
push
sbb
inc
add
gs
sub
sub
xor
fdivrl
repnz
add
mov
ljmp
adc
add
xchg
lret
imul
pop
cmpsb
mov
aam
sti
and
mulb
add
mov
std
in
loope
lds
pop
push
push
xor
popa
aas
add
add
mov
or
addb
test
cmp
add
shlb
mov
add
push
inc
jg
lret
mov
test
test
inc
adc
mov
fidivrs
mov
push
dec
and
pusha
add
insl
add
adc
sub
add
arpl
push
xlat
add
lcall
add
roll
adc
push
push
dec
add
and
add
cmp
xchg
lret
xchg
add
and
addb
and
fidivrs
add
fwait
imul
mov
addr16
adc
adc
mov
test
aad
lcall
loope
scas
add
add
add
sub
mov
addr16
orb
add
imul
add
cmpsb
out
cmpsb
loop
add
out
and
pushf
repz
sbb
aad
mov
cld
ljmp
cmp
sbb
lcall
sub
dec
lods
add
out
adc
add
fnstsw
add
addr16
add
lret
cli
out
sti
mov
loope
cs
inc
add
add
insl
mov
add
scas
sub
loope
fsubrl
push
pavgb
adc
mov
xor
sarb
adc
test
pop
sbbb
mov
push
test
andb
and
lds
jmp
in
lods
add
jmp
and
add
mov
out
sub
dec
add
mov
and
adc
addb
mov
loopne
mov
stos
xor
inc
adc
jo
out
add
roll
mov
fstl
addb
xor
addr16
push
mov
jo
adc
stos
jo
add
push
loope
ficoml
aaa
arpl
add
nop
pop
sub
add
aas
addb
adc
loopne,pn
aad
loope
adc
mov
lods
pusha
xchg
cmp
xchg
push
cwtl
add
gs
loope
push
and
scas
aad
push
pushf
adc
mov
stos
push
and
sub
push
pusha
add
pop
xor
add
xchg
rclb
adc
aad
sbb
push
mov
arpl
stc
or
adc
lock
aad
add
adc
sti
stos
scas
add
add
push
out
lods
add
mov
add
add
adc
imul
scas
inc
mov
nop
add
sbb
mov
add
and
push
imul
mov
push
adc
add
jg
or
cmpsb
and
ljmp
inc
add
loopne
push
adc
sti
shlb
adc
mov
popa
aaa
add
xchg
add
les
rolb
sbb
lcall
and
mov
xchg
pusha
push
mov
cmc
xor
jo
dec
fwait
inc
out
sbbb
test
mov
in
add
adc
push
add
add
cwtl
and
daa
adc
adc
and
insb
mov
rorl
lcall
add
adc
stos
loop
push
repnz
std
outsb
rol
add
add
mov
fadds
fcoms
push
add
lcall
add
outsb
pop
xchg
lcall
out
and
rcrb
add
addl
out
add
daa
mov
and
xchg
loope
inc
les
add
add
cmp
sub
es
or
outsl
add
push
pop
mov
in
add
pop
cmpsb
mov
adcb
addr16
mov
stos
movsb
push
add
test
in
mov
addr16
pop
cmpsb
add
mov
push
push
out
in
mov
divb
hlt
add
push
repnz
add
out
push
xor
stos
lret
sub
test
shrb
push
inc
mov
cmpsb
divb
movsb
mov
add
add
shrl
mov
add
xchg
add
add
cs
mov
in
test
pusha
mov
call
inc
or
pop
lcall
add
gs
cli
push
pop
pusha
push
out
add
and
adc
stc
mov
mov
mov
pop
add
jmp
out
push
inc
lret
add
add
fwait
call
rcl
repz
xchg
mov
pop
popa
and
out
adc
push
andb
push
pusha
add
xchg
sahf
mov
fld
push
sub
adc
jle
xor
push
adc
jl
jb
arpl
add
mov
and
sbb
add
sti
sub
scas
and
lret
xor
loope
imul
mov
sub
add
push
push
xchg
adc
jge
mov
xor
fwait
xchg
addb
add
mov
and
add
out
mov
lcall
fstl
pusha
push
mov
push
daa
lock
nop
popa
xchg
pop
testb
add
sub
mov
repz
nop
or
xor
adc
nop
lret
fcomi
inc
adc
push
add
notb
cmp
mov
out
cmpb
add
adc
cli
scas
add
adc
fwait
mov
adc
mov
or
add
fidivs
bnd
and
or
add
stos
pop
jae
cmpsb
jecxz
jb
movsb
mov
addr16
mov
mov
add
push
subb
lret
xchg
and
sbb
pushf
addb
push
js
cmp
lock
cmp
sub
mov
mov
or
into
data16
lret
xlat
lods
adc
sbb
testb
add
mov
movsb
push
add
or
push
addr16
lret
insl
rolb
in
mov
pushf
jo
popa
adc
call
adc
or
rolb
mov
pusha
out
add
xor
dec
push
jae
push
mov
mov
insl
adc
mov
loope
loopne
shlb
adc
lret
out
loope
sbb
ss
cs
and
push
lds
sbbb
lret
roll
jecxz
add
adc
mov
out
ret
pop
and
and
loopne
loope
idivb
add
sub
stos
lret
imul
add
jl
xchg
add
jmp
nop
add
mov
push
pop
repnz
insl
jo
jmp
cli
loope
and
xor
adc
in
fsubrl
adc
xchg
add
pop
stos
lret
cmpsb
lcall
loopne
loopne
test
ljmp
inc
and
test
rcll
xchg
pusha
mov
xor
add
icebp
test
mov
xchg
push
xchg
in
add
inc
inc
addr16
push
cmp
jno,pn
out
mov
lcall
adc
add
xor
push
or
add
imul
push
or
mov
enter
inc
sbb
adc
dec
adc
xchg
rcrl
lcall
fwait
and
or
mov
add
call
mov
incb
mov
sub
push
movsb
nop
mulb
mov
add
mov
add
loopne
inc
xor
add
loopne
arpl
xchg
bound
fwait
adc
push
sarl
stos
insl
push
adc
loope
pop
add
sub
movb
sub
cmc
jne
add
sti
add
aas
mov
rcrl
add
add
adc
dec
add
lock
mov
add
out
add
out
add
adc
add
imul
mov
add
ljmp
add
ljmp
test
addr16
arpl
stos
add
insl
sub
mov
mov
mov
adc
add
add
xchg
inc
scas
add
add
inc
xor
add
imul
ljmp
push
data16
adc
test
push
rcl
out
add
cs
mov
daa
sub
add
or
insl
add
test
xchg
sti
rolb
lcall
stos
add
repnz
call
out
add
test
adc
inc
push
add
add
push
add
loope,pn
adc
add
arpl
and
add
loop
push
adc
push
add
stc
insl
mov
into
add
movb
out
add
lret
insl
sub
insl
xchg
lret
sbbb
jbe
sub
insl
push
into
fwait
andl
add
fs
outsb
adc
cltd
ljmp
mov
jmp
ljmp
mov
ljmp
out
scas
fdivl
push
ljmp
add
push
xor
lret
dec
add
adc
adc
cltd
ljmp
or
adc
addb
daa
add
adc
gs
lret
add
aas
add
mov
adc
imul
imul
xchg
adc
adc
mov
imul
lcall
xlat
gs
sbb
out
add
sbbb
add
sti
add
add
add
add
xor
aam
fwait
adc
mov
xchg
fwait
addb
adc
es
sbb
cmp
loope
xchg
add
repnz
dec
or
stos
andb
loop
mov
push
inc
outsl
gs
push
dec
sbb
add
insl
mov
add
adc
mov
gs
out
xor
push
add
jl
out
add
fs
mov
add
jp
out
gs
adc
loop
add
lcall
stos
rclb
addb
mov
add
in
gs
in
inc
add
lcall
sub
xlat
fwait
loop
adc
test
aam
pop
test
mov
arpl
sub
fwait
adc
es
lcall
adc
sbb
pop
stos
loope
addl
mov
pop
sahf
adc
cmp
fdivl
add
loope
push
inc
mov
cmp
add
adc
add
fwait
std
fs
xchg
lcall
add
mov
mov
outsb
adc
mov
push
cmp
pminsw
mov
and
insl
pop
fiadds
push
outsb
adc
fld
mov
or
test
pop
mov
sbb
in
insl
and
mov
add
mov
sub
add
add
lcall
lcall
ret
fwait
jmp
in
mov
add
fwait
out
lods
add
outsb
pop
xlat
and
adcb
mov
fsubp
pop
add
lods
fs
pop
ficoms
in
insl
es
loope
add
inc
in
lcall
add
mov
and
add
or
mov
insl
adc
pushf
add
insl
adc
add
mov
ljmp
sub
pusha
and
and
addb
lcall
in
add
arpl
fbstp
add
push
loope
cli
imul
enter
cmp
out
add
adc
add
xchg
xor
cs
mov
mov
jns
mov
inc
stos
loop
jnp
cmpsb
orl
adc
loope,pn
es
shlb
push
fsubrl
adc
shlb
xor
push
loope
add
and
add
or
add
pop
adc
adc
sahf
cli
scas
mov
pop
cs
push
out
add
gs
sbb
sbb
add
add
pop
loop
add
or
pop
ljmp
das
mov
es
add
add
daa
adc
test
arpl
arpl
rcrb
movsl
add
inc
mov
mov
add
and
sbb
cmc
sbb
ss
add
adc
adc
pop
add
mov
sbb
scas
mov
mov
add
mov
das
mov
and
gs
add
daa
lcall
add
fcompl
add
sbb
das
pushf
pop
insl
adc
sub
mov
mov
push
lret
ret
add
cmp
add
cmp
add
gs
xchg
and
fildll
push
add
add
adc
nop
lcall
jmp
add
inc
add
enter
push
in
and
add
test
testb
nop
ljmp
mov
inc
add
mov
mov
gs
movsl
xor
mov
add
repz
in
in
fwait
and
scas
insl
sub
rclb
add
fsubrp
sub
add
fisubs
or
push
flds
incb
gs
test
fsubrp
shlb
scas
out
lods
lcall
test
add
pop
mov
cs
gs
ljmp
xlat
xchg
ljmp
jecxz
or
addb
sub
add
in
fwait
add
gs
add
fnstsw
add
add
addb
inc
add
pop
cwtl
out
rolb
adc
cwtl
cli
push
enter
push
lock
add
push
clc
loopne
test
mov
adc
sub
in
cmpsb
sub
xchg
subb
mov
adc
test
and
push
or
add
outsb
inc
xor
fnsave
cwtl
std
and
addb
insl
sub
aad
mov
pushf
rolb
push
pop
and
dec
and
push
adcb
mov
jecxz
arpl
xchg
add
insl
xlat
and
fwait
out
pop
and
mov
push
lcall
mov
iret
inc
adc
dec
cmp
and
adc
rol
or
mov
push
add
inc
out
add
pop
lcall
and
imul
mov
loopne
fdivrp
mov
mov
addl
sub
jae
add
mov
add
test
arpl
adc
xor
pop
xor
add
incb
add
push
add
sub
ret
jb
adc
adc
mov
push
pusha
add
mov
inc
mov
fwait
push
mov
dec
mov
adc
mov
adc
test
add
xor
outsl
sub
add
out
loope
pop
inc
add
movsb
add
pop
mov
or
xor
gs
insl
pusha
movsb
push
pop
add
loopne
cmpb
push
inc
add
loopne
mov
mov
imul
popa
add
shll
insl
cs
mov
ficomps
out
fwait
lret
mov
jecxz
les
mov
rcll
hlt
arpl
mov
add
add
xor
or
xor
adc
stos
adc
adc
insb
and
loopne
mov
mov
mov
add
test
arpl
mov
movsb
inc
and
jp
arpl
mov
push
push
jo
xchg
mov
add
add
sti
pop
push
or
push
mov
xorl
arpl
mov
and
adc
sub
add
push
mov
adc
jo
adc
cmp
pminub
xchg
push
fwait
add
insl
xchg
sbb
lcall
mov
sub
add
addl
add
dec
adc
scas
xchg
addb
mov
push
or
push
jmp
add
mov
out
add
daa
and
insl
add
ljmp
push
or
push
shrw
and
mov
or
insl
rolb
lcall
addb
ljmp
push
xchg
and
movsl
mov
cmp
mov
push
add
sub
add
cltd
and
push
lcall
jbe
push
and
pusha
and
orb
insl
rolb
add
mov
rclb
add
loopne
add
push
aaa
add
loope
orl
and
or
xor
gs
xchg
addr16
rcll
jle
or
gs
out
and
dec
dec
jb
decb
jb
cli
add
xor
testb
arpl
inc
rcll
add
pusha
sbb
inc
and
cmp
add
adc
adc
pop
movsl
add
jbe
mov
aad
add
or
add
and
add
std
xlat
repz
lcall
add
aad
fwait
cwtl
call
mov
cli
add
jo
stos
mov
add
push
push
add
mov
arpl
cmp
gs
loop
arpl
mov
xchg
rcrl
xor
test
mov
arpl
adc
cwtl
loope
sub
arpl
out
mov
add
stos
cmp
add
add
or
add
mov
add
mov
add
add
add
dec
adc
insb
adc
adc
cs
xor
xor
xchg
add
xor
mov
xor
or
icebp
lcall
test
add
enter
dec
sti
lock
sub
test
pop
pushf
add
lods
insl
adc
push
inc
add
roll
push
in
loope
loope
add
adc
push
adc
xchg
sbb
cmp
test
add
inc
in
add
imul
add
or
and
shlb
stos
add
add
add
dec
imul
add
and
in
add
add
cli
test
sub
sub
imul
fiaddl
inc
and
sbb
aaa
lret
test
fsubl
inc
mov
outsb
daa
add
and
sub
test
in
out
add
ret
gs
push
mov
in
sub
out
jo
push
jmp
mov
and
adc
out
stos
sbb
mov
push
cltd
nop
pop
push
out
cmp
mov
rolb
add
lods
loop
mov
shll
lcall
ljmp
sbb
mov
movsl
out
or
popf
test
pusha
add
sub
out
arpl
xor
adc
mov
fwait
adc
jno
pop
lahf
jb
sti
gs
xchg
push
adc
loopne
adc
push
adc
lods
addr16
cli
gs
and
fs
mov
add
ljmp
addb
mov
add
loope
test
add
add
test
arpl
and
push
adc
push
repnz
pop
arpl
add
add
andb
movb
add
rolb
jno
cwtl
int3
arpl
lods
ret
push
orb
lock
and
stos
push
mov
add
push
xchg
mov
add
subb
pop
jns
push
adc
pop
loop
xor
mov
stos
in
sub
push
and
fwait
jmp
inc
inc
sbb
mov
dec
inc
dec
mov
adcb
and
push
add
test
in
xor
adc
loopne
adc
mov
gs
mov
push
xor
add
mov
push
aas
adc
add
in
mov
lds
push
mov
sarb
loopne
test
xor
adc
push
shr
mov
add
cs
or
gs
cli
addr16
gs
stos
adc
stos
or
mov
xchg
insl
mov
push
fsubrs
adc
mov
repz
bound
imul
add
mov
adc
add
adc
inc
adc
add
add
add
push
cs
mov
cld
scas
add
adc
add
bound
xor
sub
adc
loop
and
dec
gs
imul
fildl
jmp
nop
lcall
mov
mov
add
adc
insl
push
adc
sbb
adc
adc
mov
sub
add
lcall
cmpsb
sahf
loope
inc
add
in
cmpsb
xchg
mov
add
jne
adc
out
xchg
xchg
add
xchg
aad
lcall
add
add
sti
add
outsb
xchg
xchg
add
mov
push
adc
testl
cld
arpl
sahf
adc
push
repz
cmp
push
in
adc
or
add
out
gs
imul
lcall
incb
outsb
adc
lcall
jmp
out
add
add
push
outsl
add
jp
add
add
add
stos
lret
adc
jbe
mov
addl
lret
add
fisubs
lret
push
xchg
sub
add
lret
add
arpl
add
cli
adc
addr16
add
addr16
out
add
lret
sbbb
into
gs
out
cmpsb
loop
inc
scas
addr16
add
ficoml
loope
mov
mov
adc
push
loope
adc
orb
lret
shlb
cs
sub
push
add
sub
and
fcoml
adc
test
in
cmp
adc
add
clc
scas
add
loop
ror
add
cmp
add
push
mov
out
add
aas
aam
or
mov
in
in
hlt
lcall
ret
sbb
or
sti
pop
sbb
adc
adc
adcb
cmp
orb
rcll
ret
pop
test
outsb
add
push
cmp
inc
and
add
nop
gs
lret
and
gs
lret
push
push
cmc
das
adc
inc
add
adc
gs
inc
pop
ret
and
ljmp
mov
call
inc
shrl
add
in
ljmp
mov
out
aad
xchg
inc
out
cltd
movb
addl
addr16
adc
add
cli
mov
sbb
add
mov
mov
or
add
mov
nop
loop
mov
sub
gs
out
mov
add
stos
adc
movb
push
ss
sarb
jl
mov
push
adc
adc
inc
add
shrb
add
pop
xchg
cmp
add
add
cs
xchg
addb
stos
cmp
gs
and
mov
stos
adcb
xchg
or
or
xchg
push
mov
fadds
arpl
or
mov
fwait
jb
adc
push
inc
dec
jge
dec
mov
arpl
sbb
add
ljmp
add
rcll
add
frstor
add
cmpsb
xchg
gs
and
scas
loop
pop
es
sbb
shl
inc
xchg
incb
add
push
xor
inc
imul
arpl
mov
loopne
arpl
cwtl
add
and
out
loope
loop
add
add
add
mov
xor
and
mov
mov
adc
fwait
loop
gs
test
mov
push
cmp
mov
jg
loope
and
inc
mov
ljmp
in
insl
push
call
add
arpl
loop
mov
out
stos
push
loop
adc
add
and
out
mov
add
mov
rcrb
sub
pop
out
pusha
cmp
sarl
add
insl
cs
push
add
or
ss
sbb
or
cmp
andb
mov
xor
imul
push
push
insl
xchg
cli
and
fwait
scas
test
and
inc
das
addb
loope
test
mov
inc
pop
testb
and
loope
sbb
subb
incl
stos
adc
and
fwait
int
add
add
mov
repnz
mull
pusha
adc
add
fadds
adc
add
adc
ljmp
out
scas
repnz
mov
add
cmpsb
ret
das
fldl
push
add
loopne
mov
mulb
gs
gs
or
outsb
mov
fwait
cmc
mov
and
or
adc
jmp
push
addl
mov
sbb
mov
add
imulb
ljmp
mov
or
into
push
jo
or
mov
or
mov
mov
push
and
add
mov
jmp
adc
popf
add
gs
adc
cli
mov
scas
loop
add
cli
fs
mov
test
dec
sub
add
popa
xchg
inc
fwait
addb
inc
loope
test
add
adc
loope
and
gs
out
mov
mov
or
adc
push
and
out
adc
stos
push
loop
les
rolb
cs
push
in
jmp
loope
int
xchg
lcall
inc
movsb
push
sub
rorl
loopne
and
loope
push
fldl
mov
sbb
add
lods
mov
sub
and
add
lcall
in
adc
cmovne
add
adc
add
push
loopne
imul
and
mov
mov
xchg
and
repnz
sbbl
popa
add
fwait
stc
arpl
and
push
add
add
add
ret
push
xor
test
and
adc
fwait
add
sub
dec
xor
inc
adc
push
add
add
push
insl
and
adc
push
add
add
and
lcall
and
and
pop
inc
es
pusha
sbb
push
mov
and
stos
add
inc
push
push
adc
add
add
adc
xlat
xchg
sbb
add
insl
cs
push
sub
out
add
aad
lcall
mov
lcall
arpl
clts
test
nop
mov
gs
aad
cwtl
cli
add
arpl
idivb
inc
push
rolb
mov
je
or
out
adcl
adc
nop
sbb
sub
add
jno
xchg
ret
movb
mulb
repz
push
fstl
push
ret
cmp
push
ret
mov
or
test
rcll
gs
movb
add
sahf
inc
add
mov
lcall
push
add
addb
aad
loope
adc
scas
xchg
xor
addr16
movb
stos
sbb
jb
insl
pusha
push
loope
rcrb
push
add
adc
or
adc
push
mov
test
pusha
cmp
mov
pop
xor
add
mov
mov
adc
and
mov
sarb
sti
pop
add
dec
adc
add
rcl
or
scas
or
add
pop
and
or
add
popa
call
jle
pop
mov
negl
mov
jo
rcll
cmpsb
xchg
mov
xchg
mov
shll
mov
pop
xor
mov
add
adc
mov
sbbb
in
adc
fdivrp
cmp
aad
fwait
stc
gs
arpl
jo
inc
push
nop
mov
xchg
jbe
and
mov
cmpsb
push
mov
xor
push
xchg
mov
mov
gs
push
outsb
add
lcall
ss
jmp
test
add
enter
dec
syscall
test
movsb
and
gs
xchg
xor
lods
sbb
div
xor
or
and
cwtl
add
or
add
mov
and
jecxz
rorl
out
add
add
shlb
mov
mov
loope
fstl
inc
push
aaa
btr
icebp
inc
xchg
cmp
mov
loope
repz
pusha
aad
loope
sti
xor
mov
lea
lock
push
ljmp
sysret
add
mov
lcall
in
sarb
xlat
mov
cwtl
loope
inc
add
or
pop
pop
cmp
cwtl
dec
cli
sub
add
sub
addl
shll
lret
inc
add
add
lret
push
add
incb
stc
xchg
loopne
inc
xchg
stos
scas
pop
popf
addb
adc
mov
xor
loope
test
add
push
dec
and
push
jo
inc
out
lcall
fwait
add
daa
pop
mov
loopnew
xor
cli
and
loope
mov
cmp
push
mov
and
and
scas
lcall
mov
add
add
push
add
xor
xor
lret
stos
inc
lret
or
outsb
adcb
loop
add
test
pusha
push
adc
sbb
and
add
push
movsl
pop
add
and
lock
fisubrs
loope
adc
and
mov
push
jo
loopne
mov
repnz
add
sub
out
in
and
addb
pop
mov
pop
popa
adc
lahf
jo
add
xchg
addb
add
ja
or
sub
add
scas
inc
add
add
lods
out
add
sahf
lods
loop
add
lods
arpl
mov
xchg
push
nop
lahf
icebp
shlb
mov
sbbl
repnz
ss
out
add
add
mov
cmpsb
inc
inc
add
scas
mov
add
add
flds
int
add
and
orb
add
sbb
add
ljmp
xor
mov
addr16
lret
add
add
adcb
rolb
mov
adc
mov
add
push
loop
pop
xor
xchg
lret
std
aad
push
add
and
mov
add
mov
adc
adc
xchg
and
and
inc
cmp
cli
sub
mov
addr16
addr16
cwtl
mov
movsb
loopne
xor
int3
in
sub
xor
pop
lods
mov
inc
pop
jo
adc
mov
rorl
mov
test
xchg
mov
adc
subb
xchg
loop
mov
xorl
or
add
out
lcall
jg
inc
ds
shrb
loop
fsubs
es
bound
rol
jmp
sbbb
loop
push
adc
aaa
inc
aas
xchg
push
pusha
push
inc
push
push
xchg
or
push
adc
add
stos
fs
push
lcall
ret
fwait
jmp
in
mov
add
outsb
pop
lds
fstpl
add
xchg
add
test
in
push
daa
arpl
lcall
pop
or
xchg
pop
adc
in
insl
es
add
lcall
mov
insl
leave
add
sbb
out
mov
call
call
pop
mov
ljmp
call
mov
and
add
mov
mov
xor
decb
adc
gs
xor
call
mull
int3
call
incb
mov
mov
ljmp
sbb
sub
pop
and
add
lcall
add
in
jmp
cs
add
loope
sub
out
call
and
fs
mov
inc
add
add
insl
xchg
loop
loope
add
adc
stos
cli
in
arpl
imul
adc
outsb
add
xor
sti
scas
add
xchg
lcall
adc
es
push
add
add
push
add
ljmp
arpl
stos
loope
push
inc
pop
adc
test
arpl
add
ja
adc
sbbb
mov
xor
ljmp
push
mov
add
sti
test
add
lcall
adc
add
xor
orb
inc
add
push
call
stos
stos
jecxz
inc
inc
stos
loop
arpl
sub
stos
loopne
push
repz
gs
adc
ljmp
push
sahf
das
out
add
add
push
nop
das
gs
daa
sub
incb
orb
add
mov
adcl
das
fldl
xor
stos
adc
addr16
cwtl
add
lods
in
add
mov
adc
add
pop
stos
and
mov
add
adc
test
add
orl
sbb
cmc
cs
add
out
adc
push
jmp
add
add
sub
pop
cs
or
mov
pop
add
out
add
mov
xchg
or
pop
out
pop
cmp
push
arpl
cs
and
data16
push
or
add
or
sub
loope
imul
sbb
sub
sub
add
add
add
addl
add
loope
cld
add
or
cmpsb
loope
inc
lea
mov
inc
push
xchg
test
cmpsl
inc
push
test
add
lods
add
adc
stos
ss
loope
push
sbbb
stc
mov
addr16
orb
or
cs
push
adc
add
sbb
adc
rclb
mov
inc
or
add
adc
or
inc
push
inc
push
data16
add
arpl
mov
and
sti
push
inc
cmpsb
out
and
inc
or
cmp
gs
es
lcall
mov
inc
ljmp
pop
sbb
in
pushf
xor
or
fwait
add
sbb
mov
adc
testb
pop
adc
adc
fwait
call
xor
mov
stc
fwait
cmp
inc
mulb
ljmp
arpl
push
sbbl
int3
aas
inc
push
sti
test
inc
inc
ljmp
sarb
add
sbb
cs
fwait
call
xor
push
shl
mov
daa
shl
stos
adc
sbb
imul
mov
gs
add
gs
mov
in
add
push
jmp
sub
addb
addl
pop
or
pusha
add
je
stos
pop
addr16
arpl
inc
xor
add
arpl
cli
inc
push
and
add
imul
and
add
push
stc
mov
add
pop
fwait
loop
jae
loopne
dec
addr16
mov
add
adcb
push
mov
push
xchg
add
add
inc
gs
aad
fwait
adcl
and
fwait
push
subb
adc
pusha
cmp
push
out
loope
fldl
add
rorb
add
insl
arpl
adc
mov
mov
addr16
or
imul
add
push
addr16
and
and
addr16
add
xor
in
add
xorb
mov
push
and
idivb
mov
sti
push
and
pusha
and
add
stos
push
andl
push
loope
dec
add
arpl
out
push
adc
xor
pop
add
addr16
cmp
sbb
orb
adc
loope
and
imul
shll
imul
in
fwait
loopne
imul
sub
add
and
cmc
mov
stc
xchg
fwait
cmc
popa
fisubl
es
pusha
add
adc
leave
addb
outsb
xchg
in
add
imul
pop
and
icebp
loope
cli
add
xlat
mov
or
arpl
or
adc
loope
cwtl
inc
adc
sub
xor
inc
mov
jbe
add
push
addb
push
mov
clc
scas
add
loope
test
lods
loopne
sbb
pop
add
add
inc
imul
clc
loope
inc
add
test
pusha
cmp
pusha
adc
add
mov
push
push
in
pusha
push
adc
fs
popf
addb
pop
arpl
loope
mov
mov
mov
aas
inc
adc
sub
mov
arpl
mov
imul
add
ret
jb
imul
pop
faddl
cmp
sbb
and
sub
jb
fwait
gs
loopne
add
cmpsb
mov
mov
mov
in
loopne
pop
add
adc
add
insl
adc
loope
push
leave
rclb
in
push
sbb
and
mov
or
ljmp
xchg
add
inc
pop
mov
add
lds
addr16
adc
pop
popa
add
xor
pusha
js
stos
add
bound
insl
xchg
xor
loope
jnp
cmpsb
insl
push
loop
cs
stos
xlat
mov
nop
or
loope
and
stos
xor
gs
cmp
arpl
icebp
inc
in
add
mov
add
push
inc
adc
jecxz
push
or
pop
cmc
gs
ds
push
push
xor
sub
fsts
mov
adc
xchg
loop
pop
arpl
push
add
mov
daa
mov
loopew
mov
jnp
das
adc
outsb
paddsw
das
inc
add
mov
and
and
add
fwait
scas
jo
add
adc
push
adc
inc
cmpb
mov
adc
adc
add
mov
pop
mov
mov
push
or
in
fnsave
frstor
mov
subb
insl
das
in
arpl
and
out
arpl
cmp
arpl
ds
mov
or
push
xor
shll
gs
add
add
cmp
or
adc
mov
or
gs
push
pop
sbb
pop
addb
or
test
fwait
jecxz
add
pshufw
add
addr16
sub
je
push
out
add
ds
adc
dec
push
push
add
dec
mov
add
mov
push
insl
adc
fwait
movsl
or
out
cmpl
pusha
pop
rclb
gs
addr16
cmp
add
adc
rcr
inc
add
push
insl
es
in
mov
pop
movb
add
fwait
cmp
out
jge
jno
fwait
cmp
fcoml
loope
push
mov
inc
rolb
add
push
sti
xor
or
fdivrs
out
pusha
dec
push
mov
push
mov
add
lock
mov
lods
add
push
icebp
add
ss
in
adc
fs
add
shlb
adc
xchg
sbb
loope
inc
nop
add
or
test
icebp
add
lock
inc
adc
nop
add
add
sbbl
lahf
xorl
jecxz
lahf
and
rcll
pop
stos
add
mov
or
push
add
pop
stos
sbb
xchg
sbb
sub
out
stos
sbb
push
cli
push
push
mov
jo
mov
mov
xchg
sbb
and
gs
push
hlt
pop
and
fwait
loope
add
and
cli
adc
mov
adc
push
add
gs
lret
lock
add
das
add
in
gs
outsl
or
add
in
das
push
and
or
in
cmpsb
adc
dec
mov
adc
pop
loope
popa
pop
test
addl
lcall
xor
push
cs
add
nop
cmp
xchg
loope
push
arpl
adc
mov
add
inc
xchg
sbb
add
add
in
lcall
sbb
gs
test
ret
cmpsb
mov
dec
addb
add
lcall
cwtl
loope
lds
adc
sub
push
inc
jb
stos
loope,pt
stos
or
pop
mov
mov
icebp
xchg
arpl
ds
and
adc
sub
and
add
loopne
test
adc
sub
mov
shll
fwait
push
mov
rolb
sub
fwait
loop
sbb
mov
inc
pusha
adc
mov
sub
sub
sbb
cmpb
test
push
icebp
push
fwait
push
push
mov
add
loope
adcb
push
sub
or
mov
stos
add
xor
xor
ret
push
aam
add
sub
or
push
xchg
cs
push
mov
adc
add
xor
push
add
add
out
fwait
jb
adc
sub
add
inc
sub
fisubs
add
fisubs
push
cmpsb
in
add
pop
scas
call
add
pop
mov
pop
fs
add
and
stos
sbb
gs
out
stos
sbb
cs
mov
outsb
or
inc
adc
mov
push
jno
xor
gs
push
add
add
ljmp
add
fsubrl
outsb
add
outsb
stos
adc
pop
loope
das
ja
in
add
adc
fsubp
pop
cmp
loop
fs
and
andb
mov
ljmpw
stos
add
adc
pop
and
xor
test
sbb
mov
sbb
sub
and
fwait
in
out
add
in
add
jmp
add
inc
mov
push
add
in
jno
xchg
and
add
add
add
out
add
lcall
lea
addl
add
repnz
stos
push
mov
inc
jo
lcall
stos
mov
popf
in
add
sti
lret
and
push
in
out
add
adc
std
icebp
loop
add
xchg
rolb
add
js
mov
add
dec
cmp
push
inc
xchg
sbb
push
add
and
inc
sub
stos
add
add
icebp
gs
push
xchg
adc
add
divb
outsl
xchg
push
or
add
out
add
add
lret
mov
loop
add
pop
gs
xchg
sbb
add
adc
ljmp
stos
lret
out
mov
nop
hlt
add
faddp
pop
loope
testl
fs
mov
in
fwait
lock
xchg
add
mov
add
add
mov
sub
call
or
xor
jo
outsl
add
xor
fiadds
cli
roll
pop
ret
add
gs
lret
out
insl
add
mov
sbb
add
stos
push
lcall
stos
es
addr16
add
repnz
mov
adc
cwtl
das
add
insl
push
cwtl
and
imul
xchg
add
scas
add
lret
jmp
scas
rolb
test
in
add
push
out
das
outsb
xchg
in
cmpb
jnp
daa
and
dec
sti
lods
loopne
push
add
add
ljmp
jb
test
stos
dec
subb
inc
add
jo
stos
dec
addr16
and
add
das
push
mov
mov
or
in
add
stos
cs
pop
test
in
das
stos
sub
ja
lds
push
stos
pop
add
add
add
push
or
jbe
and
jbe
or
push
adc
dec
add
lods
add
loope
jae
in
add
data16
add
add
call
add
addr16
pop
mov
loope
pop
add
pop
mov
add
push
add
mov
mov
fwait
cli
adc
jle
add
push
pop
add
gs
lret
test
out
test
adc
mov
fwait
loop
add
adc
insl
adcb
loope
dec
repnz
je
lcall
loope
imul
in
xchg
cli
pop
stos
addl
add
loope
mov
sub
cs
xchg
jecxz
gs
add
mov
in
add
jg
loope
in
add
cmp
aas
push
insl
nop
into
add
push
addr16
int3
loope
or
dec
mov
stos
push
lcall
stos
cli
gs
cli
add
aad
into
xchg
xor
add
push
addb
stos
push
aad
cwtl
andb
lret
xor
in
mov
adc
add
clc
scas
add
fwait
ret
push
mov
test
mov
pop
cmpb
andb
daa
stos
add
xor
xchg
adc
push
test
cmpsl
sbbb
xor
cmpl
andl
pop
or
add
sbb
fwait
out
shll
mov
shll
rclb
inc
pop
ret
gs
fwait
repnz
gs
bound
push
enter
gs
add
cmp
loope
iret
inc
imul
inc
arpl
adc
orb
aad
ljmp
add
sahf
adc
cmp
gs
fs
arpl
arpl
loope
pop
mov
in
sub
mov
add
cli
imul
push
arpl
orb
pop
scas
out
and
or
in
ret
sub
sbb
cmc
cs
stos
push
popa
push
sbbb
loope
arpl
shlb
loope
push
dec
add
inc
jl
adcb
gs
add
scas
pop
sbb
xchg
pop
pop
sahf
inc
or
stos
sbb
inc
rolb
in
mov
addb
cli
add
push
addr16
aad
cli
xchg
loop
test
or
or
inc
inc
add
loop
add
addr16
and
ds
jg
mov
add
sarb
or
addb
loope
popa
outsb
orb
das
incb
fwait
and
add
adc
daa
aad
loope
add
repz
xlat
mov
xor
add
add
test
mov
adc
add
gs
xchg
add
stos
testb
pop
test
insl
sub
pop
int3
rolb
inc
add
and
subb
sub
ret
mull
lcall
pop
lret
and
or
add
stos
out
outsb
sarl
push
sbb
stos
into
out
loope
xchg
inc
adc
push
roll
push
add
in
stos
incb
jge
rorb
loope
jae
or
adc
push
inc
add
mov
cmc
roll
shl
roll
adc
jp
dec
fwait
inc
adc
push
and
or
adc
adc
and
out
lds
loope
hlt
loopne
add
mov
popf
xor
add
lods
add
push
je
sbb
sbb
mov
andb
test
lds
dec
arpl
mov
and
xchg
add
and
push
and
in
mov
stos
jle
add
mov
jp
mov
add
arpl
rorb
imul
bound
inc
xor
test
call
addr16
cli
addr16
push
inc
sub
in
mov
aas
jmp
loopne
inc
mov
es
gs
out
loopne
jmp
mov
add
gs
and
loope
ja
loopne
aad
push
loope
loope
arpl
test
stos
into
and
and
insl
push
inc
inc
adc
inc
and
stc
and
push
repnz
pushf
add
cli
pusha
push
loopne
aam
cli
loopne
gs
int
and
pop
les
add
fadds
fadds
movsl
stos
fsubs
adc
and
and
iret
repz
movlps
adc
pop
cmpsb
mov
das
inc
lahf
in
das
outsb
mov
mov
adc
mov
add
lahf
add
pop
ljmp
insb
rorb
inc
pusha
or
mov
es
rolb
cli
pushf
mov
ljmp
add
add
outsb
pop
mov
push
jo
outsb
and
mov
push
addb
loope
push
addb
loope
inc
addb
mov
push
addb
lcall
imul
cmpsb
or
or
arpl
out
addr16
pusha
add
add
add
gs
xchg
dec
mov
addr16
add
dec
sub
stos
add
mov
sbb
dec
inc
lcallw
ljmp
xchg
dec
es
jo
stos
cli
xchg
add
mov
push
pusha
cmp
addb
cmc
cmp
adc
and
imul
xor
dec
and
sbb
sbb
stos
into
mov
imul
add
int3
jo
inc
insl
nop
rolb
lcall
testb
sbb
test
xchg
aaa
lcall
push
push
add
gs
add
aad
loope
push
add
repnz
mov
loope
call
gs
repnz
es
add
sub
aam
ret
push
add
add
scas
out
aam
test
loope
cmp
add
or
push
in
test
aad
add
out
or
inc
adc
aaa
popf
roll
loope
add
pop
add
roll
imul
addb
xchg
mov
lods
out
add
scas
add
loope
mov
fwait
push
popl
lcall
insl
cmpsb
cmpsl
mov
movb
inc
add
loopne
inc
push
hlt
mov
lods
rorl
add
gs
pusha
lds
dec
push
adc
clc
add
pop
not
add
push
push
mov
adc
and
add
push
fwait
ret
mov
jb
adc
mov
test
rorl
fwait
push
dec
add
out
or
ret
push
aad
ss
daa
pop
pop
push
inc
mov
inc
fwait
ljmp
cltd
add
arpl
loope
pop
lods
adc
pop
add
out
pop
ljmp
pushf
lock
jo
std
add
mov
cwtl
loopne
cmp
add
mov
sub
popa
pop
add
add
add
mov
das
push
ljmp
test
fwait
out
cmp
das
loope
jp
add
sub
add
inc
push
sbb
stos
arpl
cmc
nop
or
mov
and
add
cltd
repnz
lock
push
jmp
loope
adc
sub
loope
and
mov
icebp
or
push
daa
scas
addr16
rorb
and
add
jo
nop
or
mov
ljmp
add
add
imul
inc
icebp
add
add
pop
pop
hlt
add
dec
add
insl
cwtl
adc
adc
incb
mov
imul
add
lods
inc
insl
push
in
push
mov
push
push
loop
int3
insl
push
and
lcall
clc
dec
ror
into
lock
push
adc
mov
add
xlat
and
mov
inc
aas
aaa
loope
cmp
aas
aad
mov
imul
push
add
mov
push
push
loopne
aaa
lods
aad
das
cltd
ret
loope
pop
jo
insl
and
out
push
addb
loope
push
addb
dec
adc
lock
add
outsb
popa
sub
inc
pop
add
insb
cltd
dec
rolb
in
add
icebp
add
test
mov
mov
shrb
add
in
mov
fisubs
addb
addb
pop
mov
std
xor
roll
jno
lods
insb
loop
add
roll
add
addb
mov
pop
addb
pop
mov
insb
push
lock
add
add
mov
jo
add
add
pusha
lock
dec
dec
add
mov
and
mov
loopne
gs
mov
add
cmpsl
mov
sub
fwait
push
aad
fdivr
and
gs
daa
xchg
jmp
lds
add
xlat
mov
mov
lods
fs
shrb
sbb
movsl
sbbb
and
loopne
rolb
pop
test
das
pusha
faddl
jo
imul
add
mov
fwait
adc
push
jo
xchg
nop
add
sbb
insl
sub
add
sbb
push
lock
movsb
or
add
push
outsb
mov
and
nop
fldl
jno
push
adc
adc
and
rolb
jp
sbb
fwait
push
sub
gs
bound
adc
in
mov
les
ss
aad
es
xor
insl
xchg
add
lahf
push
pop
cli
pusha
dec
stos
pusha
or
lret
pop
push
stc
and
mov
pop
inc
lock
out
insl
mov
iret
inc
int3
push
xchg
test
andl
cltd
mov
adc
jp
addr16
pop
mov
out
es
add
in
add
stos
push
fwait
out
adc
adc
xchg
add
fabs
pop
arpl
out
add
push
data16
enter
loope
outsb
mov
add
cs
cld
add
out
frstor
scas
add
lods
addr16
fadds
aad
and
gs
pop
in
gs
insl
psubsw
sbb
push
in
fs
push
adc
jb
add
mov
nop
add
gs
push
aad
loope
add
xchg
add
add
cli
loope
sub
add
add
lret
stos
lret
pop
jnp
or
sbb
add
sub
add
add
fs
lods
test
loope
dec
pop
cwtl
sbb
or
stc
add
loope
adc
gs
add
fs
in
inc
lods
cli
out
add
add
jg
stos
adc
sub
add
out
or
add
orl
adc
add
enter
sub
mov
orl
aam
orb
add
add
pop
test
cmpsb
jbe
xchg
add
pop
stc
test
out
addr16
or
aas
mov
fnstsw
addr16
mov
subb
imul
imul
mov
js
add
add
addr16
aad
xchg
shlb
inc
push
rclb
hlt
jo
lods
adc
xchg
add
xchg
imul
lcall
xorb
mov
or
pop
insl
inc
xchg
push
add
imul
adc
loope
dec
push
inc
pop
ret
add
fwait
lret
test
adc
fwait
repnz
add
fwait
adc
out
cmp
adc
movsl
imul
add
orb
rorl
cli
add
pop
out
xchg
iret
inc
xorb
in
xor
and
test
shll
adcb
test
add
push
std
add
or
add
xor
push
xor
xor
sbb
xor
inc
or
xor
out
xor
or
sub
or
lcall
insl
sub
loop
loope
imul
push
pop
lahf
inc
or
add
add
add
pop
imul
fldl
xor
lahf
mov
lds
inc
or
mov
stos
in
add
cmp
push
mov
push
add
dec
rolb
jp
push
push
sub
inc
addr16
and
push
ret
push
push
sbb
push
adc
addr16
mov
lds
xlat
sarl
push
ficompl
sub
push
inc
rorb
cmp
inc
push
les
add
and
rolb
push
aas
sbb
and
or
push
addb
push
sbb
pop
sbb
or
sbb
pop
adc
insl
add
scas
add
std
imul
loopne
add
out
push
and
fwait
test
gs
sub
pushf
push
pop
pusha
ret
add
add
add
push
frstor
outsb
ret
cltd
adc
jp
andb
push
add
cs
pusha
pop
test
add
inc
add
loopne
xchg
fldl
movsl
dec
and
jle
cmpsb
sub
gs
insl
push
out
stos
add
loop
addr16
dec
add
adc
out
cmp
add
mov
pusha
mov
in
add
insl
sub
insl
adc
loope
imul
inc
lret
call
sub
loope
cmpsl
mov
mov
aad
loope
mov
nop
testb
repnz
nop
cwtl
testb
mov
aad
adc
add
and
add
stos
adc
repnz
fs
mov
insl
adc
and
mov
out
aam
ret
loope
and
add
mov
in
add
iret
mov
xor
add
sbb
adc
ss
push
and
add
push
out
loope
push
sbb
add
mov
inc
in
enter
orb
add
nop
ljmp
jecxz
dec
int
adc
jnp
andb
test
and
and
scas
nop
cs
fwait
orl
out
outsb
aad
mov
or
or
and
or
loope
int3
and
adc
into
loope
testl
sbb
push
pusha
add
loopne
jmp
push
push
add
loopne
into
lcall
sbb
sbb
push
and
sub
add
in
popa
push
adc
loope
jnp
add
push
addr16
add
pop
jb
add
xor
add
bound
nop
jmp
or
stos
cmp
xor
mov
xor
lcall
cmpsl
jo
jecxz
inc
add
gs
lods
inc
outsb
pminsw
imul
add
push
pop
idivl
clc
mov
pop
testb
pop
xor
adc
rolb
ja
xor
jnp
rolb
dec
mov
jo
add
mov
inc
pop
xchg
popl
pop
inc
xchg
loope
into
dec
add
adc
add
dec
add
push
inc
pop
push
add
mov
jne
jl
adc
gs
dec
loop
xchg
add
add
aaa
fldl2t
scas
add
and
aad
xchg
xchg
mov
aad
sub
hlt
loop
gs
add
and
add
fwait
mov
shll
aad
cltd
cli
fs
and
test
fwait
jecxz
ss
test
lcall
xchg
pop
add
add
aad
mov
mov
iret
xchg
xchg
push
sub
les
jo
pop
pop
int3
xchg
mov
mov
add
cmp
add
rorl
mov
fwait
loop
mov
dec
lret
jno
repnz
mov
fwait
shrb
adc
xorl
sub
adcb
or
pop
mov
add
add
mov
insl
add
push
lods
addb
cmp
mov
lods
scas
aad
das
xchg
ds
lds
aaa
addb
add
cmp
addb
add
pop
insb
adc
jo
loope
xor
in
loope
pop
mov
mov
and
cmp
push
addb
cmp
add
push
insb
pop
pop
mov
addb
add
pop
cmc
rorl
pop
jecxz
push
arpl
add
and
outsb
mov
insb
arpl
mov
mov
pusha
aaa
mov
add
mov
lods
mov
into
addb
add
lock
add
fwait
rolb
adc
jmp
adc
and
push
lock
add
add
jbe
mov
addb
push
loopne
sub
lock
add
add
inc
mov
addb
add
jp
add
add
rolb
adc
xchg
mov
addb
add
mov
add
add
or
js
das
mov
das
arpl
loope
sahf
in
push
outsb
shll
lcall
add
xor
pop
mov
js
in
andb
mov
xor
push
xchg
out
stos
jno
add
add
add
mov
pop
jmp
pop
jle
imull
in
cmp
shll
test
adc
in
lock
adc
imul
pop
mov
push
or
outsb
rcl
mov
xchg
into
subb
pop
rolb
mov
mov
test
rolb
fwait
mov
push
loope
push
in
jb
inc
into
add
nop
add
rolb
shlb
add
test
test
and
call
add
add
and
scas
mov
mov
or
add
adc
in
sub
ds
addb
adc
rorb
and
rol
sti
repnz
scas
add
xorb
adc
mov
push
jb
pop
add
loop
push
pop
scas
fiaddl
mov
popf
adc
popa
test
and
push
hlt
lock
pop
je
add
outsl
sbb
shrb
xor
add
push
cmc
roll
mov
add
push
scas
flds
ret
pop
in
xor
and
in
add
pop
outsl
and
outsl
and
xor
add
mov
loop
fwait
out
add
xor
adc
loope
add
out
add
sahf
push
add
adc
adc
aas
add
add
gs
lret
mov
adc
add
fwait
repnz
outsb
add
add
in
sub
in
add
out
sbb
add
add
in
addr16
sahf
push
mov
add
add
mov
aas
add
add
push
push
lock
inc
orl
add
test
das
verw
gs
out
addr16
add
add
add
lds
arpl
ljmp
or
add
and
insl
xchg
adc
sub
inc
add
add
arpl
stos
lret
add
add
enter
add
add
inc
or
add
arpl
add
jmp
push
inc
add
loope
mov
add
in
in
pop
outsb
add
mov
loop
inc
add
push
addr16
addl
push
addb
or
add
lcall
push
cs
push
push
and
add
mov
push
adc
add
mov
fwait
not
mov
xlat
mov
add
data16
out
jne
stos
addr16
gs
out
test
add
sbb
stos
adc
ss
cs
test
addr16
scas
pop
add
adcb
cs
pop
adc
and
add
pop
test
add
sub
das
add
into
aad
fwait
call
add
and
loope
scas
ljmp
cmp
jp
sbb
and
arpl
gs
insl
sub
addr16
add
push
lock
in
add
push
add
mov
gs
sti
push
sbb
imul
jmp
imul
stos
push
inc
das
push
in
mov
xor
adc
ljmp
add
gs
into
add
sub
rorb
or
inc
cmpsb
scas
addr16
jo
loope
ret
mov
mov
mov
xor
add
stos
cli
insl
push
out
loope
push
sub
testl
inc
sub
cs
inc
cs
fwait
xor
and
orb
test
inc
inc
and
adc
ds
arpl
cmp
es
mov
sti
or
cmp
cmpsb
addb
inc
or
push
lcall
sar
pop
jmp
xchg
stos
iret
pextrw
or
bts
gs
inc
cmp
fwait
push
pop
stos
add
or
cmp
and
add
xlat
stos
cli
loope
cmp
fwait
mulb
sbb
fwait
add
sub
push
pop
xor
cmpb
sbbb
mov
adc
loopne
repnz
addb
add
ljmp
outsb
aad
xchg
mov
or
or
sbb
stos
add
xchg
xor
add
lcall
std
rclb
mov
or
sbb
mov
loope
insb
fcmovb
adc
gs
adc
mov
or
imul
sbb
pop
popf
cmp
adc
arpl
and
push
inc
add
or
add
push
add
movsl
or
push
ret
inc
and
and
and
in
gs
cmp
das
add
in
fs
push
loopne
cmp
cmp
bound
in
and
shlb
pusha
adc
ds
and
add
add
add
daa
scas
addr16
mov
loope
mov
cmc
add
inc
push
and
mov
shll
pop
or
or
mov
inc
add
loope,pn
and
add
add
add
add
sub
aaa
lds
mov
inc
jge
popa
add
add
sbb
andb
sbb
imul
inc
mov
mov
mov
fadds
or
or
pop
mov
push
or
inc
insl
push
add
dec
push
push
xchg
addb
push
pop
cmp
out
popa
jb
lret
and
insl
test
orl
inc
push
push
mov
push
pop
inc
dec
mov
je
or
mov
xchg
movsl
and
mov
ret
push
repz
add
adc
loope
int
loopne
insl
xchg
sbb
fwait
lods
gs
mulb
inc
stc
test
mov
gs
add
popa
std
push
or
adc
repnz
aad
cltd
add
fs
mov
mov
cmp
aam
jo
loope
daa
mov
inc
add
insl
add
adc
insl
pop
loope
imul
lret
jmp
push
in
push
and
loope
dec
addb
push
loop
add
insl
push
jecxz
cmc
shrl
inc
add
inc
add
xlat
test
mov
imul
inc
push
add
add
in
imul
addb
pop
rcll
push
out
loope
mov
add
into
loope
push
addb
dec
rolb
fwait
dec
addb
cwtl
inc
add
and
pop
pushf
mov
rolb
push
pop
add
insb
sti
lock
or
push
dec
mov
ljmp
int3
addl
add
incb
test
loope
push
pshufw
dec
xor
cmp
pop
loope
xchg
loopne
add
mov
mov
daa
sub
into
add
push
scas
add
push
or
adc
add
add
scas
add
push
scas
add
xor
sahf
xor
insb
xor
jne
xor
inc
mov
sbb
add
add
adc
scas
add
add
add
add
mov
scas
add
xor
mov
add
xor
sub
add
mov
xchg
scas
add
xor
out
xor
lods
xor
mov
add
inc
xor
add
scas
add
fs
xor
xor
and
add
xor
or
add
xor
push
push
pop
scas
add
jo
scas
xor
cmpsb
add
add
add
mov
mov
fxsave
lods
or
add
xor
imul
inc
add
scas
add
inc
push
xor
add
add
adc
add
add
add
adc
add
add
lock
mov
dec
adc
scas
add
scas
add
add
in
in
ljmp
out
in
loop
cmpsl
cmpsl
jecxz
loope
jmp
sti
clc
stc
div
add
add
cmc
cmc
repnz
add
iret
add
int3
int3
int
lret
or
leave
movb
mov
ret
shlb
add
fstp
fcmovu
fildl
fcomp
fcomp
xlat
aam
add
add
add
rcl
shrl
stos
stos
test
test
sbb
ficoms
scas
add
add
paddusb
push
inc
in
scas
add
add
xor
push
xor
fidivs
add
push
jo
xor
jo
add
xor
in
add
add
sbb
add
add
sbb
sub
add
add
lock
ljmp
pop
xor
in
jo
push
xor
cli
xor
iret
cmp
cmc
add
xor
dec
xor
push
xor
cmp
xor
mov
rolb
insl
mov
add
xor
adc
mov
jge
daa
in
and
stos
adc
add
addr16
mov
and
sbb
or
jmp
inc
pusha
fwait
aad
loope
sub
aas
or
push
jo
xlat
mov
xlat
mov
rolb
xor
jmp
mov
mov
pop
test
cmpsb
push
xor
mov
repnz
addr16
stos
nop
add
lods
loope
mov
lret
addr16
add
gs
stos
add
rcrb
push
aam
scas
add
stos
mov
lret
sub
mov
and
and
push
push
imul
popf
adc
and
add
gs
lock
push
cld
add
and
cmp
add
add
hlt
int
and
mov
das
pop
xor
mov
arpl
rolb
add
loope
inc
es
imul
and
das
inc
mov
jno
stos
add
in
mov
mov
mov
loop
add
add
imul
push
in
jno
push
imul
loope
sub
add
push
push
jmp
add
roll
aad
add
roll
les
repnz
popf
add
sub
jmp
in
push
mov
jmp
nop
add
imul
scas
inc
and
adc
mov
add
outsb
out
int
addr16
add
push
addr16
pop
mov
add
add
lcall
lock
addr16
or
inc
das
lcall
outsb
or
add
add
add
jmp
add
or
lcall
mov
pusha
add
add
add
bound
rolb
mov
sub
and
jo
add
jecxz
mov
add
adc
or
out
sub
and
data16
imul
in
mov
aas
test
add
and
add
add
imul
xchg
jb
jecxz
mov
sbb
add
xchg
repnz
push
jmp
lock
ja
in
mov
sbb
sbbb
lds
nop
push
shll
sub
adc
arpl
in
and
jo
mov
loopne
add
stos
xor
xor
add
gs
mulb
add
rcll
mov
insl
dec
mov
add
insl
mov
push
fisubs
ficoml
and
arpl
stos
push
aad
repnz
rclb
or
insl
push
mov
add
add
push
gs
push
ja
add
lds
add
jg
in
insl
out
add
ljmp
xchg
cmp
fwait
ret
rorb
rolb
outsl
lgdtl
and
push
out
push
and
addr16
stos
ss
addr16
stos
sbb
add
lcall
sub
add
adc
out
orb
push
add
es
outsl
mov
add
sbb
bound
gs
push
imul
clc
inc
or
arpl
imul
add
cmpsl
das
pop
in
scas
insl
add
sbb
add
mov
pop
aad
adc
mov
and
lcall
mov
loope
arpl
sbb
lds
add
fldl
lds
adc
add
aad
cltd
lock
add
cli
insl
push
add
lcall
add
test
pushf
dec
cmp
loop
add
xlat
stos
add
imul
add
add
stos
sbb
ss
out
gs
mov
ljmp
push
add
scas
addr16
and
or
pop
sub
sbb
inc
add
push
pop
sbb
inc
pop
inc
add
imul
cmp
dec
add
gs
gs
data16
aad
loope
jl
cmovo
and
xchg
add
add
lcall
adc
and
fwait
data16
lods
adc
add
push
sub
fstl
fildl
in
sub
and
pushf
lock
fisubl
add
sub
fwait
insl
adc
out
lcall
mov
add
loop
je
outsb
xchg
adc
fwait
into
add
or
add
fwait
loopne
mov
outsb
xlat
in
ljmp
fnstsw
xchg
loop
add
mov
xlat
mov
sub
lds
roll
in
add
xchg
add
loope
cs
add
aad
and
sub
insl
xchg
out
add
loope
out
aad
mov
mov
aad
pushf
out
add
mov
or
orl
stos
and
add
gs
mov
testb
arpl
add
mov
addr16
addr16
addr16
add
or
mov
adc
stos
adc
xlat
push
xchg
add
lcall
call
add
adc
loope
push
adcb
addb
leave
add
repnz
das
lcall
add
inc
sbb
add
add
adc
out
fldl
rcll
lcall
lcall
or
movsl
andb
gs
add
imul
imul
adc
ss
cltd
ret
in
inc
cltd
add
sbbb
add
cmp
addr16
adc
push
cltd
mov
arpl
addb
les
in
fwait
lret
sbb
and
addr16
ljmp
add
subb
addr16
sub
lcall
lcall
loop
gs
addb
or
add
test
add
cli
lcall
pop
subb
daa
lcall
loope
dec
add
mov
mov
movsb
ljmp
adc
insb
rolb
adc
fwait
repnz
xchg
xor
ljmp
adc
sbb
insl
cs
mov
add
sti
ljmp
loop
fwait
rorb
sub
inc
or
ja
add
and
push
inc
add
cs
lds
and
insl
adc
xchg
add
add
mov
gs
mov
test
mov
mov
mov
sub
add
ljmp
adc
cli
cmp
sbb
add
in
add
add
add
add
xchg
lods
add
push
sarl
fstl
inc
addr16
push
addr16
or
dec
mov
mov
add
es
gs
out
push
adc
pusha
cmp
imul
add
inc
add
add
push
adc
add
leave
and
add
imul
adc
or
imul
add
out
add
sub
and
sti
rolb
imul
and
push
inc
add
add
stos
push
addr16
adc
inc
gs
or
lds
add
pop
out
adc
push
sbb
adc
add
and
gs
add
aas
inc
jp
mov
rorl
loopne
and
mov
arpl
add
nop
add
adc
add
test
adc
cwtl
ljmp
arpl
add
insl
mov
out
add
sub
roll
cs
xchg
jg
add
add
add
jmp
add
sbb
adc
sub
adc
orb
add
or
add
in
imul
imul
loope
jp
mov
sub
and
inc
popa
sub
jle
sub
addr16
arpl
and
add
add
std
scas
add
cmp
aad
loope
and
and
mov
ss
shll
cmp
add
sbb
add
shrl
xchg
add
add
mov
arpl
xor
adc
and
jmp
mov
mov
add
stos
push
adc
fwait
cmp
sti
xor
xlat
xchg
push
lcall
lcall
mov
je
sti
mul
add
stos
xor
sub
or
mov
mov
imul
sub
and
sbb
add
out
inc
sbb
or
adc
or
dec
fs
sub
rcrb
ljmp
mov
mov
mov
jg
hlt
dec
jge
cmp
ret
das
fnsave
push
add
mov
add
out
push
jecxz
fiaddl
fimull
aam
add
add
add
lcall
shlb
imul
or
fnstenv
or
ja
pop
jge
pop
add
cmp
add
xor
rolb
cmpsb
subl
shlb
add
and
push
loope
add
loope
sub
loope
sahf
cmpsb
lea
sti
mulb
push
cltd
subb
sbb
or
iret
fsub
add
lcall
dec
cmpsl
lea
lret
gs
popf
repnz
push
mulb
pusha
push
aam
mov
int3
or
negb
rcr
add
imul
stos
inc
rcrb
cmp
push
inc
add
gs
inc
test
cmp
inc
insl
and
push
outsl
add
cmp
loop
stos
lret
add
in
lods
add
xor
add
mov
adc
lret
das
mov
cmpb
and
or
stos
lret
add
sti
loop
pusha
ss
addr16
lret
add
mov
xor
cli
aad
fwait
xor
lcall
addl
adc
rolb
adc
add
inc
mov
fwait
jmp
mov
add
rolb
lock
mov
jle
or
sbb
loop
cs
test
pop
scas
mov
fs
sub
push
or
arpl
adc
inc
mov
inc
add
mov
out
mov
lret
add
inc
out
add
mov
incb
or
or
pop
inc
xorl
lcall
mov
push
lcall
adc
add
adc
and
adc
cmp
add
add
mov
in
add
mov
add
xor
lret
out
addb
sub
inc
adc
add
lcall
sti
pushf
in
sbb
loopne
in
gs
inc
add
cmpsb
add
fwait
xor
sbb
cs
sar
lcall
adc
imul
and
add
xlat
mov
lcall
adc
mov
int3
push
mov
orb
mov
mov
add
add
pusha
add
add
loope
cs
xor
jmp
addb
xchg
adc
pop
and
mov
add
icebp
inc
lcall
inc
mov
movsb
inc
addr16
gs
jecxz
sti
addr16
out
arpl
imul
fwait
jmp
cs
mov
adcb
arpl
add
add
mov
ja
add
gs
out
repz
dec
addr16
test
arpl
jo
or
mov
in
push
or
adc
add
cmp
add
or
push
ljmp
push
es
jo
stc
lret
or
mov
fdivl
pop
addl
popl
addb
addb
nop
push
pop
addl
add
imul
push
out
add
dec
aad
lcall
aad
lcall
pop
ficomps
movsb
in
insl
pop
xchg
lcall
jmp
ljmp
add
mov
insl
adc
sbb
lcall
push
add
add
add
jno
add
adc
inc
insl
sub
adc
or
insl
es
fnstenv
out
or
mov
xor
mov
arpl
in
sub
adc
adc
sti
jp
scas
or
test
jbe
frstor
mov
loopw
sub
loope
add
rcll
mov
fwait
call
addr16
insl
cs
mov
add
push
loope
push
insb
test
add
shlb
rolb
and
adc
or
mov
stc
adc
dec
incb
and
sbb
jbe
add
adc
add
mov
test
nop
lcall
out
pop
cld
nop
add
aaa
pop
repnz
sub
sbb
cmp
xor
cli
add
cld
lock
test
mov
fstpt
add
cmp
icebp
add
xor
add
inc
mov
jmp
inc
push
mov
push
push
xlat
rolb
add
cmp
jge
jb
add
or
nop
inc
pop
xchg
push
js
xor
mov
add
add
add
lret
rolb
push
sub
add
inc
data16
jle
lret
or
add
xor
pop
stos
lret
movsl
push
add
push
add
mov
add
add
dec
rolb
xor
rorl
inc
dec
into
icebp
pcmpgtw
push
add
mov
in
push
pop
push
and
jmp
mov
fnsave
into
mov
inc
mov
sti
dec
mov
add
xor
mov
or
sbb
inc
mov
gs
lcall
xor
stos
xchg
loope
sbb
loope
sbb
imul
loope
add
insl
rolb
add
push
ljmp
add
sub
push
xchg
jae
mov
setnp
cmove
rorb
rclb
ss
xchg
nop
roll
xchg
xor
js
add
adc
stos
mov
push
packsswb
add
add
xchg
cs
lods
mov
jae
adc
adc
add
mov
mov
fwait
xchg
aad
lcall
cmpsb
arpl
add
sbb
add
stos
adc
push
movsb
mov
adc
mov
sbb
lods
push
adc
fwait
mov
mov
and
push
mulb
stos
xchg
daa
sub
mov
gs
loopne
mov
add
arpl
adc
xchg
imul
lcall
add
lods
mov
adc
and
lahf
mov
xor
pop
rolb
mov
orb
loop
pop
shlb
adc
loope
add
ljmp
in
cmpsb
lods
mov
imul
in
pop
or
movsl
adc
and
out
rorb
add
notb
xor
cmp
nop
dec
add
outsl
rcrb
push
and
xchg
pusha
lcall
rcll
fwait
cli
add
sbb
cmc
inc
daa
insl
bswap
arpl
add
sub
mov
add
mov
sub
xchg
loope
loop
out
add
or
out
sti
add
pop
stos
or
mov
xlat
adc
repnz
mov
xchg
and
xchg
pop
rolb
gs
push
insl
adc
lcall
mov
lcall
cmp
pusha
sub
and
add
or
out
rolb
jno
adc
rolb
push
xchg
or
mov
sbb
loop
mov
popa
loop
test
insl
push
call
and
outsb
and
add
out
push
adc
add
add
add
push
add
ljmp
lcall
mov
push
addr16
aad
sub
fldl
add
mov
sbb
scas
add
add
sub
out
mov
adc
push
cld
add
gs
add
aad
ljmp
in
lcall
add
out
add
outsb
add
mov
push
push
add
sbb
sub
out
mov
add
test
add
out
sbb
add
dec
mov
adc
add
add
push
add
incb
mov
add
test
arpl
daa
mov
push
fwait
add
gs
sbb
gs
and
and
daa
sub
adcl
stos
push
add
add
add
push
gs
adc
adc
add
lcall
cmp
andb
add
ljmp
arpl
adc
xchg
subb
or
cltd
test
sbb
addb
push
add
scas
add
push
add
out
add
push
adc
adc
push
mov
incb
add
lcall
and
jae
and
push
adc
inc
test
test
test
xchg
adc
pop
xorb
sbb
adc
orb
jbe
stos
mov
outsl
subl
lea
sbb
ljmp
push
add
loop
sub
shlb
sub
sub
rcrw
inc
fwait
loope
test
adc
ljmp
js
mov
add
fwait
mul
pop
cmpsb
in
mov
imul
loop
pop
rcrb
ljmp
sub
loope
pop
cs
ss
cs
add
mov
inc
cmp
dec
add
cmpl
lcall
test
mov
ret
loope
sub
sub
add
in
and
fnsave
adc
add
push
cs
add
aad
loope
jl
sbb
nop
sub
insb
rolb
das
inc
add
add
sub
add
in
sub
sub
add
add
add
outsb
js
add
add
mov
out
add
rolb
sbb
adc
pop
add
jb
mov
mov
mov
imul
mov
scas
add
cmpsb
sbb
hlt
adc
push
add
adc
adc
fwait
in
mov
mov
or
adc
xchg
inc
or
fwait
sub
fs
mov
push
addl
cmp
mov
inc
adc
or
out
mov
shl
mov
jle
or
gs
imul
in
sbb
loope
call
in
insl
push
rcrl
add
mov
adc
ret
jecxz
add
sub
loope
mov
lcall
sub
add
or
mov
sub
push
outsl
add
mov
inc
mov
inc
out
gs
push
lret
push
push
add
cmp
pop
xchg
arpl
jne
xor
and
and
shlb
add
cmp
fisubrl
ret
add
pop
icebp
sbb
ret
pop
lcall
push
gs
sub
mov
rolb
mov
inc
inc
add
mov
js
add
loop
mov
xchg
sub
mov
pop
sbb
push
test
addr16
shlb
loope
repz
sub
push
idivb
add
sti
and
lret
loope
and
rorb
push
inc
push
fstpl
add
fwait
negb
es
add
shr
pusha
pop
loope
inc
aas
and
or
push
loope,pn
inc
inc
push
stos
lret
insl
push
lcall
aad
fwait
stos
and
ljmp
cwtl
xlat
gs
lret
adc
pop
mov
xchg
jecxz
out
aad
out
or
add
arpl
and
sub
add
into
add
into
adc
sbb
or
lcall
stos
lds
rorl
and
fisubrs
repnz
push
gs
sbb
arpl
sahf
pusha
sbb
pop
fwait
cli
or
fwait
mov
cmp
adc
and
mov
sti
xor
loope
std
mov
adc
mov
sub
fs
stos
push
sbbb
insl
sbb
pusha
xorb
roll
inc
and
gs
adc
mov
rolb
push
lahf
push
add
movsb
aad
xchg
xchg
sub
cld
aad
lcall
pop
push
les
mov
gs
add
arpl
fmuls
adc
frstor
add
mov
in
es
and
and
out
sbb
mov
adc
in
sbb
add
test
loopne
pop
adc
addl
ret
arpl
add
mov
shll
mov
add
or
sti
loop
imul
push
dec
add
test
mov
imul
and
andb
mov
inc
jmp
into
xlat
pop
mov
add
add
add
lcall
gs
inc
add
fwait
mov
add
movsl
add
add
lcall
fildl
mov
icebp
add
or
add
test
mov
sub
popa
pop
or
scas
xor
and
mov
sbb
cs
sub
lcall
adc
pusha
push
push
add
add
push
add
mov
xlat
mov
mov
stos
cmp
stos
cmp
out
push
and
mov
pusha
add
or
ds
add
mov
xor
ljmp
arpl
stos
adc
add
sti
cmpsb
and
lcall
ret
nop
inc
arpl
sbb
inc
push
mov
add
mov
add
mov
push
push
sub
adc
shlb
mov
add
sti
and
mov
add
inc
and
aad
adc
push
stos
adc
add
push
add
mov
adc
lods
add
shlb
into
rorl
rolb
add
gs
lcall
gs
cld
scas
outsl
sub
add
loope
pushf
push
mov
or
addl
add
mov
add
add
sti
add
insl
rclb
lcall
add
add
sub
push
fwait
shrl
push
mov
push
pushl
mov
xchg
or
jmp
mov
in
rorb
lcall
jmp
dec
xchg
add
scas
aam
es
arpl
add
sbb
adc
adc
popa
add
fwait
sbb
mov
and
add
mov
adc
popa
add
bound
or
jo
push
adcb
xchg
out
mov
inc
xchg
loop
loope
and
add
push
and
sbb
inc
out
adc
add
out
mov
arpl
adcb
call
out
xchg
ljmp
insl
xchg
incb
gs
add
stos
out
lahf
push
add
rcrb
xlat
mov
pop
add
pusha
loopew
xor
sub
add
das
cwtl
cld
lds
das
mov
call
shr
mov
or
add
add
js
add
cmp
outsl
xor
test
and
push
lods
fwait
verw
mov
mov
fwait
jp
lds
add
add
arpl
mov
push
pusha
sbb
inc
pop
fiadds
add
mov
add
push
pop
rcll
mov
adc
loopne
out
pop
subb
sub
cmp
lods
push
dec
inc
and
jno
mov
and
and
pop
outsl
add
push
lods
mov
add
push
xchg
jo
add
dec
repz
andl
loopne
and
into
addr16
pop
pusha
add
push
out
push
in
xorb
scas
loope
arpl
sti
cmp
jno
nop
mov
push
cmpsb
roll
loopne
out
xor
jp
xor
clc
adc
aas
xor
shrb
mov
cli
jo
into
gs
rolb
repnz
xorl
push
add
stos
repnz
rolb
adc
popl
fdivrs
aad
add
popf
lret
xor
add
mov
into
test
mov
xor
addl
lods
lds
gs
mov
or
push
push
and
jb
push
repnz
fwait
in
add
nop
or
adc
xchg
or
pop
xchg
or
mov
mov
push
lods
xchg
add
or
fwait
or
cwtl
or
add
int
inc
fwait
lock
add
add
add
xchg
adc
xor
push
mov
and
insl
loopne
mov
xorb
push
mov
add
xor
lock
clc
inc
add
sub
add
lods
add
xor
repz
add
jmp
add
sti
add
and
push
addr16
add
mov
loope
stos
or
gs
add
fisubrl
inc
stos
push
mov
or
adc
in
pushf
xor
nop
add
add
xchg
ret
add
mov
mov
or
add
rorb
mov
or
mov
or
addr16
add
xchg
add
scas
adc
mov
lcall
add
sti
out
mov
or
push
fisubl
nop
sub
cli
nop
inc
push
push
push
add
xor
test
adc
xorb
mov
push
or
add
test
mov
out
ljmp
popf
push
add
ret
lcall
loop
add
xchg
adc
adc
mov
add
lock
sbb
add
in
add
in
lods
add
ljmp
aam
aad
loop
fsubrl
add
subb
mov
mov
sub
rolb
jo
adc
adc
adc
mov
add
cli
gs
loop
jo
jle
mov
add
aad
add
lock
out
add
mov
mov
inc
xchg
loop
mov
xor
insl
add
push
dec
mov
push
aad
jb
sub
jp
stos
adc
mov
mov
add
push
orb
add
inc
push
push
add
fwait
adc
cmp
arpl
out
add
push
sub
sub
stos
push
arpl
add
pop
fstpl
gs
aad
xor
lcall
xchg
scas
scas
add
push
xorl
add
add
push
adc
adc
fwait
out
mov
add
arpl
sbb
mov
adc
rcr
xor
cwtl
shll
arpl
call
add
jmp
push
ljmp
stos
add
add
lods
insl
sub
aad
add
pushf
aas
adc
push
add
add
sub
add
push
in
insl
lock
or
add
hlt
dec
jg
hlt
inc
jg
sbb
push
push
pop
xor
or
loope
sub
fldl
rcrb
adc
imul
push
or
pop
mov
add
movsl
pop
mov
or
inc
in
mulb
push
dec
add
sbb
lea
push
cltd
stc
loope
pop
testb
mov
repnz
or
add
daa
add
sub
hlt
inc
cmpsb
call
xor
rolb
fnsave
push
jecxz
rolb
push
or
dec
mov
das
add
ss
xor
aad
and
xor
pop
rolb
pop
divb
cmp
jg
gs
xor
andb
insl
hlt
xorb
add
rcrb
add
hlt
push
cmpsb
sbbb
test
inc
add
imul
sbb
call
add
pop
cmpsb
add
mov
xchg
adc
cmpsb
sbbb
adcl
pop
lcall
add
add
mov
add
dec
bnd
pop
jne
or
xorb
cmp
cmpsb
jecxz
rcrl
roll
aam
inc
mov
push
push
arpl
pop
imul
adc
test
pop
add
outsl
add
mov
and
xchg
ljmp
loop
pop
movb
push
add
add
push
mov
or
add
mov
add
pop
lcall
add
fsubrl
daa
sub
add
mov
adc
adc
frstor
push
enter
sahf
sti
adc
nop
add
ret
or
add
add
sub
out
add
incl
lds
mov
pop
and
pop
adc
das
fnsave
inc
adc
imul
add
imul
adc
pop
adcl
pop
jne
fadds
dec
andb
jo
add
mul
adc
sub
add
inc
add
pop
mulb
aas
adc
lcall
add
lea
sahf
cmpsb
or
sub
pop
shl
sub
cmpsb
es
dec
jnp
sbb
or
add
lds
andl
inc
xorb
movsl
pop
les
dec
or
outsb
xchg
test
sub
add
mov
xor
in
cmpsb
rolb
xor
xor
pop
imul
enter
popa
pop
pop
fs
mov
add
mov
mov
add
inc
data16
push
fnstcw
mov
push
add
sub
adc
add
add
arpl
push
xor
sti
inc
mov
popf
arpl
mov
dec
adc
add
mov
ds
or
out
fwait
add
jb
adc
add
jmp
fdivrp
scas
add
fwait
test
arpl
add
pop
mov
arpl
add
add
add
bound
insl
or
arpl
add
outsl
lods
add
sub
mov
adc
addl
addr16
push
into
pusha
mov
stos
push
pusha
xchg
pusha
add
mov
test
mov
cmp
sti
ljmp
in
and
sbb
imul
xlat
mov
push
loope
and
add
sbb
loopne
push
loope
push
inc
add
test
adc
pop
and
loop
adc
add
andl
and
adc
adc
push
lcall
and
push
push
rcrb
bound
mov
push
push
out
bound
lods
test
call
pop
shlb
addb
loopne
cwtl
les
xchg
push
add
clc
add
or
sub
pusha
xor
adc
loope
cmpsb
adc
add
add
add
sbb
add
shrb
test
test
xchg
outsb
mov
out
test
ret
push
mov
sbb
insl
and
ljmp
dec
mov
daa
mov
jnp
or
ds
jb
nop
inc
add
arpl
push
mov
xor
inc
fistl
cmp
add
arpl
sbb
adc
add
cmp
add
es
push
sub
add
adc
jp
inc
mov
and
mov
rolb
inc
add
outsl
rol
mov
add
orl
lods
test
mov
and
jecxz
or
rolb
sti
push
adc
sub
rcll
adc
inc
mov
or
add
cmp
cld
sbb
addb
push
mov
loopne
push
lcall
inc
adc
push
shlb
add
nop
out
sub
out
add
and
and
and
adc
pusha
xchg
pop
out
mov
sub
adc
sbb
test
gs
out
adc
out
data16
add
add
addr16
add
loopne
bound
lret
mov
loope
lcall
xchg
in
add
mov
into
lcall
sbb
ss
and
mov
loop
and
add
mov
add
sub
gs
xchg
orw
outsb
and
addr16
jae
sti
pop
loope
shrl
push
pusha
or
loope
push
inc
and
insl
xchg
push
in
add
lds
or
lds
inc
out
xchg
push
out
add
out
mov
add
push
insl
push
add
xchg
repnz
xor
into
insl
push
call
lcall
add
push
add
add
cmpsb
lcall
mov
addr16
mov
add
add
add
mov
bound
sti
mov
mov
add
loop
loopne
scas
lcall
or
inc
add
add
cmp
add
add
mov
lds
add
fwait
addb
add
xor
xor
loop
dec
lock
mov
in
mov
mov
lcall
and
add
into
mov
loope
inc
inc
adc
sub
fsubrl
xor
call
xor
add
add
add
mov
add
push
add
pop
out
adc
mov
sub
push
inc
gs
out
push
or
aad
loop
inc
shll
lds
inc
add
pop
push
pusha
jae
ret
push
fwait
sub
test
adc
and
or
neg
cs
push
add
stos
adc
mov
bound
add
mov
mov
lock
mov
cli
gs
outsl
adc
inc
jo
lcall
out
outsl
adc
jo
fwait
mov
sub
sti
repnz
adc
aad
add
loope
mov
adc
add
test
das
push
in
sarb
add
mov
insl
xchg
adc
loope
testl
ljmp
add
loope
mov
addb
shll
sub
mov
test
into
adc
nop
and
out
fwait
int
test
jge
and
mov
adc
push
add
cli
add
push
mov
dec
mov
adc
fwait
testb
mov
stos
imulb
out
popa
call
add
add
lock
add
jle
insl
adc
add
movsl
adc
and
out
cltd
stos
rcll
sbb
dec
pusha
add
lcall
rorl
add
fwait
mov
mov
add
mov
push
add
test
lock
outsb
and
add
mulb
adc
adc
loopne
ret
fwait
out
add
out
lret
inc
jb
loope
test
add
push
repz
mov
push
or
push
or
es
nop
add
inc
es
bound
adc
loope
out
jo
mov
add
jae
add
test
fwait
and
or
fwait
sbb
sub
dec
add
loope
shl
or
sub
add
add
jo
add
and
rolb
insl
adc
insl
adc
insl
adc
and
mov
add
mov
add
pop
dec
mov
adc
push
nop
adc
add
xchg
add
gs
lret
out
add
push
fld
add
adc
out
sbb
cmc
les
lret
loopne
add
ficoms
nop
push
and
jecxz
or
cli
and
gs
dec
mov
mov
adc
add
addb
xchg
pop
push
push
rorb
mov
mov
mov
xchg
sbb
add
out
lcall
sub
and
mov
adc
ljmp
mov
push
loopne
add
dec
rorl
xchg
or
cs
and
mov
add
or
adc
addr16
dec
loop
rorw
xor
push
pusha
das
addr16
push
insl
mov
in
lcall
sbb
mov
and
inc
insl
mov
into
mov
scas
mov
or
mov
pop
mov
push
insl
mov
stos
out
add
mov
in
mov
jp
add
jo
adc
push
arpl
xchg
pop
test
add
add
sbb
xchg
adc
jmp
push
jo
addr16
lret
add
add
gs
aad
lcall
fwait
adc
and
jo
jmp
stos
adc
imul
lcall
add
inc
scas
lcall
sti
test
inc
add
adc
adc
push
jo
test
stos
push
add
daa
add
imul
ljmp
in
xor
sbb
lcall
adc
xchg
out
xor
xor
push
mov
loope
add
inc
mov
inc
rclb
adc
es
or
add
or
insl
xchg
andb
mov
or
adc
add
lds
dec
loop
adc
inc
cs
add
insl
xchg
push
inc
add
sarl
imul
pop
repz
xchg
cmp
adc
pop
lock
les
add
xchg
add
add
pop
xchg
inc
insl
add
push
arpl
dec
insl
push
or
rorl
bound
and
insl
add
add
or
and
roll
xor
mov
or
ja
add
stos
and
out
add
push
cli
loopne
mov
in
mov
xchg
inc
incb
sbb
rorl
push
and
mov
jecxz
add
and
loope
addr16
and
mov
sub
push
pop
adc
adc
mov
ljmp
adc
addr16
add
cmpsb
adc
scas
push
aam
cs
loop
and
rolb
mov
jno
nop
xchg
and
xor
lret
addr16
add
idivl
cmp
scas
add
add
push
out
lods
add
mov
stos
push
incl
cs
fstpl
aad
fwait
sti
mov
xor
add
push
loope
adc
mov
mov
sub
add
sti
into
ljmp
gs
adc
outsb
add
xchg
push
fwait
jmp
mov
add
add
cs
mov
scas
push
push
addb
add
jecxz
add
add
fwait
idivl
mov
inc
add
adc
mov
mov
sub
data16
scas
add
sub
inc
push
test
xchg
push
lods
and
push
enter
add
sbb
into
mov
aaa
imul
sti
mov
bound
sub
lret
adcb
lret
inc
lcall
add
rolb
lcall
repnz
pop
outsb
add
cli
test
ljmp
add
lcall
aas
push
subb
jb
adc
sub
add
lcall
mov
fwait
add
adc
adc
subb
movsb
test
mov
cli
add
add
adc
dec
lods
add
push
movsb
mov
add
sbb
add
in
sub
add
cli
arpl
pop
scas
call
int
test
mov
aad
popf
cmc
add
mov
sbb
fwait
or
lahf
mov
push
movb
pop
jmp
fstpl
addb
sub
sub
addl
rclb
mov
sbb
lea
out
add
gs
add
add
inc
shrb
in
add
add
test
inc
add
in
addb
addr16
imul
add
loop
aaa
addr16
add
out
sbb
cmc
cs
sub
lds
loop
mov
roll
push
insl
aad
lcall
adc
pushf
test
aas
add
insl
mov
or
gs
add
loope
mov
add
lret
outsl
or
loope
add
in
std
in
aas
aad
out
pushf
clc
shrb
aad
cltd
loopne
gs
loop
aam
aam
add
addr16
xchg
adc
in
mov
add
pop
out
mov
cs
mov
inc
xor
add
xor
fnsave
gs
gs
fidivrs
test
add
mov
adc
ret
stos
push
aad
sbbb
scas
sarb
addr16
and
mov
push
xor
adc
adc
mov
xor
fwait
push
orb
cmp
or
add
adc
mov
fwait
sar
add
add
push
ret
or
stos
inc
lds
push
inc
sub
inc
push
dec
pusha
inc
mov
add
xchg
add
add
test
push
outsb
add
faddp
mov
insl
xchg
ljmp
addr16
ss
add
add
in
pusha
sub
pop
loopne
mov
xor
in
add
stos
or
xor
in
addb
xchg
jmp
add
add
in
mov
loop
add
mov
insl
sub
add
add
add
jecxz
adc
add
xor
pop
push
xor
scas
rorb
gs
add
and
loopne
cli
cwtl
nop
test
adcb
arpl
out
adc
stos
add
addr16
push
xlat
icebp
lcall
fwait
out
add
stos
or
add
ljmp
popa
adc
fs
loopne
add
adc
or
bound
push
sub
add
adc
add
push
push
in
add
aad
mov
fcoml
pusha
xchg
inc
pop
push
add
adc
out
add
add
insl
lret
inc
add
mov
addb
sti
bound
add
dec
dec
and
sti
and
loope
pop
repz
roll
push
ds
fiadds
sarb
loope
gs
sub
arpl
cli
add
add
arpl
cmpsb
nop
mov
add
sti
add
adc
sarl
inc
adc
mov
popa
push
add
cmc
push
or
loop
lret
gs
pop
jmp
add
add
mov
ret
adc
mov
addb
sbb
cli
mov
fucomi
sbbb
and
loop
add
in
and
inc
xlat
stos
lret
jecxz
or
inc
mov
andl
add
push
mov
or
lea
adc
outsl
add
mov
adc
push
and
popa
movsl
loope
faddl
ljmp
mov
shlb
mov
add
push
add
push
and
add
jmp
add
lret
add
add
subb
mov
add
stos
lret
lea
lea
mov
mov
add
adc
push
in
gs
or
sti
mov
xor
ljmp
mov
mov
push
lret
adc
out
inc
or
cmp
sub
add
mov
sbb
add
mov
out
cmc
lcall
sti
push
inc
add
add
mov
push
mov
loopne
pusha
arpl
mov
sbbb
nop
ret
insl
adc
out
fwait
jecxz
or
fwait
out
xchg
scas
scas
add
mov
int3
dec
pushf
fldl
mov
stos
inc
or
add
adc
loopne
and
gs
xor
push
inc
loopne
gs
addr16
out
push
orl
sub
pop
shll
das
insb
mov
add
lcall
popf
add
add
imul
cmpsb
lcall
add
adc
test
icebp
sbb
push
add
add
adc
dec
and
and
cmp
or
es
add
adc
push
aas
aam
add
nop
push
mov
stos
out
es
rcrb
ljmp
sbb
add
cwtl
ljmp
sub
push
add
xor
cwtl
roll
mov
insl
rclb
push
lcall
and
imul
jo
fwait
cld
es
add
add
add
addr16
jbe
stos
aad
pushf
sub
mov
lock
insl
sub
push
and
mov
mov
rclb
lcall
arpl
arpl
xor
inc
rolb
cmp
xor
sub
pop
sti
mov
loope
sbb
push
ljmp
inc
add
add
cs
pop
gs
adc
mov
scas
pushf
in
test
ljmp
xor
mov
adc
jmp
push
pushf
cmp
pop
out
mov
mov
sub
outsb
pop
out
lcall
jmp
out
add
ljmp
add
aam
popf
inc
in
fs
loope
cs
aas
out
mov
push
ss
test
fidivrs
loope
daa
arpl
lcall
inc
add
loope
cmp
mov
loope
pop
stos
adc
add
pop
xor
loope
inc
sbb
mov
cs
loope
jbe
mov
mov
mov
insl
mov
loop
in
aaa
insl
xchg
incb
and
nop
push
in
sub
push
mov
sbb
pop
and
pusha
add
out
add
stos
pushf
xor
mov
in
mov
fwait
std
nop
jl
sub
std
ljmpw
pushf
sbb
outsl
add
add
incl
push
in
mov
jo
push
mov
nop
adc
fisubs
fnstsw
cs
push
addr16
xlat
and
xor
mov
xor
add
mov
aad
loope
pusha
jo
add
add
jmp
adc
mov
shlb
sub
push
addb
gs
aad
add
xchg
mov
xchg
add
add
gs
gs
push
add
aad
test
xor
mov
xchg
loopne
add
add
test
xchg
sbb
aad
fwait
add
addr16
push
addr16
push
aad
xchg
push
xchg
in
jo
insl
xchg
push
add
nop
out
xchg
push
xchg
in
subb
rolb
test
fwait
cli
xchg
add
xchg
or
push
lds
mov
lods
addr16
push
lds
or
push
loope
aaa
lods
add
cmp
inc
sbb
xor
out
add
push
add
cmp
push
outsb
xchg
add
add
in
fwait
in
arpl
mov
loope
mov
popa
pop
sbbb
stos
ss
add
loop
jmp
data16
test
cs
es
mov
rolb
mov
in
data16
add
or
sbb
pusha
ds
xchg
lods
nop
test
aas
adc
cmp
adc
lock
adc
cli
roll
fwait
out
mov
add
aas
data16
xchg
or
adc
stos
sbb
add
aad
mov
push
xor
xlat
add
bound
mov
cmp
mov
add
nop
adcl
andb
mov
lods
movsl
add
xor
sbb
cmpsb
push
sbb
cmpsl
repnz
and
cli
gs
or
adc
sbb
stos
adc
add
stos
adc
addr16
add
aad
loope
arpl
lds
mov
add
mov
loope,pt
bound
add
jo
stos
ds
mov
adc
sbb
xchg
das
inc
sbb
and
xchg
add
gs
add
pop
mov
add
orb
sbb
fwait
push
push
sub
adc
xor
push
mov
push
insl
push
mov
loopne
add
jmp
addr16
ss
sub
stc
xor
cmp
sub
xor
or
add
mov
aam
adc
adc
push
add
stos
add
aam
stc
fwait
sti
adc
adc
xchg
ss
add
sub
cmp
add
cwtl
out
stos
adc
stc
mov
mov
adc
mov
jmp
aam
sub
or
loopne
adc
stos
sub
outsb
xchg
adc
jno
rcrb
add
out
xchg
cmp
fs
xchg
adc
lock
add
mov
ljmp
add
out
mov
test
out
jo
adc
data16
adc
adc
sub
movsb
sbb
cwtl
push
push
inc
imul
dec
fadds
rcll
adc
sbb
adc
sub
out
nop
adc
adc
nop
adc
jb
pusha
test
add
in
xorb
adc
in
add
gs
add
insl
cmpl
aad
loope,pn
bound
push
xor
push
or
and
add
bound
mov
shll
ror
xchg
pop
ret
cmp
addr16
push
insl
loop
dec
rcrb
cmp
bound
loopne
adc
add
inc
xor
daa
add
pop
loop
mov
lods
and
addl
cmp
rolb
xorl
mov
jo
mov
repnz
mov
gs
mov
pusha
and
xchg
fwait
ret
cmp
mov
aad
sbb
cmp
rcrl
les
rolb
in
daa
or
mov
gs
push
adc
inc
lds
gs
adc
push
in
inc
ss
push
addr16
cmp
dec
push
aas
call
in
cmp
cmp
xor
cmp
inc
data16
mov
add
pusha
cmp
addr16
cmp
stos
pusha
int
mov
cmp
pop
add
cmp
xchg
push
adc
mov
jge
out
aas
mov
fidivrl
ss
mov
push
out
mov
and
test
loope
push
sbb
fnstsw
mov
in
daa
out
mov
stos
cli
loope
mov
add
adc
loop
mov
sub
sub
add
cs
add
mov
cmpsl
repnz
add
cli
gs
mov
in
adc
sbb
stos
add
add
stos
adc
addr16
addr16
push
stos
add
add
loope
or
add
lds
es
gs
push
addr16
loope
push
add
sub
stos
and
add
stos
and
push
addr16
das
xchg
in
inc
stos
push
gs
add
add
ss
mov
mov
mov
adc
add
adc
inc
mov
mov
sbb
xor
sub
push
add
push
add
or
add
loopne
sub
add
fwait
pop
addr16
stos
sub
sub
stc
out
add
nop
mov
xchg
push
add
fwait
call
mov
add
add
adc
xchg
inc
or
fwait
out
adcb
addr16
fwait
stc
adc
stos
or
sub
mov
in
insl
xchg
cmp
andb
xchg
push
add
gs
add
aad
or
stos
andb
add
and
push
xor
adc
call
hlt
outsb
loope
add
loopne
pop
ds
push
adc
data16
loopne
inc
adc
add
sub
outsb
xchg
stc
add
loope
je
add
outsb
add
out
xchg
add
lcall
in
mov
xor
lcall
jmp
add
xchg
adc
adc
mov
fwait
ds
loopne
fwait
sub
fwait
adcb
add
adc
push
imul
das
add
add
orb
jmp
stos
adc
stos
adc
js
ret
add
sub
rorb
insl
stos
push
add
aad
adc
bound
add
rolb
andl
add
loope
int3
rolb
daa
sub
add
add
test
jl
mov
xchg
add
xlat
mov
cmpb
add
or
push
mov
aad
loope
outsb
addb
das
paddsb
in
mov
mov
arpl
push
rolb
gs
shrb
ss
push
xlat
rolb
in
movsl
gs
adc
add
mov
mov
push
fwait
call
xchg
sbb
aad
fwait
call
addr16
sbb
xchg
adc
inc
xchg
xchg
sbb
jg
out
add
add
push
add
das
or
in
test
xor
fwait
cli
xchg
add
add
push
lds
mov
lods
addr16
sbb
mov
lds
loope
aaa
lods
addr16
add
loope
sbb
xor
add
push
add
addr16
add
arpl
mov
loope
mov
dec
xorb
stos
rolb
fwait
cmc
inc
sub
loop
mov
add
data16
adc
insl
sub
mov
ljmp
add
add
arpl
ret
or
insl
sub
inc
push
add
add
mov
sub
push
add
adc
aas
addr16
push
mov
add
push
adc
fwait
mulb
out
or
jge
scas
aad
ss
or
pop
adc
stos
push
out
mov
mov
adc
and
inc
cmp
cmp
out
mov
addl
pop
addl
and
add
andl
add
subl
sbbl
sbb
and
push
and
pop
add
loope
push
bndldx
inc
mov
and
gs
add
pop
stos
cmp
cmp
nop
mov
add
stos
mov
mov
mov
stos
std
inc
jge
addl
loope
xchg
add
push
cwtl
out
leave
mov
inc
stos
xor
push
add
lcall
cmpb
gs
add
mov
out
add
incb
inc
rolb
data16
lock
loopne
out
inc
insl
sub
outsb
xchg
std
pusha
orb
fldenv
jmp
mov
inc
jg
loop
gs
and
and
add
addr16
pop
mov
data16
or
sub
lock
and
push
mov
mov
push
sub
pop
das
add
in
and
arpl
lock
loope
out
popa
subl
loopne
insl
stos
push
pusha
addl
pusha
add
loop
add
loope
jle
sbb
mov
in
fwait
loop
xor
cwtl
into
gs
fnstsw
sbb
adc
loope
test
out
add
in
ss
cli
add
mov
scas
in
stos
loop
cmp
and
out
fwait
aad
sbb
fisubl
imulb
pushf
sbb
in
addb
mov
std
outsb
adc
and
adc
and
mov
adc
adc
sbb
and
loope
mov
stos
mov
mov
cmp
in
add
loope
lahf
jmp
loope
testl
cmp
mov
mov
inc
addb
addr16
and
and
inc
push
lds
pop
adc
test
popf
jmp
addr16
push
add
push
cmpb
in
add
mov
loope
lcall
pop
loope
add
loope
xor
xlat
popa
iret
gs
or
lds
mov
or
mov
mov
fwait
push
sub
insl
movl
and
sbb
pop
test
rcrb
arpl
xchg
add
addr16
push
loope
cltd
fisubs
in
stos
push
in
mov
data16
mov
loopne
outsb
xlat
dec
shrb
rcrb
push
sbb
fisubrs
out
fwait
shll
xor
cmp
in
sub
addr16
add
popf
mulb
cli
lds
add
and
aam
loope
imul
lock
cs
add
add
ds
imul
add
in
fwait
scas
gs
xor
xor
mov
in
ds
popf
repz
lds
push
in
pop
addr16
cs
adc
mov
nop
jb
fwait
mov
xor
sub
add
mov
cwtl
and
rcll
ljmp
xchg
add
xchg
add
or
add
add
ficomps
ljmp
pop
push
sbb
or
adc
lret
add
mov
out
stos
adc
pop
add
arpl
push
stos
mov
mov
xor
push
imul
loope
push
rolb
gs
add
stos
add
and
mov
sub
mov
mov
add
push
mov
ljmp
and
loope
arpl
adc
dec
mov
add
add
cmpsb
cmpsb
lcall
add
gs
stos
ds
js
adc
add
mov
inc
add
std
dec
add
xor
or
cs
stos
and
or
rclb
mov
or
inc
adc
mov
push
pop
mov
add
fwait
jmp
test
mov
xlat
mov
xor
ds
mov
sub
push
jno
out
add
lcall
xor
fwait
out
arpl
adc
jmp
sbb
sbb
pusha
adc
movb
rolb
add
xchg
mov
add
adc
inc
out
lcall
mov
subb
out
addl
mov
out
fildl
adc
and
sti
and
scas
pusha
jge
sbb
loope
adcb
insl
xchg
out
add
mov
mov
and
xchg
adc
mov
in
add
lods
loopne
loope
mov
mov
scas
add
maskmovq
idivl
add
arpl
test
mov
mov
add
inc
or
xor
imul
lock
test
push
push
in
data16
fsubp
pop
loope,pn
das
addr16
test
inc
in
and
push
adc
add
add
arpl
jo
data16
sub
xchg
loopne
loope
cs
test
shr
fwait
test
xor
fwait
stc
sub
add
sub
inc
sub
add
into
fwait
sti
mov
add
daa
mov
push
add
sbb
mov
arpl
test
mov
push
cmp
arpl
enter
push
sub
add
lock
lock
push
pop
lock
fistpll
adc
fs
data16
add
pop
test
loope
test
or
test
push
insb
lcall
addr16
pusha
adc
adc
adc
push
push
adc
test
adc
jno
out
mov
add
gs
call
add
add
add
mov
fstpl
gs
push
sbb
add
cwtl
ljmp
cwtl
repnz
pop
enter
mov
push
pop
jb
stos
push
pop
jo
sub
sub
inc
adc
rcrb
lret
add
nop
push
and
pop
in
das
and
jno
cmp
das
or
in
mov
out
das
and
popa
adc
push
push
scas
pusha
cmp
sbb
add
ret
ljmp
loopne,pn
xor
outsl
add
gs
mov
test
xchg
scas
scas
add
add
loope
adc
add
add
test
mov
add
jo
test
mov
arpl
stos
and
push
test
and
adc
loope
and
and
cmp
adc
add
or
arpl
add
pop
add
adc
mov
das
loopne
jmp
sub
push
add
mov
imul
loope
add
test
add
cltd
adc
inc
es
and
xor
in
or
push
mov
int
das
push
or
in
add
push
das
pop
out
das
or
popa
adc
and
mov
ficoml
or
add
and
cmpsb
loope
int3
pusha
add
ret
packsswb
sbb
arpl
out
add
gs
and
adc
call
or
add
add
push
adc
adc
loope
xor
add
fwait
decb
pusha
add
fwait
mov
xor
inc
add
and
pop
in
out
outsl
lods
lock
pusha
inc
mov
in
add
xchg
adc
add
sub
and
cmp
cmp
inc
pop
test
arpl
and
jo
stos
dec
or
stos
dec
inc
add
test
dec
arpl
aad
or
test
mov
inc
or
je
jo
gs
clc
add
add
push
and
add
gs
add
and
add
rolb
aaa
adc
mov
add
cmp
and
and
fwait
add
mov
loope
push
add
adc
cs
add
insl
push
adc
loope
push
mov
sti
and
add
addr16
jo
xchg
cli
add
adc
adc
subb
incb
push
insl
mov
add
or
adc
andl
mov
jmp
cwtl
movsl
pusha
add
jmp
sub
push
jno
aad
push
push
push
add
roll
gs
add
jo
push
fwait
cld
adc
out
and
add
push
loope
lock
out
out
movsb
push
pushf
adcb
stos
rclb
aad
push
pushf
js
inc
or
loope
lds
cmp
lret
mov
add
add
out
adc
and
fcoml
and
ljmp
repnz
rolb
cmpsb
xor
mov
adc
add
nop
push
inc
mov
dec
add
add
ljmp
cmc
add
mov
add
or
push
push
pop
ljmp
sub
mov
pop
mov
lret
add
adc
andb
add
in
add
or
outsl
verr
add
aas
add
push
out
or
in
andb
scas
loope
movl
int3
adc
gs
imul
loope
hlt
add
fcoml
fwait
push
sub
in
adc
gs
inc
adc
add
pop
and
adc
ss
out
sahf
jmp
and
add
aaa
in
addb
mov
stos
pop
out
add
sbb
adc
add
xchg
sti
dec
cli
scas
add
mov
aaa
loope
stos
cmp
xlat
stos
pop
fwait
in
or
sbb
add
fs
ss
outsb
pxor
out
aam
add
frstor
add
mov
cmpsl
insl
orb
insl
das
in
add
loop
das
ljmp
outsb
or
adc
adc
das
out
or
sbb
incb
sbb
add
lret
es
loope
cmpsb
insl
add
push
insl
cs
in
sbb
stos
push
out
out
xchg
outsl
inc
and
out
add
add
data16
test
add
adc
pop
nop
stos
sbb
pop
mov
cmp
mov
adc
xchg
jmp
push
add
fiadds
add
xchg
jp
loope
loope,pn
add
add
jns
ds
nop
pop
outsl
or
fucom
aas
add
sub
dec
add
adcb
adc
das
add
addb
pop
push
adc
push
out
stos
mov
roll
mov
push
push
sbbb
pop
and
add
add
cmp
and
sbb
daa
fldl
adc
and
mov
gs
add
jmp
adc
cmp
test
xchg
push
pushf
add
add
fwait
notl
stos
push
add
arpl
into
adc
inc
sahf
adc
add
add
add
test
sbb
push
pop
movb
and
sub
fwait
out
sub
or
mov
arpl
cmc
test
pop
addb
sbbb
insl
lea
adc
mov
pop
out
in
mov
cmpsb
mov
cmpb
push
das
or
in
arpl
insl
sbb
add
xchg
rorb
sbb
pop
push
sub
ret
ds
add
add
cs
add
adc
cmpsb
popf
mov
add
das
paddsb
push
in
add
gs
gs
das
or
add
int
in
loope
and
rol
sbb
int
in
fbld
add
jmp
xlat
add
call
mov
mov
decb
pushf
pop
add
add
mov
int
in
and
adc
out
sbb
pop
add
mov
in
add
push
jmp
ret
insl
add
jecxz
adc
adc
out
fildl
adc
and
cmpb
add
adc
adc
inc
sarb
popf
or
push
cmc
shlb
repnz
sub
shrl
in
push
outsl
loopne
sub
arpl
and
inc
pop
lcall
lcall
add
outsb
xchg
pop
add
inc
inc
push
add
addl
pop
add
add
pop
arpl
add
push
xor
adc
add
lods
scas
add
mov
xchg
cli
add
cli
adc
lret
scas
add
xchg
add
mov
adc
dec
adc
add
inc
add
add
mov
add
incb
add
fs
movsl
fnstsw
ret
fwait
jmp
test
mov
ljmp
fs
outsb
pop
add
xchg
stc
mov
add
pop
in
add
fsubp
add
loopne
in
or
out
shlb
in
lcall
jmpw
add
sub
add
mov
insl
xchg
lret
mov
pop
out
ret
pop
in
repnz
pop
jecxz
add
in
xchg
add
in
or
subb
in
loopne
adc
pusha
add
pop
loop
add
outsl
add
imul
imulb
leave
add
add
nop
repnz
pop
and
add
cltd
add
xlat
stos
lret
add
mov
out
add
cli
loope
mov
jnp
popa
add
movsb
nop
xlat
pusha
add
test
sub
test
rorb
fldl
cs
out
sbb
sbb
jecxz
sbb
sub
add
mov
lret
add
lcall
add
adc
insl
mov
pusha
sbb
add
xchg
cli
mov
sub
addb
add
push
rcrb
mov
push
sarb
pop
add
arpl
and
add
add
add
sub
scas
add
pop
loopne
gs
out
lods
cli
stos
push
arpl
lods
ljmp
or
lahf
enter
es
add
gs
add
gs
sbb
xchg
in
arpl
sbb
lcall
out
add
xor
or
jb
sarl
adc
add
pop
ss
add
add
loopne
inc
or
pop
subb
add
mov
add
push
ja
add
mov
sub
stos
adc
add
adc
imul
add
mov
loope
pop
cmpsl
adc
mov
add
gs
add
mov
gs
cmp
sub
lcall
xor
fisubrs
fwait
xrelease
xchg
xor
sarb
gs
ficompl
ss
adc
stos
adc
add
push
dec
add
fcom
ss
cmpsb
push
ficomps
rolb
adcb
aad
add
fs
insl
sub
push
add
loopne
mov
sub
imul
add
arpl
jae
add
push
int
xor
or
jne
add
push
mov
dec
add
loopne
pop
pop
pusha
xor
add
and
gs
mov
sbb
sbb
in
mov
adcl
fimuls
out
imul
add
ss
or
pusha
or
pusha
or
popa
or
out
push
fwait
out
or
pusha
or
adcb
cmpsb
lcall
test
jmp
add
add
call
fwait
inc
push
dec
add
add
loope
in
mov
test
mov
xchg
jle
push
gs
add
mov
imul
clc
adc
sarb
gs
mov
lcall
adc
fs
push
in
insl
stos
sbb
out
stos
push
ljmp
insb
xor
lock
adc
insl
mov
add
pusha
dec
sub
mov
loopne
add
fisubl
mov
mov
nop
add
mov
out
mov
nop
add
ljmp
jle
sbbb
fwait
jo
mov
push
adc
inc
ljmp
adc
add
sti
xchg
add
test
aad
fwait
ljmp
out
mov
mov
lret
ss
inc
ljmp
add
mov
fwait
push
xor
adc
and
stos
add
add
push
add
dec
loope
adcl
data16
movsl
sub
test
mov
adc
sbb
add
sub
sub
stos
adc
loope
add
gs
jmp
push
stos
push
and
jo
loope
pop
test
cmpsb
and
add
arpl
mov
stos
in
fwait
adc
arpl
imul
loope
jl
add
cli
mov
and
fwait
shlb
and
loopne
adc
and
mov
push
scas
add
xlat
lcall
repz
lcall
push
and
aad
sbb
mov
mov
inc
adc
pusha
or
xor
xchg
xor
stos
and
nop
loopne
test
add
pusha
add
or
fwait
loop
pxor
sbb
add
adc
adc
loope
lock
nop
add
adc
fwait
gs
adc
sub
loop
inc
add
add
insl
nop
sahf
add
stc
loopne
repnz
data16
adc
add
sarb
addr16
add
or
xchg
loope
insb
jg
movsl
adc
rolb
sti
bound
or
push
repz
mov
out
xor
xlat
mov
loope
aaa
and
sbbb
imul
loope
and
notl
es
adc
addr16
push
pop
sub
sbb
add
gs
imul
lock
lods
sahf
add
pusha
add
gs
sbb
add
sbb
clc
int
test
cli
arpl
insl
cs
or
clc
scas
add
out
stos
adc
test
lcall
pushf
jb
fiadds
fwait
sbb
out
aas
filds
and
in
mov
add
push
and
clc
xor
mov
xor
gs
mov
jmp
rclb
or
fwait
push
inc
syscall
sti
mov
push
inc
ret
out
cmp
add
in
mov
shll
daa
fldl
cmp
mov
arpl
cltd
mov
sarb
add
repnz
lods
aad
mov
aad
lcall
daa
lcall
and
rorb
xor
or
scas
add
mov
addr16
mov
cmp
mov
arpl
sarl
pop
insl
sub
arpl
test
mov
cmp
arpl
add
adc
gs
jno
push
push
add
sub
pop
adc
std
inc
add
mov
out
lcall
movaps
mov
jmp
mov
mov
fldl
jno
cld
push
add
ljmp
nop
sbb
adc
jbe
add
fiadds
mov
sti
adc
lods
aad
mov
fstpt
adc
and
cltd
mov
gs
jmp
add
arpl
or
mov
add
add
ror
scas
add
adc
cmp
and
mov
lods
mov
shlb
rorb
mov
loopne
enter
mov
jb
push
add
mov
repnz
adc
ret
inc
sub
adc
add
sub
gs
out
add
cs
sbb
cmc
adc
push
inc
dec
nop
jns
xor
insl
sub
shlb
xor
fstpl
add
dec
cwtl
mov
mov
gs
daa
lcall
into
gs
incb
insl
das
clc
sbb
cmc
cs
das
test
insl
cs
sub
add
ficompl
push
fists
push
dec
lods
mov
or
test
add
inc
inc
and
adc
push
pop
add
mov
or
inc
ret
insl
mov
add
and
imul
jo
push
push
sub
mov
add
rclb
jge
add
sbb
mov
insl
push
out
add
add
add
scas
out
add
add
mov
insl
mov
and
daa
scas
aad
shlb
xor
xor
aas
stos
adc
rorl
aas
push
or
icebp
push
arpl
mov
push
cmp
lcall
mov
arpl
mov
xchg
push
add
jnp
xchg
jnp
add
lock
pushf
ss
mov
and
add
add
les
push
xor
ja
push
pop
out
adc
scas
add
stos
adc
aam
popa
test
mov
jo
add
add
test
xor
jno
pop
lcall
mov
add
add
mov
test
ljmp
adc
out
mov
data16
pop
xor
add
insl
add
test
arpl
stos
cs
mov
cmp
cs
ljmp
add
stos
adc
pop
inc
cld
adc
mov
outsb
add
arpl
add
add
mov
add
add
pop
outsb
add
outsb
xchg
pop
add
loope
movups
adc
test
out
sti
add
inc
arpl
add
mov
cs
enter
sbb
in
fldl
cs
imul
std
add
addr16
ljmp
add
add
stos
cs
pop
add
sbb
add
nop
out
addl
add
fwait
add
add
mov
daa
add
add
add
mov
adc
stos
push
add
stos
push
xlat
lods
mov
add
add
lods
stos
sbb
add
fwait
out
and
add
imul
loope
add
stos
loop
fwait
add
sub
ljmp
pop
orb
lcall
push
mov
add
insl
sub
and
mov
inc
add
fwait
add
adc
inc
add
add
out
cmpb
andl
pop
subb
subb
add
or
orb
orl
add
out
xchg
filds
addb
xlat
nop
loopne
popf
jmp
addb
es
inc
stos
push
add
sbb
aad
ja
cli
adc
add
dec
add
adc
lcall
fsubs
adc
mov
daa
sub
add
jno
sti
sbb
insb
sbb
ss
sbb
sub
aam
sub
outsl
add
sbb
add
mov
pop
xchg
subb
nop
lret
push
add
imul
lret
add
repnz
stos
lret
stos
lret
mov
push
sahf
dec
subb
lret
ss
sbb
rorb
daa
inc
pop
mov
inc
pop
inc
pop
rolb
push
addb
adcb
rolb
mov
ret
xchg
push
add
adc
test
push
scas
add
adc
imul
jecxz
add
mov
xchg
ljmp
sbb
mov
adc
fwait
in
sub
int
addb
arpl
repnz
adc
loope
test
add
add
lret
rcrb
ljmp
adc
xchg
lcall
aad
pushf
mov
sbb
adc
add
repnz
adc
cmp
push
orb
test
fwait
jecxz
and
rcrb
add
rorb
sub
loope
inc
add
imul
xlat
cmpsb
ljmp
outsb
xchg
lret
pushf
or
push
inc
or
inc
pusha
imul
push
add
mov
fcoms
sti
mov
scas
add
add
mov
add
mov
jnp
pusha
push
loope
out
push
rorb
cli
sbbb
gs
xchg
add
inc
loope
adc
imul
lcall
nop
in
addr16
ljmp
add
jns
add
add
xor
icebp
mov
xchg
lret
gs
incl
ret
js
add
pusha
sbb
add
mov
add
or
add
add
out
lcall
add
sub
push
insl
inc
pop
and
mov
ret
add
rolb
rolb
inc
sbb
inc
sbb
mov
add
mov
add
add
gs
push
rclb
mov
sub
adc
or
aad
mov
push
mov
push
loope
outsl
add
add
lcall
mov
adc
mov
add
sti
mov
testb
mov
add
popa
push
sbb
or
or
push
imul
and
add
arpl
roll
inc
push
mov
ficomps
and
mov
out
inc
movsl
fwait
in
add
pavgb
fsubrl
add
pop
out
add
adc
mov
aam
loopne
xor
inc
adc
int3
das
mov
gs
testb
xchg
loop
mov
add
stos
add
add
add
mov
adc
arpl
inc
or
pusha
adc
hlt
loopne
and
xrelease
and
loope
sub
add
add
or
cs
loopne
cs
sub
and
push
adc
sti
addb
sbb
mov
addb
add
andb
mov
nop
out
stos
loope
mov
mov
inc
pop
add
insl
adc
out
gs
fwait
loop
fstpl
add
add
and
and
pusha
xor
pusha
dec
and
gs
popa
add
and
loopne
mov
mov
xchg
adc
adc
add
cmpsb
loope
and
and
xchg
in
add
frstor
mov
test
xchg
adc
pop
xchg
adc
test
pusha
aaa
repz
cld
lock
rcrb
jecxz
gs
aad
stos
add
add
stos
adc
ljmp
loopne
outsl
adc
add
dec
push
and
inc
push
call
ljmp
add
xchg
arpl
xchg
das
in
push
gs
sub
dec
add
inc
loop
pusha
shlb
push
adc
sub
or
loop
fisubs
test
push
loope
or
loopne
popa
add
mov
mov
loopne
ljmp
sub
fs
loope
pop
cmp
out
lret
add
sbb
sbb
jmp
mov
sbb
pop
add
cmc
cmp
insl
or
insl
sub
add
mov
fisttps
in
mov
sub
lahf
fwait
in
or
add
in
cs
add
mov
loop
pop
fsubp
sub
inc
or
cmc
and
sub
ljmp
ljmp
add
and
add
and
in
pop
in
and
loop
sbb
xor
sarb
add
add
insl
adc
xor
test
sti
add
push
arpl
or
rcr
add
add
mov
scas
gs
xor
insl
adc
sbb
add
adc
cmp
cmp
andb
in
push
pop
out
sbb
stc
jo
mov
cli
arpl
mov
push
mov
in
sbb
and
aad
xchg
outsb
ss
mov
xlat
shll
jno
out
add
push
add
and
and
mov
mov
add
mov
mov
adc
fnstsw
addb
loope
add
mov
out
add
sbb
call
ds
push
lds
add
mov
daa
adc
clc
xor
movsb
cmp
ljmp
aad
cwtl
loope
add
in
loop
mov
jnp
or
mov
push
loope
call
mov
out
jmp
sbbb
lock
jmp
jmp
add
jno
add
jmp
lock
push
lcall
xor
ljmp
sub
add
cs
out
xor
adc
loop
mov
adc
xor
loop
insl
into
add
adc
loope
adc
imul
shlb
add
add
insl
xchg
sbb
xor
aad
popf
loop
cmp
mov
shlb
sbb
lds
scas
xor
arpl
adc
jmp
xor
arpl
arpl
out
icebp
sbb
push
mov
and
mov
xor
adc
addr16
rolb
sbb
adc
sub
arpl
data16
lcall
rcrl
adc
nop
add
fs
outsb
pop
into
lcall
pop
jo
lods
add
lds
add
fsubl
adc
xchg
adc
fs
sbb
ljmp
adc
and
push
or
ljmp
adc
stos
out
loope
loopne
adc
adc
and
daa
sub
addb
adc
nop
xor
adc
pusha
aas
add
adcl
insl
enter
cli
out
add
mov
loope
shrb
fs
pop
add
outsb
pop
out
jecxz
pop
or
xchg
out
adc
aad
pushf
push
or
add
xchg
add
xchg
add
outsb
adc
adc
addr16
adc
inc
add
out
jmp
add
nop
jmp
aad
pushf
add
add
lds
add
add
frstor
arpl
scas
cmpsb
outsb
mov
pop
sbb
das
out
lcall
adc
adc
adc
mov
call
add
fwait
in
xchg
addl
fwait
adc
inc
pop
loopne
mov
lcall
test
sub
fsts
ret
cmpsl
rolb
or
in
adc
and
btr
aad
sub
sbb
pop
out
insl
lock
insl
pop
out
loope
insl
pop
jecxz
in
loope,pn
push
aad
pushf
or
add
add
xchg
in
insl
pop
loopne
insl
pop
int3
adc
adc
loope
push
add
into
lcall
cwtl
add
insl
sub
aad
pushf
or
xlat
stc
fwait
clc
inc
adc
adc
in
mov
insl
jo
sbb
je
xor
adc
adcl
lods
adc
push
adc
adc
les
mov
leave
adc
adc
adc
jecxz
add
cmp
cli
mov
fstl
add
sbb
push
xlat
mov
loop
push
inc
mov
push
lret
add
add
push
into
lcall
call
jecxz
das
in
dec
loope
out
loope
or
adc
inc
arpl
xor
arpl
push
push
and
mov
xchg
push
add
sbb
cwtl
out
into
loopne
ljmp
mov
gs
add
adc
gs
push
arpl
add
adc
xchg
or
add
loopne
add
mov
ljmp
stos
loop
loope
mov
cs
pusha
adc
push
jo
add
push
popa
add
adc
mov
add
mov
fwait
loop
cmp
inc
add
jb
sbb
scas
pop
jle
add
pop
addr16
add
cmp
pusha
faddp
xchg
adc
loope
push
lds
sbb
mov
mov
fcmovbe
xor
lcall
pop
xchg
shl
add
mov
stos
loop
mov
add
xor
neg
and
imul
mov
icebp
lds
sbb
scas
aad
add
sbb
daa
inc
add
sbb
mov
xor
int
fwait
xchg
mov
or
adc
mov
mov
rorb
bound
pusha
add
or
add
rorb
iret
loope
pop
jmp
push
fwait
enter
adc
lcall
fcmovbe
lds
lcall
mov
rorb
rorb
repz
nop
add
pop
rorl
inc
ss
addb
add
add
lcall
daa
fwait
sbb
add
and
cld
inc
ss
aaa
mov
inc
sbb
mov
sbb
cs
mov
stos
adc
xor
adc
sub
cmc
mov
in
adc
arpl
fwait
adc
std
add
addr16
adc
out
dec
inc
add
scas
add
sub
test
mov
out
imul
mov
add
subb
adc
subb
shrb
add
jp
and
cmp
ljmp
adc
lcall
add
add
cltd
mov
add
add
and
xor
sbb
adc
lods
add
imul
fwait
jecxz
add
cmpsb
in
adc
iret
shlb
add
in
push
sub
adc
and
add
mov
add
loop
arpl
inc
gs
nop
imul
in
fadds
incb
add
mov
sub
sbb
fwait
add
fwait
loop
mov
sbb
sub
mov
sub
or
addb
or
subb
mov
and
pop
subb
sti
add
adc
sub
add
xchg
sbb
cs
adc
add
add
add
sub
add
add
int3
lcall
in
add
imul
out
mov
mov
addr16
insl
sub
mov
das
in
loope
and
add
and
add
sub
ljmp
in
out
jecxz
jmp
add
and
add
ljmp
add
aad
popf
loop
xlat
jecxz
fwait
jmp
in
xor
loopew
sbb
test
add
mov
test
inc
mov
add
or
insl
mov
add
fnsave
cwtl
add
gs
in
sub
add
gs
lds
arpl
push
push
push
adc
add
push
fwait
loopne
aad
add
pushf
xor
cli
addr16
testb
or
testb
fcmovu
cs
adc
cli
stos
push
pusha
xlat
test
loope
addb
scas
add
sbb
push
mov
out
lock
std
adc
loope
and
andb
add
sub
loope
or
push
add
mov
adc
das
loop
lods
add
das
out
repz
negl
add
movsb
addb
outsb
sub
add
add
mov
cli
scas
add
loope
stos
adc
stos
rorb
xor
mov
cmpb
in
add
outsb
adc
fwait
icebp
mov
loope
fwait
xorb
sbbb
xlat
out
loope
xchg
add
test
shrl
in
imul
jecxz
imul
inc
aad
out
insl
stos
roll
push
ljmp
add
scas
mov
or
aad
aas
movsb
imul
add
out
cmpb
lcall
loopne
add
mov
ljmp
loop
in
lcall
pop
and
pop
adc
adc
mov
adc
stos
nop
cmp
stos
add
add
movl
mov
imul
cmp
dec
inc
add
add
mulb
push
pusha
and
and
arpl
mov
mov
das
daa
sub
scas
ljmp
outsb
das
les
add
iret
mov
mov
loop
insl
or
push
insl
add
mov
movb
gs
cli
push
and
xchg
and
rolb
mov
xchg
in
lods
add
cs
lea
lret
test
add
into
push
es
cmpsb
or
or
imul
mov
inc
inc
add
loopne
jmp
and
add
jmp
out
add
mov
pop
pusha
adc
add
add
and
adc
into
adc
cmpb
adc
inc
or
sub
into
add
and
gs
adc
sub
adc
mov
stos
ret
loope,pn
push
add
sbb
xor
add
loope
cmp
loopne
insl
xchg
loop
loope
and
inc
push
subb
push
addb
adc
add
push
loopne
add
add
or
add
jo
add
test
mov
push
add
sbb
sbbl
adc
fldcw
and
sub
add
adc
mov
scas
imul
add
jmp
repnz
fsubl
call
rolb
pop
addr16
pop
in
loop
add
xchg
outsb
add
test
add
pusha
adc
add
sub
mov
fs
andl
mov
lret
into
pusha
or
fwait
cli
loopne
fwait
incb
jne
add
vcvtsd2si
add
add
imul
mov
mov
rolb
lcall
lcall
add
sbb
add
lret
xchg
sbb
add
sbb
and
dec
jmp
add
push
bound
add
adc
incb
loope
cs
sub
fdivp
loopne
cmp
rcl
mov
mov
add
fs
faddl
aas
scas
data16
rorb
pushf
pop
mov
pop
scas
in
and
ljmp
fldl
cmp
add
xchg
add
loope
mul
pop
and
add
push
shl
mov
adc
push
adc
xor
int
inc
lods
mov
mov
sbb
mov
loope
orb
into
mov
data16
add
mov
out
addb
add
imul
add
or
and
out
add
stos
adc
pop
fwait
adc
call
pop
mov
out
bnd
cli
out
loope
loop
loope
add
outsl
smsw
push
fs
fsub
aam
add
test
sub
adc
or
mov
or
daa
mov
and
loop
push
push
arpl
mov
inc
adc
add
push
mov
mov
push
adc
incw
scas
or
push
gs
das
add
fs
mov
pop
mov
add
pminsw
out
ljmp
add
in
outsb
add
sbb
adc
or
das
or
subb
call
add
adc
add
cwtl
loope
loop
psrlw
add
add
add
iret
loope
sbb
loopne
sbb
loope
mov
mov
ljmp
cs
jmp
add
mov
data16
in
insl
cs
push
mov
mov
stos
out
daa
push
ja
dec
loop
mov
pusha
pcmpgtw
stos
sbb
or
loope
mov
mov
cmp
xor
adc
fwait
aad
adc
fs
add
insl
sub
arpl
scas
cmp
mov
jo
fs
pusha
push
xor
jecxz
pop
lret
sub
adc
int3
es
add
test
add
data16
adc
ljmp
mov
pop
fs
in
cs
ljmp
stos
adc
verw
in
adc
add
in
in
mov
adc
daa
stos
adc
cmp
sti
gs
sbb
jecxz
xor
call
add
aad
pop
loope
mov
sbb
or
out
jo
fs
adc
cwtl
cli
arpl
arpl
add
scas
cmpsl
fwait
sbb
lret
cli
mov
mov
adc
adc
loop
or
insl
into
add
add
arpl
mov
add
and
es
mov
and
push
add
loopne
test
aad
inc
pushf
sbb
gs
sbb
add
fs
fs
in
and
add
lock
mov
loop
ljmp
and
daa
sub
add
pusha
cs
insl
adc
lcall
orb
das
fs
les
push
add
sbb
addb
adc
adc
lock
imul
in
pusha
test
insl
add
lcall
lcall
or
push
sbb
add
add
mov
into
and
add
js
add
sub
ss
cmpsl
add
lcall
in
fnstsw
test
mov
inc
pop
das
push
in
add
add
adc
add
adc
lcall
inc
or
loopne
cmp
add
in
add
mov
adc
cs
xor
cmc
or
gs
mov
xchg
rorl
or
or
loope
or
cmp
test
add
adc
push
rolb
or
push
and
and
adc
mov
gs
add
in
aas
pop
sub
gs
mov
popf
loop
or
mov
or
add
xor
or
mov
sbb
gs
notl
gs
loope
test
fcmovb
cmp
loope
sub
adc
gs
ljmp
cltd
push
in
cltd
imulb
xchg
out
addr16
gs
add
xchg
lds
mov
add
sti
push
add
adcb
int
loopne
add
rol
add
data16
scas
aad
pushf
add
in
fwait
adc
stos
adc
add
shr
fwait
or
popa
add
pusha
add
es
decb
add
insl
cs
aad
pushf
push
add
shr
fwait
lret
add
mov
in
xchg
add
stos
mov
nop
add
add
push
es
mov
popa
ret
in
add
out
lcall
in
add
fnsave
in
stos
sbb
sbb
mov
lcall
lret
adc
insl
es
nop
iret
sbb
mov
adc
mov
addr16
addr16
push
addr16
sub
shlb
push
adc
lock
cs
and
addb
arpl
mov
arpl
cmp
jl
sub
mov
lcall
mov
jmp
das
nop
sahf
gs
gs
add
mov
in
stos
push
lcall
push
into
lcall
scas
push
add
push
add
mov
lcall
add
mov
add
in
push
and
add
add
push
out
add
push
adc
or
aad
loope
rorl
rolb
nop
xchg
cs
sbb
mov
sti
data16
aad
loope
add
addb
xchg
out
cltd
repnz
shlb
stos
jo,pn
loop
rolb
xor
add
ljmp
out
mov
mov
loope
add
loop
stos
dec
add
xor
stos
cmp
add
stos
pop
gs
push
lds
sub
lea
arpl
mov
mov
addr16
adc
add
adc
rcll
xchg
adcl
lods
sti
jle
add
adc
rolb
add
xlat
mov
fwait
jmp
mov
push
lcall
add
add
and
push
hlt
nop
xor
add
sbb
adc
add
mov
fwait
incl
nop
pop
xor
adc
adc
out
and
or
cmp
fwait
sbb
add
addb
std
inc
mov
xlat
mov
fwait
out
pop
xlat
enter
rorb
add
adcl
fwait
push
push
add
or
add
mov
loop
cmp
sbb
cmc
subb
sti
loope
rcrl
loope
or
or
roll
add
ljmp
sti
push
or
adc
push
ljmp
add
or
inc
sbb
fwait
jo,pn
adc
mov
sti
xor
scas
add
add
loop
sbb
stos
sbb
lcall
jmp
mov
lcall
adc
sti
add
add
push
dec
adc
add
fwait
loop
sti
jp
scas
add
imul
dec
data16
add
out
lods
add
ljmp
mov
cli
lcall
add
lcall
adc
mov
adc
mov
scas
add
push
imul
rcl
ljmp
push
outsl
sbb
test
addr16
addr16
add
out
push
add
sbb
sbb
call
mov
std
scas
add
add
outsl
mov
out
int
mov
imul
cs
jmp
cs
add
lret
lret
inc
mov
aas
or
mov
lcall
push
push
repnz
nop
ljmp
cs
adcb
adc
adc
adc
cmp
add
andl
cmc
add
add
add
add
gs
out
jmp
orb
enter
and
ds
add
mov
add
mov
inc
jae
or
gs
mov
adc
add
mov
inc
mov
insl
xchg
loop
lcall
loop
push
pop
push
adc
adc
incb
lcall
adc
sub
addb
push
test
add
and
sbb
cmc
cs
pop
scas
addr16
adc
or
mov
imul
orb
add
push
and
push
test
and
andl
add
adc
push
add
mov
test
sarb
enter
and
insl
outsb
out
add
add
dec
ljmp
fwait
cli
test
mov
cld
scas
add
in
inc
push
loope
push
add
add
xchg
adc
add
jb
addb
test
and
adc
repz
add
rcr
daa
push
leave
mov
sub
fstl
add
adc
mov
fld
push
loop
add
add
add
mov
scas
add
sub
adc
fwait
addb
pop
adc
outsb
add
arpl
mov
mov
inc
pop
mov
add
ljmp
push
mov
adc
xchg
in
add
pop
mov
pop
mov
sti
xchg
je
add
es
out
mov
daa
sub
or
insl
add
mov
adc
push
rorb
add
inc
jp
add
fistl
cmp
mov
aad
jmp
mov
addb
mov
lret
jmp
inc
and
inc
fistl
adc
gs
add
outsl
lret
inc
or
cmp
arpl
add
insl
push
adc
imul
loope
cs
les
mov
adc
data16
xchg
add
gs
fsubrp
add
add
pop
cs
sbb
or
imul
mov
dec
outsb
mov
test
in
arpl
arpl
lods
mov
pusha
sub
xor
add
add
stos
adc
add
add
nop
adc
mov
andl
mov
inc
in
loope
loope
add
ljmp
out
push
andb
mov
test
pop
loopne
or
sub
mov
decb
test
mov
sub
dec
adc
orb
pop
test
rorl
push
andw
and
insl
xor
pop
outsb
push
and
out
fwait
hlt
mov
inc
push
mov
inc
dec
data16
mov
loop
scas
lret
scas
inc
fstpt
inc
or
aaa
loopne
test
arpl
mov
add
test
imul
pop
out
add
add
mov
test
xor
or
insb
addr16
mov
adc
mov
cmpsb
lret
das
inc
add
ljmp
sub
lcall
mov
mov
adc
add
loope
cs
fwait
inc
ret
inc
pop
roll
sti
xchg
and
mov
add
push
add
addb
call
gs
roll
cli
mov
adc
fcmovb
or
add
into
sbb
add
pop
out
or
inc
mov
out
shlb
imul
or
pop
gs
fstpl
adc
repz
or
push
mov
sub
adc
and
insl
sub
add
aaa
add
ljmp
and
push
mov
daa
outsl
add
jmp
mov
jle
sarb
lods
sub
pop
jmp
add
add
sbb
pushl
pushw
jecxz
add
add
push
pusha
adc
out
sub
lcall
xchg
or
add
std
add
test
push
push
in
lods
add
loop
and
xchg
testb
sub
add
jnp
lods
cli
add
add
push
jno
and
xchg
jg
in
mov
and
roll
push
nop
xor
in
rorb
notb
xor
cmpsb
xor
adc
xor
divb
xor
stos
push
add
and
ds
test
cmpb
movb
push
lods
ret
cmp
ret
ret
sbb
sti
cmp
and
sti
mov
lods
into
pusha
sub
xchg
cmp
inc
clc
test
dec
in
bound
repnz
or
xlat
popf
repnz
loope
roll
loopne
add
push
in
lods
loope
add
loope
lods
ret
fiaddl
insl
push
adc
add
add
adc
xchg
out
add
mov
cmp
arpl
or
push
sti
inc
push
inc
incb
jno
push
and
rolb
pop
pop
jo
push
lcall
addb
lods
mov
lea
pop
sub
and
add
add
add
push
mov
rcrb
sbb
sti
adc
insl
orb
push
mov
add
loope
gs
aad
lcall
packuswb
cmp
sub
lcall
add
adc
insl
mov
add
xchg
cmp
mov
mov
add
loopne
jno
pusha
inc
lock
sub
add
mov
xchg
imul
gs
gs
dec
mov
adc
lock
gs
mov
sbb
xor
add
cli
jno
call
xchg
lret
xchg
gs
xor
mov
adc
gs
add
rolb
add
inc
cmpsb
gs
cmp
dec
jno
rolb
sti
jb
cld
inc
pop
cld
and
pop
mov
outsl
sub
jae
sbb
or
outsb
sbb
sbb
push
fwait
adc
mov
loope
sub
loope
push
int3
xor
data16
mov
dec
pushf
add
rorb
add
rorb
mov
lock
jno
ljmp
sub
scas
inc
cld
add
movsb
add
stos
add
add
movsb
add
dec
stos
add
push
out
add
in
lcall
mov
or
jno
ljmp
out
or
rorb
push
nop
cmp
jnp
mov
xor
or
xor
adc
fwait
stos
rcrb
sub
adc
mov
add
or
push
adc
fwait
iret
mov
jae
test
adc
insl
jecxz
mov
add
mov
daa
sub
sub
sub
and
lds
mov
mov
addr16
sbb
ret
or
mov
das
arpl
addr16
mov
mov
add
push
leave
or
adc
mov
mov
mov
push
add
sarb
push
mov
or
daa
sub
test
mov
pop
ljmp
add
orb
adc
cmp
push
cmp
adc
and
loop
pop
loop
mov
add
adc
mov
mov
add
gs
das
push
add
add
adc
xchg
insb
insl
add
cmpb
popf
add
push
add
loope
fisttpll
addb
ja
adcb
loope
mov
add
push
xor
nop
or
xor
add
push
lcall
test
push
jo
push
xchg
inc
add
add
lret
adc
lret
xor
mov
and
xor
cli
xor
call
push
push
push
sbb
adc
add
nop
add
xchg
push
pusha
push
xchg
add
adc
sub
add
pusha
xchg
in
loope
mov
lcall
mov
mov
xor
add
mov
add
pop
add
xor
lret
scas
lock
add
add
add
add
lcall
jecxz
add
adc
add
adc
shll
das
push
ret
or
loope
das
addb
pop
incb
adc
lret
mov
fiadds
jp
inc
adc
add
adc
push
ret
and
sti
push
lahf
mov
fldl
mov
adc
insl
add
rolb
loopne
ret
lret
mov
sub
jecxz
cmpsl
fwait
arpl
fwait
out
xor
adc
aam
push
repnz
loop
arpl
lcall
call
lret
push
mov
add
fwait
loop
mov
push
mov
add
aad
push
cmpsl
and
mov
pop
insl
mov
rolb
nop
jmp
mov
mov
sub
add
cld
jmp
add
add
pop
add
mov
or
pusha
push
and
idivb
lret
or
add
or
sbb
add
jo
scas
and
cli
mov
push
mov
add
add
fwait
cli
mov
add
std
scas
add
mov
sub
add
jmp
out
lods
add
mov
lcall
add
lcall
lods
add
and
mov
adc
nop
inc
push
nop
mov
push
in
dec
add
fwait
incb
xchg
add
or
push
inc
sub
dec
adc
add
int3
mov
cli
add
push
xchg
fwait
andl
and
mov
in
mov
loop
fcoms
and
add
jbe
xchg
fwait
call
pusha
add
or
push
in
dec
jne
push
add
push
mov
push
lds
jmp
arpl
ss
sbb
mov
inc
orl
movb
push
mov
add
lcall
add
adc
imul
sti
test
mov
push
mov
movups
stos
xor
add
mov
sti
inc
mov
and
sub
add
adc
or
stos
mov
adc
or
fimuls
push
fldl
pop
in
dec
les
enter
ficomps
adc
adc
mov
andl
andl
push
inc
xchg
xchg
dec
adc
push
adc
dec
adc
add
adc
mov
mov
sahf
add
push
add
add
gs
add
xor
mov
add
inc
add
out
imul
testb
inc
add
adc
add
fwait
shll
stos
add
inc
test
in
mov
add
or
add
sbb
adc
gs
adc
add
dec
dec
xchg
mov
dec
adc
inc
adc
mov
mov
gs
add
andb
stos
adc
pop
gs
or
push
out
add
inc
adc
into
rcrb
sbb
shlb
mov
sbbl
mov
xorb
inc
es
insl
xchg
sbb
fwait
sub
rclb
adc
add
outsb
xchg
add
in
mov
fnsave
mov
sbb
or
inc
insl
mov
add
mov
sbb
sub
mov
xchg
in
sbb
xor
cwtl
lret
jno
in
test
lcall
adc
insl
and
adc
add
cmpb
add
mov
pushf
xor
cs
mov
or
lret
repnz
mov
pop
ljmp
ljmp
rcrb
jmp
in
lods
add
and
cld
scas
add
adc
cs
pusha
or
rclb
in
add
arpl
add
sti
fdivrp
scas
add
rcll
add
pop
add
addb
mov
add
mov
gs
fiadds
cmpb
mov
inc
rorb
into
das
and
in
push
add
outsl
adc
lods
gs
fwait
aaa
mov
mov
xor
push
push
inc
pusha
dec
out
loopne
mov
pop
in
aaa
add
stos
out
mov
mov
add
cmp
imul
lds
gs
push
aas
mov
push
dec
mov
push
add
jecxz
roll
mov
push
cs
rorl
pusha
adc
jmp
or
xchg
adc
add
mov
dec
loop
pusha
push
aad
loope
jnp
add
inc
fildl
or
inc
adc
xchg
loopne
adc
add
and
fisubs
add
and
mov
and
mov
add
and
andb
dec
lret
xlat
shll
orl
inc
or
add
lcall
lcall
cs
and
cs
mov
jne
add
insl
or
jbe
or
jle
insl
jecxz
enter
mov
push
movb
adc
mov
cmpsb
inc
add
mov
sub
fsubrl
mov
imul
fwait
in
mov
lods
add
push
sub
add
push
data16
adc
adc
rolb
push
in
add
add
rolb
and
add
xor
add
ljmp
out
mov
xchg
add
enter
add
add
inc
inc
leave
mov
sti
stos
loopne
dec
push
test
dec
loope
adc
push
adc
add
adc
inc
pop
out
mov
fsubrl
loope
outsl
and
out
add
mov
arpl
adc
adc
add
inc
cmp
fiadds
orw
test
movsb
add
pop
inc
push
subb
mov
xchg
and
cmpsb
pop
adc
outsb
adcb
arpl
add
dec
mov
les
ljmp
bound
add
out
loope
rclb
xchg
out
add
repz
add
xchg
lret
xor
adc
shrb
mov
add
fwait
lds
sub
adc
clts
xchg
nop
add
std
adc
inc
pcmpgtw
xor
add
stos
out
sub
insl
adc
mov
gs
out
test
loop
outsb
jp
add
or
add
lcall
loope
add
or
in
add
push
xor
sub
xorb
test
fldl
daa
mov
add
add
add
loop
add
inc
add
sti
out
mov
mov
pop
hlt
xor
push
scas
sbb
add
push
add
push
add
cpuid
add
mov
les
pusha
sbb
add
xchg
daa
jo
xchg
inc
or
insl
mov
add
test
xchg
adc
add
stos
adc
pusha
sbb
inc
sti
pop
push
or
insl
inc
dec
leave
adc
inc
adc
shll
mov
rolb
push
mov
stos
push
add
dec
roll
add
lcall
aas
push
frstor
mov
stos
and
addl
sbb
daa
adc
sbb
add
ss
adc
adc
fisttpl
add
add
cmp
jo
shrw
inc
adc
sub
jb
pop
add
mov
out
sbb
fs
adc
outsl
or
dec
call
gs
add
pop
insl
or
addr16
repz
dec
push
mov
and
fs
mov
add
mov
dec
adc
aad
and
in
repz
cli
inc
add
add
adc
mov
testb
cs
fwait
push
fstpt
mov
add
inc
sbbl
lret
xchg
in
add
add
orl
add
loopne
push
jmp
insl
aad
xor
pop
push
ds
and
and
es
add
sub
push
fs
mov
subl
add
rolb
sti
jle
sbb
inc
mov
loopne,pt
mov
push
shrb
add
adc
and
dec
sub
add
push
and
dec
adc
push
out
and
arpl
lret
add
push
push
lcall
jge
push
push
repz
add
push
gs
push
adc
jo
mov
in
repz
add
lods
add
and
out
aam
and
shlb
add
mov
jno
add
arpl
push
adc
push
and
rolb
push
stos
or
push
sub
pop
test
arpl
xor
add
jbe
dec
test
add
mov
push
arpl
adc
gs
push
jo
clc
adc
push
add
shll
pop
loopne
fwait
out
inc
andl
sub
add
add
pop
adc
mov
rcrb
xor
lret
lock
pop
ficoms
pop
mov
pusha
outsl
ret
addb
pop
icebp
divps
inc
or
inc
xchg
test
nop
pop
sbb
jo
xor
sti
shrl
or
orb
add
add
mov
mov
js
adc
xor
es
push
add
stos
out
xor
mov
push
jnp
add
pop
and
stos
adc
dec
jno
insl
push
cmp
stos
loop
and
mov
test
in
stos
pusha
push
arpl
sarb
in
adc
and
add
repnz
add
adc
xor
push
add
adc
sbb
inc
sub
sub
adc
adc
push
dec
pusha
test
ds
mov
pop
flds
adc
stos
push
adc
mov
xchg
add
adc
mov
or
bound
ljmp
add
push
mov
seto
jo
and
fwait
push
and
pop
adc
push
jo
nop
orl
sub
sahf
shlb
mov
dec
inc
arpl
add
adc
loop
add
mov
inc
xchg
inc
add
push
add
mov
lods
mov
arpl
roll
addl
bound
sub
add
pop
inc
mov
arpl
and
cld
icebp
add
push
add
bound
add
sahf
addr16
xchg
sti
push
add
nop
or
arpl
or
sahf
push
sbb
adc
push
cmc
aad
add
stc
adc
arpl
jae
mov
fwait
xchg
sub
add
adc
andb
test
or
xchg
push
inc
adc
adc
cmpb
push
iret
rolb
and
add
loop
and
adc
sub
xchg
mov
adc
aas
adc
adc
mov
stos
mov
mov
push
out
xchg
in
push
test
mov
sub
push
loop
xor
nop
mov
fs
inc
push
in
xchg
sub
gs
and
out
fdivrp
scas
mov
pushf
jecxz
inc
jbe
xchg
cmp
dec
adc
pop
adc
cmp
xor
lock
sahf
xchg
mov
popa
popa
push
push
mov
sub
cmpb
pusha
mov
xchg
adc
add
add
mov
addb
and
shrb
jmp
gs
add
daa
insl
cs
das
lcall
aad
arpl
push
lock
loope,pn
arpl
inc
add
fwait
push
adc
andb
stos
sbb
push
mov
add
adc
jbe
sub
xor
call
addr16
push
arpl
fwait
adc
or
push
add
shrl
add
ljmp
and
pusha
paddsw
xor
add
ret
cmp
push
gs
push
aad
out
and
mov
aas
mov
mov
adc
push
fwait
add
gs
mov
adc
pop
int
adc
add
scas
add
ljmp
scas
add
sub
add
push
outsl
add
loop
add
mov
add
xchg
add
lret
push
dec
aaa
add
mov
push
pop
aam
add
add
add
add
imul
add
arpl
mov
repnz
add
push
add
add
push
lcall
mov
add
or
add
add
add
and
add
gs
or
imul
adc
adc
pop
ret
push
jns
mov
sbb
andb
fisubs
add
and
add
aad
sbb
scas
arpl
push
adc
insl
mov
sbb
arpl
cmp
sub
add
add
lea
or
add
push
imul
fcmovbe
add
cwtl
faddp
adc
arpl
sbb
xchg
out
sub
push
xchg
sbbl
sbb
push
and
fwait
push
adc
in
xor
push
fstpl
mov
add
xchg
out
scas
add
insl
sub
mov
sub
add
insl
aas
adc
adc
xor
addr16
addr16
cmpl
aad
loope
push
add
add
dec
push
out
lods
add
push
loope
add
push
addb
mov
add
add
push
stos
sbbb
sbb
es
sub
jbe
cmpb
add
adc
sbb
add
in
push
sbb
adc
adc
xor
adc
or
add
add
test
cld
roll
adcl
push
cmp
test
lcall
add
adc
add
inc
adc
mov
lcall
rorb
fildl
adcb
sbb
add
mov
adc
mov
stos
adc
add
push
test
roll
popl
add
es
mov
adc
flds
add
shrl
and
cli
rorb
sti
sbbb
scas
add
arpl
or
mov
sub
in
push
sbb
adc
test
push
dec
addb
add
add
orb
subb
test
adc
fiaddl
push
mov
mov
out
cli
add
shrb
out
mov
fwait
out
mov
adc
sub
or
add
insl
add
xor
add
arpl
pop
add
scas
add
fadds
imul
push
pop
fadds
mov
lret
test
addl
push
add
push
in
sub
pushf
push
add
add
push
mov
jle
add
in
add
mov
arpl
add
push
mov
gs
mov
arpl
xchg
jbe
imul
imul
fwait
in
iret
stos
xchg
or
outsl
xchg
xchg
adc
loope
sbb
dec
adc
nop
rorl
push
and
andl
jle
or
aaa
sbb
sub
mov
movb
scas
add
stos
xchg
imul
push
sbb
adc
push
shl
dec
or
rcrl
or
xchg
adc
insl
xchg
xchg
xchg
loopne
mov
and
lcall
adc
inc
mov
adc
push
push
insl
pusha
dec
arpl
or
and
cmp
or
adc
dec
lcall
adc
and
lds
add
pusha
adc
imul
sti
jp
adc
out
push
daa
inc
and
out
adc
subb
loope
fsubs
add
test
xchg
mov
stos
mov
sbb
rolb
arpl
sbb
sbb
push
and
mov
or
pop
andl
sub
add
mov
push
out
fwait
mov
pusha
stos
addl
adc
pusha
lcall
rolb
inc
push
lcall
cmpb
adc
lcall
lcall
sbb
adcb
ss
mov
out
fwait
aam
stos
mov
and
inc
xor
cld
scas
add
cmc
pusha
inc
add
fwait
xchg
arpl
adc
or
push
mov
cmp
arpl
pop
push
xor
xor
or
xchg
mov
xchg
xchg
cmp
sbb
lcall
shl
adc
add
loopne
mov
push
push
xchg
adc
add
xor
inc
and
sbb
add
das
push
loope,pn
pop
inc
adc
sub
pusha
or
arpl
mov
xchg
xchg
adc
add
outsb
xchg
sub
stos
mov
mov
push
mov
add
pusha
mov
lcall
sub
mov
xchg
subb
xchg
add
xchg
xchg
out
adc
add
inc
sub
mov
and
adc
xlat
mov
mov
adc
adc
loope
mov
adc
faddl
add
xchg
out
fwait
inc
in
subb
aaa
shll
inc
push
leave
mov
and
daa
sub
or
sbb
ret
imul
xchg
outsb
inc
push
sti
xchg
and
fnsave
adc
cmpb
aad
lcall
mov
and
mov
ret
fwait
add
loope
cmpsb
in
insl
pop
mov
lcall
insl
add
jmp
lret
insl
andb
ljmp
inc
or
loopne
mov
add
and
add
add
out
aad
adc
pop
pusha
sbb
sbb
push
cs
xor
lcall
mov
adc
adc
push
ljmp
pop
cs
and
and
sub
adc
push
xor
in
lcall
loope
push
loope
jp
inc
adc
add
gs
loop
or
loopne
mov
pop
mov
adc
mov
pop
adc
push
aad
arpl
cmp
insl
xchg
lret
inc
lcall
inc
jp
add
adc
mov
add
dec
call
add
mov
xchg
push
mov
loop
stos
adc
rclb
add
adc
mov
mov
bound
lcall
sub
stos
push
inc
jmp
ja
or
in
sub
push
add
jb
mov
push
inc
inc
lock
aad
lcall
mov
out
push
and
adc
add
add
aad
popf
cli
incl
mov
jmpw
in
data16
cmpsb
aad
add
add
loop
cmpb
mov
mov
sbb
adc
fs
mov
notb
or
popa
nop
sbb
add
lcall
and
lret
sbb
call
andl
sub
inc
rorb
xor
xchg
mov
xchg
add
arpl
lcall
push
je
and
add
test
xchg
mov
push
add
mov
add
xor
repnz
dec
adc
jp
daa
les
push
push
fwait
loop
mov
inc
fwait
add
stos
fwait
jmp
adc
xchg
leave
add
push
popa
pusha
add
sub
push
jno
cli
mov
xchg
loop
cs
cwtl
jo
popa
aas
and
push
and
add
push
inc
rcrb
data16
loope
mov
out
int3
adc
loop
sbb
shlb
stos
test
loope
or
push
mov
mov
xchg
lret
add
test
shlb
adc
loopnew
ret
rol
add
mov
lcall
imul
pop
gs
inc
lret
adc
and
adc
mov
insl
and
je
shl
cli
rolb
mov
push
sahf
movsb
pop
mov
adc
fs
inc
cmp
or
sbb
call
sbb
xor
add
inc
push
fs
cltd
pusha
xor
in
cs
out
loop
push
ja,pn
test
mov
adc
out
add
xor
loope
sub
insl
pop
adc
test
sub
sub
ss
cs
and
sub
in
add
cmpb
rolb
fstpl
in
cwtl
add
mov
pop
loope
add
out
add
sbb
out
xlat
cltd
jmp
cmpsl
add
rclb
mov
gs
and
shlb
cmpsl
mov
shrb
shrl
loopne
lcall
ret
es
pop
inc
in
pushf
int
gs
add
add
lds
insl
push
ljmp
rcrb
add
mov
mov
add
push
lods
mov
imul
push
mov
or
push
mov
sbb
add
adc
mov
fwait
add
aad
pushf
or
insl
mov
add
in
subb
adc
add
cwtl
icebp
mov
adc
das
arpl
filds
push
and
sbb
in
stos
xor
loop
test
cmpxchg
mov
daa
add
sub
adc
test
loopne
arpl
pop
and
popa
cmp
add
aad
loope
add
xlat
mov
stos
add
mov
mov
or
sub
mov
push
and
gs
loop
stos
out
sub
pop
stos
rorl
and
das
add
lret
mov
sub
aas
outsl
or
adc
add
das
paddd
aas
das
push
shl
or
in
rcll
icebp
inc
add
push
xor
adc
stos
mov
jmp
cmp
out
in
add
ljmp
out
test
movsl
or
push
jno
add
out
or
loop
push
out
add
add
aas
mov
addr16
addb
ds
mov
xor
cld
cmp
cld
xor
stos
cli
cmp
cli
xor
clc
cmp
clc
xor
stos
idivb
divb
add
cmp
hlt
xor
sbb
gs
or
sbbb
in
or
in
xor
gs
addr16
call
adc
movb
xorl
fwait
out
enter
xor
cli
insl
mov
add
mov
adc
add
jbe
sbb
push
add
sub
and
add
nop
pop
push
jb
mov
xor
gs
sbb
jle
xor
add
mov
movl
push
add
push
mov
aad
xchg
shll
xchg
and
push
and
mov
cli
mov
adc
cmp
push
and
pusha
and
andb
lds
add
adcb
adc
add
rolb
add
mov
push
xlat
xchg
sbb
bound
mov
sub
std
add
test
and
imul
cld
sub
or
or
mov
mov
xchg
adc
push
and
jl
and
js
and
ficoml
fstpl
lock
and
pop
test
fnstsw
ds
add
pushf
ljmp
push
sub
adc
add
insl
adc
test
push
xor
aad
push
fcmovu
addr16
pushf
add
stos
lock
ljmp
nop
ljmp
cmp
mov
out
mov
xchg
orl
fldl
pusha
xchg
addr16
adc
nop
ljmp
mov
into
add
testl
sti
inc
adc
push
adc
aad
ljmp
mov
xor
shl
mov
insl
xchg
fidivl
insl
cs
rclb
jge
xor
push
arpl
mov
insl
add
in
xchg
cld
insl
sub
mov
add
adc
insl
push
in
xchg
add
add
add
lret
add
ljmp
fwait
add
add
adc
add
push
scas
add
adc
push
shlb
add
add
cli
sub
add
mov
mov
out
add
in
add
mov
add
xchg
add
push
test
arpl
stos
ss
scas
add
inc
loop
nop
ljmp
sbb
daa
add
add
mov
ljmp
mov
push
sbb
cs
push
add
push
test
mov
stos
push
addr16
add
mov
nop
cwtl
addr16
add
shr
xchg
add
addr16
xlat
mov
nop
add
gs
test
cli
mov
imul
stos
adc
adc
stos
push
xchg
adcb
and
xor
adc
cmpb
das
test
in
add
test
scas
mov
ljmp
stos
sbb
addb
sbb
push
pusha
aad
ljmp
mov
orb
mov
daa
sub
ljmp
inc
test
add
add
lret
mov
gs
lcall
adc
ljmp
cmpb
fsubrl
add
scas
andl
addb
inc
xor
mov
add
add
mov
mov
test
add
popa
and
inc
add
test
rolb
push
pop
adc
aaa
add
in
fldl
imul
pop
mov
inc
ds
mov
into
add
mov
stos
adc
add
cltd
repnz
arpl
roll
push
sti
add
inc
loope
cs
sbbb
std
orb
test
orb
dec
rclb
add
pop
test
into
add
add
lods
into
roll
cmp
cltd
lret
lret
xchg
subb
sbb
arpl
lret
fiaddl
sbb
or
fiaddl
sbb
fs
adc
add
shlb
gs
gs
and
out
gs
inc
cmp
aad
aas
pushf
in
movsb
mov
pop
add
lcall
pusha
andl
addl
mov
pop
inc
jbe
xor
nop
fstp
adc
addb
les
push
jbe
push
shlb
lods
insl
sub
aad
sub
and
adc
mov
mov
add
inc
push
rclb
adc
movb
incl
inc
cltd
sub
cmp
mov
mov
mov
add
ficompl
outsb
pop
add
popf
loopne
pop
pop
adc
inc
mov
rolb
cmpb
sub
test
sbb
cli
lds
lds
mov
fs
out
fdivr
data16
call
sbb
mov
out
add
push
arpl
inc
popa
and
xchg
icebp
add
mov
sbb
push
inc
adc
arpl
into
mov
cld
scas
add
or
mov
mov
push
xor
lods
add
lcall
jb
add
add
pusha
add
inc
add
inc
add
or
or
mov
add
pop
out
add
test
mov
insb
push
or
loopne
addl
stos
sbb
daa
subl
insl
add
lods
add
pusha
fstpt
and
arpl
push
enter
adc
dec
insl
lret
mov
roll
rolb
adcl
push
pop
rolb
loop
sbb
ss
cs
mov
add
xor
add
fldl
mov
add
adc
ljmp
loop
test
repnz
xor
repnz
mov
test
into
add
add
int3
sbb
in
lcall
sti
rcrb
addb
rclb
add
and
test
movsl
pop
and
mov
cs
add
mov
mov
mov
pusha
pop
out
add
cmp
orl
test
loope
shrb
sti
mov
arpl
and
orb
add
test
lcall
loopne
mov
outsb
loopne
in
add
and
loopne
inc
inc
pextrw
inc
test
inc
xor
bound
xorl
and
andb
mul
lods
add
pop
fisubrs
sub
sbb
cmc
sbb
push
add
pop
call
insl
jo
sti
fwait
test
sbb
pop
and
add
push
test
loope
mov
push
out
or
and
fiaddl
ljmp
gs
into
mov
xchg
shll
push
shlb
and
out
stos
lret
add
ja
mov
mov
cmp
add
pusha
jl
enter
lret
add
add
ret
add
insl
pop
add
nop
repnz
pop
ljmp
lcall
cli
dec
sub
scas
add
add
ljmp
cs
imul
pusha
pop
xchg
loopne
add
add
insl
pop
fwait
add
addr16
lret
pop
lds
ljmp
inc
aad
loope
or
loopne
mov
lret
pop
orb
roll
adc
or
add
out
insl
inc
mov
xchg
addb
add
cltd
shrb
outsl
xchg
lret
add
mov
push
cmpsl
insl
pop
fndisi(8087
add
mov
add
lret
cmp
scas
add
jecxz
push
andl
add
enter
out
insl
mov
call
mov
sub
and
add
lret
call
add
pop
mov
lret
loop
callw
outsb
adc
add
or
adc
add
into
pusha
add
in
mov
out
push
jo
pop
add
addb
push
inc
pop
xor
or
add
lock
and
jmp
add
push
push
add
push
add
push
add
add
arpl
push
add
add
add
adc
nop
adc
rcrl
adc
adcb
arpl
cltd
mov
sub
mov
icebp
add
adc
shlb
adc
add
adc
ficoms
add
into
lock
mov
add
add
push
test
add
gs
lret
stos
out
pop
ja
add
ds
push
cltd
pop
mov
loop
add
adc
mov
jecxz
add
adc
test
xchg
push
mov
pop
mov
cld
mov
jl
add
inc
add
gs
add
dec
lods
pop
xchg
rolb
roll
repnz
filds
cli
pop
scas
jo
nop
sbb
lcall
fld
and
add
aam
add
adc
add
loope
imul
add
movb
pop
rcrb
push
and
loope
adc
and
push
push
sbb
loope
add
jo
outsb
adc
aas
addb
and
sbb
and
insl
add
mov
insl
push
add
sub
lret
cmpsb
loope
inc
add
mov
arpl
in
jbe
add
adc
addl
pop
xchg
adc
addl
pop
test
addb
push
mov
sbb
inc
cmpsb
lcall
jecxz
loopne
cmpsl
mov
scas
addl
pop
flds
rolb
add
pop
xor
add
loope
add
add
fs
loope
es
arpl
sbb
inc
mov
add
adc
dec
mov
popa
add
repnz
aaa
rolb
add
jmp
stos
insl
adc
test
add
loope
sti
addb
or
addb
adc
loope
in
addl
loope
push
jo
outsb
adc
add
pop
inc
or
mov
fildl
adc
add
in
rolb
inc
cmp
add
pop
ret
add
loope
pop
addb
add
std
pop
inc
addb
push
jno
add
push
add
add
scas
loope
arpl
pop
insb
addb
add
shr
loope
in
mov
adc
add
add
sbb
xchg
outsb
adc
out
addb
add
add
fwait
lock
add
shl
loope
inc
cmp
add
add
add
loope
push
pavgb
bound
mov
mov
imul
dec
addb
add
lock
ret
dec
lret
jae
xor
sub
loope
out
xor
and
vmovsldup
and
outsb
adc
rolb
sub
and
mov
add
fs
xchg
out
rclb
aam
sbb
adc
stos
adc
je
stc
adc
faddl
adc
add
loope
add
rolb
aam
in
add
push
add
inc
sbb
sub
sbb
adc
cmp
rolb
shl
xor
push
addb
adc
roll
shrl
aam
imul
add
or
mov
roll
sub
add
add
rolb
into
lcall
add
addl
loope
sub
scas
mov
andl
loope
data16
rclb
lcall
clc
outsb
adc
rcl
add
roll
rcl
add
pop
or
roll
rolb
cs
mov
add
pop
out
mov
lcall
jmp
and
push
mov
pop
xchg
lldt
inc
lcall
test
test
inc
push
inc
inc
add
push
mov
sub
inc
or
push
push
repnz
sbb
stc
push
lahf
push
movsl
add
movsb
add
add
add
mov
push
cmp
add
inc
les
stos
add
ss
push
add
push
mov
push
add
pop
adc
mov
push
test
add
out
push
add
cmp
push
add
lods
add
cmp
add
push
add
cmp
bound
imul
imul
add
loope
push
xchg
add
push
add
add
loope
imul
xor
cltd
xchg
add
jecxz
leave
adc
mov
add
pop
pusha
mov
rorb
bound
fcomip
add
stos
hlt
add
lock
adc
outsb
mov
loope
cmc
add
and
xor
insl
push
lea
lret
add
jbe
add
lcall
add
ljmp
or
add
sub
add
add
add
stos
jmp
xor
add
aas
add
or
add
sub
sbb
pop
and
imull
add
in
add
gs
insl
adc
loope
dec
add
cmp
lret
cmp
lret
insl
mov
outsb
pop
and
insl
push
in
add
pop
xchg
add
push
in
add
outsb
pop
sbbb
loope
jno
jp
fwait
call
add
or
add
add
mov
stos
lret
add
add
xchg
lret
in
jl
cwtl
into
aam
add
push
loope
jmp
pop
xchg
orb
imul
andl
add
add
imul
loope
lods
add
inc
andl
andb
imul
pop
insl
rclb
add
add
loope
in
push
sbbl
sbbb
adc
adc
insl
adc
loope
imul
add
addl
mov
add
subl
jmp
imul
subb
dec
addb
adc
loope
lret
pop
sbbl
subl
mov
addl
add
ret
adc
ret
rolb
pusha
adc
loope
aas
sbbb
lret
loope
sub
rcll
add
outsb
adc
add
add
lret
pop
dec
adc
add
cli
imul
stc
imul
std
mov
and
and
cmpb
loope,pn
cwtl
sbb
aas
dec
mov
cli
sbbl
jecxz
or
inc
add
inc
sysret
aam
or
iret
addb
call
add
sub
adc
mov
xchg
lret
daa
add
into
addr16
lret
inc
sbb
mov
add
outsb
adc
push
add
scas
add
das
lcall
das
xor
orb
test
loop
sub
inc
addb
int
or
or
push
mov
insl
add
lcall
lcall
imul
inc
rolb
lea
adc
inc
and
mov
ds
out
imul
loope
sub
subb
loop
fildl
test
fwait
jecxz
or
inc
or
add
lea
add
add
pop
and
add
daa
into
popa
sbb
adcb
inc
sub
loop
mov
ds
xor
add
mul
push
inc
sbb
push
jae
push
data16
add
and
jecxz
popa
inc
mov
insl
push
add
push
pusha
jbe
and
out
push
add
cmpsb
lcall
and
pop
je
inc
add
xor
movsl
mov
test
adc
out
ds
pusha
push
mov
and
lds
pop
scas
jge
add
ret
loopne
lods
ret
pusha
or
pop
sbb
loopne
add
add
or
loopne
lahf
insl
add
loope
notb
cld
loope
repnz
adc
mov
popa
inc
pop
testb
or
push
addb
push
push
add
add
ljmp
add
inc
add
xor
lcall
and
imul
pop
bound
push
loopne
insl
sbbb
ret
inc
add
decl
add
ss
jmp
loop
push
incb
addb
hlt
cmpsb
lcall
mov
loopne
pop
sbb
add
inc
pop
add
add
pop
or
add
sbb
adc
add
push
in
inc
out
lods
push
imul
loop
pusha
cmp
js
popa
inc
add
push
mov
sub
inc
hlt
add
in
loope
sbb
ss
cs
push
sbb
pusha
mov
or
add
pusha
addb
test
add
inc
fwait
call
jmp
in
test
out
mov
sub
insb
outsb
nop
stc
loopne
add
add
into
fwait
jl
out
or
imul
add
ss
add
std
xchg
ljmp
out
sbbl
push
loopne
insl
mov
adcl
loopne
or
add
mov
add
aas
xchg
loop
ljmp
ss
add
gs
imul
bound
add
adc
loope
xor
shrl
inc
adc
lcall
rcrb
loope
and
incb
stos
notb
and
out
nop
loop
and
pusha
push
xlat
jmp
rcrl
pop
shrl
pop
push
sub
gs
bound
lahf
and
dec
imul
subb
and
inc
or
add
sub
hlt
scas
add
adc
push
pop
pop
and
sbb
loope
enter
sarl
fisubs
add
sub
fwait
inc
cmc
outsb
adc
ss
push
mov
shll
inc
add
push
add
ljmp
out
push
xor
ja
test
jmp
xchg
mov
loope
das
addb
jo
es
dec
and
xcrypt-ctr
cmpsl
sbb
outsb
mov
into
pop
xchg
add
popa
or
rolb
pop
popa
inc
add
or
pop
jmp
xchg
lret
sbb
adc
adc
push
and
aad
fwait
loop
pop
fwait
out
xor
fucom
add
xor
mov
loope
in
or
add
add
cvtps2pd
and
adc
push
sbb
out
fsubr
shlb
sub
pop
xor
add
add
das
or
sub
add
lock
stc
pusha
sbb
jl
mov
icebp
add
outsl
xchg
xor
andb
data16
pusha
add
loop
test
pusha
add
data16
in
add
addr16
gs
add
mov
or
adc
scas
add
push
add
xor
repz
mov
xor
xchg
xor
pusha
xor
dec
xor
cs
xor
loop
scas
add
xor
push
xor
popa
xor
cmp
add
add
adc
scas
add
xor
andl
xor
push
xor
adc
add
push
daa
scas
add
add
inc
xor
cmc
and
add
xor
xor
xor
add
xor
in
and
add
xor
mov
xor
lahf
xor
jnp
add
add
and
scas
add
aas
scas
add
push
cmp
add
xor
cmp
add
xor
adc
add
jo
arpl
add
add
and
or
add
xor
mov
cmp
mov
incb
cwtl
std
add
cld
add
add
mov
das
push
ljmp
das
push
in
insl
push
out
add
lret
adc
in
fsubp
sbbb
add
fwait
jmp
pushl
icebp
add
loope
sub
add
out
fnstsw
push
add
ljmp
clc
sub
add
add
xor
cli
lcall
mov
out
or
lods
push
aad
lcall
push
inc
mov
inc
adc
test
arpl
xchg
mov
add
mov
stos
cli
adc
jae
mov
insl
push
adc
add
out
adc
fdivrp
scas
add
out
adc
add
insl
dec
and
adc
mov
and
loope
insl
add
mov
inc
repz
add
insl
nop
loop
fcompl
lcall
cs
in
xor
jo
sub
add
and
mov
push
lcall
sbb
adc
arpl
inc
lret
mov
lea
insl
xchg
out
cwtl
mov
out
cmpb
push
adc
or
gs
mov
adc
cwtl
incb
adc
add
arpl
push
jae
add
push
pop
push
pop
rolb
loopne
loop
add
test
push
add
jo
fs
mov
idivb
ljmp
inc
adc
rorb
inc
loop
add
cmpsl
adc
or
xor
xchg
xorb
rclb
rolb
adc
test
std
scas
orl
lock
and
mov
mov
push
cli
add
out
add
add
mov
data16
scas
add
add
mov
mov
out
or
outsb
adc
imul
shl
inc
add
addr16
test
adc
test
mov
sub
insb
test
stos
push
add
jo
in
jb
adc
adc
adc
insl
xchg
push
out
lcall
adc
pushf
sub
stos
adc
and
cmp
mov
stos
adc
andb
bound
mov
arpl
inc
movswl
mov
inc
add
mov
imul
mov
jbe
ljmp
add
mov
xchg
rolb
sbb
out
test
arpl
inc
jns
add
mov
cs
fwait
cmc
add
fwait
xchg
mov
add
arpl
stos
add
icebp
adc
in
test
xchg
push
ljmp
es
sub
or
lock
out
pop
arpl
mov
dec
adc
dec
mov
loop
das
push
jno
loopne
daa
fldl
cs
loop
scas
insl
push
ljmp
insl
pop
out
add
mov
stc
nop
sbb
push
and
xorb
test
addb
inc
xor
stos
cli
xor
lahf
fwait
repnz
sub
add
add
mov
mov
push
mov
nop
test
adc
rorb
scas
rorb
mov
mov
push
xchg
xor
add
jo
test
adc
adc
lods
pusha
push
addr16
adc
and
and
cmp
push
nop
pop
gs
and
sbb
out
mov
pop
repnz
popa
xor
adc
adc
mov
push
add
add
pusha
fwait
repnz
add
add
lret
addr16
adc
add
test
sbb
cmpsb
adc
loopne
push
in
add
fwait
incl
mov
test
inc
lret
addr16
popa
add
add
ljmp
or
in
sub
push
in
mov
xchg
loop
addr16
cli
addr16
aad
lcall
not
sub
pop
sti
and
stos
adc
add
fwait
cli
mov
adc
xlat
mov
inc
lcall
mov
frstor
dec
ss
push
push
add
add
out
lock
sbb
in
pop
addr16
ljmp
jp
lods
inc
add
mov
mov
sub
sahf
in
mov
loope
pop
add
add
mov
adc
adc
xchg
gs
ljmp
fucomp
arpl
add
int
sub
gs
aas
push
insl
or
stos
sbb
lods
add
adc
add
addl
frstor
jnp
add
out
and
push
add
add
add
adc
aas
push
fstl
addr16
insl
das
ljmp
add
pop
dec
mov
add
das
gs
jo
add
fucomp
out
add
dec
add
and
sub
gs
add
push
in
es
lret
addb
adc
push
jmp
xor
add
loope
or
push
add
sub
or
adc
jle
add
mov
ljmp
out
adc
mov
or
push
push
inc
adc
adc
adc
sub
or
outsb
roll
adc
andb
mov
addb
fwait
rclb
or
setnp
push
jp
mov
ljmp
jmp
add
add
jmp
sbb
cmp
push
push
xchg
add
mov
cmp
add
aad
lret
cwtl
int
push
lds
add
fwait
ljmp
cmp
sbb
loope
cmp
gs
lds
mov
ljmp
lcall
pop
inc
xchg
lret
push
adc
cmpb
add
test
daa
pushf
or
add
jl
add
mov
subb
push
addr16
or
push
ret
inc
add
add
add
or
stos
push
push
addb
push
loopne
add
add
add
add
adc
aad
or
push
stos
out
add
stos
sbb
in
fwait
rolb
shlb
adc
insl
mov
add
sbb
add
stos
adc
push
out
cwtl
lret
inc
pcmpgtw
es
out
inc
push
int
aad
add
test
mov
mov
mov
sbb
add
stos
out
lcall
inc
add
movl
test
fnstsw
sbb
add
fwait
idivl
push
rcll
loop
pop
adc
syscall
lea
stos
gs
arpl
mov
outsl
adc
add
jnp
test
cmpsb
insl
orb
insl
cs
insl
inc
or
mov
push
ljmp
inc
add
lcall
orb
or
lcall
push
add
adc
adc
lcall
mov
jmp
lods
adc
adc
push
add
mov
or
mov
and
imul
sti
rcrl
add
mov
into
fwait
in
and
in
mov
loop
add
add
call
lcall
pop
pushf
add
insl
pop
xchg
cltd
call
mov
sub
xchg
addb
ljmp
ljmp
loop
push
jae
xlat
add
add
mov
mov
adc
add
rorb
stos
cli
addr16
arpl
push
xorb
outsb
add
mov
adc
stos
ss
inc
addb
arpl
addb
add
add
cli
adc
fwait
out
pop
jl
push
mov
push
inc
jg
add
arpl
dec
add
add
arpl
push
add
add
xchg
add
fiaddl
loope
xorb
add
or
add
cs
imul
or
dec
add
inc
add
imul
sub
push
xor
in
and
gs
push
pusha
push
arpl
sbbb
daa
add
mulb
shrl
mov
add
adc
add
fildl
insl
sub
movsb
and
cmp
arpl
addl
and
sub
test
arpl
and
and
addl
add
add
lret
shll
add
add
jmp
add
sub
add
loope
push
cs
andl
add
or
adc
insl
adc
sbb
add
cmp
arpl
pusha
pop
sarb
outsl
add
adcb
gs
mov
fwait
loop
shll
adc
test
mov
push
hlt
insl
adc
nop
rolb
xchg
sti
and
add
add
add
cmp
adc
arpl
and
fwait
jmp
inc
push
and
and
push
sbb
xor
cli
arpl
loopne
push
or
add
xor
add
push
mov
mov
roll
adc
mov
push
fwait
sub
mov
daa
and
or
outsl
add
call
push
lret
sub
mov
rclb
lret
sub
mov
or
out
pop
push
dec
orb
mov
or
arpl
cmp
inc
inc
cmp
dec
cmp
cmp
flds
lods
xchg
mov
out
inc
mov
imul
cmpb
xchg
pusha
adc
insl
add
loopne
loope
ret
xor
adc
and
arpl
fsubs
das
shrl
add
pusha
add
or
aaa
mov
sub
jne
adc
add
add
xor
adc
fstpl
add
fwait
notb
fwait
pusha
insl
adc
lret
push
imul
xchg
fnstcw
add
test
arpl
xchg
ljmp
adc
test
sbb
sub
push
nop
in
mov
gs
mov
mov
out
adc
addb
add
addr16
loop
test
arpl
mov
add
call
add
out
and
std
mov
add
pusha
gs
lcall
add
gs
xor
push
imul
jmp
outsb
adc
cwtl
incb
or
adc
sub
mov
nop
out
push
fwait
clc
test
adc
out
mov
sti
push
xchg
and
rolb
shlb
add
cli
insl
push
add
cltd
in
sub
imulb
cmp
bound
adc
testb
push
xor
arpl
push
adc
jae
add
adc
adc
sbb
jns
iret
stos
push
arpl
data16
cli
push
in
adc
mov
push
movups
adc
test
out
add
add
adc
lock
test
stos
adc
add
add
roll
adc
sub
test
arpl
sub
mov
repz
testb
mov
daa
sub
test
push
adc
mov
jbe
rcll
fs
sub
test
pusha
add
data16
out
arpl
adc
idivb
cmp
xor
inc
or
testb
jo
mov
js
and
shl
sti
xchg
adc
xchg
mov
jp
out
out
adc
push
cli
scas
add
mov
lcall
or
sbb
or
loopne
pop
arpl
add
add
add
cmp
inc
inc
ljmp
adc
push
sbb
add
enter
loop
lcall
pop
out
add
add
imul
adc
push
add
cmpb
mov
push
les
adc
clc
xor
push
add
adc
mov
inc
outsl
shrb
fwait
roll
out
shll
xchg
out
push
rclb
sub
fwait
iret
push
sbb
in
cltd
stc
loope
in
or
jle
addr16
adc
mov
jbe
rclb
rorb
push
and
sub
ljmp
pop
sub
in
push
add
add
pusha
sub
push
out
sbb
cmp
mov
mulb
nop
ljmp
pop
andl
add
arpl
rorl
jo
add
add
or
out
mov
sub
out
outsl
add
push
pop
mov
loope
pushf
mov
out
add
add
addr16
add
cltd
mov
gs
stos
push
lcall
add
add
loopne
nop
daa
mov
rolb
push
loop
lock
mov
lock
sub
jl
add
shrb
test
pop
test
cs
xor
or
loop
sbb
gs
xchg
out
lds
mov
xor
inc
mov
test
mov
loopne
adc
dec
repz
add
daa
mov
inc
cwtl
iret
loope
mov
add
out
stos
add
outsb
xchg
adc
fwait
ljmp
aad
loop
adc
jb
fwait
push
sbb
fwait
sbb
gs
fisubl
and
inc
or
loope
and
add
sub
outsl
stos
mov
hlt
arpl
add
adc
and
daa
jmp
imul
jnp
add
lret
adc
scas
add
out
add
nop
gs
add
add
add
scas
incb
add
loop
das
mov
lcall
icebp
mov
adc
adc
ljmp
and
xlat
push
add
inc
add
add
add
es
lret
sub
inc
push
aam
add
adc
ds
push
ljmp
insl
push
out
addr16
daa
sub
in
test
mov
sub
or
add
add
xor
fwait
xor
dec
xor
pop
xor
push
lods
xor
das
xor
xor
and
add
xor
or
add
add
sbb
cwtl
mov
and
pop
gs
pusha
inc
fcmovb
cmp
push
pop
jnp
adc
xlat
lock
and
push
push
imulb
xorb
and
adc
adc
adc
mov
out
mov
push
add
add
mov
scas
add
aad
fwait
out
mov
in
push
add
mov
jo
jno
push
int
add
ljmp
jecxz
cmp
push
ljmp
add
lock
lock
insl
mov
add
jp
imul
in
mov
adc
loop
lcall
add
outsl
and
add
push
add
fwait
jmp
push
addb
pop
orl
jo
jo
sahf
xor
nop
or
inc
mov
out
push
lahf
add
out
mov
stos
out
aas
inc
mov
inc
push
nop
cmp
mov
push
or
jmp
adc
adcb
fisubrl
adc
add
xchg
jne
imul
add
xorl
xor
sti
push
mov
fwait
ljmp
into
xor
fsubl
sbb
mov
adc
xlat
add
stos
loop
add
dec
add
sbb
mov
rcrb
xchg
push
add
push
add
bound
popa
jne
push
pusha
or
insl
fwait
adc
sbb
rcrl
loope
fwait
mov
mov
addr16
adc
sti
xchg
inc
or
pusha
add
out
stos
nop
push
mov
fldenv
rolb
mov
xlat
add
adc
in
test
mov
xor
and
add
test
add
ret
inc
add
insb
nop
add
add
jmp
mov
cmp
mov
outsb
xor
test
mov
add
adc
sti
pop
orb
notb
nop
adc
push
add
mov
mov
mov
aad
lcall
mov
xor
add
shr
out
add
fwait
mov
mov
adc
fwait
sbb
sahf
out
sti
xchg
sti
scas
add
lcall
sub
add
outsl
xchg
push
add
dec
add
cltd
mov
mov
adc
sub
add
stos
add
sub
add
sub
push
push
pop
jl
adc
and
add
add
mov
fwait
out
fwait
loop
push
push
ficoms
adc
add
add
add
mov
add
push
push
hlt
aad
add
push
lcall
adc
fwait
jmp
ljmp
data16
loope
add
repnz
and
add
adc
cs
adc
add
cli
mov
gs
sub
push
leave
adc
adc
sti
push
add
stos
add
outsb
xchg
loope
pushf
push
add
xchg
push
push
into
add
pop
fs
out
addl
cs
add
sbb
push
imul
sub
sub
orb
mov
inc
add
lcall
add
and
or
imul
lcall
adc
verr
or
adc
stos
adc
aad
loope
sub
ljmp
push
jae
adc
adc
sti
ds
test
mov
add
mov
test
test
sbbl
lcall
sbb
xchg
fwait
add
mov
lock
add
out
fwait
decb
gs
loop
loop
mov
sub
lret
mov
daa
sub
add
cmp
pop
sbb
popa
inc
sbb
inc
sbb
aam
sbb
inc
sbb
cs
lcall
adc
sbb
xlat
ret
or
sbb
inc
or
sbb
xorb
jns
sti
jbe
xor
fwait
nop
cli
fistl
rcll
adcb
adc
add
rolb
mov
sbb
ss
test
push
roll
add
aam
mov
shrb
add
inc
adc
andl
aas
stos
push
fs
iret
inc
cmpb
sbbl
ljmp
sbb
xorb
shll
hlt
gs
sbb
iret
arpl
mov
sbb
stos
out
or
stos
nop
push
adc
insl
add
fwait
ss
xchg
add
inc
xchg
sbb
add
add
push
add
add
stos
push
mov
shl
or
cmpps
cmp
gs
push
shrb
inc
pop
sbbl
cmp
js
cmp
addl
mov
or
shll
add
test
imul
pop
inc
mov
dec
add
into
outsl
xchg
sbb
addl
push
out
roll
and
cwtl
sub
sub
gs
inc
add
push
insl
add
mov
sub
inc
adc
adcb
push
lock
sbb
sbb
test
mov
pop
ret
push
add
test
and
cmp
add
mov
add
add
add
cmp
add
in
push
insl
adc
loope
add
add
pop
pop
lcall
jecxz
push
add
fwait
out
sub
out
test
adc
add
cmp
add
insl
push
adc
loop
arpl
jmp
stos
fstpt
inc
cmp
shrl
stos
fstpt
pop
fisttpl
loopne
add
dec
lcall
rolb
add
pop
stos
cmp
loop
and
insl
push
jmp
adc
add
mov
popa
sbb
fwait
adc
addr16
sub
or
insl
add
rcrb
adc
inc
arpl
shrb
sub
loop
out
adc
push
pusha
xchg
sbb
sbb
lcall
test
push
mov
add
inc
cmp
adc
pusha
addr16
mov
adc
gs
and
stos
lret
mov
pop
adc
loope
xor
stos
lret
mov
repnz
xchg
lret
add
adc
cmp
cmp
mov
or
adc
lret
push
rolb
insl
and
jmp
andl
mov
add
add
mov
mulb
std
xchg
add
repnz
sub
add
pushf
call
into
cltd
lods
outsl
xchg
lret
inc
mov
out
mov
notb
fadds
jle
les
push
dec
adc
pop
sahf
inc
inc
ffree
mov
addb
addb
addb
push
mov
mov
loopne
test
mov
and
fisubl
add
insl
mov
loop
push
sub
ret
and
punpcklbw
lret
roll
leave
mov
and
jecxz
pusha
pop
loopne
mov
loope
and
and
adc
add
adc
push
int
addr16
mov
push
loopne
test
mov
add
push
loope
dec
addb
and
add
inc
xor
cltd
mov
inc
pop
gs
faddp
pop
jo
stos
push
loope
bound
xor
or
add
sarb
iret
mov
xchg
inc
cmp
add
sarb
fwait
call
inc
js
add
fwait
push
mov
in
xchg
add
sbb
add
adc
repz
in
fsubrl
popa
in
add
mov
add
xor
mov
loop
popl
loope
mov
sbb
xor
test
rorb
roll
add
js
add
stos
lret
fwait
sub
sub
sbbb
fadds
pop
movb
adc
add
fsubl
mov
or
jne
mov
add
fs
dec
stos
das
hlt
and
jo
loop
lds
loopne
fwait
iret
xor
fnstsw
and
add
lret
mov
call
dec
jl
add
sub
add
and
repnz
int
add
mov
lret
repnz
or
leave
inc
or
or
add
sub
adc
push
add
loop
cwtl
out
add
or
add
mov
test
stos
outsb
mov
add
add
outsb
add
arpl
add
jne
sub
mov
fadds
addb
fs
add
xchg
or
sub
gs
fwait
adc
adc
inc
fwait
xlat
xchg
adc
test
arpl
js
add
sub
out
fwait
out
push
push
add
aam
outsl
in
sub
sub
add
aas
adc
fwait
adcb
fwait
out
test
xor
sti
repnz
daa
notl
out
add
add
pop
mov
loope
add
loope
mov
sub
add
pusha
pop
add
lods
add
inc
mov
add
add
add
cld
lods
add
fwait
lds
lret
xchg
addb
or
scas
push
bound
mov
mov
sbb
adc
mov
push
add
push
inc
inc
push
add
dec
test
ljmp
stos
add
mov
push
daa
mov
cmpsb
ljmp
add
lcall
add
cwtl
lock
mov
push
mov
aaa
lock
add
adc
mov
mov
outsl
sub
or
mov
inc
xor
push
inc
sti
add
and
fnsave
add
loop
loope
cmpsb
add
sbb
loope
and
aad
loope
inc
push
push
adc
imul
sbb
cmp
mov
xlat
lock
adc
arpl
out
add
test
insl
das
ljmp
or
push
ljmp
test
insl
das
or
inc
add
inc
add
insl
sub
add
lock
add
add
lcall
loope
push
aad
add
add
adc
cmpsb
loop
mov
push
add
outsl
add
in
mov
rol
sbbb
sub
push
inc
insl
stos
add
addr16
fsubrl
pop
mov
add
out
sbb
stos
out
lcall
lods
push
pop
or
adc
and
mov
nop
pop
adc
inc
push
shl
fs
and
add
push
lcall
mov
add
mov
adc
add
xchg
sub
add
int3
pusha
add
gs
xchg
rolb
pusha
and
scas
add
fs
adc
loope
pop
jo
push
loope
push
jo
fstpt
imul
pop
mov
out
imul
push
and
mov
pop
gs
add
ss
outsl
xor
xor
xor
sub
jo
gs
xor
xchg
add
add
test
sub
cmc
sbb
sub
scas
push
or
add
adc
adc
push
mov
and
hlt
pop
add
add
add
lcall
stc
mov
mov
add
mov
jl
add
sti
push
mov
nop
or
pop
test
xchg
xor
in
movsb
or
and
nop
add
ljmp
add
and
sarb
fucom
bound
imul
xchg
adc
mov
adcb
mov
jo
mov
add
in
adc
jp
xor
lock
adc
mov
adc
xor
lcall
test
adc
inc
add
flds
cmp
add
sbb
fwait
clc
fldcw
add
imul
mov
add
add
xchg
sub
mov
mov
push
mov
adc
outsb
shr
fwait
mov
add
add
arpl
push
cmpsl
push
push
orb
adc
adc
or
and
mov
cmc
test
popa
add
mov
fadds
arpl
adc
add
fwait
xchg
arpl
adc
adc
push
lret
or
adc
imul
mov
add
orb
jo
and
or
push
in
push
and
imul
jnp
addl
add
mov
or
cltd
inc
ljmp
add
outsl
sub
add
mov
mov
xchg
and
push
push
push
rolb
push
insl
adc
lcall
ret
xor
call
push
add
out
add
gs
incb
jecxz
adc
mov
addr16
incb
add
adc
mov
add
cli
andb
xor
outsb
inc
shlb
push
cmp
shl
lock
add
add
scas
cwtl
sti
mov
lods
add
add
ljmp
add
pop
repz
adc
push
rcll
icebp
xor
jmp
adc
adc
iret
and
mov
loop
inc
or
outsl
add
inc
pusha
or
cs
call
add
jmp
sub
xchg
mov
lock
cli
inc
fstl
test
or
add
mov
dec
es
stos
lret
push
cmpsb
add
add
arpl
mov
sub
inc
scas
add
aad
scas
add
rolb
bound
adc
xchg
out
add
add
add
adc
add
clc
scas
add
pop
call
insl
push
add
repz
lcall
in
cli
mov
fadds
testb
cli
gs
lret
push
mov
add
or
xchg
add
add
pop
mov
add
pop
out
pop
add
mov
sbb
adc
push
loope
jl
mov
or
loope
add
add
sbb
arpl
mov
mov
call
rol
sar
add
in
sub
arpl
daa
mov
and
aad
lcall
xchg
lods
add
cmp
xor
adc
pop
gs
and
cs
or
mov
add
gs
aad
loope
add
orb
push
push
icebp
adc
add
adc
sti
dec
add
push
xlat
mov
into
fwait
out
xor
loope
sub
imul
orl
add
inc
add
adc
scas
add
cs
mov
inc
sbbb
push
xchg
pusha
adcb
adcb
adcb
jp
adc
adc
adc
adcb
out
insl
mov
add
aam
add
lcall
add
movb
add
test
loope
inc
sub
in
add
in
gs
push
je
inc
sbb
gs
rolb
fiadds
push
adc
push
sbb
add
in
fwait
rol
push
cli
add
incb
adc
inc
or
fwait
add
fistl
adc
sbb
push
adcb
adc
or
push
lcall
adc
xor
adc
add
mov
or
add
and
adc
adc
push
imul
mov
imul
shrl
stos
and
out
addr16
cli
rorb
push
add
inc
mov
call
inc
add
test
pop
inc
add
fs
jmp
add
fwait
add
push
fwait
ljmp
cs
add
mov
mov
sub
insl
add
mov
pusha
mov
lods
add
push
adcb
push
mov
test
mov
shlb
dec
inc
push
outsb
inc
xchg
loopne
sub
xor
jmp
add
xchg
pop
inc
add
adc
push
adcb
push
mov
xor
mov
adc
push
dec
add
adc
mov
addb
push
add
add
lcall
stos
add
push
mov
lods
add
add
push
mov
lods
push
sub
add
gs
lcall
adc
addb
or
mov
addr16
adc
sbb
push
add
mov
daa
sub
out
add
mov
add
mov
push
push
sub
add
ror
inc
mov
add
incb
push
data16
add
xlat
mov
loope
jecxz
mov
add
out
loopne,pt
pusha
cli
and
cmp
sbbb
call
mov
in
popa
push
add
push
addr16
addr16
push
xchg
jmp
insl
adc
outsl
add
mov
fwait
push
pusha
adc
push
loope
js
mov
gs
sbb
cs
jmp
add
adc
add
test
push
mov
dec
jmp
into
add
adc
cs
add
fiadds
out
add
addl
addr16
movsl
gs
sub
stc
mov
adc
add
mov
ss
mov
cltd
inc
daa
sbb
es
push
fadd
push
mov
and
in
lcall
lcall
pusha
push
dec
stos
push
inc
pop
push
push
mov
in
and
loope
push
and
or
adc
push
sbb
and
gs
push
mov
sub
mov
and
and
add
add
xlat
add
inc
adc
gs
pop
addb
or
pop
mov
arpl
dec
incl
lcall
in
add
mov
inc
or
add
fsubrl
add
daa
loop
or
outsl
add
add
out
outsl
xchg
add
inc
insl
add
inc
lret
loope
sti
and
test
pusha
jp
push
inc
sbb
loope
push
outsl
gs
lret
stos
adc
mov
test
mov
sub
inc
flds
cmp
xor
adc
xchg
sub
and
push
and
insl
xchg
add
add
xchg
push
cmp
bound
mov
xchg
bound
push
add
pusha
add
dec
dec
inc
andb
add
lret
shll
adc
mov
shrb
lret
adc
out
add
loopne
cli
and
inc
rorb
mov
mov
rcrl
testb
push
and
pusha
scas
data16
xchg
adc
add
sbb
adc
mov
inc
sahf
idivb
mov
les
loopne
mov
add
mov
mov
or
popa
gs
mov
inc
mov
mov
gs
pop
mov
popf
scas
xlat
mov
fwait
push
aad
inc
inc
pop
fiaddl
cmp
push
aad
lcall
and
adc
mov
test
push
mov
loopne
fs
mov
fs
outsb
insl
mov
mov
andb
adc
mov
adc
or
lcall
add
add
xorl
xor
xchg
rorb
xorb
lret
shlb
fs
inc
inc
inc
outsl
add
ljmp
arpl
adc
xchg
pusha
daa
sub
sti
pop
loopne
cmpsb
rcrl
loopne
loope
imul
xchg
add
add
imul
add
and
pop
arpl
add
lret
adc
lcall
sbbb
stc
addb
leave
addl
pop
in
sub
fwait
push
sbb
adc
stos
push
push
scas
notb
sbb
adc
and
add
pop
inc
sbb
dec
mov
arpl
lret
xchg
inc
pop
nop
je
scas
add
sbb
add
outsb
rcr
lock
add
mov
add
push
push
or
hlt
add
pop
lock
lcall
add
lods
add
stos
jmp
add
nop
add
add
insl
loopne
insl
shrb
add
rolb
out
test
sub
and
add
mov
push
add
push
add
push
arpl
add
and
add
aas
fwait
out
lcall
adc
jb
or
pop
pushf
std
mov
adc
and
mov
std
insl
xchg
add
loope
jnp
adc
lret
or
out
imul
add
cmpsb
cmpsb
lcall
ljmp
adc
or
addr16
pushf
insl
rolb
adc
loope
add
out
add
add
incl
scas
test
fs
dec
mov
and
and
push
or
daa
pusha
sub
inc
pop
sub
add
loop
jp
sub
addr16
ljmp
fcomps
adc
push
add
and
call
xor
adc
pop
and
popa
or
and
lock
addb
loope,pt
loopne
cli
gs
add
addb
add
adc
adc
jbe
adc
adc
mov
fwait
out
adc
pop
out
jno
addl
push
push
push
stc
mov
movzbl
scas
sub
inc
add
inc
add
inc
add
xchg
nop
adc
test
sub
shlb
add
adc
push
add
rcrb
mov
imul
xchg
adc
push
or
repnz
push
jo
nop
adc
loope
inc
arpl
inc
or
add
push
out
pop
out
das
nop
daa
sub
add
mov
shlb
ss
mov
sbb
sub
test
mov
jp
add
add
pop
in
insl
push
in
fwait
jmp
test
mov
loopne
sbb
loope
jnp
arpl
push
mov
bound
lcall
adc
push
fstl
dec
sbb
push
bound
adc
dec
add
enter
shll
test
push
push
loopne
add
add
sbb
xlat
lock
or
add
mov
add
adc
mov
outsb
adc
and
adc
insl
or
arpl
pusha
cmp
or
scas
mov
and
and
mov
fwait
loopne
sub
icebp
or
add
addb
adc
sti
xor
add
or
mov
cwtl
arpl
loopne
shlb
push
mov
sub
xor
repz
nop
mov
lcall
adc
cmpsl
push
cmp
push
mov
add
jns
das
cs
add
arpl
add
repnz
and
pop
shrl
inc
adc
jno
cwtl
add
add
into
xorl
pushf
pop
loope
add
xor
or
mov
add
pop
inc
or
xor
fbld
lret
sti
jp
nop
or
lods
iret
mov
mov
inc
fwait
adc
gs
push
jae
pop
or
add
fstpl
aad
sbb
mov
jns
adc
push
mull
add
mov
in
rolb
loope
pusha
add
xor
test
ss
inc
nop
add
add
cs
mov
mov
adc
ret
add
mov
test
mov
loop
nop
call
push
add
cmovno
fwait
adc
arpl
push
and
mov
nop
sbb
sbb
jmp
stos
ss
repnz
xchg
push
pop
out
mov
ljmp
movsl
and
pop
pop
shlb
pop
adc
shll
pop
les
pop
in
push
mov
pop
divb
pop
in
sbbb
cmc
cmp
sbb
sbb
sbb
rcrb
pop
aam
adc
push
out
mov
test
adcl
add
push
bound
sub
and
inc
and
gs
pop
out
xchg
dec
stos
addl
pop
jl
pop
add
lcall
pop
and
shl
sbb
dec
cmp
mov
xchg
loope
sub
jo
gs
inc
out
xor
loopne
mov
lock
xor
add
sbb
push
lock
in
push
in
adc
add
jno
push
push
xchg
adc
lcall
push
arpl
in
orl
nop
or
leave
xor
pop
add
stos
xor
mov
andb
add
bound
dec
mov
xor
arpl
mov
fwait
out
inc
adc
sub
inc
mov
lods
jbe
fisttpl
push
mov
xor
mov
cmp
testl
adc
lcall
lods
add
lods
add
repz
dec
mov
add
cli
push
jl
adc
adc
push
sti
scas
add
test
gs
mov
test
test
mov
cmp
insl
adc
lcall
in
fdivl
add
adc
add
mov
fs
add
cli
mov
add
mov
shrb
add
hlt
push
xor
add
jmp
mov
add
test
push
call
adc
add
push
adc
adc
jns
mov
adc
mov
add
cmpsb
mov
out
mov
adc
and
sub
daa
shl
add
add
fsubs
adc
sub
ss
adc
addr16
out
add
adc
adc
mov
cmp
and
in
pop
push
or
adc
sti
xorl
add
daa
add
add
out
add
add
add
add
add
clc
scas
add
add
test
xchg
sti
lods
add
xchg
iret
push
cld
push
fidivl
adc
les
adc
add
cmp
adc
cmp
out
add
mov
sub
cmp
mov
add
insl
enter
shrl
mov
test
fwait
adc
push
xchg
adc
lahf
loopne
lret
jb
adcl
test
add
adc
add
push
imul
lcall
inc
popa
rcrb
icebp
shrl
cs
add
cs
add
lret
out
pop
out
add
add
jae
jne
and
aaa
add
in
mov
fwait
push
push
jbe
and
adc
jmp
inc
push
xchg
add
dec
mov
mov
inc
adc
add
xchg
adc
cli
enter
add
mov
rolb
mov
sub
add
add
in
add
cmpb
mov
sbbb
repnz
jne
out
rcrb
dec
insl
mov
add
add
lret
fldl
test
test
push
add
outsb
add
stos
lret
add
add
scas
add
fwait
inc
hlt
arpl
add
add
add
mov
push
add
mov
insl
es
adc
lcall
lcall
adc
lcall
addr16
lcall
sbb
push
push
dec
add
arpl
push
add
adc
mov
jle
or
arpl
inc
pop
and
mov
add
loop
add
or
mov
inc
add
xchg
shlb
out
aas
mov
test
or
push
inc
pop
add
cld
insl
xchg
adc
ljmp
enter
shlb
push
repnz
add
and
es
mov
ljmp
cs
pop
pusha
xor
push
andl
daa
dec
cli
mov
adc
push
mov
fisubl
push
add
fwait
mov
out
adc
sbbb
add
add
adc
pop
pop
mov
scas
add
arpl
fiadds
inc
sub
in
addb
mov
jb
ret
add
aad
pop
push
imul
stc
and
add
mov
pop
xchg
lods
pusha
sub
mov
adc
mov
push
mov
arpl
jbe
lcall
adc
inc
pop
xor
in
add
and
push
push
rclb
mov
cmpb
fwait
ret
aas
push
or
cs
or
popf
mov
sti
mov
and
addl
jmp
mov
inc
or
adc
pusha
pop
out
mov
fsubrl
mov
adc
imul
inc
jge
push
push
add
pop
push
fwait
shll
xor
loopne
push
and
rorb
arpl
imul
adc
mov
dec
sub
or
loopne
xchg
loopne
arpl
imul
add
push
inc
xor
mov
xor
push
repz
inc
mov
add
push
std
and
mov
push
enter
mov
shll
lods
je
adc
ss
add
push
push
pop
xorb
add
gs
adc
loope
add
lret
add
cmp
and
or
push
add
lcall
add
add
or
testb
add
xor
adc
data16
lret
mov
call
andb
push
inc
movsbl
dec
fadd
inc
rolb
inc
mov
insl
adc
loope
das
and
test
lds
push
out
cmpsb
inc
movsl
inc
inc
jb
or
mov
inc
xor
sub
addl
adc
imul
add
xor
adc
pop
std
add
test
adcl
add
mov
adc
inc
xchg
push
outsb
inc
sar
mov
inc
or
xor
push
push
shll
mov
sarl
mov
push
je
or
cmpsl
fwait
ljmp
dec
insl
push
loop
in
test
loop
mov
sti
ljmp
test
inc
mov
adcb
add
mov
repz
fnstsw
add
add
rcll
dec
mov
sub
xor
xchg
out
lcall
mov
jae
add
mov
cmp
mov
push
and
rcrl
sbb
pop
inc
popa
and
test
fstl
test
push
enter
push
adc
lock
push
inc
cltd
ljmp
mov
push
pop
add
inc
push
cmp
dec
mov
add
loop
mov
lret
addr16
pop
cmp
cmp
cmp
out
jecxz
sbb
mov
add
cmp
sub
sbb
mov
xor
xor
sub
or
xchg
pop
jo
inc
inc
addr16
push
pop
mull
shrl
lods
mov
mov
or
mov
jb
cli
mov
adc
or
add
pop
xor
push
fs
daa
pop
push
movsb
sahf
and
mov
addb
cmp
xchg
pop
adc
divb
out
repnz
loope
mov
imul
adc
sbb
push
fnsave
gs
aaa
jno
or
sub
out
adc
adc
shll
and
push
adc
sbb
adc
adc
push
adc
sahf
pop
adc
cmp
sbb
push
pop
adc
push
lret
adc
addb
adc
push
adc
lret
adc
push
stos
lret
xor
pop
adc
dec
loope
pop
adc
roll
add
and
lock
xor
mov
loopne
mov
nop
mov
and
jge
adc
inc
inc
mov
cmp
sub
lret
add
shlb
push
or
sub
gs
mov
adc
mov
sub
stos
nop
add
addb
insl
push
add
lcall
add
test
mov
push
data16
inc
mov
rolb
les
adc
push
adc
loopne
mov
movsb
adc
add
loopne
push
pop
xchg
push
mov
popa
xchg
fiadds
je
rorb
mov
gs
push
mov
adc
mov
adc
add
fstl
insl
mov
lret
sub
arpl
repnz
add
add
out
add
lcall
dec
xchg
fidivrs
rclb
push
mov
test
push
add
xor
and
stos
orb
mov
inc
push
cltd
or
push
fwait
and
loopne
into
push
mov
add
cli
push
sub
adc
sbb
lock
sbb
add
mov
cmp
imul
loopne
repnz
leave
addb
popa
sbb
mov
mov
push
rorb
xchg
jb
in
add
push
dec
addb
adc
cld
add
jb
cmpl
shld
fidivs
sub
add
inc
sub
push
mov
loope
loopne
and
rolb
lods
cmp
jp
dec
sub
or
cmp
sub
lret
push
or
push
or
imul
icebp
xchg
rolb
dec
jo
insb
pop
dec
lock
adc
rorl
cmpsl
push
nop
fs
mov
shll
mov
push
inc
adc
xlat
mov
fwait
lret
popa
shll
ds
jp
mov
cmp
mov
jne
loope
xor
pop
pop
lock
mov
repnz
in
add
testb
sbb
or
jno
sbb
push
loope
push
shlb
jmp
xchg
pop
stos
lret
es
mov
ret
data16
push
rorl
and
inc
inc
add
jge
jp
fildl
add
adc
mov
push
or
sbb
push
loopne
adc
mov
loopne
repnz
push
in
mov
add
into
push
xchg
xor
mov
call
out
lods
xor
push
jbe
add
loope
push
push
add
adc
adc
adcb
sub
nop
lds
push
xor
add
jecxz
inc
sub
inc
ss
mov
xchg
push
mov
lods
add
push
and
data16
lret
mov
lret
call
adc
add
lret
push
nop
sub
adc
fs
loope
xchg
add
repnz
imul
add
adc
mov
adc
pop
pop
add
ljmp
add
das
adc
adc
pop
pop
mov
scas
add
scas
aad
fwait
pusha
addr16
push
scas
in
add
add
sub
arpl
add
test
adc
imul
add
mov
add
xor
push
add
mov
outsl
pop
lods
add
mov
add
mov
cld
add
imul
loop
cmp
inc
nop
add
stos
out
push
jecxz
adc
mov
add
out
mov
add
mov
add
add
stos
sbb
mov
adc
push
lcall
cmp
adc
add
adc
push
fistpl
arpl
stos
add
out
adc
imul
fwait
xor
stos
add
sbb
sbb
cs
mov
sub
mov
add
or
add
adc
add
mov
arpl
and
add
push
xchg
add
sub
stos
adc
imul
shlb
mov
cmp
das
add
fwait
ret
repnz
aad
popf
int
test
adc
add
scas
add
sub
imul
out
sub
or
adc
mov
fs
adc
cmpb
add
adc
mov
add
imul
lcall
and
cmp
sbb
add
loopne
add
mov
gs
add
add
and
cs
sub
add
fnstsw
mov
add
out
sub
repnz
daa
fwait
loop
mov
scas
aad
add
jmp
add
in
orb
or
roll
lcall
shlb
adc
andl
xchg
ljmp
arpl
add
mov
adc
addr16
add
incb
ljmp
add
arpl
lds
push
fwait
add
pminub
adc
ljmp
or
add
ljmp
out
add
test
mov
iret
inc
addb
add
mov
add
inc
xchg
gs
addr16
out
and
add
cmpsb
mov
ljmp
ffree
es
subb
loopne
mov
or
sbb
insl
pop
out
inc
fwait
loope
fadds
jmp
daa
insl
add
add
outsb
mov
adc
add
add
add
ljmp
add
cmp
loop
adc
testb
adc
repz
lods
adc
cltd
add
add
arpl
les
adc
repnz
sub
addb
lret
pop
mov
shr
rorb
test
arpl
addl
add
lret
sbb
sbb
mov
lret
inc
aam
inc
fcmovb
add
sbb
orb
stc
add
mov
push
push
or
in
xchg
addb
lret
loop
sbb
into
mov
cs
lods
add
and
fs
add
aad
push
lcall
add
adcl
xchg
pusha
pop
inc
pop
adcl
add
mov
add
sti
add
std
xorl
xchg
sub
xlat
loopne
fs
or
lret
inc
sub
addb
imul
push
loopne
test
or
gs
add
sbb
sub
add
sbb
mov
inc
push
ret
mov
test
mov
adc
fwait
icebp
loopne
cmpsl
mov
adc
and
add
daa
cmp
inc
dec
test
adc
add
add
lret
sbb
xchg
idivb
daa
pusha
roll
lcall
and
mov
push
loopne
pop
dec
pusha
or
movsb
adc
push
mov
daa
scas
and
das
fwait
jne
adc
sub
addr16
lret
ror
rclb
push
rcrb
add
repnz
mov
mov
inc
and
and
and
and
gs
xor
mov
and
cmp
and
loopne
push
xor
add
xor
pop
inc
add
xor
add
ret
lds
test
mov
xor
add
into
xor
ret
xor
add
xor
xor
push
aad
xor
mov
xor
inc
mov
add
jno
xor
lds
imul
inc
or
ficoml
leave
xor
addb
and
mov
jecxz
push
add
xor
adc
test
mov
xchg
mov
push
adc
inc
add
subb
loope
cltd
pusha
xor
push
add
loopne
inc
rolb
stos
add
and
add
es
and
ds
add
and
mov
mov
and
mov
add
nop
add
sti
push
xor
push
addr16
push
aad
loope
inc
add
xor
addr16
push
icebp
add
adc
xchg
mov
add
xchg
addb
sti
cli
scas
add
lock
sub
pop
sbb
push
sti
or
add
loopne
stos
add
rorb
sti
scas
add
add
fstpt
or
add
out
ja
in
movsb
stos
push
inc
js
fwait
sarb
jo
or
jb
add
xchg
fildl
add
add
push
adc
stos
xor
and
mov
into
add
scas
mov
fwait
or
add
adc
pop
push
add
mov
lcall
mov
push
jnp
cmpsb
add
cmpsb
sub
fwait
addb
adc
popa
pop
xchg
add
adc
add
stos
push
cmpb
add
push
add
sti
add
add
add
xor
add
mov
lcall
fwait
cmp
sti
addl
fwait
adc
lds
add
mov
sbb
xchg
mov
out
mov
inc
jo
roll
adc
pusha
or
cmp
adc
gs
add
mov
lds
in
lcall
dec
lcall
mov
mov
rcr
mov
sub
sbbb
arpl
pop
mov
lcall
icebp
add
mov
adcb
in
adc
add
add
push
add
add
jne
lret
sti
mov
inc
jo
and
rorb
add
in
jo
test
add
mov
arpl
and
data16
push
and
mov
mov
adc
xor
push
and
add
dec
das
nop
add
push
mov
adc
loope
push
imul
out
sub
stos
cmp
push
andl
mov
shl
mov
gs
mov
cli
rolb
xor
lcall
test
mov
aaa
jnp
or
addb
or
xchg
adc
mov
add
mov
fwait
jecxz
push
and
and
or
sti
outsb
mov
push
cmpsl
fwait
loopne
bound
xor
fs
push
lcall
jo
stc
fs
push
add
loope
push
ljmp
add
clc
fwait
pop
or
add
push
xor
nop
lcall
out
outsb
rcl
fwait
pop
add
mov
xchg
adc
enter
lcall
sub
cmpsb
mov
fwait
out
or
add
mov
sub
adc
add
add
mov
stos
sub
xchg
rcrb
jno
xchg
ss
nop
or
adc
sub
sti
shlb
cmp
pop
test
mov
push
setnp
gs
ss
sbb
jo
push
add
push
outsb
rcrl
adc
add
push
or
sbb
out
out
arpl
xor
mov
lock
movsl
pusha
xchg
and
add
sarb
or
adc
ljmp
out
sbb
and
sub
roll
add
jmp
add
out
gs
xor
mov
lcall
mov
add
loopne
xorb
out
mov
lar
mov
nop
mov
push
fstl
push
ss
xor
mov
mov
ljmp
out
push
add
sbb
sbb
lcall
add
mov
push
xchg
movsl
nop
ret
les
add
cmp
xor
mov
sahf
or
lahf
cmpsl
jo
push
mov
adc
push
push
or
add
push
push
xor
add
cmp
push
add
rcrb
stos
rcll
nop
xor
rolb
add
icebp
fs
add
ljmp
rcrb
fwait
ljmp
xchg
ss
frstor
mov
addr16
add
addr16
xlat
mov
mov
mov
xlat
mov
or
icebp
shlb
mov
jo
arpl
icebp
fs
imul
jo
sbb
add
xchg
adc
push
fdiv
out
lcall
push
adc
imul
addb
pop
mov
mov
push
aam
cmp
add
stos
adc
pop
andb
mov
sbb
push
notb
add
out
pop
jp
add
add
pop
xor
pusha
add
add
ficoml
imul
arpl
repnz
add
adc
pushf
aas
add
outsb
inc
lock
fwait
mov
shl
lcall
shl
lcall
inc
inc
lds
add
jmp
int
jmp
ret
add
icebp
out
mov
jecxz
push
insl
stos
push
jmp
ljmp
call
ljmp
push
add
out
insb
and
add
sub
stos
out
mov
sbb
jo
loope
push
mov
loop
outsb
pop
into
fwait
call
lds
ficomps
shlb
add
fwait
repnz
pop
scas
popf
jmp
outsb
pop
xlat
cltd
cld
arpl
jmp
rolb
fwait
inc
add
xchg
cwtl
xlat
fs
cs
add
loope
adc
loope
add
jmp
in
xor
pop
lock
andb
jmp
add
data16
out
data16
add
fisubrs
cli
loope
insb
xchg
pusha
adc
call
pop
gs
lret
add
in
scas
mov
ss
jmp
and
add
aad
rolb
inc
rolb
shrb
loop
add
adc
sarb
ljmp
out
inc
mov
add
add
iret
mov
aad
add
push
push
or
mov
add
cmp
adc
stos
aad
add
fwait
call
mov
insl
xchg
out
lcall
scas
aad
adc
adc
sti
add
cs
out
gs
adc
in
aam
add
xor
mov
daa
sub
add
add
fwait
pop
gs
push
add
cli
lds
filds
add
arpl
icebp
gs
xor
pop
into
lcall
loope
pop
add
xchg
in
adc
popf
ljmp
test
push
and
push
add
pushf
pop
add
add
out
lcall
cld
add
add
addl
gs
sbb
pop
add
arpl
icebp
add
in
out
fs
ror
add
jmp
in
lods
add
add
and
pop
mov
adc
adc
add
loop
push
adcb
jbe
scas
add
lahf
add
xor
mov
aad
popf
mov
adc
cmp
cs
sub
loop
jns
outsb
and
aad
fwait
repz
lds
arpl
add
mov
adc
mov
stos
out
jbe
adc
es
addb
out
cmpb
mov
fildl
mov
adc
mov
push
add
add
sub
insl
dec
add
inc
sbb
cmpsb
addb
push
imul
push
add
gs
push
add
add
ret
addb
add
and
lcall
add
lcall
aad
push
cwtl
jecxz
arpl
add
and
imul
popf
in
mov
push
mov
add
ljmp
shrb
test
push
in
xchg
add
inc
and
lds
addr16
loop
push
or
xchg
sbb
aad
loope
ret
push
mov
stos
loop
jnp
push
pop
mov
pop
xorl
add
nop
mov
cs
mov
inc
adc
pushf
mov
scas
mov
cmp
aas
adc
in
sbbb
mov
mov
imul
mov
add
pop
shll
aad
rolb
add
fwait
out
ss
cs
in
sub
call
add
sub
jae
push
push
inc
add
pop
outsl
add
out
add
sarb
add
mov
stos
adc
out
push
xchg
dec
mov
add
and
call
scas
add
mov
das
in
stos
out
arpl
push
adc
adc
imul
xor
adc
xorb
pop
adc
push
dec
mov
adc
lcall
add
sub
rolb
loop
mov
mov
push
rol
add
addr16
add
add
mov
adc
adc
xchg
out
mov
fstl
inc
addr16
shrb
add
push
and
out
add
hlt
test
gs
insl
sub
add
sbb
hlt
inc
les
or
stos
push
push
pop
str
mov
sbb
fwait
push
insl
adc
in
fwait
jmp
mov
loope
loop
insl
sub
das
add
out
and
push
andb
addr16
arpl
loope
push
addr16
adc
gs
test
das
pop
and
mov
mov
mov
mov
fwait
lock
sbb
push
add
sbb
add
adc
push
add
jecxz
add
mov
sbb
out
mov
add
lds
add
fwait
sbb
incb
repnz
sbb
lock
add
addr16
ja
inc
add
mov
out
add
cs
sahf
test
test
sub
sti
orb
sub
push
std
and
stos
lret
inc
lcall
pop
sub
mov
ljmp
add
pusha
pusha
jmp
push
out
fwait
in
adc
pusha
pop
insl
mov
sub
add
loopne
add
out
outsb
lcall
cs
sub
ljmp
cli
add
insl
mov
and
arpl
xchg
mov
adc
rol
or
imul
jmp
in
fstl
cs
sub
inc
movaps
ds
inc
adc
adc
std
arpl
add
outsl
add
mov
adcb
adc
loope
jp
sbb
outsl
adc
xor
popa
pushaw
add
add
jne
loope
in
insl
push
in
add
lcall
push
and
loopne
mov
add
sub
rolb
lcall
arpl
pushf
stos
xchg
rolb
mov
add
or
inc
adc
add
add
popa
mov
push
xor
addr16
and
jmp
test
or
adc
fs
out
roll
lcall
arpl
adc
push
out
add
insl
sub
push
in
or
adc
loopne
out
adc
or
add
clc
mov
sub
add
gs
test
jmp
gs
orl
gs
insl
and
and
add
mov
arpl
adc
test
or
insl
sub
mov
ret
insl
sub
mov
lret
sbb
mov
add
iret
xchg
mov
add
fsts
adc
xchg
add
gs
add
and
dec
movb
lret
test
add
cmp
add
sub
add
add
ret
and
stos
push
mov
mov
mov
and
or
stos
add
loope
cmp
xchg
adc
and
sbb
push
cmpb
xlat
fwait
push
loope
les
push
jo
arpl
or
push
jo
xor
adc
in
mov
add
rolb
push
addb
aam
movsb
loopne
ss
xor
add
or
mov
push
add
fidivs
setnp
jne
adc
popa
test
add
push
add
mov
mov
mov
popa
sub
push
cltd
mov
inc
push
imul
push
add
fstl
inc
test
cmpsb
xor
add
lcall
fwait
add
xchg
push
mov
add
push
test
shl
stos
jmp
ljmp
xchg
jmp
xchg
add
add
addr16
adc
push
mov
xor
push
xor
mov
loopne
lcall
mov
pop
mov
mov
js
mov
sub
add
mov
test
subb
lcall
mov
xchg
pusha
pop
add
bound
add
aaa
xor
fs
sbbl
fadds
mov
arpl
adc
push
add
xor
lcall
sub
std
test
push
out
add
adc
mov
adc
test
loop
xor
or
adc
out
or
iret
test
mov
ljmp
mov
pop
push
std
and
faddl
inc
xor
gs
lret
add
add
fnstcw
dec
add
sub
push
loope
adc
adc
adc
add
mov
add
nop
out
add
adc
dec
loope
mov
arpl
test
aad
ljmp
add
test
rolb
xor
popa
or
or
add
inc
out
mov
mov
das
add
pop
icebp
xchg
insl
cmpsb
loope
add
sbb
cmc
daa
int
loope
pop
out
cmpsb
cmpsb
lcall
loopne
out
add
out
add
or
push
in
or
mov
lock
sti
adc
xorl
cmpsb
loope
popa
dec
inc
test
mov
mov
add
test
xor
pusha
gs
push
nop
and
and
loope
jb
sbb
fldenv
add
and
adc
xchg
add
adc
test
push
add
inc
adc
test
arpl
push
adc
push
push
add
mov
mov
mov
add
adc
mov
pusha
scas
test
push
xchg
xor
push
aas
sbb
lcall
out
gs
loop
lock
lock
pusha
push
xchg
fsubrs
out
push
roll
push
add
pop
out
add
mov
and
xor
add
enter
outsl
add
jmp
nop
jo
fsubs
adc
and
push
push
aas
adc
push
mov
xlat
mov
cmp
add
outsl
mov
loope
xchg
and
add
cmp
or
mov
push
inc
add
push
mov
push
xchg
xor
test
add
mov
inc
and
sub
add
xorb
adc
push
sbbb
imul
mov
lds
add
nop
gs
xchg
mov
add
mov
xchg
push
loop
add
push
pop
add
mov
gs
test
loop
mov
nop
dec
adc
sbb
mov
out
add
nop
sub
mov
push
push
lods
xor
adc
xlat
mov
add
stos
push
add
add
push
pop
xor
loop
not
add
xor
add
addr16
nop
ljmp
push
push
test
sti
jno
mov
sbb
dec
mov
push
push
stos
xor
fwait
push
loop
mov
or
and
xchg
sbb
fwait
repnz
xchg
out
mov
fwait
incb
xchg
sbb
and
push
xchg
push
mov
add
fadds
pop
rolb
push
push
inc
push
add
add
push
loope
or
fs
push
jp
add
sbb
adc
call
arpl
pop
stos
adc
and
adc
xchg
cli
add
push
arpl
add
lret
push
adc
stos
lret
inc
mov
test
add
loop
call
out
cmpsb
cli
jo
in
push
push
pusha
adcb
cmp
loop
leave
arpl
fnsave
inc
sub
lcall
adc
stos
out
test
or
add
int3
xor
mov
and
popa
loopne
gs
insl
xchg
cli
scas
pushf
leave
insl
add
fiadds
arpl
stos
in
jmp
lds
and
mov
and
add
mov
pop
aad
sbb
cwtl
xor
gs
aad
lret
loope
adc
push
sahf
xlat
mov
jecxz
mov
dec
mov
add
add
mov
scas
scas
mov
adc
adc
stos
add
arpl
arpl
adcb
out
push
inc
sbb
add
lock
add
test
lcall
add
cs
mov
adc
jmp
stos
jmp
sub
and
fstl
adcl
adc
cmp
repz
nop
loop
out
popf
test
jo
adc
shr
lock
rolb
pusha
or
and
xchg
sbb
xchg
out
and
and
cmp
push
jo
xor
insl
adcb
add
loop
fwait
mov
lret
adc
push
adc
ljmp
orb
fwait
clc
adcb
and
fwait
loop
scas
push
sbb
add
add
add
rolb
rclb
aaa
add
push
add
das
xchg
inc
xor
test
rolb
ljmp
lock
test
add
lods
add
adc
and
shl
adc
add
add
cli
sub
fiadds
add
add
cmpsl
mulb
add
add
repnz
repnz
add
add
lcall
loopne
cs
in
arpl
adc
mov
loop
loope,pn
push
add
popf
cli
gs
add
ljmp
out
cmpsb
add
loop
cmpsb
loop
cmpsb
out
daa
lcall
mov
sti
add
clc
scas
add
loop
add
mov
push
inc
adc
adc
add
fwait
jle
lods
cli
roll
add
mov
add
mov
arpl
push
add
adc
add
lcall
mov
adc
add
add
cli
lcall
adc
in
add
loopne
gs
push
xchg
cmpsl
adc
adc
pop
cmpsb
adc
add
out
pop
add
mov
sbb
cli
testb
out
push
incl
mov
mov
sub
add
mov
scas
adc
adc
lcall
push
add
sbb
add
adc
lods
add
sti
and
scas
add
sub
sub
sbbb
add
sub
add
cs
mov
or
outsl
add
add
add
mov
and
pop
add
add
sarl
adc
dec
addb
xor
or
mov
sbb
adcb
orb
xchg
out
add
arpl
fiadds
pusha
adc
and
addb
sub
jp
lcall
addl
sub
test
lahf
xchg
lret
lahf
inc
ret
lahf
fiadds
adc
sub
ret
loop
ret
imul
shl
sarb
ret
sarb
add
shlb
fiadds
loop
shlb
add
inc
dec
and
mov
ljmp
lret
add
add
arpl
imul
push
popa
add
add
mov
inc
inc
test
mulb
cmpl
gs
repnz
repnz
cli
insl
out
fiadds
mov
mov
adc
adc
faddp
mov
cs
inc
mov
testb
pop
rclb
dec
daa
add
mov
andb
or
xchg
mov
xchg
out
stos
sbb
or
push
inc
add
gs
push
add
pop
mov
sub
stos
and
add
push
pop
rclb
arpl
add
sti
pop
or
scas
add
or
test
insl
inc
sub
push
inc
add
ljmp
fwait
push
inc
enter
adc
fwait
rolb
add
insl
sub
adc
rclb
mov
gs
gs
or
lods
add
adc
frstor
xlat
pop
incb
addr16
roll
das
ljmp
mov
mov
loop
xor
cwtl
add
gs
out
loop,pn
add
mov
data16
scas
ror
and
cs
test
sahf
mov
inc
sub
push
aad
lcall
push
fisubs
out
sub
add
push
xchg
mov
fldl
shlb
sti
addr16
push
adc
ljmp
add
stos
loop
add
out
add
add
inc
loopne
ret
arpl
add
mov
loop
jmp
sbb
outsl
scas
add
add
inc
mov
and
dec
adc
add
mov
scas
test
dec
fisubs
add
add
and
xchg
and
mov
add
and
xchg
add
add
and
sahf
and
dec
and
stos
xchg
and
pop
and
mov
add
and
stos
lcall
and
push
and
sub
and
push
and
cmp
add
sbb
add
and
and
push
push
and
into
and
jle
add
and
repnz
cli
and
and
mov
and
mov
add
std
mov
add
popa
add
add
add
and
push
and
dec
and
into
mov
add
popa
add
and
dec
and
ds
and
push
and
push
and
pop
and
push
movsl
and
inc
and
add
loopne
and
stos
and
loop
or
and
sbb
add
mov
and
stos
mov
add
add
and
outsb
and
popaw
pop
stos
jle
add
popa
add
add
and
stos
pop
and
push
add
and
loop
and
popa
add
and
and
dec
push
and
add
adc
push
popa
add
and
push
and
into
and
pop
push
and
fisubs
add
loope
scas
and
cli
push
and
mov
add
and
sahf
and
jb
scas
add
dec
outsb
add
push
jmp
mov
stos
xchg
mov
pusha
push
cmp
inc
jle
add
cmp
push
addl
addb
addl
addb
xchg
addb
jmp
loope
dec
mov
adc
adc
inc
xor
add
adc
adc
es
adc
push
adc
add
add
pop
popf
inc
adc
mov
sub
add
add
mov
mov
add
and
loope
add
gs
adc
ficompl
adc
inc
xlat
lcall
lcall
adc
adc
push
push
cmp
adc
mov
adc
aad
or
arpl
lret
orb
insb
in
add
addb
subl
scas
out
jmp
sti
lods
add
add
pop
out
and
and
adc
or
push
ret
loopne
gs
adc
mov
loopne
mov
cwtl
out
inc
enter
loop
add
loop
clc
loopne
gs
add
lret
mov
into
sbb
push
mov
loope
cmpb
push
jo
add
mov
lcall
xor
lret
test
push
adc
pop
fadds
addr16
adc
push
cwtl
aaa
add
addr16
lret
aad
loope
pushl
arpl
dec
mov
lret
testb
stos
sub
loope
loope
xor
or
sub
aam
sbb
insl
cs
not
or
mov
gs
or
mov
inc
in
xlat
test
outsb
loope
pusha
add
add
call
addl
mov
rol
mov
sti
jbe
js
lret
arpl
or
add
lret
roll
mov
add
rcl
loop
vpunpcklbw
pushf
loop
mov
sub
int
add
dec
mov
lret
lds
adc
popa
or
adc
lret
rolb
add
in
adc
loope
mov
jo
lcall
sub
mov
fdivl
adc
and
ret
addb
lret
push
pop
adc
mov
roll
addb
xor
jecxz
add
adc
pushf
out
test
push
clc
push
or
add
rolb
arpl
mov
add
adc
xor
test
loopne
stos
adc
add
movsl
mov
mov
fsubrl
and
inc
and
push
outsl
add
in
rorb
mov
data16
insl
adc
loope
add
inc
sbb
test
test
push
mov
mov
inc
inc
insl
push
out
loope
js
adc
and
popa
es
adcl
arpl
and
push
mov
test
push
mov
shlb
push
aad
sbb
sub
push
popa
add
ljmp
fldl
adc
jns
stos
push
arpl
pop
dec
rcrb
sti
xor
inc
call
mov
push
add
adc
roll
rclb
add
iret
xchg
inc
or
or
and
add
mov
lcall
sbb
in
add
mov
addl
adc
add
mov
mov
xchg
bswap
loope
stos
inc
adc
add
clc
mov
or
add
and
mov
inc
stos
adc
push
or
xor
loopne
popa
sbb
roll
pop
sarb
adc
mov
scas
enter
add
sti
dec
loopne
mov
and
mov
add
std
mov
add
pop
inc
popa
add
mov
pop
out
adc
sti
dec
xor
mov
mov
dec
push
pop
addb
mov
push
pop
fadds
push
lods
mov
loop
or
mov
lock
mov
push
pop
jns
xchg
sbb
push
ja
movaps
add
mov
subl
out
cwtl
into
add
ljmp
stc
orb
loopne
in
cs
inc
add
scas
cmp
loop
mov
pop
pop
cmp
adc
adc
mov
out
add
push
fadds
adc
rolb
add
lock
or
out
xor
inc
das
sub
add
xchg
add
add
pusha
add
push
notb
inc
cltd
add
xchg
out
add
push
push
adc
mov
lcall
adc
lcall
adc
xchg
mov
roll
add
add
aas
push
insl
push
out
mov
cs
and
push
mov
rolb
test
sub
sti
push
jo
mov
push
outsl
add
inc
xorl
movsl
popf
incb
test
adc
out
inc
filds
push
loope
pop
loopne
add
xlat
in
loope
jnp
sub
lock
fwait
or
push
or
xchg
sub
fwait
jecxz
push
dec
mov
rorb
arpl
cltd
nop
adc
mov
push
mov
and
pop
adc
fwait
out
mov
gs
gs
les
add
add
test
popf
gs
mov
ljmp
ret
add
or
push
adc
arpl
add
adc
add
dec
ja
add
ffree
cs
xor
mov
mov
sub
inc
jecxz
mov
mov
cmpsb
bound
push
cmpb
adc
pop
add
add
add
mov
and
fwait
std
loopne
into
push
movsl
rolb
push
or
sysret
and
adc
add
cmp
or
add
add
pop
sgdtl
inc
add
pusha
add
popa
add
or
push
fwait
loopne
pusha
add
push
ljmp
movsb
test
xor
mov
or
adc
adc
mov
push
out
add
imul
push
or
add
pop
incb
das
mov
sbb
loope
imul
add
xlat
addb
add
lret
sbb
push
push
add
fwait
mov
in
test
add
shl
jo
or
addr16
gs
cltd
loopne
push
movb
outsl
pop
outsb
aam
add
frstor
popf
test
stos
lret
divb
test
idivb
add
loop
divb
xor
lret
push
add
insl
inc
addb
insl
sub
aad
jb
and
xchg
jne
fwait
mov
inc
test
mov
xchg
lret
repnz
push
jmp
rcr
ffreep
add
inc
mov
adc
pop
cmp
mov
xchg
outsl
addl
pop
adc
add
out
pop
add
fildll
mov
lods
add
out
cltd
jmp
adc
es
lret
clts
je
add
adc
mov
mov
add
sub
adc
gs
imul
add
cs
lods
add
outsb
adc
data16
add
xor
xor
mov
adc
adc
push
add
arpl
or
add
push
lcall
xlat
adc
mov
pop
add
outsl
adc
add
gs
add
xor
insl
adc
test
add
push
in
jg
adc
loope
pop
mov
scas
add
scas
aad
fwait
cmp
in
add
add
sub
push
add
pushf
add
jle
ja
push
ss
addb
add
stos
lret
mov
mov
pop
add
adc
data16
lret
add
lcall
or
push
xor
mov
loope
mov
lcall
adc
push
fwait
incb
lcall
push
push
push
add
add
addb
add
mov
mov
or
mov
inc
add
gs
fstl
add
fwait
adc
add
add
scas
add
test
addr16
push
addr16
sbb
sbb
andb
stos
adc
stos
push
add
insl
add
in
loop
pop
jecxz
add
insl
cs
aad
pushf
add
gs
lds
add
in
aad
add
jecxz
out
mov
in
in
gs
add
adc
push
arpl
arpl
add
and
fwait
sbb
adc
add
ficoms
adc
lcall
adc
push
xchg
add
add
imul
adc
gs
push
addb
ljmp
jmp
cwtl
leave
add
adc
loope
addb
insl
xchg
push
adc
fwait
imull
stos
push
add
add
shrb
arpl
add
adc
xchg
adc
loope
xor
sbb
inc
pop
add
add
sbb
mov
loope
add
push
gs
push
rolb
cmpl
fwait
or
gs
adc
push
adc
subl
push
add
aad
cwtl
mov
mov
adc
testb
pop
xorb
fiaddl
add
gs
push
mov
sti
adc
scas
add
out
add
negb
cmp
adc
rorb
push
fwait
loope
push
mov
or
add
enter
ret
xchg
push
gs
dec
mov
push
add
insl
stos
add
adc
cmpsb
aad
push
loope
jb
inc
aas
add
dec
add
gs
push
add
xorl
or
outsl
add
inc
js
in
xchg
imul
adc
cltd
imul
call
dec
mov
out
lret
jb
lods
add
push
pop
add
xor
addr16
xchg
inc
iret
cmpb
and
ljmp
loop
push
loope
push
aaa
in
sbb
add
add
in
fstpl
and
loope
push
add
mov
adc
insl
mov
loope
mov
mov
arpl
incb
push
add
adc
inc
or
loope
mov
jg
rclb
mov
add
es
rolb
adc
xchg
inc
add
or
or
orb
loope
insl
mov
fiadds
test
shlb
add
loopne
repnz
addr16
repnz
int
lods
add
loopne
ret
scas
addl
push
xor
mov
out
sbb
rcrb
add
loop
imul
imul
mov
jecxz
fldl
rolb
add
push
rolb
lret
mov
add
imul
lcall
inc
sbb
adc
adc
pop
ret
cs
imul
test
mov
push
and
adc
insl
loopne
mov
or
jmp
cmp
adc
fstpl
mov
pop
and
or
push
shrb
and
push
shrb
add
cli
sbb
push
cmc
int3
adc
mov
push
mov
insl
and
sub
mov
subb
mov
add
sbb
push
add
mov
ljmp
insl
or
sub
rolb
pop
add
incb
add
scas
add
out
enter
mov
add
loope
out
mov
add
aad
lret
xchg
mov
rclb
add
push
adc
adc
adc
outsb
shll
out
cwtl
aad
mov
mov
subb
orb
lcall
add
add
add
subb
dec
inc
add
mov
sub
fidivrs
gs
call
sbb
push
sbb
mov
rcrb
mov
loop,pt
jmp
mov
add
mov
daa
roll
add
rolb
test
or
sub
pusha
sub
test
ret
loopne
arpl
pop
and
pusha
mov
sub
mov
adc
mov
or
push
addl
arpl
add
or
adc
addb
gs
out
call
sbb
out
adc
test
test
test
out
mov
mov
and
push
mov
xchg
mov
add
adc
jbe
xor
xchg
mov
repnz
add
sbb
adc
stos
push
cwtl
add
gs
inc
in
repnz
pop
scas
subb
adc
subb
mov
push
mov
and
mov
xchg
iret
adc
sbb
loopne
xchg
push
mov
mov
add
arpl
stos
push
pusha
pushf
dec
gs
loope
and
mov
ret
add
rcrl
add
out
sbbb
mov
mov
roll
sub
pusha
and
loopne
mov
test
add
and
mov
adc
scas
rolb
and
mov
add
inc
add
adc
mov
fwait
incb
orb
gs
gs
andps
addb
rolb
stos
mov
push
in
rolb
add
rep
xor
mov
inc
add
adc
icebp
dec
jnp
adc
insl
mov
add
loopne
movsl
or
mov
adc
in
jno
and
mov
add
roll
roll
adc
sub
or
and
cmp
cmpb
and
stos
pop
stos
push
add
add
and
shlb
adc
adc
out
shll
xchg
inc
adc
sbb
xchg
sbb
push
dec
adc
es
xchg
push
mov
mov
mov
adc
and
inc
psubsb
insl
mov
add
mov
mov
adc
loop
gs
and
divb
and
addr16
testb
or
mul
add
adc
loopne
repnz
paddb
adc
mov
jo
gs
loope
adc
add
and
xor
ljmp
add
push
add
mov
ret
adc
test
mov
mov
add
mov
adc
add
loope
sbb
loope
inc
ds
jge
gs
loop
mov
sub
adc
arpl
jno
gs
adc
subl
push
loop
loopne
movl
lods
push
add
rcrb
repnz
push
cmp
add
add
sbb
mov
add
push
outsb
xor
addr16
xor
nop
mov
add
lock
out
mov
push
sub
imul
popa
push
xor
mov
pusha
push
loope
jb
xor
pop
dec
addl
sbb
mov
cmp
add
mov
sbb
push
aad
push
loope
mov
nop
or
cld
mov
rcrl
adc
mov
addl
cmp
cmc
mov
pushf
gs
add
push
adc
fdivr
adc
shr
fstl
add
add
add
add
gs
test
xor
ret
ds
lcall
push
gs
push
add
and
sbb
xlat
lock
mov
xor
adc
and
lock
sub
add
fwait
push
gs
push
sub
and
adc
insl
adc
fwait
inc
sbb
sbb
in
lcall
inc
mov
jae
adc
inc
add
je
xor
sbb
jo
xchg
in
lcall
rorb
addb
addb
and
xchg
sub
std
addb
std
addb
daa
loope
sub
sub
addl
addb
arpl
lds
add
push
cli
addb
cli
addb
loope
cli
cli
test
cmp
adc
adc
adc
add
sbb
and
rcrl
push
cmpsb
sbbb
push
xor
dec
out
xchg
adcb
aaa
test
jge
inc
and
popa
xor
push
inc
les
jo
add
mov
add
lcall
adc
mov
imul
iret
gs
inc
out
push
loop
cmp
jo
rolb
gs
loop
mov
test
mov
inc
sub
add
gs
out
mov
and
add
mov
stos
add
add
popf
ret
add
push
mov
add
adc
jl
fnsave
addr16
mov
mov
fwait
add
nop
daa
addr16
addr16
add
mov
lcall
stos
or
add
add
add
sbb
mov
lcall
cmp
or
xchg
dec
push
push
mov
mov
mov
stos
push
cmp
push
add
add
xor
roll
inc
and
cmp
mov
lcall
pushf
gs
add
xor
outsb
xchg
jmp
insl
daa
add
scas
fwait
ja
sub
add
stos
ds
ljmp
mov
adc
cmp
shrb
add
ret
arpl
mov
jns
lock
adc
add
add
gs
adc
push
cltd
hlt
rorb
stos
sbb
sti
xor
adc
rolb
inc
pop
shlb
int
or
inc
push
mov
adc
mov
mov
jb
mov
ret
mov
loopne
adc
adc
add
fwait
add
popa
xchg
inc
cmp
test
push
push
inc
sbb
ss
fwait
adc
push
mov
loope
push
push
mov
jb
push
push
mov
movsb
xchg
jb
push
push
lods
jo
fs
add
mov
sub
jae
push
in
jo
andb
mov
sub
gs
push
or
and
push
xor
arpl
add
jo
lock
imul
sub
addb
jmp
mov
andb
imul
adc
inc
pusha
inc
add
fwait
loopne
mov
add
adc
push
iret
or
rorl
mov
dec
add
adc
adc
adc
test
push
jb
adc
push
sbb
mov
cmp
xor
jo
xor
add
loopne
arpl
jo
orl
ss
add
push
pop
adc
sbb
add
sbb
or
push
fwait
rcr
fwait
push
add
stos
or
aad
shrb
xchg
aas
nop
imul
push
loope
pusha
mov
jno
push
dec
push
enter
orb
and
cmp
push
cmp
imul
xchg
in
fdivl
push
insb
inc
adc
xor
push
roll
ljmp
inc
adc
sbb
in
adc
fwait
push
mov
adc
add
adc
push
mov
mov
data16
add
push
addb
xor
push
add
push
mov
add
adc
sbb
pop
int3
adc
adc
add
mov
gs
out
pop
out
mov
sub
add
mov
inc
in
add
add
cs
stos
out
add
jnp
mov
inc
add
insl
cs
addb
test
mov
lea
or
xchg
out
add
add
and
arpl
add
adc
gs
adc
fstl
aad
loope
add
add
insl
push
adc
and
dec
add
test
sbb
push
iret
add
fiaddl
mov
xchg
sbb
adc
add
scas
add
and
cmpb
push
push
ljmp
data16
push
andb
incb
mov
add
scas
add
loop
mov
arpl
lret
adc
mov
stos
push
arpl
stos
add
add
test
test
arpl
add
pop
sub
xchg
and
dec
add
mov
add
mov
test
test
mov
arpl
addl
xor
push
xchg
add
add
outsb
push
push
cmp
adc
xorb
pop
aad
sub
add
orb
ljmp
orl
test
push
out
lret
add
fwait
adc
add
add
add
mov
mov
loope
add
add
stos
push
gs
add
and
mov
movl
cs
fwait
push
adc
inc
or
xchg
cs
cmp
adc
mov
into
add
or
inc
push
push
inc
push
es
mov
inc
push
adc
inc
gs
stos
inc
add
add
mov
add
xor
push
xlat
adc
loope
and
addr16
add
or
out
ljmp
ljmp
add
out
stos
add
fdivl
lock
in
ficomps
add
sub
add
repnz
imul
mov
mov
push
push
push
sti
inc
adc
fs
or
pop
xlat
mov
or
xchg
std
add
adc
loopne
or
add
push
or
sarb
mov
pushf
rolb
adc
insl
stos
add
aad
ljmp
adc
xor
add
inc
mov
gs
add
mov
loop
aad
loope
fildl
adc
mov
arpl
gs
rorb
adc
rclb
add
add
xchg
add
adcb
push
pop
adcb
jbe
shlb
sub
rcrb
xchg
stos
xchg
add
push
es
xorl
addb
mov
mov
ljmp
arpl
int3
inc
add
jmp
and
mov
xor
jmp
into
and
faddl
add
mov
adc
dec
mov
add
stos
push
mov
adc
mov
popa
add
stos
add
adc
mov
mov
add
add
stos
adc
loope
pop
stos
adc
mov
arpl
mov
cmc
adc
mov
loopne
pusha
add
or
test
push
mov
pusha
push
mov
cmp
add
mov
and
or
arpl
add
arpl
add
std
add
in
loope
out
imul
fwait
add
test
addb
add
sbb
dec
pusha
aas
mov
sbb
jle
add
add
fwait
loop
add
loope
test
adcb
add
arpl
inc
adc
cmp
and
imul
andl
loopne
and
and
ret
aaa
mov
subb
ljmp
test
push
push
adc
adc
sbb
push
add
pusha
add
adc
and
addb
mov
insl
mov
add
xchg
mov
push
push
fs
hlt
add
roll
and
sbb
or
addr16
sbb
push
test
push
mov
stos
push
repnz
push
add
iret
adc
mov
lds
adc
mov
push
add
and
sbb
nop
fwait
push
adc
pop
fs
loopne
fs
add
add
adc
les
sub
pop
mov
movsl
subb
frstor
andb
stos
adc
inc
insl
add
leave
pusha
add
pusha
sbb
push
push
inc
add
add
push
pusha
adc
pop
add
stos
adc
cs
fwait
loop
mov
mov
in
push
mov
adc
adc
leave
insl
or
push
outsl
add
mov
sbb
arpl
data16
ret
aaa
push
push
loope,pn
or
lcall
inc
lret
add
push
mov
mov
es
add
in
add
add
fnsave
push
inc
pop
inc
push
orl
and
inc
mov
rclb
sti
fisubs
and
lret
xchg
add
fisubs
lret
mov
int3
add
push
push
test
push
xchg
loop
sub
loopne
cli
and
jmp
addb
add
add
add
lcall
icebp
shlb
add
mov
mov
add
mov
mov
add
pusha
add
xor
sbb
mov
adc
stos
lret
mov
and
pop
enter
loopne
stos
roll
xor
pop
cmpsb
rcll
mov
jle
add
into
addb
pop
js
lcall
rolb
mov
add
jo
mov
xor
cs
lods
test
mov
je
rclb
lret
gs
lret
or
gs
mov
in
add
add
adc
sub
inc
nop
cld
gs
out
and
push
stc
adc
ljmp
das
stos
into
push
adcb
sbb
add
rolb
cli
push
mov
mov
lret
out
add
push
scas
mov
add
or
ljmp
add
push
push
andb
xchg
arpl
in
jo
test
or
adc
xchg
mov
arpl
or
ja
lret
aad
inc
cwtl
iret
mov
cmp
adc
xchg
push
loope
add
xlat
mov
fwait
mov
mov
jno
add
stos
push
int
adc
hlt
bound
push
enter
fstpl
and
imul
mov
ljmp
lock
es
add
jno
sbb
mov
push
adc
test
adc
pushf
push
sub
cwtl
cld
and
rolb
add
adc
add
fdiv
adc
aaa
popa
add
and
inc
popa
aas
push
aas
adc
outsl
add
add
adc
loope
pop
stos
insl
out
add
lock
sbb
or
adc
jmp
pop
bound
roll
loopw
roll
popa
cmpb
sub
into
sub
js
jbe
sub
xchg
mov
das
mov
xchg
mov
dec
push
xchg
push
repnz
jb
rorb
outsl
cmp
imul
data16
inc
cmp
add
stos
or
push
addr16
add
push
lock
mov
loop
cmp
nop
add
cmp
sbb
je
push
arpl
mov
push
and
imul
roll
ret
adc
insb
roll
ret
push
insl
inc
roll
ret
push
push
add
rolb
push
nop
add
adc
sub
push
aaa
cmp
inc
add
sub
add
outsl
nop
or
cmp
fwait
adc
cmp
ss
mov
andb
mov
add
lea
jb
add
push
aas
lcall
adc
sarb
test
mov
in
or
fwait
adc
sub
push
dec
mov
push
add
sub
jno
popa
loop
cmp
repz
push
and
xor
daa
clc
push
cmp
daa
push
push
push
rolb
daa
test
out
movsb
pop
arpl
add
fs
pop
mov
out
jecxz
and
loopne
mov
add
in
and
cmp
jmp
cmp
xor
test
pop
xchg
jle
imul
adc
fcoml
arpl
roll
rolb
adc
adc
push
push
push
push
outsb
push
imul
adc
mov
shlb
cmp
xor
hlt
add
adc
xchg
loopne
fstl
xlat
xchg
jo
loope
lret
andl
pop
notl
pop
andb
addr16
pop
dec
icebp
add
add
ja
add
arpl
rolb
rolb
sub
inc
inc
xchg
inc
mov
inc
gs
mov
jo
fidivs
insl
rclb
lret
inc
dec
push
mov
add
int3
push
jle
fabs
aaa
imul
or
ret
rolb
xor
inc
cltd
cmpb
mov
adc
test
pushf
dec
insl
xchg
adc
pusha
fwait
xchg
mov
sbb
or
and
or
add
lcall
nop
adc
sahf
adc
dec
shl
adc
sbb
xchg
cli
test
gs
adc
movsl
dec
test
cmpsl
dec
insl
add
mov
and
mov
or
inc
jl
adc
push
mov
jp
xorb
add
nop
xor
push
jns
jmp
add
addl
pop
pop
sbb
cmpb
push
push
lret
jg
scas
add
mov
pop
js
add
jb
xchg
mov
stos
lret
adc
xorb
sbb
adc
mov
add
popa
roll
scas
dec
roll
rclb
jnp
fst
add
xchg
push
jg
add
rolb
pop
sbb
ss
inc
sti
addl
mov
push
jbe
add
add
mov
repnz
add
scas
add
loope,pn
push
add
test
adc
je
add
lret
cmpsb
rcll
add
jl
or
mov
add
or
xchg
cmp
add
scas
or
add
or
sti
add
jae
cmpsb
test
lcall
adc
xchg
into
gs
lret
add
mulb
add
add
add
lret
shl
add
adc
cli
imul
add
gs
out
and
add
cs
xor
add
add
gs
aad
adc
imul
dec
cli
push
cmc
add
adc
mov
lret
out
and
push
loop
pop
mov
add
mov
or
mov
ljmp
test
andb
stos
push
mov
clc
add
arpl
jbe
and
adc
arpl
add
push
add
add
out
add
mov
mov
arpl
outsb
adc
adc
or
add
push
adc
insl
push
adc
cwtl
iret
mov
adc
sub
sub
cmpb
push
mov
adc
adc
xlat
mov
fwait
inc
xchg
cs
jp
sub
addl
push
nop
sub
push
int
add
sbb
xorl
adc
sbb
sbb
mov
test
out
arpl
adc
adc
test
adc
in
pushf
sub
cwtl
cli
gs
dec
push
xchg
add
push
add
out
fwait
add
push
sbb
adc
mov
or
insl
or
outsl
or
dec
in
addl
lret
or
ret
gs
push
leave
pop
adc
loope
push
addb
call
shrb
js
adc
adc
adc
rorb
mov
arpl
leave
addb
add
sub
adc
push
fiadds
push
mov
add
push
addr16
lret
adc
loope
sti
addl
or
or
mov
and
jle
add
rcrb
or
gs
sbb
mov
lret
sub
push
mov
push
clc
inc
rsm
lret
or
or
pop
imul
add
gs
adc
subb
jmp
mov
push
stos
push
ja
push
mov
push
fidivrs
push
and
sub
push
repnz
orl
push
dec
mov
lret
push
jecxz
sbb
cmp
add
in
sbbb
adc
or
push
mov
inc
or
add
cli
fstpl
adc
sub
push
xor
push
rclb
xor
push
insl
rolb
xlat
fstpl
lcall
add
mov
in
add
add
lret
pushf
in
outsl
rolb
pusha
jns
out
stos
or
idiv
pusha
push
test
lret
lret
add
mov
mov
fidivrl
adc
sub
inc
jo
inc
jo
imul
ljmp
loopne
inc
outsl
lcall
or
add
js
push
lock
xor
out
and
dec
cmp
mov
pusha
sbb
add
add
mov
jbe
add
inc
mov
push
jb
inc
push
push
les
push
sub
push
mov
add
mov
jnp
adc
mov
xchg
push
push
mov
mov
and
imul
adc
test
imul
sbb
imul
and
inc
sub
add
loopne
mov
fs
mov
fsubl
add
pusha
add
outsb
daa
mov
aam
lcall
add
aas
loope
cmp
addr16
add
push
fwait
add
mov
daa
mov
test
and
loop
add
test
adc
adc
orb
xchg
or
mov
and
lret
push
jo
adc
decl
cltd
pop
push
and
jno
add
imul
stos
and
daa
adc
arpl
push
dec
test
es
add
addl
cs
dec
addl
push
dec
addl
adc
push
jmp
add
in
add
addr16
arpl
stos
sbb
addb
add
add
sbb
mov
mov
add
movsb
mov
pop
cmc
and
adc
arpl
add
adc
push
inc
add
adc
push
adc
scas
loope
xor
inc
push
xchg
push
pusha
cmp
dec
add
ljmp
add
jmp
mov
subl
mov
arpl
push
mov
ss
adc
push
gs
ss
movl
adc
mov
xchg
push
push
add
rolb
pop
and
popf
sbb
fwait
add
sub
and
sarb
mov
pusha
add
sbb
push
pop
add
or
adc
mov
stos
push
inc
rclb
sti
xchg
cmp
and
loopne
add
add
stos
add
insl
xchg
sbb
loope
nop
add
or
jmp
adc
xlat
push
mov
inc
sub
adc
lock
test
push
or
pop
popa
pop
push
sub
es
jnp
lds
outsl
roll
xchg
or
sub
mov
sub
imul
jecxz
outsb
pop
jmp
cs
aad
adc
add
adc
fwait
loopne
jae
sub
inc
add
xor
pop
add
arpl
sub
arpl
roll
add
cltd
stos
out
ret
add
push
loope
adc
out
mov
inc
add
cmp
adc
jecxz
pop
mov
sarb
shll
add
cs
insb
mov
repnz
xor
inc
xchg
jle
stos
push
loopne
push
add
es
push
je
ss
xor
pop
push
adc
dec
xor
sub
sub
outsb
push
inc
jecxz
xor
orb
and
jb
add
loopne
push
dec
and
add
adc
xchg
rol
add
inc
xchg
add
and
arpl
add
imul
xor
push
jbe
loop
jo
andb
repnz
jns
or
cmp
and
push
shrl
jo
gs
push
jo
dec
jo
cmpsb
add
mov
mov
push
gs
mov
scas
mov
lcall
ds
pusha
stos
cmp
inc
sbb
nopl
sub
add
inc
insl
adc
pushf
out
xor
add
cwtl
in
test
mov
lahf
pop
bound
xorl
xor
inc
gs
xor
fwait
ss
lahf
fwait
ret
lahf
mov
xor
popa
xorl
add
push
mov
bound
xor
xor
das
adc
add
push
adc
xorl
or
push
mov
or
xor
pop
or
push
pusha
mov
loopne
add
cmpsb
out
inc
lcall
inc
xchg
jp
andb
mov
inc
xchg
sbb
lea
jne
add
scas
push
inc
popa
push
sub
in
xchg
into
dec
xchg
fiadds
xchg
pop
popa
add
mov
add
push
popa
sbb
push
adc
xchg
add
test
mov
lret
js
mov
ret
rorl
cli
xor
xchg
call
mov
arpl
test
inc
sub
xor
dec
roll
ficoms
roll
jl
add
add
add
and
xor
rolb
loope
jns
add
cmp
and
inc
or
xlat
ficoml
push
xor
gs
shrb
mov
cmp
push
mov
add
adc
fimuls
sbb
loope
mov
add
adc
adc
lret
push
xor
loope
cld
nop
add
xor
loope
in
add
lret
push
test
addb
call
push
stos
sbbb
push
testb
addl
popa
add
aad
sbb
sub
add
fs
rcr
fwait
mulb
add
xchg
lcall
inc
or
cmp
mov
add
add
add
xchg
xor
sub
xchg
push
pop
cli
outsb
mov
and
andb
or
fistps
out
add
add
lcall
inc
outsb
shl
add
dec
test
out
xor
lret
sbb
lret
les
ret
push
push
sbb
aas
pusha
iret
and
xchg
adc
adc
aad
fistpl
loope
test
or
loop
jmp
icebp
mov
cmc
rolb
rorb
pop
pop
shrl
xchg
es
pop
add
daa
and
setbe
xchg
sub
fldl
xchg
loop
setbe
fwait
lock
xchg
xor
setbe
push
push
pop
adc
push
push
cmp
cmp
push
cmpsb
jbe
rorl
fs
sub
mov
iret
divps
dec
push
andb
pop
xchg
test
add
arpl
and
adc
pop
adc
cmp
in
fwait
pop
xchg
push
pop
roll
ret
push
add
mov
push
pop
xchg
add
add
cmp
roll
roll
mov
pop
mov
add
sub
aam
pop
cmpsl
pop
scas
adc
inc
addr16
mov
mov
push
and
jae
add
mov
xlat
add
push
xchg
lock
push
test
ror
mov
add
add
gs
xor
mov
adc
adc
cwtl
lldt
adc
push
insl
push
adc
lcall
adc
sti
add
scas
add
nop
adc
movsb
in
or
add
gs
insl
adc
pushf
out
outsl
adc
adc
add
mov
sahf
arpl
inc
call
add
adc
adc
add
add
adc
insl
sub
add
add
push
ficoms
adc
push
add
fnsave
arpl
fwait
push
add
fwait
adc
stos
push
ljmp
xchg
add
adc
outsl
fwait
adc
sti
push
out
adc
fs
cmpsl
in
adc
add
mov
cwtl
cli
gs
push
and
and
add
jne
cmp
adc
add
mov
mov
sub
lret
add
add
dec
mov
add
push
rcrl
add
or
pop
add
push
mov
and
add
push
xor
push
test
push
js
add
jle
scas
push
add
push
jp
add
jp
or
orb
push
test
add
push
out
add
je
pusha
or
add
push
test
andl
push
cmp
test
dec
add
push
dec
dec
add
dec
push
pushf
add
dec
push
ret
insb
and
movl
or
mov
add
inc
push
aas
ljmp
jae
add
push
into
sahf
add
test
cmpl
push
popa
add
push
add
add
push
inc
pusha
add
push
cmp
add
push
pusha
aas
add
cs
scas
imul
xor
sub
and
or
push
sub
addb
push
test
push
out
add
adc
push
les
add
push
das
inc
mov
add
push
xchg
fldl
add
push
faddl
lahf
cmp
add
cmp
xchg
add
ss
test
loop
add
lahf
mov
push
jp
add
xor
inc
clc
add
push
push
cmp
push
fadds
add
push
adc
push
pop
pop
add
push
push
test
jns
add
and
add
adc
push
repnz
add
out
push
roll
add
push
push
popa
call
push
popa
xchg
add
push
adc
push
jb
add
push
push
test
leave
add
adc
addr16
add
adc
push
xlat
cmpsl
add
adc
inc
xor
adc
push
gs
add
ljmp
call
add
push
inc
hlt
test
add
push
pop
inc
push
loop
push
test
xchg
loopne
mov
push
js
push
cld
push
jae
and
cli
push
jo
add
clc
push
xchg
subb
out
add
hlt
push
subl
inc
pop
add
lock
sub
add
orb
push
roll
int3
push
aam
add
lret
aas
rcr
push
enter
push
adc
push
mov
addb
push
jg
sbb
add
push
sub
add
rorb
add
ficoms
xor
add
stos
rclb
jne
add
or
push
and
rclb
pop
mov
shll
mov
push
add
rclb
push
mov
test
test
mov
loop
cmpsb
or
dec
add
movsb
push
jp
adc
add
mov
and
mov
mov
ja
or
or
test
inc
and
push
shll
addb
add
mov
pop
and
mov
jb
and
mov
call
out
or
push
test
add
add
xchg
flds
add
add
add
jg
push
repnz
and
push
pushf
push
popa
or
sbb
push
xor
pop
push
sub
mov
mov
in
arpl
in
das
adc
add
xchg
popf
cmpsb
arpl
inc
pusha
xchg
sub
mov
mov
imul
leave
arpl
stos
arpl
add
add
mov
or
mov
add
mov
mov
add
mov
test
xchg
aaa
fldl
add
add
insl
sub
xchg
rclb
insl
add
cli
mov
lret
push
push
add
adc
aaa
add
mov
sub
stos
lret
cs
xchg
outsl
lods
add
mov
and
aam
adc
and
sub
add
pusha
cmp
mov
mov
test
mov
adc
addb
call
gs
add
push
insb
inc
lods
pop
call
inc
imul
mov
push
ss
adc
cmp
xor
add
pop
inc
test
in
arpl
adc
rclb
cs
imul
add
arpl
mov
pop
addb
fwait
outsb
push
add
add
adc
adc
push
arpl
push
add
push
push
add
sbb
sahf
pusha
add
shll
adc
add
jg
add
jecxz
adc
adc
push
add
arpl
data16
shlb
outsb
push
sub
push
shlb
popa
push
add
fwait
pop
push
push
loope
out
push
or
imul
gs
or
adc
add
push
xorb
arpl
and
cmp
scas
or
push
push
and
and
or
gs
push
and
sub
push
rolb
xlat
adc
loope
outsl
add
aad
lcall
xchg
xlat
xchg
add
lcall
or
adc
inc
loope
gs
sbb
xchg
add
gs
inc
sbb
add
jmp
bound
mov
push
adc
loopne
mov
sub
testb
gs
and
sub
push
bound
adc
ljmp
fwait
push
or
inc
inc
mov
dec
adc
mov
push
push
jbe
jo
gs
sbbb
arpl
add
gs
mov
mov
pop
out
mov
sub
ljmp
add
sub
mov
jo
clc
add
arpl
add
pop
add
inc
adc
nop
adc
cmpsb
mov
je
fwait
inc
push
push
roll
popa
ret
push
das
roll
roll
imul
imul
add
push
arpl
add
cs
push
fstpl
sub
add
cmpb
arpl
adc
or
and
cs
adc
mov
imul
icebp
mov
adc
mov
mov
mov
sbb
and
add
inc
push
add
ljmp
insl
xchg
push
add
orl
subl
xchg
push
sbb
adc
xor
sub
es
lods
add
testl
mov
add
orb
adc
orb
inc
add
inc
add
jo
inc
add
or
inc
add
mov
add
scas
sub
mov
jmp
add
cmpsb
loop
imul
in
cmpsb
out
add
sub
aad
pushf
lret
mov
arpl
pushf
mov
and
xor
ljmp
in
lock
mov
fwait
sbb
xlat
incl
cmp
add
cs
icebp
or
add
fldl
cmp
and
shrl
out
in
nop
fldenv
adc
add
adc
stos
out
enter
cli
scas
fwait
clc
mov
mov
loope
cs
inc
add
test
inc
or
inc
popa
inc
or
cs
xchg
nop
add
sbb
imul
loope
add
mov
iret
insl
push
ficomps
lods
in
insl
push
xchg
add
fwait
jmp
inc
inc
sub
mov
sub
out
mov
sub
cmp
in
aad
lcall
ret
fwait
jmp
add
mov
stc
insl
pop
lds
mov
xlat
cltd
add
test
in
pop
daa
arpl
loopne
insl
sub
rolb
insl
add
ficomps
lcall
in
lcall
adc
sub
in
daa
lcall
fstl
outsb
add
ficomps
outsb
add
mov
outsb
pop
mov
call
add
mov
add
outsb
adc
push
add
in
sbb
pop
ds
push
outsb
adc
daa
add
and
loop
push
add
add
in
add
out
fisubs
mov
mov
insl
into
icebp
or
mov
cli
scas
add
add
cld
gs
and
adc
adc
in
test
mov
adc
sub
add
insl
adc
loop
sbb
fwait
out
addr16
or
sti
rclb
xor
xor
loope
mov
lret
xchg
add
loop
in
das
push
in
das
mov
lock
and
add
add
fwait
mov
pusha
add
push
repnz
shrl
add
adc
jno
mov
pop
gs
pop
push
xchg
xor
mulb
adc
lret
rolb
push
sbb
lock
adc
add
lcall
gs
or
push
shlb
fstpl
adc
xorb
lcall
xor
add
insl
xchg
loop
lcall
test
inc
loop
pop
adc
adc
mov
fwait
out
pusha
push
sub
adc
rolb
rolb
inc
dec
inc
aaa
sub
xchg
repnz
sbb
mov
xchg
add
push
mov
aad
lcall
mov
daa
sarb
add
adc
fwait
out
test
cmp
fwait
push
mov
nop
sbb
add
mov
pusha
test
adc
push
nop
add
repz
xchg
add
add
mov
mov
push
pusha
inc
add
mov
inc
adc
outsb
or
lcall
adc
fwait
push
adc
push
add
adc
or
pop
out
addb
loope
fs
bound
test
out
adc
xor
xor
imul
adc
roll
jo
pushf
adc
fwait
mov
fs
lcall
loopne
push
aad
sbb
inc
or
mov
aam
fcoms
sti
xchg
loopne
add
aam
cwtl
mov
mov
add
stc
gs
add
add
add
in
add
fiadds
add
xor
mov
mov
or
cmpl
ret
or
loopne
inc
adc
inc
repz
sarl
adc
xor
loopne
add
sub
loope
add
jae
add
add
rclb
test
mov
pusha
jo
stos
inc
stos
and
inc
add
xlat
and
shrb
mov
fwait
loop
push
test
mov
roll
xlat
inc
fwait
lcall
addb
sbb
adc
fildl
pop
adc
adc
stos
sbb
xchg
daa
sub
mov
add
inc
arpl
fwait
adc
jo
xchg
or
inc
pop
mov
out
add
add
add
jbe
add
aad
nop
cmc
adc
fwait
mulb
rolb
rolb
add
adc
push
in
adc
pusha
sub
mov
cli
bound
sbb
xchg
add
mov
sbb
inc
jge
orb
adc
cmp
xchg
jo
jo
xor
nop
imul
rol
add
add
jb
mov
adc
add
mov
mov
mov
addr16
jbe
xchg
dec
aad
mov
stos
xor
jbe
stc
add
mov
cs
push
add
filds
inc
ljmp
mov
adc
xchg
andb
pop
clc
test
fwait
push
pop
adc
adc
or
xchg
and
and
sti
add
cld
mov
mov
stos
push
mov
daa
sub
add
ljmp
scas
add
sbbb
call
mov
adc
mov
mov
incb
mov
adc
out
adc
mov
mov
gs
incb
add
sub
add
add
add
add
adc
mov
sti
xchg
cli
scas
add
add
add
add
add
arpl
adc
add
push
push
add
adc
add
mov
imul
cli
arpl
imul
mov
add
push
lcall
fsubrl
daa
sub
add
jmp
add
mov
add
add
mov
add
nop
jle
inc
adc
loope
add
xor
imul
mov
add
add
cli
add
or
insl
push
adc
loope
inc
sbbb
push
add
push
test
fwait
out
ss
or
pop
adc
push
loope
mov
cmp
sbbb
loopne
add
push
jp
add
out
adc
test
mov
add
adc
and
and
orb
test
adc
push
mov
clc
scas
add
mov
add
imul
stos
push
stos
add
sub
add
jbe
xorb
sbb
add
mov
adc
cs
add
lea
fnstsw
imul
lcall
aad
lcall
add
push
fsubrl
mov
sahf
add
loop
adc
fstpl
subb
cwtl
mov
fisttpll
cmp
push
inc
insb
sbb
xchg
roll
stos
push
addr16
scas
sbbl
mov
imul
jae
sub
ret
and
add
sti
add
sti
add
push
out
fwait
les
adc
push
addb
stos
loop
stos
out
xlat
fwait
loop
popa
addb
loope
cs
inc
mov
test
mov
add
out
mov
arpl
adc
add
lcall
enter
inc
stos
loop
rorl
popf
nop
lcall
cmp
sbb
stos
lret
adc
adc
pop
jmp
test
add
add
andb
adc
lcall
in
loope
cmpsb
insl
add
sbb
repnz
sti
pop
rolb
mov
addl
mov
mov
or
pop
ss
push
mov
lea
adc
push
adc
push
orl
add
mov
rclb
shrb
in
rol
adc
cwtl
testb
push
adc
add
std
insl
push
stc
fwait
adc
adc
add
gs
and
aad
fwait
and
sbb
adc
adc
push
aad
add
addr16
add
cmpb
push
gs
push
adc
lcall
and
in
push
iret
addb
mov
push
push
push
mov
ret
jle
mov
aas
push
aas
lods
adc
and
test
rcrb
addb
notl
in
data16
mov
and
cmp
dec
loopne
adcb
and
arpl
add
and
or
fstpl
add
xlat
add
mov
cwtl
mov
stos
sahf
adc
imul
add
mov
add
cmpb
arpl
inc
xor
loope
stos
xchg
out
xchg
pushf
mov
add
adcb
cmp
stos
xchg
stos
sahf
add
imul
pushf
dec
gs
xchg
loopne
mov
or
push
popa
add
add
xchg
addr16
push
and
cmp
or
arpl
mov
sbb
lcall
mov
out
subb
loop
mov
scas
popf
xchg
inc
aas
neg
xor
push
and
mov
ljmp
mov
add
iret
out
adc
imul
inc
sti
sub
push
in
and
push
out
add
cs
or
mov
test
test
and
and
cs
cli
addb
sti
loop
dec
adc
subl
ficompl
push
roll
pusha
xchg
push
fwait
out
insl
adc
out
pushf
push
add
dec
add
imul
xor
scas
push
les
add
cli
arpl
mov
mov
outsb
mov
inc
xor
add
test
sarb
and
add
add
sub
test
test
sti
loop
push
insl
adc
bound
lcall
insl
and
sub
pop
push
std
add
out
lcall
adc
pushaw
mov
out
sub
mov
gs
mov
mov
lret
pop
jmp
adc
loope
mov
add
daa
sub
add
xchg
dec
addb
ret
inc
add
push
pusha
sub
add
insl
mov
add
inc
adc
andb
add
arpl
arpl
or
or
add
or
gs
stos
push
pusha
movb
add
cmpb
out
or
cmpsb
inc
or
pop
daa
sub
inc
adc
inc
adc
adc
inc
adc
jl
lret
inc
sti
into
std
scas
add
outsl
into
adcb
loope
pop
mov
adcl
hlt
and
mov
call
scas
orb
adcl
sbb
sub
mov
xchg
shll
stos
out
pop
mov
ret
loop
call
fwait
cli
loope
mov
movb
adc
sbb
addb
out
sub
mov
or
imul
sahf
add
xor
leave
and
loopne
fwait
mov
add
push
sbb
mov
orl
gs
imul
add
sub
pop
shll
add
mov
arpl
add
test
int
push
test
arpl
pop
push
xchg
cmpsl
adc
arpl
push
jg
test
push
gs
add
push
add
cmpsb
cmpsb
lcall
ljmp
jmp
add
not
outsb
push
lods
insl
sub
test
int
arpl
push
test
and
and
and
bound
roll
cmp
adc
adc
fs
and
outsl
add
lock
cmp
sbb
mov
xchg
add
int
loope
scas
in
insl
add
add
xor
push
adcl
nop
or
fsubrl
pop
cmp
push
mov
adc
mov
insl
push
repnz
add
sub
add
cmp
fwait
adc
dec
sbb
shl
or
jo
in
int
sbb
mov
push
or
and
push
or
inc
or
inc
or
fiadds
pop
xchg
add
jmp
mov
cs
ret
fstl
xchg
add
imul
sbb
inc
addr16
sbb
sti
out
daa
fisttpll
cs
sub
adc
test
nop
add
adc
gs
fwait
push
arpl
test
mov
stos
and
push
mov
adc
outsl
fldenv
insl
adc
popf
loopne
adc
arpl
mov
sbb
fwait
push
gs
or
push
or
mov
rorb
imul
nop
gs
push
loopne
add
lock
loop
inc
push
stos
add
xor
push
gs
aad
cmpsb
ljmp
adc
push
add
nop
inc
rcrb
lret
rorb
addr16
loop
insl
gs
rolb
insl
adc
add
gs
loop
mov
ljmp
test
mov
inc
adc
call
add
inc
arpl
adc
push
add
test
adc
test
adc
insl
sub
adc
loop
pop
push
or
xor
stos
xor
adc
test
ret
mov
xchg
inc
loope
jecxz
push
or
adc
mov
cs
mov
outsl
push
push
mov
add
fs
out
js
push
mov
jo
add
insl
les
push
pusha
add
pusha
pop
rcrl
mov
arpl
ret
pop
pushf
popa
adc
ret
cmp
stos
sbb
shrb
xor
and
push
adc
outsb
xchg
lret
add
shll
loopne
cltd
fsub
add
lret
push
mov
divl
add
cmpsb
cmpsb
fwait
add
push
jnp
sub
arpl
adc
adc
add
sbbb
inc
std
push
cwtl
dec
adc
adc
xor
jb
rolb
fldenv
ljmp
and
push
sub
push
jns
or
push
jg
push
add
inc
mov
mov
adc
add
mov
lcall
flds
cmp
aad
sub
out
les
gs
jp
andl
ja
mov
adc
out
push
mov
inc
push
jg
mov
adc
ljmp
add
push
jae
add
lods
mov
push
add
adc
arpl
push
add
push
add
cmp
pop
ds
add
push
add
bound
bound
arpl
bound
rolb
imul
add
bound
inc
push
pusha
add
add
mov
gs
ljmp
scas
ljmp
inc
add
add
sbb
adc
imul
rolb
adc
push
shlb
frstor
push
sti
adc
sub
pop
cmpb
and
aad
add
or
pop
rolb
orb
sbb
das
add
stc
pusha
adc
fs
fs
data16
scas
imul
pop
mov
push
sub
and
add
aad
cwtl
andb
adc
in
rorb
mov
cmpsl
add
adc
adc
cltd
enter
xor
add
mov
adc
incb
gs
rcrb
addb
add
gs
gs
xor
lcall
jle
mulb
data16
scas
add
push
arpl
add
pop
aad
cltd
dec
mov
dec
mov
and
or
or
and
add
add
xchg
loop
xor
lahf
lret
add
add
add
adc
push
or
xor
sub
mov
mov
inc
cmpsl
imul
cwtl
call
fwait
push
lret
pop
add
add
add
adc
pushf
sbb
in
adc
push
mov
arpl
add
lds
sbb
adc
gs
testb
mov
sub
das
bound
pop
add
xor
push
loope
inc
sub
sub
adc
loop
mov
add
mov
add
add
add
mov
cmpsb
mov
mov
adc
sub
add
mov
aad
cwtl
cmc
in
mov
aad
popf
cli
jo
jmp
sbb
mov
cltd
sub
loopne
mov
sbb
xchg
add
aad
cwtl
mov
pusha
sbb
add
inc
cltd
xlat
mov
popa
sbb
sbbb
in
pop
add
data16
out
loope
mov
gs
sbbb
cltd
sarl
sbb
in
xor
clc
add
pop
xor
sbb
aad
and
std
sub
lcall
gs
sbb
and
pop
xchg
vmovapd
sbb
arpl
push
arpl
pusha
add
aad
popf
xlat
pusha
mov
mov
adc
add
mov
sub
adc
shlb
gs
sbb
out
stos
nop
sbb
jmpw
jp
add
and
mov
adc
gs
gs
pop
loope
adc
and
mov
mov
lret
add
mov
jp
lods
add
add
dec
add
lods
add
add
stos
lret
addr16
inc
add
fisubs
out
mov
add
mull
loop
adc
add
aad
xchg
insl
adc
lcall
arpl
cwtl
add
pop
gs
cmpsb
add
insl
xchg
ljmp
out
add
lods
out
pusha
adc
add
push
add
add
loop
ljmp
jmp
add
sub
mov
mov
inc
add
sbb
push
or
daa
lcall
out
frstor
push
adc
gs
adc
adc
adc
insl
sub
mov
and
addr16
in
push
add
sub
add
adc
and
lahf
movb
add
sub
add
mov
add
add
fnsave
fldl
adc
aas
mov
mov
sub
pop
gs
test
sub
mov
daa
orb
adc
or
test
test
add
mov
push
add
xorb
lret
mov
cli
push
pop
bound
addl
subb
push
add
mulb
out
mov
gs
out
fstp
mov
adc
add
stos
sbb
outsl
arpl
adc
add
and
loop
adc
loop
mov
add
scas
ljmp
pop
arpl
adc
loop
stos
push
add
insl
adc
add
mov
mov
add
stos
push
add
stos
push
imul
cli
cmp
out
jg
cmp
imul
add
xchg
lods
gs
push
gs
cmp
add
frstor
sbb
cmp
or
sub
add
outsl
lea
insl
rcrl
sti
lods
add
add
and
add
ljmp
inc
incb
add
mov
dec
add
cli
xlat
mov
lcall
mov
es
pop
inc
add
mov
addl
movsb
inc
or
adc
mov
cmpb
mov
and
add
adc
out
clc
scas
add
lret
cli
inc
add
or
movb
nop
add
bound
sti
inc
add
push
add
outsb
inc
add
xchg
and
mov
inc
addb
jb
addb
xchg
addb
lcall
add
addb
dec
addb
stos
add
ret
ljmp
out
add
add
adc
adc
inc
jmp
sbb
mov
pop
dec
jb
add
jmp
inc
add
sub
jp
add
roll
orb
adc
imul
add
ljmp
sbb
sti
xor
sti
push
and
xchg
mov
cs
movb
inc
hlt
loop
cmp
pop
gs
add
gs
cli
es
add
aas
add
gs
add
add
pop
aas
xor
ss
fwait
sbb
sbb
add
and
lret
sbb
in
aas
pushf
loopne
loopne
and
pusha
sbbl
lret
or
add
sbb
inc
ss
xor
gs
cmp
and
pop
sub
mov
pusha
sbb
adc
add
out
lods
ljmp
mov
loop
and
ds
and
add
push
mov
xlat
and
lcall
rolb
in
das
outsl
mov
fwait
add
cmp
in
mov
xlat
cmpsb
mul
jp
gs
mov
or
pop
stos
mov
add
pop
scas
cli
mov
lahf
call
stos
out
imulb
cwtl
cmc
gs
loop
cmpsb
loop
pop
pushf
out
lcall
in
insl
add
aad
pushf
push
add
test
xchg
dec
lods
add
jp
pop
insl
mov
add
add
scas
add
or
jnp
sub
add
and
lds
lret
push
icebp
sbb
insl
push
out
or
stos
adc
push
add
add
gs
daa
roll
pusha
xchg
loope
das
gs
sub
in
push
xchg
dec
rorb
xorl
and
and
loopne
ljmp
inc
pinsrw
lret
add
js
add
and
lret
pusha
add
dec
fildll
mov
fwait
push
sbb
adc
andl
add
dec
loopne
add
mov
inc
add
add
cli
adc
loop
fwait
out
pop
nop
jbe
add
add
mov
adc
or
sub
adc
out
adc
mov
movsbl
adc
mov
loopne
popa
shll
or
add
loopne
push
cli
mov
add
add
mov
xlat
add
loop
pop
mulb
add
inc
fildl
pop
incb
pop
jmp
sub
fnstsw
cmp
add
ss
adc
add
add
pusha
add
add
push
adc
adc
in
or
pusha
add
add
add
shrl
in
cmpsb
xor
scas
add
mov
sbb
in
jp
scas
lods
add
add
add
pop
and
pop
pusha
sar
scas
add
jecxz
ljmp
in
mov
push
test
adc
popa
add
or
push
outsb
incb
add
mov
add
pusha
add
add
xor
scas
xor
shlb
add
xor
stos
xor
xchg
xor
addb
add
jo
stos
repnz
divb
add
xor
lret
lods
icebp
add
jo
mov
add
adc
push
xor
sbb
add
lock
add
stos
jo
mov
push
xor
xor
add
xor
fidivrl
xor
or
add
add
lock
add
add
add
add
add
lock
stos
jb
add
add
add
add
add
lock
xor
xchg
mov
add
add
add
lock
mov
jo
loop
add
xor
icebp
push
push
std
or
add
or
add
xor
inc
push
xor
fidivs
add
xor
xor
lret
add
xor
repnz
divb
add
push
xor
xor
loop
add
xor
ljmp
adc
add
push
push
xor
sbb
add
xor
add
add
push
lock
cmp
inc
lock
push
adc
add
add
add
cld
add
mov
and
cs
jo
push
xor
push
xor
pop
xor
pop
push
jo
inc
xor
inc
xor
dec
xor
dec
push
xor
jb
add
add
add
xor
bound
add
add
add
xor
xchg
xor
xchg
xor
xor
icebp
add
add
add
xor
scas
xor
shlb
add
xor
fidivs
add
xor
pop
xor
mov
lret
into
push
xor
repnz
divb
add
xor
push
xor
loop
add
add
pop
xor
adc
lock
add
xor
stos
push
jo
mov
add
xor
xor
add
xor
cmp
icebp
add
xor
xor
push
xor
stos
push
xor
pop
xor
pop
jo
inc
xor
stos
inc
xor
dec
xor
dec
xor
jb
add
jbe
add
add
xor
and
add
add
xor
add
or
jo
insb
xor
sub
add
mov
jns
add
xor
xchg
fidivl
add
xor
stos
repnz
divb
add
xor
lds
push
leave
xor
cmc
add
push
xor
mov
inc
xor
testl
add
xor
fcomip
xor
push
add
xor
add
add
xor
or
add
xor
xor
add
xor
push
xor
xor
push
xor
push
xor
push
xor
pop
xor
nop
add
add
sar
add
dec
mov
jb
add
sub
mov
bound
add
add
xor
outsb
xor
xchg
xor
mov
sub
add
add
xor
mov
add
jo
mov
add
add
xor
dec
jo
stos
jo
jo
add
xor
jl
add
jo
stos
repnz
divb
add
xor
xor
sub
xor
out
add
xor
imul
add
adc
lock
xor
sbb
add
xor
push
xor
or
add
lock
xor
jne
shlb
add
fdivs
add
xor
xor
push
push
xor
push
xor
pop
xor
pop
xor
inc
mov
add
add
add
add
add
xor
jo
stos
add
add
add
xor
stos
xor
add
xor
cmp
add
xor
mov
add
add
xor
stos
xor
scas
xor
stos
shlb
add
xor
fidivl
add
xor
stos
ret
xor
lret
into
xor
stos
repnz
divb
add
xor
xor
stos
loop
add
xor
ljmp
adc
lock
add
xor
push
xor
stos
add
add
xor
or
add
xor
stos
xor
add
xor
cmp
add
xor
stos
and
add
xor
sub
add
xor
stos
push
xor
push
xor
pop
xor
daa
xor
stos
sub
add
add
add
add
lock
mov
jno
jle
add
xor
data16
jp
add
add
mov
or
add
xor
xchg
add
add
xor
addr16
imul
outsl
xor
xchg
fnsave
add
add
add
add
xor
cmc
add
xchg
mov
lcall
xor
stos
divb
add
xor
xor
loop
add
out
add
xor
add
add
in
lock
add
xor
push
xor
add
add
xor
or
add
add
lock
jo
fdivs
ds
mov
icebp
add
jo
pop
xor
push
inc
jo
icebp
addr16
jo
dec
xor
jb
xor
jbe
add
add
add
xor
data16
push
add
add
add
mov
sahf
xor
xorb
stos
xchg
add
add
xor
mov
add
xor
aaa
xor
stc
add
xor
shlb
add
xor
fidivl
add
push
xor
repnz
divb
add
xor
push
xor
loop
add
or
jo
add
add
out
wrmsr
add
xor
push
push
xor
add
add
xor
or
add
push
xor
xor
add
xor
cmp
add
push
xor
and
add
add
push
xor
push
xor
push
xor
pop
xor
pop
aad
add
add
add
add
add
add
add
add
xor
push
add
add
xor
lcall
xorb
xchg
add
push
mov
sub
add
fs
out
add
add
scas
add
rolb
sbb
add
sbb
sbb
add
je
or
js
or
add
add
sbb
push
or
add
add
stos
cwtl
add
repz
addb
test
push
or
push
push
out
add
add
mov
push
stos
sbb
push
pop
add
add
push
pop
add
stos
or
add
add
faddl
add
add
stos
cmp
add
add
and
add
add
stos
hlt
add
clc
add
cld
add
push
add
stos
pop
add
pop
add
inc
add
inc
add
orb
sbb
add
jae
pop
stos
ja
add
add
add
add
add
outsl
add
xchg
add
stos
xchg
add
fwait
add
sub
das
sub
add
addb
addb
addb
inc
addb
addb
addb
addb
jo
add
js
add
stos
pusha
addb
addb
addb
addb
nop
addb
addb
addb
addb
addb
addb
addb
mov
add
mov
addb
addb
addb
addb
rolb
fadds
stos
rolb
addb
addb
lock
addb
addb
addb
loopne
add
addb
addb
addb
adc
sbb
stos
out
addb
addb
addb
addb
xor
cmp
stos
and
sub
stos
push
addb
rolb
rolb
rolb
inc
rolb
rolb
rolb
rolb
jo
add
js
add
stos
pusha
rolb
rolb
rolb
rolb
nop
rolb
rolb
rolb
rolb
add
test
add
add
rolb
rolb
rolb
mov
add
add
rolb
rolb
rolb
rol
rolb
rolb
rolb
lock
rolb
rolb
rolb
loopne
add
rolb
rolb
rolb
adc
jb
rolb
rolb
rolb
out
rolb
rolb
rolb
rolb
xor
add
add
rolb
rolb
and
add
add
rolb
rolb
push
rolb
rolb
rolb
rolb
inc
rolb
rolb
rolb
rolb
jo
add
js
add
stos
pusha
rolb
rolb
rolb
rolb
nop
rolb
rolb
rolb
rolb
add
test
add
add
rolb
rolb
rolb
mov
add
add
rolb
rolb
rolb
rol
rolb
rolb
rolb
lock
rolb
rolb
rolb
shr
add
rolb
rolb
in
rolb
rolb
rolb
rolb
sbb
add
rolb
rolb
rolb
or
add
rolb
rolb
rolb
cmp
add
rolb
rolb
rolb
sub
add
add
pop
pusha
add
jmp
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
shlb
aam
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
call
add
call
pusha
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
xor
add
pusha
add
add
test
add
add
add
add
pusha
add
add
stos
inc
pusha
add
dec
pusha
add
stos
jo
add
js
add
stos
pusha
pusha
add
push
add
pusha
add
add
pusha
add
add
pusha
add
add
in
push
jmp
add
in
test
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
loopne
adc
add
pusha
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pop
pusha
add
pusha
add
dec
pusha
add
pusha
add
js
add
pusha
add
push
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
loopne
adc
add
pusha
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pop
pusha
add
pusha
add
dec
pusha
add
pusha
add
js
add
pusha
add
push
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
dec
adc
add
pusha
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
out
add
repz
add
pusha
add
pusha
add
xor
sub
xor
jmp
add
xor
adc
test
add
xor
sbb
add
add
xor
or
add
xor
stos
xor
add
xor
cmp
add
add
xor
sub
add
xor
stos
push
xor
push
xor
pop
xor
pop
xor
sub
add
add
add
popa
stos
int
stos
int3
and
sub
sub
insl
xchg
add
int
pop
add
arpl
pusha
in
add
add
adc
insl
push
adc
lds
insl
mov
leave
mov
pop
sub
add
sub
add
roll
cmp
pop
stos
in
insl
push
out
fwait
ljmp
push
in
addb
addr16
jmp
push
jmp
inc
incb
add
jle
add
insl
push
das
push
in
add
sub
or
iret
roll
add
insl
push
jmp
insl
xchg
cld
jmp
loopne
insl
xchg
in
add
or
mov
in
sub
adc
gs
pop
stos
int
add
stos
int
add
fwait
call
add
add
add
add
push
and
add
push
mov
add
mov
mov
mov
jmp
add
popa
add
in
inc
add
mov
add
loop
int3
and
call
adc
jb
sbb
mov
mov
add
stos
int3
outsb
xchg
int3
jp
and
dec
pusha
and
cmp
roll
out
dec
adc
ja
xchg
jg
adc
push
or
adc
adc
ljmp
in
nop
add
add
int
adc
push
or
push
ret
mov
add
sub
xchg
in
mov
or
add
je
xor
call
add
incb
adc
sub
out
adc
adc
mov
adc
outsb
xchg
out
roll
xchg
cmpsb
mov
hlt
sbb
mov
push
dec
xchg
add
adc
push
jbe
add
jae
jmp
push
and
lcall
push
call
add
andl
add
sub
add
clc
add
or
mov
shlb
add
mov
or
les
ret
adc
sub
test
push
xchg
rolb
rclb
nop
and
push
test
add
add
sub
adc
push
mov
loope
loope
in
sub
adc
adc
push
dec
mov
adc
xchg
faddl
mov
inc
add
ja
call
add
adc
jbe
add
aam
add
adc
mov
add
testl
adc
sbb
adc
push
lock
lret
jmp
add
push
push
add
or
push
add
in
add
add
loope
inc
rclb
insl
xchg
loopne
loope
dec
nop
add
push
out
cmc
add
add
loope
insb
icebp
add
in
push
fwait
repz
add
test
mov
mov
add
push
aam
clc
jmp
pop
mov
es
push
call
hlt
add
fwait
lock
push
sub
add
and
lcall
call
or
fcoml
mov
call
adc
inc
out
inc
dec
in
sub
lcall
add
sub
add
add
xor
push
stos
mov
xchg
ss
mov
ljmp
jno
jp
add
loopne
data16
flds
outsb
push
rolb
je
xor
inc
mov
in
fwait
incl
mov
in
lcall
push
rcll
add
and
stos
add
call
add
loop
in
popa
add
adc
sbb
push
jbe
adc
and
or
add
dec
jo
mov
xchg
sub
mov
shrl
add
mov
add
push
xchg
popa
add
pushf
push
add
push
adc
pop
dec
adc
mov
movsb
or
in
fwait
sti
push
flds
loope
xchg
shll
fs
fwait
and
ret
push
clc
add
lcall
push
loop
add
sbb
cmp
sbb
movhps
add
movl
fwait
stc
inc
adc
sub
add
push
rolb
mov
adc
add
insl
stos
int
in
sub
adc
xchg
clc
add
push
add
in
loope
dec
add
add
push
push
push
lcall
push
xor
test
xor
add
in
fwait
incl
inc
test
xor
mov
ljmp
or
add
int
add
add
call
add
add
jmp
sbb
adc
add
adc
in
sub
adc
incl
cmp
and
in
in
fwait
mov
add
incl
add
add
in
lds
int
dec
add
add
add
add
push
insl
add
sub
or
adc
int3
loope
imul
pop
out
ljmp
ljmp
adc
sbb
adc
call
mov
gs
mov
gs
mov
call
add
rorb
cld
rorb
add
rolb
in
inc
lcall
add
add
or
or
push
push
pop
inc
dec
inc
sbb
sarb
rolb
adcb
rorb
fcom
dec
add
faddl
lcall
rolb
int3
push
rolb
lock
sbbb
push
rolb
sbb
sbbb
xchg
nop
sbb
mov
xchg
andb
add
add
test
dec
es
mov
out
or
jp
scas
mov
xchg
sub
add
inc
scas
out
rcll
add
sbb
add
push
orl
adc
jb
or
or
mov
nop
lea
insl
rorl
add
rclb
addr16
add
ljmp
adc
jecxz
in
pop
add
add
insl
adc
fldcw
insl
pop
in
add
in
push
addb
addl
addb
addl
sbb
add
mov
sub
incl
roll
es
push
shrb
and
inc
andl
add
insl
mov
sbb
addl
ds
push
xor
ljmp
lcall
mov
scas
push
outsb
popa
or
or
sti
insl
pop
out
into
insl
pop
or
lcall
mov
jo
push
stos
mov
add
fisttps
incl
mov
punpcklbw
nop
int3
push
loope
push
add
sti
adc
daa
sbb
or
push
in
or
inc
sbb
pop
and
dec
daa
loop
daa
pusha
out
incl
jp
add
daa
mov
push
xchg
aas
or
add
shll
push
and
subl
and
lcall
lret
fisttps
incl
cmpsl
lds
mov
aas
fs
leave
or
inc
and
and
and
push
cmp
loopne
push
incb
xchg
clc
push
cs
addl
arpl
push
pop
loope
push
add
sbb
sub
and
stos
sub
in
rcrb
cmp
add
or
add
jb
add
mov
push
xor
loopne
callw
xor
adc
loopne
xchg
push
push
add
pusha
add
push
jp
pusha
add
out
push
pusha
add
clc
or
add
push
add
pop
pusha
or
es
lods
push
in
inc
add
add
push
push
in
add
add
call
in
add
loopne
mov
push
les
add
loopne
mov
add
aad
add
add
pusha
adc
pushf
pusha
and
add
pusha
add
push
pusha
add
pusha
add
inc
pusha
add
xor
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
xor
add
pusha
add
push
pusha
add
add
add
add
add
pusha
add
add
pusha
cs
lods
pusha
add
push
loopne
and
stos
pop
pusha
add
pushaw
add
pusha
add
loopne
popa
add
jo
cli
push
xor
jbe
add
jo
sbb
add
mov
xchg
xor
xchg
add
xor
shlb
int3
xor
push
lock
or
add
add
xor
pusha
xor
jb
add
stos
xor
cmp
add
xor
sbb
add
lret
fidivs
add
xor
mov
add
xor
jb
add
add
xor
lret
add
xor
loop
xor
xor
stos
shlb
add
cwtl
xor
stos
push
add
dec
xor
mov
add
add
mov
xor
add
aas
in
add
xor
stos
les
add
xor
mov
add
xor
inc
xor
push
xor
stos
sub
add
xor
add
add
jo
stos
xor
ret
stos
xor
mov
xor
xchg
xor
bound
add
xor
cld
xor
call
xor
mov
add
xor
or
xor
in
add
and
add
xor
sub
add
add
xor
outsb
xor
lcall
mov
add
xor
stos
call
or
xor
sub
add
xor
jl
add
stos
test
add
shlb
add
pop
xor
les
call
test
add
xor
xor
push
xor
stos
inc
xor
jl
add
test
add
xor
fdivs
add
xor
mov
push
xor
push
xor
stos
and
add
add
add
add
xor
xchg
xor
sahf
xor
stos
mov
add
add
xor
stos
lock
loopne
add
xor
xor
stos
cmp
add
add
add
add
jo
icebp
and
add
inc
xor
icebp
add
add
outsb
sarb
push
out
add
mov
adc
lock
or
add
add
jo
sub
add
xor
jbe
add
add
xor
stos
xor
fdivs
add
xor
in
add
jo
stos
or
add
xor
sub
add
add
xor
xchg
xor
mov
add
add
cmp
inc
xor
enter
cli
xor
push
cmp
add
push
xor
xor
add
add
inc
push
xor
js
add
xchg
xor
adcb
mov
add
add
push
xor
shlb
lock
cli
xor
nop
push
jo
jl
add
add
add
xor
push
xor
in
cmp
push
add
xor
into
xor
fidivl
add
xor
xchg
add
xor
jbe
add
mov
int3
xor
incb
add
ss
add
add
push
xor
sub
add
add
add
push
xor
jbe
add
add
sub
and
add
add
xor
cld
cmp
mov
sbb
lock
xor
sub
add
add
add
xor
xchg
xor
xchg
add
xor
shlb
add
xor
int3
xor
clc
push
xor
call
add
xor
ss
xor
fidivl
add
add
push
xor
loopne
add
or
add
push
xor
push
xor
inc
xor
stos
jo
mov
xor
xchg
xor
data16
jbe
xor
inc
xor
push
xor
sub
add
lret
xor
jno
call
lock
add
xor
dec
xor
bound
add
xor
cmpsb
xor
shlb
stos
xor
push
lock
or
add
xor
stos
push
xor
dec
xor
push
add
xor
scas
xor
mov
adcl
push
xor
out
mov
jecxz
xor
jmp
add
add
dec
lock
enter
cmpsl
outsb
popf
xor
loopne
mov
adc
pusha
pop
outsb
pusha
popa
outsb
lcall
jo
loopne
outsb
jmp
add
xor
xor
cld
jo
xor
pusha
outsb
push
xor
stc
mov
jno
stos
xchg
xor
xor
jbe
add
xor
push
xor
sub
add
xor
xor
add
add
sub
xorb
mov
xor
movsb
xor
dec
xor
mov
pop
ljmp
sbbl
test
mov
test
fwait
pushf
pushf
mov
pushf
mov
pop
ljmp
add
pushf
orb
ja
mov
mov
xchg
out
stos
xchg
sahf
popl
orb
addl
pushf
rolb
in
in
jo
mov
stos
pushf
pushf
sbbl
subb
int
test
add
mov
popf
stos
lcall
add
add
jo
mov
and
mov
pushf
xchg
add
sahf
scas
addb
mov
add
mov
add
and
test
xchg
add
rolb
add
add
cs
mov
add
push
add
add
mov
mov
jo
stos
icebp
add
mov
popf
sbbb
mov
add
addb
cmpb
add
cmp
add
add
push
inc
push
cmpsl
orb
lcall
add
mov
mov
push
stos
cwtl
add
add
or
cmpsl
addb
xchg
xchg
adc
add
and
mov
add
popf
add
add
pop
out
add
pushf
in
add
loope
mov
lcall
add
pop
push
add
push
test
lea
add
mov
cmp
push
mov
scas
addb
add
orl
add
add
out
test
orb
lcall
add
mov
popf
add
mov
add
rolb
lods
addb
add
mov
pusha
jge
cmpsb
mov
add
add
add
stos
mov
pushf
add
cmpb
addl
lcall
mov
add
bsf
adc
mov
addb
add
mov
fwait
popl
and
add
fstp
jno
mov
add
adc
xchg
add
addl
mov
xchg
addl
inc
orb
ja
popa
orl
orb
mov
pushf
xchg
add
adcb
or
orb
sbb
add
add
xchg
jmp
popf
lcall
add
imul
mov
add
mov
mov
cmp
mov
or
test
cmp
pop
test
add
sbbb
adcl
stos
sub
lcall
mov
xchg
sbbl
add
add
jno
inc
addl
outsl
les
stos
xchg
xchg
rcrb
inc
or
lds
xchg
or
and
leave
adc
inc
mov
mov
pop
lret
rcll
adc
pop
cmpsl
orb
add
cwtl
stos
add
stos
xchg
xchg
add
mov
mov
inc
xor
ljmp
scas
add
sbbb
add
xstore-rng
cmpsl
inc
movsb
cmpsb
inc
inc
sahf
inc
cmp
sub
lods
fwait
pushf
pushf
mov
inc
or
or
xchg
add
sbb
in
cmpsl
popf
lods
add
add
add
lret
push
shr
rol
test
mov
add
push
in
add
andb
add
inc
add
rolb
ljmp
sbbl
mov
shl
and
mov
push
xlat
add
jmp
xchg
pushf
mov
xchg
lcall
add
add
xchg
mov
add
sub
mov
orb
add
inc
ja
push
ja
es
xor
inc
and
mov
loope
sub
or
mov
mov
mov
add
ljmp
add
and
fs
ret
dec
sub
push
dec
in
sub
loope
add
pushf
pushf
add
mov
bound
xor
cwtl
cli
and
and
sbb
add
shll
cmp
xorb
mov
out
inc
dec
add
add
sbb
or
inc
pop
sbb
pop
addl
or
add
or
aaa
addl
add
add
mov
and
shrb
ret
loopne
shlb
or
and
cmpb
add
add
dec
fisubrs
inc
mov
or
add
mov
test
add
mov
mov
mov
sub
popa
push
jecxz
stos
inc
scas
imul
cltd
das
cmpsl
aaa
arpl
add
mov
xchg
daa
mov
xor
add
mov
sub
out
inc
mov
add
stos
mov
addb
mov
mov
and
out
loop
ret
movsl
mov
rolb
pop
mov
pushf
loopne
mov
mov
cmp
cmpsl
popf
add
lcall
mov
inc
adc
pushf
add
and
add
loope
add
bound
popf
add
orb
jg
rcrb
and
push
cwtl
add
xchg
test
fwait
rorb
or
mov
add
sub
and
in
mov
fs
sub
jmp
ljmp
lcall
add
aam
pop
loope
call
out
mov
popf
popf
ret
add
add
icebp
add
outsb
fistl
xchg
add
jae
or
adc
scas
add
mov
cmp
add
sahf
mov
stos
lcall
add
lcall
in
mov
movb
add
aam
mov
jbe
lock
mov
rclb
cmp
bound
lock
in
pop
mov
push
add
rolb
and
pop
xchg
mov
xor
int3
icebp
push
stos
lods
jns
xor
add
andb
add
arpl
sahf
mov
jb
loopne
add
popl
shlb
add
dec
cltd
stos
mov
xor
add
inc
cmpb
add
push
push
rolw
add
mov
stos
push
orb
mov
jecxz
mov
lock
lods
lret
popa
sbb
vmwrite
push
pushf
pusha
dec
and
pusha
lock
adc
xor
mov
add
add
pop
jo
xor
mov
push
rclb
out
cmpsb
xchg
xchg
pusha
mov
add
jbe
pop
mov
pop
xchg
or
add
add
xor
push
add
mov
xchg
lcall
add
push
jne
add
je
mov
and
icebp
add
jecxz
add
ret
and
add
rclb
loopne
popf
loope
mov
orb
sahf
orl
mov
popa
or
sbb
and
in
and
addl
or
adc
repnz
or
or
sbb
mov
mov
mov
fadds
add
ss
mov
jo
stos
add
inc
sub
push
lea
xchg
or
adc
sub
cmp
add
xor
adc
stos
xchg
popf
sahf
rcrb
ja
repnz
mov
xchg
das
popf
add
adc
nop
cmpsl
lea
sub
cs
loope
add
ret
repnz
int
adc
sbb
movsb
add
xchg
add
cli
add
sahf
adc
int
add
add
inc
mov
jg
frstor
mov
jo
pusha
xor
repz
add
in
jecxz
dec
xlat
push
add
shll
imul
add
add
mov
adc
ret
int3
rcrb
add
jns
lea
cmp
and
add
icebp
add
add
add
nop
repnz
pop
fwait
xor
dec
jo
popl
aam
shlb
xor
xchg
or
mov
addb
mov
mov
or
xor
pushf
lcall
cmpl
adc
mov
push
push
and
mov
or
cmpsb
popf
xchg
sarb
add
add
jo
add
xor
and
addl
inc
add
pop
adc
and
xchg
and
add
pop
xor
roll
addr16
or
lcall
jbe
int3
xchg
orb
jmp
add
jge
addb
addb
add
jo
xchg
jecxz
stos
sarb
add
jae
jo
adc
and
add
pushf
lcall
xchg
or
add
xchg
xor
lcall
push
mov
push
popa
and
fwait
addw
and
das
mov
adc
and
nop
or
lcall
xchg
add
mov
sbb
mov
sbbl
add
mov
add
scas
popf
mov
mov
add
sahf
mov
xchg
add
add
add
scas
mov
or
popf
add
mov
mov
addb
popl
lcall
mov
mov
mov
and
add
push
adc
cmpsl
add
mov
addl
mov
add
mov
out
mov
sahf
or
and
pushf
mov
dec
jge
add
mov
addl
sbbb
or
or
sub
iret
test
cmpsl
mov
cltd
cwtl
sbbb
lcall
scas
add
sbbb
xchg
adcb
or
test
xchg
scas
mov
mov
or
test
stos
xchg
lcall
cmpb
pushf
cmpb
sahf
mov
xchg
add
mov
sub
cmpsl
adcb
stos
test
mov
add
sub
lcall
pushf
add
orb
add
lods
addl
mov
push
cwtl
inc
add
addb
fwait
lcall
mov
add
adc
test
inc
or
pop
add
add
test
pushf
addl
inc
and
add
stos
sbb
add
rcrb
cmpsl
sbbb
mov
add
addb
ret
add
inc
add
movb
xor
movsl
add
mov
cmpsb
test
popl
inc
pop
cltd
add
mov
mov
jge
add
add
lds
xchg
in
mov
mov
in
mov
add
faddp
adc
lcall
dec
rclb
mov
mov
test
sbbb
or
add
or
sahf
sbbl
adc
sahf
add
and
add
lods
sahf
sub
cmpsl
addb
add
cmpsl
lods
add
jg
add
fadd
add
mov
orb
sbbb
add
pushf
mov
inc
movsb
mov
add
cmpsl
add
mov
orb
shlb
add
inc
add
pop
enter
add
add
inc
add
add
arpl
add
leave
and
sbbb
cltd
sbbl
add
mov
lods
addb
mov
xor
iret
pusha
add
das
and
xchg
mov
sbbl
cmpb
inc
inc
rolb
dec
cld
loop
add
xor
add
out
mov
andl
ret
add
inc
adc
or
ret
add
push
dec
add
lods
addl
or
aaa
xor
sahf
lcall
add
popl
add
lods
mov
sbb
lcall
push
fwait
orb
and
mov
mov
lea
add
pop
add
orb
popl
lcall
mov
inc
andl
cmpsb
add
or
popl
add
dec
pop
cmpsb
add
scas
add
int3
add
add
dec
mov
adc
adc
lods
orb
lcall
sub
mov
mov
xchg
inc
and
popf
in
and
mov
mov
add
es
add
test
mov
jae,pn
add
cmpsl
add
loopne
and
popf
add
andb
or
loopne
jns
out
loope
scas
add
add
and
jne
fiaddl
add
push
sbb
mov
mov
mov
add
sarb
add
mov
add
scas
sahf
xchg
pushf
test
jae
add
movsl
add
push
push
add
or
mov
add
orl
add
out
and
popf
sub
add
and
mov
mov
fwait
rcr
inc
add
loope
add
loopne
cli
jmp
lcall
ljmp
add
add
jecxz
cltd
add
sbbl
sbbb
addr16
mov
fwait
pusha
je
fwait
mov
mov
push
adc
ljmp
jbe
add
xchg
dec
lods
fwait
pushf
pushf
xor
je
add
inc
sbb
stos
xchg
lea
lcall
ljmp
add
mov
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
notl
and
imull
ljmp
adc
inc
add
add
add
in
add
outsb
inc
jo
outsl
adc
adc
jo
out
xor
into
xor
xchg
xor
add
xchg
mov
jmp
add
mov
mov
mov
or
sbb
mov
outsb
js
clc
and
divl
daa
cmc
pusha
fidivl
add
cmc
sub
mov
jo
sahf
lds
sub
xchg
or
add
testl
loopne
arpl
inc
add
pop
push
dec
stos
add
cld
popa
outsl
insb
push
scas
push
rolb
cmp
adc
cmp
bound
outsb
add
test
push
imul
mov
sahf
push
add
xor
jae
adc
lods
dec
or
cwtl
or
push
add
stos
stc
inc
push
inc
add
or
add
sbb
add
stos
mov
sub
dec
add
testl
outsl
push
cmpsb
mov
jge
add
fistl
add
mov
sub
jl
adc
add
mov
aas
adc
gs
ss
mov
pop
add
sbb
es
outsb
andb
fs
mov
fwait
rcll
and
add
add
cmp
add
push
shll
arpl
cld
insl
sbb
sub
testl
pop
sarl
loope
push
add
test
shrl
addb
flds
push
push
lods
xchg
add
cmp
cmp
shrl
adc
and
add
rol
mov
sub
jnp
daa
sarl
mov
cli
push
add
xor
stos
inc
lock
and
lret
sub
push
aad
popl
gs
rorl
add
xchg
cld
push
mov
cmp
out
shll
jl
sti
add
dec
pop
xlat
add
add
inc
rcll
push
mov
mov
and
add
outsl
sarl
adc
notl
cs
ror
addr16
insb
add
cmp
xor
data16
cmc
pop
push
or
aad
push
lods
jmp
fnstenv
lahf
repnz
xor
jle
xlat
dec
imul
insb
dec
dec
pop
fmull
xchg
mov
pop
inc
lret
cmpsl
or
fadds
fisubl
lret
popa
add
sub
adc
jo
data16
add
push
mov
add
popa
inc
call
or
xor
cmpb
xor
in
sub
and
add
arpl
sub
add
xchg
sti
add
add
cld
add
xchg
sti
add
cld
add
add
nop
sti
add
movsl
cld
add
cld
add
cld
add
cld
add
cld
add
jo
add
add
jne
sti
add
add
cld
add
stos
jb
add
add
add
cld
add
jo
add
cld
add
add
movsl
cld
add
cld
add
cld
add
cld
add
pusha
sti
add
add
insl
cld
add
add
rolb
testl
add
shrb
pop
test
or
cmp
or
xchg
and
or
lods
or
inc
loopne
or
out
push
scas
or
jbe
or
cmpsl
sub
xadd
or
add
mov
shrl
pop
xchg
add
cmpsb
add
scas
add
stos
addb
addb
addb
addb
testb
addb
mov
addb
addb
addb
addb
addb
addb
addb
inc
addb
addb
push
xor
test
ljmp
jp
add
addb
addb
addb
outsb
addb
addb
addb
addb
sahf
addb
addb
jbe
push
incb
add
rcrb
fsqrt
add
repnz
lret
fiaddl
rcl
stos
mov
mov
mov
adc
add
xchg
push
jp
jb
dec
inc
pop
add
push
sub
and
bound
roll
rcrl
roll
shl
add
not
lret
rcl
add
stos
shlb
add
mov
adc
rclb
sarb
jb
rorb
inc
rcrb
push
add
sub
and
cmp
xor
rorb
rolb
rcrb
rclb
add
ljmp
add
lret
rcr
rcl
add
stos
shll
add
mov
adc
rcll
jp
jb
rorl
inc
rcrl
push
add
sub
and
cmp
xor
rorl
roll
rcrl
rcll
add
add
into
add
inc
out
add
add
fsubp
fdivrp
fdivp
add
lret
add
stos
fisubs
add
mov
sbb
ficoms
fidivrs
jb
fimuls
inc
ficomps
push
add
sub
and
cmp
xor
fimuls
fiadds
ficomps
ficoms
add
ljmp
add
lret
add
stos
fbld
add
mov
sbb
fists
fistpll
jb
fisttps
inc
fistps
push
add
sub
and
cmp
xor
fisttps
filds
fistps
fists
add
ljmp
add
lret
add
stos
fsubl
add
mov
sbb
fcoml
fdivrl
jb
fmull
inc
fcompl
push
add
sub
and
cmp
xor
fmull
faddl
fcompl
fcoml
add
ljmp
add
lret
fstp
fst
add
stos
frstor
add
mov
sbb
fstl
fnstsw
jb
fisttpll
inc
fstpl
push
add
sub
and
cmp
xor
fisttpll
fldl
fstpl
fstl
add
ljmp
add
lret
fcmovu
fcmovbe
add
stos
fisubl
add
mov
sbb
ficoml
fidivrl
jb
fimull
inc
ficompl
push
add
sub
and
cmp
xor
fimull
fiaddl
ficompl
ficoml
add
ljmp
add
lret
fcmovnu
fcmovnbe
add
stos
add
mov
sbb
fistl
fstpt
jb
fisttpl
inc
fistpl
push
add
sub
and
cmp
xor
fisttpl
fildl
fistpl
fistl
add
ljmp
add
lret
fcomp
fcom
add
stos
fsubs
add
mov
pop
fcoms
cs
sub
pusha
xor
push
rolb
sarl
cmp
push
pusha
cmp
roll
shlb
add
xor
xor
addb
add
mov
dec
ds
mov
arpl
jge
jno
aad
aad
aad
aad
add
scas
rorb
add
sub
rcl
add
cmpsl
shll
inc
rorb
mov
sti
rol
shll
inc
shrl
loopne
add
adc
mov
add
scas
pusha
inc
in
fdivp
fiadds
fstp
scas
fiadds
fidivs
pop
fisubrs
fiadds
cmp
pop
filds
mov
fmull
cmpsb
fmull
xchg
fisttpll
jo
mov
jbe
add
ficoml
fildl
mov
and
imul
fildl
dec
fisttpl
inc
fistpl
push
fldt
and
pand
add
fucomi
fadds
jecxz
std
fdiv
fdiv
fadds
shlb
fcomps
add
fsubs
fadds
xor
xor
or
pop
fadds
out
fcomps
fcoms
fmul
flds
dec
flds
pop
fsts
add
fnstcw
add
jno
pop
add
fst
rcl
lods
xlat
add
xlat
test
add
jnp
or
adc
add
aam
aam
aam
aam
hlt
aad
aad
aad
aad
mov
test
xchg
aad
aad
pop
aad
aad
aad
rolb
lret
rcl
shlb
add
pop
shrb
shlb
rolb
jmp
in
clc
ror
shll
rcl
shrl
add
sarl
and
inc
shrl
loopne
sbb
in
shl
shl
rolb
imul
sarb
jne
add
ja
rorb
sarb
add
xor
pusha
pop
add
faddl
inc
fldl
stc
fcmove
loopne
add
dec
fiaddl
ficoml
fiaddl
rcr
adc
dec
fadds
aas
loopne
arpl
inc
in
pop
add
xlat
pop
xlat
daa
xlat
add
xlat
add
out
aam
aam
aam
aam
mov
insl
aam
aam
aam
or
jecxz
rcl
mov
cmpb
aad
rcr
and
add
push
sarb
sarb
rolb
add
nop
roll
add
shll
rorl
out
into
rcl
shlb
push
and
add
rolb
rcrb
call
leave
rol
rorl
andb
outsb
add
mov
adc
neg
xlat
ficoms
filds
mov
fistpll
add
fildll
faddl
leave
frstor
fisttpll
cmp
loopne
add
test
add
cli
aad
aad
aad
sahf
aad
aad
shrb
rolb
or
adc
roll
rcr
ror
shlb
add
add
add
fidivs
fsubrp
fstl
fiaddl
and
sbb
test
fldenv
xchg
fstps
loopne
cmp
or
adc
hlt
xlat
add
xlat
mov
xlat
and
mov
push
pusha
sub
roll
into
rcr
rcr
rcl
shll
movsb
shll
dec
add
jbe
or
fimuls
daa
fidivs
ficomps
add
arpl
pop
fbstp
push
add
adc
mov
sbb
adc
fdivrl
or
cs
repz
rcr
mov
jns
aaa
ficoml
add
out
loope
neg
insb
add
cmc
fsubs
adc
movsl
xchg
loopne
push
xor
cli
xlat
repnz
lret
ret
and
cmp
ss
cmp
xor
pop
aam
add
push
aad
aad
aad
adc
int
mov
lcall
leave
rcrl
clc
mov
pop
xor
mov
jo
or
add
ret
add
ja
pop
fbstp
or
fcomip
fisttpll
adc
push
fldl
adc
dec
fidivrl
fidivrl
push
fildl
push
fdiv
fcom
fadds
mov
adc
in
flds
out
loopne
clc
f2xm1
flds
enter
fldcw
flds
imul
inc
flds
push
fldcw
mov
add
aad
aad
out
sti
ror
rol
rolb
aad
mov
rorb
cwtl
shlb
or
shr
roll
in
mov
shlb
pop
sarb
roll
mov
fidivrs
fists
fistpll
fcoml
fcoml
fnstsw
nop
dec
sub
push
dec
call
lock
fsubs
insl
fcomps
pop
fcoms
jo
xor
add
out
testb
int3
fldcw
add
dec
fsts
fldpi
xlat
add
rcll
fs
jae
push
aam
aam
add
call
stc
aad
aad
add
dec
aad
rcrb
mov
cmpsb
test
arpl
sbb
add
stos
lock
fisubrs
add
fbld
faddl
out
adc
fiaddl
xor
fcomps
fnstenv
add
aad
aad
rolb
xchg
and
shll
add
add
repnz
fiadds
or
fnstenv
xor
aad
lods
rcrb
add
add
shlb
std
ficoms
add
ret
aam
aam
aam
ret
xor
aad
rolb
xchg
rclb
stos
shll
or
ss
mov
jno
mov
xor
loop
push
or
fidivrl
fisttpl
mov
test
dec
popf
fistpl
xchg
fldt
dec
fildl
popa
fstpt
jns
jne
mov
dec
nop
dec
inc
rclb
add
push
fistl
sub
and
cmp
xorb
or
sbb
adc
sub
jmp
push
dec
or
fdiv
jo
int
leave
fadds
lds
fcom
fadds
rcr
lods
fsubrs
mov
fdivs
fmuls
sbb
xchg
fadds
sbb
adc
flds
jmp
fscale
flds
stc
fprem1
fyl2x
fxch
flds
leave
fld
fld
flds
aad
rcr
lods
flds
test
fnstcw
mov
mov
flds
mov
test
sbb
fsts
adc
fnstcw
jns
xorb
dec
mov
add
pop
flds
out
test
rcrl
shll
add
out
add
adc
fiadds
int3
faddp
fisubrs
adc
movsb
filds
jle
inc
fbstp
fists
fsubl
mov
xor
fldl
cltd
frstor
inc
fldl
sub
adc
mov
add
jno
lret
fildl
pop
xor
fldt
js
cmpsb
inc
fldcw
push
fldln2
xor
adcb
enter
sbb
pop
add
adc
mov
aad
push
aad
aad
rcl
rolb
mov
rolb
add
aas
rcrb
shl
roll
shl
insb
adc
add
rol
shlb
ret
xor
insl
xchg
rorl
dec
sarl
mov
pop
roll
into
or
add
mov
out
add
ficoms
fiadds
adc
call
filds
mov
sbb
fbld
add
movsl
fldl
lret
fidivrl
dec
fisubrl
push
jo
or
jle
jo
movsb
fldt
mov
push
sbb
rcrb
in
fsub
fdivr
fsubrs
push
mov
and
pop
fsts
cmp
add
mov
mov
test
popf
xlat
xchg
xlat
add
xlat
jl
add
or
xlat
add
xlat
adc
call
aam
aam
aam
aam
mov
imul
nop
sub
fwait
aad
aad
aad
aad
push
aad
sarb
or
rorl
jecxz
adc
rcl
mov
gs
and
jns
jae
jnp
ficoms
jae
in
faddp
nop
jp
fisubrs
ja
push
xor
fbstp
fildll
mov
faddl
int
rolb
xchg
outsb
dec
fldl
frstor
fldl
fstpl
fstl
jo
dec
fisubl
lahf
add
psubusb
add
js
push
xlat
out
test
aad
aad
aad
aad
add
inc
aad
aad
aad
add
pop
aad
shl
rol
add
rcl
test
add
fwait
xor
rorb
inc
inc
rcrb
pusha
and
or
sbb
add
rorl
pop
rorl
pop
rcr
add
mov
fst
mov
jl
rcll
lock
mov
fsubrp
fcomip
xor
test
adc
cltd
fildll
push
lock
fisttps
adc
adc
call
faddl
fcompl
fdivrl
fsubl
fdivl
add
mov
pushf
fnstsw
rclb
fcmove
fcmove
adc
xlat
rcrb
add
mov
add
add
pop
fcompl
ficoml
xchg
and
out
ftst
std
add
scas
pop
or
in
add
dec
aam
aad
aad
add
xor
xor
adc
add
xchg
add
push
test
imul
add
ret
mov
pop
fdivr
fnstcw
xor
jo
mov
addl
add
ret
nop
xchg
pop
xlat
sub
cmp
xlat
ljmp
imul
fcmovbe
mov
push
rorb
adc
mov
loop
nop
sbb
jo
adc
jg
add
lock
mov
or
fidivrs
filds
add
scas
stos
fstpl
jmp
fidivrl
es
lock
xor
into
xlat
push
xlat
fs
add
rclb
shrb
addl
rcll
add
out
loope
add
push
cmp
mov
in
nop
mov
rcrb
fbstp
filds
or
loopne
lret
fsubl
movsb
fdivl
js
add
mov
fsubrl
adc
cli
jo
mov
lahf
inc
fcmovnu
lds
jo
add
pop
xlat
in
aam
aam
add
mov
lahf
aam
aam
add
js
pop
aam
aam
add
repnz
mov
adc
adc
dec
aad
xor
aad
shlb
shlb
rcrb
cmp
xor
shl
shl
rclb
sahf
rcrl
inc
rorb
shr
rcl
jecxz
shl
rcr
rcr
rorb
shlb
inc
add
mov
add
adc
in
jo
mov
add
cmp
add
add
add
pop
out
clc
adc
lods
fisubs
addl
fidivrs
or
lret
nop
test
pop
add
adcl
mov
jae
repz
inc
fstp
fisttpll
and
fnstsw
fcmovu
add
mov
mov
xchg
xchg
pop
inc
push
mov
fmul
jo
mov
fsubrs
pushf
mov
fstps
das
fnstcw
flds
add
adc
add
xlat
hlt
xlat
stos
xlat
add
xlat
dec
xlat
add
xlat
cli
aam
ret
aam
aam
aam
aam
mov
aam
aam
push
aam
aam
aam
aam
jmp
aad
aad
aad
aad
aad
aad
and
aad
rolb
int3
rcl
shlb
outsl
rorb
pop
shrb
rolb
pop
rcrb
shl
rcr
roll
scas
sarl
roll
arpl
jp
jne
dec
roll
inc
rcrl
push
shll
roll
ljmp
rolb
dec
rcrb
sbb
out
add
shll
roll
push
shll
add
xchg
add
ljmp
ds
fbld
mov
lahf
fistps
inc
fists
filds
fbld
fistpll
push
fisttps
filds
fistps
add
fists
fucomip
fsub
faddl
fdivr
fdiv
fmul
faddl
fsubrl
pushf
fcompl
jp
dec
fcompl
faddl
sub
cmp
or
sbb
adc
fldl
movsb
fnstsw
fldl
outsb
fisttpll
pop
fnstsw
fucomp
fcmove
fiaddl
leave
fcmovb
fcmovbe
fidivrl
test
sahf
ficompl
insl
fisubl
dec
fiaddl
fidivl
ficoml
fildl
cwtl
fistl
fildl
sub
or
add
sbb
add
fdivr
fadds
into
fmul
fadd
fcom
fadds
stos
fdivs
fadds
sbb
inc
fadds
push
fsubrs
fmuls
fmuls
fadds
add
fprem
flds
fnstcw
dec
flds
cmp
xor
jmp
repnz
rcl
pushf
add
jbe
add
cmp
out
sbb
xlat
add
xlat
mov
pushf
xlat
jb
add
aam
aam
aam
aam
xor
jae
cmp
cmc
rolb
lret
shrb
roll
imul
rcll
and
add
roll
out
stc
rol
rcr
rolb
insb
sarb
xor
popf
shll
rorl
rcrl
roll
adc
pop
out
add
bound
fimuls
fidivs
push
fiadds
add
fisttps
xchg
fists
aas
filds
aaa
filds
fmul
faddl
ret
fsubl
popa
faddl
dec
fcompl
push
fmull
faddl
lock
fstp
fstpl
jg
dec
fstpl
add
loopne
add
fisubl
fiaddl
jae
add
fistl
fisttpl
mov
xchg
aad
aad
rorb
xchg
rolb
rcl
mov
and
je
and
cs
add
add
ficoms
add
fisubs
fidivrs
add
sbb
adc
jecxz
and
fistpll
sub
add
inc
jbe
fnsave
fucomp
fnstcw
pop
xlat
add
aam
aam
aam
aad
mov
shlb
cmp
rcr
roll
out
add
rclb
sbb
sbb
das
fbstp
fstp
lods
fldl
mov
fsave
sub
inc
fisubrl
inc
fistpl
pop
fistl
add
das
fldt
fildl
and
aas
fstpt
fildl
xor
pand
fildl
fildl
add
pop
fistpl
fistl
fldt
adc
ja
inc
js
sarb
and
fdiv
fmul
inc
jp
fadds
ret
fcomp
fcomp
fcom
fadds
rcr
scas
fsubrs
mov
fdivs
fmuls
lahf
fadds
fcoms
fadds
imul
fsubs
jg
add
ja
jae
dec
fadds
dec
rolb
flds
pop
fstps
cs
or
add
xlat
push
pusha
xlat
jae
add
push
xlat
sbb
jnp
pop
aam
inc
jnp
aam
int
ret
aad
aad
sub
and
add
sbb
add
aad
shl
ror
rorb
fcmovbe
aad
xorb
rolb
inc
rcrb
shrb
rolb
sbb
inc
in
shl
shl
roll
lret
rol
rcr
rcl
roll
lods
shll
roll
xchg
lahf
shl
shl
rolb
not
icebp
sarb
rolb
add
daa
roll
push
out
add
sub
xor
xor
dec
fbld
sub
loopne
add
icebp
fcmovb
pusha
arpl
dec
ficompl
rcr
fstpt
daa
push
fisttpl
xor
push
loopne
adc
das
flds
in
mov
and
adc
add
xlat
call
xlat
or
xlat
clc
and
add
xlat
xlat
rcl
xlat
sbb
aam
mov
lahf
mov
and
sbb
enter
aam
aam
aam
aam
adc
aam
aam
aam
sbb
and
rcl
sarb
and
shl
sar
pusha
sbb
roll
scas
shrl
roll
pop
shr
ror
rcrb
jae
sub
in
add
rcrl
shll
add
out
add
add
filds
xchg
and
inc
faddl
pop
fmul
fstp
add
das
fldl
fcmove
fisttpl
ja
fsub
pusha
cmp
mov
fsubs
add
pop
jmp
xlat
imul
aad
shlb
lock
mov
jecxz
and
loopne
mov
gs
shrd
cmpsb
pusha
setae
shlb
cltd
inc
cmpsl
loope
add
add
loopne
repnz
rcr
fsubrl
fisttpll
add
out
jnp
jne
fimull
inc
ficompl
sub
and
cmp
adc
fndisi(8087
fcmovne
add
fcmovnbe
dec
std
fmul
fcomp
adc
mov
xchg
fnstcw
fnstenv
push
fldcw
lahf
mov
rcl
xchg
and
dec
add
sub
cmp
cld
aam
inc
aam
aam
aam
pusha
inc
out
add
in
rcl
mov
addb
inc
aad
aad
aad
add
sbb
adc
loope
std
add
not
into
rol
sarb
xchg
mov
adc
jb
dec
mov
add
sbb
rcl
mov
mov
roll
rcll
shrl
sarl
shll
rorl
adc
sbb
push
mov
add
cmpsl
sarb
add
adc
incl
repnz
in
loop
sti
inc
fimuls
pusha
sub
add
aam
lods
sub
out
fcoml
add
mov
fldl
cmpsb
cmp
push
fildl
fdivrs
pop
push
fmul
flds
fnstcw
dec
call
iret
push
xlat
rcl
test
fwait
add
adc
aad
inc
mov
insl
rol
pusha
test
shlb
rclb
shlb
inc
rcll
loope
into
in
add
dec
loopne
sti
fisubs
xor
filds
cwtl
fistps
or
add
add
cmp
add
fnstsw
fldl
pop
fstl
and
cmp
or
loopne
scas
fidivrl
andb
ficoml
add
fcomi
fildl
rcr
loopne
add
fsubrs
test
dec
fcoms
fadds
and
xor
pop
fsub
flds
enter
sub
or
add
xlat
mov
adc
lret
aam
test
mov
aam
inc
aam
aad
rolb
rolb
lock
rolb
in
add
fbld
filds
cmp
fsubrl
fdivrl
faddl
fstl
adc
lahf
ficompl
inc
cmp
sbb
fildl
fdivs
fldcw
std
and
or
jmp
rol
rcr
add
adc
mov
loope
lret
add
shll
lcall
or
add
les
fcmovu
and
fidivrs
add
mov
lahf
ficomps
mov
fidivrs
lock
fimuls
adc
pop
inc
ficomps
push
fisubrs
push
push
and
nop
pop
xor
xor
fsubrp
add
sbb
fsubrp
add
jmp
add
cmc
ffreep
add
rcr
add
lods
fbld
adc
mov
mov
test
fistps
fists
fbld
pop
jbe
fbstp
dec
fisttps
inc
adc
pop
xor
push
jo
sub
and
fbld
fistpll
fbstp
fbstp
xor
or
adc
fbld
out
fsubr
fsub
xor
faddl
hlt
fdiv
fmul
fadd
fmull
rcr
rcrb
fsubrl
fdivrl
mov
mov
mov
xorl
fsubl
js
add
jl
fcompl
pop
faddl
push
fsubrl
fmull
or
add
jge
fdivrl
add
dec
fstl
aas
fiaddl
fisttpl
neg
pusha
fadds
and
cld
xchg
fldcw
jl
dec
flds
adc
jmp
cmc
sub
add
push
sbb
in
or
xlat
aaa
lock
aad
aad
lock
shlb
cmp
or
shlb
inc
shl
es
sbb
add
ficomps
push
fildll
add
push
xchg
fdivl
fsubl
outsl
test
sbb
fistpl
ret
jmp
fcomp
mov
pop
xlat
cmpb
and
dec
aad
jo
add
rcl
roll
and
ja
roll
mov
add
xorb
cwtl
fdivp
fistpll
add
fistps
loope
repnz
stos
fldl
fstp
add
add
push
fstpt
pop
fmuls
sub
xchg
fstps
add
psubusw
icebp
xlat
add
xlat
push
xlat
pop
xlat
mov
and
stc
aad
adc
aad
push
pusha
mov
insl
lock
add
shrl
cmp
or
inc
xchg
icebp
sub
push
out
xor
push
add
jo
mov
add
test
into
fistpl
fistpl
in
adc
loopne
cli
add
insl
test
insl
aam
add
add
outsl
aad
or
sub
in
add
pusha
add
or
cmp
nop
adc
dec
hlt
add
test
mov
fwait
jle
dec
pop
and
cmp
adc
lds
mov
dec
pop
xlat
sub
sbb
xlat
jmp
in
cli
aam
add
mov
addr16
aam
add
add
leave
aad
aad
adc
cmpsb
aad
adc
aad
aad
shrb
cltd
mov
and
add
out
adc
push
movsb
mov
and
or
add
aam
imul
jle
add
or
fsubp
add
stc
fmulp
fmulp
fisubrs
fiadds
fisttps
filds
inc
rorb
push
lahf
jmp
stos
fidivl
in
outsl
arpl
xchg
jae
xlat
and
div
xchg
cmpsb
add
dec
xchg
or
add
adc
rolb
shr
shl
sar
adc
not
icebp
lock
rcr
add
aad
lods
shll
mov
roll
xchg
shrb
jno
roll
pop
rcll
sub
and
add
adc
fildll
lock
add
fsubrl
je
repnz
ffree
jo
add
fldl
fstpl
add
jle
jb
dec
fldl
inc
fstpl
push
fstl
and
fldl
add
pusha
add
fstp
mov
xchg
push
jp
mov
dec
sub
or
sbb
stos
add
fcmove
fcmovu
fisubrl
mov
lcall
pop
fisubrl
fidivrl
fiaddl
ljmp
fldt
fisttpl
lcall
pop
sub
cmp
or
ljmp
mov
mov
lcall
fsubs
cmp
add
fcomps
fcomps
fcoms
fadds
adc
add
ljmp
fsqrt
fdecstp
fldenv
repnz
fxch
shrb
ret
fcompp
fcmovu
flds
scas
fldenv
mov
mov
flds
sahf
fstps
frndint
outsb
fldenv
das
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
xchg
or
push
sahf
add
mov
or
int
aam
xchg
and
xor
and
push
add
fcomip
and
add
push
add
add
push
add
repnz
ljmp
mov
add
addr16
or
fcmovbe
push
xchg
push
add
lret
xchg
jp
add
cmp
cmp
ja
shrl
add
mov
add
cmp
mov
cmc
cmc
xorl
sub
mov
dec
sti
cmp
mov
fldcw
sbb
xchg
inc
xchg
add
pusha
rolb
and
dec
add
adc
in
mov
add
push
jecxz
hlt
pop
xchg
xchg
mov
fwait
push
gs
add
dec
or
add
push
test
dec
xchg
cmp
add
pop
mov
ja
aam
add
pop
adc
xor
outsl
mov
add
std
pop
cmp
fnsave
js
je
fwait
leave
add
fdivr
pop
and
add
jmp
outsb
pop
or
pop
or
repz
test
cli
jne
fistl
pop
jb
jle
jne
nop
sbb
cmp
add
sub
pop
div
testl
dec
mov
nop
add
xchg
xchg
or
pop
sti
add
add
js
sub
int
bound
repnz
add
add
cld
scas
sbb
cli
and
ds
movsl
aas
add
aaa
je
popa
xchg
test
scas
push
daa
js
jae
in
sbb
repnz
pop
sub
add
and
cmp
add
jmp
mov
add
jp
test
xchg
xchg
mov
cmp
jns
in
pop
add
fsts
dec
imul
ja
dec
shl
lods
push
clc
adc
pushf
sbb
inc
push
stc
xor
leave
or
lods
pop
das
repnz
mov
in
sbb
jge
das
icebp
flds
dec
cmp
add
xchg
les
sarl
es
popa
add
xor
and
jle
pop
mov
pop
and
stos
add
cmp
add
bound
jle
inc
add
push
cmp
add
loop
lock
inc
adc
cs
pop
and
imul
int3
fistpll
sub
das
in
mov
scas
popa
inc
jecxz
xchg
popa
mov
out
jge
popl
sbb
cmp
sbb
cmpb
es
cmp
and
fs
scas
in
xchg
adc
movsl
mov
aas
les
and
sub
xor
sbb
outsl
fwait
jle
pushf
lods
movb
mov
lds
adc
pop
inc
cli
aaa
inc
cmp
dec
call
js
imul
test
jb
sbbb
cmpsb
cli
sbb
clc
or
pop
je
mov
jnp
pop
mov
ljmp
mov
aas
xor
jns
dec
and
sbb
cltd
fidivrl
jle
out
mov
rcr
fucomp
dec
andl
daa
adc
pusha
inc
lods
xchg
inc
lcall
adc
xor
jne
xor
pop
push
jno
mov
adc
inc
hlt
push
aam
adc
xor
nop
jnp
jle
fdiv
fdivrl
negb
sbb
sbb
pop
clc
jle
jl
in
sbb
adc
xchg
fwait
xchg
and
sub
sahf
mov
inc
insl
xor
rolb
fstps
inc
mov
sbb
repnz
sbb
int
les
jp
imul
push
shll
pop
jmp
loopne
xchg
pop
inc
push
push
jnp
aam
dec
dec
or
xchg
mov
pop
lods
in
sbb
jg
int
movsb
test
sbb
jb
repnz
scas
mov
and
mov
sbb
push
adc
repz
popa
xchg
sahf
rcrl
imul
add
add
add
add
add
add
add
add
add
add
add
nop
dec
add
nop
dec
add
add
add
nop
dec
add
add
add
nop
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
jo
je
imul
outsl
insb
gs
cs
insb
add
jae
je
insb
jae
fs
insb
add
popa
jb
fs
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
insl
insl
outsl
outsb
push
jb
jo
jb
jns
push
dec
push
add
dec
insb
gs
dec
inc
push
push
outsl
jne
arpl
add
push
gs
je
insb
push
je
jo
gs
imul
je
jo
outsb
inc
popa
jb
dec
popa
insl
gs
