push
mov
sub
movl
movl
lea
mov
mov
mov
or
sub
mov
push
call
push
call
call
mov
cmp
jl
movl
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
add
mov
movl
mov
or
imul
imul
mov
movl
mov
sub
imul
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
mov
and
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
cmpl
je
mov
sub
imul
mov
call
push
call
jmp
movl
mov
or
imul
mov
cmpl
jl
mov
imul
imul
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
push
mov
push
call
add
cmpl
jne
movl
lea
mov
mov
mov
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
or
sub
mov
jmp
cmpl
jne
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
imul
imul
mov
jmp
movl
lea
mov
mov
mov
imul
mov
mov
add
mov
cltd
idiv
mov
mov
or
imul
add
mov
push
push
push
push
push
call
cmp
jne
movl
mov
add
mov
sub
mov
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
call
push
call
movl
movl
mov
sub
add
mov
push
call
movl
movl
mov
or
add
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
sub
mov
movl
movl
mov
and
sub
add
mov
movl
mov
or
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
imul
mov
lea
push
call
push
call
jmp
lea
mov
movl
mov
mov
and
imul
mov
sub
mov
movl
lea
mov
mov
mov
sub
imul
mov
lea
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
push
mov
sub
call
movl
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
jmp
movl
movl
movl
mov
or
sub
imul
mov
jmp
movl
mov
cmp
jg
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
sub
mov
movl
mov
sub
mov
jmp
cmpl
jl
movl
lea
mov
mov
mov
imul
mov
movl
lea
mov
mov
mov
imul
add
mov
movl
mov
or
mov
sub
mov
lea
push
call
push
call
mov
add
mov
movl
lea
mov
mov
mov
add
mov
cmpl
jg
lea
mov
movl
mov
add
mov
cltd
idiv
add
mov
mov
add
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
add
mov
mov
add
mov
cltd
idiv
mov
lea
push
call
push
call
jmp
mov
pop
ret
int3
int3
push
mov
sub
movl
cmpl
jg
movl
movl
mov
or
mov
sub
mov
lea
push
call
push
call
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
imul
imul
mov
jmp
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
movl
lea
mov
mov
mov
imul
mov
movl
lea
mov
mov
mov
imul
imul
mov
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
lea
mov
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
push
mov
sub
call
movl
movl
mov
and
add
imul
mov
mov
add
mov
movl
mov
sub
mov
sub
mov
movl
lea
mov
mov
and
mov
sub
add
mov
movl
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
and
mov
and
sub
mov
sub
mov
movl
cmpl
jne
call
jmp
movl
movl
mov
or
sub
mov
lea
mov
mov
mov
or
mov
sub
imul
mov
movl
mov
or
mov
sub
mov
sub
mov
push
call
movl
lea
mov
mov
mov
imul
mov
cmpl
jg
mov
sub
add
mov
lea
mov
mov
add
mov
cltd
idiv
imul
mov
jmp
lea
push
call
push
call
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
and
mov
imul
imul
mov
push
call
movl
lea
mov
mov
mov
or
imul
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
mov
and
add
add
mov
call
jmp
call
lea
mov
mov
mov
add
mov
sub
mov
jmp
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
jmp
movl
lea
mov
mov
mov
or
imul
mov
movl
lea
mov
mov
and
mov
add
mov
mov
or
imul
mov
mov
add
mov
cltd
idiv
add
mov
lea
push
call
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
and
mov
mov
or
add
mov
movl
lea
mov
mov
mov
sub
mov
sub
mov
movl
mov
mov
cmpl
jg
call
lea
mov
mov
mov
add
mov
lea
push
call
push
call
movl
mov
or
imul
add
mov
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
mov
or
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
imul
mov
cmpl
jl
call
jmp
cmpl
jl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
mov
and
add
imul
mov
mov
push
mov
push
mov
push
call
add
push
call
mov
movl
movl
mov
imul
mov
sub
mov
call
movl
cmpl
jg
movl
cmpl
jl
mov
or
mov
sub
imul
mov
mov
push
mov
push
call
add
push
mov
push
call
mov
movl
cmpl
jne
mov
and
imul
add
mov
jmp
movl
movl
mov
cmp
je
movl
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
or
mov
mov
sub
mov
sub
mov
cmpl
je
lea
mov
lea
mov
mov
mov
mov
add
add
mov
lea
mov
lea
mov
mov
mov
mov
add
mov
push
call
jmp
lea
mov
mov
mov
and
imul
mov
lea
mov
mov
mov
or
mov
sub
mov
push
push
push
push
call
mov
movl
mov
or
imul
mov
movl
lea
mov
mov
mov
add
mov
sub
mov
cmpl
jl
lea
push
call
push
call
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
mov
mov
mov
mov
movl
movl
mov
imul
mov
sub
mov
lea
mov
mov
mov
add
add
mov
mov
xor
mov
movl
movl
mov
imul
imul
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movl
push
mov
push
mov
push
call
add
push
call
mov
movl
lea
mov
mov
mov
imul
imul
mov
mov
push
push
call
add
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
movl
movl
mov
imul
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
or
mov
or
sub
add
mov
movl
lea
mov
mov
mov
add
mov
movl
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
jmp
mov
or
mov
mov
sub
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
or
sub
mov
movl
mov
sub
mov
movl
movl
movl
mov
and
mov
and
imul
mov
lea
push
call
push
call
cmpl
jg
mov
add
mov
movl
lea
mov
mov
mov
or
mov
sub
imul
mov
call
jmp
movl
lea
mov
mov
and
mov
add
cltd
idiv
add
mov
lea
mov
mov
mov
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
mov
and
imul
mov
sub
mov
mov
or
add
mov
lea
mov
mov
and
mov
add
cltd
idiv
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
and
add
imul
mov
jmp
push
call
jmp
push
call
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
and
imul
imul
mov
movl
cmpl
jg
push
call
call
movl
cmpl
jne
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
add
mov
jmp
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
add
cltd
idiv
imul
mov
movl
lea
mov
mov
mov
imul
imul
mov
movl
mov
add
mov
cltd
idiv
add
mov
movl
movl
mov
or
imul
add
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
movl
mov
mov
or
mov
mov
sub
mov
lea
push
call
push
call
call
movl
movl
lea
mov
mov
mov
and
imul
add
mov
lea
mov
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
movl
lea
mov
mov
mov
or
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
call
movl
movl
movl
mov
or
mov
add
cltd
idiv
imul
mov
movl
movl
mov
cmp
jne
lea
push
call
push
call
mov
or
mov
add
cltd
idiv
mov
mov
or
mov
add
cltd
idiv
add
mov
movl
movl
mov
and
mov
and
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
imul
mov
movl
movl
mov
and
mov
add
cltd
idiv
imul
mov
cmpl
jl
cmpl
jg
call
call
movl
lea
mov
mov
mov
add
imul
mov
jmp
lea
push
call
push
call
movl
mov
imul
add
mov
jmp
movl
lea
mov
mov
mov
and
add
add
mov
movl
lea
mov
mov
mov
sub
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
call
call
lea
push
call
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
push
call
movl
jmp
mov
add
mov
cmpl
jge
call
movl
mov
add
mov
movl
movl
mov
imul
mov
jmp
jmp
lea
push
call
push
call
movl
lea
mov
mov
mov
imul
mov
movl
lea
mov
mov
mov
imul
mov
sub
mov
cmpl
jl
lea
push
call
push
call
movl
movl
lea
mov
mov
mov
sub
imul
mov
jmp
lea
push
call
push
call
movl
jmp
mov
add
mov
cmpl
jge
call
movl
mov
imul
mov
sub
mov
jmp
lea
mov
lea
mov
mov
mov
mov
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
add
mov
sub
mov
xor
je
movl
movl
lea
mov
mov
mov
add
mov
mov
or
add
mov
sub
mov
mov
add
mov
cltd
idiv
add
mov
push
call
movl
movl
mov
push
mov
push
call
add
movl
mov
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
jmp
call
movl
mov
imul
add
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
lea
push
call
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
movl
mov
imul
mov
jmp
push
call
mov
add
mov
movl
movl
mov
or
mov
add
cltd
idiv
mov
sub
mov
jmp
movl
cmpl
jne
call
movl
movl
movl
mov
and
imul
mov
sub
mov
movl
mov
add
mov
cltd
idiv
add
mov
jmp
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
add
mov
cmpl
jl
movl
mov
imul
add
mov
movl
mov
sub
add
mov
movl
mov
and
imul
mov
movl
mov
and
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
movl
mov
add
mov
cltd
idiv
add
mov
movl
lea
mov
mov
mov
and
imul
imul
mov
call
mov
add
imul
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
and
add
mov
movl
mov
add
mov
sub
mov
lea
push
call
push
call
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
cmp
jl
movl
mov
and
imul
mov
push
call
movl
movl
mov
add
mov
sub
mov
lea
mov
mov
mov
sub
mov
lea
push
call
push
call
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
cmpl
jg
movl
mov
imul
add
mov
lea
mov
lea
mov
mov
mov
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
movl
lea
mov
movl
mov
add
mov
cltd
idiv
mov
mov
sub
mov
cmpl
jg
call
push
call
jmp
mov
add
mov
movl
cmpl
jg
push
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
mov
jmp
movl
lea
mov
mov
mov
imul
mov
cmpl
jne
call
call
movl
mov
add
mov
cltd
idiv
mov
movl
movl
mov
add
imul
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
add
mov
call
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
pop
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
cmp
jne
orl
mov
mov
pop
pop
pop
leave
ret
mov
cmpw
jne
add
mov
mov
cmp
je
cmp
jne
cmpw
jne
add
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpw
jbe
add
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
int3
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
and
add
inc
add
inc
inc
add
push
inc
add
push
add
jl
add
xchg
inc
add
test
add
ret
add
inc
add
out
add
clc
inc
add
inc
inc
add
add
add
mov
inc
add
sub
add
insb
inc
add
jp
add
addb
mov
add
inc
add
fs
add
into
inc
add
fiadds
add
inc
add
incb
add
inc
add
add
add
ss
add
add
add
sbb
add
add
add
js
js
js
js
js
js
js
js
js
imul
gs
xor
cs
insb
add
add
push
imul
insb
insb
outsl
arpl
add
add
pop
dec
dec
inc
inc
pop
push
inc
push
push
push
pop
inc
dec
dec
push
dec
inc
push
inc
add
inc
push
and
push
and
and
add
jae
je
add
js
add
add
add
jo
add
add
add
popa
add
jo
insb
add
add
add
jmp
das
inc
add
add
add
add
add
add
add
add
inc
add
sub
add
inc
add
push
inc
add
js
add
rolb
add
inc
add
cmp
add
inc
add
xor
add
add
push
inc
add
push
add
jl
add
xchg
inc
add
test
add
ret
add
inc
add
out
add
clc
inc
add
inc
inc
add
add
add
mov
inc
add
sub
add
insb
inc
add
jp
add
addb
mov
add
inc
add
fs
add
into
inc
add
fiadds
add
inc
add
incb
add
inc
add
add
add
ss
add
add
add
sbb
add
add
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
je
dec
popa
outsb
fs
add
pop
add
je
jb
arpl
jae
gs
imul
jae
bound
addr16
jb
jae
outsb
je
filds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jb
arpl
jae
outsl
inc
outsl
jne
je
jb
add
or
inc
jne
jb
outsb
je
jb
arpl
jae
pop
add
je
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
push
imul
je
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
je
inc
gs
jb
jae
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
jo
gs
imul
gs
imul
inc
add
push
inc
push
push
push
inc
push
dec
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
addr16
popa
imul
add
add
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
imul
gs
je
jb
jne
dec
outsb
outsw
push
lds
test
mov
adc
pusha
mov
out
loope
in
adc
dec
ficoms
jb
lea
push
sbb
and
adc
jg
mov
jo
in
jno
lcall
inc
or
pop
test
pop
adc
lock
and
jmp
jg
sarb
inc
dec
insl
xchg
leave
fldenv
call
jb
cwtl
push
adc
int
cmp
ret
dec
sti
dec
adcl
addl
ljmp
and
xlat
mov
mov
outsb
push
in
mov
mov
out
test
push
out
mov
sbb
lret
arpl
aas
add
jp
loopne
jle
in
push
or
lock
push
adc
mov
pusha
leave
inc
movsb
inc
xchg
iret
xchg
jge
mov
cmp
call
nop
and
ljmp
jo
inc
arpl
out
jne
xchg
or
mov
les
and
sbb
inc
sbb
test
mov
mov
xchg
pop
lcall
pushf
imul
xlat
pop
xor
xor
or
mov
xchg
and
filds
inc
lret
cmp
sub
push
loop
mov
push
pusha
mov
and
mov
xchg
mov
xor
aam
icebp
fcomps
dec
aam
iret
insl
je
jb
pop
enter
insb
sbb
ljmp
sbb
rorb
jp
add
sub
add
xchg
xchg
ror
jecxz
outsb
addr16
sub
mov
cmp
scas
cmp
test
das
push
or
cld
or
inc
jo
jmp
or
mov
iret
sub
mov
xor
add
xchg
adc
cld
cmpsl
out
stos
jne
jo
daa
mov
out
xchg
mov
addb
mov
jle
push
gs
push
sub
mov
leave
test
into
imul
mov
sbb
imul
pop
fstl
icebp
subb
inc
into
mov
insb
test
clc
lds
mov
add
mov
ss
adc
mov
or
cmp
mov
mov
lcall
nop
ret
mov
dec
cmp
adc
loope
fisttpll
shlb
xorl
xchg
int
ret
jecxz
dec
jno
jno
push
adcl
sub
test
xchg
add
in
cmpsb
lcall
cmp
fwait
pop
jns
jp
push
gs
and
jg
ljmp
mov
sahf
negl
jle
out
push
es
rcll
shrb
repz
xchg
mov
and
add
xlat
insl
push
and
pop
roll
ds
inc
pop
push
dec
je
cmp
pushf
jl
lds
and
push
xchg
lods
adc
mov
sbb
jle
pushf
inc
and
push
rcrl
loopne
pop
mov
push
aam
fdivrs
addr16
xchg
adc
xor
lock
inc
pusha
imul
cmp
std
add
xor
xor
std
xchg
adc
push
adc
dec
sbb
testb
cmp
xor
out
mov
imulb
push
je
scas
push
pop
int
sub
cli
mov
insl
mov
jbe
or
ss
leave
xchg
lods
scas
test
cmpsb
mov
or
fisttps
mov
xchg
call
aad
fiaddl
lds
imul
aaa
fnstenv
mov
sub
lea
sbb
pop
into
add
add
lock
test
sbb
insb
mov
mov
push
in
outsb
cmpb
and
adc
and
jge
lahf
iret
test
inc
xor
inc
aam
lcall
out
lret
dec
imul
sbb
test
dec
xor
pop
lcall
jae
lcall
pop
mov
lods
mov
mov
imul
stos
into
xchg
gs
stos
imul
mov
xor
mov
shrb
fnsave
add
jl
movsl
shll
push
aad
lods
cltd
test
inc
idivb
notb
jae
inc
jp
loop
sbb
sub
or
or
xor
fwait
mov
ret
cmp
dec
loopne
push
loopne
aaa
int3
popa
xchg
inc
mov
jmp
fwait
stos
outsb
fisubrl
pop
add
orl
jle
rol
imul
icebp
call
push
mov
ss
out
pop
pushf
out
mov
loop
dec
dec
inc
pop
and
je
int3
rcrb
lret
sti
pop
lcall
cmc
loope
daa
xchg
pop
aaa
mov
sub
push
hlt
pop
fmuls
loope
sub
lcall
xor
mov
sub
ds
cmp
outsb
or
cmp
mov
dec
dec
sbb
ss
dec
leave
add
or
fs
or
add
scas
mov
adc
jae
mov
in
movl
mov
mov
shll
mov
xor
jecxz
fcmovne
and
fwait
rcll
aam
flds
ss
sahf
jl
cmp
popf
mov
fucom
mov
sbb
mov
enter
sbb
inc
das
mov
out
fwait
das
sbb
pop
mov
pop
lds
fimull
adc
leave
lea
fincstp
sahf
push
dec
movsb
aad
das
pop
ljmp
cwtl
js
sub
sarl
mov
je
push
scas
cli
push
outsb
push
ret
mov
popa
fwait
sbb
daa
jmp
ret
flds
sbbb
and
rcrl
cmp
cmpsb
lods
mov
rorb
mov
and
sbb
xchg
test
cmp
dec
dec
jno
in
ret
popl
sbbl
push
loopne
std
out
dec
push
jnp
dec
stc
mov
push
xchg
stc
xchg
ljmp
dec
shll
leave
andl
add
push
jle
clc
sbb
adc
xor
lahf
fs
jmp
cwtl
mov
pop
xlat
add
stos
imul
push
add
adc
dec
pop
dec
rorl
rcl
in
jbe
lcall
cmp
fcomi
inc
sub
push
std
sub
call
jno
in
fwait
jns
dec
cs
arpl
pushf
mov
scas
fnstenv
inc
movsb
sarl
mov
inc
shll
mov
test
xor
or
cmpsl
ds
jno
cmc
aaa
lock
lods
aaa
cmpsl
popa
xchg
les
test
and
add
or
jns
mov
lret
mov
int
imul
jecxz
stc
test
aaa
pushf
mov
add
xchg
loop
xchg
sub
scas
jp
sub
out
cli
push
push
or
lea
mov
xchg
push
push
and
bound
std
aam
or
adc
cltd
xchg
imul
ss
std
sti
inc
lret
subl
test
inc
gs
adc
xor
outsb
cmpsl
lea
repz
out
enter
sbb
sbb
sbb
pop
adc
jns
mov
fwait
int3
jp
aam
or
cmp
xor
pop
call
int
rcr
inc
pop
xor
fwait
cld
cwtl
clc
in
mov
loope
ljmp
xor
pop
mov
sbb
jns
push
mov
mov
lea
xchg
aad
sti
jo
sbb
loopne
clc
les
sub
push
insl
imul
clc
jns
cmp
repnz
push
mov
cs
cs
loop
stc
cmc
test
sub
mov
sub
mov
mov
decl
pop
movsl
pop
repnz
test
cmp
sarl
pop
or
movsb
push
fnstcw
fdivl
rcrb
jne
sub
sbb
jecxz
sbb
mov
push
stc
dec
repnz
push
sub
pop
lcall
push
dec
clc
movsb
sbb
jo
lahf
stc
sahf
pop
push
mov
jl
sbb
add
shrl
jle
mov
imul
push
cld
lcall
clc
cmp
ljmp
jmp
popf
bound
xchg
pop
out
pop
insb
jmp
and
adc
ljmp
mov
pop
shl
enter
mov
lret
push
adc
xor
xchg
pop
out
insb
jge
add
cmp
mov
xchg
out
leave
dec
lret
xchg
adc
adc
lods
dec
pop
stos
lcall
cmp
test
jns
clc
out
adcl
ficomps
mov
dec
and
jl
dec
daa
jbe
into
repnz
xor
mov
inc
jle
ret
xchg
dec
ds
les
mov
cwtl
lods
mov
insb
xchg
ret
mov
stos
push
ds
xlat
inc
adc
or
sbbb
jbe
cmp
repz
inc
ljmp
adc
cmp
mov
les
sub
mov
leave
mov
or
pusha
adc
and
popf
mov
sbb
push
cmp
shll
mov
sbb
lock
mov
out
clc
xchg
imul
iret
pop
rorb
or
inc
in
faddl
xchg
cwtl
pop
pop
sub
fbstp
pop
sbb
ss
push
test
inc
and
sbbl
lret
lcall
ss
test
xor
mov
jmp
bound
movb
lods
mov
mov
inc
into
popa
arpl
jecxz
cmp
mov
aam
cld
mul
cwtl
dec
mov
ror
inc
mov
xchg
je
ja
sub
mov
sub
cmp
into
ds
mov
addl
lds
loop
sub
cmp
repnz
cmc
push
jne
imul
sub
jne
stos
aad
fdivrs
xchg
mov
stos
or
mov
ss
cmp
icebp
fstpt
lds
or
fldenv
fiaddl
mov
imul
mov
sbb
mov
add
testb
stos
add
cmp
xor
cmpsl
jp
mov
jmp
and
pop
add
inc
pushf
fdivrs
pop
cmp
adc
outsl
mov
jbe
pusha
jbe
jns
and
mov
and
jge
lret
mov
shll
push
xchg
fcomip
popa
jbe
dec
outsb
push
sbb
cmp
fldt
xlat
call
stos
addl
imul
rcr
xchg
lods
mov
jns
adc
mov
sub
xor
popf
mov
aas
fcmovu
sbb
clc
rclb
insb
inc
and
rorl
inc
inc
xchg
sbb
insl
lret
aam
mov
leave
and
or
or
xchg
repnz
lea
push
fstps
sbb
es
push
outsb
lcall
mov
cmp
push
stos
pop
xchg
xor
lret
sbb
cmp
call
test
inc
hlt
js
mov
shrb
ss
divb
xchg
mov
es
jns
cmp
leave
cmp
inc
mov
mov
sbb
inc
jno
sub
mov
xchg
push
add
ds
sub
mov
les
jo
add
clc
mov
xlat
notb
in
dec
aad
arpl
cmp
clc
into
xchg
mov
or
lret
mov
push
pop
push
push
sbb
clc
or
dec
aaa
repnz
ljmp
mov
mov
repnz
enter
mov
xlat
pop
cld
sti
pop
insl
cltd
stc
fimuls
shufps
mov
test
dec
popa
mov
inc
lahf
push
movsl
mov
xchg
pop
popfw
xchg
adc
lret
loop
or
inc
mov
cmp
jbe
clc
sar
test
adc
mov
and
shrl
les
push
cmp
mov
data16
sub
lret
pop
fimuls
mov
dec
push
sub
xor
shrl
aad
sbb
fwait
int
les
mov
xlat
mov
in
push
jnp
stos
jp
push
add
pop
add
push
jecxz
es
std
aaa
jne
aas
sbb
inc
mov
outsb
cli
pop
sbb
pop
cltd
movsb
lods
leave
ret
push
fscale
fcomps
mov
jl
jno
outsb
pushf
dec
jns
mov
dec
aaa
mov
in
mov
xchg
push
jl
pop
mul
mov
insl
decb
xchg
daa
pop
mov
mov
push
dec
pushf
les
pop
push
cmpb
inc
enter
aad
rolb
push
in
adc
or
cld
into
xchg
ja
movsb
push
adc
xchg
pop
xchg
stos
std
and
or
pop
mov
xchg
mov
xchg
mov
out
lods
sub
pop
sbb
inc
or
leave
shl
jmp
adc
stos
test
adc
mov
int3
xchg
test
jge
sbb
jmp
sbb
cltd
imul
mov
sbb
lea
xchg
dec
fdivrl
cmp
mov
adc
dec
cld
mov
sub
add
icebp
movsb
iret
xor
jle
scas
cmc
push
adc
aam
sub
or
sub
daa
pop
int
lret
lahf
insl
push
sub
rcr
dec
or
sub
sbb
pop
mov
int
mov
add
xor
or
loopne
mov
push
mov
lods
popf
and
in
sti
mov
sti
hlt
sbb
jge
fidivrs
mov
mov
add
sahf
in
push
aad
xor
imul
xchg
ljmp
add
sub
leave
inc
ja
test
push
mov
lea
xchg
xor
push
test
push
aaa
mov
mov
gs
iret
iret
mov
mov
sub
loopne
push
loop
or
inc
sbb
lret
out
addb
sbb
or
dec
sub
jnp
mov
lret
add
mov
add
mov
or
jne
loope
les
lret
std
es
push
lea
lahf
sbb
jle
inc
sarl
jge
pop
push
inc
int
movsb
sub
and
inc
xchg
push
mov
jge
add
mov
push
lret
cmc
test
pop
pop
push
mov
add
movsl
xchg
scas
bound
mov
or
addr16
repnz
inc
and
sahf
movsb
mov
sub
data16
shll
popf
dec
fidivs
sub
sarl
je
inc
stos
insb
aam
loope
sbb
mov
stos
or
loope
addr16
outsb
pop
pusha
call
sub
or
mov
pop
fwait
pop
xor
fxch
mov
mov
and
fsubp
push
sti
sbb
add
push
xchg
dec
mov
dec
xchg
cmp
jmp
inc
inc
or
and
scas
insb
cmpsl
enter
lahf
push
ljmp
xchg
xchg
mov
pop
mov
decb
insl
movsb
jmp
rorb
jecxz
clc
repnz
pop
pop
pop
pushf
cltd
add
and
mov
dec
pop
dec
fistpl
push
push
shrb
mov
cltd
sub
sub
or
push
insb
push
inc
mov
jb
pushf
ja
jb
sbb
fucom
push
sub
xor
imul
lods
incl
in
call
fsubrs
insb
pop
sbb
xchg
jno
lahf
ljmp
mov
cli
push
les
mov
pusha
arpl
sbb
rcll
outsb
andl
std
outsb
push
sbbb
repz
and
pop
sbb
jg
jo
stos
mov
aam
pop
stos
push
dec
inc
movsb
das
ds
jo
lret
shl
gs
xor
jmp
adc
iret
mov
sub
adc
inc
sbb
nop
or
pop
sbb
mov
add
push
loope
icebp
je
arpl
mov
mov
popa
jg
pop
fdivrs
cs
mov
sub
es
pop
andb
mov
outsl
jb
outsl
jmp
push
inc
lret
sub
nop
jmp
xchg
into
mov
lock
push
xchg
cmp
cwtl
xchg
lods
ret
and
mov
shl
imul
dec
test
es
cmp
add
enter
xchg
sub
les
jo
jns
mov
mov
mov
push
insl
fsubrl
mov
sbb
movl
jo
mov
add
andb
jecxz
out
stc
jne
add
inc
pusha
adc
frstor
imul
mov
sub
test
insb
jmp
jae
shll
or
outsb
fisttpll
lret
in
jns
push
vsubss
fbld
mov
cld
mov
js
stos
xchg
repz
outsb
mov
mov
mov
adc
leave
iret
or
repz
scas
sub
lret
out
sbb
mov
loop
ret
pop
std
mov
leave
mov
aas
pop
add
fsubr
push
hlt
and
out
mov
push
out
mov
xor
sarb
iret
ret
lcall
ja
push
rclb
das
mov
adc
sti
sbb
fnstenv
in
and
add
mull
xchg
push
scas
pop
pop
mov
sub
sub
and
and
push
jl
mov
jmp
add
enter
outsb
sub
pop
adc
cwtl
inc
push
jae
sbb
inc
into
xchg
and
gs
lcall
pop
ss
push
add
dec
sbb
jo
shlb
jnp
adc
adc
test
mov
repnz
inc
int3
adcb
lahf
loopne
movsl
jmp
out
lret
aam
sbb
out
lea
jo
and
imul
ja
mov
push
icebp
pop
push
pop
mov
popf
mov
xor
jns
ljmp
add
and
mov
sub
daa
xor
ljmp
inc
xor
mov
pop
stos
pop
into
cmpsb
arpl
jp
xchg
je
xchg
cmp
jecxz
js
cmp
xchg
jp
dec
jle
fsubr
sarb
lods
mov
filds
hlt
mov
mov
inc
aaa
push
push
xlat
jg
lcall
sbb
adc
mov
push
xchg
inc
pushf
xchg
pop
push
bound
fidivs
inc
loope
stos
insb
imul
lods
mov
jecxz
inc
testl
dec
pushf
aaa
pop
or
and
out
pop
dec
jp
push
jb
mov
adc
jnp
lea
in
push
dec
lret
xor
sti
xor
sti
nop
fsubrl
add
loop
jbe
imul
push
jle
push
out
aaa
fcompl
into
pop
mov
add
test
sub
lock
sub
aas
xchg
int3
fadds
shll
pop
dec
je
mov
xchg
inc
call
out
fsubs
roll
fnstsw
ja
enter
inc
jo
loopne
jno
xchg
adc
fists
in
js
and
sub
and
shrl
jo
push
addr16
mov
cmpsb
mov
mov
in
xor
adc
ljmp
clc
mov
and
hlt
xchg
xchg
ljmp
fisubl
into
lods
or
xor
add
xor
mov
loop
imul
pop
mov
pop
inc
sbb
inc
fsubp
cmp
fisubrs
and
leave
mov
add
enter
sbb
and
push
sbb
xor
push
imul
in
push
xor
mov
mov
lcall
adcb
or
leave
jne
dec
sbb
mov
or
iret
xor
xchg
call
dec
imul
mov
push
mov
or
ss
out
and
outsl
push
das
ss
lock
dec
cli
shll
not
and
lret
and
cld
ficoml
sbb
pop
fiaddl
mov
adc
leave
nop
or
jmp
addb
sti
cld
xor
xor
sbb
int
lcall
movsb
push
lods
and
fidivs
fsubs
sbb
ret
scas
lahf
mov
push
addr16
daa
pop
stos
lock
shrl
xchg
pop
outsl
adc
adc
cmp
or
cmp
test
lret
cmp
adc
xchg
jns
push
add
sbb
dec
lcall
mov
pop
dec
hlt
xchg
mov
fiaddl
jnp
addr16
sub
xchg
lea
jg
cmc
jle
cmp
repz
es
add
xchg
push
pop
adc
aam
jmp
cld
lea
xchg
fdivr
les
xor
lds
repz
negb
xor
jge
pop
xor
mov
pushf
mov
adcl
loope
sahf
mov
jle
std
test
xor
cmpsl
jecxz
push
test
imul
or
rcll
rol
lahf
inc
or
lock
jb
fldt
jno
adc
cmpl
jno
dec
inc
insl
and
xor
lret
fistl
add
insb
enter
xchg
and
fsubl
leave
xchg
mov
xchg
sarb
sbbl
popf
mov
adc
add
pop
hlt
adc
addl
xor
sbb
push
in
loopne
insb
fdivl
xchg
insb
mov
fisubs
push
test
rorb
mov
dec
dec
add
in
clc
xchg
out
stos
pop
arpl
rcrl
fisubs
pop
sti
and
cmpsl
push
sbb
add
adc
out
movsl
test
int3
dec
iret
sti
and
mov
idivl
adc
jne
sub
stos
stc
mov
or
or
mov
jae
out
jb
pop
mov
negb
xlat
mov
push
add
cs
mov
mov
nop
test
mov
mov
daa
idivl
sti
sbb
push
push
mov
adc
in
sbb
arpl
mov
mov
loope,pt
inc
jl
cmp
push
push
test
fistl
in
movsb
jne
or
push
pop
scas
jge
jle
test
cmc
or
mov
lock
popf
idiv
out
mov
or
mov
push
out
cld
push
add
outsb
inc
dec
leave
pop
jns
mov
flds
adc
bound
mov
jne
xor
movb
cmp
mov
xor
inc
js
out
jo
int3
mov
lret
cmpsb
mov
fwait
xchg
cmp
pop
pop
mov
iret
and
int
jo
test
cwtl
cmc
mov
in
and
mov
subb
sub
pop
push
pop
mov
mov
and
mov
insl
lds
inc
loope
leave
jne
mov
leave
adc
and
pop
xchg
hlt
jns
popf
dec
gs
movsl
jge
inc
mov
sub
idivl
xchg
shrl
clc
jp
das
xorb
mov
and
scas
push
add
push
push
rcrb
lods
xor
push
push
add
lcall
mov
sub
mov
pop
pop
aas
hlt
imul
mov
mov
pop
stc
dec
mov
arpl
sub
xor
xor
add
cmp
lret
movsb
mov
pop
push
add
xchg
repnz
sub
lock
nop
mov
int
addl
and
jecxz
mov
mov
sub
dec
out
out
lret
adc
sbb
popf
sahf
fistl
mov
pusha
dec
xor
mov
loopne
shl
cmp
shrl
pop
adcl
jmp
loop
push
sbb
and
sti
xchg
mov
pop
and
ret
shl
int3
mov
jge
xchg
lea
jg
sub
clc
lea
mov
jge
dec
xor
sub
cmp
xor
xor
sub
sbb
insb
jmp
and
aam
jns
jbe
enter
sub
das
cli
mov
imul
shl
jle
cmpsl
push
mov
pop
pop
out
dec
ds
add
das
mov
sub
adc
pop
andb
adc
xchg
popf
movlps
pop
es
movsl
pusha
insl
shrb
dec
fbstp
push
cs
xor
jbe
fidivrs
push
push
push
fstps
inc
lret
imul
lret
and
push
push
mov
jno
mov
push
ret
leave
loopne
push
jne
imul
mov
xchg
dec
cmp
mov
dec
or
add
test
add
mov
push
cmp
insb
jp
adcb
sbb
cwtl
hlt
dec
cli
jmp
xlat
inc
jp
enter
ret
outsb
jge
ss
js
xor
in
mov
lret
jb
add
sub
sbb
lahf
in
cmp
push
ljmp
mov
xor
notb
mov
mov
xchg
xor
mov
repz
lea
fs
dec
sbb
and
aam
movsb
jmp
mov
jecxz
scas
jo
inc
mov
mov
dec
into
push
daa
mov
in
mov
stc
lcall
fisttps
pop
gs
jb
add
pop
or
sbb
out
xchg
movsb
out
shl
jae
xchg
movsl
sub
mov
lret
into
fcompl
ljmp
inc
mov
bound
test
inc
and
or
int3
pop
ret
into
push
mov
outsl
mov
rolb
sbb
sbb
inc
orl
cwtl
xchg
pop
cmp
scas
dec
sub
lcall
push
sub
pop
sub
pop
xor
push
cmp
pop
lret
icebp
in
mov
pop
dec
shl
int
pop
cmp
mov
mov
cmp
mov
sbb
xchg
bound
mov
sbb
iret
mov
lds
clc
imul
mov
in
pusha
inc
mov
push
sbb
cmp
mov
ficoms
mov
or
data16
sbb
jle
cmp
mov
jmp
lret
insl
cmp
adc
inc
mov
push
mov
xor
cltd
sahf
jmp
repnz
xor
sbb
xor
and
mov
jmp
cs
or
loopne
push
jno
adc
into
fdivl
movsl
cmp
inc
mov
and
mov
add
pop
pushf
or
mov
jbe
cmp
movsl
repnz
mov
cmp
cltd
stc
cmp
imul
lahf
inc
mov
push
sbb
mov
rolb
shll
xchg
mov
push
cmc
test
fwait
sub
xchg
clc
add
add
fisttpll
jecxz
js
mov
repz
and
jmp
push
test
imul
loope
mov
inc
aaa
push
sub
jp
cmc
repnz
cmp
or
rcl
mov
ja
insb
test
jnp
push
ret
enter
addr16
scas
inc
jmp
sbbl
mov
adc
mov
adc
in
roll
mulb
pop
loope
mov
inc
imul
scas
inc
adc
sub
adc
pop
cld
inc
fs
in
xor
adc
mov
jge
addr16
jo
imul
push
ja
imul
clc
ds
mov
data16
sub
es
lret
mov
fcomi
mov
push
in
in
cltd
fldt
dec
push
jno
mov
mov
or
fldl
negl
mov
jno
cmp
jno
push
js
pop
push
push
xchg
cwtl
daa
repnz
xor
push
pop
fmul
xor
cmp
add
movsl
jg
jmp
iret
cmp
sbb
adc
test
add
fidivrl
or
nop
push
mov
add
add
int3
mov
enter
cmp
pop
cmp
in
inc
xor
mov
and
add
loop
sub
pop
adc
cwtl
pusha
xchg
or
pop
pop
stos
mov
in
clc
out
and
mov
pop
cltd
mov
cmc
adc
ds
jp
add
sub
adc
iret
stc
mov
out
or
fldl
mov
out
push
xor
or
sbb
nop
loopne
cmp
dec
and
xor
pop
mov
jmp
ficompl
dec
jno,pn
push
popf
nop
add
jge
aas
clc
add
cmp
aas
cld
gs
sbb
inc
inc
add
or
aad
gs
xchg
adc
fisttpll
pop
jg
or
outsb
and
fs
add
into
mov
inc
jbe
xrelease
popa
les
and
xor
ficoml
jns
pop
shll
fstps
push
rcrl
out
jns
xchg
and
mov
mov
sbb
in
testl
jne
lcall
jbe
fldenv
pop
int
sub
imulb
lahf
aam
test
pop
insb
lahf
cwtl
out
mov
lret
adc
sub
lahf
pop
push
or
notb
add
stos
mov
adc
mov
daa
cltd
xchg
cmp
jno
sub
or
push
shld
dec
inc
femms
jns
xchg
icebp
scas
cli
mov
rcll
inc
pop
dec
jp
sbb
mov
mov
and
push
shlb
clc
pop
adc
clc
clc
cmc
outsl
insl
in
cli
xor
shll
aam
in
xchg
sub
mov
jns
leave
dec
inc
shl
cmp
or
in
int3
leave
mov
and
add
shl
std
dec
daa
jae
adc
xor
pop
push
outsb
stos
cld
loop
lahf
and
dec
xor
mov
sbb
mov
lahf
push
outsb
mov
pop
out
mov
pop
lea
pop
pop
cmp
scas
add
pop
xchg
int
push
cmp
stc
dec
add
sub
add
cmpsl
lahf
loop
jl
xor
rcrb
aam
enter
lds
mov
pushf
insb
sub
dec
jmp
repnz
arpl
insl
in
xor
add
enter
sub
mov
add
cmp
sti
mov
mov
mov
sbb
aas
pop
sbb
enter
mov
adc
mov
fildll
fs
dec
mov
ret
and
pop
xchg
mov
xchg
cmp
icebp
inc
push
pop
xchg
or
mov
jb
hlt
mov
push
sbb
push
push
aas
sti
dec
jle
pop
xlat
push
aaa
push
pop
out
inc
pop
xchg
push
ret
add
sub
std
iret
pop
clc
pop
cwtl
dec
call
icebp
mov
sar
loopne
aam
pop
push
dec
sub
es
cli
cmp
fisubrs
andb
lahf
out
test
cwtl
fstpl
fcoml
dec
jns
add
mov
inc
stos
out
scas
xlat
push
jb
cli
push
cmp
inc
lods
lahf
cmp
jo
jb
sar
jo
jns
lcall
mov
cltd
subb
dec
mov
push
loop
lret
icebp
loope
mov
cmp
mov
cmp
lds
bnd
lods
outsl
mov
inc
adc
add
negb
adc
pop
mov
outsb
cld
adc
lret
inc
jp
pop
ss
aam
mov
cmp
dec
mov
xor
sbb
xchg
mov
lea
pop
or
mov
sub
outsl
mov
lods
add
pushfw
sbb
lods
sahf
lret
outsb
mov
or
add
stc
test
aaa
scas
sub
push
mov
pusha
and
in
ss
mov
loope
daa
add
stc
xor
fistpll
xchg
insb
xchg
stc
pop
lcall
sub
mov
push
sbb
fdivs
out
rol
pop
cs
jns
adc
cld
pushf
ret
push
mov
insb
icebp
nop
pop
js
cmc
lcall
jmp
mov
dec
lea
and
mov
cmp
inc
jmp
dec
mov
pop
push
mov
cwtl
bound
nop
xchg
cwtl
push
testb
pop
mov
repz
jl
fisubs
ret
jbe
jae
les
add
roll
aas
aad
bound
jg
jb
add
movsb
xchg
call
mov
scas
enter
test
mov
jb
pop
xor
xor
ret
cvtdq2ps
add
out
lods
mov
xlat
js
jb
add
and
cmp
adc
cwtl
add
push
clc
js
or
popl
jo
mov
xchg
pop
cwtd
scas
push
jmp
sahf
pop
fwait
cmpsb
nop
bound
xor
jmp
dec
adc
insb
notb
movsb
jmp
xchg
dec
cltd
push
xor
loopne
push
shrb
ret
or
inc
mov
sub
mov
gs
aaa
aaa
or
cmc
or
xchg
cmp
push
and
cmpsl
scas
cmpsl
adc
xchg
inc
ljmp
or
or
push
jnp
lcall
or
pop
lret
sub
cwtl
jle
xchg
mov
call
test
dec
lret
fsts
ljmp
test
xchg
sarl
sub
push
dec
sbbb
mull
add
fiaddl
adc
ss
int
out
sbb
sbb
sub
adc
movsb
inc
lods
or
add
test
cmp
popf
fstl
stc
js
add
inc
sub
aas
aad
adc
xor
push
sbb
aaa
sbb
adc
sbb
jns
popf
call
mov
jae
popa
fdivrl
jnp
pop
testl
clc
fisubl
hlt
xor
or
movsl
cmp
cmp
xor
mov
rcrl
sahf
mov
jns
fisttpl
xor
jae
adc
and
hlt
out
sub
push
data16
jle
test
aas
mull
add
mov
mov
ljmp
mov
cltd
data16
adc
dec
cmpb
dec
sbb
aam
and
mov
pop
xchg
and
mov
xchg
and
mov
lods
test
adc
adc
and
xchg
lds
xlat
xor
stc
xchg
add
stc
pop
jge
push
xchg
stos
push
lods
inc
insl
std
push
adc
bound
jmp
inc
inc
fistpl
icebp
inc
notb
insl
call
test
and
add
mov
xor
pop
mov
repnz
arpl
test
test
xlat
push
add
mov
mov
fwait
int
cmp
sbb
mov
pop
dec
dec
fistpll
jb
out
dec
jmp
and
daa
sahf
movsb
ret
and
daa
sbb
popa
add
js
dec
mov
bound
fwait
push
push
movsl
mov
in
or
iret
dec
fcoms
jp
arpl
outsb
cmp
push
push
rclb
pop
ljmp
cmpsb
pop
clc
pop
dec
daa
mov
cwtl
adc
push
lret
xchg
insb
and
dec
cmpsb
aam
js
xchg
es
dec
lods
mov
inc
repnz
cmpl
aam
xchg
ja
ja
arpl
jo
pop
cwtl
imul
push
xchg
lods
lret
nopl
in
pop
cmp
and
add
dec
ffreep
mov
out
lret
sbb
out
add
xor
jecxz
dec
cmpsb
test
enter
lods
jae
test
fnstcw
jnp
jae
in
pop
fs
movsl
xor
test
xchg
push
sub
cltd
insl
jnp
pusha
jnp
mov
and
mov
rorb
cmp
int3
add
outsb
ss
xor
inc
mov
in
mov
cltd
aas
dec
shrb
xchg
pusha
shrb
sub
stc
ja
stc
gs
fucomp
add
sub
adc
inc
cli
sub
pop
jge
dec
push
push
xchg
incl
jle
sbb
lcall
mov
pop
rcrl
add
push
pop
mov
out
inc
bound
dec
gs
xor
mov
into
jae
stos
rcrb
in
mov
aam
sub
add
pop
mov
repz
inc
leave
je
and
andl
test
cmp
jmp
mov
inc
inc
inc
mov
dec
addl
dec
xchg
or
insl
jl
imull
mov
jno
cmp
or
movsl
notl
mov
push
sbbl
mov
push
mov
jl
add
push
inc
rep
xchg
pop
add
fcmovnu
push
iret
lods
xor
ss
stos
inc
je
loopne
dec
enter
xor
fwait
daa
jo
mov
mov
or
test
mov
inc
jae
sbb
cmc
mov
jp
aaa
js
pusha
divb
sbb
inc
pusha
cmp
and
iret
pop
test
push
stc
scas
lret
jmp
movsb
cwtl
add
and
xchg
lods
stos
xor
in
push
movsb
jns
cmp
ficomps
mov
scas
insb
sub
xchg
unpckhps
push
push
movups
addr16
mov
outsl
mov
sbb
or
sub
into
or
iret
mov
into
dec
aam
cmpsl
cmp
mov
pusha
cltd
lahf
addr16
movsb
sub
cmpsb
inc
in
in
fdivs
xlat
dec
roll
rolb
xchg
cmp
xchg
mov
imull
jns
roll
mov
nop
arpl
incb
jmp
mov
or
pop
outsb
inc
out
bound
sti
stos
mov
sbb
or
ds
mov
sbb
dec
scas
xor
test
mov
jns
lcall
sbb
jle
mov
mov
mov
cmp
mov
divl
push
adc
push
mov
cmp
adc
or
dec
mov
das
push
arpl
insb
sti
movb
push
xchg
and
mov
xor
addl
dec
cmp
sti
sub
push
xor
adcl
roll
loop
lds
push
push
jb
lret
into
cmp
inc
rclb
lods
cmpsl
lret
mov
adc
jnp
shlb
ror
cmp
sbb
inc
cmc
in
aas
dec
repz
inc
and
or
jmp
mov
sbb
fisubrl
int
add
call
push
iret
mov
fsubl
push
push
add
in
mov
pushf
sub
xchg
addr16
xchg
addr16
cli
push
cli
stos
push
cmpl
sbb
mov
stos
js
adc
rcl
outsl
mov
mov
mov
int
and
stc
xchg
push
cltd
mov
imul
xor
mov
dec
push
dec
pop
lods
hlt
and
jg
popf
add
xchg
inc
aas
es
imull
jle
or
rcl
stos
mov
fstpt
gs
fs
push
jo
stos
cmp
aaa
sub
lds
adc
insl
xchg
jbe
or
mov
iret
push
mov
daa
ret
inc
mov
jmp
inc
xorl
inc
jle
shrb
ds
xchg
adc
sbb
mov
enter
std
sbb
sbb
jne
int
fsubrs
dec
mov
push
sub
dec
jns
mov
inc
in
clc
loop
imull
or
subb
push
mov
das
ja
and
sub
or
cs
imul
nop
mov
lods
push
push
pop
dec
test
das
sbb
jns
jecxz
and
cmp
push
mov
dec
add
inc
push
aad
or
pop
cmp
xchg
in
cmp
call
xor
xchg
push
adc
mov
lea
jmp
outsl
outsb
popl
cwtl
mov
in
jnp
and
imul
mov
cmpsb
xor
sbb
cwtl
adc
arpl
cmp
mov
movsl
cltd
push
shl
cmpsl
jl
in
ds
mov
loop
cli
sub
push
and
outsb
xlat
pop
hlt
fcompl
pop
xchg
lea
fmull
xor
dec
and
cltd
cltd
loopne
xor
add
push
inc
dec
aaa
mov
scas
loope
xchg
mov
xchg
jbe
popl
cmp
cld
imul
ja
lcall
cs
cld
movsb
je
mov
jle
mov
scas
sahf
shll
lock
lahf
aam
pop
cmp
scas
mov
fwait
stos
jno
or
movsb
xchg
negl
sub
cltd
mov
icebp
in
gs
push
inc
into
hlt
loope
jl
add
ficoml
inc
test
lahf
adc
jns
inc
pop
or
js
xchg
outsl
pop
cwtl
js
in
push
ret
cmp
mov
outsb
pop
push
pop
mov
js
or
mov
mov
into
dec
imul
mov
call
iret
sbb
movb
xchg
dec
ret
sbb
and
xlat
or
and
jno
ret
push
loop
inc
movsb
adc
data16
cmp
cwtl
xor
lods
xor
pop
mov
mov
push
or
popf
adc
aad
cmp
aam
sub
adc
cmp
out
mov
call
xor
cmp
call
mov
imul
leave
lods
shrb
sbb
dec
ja
inc
insl
jae
call
imul
std
daa
adc
push
int
and
push
addl
aam
mov
popa
or
inc
inc
sbb
mov
jae
js
mov
out
loop
shll
aas
dec
hlt
clc
mov
subl
adc
adc
test
leave
inc
jno
adc
sbb
pop
insb
imul
ja
lret
fnstsw
sarl
mov
jo
scas
xchg
into
fmuls
inc
test
adc
insb
cmp
inc
std
jno
sbb
lahf
xlat
gs
bound
iret
in
push
xor
cwtl
ja
add
sbb
xchg
lock
lret
into
mov
stos
jge
lock
or
inc
mov
js
jmp
orl
and
test
imul
rol
push
xlat
inc
setle
je
sahf
inc
in
adc
lea
pop
xor
jle
mov
shrb
sti
in
cmpsb
pushf
inc
fcmovu
pop
aaa
xchg
sarb
dec
xlat
mov
cmp
or
and
daa
pop
rcr
jne
test
dec
ret
rolb
ret
push
sbb
rcll
insl
clc
push
mov
test
cmp
xlat
imul
test
jle
inc
and
in
loopne
mov
xchg
xchg
cmp
cmp
ja
imul
dec
in
and
mov
mov
pop
adc
push
xchg
call
enter
gs
jnp
mov
inc
cmpsb
movzbl
inc
in
outsb
sbb
imul
outsb
outsl
cmp
dec
push
jp
mov
sbb
clc
push
pusha
stos
or
push
scas
gs
xor
pop
hlt
sub
test
push
repnz
je
rorl
xor
int3
sbbb
in
decb
xor
dec
or
cmpb
loopne
inc
fimuls
data16
outsb
mov
test
ficompl
jle
add
cmpsl
pushf
mull
add
push
imul
sarl
je
inc
insl
pop
repnz
lea
cmpsb
in
fstpt
pop
aas
fbstp
pop
insb
push
and
repnz
push
repnz
ret
mov
cmp
lcall
lahf
clc
in
or
mov
push
jge
add
jle
iret
loopne
movsb
dec
lret
dec
xchg
mov
and
jno
xchg
jo
ret
push
inc
inc
inc
shll
adc
arpl
lcall
int3
in
mov
dec
mov
mov
mov
jge
addb
loop
imul
xorb
idivl
clc
cltd
leave
in
lahf
movsl
loop
ja
inc
dec
fwait
mov
xor
pop
pop
imull
int
loop
inc
rcr
hlt
cmpsl
lea
jae
insl
xor
xor
ret
push
cmp
xor
xlat
out
lds
pop
inc
pusha
lods
test
mov
mov
mov
fisubrs
out
in
std
cmpsb
rcl
js
sbb
scas
dec
cmp
pushf
cmp
mov
inc
out
out
je
mov
xor
fildl
sub
mov
pop
mov
mov
ret
inc
ja
cltd
mov
test
push
mov
mov
dec
arpl
or
rclb
mov
jge
mov
imul
scas
jg
fiadds
dec
mov
pop
mov
fs
xchg
xor
daa
xchg
in
lods
hlt
fabs
rcrb
fsubs
shlb
into
cmp
sarl
popf
xchg
fnsave
pop
ja
xor
pop
inc
loop
subb
jge
xchg
xor
loopne
cmp
cmp
fld
popf
jnp
enter
sub
popa
adc
lahf
mov
jmp
mov
xchg
imul
insb
jmp
sti
add
xor
scas
inc
mov
jno
iret
ficoml
sbb
fsubl
xchg
or
movsl
test
sarb
cmp
pop
gs
adc
rcll
fisubrs
sbb
add
xor
xchg
inc
and
call
mov
std
or
subl
test
pop
mov
fxch
inc
dec
stos
inc
jl
dec
cvtps2pi
ss
or
mov
cmp
pop
push
bound
pop
shrb
movsb
sti
and
es
test
lds
inc
rcl
dec
rolb
mov
repnz
mov
and
fdivs
nop
and
xchg
adc
cld
hlt
subl
mov
stos
cltd
fsubs
mov
repz
and
jo
sub
xor
sub
pop
fwait
lret
lods
out
inc
lahf
enter
roll
jg
and
inc
add
mov
and
ss
popa
and
pop
jp,pn
lcall
movsb
jb
add
sahf
std
sbb
test
jb
inc
cs
adc
out
fwait
mov
stos
and
push
xlat
test
daa
sbb
daa
int3
cmp
repnz
mov
mov
xor
lods
aad
movsl
sbb
mov
lds
push
jb
adcl
rolb
xchg
in
in
mov
aaa
xchg
pop
rclb
dec
cs
in
fsubr
pop
xorl
insb
lcall
jae
cli
ret
insl
mov
cmp
mov
pop
out
repz
jmp
test
mov
and
jne
faddl
adc
repnz
shll
sarl
dec
push
in
int3
sub
push
or
pop
lcall
mov
test
xchg
mov
and
fsub
xchg
daa
mov
xchg
xchg
xchg
ljmp
or
sahf
outsb
cmpsl
xor
jae
cmc
sbb
outsl
aas
cmp
stos
add
lret
inc
dec
add
lds
xor
mov
mov
or
add
mov
sub
repnz
xchg
pop
or
and
or
fisttpl
adcb
adc
push
sbb
push
push
xor
stos
xchg
cmp
test
xchg
test
adc
xchg
sbb
xor
je
jecxz
sub
pusha
dec
or
adc
rclb
cmp
mov
std
adc
inc
and
imul
mov
mov
movl
mov
push
in
call
push
xchg
mov
repz
inc
outsb
add
mov
aam
pop
push
mov
xchg
cmp
xchg
out
lahf
jbe
outsl
xlat
out
std
and
in
sbb
mov
push
sbb
lret
xor
inc
fucom
xchg
mov
scas
sub
dec
xor
cmp
and
ds
sub
aaa
cmp
fucomp
push
or
mov
cmp
movsb
jae
mov
fcomp
lahf
xchg
std
sbb
adc
xlat
inc
mov
push
sbb
mov
and
fs
aad
test
repz
ds
mov
das
sarb
xchg
rclb
addr16
push
xor
enter
mov
xchg
fcmove
mov
sub
push
dec
pushf
rcl
bound
and
pop
mov
mov
and
xchg
push
nop
jbe
pop
mov
add
outsb
aas
pop
mov
mov
and
dec
dec
or
fs
ljmp
stos
std
std
les
mov
sub
lret
out
cltd
dec
dec
js
push
dec
jp
adc
xorl
incl
inc
iret
loope
pop
mov
aad
jge,pn
sub
xor
mov
add
sbb
daa
or
aad
inc
pop
pop
jo
xor
aad
nop
stc
adcl
xor
pushl
jge
jle
and
repz
mov
and
dec
cmp
jbe
cmpsb
dec
pop
pop
push
and
xchg
cmpl
cmc
or
ficomps
mov
movsl
js
mov
and
out
outsb
pusha
sub
ficoms
fs
mov
xchg
ret
cmp
sti
push
dec
add
hlt
loop
loop
add
lcall
and
stc
jne
scas
roll
sub
cmp
sahf
mov
mov
add
xchg
pop
jae
add
cmp
inc
adc
cwtl
inc
inc
in
cld
cwtl
stos
scas
and
mov
sbb
mov
addr16
addb
movsl
or
adc
dec
xchg
adc
mov
or
lret
add
xchg
iret
popa
pop
cmc
outsl
jge
xchg
movb
std
xchg
inc
jge
rcrb
xchg
popa
insb
outsl
lods
adc
jl
inc
mov
clc
push
push
mov
pusha
or
sub
adc
and
popf
ss
daa
adcl
ror
adc
pop
std
jmp
aad
popa
fcmove
rcrl
mov
std
hlt
je
fisubl
out
xchg
fwait
pop
clc
jae
pop
or
dec
mov
in
lock
rcr
lods
or
fsubl
lods
fildl
pop
pushf
lock
cld
fldenv
lahf
push
sub
cmp
into
movsl
dec
mov
insb
mov
pop
sub
aad
mov
mov
cmp
cmpb
xor
push
jg
add
fisubrs
push
push
loope
cmp
add
call
push
push
pop
and
outsw
cmp
stc
aad
data16
in
xchg
push
and
fs
adc
les
push
jbe
mov
pushl
jge
repz
xor
jmp
enter
push
pop
das
sbb
jmp
outsl
push
leave
scas
and
mov
jb
or
push
xchg
scas
sbb
cmpsb
sti
adc
mov
loopne
mov
popf
pop
inc
inc
stos
std
push
movsb
rcrl
ret
jae
in
enter
je
inc
and
cld
stc
inc
adc
dec
test
pop
inc
popa
adc
jb
sub
clc
dec
out
sub
fsubrl
sbb
mov
adc
push
xchg
rcrl
stos
stos
shl
pop
dec
cld
jge
mov
pop
iret
cmpsb
add
sti
mov
test
mov
push
lds
movsb
and
aam
and
popf
movsb
mov
std
in
repz
pop
mov
mov
xchg
xchg
imul
das
test
mov
sbb
lods
rolb
push
xchg
jp
pop
xchg
xchg
add
cmc
jecxz
lods
ret
mov
fwait
iret
dec
orl
xchg
jno
mov
movsb
push
stos
shrl
jl
std
xchg
xchg
or
lods
cmp
mov
xchg
inc
out
mov
scas
mov
inc
lea
mov
add
addr16
fldl
xchg
mov
lock
hlt
or
mov
outsb
test
data16
jmp
push
adcb
push
repz
sarb
jecxz
cmpsb
sub
mov
sahf
xchg
and
push
loopne
sti
push
ret
push
inc
jnp
lea
or
aas
js
loopne
out
or
mov
enter
inc
divb
fcoms
pop
dec
pop
or
sbb
pop
push
mov
popf
xchg
pop
xor
or
cltd
pop
cmpb
repz
adc
outsb
stos
cmp
popf
scas
jmp
xchg
in
sbb
push
in
mov
pop
push
mov
into
inc
stc
into
shr
adc
addr16
jb
insb
aas
jae
inc
in
and
sub
sbb
mov
pop
inc
or
inc
lcall
jmp
xchg
aas
dec
xor
in
lods
sbb
fistpll
repz
mov
cs
mov
std
ret
jae
insl
push
adc
cmp
sub
sub
pop
ret
sbb
or
ljmp
ljmp
or
inc
adc
testb
aas
mov
out
push
dec
xchg
in
out
cltd
adc
enter
sub
xchg
jo
cwtl
mov
adc
adc
and
sub
dec
sbb
clc
inc
xor
mov
push
push
pushf
cmp
lods
xlat
push
dec
mov
jg
pop
subb
out
pushf
jns
jne
ds
pop
out
xchg
xchg
call
cltd
mov
hlt
sbb
fsubl
cld
dec
cmp
scas
stc
inc
pop
in
popf
jbe
les
sub
mov
hlt
and
push
cmp
cs
out
xchg
and
push
stos
mov
sti
lods
aam
rolb
xchg
gs
adc
add
inc
sub
pop
add
sub
jne
sub
into
enter
add
inc
push
sub
pop
and
fimull
fisubl
push
adc
fsubs
leave
cltd
iret
test
jnp
mulb
sahf
adc
mov
iret
ret
out
xchg
cmpsb
popf
jno
lods
lret
pop
push
test
sbb
stc
jmp
sub
jge
int3
fiaddl
rorl
push
jnp
xchg
dec
fbstp
mov
sahf
jl
inc
add
ja
in
int
mov
filds
int3
shr
cmpsb
paddusb
push
dec
mov
loope
mov
or
movb
mov
out
repz
mov
xor
jnp
xor
stc
aas
jbe
xchg
push
cmpsb
pop
repnz
test
jl
rolb
dec
fisubrs
es
aaa
jmp
and
mov
imul
js
add
in
xchg
jns
cli
jns
pop
xor
fidivrl
jne
mov
and
notb
lahf
std
test
mov
fwait
nop
mov
xchg
dec
pop
push
cmp
gs
cmp
cmp
jmp
call
lods
sbb
aas
pop
mov
mov
fwait
bswap
inc
adc
mov
sbb
push
mov
loop
mov
xor
dec
and
rcrl
mov
push
pop
sbb
jmp
cmp
stos
rol
mov
cmp
icebp
jg
inc
lret
add
outsl
push
cmp
dec
cmpsl
loope
xchg
orb
cmpsl
inc
cmpsl
jle
fcmovnb
aad
mov
push
xchg
sbb
and
int3
fisttpl
sahf
sub
inc
enter
sub
mov
xor
popa
test
pushf
cltd
rorb
mov
inc
shll
mov
lcall
out
xor
cli
imul
mov
inc
roll
push
divb
xchg
in
adc
inc
cli
pop
mov
cmpsl
imul
bnd
xor
js
cli
addb
mov
es
cmp
mov
fsubl
push
icebp
nop
insl
aam
xchg
and
mov
xchg
pop
aad
adc
mov
add
and
mov
mov
or
loopne
in
shlb
loopne
iret
loope
jl
push
icebp
icebp
hlt
aam
sub
or
cli
pop
rclb
out
gs
bound
cmpl
and
jecxz
leave
into
dec
xchg
daa
xor
jge
xchg
addr16
xchg
cld
mov
lock
aad
sub
jge
or
inc
cmp
pop
addb
add
add
pop
inc
data16
jl
xchg
jecxz
ret
divb
sbb
out
or
or
insb
in
mov
mov
cmc
push
and
xor
dec
imul
popa
add
dec
pushf
sub
or
jns
pop
push
pop
imul
cmc
cltd
bound
xor
xchg
mov
and
popf
hlt
fcomps
sub
inc
pop
inc
adc
arpl
mov
inc
xchg
stos
jl
and
jo
lods
int3
jno
inc
or
mov
testb
lcall
in
push
or
lret
outsb
push
add
rcl
rclb
mov
lret
andb
inc
out
inc
or
je
add
jge
push
negl
sub
push
add
jae,pn
sahf
and
ret
push
int3
dec
add
inc
adc
sbb
pop
sub
jnp
sbb
xor
imul
lods
push
sbb
cmp
dec
pusha
and
adc
scas
push
cmp
and
lods
xchg
cmp
jno,pn
into
jecxz
adc
imul
sub
aam
sahf
dec
repnz
xor
xchg
pop
ds
popf
mov
sbb
add
push
inc
cmovs
iret
imul
cmp
mov
or
xor
aam
mov
and
lods
and
sbb
data16
adc
stos
and
xlat
imul
insb
arpl
or
cmp
out
into
adc
pop
xchg
mov
cltd
ljmpw
and
jns
lods
mulb
inc
pushf
sub
add
pop
pop
lea
ja
inc
imul
mov
arpl
call
xor
jbe
insb
sbb
push
pushf
fmull
ds
push
jp
and
mov
mov
stos
loop
adc
out
sub
push
nop
and
test
and
in
push
add
je
dec
inc
xor
push
pushw
je
inc
pop
mov
jmp
sahf
pusha
repz
inc
xlat
gs
and
or
sub
lock
xchg
sbbb
or
xchg
jle
loop
je
cmpsb
jmp
lods
pop
sub
js
mov
mov
rorb
push
adc
fcoml
je
jle
pop
xor
es
pop
adc
imul
scas
mov
rorb
shrl
addr16
popa
inc
test
rclb
test
lods
mov
sub
and
xor
xchg
add
or
int
imul
xchg
les
mov
arpl
pop
mov
sub
mov
hlt
cmp
inc
call
fcomps
es
cmp
xchg
arpl
cmp
cmp
mov
dec
or
dec
das
fidivl
scas
fs
adc
xor
mov
and
fstl
push
out
cmp
jno
push
pop
mov
cltd
push
imul
dec
jns
sub
sbb
mov
push
lock
roll
loop
dec
adc
movsb
add
call
iret
adc
xchg
inc
jae
inc
jo
dec
dec
in
lock
xor
rcll
inc
dec
cltd
or
popa
or
add
pop
fiaddl
cwtl
pop
xchg
xor
sbb
sbb
sub
mov
jl
js
movsl
int3
jo
mov
mov
sbb
adc
insl
imul
xor
cmp
or
dec
js
and
out
mov
test
addr16
dec
or
jb
sahf
dec
and
neg
dec
push
add
pop
dec
mov
fs
push
imull
bndstx
push
addr16
xor
pop
adc
jg
sbb
outsl
xchg
lea
sahf
sub
jmp
jo
jae
cmpsl
pop
push
shl
popl
cmp
sbb
in
or
mov
pop
mov
ljmp
mov
call
ja
pop
cmp
pop
sub
jg
outsb
jno
xor
add
add
dec
pusha
dec
ret
or
pop
out
add
inc
and
push
imul
in
jg
push
push
enter
xchg
or
fwait
inc
fs
xor
scas
pop
and
imul
jmp
push
xchg
or
ljmp
lods
rcrb
fidivl
push
lret
mov
inc
shrb
push
xor
inc
imul
or
mov
dec
fmul
cld
js
cmp
mov
mov
jb
push
mov
scas
clc
int3
inc
jae
fs
outsb
call
cmpl
mov
dec
cld
xchg
in
std
mov
lret
mov
dec
cmp
cmp
cs
or
adc
mov
aaa
push
xor
dec
inc
cmp
add
iret
loop
sti
imul
and
dec
jl
or
hlt
push
pop
xor
aaa
push
inc
cltd
pop
insb
adc
or
aas
clc
cmp
push
cmp
pop
push
and
or
inc
add
or
push
lock
lret
scas
out
test
push
idivb
rolb
or
adc
cs
fldz
out
xor
inc
fnsave
or
dec
and
dec
push
stos
lahf
outsl
push
stc
mov
adc
pop
add
mov
jo
sub
sbb
cmp
fildl
dec
or
cli
or
repz
mov
sbb
jnp
sbb
stc
cmp
cltd
sub
fistps
sub
imul
test
or
fs
cmpsb
pop
sub
ret
aaa
call
xor
and
repnz
jb
aas
cltd
sub
call
or
mull
lahf
sub
idivl
push
inc
xor
cmpsb
adc
aas
sbb
adc
outsb
arpl
outsb
repz
sub
rorl
or
dec
adc
xchg
out
add
fildl
imul
and
mov
sub
arpl
lahf
cli
sbb
and
pop
fmull
xchg
popf
mov
in
daa
jbe
cli
lea
ficompl
pop
sub
mov
jno
fs
xor
adc
and
jb
cltd
mov
push
cmp
cmp
jl
mov
mov
jo
lret
sub
xchg
mov
les
sahf
les
dec
dec
or
ss
jo
fimull
popf
sbb
inc
lock
idiv
adc
and
add
inc
push
jns
or
push
daa
or
push
cmp
xor
jg
inc
or
jl
inc
push
pop
ljmp
push
popa
inc
pop
push
arpl
insb
inc
add
sbb
add
and
pop
jnp
pop
inc
outsl
sub
dec
or
dec
push
sbb
ljmp
and
imul
sub
inc
and
or
jae
fsubrs
cwtl
imul
dec
jmp
dec
in
jmp
pusha
in
xor
rol
xor
clc
ss
rorb
fildll
inc
rcr
jae
hlt
mov
push
aas
out
mov
dec
push
jge
loope
xor
sbb
cli
pushf
push
jb
xor
lods
js
in
scas
test
push
std
popa
rcl
sti
cmp
imul
inc
insb
xchg
shr
int
sbb
mov
and
dec
or
clc
outsb
pushf
pop
movsb
jle
outsb
pop
jle
xor
addb
add
push
push
pop
out
inc
cmp
cmp
sub
and
ret
stos
adc
fmuls
push
lcall
xor
push
jns
push
outsb
repnz
mov
cmp
call
mov
xchg
sbb
dec
push
ja
dec
std
add
rol
dec
jae
pop
call
push
scas
xchg
loop
mov
fldl
sti
outsl
arpl
fmull
inc
xor
leave
sbbb
fmuls
iret
mov
call
jne
jne
ja
jne
imul
enter
pop
pop
xchg
mov
scas
popa
mov
fdiv
stos
sbb
add
mov
lret
mov
add
repnz
xor
arpl
jne
and
sbbl
xchg
rcrl
jle
hlt
sahf
adc
hlt
bound
and
jmp
sub
jecxz
scas
or
sahf
arpl
fisttpl
cltd
mov
test
mov
xorb
sub
push
inc
stos
insb
pop
pop
cmp
adc
adc
cli
insl
sti
add
xor
scas
mov
and
push
in
mov
loop
jge
lea
out
pop
out
pop
inc
pop
stos
daa
test
adc
clc
push
rclb
js
pop
inc
fwait
inc
cmpb
or
ret
mov
sub
xor
sbb
or
testl
call
in
adc
mov
dec
imul
movb
inc
sub
inc
int3
xlat
adc
imul
push
add
imul
imul
jecxz
or
mov
mov
std
bound
data16
xor
adc
or
sub
mov
mov
or
sbb
sub
enter
pop
lret
scas
in
sti
scas
roll
adc
lret
xchg
bound
imul
das
stos
push
mov
rcrb
cmpsb
sbb
push
sahf
push
sbb
adc
iret
pop
mov
test
jne
imulb
popf
cmp
fucomip
sub
and
mov
pop
lret
add
cmp
add
cwtl
push
ljmp
mov
mov
sbb
xorb
mov
dec
pushf
dec
repnz
mov
movsb
mov
lods
call
mov
repz
icebp
mov
orl
in
ljmp
mov
repz
cwtl
cmp
lods
cmp
dec
bound
adcl
xchg
arpl
mov
scas
popa
enter
xchg
sbb
and
adc
jb
decb
lret
pop
ja
mov
and
jmp
cltd
or
pop
test
iret
shll
jecxz
les
xlat
xorl
adc
loope
arpl
data16
shl
out
es
inc
popf
sti
adc
into
add
into
popa
int
mov
jle
iret
frstor
inc
inc
pop
mov
jmp
and
push
inc
fs
pushl
mov
popa
outsl
inc
xchg
cmp
inc
ror
in
cmp
fisttpll
add
enter
bound
dec
jae
pop
andb
test
pop
xor
daa
daa
inc
sub
in
push
jmp
sub
in
pop
xlat
sub
mov
xor
push
popf
addr16
push
cld
xor
lds
idivb
cmp
enter
enter
inc
test
pop
inc
sub
sub
pop
pushf
add
mov
inc
lods
jge
sbbl
fisttpll
dec
and
lret
stos
add
inc
mov
sub
out
inc
sbb
add
push
push
sub
mov
movsb
cmp
add
fs
mov
pop
aaa
aas
repnz
ja
out
xchg
jmp
dec
das
xchg
leave
xchg
mov
lea
lret
mov
arpl
inc
movsl
pop
bound
or
inc
sbb
xchg
ret
xor
adc
lret
scas
mov
sbb
mov
jg
dec
ret
fidivl
imul
dec
or
in
mov
cmpb
cmp
les
mov
inc
pop
dec
sub
dec
inc
xor
data16
dec
inc
in
aam
xor
lods
xor
mov
jl
inc
gs
rorb
add
jns
and
add
push
ret
shl
jne
mov
dec
nop
or
adc
xlat
insl
push
or
inc
outsl
or
add
adc
inc
xor
int3
dec
sti
pop
ja
push
insl
icebp
inc
fsts
imul
fdiv
add
fstps
call
test
lahf
lods
call
dec
popf
or
jl
pushf
pop
cli
sbb
and
shlb
sbb
mov
inc
cmp
lahf
jno,pn
lahf
dec
mov
pop
insl
in
out
jg
and
sahf
clc
pop
add
sbb
jbe
sub
popa
cmp
adc
pop
mov
mov
pop
inc
or
in
mov
cli
leave
in
in
sbb
std
sahf
pop
es
je
add
xchg
cwtl
mov
push
cmp
pop
out
outsl
sbb
mov
or
fidivrl
cltd
sbb
cmpsl
fldcw
dec
shlb
jo
pop
mov
ljmp
loop
sub
bound
push
jae
inc
cmp
outsl
pop
movhps
and
cltd
loope
xchg
sub
lods
xchg
lahf
in
mov
dec
lods
repz
stos
cmp
rcll
fbld
add
cmp
insb
shlb
pop
inc
cwtl
pop
mov
test
xor
jg
sub
adc
or
pop
add
in
addr16
fcmovb
popa
ja
int3
sbb
push
mov
push
lcall
pop
ss
pop
aas
shlb
or
mov
push
adc
imul
in
scas
mov
sub
jmp
mov
lock
fidivrs
cmp
jne
xor
sbb
mov
sarb
out
pop
and
test
dec
movsb
xchg
add
xchg
outsl
ja
push
push
pop
insb
xchg
pop
out
mov
cltd
mov
out
push
arpl
test
fwait
bound
test
cld
adc
data16
add
pop
movsl
sub
popf
xorl
adc
out
jo
jl
aas
movsb
mov
out
mov
and
mov
mov
ljmp
sub
rolb
mov
cmp
gs
mov
fnstcw
es
jns
out
push
aas
push
daa
inc
insb
cmp
nop
inc
lret
in
xchg
inc
shl
shll
cmp
sbb
add
cmp
dec
add
shll
mov
add
shlb
mov
lods
faddl
mov
pop
mov
aas
icebp
lret
cmp
xchg
pop
gs
pop
pop
cmp
lret
xor
sub
ja
repnz
push
stos
gs
push
bound
mov
test
sahf
in
add
ljmp
mov
test
push
jecxz
push
sar
mov
sbb
inc
push
adc
xor
frstor
add
jecxz
fidivrs
cmpsl
cli
or
dec
jp
cmp
dec
lcall
mov
out
std
adc
fmull
sbb
sub
jle
pop
dec
jle
xchg
in
les
adc
adc
lret
mov
and
jl
cmp
mov
dec
xchg
fstpl
pop
add
adc
daa
arpl
inc
and
mov
das
call
insl
and
push
dec
repnz
mov
mov
jmp
jns
push
decl
bound
xchg
data16
cmc
bound
mov
add
xor
data16
xchg
cmp
scas
inc
icebp
jmp
jnp
dec
xlat
movsb
xor
mov
out
ljmp
xlat
icebp
hlt
roll
add
mov
inc
sub
mov
pusha
mov
nop
cmp
dec
arpl
aaa
pop
mov
leave
sar
call
data16
sub
addl
jecxz
sbb
fstp
jb
out
cltd
addr16
outsb
cmpb
cmc
hlt
add
aas
mov
xchg
sbb
int3
ret
pop
xor
xchg
lret
sub
dec
dec
or
cld
fisubs
test
dec
mov
push
bound
test
sti
inc
push
dec
aaa
je
stos
push
js
sbb
fdivrp
cmp
outsb
nop
add
jle
push
movsb
sub
cmp
insl
pslld
faddl
pop
mov
jmp
add
add
js
outsl
mov
sarl
xor
addl
fsubs
push
and
ret
add
bound
add
addr16
pushf
ja
addl
or
pop
sbb
jne
and
rolb
cltd
outsb
test
pop
fisubs
stc
push
daa
aas
adc
bswap
push
std
mull
pushf
lret
outsl
mov
sub
daa
arpl
jge
out
jns
repz
ret
in
push
mov
imul
rcr
xchg
jo
pusha
fnsave
add
sbbl
std
ret
cmp
aaa
pop
out
daa
pop
xchg
lds
or
movsl
dec
sub
movsl
mov
xchg
jbe
cmp
inc
sti
lahf
mov
mov
iret
ret
mov
push
inc
ljmp
sbb
scas
push
mov
add
push
lods
cmp
xor
mov
cmp
or
test
adc
add
mov
cltd
or
adc
lea
fmuls
xchg
jmp
mov
fsubrl
in
add
mov
insl
pusha
pop
mov
mov
and
sbb
adc
mov
mov
jbe
js
popf
and
pusha
lcall
std
adc
xchg
inc
add
inc
negl
xchg
push
nop
add
adc
int3
iret
leave
pop
lock
sbb
mov
xor
dec
and
popa
cs
mov
mov
add
lea
call
cli
mov
mov
bnd
pushf
inc
mov
nop
mov
jns
mov
cmpsb
negl
xchg
mov
jb
insb
adc
mov
dec
adc
bound
fiadds
stos
pop
or
adc
add
jnp
mov
rorb
ret
pop
sub
xchg
pop
pop
push
add
add
push
repz
mov
loop
movq
or
or
leave
sub
push
cmp
arpl
jg
fcompl
mov
inc
mov
lret
clc
lcall
dec
pusha
push
dec
pop
add
jp
repnz
rclb
ja
sub
fwait
xor
inc
sti
xor
lahf
lods
fidivs
xor
popf
movsl
scas
sbb
cltd
mov
iret
mov
sahf
lods
jbe
push
lods
xlat
pusha
xchg
mov
mov
pop
dec
jb
pop
xor
ds
inc
jno
pop
rcr
mov
mov
enter
jge
insl
ljmp
lcall
mov
fimuls
add
mov
dec
jno
enter
ja
fst
adc
or
in
mov
insl
cmc
popa
jo
cmp
xchg
mov
sub
sbb
dec
inc
sarb
mov
daa
ja
add
ljmp
loopne
inc
fmul
out
lock
add
cmc
sbb
int
leave
xorps
cmp
pop
movsl
pop
bound
mov
and
sbb
xchg
faddp
xchg
cmp
call
data16
pop
addb
sub
fstl
sub
stos
mov
pop
and
imul
cs
inc
dec
in
popa
pop
movsl
movsb
popa
jge
push
fsubs
loopne
or
adc
arpl
adc
jle
mov
stc
jb
loopne
xchg
icebp
enter
adc
rcl
pop
push
xchg
adc
btr
dec
cli
ja
dec
decb
inc
xchg
imul
in
jno
in
xlat
jmp
push
inc
lock
jae
cmc
pop
jmp
aad
pusha
and
iret
cmc
in
cwtl
pop
cmp
and
nop
ljmp
xchg
iret
inc
jno
sbb
cmp
sub
stc
add
mov
and
mov
xchg
call
lahf
mov
dec
sub
arpl
cmp
add
add
sbb
add
imul
bound
sahf
fsubs
push
pop
sahf
jmp
loopne
mov
jnp
sbb
fldlg2
dec
gs
fwait
inc
ljmp
add
js
jnp
faddl
test
int3
les
cmp
jecxz
or
xor
fnstcw
dec
stos
pop
movsb
mov
mov
scas
dec
mov
add
or
pop
popf
aaa
add
movsl
push
mov
mov
ljmp
xor
sub
outsb
ret
imul
mov
adc
arpl
insl
bound
and
cmp
inc
mov
outsb
cmp
arpl
sahf
inc
sbb
lret
or
add
and
cmp
add
repz
jge
ret
fs
outsl
cmp
add
stc
xchg
sahf
pop
inc
negb
jo
sub
je
out
pop
sbb
push
jb
adc
pop
int
lret
inc
nop
dec
mov
pusha
or
call
inc
sub
add
loopne
fists
test
sub
enter
and
inc
clc
daa
pop
or
faddl
add
jge
jo
out
pop
pop
cmpl
cmpb
xchg
aad
leave
xor
cmp
sbb
divb
movsl
sti
ret
adc
ret
inc
mov
jecxz
or
aam
cwtl
sbb
fisttps
aad
add
add
dec
and
test
lret
pop
mov
sbb
fincstp
xchg
mov
inc
mov
add
inc
or
out
push
xchg
unpcklps
ja
sub
cmc
add
popa
fwait
lods
push
fs
cmc
clc
stos
fcoms
pop
jo
pop
bound
mov
push
add
xchg
adcb
pop
pushf
cwtl
push
push
pushf
loope
cs
js
popf
dec
jnp
inc
fists
ret
repnz
push
dec
rclb
cmp
xchg
mov
lds
dec
pop
mov
out
fdivs
sbb
inc
sbb
lock
fisubl
movsl
fimull
mov
int
sbb
outsl
addr16
sub
add
xor
out
and
out
lock
mov
jbe
mov
xchg
add
mov
lods
mov
push
inc
lcall
test
adc
sbb
xor
jno
fs
test
inc
pushf
aam
clc
cmp
ret
in
adc
movsl
mov
not
and
push
jno
frstor
dec
lret
mov
pusha
mov
in
sahf
je
mov
jmp
bound
and
add
les
jb
movsl
fnstsw
dec
add
xchg
cs
add
adc
ljmp
lret
loopne
jl
and
mov
xlat
add
inc
dec
aas
add
es
mov
rolb
movsb
fisttps
mov
adcl
or
add
push
in
jbe
rol
jbe
cwtl
push
inc
sbb
cmp
jecxz
shrb
jb
inc
jno
div
mov
scas
adc
inc
inc
ret
sbb
fbstp
add
out
lcall
jecxz
jne
adc
push
mov
push
rorl
xor
sbb
bound
pop
iret
test
inc
dec
xor
test
enter
cmp
push
stc
ds
xchg
add
popf
and
dec
movsl
aam
scas
dec
adc
scas
mov
jne,pt
cmpsl
jle
xorl
jnp
pusha
addl
mov
or
fisttpl
push
and
pop
cmp
add
xchg
in
inc
dec
push
sub
sbb
jp
xchg
aas
and
xchg
mov
je
loope
mov
aaa
add
idivl
xchg
dec
popa
add
das
sub
mov
or
mov
pushw
jno
mov
mov
dec
mov
outsl
dec
inc
cmpxchg
andl
mov
inc
cltd
std
dec
pop
sbb
imul
sbb
outsl
inc
or
add
ss
xor
xchg
into
addr16
mov
xor
mov
mov
bound
inc
xlat
cmp
push
lcall
lds
cwtl
cmp
xchg
repz
rcrb
jmp
mov
stos
mov
mov
mov
aam
test
inc
scas
sbb
xor
jae
push
movsb
xor
jo
adc
fwait
aam
jb
aad
ret
adc
scas
out
adc
xchg
push
jno
pop
inc
push
push
xor
or
pop
sub
lods
clc
push
xchg
xchg
jno
lret
and
loop
mov
bound
xor
leave
jmp
mov
adc
inc
mov
test
xor
ret
push
rcll
mov
dec
ss
arpl
adc
insl
adc
loop
xor
and
pop
or
sahf
ljmp
pop
sbb
dec
push
je
int
ljmp
or
arpl
call
divb
sbb
shlb
sub
adc
jnp
frstor
cmp
adc
mov
les
push
sbb
mov
mov
jbe
sar
rcrb
mov
adc
clc
or
mov
push
add
icebp
and
ffree
lcall
jae
mov
jno
push
pop
mov
pop
jae
dec
stos
xor
mov
pop
push
xchg
sti
imull
add
data16
jg
cld
out
xchg
mov
xchg
rcrl
sti
pop
fistps
aad
xchg
aas
cmp
xor
pop
fmuls
les
pop
mov
lds
test
lock
lods
and
xchg
push
pop
push
dec
icebp
adc
adcl
popf
inc
jne
sub
inc
push
adc
add
xlat
lahf
ss
leave
aaa
push
shufps
add
push
jbe
jno
cmp
xlat
and
pop
jge
jae
mov
pop
shll
cmp
lds
cld
add
movsl
test
insl
mov
adc
adc
dec
test
jae
mov
mov
ret
inc
push
pop
add
mov
fadd
sub
aad
and
gs
mov
xor
and
lret
fadds
ficoml
sub
cli
inc
adc
and
je
adc
push
cmpsb
pusha
lahf
jge
jmp
push
mov
xor
inc
aad
and
add
and
iret
daa
sahf
cmpsb
sub
mov
mov
lods
sbb
std
testl
inc
mov
ficompl
ds
dec
inc
jmp
push
enter
mov
cmc
out
shll
aad
sarb
test
push
jmp
push
xor
ljmp
in
jp
int
pop
cmpsb
scas
adc
iret
adc
int
inc
pop
addr16
push
pop
out
push
jle
and
push
xchg
push
outsl
adc
inc
pusha
push
pop
ss
imul
sbb
inc
test
pop
fucomip
push
pop
mov
sub
aad
ret
clc
int
cli
jae
jno
xor
or
jno
data16
add
icebp
insb
adcl
lcall
pop
jns
pop
cld
or
shlb
faddp
inc
in
inc
pop
in
sahf
adc
lods
jno
jecxz
nop
cmp
hlt
and
cmp
or
mov
jnp
in
sbb
pop
stc
push
mov
insl
adc
adc
rcrb
add
xchg
pusha
sbb
outsl
les
cmp
xchg
inc
mov
xor
mov
adc
push
gs
jae
test
lods
push
movsb
or
or
push
pop
mov
dec
cmp
bswap
adc
mov
pop
aaa
dec
push
les
and
aad
out
mov
sub
xchg
push
cmp
mov
lret
into
jge
jmp
lcall
rclb
scas
test
mov
cmpsl
mov
mov
mov
mov
test
pop
sub
mov
ds
hlt
pop
sbb
mov
icebp
add
cltd
xchg
jnp
inc
adc
pop
imul
mov
fwait
xchg
loope
xchg
mov
cltd
and
ss
inc
or
aad
mov
dec
mov
add
jnp
xchg
sbbl
dec
cmc
iret
out
pop
test
pusha
and
cmp
mov
mov
stc
sub
mov
or
dec
sub
adc
add
repz
and
xlat
ret
push
es
mov
lods
pushf
rolb
aad
add
mov
notl
or
shrw
and
push
push
push
aam
jle
push
xlat
fsubrl
and
cmpsl
lods
mull
inc
adc
and
call
lea
es
sbb
dec
enter
pop
add
inc
xchg
and
insb
mov
jnp
or
out
xchg
call
jo
mov
and
sub
xchg
mov
sub
hlt
mov
loopne
xchg
inc
movsb
jbe
and
push
pop
adc
inc
sbb
add
and
inc
lods
and
aas
mov
inc
or
mov
ljmp
rclb
daa
iret
iret
pop
mov
push
mov
into
adc
inc
and
and
xlat
arpl
jp
jbe
test
arpl
dec
insl
ljmp
jle
mov
inc
push
dec
lret
iret
out
mov
mov
inc
pop
sbb
repnz
gs
mov
int3
push
out
sub
mov
test
adcb
gs
rolb
inc
or
and
inc
xchg
dec
mov
es
mov
setae
pop
mov
int3
jnp
mov
icebp
cmp
adc
lret
ret
and
add
jmp
adc
repz
test
rep
and
xlat
mov
imul
or
jb
lods
js
mov
jo
ljmp
adc
mov
dec
into
jecxz
imul
shll
repnz
cmp
dec
mov
push
pop
xchg
daa
mov
and
xlat
cld
dec
cs
inc
pop
sub
and
mov
je
test
aaa
aad
pusha
arpl
and
add
jae
enter
imul
mov
and
das
int3
sbb
adc
lret
mov
jns
fiadds
inc
xchg
or
aad
cmpsb
arpl
pop
push
add
js
pusha
cmp
dec
dec
iret
mov
das
es
nop
mov
xchg
add
mov
dec
mov
sub
lahf
sub
or
popf
mov
inc
into
pop
adc
adc
bound
or
mov
jmp
adc
jp
xchg
sub
imul
insb
xchg
push
sbb
mov
add
sub
xchg
js
push
mov
jle
cmpsb
adc
cmp
frstor
repnz
cli
adc
repz
mov
repz
popa
push
mulb
gs
inc
pop
sub
and
leave
fsubrl
adc
ds
in
arpl
in
jmp
in
inc
cwtl
dec
mov
int
movsb
es
mov
add
cmovno
insl
test
or
inc
and
jl
lahf
aad
nop
arpl
out
adc
add
addr16
nop
dec
stos
iret
mov
leave
mov
gs
inc
inc
jb
aad
in
scas
orb
inc
xor
aad
icebp
arpl
dec
inc
ljmp
mov
mov
jno
adc
es
add
mov
es
sbb
clc
inc
mov
outsb
bound
cmp
adc
rolb
pop
in
daa
je
inc
jl
iret
fcompl
movsb
das
mov
adc
and
cmpxchg
test
mov
inc
iret
or
or
sti
dec
sbb
adc
push
add
addr16
cmp
iret
rcrl
out
push
mov
setb
xchg
lods
and
or
inc
decl
aad
scas
arpl
pop
ljmp
cs
jnp
inc
loopne
jle
negl
sbb
mov
cmovg
dec
xlat
mov
sub
xchg
adc
mov
fistl
dec
adc
and
sbb
ret
adc
repz
push
sbb
and
rolb
bswap
mov
xchg
sub
cmp
incl
into
jp
and
js
jbe
jo
jmp
adc
lcall
fists
and
dec
shrb
sub
and
push
stc
lods
or
or
mov
sahf
dec
stc
ljmp
sbb
dec
fwait
iret
or
es
into
mov
jl
mov
clc
mov
into
fiaddl
mov
cmp
mov
dec
stos
dec
adc
dec
push
mov
jl
pop
clc
inc
mov
bound
xor
inc
xchg
lds
mov
in
inc
pinsrw
xor
cli
ret
push
jmp
push
ret
and
fld
outsl
and
cmp
dec
insl
sbb
mov
testb
movsb
pop
repnz
cmp
aad
jo
mov
fildl
pop
xchg
pop
daa
mov
fimull
test
pushf
pop
and
sti
rorl
jle
js
pushl
call
jl
lret
sbb
adc
cli
add
ret
add
adc
pop
jp
cmc
inc
repnz
mov
roll
lods
fbld
mov
push
ret
and
add
inc
out
scas
xchg
outsb
lds
insb
in
sbb
loope
sar
mov
js
addr16
add
jb
hlt
sub
push
adc
pop
push
xlat
xor
add
xchg
sub
in
jecxz
push
stos
fucomi
mov
bound
mov
or
push
cltd
sub
ja
ljmp
mov
loopne
jle
in
sub
ret
js
rcll
jl
xor
in
test
xchg
and
mov
ret
adc
testb
inc
dec
and
sahf
subb
shll
bound
cmp
and
or
dec
lcall
mov
test
jecxz
lret
icebp
xchg
pop
ljmp
mov
push
fcmovbe
pop
xor
lea
enter
mov
scas
pop
sti
loop
inc
imul
aas
bnd
or
mov
jns
or
out
add
and
dec
mov
adc
lds
dec
xor
inc
mov
cmp
test
mov
test
cmp
push
inc
scas
dec
jno
push
rclb
fsts
movsl
adc
flds
pop
mov
mov
adc
popa
roll
data16
mov
push
xor
adc
leave
fldl
inc
and
sbbb
mov
inc
jns
dec
mov
xchg
or
imul
mov
add
ficoml
pop
les
lret
imul
ret
loope
mov
fcoml
dec
add
in
pop
add
push
pusha
or
push
jge,pt
push
xor
fdivrl
das
mov
mov
pop
inc
xor
pusha
push
mov
test
mov
add
lahf
in
xchg
inc
shrb
fmull
in
pop
xchg
pop
gs
mov
xchg
insl
scas
clc
sbb
jmp
addb
pavgb
mov
std
dec
cltd
and
cmp
cmp
sub
daa
push
das
pop
cmpsb
and
and
ss
insl
push
and
rolb
mov
lds
pop
ja
test
loop
cs
ret
in
xlat
or
sbb
imul
adc
iret
shll
scas
rorb
add
xchg
inc
add
cmp
fiadds
cmp
adc
sbb
mov
mov
mov
push
mov
inc
sub
test
adc
ret
bound
sarb
push
mov
imul
aad
shrl
in
outsl
jae
pop
mov
mov
lds
fcmovnu
adc
and
test
fldenv
arpl
sti
mov
rorb
fsubs
sbb
sarb
push
xchg
iret
movsl
pushf
stc
add
mov
imul
stc
movb
xchg
adc
and
imul
fnstenv
mov
call
scas
loopne
scas
cmc
loopne
pop
stos
fsubrl
rclb
dec
out
iret
and
into
fidivrs
adc
insl
repz
arpl
cmpsb
les
je
ret
add
stos
ret
scas
jge
out
jl
xchg
fiaddl
cmp
mov
ja
loopne
mov
sub
into
test
mov
mov
insl
cmp
sbb
divb
mov
sub
aaa
cld
dec
sti
testl
ja
add
inc
adc
cwtl
bound
xchg
pop
xchg
inc
das
jbe
dec
cmp
imul
int3
shlb
popl
jnp
mov
fcmovu
mov
outsl
ds
mov
add
xor
imul
sbb
je
scas
adc
scas
lret
test
cmp
pop
mov
jnp
mov
mov
es
add
out
out
cmp
pop
push
mov
and
and
jns
add
mov
ljmp
cmp
xor
lea
scas
lock
inc
je
jns
add
subl
xor
fisubs
out
jmp
mov
or
and
pop
push
xor
ret
or
add
je
sbb
je
pop
movsb
add
sbb
push
hlt
gs
inc
cmpsl
sub
xchg
neg
enter
int3
mov
pop
enter
addr16
stos
xchg
call
mov
es
mov
movaps
sbb
fstpl
jecxz
sub
xchg
mov
xchg
mov
add
inc
adc
add
sahf
repnz
lock
mov
or
push
repnz
push
push
inc
mov
and
loop
lods
je
fiaddl
pop
arpl
pop
fwait
add
mov
and
xor
push
int3
and
stos
call
fistpl
mov
lods
into
arpl
dec
ljmp
adc
inc
sbb
jge
mov
pop
push
cld
push
dec
and
pop
popf
lods
je
or
arpl
jo
and
xchg
shrd
or
test
arpl
adc
fsubrl
xchg
call
inc
iret
xor
mov
mov
les
gs
inc
cld
sub
and
mov
lahf
inc
out
or
cmc
pushf
arpl
dec
pop
ljmp
mov
dec
ret
pop
pop
es
mov
xchg
lods
sbb
mov
mov
and
mov
imul
int
adc
sbb
les
repz
mov
and
xchg
push
push
and
inc
inc
lods
adc
data16
xchg
jg
sbb
fs
adc
lret
push
adc
or
inc
push
into
adc
mov
faddl
adc
ljmp
and
sub
inc
or
sbb
push
adc
dec
cwtl
ljmp
lahf
xchg
loopne
inc
and
iret
pusha
pop
add
add
mov
jp
mov
rcr
sub
xchg
mov
insb
into
rclb
xchg
test
cmc
stc
and
push
adc
repz
and
adc
and
sub
lods
pop
gs
inc
cmc
sub
and
inc
add
std
or
add
ljmp
cmp
flds
and
pslld
fsubl
jge
sub
mov
std
into
adc
fbld
push
std
addr16
arpl
xlat
punpckhdq
cld
push
inc
and
mov
or
push
aad
rcll
popf
into
cmp
mov
cmpsb
and
lahf
push
mov
cmp
repz
imulb
dec
push
loopne
or
pop
lods
movsl
gs
mov
movsl
aad
lcall
inc
jl
jle
pop
aad
sahf
arpl
pop
mov
aaa
dec
jmp
adc
adc
das
xlat
fldt
adcl
lods
push
mov
aad
or
dec
and
inc
fimuls
fs
jmp
dec
jno
sub
idivl
aam
sub
cmp
mov
inc
adc
gs
push
into
call
push
imul
and
repnz
push
and
mov
repz
and
xchg
push
and
popl
mov
scas
jmp
sub
mov
jg
rclb
pop
mov
or
push
repnz
push
mov
in
lret
repz
into
xlat
test
enter
mov
lods
cmpsb
gs
jge
aad
push
and
xor
lods
mov
mov
aad
arpl
mov
add
stos
adcl
pop
lret
in
mov
movl
sbb
mov
arpl
sub
xchg
xchg
cmp
je
mov
les
and
jbe
shll
push
mov
jno
mov
cltd
mov
mov
xchg
push
cmp
mov
cmpsl
into
aaa
pop
test
push
iret
cltd
xchg
test
fcmove
push
pop
frstor
loope
mov
addl
aad
data16
adc
lods
mov
into
les
imul
cld
repnz
push
mov
test
add
cmpsb
testl
xchg
aad
jmp
lods
test
int3
in
pop
scas
test
jmp
adc
mov
and
jns
or
gs
inc
imull
and
add
add
and
aad
push
imul
xor
cld
adc
jl
aam
repz
and
adc
and
xchg
daa
lods
xchg
gs
jnp
adc
inc
les
lods
or
jle
pop
ljmp
xchg
sbb
bound
iret
mov
jns
push
es
dec
add
sub
sub
and
sbb
jp
jecxz
aas
or
sub
orb
and
add
int
xchg
dec
out
inc
test
stos
iret
cmp
es
push
pop
out
ja
mov
push
mov
mov
out
xchg
sub
fwait
in
arpl
xlat
ljmp
movsb
xchg
xor
scas
iret
pop
xchg
es
mov
push
mov
jo
and
xor
lods
fs
inc
sti
je
sub
mov
push
mov
or
or
loop
jo
cmpsb
daa
cmc
leave
sub
xchg
xchg
dec
inc
sbbb
iret
push
push
leave
inc
adc
inc
int3
dec
js
inc
pop
push
es
mov
mov
fwait
push
xchg
and
dec
sbb
lock
inc
popa
sub
adc
gs
dec
hlt
xor
popa
repnz
cltd
jl
sub
repz
fwait
xlat
mov
int
push
or
lret
lods
popa
adc
fdivrs
mov
into
clc
mov
jae
ja
jge
mov
aad
adc
jg
lock
int3
adc
sub
inc
inc
xlat
jp
adc
dec
cli
pop
xor
push
into
out
ss
and
mov
mov
jecxz
xor
loopne
es
lock
mov
enterw
push
aad
iret
cmp
test
dec
addr16
mov
jae
jo
push
loopne,pt
loope
push
rcl
scas
and
mov
adc
fwait
je
mov
pop
es
icebp
add
sbb
cmpsl
pop
or
mov
adc
mov
rcl
mov
ds
xchg
adc
fimuls
notl
test
clc
imull
push
xchg
xchg
adc
test
xchg
notb
or
cltd
cmpb
adc
lods
rorb
nop
cmp
vpsubb
adc
pop
shll
push
out
sub
xchg
leave
inc
add
add
push
xchg
dec
add
adc
jmp
xchg
mov
add
adc
rcrb
cmpsb
push
sub
das
shl
push
enter
pushf
inc
in
cltd
push
pop
push
shl
ja
iret
iret
pushw
pop
cs
sbb
aas
stos
cmp
push
push
sub
sarl
sub
nop
xchg
stos
inc
subb
xchg
int3
orb
mov
test
test
test
add
xchg
or
rolb
adc
ret
xor
lret
cmpb
sbb
mov
ja
adc
arpl
stos
loop
xchg
pop
push
adc
cwtl
jb
inc
xchg
ret
cltd
rdpmc
sub
lahf
inc
push
imul
adc
rclb
mov
rorb
xchg
ss
test
rorl
xchg
jmp
xchg
jno
inc
dec
or
popa
sbb
or
sub
dec
jns
mov
xor
or
xor
out
hlt
fwait
aaa
scas
lahf
aam
and
xchg
mov
pop
adc
mov
cmp
mov
dec
and
xchg
cld
mov
xchg
adc
sub
jmp
sub
jmp
and
cli
out
inc
nop
inc
addr16
adc
scas
dec
mov
adc
push
cmp
jae
sub
sub
sbb
popl
call
or
adc
xor
repnz
insb
ds
stos
pop
push
jns
push
cmpsb
push
adc
mov
orb
jnp
pop
push
xchg
dec
dec
shrb
jmp
adc
cmc
push
adc
xlat
data16
jmp
call
xor
bound
push
jae
orb
xchg
es
aaa
pop
popl
pushf
scas
add
xchg
lods
addb
xchg
jo
movsl
lock
dec
popa
add
jo
jo
bound
jno
xchg
rcl
cmp
hlt
xlat
ljmp
and
loopne
int
mov
mov
popf
adc
mov
add
adc
mov
or
add
cs
pop
adc
dec
fcomi
push
jg
jl
mul
mov
xor
fwait
popf
andl
movsb
cmp
adc
xor
je
mov
gs
or
adc
rorl
push
sub
scas
jae
push
jne
in
jne
pusha
leave
jnp
pop
mov
xorb
add
ror
ret
inc
popa
imul
je
lock
out
into
sub
mov
mov
dec
pop
dec
inc
nop
xchg
push
mov
rorl
inc
dec
xchg
sbb
xor
push
das
jp
and
jns
xor
sub
outsl
dec
push
push
vphadddq
sbb
and
fs
push
loop
nop
bound
xchg
shll
mov
mov
add
lret
push
jmp
into
aam
inc
xchg
pop
sti
loope
add
jns
jmp
std
mov
add
and
sub
ds
repnz
ds
popa
js
fistpll
inc
adcl
xlat
aam
aad
push
fstpt
dec
pushf
cmp
sub
jmp
xor
sbb
mov
inc
into
mov
clc
sub
mov
push
add
mov
les
pop
lods
add
stc
lods
ds
inc
popf
and
aad
mov
adc
sub
add
arpl
inc
jne
push
adc
jo
jl
add
fbstp
inc
fildll
and
lcall
aas
xchg
sub
or
inc
pop
test
lock
xlat
cmpl
push
mov
mov
xor
sbb
in
jmp
cmp
mov
cmp
shrb
add
adc
aas
notb
bound
add
mov
scas
lea
mov
andl
xor
outsb
cmp
xor
jno
and
fiadds
cmpb
aad
pushf
add
xor
sub
adc
pop
add
pushl
mov
dec
mov
jo
and
test
fwait
push
fbld
lock
jg
scas
das
std
cmp
or
lds
mov
mov
pop
aaa
sahf
adc
jle
cmp
push
data16
sbb
std
out
add
push
out
cmpsb
out
loope
fstpt
addr16
jnp
cli
lret
dec
movsb
adc
cwtl
mov
inc
clc
arpl
lds
jbe
stos
mov
push
fildl
scas
hlt
aas
jae
cmp
xchg
and
lret
clc
mov
ja
mov
push
das
shrb
aad
repz
gs
sub
in
push
rclb
mov
push
sub
icebp
xor
fnstenv
inc
dec
or
lret
or
jge
clc
fbstp
mov
cmp
pop
add
jo
hlt
jno
rclb
mov
and
jae
xor
and
or
cld
shlb
cmp
jmp
jo
pop
shrb
xor
pop
ja
inc
jo
mov
adc
arpl
sbb
pop
xor
and
push
ficompl
test
jne
je
mov
je
loope
pusha
jne
das
xchg
dec
inc
xchg
adc
fs
xor
add
jnp
xor
hlt
insl
cmp
pop
js
add
loope
pop
pop
push
ja
xor
push
loop
jnp
xor
mov
test
dec
cltd
sahf
sbb
xor
xchg
and
adc
xchg
insb
inc
or
mov
loopne
cmp
mov
mov
mov
adc
movsb
bound
je
and
hlt
daa
outsb
push
pop
addl
das
or
pop
outsb
fs
jg
je
push
aas
cmp
jle
add
push
and
xchg
dec
imul
sbb
mov
push
inc
push
push
data16
sbb
adc
insl
pop
xor
xchg
adc
mov
xchg
cmc
xor
leave
imul
inc
cmpsl
dec
xlat
cmp
and
dec
insl
xor
lret
cmp
into
inc
in
cmp
data16
lods
mov
cmpsl
xchg
xchg
imulb
mov
cmp
ljmp
jo
xchg
push
test
and
mov
add
sub
sbb
in
popa
out
push
add
mov
pop
movntps
cmp
push
push
outsb
aaa
imul
scas
hlt
ljmp
test
jmp
insl
int3
dec
xor
mov
push
and
and
cmp
cmp
add
js
std
dec
sub
fisubs
push
push
sbb
push
jae
adc
pop
and
and
das
xchg
push
lods
cltd
in
xor
xchg
clc
or
sub
mov
sub
inc
gs
outsl
fs
jo
or
push
sub
and
sub
sbb
imul
pop
push
addr16
xchg
sbb
xor
insb
addr16
outsb
hlt
xor
xlat
mov
add
push
je
test
inc
mov
scas
mov
xor
inc
pop
mov
call
imul
in
pusha
inc
push
adc
outsb
dec
frstor
call
call
arpl
adc
or
jmp
lcall
jmp
jecxz
popaw
lret
ret
mov
cltd
hlt
dec
adc
mov
or
adcb
and
dec
or
shll
mov
cltd
sbb
fldenv
or
cld
and
mov
adc
mov
mov
jle
rorb
jae
push
popa
loop
roll
inc
inc
out
and
stos
test
xor
ss
mov
pop
fucomi
dec
and
or
pop
loop
outsb
popa
testb
jno
cmpsb
jo
mov
xor
pop
push
inc
pop
sub
das
bound
pop
movsl
xor
dec
dec
inc
or
xlat
xchg
fldl
mov
sub
sub
cmp
ret
or
jl
dec
insl
jmp
pop
sbb
mov
jmp
or
subl
xchg
mov
aam
or
push
imul
xchg
loope
sar
xchg
ds
dec
dec
sbb
jne
dec
clc
and
xchg
xor
rolb
sub
mov
and
outsl
movsl
testb
jne
xchg
jns
push
loop
ja
sub
rcrl
fistl
dec
lock
sub
mov
adc
jae
pop
add
xor
inc
pusha
ljmp
fbstp
psubd
bound
jp
cli
test
cmc
dec
jecxz
repnz
adc
inc
movsl
dec
jne
inc
add
dec
mov
cmp
add
mov
cmpsb
xchg
or
inc
nop
mov
mov
push
and
jb
cmp
outsb
pop
push
aaa
or
push
test
movsl
xchg
fmuls
jno
sbb
push
pop
cmpsb
sub
inc
outsb
add
jmp
lcall
jno
pop
stc
sbb
dec
rcrb
js,pn
dec
push
push
scas
lods
ret
in
inc
les
push
push
or
gs
scas
outsb
jno
out
in
mov
mov
shlb
cmp
movsl
add
addr16
push
into
pop
mov
adc
xor
lcall
jp
jbe
push
inc
jmp
push
ja
cmpxchg
bnd
push
jl
cwtd
popa
cs
push
inc
cmp
adc
sub
push
and
lock
push
push
fcoml
push
adc
int3
mov
cli
inc
cs
imul
fwait
xchg
insl
mov
and
setb
insl
cli
or
les
out
add
cmp
or
push
xchg
push
jp
sub
cmp
jne
xlat
aaa
adc
sub
and
in
insl
sbb
divb
je
mov
inc
push
js
add
mov
dec
and
bound
aam
inc
daa
mov
push
or
loop
lea
sbb
inc
cmp
or
or
push
pop
sbb
divb
push
call
mov
pusha
push
and
es
rcrl
push
pop
wbinvd
and
bound
and
pop
sbb
push
and
aas
sarb
jne
int
add
into
jp
push
or
cltd
or
ret
loop
inc
adc
mov
mov
test
mov
ffree
bound
xor
push
push
jne
jno
jg
jno
pop
jg
cmp
loope
icebp
mov
iret
xchg
in
out
popa
xor
loopne
mov
mov
sti
outsl
dec
paddb
cld
pop
js
fcompl
push
lods
cmp
add
iret
cltd
mov
dec
push
lret
mov
inc
loope
fs
dec
loop
or
push
icebp
mov
add
and
jle
pop
add
add
lds
pop
push
sub
out
xorb
out
popf
cmpsl
or
sahf
ds
out
mov
mov
call
mov
lock
jae
inc
cmp
fimuls
out
mov
mov
popa
and
jg
sbb
popa
push
adc
loop
and
inc
inc
nopl
or
pusha
xlat
and
add
and
outsl
data16
mov
push
cmp
ror
movsl
out
pop
cmp
lret
adc
cmpsl
or
cld
iret
xchg
arpl
divl
jne
or
jg
pushw
ss
add
sbb
push
push
bound
push
adc
push
push
adc
mov
push
or
loop
shrb
jnp
scas
loopne
xchg
push
jo
jl
xor
rolb
jno
jle
testb
push
sub
pop
or
inc
shll
mov
lea
nop
push
mov
inc
sbbb
sbb
pop
pop
push
std
add
flds
dec
push
mov
imul
imull
es
insl
push
add
sbb
jbe
sbb
dec
pop
jne
sub
inc
add
outsl
lret
shlb
call
mov
add
mov
popf
fcoms
loopne
xchg
push
dec
adc
xchg
lds
adc
test
enter
dec
cwtl
test
rcll
and
rolb
and
inc
pushf
mov
adc
inc
push
or
adc
cmpsl
inc
inc
das
movsb
jbe
es
jle
sub
pop
fs
or
data16
repnz
psubw
out
jbe
xchg
jns
adc
xchg
sub
add
jmp
cmp
imul
and
xor
adc
cs
inc
add
cmp
xlat
xchg
in
loop
jno
and
mov
pop
sbb
jg
shl
mov
test
fdiv
mov
jnp
push
mov
pop
sbb
add
lea
cmp
inc
adc
dec
and
dec
add
scas
je
pushl
shll
adc
into
pop
mov
or
inc
push
je
shrb
add
adc
test
pop
nop
gs
sub
and
adc
inc
xor
popa
inc
sub
es
addr16
push
pop
mov
xchg
jmp
sbb
jmp
sarb
cwtl
out
sbb
xchg
mov
sti
loope
sub
cmpsl
div
scas
jmp
pop
add
cmc
mul
popa
sbb
cmp
add
jno
dec
dec
popa
push
xchg
pusha
mov
jne
mov
stos
mov
inc
data16
mov
popf
testl
adc
jp
sbb
jg
adc
addr16
in
adc
inc
sub
lcall
loop
into
scas
stos
xchg
shrl
iret
mov
mov
push
jmp
inc
cs
or
and
fadd
roll
pmullw
loope
adc
pop
mov
add
mov
jle
test
mov
mov
push
xor
mov
sbb
sbb
sbb
or
or
dec
and
nop
mov
ljmp
lock
jno
mov
mov
lea
fs
outsb
adc
inc
inc
movups
sub
jge
cmp
fdivl
add
sub
sub
cmp
or
sahf
or
cmp
adc
ljmp
jle,pt
in
mov
pop
lcall
add
mov
stc
insl
lcall
lods
mov
lahf
jp
lods
lock
addb
pop
out
repnz
pop
pop
mov
or
bound
cli
and
push
and
cmpsl
xchg
mov
pop
jg
lret
cmpsb
xor
and
add
xchg
xlat
mov
rcll
icebp
push
test
and
je
hlt
adc
jbe
xor
push
dec
jnp
sub
arpl
out
mov
dec
rcll
xor
call
jg
fcomip
ficoms
and
pop
sbb
xor
or
ror
mov
lods
and
and
mov
sbb
mov
push
cs
sbb
decb
adc
and
jo
rclb
nop
sub
insl
and
scas
nop
shl
dec
pop
push
sub
jno
sbb
das
adc
inc
imul
fwait
dec
sti
dec
addr16
and
leave
pop
push
or
inc
and
pop
jp
mov
test
mov
out
mov
lds
js
daa
ljmp
mov
pop
pop
sub
mov
cmc
pop
popf
pop
rcr
xchg
sbb
sbb
lds
je
adcb
pop
push
fcompl
gs
int3
in
test
add
dec
ret
pop
mov
jne
in
mov
cmp
and
xchg
push
adc
inc
nop
xchg
pop
sub
shrl
icebp
out
pop
jae
jecxz
jae
xor
pop
jbe
mov
xchg
inc
inc
inc
fidivrl
testb
sub
sub
inc
xlat
push
sbb
jo
cs
dec
sahf
sub
subl
fcomip
in
xchg
push
fdivr
xor
sbb
pop
loope
or
jne
aam
out
sbbb
or
or
jnp
adc
or
and
or
leave
cwtl
scas
sub
scas
xchg
fiaddl
daa
clc
cmp
xchg
xor
aad
lods
mov
jl
mov
iret
mov
add
test
scas
arpl
mov
in
inc
mov
popf
lods
pusha
sbb
sbb
mov
cmp
lods
in
push
sub
push
fcoms
sbb
fprem1
add
lahf
adcb
inc
cmpsw
cmp
pop
inc
fiadds
add
push
cltd
aam
pop
fstps
mov
shl
sbb
das
jg
dec
out
in
push
and
push
push
xor
mov
add
add
inc
mov
push
aad
mov
fistl
pop
or
xor
je
repz
pushf
mov
xor
sahf
jo
js
jmp
mov
shrl
push
scas
and
mov
fs
sbb
push
pop
inc
lods
or
movl
sub
sbb
jnp
mov
jge
jbe
jns
add
clc
add
xlat
lock
and
je
jnp
enter
fcmovnbe
int
mov
mov
lcall
mov
add
pop
dec
repz
inc
pop
js
sbb
movsb
pop
es
push
ret
mov
shll
xchg
jo
pusha
jge
call
dec
push
xchg
loopne
push
lret
push
xchg
push
mov
cwtl
add
cli
mov
pusha
xchg
inc
lret
dec
mov
inc
sub
or
fnstcw
inc
jo
iret
push
ja
insl
dec
pop
inc
and
dec
dec
xchg
fstps
popa
push
adc
inc
pop
mulb
cmp
inc
aas
push
adc
dec
sub
inc
sub
dec
dec
hlt
lcall
push
mov
loope
adc
pop
xor
outsb
or
push
mov
out
in
mov
fs
es
aad
inc
xchg
pushf
repz
sbb
cs
loopne
mov
jo
xor
inc
inc
in
jl
pop
xor
inc
inc
lret
dec
and
pop
add
inc
addl
inc
add
dec
call
sbb
int3
imull
push
jne
inc
cvttps2pi
fnstsw
or
dec
inc
sub
jl
dec
inc
popf
rolb
jecxz
es
push
ss
loopne
inc
aam
fimull
sub
jae
push
jns
movl
pop
dec
bound
mov
push
test
sbb
inc
aaa
aas
or
sbb
insl
push
dec
cmpl
test
or
dec
push
jb
daa
xchg
mov
pop
or
mov
in
loopne
jp
movsl
and
repnz
inc
inc
int3
je
sub
adc
ja
cwtl
outsb
and
enter
leave
pmaxub
pop
sbbl
pop
xchg
pop
sti
ficomps
jbe
jne
stos
lods
gs
pop
gs
rorl
mov
ja
aaa
stos
dec
lret
int
mov
push
push
fwait
enter
pop
rcll
or
cmp
shl
add
jle
ja
in
pop
pusha
xor
sbb
in
inc
js
mov
sbb
inc
int
movsb
in
or
adc
push
pop
push
rorl
arpl
dec
push
add
inc
movsb
std
and
fcomps
movsl
ss
mov
outsb
pop
inc
dec
inc
outsb
dec
gs
add
cs
dec
sub
jmp
sbb
test
push
dec
xor
inc
fnstcw
inc
cmp
or
repnz
ds
cld
movhps
pusha
inc
insb
adc
pusha
aas
jnp
pop
adc
inc
pop
jne
or
imull
inc
ljmp
cmp
inc
cmp
jne
or
xor
and
out
dec
add
cmp
out
test
adc
or
push
adc
mov
dec
stos
ds
jbe
or
lret
sub
xor
cmp
pushf
dec
mov
inc
pusha
and
jne
fmull
or
xor
push
xor
sahf
xchg
dec
push
push
popa
imul
pop
xchg
iret
imul
xor
ss
mov
push
mov
lea
sub
aam
movsb
mov
into
cld
jnp
insl
push
fistpl
repz
jmp
addr16
mov
stos
add
xchg
jg
sub
scas
loopne
and
insl
orl
pop
xor
out
cmp
jno
lods
fdiv
imul
pop
mov
push
and
dec
push
or
imul
out
call
sbb
in
or
testl
rsqrtps
insb
dec
ja
imul
ds
or
sub
jns
cmp
sub
adc
and
shl
stos
sub
jbe
xchg
jle
test
stc
and
hlt
adc
dec
clc
mov
repnz
add
mov
popa
add
pusha
in
adcb
xchg
mov
or
cmp
les
mov
cmp
mov
shlb
dec
adc
addr16
jp
jno
outsb
mov
add
lods
sbb
jno
inc
push
or
cmpsb
mov
sub
jp
cmp
jge
imul
lret
scas
loop
pusha
stos
cli
sbb
xor
inc
nop
push
pop
sub
sub
jnp
lods
jge
jmp
jp
stos
push
cmp
pop
add
in
or
adc
call
clc
sub
mov
sbb
jo
ret
in
insb
dec
pop
testb
dec
xor
push
inc
in
jmp
dec
inc
jae
push
aad
stc
pusha
sbb
sbb
mov
adc
jns
mov
mov
aad
mov
pop
rcl
in
cmpsb
mov
dec
cmp
lcall
roll
orl
inc
pop
rcrb
ret
and
inc
xor
adcb
test
push
and
add
es
add
or
test
ja
rclb
push
inc
mov
xchg
sub
dec
add
pushf
adc
dec
data16
mov
xor
imul
dec
dec
inc
aad
sub
pop
add
bound
and
insl
xor
mov
or
inc
push
mov
jnp
push
add
mov
dec
inc
adc
fisttpll
popa
mov
repnz
popa
jbe
push
outsb
js
loope
cmp
mov
cmpsb
mov
pop
jns
dec
outsb
fiaddl
dec
sbb
into
ja
fs
ja
test
lods
mov
das
les
lret
shlb
ds
fidivs
mov
test
add
push
push
es
lock
das
repz
scas
jmp
sbb
fisttpl
outsl
push
es
jnp
sbb
or
mov
push
faddl
xor
inc
xchg
adc
sub
or
pop
adc
and
pop
cli
movups
mov
in
sub
nop
sbb
out
pop
add
mov
xor
jecxz
jp
iret
mov
xor
clc
lgs
fistpl
dec
mov
add
enter
movsb
lcall
lods
cmp
pusha
into
xchg
cli
lods
daa
pop
jecxz
inc
push
mov
jns
xor
sub
add
and
mov
xor
dec
popa
mov
jb
in
subb
sub
cmp
mov
mov
imul
xlat
into
dec
test
stos
and
and
jnp
jp
rcll
fstsw
push
adc
xor
xor
addr16
add
shrl
push
and
xchg
pushf
push
je
and
and
cwtl
xor
jbe
sub
sbb
mov
pop
ficoms
or
js
incl
sbb
fwait
xor
push
and
xchg
dec
jno
sbb
test
push
inc
out
push
hlt
loope
imul
das
xchg
lret
subl
decl
test
mov
lock
lahf
cmpsb
jb
negl
hlt
imul
jmp
jne
mov
repnz
and
add
call
test
aaa
or
jp
stos
xchg
addr16
inc
mov
imul
mov
jnp
dec
inc
repz
jo
add
adc
jae
mov
rcll
xchg
mov
data16
dec
in
dec
aad
fucomip
stos
adc
les
sbb
jg
sbb
mov
sub
pop
adc
jne
stos
jp
cmp
sub
mov
test
push
mov
xor
cmc
or
inc
test
sub
shr
outsl
or
sbb
loop
loop
lcall
outsb
push
mov
mov
adc
push
outsl
dec
outsl
and
std
sub
cmc
xlat
hlt
out
inc
jne
push
mov
in
sbb
dec
sub
xchg
sub
inc
gs
jb
sbb
dec
xchg
pop
loopne
or
adc
xor
adc
sbb
and
push
cmp
mov
mov
add
xchg
mov
inc
jns
dec
adc
inc
xor
jle
inc
jg
gs
shrb
push
jmp
es
int3
xchg
dec
pop
stos
and
jecxz
fisubrl
pop
out
mov
and
xlat
dec
stos
cld
icebp
adc
and
loop
push
insl
stc
arpl
add
in
dec
sub
stos
pop
popf
jno
sub
sub
or
push
push
pop
out
push
push
mov
xchg
movsb
js
clc
lret
jge
adc
lahf
xchg
popf
pop
rorb
push
sbb
dec
and
jbe
inc
add
scas
daa
and
cmp
stos
notb
insb
bound
repz
sub
jecxz
pop
lret
ficompl
lret
insl
jnp
ljmp
ljmp
push
shlb
pop
das
addr16
stos
loope
pusha
imul
pop
dec
fists
loopne
fucomi
out
clc
hlt
and
es
cwtl
mov
cmc
xor
fldenv
push
addr16
lea
push
xor
test
pop
loopne
inc
mov
cmc
bnd
push
clc
sub
testb
daa
or
dec
in
xchg
push
sbb
cld
and
push
les
and
out
das
jle
push
repnz
mov
cmp
cs
aam
daa
lret
movsb
inc
sti
in
aam
daa
out
rolb
or
imul
das
loope
dec
fs
push
jno
dec
insl
pop
xor
adc
das
sbb
jp
and
nop
cmc
mov
cmpsb
ss
jle
mov
ss
dec
cltd
or
add
pushf
add
icebp
or
stos
xchg
xor
jnp
popf
ret
rclb
imul
loop
xchg
pushf
cmpsl
and
dec
insb
sub
pop
xor
fcomp
add
gs
jo
inc
mov
ljmp
and
pop
mov
adc
lods
sbb
fs
sbb
mov
outsb
cmp
inc
sbb
pop
cli
clc
pop
mov
mov
out
pop
insb
xor
mov
inc
add
dec
push
and
adc
xchg
out
jb
sahf
mov
adc
add
in
xchg
dec
jge
in
sbbb
sub
repnz
jns
xchg
jne
and
nop
push
dec
stos
outsl
addr16
jne
enter
inc
mov
sub
sub
jns
xchg
in
sbb
fsubrl
lret
popf
push
gs
pop
sub
mov
dec
out
xchg
dec
sbb
mov
out
xor
test
and
or
cmc
xlat
sbb
movb
adc
insb
icebp
dec
jno
movsb
ljmp
adc
inc
dec
add
sbb
js
pop
add
sub
and
pop
jo
jns
push
sbb
pop
pop
dec
cmp
dec
loopne
inc
lods
sub
dec
lahf
sbb
jg
add
adc
sbb
dec
test
mov
cmpsb
or
add
jl
ret
sbb
xor
gs
push
mov
push
aas
insl
das
xor
mov
lret
jne
lock
mov
shlb
addr16
adc
xor
inc
stos
jecxz
jb
or
add
xchg
ds
push
lock
mov
enter
push
mov
das
jmp
mov
lahf
sub
roll
xchg
repnz
mov
add
push
fsubrp
outsb
or
jb
bound
mov
xor
sub
xchg
sti
repz
mov
outsb
sbb
stos
sbb
ror
mov
out
and
mov
addr16
jnp
xor
mov
lret
jmp
and
stos
or
adc
addr16
into
aam
lods
scas
push
pop
jl
inc
pop
xor
rcrb
mov
jecxz
and
jmp
mov
sahf
add
sub
sub
cs
or
aam
nop
jp
xor
lret
ret
adc
add
int3
in
ss
loop
aaa
push
push
xor
sbb
sbb
xchg
imul
or
add
inc
pop
test
add
outsb
dec
or
xor
push
push
jle
sbb
xor
dec
or
push
and
and
add
stos
outsb
add
ret
and
xor
jle
add
sbb
rcll
inc
dec
test
jae
xchg
jmp
lcall
adc
test
mov
xchg
lods
divl
clc
fcmovnu
xor
out
mov
xchg
or
lds
and
xlat
pop
and
jl
dec
jl
lcall
and
mov
cmp
or
and
and
adc
dec
xor
mov
jno
xor
xchg
push
lods
mov
jb
sbb
into
lahf
loop
xor
fisubs
jns
pop
inc
dec
loopne
rolb
negl
adc
sbb
mov
dec
pop
into
or
or
and
mov
and
adc
add
popf
lret
cmpsl
pop
add
sbb
repnz
ret
mov
ds
out
pop
popf
or
mov
push
sub
inc
mov
or
sahf
add
fbld
call
aas
dec
sub
mov
arpl
mov
mov
and
pop
and
add
jae
sub
lock
xchg
mov
dec
or
ss
arpl
cmp
cs
jae
inc
pop
je
lcall
les
sub
ljmp
inc
xchg
sub
add
mov
gs
xchg
mov
or
pop
sbb
or
inc
or
fwait
and
adc
or
sbb
push
cld
xchg
bound
test
mov
mov
dec
into
jge
inc
jne
mov
and
pop
sbb
repz
bound
int
push
mov
mov
jle
in
push
push
out
add
mov
jg
sbb
testl
pop
ficoml
jns
cltd
andl
imul
cmp
pusha
push
push
ret
inc
pop
pop
inc
test
test
sbb
je
pop
std
insb
mov
jecxz
dec
xchg
movzwl
dec
sub
jle
adc
mov
loopne
mov
gs
add
popa
adc
push
pushf
js
ret
inc
icebp
pusha
and
fs
push
je
mov
dec
jno
sbb
cmpsl
mov
sbb
pop
sbb
add
push
and
rclb
pop
push
sti
mov
not
popf
mov
cmp
push
push
mov
movsb
or
add
jns
mov
arpl
sbb
pop
add
mov
movsb
test
jge
mov
inc
dec
sahf
mov
cmp
stc
xchg
std
cmc
pop
sbb
jl
sub
sahf
out
lret
dec
lahf
pop
mov
gs
xor
loope
pop
sbb
xor
add
int3
pop
out
repz
pop
jnp
inc
rolb
mov
aas
popf
outsb
subb
dec
jae
inc
ds
sbb
andl
sbb
sbb
stos
or
lret
add
push
jecxz
lret
add
jns
leave
iret
sbbb
daa
cmp
pop
int3
fmull
nop
in
insl
hlt
shll
pop
sbb
dec
sbb
out
xor
test
es
pop
jg
mov
jge
clc
add
add
mov
aam
push
cmp
stos
in
add
jmp
inc
xor
pop
mov
in
jle
fisttps
mov
xchg
jl
add
inc
inc
je
xor
push
sbb
inc
out
into
stos
adc
fistpll
idivb
fs
add
hlt
in
inc
mov
jne
push
repz
in
popf
add
in
pop
and
out
fdivp
xor
add
xchg
pop
add
stos
dec
adc
mov
cs
add
xchg
jbe
mov
and
fs
jae
aad
sub
into
es
jl
dec
add
aas
setp
lret
add
sarb
sub
mov
stos
fsubrs
mov
dec
xor
inc
adc
or
add
cli
cmp
mov
xchg
adc
call
jno
outsl
jno
test
add
cwtl
notb
adc
add
jbe
cli
cmpsl
out
sbb
test
push
in
mov
call
jnp
push
enter
je
ds
je
inc
add
shlb
pop
inc
sub
notb
pop
xlat
sbb
adc
xorl
add
adc
mov
sub
ds
out
adc
inc
cmp
lds
aas
inc
pop
jns
lcall
ret
cmpsl
aam
in
xor
and
xchg
mov
hlt
das
fldenv
test
xchg
add
call
loope
xor
push
pop
in
popa
xchg
push
sbb
mov
xbegin
out
inc
icebp
ret
dec
mov
cltd
xchg
and
mov
xor
mov
jbe
out
sub
xchg
stos
popf
ret
pop
add
in
in
mov
xchg
call
pop
out
add
and
or
push
or
inc
cltd
inc
dec
xlat
mov
jne
xchg
data16
cmp
and
push
leave
or
aas
popa
push
cmpsb
push
push
scas
sub
pop
popa
push
or
arpl
xchg
xchg
addr16
cmp
repnz
add
stos
push
xor
and
inc
cmc
loope
push
outsb
inc
mov
jbe
scas
loop
and
sbb
inc
test
cmp
cmp
push
sub
in
or
adcb
lret
insb
sarb
inc
fwait
xor
bound
rcrl
mov
xor
outsb
lds
pop
cli
sahf
mov
outsl
add
dec
mov
addl
notl
fildl
xchg
cmp
daa
jle
push
inc
cs
push
test
sti
jno
pop
icebp
mov
add
jae
and
dec
rorl
and
dec
sub
insb
jnp
stos
add
sub
or
mov
sub
adc
jle
xchg
daa
movsb
xlat
enter
dec
cmp
mov
mov
dec
call
pop
orl
lret
fwait
jo
std
repz
cmpb
mov
add
adc
sbb
jb
adc
adc
sbb
mov
stos
add
mov
push
jbe,pt
popa
lret
fadds
bnd
sbb
dec
jne
pop
xchg
pop
dec
add
pop
loop
add
dec
add
sub
clc
add
adc
xor
repnz
cmp
pop
stc
out
adc
cli
cmpsl
add
insb
shll
adc
out
cld
or
adc
inc
sub
rcr
dec
mov
nop
int
mov
xor
mov
or
cmpl
inc
sbb
out
scas
or
adc
ret
mov
sub
lcall
out
mov
test
lret
fdivrs
nop
roll
or
dec
mov
inc
aaa
cmp
adc
pop
dec
sub
push
lock
or
dec
dec
cmpsb
hlt
pop
test
fbld
lret
inc
in
add
inc
scas
cmp
arpl
sbb
scas
xchg
push
adc
icebp
movsb
add
add
leave
jp
pop
or
cmpsb
cmp
push
movsb
addb
call
mov
inc
rcrl
dec
and
cmp
and
ret
rolb
sub
dec
test
xor
stos
pushf
jle
push
dec
sub
movsb
outsb
jo
or
dec
cltd
stos
cli
mov
jae
dec
jne
leave
jecxz
sbb
and
mov
movsb
jno
adc
cmp
clc
jmp
std
addb
pusha
xor
fs
loopne
xor
mov
stos
out
mov
dec
dec
jne
dec
push
inc
lret
pop
cmp
mov
pop
test
jae
or
cmc
sbb
stos
lcall
inc
subl
ret
movl
mov
les
rclb
pcmpgtb
loop
adc
inc
xor
inc
adc
pop
mov
leave
push
dec
adc
pop
cmp
push
xchg
mov
dec
mov
jl
cmp
scas
mov
jmp
xor
jge
inc
fdivr
data16
inc
inc
sub
mov
test
push
jl
cmp
ret
mov
dec
decb
push
mov
inc
nop
mov
mov
leave
aam
mov
test
or
add
dec
mov
or
and
and
es
cld
aas
mov
push
fwait
popf
into
cmpsb
inc
push
pop
idivb
es
mov
jne
jo
add
mov
and
stos
fistl
leave
mov
push
jmp
push
mov
pusha
idivl
and
pop
bound
xchg
sahf
int
pushfw
test
adc
pusha
push
xchg
jo
xor
mov
orl
dec
push
and
sbb
int
sbb
mov
cmp
nop
and
xorl
lcall
mov
add
inc
sbb
fcmovnbe
dec
sahf
jne
push
addr16
or
hlt
mov
dec
push
cmp
imul
sbb
dec
addr16
dec
mov
out
xor
adc
cwtl
push
pop
dec
ret
jne
std
pop
xchg
push
mov
or
add
or
mov
aad
scas
add
push
lods
pusha
xchg
xchg
push
scas
mov
into
mov
or
jle
insb
sbb
inc
mov
test
inc
pmaxsw
inc
sahf
sti
xchg
addr16
inc
push
or
testl
fimull
mov
jl
in
or
and
and
jg
mov
fisttps
mov
fwait
outsb
xor
xchg
call
pop
movsb
lahf
inc
xor
call
cmovge
ret
cmp
mov
clc
adc
or
test
mov
pop
or
push
mov
mov
fucom
lret
in
pop
popf
dec
add
mov
add
aad
jnp
mov
sbb
add
imul
sub
loop
sbb
or
int
inc
add
das
lock
adc
push
repz
bound
addl
sub
and
mov
push
es
pop
mov
aaa
das
sbb
loop
jmp
jns
sub
movsb
sub
insb
add
pop
jmp
in
mov
leave
jmp
aaa
je
imul
sub
arpl
mov
jbe
mov
pop
ljmp
jne
ljmp
or
xchg
pop
loopne
push
movsb
jnp
test
adc
outsb
add
adc
div
sbb
pop
lcall
jnp
xchg
in
push
popa
outsl
dec
shll
addr16
cltd
push
jg
mov
int
testl
test
loopne
sub
cwtl
jne
pop
pop
idivb
jnp
dec
pop
jbe
push
lds
mov
or
ds
xor
xor
jp
cmpb
movb
lret
sub
mov
jns
movsl
or
mov
lret
add
push
push
dec
ss
jecxz
or
push
or
shll
xor
sbb
jnp
cmp
call
mov
mov
ficoml
iret
cmpsb
mov
inc
xor
mov
and
jnp
xchg
mov
in
ret
mov
jle
mov
arpl
add
das
lahf
inc
jge
daa
push
xchg
push
xor
xor
inc
pop
xor
xor
dec
adc
cltd
or
ljmp
movsl
xor
cld
and
push
mov
das
sahf
sub
cmc
je
stos
shl
imul
hlt
mov
push
movups
pop
add
xchg
in
pop
adc
mov
jle
adc
cli
cli
cli
xchg
sub
and
sahf
add
iret
repnz
ficompl
inc
out
dec
jb
adc
xchg
iret
xchg
mov
dec
inc
sahf
pusha
jp
mov
cmp
xlat
adc
fstpl
call
loop
sub
mov
mov
jecxz
xchg
inc
push
mov
lock
push
or
mov
movb
or
add
gs
sbb
push
dec
jae
and
out
je
rorb
jle
mov
les
xor
add
or
or
ret
into
outsb
rolb
inc
in
sarl
push
mov
aaa
xchg
scas
bound
or
call
pshufw
clc
testb
push
mov
mov
ljmp
push
int3
xor
mov
jnp
cmpb
cmp
call
xor
sbbb
loope
jo
fs
push
cli
inc
daa
loop
ret
mov
jnp
daa
stos
pop
insb
and
push
out
inc
or
lret
fs
pop
loope
fidivl
test
jno
notl
xchg
pop
jae
xchg
push
outsl
jge
in
icebp
push
sub
pop
les
add
jns
xchg
leave
add
ds
sub
enter
jae
xor
push
mov
pusha
pop
addl
lcall
cmp
inc
mov
shl
aas
mov
bound
insb
mov
sbb
aam
fstpt
clc
push
xor
imull
mov
cmpsb
add
and
stos
inc
jmp
ror
sar
xchg
push
mov
mov
movsl
sub
out
lret
push
scas
mov
pop
and
loope
xor
xchg
sub
xor
mov
imul
and
fiaddl
test
add
sbb
push
lahf
fst
sbb
push
negb
pushf
loope
cmp
sahf
fsts
out
loop
adc
gs
xor
push
pop
pop
xor
pop
xchg
imul
pushf
js
jb
jbe
xor
cld
and
jl
push
repz
push
loop
jo
xlat
call
pop
adc
pop
movlps
cmp
inc
sub
cmp
adc
leave
mov
rclb
mov
cld
xchg
cmp
xchg
xor
adc
int
adc
sub
and
mov
dec
cmp
cmp
gs
iret
aaa
and
pop
or
sbb
test
pop
fistpll
add
cmp
adc
aad
cltd
jb
adc
xchg
or
repz
and
imul
xor
pop
dec
in
into
mov
mov
js
daa
xchg
xor
inc
popa
jle
daa
inc
outsl
jbe
aaa
lock
movsb
xchg
data16
mov
fs
xchg
in
push
jge
test
push
mov
insb
test
sbbl
jle
xorl
inc
loope
cmpl
pop
jno
mov
jge
jne
subl
jnp
das
cmp
stos
pop
lret
testb
and
mov
pop
je
out
mov
xchg
mov
data16
test
out
add
cmp
cmp
mov
pop
aad
add
dec
xchg
ja
push
mov
fwait
aam
imul
les
dec
jo
dec
adc
arpl
pop
mov
mov
or
rorl
mov
inc
add
mov
lock
push
xchg
les
push
addb
jmp
or
add
stos
dec
push
mov
les
sub
inc
mov
or
mov
push
or
pop
mov
out
in
mov
ja
add
and
hlt
int3
push
inc
or
xor
or
adc
push
mov
cmp
add
cmp
mov
ljmp
popa
jle
push
popf
inc
addr16
mov
jo
dec
bound
adc
lods
ret
inc
jmp
repnz
add
lea
das
lods
or
xchg
push
imul
notb
xchg
js
test
adc
mov
adc
repnz
call
xorb
and
jae
dec
dec
iret
mov
jnp
pushf
mov
and
aad
out
add
mov
jae
and
loope
movsb
push
jne
dec
sub
add
cmpsl
repz
dec
incb
xchg
sub
faddl
shll
push
xor
not
jg
pop
mov
adc
sbbl
lods
jmp
mov
add
mov
mov
inc
xor
aas
inc
or
dec
xor
adc
js
xor
push
mov
dec
pop
jnp
lods
fmul
inc
movsl
aas
ljmp
sub
pop
or
mov
mov
adc
sbb
dec
xchg
add
mov
imul
push
sbb
push
testb
lock
loop
xor
jno
dec
lea
sub
adc
jbe
xor
dec
fnstsw
and
xchg
outsl
in
sub
jmp
jb
rolb
jbe
inc
call
repz
jp
mov
andl
pop
stos
mov
into
and
jno
insb
ficomps
xchg
das
dec
mov
push
shlb
sbb
ljmp
scas
movsb
iret
add
fcmove
aaa
inc
arpl
dec
insl
jmp
push
cwtl
adc
xor
dec
aaa
xlat
mov
xor
inc
and
ror
push
inc
dec
adc
lea
mov
mov
mov
add
pop
test
out
jns
inc
mov
mulb
enter
fcomp
push
lahf
push
adc
stos
divl
fs
add
dec
mov
cmp
ja
mov
repnz
mov
pop
or
push
rclb
push
cmp
inc
jmp
sub
jl
ja
mov
movsl
imul
int3
pop
mov
pop
pop
cmpsb
ss
int
add
shl
sbb
adcl
dec
aam
fsubrl
pop
inc
fildll
mov
mov
and
xor
dec
idivb
hlt
ficoms
mov
orl
push
fstl
fnsave
push
dec
pop
ljmp
mov
in
xchg
popa
fisttpl
loop
pusha
push
xchg
xor
js
adc
aam
outsl
add
fstpt
cmp
sbb
pop
stos
inc
cmpsb
insl
mov
cld
ret
ds
shll
arpl
sbbl
fst
sub
pop
sbb
or
hlt
push
pop
cli
xchg
jb
dec
add
icebp
mov
lock
movb
bound
and
push
mov
in
jl
int
mov
adc
xor
adc
mov
xor
ret
xchg
push
sti
adc
dec
test
inc
loope
push
es
push
mov
and
and
cmp
adc
rcr
fwait
jl
and
loop
or
and
cs
push
add
xchg
sbb
jne
dec
popa
ja
mov
mov
adc
data16
dec
movsl
aam
jbe
or
adc
jbe
jb
mov
in
xchg
adc
jmp
and
std
push
or
adc
das
daa
dec
clc
aam
and
jl
xor
lods
inc
jg
sbb
movsb
mov
repz
push
pop
mov
in
lock
push
xchg
xchg
or
popa
push
mov
fiaddl
add
sbb
lahf
mov
in
mov
sub
insb
mov
push
cmp
dec
adc
inc
sub
fistps
popa
xchg
adc
push
enter
and
mov
sub
aaa
cmp
cli
cmp
mov
dec
lods
and
je
mov
lea
cs
daa
mov
pusha
add
fldenv
in
clc
inc
mov
cmp
insl
stos
jns
imul
hlt
pop
aas
icebp
inc
mov
cmp
inc
sbb
xor
rorb
and
sub
cmpsb
xchg
loop
xchg
shrb
pop
clc
push
stos
add
adc
ljmp
repz
movsl
inc
mov
int
rolb
cmpsl
pusha
mov
xor
push
mov
ficoms
into
repnz
sub
inc
cmp
fisubs
pop
mov
pop
out
les
xchg
hlt
ret
inc
or
jg
adc
in
dec
push
cmp
dec
push
sub
not
cmp
stos
fisttpl
xchg
clc
or
lahf
loop
pop
adc
xor
jl
cmp
mov
cmp
enter
cld
dec
jp
push
pop
mov
je
push
sbb
fwait
stc
loope
or
xchg
ret
iret
aam
or
stos
add
push
adc
cmp
dec
mov
or
in
addr16
add
insb
orb
inc
sbb
ljmp
push
aad
aas
jmp
and
inc
fistps
out
stos
cld
xor
inc
scas
nop
cmpsl
rcll
popa
xchg
daa
and
lds
jmp
cmp
jmp
out
mov
outsl
add
outsb
sub
xchg
js
je
bsf
mov
xchg
inc
iret
sti
out
aaa
sbb
fistpl
bnd
int3
mov
jmp
ja
add
arpl
adc
xchg
and
icebp
push
mov
lds
ja
pop
fldenv
outsl
rcrl
lea
test
std
mov
xor
mov
fs
sbb
mov
add
lcall
leave
gs
fdivrl
or
in
shll
dec
into
faddl
negl
and
xor
loope
jae
push
adc
cmp
or
sbb
or
lods
mov
es
mulb
pushl
test
aam
jnp
sbb
cld
cli
mov
je
mov
repnz
pop
aam
movsb
loope
repz
sub
push
imul
in
popf
jns
out
outsl
adc
jnp
lods
fimull
andl
rorb
pop
sub
add
shll
cmc
jne
jo
test
mov
push
mov
xor
mov
xchg
add
jl
clc
les
xor
fsubrs
mov
popa
inc
pop
lock
aam
pop
push
stc
adc
clc
aad
sti
fildl
pop
shr
out
mov
das
adcb
les
mov
lcall
sub
popf
in
idiv
jbe
ljmp
rolb
mov
fisubl
ljmp
adc
cwtl
es
xor
sbb
and
pop
ljmp
and
mov
lahf
sti
mov
repz
pop
loope
push
int
test
pop
mov
mov
jge,pn
dec
fisttpll
popa
and
test
xlat
adc
adc
xchg
imul
popf
adc
lret
mov
cld
push
test
test
outsb
sarl
arpl
mov
dec
jle
aam
aad
jae
add
rcrb
xor
push
pop
mov
push
call
mov
push
into
call
xchg
mov
je
ja
push
or
ret
and
xchg
add
mov
movsl
pop
jo
add
pop
inc
cmp
and
cmp
subl
xor
jne
add
and
inc
in
and
mov
clc
scas
cmp
xchg
or
push
add
dec
pop
push
jle
lods
mov
test
inc
dec
das
ja
add
sub
repnz
in
mov
fxch
lock
dec
sub
or
aas
mov
repz
shll
or
repz
and
and
xlat
and
in
or
push
mov
xchg
sub
testl
lret
xor
mov
lcall
mov
clc
cltd
insl
movsl
pop
mov
iret
in
dec
pop
fiadds
lcall
cmp
jg
push
xor
stos
pop
popa
add
cli
mov
daa
or
and
inc
mov
out
jecxz
lods
js
jno
andl
mov
popl
add
out
imul
aad
mov
aam
xchg
pop
jmp
testl
mov
xor
push
sbb
adc
adc
jp
mov
pop
mov
push
jle
ret
and
push
in
out
add
cmp
test
jo
jp
adc
sbb
inc
sub
ret
inc
adc
dec
aas
sbb
and
sub
popa
loop
sbb
dec
cmp
dec
dec
mov
call
push
and
stos
fistps
jmp
mov
call
push
push
inc
das
insl
out
jo
adc
sub
fwait
mov
xor
subl
cltd
cmp
aaa
push
fistpll
int
sub
push
and
push
jmp
pop
lret
xor
mov
scas
fiadds
pusha
dec
add
pop
pop
push
cli
mov
push
mov
fst
cmp
push
jl
mov
stc
je
dec
sti
cmp
cli
and
jns
push
mov
fldenv
pop
dec
std
jbe
mov
pop
pop
pop
mov
aaa
mov
cmpsl
mov
sub
out
shr
aad
cld
loopne
xchg
jne
adc
daa
addr16
jns
addb
test
popf
xor
les
icebp
adc
xchg
sbb
sbbb
enter
cwtl
test
jne
ds
push
fwait
adc
outsb
and
scas
movsl
testb
or
loop
cmpsl
cs
xchg
add
stos
fisttpll
cld
lds
dec
push
ret
pusha
pop
add
outsb
push
xchg
xchg
pusha
pop
pop
sbb
int3
pop
mov
fcmovb
sbb
cwtl
pop
loopne
mov
cmp
outsl
push
inc
and
enter
ljmp
xchg
test
loopne
xlat
fs
jb
sbb
push
sbb
or
add
push
das
sbb
pushf
iret
adc
loope
jno
int
push
icebp
stc
insl
cmp
inc
push
gs
mov
mov
mov
dec
or
daa
repz
iret
dec
cmp
ja
add
jmp
pop
sub
ljmp
sbb
xor
or
cvttps2pi
or
jne
pop
mov
add
insl
sbb
push
sbb
sub
stos
sarl
jmp
inc
push
loop
adc
scas
and
test
or
hlt
inc
loopne
push
arpl
popa
cli
or
or
paddsb
insl
cwtl
filds
push
jge
pop
adc
push
jb
pop
pop
push
into
and
cmp
mov
pop
xor
outsb
push
call
inc
mov
sbb
jecxz
outsl
and
and
dec
add
stc
inc
nop
aaa
arpl
icebp
sarb
inc
jae
push
scas
outsl
cmpsl
adc
cmova
out
inc
scas
imul
mov
lahf
mov
and
adc
lea
push
testb
pop
ljmp
adcb
pop
mov
inc
mov
clc
popa
push
out
jae
jbe
ja
sti
adc
dec
dec
pop
adc
imul
mov
cmpsb
lahf
cmp
int3
cmp
or
pusha
sbb
adc
or
xchg
or
lods
jecxz
cmc
push
mov
and
lret
lahf
push
fidivrs
loopne
shll
and
je
or
test
inc
aam
push
rorb
mov
clc
pushf
cmc
sub
int
or
scas
pop
int
or
xor
push
xchg
bound
jle
jp
sbb
ljmp
inc
leave
push
dec
int3
xorb
mov
xor
mov
imul
sub
add
add
adc
jb
inc
addl
add
test
fnstsw
test
xor
xor
nop
sub
stc
jl
cli
rol
add
dec
fisttpll
xchg
movsb
add
lahf
push
or
faddl
or
pusha
xchg
or
jmp
cmp
xchg
and
sbb
cli
data16
notl
ret
adc
cmpb
mov
xchg
cmp
sarb
and
jmp
dec
xor
movsl
xchg
je
and
or
loopne
cmc
stc
imul
leave
ror
pop
or
pop
cmp
xchg
xor
and
mov
int3
lods
push
and
adc
fisubrs
outsb
mov
push
insb
xchg
push
add
inc
adc
add
pushf
xchg
push
pushf
xor
jno
in
mov
shlb
pushw
pop
loop
mov
mov
enter
dec
sub
jo
pop
nop
xchg
dec
ja
mov
mov
push
fisubs
lret
sub
loopne
cld
dec
cmp
push
jle
mov
mov
inc
cmp
lods
push
test
push
mov
or
arpl
sbb
sarb
cltd
sub
lods
negb
mov
ljmp
imul
and
dec
push
mov
and
cmp
outsb
or
out
push
daa
mov
fdivrs
rcrl
in
es
jnp
cmp
inc
and
mov
addl
inc
pop
inc
mov
sub
fs
sbb
push
jno
or
loope
lds
das
movsl
push
addr16
pushf
test
ja
fldcw
cli
enter
lahf
fists
lods
mov
stos
mov
hlt
lret
std
cs
pop
test
jb
sbb
sub
aaa
out
xchg
nop
inc
mov
mov
orl
lods
push
jl
mov
addl
inc
jle
add
lds
cmp
add
sbb
pop
ja
sbb
xor
movsb
dec
push
xor
push
jge
scas
xchg
push
enter
push
or
bound
add
arpl
decl
jle
add
notb
pop
loopne
push
shr
adc
pushf
xchg
int3
inc
adc
jne
sub
sbb
add
lcall
lcall
cmp
push
fwait
in
aad
ja
pusha
dec
lea
pop
into
cmp
vcmpsd
cmp
cmp
jo
dec
xor
inc
scas
push
pop
and
cld
jo
popa
clc
inc
xchg
xchg
loope
push
ret
fidivrs
pop
ljmp
ret
pop
sbb
dec
cmc
call
push
jecxz
pop
xchg
call
stc
jb
in
jl
adc
mov
push
xor
pop
ljmp
lcall
aaa
enter
icebp
scas
xchg
mov
insb
popf
subb
cmpsl
sbb
cmpsb
fsin
fildll
xchg
scas
cmpsb
mov
test
stos
add
add
inc
xorl
sub
mov
jp
pop
outsl
push
push
cmp
pushf
ror
mov
dec
add
test
add
pop
test
mov
cmc
add
push
mov
mov
test
jo
inc
ret
pop
adc
adc
push
shll
pushf
rolb
aad
mov
mov
or
adc
cmp
and
and
xor
in
lret
cmp
lcall
or
xchg
shlb
aas
outsb
lahf
enter
and
ljmp
daa
outsl
aad
jg
dec
mov
inc
mov
add
xchg
lahf
es
jl
dec
clc
leave
lock
jo
imull
add
push
repnz
cmp
adcb
cmp
pop
adc
adc
jb
and
lods
aas
test
add
shll
mov
dec
xor
in
mov
fs
jp
lret
add
inc
fmuls
dec
test
mov
sahf
xchg
pop
jle
imul
pusha
mov
popf
mov
or
pop
inc
aas
addr16
add
movsl
mov
push
mov
xchg
subw
add
sub
push
mov
or
jne
sub
movsl
ret
inc
js
pop
pushf
push
fldl
jg
mov
pop
nop
mov
and
inc
into
shrl
inc
mov
pop
jle
jge
stc
xchg
lds
repnz
xchg
into
push
repnz
add
xchg
aad
loope
and
in
and
xor
movsl
repz
sub
je
test
xor
push
iret
insl
mov
jne
dec
test
pusha
jb
lods
mov
sbb
push
jl
xor
repz
add
inc
dec
out
sub
fs
jns
pop
sahf
inc
loopne
js
cmp
mov
divb
pusha
hlt
and
cmp
fs
mov
jo
rcr
xor
loop
push
andl
lret
xchg
stos
cmpsb
inc
jge
mov
imul
loope
xorl
lock
sbb
repnz
sti
push
fistpl
push
jle
stos
and
insl
inc
aaa
push
sub
cltd
add
sbb
hlt
pop
push
fstl
mov
sti
or
cmp
jle
ret
push
jb
or
add
jne
pop
and
outsl
and
adc
fldcw
aam
and
ret
jnp
test
jle
add
sub
xchg
imul
rcrl
cmp
es
lahf
inc
leave
lret
shrl
xchg
xor
and
xchg
popa
inc
rol
cli
inc
pop
cltd
insl
sti
std
pop
adc
xor
adc
aam
dec
fisubrl
push
aas
and
adc
ficoms
mov
rcll
cmpsb
in
or
xchg
jo
out
push
dec
cmpsb
prefetch
loope
jb
mov
cmp
push
pop
xchg
jne
add
or
out
sub
push
dec
push
xor
mov
lea
aam
loope
test
push
mov
addr16
mov
fimuls
mov
pop
andl
in
xorb
je
add
in
push
sbb
xchg
xor
pop
daa
aam
repz
in
bound
mov
rorl
insb
push
mov
jle
pop
insl
jns
jl
push
mov
mov
fstps
mov
pushf
loope
inc
xor
jnp
add
push
push
jl
ret
mov
popa
jmp
test
jno
pop
clc
stos
fisttpll
xor
and
jecxz
add
inc
sbb
cmp
test
inc
icebp
xchg
inc
inc
shl
jno
xchg
daa
sbb
cmpsl
loopne
add
stos
push
lods
sub
cld
rorl
and
faddl
test
push
stos
lds
or
insb
push
popf
push
dec
jmp
sub
movsl
push
add
jb
outsb
inc
pop
jae
gs
shl
push
mov
sti
push
push
mov
loope
xchg
ss
rcll
mov
enter
popf
mov
ret
adc
inc
insb
push
mov
push
repnz
outsl
sbb
push
std
fldcw
clc
jmp
sub
mov
mov
cld
std
cmp
add
cmp
adc
push
dec
add
and
popa
sub
fmull
gs
dec
shll
and
push
mov
jnp
int
ds
sub
xor
pop
sub
cs
repnz
adc
scas
rcrl
sub
xor
mov
add
outsl
ret
lods
xchg
xor
lret
mov
mov
mov
call
add
repz
jo
mov
ficoms
bound
jp
jno
lods
inc
movsl
dec
es
shlb
sub
outsl
dec
test
test
insb
adc
pushf
lods
or
xchg
rcrl
addr16
pop
outsb
inc
fmuls
scas
ljmp
mov
cmp
testl
arpl
jb
xchg
into
popf
mov
cmpl
jg
ret
xchg
shll
enter
and
cs
jmp
jge
mov
adc
or
imul
fadd
lahf
fs
inc
pop
pop
push
pop
sub
mov
ja
sub
mov
test
inc
xor
int
push
arpl
push
or
sub
add
stc
test
mov
jnp
push
lahf
stos
jl
es
stc
sub
mov
daa
xchg
xor
hlt
inc
push
dec
enter
and
cmp
outsl
cmc
sbb
stos
gs
pop
push
cmpb
lcall
inc
add
jb
xchg
aas
sti
subl
aas
jl
and
sbb
pop
mov
jge
xor
inc
outsb
dec
in
push
mov
sbb
mov
and
sbb
push
add
repz
popf
call
and
arpl
jb
dec
je
imul
dec
orb
dec
addr16
mov
cmpsl
dec
cmp
stos
cmc
pushfw
mov
gs
add
push
sti
sub
xor
jmp
mov
stc
adcl
xchg
inc
and
popf
add
jmp
subl
xor
test
aas
sbb
mov
adc
popf
xchg
pop
add
mov
cmc
jnp
jae
or
rorl
rolb
insl
cmp
push
inc
jns
and
push
sarl
mov
pop
je
or
int
push
mov
loope
fcoms
xchg
xchg
mov
iret
inc
sbb
push
das
sbb
add
sub
pop
push
out
cmp
pop
sbb
adc
test
or
loope
fnstenv
addb
cmpsl
repnz
xchg
cmp
cmc
inc
mov
fldcw
int
and
hlt
inc
sbbl
adc
dec
test
pop
sbb
or
xor
adc
push
inc
in
repnz
xchg
hlt
test
iret
and
cmp
jbe
push
movsbl
adc
cmp
popa
rolb
mov
xor
jge
enter
mov
in
out
enter
cli
jg
lcall
pmulhuw
cmp
cli
sub
cmpsl
jb
out
push
xchg
pop
xchg
xor
push
gs
cmp
and
sti
mov
int
xchg
mov
and
imul
mov
pop
xchg
in
jmp
xchg
insl
rorb
cmp
negl
or
int3
pop
jbe
subb
fimull
jnp
push
jo
aas
pop
into
inc
cmp
adc
pop
xchg
decl
adc
adc
fwait
pop
loope
js
inc
movsb
dec
cmp
lock
push
test
mov
dec
test
jge
dec
inc
sar
mov
push
cli
aad
jno
pop
popa
add
mov
push
add
popa
jp
les
and
adc
icebp
xchg
push
xchg
jl
inc
outsb
movsb
mov
pop
shll
cmpsb
xchg
xor
pushf
or
into
lea
push
inc
mov
dec
fistps
or
cmp
insb
fistps
pop
dec
jb
fisubrs
fsubs
test
push
adc
sub
pop
add
dec
or
push
mov
and
inc
ficompl
test
jnp
inc
movsb
fwait
outsl
xchg
jb
fidivrs
add
add
lock
pop
inc
mov
fsubrp
cmp
and
bound
ja
xchg
ss
inc
adc
jmp
sub
negb
arpl
shrb
inc
sub
and
das
inc
mov
sbb
sahf
dec
adc
jl
sti
dec
xor
or
shrb
and
test
sub
jb
push
and
rclb
add
aas
icebp
mov
adcl
loopne
cmp
sti
inc
xor
pusha
lret
sbb
xchg
push
pop
push
outsl
pushf
in
subl
loope
test
xchg
push
sarl
add
popa
jge
push
or
xchg
cwtl
mov
push
add
ljmp
and
ret
mov
jp
fwait
sbb
sbb
pop
adc
sub
cmp
xor
xor
adc
push
loopne
push
icebp
sub
into
dec
daa
jne
sbb
test
pop
rcrb
imul
cmp
test
pop
cmp
aam
nop
xchg
mov
lret
inc
in
or
xchg
jle
pop
dec
loope
jge
or
cmp
add
mov
jle
dec
mov
xor
inc
out
mov
xchg
inc
dec
xchg
pop
hlt
inc
xchg
loope
add
dec
xchg
pop
adc
cmp
add
aaa
je
fcmovne
xchg
sbb
push
nop
jne
xchg
and
int
xor
xor
inc
push
lahf
cmp
and
xor
decb
or
cmp
scas
pop
test
push
mov
out
inc
sbb
push
sbb
enter
sbb
mov
lods
or
int
iret
pop
lcall
loop
lock
jg
cltd
out
mov
jbe
sbb
aad
sbb
mov
or
mov
lret
xor
or
bound
sbb
int3
mov
sarl
inc
je
iret
pop
roll
mov
icebp
dec
sub
lcall
popf
xor
out
or
dec
jmp
add
mov
sbb
cmp
ljmp
jg
pop
or
xchg
pop
lahf
or
pop
stos
pop
xchg
jg
add
xchg
int3
inc
xlat
xlat
or
mov
insb
outsl
testl
inc
mov
push
xor
cld
jb
mov
es
and
and
jecxz
adc
lret
jge
int3
jecxz
sbb
idiv
cmc
cmp
in
fwait
jmp
push
inc
gs
fucomip
dec
sbb
mov
add
call
pop
sub
and
cwtl
sti
ret
xchg
je
loop
and
adc
out
aam
pop
aad
xor
cli
fdivl
aas
shll
push
aad
testb
inc
ja
sbb
iret
sub
fcomps
sub
xchg
adc
lret
icebp
jne
mov
fcoml
sbb
or
pusha
scas
out
inc
les
mov
je
adc
fmuls
pop
or
je
xorb
test
jo
push
push
jae
pop
sbb
add
dec
out
jo
fstpl
dec
adc
push
cs
scas
pop
or
mov
mov
cmpsb
sahf
cmp
pop
jge
mov
sbb
loop
subl
lret
inc
push
stos
call
inc
hlt
int
mov
flds
das
test
test
jne
movb
movsl
test
inc
in
xchg
imul
cli
mov
and
shlb
or
cmpl
and
lcall
out
pop
sbb
out
and
jne
popa
lds
outsb
push
and
xor
sahf
sbb
jg
add
jbe
xor
cmpsl
pop
decl
push
cmp
ret
dec
pop
or
fnstcw
out
ret
ja
push
xchg
inc
fistpll
jg
cmp
pop
fcoml
push
push
test
jo
in
inc
arpl
pusha
sbb
add
jae
arpl
xchg
fidivs
loope
cmp
cmp
push
bound
cmp
mov
xchg
jbe
adc
adc
lock
jp
cmovb
or
lea
mov
ja
push
test
push
mov
loope
hlt
daa
or
mov
jb
mov
je
fwait
jb
add
jne
push
inc
xchg
decl
xor
lods
ret
rcrb
sbb
xor
push
push
push
pop
movsl
jne
ds
js
cmp
pop
push
test
mov
mov
je
xor
repz
out
or
or
repnz
cltd
out
mov
sbb
loop
xor
aaa
mov
ljmp
xor
xor
je
dec
pusha
sub
and
fldenv
sub
mov
jmp
push
sub
outsl
ffreep
hlt
mov
jmp
popf
mov
aas
xchg
mov
xchg
fcomps
je
cmp
jle
lods
lods
jno
jecxz
cmpsb
and
mov
and
scas
or
jp
adcb
pop
jns
push
mov
or
pop
dec
push
cwtl
scas
xchg
jae
stos
aaa
mov
sub
scas
das
push
orl
push
mov
inc
or
imul
or
popf
ljmp
jne
push
ret
mov
inc
loop
lods
adc
stc
ljmp
test
push
pop
inc
xchg
out
js
sub
aam
lahf
sbb
cmp
mov
push
adc
pop
jmp
add
mull
pop
xchg
nop
adc
ja
mov
aam
cmp
fdivs
shrb
outsb
cmpsb
shlb
cli
das
mov
or
jmp
mov
aam
jae
inc
repz
sub
cld
dec
leave
inc
push
rorb
addb
data16
adc
fdivrl
cli
scas
or
jle
loop
sbb
test
pop
sbb
jmp
jne
jmp
movsl
cs
pop
lcall
lods
mov
jp
and
xchg
outsl
add
shrl
ljmp
jae
rorb
cli
jp
mov
jecxz
sub
mov
lds
push
or
ja
jo
jle
jne
insb
aaa
mov
or
push
sbb
jbe
flds
xchg
mov
out
popf
xchg
inc
mov
inc
xchg
cmp
ja
mov
xchg
out
cltd
in
push
mov
sbb
in
push
loope
movsl
mov
or
imul
adc
out
push
cmp
ljmp
out
jge
shlb
std
xchg
imul
in
repnz
push
adc
ja
loopne
inc
push
lea
jne
push
jne
inc
lahf
or
das
fisttpl
shr
inc
stos
or
pop
test
push
push
sbb
pop
loope
fs
push
hlt
and
and
jo
xor
xchg
xor
jmp
fs
jae
and
xor
jo
xor
jae
rclb
test
movsl
into
jb
xorb
mov
psllw
outsb
loop
add
add
dec
push
xor
jbe
es
je
cmc
test
xor
ret
mov
loope
jo
pop
insl
fnstcw
repz
in
mov
or
and
push
add
es
or
and
jecxz
into
or
mov
adc
clc
pop
icebp
pop
sbb
push
fisubs
xchg
loopne
cmp
gs
movsl
jbe
jno
cmp
and
and
mov
sub
sbb
mov
daa
nop
sub
jno
in
pop
jo
mov
js
push
sbb
nop
inc
xchg
mov
fidivrs
outsb
jo
arpl
ret
lahf
shlb
and
xor
add
ret
sti
inc
inc
lcall
test
pop
jbe
test
inc
pushf
test
or
push
mov
push
mov
xor
add
pop
jne
pop
cld
mov
pop
addr16
in
rcr
push
jg
push
iret
loop
dec
pop
iret
lcall
lret
shl
clc
jmp
shl
xchg
inc
fstps
cmp
jno
mov
jmp
adc
push
sub
inc
mov
pop
or
mov
ljmp
pop
jb
push
scas
sub
mov
adc
inc
fwait
jle
sbb
jle
mov
rclb
in
cli
jne
jecxz
enter
jb
lods
push
dec
jae
lret
jno
ret
out
sti
mov
pop
hlt
add
xor
xchg
cmp
sbbl
pop
dec
inc
fcompl
sub
jno
xchg
hlt
push
add
mov
movsl
imul
mov
sbb
pushf
shlb
jbe
repnz
ret
sbb
andl
and
daa
daa
notb
adc
outsl
ljmp
mov
push
sbbl
bound
jecxz
mov
mov
or
adc
hlt
mov
imul
in
sub
decl
mov
pusha
push
stos
pop
call
xor
decl
adc
jno
sub
and
testl
dec
xor
clc
sbb
inc
hlt
fs
movsb
test
mov
dec
xchg
pop
sub
andl
test
xchg
jle
je
jmp
divb
xchg
in
pcmpgtd
int
negl
fidivrl
or
sbbb
xorl
notl
popf
mov
shlb
iret
sarb
sub
movsb
subl
outsl
cmc
or
or
in
or
jge
insl
push
inc
push
mov
call
sub
cmp
ss
xlat
mov
rolb
js
enter
loopne
inc
testb
jbe
sbb
sub
sub
mov
aas
sysenter
xchg
pop
xchg
pop
add
lret
fisubl
loope
ret
inc
hlt
jbe
das
cmc
pusha
repnz
ja
adc
daa
mov
sbb
mov
lcall
sbb
mov
mov
dec
jle,pt
sbb
add
add
mov
adc
mov
cmp
or
lcall
mov
mov
push
dec
fadd
dec
popf
stos
adc
adc
pusha
push
cltd
adc
pop
inc
rcl
xchg
inc
add
loopne
dec
scas
das
ja
mov
push
shlb
and
loopne
push
hlt
xor
cmp
cmp
mov
cltd
orl
push
test
mov
jne
out
ficoms
jae
pop
dec
aaa
xchg
in
cs
lods
and
jge
sub
mov
pop
dec
jne
mov
std
pop
jge
repnz
int3
mov
sbb
mov
pop
lock
sub
mov
lret
dec
stc
es
mov
push
and
divps
push
xchg
jp
in
mov
xchg
jns
and
mov
orl
cmp
call
enter
cli
jo
stos
divl
dec
dec
cld
ds
jns
jo
push
push
jp
adc
or
inc
jns
and
jg
scas
xchg
xor
xchg
xchg
ret
xorl
sub
push
dec
mov
addb
inc
lahf
loope
mov
roll
in
dec
lds
adc
mov
clc
inc
push
cltd
mov
and
sbbb
adc
pop
xchg
adc
sbb
and
inc
das
push
or
dec
mov
repnz
mov
push
imul
out
pop
mov
dec
mov
jne
add
das
xchg
in
push
push
inc
pusha
xchg
lods
adc
ja
mov
repz
std
and
shrb
mov
mov
push
imul
test
push
es
ret
mov
das
leave
jg
mov
pusha
insl
jmp
pop
dec
mov
push
shrb
xchg
jmp
sub
mov
xchg
test
push
std
inc
adc
stos
dec
es
mov
mov
test
xlat
xor
mov
sti
sub
push
xorl
pop
sbb
fwait
lret
subl
mov
ror
rcr
mov
int
fdivl
leave
scas
inc
mov
insb
or
cmpsl
cmc
or
cli
jbe
lea
push
push
push
sub
mov
mov
sub
xor
push
push
mov
mov
cmp
add
sub
arpl
in
sub
cli
dec
push
pop
mov
jecxz
and
outsb
addl
sbb
les
test
ror
inc
xor
bound
adc
clc
push
sbb
dec
push
mov
mov
inc
in
stos
xchg
mov
jae
pop
jo
iret
pop
push
xor
rorl
jecxz
mov
inc
mov
mov
aam
mov
mov
pop
cmc
inc
imul
jmp
out
je
push
push
pop
sar
iret
fidivl
call
pop
dec
jle
jnp
mov
lods
or
cmpsl
js
dec
call
cwtl
jne
outsb
sbb
cli
mov
les
mov
stos
jmp
mov
ret
call
push
xchg
pop
adc
lret
cltd
jmp
pop
cmc
xor
aam
jo
xchg
into
pop
lds
gs
movsl
jl
jo
mov
aaa
je
ljmp
and
xchg
fmull
dec
adc
xor
mov
cld
clc
inc
es
lock
rcrb
push
mov
dec
mov
cli
and
sbb
mov
cld
add
inc
pop
mov
adc
xor
xchg
in
popf
inc
out
mov
and
adc
inc
arpl
popa
ficomps
dec
test
int
and
stc
dec
mov
dec
cmp
mov
pop
mov
scas
pop
lahf
xchg
movsb
je
movsb
sbb
adc
inc
shlb
mov
pop
mov
dec
call
mov
imul
dec
adc
xchg
insb
or
clc
notb
aam
into
je
cmp
shll
leave
mov
mov
pop
cmp
xor
dec
fsubrp
stc
pop
dec
sbb
sbb
add
lea
sahf
jle
mov
push
arpl
inc
ss
clc
mov
aam
call
cltd
push
jp
getsec
out
pop
or
rorl
mov
outsl
lret
insl
pop
adc
push
push
add
push
call
arpl
cmp
xchg
int
pop
and
lea
add
loop
xor
loope
and
ja
std
jmp
insl
xor
xor
xor
mov
sbb
fs
sahf
jno
aas
les
add
lret
or
dec
jb
ljmp
pushf
stos
xchg
jle
mov
inc
mov
fsub
shl
jne
outsl
lods
sub
cmpsb
sub
and
dec
cmp
pop
sar
pushf
xor
xchg
cmp
dec
stc
cmp
movsb
movsb
or
loop
negb
adc
cmp
lock
negb
or
push
test
cmpsb
add
mov
xor
mov
lock
cltd
lods
and
pushf
fstl
or
popa
dec
cwtl
and
test
cmp
dec
jo
icebp
sbb
add
and
xadd
and
and
mov
imul
cmp
fs
dec
sbb
sub
inc
in
insl
lds
jne
lock
jno
dec
dec
lea
mov
cmp
xor
cmp
mov
jno
pop
mov
movsb
scas
daa
sub
sub
jne,pt
mov
mov
out
scas
rcll
imul
ret
std
fdivrl
and
adcb
mov
sti
data16
mov
into
jb
cwtl
dec
add
pop
adc
negb
fwait
outsl
lods
or
movsl
inc
jmp
mov
mov
xor
movb
je
cmc
push
popf
mov
jle
sub
xchg
rcll
mov
and
and
out
pop
sbb
test
fistpl
and
inc
lret
or
mov
push
mov
movsl
pop
lcall
jle
dec
scas
loop
xchg
cmpsb
mov
in
inc
outsl
push
dec
rolb
add
jne
and
dec
int3
inc
ret
inc
out
adc
mulb
xchg
je
xchg
insb
inc
loopne
clc
pop
jne
pop
iret
cmp
cmpsb
mov
mov
bound
hlt
lcall
dec
call
cld
outsb
push
xchg
pop
or
mov
add
inc
dec
test
mov
loopne
stos
push
xlat
fbld
dec
add
xor
pop
jmp
loopne
pop
mov
mov
dec
inc
incl
dec
xor
mov
and
push
sub
insl
fsubrp
push
push
and
dec
stos
inc
lods
pop
mov
or
loop
pusha
mov
inc
xchg
and
jo
add
dec
int3
jmp
cmp
or
mov
pop
in
fisubrs
nop
mov
sbbl
jmp
pop
adc
cli
xchg
pop
filds
sub
fstp
sti
adc
dec
push
sbb
cmp
std
pop
cmpsl
jne
lret
mov
loopne
outsb
adc
jnp
jle
cli
cmp
inc
jns
test
mov
stos
mov
std
cmc
sub
dec
mov
loopne
loopne
cmp
dec
mov
les
cmc
movups
or
adc
mov
pop
insl
xlat
out
shll
jae
fdivrl
pminsw
int3
imull
shrl
fdiv
xchg
cmpsl
imul
push
lea
int3
sub
mov
jp
inc
and
into
mov
repnz
sbbl
push
add
mov
jecxz
mov
sub
pushl
lock
add
fldenv
dec
cmp
dec
lcall
dec
sti
adc
es
inc
dec
xchg
test
mov
in
inc
adc
mov
inc
cmp
inc
cld
dec
sub
out
mov
dec
mov
dec
data16
cli
cmp
pop
add
jbe
sub
shlb
cli
cmp
dec
xchg
adc
jbe
cmp
push
sbbb
out
into
cmc
mov
std
push
xchg
inc
dec
ja
adc
std
inc
sbb
lds
ret
push
test
jle
push
pusha
ljmp
mov
fstpl
inc
lcall
pop
mov
fadds
mov
xlat
mov
add
pop
shlb
lea
and
cli
push
ss
adc
cmp
dec
mov
out
jo
mov
sahf
lock
es
mulb
mov
xor
jl
sub
ds
jmp
mov
push
mov
loopne
icebp
jmp
cmp
sbb
sbb
or
stos
cli
pop
mov
and
jno
push
outsl
pop
push
sbb
push
jge
jbe
arpl
push
push
jnp
add
xchg
movaps
or
xor
sbbl
ret
ret
imul
ret
mov
mov
xor
mov
dec
outsl
aam
add
in
add
cmp
mov
dec
iret
cmp
cmpb
cmp
out
pop
js
mov
sub
addr16
sub
scas
inc
and
and
adc
and
mov
sbb
cltd
jo
int
pop
popf
and
push
adc
xchg
jnp
into
outsb
xchg
mov
or
push
and
xchg
inc
xor
clc
frstor
in
sub
movsb
ret
sbb
in
xlat
js
stos
aam
les
cmp
mov
mov
sar
scas
and
push
push
scas
mov
add
in
mov
enter
or
adc
adc
pop
mov
popa
push
adc
movsb
pop
filds
pop
cltd
inc
add
mov
call
dec
mov
jbe
popf
sub
sarl
std
arpl
push
popa
outsb
stc
adc
imul
xchg
adc
sub
in
mov
sbb
arpl
fimuls
or
xchg
enter
sbbl
adc
dec
popa
ljmp
dec
mov
aad
pop
sub
dec
outsb
cli
mov
repz
adc
sub
out
adcb
adc
cmp
sti
jg
and
in
negb
add
xchg
std
mov
out
clc
mov
out
or
push
out
jne
dec
adc
inc
out
call
pop
into
and
adc
xor
add
adcb
pop
scas
adc
adc
xor
into
jle
xor
sbb
sahf
pop
out
xor
ss
repnz
cmp
pop
js
pop
cmp
fbld
test
fiadds
jb
pop
push
xchg
pop
or
cmp
adc
xchg
call
or
adc
xchg
and
inc
and
jle
sub
xchg
sub
push
lods
cmp
push
fs
fstps
addr16
sbb
pop
sahf
daa
repz
xchg
push
js
aas
lds
xchg
jl
lcall
frstor
xchg
xor
in
inc
or
adc
sub
lret
adc
cwtl
fsubrs
xor
lcall
push
lret
xor
dec
mov
inc
stos
jnp
lea
xor
xchg
insb
adc
push
scas
pop
negl
hlt
xchg
jl
mov
adc
divb
leave
int3
add
ss
mov
ss
sbb
lds
divl
sbb
xchg
mov
mov
sbb
push
mov
out
movsb
dec
jg
xor
adc
inc
in
add
jb
sbb
xor
insb
pushf
or
loop
and
js
aaa
and
or
andb
sub
clc
jno
mov
jl
add
out
sbbb
cs
out
ja
sub
outsl
xor
mov
ret
and
push
ret
jns
inc
call
lods
lret
xor
outsb
xchg
add
pop
add
mov
test
daa
loopne
and
dec
call
or
inc
or
adc
mov
lea
sahf
inc
and
idivl
lock
cltd
xor
mov
jns
shr
adc
cmp
aas
push
scas
inc
jmp
into
push
mov
adc
xchg
or
xchg
loop
das
insl
inc
lret
add
ret
lea
xor
xchg
icebp
fsubl
push
jb
aas
push
inc
ds
popf
flds
xor
and
push
iret
adc
or
sbb
xchg
push
int3
mov
mov
add
dec
add
in
orl
inc
sub
ficoml
punpckhwd
mov
cmc
or
call
jnp
xchg
push
and
bound
scas
mov
dec
pop
lock
insb
sar
pop
cmpsl
and
sub
push
xor
cmp
into
sbb
gs
inc
repz
stc
sub
and
test
rcrb
cmp
jnp
inc
or
lret
inc
cmp
xchg
push
loope
inc
cltd
mov
and
mov
xor
or
ljmp
inc
mov
fwait
push
shr
out
jbe
repz
cmp
test
jmp
rcrb
jne
jge
add
adcb
bound
or
int
mov
les
sub
lcall
or
xchg
lds
mov
cmpsb
cli
sub
push
add
addl
es
inc
jno
add
negb
xor
jmp
adc
addl
jnp
test
inc
shlb
ss
in
push
xchg
daa
xchg
sarb
call
cmp
movsl
mov
bound
adc
mov
int3
repz
jb
jle
or
jg
pop
mov
push
inc
add
cmp
repz
les
adc
ficompl
mov
popa
cmpsb
ljmp
aad
mov
lcall
sbb
ss
push
pop
push
sbb
dec
imul
std
pop
test
sbb
dec
imul
stc
test
aad
gs
andw
adc
imul
push
into
cmp
pop
cmp
xor
mov
add
mov
cld
ljmp
mov
pop
rorl
leave
in
jb
mov
call
sub
ret
aad
gs
clc
inc
fnstsw
jno
scas
dec
jbe
subl
jmp
pop
dec
scas
lods
jle
mov
adc
dec
inc
test
shrb
popa
push
push
mov
xor
movsb
outsl
aas
jno
imul
cmc
xchg
jae
sbb
push
inc
mov
mov
js
data16
and
cmp
and
ja
dec
mov
loope
je
pop
push
dec
sub
imul
jp
insb
adc
in
push
in
test
jne
push
sti
mov
and
lock
test
cmpb
and
mov
or
mov
xor
test
bndldx
inc
out
jl
mov
jno
sbb
aaa
jl
dec
xchg
sbb
rcll
int3
rclb
or
sahf
mov
rcrl
fcomip
ret
pushf
les
lods
or
cli
dec
mov
pop
rcrb
dec
loopne
pop
lahf
insl
lock
add
jge
push
jge
cld
dec
int
and
iret
add
pop
nop
xchg
xchg
dec
xor
popl
hlt
push
xor
shrb
pop
pop
or
cmp
dec
mov
inc
lock
pushf
fs
scas
adc
pop
pop
xor
pop
pop
or
dec
or
pop
dec
xchg
pop
shll
pop
stc
movsl
xchg
push
push
xlat
popf
jge
shll
insl
xchg
outsl
test
scas
push
repnz
addr16
lcall
sbb
pop
adc
fwait
mov
jle
cmp
loop
jl
into
bound
dec
mov
sub
xchg
add
pushf
jno
je
cli
xor
mov
pop
dec
sbb
cld
and
sub
dec
mov
lret
xlat
cwtl
mov
push
mov
mov
xor
cld
add
out
lea
sbb
mov
pop
jno
inc
lea
inc
jmp
lret
lock
repz
mov
fisubrl
and
jecxz
call
pop
gs
sahf
imul
inc
movsl
push
pop
and
or
dec
jno
daa
mov
jno
sahf
inc
and
movsb
aas
xor
push
sbb
xchg
or
xor
cs
xor
ja
and
add
jl
dec
popf
pusha
push
sbb
sbb
dec
mov
fcompl
pop
mov
inc
sbb
pop
sub
jle
dec
lahf
mov
xlat
fsubrl
data16
jl
repz
and
cmp
lock
xor
sbb
testl
pop
gs
dec
aad
sub
cmp
stos
arpl
mov
hlt
fisubrl
jne
push
add
imul
jo
outsb
imul
js
fidivs
aas
out
js
fsubl
push
rolb
mov
inc
mov
adc
test
pop
mov
push
jo
lret
cmc
lds
lcall
leave
out
stc
divb
sbb
in
pop
inc
cs
call
inc
loope
rcl
sub
push
dec
jmp
stos
lcall
ret
dec
xor
mov
cmp
cmp
mov
dec
jbe
sbb
mov
adc
mov
dec
xor
pushf
add
and
adc
aam
mov
js
outsb
test
ret
and
mov
das
lahf
loope
lahf
call
pop
cmp
dec
out
jle
sub
or
dec
and
add
sbb
mov
jae
test
fdivp
inc
and
testb
dec
insl
insb
pop
mov
sub
ret
and
or
call
stc
mov
aad
mov
mov
popf
cwtl
mov
pop
aas
lea
mov
xchg
call
mov
mov
mov
cmpsb
lret
add
push
pause
mov
subb
mov
jns
xchg
add
loop
jecxz
adc
xchg
mov
imul
dec
push
scas
sub
in
and
test
jne
pop
push
dec
or
and
adc
jecxz
push
fxtract
arpl
push
cld
test
ss
dec
cmpsb
push
push
imul
mov
xor
outsb
lds
mov
int3
loop
push
and
jmp
ja
daa
sbb
or
mov
sub
cmpsb
daa
mov
das
fcomp
xor
push
inc
and
fwait
mov
lods
push
ss
add
mov
ss
daa
mov
xor
mov
je
stos
sub
or
pop
mov
fsubl
dec
or
je
mov
jbe
bound
adcl
mov
fidivrs
push
lods
fwait
xor
pop
scas
mov
mov
mov
mov
mov
adc
insb
pop
pop
insl
pop
sbb
jnp
dec
xor
mov
popa
daa
aad
adc
bound
fldt
pop
popf
in
cld
or
jg
push
movsl
sbb
push
push
and
nop
les
pushl
je
jmp
cmpsb
fisubrs
xor
add
pop
js
loopne
popf
add
mov
bound
enter
xchg
movsl
in
jno
xor
jbe
loope
mov
nop
or
push
dec
andl
jl
push
pushl
adc
pop
mov
mov
xchg
or
lds
push
mov
pop
add
mov
adc
or
cmp
mov
les
adc
jecxz
into
outsl
ret
xchg
inc
jns
hlt
shl
mov
lret
cmp
xor
sbb
xor
push
cmpb
sar
jecxz
adc
out
xor
addr16
out
push
mov
outsb
pop
jno
push
cmp
sbb
cmp
ret
lret
add
movsl
incb
push
adc
into
fdivrs
and
mov
dec
or
orl
lods
inc
loopne
lds
mov
aad
pop
loop
imul
cld
enter
dec
lods
cmp
jmp
popf
subl
pusha
jmp
add
inc
dec
mov
in
add
push
or
scas
sbb
repz
mov
xor
mov
mov
icebp
push
imul
sbb
and
add
aaa
in
mov
arpl
sbb
cmp
pop
sbb
jo
xor
add
pop
dec
and
cmp
push
ret
sub
jne
fcompl
imull
sbb
add
sub
sub
pop
jb
jmp
popa
add
mov
inc
cmc
xor
add
inc
leave
jnp
lock
cmp
adc
and
or
mov
jmp
test
stc
cs
cmpsb
push
lahf
mov
pop
fwait
scas
hlt
mov
mov
push
ret
adc
sbb
add
insb
inc
ja
fs
mov
addr16
pop
mov
and
aas
push
pushf
cmp
push
and
mov
decb
mov
call
aas
repnz
sti
or
cld
lods
addr16
fisttps
pop
mov
dec
jae
aas
inc
mov
call
and
enter
fs
xor
sub
cmp
jbe
dec
push
sub
addl
movsl
sbb
cmpsl
sub
and
push
mov
lock
data16
movsl
jp
xor
shl
inc
sub
jno
es
jns
daa
mov
cmp
lea
inc
shlb
mov
cmpsl
inc
sub
and
dec
movzwl
push
jl
stc
add
mov
xchg
sub
loope
pop
xchg
scas
sub
xchg
dec
pushf
dec
dec
addb
mov
or
push
mov
mov
jbe
repz
adc
mov
and
mov
jle
or
inc
ret
into
dec
push
ret
test
arpl
xor
push
jge
je
mov
xor
clc
movsb
or
adc
dec
jnp
cmp
call
hlt
dec
mov
xor
sub
nop
sub
jbe
jge
and
pusha
je
and
dec
data16
mov
mov
push
les
les
lods
jg
jb
negb
and
mov
xor
pop
or
addr16
mov
sbb
jbe
inc
cmp
sahf
test
dec
pop
data16
pop
mov
mov
hlt
sub
imul
mov
insb
cmp
movsb
pop
into
xchg
mov
in
mov
arpl
cltd
leave
es
mov
scas
imul
or
testb
inc
nop
mov
adc
pop
jmp
sbb
push
movsl
repnz
xchg
xchg
sub
mov
dec
int
aas
add
aam
sar
xchg
push
in
je
fiadds
inc
jb
pop
dec
jg
fadd
push
mov
add
jg
cmp
loope
or
andl
adc
aaa
rclb
add
mov
popf
xor
jne
clc
dec
push
or
pop
js
das
and
stos
out
andb
inc
in
cmp
mov
adc
sti
dec
shrl
xor
mov
ret
insb
fidivs
pop
adc
andb
dec
xor
test
mov
cmp
adc
adc
mov
sbb
or
sub
jp
push
mov
cmp
out
sti
lods
sarl
push
mov
push
movsl
push
or
fidivl
xor
or
scas
pop
mov
jp
adc
scas
sbb
cs
repnz
inc
fdivl
in
xlat
nop
repnz
call
or
std
test
outsl
aaa
data16
inc
push
cmp
adc
push
inc
cmp
add
inc
cmp
inc
add
cltd
fucomp
pop
sbb
jl
mov
sub
sub
repz
hlt
add
les
jae
pop
lcall
and
sbb
jp
or
aas
cmp
sub
es
stos
cmp
mov
pusha
fnstenv
repnz
jb
icebp
dec
bound
iret
daa
pop
and
xor
iret
mov
ss
mov
xchg
sbb
pop
enter
inc
aam
jle
mov
lret
bound
ret
mov
mov
dec
into
jnp
push
ds
mov
sbb
jnp
leave
inc
pusha
fiaddl
push
je
popf
jle
inc
jns
lret
outsb
jne
clc
add
lcall
pop
or
test
imul
push
sarb
inc
sub
mov
mov
jge
pop
inc
testl
and
jbe
ret
mov
add
cwtl
addr16
mov
imul
scas
and
xor
aaa
sbb
cltd
xor
fcoms
mov
stos
xor
ret
xchg
xor
sahf
mov
cmp
fucom
sbb
xchg
test
mov
lret
jle
add
xor
fidivl
xor
push
bound
pop
mov
xor
lods
cmp
test
imul
fs
jne
xor
pop
jle
inc
test
pop
and
inc
push
loopne
fidivrl
pop
cmpsl
ret
mov
jg
dec
test
lock
or
xor
into
mov
xor
push
pop
orl
mov
in
and
cmc
add
fs
pop
add
or
fucomip
xchg
xchg
mov
dec
pop
inc
mov
add
out
int
movsl
push
pop
mov
or
pop
pop
jo
fwait
mov
add
loope
mov
or
mov
lret
retw
push
cli
adc
or
pop
es
add
into
aad
sahf
push
fwait
sub
mov
jns
subl
iret
inc
mov
repz
mov
jnp
mov
and
loopne
stos
inc
loope
push
js
cwtl
test
sbb
addr16
mov
cmp
lret
rorl
mov
dec
push
push
and
testl
lods
xor
jecxz
out
daa
mov
lods
pop
mov
push
lahf
xor
enter
insb
cltd
xor
lret
push
shlb
push
rclb
pop
xor
jp
loope
jl
mov
lock
clc
hlt
cmp
test
in
inc
faddl
ljmp
cwtl
adc
add
repnz
inc
lods
aam
mov
lahf
scas
lahf
mov
inc
rorb
cmp
lods
sahf
cwtl
sub
pop
push
insb
add
std
and
cmp
sub
xchg
push
push
je
inc
lds
dec
into
cmp
push
lret
xor
add
jge
mov
je
popf
rclb
lea
int
adc
notl
cs
pop
adc
repnz
test
inc
aad
loopne
adc
int
iret
dec
divb
and
pop
imul
cmp
test
stos
mov
dec
mov
test
adcb
dec
loopne
mov
jne
call
addl
outsl
mov
mov
mov
jecxz
xchg
xor
push
leave
or
add
mov
js
cld
stc
dec
or
cmp
jne
add
jb
lea
xchg
adc
cs
outsl
mov
jno
jns
jnp
cwtl
cmp
adc
inc
jbe
stc
mov
outsb
fidivl
sub
stc
leave
icebp
pop
sahf
xor
insb
jmp
dec
das
sti
pushf
cli
mov
ret
arpl
verr
js
jmp
cmc
or
pop
lret
add
xor
mov
push
movsb
lea
sbb
mov
sub
negb
std
jo
repnz
ja
dec
adc
aaa
inc
mov
push
xor
add
inc
out
adc
cmp
rcl
sub
jb
pop
shl
sbb
arpl
jmp
jl
xor
rorl
bound
js
jp
emms
add
push
aas
scas
inc
xchg
test
ljmp
pop
repz
in
sub
in
or
call
pop
clc
mov
xlat
int3
lods
arpl
adc
lahf
inc
push
out
test
stc
and
lcall
enter
shll
shrb
add
shll
and
mov
scas
pop
arpl
test
loopew
dec
cmp
push
jbe
movsb
std
out
jle
mov
jg
fnsave
fdivp
pop
enter
sbb
ds
fiadds
repz
in
jae
xor
lock
mov
loope
push
fiaddl
gs
lock
add
dec
mov
das
sbb
fadds
push
int
out
loope
nop
loop
push
jns
call
add
fwait
shll
out
jae
outsb
pop
das
int3
outsl
jae
push
sub
rcrl
mov
int3
stc
jp
lret
dec
in
les
shrb
and
sub
in
sbb
cmpsl
and
sbb
push
inc
adc
adc
jns
aas
inc
sti
push
lods
dec
addr16
mov
insb
sub
jns
and
mov
push
or
mov
nop
sti
aad
jb
ja
lea
lcall
stos
scas
insb
add
ss
cmp
cmc
lretw
adc
clc
pop
fldl
mov
jl
xor
insb
repz
add
jmp
out
push
cmp
stos
in
jge
xor
push
out
mov
pop
aas
mov
xor
mov
mov
addr16
xchg
sbb
jbe
cmp
pop
imul
lcall
sti
jmp
in
mov
sub
add
adc
inc
xorb
pop
jnp
cwtl
loopne
xchg
adc
mul
into
jmp
xor
xchg
inc
xor
xchg
ja
ja
xor
adc
push
push
in
push
inc
enter
dec
cmp
cld
mov
je
add
dec
cmc
xchg
pop
cmp
dec
inc
and
dec
data16
dec
icebp
mov
adc
mov
or
lcall
jo
xor
loop
or
ss
iret
xchg
jmp
pop
popa
mov
out
andl
inc
push
dec
inc
mov
or
jne
int
out
adc
pop
add
mov
mov
aas
cmp
gs
push
movsl
imulb
fs
inc
ret
es
fsub
xor
and
ss
push
or
push
loopne
cli
in
mov
and
outsl
dec
cwtl
mov
mov
or
inc
pop
add
ret
or
xor
adc
and
dec
cmc
cltd
inc
jne
popa
orb
imul
mov
dec
iret
mov
int
dec
or
repz
and
mov
cmpsb
clc
fmuls
test
movsl
outsl
jmp
clc
pop
out
out
jne
lahf
xor
push
dec
mov
inc
aas
das
xchg
jnp
adc
and
rclb
pop
mov
cmp
das
fs
mov
out
mov
hlt
insb
dec
movsl
sub
mov
ret
or
inc
aaa
subb
mov
das
shrl
je
cmp
or
fwait
adc
or
adc
jnp
sub
push
cld
and
xor
xchg
iret
dec
in
push
pop
mov
mov
and
cmc
or
inc
out
cmpsb
inc
call
addr16
pop
ret
inc
pop
xchg
out
je
outsb
sbb
add
mov
xchg
ret
or
scas
mov
push
xor
or
sbbb
sbb
lret
push
shrb
rcrb
sti
pop
adc
sbb
pop
ljmp
push
push
xchg
fcoml
and
add
xlat
frstor
into
inc
mov
push
icebp
push
imul
mov
dec
sti
cwtl
cmp
pop
aaa
es
loop
icebp
pop
jl
movsl
adc
test
pop
mull
jnp
call
push
jbe
int3
lcall
jge
sbb
outsl
mov
outsb
call
in
ret
mov
pop
jle
sub
and
dec
insb
push
mov
loopne
aam
mov
adc
mov
adc
or
adc
or
push
test
jmp
pushl
iret
jae
pop
inc
jns
pop
add
pop
xchg
jecxz
sbb
mov
sub
mov
jle
sbb
sub
ret
cld
test
jbe
and
jp
and
and
leave
lock
bound
fildl
mov
or
xchg
aaa
cwtl
js
cmp
dec
movsl
aas
test
sub
out
fmuls
leave
push
mov
mov
sub
adc
xor
imul
dec
lea
mov
or
adc
lcall
jns
xor
push
xor
lret
jnp
jb
popf
xchg
sub
pop
add
add
adc
out
and
addr16
jo
dec
cmp
into
stos
gs
or
mov
cld
push
out
xchg
lret
adc
pushf
ds
out
mov
into
popa
push
and
fistpll
xor
outsb
out
adc
cld
push
inc
push
outsl
or
popf
pop
mov
or
cmc
lods
jbe
push
decl
adc
or
shrl
fildl
ret
mov
and
test
sbb
cmc
or
adc
add
fidivrl
and
push
mov
out
mov
mov
mov
leave
add
dec
adc
adc
cld
mov
sti
loop
insb
sub
nop
add
hlt
test
scas
inc
mov
cmp
dec
push
xor
sbb
xchg
or
stos
je
sub
pop
cs
jbe
arpl
mov
arpl
mov
push
out
lds
cmpb
ss
insb
mov
dec
aaa
pop
push
mov
fcomps
push
loop
fistl
adc
fdivrs
pop
xor
fiadds
movsl
idiv
dec
shll
notl
inc
push
mov
mov
dec
xchg
lock
add
ret
cmp
loope
daa
stos
arpl
or
pop
push
dec
dec
adc
outsl
js
sub
mov
cwtl
pop
and
nop
xor
cmp
cld
cld
xor
repnz
ret
and
sbb
inc
int
lcall
dec
inc
lds
or
je
ljmp
pop
inc
pop
mov
insb
adc
mov
mov
or
outsb
push
das
mov
fnstcw
push
jbe
into
jae
cmp
out
jb
jne
dec
pop
les
push
add
les
pop
pop
sarb
popa
xchg
jno
jne
pusha
dec
loope
jo
repz
mov
and
adc
xor
cmc
jmp
jge
add
mov
inc
jmp
sbb
xlat
loopne
invd
xor
testl
ljmp
mov
daa
push
aas
push
into
outsl
das
fdiv
test
mov
popa
cltd
ds
dec
push
adc
sub
xor
mov
pusha
scas
adc
jo
pop
adc
lcall
xor
aas
add
daa
stos
mov
mov
ficoml
dec
stos
xchg
jmp
inc
jecxz
orl
jns
cmp
add
xor
pop
test
adc
das
xor
sub
inc
mov
lahf
or
xor
jns,pn
sbbb
vpaddsb
leave
ja
xor
adc
jnp
insb
push
inc
cmp
outsb
mov
mov
adc
popf
scas
inc
icebp
mov
xor
je
out
scas
add
sbb
loopne,pt
cmp
scas
jae
and
aam
xor
imul
jbe
test
int
test
inc
push
fldl
pop
mov
pop
repnz
repz
mov
lcall
mov
push
xlat
mov
jo
mov
cmpsl
ds
decl
add
or
dec
add
sbb
xchg
adc
adc
push
lret
or
mov
jnp
pop
ja
lahf
test
push
mov
pop
mov
in
mov
andb
stos
repz
mov
cmpsb
sbb
push
inc
loopne
xchg
dec
push
repz
ss
jmp
popf
xor
adc
add
sbb
or
xchg
lret
std
hlt
sbb
cmp
sbb
nop
mov
es
push
sub
pop
cmp
inc
add
or
inc
adc
inc
in
fadd
xchg
mov
pop
loopne
mov
mov
addr16
add
outsl
inc
or
popa
sbb
push
rorl
lods
ss
and
add
cmp
xchg
filds
xlat
or
sub
mov
and
aas
aam
daa
inc
shr
jae
inc
out
dec
mov
jbe
jne
cmc
sbb
or
inc
loopne
outsb
push
mov
pop
dec
bound
push
pop
or
iretw
popa
outsl
adc
mov
and
mov
fwait
lret
and
fldcw
neg
inc
mov
mov
mov
and
mov
xchg
movb
inc
dec
fucomp
mov
jno
enter
gs
sub
hlt
push
add
pop
sahf
cmc
add
lret
ss
add
push
xor
lret
incl
gs
icebp
shll
pop
addr16
call
aas
jb
movsl
enter
cmp
and
pop
aam
stc
outsl
push
in
stos
hlt
mov
not
cmp
dec
inc
pop
mov
add
es
push
mov
mov
nop
push
jbe
insl
pop
xor
lcall
jecxz
dec
mov
add
adc
push
subl
dec
fisubrl
les
cld
lea
xchg
je
int
mov
adc
fidivl
jo
xchg
outsl
pusha
in
xchg
xlat
xchg
xchg
movsb
mov
lods
add
sbb
adc
loopne
cli
xchg
xchg
ljmp
sarb
push
dec
mov
cmpsl
cld
jns
mov
inc
int
call
pop
push
or
or
add
fs
cld
dec
and
daa
stos
loopne
data16
pop
int3
add
jo
adc
mov
cmpsb
pop
popf
inc
fsts
sub
cld
mov
or
ss
jge
lea
pop
out
ds
add
mov
adc
mov
push
push
hlt
push
mov
add
shrl
xor
pop
lds
mov
adc
push
pop
push
jge
clc
add
fisubs
sbb
xor
std
adc
pop
xchg
adc
lcall
jb
mov
mov
mov
push
repz
mov
xchg
mov
xchg
int3
add
mov
outsb
push
or
ss
cmp
lret
inc
fnstcw
add
cwtl
ret
xchg
mov
pop
scas
jne
mov
mov
mull
in
out
decl
loopne
icebp
sub
lret
jno
gs
insb
nop
ret
rcll
int
lahf
sbb
mov
or
in
mov
mov
nop
aad
ja
fs
dec
jae
lret
xchg
dec
ret
mov
es
add
add
pop
and
out
mov
adc
xor
mov
adc
lret
je
incl
pop
subb
lcall
dec
pop
sarb
cmp
mov
les
mov
xor
mov
jns
xor
fnstenv
out
sbb
xchg
inc
mov
sbb
lcall
je
cmpsl
xchg
aam
adc
inc
add
sbb
int
and
pop
mov
xchg
js
mov
test
leave
out
mov
fucomp
out
push
or
jl
bound
inc
adc
cmp
lea
cmp
inc
das
inc
cmp
cmc
mov
pop
jp
or
push
in
mov
jno
mov
adc
sub
movsl
lock
cs
aad
negl
iret
pop
hlt
test
lds
inc
add
and
inc
mov
stos
into
push
mov
popf
push
adc
mov
ljmp
xor
inc
sub
icebp
cwtl
and
aad
bound
shlb
or
movsl
sub
out
ljmp
pop
aas
gs
in
fdivrl
sbb
push
push
stos
xchg
ret
loop
leave
push
aad
outsb
or
mov
cmp
pop
cmp
add
aas
fistpl
leave
nop
mov
andl
idiv
cmp
mov
jb
out
in
push
nop
sub
arpl
inc
jle
imulb
inc
imul
jmp
je
mov
dec
jb
rcll
es
adc
xlat
aam
mov
adc
popf
sbb
xor
jnp
push
push
pop
mov
enter
xor
or
gs
loopew
shr
in
push
outsb
les
pop
cmp
mov
psubb
in
push
outsl
xor
or
push
leave
xor
jne
or
out
add
cmp
imul
scas
icebp
sub
push
inc
sub
dec
inc
jmp
push
icebp
mov
filds
inc
ja
in
and
pop
or
push
jno
js
pop
xor
clc
clc
xor
add
gs
je
repnz
pop
add
pop
xchg
popf
jno
hlt
sti
sbb
aad
fcoms
arpl
movsl
fwait
pop
cmpsb
inc
lahf
leave
dec
xor
fildl
inc
enter
xchg
ds
das
in
xor
mov
inc
jae
inc
or
lods
sub
loopne
pop
arpl
mov
mov
lcall
fdivr
lods
in
inc
imul
push
jl
or
push
adc
sbb
mov
jns
mov
push
dec
out
cs
mov
addr16
pop
ljmp
icebp
lahf
jle
jne
xor
jmp
outsb
sbb
icebp
and
cmp
mov
testl
inc
fldt
sub
out
xor
sub
push
xor
jl
and
adc
push
jne
fisttps
lock
mov
and
pop
sbb
mov
xor
jno
add
mov
push
int
pop
and
jbe
cmp
pop
xchg
sub
pop
dec
push
or
clc
adc
inc
xor
adc
outsb
xchg
sub
xchg
imul
fadds
xchg
push
loope
xchg
addl
mov
dec
adcb
cltd
cli
sbb
sbb
fildll
add
lods
nop
sbb
rol
pop
mov
adc
push
cmp
mov
push
xchg
and
xor
cmpsl
or
dec
scas
mov
sub
dec
push
imul
cwtl
jl
popf
ja
je
jecxz
je
push
lcallw
aad
lods
insb
pop
roll
test
int3
js
mov
sbb
aad
je
push
jg
repz
push
mov
xchg
lods
incb
ljmp
fidivs
jp
pop
xchg
cmp
loope
lahf
lahf
dec
mov
in
mov
push
xchg
adc
fiaddl
sahf
xchg
push
push
mov
inc
adc
adc
ret
inc
adc
dec
ljmp
jne
test
and
iret
inc
cwtl
adc
jnp
or
mov
pop
es
ret
dec
ret
mov
mov
rorb
test
sbb
fdivs
outsb
mov
sub
or
xor
pop
push
div
incb
jle
imul
dec
inc
movsl
xchg
popf
jo
jmp
ja
enter
or
sahf
cwtl
jae
aad
xor
adc
pusha
mov
rcrb
pusha
mov
push
into
jl
das
shll
ss
xchg
push
xchg
addl
imul
das
jbe
and
lock
xchg
inc
orb
pop
into
add
adc
adc
adc
negl
mov
sti
rcrb
push
shrb
and
jle
mov
call
xchg
divb
pop
pusha
sub
dec
adc
sub
outsb
out
inc
mov
lods
cmpsl
dec
or
push
sbb
adc
adc
jo
aad
mov
push
mov
inc
mov
mov
add
or
sbb
xchg
out
repnz
subl
test
push
push
sbb
mov
syscall
aam
out
inc
mov
mull
jne
mov
and
inc
icebp
loopne
add
or
add
shll
xchg
inc
std
andl
scas
mov
sub
or
out
outsl
pop
add
mov
and
pshufd
add
mov
pop
dec
nop
dec
add
push
mov
pop
pop
and
mov
popa
cli
xor
jg
sbb
jle
adcb
mov
in
div
test
xchg
fwait
or
pop
and
orb
xor
pop
lcall
scas
aas
imull
dec
cltd
push
inc
cwtl
and
shr
fcomps
scas
pop
sub
in
aas
jle
sbb
cmpsl
stos
mov
mov
sub
jmp
inc
xor
xchg
push
loop
jecxz
clc
arpl
ret
sub
dec
bound
icebp
push
ljmp
rorb
jge
inc
inc
sahf
fldcw
cwtl
nop
shlb
hlt
mov
cmp
in
rolb
or
sbb
ret
jns
ds
leave
pusha
in
or
mov
xor
and
xor
incl
mov
cmp
loopne
int
adc
dec
test
adc
loop
je
mov
not
fistl
adc
movsb
sub
push
jmp
adc
fisttpll
sbb
cs
and
cmpsb
in
xor
mov
or
in
cld
lret
loope
add
mov
pusha
jp
cmp
adc
jae
lock
push
stos
jle
sub
xchg
ss
je
xchg
cmpsl
cmp
jmp
jge
bound
and
aaa
addl
push
data16
mov
test
sub
adc
jle
cmp
je
push
and
fwait
loop
and
xchg
dec
and
mov
add
jb
scas
in
shl
cltd
dec
jg
sti
xchg
push
jae
mov
outsb
push
xchg
push
and
testl
xor
dec
scas
inc
hlt
inc
mov
xlat
sub
push
mov
cmp
jle
subb
out
lret
mov
bound
cmp
inc
out
rcl
inc
push
xor
jl
lods
mov
lahf
outsb
inc
pop
mov
jbe
adc
addl
xchg
andl
xchg
mov
lret
fmulp
mov
pop
stc
cmp
add
jmp
in
enter
leave
sub
dec
cltd
pop
and
sbb
je
or
mov
cld
sub
inc
dec
and
push
imul
test
cmpsb
push
je
ret
sub
push
mov
xor
add
mov
inc
clc
mov
mov
push
insb
dec
testb
mov
loop
dec
arpl
idiv
push
fs
imul
cmpsl
js
rorb
jno
lret
fnstcw
cmp
cmpb
mov
fildll
mov
cmp
jmp
wrmsr
jp
mov
ja
cmp
inc
cmpsb
inc
xchg
jg
mov
shrd
jno
fs
in
mov
push
call
cmpsl
adcb
cmp
dec
jo
xor
sarl
mov
ds
adc
fdiv
test
mov
dec
int
in
cwtl
lret
jns
maskmovq
idivl
hlt
imul
add
pop
xor
pop
sub
add
test
inc
fs
je
gs
repnz
insl
mov
ds
sub
adc
add
push
add
mov
dec
push
pushf
push
jae
cmp
test
ja
repz
scas
push
stc
sub
jb
lock
xchg
pop
cwtl
sub
mov
jbe
jp
mov
mov
loop
lds
cmp
frstor
das
scas
ret
pushf
dec
cmpsl
add
aam
lea
sub
mov
pop
adc
cmp
inc
dec
or
xchg
jns
sbbb
outsb
popf
or
xchg
in
test
sub
push
xchg
mov
fcmovbe
lock
bound
mov
fnstcw
mov
xor
int3
loopne
test
sahf
dec
cmp
fnsave
xchg
cmp
fmuls
jge
and
enter
loope
insb
jle
pusha
pop
hlt
mov
xor
pop
fidivs
cwtl
ret
or
jne
push
or
std
dec
movsb
mov
and
sti
divb
or
jg
add
mov
out
test
mov
sbb
ret
lea
push
int
or
mov
out
jecxz
and
je
xchg
cmpsb
enter
dec
jmp
jnp
sub
pop
inc
cmpsb
out
sysret
cmp
das
dec
add
mov
arpl
fldt
test
xchg
sahf
lods
lods
xorb
rorl
lcall
mov
sub
lock
xchg
and
mov
xchg
bound
sub
add
or
pop
mov
enter
jae
or
fcomps
xor
lret
ljmp
adc
adcl
pushf
xor
and
xchg
pop
mov
shlb
pushf
jbe
cltd
es
adc
scas
xchg
loope
cmp
adc
adc
idiv
sbb
pushf
sarb
xchg
call
jne
push
or
imul
test
iret
leave
xchg
mov
add
xlat
fs
fwait
mov
and
cmp
mov
sub
stc
xlat
mov
xor
mov
adc
add
call
xchg
aas
test
sahf
pushf
mov
outsl
shrl
xor
sub
push
iret
jmp
and
dec
cmpsb
and
xor
dec
xor
sub
das
adc
add
flds
or
dec
sub
lea
sbb
adc
lcall
les
push
ds
cmp
push
sbb
mov
js
push
and
ret
lret
and
int3
daa
pop
rclb
test
cs
lock
push
lods
sub
xchg
ss
lret
fcomip
sbbl
jle
push
mov
scas
sub
mov
push
add
std
mov
mov
or
rclb
mov
pop
xor
aam
call
push
push
inc
pop
dec
call
scas
fistpll
sahf
xchg
std
test
add
iret
cli
dec
call
popl
adc
add
int3
jnp
or
inc
mov
xchg
jno
or
lahf
push
jb
mov
rorb
pop
stos
mov
hlt
loopne
xor
popf
addl
jo
sbb
out
mov
into
subl
pop
out
clc
sti
xlat
jae
jne
inc
add
psllq
popa
mov
or
mov
xor
fidivs
mov
mov
adc
leave
dec
cmc
dec
lods
aas
xor
sbb
or
loopne
rcrb
and
pushf
sbb
adc
mov
ret
movsb
dec
subb
loopne
sbb
mov
lret
rcl
dec
test
mul
pusha
jl
orb
jecxz
test
adcl
mov
adc
jno
jmp
mov
or
xchg
jg
jb
ret
popf
inc
sub
mov
mov
xor
lods
xorl
mov
mov
pusha
push
movsl
loope
arpl
xchg
jnp
cld
pushf
push
mov
loop
jmp
cmp
fs
add
mov
idivb
cwtl
call
aad
call
add
out
pop
movsb
or
mov
jecxz
cmp
pop
or
sbbl
icebp
ja
jl
jmp
je
jle
in
je
add
pop
sti
xchg
dec
jo
sbb
lock
scas
aam
mov
jg
or
cmc
es
rclb
adc
stc
js
jbe
mov
adc
sbb
stos
dec
push
ror
and
stc
mov
and
mov
adc
mov
clc
xchg
xchg
mov
xlat
es
movl
xchg
or
sti
js
and
xlat
fs
dec
es
cmp
inc
pop
int3
lods
rolb
shll
inc
arpl
cmp
xorb
cmc
fldt
inc
xchg
rcl
mov
jbe
rorl
inc
sub
int
cmp
sbb
mov
shlb
loop
add
ret
outsl
ret
jp
fucomp
add
aam
cmp
sub
xchg
leavew
inc
inc
add
xchg
pop
inc
addl
imul
pop
clc
mov
lcall
mov
mov
sbb
sub
vpsraw
or
jnp
ret
push
and
cltd
inc
in
cwtl
fwait
outsl
inc
mov
sub
push
cmpsb
shll
mov
jl
mov
adc
and
pop
lahf
xor
inc
add
fdiv
sahf
add
and
pop
adcb
arpl
in
jbe
ja
in
add
and
mov
test
sti
cwtl
stc
test
push
pop
cld
and
movl
adc
hlt
in
test
pop
pop
or
xor
and
lea
xchg
int3
sbb
cmp
inc
daa
inc
dec
test
and
inc
dec
jbe
inc
add
pop
jmp
dec
adc
sub
sub
imulb
movsl
fs
mov
mov
rcll
ds
xor
push
jle
pusha
cmpsl
testb
iret
fsub
subb
mov
xchg
testl
pop
adc
inc
cld
jb
scas
adc
pop
rcrl
push
mulb
mov
push
mov
mov
mov
adc
pop
push
or
push
xor
push
pop
movsb
xchg
sub
push
rol
sub
or
push
je
push
inc
stc
sbb
jno
inc
pushf
popf
push
ret
xor
xor
data16
pop
jno
dec
push
stos
in
dec
inc
inc
pop
and
repnz
sarl
in
or
leave
mov
jle
push
mov
xor
ss
fwait
ljmp
push
sub
clc
shll
mov
test
sbb
cwtl
shll
das
lock
data16
mov
cmpl
mov
fildll
popa
push
push
loopne
and
ds
jno
inc
mov
xchg
repz
sub
cmp
sbbl
rorb
push
mov
jne
nop
gs
jp
scas
pop
test
lahf
mov
insb
and
cmp
or
sbbl
pop
inc
cmp
mov
and
ret
jne
jnp
xor
inc
xlat
rcrl
sub
lea
cltd
ds
dec
rorl
ret
in
stc
inc
loop
push
jmp
aas
inc
push
push
sub
push
pop
inc
dec
je
aaa
adc
jle
das
jns
jl
or
lea
inc
push
popa
mov
cmp
mov
jl
in
pusha
sub
xor
adc
cwtl
mov
addr16
hlt
mov
leave
cmpsb
rcl
hlt
mov
cmc
pop
xor
adc
inc
lahf
xchg
fcomps
push
decb
mov
and
ss
xchg
popa
fldenv
faddl
inc
scas
std
movsb
daa
out
das
and
cwtl
mov
loop
pop
iret
scas
mov
cli
inc
popl
jne
out
jbe
dec
int3
idivb
leave
and
outsl
enter
sub
xor
cs
sub
inc
cmp
iret
lret
cld
xlat
imul
mov
sahf
jne
add
mov
mov
xor
inc
xor
in
xchg
out
or
into
fs
lock
lcall
cmp
adc
popa
das
pop
pushf
fldl
aam
pushf
call
sti
test
push
push
jg
push
test
out
hlt
jge,pt
stos
xchg
scas
jecxz
sub
xchg
ljmp
push
int
flds
push
xchg
insl
int
call
imul
mov
fstl
xchg
pop
jnp
mov
lock
clc
mov
daa
sub
hlt
out
add
sub
in
movsb
or
add
or
gs
fucomp
inc
xchg
inc
push
add
into
js
jg
test
sbb
cld
mov
add
arpl
and
fstpl
sub
lds
shll
cmp
inc
push
sbbl
pushf
and
mov
mov
mov
xor
repnz
adc
insl
scas
cltd
cmpsl
outsb
imul
adc
in
xor
rclb
repz
xchg
insb
aas
pop
mov
cs
imul
or
mov
mov
pushf
ret
cmpsb
je
xchg
or
add
pop
rcll
std
push
loope
mov
xchg
outsb
inc
outsl
imul
mov
pop
adc
movsl
sti
mov
inc
int
sbb
or
jle
or
push
xchg
and
inc
ja
xchg
jmp
pop
inc
add
cmp
outsl
lds
insl
pop
push
lea
test
push
mov
in
and
push
sub
in
xorl
adc
pushf
test
adc
lret
jg
cltd
push
cmp
xor
scas
aas
jns
mov
cs
jb
imul
aam
cli
xchg
mov
cs
xor
push
pop
out
aam
in
jno
daa
dec
inc
aam
add
jo
mov
cmp
pop
cwtl
add
test
int
xchg
mov
hlt
adc
sahf
and
enter
ja,pt
int
inc
push
rcrl
push
repnz
sbb
stos
andb
out
sbb
das
cmpsb
inc
add
add
mov
into
test
ja
lods
cmc
and
das
test
int3
shrl
popf
sub
mov
lret
fcoms
or
push
pop
mov
aas
filds
std
dec
sub
cmpb
cmp
jns
cwtl
inc
shrl
jecxz
dec
add
popa
jbe
fidivrl
jp
jmp
out
lahf
insl
int3
adc
jl
loope
out
loope
rcrb
pop
test
and
fists
sbb
cmp
sub
mov
pop
mov
ja
mov
int
mov
push
jne
fucomi
cmp
xor
and
sub
fcompl
int
outsl
fwait
imul
in
add
pop
xchg
xchg
jg
jmp
push
repnz
inc
outsl
jo
mov
mov
popf
jg
mov
push
jp
adc
mov
sti
mov
sub
and
sarl
fs
dec
cmp
call
adc
in
xchg
scas
mov
sub
mov
hlt
in
pop
pop
mov
adc
mov
inc
in
and
mov
add
out
adc
xor
or
into
pop
sub
xor
int3
push
mov
xor
test
cmp
mov
jecxz
xchg
mov
mov
or
mov
imul
sub
push
xchg
and
push
lret
stc
sub
and
sbb
pop
add
divb
std
cwtl
adc
jmp
pop
sbb
mov
pushf
mov
xchg
adc
inc
mov
push
inc
lds
mov
lods
outsb
dec
or
mov
loope
jmp
mov
push
mov
sub
mov
or
mov
fwait
xchg
fs
and
jne
mov
push
dec
inc
jns
pop
push
sub
movsb
mov
jo
adc
aaa
mov
stos
imul
jae
imull
ja
sbb
jns
shlb
roll
xchg
jecxz
sub
jmp
xchg
out
cmp
enter
adc
jae
jo
mov
add
shll
stc
jp
je
inc
mulb
pop
pushf
mov
cmpsl
fldl
aaa
stos
adc
aas
pop
je
dec
sar
pop
cltd
lret
test
sub
popf
pusha
pop
cmp
pop
mov
cmp
adc
loopne
adc
dec
adcl
xchg
push
cmp
pusha
sub
cld
pop
mov
dec
cmp
popa
outsb
jae
or
pushf
adc
push
aad
add
push
push
adc
push
clc
int
mov
adc
out
sub
push
or
jb
stc
jb
jmp
ljmp
rol
mov
push
or
popa
jo
or
or
cmp
dec
mov
int
lods
push
jg,pt
iret
ret
pushf
mov
mov
hlt
dec
std
pop
repnz
outsb
add
push
fsubr
pusha
inc
add
lods
stc
stos
and
or
push
xor
inc
cwtl
test
xchg
mov
mov
fdivrp
outsl
mov
push
cmp
or
xchg
in
mov
push
jecxz
sti
lret
enter
push
cmp
lret
jo
jle
push
mov
jle
or
stos
rcrb
xlat
jns
ret
adc
lods
in
xchg
popa
and
andb
lret
jge
leave
jbe
fcomp
notl
loope
cmp
sahf
lcall
popf
add
inc
adc
divl
les
cmp
cltd
inc
pop
stos
clc
cmpsl
add
fmuls
mov
and
jb
lahf
jecxz
or
test
nop
cmp
scas
inc
dec
cld
call
jae
sbb
hlt
imul
xor
div
pop
mov
jl
ret
shll
jecxz
dec
mov
repz
inc
mov
out
outsl
mov
mov
pop
push
stc
shlb
mov
push
sti
inc
iret
pop
imul
mov
leave
test
mov
fs
or
sbb
dec
adcl
in
fnstenv
and
psrld
mov
cmp
adc
xchg
imulb
xchg
xorl
mov
arpl
inc
sub
decb
push
icebp
loop
xchg
push
pop
mov
arpl
mov
cmc
bound
ret
xchg
sub
push
bound
mov
cli
dec
ds
stos
outsb
push
and
int
jb
or
ss
and
sbb
mov
inc
shrl
pop
xchg
push
fnstcw
cmp
or
loop
sub
mov
sahf
mov
lock
sbb
addr16
mov
jge
std
mov
in
mov
cltd
fiadds
push
loope
jl
out
hlt
dec
sub
push
cmp
inc
daa
sub
aaa
incb
int3
pop
ljmp
fs
dec
xor
jle
xchg
dec
sbb
jmp
sbb
lods
ds
jae
pop
test
insb
xor
test
cmc
add
and
inc
jbe
rcll
sbb
lods
subl
mov
pop
mov
add
sub
add
pushf
insl
fcomps
jle
imul
jge
jns
clc
and
ds
add
stc
popa
add
xchg
rol
push
call
jae
int
pop
lock
pop
pop
push
xor
xchg
popa
scas
mov
subb
pop
xchg
loopne
iret
in
int3
cli
dec
ss
add
out
cvtdq2ps
mov
pcmpeqd
xlat
nop
dec
test
push
push
xchg
push
xor
xchg
js
test
cmp
or
ret
jae
xchg
in
cmp
and
sbb
test
jge
movsl
rolb
out
pop
xchg
jecxz
cmp
loopne
shr
jmp
jbe
sub
sub
push
mov
or
push
push
test
rorl
loop
mov
jl
cmc
pop
and
push
aam
push
std
es
popf
lret
inc
jns
push
outsb
or
sbb
popf
test
push
lahf
pop
inc
out
adc
mov
ja
ret
jae
insl
and
xchg
fwait
icebp
rclb
sub
cmc
push
mov
xchg
clc
pop
arpl
push
sbb
and
pop
sub
and
daa
xorb
inc
adc
or
rolb
xchg
testb
out
push
xor
ret
mov
outsb
xchg
scas
stc
leave
insl
jmp
mov
or
lcall
and
xchg
les
xchg
stos
aam
arpl
pushf
cmpsb
inc
jb
nop
shlb
sub
mov
mov
cmp
out
jp
push
fdivs
pop
icebp
mov
push
push
roll
add
mov
jne
in
pop
pop
and
jg
cld
daa
xchg
xchg
movlps
mov
mov
pop
xor
jmp
out
inc
outsl
in
lods
ret
aaa
mov
sbb
dec
loop
lods
mov
loop
mov
lcall
sub
inc
and
rorl
and
and
push
and
inc
inc
nop
les
fmul
cwtl
out
and
sbb
mov
inc
sub
std
xor
loopne
fists
js
int3
iret
sub
sub
sti
movsl
sahf
shlb
sbb
xor
cmp
pop
dec
es
mov
test
movsl
xchg
jecxz
or
das
push
adc
mov
inc
cltd
push
call
inc
imul
bound
out
and
inc
cli
gs
inc
lods
pop
mov
dec
add
mov
mov
xor
cltd
andl
inc
stos
sub
sub
sub
jl
push
ret
and
jmp
ja
add
ljmp
pop
push
outsb
movsl
lods
addr16
push
inc
add
pop
pop
std
sbbl
ret
int
imul
bound
aaa
adc
je
or
daa
jmp
sarb
shrb
cmp
mov
aaa
push
and
sbb
cmc
jle
adc
fs
rcrb
sti
xlat
xorl
and
lahf
loope
loopne
cmp
rcrb
jl
jae
inc
add
and
icebp
shrb
xor
mov
loopne
dec
outsl
dec
jle
xor
fisubrl
push
cmp
pop
sub
mov
loop
movsl
outsb
cmc
aam
repnz
mov
sahf
or
outsb
pop
mov
test
les
xchg
lds
sbb
sbb
sbb
jg
pop
pop
pop
out
sti
inc
mov
ret
pop
sti
mov
mov
adc
insl
rclb
cwtl
arpl
mov
lret
incl
mov
xchg
test
fists
leave
or
cmp
and
aaa
push
xchg
push
xor
dec
loop
loopw
jmp
fcomi
mov
popf
sbb
movsl
fcoml
jne
pusha
add
or
movsb
imul
popf
xlat
cld
out
jnp
popl
popa
arpl
stos
imul
cmpsb
cmp
mov
jne
or
sbb
call
repnz
mov
je
xor
sub
nop
call
adc
mov
xlat
call
xor
enter
inc
je
movsb
inc
mov
dec
mov
shl
pop
jp
adc
and
add
pusha
das
push
lods
mov
mov
mov
add
fisubs
mov
lret
sbb
cli
call
sub
stos
sbb
insb
shll
inc
popa
cmpsl
clc
push
and
loope
nop
xchg
adc
and
in
sub
or
shr
rclb
adc
jmp
stos
mov
mov
sahf
pusha
mov
shll
out
xor
sub
add
sub
dec
push
dec
inc
mov
mov
loop
stos
outsb
jge,pn
movsb
cmp
push
shl
pop
loopne
rcrl
call
test
sti
fninit
ret
js
push
adc
out
fdivs
int
dec
popa
shrb
mov
js
inc
or
ret
push
cmpl
xor
adc
xchg
fsubl
mov
pusha
jl
stc
dec
push
mov
jb
push
jmp
adc
lea
mov
lret
notb
mov
pop
movsl
ja
push
sarl
xor
int3
inc
shlb
xor
shll
jns
sub
push
jmp
ficoms
jecxz
sub
fisubl
and
fistl
xchg
jns
sti
jge
xchg
ja
sbb
xchg
jne
pmuludq
dec
ljmp
mov
mov
dec
inc
pop
and
ret
ja
lret
iret
cmp
fcomps
js
dec
nop
adc
dec
rorb
inc
sarl
cld
inc
js
push
sbb
mov
inc
cmp
jb
sbb
add
sbb
xlat
add
out
dec
scas
lock
pop
jbe
mov
enter
test
bound
sbb
aad
stos
push
mov
xchg
cmp
xor
sbb
in
rcr
xchg
xor
add
pop
jle
mov
mov
jmp
icebp
or
pushw
or
push
mov
fs
pop
push
ret
and
ds
dec
dec
inc
mov
dec
or
rorb
push
scas
xor
lock
fsubl
lea
addb
ja
mov
cmpsb
ljmp
sbb
out
daa
or
or
sbb
pop
testl
push
scas
bound
jmp
cmp
stc
out
fbld
sbb
xchg
xor
popa
mov
fdivrl
mov
popf
mov
add
xchg
loopne
cmpsb
hlt
lret
jge
jb
sbb
add
and
jo
xchg
mov
sbb
dec
leave
outsl
rcll
cmc
cld
popl
sub
arpl
add
dec
pop
insb
sbb
push
mov
sub
data16
adc
xchg
mov
push
enter
test
cmp
jecxz
or
mov
rcl
inc
jnp
std
shr
sub
jmp
jbe,pt
pop
jle
push
xor
adc
repnz
pop
mov
lods
dec
mov
sahf
cwtl
or
mov
and
xor
add
movsl
cmp
push
ljmp
push
out
push
test
int
popa
adc
jg
pop
idiv
sub
imul
pop
popa
pop
dec
pushf
hlt
out
cli
sti
sbb
xchg
cmpsl
jae
insb
pop
shll
xlat
xchg
cwtl
jne
pusha
jl
adc
sbb
je
out
repnz
push
mov
scas
sbb
fisubs
sbb
jo
xor
in
jmp
jnp
jp
inc
sbb
test
push
xchg
mov
popa
inc
ljmp
into
outsb
fidivrs
add
fwait
in
cmp
fucomi
push
pop
fld
xchg
pop
xchg
inc
pop
imul
mov
test
inc
mov
push
enter
xchg
fcmovu
iret
loopne
movsb
push
push
or
jle
add
xor
dec
cmp
or
push
scas
fiadds
xor
add
mov
sbb
sub
pop
and
nop
jne
push
mov
outsl
inc
push
shlb
dec
leave
and
popa
dec
adc
pop
mov
sub
loopne
shl
rorl
lods
or
es
and
jno
dec
inc
dec
xor
inc
sti
lock
xchg
scas
icebp
jb
mov
xor
stos
mov
loope
cmp
lods
jbe
pop
nop
pop
data16
jg
aas
jmp
pop
adc
xchg
ja
push
cmp
push
inc
enter
cmp
mov
hlt
pop
out
or
pop
add
cmp
sub
popa
xchg
mov
push
out
das
ds
rolb
mov
or
ret
lock
add
mov
xor
sub
mov
adc
jg
ret
jnp
mov
jmp
mov
push
xlat
push
arpl
lods
movsb
xor
mov
cli
inc
popf
mov
iret
fwait
push
dec
push
jbe
xor
mov
mov
repz
or
mov
aaa
les
mov
mov
mov
xchg
loope
pop
inc
xor
ret
xor
repz
pusha
filds
adc
sbb
and
shrb
outsb
adcl
mov
dec
pop
nop
mov
dec
movsb
fwait
jl
mov
xchg
mov
xlat
inc
ret
test
mov
gs
adc
testl
cmp
hlt
pop
xchg
dec
adc
xchg
xchg
js
push
xchg
mov
mov
xchg
mov
ljmp
lock
insb
dec
adc
push
inc
ss
out
pop
mov
gs
sub
jb
add
insb
dec
sbb
mov
xchg
movsl
sbb
dec
jecxz
cmp
inc
lret
pop
xor
mov
pushw
lds
pop
xor
jle
pop
test
pop
in
aaa
fsubrs
mov
div
int3
push
fmul
lret
in
add
lea
ret
xchg
fiadds
aad
dec
sbb
mov
daa
ds
popa
call
adcb
leave
popa
push
or
mov
imul
push
sub
or
test
or
and
cld
lods
cmc
pop
and
pop
mov
push
or
dec
push
cmp
push
mov
sub
lods
mov
dec
push
gs
xor
lret
inc
or
int
aad
xor
es
sub
push
outsb
hlt
push
push
in
lds
scas
je
jbe
dec
lock
add
pop
xchg
ds
call
orb
pop
negl
rorb
insl
pop
push
push
and
in
shrb
data16
xchg
aaa
inc
mov
dec
movsb
inc
std
jns
pop
xchg
add
repz
push
xrelease
insl
cwtl
aam
lahf
mov
mov
mov
mov
pusha
and
lahf
into
out
fwait
xchg
test
cmpsl
inc
mov
dec
sub
mov
mov
fs
adc
fistpll
hlt
push
sub
cmp
movsl
jno
dec
add
outsl
int
and
dec
ficomps
outsb
pop
mov
outsl
subb
daa
cli
in
sub
sbb
subb
pop
cmp
xchg
rcrb
mov
jno
xchg
das
pop
stos
mov
pop
and
out
popa
or
fadds
adc
mov
mov
push
sub
pop
cmp
mov
pop
mov
js
fsubrp
int
adc
es
pusha
push
mov
fisttpl
sub
icebp
loope
fisubrl
pop
and
es
test
inc
or
mov
push
jecxz
cmpsb
cmp
add
and
inc
ljmp
jp
add
mov
or
fimuls
push
into
jl
sbb
ljmp
jle
sbb
or
addl
adc
sti
data16
dec
mov
call
insb
or
push
insl
add
loope
mov
outsl
loop
cli
jnp
add
lret
stos
sbb
sbb
mov
insl
je
mov
mov
jnp
es
cli
and
imul
sbb
ss
je
inc
dec
std
jns
pop
xor
rorb
jmp
fwait
iret
sbb
jp
dec
loop
jnp
stc
xor
adc
fs
mov
xchg
jg
scas
xchg
adc
cmc
or
icebp
and
mov
push
aaa
rclb
mov
nop
jge
sub
orl
in
dec
pop
test
mov
xchg
int
sbb
and
pusha
std
mov
dec
mov
adc
movsb
sub
adc
subb
mov
cmpsl
fsubl
sbb
mov
cmp
inc
inc
add
dec
jge
jnp
popa
inc
jns
push
push
loop
call
xchg
push
xchg
stc
jae
test
pop
dec
push
jle
dec
cmp
test
fs
mov
adc
outsb
jns
jo
decb
fsub
adc
mov
shlb
and
lods
xor
jmp
ss
scas
mov
mov
jmp
stc
call
mov
ds
imul
add
inc
test
dec
cmp
and
adc
pusha
sti
add
mov
adc
push
cli
xlat
sub
loopne
pop
test
lds
and
mov
mov
jge
sub
sub
fs
nop
std
add
push
inc
aaa
fistps
out
or
cmp
push
in
xor
clc
dec
in
dec
int
pop
mov
mov
xor
push
or
imul
push
or
icebp
call
lahf
mov
fsubrs
repz
xor
jnp
cmpsl
dec
mov
cmp
dec
shrb
aas
mulb
cmp
push
test
div
lcall
test
xacquire
add
sbb
push
ret
or
or
pop
insl
inc
push
add
mov
cmp
scas
push
fistl
rcll
sub
jp
xor
andb
ljmp
pop
fwait
sbb
jbe
mov
outsb
xchg
ss
das
faddl
ja
jno
adc
in
mov
push
xchg
out
push
das
push
add
xor
jp
cmp
mov
add
mov
out
push
fcmove
jmp
or
imul
add
inc
jbe
fimull
inc
test
fs
sbb
xchg
gs
push
ret
repnz
sbbb
inc
lahf
and
push
push
mov
adc
insb
mov
dec
or
incl
push
imul
lods
pop
mov
add
xchg
call
clc
push
xor
inc
insl
inc
sbb
xchg
hlt
push
or
lret
xlat
sbb
xchg
aaa
pop
jno
xor
addr16
fcompl
pop
add
sub
or
cmp
cmpl
hlt
adc
stc
in
mov
xchg
sub
add
push
push
cmp
push
inc
outsl
xchg
mov
in
xor
mov
inc
push
dec
dec
jecxz
out
stos
xchg
mov
stos
pop
jmp
push
fcomps
push
xchg
imul
push
or
aaa
pushf
adc
lods
jb
negw
add
inc
xchg
sbb
lock
lea
lcall
nop
cmc
jbe
push
in
jne
or
push
js
xor
inc
pop
push
clc
clc
push
jmp
mov
and
sub
mov
nop
dec
dec
dec
addr16
into
test
pop
pop
xchg
mov
test
mov
sbb
dec
cs
xchg
sti
inc
push
lahf
xchg
xor
loop
addb
inc
sbb
or
mov
sbb
sbb
cmp
bound
sarl
loope
dec
add
in
push
sub
push
dec
call
lods
push
mov
lods
les
xor
pop
push
movsb
lods
adc
xor
jne
imul
lahf
jo
dec
xlat
arpl
idivb
sbb
sbb
jns
dec
orb
cmp
sbb
cltd
call
mov
mov
sub
sbb
xchg
mov
mov
mov
shrb
loope
push
add
and
aam
bound
cmpsb
ljmp
dec
andb
pop
lahf
pusha
imul
inc
sbbl
pop
addr16
shll
cmp
gs
ljmp
repz
and
mov
jae
xchg
pop
stc
pop
nop
in
sar
xchg
lock
int3
adc
jno
je
add
std
cltd
push
push
cmp
push
movsl
popa
add
push
out
pusha
mov
inc
dec
and
xor
push
data16
xor
mov
mov
or
repz
neg
loopne
movsb
movsb
ja
pop
ret
or
ja
dec
cmp
ror
addl
mov
add
mov
inc
jae
rcrb
cmp
mov
iret
scas
cli
je
sti
fiaddl
sbb
nop
arpl
adc
hlt
ja
and
ds
mov
ret
xchg
add
mov
add
sahf
rcrl
fcmovb
je
mov
fidivs
adc
jecxz
mov
mov
lahf
mov
inc
and
mov
loop
push
push
pop
cmpsl
mov
stos
adc
stos
cld
ret
xor
outsl
icebp
pop
addb
imul
flds
int3
push
lret
dec
mov
mull
shlb
out
xchg
rcrl
je
jg
xchg
or
adc
ja
and
js
sahf
push
fidivrl
mov
xchg
shll
sarb
lea
adc
daa
add
fsubs
sub
adc
cmp
lret
and
xor
fiaddl
xchg
das
xor
ret
ds
or
dec
pop
repnz
je
pop
pop
repnz
xlat
data16
pop
icebp
sub
inc
jne
cmpsl
adc
sub
mov
fldenv
xor
roll
xchg
mov
repnz
pop
rcl
dec
jge
mov
mov
repnz
incl
aad
pop
sbb
bound
xchg
mov
push
cmp
call
adc
sbb
jge
out
push
je
dec
clc
or
in
push
std
movsb
fnstsw
outsl
push
dec
xchg
insb
imul
sbb
sub
mov
xchg
inc
push
dec
ret
xor
cmp
mulb
in
sub
sub
xor
cmp
sub
enter
inc
xchg
outsl
int3
mov
and
xchg
jne
clc
inc
sbb
hlt
ret
xlat
xor
inc
fidivrl
fsubs
sahf
lods
adc
loopne
inc
fdivrs
pop
movsl
dec
jecxz
test
or
add
das
mov
cmpsb
and
inc
jl
mov
ja
xchg
xor
mov
adc
das
fcoml
push
cmpsl
sar
push
sti
nop
mov
pop
call
push
pop
addr16
stos
pop
xchg
xchg
jecxz
loope
bound
outsb
xor
cltd
shll
sbb
cmp
mov
cmpsb
xchg
stos
xor
adcb
pop
pop
inc
out
xor
setge
and
xchg
sbb
jg
sub
in
daa
xchg
imul
test
movsl
inc
mov
and
loopne
lods
clc
loop
mov
pop
add
mov
push
adc
jecxz
fidivl
push
adc
push
push
jnp
sbb
insb
repnz
pop
adc
lock
and
mull
jp
and
popa
jae
add
push
shlb
sub
add
or
imul
je
dec
and
adcl
lea
addb
sub
aaa
xor
pop
pop
jae
and
out
stos
loope
pop
adc
or
pop
outsb
adc
jbe
adc
and
xor
dec
mov
jb
adc
ljmp
imul
ret
loop
stos
jge
dec
jbe
les
or
cmp
ljmp
jb
jbe
adc
loope
loope
enter
sub
jns
mov
fcompl
imul
or
sub
idivl
daa
mov
scas
es
sarl
jns
aas
in
add
push
jp
cmp
mov
xor
jo
dec
out
pop
jae
or
xlat
sarl
stos
je
filds
call
or
je
les
pop
roll
sub
add
and
data16
add
xor
add
adc
mov
jecxz
pop
insl
mov
hlt
lods
push
arpl
sbb
fstpt
xorl
insb
gs
cmc
cltd
addr16
mov
pop
xorl
ss
dec
js
enter
sbb
ret
adc
sub
jg
adc
sub
and
xchg
ja
imul
psraw
in
repz
test
mov
daa
xchg
insl
clc
flds
cld
in
mov
mov
mov
in
cli
pop
adc
pop
inc
sbb
into
repnz
and
pop
sbb
test
dec
dec
mov
adcb
jb
jmp
jb
insl
movsb
mov
in
es
stos
or
fistps
xchg
adcl
xor
jns
pop
ja
sbb
dec
dec
or
pop
int3
clc
push
jbe
cld
inc
jae
int
dec
mov
inc
es
sub
lret
incl
insb
lret
cmp
out
sub
mov
jb
jb
or
gs
repz
xor
ret
mov
pop
pop
loop
xchg
imul
add
pop
je
rcl
cmp
cmp
push
fadds
xchg
scas
jb
adc
shll
or
rorl
das
cmpl
pop
add
pop
sbb
jnp
xor
shrl
mov
push
xchg
fcoml
mov
adc
fidivrl
and
push
sub
inc
jb
and
movsl
addr16
and
loopne
fs
adc
call
sub
push
cvtpi2ps
loopne
adc
inc
xchg
bound
nop
fidivs
add
jp
or
xchg
test
push
or
test
mov
cmp
es
outsl
das
or
or
outsb
stos
imul
jno
or
out
push
or
sub
icebp
mov
sbb
rclb
jbe
scas
mov
jmp
jbe
fidivrl
pop
pop
int
or
enter
int
das
call
mov
sub
jmp
rclb
pop
inc
lds
std
fs
jns
cmp
test
mov
std
lods
xchg
mov
dec
mov
mov
push
ljmp
stc
cmp
mov
dec
pusha
ds
inc
pop
int
add
repz
add
cmp
sub
adc
sub
cmpsl
jl
lcall
cmpl
jp
ret
or
nop
faddl
outsb
cmpsb
scas
es
cmp
xchg
in
int
cmp
and
mov
and
scas
sbb
cmp
andl
add
add
and
std
ficomps
mov
icebp
sub
pop
out
xor
sbb
test
imul
out
ss
pop
xchg
in
xchg
inc
adc
xor
push
shll
sbb
xor
and
push
add
fidivrs
xor
cmpsb
sub
push
jae
mov
call
es
std
lds
and
adc
unpckhps
ffreep
push
cmp
dec
xor
xor
call
inc
daa
shll
rorl
cmpsb
xchg
daa
mov
popa
sbb
push
adc
adc
sbb
add
daa
dec
mov
andl
movsl
rclb
xorl
inc
mov
push
mov
mov
push
or
dec
sbb
push
orl
cmp
mov
out
mov
mov
aam
dec
adc
jmp
lret
cmp
out
or
rol
xchg
push
and
sub
xchg
mov
test
push
mov
sub
inc
bound
xor
push
ss
repnz
pop
js
insl
and
stc
push
dec
or
push
es
scas
stos
insl
imul
sub
pop
inc
cmp
xchg
push
dec
dec
dec
jmp
jmp
inc
cmp
sub
xchg
ss
jp
and
inc
sbb
sbb
xchg
mov
mov
lods
aas
rorl
cmc
iret
mov
pop
in
and
and
jl
push
imul
mov
push
call
pop
insl
das
sub
dec
leave
daa
les
into
addr16
in
movsb
inc
cltd
mov
add
pushf
stos
inc
mov
push
mov
idivl
hlt
jb
in
repz
loop
outsb
mov
sub
lret
and
push
pop
sahf
xlat
adc
adc
in
cmp
movsb
in
jg
in
cli
test
and
or
movsl
inc
push
sbb
or
sbb
xchg
test
iret
das
fiaddl
mov
lea
mov
adc
sub
xchg
mov
movsl
xchg
dec
push
add
add
and
lods
sub
call
lods
pop
addr16
push
add
xchg
out
ja
xchg
cmp
ds
cmp
jbe
fucomip
xor
cld
and
push
jmp
fsts
test
imul
jbe
cmp
rclb
xor
in
pop
pop
in
add
fwait
xchg
inc
dec
enter
call
aad
mov
das
adc
xor
pop
test
sub
out
xor
cmpsl
loop
pusha
popf
adc
movsb
dec
adc
and
pop
or
push
mov
mov
push
xlat
jg
inc
sbbl
jnp
cmp
lock
xor
insl
jp
outsl
pusha
frstor
jbe
mov
cmp
sub
xchg
dec
and
ret
popa
inc
mov
jmp
lret
mov
fstps
mov
xchg
sbb
adc
pop
and
inc
push
ss
sbb
mov
pushf
rorl
dec
hlt
dec
shrl
jno
pop
adc
out
xor
inc
testb
mov
ds
lcall
stc
xchg
and
ror
das
xchg
adc
lods
popa
repz
fmul
jmp
mov
repnz
popa
mov
fidivs
enter
pminub
or
addr16
fimull
out
jns
mov
jmp
xchg
out
adc
inc
in
add
xor
jle
cmc
or
ljmp
cmp
add
int
dec
xlat
sub
and
stos
roll
mul
mov
outsl
pop
scas
pop
aas
sar
mov
inc
out
shrl
iret
fcomip
test
dec
jmp
sbb
iret
stos
jecxz
xor
mov
mov
mov
test
and
dec
popf
push
cmpsl
sbb
sar
xchg
or
movsl
notb
inc
jmp
aad
into
and
dec
add
repnz
cltd
lods
sbb
daa
sbb
inc
test
jge
icebp
and
pusha
mov
ja
rcl
outsl
insl
push
in
outsb
and
sub
lcall
xor
test
ret
inc
movsb
stos
push
push
inc
rolb
pop
dec
scas
and
pop
data16
js
push
mov
loopne
xchg
adc
imul
addr16
pusha
roll
cmp
insl
stos
mov
cmp
movsb
sahf
pushf
dec
test
mov
and
mov
test
daa
jmp
bound
cmp
ffree
and
movsb
add
and
decl
sbb
adc
mov
adc
lahf
sbb
mov
divb
testb
mov
inc
cli
inc
add
ret
les
xchg
or
mov
pop
aad
fcomi
leave
dec
fldcw
nop
fstps
test
cmp
fnstenv
in
and
gs
and
push
add
xor
adc
icebp
fimull
pusha
and
mov
or
lock
enter
loope
add
std
mov
sahf
adc
add
xchg
push
aad
clc
fs
dec
xchg
dec
xor
fwait
push
sub
add
js
negl
mov
and
imul
imul
outsb
je
outsb
sub
jno
jle
inc
mov
lods
pop
or
cmp
push
pop
sub
or
negb
leave
sub
jo
popa
testl
and
cmp
sbb
fnsave
and
out
loope
pop
mov
icebp
adc
ret
js
xor
loopne
rorl
push
xchg
xchg
sub
and
ja
lahf
les
sbb
sub
aad
ret
dec
sahf
lods
push
push
inc
pusha
add
xchg
mov
xor
shrl
push
movsl
inc
push
jo
push
adc
jne
dec
stc
jg
jge
inc
cmp
mov
adc
mov
mov
sbb
aaa
sub
leave
adc
gs
push
out
or
and
pop
lods
push
add
adc
fsts
les
jle
or
fwait
pop
cli
sti
mov
out
adc
cmp
daa
fdivl
insl
or
pushf
jl
cltd
mov
mov
fdivr
icebp
rcll
lret
movsl
in
xchg
dec
pop
stos
xor
das
mov
sbb
ljmp
push
jecxz
popf
inc
jg
test
jno
mov
cmp
sub
add
stos
arpl
outsl
call
outsl
adc
test
ret
cmp
js
stc
add
push
shll
std
push
cld
xchg
outsb
adc
cmp
lea
xchg
in
inc
ret
add
add
cwtl
ret
inc
xchg
xor
das
sub
or
jmp
or
fld
lea
xchg
aam
pusha
imul
das
cld
xor
dec
inc
cmp
sbb
test
push
sub
xchg
out
popf
cld
xlat
dec
inc
jb
ficoms
mulb
jg
pop
lods
ljmp
adc
and
into
xchg
insl
push
outsb
jecxz
xchg
pop
mov
xor
mov
fstpl
cmpsb
nop
out
hlt
loop
stos
sub
imul
fwait
outsb
jmp
pop
les
push
pslld
cmp
cmc
leave
and
rorl
mov
lret
in
arpl
fsubr
je
iret
fisttpl
clc
inc
out
shll
xor
jecxz
push
test
ficoms
cvtps2pi
rclb
nop
jno
dec
rorl
test
stc
call
gs
or
je
shrb
sub
sbb
sbb
and
ficoml
pop
push
pop
or
lea
xchg
push
pop
cltd
nop
add
dec
sub
loop
loope
out
mov
inc
dec
lret
dec
shl
iret
call
mov
pop
lea
xor
into
repnz
inc
add
iret
or
hlt
dec
cmp
aad
lock
sbb
movsb
test
in
cli
cli
movsb
sub
dec
xchg
xor
xor
pop
cld
ret
repnz
std
sbb
enter
lret
arpl
pop
or
repnz
call
fisttps
adc
sub
jl
sub
cmpsl
addr16
push
in
outsl
ret
jnp
pop
dec
xchg
push
sahf
popf
negb
and
jp
movsb
cmpsl
mov
mov
sub
ret
inc
cmp
loop
popf
addr16
minps
mov
sub
xor
fisubs
sub
notl
cld
clc
adc
add
orb
mov
pop
repnz
lret
fisubs
mov
pop
inc
call
add
in
pop
and
iret
dec
add
cmp
xchg
loop
and
repnz
cmpl
push
or
or
pop
je
and
or
mov
add
pop
xchg
push
or
sahf
sub
imul
sub
fisubrl
mov
mov
orb
mov
shlb
xor
push
sbb
std
jne
xor
ljmp
aaa
fldt
add
aaa
mov
mov
adc
pop
push
mov
mov
inc
ja
je
repnz
mov
cmp
std
lcall
jg,pt
mov
and
cmp
lea
bound
jge
dec
sbb
xor
fldl
mov
pop
xor
daa
outsl
adc
icebp
cmp
mov
iret
iret
dec
mov
sbb
mov
leave
push
xchg
stc
inc
mov
div
mov
sbb
mov
push
outsl
fisubl
and
fsubrs
cmc
pop
out
jne
fisubs
pop
jp
or
divb
notrack
sti
repz
hlt
push
in
mov
popa
adc
ljmp
ja
mov
fsts
lds
cmpsb
inc
jne
test
loopne
les
inc
shll
scas
dec
push
pushf
fistpll
ficoms
lret
mov
mov
mov
jno
fisubrs
scas
pop
jecxz
or
jns
cwtl
push
lcall
push
jmp
repz
or
imul
out
cmpsl
stc
cmc
adc
fcoms
push
push
or
jbe
ds
xor
movsb
push
push
xor
jno
xor
xchg
add
push
call
xchg
enter
push
pop
lods
push
jmp
je
push
pop
out
into
inc
fiaddl
hlt
sti
cmp
xchg
decl
subb
pop
jecxz
xchg
pop
inc
push
xchg
hlt
xor
mov
pop
dec
pusha
dec
xorb
cmp
js
jb
dec
mov
push
or
sub
adc
in
and
and
cmp
jecxz
fdivrl
call
sub
xlat
lea
xchg
lahf
adc
aad
ficomps
xchg
xchg
or
cmpsl
xor
rclb
xor
mov
sbb
sbb
out
push
leave
push
andb
cltd
clc
pusha
inc
std
xchg
cmpsb
test
mov
movsb
lret
sub
insl
push
xor
andl
sbb
xchg
xchg
sbb
lock
mov
mov
add
or
adc
xor
inc
roll
pop
mov
lock
mov
sbb
and
ss
call
push
sbb
iret
sbb
pslld
sbb
mov
dec
cmpb
and
add
cmp
cmp
jbe
clc
adc
xor
js
sarb
mov
jbe
lock
movsb
arpl
or
testl
lea
aam
scas
xor
adc
jbe
jno
cmpsb
xor
in
lcall
pusha
xchg
push
jno
push
fcomps
dec
xchg
adc
xchg
inc
push
or
mov
or
fst
push
or
or
filds
popf
es
pop
in
dec
jp
or
or
push
call
aam
pop
xor
jecxz
inc
sbb
jge
adc
jae
lahf
popa
mov
fisubl
and
leave
pop
xchg
lcall
adc
lcall
mov
outsb
ljmp
jmp
je
cld
or
push
orl
sarl
mov
dec
inc
jbe
cli
int3
pop
dec
int
nop
stos
xor
pushw
push
sbbl
sub
xchg
and
dec
push
xchg
fs
lea
in
call
xchg
xchg
cmpsl
nop
xchg
sub
fcomps
and
iret
xchg
stos
imul
xchg
push
pop
mov
mov
insb
jbe
dec
xorl
addr16
push
mov
pushf
add
or
fisubrl
lret
sub
jmp
popa
gs
or
or
sbb
xor
in
add
lret
pop
popf
push
adc
jbe
popa
dec
lret
add
pop
mov
inc
into
and
inc
jl
push
dec
cmpsb
inc
sub
bound
sub
dec
pop
lods
adc
mov
cmpsb
movsl
testb
push
ret
jle
dec
inc
pop
jne
fimuls
fs
dec
out
bound
xor
pop
ret
imul
cli
dec
push
mov
push
jb
mov
or
mov
xor
xchg
lods
sbb
subl
mov
inc
lods
or
addr16
scas
adc
out
jmp
lods
dec
cmp
adc
push
lds
jmp
nop
add
clc
cmpsl
and
mov
dec
mov
cmp
jl
insl
pop
cmpsl
lcall
jp
call
or
inc
andl
pop
lretw
inc
cmpb
lea
mov
popa
push
and
js
jmp
push
dec
push
adc
movsl
inc
test
xchg
and
jnp
ds
mov
adc
mov
movsb
iret
pop
pop
jae
mov
popf
outsb
push
dec
sbb
mov
inc
add
push
xchg
inc
pop
dec
je
inc
lods
addb
xchg
pop
and
mov
in
hlt
jecxz
flds
stc
push
push
lock
in
in
js
inc
inc
adc
arpl
out
sbb
mov
sbb
sbb
add
leave
pop
add
and
movsb
sbb
push
and
clc
adc
sbb
push
mov
addr16
dec
shl
enter
mov
push
movsb
sbb
ds
and
jne
xor
fucompp
andb
mov
lret
pop
mov
or
ljmp
loop
sub
adc
popf
sub
aad
lods
dec
in
jmp
ljmp
xchg
hlt
sti
jno
push
ret
sbb
add
pop
mov
sbb
xor
iret
push
sbb
gs
cmc
jne
sbb
fidivs
mov
test
lret
movsb
insb
into
xchg
stos
fistps
aad
subb
adc
lea
xor
aad
inc
jo
int3
push
inc
and
jl
fadd
pop
adc
test
or
je
jno
sub
xchg
jecxz
aad
push
rep
add
mov
inc
pop
icebp
adc
sub
inc
push
out
jge
pushl
aam
xor
jg
xor
mov
cltd
xlat
stos
pop
adc
mov
xor
adc
cmovs
mov
mov
jae
sub
scas
push
out
fs
mov
fwait
shlb
clc
je
fldl
lret
outsb
fidivl
push
sti
and
or
inc
push
cmp
lret
imul
insl
je
sbb
arpl
add
loop
mov
fcomip
sbb
out
push
xchg
push
pop
or
jmp
out
xor
arpl
jno
push
leave
je
xchg
sbb
fnstcw
jge
mov
fsubrs
mov
lcall
xorl
mov
iret
aas
fwait
lds
push
add
stc
in
and
or
stos
mov
inc
sahf
dec
sub
mov
and
add
cmpsl
pop
sub
sbb
negb
std
pushf
sbb
cltd
fwait
add
jne
pop
push
xchg
hlt
xchg
lcall
mov
lea
out
in
js
add
add
ljmp
cs
push
and
mov
popf
addr16
mov
inc
dec
ljmp
call
pop
push
xorb
hlt
rcll
fiaddl
mov
or
push
ja
cmc
loop
mov
cmpsb
sbb
xchg
into
adc
pusha
je
repz
jnp
and
xchg
mov
xchg
xor
sbb
push
addr16
xor
arpl
dec
mov
loope
inc
leave
test
jnp
push
insl
sti
scas
push
das
jb
mov
mulb
adc
int
or
and
dec
and
dec
inc
and
cltd
or
push
outsl
mov
xchg
bound
popa
and
pshufw
or
adc
inc
call
pushf
iret
inc
add
push
out
cmp
pushf
sub
loope
jg
out
loop
fdiv
mov
jns
pushf
xchg
adc
push
push
mov
inc
pop
inc
adc
push
subb
leave
scas
push
mov
loope
fstps
movsb
xor
push
add
pop
push
scas
push
xchg
jmp
cwtl
addr16
ja
xor
add
mov
cmp
inc
xor
shlb
xor
cmp
xor
mov
in
sub
std
push
adc
subb
mov
sub
inc
jg
mov
sub
pop
sub
adc
add
pushf
mov
int3
mov
mov
and
xchg
adc
repz
imul
push
sub
lods
jl
clc
xor
pop
imull
ss
jp
mov
insb
mov
push
inc
out
cmp
adc
aas
push
pop
cmp
xor
call
push
pop
jmp
scas
mov
sbb
pop
shlb
testb
xor
xor
sti
test
jg
cld
push
popf
daa
fwait
pop
mov
jnp
dec
push
out
jb
or
mov
jle
xor
insl
faddl
ret
outsl
mov
fldl
int
add
adc
or
sbb
mov
adc
das
sti
xchg
and
sub
stc
imul
xchg
pop
mov
leave
jbe
arpl
or
cmpb
or
pop
jbe
xor
push
cli
shlb
dec
fwait
push
cmpsl
fucomi
shl
ficoml
out
fildll
icebp
rolb
adc
inc
rorl
enter
aad
orl
jg
sar
cmp
sub
stc
pop
insb
mov
dec
xchg
adc
js
out
ja
dec
pop
and
sbb
jnp
push
pop
pop
sbb
fldcw
cmpsb
std
xchg
sbb
lea
outsb
adcl
out
and
jge
pop
in
insl
ret
jecxz
in
xchg
insl
lahf
mov
xchg
cmpl
in
imul
dec
data16
jo
std
std
cwtl
aam
xchg
inc
cmp
xor
or
orb
icebp
add
ds
add
and
inc
cmpsl
dec
sub
fs
js
and
sbb
cltd
add
clc
mov
int3
fcmovnb
stc
mov
jp
jl
inc
pop
adc
nop
pop
push
adc
jae
notl
mov
mov
lods
ljmp
test
sub
mov
adc
pop
jne
cmc
cs
hlt
sub
jns
insl
into
sbb
in
lods
jecxz
jne
mov
jmp
xchg
pop
fwait
hlt
fsubp
sahf
mov
cmp
xchg
adc
rorl
je
inc
or
jmp
push
lahf
cli
dec
fiaddl
scas
push
call
fldl
aam
mov
lcall
nop
jb
mov
mov
jo
loop
jle
loopne
jns
jae
mov
into
jl
xchg
push
dec
add
shrl
pop
mov
inc
in
mov
inc
icebp
or
or
or
subl
sbb
fsubr
les
les
lret
push
sbb
and
popa
dec
jl
test
dec
add
idivb
std
repnz
shrb
sti
mov
sbb
and
xor
mov
jb
mov
cld
jb
movsl
jecxz
sub
lret
stc
mov
iret
inc
cmpsb
push
test
pop
dec
xor
xchg
outsb
cmp
mov
lret
movsb
rolb
push
or
call
jmp
ret
mov
popa
shrb
xchg
popa
mov
jmp
add
or
mov
in
clc
in
xor
mov
les
pop
add
fbstp
dec
sub
dec
xchg
enter
lret
addr16
xchg
mov
fnstenv
dec
jnp
push
adcb
sbbb
repnz
leave
jo
ret
outsb
xchg
daa
xchg
imul
jmp
adc
in
sbb
repz
dec
xlat
shrl
sub
xchg
ret
stos
and
mov
in
stos
xchg
xchg
aad
loope
push
test
dec
cmpb
mov
stos
pop
mov
call
cmp
fdivrl
es
sub
loop
push
lods
loop
movsl
dec
cmp
cmp
mov
leave
lret
mov
mov
lea
andb
xchg
push
inc
inc
push
jae
or
pop
or
dec
fbld
mov
sub
sub
dec
pop
test
and
lods
or
cmp
adc
mov
mov
sub
fidivrl
mov
or
push
cmp
cmp
cmp
pop
arpl
fcompl
jne
jne
mov
mov
daa
or
insl
mov
aam
adc
stos
aam
ficoms
inc
popa
aad
leave
stc
jl
add
mov
scas
inc
xchg
and
daa
aam
add
pop
insl
ret
xor
mov
and
lcall
popa
cmpsl
push
push
movsb
aam
inc
xor
fisubrs
gs
xchg
pop
xchg
or
push
add
sub
fst
mov
scas
rcll
dec
mov
cwtl
imul
std
mov
sbb
bnd
inc
push
jmp
adc
xchg
xor
hlt
xor
mov
call
cmp
sbb
dec
in
test
jmp
dec
mov
jb
add
outsl
or
in
adc
push
push
push
dec
dec
add
mov
cmp
popf
and
jmp
mov
add
add
jge
jo
sbb
or
aam
mov
cld
mov
mov
or
hlt
push
lock
fists
sbb
cmp
push
call
in
xchg
scas
outsl
aam
arpl
adc
sub
outsb
cmp
pop
push
into
sub
inc
pop
xor
push
gs
xchg
lds
dec
mov
js
sbb
cwtl
aas
scas
jo
xchg
fsubrs
mov
enter
add
sbb
dec
and
scas
loopne
int3
aad
ret
xchg
adc
cli
mov
stos
pop
jb
leave
sahf
test
js
fiadds
sbb
xchg
mov
std
and
mov
in
cld
je
cmpsb
mov
and
or
orl
loop
lcall
les
mov
cwtl
xor
push
mov
add
insb
add
mov
cmp
repnz
loop
pop
xchg
shlb
push
sbb
xchg
xchg
xor
stos
dec
pop
pop
push
add
sbb
sbb
or
icebp
rclb
and
shl
adc
sbb
dec
out
lahf
or
adc
jb
inc
loopne
or
cmp
pop
call
test
mov
xor
mov
lcall
fsin
push
pop
aam
inc
or
jle
jnp
jb
mov
mov
lahf
cmpsb
mov
cmp
inc
mov
iret
sbb
sbb
push
nop
sbb
xor
jecxz
jl
mov
pop
mov
mov
xor
sbb
sub
insb
lock
mov
sbb
add
inc
icebp
cmp
les
mov
sub
dec
bound
mov
xor
sar
loope
std
test
inc
inc
xchg
sub
fdivrl
daa
insl
mov
pop
inc
add
push
pop
daa
xor
out
add
add
aad
nop
xchg
sub
mov
xor
xor
push
stos
outsl
fs
cmp
jecxz
lret
mov
movsb
fcompl
stos
pushf
ret
push
clc
sbb
fcompl
ret
int
clc
loopne
xor
test
add
mov
mov
jge
fidivl
push
mov
fdivrl
movsb
push
xor
test
cmp
in
icebp
mov
iret
xor
xor
inc
inc
aaa
shl
xchg
inc
addr16
test
jecxz
xor
pop
inc
or
cld
sub
dec
aad
or
pop
mov
pop
shlb
push
and
fimuls
mov
adc
xchg
insl
pop
xchg
ss
js
lret
out
call
xor
sub
mov
add
in
fisubrl
dec
xlat
sbb
fisttps
add
push
and
out
xchg
lcallw
inc
sub
mov
xchg
jbe
les
or
enter
imul
add
mov
cli
clc
adc
imul
and
into
loope
dec
out
and
out
cmp
mov
or
pushf
fsubrs
shl
xchg
cs
and
pusha
out
in
es
jmp
jcxz
and
into
mov
xor
jb
je
mov
data16
cmp
sbb
ret
push
fsubrl
push
adc
ljmp
and
or
adc
imul
xchg
scas
dec
sti
loope
lahf
add
lock
sbb
mov
add
jne
mov
mov
xchg
pop
call
scas
in
inc
push
cmc
jo
cmp
insb
cmp
or
jp
xor
sbb
adc
shl
mov
xor
xor
pop
fnstsw
sub
das
sub
popf
pop
cmpsb
mov
jge
dec
imul
dec
test
mov
sub
jno
lods
mov
imul
dec
in
test
or
pop
daa
xchg
xchg
mov
jno
in
fisubs
and
sub
lret
outsl
push
and
add
daa
out
arpl
in
pop
mov
inc
aad
mov
lock
rolb
and
xchg
and
iret
mov
mov
jb
push
imul
stos
pop
pusha
and
stos
clc
int3
push
repnz
or
lock
xchg
out
cld
pop
jbe
add
enter
sbb
xor
pop
aad
or
jno
bound
lock
xchg
mov
xor
cmp
aas
adc
add
mov
out
add
enter
pop
fcmovne
add
push
js
std
push
popf
pop
lcall
data16
test
aaa
loope
or
push
xor
ret
xchg
fldenv
mov
xor
or
addr16
es
mov
out
jmp
je
leave
push
inc
xchg
adc
or
adc
out
inc
test
addl
into
sti
sbb
dec
sbb
sbb
lea
and
xor
sub
or
pop
cmc
aas
sub
sub
sahf
inc
es
push
dec
push
adc
xlat
frstor
cmc
lock
dec
inc
dec
jno
sbb
pop
xor
mov
sbb
pushf
or
test
xchg
jae
lds
cmp
or
ret
sbb
lcall
and
and
sub
add
sbb
pop
mov
pop
leave
xlat
out
aas
cmp
nop
jne
cmp
push
push
cmpl
mov
sbb
test
or
cmp
outsl
push
push
inc
outsl
jmp
adc
xchg
punpckhdq
xor
pmaxub
jl
ret
dec
test
mov
inc
mov
jae
and
into
xor
outsl
mov
shlb
lret
ss
imul
mov
sub
and
add
xchg
addr16
cmp
jg
adc
imul
insb
out
or
test
popa
insb
test
push
int3
scas
pop
test
push
out
fistl
mov
xchg
push
loop
push
push
cmp
out
scas
xchg
cmc
icebp
adc
notl
xchg
dec
leave
out
cmc
and
pop
add
aam
in
push
push
dec
stos
fidivrl
inc
ja
int
push
cmpb
es
inc
inc
je
inc
jnp
or
adc
add
mov
xchg
push
mov
stos
xchg
inc
movsl
popa
shlb
cli
gs
pushf
rol
scas
mov
jp
test
push
sub
jae
mov
mov
mov
loop
jecxz
jg
mov
mov
iret
out
mov
cld
add
pop
push
push
je
ljmp
jno
mov
inc
pop
xchg
push
cli
and
mov
jmp
xchg
mov
or
std
pop
test
das
loop
add
in
push
or
adc
rorl
lahf
popa
sbb
sbb
xor
cwtl
fs
inc
rorb
cmpsb
dec
cmpsb
and
loop
or
test
sub
icebp
addr16
icebp
lods
adc
nop
lret
mov
addb
inc
lock
add
xchg
out
in
and
push
fwait
and
push
xor
mov
out
adc
push
enter
test
sub
nop
xor
popf
roll
mov
and
push
mov
shrb
adc
jne
inc
sahf
cmpsl
push
mov
stos
pop
mov
sbb
jno
mov
jmp
movsl
decl
popf
sub
rclb
mov
and
addr16
or
xor
rorl
sbb
aas
jnp
test
movntps
test
data16
fimuls
inc
shrl
shll
sti
push
xchg
jl
out
out
mov
out
arpl
pop
inc
push
xor
or
dec
ret
pop
out
rolb
push
scas
xor
popf
sub
xchg
mov
in
roll
div
movsb
fldenv
pop
lods
sbb
clc
push
cld
push
xor
mov
or
div
xor
insb
int3
adc
popa
mov
inc
inc
gs
dec
dec
aaa
cmp
shll
cltd
push
jne
mov
xchg
push
mov
cmc
push
or
hlt
inc
push
fucom
mov
stc
jmp
test
pop
or
and
iret
sbb
add
cmp
sbb
jle
adc
add
gs
call
mov
push
jge
inc
out
add
mov
ret
ds
mov
add
stos
stos
pop
negl
rorb
jge
dec
cmp
mov
lret
add
mov
rcll
sub
push
sbb
addr16
adc
cmp
xor
ret
popa
dec
pop
cld
imul
inc
add
sub
nopl
filds
xchg
push
mov
inc
mov
push
repz
sub
xor
push
dec
and
sbb
inc
dec
outsl
sbb
push
es
mov
mov
jecxz
adc
lcall
dec
add
outsb
popf
pop
rorl
xchg
cmp
out
addl
xor
rol
mov
sub
aad
pop
mov
testb
out
movsb
cmp
jnp
fidivl
popf
jp
sub
jns
add
negl
push
add
mov
push
fbstp
cmp
test
popf
dec
imul
and
adc
popl
rorb
pusha
popl
scas
icebp
dec
cli
and
mov
and
out
lcall
arpl
imul
mov
mov
pushf
add
pop
jne
and
test
fistl
nop
push
data16
fsubs
mov
mov
adc
or
cmpsb
pusha
sub
in
push
xchg
outsl
and
outsl
lock
stos
inc
in
and
pop
cltd
addr16
cli
gs
ret
lea
and
and
cli
jnp
mov
jp
or
jo
jmp
jbe
or
cmc
xchg
pop
je
and
xor
jg
mov
push
xchg
pop
push
cli
push
ja
or
clc
or
roll
xor
imul
dec
add
bound
xor
dec
jmp
notb
aam
loop
lcall
in
push
ja
popf
pop
jae
dec
nop
or
leave
pop
push
fcompl
mov
das
filds
push
push
lods
mov
push
xorb
cltd
cld
js
lcall
daa
adcl
fisttpll
adc
inc
sub
mov
mov
aad
cld
sub
xor
inc
xchg
mov
loopne
mov
sbb
cmp
add
push
leave
ret
fcoms
cmp
testb
repz
jno
mov
mov
sbb
sub
adc
cmovo
or
sbb
jo
je
pop
std
mov
mov
or
mov
gs
cmp
xor
xor
insb
xor
mov
lea
sub
and
jg
inc
out
nop
cmc
imul
push
xchg
dec
daa
clc
ds
xor
jge
outsb
or
push
aaa
test
push
xchg
cltd
mov
nop
mov
sarb
mov
and
xor
das
cmpb
inc
pop
jno
inc
fildll
add
adc
push
in
pop
std
pop
clc
push
inc
out
fstps
in
xchg
fcoms
in
out
cmp
rcrb
xor
dec
out
in
mov
mov
test
inc
lock
js
loopne
jo
push
push
fwait
pop
lahf
jg
rcrl
call
repnz
mov
fistpll
aas
sbb
xor
sbb
popf
mov
mov
rcll
clc
push
adc
xor
test
mov
or
mov
data16
push
adc
jmp
outsl
add
push
inc
mov
or
mov
mov
lret
ljmp
dec
pop
push
or
mov
cmc
jmp
jb
arpl
sbbl
pop
adc
xchg
or
push
push
dec
or
xor
dec
mov
pop
and
in
and
pop
sub
lret
push
popf
ficoml
arpl
fsub
mov
sub
push
and
stc
aaa
subb
push
dec
cmpl
xchg
dec
mov
add
scas
jmp
cmpsl
mov
lock
and
lds
insb
sub
add
adc
push
iret
inc
mov
cmp
xchg
fcmovbe
push
jns
inc
adc
stos
mov
pop
out
sahf
mov
les
push
dec
adc
inc
sbb
jmp
popa
mov
mov
jns
xlat
cmp
push
inc
pop
dec
cmp
add
dec
testb
jo,pt
int
out
jae
pop
jmp
mov
lretw
mov
push
iret
jmp
lahf
pop
pop
jmp
mov
mov
out
adc
scas
mov
and
inc
es
jl
and
jne
mov
inc
add
cmpsl
inc
iret
popa
and
pop
pop
add
cmpsb
fsubrs
and
subb
pop
lods
add
inc
cmp
mov
jmp
pop
movsb
adc
push
cmc
push
mov
cld
add
mov
rorl
test
push
gs
sahf
aas
das
jmp
mov
dec
pop
insl
rol
imul
mov
lret
stos
pusha
out
mov
movsl
or
pop
xor
int
fists
and
push
hlt
arpl
xchg
cwtl
push
sub
outsl
mov
dec
jb
inc
push
outsb
in
jbe
sub
adc
push
ret
into
ljmp
scas
and
xchg
clc
jne
pop
pop
insb
jp
xchg
outsl
mov
jg
or
mov
in
xchg
and
lcall
jge
outsb
aam
test
iret
and
xabort
rol
movsb
into
cli
lock
call
xchg
mov
mov
nop
cli
aam
call
pop
inc
dec
cmp
lds
hlt
pop
dec
pop
jne
dec
sbb
outsl
pop
jbe
xchg
lahf
fs
push
sub
fdivs
jecxz
push
lea
pop
in
out
call
and
ficompl
add
rorl
cmc
dec
orb
push
ds
xchg
dec
xor
jnp,pt
sub
add
test
imul
mov
or
shll
enter
inc
mov
jp
inc
out
ret
sub
mov
jmp
in
jo
xchg
enter
pop
xchg
inc
sbb
stos
sub
shl
xor
shl
add
add
jg
int3
jg
popa
push
mov
in
and
cmp
pop
test
push
sahf
mov
or
idiv
jp
sbb
push
push
add
mov
or
mov
lods
repz
mov
add
mov
in
lea
adc
pop
xor
sbb
inc
in
jg
push
int3
push
and
xchg
and
mov
dec
sarl
clc
inc
movsb
fnstcw
insl
push
add
repnz
scas
imul
or
mov
xor
cmpsb
sub
dec
inc
dec
xor
in
and
shr
adc
mov
cmp
shl
into
sub
push
xor
xchg
movsb
scas
shll
ret
repz
sti
cmc
out
push
pushf
xor
popf
pop
iret
inc
int
sbb
push
std
out
iret
je
lock
dec
dec
dec
xor
mov
data16
push
sub
arpl
ret
push
jne
je
rdpmc
mov
std
rcl
jnp
pushf
cmc
mov
shrb
sub
bound
cmpb
ret
int3
add
lods
ret
adc
xchg
rcl
cmp
jno
sbb
xor
push
lea
imul
or
dec
out
push
mov
dec
pop
sub
add
adc
cmpsb
and
mov
inc
sbb
jg
add
ret
xchg
and
pushf
cmp
test
cmpsl
enter
mov
adc
imul
addb
lret
or
cmpsb
mov
mulb
fmulp
dec
jl
addr16
test
fwait
pop
sub
dec
mov
mov
push
out
xor
mov
cmp
xor
test
or
gs
adc
inc
adc
push
je
push
mov
sub
push
push
xor
test
test
xor
fdivrl
xchg
aaa
mov
or
sar
adc
popf
xor
popf
mov
imul
jmp
jae
aaa
cmp
inc
jbe
ljmp
inc
cwtl
fildl
xchg
pop
test
lods
mov
cmp
mov
sub
add
pop
push
test
mov
sbb
mov
inc
xor
jecxz
adc
cltd
and
push
hlt
push
xchg
add
or
idiv
leave
test
inc
enter
pop
ret
fnstcw
scas
ret
gs
mov
out
cs
mov
inc
add
iret
dec
nop
xchg
or
pop
das
sub
movsl
outsb
add
sti
or
mov
sbb
or
cli
mov
pop
js
mov
dec
mov
mov
das
dec
test
push
xchg
loope
mov
xchg
dec
or
test
insb
jb
inc
adc
jbe
push
or
or
cld
jbe
adc
dec
mov
adc
movsb
stc
cmp
movsl
adc
pop
pop
pop
call
add
mov
xchg
div
cmp
mov
inc
mov
call
arpl
aam
daa
lea
loope
sbb
ror
add
nop
jl
scas
dec
loope
mov
inc
add
jge
test
jle
xchg
mov
and
cmp
sbb
enter
call
bound
sub
repz
cld
jae
xor
sarl
das
xchg
jbe,pt
mov
testl
lcall
mov
cltd
daa
out
sbb
mov
jae
sub
shl
xor
mov
mov
in
jmp
dec
mov
rcrl
sti
fnstenv
int
shr
dec
test
ret
les
xor
leave
jp
xor
mov
jecxz
iret
es
jl
sub
pushf
aad
arpl
je
and
enter
and
cli
adc
or
xchg
enter
ljmp
jmp
pop
rcr
pop
mov
repz
dec
cld
dec
inc
mov
dec
call
mov
rcll
inc
fs
cmpl
mov
lds
dec
or
sahf
add
mov
inc
cmp
push
jle
push
adc
inc
xchg
mov
inc
dec
loop
addr16
jne
pusha
mulb
xor
das
stos
jge
rcrb
xor
out
mov
int
testl
dec
xchg
pop
rcrl
mov
xchg
mov
add
daa
inc
xchg
inc
sub
inc
mov
xchg
jae
push
outsb
sub
jb
sub
add
sti
sbb
mov
add
imul
jb
rol
out
push
cmp
fists
xor
sub
jae
xor
rcll
lahf
jb
xor
repz
jb
adc
xchg
xchg
pusha
push
std
outsb
je
repz
jb
push
mov
mov
inc
out
add
cld
cld
out
pop
mov
mov
mov
cld
clc
into
lret
mov
aad
outsl
mov
daa
mov
ja
loopne
xor
cmp
cmp
icebp
out
jl
or
js
jnp
adc
add
push
mov
and
fstl
rcr
ljmp
sarb
hlt
add
dec
dec
xchg
sahf
fs
xor
fsubrp
gs
adc
mov
sbb
mov
mov
inc
cmp
or
or
in
adc
dec
and
ret
je
bound
sbb
loop
inc
in
or
fsubrl
inc
pop
sub
sti
test
jo
lahf
cli
mov
pop
jl
mov
dec
outsl
popf
sti
inc
cmp
adc
mov
push
mov
or
mov
int
sbb
aaa
xchg
sbb
gs
std
out
pop
in
inc
mov
jae
and
das
xchg
push
dec
movsl
cmp
lret
test
adc
lret
mov
mov
sub
mov
push
loope
mov
xor
ljmp
mov
inc
loopne
xchg
sbb
and
mov
adc
sub
lods
mov
cltd
es
or
sbb
xchg
add
imul
call
adc
jp
hlt
shlb
je
std
mov
sbb
stos
and
dec
mov
testl
pop
xor
test
out
daa
sbb
pop
ret
outsb
imul
push
mov
mov
xchg
jb
inc
cltd
cmp
cs
adc
xchg
mov
hlt
inc
aas
jb
dec
xor
inc
jne
sti
dec
adc
sub
inc
shrb
pop
cmp
subb
mov
mov
jae
clc
adc
pop
adc
xchg
dec
mov
jb
lcall
jno
insl
pop
push
lods
dec
sarb
pop
cs
imul
sbb
or
enter
fstl
inc
ss
insl
and
das
push
mov
cmp
add
and
pusha
jnp
xor
xchg
jp
jo
jmp
jbe
je
adc
mov
mov
adc
adc
lahf
xchg
push
jle
popa
stc
shll
sub
leave
fwait
jne
mov
pop
jg
push
mov
xor
insb
hlt
add
push
inc
mov
sbb
xor
pop
xor
dec
out
cmp
dec
adcl
in
lods
rol
xor
sbbb
jl
cmp
inc
xor
or
ret
adc
pop
enter
sti
or
fldl
test
push
out
inc
outsb
loopne
push
je
xor
xchg
inc
sub
mov
or
adc
fld
divl
call
mov
sbb
les
arpl
mov
imulb
jb
xchg
iret
xor
xchg
imul
gs
test
lods
pop
adc
fcomp
rcrb
push
dec
xchg
adc
sub
push
dec
mov
scas
ss
ljmp
out
push
mov
fiaddl
fldt
mov
fucomip
cmp
mov
xor
ds
xchg
xchg
addr16
jp
push
push
mov
lods
adc
fiadds
cmp
adc
and
xchg
jns
imul
jo
push
mov
pusha
inc
mov
test
outsb
ss
mov
movsb
xor
dec
clc
mov
cmc
mov
or
std
sub
push
movsl
and
into
jb
leave
inc
mov
pop
bound
sbb
js
push
inc
mov
roll
imul
jbe
imull
mov
pop
into
je
aad
sti
mov
js
inc
mov
or
fs
fiaddl
out
fwait
rol
cli
daa
out
push
icebp
data16
scas
push
mov
lods
mov
mov
rcr
mov
xor
and
stos
repz
std
ficoms
xchg
xor
xor
xchg
outsl
inc
jne
sbb
pop
sti
mov
cld
mov
or
out
push
hlt
das
jmp
test
ret
mov
mov
adc
sahf
into
dec
scas
push
loopne
jmp
mov
outsb
std
and
fidivrs
xchg
pusha
movsb
fwait
mov
shrl
enter
stos
lods
shl
sub
add
test
test
je
cmp
jb
aad
adc
aam
dec
bound
or
cmpb
enter
and
dec
out
sub
xchg
je
cmpsb
shll
inc
inc
mov
mov
push
sahf
mov
mov
jl
add
mov
pop
pop
or
fistl
int
cli
cs
xor
xor
aad
icebp
iret
and
mov
std
int
imul
dec
adc
inc
in
movl
ja
xchg
jmp
fldcw
fisubs
push
lret
lahf
pop
hlt
int3
add
or
mov
add
cmp
xchg
mov
mov
lea
gs
inc
lahf
dec
pop
adc
add
int
movsb
nop
iret
fmull
cmc
stos
or
or
or
mov
loop
xor
xor
in
sbb
cld
xor
mov
nop
or
mov
loop
je
pop
fildll
scas
xchg
pusha
outsb
mov
sbb
mov
data16
je
into
pop
bound
mov
fnstenv
push
jmp
out
push
mov
movsb
xor
cs
loopne
xchg
int
pop
mulb
push
jge
ljmp
and
sahf
rolb
ja
sub
xchg
jae
xchg
loope
sar
stc
cmp
cmp
jmp
repnz
adc
mov
or
scas
adc
iret
add
and
inc
out
push
mov
lea
cmp
mov
dec
inc
jge
sar
inc
rclb
cwtl
pop
jbe
jbe
and
mov
daa
push
dec
inc
push
push
add
in
or
rcrb
xor
mov
loopne
cltd
lahf
xlat
out
popf
mov
gs
jo
sbb
mov
fucom
out
mov
pop
jne
xor
push
cmpsl
pusha
les
sub
mov
push
push
dec
jnp
push
inc
repnz
lret
jle
fbstp
xor
mov
xchg
ds
out
pxor
cmpsb
pushf
mov
mov
enter
push
sbb
hlt
xchg
sbb
cmp
jecxz
or
mov
mov
add
push
outsb
adc
and
push
mov
sbb
in
inc
scas
movsl
cmp
lock
adcl
mov
add
add
add
stos
push
xchg
stc
xchg
icebp
or
push
aaa
ljmp
mov
adc
dec
xor
add
fsubs
push
push
enter
inc
jecxz
add
in
out
daa
dec
xchg
movsb
pop
arpl
scas
scas
jnp
xor
push
arpl
cmp
scas
xchg
sub
sbb
addb
adc
leave
arpl
sbb
sub
stc
pop
in
push
cwtl
pushf
test
dec
bound
push
dec
push
and
inc
aas
negb
cmc
js
divb
push
rcrl
negb
fistpl
inc
in
mov
imul
push
inc
add
test
jb
dec
mov
add
and
add
cmp
sub
jmp
and
xchg
xchg
aaa
push
push
jg
or
mov
cmp
out
lret
xor
cs
mov
hlt
jbe
jmp
mov
outsl
imul
and
js
test
sbb
vandnps
dec
pop
mov
stos
loope
cmp
or
jle
repnz
ret
ja
addb
addr16
xor
enter
jne
dec
push
jo
scas
push
adc
pop
adc
xchg
lcall
fstps
add
movsb
inc
sub
and
and
dec
pusha
les
scas
lods
mov
xchg
in
sub
cmpsb
inc
xor
sub
or
sbb
aad
dec
and
cmp
xchg
jbe
xor
jmp
lret
xchg
pop
add
mov
js
sbbb
xchg
mov
lret
mov
aas
daa
jb
sub
add
ja
sub
ficoml
mov
ds
mov
jne
ficoml
lds
inc
roll
push
inc
inc
jge
popa
add
and
movsl
mov
and
fcoml
dec
incl
rcll
dec
negb
cmpsb
rclb
frstor
test
push
outsl
and
push
inc
ret
call
es
inc
mov
push
inc
rcll
cmp
stos
aam
mov
movsb
mov
fistpl
cmp
scas
mov
dec
lcall
pop
jle
das
dec
es
push
dec
ret
xor
icebp
imul
iret
les
pop
and
cltd
dec
pop
in
sahf
xchg
push
mov
ret
jne
mov
adc
xchg
lock
ret
sahf
test
es
daa
sub
lret
mov
test
inc
aaa
push
sub
inc
repnz
in
fsts
sbb
push
addb
mov
jge
mov
sti
jnp
inc
dec
idivl
fimull
shr
adc
push
and
pop
adc
push
jecxz
cmpsb
das
pop
jmp
ja
xor
int
xchg
mov
sub
or
inc
mov
ds
cwtl
pop
jl
mov
sbb
mov
adc
mov
add
inc
cmp
in
imul
test
lret
fs
lret
jl
xor
shll
data16
adc
mov
daa
addb
pop
jns
movsb
lods
daa
aas
push
daa
or
inc
push
cltd
dec
mov
jg
pop
stc
mov
out
sbb
ljmp
jbe
inc
xor
pop
mov
rorl
jbe
inc
aaa
xchg
lcall
or
cmp
cmp
arpl
add
leave
or
lods
xor
outsb
out
cmp
push
fbld
inc
pop
lock
inc
jecxz
xor
or
sbb
and
imul
xor
roll
mov
test
sub
mov
je
stos
jmp
ror
fwait
rcl
jb
xor
scas
shlb
sbb
sub
sbb
mov
push
dec
inc
out
push
out
movsb
lea
or
adc
leave
and
jno
fs
cli
popf
inc
inc
inc
and
sbb
into
jbe
leave
cmc
ss
sbb
insl
in
add
mov
imul
sbb
add
scas
push
push
jge
scas
inc
mov
jmp
sti
sbb
dec
cltd
mov
xor
pop
sub
push
dec
aas
out
js
pop
out
sub
dec
sub
test
mov
fstl
push
sarb
jns
loop
ss
mov
inc
ret
lds
adc
aas
xchg
pop
pusha
in
out
jbe
vpmovzxdq
lahf
popf
mov
lods
mov
ds
aas
das
dec
adc
sub
in
imul
cmpsl
and
mov
ja
sub
iret
cmp
in
scas
rorb
icebp
or
ds
sbb
mov
repnz
mov
mov
pop
or
cmp
jbe
hlt
in
pop
pop
cmp
adc
rcrb
jae
dec
dec
adc
out
pop
cli
movsl
lahf
push
lret
dec
clc
jg
or
sbb
jns
enter
sub
imul
jae
push
jecxz
dec
push
or
mov
out
push
inc
sub
pop
cs
or
int3
sub
mov
js
inc
loop
rol
and
sub
cmp
je
cmc
push
pushf
enter
mov
add
iret
inc
pop
imul
mov
sbb
dec
jl
cmp
xchg
jle
sbb
jecxz
mov
out
mov
js
xchg
insb
inc
jmp
test
mov
shr
insb
mov
shlb
dec
pop
ja
cmp
add
mov
push
mov
fstl
xchg
scas
dec
cmc
xchg
mov
mov
cmp
add
pop
in
jmp
jne
pop
xor
add
fisubrl
add
sbb
jae
movsl
fucomp
imul
and
dec
call
sub
cmp
and
lods
ds
mov
push
jns
jg
imul
jge
imul
je
lock
jg
mov
in
andl
or
or
adc
xchg
pop
cmc
and
fsubs
movlps
sti
lret
sbb
or
jne
inc
xor
pop
ds
inc
mov
dec
add
je
or
cmp
mov
out
sti
xor
push
jmp
pop
mov
cwtl
push
xchg
les
addr16
sub
mov
sbb
xchg
sbb
dec
xlat
mov
add
pop
rolb
or
adc
jg
inc
add
jg
sub
clc
pusha
jo
jmp
cmc
dec
mov
lock
in
jo
push
inc
cmpsl
pop
cs
mov
fcmovbe
xlat
fstps
xor
sub
or
mov
outsb
lret
add
add
jae
fucomp
pop
test
out
pop
sub
nop
clc
pop
mov
dec
push
xchg
cmp
dec
inc
jo
shlb
add
js
xchg
mov
cs
das
mov
aad
test
jnp
jns
inc
pop
leave
xor
dec
mov
sub
loope
in
imul
pop
jo
mov
insb
xchg
js
pop
cmp
adc
loopne
mov
sbb
add
subb
fimull
adc
push
fsubrl
ds
loope
push
dec
sti
mov
inc
loop
pop
xor
mov
sbb
mov
and
push
push
imul
cmp
mov
mov
leave
mov
and
out
xchg
push
adc
imul
lds
push
xor
stos
pop
ja
bnd
push
mov
outsb
cld
mov
fs
sarl
pop
xchg
mov
mov
aad
xor
inc
add
mov
cli
xchg
mov
jl
jg
jns
imul
outsl
xchg
lock
jmp
fisubl
fisttps
sbb
pop
scas
lods
sbb
or
int3
inc
mov
out
test
fiadds
out
mov
or
cmp
outsl
cltd
sub
jg
imulb
mov
lret
and
enter
lahf
fidivs
les
xor
or
leave
cli
dec
gs
fsubl
sti
mov
out
jnp
push
add
js
xchg
jecxz
lcall
cmp
mull
sub
pop
popf
jb
mov
rclb
cmp
cli
lock
pop
add
movsl
xchg
adc
cld
ret
mov
or
jo
lds
fucomi
arpl
sbb
sbb
add
sbb
ja
or
cltd
pop
mov
jb
or
push
pusha
jmp
gs
mov
aaa
mov
imul
int3
add
sub
jnp
std
js
xchg
dec
fidivl
push
test
into
mov
setl
inc
inc
fiadds
leave
inc
rcrl
cmp
ja
inc
pop
sbb
pop
mov
out
jae
je
in
mov
shlb
xor
xchg
enter
sbb
lds
arpl
pop
movsl
and
inc
push
inc
jae
pop
inc
mov
pop
pop
adc
inc
std
aaa
imul
mov
cmp
fld
jne
or
and
test
cmc
mov
jp
or
int
dec
dec
cli
mov
js
sub
push
jo
xor
add
sarl
cs
pushl
mov
cmp
push
lds
mov
lahf
ljmp
lret
push
sub
pop
inc
xor
xchg
adc
fnsetpm(287
ljmp
add
push
jbe
push
shrl
rolb
movsb
call
imul
jno
add
or
xchg
adc
push
pusha
xchg
sbb
add
rcrb
mov
lret
xor
out
cmpb
in
inc
leave
xor
push
jno
lods
scas
and
lods
mov
dec
push
push
pop
push
movb
dec
inc
add
ret
sbb
leave
icebp
cmp
pop
jmp
or
add
js
adc
mov
fisubs
sub
out
aas
cmpsb
fdivrs
pop
cmp
cmp
xor
dec
scas
mov
jmp
inc
std
mov
or
push
nop
fcoml
rcl
cld
and
int
insl
pop
jne
movsl
cld
lcallw
loope
or
jnp
dec
lods
mov
data16
movsl
fisubrs
pop
add
mov
push
or
cld
adc
dec
cmpsb
fxch
cmp
sti
mov
imul
mov
push
cwtl
xchg
clc
xorl
aam
pop
adc
pop
es
pop
dec
push
js
imul
fldcw
orb
inc
dec
mov
push
jb
inc
test
fdivrl
add
popf
sbb
aas
les
cmp
jp
xchg
and
adc
loopne
push
das
mov
sarl
jg
mov
mov
jmp
or
xor
sbb
mov
adc
add
push
push
sub
repnz
ret
fs
lret
push
aaa
fldl
mov
sub
sub
and
shr
cmc
dec
fildl
nop
repnz
inc
das
jg
xchg
aam
lcall
adc
sub
jbe
das
int3
push
fcom
fiadds
mov
sub
dec
les
inc
dec
es
jno
sub
clc
mov
push
iret
mov
dec
lea
xchg
call
fdivrp
aaa
daa
push
cmp
gs
imul
push
pop
fcmovne
mov
call
lret
aas
cmp
mov
ss
jbe
call
xor
xchg
adc
mov
aam
xor
jb
xor
in
push
imul
ljmp
mov
xor
aad
xlat
scas
ds
imul
cltd
notb
test
push
cmp
cltd
movsl
inc
and
cmc
test
mov
dec
mov
mov
jg
sbb
daa
test
push
push
mov
push
negl
mov
sub
ret
mov
fists
jmp
push
xor
loop
jae
cld
fcoms
loope
cmp
adcl
imul
sbb
je
std
pop
outsl
pop
xchg
add
xchg
and
in
add
mov
js
push
push
push
aam
iret
enter
call
fistps
movsb
sub
test
mov
int
dec
scas
sub
mov
mov
das
adc
jle
popa
sub
dec
adc
dec
pop
in
sbb
mov
mov
arpl
mov
aas
jns
dec
push
dec
test
ljmp
test
jnp
andb
xor
jmp
bound
test
popa
mov
adc
pop
mov
adc
add
push
dec
in
movlps
push
push
add
les
and
scas
sub
call
push
xchg
loopne
ja
mov
fsub
push
inc
into
mov
nop
inc
pusha
xchg
stc
dec
jg
adc
pop
mov
hlt
xlat
mov
daa
cmc
inc
in
movsl
push
flds
stos
shl
inc
enter
iret
sbb
mov
cmpsb
ficoms
push
ret
cs
subb
or
outsl
adc
inc
cmp
loopne
and
xor
fdivrs
mov
out
cmp
dec
sahf
fisttpl
push
xchg
pop
mov
cmp
push
lock
mov
push
mov
mov
pushf
mov
js
out
and
mov
je
adc
ret
inc
pop
popf
fisubrl
mov
dec
out
lcall
lods
cmp
push
jl
stos
add
cmpsl
push
jns
sbb
pop
cmp
adc
push
sbb
mov
xchg
push
push
adc
xchg
lods
dec
je
jg
sahf
cmpsl
push
mov
jbe
mov
dec
loop
inc
mov
dec
in
pop
add
das
jmp
mov
stos
loop
or
lret
sarl
pop
aas
es
mov
and
aaa
dec
test
mov
xchg
pop
data16
loopne
test
gs
pop
jns
adc
adc
and
dec
mov
int3
pop
outsb
or
add
addr16
xchg
pop
mov
mov
cmpb
xor
mov
dec
cmpsb
pop
aad
mov
out
xorb
lret
lcall
xchg
sbb
adc
pop
sahf
mov
sub
lret
lret
pop
pop
mov
xchg
sbb
movsb
outsb
ret
gs
sub
adc
dec
push
jecxz
js
inc
or
dec
lahf
sub
inc
icebp
or
push
cmp
pop
jae
cmp
push
adc
cmpsb
cmp
xlat
jmp
outsl
push
fmuls
dec
mov
mov
sahf
mov
incb
pop
mov
adc
pop
dec
mov
clc
popa
mov
gs
cmpsb
std
adcb
aam
xchg
sub
sub
or
sbbb
add
and
sub
lock
and
loopne
xor
movsb
xor
xchg
jecxz
push
dec
addl
mov
cmp
and
imul
imul
adc
xlat
pusha
dec
push
sub
xchg
lods
fmuls
push
sbb
fwait
lods
and
daa
shll
jnp
call
lods
sub
testb
mov
mov
not
in
std
in
jns
xchg
bound
mov
call
jecxz
inc
rcr
pop
sarl
jmp
les
call
ss
rcll
mov
hlt
lcall
stc
add
xchg
lcall
mov
push
jg
enter
inc
sbb
scas
cmp
out
test
mov
in
insb
sbb
push
xchg
pop
jl
loope
cmp
or
jbe
xor
and
loope
adc
stos
jge
iret
addb
rcrb
loopne
push
inc
xchg
jo
mov
mov
cmp
sbb
mov
xchg
rcrb
dec
push
sbb
lock
dec
dec
jp
cmp
fists
test
xor
lret
xorl
mov
lea
xchg
xchg
das
jb
or
cmp
pop
sub
xchg
movsb
scas
pushf
aad
sub
cmpsl
sub
push
scas
inc
mov
repnz
sub
xchg
inc
lcall
lret
mov
jnp
popf
in
fnop
ja
lock
call
inc
or
or
inc
jl
addb
mov
dec
movsl
push
ja
cmp
dec
xor
scas
rcrb
imul
mov
leave
mov
cwtl
cmp
addr16
xchg
sub
add
fs
pop
sbb
jns
fmull
push
ljmp
jnp
in
aas
popa
pop
or
cmp
mov
jl
mov
ror
adc
negb
insl
ret
das
and
lahf
fstpl
mov
sub
mov
int3
movsb
popf
sub
mov
mov
dec
push
mov
cmp
ror
int3
call
dec
fst
sub
adc
sti
insb
sub
inc
push
push
loope
push
shl
je
push
push
fimull
mov
test
jle
movb
roll
out
and
cmpsb
cli
inc
ret
ret
repz
hlt
jmp
ljmp
dec
lods
push
add
movsb
ficompl
cmpsb
add
add
push
imul
mov
cmp
lods
xchg
shll
cmp
lret
or
push
inc
pop
sub
hlt
push
sub
pop
xor
popw
mov
adc
dec
in
xor
xlat
push
lods
scas
fs
and
xchg
dec
in
push
mov
ds
xlat
cmp
sub
pop
data16
cmp
test
add
fs
cmp
xor
lds
xchg
aam
subl
je
lea
pop
mov
cmp
xchg
addb
in
sub
ret
pop
sbb
ja
dec
nop
push
ljmp
insl
or
imul
mov
pop
aad
bound
and
loopne
xchg
jb
cmpsl
arpl
mov
je
aam
adc
shrl
in
push
pop
mov
and
xchg
or
mov
loop
int
lods
inc
leave
xlat
aas
xchg
inc
push
sbb
nop
xchg
ss
sbb
rcrl
fs
pop
dec
idivb
mov
cmc
aam
and
rol
into
cs
imul
popa
xchg
inc
dec
aam
sbb
stc
jecxz
jb
mov
mov
mov
int3
inc
xchg
pusha
insl
xchg
pusha
inc
in
mov
scas
fmul
add
cmc
movl
inc
lcall
or
pop
push
lods
sub
fidivs
jns
adc
imulb
or
mov
das
mov
jge
cmp
sahf
mov
mov
adc
jnp
adc
inc
xchg
les
sbbb
xchg
lcall
mov
ret
hlt
jae
dec
decb
test
xchg
loopne
cmp
imul
pop
test
or
lcall
sbb
mov
xchg
bound
lds
pushw
cmp
imul
cmp
adcl
mov
mov
pushw
push
lcall
mov
bound
mov
aam
push
inc
int3
push
jb
dec
sub
xor
jle
faddl
loop
pop
add
adc
sub
xchg
andl
add
fmul
daa
cmp
xchg
movl
add
pop
nop
popa
sub
je
jmp
pop
add
pushf
maxps
bound
daa
jp
jne
jb
stc
addr16
test
cmpsl
sub
push
pushf
lcall
jb
in
push
or
aas
xor
cmovg
inc
ret
leave
scas
cmp
mov
push
dec
adc
mov
pop
nop
imul
mov
imul
bound
mov
cmp
notl
inc
std
scas
push
and
lcall
mov
dec
push
push
mov
jge
faddp
jmp
lcall
out
inc
pop
pop
cmc
dec
addb
cltd
and
call
cmpsl
fnsave
jae
mov
adc
mov
sbb
gs
mov
mov
out
xchg
sbb
mov
sub
adc
ret
mov
lods
int3
repnz
pop
leave
out
inc
popf
insl
push
mov
ds
repz
ret
je
push
push
jle
cmp
pop
or
xchg
xchg
pop
mov
sub
outsb
into
testl
or
int3
mov
cli
movsl
jecxz
icebp
push
movsl
and
push
push
xor
push
in
lea
cmpsb
popa
jo
std
xchg
js
das
movsb
mov
pushf
push
add
mov
inc
xchg
mov
sbb
xchg
je
mov
out
fldcw
jns
rcll
cli
add
stos
add
in
dec
lds
mov
dec
mov
adc
je
or
adc
or
in
adc
dec
mov
les
shl
xchg
add
sbb
ja
clc
lret
mov
lds
scas
insb
cltd
outsl
hlt
pop
and
imul
xor
or
loop
testl
pop
test
dec
or
jp
push
imul
xchg
ficoms
scas
dec
stos
xchg
outsl
inc
mov
test
mov
mov
jbe
mov
xchg
fisubl
fwait
mov
adcb
cmc
mov
pop
pop
gs
dec
fnstsw
jecxz
xor
ds
jle
mov
fwait
pusha
sub
inc
mov
push
mov
in
or
fstl
lods
sbb
add
into
or
loope
dec
dec
fisttpl
shrb
sbb
pushf
xor
lcall
mov
cltd
push
lock
iret
int
cmpsl
cltd
xchg
out
xor
lret
scas
into
fisubrl
push
and
jne
cli
les
cmp
ja
in
add
mov
cmc
pop
fadds
fwait
mov
adcb
sar
xchg
push
add
ds
push
leave
cmp
ja
aas
adc
sar
enter
inc
jb
daa
pop
and
or
inc
stos
pushf
mov
dec
pop
sub
adc
arpl
add
mov
rcl
dec
cmp
push
insl
jp
inc
push
int
inc
sub
rcrb
mov
xchg
sbb
dec
push
sub
int
test
daa
mov
cmc
push
jo
xchg
stos
popa
dec
imul
sub
pop
cmova
or
aas
cmpl
orb
or
sbb
mov
dec
fistpll
scas
test
nop
inc
js
cmpsl
lea
or
xor
mov
xchg
sub
mov
xor
clc
inc
mov
hlt
jo
push
add
cs
and
inc
or
ss
scas
cmp
mov
sbb
add
fs
jecxz
adc
ret
sahf
push
les
push
pop
or
mov
rorb
ds
push
sub
cld
je
mov
and
push
xchg
inc
pop
jbe
inc
push
cmpsb
xlat
sti
xchg
outsb
les
stc
mov
cmp
lds
clc
adc
std
sbb
mov
pop
jnp
mov
test
outsl
test
call
lds
xor
sub
add
gs
popf
and
jb
push
call
data16
sbb
push
mov
scas
jnp
cmpsb
movl
sar
pop
dec
ja
stos
lea
mov
fmull
fdivs
ljmp
inc
cwtl
shll
xor
mov
cwtl
pop
bound
jo
fildll
lock
mov
push
ljmp
dec
sub
jmp
ror
outsb
dec
adc
pop
xchg
daa
ret
data16
lods
rcll
xor
push
ljmp
mov
rcll
cmpsb
ret
jo
inc
ret
std
hlt
loop
cmpb
jne
gs
ja
xchg
iret
cld
mov
mov
std
fstl
aas
and
mov
xchg
cwtl
orl
push
outsl
popa
iret
lcall
or
push
inc
push
jns
sar
lcall
jge
push
and
jmp
xor
xlat
inc
fisubrl
and
add
aad
incb
stos
mov
test
daa
sbb
call
sti
nop
push
in
cld
sub
loop
adc
jmp
sarb
push
sbb
cmp
mov
lahf
push
mov
xchg
lret
fstpl
xchg
pop
inc
mov
hlt
mov
les
gs
addr16
or
leave
dec
sub
inc
inc
hlt
push
and
shrb
bound
xor
fistps
cmp
inc
lret
xchg
bound
jmp
xor
push
movsb
cltd
sbb
repz
jo
cmc
jl
pop
lcall
int3
pop
cmpsl
loope
mov
mov
and
sbb
dec
sub
js
fs
mov
loop
push
ja
lahf
adc
loop
mov
mov
xchg
leave
ror
es
lods
clc
inc
cmp
lahf
xchg
cmp
inc
je
dec
in
sarb
jo
mov
imul
aad
daa
lret
push
mov
imul
mov
jae
rcrl
lcall
sbb
repnz
fcmovu
sbb
pusha
adcb
fnsave
orps
add
pop
addl
cwtl
insb
popa
lret
sbb
sbb
jne
cmp
into
out
aas
adc
fldcw
fs
push
mov
adc
cmp
shl
sub
rcl
scas
and
cmp
and
fnstsw
ja
add
dec
nop
lret
push
and
xchg
pop
xor
sbbl
sti
cmp
out
stc
xor
in
lods
cwtl
dec
and
mov
repz
dec
jmp
adc
jp
dec
push
jge
xchg
addr16
push
mov
jl
sbb
push
add
nop
push
fstpl
mov
lods
cmpsb
clc
xchg
mov
negb
pop
adc
popa
mov
out
cld
outsl
jae
mov
jne
pop
fcompl
inc
aas
dec
mov
hlt
and
sbb
gs
inc
out
call
push
divb
data16
js
pop
jno
in
cmpsl
es
add
jo
mov
in
gs
js
mov
xchg
hlt
int
cmpsl
mov
push
lods
fsubr
push
das
sbb
pop
fidivrs
out
lcall
ljmp
jge
sti
lea
or
insb
cmpxchg
mov
inc
mov
cwtl
inc
outsl
push
add
or
dec
stos
mov
inc
test
inc
and
mov
xchg
mov
xchg
out
ficoml
xchg
out
adc
add
xor
subl
insb
lods
test
enter
xchg
jecxz
lcall
lock
mov
mov
orl
adc
ror
and
movb
ljmp
push
sahf
scas
xchg
jnp
or
lahf
pop
xor
ljmp
data16
and
in
divb
cmpb
dec
xchg
mov
loopne
and
xlat
push
inc
sub
lahf
push
clc
pop
lock
xchg
in
xchg
mov
push
test
int
ret
adc
push
xor
cli
dec
in
xchg
cmp
mov
or
aad
out
jnp
loopne
dec
dec
push
adc
sub
test
es
xchg
cmp
mov
push
mov
loope
fcomi
push
fs
or
sarb
pop
push
and
or
arpl
adc
pop
or
loope
test
xchg
call
jns
ja
pushf
stc
out
xor
lods
pop
xor
mov
dec
inc
pop
or
cltd
std
and
xor
cmpsb
imul
vmread
jno
xor
lcall
or
in
dec
push
pop
in
mov
lret
mov
dec
mov
xlat
pop
scas
mov
jl
enter
pop
sti
insb
sub
call
adc
sbb
insl
or
mov
movsb
lcall
addb
in
push
je
outsl
xchg
cmp
insb
stc
or
mov
iret
daa
xchg
mov
cmc
das
sub
rorl
rol
je
outsl
inc
clc
inc
pusha
dec
movsb
push
adc
stc
dec
adc
mov
dec
add
mov
push
push
jle,pt
xchg
lea
push
sub
lahf
sbb
enter
lret
push
push
push
rorb
mov
adc
sbb
xchg
cltd
or
adc
ds
xor
hlt
inc
lcall
jne
stos
and
ja
hlt
mov
mov
jnp
xchg
fwait
std
in
fcomps
or
jnp
sub
out
dec
xor
add
xchg
cmpsl
jbe
cmp
push
jl
rorb
add
adc
inc
stc
ret
cmc
jne
add
pushf
repnz
movsl
cmp
jp
das
mov
add
lods
repz
adc
adc
add
int
andb
lcall
pop
das
ljmp
dec
or
push
pop
mov
aam
ss
xor
adc
pop
cs
inc
fwait
lret
dec
or
jnp
cli
arpl
repnz
iret
mov
icebp
dec
add
cmp
cmp
push
pop
mov
mov
nop
enter
dec
inc
inc
sbb
xchg
fiadds
cmp
icebp
dec
sbb
test
push
lock
dec
dec
orl
or
jns
push
int
icebp
adc
fsubrs
cwtl
outsl
add
jne
add
pop
push
jg
or
xor
fcompl
mov
out
pushl
adc
xor
js
cmp
and
scas
dec
or
ss
mov
dec
xchg
subb
je
dec
dec
mov
pusha
lods
pop
cmp
and
mov
xchg
inc
jne
jecxz
cmp
ret
dec
dec
add
je
movsl
call
sbb
fcmovbe
jo
out
or
xor
ljmp
scas
inc
inc
call
lods
sarl
in
xor
jnp
mov
mov
sahf
push
add
mov
lea
dec
jbe
sub
gs
push
adc
push
push
cmp
subb
dec
push
push
pushf
dec
mov
out
lcall
data16
out
pop
scas
icebp
in
xchg
jb
sahf
les
xchg
adc
fidivs
xor
adc
jo
sub
or
rorl
xchg
fbstp
loop
test
dec
das
out
out
dec
fwait
inc
jb
sub
push
push
and
fs
je
in
push
cmp
mov
sub
cmp
loop
outsb
sub
rcrl
cmp
mov
push
jnp
in
pop
cmp
cli
fstpt
sub
push
out
mov
sarl
jae
dec
dec
push
mov
mov
xor
ret
testl
xor
out
xchg
shl
push
daa
push
sahf
xchg
mov
fiadds
pop
xor
loope
cmp
sub
push
push
jmp
std
jae
test
push
pusha
test
cmp
pop
add
mov
stos
adc
dec
movsl
inc
mov
shlb
mov
pop
stos
and
insb
fsub
push
clc
cld
div
cmc
xchg
or
cltd
test
adc
lea
aad
aaa
insl
popa
push
ret
bound
outsb
scas
cmp
or
stc
inc
pop
stos
xor
rcrl
sbb
popf
testb
outsb
mov
lret
or
adcb
sbb
sub
pop
lcall
and
pop
orb
sub
mov
sub
ret
mov
push
and
add
es
lgs
jb
xor
mov
push
inc
add
sub
test
movsl
test
data16
out
sbb
std
or
push
outsl
lods
jmp
jle
dec
pop
cmc
jle
pcmpgtb
mov
inc
push
xchg
imul
xor
out
cmp
mov
fsub
sarb
mov
cltd
imul
pop
dec
cltd
sub
testb
jo
repnz
mov
pop
jo
sub
stc
idivb
cwtl
pop
push
push
jae
or
pop
xor
adc
pop
js
rcll
test
cmc
stc
sahf
mov
mov
fldenv
lret
jns
ret
xor
mov
xchg
or
mov
xor
jnp
xor
outsb
dec
incl
jne
insl
lret
fbstp
pop
sub
or
ud0
pop
outsb
jmp
test
imull
data16
testl
add
cld
inc
jecxz
fs
mov
and
jp
pop
xor
clc
cmp
push
shlb
data16
call
mov
sbb
sbb
xor
decb
cld
and
leave
dec
stos
fbld
loopne
pop
cmpsl
ret
shll
mov
aaa
pushl
ljmp
pop
inc
pusha
xor
das
push
loop
xor
int
mov
cmp
xor
xor
add
xchg
inc
movb
cmc
hlt
xchg
in
dec
call
dec
daa
inc
sbb
push
adc
aad
dec
lahf
push
sub
repnz
pusha
cs
pop
add
fldl
pop
inc
stos
int3
mov
jge
push
lock
mov
inc
loopne
xor
shrb
add
cld
mov
lret
negl
cmpsb
leave
mov
xor
data16
in
xchg
mov
hlt
lret
daa
ljmp
push
cld
xlat
icebp
fstpt
insl
fwait
out
push
mov
testl
fiadds
pop
mov
leave
movsl
mov
pop
ja
push
into
or
fldt
jl
and
in
subb
pop
mov
inc
or
inc
iret
lcall
push
sbb
les
push
test
das
mov
add
jbe
mov
je
sub
pop
xor
dec
and
fbld
pop
shll
jae
add
mov
jbe
adc
adc
sbb
in
dec
inc
pusha
inc
push
outsb
mov
xchg
cwtl
call
lds
pop
call
clc
ss
mov
dec
or
mov
push
xor
clc
jp
pop
sbb
stos
xchg
bound
pop
pop
aad
add
cs
sbb
jmp
xchg
xchg
sbb
xor
cmp
stos
dec
add
roll
divl
or
movsb
push
lret
pop
push
imul
and
pop
and
xchg
or
imul
cmp
jmp
add
repnz
cmp
imull
pop
lods
jl
jmp
mov
roll
push
cmp
arpl
pop
int3
clc
lcall
out
stos
sbb
bound
ss
mul
jle
sbb
fs
push
inc
jb
js
icebp
xor
adc
insl
repnz
or
mov
popa
mov
repnz
or
pop
mov
xor
ret
into
cmp
sub
jo
and
icebp
fsubrs
or
dec
aad
lds
push
dec
sbb
and
push
int3
push
jmp
testb
push
jmp
xor
inc
pop
jae
jg
mov
jg
inc
dec
dec
stos
sbb
cmp
ja
push
cld
or
xchg
movsb
insl
mov
jo
lock
es
pop
add
jae
mov
imul
in
jne
lret
xchg
xchg
add
push
insl
cmpl
es
es
xchg
pop
std
loope
xchg
mov
add
add
adc
shrl
and
fs
cs
adc
dec
push
adc
mov
pop
dec
out
dec
push
test
push
jo
mov
mov
scas
push
fcoml
outsb
std
or
mov
push
sbb
xchg
mov
je
push
and
lret
icebp
test
and
jecxz
add
shlb
out
mov
in
ja
push
sbb
int3
out
stos
cmp
lcall
hlt
mov
rorb
aas
mov
pop
aam
push
or
popa
addl
test
push
xchg
aam
jle
test
mov
gs
pusha
push
shl
or
jo
repz
inc
dec
push
push
movsl
jle
mov
pop
sub
das
pop
lods
push
dec
stc
dec
pop
pushl
or
or
fstpt
ret
fldt
into
cld
jl
test
dec
mov
sahf
call
repz
inc
aam
aaa
mov
in
popa
sbbb
cmp
sbb
xor
iret
sub
ret
mov
sbb
or
inc
mov
lahf
shrl
xor
js
lds
mov
inc
aad
jbe
fldl
or
inc
movsb
inc
arpl
push
call
inc
adc
jne
ljmp
pushf
mov
cli
xor
push
sti
add
and
repz
dec
scas
pusha
cmc
add
inc
es
pop
les
push
push
add
ficompl
mov
adc
mov
repz
mov
cmp
daa
or
sub
inc
enter
push
inc
or
cwtl
mov
call
xchg
jb
pop
fwait
push
pusha
test
xor
scas
mov
and
movsb
and
push
imul
mov
xchg
and
into
jne
jecxz
scas
cmp
push
push
mov
mov
cmp
fwait
push
mov
roll
or
xchg
jp
sub
mov
sbb
rcrl
loopne
lods
pusha
xchg
dec
out
push
lahf
shrb
stc
mov
pop
push
mov
rorb
fcoms
or
mov
jmp
orl
cmc
mov
or
push
out
inc
sbb
inc
mov
mov
movsb
sbb
jb
and
dec
pop
xor
and
negb
dec
cmpsb
subb
add
insb
in
arpl
dec
xor
push
sbbl
int
adc
insb
and
ret
repnz
sbb
aad
or
pop
sub
push
jbe
pop
mov
daa
outsb
mov
dec
icebp
inc
out
idivl
mov
xchg
jle
sub
int3
adc
fadds
add
push
fdivs
sbb
stos
add
sbb
xor
jo
cmc
inc
and
pop
add
movsl
fisubl
ljmp
sub
cli
push
notb
pop
sti
push
push
fdivrs
mov
nop
mov
rcr
outsl
jbe
sub
push
or
neg
xor
pop
loop
xor
mov
mov
dec
adc
ret
adc
xchg
mov
cmp
xchg
test
push
xchg
push
and
std
dec
into
sub
stos
clc
jmp
sub
inc
ret
jle
adc
pop
mov
jecxz
arpl
sbb
stos
add
fbstp
xlat
xor
sbb
daa
arpl
inc
ret
scas
xor
push
in
es
in
jb
out
pop
popf
inc
repnz
arpl
aaa
inc
cmc
push
cmc
inc
mov
cmp
pop
or
test
cmc
adcb
orl
mov
popa
xchg
cmc
xchg
adcl
jo
add
mov
jno
push
inc
pop
push
mov
push
ljmp
je
andl
movsb
icebp
stos
sbb
inc
ja
dec
mov
jno
mov
pusha
jns
cmovb
push
mov
pop
rcrl
adc
leave
cmp
ds
cs
push
hlt
pop
push
je
mov
inc
repnz
xor
mov
pop
inc
ja
lods
adc
popa
lret
aaa
push
movl
rcll
mov
lds
test
adc
addr16
mov
lds
inc
packssdw
adc
clc
add
in
jb
push
pop
push
adc
lock
sbb
test
cmp
testl
test
cltd
mov
sub
xor
cmp
test
movsb
jno
cmpsb
pop
mov
cli
xchg
pop
pop
nop
hlt
push
loope
xorb
lods
jmp
and
stc
mov
push
cmp
jmp
es
or
insb
jb
xor
mov
push
arpl
jecxz
lods
push
xlat
push
fucomp
test
cmp
out
xor
fcoml
push
cmp
inc
mov
dec
call
pop
jl
decb
xchg
jne
movsb
pop
xor
cmp
add
add
mov
push
je
push
mov
add
mov
inc
dec
or
ss
cld
add
cs
enter
sub
sub
cwtl
in
jecxz
sbb
lds
sub
ljmp
mov
add
pop
pop
sbb
inc
in
ljmp
mov
or
lcall
andb
mov
push
adc
jmp
fistps
xor
mov
jg
outsl
ja
or
push
jns
xchg
adc
es
rclb
repnz
and
jecxz
test
push
push
mov
in
push
fwait
gs
cmpsl
in
scas
cmc
push
dec
repz
and
sub
ljmp
lods
pop
gs
sbb
sbb
aaa
add
adc
insl
xor
or
jl
repz
hlt
sub
and
sub
je
repz
and
das
pop
sub
imul
out
cmp
repz
dec
cmp
jl
imul
loop
repz
movsb
cli
dec
popa
cmp
add
pop
push
push
test
dec
mov
mov
push
inc
mov
fs
jb
jne
sub
out
sbb
pop
adc
sbb
or
dec
add
or
push
or
call
icebp
aam
cs
pop
fchs
daa
push
jo
movsb
xchg
test
lods
nop
add
adc
add
sbb
dec
pushf
iret
dec
pop
cmp
xlat
mov
loop
jl
push
clc
mov
daa
cltd
or
add
and
adc
pop
push
cmp
adc
dec
sub
jp
sbb
or
data16
adc
ljmp
add
sarb
push
hlt
es
test
dec
dec
das
dec
sub
repz
fsubs
push
icebp
ljmp
testb
xchg
or
jp
or
pop
jnp
addr16
and
mov
rcll
dec
jbe
out
insb
and
push
inc
add
adc
inc
repz
xchg
punpckhdq
dec
ficoml
or
inc
mov
or
inc
sbb
cmp
pop
push
pop
add
sub
mov
call
mov
lahf
mov
pop
mov
test
rcr
mov
dec
cmpsb
push
repz
ret
jmp
add
sbb
adc
lcall
mov
cmp
push
xchg
test
or
cmp
adc
and
lock
and
imul
ja
pop
xor
test
in
lea
lcall
xchg
mov
gs
sub
ds
inc
jne
sarb
neg
xrelease
sub
adc
dec
xor
xchg
fistps
jnp
adc
subl
dec
jg
or
sbb
or
or
dec
mov
inc
sbb
jnp
cmp
aas
push
dec
push
sub
popa
sbb
pop
sub
xchg
add
pop
sbb
jecxz
adc
xchg
aaa
out
push
scas
and
xlat
pop
push
mov
mov
lods
stos
les
or
jo
and
mov
lods
jno
jecxz
mov
idiv
nop
js
test
sete
test
loop
push
mov
nop
or
into
test
cmp
xor
lcall
or
prefetcht1
outsb
dec
mov
insl
cltd
inc
push
pop
jo
jmp
adc
pop
jmp
or
popa
int3
lahf
lahf
and
in
js
imul
sub
lcall
lahf
xchg
cli
xchg
and
or
ret
adc
jecxz
adc
and
jle
and
or
adc
or
pop
dec
pop
jmp
adc
addr16
sbb
pop
and
xlat
outsl
push
outsb
push
test
andb
mov
inc
mov
in
dec
dec
aad
andb
push
cmp
add
imul
or
imull
jae
pushf
cltd
fisttpl
cmp
popa
dec
sub
jl
dec
aad
adc
dec
push
sbb
push
pop
and
int3
mov
gs
inc
push
sbb
jo
and
cmp
lods
js
fstl
xchg
pop
outsb
mov
dec
sbb
and
mull
fs
pop
or
iret
lock
xchg
inc
push
adc
add
push
stos
or
sbb
sbb
int3
or
cmpb
xchg
xchg
int
popl
dec
push
inc
jae
aas
pop
xlat
dec
mov
vhsubps
push
pop
cs
dec
xchg
xchg
cmpsb
roll
jp
add
sub
cltd
cmp
mov
mov
in
and
pop
lods
or
inc
xchg
or
or
arpl
pop
sbb
jbe
lcall
iret
dec
pop
or
adc
mov
jo
and
inc
xchg
push
or
push
mov
sub
push
cmp
cmp
push
pop
push
aam
add
decb
cwtl
idiv
sub
scas
sbb
push
cmp
jo
and
stos
pop
lods
sbb
inc
mov
int3
arpl
pop
cld
add
mov
int
xchg
pop
pop
or
cmp
push
testl
sbb
mov
xor
push
sub
xchg
inc
cmp
or
adc
jbe
inc
and
push
or
push
adc
cmc
adc
sbb
inc
adc
xlat
dec
pop
clc
xchg
mov
out
pushf
xchg
jae
sub
mov
mov
into
adc
mov
push
jmp
movsb
sbb
fldenv
lcall
mov
ret
sbb
lcall
pushw
pop
lods
or
inc
push
or
or
arpl
jp
or
add
xor
xchg
or
inc
popa
dec
and
dec
pop
or
push
adc
jno
xor
pop
inc
mov
jnp
or
jns
test
xlat
pop
push
mov
mov
lods
test
movb
aad
icebp
and
mov
lods
or
mov
adc
push
dec
jae
dec
xchg
ror
push
or
xlat
dec
xor
dec
sub
outsl
sub
and
push
jg
or
mov
xchg
dec
pop
dec
cmp
dec
cvtpi2ps
jl
mov
pop
jg
push
sub
push
cmp
or
mov
imul
lods
and
xlat
pop
push
mov
mov
lods
push
xchg
cmpl
mov
cli
jo
and
pop
lods
or
inc
xchg
or
or
arpl
pop
sbb
jbe
lcall
iret
dec
pop
or
adc
mov
jo
imul
fucom
clc
pop
xorl
es
mov
movhps
push
fwait
sub
mulb
fsubrl
repz
mov
cld
or
xchg
and
xlat
dec
push
movsb
push
ret
fwait
or
push
or
jo
and
fimuls
cmp
inc
mov
dec
aad
loopne
jle
push
clc
pop
adc
outsb
push
xchg
sbb
sbb
iret
jg
cmp
or
mov
push
xchg
sbb
mov
jp
mov
push
cmp
or
push
adc
inc
sbb
mov
mov
lods
out
mov
les
xchg
pop
sbb
mov
jp
inc
xchg
icebp
xchg
mov
dec
mov
into
mov
mov
push
or
lds
jle
sbbl
sbb
push
pop
and
aas
cmp
push
sbb
jo
and
cmp
lods
js
imul
arpl
dec
pop
ljmp
jp
sbb
inc
cli
and
inc
jmp
mov
inc
jp
sbb
jo
and
xchg
jg
or
sbb
add
jno
cmp
adc
ficomps
sub
mov
mov
sub
and
sbb
adc
repz
and
dec
enter
nop
pop
and
xor
and
and
inc
les
es
xor
bound
add
lds
cmp
mov
or
dec
es
pop
adc
rcrb
pop
mov
add
bound
pop
jp
and
push
mov
outsl
mov
and
lock
jb
out
mov
call
movsb
iret
lea
pop
adc
dec
daa
xor
sub
aaa
fs
mov
dec
push
and
movsb
dec
push
je
add
push
jno
into
sbb
js
jecxz
sbb
iret
jno
inc
mov
jne
mov
insb
push
pop
or
into
and
or
adc
subl
dec
cmpsb
add
jo
lea
clc
jo
and
subl
adc
jno
nop
push
incb
xchg
rcrb
or
jge
roll
cmp
or
ds
jbe
pop
cmp
in
mov
mov
in
jl
shll
inc
sbb
cmp
and
inc
cli
or
jae
push
adc
push
push
mov
push
adc
push
sub
outsb
xchg
test
rorl
std
and
mov
mov
shrb
outsb
gs
das
jo
sub
out
out
xor
add
add
je
push
daa
mov
pop
cmp
arpl
movsb
std
jbe
mov
adc
cmpsb
sbb
xor
imul
pop
int3
sub
adc
lods
je
daa
into
or
cld
addr16
xchg
mov
xor
pop
movsb
es
adc
icebp
add
push
scas
xchg
repnz
mov
jns
fildll
and
dec
and
inc
and
dec
and
dec
cmpsb
pop
fmull
lahf
mov
adc
scas
loopne
pop
push
sub
or
inc
xchg
mov
jns
push
adc
xor
rcr
data16
fisubs
inc
push
mov
add
pop
adc
sti
fisttpll
fisubl
jp
sbbb
ss
in
psubsb
cmp
nop
push
lret
mov
push
inc
push
ss
jp
adc
mov
jne
or
aam
testb
stos
fbstp
and
pop
out
popa
rcrb
cmp
fwait
cltd
xchg
mov
add
orl
sub
es
and
addr16
mov
jle
pop
pop
sahf
inc
sub
or
push
dec
add
out
or
nop
ret
dec
out
int
xchg
xor
jle
insb
jns
inc
out
xor
faddl
pop
movb
sub
icebp
add
cmp
cmpsb
fmul
sbb
aam
hlt
addl
xor
out
cltd
cmp
jg
fisubrs
add
xor
mov
push
hlt
jno
sub
dec
enter
push
les
mov
fwait
jle
pop
mov
rol
push
sti
xor
fwait
popa
adc
cmp
push
ja
push
outsl
sbb
ss
or
je
dec
ja
pop
inc
adc
rcrb
dec
mov
mov
adc
adc
mov
jnp
dec
push
bt
cs
aad
add
bound
insl
js
mov
jle
sahf
shlb
mov
test
sbb
and
xchg
dec
add
jb
dec
sbb
mov
lods
xor
cli
jl
jbe
into
cmp
mov
push
ds
rorl
mov
pusha
or
dec
add
ret
push
out
stc
sub
rcll
sarb
ret
sbb
mov
movsb
xor
popa
addr16
pop
insl
ds
sti
inc
add
pop
gs
bound
add
insb
ja
add
sub
and
arpl
dec
inc
jbe
push
cmpsb
or
inc
cli
xchg
icebp
cli
mov
and
sub
testb
gs
test
cmc
inc
dec
inc
mov
dec
pop
call
pop
cs
cmp
fldt
cmp
add
mov
sti
lea
insl
push
prefetch
xor
push
cmp
dec
jne
adc
push
pop
jb
jb
das
pop
cmp
cmp
js
popa
test
push
or
je
xchg
xchg
jecxz
mov
xor
dec
mov
push
adc
call
jo
jl
push
jnp
or
inc
inc
call
in
push
adc
ds
dec
cmp
aaa
cmp
ret
roll
leave
ds
xchg
sbb
and
sbb
je,pt
xorl
push
lods
and
mov
pop
test
rorl
push
or
ljmp
inc
xchg
imul
add
sub
sub
adc
mov
pushl
xor
adc
push
xor
lock
ds
icebp
jl
aad
fcomps
and
xchg
ret
mov
push
jo
push
mov
or
sub
pop
push
push
sbb
cli
shlb
sub
push
pop
push
inc
push
xchg
in
pop
in
ss
movlps
inc
das
xor
push
jl
or
fdivl
jno
arpl
dec
inc
adc
mov
sub
mov
add
les
pop
inc
gs
pop
jb
data16
pop
cmp
push
mov
faddl
daa
dec
roll
sarb
inc
inc
rcr
dec
fcmovbe
je
xor
and
jmp
adc
outsl
mov
adc
sbb
out
cltd
push
scas
stos
mov
icebp
ja
hlt
inc
pop
icebp
xchg
or
pusha
mov
ja
sub
xor
scas
aad
pop
arpl
or
insb
inc
xor
xchg
jle
loop
and
mov
xor
xchg
inc
addr16
push
sbb
sub
xchg
orb
into
ret
pop
xchg
dec
jmp
adc
or
and
xchg
xchg
test
mov
push
xor
and
shlb
push
sub
pop
icebp
and
xlat
gs
cmp
or
iret
or
pusha
jno
lods
call
sub
and
fidivl
and
and
fsubrs
jmp
adc
repz
and
insb
sbb
test
jne
push
xor
mov
les
sub
mov
gs
incl
shl
sub
xchg
mov
mov
rclb
subb
adc
xor
shrl
enter
loopne
add
add
dec
iret
arpl
repz
stos
and
pop
lcall
xchg
and
pop
xor
xlat
arpl
add
aam
sub
mov
leave
mov
xchg
or
bound
or
adc
clc
mov
jmp
adc
jle
xchg
cmpsb
mov
lcall
jge
push
gs
lcall
push
jl
lret
sub
jne
or
insl
xor
mov
mov
and
cltd
adc
push
fnsave
cld
xlat
jge
loop
lea
mov
hlt
mov
lret
mov
adc
jno
shr
addr16
pop
cmp
and
inc
sbb
push
outsl
and
jns
lods
and
gs
cmp
inc
mov
pop
negl
aaa
jno
aam
loopne
arpl
or
push
pop
inc
adc
adc
icebp
mov
add
scas
out
inc
push
loop
cmc
pop
repz
mov
xchg
fidivs
rorb
rolb
inc
lret
dec
pop
sub
xchg
pop
xor
mov
movsl
sub
in
inc
pop
mov
arpl
lret
or
mov
or
adc
push
xor
xchg
xor
push
imul
inc
daa
pusha
addr16
or
repz
daa
inc
mov
mov
xor
mov
cld
dec
or
cs
ss
pop
and
jg
movsb
inc
js
pop
cwtl
jecxz
jb
clc
outsl
das
test
jae
pop
xlat
or
push
insb
bound
xor
adc
adc
ret
call
mov
repz
mov
mov
xchg
das
or
into
outsl
daa
aas
imul
incl
call
cmp
jmp
pop
sbb
pop
jo
js
jp
adc
pusha
insb
les
or
insl
adc
imul
das
or
daa
sbb
jmp
jae
add
pop
popf
add
sar
movb
mov
ret
jge
and
pop
gs
invd
dec
jo
cwtl
add
inc
push
neg
xor
out
cmc
xor
jle
outsb
and
jbe
lods
outsb
mov
add
push
rolb
dec
int3
mov
pop
xchg
in
xchg
aam
testb
ss
inc
mov
xor
dec
outsl
pop
mov
jns
in
push
clc
movsb
sub
xchg
inc
inc
push
hlt
or
sahf
stc
cmp
aad
jnp
adc
or
std
jp
dec
popa
aam
mov
dec
out
dec
jp
inc
shll
adc
aaa
push
sbb
cmpsb
hlt
jg
jl
xor
in
pop
enter
mov
inc
and
xchg
aaa
and
jp
rcrl
out
cltd
jmp
push
popa
cwtl
xchg
xor
dec
dec
rcrb
push
jo
inc
sbb
subb
ror
adc
and
ljmp
lahf
insl
out
mov
stos
jmp
repnz
mov
ret
insb
outsb
stos
ss
aad
div
inc
mov
lcall
das
or
jmp
sub
sub
les
and
imul
adc
test
adc
outsb
leave
test
daa
lret
xchg
dec
dec
and
jne
scas
mov
out
test
xor
push
mov
adc
inc
lret
xchg
mov
fiaddl
movsb
sub
and
sub
bound
inc
sbb
or
adc
lock
mov
sub
wrmsr
mov
into
das
outsl
adc
jg
movsb
and
pop
xor
lods
insl
fs
sahf
jo
push
js
adc
cmp
jmp
jecxz
mov
int
xchg
sub
dec
inc
fldt
lret
mov
mov
mov
orb
add
rcll
data16
adc
xor
cwtl
pop
xor
mov
jne
in
pop
lock
mov
pop
push
rcll
sahf
into
lea
jb
pop
addb
stos
or
xchg
dec
push
mov
pop
jg
push
data16
imul
enter
push
jo
aas
int
sub
bound
jne
repnz
inc
data16
jp
sub
outsb
jne
cmp
mov
and
hlt
testb
data16
xchg
lret
xor
adc
adc
incl
lret
xlat
mov
insb
aaa
inc
jb,pt
xor
test
adc
xchg
cld
sub
clc
shl
sub
push
cmp
xchg
mov
xchg
icebp
jmp
push
xlat
jecxz
pop
arpl
sbb
sarb
adc
js
fistps
adc
sbb
dec
shl
cmpsb
push
mov
sbb
jbe
sub
fstl
inc
aas
dec
lock
jb
add
fdivrs
sbb
push
data16
ror
pop
andb
sbb
aaa
push
dec
xchg
mov
repnz
daa
je
nop
cmpsb
push
test
or
jo
adc
test
nop
idivb
mov
scas
add
sub
or
sarb
mov
adc
xor
fwait
xchg
dec
mov
insb
dec
arpl
adc
ljmp
mov
repz
push
cmpsl
lds
icebp
jnp
add
pop
add
inc
pusha
pop
xor
orl
inc
dec
jo
popa
aaa
sub
xlat
mov
and
xor
test
das
lcall
sbbl
call
pop
and
out
mov
adc
sbb
push
cwtl
jbe
loop
popf
add
movhps
xor
int3
xor
push
xor
cmpb
into
stos
jnp
push
cmp
jnp
in
xchg
xchg
xchg
mov
xor
pop
das
sbb
sbbb
es
popf
fmull
pop
cmp
lahf
test
sti
dec
add
sub
push
dec
mov
pusha
mov
pushf
sub
dec
daa
push
and
jbe
rolb
push
repz
imul
pop
popa
aad
jo
mov
xor
and
call
cmp
add
sub
inc
cmp
mov
sub
ds
push
add
dec
imul
pusha
adc
or
add
ficoms
mov
adc
cmp
dec
xor
pop
aas
xor
push
cmp
mov
mov
xchg
popf
out
or
lret
ret
lds
push
arpl
sbb
adc
rolb
sub
push
push
cs
fisubs
sbb
or
arpl
stc
jbe
inc
jg
push
push
mov
add
lods
dec
and
outsb
mov
or
leave
jg
incb
cs
inc
dec
adc
dec
ds
nop
sub
dec
pop
xor
sub
adc
imul
dec
adc
insl
inc
xchg
pop
das
cld
and
fbld
ss
lods
xor
sti
pushf
cmpsb
call
adc
jb
fs
jmp
jo
stc
adc
fcomp
sub
lret
gs
out
imul
fwait
dec
mov
jnp
xor
and
lods
inc
push
es
adc
inc
push
pop
or
xor
aaa
cwtl
cmp
fxch
xor
and
outsl
repnz
mov
fwait
cmpsb
mov
popf
fildl
adc
inc
outsl
mov
ja
aaa
inc
int3
jne
push
popf
cmp
outsb
push
xchg
sub
stos
and
or
test
je
jbe
push
pop
pop
xor
xchg
dec
xchg
xchg
jae
leave
push
push
and
test
jo
js
xor
rorl
xchg
mov
push
ds
xor
jle
sbb
pop
xor
xchg
int3
sbbb
mov
pop
xchg
lret
adc
and
xchg
push
ficoms
pop
dec
inc
ljmp
xor
pop
out
cmpsl
or
stos
pop
push
jae
pop
dec
pop
pop
inc
aas
inc
xor
mov
mulb
cmp
push
jl
ror
movsl
xchg
xchg
int
mov
mov
sbb
cwtl
test
jae
jbe
mov
nopl
add
adc
add
add
call
shll
xchg
pop
insb
jp
xor
mov
cmp
movsb
add
push
or
inc
jl
mov
mov
mov
fisubs
popw
or
dec
dec
ret
das
insl
sahf
push
xor
call
sub
jge
ja
sbb
mov
das
movaps
xorl
dec
rolb
jae
repz
inc
gs
stos
aad
cld
sub
or
mov
mov
push
inc
dec
jb
adc
test
out
xor
insb
dec
imul
mov
mov
jg
pusha
outsl
xor
mov
jmp
push
jb
sbb
push
jmp
sub
sbb
shrl
cltd
fcompl
rcrl
into
fistpl
das
pop
pop
mov
insb
cld
icebp
jle
and
push
dec
or
sub
into
negb
jo
mov
into
out
push
aam
cmp
push
sbb
outsl
sbb
jp
sub
in
xchg
push
pop
enter
inc
sbb
imul
jnp
pushf
neg
cmc
mov
outsb
mov
cmp
sub
xor
xor
jno
push
sbb
into
adc
iret
xor
pop
dec
push
inc
add
dec
je
cmp
aad
stc
lock
jo
data16
in
mov
jb
dec
cmc
jne
mov
dec
inc
cmpb
or
dec
xor
test
outsl
repz
sub
xchg
or
mov
inc
push
mov
aas
nop
in
xchg
fldenv
mov
or
xor
pop
jne
test
scas
loopne
mov
xchg
mov
in
out
sub
gs
outsl
mov
ss
mov
les
movsl
aam
bound
mov
adc
ss
xchg
cmp
or
mov
mov
ret
cmpsl
or
imul
and
movsb
insb
push
xor
sub
push
cmc
pop
sub
mov
mov
test
nop
popf
data16
mov
insl
mov
js
jae
adc
dec
pop
jmp
stos
dec
insl
ret
leave
mov
or
sub
xor
cld
pop
push
adc
dec
dec
adc
sbb
loope
add
jae
push
sub
dec
xchg
jnp
cmpsb
imul
mov
loopne
neg
xchg
test
stos
out
icebp
pop
push
or
pop
xchg
sbb
dec
push
dec
jno
pop
sub
and
scas
or
or
outsl
loopne
call
add
sbb
inc
nop
or
jg
into
add
mov
int
mov
arpl
pop
pop
mov
push
adc
stos
mov
cld
jnp
ja
pusha
enter
push
jo
inc
xchg
and
fisubrs
cs
jp
jg
outsb
xor
xor
fmulp
mov
ljmp
adc
lret
jg
mov
test
dec
int
mull
push
push
dec
inc
add
pop
arpl
pop
aaa
inc
cmp
sub
add
sbb
jb
ss
rcrb
mov
test
js
rorl
dec
mov
and
scas
fstps
dec
cwtl
and
sub
cmp
jge
dec
adc
mov
out
imul
jne
sub
push
lock
xor
mov
dec
pop
or
test
adc
push
jb
push
xor
hlt
imul
sbb
xchg
add
out
scas
mov
mov
mov
sbbb
add
fs
xor
inc
mov
adc
sbb
xchg
push
inc
shll
xlat
cmp
push
and
arpl
add
mov
je
jno
gs
fildll
dec
testl
nop
fists
mov
mov
adc
inc
sbb
js
insb
adc
in
xor
push
or
cmc
adc
lock
push
dec
sbb
cmpsl
je
push
aas
repz
js
adc
push
sbb
cmpl
inc
lret
fsubs
mov
push
cld
shll
and
cld
cmpsl
lret
jmp
ljmp
je
mov
cmp
mov
lret
or
mov
clc
mov
rolb
sub
dec
mov
sbb
mov
das
xchg
jle
xor
cmp
test
jp
add
pop
int3
mov
sub
mov
arpl
push
call
adc
mov
rcrb
mov
inc
lea
aaa
and
push
mov
pop
adc
mov
test
ja
inc
or
adc
sbb
xor
push
sbb
mov
fisubs
mov
and
out
inc
jae
data16
stc
sub
or
jecxz
or
mov
xor
adc
imul
mov
ret
lcall
push
mov
cvtps2pi
js
and
sbb
je
les
sbb
shrl
inc
mov
mov
shlb
xchg
dec
jg
mov
add
fldcw
sahf
es
jo
je
pop
jg
in
sbb
enter
sub
mov
lock
mov
jmp
inc
xor
sub
es
xchg
hlt
dec
insb
loopne
sbb
mov
jbe
in
icebp
xor
push
adcb
cmp
xchg
pop
sbb
mov
test
int3
cmpsb
cmp
mov
inc
mov
dec
lea
pmuludq
stos
fwait
nop
cwtl
ss
mov
or
push
cli
mov
sbb
sub
test
mov
lret
xor
lods
cltd
aaa
push
push
sub
hlt
jg
out
mov
stc
and
cs
sub
push
pop
xor
pop
repnz
pushf
dec
imul
lahf
ja
fs
fdivrs
pop
xor
ss
pop
jp
sub
sub
and
out
sub
push
ss
das
dec
pop
or
mov
loope
cmp
push
les
data16
gs
add
mov
mov
and
or
sbbl
inc
into
lods
mov
add
lods
sbb
push
push
add
inc
cmpsl
cmp
pop
lods
push
dec
or
jg
inc
sub
dec
test
xor
push
movsl
mov
pop
pop
cmp
pop
jo
xchg
mov
push
out
or
jno
lods
push
mov
pop
jb
push
pop
fstp
push
dec
lds
cmp
or
fistpll
stos
in
sbb
sub
outsb
loopne
push
add
test
cli
mov
and
lock
loope
push
icebp
mov
shlb
insl
jmp
insb
in
addr16
cwtl
pop
sbb
in
lahf
js
xchg
adc
push
sbb
aas
sub
cmpsl
fiaddl
and
mov
fwait
pop
arpl
add
test
add
mov
mov
bound
call
lods
mov
xor
push
psubw
xor
pop
loop
jmp
imul
inc
loopne
into
fmul
insb
jp
fs
lods
insl
mov
sbb
popf
sub
mov
cwtl
mov
out
aas
pusha
xchg
cwtl
mov
in
ljmp
arpl
dec
popa
je
xchg
dec
or
and
mov
add
inc
outsl
xor
out
xor
cmp
clc
sbb
xor
cmp
or
xchg
clc
pushf
mov
push
push
jmp
inc
sub
enter
subb
xchg
dec
xchg
insb
adc
and
add
and
inc
scas
loop
sbb
orb
dec
mov
loope
mov
decb
xchg
mov
ljmp
fwait
xor
hlt
mov
addl
pop
fldenv
push
adc
xchg
jnp
inc
jb
adc
sbb
bound
xor
push
add
movsb
bound
xor
push
add
fwait
stc
in
push
add
fwait
mov
add
jbe
sbb
inc
inc
adc
cmp
jb
adc
cmp
inc
adc
push
cmp
inc
adc
idivb
pushf
jle
inc
adc
cmp
mov
fdivrl
inc
adc
xchg
cmp
sbb
inc
adc
pop
sbb
jb
adc
push
pop
cmp
jb
adc
fcomps
inc
adc
push
fdivrs
inc
adc
neg
pushf
lahf
jb
adc
fdivrs
mov
fcompl
xchg
fdivr
xchg
adc
jbe
sbb
jb
adc
jnp
inc
inc
cld
shr
sahf
sbb
bound
xor
push
add
sahf
movsb
bound
xor
push
add
fwait
cld
in
push
add
sahf
mov
add
jbe
sbb
dec
dec
adc
lcall
cmp
push
add
sahf
cmp
test
add
sahf
movsb
bound
xor
push
add
fwait
cld
in
push
add
sahf
mov
add
jbe
sbb
dec
dec
adc
push
js
aas
jb
adc
ss
aas
jb
adc
push
js
aas
jb
adc
idivb
aas
jb
adc
js
aas
jb
adc
mov
fdivrl
jb
adc
xchg
js
push
jb
adc
jbe
sbb
jb
adc
jb
adc
xchg
clc
mov
dec
filds
push
jecxz
test
cmp
sbb
pop
push
neg
hlt
mov
sarl
dec
out
jle
cmp
cmpsl
out
pop
jp
jge,pt
data16
inc
cmp
aas
jbe
or
aas
ja
sbb
aas
push
inc
or
mov
inc
jge
test
cmp
dec
or
sub
pop
xor
sub
xorb
out
in
mov
fwait
mov
add
push
xor
imul
jle
inc
xlat
add
inc
and
pop
inc
sahf
inc
popa
pop
add
inc
cmp
jmp
inc
adc
rcr
lahf
push
inc
xor
imul
mov
jo
adc
out
addr16
jbe
push
rcll
scas
cmp
jo
adc
sub
aas
adc
sbb
in
xchg
mov
int
ret
inc
pusha
add
or
inc
jge
and
sbbb
inc
jno
push
mov
aas
xchg
bound
loopne
inc
aas
cmp
test
xchg
ds
inc
in
mov
cmp
cli
inc
cld
femms
xor
push
insl
jbe
push
pop
add
push
sub
insw
add
sbb
jle
bound
jle
xor
clc
dec
ljmp
xor
add
sbb
and
scas
icebp
jb
aaa
push
sub
cmp
dec
xor
jns
cmp
adc
shrl
mov
pusha
rcrb
sub
out
adc
js
data16
sbb
jle
data16
sti
jle
cmp
add
inc
in
int
dec
mov
jbe
stos
data16
or
jmp
fldcw
push
adc
mov
jb,pn
adc
stc
push
mov
ret
jl
cmp
stos
xchg
gs
hlt
sbb
dec
dec
add
out
mov
insb
push
cmp
in
gs
or
cwtl
inc
jmp
rol
js
icebp
jb
inc
add
xchg
jecxz
add
and
in
scas
cs
lock
xchg
and
fnstcw
push
xor
loopne
les
and
inc
xor
aad
xlat
xlat
lods
sub
cmpl
mov
xchg
pop
sbb
cmp
xchg
add
out
dec
leave
mov
cmp
ljmp
lock
dec
pop
push
pop
mov
shrl
add
push
rcl
outsl
xlat
push
mov
repnz
xchg
cwtl
pop
jge
cmp
sub
mull
cs
pop
ret
pop
cmp
xchg
arpl
mov
lcall
cmp
subl
inc
dec
lcall
dec
push
orb
mov
les
xor
imull
sub
dec
ret
punpcklwd
cmp
sarl
mov
sbb
jne
xchg
cmp
outsl
push
adc
ror
pop
repz
ljmp
aaa
mov
cmp
pop
pop
xor
jae
aam
dec
jbe
lcall
sbb
sbb
xchg
jg
add
jns
aas
and
inc
add
js
aas
ja
or
in
imul
std
jmp
mov
dec
add
lock
outsl
xor
or
inc
push
call
in
pop
sbb
push
je
std
sbb
push
sbb
jle
push
pop
pop
mov
scas
add
aam
addr16
pusha
adcb
add
ret
aam
mov
fidivrs
dec
jno
int3
inc
push
jl
fisubl
fcomi
jge
pop
stos
flds
ss
stos
jle
sub
scas
push
je
and
inc
xor
popf
xchg
shr
cmp
xchg
mov
jmp
shr
xor
pop
dec
popf
push
adc
dec
lcall
mov
in
stos
push
xchg
fmuls
and
pop
test
pusha
shlb
and
inc
lret
mov
push
and
repnz
xorl
outsl
add
mov
aad
inc
and
jge
std
mov
cmp
loop
mov
popf
mov
faddl
push
insb
jle
cltd
and
xchg
jmp
in
mov
shll
repz
xor
dec
mov
jbe
sbb
icebp
sbb
xorl
jno
jmp
mov
cli
mov
xor
call
jle
call
xchg
jle
bound
adc
pop
repz
sbb
or
pop
sbb
aaa
ret
xchg
movsl
inc
lods
mov
inc
lahf
dec
je
pop
bound
adc
xchg
int
bound
mov
adc
leave
xor
js
lods
mov
subl
pop
add
mov
in
adc
cld
stos
push
or
movsb
cld
mull
add
shll
aam
out
push
loopne
rcrl
jmp
add
xor
es
push
push
xchg
insl
sbb
rcrb
jecxz
rorb
inc
push
mov
adc
lods
sub
js
push
sbb
leave
pop
iret
cmp
inc
or
xor
xchg
movsl
mov
push
ljmp
dec
sub
pop
push
pop
inc
sbb
rcr
cmc
xchg
inc
inc
bound
pop
pop
adc
pop
adc
pusha
and
sub
dec
inc
pusha
push
inc
arpl
dec
leave
jecxz
cmpb
push
fidivs
pop
popf
push
rclb
test
add
hlt
out
enter
pop
mov
aam
dec
ss
jge
add
shr
popf
js
cs
or
push
cmpsl
push
dec
sbb
add
mov
sahf
int3
mov
pop
sbb
pop
stos
bound
xor
jns
jo
lahf
push
add
dec
outsb
cmc
or
mov
dec
and
pushf
adc
cld
sarl
adc
or
js
xlat
or
push
inc
push
call
insl
adc
repz
inc
xor
pop
inc
or
xor
inc
std
repnz
sub
sub
or
mov
mov
clc
loopne
lret
fsubl
shll
roll
inc
incl
sub
mov
test
cmp
rolb
jbe
testl
mov
outsb
out
pop
imul
push
mov
hlt
xchg
ret
cwtl
rorb
insl
imul
xchg
popa
cmp
jecxz
sub
push
cld
xchg
sub
xchg
dec
adc
adc
lods
mov
inc
xor
or
sarb
aas
test
push
leave
cmp
inc
cmp
mov
dec
pop
push
pop
decl
push
pop
mov
add
test
enter
dec
sbb
jle
out
je
mov
pop
std
add
in
jb
dec
fdivrl
mov
orb
jno
sub
mov
scas
jecxz
std
xchg
lahf
fsubs
add
hlt
pop
orl
sbb
cs
stos
lods
fs
xor
stos
aaa
out
hlt
push
test
jg
cmp
xchg
cmp
dec
xor
bound
repnz
mov
dec
ljmp
sbb
dec
dec
out
cld
push
jo
rcll
pop
orl
push
std
xchg
lahf
mov
or
imul
inc
push
enter
pop
mov
shl
ss
or
lahf
insb
sti
pop
test
shll
in
pop
aas
sub
pushf
adc
arpl
dec
xchg
popf
test
aas
lret
add
mov
loope
in
mov
out
outsl
lds
sub
hlt
mov
out
push
mov
mov
add
mov
cmp
inc
sbb
pop
lods
jl
lahf
add
mov
or
push
sbb
and
outsb
inc
push
ret
test
fwait
lret
pop
mov
fdivr
dec
or
ss
dec
mov
jecxz
out
or
mulb
sbbl
fs
pop
popf
pop
ret
sub
inc
push
mov
gs
xor
rcrl
or
sbb
pop
sub
xchg
xor
push
shrl
mov
inc
clc
and
jb
gs
fdivrs
mov
jo
xchg
pop
inc
nop
add
or
sahf
xchg
sahf
outsb
push
fildl
je
shll
jb
push
ficompl
xchg
fcmove
push
hlt
inc
adcb
and
loope
in
pop
stc
daa
iret
out
cmp
out
inc
ljmp
adc
cmpsb
out
adc
addb
or
mov
xchg
adc
mov
pop
jmp
fcomps
xchg
cmp
inc
in
push
cmp
jne
push
loopne
push
roll
roll
push
negb
leave
inc
cwtl
out
jb
out
loopne
or
mov
dec
inc
inc
out
jp
scas
clc
pop
icebp
dec
xor
sbb
mov
pop
icebp
mov
push
dec
add
shrl
add
pop
scas
mov
mov
push
enter
mov
lret
adc
popf
pusha
sub
mov
movsb
mov
sbb
lea
rep
divl
daa
add
xchg
rorb
sbb
aas
subl
rcrb
movsb
sbb
mov
lahf
pop
adc
loope
mov
inc
mov
fxam
daa
fcoml
pop
insb
inc
aas
sbb
cli
push
rolb
mov
adc
push
inc
ds
data16
lea
and
sbb
arpl
adc
out
mov
xor
mov
lahf
clc
sti
push
xchg
int3
and
rcl
iret
movsb
shl
addr16
fwait
mov
xor
pop
clc
cmp
outsl
add
aas
out
pusha
jno
ss
mov
and
cmp
pop
inc
inc
out
dec
or
pusha
cwtl
pop
popf
or
cmp
pop
push
jno
push
leave
xor
scas
sub
cmp
adc
std
mov
add
popa
sub
arpl
addps
stc
sbbl
aas
lds
add
mov
or
xor
inc
popa
push
xchg
sbb
mov
push
ja
mov
add
jge
pop
inc
or
adc
aam
mov
jo
push
mov
add
mov
jp
inc
dec
xor
pusha
inc
sub
outsb
sahf
es
sub
pop
cli
xchg
jle
mov
jg
test
in
mov
xlat
inc
and
std
and
push
mov
arpl
in
push
mov
lcall
cmp
jae
xchg
pop
jge
ja
cmc
lcall
add
push
pop
cmp
fcmovnbe
push
fldl
jl
leave
mov
push
mov
jle
sub
andb
test
pushf
in
in
leave
push
shll
mov
cmpsl
icebp
mov
adc
sub
jmp
lea
imulb
mov
lret
cmp
pop
rorb
cmp
in
push
adc
repnz
adc
add
das
lds
adc
push
add
outsb
out
pop
pop
stc
and
pusha
pop
sbb
sbb
dec
mov
pop
dec
mov
mov
push
push
cmp
and
xchg
inc
insb
jmp
add
mov
int
sbbl
dec
and
pop
cmpsl
mov
add
mov
mov
mov
cmp
sub
scas
cmpsl
shll
and
adc
add
and
clc
pop
push
jl
lahf
call
repnz
stc
movsb
and
ret
in
xor
les
mov
fnstenv
cltd
mov
mov
xor
test
arpl
sbb
jl
cmp
dec
bound
in
iret
fmull
cmp
nop
mov
sub
push
inc
pop
daa
or
sbb
jle
push
jne
leave
sbb
dec
xor
aaa
enter
dec
sti
inc
cmc
inc
xchg
aam
subb
cmp
jg
and
push
push
leave
loop,pn
adc
adc
add
mov
cmpsl
adc
push
push
icebp
xor
cmpsl
jp
inc
fisubrs
mov
or
addr16
pop
xor
sub
and
cmpsb
push
andb
mov
cmp
jp
xchg
hlt
repz
xchg
mov
add
sub
mov
mov
imul
rcll
rcrb
roll
push
icebp
out
loopne
movsl
cmp
or
inc
inc
mov
push
sbb
subb
dec
lahf
adc
inc
cmp
xchg
lods
sub
jb
ret
lret
loopne
pop
mov
cli
lds
jge
lea
or
in
cwtl
xor
cmp
lods
pop
cli
hlt
das
icebp
adc
push
add
jb
inc
ja
cmp
inc
fcoms
xchg
push
mov
rcrb
jns
cmp
dec
push
lahf
lock
inc
adc
push
mov
mov
gs
jge
lods
xor
jl
pop
orl
cmpsl
or
mov
and
lahf
fwait
scas
stc
out
dec
outsb
cmp
xor
ficoms
push
push
rol
mov
subb
add
jle
xor
imul
xchg
or
shrb
pushl
push
fs
push
daa
and
jle
dec
xchg
adc
orl
int3
mov
dec
push
inc
shll
lcall
or
popa
mov
add
xor
call
sarl
inc
jg
ja
out
mov
mov
dec
in
pop
sbb
mov
jl
and
xchg
lods
stc
lock
adc
mov
lds
pop
xor
das
push
shl
pop
mov
mov
loope
mov
jns
ret
push
pop
add
test
jg
sbb
movsl
sarb
xchg
stc
fdivs
jl
sbb
ret
push
inc
mov
xchg
and
movntq
andl
push
outsb
xchg
ret
add
rorb
jbe
sub
sbb
aas
inc
dec
outsl
out
cmp
mov
jle
push
xchg
shl
dec
insb
adc
ja
sub
pminsw
cmpsb
divb
push
ret
push
gs
aas
jne
mov
loopne
popf
fldenv
cli
aam
cmp
and
adc
mov
inc
out
rolb
mov
ss
mov
push
add
pop
push
addb
push
mov
sarl
int
xchg
push
movsb
xor
dec
xchg
test
stos
outsl
and
leave
mov
in
stos
sub
cmpsb
jecxz
or
js
xlat
hlt
jle
sub
ds
sbb
adc
aaa
mov
adc
mov
es
shr
jle
mov
mov
cmp
jle
mov
pop
or
pusha
fldt
or
xor
cmpb
pusha
push
movsl
test
mov
sahf
hlt
cmpsb
pop
cld
sbb
popa
cmp
paddw
and
fimuls
fistl
notb
test
sbb
xorb
mov
xor
add
mov
dec
stos
push
fisubs
push
rcl
push
mov
sti
lret
mov
nop
mov
fdivr
xchg
jge
jns
push
es
or
aas
les
jle
bound
adc
in
lret
xor
jb
cli
mov
lcall
and
and
mov
icebp
jge
xchg
push
pop
aas
xchg
mov
or
or
sbb
outsb
push
inc
sbb
push
sahf
xchg
cli
dec
cmpsl
sbb
sbb
adc
pushf
mov
mov
cld
fistps
jmp
inc
movl
insb
dec
cmp
or
xchg
jae
adc
imul
cmp
lahf
mov
adc
pop
icebp
andb
icebp
xchg
stc
adc
sub
lret
shlb
and
sub
push
mov
je
jno
faddl
test
lds
xchg
pushf
jb
cmpsl
mov
cmc
adc
lahf
in
cmp
cmpsl
movsl
call
pop
aad
pop
not
into
lahf
add
sbb
pop
dec
cld
mov
or
cs
idiv
adc
js
data16
or
adc
dec
popa
insl
int
mov
dec
imul
pop
movsb
add
enter
push
mov
cld
lea
xor
int
add
dec
in
mov
scas
sub
shrl
push
popa
imul
stos
sahf
rcrl
ret
lahf
ljmp
repz
adc
pushf
adc
mov
xorb
fsubrl
mov
movzwl
das
adc
stc
pop
sub
mov
jl
push
loop
idivb
adc
xchg
add
jp
int
dec
adc
pop
adc
movsl
cmp
dec
xor
push
sub
cld
cmp
daa
mov
mov
loopne,pt
repnz
cltd
ret
cld
pusha
xor
fcomp
out
jmp
mov
push
leave
cld
ficompl
or
mov
lock
insl
jp
cmp
call
outsb
jb
mov
ljmp
fs
mull
xor
arpl
je
mov
mov
aam
push
or
pop
pop
jle
fcoml
ret
xor
int
cmp
or
sbb
sub
clc
cmpl
sbb
push
mov
test
shr
push
xchg
out
adc
xchg
cmp
or
push
xor
fidivrs
enter
push
mov
insb
fnstenv
jbe
jecxz
dec
je
js
and
inc
push
js
mov
inc
sbb
xchg
movnti
subb
or
xchg
jp
xor
cld
and
mov
jp
add
mov
add
pusha
add
add
push
mov
mov
xor
mov
xor
add
fildll
ljmp
test
pusha
pushl
or
inc
cmpsb
and
add
mov
add
mov
rorl
adc
dec
addr16
and
pusha
je
mov
inc
jnp
cmp
mov
pushl
or
inc
cmpsb
and
add
mov
add
mov
rorb
adc
mov
aaa
pusha
add
mov
rcrl
pushl
loopne
jne
pusha
add
or
mov
lret
sub
pop
int
jo
push
push
mov
jge
xor
and
sysexit
push
rorb
xchg
stos
pushl
add
nop
call
jl
sbb
mov
data16
jno
and
jmp
mov
add
pusha
add
daa
push
jecxz
call
lret
push
pop
pusha
pushl
loopne
jne
pusha
add
or
mov
lret
shr
addb
push
cmc
adc
pop
jg
add
adcb
inc
decb
xchg
push
cmp
cmp
ret
leave
popf
lret
lahf
call
lahf
pop
cld
jmp
adc
push
sbb
inc
insb
rep
lret
adc
das
imull
test
pop
pushf
cmp
push
lret
jns
xor
ret
rorl
in
or
jecxz
cmpl
aas
pop
and
lods
addl
inc
add
or
add
xchg
pusha
cwtl
mov
fnsave
ret
adc
xor
enter
adc
add
pop
rol
adc
mov
cmc
bound
inc
cmc
mov
inc
ror
xor
cmpsb
add
mov
add
mov
adc
pusha
sub
imul
ret
and
jecxz
add
jecxz
lea
jne
cld
xor
mov
mov
out
add
call
mov
out
add
arpl
add
arpl
add
or
clc
inc
aas
mov
mov
out
add
pushf
call
cmp
je
jge
je
xor
jecxz
xchg
jne
outsl
fwait
jne
xor
repz
les
add
dec
mov
mov
add
add
decl
pusha
mov
add
aaa
push
shlb
pusha
add
cmp
ret
in
es
js
js
add
mov
leave
jne
push
ficoms
addb
sbb
xchg
insl
sbb
mov
in
outsb
idivb
adc
or
adc
lahf
jle
push
add
test
mov
leave
xchg
cmpsb
je
xchg
cmpsb
je
jmp
jmp
test
mov
sbb
mov
adc
ja
popa
pop
inc
push
xchg
pop
cld
mov
inc
or
jmp
and
pusha
or
add
movsb
mov
inc
push
xor
mov
divb
test
add
jb
shr
rclb
call
and
mov
dec
add
call
fwait
sbb
int3
roll
fidivrs
stos
xor
add
or
pop
jae
xor
clc
jg
pop
std
or
jmp
test
movsb
sbb
adc
mov
loopne
fsts
and
ret
sub
inc
sbb
xor
adc
cmpsb
push
or
push
adc
adc
jb
or
xor
imul
or
outsl
add
add
jne
and
and
push
pusha
push
imul
jb
sub
xor
inc
sbb
and
or
push
or
xor
imul
sbb
insb
xor
pusha
add
xor
pusha
add
xor
lods
int
subl
jg
dec
sbb
out
mov
ret
sub
out
inc
jmp
movsl
adc
and
mov
adc
std
pop
aaa
add
fldl
mov
mov
je
push
cmp
mov
mov
xor
xchg
mov
pop
or
jmp
cld
scas
pop
xor
jecxz
in
cld
add
pop
loop
or
sarb
xor
mov
sbb
adc
dec
cmp
mov
mov
mov
dec
incl
rolb
push
sub
adc
in
jno
jmp
pusha
push
jbe
stos
pop
imul
stos
sub
hlt
add
inc
imul
movsb
and
sarb
out
jbe
mov
mov
test
adc
mov
in
pop
pushf
add
test
shll
pop
lock
mov
insl
test
insb
push
cmpb
movsl
cmp
mov
lea
add
push
pop
mov
test
mov
xchg
ljmp
cltd
or
mov
lods
sbb
cwtl
mov
mov
rorb
dec
or
mov
xchg
lahf
push
xor
pop
loop
xor
jmp
and
pushf
pop
fldenv
sbbl
div
sub
nop
or
gs
push
shlb
lret
test
jo
insl
leave
popf
xchg
add
lahf
enter
arpl
add
movsb
lods
cmp
imul
mov
enter
das
cmpsb
out
push
cld
sub
int
pop
ret
jge
dec
setl
call
test
movsb
fisubrl
int3
pop
inc
jle
mov
fwait
rolb
inc
push
add
jg
cmc
and
adc
loop
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
pusha
add
enter
enter
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
push
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
imul
add
bound
bound
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
