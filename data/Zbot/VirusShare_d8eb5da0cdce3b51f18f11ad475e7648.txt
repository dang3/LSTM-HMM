in
ljmp
pop
icebp
cmp
mov
jns
xchg
lret
std
bnd
xor
leave
ret
pop
or
pop
pop
ret
or
inc
mov
pop
ret
pop
pop
add
in
jbe
ret
inc
and
mov
dec
or
pop
pop
sti
lcall
pop
add
dec
adc
mov
mov
add
aaa
jbe
adc
adc
nop
nop
adc
adc
in
add
mov
test
add
test
inc
divb
cmpsl
mov
add
inc
mov
mov
fwait
jnp
jge
inc
inc
cmp
inc
imul
in
adc
pop
inc
inc
pop
aaa
cwtl
pop
rcll
push
add
add
and
mov
and
iret
int3
cltd
sar
xchg
out
in
lods
sub
add
mov
test
add
mov
adc
ljmp
sbb
dec
push
mov
add
cwtl
rolb
xchg
add
adc
imul
sbb
adc
adc
rdmsr
or
adc
cs
gs
mov
rorb
and
aam
cmpsb
lret
sbb
notl
adc
imul
inc
mov
mov
push
sub
push
dec
cmpsb
cmpsb
inc
mov
lods
fldcw
outsb
add
mov
push
push
in
data16
add
rcll
out
incl
push
and
add
dec
dec
adc
adc
adc
inc
adc
idivb
addb
or
and
nop
andb
or
or
mov
fists
or
or
nop
inc
adc
inc
and
inc
and
addr16
fistps
inc
dec
adc
inc
dec
addb
add
inc
nop
inc
call
mov
adc
or
nop
add
nop
adc
nop
mov
test
fcmovnu
data16
or
test
sahf
xchg
inc
adc
xor
push
addb
loop
push
dec
mov
mov
inc
push
adcb
add
mov
loopne
mov
cld
and
inc
test
movsl
mov
cltd
ss
or
mov
pop
jnp
jbe
adc
adc
add
add
xor
or
nop
adc
add
ss
add
or
or
xor
inc
dec
data16
add
insl
adc
mov
adc
jle
pusha
sub
adc
loopne
adc
push
xor
inc
loopne
dec
andl
mov
fld
push
xchg
add
orb
lods
rorb
xorl
xor
mov
cmp
pusha
adc
mov
repnz
jo
sub
insb
or
test
jo
rclb
data16
mov
dec
pusha
inc
jp
xchg
mov
orb
jbe
and
fimuls
movsb
pop
call
sbb
insb
xor
mov
iretw
cmp
in
aam
xchg
stos
jle
xorb
cmpsl
add
hlt
sbb
push
inc
mov
inc
mov
sub
push
or
mov
jo
xor
push
cmpl
clc
rolb
adc
cwtl
sbb
mov
pushw
addr16
adc
or
mov
popl
xchg
test
pop
mov
sbb
jo
loopne
mov
loop
xor
cmp
and
repnz
test
rcrb
push
test
push
sbbl
sub
inc
fiadds
add
int3
xchg
js
or
push
or
stos
adc
fiaddl
iret
clc
adc
ret
icebp
sbb
mov
bound
or
xchg
mov
push
test
xchg
xor
cmp
rcrb
xor
leave
dec
add
cmp
cld
cmp
xor
xchg
sahf
mov
add
pop
data16
push
sub
sbb
sahf
jecxz
add
cmpsb
dec
add
ljmp
outsb
inc
add
adc
mov
lods
cltd
loopne
jo
adc
loop
mov
mov
and
mul
popa
jo
fdivrs
sbb
push
add
add
mov
cmpsb
cli
fisubl
pop
cwtl
inc
add
inc
push
popw
or
push
pop
ret
shr
jle
mov
nop
rol
inc
and
push
fimuls
cld
adcb
xor
xor
xor
lcall
pop
int3
or
int
add
xor
xor
rol
add
push
data16
inc
ret
inc
mov
cmp
dec
and
mov
push
cmp
xor
dec
outsb
add
push
cmp
sbb
sub
mov
push
mov
add
mov
xor
dec
inc
fdivs
add
cmp
sub
cmp
testb
jl
pusha
dec
or
mov
ljmp
xchg
dec
ret
add
ret
mov
inc
cmc
jno
fsubr
data16
xor
inc
add
popa
adc
push
mov
jo
jp
cld
clc
jl
loopne
add
sub
orb
add
inc
add
repnz
mov
and
lods
inc
popl
pushf
fxch
push
xlat
cmp
hlt
rolb
cmpsb
jle
adc
xchg
dec
cmp
out
inc
xchg
pop
mov
cmp
data16
push
xchg
cld
das
lds
push
sbb
hlt
mov
aam
add
bound
mov
out
pusha
adc
mov
lret
sbb
xor
loopne
es
push
nop
and
pop
cltd
addl
mov
or
mov
clc
test
push
dec
aam
cmp
mov
cld
dec
xor
mov
sub
or
push
mov
add
movl
mov
aaa
incl
not
adc
xor
adc
sar
in
std
sub
mov
mov
inc
sbb
out
cwtl
adc
jbe
out
mov
faddl
add
mov
lcall
push
fdivl
shrl
xchg
clc
jecxz
aad
lock
dec
mov
sbb
adc
mov
lods
std
mov
xchg
xchg
insb
neg
inc
outsb
fsubrl
fucomi
in
sub
inc
push
test
inc
fdivrs
out
ficoms
sbb
mov
sbb
cltd
sub
mov
iret
in
incl
pusha
sub
fisttps
mov
loopne
outsl
cmp
xor
ret
dec
rcrl
mov
inc
dec
stos
sub
push
scas
mov
dec
mov
pushf
mov
xor
dec
add
je
xchg
clc
mov
jle
xchg
loope
or
rcrl
inc
and
fistpl
sbb
rcll
sbb
stc
aam
mov
mov
sub
mov
enter
lret
aam
mov
rcll
insb
mul
or
rol
xchg
pop
pop
shll
add
xor
sbb
add
sbb
sub
mov
sbb
inc
push
add
insb
and
xchg
mov
cwtl
adc
das
clc
xor
or
add
xor
int
sub
jbe
adc
pop
xchg
inc
fmull
xor
fisttpl
and
xchg
mov
decb
rcrl
aaa
adc
mov
sbbb
icebp
shll
jp
or
imul
dec
jbe
loope
xchg
insl
rcr
add
push
insb
lock
add
addb
or
int3
sub
mov
fdivl
lret
and
insb
mov
add
fadds
inc
std
and
sbb
xor
andl
push
mov
add
neg
add
cmp
int3
imul
andl
scas
fmul
sub
in
insl
or
sbbl
push
neg
mov
popf
enter
clc
rorb
dec
in
imul
decl
sahf
mov
fstpt
lahf
fs
add
dec
xor
lret
enter
shr
lret
cmp
lahf
incb
sar
enter
fidivl
mov
ljmp
fistpll
and
dec
and
push
in
nop
inc
add
mov
addb
es
pop
lret
push
insl
cs
or
mov
daa
sub
sbb
inc
lock
enter
aad
enter
aas
adc
lock
dec
jp
add
pop
add
pop
lea
ret
push
lds
xor
lahf
mov
test
lcall
adc
loopne
add
cli
cmpsb
or
lock
stos
fdivp
dec
push
adc
lret
adc
cmp
mov
testb
jmp
and
mov
push
fisttps
outsb
xor
pop
xor
xor
inc
add
test
jle
sbb
or
enter
cmpsb
xor
inc
test
fcmovu
dec
addb
ss
imul
or
cs
fadds
push
jo
pop
adc
inc
repnz
cli
enter
lods
cmpsb
pop
scas
dec
cmp
fwait
and
bound
sbb
jbe
loopne
loopne
add
scas
mov
icebp
fldenv
xor
cvtps2pi
and
mov
aaa
dec
lods
add
add
mov
ret
pushf
mov
hlt
ss
pusha
sbb
mov
ja
adc
addb
pop
inc
mov
jns
test
cmp
pop
xlat
jo
mov
adc
push
repz
cmp
aam
lods
add
lret
add
add
add
xchg
inc
hlt
lock
hlt
push
add
add
or
scas
mov
sbb
adc
or
pop
adc
mov
lret
rcl
pop
inc
xchg
sub
shr
hlt
mov
pop
xor
out
fwait
dec
add
lods
add
cltd
inc
sub
das
and
aad
lock
jne
ror
repnz
gs
push
gs
test
rol
push
cmp
jecxz
sbb
call
add
scas
add
adc
pop
int
ss
adc
sbb
xor
adc
pop
xor
cmpsb
scas
cmp
cwtl
xchg
or
mov
mov
xor
adc
mov
sbb
sti
test
sti
adc
subl
ret
adcb
insb
sub
fimuls
pop
imul
add
fdivrl
sbb
add
call
sbb
xchg
mov
mov
insb
nop
loop
xor
arpl
dec
stos
test
or
out
aas
cmp
ja
mov
aas
xlat
mov
loopne
popa
add
cwtl
sub
jg
pop
pop
imul
adc
hlt
sub
lock
jo
inc
cli
data16
inc
dec
lret
pusha
jle
lods
std
dec
inc
xchg
movsb
add
divl
sti
inc
cmpsl
sbb
pop
stos
xor
rorb
add
jbe
or
fists
push
subl
dec
mov
or
xor
cmpsb
sbb
add
xor
sbb
sub
pop
add
lock
xchg
lea
xor
js
pop
test
cmp
add
add
loopne
sbb
int3
jmp
and
sbb
fmull
bound
in
addr16
sub
scas
jge
pop
sar
or
mov
and
push
cmp
or
addb
inc
sub
pop
adc
pop
stos
insl
cmp
push
push
inc
clc
out
inc
push
pop
pop
add
inc
inc
sbb
pop
jmp
nop
shrl
loope
aam
mov
out
sti
push
pushl
push
sbb
push
xor
call
push
mov
xor
or
dec
stos
inc
mov
jecxz
enter
or
or
push
loope
ret
aam
pop
fsubp
mov
sbb
mov
daa
xchg
xlat
and
dec
f2xm1
push
xchg
pop
clc
neg
add
add
test
addb
shll
in
out
loope
sub
jb
add
xor
or
jmp
ret
div
je
cmp
lock
xor
ljmp
cmp
pop
cwtl
in
adc
loopne
pop
pop
or
insl
das
gs
mov
mov
ss
fidivrl
sub
mov
mov
in
rcrl
jge
cmc
add
faddl
jmp
add
addr16
jno,pn
rorb
aas
inc
add
leave
rorl
fsts
or
in
out
fs
js
cltd
jl
adc
ljmp
neg
ret
cmp
aas
add
and
dec
xchg
and
dec
xchg
shl
or
mov
mov
clc
dec
mov
mov
sub
aad
int
xor
mov
dec
fs
jle
adc
jb
ret
dec
jae
adc
clc
lods
shrl
jno
jb
repnz
fistpl
adc
dec
dec
jge
aam
aam
jns
lock
push
ret
inc
cmp
in
daa
add
and
clc
sbb
jbe
cmpb
lock
iret
cmp
mov
xchg
fadds
movsb
adc
or
pop
pusha
test
sub
jp
adc
adcb
jle
cmpsb
pop
loope
test
add
mov
pop
nop
rol
jb
sbb
ret
push
fstps
adc
loope
fidivl
jge
divl
negb
dec
mov
jg
ret
ljmp
das
fdiv
add
add
scas
sbb
test
jno
or
xor
push
or
add
inc
sub
dec
repnz
mov
add
dec
incl
add
add
ret
jno
adc
and
sbb
test
movsb
ret
and
insb
and
daa
xchg
popf
jge
push
add
dec
push
rolb
cs
jmp
incl
cli
sbb
aam
mov
push
xchg
inc
push
call
out
sub
vpshufd
outsb
pop
bswap
shll
add
mov
cmpsl
mov
std
out
xorl
xor
jle
adc
mov
pop
mov
xchg
ret
addl
insb
xchg
xor
shll
sub
jae
mov
and
xor
add
jmp
popf
loopne
int3
stc
xor
adc
mov
mov
mov
mov
push
push
pop
ret
adc
add
pop
cwtl
ficoms
fidivl
inc
xchg
xor
inc
mov
inc
mov
and
add
stos
in
adc
add
pop
sbb
mov
or
mov
es
sbb
addl
fistps
sub
push
lea
xor
push
loopne
jle
cmp
pusha
je
ja
pop
test
adc
enter
test
cltd
dec
loopne
inc
sti
fnstcw
loopne
and
dec
leave
ret
les
sbb
aas
sbb
push
xor
iret
jb
and
dec
les
inc
mov
pop
sbb
aad
test
pop
stos
inc
arpl
sti
in
jmp
pusha
cld
insb
dec
jne
sbb
or
out
or
sub
pop
js
lahf
pusha
sub
daa
out
ret
fmull
ja
in
xchg
add
ret
sub
adc
xor
insb
mov
xchg
sub
js
sub
sub
cmp
mov
movsl
mov
or
jb
lock
pop
push
data16
jmp
aad
or
inc
ds
sar
int
mov
repnz
add
cmpsl
in
xlat
mov
pop
cmp
jbe
scas
push
or
dec
add
addr16
leave
or
aam
test
add
out
int
dec
loope
fwait
or
or
cmc
xchg
add
mov
jne
in
add
faddl
push
jge
and
cmc
rorb
add
cmc
mov
xor
adc
jae
cltd
out
ret
add
flds
cli
xchg
add
pop
sbb
add
mov
cwtl
dec
adc
ds
mov
sbb
ror
sub
loopne
or
popa
mov
add
sub
pop
pop
xlat
pop
test
adc
cli
iret
mov
mov
cmp
xor
sarb
sbb
inc
sbb
addr16
jb
sbb
mov
jne
outsb
lar
jae
fwait
es
mov
lahf
jo
jno
rolb
lcall
or
fists
sbb
jb
or
pop
xor
es
repnz
mov
pushf
les
lock
dec
pop
inc
push
pop
adcl
xchg
xchg
cmp
rcr
ljmp
js
cmpsb
jmp
sbb
jl
cmp
rcl
enter
mov
es
adc
sbb
dec
shrb
icebp
imul
push
scas
xchg
mov
cmp
mov
clc
loope
ror
in
cltd
cmp
fldl
push
inc
xor
pop
and
push
cli
adc
int
mov
icebp
sbb
and
jno
in
sbb
mov
das
xor
add
ss
movsb
js
sub
cmp
out
or
lock
mov
lret
mov
inc
jp
cmp
je
cmp
push
jge
pop
aam
pop
xor
sbb
loopne
jle
xorb
sub
les
sbb
jnp
mov
dec
clc
inc
jnp
sub
ud2
push
out
lret
push
adc
movsb
jge
ds
fistps
inc
mov
fsubs
mov
cmpsb
clc
mov
mov
in
jo
es
lret
jmp
push
and
dec
sbb
push
ds
repnz
mov
arpl
add
ds
inc
add
lcall
bound
adc
push
add
lock
sbb
hlt
add
xor
in
inc
daa
pop
jg
ret
fimull
add
gs
sub
push
lea
push
lea
push
call
rolb
or
shlb
push
sbb
xchg
jbe
xlat
jl
sub
sbb
paddsw
add
enter
cmp
dec
sub
pusha
outsl
lods
outsb
test
sub
stos
scas
inc
jo
les
cmp
fcoml
cltd
scas
das
jp
xlat
inc
cmp
fisubs
dec
cwtl
cmp
mov
cs
pop
and
cmp
mov
mov
scas
ret
and
outsl
mov
int3
xor
aas
mov
ret
or
inc
hlt
arpl
jno
hlt
cmpsb
dec
loopne
jo
loope
jmp
cmp
mov
sti
addr16
clc
ficoml
ss
iret
ja
pop
mov
out
aam
push
jge
sbb
mov
test
mov
adc
push
adc
and
sbb
lahf
in
jae
push
mov
and
adc
adc
call
xchg
add
shll
push
dec
sbb
bound
jo
mov
jnp
fwait
stos
insb
dec
add
inc
cmp
test
fldt
inc
jnp
add
cmpsl
nop
adc
js
rcrb
cli
test
ds
sub
not
int
lods
add
and
test
loope
mov
and
cli
loopne
cmp
repnz
mov
add
and
dec
lods
mov
xchg
adc
push
aas
adc
add
mov
push
fnstenv
decb
or
mov
or
add
xor
jmp
or
mov
ss
cmp
inc
adc
cmp
and
lret
inc
fildll
outsb
roll
loope
sbb
js
sub
push
rolb
xor
stos
add
hlt
push
jns
mov
out
or
stc
mov
test
inc
jge
jl
test
and
sub
pop
enter
loopne
push
inc
or
add
loope
push
dec
repz
inc
cmp
lock
outsb
adc
cmp
adc
hlt
sbbl
and
sbb
push
vrsqrtps
outsl
data16
fiaddl
xlat
repz
out
push
jle
pushf
push
adc
sbb
mov
adc
push
xchg
aaa
dec
inc
adc
out
cmp
hlt
leave
push
decl
movsl
inc
inc
pop
sbb
call
pushf
iret
lods
fs
nop
inc
or
bound
or
imul
hlt
das
js
adc
adc
nop
pop
outsl
cltd
jecxz
push
stos
or
add
sbb
ret
adc
test
cli
arpl
lahf
add
sbb
inc
add
icebp
stos
add
adc
push
jl
inc
inc
lret
test
out
xchg
cld
push
mov
sbb
mov
cmp
add
loopne
add
and
ds
repnz
push
sub
loopne
pop
shrb
add
call
adcl
xchg
enter
sub
out
lret
mov
mov
je
inc
out
xor
lds
jbe
add
insb
cmpsb
test
sti
pop
pop
sahf
add
or
or
in
cs
fstps
shll
test
mov
adc
sbb
jp
ljmp
or
push
mov
call
incb
cmp
sub
or
pusha
shrl
sub
pop
xor
inc
inc
rol
xchg
in
jns
jns
jnp
pushf
jmp
push
lcall
adc
xchg
js
dec
sbb
cmpsl
push
cwtl
jbe
lret
mov
call
pop
loope
or
xor
popa
xlat
sbb
ss
ret
loope
js
sahf
add
inc
or
add
mov
test
lret
mov
mov
hlt
push
add
shll
test
inc
add
test
andl
call
testb
out
movsl
pop
dec
xor
or
add
add
add
jbe
push
pop
or
adc
sbb
bound
psllq
out
in
rcrb
test
inc
loopne
mov
loopne
or
and
and
sbb
add
cmc
sub
popa
jo
outsl
sbb
xorl
jae
xchg
and
dec
into
add
cmp
addr16
fisubrs
and
aas
jmp
mov
loope
stos
dec
mov
fiadds
lcall
insl
adc
push
pop
mov
xchg
fsts
or
aas
jmp
push
aad
add
ds
sub
shll
adc
sbb
push
out
in
add
pop
enter
test
cmp
inc
inc
scas
jae
ret
jl
mov
sti
mov
mov
pop
mov
adc
jno
dec
mov
enter
decl
mov
add
shl
mov
lods
push
into
xchg
jne
shlb
pusha
xor
mov
dec
fsubp
aas
xchg
lret
pushl
xlat
push
dec
popf
popa
es
clc
add
xor
add
push
enter
andb
jge
les
fisttpl
cmpsb
insb
daa
inc
push
stos
in
lret
cs
push
xchg
dec
ja
enter
les
fsubrl
fisubs
aam
adc
xchg
mov
jb
sub
sbb
adc
jp
insl
xor
aas
xlat
into
or
in
dec
sbb
or
data16
add
ljmp
lret
sub
add
adc
fcompl
sbbb
pop
or
sbb
pop
nop
pop
jle
test
mov
xorl
push
stos
rorb
ret
add
xchg
jns
and
add
hlt
inc
lock
xchg
mov
dec
jnp
in
rorl
xor
add
clc
push
pop
stos
mov
cli
rclb
js
or
or
push
rol
cmp
pusha
repz
rdmsr
fs
jl
adc
imull
adc
or
in
add
outsl
mov
stc
jno
jmp
push
lea
mov
mov
add
inc
inc
fisubrl
jg
dec
das
dec
enter
jno
fidivs
cli
adc
add
mov
decl
pop
lock
unpckhps
add
mov
mov
push
mov
imul
jo
mov
nop
add
movsl
push
jno
outsl
rcl
dec
mov
xchg
lahf
inc
shll
push
jge
adc
data16
push
push
hlt
xchg
push
cmp
dec
int3
jbe
fiaddl
dec
rorb
adc
shl
cs
or
scas
cs
xor
test
push
dec
shlb
push
icebp
icebp
inc
mov
push
loope
imul
mov
jmp
mov
sub
cmp
aas
enter
mov
adc
sub
mov
cwtl
add
mov
into
adc
jle
cmp
push
push
movl
test
call
insl
js
xchg
sbb
enter
mov
psllq
shll
cmp
or
icebp
sbb
cmp
adc
test
popa
dec
ret
mov
xchg
rorb
insl
dec
xchg
push
bound
add
fcoms
xlat
mov
shrb
or
int
xor
lcall
cwtl
adc
dec
adc
push
pushf
pushf
jb
push
push
cld
sbb
daa
insb
push
test
arpl
aas
outsb
sbb
push
sti
adc
fisubl
mov
pop
jmp
pop
test
pop
sub
xchg
int
pusha
and
repz
mov
adc
push
cs
sbb
xchg
mov
jbe
push
and
sbb
shll
add
or
xor
sub
outsb
add
lock
out
pop
mov
xchg
xor
xchg
mov
push
loopne
sub
xchg
lahf
icebp
mov
hlt
test
inc
mov
pop
andb
sahf
orl
movsb
es
xor
add
jecxz
jns
mov
mov
add
dec
dec
cmpsl
mov
nop
sbb
rolb
push
or
and
pop
ret
sbb
jne
stc
repnz
mov
push
cmp
call
pop
js
test
dec
inc
dec
sbb
jo
in
push
aas
arpl
add
sub
and
mov
sbb
xchg
lret
cld
add
push
std
or
mov
notl
and
push
cmp
cmp
mov
std
jns
test
and
fwait
push
daa
orb
inc
xor
add
sub
mov
push
lock
and
xor
mov
aas
jae
xor
cmp
cmpl
mov
cwtl
imul
xorb
jge
roll
inc
punpckhdq
sub
icebp
cwtl
cmp
inc
hlt
push
pusha
data16
orb
pop
mov
testl
int3
sub
loopne,pt
test
fistps
add
sbb
shr
add
fmuls
loop
cld
xor
pop
jmp
or
lcall
inc
mov
mov
out
fsubs
dec
push
lret
mov
mov
popf
xchg
mov
dec
ds
xchg
dec
hlt
xor
or
scas
shl
aam
push
mov
push
sbb
andl
or
pop
pop
or
adc
or
div
mov
xor
inc
inc
test
int3
shrb
pop
insb
add
mov
mov
into
ret
xchg
cld
leave
cld
and
xlat
hlt
mov
lods
outsb
add
xor
cmp
shlb
aaa
arpl
mov
mov
cmp
pop
mov
stc
mov
xlat
mov
call
cmp
dec
dec
pop
push
sbb
fwait
push
adc
fwait
xchg
arpl
add
test
subb
inc
or
add
adcl
xchg
setae
stos
mov
inc
mov
jge
clc
inc
push
sahf
mov
lods
or
clc
dec
add
fdivrs
orl
xchg
ficompl
js
popf
push
xor
mov
sub
or
xor
add
test
inc
mov
or
cmp
jae
adc
shufps
dec
adc
push
test
adc
sbb
push
or
cmp
jne
addb
jnp
clc
or
inc
std
jmp
dec
jle
jp
jmp
xchg
pop
in
fsts
push
movb
xor
sbbb
aam
push
cwtl
test
pop
sarl
and
pop
adc
in
push
addl
fmull
jge
inc
fs
and
ret
mov
sub
jge
push
fsubl
pop
adc
mov
pop
jecxz
jecxz
pop
dec
roll
mov
pop
pop
fs
into
in
call
scas
mov
add
out
ss
test
lea
ficoms
xchg
push
inc
insb
adc
jnp
mov
inc
shlb
mov
subl
nop
or
incl
lea
push
call
inc
dec
mov
push
mov
fwait
jl
mov
sarl
inc
mov
cmpps
mov
lds
sbb
xor
pop
lret
pop
push
mov
sbb
lret
push
out
and
add
mov
dec
dec
hlt
mov
and
xchg
test
push
add
push
add
inc
test
loope
cmpsl
in
push
dec
jle
cltd
shlb
iret
dec
cld
repz
mov
out
les
mov
mov
xchg
cld
inc
stos
movsb
cmp
mov
test
fwait
inc
dec
xchg
add
and
daa
sti
xor
xor
mov
or
cmp
dec
pop
sbb
jl
sbb
out
mov
lods
adc
out
add
ret
lods
sub
rcrb
adc
outsb
orb
outsb
push
in
cmpsl
cmpl
jae,pn
stc
daa
lcall
ja
stos
out
cmp
jns
sbb
jp
mov
xchg
loopne
lret
gs
adc
cmpl
mov
cwtl
pop
adc
addr16
fcomps
imul
jmp
mov
jp
nop
btc
rcrl
inc
fidivs
out
lds
orb
roll
inc
or
pop
pop
je
mov
lret
sbb
lods
xlat
aaa
or
dec
dec
xor
lods
xchg
cmp
pop
insl
decl
shlb
mov
push
add
sub
jmp
test
rcrb
lock
and
cli
pop
inc
loopne
cmp
arpl
sarb
cwtl
fs
add
scas
sbb
inc
or
outsb
loope
cld
sub
icebp
mov
sub
daa
mov
ja
sbb
or
push
mov
mov
lahf
enter
inc
mov
loopne
mov
xlat
push
inc
iret
shll
insl
push
mov
mov
fmuls
xchg
lods
or
movsl
mov
pop
call
test
sub
dec
push
xor
push
and
pushf
lock
loopne
adc
rorl
sbb
xchg
pop
jb
jp
inc
inc
cld
dec
mov
mov
push
out
xor
in
sbb
inc
or
xor
adc
or
subb
xchg
cli
pop
nop
push
loope
pop
loope
xchg
xor
scas
dec
insb
out
mov
iret
fisubrs
add
pop
adc
loope
loope
or
jae
adc
and
mov
mov
add
jns
or
sbb
jo
scas
inc
xchg
out
inc
jl
sub
js
push
mov
push
mov
in
shll
mov
mov
mov
adc
pusha
loopne
adc
dec
insl
test
repz
inc
and
adc
jecxz
cmc
and
add
pushf
es
adc
das
pop
or
pop
xchg
pop
cwtl
pop
fcomip
cmp
stc
xor
add
filds
lret
push
test
sub
jle
jmp
aam
push
push
call
inc
call
add
xor
inc
add
mov
sub
and
jmp
into
pop
addb
add
cld
inc
xchg
adc
jno
call
or
adcb
sub
sub
jecxz
mov
les
mov
pushf
or
cmp
pop
out
into
out
add
and
mov
dec
sbb
idivl
adc
add
cmp
xchg
add
jno
xchg
pop
pop
out
sbb
cmpl
push
adcb
xchg
cs
inc
jl
jmp
ds
mov
out
xor
jl
xchg
rol
andb
sub
les
icebp
enter
mov
das
inc
xor
js
or
divl
fs
inc
hlt
xchg
cwtl
sti
adc
nop
call
je
lods
dec
or
cmp
scas
and
jne
sub
idivl
aam
and
mov
inc
xor
sub
rcll
adc
aas
iret
daa
push
lock
aad
or
add
addb
xor
adc
push
and
adc
in
adc
int3
xchg
sbb
fnstcw
cli
pop
es
and
adc
inc
xor
mov
sub
js
sbb
adc
add
mov
mov
push
push
insb
int3
jae
jg
outsl
stos
jo
xchg
pop
pushf
adc
aas
mov
add
pop
aad
jne
sbb
popf
es
push
add
cwtl
test
sub
scas
mov
mov
jecxz
scas
add
xchg
pop
or
mov
sub
inc
mov
dec
pop
xchg
add
mov
sub
lahf
mov
insb
shrb
loopne
js
inc
sbb
movsl
mov
push
sbb
bound
pop
in
adc
mov
ret
xor
cmpsb
mov
pop
xchg
mov
jecxz
and
push
or
sahf
js
lods
jns
dec
jb
mov
jno
mov
jge
jle
out
enter
xor
mov
aam
hlt
pop
inc
aaa
incb
das
test
outsl
enter
lods
test
fwait
inc
cmpsb
movb
fcmove
test
jo
jecxz
inc
and
inc
psrad
push
and
or
mov
jns
add
subl
das
dec
or
scas
or
sub
adc
mov
mov
and
cmp
or
xchg
xchg
mov
and
sbb
xor
lret
inc
lahf
out
loop
add
movb
sbb
dec
sbb
inc
testb
adc
add
sub
adc
dec
not
fiaddl
push
mov
jbe
pop
iret
jb
dec
cmpsb
sbb
ljmp
pop
out
or
mov
jbe
dec
push
fildl
ret
sbb
lret
pop
mov
pusha
dec
mov
jmp
push
std
sub
inc
adc
push
push
jne
je
push
add
arpl
int3
out
add
or
add
cltd
mov
mov
xchg
inc
call
xlat
test
inc
std
dec
ja
data16
fisubl
sub
sub
add
sbb
push
and
push
js
add
inc
or
inc
jecxz
sub
std
pop
sar
xchg
in
dec
out
and
shrb
sbb
pop
jno
es
test
sahf
ret
movsb
mov
daa
lock
cli
add
pop
int3
mov
mov
jge
add
push
shrl
frstor
inc
or
pmaxub
or
and
add
sub
push
and
rcrb
jmp
cld
and
aaa
inc
cli
aas
xchg
fnstsw
mov
repz
sbb
pop
jnp
lock
bound
jl
push
cmp
mov
xchg
push
call
sub
push
rcrl
lods
hlt
je
push
out
leave
dec
out
movsb
dec
icebp
ret
mov
popf
jne
fsubp
loopne
addr16
pop
adc
test
ss
nop
pushf
sbb
ret
mov
mov
shrb
inc
sub
add
inc
mov
scas
sub
loopne
cmp
and
inc
pop
sub
jge
xor
push
and
in
jg
pop
mov
adc
mov
sub
or
xor
or
xor
xor
ret
jle
inc
inc
jne
adc
adc
mov
mov
in
cmpsb
les
popa
mov
sahf
mov
add
cmp
mov
sbb
clc
leave
lock
xchg
sbb
cld
mov
push
inc
mov
orb
das
dec
or
daa
cmp
loope
fidivl
xchg
pop
cltd
adc
aaa
lock
xor
sub
lock
lret
fdivrl
sub
sub
inc
xchg
inc
adc
add
mov
xor
cmp
mov
xchg
inc
cli
or
es
ret
in
rol
je
inc
test
test
aad
lahf
cmpsb
test
and
mov
jo
mov
push
xchg
clc
subb
notl
mov
rcrb
lock
repnz
inc
inc
stos
or
and
xchg
sbb
popf
outsb
out
stos
mov
jne
scas
jmp
mov
push
aad
addb
bound
mov
fbstp
xchg
imul
stos
fistl
cmp
sub
adc
jle
push
dec
add
mov
into
add
xor
sub
xor
jno
sub
sbb
dec
lret
movsb
jno
xor
pop
shrl
mov
scas
dec
sbb
enter
cld
push
xchg
cmp
xchg
ficoml
jge
scas
push
and
ss
pop
or
sbb
pusha
or
je
out
ret
sub
sbb
xor
sahf
test
sub
inc
addb
and
fidivrs
outsl
lock
test
out
shll
and
insb
sbb
mov
add
roll
push
test
mov
mov
shll
sub
mov
lcall
int3
pusha
add
inc
in
xchg
ret
jne
xor
pushl
add
add
xor
call
pop
add
jbe
push
xchg
jns
lret
cmp
out
call
sbb
ljmp
push
das
roll
roll
sahf
test
dec
stos
cmpsb
push
lahf
sti
xchg
mov
jnp
adc
ret
mov
xchg
in
sub
mov
fsub
jns
adc
add
jne
sbb
fs
icebp
cmc
mov
dec
rclb
add
xor
push
add
mov
sub
sbb
les
or
repz
push
sar
xor
and
pop
test
xor
data16
pop
mov
add
mov
test
js
hlt
fcompl
inc
push
push
or
adc
or
dec
mov
jl
adc
loopne
addb
scas
loopnew
addb
or
sahf
enter
inc
push
fnclex
add
mov
cmp
add
and
cmpsb
or
dec
inc
add
jno
adc
popa
in
jnp
add
popf
fnsave
hlt
mov
adc
add
outsb
add
or
enter
addl
sub
test
jmp
loop
adc
repnz
jbe
dec
rclb
jg
int
shlb
xor
push
jge
sbb
mov
mov
adc
mov
add
adc
add
shlb
aaa
jmp
push
cmp
pop
mov
pusha
jle
rol
mov
movsl
sub
or
loop
push
mov
adc
daa
shrb
nop
add
mov
and
lock
push
mov
inc
rcl
mov
outsb
out
add
add
pop
xchg
test
iret
dec
pushf
aaa
cltd
pop
push
add
inc
js
xchg
push
jecxz
test
rolb
xchg
lock
js
mov
pop
in
push
add
scas
add
add
ljmp
rcr
jg
insb
enter
pop
enter
mov
aam
pop
mov
xor
testl
shr
add
add
das
es
jecxz
movsb
mov
nop
or
and
sbb
pop
cmp
cmp
test
xchg
mov
jl
pop
in
test
scas
ret
add
jmp
push
int3
sub
jb
sub
shl
ret
xchg
ljmp
cmpsb
xor
lods
mov
adc
clc
push
ret
add
fstpl
push
add
mov
stos
dec
bound
sub
testl
pop
icebp
push
sarb
orb
and
icebp
push
and
push
pop
shll
cmp
xor
add
push
in
sbb
jb
and
pusha
mov
loope
call
pop
data16
or
sub
sbb
in
sbb
sub
ds
mov
hlt
add
or
js
ror
inc
push
in
adc
mov
cmp
push
pushf
fisubs
or
jo
imul
into
aam
ss
test
mov
imul
add
dec
lret
call
or
in
push
loopne
sarb
push
add
jg
pop
jl
inc
loopne
test
add
adc
cltd
sbb
sbb
add
xor
popf
jmp
cmp
sub
cmp
nop
add
sub
and
jp
stos
bound
pop
es
out
sbb
lods
adc
dec
add
xchg
mov
loopne
adc
les
inc
sub
dec
fdivr
dec
loope
xor
xchg
cmp
addr16
dec
push
dec
xor
pop
imul
aas
hlt
orb
push
pop
cmc
cmp
and
xchg
sub
adc
adc
sbb
add
dec
mov
addb
adc
shll
fidivl
jae
lods
push
inc
or
test
jns
outsl
nop
and
or
ret
mov
xor
popl
lds
jo
jmp
push
mov
test
sbb
add
pop
out
dec
sub
mov
jbe
addl
push
xchg
inc
jmp
add
rcll
nop
add
jp,pt
push
lods
xchg
mov
fisttpl
daa
hlt
es
lret
pop
test
aaa
repnz
push
loop
mov
imul
xorb
leave
dec
mov
shrb
sbb
les
xor
shl
shrl
cs
ds
pusha
andl
mov
mov
ret
sbb
iret
and
insl
mov
mov
test
ficomps
shl
jg
inc
lods
pop
pop
into
add
add
pop
dec
sub
inc
dec
scas
daa
push
add
loopne
stos
cld
dec
sbb
or
dec
cmp
cs
imul
inc
xchg
add
daa
xchg
stos
jae
jle
jo
orl
jmp
inc
loope
scas
xchg
cld
dec
xchg
add
lock
jno
daa
bound
jmp
scas
data16
add
insl
xchg
lock
or
or
dec
xabort
sub
jb
nop
add
pop
repz
out
out
jb
stos
sub
push
les
rclb
es
lea
cmp
repnz
inc
xchg
mov
mov
aaa
dec
divl
loop
or
fdivrs
int3
es
pop
pop
mov
push
cmp
pop
hlt
push
xchg
pop
fistpl
push
and
mov
jne
mov
add
adc
adc
inc
out
hlt
test
rcrl
movsl
or
xor
cli
stos
add
pop
sub
sub
packsswb
aas
and
xor
out
push
mov
imul
xor
sbb
es
enter
sub
cmp
mov
je
inc
outsb
pop
jle
adcb
add
add
xor
in
cmp
add
adc
fmul
sti
in
outsb
jg
loop
cmpl
popf
pop
pop
xchg
cld
sbb
notl
lock
icebp
mov
scas
les
loop
adcb
xchg
push
js
cwtl
or
cmc
adcb
add
lea
dec
dec
adcb
pop
xchg
mov
jmp
pop
push
js
test
es
popa
loopne
fwait
cmp
test
sbb
mov
nop
sbb
pop
xor
loope
clc
mov
mov
mov
ret
jo
aaa
or
lods
pop
sbb
mov
sub
ret
inc
mov
out
cltd
out
scas
aam
test
fadds
or
ficompl
clc
jp
test
sbb
addb
test
pop
add
push
mov
pop
add
mov
neg
ret
clc
sbb
lods
test
ja
enter
and
je
mov
rclb
push
hlt
jmp
iret
push
mov
pop
bound
pop
test
push
and
idivl
adc
je
dec
xor
add
push
stos
add
mov
pop
xor
loop
cld
jmp
cwtl
add
mov
lret
mov
sub
mov
sub
dec
lods
sub
in
cmp
or
ret
scas
inc
sbb
xchg
rcrl
xchg
inc
stc
inc
adc
mov
rorb
pop
or
or
jno
flds
or
jb
scas
bound
insl
pop
add
and
mov
push
sub
pushf
mov
pavgw
shlb
inc
test
je
xorl
jae
add
shll
leave
hlt
mov
jge
repnz
lahf
fisubrl
sbb
inc
imul
push
lea
dec
jg
add
ficomps
or
test
push
loop
adc
in
pop
call
mov
jb
sbb
xor
mov
or
or
or
pop
in
inc
add
adc
mov
mov
test
or
pop
pop
enter
mov
inc
rcrb
adc
xor
push
push
pop
push
pop
jne
inc
test
add
in
xor
test
pop
pushf
movsl
xchg
adc
inc
or
xchg
mov
add
mov
push
add
inc
hlt
dec
popa
jns
mov
loope
mov
pop
and
inc
lea
pop
sbb
cmc
or
cli
out
dec
inc
iret
fimuls
adc
fwait
xchg
xchg
gs
addr16
and
jp
push
ljmp
inc
sub
js
pusha
test
or
test
js
xor
insl
dec
sub
mov
dec
mov
cmp
add
jo
mov
aaa
sbb
les
mov
loope
nop
mov
ja
imul
sub
movsl
lock
jae
push
ret
cs
ret
mov
test
pop
xchg
mov
mov
outsb
lea
fs
test
data16
pop
or
push
cmp
roll
add
rol
lock
mov
imul
or
sbb
xor
add
mov
xchg
and
inc
fcoms
push
mov
inc
xchg
mov
adc
mov
or
push
xor
inc
imul
js
jle
xor
lds
push
inc
mov
and
scas
pop
xchg
dec
std
mov
sbb
sbb
lahf
shlb
cmc
mov
shll
or
into
cli
adc
adc
and
stc
jmp
decl
cmp
andb
sbb
cmp
pushf
mov
mov
dec
inc
jmp
push
sub
out
sbb
sbb
pop
addb
jbe
dec
inc
mov
mov
out
xchg
xlat
call
jae
test
fbld
outsb
add
fisttpll
xor
xchg
lock
dec
icebp
mov
inc
mov
sbb
in
push
mov
add
fiadds
fsubr
jae
mov
and
fimull
pop
xchg
sarb
push
mov
add
sub
adc
push
aaa
mov
push
int3
mov
dec
and
or
shlb
in
mov
hlt
stc
and
movsb
lock
add
cmp
sbb
bndstx
nop
sbb
rcr
dec
add
jmp
pop
gs
call
call
and
lret
mov
mov
push
inc
test
xchg
addb
sub
inc
daa
loope
add
jo
sbb
and
mov
inc
adcl
icebp
es
jecxz
mov
sub
lods
and
pop
jge
cwtl
and
call
jno
mov
cltd
jg
fnstenv
dec
faddl
outsb
add
cli
mov
fcmovu
dec
pop
xchg
imul
enter
dec
push
sub
imul
sub
popa
jmp
push
sbb
pop
xor
adc
dec
cmp
adc
cmpsl
cmp
movsl
ja
xlat
dec
inc
leave
ret
les
xor
jl
add
and
lods
adc
cld
xchg
sar
add
xor
push
out
add
subl
test
faddp
lahf
call
xchg
dec
mov
arpl
enter
mov
add
inc
pop
push
pop
pop
movsb
jecxz
rorb
jbe
push
mov
adc
roll
addb
lcall
xchg
xor
sub
fs
scas
cmp
ret
mov
push
dec
fwait
icebp
rcl
ret
pusha
xchg
lock
or
adc
rorb
inc
xor
xchg
xor
sarb
fwait
mov
or
add
xorb
xchg
wbinvd
push
arpl
ljmp
mov
les
test
movsb
push
or
notb
mov
sub
xchg
ss
xchg
jo
jge
ss
rclb
aam
aad
inc
movsb
test
jp
and
push
jns
test
movsl
sub
in
insb
jle
and
into
sbb
add
adc
lea
in
or
xchg
ja
mov
pop
fwait
mov
inc
jmp
pop
shlb
sbb
vpsubsb
adc
and
and
and
add
pop
adc
mov
fucomi
mov
lret
dec
and
aas
xor
dec
loopne
loopne
push
push
push
mov
call
loope
add
addb
rolb
in
fcoml
mov
loopne
icebp
sbb
lds
sub
push
sub
add
jae
call
cmp
or
punpckhwd
cwtl
out
push
out
ret
pop
adc
add
push
andnps
mov
sub
jb
add
and
sbb
jbe
call
add
jae
and
xor
pop
out
sub
add
idivl
negl
push
aaa
and
xchg
cltd
mov
loopne
ficoml
xchg
scas
divb
push
aaa
icebp
pop
sbb
mov
mov
jp
jmp
inc
out
out
sbb
inc
cmp
mov
mov
mov
xchg
in
std
movsl
mov
lock
les
sti
mov
dec
jmp
cmp
push
dec
cmp
and
rorb
loop
lods
fdivl
lods
cmc
or
lret
fistpll
aad
cli
cmp
aam
mov
in
or
cmpsb
pop
cmp
shr
sbb
divb
loopne
js
insb
popf
xlat
popf
inc
les
sub
mov
sub
fcmovu
sub
sbb
xor
testb
push
add
cmp
push
jmp
cli
lock
inc
fisubl
cltd
xor
sub
cli
or
push
stc
enter
testl
cmpsl
add
xor
push
mov
stc
shr
mov
notl
jp
xor
add
jb
pop
shll
or
jge
add
loop
rorb
mov
ja
pop
call
int3
icebp
and
dec
or
fcomp
jo
inc
pop
inc
loope
in
mov
inc
jmp
push
out
and
add
mov
outsl
mov
or
mov
sub
inc
push
add
dec
btc
cs
ja
ljmp
test
dec
dec
sbb
movsl
add
xchg
loope
pusha
add
push
or
and
int3
inc
cmc
sub
ja
or
push
loop
mov
adc
push
pop
jne
add
mov
ret
mov
and
cmp
jae
jns
sbb
ja
xlat
leave
loop
fiadds
rcll
push
imul
pop
add
sbb
push
lcall
sbb
jmp
aaa
jno
loopne
ja
repnz
imul
loopne
mov
lret
pushf
cwtl
xchg
sbb
in
shr
jp
mov
das
ljmp
dec
jo
sbb
loopne
out
jmp
lods
cwtl
push
jo
xchg
dec
test
arpl
pusha
and
pusha
sbb
mov
scas
orb
add
push
mov
push
xchg
or
jge
push
sbb
jns
pop
out
fiadds
sbb
in
pop
data16
cmc
lahf
int3
push
jns
xchg
mov
andl
ficomps
jo
xchg
ret
scas
in
dec
pusha
loope
add
mov
cli
in
add
fisttps
pop
push
lea
push
dec
mov
clc
push
call
jb
loop
scas
outsb
jb
mov
mov
test
push
mov
stos
roll
fisubs
test
add
aad
es
sbb
jecxz
std
jg
pop
es
add
dec
pop
loope
push
add
outsb
cmpsb
decl
arpl
add
jg
icebp
sbb
fisttpl
fcmovne
shl
jge
out
mov
out
or
xchg
add
addb
jne
pop
sub
or
mov
icebp
push
xor
xchg
roll
in
pop
cmp
sbb
inc
repz
leave
xorb
sub
add
icebp
mov
jnp
jp
mov
loope
mov
xchg
imul
test
sbb
outsl
mov
add
rorb
daa
add
xor
jbe
movsb
or
adc
movsb
shl
sub
stc
mov
jecxz
mov
inc
sbb
ljmp
mov
gs
dec
and
bnd
fistl
xor
popf
pop
les
daa
dec
cltd
pop
stos
push
mov
aad
rolb
ret
push
jmp
push
mov
sbb
sarb
loope
cld
cli
mov
ffree
ret
aaa
mov
mov
popf
roll
loopne
sbbb
cmpsl
and
sub
cld
xchg
and
loop
dec
cltd
add
imul
jo
sub
rcrb
sub
fdivrs
insl
adc
clc
fdivrs
sbb
dec
lret
daa
mov
ja
scas
ds
ret
jbe
pop
jb
fstl
jne
dec
and
rorl
aas
in
imul
sti
mov
in
sub
scas
xchg
inc
ret
lea
loope
stos
lea
xor
mov
rolb
and
cmc
xor
iret
xor
add
add
and
int
inc
dec
inc
out
pop
and
jmp
push
insb
in
inc
jmp
popa
int
shr
and
adc
mov
mov
sub
ret
adcb
clc
pop
xlat
aas
and
add
adc
jnp
int3
mov
int3
xor
mov
mov
pop
inc
dec
movsl
shll
adc
inc
cmp
inc
xlat
pop
les
gs
fdivs
inc
cmp
lds
gs
add
add
and
cld
jnp
pop
out
dec
xchg
sbb
rclb
and
shl
rolb
jo
std
mov
pop
bound
add
popa
cmp
int3
stos
int3
xchg
fiadds
rclb
inc
cld
mov
adc
inc
add
repnz
dec
loop
mov
imul
mov
add
shll
wbinvd
loopne
bound
or
add
inc
aad
inc
out
outsb
push
sub
push
in
add
loopne
dec
fists
js
repz
out
sbb
jmp
mov
mov
dec
insb
int3
xchg
mov
cli
pop
rolb
pop
inc
int3
cmp
repnz
rolb
add
push
negb
in
jmp
jg
mov
loope
jns
sub
and
inc
das
lds
lea
in
ds
xchg
out
sub
and
mov
or
sbb
or
and
push
lock
pusha
imul
dec
or
rorl
mov
jmp
push
sbb
mov
incl
push
add
add
es
pop
pop
les
lock
aam
inc
xchg
ret
pop
xor
xor
dec
lock
inc
cmpsb
aaa
adc
inc
cmp
cmp
fidivl
fstl
sbb
push
cld
push
mov
inc
add
or
inc
inc
mov
sbb
fwait
mov
das
in
dec
sbb
dec
xorl
jp
addb
hlt
cmp
icebp
and
push
shlb
loope
pop
ret
xorb
fistl
popa
cmpsb
adc
or
xchg
test
mov
mov
dec
or
mov
enter
add
ret
push
push
movsl
call
push
in
push
call
add
push
aam
jb
rclb
int3
mov
jae
pop
mov
xchg
dec
faddl
dec
aad
inc
shll
add
dec
or
xlat
js
sub
mov
sbb
orb
jmp
ss
inc
in
sub
add
mov
orl
ret
or
cwtl
jg
push
sub
dec
lahf
daa
xchg
adc
imul
ffreep
adc
pusha
push
mov
xchg
dec
jl
add
add
jnp
mov
loop
in
pop
scas
test
loope
sbb
fcoml
popa
xchg
add
push
or
xchg
mov
or
dec
jecxz
or
es
mov
shrb
je
adc
pop
addr16
in
and
mov
std
aam
push
shll
pop
bswap
cld
jns
les
icebp
add
inc
or
adc
leave
xor
sbb
add
mov
mov
orb
jnp
leave
add
sub
or
xor
sbb
mov
sbb
sbb
ss
dec
ret
xor
sub
cs
sbb
xchg
shlb
mov
push
add
jmp
roll
ja
mov
test
xchg
sub
or
xchg
pop
adc
cmp
popa
pop
gs
inc
leave
fiadds
pusha
push
adc
jmp
adc
xchg
xor
movsl
ja
je
outsl
out
dec
push
inc
mov
sub
mov
lcall
ret
ret
sbb
xchg
sbb
lods
xor
add
lock
push
and
std
cli
inc
push
bound
sub
sbb
xor
out
jmp
jnp
inc
jbe
dec
icebp
mov
sub
loopne
sarb
js
inc
test
jecxz
mov
push
js
clc
std
les
jmp
cli
mov
scas
pop
js
call
xlat
add
lds
out
rolb
add
add
or
cltd
xchg
push
push
movsb
sbb
lea
add
movb
fadd
loopne
add
orl
mov
inc
sub
sbb
inc
sub
jg
loope
inc
movsl
dec
pushf
cmp
pop
push
pop
sbb
aam
movsb
fdivr
sub
sbb
dec
int
inc
pusha
icebp
sbb
pop
nop
mov
push
rorb
mov
sbb
xchg
jnp
std
aam
std
xchg
ret
cld
dec
bound
fsts
cmc
add
leave
lea
insb
or
or
test
add
push
pop
jno
mov
out
aaa
and
rcrl
pop
flds
enter
and
cmp
cmp
or
nop
dec
sub
lea
frstor
dec
daa
and
rcl
dec
push
sub
addb
add
mov
test
clc
xor
xchg
mov
pslld
mov
xchg
fisttpl
leave
ret
and
roll
push
repnz
cmpsb
shll
aad
pop
push
and
xor
loopne
xchg
loopne
mul
shl
fimull
mov
daa
dec
add
fldenv
clc
add
das
cmp
add
and
shr
sub
stos
push
aam
sbb
adc
out
jg
loop
pop
or
push
push
add
add
xchg
add
mov
lock
add
xchg
shlb
jmp
fdiv
aas
test
adc
inc
fs
fadds
out
dec
ja
sub
stos
test
xchg
xor
cmpsl
rcr
movsb
fistps
inc
cmpsl
inc
xchg
inc
add
push
lock
cltd
push
subl
xchg
pusha
sub
push
jb
sub
xchg
xchg
inc
arpl
mov
shll
clc
call
pop
clc
cmp
push
mov
and
lret
cmp
mov
lock
or
adc
or
and
arpl
pushf
pop
test
dec
fldenv
in
enter
dec
jbe
in
or
roll
sldt
jne
std
xchg
rorb
std
ror
inc
mov
daa
in
mov
cli
add
xchg
nop
push
sbb
mov
inc
imul
inc
add
imul
mov
mov
cmp
pusha
and
aad
int
dec
fstps
cmpsb
lods
call
or
adc
sbb
ret
das
fldt
jl
ja
into
jbe
mov
movsl
add
lahf
les
test
lahf
fdivrl
arpl
push
lcall
psubusb
subps
aaa
xor
jge
or
inc
shrb
and
sub
inc
xchg
test
fcomps
mov
cmpsb
jae
hlt
mov
decb
insb
std
ds
xchg
insb
adc
or
add
clc
xlat
div
rcrl
gs
push
clc
lcall
nop
add
and
imul
sbb
jo
fidivrl
nop
jle
push
scas
cli
loope
flds
scas
mov
jne
cli
loopne
or
fists
inc
xchg
pusha
push
push
mov
sbb
xchg
mov
push
cmp
lock
loop
or
cmp
fs
cmp
mov
sahf
xor
insl
fwait
bound
dec
mov
add
mov
mov
pop
push
clc
shlb
shl
adc
cld
push
push
sbb
icebp
loopne
and
mov
jns
jmp
push
sbb
call
sub
or
push
and
insl
inc
in
loopne
loop
push
add
push
add
ror
imul
sub
mov
insl
add
dec
rclb
stc
add
data16
mov
fidivrs
or
or
and
add
cmp
in
fstp
cmpsb
xchg
loope
roll
mov
popa
shl
mov
sbb
sub
push
loope
pusha
pop
pop
add
xlat
divl
cmp
pop
xor
sahf
dec
stos
call
pop
mov
inc
sidtl
daa
cmc
add
or
test
and
cmpsb
sbb
jnp
stos
mov
sub
lret
dec
js
ljmp
pop
std
add
sbb
or
push
popl
dec
and
inc
rolb
test
inc
sbbb
cmp
push
fsubrs
cmp
pop
or
in
in
pop
std
pusha
mov
aad
roll
fldt
movsl
push
inc
or
test
inc
sub
icebp
or
xor
mov
cmp
cmpb
test
jo
sbb
fsubs
pop
add
cmp
adc
out
aas
fisubl
dec
lods
xchg
outsb
arpl
pop
sbb
repz
inc
jge
lds
push
leave
inc
fmull
ret
push
testb
adc
sbb
pop
cmpsw
lahf
or
or
mov
add
repnz
dec
xchg
sbb
or
loope
pusha
xorl
push
sbb
orl
xchg
loope
fwait
xor
rcr
lret
push
pop
add
and
imul
enter
add
fsubl
cwtl
xchg
jmp
xchg
movsl
fsubl
test
mov
dec
pop
push
add
mov
subb
ja
sarl
std
aam
mov
pop
xor
dec
sbb
jge
test
ljmp
jmp
adc
mov
jbe
mov
add
xchg
mov
mov
int3
mov
loope
ds
add
sub
dec
loopne
addb
add
pop
cmpl
mov
push
mov
and
in
test
test
int3
add
cmp
dec
pop
scas
mov
addr16
ror
mov
dec
std
xchg
int
jno
lret
or
inc
test
sahf
or
aam
cmp
or
add
unpcklps
sub
pop
mov
add
mov
mov
dec
add
push
pop
cmp
rol
pop
pop
pusha
decb
jo
dec
mov
add
xor
jecxz
roll
iret
or
jecxz
sub
test
stc
shrl
mov
cmpl
pop
sarb
sbb
adc
or
pop
loop
sbb
xor
mov
push
movsl
cmp
loopne
je
pop
dec
cmp
nop
sbb
sbb
mov
mov
add
dec
adc
clc
fsub
jae
out
icebp
loopne
push
cmp
mov
fimuls
push
repnz
mov
addb
add
dec
shll
xor
test
sub
jne
fcomi
std
mov
fdivl
pop
jmp
ficomps
jmp
in
movsb
ds
in
inc
add
xchg
and
fdivrs
adc
movsl
lret
pop
sub
nop
mov
fs
xchg
xchg
add
adcb
stos
pop
jle
dec
nop
push
rol
and
ficompl
rclb
sbb
adc
mov
dec
rorl
push
cwtl
push
or
cld
add
mul
sbb
insb
cmp
les
adc
mov
andb
inc
orl
xchg
es
sbb
dec
popa
adc
push
mov
clc
mov
in
xor
addr16
ljmp
adc
inc
sub
bound
xchg
jb
ret
aaa
mov
push
dec
sub
shlb
pop
jmp
lcall
inc
jmp
jg
push
js
pop
jne
pop
in
jbe
pop
inc
pop
xchg
fdivrl
mov
xor
les
add
or
cmpsl
adc
xchg
or
xor
jo
jbe
add
sbbb
lds
lret
jmp
xor
les
mov
sub
loope
sbb
cli
adc
add
es
orb
push
dec
mov
adc
and
sbb
stos
repz
pop
js
cmp
mov
push
fadd
inc
ljmp
ret
adc
or
dec
dec
and
jo
dec
dec
test
xor
loope
shll
pop
testl
mov
sub
push
and
mov
sahf
pushf
adc
in
loope
cmc
pop
xor
pop
or
add
sub
mov
in
mov
ret
imul
lea
add
and
sub
and
or
int
push
sahf
jo
aaa
mov
xor
addr16
fistps
subl
in
aam
fcompl
test
cltd
mov
and
pop
xor
loop
sbb
notl
ret
sub
push
call
sbb
lock
loopne
nop
mov
mov
add
ret
es
flds
lcall
lcall
ret
cmp
xchg
sub
xchg
or
dec
in
inc
cmp
jge
mov
xchg
gs
xor
arpl
ret
and
mov
push
adc
mov
sub
lret
mov
inc
pop
mov
push
xor
rcrb
das
pop
inc
mov
xchg
insb
and
mov
push
sbb
and
popa
add
aam
leave
rolb
flds
or
pop
call
sbb
cmpb
cmp
add
fisttpl
xchg
push
pop
adc
add
push
icebp
dec
dec
icebp
cld
dec
dec
test
xor
or
sbb
pusha
inc
outsl
or
mov
jbe
mov
cs
pop
push
jmp
jnp
push
aam
push
shlb
cld
xlat
inc
lods
arpl
lcall
push
dec
sbb
xchg
fcoml
add
mov
pop
roll
xlat
push
xchg
jno
cmc
mov
pop
fcompp
pop
fcompl
jmp
fcomp
or
jmp
inc
enter
or
xor
push
and
lods
push
and
stos
mov
push
dec
mov
inc
xor
jg
mov
jno
in
sti
sbb
push
bound
mov
shrl
rcrb
lahf
int3
into
pop
inc
adcl
aam
insb
push
mul
pushf
mov
add
cmp
xchg
push
fcmovb
iret
cli
das
mov
mov
jg
js
stos
jmp
pop
add
cmp
xor
imull
ficomps
sub
decb
mov
movb
xlat
add
testb
dec
sbb
scas
mov
fidivl
pusha
xchg
test
ret
mov
adc
iret
sub
ss
add
adc
mov
aam
inc
pop
push
dec
lea
add
jbe
lret
dec
inc
std
push
dec
mov
push
mov
popa
pushf
push
add
inc
mov
pop
out
testl
and
imulb
movsl
add
loopne
push
push
mov
outsl
fsubrs
mov
call
std
mov
jno,pt
in
icebp
mov
pop
sbb
ficoml
or
aaa
loope
call
sbb
and
jnp
lock
out
rcr
mov
and
pop
es
loopne
push
dec
sub
das
and
cli
xor
xor
cs
loop
inc
or
int3
push
call
pop
jnp
xor
sbb
in
rolb
ud1
out
imul
aas
mov
cmp
sbb
sbb
std
add
sub
addr16
push
aam
xor
add
pop
cmc
mov
or
outsb
add
cmp
adc
divb
test
inc
test
mov
fisubs
mov
cmp
lret
inc
fbstp
sti
aam
push
cs
and
sbb
add
push
add
leave
pop
fdiv
cmp
mov
cmp
stos
sbb
lods
mov
into
add
and
hlt
pop
mov
je
sub
push
loop
loopne
fisubrl
in
mov
das
call
loop
ret
sbb
inc
mov
js
in
xor
inc
loopne
call
add
repnz
dec
lret
and
push
addb
push
enter
and
lret
dec
add
mov
test
push
iret
xchg
pop
dec
loopne
sahf
shl
or
mov
inc
loope
pushf
aaa
daa
fdivs
sub
pop
sub
mov
loopne
in
mov
inc
and
orb
inc
inc
sub
xchg
imul
mov
or
sbb
push
mov
sub
enter
movsb
cmpsb
fdivrl
adc
inc
dec
and
push
dec
lock
push
dec
mov
cmpsb
movsb
mov
cld
or
mov
addl
fsubs
mov
rolb
les
add
sahf
rcrb
movsb
js
sbb
ljmp
std
in
fstpt
in
push
mov
in
ja
mov
mov
adcl
inc
adc
adcb
mov
lret
sbb
out
push
sbb
push
sbbl
insb
inc
adc
mov
or
xor
ficoms
lea
push
cmpsl
pop
addr16
jno
cli
mov
and
add
inc
mov
adc
pop
sbb
pop
ljmp
ud1
jg
cltd
or
add
mov
sub
and
rorl
sbb
and
rolb
shll
push
pop
mov
movl
shrb
cld
divb
pop
jp
in
add
ljmp
sub
gs
add
xor
sub
cmp
outsb
movsb
std
sub
popa
jle
cmpsb
inc
out
adc
push
sub
movsb
enter
cmp
push
adc
dec
add
push
and
inc
or
js
xor
repnz
nop
stos
inc
fsubrl
push
fstpl
fdivrl
and
loop
orl
in
sub
pop
or
stos
pop
or
lahf
insb
sbb
or
sub
mov
lds
mov
push
test
enter
and
pushf
adc
jnp
lock
ret
in
inc
subb
negl
jg
popa
shll
cwtl
mov
sub
jg
testb
and
mov
les
and
es
sub
leave
cwtl
clc
push
push
mov
push
js
inc
adc
jmp
inc
daa
jecxz
mov
ss
lods
sbb
jae
cmp
pop
inc
fidivs
ret
addr16
and
addb
data16
mov
gs
adc
adc
incb
pop
test
sbb
sub
add
xchg
or
fwait
pop
xchg
sub
pop
mov
sub
out
cmpsl
incb
inc
jmp
test
jbe
icebp
inc
aas
mov
inc
mov
repz
dec
mov
jmp
movsb
fists
pop
mov
mov
pushf
test
mov
sub
jne
int3
and
es
xor
sbb
mov
sbb
scas
lock
pop
or
stos
push
fsubrp
pop
mov
fwait
in
inc
cwtl
jo
mov
loope
cmpsl
add
orl
lahf
add
sub
and
mov
les
loope
lods
rcrl
je
cmp
or
jmp
lock
pushf
xchg
push
jle
rcl
pop
sti
mov
adc
sub
sub
lods
mov
aam
xchg
pop
dec
jmp
lret
or
div
adc
loopne
mov
stos
dec
inc
and
imul
jmp
pop
cmp
punpckhwd
mov
mov
mov
pop
movsl
ret
aam
sbb
cli
adc
xor
rol
or
jb
sahf
add
lods
aas
pushaw
mov
sahf
fwait
push
pop
mov
cwtl
orb
adc
xor
idiv
add
test
lock
and
cmp
es
sub
sub
pop
fsubl
mov
dec
pop
pusha
pop
out
add
pop
fstpt
or
in
add
add
data16
aad
jo
iret
sbb
cli
xor
sub
add
mov
loop
push
into
or
fcomps
pusha
push
pop
cmp
pop
test
fcompl
pop
or
and
sub
or
mov
shlb
inc
and
xchg
mov
lods
jo
int
adc
or
loopne
sub
out
pop
jecxz
add
inc
sub
push
push
mov
or
lods
lcall
push
cs
lea
push
push
jo
shll
mov
pop
or
sbb
adcb
cld
jnp
repnz
xchg
and
scas
mov
dec
in
and
adc
inc
outsl
ds
call
xchg
dec
testb
test
lret
cmp
out
aam
jmp
xchg
aam
sbb
sahf
mov
or
and
in
cmc
add
xor
fldl
inc
fdivs
in
mov
push
adc
xor
imul
adc
add
int
addb
or
lahf
mov
popf
sbb
add
nop
cltd
je
fiaddl
aas
inc
xor
and
or
inc
fs
push
xchg
jp
ljmp
fsubrs
xchg
xchg
push
add
mov
dec
pop
dec
repnz
sub
fs
sahf
jl
or
fwait
pop
out
xor
pop
pusha
fcomp
xor
jp
scas
inc
pushf
sub
add
add
push
out
cmp
pop
lea
mov
in
mov
cwtl
jp
jne
jmp
or
inc
dec
mov
push
dec
mov
sub
sub
add
in
sub
jmp
ret
jnp
pop
mov
and
enter
inc
and
fwait
ja
addl
icebp
inc
xchg
rol
inc
inc
cmp
fbstp
hlt
inc
notl
adc
ret
lret
and
push
pop
in
aam
int
in
arpl
mov
lret
icebp
fisttps
fildl
icebp
aaa
mov
inc
lods
adcl
stos
andb
outsl
lock
sahf
fildl
sbbb
cmp
hlt
filds
dec
xchg
aam
ds
and
dec
and
push
dec
xor
in
icebp
xchg
out
loop
shlb
sbb
shr
idiv
insl
sbb
lret
movsb
cmp
jbe
cmp
mov
repz
jo
xchg
sbb
dec
scas
sbb
les
and
dec
jmp
test
loope
rorb
idivl
sbb
dec
loope
lea
repnz
add
fildl
addr16
push
and
cwtl
call
adc
loop
or
jecxz
add
sbb
nop
or
adc
xor
xchg
pop
pop
adc
inc
adc
fiaddl
push
js
call
push
cmp
cmp
rorl
in
cs
inc
or
mov
subb
ret
adc
and
cwtl
pop
xor
int
push
in
mov
pop
inc
movsl
mov
jp
ret
shlb
out
lock
mov
popa
adc
or
clc
or
inc
and
mov
xchg
push
inc
and
into
add
dec
dec
push
int3
loopne
adc
scas
xchg
rorb
movsl
loopne
xor
adc
scas
hlt
or
pop
scas
icebp
repz
loop
popa
push
aaa
hlt
repz
test
mov
addb
xchg
jns
sub
insb
inc
adcb
test
add
aad
icebp
xchg
hlt
in
cmp
in
mov
mov
and
adc
jo
cmp
add
incb
cs
add
or
mov
xor
dec
ret
insb
push
mov
inc
jae
cltd
jmp
jecxz
xor
jge
movsb
js
outsl
xor
add
popa
sub
imul
lock
cmpsl
sarl
adc
insb
mov
and
sbb
sub
sub
sbb
test
mov
cmpsb
ljmp
pop
sub
adc
icebp
filds
inc
mov
sarl
dec
popa
xor
inc
dec
mov
cmp
adc
lahf
jmp
xorb
jg
dec
fnstcw
add
fadds
jecxz
cmpsb
add
adc
sub
into
and
mov
movsb
ret
imul
loopne
ds
jne
cmp
cld
mov
add
mov
pop
shl
sub
movsb
dec
cmp
xchg
adc
stos
add
adc
jnp
ds
sub
clc
dec
sub
xor
sti
das
mov
and
mov
adc
into
mov
inc
mov
cmpsl
lcall
je
push
lock
clc
push
es
std
loopne
lock
and
sub
test
cs
cmc
mov
add
cmp
das
jmp
pusha
cli
adc
adc
imul
int
inc
faddl
das
test
pop
aad
arpl
mov
lcall
call
sbb
or
inc
cmp
fdivr
sub
test
pop
pop
cli
xor
int
and
out
mov
mov
pslld
inc
nop
shrb
add
mov
or
dec
xchg
jns
ljmp
inc
aad
jge
jmp
or
dec
jbe
pop
sub
call
xor
test
iret
or
xor
fildll
add
mov
sbb
aas
call
sar
inc
adc
cld
sub
push
aam
call
push
pop
icebp
ja
aam
jg
imul
loopne
in
push
or
iret
add
xor
mov
shll
mov
inc
in
xor
int
xorb
add
outsl
add
sub
jns
mov
addl
xlat
pop
adc
xchg
mov
add
cs
mov
and
add
rcr
adc
lock
aam
cmpb
push
fists
fcoms
dec
aam
mov
test
mov
shr
xor
test
aaa
fcoms
sti
inc
pop
in
shll
fcoml
mov
mov
inc
and
sbb
push
mov
sub
xor
cmp
jge
pop
arpl
and
pop
or
mov
mov
add
int3
jmp
or
add
enter
push
push
call
cld
lods
addb
outsl
jno
xchg
insl
push
cmp
xor
ja
pop
loopne
add
sub
das
data16
cmp
sbb
pop
add
pusha
adc
rcl
xchg
hlt
sub
push
mov
add
dec
rclb
xor
mov
aam
aas
fldenv
popf
inc
sbb
push
adc
fistl
pusha
inc
pop
imul
jns
xchg
add
orb
push
mov
ret
aaa
orl
insl
inc
addb
xchg
test
xchg
jo
add
xor
dec
sbb
fisubl
popf
iret
xlat
mov
jecxz
fdivl
jecxz
loope
std
xlat
enter
int
lods
xchg
lock
outsl
ss
aaa
mov
pop
jno
jg
fisubrs
fucomp
mov
xchg
ror
pop
add
js
or
mov
cmc
mov
clc
cmp
mov
push
cmp
out
test
add
and
out
inc
rcl
loope
hlt
push
shl
mulb
xchg
add
pushf
or
cli
ret
xchg
pop
shlb
daa
fsts
mov
fcoml
fnstenv
nop
jne
sub
addr16
std
lods
sbb
mov
neg
js
loopne
jne
add
sbb
jmp
sub
mull
cs
xor
xor
int3
cmp
enter
inc
mov
add
and
inc
rcll
sub
xlat
and
in
mov
pop
add
mov
js
mov
cmp
jb
jo
xor
push
js
dec
mov
adc
stos
jecxz
or
cmpsb
xchg
push
ret
jmp
or
je
js
xchg
popa
psraw
inc
sbb
dec
out
ljmp
add
jmp
dec
xor
dec
loopne
cli
add
push
jle
adc
xor
gs
repz
xor
out
push
jg
psadbw
add
adc
add
push
sbb
xor
or
xchg
jne
into
add
push
lock
mov
mov
sarb
fidivs
inc
movsb
dec
sbb
loopne
pop
adc
repnz
int3
adc
add
sbb
shl
pop
or
cmp
mov
or
pusha
adc
inc
push
cmp
jmp
cmp
ja
pop
pop
inc
bextr
jmp
cmp
inc
mov
jmp
add
ret
popa
and
xchg
int3
add
cmc
adc
shrb
and
lea
ds
enter
clc
xor
fmull
push
iret
hlt
sbb
and
imulb
add
loop
jb
sbbl
jo
in
cmp
or
pop
loopne
xchg
push
add
movsb
ljmp
inc
sub
movsb
add
xchg
js
sub
aad
mov
inc
or
add
jmp
repz
pop
mov
rolb
out
xchg
sub
rcrl
xor
jmp
sbb
add
imul
jge
and
or
cmp
dec
or
lahf
xchg
xchg
jecxz
imul
jbe
cmpsb
addr16
aam
stc
outsl
stos
lret
jle
fxch
pop
popf
aad
ret
fbstp
hlt
call
ret
pop
inc
mul
mov
ret
push
aaa
aam
sub
mov
dec
mov
or
or
mov
pop
sbb
dec
add
sbb
cld
ret
enter
jo
sub
shll
jl
add
add
les
cmc
add
rcl
cwtl
sarl
cmp
hlt
mov
lea
or
add
push
fwait
in
out
or
aad
scas
ljmp
jmp
jmp
jmp
addl
enter
lock
les
iret
mov
cld
ror
xlat
sub
sub
mov
push
adc
lar
pusha
arpl
adcl
lock
fidivrl
jae
dec
or
imul
cmp
xor
or
or
jl
sbb
data16
mov
in
sbb
inc
add
jo
sahf
xchg
daa
dec
jmp
cmp
cmp
mov
mov
mov
dec
rcrb
shll
sbb
push
call
add
or
cwtl
lock
aam
and
lcall
aas
out
mov
xchg
rolb
mov
loope
mov
mov
call
sti
stos
dec
rolb
fldenv
pop
inc
mov
mov
sbb
pusha
inc
inc
fadds
int
fsubr
jns
cmp
je
movsb
mov
xchg
js
mov
inc
cli
cmpsb
or
or
loope
dec
enter
enter
or
addr16
aad
mov
loopne
mov
or
xlat
pop
shlb
add
pop
mov
mov
or
nop
data16
je
je
fadds
frstor
and
pop
in
and
add
xchg
push
push
xchg
jg
pop
sbb
push
mov
mov
cmp
jge
add
jmp
xorb
into
les
mov
dec
sbb
adc
lods
cmp
in
adc
add
arpl
mov
cltd
mov
loop
addb
cmpsl
mov
call
push
jmp
icebp
icebp
divl
jg
inc
xchg
sub
inc
push
cmpsl
les
sub
sti
xchg
loope
and
cmp
ret
and
aas
ljmp
mov
push
lods
nop
sbb
or
add
in
sbb
mov
xorl
inc
add
inc
imul
adc
cmpsl
dec
sbb
test
js
inc
sbb
loope
sbb
ds
add
pop
test
mov
xchg
pushf
push
out
mov
xchg
repz
jecxz
imul
jmp
ret
pop
and
cmp
cmp
and
or
lods
xchg
jecxz
adc
cmp
outsb
aaa
mov
add
dec
push
pop
add
xor
icebp
ds
mov
adcl
imul
rorb
fld1
movsb
pop
call
dec
add
mov
fmuls
xchg
jmp
lock
pop
xor
pop
mov
mov
imul
mov
pop
fwait
movb
fisubl
andb
rol
jns
mov
cmpsb
sbb
add
imul
test
rcrb
or
dec
mov
ret
shlb
fisubrl
daa
loopne
cmp
mov
ja
pop
push
out
push
lret
sbb
inc
or
ljmp
hlt
sub
in
lahf
roll
cmp
push
in
adc
mov
jo
mov
int3
shrb
fimull
rcll
fsin
les
xlat
mov
and
jbe
jns
movl
in
xchg
pop
iret
xchg
out
stc
adc
movsb
inc
pop
add
out
sbb
mov
sbb
sbbl
jne
nop
add
fwait
sub
data16
add
cmpsb
dec
pop
mov
std
push
dec
jno
add
add
loop
pop
arpl
das
enter
sub
cmp
and
lds
sub
jbe
xor
adc
push
push
inc
sub
mov
sbbb
lock
xchg
jnp
cmp
imul
aad
inc
sbb
pop
inc
xor
scas
fwait
ds
call
or
add
movsl
inc
mov
lds
lea
into
push
aam
mov
jecxz
jecxz
aas
push
ss
push
add
mov
fstps
sub
lods
xchg
dec
addr16
add
fadds
lret
xor
movsl
mov
xor
add
add
jge
push
xchg
add
xchg
and
xor
lahf
add
xchg
jmp
bndstx
lods
lods
inc
test
aam
xchg
imul
mov
add
cmpsl
sbbl
and
dec
xor
out
js
xor
add
mov
inc
and
adc
stc
cmp
lcall
popl
stos
test
lds
xorb
mov
cs
int3
mov
nop
jmp
shll
rolb
xchg
fldt
add
lock
xor
test
jg
adc
movsb
pop
dec
pop
add
cld
push
xor
inc
xor
repnz
push
and
push
push
insb
movsb
push
arpl
and
aaa
xor
inc
sbb
clc
shrl
inc
sub
dec
lcall
or
jnp
xor
shl
xchg
or
popf
pop
das
or
sbb
jo
inc
loop
out
mov
dec
icebp
sub
push
push
dec
push
fs
jns
rcll
cli
xor
jnp
call
xor
pop
ret
mov
sbb
push
pop
mov
movsl
outsb
dec
enter
shll
add
js
cmp
nop
jmp
or
adc
repz
and
push
cmp
push
xchg
iret
sbb
inc
add
cmc
fyl2x
ret
fnstcw
dec
or
sarl
inc
sub
add
movl
jae
pop
sub
xchg
dec
xor
lcall
test
rcl
filds
add
inc
and
dec
mov
mov
lock
adc
sbb
pop
lret
push
inc
testl
roll
test
andb
and
sub
mov
out
pop
dec
lcall
inc
mov
push
test
adc
rorl
fildl
mov
shlb
xchg
clc
inc
or
dec
add
jo
add
sbb
and
add
push
or
jle
mov
add
add
out
inc
loopne
inc
test
push
mov
adc
ffree
arpl
mov
push
push
sbb
mov
test
rolb
xor
js
and
mov
push
out
sbb
leave
xchg
fiadds
inc
push
push
lods
arpl
dec
in
push
mov
mov
pop
lods
pop
hlt
adc
and
sbb
hlt
or
popa
push
sbb
xor
xchg
pop
sbb
clc
addr16
dec
mov
jne
jge
add
cmpsl
xor
and
lock
pushf
jbe
adc
dec
jno
and
adc
adc
mov
mov
adc
or
test
inc
roll
das
fiaddl
add
stos
pop
sbb
lahf
add
cmp
adc
rol
add
pushf
lea
or
hlt
jp
jmp
pop
mov
in
daa
adc
xchg
xchg
xchg
icebp
js
mov
push
or
pop
cld
stc
jo
loopne
or
sub
inc
lods
sub
dec
call
sbb
mov
pop
adc
xchg
xor
push
call
bound
sub
lock
push
mov
inc
lock
push
cmpsl
fs
dec
mov
or
pop
add
inc
cmp
push
lcall
mov
inc
insb
xor
adc
adc
xor
xchg
lds
adc
loop
mov
and
mov
jmp
aad
mov
jmp
adc
sbb
hlt
push
fmuls
or
fidivrl
dec
rorb
stos
add
mov
hlt
jne
xchg
rclb
out
sahf
orb
add
adc
lcall
sub
rclb
test
lahf
inc
adc
ret
and
push
sub
cmp
inc
xor
fsubrl
enter
sbb
cmp
pop
popf
ret
test
push
imul
jnp
ret
lods
push
lret
in
adc
into
sbb
dec
addl
das
lds
das
xor
pusha
insl
sbb
int3
xor
icebp
pop
inc
add
or
int
add
in
nop
add
sbb
imul
push
dec
add
adcb
les
mov
mov
mov
stos
je
xor
shl
je
jge
sbb
mov
xchg
arpl
or
and
push
shrb
sub
scas
enter
dec
outsl
sbb
loop
xchg
rolb
cmp
pop
xor
jbe
mov
out
mov
dec
or
mov
or
add
xchg
filds
adc
orb
push
push
ret
push
les
sub
jnp
lret
outsl
adc
lea
inc
push
jbe
ss
jg
sub
sub
jmp
movb
push
inc
cld
cld
addl
scas
rorl
adc
jno
filds
lret
dec
and
mov
mov
or
mov
add
adcb
pop
cmp
and
mov
das
sbb
mov
icebp
xchg
mov
or
add
das
dec
inc
and
xor
or
add
adc
je
xor
cmp
or
jmp
cli
sbb
mov
in
jo
nop
xchg
pop
sar
adcb
pop
cld
adc
mov
rorb
cmpsl
dec
sbbb
sub
mov
in
lea
insb
adc
pop
inc
inc
sub
cmp
cmpsb
enter
push
das
loope
icebp
xchg
hlt
clc
push
lock
stos
mov
push
or
mov
and
dec
jecxz
test
adc
out
dec
dec
cmp
inc
rolb
mov
or
shr
loopne
rcr
rep
pop
sbb
push
in
scas
xor
jae
push
lcall
sub
inc
xor
ret
xor
fcomp
adc
movsl
decl
jmp
lret
or
and
and
mov
adc
fildl
loop
add
int3
sbb
add
pop
outsl
lahf
in
push
loopne
add
xchg
scas
dec
lock
jne
xor
sbb
add
jmp
dec
insb
call
sbb
or
inc
add
mov
lods
and
mov
int3
jbe
adc
rclb
adc
mov
pop
enter
les
fimull
inc
mov
xchg
add
xchg
mov
jmp
mov
mov
pop
lock
or
loope
stc
hlt
popa
sbb
aam
out
xchg
lds
movl
jp
push
adc
outsl
xor
gs
test
jno
add
rcll
push
mov
sbb
loope
xchg
fcoms
xchg
xor
jl
addr16
inc
jle
sbb
dec
mov
fildl
jbe
pop
daa
xchg
xchg
adc
sbb
sub
mov
pusha
add
iret
mov
aam
pop
pusha
loopne
sbb
jne
fistl
inc
je
inc
and
subb
fisttpl
loop
cmp
gs
mov
mov
inc
in
hlt
loope
dec
pop
pop
and
imul
jb
push
add
sbb
and
ffreep
add
or
adc
lock
orl
pop
add
xchg
negb
call
lock
rcll
and
mov
sbb
imul
sbb
lock
mov
aam
test
and
sarl
subb
add
dec
lret
adc
fmuls
daa
ja
out
fsub
pushf
lock
and
adc
out
icebp
movsl
enter
cmp
test
and
hlt
out
movsl
push
adc
addb
in
pop
mov
inc
fsubs
sarb
add
int
stos
inc
jne
sbb
daa
mov
hlt
or
in
enter
pop
ss
call
mov
or
mov
push
pop
push
dec
inc
xchg
into
ds
add
mov
or
dec
gs
sub
cmp
and
js
cmp
xchg
hlt
imul
push
inc
inc
jecxz
clc
mov
xor
cmp
or
jp
prefetch
xchg
pop
sbb
test
inc
mov
lock
mov
and
sbb
or
add
inc
add
je
adc
or
jg
ss
xlat
lret
xor
sbb
or
adc
int3
inc
or
xchg
mov
push
xchg
loope
std
push
cmp
sti
add
in
call
pop
cmp
cmc
enter
and
nop
mov
out
and
jmp
ret
js
cmpsb
mov
loopne
dec
xor
rol
adc
jbe
mov
inc
add
inc
cmp
sub
sub
roll
dec
adc
fsubs
pop
jle
lea
sbb
mov
sub
rclb
into
popf
xor
dec
in
dec
clc
int3
scas
inc
sub
test
sti
ds
push
pop
xchg
mov
sbb
subl
pop
push
loopne
dec
daa
or
dec
xor
incb
test
adc
add
aaa
add
or
rolw
mov
sub
dec
outsl
adc
out
xor
lea
xlat
lcall
xor
jecxz
lret
dec
mov
mov
push
sbb
push
inc
sbb
movsb
push
into
fistpll
push
jp
xchg
mov
js
sub
add
outsl
mov
aaa
jle
pop
mov
test
popa
pop
dec
xchg
loope
jg
xchg
test
xchg
jnp
pop
icebp
sbbb
sbb
add
pushf
movsb
cmp
shr
sub
pusha
and
shl
xchg
ds
pop
cmp
inc
xchg
add
lret
jle
mov
and
xor
add
mull
mov
cmpsl
jno
mov
sub
popa
je
add
sbb
dec
mov
cmp
dec
imul
push
leave
ret
fcoms
in
mov
xchg
xlat
aad
xor
mov
push
jae
fsubrl
into
and
push
add
push
mov
or
ret
jbe
cwtl
cli
mov
xchg
lea
out
cmp
cmp
or
psrad
adc
dec
pop
imul
lods
aaa
mov
and
mov
faddp
pop
fs
mov
les
mov
loope
out
jmp
add
lock
dec
mov
notb
in
jg
xor
and
sbb
cmc
add
shlb
jne
push
sub
or
jmp
js
cmc
mov
stos
inc
movsl
lods
jmp
data16
add
pop
or
in
dec
fadds
xchg
pop
dec
and
sub
popa
pop
mov
push
mov
sbb
mov
jne
sbb
ret
inc
cmp
sbb
and
sbb
adc
nop
test
sarl
sbb
add
imul
maskmovq
divl
and
mov
out
das
subl
or
stos
pop
stos
push
add
or
lock
add
mov
mov
add
mov
mov
or
adc
or
cmc
jg
push
or
pop
jae
adc
test
ret
adc
inc
or
or
sarb
stos
lods
lods
add
ljmp
sbb
bound
rcll
movsb
sahf
outsb
rcr
pop
adc
ret
roll
pop
jmp
jl
xlat
jo
push
mov
sub
fistpl
sbb
xchg
cltd
jmp
push
add
sbb
push
jge
popa
rcrl
and
pop
mov
cmc
jg
flds
push
push
dec
jmp
and
adc
test
hlt
add
or
and
adc
inc
jp
adc
jo
notl
fistpl
sub
mov
adc
push
push
mov
mov
sub
int
ud2
shll
popa
pop
test
enter
sbb
pop
and
fisubl
and
and
or
and
ret
inc
mov
repz
negb
addl
fisubs
add
es
inc
mov
popa
and
mov
pushf
and
dec
and
inc
arpl
mov
das
and
insl
cmpsb
push
push
dec
dec
movsl
iret
loopne
sub
dec
xchg
xor
rcrb
add
add
jnp
popf
aas
mov
cli
arpl
pop
pop
enter
pop
rolb
cld
ret
add
jmp
stos
sbb
dec
cmp
sbb
xor
fadds
es
sub
dec
inc
pop
fdivs
ret
xor
testb
or
repz
inc
fistpll
sahf
je
sti
push
adc
mov
pop
lods
inc
mov
pop
out
and
addb
movsb
xchg
fdivs
ret
xor
push
aad
or
mov
outsl
inc
mov
cld
sbb
push
xchg
call
jge
cmp
xor
jecxz
cmpb
icebp
push
mov
out
mov
outsb
sbb
xchg
dec
and
loop
pop
adc
jo
dec
adc
mov
imul
mov
mov
push
call
shrb
dec
pop
mov
outsl
sub
notb
rcr
cmp
subb
adc
outsb
sub
lret
loope
popf
fcompl
add
lods
xchg
inc
dec
mov
cld
mov
xchg
rorl
or
icebp
movsl
dec
in
fnstenv
sbb
pop
cmc
xor
loopne
and
ljmp
push
sub
into
leave
dec
sub
add
or
sub
addr16
add
test
add
mov
stos
cmp
mov
jecxz
pop
xchg
jle
popf
cmp
lds
jb
mov
lds
jmp
les
insl
rcrl
in
in
std
xor
sbb
ds
in
xchg
dec
or
subb
dec
mov
rclb
in
mov
inc
or
push
fstpl
and
sub
sbb
add
jle
hlt
sub
fmull
ljmp
out
adc
jne
push
mov
add
add
and
iret
mov
dec
cmp
cmc
adc
mov
into
push
addr16
faddl
ja
pop
sub
push
jbe
fbld
xor
jb
faddl
mov
andb
lods
lret
fs
push
jae
movsb
sbb
es
sbb
clc
mov
push
fsubl
cld
stc
int
loopne
or
repnz
adc
sub
out
push
pop
sub
pop
lds
mov
rorb
or
add
pop
and
sbb
xlat
or
and
push
loopne
lahf
sub
hlt
adcb
lret
or
outsb
mov
out
cli
add
movsl
adc
enter
test
xchg
je
jne
push
push
rclb
hlt
sub
push
mov
adc
clc
mov
sahf
mov
xlat
cmpb
push
push
mov
cmpl
dec
xor
ds
mov
sbb
mov
hlt
lahf
shrb
sub
aas
in
push
add
mov
pop
shll
mov
adc
mov
aaa
pop
ja
mov
pusha
sbb
jmp
push
ljmp
and
inc
and
adc
and
sub
shll
sahf
sti
mov
mov
push
inc
xchg
pop
push
mov
and
stos
adc
jns
cmp
insb
call
test
in
popl
test
sub
lock
add
jle
faddl
dec
jno
add
mov
push
inc
pop
int3
and
add
jbe
mov
jmp
jg
adc
imul
stc
add
pop
incl
dec
repnz
and
jae
xlat
stos
inc
jmp
pop
cmp
arpl
sbb
and
sti
daa
add
gs
bound
imul
adc
mov
xor
mov
dec
adc
mov
dec
jmp
inc
or
les
test
dec
frstor
ss
or
inc
js
ret
lods
cld
mov
in
pop
cmp
sbb
js
in
cmp
daa
inc
dec
sbb
add
sub
push
cmp
bound
or
fldenv
jecxz
add
and
shr
jg
mov
push
push
push
sub
lods
gs
les
fidivl
cmp
andb
mov
test
pop
xlat
pop
inc
adc
or
lock
scas
or
fnstsw
rcl
imulb
lds
pop
mov
or
jl
repnz
sbb
std
in
cwtl
mov
cmp
sub
fldcw
adc
pop
jp
pop
add
jecxz
ljmp
jmp
sub
xchg
fidivs
movsb
pusha
push
aaa
les
xor
addr16
in
clc
out
add
rcr
adc
sahf
dec
cltd
push
aad
sbb
nop
xor
inc
jne
sub
rorl
popa
jnp
mov
cltd
fiadds
mov
inc
add
jge
lock
testl
adc
mov
shl
ja
scas
hlt
or
push
sbb
leave
scas
xchg
lea
adc
adc
loopne
jle
adc
add
push
andb
ss
fiadds
repz
inc
cmp
shr
pop
sub
mov
fmuls
rolb
test
daa
add
adc
or
adc
fsubs
jne
sub
inc
or
add
fidivrs
nop
movsl
loop
mov
adc
and
cmp
jmp
inc
dec
sbb
hlt
ret
addb
add
xchg
and
lcall
push
push
add
pop
loope
shrb
sub
sub
mov
inc
mov
daa
lock
cmp
lock
lods
movsb
fimuls
jo
push
xor
ret
pop
pusha
es
lods
popa
xchg
orl
push
fmul
frstor
sbb
fadd
mov
push
inc
xor
icebp
push
fwait
dec
mov
and
cmpb
push
mov
xor
cmp
pusha
adcl
or
sbb
xchg
xor
lods
icebp
push
dec
pop
loopne
xor
test
and
xchg
lcall
add
push
pop
inc
hlt
addr16
ss
lret
mov
fs
pop
push
adc
dec
fistps
push
mov
lock
les
rcll
pusha
fs
test
push
in
jno
mov
fistps
add
icebp
dec
sbb
icebp
push
flds
mov
pop
fldt
sbb
jnp
jae
rcr
dec
in
mov
sub
stos
sysexit
adc
out
add
or
fdivrs
rolb
cmp
add
test
and
enter
loop
stc
imul
cmpsb
dec
lahf
cmp
daa
xor
mov
std
shl
cmp
and
pop
sub
lahf
pop
pop
es
insb
pop
roll
js
orb
xchg
xchg
sbb
mov
xchg
cltd
push
and
cmpsl
in
inc
lahf
addr16
or
aas
fwait
pop
inc
jecxz
dec
sbb
aas
push
ss
mov
lret
mov
rcrl
sub
xchg
into
dec
mov
insl
inc
sub
jge
mov
call
jae
mov
es
scas
inc
xor
mov
popaw
aam
add
jmp
lret
fistpl
js
test
or
xorl
mov
aas
int3
in
clc
and
outsl
aam
xor
mov
cs
dec
jmp
mov
and
sub
jnp
or
imul
ficomps
inc
and
inc
add
inc
mov
movb
inc
jmp
xor
notl
jbe
rcrl
mov
sahf
out
push
inc
notb
pop
inc
push
gs
icebp
cli
sbb
add
adc
inc
ljmp
leave
cmpsb
inc
aaa
or
cmp
sub
subl
dec
ret
and
clc
andb
pop
sub
cltd
data16
pop
ss
sti
jecxz
mov
adc
inc
adc
pop
adc
pop
cmp
inc
adc
ret
xor
jnp
add
add
xchg
pusha
sub
xlat
loope
das
div
cmp
jecxz
or
pop
lods
inc
ret
lahf
loop
jmp
int3
inc
pop
jp
add
dec
mov
pop
loope
pop
adc
sub
dec
orl
mov
pop
movsb
xchg
insb
test
xor
adc
xchg
add
xlat
adc
inc
clc
aad
scas
jo
xor
out
push
jbe
inc
ret
scas
nop
inc
add
add
xor
addb
push
sub
xor
or
aam
repz
fsubrs
jge
push
dec
dec
mull
xor
in
hlt
sub
nop
add
cs
xor
mov
xor
inc
sar
data16
xor
sbbl
and
loopne
icebp
pop
int
imul
cmp
aad
mov
data16
jmp
mov
and
xchg
je
shld
xchg
outsl
sbb
inc
lods
push
inc
jno
shll
adc
repz
jle
test
aas
clc
add
sbb
fwait
test
push
inc
jae
jecxz
and
push
gs
cmp
je
cltd
fwait
sub
or
mov
dec
mov
pop
cmpsl
xor
in
jecxz
or
mov
push
movl
aaa
cld
or
movl
add
jns
call
shrl
pusha
adc
ljmp
xor
sti
lods
inc
cmp
stos
xor
mov
outsl
in
call
and
popa
push
pop
push
push
in
xor
ss
mov
push
or
mov
fmull
xlat
jp
or
cmp
in
adc
xor
scas
imul
pop
nop
and
pusha
xor
push
xchg
adc
mov
test
xchg
push
test
push
jecxz
jle
sbb
xorb
sub
add
mov
xchg
pop
xchg
pop
sub
das
inc
jne
inc
sub
imul
test
nop
xor
aas
sub
clc
cmpsl
mov
lahf
shlb
xor
call
enter
cmp
jno
mov
mov
ret
mov
or
lock
dec
add
cmp
jno
imul
cld
sub
cmpsl
xor
out
bound
out
jge
xchg
dec
jae
mov
add
inc
addr16
insb
lock
fisttpll
mov
arpl
lods
lahf
mov
dec
jne
cltd
pop
cmpb
push
sub
push
push
and
xor
mov
adc
in
and
sbb
mov
fsub
jl
call
sub
je
mov
insl
dec
ss
push
mov
adc
out
dec
js
jg
push
lock
push
or
add
jb
addl
clc
mov
pop
jb
int3
pusha
add
mov
lods
add
mov
add
inc
push
xlat
add
sbb
incb
int
push
sub
movsl
je
int
add
scas
or
xor
fcoms
mov
mov
adc
cmp
les
or
pop
mov
mov
xchg
test
sub
mov
mov
jne
and
xchg
divl
lret
enter
ret
push
shrb
std
data16
std
jmp
cmp
or
sub
sar
jmp
inc
cmp
xchg
fsubs
push
xor
or
fucomp
clc
and
pusha
leave
sub
or
fidivrl
enter
push
int3
pop
insb
movsl
xchg
adc
mov
imul
fs
les
push
push
cmpsb
push
call
sub
fstl
inc
loope
sub
dec
inc
inc
in
push
mov
jl
pop
mov
inc
js
cld
repz
cltd
inc
mov
int3
ja
adc
aam
pop
rolb
fisubl
xor
adc
mov
dec
js
sbb
bound
add
in
add
into
and
xchg
push
or
lock
les
fcompl
call
push
and
push
or
jno
push
roll
jo
xor
and
pop
shlb
hlt
ret
add
stc
push
daa
std
sbb
inc
add
gs
ds
mov
inc
or
adc
adc
sbb
cmpb
inc
dec
sbb
xchg
hlt
fisubs
xor
lods
mov
jmp
or
and
inc
icebp
sub
jne
xor
inc
jmp
or
ret
out
pop
add
cmpb
and
sub
stos
call
inc
jmp
ret
xchg
dec
insb
addb
lods
add
mov
add
mov
dec
jmp
insl
pop
mov
jp
sbbl
jns
out
mov
pop
outsl
or
push
push
sub
pop
mov
orb
adc
divl
cmp
or
and
fmull
dec
fildl
push
dec
dec
pop
test
and
ret
rcrb
add
and
mov
in
cs
int
sti
inc
adcl
notb
xor
es
sub
push
or
rcll
and
scas
and
mov
nop
lock
sbb
or
xchg
mov
rcl
mov
ds
xor
les
pop
or
push
lods
push
ret
rorb
ret
rolb
ja
sbb
dec
push
out
adc
add
aaa
adc
add
js
cmp
js
test
jp
lods
movsb
test
adc
and
cld
sbb
cwtl
cmp
shlb
cld
or
stc
and
mov
sub
sti
mov
test
sbb
loop
shl
arpl
loop
inc
rclb
filds
sahf
jne
push
mov
clc
hlt
cmp
pop
or
shlb
test
mov
rcrl
decb
and
xlat
jge
cltd
lods
sarl
scas
xchg
dec
sbb
shrb
fidivs
outsl
xor
push
jmp
or
push
negl
mov
lea
call
punpckhdq
stc
xor
repnz
cmp
clc
repnz
loopne
sarb
sub
out
or
mov
leave
inc
or
bndldx
fwait
sub
sahf
lea
lods
inc
insb
jo
cmp
arpl
adc
mov
aam
inc
mov
xchg
inc
add
dec
subb
jg
leave
shll
lock
sbb
int3
ficompl
mov
test
cmp
jb
dec
cmpb
out
ret
cmp
or
cmc
or
movups
fidivs
jne
ja
lods
or
inc
inc
push
imul
push
adc
jne
and
add
jno,pn
hlt
jge
inc
orb
inc
add
ret
mov
lcall
adc
je
dec
test
cmp
dec
outsb
mov
sbb
outsl
fimuls
movsl
movsl
shlb
hlt
dec
mov
std
push
fmul
addb
add
dec
cltd
fwait
jg
jmp
outsb
mov
mov
inc
sbbb
jo
push
test
inc
push
and
andb
jmp
adcb
dec
rolb
movsb
mov
inc
sub
ss
sub
and
dec
das
cmp
jl
inc
sub
test
xchg
sub
cs
seta
loop
adc
fs
adc
cs
or
xor
test
test
cmp
in
fldt
push
mov
insl
pop
add
cs
sub
push
sub
sbb
xor
xchg
outsb
cmpsl
pop
repz
aam
sub
adc
imul
push
and
test
xor
and
rclb
fnstsw
xchg
push
pop
pop
gs
xor
setb
jno
mov
add
ficomps
jo
sub
and
xor
add
sbb
push
sahf
or
in
xchg
subl
ficomps
mov
push
lret
aam
loop
rclb
xchg
add
addr16
push
dec
rorb
xor
pop
jo
pusha
loop
inc
insl
sbb
jne
mov
xchg
push
sub
push
roll
shl
call
mov
out
test
out
sbb
lods
arpl
xchg
adc
mov
add
jmp
scas
mov
and
cmp
or
mov
xchg
arpl
shl
push
shll
cmc
mov
cmp
xchg
ss
fistl
or
push
push
icebp
xor
xchg
mov
rol
xchg
sub
and
loopne
imul
mov
xchg
into
xchg
scas
add
cmp
add
inc
lahf
pop
sub
mov
adc
add
mov
fdivp
and
push
dec
dec
pop
add
add
or
add
add
insl
lock
or
inc
mov
ss
nop
pop
xor
sbbb
cmpsl
je
push
idivl
lret
dec
fistl
pushl
loop
hlt
sbb
icebp
in
bnd
lods
aad
fisubrs
mov
in
and
dec
dec
mov
int3
adc
test
hlt
push
fwait
out
jb
jmp
pop
cmpsl
jge
adc
les
jb
push
dec
xchg
js
rorb
mov
and
xchg
inc
popa
test
push
decb
push
arpl
xor
mov
aaa
movb
jnp
xlat
adc
push
cmp
pop
scas
jnp
iret
pop
ljmp
xor
pop
adc
clc
sbb
cmp
ja
test
aas
jmp
adc
ret
mov
adc
cmp
xchg
aad
mov
test
sub
movsb
adc
add
movsb
pusha
test
es
test
pusha
cld
out
jne
sub
cmp
and
lock
or
push
cmp
pop
pop
shl
xchg
adc
inc
sub
inc
mov
sarb
push
jecxz
test
ja
lea
icebp
testl
cmp
adc
sub
push
fs
cmp
xor
ljmp
jp
add
add
clc
in
push
iret
jg
imul
xorl
pop
cld
lods
cli
add
fdivs
nop
call
or
lds
rolb
add
add
dec
add
mov
int3
add
roll
add
in
loope
sub
xor
icebp
add
add
mov
jg
mov
sub
fisubs
xor
imul
jnp
sub
dec
mov
jne
adc
push
pop
sbb
ljmp
movsb
mov
jno
in
std
jl
adc
cs
test
pop
mov
xchg
and
hlt
lock
loop
push
push
xchg
cmp
sbb
dec
test
jno
add
cltd
stos
inc
loope
inc
inc
data16
adc
cmp
add
scas
pop
in
leave
movsb
pop
xor
aad
mov
sbb
clc
roll
push
add
adc
in
loopne
jmp
pop
stos
cli
je,pn
std
adcb
rcrl
inc
xor
jp
cltd
shrb
dec
inc
sbb
xchg
jns
pop
or
push
pop
dec
test
jnp
call
adc
xchg
jmp
fld
dec
int
adc
orl
or
cmp
jmp
inc
push
repz
pop
dec
loop
sbb
mov
sub
ret
mov
mov
inc
xchg
adc
or
ja
cmpb
icebp
stc
inc
pop
dec
clc
push
callw
das
sbb
insb
jbe
jno
stc
dec
out
sub
hlt
aam
pushf
sarl
jns
orb
jge
fistpll
pop
mov
out
pop
addb
mov
sbb
jns
movsb
arpl
jb
xor
inc
and
sbb
xchg
fs
dec
xlat
inc
or
mov
pop
sbb
int3
dec
sti
inc
stos
aam
outsb
test
jb
movsb
pushf
test
aam
dec
sub
sbb
push
mov
adc
icebp
and
sub
lods
xchg
adc
je
mov
xchg
jle
loopne
insl
pop
dec
mov
mov
lock
jb
cmp
stc
ficoml
adc
sbb
repz
arpl
jmp
test
jge
push
cmp
jge
call
inc
stos
jns
cs
pop
sbb
jb,pt
mov
test
pop
jl
sbb
push
lods
sbb
filds
adc
add
lock
and
lock
lods
fs
int3
sbb
pushf
inc
aas
jecxz
lods
xor
adcl
addl
add
jno
pop
js
lds
mov
xor
and
pop
push
mov
fwait
fwait
inc
icebp
and
xlat
insl
push
rolb
pusha
add
les
dec
lock
stc
xor
push
dec
cld
pushf
sbb
mov
mov
std
out
xchg
imul
push
jno
cmpl
cmp
cmp
dec
pushf
pop
ror
or
and
andb
pop
xlat
pop
sub
or
mov
inc
add
push
jge
sub
ds
adc
push
mov
xor
fwait
les
ds
or
xor
mov
push
push
xchg
jmp
jle
ja
lret
adc
jmp
add
pop
push
inc
cmp
rclb
or
jge
xchg
js
inc
in
and
jecxz
mov
fisubrs
add
outsb
loopne
or
imul
adc
shr
xor
lock
push
push
mov
add
inc
loopne
adc
push
push
push
cld
xor
mov
arpl
or
test
cli
cmc
sub
sbb
cli
xorl
adcb
int3
pop
cmp
xchg
call
or
adc
sub
or
push
cmpsl
roll
jne
nop
push
clc
sub
push
push
test
jo
cld
roll
xor
xor
inc
inc
inc
adc
sbb
cmp
sahf
xchg
ss
sub
dec
jp
mov
xchg
in
dec
xchg
imul
and
adc
mov
push
ljmpw
outsb
lahf
adc
test
mov
jl
xchg
ret
jo
into
dec
cmp
lock
pop
cltd
push
ds
and
fidivl
test
pop
dec
fldt
pop
mov
lock
adc
ljmp
pop
xor
scas
add
movb
sub
lock
dec
inc
mov
repz
lock
dec
and
mov
testl
movsl
hlt
div
adcl
cltd
jmp
push
sbb
inc
inc
dec
xor
dec
or
loop
jo
addb
and
inc
cmp
adc
enter
jo
clc
adc
movl
push
and
pop
es
dec
jge
jp
sub
add
arpl
call
xor
dec
mov
pop
and
addr16
aam
adc
or
jecxz
cld
ljmp
ret
jnp
lret
negl
jp
movsl
add
call
test
pusha
lock
pop
jp
adc
call
nop
ret
inc
enter
sub
add
decb
push
adcl
imul
dec
add
rclb
ficomps
les
lods
add
test
or
add
ficomps
cmp
jmp
lea
out
xchg
in
add
xchg
fsub
add
sbbb
shll
adc
lock
jp
cli
mov
push
test
or
pusha
xchg
push
shlb
fcomps
mov
push
adc
sub
movsb
add
test
into
add
nop
stos
mov
fcoms
fs
lret
ss
enter
dec
sub
jmp
dec
sub
inc
movsb
mov
pop
shlb
lods
in
mov
pop
sbb
in
and
roll
xlat
sub
rorl
cltd
jo
scas
jnp
push
push
or
add
std
xchg
sarb
sub
add
adc
lahf
sti
and
sub
xlat
adc
and
push
shlb
movsb
xchg
add
hlt
push
or
add
dec
mov
mov
jge
adc
fidivrs
shll
push
out
mov
insb
xchg
shl
in
push
mov
and
dec
test
subl
jno
pop
mov
add
pop
mov
or
scas
adc
pop
sbbl
inc
stos
bnd
das
inc
jl
int3
push
mov
push
cmc
test
mov
cli
jnp
xor
js
icebp
adc
adc
outsl
xchg
pushf
rcr
in
or
xchg
push
xor
fs
rorb
and
imul
fnstcw
push
and
adcb
xchg
int
rcr
shlb
gs
add
cld
adc
lds
es
sbb
adc
cltd
sub
add
mov
ret
add
sbb
mov
push
mov
rcrl
faddl
pop
ret
push
or
imul
jg
outsl
dec
xchg
add
inc
loop
mov
sub
mov
adc
mov
inc
or
dec
jl
and
dec
inc
negb
scas
icebp
inc
insb
ret
ficoml
sbb
jge
nop
adc
jp
mov
dec
adc
sub
and
lds
ret
cmpsb
js
mov
clc
add
sub
cli
push
rolb
dec
andb
int3
in
ljmp
jp
fidivs
notl
aam
hlt
mulb
jge,pt
fcoml
inc
js,pt
sbb
xor
sti
sbb
add
loopne
sub
and
daa
hlt
inc
push
mov
inc
je
push
inc
inc
jecxz
out
arpl
int3
dec
sbb
adc
adc
add
lock
cmpsb
push
push
push
add
sub
lret
adc
ds
lock
mov
mov
push
sub
rolb
jbe
shll
jge
ret
pop
in
and
or
xor
cmc
das
mov
clc
lods
fs
mov
mov
adc
push
fwait
loopne
scas
jmp
xchg
adcb
adc
aaa
push
shrb
dec
adc
ret
nop
xchg
adc
ja
gs
push
xchg
pop
pop
ljmp
xchg
fisubs
or
hlt
hlt
push
call
push
cld
dec
mov
xchg
and
sahf
cmpsl
xorb
repz
enter
jmp
fsubrs
xlat
pop
push
rclb
mov
mov
pop
rolb
push
push
xor
xor
dec
ret
idiv
add
push
lea
mov
fwait
mov
jno
push
frstor
pushf
je
lcall
and
mov
cld
lcall
xchg
shr
or
jbe
cmpl
dec
sbb
rcl
arpl
orb
gs
aad
nop
xchg
call
add
fisttpl
xor
add
sub
cmc
sbb
dec
and
or
dec
or
xchg
cwtl
sbb
jae
lock
or
sub
ret
cli
add
adc
mov
shll
ret
popa
inc
call
js
jo
loopne,pn
xor
lods
dec
dec
or
push
sbb
shlb
inc
loope
decb
or
adc
jae
insl
mov
cmc
aaa
push
sbb
add
or
and
je
xchg
add
dec
jbe
invd
in
insl
push
sub
rcrl
push
js
or
hlt
push
xor
cmp
in
test
addb
into
mov
or
rcr
movsb
xor
pushf
test
fbld
jmp
adc
fimuls
xorl
andb
sub
sbbb
repnz
pop
cmp
call
or
pusha
mov
dec
leave
pop
add
out
dec
popa
mov
sbb
sbb
dec
iret
loop
xor
into
and
loope
movsw
repnz
add
test
xor
adc
aam
ds
aad
cs
sub
pop
lea
lea
jl
enter
adc
fs
aaa
add
das
in
mov
inc
dec
pop
mov
call
add
lock
ss
lods
or
mov
fnstsw
fsubrl
push
mov
lods
lods
add
hlt
push
es
jns
inc
sub
je
daa
scas
addb
dec
pop
pusha
cmp
add
ret
popa
and
and
sti
addl
jns
fdivl
pop
out
push
clc
mov
inc
xor
outsl
loope
cltd
dec
push
iret
inc
bound
xchg
js
xchg
pop
stos
add
mov
icebp
dec
jae
icebp
xor
sbb
xor
add
out
iret
add
rorb
aaa
dec
cmp
cmp
or
cld
jo
mov
inc
je
add
je
or
mov
decb
add
ljmp
add
sbb
cmpsb
or
lds
push
jecxz
dec
imul
imul
sbb
jle
jno
icebp
push
dec
clc
mov
gs
dec
adc
push
adc
out
push
in
js
sbb
pop
or
and
int3
dec
ljmp
push
or
push
adc
dec
jg
loopne
outsb
ss
shr
lds
push
sub
icebp
mov
in
mov
aaa
fcom
adc
sbb
inc
push
or
adc
mov
and
std
bound
xor
xchg
push
sbb
push
std
add
shlb
push
cmpsl
hlt
xchg
lods
add
rol
dec
andl
xchg
ret
adc
xor
inc
scas
mov
add
cltd
adc
xchg
insl
pusha
mov
pop
pusha
fsubrl
ret
stos
adc
into
jecxz
nop
in
and
fdivs
cmpsl
mov
and
jg
push
sbb
sub
adc
movsb
push
rclb
cli
orl
xlat
les
hlt
call
jno
mov
popf
scas
push
inc
mov
jecxz
xchg
les
testb
movsl
ds
xor
add
inc
fwait
or
repz
test
inc
or
dec
in
sbb
pushl
sub
mov
add
das
add
cltd
adc
jg
andl
adcb
int3
pusha
insl
jecxz
jecxz
loopne
push
lcall
inc
mov
lods
hlt
decl
sbb
mov
pop
cmp
int
pop
rcrl
mov
mov
ds
or
dec
sbb
shll
ret
sub
rorb
test
push
ret
ljmp
dec
lods
adc
inc
inc
push
in
in
lock
jl
or
mov
jno
sub
dec
jae
jno
and
sub
xchg
inc
sbb
xchg
std
or
shrb
scas
jo
adc
ret
and
insb
loopne
pusha
arpl
pop
int3
scas
vpmuludq
xchg
lret
rcll
mov
lods
inc
sub
and
ds
lahf
add
add
mov
cltd
fdivrs
psubusb
test
mov
daa
push
inc
popf
mov
ds
sbb
fsts
dec
icebp
or
imul
pusha
cmpsl
rcl
cmovs
mov
and
sbb
scas
mov
xor
out
fimull
sub
and
xchg
cmp
addl
mov
xchg
push
sbb
mov
inc
mov
pop
mov
pop
add
daa
ficompl
add
mov
mov
test
icebp
imul
inc
stos
scas
ss
sbb
loope
movsl
sbb
xor
mov
iret
adc
cld
push
dec
shrb
push
call
sub
mov
loopne
dec
push
fisubrl
lret
inc
xor
and
andl
push
lds
addl
filds
jne
pop
shrb
push
loope
ret
lods
xor
jno
add
xor
add
dec
adc
sbb
jmp
out
jo
repz
lods
mov
push
push
mov
mov
lds
jl
fbld
sub
outsl
notl
inc
vhsubps
je
stc
nop
scas
adc
shrb
sbb
dec
fmuls
xor
clc
inc
jecxz
add
rol
out
nop
push
pop
movsl
mov
pop
adc
int3
fadd
jns
cmpl
pop
inc
hlt
push
jmp
and
pusha
mov
outsl
jecxz
pop
fistpl
and
aam
mov
push
jo
rorb
hlt
jne
imul
mov
pop
pop
rcr
push
sub
jo
aas
add
jp
mov
push
push
sbb
je
mov
push
mov
jne
sub
adc
xor
lods
out
push
je
mov
cmp
daa
adc
aaa
out
shlb
cwtl
mov
push
cmp
dec
or
pop
stc
aad
xor
pop
push
push
std
test
ljmp
or
nop
add
cli
jns
dec
adc
cmc
addr16
cld
cmp
jne
ljmp
jmp
shl
adc
cmp
nop
cmp
jmp
adc
and
add
scas
mov
roll
inc
imul
mov
pop
sbb
adc
pop
hlt
inc
int3
cmp
lret
push
cld
sbb
shlb
or
scas
and
ja
movsb
mov
xor
jne
lea
repnz
loop
xor
mov
inc
sub
xchg
out
add
jnp
shlb
pop
out
and
sbb
jb
mov
out
pop
sahf
xlat
xor
sub
adc
mov
clc
push
mov
cmp
dec
loope
movsb
dec
add
aas
or
mov
jae
mov
rclb
push
incl
sbb
mov
sahf
and
adc
sbb
adc
inc
cs
loope
adc
xchg
aad
icebp
mov
addr16
and
aad
mov
jnp
jmp
jbe
sbb
sub
stos
rcrl
repnz
dec
lods
ret
loop
int3
sbb
adc
pop
fistl
adc
jmp
jmp
orb
mov
xor
test
adc
xchg
in
lods
sbb
inc
add
xchg
hlt
or
inc
mov
das
shlb
push
mov
push
nop
pop
dec
andl
cmp
call
dec
sub
inc
jle
push
or
fisubs
cmp
movsb
add
dec
mov
cld
xor
movsb
or
movsb
cmc
movsl
fcomip
hlt
sarl
repnz
ljmp
dec
add
and
nop
pop
jecxz
or
or
inc
rcrb
mov
xlat
adc
rolb
xlat
or
icebp
inc
add
out
xlat
loopne
xchg
rorl
cmp
sub
ret
push
outsl
rorb
xchg
add
lods
xchg
inc
shlb
jae
pop
ret
xchg
mov
sbb
xor
lock
sbb
repz
lret
add
fdivr
rclb
jnp
jno
fidivl
dec
fcmovnb
int
test
mov
lea
nop
shrb
add
loop
dec
lahf
ja
push
xchg
shll
pxor
popa
dec
pop
add
add
mov
sbb
mov
loop
dec
fbld
repz
push
lods
xor
call
cmpsl
mov
add
mov
or
bound
lea
popf
inc
inc
fsts
xchg
mov
inc
sub
test
mov
test
xchg
mov
mov
scas
and
mov
movl
loopne
inc
lods
mov
cmp
pop
js
in
dec
repnz
jmp
lods
mov
mov
test
push
insb
jns
add
dec
insb
das
xchg
stos
ret
ret
pop
icebp
or
jge
cmp
jne
movsl
jl
aaa
xchg
inc
push
lods
aas
out
mov
push
dec
in
add
push
ret
dec
push
fcompl
mov
add
sbb
cs
or
and
push
jp
cmc
cmp
jb
cltd
sbb
push
in
in
sub
mov
or
pop
testl
or
rcrl
inc
dec
stos
cmpsb
icebp
jbe
call
jne
pop
sub
or
mov
sub
jns
cs
push
dec
dec
or
jb
xchg
xor
inc
mov
pop
loop
imul
mov
dec
fsubr
push
push
int3
outsl
push
call
lret
fildl
sub
mulb
or
mov
xor
pop
inc
jno
dec
imul
orl
add
adc
int
xchg
in
push
cmp
repz
xor
insl
mov
call
mov
pop
nop
push
aam
cmpb
adc
xor
movsl
mov
add
mov
data16
sub
fisubrl
xchg
sbb
sbb
push
and
and
sub
push
xchg
jae
cmpsb
jbe
mov
mov
scas
sbb
add
repz
jo
les
cwtl
jge
add
lcall
fbld
mov
cmp
scas
lea
fisubrl
dec
jmp
sub
test
je
mov
and
sbb
sbb
sbb
ret
push
and
insb
xor
clc
inc
fcomps
jecxz
sbb
adc
jmp
mov
dec
les
inc
dec
push
push
sub
scas
test
xor
test
xor
sahf
test
adc
sub
and
sbb
inc
lock
insl
fwait
xor
push
sub
xchg
add
jne
mov
sub
imul
dec
push
inc
movsl
jns
mov
sub
pop
jecxz
sbb
cmpxchg
cmp
cmc
mov
or
mov
inc
and
add
andb
sahf
out
push
ja
adc
outsb
mov
xchg
or
mov
inc
dec
pop
loopne
das
add
rcrb
inc
cmp
xor
shll
mov
mov
push
jmp
mov
inc
mov
test
jge
dec
jle
mov
dec
mov
movsl
sbb
int3
and
push
mov
or
xor
daa
loope
jo
mov
stc
in
xor
in
sub
loopne
mov
cmpb
in
xor
add
inc
adc
or
mov
js
xchg
dec
mov
inc
mov
aad
xchg
insb
sub
pop
decl
sbb
int3
fisttps
cwtl
adc
stos
jae
js
sub
add
or
lods
rolb
mov
pusha
xchg
cmp
stc
xchg
sub
add
stos
inc
jp
inc
int
cld
add
jns
cmp
sbb
or
add
add
push
mov
cmp
mov
mov
or
out
dec
add
push
test
cmp
cmc
test
pop
in
mov
add
cld
sub
push
jp
mov
jp
leave
imul
loope
sub
sub
filds
out
into
jge
add
pop
test
push
sub
mov
sahf
xor
lock
lcall
adcb
cmpsl
popa
lods
sbb
inc
arpl
jo
arpl
add
pop
in
xor
push
sbb
arpl
or
lods
andl
int3
and
int
jecxz
pop
add
inc
divb
add
or
mov
in
pop
cmc
adc
add
or
dec
xchg
adc
push
les
push
or
stos
adc
add
lods
cmp
sbb
test
icebp
call
push
insl
fs
jmp
out
mov
xchg
int
inc
jns
nop
test
xchg
pusha
out
and
sti
in
clc
xor
dec
movsb
xchg
icebp
add
in
or
mov
dec
inc
loopne
out
adc
test
sbb
mov
xchg
mov
cs
jecxz
sub
addb
stos
pop
out
push
orl
subb
jle
sbb
or
add
cmpsl
dec
out
test
sarl
arpl
add
out
das
test
std
shrb
stos
hlt
ss
popf
scas
gs
xchg
sbb
dec
mov
loope
xchg
push
lahf
sub
in
mov
faddp
sahf
nop
scas
fdivrl
scas
or
fs
iret
mov
mov
xchg
nop
lcall
add
push
mov
scas
arpl
test
jecxz
test
icebp
xor
mov
sbb
fadd
stc
fimuls
in
xchg
loopne
dec
bound
int3
sub
sub
add
fildl
lea
inc
cli
cmp
adcb
xor
mov
push
test
movsb
leave
push
insl
outsl
add
add
imul
out
subb
add
add
pop
pop
sub
adc
adc
adc
sbb
push
out
inc
jbe
or
lds
jno
dec
aam
push
pop
xor
sbb
mov
jge
cmpsl
xchg
arpl
shlb
dec
into
cmpsl
scas
add
lods
add
fnstcw
or
aam
movsb
pop
push
mov
adc
enter
mov
mov
test
or
movsl
jmp
outsb
jle
inc
push
subl
in
das
mov
and
xchg
cwtl
push
sub
into
movl
cmpsl
addr16
mov
test
jl
lods
push
sbb
sbb
pop
mov
and
xchg
es
sbb
test
add
jecxz
mov
cmpsb
inc
subl
jnp
ficompl
jb
mov
rol
xor
les
sbb
incl
sar
dec
adc
test
lea
bound
inc
push
xchg
add
rep
or
ret
pop
cmpsb
jg
jmp
add
pusha
xor
add
sub
enter
sub
mov
add
add
and
jmp
jmp
inc
xor
outsl
scas
fs
mov
and
dec
movsb
out
inc
or
mov
adc
mov
pop
xchg
jb
xor
push
and
aad
in
pop
fchs
sbb
xor
cmp
jg
test
jg
cmp
push
dec
xchg
bnd
pusha
shll
push
test
lret
or
mov
add
sub
mov
fstps
sbb
adc
or
sbb
mov
cld
movsl
sbb
add
jp
insl
mov
pop
call
arpl
xor
mov
sub
sbbl
insb
ret
jae
daa
imul
xor
or
mov
pop
and
inc
pusha
mov
pop
lds
insb
pop
cmc
ret
inc
dec
mulb
jle
jle
pop
cmp
pop
jp
xor
jecxz
mov
pop
loop
hlt
or
mov
mov
adc
pushf
sub
pop
test
ret
jne
xor
mov
clc
and
push
daa
push
popa
jecxz
xor
and
mov
out
pop
stos
and
or
adc
enter
das
and
push
mov
sub
xor
push
and
fstl
cmp
adc
daa
jmp
andl
jmp
mov
mov
sbb
call
popf
enter
cmpsl
xor
lea
ss
gs
cmp
sbb
out
jl
icebp
and
add
adcb
test
xor
repnz
js
jno
ja
enter
cmp
in
and
sub
or
fidivl
pop
sbb
in
sub
fstpl
les
and
add
mov
adc
dec
dec
inc
add
mov
sbbb
jl
cmp
insl
mov
out
add
sub
ficoml
dec
or
fiaddl
xchg
xchg
mov
cmp
fnsave
ret
andl
jle
mov
xor
push
and
js
cmp
adc
int3
and
sub
push
js
mov
inc
push
sahf
xor
out
imulb
loop
mov
jb
cmp
or
jne
mov
push
dec
stos
or
xor
int3
ficoms
mov
test
jns
lock
inc
adc
cmpb
mov
add
mov
inc
add
xchg
in
cmp
fisubs
sahf
mov
orl
xor
nop
sbb
icebp
xor
aaa
add
hlt
and
push
dec
sbb
push
xor
add
sub
int
out
popa
jg
rclb
adcl
pop
fldcw
lock
ftst
inc
adc
orb
loope
sub
mov
adc
out
stos
les
or
add
xorl
or
nop
rolb
adc
fimuls
orl
push
inc
jle
sub
or
les
insl
inc
inc
cmp
pop
ljmp
and
sbb
jne
gs
call
pop
int3
adc
or
mov
je
pop
jmp
jbe
adcb
inc
rcrl
mov
or
sbb
test
add
out
jle
cmc
mov
jno
dec
xchg
das
inc
and
movb
add
outsl
cmpsb
mov
add
rcl
push
subb
jns
mov
dec
xchg
add
cmp
mov
test
mov
cmp
and
add
lcall
cli
pop
in
inc
jmp
test
jne
and
jno
sbb
stos
inc
nop
inc
jns
lea
jae
aam
add
or
sub
and
ret
clc
add
push
inc
inc
in
ja
adc
xor
or
outsl
and
inc
dec
test
rcl
test
in
gs
mov
movsb
and
vmovaps
fiadds
orb
mov
stos
cltd
sub
inc
imul
dec
xchg
inc
sbb
push
lock
inc
dec
aam
push
sbb
jmp
rolb
mov
pop
aam
testl
add
movzbl
add
lds
lea
inc
sub
lods
in
clc
fwait
mov
xchg
es
push
sbb
in
js
js
cmp
xor
and
xchg
adcb
jo
pop
adcl
cmp
into
flds
out
cmc
jbe
cmpb
push
lea
add
shr
les
cld
push
shl
mov
scas
and
sbb
sbb
outsb
inc
cmp
inc
xor
dec
xchg
jg
cmp
stos
cltd
dec
hlt
js
push
je
mov
mov
movb
adc
xchg
add
and
xchg
sti
inc
jae
sub
shl
xchg
fsub
in
mov
adc
sub
jl
les
fdivp
test
jno
mov
dec
test
sub
outsl
ffreep
inc
jge
or
pop
and
inc
sub
sbb
lods
push
sbbl
arpl
xchg
stos
psllw
sahf
sarb
movsb
cs
xlat
adc
rclb
sbb
enter
xchg
repz
add
fmul
sub
cltd
fisttpl
jecxz
push
add
into
adc
push
pop
and
sbb
mov
xchg
pop
ljmp
call
mov
mulb
es
sbb
inc
add
rcrl
jno
cwtl
inc
jns
or
dec
loop
and
gs
mov
cmp
sbb
jbe
jecxz
stc
es
imul
inc
clc
test
push
dec
mov
ljmp
out
adcb
mov
push
decb
add
cli
and
leave
adc
lds
out
add
mov
inc
das
sbb
arpl
adc
gs
xor
cmpsb
lcall
xchg
adc
add
mov
call
dec
negb
inc
add
or
push
push
jmp
add
lret
push
cs
jnp
pop
sahf
inc
mov
jmp
or
movsl
or
in
push
and
faddl
int
daa
mov
out
mov
pusha
lds
movsb
jecxz
add
lret
adc
xchg
jbe
iret
add
cli
lahf
mov
inc
add
sub
and
xor
lods
push
fmuls
mov
sub
data16
mov
repz
push
pop
xchg
imul
add
into
and
ss
inc
dec
sbb
popa
inc
sub
mov
scas
insl
jge
lods
pop
mov
dec
adc
call
loope
rolb
les
shlb
and
enter
fdivl
mov
and
pusha
rorb
orl
shll
add
add
mov
xchg
mov
mov
lret
sub
fistpl
movsl
jecxz
dec
scas
lods
pop
pop
hlt
push
aas
adc
mov
and
insb
loopne
ret
dec
xor
popf
cmc
xor
insb
fwait
adc
imul
mov
and
or
xchg
xchg
clc
jno
fstpl
les
nop
pop
adc
subl
adc
shll
jnp
push
push
cmp
inc
push
mov
je
lcall
pusha
pop
ret
call
movsl
lds
jo
sub
mov
push
flds
add
or
cmp
cmc
cmp
and
aad
add
pop
divb
mov
mov
int3
clc
pushf
mov
mov
sub
or
rdpmc
mov
pop
or
mov
mov
stos
in
mov
iret
and
mov
mov
lock
add
and
movsb
jbe
jecxz
je
in
aam
test
or
idivb
fmulp
push
pop
mov
pusha
push
xchg
flds
mov
lods
xchg
jns
movsb
aam
add
orb
lret
test
push
mov
xor
inc
sbb
sub
fs
je
movsb
mov
xor
or
sbb
cmp
pushf
xor
je
pop
dec
cmp
jbe
jnp
fsubl
jle
das
test
mov
push
cs
push
icebp
push
xchg
clc
sbb
test
and
mov
sub
ret
mov
rclb
andb
pop
gs
inc
sub
or
mov
loope
pop
mov
dec
sbb
jno
ret
clc
test
test
rorb
mov
jl
mov
or
roll
adc
push
jmp
rolb
or
jmp
inc
inc
push
sbb
dec
xchg
loopne
rcrb
int
cmp
lock
jl
xor
add
adc
xchg
cmp
push
xor
enter
out
and
inc
es
xchg
fldcw
sbb
cmpb
imul
mov
mov
cmp
mov
nop
sahf
lods
xor
mov
inc
mov
mov
lods
inc
inc
ss
in
and
jno
xchg
sbb
out
xor
ret
and
hlt
adc
cltd
and
sub
fmull
dec
out
xchg
andl
xchg
je
dec
das
push
clc
pop
mov
mov
mov
xor
adc
sub
shlb
and
add
push
inc
push
iret
jae
sub
repnz
imul
int3
int3
clc
data16
cmp
inc
sub
lock
add
or
or
jae
enter
add
subb
dec
add
aam
jecxz
inc
sbb
xchg
mull
scas
arpl
inc
inc
xchg
hlt
shlb
cmp
cmp
fs
xchg
jne
mov
outsl
inc
fisttps
or
les
test
inc
sbb
or
adc
pop
clc
mov
ret
xor
ret
sub
into
ret
out
fst
adc
mov
push
lcall
mov
jbe
popf
add
ret
xchg
test
dec
fwait
or
sbb
rcr
fmul
int3
xor
clc
mov
fs
pop
rorb
cmp
mov
and
ret
cmp
mov
xchg
inc
adc
jp
add
sub
inc
imul
or
pop
jo
and
addr16
mov
in
mov
push
test
xlat
cmp
pop
clc
clc
ss
je
clc
addr16
ret
push
pushf
or
jne
dec
jl
bound
dec
mov
negl
insl
js
and
jbe
lea
push
inc
pop
adc
faddp
iret
mov
sub
repz
js
mov
scas
mov
jbe
out
add
xchg
mov
inc
pop
imull
mov
movsb
adc
sarb
xor
imul
ljmp
roll
js
mov
loopne
int3
ret
je
mov
fsts
addb
sub
test
or
and
out
inc
repnz
sub
sbb
adc
add
mov
shlb
pop
inc
xchg
xchg
xor
cmp
inc
loopne
dec
xchg
mov
imul
adc
fcoms
clc
jecxz
sub
cmp
dec
cmp
mov
inc
stc
cmp
les
loopne
js
loope
cltd
nop
xor
test
cld
adc
fmuls
xchg
movsb
mov
sub
lods
es
jecxz
icebp
add
mov
push
shll
dec
and
repnz
sub
ljmpw
loopnew
fsubrs
inc
pusha
add
hlt
and
add
jne
xor
mov
cld
hlt
sbb
aam
xchg
cmp
call
push
lahf
les
loopne
cmp
sub
aas
cmpsb
inc
inc
in
adc
arpl
inc
in
inc
pop
sub
mov
push
adc
shrb
add
jmp
adc
lods
mov
mov
rcrb
and
js
or
add
mov
call
mov
mov
scas
or
mov
rorb
insl
aaa
rcrb
adc
mov
xor
add
jp
test
sbb
sbb
mov
xor
inc
sub
add
loop
aam
mov
mov
jp
push
and
push
adc
rolb
rcr
dec
pop
adc
add
pop
mov
add
aaa
jns
aas
add
or
nop
sub
es
pop
mov
xor
add
and
or
insl
or
xor
pop
mov
inc
shr
test
add
pop
push
pop
iret
dec
cs
dec
decl
sbb
and
dec
aaa
test
insl
mov
mov
dec
push
jp
js
mov
jno
emms
pop
outsb
and
call
add
and
negb
lret
js
xor
or
shll
jbe
loope
nop
mov
add
mov
insl
arpl
fs
xchg
arpl
sbb
add
test
xchg
adcl
xor
jo
insl
and
mov
ret
orl
mov
jo
mov
lcall
pop
pop
fst
fsts
pop
mov
push
pusha
xor
adc
mov
xchg
add
rolb
mov
or
or
cld
nop
pusha
add
jns
enter
xorb
cmp
mov
jbe
adc
andl
cltd
rorl
loopne
cmp
mov
or
cmc
mov
add
es
or
dec
fists
adc
jnp
lahf
add
sub
inc
add
pop
push
and
int3
push
test
mov
shlb
imul
or
sub
bnd
test
ret
incl
and
push
push
les
and
dec
and
xor
dec
lock
inc
or
add
add
adc
addb
add
imul
inc
and
adc
or
insl
das
add
mov
adc
inc
test
nop
sbb
inc
add
add
mov
add
add
and
in
and
add
outsb
loopne
test
mov
bound
inc
adc
int
add
clc
adc
in
sbb
add
inc
cmp
int
pusha
inc
adc
mov
sahf
fistpl
add
nop
bound
pusha
jb
repnz
add
push
shlb
loop
dec
inc
cs
inc
repnz
jo
insl
add
mov
test
sbb
loop
cs
cmpsb
mov
inc
into
mov
shlb
pop
add
pop
mov
add
in
test
and
fimull
pop
call
rcrl
jbe
push
adc
inc
inc
and
xor
add
sti
lods
or
xor
mov
add
lret
inc
adc
loope
add
cmp
inc
cmpsb
pusha
push
pusha
out
adc
xor
enter
xor
pop
addl
nop
repnz
addb
shl
mov
or
mov
insb
es
push
repnz
or
pop
pusha
push
inc
xor
add
lcall
inc
mov
or
rorl
shrl
push
mov
loopne
adc
or
inc
sahf
test
dec
jl
add
xor
pushf
ljmp
or
and
sub
pop
lcall
dec
inc
xlat
add
push
fsubs
jl
aam
mov
call
loopne
pop
inc
dec
nop
push
push
outsb
sbbb
cmpsb
mov
mov
mov
fisubl
rolb
inc
into
test
pop
addb
dec
inc
adc
test
ss
xchg
and
mov
notb
or
mov
inc
mov
cmp
adc
popa
push
and
dec
xor
popa
or
call
nop
sub
hlt
push
dec
pop
push
adc
inc
je
push
test
inc
push
dec
pusha
bsf
push
xchg
lods
testb
jl
ret
mov
add
lods
or
inc
inc
movsb
and
je
cwtl
sbb
into
pop
test
dec
popa
adc
push
sbbl
pusha
mov
xor
pop
inc
xchg
test
lret
mov
lcall
adc
push
int3
jp
push
loopne
inc
popf
sbb
cmp
mov
inc
push
mov
nop
ss
rcrb
ret
ret
subb
es
mov
popa
or
lcall
fiadds
data16
inc
push
xor
or
mov
es
push
jge
popf
add
xor
lcall
cltd
les
and
inc
test
inc
inc
push
or
fmul
or
add
dec
mov
mov
mov
adcb
cwtl
or
ret
call
les
and
pop
dec
mov
push
ss
cmp
nop
cmp
mov
inc
and
xchg
add
xor
jecxz
mov
xor
data16
call
or
ds
test
add
and
dec
or
test
lret
rolb
data16
add
inc
adc
inc
pop
out
movsb
rclb
xorb
nop
push
pop
push
pop
inc
cmp
inc
mov
add
cmp
mov
jo
stos
sbb
out
pop
test
lcall
ret
lock
add
or
push
out
inc
repnz
mov
add
outsb
add
ss
loop
mov
cli
cmp
orl
xchg
xchg
add
outsb
popa
pop
push
sub
outsb
mov
or
inc
stos
add
sub
mov
loopne
and
call
add
fs
imul
fs
rorb
nop
or
inc
mov
or
fdivrl
sbb
adc
push
xor
or
call
push
dec
stc
add
ss
mov
lock
rcrb
cmp
sbb
push
and
xor
lcall
add
test
pop
sbb
and
xor
mov
mov
movsb
jo
sbb
inc
cmp
ss
or
sbb
add
push
cmpsb
bound
test
sub
inc
add
daa
cmp
and
out
loop
rorb
adc
cld
bound
mov
bound
pop
cwtl
sub
or
xor
test
cmp
push
push
sbb
in
out
xor
sbb
pushf
push
cwtl
ss
jp
sbb
sbb
ds
imulb
mov
jb
xor
dec
xor
pusha
mov
lret
add
mov
out
cli
and
bound
pusha
mov
test
popa
fs
push
cmp
or
sbb
and
jns
mov
and
mov
out
test
add
insb
out
nop
push
fmul
push
adc
mov
or
xchg
xchg
push
inc
nop
test
ror
xor
inc
loopne
cwtl
add
in
sub
cmpsb
and
sbb
push
btr
add
xchg
outsb
packssdw
stos
add
inc
add
je
pop
push
add
sub
add
xlat
dec
pusha
das
mov
sub
xor
or
ss
sub
add
cmpsl
cmpl
testb
addl
mov
cltd
enter
rorb
pusha
popa
aaa
push
and
cwtl
ljmp
inc
and
icebp
push
inc
data16
in
jns
add
js
push
adc
or
push
jp
pop
dec
add
callw
ss
rcr
ds
dec
or
push
mov
loop
dec
inc
mov
xor
call
inc
xchg
or
add
push
jo
sbb
inc
and
xchg
test
enter
xor
jnp
dec
xchg
and
cmp
adc
sub
icebp
inc
adc
loopne
nop
or
movsl
cmpb
sbb
xor
cs
sbb
add
test
pop
aam
xor
pop
or
jl
cmp
arpl
mov
shlb
push
dec
divl
cmp
inc
lret
adc
pop
push
cmpsl
and
or
dec
push
sbb
sbb
jae
sahf
push
pop
test
mov
inc
or
or
cmpsb
movsl
lret
mov
shrl
nop
dec
cmc
inc
loopne
add
pusha
push
or
clc
bound
adc
mov
sbb
mov
js
inc
rorb
push
pop
pop
out
ss
xchg
sub
insb
aam
inc
adc
xor
mov
fld
mov
and
mov
adc
or
mov
fmuls
cmp
pusha
lods
push
out
es
fs
cwtl
add
mov
scas
popl
dec
or
inc
test
or
cmpsb
inc
movsb
and
xor
insb
push
mov
fcmove
pusha
stos
adc
xor
push
rolb
mov
mov
inc
adc
test
call
jbe
aam
add
or
push
addl
cmc
out
lock
inc
add
scas
jle
daa
adc
ret
hlt
and
cmpsb
inc
add
adcb
pop
xor
xor
fsubrs
mov
pusha
lret
mov
jo
push
inc
jl
pop
sbb
orb
aam
into
cmp
mov
scas
jnp
inc
rorb
rolb
sarb
fxch
fiadds
mov
jo
insb
in
stc
jl
inc
pop
xor
je
int3
mov
sahf
add
faddl
cmpsl
pop
push
loop
and
mov
push
jbe
test
add
or
or
cmp
xchg
in
inc
xor
ficoml
add
inc
jo
nop
pushf
adc
and
jbe
inc
popa
add
mov
xor
dec
ljmp
dec
xor
rol
ss
mov
rcrl
or
cld
xor
mov
inc
add
lods
push
lcall
pusha
scas
inc
mov
cmp
mov
insb
outsb
mov
mov
test
adc
js
hlt
je
add
xor
arpl
pushf
inc
lock
roll
push
cwtl
sbbb
sbbb
xor
add
dec
add
js
lods
insb
icebp
jne
mov
fs
add
scas
movsl
sbbb
popa
in
jle
push
add
mov
jle
inc
adc
adcl
add
cmp
inc
out
cwtl
cmp
mov
mov
cmpsb
xor
pop
add
add
sbb
js
jp
incl
scas
pop
cmp
jl
jp
les
add
icebp
ret
mov
incl
repnz
add
sub
je
jge
add
sahf
pop
icebp
adc
lds
scas
and
scas
fidivrl
add
sub
add
outsl
ja
or
adc
int3
cli
leave
shr
push
mov
ljmp
mov
sub
and
int3
add
das
ret
add
mov
lock
mov
dec
inc
iret
mov
ja
jmp
popf
xorb
ja
or
icebp
mov
add
sbb
mov
rcl
mov
and
or
fbstp
push
or
dec
sbb
ljmp
inc
and
mov
test
pusha
add
add
sub
call
push
mov
pop
lret
pop
add
and
push
pusha
sti
push
mov
dec
mov
int
add
bound
cmpsb
xor
xchg
add
add
inc
jl
cmpsl
daa
or
xchg
cmpxchg
push
mov
add
jle
negl
sarl
ja
incl
out
lcall
sti
cmp
push
add
pop
cld
decl
jae
addb
lahf
clc
sbb
sarl
repnz
cltd
mov
imull
xor
pop
add
sbb
scas
rcl
cmp
jp
stos
inc
incl
cwtl
and
lret
mov
jae
fidivl
pop
cmpsl
add
mov
incl
add
pop
mov
sbbb
bound
push
inc
adc
in
lcall
bound
in
fs
pop
adc
roll
sub
push
data16
in
jo
mov
xor
cmc
mov
jb
nop
and
pusha
data16
mov
ret
cld
dec
call
fcom
fwait
or
std
adcb
and
add
sub
mov
push
push
inc
jne
push
dec
xor
xchg
add
int
mov
push
and
aam
add
pushf
cltd
jl
ljmp
incl
pop
addl
rcrb
shrb
mov
idiv
ret
in
mov
and
add
sarb
add
cs
mov
in
sbb
push
pusha
or
pop
adc
pushl
faddl
push
pushf
popa
add
mov
jecxz
mov
mov
pop
and
inc
mulb
rol
push
pop
sbb
fs
incl
xchg
dec
ss
sahf
add
add
lods
retw
pop
mov
mov
xlat
fbld
les
dec
shll
and
and
pop
lea
stos
rcll
aam
add
loopne
inc
mov
or
or
pop
mov
mov
push
mov
outsl
mov
mov
ljmp
clc
adc
push
or
add
push
cmc
and
add
mov
lret
inc
adc
rorb
inc
icebp
lea
add
movswl
pushl
dec
pusha
cmp
dec
jo
mull
pop
push
sbb
mov
xor
cmp
cli
xor
xchg
mov
push
mov
add
pop
hlt
jg
inc
sbb
ret
mov
jl
lods
add
test
sub
cmp
adc
aam
movsb
lahf
mov
gs
jge
loopne
jp
sarb
adc
dec
add
inc
and
or
dec
rcrl
decb
incb
mov
sbb
push
les
inc
clc
movsb
das
push
add
iret
scas
cld
decl
aam
and
inc
insl
fnstcw
add
and
inc
jge
fsubp
add
add
arpl
jns
push
cld
decl
push
daa
xchg
in
addl
xor
adc
adc
fiadds
sti
incb
test
adc
xlat
aas
scas
dec
mov
in
out
fdivrp
and
or
fisubrl
rorb
inc
jg
jg
sbb
aas
fimuls
adc
xchg
dec
mov
mov
push
shr
jle
add
dec
mov
inc
testb
cli
lahf
pop
cmp
shll
inc
sbb
in
cmp
das
jp
jnp
sub
push
push
mov
arpl
jno
pop
nop
cltd
add
inc
jle
pushl
adc
cmp
inc
test
clc
rolb
scas
push
addr16
xchg
mulb
add
or
inc
shlb
dec
mov
mov
lcall
sub
jmp
adc
stos
popf
xcrypt-cfb
cmpsl
data16
mov
mov
lds
inc
arpl
dec
filds
mov
dec
push
or
pushl
cli
ja
jo
daa
add
xchg
add
cmp
loopne
adc
and
repnz
gs
push
cld
loopne
mov
dec
jne
sbb
inc
rorb
repz
notb
or
pushf
pop
inc
add
jg
clc
adc
push
xor
mov
out
add
fistpll
insl
push
adc
sub
notb
enter
les
ds
inc
pop
xchg
cld
pslld
std
lret
out
adc
mov
dec
lret
jg
in
and
mov
arpl
mov
mov
jo
daa
in
lahf
decl
shl
push
mov
sub
and
cltd
inc
xor
stc
aam
rclb
add
rolb
jmp
jg
add
mov
push
pop
lea
lea
fisubrl
rcll
std
sub
xchg
push
push
inc
add
icebp
cwtl
test
jp
mov
mov
mov
xchg
mov
mov
push
out
sbb
and
addb
mov
test
cli
out
push
jecxz
xor
imul
mov
jne
fwait
xor
sbb
xchg
test
sti
ljmp
or
int
iret
aad
or
test
adc
call
movsb
or
push
fdivs
pop
loope
mov
pop
push
dec
jmp
decl
sbb
call
pop
test
fsubl
mov
mov
mov
mov
outsb
andb
inc
sub
inc
inc
sbb
cmp
out
decl
adc
aas
lcall
int
jmp
dec
inc
fucom
test
mov
pop
push
popl
pop
xchg
notb
aaa
push
loop
push
cmp
jge
cmp
jge
in
push
xor
sbb
add
clc
mov
dec
call
adc
xchg
jae
sub
out
call
mov
enter
cmp
ja
push
xchg
aas
call
add
dec
jg
out
mov
mov
sbb
ja
adc
sti
stc
mov
test
enter
jg
and
shl
ret
sarb
in
inc
dec
rclb
stc
push
mov
sbbl
incl
andb
push
mov
pop
fstpl
xchg
inc
push
fcomip
decl
das
scas
xor
push
mov
rclb
sub
lods
cmp
adc
sar
call
gs
shrl
adc
aad
daa
mov
ret
push
pop
push
or
pop
cmpb
lahf
cmc
jb
mov
xchg
negl
sbb
cmp
lahf
rclb
test
mov
dec
sub
fsubrs
mov
shr
je
insb
inc
dec
jg
into
jne
adc
or
dec
cmp
mov
pop
pop
out
hlt
pop
inc
mov
scas
fsts
and
sbb
int
sub
data16
mov
enter
jl
push
add
mov
adc
fcmovnb
cmp
sti
sbb
frstor
mov
jae
adc
push
mov
test
in
sbb
iret
inc
add
dec
add
xchg
sub
gs
adc
adc
hlt
aas
sbb
movl
jp
and
popa
enter
cld
sub
in
arpl
cwtl
lcall
pop
ss
aaa
jmp
inc
mov
or
cmp
jge
xor
xchg
xchg
fmul
call
xor
outsl
inc
cmp
dec
repnz
sub
pusha
popf
mov
inc
adc
es
fistpl
mov
test
and
test
mov
adc
std
jbe
sub
cld
dec
xor
stos
loope
add
jmp
add
das
in
dec
xor
js
adc
in
adc
cmp
scas
inc
xor
jmp
pop
dec
jne
lcall
mov
sti
lock
movsb
imul
pop
or
aas
loopne
adc
pop
or
stos
les
push
mov
cwtl
cmp
inc
negl
and
or
fdiv
lea
enter
mov
xchg
into
sub
icebp
add
jg
inc
cmpsb
xchg
inc
mov
inc
sub
cld
pop
into
cltd
and
sbb
dec
push
mov
xchg
sub
jnp
push
and
cmpsb
stc
ljmp
push
mov
shrl
mov
lock
cmp
popa
lret
add
inc
ds
push
mov
int3
xor
aad
add
aad
int
jb
imull
jne
cmp
xchg
mov
cld
mov
dec
add
out
scas
fiaddl
mov
add
dec
in
mov
decl
inc
mov
idivb
pop
dec
pop
in
int
pop
test
incl
sbb
mov
stos
pop
div
pop
call
outsb
pop
push
inc
jg
sti
pop
mov
cs
nop
in
test
movsl
in
clc
call
xchg
add
shlb
rorb
add
and
cld
pop
xor
incl
fbstp
call
adc
repz
shl
test
dec
adc
sbbb
mov
dec
rcll
mov
icebp
adc
mov
adc
push
xor
push
pop
lock
push
jp
stos
rolb
pop
jecxz
lcall
sbbb
stos
sbb
mov
adc
mov
mov
or
cld
ss
loop
in
and
sbb
sbb
loopne
xor
in
divb
adc
push
decl
xor
dec
imul
mov
imul
dec
add
adc
jno
and
stos
dec
inc
sar
loope
out
push
stos
jg
aas
add
aam
ljmp
test
adc
incl
mov
cmp
or
xchg
xor
or
inc
push
out
decl
mov
pop
aas
jp
imul
pop
icebp
mov
pushl
std
mov
cmp
push
lea
xchg
repnz
cmp
out
xchg
insb
pop
push
push
enter
mov
pop
icebp
ljmp
add
mov
jb
fidivs
gs
sub
mov
xor
push
jo
stos
les
adc
jl
mov
xchg
xchg
mov
jle
lahf
das
cli
mov
cwtl
xor
mov
inc
loope
pop
cmp
cmp
test
cmp
xor
out
les
enter
in
mov
fstl
fisttpll
add
mov
les
ret
cmp
and
loope
jecxz
rorl
xchg
leave
lea
mov
mov
mov
outsb
add
movsb
fsubs
shll
test
insb
pop
sti
arpl
scas
addb
jmp
aam
cmp
cld
and
pop
adc
xchg
pusha
nop
in
stos
mov
mov
mov
or
sti
lods
push
repz
inc
xorb
and
inc
or
cwtl
int3
ss
js
in
and
push
shl
push
adc
mov
dec
out
shl
push
xchg
inc
sbb
popf
mov
xchg
jo
and
pop
int
aas
and
pop
add
inc
sub
and
xchg
and
xchg
mov
cmp
sbb
ljmp
sub
in
add
inc
outsb
mov
movsl
std
add
add
and
cld
in
testl
jmp
iret
push
test
aad
sbb
xor
dec
inc
ret
or
push
and
jecxz
push
push
aaa
cmc
lods
add
ljmp
pop
add
call
stos
mov
push
dec
or
mov
adc
push
in
sbb
pop
push
or
ljmp
add
lock
add
hlt
fs
mov
inc
je
adc
cltd
cmp
mov
iret
subb
add
bound
aas
jp
mov
adc
cld
and
cmp
mov
jg
jo
lret
incb
incl
push
js
stc
mov
movsb
loope
jae
outsl
sbb
mov
cmp
les
insb
jno
jne
out
pop
es
fildll
cmc
dec
in
call
adc
shll
ds
aas
stos
xor
lahf
fnstenv
test
call
hlt
loopne
push
dec
push
pop
idivb
mov
movsl
and
leave
xor
add
inc
out
dec
mov
jmp
inc
imul
std
and
xor
icebp
ret
push
dec
fs
inc
push
push
cmpsl
and
fistl
and
test
mov
jle
imul
mov
and
pop
cmp
loope
pop
mov
adc
cld
aaa
ret
sbb
icebp
clc
fldl
xor
test
pop
sub
cmpsb
jo
clc
notl
mov
lret
arpl
mov
popf
mov
cmpsb
sub
hlt
cs
dec
xor
dec
push
xchg
xor
mov
les
aad
call
scas
mov
popf
fsubr
jo
push
daa
cmp
pop
push
incl
bound
fwait
cmp
and
test
mov
mov
sbb
inc
orl
add
xor
cld
scas
cli
inc
outsl
dec
cli
fmull
push
imul
xchg
ret
ret
iret
aas
loopne
std
dec
and
fs
mov
adc
fldenv
ljmp
mov
mov
push
gs
addb
lock
repnz
adc
repnz
inc
add
in
mov
mov
mov
sub
cmp
mov
test
and
stos
ds
sahf
lret
je
mov
rorb
xchg
ljmp
or
push
lods
lods
mov
inc
js
pushl
jmp
push
repnz
inc
or
iret
pop
mov
je
and
lcall
ljmp
jge
mov
ljmp
adc
decl
push
adc
pop
push
lods
and
adc
std
add
add
test
bound
mov
ljmp
or
adc
push
or
xchg
in
in
insb
adcb
cmpsb
push
jecxz
mov
mov
add
jg
xor
into
std
mov
inc
mov
pmulhw
jge
mov
clc
sti
mov
stos
cmpl
jmp
sbb
mov
ja
cld
jo
sbbb
add
push
loop
jge
dec
std
push
dec
xor
cli
hlt
in
add
out
dec
adc
inc
outsl
jg
mov
or
mov
loopne
adcb
add
jg
hlt
call
jge
inc
cli
adc
cwtl
mov
cmc
add
mov
mov
fwait
push
cmp
xchg
pop
pushf
sbb
jne
and
outsb
cwtl
clc
sub
jl
hlt
inc
leave
idivl
imul
push
xchg
add
call
inc
mov
rcrl
and
arpl
add
jg
aaa
mov
repz
cmp
std
pop
jnp
ja
pop
mov
add
out
cmp
mov
jg
addr16
add
cmc
lcall
fs
outsb
sub
add
inc
shr
loopne
hlt
test
push
lcall
sbb
lcall
rclb
mov
sti
add
mov
dec
je
je
leave
fisubl
stc
pushl
inc
mov
out
dec
jecxz
inc
sti
inc
popa
ret
cli
popa
and
lcall
loopne
cmpb
call
lods
cli
ja
or
fidivl
jb
test
adc
repz
sub
stc
clc
push
fs
mov
add
and
out
jne
fdiv
dec
hlt
and
sar
hlt
jmp
adcb
or
adc
cmpsb
stc
pop
push
jo
mov
add
sub
ret
ljmp
stos
cmp
xchg
pop
sti
popa
and
je
jp
lea
fcomip
call
mov
cmp
les
sub
adc
ret
xchg
std
or
lock
cmp
imul
nop
out
add
xlat
mov
mov
rorl
xchg
jg
fnstsw
and
push
jecxz
xor
leave
pop
add
dec
pop
xchg
adc
pop
insl
mov
aaa
inc
push
addl
inc
pushl
adc
mov
mov
das
icebp
mov
inc
or
cwtl
cmp
or
decl
imul
sbb
cld
lahf
in
push
test
mov
mov
xchg
push
xchg
cmc
shll
es
cmp
add
add
iret
rorl
pop
or
fadd
add
or
adc
dec
add
push
int3
test
jnp
mov
dec
sbb
add
dec
mov
in
xor
sbb
dec
add
jge
and
dec
pop
cld
sbb
add
push
push
mov
data16
test
mov
cmp
sbb
mulb
fildll
push
js
cmp
sbb
pop
or
popf
jg
loopne
jmp
inc
aad
inc
out
subb
xor
dec
out
fstpt
adc
out
jno
int3
pop
hlt
jo
stc
xor
pop
mov
sbb
xor
cli
and
sbb
xchg
sub
mov
mov
and
pusha
xchg
jmp
or
push
cmp
sbb
pop
cmp
xor
cmp
in
cmp
out
ret
mov
jnp
imul
inc
inc
or
cld
add
sub
cltd
jns
dec
in
cmpsb
imul
push
cld
and
push
mov
or
iret
or
jo
mov
mov
mov
jne
cmp
xlat
sbb
add
ljmp
rcll
add
dec
es
aaa
cmpsb
test
jl
lcallw
and
dec
sahf
or
pop
pop
std
call
sub
sarl
lods
shr
push
push
add
repz
idiv
push
jl
add
sub
sub
call
rorb
push
push
push
ret
push
mov
add
sub
and
push
mov
jbe
push
bound
mov
testb
xchg
in
push
sbb
incb
dec
inc
pusha
ja
aaa
or
repz
cmp
fisubrl
mov
scas
aam
iret
adc
or
mov
cmpsb
clts
add
inc
inc
fstpt
xor
pushf
dec
fildll
sti
insb
pushf
mov
mov
and
cmp
cmp
push
or
push
fcomip
int
in
sbb
dec
mov
mov
not
lret
pushf
adc
cmp
pop
adc
pop
loopne
ret
push
jle
jg
pop
ljmp
cmp
imul
je
cmp
xor
fisttps
dec
into
push
scas
insl
add
fiadds
fs
xor
xor
sarl
add
in
ss
jno
movsb
jp
decl
mov
mov
add
pop
jecxz
orb
push
xchg
add
loopne
mull
dec
sub
and
test
jbe
fildll
sub
das
mov
sub
je,pt
push
test
or
call
inc
push
aas
mov
sub
ret
stos
inc
adc
popa
jbe
xor
pushl
or
aad
lds
or
or
fwait
add
das
sar
mov
rcll
add
inc
mov
mov
sar
jmp
xchg
add
push
jbe
iret
insb
and
adc
icebp
mov
sbb
mov
cmp
jmp
out
in
leave
mov
cld
mov
scas
add
adc
data16
sub
mov
in
std
adc
push
xchg
loope
cltd
test
cmpb
mov
push
mov
xchg
rcl
test
add
xchg
jg
mov
rcrl
test
ljmp
mov
push
lods
or
loope
pusha
int
or
xchg
push
pop
jnp
test
push
cltd
aas
imul
lret
adc
sub
out
mov
test
rcrl
sub
hlt
clc
fnsave
add
xor
insl
ret
and
in
and
inc
jle
push
clc
es
outsb
dec
add
rolb
dec
leave
add
pop
mov
test
movsb
xor
jp
add
scas
ljmp
xchg
hlt
outsb
lcall
inc
push
repnz
adc
scas
popf
mov
jge
push
hlt
jo
cmpsb
and
xchg
jbe
cli
lret
mov
push
cmp
ja
mov
pop
popa
popaw
orl
es
add
and
lods
fld
je
lcall
call
insl
add
imulb
cmp
sub
lock
mov
fsubrl
xchg
stos
inc
mov
jg
mov
inc
sub
jle
mov
sti
push
add
lret
and
decl
add
sub
js
into
and
add
pop
and
in
clc
mov
add
push
sbb
push
sbb
pop
adc
call
sub
push
testb
sub
bound
dec
setbe
hlt
testb
mov
pop
sbb
sub
adc
jg
jge
mov
xchg
jg
and
daa
add
nop
mov
xchg
sbb
mov
sub
stc
pusha
xchg
jecxz
inc
iret
ret
mov
and
loop
insl
add
ljmp
mov
add
mov
es
das
clc
sbb
mov
mull
gs
xchg
inc
aas
loopne
lret
incl
sbb
and
cmp
add
repz
test
xor
push
and
xchg
idiv
dec
movsb
outsl
and
jnp
xor
add
outsb
pop
sar
ss
add
gs
xchg
mov
clc
lahf
call
inc
jecxz
ret
cmpsb
imul
cwtl
inc
daa
adc
je
es
aaa
add
pop
mov
xchg
sub
daa
mov
mov
stos
test
test
dec
dec
add
jmp
addr16
std
call
cmp
mov
ja
push
aaa
test
insl
mov
pop
push
push
test
mov
hlt
add
fisubrs
mov
jecxz
adc
add
mov
sti
mov
xchg
add
or
mov
sbbl
sbb
add
filds
in
std
out
sbb
addb
jg
cltd
sbb
push
add
add
inc
add
in
sub
jle
decl
xor
and
pusha
xor
mov
fwait
mov
sar
jg
dec
lcall
bound
rcrl
push
pop
leave
or
mov
in
sbb
mov
add
xchg
jns
ret
push
mov
fcomps
xchg
sub
pop
aaa
dec
ja
dec
lock
mov
fisubs
cld
ljmp
in
add
pop
clc
pop
andb
insl
lds
ds
pop
inc
inc
mov
sub
call
daa
call
loope
cltd
js
cli
aad
lea
dec
cmp
fiadds
push
repz
insl
lcall
lret
aas
ficomps
push
lds
push
push
mov
out
pushf
mov
lcall
stos
inc
or
rcrl
pushf
dec
fcomip
lcall
mov
imul
cmc
sub
mov
into
push
enter
idivl
faddp
outsl
incl
nop
mov
sub
sub
pop
jecxz
mov
mov
cld
out
jle
mov
and
int
popf
shl
outsl
jmp
addr16
icebp
add
sub
jns
fdivrs
gs
mov
jo
out
rolb
es
push
mov
aas
mov
jle
cwtl
xorl
std
cmp
mov
jg
scas
stos
hlt
in
pop
sub
mov
arpl
jbe
xor
pop
mov
movzbl
or
xor
or
jg
lret
sti
lds
aad
push
xchg
mov
jo
xor
jg
push
jno
xorb
cmp
jnp
pop
cmp
jg
xor
je
pushf
adc
xchg
jge
ljmp
jge
mov
mov
dec
sbb
add
inc
fcomp
jl
loop
or
js
ret
push
add
bound
sarb
xchg
mov
cld
cmpsl
push
repnz
cli
pop
inc
loopne
mov
xchg
jecxz
decl
pop
gs
and
jp
add
stc
outsl
out
filds
push
lcall
in
xchg
or
inc
sbb
dec
adc
inc
push
mov
dec
aaa
fildll
sub
shlb
popf
mov
and
or
pop
push
jbe
pop
add
cld
adc
loop
aaa
mov
cmc
dec
ret
push
cmp
pushf
outsl
outsb
call
and
add
cld
pop
icebp
shll
lea
push
push
push
repnz
mov
add
dec
icebp
pop
frstor
add
adc
rcrb
add
add
call
mov
lahf
xor
push
push
rcrl
adc
rol
jecxz
cwtl
or
clc
add
dec
test
out
and
xchg
dec
push
jl
daa
cmpsb
test
inc
repnz
push
push
mov
cmp
xchg
das
xchg
testl
shrb
push
hlt
mov
dec
sub
aas
ficoms
pop
cli
xchg
adc
mov
lods
jmp
outsl
pop
pop
pop
inc
xchg
pop
or
insl
jae
jg
add
or
or
xchg
dec
lods
test
or
xor
cmpsl
out
cs
push
call
pushf
scas
mov
aas
inc
cmpsb
push
fists
int
ss
xor
xchg
outsl
test
decl
push
fildll
shll
pop
mov
mov
cwtl
andb
je
int3
jno
pop
add
sub
pop
adc
rorb
adc
sub
mov
push
dec
int3
cmp
mov
pop
xor
shl
mov
fisubl
jmp
mov
rolb
lret
add
and
in
mov
outsl
ljmp
sbb
add
jno
lret
test
adc
pop
imul
mov
sub
fwait
jecxz
mov
pop
or
cltd
fdivrs
sbb
pushl
add
mov
int3
call
bound
mov
inc
xchg
mov
add
push
mov
lods
xchg
es
clc
adc
negb
loopne
sub
pop
inc
lods
add
cltd
mov
add
push
or
jnp
pushf
dec
push
mov
adc
out
cmp
adc
das
clc
pop
std
test
adc
cmpb
inc
les
dec
pop
mov
sbb
push
fmul
inc
adc
mov
xchg
mov
repnz
les
enter
inc
fdivs
pop
repz
xor
sbb
or
je
inc
jae
sub
push
add
push
in
push
lods
inc
outsb
sub
dec
aaa
xor
or
push
das
jmp
outsb
xchg
mov
sbb
xor
rcrb
jl
hlt
gs
lcall
lahf
out
add
shl
mov
ret
jo
jecxz
mov
push
ljmp
mov
hlt
cmp
lea
lods
adc
or
es
cmp
incl
gs
adc
jbe
push
xor
cmc
addr16
ret
decl
mov
pop
jecxz
pop
xor
fbld
sbb
push
pop
push
in
adc
out
mov
pop
adc
push
jbe
mov
ljmp
push
cld
push
fadds
mov
xor
popa
ret
ds
test
popa
mov
rcrb
movl
ljmp
cmc
arpl
add
enter
dec
imul
das
lods
mov
pop
jge
adc
fwait
cmp
sahf
mov
lahf
push
insb
out
inc
test
inc
sbb
scas
mov
mov
jecxz
xor
lds
lret
or
mov
sbb
sub
addr16
cmpsl
xchg
or
bound
cmp
sbb
orb
sbb
jge
adc
mov
mov
pop
mov
mov
pop
xchg
cltd
pop
cwtl
idivb
mov
add
test
mov
push
fwait
push
andl
ret
andb
add
pusha
adc
mov
insb
and
das
clc
mov
out
add
sbb
adc
inc
shrb
ror
ljmp
pushf
add
inc
mov
xor
inc
out
and
pop
adc
decb
loopne
adc
xchg
lock
bound
testb
xor
cld
insl
mov
sahf
add
fcompl
ret
incl
cmp
dec
jo
mov
pop
mov
jg
pop
repz
and
push
and
std
add
in
fwait
out
in
or
mov
inc
loopne
mov
push
ret
arpl
mov
mov
adc
jg
mov
rorb
add
test
test
into
cmpsl
mov
popf
xor
decl
mov
xchg
and
subb
out
add
test
aaa
mov
insb
dec
std
ja
das
pop
sub
shlb
or
repz
and
and
fsubrl
cmp
stc
cwtl
adc
scas
pop
adc
and
pop
xchg
push
push
hlt
rolb
cmp
clc
adcl
jl
nop
in
mov
loop
pop
daa
in
cwtl
inc
xchg
aad
dec
or
add
xchg
jno
call
lret
mov
xchg
je
xor
fadds
call
xchg
or
aaa
cld
insb
lds
shlb
leave
sub
add
call
iret
sbbb
jmp
clc
inc
push
out
jbe
adc
sar
jg
and
test
lods
popf
sbb
sar
pushf
test
imul
aaa
sbb
ds
add
push
into
dec
and
add
std
xorb
imul
fcmove
out
inc
inc
cmp
push
sub
mov
shlb
mov
mov
std
and
jl
test
call
out
ljmp
pushl
cmc
adc
xchg
icebp
jg
mov
int
jl
jecxz
mov
rcrl
dec
out
pop
adc
or
fbstp
xor
insb
xor
or
cmpsl
loopne
mov
and
inc
inc
mov
inc
leave
add
rorl
add
cs
jg
cmp
jbe
lock
adc
dec
cmp
sti
sbbb
incl
loopne
jecxz
popa
outsl
cmpsb
das
lods
adc
bound
and
fiadds
out
test
sti
out
add
cmpsb
arpl
xor
mov
cltd
shlb
ss
ret
pushl
and
es
and
xor
jecxz
out
mov
in
movsl
int3
je
cld
jg
sbb
pop
adc
outsb
test
add
leave
mov
pop
lcall
cltd
lahf
into
sub
or
inc
ja
fidivrs
push
sbb
daa
arpl
stc
adc
or
loopne
adc
js
push
call
jecxz
xchg
movsl
mov
test
out
pushf
lcall
jecxz
inc
imul
es
xchg
add
orl
sbb
xor
outsl
push
pushl
xchg
scas
xchg
adc
and
fisubl
sahf
movsb
cmp
push
rol
stos
dec
sub
call
push
ror
jg
lock
sub
add
shr
jge
lcall
mov
inc
sub
add
std
addb
pmulhuw
fists
sbb
cwtl
je
sarb
out
loop
xchg
sub
pop
pushl
dec
andb
add
xchg
pop
cmp
and
push
nop
jp
mov
pop
inc
push
mov
aam
dec
lcall
shlb
mov
movsl
add
rcrb
je
movsl
arpl
lcall
cmp
pushw
xchg
jmp
mov
jg
fbstp
std
jo
sbb
ss
sub
loope
and
pop
pop
cmpsb
dec
and
ficompl
outsb
jl
and
repz
dec
mov
aad
in
push
std
scas
sub
icebp
out
mov
push
cs
out
icebp
jmp
lcall
cmp
clc
add
mov
or
imul
mov
pop
in
dec
adc
int3
xchg
push
adc
or
jg
sti
or
loopne
out
enter
adc
inc
jg
outsl
dec
ficompl
or
iret
cmpsb
or
in
cmpsl
xchg
add
ljmp
xchg
mov
pusha
je
xchg
sbb
and
sbb
bound
add
in
repz
call
cs
dec
xor
sbb
fcomip
call
repnz
or
add
out
ss
jp
std
sub
or
adc
orl
testb
incb
icebp
xor
sub
insb
out
mov
cmpsb
jle
pusha
jl
je
test
sbb
jle
xor
mov
aas
add
sub
sub
in
pop
jp
fildl
call
inc
test
mov
mov
pushf
icebp
lds
scas
addl
ret
and
dec
scas
imul
leave
jp
sub
and
sbb
inc
cld
ljmp
push
dec
pusha
mov
adc
adc
es
push
lcall
addb
pusha
push
push
push
ds
pusha
inc
xchg
rclb
mov
insb
mov
xor
inc
sub
jge
out
ret
decl
or
add
stos
xorb
cmp
inc
and
add
inc
clc
icebp
mov
out
rorb
mov
add
enter
or
pop
cmpsb
pusha
adc
movsb
lahf
lock
test
fmull
and
out
xchg
push
add
mov
jmp
ret
add
into
lret
add
int
mov
int
out
roll
fsubrl
inc
sub
add
mov
push
lea
ljmp
sub
cmp
xchg
movl
incb
ret
xor
and
ja
jmp
push
cmpsb
or
xor
mov
cwtl
xchg
ret
sbbl
jecxz
xlat
and
pop
xor
test
in
add
jbe
sub
mov
xlat
add
push
adc
mov
jb
aam
jne
jge
jb
push
mov
shrb
jae
inc
push
mov
sub
pop
lcall
popf
les
add
push
lock
jp
cmp
pushf
lahf
add
call
stos
sbb
adc
or
fisubl
cltd
mov
incl
pop
xor
push
add
mov
repnz
cmpsb
ljmp
hlt
jg
xorb
icebp
mov
xor
cs
imull
dec
test
mov
xchg
add
imull
stc
ja
out
out
jg
sbb
add
sub
lods
cltd
notl
sub
jl
mov
inc
test
pop
xchg
pop
pop
inc
ja
pop
lcall
rcl
mov
dec
adc
jno
xor
sub
ja
dec
cmpb
fldcw
add
lock
sti
add
or
push
in
insb
clc
lock
xor
pop
adc
fisttpl
mov
nop
test
xchg
pop
into
dec
jmp
ljmp
cld
mov
mov
jmp
into
sbb
sub
cmp
loope
jnp
xchg
mov
lods
pop
push
les
je
mov
cmpsb
xchg
push
jle
fldl
sub
jle
inc
decl
mov
std
jp
sub
push
mov
add
mov
cs
in
incl
cs
stos
push
daa
pop
adc
mov
mov
add
jg
loope
and
xorb
add
add
inc
call
cmp
mov
inc
mov
mov
push
or
shlb
scas
push
jbe
popa
fs
lcall
push
imul
sbb
adc
daa
cltd
arpl
push
xor
shll
sub
jb
add
rolb
mov
ds
aad
cmp
add
jg
inc
repnz
push
push
add
imul
jmp
sub
cmp
in
dec
loopne
cmc
mov
fcoms
scas
add
push
lock
loope
mov
lahf
mov
or
cwtl
ljmp
inc
outsb
mov
xchg
cmpsl
mov
arpl
push
aas
ret
add
push
je
sbb
cmp
das
or
test
mov
cmp
cmc
ucomiss
mov
pop
push
mov
mov
jmp
aad
dec
lea
and
fisubrs
insl
inc
cld
sub
cltd
cs
adc
out
repz
js
dec
push
loopne
mov
xchg
inc
sbb
adc
aas
add
or
enter
sub
es
and
pop
jecxz
add
adc
mov
inc
sub
fsubs
sahf
in
movsl
mov
pop
aaa
enter
xor
adc
mov
sbb
and
pop
sbb
aam
shlb
iret
mov
notb
decl
lock
pop
mulb
xor
push
lret
movsb
add
out
inc
and
mov
jg
dec
jne
add
adc
pop
xor
cmp
and
incl
sbb
repnz
loopne
mov
or
lock
insl
loop
les
or
sub
push
lret
in
dec
popa
lcall
clc
xchg
adc
loopne
fstpl
xchg
sub
lods
sub
mov
cwtl
cmp
and
sbb
lods
sbb
fcomip
call
mov
sub
mov
dec
cltd
lahf
lret
inc
dec
adc
clc
pop
mov
movsb
xlat
sbb
pushl
fisubrs
cli
push
imul
inc
mov
loopne
aam
je
push
dec
cwtl
jnp
push
xlat
es
sbb
jp
sub
in
pop
xchg
rcrl
adc
fmull
sbb
inc
mov
popf
mov
push
push
cmp
sub
mov
test
pushl
lret
int3
pop
jle
decl
shrl
jge
push
stc
daa
jo
in
ret
lahf
ds
mov
sbbb
push
pop
sbb
sbb
cmp
inc
std
dec
lock
mov
decl
xor
out
jp
jmp
lods
lods
ret
adc
or
jg
loop
sbb
imul
cmpsb
clc
dec
scas
rolb
mov
dec
mov
lds
sub
inc
repz
ljmp
enter
imul
pop
js
jbe
mov
push
xchg
inc
in
in
lret
jns
mov
aam
jecxz
roll
jmp
adc
scas
mov
jle
enter
mov
dec
pop
jbe
clc
popa
ss
jb
fdivrl
lcall
mov
cmp
imul
pop
jb
cmp
jg
in
xor
or
cmc
incl
sbb
cmpsb
or
in
mov
sub
loop
push
aas
lcall
or
aad
into
xchg
icebp
mov
mul
popf
movsb
mov
ja
roll
or
mov
xor
nop
mov
or
fimull
push
nopl
cmp
loop
call
lahf
addr16
or
push
or
jns
lock
sbb
out
pushf
lcall
std
pop
pop
scas
int3
sbb
mov
mov
test
sbb
inc
mov
jg
in
push
sbb
divl
mov
and
mov
dec
gs
fmuls
jmp
xchg
adc
sbb
xor
mov
add
stos
and
pushl
popf
in
push
xor
dec
mov
cmp
push
out
mov
rcl
or
fabs
add
sbb
sub
adc
inc
pusha
mov
in
sti
push
inc
and
int3
and
pusha
xchg
jmp
mov
adc
sahf
jmp
aas
repnz
inc
fwait
mov
arpl
sbb
jmp
loopne
in
or
mov
bound
jns
xor
push
neg
pop
das
pop
push
scas
repz
aam
stos
popf
push
lahf
fidivs
cs
orb
mov
dec
mov
cltd
push
lcall
es
jae
lods
mov
cmc
scas
add
lcall
inc
xor
mov
add
dec
ss
lods
adc
ljmp
es
add
or
lahf
cmp
sbb
xchg
daa
aam
iret
mov
mov
push
cmpsw
scas
and
mov
inc
push
fldl
sub
lock
stc
sbb
mov
push
imul
jns
and
pop
cmp
pop
push
ljmp
inc
xchg
cld
andl
push
and
cmp
add
and
mov
call
out
fdiv
inc
inc
shll
lahf
xchg
iret
in
lock
cmp
or
mov
shr
stos
mov
dec
decl
call
adc
xor
xor
jg
push
testb
aad
xor
call
pop
out
loopne
add
pop
andb
call
dec
leave
or
sub
fstl
mov
call
push
mov
outsb
or
ficomps
or
bound
or
sub
ud0
mov
dec
mov
push
jp
mov
pop
add
lret
xor
mov
pop
in
ljmp
inc
arpl
cmp
mov
or
and
imul
jmp
and
mov
jl
jb
dec
xor
int
in
dec
jg
and
xor
scas
or
adc
xchg
dec
adc
jecxz
and
jno
push
loopne
call
mov
sti
push
dec
ret
lcall
imul
lds
inc
mov
jecxz
repz
das
stos
iret
cld
mov
fdivrs
or
hlt
mov
adc
jmp
xor
add
cli
sahf
push
addr16
ds
inc
pop
inc
add
lock
ds
repz
out
std
repnz
test
dec
push
mov
icebp
mov
cmp
or
xlat
push
push
or
dec
stc
ja
lcall
cltd
cmp
fcmovne
xchg
mov
fistps
mov
test
in
mov
mov
mov
fs
lock
nop
jg
inc
aam
mov
repnz
incl
nop
lock
fldenv
pop
out
cmpsb
adc
outsl
ret
dec
stos
out
xlat
inc
dec
lock
fsubrs
jg
jmp
sbb
push
hlt
jo
jae
lret
dec
jg
lea
xchg
shlb
or
pushl
popa
subb
rcl
popf
adc
and
lret
xchg
dec
jle
negl
pop
movsl
test
cmpsb
lds
jl
push
aam
cld
movsb
lahf
mov
inc
punpckhdq
iret
mov
xchg
jp
test
test
dec
cmp
sbb
jg
std
enter
test
push
inc
sub
hlt
call
out
lahf
shll
mov
lcall
inc
les
jmp
mov
sub
leave
xor
mov
scas
aam
movsb
adc
push
add
mov
push
jmp
mov
incl
cld
jmp
mov
and
push
xor
outsl
adc
mov
ljmp
fcompl
jl
dec
jle
xchg
lods
push
adc
lock
mov
sub
decl
dec
push
xchg
dec
gs
les
dec
sbb
fisttpll
arpl
sbb
decl
insb
sub
jno
pushf
xchg
mov
outsl
pop
hlt
or
sub
lcall
inc
pop
xor
incl
adc
pop
dec
aas
dec
push
push
pop
popa
cld
or
xor
sbbl
or
jb
decl
push
shrb
push
add
stos
mov
add
mov
hlt
push
and
adc
or
daa
cmp
mov
movsl
dec
pop
sub
fidivs
add
add
call
push
lods
pop
pop
xor
rcll
pop
adc
negl
xchg
movsl
fbstp
cmp
sub
test
call
xor
xchg
pusha
loop
incl
outsl
adc
xor
xchg
iret
inc
pushf
pop
jmp
fs
decl
aas
cmp
fwait
jb
adc
push
xchg
inc
xchg
dec
add
jns
xchg
push
fadds
xchg
xchg
pop
shrb
lea
fs
in
hlt
shlb
jmp
cmp
push
add
shlb
mov
xchg
scas
aam
or
lret
and
mov
in
adc
sub
dec
cmp
add
test
decl
shll
int
bound
outsb
mov
cmp
sub
scas
lock
fnstsw
jno
sub
incl
mov
nop
hlt
or
sahf
and
mov
push
mov
cmc
xlat
movsl
mov
or
js
sbb
es
lcall
mov
leave
hlt
push
dec
lret
outsb
jbe
loopne
rolb
dec
outsl
or
xor
mov
cmpsl
push
mov
enter
out
add
aas
or
jle
xor
lods
sub
xlat
sbb
pushl
cmp
jmp
lcall
pop
lret
jl
jno
cmp
push
shlb
lcall
aam
xchg
dec
xor
and
jge
test
lods
dec
pop
sub
xchg
sbb
lret
leave
jg
cltd
ret
jp
mov
sbbb
adc
call
mov
lock
orb
add
xchg
clc
mov
xchg
jl
call
inc
pop
std
jmp
ret
pop
inc
adc
ss
dec
pop
inc
push
dec
insl
and
fwait
sbb
jnp
call
iret
sahf
les
sbb
mov
popa
fidivs
ds
aam
ret
push
push
std
call
inc
push
lds
lock
stos
aas
xor
mov
sarb
dec
sar
mov
notl
inc
cltd
sti
pop
push
clc
out
pop
pop
adc
out
and
iret
add
mov
int3
adc
lock
gs
or
sahf
sub
and
out
cli
pop
xchg
ljmp
loop
mov
cmp
cmp
and
repz
decl
dec
test
adc
cltd
mov
xor
outsb
cmp
fisubrs
test
incl
cmc
mov
lds
stos
push
mov
stos
jmp
mov
popf
push
neg
dec
push
sbbb
mov
psubsw
cmpsl
roll
dec
mov
cmp
call
out
mov
dec
lods
je
rorl
shl
xchg
push
push
enter
xchg
ljmp
push
aas
push
or
sbbl
sbb
rorl
fisubl
mov
inc
mov
stos
push
ret
push
cmp
dec
leave
inc
inc
pop
mov
mov
loopne
add
cmp
std
sub
fdivp
enter
xor
addr16
sahf
push
jp
add
sbb
aam
and
stos
mov
sub
dec
ret
faddp
cmp
ljmp
inc
lock
push
sub
jnp
adc
dec
jg
cmp
push
xchg
movsl
out
aas
divb
in
mov
sbb
fcomip
dec
nop
sarb
mov
dec
daa
js
sbb
xchg
fildll
and
call
fdivrs
adc
adc
xchg
pop
cmp
sti
lcall
enter
incl
cmpsl
xchg
xchg
pop
fwait
add
fimull
xor
and
or
mov
mov
lcall
sub
or
mov
xchg
mov
mov
call
shr
sbb
add
or
imul
lock
das
jge
pop
loop
jge
clc
fiadds
pop
jno
inc
shr
fwait
push
or
incb
mov
dec
cmp
fmull
fsubrl
sbb
faddp
jae
sbb
mov
add
dec
push
sbb
xchg
pop
aad
dec
dec
sbb
and
lcall
mov
sub
lock
cmp
mov
dec
in
mov
xorb
xchg
cmc
bound
add
sar
pushl
xchg
outsl
add
pop
mov
push
lea
mov
ljmp
ds
xchg
iret
pop
mov
xchg
imul
xchg
xor
jl
adc
pushl
cld
ds
ja
dec
mov
xchg
sbb
add
loope
jnp
popf
jb
out
call
lcall
ljmp
push
add
mov
pop
fwait
and
lock
lcall
in
mov
pop
mulb
jns
dec
and
ret
dec
outsb
imul
loope
cli
fstps
push
insb
gs
xor
arpl
add
sub
test
pushl
insb
jae
xor
subl
pop
and
sub
inc
jbe
mov
aad
imul
add
mov
jnp
xor
cltd
push
call
loope
insb
cmp
push
loop
insl
outsl
dec
jge
test
das
testb
mov
push
stos
ljmp
bound
push
incl
mov
mov
outsl
dec
sbb
dec
subl
dec
adc
in
add
jl
jl
std
mov
int3
call
cmp
pushf
js
mov
xor
pop
xchg
stos
ret
inc
mov
rclb
sar
call
xorl
cmp
lret
fstl
pop
icebp
incl
loop
outsb
std
lds
enter
shlb
loopne
call
inc
rorb
lock
icebp
sbb
mov
lea
sub
lcall
decb
and
popa
dec
test
jno
mov
loopne
xchg
mov
arpl
scas
ss
xor
rcr
test
dec
popf
adc
push
lahf
sahf
dec
addr16
lcall
out
adc
or
mov
ror
js
sub
add
ja
xchg
mov
idiv
push
loop
icebp
jns
inc
adc
cmp
fsubl
inc
es
pop
sar
inc
movb
jp
jnp
les
scas
xor
ret
aaa
lahf
sub
repz
jmp
mov
or
sub
xchg
movsb
int3
jbe
out
jbe
xchg
adc
sub
decl
pushl
in
push
or
push
add
or
stos
jg
les
jge
out
lcall
je
in
sbb
lahf
or
dec
jmp
shll
adc
or
inc
aaa
pop
bnd
mov
fmuls
int
sarb
mov
push
xor
es
and
data16
ror
ret
adcb
lcall
shr
sbb
jp
xchg
add
push
sbb
and
and
mov
ja
clc
xor
pusha
imul
data16
pop
sbb
and
pop
icebp
fadds
call
jb
fwait
xlat
mov
inc
outsb
sub
lock
jno
aaa
push
outsb
add
and
shrb
sub
sbb
mov
into
sbb
ds
in
cltd
mov
pop
sbb
inc
je
in
pop
push
mov
cli
sbb
pusha
sarb
xor
and
xchg
stos
mov
mov
dec
mov
decl
add
mov
adc
lcall
xor
sub
cmp
or
fucomip
iret
mov
jmp
add
cli
leave
sbb
testl
clc
add
sub
sahf
jg
jno
call
xor
aam
dec
addl
cmp
xor
icebp
int3
fildl
mov
inc
stc
into
dec
call
adcb
dec
sbb
pusha
jge
and
mov
jne
incl
data16
int3
cmp
adc
mov
jg
mov
jne
ljmp
lcall
adc
sbb
lods
movsl
arpl
out
mov
mov
inc
or
pushl
lods
lcall
icebp
mov
inc
push
js
push
jp
enter
mov
adc
pop
mov
call
dec
arpl
mov
xor
pushl
xchg
clc
adc
iret
jnp
aam
mov
aaa
aas
cli
mov
and
loop
cmp
daa
sbb
aad
sbb
andb
mov
cmpsb
fcos
js
jne
scas
pop
cmp
adc
adcl
and
inc
pop
and
mov
or
xchg
jb
inc
cmp
repnz
repnz
dec
dec
movl
jno
pop
adc
inc
incl
rcl
out
mov
jecxz
xchg
ds
outsl
pusha
add
mov
sub
in
dec
mov
sub
xchg
lret
inc
mov
daa
hlt
pop
pop
data16
test
fdivrs
or
mov
lods
xchg
xchg
outsb
mov
pop
push
mov
pop
lea
out
ljmp
mov
mov
jmp
push
mov
mov
add
enter
decl
push
enter
shlb
push
dec
pop
popa
jmp
push
pop
arpl
mov
inc
sbb
aam
jmp
jp
outsl
xchg
aam
in
mov
pusha
push
in
daa
cmpsl
xor
push
or
addb
lcall
xor
sub
add
and
fnstenv
push
push
adcl
ret
clc
xor
lds
cmp
push
add
leave
lds
mov
pop
call
sbb
mov
es
adc
and
loop
sub
ds
or
ljmp
sar
cld
imul
and
popf
dec
insl
fwait
shlb
dec
out
push
push
fcomip
sub
out
or
mov
add
cwtl
iret
scas
testb
imul
push
mov
jmp
pop
push
rorl
in
cs
lcall
mov
test
in
adc
lods
adc
mov
inc
sti
fbstp
cld
call
nop
xchg
out
xchg
lods
ja
mov
inc
jl
mov
mov
lcall
push
insl
ret
mov
repnz
push
push
jns
out
cld
jle
sub
mov
int
repnz
call
push
inc
dec
xor
cmp
push
jne
test
hlt
frstor
mov
jmp
dec
jp
mov
dec
xbegin
pusha
jnp
loop
sti
scas
mov
adc
sbb
jp
icebp
stos
mov
add
cwtl
pop
sub
mov
test
and
pop
test
lcall
ficoml
aam
daa
cwtl
subb
sahf
sbbl
pushl
in
jl
lds
stc
inc
sub
insb
inc
test
mov
dec
incl
sbb
je
mov
push
mov
pusha
pop
loope
pop
xchg
adc
int
lods
lcall
pop
dec
and
xchg
fwait
insl
jp
dec
mov
cmc
imul
std
ljmp
jle
cli
mov
mov
mov
xlat
add
sub
fwait
testl
stos
jmp
xor
andl
cmp
push
call
sub
iret
and
lcall
mov
mov
addr16
call
test
push
adc
adc
lcall
aaa
gs
adc
fwait
jg
imulb
adc
dec
lahf
loop
pop
and
and
loop
call
icebp
lret
sub
inc
push
cld
push
ja
cwtl
pop
or
lcall
aaa
shr
xor
mov
popf
pop
aaa
pop
cmc
cli
mov
nop
xor
push
int
sbb
mov
std
mov
mov
or
push
sub
ds
mov
push
mov
pushl
jle
jns
add
shll
mov
sbb
fbld
cmp
es
mov
cmp
mov
hlt
inc
sbb
out
xchg
sbb
mov
dec
int
hlt
inc
adc
or
hlt
jecxz
js
push
adc
jmp
int3
jb
push
jo
cmp
scas
jge
mov
iret
ret
pop
jmp
mov
mov
sub
mov
loopne
sbb
jmp
or
aas
mov
fucomp
popa
je
mov
arpl
mov
xchg
push
mov
popa
lret
push
incl
sub
imul
xlat
cmp
inc
add
cs
call
mov
mov
push
out
loop
push
das
int3
test
inc
mov
out
iret
sbb
incl
inc
movsb
xor
imul
sub
outsl
fisubrl
aad
pop
movsl
mov
jg
xchg
xor
inc
mov
insb
scas
pop
stos
xchg
in
xor
lods
fistpl
dec
gs
inc
add
lods
filds
leave
dec
sbb
data16
decl
xchg
fs
test
es
xchg
pop
test
lock
in
aas
add
jl
push
jmp
hlt
jge
inc
fidivrs
jg
fndisi(8087
push
fsubr
sub
dec
cmp
iret
cli
xor
pushl
pop
xor
test
inc
imul
into
stc
loopne
xchg
outsb
sub
jmp
in
sbb
mov
jb
adc
lea
dec
fmul
repz
push
fwait
outsl
mov
cmpsb
movb
cmp
inc
dec
jns
lahf
xchg
xchg
mov
arpl
out
or
push
shll
pop
inc
mov
adc
pushl
shlb
add
ljmp
add
repz
pop
and
push
mov
pop
dec
daa
jns
in
and
push
cmp
movsb
and
inc
dec
js
mov
cld
cmp
inc
mov
adcl
sahf
pusha
shlb
pop
jb
push
add
cmp
pushf
pop
bound
push
dec
inc
cwtl
dec
test
mov
jb
adc
adc
ljmp
and
xchg
ja
lcall
and
xchg
sub
lahf
mov
mov
out
enter
inc
arpl
or
mov
inc
ret
xor
xchg
jmp
loope
and
les
mov
inc
sub
lods
cmc
jno
inc
mov
aam
rolb
outsl
cltd
push
dec
xchg
or
adc
popf
cmp
jg
repz
jg
outsl
clc
dec
out
repnz
xchg
aaa
jbe
mov
in
ret
mov
cmc
push
mov
daa
iret
xchg
movsb
push
sbb
push
inc
ss
iret
pop
sub
icebp
dec
xor
ficompl
in
cmp
dec
pop
xchg
insb
fcompl
pushf
xchg
lahf
pop
mov
xor
jnp
or
movsl
std
sbb
std
sbbb
pop
jp
pop
pop
aam
mov
sub
xor
pop
pop
push
loop
icebp
call
mov
push
pushf
push
enter
loope
cli
xor
pop
mov
adc
pop
jnp
sbbb
loope
cmp
inc
or
mov
repnz
mov
je
adc
loopne
and
or
je
mov
pop
jno
test
mov
sbb
arpl
xchg
insb
and
dec
sbb
decl
es
xchg
mov
dec
pop
inc
stc
mov
out
leave
mov
dec
movsb
push
push
push
js
gs
add
imul
movsb
cmpsb
out
jns
adc
outsl
push
test
lcall
or
or
insl
jns
fbstp
popf
xlat
insl
and
cwtl
scas
mov
fistpl
outsl
cld
incl
cld
dec
push
cmp
pushf
mov
ljmp
cmp
shll
je
hlt
mov
jle
stc
sarl
jne
sbb
sub
clc
insb
cmp
xchg
rdmsr
popf
xor
ljmp
shll
jl
xor
mov
ret
inc
mov
jecxz
cmpsl
push
incl
aaa
data16
xor
lods
test
and
jmp
jg
xor
xchg
inc
pop
incl
jae
ljmp
shrl
rcr
lds
es
incl
inc
shrl
mov
pushf
les
shlb
and
sub
into
lahf
incl
call
clc
mov
insl
scas
movsb
mov
popa
push
aad
imulb
add
mov
imull
addl
lahf
outsb
jno
cld
push
pusha
mov
pop
clc
dec
xchg
and
sub
out
cmpsl
lods
iret
pop
jns
fdivrl
push
data16
xchg
push
and
call
xchg
test
lcall
popa
and
add
cmpsl
mov
xlat
fistl
push
lock
sbb
data16
mov
scas
arpl
pop
xchg
lcall
cltd
pop
mov
mov
xchg
insb
and
divb
lret
sbb
pushf
xchg
mov
pushl
xor
or
push
rcl
sub
test
and
cmp
jge
dec
add
outsl
xchg
jmp
and
fnstsw
mov
add
add
call
mov
jno
cmpsb
xchg
xchg
pop
add
fld
mov
popf
sti
popf
shrl
jmp
xchg
jle
imul
repnz
xlat
push
mov
data16
push
cld
pushl
shrb
inc
fdivs
leave
xchg
icebp
jge
xchg
clc
enter
add
cmpsl
in
pop
sbb
and
sub
leave
jg
xor
xchg
stc
in
addr16
fldt
stos
out
sub
hlt
repnz
je
cmp
mov
sub
fbld
jmp
daa
sbb
sarb
outsl
sar
shr
jp
dec
out
leave
push
inc
in
test
inc
mov
inc
pushl
test
cwtl
inc
das
js
popf
or
and
fs
dec
or
cmc
cld
outsl
cld
pop
lcall
in
add
sbb
daa
xor
add
shll
mov
call
divl
or
pop
jbe
mov
mov
ljmp
scas
adc
iret
push
jbe
movsl
pop
stos
fimuls
aaa
loop
pop
test
hlt
call
popf
mov
cmp
bound
mov
fwait
dec
popf
xchg
lods
xor
decl
fmulp
sarb
lret
or
push
test
ljmp
pushl
imul
xchg
mov
test
xor
or
mov
mov
cwtl
incl
push
insb
jno
fwait
sub
mov
cmpsl
js
insb
or
jg
call
in
xor
hlt
adc
call
aam
jae
cli
jle
xor
mov
scas
mov
ljmp
sbb
addr16
and
ret
andb
call
mov
in
test
xchg
pop
mov
mov
push
jl
cmpsl
aaa
movb
pop
cmc
inc
sbb
in
fwait
stos
push
inc
add
mov
into
or
imul
xchg
mov
push
cmp
out
mov
jmp
xchg
in
int3
addl
adc
popf
push
xlat
cmp
pop
mov
loopne
cltd
mov
cmpb
cmp
shlb
or
xchg
stc
cmp
sti
stos
popa
aaa
addl
pop
sbb
sbb
dec
ja
data16
data16
incl
out
scas
int3
mov
add
outsl
into
sbb
xlat
xchg
push
jmp
mov
and
nop
stc
dec
aas
mov
mov
pop
xchg
lds
add
mov
or
xchg
and
lret
mov
incl
arpl
lea
fwait
jle
xchg
popa
movsb
adcb
cs
jg
hlt
pushl
adc
add
lods
imul
loop
bound
lcall
out
pop
iret
jns
adc
out
test
clc
cmp
sub
cmc
cmp
decl
mov
push
repz
cmp
int3
jg
inc
xor
mov
pop
shl
outsl
cli
insl
mov
dec
aad
mov
sbb
pop
in
mov
cmp
mov
add
mov
xchg
popf
pusha
mov
and
scas
pop
decl
cltd
mov
mov
out
cli
mov
jp
sub
jg
fs
xor
dec
cs
adcb
cmpsl
mov
push
mov
jns
lahf
les
dec
cmp
push
dec
adc
mov
stc
pop
and
dec
fistpll
test
jp
jl
orb
push
lahf
out
fimull
sub
push
push
arpl
mov
ljmp
repnz
fsub
shl
sub
ljmp
cmpsb
xchg
mov
mov
lcall
jbe
cmp
and
xchg
fs
and
in
inc
dec
in
testl
pushl
inc
jl
adc
clc
xor
inc
rcll
mov
stc
jp
mov
mov
push
or
push
cld
pushl
clc
in
mov
jno
cmp
out
aad
rcr
push
or
add
incl
inc
int
lods
pop
dec
dec
sub
fld
out
faddl
ficompl
sti
mov
adcb
cli
hlt
daa
mov
inc
jo
pushf
sbb
decb
jg
pop
push
or
int3
sarb
inc
lods
pushf
popa
dec
and
sahf
lea
jmp
js
idivl
lods
rcl
push
jno
nop
and
mov
dec
stos
jnp
je
fists
push
dec
cmpsb
push
add
addr16
out
xor
inc
hlt
mov
ljmp
pop
movsb
sti
adc
cmp
sub
or
lahf
lcall
outsl
cli
cmp
jmp
xor
add
sbb
iret
sbb
xchg
jmp
mov
fists
mov
jl
ljmp
aaa
sbb
popf
sub
sub
mov
jg
call
sbb
in
or
push
hlt
and
lds
and
mov
out
jmp
dec
movsl
addl
mov
mov
pop
lahf
and
and
incl
roll
mov
jecxz
sbb
addb
fs
nop
mov
push
sub
jmp
mov
inc
inc
inc
mov
push
xor
orb
gs
xor
outsl
mov
jmp
out
hlt
loope
repnz
in
clc
cmp
bswap
xchg
test
sub
outsl
sahf
xchg
push
jae
lret
dec
adc
mov
push
out
rol
xorb
push
loopne
xlat
cmpsb
repnz
jl
or
incl
loopne
repz
sub
popa
mov
pop
xor
jg
push
pop
mov
adc
xchg
pushl
out
add
inc
cmc
cmc
push
ljmp
mov
dec
ljmp
sbb
bound
pushl
xchg
xor
inc
ffree
push
lret
adc
call
push
pop
jae
pusha
fdivr
dec
aad
test
mov
lock
rcll
mov
notl
push
mov
xor
lcall
cmp
add
or
add
test
add
andb
adc
incl
inc
pop
push
outsb
sub
shlb
imul
jg
cwtl
mov
jmp
sbb
inc
xor
call
lds
das
jno
nop
xor
inc
fcomp
sub
inc
cli
lcall
incl
mov
sub
mov
pop
and
mov
pop
lcall
jl
xor
and
popf
jl
shlb
sbb
repnz
cltd
rorb
js
lds
mov
hlt
lods
mov
adc
sbb
test
or
pusha
scas
les
arpl
aad
jb
cmp
jp
sbb
data16
std
or
sahf
xchg
inc
cli
pushl
pop
lea
pop
inc
dec
inc
iret
mov
out
jns
xor
jmp
fninit
ljmp
notl
fcoms
jne
in
mov
cld
jg
pop
jl
mov
xor
clc
fucomp
xor
jle
xor
inc
push
and
mov
fs
scas
xor
xchg
or
lret
mov
psubsb
pushl
in
test
cmpsl
adc
sahf
add
adc
ret
or
mov
int
sub
pop
dec
rcll
jge
call
insb
push
jmp
stc
movsb
lods
or
roll
jno
test
xchg
mov
je
call
js
inc
fimuls
rorl
dec
icebp
enter
repnz
push
xchg
or
fmul
decl
fs
mov
stos
cli
je
ficoms
sbb
lcall
mov
pusha
daa
or
aas
imul
shll
pop
sbb
incl
cwtl
pusha
lea
imul
sub
jecxz
mulb
icebp
push
fmull
rcrb
jmp
addl
enter
sarb
daa
jns
cmp
sub
out
mov
pop
std
incl
ret
xchg
fiaddl
sbb
movsb
hlt
adc
cmpsb
in
std
cwtl
out
ljmp
scas
xor
inc
pop
sbb
dec
jne
imul
ja
add
mov
cltd
pop
call
mov
movsl
hlt
mov
clc
sub
cli
add
xchg
and
jns
in
lds
sub
sub
std
pusha
imul
push
lds
inc
mov
loopne
push
mov
fstpl
jb
stos
push
int
mov
sub
push
push
push
enter
mov
js
or
adc
jno
cmpsl
jo
lcall
lods
in
sahf
jle
add
pop
je
mov
in
xor
and
xchg
clc
mov
or
inc
and
notl
cmc
ljmp
adc
mov
nop
mov
aad
cwtl
dec
shlb
cmp
call
pushf
adc
fistps
mov
fisubrl
or
stc
cwtl
inc
inc
and
incl
imul
cld
mov
mov
adc
ret
pop
cmp
mov
scas
adc
cmp
mov
pop
int
rcl
inc
inc
pop
mov
repz
or
cmpsb
or
and
push
out
mov
shr
push
lods
fbstp
out
lods
mov
inc
mov
xor
mov
mov
ljmp
cmpsl
adc
sbb
movsb
push
cmc
sahf
jae
jne
lods
icebp
test
pop
fdivrs
dec
cld
push
imul
sti
jbe,pn
dec
pop
cmpb
jne
imul
sbb
clc
jb
call
mov
pop
lahf
aas
mov
pop
xchg
cmpsb
inc
sub
in
lock
cmpsb
adc
pushl
jge
lretw
xor
push
call
inc
movsl
lret
movsl
cld
stos
sub
ret
ror
mov
xchg
nop
pushl
jge
dec
mov
ds
movsl
repnz
xor
inc
cmp
sub
and
decl
idivl
and
lahf
int3
cmc
pop
push
aam
stos
inc
fidivl
cmc
jge
xchg
inc
scas
test
icebp
das
clc
jmp
outsb
push
clc
std
push
inc
divl
adc
pop
pop
fldenv
hlt
call
inc
in
iret
adc
lahf
mov
data16
lock
cwtl
pop
aas
out
push
or
pushl
mov
jnp
in
xchg
test
lock
cwtl
xor
sub
mov
pushl
cs
pop
pop
xor
add
mov
xchg
ret
jne
gs
jp
push
pop
inc
pop
push
call
jae
movsb
jg
mov
mov
and
fcmovnb
or
fcoml
call
mov
enter
mov
mov
repnz
mov
adc
orb
sub
loopne
mov
popf
mov
lret
pop
xchg
insl
mov
cli
decl
cld
int3
imul
lea
xor
push
fwait
addr16
lahf
dec
push
ljmp
xor
add
jg
cld
mov
outsl
add
pop
dec
mov
incl
add
pop
in
icebp
inc
idiv
stc
mov
inc
add
clc
ljmp
ret
sbb
out
mov
dec
jnp
lret
jg
lcall
dec
inc
push
pop
xchg
mov
adc
pop
jb
xchg
scas
mov
mov
pop
lahf
push
jno
scas
stc
add
and
movsb
jl
aam
pusha
dec
lock
sbb
mov
loop
cmpsl
or
int3
call
pop
or
sbb
orl
mov
pop
fs
pop
dec
ss
sub
in
or
push
stc
or
jmp
xchg
sub
in
and
outsb
pop
lret
mov
or
mov
sbb
call
mov
jae
and
pop
pop
shl
mov
jb
jo
add
mov
es
mov
cmc
push
sub
jmp
stos
ret
dec
mov
daa
lret
nop
std
lret
or
incl
mov
mov
pop
js
pop
in
ljmp
incl
mov
cli
and
lock
jns
lea
jno
call
cmp
add
mov
mov
ds
and
lods
stc
pop
aam
xor
iret
adc
jo
call
dec
stc
in
addr16
jge
dec
in
pushf
jnp
xor
jg
pop
push
xchg
ljmp
dec
jnp,pn
dec
jge
fs
xchg
sbb
sub
rclb
sahf
push
arpl
and
pushf
clc
and
adc
pop
inc
repnz
call
mov
jecxz
decl
sub
pop
mov
push
stc
and
mov
testb
lret
ljmp
push
in
rcrb
xor
push
and
popa
adcl
in
sti
jmp
popa
dec
scas
repz
sbbb
cmpsb
push
inc
scas
lret
push
sbb
push
call
outsb
fbstp
jbe
adc
jl
dec
push
xor
mov
fdiv
mov
pushl
pop
or
arpl
das
in
or
jle
test
iret
jg
nop
lods
cmpsb
out
and
xor
adc
lods
outsb
stc
adc
dec
adc
push
fists
int
mov
aaa
cld
lcall
cmp
dec
ficompl
fwait
orb
bound
dec
ret
push
incl
inc
sub
jae
ret
or
aaa
bound
sbb
mov
mov
jo
insl
out
mov
add
decl
out
scas
aas
jmp
fldt
mov
rclw
mov
inc
or
or
and
pop
mov
out
inc
ret
addl
call
pop
pusha
xor
fidivs
push
iret
out
mov
mov
jae
xchg
mov
and
mov
pushl
dec
out
imul
mov
ljmp
push
inc
out
in
push
mov
mov
add
push
inc
loop
or
lcall
add
cmp
loop
cli
loope
je
jo
add
sub
sub
ret
call
loopne
or
add
loopne
and
xor
xchg
sti
aad
in
mov
loopne
sbb
mov
xor
and
addr16
mov
push
add
jl
adc
enter
cmp
fs
or
push
cwtl
int3
pop
dec
pushf
mov
cli
lcall
xchg
cmc
aam
fmull
sbb
xchg
jno
adc
pusha
lcall
mov
push
rcrb
movlps
testb
sahf
les
cmp
pushl
call
or
adc
and
fdivs
mov
dec
loopne
push
movsl
inc
test
es
std
fs
movsb
ja
insb
jns
cmp
fldl
inc
out
adc
pushl
pop
push
out
add
dec
lahf
and
pop
aam
std
ss
out
shrl
cltd
pushl
lcall
ret
sbb
push
fcmovb
je
add
xor
jge
mov
jmp
loope
jp
push
push
mov
js
lock
jmp
into
lret
adc
out
aam
sahf
cwtl
sbbb
xorl
nop
push
loope
call
jne
mov
outsl
dec
add
in
inc
pushf
xchg
push
rclb
cmp
aas
mov
xchg
enter
push
pop
js
rol
mov
mov
or
dec
xchg
lret
rcrl
outsb
outsl
mov
mov
ljmp
jne
mov
pop
push
xlat
or
push
pop
aas
movsb
and
pushl
mov
add
mov
inc
jns
test
and
stos
sub
mov
push
jmp
pushl
imul
ret
in
mov
aas
xchg
xchg
in
les
test
lcall
fnstsw
jae
sub
sbb
jnp
mov
je
call
push
shlb
pusha
lods
idiv
aam
add
cmpsb
cmp
cmc
test
mov
inc
and
xchg
decl
xchg
mov
shl
push
xor
xchg
in
xchg
enter
lret
repnz
cmp
incl
cs
popa
mov
adc
push
test
dec
push
inc
out
test
sbb
jbe
cmp
sub
and
dec
xchg
mov
enter
pop
std
inc
repnz
notb
xor
mov
movsb
js
in
jae
dec
mov
cli
push
lahf
xchg
arpl
incl
jg
xchg
adc
and
test
mov
scas
pop
dec
add
add
pushl
mov
or
adc
jecxz
jle
popf
cmc
cld
stos
je
mov
aam
xor
hlt
cmp
jns
out
ret
lret
xor
adc
xchg
jne
dec
fistpll
lcall
cmpsl
cmp
gs
movsl
cld
fstpt
adc
inc
mov
adc
incl
mov
stos
mov
das
inc
lods
mov
cmp
cmp
pop
ljmp
inc
inc
mov
jmp
or
mov
push
inc
aad
pop
jg
mov
jg
push
rcrl
shll
fbstp
xor
pop
pop
pushl
std
mov
rcr
add
andl
push
loopne
rorl
dec
ljmp
imul
jns
adc
jo
mov
test
pop
inc
sahf
mov
mov
in
int
pop
pushf
push
int
clc
fwait
mov
and
or
push
cmpsl
inc
loop
push
jmp
call
dec
in
mov
iret
dec
xor
xchg
shlb
leave
call
mov
add
lcall
sahf
pop
call
out
xor
outsl
or
sbb
push
push
cmp
popf
cmpsb
fidivrl
inc
shlb
jg
push
idivb
pop
scas
or
mov
cmp
arpl
or
pop
ret
icebp
jmp
jbe
push
icebp
sbb
cmp
add
cli
test
mov
incl
ret
dec
adc
call
fs
cmp
mov
pop
inc
out
mov
sub
lock
in
xchg
out
addr16
push
mov
out
mov
jmp
int3
arpl
mov
roll
ljmp
scas
gs
mov
mov
or
sub
jle
xchg
aad
lcall
and
sub
lretw
sbb
add
int3
mov
pop
xor
pushl
mov
mov
lock
xor
clc
test
int3
lods
gs
in
imul
int
mov
xor
pop
fstpl
inc
test
and
jle
cmp
sbb
push
leave
add
and
dec
outsb
ljmp
inc
ss
out
xchg
pop
in
addr16
fmul
add
lcall
int3
sbb
pop
mov
hlt
imul
lcall
negl
jae
pop
jo
jb
mov
lret
xchg
jp
scas
int
psrld
fsubl
dec
call
popa
xchg
stos
mov
mov
cmp
or
shlb
filds
int3
mov
decl
cmp
pusha
or
pop
fs
cmp
sti
pop
jne
ljmp
or
inc
ljmp
xor
shl
jb
aam
xor
and
sub
mov
fiadds
test
jg
aad
jle,pt
mov
mov
mov
mov
rolb
sahf
adc
insb
bound
xor
dec
pop
mov
sti
incb
dec
xlat
sub
insb
mov
pushl
jo
sbb
xor
cmp
out
pop
fcoms
fnstsw
adc
pop
mov
ljmp
addl
push
jecxz
outsb
pusha
nop
jnp
fsubs
ret
ret
dec
test
test
mov
imul
mov
and
cli
aad
inc
lods
mov
cmp
cmp
ljmp
inc
or
aaa
inc
pop
cmp
jno
jmp
clc
sbb
adc
repnz
int
mov
call
push
gs
aam
daa
cmp
aas
pop
out
cmp
movb
bound
sub
sbb
clc
pushl
xchg
lahf
int
nop
xor
sub
cmp
stc
adc
jmp
xchg
jns
mov
sbb
jmp
mov
pop
cmp
sub
inc
rorb
fcomip
pushl
inc
jg
mov
js
call
stos
iret
inc
les
call
out
fistpl
test
add
jae
cmp
jg
dec
mov
push
adc
ror
rcrl
sahf
sarb
cmp
inc
test
cmc
and
decl
mov
xor
addr16
into
test
into
pop
pop
xchg
or
pop
jg
clc
incl
icebp
iret
inc
cld
sub
test
das
mov
lahf
cltd
fst
dec
ljmp
pop
lock
mov
call
sahf
push
jg
cmp
or
mov
dec
out
imul
adc
rcrl
loop
test
dec
fistpll
pop
jle
int3
movsl
std
lcall
fwait
mov
dec
cltd
mov
pushf
xchg
jl
mov
lret
adc
jb
addr16
std
dec
stos
mov
cs
outsl
lods
adc
mov
mulb
insb
aaa
dec
outsl
rcr
pushl
rcr
adc
test
lret
in
push
aad
jne
sub
outsb
cld
jae
incl
xchg
push
adc
out
aas
aas
out
daa
test
push
loop
bnd
int3
pop
data16
jg
out
das
adcl
testb
int3
pop
and
mov
jle
mov
xor
lea
dec
push
lcall
jmp
pause
xchg
sbb
push
push
clc
cs
cmc
test
xor
lcall
jecxz
inc
cmp
xor
mov
dec
mov
pop
loopne
xchg
pop
cli
mov
mov
xor
sahf
aad
xchg
in
rclb
sub
jmp
mov
in
in
push
inc
sbb
push
decl
enter
incl
in
sbb
sub
in
test
ret
pop
jge
or
fdecstp
and
add
repz
cmpsl
lods
popa
pop
pusha
pop
fcomp
jg
mov
aas
rorl
jecxz
es
dec
inc
inc
add
jne
inc
fnstsw
loope
or
pushf
cmpb
mov
repnz
stos
fadds
lods
stos
adc
adc
pushl
mov
ds
inc
in
fiaddl
lock
mov
mov
aas
imul
jmp
push
mov
mov
mov
out
divps
je
mov
int3
lahf
push
ss
dec
es
shrl
mov
sbb
xor
sahf
jbe
rcrb
mov
jmp
lcall
ds
shrb
mov
es
dec
push
lods
in
xchg
inc
push
sbb
call
nop
clc
test
shrb
out
pop
and
mov
mov
xchg
dec
dec
ljmp
jge
cmp
mov
in
pop
jae
in
cmp
les
adc
into
xor
lcall
int
shl
inc
out
mov
sub
add
push
loopne
mov
orl
into
adc
inc
adc
pushl
ljmp
rorl
movsl
scas
insb
inc
inc
clc
xchg
cmp
ljmp
adc
call
pop
loope
imul
mov
push
push
orl
dec
hlt
cmpsb
sahf
xchg
fst
fdivs
xchg
adc
mov
ss
adc
mov
das
sub
incl
jp
jecxz
pop
pop
fwait
push
or
push
aaa
imull
test
jnp
repz
cmp
add
sti
mov
cmpsb
pop
lods
out
testl
ds
xor
ds
mov
ficoms
fdivr
cmpsb
xor
out
push
jae
sub
push
fiadds
cwtl
inc
pop
icebp
push
sti
push
andb
push
sbb
cmp
fcoml
xchg
sahf
pop
stc
mov
or
nop
xchg
xchg
ds
mov
call
ljmp
rcrl
fld
mov
mov
jecxz
inc
pop
je
outsl
jge
adc
lods
enter
incl
or
test
xchg
pop
adc
sub
outsb
fsubrs
xchg
sti
mov
incl
mov
js
cmc
xor
or
mov
pop
cli
push
enter
sar
lcall
stos
test
stos
je
int3
mov
or
sbb
std
or
jae
ds
int
and
decl
je
out
ss
loope,pt
enter
xor
or
mov
popa
cld
scas
xor
fs
xor
pop
jnp
cmp
popf
movsb
cmp
flds
add
lret
jns
sbb
dec
mov
or
sbb
jbe
cmp
xchg
mov
jne
xchg
push
cli
repnz
mov
sbbl
aas
out
lcall
mov
loopne
enter
cmp
cmp
lcall
or
cmp
ljmp
jbe
jl
mov
fisubl
xlat
lea
addr16
shl
adc
mov
aam
pop
xor
out
xor
jmp
fldcw
jns
and
aam
dec
ljmp
jge
sub
push
push
ljmp
xchg
int
notb
cmp
mov
inc
xchg
lods
sub
jmp
cmpsb
sbb
add
in
adc
pop
testl
lods
xchg
aad
lahf
xor
fistpll
sub
mov
and
jp
xchg
in
aaa
pusha
mov
cmp
xchg
test
stos
jmp
ret
xchg
shrl
mov
push
fistl
mov
cmp
mov
push
popa
cmpsb
adcb
pushl
dec
lcall
xor
popa
incl
fwait
xchg
testb
out
das
cld
mov
mov
cli
push
test
insl
mov
mov
mov
dec
xchg
xlat
mov
sub
xchg
test
cmp
jae
lret
leave
out
pushl
aam
aad
add
bound
shll
jae
push
push
push
mov
push
es
call
cmpsl
and
add
das
jo
cmc
cmpsl
sahf
mov
call
iret
or
sub
xlat
out
cli
jnp
push
xchg
pop
imul
outsb
mov
paddusw
and
rorl
lods
ljmp
cs
scas
jb
out
repz
decl
lock
loopne
mov
js
inc
test
cli
pop
pop
lret
pop
imull
ljmp
add
inc
aas
mov
pop
add
mov
or
pop
jle
sbb
mov
sub
add
xchg
ja
push
cmova
sbb
jg
dec
push
stos
ret
add
test
in
movsb
ljmp
push
and
aam
xchg
mov
iret
dec
jecxz
xor
dec
adc
and
add
mov
shll
xchg
jne,pt
dec
or
lods
daa
loope
lret
out
lods
aaa
jmp
popl
pop
dec
test
dec
incb
and
aas
sub
sbb
or
sarl
cmpsl
subb
add
fstpt
into
add
cwtl
rclb
xor
sub
imul
pop
xchg
neg
lea
sub
cs
popf
lcall
dec
pushf
sti
pop
rcrl
cmp
xor
xchg
ffreep
lfs
cmc
dec
or
test
js
add
repz
insb
mov
cmc
and
imul
cmpb
lahf
jns
add
sub
mov
inc
int3
sbb
push
push
outsb
xchg
mov
into
sar
ret
mov
sbbb
push
mov
loopne
repnz
mov
orb
daa
lret
lcall
adc
gs
jle
clc
or
fsubl
arpl
adc
adcb
mov
sar
sarw
dec
dec
add
mov
notl
add
cwtl
cmp
mov
sbb
mov
scas
and
adc
es
jo
sbb
lcall
icebp
hlt
loopne
add
sbb
je
test
mov
sbb
movsb
iret
test
daa
scas
mov
push
sar
das
and
mov
add
out
mov
sbb
push
mov
jmp
aas
andb
neg
sbb
add
loop
clc
pop
lock
xlat
inc
add
mov
pop
add
jecxz
lret
in
in
cli
add
pop
orl
test
adc
in
sub
movsl
in
clc
xor
cwtl
mov
std
lcall
fiadds
add
and
jmp
ror
daa
clc
decl
outsb
inc
iret
dec
mov
mov
jo
ret
in
push
pushl
add
xor
jl
out
push
mov
xchg
push
add
jno
cld
scas
js
dec
jp
mov
xor
xchg
movsl
cli
cs
add
sbb
jp
add
pushf
and
pop
inc
xchg
mov
pushf
dec
ret
add
fldcw
loopne
or
xor
repnz
fs
mov
mov
jmp
lods
push
xchg
pop
adcl
push
xlat
sub
ja
add
sub
push
popf
jecxz
popf
pop
clc
push
add
add
and
sub
test
adc
xor
das
sbb
xor
hlt
ss
decl
sbb
gs
push
idiv
or
out
mov
inc
push
inc
sub
mov
sbb
scas
jecxz
add
leave
clc
je
adc
out
rcr
sub
roll
inc
loope
aaa
push
leave
movl
xchg
sahf
cmc
leave
mov
xchg
mov
xchg
and
pop
ja
cli
mov
and
cmp
insb
add
lock
mov
mov
int
or
push
lcall
ret
pop
test
lods
jp
sbb
ljmp
xor
sti
insb
sub
jge
push
cmp
jb
adc
mov
adc
xchg
and
or
cmp
icebp
or
lcall
mov
into
data16
popa
xchg
les
and
xor
jg
and
test
inc
stc
inc
mov
cli
pop
sbb
and
xor
adc
mov
xor
nop
xor
nop
pushl
decl
andl
lods
in
pop
jg
insb
inc
sahf
int3
inc
xor
and
jp
push
mov
hlt
and
mov
loop
dec
mov
arpl
dec
inc
arpl
fbstp
mov
negb
mov
pusha
add
popf
dec
ret
js
xchg
mov
add
imul
scas
mov
repz
jg
dec
xchg
jb
mov
daa
mov
dec
mov
inc
std
push
dec
adcb
pop
push
mov
cmpsb
enter
cmc
popl
adc
inc
mov
add
repz
cli
adc
das
cmpl
jmp
adc
icebp
enter
pop
adc
push
lret
out
stc
nop
xor
and
pushl
decl
pop
push
lea
xor
call
cmp
out
frstor
push
mov
pop
cmp
sub
and
sub
ret
add
mov
jmp
and
mov
lret
shlb
adc
inc
loope
fisubs
pop
lahf
push
cld
pop
fildl
cmp
adc
xor
add
loop
push
or
hlt
inc
xchg
ljmp
jbe
dec
push
xchg
push
cs
fstl
loopne
mov
mov
xor
sub
repnz
imul
push
das
inc
incb
jmp
outsl
pusha
movl
loopne
loopne
jle
sbb
jmp
xlat
inc
jns
sub
int3
pop
pop
adc
add
and
loopne
pop
repnz
inc
mov
addr16
sub
sahf
ret
adc
push
cmp
fidivl
lock
out
pop
add
push
adc
push
roll
insb
pop
cs
lods
cmp
or
lret
lret
pop
add
and
mov
mov
fdiv
jno
addr16
mov
inc
xorl
sub
inc
xor
scas
mov
dec
push
inc
sub
inc
and
jg
sub
mov
decl
frstor
fistpl
hlt
pop
mov
ja
mov
pop
sub
jg
in
imul
cltd
xchg
lds
add
pusha
jnp
fcoml
jo
decl
rolb
outsb
pop
test
lods
add
ds
pushl
int
and
inc
das
fs
add
sbb
or
jb
mov
inc
adc
in
or
shrb
adc
icebp
jmp
test
lahf
out
test
jle
es
rcrl
xchg
cwtl
push
xor
iret
add
xor
out
cmp
jne
jecxz
pop
or
mov
outsl
pop
icebp
cmp
add
pop
push
ret
jmp
jnp
loopne
cmp
mov
lock
or
fsubrp
xchg
and
and
rorb
xor
or
dec
addl
mov
es
nop
add
cmp
mov
or
outsb
inc
jmp
mov
add
pushf
sbb
mov
dec
xchg
or
imul
imul
jg
lahf
add
arpl
or
dec
rcrl
pop
or
dec
push
stc
clc
inc
pop
or
xchg
inc
mov
mov
dec
push
pop
inc
push
cmpsl
aaa
dec
adc
div
mov
xchg
and
decl
fisubrl
in
jge
add
xor
xor
je
call
cltd
pop
sbb
push
and
sub
iret
and
pushl
in
jp
jb
je,pt
in
adc
pop
enter
pushf
jns
rcrb
movsb
lock
mov
jmp
movsb
mov
sahf
adc
mov
dec
push
mov
shrb
ljmp
aas
roll
jecxz
and
mov
sar
aas
push
stos
xchg
or
cmp
dec
adcb
add
ret
fs
mov
es
add
xor
mov
cli
dec
sarl
mov
jle
mov
sbb
std
add
fwait
add
jbe
ljmp
clc
aam
frstor
mov
adc
clc
into
pop
xor
or
mov
pop
xor
mov
adc
cmp
jmp
arpl
int
xchg
add
inc
push
scas
dec
mov
ljmp
pusha
push
lret
sbb
add
push
nop
jns
test
xchg
xchg
loopne
mov
add
les
dec
lret
and
inc
int
jg
out
or
das
test
inc
push
adc
and
pop
es
orb
loopne
aaa
or
push
xor
pusha
and
nop
jg
lcall
enter
sub
mov
dec
pop
mov
xchg
out
les
fwait
pop
loopne
cmp
dec
lds
xor
pop
addr16
in
cli
mov
mov
or
mov
rcrl
mov
ficoms
std
jg
jmp
pop
pop
pop
rsm
mov
xor
inc
aad
mov
stos
and
push
mov
ds
ljmp
clc
dec
imul
pop
fcoms
add
mov
mov
pop
fldt
add
out
sbb
bound
add
outsb
mov
stc
lcall
push
push
in
push
mov
icebp
xlat
mov
pop
icebp
jg
and
mov
pop
sbb
push
addb
lcall
icebp
je
adc
pop
fistps
jecxz
rcll
pop
ja
test
sub
xor
test
xchg
xlat
pop
push
in
cmpsl
dec
add
fs
enter
lahf
mov
cld
add
pop
mov
inc
fnstsw
jnp
mov
push
jecxz
lea
inc
call
or
mov
sbb
or
sub
stc
mov
fisubs
fs
jl
in
out
add
je
fimuls
add
pushl
fidivrl
stos
aas
add
iret
xchg
sbb
sub
fistl
jp
add
aas
mov
clc
js
jg
jbe
sub
add
or
fs
inc
and
decl
mov
add
hlt
fisttps
nop
and
mov
leave
insb
mov
stc
sub
addb
mov
in
mov
add
dec
and
jo
mov
cmp
pusha
push
pop
lcall
jle
add
adc
cmp
xchg
add
ljmp
and
or
dec
cltd
xchg
jecxz
pop
rcrb
scas
and
mov
pop
jl
aas
cmp
sub
sbb
xor
imul
inc
add
aas
inc
push
jg
adc
push
push
push
adc
notl
cs
lea
addl
xchg
aad
mov
stos
ja
popf
fistl
inc
mov
outsb
hlt
or
mov
mov
lahf
lret
mov
add
adc
leave
inc
test
fiadds
in
adc
cmp
es
jns
inc
out
cs
into
repz
scas
sbb
fisubrs
test
lret
mov
inc
push
mov
inc
dec
push
mov
add
add
loope
xchg
mov
mov
test
cmp
push
repz
mov
sti
sbb
mov
test
cs
mov
push
add
incl
sbb
movsl
pop
adc
inc
push
xor
bound
pushf
dec
jmp
and
adc
nop
add
xchg
xor
les
sbb
lds
mov
inc
xor
and
and
cmpsl
shrb
cli
xor
lahf
sub
mov
je
jne
sbb
sbb
fdivr
mov
adc
xchg
out
xor
add
jp
xchg
pop
in
cmpsb
bound
xlat
adc
mov
int
loope
lock
push
add
std
jg
pop
cmc
mov
in
je
jae
adc
xchg
cmp
idiv
and
sarb
inc
std
and
pop
stc
jg
scas
arpl
sbb
out
pop
cli
cld
out
add
out
fs
out
pop
pop
pop
out
cltd
imul
jge
mov
or
inc
outsb
adc
repnz
or
mov
movb
incl
es
pusha
out
pusha
or
hlt
aas
loopne
es
inc
xchg
decl
pop
data16
jge
inc
dec
popf
test
adc
add
push
pop
pop
mov
out
leave
jp
mov
mov
fcomip
adc
mov
cld
addl
jo
andb
test
or
incl
add
inc
sbb
sub
fwait
int3
adc
stos
cmpsl
ljmp
xchg
cmpb
cmpsb
movsl
into
pop
cmp
pop
mov
jecxz
jae
decl
lahf
cmp
fdivr
outsl
test
jmp
arpl
xor
dec
pop
mov
sub
test
xor
inc
ss
inc
add
pop
fisubs
test
fld
incl
or
mov
imul
adc
push
and
add
add
lcall
and
loope
stos
mov
ljmp
xor
pop
dec
test
dec
cmc
fists
test
test
add
mov
or
cmpsb
out
popa
popa
fstl
das
sub
in
cli
mov
inc
stc
fcoms
inc
stos
ret
repz
ljmp
std
fwait
pushl
push
incw
imul
xor
xchg
out
and
or
or
les
decb
sub
xchg
and
repnz
lock
and
icebp
and
mov
sub
sub
leave
aas
add
movsb
push
mov
cmp
cmpsb
mov
push
call
fiadds
pop
xor
inc
pop
cli
filds
lods
xor
mov
xchg
call
inc
pushf
jb
or
and
and
adc
add
pop
dec
loopne
jp
adc
xchg
fwait
xchg
and
icebp
mov
adcl
adc
jmp
push
testb
mov
add
ljmp
dec
jbe
cld
mov
push
cmc
test
mov
loop
add
rorl
cmp
ljmp
and
ficompl
xchg
nop
imul
ljmp
push
call
cmpl
add
ja
lods
or
sbb
decl
xor
mov
adc
add
hlt
shlb
jp
mul
sbb
dec
mov
lds
in
iret
mov
cmc
fwait
insl
movb
data16
jp
push
xchg
cld
pop
ficoml
mov
mov
lcall
dec
pusha
jge
dec
pusha
xchg
xchg
cmp
mov
inc
jge
add
jmp
cmp
inc
mov
call
push
push
cwtl
fnstsw
iret
fcompl
mov
lahf
and
sbb
das
inc
incl
mov
sbb
pop
sbb
enter
rcrb
nop
fisubs
test
mov
xlat
cmc
pushf
xor
scas
cmpsl
or
lret
pushf
xchg
xor
inc
xor
pop
je
inc
int3
xor
mov
jp
jle
and
bound
push
dec
inc
xor
pop
jg
mov
ss
xlat
pushf
jecxz
scas
jmp
xchg
cld
adc
decl
test
inc
mov
aaa
call
outsb
inc
dec
call
or
mov
ret
addl
lahf
add
adc
or
sub
fldl
sbb
jp
adc
add
aam
xor
popf
imul
jge
pop
jg
push
jecxz
movsl
enter
fidivs
cmpsb
and
pushl
dec
test
jb
pushf
and
push
jg
and
mov
push
lcall
les
mov
and
sbb
mov
inc
push
or
sub
jp
add
dec
jno
mov
jp
sbb
outsb
loop
testb
sub
or
in
call
loope
sbb
sbb
cmpsb
xchg
and
xor
int3
dec
imul
pop
and
and
test
add
add
mov
ret
inc
ret
enter
jo
adc
or
popf
scas
and
inc
jecxz
mov
add
or
nop
aad
push
sub
xchg
movsb
xor
push
or
push
arpl
mov
das
sti
pop
stos
inc
test
out
jne
test
pop
enter
pop
cmp
sti
fidivl
or
sbbb
sub
loop
jmp
xchg
jb
mov
cmc
jl
insl
das
sub
bound
shll
outsb
shlb
mov
xorl
mov
lock
add
clc
cltd
pop
sbb
jo
std
inc
mov
insb
lret
cld
add
dec
jg
push
push
sarb
insb
sbb
ds
loope
cmp
dec
test
add
sbb
adc
loopne
cwtl
cmp
aam
xor
lods
pand
leave
shrl
jmp
pop
xor
jne
pop
sbbb
or
push
dec
movsl
call
in
and
popa
mov
scas
testb
pop
add
scas
in
rcrb
dec
cs
inc
add
dec
ds
or
mov
jno
dec
pop
mov
add
lods
cmp
sbb
es
insb
xchg
js
rol
adc
scas
xor
in
fimuls
push
mov
xor
xor
sbb
aas
xor
mov
xor
ret
subl
shll
iret
inc
shlb
in
add
fldl
pushf
or
dec
not
fnstenv
ds
sti
add
dec
addb
pop
stc
mov
mov
pop
notb
xchg
js
jg
xor
pop
and
dec
and
and
mov
inc
pop
in
stos
cmpsl
std
mov
jnp
arpl
dec
sub
lahf
xchg
ds
loopne
jns
inc
lahf
jmp
jmp
push
inc
stc
mov
das
mov
mov
bound
movsl
mov
pusha
lods
push
push
adc
cld
loopne
pop
cld
push
jo
movsb
add
mov
dec
scas
into
add
imul
call
push
es
push
dec
mov
mov
xchg
repz
sbb
lea
arpl
and
xor
movsl
mov
and
hlt
jmp
test
cmp
cmp
insl
aam
inc
pop
dec
mov
movsb
fbstp
sbb
cwtl
movsb
fs
sbb
outsb
mov
test
popw
adcb
xchg
push
mov
loop
inc
inc
push
push
xor
cld
pop
xchg
rol
sub
insl
sub
stos
cld
xchg
fsubs
jl
lods
sub
cmp
aad
jecxz
mov
loopne
mov
imul
sahf
fcomip
lcall
leave
orb
dec
aam
testl
mov
cli
push
or
mov
out
shl
addr16
stc
xchg
sub
pmaddwd
rclb
les
xchg
or
mov
push
lcall
decl
adc
popa
pop
insl
repnz
or
push
scas
pop
adc
or
dec
or
sti
mov
inc
pop
jne
cmp
sti
out
pop
or
das
pop
pushf
sar
out
lea
fwait
dec
std
fdivrp
fmul
notb
sub
adc
les
jmp
scas
or
adc
daa
adc
pop
ds
xchg
fstp
jnp
add
push
pop
adc
sbb
fyl2xp1
dec
ljmp
push
xorb
xchg
adc
dec
pop
jl
mov
nop
add
lods
adc
jmp
pop
test
fs
pop
jnp
fists
jg
cmpsl
cmpsb
xchg
nop
mov
pop
call
fsubp
in
dec
mov
sub
push
push
and
and
xlat
aas
std
filds
call
mov
adc
movsl
je
pop
inc
js
mov
cwtl
dec
pop
test
std
stos
out
jmp
inc
sub
bound
and
mov
jg
rcll
test
push
jge
cli
pop
hlt
mulb
mov
lcall
loopne
stc
jmp
sbb
adc
rcr
popa
shl
mov
insb
hlt
pop
pop
add
and
cltd
pushf
mov
mov
pushf
add
shl
or
mov
call
cld
lret
out
clc
jno
and
jb
push
jns
dec
fwait
push
addl
add
cmpsb
xlat
ljmp
mov
pop
pusha
xor
dec
sar
cmp
adc
push
push
cltd
in
fdivs
mov
adc
cwtl
jo
sub
pusha
popf
ret
sub
incl
cltd
dec
push
mov
dec
sti
sub
xor
push
jnp
cld
fisttps
rcll
push
sbbb
mov
mov
add
lret
js
sub
xor
mov
addb
lret
xchg
and
xlat
cmp
scas
cld
push
pop
add
mov
and
or
mov
push
stc
mov
mov
inc
and
mov
inc
mov
pop
dec
or
lea
fsubr
andl
xchg
xchg
fbld
push
add
out
js
sub
fistl
push
loope
adc
and
decl
lock
orb
cmp
inc
pusha
push
std
sbb
pushl
xorl
inc
cld
mov
cmp
mov
xlat
mov
mov
jmp
fucomp
decb
movsl
gs
sar
repz
mov
mov
ret
jo
sahf
jp
test
pop
mov
std
fbld
push
xor
enter
sbb
sbb
jbe
lahf
hlt
mov
daa
sbb
int
movsl
adc
jmp
mov
fwait
push
lds
sub
add
dec
xor
test
push
fistpll
movsl
add
mov
or
lret
cmc
add
xchg
lock
push
js
les
add
loope
les
push
xorl
sbb
add
scas
cmp
fdivr
rcr
mov
mov
lods
cs
fnstcw
decl
sbb
je
test
dec
fstl
sbb
gs
xor
mov
mov
xchg
movsl
mov
rcll
popf
jl
push
jg
mov
or
cmp
lea
push
and
cwtl
xchg
mov
inc
cmp
cmp
jg
mov
bound
lcall
push
mov
sub
push
add
mov
ljmp
lock
fsubs
sub
push
pusha
add
inc
inc
fsts
int3
cltd
inc
xchg
aas
repnz
adc
and
and
in
movsb
add
pop
jo
icebp
push
mov
imul
js
xchg
nop
push
add
inc
pop
pop
imul
pop
sbb
inc
jo
sahf
adc
das
cmpsb
xchg
sbb
ret
sub
add
out
adc
clc
jmp
je
aad
movsl
push
jecxz
ja
mov
sub
roll
bound
incl
or
adc
and
jg
inc
loopne
cwtl
and
mov
adc
sub
lock
call
daa
lods
sbb
xor
push
addb
add
fisttps
adc
inc
xchg
pushf
pop
mov
jl
push
mov
mov
sbb
sbb
jg
sub
repz
jb
push
leave
adc
jnp
and
es
mov
sbb
fbstp
mov
movsb
ror
lods
mov
outsl
cmp
decl
fdivl
xchg
pop
jle
jp
jge
cmpsb
lret
scas
adc
push
xchg
jbe
cli
fidivl
bound
test
jecxz
add
push
pop
xlat
rorl
cmp
jg
cmp
cli
jg
outsl
add
mov
dec
mov
pushl
loop
movsb
imul
cmp
lret
jo
nop
enter
lcall
cli
mov
jno
sbb
xor
pushf
mov
xor
incl
gs
jle
and
adc
xchg
xchg
mov
dec
aam
jecxz
mov
mov
mov
jo
call
rolb
lds
es
jno
mov
mov
add
inc
es
icebp
mov
inc
shl
dec
lcall
mov
cmp
mov
adc
outsl
xor
mov
sub
repnz
movsb
sbb
ja
adc
loopne
inc
pop
push
pop
mov
mov
and
sar
ljmp
lahf
je
add
dec
mov
add
mov
inc
cmp
pop
bound
fwait
jb
inc
adc
ljmp
les
xchg
leave
sbb
dec
push
mov
ja
shlb
and
dec
sbbb
lods
sub
push
push
lock
mov
and
mov
push
popa
loopne
or
fildl
lock
enter
adc
jle
push
mov
add
mov
and
dec
pop
xlat
out
add
shrl
inc
adcb
mov
neg
pusha
popa
inc
enter
dec
mov
cmc
incl
inc
and
inc
jp
in
pop
sbbb
and
in
lcall
lret
loopne
sub
xchg
fidivs
sub
sbb
shrl
dec
sar
push
push
push
test
jmp
sbb
stos
lods
test
mov
adc
push
or
ss
fimull
jle
les
mov
sbb
cs
lods
and
lcall
sub
push
inc
xchg
xor
sub
fbstp
sbb
add
addr16
cmp
mov
and
mov
pop
or
adc
std
mov
shlb
dec
pop
jmp
mov
dec
cmp
dec
icebp
adc
repz
out
mov
inc
cmp
ret
and
cmp
cmpsb
or
inc
ja
adc
mov
or
xchg
or
jecxz
icebp
rclb
decb
fildll
lea
ret
mov
mov
adc
mov
nop
push
cmp
rep
mov
adc
xor
mov
lret
xor
dec
xlat
cmp
sbb
jg
outsl
leave
dec
sbb
jae
ret
cmp
cmp
lahf
mov
jl
cwtl
scas
xchg
adc
inc
pop
lret
out
clc
jg
cmp
mov
sub
xlat
pop
in
pusha
out
data16
and
jns
sar
jmp
pop
mov
pop
dec
and
stos
cmpsb
sub
jl
add
dec
mov
dec
mov
or
add
add
lea
lods
adcl
mov
test
lcall
push
cltd
stos
sbb
inc
test
test
sarb
int
rolb
xor
lcall
pushl
mov
sahf
movsb
pop
xchg
inc
adc
and
loopne
and
push
out
clc
movsb
add
mov
mov
xchg
and
std
aas
aam
hlt
add
push
fimull
push
andb
int
adc
pop
imulb
sbb
push
movsb
xor
inc
stc
aas
jo
insb
lcall
xchg
fcomps
ljmp
test
das
inc
andl
pop
in
and
dec
ret
incl
jl
pop
repnz
adc
imul
scas
or
xor
call
pop
push
cs
leave
rolb
add
das
rcl
testb
inc
cwtl
ds
std
or
rclb
idiv
pushf
nop
cmc
cmp
sbb
insb
fs
mov
sub
adc
jge
or
outsl
fdivrl
xchg
cli
cmp
lods
aam
add
andl
fmul
push
mov
cld
xchg
mov
xorb
push
repnz
sbb
loopne
out
lahf
pop
and
into
sub
mov
dec
scas
repz
decl
notl
add
xlat
inc
sahf
andb
mov
xor
lcall
mov
rorb
inc
jns
pop
call
jae
leave
sbb
jo
movsb
jecxz
pop
ffreep
outsl
sub
add
and
repz
dec
ficomps
mov
mov
cmp
js
loop
iret
pop
nop
pop
loopne
ret
jle
scas
lret
popa
or
ljmp
pushl
add
jmp
pop
imul
js
es
cmp
xor
and
push
sar
push
jecxz
aaa
inc
jge
adc
mov
test
xchg
ret
decl
leave
pusha
mov
rcll
push
add
and
xor
fisubl
sub
andb
sub
cltd
add
add
jg
push
inc
or
shlb
mov
bound
xchg
test
mov
insb
and
negb
xchg
or
mov
jecxz
aas
pop
add
mov
jecxz
loope
sbb
fs
movsl
dec
aaa
mov
mov
jg
lock
nop
leave
enter
scas
repz
clc
mov
into
fs
js
js
mov
dec
sub
pushf
idiv
adc
pushf
test
inc
stos
cmp
xchg
icebp
out
or
sub
push
lods
cmp
cmp
call
jge
jle
decl
incl
ljmp
repnz
or
js
mov
mov
add
sub
lods
adc
xor
adc
outsl
and
sub
mov
sarb
out
mov
cmc
push
mov
push
jg
test
aaa
push
cld
dec
test
push
add
nop
adc
dec
jmp
scas
push
mov
inc
dec
mov
sahf
into
aas
test
outsl
fwait
adc
bound
ret
push
mov
xor
sub
lret
xchg
rorb
inc
mov
and
mov
mov
decl
in
jns
or
das
cmc
fwait
test
popa
dec
mov
xor
outsl
add
sahf
xchg
push
test
pop
cltd
mov
pop
movsb
cld
das
mov
mov
jecxz
ds
inc
outsl
inc
aam
daa
fstl
jb
in
outsb
roll
xchg
inc
or
pop
inc
or
lea
add
cs
clc
ss
test
mov
dec
bnd
pop
jecxz
test
decl
sbbl
fiaddl
dec
sub
jecxz
movsl
dec
xor
add
hlt
jb
mov
inc
icebp
xor
or
add
cs
addr16
scas
add
hlt
fidivrs
cmp
dec
pop
mov
mov
addr16
cmovp
fisttps
jb
cwtl
push
inc
cmpl
aas
ret
add
sbb
outsb
sti
shll
sub
jecxz
pop
inc
in
jl
bound
adc
mov
inc
inc
jo
mov
pop
pop
cmc
add
fscale
pop
pop
push
clc
and
scas
subb
cmp
bound
fistl
dec
subb
stc
mov
xchg
adc
call
clc
fldenv
imul
pop
icebp
inc
xor
push
divb
pop
pop
cmc
mov
jle
sub
lds
loop
add
mov
jecxz
icebp
xchg
mov
push
xor
jg
cmp
push
enter
push
stc
mov
or
lods
mov
lcall
pop
jno
jmp
sub
jg
jl
loop
ss
pop
lahf
sub
and
call
jge
lcall
sti
xchg
adc
js
and
and
cltd
cltd
out
push
lods
or
test
or
decl
jecxz
movsl
adc
jnp
int3
int3
mov
dec
ja
mov
add
cmp
mov
pop
stos
pop
lods
push
xchg
sub
xchg
loop
add
jg
add
push
mov
mov
xchg
cmp
sub
enter
fwait
mov
mov
add
pushl
call
lds
stc
pushf
jg
pop
jp
loope
or
cltd
add
std
incl
and
mov
js
pop
out
pop
cmp
adc
inc
ret
int3
or
fnstcw
mov
clc
fisttps
mov
dec
dec
jecxz
leave
mov
aas
pushl
ljmp
les
rolb
sbb
cld
add
or
jl,pn
mov
repz
pusha
cmp
xor
test
jmp
xchg
lock
inc
mov
jnp
jge
neg
addb
pushl
cld
icebp
or
mov
mov
cld
pop
inc
mov
and
mov
outsb
sub
mov
arpl
add
sub
cmp
cmp
fisubs
jmp
pusha
mov
vunpcklps
cwtl
cmp
insb
stos
mov
std
aaa
cld
jmp
inc
aam
dec
pop
add
sub
dec
mov
and
scas
pushl
and
cld
stc
push
outsl
mov
jge
jge
push
ss
or
or
sahf
jae
xchg
adc
xor
cmp
in
add
cmc
call
loope
xchg
or
add
pop
test
fistps
adc
jmp
mov
mov
cmp
adc
adc
mov
add
cmp
sub
add
add
inc
test
cltd
fstpt
outsb
mov
pop
xor
arpl
popf
out
xor
call
xchg
dec
lcall
out
aam
sub
cmp
ss
mov
or
push
cmp
cli
mov
inc
fldenv
cmc
stos
dec
add
push
add
lock
ljmp
movb
test
dec
adc
ljmp
push
push
inc
or
inc
lods
and
into
arpl
sub
dec
cmpsb
or
push
or
dec
orb
inc
cmp
mov
push
mov
adc
out
sub
mov
cs
shlb
or
popf
test
aam
pop
aas
je
mov
jmp
cmp
push
dec
cmp
xchg
xchg
xor
push
sbb
add
inc
inc
sahf
nop
lds
or
cmc
mov
mov
pusha
aas
shll
mov
in
jmp
test
mov
ds
bound
pop
in
lea
inc
jns
decl
incl
xor
xor
bound
data16
xchg
jno
decl
fstp
mov
call
hlt
add
mov
jno
mov
fwait
jbe
mov
dec
sub
cmpsb
aad
ret
mov
cmp
inc
jmp
and
fwait
push
fbld
xchg
clc
mov
mov
ja
ja
add
movl
data16
sbb
cmpsl
mov
js
dec
adc
xchg
test
int3
call
xor
lods
mov
ljmp
loope
nop
and
adc
inc
movsb
negb
xchg
lock
push
xchg
test
adc
dec
cmp
fwait
xchg
mov
enter
and
mov
scas
xor
push
cmc
pop
mov
mov
and
mov
xchg
mov
xchg
lock
pushl
in
jno
in
inc
sar
pushl
and
mov
sbb
inc
nop
mov
pop
popa
orb
pop
cli
sbb
inc
push
es
arpl
jge
rcrl
or
subps
adc
nop
mov
mov
sti
sub
and
or
das
ljmp
mov
add
aaa
or
incl
xor
shll
mov
js
cmp
lcall
xchg
pop
insl
xchg
in
add
ret
jae
iret
dec
dec
pop
es
mov
cs
jge
add
push
aas
or
sub
test
cmp
xchg
nop
push
insl
bound
or
mov
lret
clc
push
jmp
dec
xor
jmp
add
sbb
jle
jmp
nop
inc
xor
mov
cli
or
sub
pop
test
cmp
incl
int3
repz
jp
data16
jmp
rolb
add
movd
push
add
es
push
pusha
adc
shlb
fs
adc
mov
push
adc
xchg
andb
gs
pushl
push
mov
mov
mov
xor
mov
mov
sub
add
hlt
mov
fdivr
dec
add
pop
ret
mov
push
push
or
into
cli
pushl
into
jo
shrl
out
das
mov
test
jo
out
adc
and
dec
jbe
and
jg
mov
jne
popa
jg
adc
xor
xchg
adc
dec
rcrb
add
adc
incb
idivb
stc
in
das
popf
loop
sbb
das
sub
xlat
pop
mov
lcall
xor
xor
mov
cwtl
inc
popf
popa
nop
arpl
fs
push
or
mov
add
adc
out
nop
sub
mov
mov
mov
sbb
inc
xor
and
ljmp
pop
pop
test
icebp
pushl
cmp
add
or
pop
push
insb
orl
mov
or
incl
lock
je
js
adc
and
mov
mov
add
in
or
fmulp
cli
nop
mov
add
sti
scas
clc
call
call
sbb
adc
xchg
jge
addr16
push
and
jg
sub
lret
add
add
imul
lea
and
lods
sbb
std
pop
ss
dec
fwait
in
insl
mov
push
sbb
pop
stos
call
sahf
jle
adc
dec
repnz
test
mov
pop
inc
idiv
jg
aaa
lret
push
jecxz
mov
add
or
call
cld
cmpsb
add
xchg
hlt
pop
xor
pop
push
pop
subl
sub
clc
test
push
inc
add
and
xor
mov
rorl
dec
cmpb
add
movl
mov
cld
pop
sbb
in
xchg
xchg
subl
adc
ljmp
stos
or
dec
loopne
cltd
mov
sub
xor
fbld
inc
adc
mov
push
mov
inc
inc
ljmp
pop
lock
xlat
mov
mov
jb
sub
or
jno
add
out
pop
mov
xchg
ja
or
cmp
jbe
pop
adc
test
add
rcrb
xchg
mov
lret
fdivl
es
loope
insl
cmp
xchg
shll
pusha
jbe
inc
xchg
cmp
lcall
test
ror
xchg
pushf
dec
and
or
mov
enter
mov
in
ljmp
in
cmc
mov
in
mov
inc
arpl
int3
mov
aaa
inc
push
or
incl
jl
test
xchg
push
xchg
iret
insb
aad
nop
loope
push
dec
dec
inc
add
push
clc
decl
jmp
roll
jge
inc
add
jno
cmp
fidivl
inc
outsb
cmp
test
xchg
popa
js
jbe
int
mov
mov
adc
and
cmp
dec
jmp
xor
add
cli
call
add
nop
xchg
add
dec
jo
xchg
jmp
decl
pushf
mov
push
fcmove
cmp
jo
mov
sbb
lock
lea
inc
mov
loop
mov
sbb
mov
and
stos
mov
rcrb
push
das
hlt
jnp
data16
fcoml
ret
and
out
ret
adc
or
and
lahf
in
inc
ljmp
ja
sub
dec
and
test
daa
cli
out
clc
imul
or
js
or
adcl
xchg
pop
xchg
lahf
or
pop
add
or
lods
jo
add
incl
and
add
push
lds
sbb
scas
mov
cltd
sbb
jmp
or
std
jo
cmc
enter
mov
or
sbb
mov
loopne
cmp
ljmp
pop
lock
icebp
mov
imul
rol
jl
test
jg
push
scas
fwait
dec
je
mov
add
xchg
sbb
add
movsl
xchg
ja
std
ja
shll
hlt
daa
test
into
pushf
push
test
scas
incl
out
dec
xchg
push
dec
int
incl
cld
outsl
lock
dec
mov
and
pop
xor
sub
fs
xchg
mov
outsl
incl
add
adc
and
and
jns
and
out
fisttpll
nop
mov
cmp
or
xchg
sub
aaa
mov
cmpsb
jns
sti
pop
or
fsubl
mov
pop
jp
mov
aaa
cmp
addr16
inc
shrb
pop
pushf
loopne
inc
loope
clc
jg
in
lcall
mov
xchg
loop
push
imul
cltd
fcomip
ljmp
cmp
sub
imul
jnp
xor
pcmpgtb
mov
add
mov
mov
adc
call
jecxz
mov
pop
ret
lcall
std
pop
aam
popa
ljmp
aaa
sub
sub
bound
xchg
ret
xchg
js
and
jle
sbb
mov
jg
sar
jp
add
pop
ja
cltd
mov
xchg
xchg
and
mov
dec
into
ret
icebp
push
cmp
add
dec
adc
in
test
mov
xor
mov
push
push
push
jecxz
decl
nop
mov
ja
xchg
add
js
in
or
xchg
mov
mov
pop
or
clc
ja
clc
and
sub
shll
cwtl
jg
test
adc
pushf
iret
jnp,pt
fstpt
dec
loop
nop
mov
inc
jl
scas
clc
ljmp
push
xorl
jmp
jo
mov
daa
xchg
fld
sbb
sub
inc
xor
lds
add
outsl
call
inc
pop
add
or
mov
push
test
jle
ret
dec
into
and
outsb
or
push
jmp
add
cmp
cwtl
sub
stos
sbbb
mov
bound
inc
testb
loopne
sar
mov
loope
dec
dec
aam
push
xor
test
scas
xlat
adc
outsb
jge
pop
std
fistps
imul
push
dec
mov
adc
mov
movsl
ret
aas
fcmovnb
mov
insb
arpl
test
dec
fidivs
adc
add
insb
popa
lret
add
mov
xchg
lods
sub
loop
mov
imul
and
gs
dec
pop
les
fildl
nop
test
cmpsb
test
decb
inc
imul
add
cmc
jne
test
cmp
lcall
sub
addr16
int
mov
ret
test
add
xor
dec
or
jp
jmp
loop
pop
xchg
jl
in
in
mov
cld
shl
frstor
popf
test
cmpsb
lcall
hlt
aaa
std
xchg
mov
inc
mov
and
xor
sbb
add
and
stos
pushf
and
add
scas
std
data16
dec
loopne
cmp
jno
fcompl
mov
imul
aam
out
add
aaa
xchg
jo
xchg
add
or
cld
arpl
imul
in
add
popa
fwait
sbb
and
outsl
dec
dec
and
sbb
or
daa
call
icebp
repz
jmp
loopne
xchg
adcl
push
mov
out
loopne
sbb
nop
dec
xchg
mov
sbb
popa
int3
sarb
pop
enter
or
outsl
addb
push
stos
stos
adc
or
decb
sub
sub
fistpll
addr16
call
mov
add
add
add
sbb
lcall
pop
movsl
pop
xchg
pop
mov
leave
clc
mov
ja
dec
cmp
inc
lods
popa
out
mov
and
xlat
inc
xor
ss
loop
sbb
arpl
std
xor
shr
clc
adc
push
lock
and
in
test
mov
jns
dec
xchg
xlat
out
pop
fwait
scas
xor
popa
fdivs
mov
jg
mov
inc
cmp
fs
inc
cs
movsl
pop
or
sbb
addr16
fcmovb
cmpb
and
lock
pop
add
jge
push
jle
outsb
loopne
inc
repz
mov
jno
cmpsl
cld
imul
out
jae
aam
aas
push
dec
std
mov
or
es
push
imul
mov
and
xadd
mov
aad
roll
push
call
mov
add
in
or
in
cwtl
subl
fisubrs
xor
jg
xchg
adc
mov
lahf
inc
sbb
dec
jl
enter
push
dec
adc
mov
mov
mov
mov
adc
lods
inc
xor
incl
js
mov
ss
sbb
jg
movsb
push
inc
fsubrl
rcrl
es
mov
sbb
negl
dec
pop
add
adc
cmpsl
mov
and
addr16
lods
jl
sub
add
or
rcr
cmp
cmp
mov
or
adcl
out
cld
pop
cli
lcall
adcb
mov
mov
popf
mov
add
push
movl
dec
mov
push
iret
inc
sbb
ret
pop
sub
mov
push
inc
in
scas
jnp
jno
pop
jo
nop
cmp
pop
xchg
dec
das
push
mov
xchg
xchg
and
sub
mov
repz
call
and
adc
dec
xchg
jle
xor
inc
mov
xchg
pop
sbb
xchg
push
pop
bound
push
xor
test
dec
sahf
push
ds
shl
in
les
sub
mull
and
sub
pop
jle
insb
in
test
sub
add
js
sub
pop
jg
or
enter
pushf
xor
loopne
inc
mov
mov
add
add
mov
mov
or
sbb
stos
push
icebp
aaa
cmp
rolb
adc
inc
jo
mov
std
cmp
jae
mov
sub
mov
cli
mov
xor
dec
cmc
inc
mov
jecxz
jmp
loopne,pn
shll
loopne
repz
js
fstpl
ss
xlat
ss
jg
ja
outsb
push
mov
imul
jl
rcll
or
pop
fildl
xchg
adc
push
sbb
lock
leave
aam
xchg
dec
pop
mov
es
mov
mov
mov
pop
lret
mov
ja
add
cmp
inc
ljmp
fwait
mov
icebp
mov
pop
enter
cwtl
mov
in
cmp
ret
pcmpeqd
push
ret
dec
mov
test
es
pop
loopne
adc
mov
sarl
jl
pop
lcall
sti
or
mov
add
adc
cmp
xchg
call
incl
add
dec
mov
and
rorl
addl
test
std
outsl
lock
lcall
or
or
add
and
and
or
inc
sub
cmp
cmp
push
ja
bound
stos
or
push
fstpt
xchg
stos
sbb
sub
sub
push
push
and
roll
push
dec
xchg
js
push
sbb
sbb
adc
jecxz
inc
aas
dec
add
inc
lret
and
jg
lret
inc
js
sbb
and
scas
decb
call
decl
cwtl
or
push
call
pop
xor
add
add
cmp
lcall
dec
imul
popa
push
bound
imul
sbbb
xor
jmp
movsb
mov
inc
add
dec
rclb
dec
mov
sub
mov
std
int3
data16
hlt
loop
push
ret
cmpsb
adc
enter
jg
mov
push
mov
adc
pop
xlat
xchg
or
bound
pop
push
les
adc
pop
shll
loopne
inc
add
lods
call
or
dec
lcall
inc
push
pop
push
xchg
xor
or
push
push
je
adcb
mov
cmp
fwait
sbb
mov
add
iret
jb
inc
loope
std
sub
ss
call
je
xchg
push
je
and
push
xchg
in
add
and
outsb
loopne
aad
xchg
add
mov
xor
pushf
inc
mov
sbbb
aas
push
popa
pop
dec
pusha
lea
mov
push
std
loop
test
cmpsl
xor
cs
testl
jg
sti
mov
xor
cmp
int3
sub
shlb
jnp
out
adcl
inc
adc
xchg
scas
repnz
mov
add
mov
cltd
shl
out
inc
mov
mov
lahf
push
sbb
cmp
clc
jg
test
sbb
js
sub
mov
aas
rolb
xchg
je
pop
inc
jo
xchg
repnz
sbb
ret
push
popa
add
imul
sub
and
ss
int3
fildl
xchg
jno
xchg
xchg
pop
inc
scas
clc
int
jecxz
aas
ret
push
cwtl
sub
cld
scas
cmove
scas
or
dec
out
adc
in
lock
mov
push
dec
pushf
stos
or
pop
sbbb
pushf
jmp
call
or
cld
jg
fidivl
shlb
push
enter
icebp
pop
test
or
jnp
mov
sub
bound
into
push
jge
test
idiv
jg
cmpb
pop
add
dec
lock
faddp
dec
shlb
mov
loop
inc
sbb
icebp
xchg
or
scas
adc
and
scas
aam
xlat
and
mov
cmp
sub
jg
push
push
push
push
adc
push
dec
or
pop
push
pslld
es
imul
mov
mov
fcomps
call
add
jl
mov
adc
into
hlt
dec
ud0
lcall
adc
adc
xchg
jnp
loope
and
adc
inc
sbb
stos
push
push
out
xchg
push
inc
test
inc
scas
push
sti
fcomip
repz
jge
adc
in
jo
xchg
push
das
dec
loop
fwait
jg
roll
rcr
adc
mov
or
ret
add
out
fwait
in
pop
aam
hlt
lret
push
iret
scas
insb
popa
ljmp
adc
dec
pusha
fwait
out
or
fs
lahf
or
pop
icebp
lea
xchg
popf
pop
pop
xchg
jb
dec
sarl
int3
adc
outsl
pop
and
xchg
out
lcall
inc
into
das
or
pop
imul
inc
out
rorb
pop
int3
repnz
and
enter
jmp
ljmp
mov
sub
ljmp
push
in
mov
or
pop
stos
sahf
mov
dec
pop
or
and
ljmp
cli
add
pop
pop
clc
push
jmp
pop
add
test
call
popa
je
cli
sub
and
pop
ret
mov
inc
sub
bound
scas
sbb
xchg
or
lcall
fnstcw
or
and
sbb
orb
mov
test
out
adc
add
test
enter
and
pop
call
jp
push
sub
pop
and
fildll
imul
sbb
xor
mov
inc
xor
xchg
push
std
gs
xchg
sti
add
popf
roll
fwait
dec
push
test
or
jg
mov
add
jmp
mov
push
jo
movsl
rcrb
lcall
out
pop
or
jne
test
icebp
mov
lret
cwtl
scas
clc
imul
movsb
inc
daa
mov
fsts
lcall
jg
bound
cld
fwait
push
inc
inc
ja
xorl
pop
std
inc
dec
loop
cmpsb
mov
cmovp
dec
dec
cld
mov
pmullw
bound
sbb
out
decb
lods
jns
faddl
jnp
fcmovnb
cmpsb
je
in
jl
mov
lahf
mov
js
jle
mov
adc
push
add
out
push
popa
mov
roll
inc
daa
cmp
mov
lock
popa
lods
dec
dec
jecxz
sbb
mov
insb
popf
push
lea
negb
call
loopne
bound
test
mov
dec
pop
and
cmp
mov
adc
sub
arpl
aaa
fidivl
pop
adc
scas
adc
sub
mov
sti
call
lret
adc
call
loop
cmpb
fisttpl
fs
mov
push
adc
cmc
xor
pop
xchg
call
imul
xor
cmp
inc
push
push
cmc
add
ljmp
ljmp
addb
add
add
cmp
and
cmpsl
dec
rcrb
out
sub
bound
add
pop
mov
mov
incl
pop
notl
pusha
mov
hlt
negb
sub
xchg
lea
ljmp
inc
add
lock
sub
movsb
test
xchg
jae
adc
xor
sbb
outsl
inc
hlt
pop
cmpsl
repz
mov
mov
or
shl
mov
xor
xchg
enter
xchg
adc
xor
jb
lds
shl
aas
cmp
ljmp
and
lds
mull
push
xor
lret
in
mov
outsl
les
pushf
mov
and
mov
aad
xchg
out
mov
movsb
pop
filds
loopne
jns
fwait
cmpb
incl
sub
popl
test
pop
mov
rcrl
in
in
xchg
scas
das
stc
lods
test
pop
sub
cmp
lock
dec
add
add
or
scas
sbb
insb
add
into
xchg
stos
pop
jbe
in
push
std
adc
and
xchg
and
pop
cmpsb
mov
push
lcall
rorl
and
sub
out
inc
mov
movsl
dec
lret
int
insb
nop
outsl
stos
repz
sub
in
loop
push
jp
add
ret
dec
pop
or
push
je
push
lret
cmp
xor
jmp
adc
xor
mov
icebp
fsubs
pop
sti
fbld
push
push
icebp
out
dec
mov
sub
iret
fisubs
xchg
jl
adc
add
mov
add
jle
dec
test
pop
repnz
adc
loopne
int
inc
loop
pop
mov
cli
dec
cmpsl
aam
mov
dec
add
pop
insl
cld
inc
pop
cld
mov
addr16
or
popf
repnz
std
mov
aas
test
pop
mov
xchg
xor
sbb
xchg
adc
ret
aam
and
je
adcb
cld
or
fidivs
jno
sbb
outsl
push
mov
mov
js
and
xchg
lcall
decl
mov
push
mov
movsb
lahf
in
xor
jmp
xchg
mov
addr16
cmp
aas
inc
mov
and
daa
mov
das
out
mov
or
cmc
cmc
and
imul
mov
stos
push
in
nop
mov
subl
add
sahf
mov
int
enter
test
out
lock
push
or
sarl
xchg
xchg
jmp
std
mov
mov
mov
mov
jbe
pop
loope
mov
call
jmp
pop
aam
inc
sbb
shlb
add
std
incb
jmp
jo
lds
xor
add
std
jb
adc
cmp
push
shll
xchg
mov
add
lahf
pusha
inc
shll
inc
popa
or
loop
adc
aam
fwait
and
dec
stos
test
and
push
jne
loope
cmpsb
int
dec
xchg
in
stc
test
sbb
call
inc
inc
loopne
xor
push
pop
hlt
and
pop
lock
insl
or
xor
mov
add
cli
mov
and
das
pop
hlt
adc
push
dec
jl
cmp
insl
imul
vpaddsw
mov
sub
xchg
fimull
popa
mov
jo
je
or
dec
and
inc
inc
inc
mov
decl
xor
pop
mov
add
and
or
add
jg
int3
stos
insb
mov
add
cmp
adc
jno
or
push
cmp
and
insb
xor
sub
and
add
mov
jmp
lahf
xchg
in
orb
pop
sub
mov
bound
stos
add
xorb
std
jge
ljmp
out
add
pop
add
xlat
cmp
incl
daa
loope
fiaddl
push
push
fbstp
xchg
cltd
push
add
dec
lcall
loope
lret
or
jb
lret
push
fsts
faddl
imul
in
add
cld
nop
push
xor
push
es
clc
add
inc
pusha
add
sub
cwtl
lock
pop
push
add
add
adc
dec
push
leave
sbb
test
jg
jmp
scas
mov
cmp
mov
add
cld
mov
cmc
in
rcrl
adc
xchg
loopne
fisubl
xor
lcall
push
mov
add
lret
jbe
nop
and
pop
cmpsl
test
mov
inc
mov
jmp
and
loopne
orl
xchg
fmull
add
sbb
sbb
jmp
loop
jne
bound
outsl
mov
pop
lea
dec
jg
jg
lods
cmpb
rcll
mov
lea
loopne
scas
lods
jg
mov
add
cmp
jae
inc
add
mov
addr16
lcall
push
ljmp
add
pop
shlb
lock
and
or
cmp
loopne
cmp
or
insl
adcb
fstpt
fbstp
cmpsl
cmp
add
xchg
stos
pop
push
std
test
add
aaa
or
cmp
orb
cmp
inc
sbb
xlat
test
loopne
push
ror
xchg
lahf
lcall
cmc
add
ficomps
aas
inc
ja
out
icebp
adc
inc
cli
into
outsb
pop
incl
sar
rorb
pop
xor
mov
bswap
inc
jo
aaa
jne
add
push
jg
cmp
xor
cmp
lret
loop
sbb
fmull
inc
pop
lret
mov
xor
xor
decl
testl
inc
cmp
or
mov
sarl
dec
stos
mov
repnz
lret
xor
call
arpl
sbbl
cwtl
dec
xor
push
loop
lcall
adc
pop
add
clc
pop
bound
add
add
inc
adc
fcomip
cld
call
sahf
inc
nop
push
xor
xor
pop
rol
push
xor
test
push
aas
popf
call
add
push
xchg
test
dec
ljmp
dec
hlt
idivb
wbinvd
push
fmul
xor
pop
orl
xor
mov
or
aaa
das
adc
add
cld
add
pop
mov
jae
cld
aas
and
fwait
mov
dec
loopne
leave
sub
adc
pusha
jecxz
dec
insl
xchg
dec
movsl
pop
rcrb
test
add
mov
xor
fwait
sbb
lcall
jb
aam
dec
inc
lods
in
dec
xchg
mov
cmpsl
incb
aam
test
sub
push
mov
sub
sub
mov
xchg
adc
push
fs
xchg
adc
lahf
les
dec
inc
cld
xlat
xor
add
mov
scas
jecxz
or
inc
lret
mov
lret
sbb
pop
mov
mov
mov
ljmp
mov
sahf
mov
or
jbe
into
lock
outsl
stos
dec
xchg
in
sub
jge
stos
clc
popf
shrb
pop
in
xchg
inc
das
push
mov
pop
mov
lods
and
cmp
lcall
outsb
sti
sub
int3
call
push
or
loop
cmpb
pushl
ficompl
jle
mov
sub
push
push
lcall
xor
push
push
mov
xchg
cmpb
or
inc
pop
test
or
sub
fwait
adc
jmp
ror
mov
add
ret
mov
aad
add
and
inc
push
push
xor
xchg
lock
ljmp
lret
jb
sarl
cmpb
repnz
mov
test
lock
mov
aam
xor
cwtl
sub
or
jno
pop
jge
push
outsl
mov
xor
jge
xor
fs
call
fdivrs
sti
jo
jmp
insb
movsl
cltd
cli
add
pusha
rol
jnp
dec
jmp
push
cmp
dec
movsb
ljmp
jmp
mov
nopl
fildll
or
jnp
dec
test
or
dec
lea
mov
add
add
out
adc
xor
out
test
popa
xor
pop
outsb
lcall
cmp
mov
loopne
test
outsb
imul
into
mov
loop
out
test
pop
mov
sbb
scas
cwtl
mov
dec
frstor
stos
aaa
mov
jb
arpl
cmp
ret
ljmp
clc
fildll
xor
dec
negb
or
data16
cli
jp
or
dec
adc
pop
xor
mov
pusha
adc
int
xchg
cmp
jge
lods
add
orl
outsl
and
repz
test
mov
xchg
adc
xorb
out
xchg
ret
loopne
arpl
push
and
or
xor
pop
xor
lret
iret
popa
jnp
pusha
sar
push
std
jecxz
stos
in
mov
clc
mov
mov
or
sbb
jl
lock
jg
popa
mov
adc
dec
adc
jo
aad
xor
cld
jg
movsl
movsb
xor
add
and
aam
push
out
leave
mov
add
lret
ret
ret
loopne
mov
je
ss
pop
mov
jle
mov
mov
aam
mov
pop
icebp
mov
xchg
push
push
fsub
neg
add
dec
and
add
xchg
cmp
mov
and
popf
repz
fsubs
pushf
or
mov
jmp
ret
lret
jle
sahf
in
push
fistpl
xor
mov
bound
lcall
jb
jg
sbb
adc
jg
filds
jbe
fcomi
popa
cld
pushl
aas
sbb
cwtl
pop
out
mov
adc
pop
sbb
mov
int3
jp
add
insb
test
add
sub
and
xchg
sbb
out
rolb
dec
mov
fsubrs
nop
push
inc
or
dec
and
je
stos
bnd
inc
loope
insl
mov
jne
push
jp
mov
out
call
pop
das
ljmp
dec
mov
aam
out
jge
repnz
or
sub
decl
xorb
mul
les
gs
mov
mov
cli
call
adc
bound
lds
mov
jne
std
shll
into
xchg
aas
and
js
cmp
stos
xor
and
dec
inc
cmpsl
xchg
xchg
jle
leave
in
or
adc
inc
pop
pop
or
xlat
cli
add
ret
mov
jmp
pop
push
adc
xchg
dec
bound
and
rorb
iret
xchg
stos
fidivrs
dec
or
fildll
stos
push
cld
ds
or
test
push
shlb
ja
add
je
and
cmp
mov
dec
xor
rorb
pop
mov
cmp
mov
mov
jg
push
loopne
adc
jb
bound
cmp
sbb
dec
or
xchg
mov
mov
mov
ljmp
jbe
or
lret
jae
iret
sarb
test
cmp
stos
add
jns
out
mov
repz
aas
movl
daa
mov
daa
sub
pop
out
pop
push
vpcmpgtd
call
mov
xor
jg
sub
add
call
cmp
decb
mov
xlat
sub
insb
mov
adc
adc
dec
jg
je
ja
xchg
pop
int3
adc
aas
test
cs
out
arpl
cmp
jns
sti
and
iret
jle
loop
fiaddl
pop
dec
cmp
ljmp
inc
jbe,pn
add
rcrl
lock
jecxz
shll
lods
cmpsl
sub
push
mov
addl
push
arpl
call
aad
or
pmovmskb
lahf
loope
jae
dec
or
xor
stos
aas
jg
or
ljmp
or
or
push
or
cli
popf
movsl
xor
ret
loop
push
fsubs
pushl
int3
sub
pop
dec
loope
sub
sub
inc
and
push
xchg
fwait
mov
inc
xor
enter
pusha
stc
dec
hlt
and
jecxz
sbb
jmp
xchg
mov
xchg
int
and
ja
adc
stc
aaa
sub
jge
mov
lods
jne
pushf
and
jle
xor
ds
outsw
xor
ret
ljmp
fistpll
aas
xchg
jmp
sbb
std
popa
adc
stos
mov
jecxz
scas
add
adc
push
mov
dec
jb
pop
fistps
or
pop
popa
sbb
mov
add
sbb
lods
cli
leave
inc
jbe
adc
mov
int
pop
outsl
fadds
adc
adcb
xor
pop
add
cmp
into
sub
push
movl
insl
jo
je
rorl
lahf
testb
loope
inc
xchg
and
lret
dec
push
xor
rcrb
cli
mov
stc
sbb
pop
add
inc
mov
mov
push
sub
cmc
cmp
jl
cli
mov
adc
idiv
shlb
aad
dec
pop
iret
and
push
jge
xchg
inc
sub
call
or
lahf
add
movsb
sub
push
xlat
mov
scas
push
je
outsl
lcall
push
mov
dec
cmpb
xor
mov
cmp
add
jg
pop
repz
dec
push
test
mov
sahf
xchg
imul
ljmp
mov
mov
inc
push
mov
add
out
add
loopne
pusha
jnp
xor
nop
addl
push
jmp
pop
je
adc
movsb
xchg
cwtl
add
mov
orl
sub
test
add
xchg
arpl
dec
mov
cmpb
jns
test
cmc
inc
xlat
clc
stos
mov
mov
cmp
sahf
popf
daa
bound
fstps
xchg
jge
jge
mov
mov
inc
adc
lea
fmul
pop
xor
test
add
sbb
xchg
sub
orl
pusha
cmp
xchg
and
mov
inc
out
adc
loope
movsl
dec
pusha
nop
and
iret
mov
jb
push
pop
mov
jae
stc
mov
jp
fcomps
lods
movsl
fcomip
das
test
add
out
cld
cld
das
cmc
fildl
iret
sbb
cmp
fsubs
push
ljmp
push
outsb
shl
jle
pop
and
cmpsb
cld
imul
in
cltd
mov
hlt
adc
cli
pop
cmp
out
xor
nop
repnz
int
add
loope
xchg
adc
or
mov
mov
sbb
xorl
pushf
inc
inc
pop
mov
call
add
inc
push
and
dec
cmp
out
cmp
ds
sub
popa
jg
repnz
sbb
push
shrb
ljmp
jecxz
jle
push
ljmp
cli
ljmp
xor
rol
xlat
es
ret
js
cmpsl
sbb
enter
xor
mov
xchg
mov
mov
pop
decl
sub
xlat
mov
js
loop
sbb
pop
pusha
sub
cli
jmp
jl
add
js
pop
jne
xor
mov
adc
out
nop
cmp
push
bound
pop
push
lock
sub
and
inc
xor
mov
outsl
cli
decl
inc
in
gs
add
mov
add
dec
imul
adc
sti
sbb
pop
cmc
cmpsl
fnstenv
xor
ds
decl
mov
inc
mov
sub
lods
rcl
filds
jg
lods
xchg
xor
add
jae
fisttpl
xchg
and
jns
mov
cmp
xor
ret
mov
inc
loop
add
jmp
xchg
shlb
mov
pop
dec
clc
dec
nop
push
push
and
fdiv
cmpsl
clc
loopne
test
mov
in
inc
jne
cltd
push
push
roll
std
lahf
dec
arpl
jno
lahf
mov
mov
fidivrs
loopne
rcl
loopne
mov
jg
icebp
mov
fwait
ljmp
xchg
sbb
and
fistl
and
pop
sahf
jp
roll
cwtl
mov
pop
imul
jg
pop
cmpsb
incb
test
subl
or
hlt
les
jecxz
xorl
jg
sahf
ljmp
iret
pop
dec
shll
add
testb
or
in
xor
nop
out
dec
dec
xchg
popf
mov
shr
xchg
cmp
std
jg
and
pop
adcb
imul
or
idivb
and
clc
add
mov
pop
paddd
mov
int3
push
iret
and
or
shll
stc
xor
aam
or
sub
or
cld
nop
mov
jge
repz
mov
cmpsl
cli
fbstp
bound
cmp
adc
xchg
pop
enter
stos
mov
sahf
mov
adc
mov
and
and
sbb
or
insb
xchg
out
adc
cs
xchg
add
movsl
jg
and
add
push
arpl
push
pop
lcall
fdivr
shrl
and
ljmp
or
add
int
pop
fnstcw
cmp
lock
inc
mov
ret
pop
sbb
xlat
pop
jg
xchg
sub
and
jnp
int
lock
xchg
jge
lahf
cmp
pop
lock
test
fildl
cmc
jmp
xchg
lret
pop
test
add
ds
push
imul
in
int3
add
mov
loop
xor
and
lahf
and
and
xor
sub
xor
jg
pop
inc
dec
xchg
repz
jne
push
cwtl
frstor
xor
or
sbb
xor
sub
cmpsl
cmp
lock
jg
enter
sbb
mov
fildl
inc
test
or
sub
push
movl
cmc
mov
shlb
pop
mov
lds
insb
popa
insb
stos
mov
xor
xchg
mov
cmpsb
mov
xor
mov
dec
loope
xor
push
out
fdivrp
mov
fisttps
cmpsl
sub
mov
add
add
add
popf
fdivs
sub
add
fs
test
dec
add
in
aaa
andb
inc
add
jle
or
mov
lcall
cmp
mov
fldcw
mov
xor
jo
pcmpeqw
stos
cmp
movsb
lretw
jge
jno
int3
fnsave
jge
out
in
cmp
add
cmpsl
sbb
fs
bnd
shl
cmpsb
int
push
in
push
aas
mov
cli
sbb
aam
sub
ja
das
sbb
sahf
mov
xchg
mov
jecxz
push
adc
inc
gs
inc
mov
loope
sahf
cmp
stc
ret
shl
cmp
xor
or
jecxz
sub
xor
push
dec
sbb
lret
jg
dec
in
stc
aas
and
mov
push
and
ret
xor
popa
lock
inc
loopne
sbb
dec
add
lock
aas
pop
dec
pop
cwtl
arpl
in
decl
arpl
xchg
inc
cmp
sbb
add
aas
in
push
loop
push
mov
mov
nop
lcall
mov
and
lret
cmp
into
dec
mov
inc
hlt
nop
xor
cltd
pop
pushl
inc
test
popa
push
gs
add
cmovae
aas
adc
pusha
push
cmpsb
pop
insb
xor
js
lods
pushf
sbb
movnti
inc
arpl
sbb
popa
ja
lret
xor
xchg
adc
mov
push
pop
xchg
mov
sbb
fwait
adcl
or
and
sbb
mov
xchg
fld
sub
mov
adc
push
sarl
lcall
test
inc
int3
aad
jmp
fs
popa
sub
mov
xchg
test
push
push
int
icebp
inc
loopne
or
cmp
jl
inc
cmp
mov
add
das
sbb
pusha
jg
adc
test
dec
pushf
mov
loopne
shlb
icebp
jns
ret
cld
aam
shl
jae
pop
inc
pop
mov
in
xor
fistps
jg
movsl
sbbb
jg
add
xchg
xchg
lahf
fbstp
push
or
js
test
inc
sub
int3
out
cltd
xorl
add
xchg
sub
jbe
push
mov
lahf
pushf
pcmpeqd
xchg
push
lahf
pop
mov
testl
clc
cmp
dec
arpl
fldcw
add
jg
ljmp
and
call
mov
inc
fdivr
insb
sub
into
inc
sbb
ja
jg
je
pop
test
test
mov
mov
fcoml
int3
les
mov
or
push
lds
jg
inc
jp
pop
fdivp
mov
fs
icebp
push
mov
ljmp
cld
loop
dec
jmp
or
aas
jmp
xchg
push
repnz
mov
lcall
repnz
mov
jl
mov
call
xor
xor
gs
add
pushf
repnz
mov
add
jb
xchg
dec
inc
dec
fwait
sub
pop
xchg
xchg
das
cwtl
adc
push
negl
insl
dec
adc
lret
mov
cli
mov
out
mov
xor
fwait
add
add
ret
outsl
xor
adc
mov
out
dec
sub
insb
add
sub
xchg
lods
sbb
stos
push
icebp
adc
xchg
add
inc
xchg
fcoml
fs
fmull
orb
push
bound
fidivs
push
jg
adc
enter
push
daa
cwtl
ud0
add
lret
push
xor
mov
or
jno
xchg
and
stc
jg
gs
hlt
clc
loopne
xchg
iret
es
jns
push
addl
lcall
es
dec
pushf
and
push
dec
jns
cmp
sbb
mov
jg
pop
lock
xor
psrld
jle
inc
mov
xor
mov
je
das
adc
adc
or
mov
adc
add
inc
js
stc
sub
mov
ret
lods
fcmovbe
daa
adc
add
icebp
call
pop
movsb
lahf
daa
out
jp
jg
arpl
push
add
sub
lcall
dec
sub
fs
sbb
movsl
incl
sub
jecxz
inc
xchg
push
dec
cli
incl
jle
dec
jg
in
call
ja
iret
nop
daa
enter
mov
sub
xchg
sub
iret
incb
pop
xchg
push
pop
inc
std
jecxz
mov
loopne
addr16
in
mov
test
rcl
or
xor
imul
cli
ljmp
into
add
push
xor
sahf
psrlq
cmp
mov
mov
and
popf
push
std
sbb
jecxz
lods
dec
or
xor
mov
mov
push
lcall
lds
sti
stc
es
lret
xchg
push
out
je
leave
mov
dec
add
inc
lea
cltd
mov
xor
mov
hlt
mov
sub
xor
out
dec
cmp
mov
push
add
mov
sbb
mov
inc
and
es
mov
test
rcll
rorb
insb
mov
adc
sbb
add
ds
xchg
sbb
xor
xlat
es
outsl
call
mov
push
xor
bound
lea
decl
push
je
mov
scas
mov
push
std
mov
and
pop
xor
outsb
mov
adc
das
push
mov
adc
pop
incl
mov
sub
push
decl
sbb
lcall
stc
push
es
sbb
pop
stc
das
aam
pop
imul
jb
xchg
icebp
jle
xchg
push
fbstp
jbe
xchg
pop
pop
mov
decl
fldcw
sub
xchg
jb
fnclex
jg
xchg
or
in
dec
sbb
inc
outsb
and
fwait
lea
ljmp
movsb
adc
jbe
pop
out
mov
lret
into
or
hlt
jcxz
sub
ljmp
sbb
jb
orb
mov
outsb
sarb
ja
mov
sub
push
xchg
mov
and
cli
pop
enter
test
aam
outsl
mov
popa
sbb
ljmp
sbb
rclb
add
popa
andl
mov
sub
aaa
into
sbb
or
pop
mov
aas
cld
jg
sbb
shrb
cwtl
inc
lock
push
mov
pop
mov
mov
mov
sbbb
pop
mov
adc
ds
mov
in
stc
decl
pop
iret
adc
or
xchg
cmp
mov
mov
int
lret
cmc
js
aaa
arpl
push
push
rol
loop
cli
lret
xorb
test
cmpsl
mov
adc
sbb
cmc
lock
mov
sbb
jne
inc
add
jb
in
clc
pop
movsl
xchg
ljmpw
cltd
mov
outsl
js
xchg
push
xchg
in
mov
inc
stos
rcr
dec
adc
clc
call
add
ljmp
push
xchg
xchg
jns
hlt
adc
sahf
inc
pushl
adcl
xchg
adcb
and
movsl
xor
xlat
nop
sar
pop
ret
add
out
or
add
ja
inc
cli
xchg
js
daa
pushf
pop
popa
inc
jg
jecxz
testl
ds
in
das
dec
push
pop
iret
out
fucomp
push
cmp
ret
mov
ss
jo
and
jbe
cmp
and
jns
bound
pop
mov
lods
mov
or
les
jmp
cmp
outsb
mov
xchg
xor
jbe
and
aas
movsl
repnz
bnd
lods
ret
jp
mov
testb
cmp
test
dec
repz
roll
cmc
sbb
cmp
clc
adc
scas
sbb
xlat
mov
stc
bound
mov
mov
ljmp
fimull
or
jae
xchg
outsb
loope
test
cmp
das
push
xchg
sub
add
adc
std
mov
sti
xchg
sub
or
xchg
fcmovnb
mov
adc
je
cmp
cld
add
push
inc
call
ret
pop
mov
jns
pop
cmp
int
aam
pop
movsl
in
push
scas
inc
mov
inc
push
push
mov
pushf
lds
mov
subb
jmp
scas
inc
shlb
or
stos
ljmp
loopne
pop
repnz
or
mov
add
imul
or
out
clc
mov
dec
ret
mov
cmp
sbb
add
xchg
cmpsb
xchg
inc
lcall
fdivrl
xor
and
dec
stos
mov
popl
pop
inc
mov
add
mov
daa
jmp
stos
xchg
stos
adc
aam
lret
pop
cltd
dec
call
fcomip
cmp
and
stc
add
pusha
out
jne
das
mov
lds
je
push
lret
sub
cmpsb
addr16
push
and
fistpl
mov
xor
add
js
add
inc
or
cmp
inc
push
stos
jecxz
test
loop
mov
fs
jo
pop
jl
mov
mov
inc
out
or
cmp
jmp
or
in
sbb
insb
push
clc
rcll
xor
mov
mov
add
mov
xchg
sbb
mov
xor
repz
add
add
cmpsb
pop
or
pop
dec
mov
stos
shlb
add
sub
mov
orb
lcall
sahf
repnz
jge
jp
sub
data16
sbb
cmc
xor
inc
mov
testl
sub
insb
xor
add
sbb
sarl
or
nop
pop
or
mov
ud0
fs
jle
xor
data16
and
add
loop
incb
ja
add
dec
xor
push
cmc
mov
jmp
jo
and
adc
leave
jo
popf
lret
mov
shlb
pop
add
mov
hlt
or
addl
ja
lcall
pushl
mov
inc
and
mov
jb
je
add
inc
sbb
add
mov
cmp
sbb
lods
cs
dec
mov
ljmp
int
pop
or
hlt
push
test
aam
adc
ret
movsb
pop
sub
in
mov
out
jo
dec
jg
decl
and
bound
jo
aas
cmpb
ds
mov
xchg
clc
test
repz
lcall
repz
shl
stos
ljmp
xchg
incl
ror
add
nop
push
jl
into
dec
ja
sarl
add
or
incb
rorb
ss
inc
jecxz
jne
fwait
add
ljmp
test
xor
shlb
bswap
scas
adc
sbb
lock
and
add
sbb
jbe
xlat
divb
adc
pop
andb
adc
movsb
ret
cld
lcall
test
add
sbbl
cs
ljmp
shrl
adc
sbb
repnz
push
cmp
das
decl
dec
sahf
inc
push
dec
xor
inc
mov
add
sar
ljmp
cmp
sub
fistl
and
mov
test
lahf
mov
ljmp
movsb
add
sub
loop
add
mov
insb
and
xchg
in
lcall
cmp
dec
cmp
stos
nop
mov
rcll
pop
xchg
xchg
aaa
mov
ljmp
push
out
negl
subb
stos
movsb
pop
rcrl
es
ds
add
call
out
xor
add
dec
jmpw
add
mov
xchg
xor
daa
icebp
repnz
int
mov
pop
jl
fnsave
sub
mov
jecxz
add
push
stos
lcall
dec
push
dec
clc
repz
or
pop
mov
or
mov
sbb
dec
cmc
pop
fs
flds
dec
and
mov
fistps
mov
fisttpl
int
push
cmp
in
dec
push
mov
loop
mov
dec
pop
pop
push
clc
sbb
loope
das
jp
add
cmp
ds
lcall
jno
fisttpl
pushf
cltd
add
decl
inc
adc
ds
sub
ss
lcall
mov
rcr
mov
rcrb
jl
pop
hlt
test
add
cwtl
and
mov
mov
je
loope
ds
lcall
fsts
ret
icebp
inc
ds
sbb
xor
dec
popa
out
popa
or
push
ljmp
mov
push
iret
mov
testl
fistps
dec
jl
bound
in
in
ficoms
cmpsl
jbe
and
adc
hlt
scas
ds
loope
add
clc
sub
insb
clc
jg
loopne
sbb
xor
inc
push
xchg
mov
in
jo
call
pop
jl
and
outsb
loop
fstpt
sub
lcall
mov
imul
jecxz
xchg
mov
and
mov
dec
scas
bound
js
jnp
ds
push
cld
lret
and
ds
outsl
jb
pop
int
inc
xchg
xchg
icebp
pop
jg
xchg
add
nop
cwtl
enter
adc
adc
xor
cmc
scas
gs
jp
xchg
xchg
insl
and
mov
pushl
jle
rorl
cmpsb
lahf
call
repnz
cmc
push
push
lock
cli
pop
or
xor
sbb
fiaddl
dec
icebp
aad
push
add
cmp
in
cmpsl
iret
dec
jle
cs
push
pop
imull
or
add
cmpsb
ds
pop
lcall
adc
shl
call
xchg
cmp
push
imul
test
sti
cs
adc
dec
out
lcall
cmp
out
sbb
stos
pop
stc
or
mov
test
add
add
jmp
push
or
mov
test
test
inc
es
jae
cmp
jb
in
sbb
in
lods
mov
and
dec
cld
mov
stc
adc
cltd
decl
in
cmc
mov
bound
sbb
xor
push
inc
hlt
sub
pop
js
push
gs
pushf
jg
cld
pop
fsubs
inc
rolb
xchg
pop
lock
orl
pop
pop
xor
sbb
dec
dec
xchg
pop
test
popf
rolb
adc
and
daa
cmp
andb
subps
cmpl
push
aas
ja
pushw
es
test
push
movl
mov
mov
out
cld
jmp
fdivrp
call
sbb
gs
sub
add
inc
arpl
xor
or
add
or
aas
sub
stc
pop
lods
setl
sarl
xchg
adc
adc
mov
jmp
pop
mov
mov
adc
sub
push
std
repz
test
shlb
bound
inc
cli
pop
or
jo
ret
push
punpcklwd
mov
ja
push
mov
mov
cwtl
sub
xlat
lea
sub
dec
cld
adc
jb
push
add
out
lock
cmp
add
jns
decl
out
andb
adc
jo
stos
xor
lret
cmpsl
aam
ljmp
or
in
sub
rcl
push
in
add
and
popf
sar
das
push
mov
test
mov
pop
addb
jmp
ret
xchg
and
pop
loopne
cmp
mov
adc
mov
fsubs
orb
mov
sarl
dec
inc
std
adc
insl
add
pop
inc
add
loop
sbb
ljmp
add
jae
sbbl
adc
mov
dec
mov
pop
cmp
push
ffree
jl
inc
add
cmp
dec
xchg
mov
or
stc
flds
int
xchg
in
insb
fcoms
jo
mov
stc
fdivl
sub
sub
add
cmpb
gs
jle
mov
pop
ss
nop
push
mov
inc
push
mov
incl
hlt
xor
lods
out
es
inc
lods
into
nop
sti
sub
stos
incb
cmp
clc
xchg
pop
and
push
cli
sbb
lret
jg
nop
je
mov
jmp
push
fwait
mov
add
mov
mov
icebp
bnd
negb
add
icebp
call
jecxz
aas
sub
out
adc
mov
pop
jge
xchg
mov
cmp
cmc
filds
mov
pop
loop
std
clc
loopne
sbbl
js
out
xchg
adc
push
ja
call
jmp
int3
gs
mov
and
ds
pop
push
bound
inc
clc
push
mov
cmpsb
cmp
push
rcrb
jle
add
jne
ret
jg
shrb
sub
stos
lock
sahf
pop
mov
fnstcw
mov
mov
jns
lcall
mov
test
int3
shlb
call
cli
dec
mov
mov
cmovge
dec
lods
sub
imul
cli
or
push
jle
push
mov
push
insb
fcompl
lcall
xlat
xchg
lea
stos
hlt
jb
cld
jae
les
or
jg
test
xchg
dec
jecxz
push
aas
enter
in
dec
sahf
mov
dec
sbb
pop
xchg
xchg
add
outsb
movsl
mov
addr16
push
mov
loopnew
dec
hlt
imul
jo
sbb
iret
mov
pop
push
jmp
sub
mov
outsl
das
sbb
scas
orl
dec
pop
inc
rcrl
push
push
push
pop
subl
cmp
jp
inc
pop
mov
shrb
jle
shl
and
sahf
je
inc
lods
outsl
jae
cmp
pop
int
rorb
or
add
xchg
int
idiv
jmp
push
cmpsb
or
and
or
addb
push
xchg
add
dec
xor
pushl
loopne
pop
into
adc
inc
lret
sub
popf
cmp
adc
mov
jnp
xchg
jle
fcomip
hlt
outsl
pop
les
pusha
or
enter
mov
push
sbb
dec
inc
aam
xlat
push
xchg
inc
mov
repnz
incl
mov
mov
ret
mov
outsl
mov
pop
cmp
mov
sbb
cmp
sbb
pop
adc
lock
jg
inc
push
push
mov
les
mov
insl
add
dec
cmp
mov
rolb
icebp
mov
scas
dec
test
push
or
and
mov
or
push
mov
cmpsb
invd
or
hlt
scas
push
lret
jo
add
clc
scas
js
je
andb
test
ret
jbe
call
call
mov
mov
ficomps
xor
dec
stos
mov
jnp
or
in
loop
test
xor
push
pop
xchg
test
dec
leave
or
jg
and
dec
sbb
sub
dec
imul
fsubrl
stos
inc
mov
jo
add
dec
int
bound
jge
push
inc
xchg
jno
dec
icebp
or
dec
sbb
imul
ret
sti
and
es
push
popa
repz
xchg
sbb
shlb
lcall
call
clc
and
int
pop
xchg
push
imul
jo
in
adc
mov
adc
les
pop
sbb
and
ja
aad
mov
jbe
dec
sbb
cs
mov
adc
filds
and
add
or
adc
cli
int
jnp
xchg
dec
sbbl
shll
out
ret
xor
insl
decl
imul
cmpsb
and
lea
sub
pop
mov
dec
int3
inc
push
ret
sub
and
mov
xor
inc
mov
stos
imul
push
xchg
sbb
mov
add
or
jns
adc
fwait
pushf
xor
hlt
cmp
into
enter
cmp
imul
mov
mov
pop
push
mov
mov
pop
arpl
adcb
stos
cmp
out
and
add
pop
sbb
popa
test
subb
sbb
into
or
in
pop
jp
out
dec
incl
decl
jne
mov
push
sbb
mov
mov
xor
add
cmpsb
or
jg
je
add
mov
nop
iret
je
xor
add
mov
xor
mov
and
xchg
mov
out
popa
lock
in
mov
rolb
loope
mov
lods
mov
decl
push
mov
popa
push
xchg
insb
ds
aam
popa
aam
mov
jecxz
clc
mov
fisttpl
push
ficompl
mov
pop
enter
loop
add
leave
test
leave
or
and
mov
mov
insb
loope
in
jnp
add
insl
adc
mov
cmp
sbb
incl
inc
dec
mov
or
cmp
sarl
add
int3
shrl
jge
add
pextrw
stos
mov
mov
ja
ljmp
jl
or
adc
sub
xor
and
or
add
xor
imul
sbb
mov
xor
lcall
mov
icebp
or
cmp
mov
lret
jmp
in
scas
xchg
xlat
sub
call
out
mov
mov
and
push
push
fnsave
loop
clc
aaa
xor
insb
push
aad
andb
and
imul
add
inc
or
inc
fcoms
roll
and
fwait
and
or
push
das
rorb
aaa
imull
cld
lcall
pusha
jno
out
xchg
push
fisttpl
cld
adc
repnz
pusha
xchg
jno
jp
sbb
cmp
push
stos
push
in
movsb
xor
js
out
lahf
cmpsb
nop
inc
outsl
test
add
push
cmp
inc
lods
leave
js
inc
mov
mov
xlat
adc
jle
mov
inc
cmp
mov
push
rorb
xor
mov
ljmp
jg
push
sub
mov
aas
xor
pop
lods
stc
jo
add
adc
xor
adc
pop
sub
les
or
and
add
jns
inc
push
popa
add
or
inc
aaa
or
mov
add
loop
inc
in
cmp
jae
lods
mov
adc
in
call
hlt
jle
outsl
fsubrp
incl
rorl
jbe
inc
fucomi
xchg
outsl
mov
jg
or
leave
adc
js
rorb
dec
mov
es
scas
mov
inc
mov
mov
adc
dec
pop
cmp
in
cli
mov
orb
loope
and
lahf
adc
daa
clc
sub
cmpb
pop
inc
mov
mov
sahf
loopne
add
repnz
cmpsb
daa
mov
dec
repnz
cli
sub
std
mov
push
cltd
fldt
aad
call
cmp
stos
imul
rorl
push
adc
cld
lcall
adc
and
mov
mov
push
addb
or
xor
adc
mov
fistps
jl
mov
loope
imul
out
loopne
sbb
or
je
shll
pop
adc
xchg
ret
imul
test
cmpsb
push
push
xchg
cmp
pop
and
decl
leave
scas
fdivs
sub
xchg
cmpsl
mov
shl
aam
andb
in
xchg
mov
sbb
sbb
xchg
xor
mov
aam
fldcw
out
sbb
insb
test
xor
insb
mov
jge
adc
sbbb
inc
fimuls
push
push
mov
or
pop
dec
sahf
adc
add
xor
mov
pusha
test
cmp
push
lock
incl
test
movsb
andl
mov
cmp
or
add
or
outsb
jmp
stos
ss
push
adc
js
xor
clc
sar
add
inc
jl
dec
and
cmpsl
add
add
orl
cmp
std
push
inc
adc
jp
into
into
push
pop
js
adc
fists
sbb
sbb
cmpsl
fimull
push
ss
push
push
sub
clc
push
cmpsb
outsb
cli
push
sub
mov
movsb
push
out
clc
inc
loop
sbb
dec
and
push
push
push
pop
or
das
cmp
add
push
shll
xchg
pop
mov
mov
in
inc
into
jmp
insl
sbb
aad
call
ss
push
mov
mov
adc
js
shlb
pop
adc
inc
pop
roll
ds
scas
inc
xor
pusha
or
fistpl
adc
sub
or
push
bndldx
out
xor
addb
sbb
xchg
push
xchg
jp
call
std
jle
push
mov
xlat
js
jno
push
dec
pop
lret
adc
sarl
adc
aaa
jg
lds
xchg
ds
fs
iret
dec
test
sub
fistpll
je
aaa
sub
sti
jecxz
adc
mov
push
xor
outsl
fisttps
ret
add
inc
inc
mov
popa
cltd
xlat
incb
sub
adc
adc
mov
mov
push
and
pushl
cs
mov
sbb
add
push
lock
xchg
add
jmp
lea
out
xor
lahf
ljmp
push
repnz
xchg
mov
les
out
shrb
add
pop
ljmp
sahf
sub
mov
sti
add
jae
jb
js
fbstp
es
mov
mov
jmp
xorl
jmp
subb
bound
push
call
pop
pop
dec
jl
mov
cwtl
scas
outsb
cmp
add
bound
push
add
add
mov
repz
xchg
cmp
cmp
lcallw
dec
repnz
inc
iretw
dec
dec
sbb
frstor
aad
rclb
pop
adc
mov
test
pop
out
shlb
xor
pop
pop
xor
out
mov
in
add
add
mov
cmp
and
push
pop
lret
push
and
lock
jb
shrl
dec
rorb
xor
sub
push
iret
xchg
mov
pop
lret
pop
or
sbb
std
lret
or
mov
fnstsw
mov
lock
adc
pop
lds
xor
cld
xchg
adc
stc
add
incl
xchg
add
fsubl
add
enter
cmpsl
sub
or
sub
stc
pop
cld
xchg
sbb
icebp
test
call
int
xor
or
insb
cltd
incl
inc
add
push
std
push
or
xchg
adc
mov
mov
out
decb
rcrl
and
hlt
jmp
fwait
cli
xchg
adc
xchg
xchg
daa
clc
sar
in
jns
les
and
imul
loop
add
cmp
fbstp
mov
int
push
push
or
push
imul
pushf
cltd
xchg
stc
int3
fistpll
pop
sub
push
cld
adc
cmp
inc
test
mov
in
dec
pop
and
sahf
andl
cmpsb
ljmp
rorb
inc
or
mov
lea
lcall
add
mov
sbb
inc
and
out
adc
adc
bound
cwtl
push
xor
dec
inc
mov
decl
gs
mov
mov
test
jg
adc
stos
push
xor
pusha
mov
das
decl
pop
inc
rcrb
mov
add
stos
cmp
cmp
jge
add
rcr
jge
hlt
adcb
bound
in
pop
push
or
push
or
xchg
fidivrs
adc
push
repnz
lock
inc
or
scas
stos
in
adc
sub
es
mov
inc
in
je
in
in
stc
sub
or
iret
pop
pop
push
and
movsb
jp
test
idiv
scas
clc
mov
lods
rcrb
xor
mov
cmpb
addr16
xor
ljmp
mov
add
repnz
or
in
jbe
incl
arpl
enter
rclb
or
dec
mov
inc
cmp
jo
add
jg
call
mov
pop
jmp
pop
sbb
nop
lds
cmp
icebp
adc
test
inc
pop
pop
xor
sahf
das
xor
mov
and
loopne
outsl
imul
or
xor
sub
fcompl
loope
iret
negl
cs
push
add
inc
into
sbb
inc
add
lahf
data16
fstps
aam
loop
loope
add
lahf
incl
xchg
jae
mov
sub
add
clc
call
pusha
call
ljmp
or
es
dec
adc
and
xor
in
jg
inc
cmovge
popf
adc
dec
mov
test
stos
xchg
fists
or
mov
xor
int3
sub
test
cmp
add
dec
or
xchg
jg
mov
xchg
mov
and
push
lds
sbb
pop
stc
es
addr16
sahf
adc
add
mov
call
cmc
push
flds
pusha
cltd
xchg
add
sub
mov
jmp
add
scas
hlt
sbb
mov
pop
and
mov
and
xor
enter
imul
clc
pop
xchg
icebp
mov
or
add
aas
je
clc
out
dec
cmp
jns
adcl
sbb
pop
mov
cltd
cli
fcmovne
bnd
sbb
cwtl
mov
add
clc
mov
jg
jns
sub
fwait
test
out
je
dec
shll
pop
jbe
or
scas
pop
lock
out
shll
mov
mov
loop
and
cmp
adc
dec
divl
fildll
push
mov
jbe
int
sbb
sahf
inc
cmc
adc
repz
test
aad
add
rol
mov
clc
add
jge
adc
mov
js
in
pop
mov
xor
and
dec
dec
dec
lock
adc
pop
inc
test
icebp
mov
mov
cld
mov
jl
out
and
inc
jo
icebp
mov
xchg
aad
lahf
mov
mov
or
xchg
imul
jb
add
dec
loopne
shll
or
push
lods
sahf
sarb
clc
dec
repz
adc
es
dec
sbb
cld
int3
inc
ljmp
loop
sub
mov
push
loopne
dec
pop
mov
pavgw
incl
repnz
jl
xorl
sbb
out
in
test
cmp
mov
push
insb
pop
sub
jl
adc
aaa
std
xor
sbb
pop
and
dec
sahf
and
inc
sub
cld
dec
dec
jmp
add
incb
or
aaa
add
ja
sbb
hlt
add
jmp
jmp
cmp
divl
mov
aam
loope
outsb
push
pop
sub
loope
dec
mov
daa
jmp
cmp
adc
pushl
and
cmp
sbbl
fimull
jge
xchg
ds
lock
loop
imul
decl
add
jl
xor
popa
push
cwtl
jo
out
push
xchg
mov
repnz
pop
icebp
pop
int3
test
divl
stc
mov
add
fbld
pop
pushl
les
ss
into
adc
pop
int3
jne
popl
add
fs
xor
pushl
aad
mov
daa
imulb
lods
outsb
or
pop
push
or
or
lcall
add
add
gs
das
in
sti
sarb
incb
xor
leave
push
test
in
push
xchg
add
dec
aaa
and
popf
stc
out
jbe
sub
outsl
inc
ret
bound
js
pop
xor
and
das
pop
cld
aad
jno
pop
subb
mov
bound
xchg
push
mov
movsb
decl
jg
test
test
mov
xchg
push
lock
and
jae
cmc
xor
add
cmp
and
mov
lcall
js
pop
push
push
sbb
std
mov
lock
mov
mov
mov
sbb
clc
lcall
push
test
mov
mov
addr16
insb
xor
iret
sub
and
mov
cmpb
inc
scas
adc
imul
xchg
lods
dec
jae
push
push
ja
call
mov
test
test
pop
sbbl
loopew
xchg
lea
xchg
incb
lret
lret
jmp
je
and
les
xchg
int3
or
leave
icebp
dec
add
pusha
hlt
jmp
daa
push
pusha
xchg
mov
loopne
mov
and
pop
fwait
mov
stos
push
add
je
jbe
mov
sub
push
mov
mov
cli
shlb
or
pop
decl
add
mov
jl
dec
and
inc
cmpsl
pop
adc
cli
jmp
pop
inc
mov
dec
inc
dec
adc
jl
add
pop
stos
xchg
mov
mov
movsb
incb
mov
cmp
adc
pop
ds
fildl
mov
or
aad
aas
fwait
lret
or
cltd
mov
sub
jmp
orl
rclb
sub
int
jle
jge
mov
je
adc
cltd
cmpsl
inc
loop
add
inc
test
clc
mov
xor
sbb
cmp
push
xor
pop
pushf
leave
pop
test
add
push
mov
movsb
in
mov
je
xor
xor
adc
popa
lds
stc
dec
adc
pop
sub
call
jmp
sub
icebp
mov
push
sbbl
lcall
add
or
add
push
mov
mov
push
ss
pop
cli
add
in
pop
add
lret
push
lods
jecxz
inc
rorb
icebp
mov
outsl
pop
adc
rclb
sbb
sbb
loop
insb
faddl
pop
add
add
lock
ret
inc
add
insb
jle
xor
adc
lock
sub
add
adc
mov
jo
mov
mov
scas
fldenv
mov
inc
ljmp
and
outsb
mov
lcall
push
mov
pop
mov
mov
loopne
dec
jbe
scas
push
or
push
jg
jg
arpl
shll
add
jns
mov
cld
jg
rorl
fdiv
push
sbb
faddp
mov
lock
jne
push
xchg
ret
jle
out
mov
cmp
pop
add
pop
push
pop
push
ljmp
adc
and
jl
decl
frstor
test
iret
mov
xor
push
test
fwait
adc
adc
or
incl
sbb
cwtl
sbb
sarb
jecxz
sbb
aas
xchg
lods
push
push
pop
dec
movsl
sub
aam
andl
test
outsb
sahf
mov
jnp
incl
add
adc
cmp
inc
je
push
jmp
jbe
cmpsl
ljmp
movsb
loop
in
dec
stos
add
push
out
inc
shlb
mov
inc
mov
push
stos
clc
jmp
jmp
repz
xorb
gs
sbb
inc
inc
arpl
outsl
dec
dec
cld
repz
clc
enter
outsl
mov
ljmp
cmp
lcall
lret
pop
out
mov
push
lds
and
loop
xchg
in
in
or
in
call
sub
inc
dec
ja
dec
push
and
es
sbb
dec
adc
ljmp
and
add
and
xorb
das
sbb
insb
sahf
or
fcomip
jg
out
pop
mov
aad
mov
xchg
shlb
call
pushf
xlat
add
pop
jb
mov
add
add
lcall
pushf
jecxz
mov
fst
into
stos
or
push
cmp
movsb
pop
pusha
mov
mov
rcll
call
dec
fcomip
jg
scas
stos
push
pushf
inc
dec
or
xor
arpl
jne
outsb
aas
test
daa
or
adc
stc
mov
imul
ret
cltd
fwait
mov
or
leave
stos
lcall
aam
dec
clc
or
xor
mov
xlat
cmp
stos
push
pop
add
gs
in
mov
jecxz
adc
jbe
clc
mov
cwtl
les
rolb
inc
ljmp
sbb
mov
movsb
andl
jp
cs
cmp
je
xchg
outsb
dec
sub
cld
xchg
repz
pop
and
or
data16
sub
jp
pop
sbbl
ss
movsl
adc
outsb
pushl
xchg
sbb
adc
addr16
xchg
call
test
jle
or
pop
push
and
inc
or
cmp
negb
mov
xor
arpl
or
jg
lahf
add
sbb
clc
inc
jo
add
hlt
decl
lock
call
jo
pop
flds
jmp
cwtl
adc
fildl
jg
inc
push
cmp
push
cmp
leave
push
cs
adc
cmpsb
mov
jl
mov
xorb
loopne
dec
jecxz
xchg
ret
aam
push
je
or
inc
repz
imul
and
jecxz
sahf
cld
outsb
push
add
call
decl
es
sbb
inc
push
rolb
jmp
add
clc
jbe
or
sbb
cmpb
or
mov
movl
lea
loop
push
fsubrp
pop
scas
cmp
or
xchg
add
insl
jecxz
fcmovbe
es
sub
call
mov
sbb
das
sbb
push
xor
mov
mov
xor
test
orb
adc
subb
orl
clc
cmp
mov
dec
xor
inc
rcrb
nop
pop
lret
fs
cli
fcoml
mov
lcall
sbb
jg
mov
ljmp
sub
sbb
lcall
jmp
push
loope
in
popa
add
jbe
sbb
add
mov
and
fistl
push
ds
mov
popl
adc
jbe
mov
xchg
int3
xor
inc
les
leave
mov
add
loope
cmp
jno
lods
subb
dec
pushf
lcall
incl
pop
dec
leave
pop
inc
adc
es
and
sbbb
add
out
pop
add
ss
sbb
je
mov
clc
cmp
and
push
std
inc
call
jg
ret
dec
out
in
ds
push
shl
leave
fsubrs
inc
rolb
push
mov
sahf
or
dec
in
sar
scas
cmp
in
insb
xchg
arpl
outsl
fisubrs
mov
nop
sbb
cmp
lahf
ret
and
sub
push
mul
jp
mov
shll
sbb
fdivrp
inc
or
jg
insb
adc
inc
pop
ds
pop
inc
subl
aaa
sti
or
imul
lret
add
and
pushw
imul
lods
clc
pop
test
decb
lock
push
and
dec
dec
adc
cld
fcmovne
push
and
adc
mov
es
mov
repz
je
inc
sbb
xchg
sub
xorb
mov
es
test
cld
dec
fwait
in
cld
inc
mov
mov
rolb
or
fistps
mov
jb
lock
cmp
fwait
push
lcall
push
xor
lock
dec
jbe
cmp
imul
mov
mov
sbb
aam
fidivs
lods
mov
sub
push
dec
mov
jno
inc
xchg
add
les
or
sbb
mov
adc
or
shrl
loopne
lock
mov
xchg
xchg
shlb
clc
add
lea
mov
and
xlat
clc
inc
mov
ret
sar
ret
sub
or
cmp
sbb
clc
xor
sub
call
sub
loopne
cmp
jg
stos
jmp
inc
push
not
movd
push
inc
cmp
cld
or
adc
popf
rcl
je
mov
pusha
lods
push
mov
xchg
dec
es
mov
inc
fistpl
cmp
stos
inc
insl
pushf
dec
push
subl
std
ljmp
popf
sbb
push
sbb
testl
sbb
test
jmp
in
lret
add
das
or
mov
inc
repz
push
insb
movsb
cli
mov
and
and
and
xchg
outsb
inc
sub
jo
cmp
aaa
call
jne
cld
mov
insl
loopne
pop
icebp
mov
pop
cld
jg
xor
inc
dec
mov
mov
lcall
mov
xor
insb
add
or
mov
incl
jno
jl
inc
xchg
xchg
loope
cltd
loop
decl
and
sbb
pushf
std
loope
lcall
cld
mov
out
stos
test
sub
jno
mov
aam
sub
fistpl
scas
ret
jl
pushf
pop
sar
shl
sar
xor
addr16
mov
incb
mov
inc
jno
adc
cmpb
jno
sub
test
repz
decl
sarb
mov
push
add
dec
inc
ficomps
es
pop
jg
dec
add
sbb
jg
or
jae
mov
ljmp
lock
jle
les
adc
loop
or
dec
orb
hlt
mov
jmp
fcoms
pusha
dec
orb
inc
clts
outsl
filds
push
add
push
out
and
loop
or
pop
and
imul
or
and
pop
inc
insl
inc
sbb
repnz
sub
mov
sub
cmp
adc
aad
lods
mov
mov
dec
pop
daa
je
daa
sub
nop
fadds
rcrl
push
testb
repnz
and
add
das
add
lods
cmc
fucomip
jge
enter
cmpsb
jl
js
into
mov
aas
or
pop
loopne
lcall
add
icebp
loopne
lods
inc
inc
cmp
mov
out
inc
ficompl
out
or
in
dec
jae
add
dec
mov
dec
cmp
pop
icebp
stos
or
out
out
mov
and
jbe
sbb
lock
dec
jmp
orl
mov
adc
adc
je
or
scas
cmc
pop
fwait
enter
lock
and
outsb
push
stc
mov
iret
mov
clc
push
stc
cmp
aad
es
aaa
inc
jo
outsb
add
adc
mov
push
sar
sbb
decb
pop
and
mov
jbe
and
loop
call
imul
mov
and
add
icebp
sub
or
dec
and
je
mov
jmp
pop
inc
test
add
movsl
testb
pop
jg
sub
test
loopne
mov
push
sbb
jmp
adc
ja
jns
mov
dec
xchg
jmp
cwtl
adc
clc
inc
lcall
not
dec
ret
insb
jecxz
add
mov
lcall
les
cmp
mov
mov
jae
adc
add
andb
push
cmp
xor
add
jg
insl
xchg
sbb
arpl
mov
lods
jg
movlps
nop
repz
mov
popf
popl
testb
pop
cwtl
pop
fcomp
push
mov
pushl
stc
mov
and
xor
and
outsl
jecxz
lods
add
jmp
jns
and
sbb
xor
push
or
push
cmp
adc
xchg
mov
mov
mov
rorl
int
call
inc
les
in
ljmp
jg
and
adc
arpl
pop
adc
jecxz,pn
sti
sbb
mov
inc
adc
lods
pushf
arpl
lock
insl
xor
cmpsb
add
dec
aas
mov
mov
sub
sub
fwait
je
cmpsb
push
or
cmp
inc
testl
jecxz
mov
cwtl
cmp
push
fsubp
mov
adc
leave
stc
mov
adc
push
shlb
in
adc
mov
clc
dec
ret
inc
dec
adc
mov
cmp
and
lcall
mov
push
inc
jge
ret
or
imul
add
imul
jg
ret
push
repz
lock
stc
xlat
arpl
les
adc
sub
lahf
aas
xchg
pop
xlat
lea
ret
incb
or
dec
dec
cli
pop
pop
mov
push
sbb
cs
out
test
ret
push
pop
add
rcll
dec
xchg
lds
popa
frstor
xchg
inc
stc
push
sbb
jno
stos
xor
es
add
in
jnp
hlt
subb
hlt
flds
xchg
jnp
inc
mov
sarb
scas
xchg
pop
or
and
mov
mov
out
stc
sub
adc
aaa
jb
add
dec
lahf
inc
xor
cmp
dec
loop
jmp
or
stc
inc
xchg
repz
xor
out
pop
xchg
sbb
push
test
incl
cmp
inc
adc
mov
cs
push
push
cli
dec
loopne
pop
jbe
lods
xchg
sub
add
rdmsr
pop
imul
rcll
cmpsl
inc
shrb
dec
loop
pop
mov
outsl
sbb
aas
popa
lahf
inc
and
and
mov
mov
out
push
cmpsb
and
shl
inc
xorb
push
addb
xchg
jge
aaa
rorl
dec
push
add
xor
test
mov
xchg
mov
mov
addr16
mov
icebp
imul
adc
xor
inc
mov
test
xchg
xlat
cmp
outsl
fdivl
adc
loope
jl
cli
fucomi
sbb
loop
inc
es
sbb
pop
call
daa
dec
push
aaa
sub
mov
addb
inc
push
inc
or
add
fimuls
and
adc
add
pop
add
adc
ljmp
scas
adc
or
pop
out
xchg
push
jmp
test
fwait
mov
cwtl
or
lea
call
lcall
out
sub
lcall
xchg
jecxz
sbb
pop
adc
cmp
mov
roll
in
push
jmp
or
dec
mov
stos
add
imul
jbe
ret
jecxz
lcall
fsin
in
sub
mov
movsb
lret
mov
and
mov
jg
push
lock
xor
pop
xchg
mov
hlt
inc
mov
cs
mov
pop
jl
incl
outsl
and
xlat
add
dec
ljmp
ror
test
in
insb
mov
pop
sbb
aaa
sti
jle
loope
ljmp
xor
pop
rcrl
push
jne
je
call
inc
iret
int3
imul
loopne
sbb
adc
insb
or
ljmp
out
std
push
and
and
sub
xor
mov
mov
cmp
rcll
das
pusha
sbb
in
movsl
sar
aaa
push
mov
data16
add
popa
mov
xor
add
jo
hlt
adc
std
out
inc
js
cli
push
sti
cltd
sbb
push
or
.byte
mov
.byte
outsb
in
ljmp
pop
icebp
cmp
mov
jns
xchg
lret
std
bnd
xor
leave
ret
pop
or
pop
pop
ret
or
inc
mov
pop
ret
pop
pop
add
in
jbe
ret
inc
and
mov
dec
or
pop
pop
sti
lcall
pop
add
dec
adc
mov
mov
add
aaa
jbe
adc
adc
nop
nop
adc
adc
in
add
mov
test
add
test
inc
divb
cmpsl
mov
add
inc
mov
mov
fwait
jnp
jge
inc
inc
cmp
inc
imul
in
adc
pop
inc
inc
pop
aaa
cwtl
pop
rcll
push
add
add
and
mov
and
iret
int3
cltd
sar
xchg
out
in
lods
sub
add
mov
test
add
mov
adc
ljmp
sbb
dec
push
mov
add
cwtl
rolb
xchg
add
adc
imul
sbb
adc
adc
rdmsr
or
adc
cs
gs
mov
rorb
and
aam
cmpsb
lret
sbb
notl
adc
imul
inc
mov
mov
push
sub
push
dec
cmpsb
cmpsb
inc
mov
lods
fldcw
outsb
add
mov
push
push
in
data16
add
rcll
out
incl
push
and
add
dec
dec
adc
adc
adc
inc
adc
idivb
addb
or
and
nop
andb
or
or
mov
fists
or
or
nop
inc
adc
inc
and
inc
and
addr16
fistps
inc
dec
adc
inc
dec
addb
add
inc
nop
inc
call
mov
adc
or
nop
add
nop
adc
nop
mov
test
fcmovnu
data16
or
test
sahf
xchg
inc
adc
xor
push
addb
loop
push
dec
mov
mov
inc
push
adcb
add
mov
loopne
mov
cld
and
inc
test
movsl
mov
cltd
ss
or
mov
pop
jnp
jbe
adc
adc
add
add
xor
or
nop
adc
add
ss
add
or
or
xor
inc
dec
data16
add
insl
adc
mov
adc
jle
pusha
sub
adc
loopne
adc
push
xor
inc
loopne
dec
andl
mov
fld
push
xchg
add
orb
lods
rorb
xorl
xor
mov
cmp
pusha
adc
mov
repnz
jo
sub
insb
or
test
jo
rclb
data16
mov
dec
pusha
inc
jp
xchg
mov
orb
jbe
and
fimuls
movsb
pop
call
sbb
insb
xor
mov
iretw
cmp
in
aam
xchg
stos
jle
xorb
cmpsl
add
hlt
sbb
push
inc
mov
inc
mov
sub
push
or
mov
jo
xor
push
cmpl
clc
rolb
adc
cwtl
sbb
mov
pushw
addr16
adc
or
mov
popl
xchg
test
pop
mov
sbb
jo
loopne
mov
loop
xor
cmp
and
repnz
test
rcrb
push
test
push
sbbl
sub
inc
fiadds
add
int3
xchg
js
or
push
or
stos
adc
fiaddl
iret
clc
adc
ret
icebp
sbb
mov
bound
or
xchg
mov
push
test
xchg
xor
cmp
rcrb
xor
leave
dec
add
cmp
cld
cmp
xor
xchg
sahf
mov
add
pop
data16
push
sub
sbb
sahf
jecxz
add
cmpsb
dec
add
ljmp
outsb
inc
add
adc
mov
lods
cltd
loopne
jo
adc
loop
mov
mov
and
mul
popa
jo
fdivrs
sbb
push
add
add
mov
cmpsb
cli
fisubl
pop
cwtl
inc
add
inc
push
popw
or
push
pop
ret
shr
jle
mov
nop
rol
inc
and
push
fimuls
cld
adcb
xor
xor
xor
lcall
pop
int3
or
int
add
xor
xor
rol
add
push
data16
inc
ret
inc
mov
cmp
dec
and
mov
push
cmp
xor
dec
outsb
add
push
cmp
sbb
sub
mov
push
mov
add
mov
xor
dec
inc
fdivs
add
cmp
sub
cmp
testb
jl
pusha
dec
or
mov
ljmp
xchg
dec
ret
add
ret
mov
inc
cmc
jno
fsubr
data16
xor
inc
add
popa
adc
push
mov
jo
jp
cld
clc
jl
loopne
add
sub
orb
add
inc
add
repnz
mov
and
lods
inc
popl
pushf
fxch
push
xlat
cmp
hlt
rolb
cmpsb
jle
adc
xchg
dec
cmp
out
inc
xchg
pop
mov
cmp
data16
push
xchg
cld
das
lds
push
sbb
hlt
mov
aam
add
bound
mov
out
pusha
adc
mov
lret
sbb
xor
loopne
es
push
nop
and
pop
cltd
addl
mov
or
mov
clc
test
push
dec
aam
cmp
mov
cld
dec
xor
mov
sub
or
push
mov
add
movl
mov
aaa
incl
not
adc
xor
adc
sar
in
std
sub
mov
mov
inc
sbb
out
cwtl
adc
jbe
out
mov
faddl
add
mov
lcall
push
fdivl
shrl
xchg
clc
jecxz
aad
lock
dec
mov
sbb
adc
mov
lods
std
mov
xchg
xchg
insb
neg
inc
outsb
fsubrl
fucomi
in
sub
inc
push
test
inc
fdivrs
out
ficoms
sbb
mov
sbb
cltd
sub
mov
iret
in
incl
pusha
sub
fisttps
mov
loopne
outsl
cmp
xor
ret
dec
rcrl
mov
inc
dec
stos
sub
push
scas
mov
dec
mov
pushf
mov
xor
dec
add
je
xchg
clc
mov
jle
xchg
loope
or
rcrl
inc
and
fistpl
sbb
rcll
sbb
stc
aam
mov
mov
sub
mov
enter
lret
aam
mov
rcll
insb
mul
or
rol
xchg
pop
pop
shll
add
xor
sbb
add
sbb
sub
mov
sbb
inc
push
add
insb
and
xchg
mov
cwtl
adc
das
clc
xor
or
add
xor
int
sub
jbe
adc
pop
xchg
inc
fmull
xor
fisttpl
and
xchg
mov
decb
rcrl
aaa
adc
mov
sbbb
icebp
shll
jp
or
imul
dec
jbe
loope
xchg
insl
rcr
add
push
insb
lock
add
addb
or
int3
sub
mov
fdivl
lret
and
insb
mov
add
fadds
inc
std
and
sbb
xor
andl
push
mov
add
neg
add
cmp
int3
imul
andl
scas
fmul
sub
in
insl
or
sbbl
push
neg
mov
popf
enter
clc
rorb
dec
in
imul
decl
sahf
mov
fstpt
lahf
fs
add
dec
xor
lret
enter
shr
lret
cmp
lahf
incb
sar
enter
fidivl
mov
ljmp
fistpll
and
dec
and
push
in
nop
inc
add
mov
addb
es
pop
lret
push
insl
cs
or
mov
daa
sub
sbb
inc
lock
enter
aad
enter
aas
adc
lock
dec
jp
add
pop
add
pop
lea
ret
push
lds
xor
lahf
mov
test
lcall
adc
loopne
add
cli
cmpsb
or
lock
stos
fdivp
dec
push
adc
lret
adc
cmp
mov
testb
jmp
and
mov
push
fisttps
outsb
xor
pop
xor
xor
inc
add
test
jle
sbb
or
enter
cmpsb
xor
inc
test
fcmovu
dec
addb
ss
imul
or
cs
fadds
push
jo
pop
adc
inc
repnz
cli
enter
lods
cmpsb
pop
scas
dec
cmp
fwait
and
bound
sbb
jbe
loopne
loopne
add
scas
mov
icebp
fldenv
xor
cvtps2pi
and
mov
aaa
dec
lods
add
add
mov
ret
pushf
mov
hlt
ss
pusha
sbb
mov
ja
adc
addb
pop
inc
mov
jns
test
cmp
pop
xlat
jo
mov
adc
push
repz
cmp
aam
lods
add
lret
add
add
add
xchg
inc
hlt
lock
hlt
push
add
add
or
scas
mov
sbb
adc
or
pop
adc
mov
lret
rcl
pop
inc
xchg
sub
shr
hlt
mov
pop
xor
out
fwait
dec
add
lods
add
cltd
inc
sub
das
and
aad
lock
jne
ror
repnz
gs
push
gs
test
rol
push
cmp
jecxz
sbb
call
add
scas
add
adc
pop
int
ss
adc
sbb
xor
adc
pop
xor
cmpsb
scas
cmp
cwtl
xchg
or
mov
mov
xor
adc
mov
sbb
sti
test
sti
adc
subl
ret
adcb
insb
sub
fimuls
pop
imul
add
fdivrl
sbb
add
call
sbb
xchg
mov
mov
insb
nop
loop
xor
arpl
dec
stos
test
or
out
aas
cmp
ja
mov
aas
xlat
mov
loopne
popa
add
cwtl
sub
jg
pop
pop
imul
adc
hlt
sub
lock
jo
inc
cli
data16
inc
dec
lret
pusha
jle
lods
std
dec
inc
xchg
movsb
add
divl
sti
inc
cmpsl
sbb
pop
stos
xor
rorb
add
jbe
or
fists
push
subl
dec
mov
or
xor
cmpsb
sbb
add
xor
sbb
sub
pop
add
lock
xchg
lea
xor
js
pop
test
cmp
add
add
loopne
sbb
int3
jmp
and
sbb
fmull
bound
in
addr16
sub
scas
jge
pop
sar
or
mov
and
push
cmp
or
addb
inc
sub
pop
adc
pop
stos
insl
cmp
push
push
inc
clc
out
inc
push
pop
pop
add
inc
inc
sbb
pop
jmp
nop
shrl
loope
aam
mov
out
sti
push
pushl
push
sbb
push
xor
call
push
mov
xor
or
dec
stos
inc
mov
jecxz
enter
or
or
push
loope
ret
aam
pop
fsubp
mov
sbb
mov
daa
xchg
xlat
and
dec
f2xm1
push
xchg
pop
clc
neg
add
add
test
addb
shll
in
out
loope
sub
jb
add
xor
or
jmp
ret
div
je
cmp
lock
xor
ljmp
cmp
pop
cwtl
in
adc
loopne
pop
pop
or
insl
das
gs
mov
mov
ss
fidivrl
sub
mov
mov
in
rcrl
jge
cmc
add
faddl
jmp
add
addr16
jno,pn
rorb
aas
inc
add
leave
rorl
fsts
or
in
out
fs
js
cltd
jl
adc
ljmp
neg
ret
cmp
aas
add
and
dec
xchg
and
dec
xchg
shl
or
mov
mov
clc
dec
mov
mov
sub
aad
int
xor
mov
dec
fs
jle
adc
jb
ret
dec
jae
adc
clc
lods
shrl
jno
jb
repnz
fistpl
adc
dec
dec
jge
aam
aam
jns
lock
push
ret
inc
cmp
in
daa
add
and
clc
sbb
jbe
cmpb
lock
iret
cmp
mov
xchg
fadds
movsb
adc
or
pop
pusha
test
sub
jp
adc
adcb
jle
cmpsb
pop
loope
test
add
mov
pop
nop
rol
jb
sbb
ret
push
fstps
adc
loope
fidivl
jge
divl
negb
dec
mov
jg
ret
ljmp
das
fdiv
add
add
scas
sbb
test
jno
or
xor
push
or
add
inc
sub
dec
repnz
mov
add
dec
incl
add
add
ret
jno
adc
and
sbb
test
movsb
ret
and
insb
and
daa
xchg
popf
jge
push
add
dec
push
rolb
cs
jmp
incl
cli
sbb
aam
mov
push
xchg
inc
push
call
out
sub
vpshufd
outsb
pop
bswap
shll
add
mov
cmpsl
mov
std
out
xorl
xor
jle
adc
mov
pop
mov
xchg
ret
addl
insb
xchg
xor
shll
sub
jae
mov
and
xor
add
jmp
popf
loopne
int3
stc
xor
adc
mov
mov
mov
mov
push
push
pop
ret
adc
add
pop
cwtl
ficoms
fidivl
inc
xchg
xor
inc
mov
inc
mov
and
add
stos
in
adc
add
pop
sbb
mov
or
mov
es
sbb
addl
fistps
sub
push
lea
xor
push
loopne
jle
cmp
pusha
je
ja
pop
test
adc
enter
test
cltd
dec
loopne
inc
sti
fnstcw
loopne
and
dec
leave
ret
les
sbb
aas
sbb
push
xor
iret
jb
and
dec
les
inc
mov
pop
sbb
aad
test
pop
stos
inc
arpl
sti
in
jmp
pusha
cld
insb
dec
jne
sbb
or
out
or
sub
pop
js
lahf
pusha
sub
daa
out
ret
fmull
ja
in
xchg
add
ret
sub
adc
xor
insb
mov
xchg
sub
js
sub
sub
cmp
mov
movsl
mov
or
jb
lock
pop
push
data16
jmp
aad
or
inc
ds
sar
int
mov
repnz
add
cmpsl
in
xlat
mov
pop
cmp
jbe
scas
push
or
dec
add
addr16
leave
or
aam
test
add
out
int
dec
loope
fwait
or
or
cmc
xchg
add
mov
jne
in
add
faddl
push
jge
and
cmc
rorb
add
cmc
mov
xor
adc
jae
cltd
out
ret
add
flds
cli
xchg
add
pop
sbb
add
mov
cwtl
dec
adc
ds
mov
sbb
ror
sub
loopne
or
popa
mov
add
sub
pop
pop
xlat
pop
test
adc
cli
iret
mov
mov
cmp
xor
sarb
sbb
inc
sbb
addr16
jb
sbb
mov
jne
outsb
lar
jae
fwait
es
mov
lahf
jo
jno
rolb
lcall
or
fists
sbb
jb
or
pop
xor
es
repnz
mov
pushf
les
lock
dec
pop
inc
push
pop
adcl
xchg
xchg
cmp
rcr
ljmp
js
cmpsb
jmp
sbb
jl
cmp
rcl
enter
mov
es
adc
sbb
dec
shrb
icebp
imul
push
scas
xchg
mov
cmp
mov
clc
loope
ror
in
cltd
cmp
fldl
push
inc
xor
pop
and
push
cli
adc
int
mov
icebp
sbb
and
jno
in
sbb
mov
das
xor
add
ss
movsb
js
sub
cmp
out
or
lock
mov
lret
mov
inc
jp
cmp
je
cmp
push
jge
pop
aam
pop
xor
sbb
loopne
jle
xorb
sub
les
sbb
jnp
mov
dec
clc
inc
jnp
sub
ud2
push
out
lret
push
adc
movsb
jge
ds
fistps
inc
mov
fsubs
mov
cmpsb
clc
mov
mov
in
jo
es
lret
jmp
push
and
dec
sbb
push
ds
repnz
mov
arpl
add
ds
inc
add
lcall
bound
adc
push
add
lock
sbb
hlt
add
xor
in
inc
daa
pop
jg
ret
fimull
add
gs
sub
push
lea
push
lea
push
call
rolb
or
shlb
push
sbb
xchg
jbe
xlat
jl
sub
sbb
paddsw
add
enter
cmp
dec
sub
pusha
outsl
lods
outsb
test
sub
stos
scas
inc
jo
les
cmp
fcoml
cltd
scas
das
jp
xlat
inc
cmp
fisubs
dec
cwtl
cmp
mov
cs
pop
and
cmp
mov
mov
scas
ret
and
outsl
mov
int3
xor
aas
mov
ret
or
inc
hlt
arpl
jno
hlt
cmpsb
dec
loopne
jo
loope
jmp
cmp
mov
sti
addr16
clc
ficoml
ss
iret
ja
pop
mov
out
aam
push
jge
sbb
mov
test
mov
adc
push
adc
and
sbb
lahf
in
jae
push
mov
and
adc
adc
call
xchg
add
shll
push
dec
sbb
bound
jo
mov
jnp
fwait
stos
insb
dec
add
inc
cmp
test
fldt
inc
jnp
add
cmpsl
nop
adc
js
rcrb
cli
test
ds
sub
not
int
lods
add
and
test
loope
mov
and
cli
loopne
cmp
repnz
mov
add
and
dec
lods
mov
xchg
adc
push
aas
adc
add
mov
push
fnstenv
decb
or
mov
or
add
xor
jmp
or
mov
ss
cmp
inc
adc
cmp
and
lret
inc
fildll
outsb
roll
loope
sbb
js
sub
push
rolb
xor
stos
add
hlt
push
jns
mov
out
or
stc
mov
test
inc
jge
jl
test
and
sub
pop
enter
loopne
push
inc
or
add
loope
push
dec
repz
inc
cmp
lock
outsb
adc
cmp
adc
hlt
sbbl
and
sbb
push
vrsqrtps
outsl
data16
fiaddl
xlat
repz
out
push
jle
pushf
push
adc
sbb
mov
adc
push
xchg
aaa
dec
inc
adc
out
cmp
hlt
leave
push
decl
movsl
inc
inc
pop
sbb
call
pushf
iret
lods
fs
nop
inc
or
bound
or
imul
hlt
das
js
adc
adc
nop
pop
outsl
cltd
jecxz
push
stos
or
add
sbb
ret
adc
test
cli
arpl
lahf
add
sbb
inc
add
icebp
stos
add
adc
push
jl
inc
inc
lret
test
out
xchg
cld
push
mov
sbb
mov
cmp
add
loopne
add
and
ds
repnz
push
sub
loopne
pop
shrb
add
call
adcl
xchg
enter
sub
out
lret
mov
mov
je
inc
out
xor
lds
jbe
add
insb
cmpsb
test
sti
pop
pop
sahf
add
or
or
in
cs
fstps
shll
test
mov
adc
sbb
jp
ljmp
or
push
mov
call
incb
cmp
sub
or
pusha
shrl
sub
pop
xor
inc
inc
rol
xchg
in
jns
jns
jnp
pushf
jmp
push
lcall
adc
xchg
js
dec
sbb
cmpsl
push
cwtl
jbe
lret
mov
call
pop
loope
or
xor
popa
xlat
sbb
ss
ret
loope
js
sahf
add
inc
or
add
mov
test
lret
mov
mov
hlt
push
add
shll
test
inc
add
test
andl
call
testb
out
movsl
pop
dec
xor
or
add
add
add
jbe
push
pop
or
adc
sbb
bound
psllq
out
in
rcrb
test
inc
loopne
mov
loopne
or
and
and
sbb
add
cmc
sub
popa
jo
outsl
sbb
xorl
jae
xchg
and
dec
into
add
cmp
addr16
fisubrs
and
aas
jmp
mov
loope
stos
dec
mov
fiadds
lcall
insl
adc
push
pop
mov
xchg
fsts
or
aas
jmp
push
aad
add
ds
sub
shll
adc
sbb
push
out
in
add
pop
enter
test
cmp
inc
inc
scas
jae
ret
jl
mov
sti
mov
mov
pop
mov
adc
jno
dec
mov
enter
decl
mov
add
shl
mov
lods
push
into
xchg
jne
shlb
pusha
xor
mov
dec
fsubp
aas
xchg
lret
pushl
xlat
push
dec
popf
popa
es
clc
add
xor
add
push
enter
andb
jge
les
fisttpl
cmpsb
insb
daa
inc
push
stos
in
lret
cs
push
xchg
dec
ja
enter
les
fsubrl
fisubs
aam
adc
xchg
mov
jb
sub
sbb
adc
jp
insl
xor
aas
xlat
into
or
in
dec
sbb
or
data16
add
ljmp
lret
sub
add
adc
fcompl
sbbb
pop
or
sbb
pop
nop
pop
jle
test
mov
xorl
push
stos
rorb
ret
add
xchg
jns
and
add
hlt
inc
lock
xchg
mov
dec
jnp
in
rorl
xor
add
clc
push
pop
stos
mov
cli
rclb
js
or
or
push
rol
cmp
pusha
repz
rdmsr
fs
jl
adc
imull
adc
or
in
add
outsl
mov
stc
jno
jmp
push
lea
mov
mov
add
inc
inc
fisubrl
jg
dec
das
dec
enter
jno
fidivs
cli
adc
add
mov
decl
pop
lock
unpckhps
add
mov
mov
push
mov
imul
jo
mov
nop
add
movsl
push
jno
outsl
rcl
dec
mov
xchg
lahf
inc
shll
push
jge
adc
data16
push
push
hlt
xchg
push
cmp
dec
int3
jbe
fiaddl
dec
rorb
adc
shl
cs
or
scas
cs
xor
test
push
dec
shlb
push
icebp
icebp
inc
mov
push
loope
imul
mov
jmp
mov
sub
cmp
aas
enter
mov
adc
sub
mov
cwtl
add
mov
into
adc
jle
cmp
push
push
movl
test
call
insl
js
xchg
sbb
enter
mov
psllq
shll
cmp
or
icebp
sbb
cmp
adc
test
popa
dec
ret
mov
xchg
rorb
insl
dec
xchg
push
bound
add
fcoms
xlat
mov
shrb
or
int
xor
lcall
cwtl
adc
dec
adc
push
pushf
pushf
jb
push
push
cld
sbb
daa
insb
push
test
arpl
aas
outsb
sbb
push
sti
adc
fisubl
mov
pop
jmp
pop
test
pop
sub
xchg
int
pusha
and
repz
mov
adc
push
cs
sbb
xchg
mov
jbe
push
and
sbb
shll
add
or
xor
sub
outsb
add
lock
out
pop
mov
xchg
xor
xchg
mov
push
loopne
sub
xchg
lahf
icebp
mov
hlt
test
inc
mov
pop
andb
sahf
orl
movsb
es
xor
add
jecxz
jns
mov
mov
add
dec
dec
cmpsl
mov
nop
sbb
rolb
push
or
and
pop
ret
sbb
jne
stc
repnz
mov
push
cmp
call
pop
js
test
dec
inc
dec
sbb
jo
in
push
aas
arpl
add
sub
and
mov
sbb
xchg
lret
cld
add
push
std
or
mov
notl
and
push
cmp
cmp
mov
std
jns
test
and
fwait
push
daa
orb
inc
xor
add
sub
mov
push
lock
and
xor
mov
aas
jae
xor
cmp
cmpl
mov
cwtl
imul
xorb
jge
roll
inc
punpckhdq
sub
icebp
cwtl
cmp
inc
hlt
push
pusha
data16
orb
pop
mov
testl
int3
sub
loopne,pt
test
fistps
add
sbb
shr
add
fmuls
loop
cld
xor
pop
jmp
or
lcall
inc
mov
mov
out
fsubs
dec
push
lret
mov
mov
popf
xchg
mov
dec
ds
xchg
dec
hlt
xor
or
scas
shl
aam
push
mov
push
sbb
andl
or
pop
pop
or
adc
or
div
mov
xor
inc
inc
test
int3
shrb
pop
insb
add
mov
mov
into
ret
xchg
cld
leave
cld
and
xlat
hlt
mov
lods
outsb
add
xor
cmp
shlb
aaa
arpl
mov
mov
cmp
pop
mov
stc
mov
xlat
mov
call
cmp
dec
dec
pop
push
sbb
fwait
push
adc
fwait
xchg
arpl
add
test
subb
inc
or
add
adcl
xchg
setae
stos
mov
inc
mov
jge
clc
inc
push
sahf
mov
lods
or
clc
dec
add
fdivrs
orl
xchg
ficompl
js
popf
push
xor
mov
sub
or
xor
add
test
inc
mov
or
cmp
jae
adc
shufps
dec
adc
push
test
adc
sbb
push
or
cmp
jne
addb
jnp
clc
or
inc
std
jmp
dec
jle
jp
jmp
xchg
pop
in
fsts
push
movb
xor
sbbb
aam
push
cwtl
test
pop
sarl
and
pop
adc
in
push
addl
fmull
jge
inc
fs
and
ret
mov
sub
jge
push
fsubl
pop
adc
mov
pop
jecxz
jecxz
pop
dec
roll
mov
pop
pop
fs
into
in
call
scas
mov
add
out
ss
test
lea
ficoms
xchg
push
inc
insb
adc
jnp
mov
inc
shlb
mov
subl
nop
or
incl
lea
push
call
inc
dec
mov
push
mov
fwait
jl
mov
sarl
inc
mov
cmpps
mov
lds
sbb
xor
pop
lret
pop
push
mov
sbb
lret
push
out
and
add
mov
dec
dec
hlt
mov
and
xchg
test
push
add
push
add
inc
test
loope
cmpsl
in
push
dec
jle
cltd
shlb
iret
dec
cld
repz
mov
out
les
mov
mov
xchg
cld
inc
stos
movsb
cmp
mov
test
fwait
inc
dec
xchg
add
and
daa
sti
xor
xor
mov
or
cmp
dec
pop
sbb
jl
sbb
out
mov
lods
adc
out
add
ret
lods
sub
rcrb
adc
outsb
orb
outsb
push
in
cmpsl
cmpl
jae,pn
stc
daa
lcall
ja
stos
out
cmp
jns
sbb
jp
mov
xchg
loopne
lret
gs
adc
cmpl
mov
cwtl
pop
adc
addr16
fcomps
imul
jmp
mov
jp
nop
btc
rcrl
inc
fidivs
out
lds
orb
roll
inc
or
pop
pop
je
mov
lret
sbb
lods
xlat
aaa
or
dec
dec
xor
lods
xchg
cmp
pop
insl
decl
shlb
mov
push
add
sub
jmp
test
rcrb
lock
and
cli
pop
inc
loopne
cmp
arpl
sarb
cwtl
fs
add
scas
sbb
inc
or
outsb
loope
cld
sub
icebp
mov
sub
daa
mov
ja
sbb
or
push
mov
mov
lahf
enter
inc
mov
loopne
mov
xlat
push
inc
iret
shll
insl
push
mov
mov
fmuls
xchg
lods
or
movsl
mov
pop
call
test
sub
dec
push
xor
push
and
pushf
lock
loopne
adc
rorl
sbb
xchg
pop
jb
jp
inc
inc
cld
dec
mov
mov
push
out
xor
in
sbb
inc
or
xor
adc
or
subb
xchg
cli
pop
nop
push
loope
pop
loope
xchg
xor
scas
dec
insb
out
mov
iret
fisubrs
add
pop
adc
loope
loope
or
jae
adc
and
mov
mov
add
jns
or
sbb
jo
scas
inc
xchg
out
inc
jl
sub
js
push
mov
push
mov
in
shll
mov
mov
mov
adc
pusha
loopne
adc
dec
insl
test
repz
inc
and
adc
jecxz
cmc
and
add
pushf
es
adc
das
pop
or
pop
xchg
pop
cwtl
pop
fcomip
cmp
stc
xor
add
filds
lret
push
test
sub
jle
jmp
aam
push
push
call
inc
call
add
xor
inc
add
mov
sub
and
jmp
into
pop
addb
add
cld
inc
xchg
adc
jno
call
or
adcb
sub
sub
jecxz
mov
les
mov
pushf
or
cmp
pop
out
into
out
add
and
mov
dec
sbb
idivl
adc
add
cmp
xchg
add
jno
xchg
pop
pop
out
sbb
cmpl
push
adcb
xchg
cs
inc
jl
jmp
ds
mov
out
xor
jl
xchg
rol
andb
sub
les
icebp
enter
mov
das
inc
xor
js
or
divl
fs
inc
hlt
xchg
cwtl
sti
adc
nop
call
je
lods
dec
or
cmp
scas
and
jne
sub
idivl
aam
and
mov
inc
xor
sub
rcll
adc
aas
iret
daa
push
lock
aad
or
add
addb
xor
adc
push
and
adc
in
adc
int3
xchg
sbb
fnstcw
cli
pop
es
and
adc
inc
xor
mov
sub
js
sbb
adc
add
mov
mov
push
push
insb
int3
jae
jg
outsl
stos
jo
xchg
pop
pushf
adc
aas
mov
add
pop
aad
jne
sbb
popf
es
push
add
cwtl
test
sub
scas
mov
mov
jecxz
scas
add
xchg
pop
or
mov
sub
inc
mov
dec
pop
xchg
add
mov
sub
lahf
mov
insb
shrb
loopne
js
inc
sbb
movsl
mov
push
sbb
bound
pop
in
adc
mov
ret
xor
cmpsb
mov
pop
xchg
mov
jecxz
and
push
or
sahf
js
lods
jns
dec
jb
mov
jno
mov
jge
jle
out
enter
xor
mov
aam
hlt
pop
inc
aaa
incb
das
test
outsl
enter
lods
test
fwait
inc
cmpsb
movb
fcmove
test
jo
jecxz
inc
and
inc
psrad
push
and
or
mov
jns
add
subl
das
dec
or
scas
or
sub
adc
mov
mov
and
cmp
or
xchg
xchg
mov
and
sbb
xor
lret
inc
lahf
out
loop
add
movb
sbb
dec
sbb
inc
testb
adc
add
sub
adc
dec
not
fiaddl
push
mov
jbe
pop
iret
jb
dec
cmpsb
sbb
ljmp
pop
out
or
mov
jbe
dec
push
fildl
ret
sbb
lret
pop
mov
pusha
dec
mov
jmp
push
std
sub
inc
adc
push
push
jne
je
push
add
arpl
int3
out
add
or
add
cltd
mov
mov
xchg
inc
call
xlat
test
inc
std
dec
ja
data16
fisubl
sub
sub
add
sbb
push
and
push
js
add
inc
or
inc
jecxz
sub
std
pop
sar
xchg
in
dec
out
and
shrb
sbb
pop
jno
es
test
sahf
ret
movsb
mov
daa
lock
cli
add
pop
int3
mov
mov
jge
add
push
shrl
frstor
inc
or
pmaxub
or
and
add
sub
push
and
rcrb
jmp
cld
and
aaa
inc
cli
aas
xchg
fnstsw
mov
repz
sbb
pop
jnp
lock
bound
jl
push
cmp
mov
xchg
push
call
sub
push
rcrl
lods
hlt
je
push
out
leave
dec
out
movsb
dec
icebp
ret
mov
popf
jne
fsubp
loopne
addr16
pop
adc
test
ss
nop
pushf
sbb
ret
mov
mov
shrb
inc
sub
add
inc
mov
scas
sub
loopne
cmp
and
inc
pop
sub
jge
xor
push
and
in
jg
pop
mov
adc
mov
sub
or
xor
or
xor
xor
ret
jle
inc
inc
jne
adc
adc
mov
mov
in
cmpsb
les
popa
mov
sahf
mov
add
cmp
mov
sbb
clc
leave
lock
xchg
sbb
cld
mov
push
inc
mov
orb
das
dec
or
daa
cmp
loope
fidivl
xchg
pop
cltd
adc
aaa
lock
xor
sub
lock
lret
fdivrl
sub
sub
inc
xchg
inc
adc
add
mov
xor
cmp
mov
xchg
inc
cli
or
es
ret
in
rol
je
inc
test
test
aad
lahf
cmpsb
test
and
mov
jo
mov
push
xchg
clc
subb
notl
mov
rcrb
lock
repnz
inc
inc
stos
or
and
xchg
sbb
popf
outsb
out
stos
mov
jne
scas
jmp
mov
push
aad
addb
bound
mov
fbstp
xchg
imul
stos
fistl
cmp
sub
adc
jle
push
dec
add
mov
into
add
xor
sub
xor
jno
sub
sbb
dec
lret
movsb
jno
xor
pop
shrl
mov
scas
dec
sbb
enter
cld
push
xchg
cmp
xchg
ficoml
jge
scas
push
and
ss
pop
or
sbb
pusha
or
je
out
ret
sub
sbb
xor
sahf
test
sub
inc
addb
and
fidivrs
outsl
lock
test
out
shll
and
insb
sbb
mov
add
roll
push
test
mov
mov
shll
sub
mov
lcall
int3
pusha
add
inc
in
xchg
ret
jne
xor
pushl
add
add
xor
call
pop
add
jbe
push
xchg
jns
lret
cmp
out
call
sbb
ljmp
push
das
roll
roll
sahf
test
dec
stos
cmpsb
push
lahf
sti
xchg
mov
jnp
adc
ret
mov
xchg
in
sub
mov
fsub
jns
adc
add
jne
sbb
fs
icebp
cmc
mov
dec
rclb
add
xor
push
add
mov
sub
sbb
les
or
repz
push
sar
xor
and
pop
test
xor
data16
pop
mov
add
mov
test
js
hlt
fcompl
inc
push
push
or
adc
or
dec
mov
jl
adc
loopne
addb
scas
loopnew
addb
or
sahf
enter
inc
push
fnclex
add
mov
cmp
add
and
cmpsb
or
dec
inc
add
jno
adc
popa
in
jnp
add
popf
fnsave
hlt
mov
adc
add
outsb
add
or
enter
addl
sub
test
jmp
loop
adc
repnz
jbe
dec
rclb
jg
int
shlb
xor
push
jge
sbb
mov
mov
adc
mov
add
adc
add
shlb
aaa
jmp
push
cmp
pop
mov
pusha
jle
rol
mov
movsl
sub
or
loop
push
mov
adc
daa
shrb
nop
add
mov
and
lock
push
mov
inc
rcl
mov
outsb
out
add
add
pop
xchg
test
iret
dec
pushf
aaa
cltd
pop
push
add
inc
js
xchg
push
jecxz
test
rolb
xchg
lock
js
mov
pop
in
push
add
scas
add
add
ljmp
rcr
jg
insb
enter
pop
enter
mov
aam
pop
mov
xor
testl
shr
add
add
das
es
jecxz
movsb
mov
nop
or
and
sbb
pop
cmp
cmp
test
xchg
mov
jl
pop
in
test
scas
ret
add
jmp
push
int3
sub
jb
sub
shl
ret
xchg
ljmp
cmpsb
xor
lods
mov
adc
clc
push
ret
add
fstpl
push
add
mov
stos
dec
bound
sub
testl
pop
icebp
push
sarb
orb
and
icebp
push
and
push
pop
shll
cmp
xor
add
push
in
sbb
jb
and
pusha
mov
loope
call
pop
data16
or
sub
sbb
in
sbb
sub
ds
mov
hlt
add
or
js
ror
inc
push
in
adc
mov
cmp
push
pushf
fisubs
or
jo
imul
into
aam
ss
test
mov
imul
add
dec
lret
call
or
in
push
loopne
sarb
push
add
jg
pop
jl
inc
loopne
test
add
adc
cltd
sbb
sbb
add
xor
popf
jmp
cmp
sub
cmp
nop
add
sub
and
jp
stos
bound
pop
es
out
sbb
lods
adc
dec
add
xchg
mov
loopne
adc
les
inc
sub
dec
fdivr
dec
loope
xor
xchg
cmp
addr16
dec
push
dec
xor
pop
imul
aas
hlt
orb
push
pop
cmc
cmp
and
xchg
sub
adc
adc
sbb
add
dec
mov
addb
adc
shll
fidivl
jae
lods
push
inc
or
test
jns
outsl
nop
and
or
ret
mov
xor
popl
lds
jo
jmp
push
mov
test
sbb
add
pop
out
dec
sub
mov
jbe
addl
push
xchg
inc
jmp
add
rcll
nop
add
jp,pt
push
lods
xchg
mov
fisttpl
daa
hlt
es
lret
pop
test
aaa
repnz
push
loop
mov
imul
xorb
leave
dec
mov
shrb
sbb
les
xor
shl
shrl
cs
ds
pusha
andl
mov
mov
ret
sbb
iret
and
insl
mov
mov
test
ficomps
shl
jg
inc
lods
pop
pop
into
add
add
pop
dec
sub
inc
dec
scas
daa
push
add
loopne
stos
cld
dec
sbb
or
dec
cmp
cs
imul
inc
xchg
add
daa
xchg
stos
jae
jle
jo
orl
jmp
inc
loope
scas
xchg
cld
dec
xchg
add
lock
jno
daa
bound
jmp
scas
data16
add
insl
xchg
lock
or
or
dec
xabort
sub
jb
nop
add
pop
repz
out
out
jb
stos
sub
push
les
rclb
es
lea
cmp
repnz
inc
xchg
mov
mov
aaa
dec
divl
loop
or
fdivrs
int3
es
pop
pop
mov
push
cmp
pop
hlt
push
xchg
pop
fistpl
push
and
mov
jne
mov
add
adc
adc
inc
out
hlt
test
rcrl
movsl
or
xor
cli
stos
add
pop
sub
sub
packsswb
aas
and
xor
out
push
mov
imul
xor
sbb
es
enter
sub
cmp
mov
je
inc
outsb
pop
jle
adcb
add
add
xor
in
cmp
add
adc
fmul
sti
in
outsb
jg
loop
cmpl
popf
pop
pop
xchg
cld
sbb
notl
lock
icebp
mov
scas
les
loop
adcb
xchg
push
js
cwtl
or
cmc
adcb
add
lea
dec
dec
adcb
pop
xchg
mov
jmp
pop
push
js
test
es
popa
loopne
fwait
cmp
test
sbb
mov
nop
sbb
pop
xor
loope
clc
mov
mov
mov
ret
jo
aaa
or
lods
pop
sbb
mov
sub
ret
inc
mov
out
cltd
out
scas
aam
test
fadds
or
ficompl
clc
jp
test
sbb
addb
test
pop
add
push
mov
pop
add
mov
neg
ret
clc
sbb
lods
test
ja
enter
and
je
mov
rclb
push
hlt
jmp
iret
push
mov
pop
bound
pop
test
push
and
idivl
adc
je
dec
xor
add
push
stos
add
mov
pop
xor
loop
cld
jmp
cwtl
add
mov
lret
mov
sub
mov
sub
dec
lods
sub
in
cmp
or
ret
scas
inc
sbb
xchg
rcrl
xchg
inc
stc
inc
adc
mov
rorb
pop
or
or
jno
flds
or
jb
scas
bound
insl
pop
add
and
mov
push
sub
pushf
mov
pavgw
shlb
inc
test
je
xorl
jae
add
shll
leave
hlt
mov
jge
repnz
lahf
fisubrl
sbb
inc
imul
push
lea
dec
jg
add
ficomps
or
test
push
loop
adc
in
pop
call
mov
jb
sbb
xor
mov
or
or
or
pop
in
inc
add
adc
mov
mov
test
or
pop
pop
enter
mov
inc
rcrb
adc
xor
push
push
pop
push
pop
jne
inc
test
add
in
xor
test
pop
pushf
movsl
xchg
adc
inc
or
xchg
mov
add
mov
push
add
inc
hlt
dec
popa
jns
mov
loope
mov
pop
and
inc
lea
pop
sbb
cmc
or
cli
out
dec
inc
iret
fimuls
adc
fwait
xchg
xchg
gs
addr16
and
jp
push
ljmp
inc
sub
js
pusha
test
or
test
js
xor
insl
dec
sub
mov
dec
mov
cmp
add
jo
mov
aaa
sbb
les
mov
loope
nop
mov
ja
imul
sub
movsl
lock
jae
push
ret
cs
ret
mov
test
pop
xchg
mov
mov
outsb
lea
fs
test
data16
pop
or
push
cmp
roll
add
rol
lock
mov
imul
or
sbb
xor
add
mov
xchg
and
inc
fcoms
push
mov
inc
xchg
mov
adc
mov
or
push
xor
inc
imul
js
jle
xor
lds
push
inc
mov
and
scas
pop
xchg
dec
std
mov
sbb
sbb
lahf
shlb
cmc
mov
shll
or
into
cli
adc
adc
and
stc
jmp
decl
cmp
andb
sbb
cmp
pushf
mov
mov
dec
inc
jmp
push
sub
out
sbb
sbb
pop
addb
jbe
dec
inc
mov
mov
out
xchg
xlat
call
jae
test
fbld
outsb
add
fisttpll
xor
xchg
lock
dec
icebp
mov
inc
mov
sbb
in
push
mov
add
fiadds
fsubr
jae
mov
and
fimull
pop
xchg
sarb
push
mov
add
sub
adc
push
aaa
mov
push
int3
mov
dec
and
or
shlb
in
mov
hlt
stc
and
movsb
lock
add
cmp
sbb
bndstx
nop
sbb
rcr
dec
add
jmp
pop
gs
call
call
and
lret
mov
mov
push
inc
test
xchg
addb
sub
inc
daa
loope
add
jo
sbb
and
mov
inc
adcl
icebp
es
jecxz
mov
sub
lods
and
pop
jge
cwtl
and
call
jno
mov
cltd
jg
fnstenv
dec
faddl
outsb
add
cli
mov
fcmovu
dec
pop
xchg
imul
enter
dec
push
sub
imul
sub
popa
jmp
push
sbb
pop
xor
adc
dec
cmp
adc
cmpsl
cmp
movsl
ja
xlat
dec
inc
leave
ret
les
xor
jl
add
and
lods
adc
cld
xchg
sar
add
xor
push
out
add
subl
test
faddp
lahf
call
xchg
dec
mov
arpl
enter
mov
add
inc
pop
push
pop
pop
movsb
jecxz
rorb
jbe
push
mov
adc
roll
addb
lcall
xchg
xor
sub
fs
scas
cmp
ret
mov
push
dec
fwait
icebp
rcl
ret
pusha
xchg
lock
or
adc
rorb
inc
xor
xchg
xor
sarb
fwait
mov
or
add
xorb
xchg
wbinvd
push
arpl
ljmp
mov
les
test
movsb
push
or
notb
mov
sub
xchg
ss
xchg
jo
jge
ss
rclb
aam
aad
inc
movsb
test
jp
and
push
jns
test
movsl
sub
in
insb
jle
and
into
sbb
add
adc
lea
in
or
xchg
ja
mov
pop
fwait
mov
inc
jmp
pop
shlb
sbb
vpsubsb
adc
and
and
and
add
pop
adc
mov
fucomi
mov
lret
dec
and
aas
xor
dec
loopne
loopne
push
push
push
mov
call
loope
add
addb
rolb
in
fcoml
mov
loopne
icebp
sbb
lds
sub
push
sub
add
jae
call
cmp
or
punpckhwd
cwtl
out
push
out
ret
pop
adc
add
push
andnps
mov
sub
jb
add
and
sbb
jbe
call
add
jae
and
xor
pop
out
sub
add
idivl
negl
push
aaa
and
xchg
cltd
mov
loopne
ficoml
xchg
scas
divb
push
aaa
icebp
pop
sbb
mov
mov
jp
jmp
inc
out
out
sbb
inc
cmp
mov
mov
mov
xchg
in
std
movsl
mov
lock
les
sti
mov
dec
jmp
cmp
push
dec
cmp
and
rorb
loop
lods
fdivl
lods
cmc
or
lret
fistpll
aad
cli
cmp
aam
mov
in
or
cmpsb
pop
cmp
shr
sbb
divb
loopne
js
insb
popf
xlat
popf
inc
les
sub
mov
sub
fcmovu
sub
sbb
xor
testb
push
add
cmp
push
jmp
cli
lock
inc
fisubl
cltd
xor
sub
cli
or
push
stc
enter
testl
cmpsl
add
xor
push
mov
stc
shr
mov
notl
jp
xor
add
jb
pop
shll
or
jge
add
loop
rorb
mov
ja
pop
call
int3
icebp
and
dec
or
fcomp
jo
inc
pop
inc
loope
in
mov
inc
jmp
push
out
and
add
mov
outsl
mov
or
mov
sub
inc
push
add
dec
btc
cs
ja
ljmp
test
dec
dec
sbb
movsl
add
xchg
loope
pusha
add
push
or
and
int3
inc
cmc
sub
ja
or
push
loop
mov
adc
push
pop
jne
add
mov
ret
mov
and
cmp
jae
jns
sbb
ja
xlat
leave
loop
fiadds
rcll
push
imul
pop
add
sbb
push
lcall
sbb
jmp
aaa
jno
loopne
ja
repnz
imul
loopne
mov
lret
pushf
cwtl
xchg
sbb
in
shr
jp
mov
das
ljmp
dec
jo
sbb
loopne
out
jmp
lods
cwtl
push
jo
xchg
dec
test
arpl
pusha
and
pusha
sbb
mov
scas
orb
add
push
mov
push
xchg
or
jge
push
sbb
jns
pop
out
fiadds
sbb
in
pop
data16
cmc
lahf
int3
push
jns
xchg
mov
andl
ficomps
jo
xchg
ret
scas
in
dec
pusha
loope
add
mov
cli
in
add
fisttps
pop
push
lea
push
dec
mov
clc
push
call
jb
loop
scas
outsb
jb
mov
mov
test
push
mov
stos
roll
fisubs
test
add
aad
es
sbb
jecxz
std
jg
pop
es
add
dec
pop
loope
push
add
outsb
cmpsb
decl
arpl
add
jg
icebp
sbb
fisttpl
fcmovne
shl
jge
out
mov
out
or
xchg
add
addb
jne
pop
sub
or
mov
icebp
push
xor
xchg
roll
in
pop
cmp
sbb
inc
repz
leave
xorb
sub
add
icebp
mov
jnp
jp
mov
loope
mov
xchg
imul
test
sbb
outsl
mov
add
rorb
daa
add
xor
jbe
movsb
or
adc
movsb
shl
sub
stc
mov
jecxz
mov
inc
sbb
ljmp
mov
gs
dec
and
bnd
fistl
xor
popf
pop
les
daa
dec
cltd
pop
stos
push
mov
aad
rolb
ret
push
jmp
push
mov
sbb
sarb
loope
cld
cli
mov
ffree
ret
aaa
mov
mov
popf
roll
loopne
sbbb
cmpsl
and
sub
cld
xchg
and
loop
dec
cltd
add
imul
jo
sub
rcrb
sub
fdivrs
insl
adc
clc
fdivrs
sbb
dec
lret
daa
mov
ja
scas
ds
ret
jbe
pop
jb
fstl
jne
dec
and
rorl
aas
in
imul
sti
mov
in
sub
scas
xchg
inc
ret
lea
loope
stos
lea
xor
mov
rolb
and
cmc
xor
iret
xor
add
add
and
int
inc
dec
inc
out
pop
and
jmp
push
insb
in
inc
jmp
popa
int
shr
and
adc
mov
mov
sub
ret
adcb
clc
pop
xlat
aas
and
add
adc
jnp
int3
mov
int3
xor
mov
mov
pop
inc
dec
movsl
shll
adc
inc
cmp
inc
xlat
pop
les
gs
fdivs
inc
cmp
lds
gs
add
add
and
cld
jnp
pop
out
dec
xchg
sbb
rclb
and
shl
rolb
jo
std
mov
pop
bound
add
popa
cmp
int3
stos
int3
xchg
fiadds
rclb
inc
cld
mov
adc
inc
add
repnz
dec
loop
mov
imul
mov
add
shll
wbinvd
loopne
bound
or
add
inc
aad
inc
out
outsb
push
sub
push
in
add
loopne
dec
fists
js
repz
out
sbb
jmp
mov
mov
dec
insb
int3
xchg
mov
cli
pop
rolb
pop
inc
int3
cmp
repnz
rolb
add
push
negb
in
jmp
jg
mov
loope
jns
sub
and
inc
das
lds
lea
in
ds
xchg
out
sub
and
mov
or
sbb
or
and
push
lock
pusha
imul
dec
or
rorl
mov
jmp
push
sbb
mov
incl
push
add
add
es
pop
pop
les
lock
aam
inc
xchg
ret
pop
xor
xor
dec
lock
inc
cmpsb
aaa
adc
inc
cmp
cmp
fidivl
fstl
sbb
push
cld
push
mov
inc
add
or
inc
inc
mov
sbb
fwait
mov
das
in
dec
sbb
dec
xorl
jp
addb
hlt
cmp
icebp
and
push
shlb
loope
pop
ret
xorb
fistl
popa
cmpsb
adc
or
xchg
test
mov
mov
dec
or
mov
enter
add
ret
push
push
movsl
call
push
in
push
call
add
push
aam
jb
rclb
int3
mov
jae
pop
mov
xchg
dec
faddl
dec
aad
inc
shll
add
dec
or
xlat
js
sub
mov
sbb
orb
jmp
ss
inc
in
sub
add
mov
orl
ret
or
cwtl
jg
push
sub
dec
lahf
daa
xchg
adc
imul
ffreep
adc
pusha
push
mov
xchg
dec
jl
add
add
jnp
mov
loop
in
pop
scas
test
loope
sbb
fcoml
popa
xchg
add
push
or
xchg
mov
or
dec
jecxz
or
es
mov
shrb
je
adc
pop
addr16
in
and
mov
std
aam
push
shll
pop
bswap
cld
jns
les
icebp
add
inc
or
adc
leave
xor
sbb
add
mov
mov
orb
jnp
leave
add
sub
or
xor
sbb
mov
sbb
sbb
ss
dec
ret
xor
sub
cs
sbb
xchg
shlb
mov
push
add
jmp
roll
ja
mov
test
xchg
sub
or
xchg
pop
adc
cmp
popa
pop
gs
inc
leave
fiadds
pusha
push
adc
jmp
adc
xchg
xor
movsl
ja
je
outsl
out
dec
push
inc
mov
sub
mov
lcall
ret
ret
sbb
xchg
sbb
lods
xor
add
lock
push
and
std
cli
inc
push
bound
sub
sbb
xor
out
jmp
jnp
inc
jbe
dec
icebp
mov
sub
loopne
sarb
js
inc
test
jecxz
mov
push
js
clc
std
les
jmp
cli
mov
scas
pop
js
call
xlat
add
lds
out
rolb
add
add
or
cltd
xchg
push
push
movsb
sbb
lea
add
movb
fadd
loopne
add
orl
mov
inc
sub
sbb
inc
sub
jg
loope
inc
movsl
dec
pushf
cmp
pop
push
pop
sbb
aam
movsb
fdivr
sub
sbb
dec
int
inc
pusha
icebp
sbb
pop
nop
mov
push
rorb
mov
sbb
xchg
jnp
std
aam
std
xchg
ret
cld
dec
bound
fsts
cmc
add
leave
lea
insb
or
or
test
add
push
pop
jno
mov
out
aaa
and
rcrl
pop
flds
enter
and
cmp
cmp
or
nop
dec
sub
lea
frstor
dec
daa
and
rcl
dec
push
sub
addb
add
mov
test
clc
xor
xchg
mov
pslld
mov
xchg
fisttpl
leave
ret
and
roll
push
repnz
cmpsb
shll
aad
pop
push
and
xor
loopne
xchg
loopne
mul
shl
fimull
mov
daa
dec
add
fldenv
clc
add
das
cmp
add
and
shr
sub
stos
push
aam
sbb
adc
out
jg
loop
pop
or
push
push
add
add
xchg
add
mov
lock
add
xchg
shlb
jmp
fdiv
aas
test
adc
inc
fs
fadds
out
dec
ja
sub
stos
test
xchg
xor
cmpsl
rcr
movsb
fistps
inc
cmpsl
inc
xchg
inc
add
push
lock
cltd
push
subl
xchg
pusha
sub
push
jb
sub
xchg
xchg
inc
arpl
mov
shll
clc
call
pop
clc
cmp
push
mov
and
lret
cmp
mov
lock
or
adc
or
and
arpl
pushf
pop
test
dec
fldenv
in
enter
dec
jbe
in
or
roll
sldt
jne
std
xchg
rorb
std
ror
inc
mov
daa
in
mov
cli
add
xchg
nop
push
sbb
mov
inc
imul
inc
add
imul
mov
mov
cmp
pusha
and
aad
int
dec
fstps
cmpsb
lods
call
or
adc
sbb
ret
das
fldt
jl
ja
into
jbe
mov
movsl
add
lahf
les
test
lahf
fdivrl
arpl
push
lcall
psubusb
subps
aaa
xor
jge
or
inc
shrb
and
sub
inc
xchg
test
fcomps
mov
cmpsb
jae
hlt
mov
decb
insb
std
ds
xchg
insb
adc
or
add
clc
xlat
div
rcrl
gs
push
clc
lcall
nop
add
and
imul
sbb
jo
fidivrl
nop
jle
push
scas
cli
loope
flds
scas
mov
jne
cli
loopne
or
fists
inc
xchg
pusha
push
push
mov
sbb
xchg
mov
push
cmp
lock
loop
or
cmp
fs
cmp
mov
sahf
xor
insl
fwait
bound
dec
mov
add
mov
mov
pop
push
clc
shlb
shl
adc
cld
push
push
sbb
icebp
loopne
and
mov
jns
jmp
push
sbb
call
sub
or
push
and
insl
inc
in
loopne
loop
push
add
push
add
ror
imul
sub
mov
insl
add
dec
rclb
stc
add
data16
mov
fidivrs
or
or
and
add
cmp
in
fstp
cmpsb
xchg
loope
roll
mov
popa
shl
mov
sbb
sub
push
loope
pusha
pop
pop
add
xlat
divl
cmp
pop
xor
sahf
dec
stos
call
pop
mov
inc
sidtl
daa
cmc
add
or
test
and
cmpsb
sbb
jnp
stos
mov
sub
lret
dec
js
ljmp
pop
std
add
sbb
or
push
popl
dec
and
inc
rolb
test
inc
sbbb
cmp
push
fsubrs
cmp
pop
or
in
in
pop
std
pusha
mov
aad
roll
fldt
movsl
push
inc
or
test
inc
sub
icebp
or
xor
mov
cmp
cmpb
test
jo
sbb
fsubs
pop
add
cmp
adc
out
aas
fisubl
dec
lods
xchg
outsb
arpl
pop
sbb
repz
inc
jge
lds
push
leave
inc
fmull
ret
push
testb
adc
sbb
pop
cmpsw
lahf
or
or
mov
add
repnz
dec
xchg
sbb
or
loope
pusha
xorl
push
sbb
orl
xchg
loope
fwait
xor
rcr
lret
push
pop
add
and
imul
enter
add
fsubl
cwtl
xchg
jmp
xchg
movsl
fsubl
test
mov
dec
pop
push
add
mov
subb
ja
sarl
std
aam
mov
pop
xor
dec
sbb
jge
test
ljmp
jmp
adc
mov
jbe
mov
add
xchg
mov
mov
int3
mov
loope
ds
add
sub
dec
loopne
addb
add
pop
cmpl
mov
push
mov
and
in
test
test
int3
add
cmp
dec
pop
scas
mov
addr16
ror
mov
dec
std
xchg
int
jno
lret
or
inc
test
sahf
or
aam
cmp
or
add
unpcklps
sub
pop
mov
add
mov
mov
dec
add
push
pop
cmp
rol
pop
pop
pusha
decb
jo
dec
mov
add
xor
jecxz
roll
iret
or
jecxz
sub
test
stc
shrl
mov
cmpl
pop
sarb
sbb
adc
or
pop
loop
sbb
xor
mov
push
movsl
cmp
loopne
je
pop
dec
cmp
nop
sbb
sbb
mov
mov
add
dec
adc
clc
fsub
jae
out
icebp
loopne
push
cmp
mov
fimuls
push
repnz
mov
addb
add
dec
shll
xor
test
sub
jne
fcomi
std
mov
fdivl
pop
jmp
ficomps
jmp
in
movsb
ds
in
inc
add
xchg
and
fdivrs
adc
movsl
lret
pop
sub
nop
mov
fs
xchg
xchg
add
adcb
stos
pop
jle
dec
nop
push
rol
and
ficompl
rclb
sbb
adc
mov
dec
rorl
push
cwtl
push
or
cld
add
mul
sbb
insb
cmp
les
adc
mov
andb
inc
orl
xchg
es
sbb
dec
popa
adc
push
mov
clc
mov
in
xor
addr16
ljmp
adc
inc
sub
bound
xchg
jb
ret
aaa
mov
push
dec
sub
shlb
pop
jmp
lcall
inc
jmp
jg
push
js
pop
jne
pop
in
jbe
pop
inc
pop
xchg
fdivrl
mov
xor
les
add
or
cmpsl
adc
xchg
or
xor
jo
jbe
add
sbbb
lds
lret
jmp
xor
les
mov
sub
loope
sbb
cli
adc
add
es
orb
push
dec
mov
adc
and
sbb
stos
repz
pop
js
cmp
mov
push
fadd
inc
ljmp
ret
adc
or
dec
dec
and
jo
dec
dec
test
xor
loope
shll
pop
testl
mov
sub
push
and
mov
sahf
pushf
adc
in
loope
cmc
pop
xor
pop
or
add
sub
mov
in
mov
ret
imul
lea
add
and
sub
and
or
int
push
sahf
jo
aaa
mov
xor
addr16
fistps
subl
in
aam
fcompl
test
cltd
mov
and
pop
xor
loop
sbb
notl
ret
sub
push
call
sbb
lock
loopne
nop
mov
mov
add
ret
es
flds
lcall
lcall
ret
cmp
xchg
sub
xchg
or
dec
in
inc
cmp
jge
mov
xchg
gs
xor
arpl
ret
and
mov
push
adc
mov
sub
lret
mov
inc
pop
mov
push
xor
rcrb
das
pop
inc
mov
xchg
insb
and
mov
push
sbb
and
popa
add
aam
leave
rolb
flds
or
pop
call
sbb
cmpb
cmp
add
fisttpl
xchg
push
pop
adc
add
push
icebp
dec
dec
icebp
cld
dec
dec
test
xor
or
sbb
pusha
inc
outsl
or
mov
jbe
mov
cs
pop
push
jmp
jnp
push
aam
push
shlb
cld
xlat
inc
lods
arpl
lcall
push
dec
sbb
xchg
fcoml
add
mov
pop
roll
xlat
push
xchg
jno
cmc
mov
pop
fcompp
pop
fcompl
jmp
fcomp
or
jmp
inc
enter
or
xor
push
and
lods
push
and
stos
mov
push
dec
mov
inc
xor
jg
mov
jno
in
sti
sbb
push
bound
mov
shrl
rcrb
lahf
int3
into
pop
inc
adcl
aam
insb
push
mul
pushf
mov
add
cmp
xchg
push
fcmovb
iret
cli
das
mov
mov
jg
js
stos
jmp
pop
add
cmp
xor
imull
ficomps
sub
decb
mov
movb
xlat
add
testb
dec
sbb
scas
mov
fidivl
pusha
xchg
test
ret
mov
adc
iret
sub
ss
add
adc
mov
aam
inc
pop
push
dec
lea
add
jbe
lret
dec
inc
std
push
dec
mov
push
mov
popa
pushf
push
add
inc
mov
pop
out
testl
and
imulb
movsl
add
loopne
push
push
mov
outsl
fsubrs
mov
call
std
mov
jno,pt
in
icebp
mov
pop
sbb
ficoml
or
aaa
loope
call
sbb
and
jnp
lock
out
rcr
mov
and
pop
es
loopne
push
dec
sub
das
and
cli
xor
xor
cs
loop
inc
or
int3
push
call
pop
jnp
xor
sbb
in
rolb
ud1
out
imul
aas
mov
cmp
sbb
sbb
std
add
sub
addr16
push
aam
xor
add
pop
cmc
mov
or
outsb
add
cmp
adc
divb
test
inc
test
mov
fisubs
mov
cmp
lret
inc
fbstp
sti
aam
push
cs
and
sbb
add
push
add
leave
pop
fdiv
cmp
mov
cmp
stos
sbb
lods
mov
into
add
and
hlt
pop
mov
je
sub
push
loop
loopne
fisubrl
in
mov
das
call
loop
ret
sbb
inc
mov
js
in
xor
inc
loopne
call
add
repnz
dec
lret
and
push
addb
push
enter
and
lret
dec
add
mov
test
push
iret
xchg
pop
dec
loopne
sahf
shl
or
mov
inc
loope
pushf
aaa
daa
fdivs
sub
pop
sub
mov
loopne
in
mov
inc
and
orb
inc
inc
sub
xchg
imul
mov
or
sbb
push
mov
sub
enter
movsb
cmpsb
fdivrl
adc
inc
dec
and
push
dec
lock
push
dec
mov
cmpsb
movsb
mov
cld
or
mov
addl
fsubs
mov
rolb
les
add
sahf
rcrb
movsb
js
sbb
ljmp
std
in
fstpt
in
push
mov
in
ja
mov
mov
adcl
inc
adc
adcb
mov
lret
sbb
out
push
sbb
push
sbbl
insb
inc
adc
mov
or
xor
ficoms
lea
push
cmpsl
pop
addr16
jno
cli
mov
and
add
inc
mov
adc
pop
sbb
pop
ljmp
ud1
jg
cltd
or
add
mov
sub
and
rorl
sbb
and
rolb
shll
push
pop
mov
movl
shrb
cld
divb
pop
jp
in
add
ljmp
sub
gs
add
xor
sub
cmp
outsb
movsb
std
sub
popa
jle
cmpsb
inc
out
adc
push
sub
movsb
enter
cmp
push
adc
dec
add
push
and
inc
or
js
xor
repnz
nop
stos
inc
fsubrl
push
fstpl
fdivrl
and
loop
orl
in
sub
pop
or
stos
pop
or
lahf
insb
sbb
or
sub
mov
lds
mov
push
test
enter
and
pushf
adc
jnp
lock
ret
in
inc
subb
negl
jg
popa
shll
cwtl
mov
sub
jg
testb
and
mov
les
and
es
sub
leave
cwtl
clc
push
push
mov
push
js
inc
adc
jmp
inc
daa
jecxz
mov
ss
lods
sbb
jae
cmp
pop
inc
fidivs
ret
addr16
and
addb
data16
mov
gs
adc
adc
incb
pop
test
sbb
sub
add
xchg
or
fwait
pop
xchg
sub
pop
mov
sub
out
cmpsl
incb
inc
jmp
test
jbe
icebp
inc
aas
mov
inc
mov
repz
dec
mov
jmp
movsb
fists
pop
mov
mov
pushf
test
mov
sub
jne
int3
and
es
xor
sbb
mov
sbb
scas
lock
pop
or
stos
push
fsubrp
pop
mov
fwait
in
inc
cwtl
jo
mov
loope
cmpsl
add
orl
lahf
add
sub
and
mov
les
loope
lods
rcrl
je
cmp
or
jmp
lock
pushf
xchg
push
jle
rcl
pop
sti
mov
adc
sub
sub
lods
mov
aam
xchg
pop
dec
jmp
lret
or
div
adc
loopne
mov
stos
dec
inc
and
imul
jmp
pop
cmp
punpckhwd
mov
mov
mov
pop
movsl
ret
aam
sbb
cli
adc
xor
rol
or
jb
sahf
add
lods
aas
pushaw
mov
sahf
fwait
push
pop
mov
cwtl
orb
adc
xor
idiv
add
test
lock
and
cmp
es
sub
sub
pop
fsubl
mov
dec
pop
pusha
pop
out
add
pop
fstpt
or
in
add
add
data16
aad
jo
iret
sbb
cli
xor
sub
add
mov
loop
push
into
or
fcomps
pusha
push
pop
cmp
pop
test
fcompl
pop
or
and
sub
or
mov
shlb
inc
and
xchg
mov
lods
jo
int
adc
or
loopne
sub
out
pop
jecxz
add
inc
sub
push
push
mov
or
lods
lcall
push
cs
lea
push
push
jo
shll
mov
pop
or
sbb
adcb
cld
jnp
repnz
xchg
and
scas
mov
dec
in
and
adc
inc
outsl
ds
call
xchg
dec
testb
test
lret
cmp
out
aam
jmp
xchg
aam
sbb
sahf
mov
or
and
in
cmc
add
xor
fldl
inc
fdivs
in
mov
push
adc
xor
imul
adc
add
int
addb
or
lahf
mov
popf
sbb
add
nop
cltd
je
fiaddl
aas
inc
xor
and
or
inc
fs
push
xchg
jp
ljmp
fsubrs
xchg
xchg
push
add
mov
dec
pop
dec
repnz
sub
fs
sahf
jl
or
fwait
pop
out
xor
pop
pusha
fcomp
xor
jp
scas
inc
pushf
sub
add
add
push
out
cmp
pop
lea
mov
in
mov
cwtl
jp
jne
jmp
or
inc
dec
mov
push
dec
mov
sub
sub
add
in
sub
jmp
ret
jnp
pop
mov
and
enter
inc
and
fwait
ja
addl
icebp
inc
xchg
rol
inc
inc
cmp
fbstp
hlt
inc
notl
adc
ret
lret
and
push
pop
in
aam
int
in
arpl
mov
lret
icebp
fisttps
fildl
icebp
aaa
mov
inc
lods
adcl
stos
andb
outsl
lock
sahf
fildl
sbbb
cmp
hlt
filds
dec
xchg
aam
ds
and
dec
and
push
dec
xor
in
icebp
xchg
out
loop
shlb
sbb
shr
idiv
insl
sbb
lret
movsb
cmp
jbe
cmp
mov
repz
jo
xchg
sbb
dec
scas
sbb
les
and
dec
jmp
test
loope
rorb
idivl
sbb
dec
loope
lea
repnz
add
fildl
addr16
push
and
cwtl
call
adc
loop
or
jecxz
add
sbb
nop
or
adc
xor
xchg
pop
pop
adc
inc
adc
fiaddl
push
js
call
push
cmp
cmp
rorl
in
cs
inc
or
mov
subb
ret
adc
and
cwtl
pop
xor
int
push
in
mov
pop
inc
movsl
mov
jp
ret
shlb
out
lock
mov
popa
adc
or
clc
or
inc
and
mov
xchg
push
inc
and
into
add
dec
dec
push
int3
loopne
adc
scas
xchg
rorb
movsl
loopne
xor
adc
scas
hlt
or
pop
scas
icebp
repz
loop
popa
push
aaa
hlt
repz
test
mov
addb
xchg
jns
sub
insb
inc
adcb
test
add
aad
icebp
xchg
hlt
in
cmp
in
mov
mov
and
adc
jo
cmp
add
incb
cs
add
or
mov
xor
dec
ret
insb
push
mov
inc
jae
cltd
jmp
jecxz
xor
jge
movsb
js
outsl
xor
add
popa
sub
imul
lock
cmpsl
sarl
adc
insb
mov
and
sbb
sub
sub
sbb
test
mov
cmpsb
ljmp
pop
sub
adc
icebp
filds
inc
mov
sarl
dec
popa
xor
inc
dec
mov
cmp
adc
lahf
jmp
xorb
jg
dec
fnstcw
add
fadds
jecxz
cmpsb
add
adc
sub
into
and
mov
movsb
ret
imul
loopne
ds
jne
cmp
cld
mov
add
mov
pop
shl
sub
movsb
dec
cmp
xchg
adc
stos
add
adc
jnp
ds
sub
clc
dec
sub
xor
sti
das
mov
and
mov
adc
into
mov
inc
mov
cmpsl
lcall
je
push
lock
clc
push
es
std
loopne
lock
and
sub
test
cs
cmc
mov
add
cmp
das
jmp
pusha
cli
adc
adc
imul
int
inc
faddl
das
test
pop
aad
arpl
mov
lcall
call
sbb
or
inc
cmp
fdivr
sub
test
pop
pop
cli
xor
int
and
out
mov
mov
pslld
inc
nop
shrb
add
mov
or
dec
xchg
jns
ljmp
inc
aad
jge
jmp
or
dec
jbe
pop
sub
call
xor
test
iret
or
xor
fildll
add
mov
sbb
aas
call
sar
inc
adc
cld
sub
push
aam
call
push
pop
icebp
ja
aam
jg
imul
loopne
in
push
or
iret
add
xor
mov
shll
mov
inc
in
xor
int
xorb
add
outsl
add
sub
jns
mov
addl
xlat
pop
adc
xchg
mov
add
cs
mov
and
add
rcr
adc
lock
aam
cmpb
push
fists
fcoms
dec
aam
mov
test
mov
shr
xor
test
aaa
fcoms
sti
inc
pop
in
shll
fcoml
mov
mov
inc
and
sbb
push
mov
sub
xor
cmp
jge
pop
arpl
and
pop
or
mov
mov
add
int3
jmp
or
add
enter
push
push
call
cld
lods
addb
outsl
jno
xchg
insl
push
cmp
xor
ja
pop
loopne
add
sub
das
data16
cmp
sbb
pop
add
pusha
adc
rcl
xchg
hlt
sub
push
mov
add
dec
rclb
xor
mov
aam
aas
fldenv
popf
inc
sbb
push
adc
fistl
pusha
inc
pop
imul
jns
xchg
add
orb
push
mov
ret
aaa
orl
insl
inc
addb
xchg
test
xchg
jo
add
xor
dec
sbb
fisubl
popf
iret
xlat
mov
jecxz
fdivl
jecxz
loope
std
xlat
enter
int
lods
xchg
lock
outsl
ss
aaa
mov
pop
jno
jg
fisubrs
fucomp
mov
xchg
ror
pop
add
js
or
mov
cmc
mov
clc
cmp
mov
push
cmp
out
test
add
and
out
inc
rcl
loope
hlt
push
shl
mulb
xchg
add
pushf
or
cli
ret
xchg
pop
shlb
daa
fsts
mov
fcoml
fnstenv
nop
jne
sub
addr16
std
lods
sbb
mov
neg
js
loopne
jne
add
sbb
jmp
sub
mull
cs
xor
xor
int3
cmp
enter
inc
mov
add
and
inc
rcll
sub
xlat
and
in
mov
pop
add
mov
js
mov
cmp
jb
jo
xor
push
js
dec
mov
adc
stos
jecxz
or
cmpsb
xchg
push
ret
jmp
or
je
js
xchg
popa
psraw
inc
sbb
dec
out
ljmp
add
jmp
dec
xor
dec
loopne
cli
add
push
jle
adc
xor
gs
repz
xor
out
push
jg
psadbw
add
adc
add
push
sbb
xor
or
xchg
jne
into
add
push
lock
mov
mov
sarb
fidivs
inc
movsb
dec
sbb
loopne
pop
adc
repnz
int3
adc
add
sbb
shl
pop
or
cmp
mov
or
pusha
adc
inc
push
cmp
jmp
cmp
ja
pop
pop
inc
bextr
jmp
cmp
inc
mov
jmp
add
ret
popa
and
xchg
int3
add
cmc
adc
shrb
and
lea
ds
enter
clc
xor
fmull
push
iret
hlt
sbb
and
imulb
add
loop
jb
sbbl
jo
in
cmp
or
pop
loopne
xchg
push
add
movsb
ljmp
inc
sub
movsb
add
xchg
js
sub
aad
mov
inc
or
add
jmp
repz
pop
mov
rolb
out
xchg
sub
rcrl
xor
jmp
sbb
add
imul
jge
and
or
cmp
dec
or
lahf
xchg
xchg
jecxz
imul
jbe
cmpsb
addr16
aam
stc
outsl
stos
lret
jle
fxch
pop
popf
aad
ret
fbstp
hlt
call
ret
pop
inc
mul
mov
ret
push
aaa
aam
sub
mov
dec
mov
or
or
mov
pop
sbb
dec
add
sbb
cld
ret
enter
jo
sub
shll
jl
add
add
les
cmc
add
rcl
cwtl
sarl
cmp
hlt
mov
lea
or
add
push
fwait
in
out
or
aad
scas
ljmp
jmp
jmp
jmp
addl
enter
lock
les
iret
mov
cld
ror
xlat
sub
sub
mov
push
adc
lar
pusha
arpl
adcl
lock
fidivrl
jae
dec
or
imul
cmp
xor
or
or
jl
sbb
data16
mov
in
sbb
inc
add
jo
sahf
xchg
daa
dec
jmp
cmp
cmp
mov
mov
mov
dec
rcrb
shll
sbb
push
call
add
or
cwtl
lock
aam
and
lcall
aas
out
mov
xchg
rolb
mov
loope
mov
mov
call
sti
stos
dec
rolb
fldenv
pop
inc
mov
mov
sbb
pusha
inc
inc
fadds
int
fsubr
jns
cmp
je
movsb
mov
xchg
js
mov
inc
cli
cmpsb
or
or
loope
dec
enter
enter
or
addr16
aad
mov
loopne
mov
or
xlat
pop
shlb
add
pop
mov
mov
or
nop
data16
je
je
fadds
frstor
and
pop
in
and
add
xchg
push
push
xchg
jg
pop
sbb
push
mov
mov
cmp
jge
add
jmp
xorb
into
les
mov
dec
sbb
adc
lods
cmp
in
adc
add
arpl
mov
cltd
mov
loop
addb
cmpsl
mov
call
push
jmp
icebp
icebp
divl
jg
inc
xchg
sub
inc
push
cmpsl
les
sub
sti
xchg
loope
and
cmp
ret
and
aas
ljmp
mov
push
lods
nop
sbb
or
add
in
sbb
mov
xorl
inc
add
inc
imul
adc
cmpsl
dec
sbb
test
js
inc
sbb
loope
sbb
ds
add
pop
test
mov
xchg
pushf
push
out
mov
xchg
repz
jecxz
imul
jmp
ret
pop
and
cmp
cmp
and
or
lods
xchg
jecxz
adc
cmp
outsb
aaa
mov
add
dec
push
pop
add
xor
icebp
ds
mov
adcl
imul
rorb
fld1
movsb
pop
call
dec
add
mov
fmuls
xchg
jmp
lock
pop
xor
pop
mov
mov
imul
mov
pop
fwait
movb
fisubl
andb
rol
jns
mov
cmpsb
sbb
add
imul
test
rcrb
or
dec
mov
ret
shlb
fisubrl
daa
loopne
cmp
mov
ja
pop
push
out
push
lret
sbb
inc
or
ljmp
hlt
sub
in
lahf
roll
cmp
push
in
adc
mov
jo
mov
int3
shrb
fimull
rcll
fsin
les
xlat
mov
and
jbe
jns
movl
in
xchg
pop
iret
xchg
out
stc
adc
movsb
inc
pop
add
out
sbb
mov
sbb
sbbl
jne
nop
add
fwait
sub
data16
add
cmpsb
dec
pop
mov
std
push
dec
jno
add
add
loop
pop
arpl
das
enter
sub
cmp
and
lds
sub
jbe
xor
adc
push
push
inc
sub
mov
sbbb
lock
xchg
jnp
cmp
imul
aad
inc
sbb
pop
inc
xor
scas
fwait
ds
call
or
add
movsl
inc
mov
lds
lea
into
push
aam
mov
jecxz
jecxz
aas
push
ss
push
add
mov
fstps
sub
lods
xchg
dec
addr16
add
fadds
lret
xor
movsl
mov
xor
add
add
jge
push
xchg
add
xchg
and
xor
lahf
add
xchg
jmp
bndstx
lods
lods
inc
test
aam
xchg
imul
mov
add
cmpsl
sbbl
and
dec
xor
out
js
xor
add
mov
inc
and
adc
stc
cmp
lcall
popl
stos
test
lds
xorb
mov
cs
int3
mov
nop
jmp
shll
rolb
xchg
fldt
add
lock
xor
test
jg
adc
movsb
pop
dec
pop
add
cld
push
xor
inc
xor
repnz
push
and
push
push
insb
movsb
push
arpl
and
aaa
xor
inc
sbb
clc
shrl
inc
sub
dec
lcall
or
jnp
xor
shl
xchg
or
popf
pop
das
or
sbb
jo
inc
loop
out
mov
dec
icebp
sub
push
push
dec
push
fs
jns
rcll
cli
xor
jnp
call
xor
pop
ret
mov
sbb
push
pop
mov
movsl
outsb
dec
enter
shll
add
js
cmp
nop
jmp
or
adc
repz
and
push
cmp
push
xchg
iret
sbb
inc
add
cmc
fyl2x
ret
fnstcw
dec
or
sarl
inc
sub
add
movl
jae
pop
sub
xchg
dec
xor
lcall
test
rcl
filds
add
inc
and
dec
mov
mov
lock
adc
sbb
pop
lret
push
inc
testl
roll
test
andb
and
sub
mov
out
pop
dec
lcall
inc
mov
push
test
adc
rorl
fildl
mov
shlb
xchg
clc
inc
or
dec
add
jo
add
sbb
and
add
push
or
jle
mov
add
add
out
inc
loopne
inc
test
push
mov
adc
ffree
arpl
mov
push
push
sbb
mov
test
rolb
xor
js
and
mov
push
out
sbb
leave
xchg
fiadds
inc
push
push
lods
arpl
dec
in
push
mov
mov
pop
lods
pop
hlt
adc
and
sbb
hlt
or
popa
push
sbb
xor
xchg
pop
sbb
clc
addr16
dec
mov
jne
jge
add
cmpsl
xor
and
lock
pushf
jbe
adc
dec
jno
and
adc
adc
mov
mov
adc
or
test
inc
roll
das
fiaddl
add
stos
pop
sbb
lahf
add
cmp
adc
rol
add
pushf
lea
or
hlt
jp
jmp
pop
mov
in
daa
adc
xchg
xchg
xchg
icebp
js
mov
push
or
pop
cld
stc
jo
loopne
or
sub
inc
lods
sub
dec
call
sbb
mov
pop
adc
xchg
xor
push
call
bound
sub
lock
push
mov
inc
lock
push
cmpsl
fs
dec
mov
or
pop
add
inc
cmp
push
lcall
mov
inc
insb
xor
adc
adc
xor
xchg
lds
adc
loop
mov
and
mov
jmp
aad
mov
jmp
adc
sbb
hlt
push
fmuls
or
fidivrl
dec
rorb
stos
add
mov
hlt
jne
xchg
rclb
out
sahf
orb
add
adc
lcall
sub
rclb
test
lahf
inc
adc
ret
and
push
sub
cmp
inc
xor
fsubrl
enter
sbb
cmp
pop
popf
ret
test
push
imul
jnp
ret
lods
push
lret
in
adc
into
sbb
dec
addl
das
lds
das
xor
pusha
insl
sbb
int3
xor
icebp
pop
inc
add
or
int
add
in
nop
add
sbb
imul
push
dec
add
adcb
les
mov
mov
mov
stos
je
xor
shl
je
jge
sbb
mov
xchg
arpl
or
and
push
shrb
sub
scas
enter
dec
outsl
sbb
loop
xchg
rolb
cmp
pop
xor
jbe
mov
out
mov
dec
or
mov
or
add
xchg
filds
adc
orb
push
push
ret
push
les
sub
jnp
lret
outsl
adc
lea
inc
push
jbe
ss
jg
sub
sub
jmp
movb
push
inc
cld
cld
addl
scas
rorl
adc
jno
filds
lret
dec
and
mov
mov
or
mov
add
adcb
pop
cmp
and
mov
das
sbb
mov
icebp
xchg
mov
or
add
das
dec
inc
and
xor
or
add
adc
je
xor
cmp
or
jmp
cli
sbb
mov
in
jo
nop
xchg
pop
sar
adcb
pop
cld
adc
mov
rorb
cmpsl
dec
sbbb
sub
mov
in
lea
insb
adc
pop
inc
inc
sub
cmp
cmpsb
enter
push
das
loope
icebp
xchg
hlt
clc
push
lock
stos
mov
push
or
mov
and
dec
jecxz
test
adc
out
dec
dec
cmp
inc
rolb
mov
or
shr
loopne
rcr
rep
pop
sbb
push
in
scas
xor
jae
push
lcall
sub
inc
xor
ret
xor
fcomp
adc
movsl
decl
jmp
lret
or
and
and
mov
adc
fildl
loop
add
int3
sbb
add
pop
outsl
lahf
in
push
loopne
add
xchg
scas
dec
lock
jne
xor
sbb
add
jmp
dec
insb
call
sbb
or
inc
add
mov
lods
and
mov
int3
jbe
adc
rclb
adc
mov
pop
enter
les
fimull
inc
mov
xchg
add
xchg
mov
jmp
mov
mov
pop
lock
or
loope
stc
hlt
popa
sbb
aam
out
xchg
lds
movl
jp
push
adc
outsl
xor
gs
test
jno
add
rcll
push
mov
sbb
loope
xchg
fcoms
xchg
xor
jl
addr16
inc
jle
sbb
dec
mov
fildl
jbe
pop
daa
xchg
xchg
adc
sbb
sub
mov
pusha
add
iret
mov
aam
pop
pusha
loopne
sbb
jne
fistl
inc
je
inc
and
subb
fisttpl
loop
cmp
gs
mov
mov
inc
in
hlt
loope
dec
pop
pop
and
imul
jb
push
add
sbb
and
ffreep
add
or
adc
lock
orl
pop
add
xchg
negb
call
lock
rcll
and
mov
sbb
imul
sbb
lock
mov
aam
test
and
sarl
subb
add
dec
lret
adc
fmuls
daa
ja
out
fsub
pushf
lock
and
adc
out
icebp
movsl
enter
cmp
test
and
hlt
out
movsl
push
adc
addb
in
pop
mov
inc
fsubs
sarb
add
int
stos
inc
jne
sbb
daa
mov
hlt
or
in
enter
pop
ss
call
mov
or
mov
push
pop
push
dec
inc
xchg
into
ds
add
mov
or
dec
gs
sub
cmp
and
js
cmp
xchg
hlt
imul
push
inc
inc
jecxz
clc
mov
xor
cmp
or
jp
prefetch
xchg
pop
sbb
test
inc
mov
lock
mov
and
sbb
or
add
inc
add
je
adc
or
jg
ss
xlat
lret
xor
sbb
or
adc
int3
inc
or
xchg
mov
push
xchg
loope
std
push
cmp
sti
add
in
call
pop
cmp
cmc
enter
and
nop
mov
out
and
jmp
ret
js
cmpsb
mov
loopne
dec
xor
rol
adc
jbe
mov
inc
add
inc
cmp
sub
sub
roll
dec
adc
fsubs
pop
jle
lea
sbb
mov
sub
rclb
into
popf
xor
dec
in
dec
clc
int3
scas
inc
sub
test
sti
ds
push
pop
xchg
mov
sbb
subl
pop
push
loopne
dec
daa
or
dec
xor
incb
test
adc
add
aaa
add
or
rolw
mov
sub
dec
outsl
adc
out
xor
lea
xlat
lcall
xor
jecxz
lret
dec
mov
mov
push
sbb
push
inc
sbb
movsb
push
into
fistpll
push
jp
xchg
mov
js
sub
add
outsl
mov
aaa
jle
pop
mov
test
popa
pop
dec
xchg
loope
jg
xchg
test
xchg
jnp
pop
icebp
sbbb
sbb
add
pushf
movsb
cmp
shr
sub
pusha
and
shl
xchg
ds
pop
cmp
inc
xchg
add
lret
jle
mov
and
xor
add
mull
mov
cmpsl
jno
mov
sub
popa
je
add
sbb
dec
mov
cmp
dec
imul
push
leave
ret
fcoms
in
mov
xchg
xlat
aad
xor
mov
push
jae
fsubrl
into
and
push
add
push
mov
or
ret
jbe
cwtl
cli
mov
xchg
lea
out
cmp
cmp
or
psrad
adc
dec
pop
imul
lods
aaa
mov
and
mov
faddp
pop
fs
mov
les
mov
loope
out
jmp
add
lock
dec
mov
notb
in
jg
xor
and
sbb
cmc
add
shlb
jne
push
sub
or
jmp
js
cmc
mov
stos
inc
movsl
lods
jmp
data16
add
pop
or
in
dec
fadds
xchg
pop
dec
and
sub
popa
pop
mov
push
mov
sbb
mov
jne
sbb
ret
inc
cmp
sbb
and
sbb
adc
nop
test
sarl
sbb
add
imul
maskmovq
divl
and
mov
out
das
subl
or
stos
pop
stos
push
add
or
lock
add
mov
mov
add
mov
mov
or
adc
or
cmc
jg
push
or
pop
jae
adc
test
ret
adc
inc
or
or
sarb
stos
lods
lods
add
ljmp
sbb
bound
rcll
movsb
sahf
outsb
rcr
pop
adc
ret
roll
pop
jmp
jl
xlat
jo
push
mov
sub
fistpl
sbb
xchg
cltd
jmp
push
add
sbb
push
jge
popa
rcrl
and
pop
mov
cmc
jg
flds
push
push
dec
jmp
and
adc
test
hlt
add
or
and
adc
inc
jp
adc
jo
notl
fistpl
sub
mov
adc
push
push
mov
mov
sub
int
ud2
shll
popa
pop
test
enter
sbb
pop
and
fisubl
and
and
or
and
ret
inc
mov
repz
negb
addl
fisubs
add
es
inc
mov
popa
and
mov
pushf
and
dec
and
inc
arpl
mov
das
and
insl
cmpsb
push
push
dec
dec
movsl
iret
loopne
sub
dec
xchg
xor
rcrb
add
add
jnp
popf
aas
mov
cli
arpl
pop
pop
enter
pop
rolb
cld
ret
add
jmp
stos
sbb
dec
cmp
sbb
xor
fadds
es
sub
dec
inc
pop
fdivs
ret
xor
testb
or
repz
inc
fistpll
sahf
je
sti
push
adc
mov
pop
lods
inc
mov
pop
out
and
addb
movsb
xchg
fdivs
ret
xor
push
aad
or
mov
outsl
inc
mov
cld
sbb
push
xchg
call
jge
cmp
xor
jecxz
cmpb
icebp
push
mov
out
mov
outsb
sbb
xchg
dec
and
loop
pop
adc
jo
dec
adc
mov
imul
mov
mov
push
call
shrb
dec
pop
mov
outsl
sub
notb
rcr
cmp
subb
adc
outsb
sub
lret
loope
popf
fcompl
add
lods
xchg
inc
dec
mov
cld
mov
xchg
rorl
or
icebp
movsl
dec
in
fnstenv
sbb
pop
cmc
xor
loopne
and
ljmp
push
sub
into
leave
dec
sub
add
or
sub
addr16
add
test
add
mov
stos
cmp
mov
jecxz
pop
xchg
jle
popf
cmp
lds
jb
mov
lds
jmp
les
insl
rcrl
in
in
std
xor
sbb
ds
in
xchg
dec
or
subb
dec
mov
rclb
in
mov
inc
or
push
fstpl
and
sub
sbb
add
jle
hlt
sub
fmull
ljmp
out
adc
jne
push
mov
add
add
and
iret
mov
dec
cmp
cmc
adc
mov
into
push
addr16
faddl
ja
pop
sub
push
jbe
fbld
xor
jb
faddl
mov
andb
lods
lret
fs
push
jae
movsb
sbb
es
sbb
clc
mov
push
fsubl
cld
stc
int
loopne
or
repnz
adc
sub
out
push
pop
sub
pop
lds
mov
rorb
or
add
pop
and
sbb
xlat
or
and
push
loopne
lahf
sub
hlt
adcb
lret
or
outsb
mov
out
cli
add
movsl
adc
enter
test
xchg
je
jne
push
push
rclb
hlt
sub
push
mov
adc
clc
mov
sahf
mov
xlat
cmpb
push
push
mov
cmpl
dec
xor
ds
mov
sbb
mov
hlt
lahf
shrb
sub
aas
in
push
add
mov
pop
shll
mov
adc
mov
aaa
pop
ja
mov
pusha
sbb
jmp
push
ljmp
and
inc
and
adc
and
sub
shll
sahf
sti
mov
mov
push
inc
xchg
pop
push
mov
and
stos
adc
jns
cmp
insb
call
test
in
popl
test
sub
lock
add
jle
faddl
dec
jno
add
mov
push
inc
pop
int3
and
add
jbe
mov
jmp
jg
adc
imul
stc
add
pop
incl
dec
repnz
and
jae
xlat
stos
inc
jmp
pop
cmp
arpl
sbb
and
sti
daa
add
gs
bound
imul
adc
mov
xor
mov
dec
adc
mov
dec
jmp
inc
or
les
test
dec
frstor
ss
or
inc
js
ret
lods
cld
mov
in
pop
cmp
sbb
js
in
cmp
daa
inc
dec
sbb
add
sub
push
cmp
bound
or
fldenv
jecxz
add
and
shr
jg
mov
push
push
push
sub
lods
gs
les
fidivl
cmp
andb
mov
test
pop
xlat
pop
inc
adc
or
lock
scas
or
fnstsw
rcl
imulb
lds
pop
mov
or
jl
repnz
sbb
std
in
cwtl
mov
cmp
sub
fldcw
adc
pop
jp
pop
add
jecxz
ljmp
jmp
sub
xchg
fidivs
movsb
pusha
push
aaa
les
xor
addr16
in
clc
out
add
rcr
adc
sahf
dec
cltd
push
aad
sbb
nop
xor
inc
jne
sub
rorl
popa
jnp
mov
cltd
fiadds
mov
inc
add
jge
lock
testl
adc
mov
shl
ja
scas
hlt
or
push
sbb
leave
scas
xchg
lea
adc
adc
loopne
jle
adc
add
push
andb
ss
fiadds
repz
inc
cmp
shr
pop
sub
mov
fmuls
rolb
test
daa
add
adc
or
adc
fsubs
jne
sub
inc
or
add
fidivrs
nop
movsl
loop
mov
adc
and
cmp
jmp
inc
dec
sbb
hlt
ret
addb
add
xchg
and
lcall
push
push
add
pop
loope
shrb
sub
sub
mov
inc
mov
daa
lock
cmp
lock
lods
movsb
fimuls
jo
push
xor
ret
pop
pusha
es
lods
popa
xchg
orl
push
fmul
frstor
sbb
fadd
mov
push
inc
xor
icebp
push
fwait
dec
mov
and
cmpb
push
mov
xor
cmp
pusha
adcl
or
sbb
xchg
xor
lods
icebp
push
dec
pop
loopne
xor
test
and
xchg
lcall
add
push
pop
inc
hlt
addr16
ss
lret
mov
fs
pop
push
adc
dec
fistps
push
mov
lock
les
rcll
pusha
fs
test
push
in
jno
mov
fistps
add
icebp
dec
sbb
icebp
push
flds
mov
pop
fldt
sbb
jnp
jae
rcr
dec
in
mov
sub
stos
sysexit
adc
out
add
or
fdivrs
rolb
cmp
add
test
and
enter
loop
stc
imul
cmpsb
dec
lahf
cmp
daa
xor
mov
std
shl
cmp
and
pop
sub
lahf
pop
pop
es
insb
pop
roll
js
orb
xchg
xchg
sbb
mov
xchg
cltd
push
and
cmpsl
in
inc
lahf
addr16
or
aas
fwait
pop
inc
jecxz
dec
sbb
aas
push
ss
mov
lret
mov
rcrl
sub
xchg
into
dec
mov
insl
inc
sub
jge
mov
call
jae
mov
es
scas
inc
xor
mov
popaw
aam
add
jmp
lret
fistpl
js
test
or
xorl
mov
aas
int3
in
clc
and
outsl
aam
xor
mov
cs
dec
jmp
mov
and
sub
jnp
or
imul
ficomps
inc
and
inc
add
inc
mov
movb
inc
jmp
xor
notl
jbe
rcrl
mov
sahf
out
push
inc
notb
pop
inc
push
gs
icebp
cli
sbb
add
adc
inc
ljmp
leave
cmpsb
inc
aaa
or
cmp
sub
subl
dec
ret
and
clc
andb
pop
sub
cltd
data16
pop
ss
sti
jecxz
mov
adc
inc
adc
pop
adc
pop
cmp
inc
adc
ret
xor
jnp
add
add
xchg
pusha
sub
xlat
loope
das
div
cmp
jecxz
or
pop
lods
inc
ret
lahf
loop
jmp
int3
inc
pop
jp
add
dec
mov
pop
loope
pop
adc
sub
dec
orl
mov
pop
movsb
xchg
insb
test
xor
adc
xchg
add
xlat
adc
inc
clc
aad
scas
jo
xor
out
push
jbe
inc
ret
scas
nop
inc
add
add
xor
addb
push
sub
xor
or
aam
repz
fsubrs
jge
push
dec
dec
mull
xor
in
hlt
sub
nop
add
cs
xor
mov
xor
inc
sar
data16
xor
sbbl
and
loopne
icebp
pop
int
imul
cmp
aad
mov
data16
jmp
mov
and
xchg
je
shld
xchg
outsl
sbb
inc
lods
push
inc
jno
shll
adc
repz
jle
test
aas
clc
add
sbb
fwait
test
push
inc
jae
jecxz
and
push
gs
cmp
je
cltd
fwait
sub
or
mov
dec
mov
pop
cmpsl
xor
in
jecxz
or
mov
push
movl
aaa
cld
or
movl
add
jns
call
shrl
pusha
adc
ljmp
xor
sti
lods
inc
cmp
stos
xor
mov
outsl
in
call
and
popa
push
pop
push
push
in
xor
ss
mov
push
or
mov
fmull
xlat
jp
or
cmp
in
adc
xor
scas
imul
pop
nop
and
pusha
xor
push
xchg
adc
mov
test
xchg
push
test
push
jecxz
jle
sbb
xorb
sub
add
mov
xchg
pop
xchg
pop
sub
das
inc
jne
inc
sub
imul
test
nop
xor
aas
sub
clc
cmpsl
mov
lahf
shlb
xor
call
enter
cmp
jno
mov
mov
ret
mov
or
lock
dec
add
cmp
jno
imul
cld
sub
cmpsl
xor
out
bound
out
jge
xchg
dec
jae
mov
add
inc
addr16
insb
lock
fisttpll
mov
arpl
lods
lahf
mov
dec
jne
cltd
pop
cmpb
push
sub
push
push
and
xor
mov
adc
in
and
sbb
mov
fsub
jl
call
sub
je
mov
insl
dec
ss
push
mov
adc
out
dec
js
jg
push
lock
push
or
add
jb
addl
clc
mov
pop
jb
int3
pusha
add
mov
lods
add
mov
add
inc
push
xlat
add
sbb
incb
int
push
sub
movsl
je
int
add
scas
or
xor
fcoms
mov
mov
adc
cmp
les
or
pop
mov
mov
xchg
test
sub
mov
mov
jne
and
xchg
divl
lret
enter
ret
push
shrb
std
data16
std
jmp
cmp
or
sub
sar
jmp
inc
cmp
xchg
fsubs
push
xor
or
fucomp
clc
and
pusha
leave
sub
or
fidivrl
enter
push
int3
pop
insb
movsl
xchg
adc
mov
imul
fs
les
push
push
cmpsb
push
call
sub
fstl
inc
loope
sub
dec
inc
inc
in
push
mov
jl
pop
mov
inc
js
cld
repz
cltd
inc
mov
int3
ja
adc
aam
pop
rolb
fisubl
xor
adc
mov
dec
js
sbb
bound
add
in
add
into
and
xchg
push
or
lock
les
fcompl
call
push
and
push
or
jno
push
roll
jo
xor
and
pop
shlb
hlt
ret
add
stc
push
daa
std
sbb
inc
add
gs
ds
mov
inc
or
adc
adc
sbb
cmpb
inc
dec
sbb
xchg
hlt
fisubs
xor
lods
mov
jmp
or
and
inc
icebp
sub
jne
xor
inc
jmp
or
ret
out
pop
add
cmpb
and
sub
stos
call
inc
jmp
ret
xchg
dec
insb
addb
lods
add
mov
add
mov
dec
jmp
insl
pop
mov
jp
sbbl
jns
out
mov
pop
outsl
or
push
push
sub
pop
mov
orb
adc
divl
cmp
or
and
fmull
dec
fildl
push
dec
dec
pop
test
and
ret
rcrb
add
and
mov
in
cs
int
sti
inc
adcl
notb
xor
es
sub
push
or
rcll
and
scas
and
mov
nop
lock
sbb
or
xchg
mov
rcl
mov
ds
xor
les
pop
or
push
lods
push
ret
rorb
ret
rolb
ja
sbb
dec
push
out
adc
add
aaa
adc
add
js
cmp
js
test
jp
lods
movsb
test
adc
and
cld
sbb
cwtl
cmp
shlb
cld
or
stc
and
mov
sub
sti
mov
test
sbb
loop
shl
arpl
loop
inc
rclb
filds
sahf
jne
push
mov
clc
hlt
cmp
pop
or
shlb
test
mov
rcrl
decb
and
xlat
jge
cltd
lods
sarl
scas
xchg
dec
sbb
shrb
fidivs
outsl
xor
push
jmp
or
push
negl
mov
lea
call
punpckhdq
stc
xor
repnz
cmp
clc
repnz
loopne
sarb
sub
out
or
mov
leave
inc
or
bndldx
fwait
sub
sahf
lea
lods
inc
insb
jo
cmp
arpl
adc
mov
aam
inc
mov
xchg
inc
add
dec
subb
jg
leave
shll
lock
sbb
int3
ficompl
mov
test
cmp
jb
dec
cmpb
out
ret
cmp
or
cmc
or
movups
fidivs
jne
ja
lods
or
inc
inc
push
imul
push
adc
jne
and
add
jno,pn
hlt
jge
inc
orb
inc
add
ret
mov
lcall
adc
je
dec
test
cmp
dec
outsb
mov
sbb
outsl
fimuls
movsl
movsl
shlb
hlt
dec
mov
std
push
fmul
addb
add
dec
cltd
fwait
jg
jmp
outsb
mov
mov
inc
sbbb
jo
push
test
inc
push
and
andb
jmp
adcb
dec
rolb
movsb
mov
inc
sub
ss
sub
and
dec
das
cmp
jl
inc
sub
test
xchg
sub
cs
seta
loop
adc
fs
adc
cs
or
xor
test
test
cmp
in
fldt
push
mov
insl
pop
add
cs
sub
push
sub
sbb
xor
xchg
outsb
cmpsl
pop
repz
aam
sub
adc
imul
push
and
test
xor
and
rclb
fnstsw
xchg
push
pop
pop
gs
xor
setb
jno
mov
add
ficomps
jo
sub
and
xor
add
sbb
push
sahf
or
in
xchg
subl
ficomps
mov
push
lret
aam
loop
rclb
xchg
add
addr16
push
dec
rorb
xor
pop
jo
pusha
loop
inc
insl
sbb
jne
mov
xchg
push
sub
push
roll
shl
call
mov
out
test
out
sbb
lods
arpl
xchg
adc
mov
add
jmp
scas
mov
and
cmp
or
mov
xchg
arpl
shl
push
shll
cmc
mov
cmp
xchg
ss
fistl
or
push
push
icebp
xor
xchg
mov
rol
xchg
sub
and
loopne
imul
mov
xchg
into
xchg
scas
add
cmp
add
inc
lahf
pop
sub
mov
adc
add
mov
fdivp
and
push
dec
dec
pop
add
add
or
add
add
insl
lock
or
inc
mov
ss
nop
pop
xor
sbbb
cmpsl
je
push
idivl
lret
dec
fistl
pushl
loop
hlt
sbb
icebp
in
bnd
lods
aad
fisubrs
mov
in
and
dec
dec
mov
int3
adc
test
hlt
push
fwait
out
jb
jmp
pop
cmpsl
jge
adc
les
jb
push
dec
xchg
js
rorb
mov
and
xchg
inc
popa
test
push
decb
push
arpl
xor
mov
aaa
movb
jnp
xlat
adc
push
cmp
pop
scas
jnp
iret
pop
ljmp
xor
pop
adc
clc
sbb
cmp
ja
test
aas
jmp
adc
ret
mov
adc
cmp
xchg
aad
mov
test
sub
movsb
adc
add
movsb
pusha
test
es
test
pusha
cld
out
jne
sub
cmp
and
lock
or
push
cmp
pop
pop
shl
xchg
adc
inc
sub
inc
mov
sarb
push
jecxz
test
ja
lea
icebp
testl
cmp
adc
sub
push
fs
cmp
xor
ljmp
jp
add
add
clc
in
push
iret
jg
imul
xorl
pop
cld
lods
cli
add
fdivs
nop
call
or
lds
rolb
add
add
dec
add
mov
int3
add
roll
add
in
loope
sub
xor
icebp
add
add
mov
jg
mov
sub
fisubs
xor
imul
jnp
sub
dec
mov
jne
adc
push
pop
sbb
ljmp
movsb
mov
jno
in
std
jl
adc
cs
test
pop
mov
xchg
and
hlt
lock
loop
push
push
xchg
cmp
sbb
dec
test
jno
add
cltd
stos
inc
loope
inc
inc
data16
adc
cmp
add
scas
pop
in
leave
movsb
pop
xor
aad
mov
sbb
clc
roll
push
add
adc
in
loopne
jmp
pop
stos
cli
je,pn
std
adcb
rcrl
inc
xor
jp
cltd
shrb
dec
inc
sbb
xchg
jns
pop
or
push
pop
dec
test
jnp
call
adc
xchg
jmp
fld
dec
int
adc
orl
or
cmp
jmp
inc
push
repz
pop
dec
loop
sbb
mov
sub
ret
mov
mov
inc
xchg
adc
or
ja
cmpb
icebp
stc
inc
pop
dec
clc
push
callw
das
sbb
insb
jbe
jno
stc
dec
out
sub
hlt
aam
pushf
sarl
jns
orb
jge
fistpll
pop
mov
out
pop
addb
mov
sbb
jns
movsb
arpl
jb
xor
inc
and
sbb
xchg
fs
dec
xlat
inc
or
mov
pop
sbb
int3
dec
sti
inc
stos
aam
outsb
test
jb
movsb
pushf
test
aam
dec
sub
sbb
push
mov
adc
icebp
and
sub
lods
xchg
adc
je
mov
xchg
jle
loopne
insl
pop
dec
mov
mov
lock
jb
cmp
stc
ficoml
adc
sbb
repz
arpl
jmp
test
jge
push
cmp
jge
call
inc
stos
jns
cs
pop
sbb
jb,pt
mov
test
pop
jl
sbb
push
lods
sbb
filds
adc
add
lock
and
lock
lods
fs
int3
sbb
pushf
inc
aas
jecxz
lods
xor
adcl
addl
add
jno
pop
js
lds
mov
xor
and
pop
push
mov
fwait
fwait
inc
icebp
and
xlat
insl
push
rolb
pusha
add
les
dec
lock
stc
xor
push
dec
cld
pushf
sbb
mov
mov
std
out
xchg
imul
push
jno
cmpl
cmp
cmp
dec
pushf
pop
ror
or
and
andb
pop
xlat
pop
sub
or
mov
inc
add
push
jge
sub
ds
adc
push
mov
xor
fwait
les
ds
or
xor
mov
push
push
xchg
jmp
jle
ja
lret
adc
jmp
add
pop
push
inc
cmp
rclb
or
jge
xchg
js
inc
in
and
jecxz
mov
fisubrs
add
outsb
loopne
or
imul
adc
shr
xor
lock
push
push
mov
add
inc
loopne
adc
push
push
push
cld
xor
mov
arpl
or
test
cli
cmc
sub
sbb
cli
xorl
adcb
int3
pop
cmp
xchg
call
or
adc
sub
or
push
cmpsl
roll
jne
nop
push
clc
sub
push
push
test
jo
cld
roll
xor
xor
inc
inc
inc
adc
sbb
cmp
sahf
xchg
ss
sub
dec
jp
mov
xchg
in
dec
xchg
imul
and
adc
mov
push
ljmpw
outsb
lahf
adc
test
mov
jl
xchg
ret
jo
into
dec
cmp
lock
pop
cltd
push
ds
and
fidivl
test
pop
dec
fldt
pop
mov
lock
adc
ljmp
pop
xor
scas
add
movb
sub
lock
dec
inc
mov
repz
lock
dec
and
mov
testl
movsl
hlt
div
adcl
cltd
jmp
push
sbb
inc
inc
dec
xor
dec
or
loop
jo
addb
and
inc
cmp
adc
enter
jo
clc
adc
movl
push
and
pop
es
dec
jge
jp
sub
add
arpl
call
xor
dec
mov
pop
and
addr16
aam
adc
or
jecxz
cld
ljmp
ret
jnp
lret
negl
jp
movsl
add
call
test
pusha
lock
pop
jp
adc
call
nop
ret
inc
enter
sub
add
decb
push
adcl
imul
dec
add
rclb
ficomps
les
lods
add
test
or
add
ficomps
cmp
jmp
lea
out
xchg
in
add
xchg
fsub
add
sbbb
shll
adc
lock
jp
cli
mov
push
test
or
pusha
xchg
push
shlb
fcomps
mov
push
adc
sub
movsb
add
test
into
add
nop
stos
mov
fcoms
fs
lret
ss
enter
dec
sub
jmp
dec
sub
inc
movsb
mov
pop
shlb
lods
in
mov
pop
sbb
in
and
roll
xlat
sub
rorl
cltd
jo
scas
jnp
push
push
or
add
std
xchg
sarb
sub
add
adc
lahf
sti
and
sub
xlat
adc
and
push
shlb
movsb
xchg
add
hlt
push
or
add
dec
mov
mov
jge
adc
fidivrs
shll
push
out
mov
insb
xchg
shl
in
push
mov
and
dec
test
subl
jno
pop
mov
add
pop
mov
or
scas
adc
pop
sbbl
inc
stos
bnd
das
inc
jl
int3
push
mov
push
cmc
test
mov
cli
jnp
xor
js
icebp
adc
adc
outsl
xchg
pushf
rcr
in
or
xchg
push
xor
fs
rorb
and
imul
fnstcw
push
and
adcb
xchg
int
rcr
shlb
gs
add
cld
adc
lds
es
sbb
adc
cltd
sub
add
mov
ret
add
sbb
mov
push
mov
rcrl
faddl
pop
ret
push
or
imul
jg
outsl
dec
xchg
add
inc
loop
mov
sub
mov
adc
mov
inc
or
dec
jl
and
dec
inc
negb
scas
icebp
inc
insb
ret
ficoml
sbb
jge
nop
adc
jp
mov
dec
adc
sub
and
lds
ret
cmpsb
js
mov
clc
add
sub
cli
push
rolb
dec
andb
int3
in
ljmp
jp
fidivs
notl
aam
hlt
mulb
jge,pt
fcoml
inc
js,pt
sbb
xor
sti
sbb
add
loopne
sub
and
daa
hlt
inc
push
mov
inc
je
push
inc
inc
jecxz
out
arpl
int3
dec
sbb
adc
adc
add
lock
cmpsb
push
push
push
add
sub
lret
adc
ds
lock
mov
mov
push
sub
rolb
jbe
shll
jge
ret
pop
in
and
or
xor
cmc
das
mov
clc
lods
fs
mov
mov
adc
push
fwait
loopne
scas
jmp
xchg
adcb
adc
aaa
push
shrb
dec
adc
ret
nop
xchg
adc
ja
gs
push
xchg
pop
pop
ljmp
xchg
fisubs
or
hlt
hlt
push
call
push
cld
dec
mov
xchg
and
sahf
cmpsl
xorb
repz
enter
jmp
fsubrs
xlat
pop
push
rclb
mov
mov
pop
rolb
push
push
xor
xor
dec
ret
idiv
add
push
lea
mov
fwait
mov
jno
push
frstor
pushf
je
lcall
and
mov
cld
lcall
xchg
shr
or
jbe
cmpl
dec
sbb
rcl
arpl
orb
gs
aad
nop
xchg
call
add
fisttpl
xor
add
sub
cmc
sbb
dec
and
or
dec
or
xchg
cwtl
sbb
jae
lock
or
sub
ret
cli
add
adc
mov
shll
ret
popa
inc
call
js
jo
loopne,pn
xor
lods
dec
dec
or
push
sbb
shlb
inc
loope
decb
or
adc
jae
insl
mov
cmc
aaa
push
sbb
add
or
and
je
xchg
add
dec
jbe
invd
in
insl
push
sub
rcrl
push
js
or
hlt
push
xor
cmp
in
test
addb
into
mov
or
rcr
movsb
xor
pushf
test
fbld
jmp
adc
fimuls
xorl
andb
sub
sbbb
repnz
pop
cmp
call
or
pusha
mov
dec
leave
pop
add
out
dec
popa
mov
sbb
sbb
dec
iret
loop
xor
into
and
loope
movsw
repnz
add
test
xor
adc
aam
ds
aad
cs
sub
pop
lea
lea
jl
enter
adc
fs
aaa
add
das
in
mov
inc
dec
pop
mov
call
add
lock
ss
lods
or
mov
fnstsw
fsubrl
push
mov
lods
lods
add
hlt
push
es
jns
inc
sub
je
daa
scas
addb
dec
pop
pusha
cmp
add
ret
popa
and
and
sti
addl
jns
fdivl
pop
out
push
clc
mov
inc
xor
outsl
loope
cltd
dec
push
iret
inc
bound
xchg
js
xchg
pop
stos
add
mov
icebp
dec
jae
icebp
xor
sbb
xor
add
out
iret
add
rorb
aaa
dec
cmp
cmp
or
cld
jo
mov
inc
je
add
je
or
mov
decb
add
ljmp
add
sbb
cmpsb
or
lds
push
jecxz
dec
imul
imul
sbb
jle
jno
icebp
push
dec
clc
mov
gs
dec
adc
push
adc
out
push
in
js
sbb
pop
or
and
int3
dec
ljmp
push
or
push
adc
dec
jg
loopne
outsb
ss
shr
lds
push
sub
icebp
mov
in
mov
aaa
fcom
adc
sbb
inc
push
or
adc
mov
and
std
bound
xor
xchg
push
sbb
push
std
add
shlb
push
cmpsl
hlt
xchg
lods
add
rol
dec
andl
xchg
ret
adc
xor
inc
scas
mov
add
cltd
adc
xchg
insl
pusha
mov
pop
pusha
fsubrl
ret
stos
adc
into
jecxz
nop
in
and
fdivs
cmpsl
mov
and
jg
push
sbb
sub
adc
movsb
push
rclb
cli
orl
xlat
les
hlt
call
jno
mov
popf
scas
push
inc
mov
jecxz
xchg
les
testb
movsl
ds
xor
add
inc
fwait
or
repz
test
inc
or
dec
in
sbb
pushl
sub
mov
add
das
add
cltd
adc
jg
andl
adcb
int3
pusha
insl
jecxz
jecxz
loopne
push
lcall
inc
mov
lods
hlt
decl
sbb
mov
pop
cmp
int
pop
rcrl
mov
mov
ds
or
dec
sbb
shll
ret
sub
rorb
test
push
ret
ljmp
dec
lods
adc
inc
inc
push
in
in
lock
jl
or
mov
jno
sub
dec
jae
jno
and
sub
xchg
inc
sbb
xchg
std
or
shrb
scas
jo
adc
ret
and
insb
loopne
pusha
arpl
pop
int3
scas
vpmuludq
xchg
lret
rcll
mov
lods
inc
sub
and
ds
lahf
add
add
mov
cltd
fdivrs
psubusb
test
mov
daa
push
inc
popf
mov
ds
sbb
fsts
dec
icebp
or
imul
pusha
cmpsl
rcl
cmovs
mov
and
sbb
scas
mov
xor
out
fimull
sub
and
xchg
cmp
addl
mov
xchg
push
sbb
mov
inc
mov
pop
mov
pop
add
daa
ficompl
add
mov
mov
test
icebp
imul
inc
stos
scas
ss
sbb
loope
movsl
sbb
xor
mov
iret
adc
cld
push
dec
shrb
push
call
sub
mov
loopne
dec
push
fisubrl
lret
inc
xor
and
andl
push
lds
addl
filds
jne
pop
shrb
push
loope
ret
lods
xor
jno
add
xor
add
dec
adc
sbb
jmp
out
jo
repz
lods
mov
push
push
mov
mov
lds
jl
fbld
sub
outsl
notl
inc
vhsubps
je
stc
nop
scas
adc
shrb
sbb
dec
fmuls
xor
clc
inc
jecxz
add
rol
out
nop
push
pop
movsl
mov
pop
adc
int3
fadd
jns
cmpl
pop
inc
hlt
push
jmp
and
pusha
mov
outsl
jecxz
pop
fistpl
and
aam
mov
push
jo
rorb
hlt
jne
imul
mov
pop
pop
rcr
push
sub
jo
aas
add
jp
mov
push
push
sbb
je
mov
push
mov
jne
sub
adc
xor
lods
out
push
je
mov
cmp
daa
adc
aaa
out
shlb
cwtl
mov
push
cmp
dec
or
pop
stc
aad
xor
pop
push
push
std
test
ljmp
or
nop
add
cli
jns
dec
adc
cmc
addr16
cld
cmp
jne
ljmp
jmp
shl
adc
cmp
nop
cmp
jmp
adc
and
add
scas
mov
roll
inc
imul
mov
pop
sbb
adc
pop
hlt
inc
int3
cmp
lret
push
cld
sbb
shlb
or
scas
and
ja
movsb
mov
xor
jne
lea
repnz
loop
xor
mov
inc
sub
xchg
out
add
jnp
shlb
pop
out
and
sbb
jb
mov
out
pop
sahf
xlat
xor
sub
adc
mov
clc
push
mov
cmp
dec
loope
movsb
dec
add
aas
or
mov
jae
mov
rclb
push
incl
sbb
mov
sahf
and
adc
sbb
adc
inc
cs
loope
adc
xchg
aad
icebp
mov
addr16
and
aad
mov
jnp
jmp
jbe
sbb
sub
stos
rcrl
repnz
dec
lods
ret
loop
int3
sbb
adc
pop
fistl
adc
jmp
jmp
orb
mov
xor
test
adc
xchg
in
lods
sbb
inc
add
xchg
hlt
or
inc
mov
das
shlb
push
mov
push
nop
pop
dec
andl
cmp
call
dec
sub
inc
jle
push
or
fisubs
cmp
movsb
add
dec
mov
cld
xor
movsb
or
movsb
cmc
movsl
fcomip
hlt
sarl
repnz
ljmp
dec
add
and
nop
pop
jecxz
or
or
inc
rcrb
mov
xlat
adc
rolb
xlat
or
icebp
inc
add
out
xlat
loopne
xchg
rorl
cmp
sub
ret
push
outsl
rorb
xchg
add
lods
xchg
inc
shlb
jae
pop
ret
xchg
mov
sbb
xor
lock
sbb
repz
lret
add
fdivr
rclb
jnp
jno
fidivl
dec
fcmovnb
int
test
mov
lea
nop
shrb
add
loop
dec
lahf
ja
push
xchg
shll
pxor
popa
dec
pop
add
add
mov
sbb
mov
loop
dec
fbld
repz
push
lods
xor
call
cmpsl
mov
add
mov
or
bound
lea
popf
inc
inc
fsts
xchg
mov
inc
sub
test
mov
test
xchg
mov
mov
scas
and
mov
movl
loopne
inc
lods
mov
cmp
pop
js
in
dec
repnz
jmp
lods
mov
mov
test
push
insb
jns
add
dec
insb
das
xchg
stos
ret
ret
pop
icebp
or
jge
cmp
jne
movsl
jl
aaa
xchg
inc
push
lods
aas
out
mov
push
dec
in
add
push
ret
dec
push
fcompl
mov
add
sbb
cs
or
and
push
jp
cmc
cmp
jb
cltd
sbb
push
in
in
sub
mov
or
pop
testl
or
rcrl
inc
dec
stos
cmpsb
icebp
jbe
call
jne
pop
sub
or
mov
sub
jns
cs
push
dec
dec
or
jb
xchg
xor
inc
mov
pop
loop
imul
mov
dec
fsubr
push
push
int3
outsl
push
call
lret
fildl
sub
mulb
or
mov
xor
pop
inc
jno
dec
imul
orl
add
adc
int
xchg
in
push
cmp
repz
xor
insl
mov
call
mov
pop
nop
push
aam
cmpb
adc
xor
movsl
mov
add
mov
data16
sub
fisubrl
xchg
sbb
sbb
push
and
and
sub
push
xchg
jae
cmpsb
jbe
mov
mov
scas
sbb
add
repz
jo
les
cwtl
jge
add
lcall
fbld
mov
cmp
scas
lea
fisubrl
dec
jmp
sub
test
je
mov
and
sbb
sbb
sbb
ret
push
and
insb
xor
clc
inc
fcomps
jecxz
sbb
adc
jmp
mov
dec
les
inc
dec
push
push
sub
scas
test
xor
test
xor
sahf
test
adc
sub
and
sbb
inc
lock
insl
fwait
xor
push
sub
xchg
add
jne
mov
sub
imul
dec
push
inc
movsl
jns
mov
sub
pop
jecxz
sbb
cmpxchg
cmp
cmc
mov
or
mov
inc
and
add
andb
sahf
out
push
ja
adc
outsb
mov
xchg
or
mov
inc
dec
pop
loopne
das
add
rcrb
inc
cmp
xor
shll
mov
mov
push
jmp
mov
inc
mov
test
jge
dec
jle
mov
dec
mov
movsl
sbb
int3
and
push
mov
or
xor
daa
loope
jo
mov
stc
in
xor
in
sub
loopne
mov
cmpb
in
xor
add
inc
adc
or
mov
js
xchg
dec
mov
inc
mov
aad
xchg
insb
sub
pop
decl
sbb
int3
fisttps
cwtl
adc
stos
jae
js
sub
add
or
lods
rolb
mov
pusha
xchg
cmp
stc
xchg
sub
add
stos
inc
jp
inc
int
cld
add
jns
cmp
sbb
or
add
add
push
mov
cmp
mov
mov
or
out
dec
add
push
test
cmp
cmc
test
pop
in
mov
add
cld
sub
push
jp
mov
jp
leave
imul
loope
sub
sub
filds
out
into
jge
add
pop
test
push
sub
mov
sahf
xor
lock
lcall
adcb
cmpsl
popa
lods
sbb
inc
arpl
jo
arpl
add
pop
in
xor
push
sbb
arpl
or
lods
andl
int3
and
int
jecxz
pop
add
inc
divb
add
or
mov
in
pop
cmc
adc
add
or
dec
xchg
adc
push
les
push
or
stos
adc
add
lods
cmp
sbb
test
icebp
call
push
insl
fs
jmp
out
mov
xchg
int
inc
jns
nop
test
xchg
pusha
out
and
sti
in
clc
xor
dec
movsb
xchg
icebp
add
in
or
mov
dec
inc
loopne
out
adc
test
sbb
mov
xchg
mov
cs
jecxz
sub
addb
stos
pop
out
push
orl
subb
jle
sbb
or
add
cmpsl
dec
out
test
sarl
arpl
add
out
das
test
std
shrb
stos
hlt
ss
popf
scas
gs
xchg
sbb
dec
mov
loope
xchg
push
lahf
sub
in
mov
faddp
sahf
nop
scas
fdivrl
scas
or
fs
iret
mov
mov
xchg
nop
lcall
add
push
mov
scas
arpl
test
jecxz
test
icebp
xor
mov
sbb
fadd
stc
fimuls
in
xchg
loopne
dec
bound
int3
sub
sub
add
fildl
lea
inc
cli
cmp
adcb
xor
mov
push
test
movsb
leave
push
insl
outsl
add
add
imul
out
subb
add
add
pop
pop
sub
adc
adc
adc
sbb
push
out
inc
jbe
or
lds
jno
dec
aam
push
pop
xor
sbb
mov
jge
cmpsl
xchg
arpl
shlb
dec
into
cmpsl
scas
add
lods
add
fnstcw
or
aam
movsb
pop
push
mov
adc
enter
mov
mov
test
or
movsl
jmp
outsb
jle
inc
push
subl
in
das
mov
and
xchg
cwtl
push
sub
into
movl
cmpsl
addr16
mov
test
jl
lods
push
sbb
sbb
pop
mov
and
xchg
es
sbb
test
add
jecxz
mov
cmpsb
inc
subl
jnp
ficompl
jb
mov
rol
xor
les
sbb
incl
sar
dec
adc
test
lea
bound
inc
push
xchg
add
rep
or
ret
pop
cmpsb
jg
jmp
add
pusha
xor
add
sub
enter
sub
mov
add
add
and
jmp
jmp
inc
xor
outsl
scas
fs
mov
and
dec
movsb
out
inc
or
mov
adc
mov
pop
xchg
jb
xor
push
and
aad
in
pop
fchs
sbb
xor
cmp
jg
test
jg
cmp
push
dec
xchg
bnd
pusha
shll
push
test
lret
or
mov
add
sub
mov
fstps
sbb
adc
or
sbb
mov
cld
movsl
sbb
add
jp
insl
mov
pop
call
arpl
xor
mov
sub
sbbl
insb
ret
jae
daa
imul
xor
or
mov
pop
and
inc
pusha
mov
pop
lds
insb
pop
cmc
ret
inc
dec
mulb
jle
jle
pop
cmp
pop
jp
xor
jecxz
mov
pop
loop
hlt
or
mov
mov
adc
pushf
sub
pop
test
ret
jne
xor
mov
clc
and
push
daa
push
popa
jecxz
xor
and
mov
out
pop
stos
and
or
adc
enter
das
and
push
mov
sub
xor
push
and
fstl
cmp
adc
daa
jmp
andl
jmp
mov
mov
sbb
call
popf
enter
cmpsl
xor
lea
ss
gs
cmp
sbb
out
jl
icebp
and
add
adcb
test
xor
repnz
js
jno
ja
enter
cmp
in
and
sub
or
fidivl
pop
sbb
in
sub
fstpl
les
and
add
mov
adc
dec
dec
inc
add
mov
sbbb
jl
cmp
insl
mov
out
add
sub
ficoml
dec
or
fiaddl
xchg
xchg
mov
cmp
fnsave
ret
andl
jle
mov
xor
push
and
js
cmp
adc
int3
and
sub
push
js
mov
inc
push
sahf
xor
out
imulb
loop
mov
jb
cmp
or
jne
mov
push
dec
stos
or
xor
int3
ficoms
mov
test
jns
lock
inc
adc
cmpb
mov
add
mov
inc
add
xchg
in
cmp
fisubs
sahf
mov
orl
xor
nop
sbb
icebp
xor
aaa
add
hlt
and
push
dec
sbb
push
xor
add
sub
int
out
popa
jg
rclb
adcl
pop
fldcw
lock
ftst
inc
adc
orb
loope
sub
mov
adc
out
stos
les
or
add
xorl
or
nop
rolb
adc
fimuls
orl
push
inc
jle
sub
or
les
insl
inc
inc
cmp
pop
ljmp
and
sbb
jne
gs
call
pop
int3
adc
or
mov
je
pop
jmp
jbe
adcb
inc
rcrl
mov
or
sbb
test
add
out
jle
cmc
mov
jno
dec
xchg
das
inc
and
movb
add
outsl
cmpsb
mov
add
rcl
push
subb
jns
mov
dec
xchg
add
cmp
mov
test
mov
cmp
and
add
lcall
cli
pop
in
inc
jmp
test
jne
and
jno
sbb
stos
inc
nop
inc
jns
lea
jae
aam
add
or
sub
and
ret
clc
add
push
inc
inc
in
ja
adc
xor
or
outsl
and
inc
dec
test
rcl
test
in
gs
mov
movsb
and
vmovaps
fiadds
orb
mov
stos
cltd
sub
inc
imul
dec
xchg
inc
sbb
push
lock
inc
dec
aam
push
sbb
jmp
rolb
mov
pop
aam
testl
add
movzbl
add
lds
lea
inc
sub
lods
in
clc
fwait
mov
xchg
es
push
sbb
in
js
js
cmp
xor
and
xchg
adcb
jo
pop
adcl
cmp
into
flds
out
cmc
jbe
cmpb
push
lea
add
shr
les
cld
push
shl
mov
scas
and
sbb
sbb
outsb
inc
cmp
inc
xor
dec
xchg
jg
cmp
stos
cltd
dec
hlt
js
push
je
mov
mov
movb
adc
xchg
add
and
xchg
sti
inc
jae
sub
shl
xchg
fsub
in
mov
adc
sub
jl
les
fdivp
test
jno
mov
dec
test
sub
outsl
ffreep
inc
jge
or
pop
and
inc
sub
sbb
lods
push
sbbl
arpl
xchg
stos
psllw
sahf
sarb
movsb
cs
xlat
adc
rclb
sbb
enter
xchg
repz
add
fmul
sub
cltd
fisttpl
jecxz
push
add
into
adc
push
pop
and
sbb
mov
xchg
pop
ljmp
call
mov
mulb
es
sbb
inc
add
rcrl
jno
cwtl
inc
jns
or
dec
loop
and
gs
mov
cmp
sbb
jbe
jecxz
stc
es
imul
inc
clc
test
push
dec
mov
ljmp
out
adcb
mov
push
decb
add
cli
and
leave
adc
lds
out
add
mov
inc
das
sbb
arpl
adc
gs
xor
cmpsb
lcall
xchg
adc
add
mov
call
dec
negb
inc
add
or
push
push
jmp
add
lret
push
cs
jnp
pop
sahf
inc
mov
jmp
or
movsl
or
in
push
and
faddl
int
daa
mov
out
mov
pusha
lds
movsb
jecxz
add
lret
adc
xchg
jbe
iret
add
cli
lahf
mov
inc
add
sub
and
xor
lods
push
fmuls
mov
sub
data16
mov
repz
push
pop
xchg
imul
add
into
and
ss
inc
dec
sbb
popa
inc
sub
mov
scas
insl
jge
lods
pop
mov
dec
adc
call
loope
rolb
les
shlb
and
enter
fdivl
mov
and
pusha
rorb
orl
shll
add
add
mov
xchg
mov
mov
lret
sub
fistpl
movsl
jecxz
dec
scas
lods
pop
pop
hlt
push
aas
adc
mov
and
insb
loopne
ret
dec
xor
popf
cmc
xor
insb
fwait
adc
imul
mov
and
or
xchg
xchg
clc
jno
fstpl
les
nop
pop
adc
subl
adc
shll
jnp
push
push
cmp
inc
push
mov
je
lcall
pusha
pop
ret
call
movsl
lds
jo
sub
mov
push
flds
add
or
cmp
cmc
cmp
and
aad
add
pop
divb
mov
mov
int3
clc
pushf
mov
mov
sub
or
rdpmc
mov
pop
or
mov
mov
stos
in
mov
iret
and
mov
mov
lock
add
and
movsb
jbe
jecxz
je
in
aam
test
or
idivb
fmulp
push
pop
mov
pusha
push
xchg
flds
mov
lods
xchg
jns
movsb
aam
add
orb
lret
test
push
mov
xor
inc
sbb
sub
fs
je
movsb
mov
xor
or
sbb
cmp
pushf
xor
je
pop
dec
cmp
jbe
jnp
fsubl
jle
das
test
mov
push
cs
push
icebp
push
xchg
clc
sbb
test
and
mov
sub
ret
mov
rclb
andb
pop
gs
inc
sub
or
mov
loope
pop
mov
dec
sbb
jno
ret
clc
test
test
rorb
mov
jl
mov
or
roll
adc
push
jmp
rolb
or
jmp
inc
inc
push
sbb
dec
xchg
loopne
rcrb
int
cmp
lock
jl
xor
add
adc
xchg
cmp
push
xor
enter
out
and
inc
es
xchg
fldcw
sbb
cmpb
imul
mov
mov
cmp
mov
nop
sahf
lods
xor
mov
inc
mov
mov
lods
inc
inc
ss
in
and
jno
xchg
sbb
out
xor
ret
and
hlt
adc
cltd
and
sub
fmull
dec
out
xchg
andl
xchg
je
dec
das
push
clc
pop
mov
mov
mov
xor
adc
sub
shlb
and
add
push
inc
push
iret
jae
sub
repnz
imul
int3
int3
clc
data16
cmp
inc
sub
lock
add
or
or
jae
enter
add
subb
dec
add
aam
jecxz
inc
sbb
xchg
mull
scas
arpl
inc
inc
xchg
hlt
shlb
cmp
cmp
fs
xchg
jne
mov
outsl
inc
fisttps
or
les
test
inc
sbb
or
adc
pop
clc
mov
ret
xor
ret
sub
into
ret
out
fst
adc
mov
push
lcall
mov
jbe
popf
add
ret
xchg
test
dec
fwait
or
sbb
rcr
fmul
int3
xor
clc
mov
fs
pop
rorb
cmp
mov
and
ret
cmp
mov
xchg
inc
adc
jp
add
sub
inc
imul
or
pop
jo
and
addr16
mov
in
mov
push
test
xlat
cmp
pop
clc
clc
ss
je
clc
addr16
ret
push
pushf
or
jne
dec
jl
bound
dec
mov
negl
insl
js
and
jbe
lea
push
inc
pop
adc
faddp
iret
mov
sub
repz
js
mov
scas
mov
jbe
out
add
xchg
mov
inc
pop
imull
mov
movsb
adc
sarb
xor
imul
ljmp
roll
js
mov
loopne
int3
ret
je
mov
fsts
addb
sub
test
or
and
out
inc
repnz
sub
sbb
adc
add
mov
shlb
pop
inc
xchg
xchg
xor
cmp
inc
loopne
dec
xchg
mov
imul
adc
fcoms
clc
jecxz
sub
cmp
dec
cmp
mov
inc
stc
cmp
les
loopne
js
loope
cltd
nop
xor
test
cld
adc
fmuls
xchg
movsb
mov
sub
lods
es
jecxz
icebp
add
mov
push
shll
dec
and
repnz
sub
ljmpw
loopnew
fsubrs
inc
pusha
add
hlt
and
add
jne
xor
mov
cld
hlt
sbb
aam
xchg
cmp
call
push
lahf
les
loopne
cmp
sub
aas
cmpsb
inc
inc
in
adc
arpl
inc
in
inc
pop
sub
mov
push
adc
shrb
add
jmp
adc
lods
mov
mov
rcrb
and
js
or
add
mov
call
mov
mov
scas
or
mov
rorb
insl
aaa
rcrb
adc
mov
xor
add
jp
test
sbb
sbb
mov
xor
inc
sub
add
loop
aam
mov
mov
jp
push
and
push
adc
rolb
rcr
dec
pop
adc
add
pop
mov
add
aaa
jns
aas
add
or
nop
sub
es
pop
mov
xor
add
and
or
insl
or
xor
pop
mov
inc
shr
test
add
pop
push
pop
iret
dec
cs
dec
decl
sbb
and
dec
aaa
test
insl
mov
mov
dec
push
jp
js
mov
jno
emms
pop
outsb
and
call
add
and
negb
lret
js
xor
or
shll
jbe
loope
nop
mov
add
mov
insl
arpl
fs
xchg
arpl
sbb
add
test
xchg
adcl
xor
jo
insl
and
mov
ret
orl
mov
jo
mov
lcall
pop
pop
fst
fsts
pop
mov
push
pusha
xor
adc
mov
xchg
add
rolb
mov
or
or
cld
nop
pusha
add
jns
enter
xorb
cmp
mov
jbe
adc
andl
cltd
rorl
loopne
cmp
mov
or
cmc
mov
add
es
or
dec
fists
adc
jnp
lahf
add
sub
inc
add
pop
push
and
int3
push
test
mov
shlb
imul
or
sub
bnd
test
ret
incl
and
push
push
les
and
dec
and
xor
dec
lock
inc
or
add
add
adc
addb
add
imul
inc
and
adc
or
insl
das
add
mov
adc
inc
test
nop
sbb
inc
add
add
mov
add
add
and
in
and
add
outsb
loopne
test
mov
bound
inc
adc
int
add
clc
adc
in
sbb
add
inc
cmp
int
pusha
inc
adc
mov
sahf
fistpl
add
nop
bound
pusha
jb
repnz
add
push
shlb
loop
dec
inc
cs
inc
repnz
jo
insl
add
mov
test
sbb
loop
cs
cmpsb
mov
inc
into
mov
shlb
pop
add
pop
mov
add
in
test
and
fimull
pop
call
rcrl
jbe
push
adc
inc
inc
and
xor
add
sti
lods
or
xor
mov
add
lret
inc
adc
loope
add
cmp
inc
cmpsb
pusha
push
pusha
out
adc
xor
enter
xor
pop
addl
nop
repnz
addb
shl
mov
or
mov
insb
es
push
repnz
or
pop
pusha
push
inc
xor
add
lcall
inc
mov
or
rorl
shrl
push
mov
loopne
adc
or
inc
sahf
test
dec
jl
add
xor
pushf
ljmp
or
and
sub
pop
lcall
dec
inc
xlat
add
push
fsubs
jl
aam
mov
call
loopne
pop
inc
dec
nop
push
push
outsb
sbbb
cmpsb
mov
mov
mov
fisubl
rolb
inc
into
test
pop
addb
dec
inc
adc
test
ss
xchg
and
mov
notb
or
mov
inc
mov
cmp
adc
popa
push
and
dec
xor
popa
or
call
nop
sub
hlt
push
dec
pop
push
adc
inc
je
push
test
inc
push
dec
pusha
bsf
push
xchg
lods
testb
jl
ret
mov
add
lods
or
inc
inc
movsb
and
je
cwtl
sbb
into
pop
test
dec
popa
adc
push
sbbl
pusha
mov
xor
pop
inc
xchg
test
lret
mov
lcall
adc
push
int3
jp
push
loopne
inc
popf
sbb
cmp
mov
inc
push
mov
nop
ss
rcrb
ret
ret
subb
es
mov
popa
or
lcall
fiadds
data16
inc
push
xor
or
mov
es
push
jge
popf
add
xor
lcall
cltd
les
and
inc
test
inc
inc
push
or
fmul
or
add
dec
mov
mov
mov
adcb
cwtl
or
ret
call
les
and
pop
dec
mov
push
ss
cmp
nop
cmp
mov
inc
and
xchg
add
xor
jecxz
mov
xor
data16
call
or
ds
test
add
and
dec
or
test
lret
rolb
data16
add
inc
adc
inc
pop
out
movsb
rclb
xorb
nop
push
pop
push
pop
inc
cmp
inc
mov
add
cmp
mov
jo
stos
sbb
out
pop
test
lcall
ret
lock
add
or
push
out
inc
repnz
mov
add
outsb
add
ss
loop
mov
cli
cmp
orl
xchg
xchg
add
outsb
popa
pop
push
sub
outsb
mov
or
inc
stos
add
sub
mov
loopne
and
call
add
fs
imul
fs
rorb
nop
or
inc
mov
or
fdivrl
sbb
adc
push
xor
or
call
push
dec
stc
add
ss
mov
lock
rcrb
cmp
sbb
push
and
xor
lcall
add
test
pop
sbb
and
xor
mov
mov
movsb
jo
sbb
inc
cmp
ss
or
sbb
add
push
cmpsb
bound
test
sub
inc
add
daa
cmp
and
out
loop
rorb
adc
cld
bound
mov
bound
pop
cwtl
sub
or
xor
test
cmp
push
push
sbb
in
out
xor
sbb
pushf
push
cwtl
ss
jp
sbb
sbb
ds
imulb
mov
jb
xor
dec
xor
pusha
mov
lret
add
mov
out
cli
and
bound
pusha
mov
test
popa
fs
push
cmp
or
sbb
and
jns
mov
and
mov
out
test
add
insb
out
nop
push
fmul
push
adc
mov
or
xchg
xchg
push
inc
nop
test
ror
xor
inc
loopne
cwtl
add
in
sub
cmpsb
and
sbb
push
btr
add
xchg
outsb
packssdw
stos
add
inc
add
je
pop
push
add
sub
add
xlat
dec
pusha
das
mov
sub
xor
or
ss
sub
add
cmpsl
cmpl
testb
addl
mov
cltd
enter
rorb
pusha
popa
aaa
push
and
cwtl
ljmp
inc
and
icebp
push
inc
data16
in
jns
add
js
push
adc
or
push
jp
pop
dec
add
callw
ss
rcr
ds
dec
or
push
mov
loop
dec
inc
mov
xor
call
inc
xchg
or
add
push
jo
sbb
inc
and
xchg
test
enter
xor
jnp
dec
xchg
and
cmp
adc
sub
icebp
inc
adc
loopne
nop
or
movsl
cmpb
sbb
xor
cs
sbb
add
test
pop
aam
xor
pop
or
jl
cmp
arpl
mov
shlb
push
dec
divl
cmp
inc
lret
adc
pop
push
cmpsl
and
or
dec
push
sbb
sbb
jae
sahf
push
pop
test
mov
inc
or
or
cmpsb
movsl
lret
mov
shrl
nop
dec
cmc
inc
loopne
add
pusha
push
or
clc
bound
adc
mov
sbb
mov
js
inc
rorb
push
pop
pop
out
ss
xchg
sub
insb
aam
inc
adc
xor
mov
fld
mov
and
mov
adc
or
mov
fmuls
cmp
pusha
lods
push
out
es
fs
cwtl
add
mov
scas
popl
dec
or
inc
test
or
cmpsb
inc
movsb
and
xor
insb
push
mov
fcmove
pusha
stos
adc
xor
push
rolb
mov
mov
inc
adc
test
call
jbe
aam
add
or
push
addl
cmc
out
lock
inc
add
scas
jle
daa
adc
ret
hlt
and
cmpsb
inc
add
adcb
pop
xor
xor
fsubrs
mov
pusha
lret
mov
jo
push
inc
jl
pop
sbb
orb
aam
into
cmp
mov
scas
jnp
inc
rorb
rolb
sarb
fxch
fiadds
mov
jo
insb
in
stc
jl
inc
pop
xor
je
int3
mov
sahf
add
faddl
cmpsl
pop
push
loop
and
mov
push
jbe
test
add
or
or
cmp
xchg
in
inc
xor
ficoml
add
inc
jo
nop
pushf
adc
and
jbe
inc
popa
add
mov
xor
dec
ljmp
dec
xor
rol
ss
mov
rcrl
or
cld
xor
mov
inc
add
lods
push
lcall
pusha
scas
inc
mov
cmp
mov
insb
outsb
mov
mov
test
adc
js
hlt
je
add
xor
arpl
pushf
inc
lock
roll
push
cwtl
sbbb
sbbb
xor
add
dec
add
js
lods
insb
icebp
jne
mov
fs
add
scas
movsl
sbbb
popa
in
jle
push
add
mov
jle
inc
adc
adcl
add
cmp
inc
out
cwtl
cmp
mov
mov
cmpsb
xor
pop
add
add
sbb
js
jp
incl
scas
pop
cmp
jl
jp
les
add
icebp
ret
mov
incl
repnz
add
sub
je
jge
add
sahf
pop
icebp
adc
lds
scas
and
scas
fidivrl
add
sub
add
outsl
ja
or
adc
int3
cli
leave
shr
push
mov
ljmp
mov
sub
and
int3
add
das
ret
add
mov
lock
mov
dec
inc
iret
mov
ja
jmp
popf
xorb
ja
or
icebp
mov
add
sbb
mov
rcl
mov
and
or
fbstp
push
or
dec
sbb
ljmp
inc
and
mov
test
pusha
add
add
sub
call
push
mov
pop
lret
pop
add
and
push
pusha
sti
push
mov
dec
mov
int
add
bound
cmpsb
xor
xchg
add
add
inc
jl
cmpsl
daa
or
xchg
cmpxchg
push
mov
add
jle
negl
sarl
ja
incl
out
lcall
sti
cmp
push
add
pop
cld
decl
jae
addb
lahf
clc
sbb
sarl
repnz
cltd
mov
imull
xor
pop
add
sbb
scas
rcl
cmp
jp
stos
inc
incl
cwtl
and
lret
mov
jae
fidivl
pop
cmpsl
add
mov
incl
add
pop
mov
sbbb
bound
push
inc
adc
in
lcall
bound
in
fs
pop
adc
roll
sub
push
data16
in
jo
mov
xor
cmc
mov
jb
nop
and
pusha
data16
mov
ret
cld
dec
call
fcom
fwait
or
std
adcb
and
add
sub
mov
push
push
inc
jne
push
dec
xor
xchg
add
int
mov
push
and
aam
add
pushf
cltd
jl
ljmp
incl
pop
addl
rcrb
shrb
mov
idiv
ret
in
mov
and
add
sarb
add
cs
mov
in
sbb
push
pusha
or
pop
adc
pushl
faddl
push
pushf
popa
add
mov
jecxz
mov
mov
pop
and
inc
mulb
rol
push
pop
sbb
fs
incl
xchg
dec
ss
sahf
add
add
lods
retw
pop
mov
mov
xlat
fbld
les
dec
shll
and
and
pop
lea
stos
rcll
aam
add
loopne
inc
mov
or
or
pop
mov
mov
push
mov
outsl
mov
mov
ljmp
clc
adc
push
or
add
push
cmc
and
add
mov
lret
inc
adc
rorb
inc
icebp
lea
add
movswl
pushl
dec
pusha
cmp
dec
jo
mull
pop
push
sbb
mov
xor
cmp
cli
xor
xchg
mov
push
mov
add
pop
hlt
jg
inc
sbb
ret
mov
jl
lods
add
test
sub
cmp
adc
aam
movsb
lahf
mov
gs
jge
loopne
jp
sarb
adc
dec
add
inc
and
or
dec
rcrl
decb
incb
mov
sbb
push
les
inc
clc
movsb
das
push
add
iret
scas
cld
decl
aam
and
inc
insl
fnstcw
add
and
inc
jge
fsubp
add
add
arpl
jns
push
cld
decl
push
daa
xchg
in
addl
xor
adc
adc
fiadds
sti
incb
test
adc
xlat
aas
scas
dec
mov
in
out
fdivrp
and
or
fisubrl
rorb
inc
jg
jg
sbb
aas
fimuls
adc
xchg
dec
mov
mov
push
shr
jle
add
dec
mov
inc
testb
cli
lahf
pop
cmp
shll
inc
sbb
in
cmp
das
jp
jnp
sub
push
push
mov
arpl
jno
pop
nop
cltd
add
inc
jle
pushl
adc
cmp
inc
test
clc
rolb
scas
push
addr16
xchg
mulb
add
or
inc
shlb
dec
mov
mov
lcall
sub
jmp
adc
stos
popf
xcrypt-cfb
cmpsl
data16
mov
mov
lds
inc
arpl
dec
filds
mov
dec
push
or
pushl
cli
ja
jo
daa
add
xchg
add
cmp
loopne
adc
and
repnz
gs
push
cld
loopne
mov
dec
jne
sbb
inc
rorb
repz
notb
or
pushf
pop
inc
add
jg
clc
adc
push
xor
mov
out
add
fistpll
insl
push
adc
sub
notb
enter
les
ds
inc
pop
xchg
cld
pslld
std
lret
out
adc
mov
dec
lret
jg
in
and
mov
arpl
mov
mov
jo
daa
in
lahf
decl
shl
push
mov
sub
and
cltd
inc
xor
stc
aam
rclb
add
rolb
jmp
jg
add
mov
push
pop
lea
lea
fisubrl
rcll
std
sub
xchg
push
push
inc
add
icebp
cwtl
test
jp
mov
mov
mov
xchg
mov
mov
push
out
sbb
and
addb
mov
test
cli
out
push
jecxz
xor
imul
mov
jne
fwait
xor
sbb
xchg
test
sti
ljmp
or
int
iret
aad
or
test
adc
call
movsb
or
push
fdivs
pop
loope
mov
pop
push
dec
jmp
decl
sbb
call
pop
test
fsubl
mov
mov
mov
mov
outsb
andb
inc
sub
inc
inc
sbb
cmp
out
decl
adc
aas
lcall
int
jmp
dec
inc
fucom
test
mov
pop
push
popl
pop
xchg
notb
aaa
push
loop
push
cmp
jge
cmp
jge
in
push
xor
sbb
add
clc
mov
dec
call
adc
xchg
jae
sub
out
call
mov
enter
cmp
ja
push
xchg
aas
call
add
dec
jg
out
mov
mov
sbb
ja
adc
sti
stc
mov
test
enter
jg
and
shl
ret
sarb
in
inc
dec
rclb
stc
push
mov
sbbl
incl
andb
push
mov
pop
fstpl
xchg
inc
push
fcomip
decl
das
scas
xor
push
mov
rclb
sub
lods
cmp
adc
sar
call
gs
shrl
adc
aad
daa
mov
ret
push
pop
push
or
pop
cmpb
lahf
cmc
jb
mov
xchg
negl
sbb
cmp
lahf
rclb
test
mov
dec
sub
fsubrs
mov
shr
je
insb
inc
dec
jg
into
jne
adc
or
dec
cmp
mov
pop
pop
out
hlt
pop
inc
mov
scas
fsts
and
sbb
int
sub
data16
mov
enter
jl
push
add
mov
adc
fcmovnb
cmp
sti
sbb
frstor
mov
jae
adc
push
mov
test
in
sbb
iret
inc
add
dec
add
xchg
sub
gs
adc
adc
hlt
aas
sbb
movl
jp
and
popa
enter
cld
sub
in
arpl
cwtl
lcall
pop
ss
aaa
jmp
inc
mov
or
cmp
jge
xor
xchg
xchg
fmul
call
xor
outsl
inc
cmp
dec
repnz
sub
pusha
popf
mov
inc
adc
es
fistpl
mov
test
and
test
mov
adc
std
jbe
sub
cld
dec
xor
stos
loope
add
jmp
add
das
in
dec
xor
js
adc
in
adc
cmp
scas
inc
xor
jmp
pop
dec
jne
lcall
mov
sti
lock
movsb
imul
pop
or
aas
loopne
adc
pop
or
stos
les
push
mov
cwtl
cmp
inc
negl
and
or
fdiv
lea
enter
mov
xchg
into
sub
icebp
add
jg
inc
cmpsb
xchg
inc
mov
inc
sub
cld
pop
into
cltd
and
sbb
dec
push
mov
xchg
sub
jnp
push
and
cmpsb
stc
ljmp
push
mov
shrl
mov
lock
cmp
popa
lret
add
inc
ds
push
mov
int3
xor
aad
add
aad
int
jb
imull
jne
cmp
xchg
mov
cld
mov
dec
add
out
scas
fiaddl
mov
add
dec
in
mov
decl
inc
mov
idivb
pop
dec
pop
in
int
pop
test
incl
sbb
mov
stos
pop
div
pop
call
outsb
pop
push
inc
jg
sti
pop
mov
cs
nop
in
test
movsl
in
clc
call
xchg
add
shlb
rorb
add
and
cld
pop
xor
incl
fbstp
call
adc
repz
shl
test
dec
adc
sbbb
mov
dec
rcll
mov
icebp
adc
mov
adc
push
xor
push
pop
lock
push
jp
stos
rolb
pop
jecxz
lcall
sbbb
stos
sbb
mov
adc
mov
mov
or
cld
ss
loop
in
and
sbb
sbb
loopne
xor
in
divb
adc
push
decl
xor
dec
imul
mov
imul
dec
add
adc
jno
and
stos
dec
inc
sar
loope
out
push
stos
jg
aas
add
aam
ljmp
test
adc
incl
mov
cmp
or
xchg
xor
or
inc
push
out
decl
mov
pop
aas
jp
imul
pop
icebp
mov
pushl
std
mov
cmp
push
lea
xchg
repnz
cmp
out
xchg
insb
pop
push
push
enter
mov
pop
icebp
ljmp
add
mov
jb
fidivs
gs
sub
mov
xor
push
jo
stos
les
adc
jl
mov
xchg
xchg
mov
jle
lahf
das
cli
mov
cwtl
xor
mov
inc
loope
pop
cmp
cmp
test
cmp
xor
out
les
enter
in
mov
fstl
fisttpll
add
mov
les
ret
cmp
and
loope
jecxz
rorl
xchg
leave
lea
mov
mov
mov
outsb
add
movsb
fsubs
shll
test
insb
pop
sti
arpl
scas
addb
jmp
aam
cmp
cld
and
pop
adc
xchg
pusha
nop
in
stos
mov
mov
mov
or
sti
lods
push
repz
inc
xorb
and
inc
or
cwtl
int3
ss
js
in
and
push
shl
push
adc
mov
dec
out
shl
push
xchg
inc
sbb
popf
mov
xchg
jo
and
pop
int
aas
and
pop
add
inc
sub
and
xchg
and
xchg
mov
cmp
sbb
ljmp
sub
in
add
inc
outsb
mov
movsl
std
add
add
and
cld
in
testl
jmp
iret
push
test
aad
sbb
xor
dec
inc
ret
or
push
and
jecxz
push
push
aaa
cmc
lods
add
ljmp
pop
add
call
stos
mov
push
dec
or
mov
adc
push
in
sbb
pop
push
or
ljmp
add
lock
add
hlt
fs
mov
inc
je
adc
cltd
cmp
mov
iret
subb
add
bound
aas
jp
mov
adc
cld
and
cmp
mov
jg
jo
lret
incb
incl
push
js
stc
mov
movsb
loope
jae
outsl
sbb
mov
cmp
les
insb
jno
jne
out
pop
es
fildll
cmc
dec
in
call
adc
shll
ds
aas
stos
xor
lahf
fnstenv
test
call
hlt
loopne
push
dec
push
pop
idivb
mov
movsl
and
leave
xor
add
inc
out
dec
mov
jmp
inc
imul
std
and
xor
icebp
ret
push
dec
fs
inc
push
push
cmpsl
and
fistl
and
test
mov
jle
imul
mov
and
pop
cmp
loope
pop
mov
adc
cld
aaa
ret
sbb
icebp
clc
fldl
xor
test
pop
sub
cmpsb
jo
clc
notl
mov
lret
arpl
mov
popf
mov
cmpsb
sub
hlt
cs
dec
xor
dec
push
xchg
xor
mov
les
aad
call
scas
mov
popf
fsubr
jo
push
daa
cmp
pop
push
incl
bound
fwait
cmp
and
test
mov
mov
sbb
inc
orl
add
xor
cld
scas
cli
inc
outsl
dec
cli
fmull
push
imul
xchg
ret
ret
iret
aas
loopne
std
dec
and
fs
mov
adc
fldenv
ljmp
mov
mov
push
gs
addb
lock
repnz
adc
repnz
inc
add
in
mov
mov
mov
sub
cmp
mov
test
and
stos
ds
sahf
lret
je
mov
rorb
xchg
ljmp
or
push
lods
lods
mov
inc
js
pushl
jmp
push
repnz
inc
or
iret
pop
mov
je
and
lcall
ljmp
jge
mov
ljmp
adc
decl
push
adc
pop
push
lods
and
adc
std
add
add
test
bound
mov
ljmp
or
adc
push
or
xchg
in
in
insb
adcb
cmpsb
push
jecxz
mov
mov
add
jg
xor
into
std
mov
inc
mov
pmulhw
jge
mov
clc
sti
mov
stos
cmpl
jmp
sbb
mov
ja
cld
jo
sbbb
add
push
loop
jge
dec
std
push
dec
xor
cli
hlt
in
add
out
dec
adc
inc
outsl
jg
mov
or
mov
loopne
adcb
add
jg
hlt
call
jge
inc
cli
adc
cwtl
mov
cmc
add
mov
mov
fwait
push
cmp
xchg
pop
pushf
sbb
jne
and
outsb
cwtl
clc
sub
jl
hlt
inc
leave
idivl
imul
push
xchg
add
call
inc
mov
rcrl
and
arpl
add
jg
aaa
mov
repz
cmp
std
pop
jnp
ja
pop
mov
add
out
cmp
mov
jg
addr16
add
cmc
lcall
fs
outsb
sub
add
inc
shr
loopne
hlt
test
push
lcall
sbb
lcall
rclb
mov
sti
add
mov
dec
je
je
leave
fisubl
stc
pushl
inc
mov
out
dec
jecxz
inc
sti
inc
popa
ret
cli
popa
and
lcall
loopne
cmpb
call
lods
cli
ja
or
fidivl
jb
test
adc
repz
sub
stc
clc
push
fs
mov
add
and
out
jne
fdiv
dec
hlt
and
sar
hlt
jmp
adcb
or
adc
cmpsb
stc
pop
push
jo
mov
add
sub
ret
ljmp
stos
cmp
xchg
pop
sti
popa
and
je
jp
lea
fcomip
call
mov
cmp
les
sub
adc
ret
xchg
std
or
lock
cmp
imul
nop
out
add
xlat
mov
mov
rorl
xchg
jg
fnstsw
and
push
jecxz
xor
leave
pop
add
dec
pop
xchg
adc
pop
insl
mov
aaa
inc
push
addl
inc
pushl
adc
mov
mov
das
icebp
mov
inc
or
cwtl
cmp
or
decl
imul
sbb
cld
lahf
in
push
test
mov
mov
xchg
push
xchg
cmc
shll
es
cmp
add
add
iret
rorl
pop
or
fadd
add
or
adc
dec
add
push
int3
test
jnp
mov
dec
sbb
add
dec
mov
in
xor
sbb
dec
add
jge
and
dec
pop
cld
sbb
add
push
push
mov
data16
test
mov
cmp
sbb
mulb
fildll
push
js
cmp
sbb
pop
or
popf
jg
loopne
jmp
inc
aad
inc
out
subb
xor
dec
out
fstpt
adc
out
jno
int3
pop
hlt
jo
stc
xor
pop
mov
sbb
xor
cli
and
sbb
xchg
sub
mov
mov
and
pusha
xchg
jmp
or
push
cmp
sbb
pop
cmp
xor
cmp
in
cmp
out
ret
mov
jnp
imul
inc
inc
or
cld
add
sub
cltd
jns
dec
in
cmpsb
imul
push
cld
and
push
mov
or
iret
or
jo
mov
mov
mov
jne
cmp
xlat
sbb
add
ljmp
rcll
add
dec
es
aaa
cmpsb
test
jl
lcallw
and
dec
sahf
or
pop
pop
std
call
sub
sarl
lods
shr
push
push
add
repz
idiv
push
jl
add
sub
sub
call
rorb
push
push
push
ret
push
mov
add
sub
and
push
mov
jbe
push
bound
mov
testb
xchg
in
push
sbb
incb
dec
inc
pusha
ja
aaa
or
repz
cmp
fisubrl
mov
scas
aam
iret
adc
or
mov
cmpsb
clts
add
inc
inc
fstpt
xor
pushf
dec
fildll
sti
insb
pushf
mov
mov
and
cmp
cmp
push
or
push
fcomip
int
in
sbb
dec
mov
mov
not
lret
pushf
adc
cmp
pop
adc
pop
loopne
ret
push
jle
jg
pop
ljmp
cmp
imul
je
cmp
xor
fisttps
dec
into
push
scas
insl
add
fiadds
fs
xor
xor
sarl
add
in
ss
jno
movsb
jp
decl
mov
mov
add
pop
jecxz
orb
push
xchg
add
loopne
mull
dec
sub
and
test
jbe
fildll
sub
das
mov
sub
je,pt
push
test
or
call
inc
push
aas
mov
sub
ret
stos
inc
adc
popa
jbe
xor
pushl
or
aad
lds
or
or
fwait
add
das
sar
mov
rcll
add
inc
mov
mov
sar
jmp
xchg
add
push
jbe
iret
insb
and
adc
icebp
mov
sbb
mov
cmp
jmp
out
in
leave
mov
cld
mov
scas
add
adc
data16
sub
mov
in
std
adc
push
xchg
loope
cltd
test
cmpb
mov
push
mov
xchg
rcl
test
add
xchg
jg
mov
rcrl
test
ljmp
mov
push
lods
or
loope
pusha
int
or
xchg
push
pop
jnp
test
push
cltd
aas
imul
lret
adc
sub
out
mov
test
rcrl
sub
hlt
clc
fnsave
add
xor
insl
ret
and
in
and
inc
jle
push
clc
es
outsb
dec
add
rolb
dec
leave
add
pop
mov
test
movsb
xor
jp
add
scas
ljmp
xchg
hlt
outsb
lcall
inc
push
repnz
adc
scas
popf
mov
jge
push
hlt
jo
cmpsb
and
xchg
jbe
cli
lret
mov
push
cmp
ja
mov
pop
popa
popaw
orl
es
add
and
lods
fld
je
lcall
call
insl
add
imulb
cmp
sub
lock
mov
fsubrl
xchg
stos
inc
mov
jg
mov
inc
sub
jle
mov
sti
push
add
lret
and
decl
add
sub
js
into
and
add
pop
and
in
clc
mov
add
push
sbb
push
sbb
pop
adc
call
sub
push
testb
sub
bound
dec
setbe
hlt
testb
mov
pop
sbb
sub
adc
jg
jge
mov
xchg
jg
and
daa
add
nop
mov
xchg
sbb
mov
sub
stc
pusha
xchg
jecxz
inc
iret
ret
mov
and
loop
insl
add
ljmp
mov
add
mov
es
das
clc
sbb
mov
mull
gs
xchg
inc
aas
loopne
lret
incl
sbb
and
cmp
add
repz
test
xor
push
and
xchg
idiv
dec
movsb
outsl
and
jnp
xor
add
outsb
pop
sar
ss
add
gs
xchg
mov
clc
lahf
call
inc
jecxz
ret
cmpsb
imul
cwtl
inc
daa
adc
je
es
aaa
add
pop
mov
xchg
sub
daa
mov
mov
stos
test
test
dec
dec
add
jmp
addr16
std
call
cmp
mov
ja
push
aaa
test
insl
mov
pop
push
push
test
mov
hlt
add
fisubrs
mov
jecxz
adc
add
mov
sti
mov
xchg
add
or
mov
sbbl
sbb
add
filds
in
std
out
sbb
addb
jg
cltd
sbb
push
add
add
inc
add
in
sub
jle
decl
xor
and
pusha
xor
mov
fwait
mov
sar
jg
dec
lcall
bound
rcrl
push
pop
leave
or
mov
in
sbb
mov
add
xchg
jns
ret
push
mov
fcomps
xchg
sub
pop
aaa
dec
ja
dec
lock
mov
fisubs
cld
ljmp
in
add
pop
clc
pop
andb
insl
lds
ds
pop
inc
inc
mov
sub
call
daa
call
loope
cltd
js
cli
aad
lea
dec
cmp
fiadds
push
repz
insl
lcall
lret
aas
ficomps
push
lds
push
push
mov
out
pushf
mov
lcall
stos
inc
or
rcrl
pushf
dec
fcomip
lcall
mov
imul
cmc
sub
mov
into
push
enter
idivl
faddp
outsl
incl
nop
mov
sub
sub
pop
jecxz
mov
mov
cld
out
jle
mov
and
int
popf
shl
outsl
jmp
addr16
icebp
add
sub
jns
fdivrs
gs
mov
jo
out
rolb
es
push
mov
aas
mov
jle
cwtl
xorl
std
cmp
mov
jg
scas
stos
hlt
in
pop
sub
mov
arpl
jbe
xor
pop
mov
movzbl
or
xor
or
jg
lret
sti
lds
aad
push
xchg
mov
jo
xor
jg
push
jno
xorb
cmp
jnp
pop
cmp
jg
xor
je
pushf
adc
xchg
jge
ljmp
jge
mov
mov
dec
sbb
add
inc
fcomp
jl
loop
or
js
ret
push
add
bound
sarb
xchg
mov
cld
cmpsl
push
repnz
cli
pop
inc
loopne
mov
xchg
jecxz
decl
pop
gs
and
jp
add
stc
outsl
out
filds
push
lcall
in
xchg
or
inc
sbb
dec
adc
inc
push
mov
dec
aaa
fildll
sub
shlb
popf
mov
and
or
pop
push
jbe
pop
add
cld
adc
loop
aaa
mov
cmc
dec
ret
push
cmp
pushf
outsl
outsb
call
and
add
cld
pop
icebp
shll
lea
push
push
push
repnz
mov
add
dec
icebp
pop
frstor
add
adc
rcrb
add
add
call
mov
lahf
xor
push
push
rcrl
adc
rol
jecxz
cwtl
or
clc
add
dec
test
out
and
xchg
dec
push
jl
daa
cmpsb
test
inc
repnz
push
push
mov
cmp
xchg
das
xchg
testl
shrb
push
hlt
mov
dec
sub
aas
ficoms
pop
cli
xchg
adc
mov
lods
jmp
outsl
pop
pop
pop
inc
xchg
pop
or
insl
jae
jg
add
or
or
xchg
dec
lods
test
or
xor
cmpsl
out
cs
push
call
pushf
scas
mov
aas
inc
cmpsb
push
fists
int
ss
xor
xchg
outsl
test
decl
push
fildll
shll
pop
mov
mov
cwtl
andb
je
int3
jno
pop
add
sub
pop
adc
rorb
adc
sub
mov
push
dec
int3
cmp
mov
pop
xor
shl
mov
fisubl
jmp
mov
rolb
lret
add
and
in
mov
outsl
ljmp
sbb
add
jno
lret
test
adc
pop
imul
mov
sub
fwait
jecxz
mov
pop
or
cltd
fdivrs
sbb
pushl
add
mov
int3
call
bound
mov
inc
xchg
mov
add
push
mov
lods
xchg
es
clc
adc
negb
loopne
sub
pop
inc
lods
add
cltd
mov
add
push
or
jnp
pushf
dec
push
mov
adc
out
cmp
adc
das
clc
pop
std
test
adc
cmpb
inc
les
dec
pop
mov
sbb
push
fmul
inc
adc
mov
xchg
mov
repnz
les
enter
inc
fdivs
pop
repz
xor
sbb
or
je
inc
jae
sub
push
add
push
in
push
lods
inc
outsb
sub
dec
aaa
xor
or
push
das
jmp
outsb
xchg
mov
sbb
xor
rcrb
jl
hlt
gs
lcall
lahf
out
add
shl
mov
ret
jo
jecxz
mov
push
ljmp
mov
hlt
cmp
lea
lods
adc
or
es
cmp
incl
gs
adc
jbe
push
xor
cmc
addr16
ret
decl
mov
pop
jecxz
pop
xor
fbld
sbb
push
pop
push
in
adc
out
mov
pop
adc
push
jbe
mov
ljmp
push
cld
push
fadds
mov
xor
popa
ret
ds
test
popa
mov
rcrb
movl
ljmp
cmc
arpl
add
enter
dec
imul
das
lods
mov
pop
jge
adc
fwait
cmp
sahf
mov
lahf
push
insb
out
inc
test
inc
sbb
scas
mov
mov
jecxz
xor
lds
lret
or
mov
sbb
sub
addr16
cmpsl
xchg
or
bound
cmp
sbb
orb
sbb
jge
adc
mov
mov
pop
mov
mov
pop
xchg
cltd
pop
cwtl
idivb
mov
add
test
mov
push
fwait
push
andl
ret
andb
add
pusha
adc
mov
insb
and
das
clc
mov
out
add
sbb
adc
inc
shrb
ror
ljmp
pushf
add
inc
mov
xor
inc
out
and
pop
adc
decb
loopne
adc
xchg
lock
bound
testb
xor
cld
insl
mov
sahf
add
fcompl
ret
incl
cmp
dec
jo
mov
pop
mov
jg
pop
repz
and
push
and
std
add
in
fwait
out
in
or
mov
inc
loopne
mov
push
ret
arpl
mov
mov
adc
jg
mov
rorb
add
test
test
into
cmpsl
mov
popf
xor
decl
mov
xchg
and
subb
out
add
test
aaa
mov
insb
dec
std
ja
das
pop
sub
shlb
or
repz
and
and
fsubrl
cmp
stc
cwtl
adc
scas
pop
adc
and
pop
xchg
push
push
hlt
rolb
cmp
clc
adcl
jl
nop
in
mov
loop
pop
daa
in
cwtl
inc
xchg
aad
dec
or
add
xchg
jno
call
lret
mov
xchg
je
xor
fadds
call
xchg
or
aaa
cld
insb
lds
shlb
leave
sub
add
call
iret
sbbb
jmp
clc
inc
push
out
jbe
adc
sar
jg
and
test
lods
popf
sbb
sar
pushf
test
imul
aaa
sbb
ds
add
push
into
dec
and
add
std
xorb
imul
fcmove
out
inc
inc
cmp
push
sub
mov
shlb
mov
mov
std
and
jl
test
call
out
ljmp
pushl
cmc
adc
xchg
icebp
jg
mov
int
jl
jecxz
mov
rcrl
dec
out
pop
adc
or
fbstp
xor
insb
xor
or
cmpsl
loopne
mov
and
inc
inc
mov
inc
leave
add
rorl
add
cs
jg
cmp
jbe
lock
adc
dec
cmp
sti
sbbb
incl
loopne
jecxz
popa
outsl
cmpsb
das
lods
adc
bound
and
fiadds
out
test
sti
out
add
cmpsb
arpl
xor
mov
cltd
shlb
ss
ret
pushl
and
es
and
xor
jecxz
out
mov
in
movsl
int3
je
cld
jg
sbb
pop
adc
outsb
test
add
leave
mov
pop
lcall
cltd
lahf
into
sub
or
inc
ja
fidivrs
push
sbb
daa
arpl
stc
adc
or
loopne
adc
js
push
call
jecxz
xchg
movsl
mov
test
out
pushf
lcall
jecxz
inc
imul
es
xchg
add
orl
sbb
xor
outsl
push
pushl
xchg
scas
xchg
adc
and
fisubl
sahf
movsb
cmp
push
rol
stos
dec
sub
call
push
ror
jg
lock
sub
add
shr
jge
lcall
mov
inc
sub
add
std
addb
pmulhuw
fists
sbb
cwtl
je
sarb
out
loop
xchg
sub
pop
pushl
dec
andb
add
xchg
pop
cmp
and
push
nop
jp
mov
pop
inc
push
mov
aam
dec
lcall
shlb
mov
movsl
add
rcrb
je
movsl
arpl
lcall
cmp
pushw
xchg
jmp
mov
jg
fbstp
std
jo
sbb
ss
sub
loope
and
pop
pop
cmpsb
dec
and
ficompl
outsb
jl
and
repz
dec
mov
aad
in
push
std
scas
sub
icebp
out
mov
push
cs
out
icebp
jmp
lcall
cmp
clc
add
mov
or
imul
mov
pop
in
dec
adc
int3
xchg
push
adc
or
jg
sti
or
loopne
out
enter
adc
inc
jg
outsl
dec
ficompl
or
iret
cmpsb
or
in
cmpsl
xchg
add
ljmp
xchg
mov
pusha
je
xchg
sbb
and
sbb
bound
add
in
repz
call
cs
dec
xor
sbb
fcomip
call
repnz
or
add
out
ss
jp
std
sub
or
adc
orl
testb
incb
icebp
xor
sub
insb
out
mov
cmpsb
jle
pusha
jl
je
test
sbb
jle
xor
mov
aas
add
sub
sub
in
pop
jp
fildl
call
inc
test
mov
mov
pushf
icebp
lds
scas
addl
ret
and
dec
scas
imul
leave
jp
sub
and
sbb
inc
cld
ljmp
push
dec
pusha
mov
adc
adc
es
push
lcall
addb
pusha
push
push
push
ds
pusha
inc
xchg
rclb
mov
insb
mov
xor
inc
sub
jge
out
ret
decl
or
add
stos
xorb
cmp
inc
and
add
inc
clc
icebp
mov
out
rorb
mov
add
enter
or
pop
cmpsb
pusha
adc
movsb
lahf
lock
test
fmull
and
out
xchg
push
add
mov
jmp
ret
add
into
lret
add
int
mov
int
out
roll
fsubrl
inc
sub
add
mov
push
lea
ljmp
sub
cmp
xchg
movl
incb
ret
xor
and
ja
jmp
push
cmpsb
or
xor
mov
cwtl
xchg
ret
sbbl
jecxz
xlat
and
pop
xor
test
in
add
jbe
sub
mov
xlat
add
push
adc
mov
jb
aam
jne
jge
jb
push
mov
shrb
jae
inc
push
mov
sub
pop
lcall
popf
les
add
push
lock
jp
cmp
pushf
lahf
add
call
stos
sbb
adc
or
fisubl
cltd
mov
incl
pop
xor
push
add
mov
repnz
cmpsb
ljmp
hlt
jg
xorb
icebp
mov
xor
cs
imull
dec
test
mov
xchg
add
imull
stc
ja
out
out
jg
sbb
add
sub
lods
cltd
notl
sub
jl
mov
inc
test
pop
xchg
pop
pop
inc
ja
pop
lcall
rcl
mov
dec
adc
jno
xor
sub
ja
dec
cmpb
fldcw
add
lock
sti
add
or
push
in
insb
clc
lock
xor
pop
adc
fisttpl
mov
nop
test
xchg
pop
into
dec
jmp
ljmp
cld
mov
mov
jmp
into
sbb
sub
cmp
loope
jnp
xchg
mov
lods
pop
push
les
je
mov
cmpsb
xchg
push
jle
fldl
sub
jle
inc
decl
mov
std
jp
sub
push
mov
add
mov
cs
in
incl
cs
stos
push
daa
pop
adc
mov
mov
add
jg
loope
and
xorb
add
add
inc
call
cmp
mov
inc
mov
mov
push
or
shlb
scas
push
jbe
popa
fs
lcall
push
imul
sbb
adc
daa
cltd
arpl
push
xor
shll
sub
jb
add
rolb
mov
ds
aad
cmp
add
jg
inc
repnz
push
push
add
imul
jmp
sub
cmp
in
dec
loopne
cmc
mov
fcoms
scas
add
push
lock
loope
mov
lahf
mov
or
cwtl
ljmp
inc
outsb
mov
xchg
cmpsl
mov
arpl
push
aas
ret
add
push
je
sbb
cmp
das
or
test
mov
cmp
cmc
ucomiss
mov
pop
push
mov
mov
jmp
aad
dec
lea
and
fisubrs
insl
inc
cld
sub
cltd
cs
adc
out
repz
js
dec
push
loopne
mov
xchg
inc
sbb
adc
aas
add
or
enter
sub
es
and
pop
jecxz
add
adc
mov
inc
sub
fsubs
sahf
in
movsl
mov
pop
aaa
enter
xor
adc
mov
sbb
and
pop
sbb
aam
shlb
iret
mov
notb
decl
lock
pop
mulb
xor
push
lret
movsb
add
out
inc
and
mov
jg
dec
jne
add
adc
pop
xor
cmp
and
incl
sbb
repnz
loopne
mov
or
lock
insl
loop
les
or
sub
push
lret
in
dec
popa
lcall
clc
xchg
adc
loopne
fstpl
xchg
sub
lods
sub
mov
cwtl
cmp
and
sbb
lods
sbb
fcomip
call
mov
sub
mov
dec
cltd
lahf
lret
inc
dec
adc
clc
pop
mov
movsb
xlat
sbb
pushl
fisubrs
cli
push
imul
inc
mov
loopne
aam
je
push
dec
cwtl
jnp
push
xlat
es
sbb
jp
sub
in
pop
xchg
rcrl
adc
fmull
sbb
inc
mov
popf
mov
push
push
cmp
sub
mov
test
pushl
lret
int3
pop
jle
decl
shrl
jge
push
stc
daa
jo
in
ret
lahf
ds
mov
sbbb
push
pop
sbb
sbb
cmp
inc
std
dec
lock
mov
decl
xor
out
jp
jmp
lods
lods
ret
adc
or
jg
loop
sbb
imul
cmpsb
clc
dec
scas
rolb
mov
dec
mov
lds
sub
inc
repz
ljmp
enter
imul
pop
js
jbe
mov
push
xchg
inc
in
in
lret
jns
mov
aam
jecxz
roll
jmp
adc
scas
mov
jle
enter
mov
dec
pop
jbe
clc
popa
ss
jb
fdivrl
lcall
mov
cmp
imul
pop
jb
cmp
jg
in
xor
or
cmc
incl
sbb
cmpsb
or
in
mov
sub
loop
push
aas
lcall
or
aad
into
xchg
icebp
mov
mul
popf
movsb
mov
ja
roll
or
mov
xor
nop
mov
or
fimull
push
nopl
cmp
loop
call
lahf
addr16
or
push
or
jns
lock
sbb
out
pushf
lcall
std
pop
pop
scas
int3
sbb
mov
mov
test
sbb
inc
mov
jg
in
push
sbb
divl
mov
and
mov
dec
gs
fmuls
jmp
xchg
adc
sbb
xor
mov
add
stos
and
pushl
popf
in
push
xor
dec
mov
cmp
push
out
mov
rcl
or
fabs
add
sbb
sub
adc
inc
pusha
mov
in
sti
push
inc
and
int3
and
pusha
xchg
jmp
mov
adc
sahf
jmp
aas
repnz
inc
fwait
mov
arpl
sbb
jmp
loopne
in
or
mov
bound
jns
xor
push
neg
pop
das
pop
push
scas
repz
aam
stos
popf
push
lahf
fidivs
cs
orb
mov
dec
mov
cltd
push
lcall
es
jae
lods
mov
cmc
scas
add
lcall
inc
xor
mov
add
dec
ss
lods
adc
ljmp
es
add
or
lahf
cmp
sbb
xchg
daa
aam
iret
mov
mov
push
cmpsw
scas
and
mov
inc
push
fldl
sub
lock
stc
sbb
mov
push
imul
jns
and
pop
cmp
pop
push
ljmp
inc
xchg
cld
andl
push
and
cmp
add
and
mov
call
out
fdiv
inc
inc
shll
lahf
xchg
iret
in
lock
cmp
or
mov
shr
stos
mov
dec
decl
call
adc
xor
xor
jg
push
testb
aad
xor
call
pop
out
loopne
add
pop
andb
call
dec
leave
or
sub
fstl
mov
call
push
mov
outsb
or
ficomps
or
bound
or
sub
ud0
mov
dec
mov
push
jp
mov
pop
add
lret
xor
mov
pop
in
ljmp
inc
arpl
cmp
mov
or
and
imul
jmp
and
mov
jl
jb
dec
xor
int
in
dec
jg
and
xor
scas
or
adc
xchg
dec
adc
jecxz
and
jno
push
loopne
call
mov
sti
push
dec
ret
lcall
imul
lds
inc
mov
jecxz
repz
das
stos
iret
cld
mov
fdivrs
or
hlt
mov
adc
jmp
xor
add
cli
sahf
push
addr16
ds
inc
pop
inc
add
lock
ds
repz
out
std
repnz
test
dec
push
mov
icebp
mov
cmp
or
xlat
push
push
or
dec
stc
ja
lcall
cltd
cmp
fcmovne
xchg
mov
fistps
mov
test
in
mov
mov
mov
fs
lock
nop
jg
inc
aam
mov
repnz
incl
nop
lock
fldenv
pop
out
cmpsb
adc
outsl
ret
dec
stos
out
xlat
inc
dec
lock
fsubrs
jg
jmp
sbb
push
hlt
jo
jae
lret
dec
jg
lea
xchg
shlb
or
pushl
popa
subb
rcl
popf
adc
and
lret
xchg
dec
jle
negl
pop
movsl
test
cmpsb
lds
jl
push
aam
cld
movsb
lahf
mov
inc
punpckhdq
iret
mov
xchg
jp
test
test
dec
cmp
sbb
jg
std
enter
test
push
inc
sub
hlt
call
out
lahf
shll
mov
lcall
inc
les
jmp
mov
sub
leave
xor
mov
scas
aam
movsb
adc
push
add
mov
push
jmp
mov
incl
cld
jmp
mov
and
push
xor
outsl
adc
mov
ljmp
fcompl
jl
dec
jle
xchg
lods
push
adc
lock
mov
sub
decl
dec
push
xchg
dec
gs
les
dec
sbb
fisttpll
arpl
sbb
decl
insb
sub
jno
pushf
xchg
mov
outsl
pop
hlt
or
sub
lcall
inc
pop
xor
incl
adc
pop
dec
aas
dec
push
push
pop
popa
cld
or
xor
sbbl
or
jb
decl
push
shrb
push
add
stos
mov
add
mov
hlt
push
and
adc
or
daa
cmp
mov
movsl
dec
pop
sub
fidivs
add
add
call
push
lods
pop
pop
xor
rcll
pop
adc
negl
xchg
movsl
fbstp
cmp
sub
test
call
xor
xchg
pusha
loop
incl
outsl
adc
xor
xchg
iret
inc
pushf
pop
jmp
fs
decl
aas
cmp
fwait
jb
adc
push
xchg
inc
xchg
dec
add
jns
xchg
push
fadds
xchg
xchg
pop
shrb
lea
fs
in
hlt
shlb
jmp
cmp
push
add
shlb
mov
xchg
scas
aam
or
lret
and
mov
in
adc
sub
dec
cmp
add
test
decl
shll
int
bound
outsb
mov
cmp
sub
scas
lock
fnstsw
jno
sub
incl
mov
nop
hlt
or
sahf
and
mov
push
mov
cmc
xlat
movsl
mov
or
js
sbb
es
lcall
mov
leave
hlt
push
dec
lret
outsb
jbe
loopne
rolb
dec
outsl
or
xor
mov
cmpsl
push
mov
enter
out
add
aas
or
jle
xor
lods
sub
xlat
sbb
pushl
cmp
jmp
lcall
pop
lret
jl
jno
cmp
push
shlb
lcall
aam
xchg
dec
xor
and
jge
test
lods
dec
pop
sub
xchg
sbb
lret
leave
jg
cltd
ret
jp
mov
sbbb
adc
call
mov
lock
orb
add
xchg
clc
mov
xchg
jl
call
inc
pop
std
jmp
ret
pop
inc
adc
ss
dec
pop
inc
push
dec
insl
and
fwait
sbb
jnp
call
iret
sahf
les
sbb
mov
popa
fidivs
ds
aam
ret
push
push
std
call
inc
push
lds
lock
stos
aas
xor
mov
sarb
dec
sar
mov
notl
inc
cltd
sti
pop
push
clc
out
pop
pop
adc
out
and
iret
add
mov
int3
adc
lock
gs
or
sahf
sub
and
out
cli
pop
xchg
ljmp
loop
mov
cmp
cmp
and
repz
decl
dec
test
adc
cltd
mov
xor
outsb
cmp
fisubrs
test
incl
cmc
mov
lds
stos
push
mov
stos
jmp
mov
popf
push
neg
dec
push
sbbb
mov
psubsw
cmpsl
roll
dec
mov
cmp
call
out
mov
dec
lods
je
rorl
shl
xchg
push
push
enter
xchg
ljmp
push
aas
push
or
sbbl
sbb
rorl
fisubl
mov
inc
mov
stos
push
ret
push
cmp
dec
leave
inc
inc
pop
mov
mov
loopne
add
cmp
std
sub
fdivp
enter
xor
addr16
sahf
push
jp
add
sbb
aam
and
stos
mov
sub
dec
ret
faddp
cmp
ljmp
inc
lock
push
sub
jnp
adc
dec
jg
cmp
push
xchg
movsl
out
aas
divb
in
mov
sbb
fcomip
dec
nop
sarb
mov
dec
daa
js
sbb
xchg
fildll
and
call
fdivrs
adc
adc
xchg
pop
cmp
sti
lcall
enter
incl
cmpsl
xchg
xchg
pop
fwait
add
fimull
xor
and
or
mov
mov
lcall
sub
or
mov
xchg
mov
mov
call
shr
sbb
add
or
imul
lock
das
jge
pop
loop
jge
clc
fiadds
pop
jno
inc
shr
fwait
push
or
incb
mov
dec
cmp
fmull
fsubrl
sbb
faddp
jae
sbb
mov
add
dec
push
sbb
xchg
pop
aad
dec
dec
sbb
and
lcall
mov
sub
lock
cmp
mov
dec
in
mov
xorb
xchg
cmc
bound
add
sar
pushl
xchg
outsl
add
pop
mov
push
lea
mov
ljmp
ds
xchg
iret
pop
mov
xchg
imul
xchg
xor
jl
adc
pushl
cld
ds
ja
dec
mov
xchg
sbb
add
loope
jnp
popf
jb
out
call
lcall
ljmp
push
add
mov
pop
fwait
and
lock
lcall
in
mov
pop
mulb
jns
dec
and
ret
dec
outsb
imul
loope
cli
fstps
push
insb
gs
xor
arpl
add
sub
test
pushl
insb
jae
xor
subl
pop
and
sub
inc
jbe
mov
aad
imul
add
mov
jnp
xor
cltd
push
call
loope
insb
cmp
push
loop
insl
outsl
dec
jge
test
das
testb
mov
push
stos
ljmp
bound
push
incl
mov
mov
outsl
dec
sbb
dec
subl
dec
adc
in
add
jl
jl
std
mov
int3
call
cmp
pushf
js
mov
xor
pop
xchg
stos
ret
inc
mov
rclb
sar
call
xorl
cmp
lret
fstl
pop
icebp
incl
loop
outsb
std
lds
enter
shlb
loopne
call
inc
rorb
lock
icebp
sbb
mov
lea
sub
lcall
decb
and
popa
dec
test
jno
mov
loopne
xchg
mov
arpl
scas
ss
xor
rcr
test
dec
popf
adc
push
lahf
sahf
dec
addr16
lcall
out
adc
or
mov
ror
js
sub
add
ja
xchg
mov
idiv
push
loop
icebp
jns
inc
adc
cmp
fsubl
inc
es
pop
sar
inc
movb
jp
jnp
les
scas
xor
ret
aaa
lahf
sub
repz
jmp
mov
or
sub
xchg
movsb
int3
jbe
out
jbe
xchg
adc
sub
decl
pushl
in
push
or
push
add
or
stos
jg
les
jge
out
lcall
je
in
sbb
lahf
or
dec
jmp
shll
adc
or
inc
aaa
pop
bnd
mov
fmuls
int
sarb
mov
push
xor
es
and
data16
ror
ret
adcb
lcall
shr
sbb
jp
xchg
add
push
sbb
and
and
mov
ja
clc
xor
pusha
imul
data16
pop
sbb
and
pop
icebp
fadds
call
jb
fwait
xlat
mov
inc
outsb
sub
lock
jno
aaa
push
outsb
add
and
shrb
sub
sbb
mov
into
sbb
ds
in
cltd
mov
pop
sbb
inc
je
in
pop
push
mov
cli
sbb
pusha
sarb
xor
and
xchg
stos
mov
mov
dec
mov
decl
add
mov
adc
lcall
xor
sub
cmp
or
fucomip
iret
mov
jmp
add
cli
leave
sbb
testl
clc
add
sub
sahf
jg
jno
call
xor
aam
dec
addl
cmp
xor
icebp
int3
fildl
mov
inc
stc
into
dec
call
adcb
dec
sbb
pusha
jge
and
mov
jne
incl
data16
int3
cmp
adc
mov
jg
mov
jne
ljmp
lcall
adc
sbb
lods
movsl
arpl
out
mov
mov
inc
or
pushl
lods
lcall
icebp
mov
inc
push
js
push
jp
enter
mov
adc
pop
mov
call
dec
arpl
mov
xor
pushl
xchg
clc
adc
iret
jnp
aam
mov
aaa
aas
cli
mov
and
loop
cmp
daa
sbb
aad
sbb
andb
mov
cmpsb
fcos
js
jne
scas
pop
cmp
adc
adcl
and
inc
pop
and
mov
or
xchg
jb
inc
cmp
repnz
repnz
dec
dec
movl
jno
pop
adc
inc
incl
rcl
out
mov
jecxz
xchg
ds
outsl
pusha
add
mov
sub
in
dec
mov
sub
xchg
lret
inc
mov
daa
hlt
pop
pop
data16
test
fdivrs
or
mov
lods
xchg
xchg
outsb
mov
pop
push
mov
pop
lea
out
ljmp
mov
mov
jmp
push
mov
mov
add
enter
decl
push
enter
shlb
push
dec
pop
popa
jmp
push
pop
arpl
mov
inc
sbb
aam
jmp
jp
outsl
xchg
aam
in
mov
pusha
push
in
daa
cmpsl
xor
push
or
addb
lcall
xor
sub
add
and
fnstenv
push
push
adcl
ret
clc
xor
lds
cmp
push
add
leave
lds
mov
pop
call
sbb
mov
es
adc
and
loop
sub
ds
or
ljmp
sar
cld
imul
and
popf
dec
insl
fwait
shlb
dec
out
push
push
fcomip
sub
out
or
mov
add
cwtl
iret
scas
testb
imul
push
mov
jmp
pop
push
rorl
in
cs
lcall
mov
test
in
adc
lods
adc
mov
inc
sti
fbstp
cld
call
nop
xchg
out
xchg
lods
ja
mov
inc
jl
mov
mov
lcall
push
insl
ret
mov
repnz
push
push
jns
out
cld
jle
sub
mov
int
repnz
call
push
inc
dec
xor
cmp
push
jne
test
hlt
frstor
mov
jmp
dec
jp
mov
dec
xbegin
pusha
jnp
loop
sti
scas
mov
adc
sbb
jp
icebp
stos
mov
add
cwtl
pop
sub
mov
test
and
pop
test
lcall
ficoml
aam
daa
cwtl
subb
sahf
sbbl
pushl
in
jl
lds
stc
inc
sub
insb
inc
test
mov
dec
incl
sbb
je
mov
push
mov
pusha
pop
loope
pop
xchg
adc
int
lods
lcall
pop
dec
and
xchg
fwait
insl
jp
dec
mov
cmc
imul
std
ljmp
jle
cli
mov
mov
mov
xlat
add
sub
fwait
testl
stos
jmp
xor
andl
cmp
push
call
sub
iret
and
lcall
mov
mov
addr16
call
test
push
adc
adc
lcall
aaa
gs
adc
fwait
jg
imulb
adc
dec
lahf
loop
pop
and
and
loop
call
icebp
lret
sub
inc
push
cld
push
ja
cwtl
pop
or
lcall
aaa
shr
xor
mov
popf
pop
aaa
pop
cmc
cli
mov
nop
xor
push
int
sbb
mov
std
mov
mov
or
push
sub
ds
mov
push
mov
pushl
jle
jns
add
shll
mov
sbb
fbld
cmp
es
mov
cmp
mov
hlt
inc
sbb
out
xchg
sbb
mov
dec
int
hlt
inc
adc
or
hlt
jecxz
js
push
adc
jmp
int3
jb
push
jo
cmp
scas
jge
mov
iret
ret
pop
jmp
mov
mov
sub
mov
loopne
sbb
jmp
or
aas
mov
fucomp
popa
je
mov
arpl
mov
xchg
push
mov
popa
lret
push
incl
sub
imul
xlat
cmp
inc
add
cs
call
mov
mov
push
out
loop
push
das
int3
test
inc
mov
out
iret
sbb
incl
inc
movsb
xor
imul
sub
outsl
fisubrl
aad
pop
movsl
mov
jg
xchg
xor
inc
mov
insb
scas
pop
stos
xchg
in
xor
lods
fistpl
dec
gs
inc
add
lods
filds
leave
dec
sbb
data16
decl
xchg
fs
test
es
xchg
pop
test
lock
in
aas
add
jl
push
jmp
hlt
jge
inc
fidivrs
jg
fndisi(8087
push
fsubr
sub
dec
cmp
iret
cli
xor
pushl
pop
xor
test
inc
imul
into
stc
loopne
xchg
outsb
sub
jmp
in
sbb
mov
jb
adc
lea
dec
fmul
repz
push
fwait
outsl
mov
cmpsb
movb
cmp
inc
dec
jns
lahf
xchg
xchg
mov
arpl
out
or
push
shll
pop
inc
mov
adc
pushl
shlb
add
ljmp
add
repz
pop
and
push
mov
pop
dec
daa
jns
in
and
push
cmp
movsb
and
inc
dec
js
mov
cld
cmp
inc
mov
adcl
sahf
pusha
shlb
pop
jb
push
add
cmp
pushf
pop
bound
push
dec
inc
cwtl
dec
test
mov
jb
adc
adc
ljmp
and
xchg
ja
lcall
and
xchg
sub
lahf
mov
mov
out
enter
inc
arpl
or
mov
inc
ret
xor
xchg
jmp
loope
and
les
mov
inc
sub
lods
cmc
jno
inc
mov
aam
rolb
outsl
cltd
push
dec
xchg
or
adc
popf
cmp
jg
repz
jg
outsl
clc
dec
out
repnz
xchg
aaa
jbe
mov
in
ret
mov
cmc
push
mov
daa
iret
xchg
movsb
push
sbb
push
inc
ss
iret
pop
sub
icebp
dec
xor
ficompl
in
cmp
dec
pop
xchg
insb
fcompl
pushf
xchg
lahf
pop
mov
xor
jnp
or
movsl
std
sbb
std
sbbb
pop
jp
pop
pop
aam
mov
sub
xor
pop
pop
push
loop
icebp
call
mov
push
pushf
push
enter
loope
cli
xor
pop
mov
adc
pop
jnp
sbbb
loope
cmp
inc
or
mov
repnz
mov
je
adc
loopne
and
or
je
mov
pop
jno
test
mov
sbb
arpl
xchg
insb
and
dec
sbb
decl
es
xchg
mov
dec
pop
inc
stc
mov
out
leave
mov
dec
movsb
push
push
push
js
gs
add
imul
movsb
cmpsb
out
jns
adc
outsl
push
test
lcall
or
or
insl
jns
fbstp
popf
xlat
insl
and
cwtl
scas
mov
fistpl
outsl
cld
incl
cld
dec
push
cmp
pushf
mov
ljmp
cmp
shll
je
hlt
mov
jle
stc
sarl
jne
sbb
sub
clc
insb
cmp
xchg
rdmsr
popf
xor
ljmp
shll
jl
xor
mov
ret
inc
mov
jecxz
cmpsl
push
incl
aaa
data16
xor
lods
test
and
jmp
jg
xor
xchg
inc
pop
incl
jae
ljmp
shrl
rcr
lds
es
incl
inc
shrl
mov
pushf
les
shlb
and
sub
into
lahf
incl
call
clc
mov
insl
scas
movsb
mov
popa
push
aad
imulb
add
mov
imull
addl
lahf
outsb
jno
cld
push
pusha
mov
pop
clc
dec
xchg
and
sub
out
cmpsl
lods
iret
pop
jns
fdivrl
push
data16
xchg
push
and
call
xchg
test
lcall
popa
and
add
cmpsl
mov
xlat
fistl
push
lock
sbb
data16
mov
scas
arpl
pop
xchg
lcall
cltd
pop
mov
mov
xchg
insb
and
divb
lret
sbb
pushf
xchg
mov
pushl
xor
or
push
rcl
sub
test
and
cmp
jge
dec
add
outsl
xchg
jmp
and
fnstsw
mov
add
add
call
mov
jno
cmpsb
xchg
xchg
pop
add
fld
mov
popf
sti
popf
shrl
jmp
xchg
jle
imul
repnz
xlat
push
mov
data16
push
cld
pushl
shrb
inc
fdivs
leave
xchg
icebp
jge
xchg
clc
enter
add
cmpsl
in
pop
sbb
and
sub
leave
jg
xor
xchg
stc
in
addr16
fldt
stos
out
sub
hlt
repnz
je
cmp
mov
sub
fbld
jmp
daa
sbb
sarb
outsl
sar
shr
jp
dec
out
leave
push
inc
in
test
inc
mov
inc
pushl
test
cwtl
inc
das
js
popf
or
and
fs
dec
or
cmc
cld
outsl
cld
pop
lcall
in
add
sbb
daa
xor
add
shll
mov
call
divl
or
pop
jbe
mov
mov
ljmp
scas
adc
iret
push
jbe
movsl
pop
stos
fimuls
aaa
loop
pop
test
hlt
call
popf
mov
cmp
bound
mov
fwait
dec
popf
xchg
lods
xor
decl
fmulp
sarb
lret
or
push
test
ljmp
pushl
imul
xchg
mov
test
xor
or
mov
mov
cwtl
incl
push
insb
jno
fwait
sub
mov
cmpsl
js
insb
or
jg
call
in
xor
hlt
adc
call
aam
jae
cli
jle
xor
mov
scas
mov
ljmp
sbb
addr16
and
ret
andb
call
mov
in
test
xchg
pop
mov
mov
push
jl
cmpsl
aaa
movb
pop
cmc
inc
sbb
in
fwait
stos
push
inc
add
mov
into
or
imul
xchg
mov
push
cmp
out
mov
jmp
xchg
in
int3
addl
adc
popf
push
xlat
cmp
pop
mov
loopne
cltd
mov
cmpb
cmp
shlb
or
xchg
stc
cmp
sti
stos
popa
aaa
addl
pop
sbb
sbb
dec
ja
data16
data16
incl
out
scas
int3
mov
add
outsl
into
sbb
xlat
xchg
push
jmp
mov
and
nop
stc
dec
aas
mov
mov
pop
xchg
lds
add
mov
or
xchg
and
lret
mov
incl
arpl
lea
fwait
jle
xchg
popa
movsb
adcb
cs
jg
hlt
pushl
adc
add
lods
imul
loop
bound
lcall
out
pop
iret
jns
adc
out
test
clc
cmp
sub
cmc
cmp
decl
mov
push
repz
cmp
int3
jg
inc
xor
mov
pop
shl
outsl
cli
insl
mov
dec
aad
mov
sbb
pop
in
mov
cmp
mov
add
mov
xchg
popf
pusha
mov
and
scas
pop
decl
cltd
mov
mov
out
cli
mov
jp
sub
jg
fs
xor
dec
cs
adcb
cmpsl
mov
push
mov
jns
lahf
les
dec
cmp
push
dec
adc
mov
stc
pop
and
dec
fistpll
test
jp
jl
orb
push
lahf
out
fimull
sub
push
push
arpl
mov
ljmp
repnz
fsub
shl
sub
ljmp
cmpsb
xchg
mov
mov
lcall
jbe
cmp
and
xchg
fs
and
in
inc
dec
in
testl
pushl
inc
jl
adc
clc
xor
inc
rcll
mov
stc
jp
mov
mov
push
or
push
cld
pushl
clc
in
mov
jno
cmp
out
aad
rcr
push
or
add
incl
inc
int
lods
pop
dec
dec
sub
fld
out
faddl
ficompl
sti
mov
adcb
cli
hlt
daa
mov
inc
jo
pushf
sbb
decb
jg
pop
push
or
int3
sarb
inc
lods
pushf
popa
dec
and
sahf
lea
jmp
js
idivl
lods
rcl
push
jno
nop
and
mov
dec
stos
jnp
je
fists
push
dec
cmpsb
push
add
addr16
out
xor
inc
hlt
mov
ljmp
pop
movsb
sti
adc
cmp
sub
or
lahf
lcall
outsl
cli
cmp
jmp
xor
add
sbb
iret
sbb
xchg
jmp
mov
fists
mov
jl
ljmp
aaa
sbb
popf
sub
sub
mov
jg
call
sbb
in
or
push
hlt
and
lds
and
mov
out
jmp
dec
movsl
addl
mov
mov
pop
lahf
and
and
incl
roll
mov
jecxz
sbb
addb
fs
nop
mov
push
sub
jmp
mov
inc
inc
inc
mov
push
xor
orb
gs
xor
outsl
mov
jmp
out
hlt
loope
repnz
in
clc
cmp
bswap
xchg
test
sub
outsl
sahf
xchg
push
jae
lret
dec
adc
mov
push
out
rol
xorb
push
loopne
xlat
cmpsb
repnz
jl
or
incl
loopne
repz
sub
popa
mov
pop
xor
jg
push
pop
mov
adc
xchg
pushl
out
add
inc
cmc
cmc
push
ljmp
mov
dec
ljmp
sbb
bound
pushl
xchg
xor
inc
ffree
push
lret
adc
call
push
pop
jae
pusha
fdivr
dec
aad
test
mov
lock
rcll
mov
notl
push
mov
xor
lcall
cmp
add
or
add
test
add
andb
adc
incl
inc
pop
push
outsb
sub
shlb
imul
jg
cwtl
mov
jmp
sbb
inc
xor
call
lds
das
jno
nop
xor
inc
fcomp
sub
inc
cli
lcall
incl
mov
sub
mov
pop
and
mov
pop
lcall
jl
xor
and
popf
jl
shlb
sbb
repnz
cltd
rorb
js
lds
mov
hlt
lods
mov
adc
sbb
test
or
pusha
scas
les
arpl
aad
jb
cmp
jp
sbb
data16
std
or
sahf
xchg
inc
cli
pushl
pop
lea
pop
inc
dec
inc
iret
mov
out
jns
xor
jmp
fninit
ljmp
notl
fcoms
jne
in
mov
cld
jg
pop
jl
mov
xor
clc
fucomp
xor
jle
xor
inc
push
and
mov
fs
scas
xor
xchg
or
lret
mov
psubsb
pushl
in
test
cmpsl
adc
sahf
add
adc
ret
or
mov
int
sub
pop
dec
rcll
jge
call
insb
push
jmp
stc
movsb
lods
or
roll
jno
test
xchg
mov
je
call
js
inc
fimuls
rorl
dec
icebp
enter
repnz
push
xchg
or
fmul
decl
fs
mov
stos
cli
je
ficoms
sbb
lcall
mov
pusha
daa
or
aas
imul
shll
pop
sbb
incl
cwtl
pusha
lea
imul
sub
jecxz
mulb
icebp
push
fmull
rcrb
jmp
addl
enter
sarb
daa
jns
cmp
sub
out
mov
pop
std
incl
ret
xchg
fiaddl
sbb
movsb
hlt
adc
cmpsb
in
std
cwtl
out
ljmp
scas
xor
inc
pop
sbb
dec
jne
imul
ja
add
mov
cltd
pop
call
mov
movsl
hlt
mov
clc
sub
cli
add
xchg
and
jns
in
lds
sub
sub
std
pusha
imul
push
lds
inc
mov
loopne
push
mov
fstpl
jb
stos
push
int
mov
sub
push
push
push
enter
mov
js
or
adc
jno
cmpsl
jo
lcall
lods
in
sahf
jle
add
pop
je
mov
in
xor
and
xchg
clc
mov
or
inc
and
notl
cmc
ljmp
adc
mov
nop
mov
aad
cwtl
dec
shlb
cmp
call
pushf
adc
fistps
mov
fisubrl
or
stc
cwtl
inc
inc
and
incl
imul
cld
mov
mov
adc
ret
pop
cmp
mov
scas
adc
cmp
mov
pop
int
rcl
inc
inc
pop
mov
repz
or
cmpsb
or
and
push
out
mov
shr
push
lods
fbstp
out
lods
mov
inc
mov
xor
mov
mov
ljmp
cmpsl
adc
sbb
movsb
push
cmc
sahf
jae
jne
lods
icebp
test
pop
fdivrs
dec
cld
push
imul
sti
jbe,pn
dec
pop
cmpb
jne
imul
sbb
clc
jb
call
mov
pop
lahf
aas
mov
pop
xchg
cmpsb
inc
sub
in
lock
cmpsb
adc
pushl
jge
lretw
xor
push
call
inc
movsl
lret
movsl
cld
stos
sub
ret
ror
mov
xchg
nop
pushl
jge
dec
mov
ds
movsl
repnz
xor
inc
cmp
sub
and
decl
idivl
and
lahf
int3
cmc
pop
push
aam
stos
inc
fidivl
cmc
jge
xchg
inc
scas
test
icebp
das
clc
jmp
outsb
push
clc
std
push
inc
divl
adc
pop
pop
fldenv
hlt
call
inc
in
iret
adc
lahf
mov
data16
lock
cwtl
pop
aas
out
push
or
pushl
mov
jnp
in
xchg
test
lock
cwtl
xor
sub
mov
pushl
cs
pop
pop
xor
add
mov
xchg
ret
jne
gs
jp
push
pop
inc
pop
push
call
jae
movsb
jg
mov
mov
and
fcmovnb
or
fcoml
call
mov
enter
mov
mov
repnz
mov
adc
orb
sub
loopne
mov
popf
mov
lret
pop
xchg
insl
mov
cli
decl
cld
int3
imul
lea
xor
push
fwait
addr16
lahf
dec
push
ljmp
xor
add
jg
cld
mov
outsl
add
pop
dec
mov
incl
add
pop
in
icebp
inc
idiv
stc
mov
inc
add
clc
ljmp
ret
sbb
out
mov
dec
jnp
lret
jg
lcall
dec
inc
push
pop
xchg
mov
adc
pop
jb
xchg
scas
mov
mov
pop
lahf
push
jno
scas
stc
add
and
movsb
jl
aam
pusha
dec
lock
sbb
mov
loop
cmpsl
or
int3
call
pop
or
sbb
orl
mov
pop
fs
pop
dec
ss
sub
in
or
push
stc
or
jmp
xchg
sub
in
and
outsb
pop
lret
mov
or
mov
sbb
call
mov
jae
and
pop
pop
shl
mov
jb
jo
add
mov
es
mov
cmc
push
sub
jmp
stos
ret
dec
mov
daa
lret
nop
std
lret
or
incl
mov
mov
pop
js
pop
in
ljmp
incl
mov
cli
and
lock
jns
lea
jno
call
cmp
add
mov
mov
ds
and
lods
stc
pop
aam
xor
iret
adc
jo
call
dec
stc
in
addr16
jge
dec
in
pushf
jnp
xor
jg
pop
push
xchg
ljmp
dec
jnp,pn
dec
jge
fs
xchg
sbb
sub
rclb
sahf
push
arpl
and
pushf
clc
and
adc
pop
inc
repnz
call
mov
jecxz
decl
sub
pop
mov
push
stc
and
mov
testb
lret
ljmp
push
in
rcrb
xor
push
and
popa
adcl
in
sti
jmp
popa
dec
scas
repz
sbbb
cmpsb
push
inc
scas
lret
push
sbb
push
call
outsb
fbstp
jbe
adc
jl
dec
push
xor
mov
fdiv
mov
pushl
pop
or
arpl
das
in
or
jle
test
iret
jg
nop
lods
cmpsb
out
and
xor
adc
lods
outsb
stc
adc
dec
adc
push
fists
int
mov
aaa
cld
lcall
cmp
dec
ficompl
fwait
orb
bound
dec
ret
push
incl
inc
sub
jae
ret
or
aaa
bound
sbb
mov
mov
jo
insl
out
mov
add
decl
out
scas
aas
jmp
fldt
mov
rclw
mov
inc
or
or
and
pop
mov
out
inc
ret
addl
call
pop
pusha
xor
fidivs
push
iret
out
mov
mov
jae
xchg
mov
and
mov
pushl
dec
out
imul
mov
ljmp
push
inc
out
in
push
mov
mov
add
push
inc
loop
or
lcall
add
cmp
loop
cli
loope
je
jo
add
sub
sub
ret
call
loopne
or
add
loopne
and
xor
xchg
sti
aad
in
mov
loopne
sbb
mov
xor
and
addr16
mov
push
add
jl
adc
enter
cmp
fs
or
push
cwtl
int3
pop
dec
pushf
mov
cli
lcall
xchg
cmc
aam
fmull
sbb
xchg
jno
adc
pusha
lcall
mov
push
rcrb
movlps
testb
sahf
les
cmp
pushl
call
or
adc
and
fdivs
mov
dec
loopne
push
movsl
inc
test
es
std
fs
movsb
ja
insb
jns
cmp
fldl
inc
out
adc
pushl
pop
push
out
add
dec
lahf
and
pop
aam
std
ss
out
shrl
cltd
pushl
lcall
ret
sbb
push
fcmovb
je
add
xor
jge
mov
jmp
loope
jp
push
push
mov
js
lock
jmp
into
lret
adc
out
aam
sahf
cwtl
sbbb
xorl
nop
push
loope
call
jne
mov
outsl
dec
add
in
inc
pushf
xchg
push
rclb
cmp
aas
mov
xchg
enter
push
pop
js
rol
mov
mov
or
dec
xchg
lret
rcrl
outsb
outsl
mov
mov
ljmp
jne
mov
pop
push
xlat
or
push
pop
aas
movsb
and
pushl
mov
add
mov
inc
jns
test
and
stos
sub
mov
push
jmp
pushl
imul
ret
in
mov
aas
xchg
xchg
in
les
test
lcall
fnstsw
jae
sub
sbb
jnp
mov
je
call
push
shlb
pusha
lods
idiv
aam
add
cmpsb
cmp
cmc
test
mov
inc
and
xchg
decl
xchg
mov
shl
push
xor
xchg
in
xchg
enter
lret
repnz
cmp
incl
cs
popa
mov
adc
push
test
dec
push
inc
out
test
sbb
jbe
cmp
sub
and
dec
xchg
mov
enter
pop
std
inc
repnz
notb
xor
mov
movsb
js
in
jae
dec
mov
cli
push
lahf
xchg
arpl
incl
jg
xchg
adc
and
test
mov
scas
pop
dec
add
add
pushl
mov
or
adc
jecxz
jle
popf
cmc
cld
stos
je
mov
aam
xor
hlt
cmp
jns
out
ret
lret
xor
adc
xchg
jne
dec
fistpll
lcall
cmpsl
cmp
gs
movsl
cld
fstpt
adc
inc
mov
adc
incl
mov
stos
mov
das
inc
lods
mov
cmp
cmp
pop
ljmp
inc
inc
mov
jmp
or
mov
push
inc
aad
pop
jg
mov
jg
push
rcrl
shll
fbstp
xor
pop
pop
pushl
std
mov
rcr
add
andl
push
loopne
rorl
dec
ljmp
imul
jns
adc
jo
mov
test
pop
inc
sahf
mov
mov
in
int
pop
pushf
push
int
clc
fwait
mov
and
or
push
cmpsl
inc
loop
push
jmp
call
dec
in
mov
iret
dec
xor
xchg
shlb
leave
call
mov
add
lcall
sahf
pop
call
out
xor
outsl
or
sbb
push
push
cmp
popf
cmpsb
fidivrl
inc
shlb
jg
push
idivb
pop
scas
or
mov
cmp
arpl
or
pop
ret
icebp
jmp
jbe
push
icebp
sbb
cmp
add
cli
test
mov
incl
ret
dec
adc
call
fs
cmp
mov
pop
inc
out
mov
sub
lock
in
xchg
out
addr16
push
mov
out
mov
jmp
int3
arpl
mov
roll
ljmp
scas
gs
mov
mov
or
sub
jle
xchg
aad
lcall
and
sub
lretw
sbb
add
int3
mov
pop
xor
pushl
mov
mov
lock
xor
clc
test
int3
lods
gs
in
imul
int
mov
xor
pop
fstpl
inc
test
and
jle
cmp
sbb
push
leave
add
and
dec
outsb
ljmp
inc
ss
out
xchg
pop
in
addr16
fmul
add
lcall
int3
sbb
pop
mov
hlt
imul
lcall
negl
jae
pop
jo
jb
mov
lret
xchg
jp
scas
int
psrld
fsubl
dec
call
popa
xchg
stos
mov
mov
cmp
or
shlb
filds
int3
mov
decl
cmp
pusha
or
pop
fs
cmp
sti
pop
jne
ljmp
or
inc
ljmp
xor
shl
jb
aam
xor
and
sub
mov
fiadds
test
jg
aad
jle,pt
mov
mov
mov
mov
rolb
sahf
adc
insb
bound
xor
dec
pop
mov
sti
incb
dec
xlat
sub
insb
mov
pushl
jo
sbb
xor
cmp
out
pop
fcoms
fnstsw
adc
pop
mov
ljmp
addl
push
jecxz
outsb
pusha
nop
jnp
fsubs
ret
ret
dec
test
test
mov
imul
mov
and
cli
aad
inc
lods
mov
cmp
cmp
ljmp
inc
or
aaa
inc
pop
cmp
jno
jmp
clc
sbb
adc
repnz
int
mov
call
push
gs
aam
daa
cmp
aas
pop
out
cmp
movb
bound
sub
sbb
clc
pushl
xchg
lahf
int
nop
xor
sub
cmp
stc
adc
jmp
xchg
jns
mov
sbb
jmp
mov
pop
cmp
sub
inc
rorb
fcomip
pushl
inc
jg
mov
js
call
stos
iret
inc
les
call
out
fistpl
test
add
jae
cmp
jg
dec
mov
push
adc
ror
rcrl
sahf
sarb
cmp
inc
test
cmc
and
decl
mov
xor
addr16
into
test
into
pop
pop
xchg
or
pop
jg
clc
incl
icebp
iret
inc
cld
sub
test
das
mov
lahf
cltd
fst
dec
ljmp
pop
lock
mov
call
sahf
push
jg
cmp
or
mov
dec
out
imul
adc
rcrl
loop
test
dec
fistpll
pop
jle
int3
movsl
std
lcall
fwait
mov
dec
cltd
mov
pushf
xchg
jl
mov
lret
adc
jb
addr16
std
dec
stos
mov
cs
outsl
lods
adc
mov
mulb
insb
aaa
dec
outsl
rcr
pushl
rcr
adc
test
lret
in
push
aad
jne
sub
outsb
cld
jae
incl
xchg
push
adc
out
aas
aas
out
daa
test
push
loop
bnd
int3
pop
data16
jg
out
das
adcl
testb
int3
pop
and
mov
jle
mov
xor
lea
dec
push
lcall
jmp
pause
xchg
sbb
push
push
clc
cs
cmc
test
xor
lcall
jecxz
inc
cmp
xor
mov
dec
mov
pop
loopne
xchg
pop
cli
mov
mov
xor
sahf
aad
xchg
in
rclb
sub
jmp
mov
in
in
push
inc
sbb
push
decl
enter
incl
in
sbb
sub
in
test
ret
pop
jge
or
fdecstp
and
add
repz
cmpsl
lods
popa
pop
pusha
pop
fcomp
jg
mov
aas
rorl
jecxz
es
dec
inc
inc
add
jne
inc
fnstsw
loope
or
pushf
cmpb
mov
repnz
stos
fadds
lods
stos
adc
adc
pushl
mov
ds
inc
in
fiaddl
lock
mov
mov
aas
imul
jmp
push
mov
mov
mov
out
divps
je
mov
int3
lahf
push
ss
dec
es
shrl
mov
sbb
xor
sahf
jbe
rcrb
mov
jmp
lcall
ds
shrb
mov
es
dec
push
lods
in
xchg
inc
push
sbb
call
nop
clc
test
shrb
out
pop
and
mov
mov
xchg
dec
dec
ljmp
jge
cmp
mov
in
pop
jae
in
cmp
les
adc
into
xor
lcall
int
shl
inc
out
mov
sub
add
push
loopne
mov
orl
into
adc
inc
adc
pushl
ljmp
rorl
movsl
scas
insb
inc
inc
clc
xchg
cmp
ljmp
adc
call
pop
loope
imul
mov
push
push
orl
dec
hlt
cmpsb
sahf
xchg
fst
fdivs
xchg
adc
mov
ss
adc
mov
das
sub
incl
jp
jecxz
pop
pop
fwait
push
or
push
aaa
imull
test
jnp
repz
cmp
add
sti
mov
cmpsb
pop
lods
out
testl
ds
xor
ds
mov
ficoms
fdivr
cmpsb
xor
out
push
jae
sub
push
fiadds
cwtl
inc
pop
icebp
push
sti
push
andb
push
sbb
cmp
fcoml
xchg
sahf
pop
stc
mov
or
nop
xchg
xchg
ds
mov
call
ljmp
rcrl
fld
mov
mov
jecxz
inc
pop
je
outsl
jge
adc
lods
enter
incl
or
test
xchg
pop
adc
sub
outsb
fsubrs
xchg
sti
mov
incl
mov
js
cmc
xor
or
mov
pop
cli
push
enter
sar
lcall
stos
test
stos
je
int3
mov
or
sbb
std
or
jae
ds
int
and
decl
je
out
ss
loope,pt
enter
xor
or
mov
popa
cld
scas
xor
fs
xor
pop
jnp
cmp
popf
movsb
cmp
flds
add
lret
jns
sbb
dec
mov
or
sbb
jbe
cmp
xchg
mov
jne
xchg
push
cli
repnz
mov
sbbl
aas
out
lcall
mov
loopne
enter
cmp
cmp
lcall
or
cmp
ljmp
jbe
jl
mov
fisubl
xlat
lea
addr16
shl
adc
mov
aam
pop
xor
out
xor
jmp
fldcw
jns
and
aam
dec
ljmp
jge
sub
push
push
ljmp
xchg
int
notb
cmp
mov
inc
xchg
lods
sub
jmp
cmpsb
sbb
add
in
adc
pop
testl
lods
xchg
aad
lahf
xor
fistpll
sub
mov
and
jp
xchg
in
aaa
pusha
mov
cmp
xchg
test
stos
jmp
ret
xchg
shrl
mov
push
fistl
mov
cmp
mov
push
popa
cmpsb
adcb
pushl
dec
lcall
xor
popa
incl
fwait
xchg
testb
out
das
cld
mov
mov
cli
push
test
insl
mov
mov
mov
dec
xchg
xlat
mov
sub
xchg
test
cmp
jae
lret
leave
out
pushl
aam
aad
add
bound
shll
jae
push
push
push
mov
push
es
call
cmpsl
and
add
das
jo
cmc
cmpsl
sahf
mov
call
iret
or
sub
xlat
out
cli
jnp
push
xchg
pop
imul
outsb
mov
paddusw
and
rorl
lods
ljmp
cs
scas
jb
out
repz
decl
lock
loopne
mov
js
inc
test
cli
pop
pop
lret
pop
imull
ljmp
add
inc
aas
mov
pop
add
mov
or
pop
jle
sbb
mov
sub
add
xchg
ja
push
cmova
sbb
jg
dec
push
stos
ret
add
test
in
movsb
ljmp
push
and
aam
xchg
mov
iret
dec
jecxz
xor
dec
adc
and
add
mov
shll
xchg
jne,pt
dec
or
lods
daa
loope
lret
out
lods
aaa
jmp
popl
pop
dec
test
dec
incb
and
aas
sub
sbb
or
sarl
cmpsl
subb
add
fstpt
into
add
cwtl
rclb
xor
sub
imul
pop
xchg
neg
lea
sub
cs
popf
lcall
dec
pushf
sti
pop
rcrl
cmp
xor
xchg
ffreep
lfs
cmc
dec
or
test
js
add
repz
insb
mov
cmc
and
imul
cmpb
lahf
jns
add
sub
mov
inc
int3
sbb
push
push
outsb
xchg
mov
into
sar
ret
mov
sbbb
push
mov
loopne
repnz
mov
orb
daa
lret
lcall
adc
gs
jle
clc
or
fsubl
arpl
adc
adcb
mov
sar
sarw
dec
dec
add
mov
notl
add
cwtl
cmp
mov
sbb
mov
scas
and
adc
es
jo
sbb
lcall
icebp
hlt
loopne
add
sbb
je
test
mov
sbb
movsb
iret
test
daa
scas
mov
push
sar
das
and
mov
add
out
mov
sbb
push
mov
jmp
aas
andb
neg
sbb
add
loop
clc
pop
lock
xlat
inc
add
mov
pop
add
jecxz
lret
in
in
cli
add
pop
orl
test
adc
in
sub
movsl
in
clc
xor
cwtl
mov
std
lcall
fiadds
add
and
jmp
ror
daa
clc
decl
outsb
inc
iret
dec
mov
mov
jo
ret
in
push
pushl
add
xor
jl
out
push
mov
xchg
push
add
jno
cld
scas
js
dec
jp
mov
xor
xchg
movsl
cli
cs
add
sbb
jp
add
pushf
and
pop
inc
xchg
mov
pushf
dec
ret
add
fldcw
loopne
or
xor
repnz
fs
mov
mov
jmp
lods
push
xchg
pop
adcl
push
xlat
sub
ja
add
sub
push
popf
jecxz
popf
pop
clc
push
add
add
and
sub
test
adc
xor
das
sbb
xor
hlt
ss
decl
sbb
gs
push
idiv
or
out
mov
inc
push
inc
sub
mov
sbb
scas
jecxz
add
leave
clc
je
adc
out
rcr
sub
roll
inc
loope
aaa
push
leave
movl
xchg
sahf
cmc
leave
mov
xchg
mov
xchg
and
pop
ja
cli
mov
and
cmp
insb
add
lock
mov
mov
int
or
push
lcall
ret
pop
test
lods
jp
sbb
ljmp
xor
sti
insb
sub
jge
push
cmp
jb
adc
mov
adc
xchg
and
or
cmp
icebp
or
lcall
mov
into
data16
popa
xchg
les
and
xor
jg
and
test
inc
stc
inc
mov
cli
pop
sbb
and
xor
adc
mov
xor
nop
xor
nop
pushl
decl
andl
lods
in
pop
jg
insb
inc
sahf
int3
inc
xor
and
jp
push
mov
hlt
and
mov
loop
dec
mov
arpl
dec
inc
arpl
fbstp
mov
negb
mov
pusha
add
popf
dec
ret
js
xchg
mov
add
imul
scas
mov
repz
jg
dec
xchg
jb
mov
daa
mov
dec
mov
inc
std
push
dec
adcb
pop
push
mov
cmpsb
enter
cmc
popl
adc
inc
mov
add
repz
cli
adc
das
cmpl
jmp
adc
icebp
enter
pop
adc
push
lret
out
stc
nop
xor
and
pushl
decl
pop
push
lea
xor
call
cmp
out
frstor
push
mov
pop
cmp
sub
and
sub
ret
add
mov
jmp
and
mov
lret
shlb
adc
inc
loope
fisubs
pop
lahf
push
cld
pop
fildl
cmp
adc
xor
add
loop
push
or
hlt
inc
xchg
ljmp
jbe
dec
push
xchg
push
cs
fstl
loopne
mov
mov
xor
sub
repnz
imul
push
das
inc
incb
jmp
outsl
pusha
movl
loopne
loopne
jle
sbb
jmp
xlat
inc
jns
sub
int3
pop
pop
adc
add
and
loopne
pop
repnz
inc
mov
addr16
sub
sahf
ret
adc
push
cmp
fidivl
lock
out
pop
add
push
adc
push
roll
insb
pop
cs
lods
cmp
or
lret
lret
pop
add
and
mov
mov
fdiv
jno
addr16
mov
inc
xorl
sub
inc
xor
scas
mov
dec
push
inc
sub
inc
and
jg
sub
mov
decl
frstor
fistpl
hlt
pop
mov
ja
mov
pop
sub
jg
in
imul
cltd
xchg
lds
add
pusha
jnp
fcoml
jo
decl
rolb
outsb
pop
test
lods
add
ds
pushl
int
and
inc
das
fs
add
sbb
or
jb
mov
inc
adc
in
or
shrb
adc
icebp
jmp
test
lahf
out
test
jle
es
rcrl
xchg
cwtl
push
xor
iret
add
xor
out
cmp
jne
jecxz
pop
or
mov
outsl
pop
icebp
cmp
add
pop
push
ret
jmp
jnp
loopne
cmp
mov
lock
or
fsubrp
xchg
and
and
rorb
xor
or
dec
addl
mov
es
nop
add
cmp
mov
or
outsb
inc
jmp
mov
add
pushf
sbb
mov
dec
xchg
or
imul
imul
jg
lahf
add
arpl
or
dec
rcrl
pop
or
dec
push
stc
clc
inc
pop
or
xchg
inc
mov
mov
dec
push
pop
inc
push
cmpsl
aaa
dec
adc
div
mov
xchg
and
decl
fisubrl
in
jge
add
xor
xor
je
call
cltd
pop
sbb
push
and
sub
iret
and
pushl
in
jp
jb
je,pt
in
adc
pop
enter
pushf
jns
rcrb
movsb
lock
mov
jmp
movsb
mov
sahf
adc
mov
dec
push
mov
shrb
ljmp
aas
roll
jecxz
and
mov
sar
aas
push
stos
xchg
or
cmp
dec
adcb
add
ret
fs
mov
es
add
xor
mov
cli
dec
sarl
mov
jle
mov
sbb
std
add
fwait
add
jbe
ljmp
clc
aam
frstor
mov
adc
clc
into
pop
xor
or
mov
pop
xor
mov
adc
cmp
jmp
arpl
int
xchg
add
inc
push
scas
dec
mov
ljmp
pusha
push
lret
sbb
add
push
nop
jns
test
xchg
xchg
loopne
mov
add
les
dec
lret
and
inc
int
jg
out
or
das
test
inc
push
adc
and
pop
es
orb
loopne
aaa
or
push
xor
pusha
and
nop
jg
lcall
enter
sub
mov
dec
pop
mov
xchg
out
les
fwait
pop
loopne
cmp
dec
lds
xor
pop
addr16
in
cli
mov
mov
or
mov
rcrl
mov
ficoms
std
jg
jmp
pop
pop
pop
rsm
mov
xor
inc
aad
mov
stos
and
push
mov
ds
ljmp
clc
dec
imul
pop
fcoms
add
mov
mov
pop
fldt
add
out
sbb
bound
add
outsb
mov
stc
lcall
push
push
in
push
mov
icebp
xlat
mov
pop
icebp
jg
and
mov
pop
sbb
push
addb
lcall
icebp
je
adc
pop
fistps
jecxz
rcll
pop
ja
test
sub
xor
test
xchg
xlat
pop
push
in
cmpsl
dec
add
fs
enter
lahf
mov
cld
add
pop
mov
inc
fnstsw
jnp
mov
push
jecxz
lea
inc
call
or
mov
sbb
or
sub
stc
mov
fisubs
fs
jl
in
out
add
je
fimuls
add
pushl
fidivrl
stos
aas
add
iret
xchg
sbb
sub
fistl
jp
add
aas
mov
clc
js
jg
jbe
sub
add
or
fs
inc
and
decl
mov
add
hlt
fisttps
nop
and
mov
leave
insb
mov
stc
sub
addb
mov
in
mov
add
dec
and
jo
mov
cmp
pusha
push
pop
lcall
jle
add
adc
cmp
xchg
add
ljmp
and
or
dec
cltd
xchg
jecxz
pop
rcrb
scas
and
mov
pop
jl
aas
cmp
sub
sbb
xor
imul
inc
add
aas
inc
push
jg
adc
push
push
push
adc
notl
cs
lea
addl
xchg
aad
mov
stos
ja
popf
fistl
inc
mov
outsb
hlt
or
mov
mov
lahf
lret
mov
add
adc
leave
inc
test
fiadds
in
adc
cmp
es
jns
inc
out
cs
into
repz
scas
sbb
fisubrs
test
lret
mov
inc
push
mov
inc
dec
push
mov
add
add
loope
xchg
mov
mov
test
cmp
push
repz
mov
sti
sbb
mov
test
cs
mov
push
add
incl
sbb
movsl
pop
adc
inc
push
xor
bound
pushf
dec
jmp
and
adc
nop
add
xchg
xor
les
sbb
lds
mov
inc
xor
and
and
cmpsl
shrb
cli
xor
lahf
sub
mov
je
jne
sbb
sbb
fdivr
mov
adc
xchg
out
xor
add
jp
xchg
pop
in
cmpsb
bound
xlat
adc
mov
int
loope
lock
push
add
std
jg
pop
cmc
mov
in
je
jae
adc
xchg
cmp
idiv
and
sarb
inc
std
and
pop
stc
jg
scas
arpl
sbb
out
pop
cli
cld
out
add
out
fs
out
pop
pop
pop
out
cltd
imul
jge
mov
or
inc
outsb
adc
repnz
or
mov
movb
incl
es
pusha
out
pusha
or
hlt
aas
loopne
es
inc
xchg
decl
pop
data16
jge
inc
dec
popf
test
adc
add
push
pop
pop
mov
out
leave
jp
mov
mov
fcomip
adc
mov
cld
addl
jo
andb
test
or
incl
add
inc
sbb
sub
fwait
int3
adc
stos
cmpsl
ljmp
xchg
cmpb
cmpsb
movsl
into
pop
cmp
pop
mov
jecxz
jae
decl
lahf
cmp
fdivr
outsl
test
jmp
arpl
xor
dec
pop
mov
sub
test
xor
inc
ss
inc
add
pop
fisubs
test
fld
incl
or
mov
imul
adc
push
and
add
add
lcall
and
loope
stos
mov
ljmp
xor
pop
dec
test
dec
cmc
fists
test
test
add
mov
or
cmpsb
out
popa
popa
fstl
das
sub
in
cli
mov
inc
stc
fcoms
inc
stos
ret
repz
ljmp
std
fwait
pushl
push
incw
imul
xor
xchg
out
and
or
or
les
decb
sub
xchg
and
repnz
lock
and
icebp
and
mov
sub
sub
leave
aas
add
movsb
push
mov
cmp
cmpsb
mov
push
call
fiadds
pop
xor
inc
pop
cli
filds
lods
xor
mov
xchg
call
inc
pushf
jb
or
and
and
adc
add
pop
dec
loopne
jp
adc
xchg
fwait
xchg
and
icebp
mov
adcl
adc
jmp
push
testb
mov
add
ljmp
dec
jbe
cld
mov
push
cmc
test
mov
loop
add
rorl
cmp
ljmp
and
ficompl
xchg
nop
imul
ljmp
push
call
cmpl
add
ja
lods
or
sbb
decl
xor
mov
adc
add
hlt
shlb
jp
mul
sbb
dec
mov
lds
in
iret
mov
cmc
fwait
insl
movb
data16
jp
push
xchg
cld
pop
ficoml
mov
mov
lcall
dec
pusha
jge
dec
pusha
xchg
xchg
cmp
mov
inc
jge
add
jmp
cmp
inc
mov
call
push
push
cwtl
fnstsw
iret
fcompl
mov
lahf
and
sbb
das
inc
incl
mov
sbb
pop
sbb
enter
rcrb
nop
fisubs
test
mov
xlat
cmc
pushf
xor
scas
cmpsl
or
lret
pushf
xchg
xor
inc
xor
pop
je
inc
int3
xor
mov
jp
jle
and
bound
push
dec
inc
xor
pop
jg
mov
ss
xlat
pushf
jecxz
scas
jmp
xchg
cld
adc
decl
test
inc
mov
aaa
call
outsb
inc
dec
call
or
mov
ret
addl
lahf
add
adc
or
sub
fldl
sbb
jp
adc
add
aam
xor
popf
imul
jge
pop
jg
push
jecxz
movsl
enter
fidivs
cmpsb
and
pushl
dec
test
jb
pushf
and
push
jg
and
mov
push
lcall
les
mov
and
sbb
mov
inc
push
or
sub
jp
add
dec
jno
mov
jp
sbb
outsb
loop
testb
sub
or
in
call
loope
sbb
sbb
cmpsb
xchg
and
xor
int3
dec
imul
pop
and
and
test
add
add
mov
ret
inc
ret
enter
jo
adc
or
popf
scas
and
inc
jecxz
mov
add
or
nop
aad
push
sub
xchg
movsb
xor
push
or
push
arpl
mov
das
sti
pop
stos
inc
test
out
jne
test
pop
enter
pop
cmp
sti
fidivl
or
sbbb
sub
loop
jmp
xchg
jb
mov
cmc
jl
insl
das
sub
bound
shll
outsb
shlb
mov
xorl
mov
lock
add
clc
cltd
pop
sbb
jo
std
inc
mov
insb
lret
cld
add
dec
jg
push
push
sarb
insb
sbb
ds
loope
cmp
dec
test
add
sbb
adc
loopne
cwtl
cmp
aam
xor
lods
pand
leave
shrl
jmp
pop
xor
jne
pop
sbbb
or
push
dec
movsl
call
in
and
popa
mov
scas
testb
pop
add
scas
in
rcrb
dec
cs
inc
add
dec
ds
or
mov
jno
dec
pop
mov
add
lods
cmp
sbb
es
insb
xchg
js
rol
adc
scas
xor
in
fimuls
push
mov
xor
xor
sbb
aas
xor
mov
xor
ret
subl
shll
iret
inc
shlb
in
add
fldl
pushf
or
dec
not
fnstenv
ds
sti
add
dec
addb
pop
stc
mov
mov
pop
notb
xchg
js
jg
xor
pop
and
dec
and
and
mov
inc
pop
in
stos
cmpsl
std
mov
jnp
arpl
dec
sub
lahf
xchg
ds
loopne
jns
inc
lahf
jmp
jmp
push
inc
stc
mov
das
mov
mov
bound
movsl
mov
pusha
lods
push
push
adc
cld
loopne
pop
cld
push
jo
movsb
add
mov
dec
scas
into
add
imul
call
push
es
push
dec
mov
mov
xchg
repz
sbb
lea
arpl
and
xor
movsl
mov
and
hlt
jmp
test
cmp
cmp
insl
aam
inc
pop
dec
mov
movsb
fbstp
sbb
cwtl
movsb
fs
sbb
outsb
mov
test
popw
adcb
xchg
push
mov
loop
inc
inc
push
push
xor
cld
pop
xchg
rol
sub
insl
sub
stos
cld
xchg
fsubs
jl
lods
sub
cmp
aad
jecxz
mov
loopne
mov
imul
sahf
fcomip
lcall
leave
orb
dec
aam
testl
mov
cli
push
or
mov
out
shl
addr16
stc
xchg
sub
pmaddwd
rclb
les
xchg
or
mov
push
lcall
decl
adc
popa
pop
insl
repnz
or
push
scas
pop
adc
or
dec
or
sti
mov
inc
pop
jne
cmp
sti
out
pop
or
das
pop
pushf
sar
out
lea
fwait
dec
std
fdivrp
fmul
notb
sub
adc
les
jmp
scas
or
adc
daa
adc
pop
ds
xchg
fstp
jnp
add
push
pop
adc
sbb
fyl2xp1
dec
ljmp
push
xorb
xchg
adc
dec
pop
jl
mov
nop
add
lods
adc
jmp
pop
test
fs
pop
jnp
fists
jg
cmpsl
cmpsb
xchg
nop
mov
pop
call
fsubp
in
dec
mov
sub
push
push
and
and
xlat
aas
std
filds
call
mov
adc
movsl
je
pop
inc
js
mov
cwtl
dec
pop
test
std
stos
out
jmp
inc
sub
bound
and
mov
jg
rcll
test
push
jge
cli
pop
hlt
mulb
mov
lcall
loopne
stc
jmp
sbb
adc
rcr
popa
shl
mov
insb
hlt
pop
pop
add
and
cltd
pushf
mov
mov
pushf
add
shl
or
mov
call
cld
lret
out
clc
jno
and
jb
push
jns
dec
fwait
push
addl
add
cmpsb
xlat
ljmp
mov
pop
pusha
xor
dec
sar
cmp
adc
push
push
cltd
in
fdivs
mov
adc
cwtl
jo
sub
pusha
popf
ret
sub
incl
cltd
dec
push
mov
dec
sti
sub
xor
push
jnp
cld
fisttps
rcll
push
sbbb
mov
mov
add
lret
js
sub
xor
mov
addb
lret
xchg
and
xlat
cmp
scas
cld
push
pop
add
mov
and
or
mov
push
stc
mov
mov
inc
and
mov
inc
mov
pop
dec
or
lea
fsubr
andl
xchg
xchg
fbld
push
add
out
js
sub
fistl
push
loope
adc
and
decl
lock
orb
cmp
inc
pusha
push
std
sbb
pushl
xorl
inc
cld
mov
cmp
mov
xlat
mov
mov
jmp
fucomp
decb
movsl
gs
sar
repz
mov
mov
ret
jo
sahf
jp
test
pop
mov
std
fbld
push
xor
enter
sbb
sbb
jbe
lahf
hlt
mov
daa
sbb
int
movsl
adc
jmp
mov
fwait
push
lds
sub
add
dec
xor
test
push
fistpll
movsl
add
mov
or
lret
cmc
add
xchg
lock
push
js
les
add
loope
les
push
xorl
sbb
add
scas
cmp
fdivr
rcr
mov
mov
lods
cs
fnstcw
decl
sbb
je
test
dec
fstl
sbb
gs
xor
mov
mov
xchg
movsl
mov
rcll
popf
jl
push
jg
mov
or
cmp
lea
push
and
cwtl
xchg
mov
inc
cmp
cmp
jg
mov
bound
lcall
push
mov
sub
push
add
mov
ljmp
lock
fsubs
sub
push
pusha
add
inc
inc
fsts
int3
cltd
inc
xchg
aas
repnz
adc
and
and
in
movsb
add
pop
jo
icebp
push
mov
imul
js
xchg
nop
push
add
inc
pop
pop
imul
pop
sbb
inc
jo
sahf
adc
das
cmpsb
xchg
sbb
ret
sub
add
out
adc
clc
jmp
je
aad
movsl
push
jecxz
ja
mov
sub
roll
bound
incl
or
adc
and
jg
inc
loopne
cwtl
and
mov
adc
sub
lock
call
daa
lods
sbb
xor
push
addb
add
fisttps
adc
inc
xchg
pushf
pop
mov
jl
push
mov
mov
sbb
sbb
jg
sub
repz
jb
push
leave
adc
jnp
and
es
mov
sbb
fbstp
mov
movsb
ror
lods
mov
outsl
cmp
decl
fdivl
xchg
pop
jle
jp
jge
cmpsb
lret
scas
adc
push
xchg
jbe
cli
fidivl
bound
test
jecxz
add
push
pop
xlat
rorl
cmp
jg
cmp
cli
jg
outsl
add
mov
dec
mov
pushl
loop
movsb
imul
cmp
lret
jo
nop
enter
lcall
cli
mov
jno
sbb
xor
pushf
mov
xor
incl
gs
jle
and
adc
xchg
xchg
mov
dec
aam
jecxz
mov
mov
mov
jo
call
rolb
lds
es
jno
mov
mov
add
inc
es
icebp
mov
inc
shl
dec
lcall
mov
cmp
mov
adc
outsl
xor
mov
sub
repnz
movsb
sbb
ja
adc
loopne
inc
pop
push
pop
mov
mov
and
sar
ljmp
lahf
je
add
dec
mov
add
mov
inc
cmp
pop
bound
fwait
jb
inc
adc
ljmp
les
xchg
leave
sbb
dec
push
mov
ja
shlb
and
dec
sbbb
lods
sub
push
push
lock
mov
and
mov
push
popa
loopne
or
fildl
lock
enter
adc
jle
push
mov
add
mov
and
dec
pop
xlat
out
add
shrl
inc
adcb
mov
neg
pusha
popa
inc
enter
dec
mov
cmc
incl
inc
and
inc
jp
in
pop
sbbb
and
in
lcall
lret
loopne
sub
xchg
fidivs
sub
sbb
shrl
dec
sar
push
push
push
test
jmp
sbb
stos
lods
test
mov
adc
push
or
ss
fimull
jle
les
mov
sbb
cs
lods
and
lcall
sub
push
inc
xchg
xor
sub
fbstp
sbb
add
addr16
cmp
mov
and
mov
pop
or
adc
std
mov
shlb
dec
pop
jmp
mov
dec
cmp
dec
icebp
adc
repz
out
mov
inc
cmp
ret
and
cmp
cmpsb
or
inc
ja
adc
mov
or
xchg
or
jecxz
icebp
rclb
decb
fildll
lea
ret
mov
mov
adc
mov
nop
push
cmp
rep
mov
adc
xor
mov
lret
xor
dec
xlat
cmp
sbb
jg
outsl
leave
dec
sbb
jae
ret
cmp
cmp
lahf
mov
jl
cwtl
scas
xchg
adc
inc
pop
lret
out
clc
jg
cmp
mov
sub
xlat
pop
in
pusha
out
data16
and
jns
sar
jmp
pop
mov
pop
dec
and
stos
cmpsb
sub
jl
add
dec
mov
dec
mov
or
add
add
lea
lods
adcl
mov
test
lcall
push
cltd
stos
sbb
inc
test
test
sarb
int
rolb
xor
lcall
pushl
mov
sahf
movsb
pop
xchg
inc
adc
and
loopne
and
push
out
clc
movsb
add
mov
mov
xchg
and
std
aas
aam
hlt
add
push
fimull
push
andb
int
adc
pop
imulb
sbb
push
movsb
xor
inc
stc
aas
jo
insb
lcall
xchg
fcomps
ljmp
test
das
inc
andl
pop
in
and
dec
ret
incl
jl
pop
repnz
adc
imul
scas
or
xor
call
pop
push
cs
leave
rolb
add
das
rcl
testb
inc
cwtl
ds
std
or
rclb
idiv
pushf
nop
cmc
cmp
sbb
insb
fs
mov
sub
adc
jge
or
outsl
fdivrl
xchg
cli
cmp
lods
aam
add
andl
fmul
push
mov
cld
xchg
mov
xorb
push
repnz
sbb
loopne
out
lahf
pop
and
into
sub
mov
dec
scas
repz
decl
notl
add
xlat
inc
sahf
andb
mov
xor
lcall
mov
rorb
inc
jns
pop
call
jae
leave
sbb
jo
movsb
jecxz
pop
ffreep
outsl
sub
add
and
repz
dec
ficomps
mov
mov
cmp
js
loop
iret
pop
nop
pop
loopne
ret
jle
scas
lret
popa
or
ljmp
pushl
add
jmp
pop
imul
js
es
cmp
xor
and
push
sar
push
jecxz
aaa
inc
jge
adc
mov
test
xchg
ret
decl
leave
pusha
mov
rcll
push
add
and
xor
fisubl
sub
andb
sub
cltd
add
add
jg
push
inc
or
shlb
mov
bound
xchg
test
mov
insb
and
negb
xchg
or
mov
jecxz
aas
pop
add
mov
jecxz
loope
sbb
fs
movsl
dec
aaa
mov
mov
jg
lock
nop
leave
enter
scas
repz
clc
mov
into
fs
js
js
mov
dec
sub
pushf
idiv
adc
pushf
test
inc
stos
cmp
xchg
icebp
out
or
sub
push
lods
cmp
cmp
call
jge
jle
decl
incl
ljmp
repnz
or
js
mov
mov
add
sub
lods
adc
xor
adc
outsl
and
sub
mov
sarb
out
mov
cmc
push
mov
push
jg
test
aaa
push
cld
dec
test
push
add
nop
adc
dec
jmp
scas
push
mov
inc
dec
mov
sahf
into
aas
test
outsl
fwait
adc
bound
ret
push
mov
xor
sub
lret
xchg
rorb
inc
mov
and
mov
mov
decl
in
jns
or
das
cmc
fwait
test
popa
dec
mov
xor
outsl
add
sahf
xchg
push
test
pop
cltd
mov
pop
movsb
cld
das
mov
mov
jecxz
ds
inc
outsl
inc
aam
daa
fstl
jb
in
outsb
roll
xchg
inc
or
pop
inc
or
lea
add
cs
clc
ss
test
mov
dec
bnd
pop
jecxz
test
decl
sbbl
fiaddl
dec
sub
jecxz
movsl
dec
xor
add
hlt
jb
mov
inc
icebp
xor
or
add
cs
addr16
scas
add
hlt
fidivrs
cmp
dec
pop
mov
mov
addr16
cmovp
fisttps
jb
cwtl
push
inc
cmpl
aas
ret
add
sbb
outsb
sti
shll
sub
jecxz
pop
inc
in
jl
bound
adc
mov
inc
inc
jo
mov
pop
pop
cmc
add
fscale
pop
pop
push
clc
and
scas
subb
cmp
bound
fistl
dec
subb
stc
mov
xchg
adc
call
clc
fldenv
imul
pop
icebp
inc
xor
push
divb
pop
pop
cmc
mov
jle
sub
lds
loop
add
mov
jecxz
icebp
xchg
mov
push
xor
jg
cmp
push
enter
push
stc
mov
or
lods
mov
lcall
pop
jno
jmp
sub
jg
jl
loop
ss
pop
lahf
sub
and
call
jge
lcall
sti
xchg
adc
js
and
and
cltd
cltd
out
push
lods
or
test
or
decl
jecxz
movsl
adc
jnp
int3
int3
mov
dec
ja
mov
add
cmp
mov
pop
stos
pop
lods
push
xchg
sub
xchg
loop
add
jg
add
push
mov
mov
xchg
cmp
sub
enter
fwait
mov
mov
add
pushl
call
lds
stc
pushf
jg
pop
jp
loope
or
cltd
add
std
incl
and
mov
js
pop
out
pop
cmp
adc
inc
ret
int3
or
fnstcw
mov
clc
fisttps
mov
dec
dec
jecxz
leave
mov
aas
pushl
ljmp
les
rolb
sbb
cld
add
or
jl,pn
mov
repz
pusha
cmp
xor
test
jmp
xchg
lock
inc
mov
jnp
jge
neg
addb
pushl
cld
icebp
or
mov
mov
cld
pop
inc
mov
and
mov
outsb
sub
mov
arpl
add
sub
cmp
cmp
fisubs
jmp
pusha
mov
vunpcklps
cwtl
cmp
insb
stos
mov
std
aaa
cld
jmp
inc
aam
dec
pop
add
sub
dec
mov
and
scas
pushl
and
cld
stc
push
outsl
mov
jge
jge
push
ss
or
or
sahf
jae
xchg
adc
xor
cmp
in
add
cmc
call
loope
xchg
or
add
pop
test
fistps
adc
jmp
mov
mov
cmp
adc
adc
mov
add
cmp
sub
add
add
inc
test
cltd
fstpt
outsb
mov
pop
xor
arpl
popf
out
xor
call
xchg
dec
lcall
out
aam
sub
cmp
ss
mov
or
push
cmp
cli
mov
inc
fldenv
cmc
stos
dec
add
push
add
lock
ljmp
movb
test
dec
adc
ljmp
push
push
inc
or
inc
lods
and
into
arpl
sub
dec
cmpsb
or
push
or
dec
orb
inc
cmp
mov
push
mov
adc
out
sub
mov
cs
shlb
or
popf
test
aam
pop
aas
je
mov
jmp
cmp
push
dec
cmp
xchg
xchg
xor
push
sbb
add
inc
inc
sahf
nop
lds
or
cmc
mov
mov
pusha
aas
shll
mov
in
jmp
test
mov
ds
bound
pop
in
lea
inc
jns
decl
incl
xor
xor
bound
data16
xchg
jno
decl
fstp
mov
call
hlt
add
mov
jno
mov
fwait
jbe
mov
dec
sub
cmpsb
aad
ret
mov
cmp
inc
jmp
and
fwait
push
fbld
xchg
clc
mov
mov
ja
ja
add
movl
data16
sbb
cmpsl
mov
js
dec
adc
xchg
test
int3
call
xor
lods
mov
ljmp
loope
nop
and
adc
inc
movsb
negb
xchg
lock
push
xchg
test
adc
dec
cmp
fwait
xchg
mov
enter
and
mov
scas
xor
push
cmc
pop
mov
mov
and
mov
xchg
mov
xchg
lock
pushl
in
jno
in
inc
sar
pushl
and
mov
sbb
inc
nop
mov
pop
popa
orb
pop
cli
sbb
inc
push
es
arpl
jge
rcrl
or
subps
adc
nop
mov
mov
sti
sub
and
or
das
ljmp
mov
add
aaa
or
incl
xor
shll
mov
js
cmp
lcall
xchg
pop
insl
xchg
in
add
ret
jae
iret
dec
dec
pop
es
mov
cs
jge
add
push
aas
or
sub
test
cmp
xchg
nop
push
insl
bound
or
mov
lret
clc
push
jmp
dec
xor
jmp
add
sbb
jle
jmp
nop
inc
xor
mov
cli
or
sub
pop
test
cmp
incl
int3
repz
jp
data16
jmp
rolb
add
movd
push
add
es
push
pusha
adc
shlb
fs
adc
mov
push
adc
xchg
andb
gs
pushl
push
mov
mov
mov
xor
mov
mov
sub
add
hlt
mov
fdivr
dec
add
pop
ret
mov
push
push
or
into
cli
pushl
into
jo
shrl
out
das
mov
test
jo
out
adc
and
dec
jbe
and
jg
mov
jne
popa
jg
adc
xor
xchg
adc
dec
rcrb
add
adc
incb
idivb
stc
in
das
popf
loop
sbb
das
sub
xlat
pop
mov
lcall
xor
xor
mov
cwtl
inc
popf
popa
nop
arpl
fs
push
or
mov
add
adc
out
nop
sub
mov
mov
mov
sbb
inc
xor
and
ljmp
pop
pop
test
icebp
pushl
cmp
add
or
pop
push
insb
orl
mov
or
incl
lock
je
js
adc
and
mov
mov
add
in
or
fmulp
cli
nop
mov
add
sti
scas
clc
call
call
sbb
adc
xchg
jge
addr16
push
and
jg
sub
lret
add
add
imul
lea
and
lods
sbb
std
pop
ss
dec
fwait
in
insl
mov
push
sbb
pop
stos
call
sahf
jle
adc
dec
repnz
test
mov
pop
inc
idiv
jg
aaa
lret
push
jecxz
mov
add
or
call
cld
cmpsb
add
xchg
hlt
pop
xor
pop
push
pop
subl
sub
clc
test
push
inc
add
and
xor
mov
rorl
dec
cmpb
add
movl
mov
cld
pop
sbb
in
xchg
xchg
subl
adc
ljmp
stos
or
dec
loopne
cltd
mov
sub
xor
fbld
inc
adc
mov
push
mov
inc
inc
ljmp
pop
lock
xlat
mov
mov
jb
sub
or
jno
add
out
pop
mov
xchg
ja
or
cmp
jbe
pop
adc
test
add
rcrb
xchg
mov
lret
fdivl
es
loope
insl
cmp
xchg
shll
pusha
jbe
inc
xchg
cmp
lcall
test
ror
xchg
pushf
dec
and
or
mov
enter
mov
in
ljmp
in
cmc
mov
in
mov
inc
arpl
int3
mov
aaa
inc
push
or
incl
jl
test
xchg
push
xchg
iret
insb
aad
nop
loope
push
dec
dec
inc
add
push
clc
decl
jmp
roll
jge
inc
add
jno
cmp
fidivl
inc
outsb
cmp
test
xchg
popa
js
jbe
int
mov
mov
adc
and
cmp
dec
jmp
xor
add
cli
call
add
nop
xchg
add
dec
jo
xchg
jmp
decl
pushf
mov
push
fcmove
cmp
jo
mov
sbb
lock
lea
inc
mov
loop
mov
sbb
mov
and
stos
mov
rcrb
push
das
hlt
jnp
data16
fcoml
ret
and
out
ret
adc
or
and
lahf
in
inc
ljmp
ja
sub
dec
and
test
daa
cli
out
clc
imul
or
js
or
adcl
xchg
pop
xchg
lahf
or
pop
add
or
lods
jo
add
incl
and
add
push
lds
sbb
scas
mov
cltd
sbb
jmp
or
std
jo
cmc
enter
mov
or
sbb
mov
loopne
cmp
ljmp
pop
lock
icebp
mov
imul
rol
jl
test
jg
push
scas
fwait
dec
je
mov
add
xchg
sbb
add
movsl
xchg
ja
std
ja
shll
hlt
daa
test
into
pushf
push
test
scas
incl
out
dec
xchg
push
dec
int
incl
cld
outsl
lock
dec
mov
and
pop
xor
sub
fs
xchg
mov
outsl
incl
add
adc
and
and
jns
and
out
fisttpll
nop
mov
cmp
or
xchg
sub
aaa
mov
cmpsb
jns
sti
pop
or
fsubl
mov
pop
jp
mov
aaa
cmp
addr16
inc
shrb
pop
pushf
loopne
inc
loope
clc
jg
in
lcall
mov
xchg
loop
push
imul
cltd
fcomip
ljmp
cmp
sub
imul
jnp
xor
pcmpgtb
mov
add
mov
mov
adc
call
jecxz
mov
pop
ret
lcall
std
pop
aam
popa
ljmp
aaa
sub
sub
bound
xchg
ret
xchg
js
and
jle
sbb
mov
jg
sar
jp
add
pop
ja
cltd
mov
xchg
xchg
and
mov
dec
into
ret
icebp
push
cmp
add
dec
adc
in
test
mov
xor
mov
push
push
push
jecxz
decl
nop
mov
ja
xchg
add
js
in
or
xchg
mov
mov
pop
or
clc
ja
clc
and
sub
shll
cwtl
jg
test
adc
pushf
iret
jnp,pt
fstpt
dec
loop
nop
mov
inc
jl
scas
clc
ljmp
push
xorl
jmp
jo
mov
daa
xchg
fld
sbb
sub
inc
xor
lds
add
outsl
call
inc
pop
add
or
mov
push
test
jle
ret
dec
into
and
outsb
or
push
jmp
add
cmp
cwtl
sub
stos
sbbb
mov
bound
inc
testb
loopne
sar
mov
loope
dec
dec
aam
push
xor
test
scas
xlat
adc
outsb
jge
pop
std
fistps
imul
push
dec
mov
adc
mov
movsl
ret
aas
fcmovnb
mov
insb
arpl
test
dec
fidivs
adc
add
insb
popa
lret
add
mov
xchg
lods
sub
loop
mov
imul
and
gs
dec
pop
les
fildl
nop
test
cmpsb
test
decb
inc
imul
add
cmc
jne
test
cmp
lcall
sub
addr16
int
mov
ret
test
add
xor
dec
or
jp
jmp
loop
pop
xchg
jl
in
in
mov
cld
shl
frstor
popf
test
cmpsb
lcall
hlt
aaa
std
xchg
mov
inc
mov
and
xor
sbb
add
and
stos
pushf
and
add
scas
std
data16
dec
loopne
cmp
jno
fcompl
mov
imul
aam
out
add
aaa
xchg
jo
xchg
add
or
cld
arpl
imul
in
add
popa
fwait
sbb
and
outsl
dec
dec
and
sbb
or
daa
call
icebp
repz
jmp
loopne
xchg
adcl
push
mov
out
loopne
sbb
nop
dec
xchg
mov
sbb
popa
int3
sarb
pop
enter
or
outsl
addb
push
stos
stos
adc
or
decb
sub
sub
fistpll
addr16
call
mov
add
add
add
sbb
lcall
pop
movsl
pop
xchg
pop
mov
leave
clc
mov
ja
dec
cmp
inc
lods
popa
out
mov
and
xlat
inc
xor
ss
loop
sbb
arpl
std
xor
shr
clc
adc
push
lock
and
in
test
mov
jns
dec
xchg
xlat
out
pop
fwait
scas
xor
popa
fdivs
mov
jg
mov
inc
cmp
fs
inc
cs
movsl
pop
or
sbb
addr16
fcmovb
cmpb
and
lock
pop
add
jge
push
jle
outsb
loopne
inc
repz
mov
jno
cmpsl
cld
imul
out
jae
aam
aas
push
dec
std
mov
or
es
push
imul
mov
and
xadd
mov
aad
roll
push
call
mov
add
in
or
in
cwtl
subl
fisubrs
xor
jg
xchg
adc
mov
lahf
inc
sbb
dec
jl
enter
push
dec
adc
mov
mov
mov
mov
adc
lods
inc
xor
incl
js
mov
ss
sbb
jg
movsb
push
inc
fsubrl
rcrl
es
mov
sbb
negl
dec
pop
add
adc
cmpsl
mov
and
addr16
lods
jl
sub
add
or
rcr
cmp
cmp
mov
or
adcl
out
cld
pop
cli
lcall
adcb
mov
mov
popf
mov
add
push
movl
dec
mov
push
iret
inc
sbb
ret
pop
sub
mov
push
inc
in
scas
jnp
jno
pop
jo
nop
cmp
pop
xchg
dec
das
push
mov
xchg
xchg
and
sub
mov
repz
call
and
adc
dec
xchg
jle
xor
inc
mov
xchg
pop
sbb
xchg
push
pop
bound
push
xor
test
dec
sahf
push
ds
shl
in
les
sub
mull
and
sub
pop
jle
insb
in
test
sub
add
js
sub
pop
jg
or
enter
pushf
xor
loopne
inc
mov
mov
add
add
mov
mov
or
sbb
stos
push
icebp
aaa
cmp
rolb
adc
inc
jo
mov
std
cmp
jae
mov
sub
mov
cli
mov
xor
dec
cmc
inc
mov
jecxz
jmp
loopne,pn
shll
loopne
repz
js
fstpl
ss
xlat
ss
jg
ja
outsb
push
mov
imul
jl
rcll
or
pop
fildl
xchg
adc
push
sbb
lock
leave
aam
xchg
dec
pop
mov
es
mov
mov
mov
pop
lret
mov
ja
add
cmp
inc
ljmp
fwait
mov
icebp
mov
pop
enter
cwtl
mov
in
cmp
ret
pcmpeqd
push
ret
dec
mov
test
es
pop
loopne
adc
mov
sarl
jl
pop
lcall
sti
or
mov
add
adc
cmp
xchg
call
incl
add
dec
mov
and
rorl
addl
test
std
outsl
lock
lcall
or
or
add
and
and
or
inc
sub
cmp
cmp
push
ja
bound
stos
or
push
fstpt
xchg
stos
sbb
sub
sub
push
push
and
roll
push
dec
xchg
js
push
sbb
sbb
adc
jecxz
inc
aas
dec
add
inc
lret
and
jg
lret
inc
js
sbb
and
scas
decb
call
decl
cwtl
or
push
call
pop
xor
add
add
cmp
lcall
dec
imul
popa
push
bound
imul
sbbb
xor
jmp
movsb
mov
inc
add
dec
rclb
dec
mov
sub
mov
std
int3
data16
hlt
loop
push
ret
cmpsb
adc
enter
jg
mov
push
mov
adc
pop
xlat
xchg
or
bound
pop
push
les
adc
pop
shll
loopne
inc
add
lods
call
or
dec
lcall
inc
push
pop
push
xchg
xor
or
push
push
je
adcb
mov
cmp
fwait
sbb
mov
add
iret
jb
inc
loope
std
sub
ss
call
je
xchg
push
je
and
push
xchg
in
add
and
outsb
loopne
aad
xchg
add
mov
xor
pushf
inc
mov
sbbb
aas
push
popa
pop
dec
pusha
lea
mov
push
std
loop
test
cmpsl
xor
cs
testl
jg
sti
mov
xor
cmp
int3
sub
shlb
jnp
out
adcl
inc
adc
xchg
scas
repnz
mov
add
mov
cltd
shl
out
inc
mov
mov
lahf
push
sbb
cmp
clc
jg
test
sbb
js
sub
mov
aas
rolb
xchg
je
pop
inc
jo
xchg
repnz
sbb
ret
push
popa
add
imul
sub
and
ss
int3
fildl
xchg
jno
xchg
xchg
pop
inc
scas
clc
int
jecxz
aas
ret
push
cwtl
sub
cld
scas
cmove
scas
or
dec
out
adc
in
lock
mov
push
dec
pushf
stos
or
pop
sbbb
pushf
jmp
call
or
cld
jg
fidivl
shlb
push
enter
icebp
pop
test
or
jnp
mov
sub
bound
into
push
jge
test
idiv
jg
cmpb
pop
add
dec
lock
faddp
dec
shlb
mov
loop
inc
sbb
icebp
xchg
or
scas
adc
and
scas
aam
xlat
and
mov
cmp
sub
jg
push
push
push
push
adc
push
dec
or
pop
push
pslld
es
imul
mov
mov
fcomps
call
add
jl
mov
adc
into
hlt
dec
ud0
lcall
adc
adc
xchg
jnp
loope
and
adc
inc
sbb
stos
push
push
out
xchg
push
inc
test
inc
scas
push
sti
fcomip
repz
jge
adc
in
jo
xchg
push
das
dec
loop
fwait
jg
roll
rcr
adc
mov
or
ret
add
out
fwait
in
pop
aam
hlt
lret
push
iret
scas
insb
popa
ljmp
adc
dec
pusha
fwait
out
or
fs
lahf
or
pop
icebp
lea
xchg
popf
pop
pop
xchg
jb
dec
sarl
int3
adc
outsl
pop
and
xchg
out
lcall
inc
into
das
or
pop
imul
inc
out
rorb
pop
int3
repnz
and
enter
jmp
ljmp
mov
sub
ljmp
push
in
mov
or
pop
stos
sahf
mov
dec
pop
or
and
ljmp
cli
add
pop
pop
clc
push
jmp
pop
add
test
call
popa
je
cli
sub
and
pop
ret
mov
inc
sub
bound
scas
sbb
xchg
or
lcall
fnstcw
or
and
sbb
orb
mov
test
out
adc
add
test
enter
and
pop
call
jp
push
sub
pop
and
fildll
imul
sbb
xor
mov
inc
xor
xchg
push
std
gs
xchg
sti
add
popf
roll
fwait
dec
push
test
or
jg
mov
add
jmp
mov
push
jo
movsl
rcrb
lcall
out
pop
or
jne
test
icebp
mov
lret
cwtl
scas
clc
imul
movsb
inc
daa
mov
fsts
lcall
jg
bound
cld
fwait
push
inc
inc
ja
xorl
pop
std
inc
dec
loop
cmpsb
mov
cmovp
dec
dec
cld
mov
pmullw
bound
sbb
out
decb
lods
jns
faddl
jnp
fcmovnb
cmpsb
je
in
jl
mov
lahf
mov
js
jle
mov
adc
push
add
out
push
popa
mov
roll
inc
daa
cmp
mov
lock
popa
lods
dec
dec
jecxz
sbb
mov
insb
popf
push
lea
negb
call
loopne
bound
test
mov
dec
pop
and
cmp
mov
adc
sub
arpl
aaa
fidivl
pop
adc
scas
adc
sub
mov
sti
call
lret
adc
call
loop
cmpb
fisttpl
fs
mov
push
adc
cmc
xor
pop
xchg
call
imul
xor
cmp
inc
push
push
cmc
add
ljmp
ljmp
addb
add
add
cmp
and
cmpsl
dec
rcrb
out
sub
bound
add
pop
mov
mov
incl
pop
notl
pusha
mov
hlt
negb
sub
xchg
lea
ljmp
inc
add
lock
sub
movsb
test
xchg
jae
adc
xor
sbb
outsl
inc
hlt
pop
cmpsl
repz
mov
mov
or
shl
mov
xor
xchg
enter
xchg
adc
xor
jb
lds
shl
aas
cmp
ljmp
and
lds
mull
push
xor
lret
in
mov
outsl
les
pushf
mov
and
mov
aad
xchg
out
mov
movsb
pop
filds
loopne
jns
fwait
cmpb
incl
sub
popl
test
pop
mov
rcrl
in
in
xchg
scas
das
stc
lods
test
pop
sub
cmp
lock
dec
add
add
or
scas
sbb
insb
add
into
xchg
stos
pop
jbe
in
push
std
adc
and
xchg
and
pop
cmpsb
mov
push
lcall
rorl
and
sub
out
inc
mov
movsl
dec
lret
int
insb
nop
outsl
stos
repz
sub
in
loop
push
jp
add
ret
dec
pop
or
push
je
push
lret
cmp
xor
jmp
adc
xor
mov
icebp
fsubs
pop
sti
fbld
push
push
icebp
out
dec
mov
sub
iret
fisubs
xchg
jl
adc
add
mov
add
jle
dec
test
pop
repnz
adc
loopne
int
inc
loop
pop
mov
cli
dec
cmpsl
aam
mov
dec
add
pop
insl
cld
inc
pop
cld
mov
addr16
or
popf
repnz
std
mov
aas
test
pop
mov
xchg
xor
sbb
xchg
adc
ret
aam
and
je
adcb
cld
or
fidivs
jno
sbb
outsl
push
mov
mov
js
and
xchg
lcall
decl
mov
push
mov
movsb
lahf
in
xor
jmp
xchg
mov
addr16
cmp
aas
inc
mov
and
daa
mov
das
out
mov
or
cmc
cmc
and
imul
mov
stos
push
in
nop
mov
subl
add
sahf
mov
int
enter
test
out
lock
push
or
sarl
xchg
xchg
jmp
std
mov
mov
mov
mov
jbe
pop
loope
mov
call
jmp
pop
aam
inc
sbb
shlb
add
std
incb
jmp
jo
lds
xor
add
std
jb
adc
cmp
push
shll
xchg
mov
add
lahf
pusha
inc
shll
inc
popa
or
loop
adc
aam
fwait
and
dec
stos
test
and
push
jne
loope
cmpsb
int
dec
xchg
in
stc
test
sbb
call
inc
inc
loopne
xor
push
pop
hlt
and
pop
lock
insl
or
xor
mov
add
cli
mov
and
das
pop
hlt
adc
push
dec
jl
cmp
insl
imul
vpaddsw
mov
sub
xchg
fimull
popa
mov
jo
je
or
dec
and
inc
inc
inc
mov
decl
xor
pop
mov
add
and
or
add
jg
int3
stos
insb
mov
add
cmp
adc
jno
or
push
cmp
and
insb
xor
sub
and
add
mov
jmp
lahf
xchg
in
orb
pop
sub
mov
bound
stos
add
xorb
std
jge
ljmp
out
add
pop
add
xlat
cmp
incl
daa
loope
fiaddl
push
push
fbstp
xchg
cltd
push
add
dec
lcall
loope
lret
or
jb
lret
push
fsts
faddl
imul
in
add
cld
nop
push
xor
push
es
clc
add
inc
pusha
add
sub
cwtl
lock
pop
push
add
add
adc
dec
push
leave
sbb
test
jg
jmp
scas
mov
cmp
mov
add
cld
mov
cmc
in
rcrl
adc
xchg
loopne
fisubl
xor
lcall
push
mov
add
lret
jbe
nop
and
pop
cmpsl
test
mov
inc
mov
jmp
and
loopne
orl
xchg
fmull
add
sbb
sbb
jmp
loop
jne
bound
outsl
mov
pop
lea
dec
jg
jg
lods
cmpb
rcll
mov
lea
loopne
scas
lods
jg
mov
add
cmp
jae
inc
add
mov
addr16
lcall
push
ljmp
add
pop
shlb
lock
and
or
cmp
loopne
cmp
or
insl
adcb
fstpt
fbstp
cmpsl
cmp
add
xchg
stos
pop
push
std
test
add
aaa
or
cmp
orb
cmp
inc
sbb
xlat
test
loopne
push
ror
xchg
lahf
lcall
cmc
add
ficomps
aas
inc
ja
out
icebp
adc
inc
cli
into
outsb
pop
incl
sar
rorb
pop
xor
mov
bswap
inc
jo
aaa
jne
add
push
jg
cmp
xor
cmp
lret
loop
sbb
fmull
inc
pop
lret
mov
xor
xor
decl
testl
inc
cmp
or
mov
sarl
dec
stos
mov
repnz
lret
xor
call
arpl
sbbl
cwtl
dec
xor
push
loop
lcall
adc
pop
add
clc
pop
bound
add
add
inc
adc
fcomip
cld
call
sahf
inc
nop
push
xor
xor
pop
rol
push
xor
test
push
aas
popf
call
add
push
xchg
test
dec
ljmp
dec
hlt
idivb
wbinvd
push
fmul
xor
pop
orl
xor
mov
or
aaa
das
adc
add
cld
add
pop
mov
jae
cld
aas
and
fwait
mov
dec
loopne
leave
sub
adc
pusha
jecxz
dec
insl
xchg
dec
movsl
pop
rcrb
test
add
mov
xor
fwait
sbb
lcall
jb
aam
dec
inc
lods
in
dec
xchg
mov
cmpsl
incb
aam
test
sub
push
mov
sub
sub
mov
xchg
adc
push
fs
xchg
adc
lahf
les
dec
inc
cld
xlat
xor
add
mov
scas
jecxz
or
inc
lret
mov
lret
sbb
pop
mov
mov
mov
ljmp
mov
sahf
mov
or
jbe
into
lock
outsl
stos
dec
xchg
in
sub
jge
stos
clc
popf
shrb
pop
in
xchg
inc
das
push
mov
pop
mov
lods
and
cmp
lcall
outsb
sti
sub
int3
call
push
or
loop
cmpb
pushl
ficompl
jle
mov
sub
push
push
lcall
xor
push
push
mov
xchg
cmpb
or
inc
pop
test
or
sub
fwait
adc
jmp
ror
mov
add
ret
mov
aad
add
and
inc
push
push
xor
xchg
lock
ljmp
lret
jb
sarl
cmpb
repnz
mov
test
lock
mov
aam
xor
cwtl
sub
or
jno
pop
jge
push
outsl
mov
xor
jge
xor
fs
call
fdivrs
sti
jo
jmp
insb
movsl
cltd
cli
add
pusha
rol
jnp
dec
jmp
push
cmp
dec
movsb
ljmp
jmp
mov
nopl
fildll
or
jnp
dec
test
or
dec
lea
mov
add
add
out
adc
xor
out
test
popa
xor
pop
outsb
lcall
cmp
mov
loopne
test
outsb
imul
into
mov
loop
out
test
pop
mov
sbb
scas
cwtl
mov
dec
frstor
stos
aaa
mov
jb
arpl
cmp
ret
ljmp
clc
fildll
xor
dec
negb
or
data16
cli
jp
or
dec
adc
pop
xor
mov
pusha
adc
int
xchg
cmp
jge
lods
add
orl
outsl
and
repz
test
mov
xchg
adc
xorb
out
xchg
ret
loopne
arpl
push
and
or
xor
pop
xor
lret
iret
popa
jnp
pusha
sar
push
std
jecxz
stos
in
mov
clc
mov
mov
or
sbb
jl
lock
jg
popa
mov
adc
dec
adc
jo
aad
xor
cld
jg
movsl
movsb
xor
add
and
aam
push
out
leave
mov
add
lret
ret
ret
loopne
mov
je
ss
pop
mov
jle
mov
mov
aam
mov
pop
icebp
mov
xchg
push
push
fsub
neg
add
dec
and
add
xchg
cmp
mov
and
popf
repz
fsubs
pushf
or
mov
jmp
ret
lret
jle
sahf
in
push
fistpl
xor
mov
bound
lcall
jb
jg
sbb
adc
jg
filds
jbe
fcomi
popa
cld
pushl
aas
sbb
cwtl
pop
out
mov
adc
pop
sbb
mov
int3
jp
add
insb
test
add
sub
and
xchg
sbb
out
rolb
dec
mov
fsubrs
nop
push
inc
or
dec
and
je
stos
bnd
inc
loope
insl
mov
jne
push
jp
mov
out
call
pop
das
ljmp
dec
mov
aam
out
jge
repnz
or
sub
decl
xorb
mul
les
gs
mov
mov
cli
call
adc
bound
lds
mov
jne
std
shll
into
xchg
aas
and
js
cmp
stos
xor
and
dec
inc
cmpsl
xchg
xchg
jle
leave
in
or
adc
inc
pop
pop
or
xlat
cli
add
ret
mov
jmp
pop
push
adc
xchg
dec
bound
and
rorb
iret
xchg
stos
fidivrs
dec
or
fildll
stos
push
cld
ds
or
test
push
shlb
ja
add
je
and
cmp
mov
dec
xor
rorb
pop
mov
cmp
mov
mov
jg
push
loopne
adc
jb
bound
cmp
sbb
dec
or
xchg
mov
mov
mov
ljmp
jbe
or
lret
jae
iret
sarb
test
cmp
stos
add
jns
out
mov
repz
aas
movl
daa
mov
daa
sub
pop
out
pop
push
vpcmpgtd
call
mov
xor
jg
sub
add
call
cmp
decb
mov
xlat
sub
insb
mov
adc
adc
dec
jg
je
ja
xchg
pop
int3
adc
aas
test
cs
out
arpl
cmp
jns
sti
and
iret
jle
loop
fiaddl
pop
dec
cmp
ljmp
inc
jbe,pn
add
rcrl
lock
jecxz
shll
lods
cmpsl
sub
push
mov
addl
push
arpl
call
aad
or
pmovmskb
lahf
loope
jae
dec
or
xor
stos
aas
jg
or
ljmp
or
or
push
or
cli
popf
movsl
xor
ret
loop
push
fsubs
pushl
int3
sub
pop
dec
loope
sub
sub
inc
and
push
xchg
fwait
mov
inc
xor
enter
pusha
stc
dec
hlt
and
jecxz
sbb
jmp
xchg
mov
xchg
int
and
ja
adc
stc
aaa
sub
jge
mov
lods
jne
pushf
and
jle
xor
ds
outsw
xor
ret
ljmp
fistpll
aas
xchg
jmp
sbb
std
popa
adc
stos
mov
jecxz
scas
add
adc
push
mov
dec
jb
pop
fistps
or
pop
popa
sbb
mov
add
sbb
lods
cli
leave
inc
jbe
adc
mov
int
pop
outsl
fadds
adc
adcb
xor
pop
add
cmp
into
sub
push
movl
insl
jo
je
rorl
lahf
testb
loope
inc
xchg
and
lret
dec
push
xor
rcrb
cli
mov
stc
sbb
pop
add
inc
mov
mov
push
sub
cmc
cmp
jl
cli
mov
adc
idiv
shlb
aad
dec
pop
iret
and
push
jge
xchg
inc
sub
call
or
lahf
add
movsb
sub
push
xlat
mov
scas
push
je
outsl
lcall
push
mov
dec
cmpb
xor
mov
cmp
add
jg
pop
repz
dec
push
test
mov
sahf
xchg
imul
ljmp
mov
mov
inc
push
mov
add
out
add
loopne
pusha
jnp
xor
nop
addl
push
jmp
pop
je
adc
movsb
xchg
cwtl
add
mov
orl
sub
test
add
xchg
arpl
dec
mov
cmpb
jns
test
cmc
inc
xlat
clc
stos
mov
mov
cmp
sahf
popf
daa
bound
fstps
xchg
jge
jge
mov
mov
inc
adc
lea
fmul
pop
xor
test
add
sbb
xchg
sub
orl
pusha
cmp
xchg
and
mov
inc
out
adc
loope
movsl
dec
pusha
nop
and
iret
mov
jb
push
pop
mov
jae
stc
mov
jp
fcomps
lods
movsl
fcomip
das
test
add
out
cld
cld
das
cmc
fildl
iret
sbb
cmp
fsubs
push
ljmp
push
outsb
shl
jle
pop
and
cmpsb
cld
imul
in
cltd
mov
hlt
adc
cli
pop
cmp
out
xor
nop
repnz
int
add
loope
xchg
adc
or
mov
mov
sbb
xorl
pushf
inc
inc
pop
mov
call
add
inc
push
and
dec
cmp
out
cmp
ds
sub
popa
jg
repnz
sbb
push
shrb
ljmp
jecxz
jle
push
ljmp
cli
ljmp
xor
rol
xlat
es
ret
js
cmpsl
sbb
enter
xor
mov
xchg
mov
mov
pop
decl
sub
xlat
mov
js
loop
sbb
pop
pusha
sub
cli
jmp
jl
add
js
pop
jne
xor
mov
adc
out
nop
cmp
push
bound
pop
push
lock
sub
and
inc
xor
mov
outsl
cli
decl
inc
in
gs
add
mov
add
dec
imul
adc
sti
sbb
pop
cmc
cmpsl
fnstenv
xor
ds
decl
mov
inc
mov
sub
lods
rcl
filds
jg
lods
xchg
xor
add
jae
fisttpl
xchg
and
jns
mov
cmp
xor
ret
mov
inc
loop
add
jmp
xchg
shlb
mov
pop
dec
clc
dec
nop
push
push
and
fdiv
cmpsl
clc
loopne
test
mov
in
inc
jne
cltd
push
push
roll
std
lahf
dec
arpl
jno
lahf
mov
mov
fidivrs
loopne
rcl
loopne
mov
jg
icebp
mov
fwait
ljmp
xchg
sbb
and
fistl
and
pop
sahf
jp
roll
cwtl
mov
pop
imul
jg
pop
cmpsb
incb
test
subl
or
hlt
les
jecxz
xorl
jg
sahf
ljmp
iret
pop
dec
shll
add
testb
or
in
xor
nop
out
dec
dec
xchg
popf
mov
shr
xchg
cmp
std
jg
and
pop
adcb
imul
or
idivb
and
clc
add
mov
pop
paddd
mov
int3
push
iret
and
or
shll
stc
xor
aam
or
sub
or
cld
nop
mov
jge
repz
mov
cmpsl
cli
fbstp
bound
cmp
adc
xchg
pop
enter
stos
mov
sahf
mov
adc
mov
and
and
sbb
or
insb
xchg
out
adc
cs
xchg
add
movsl
jg
and
add
push
arpl
push
pop
lcall
fdivr
shrl
and
ljmp
or
add
int
pop
fnstcw
cmp
lock
inc
mov
ret
pop
sbb
xlat
pop
jg
xchg
sub
and
jnp
int
lock
xchg
jge
lahf
cmp
pop
lock
test
fildl
cmc
jmp
xchg
lret
pop
test
add
ds
push
imul
in
int3
add
mov
loop
xor
and
lahf
and
and
xor
sub
xor
jg
pop
inc
dec
xchg
repz
jne
push
cwtl
frstor
xor
or
sbb
xor
sub
cmpsl
cmp
lock
jg
enter
sbb
mov
fildl
inc
test
or
sub
push
movl
cmc
mov
shlb
pop
mov
lds
insb
popa
insb
stos
mov
xor
xchg
mov
cmpsb
mov
xor
mov
dec
loope
xor
push
out
fdivrp
mov
fisttps
cmpsl
sub
mov
add
add
add
popf
fdivs
sub
add
fs
test
dec
add
in
aaa
andb
inc
add
jle
or
mov
lcall
cmp
mov
fldcw
mov
xor
jo
pcmpeqw
stos
cmp
movsb
lretw
jge
jno
int3
fnsave
jge
out
in
cmp
add
cmpsl
sbb
fs
bnd
shl
cmpsb
int
push
in
push
aas
mov
cli
sbb
aam
sub
ja
das
sbb
sahf
mov
xchg
mov
jecxz
push
adc
inc
gs
inc
mov
loope
sahf
cmp
stc
ret
shl
cmp
xor
or
jecxz
sub
xor
push
dec
sbb
lret
jg
dec
in
stc
aas
and
mov
push
and
ret
xor
popa
lock
inc
loopne
sbb
dec
add
lock
aas
pop
dec
pop
cwtl
arpl
in
decl
arpl
xchg
inc
cmp
sbb
add
aas
in
push
loop
push
mov
mov
nop
lcall
mov
and
lret
cmp
into
dec
mov
inc
hlt
nop
xor
cltd
pop
pushl
inc
test
popa
push
gs
add
cmovae
aas
adc
pusha
push
cmpsb
pop
insb
xor
js
lods
pushf
sbb
movnti
inc
arpl
sbb
popa
ja
lret
xor
xchg
adc
mov
push
pop
xchg
mov
sbb
fwait
adcl
or
and
sbb
mov
xchg
fld
sub
mov
adc
push
sarl
lcall
test
inc
int3
aad
jmp
fs
popa
sub
mov
xchg
test
push
push
int
icebp
inc
loopne
or
cmp
jl
inc
cmp
mov
add
das
sbb
pusha
jg
adc
test
dec
pushf
mov
loopne
shlb
icebp
jns
ret
cld
aam
shl
jae
pop
inc
pop
mov
in
xor
fistps
jg
movsl
sbbb
jg
add
xchg
xchg
lahf
fbstp
push
or
js
test
inc
sub
int3
out
cltd
xorl
add
xchg
sub
jbe
push
mov
lahf
pushf
pcmpeqd
xchg
push
lahf
pop
mov
testl
clc
cmp
dec
arpl
fldcw
add
jg
ljmp
and
call
mov
inc
fdivr
insb
sub
into
inc
sbb
ja
jg
je
pop
test
test
mov
mov
fcoml
int3
les
mov
or
push
lds
jg
inc
jp
pop
fdivp
mov
fs
icebp
push
mov
ljmp
cld
loop
dec
jmp
or
aas
jmp
xchg
push
repnz
mov
lcall
repnz
mov
jl
mov
call
xor
xor
gs
add
pushf
repnz
mov
add
jb
xchg
dec
inc
dec
fwait
sub
pop
xchg
xchg
das
cwtl
adc
push
negl
insl
dec
adc
lret
mov
cli
mov
out
mov
xor
fwait
add
add
ret
outsl
xor
adc
mov
out
dec
sub
insb
add
sub
xchg
lods
sbb
stos
push
icebp
adc
xchg
add
inc
xchg
fcoml
fs
fmull
orb
push
bound
fidivs
push
jg
adc
enter
push
daa
cwtl
ud0
add
lret
push
xor
mov
or
jno
xchg
and
stc
jg
gs
hlt
clc
loopne
xchg
iret
es
jns
push
addl
lcall
es
dec
pushf
and
push
dec
jns
cmp
sbb
mov
jg
pop
lock
xor
psrld
jle
inc
mov
xor
mov
je
das
adc
adc
or
mov
adc
add
inc
js
stc
sub
mov
ret
lods
fcmovbe
daa
adc
add
icebp
call
pop
movsb
lahf
daa
out
jp
jg
arpl
push
add
sub
lcall
dec
sub
fs
sbb
movsl
incl
sub
jecxz
inc
xchg
push
dec
cli
incl
jle
dec
jg
in
call
ja
iret
nop
daa
enter
mov
sub
xchg
sub
iret
incb
pop
xchg
push
pop
inc
std
jecxz
mov
loopne
addr16
in
mov
test
rcl
or
xor
imul
cli
ljmp
into
add
push
xor
sahf
psrlq
cmp
mov
mov
and
popf
push
std
sbb
jecxz
lods
dec
or
xor
mov
mov
push
lcall
lds
sti
stc
es
lret
xchg
push
out
je
leave
mov
dec
add
inc
lea
cltd
mov
xor
mov
hlt
mov
sub
xor
out
dec
cmp
mov
push
add
mov
sbb
mov
inc
and
es
mov
test
rcll
rorb
insb
mov
adc
sbb
add
ds
xchg
sbb
xor
xlat
es
outsl
call
mov
push
xor
bound
lea
decl
push
je
mov
scas
mov
push
std
mov
and
pop
xor
outsb
mov
adc
das
push
mov
adc
pop
incl
mov
sub
push
decl
sbb
lcall
stc
push
es
sbb
pop
stc
das
aam
pop
imul
jb
xchg
icebp
jle
xchg
push
fbstp
jbe
xchg
pop
pop
mov
decl
fldcw
sub
xchg
jb
fnclex
jg
xchg
or
in
dec
sbb
inc
outsb
and
fwait
lea
ljmp
movsb
adc
jbe
pop
out
mov
lret
into
or
hlt
jcxz
sub
ljmp
sbb
jb
orb
mov
outsb
sarb
ja
mov
sub
push
xchg
mov
and
cli
pop
enter
test
aam
outsl
mov
popa
sbb
ljmp
sbb
rclb
add
popa
andl
mov
sub
aaa
into
sbb
or
pop
mov
aas
cld
jg
sbb
shrb
cwtl
inc
lock
push
mov
pop
mov
mov
mov
sbbb
pop
mov
adc
ds
mov
in
stc
decl
pop
iret
adc
or
xchg
cmp
mov
mov
int
lret
cmc
js
aaa
arpl
push
push
rol
loop
cli
lret
xorb
test
cmpsl
mov
adc
sbb
cmc
lock
mov
sbb
jne
inc
add
jb
in
clc
pop
movsl
xchg
ljmpw
cltd
mov
outsl
js
xchg
push
xchg
in
mov
inc
stos
rcr
dec
adc
clc
call
add
ljmp
push
xchg
xchg
jns
hlt
adc
sahf
inc
pushl
adcl
xchg
adcb
and
movsl
xor
xlat
nop
sar
pop
ret
add
out
or
add
ja
inc
cli
xchg
js
daa
pushf
pop
popa
inc
jg
jecxz
testl
ds
in
das
dec
push
pop
iret
out
fucomp
push
cmp
ret
mov
ss
jo
and
jbe
cmp
and
jns
bound
pop
mov
lods
mov
or
les
jmp
cmp
outsb
mov
xchg
xor
jbe
and
aas
movsl
repnz
bnd
lods
ret
jp
mov
testb
cmp
test
dec
repz
roll
cmc
sbb
cmp
clc
adc
scas
sbb
xlat
mov
stc
bound
mov
mov
ljmp
fimull
or
jae
xchg
outsb
loope
test
cmp
das
push
xchg
sub
add
adc
std
mov
sti
xchg
sub
or
xchg
fcmovnb
mov
adc
je
cmp
cld
add
push
inc
call
ret
pop
mov
jns
pop
cmp
int
aam
pop
movsl
in
push
scas
inc
mov
inc
push
push
mov
pushf
lds
mov
subb
jmp
scas
inc
shlb
or
stos
ljmp
loopne
pop
repnz
or
mov
add
imul
or
out
clc
mov
dec
ret
mov
cmp
sbb
add
xchg
cmpsb
xchg
inc
lcall
fdivrl
xor
and
dec
stos
mov
popl
pop
inc
mov
add
mov
daa
jmp
stos
xchg
stos
adc
aam
lret
pop
cltd
dec
call
fcomip
cmp
and
stc
add
pusha
out
jne
das
mov
lds
je
push
lret
sub
cmpsb
addr16
push
and
fistpl
mov
xor
add
js
add
inc
or
cmp
inc
push
stos
jecxz
test
loop
mov
fs
jo
pop
jl
mov
mov
inc
out
or
cmp
jmp
or
in
sbb
insb
push
clc
rcll
xor
mov
mov
add
mov
xchg
sbb
mov
xor
repz
add
add
cmpsb
pop
or
pop
dec
mov
stos
shlb
add
sub
mov
orb
lcall
sahf
repnz
jge
jp
sub
data16
sbb
cmc
xor
inc
mov
testl
sub
insb
xor
add
sbb
sarl
or
nop
pop
or
mov
ud0
fs
jle
xor
data16
and
add
loop
incb
ja
add
dec
xor
push
cmc
mov
jmp
jo
and
adc
leave
jo
popf
lret
mov
shlb
pop
add
mov
hlt
or
addl
ja
lcall
pushl
mov
inc
and
mov
jb
je
add
inc
sbb
add
mov
cmp
sbb
lods
cs
dec
mov
ljmp
int
pop
or
hlt
push
test
aam
adc
ret
movsb
pop
sub
in
mov
out
jo
dec
jg
decl
and
bound
jo
aas
cmpb
ds
mov
xchg
clc
test
repz
lcall
repz
shl
stos
ljmp
xchg
incl
ror
add
nop
push
jl
into
dec
ja
sarl
add
or
incb
rorb
ss
inc
jecxz
jne
fwait
add
ljmp
test
xor
shlb
bswap
scas
adc
sbb
lock
and
add
sbb
jbe
xlat
divb
adc
pop
andb
adc
movsb
ret
cld
lcall
test
add
sbbl
cs
ljmp
shrl
adc
sbb
repnz
push
cmp
das
decl
dec
sahf
inc
push
dec
xor
inc
mov
add
sar
ljmp
cmp
sub
fistl
and
mov
test
lahf
mov
ljmp
movsb
add
sub
loop
add
mov
insb
and
xchg
in
lcall
cmp
dec
cmp
stos
nop
mov
rcll
pop
xchg
xchg
aaa
mov
ljmp
push
out
negl
subb
stos
movsb
pop
rcrl
es
ds
add
call
out
xor
add
dec
jmpw
add
mov
xchg
xor
daa
icebp
repnz
int
mov
pop
jl
fnsave
sub
mov
jecxz
add
push
stos
lcall
dec
push
dec
clc
repz
or
pop
mov
or
mov
sbb
dec
cmc
pop
fs
flds
dec
and
mov
fistps
mov
fisttpl
int
push
cmp
in
dec
push
mov
loop
mov
dec
pop
pop
push
clc
sbb
loope
das
jp
add
cmp
ds
lcall
jno
fisttpl
pushf
cltd
add
decl
inc
adc
ds
sub
ss
lcall
mov
rcr
mov
rcrb
jl
pop
hlt
test
add
cwtl
and
mov
mov
je
loope
ds
lcall
fsts
ret
icebp
inc
ds
sbb
xor
dec
popa
out
popa
or
push
ljmp
mov
push
iret
mov
testl
fistps
dec
jl
bound
in
in
ficoms
cmpsl
jbe
and
adc
hlt
scas
ds
loope
add
clc
sub
insb
clc
jg
loopne
sbb
xor
inc
push
xchg
mov
in
jo
call
pop
jl
and
outsb
loop
fstpt
sub
lcall
mov
imul
jecxz
xchg
mov
and
mov
dec
scas
bound
js
jnp
ds
push
cld
lret
and
ds
outsl
jb
pop
int
inc
xchg
xchg
icebp
pop
jg
xchg
add
nop
cwtl
enter
adc
adc
xor
cmc
scas
gs
jp
xchg
xchg
insl
and
mov
pushl
jle
rorl
cmpsb
lahf
call
repnz
cmc
push
push
lock
cli
pop
or
xor
sbb
fiaddl
dec
icebp
aad
push
add
cmp
in
cmpsl
iret
dec
jle
cs
push
pop
imull
or
add
cmpsb
ds
pop
lcall
adc
shl
call
xchg
cmp
push
imul
test
sti
cs
adc
dec
out
lcall
cmp
out
sbb
stos
pop
stc
or
mov
test
add
add
jmp
push
or
mov
test
test
inc
es
jae
cmp
jb
in
sbb
in
lods
mov
and
dec
cld
mov
stc
adc
cltd
decl
in
cmc
mov
bound
sbb
xor
push
inc
hlt
sub
pop
js
push
gs
pushf
jg
cld
pop
fsubs
inc
rolb
xchg
pop
lock
orl
pop
pop
xor
sbb
dec
dec
xchg
pop
test
popf
rolb
adc
and
daa
cmp
andb
subps
cmpl
push
aas
ja
pushw
es
test
push
movl
mov
mov
out
cld
jmp
fdivrp
call
sbb
gs
sub
add
inc
arpl
xor
or
add
or
aas
sub
stc
pop
lods
setl
sarl
xchg
adc
adc
mov
jmp
pop
mov
mov
adc
sub
push
std
repz
test
shlb
bound
inc
cli
pop
or
jo
ret
push
punpcklwd
mov
ja
push
mov
mov
cwtl
sub
xlat
lea
sub
dec
cld
adc
jb
push
add
out
lock
cmp
add
jns
decl
out
andb
adc
jo
stos
xor
lret
cmpsl
aam
ljmp
or
in
sub
rcl
push
in
add
and
popf
sar
das
push
mov
test
mov
pop
addb
jmp
ret
xchg
and
pop
loopne
cmp
mov
adc
mov
fsubs
orb
mov
sarl
dec
inc
std
adc
insl
add
pop
inc
add
loop
sbb
ljmp
add
jae
sbbl
adc
mov
dec
mov
pop
cmp
push
ffree
jl
inc
add
cmp
dec
xchg
mov
or
stc
flds
int
xchg
in
insb
fcoms
jo
mov
stc
fdivl
sub
sub
add
cmpb
gs
jle
mov
pop
ss
nop
push
mov
inc
push
mov
incl
hlt
xor
lods
out
es
inc
lods
into
nop
sti
sub
stos
incb
cmp
clc
xchg
pop
and
push
cli
sbb
lret
jg
nop
je
mov
jmp
push
fwait
mov
add
mov
mov
icebp
bnd
negb
add
icebp
call
jecxz
aas
sub
out
adc
mov
pop
jge
xchg
mov
cmp
cmc
filds
mov
pop
loop
std
clc
loopne
sbbl
js
out
xchg
adc
push
ja
call
jmp
int3
gs
mov
and
ds
pop
push
bound
inc
clc
push
mov
cmpsb
cmp
push
rcrb
jle
add
jne
ret
jg
shrb
sub
stos
lock
sahf
pop
mov
fnstcw
mov
mov
jns
lcall
mov
test
int3
shlb
call
cli
dec
mov
mov
cmovge
dec
lods
sub
imul
cli
or
push
jle
push
mov
push
insb
fcompl
lcall
xlat
xchg
lea
stos
hlt
jb
cld
jae
les
or
jg
test
xchg
dec
jecxz
push
aas
enter
in
dec
sahf
mov
dec
sbb
pop
xchg
xchg
add
outsb
movsl
mov
addr16
push
mov
loopnew
dec
hlt
imul
jo
sbb
iret
mov
pop
push
jmp
sub
mov
outsl
das
sbb
scas
orl
dec
pop
inc
rcrl
push
push
push
pop
subl
cmp
jp
inc
pop
mov
shrb
jle
shl
and
sahf
je
inc
lods
outsl
jae
cmp
pop
int
rorb
or
add
xchg
int
idiv
jmp
push
cmpsb
or
and
or
addb
push
xchg
add
dec
xor
pushl
loopne
pop
into
adc
inc
lret
sub
popf
cmp
adc
mov
jnp
xchg
jle
fcomip
hlt
outsl
pop
les
pusha
or
enter
mov
push
sbb
dec
inc
aam
xlat
push
xchg
inc
mov
repnz
incl
mov
mov
ret
mov
outsl
mov
pop
cmp
mov
sbb
cmp
sbb
pop
adc
lock
jg
inc
push
push
mov
les
mov
insl
add
dec
cmp
mov
rolb
icebp
mov
scas
dec
test
push
or
and
mov
or
push
mov
cmpsb
invd
or
hlt
scas
push
lret
jo
add
clc
scas
js
je
andb
test
ret
jbe
call
call
mov
mov
ficomps
xor
dec
stos
mov
jnp
or
in
loop
test
xor
push
pop
xchg
test
dec
leave
or
jg
and
dec
sbb
sub
dec
imul
fsubrl
stos
inc
mov
jo
add
dec
int
bound
jge
push
inc
xchg
jno
dec
icebp
or
dec
sbb
imul
ret
sti
and
es
push
popa
repz
xchg
sbb
shlb
lcall
call
clc
and
int
pop
xchg
push
imul
jo
in
adc
mov
adc
les
pop
sbb
and
ja
aad
mov
jbe
dec
sbb
cs
mov
adc
filds
and
add
or
adc
cli
int
jnp
xchg
dec
sbbl
shll
out
ret
xor
insl
decl
imul
cmpsb
and
lea
sub
pop
mov
dec
int3
inc
push
ret
sub
and
mov
xor
inc
mov
stos
imul
push
xchg
sbb
mov
add
or
jns
adc
fwait
pushf
xor
hlt
cmp
into
enter
cmp
imul
mov
mov
pop
push
mov
mov
pop
arpl
adcb
stos
cmp
out
and
add
pop
sbb
popa
test
subb
sbb
into
or
in
pop
jp
out
dec
incl
decl
jne
mov
push
sbb
mov
mov
xor
add
cmpsb
or
jg
je
add
mov
nop
iret
je
xor
add
mov
xor
mov
and
xchg
mov
out
popa
lock
in
mov
rolb
loope
mov
lods
mov
decl
push
mov
popa
push
xchg
insb
ds
aam
popa
aam
mov
jecxz
clc
mov
fisttpl
push
ficompl
mov
pop
enter
loop
add
leave
test
leave
or
and
mov
mov
insb
loope
in
jnp
add
insl
adc
mov
cmp
sbb
incl
inc
dec
mov
or
cmp
sarl
add
int3
shrl
jge
add
pextrw
stos
mov
mov
ja
ljmp
jl
or
adc
sub
xor
and
or
add
xor
imul
sbb
mov
xor
lcall
mov
icebp
or
cmp
mov
lret
jmp
in
scas
xchg
xlat
sub
call
out
mov
mov
and
push
push
fnsave
loop
clc
aaa
xor
insb
push
aad
andb
and
imul
add
inc
or
inc
fcoms
roll
and
fwait
and
or
push
das
rorb
aaa
imull
cld
lcall
pusha
jno
out
xchg
push
fisttpl
cld
adc
repnz
pusha
xchg
jno
jp
sbb
cmp
push
stos
push
in
movsb
xor
js
out
lahf
cmpsb
nop
inc
outsl
test
add
push
cmp
inc
lods
leave
js
inc
mov
mov
xlat
adc
jle
mov
inc
cmp
mov
push
rorb
xor
mov
ljmp
jg
push
sub
mov
aas
xor
pop
lods
stc
jo
add
adc
xor
adc
pop
sub
les
or
and
add
jns
inc
push
popa
add
or
inc
aaa
or
mov
add
loop
inc
in
cmp
jae
lods
mov
adc
in
call
hlt
jle
outsl
fsubrp
incl
rorl
jbe
inc
fucomi
xchg
outsl
mov
jg
or
leave
adc
js
rorb
dec
mov
es
scas
mov
inc
mov
mov
adc
dec
pop
cmp
in
cli
mov
orb
loope
and
lahf
adc
daa
clc
sub
cmpb
pop
inc
mov
mov
sahf
loopne
add
repnz
cmpsb
daa
mov
dec
repnz
cli
sub
std
mov
push
cltd
fldt
aad
call
cmp
stos
imul
rorl
push
adc
cld
lcall
adc
and
mov
mov
push
addb
or
xor
adc
mov
fistps
jl
mov
loope
imul
out
loopne
sbb
or
je
shll
pop
adc
xchg
ret
imul
test
cmpsb
push
push
xchg
cmp
pop
and
decl
leave
scas
fdivs
sub
xchg
cmpsl
mov
shl
aam
andb
in
xchg
mov
sbb
sbb
xchg
xor
mov
aam
fldcw
out
sbb
insb
test
xor
insb
mov
jge
adc
sbbb
inc
fimuls
push
push
mov
or
pop
dec
sahf
adc
add
xor
mov
pusha
test
cmp
push
lock
incl
test
movsb
andl
mov
cmp
or
add
or
outsb
jmp
stos
ss
push
adc
js
xor
clc
sar
add
inc
jl
dec
and
cmpsl
add
add
orl
cmp
std
push
inc
adc
jp
into
into
push
pop
js
adc
fists
sbb
sbb
cmpsl
fimull
push
ss
push
push
sub
clc
push
cmpsb
outsb
cli
push
sub
mov
movsb
push
out
clc
inc
loop
sbb
dec
and
push
push
push
pop
or
das
cmp
add
push
shll
xchg
pop
mov
mov
in
inc
into
jmp
insl
sbb
aad
call
ss
push
mov
mov
adc
js
shlb
pop
adc
inc
pop
roll
ds
scas
inc
xor
pusha
or
fistpl
adc
sub
or
push
bndldx
out
xor
addb
sbb
xchg
push
xchg
jp
call
std
jle
push
mov
xlat
js
jno
push
dec
pop
lret
adc
sarl
adc
aaa
jg
lds
xchg
ds
fs
iret
dec
test
sub
fistpll
je
aaa
sub
sti
jecxz
adc
mov
push
xor
outsl
fisttps
ret
add
inc
inc
mov
popa
cltd
xlat
incb
sub
adc
adc
mov
mov
push
and
pushl
cs
mov
sbb
add
push
lock
xchg
add
jmp
lea
out
xor
lahf
ljmp
push
repnz
xchg
mov
les
out
shrb
add
pop
ljmp
sahf
sub
mov
sti
add
jae
jb
js
fbstp
es
mov
mov
jmp
xorl
jmp
subb
bound
push
call
pop
pop
dec
jl
mov
cwtl
scas
outsb
cmp
add
bound
push
add
add
mov
repz
xchg
cmp
cmp
lcallw
dec
repnz
inc
iretw
dec
dec
sbb
frstor
aad
rclb
pop
adc
mov
test
pop
out
shlb
xor
pop
pop
xor
out
mov
in
add
add
mov
cmp
and
push
pop
lret
push
and
lock
jb
shrl
dec
rorb
xor
sub
push
iret
xchg
mov
pop
lret
pop
or
sbb
std
lret
or
mov
fnstsw
mov
lock
adc
pop
lds
xor
cld
xchg
adc
stc
add
incl
xchg
add
fsubl
add
enter
cmpsl
sub
or
sub
stc
pop
cld
xchg
sbb
icebp
test
call
int
xor
or
insb
cltd
incl
inc
add
push
std
push
or
xchg
adc
mov
mov
out
decb
rcrl
and
hlt
jmp
fwait
cli
xchg
adc
xchg
xchg
daa
clc
sar
in
jns
les
and
imul
loop
add
cmp
fbstp
mov
int
push
push
or
push
imul
pushf
cltd
xchg
stc
int3
fistpll
pop
sub
push
cld
adc
cmp
inc
test
mov
in
dec
pop
and
sahf
andl
cmpsb
ljmp
rorb
inc
or
mov
lea
lcall
add
mov
sbb
inc
and
out
adc
adc
bound
cwtl
push
xor
dec
inc
mov
decl
gs
mov
mov
test
jg
adc
stos
push
xor
pusha
mov
das
decl
pop
inc
rcrb
mov
add
stos
cmp
cmp
jge
add
rcr
jge
hlt
adcb
bound
in
pop
push
or
push
or
xchg
fidivrs
adc
push
repnz
lock
inc
or
scas
stos
in
adc
sub
es
mov
inc
in
je
in
in
stc
sub
or
iret
pop
pop
push
and
movsb
jp
test
idiv
scas
clc
mov
lods
rcrb
xor
mov
cmpb
addr16
xor
ljmp
mov
add
repnz
or
in
jbe
incl
arpl
enter
rclb
or
dec
mov
inc
cmp
jo
add
jg
call
mov
pop
jmp
pop
sbb
nop
lds
cmp
icebp
adc
test
inc
pop
pop
xor
sahf
das
xor
mov
and
loopne
outsl
imul
or
xor
sub
fcompl
loope
iret
negl
cs
push
add
inc
into
sbb
inc
add
lahf
data16
fstps
aam
loop
loope
add
lahf
incl
xchg
jae
mov
sub
add
clc
call
pusha
call
ljmp
or
es
dec
adc
and
xor
in
jg
inc
cmovge
popf
adc
dec
mov
test
stos
xchg
fists
or
mov
xor
int3
sub
test
cmp
add
dec
or
xchg
jg
mov
xchg
mov
and
push
lds
sbb
pop
stc
es
addr16
sahf
adc
add
mov
call
cmc
push
flds
pusha
cltd
xchg
add
sub
mov
jmp
add
scas
hlt
sbb
mov
pop
and
mov
and
xor
enter
imul
clc
pop
xchg
icebp
mov
or
add
aas
je
clc
out
dec
cmp
jns
adcl
sbb
pop
mov
cltd
cli
fcmovne
bnd
sbb
cwtl
mov
add
clc
mov
jg
jns
sub
fwait
test
out
je
dec
shll
pop
jbe
or
scas
pop
lock
out
shll
mov
mov
loop
and
cmp
adc
dec
divl
fildll
push
mov
jbe
int
sbb
sahf
inc
cmc
adc
repz
test
aad
add
rol
mov
clc
add
jge
adc
mov
js
in
pop
mov
xor
and
dec
dec
dec
lock
adc
pop
inc
test
icebp
mov
mov
cld
mov
jl
out
and
inc
jo
icebp
mov
xchg
aad
lahf
mov
mov
or
xchg
imul
jb
add
dec
loopne
shll
or
push
lods
sahf
sarb
clc
dec
repz
adc
es
dec
sbb
cld
int3
inc
ljmp
loop
sub
mov
push
loopne
dec
pop
mov
pavgw
incl
repnz
jl
xorl
sbb
out
in
test
cmp
mov
push
insb
pop
sub
jl
adc
aaa
std
xor
sbb
pop
and
dec
sahf
and
inc
sub
cld
dec
dec
jmp
add
incb
or
aaa
add
ja
sbb
hlt
add
jmp
jmp
cmp
divl
mov
aam
loope
outsb
push
pop
sub
loope
dec
mov
daa
jmp
cmp
adc
pushl
and
cmp
sbbl
fimull
jge
xchg
ds
lock
loop
imul
decl
add
jl
xor
popa
push
cwtl
jo
out
push
xchg
mov
repnz
pop
icebp
pop
int3
test
divl
stc
mov
add
fbld
pop
pushl
les
ss
into
adc
pop
int3
jne
popl
add
fs
xor
pushl
aad
mov
daa
imulb
lods
outsb
or
pop
push
or
or
lcall
add
add
gs
das
in
sti
sarb
incb
xor
leave
push
test
in
push
xchg
add
dec
aaa
and
popf
stc
out
jbe
sub
outsl
inc
ret
bound
js
pop
xor
and
das
pop
cld
aad
jno
pop
subb
mov
bound
xchg
push
mov
movsb
decl
jg
test
test
mov
xchg
push
lock
and
jae
cmc
xor
add
cmp
and
mov
lcall
js
pop
push
push
sbb
std
mov
lock
mov
mov
mov
sbb
clc
lcall
push
test
mov
mov
addr16
insb
xor
iret
sub
and
mov
cmpb
inc
scas
adc
imul
xchg
lods
dec
jae
push
push
ja
call
mov
test
test
pop
sbbl
loopew
xchg
lea
xchg
incb
lret
lret
jmp
je
and
les
xchg
int3
or
leave
icebp
dec
add
pusha
hlt
jmp
daa
push
pusha
xchg
mov
loopne
mov
and
pop
fwait
mov
stos
push
add
je
jbe
mov
sub
push
mov
mov
cli
shlb
or
pop
decl
add
mov
jl
dec
and
inc
cmpsl
pop
adc
cli
jmp
pop
inc
mov
dec
inc
dec
adc
jl
add
pop
stos
xchg
mov
mov
movsb
incb
mov
cmp
adc
pop
ds
fildl
mov
or
aad
aas
fwait
lret
or
cltd
mov
sub
jmp
orl
rclb
sub
int
jle
jge
mov
je
adc
cltd
cmpsl
inc
loop
add
inc
test
clc
mov
xor
sbb
cmp
push
xor
pop
pushf
leave
pop
test
add
push
mov
movsb
in
mov
je
xor
xor
adc
popa
lds
stc
dec
adc
pop
sub
call
jmp
sub
icebp
mov
push
sbbl
lcall
add
or
add
push
mov
mov
push
ss
pop
cli
add
in
pop
add
lret
push
lods
jecxz
inc
rorb
icebp
mov
outsl
pop
adc
rclb
sbb
sbb
loop
insb
faddl
pop
add
add
lock
ret
inc
add
insb
jle
xor
adc
lock
sub
add
adc
mov
jo
mov
mov
scas
fldenv
mov
inc
ljmp
and
outsb
mov
lcall
push
mov
pop
mov
mov
loopne
dec
jbe
scas
push
or
push
jg
jg
arpl
shll
add
jns
mov
cld
jg
rorl
fdiv
push
sbb
faddp
mov
lock
jne
push
xchg
ret
jle
out
mov
cmp
pop
add
pop
push
pop
push
ljmp
adc
and
jl
decl
frstor
test
iret
mov
xor
push
test
fwait
adc
adc
or
incl
sbb
cwtl
sbb
sarb
jecxz
sbb
aas
xchg
lods
push
push
pop
dec
movsl
sub
aam
andl
test
outsb
sahf
mov
jnp
incl
add
adc
cmp
inc
je
push
jmp
jbe
cmpsl
ljmp
movsb
loop
in
dec
stos
add
push
out
inc
shlb
mov
inc
mov
push
stos
clc
jmp
jmp
repz
xorb
gs
sbb
inc
inc
arpl
outsl
dec
dec
cld
repz
clc
enter
outsl
mov
ljmp
cmp
lcall
lret
pop
out
mov
push
lds
and
loop
xchg
in
in
or
in
call
sub
inc
dec
ja
dec
push
and
es
sbb
dec
adc
ljmp
and
add
and
xorb
das
sbb
insb
sahf
or
fcomip
jg
out
pop
mov
aad
mov
xchg
shlb
call
pushf
xlat
add
pop
jb
mov
add
add
lcall
pushf
jecxz
mov
fst
into
stos
or
push
cmp
movsb
pop
pusha
mov
mov
rcll
call
dec
fcomip
jg
scas
stos
push
pushf
inc
dec
or
xor
arpl
jne
outsb
aas
test
daa
or
adc
stc
mov
imul
ret
cltd
fwait
mov
or
leave
stos
lcall
aam
dec
clc
or
xor
mov
xlat
cmp
stos
push
pop
add
gs
in
mov
jecxz
adc
jbe
clc
mov
cwtl
les
rolb
inc
ljmp
sbb
mov
movsb
andl
jp
cs
cmp
je
xchg
outsb
dec
sub
cld
xchg
repz
pop
and
or
data16
sub
jp
pop
sbbl
ss
movsl
adc
outsb
pushl
xchg
sbb
adc
addr16
xchg
call
test
jle
or
pop
push
and
inc
or
cmp
negb
mov
xor
arpl
or
jg
lahf
add
sbb
clc
inc
jo
add
hlt
decl
lock
call
jo
pop
flds
jmp
cwtl
adc
fildl
jg
inc
push
cmp
push
cmp
leave
push
cs
adc
cmpsb
mov
jl
mov
xorb
loopne
dec
jecxz
xchg
ret
aam
push
je
or
inc
repz
imul
and
jecxz
sahf
cld
outsb
push
add
call
decl
es
sbb
inc
push
rolb
jmp
add
clc
jbe
or
sbb
cmpb
or
mov
movl
lea
loop
push
fsubrp
pop
scas
cmp
or
xchg
add
insl
jecxz
fcmovbe
es
sub
call
mov
sbb
das
sbb
push
xor
mov
mov
xor
test
orb
adc
subb
orl
clc
cmp
mov
dec
xor
inc
rcrb
nop
pop
lret
fs
cli
fcoml
mov
lcall
sbb
jg
mov
ljmp
sub
sbb
lcall
jmp
push
loope
in
popa
add
jbe
sbb
add
mov
and
fistl
push
ds
mov
popl
adc
jbe
mov
xchg
int3
xor
inc
les
leave
mov
add
loope
cmp
jno
lods
subb
dec
pushf
lcall
incl
pop
dec
leave
pop
inc
adc
es
and
sbbb
add
out
pop
add
ss
sbb
je
mov
clc
cmp
and
push
std
inc
call
jg
ret
dec
out
in
ds
push
shl
leave
fsubrs
inc
rolb
push
mov
sahf
or
dec
in
sar
scas
cmp
in
insb
xchg
arpl
outsl
fisubrs
mov
nop
sbb
cmp
lahf
ret
and
sub
push
mul
jp
mov
shll
sbb
fdivrp
inc
or
jg
insb
adc
inc
pop
ds
pop
inc
subl
aaa
sti
or
imul
lret
add
and
pushw
imul
lods
clc
pop
test
decb
lock
push
and
dec
dec
adc
cld
fcmovne
push
and
adc
mov
es
mov
repz
je
inc
sbb
xchg
sub
xorb
mov
es
test
cld
dec
fwait
in
cld
inc
mov
mov
rolb
or
fistps
mov
jb
lock
cmp
fwait
push
lcall
push
xor
lock
dec
jbe
cmp
imul
mov
mov
sbb
aam
fidivs
lods
mov
sub
push
dec
mov
jno
inc
xchg
add
les
or
sbb
mov
adc
or
shrl
loopne
lock
mov
xchg
xchg
shlb
clc
add
lea
mov
and
xlat
clc
inc
mov
ret
sar
ret
sub
or
cmp
sbb
clc
xor
sub
call
sub
loopne
cmp
jg
stos
jmp
inc
push
not
movd
push
inc
cmp
cld
or
adc
popf
rcl
je
mov
pusha
lods
push
mov
xchg
dec
es
mov
inc
fistpl
cmp
stos
inc
insl
pushf
dec
push
subl
std
ljmp
popf
sbb
push
sbb
testl
sbb
test
jmp
in
lret
add
das
or
mov
inc
repz
push
insb
movsb
cli
mov
and
and
and
xchg
outsb
inc
sub
jo
cmp
aaa
call
jne
cld
mov
insl
loopne
pop
icebp
mov
pop
cld
jg
xor
inc
dec
mov
mov
lcall
mov
xor
insb
add
or
mov
incl
jno
jl
inc
xchg
xchg
loope
cltd
loop
decl
and
sbb
pushf
std
loope
lcall
cld
mov
out
stos
test
sub
jno
mov
aam
sub
fistpl
scas
ret
jl
pushf
pop
sar
shl
sar
xor
addr16
mov
incb
mov
inc
jno
adc
cmpb
jno
sub
test
repz
decl
sarb
mov
push
add
dec
inc
ficomps
es
pop
jg
dec
add
sbb
jg
or
jae
mov
ljmp
lock
jle
les
adc
loop
or
dec
orb
hlt
mov
jmp
fcoms
pusha
dec
orb
inc
clts
outsl
filds
push
add
push
out
and
loop
or
pop
and
imul
or
and
pop
inc
insl
inc
sbb
repnz
sub
mov
sub
cmp
adc
aad
lods
mov
mov
dec
pop
daa
je
daa
sub
nop
fadds
rcrl
push
testb
repnz
and
add
das
add
lods
cmc
fucomip
jge
enter
cmpsb
jl
js
into
mov
aas
or
pop
loopne
lcall
add
icebp
loopne
lods
inc
inc
cmp
mov
out
inc
ficompl
out
or
in
dec
jae
add
dec
mov
dec
cmp
pop
icebp
stos
or
out
out
mov
and
jbe
sbb
lock
dec
jmp
orl
mov
adc
adc
je
or
scas
cmc
pop
fwait
enter
lock
and
outsb
push
stc
mov
iret
mov
clc
push
stc
cmp
aad
es
aaa
inc
jo
outsb
add
adc
mov
push
sar
sbb
decb
pop
and
mov
jbe
and
loop
call
imul
mov
and
add
icebp
sub
or
dec
and
je
mov
jmp
pop
inc
test
add
movsl
testb
pop
jg
sub
test
loopne
mov
push
sbb
jmp
adc
ja
jns
mov
dec
xchg
jmp
cwtl
adc
clc
inc
lcall
not
dec
ret
insb
jecxz
add
mov
lcall
les
cmp
mov
mov
jae
adc
add
andb
push
cmp
xor
add
jg
insl
xchg
sbb
arpl
mov
lods
jg
movlps
nop
repz
mov
popf
popl
testb
pop
cwtl
pop
fcomp
push
mov
pushl
stc
mov
and
xor
and
outsl
jecxz
lods
add
jmp
jns
and
sbb
xor
push
or
push
cmp
adc
xchg
mov
mov
mov
rorl
int
call
inc
les
in
ljmp
jg
and
adc
arpl
pop
adc
jecxz,pn
sti
sbb
mov
inc
adc
lods
pushf
arpl
lock
insl
xor
cmpsb
add
dec
aas
mov
mov
sub
sub
fwait
je
cmpsb
push
or
cmp
inc
testl
jecxz
mov
cwtl
cmp
push
fsubp
mov
adc
leave
stc
mov
adc
push
shlb
in
adc
mov
clc
dec
ret
inc
dec
adc
mov
cmp
and
lcall
mov
push
inc
jge
ret
or
imul
add
imul
jg
ret
push
repz
lock
stc
xlat
arpl
les
adc
sub
lahf
aas
xchg
pop
xlat
lea
ret
incb
or
dec
dec
cli
pop
pop
mov
push
sbb
cs
out
test
ret
push
pop
add
rcll
dec
xchg
lds
popa
frstor
xchg
inc
stc
push
sbb
jno
stos
xor
es
add
in
jnp
hlt
subb
hlt
flds
xchg
jnp
inc
mov
sarb
scas
xchg
pop
or
and
mov
mov
out
stc
sub
adc
aaa
jb
add
dec
lahf
inc
xor
cmp
dec
loop
jmp
or
stc
inc
xchg
repz
xor
out
pop
xchg
sbb
push
test
incl
cmp
inc
adc
mov
cs
push
push
cli
dec
loopne
pop
jbe
lods
xchg
sub
add
rdmsr
pop
imul
rcll
cmpsl
inc
shrb
dec
loop
pop
mov
outsl
sbb
aas
popa
lahf
inc
and
and
mov
mov
out
push
cmpsb
and
shl
inc
xorb
push
addb
xchg
jge
aaa
rorl
dec
push
add
xor
test
mov
xchg
mov
mov
addr16
mov
icebp
imul
adc
xor
inc
mov
test
xchg
xlat
cmp
outsl
fdivl
adc
loope
jl
cli
fucomi
sbb
loop
inc
es
sbb
pop
call
daa
dec
push
aaa
sub
mov
addb
inc
push
inc
or
add
fimuls
and
adc
add
pop
add
adc
ljmp
scas
adc
or
pop
out
xchg
push
jmp
test
fwait
mov
cwtl
or
lea
call
lcall
out
sub
lcall
xchg
jecxz
sbb
pop
adc
cmp
mov
roll
in
push
jmp
or
dec
mov
stos
add
imul
jbe
ret
jecxz
lcall
fsin
in
sub
mov
movsb
lret
mov
and
mov
jg
push
lock
xor
pop
xchg
mov
hlt
inc
mov
cs
mov
pop
jl
incl
outsl
and
xlat
add
dec
ljmp
ror
test
in
insb
mov
pop
sbb
aaa
sti
jle
loope
ljmp
xor
pop
rcrl
push
jne
je
call
inc
iret
int3
imul
loopne
sbb
adc
insb
or
ljmp
out
std
push
and
and
sub
xor
mov
mov
cmp
rcll
das
pusha
sbb
in
movsl
sar
aaa
push
mov
data16
add
popa
mov
xor
add
jo
hlt
adc
std
out
inc
js
cli
push
sti
cltd
sbb
push
or
shlb
stos
stos
inc
in
inc
fs
xor
mov
lahf
push
push
lea
add
in
mov
ljmp
test
sahf
sbb
out
inc
fcoml
scas
jo
sar
aad
xchg
daa
cmpsb
addr16
cld
sub
scas
mov
add
in
pop
sbb
add
mov
mov
inc
sti
mov
mov
lcall
mov
repz
stos
in
call
js
subb
sti
mov
inc
ss
test
scas
repnz
lret
leave
pusha
xlat
scas
inc
add
hlt
add
sbb
lahf
dec
into
sahf
xor
call
add
mov
push
mov
test
fistpll
ds
dec
pop
inc
in
jg
mov
mov
mov
jnp
loopne
push
in
rolb
xchg
push
add
push
rcll
sbb
std
jb
aam
mov
cmp
aad
lock
jg
popa
lods
aaa
dec
bnd
mov
lds
add
mov
add
movsb
fwait
jo
xor
pop
cli
aam
aam
mov
ret
into
push
and
xor
mov
push
pop
mov
loope
jne
jne
jno
test
mov
jecxz
xchg
out
inc
loopne
outsl
dec
lret
push
in
mov
cmp
pop
add
xchg
xor
mov
sub
jmp
pushf
repz
ljmp
dec
inc
andb
jg
adc
add
adc
shrb
jo
push
xchg
pop
out
outsb
inc
sub
cmp
mov
pop
mov
movsl
add
push
loope
jo
adc
mov
cmc
add
add
scas
js
and
jl
std
sbb
lods
roll
and
js
pop
imul
add
and
cmp
jae
mov
test
fwait
pop
popa
adc
and
push
pop
test
sar
inc
xlat
cwtl
cmp
je
gs
add
les
cltd
test
fmul
mov
and
clc
sbbb
push
sbb
mov
ss
jo
fcomp
inc
ret
ljmp
nop
fwait
aas
lock
xchg
outsl
jb
rcrl
jmp
int3
pop
mov
mul
sub
inc
push
les
mov
fsubrp
adc
cmp
je
iret
dec
lock
je
mov
push
sbb
sub
push
pop
adc
add
adc
sub
cld
cltd
cld
inc
mov
ljmp
lods
add
mulb
mov
mov
or
inc
aaa
or
lcall
xlat
rol
pop
and
movsl
pop
mov
jle
dec
shl
xchg
mov
jg
add
and
sub
pop
jno
fists
std
push
xchg
aas
push
mov
inc
adcl
and
pop
call
xchg
adc
mov
bound
mov
fldenv
and
and
aam
ljmp
cli
movsb
push
mov
or
mov
loopne
cs
in
adc
sbb
sti
mov
push
popa
push
sar
mov
mov
xchg
xor
pop
mov
test
outsl
cli
or
ret
push
neg
mov
cli
mov
add
xchg
dec
loopne
int3
or
ja
movsb
stc
push
cmc
jecxz
shlb
inc
loopne
test
repnz
inc
les
adc
push
test
out
xchg
icebp
out
xor
and
sub
sbb
mov
ljmp
jl
mov
inc
movsl
in
mov
ljmp
incb
xchg
mov
imul
movsb
adc
add
lcall
repnz
inc
roll
inc
mov
add
dec
test
pop
shrb
inc
cmpl
push
sahf
sbb
rclb
cmp
adc
pushf
outsb
add
pop
inc
or
jb
xor
scas
ljmp
mov
xchg
cld
push
movsb
cmpsl
cmp
xor
ja
mov
mov
and
stos
jnp
adc
cmpsb
jg
inc
lea
xlat
xchg
dec
jo
fs
lods
jecxz
mov
mov
pushf
xchg
dec
inc
pop
sbb
inc
push
rorb
xor
mov
add
cs
adc
mov
test
mov
xor
add
mov
lret
js
add
lahf
xrelease
jno
mov
add
jge
or
pop
incl
ja
xor
mov
push
es
mov
mov
mov
in
popa
add
clc
xchg
cs
cs
es
xchg
mov
inc
loopne
sbb
dec
xchg
hlt
pop
add
pop
cmp
lock
push
mov
dec
fs
jbe
add
rcll
and
orl
dec
cmpb
or
mov
gs
mov
dec
mov
test
add
push
lods
sub
pop
lretw
nop
add
mov
jae
vphsubdq
sbb
jbe
lds
push
push
pop
push
cs
pushf
shlb
movsb
add
mov
push
or
sub
add
mov
mov
dec
ret
mov
cli
cmc
inc
in
stos
icebp
add
sub
xor
push
or
jbe
stos
or
xchg
xchg
pop
mov
pop
clc
ljmp
insb
call
mov
daa
push
mov
mov
mov
pop
mov
gs
dec
mov
pop
sub
and
in
push
xor
adcb
cmpsl
or
jg
jl
insb
push
out
adc
jl
cmp
movsb
stc
pop
add
enter
mov
incl
inc
jbe
in
jp
cmp
lods
push
cltd
pop
adc
dec
pusha
clc
sub
adc
ja
inc
mov
pop
pop
test
pop
inc
adc
dec
stos
push
push
mov
inc
outsl
mov
mov
lcall
dec
sar
rclb
dec
pop
lret
push
aam
xor
in
movsb
cmp
pop
or
jp
xor
xchg
xchg
aas
popf
pusha
cmp
ljmp
cmp
scas
test
jne
dec
pop
or
add
cmp
fildll
repz
push
pop
sti
or
in
sahf
in
loope
inc
sub
es
scas
mov
jg
and
jae
jb
mov
pop
hlt
mov
jp
data16
gs
decl
add
push
movsl
idivl
rcll
xchg
movsl
add
xor
push
ljmp
cwtl
into
imul
orl
inc
push
xor
mov
rcrl
in
mov
or
mov
add
js
lret
inc
js
stos
sti
or
push
adc
mov
and
push
sub
fstp
sbb
jo
push
add
pop
addr16
filds
mov
or
mov
jmp
jnp
add
dec
add
ss
sub
inc
jmp
mov
inc
jp
js
sbb
stos
sbb
cli
inc
fwait
mov
and
repnz
pop
xor
pushf
js
push
jb
jl
xorb
xchg
add
cmp
out
or
push
in
xchg
mov
out
lock
outsb
mov
scas
add
or
sub
mov
hlt
sbb
hlt
rcr
dec
adc
cld
jg
das
loope
adc
mov
mov
cld
popf
shlb
or
lea
fisubrs
xor
sub
inc
jmp
push
into
aas
iret
ret
es
shll
and
inc
inc
and
dec
hlt
int
sbb
dec
cmp
iret
jbe
scas
or
mull
and
aaa
call
shll
jno
pop
adc
cmp
test
or
jl
addl
push
or
push
outsl
add
push
pop
icebp
mov
jmp
and
pop
inc
cwtl
inc
dec
std
inc
aam
sub
sub
adc
test
incb
pushf
sub
movsl
popa
cmp
mov
mul
nop
cld
add
add
or
mov
jbe
add
jmp
pop
jae
dec
idivb
jmp
shlb
inc
in
sub
pushf
add
add
pop
test
xchg
popa
aad
adc
push
xor
dec
push
sub
ds
inc
xchg
and
add
adc
lods
idiv
and
scas
mov
cmp
stc
mov
gs
adc
sbb
ds
mov
insl
xchg
shrb
ljmp
push
dec
and
sbb
mov
popf
mov
xchg
cmp
sbb
and
push
xor
jo
pop
mul
mov
mov
aaa
imul
cmp
pop
jmp
jns
or
inc
dec
movsb
xchg
popa
adc
test
int3
shlb
repz
xchg
rolb
popa
insb
dec
cld
jb
psubw
sbb
and
jg
ret
test
xchg
adc
pop
or
insb
lods
testl
shr
inc
decl
call
xor
jmp
jno
insl
cld
scas
dec
les
pop
xor
mov
push
adc
jmp
push
push
sbb
adcl
xchg
ja
int3
out
cmp
cmpsb
decl
subb
mov
mov
call
pop
dec
clc
mov
fidivrs
push
cmp
jmp
fsub
or
and
mov
sahf
inc
pop
fidivl
xchg
jp
sti
scas
fsubrs
or
test
test
xor
mov
ja
movsl
mov
dec
movsl
sub
jae
adc
or
test
leave
enter
jg
mov
push
cwtl
mov
cmp
mov
add
bound
add
shr
xlat
push
push
inc
jo
jmp
pop
jg
je
jp
fs
xor
imul
pushl
orl
or
xor
orb
cmp
cld
mov
cs
in
adc
loopne
add
ljmp
adc
cmp
cwtl
cmp
xchg
repnz
nop
ret
xchg
jg
call
inc
dec
sub
nop
jge
pusha
in
imul
mov
dec
in
rolb
nop
ds
or
mov
push
cld
std
xor
movsb
dec
sbb
mov
pusha
xchg
ds
out
mov
pop
add
and
idivb
adc
shrl
mov
stc
decl
xor
add
add
push
orb
jmp
daa
cld
pop
jne
dec
pusha
dec
aam
pushf
add
in
mov
adc
inc
xor
cmpsl
sub
sbb
inc
and
xchg
ret
add
xchg
push
sbb
or
jecxz
pop
fcoms
mov
adc
jmp
pop
jno
mov
pop
pusha
test
xchg
movsb
mov
mov
adc
cmp
jmp
dec
cltd
mov
sub
sbb
sub
jmp
rol
and
clc
push
cmpsb
pop
lret
adc
enter
scas
fstpt
in
add
popa
sahf
cmp
or
out
adc
jecxz
or
sbb
aaa
add
mov
xchg
mov
cli
jbe
aas
shlb
iret
jbe
xchg
in
dec
mov
test
daa
adc
mov
stc
cld
fcomip
mov
xchg
sub
insl
push
out
cmpsl
mov
dec
add
outsb
add
subl
dec
aam
mov
les
cmp
das
inc
add
leave
aas
in
xchg
roll
or
aam
mov
icebp
mov
mov
pusha
add
jg
cld
xor
lea
in
jne
cmp
mov
jecxz
fsts
aad
outsb
iret
mov
ret
pop
mov
mov
gs
cmp
incb
inc
imul
push
sbb
and
sub
std
jmp
mov
mov
push
mov
lahf
int3
xchg
pusha
call
cmp
ror
dec
cmpsb
jmp
ljmp
push
inc
call
scas
stc
and
add
int3
lret
cmp
lcall
jle
imul
xor
or
jge
lock
push
mov
scas
cmpsl
cld
in
cmp
bound
mov
add
dec
shlb
mov
pushf
inc
inc
or
and
add
clc
call
pop
pusha
pushf
push
cmp
out
jns
mov
ljmp
es
mov
and
pop
addb
lahf
sbb
cmc
outsl
push
mov
xlat
mov
mov
dec
int
andb
ja
jp
test
out
push
insb
loopne
jnp
cwtl
and
jb
push
loopne
xor
push
movsb
jmp
scas
adc
pop
adc
xchg
js
xor
pop
cmp
popa
push
jecxz
add
add
pop
and
lret
rcl
shrl
mov
addr16
and
add
add
repnz
stc
arpl
add
sbb
sub
and
mov
jae
push
pop
sub
push
aam
scas
push
loope
add
cld
sbb
and
jecxz
lods
and
or
and
mov
pop
inc
adc
sahf
mov
sbb
dec
mov
lahf
inc
fs
inc
repnz
ljmp
fimuls
sub
mov
enter
push
aad
sbb
push
jo
pusha
scas
sbb
mov
mov
push
jae
shlb
add
sti
mov
movsb
pop
cld
mov
out
loopne
xchg
and
xchg
adc
cmc
fbld
inc
das
add
cmp
das
arpl
jae
roll
lcall
xor
lcall
xchg
push
or
cmp
mov
ret
jnp
inc
inc
or
mov
or
cmp
rcrb
scas
outsb
loopne
int
inc
sbb
push
sub
xchg
in
inc
xor
jns
loopne
add
mov
and
mov
xchg
xor
jmp
add
addr16
pop
js
mov
enter
inc
add
and
lods
out
lods
rcll
rcrl
dec
mov
xor
add
add
jo
and
sub
mov
call
ficoms
cwtl
jle
shll
inc
add
incl
lcall
mov
pop
or
lds
inc
lret
fimuls
ret
loope
cmc
adc
add
dec
and
lods
es
movsl
push
cmc
lahf
out
xchg
test
add
dec
incl
out
mov
add
dec
sarb
push
xor
mov
or
and
call
std
rclb
xchg
dec
mov
pop
mov
inc
add
push
mov
sbb
mov
push
sbb
and
ljmp
shl
subl
push
testl
xchg
shlb
ja
jg
push
hlt
ret
xchg
in
and
or
std
mov
xorl
jns
xor
movsb
add
outsl
sub
mov
mov
add
in
mov
cmovl
imul
dec
sub
cmpsl
or
lahf
ret
sbb
ss
cmc
add
push
push
aad
clc
add
addl
fs
jle
lcall
cmpsl
dec
imul
repnz
jmp
add
mov
cld
out
jcxz
fwait
aam
fwait
loopne
popa
add
mov
stos
lahf
sbb
jns
and
add
testb
adc
jg
aam
cwtl
flds
push
xchg
mov
in
or
add
int
pop
in
aam
cwtl
dec
pop
lahf
dec
mov
push
lds
movsl
orb
jg
jbe
xor
xor
dec
shll
aam
or
imul
add
inc
sub
adc
aam
push
or
das
iret
mov
ljmp
test
je
fsubrs
mov
dec
test
xlat
nop
lahf
cmp
or
xor
inc
adc
or
mov
out
or
push
cli
mov
hlt
frstor
xchg
push
add
mov
daa
das
pop
push
dec
test
pop
test
jl
jle,pn
sbb
sti
add
xor
fwait
mov
pop
insl
lods
add
decb
push
jg,pt
inc
add
sub
or
push
cmp
inc
decl
lods
scas
add
scas
mov
jecxz
lods
subl
push
int
fisttpll
jmp
adc
cmpsb
push
jns
or
push
push
dec
sub
insl
sub
push
push
add
hlt
fs
push
and
scas
lods
pop
hlt
push
add
shufps
dec
loopne
std
fidivl
push
pop
cld
jg
and
bound
mov
cmpl
mov
mov
fistps
sub
pop
add
or
xchg
sub
jg
cwtl
sub
jg
rcl
mov
xor
xor
jecxz
xchg
xor
mov
sbb
push
jl
shl
negl
cmpsl
cwtl
imul
or
clc
adc
shll
hlt
daa
push
in
stos
mov
std
jmp
aas
in
mov
push
rorl
mov
mov
popl
cmpb
loop
decb
push
pop
cmp
pop
push
push
in
scas
sub
insb
arpl
pop
test
bound
mov
pop
es
jl
add
sub
pop
xchg
ret
mov
pusha
or
je
ljmp
out
stos
jl
in
jg
cmp
adc
lods
jmp
decl
in
or
pop
or
inc
lods
pop
repz
stc
stos
aad
dec
mov
insb
pop
jle
icebp
call
pop
mov
out
jne
cmpsb
add
jecxz
adc
test
popa
push
test
iret
cmc
inc
cli
aas
clc
sbb
hlt
cmp
shll
addr16
jg
jle
pop
cs
pop
mov
lods
popf
ficomps
loopne
fistl
jge
mov
inc
orl
sub
icebp
xor
rorl
pop
jmp
loopne
mov
test
incl
in
jecxz
loop
pop
pop
pushf
and
mov
pop
sbb
or
outsb
jge
adc
testl
icebp
sub
xchg
xor
enter
fstpl
ljmp
or
repz
stos
jge
inc
add
or
xchg
cmp
jmp
cmpsb
bnd
jge
and
mov
lahf
fwait
in
and
push
loop
and
cld
lcall
cld
inc
mov
mov
inc
push
imul
mov
sbb
fdiv
inc
xchg
or
dec
mov
js
push
sbb
clc
jo
sbb
cmp
clc
dec
add
scas
mov
sar
pop
push
xor
add
lahf
inc
and
mov
pusha
leave
loope
data16
push
cmc
inc
pushf
cmpsb
inc
out
test
cmp
fimuls
dec
dec
int3
jae
xor
xchg
xor
dec
arpl
fisttpll
scas
xchg
sarb
jno
js
fsubrl
mov
icebp
pop
mov
adc
inc
pusha
adc
out
cmpsl
loop
in
xor
rep
jge
dec
in
cmp
hlt
aas
push
test
push
mov
xorb
nop
push
sbb
xor
das
xchg
dec
out
adc
mov
je
in
sbb
pop
in
dec
cmc
cmova
fsubrs
jmp
ret
and
pop
rorl
pop
clc
incl
sub
scas
nop
xor
stos
bound
jge
loop
push
cld
cs
mov
int
sub
daa
xor
inc
ja
and
movsb
push
xorl
mov
mov
stc
scas
add
inc
sub
imul
sub
add
rolb
fldenv
out
jno
mov
nop
call
shrb
mov
or
push
ret
cmpsl
cs
lock
pop
add
push
or
xchg
loopne
sbb
mov
cmp
outsl
cli
push
fcoml
jb
int3
mov
dec
push
fs
into
pushf
insl
sub
push
cld
fildl
psrld
jmp
inc
jge
clc
mov
adc
aaa
loopne
das
fsubrs
mov
sbb
aas
sub
xchg
sub
dec
pop
jno
pop
xor
lock
lods
jae
inc
sahf
aad
and
jns
mov
ror
stos
imul
cmc
decl
lret
in
mov
sbb
pop
inc
add
or
jecxz
test
pushl
lret
out
jge
cmp
psubsw
mov
xor
popa
jae
in
jo
or
dec
or
xchg
add
lret
inc
mov
pop
cmpb
adc
inc
jne
or
or
popf
rorb
xlat
pop
enter
stos
dec
inc
dec
lcall
adc
fisttpl
xor
orl
mov
movsl
adc
xchg
ret
and
push
out
mov
jbe
rclb
jge
pop
pop
subb
inc
inc
ljmp
add
pop
sub
mov
add
in
imull
js
adc
loopne
pushf
push
stos
pop
nop
lcall
xchg
and
push
mov
jecxz
pop
in
test
loopne
add
lods
mov
das
adc
test
imul
add
in
pop
jb
jmp
push
stos
xchg
fsubr
xor
mov
fiaddl
je
xchg
adc
pusha
rorb
jnp
add
lcall
add
adc
ljmp
sbb
push
shl
int3
ljmp
add
loop
sbb
movsl
jle
hlt
call
dec
sbb
and
js
push
or
jg
or
fistpll
push
lods
ret
roll
mov
test
es
arpl
cmpsb
ret
jne
cmpb
mov
push
jnp
cld
call
add
dec
sub
inc
jno
imull
cmp
push
out
inc
inc
std
xchg
subl
decl
add
fdivrl
fwait
loop
fdivs
ror
bound
mov
inc
or
and
pop
or
push
loopne
adc
cmpl
inc
push
mov
cmp
dec
lds
push
sub
or
cmp
lock
sub
cwtl
lods
mov
insb
mov
cmp
jg
adc
daa
and
imul
jecxz
popf
pop
mov
iret
pop
jno
push
movsb
test
sub
enter
mov
and
or
cmc
bound
loopne
shll
je
sub
arpl
push
call
scas
lock
in
jns
addb
adc
jnp
in
outsl
push
xchg
mov
pusha
xchg
jne
inc
adc
into
push
pop
jg
dec
mov
adc
lahf
int3
sub
aam
sarl
decl
xchg
test
jns
jb
dec
cwtl
and
call
lret
test
shll
cld
lret
out
dec
mov
mov
mov
cmp
sar
jmp
popa
les
int3
inc
sub
outsb
jbe
cmp
or
xor
adc
aam
enter
add
lds
sub
sub
ljmp
into
mov
loopne
in
add
call
and
push
mov
lahf
push
jecxz
adc
leave
ljmp
bound
imul
dec
xchg
push
cmpb
jb
fimull
add
inc
jno
dec
rcrl
cmp
sti
mov
ja
fldcw
fisttps
aam
loope
in
adc
xor
xlat
push
dec
xchg
daa
outsb
sub
clc
xchg
clc
pop
lret
cli
or
add
sbb
pop
clc
ljmp
adc
fwait
jmp
mov
sub
fistps
sub
xor
and
mov
shl
pop
loope
xor
fidivrs
cwtl
test
mov
jb
inc
xchg
mov
rcrb
inc
mov
pop
xlat
and
fcomps
cld
fnstenv
fildl
jne
mov
xchg
mov
call
filds
scas
repnz
call
ss
mov
pop
mov
inc
je
in
adc
loope
out
add
push
daa
daa
pop
lock
jnp
shr
movsb
xor
inc
mov
mov
nop
aad
fmull
andl
jg
lcall
jp
xchg
repnz
sbb
push
inc
sbb
xchg
push
shrl
fistl
dec
inc
cld
pop
pop
test
xor
mov
pop
lock
cmc
or
in
test
loop
sysexit
sub
mov
adc
call
add
cli
jl
hlt
inc
push
inc
std
mov
adc
loop
cmc
inc
aam
or
decl
xchg
push
pop
add
or
xchg
insb
sbb
js
jno
mov
sbb
dec
dec
mov
aas
pop
sbb
lcall
mov
rclb
addb
loope
mov
mov
mov
jg
popf
out
lods
inc
mov
ss
xchg
decl
add
ret
push
popa
sbb
cld
jg
pop
xor
fmull
filds
decl
jbe
xchg
loop
shr
xchg
inc
or
sub
mov
iret
push
loope
stc
push
push
xchg
mov
stc
jnp
loop
ret
adc
fwait
movsl
sub
push
jb
add
mov
lods
jb
dec
scas
cmp
roll
or
addb
scas
add
pop
test
dec
ja
leave
xchg
pop
data16
add
lea
mov
lahf
add
incl
sahf
leave
sub
adc
and
jg
ljmp
sbb
dec
sub
test
xchg
add
stos
jge
add
xorl
dec
mov
movsb
inc
dec
fimull
jg
lds
mov
lahf
xchg
cli
push
push
out
ljmp
jl
sub
and
dec
sbb
sbb
mov
cmpb
aas
adc
ljmp
cmc
lock
jmp
sbb
out
rorb
clc
or
push
js
sub
bound
mov
pop
shl
call
mov
data16
mov
outsl
andb
imul
icebp
jno
xchg
sahf
cmpsb
or
add
popf
sbb
ffreep
pusha
loope
push
in
adc
mov
lcall
lahf
cld
outsb
mov
adcl
adc
inc
add
sub
jp
fwait
out
xchg
adc
popa
mov
insl
pop
adc
ljmp
xor
inc
and
fadd
adc
jg
popa
xchg
in
imul
subb
mov
adc
jecxz
test
inc
xlat
stc
loope
mov
dec
leave
std
sbb
sahf
pusha
repz
shrb
sub
adc
filds
loopne
lret
nop
sbb
movl
outsl
fcomps
pop
dec
mov
push
add
adc
pop
fisubrs
xor
movsb
iret
add
sbbb
nop
rclb
pop
popl
outsl
aas
icebp
scas
hlt
rol
aad
cmp
jbe
es
icebp
xchg
push
xor
das
and
sub
pop
jmp
or
push
mov
mov
ss
add
in
add
add
cmp
jae
orb
in
xchg
cmpsl
enter
test
out
add
rolb
leave
sbb
mov
test
mov
push
inc
sbb
sub
jl
arpl
adc
cmpsb
push
or
imul
inc
xchg
sti
repnz
movsl
rorl
mov
scas
add
mov
push
cmp
or
and
dec
or
test
adc
dec
and
movsb
inc
jmp
ret
ficomps
lahf
jo
cmp
mov
jp
shr
xor
xlat
ror
loope
ret
sbb
push
imulb
sub
mov
sbb
adc
add
mov
xchg
dec
sahf
nop
xorb
dec
test
insb
xor
pop
roll
sahf
aas
movsb
xchg
add
inc
adc
add
repnz
mov
in
xchg
je
push
mov
add
arpl
mov
mov
mov
fisubrl
add
aaa
test
jno
sti
aas
mov
lret
stc
and
test
sub
aad
imul
dec
sbb
pop
dec
mov
mov
or
test
stc
lods
cmp
cmc
in
sub
es
shlb
sbb
inc
testb
fcoml
sbb
pop
das
mov
inc
adc
inc
jae
mov
dec
rcr
xlat
dec
add
lret
incl
jbe
jae
std
lea
aam
jo
mov
inc
jg
dec
or
xchg
out
mov
cmp
es
fistps
jle
shlb
call
or
hlt
test
and
das
mov
shll
loope
xchg
cmp
pop
xchg
dec
mov
out
sbb
mov
jge
sbb
xchg
ljmp
xchg
mov
incb
inc
mov
cmp
mov
mov
sub
fs
add
mov
add
jg
fdivl
mov
lock
adc
fwait
pushl
movsl
push
ret
jl
adc
mov
ljmp
lods
lea
ret
add
xchg
ljmp
fists
outsb
aam
sbb
add
jge
mov
jle
jge
and
clc
add
aaa
mov
mov
out
popl
inc
sbb
daa
sbb
lahf
dec
decl
lods
jmp
jg
vmovss
mov
or
xchg
call
inc
rorb
xchg
push
sbb
imul
into
std
push
out
or
jns
adcb
loope
cmp
xor
sbb
rolb
clc
cmp
insb
adc
add
push
jmp
add
in
inc
mov
push
mov
aaa
mov
xchg
in
lret
add
mov
orb
xlat
mov
or
loope
in
idivb
push
cld
xchg
sub
bound
inc
in
sbb
push
std
pushl
jp
inc
in
mov
xor
add
mov
cmp
or
jp
or
aad
jmp
lea
xchg
lret
fnstcw
lret
in
sahf
inc
clc
ret
lock
cmpsl
mov
mov
xchg
ljmp
ljmp
fwait
or
stos
fimull
int
mov
and
outsl
hlt
jg
xchg
pop
ret
sbb
leave
arpl
pop
add
pop
or
lods
loopne
cmp
dec
pop
in
rol
push
inc
ret
out
int
out
inc
sbb
jle
js
cmpl
mov
fsubs
in
mov
sbb
mov
sub
adc
cwtl
int
pusha
jp
sub
dec
fistl
filds
xchg
xor
mov
and
add
adc
lret
add
roll
lds
fs
mov
out
push
loop
inc
dec
cmpsl
les
dec
arpl
add
out
jg
jb
inc
repnz
gs
sahf
or
xor
das
jl
mov
xchg
jl
std
pushl
sub
add
sti
insb
push
add
pop
mov
dec
xchg
incl
sbb
rol
cmc
sahf
xchg
and
gs
scas
mov
fsubs
scas
ret
test
xchg
mov
dec
and
sbb
cmp
adc
fisubrs
incl
clc
add
xchg
lret
sbb
out
rclb
add
sbb
sub
add
sub
mov
xlat
scas
cmp
jnp
cmc
lahf
dec
stos
pop
hlt
fldenv
in
adc
ja
es
add
sbb
adc
lock
incl
call
add
mov
test
and
add
mov
pusha
mov
lock
dec
jnp
orb
and
fistps
xor
in
gs
mov
mov
mov
sub
pop
add
push
subb
add
jg
xchg
jns
mov
pop
cmp
mov
jge
pop
popl
ss
dec
lret
sbb
bound
fsts
cmp
sbb
inc
cmp
ja
ljmp
inc
cli
cmp
inc
leave
sbb
mov
adc
push
xor
jg
push
inc
aam
sbb
adc
mov
xor
add
adc
daa
loop
add
and
rclb
sbb
lret
daa
insl
mov
mov
add
cmpsb
or
jl
scas
xchg
or
adc
les
mov
push
push
inc
pop
lock
jle
fwait
add
gs
call
out
ljmp
loopne
push
scas
jg
push
jg
loopne
hlt
xchg
or
fistl
ljmp
outsl
cli
aaa
or
lcall
sbb
fstps
cmp
sub
scas
out
orl
cmpsb
sbb
cwtl
adc
filds
pop
push
add
sub
add
inc
fmull
and
dec
jecxz
cwtl
or
and
add
jns
jns
lock
test
add
or
sti
mov
and
cmp
shll
push
fdivl
inc
dec
fldl
lock
movsl
loop
jmp
inc
lret
lds
push
rcrb
shlb
clc
inc
push
shll
sbb
bound
xchg
lcall
add
or
cmpl
shlb
mov
mov
ds
adc
jp
adc
into
mov
das
shlb
int3
out
pop
loope
jo
adc
mov
sahf
jbe
mov
loopne
pop
ficoml
push
adc
fcomps
sbb
idiv
scas
cli
pop
loopne
pop
cmp
dec
adc
cmp
shlb
inc
loop
shll
mov
sbb
sub
pop
movsb
push
xchg
mov
orl
call
mov
add
push
xor
push
ret
xor
ret
mov
iret
cs
test
push
push
add
mov
aad
lcall
fisubs
cmpsb
jns
sub
xorl
jge
jl
pop
out
nop
mov
xor
jl
movswl
aad
or
inc
sub
div
adc
clc
jb
imul
pusha
and
shll
mov
xlat
dec
push
jle
outsl
stos
mov
jb
cmp
pop
dec
ud0
loop
les
pushl
jg
pop
inc
cmp
dec
pushl
push
sub
lcall
out
mov
add
gs
mov
pop
mov
shll
aad
bound
and
leave
push
repnz
add
adc
lcall
pavgb
lods
rcll
xchg
xor
jne
clc
loop
je
sbbb
mov
xchg
jns
ds
pushl
ja
aam
add
adc
lcall
mov
inc
call
imul
mov
loop
in
mov
scas
js
jns
frstor
int3
setb
push
stos
adc
loopne
pusha
fwait
or
cmp
mov
incl
sub
dec
adc
cmpsl
lock
repnz
inc
sbb
pop
inc
cmc
aas
sub
mov
test
xor
sar
add
stos
ficomps
xor
xor
xchg
rcll
cli
decl
adc
xchg
subl
scas
sbb
xor
dec
das
and
cmp
push
and
xor
inc
movsl
xchg
das
jmp
xor
es
mov
je
lcall
dec
or
push
stos
cmp
movsb
stc
roll
daa
pop
jo
xchg
lods
fnstcw
jns
adc
ret
les
fwait
and
cwtl
pushf
insl
outsb
pop
sub
ljmp
mov
inc
scas
xor
pop
cmpl
adc
gs
pop
add
push
and
scas
add
inc
iret
jb
hlt
imul
call
jo
xchg
push
adc
jns
or
push
add
incl
wrmsr
inc
movsl
adc
xchg
dec
int3
cltd
add
ds
pusha
mov
or
outsl
das
clc
decl
or
pop
add
jp
mov
aam
lcall
mov
and
scas
shrb
push
mov
clc
es
xor
and
icebp
out
out
push
negl
pop
push
adc
out
mov
call
movsb
fs
xchg
jb
or
sub
dec
dec
jmp
shr
xchg
enter
jnp
inc
pop
push
stc
add
push
hlt
sub
xchg
sbb
pushf
xchg
add
clc
out
push
fisubrs
jle
repz
outsl
jo
inc
sahf
push
sahf
in
daa
insb
push
addr16
cmp
xchg
lret
fwait
jno
adc
sbb
fdivr
stos
lret
lret
inc
daa
repnz
jbe
fisttpl
aaa
decl
hlt
lock
lods
xchg
out
sti
push
push
jle
dec
mov
cwtl
adc
outsl
les
mov
test
imul
aas
fiadds
js
and
out
add
cld
dec
push
sub
lods
cltd
cmp
and
ss
movsb
jne
fdivp
jg
jbe
pop
push
push
ret
popf
je
fiadds
int
mov
das
push
jp
sti
or
sub
pop
add
adcl
cmpsl
push
out
dec
adc
cwtl
adc
dec
xchg
push
leave
adc
out
in
and
cmpxchg
pushl
loopne
mov
cmc
arpl
adcb
loopnew
ljmp
pop
cmp
sbb
testl
sbb
or
adc
decb
daa
mov
pop
or
xchg
mov
test
cld
mov
or
xchg
rclb
push
jge
out
ja
andb
inc
xor
cmp
cmp
push
and
mov
xchg
mov
mov
aaa
out
mov
cmp
xchg
pop
mov
dec
bound
idiv
clc
psubd
mov
mov
push
movsl
icebp
pop
jbe
adc
xchg
or
mov
add
out
xchg
sbb
lcall
mov
pop
outsl
jne
mov
pop
repnz
fldt
sbb
jb
loop
inc
fildll
insl
adc
clc
jg
mov
dec
rcrl
sub
cmc
dec
ljmp
mov
or
xor
stos
lods
mov
jle
dec
cwtl
ja
and
mov
jb
cmpsl
xchg
popl
and
hlt
cwtl
add
jmp
pop
jmp
out
mov
mov
pusha
dec
dec
fisubrs
pop
mov
push
stos
xor
inc
adc
sbb
mov
lea
aam
mov
cmp
movsl
sbb
mov
fpatan
sbb
xor
sub
push
push
mov
jmp
les
enter
bound
in
adc
das
mov
sti
ret
addr16
jge
pop
repnz
testb
add
lds
mov
aam
sbbb
aaa
adc
call
mov
es
mov
lahf
fistps
insb
mov
mov
sbb
imul
pop
mov
je
daa
sub
orb
xchg
jl
mov
and
std
mov
cltd
mov
inc
jo
stos
add
and
cmp
sbb
push
inc
mov
test
dec
and
jg
mov
or
cmp
and
adc
fdivs
loop
mov
call
leave
add
add
push
mov
inc
mov
or
adc
adc
ss
add
ljmp
clc
data16
int3
or
jno
jecxz
jl
cltd
shrb
or
stc
sbb
ret
jg
icebp
movsb
or
pusha
scas
bound
add
lock
mov
mov
mov
imul
mov
add
xchg
lock
std
xor
jl
mov
dec
xor
pop
ret
pop
xorb
loopne
or
jae
mov
negl
sbb
and
gs
jmp
dec
mov
and
sbb
cmp
sbb
push
lahf
je
incb
popa
cs
and
pop
loope
lock
lock
scas
and
push
mov
rolb
pop
xchg
lcall
inc
in
dec
int3
ss
test
clc
or
in
stos
sarb
mov
mov
nop
les
pusha
adc
mov
xor
push
les
push
dec
xchg
sub
gs
jbe
sbb
fwait
outsl
xchg
pop
mov
mov
mov
cld
enter
add
es
pop
cmpsl
aas
xor
jmp
mov
push
add
adc
jg
and
shlb
mov
jg
xchg
fcmovnbe
and
push
pop
insb
cld
mov
add
mov
mov
fildll
xor
adc
repz
inc
mov
sub
test
inc
fs
ds
cmpsl
inc
fnstcw
enter
sub
xchg
adc
sbb
movsl
andl
negb
and
decl
cmp
bound
cld
or
loope
xor
lea
cli
pop
push
es
fdivs
jmp
in
stos
cmc
incl
and
dec
add
out
lcall
inc
cwtl
fcompl
mov
mov
jmp
nop
mov
cmp
js
repz
les
fwait
mov
and
aam
cltd
movsl
in
adc
hlt
out
shlb
fwait
dec
inc
icebp
fsubl
shlb
sbb
pop
loopne
dec
add
insb
pop
aad
inc
adc
pushf
adc
test
out
rolb
cmp
xchg
out
sbb
lods
lcall
jmp
xchg
call
xchg
and
xchg
sbb
imul
dec
pop
out
inc
mov
push
and
mov
add
fisubs
push
push
add
adc
loopne
fidivrl
incl
jmp
daa
int
pop
aad
call
and
xchg
fnstenvs
pmaddwd
andb
pop
outsl
ja
push
or
hlt
fldl
or
and
adc
ret
mov
sahf
or
iret
cmp
in
les
ret
bound
sbb
inc
test
stc
mov
mov
fs
std
inc
sub
enter
mov
cmpsb
pop
sub
or
xchg
jb
lahf
mov
and
and
repz
pusha
sahf
xorb
xchg
mov
xorb
push
bound
aas
dec
push
pushl
lds
dec
ljmp
mov
and
fbstp
movsb
or
or
stos
adc
pushl
add
ds
sti
jnp
sbb
fwait
pop
fbstp
or
sahf
test
sbb
add
sar
aad
fbld
jne
lock
push
shrl
sub
pop
repz
sarb
cli
sub
jno
and
cli
dec
std
or
inc
das
inc
mov
jns
jmp
inc
lods
dec
push
sbb
jecxz
sarb
testb
mov
enter
addr16
into
mov
aas
adc
sub
in
in
pop
mov
and
stc
and
dec
adc
gs
std
push
jmp
xchg
repz
pop
or
sbb
movsb
out
mov
cmc
xor
outsb
lods
mov
xor
mov
sbb
cmp
dec
incl
pusha
incb
xor
jns
addr16
scas
inc
rorl
mov
adc
add
iret
mov
outsb
movsb
dec
sub
jo
add
aad
jnp
add
daa
adc
mov
pop
js
iret
inc
cwtl
sarb
ret
rdtsc
mov
scas
dec
dec
sub
fucom
pop
add
add
shlb
adc
mov
insb
pop
xor
enter
adc
stos
shrl
jg
mulb
aaa
dec
jl
popa
in
loopne
mov
add
aam
repz
fs
addr16
test
test
push
pop
xchg
add
push
vandnps
sbb
iret
jbe
or
loop
rcl
or
loope
iret
sub
cs
cmpsl
dec
push
iret
inc
repz
dec
pushf
ja
clc
and
insb
jge
jmp
lahf
pop
loopne
pop
call
leave
mov
xor
addb
ret
adc
andl
rclb
aas
sub
filds
ds
fs
sbb
stc
sub
jmp
push
sub
aas
shlb
imul
lcall
cmpsb
pop
bound
pop
inc
cwtl
mov
cmc
and
js
sbb
and
jb
idiv
xchg
popa
and
jecxz
aas
aas
add
jp
pop
mov
mov
and
xchg
or
sub
int3
inc
sub
add
arpl
fistps
xchg
iret
int
das
dec
fstp
xor
inc
jmp
in
xchg
push
outsl
call
jbe
adc
xchg
aad
clc
fbstp
pop
cmp
inc
add
jle
push
mov
pusha
sub
pop
jle
xor
inc
inc
leave
adc
cltd
js
add
sarl
ljmp
js
aaa
dec
lea
inc
loop
or
pop
mov
out
in
divb
jo
and
xchg
in
add
lds
mov
add
arpl
sub
mov
cmpb
jmp
adc
sub
iret
aaa
pop
bound
xchg
jg
ja
mulb
decl
add
cld
int3
inc
leave
nop
or
rclb
jle
or
in
popf
ljmp
push
or
xor
jno
fsubrl
and
lcall
push
jnp
add
push
insb
ljmp
inc
sub
mov
mov
ljmp
sub
in
aas
cmp
pop
or
mov
pop
pop
addr16
fists
xchg
lods
je
rolb
adcb
dec
sarl
xchg
cmovne
sub
xor
inc
jg
call
dec
xor
fwait
xchg
and
pop
mov
int3
nop
mov
int
mov
push
adcl
push
std
fwait
std
or
mov
sub
test
xchg
add
stos
sti
fists
or
push
cmp
repnz
or
jmp
je
pop
mov
xor
fs
paddd
outsb
push
push
mov
mov
mov
pushl
sbb
mov
aas
cmpsb
adc
rcrb
cmpsl
xchg
lret
inc
or
out
mov
sbb
syscall
cld
and
inc
lods
jecxz
xor
xchg
pop
sbb
std
and
xor
xchg
xchg
stc
jg
daa
adc
sahf
mov
or
call
test
je
adc
jno
or
mov
or
incl
xchg
sub
ss
mov
jmp
loopne
bound
sbb
dec
add
or
inc
dec
test
cmp
decl
ljmp
and
push
sub
inc
cmc
fistl
add
dec
mov
add
fcoms
xor
xor
cmp
call
aaa
scas
test
xchg
push
sbb
push
dec
push
cmpl
mov
loop
push
jl
adc
push
test
mov
adc
sahf
sub
arpl
jl
sar
ds
mov
rcll
inc
push
aas
fsubs
test
dec
pop
mov
cmp
mov
pushf
cmp
stos
dec
fisttpl
mov
nop
cmp
mulb
rolb
das
dec
jmp
mov
xor
add
sar
mov
fistl
rcll
and
or
pop
je
stos
call
jo
pop
movsb
aas
push
lahf
mov
pop
cwtl
decb
and
imul
mov
aad
rolb
and
loopne
dec
jno
pop
dec
das
and
testl
sub
add
add
outsl
cmc
xor
outsl
push
das
movsb
add
arpl
lods
rolb
nop
int
mov
jb
sbbb
fcmovbe
cld
pop
sub
inc
jbe
add
out
mov
sbb
aas
mov
sub
xchg
ret
ret
lahf
cld
jno
clc
and
add
stos
jmp
les
pop
push
and
mov
pop
inc
jmp
mov
sub
or
sbb
cmpsl
inc
cmp
lret
dec
and
dec
js
sbbl
aas
xor
xor
lahf
push
cmp
jo
jb
ffreep
pushf
jns
xchg
insl
pop
in
and
xor
ljmp
pushl
js
add
fwait
pop
decl
add
iret
in
and
hlt
lcall
xlat
popa
pushf
insb
add
gs
jmp
push
orl
insl
mov
jl
jns
inc
adc
mov
and
out
add
enter
mov
repnz
fs
ds
xchg
jl
push
cltd
mov
jg
jg
mov
fists
imul
mov
push
imul
xchg
aas
js
mov
jns
xchg
xchg
jb
pop
push
xor
push
lahf
ret
xchg
imulb
mov
mov
push
imul
fsubp
lods
imul
mov
add
lock
fdivr
xchg
jb
sub
cmp
cmp
mov
push
lret
loop
mov
fdiv
aam
mov
mov
enter
fwait
mov
pop
xor
nop
dec
aam
adc
inc
adc
cmp
addb
push
push
and
data16
add
incb
mov
repz
xchg
cmpsl
pusha
xchg
int3
sub
xchg
sub
in
movsl
enter
and
popf
adc
dec
mov
int
xchg
or
pushl
clc
pushl
daa
xchg
add
into
mov
jb,pn
xchg
or
scas
rol
pop
push
push
repz
jecxz
pop
mov
ret
into
fisttpl
enter
rolb
jmp
jle
decl
aaa
pop
repz
jl
xchg
gs
xchg
je
ljmp
jg
adc
jno
aaa
fisttpll
sbb
sub
or
out
call
subb
jns
or
mov
fcmove
push
movsb
adc
mov
dec
mov
mov
cltd
and
xor
xchg
or
lods
incl
add
mov
jle
sbb
and
test
push
adc
dec
ljmp
sbb
mov
xor
das
out
test
insb
mov
add
mov
imulb
and
dec
enter
add
dec
sbb
lcall
jnp
xchg
outsb
pop
movsb
stc
cli
mov
cmpl
call
pop
test
cld
negl
xor
gs
cmp
cmp
xor
mov
dec
sbb
fidivrs
add
adc
cmpsl
incb
repnz
push
xor
cmp
xchg
test
es
pop
sbb
in
adc
cs
add
outsl
subps
push
add
jne
decl
lock
fmul
bsf
pop
add
push
add
lcall
mov
dec
out
xor
hlt
jb
add
popa
or
js
jmp
add
and
leave
mov
xchg
sarb
mov
cmp
addr16
push
shlb
sub
sub
inc
adc
ljmp
jle
cmpsb
decl
sbb
add
mov
mov
push
shlb
push
popa
rolb
adc
lods
movsb
sbb
nop
mov
dec
sbb
ret
mov
xor
cmp
pop
lcall
out
repnz
cmp
or
inc
add
mov
mov
sbb
pop
jge
dec
aam
and
mov
movsb
pop
mov
incl
inc
gs
cmp
mov
add
clc
push
mov
movsl
xchg
movsl
mov
test
arpl
imul
push
cmp
or
xchg
fcmovb
inc
pop
lret
cli
sbb
mov
sub
jb
mov
aad
sbb
jg
sahf
mov
fdivrs
adc
and
in
fnstenv
icebp
pushl
push
push
xchg
or
mov
xchg
movsb
pop
adc
mov
in
adc
mov
xchg
mov
dec
mov
incl
dec
mov
add
dec
lcall
pop
test
inc
mov
jb
push
iret
pmaxub
lret
dec
ja
nop
icebp
push
sub
xchg
nop
jle
and
cld
aaa
push
fists
notb
push
int3
inc
in
test
inc
cli
cmpsb
xchg
and
cmpsl
clc
mov
adc
mov
subb
nop
fdiv
jmp
cmp
add
mov
sub
lock
fdivl
hlt
cmp
xor
inc
or
push
cld
mov
jmp
lret
mov
scas
cli
cmpsl
add
loope
and
sbb
popa
add
scas
jp
dec
daa
pop
or
adc
push
rcrb
mov
jb
pop
dec
data16
jmp
xchg
js
pop
and
popf
add
movsb
lcall
sub
andl
ds
add
sbb
outsl
clc
decl
xchg
sbb
pop
mov
mov
adc
push
cmpsl
mov
ljmp
add
rorb
cmp
and
test
nop
cmp
cpuid
dec
push
lret
and
sbb
sub
jg
imul
and
and
pushf
cmpsl
movsl
das
icebp
jno
sub
add
jo
out
and
cmp
out
adc
jns
outsb
pop
jecxz
pop
cmc
insb
pop
jnp
imul
cmp
sbb
lea
popa
push
pop
test
mov
in
cld
or
mov
pop
fsqrt
push
jp
sti
or
subb
dec
and
cmp
pop
add
mov
mov
add
inc
adcb
test
lahf
mov
mov
pop
lcall
mov
sbbl
sbb
jno
std
and
and
jo
push
dec
ljmp
mov
jl
je
inc
cmp
bound
bound
lods
or
mov
xor
xchg
add
sbb
call
jae
mov
mov
fldt
bound
sub
jg
xor
popf
imul
mov
dec
jmp
clc
or
or
inc
and
add
bound
dec
push
movsl
cmpl
inc
in
pop
lea
push
lods
inc
fiaddl
loop
lcall
pop
ret
add
or
mov
xor
enter
lret
jmp
push
inc
jnp
popa
stc
mov
test
add
shrl
lds
push
test
cmc
adc
mov
and
cmp
incl
stos
jle
mov
stos
mov
xlat
pop
in
into
add
fcomip
clc
dec
cwtl
inc
add
add
pusha
insl
jo
or
ds
jb
ljmp
inc
push
mov
cmpsb
inc
or
adc
outsb
lock
mov
scas
xor
out
es
call
xor
add
daa
mov
sub
in
out
cmp
rcll
pop
add
les
cmp
adc
cwtl
xor
and
loope
dec
out
fidivs
add
setae
or
xchg
or
jl
flds
mov
cmp
enter
jmp
and
pop
ret
sub
ror
scas
and
add
icebp
mov
aad
push
icebp
lahf
stos
inc
adc
dec
dec
leave
iret
push
push
dec
scas
and
push
push
inc
inc
mov
push
and
int3
cmp
mov
jae
dec
sub
gs
mov
shlb
pop
stc
je
or
leave
cwtl
xchg
and
in
sbb
add
aaa
loope
ljmp
int3
roll
push
xchg
mov
cs
dec
incl
out
adc
pop
loopne
and
stos
sub
mov
add
mov
add
shrb
imul
push
sub
jl
stos
lods
inc
or
push
repz
cmc
mov
ret
mov
adc
std
inc
xchg
mov
or
and
fsubr
mov
push
dec
lcall
stos
lds
arpl
pmaxsw
inc
in
cld
fst
test
jg
aas
add
adc
sti
scas
call
stos
mov
aaa
cld
outsl
adcb
mov
movsb
pop
inc
or
xchg
les
out
mov
sub
les
push
decb
loopne
sarb
xchg
inc
mov
cmpsl
add
or
frstor
fwait
push
and
pop
hlt
scas
pop
push
clc
sub
movsb
dec
mov
adc
incl
sbb
add
sbb
fcoms
fst
and
sub
cmp
adc
jbe
mov
xor
push
mov
push
add
mov
call
in
mov
add
add
sub
es
pop
add
arpl
push
jg
inc
push
pop
push
xchg
mov
sbb
rorl
sar
pop
notl
lock
std
mov
mov
adc
mov
xchg
hlt
pop
mov
adc
cli
imul
loopne
rcrb
inc
js
jnp
sbbb
outsl
scas
sbb
dec
push
pop
ljmp
push
or
mov
lcall
rorb
cs
jb
mov
jg
scas
jecxz
ds
decl
cmp
enter
pop
inc
loope
sub
sbb
inc
or
mov
das
incl
jl
add
jl
or
filds
and
mov
rcl
inc
and
popa
fbld
stos
incl
lods
dec
ds
xchg
lret
stos
sahf
loop
inc
lcall
cmp
test
push
cld
pop
cld
jp
jmp
mov
sub
add
mov
das
clc
sub
sbb
jecxz
mov
cmp
adc
jo
popf
cltd
loopne
andb
adc
adc
dec
inc
adc
sbb
lods
pop
ljmp
push
push
jg
sbb
shrl
cmp
add
in
test
mov
movsl
cmc
adc
sub
outsl
subl
xchg
mov
outsl
mov
sub
clc
in
jecxz
mov
xchg
ret
je,pn
popf
cmp
std
mov
stos
or
dec
pop
and
mov
adc
outsl
inc
shlb
jbe
test
push
bound
adc
daa
add
sub
into
push
jbe
lcall
icebp
std
jbe
repz
xchg
add
adc
sub
inc
out
cmp
lcall
mov
loope
rclb
xor
loop
adc
int3
nop
adc
jcxz
mov
xchg
ss
and
lock
in
aad
sbbl
adcb
jl
jl
arpl
and
fmul
pop
cmp
movsl
adc
add
jns
mov
es
inc
insl
mov
cmp
aas
inc
movd
cs
repnz
pop
and
sub
mov
popa
jbe
add
push
dec
pusha
xchg
add
mov
sarb
shrd
xor
pop
jmp
inc
sbbl
cmpsl
gs
ja
adc
xchg
push
sub
or
jns
sub
jg
fs
mov
jo
inc
xor
dec
xchg
ljmp
cmc
mov
pop
add
inc
sbb
cmp
jg
clc
lds
inc
push
dec
cmc
cmp
sbb
call
inc
mov
mov
insb
push
adc
lret
lods
push
adc
aam
add
xor
or
mov
lods
setae
shlb
mov
in
xchg
or
jnp
dec
imul
in
xchg
mov
ss
and
and
adc
rcll
cmc
fistpl
fdivp
mov
xor
dec
clc
adc
cmp
adc
pop
popa
cld
dec
lcall
lods
fdivrp
dec
lcall
push
mull
repz
xchg
mov
add
dec
mov
sbb
in
dec
mov
fnclex
loop
jns
nop
pop
jg
push
xor
and
and
cmpsb
push
enter
or
insl
and
inc
leave
incl
insl
ds
pushf
or
mov
pop
insl
and
and
cmpsb
push
clc
jg
imul
add
cld
adc
in
das
and
jno
or
and
jbe
xchg
test
iret
jmp
cmpsl
ja
aas
sti
fsts
pushf
imul
scas
adc
cmc
push
aas
mov
mov
arpl
push
das
pop
shlb
jge
ljmp
and
adc
adc
push
jp
xchg
outsb
mov
fbstp
mov
dec
add
sbb
add
cmc
in
cmp
mov
test
rolb
pop
mov
add
jne
lock
outsl
push
and
xchg
mov
pushf
dec
jo
mov
push
mov
cmp
cmpb
add
mov
mov
test
mov
xlat
mov
scas
push
loopne
out
mov
movsl
inc
jo
inc
mov
add
rorl
hlt
cld
jo
cmp
pop
mov
jo
cli
ja
inc
mov
and
adc
decl
push
and
inc
mov
mov
dec
inc
dec
sbb
bound
xor
stos
lea
lods
adc
inc
clc
fsubrl
or
xor
mov
filds
and
dec
flds
out
rorb
pusha
xchg
pop
enter
subb
cwtl
cmp
cmp
xchg
sbb
mov
pop
inc
gs
loop
clc
add
push
mov
mov
hlt
mov
xor
cwtl
mov
in
cmpsb
lods
add
push
and
lock
jo
cli
cmpsb
push
sub
dec
lcall
xchg
sub
outsb
nop
xor
shlb
pop
inc
incl
dec
andl
call
push
js
jb
test
in
mov
push
sub
mov
add
push
pushf
fucomip
add
pop
cmpsb
xchg
sbb
rorl
insb
fcmovne
dec
jo
filds
add
mov
dec
sub
cmp
cld
push
sbb
push
dec
arpl
mov
lahf
cmp
shl
cmc
test
rolb
pop
mov
mov
sub
leave
mov
push
xchg
pop
lds
cld
jle
dec
and
inc
lret
lods
dec
inc
test
int
incl
push
fcoms
cmp
arpl
andl
pop
clc
inc
out
pusha
aam
ljmp
sub
mov
mov
cli
adc
in
sbb
sub
or
jg
sub
inc
or
push
pop
test
ds
mov
das
mov
or
jg
popa
dec
mulb
mov
clc
add
sub
lds
shll
scas
xor
adc
push
outsl
je
push
lcall
sbb
data16
fadd
add
and
movsb
ret
loopne
sub
aad
in
mov
mov
dec
jb
adc
mov
out
and
incl
push
jae
nop
lock
lods
clc
pushl
pop
sbb
ret
add
jp
fdivrp
sbb
fstpt
inc
xchg
add
insb
ljmp
mov
inc
and
push
dec
mov
pusha
push
insb
mov
inc
int3
push
mov
stos
mov
lahf
or
add
mov
enter
into
movsl
inc
push
aam
nop
push
cmp
dec
repnz
ljmp
adc
dec
inc
test
dec
mov
sub
fistps
cmp
loop
add
enter
mov
push
push
add
shr
outsb
and
jg
push
pop
mov
push
popa
add
es
jmp
or
mov
push
mov
mov
jg
test
sbb
and
pop
bswap
mov
dec
test
sub
or
dec
fisubl
ljmp
mov
test
adc
shll
pop
cli
fists
jp
pop
adc
or
sub
ljmp
aad
aas
xor
dec
test
daa
push
enter
jmp
add
and
stc
inc
es
add
mov
ds
call
inc
xor
roll
mov
decl
push
inc
xor
mov
xchg
ljmp
jb
adc
dec
popf
cld
outsl
inc
add
ss
sbb
mov
pop
dec
ds
mov
xchg
movsl
sarl
sbb
shr
lds
je
add
or
jmp
cld
aam
adc
push
push
sbbb
add
dec
pop
mov
fwait
sub
aaa
cld
mov
mov
xor
cmpb
hlt
dec
mov
push
mov
pop
rclb
sbb
add
frstor
mov
xlat
mov
push
mov
out
jmp
dec
stos
and
ljmp
xchg
ret
push
adcl
xchg
cwtl
rol
sub
dec
iret
dec
out
cli
push
mov
lock
pop
push
popf
inc
addr16
ret
jl
adc
jmp
mov
and
push
pop
rcrb
and
lret
sub
mov
addr16
push
repnz
test
jo
incl
je
cmc
xor
lcall
push
lods
xor
stos
arpl
sarl
adc
inc
add
outsl
popa
mov
add
jo
call
dec
popf
push
stc
add
jo
repnz
roll
and
mov
arpl
add
sar
nop
aaa
in
insb
add
sbb
xchg
push
in
dec
sbb
lock
cmpb
jg
jp
or
sub
fmul
sub
cli
dec
loopne
ds
push
xchg
push
stc
movsb
and
inc
sbb
bound
cltd
fsub
push
aam
ljmp
cmp
fwait
test
addr16
sbb
or
mov
dec
add
faddl
xor
mov
ljmp
adc
or
xchg
in
push
add
add
xchg
push
jb
push
lcall
inc
push
outsl
fistps
add
cmc
or
xor
mov
fists
and
add
add
lret
in
fwait
ss
mov
movzbl
cli
jb
or
add
mov
sarb
lret
sub
sbb
dec
shlb
aad
ret
xchg
sbb
scas
popa
addb
test
adcb
or
ss
cmp
popa
scas
add
shll
mov
ficompl
mov
lods
xchg
push
pop
adc
or
cli
das
cmpb
ds
outsb
dec
push
and
xor
pop
popa
addb
fiaddl
cld
ret
sar
jmp
inc
into
pop
jnp
cmp
jo
xchg
push
dec
mov
jns
fcmovne
cmpsb
repz
inc
cld
ljmp
cltd
loop
or
cmpl
mov
clc
or
lds
scas
xor
inc
pop
icebp
add
mov
jp
fs
mov
jl
xchg
fs
sbb
mov
lock
lds
sti
pop
iret
mov
sbb
das
inc
push
sarl
loopne
js
push
ljmp
jnp
movsl
loopne
xchg
subl
pusha
jle
aad
sarb
ljmp
rolb
add
mov
lea
mov
lock
sub
sti
flds
test
add
lock
mov
add
add
shrb
stc
xchg
or
call
pop
pop
mov
cmp
jnp
push
dec
add
out
xor
mov
and
or
inc
xor
xlat
push
mov
leave
push
add
gs
mov
jmp
dec
add
es
adc
pusha
daa
imul
pop
loope
in
outsl
and
dec
adc
lds
lds
rcr
fmull
sbb
jg
cld
inc
add
fwait
jmp
aaa
mov
ret
sub
fcomps
cmp
shlb
loopne
ja
fimull
andl
add
movsb
mov
push
dec
inc
es
pop
add
jae
jbe
es
and
ja
psubq
je
fadd
bound
cld
mov
inc
inc
lods
add
inc
mov
jo
sti
leave
or
fistps
xor
mov
xchg
mov
lcall
mov
cmp
add
fwait
or
push
mov
es
jge
and
adc
lcall
popf
fimull
sbb
add
call
out
adc
jb
cwtl
push
push
pop
add
pushf
xor
rcll
ljmp
add
out
nop
leave
ja
popf
dec
movb
hlt
rolb
jg
dec
pop
cwtl
aam
and
sub
pop
enter
cli
lods
movsb
aad
push
inc
out
or
stos
jo
xchg
int3
scas
and
hlt
ret
sarb
mov
loopne
push
sbb
sub
add
xor
push
outsl
mov
mov
lods
pop
js
adc
iret
es
xchg
xchg
call
scas
pop
push
add
pop
data16
ficoms
mov
sbb
into
aam
cmp
inc
incl
mov
das
lods
pop
andb
clc
xchg
lock
adc
sub
adc
xor
mov
lods
clc
cld
cmp
sub
andb
adc
and
lcall
push
lods
or
xchg
leave
shll
sarb
add
dec
push
incl
xor
push
or
mov
cmp
adc
ret
pop
repz
insl
push
aad
jle
xchg
lock
sbb
lret
mov
clc
outsb
outsb
or
stos
pusha
sub
pop
or
mov
movsb
xchg
lret
mov
xchg
les
xor
xchg
out
fidivrs
jg
xchg
mov
in
gs
xchg
add
sbb
cmc
inc
sbb
jno
mov
loopne
je
mov
scas
push
mov
adc
stc
or
jo
push
xchg
jg
pusha
xor
in
adc
and
pushl
pop
adc
fbld
sti
jecxz
aad
lds
cmp
enter
insl
xor
mov
rorl
and
jge
jno
and
sub
jle
jo
and
subl
or
outsl
roll
shll
imul
mov
sti
add
sub
stc
sbb
outsl
test
inc
fs
insl
test
cmpsl
add
push
jne
fldl
xchg
or
pop
jmp
sub
es
dec
ret
add
jg
dec
sti
addr16
dec
mov
xchg
mov
cmp
sbb
data16
aam
inc
aas
jmp
movsl
incl
jle
pusha
mov
aas
add
jmp
xor
add
or
sub
add
roll
test
xchg
jmp
jb
insb
bnd
add
loope
out
xor
or
adc
movsl
out
inc
lods
jbe
std
scas
pop
hlt
cmp
cmp
jmp
mov
repz
shr
int
in
add
clc
xchg
adc
shlb
mov
sahf
ret
bound
ljmp
cmp
loopne
sub
movsb
jle
or
pushf
fs
or
imul
scas
mov
cld
sbb
jne
lcall
nop
aas
repnz
pop
cmp
mov
mov
dec
pushf
iret
rcr
jne
cmp
xchg
ja
loopne
xor
push
fisubrs
adcb
pop
test
cwtl
ljmp
cmp
mov
or
inc
fstpt
or
mov
xor
shl
jge
xor
scas
jmp
inc
inc
xchg
stos
daa
stc
das
sbb
lds
or
mov
repz
add
mov
xchg
pop
mov
dec
xor
outsl
imul
rcrl
pop
or
adc
cmp
scas
xchg
repnz
std
ss
jbe
adc
pop
fisttpll
pop
cmp
rclb
pop
inc
loopne
add
cltd
daa
jg
test
and
fadd
mulb
js
add
sbb
push
push
cmp
jnp
mov
and
mov
mov
sub
mov
aam
mov
stos
sub
sub
dec
add
test
pop
jmp
pop
jmp
add
in
dec
add
in
inc
fscale
test
sub
mov
mov
mov
mov
xor
pusha
cltd
inc
dec
adc
int
adc
stos
jne
cmp
aad
loop
aad
cld
hlt
dec
cmpb
add
add
inc
into
mov
mov
adc
xchg
ret
push
adcb
mov
xor
ljmp
aad
mov
mov
lods
nop
push
outsl
ss
cmp
pop
aam
jbe
mov
out
into
int3
sbb
push
sub
lahf
loop
xor
mov
decb
push
xor
xchg
sub
sbb
fs
out
mov
out
push
decl
lds
xchg
out
das
cmp
adc
addr16
scas
test
test
push
aaa
mov
adc
xor
and
dec
rcrl
mov
loope
mov
sbb
shll
sub
aaa
dec
cmp
cmc
fs
or
sbbl
inc
bound
lds
sbb
in
sub
sahf
mov
push
xchg
loope
aas
pushl
ds
adc
and
cwtl
adc
mov
and
adc
cwtl
and
cmpsb
icebp
mov
add
sub
cmp
add
js
push
mov
jb
pop
add
incl
sbb
mov
sub
sub
icebp
xchg
jg
jge
inc
cmp
xor
sub
fidivrl
adc
js
lock
js
dec
mov
loop
fwait
stos
pop
add
mov
in
arpl
iret
jnp
std
mov
jp
cmp
pop
pop
adc
or
jnp
jae
adc
cwtl
out
movb
pop
pop
pop
orl
sbb
out
fwait
sbbl
and
and
mov
mov
sar
push
std
scas
hlt
sub
inc
incl
sub
add
and
std
push
std
jno
fsts
test
add
jl
pop
sbb
cwtl
adc
cli
push
push
pushf
pop
rolb
cld
mov
push
cld
mov
cltd
mov
fsubrs
mov
ret
scas
call
lods
fwait
rcl
pop
lods
mov
mov
pop
xor
adc
or
gs
stos
dec
jl
cmp
sbb
dec
hlt
pop
daa
cmp
push
inc
inc
sub
mov
adc
push
aas
sbb
push
adc
add
hlt
mov
mov
mov
mov
or
xchg
scas
incl
loope
push
lods
mov
add
cmc
pop
xor
filds
add
jl
inc
and
pushl
dec
test
lods
jmp
cwtl
push
mov
lahf
or
sbb
push
adc
mov
adc
push
imul
jb
push
test
popf
in
scas
add
rclb
outsl
jle
pusha
adc
vpmadcsswd
pop
push
or
pop
jl
adc
cmp
pushf
inc
je
mov
arpl
enter
sti
dec
cld
cmp
or
test
mov
fyl2xp1
out
push
sar
push
es
jbe
movsl
push
mov
pop
call
daa
add
push
stos
scas
daa
fidivrl
dec
cmp
pop
dec
and
inc
daa
jmp
jmp
mov
test
mov
jb
js
mov
lods
scas
andl
movsl
sub
lods
add
adc
jg
sahf
loop
mov
add
cs
dec
sbb
clc
push
pushf
test
pop
shlb
cmpsl
mov
jge
les
mov
fwait
jle
mov
inc
add
cmp
lahf
dec
mov
sbb
sti
mov
xor
lahf
ljmp
leave
aas
pop
scas
je
lock
sub
sub
cmpb
xchg
mov
adc
add
add
orl
or
ret
fimull
mov
mov
jb
cmp
mov
pop
or
shrl
pop
jbe
adc
shll
imul
cli
aas
cmp
enter
pop
sbb
js
test
or
ret
ficoml
dec
add
imul
or
sub
not
add
mov
sbb
add
jecxz
push
cmpsb
jnp
loope
neg
mov
bound
pop
and
cmpsl
popa
in
or
incl
push
pop
add
and
pop
out
mov
ret
jnp
push
mov
js
andl
pop
mov
aas
xor
mov
in
sbb
mov
sub
mov
adc
lcall
lea
and
loope
movsb
xchg
addl
test
add
sbb
lahf
cmpsb
inc
aas
lods
and
pop
sub
lock
and
ror
lea
sbb
fists
bound
fwait
out
sbb
js
loopne
cmpsb
sbb
jl
mov
arpl
test
push
mov
lcall
rcrb
nop
xor
jle
xor
inc
add
mov
mov
push
mov
cli
add
jnp
fmul
jmp
insb
and
sbb
incl
pop
out
dec
or
xor
inc
mov
inc
jle
mov
decl
lock
arpl
ja
inc
cmp
mov
jg
dec
int
subb
dec
sbb
lret
xchg
xor
or
notl
xor
pop
repz
push
insl
push
jp
fidivs
test
push
jmp
fwait
mov
sub
xor
cli
decl
dec
add
adc
or
push
add
lock
mov
adc
rorl
adc
ret
lret
pop
stc
mov
loope
test
and
dec
push
dec
dec
xchg
xor
shlb
out
add
dec
and
es
sarl
decb
test
lds
int
stos
divb
test
jg
or
and
sub
fdivr
lahf
loop
push
movsl
or
mov
mov
pop
xor
es
pop
inc
pmuludq
add
cwtl
mov
sub
and
xor
cmp
icebp
filds
push
push
pushf
pusha
and
cld
mov
loopne
mov
lock
jo
sub
shlb
mov
xchg
xchg
lods
mov
mov
add
inc
jnp
test
dec
push
adc
inc
push
sbb
aam
pop
lea
test
pushf
xchg
add
add
jmp
jge
stos
sub
add
xor
cmp
pop
or
call
xlat
xor
mov
or
lods
pop
out
add
ror
call
and
cli
mov
stos
adc
insl
lahf
cltd
test
cs
call
dec
and
rclb
jp
adc
xor
sbb
cmp
cmpsl
mov
fistpl
jecxz
imul
sbb
cmp
sar
add
or
fcmovnb
cli
mov
stos
outsb
sbbb
and
and
out
lcall
dec
add
adc
lea
aas
int3
fdivrs
push
stos
cld
xchg
dec
into
andl
mov
arpl
rcr
inc
pop
repz
pop
mov
push
jae
add
test
std
dec
xchg
add
pop
and
and
adc
sahf
lahf
jmp
lret
pop
adc
jbe
cmp
aas
in
fs
sub
jl
mov
sbb
enter
pop
pop
mov
jb
inc
ret
mov
nop
ret
push
lcall
inc
push
loope
ljmp
mov
rorl
rolb
fmull
xor
pop
js
into
in
mov
rclb
mov
mov
mov
add
add
mov
sahf
test
in
mov
pop
add
add
xchg
and
sub
pushf
aad
sbb
imul
neg
push
mov
mov
dec
jno
xor
jle
and
pop
ljmp
test
pop
add
in
push
sbb
mov
jecxz
rorl
out
clc
icebp
les
xchg
xor
daa
mov
cld
stos
pop
into
add
mov
shrb
xor
xor
add
movsb
test
push
adc
and
clc
lods
inc
push
mov
xorl
mov
out
xor
shlb
lds
cmpsb
xor
mov
clc
repz
pop
and
lods
pushf
aam
int3
imul
and
jb
daa
icebp
in
pop
adc
pushf
pavgb
inc
add
dec
pop
loopne
insb
enter
cmp
orl
fimull
sbb
std
adc
push
arpl
fs
stos
adc
std
dec
jbe
aam
adc
mov
dec
jge
mov
xor
and
add
daa
mov
popf
lock
cmp
cmp
sub
fists
subb
mov
inc
mov
dec
mov
jb
pop
mov
push
xlat
sub
imul
popf
in
addr16
bound
push
sbb
cmpl
push
jecxz
cmpsb
mov
mov
adc
sarb
out
popa
jmp
test
incl
and
fidivrs
incl
jecxz
sahf
jmp
outsl
pushl
jmp
jno
mov
mov
pop
ret
out
loopne
mov
pcmpgtw
imul
or
xlat
hlt
lods
push
and
loopne
push
jo
or
cmpsb
xor
pop
add
pusha
and
hlt
lahf
lock
inc
out
ret
ljmp
xchg
arpl
test
ljmp
cmp
cmp
ds
pusha
icebp
jmp
inc
nop
mov
pop
shll
cmp
test
hlt
add
mov
mov
adc
cmp
dec
call
mov
mov
push
ret
outsb
cmp
mov
or
dec
sbb
sbb
xlat
inc
mov
lcall
pop
mov
sbb
mov
ljmp
add
jl
invd
sbb
mov
fwait
jecxz
fildll
jmp
inc
dec
sub
jae
jle
insb
out
idivb
cld
inc
in
or
xchg
orb
jg
in
pop
adc
adc
xor
or
mov
push
pusha
mov
lcall
xchg
cli
and
xor
cmp
inc
xor
pop
lock
mov
lcall
adc
in
dec
or
inc
std
inc
test
cmp
cwtl
int3
or
imul
xchg
jbe
xor
incl
xor
out
cltd
inc
or
mov
dec
into
cmc
hlt
mov
mov
push
inc
dec
mov
push
scas
loop
jmp
mov
call
shll
inc
sbb
push
popa
mov
sar
cld
imul
out
int
adc
sbb
and
add
pop
push
cmp
jo
cli
cmpsl
xchg
xchg
adc
pop
or
mov
in
adcb
out
jmp
and
pop
cmc
xorl
rolb
out
dec
jo
xchg
xchg
imul
mov
and
dec
adc
xor
push
adc
daa
loop
xchg
inc
adc
outsb
mov
add
add
mov
cltd
adc
js
pusha
popf
and
pop
add
in
inc
or
inc
addr16
movsb
test
cwtl
outsb
rcrb
sbbb
ja
stos
sub
sar
cltd
cmp
fstps
adc
lock
jl
bound
loop
mov
in
pop
out
sbb
add
adc
mov
push
push
ss
lods
cltd
loope
push
call
jno
insb
stc
adc
out
push
sbb
adc
mov
and
mov
and
decl
jmp
int3
mov
xchg
fs
mov
pop
fwait
cmpsl
xchg
mov
rorl
cld
pop
inc
lahf
cld
inc
pop
outsb
sahf
ds
mov
lahf
jg
dec
lahf
shl
icebp
sbb
subb
mov
xor
and
rorl
mov
test
hlt
inc
stos
pop
pop
jb
pushl
pop
adc
imul
pop
vmovlps
adc
ficoms
xor
add
enter
aaa
inc
and
pop
enter
adc
aaa
sub
adc
icebp
sbbb
cltd
pop
adc
in
xchg
lds
notb
stc
xor
dec
dec
inc
xchg
mov
ret
aas
xlat
aas
clc
sub
out
movsb
in
mov
jo
hlt
test
add
fwait
push
mov
inc
xor
cwtl
stos
and
call
cmp
and
dec
clc
lock
mov
push
mov
sbb
jne
movsb
inc
lret
mov
fidivrs
sbb
ret
dec
sar
push
jl
sahf
das
out
sbb
scas
push
mov
into
lock
icebp
push
imul
push
adc
mov
adc
dec
xchg
divb
adc
scas
icebp
fdivr
pop
jmp
daa
pop
cmpsb
repnz
stc
imul
mov
cmpl
lahf
cs
iret
popf
adc
enter
xchg
fdivrp
or
and
cmpb
inc
jecxz
movb
ret
insb
test
mov
push
sbb
or
pop
cmpsl
mov
popf
jp
pushf
aas
push
mov
dec
dec
iret
imul
ljmp
adc
jge
insb
mov
movsb
les
push
shll
adc
cli
push
ret
clc
flds
or
cmc
rolb
and
push
les
or
inc
stos
rorb
push
cli
notb
bound
dec
movswl
cmp
in
push
inc
pusha
dec
testl
rorb
stc
xchg
mov
call
add
fmuls
mov
cmp
loope
cli
jmp
movb
stos
sbb
aam
shll
paddusw
pop
pop
shll
adc
in
inc
lea
cld
and
mov
filds
inc
cwtl
xchg
lret
push
cmp
scas
add
into
inc
push
mov
sbb
push
jae
sbb
jg
sub
push
inc
cmpsl
bound
jbe
inc
aaa
cmp
loopne
sbb
dec
push
test
test
mov
fisttps
cwtl
imul
lods
ret
hlt
fwait
mov
inc
sbbb
sub
fimull
add
inc
and
inc
fstp
adc
xor
add
test
push
daa
sbb
mov
mov
inc
ret
fists
cmpsb
pop
ficoml
mov
adc
jnp
push
mov
adc
inc
sbb
xchg
xor
or
inc
scas
rcl
cltd
inc
inc
outsl
jmp
sbb
lds
mov
mov
int3
mov
sbb
mov
or
inc
rol
xor
xchg
out
add
and
cld
or
sub
dec
and
in
sarb
add
out
clc
sub
or
icebp
ljmp
push
pop
popa
inc
mov
push
cmpb
xor
mov
ret
test
lock
jae
test
inc
push
insb
or
ret
flds
mov
fnsave
xlat
sub
mov
jg
push
aad
add
jnp
sub
jle
in
fildll
in
inc
std
mov
ret
mov
loopne
pop
sub
sub
data16
dec
jge
pop
sub
sahf
cli
loopne
jmp
sbb
jno
stos
mov
lahf
dec
push
popf
sub
lock
add
adc
rcl
js
loop
jnp
or
xor
insl
sub
shlb
int3
sbb
bound
pushl
add
dec
push
push
add
jp
xor
int3
pusha
add
adcl
pop
mov
outsl
push
xchg
adc
adcl
imul
xor
inc
xlat
xor
adc
mov
ret
and
ljmp
jns
jp
pop
je
stos
ja
or
push
daa
pop
movq
les
jmp
add
adc
add
lock
pop
xor
cli
shr
push
hlt
jg
sub
jecxz
add
adc
test
psubusw
cld
mov
insb
flds
adc
das
sub
loope
or
outsb
mov
sahf
mov
push
stos
xor
mov
jo
add
test
data16
sbb
pop
loopne
sbb
out
cmp
or
adc
inc
lcall
scas
sahf
mov
adc
flds
mov
lock
push
dec
and
fdiv
sbb
pop
loope
and
lret
stos
ret
xor
addr16
xor
lcall
shll
mov
push
gs
dec
jmp
cwtl
mov
repnz
or
push
ljmp
jecxz
aas
lahf
pop
or
sbb
popf
fld
jg
mov
push
test
fs
paddd
decl
mov
les
sub
jb
xchg
pushf
xor
incl
jbe
push
fmuls
pop
adc
fnstcw
gs
aam
pushf
out
mov
je
mov
jmp
jmp
js
or
push
mov
adc
nop
push
inc
add
insb
adc
sbb
call
imul
flds
dec
mov
xor
sbb
je
jbe
jbe
pusha
arpl
sbb
enter
jl
sbb
jl
daa
and
mov
xor
push
dec
sub
add
cs
das
and
sub
dec
repz
mov
mov
mov
add
dec
inc
push
or
loop
lods
jg
cmp
add
cmovs
or
add
or
loop
fstps
int
int3
jecxz
cld
nop
in
nop
aas
mov
lahf
mov
popf
test
xchg
add
push
push
mov
repnz
push
mov
jmp
lea
shrb
and
jp
divb
xabort
test
mov
jo
add
sbb
cmp
cmp
cli
xchg
subb
icebp
out
enter
jl
mov
imul
mov
inc
adc
cmp
mov
sub
and
mov
lahf
add
in
jb
sub
data16
push
ja
loope
aaa
ret
pop
test
test
jae
orb
add
call
adc
add
das
dec
or
or
jg
sub
iret
push
push
call
clc
andl
lret
int
dec
mov
fdiv
dec
clc
decl
inc
inc
adc
mov
push
decl
mov
js
adc
lcall
test
push
cli
mov
lret
jno
shlb
inc
cli
loopnew
cmp
loope
outsl
xor
and
test
push
inc
call
es
xor
loopne
or
xor
jl
pushl
sub
add
into
das
cli
dec
push
stc
cmp
data16
popa
add
jo
js
add
pop
cld
int
jle
adc
pop
scas
lock
clc
pop
sub
adc
gs
push
fcoml
pop
into
lock
fistps
leave
cmp
mov
popl
inc
jg
int3
or
mov
sbb
mov
pop
inc
test
xchg
xchg
add
mov
ret
std
mov
xchg
mov
movsl
out
mov
inc
cli
or
mov
ss
mov
movsb
test
xor
pop
jmp
lcall
lock
fdivl
xor
dec
adc
int
mov
test
dec
pop
pushl
test
neg
fisubl
mov
les
scas
mov
adc
and
mov
jl
jmp
add
loop
rcl
xchg
xor
or
inc
iret
js
adc
adc
pop
xchg
lods
pop
mov
adc
in
inc
pop
dec
scas
aam
mov
and
pushl
mov
pushf
xchg
sbb
pusha
push
push
inc
add
xchg
lea
sub
stos
cmpb
cmpb
jle
mov
add
fsubrs
add
popa
out
ja
or
pop
and
xor
movups
hlt
ljmp
inc
bound
sbb
mov
or
aaa
aas
dec
cmp
push
pushl
leave
sbb
jae
push
adc
push
es
dec
inc
shlb
jae
fmull
test
cmp
dec
lret
cld
sahf
or
subb
jge
add
xlat
push
fadd
aam
movsb
xchg
cmpsb
add
nop
in
stc
add
dec
or
mov
push
xchg
or
inc
cmp
add
stos
dec
pop
jecxz
roll
repz
fdivr
incl
xchg
loop
and
sbb
mov
and
out
subl
nop
out
push
inc
aam
jg
lock
mov
cmp
daa
xor
sub
xor
adc
sbb
loopne
fwait
clc
or
adc
sub
mov
in
sub
jg
fiadds
je
arpl
sbb
cmpsb
ficoml
xchg
and
inc
ja
cmp
decl
or
insb
mov
push
mov
ljmp
jbe
push
mov
pop
fs
inc
add
cmp
mov
imul
test
add
mov
add
nop
incl
xchg
sub
aas
cmpb
and
jns
dec
addr16
mov
cmp
lock
data16
mov
enter
xorl
jae
insl
popf
pop
int
mov
xchg
inc
or
dec
and
push
movb
add
pop
sub
push
adc
push
jl
adc
sub
xchg
cmp
aas
pop
xchg
mov
mov
fldl
push
cmpsl
arpl
aas
stos
push
jl
adc
adc
test
cmp
imul
repz
jl
ljmp
add
pop
jecxz
aam
lds
mov
push
ret
mov
lcall
pop
mov
rcll
sbb
xor
aas
push
movsb
cmp
adc
and
and
push
int3
in
lahf
and
popa
xchg
mov
xchg
cld
pop
orl
pop
std
pop
add
fbstp
push
dec
push
mov
popf
pop
fldl
addl
mov
jg
push
out
filds
jg
push
stos
cwtl
lods
mov
jb
sbb
ljmp
aaa
add
cld
inc
mov
or
add
cld
movsl
pop
in
mov
ret
loope
xchg
and
ss
dec
pop
mov
arpl
lods
rcrl
pop
inc
out
adc
xlat
push
xor
xchg
add
dec
arpl
aas
jl
and
push
dec
adc
mov
xlat
pop
xchg
cwtl
xchg
add
sbb
int
jb
call
push
insb
adc
cmp
test
out
es
rorb
xor
mov
shll
lcall
jns
dec
loopne
add
jne
or
fs
jge
pusha
test
outsl
clc
call
add
lret
pop
xchg
fadds
outsb
in
or
adcl
push
jmp
je
test
xchg
mov
lock
aas
jb
cmc
out
jne
popa
bound
or
fs
aaa
decl
cmp
cmp
mov
test
shll
inc
mov
loopne
xor
pop
cmp
ljmp
fsubl
rclb
add
daa
dec
push
jo
outsl
add
push
pop
loopne
and
scas
fisubl
or
pusha
sub
pop
adc
and
and
fs
repz
loop
cmp
repz
sub
repz
hlt
lcall
inc
mov
inc
and
ficoms
decl
lahf
lds
scas
cli
jp
add
sbb
pop
rcrb
push
mov
push
fcomip
xor
mov
dec
jbe
clc
popf
xor
decl
test
mov
lret
int
adc
lahf
call
xor
add
jno
jg
lret
cmp
and
cmpsl
pusha
lret
repz
add
push
and
ljmp
jl
lcall
aaa
xor
leave
inc
and
ss
pushf
gs
sub
dec
mov
in
or
cmpsb
addr16
sub
popa
sub
inc
lea
xchg
jno
mov
clc
mov
jg
jg
sbb
sbb
adc
and
cmpsl
sub
jmp
inc
inc
addr16
push
sbb
rcr
sub
xor
lcall
pushf
xor
gs
mov
inc
mov
sub
jge
cmp
insl
in
and
shll
cltd
movsb
xchg
mov
aas
hlt
mov
and
ret
hlt
aad
lret
or
inc
shlb
orl
fbld
mov
stc
mov
pop
sahf
or
das
add
stos
movsb
add
sbb
fiaddl
and
push
ljmp
fistpll
xchg
xchg
aaa
insb
push
sub
xchg
sbb
push
cs
mov
cwtl
je
jle
cli
test
mov
fisttpl
fldenv
adc
jge
lods
push
sbb
decl
std
jg
stc
mov
xchg
rcl
in
ljmp
adc
mov
std
jne
add
mov
ja
add
cmp
cmp
push
repz
insb
add
out
sti
fwait
inc
les
mov
jg
lods
add
pop
cltd
inc
in
pop
dec
fisttps
inc
cli
mov
fstpl
pusha
dec
inc
dec
lea
mov
xchg
push
loopne
mov
xchg
or
sbb
jle
gs
jg
mov
sub
and
cli
mov
mov
fldl
mov
ss
push
pop
jp
in
clc
mov
mov
shlb
add
push
mov
xchg
gs
mov
mov
jae
xchg
cld
mov
add
mov
mov
inc
out
xchg
and
cld
hlt
sbbb
push
push
jne
pop
mov
lcall
sub
popf
rolb
imul
jmp
fstps
in
cmp
bound
mov
mov
push
push
mov
adc
fdivp
push
loopne
clc
adc
add
mov
dec
std
scas
adc
inc
aas
inc
inc
push
outsb
jo
mov
mov
push
and
mov
popa
out
mov
mul
pop
fdivr
incl
sbb
addl
mov
sbb
mov
or
mov
enter
add
dec
sbb
pop
les
sbbb
adc
cli
mov
cwtl
adc
xlat
sub
arpl
inc
mov
movsl
push
inc
inc
cmpsl
mov
mov
push
push
test
inc
push
mov
mov
dec
add
pop
call
rorl
lret
xor
push
lret
test
xchg
inc
idiv
xchg
jecxz
arpl
ds
sbb
aas
adc
rorb
dec
les
xchg
jg
ss
add
or
or
test
pop
shl
addb
dec
push
aam
scas
stc
out
sub
aam
ss
adc
xor
aas
cmpsl
mov
lret
jbe
add
or
sub
arpl
xorl
out
xor
test
das
pushl
fsub
cmp
and
cli
xor
mov
aam
adc
xchg
incb
cmp
push
gs
lahf
push
ljmp
cld
jae
nop
jmp
testb
mov
std
sub
mov
testb
pusha
mov
je
scas
and
sar
scas
cmpb
lds
into
call
outsl
shlb
cmp
adc
leave
pop
sahf
cmp
sbb
pop
xor
mov
test
inc
or
lcall
cld
rcrb
pop
aaa
jmp
jl
cld
inc
adc
jp
incl
sbb
icebp
je
sbbb
lahf
and
jne
int
adc
and
jmp
mov
int3
lcall
enter
jge
sub
cltd
test
or
cli
jg
or
pop
sbb
lea
lret
cmp
stos
ljmp
jns
push
and
mov
packuswb
mov
sbb
scas
mov
or
js
jl
cmp
lds
add
mov
stos
inc
lods
mov
inc
inc
stos
aam
addr16
pop
es
clc
or
push
pop
in
adc
loope
adc
or
mov
push
iretw
sbb
mov
adc
scas
or
in
movsl
and
add
iret
cld
sub
das
pop
inc
sub
xchg
inc
fcoms
insb
in
notl
push
mov
mov
xchg
fstps
fwait
popf
dec
cmp
or
ss
rcrl
ret
fildll
inc
mov
push
pusha
sub
dec
ret
aaa
clc
mov
add
sub
add
arpl
rcr
push
test
dec
inc
push
or
fisubl
aam
pop
adc
iret
stc
je
stos
or
sbb
adc
fildll
sti
scas
jnp
jmp
movsb
adc
add
leave
sbb
clc
incl
jo
ss
enter
rorl
adc
mov
mov
xchg
incl
mov
stc
push
push
adc
cmp
pop
push
mov
jmp
std
jmp
sbb
sbb
push
sub
mov
cmpsl
cs
pop
mov
dec
hlt
pop
xorb
repz
push
lahf
ljmp
js
pop
jle
or
cld
das
adc
incb
cmc
lods
push
jp
aam
loop
and
or
and
aas
push
das
mov
jle
mov
daa
xor
jle
lods
mov
adc
bound
dec
mov
and
jle
or
in
push
pop
loope
add
jp,pn
es
mov
jbe
mov
aam
out
pop
out
push
jle
fmuls
lret
ret
push
ret
add
jnp
pop
fldl
test
mov
imul
std
add
sub
sbb
xchg
sub
adc
cld
test
pop
sbb
ljmp
out
leave
jo
sub
imul
push
std
mov
dec
jae
aas
push
rclb
add
cld
insl
adc
jecxz
and
lcall
dec
fldcw
xor
and
mov
loopne
ret
dec
sahf
cmpsb
roll
ja
loope
and
cmp
out
jns
clc
fisttps
sub
inc
repnz
arpl
add
gs
orl
pusha
adc
icebp
ja
int
add
daa
and
rcll
cmp
incb
adcl
push
push
inc
dec
aad
mov
stos
pop
loop
push
adc
imul
jno
jg
jmp
in
push
test
mov
mov
xor
psubd
sub
lock
mov
dec
daa
inc
sbb
or
xchg
xor
pop
aaa
fdivr
jmp
xlat
or
pop
adc
mov
sbb
nop
stos
scas
stos
insl
cld
incl
data16
icebp
adc
shrl
scas
lret
xor
xor
and
sahf
and
ja
pop
inc
inc
sbb
daa
outsb
lds
call
mov
dec
sbb
aas
mov
xchg
pop
or
xor
cmpsl
mov
cltd
decl
scas
sub
je
sbb
add
mov
jle
cmpsl
or
dec
and
add
cwtl
clc
icebp
js
test
sub
rcrb
imul
sub
loope
jp
add
push
jbe
cli
mov
mov
push
mov
mov
add
xchg
dec
stos
scas
push
mov
enter
out
mov
lcall
mov
pop
cmc
push
ja
jae
adc
rolb
sbb
out
clc
jo
add
mov
loope
cmp
push
clc
call
pop
xor
push
mov
jecxz
add
rorb
mov
call
ljmp
mov
cmp
xchg
fildll
es
mov
push
jg
fadds
add
mov
push
test
and
js
cld
jns
adc
xchg
or
mov
push
mov
mov
fs
in
sbb
dec
add
pop
adc
sbb
or
dec
dec
dec
scas
xor
stos
lock
inc
inc
flds
clc
fists
push
jbe
mov
sub
mov
call
in
jbe
cmp
mov
add
test
stos
sbb
pop
cltd
int3
mov
cmc
mov
pop
inc
insb
inc
dec
jmp
mov
or
shrb
es
lret
cmp
cmp
or
rcll
sarb
icebp
dec
xchg
mov
sbb
mov
xor
insb
ds
or
mov
add
xor
dec
jle
flds
sub
add
inc
sbb
xor
sbb
push
sbb
mov
adc
mov
jno
jge
aas
inc
loopne
add
jmp
sub
pop
dec
xor
fadds
pusha
mov
push
out
adc
test
data16
xchg
shrb
add
push
xchg
jg
into
inc
rcrb
jge
pop
pusha
cld
sbb
out
pop
xchg
rcrb
or
push
mov
sbb
arpl
inc
pop
sub
sub
frstor
xor
xor
and
test
ret
xchg
mov
mov
in
shl
mov
ret
out
or
dec
das
aaa
pushf
cmpsb
push
adc
mov
rorl
sub
pop
idiv
sbb
sub
rcrb
add
leave
repnz
xchg
stos
mov
out
pop
push
jmp
or
bound
and
decl
sbb
sub
jae
in
leave
lret
mov
sbb
rclb
addb
mov
aad
lret
decl
inc
sti
cs
bound
adc
push
std
notl
jp
xchg
add
or
lods
or
cmpsb
iret
shlb
std
adc
push
jns
push
push
jmp
scas
jl
into
add
ret
sbb
outsb
mov
stc
loop
add
pop
inc
add
mov
adc
and
cmp
mov
in
lahf
jl
add
pop
pop
adc
inc
in
movsl
push
mov
sbb
mov
ljmp
xchg
push
jne
jmp
hlt
add
or
inc
leave
pop
scas
pop
aad
inc
lcall
jne
adc
loope
ret
aaa
mov
movsb
js,pn
test
dec
mov
pusha
jae
adc
dec
inc
add
das
jge
les
dec
or
inc
mov
shrl
adc
and
push
movsl
mov
xor
cmpsb
mov
jmp
testl
call
ljmp
add
cwtl
lods
mov
add
ret
mov
shlb
sbb
adc
sbb
inc
sbb
cli
js
incb
cmpsb
xchg
or
pop
shr
or
jmp
out
out
xor
push
pop
cmc
sarb
lcall
xlat
cld
sub
loopne
jb
push
stc
cmp
lock
cld
pop
in
aam
sbb
es
incl
and
adc
in
out
mov
push
in
dec
pop
lock
xchg
adc
lret
cmp
mov
dec
cltd
xorb
and
and
fcoms
adc
pop
lock
dec
push
mov
test
xchg
cmp
and
xchg
sbb
loope
ret
pop
subl
jbe
repnz
les
out
adc
rorl
pop
idivb
mov
xchg
js
mov
inc
jo
pusha
test
nop
add
incl
fldl
mov
xor
jecxz
jmp
ret
sub
pop
jne
mov
pop
or
and
mov
cmp
and
incb
loopne
out
pop
sarb
xor
inc
mov
ljmp
mov
imul
sbb
test
inc
inc
or
das
stc
fstps
dec
pop
cltd
push
sub
add
inc
pop
sub
push
push
xor
dec
jne
add
and
cmpsl
cmp
adc
loopne
xor
mov
call
cld
add
int3
fwait
jb
jne
pop
push
loop
cmpb
or
test
fcoms
lea
adc
scas
xchg
add
cmp
movsl
mov
std
mov
jl
fadds
xchg
jecxz
pop
inc
mov
sbb
push
adc
inc
pusha
jmp
insb
cmp
jne
insl
cli
sbbb
lock
jp
mov
jne
clc
jl
pusha
push
or
lret
push
or
cmp
test
jno
data16
lret
mov
inc
sbbb
ficoms
mov
dec
jle
dec
push
cs
sarb
flds
push
sbb
out
push
or
xchg
adc
jge
outsl
loope
sarl
decl
addr16
mov
sarb
xchg
jmp
push
in
loope
stc
and
mov
imul
fnstsw
std
xchg
hlt
fildl
imul
dec
aas
mov
js
lahf
movsl
add
test
adc
pusha
into
mov
mov
adc
mov
xor
test
xchg
sarb
push
aam
loope
mov
push
mull
das
lds
out
cltd
ja
cld
push
cwtl
mov
test
hlt
mov
or
ret
cmp
shll
mov
xor
movsl
or
ret
inc
clc
call
inc
sbb
adc
inc
jp
mov
call
mov
xchg
xchg
mov
sbb
cld
push
jg
jg
and
jle
sub
add
cmp
xchg
pop
mov
pop
int
adc
js
movnti
push
add
push
jp
daa
fldenv
adc
loopne
in
xchg
dec
lret
test
cmp
jle
mov
xor
inc
stc
mov
jle
sbb
std
dec
loope
push
mov
fildl
push
cmp
cmpb
pushf
push
xchg
jno
leave
inc
dec
jmp
or
sahf
fs
cwtl
mov
cmpsb
lcall
pop
or
pop
cmpsb
clc
in
push
das
pusha
rorl
scas
xor
aad
test
and
jo
mov
jns
mov
call
fsubr
xchg
sar
rclb
bound
ja
push
aaa
addr16
aad
mov
adc
xor
enter
icebp
push
cmp
push
ds
pop
addr16
xchg
add
aaa
xchg
mov
into
push
inc
mov
es
hlt
scas
fcompl
sub
fsubl
les
add
xchg
out
in
add
iret
inc
dec
loop
xor
pop
jl
bound
or
mov
pop
push
fnstcw
fistps
ss
dec
push
cmp
push
mov
jmp
inc
dec
fstpt
gs
dec
mov
add
pushf
xor
shrb
test
ds
aam
insb
sbbl
add
test
enter
inc
sti
repnz
dec
add
lds
mov
dec
cmp
inc
repz
jmp
jmp
cwtl
jns
or
add
iret
mov
mov
add
aas
jge
push
fcomip
lcallw
scas
loopne
mov
bound
lcall
inc
jg
mov
sbb
push
xor
jnp
jecxz
fcomp
jl
not
xor
lcall
in
aam
mov
lret
loopne
sti
rcrb
stos
xchg
movl
xchg
jnp
repnz
fadds
stos
fstpt
flds
leave
xor
das
jge
mov
ret
in
cmp
mov
and
xor
adc
fdivrl
fs
cwtl
lahf
ret
sbb
cmp
mov
xchg
fld
pop
arpl
faddl
sub
mov
lahf
cmpl
sarl
and
inc
mov
mov
mov
addr16
push
sti
es
mov
loope
inc
and
jl
rolb
xor
test
cmc
fistpll
pop
or
push
push
jg
pop
nop
cmp
mov
leave
lock
xor
scas
sub
fwait
or
ds
pop
mov
rolb
decl
cmp
adc
ljmp
or
ret
pop
or
enter
mov
mov
shrl
xor
xor
aaa
or
sbb
mov
xchg
jge
movb
mov
in
mov
ljmp
and
sbb
pop
not
pop
daa
mov
push
and
mov
les
or
cmp
enter
pop
movsb
gs
or
fdivl
mov
sahf
xor
dec
cli
mov
lcall
ljmp
adc
and
push
scas
inc
shlb
and
xchg
jae
orl
xchg
roll
xor
cmp
xor
mov
sbb
xchg
xchg
icebp
sarb
sub
repnz
dec
mov
xor
jnp
aam
inc
jge
cltd
inc
shl
mov
pop
mov
inc
mov
movsl
cmp
aam
mov
mov
shl
jmp
inc
cs
adc
adc
rcl
test
mov
mov
mov
push
in
fs
loop
ret
gs
scas
loopne
rol
jg
add
or
and
les
dec
dec
mov
push
adc
out
test
repz
imul
mov
aam
addb
lds
data16
aaa
mov
xor
and
cmpsl
sbb
push
pop
jnp
imul
pop
ret
decl
loope
pop
cmc
xchg
mov
aam
jbe
std
daa
inc
imul
es
push
inc
mov
fucomip
out
clc
ljmp
jle,pt
sub
dec
dec
mov
xor
icebp
and
adcb
cmpsb
push
das
xor
loopne
cmpsl
ret
or
stos
mov
xchg
mov
adc
fcmovne
xchg
enter
jl
jg
xchg
push
ja
cmp
xchg
add
or
das
mov
pop
mov
push
add
icebp
xor
xor
imul
and
cli
cltd
cmp
bound
jno
jg
pop
mov
xlat
add
inc
cltd
add
cltd
push
sarb
dec
and
sbb
push
push
out
nop
popf
push
loopne
lret
lcall
ds
jne
push
sbb
in
cmp
jbe,pt
mov
fstl
fists
add
sub
mov
inc
pop
add
cmp
fbld
insb
mov
inc
push
sbb
and
icebp
fisttpl
cmp
push
test
call
or
es
call
pushf
lcall
cli
mov
arpl
push
clc
jne
sbb
inc
or
rcrl
sbb
sbb
leave
test
in
ret
xchg
jl
fnstcw
sbb
adc
notb
popa
add
sbb
loope
dec
fxch
xor
jecxz
pop
inc
or
lods
cmp
shlb
mov
addl
pop
pushf
cmp
mov
mov
mov
fwait
cli
jl
mov
repnz
inc
jl
push
je
push
fdivr
les
add
push
cld
shrl
arpl
aas
sbb
xchg
decl
popa
lret
adc
leave
add
push
loop
lea
out
cmp
mov
mov
aam
lahf
add
jl
inc
jo
pop
add
sar
dec
adc
inc
mov
or
call
xchg
adc
test
cmp
rol
jg
insb
xchg
push
pushf
or
dec
mov
arpl
mov
mov
popf
call
push
nop
inc
push
pusha
inc
inc
add
int3
cmp
xor
and
insl
rcrl
jg
inc
cmpsb
ss
popa
jbe
popa
lods
nop
mov
test
pop
lcall
mov
out
inc
into
sub
fwait
sub
mov
xchg
inc
add
push
ljmp
and
jne
inc
xlat
mov
incl
cmp
mov
shll
sarl
push
incl
push
jp
and
pusha
xlat
mov
sbb
pop
insb
xchg
clc
dec
cmpsl
mov
xchg
dec
ljmp
mov
mov
cld
jg
jp
pop
scas
lods
movsb
iret
mov
add
mov
in
inc
cs
push
mov
outsl
jg
push
push
mov
push
lods
push
psllw
and
mov
inc
add
cltd
xor
fs
cmp
fldenv
add
xchg
ljmp
movsb
call
sub
stc
mov
mov
xor
sbb
or
js
adc
in
cmp
pop
pushf
int3
push
cli
or
dec
mov
add
sbb
inc
jp
pop
pop
lret
jg
pop
stos
xchg
je
or
dec
jne
scas
loop
das
ret
adc
xor
adc
into
movsb
loopne
mov
xchg
sub
adc
or
sbb
out
incb
in
or
mov
dec
add
pop
cld
mov
fsubr
popf
inc
leave
fdivl
clc
inc
cli
inc
push
push
sahf
jle
mov
repz
dec
fstl
into
or
insb
mov
scas
test
ja
cld
iret
clc
xchg
push
mov
mov
jg
or
add
movsb
xchg
sar
push
and
sbb
jl
add
test
test
mov
stos
cmpb
enter
negb
ja
inc
les
call
pop
xchg
adc
out
cld
cmp
lods
push
cmp
add
test
sbb
sbb
scas
sub
lock
test
add
enter
int
push
rcrb
mull
inc
inc
popa
inc
call
stos
sbb
jecxz
leave
adc
mov
cli
je
addl
dec
cmc
aaa
sub
cmpsb
stc
les
mov
iret
repnz
xchg
pushl
lock
imul
mov
cmp
pop
inc
lea
pusha
mov
loop
push
cli
pushl
fnstenv
loope
jnp
mov
dec
sbb
inc
into
outsb
jae
fisttpl
subb
inc
fs
xor
mov
les
stos
and
pop
hlt
xor
adc
scas
roll
aad
add
les
clc
frstor
scas
adc
bound
movsb
jmp
arpl
sub
add
faddl
inc
in
icebp
pop
popl
adc
dec
xchg
add
pop
into
das
sub
pop
push
mov
xor
in
js
lcall
push
mov
push
xlat
xsaveopt
lods
loop
sbb
popf
icebp
sahf
dec
pop
jecxz
and
fsts
cmc
inc
fmuls
xor
inc
cmp
cwtl
out
out
cmpsb
jle
add
push
cmc
pop
pop
adc
push
mov
inc
jl
adc
cld
sub
add
scas
xlat
stc
or
sbb
xchg
mov
test
inc
or
bound
pop
jnp
dec
mull
jecxz
pusha
jl
fs
lds
and
mov
mov
clc
cmpsl
pop
or
repnz
jg
test
mov
add
xchg
adc
pop
nop
test
jns
sbb
popf
cltd
add
jg
mov
shl
aas
add
xor
push
ljmp
mov
sbb
sbb
cmp
add
adc
cmp
dec
xchg
addl
adc
rclb
ds
insb
adc
jbe
mov
paddb
mov
out
cmp
cmpsl
inc
cmc
sub
addr16
pop
inc
xor
and
orb
add
adc
add
mov
aam
stos
xor
inc
xor
mov
stos
and
cmp
jno
gs
sarb
sub
inc
xchg
fwait
icebp
ljmp
popf
movsl
ds
jbe
fldcw
xorl
adc
hlt
das
jecxz
insb
push
movsb
fdivr
push
fists
inc
cmc
decb
inc
dec
push
jle
aad
xor
shll
jl
pop
add
xchg
dec
add
mov
and
loopne
adc
mov
jo
adc
sub
icebp
mov
cli
stos
and
aam
test
lock
outsl
sar
mov
push
push
insb
fdivrl
outsb
hlt
cmp
cmc
cmpsl
sub
dec
lock
clc
mov
or
prefetch
or
adc
mov
push
dec
or
mov
jmp
xor
adc
xchg
cli
jmp
out
cmp
push
cmp
shrl
sub
daa
or
and
pushl
outsl
movsl
add
inc
call
mov
push
filds
push
push
inc
xchg
and
pop
push
leave
lock
ret
loop
mov
call
rcll
pop
mov
pop
rcrb
or
cmp
ret
cmpsl
add
ja
pushl
add
jns
jae
lret
push
mov
fcomps
int3
scas
push
cmp
adc
jge
push
or
ljmp
sbb
fimull
mov
mov
nop
out
out
popf
ss
xor
add
aad
lea
and
cmp
xchg
hlt
and
stos
cmp
stos
cltd
xor
nop
bound
icebp
aas
arpl
decl
shlb
aas
sbb
lock
js
adc
fcomip
fs
sti
add
lret
dec
in
push
push
sub
mov
jg
xor
call
aaa
inc
mulb
xor
into
imul
int
xlat
fbstp
roll
adc
xorl
dec
mov
push
into
icebp
jg
int3
mov
stos
jmp
fcoms
dec
adc
outsl
cmpb
and
mov
mov
adc
dec
out
lds
add
add
push
mov
loopne
orb
sarl
cmpsb
ss
sbb
sub
call
out
xor
adc
dec
and
lret
and
add
and
add
inc
les
shrl
dec
or
roll
or
sub
mov
orl
inc
pop
jg
pop
xor
jnp
ffree
push
mov
pop
inc
sub
lods
and
mov
ds
pushf
call
jb
xchg
pushf
pop
std
dec
rorb
aas
mov
cmc
sbb
scas
sar
xchg
adc
repz
jle
inc
js
call
add
jne
into
push
push
fs
mov
lds
pop
inc
sbb
xor
shll
jg
loope
lret
push
jle
cmp
stos
jg
decl
test
add
outsl
add
mov
push
add
aaa
fnstenv
push
rcrb
sub
push
and
inc
jg
pushl
or
jle
repnz
sub
sbb
sbb
sahf
fistps
or
add
call
rolb
sub
fildl
sbb
add
mov
or
mov
inc
jecxz
dec
fisttps
cld
inc
out
rclb
mov
add
xor
sbb
add
aam
push
mov
adcb
jg
cmc
or
dec
cli
mov
mov
pop
pop
mov
add
push
inc
jno
and
andl
push
inc
ss
push
dec
sub
xchg
add
fcomps
lcall
outsb
pop
fisubl
push
pushf
pusha
adc
pushl
popf
add
enter
leave
jmp
setp
aas
test
lea
mov
push
push
or
add
add
pop
mov
mov
jl
xchg
pop
add
popf
and
mov
jmp
push
aam
mov
mov
je
jge
and
loop
mov
cld
push
je
xor
dec
inc
push
add
and
jno
mov
ret
adc
jecxz
mov
inc
out
cld
mov
jno
out
gs
jg
jl
jno
aam
or
mov
ljmp
rorb
adc
loop
fiadds
dec
mov
or
decl
xor
popf
iret
sub
movl
movsb
jae
jle
sub
xchg
mov
subb
je
xor
xchg
in
stos
add
mov
stos
outsb
add
sbb
adc
lcall
inc
add
stos
add
push
add
push
inc
ret
mov
decl
mov
pusha
pusha
mov
push
loopne
push
cmpsl
jle
push
in
fsubs
out
stc
inc
mov
call
or
sahf
pop
jle
aaa
popf
aad
pusha
je
fiadds
sbb
sub
inc
push
jae
movsb
cli
xor
loope
int
pop
add
rcrl
pop
push
mov
pop
cmpsl
lds
or
subb
cltd
cmp
cmp
shr
cs
test
add
icebp
dec
divl
pop
sub
push
test
mov
push
ficompl
fcomip
mov
or
cmpsb
out
in
std
icebp
outsl
xor
loope
jo
lcall
mov
fwait
mov
test
add
mov
push
pushl
add
das
pop
jge
ret
cmp
cli
out
arpl
adc
sub
and
mov
repz
pop
enter
mov
std
sbb
sbbb
inc
xor
loopne
mov
repz
cmp
paddd
dec
mov
std
xchg
pusha
sub
andb
std
sti
adc
or
and
jge
sbb
xchg
xlat
jecxz
pop
add
xchg
aas
adc
std
lds
add
or
ret
mov
mov
pushf
jmp
lock
sub
fs
addr16
loop
mov
or
scas
push
sbb
scas
and
sbb
pushf
cmp
dec
les
insb
movsl
add
cmp
jo
or
xchg
decl
into
out
insl
cld
popf
cwtl
je
adc
push
push
imul
inc
mov
jmp
or
pop
out
repz
pop
je
mov
sbb
sbb
push
lds
je
push
dec
pushl
int3
incb
cld
out
sbb
mov
decl
jmp
sbb
les
test
sub
sub
jg
jle
inc
clc
gs
cmp
incl
mov
and
add
pop
dec
call
scas
out
dec
js
ffreep
dec
cmpsl
cmp
mov
rcll
sbb
sbb
push
add
or
leave
cmp
adc
dec
xchg
xchg
adc
push
testb
cmp
add
lahf
add
jbe
pop
shll
out
push
mov
inc
push
inc
sarb
mov
adc
nop
or
jg
shll
cmp
in
mov
pushf
fadds
xor
js
pop
loopne
out
aas
cmp
enter
mov
xchg
push
inc
jnp
adc
cmc
mov
xor
xchg
test
mov
pop
ds
incl
dec
lcall
xor
cwtl
inc
ja
ljmp
iret
and
and
test
aas
clc
fcomip
add
repz
and
mov
icebp
inc
movsl
mov
or
push
nop
and
push
rclb
cwtl
cmpsl
std
push
pop
jge
incl
add
pop
add
ret
movsl
popf
in
jbe
lea
orl
add
loopne
add
mov
enter
mov
inc
mov
out
clc
movsl
fadd
and
ljmp
insl
cltd
or
jmp
pop
add
data16
outsb
add
push
test
adc
pop
and
pushl
xchg
out
and
mov
cwtl
call
shlb
lock
orl
fmuls
inc
fwait
mov
insl
fldt
ja
pop
iret
add
in
sbb
pusha
call
pop
test
enter
pop
shrl
ret
pusha
mov
or
sti
repnz
or
mov
incl
mov
nop
sub
cmpsb
sub
dec
and
popa
cmc
add
dec
mov
fnsave
push
jns
xchg
daa
movsb
push
loope
jg
adc
xchg
pop
insl
push
insl
and
inc
add
push
notl
pop
inc
lret
mov
dec
xlat
jmp
pop
stos
jno
jge
imul
jb
inc
clc
in
ja
dec
pusha
aas
adc
cmpsb
imul
fs
cmpsb
scas
call
loope
mov
dec
mov
fistpll
inc
jl
psubsb
inc
xchg
andb
sub
rcr
mov
inc
lahf
pop
shrd
cmp
jl
inc
add
cmp
adc
decl
xlat
in
and
xor
mov
pop
ljmp
mov
stos
loopne
dec
add
in
shlb
je
outsb
std
fisttps
jns
imul
push
jmp
adc
aaa
fs
inc
ret
fdivrs
mov
popf
sbb
cld
mov
inc
jecxz
mov
fimull
call
inc
cmp
das
mov
mov
clc
lahf
cltd
leave
mov
ss
push
xlat
and
mov
call
out
adc
es
xor
xchg
out
sub
sbb
das
jg
int3
arpl
xchg
shr
loop
pusha
ss
std
iret
dec
dec
xor
decl
jp
push
das
mov
add
pop
call
push
mov
mov
lock
or
pop
push
shll
dec
dec
inc
les
cld
fwait
inc
fcoml
mov
arpl
fstpt
lcall
jmp
loop
xchg
arpl
les
clc
and
adc
push
add
pop
add
sti
add
pop
push
gs
inc
hlt
fwait
in
ret
push
cld
push
inc
adc
xorl
and
call
sub
test
sub
fcmovnu
ret
sbb
hlt
int
sbb
jmp
mov
sub
pop
mov
dec
imul
pop
ljmp
dec
fidivrl
mov
test
inc
mov
pop
xchg
add
in
push
aad
jnp
sbb
hlt
pop
or
in
insl
dec
jb
cmc
cli
inc
sub
jne
nop
cmp
rolb
mov
adcb
test
add
add
addl
cmp
call
mov
hlt
push
insl
iret
cltd
pop
ds
jb
cmp
and
call
mov
in
jae
xchg
add
mov
into
in
dec
in
inc
leave
call
adc
mov
cmp
jg
mov
loope
leave
xor
pop
movsl
repz
xchg
filds
mov
adc
call
mov
addr16
and
aad
clc
mov
push
loopne
test
pop
rol
movsb
testb
jae
js
lods
and
hlt
sbb
jp
fdivs
adc
xchg
mov
loop
pop
add
subl
inc
mov
lock
or
add
add
push
adcl
fmul
sbb
mov
lods
add
imul
incl
xchg
add
mov
inc
shll
aaa
inc
add
in
cltd
push
addr16
or
dec
mov
fwait
sbb
mov
fs
fistps
push
add
nop
jg
out
es
add
push
hlt
xor
call
inc
push
out
mov
icebp
pop
icebp
pop
jo
test
dec
rorb
cli
movsl
xor
test
int
gs
lcall
dec
add
test
inc
in
nop
mov
xor
lcall
mov
arpl
add
in
jmp
or
pop
outsl
in
shll
or
and
es
xchg
sub
out
dec
sub
pop
inc
lods
mov
les
fimull
out
pop
push
pusha
into
roll
adc
push
loopne
sarb
and
fistps
dec
cld
xor
icebp
mov
fdivrl
or
or
ljmp
sbb
mov
cmp
addr16
or
insb
jmp
jmp
loop
pop
sub
jmp
or
loop
or
mov
sarb
aad
cltd
adc
rol
mov
or
push
jne
or
and
in
sbb
test
mov
aam
or
pop
adc
mov
enter
push
pop
cld
bnd
lods
pop
and
inc
push
jge
xor
outsb
pop
inc
in
test
icebp
push
mov
dec
sahf
imulb
and
call
stos
mov
jo
std
movsl
mov
jg
xlat
call
mov
push
dec
and
dec
or
dec
fwait
ss
pushf
and
incl
inc
dec
pop
out
mov
stos
fucomip
outsl
mov
push
jns
faddl
pop
inc
out
dec
cltd
ljmp
scas
das
add
mov
icebp
push
add
add
mov
or
sti
add
and
push
add
mov
adc
pushf
fbld
aad
filds
mov
and
icebp
and
jecxz
dec
ljmp
sbb
mov
pop
call
jl
add
dec
sar
jg
sbb
add
movsl
lcall
jae
popa
jmp
xchg
dec
adc
arpl
sub
shlb
fisttpl
lret
ja
loopne
call
stos
clc
push
aad
mov
lret
dec
mov
push
test
pop
cmp
adc
inc
mov
mov
sbb
or
jno
jno
xor
aas
pop
test
movb
dec
bound
rclb
daa
icebp
bound
aaa
jl
popa
out
orl
jg
jg
jns
bound
cmp
and
mov
inc
cmp
mov
out
test
mov
pop
jl
ss
xchg
call
pop
dec
loope
mov
cmc
pop
icebp
fistps
adc
pop
cmpsb
push
lret
ret
scas
and
addb
out
push
call
cld
mov
sbb
roll
pop
aad
push
nop
test
in
push
js
adc
enter
mov
inc
cmpsl
push
xchg
hlt
sbb
xor
hlt
call
cwtl
mov
jecxz
mov
jmp
cmp
push
xchg
lods
jns
subb
dec
mov
dec
jg
dec
xor
xor
sbb
lds
shrb
js
outsb
scas
jae
push
ss
jmp
insb
mov
scas
hlt
or
cmpsb
mov
ljmp
jl
movsb
stc
jns
in
in
cli
int
and
xchg
movsl
enter
jg
icebp
mov
dec
lret
lods
ds
sbb
pop
loope
rolb
mov
insl
scas
aas
test
out
std
aam
data16
jg
pop
movsb
sub
aaa
bound
dec
cltd
pop
lock
push
xor
inc
sbb
std
pop
jbe
pushf
enter
xor
pop
mov
cli
push
push
adc
clc
outsl
enter
pushf
out
adc
push
ret
mov
sbb
adc
jb
add
inc
jo
sbb
sub
es
or
mov
push
test
adc
mov
test
push
mov
or
inc
adc
sbb
int3
addr16
incl
retw
cmp
es
shlb
mov
pop
idiv
mov
sbb
dec
push
add
xor
fwait
nop
into
incl
rol
xor
pushf
adc
nop
call
add
sar
aas
adc
out
mov
xchg
mov
mov
inc
sbb
inc
pop
insb
adc
incb
mov
mov
pop
jno
shrb
dec
xor
ret
aad
push
sbb
in
cmp
test
ds
sub
add
and
add
stos
push
imul
and
sbb
xchg
push
js
add
and
mov
mov
and
mov
cli
mov
xor
or
paddd
aad
lds
orb
stc
outsl
dec
sub
jno
ret
push
add
mov
add
adc
mov
hlt
in
sub
cwtl
sahf
add
ss
adc
push
icebp
adc
inc
test
or
aam
mov
push
push
inc
or
push
xchg
std
sub
inc
inc
cmp
fmull
xor
adc
jb
ret
mov
movsb
add
fildll
add
das
and
divb
fnstcw
sti
sub
jnp
int
ret
and
aas
xchg
shll
jl
mov
ljmp
mov
ljmp
roll
mov
mov
cmp
adc
mov
ja
inc
lock
nop
mov
and
in
ja,pt
jg
adc
xchg
xor
mov
jmp
xor
sub
ficompl
lcall
and
add
es
icebp
jp
or
rolb
mov
jmp
inc
shrb
call
jg
movsb
in
mov
xorb
cmpsl
add
pushl
test
aas
lcall
sub
call
or
mov
ss
loopne
add
loopne
aaa
loop
shlb
cltd
mov
mov
hlt
inc
mov
xchg
stos
inc
lret
aam
fcomip
jne
aaa
pop
lret
add
scas
and
loope
fmuls
xor
incl
xchg
push
add
orl
sbb
push
mov
pop
stc
outsl
xchg
push
data16
fldt
or
jne
lock
mov
cmp
jnp
add
push
jns
out
xor
jecxz
mov
add
mov
and
shlb
mov
mov
add
jo
mov
fwait
and
xlat
add
pop
push
jns
add
cmp
mov
rcr
cld
mov
or
adc
push
call
xchg
add
cmp
out
mov
ret
jl
ss
xchg
clc
jg
movsb
fsubrl
cmp
in
adc
mov
lret
addr16
xor
cltd
insb
flds
mov
fildll
dec
mulb
jae
pop
test
jbe
mov
sti
or
outsl
decb
pop
push
repz
out
jg
in
xchg
xor
je
sub
ds
cmpsb
adc
incl
add
mov
aas
add
fdivl
loopne
dec
push
mov
inc
dec
lret
movsb
incl
inc
movsl
daa
and
clc
aas
lock
arpl
ja
add
test
or
testb
cmp
pop
adc
loopne
push
jl
inc
push
xchg
add
dec
pop
jmp
jbe
dec
push
xchg
rorl
ja
repnz
push
inc
pop
lock
xor
and
aad
xor
xlat
je
push
pop
sub
gs
and
addb
mov
jb
pop
pusha
loopne
xor
decl
push
adc
lahf
ss
push
lock
jne
je
mov
and
lods
cs
jmp
ret
or
mov
clc
jno
or
add
xor
popf
and
mov
pop
jo
push
adc
lahf
add
stos
pushl
push
jmp
pop
lock
jne
mov
cwtl
add
add
and
or
lods
add
icebp
filds
mov
add
aam
push
jb
and
rcll
pop
fst
aam
js
in
mov
nop
outsl
aad
or
adc
fld
mov
aas
es
add
setg
loopne
pop
mov
jle
mov
lret
mov
or
inc
mov
mov
ret
sbb
dec
push
test
in
fnstenv
pop
add
push
sbbl
cld
dec
insb
test
sbb
add
aam
sahf
loope
mov
andb
sub
xor
xor
es
adc
out
jg
add
lock
fcmovnb
sub
mov
adcb
jecxz
test
or
jg
ljmp
jp
es
les
inc
push
cmp
mov
int3
pushl
pop
incl
mov
xlat
fscale
jg
jp
inc
jmp
or
push
push
jl
inc
xchg
addl
fs
test
out
cmpsb
lock
stos
and
dec
mov
inc
xchg
andb
js
out
cltd
push
out
enter
or
jg
call
cmp
mov
push
ficomps
jae
sbb
mov
push
mov
in
cmp
das
lahf
add
outsl
mov
ljmp
add
pop
pop
loopne
adcb
jmp
mov
gs
jb
and
das
mov
mov
add
js
data16
movsb
sti
ja
inc
cs
jnp
push
sub
sbb
push
push
xchg
mov
pushl
jl
mov
adc
or
cltd
pop
rclb
sub
aas
dec
bound
cld
and
mov
fwait
and
push
lods
test
clc
sarb
xchg
mov
scas
bound
test
rcr
rolb
adc
cld
movsb
and
daa
hlt
ljmp
jp
inc
test
cmp
mov
push
andb
rolb
cmp
sti
mov
cmp
push
or
ret
dec
jg
inc
js
loopne
out
push
test
push
fistps
ljmp
add
imul
clc
mov
lock
es
lock
pusha
sub
jae,pt
inc
pop
rorb
dec
sub
les
or
lcall
imulb
aas
add
cmp
inc
mov
jno
pop
gs
push
mov
daa
dec
jae
sbb
and
push
xchg
mov
pop
dec
mov
ds
adc
add
sub
inc
aad
fsubs
out
scas
jmp
nop
mov
add
push
cli
mov
add
int3
movsl
or
xchg
cli
jg
add
ret
add
sub
notb
inc
mov
or
mov
mov
divl
and
and
lahf
je
decl
lea
cmp
add
dec
dec
mov
inc
cmp
mov
fsubr
sti
mov
gs
cmp
pop
out
jne
pusha
mov
sbb
or
mov
movsb
cmp
xor
fiaddl
decl
cld
push
nop
xchg
scas
outsl
call
sub
fbstp
insl
jecxz
mov
test
std
pop
and
out
jmp
int3
das
lods
cmp
incl
xchg
inc
mov
jmp
arpl
aaa
adc
xor
and
lods
inc
rol
js
sbb
dec
repnz
cmp
je
outsl
out
int3
cmc
or
or
in
push
loopne
lcall
ret
push
lret
and
jbe
pop
icebp
and
fbstp
bound
les
pop
addr16
call
loope
aam
rcrb
xchg
adc
clc
popw
enter
add
jg
mov
cmp
jl
adc
mov
pusha
adcl
incb
sbb
cmpsl
dec
sbb
repz
iret
dec
xor
pop
add
mov
aaa
pop
xor
lods
sub
sub
std
jp
jbe
cli
lods
fldl
push
push
and
add
loopne
rorl
or
sbb
ljmp
mov
subl
lfs
std
es
es
call
lcall
xchg
mov
enter
pop
add
loop
mov
jno
dec
test
aam
ja
lret
sbb
loope
in
xchg
lret
icebp
bound
fisttpl
xor
icebp
ret
jae
icebp
push
rcrl
inc
or
std
les
sbb
pushl
dec
and
fstl
mov
outsl
push
popf
push
cli
and
cwtl
adc
add
nop
or
in
mov
cmp
pop
clc
shll
fsubs
stos
jns
push
cld
shr
cli
mov
and
rolb
filds
ljmp
dec
je
or
fbld
lock
inc
xchg
insb
sti
lahf
adc
inc
inc
mov
enter
jl
add
pop
inc
testl
lods
sub
fists
xor
es
loopne
push
ljmp
std
mov
sbb
insl
jecxz
push
movsl
sub
xorb
dec
mov
movsl
outsb
push
pop
adc
shrb
dec
jmp
mov
jno
pusha
pop
inc
pushf
adc
xchg
inc
in
ret
push
out
mov
movsl
sbb
push
lahf
pop
out
jne
xchg
sbb
jmp
jmp
movsl
nop
lods
jne
xor
sbb
dec
or
dec
fwait
pop
gs
mov
shll
lcall
jb
dec
and
mov
testl
pushf
xchg
xchg
add
mov
js
sub
jle
in
add
push
pop
jle
cli
jg
addb
pop
scas
or
push
decb
pusha
cld
lea
mov
xor
inc
sub
add
dec
cmpsb
add
mov
adc
and
ljmp
dec
inc
pushf
mov
pusha
and
pusha
lcall
inc
push
and
or
movsb
rclb
jo
not
addr16
test
jl
clc
cmpsl
or
or
pushf
xchg
out
push
popa
leave
cmp
jecxz
and
mov
aaa
mov
adc
mov
rcr
filds
andb
cltd
pop
mov
outsl
cmp
add
or
inc
or
or
inc
and
jmp
sti
pop
rolb
jmp
xchg
jle
mov
mov
push
fmull
dec
mov
sub
xchg
or
aam
call
lahf
adc
pop
inc
xchg
es
mov
or
mov
rclb
into
iret
mov
aam
arpl
mov
cmp
ja
xchg
inc
mov
inc
jmp
ret
pop
inc
sbb
or
addb
or
das
icebp
sbb
sarl
fbld
popa
subl
add
outsb
cld
outsb
mov
adc
jecxz
pop
sahf
mov
ds
push
jg
icebp
mov
aam
xchg
mov
arpl
aas
cld
fstpt
jns
mov
and
jnp
jne
pop
inc
movl
jg
fdivs
or
mov
xor
out
xor
xlat
inc
mov
call
adc
push
sub
es
mov
dec
fs
test
push
pop
push
mov
jg
je
dec
xor
std
nop
mov
js
push
jg
mov
push
insb
lds
stc
inc
sub
adc
inc
mov
pushf
pushf
stos
xchg
clc
xchg
sbb
mov
mov
jl
push
pusha
fs
js
xor
mov
jno
mov
movsl
popf
sbb
push
scas
and
add
push
inc
and
add
xchg
jecxz
scas
flds
jae
xchg
and
jl
pop
xor
enter
dec
adc
jo
test
mov
inc
rcll
jmp
je
cmp
call
lret
rol
inc
fsubrs
fidivrl
imul
pop
lea
mov
ljmp
add
clc
jo
inc
call
mov
js
add
push
incl
push
add
and
mov
pop
adc
dec
dec
adc
xor
adc
and
cmp
xchg
push
ljmp
adc
adc
sbb
xchg
call
popa
std
outsl
jmp
and
test
jmp
rclb
lods
mov
sub
inc
mov
dec
sub
adc
push
ficoml
mov
mov
lcall
pop
cmc
decl
xchg
mov
xor
pop
ljmp
adc
clc
push
sti
sbb
jp
sbb
cmp
mov
inc
xor
or
xchg
int3
mov
xor
jne
lret
jg
jmp
pop
inc
repz
out
fwait
mov
mov
lods
lret
and
xchg
pop
adc
jmp
decb
and
rol
leave
lcall
jnp
jnp
aam
das
and
add
lods
nop
cs
xlat
xor
clc
popl
insb
scas
xchg
std
shrb
and
adc
lods
enter
push
jg
movsl
push
jl
inc
ljmp
out
jge
call
cmp
mov
call
cmp
gs
mov
mov
add
aas
or
loope
inc
inc
inc
out
xchg
inc
push
jecxz
out
xchg
das
pop
inc
loop
xchg
xchg
stc
aam
dec
and
mov
call
cmc
mov
shrb
mov
push
dec
and
pop
cld
and
sbbl
test
jl
mov
pop
sub
std
decl
push
pop
cmp
popf
cwtl
lret
jge
enter
aas
or
jae
sub
or
jecxz
addb
aas
std
les
pushf
xlat
fstp
sub
insl
adc
mov
adc
sbb
dec
test
adc
xchg
xchg
jg
add
add
pop
lods
stc
mov
push
add
fidivs
mov
out
xchg
insl
mov
mov
push
mov
cmp
inc
and
pop
pop
cmpsl
xchg
inc
negl
add
mov
pop
cmp
push
loope
mov
stos
cmc
jg
xorb
daa
and
fwait
int
movsb
xchg
jle
cmpl
mov
popf
add
adc
test
mov
push
inc
mov
adc
adc
loope
bound
cs
inc
xchg
in
iret
adc
sub
test
decl
xchg
dec
lahf
push
loop
adc
mov
decb
pusha
and
and
cmp
jmp
jmp
mov
push
inc
mov
mov
jg
jg
int3
repz
adc
in
push
dec
mov
or
mov
fisubrl
cmp
std
out
test
aam
jecxz
into
push
jmp
out
sbb
adc
nop
push
xorb
and
xorb
adc
test
lcall
fistl
les
imul
push
mov
loop
pop
inc
mov
sbb
mov
loopne
out
jbe
insb
mov
outsb
and
stos
sahf
cmp
lahf
decl
idivb
lods
and
movsb
cmp
xchg
aam
push
cmc
cld
mov
adc
inc
in
ret
xorb
stc
sub
jp
lcall
sbb
add
push
mov
xchg
incb
loop
and
mov
repz
adc
rcrl
push
lcall
js
dec
std
push
clc
xchg
lds
std
adc
scas
cmpsl
cmp
lcall
cli
rorb
and
shr
cmp
mov
push
adc
incl
cmc
lret
cld
cld
shl
mov
mov
sahf
add
ja
pop
jbe
cld
fidivrl
and
in
push
pushf
scas
xchg
cmc
dec
ljmp
cmp
jb
out
sub
adc
xor
cli
sti
ljmp
pop
xchg
rcl
pop
adc
jb
sahf
inc
jno
jg
sub
mov
andb
aaa
mov
imul
jg
in
push
add
daa
xchg
push
fbld
mov
xor
mov
pushl
add
jmp
jp
mov
sahf
fldl
sbb
out
outsl
push
les
lcall
cli
inc
mov
stos
mov
aam
mov
sub
loope
mov
out
adc
inc
movb
inc
gs
push
stos
pop
add
pushw
outsl
sub
mov
mov
out
mov
xor
cs
ja
cmp
cwtl
pop
loope
cmp
and
jmp
scas
mov
movsb
inc
pop
inc
adc
movsb
and
add
push
xchg
mov
hlt
dec
lds
sbb
dec
xor
int3
cmp
ss
xchg
pop
mov
sbbb
push
pop
fdivr
mov
cld
inc
int
jns
fadd
jo
fists
into
adc
loope
pop
ljmp
ret
pusha
mov
stc
lcall
jnp
pushl
mov
add
aas
es
and
ficoms
jge
mov
inc
mov
dec
fcomip
incl
rorb
ljmp
adc
out
sub
lods
mov
or
mov
or
repz
fldenv
ljmp
and
mov
xchg
shll
sbb
dec
clc
decl
mov
sbb
inc
pushf
in
cmp
std
pop
fisttpl
push
out
sbb
addb
and
pop
mov
call
or
mov
cmp
and
jge
mov
mov
rcl
negb
mov
je
aaa
leave
cs
add
and
ljmp
es
sub
sub
test
jbe
mov
jp
stos
inc
cmp
fdivr
imul
call
adc
mov
jp
mov
push
push
xchg
push
add
and
dec
inc
xchg
xor
sub
stos
sub
nop
add
imul
das
push
jl
sahf
push
sbb
dec
jge
pusha
into
gs
popa
xchg
std
filds
les
push
push
push
fidivl
loopne
mov
dec
mov
xor
mov
cmp
lock
imul
pushf
aam
shll
decl
cld
aaa
mov
dec
icebp
push
call
and
cmpsl
test
ret
loopne
dec
or
lods
insb
cmp
inc
jg
mov
test
inc
aam
inc
aas
mov
pop
subb
adc
gs
xchg
dec
inc
push
iret
push
std
or
inc
sbb
pusha
pusha
mov
cmpb
sbb
xchg
lret
jp
push
mov
std
pop
std
scas
cmpb
shlb
fcom
ljmp
ret
test
push
add
sub
test
sbb
or
test
inc
sub
pop
hlt
and
lret
xlat
lock
mov
pop
ss
ljmp
jno
and
cld
inc
cmp
adc
sbb
push
jecxz
cmpsl
test
xchg
push
push
outsb
mov
sub
stc
stos
ljmp
or
pop
mov
addb
repz
push
pop
lock
std
add
add
int3
mov
dec
mov
mov
rclb
or
lcall
dec
xor
cwtl
pop
inc
mov
out
iret
in
iret
and
mov
cld
stc
ljmp
cld
dec
adc
fiaddl
movsl
pop
inc
cmp
add
stos
mov
jo
fs
and
xor
cmp
xorb
pop
or
sbbb
call
sbb
inc
ljmp
aam
out
scas
adc
inc
clc
xlat
decl
mov
mov
pop
mov
rcr
xchg
xor
fwait
cld
jle
xchg
lcall
mov
roll
inc
outsb
adc
inc
lock
jl
xlat
add
push
cmp
or
mov
add
adcb
sub
cmp
lcall
adc
cmp
hlt
xor
std
xor
mov
scas
mul
sbb
bound
inc
lahf
inc
sbb
arpl
fsubrs
and
and
add
ja
add
xor
inc
xchg
and
and
mov
jge
rcr
adc
mov
iret
scas
test
xchg
sub
cmp
dec
mov
cltd
data16
lcall
adc
mov
lcall
sbbl
aad
insl
test
in
push
lds
lock
lock
inc
or
xchg
filds
adc
fiadds
sbb
cld
cmpsl
pop
pop
pop
call
mov
fs
mov
adc
std
cmp
pop
lahf
adc
in
adc
xlat
jmp
dec
inc
pop
and
and
out
lods
dec
into
movsl
sbb
sub
push
addr16
cmp
or
imul
cmp
cld
pushf
pushf
add
or
and
bound
cmp
std
hlt
jmp
mov
out
sub
fwait
add
jmp
push
ret
dec
fldl
pop
dec
inc
popa
or
sbb
popf
movsb
pushl
les
sbb
mov
mov
stc
dec
enter
push
test
xor
test
pushw
js
sahf
inc
lcall
ja
xor
sub
adc
fiadds
ljmp
es
pop
dec
loope
push
leave
sub
adc
nop
scas
sub
mov
add
call
inc
call
lahf
lods
sbbb
cmpsl
inc
or
adc
xlat
dec
push
inc
dec
into
dec
and
mov
ror
adc
mov
fists
mov
scas
rcl
xchg
mov
in
xor
aaa
loopne
and
mov
mov
jg
call
pop
xchg
data16
cmc
scas
bound
cmp
and
jg
test
rol
push
add
push
ret
out
xor
mov
hlt
outsl
add
pop
leave
fs
push
call
ja
push
shll
ret
cmp
inc
ret
adc
clc
das
clc
adc
cs
and
sbbb
pop
int
push
outsl
mov
mov
mov
adc
repnz
outsl
adc
and
aam
inc
ficomps
incb
mov
mov
push
pop
lcall
push
xchg
jnp
mov
cli
jge
mov
push
add
sub
mov
jmp
lret
jo
aam
pop
dec
cmp
out
out
push
mov
test
ja
fwait
inc
or
fnsave
adc
adc
outsb
fs
xor
xchg
mov
ljmp
dec
mov
nop
push
adc
sbb
cs
jge,pt
sbb
pushl
cld
fbld
push
add
xor
test
push
sbb
jmp
or
fs
ffreep
je
fisttps
outsb
sarl
add
sti
fistpl
xor
fisttps
mov
icebp
dec
fs
adc
lcall
jg
mov
fidivrl
dec
and
and
call
add
lds
mov
fisubrl
jg
loop
push
mov
adc
xchg
pop
mov
sbb
xor
sub
dec
lods
in
addb
mov
adcl
adc
fldl2t
mov
jo
pusha
xchg
push
fs
fisttps
lock
pop
mov
movsl
ljmp
xacquire
and
jl
test
aas
add
inc
scas
lods
incl
ret
adc
or
pop
xchg
loopne
mov
je
dec
std
call
movsb
mov
test
testb
adc
clc
sbb
data16
int3
sbb
lock
ljmp
mov
rcll
xchg
jp
add
clc
fisttps
imul
cs
test
inc
outsl
cmpl
dec
pop
movsb
lods
imul
sbb
add
and
jg
xorl
xor
std
mov
or
mov
aaa
cwtl
leave
sbb
push
es
rolb
iret
js
cmp
jo
or
inc
push
es
lcall
or
push
and
jae
stos
inc
fidivl
dec
mov
cli
int
cmp
adc
inc
lahf
shlb
pop
out
inc
ficoms
add
xchg
sub
inc
mov
cli
rcrb
inc
lret
jl
inc
call
lods
and
lds
out
or
incl
test
sub
lret
cs
add
add
sarl
insl
cld
jmp
inc
loopne
inc
add
mov
nop
lea
cli
sub
hlt
push
push
decb
pushl
lock
xor
xorb
inc
loopne
push
mov
fisttps
cmp
push
xor
inc
cmp
lcall
fcomip
and
inc
adc
cmpsb
mov
xor
add
jp
call
mov
push
xorl
iret
test
xlat
xor
fiadds
stc
call
mov
je
add
shll
jle
outsb
stc
test
dec
ret
xchg
imul
cmp
jmp
out
test
mov
ja
mov
xchg
lcall
sahf
imul
lcall
or
nop
xor
xchg
idivb
pop
mov
inc
cmp
in
and
pop
ret
repnz
push
loope
rolb
add
dec
in
push
out
cmpsb
lock
fsubrl
ja
shrb
or
fsubrs
ja
decl
stos
mov
and
inc
loope
mov
pushl
sbb
ja
dec
fldl
aad
cli
int3
mov
test
jle
fcomip
std
xor
repz
pop
lcall
cmp
mov
lock
and
arpl
xchg
jne
sti
xor
jbe
int
ljmp
pop
jne
add
fdivrp
adc
mov
pop
cld
jg
cmp
lahf
dec
cmp
push
jne
shrb
rcrl
add
test
push
iret
xor
int3
mov
pop
mov
nop
inc
addr16
adc
stos
insl
adc
ret
test
lock
ljmp
daa
push
add
xor
imul
gs
rclb
sub
dec
cs
xor
xor
adc
in
cmp
mov
enter
push
sbb
sub
into
enter
or
add
cwtl
sbb
sbb
and
inc
dec
push
or
sbb
xor
fistpl
xchg
or
pusha
inc
int
adc
and
jg
hlt
outsl
les
movsl
xchg
xor
addr16
fcom
incl
dec
sub
dec
loop
outsl
dec
out
adc
or
inc
jo
subl
test
dec
or
push
rcl
mov
and
ljmp
or
jnp
mov
jns
inc
dec
pusha
dec
and
or
ret
pusha
jl
mov
inc
pop
mov
cli
movsb
cmpsb
lret
push
jge
ret
or
add
push
mov
xchg
mov
popa
pop
ljmp
scas
aad
pop
imul
push
lret
mov
pop
cwtl
shlb
popf
in
xlat
in
test
gs
lret
hlt
incb
inc
loop
rol
push
or
rcrb
mov
dec
dec
add
mov
or
or
repz
scas
jbe
sub
in
pop
xor
jne
inc
out
jg
mov
insl
adc
push
cmpsb
jae
pop
inc
inc
jbe
inc
mov
mov
rolb
into
cs
add
pop
and
inc
arpl
mov
cli
adc
aad
adc
or
cmp
stc
pop
or
icebp
rcr
nop
mov
jb
jg
pop
icebp
outsl
adc
mov
push
dec
test
out
test
mov
adc
push
aad
xor
andb
fidivrl
lret
push
xor
fadds
jne
ds
clc
stc
jg
notb
inc
cmp
clc
pop
pusha
and
dec
add
ret
fisubrs
insl
and
ljmp
mov
hlt
out
mov
test
xchg
pop
negb
sahf
lahf
pop
aam
js
iret
clc
fs
outsb
xor
shl
adc
lcall
gs
fildl
add
and
pop
adc
push
icebp
push
fidivrl
sbb
icebp
daa
mov
pop
and
mov
mov
ja
sbbl
test
jp
jl
movsl
xor
or
gs
mov
jg
ds
push
inc
test
jno
scas
out
sub
repnz
xchg
hlt
call
or
lahf
adc
mov
pop
fs
add
je
pop
addb
jp
jo
cwtl
lods
fsubrl
cmp
sub
stc
test
jl
in
mov
hlt
decl
xchg
xorl
imul
and
movsl
mov
adc
js
loop
or
mov
das
int3
js
add
jl
clc
jg
pop
cwtl
icebp
lods
jl
xor
mov
jmp
cmc
inc
add
pop
xchg
xchg
xor
into
jecxz
jecxz
lea
adc
andb
add
sbb
or
dec
shrb
dec
dec
decl
ret
mov
inc
imul
aad
aas
xchg
jbe
and
pop
insb
lock
clc
les
lds
sbb
nop
or
stos
inc
jp
sbb
pop
xor
les
adc
sbb
pop
sub
mov
lods
inc
cmpsb
add
clc
add
fcoms
shl
jle
hlt
push
ljmp
dec
imul
rorl
dec
push
sbb
aaa
xchg
cmp
inc
and
pop
xchg
daa
sahf
into
ljmp
mov
ret
cmp
adc
jg
mov
insb
cmp
outsb
popf
dec
pop
in
dec
inc
sbb
or
daa
dec
mov
pop
pop
push
lock
hlt
add
push
push
bound
pushl
and
mov
mov
add
cmp
decl
push
mov
add
jg
jno
adc
fs
aaa
stos
mov
inc
dec
mov
mov
add
xor
cmp
ds
stos
adc
and
int3
cmpsb
add
add
adc
std
pop
pop
sub
ret
in
orps
sbb
in
leave
jmp
shlb
out
push
repz
sbb
and
scas
clc
pop
mov
pop
mov
int3
mov
push
xor
aad
or
push
mov
push
icebp
lods
cmp
pushl
shrb
int3
sbb
pusha
pusha
addr16
outsl
dec
jmp
adc
xor
adc
icebp
nop
lret
test
inc
xor
xchg
iret
sbb
mov
mov
sbb
mov
cmpsl
or
insb
or
decl
rol
cwtl
dec
scas
pop
jbe
add
out
pop
dec
sub
adc
gs
dec
std
jmp
dec
daa
loopne
push
mov
addr16
mov
xor
out
pop
xchg
push
add
cmp
scas
movsl
sub
sbb
aam
xor
lret
mov
mov
stc
pop
adc
out
out
pop
sti
mov
sub
clc
scas
mov
or
push
into
ret
jne
pop
fcmovnu
pop
leave
aad
pop
test
lea
and
cmpsl
cmp
mov
in
push
test
add
sbbl
pop
push
xor
lods
mull
inc
stc
jmp
pusha
hlt
ret
dec
mov
or
sub
mov
dec
or
adc
sbbl
push
or
pop
dec
mov
mov
xchg
mov
fildl
mov
cmp
les
mov
xor
inc
test
test
cmp
mov
clc
insl
dec
push
inc
jb
mov
xor
adc
jne
fwait
adc
mov
xchg
movsl
mov
add
add
mov
push
popf
test
lock
add
pop
cmp
xchg
or
lcall
pop
imul
jge
add
xchg
loope
incl
xchg
or
push
xor
jp
adc
inc
lret
cmp
pop
mov
stos
pusha
aas
icebp
xchg
mov
iret
clc
pop
cmpsb
inc
das
jecxz
hlt
jg
ds
shll
dec
mov
sahf
je
or
cmp
pushl
dec
add
xchg
jb
sbb
fnsave
imul
xor
push
sub
push
cli
sbb
cmc
pop
andb
aam
push
sbb
mov
nop
popa
cmp
insb
sub
das
add
xchg
mov
pop
mov
inc
enter
xorb
sbb
pop
inc
in
pop
mov
aaa
aas
mov
sbb
sub
adc
into
mov
push
add
dec
sub
pop
push
or
test
pop
in
and
int3
or
pop
sbb
scas
xchg
jp
jge
adc
xor
incl
sahf
dec
inc
or
test
shrl
test
adc
out
jg
imul
shr
call
add
mov
lock
andb
imul
push
jle
pusha
fcoms
pop
pop
mov
sub
push
sbb
loope
pop
inc
outsb
push
sub
icebp
pusha
mov
div
add
imul
and
adc
cld
and
gs
stos
pusha
cld
stos
jns
js
push
xor
data16
pop
mov
loop,pt
and
or
jmp
lahf
lgdtl
lock
mov
pop
lock
mov
jo
lret
cmp
cmpb
test
lods
daa
mov
je
sub
jg
stos
lds
lock
push
add
add
lgdtl
pusha
mov
and
jl
enter
xor
inc
insb
popf
enter
idivb
jmp
and
sub
xor
and
rclb
mov
add
sbb
scas
ret
jbe
jg
cmp
add
pushl
popf
pushf
sbb
and
ja
pop
mov
xor
dec
mov
push
xchg
and
pop
pop
push
cmp
pop
loopne
ret
sub
or
cmp
mov
cmc
inc
or
mov
or
adc
outsl
dec
sbb
mov
call
cld
dec
cmc
hlt
and
or
adc
cmp
daa
cmp
pop
or
push
adc
and
in
stos
xor
push
decl
lods
cmp
in
inc
or
add
in
adc
push
fimuls
cld
adc
fimuls
add
add
push
pop
sub
arpl
mov
mov
stos
jecxz
pop
sbb
sub
xor
mov
mov
cmp
out
inc
xor
iret
sbb
dec
and
std
in
data16
push
cmc
je
rcl
int3
shrb
cmc
ss
mov
ror
jae
add
jb
das
js
loop
sar
sbb
int3
mov
pop
movsl
push
jmp
test
inc
fists
xor
cli
cmp
je,pn
lock
sub
int3
in
cmp
add
sti
popf
ret
mov
cs
and
filds
out
push
dec
add
lds
push
int3
out
cmp
shll
ret
jg
dec
xor
dec
sbb
add
inc
jle
inc
test
add
mov
jge
ret
adc
fcmovnu
adc
cmp
jmp
mov
dec
adc
popa
xor
pop
rcll
xorl
incl
out
jmp
fs
xor
pushf
sub
xchg
and
mov
pushl
sbb
int3
push
or
add
inc
inc
je
or
lock
fmul
mov
pop
inc
rorl
cmp
inc
jmp
push
sub
je
aaa
add
pop
mov
rcrl
loope
mov
adc
icebp
pushl
add
push
and
xorl
and
out
and
rorl
sub
ss
or
sbb
mov
xor
ljmp
mov
fdivl
jl
in
es
fs
or
shr
jno
mov
shll
ljmp
adc
js
mov
mov
ljmp
pushl
push
pop
or
pushf
dec
push
push
jl
pop
inc
and
xor
adc
sub
push
or
mov
adc
or
mov
add
push
incb
or
pop
in
inc
mov
xchg
call
inc
inc
xor
rolb
inc
andl
add
add
xchg
jnp
lahf
fidivrl
jle
push
push
push
mov
jg
int3
call
xchg
and
push
rorl
mov
adc
ljmp
loopne
mov
fnstsw
inc
sbb
dec
rorb
pop
sub
pop
filds
js
int
in
pop
dec
mov
mov
pop
push
lcall
push
add
pop
roll
sbb
call
pop
push
mov
add
cs
mov
dec
add
decl
pop
xchg
inc
adcb
cmc
clc
pop
or
and
andl
mov
adc
xor
sarl
popf
cmp
xchg
mov
stos
mov
dec
sbb
cmp
ja
shrb
adc
mov
cli
sbb
sub
mov
add
add
xchg
clc
movsbl
hlt
aaa
cmpb
push
mov
scas
rorb
push
gs
hlt
orl
sbb
ret
inc
dec
dec
icebp
out
cmp
sbb
mov
daa
xchg
mov
out
pop
push
les
mov
das
fstl
cli
nop
clc
xor
jo
test
jnp
test
jp
mov
push
xchg
outsl
outsl
or
ljmp
notb
or
jmp
xor
cld
fildll
pop
nop
sbb
cs
das
dec
jle
mov
add
lods
movsb
or
and
xchg
inc
mov
mov
adc
pop
decl
xor
sub
cwtl
xchg
dec
aas
or
sub
sub
pop
cli
incl
popa
pop
mov
jno
and
and
ss
lods
shl
xchg
cmc
inc
xchg
adc
mov
loop
lea
pop
push
ret
xor
add
stos
cs
mov
rcrl
pop
je
add
pushf
cmpb
aas
add
xchg
jg
pop
into
in
out
fists
jmp
add
jo
push
cld
pop
push
in
sub
adc
mov
push
fstps
push
xor
mov
add
dec
rol
sub
push
push
jl
mov
sbb
jns
test
jno
jg
jns
mov
int
jbe
adc
mov
sub
mov
push
pop
pop
pusha
push
or
lock
mov
mov
inc
jg
xchg
fcomip
sub
dec
mov
add
sub
out
lods
ret
cs
sbb
jge
push
insl
or
dec
xchg
or
mov
mov
jbe
jp
prefetcht0
rcrb
roll
xor
dec
ds
add
loope
decl
inc
sbb
sbbl
xchg
call
insb
fidivl
adc
clc
into
bnd
in
mov
xchg
pop
loopne
lock
test
or
movsl
lds
cld
pushl
lock
test
ds
cmp
pop
mov
arpl
jg
dec
mov
mov
jae
imul
cmp
setnp
mov
and
inc
outsl
ds
mov
repnz
add
sbb
mov
mov
out
dec
sbb
xchg
push
mov
sub
insb
jo
loop
decl
lahf
xchg
push
mov
aam
sub
cmp
push
pop
push
pop
cwtl
daa
push
daa
cmp
and
jmp
cltd
movsl
cwtl
cmpb
outsl
movsl
inc
push
pop
jbe
loopne
cs
and
adc
adc
repnz
inc
mov
ja
aam
sub
aad
xchg
cmc
fcompl
mov
or
sub
bound
sbbb
pop
mov
jbe
jmp
add
sar
mov
sub
cmc
in
in
mov
dec
dec
jno
dec
xchg
jne
sbb
int
and
out
or
jg
arpl
xor
jmp
sarl
ss
ret
mov
dec
adc
or
adc
push
mov
add
mov
in
clc
incl
into
inc
jno
jbe
xlat
mov
mov
cmp
aaa
cld
push
and
je
mov
adc
ljmp
xor
push
pop
xchg
lret
icebp
lret
inc
cmpsb
sub
inc
sub
jl
and
xor
test
xchg
sahf
int3
mov
xchg
sbb
call
incl
jmp
dec
popa
enter
or
aam
mov
call
inc
imul
stos
sbb
jo
mov
jecxz
add
lcall
jle
pop
andl
lret
rol
dec
inc
jp
adc
outsl
mov
cs
pop
test
je
xchg
pop
shr
mov
mov
div
out
and
inc
ret
mov
xchg
test
pop
outsl
cmp
add
or
stc
mov
sbbb
adc
adc
fdivr
lcall
adc
insl
lahf
mov
dec
mov
das
ror
sub
xchg
adc
test
push
sbb
add
aad
jo
mov
inc
ret
ret
cmp
jg
movsl
jg
fsubl
icebp
nop
jg
mov
pop
test
push
mov
decl
mov
jns
mov
xchg
test
inc
clc
clc
ljmp
aaa
fsubs
jecxz
mov
xchg
and
sti
enter
mov
addl
das
push
xor
filds
pop
xchg
js
and
les
in
pop
sbb
loop
jl
sub
push
sbb
outsb
fs
sub
jb
xchg
rorb
inc
sub
sbb
mov
addb
or
adc
jl
push
jle
xor
add
mov
push
adc
lcall
inc
add
aas
test
xchg
mov
inc
jmp
pop
sub
cmp
lret
jo
outsl
mov
ss
pop
adc
cmc
cli
ret
and
dec
mov
or
cld
push
stos
xorl
pop
ljmp
icebp
sub
jp
xlat
lds
sbb
xchg
and
icebp
outsl
mov
xchg
or
and
pop
pop
out
test
cmp
gs
pop
shr
sbb
jge
enter
push
add
add
xchg
pop
sbb
scas
xor
xor
fbld
and
lcall
in
fsubr
add
jp
mov
pop
ljmp
movl
mov
fisubrl
xchg
sbb
or
ljmp
sbbl
test
and
fisttps
inc
rol
and
add
push
mov
not
pop
dec
pop
jo
dec
out
and
mov
jmp
mov
loop
scas
notb
sub
pushf
dec
lock
adc
jg
sbb
xchg
or
push
mov
push
sub
sub
test
loopne
or
mov
sub
fiaddl
and
add
ret
test
ljmp
pop
in
sbb
and
insb
lds
xchg
popa
xchg
push
ss
jle
insl
cld
jns
aam
dec
xchg
cs
mov
adc
push
test
test
icebp
pop
sar
sub
aas
push
dec
or
jnp
enter
inc
or
jle
mov
fdivrs
cli
insb
mov
imul
pop
shl
inc
aaa
and
xchg
icebp
dec
cltd
jb
out
into
mov
pop
jne
ret
adc
sbb
xchg
mov
fimuls
push
fsubrs
sbb
orl
daa
in
ret
fidivrl
decb
push
shll
and
and
adc
std
push
mov
clc
aas
mov
mov
push
enter
adc
andl
int3
xchg
adc
xchg
dec
mov
js
or
nop
xor
imul
dec
loopne
and
js
inc
push
iret
cs
lea
shl
xchg
cmpsb
mov
shlb
inc
fs
das
std
inc
adc
xchg
pop
shl
inc
adc
sbb
ss
decl
xor
cmp
adc
push
lds
push
adc
adc
lahf
adc
and
and
or
es
xorb
adc
dec
mov
aas
mov
aam
nop
xor
insb
lret
add
ljmp
pop
call
pop
insl
repnz
mov
lods
sub
fimull
jmp
lahf
sub
xchg
mov
scas
xor
enter
adc
es
and
mov
daa
pop
or
rorb
aas
stos
loopne
lret
or
int3
xor
std
push
dec
addr16
int3
or
cmp
mov
adc
dec
outsb
cmpsl
fists
sub
inc
repz
decb
inc
mov
pop
loopne
nop
dec
in
or
incb
dec
out
push
inc
xor
sub
imul
punpckhwd
jg
push
mov
sti
out
rcl
sub
mov
jp
popa
cmp
inc
orb
scas
lds
adc
pusha
insl
mov
cmp
xchg
stos
roll
push
mov
shlb
test
pop
mov
mov
mov
pop
ljmp
sbb
sbb
dec
bound
loopne
es
cmp
mov
sbb
sti
test
jle
mov
push
cmp
popl
repnz
mov
clc
sub
out
pop
and
adc
xchg
add
mov
add
and
push
and
sbb
ret
add
pop
dec
inc
and
les
xor
iret
push
lcall
loop
das
out
jb
mov
xor
cmp
test
movsb
mov
mov
mov
cmpsb
pop
cmpsl
fcomi
adc
cmp
dec
imul
or
push
and
shll
negb
add
pusha
std
xchg
fidivl
mov
cmpsb
sar
jb
lods
stc
fs
fwait
pop
dec
add
jbe
pop
rolb
xchg
xchg
outsl
lock
jle
popf
mov
pop
xchg
lock
lret
insl
or
fldt
ja
idivb
inc
inc
lahf
dec
orb
pop
leave
cmp
add
test
loope
in
mov
lcall
cmp
addb
inc
push
inc
movsb
xor
adc
jle
jl
popa
jl
outsl
sbb
movsb
xchg
cmpsb
cmpsb
shl
mov
dec
jnp
aas
enter
fucomip
xchg
lret
pop
in
or
sti
dec
cmp
xchg
sbbl
test
loop
jecxz
scas
loopne
shlb
cmp
adc
or
xchg
clc
clc
enter
fldl
je
enter
stc
loopne
ljmp
call
out
imul
je
pop
push
push
clc
and
sub
or
inc
jg
mov
push
cld
out
nop
add
adc
jle
mov
mov
ljmp
addr16
call
lcall
push
fadd
insb
mov
adc
bound
dec
dec
adc
aas
outsl
or
inc
jmp
pop
ret
shl
mov
cwtl
mov
pop
sub
mov
aas
ss
shr
mov
shrl
popf
scas
pop
mov
leave
fs
pop
or
sub
das
ret
out
or
test
xor
adc
imul
or
add
clc
pop
decl
jmp
add
insl
iret
int3
mov
cwtl
or
lret
xor
fisubs
scas
sti
pop
jp
pop
daa
enter
cld
jg
xorb
adc
pop
pusha
inc
clc
push
xchg
add
push
and
sub
and
cmpsb
sbb
inc
xor
push
cmp
sti
mov
loope
pop
adcb
and
cmp
insl
cmpsb
loope
pushf
es
ret
cmp
and
daa
mov
xor
inc
push
inc
decl
or
scas
loop
das
mov
ss
cmp
xor
pop
out
mov
xor
pop
std
sub
cli
xchg
je
add
jl
sub
jbe
sub
in
or
std
insl
mov
and
mov
xchg
jae
test
sahf
adc
scas
or
fwait
int
push
stos
ja
or
pusha
dec
nop
mov
pop
lock
jge
enter
fldl2e
idivb
jecxz
pop
or
hlt
outsl
inc
inc
out
into
cmp
mov
fcoms
pusha
mov
inc
push
int
ret
pop
les
mov
sub
pushf
inc
cld
mov
bound
xchg
or
and
jg
inc
push
sbb
push
adc
push
notb
mov
jbe
adc
sbb
sub
stos
inc
repnz
in
adc
mov
mov
test
push
adc
fsubrl
scas
dec
mov
mov
outsl
jno
pushl
add
das
pushf
fnstenv
inc
push
jle
add
test
cmp
xchg
xchg
inc
sbb
xor
mov
mov
sarl
inc
insb
adc
flds
dec
mov
cs
xchg
push
outsb
inc
or
stos
or
xor
lret
adcl
mov
sub
pop
outsb
push
lcall
cld
sbb
mov
push
fdivp
jne
and
pop
cld
jne
mov
and
add
and
loopne
cli
jg
test
je
jp
nop
cs
xchg
cld
jg
jbe
cmp
test
inc
pop
xor
mov
pushf
loope
lods
jmp
jl
dec
mov
or
insl
mov
stc
cmpl
decl
add
cmpsb
or
mov
fcoml
adc
xchg
mov
test
jmp
cwtl
and
inc
or
cmp
mov
push
dec
or
cmpsb
inc
inc
and
leave
and
sub
inc
lods
mov
shlb
ret
dec
pop
push
add
repz
or
and
dec
mov
sbb
and
fwait
lock
das
sbb
inc
bound
cld
pop
sar
push
add
cwtl
mov
adc
lcall
sbb
pushf
lret
outsl
add
lock
movsb
incl
test
cmpsb
insb
rolb
dec
sbb
or
mov
or
mov
and
adc
adc
add
mov
sarb
add
cmc
shlb
sbb
sbb
daa
cmp
or
fisubrs
data16
xorb
ret
push
sbb
or
adc
pusha
push
pop
js
xchg
and
arpl
or
push
mov
mov
dec
or
fnsave
scas
outsb
adc
loope
adc
ljmp
sbb
adc
outsl
shrb
dec
stos
pop
push
sub
lock
test
push
cwtl
lahf
repz
or
call
adc
loopne
mov
mov
loope
adc
mov
mov
test
clc
dec
repnz
jo
add
mov
fdiv
rcll
xchg
add
cmpsl
nop
pop
test
sarb
fisttps
sar
in
push
xor
xor
movsb
xchg
cli
call
clc
scas
inc
cmp
fistpll
mov
lock
inc
in
into
pop
inc
aaa
inc
and
mov
ja
pushl
movsb
pop
xchg
aam
mov
int3
or
jmp
ljmp
mov
xor
mov
xchg
or
xor
adc
test
sti
fadds
push
aaa
cmp
push
scas
fiadds
jge
cli
stos
or
shlb
into
xor
nop
loop
push
rcll
add
imul
imul
fucomi
inc
xor
subb
jle
sbb
stos
loope
cmp
sub
mov
add
pop
hlt
or
insb
cmc
cmp
pop
jecxz
in
xor
inc
das
jge
mov
or
in
stos
push
out
jo
insb
mov
add
into
notl
mov
add
adc
cmp
clc
test
incl
dec
movsb
notb
sar
xchg
jg
lock
and
adc
push
and
lock
jmp
mov
ljmp
xchg
lods
lods
and
sbb
sbb
ljmp
loopne
mov
outsb
adc
aas
mov
popf
rorb
fs
nop
call
push
push
clc
lcall
fistps
loopne
scas
mov
mov
sub
or
inc
loop
decl
aad
jp
in
mov
aam
lcall
add
test
sbb
fisubl
sbb
into
adc
sbb
push
pop
sbb
clc
jg
cmc
mov
mov
pushf
push
xchg
pop
popa
ret
es
fadds
jp
xlat
pop
aas
mov
push
mov
inc
ret
sbb
je
cltd
dec
mov
pusha
adc
shrb
pop
or
cvttps2pi
xor
scas
and
xchg
sbb
cltd
hlt
gs
fs
adcb
and
inc
je
in
pop
call
popa
add
pop
jp
lds
sbb
sub
jbe
push
xor
lock
or
scas
push
add
xor
xor
cmp
pop
loop,pt
push
gs
pop
decb
cltd
into
test
outsl
cli
jl
addr16
mov
inc
and
jmp
adc
test
adc
pop
pop
insb
cli
scas
xchg
lock
add
call
outsl
or
xor
aad
loop
jmp
std
pop
inc
push
insl
jmp
mov
bound
shll
xchg
cmc
xchg
inc
adc
int
cld
cmp
add
lea
decb
push
push
rcrb
inc
test
mov
inc
xchg
sbb
je
cmp
pop
cmpsb
xchg
jmp
sarb
stc
xchg
mov
and
mov
sar
push
push
shlb
scas
pop
xor
or
popa
and
push
aad
xchg
add
mov
daa
imul
mov
mov
imul
and
inc
rcl
mov
cmp
cs
pop
dec
int
ret
sbb
jg
add
pushl
inc
and
movsb
cmp
mov
into
daa
loopne
addr16
mov
add
lcall
data16
cmp
xor
mov
jecxz
jge
sbb
add
ret
insb
mov
decl
ds
cmp
xchg
xor
lahf
cmpsl
ret
leave
jmp
dec
shl
or
movsl
ds
mov
hlt
push
rcl
mov
out
aad
ds
out
jb
pop
leave
push
push
lods
insb
in
icebp
inc
pusha
add
inc
or
sub
and
push
std
cmp
xchg
hlt
fiaddl
inc
pop
or
stos
clc
mov
jg
decl
xchg
xchg
ss
stos
fisttpl
jae
in
add
sbb
cltd
xor
adc
clc
dec
test
cmpsl
incl
std
stos
mov
and
mov
xor
dec
jecxz
push
ret
mov
inc
enter
mov
sub
dec
adc
in
push
mov
pop
and
mov
sbb
js
andl
test
ljmp
jno
mov
fcomip
jbe
imul
sub
ss
xor
fisubrs
insb
rcll
loopne
mov
pop
cwtl
hlt
sub
cmp
scas
cli
jmp
das
adc
push
bound
fs
bound
xchg
xor
mov
movsb
shr
dec
inc
cmp
push
pop
inc
test
mov
jecxz
dec
adc
mov
das
or
dec
sub
fcomip
jge
and
mov
sbb
or
cmc
push
dec
sbb
pop
mov
fsubrs
and
mov
outsl
dec
arpl
nop
mov
pop
idivl
adc
movsb
cmp
xor
movsb
jnp
mov
push
test
hlt
fwait
decb
xchg
pop
into
add
filds
mov
in
mov
inc
add
daa
lock
arpl
dec
test
mov
inc
sub
in
sbb
js
add
fbstp
stc
insl
mov
paddb
imul
xor
incb
clc
aas
rcrb
aaa
loope
jns
pop
clc
inc
cmpb
mov
dec
mov
stc
add
aad
movsb
add
jmp
or
mov
hlt
push
mov
inc
sahf
enter
inc
insb
bound
dec
mov
incl
cmp
push
cmp
stc
xor
or
data16
jmp
mov
or
std
rcrb
add
add
and
cmc
fcmovnb
stos
sbb
hlt
comiss
rorb
add
int3
inc
shlb
ljmp
pusha
push
mov
mov
pop
test
ja
mov
sub
movsl
jge
xlat
xor
jbe
in
lods
ds
insl
ret
mov
cmp
call
push
sbb
nop
test
mov
jno
fldl
out
xchg
int
outsl
fwait
mov
jb
push
xor
pop
cmp
fwait
adc
and
inc
xlat
push
pop
pop
lcall
aas
sbb
daa
neg
fldl
push
pop
cmpl
push
cmp
adc
loopne
outsb
pop
clc
sub
mov
mov
cld
pop
test
xchg
dec
rorb
pop
pop
pusha
or
add
jg
pushl
push
dec
xchg
mov
sbb
or
adc
push
orb
sahf
sub
jne
mov
jecxz
mov
mov
add
push
mov
mov
jmp
inc
jbe
fs
test
push
or
dec
push
bound
cmpb
add
mov
jbe
cli
mov
add
push
add
dec
mov
jg
xor
pop
out
or
mov
xchg
inc
incb
stc
ret
lret
xor
lods
stc
pop
add
sbb
inc
roll
push
leave
enter
and
and
mov
icebp
push
add
iret
inc
jmp
test
repz
xorl
push
jne
idivl
or
out
adc
adc
inc
inc
adc
pop
mov
inc
push
test
and
push
add
je
repz
test
test
pop
ja
stos
ds
jg
outsb
ds
mov
xlat
mov
incb
xchg
lcall
xchg
add
mov
add
pop
jnp
jmp
and
or
pushf
out
sub
scas
addr16
inc
push
and
hlt
outsl
data16
mov
xor
enter
ljmp
xor
jg
and
loopne
dec
add
test
movsb
push
adc
mov
xchg
fmul
sub
jge
mov
pop
and
or
insb
call
jg
cld
packuswb
sub
or
pop
lock
pusha
adc
shr
mov
or
ja
push
js
scas
je
sub
mov
movsl
and
hlt
lods
xor
fsubr
js
movl
stc
jno
add
mov
push
stos
paddd
dec
push
xchg
sarb
push
lds
push
pusha
push
mov
and
or
add
jp
sbb
cld
lret
std
xor
adc
loope
and
dec
out
test
xchg
mov
xor
dec
xchg
lods
mov
inc
pop
push
adcl
and
pop
mov
jecxz
cs
popl
sbb
out
mov
jmp
test
mov
push
add
shl
test
lds
push
jecxz
and
add
lcall
orl
mov
loop
xor
cmp
shrb
aaa
cld
add
lock
dec
adc
push
xor
cs
xor
fucomp
scas
jge
pop
add
fbstp
lcall
jg
lock
pop
mov
imul
imul
incl
xchg
adc
movsl
dec
add
and
inc
lret
sbb
movsb
je
addr16
cmp
es
lcall
je
es
mov
js
dec
or
sub
sar
xor
pop
and
mov
push
fs
ret
test
incl
lcall
sarb
in
cld
decl
adc
xchg
fldl
push
jne
inc
adc
sbb
add
ret
fs
mov
adc
repnz
mov
cmpsb
ffree
and
add
ss
inc
cwtl
jb
cltd
repz
or
ja
jg
or
sbb
es
imul
insl
xchg
cltd
dec
fdivs
loope
pop
xor
clc
aaa
loop
int
adc
mov
inc
pusha
mov
jmp
or
sub
int3
rcrb
mov
cli
sub
rcll
es
add
add
jnp
popf
inc
clc
std
pushl
and
cmpsl
add
jo
cmp
jg
ror
add
ret
or
subl
and
scas
aaa
and
dec
test
es
dec
js
jae
xchg
adc
cmp
and
fstpt
mov
test
xor
dec
push
mov
and
mov
in
pusha
rorb
sub
inc
les
adc
or
xorb
jg,pt
jmp
test
or
xorl
jl
dec
mov
out
shll
daa
adc
inc
pusha
and
lret
pop
add
sub
mov
add
call
dec
dec
cmpsl
xor
sbb
test
add
icebp
lret
cmp
or
stos
xchg
out
aad
aaa
or
xlat
inc
outsl
push
lods
add
adc
outsl
fisttpll
mov
xchg
int
inc
dec
pop
xor
cmpl
add
cld
clc
pop
imul
test
and
xor
sbb
cld
mov
xchg
and
or
fbld
ret
mov
pop
sub
lcall
push
das
cli
cld
mov
or
sbb
lods
add
das
popa
or
add
ja
jae
adc
push
xor
mov
mov
movb
adc
andb
mov
fdivrs
add
sbb
loopne
lock
stc
stos
pop
xchg
lahf
jbe
cmpsb
jg
mov
xchg
out
fs
sarl
xchg
ret
xchg
mov
inc
jp
test
mov
dec
arpl
clc
push
push
pop
jne
lock
xorl
add
jno
adc
or
sbb
imul
xchg
mov
pop
pushl
scas
dec
frstor
add
mov
add
jns
jp
in
call
dec
fmul
pusha
rol
cli
xchg
sub
dec
adc
pop
add
cli
jg
pop
dec
jl
jmp
add
push
nop
adc
and
add
adcl
fstps
cmc
iret
addr16
xchg
xchg
arpl
and
rclb
js
aas
and
dec
test
in
push
jl
mov
leave
jno
jae
in
loopne
clc
fstpt
xchg
imul
adc
mov
fcomps
out
cld
sbb
mov
sub
push
xor
negb
add
add
lds
sbb
aaa
cmp
push
push
add
repz
pop
mov
add
xlat
repz
and
mov
clc
pushl
lahf
pushf
fisubl
mov
add
shr
push
sbb
xor
imulb
ret
cld
mov
std
incl
push
sub
mov
movb
jb
testb
clc
pushl
xchg
ret
enter
mov
jl
pop
jmp
outsb
jo
push
ss
pop
push
lock
movsb
mov
sbb
ret
mov
call
jb
xchg
fs
lock
and
cs
xchg
lcall
xchg
lods
xchg
and
add
hlt
add
ja
call
repnz
and
nop
jnp
mov
mov
fnsave
das
fcoms
insb
out
test
inc
jmp
add
adc
xchg
sbb
std
pop
push
sub
or
push
pop
push
sbb
sub
out
jb
bound
sbb
es
in
pop
bound
push
adc
and
mov
imul
sub
cli
jl
dec
mov
pop
lods
xchg
jle
jmp
adc
pop
rolb
mov
cltd
jne
je
dec
inc
and
pop
fs
cld
fcmovnu
inc
das
cmp
sbb
clc
cmp
xchg
in
sbb
pop
adc
or
ljmp
adc
sti
das
xchg
adc
adc
sub
xorl
inc
sub
dec
add
das
push
mov
push
or
push
dec
xor
fcmovbe
out
pop
adc
jg
jecxz
dec
jp
adc
push
pusha
testl
bound
pop
aam
cmpsb
xor
stc
push
xchg
cs
popa
std
scas
cli
cltd
movb
pop
sahf
aaa
cmp
lock
ficoms
jl
sub
mov
mov
testl
ja
out
mov
shl
call
xor
sub
filds
dec
dec
dec
mov
xor
inc
arpl
cld
cmpsb
lods
pop
adc
push
adc
dec
xchg
xchg
mov
decl
jb
cs
xchg
add
xor
mov
lcall
jp
cmc
fbld
sbb
mov
dec
push
or
xor
or
jle
and
pop
in
xor
dec
xor
pop
test
inc
xchg
adc
push
out
sub
cmp
enter
jns
mov
lcall
push
mov
mov
stos
add
xchg
mov
pop
sub
lcall
movsb
mov
and
cmp
pop
ds
call
out
jmp
lahf
icebp
inc
lretw
jae
ficompl
aad
pop
mov
fwait
pop
insb
jb
sbb
je
in
pop
neg
inc
out
cld
pop
fs
test
lds
bound
sbb
dec
pop
mov
aas
push
stos
xchg
or
add
push
cmc
ljmp
test
jae
ret
shlb
xchg
xor
mov
aaa
cmp
shl
aaa
scas
pop
add
jb
idivb
sub
mov
or
push
fxtract
jg
ss
lcall
xchg
in
or
add
push
adc
push
pushf
push
inc
push
ja
add
mov
mov
call
mov
add
inc
jb
mov
jmp
rclb
or
pop
mov
xlat
ja
mov
hlt
lock
sub
in
lahf
fmul
push
repz
sub
dec
mov
xchg
mov
hlt
aas
push
sbb
movsb
out
daa
cmpsl
cmp
orb
rcll
pushf
add
ds
incl
push
jle
ss
adc
adc
decl
adc
stos
out
ficomps
dec
jecxz
and
in
push
dec
imul
cli
enter
add
dec
movsb
adc
inc
pushf
data16
lock
add
jecxz
xchg
jecxz
pop
push
gs
xchg
adc
sbb
xor
inc
add
dec
mov
cmpsb
pop
add
mov
les
incl
dec
fisttpll
mov
push
push
dec
inc
jmp
jg
and
sbb
jbe
xchg
and
add
in
in
xor
or
js
lcall
out
inc
cmpsb
fbld
outsl
cwtl
addr16
lock
fwait
in
lock
sbb
cmpsl
adc
outsb
enter
inc
xor
xor
outsb
push
test
dec
and
or
test
jbe
cmp
adc
stos
std
mov
mov
rcrb
or
clc
ljmp
daa
xor
fbstp
imul
sub
mov
icebp
xchg
cmp
call
xchg
popf
push
push
test
jmp
pop
movsb
pushf
ljmp
mov
imul
adc
ss
cs
lcall
add
test
sub
mov
mov
iret
jns
js
add
sbb
mov
test
xchg
push
sub
push
mov
stos
pop
arpl
incb
andb
mov
aaa
fdivr
fisttps
push
push
xadd
mov
xor
add
and
pop
lds
xor
jbe
dec
rcr
lea
mov
je
add
mov
sarb
and
mov
les
sbb
fsubrs
icebp
in
cmp
ss
stos
dec
sub
mov
sar
popl
and
adc
or
arpl
mov
add
or
xchg
pop
cmp
decl
std
movsb
mov
sahf
sub
into
inc
adc
out
out
push
jb
jmp
jo
pop
push
mov
lcall
mov
mov
test
in
les
add
dec
lahf
lcall
push
ljmp
xchg
out
inc
cmc
push
mov
or
mov
sbb
fildll
adc
mov
loope
pusha
nop
les
mov
pop
push
xlat
and
jmp
cmp
jle
and
cltd
div
xchg
cmc
push
mov
push
aaa
popf
adc
mov
jg
dec
cs
loopne
pop
nop
shrl
fmul
std
vprotw
test
ljmp
and
push
cmpsl
les
orb
pushf
add
sbb
mov
mov
mov
mov
mov
pop
mov
movsb
jmp
arpl
hlt
mov
clc
inc
dec
adc
xchg
pop
cwtl
jbe
test
jecxz
rclb
nop
subl
mov
loope
lds
decl
inc
lods
inc
rcl
add
aaa
sar
or
imul
scas
std
roll
add
in
mov
sub
bound
sub
pop
mov
lods
cwtd
fcomps
mov
lahf
dec
inc
and
sbb
or
and
sti
bound
outsb
mov
push
mov
adc
fs
or
dec
push
xor
ljmp
xchg
imulb
or
mov
lahf
nop
inc
mov
xchg
adc
pushl
bound
push
clc
pusha
bound
pop
sti
cmp
ss
mov
push
pop
inc
mov
sbbl
movsb
dec
out
xchg
sub
aad
icebp
lock
dec
std
das
fidivs
test
test
sbb
incl
push
icebp
mull
loopne
repz
sub
sub
hlt
in
mov
popf
or
arpl
mov
jecxz
push
adc
or
outsl
incb
jo
ret
mov
push
pop
je
xchg
daa
dec
bound
in
pop
lcall
nop
out
add
add
jg
dec
movsl
and
jo
das
cltd
jne
lret
sbb
xor
mov
mov
test
int3
pop
loope
subb
jl
pop
fiaddl
jge
and
mov
les
add
or
ret
inc
fxch
aaa
mov
push
daa
test
adc
std
dec
cmp
stos
sbb
sub
lret
icebp
cld
or
jp
mov
cmc
adcl
push
mov
sbb
mov
addl
and
adc
rcrb
je
scas
add
dec
xchg
iret
add
add
or
in
imul
mov
sarb
xchg
xor
imul
std
cmp
push
xchg
adc
mov
adc
dec
ds
push
loopne
incl
sbb
adc
jne
inc
cmp
popa
popf
sub
aas
or
cmpsl
mov
mov
leave
pop
xchg
mov
xor
jbe
or
cld
push
out
loopne
push
repz
into
ljmp
push
aas
inc
xchg
lret
iret
add
mov
leave
das
jl
loope
or
movsl
xorb
aas
arpl
push
xor
jo
and
adc
fcoml
push
inc
jb
cli
stos
push
jp
cld
lock
sbb
xorl
ja
cwtl
insb
lahf
inc
fidivrl
xchg
cmp
loopne
arpl
mov
adc
mov
div
sbb
cld
mov
adcl
inc
dec
in
cmp
outsb
jmp
xorb
iret
sbb
in
mov
sub
or
add
add
dec
cmp
leave
std
push
repnz
aas
push
jbe
mov
pop
push
sbb
lds
icebp
mov
xchg
sarl
repnz
stc
decl
jge
lahf
adc
int3
pop
mov
leave
andb
aad
psubw
es
adc
inc
clc
js
popf
test
pop
add
pop
sbb
inc
pusha
daa
jge
xlat
data16
dec
mov
addl
jo
decl
loop
shl
rcll
lahf
loop
mov
push
cwtl
dec
neg
push
rcll
call
xor
scas
xchg
das
pop
fildl
imul
int
mov
adc
jns
movsl
enter
jle
divl
incl
adc
pop
mov
dec
rcrl
insb
xchg
mov
decl
push
roll
pop
inc
subb
xor
cmp
jmp
push
jg
jo
or
or
dec
faddl
push
js
jmp
inc
lcall
push
leave
popf
push
loopne
jmp
adc
sub
out
dec
sahf
mov
inc
mov
sbb
scas
cmp
dec
add
mov
mov
pop
dec
inc
xor
xchg
insl
xchg
call
cmpsb
out
add
pop
sti
dec
scas
sbb
add
and
and
dec
dec
xchg
std
sbb
and
mov
mov
sub
sub
add
rorb
pop
icebp
ljmp
or
or
jnp
or
dec
adc
cmc
pushl
or
sbb
sbbl
or
mov
subb
dec
push
shll
sub
dec
mov
mov
incl
jp
sbbl
mov
add
mov
mov
jmp
push
insb
dec
or
decl
pop
dec
xchg
movsl
mov
mov
mov
pop
cmc
cmpb
mov
dec
out
outsl
and
sub
lock
inc
mov
mov
cli
sbb
jecxz
test
xor
mov
cli
imul
mov
mov
xor
pusha
outsb
outsl
jmp
xchg
or
nop
stos
loop
ret
push
mov
out
mov
popa
xchg
lret
add
lea
imul
sub
xor
gs
push
out
mov
mov
outsl
lea
fisttpl
or
pop
adc
jl
lock
loopne
dec
ret
mov
adc
xchg
inc
fadds
push
cmp
nop
add
jl
or
pusha
scas
adc
out
cwtl
xchg
add
jo
fstl
cltd
rcrb
mov
jecxz,pn
subb
cli
push
pusha
pop
xchg
cmpsl
dec
sub
mov
cli
aad
push
sbb
icebp
ja
popf
add
xlat
mov
mov
pop
insb
jge
call
mov
je
or
decl
jmp
jle
inc
loopne
cmp
loop
pusha
adc
cmc
enter
imul
mov
add
lret
dec
push
in
cmpsb
xchg
cmp
fwait
js
ret
cld
dec
incl
flds
and
adc
push
and
mov
outsl
xchg
bound
mov
dec
sub
jg
mov
mov
sub
or
dec
std
inc
inc
mov
or
retw
push
fnstcw
icebp
jmp
lods
in
sbb
adc
fcmovnu
cld
push
pop
sbb
mov
add
insb
ja
adc
inc
loopne
lcall
loop
xlat
les
cmp
stos
test
and
clc
jg
incb
ss
movb
add
xor
pusha
mov
outsb
add
lret
inc
fstpl
pop
call
into
inc
mov
or
loope
cwtl
push
decb
xchg
mov
lret
or
pop
loope
mov
lods
loope
jg
aaa
ret
ss
lods
pop
xchg
shrl
jo
roll
add
clc
outsl
or
mov
rorl
sbb
shl
jmp
incl
ds
dec
lock
fimuls
push
and
pop
add
or
jmp
mov
mov
mov
fld
cmp
scas
or
outsb
mov
lret
inc
push
push
test
icebp
lcall
mov
push
into
sahf
jae
or
add
loop
je
adc
push
rcrl
or
jae
loopne
mov
xlat
inc
js
out
icebp
sbb
adc
dec
or
decl
es
inc
sub
sub
sbb
stc
mov
sahf
bound
or
push
mov
mov
adc
js
call
push
movl
pop
es
clc
sahf
xchg
fwait
bound
call
cltd
scas
adc
ret
mov
fcmovnu
imul
dec
sub
adc
out
mov
mov
add
mov
mov
jae
lcall
clc
pop
das
sbb
in
mov
es
test
inc
xchg
in
push
out
sbb
mov
adc
aam
sub
adc
popf
into
inc
cmpsb
lods
mov
incb
cmp
movsl
jp
sub
decl
pop
cld
and
loope
push
pop
movsb
sbb
mov
or
outsl
aaa
adc
and
cmovae
push
pop
cwtl
and
shrb
scas
decl
mov
or
dec
inc
mov
or
sbbb
push
mov
or
sub
xor
cmp
add
sbb
lock
loopw
lods
hlt
lahf
xchg
shlb
or
dec
and
incl
adc
je
cmp
mov
pop
mov
loop
out
sub
aas
insb
add
cmp
jno
gs
mov
loopne
movsb
insl
push
push
jl
mov
cltd
add
push
jmp
inc
or
scas
inc
cmp
push
mov
lods
push
out
inc
cmp
stos
sbb
out
sarb
das
or
sub
dec
dec
test
cmpb
rep
nop
inc
test
inc
nop
pusha
jbe
scas
subb
inc
icebp
ss
and
dec
in
xchg
pop
in
flds
fsubs
mov
push
mov
outsl
and
sub
ss
jmp
les
mov
cmp
or
test
addl
push
lock
mov
push
and
bound
xor
mull
test
add
mov
movsl
cld
ret
and
sti
scas
jne
adc
mov
mov
cmp
rclb
push
clc
pop
cs
enter
dec
adc
stos
aas
adc
in
loop
cmp
gs
pushf
orl
ljmp
adc
mov
repnz
jl
push
mov
test
jo
mov
xor
push
orb
add
fs
lcall
or
lods
pop
dec
dec
adc
add
jg
nop
test
cmp
in
cmp
lea
sbb
jnp
mov
sbbl
or
bound
or
xor
test
sub
lea
loopne
add
push
jg
cmp
and
jmp
les
and
je
sarb
sub
mov
cmp
cmp
adc
mov
sti
adc
lcall
mov
xchg
stos
jge
lret
das
or
shrb
dec
sub
lret
push
cli
ret
dec
cmp
jmp
push
das
add
pop
loope
lret
in
fwait
scas
ss
push
call
push
cmp
or
adc
es
les
sbb
sti
inc
cltd
out
add
jg
scas
add
jg
xchg
js
cli
sbb
movsl
add
mov
cmpb
dec
and
add
imul
or
xorl
cmp
sub
xor
addr16
mov
jmp
cmpsl
cmp
lret
push
sbb
aas
push
jmp
stos
ret
jge
subl
lret
test
pop
cltd
or
clc
jae
stos
mov
dec
and
decl
xchg
jo
pop
repnz
rcl
cmc
xchg
jae
pop
lock
sbb
cmp
adc
jl
adc
scas
out
mov
inc
mov
movsl
cwtl
dec
inc
jo
cld
jns
sub
adc
pusha
shlb
push
push
mov
out
xor
pop
ret
stos
push
push
jp
in
xor
arpl
aam
jno
icebp
xchg
or
std
repnz
cmpsb
aaa
cwtl
cmp
sbb
leave
and
mov
adc
std
fucompp
push
cld
lret
jecxz
push
jp
sbb
push
pop
add
fistps
pop
cs
mov
icebp
jl
pop
add
add
testb
jl
sub
push
cmp
pusha
test
push
call
stos
mov
fwait
add
jo
xchg
fsubrs
and
cli
add
nop
insb
lcall
fwait
push
add
out
es
jb
mov
xor
mov
jmp
aaa
cwtl
dec
jge
xchg
pop
lock
inc
fwait
adc
loope
pop
lock
das
add
mov
testb
aad
mov
and
sub
cs
fcmovu
mov
and
ss
mov
xchg
push
cld
sbb
sbb
fwait
sbb
mov
ljmp
fsubl
cmpsb
jne
test
int3
nop
ret
mov
clc
push
fcompl
mov
cltd
add
sub
neg
stos
test
jecxz
mov
mov
dec
icebp
popa
movsl
mov
loope
mov
cltd
roll
inc
and
divb
std
adc
dec
mov
mov
call
mov
popf
mov
mov
and
and
test
mov
sbb
out
cld
push
insb
loopne
add
rclb
adc
mov
add
adcb
fisubs
inc
sahf
mov
pop
aas
add
mov
sub
orb
jne
adc
iret
arpl
cmp
adc
iret
in
fistpll
ss
push
fmul
cld
rep
jg
popw
popf
xor
adc
mov
xchg
mov
mov
lahf
mov
and
rcl
shl
add
repz
adc
mov
push
or
faddl
mov
lods
loopne
pop
roll
pop
stc
dec
lret
sub
and
pop
ret
mov
jge
aas
leave
xchg
subl
cs
inc
imul
sub
shlb
gs
jl
xchg
into
and
xlat
shlb
mov
jmp
or
sbb
xchg
gs
push
pop
std
xchg
mov
sbb
cs
out
sub
cmp
out
cmpsl
add
imul
mov
sub
in
adc
xchg
pop
jg
icebp
pop
test
jae
cmc
push
cmp
or
int3
incl
sbb
leave
les
mov
lcall
hlt
dec
push
mov
out
jbe
decl
mov
sti
push
cmp
xor
testb
das
and
daa
xchg
push
sbb
fisttpl
js
cmp
daa
mov
cmp
mov
das
add
outsl
cli
push
cmpsl
cwtl
loop
ret
ffreep
leave
jb
cmpl
negb
test
pushf
inc
add
into
adc
adc
fldcw
dec
into
pop
mov
mov
loope
in
sbb
add
js
add
std
dec
fwait
dec
fs
test
clc
cmpsl
sub
loopne
mov
and
invd
cmp
repz
lcall
add
inc
jo
push
mov
cmpsb
sub
cmp
jmp
jp
cmp
mov
mov
cmp
pop
insl
shr
jno
jmp
mov
inc
sub
test
mov
mov
daa
add
pusha
dec
loopne
add
fdivl
popa
enter
lds
les
add
into
lcall
add
mov
cltd
push
push
test
std
sbb
rorl
and
hlt
incl
dec
xchg
cwtl
ds
mov
push
int3
push
loopne,pn
xchg
sahf
mov
push
roll
push
adc
and
jbe
push
inc
jns
ret
lcall
and
adc
loop
inc
fldlg2
mov
sar
mov
sti
jb
loopne
cltd
add
lret
pop
and
out
mov
scas
fcmovnbe
add
sbb
push
cmp
movsl
xchg
xchg
xor
cmp
dec
aam
mov
xchg
bound
mov
mov
push
and
and
adc
inc
jge
adc
add
mov
jg
xlat
jecxz
sub
inc
mov
add
or
or
and
mov
mov
or
inc
jl
lcall
out
in
pop
mov
insl
fsubrl
clc
sbb
and
pop
or
stos
jb
cwtl
jl
pusha
mov
pop
cli
cltd
lock
ljmp
push
addr16
add
sub
ret
ss
dec
xorl
sbbb
inc
bound
and
xchg
rcrb
mov
inc
add
fs
sub
sbbl
jnp
scas
adc
cltd
jo
jge
pop
scas
sub
and
or
in
test
mov
pop
cmpsl
out
sti
incl
sub
xchg
subl
xchg
adc
mov
or
movsb
add
lret
lock
inc
push
das
xchg
test
lret
xchg
mov
fnclex
aas
adc
inc
pop
adc
push
cmp
cli
push
sbb
jmp
iret
sub
sbb
dec
call
decb
loop
pop
sub
ja
or
fldl
add
shr
scas
fbstp
and
push
sbb
leave
sub
adc
jmp
or
loopne
jg
aad
aas
pop
enter
add
jne
pop
rorb
xchg
stos
jl
mov
xor
shlb
jl
nop
stc
sub
inc
and
adc
dec
adc
daa
decl
add
lea
and
insl
sbb
adcl
and
push
iret
aas
test
adc
or
inc
jns
push
push
enter
lods
mov
aad
mov
pop
jp
enter
retw
adc
pusha
test
mov
fistpl
ja
mov
pop
sbb
je
ret
pop
enter
sbb
cli
insl
or
xor
int
loop
loopne
lock
sbb
test
mov
cmp
add
das
mov
pop
movsb
loope
out
aas
sbb
and
pop
pop
dec
js
inc
sbb
dec
or
hlt
jg
bound
mov
xchg
cmpsb
lds
clc
pop
test
pop
or
and
inc
sub
add
call
sbb
icebp
aas
sub
add
lods
push
cmc
add
sub
dec
in
push
inc
stos
ja
sbb
cmpsb
sbb
dec
daa
push
inc
mov
loope
fisttps
add
out
and
mov
mov
stc
push
add
pushf
ljmp
pop
or
call
test
das
and
movsb
scas
add
out
rep
adc
out
sti
rolb
subl
add
sbb
outsb
pop
cmp
andl
sub
nop
pop
in
cli
mov
sbb
mov
bound
mov
dec
lret
dec
sub
loope
add
push
loopne
push
lds
ljmp
add
or
enter
pop
cmp
sarb
inc
pop
cmp
mov
orb
fucomip
incl
jecxz
mov
dec
cmp
cmpsb
xor
daa
mov
jmp
pop
ljmp
push
or
sbb
mov
call
lret
and
add
pop
sub
loope
test
fwait
and
jl
push
loopne
pop
cli
cmpsb
in
push
ret
in
lock
jle
sub
dec
dec
xlat
adc
mov
sar
lods
test
push
xchg
mov
add
sbb
pop
enter
clc
sbb
mov
out
je
push
pushf
mov
or
mov
out
push
clc
sub
adc
aaa
add
mov
cmp
div
mov
jmp
pop
push
in
dec
cmovno
push
pop
mov
jne
call
push
or
inc
or
fsubrs
sahf
orl
xchg
test
xchg
cmp
pop
ja
icebp
ljmp
xchg
inc
mov
xchg
adc
scas
loopne
ret
jle
xchg
jbe
sahf
hlt
dec
scas
rorl
jmp
aam
cmpsb
and
es
pusha
je
adc
pusha
sbb
push
call
adc
jnp
shlb
rorb
flds
ror
cs
pop
pop
clc
clc
movsl
and
and
decl
push
fidivs
pop
adc
inc
cmp
les
shrl
inc
lds
lret
jo
xor
cli
pop
je
push
xchg
mov
and
enter
mov
mov
push
xchg
test
out
mov
and
add
in
rcl
dec
int3
pop
or
mov
lcall
dec
or
jne
push
xchg
xor
sub
call
in
xchg
add
sbb
mov
sbb
std
scas
push
adcb
aas
pusha
inc
faddl
in
movsl
test
shll
xor
and
fldcw
cmp
cs
push
xor
inc
iret
cmc
test
insl
sbb
popf
enter
les
aas
xorb
pop
xor
mov
call
or
jno
sbb
adc
pop
mov
int3
xchg
jle
divl
jb
fists
pop
adc
adc
push
aam
movsb
and
adc
repz
add
and
cmpsb
sarb
ret
out
mov
in
jns
xchg
cmp
aaa
test
insb
xchg
sub
lcall
ljmp
and
jae
fdivs
or
ficompl
add
lret
es
arpl
xor
in
pushl
pushf
push
cmc
rcrl
movsb
push
inc
jmp
pop
popa
lods
sub
outsl
in
xchg
and
xchg
and
lock
cmp
jg
ds
test
or
inc
inc
xor
mov
and
xor
add
jle
insb
add
lahf
and
repnz
leave
loopne
jge
loopne
fiadds
andl
clc
sbb
cli
pop
sub
mov
add
or
push
pop
cli
incl
jno
mov
mov
fldcw
mov
pop
jecxz
dec
inc
out
push
lea
or
mov
xchg
ljmp
leave
lcall
xor
and
add
fs
test
sub
pushl
dec
rolb
ljmp
lods
mov
jnp
pusha
mov
inc
push
ret
fs
push
sbb
lods
sbb
das
bound
rcll
add
sub
shld
sbb
lcall
cld
jmp
or
mov
cmpsb
aam
or
rcrl
movsl
nop
dec
jl
inc
lods
stos
jg
xor
add
mov
mov
push
mov
stos
xchg
js
xor
mov
mov
test
imul
lret
lcall
mov
add
push
fs
mov
mov
call
or
sahf
inc
sbb
lcall
movsl
mov
stos
pop
in
orl
call
test
and
enter
lcall
arpl
sub
cmp
push
pop
push
inc
cmp
or
repz
push
fwait
cld
sbb
mov
fs
inc
dec
pushf
lret
mov
rol
inc
aas
mov
push
mov
jne
outsl
xorb
dec
test
loop
sarb
cld
mov
xchg
pop
push
push
sbb
aas
push
mov
dec
cld
scas
xor
lock
std
mov
dec
cmp
pop
adc
add
jge
ficoml
dec
clc
add
leave
ficoms
daa
test
cmp
mov
out
fsubs
lcall
mov
clc
dec
add
fdiv
ss
dec
bound
and
add
dec
mov
stc
add
jne
mov
stc
jp
imul
inc
sar
sbb
push
movsb
and
adcl
inc
jg
push
js
inc
dec
cld
dec
jmp
std
outsl
out
jb
fmuls
or
push
aaa
rclb
int
fldt
out
es
adc
mov
test
stos
inc
adc
push
pop
std
mov
mov
inc
xchg
pop
or
stos
rolb
mov
push
test
outsb
loopne
jne
and
adc
sub
stc
incl
filds
lret
sbb
cwtl
clc
mov
stos
data16
les
lret
adc
les
lods
movsb
and
aaa
xor
and
jge
or
add
nop
pop
jle
imul
rcrb
push
add
ret
dec
sbb
adc
cmpsb
in
stc
pop
cmp
pop
psadbw
cmp
insl
pop
fbld
inc
aad
rolb
push
sub
decl
push
lret
out
push
xchg
xchg
and
lods
dec
aad
das
gs
roll
mov
and
popa
jmp
and
or
jnp
hlt
add
fcompl
pop
and
sbb
lds
scas
fstps
stos
sub
jge
jmp
mov
pop
mov
dec
sub
cmc
mov
jg
out
jmp
push
or
jnp
jg
mov
xor
mov
mov
mov
mov
out
cmpsl
or
mov
push
lret
xor
and
cld
sub
push
icebp
pop
lret
fbstp
adc
movsl
test
mov
subb
addr16
or
inc
fisubrl
lcall
push
addl
mov
add
dec
data16
enter
jmp
pop
repz
cmp
cmpsb
incb
and
and
xor
xchg
add
fs
bound
int3
loopne
movl
into
fimull
or
mov
subb
xor
test
push
cli
xchg
roll
or
insb
mov
aaa
xorl
cli
mov
pop
into
ret
cmpsb
mov
inc
aad
std
icebp
dec
inc
test
addr16
mov
dec
loopne
cs
xor
push
rorl
mov
dec
hlt
incl
pop
xchg
imul
adc
outsb
fcoml
lcall
ret
fstpl
cld
orb
je
jge
or
inc
movsl
in
add
pushl
cmpsl
push
movl
add
push
or
adcb
orb
cmpsl
pusha
mov
push
lahf
ds
out
or
fisttpll
fcomp
and
enter
scas
jb
aam
insl
cmp
push
loopne
mul
sbb
dec
dec
std
push
jecxz
inc
dec
adc
daa
lock
and
and
decl
adcb
inc
inc
bnd
cmpsl
std
ss
dec
xchg
fsubrs
test
inc
push
arpl
mov
call
mov
adc
push
iret
and
jp
mov
jb
pop
inc
xchg
mov
movsb
adc
call
incl
sti
add
gs
adc
data16
push
add
fcompl
sub
cmp
adc
pop
and
mov
subb
xchg
and
sbb
jl
adc
dec
test
ret
mov
fimull
pop
xchg
mov
lret
push
xor
or
jg
call
mov
jo
fbld
jp
mov
rcrl
call
mov
shlb
add
sbb
fldenv
cmp
imul
hlt
adc
leave
push
js
adc
icebp
pop
add
add
mov
clc
rclb
inc
shll
mov
hlt
add
mov
add
xchg
lcall
stos
pop
fisttpl
inc
into
jle
or
idiv
outsl
pop
icebp
lcall
push
scas
mov
cmp
scas
jg
sub
pop
xor
adc
xor
rolb
or
push
cld
lcall
ja
jo
sbbl
jge
shll
push
cmpsb
xor
mov
fcmovnb
adc
sub
cli
adc
xchg
inc
add
popa
aas
and
decl
pushf
imul
or
push
add
loope
add
inc
lret
stos
mov
add
jle
scas
jge
call
xchg
mov
pop
icebp
and
lock
push
sbb
rcr
fimuls
cs
sti
fs
adc
xor
shll
or
pop
out
push
js
push
fs
lods
inc
jmp
inc
shlb
les
jg
add
loopne
cmp
or
ds
cwtl
adc
jmp
out
adc
shlb
cltd
sbb
dec
es
jns
mov
mov
jmp
adc
jbe
int3
test
stos
inc
adc
out
insb
sub
hlt
dec
scas
xchg
mov
mov
and
das
lcall
and
adc
pushl
mov
loope
and
les
add
incl
push
push
add
loopne
xchg
and
clc
ss
call
jecxz
mov
mov
arpl
std
mov
test
dec
fiadds
mov
arpl
sbb
call
stos
dec
call
xchg
ds
adc
add
pop
iret
in
inc
iret
xchg
jmp
mov
sbb
pop
push
shlb
sbb
nop
mov
dec
les
mov
stos
les
dec
cmpl
cmpb
dec
mov
or
xchg
adc
fadds
fwait
negb
rcrl
push
cmp
les
clc
mov
inc
mov
push
adc
leave
ljmp
lock
cmp
mov
pop
in
sahf
sbb
sahf
sub
add
push
loop
pop
cld
ja
into
and
and
sub
out
inc
mov
inc
inc
clc
sbb
out
dec
je
inc
cmp
ljmp
jae
pop
movq
sbb
push
rcrl
or
je
add
mov
fadds
and
sarb
or
xor
fdivrl
cli
incl
in
mov
insb
flds
cld
push
xchg
cmp
out
adc
jp
inc
xchg
mov
lcall
add
dec
test
mov
dec
jbe
dec
stos
add
jb
adc
add
pop
mov
imul
mov
jp
inc
mov
mov
or
dec
mov
add
jge
cli
leave
call
decl
push
clc
mov
imul
dec
pop
inc
mov
cltd
lret
sahf
ds
sbbl
and
mov
mov
lock
add
shll
xor
cmp
fs
adc
cmp
int3
inc
cmp
add
jmp
push
orl
jl
or
cmp
jmp
jae
or
es
cmp
or
clc
mov
cld
out
pop
movsl
add
leave
repnz
mov
fcomps
mov
cmc
or
fs
sbb
in
xchg
loop
icebp
mov
dec
shrb
pop
fsubrl
ja
jle
inc
cmp
je
ss
popf
adc
mov
adc
sbb
mov
test
addl
das
mov
sbb
or
call
rolb
pop
jp
sbb
decl
jle
xchg
popf
rolb
pop
mov
bound
aas
sar
mov
fadds
popa
push
sub
rcl
cs
and
push
mov
and
fucomip
or
jae
shr
jo
cwtl
popa
insb
js
jmp
or
out
push
inc
lcall
xchg
or
dec
or
push
inc
push
ljmp
fnstcw
pop
cwtl
scas
pop
pop
sbb
incb
movsb
push
jns
cli
push
std
push
mov
cwtl
loop
push
jns
in
movb
mov
jg
ljmp
xchg
xchg
mov
mov
imull
rclb
pop
jae
cmp
cld
mov
pop
sahf
nop
popa
scas
pop
ja
lock
xchg
jge
fistpll
dec
sub
mov
add
adc
hlt
into
jo
aad
jbe
jl
rolb
add
mov
nop
mov
add
dec
and
pop
push
inc
subb
ss
inc
cli
jne
add
fadd
push
xchg
mov
notb
push
sbb
or
mov
jp
xchg
add
pushl
mov
and
fiadds
les
sub
lds
pop
adc
mov
sbb
test
push
inc
scas
lret
js
filds
rclb
insl
dec
xchg
mov
loopne
push
mov
pop
adc
mov
bound
sbb
or
pop
movsb
add
pop
add
adc
mov
sub
jne
lods
dec
movsb
pushf
xor
incb
pop
mov
mov
push
enter
popl
pop
lahf
popf
rolb
jmp
xor
mov
sub
adc
xchg
xchg
mov
rcl
mov
lods
mov
rol
int3
lcall
push
mov
jb
mov
sub
add
mov
xor
adc
push
faddl
sub
adc
mov
pop
lret
dec
xor
xor
push
cmp
adc
cltd
adc
movsb
inc
dec
add
fisttpl
popf
loopne
ds
mov
xchg
incl
bound
or
push
dec
icebp
dec
cli
jmp
jg
rorb
mov
mov
push
inc
leave
mov
push
insl
inc
xchg
mov
pop
js
popf
and
scas
sub
dec
std
adc
sub
pushf
stos
push
ss
pop
pop
lret
adc
sub
mov
out
push
sub
push
mov
movsb
stos
push
or
jecxz
sbb
xchg
jmp
addb
add
pop
cmp
rolb
or
lret
jo
mov
fsubl
sbb
lcall
pop
sub
rcrl
sbb
out
insl
mov
push
lock
les
push
sub
movsb
cld
push
dec
js
aaa
scas
js
inc
repz
push
push
cltd
or
incl
sbb
pop
inc
loopne
aad
psubsb
push
push
push
and
push
repz
inc
sub
cmp
add
inc
pop
aas
lret
insl
jecxz
or
popf
adc
mov
jmp
mulb
jecxz
aaa
xchg
jge
cmp
add
mov
in
cmpsb
rcrb
outsb
cmp
push
mov
sub
in
and
cmp
icebp
movsb
pop
add
push
popa
xchg
dec
fisubs
jns
shl
push
cmpb
push
stos
jae
hlt
dec
mov
test
jb
decb
les
xchg
or
insb
xchg
lcall
push
lds
faddl
imul
or
lcall
into
sbb
dec
popa
mov
outsl
test
push
lcall
or
jbe
test
sar
dec
and
nop
push
mov
shrl
repz
out
int3
ret
jo
stos
sub
lret
mov
fnsave
dec
test
sub
pop
cmc
inc
jmp
cld
adc
cld
cmc
mov
rcr
add
popa
sar
add
movlps
sub
les
mov
or
adc
insb
rorl
decl
mov
outsl
js
add
aaa
jae
outsl
add
adc
iret
jg
mov
arpl
mov
inc
and
mov
mov
fdivs
and
cmp
sbb
fnstcw
popa
jae
loopne
rorb
inc
dec
add
push
jge
pop
incl
fdivp
cmp
in
xchg
dec
gs
fcmovu
inc
in
repz
hlt
call
stos
xor
pusha
xchg
out
push
loop
stos
out
pop
xor
in
hlt
mov
jl
movsl
outsb
psubb
dec
or
cmp
sbb
xor
popa
lods
or
pop
push
inc
add
add
cld
lock
clc
xchg
ds
jecxz
out
scas
cmp
and
or
adc
or
ret
into
xchg
outsl
hlt
sbb
mov
sarb
mov
popf
and
test
cmp
mov
inc
lret
out
inc
pop
mov
hlt
mov
nop
lahf
push
pop
ffreep
test
test
cmp
movl
cmp
xor
lret
pop
clc
add
pop
mov
pop
je
dec
bound
imul
jb
das
mov
inc
clc
or
push
push
repnz
inc
arpl
cwtl
lds
xchg
add
mov
or
add
decl
inc
into
mov
and
movl
inc
out
xchg
xchg
test
pop
bound
test
mov
add
jecxz
inc
js
in
mov
cld
fistps
jb
and
dec
push
andb
or
sub
pop
imul
sbb
ljmp
mov
mov
fdivr
stc
imul
cs
icebp
xchg
sub
pushf
aaa
clc
mov
rolb
xor
pop
cld
push
adc
ror
rcll
clc
cmpsl
xchg
sahf
mov
push
test
daa
aaa
cltd
dec
mov
push
fistpl
dec
jmp
fwait
adc
add
fidivrl
movsl
jmp
iret
mov
or
xor
mov
pushf
dec
add
push
dec
lods
pop
add
jo
cmp
and
mov
leave
jg
pop
call
pusha
es
pop
rcrb
dec
ret
js
mov
xor
push
mov
fiaddl
std
shll
inc
out
loopne
cmpsb
dec
push
sub
and
push
mov
mov
jg
jbe
mov
ss
adc
mov
dec
mov
push
add
fwait
cli
lock
pop
rorl
dec
sbb
in
pop
outsl
add
std
inc
jle
jno
imul
mov
inc
in
and
repnz
repz
bound
test
push
push
xchg
aas
loopne
cmp
inc
imul
add
lcall
or
stos
lock
call
daa
sub
push
pop
or
or
popa
xchg
rorb
push
sbb
or
call
jne
add
das
ja
in
hlt
lcall
mov
pop
loop
mov
xchg
bound
mov
fcompl
xor
loop
shlb
lahf
arpl
sub
scas
lods
adc
inc
push
push
adc
and
xor
adc
mov
out
push
inc
jp
add
and
nop
or
into
mov
or
push
xor
or
mov
es
adc
mov
aam
pusha
aad
andb
mov
inc
inc
insb
cs
mov
enter
incb
mov
pop
cmp
je
push
gs
notb
and
push
push
test
mov
xor
dec
and
xchg
adc
jb
dec
and
adc
lods
shll
adc
add
pop
test
push
sahf
pusha
jnp
andb
mov
in
lcall
mov
and
add
adc
int
mov
adc
xchg
sbb
lods
les
and
jo
mov
adc
call
pop
add
lods
dec
lods
loopne
or
add
xor
mov
push
mov
pop
xorl
sahf
dec
cwtl
or
pop
mov
es
xor
sbb
inc
add
or
sbb
adc
rolb
xchg
shlb
sub
nop
add
and
adc
inc
mov
repnz
cmp
mov
cmp
addr16
insb
repnz
call
shlb
in
mov
mov
or
scas
mov
pusha
out
and
cltd
pusha
adc
cmpsb
adc
mov
cs
int3
andb
enter
loopne
adc
repnz
cltd
and
adc
sub
and
and
add
loopne
push
inc
pop
lods
lcall
test
or
lcall
pop
xor
mov
pop
or
adc
cmpsb
nop
sbbl
mov
les
and
inc
add
notb
js
add
jo
and
int3
pop
lret
orl
es
es
cmp
add
cwtl
jecxz
test
sbb
mov
sub
movsb
sbb
add
lods
inc
mov
and
cwtl
ljmp
push
adc
mov
stos
sub
xor
mov
xchg
and
inc
sub
lret
xor
ss
in
mov
xchg
out
nop
enter
mov
call
or
inc
div
rorl
loopne
or
fstpt
rorb
dec
dec
adc
cmpsb
imul
mov
lcall
mov
or
or
push
adc
negb
mov
sub
pop
ret
test
ja
inc
cli
rolb
add
push
sub
jp
cltd
mov
xor
cmp
pusha
popa
addl
pop
cmpl
or
nop
inc
je
bound
pop
lcall
sbb
push
mov
sbb
add
mov
adc
lcall
subb
adc
inc
adc
push
jbe
push
add
add
push
pusha
data16
lods
in
xor
loope
adc
push
fsubl
or
test
and
enter
insb
pusha
mov
icebp
pop
daa
xorl
and
loop
pusha
adc
cltd
popf
push
or
push
insb
or
cmp
xor
push
push
inc
stos
inc
push
xchg
pop
xlat
call
cli
pushf
cmpsb
mov
pushf
and
push
add
shrb
clc
outsb
and
push
push
mov
push
int
dec
inc
fisubrl
fcmovu
push
in
and
mov
divb
jp
addb
enter
jo
xchg
cmp
xchg
and
pop
cmp
inc
out
mov
arpl
lret
int3
or
nop
pop
mov
sbb
xchg
and
cs
lock
and
test
and
inc
movsl
js
cmp
test
mov
jge
sub
sbb
test
inc
sub
or
imul
sbb
ret
icebp
push
mov
adc
mov
push
notb
sbb
jle
ljmp
fs
mov
mov
sbb
or
sbb
sub
push
mov
inc
and
bound
mov
call
adc
inc
mov
sub
xlat
mov
push
enter
push
cmp
cmp
repnz
nop
pusha
inc
fsubr
insb
aam
into
dec
cld
fimuls
push
sbb
adc
sub
pushf
adc
addb
cltd
sbb
cmp
adc
dec
or
cmp
dec
and
push
push
pushf
pop
mov
adc
push
or
push
mov
sbb
and
or
sub
sbb
mov
mov
dec
test
push
cmp
pusha
sbb
xor
add
mov
xor
into
push
jo
mov
pop
sbb
cmp
inc
push
cwtl
popa
mul
jl
jbe
inc
add
inc
and
push
add
add
mov
ret
jl
andb
roll
xorb
iret
sub
mov
fsubl
adc
aaa
scas
test
and
add
ljmp
jnp
add
test
cmp
lea
push
pushf
test
add
ret
int
adc
decl
fsubp
add
div
add
repz
pop
test
push
xor
pusha
or
mov
lcall
add
fstp
add
jae
sti
push
in
fucom
pcmpeqd
lock
es
jg
or
mov
mov
adc
stos
cltd
mov
ja
or
subb
iret
out
sub
pushf
and
sbb
and
push
addr16
pop
enter
or
push
imul
addb
test
add
add
iret
loopne
mov
add
fcom
push
loopne,pt
loopne
out
lock
lods
cmp
test
add
adc
add
fnstsw
sti
mov
out
or
or
or
cltd
cltd
stos
jmp
fwait
mov
into
test
or
cld
add
nop
xchg
xchg
iret
iret
cld
sti
scas
cld
psubd
cltd
ja
cld
hlt
mov
outsb
das
cld
dec
iret
iret
or
bswap
dec
insb
inc
lock
or
ljmp
jg
decl
dec
mov
or
stc
in
gs
cs
int3
stc
push
out
iret
iret
int3
iret
cs
cld
out
push
jle
subl
sahf
out
addl
push
xchg
inc
push
pusha
add
xchg
mov
imul
pcmpgtd
wrmsr
and
xchg
mov
sub
outsb
lcall
push
sbb
sbb
cmpsb
cltd
insl
sbb
cmp
cmp
imul
sub
xor
xor
fwait
cmpsl
mov
cmp
aas
cmp
push
inc
fwait
jg
out
xor
push
push
add
cmp
ds
dec
and
push
cmp
mov
mov
inc
push
push
inc
pop
dec
pop
ds
adc
pop
pop
fstpt
dec
pusha
push
push
add
push
insb
es
jae
pop
push
and
outsl
and
daa
pop
push
aas
pop
imul
outsb
add
popa
jbe
ja
aaa
gs
or
push
jg
dec
xor
mov
add
mov
push
dec
inc
push
dec
push
dec
push
push
jo
lcall
pop
add
pop
pop
push
inc
push
popa
push
push
arpl
pop
pushw
pop
insb
ss
out
arpl
jne
add
fs
jle
push
imul
jb
jae
je
je
jp
fidivrl
dec
jnp
jnp
jae
mov
fbstp
push
fs
add
jb
push
jl
divb
add
xchg
mov
fwait
and
fiaddl
adc
add
xchg
movsb
pop
sti
fwait
mov
lahf
scas
mov
mov
orl
mov
mov
push
xchg
mov
cltd
movsl
add
mov
int
xchg
fsub
push
nop
pop
iret
leave
data16
add
addl
push
mov
mov
mov
cmpsb
fstpl
xchg
xchg
add
xchg
cltd
cmpsb
xchg
call
cld
aas
push
xchg
pushf
xchg
add
xchg
sahf
add
cltd
mov
mov
push
test
stos
scas
mov
cmpsb
std
lret
movsb
pop
movsb
stos
movsb
push
lods
stos
std
fwait
out
test
scas
stos
mov
add
shlb
mov
mov
mov
jge
mov
mov
mov
add
mov
push
mov
les
orb
shll
filds
ret
cmpsb
mov
lds
pop
imul
add
and
ret
enter
ret
xor
into
into
into
movb
lret
add
dec
sti
fwait
jbe
int
push
ror
ror
add
ror
push
ror
mov
outsb
fcmovbe
int
aad
rcl
outsb
add
shll
aam
xlat
roll
rcl
outsb
aam
add
push
jns
pushw
fcom
push
cltd
int
fcmovu
faddl
push
fadds
add
add
mov
faddl
add
add
in
fninit
dec
fucom
data16
mov
es
repz
das
add
loope
jecxz
in
add
in
cmp
insb
add
push
jmp
out
out
fisttps
ljmp
push
jmp
jmp
rcrb
mov
data16
stos
loop
repz
lock
add
repz
fistps
hlt
div
add
add
add
sbbb
add
out
aas
add
das
inc
cmp
pusha
cmp
xor
cld
aas
add
pop
sub
rorb
sbb
sbb
rorb
pop
punpckhbw
pusha
lcall
std
push
or
pop
push
jmp
pop
xor
sbb
fmul
push
mov
mov
xor
mov
and
adc
or
jg
adc
xor
jl
push
cmp
xor
lds
push
shrb
call
shlb
cmp
aaa
push
popa
in
jg
push
sbb
pop
cmp
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
sti
fwait
out
or
mov
inc
mov
or
xchg
sar
adc
pop
adc
dec
adcb
lock
imul
adc
loopne
lods
mov
lods
mov
add
fistps
insb
pop
xchg
lret
xchg
jne
rcrb
mov
mov
popa
in
or
incl
pusha
or
rolb
dec
xor
lcall
xchg
in
cmp
lcall
pusha
add
mov
dec
and
fistps
fnstsw
ret
dec
cmp
jge
mov
pop
jl
mov
cltd
scas
mov
out
shlb
inc
sti
test
cmpsb
jl
cmp
mov
dec
xchg
lock
mov
cwtl
xchg
dec
xor
push
or
mov
jns
jnp
xchg
stos
mov
mov
dec
jns
loopne
mov
shlb
ja
call
iret
xchg
aam
ja
xor
setle
stc
dec
dec
js
lock
stc
xchg
pop
inc
add
inc
dec
jno
xlat
lock
lock
mov
dec
inc
pop
pop
lods
insb
inc
xor
ljmp
repnz
pop
inc
mov
lahf
dec
decl
pop
pop
sub
mov
mov
jmp
pop
pop
sub
aas
cmpsl
mov
inc
dec
jle
xchg
mov
scas
sbb
sub
sub
ds
mov
inc
aaa
xor
fldl
adc
and
cmp
push
adc
adc
pop
sbb
add
pop
push
push
sbb
test
and
outsb
push
sub
pop
das
decl
jmp
popa
pop
cs
and
inc
dec
push
imul
cmpsb
in
sub
and
add
ret
push
loopne
lahf
xchg
mov
mov
jle
dec
movsl
dec
add
add
or
vmovaps
mov
adc
bound
pop
add
or
cmp
aas
lods
leave
fsubp
in
lret
stos
outsl
or
mov
pusha
cmp
into
in
mov
int
xor
dec
pusha
or
sar
inc
dec
jbe
mov
add
int
xchg
mov
dec
inc
cmp
adc
sub
or
loop
xor
sti
mov
cmp
jns
mov
lock
cmp
xor
or
or
pop
sbbb
add
int
xor
addl
cmp
add
cmp
add
sahf
and
cwtl
in
daa
inc
sub
mov
arpl
cmp
cmp
add
sbb
sub
sub
push
sub
mov
and
arpl
cmpsb
inc
sub
push
inc
xor
jno
sahf
add
ds
adc
je
and
xor
push
push
xor
sbb
dec
adc
push
dec
mov
fnstcw
sbb
add
or
or
adc
and
inc
es
push
and
inc
add
sub
xor
and
fldt
shlb
jnp
das
xor
add
inc
cmp
add
fsin
pop
cmp
push
add
add
insb
add
insl
push
add
out
jae
je
dec
add
dec
add
cs
push
push
push
mov
push
pop
push
push
sbb
push
adc
or
idiv
cmpb
dec
add
dec
push
mov
add
pop
inc
push
insb
fsubrs
out
pushw
pop
outsb
pop
imul
imul
jbe
push
inc
js
xchg
pop
es
mov
imul
sti
lods
icebp
add
imul
jne
test
add
mov
xchg
xor
cmp
xchg
fs
call
and
cld
sahf
jecxz
fidivs
xor
insl
ret
ret
mov
test
mov
out
lea
cmp
imulb
add
push
or
push
add
push
mov
or
cmp
fcmovnbe
adc
gs
ss
push
xchg
add
mov
and
add
sahf
mov
fcomi
mov
ja
lods
add
scas
add
mov
jbe
cmpsb
dec
xchg
push
push
mov
pop
mov
adc
fs
mov
xchg
mov
xlat
js
xchg
push
insb
ret
push
jae
je
fwait
cmpsb
bnd
jl
push
mov
std
sbb
push
add
test
add
outsb
xchg
xorl
rcll
xchg
rolb
cltd
ret
aam
test
cmp
jecxz
push
mov
cmpsl
xchg
fwait
xor
out
push
repz
loop
mov
pushf
or
add
lret
stos
into
add
shlb
stos
add
push
push
cmpsb
mov
mov
popa
lods
es
loopne
insl
pusha
mov
add
data16
rcr
ret
fisubs
lcall
push
in
push
movb
lret
in
jnp
in
int
or
outsb
imul
push
cmpsl
xchg
lock
fildll
mov
pushf
push
test
mov
mov
outsb
clc
fbld
ret
add
mov
inc
cwtl
mov
jle
jle
lret
fsubs
fptan
add
fldcw
add
fisttpl
mov
loopne
outsb
mov
add
push
pushf
out
add
test
dec
rorl
lods
in
dec
jnp
lods
mul
push
mov
lods
icebp
push
repz
mov
sti
lret
fxch
loop
roll
call
out
les
ret
fbstp
outsb
aam
incb
hlt
mov
insb
aaa
jnp
cmc
out
add
div
push
sti
repz
test
add
sbb
add
add
add
add
incb
jns
std
xchg
xchg
nop
iret
lock
stc
and
in
pop
repnz
stc
std
cwtl
stos
movsl
xchg
shl
and
push
add
popa
stc
cld
incl
std
cltd
pop
jae
sbb
aaa
pop
pop
pusha
add
stc
jbe
jle
stc
add
fwait
decl
mov
pop
jnp
insb
popa
repz
add
jg
sarl
out
roll
popa
roll
test
cltd
xchg
ror
xchg
into
cmc
and
int
shlb
jg
or
push
call
or
movsl
in
ds
lcall
sbb
add
popa
mov
nop
dec
xor
punpcklwd
cmpsl
xchg
scas
pushf
push
sbb
pop
punpcklwd
lods
cmpl
jo
push
xchg
call
lahf
scas
stos
gs
pushf
mov
xchg
push
lahf
mov
scas
lods
ret
jns
inc
push
arpl
xchg
lcall
mov
mov
imul
test
cmp
cmp
sub
sub
sub
fldl
negb
daa
sub
and
and
mov
cltd
lods
pop
pop
aaa
xor
jo
add
sar
ja
lahf
sbb
lods
xchg
test
cmpl
and
ret
add
test
lahf
fidivrs
add
sbb
cmp
lods
shrl
xchg
aam
lss
add
pop
jno
stc
inc
pusha
push
add
repnz
jbe
mov
test
rcl
jg
popa
cmp
lahf
inc
andb
mov
xchg
sbb
imul
dec
inc
outsl
mov
pusha
jl
fbstp
jbe
push
mov
inc
enter
loop
in
in
in
call
lret
popa
jns
push
fisubrs
neg
cmp
push
rol
leave
pop
fucomi
idiv
in
out
in
jmp
mov
dec
jne
jp
xchg
push
pop
pop
lcall
jge
push
les
call
ret
dec
in
out
fucomi
mov
mov
xor
pusha
pop
pop
out
inc
pop
jmp
in
pop
pop
dec
dec
dec
pop
ja
pusha
lahf
jmp
lods
add
lcall
in
in
imul
pop
push
xlat
movsb
dec
fld
mov
inc
jle
je
pusha
inc
cmp
pop
int3
pop
fdivrl
negl
pop
mov
addl
shlb
aas
add
pop
push
rcr
push
mov
pop
pop
es
mov
ret
cmp
mov
or
sub
popa
jecxz
xchg
pop
in
idiv
hlt
pop
pop
loopne
daa
aam
in
outsl
dec
addl
inc
pop
loop
cwtl
aaa
sbb
add
pop
pop
in
not
fnstenv
dec
sub
dec
test
mov
scas
pop
push
add
out
call
aas
aas
inc
in
in
fildl
add
andb
int3
outsb
add
add
pop
pop
pop
add
inc
lock
cmp
cmp
mov
mov
ds
pop
add
cmp
inc
inc
push
pop
mov
inc
nop
and
xor
sub
and
or
xor
cmp
jae
jns
movsb
jae
sub
xor
stos
bound
pop
xchg
mov
sbb
fiaddl
mov
inc
xlat
xor
addb
dec
ds
mov
fs
adc
arpl
outsb
lds
push
xlat
push
jbe
mov
sbb
push
adc
iret
push
pop
adc
xor
push
leave
inc
mov
arpl
mov
mov
fiadds
push
test
inc
mov
xchg
fildll
pushf
add
fisubl
iret
push
movsb
push
mov
add
insl
add
out
out
mov
add
scas
push
mov
pop
aaa
int
iret
mov
add
add
or
inc
xchg
or
xor
inc
xchg
daa
in
mov
dec
das
push
movsb
push
pop
push
pop
test
push
pop
imul
push
test
jns
mov
lret
push
xchg
mov
aam
adc
ret
outsl
nop
adc
sbb
mov
sbb
hlt
movsb
data16
cmp
and
stc
movsb
sti
cmp
int
ljmp
mov
aaa
int
mov
mov
pushl
push
pop
dec
lods
dec
cmp
aas
pop
and
call
das
add
popa
sbb
sbb
lds
iret
inc
add
in
fdivr
mov
add
addl
popa
std
inc
pop
ret
popf
cltd
cmpl
rolb
ret
add
mov
jnp
lcall
sbb
ret
add
mov
inc
cmpb
dec
sti
arpl
mov
mov
fiaddl
popa
mov
test
aas
mov
dec
add
popa
pusha
adc
adc
unpckhps
int3
mov
or
cltd
mov
movhps
add
popa
inc
shll
mov
or
lahf
lahf
cmpsl
mov
test
add
clc
mov
dec
pusha
pop
test
and
aam
call
ret
stc
jnp
dec
pusha
mov
mov
in
mov
pusha
mov
jle
lahf
movsl
movsb
mov
mov
fwait
pop
add
cmp
sub
and
cs
outsl
in
cmpsb
movsl
bound
es
cs
push
push
pop
sbb
push
dec
dec
mov
lahf
test
cmpsl
cmpsb
sar
ja
push
pusha
dec
lahf
test
or
rcrb
push
popa
test
mov
pop
pop
add
in
inc
cmp
push
lahf
mov
xor
ret
or
scas
mov
inc
pusha
push
mov
mov
add
ret
sbb
lahf
pop
lahf
mov
mov
adcl
lahf
xor
inc
scas
mov
scas
mov
cmp
mov
mov
jge
push
push
mov
iret
jmp
xchg
xchg
xchg
jae
scas
mov
mov
data16
jbe
jo
insl
addr16
mov
inc
mov
pusha
pop
xchg
xchg
xor
mov
scas
add
push
fbld
pushf
mov
adc
lea
fistpll
jno
pop
arpl
data16
addb
mov
jb
mov
push
insb
insl
push
pop
pop
pop
push
sbbb
arpl
lods
pop
popa
add
scas
mov
imul
pushf
jl
aas
cmp
movsl
fistpl
scas
mov
scas
test
cwtl
test
imul
lahf
lahf
xchg
arpl
stos
stc
in
insl
popa
add
dec
test
sbb
pop
addl
in
filds
stos
scas
mov
mov
sbb
mov
pop
nop
pusha
inc
in
lock
inc
aas
push
lock
pop
add
push
cmp
pop
bound
pusha
lret
jo
mov
add
pop
mov
add
sub
pop
popa
mov
cmp
add
jecxz
je
mov
fs
xchg
pop
mov
ss
lret
jle
pushl
cld
mov
cmp
or
lahf
cltd
cmp
xor
sub
lcall
jg
inc
cmp
xlat
test
or
cmp
adcb
and
and
mov
mov
in
out
loopne
pop
into
loop
fstp
fdivrl
mov
mov
xor
and
add
inc
ds
cmp
loopne
jl
imulb
adc
mov
dec
push
or
or
repz
outsl
pop
loop
insb
aaa
xor
cmp
jb
fidivrs
inc
pop
pusha
xor
pop
inc
sub
or
in
xchg
dec
ret
popa
mov
mov
hlt
mov
inc
rorl
in
inc
mov
jbe
pop
mov
dec
push
arpl
inc
mov
lds
xchg
mov
pop
inc
mov
shrl
add
outsl
adc
pop
adc
adc
add
cmp
pop
xchg
les
sub
data16
xchg
add
push
push
fs
jo
or
adc
cmp
call
mov
dec
jnp
add
das
add
add
add
dec
sti
adc
sbb
push
xor
add
sbb
push
outsl
lcall
xor
jae
sub
jbe
inc
add
add
push
push
add
push
ds
add
add
push
and
add
dec
dec
add
push
dec
insb
xchg
pop
pop
jbe
push
push
inc
insb
push
dec
jb
sub
dec
into
push
dec
adc
add
outsl
fisubl
outsb
push
push
jae,pn
jle
add
push
lods
push
lea
inc
mov
mov
pop
push
add
jg
or
add
outsb
add
push
fistpl
out
addr16
pop
imul
add
mov
xchg
cs
add
pop
add
jnp
cltd
cmp
add
push
cmp
sbb
mov
sbb
fildl
sub
push
lods
dec
xor
mov
int
cmp
loop
ss
adc
repnz
pop
add
pop
push
insl
lcall
rcrb
push
and
lret
popa
push
shrb
push
mov
outsl
pop
xchg
add
push
add
jae
push
lock
inc
outsb
dec
iret
jae
jp
push
jnp
add
jp
mov
pop
pop
adc
push
cmp
mov
jbe
mov
add
pushl
mov
sub
andl
jnp
mov
fildl
cmpsb
fldl
test
ret
mov
push
test
in
jne
in
xchg
sbb
fcoms
icebp
xchg
outsb
add
outsl
adc
dec
adc
add
sbb
sub
es
lahf
out
outsl
dec
lock
xor
add
push
add
jne
add
js
in
fwait
adc
jb
outsb
jns
jl
add
jnp
dec
mov
adc
push
mov
pop
nop
out
mov
mov
add
in
add
outsb
je
sbb
cld
movsl
notb
xchg
jbe
stos
jnp
add
inc
adc
jbe
xchg
dec
push
stos
pop
fwait
sbb
popf
cmpsb
xchg
fisttpl
mov
cmpsb
jle
mov
fildl
scas
dec
xchg
fimuls
add
xchg
insl
insl
aaa
ss
mov
push
add
pop
mov
enter
sub
xor
testb
mov
inc
movsl
push
inc
stos
push
pop
inc
fildl
jecxz
mov
mov
sti
lret
insb
outsb
push
add
loop
pop
int
inc
fbstp
je
aad
ret
inc
push
ljmp
fildl
mov
out
stos
lcall
incl
lahf
mov
push
scas
xchg
mov
movsl
fildl
add
int
add
xchg
out
icebp
popf
push
rep
outsl
mov
dec
fnstsw
push
jmp
mov
sar
mov
rcr
std
outsl
jbe
int3
add
movsb
flds
aad
jmp
mov
pop
jbe
lret
repz
sar
push
es
lret
or
into
pop
out
fcom
add
fcoms
fstpt
fbld
ds
add
out
fwait
pusha
mov
cs
lock
mov
cld
add
jl
jnp
jns
pusha
push
push
dec
dec
dec
inc
inc
fsubr
lcall
pop
bound
pop
push
dec
inc
inc
inc
js
mov
rcrl
jle
mulb
push
dec
dec
dec
inc
inc
pop
aaa
call
arpl
pop
dec
inc
sbb
ljmp
aaa
xor
ror
mov
and
jmp
pop
pop
ja
pop
dec
dec
in
adc
sete
xor
cmpsb
scas
lret
pop
push
aaa
mov
cmp
jmp
inc
inc
inc
or
popa
or
into
scas
pop
mov
push
inc
dec
pop
pop
inc
cli
xor
mov
xchg
pop
cmp
jo
inc
in
push
jnp
mov
lds
sub
sub
fucomip
xchg
pushf
xchg
mov
dec
pop
sysenter
inc
inc
adc
fwait
mov
testb
nop
nop
pop
or
popf
push
xchg
sub
rcrb
ret
aam
jl
mov
std
push
sub
xchg
xor
xor
mov
lea
aas
jo
fst
inc
pop
add
xchg
lods
xadd
mov
out
std
rcr
fst
pop
add
add
lods
mov
or
adc
bnd
lods
loope
jo
pop
sbb
xchg
mov
sub
mov
sti
xchg
sub
pop
negl
div
mov
push
fdivl
sub
pop
ret
adc
incb
sbb
shll
cld
cmc
test
outsb
das
std
jo
mov
pop
ret
shrl
pushl
rcl
xor
mov
in
hlt
sti
out
fidivl
and
fldt
pop
shr
xchg
adc
cmp
ret
or
jbe
in
scas
clc
jmp
cmpsb
cld
into
mov
mov
add
and
pop
or
jmp
lods
jge
mov
adc
and
test
mov
je
idiv
mov
pop
pusha
mov
cs
rcrb
adc
cmc
aas
outsl
jae
jecxz
cli
stc
ljmp
mov
pop
lds
cmpl
fsubp
in
loop
pop
cld
pop
inc
loopne
pop
jae
dec
les
aaa
push
and
movsb
or
mov
adc
out
mov
push
adc
rcrb
repnz
ss
add
pushf
cmp
sub
repz
mov
cmp
mov
add
cmp
mov
fnstsw
mov
mov
add
decl
mov
adc
bound
inc
push
xchg
mov
ficomps
sbbl
adc
adc
pop
outsl
loop
mov
pop
and
pop
adc
popf
mov
pop
pop
sub
mov
in
pop
pop
pop
push
xor
mov
loop
pop
push
add
in
mov
shrl
pop
jg
mov
popa
inc
pop
mov
mov
insl
pop
movsl
mov
rolb
mov
fistpl
pop
pop
sbb
movsl
adc
aad
push
mov
ds
push
dec
sahf
imul
imul
pop
mov
pop
adc
mov
jo
and
xor
push
and
int
jne
js
jp
jge
mov
nop
push
dec
push
push
dec
xchg
fwait
insl
mov
addb
inc
test
inc
data16
insb
mov
dec
insb
ss
int
dec
xchg
dec
cltd
dec
pushf
push
sahf
push
int
mov
mov
push
test
stos
fldcw
pop
lods
pop
mov
mov
mov
fwait
int
mov
pop
mov
arpl
fs
insb
les
push
ss
data16
loopne
in
jp
inc
into
cmpsl
xor
sub
jl
fnstcw
mov
insb
xchg
xchg
mov
lea
ss
int
lea
nop
pop
xchg
pop
xchg
pop
xchg
pop
ss
insb
pushf
or
mov
int
repz
loopne
fwait
scas
mov
add
lea
or
push
sub
or
pop
mov
rol
aam
push
lds
fxch
or
fcmovne
or
gs
fldcw
fcmovnb
push
imul
shrb
mov
xlat
jo
xlat
jno
jecxz
jb
out
je
sub
sbb
out
inc
push
repnz
call
in
aam
negb
or
out
add
call
add
in
fdivr
bnd
stos
push
mov
hlt
js
hlt
inc
testl
rol
mov
mov
mov
insl
adc
mov
int3
mov
sarl
mov
xchg
int
repz
clc
cmpsb
cli
lods
sti
insb
or
rcr
fcmovnb
inc
test
dec
push
iret
movb
out
es
or
pop
cs
fcomps
les
sub
stc
int3
add
lock
add
repnz
add
cmc
filds
mov
repnz
neg
loope
cli
cli
jecxz
cld
in
enter
pop
call
inc
add
dec
or
add
daa
es
clc
and
and
pop
mov
pop
push
adc
popf
pop
iret
idiv
divl
jns
jp
xchg
jp
jne
pop
add
add
jae
add
pop
adc
pop
negb
sub
pop
add
pop
bswap
enter
add
psubw
xchg
and
push
lea
dec
dec
xor
add
push
pop
pop
or
out
dec
pop
dec
xor
pop
push
inc
sbb
pop
loopne
or
or
pop
or
nop
or
jg
adc
xchg
aas
sbb
and
out
add
pop
push
aas
aad
jnp
mov
dec
lcall
mov
or
daa
sub
nop
or
jns
ficoml
cmp
add
sbb
fdivrl
push
push
adc
ja
mov
pop
and
xchg
bound
clc
pushl
pop
push
mov
dec
dec
dec
inc
jb
dec
cmp
jae
pop
push
push
push
push
rcrb
jae
pop
dec
pop
lea
add
jbe
out
jb
pop
pop
push
mov
jb
scas
sti
and
add
or
pusha
lcall
sbb
out
xor
lea
push
daa
add
or
dec
jae
jne
sbb
repz
mov
sbb
pop
jb
rorl
or
inc
pop
sub
sbb
pusha
in
jnp
push
ja
inc
pop
cmp
pop
sub
jle
mov
sbb
mov
sbb
sbb
pop
add
gs
ja
inc
or
aaa
mov
pop
mov
sub
fadds
pop
ja
inc
inc
pop
inc
and
jae
outsl
mov
fcomps
pop
inc
aas
outsl
jnp
fs
jnp
pop
or
inc
aas
sub
pop
ds
add
and
popf
ja
mov
mov
jg
jbe
into
popf
ja
cmp
mov
inc
mov
pop
call
mov
fcoms
cmp
jg
mov
cltd
fwait
pushf
sahf
pushf
fwait
cltd
xchg
xchg
xchg
mov
mov
cmp
sub
addl
jno
outsb
insl
insb
imul
pop
push
pop
sub
cmp
add
bound
dec
in
in
push
inc
aaa
add
pop
push
pusha
pusha
pop
pop
push
aas
add
cmp
sarb
pop
dec
cmp
xor
mov
pop
pop
dec
xor
pop
or
dec
push
and
add
sub
pop
add
push
pop
orl
pusha
jle
data16
xchg
cmp
adc
mov
pop
outsl
or
add
jne
add
jnp
sbb
xor
sbb
push
and
pop
pop
sub
inc
or
inc
fidivl
mov
push
xor
jge
outsl
add
add
int
add
push
insb
push
outsl
push
pop
jo
fistpll
fwait
jae
je
pusha
push
arpl
jl
inc
mov
mov
mov
and
add
cmp
inc
inc
int
add
gs
mov
dec
ss
add
repnz
jne
das
mov
in
jge
andl
add
or
and
int
int3
pop
xchg
les
push
push
jo
jb
pop
inc
int3
data16
dec
pop
in
xlat
int3
cs
popa
lock
lock
xchg
adc
fcmovnb
lods
in
addb
nop
jnp
popa
pop
roll
dec
and
xor
imul
insb
ss
mov
addb
jne
mov
ja
js
jl
pop
nop
lock
mov
jp
xchg
push
jle
xchg
xchg
xlat
mov
daa
iret
addl
fiaddl
xchg
xchg
mov
jb
push
push
xchg
push
outsb
jns
xchg
add
add
adc
incl
or
mov
pop
rcr
divl
adcb
fnstcw
in
xchg
xchg
popf
sahf
push
mov
out
iret
testl
repnz
mov
test
cwtl
pop
movsl
fnstcw
lcall
mov
xor
or
movsl
mov
lods
mov
int
mov
push
pop
lods
mov
mov
add
fnstenv
mov
push
mov
mov
imul
mov
mov
idivb
mov
push
shlb
fcmovnb
push
mov
mov
xchg
mov
ret
mov
mov
and
push
ret
leave
push
leave
push
ret
int
clc
pop
ja
iret
dec
push
enter
mov
sarb
lret
lret
mov
into
shlb
push
rorb
fdivs
aas
dec
repz
fcmovbe
add
rcr
aam
insb
lahf
dec
jnp
fmuls
fcmovu
jecxz
imul
push
loopne
ss
mul
in
push
in
lock
dec
and
mov
mov
pop
leave
rcrl
lret
push
fsubs
cli
push
push
negb
push
push
fmuls
test
push
lahf
push
cli
mov
jo
aad
fisttpll
fstp
je
lds
loope
out
add
loop
int3
icebp
cmc
push
inc
and
add
data16
add
adc
repz
add
add
sarl
lock
movl
mov
ljmp
out
fnsave
pop
mov
enter
mov
xchg
sbb
testb
leave
popa
pop
pop
mov
fwait
add
fs
xlat
lret
ret
popa
adc
mov
call
aad
lds
dec
pop
pop
mov
aas
leave
mov
fstp
ror
mov
insl
add
pop
pop
out
fst
enter
mov
jg
add
mov
add
and
inc
xchg
xchg
xchg
xchg
cwtl
cltd
cwtl
mov
lcall
lods
iret
stos
xchg
test
mov
mov
decl
rcr
add
lea
stos
mov
repnz
orl
mov
mov
inc
jae
hlt
mov
addr16
sub
gs
das
test
cld
push
mov
add
pop
pop
pop
pop
pop
rorb
add
test
mov
and
adc
xor
cmp
sbb
jns
jg
jge
sub
xchg
and
ss
aaa
dec
jg
in
sbb
jge
push
pop
bound
and
daa
add
and
call
xor
push
jbe
jne
imul
sub
cmp
inc
pop
repz
dec
popa
push
jge
or
pusha
orb
or
into
ss
movsl
pop
dec
dec
jnp
andl
sbb
adc
cld
roll
idiv
fnstcw
adc
std
fcomps
movsb
pop
popa
pop
pusha
pop
mov
or
mov
hlt
jbe
pushf
dec
dec
mov
pop
andb
or
inc
inc
pop
xor
call
out
pusha
push
and
int
pop
pusha
pop
push
idiv
cli
sub
pop
lock
jp
push
mov
pop
push
and
stc
fmull
push
popa
jbe
js
push
mov
push
pop
push
sub
out
adcl
repnz
push
fwait
push
pop
pop
pop
sub
notl
in
mov
push
add
add
imul
bound
popa
negl
pop
popa
add
out
cmp
add
or
push
push
pusha
add
test
das
xchg
push
and
add
nop
fsubl
add
mov
ret
stos
fwait
jge
outsb
add
adc
add
addr16
out
in
or
sub
or
imul
ja
mov
mov
sub
xchg
mov
xchg
daa
xor
sub
jne
jns
pop
cmp
xlat
int3
jg
mov
stos
stos
add
fnstcw
mov
std
mov
sub
scas
sti
sub
sub
mov
jo
ss
aad
push
mov
jo
js
or
out
sbb
shl
pusha
stos
sbb
inc
and
sbb
shrb
jae
sbb
and
add
and
sub
xor
aaa
cmp
cmp
data16
sbb
adc
sub
xor
add
add
fisubrl
cmp
add
cmp
ds
pop
dec
add
cmp
push
cmp
cmp
dec
es
dec
push
inc
push
push
dec
ds
dec
int
imul
push
push
pop
push
push
outsl
lahf
out
pop
pop
add
bound
jne
dec
dec
pusha
add
out
push
insb
push
push
push
dec
jp
stc
insl
fstpt
pop
jno
push
jne
bound
add
in
imul
arpl
push
jns
push
jae
ds
mov
push
es
mov
fnstsw
push
push
jle
or
es
fwait
dec
outsl
push
xor
inc
aaa
dec
add
dec
add
cmp
push
xor
ss
aas
push
add
aas
pop
add
xor
outsl
fwait
fs
xor
cmp
adc
popa
mov
neg
xchg
jno
and
add
aas
jns
inc
dec
push
mov
push
dec
ss
imul
and
jg
mov
push
pop
outsb
inc
inc
js
pop
jne
push
gs
sbb
add
lods
jle
jnp
outsl
push
inc
add
subl
sbb
mov
repz
mov
data16
cld
das
js
orb
mov
add
adc
imul
lods
sub
xchg
push
imul
xorl
mov
add
push
jle
mov
add
lahf
xchg
adc
pushf
sbb
mov
add
outsb
jle
push
popf
xchg
mov
add
push
xchg
sub
mov
mov
and
cmpsl
movsl
cs
cmpsl
mov
mov
lods
stos
xor
cmpsb
movsl
cmp
mov
add
add
jmp
mov
mov
dec
add
scas
push
mov
sarb
mov
adc
pop
aas
mov
push
addr16
lret
inc
aam
add
aad
and
mov
js
inc
test
fwait
add
push
pop
jbe
add
jp
popa
xchg
icebp
xchg
add
jp
arpl
xor
xchg
jo
push
jne
aas
js
jle
cmpsl
inc
repz
lods
ds
jo
dec
roll
push
les
insb
outsb
sbb
push
ja
sbb
xor
xchg
aas
sbbb
mov
push
xchg
stos
add
xchg
cmpsb
mov
mov
pop
cld
in
lea
sub
popf
lret
int3
add
mov
sbb
enter
cmp
leave
mov
inc
mov
fidivrs
fmull
jle
push
inc
test
mov
das
faddp
sti
add
addr16
fucomi
rolb
inc
ret
fwait
insl
imul
enter
enter
pop
aad
outsl
jecxz
in
push
pop
aaa
mov
outsb
mov
add
push
roll
into
xchg
jecxz
xchg
add
in
add
lret
mov
mov
sub
xchg
scas
add
mov
push
xchg
loop
pop
pop
mov
loope
lock
xchg
mov
insb
data16
lret
roll
div
int
push
hlt
push
cmpsb
stc
mov
repz
in
std
xor
int
push
clc
decb
stc
in
inc
adc
pop
inc
fidivrl
pop
pop
adc
pop
adc
shrb
cmp
adc
popa
or
pop
sub
negb
pop
push
pop
adc
sbbl
imul
push
pop
inc
cmp
cld
adc
insb
popa
shrl
adc
jne
cwtl
out
popa
push
pop
pop
icebp
outsl
sub
jae
pushf
repz
std
lcall
cmp
xor
xor
pop
xor
stc
hlt
in
repnz
popa
mov
xor
ljmp
cs
das
xor
mov
push
inc
pop
decl
push
fisubl
and
cmp
adcl
sub
popa
pop
adc
idivl
and
xor
xchg
ficoms
shlb
sbb
sbb
pop
and
fdivs
mov
dec
fmull
testb
pop
push
cmp
pop
pop
sbb
and
xor
cmp
fwait
sahf
mov
or
sti
cmp
adc
xor
jno
xchg
ljmp
stc
lahf
mov
or
adc
data16
jo
test
cld
pushl
push
data16
push
jno
or
pop
mov
dec
dec
dec
dec
dec
dec
adc
sub
and
dec
pop
mov
mov
mov
dec
loope
shr
iret
mov
mov
scas
movsb
mov
dec
call
mov
adc
push
push
cmovno
push
push
pop
pop
cmpsl
mov
adc
cmpsb
pop
pop
adc
jg
or
popw
inc
lcall
adc
das
mov
lret
mov
sar
mov
pop
inc
inc
popa
push
pop
into
aam
mov
inc
popa
sqrtps
inc
inc
popa
pop
cmpsl
ret
nop
loop
lret
sarb
test
outsl
fs
pop
movsl
cmpsb
mov
mov
mov
add
pop
ror
int3
mov
enter
popa
push
push
add
or
dec
fcomp
ror
int3
int
pusha
push
arpl
idiv
inc
pop
movsl
cmpsl
ret
ljmp
pop
in
pop
outsb
pusha
or
fs
sti
icebp
fstpt
pop
and
mov
sti
out
fnstsw
pop
xor
popa
mov
sub
pop
mov
mov
ljmp
pop
pop
ficoms
lods
jge
pop
into
pop
cmpsb
pop
pop
add
cmp
popa
pop
in
pop
pop
push
pop
sbb
adc
add
popl
popa
add
or
cmpsl
mov
fs
daa
hlt
sub
pusha
fadds
dec
mov
inc
jmp
lahf
mov
adc
xchg
jle
mov
cltd
cltd
xchg
push
add
pop
push
jbe
jbe
repz
and
pop
sti
xor
fistl
repz
ja
xchg
pop
pop
push
aas
xor
mov
mov
push
ds
aad
push
aas
sahf
mov
enter
mov
push
push
cld
fcomip
in
bound
push
lds
ja
sti
ljmp
js
adc
adc
xor
xor
adc
mov
outsl
pushl
hlt
inc
mov
jmp
mov
mov
add
lcall
mov
cs
ja
pop
sti
or
jmp
or
add
sub
rcr
in
or
hlt
adc
add
lea
push
out
adc
leave
xchg
mov
mov
xchg
inc
inc
add
repnz
add
addr16
push
inc
mov
mov
repz
and
enter
and
mov
cs
int3
push
pushf
in
mov
cmp
cs
pop
mov
ss
cs
insl
fucomi
sub
add
pushf
incl
cs
dec
rcrb
mov
add
rcrb
loopne
or
add
or
roll
inc
add
mov
scas
dec
and
shlb
jne
and
push
cld
fstl
lock
iret
repnz
aaa
xchg
mov
das
pop
dec
xor
mov
lock
aas
aaa
aad
movsb
dec
inc
add
dec
xchg
mov
add
dec
scas
pop
stc
and
mov
dec
or
lds
pop
mov
add
dec
movsl
jmp
mov
pop
dec
fwait
jp
sub
dec
aad
out
dec
pop
sub
dec
dec
pop
add
inc
push
inc
lahf
xor
daa
jmp
push
dec
test
outsl
xchg
mov
add
pop
add
add
je
mov
addl
xchg
stos
cmpsb
add
into
lret
add
stos
cwtl
fadds
in
out
repnz
xor
data16
and
push
pusha
add
adc
push
adc
in
std
push
adc
sbb
jecxz
sbbb
mov
cld
mov
adc
cltd
add
out
loope
push
sbb
loop
push
sub
pop
clc
push
std
xor
aaa
cwtl
inc
push
cs
sbb
insb
jle
add
cli
out
rcrb
mov
repz
mov
int
mov
into
test
iret
call
in
xchg
popa
popf
lds
and
pop
fldenv
sbb
xchg
inc
jo
add
adc
scas
gs
xor
pop
mov
daa
mov
das
adc
fsubrs
ds
cmp
pop
lahf
push
push
jle
insb
add
pop
add
add
mov
add
ljmp
outsl
sub
popf
mov
lock
add
ror
das
xchg
mov
push
sbb
dec
push
xor
mov
dec
add
mov
jle
or
lret
push
mov
rcrl
ret
incb
sbb
test
mov
repnz
add
xor
push
stc
push
pop
das
movsl
push
jg
cmpsl
add
movsl
adc
add
inc
push
data16
push
pushw
inc
add
negb
fildl
inc
adc
push
push
add
cld
inc
add
into
jge
or
clc
add
lcall
add
jg
add
inc
mov
inc
data16
dec
push
dec
cmp
lock
push
jo
jg
mov
out
fbstp
push
jmp
es
mull
and
inc
xor
add
mov
in
mov
les
imul
push
cmp
cs
cmp
fnsave
sub
push
add
int
sub
push
mov
sub
push
sbb
mov
stos
das
pop
das
add
fildl
outsl
push
or
mov
shlb
or
nop
pusha
das
ja
imul
pop
jo
pop
or
imul
adcb
out
sarb
add
add
outsl
lcall
dec
add
sbbl
aas
inc
mov
iret
cltd
xchg
xchg
add
int3
cmc
add
sar
add
inc
out
dec
push
bnd
push
pop
decl
ja
pop
inc
push
fisttps
ficomps
inc
mov
movq
push
int
cmp
lcall
or
mov
pop
mov
fcmovnu
divb
pop
xor
loopne
loopne
mov
mov
js
popf
fstl
xor
das
ja
fcmovnu
divb
pop
xor
xor
pushf
movsl
pop
mov
adc
lock
jg
scas
push
or
add
aam
add
xor
jne
add
or
adc
adc
add
jbe
push
sbb
or
or
sbb
and
in
decl
mov
and
adc
sub
nopl
push
es
pop
cs
add
loop
xor
push
add
sub
sahf
push
cs
aaa
fldt
cmp
ss
cs
push
xor
cmp
push
inc
ds
inc
outsb
push
stos
cmp
arpl
add
cmp
les
dec
inc
add
push
push
aas
pop
dec
dec
jo
inc
pop
add
in
jg
pop
dec
ret
dec
add
inc
add
push
pop
dec
inc
jo
dec
stc
jbe
outsl
push
push
push
add
bound
pop
pop
push
popa
pop
pop
es
dec
add
pop
lock
data16
imul
mov
pop
jbe
add
xchg
jno
dec
sbb
jbe
test
fs
outsl
mov
push
inc
add
sahf
jl
dec
add
add
mov
jge
push
imul
je
addb
int
out
mov
bound
bound
jp
imul
ss
js
imul
push
jo
jne
jle
jge
fstl
insl
mov
xchg
jne
mov
mov
ja
es
cmpl
jg
lods
pop
lock
add
test
push
jl
mov
xchg
push
sub
xchg
jge
xchg
xchg
xchg
jge
add
mov
xchg
popl
cltd
fcmovnu
lods
nop
jbe
jle
nop
xchg
push
xchg
xchg
push
mov
mov
jle
mov
mov
imul
cwtl
movsl
lods
xchg
addb
mov
jle
movsl
xchg
add
inc
mov
mov
push
pop
push
test
lods
add
lea
test
incl
add
mov
add
into
add
jmp
dec
sbb
data16
les
shlb
mov
shr
add
xchg
outsl
mov
push
cmpsb
lahf
push
test
add
lods
mov
cmpsb
lods
mov
mov
sahf
push
sub
xlat
in
fnstenv
sahf
mov
jne
push
mov
mov
divb
push
test
fcmovu
jle
mov
mov
mov
mov
mov
insl
shrl
mov
mov
push
mov
leave
mov
sbb
jbe
mov
scas
push
leave
leave
lds
pop
mov
leave
into
ret
push
mov
push
aam
add
mov
out
cli
fadds
rcl
mov
testb
out
clc
dec
incl
sbb
test
push
fcmovb
cmpsb
mov
ss
fcmove
rcr
jle
outsb
fdivrl
fcmovbe
add
loop
aam
fiaddl
push
loop
imul
call
fwait
mov
mov
loop
repz
jmp
sub
push
in
dec
fsub
cs
in
data16
xlat
jle
push
jmp
ss
add
out
in
out
push
stc
push
jbe
jbe
cli
sti
jmp
shl
es
clc
push
mov
fdivr
testb
push
in
aam
push
push
sahf
testl
loopne,pt
call
jns
div
push
repnz
pop
cs
cmp
push
decl
cli
cli
jl
into
out
call
push
push
push
pop
push
sub
sub
inc
pusha
mov
xor
add
int
stc
pop
mov
iret
shrb
jle
mov
jge
add
mov
and
lods
jnp
test
shrb
fnstcw
rol
scas
rol
sbb
fildl
add
test
scas
ret
ret
int3
ret
ret
lds
ret
mov
outsl
jbe
adc
mov
fcomp
fstp
div
hlt
je
ss
insb
add
cli
or
sub
fsubrp
movsl
ffree
pop
add
icebp
hlt
sub
sub
and
into
ret
add
into
aad
aad
fsubr
mov
pop
lds
fimull
fldenv
iret
int3
into
int3
iret
fmuls
clc
hlt
add
std
sbb
movnti
inc
insb
js
jae
jo
sahf
fcmovu
outsb
or
jae
push
je
dec
add
mov
jb
jb
pop
pop
pop
pop
pop
pop
pop
pop
fisttpl
pop
pop
sub
xor
jnp
add
ss
mov
jle
mov
jle
mov
xor
scas
jp
jp
mov
sub
lods
scas
mov
int3
enter
adc
jle
mov
add
movsl
xchg
cmpsb
xchg
push
xchg
xchg
mov
mov
test
aam
ljmp
out
call
add
adc
or
sbb
fildl
cld
hlt
stc
repnz
out
xor
jge
mov
jne
outsb
imul
or
outsl
xchg
cltd
lods
mov
int
lret
in
fucomi
neg
test
dec
add
dec
add
dec
dec
dec
push
dec
outsl
jg
dec
dec
push
push
push
add
dec
dec
ss
ss
ss
jg
or
mov
push
sub
sub
sub
sti
outsl
in
inc
sub
dec
dec
dec
push
push
pop
pop
imul
fcmovne
insl
jb
addr16
imul
cld
jbe
jbe
jne
jnp
je
jbe
xchg
jg
movsl
xchg
xchg
jnp
jp
jg
mov
pop
push
add
pop
jb
imul
xor
ds
arpl
cwtl
cltd
lret
or
cld
sti
sti
push
xor
push
rcrb
sbb
out
mov
cli
in
in
push
out
out
sarl
ds
cmp
xchg
cltd
mov
mov
mov
popf
mov
sbb
insb
enter
add
mov
inc
push
ss
call
or
sbb
in
cs
out
push
sub
sbb
ret
mov
es
xor
dec
push
push
adc
xlat
mov
gs
push
insl
xchg
pop
pusha
mov
pop
push
addr16
add
mov
jge
loopne
jp
xchg
xchg
xchg
adc
jg
lds
fisubl
mov
mov
mov
add
leave
int
ror
push
mov
cmp
xor
es
and
and
mov
mov
ljmp
inc
ljmp
testl
sti
and
and
clc
ss
add
cmp
div
imul
ljmp
nop
push
movsl
mov
arpl
mov
stc
mov
pop
jns
adc
inc
dec
inc
inc
inc
sub
push
ss
sub
xor
xchg
xor
dec
inc
xor
sub
sbb
lock
addl
repnz
sbb
push
xchg
push
add
adc
pop
hlt
insl
outsb
adc
or
cli
mov
adc
xchg
movsb
cli
cmpsb
lods
lods
mov
push
fnsave
lods
cmpsl
cmpsl
cmpsb
xchg
nop
pusha
cmp
and
cmp
cmp
aas
test
shl
lock
test
lret
cmpsb
jmp
imul
jmp
repnz
or
clc
lods
loopne
cld
and
clc
repnz
imul
cmp
loope
mov
or
add
lret
mov
push
mov
adc
and
lret
fs
sbb
filds
adc
pop
pop
sub
pop
cmp
sub
inc
inc
inc
dec
ss
std
scas
loopne
dec
xor
dec
dec
pop
push
push
push
loopne
jmp
push
adc
dec
jno
rorl
pop
fs
fstpt
and
pop
dec
dec
ja
in
loope
push
xor
ljmp
and
jo
xchg
push
cmp
insb
xor
fbld
fcoms
cltd
xchg
fs
cmp
xchg
mov
mov
rcr
fucomi
divb
clc
adc
add
divb
jmp
or
clc
scas
std
out
adc
repz
out
ljmp
loop
mov
clc
pop
imul
arpl
dec
push
jne
push
roll
xchg
jo
inc
lock
aaa
inc
clc
or
mov
shrb
push
and
xor
shl
jg
add
outsb
sub
adc
and
push
push
add
sbb
or
je
jle
loopne
dec
xchg
pusha
and
inc
imul
cs
fs
jb
jnp
jb
je
xor
movsl
movsl
stos
sbb
loop
insb
inc
lods
mov
mov
stc
cmpl
addl
mov
aaa
or
lock
cmc
or
loopne
sub
clc
clc
add
sti
std
leave
in
out
sbb
das
inc
mov
inc
push
in
out
xlat
enter
mov
mov
imul
or
movsl
popf
mov
mov
mov
lods
push
clc
aas
pop
adc
fimull
dec
dec
mov
adc
cld
aaa
je
adc
push
or
inc
inc
icebp
sbb
sub
or
ret
cld
mov
cmp
add
push
push
dec
dec
ss
aaa
dec
dec
dec
push
xchg
ret
pop
pop
add
inc
jo
aas
mov
outsl
cmp
inc
gs
push
xor
pushf
in
popa
outsb
adc
jl
outsl
jo
push
jg
adc
lods
scas
lods
add
pop
xor
xchg
push
xor
daa
cmp
mov
jmp
fdiv
adc
pop
addl
stc
clc
and
and
mov
lock
in
lock
sbb
dec
or
cmc
push
pusha
or
and
scas
scas
shl
mov
movsb
and
add
scas
incl
mov
mov
lock
lcall
inc
push
xor
mov
mov
adc
insb
cli
dec
cmp
sub
or
test
push
cmp
outsl
mov
add
sub
cs
cmp
adc
adc
rolb
inc
push
inc
loopne
fdivs
cs
pop
dec
cmp
inc
pop
adc
lcall
xor
addr16
cmp
xchg
mov
ds
dec
dec
jp
xchg
jbe
push
aaa
xor
xlat
mov
mov
push
sub
jl
mov
jecxz
sub
sub
xor
adc
mov
dec
hlt
or
cmp
call
shll
adc
jecxz
ror
mov
cmpsb
xchg
jb
das
sbb
xchg
mov
repz
outsl
xor
stos
movsl
pop
fidivrs
pop
dec
jnp
jbe
inc
dec
inc
inc
inc
sub
adc
or
loopne
dec
inc
dec
dec
xor
in
aas
out
sbb
push
cli
ljmp
and
scas
ret
sub
push
mov
imul
adc
and
outsb
dec
fdivl
mov
ds
sbb
or
pop
ret
js
ficompl
cs
adc
fidivrs
add
movsl
mov
stos
or
pop
dec
mov
cmpsb
xchg
push
pushf
call
outsl
or
xchg
lret
fstp
jecxz
push
jb
push
popa
xchg
in
out
add
imul
sbb
repnz
jnp
sarl
push
out
add
mov
int
ljmp
sbb
xor
in
cmp
adc
push
adc
or
lods
push
js
popa
cs
das
sbb
popa
call
inc
mov
inc
es
pop
cmp
lock
clc
out
sbb
cmp
ss
loop
dec
inc
sub
loopne
fisttpll
sbb
xor
hlt
or
lea
and
add
dec
push
push
xor
and
xor
dec
dec
dec
dec
pop
sbb
jo
add
lods
loopne
dec
or
and
add
jmp
cwtl
mov
jae
add
push
pushl
cld
rcrl
cmp
addr16
pop
adc
jmp
push
fistl
xchg
xorb
cmp
jg
add
rolb
enter
fcmovu
xor
in
sbbb
xor
pusha
idivb
out
fcmovnu
lret
rcl
fldz
and
and
pushw
mov
pop
xor
push
xlat
push
js
cmp
push
scas
mov
sub
popf
loope
xchg
dec
iret
insb
prefetcht2
sbb
sub
sbb
inc
decl
xor
inc
pop
sbb
addl
cmpsb
cltd
pop
dec
add
sub
mov
adc
je
dec
push
dec
inc
xor
and
adc
or
push
xor
and
cwtl
dec
dec
push
cmp
pop
pop
inc
pop
sbb
push
or
xchg
pop
jle
dec
cmp
push
push
dec
dec
push
mov
loopne
clc
outsl
inc
pop
mov
jnp
outsl
push
xor
clc
out
xor
cmp
outsb
jne
xchg
cmpsb
cltd
push
jl
out
or
leave
les
leave
out
repz
jbe
fsts
cld
rcl
ror
leave
add
int
fstps
mov
cltd
mov
es
int
xchg
add
mov
fsubl
sbb
jo
inc
mov
stos
cli
movsl
push
xor
inc
fimuls
xchg
push
iret
jae
pop
inc
inc
add
sbb
fs
bound
add
lock
cwtl
xor
mov
or
mov
jg
mov
add
or
dec
add
pop
mov
dec
sub
cmp
sub
sbb
clc
shlb
add
adc
or
mov
xor
ljmp
or
jo
dec
xor
xor
push
gs
je
push
stos
scas
out
jle
outsb
push
nop
addr16
jbe
pusha
arpl
imul
adc
or
flds
repz
cs
mov
addl
xchg
or
scas
lods
loope
cltd
stos
push
cwtl
outsb
lods
sbb
sarl
psubq
popa
aaa
pop
movsl
pop
outsl
mov
sbb
xor
scas
adc
stos
push
mov
sbb
inc
xor
rolb
cmp
cmp
push
cmp
or
loope
hlt
cmpb
add
pop
push
cmpsl
fwait
mov
add
adc
out
clc
mov
sbb
xchg
dec
pop
cmp
push
xor
out
xor
adc
add
push
dec
xor
mov
mov
ss
insb
dec
gs
outsl
outsl
mov
mov
add
aaa
dec
pop
sbb
inc
fucomip
je
push
sub
cmp
outsb
xchg
ja
xor
push
jns
and
xor
les
mov
ds
aam
fstp
jg
jmp
lret
cwtl
imul
cmp
pusha
add
mov
andl
push
fimull
mov
and
es
mov
and
or
je
jle
insl
xor
int
fadd
das
push
pop
inc
add
xor
inc
inc
inc
loopne
popf
inc
bound
push
adc
and
in
out
lods
add
xor
xchg
add
or
mov
jmp
rcrb
push
dec
inc
incl
shrl
and
in
mov
push
in
out
dec
dec
sub
cmpl
add
xor
sbb
subb
push
jle
pop
pop
pop
cli
push
lock
cmp
adc
push
jae
adc
dec
or
lahf
mov
scas
pop
xchg
pop
mov
lcall
push
es
clc
or
aam
enter
sbb
and
jecxz
cmp
cmp
andl
sbb
clc
and
scas
int3
sbb
and
movsl
pop
jbe
shlb
test
cli
mov
ret
lock
jns
xor
push
push
inc
add
js
sbb
sbb
and
inc
push
ja
sub
cmp
orl
lcall
pop
or
push
and
sti
mov
int
add
inc
sub
in
pushf
and
inc
pop
push
add
xchg
cmp
call
sub
inc
sub
or
addb
insb
ljmp
or
dec
xchg
pop
xor
orl
cmp
ds
mul
mov
pushf
and
imul
cs
xchg
movb
out
sbb
or
lret
fadds
int3
mov
cmp
cmpl
std
lock
push
push
push
ds
stos
inc
cld
xor
faddl
adc
mov
nop
jo,pt
mov
stos
scas
stos
lods
stos
lods
stos
test
xchg
jge
mov
jns
psllw
shrl
or
add
jmp
dec
pop
cmp
sbb
and
cmpsb
or
nop
popf
andb
fistpll
cmp
push
push
sub
or
jg
or
pop
adc
mov
dec
inc
aaa
je
xchg
sub
mov
or
inc
xor
xor
sbb
test
mov
xchg
or
and
pop
push
add
aaa
sbb
fwait
dec
ret
lcall
add
or
cmpl
loopne
push
jnp
mov
cmp
adcb
icebp
xchg
push
mov
stos
stos
adc
sbb
mov
inc
push
ljmp
push
stos
or
inc
scas
imul
mov
mov
sbb
sbb
and
shll
sbb
sbb
dec
cmp
pop
pop
or
add
sbb
add
sub
pop
push
sbb
or
mov
or
mov
pop
sub
adcl
inc
or
or
sub
push
inc
inc
inc
push
sahf
cmc
mov
sub
sbb
push
imul
test
dec
adc
xor
mov
push
dec
pop
add
or
sbb
add
jno
push
xor
pop
jbe
xor
xor
jae
incl
mov
and
outsl
outsl
imul
scas
lock
fcoms
lea
es
mov
pop
ljmp
sbb
cmp
movsl
scas
pop
or
movsl
ds
pop
imul
add
sub
jl
adc
paddusb
push
pop
aas
push
add
add
sbb
lahf
fisubs
adc
adc
sbb
or
or
in
lcall
ds
adc
push
adc
mov
xlat
out
inc
inc
inc
add
outsl
sahf
lret
mov
ret
sarb
inc
adc
sub
lahf
in
outsl
lock
sub
je
sub
or
lcall
lahf
mov
adc
cs
jg
mov
sbb
pop
and
xorb
mov
insl
jge
adc
jg
or
mov
xor
xor
xor
add
xchg
add
js
cmp
aaa
mov
lock
or
shrl
xor
movsb
or
and
sbb
jnp
test
int
cmp
insl
jp
push
loopne
sub
pop
add
mov
or
adc
or
adc
pop
cmc
xchg
loopne
mov
mov
pusha
popf
adcl
sbb
cmp
and
dec
subb
xor
inc
sub
mov
add
mov
push
adc
push
inc
xor
or
jmp
lcall
push
xor
inc
pop
clc
xchg
sahf
xor
xor
insb
pop
dec
sub
push
sub
xchg
and
test
jbe
sarl
imul
adc
pop
and
jmp
xor
imul
pushf
mov
lods
fmul
fmulp
fmul
iret
fadd
ja
pop
insl
sbb
mov
ds
test
xor
movsl
pop
jg
and
lock
sub
mov
sub
jmp
sbb
or
cmp
and
rolb
mov
cmp
addb
adc
push
mov
insb
adc
mov
popf
test
push
test
inc
incb
mov
fs
idivb
mov
pop
sub
sbb
mov
xor
call
mov
je
sub
dec
mov
pop
jno
fisttpl
adc
pop
dec
xor
push
xor
sbb
add
popf
cmp
or
stos
mov
stos
add
mov
xor
or
and
cmp
xor
ds
xchg
cmp
lods
push
fdivrs
jne
loopne
add
sub
imul
mov
xor
inc
jg
add
push
sub
ljmp
cli
cmp
sbb
or
decb
lock
sbb
sbb
xor
adcl
cmc
and
sbb
xchg
pop
inc
sbb
push
inc
pop
sbb
cmp
sbb
pusha
decl
pop
xchg
nop
and
js
out
cli
xor
xor
sbb
sbb
pop
xor
and
sbb
lcall
pop
scas
add
ret
jo
add
xchg
insb
push
mov
sahf
lahf
add
mov
popf
push
aaa
cltd
repnz
adc
jg
xchg
cmp
movsl
push
pusha
push
outsl
movsl
or
xor
ret
mov
scas
js
xor
adc
jns
jno
popa
lock
cmovae
sub
or
mov
sbb
test
out
out
or
sti
push
cmp
or
sub
adc
sub
mov
stos
sarb
sbb
dec
icebp
push
adc
or
xor
cmp
lock
push
pop
push
xor
and
sbb
lret
mov
pop
dec
cs
cmc
call
pop
adc
fadds
push
and
push
xor
je
xor
jnp
push
add
lock
decl
fimuls
lcall
mov
arpl
mov
lock
call
jnp
adc
lret
push
mov
and
lock
xchg
scas
adc
push
movsl
movsl
mov
iret
pop
test
cmc
adc
sbb
push
jo
arpl
repnz
inc
cmp
push
or
sub
mov
xor
adc
xchg
lcall
lcall
fs
xor
sub
clc
mov
push
sub
push
and
sbb
inc
lea
add
push
mov
jg
push
pop
gs
dec
sub
call
js
insl
push
sbb
sub
pop
aas
fidivrs
sub
adc
rorb
push
enter
adc
mov
cs
insb
stos
xchg
push
mov
in
mov
imul
fisttpl
xchg
and
lcall
xchg
jecxz
out
rcr
stc
lock
sbb
cwtl
or
pop
mov
push
or
lret
ret
or
lods
adc
lods
lret
lahf
push
adc
popa
mov
and
push
clc
cmpsb
aaa
mov
adc
fwait
and
ret
push
add
stos
and
and
hlt
mov
add
xor
xor
xor
adc
mov
push
push
push
rorl
push
adc
pop
sbb
jp
push
scas
add
pop
dec
cmp
jo
fs
jle
jb
pop
loope
outsl
pop
js
jmp
test
and
cmpsb
or
jle
int3
lret
xchg
sub
mov
xor
pop
repz
imul
stc
mov
xchg
xchg
fprem
std
stc
add
out
lock
neg
rcrl
mov
out
popf
or
aam
int
mov
cmovge
mov
mov
adc
outsl
test
test
push
iret
jns
sar
aaa
sbb
push
push
test
inc
inc
and
sbb
orl
movsb
and
popf
mov
add
or
sbb
sub
cld
lock
pop
mulb
mov
cmp
push
dec
xor
sub
xor
cmp
addb
icebp
push
insb
jo
push
aaa
push
lea
sbb
push
pop
mov
insl
dec
and
cli
fwait
push
cmc
mov
in
add
pushf
aas
pop
outsl
lods
or
addr16
xchg
mov
fmul
push
call
shr
in
stos
lret
fstp
fildl
mov
push
out
xchg
cmpsb
fxtract
std
xchg
pop
out
push
or
mov
lcall
dec
ret
enter
lret
mov
inc
inc
mov
stos
add
push
xchg
push
dec
call
inc
push
sub
or
inc
icebp
pop
mov
sbb
pop
mov
xchg
lcall
mov
rolb
fmuls
add
aam
push
test
dec
dec
jp
pop
clc
dec
sub
mov
aam
xchg
push
dec
ss
push
sub
adc
daa
and
icebp
cmp
or
xor
pushf
test
test
push
aas
jmp
jo
hlt
stos
js
hlt
mov
es
shll
or
leave
enter
rcr
aam
sar
insb
orb
lock
fnstsw
popf
in
inc
add
jle
mov
int
std
add
std
pop
adc
das
lea
jne
nop
pushf
sahf
jmp
mov
lret
and
push
jb
mov
jno
jnp
add
lods
and
push
fidivs
lock
pop
jno
xor
movsb
mov
adc
sbb
lock
mov
mov
push
sub
pop
inc
ss
mov
fisubl
cmp
push
jg
add
cmp
mov
xor
dec
xor
mov
sbb
mov
cmp
and
and
or
pop
scas
js
push
dec
cs
pop
xchg
sub
adc
cmp
lock
push
pop
sub
push
xchg
mov
leave
fcom
fcom
rcl
sub
mov
arpl
leave
out
lock
mov
cmp
mov
or
call
jne
push
mov
call
daa
nop
cwtl
cmpb
lret
sbb
lret
mov
cli
adc
insb
dec
lods
adc
jg
dec
lods
xchg
pop
jge
push
sbb
sub
andl
jmp
add
jb
add
add
fildll
xor
cmp
add
inc
add
adc
add
add
mov
xor
fwait
loop
sahf
mov
dec
das
fmull
add
sub
in
call
pop
fiaddl
aaa
das
jbe
pushf
jp
sbb
jb
adc
or
pop
aad
loopne
loop
out
cmc
in
test
bound
jo
movsb
add
int
adc
jecxz
xchg
fucomi
out
mov
mov
sarb
and
lret
cs
movsb
fwait
sar
jmp
or
mov
mov
jno
cmpsb
xchg
push
data16
mov
mov
add
in
sub
jno
pop
aas
push
dec
inc
dec
sbb
xor
jle
sub
clc
fwait
hlt
rcrl
push
dec
sub
loop
lahf
popf
and
add
sbb
push
xor
or
push
xchg
add
push
push
pop
pop
xor
adc
fwait
rolb
pop
pop
cmpsb
push
ss
and
loopne
mov
jmp
mov
shlb
decb
lahf
fsubrp
call
mov
or
xchg
addr16
and
popf
xchg
add
cmp
xchg
push
lcall
or
aad
inc
add
fiaddl
fnstenv
pushl
in
mov
mov
fcmovnu
mov
imul
pop
sub
icebp
movsl
std
and
pop
lret
movsb
or
mov
ljmp
mov
or
cltd
mov
push
add
mov
sbb
mov
push
fisubrs
push
insb
dec
dec
mov
test
js
or
mov
rcll
dec
outsl
mov
or
or
loop
or
dec
sbbb
cmp
and
push
repnz
or
and
pop
popa
aad
or
and
dec
pop
dec
xor
mov
aaa
add
mov
je
push
dec
and
hlt
das
mov
mov
daa
lea
jne
mov
clc
mov
pusha
aas
mov
xor
adc
aaa
dec
push
pop
int
xlat
fstp
push
fdiv
push
insb
out
out
mov
mov
adc
out
stc
enter
std
dec
loopne
sti
stos
repnz
mov
mov
mov
xchg
fcmove
mov
loopne
popf
and
call
mov
test
loope
push
add
enter
add
test
das
adc
jae
call
adc
and
aaa
add
push
and
orb
add
push
fs
out
data16
push
out
push
add
push
pop
add
add
rorb
fwait
pop
insl
and
adc
or
mov
add
cwtl
fbstp
pop
pusha
xor
pop
lock
pushl
jne
popa
das
sbb
push
lods
sbb
mov
cltd
outsl
inc
and
cmp
or
rol
loope
xchg
jecxz
out
push
cmpsb
jbe
cld
jg
push
jmp
imul
loopne
fstpl
aas
cmp
sbb
hlt
repnz
fstp
in
xor
push
and
xor
cmp
incl
cmp
rcl
xlat
rcl
adc
adc
push
mov
popa
clc
jg
test
lret
push
test
in
shll
lods
ljmp
mov
mov
or
fdivrl
testb
xor
pop
add
je
sub
and
sub
add
popa
push
adc
mov
push
mov
jb
push
movsb
mov
mov
jnp
outsl
addr16
dec
jbe
aas
push
cld
dec
sub
imul
lcall
mov
push
das
xchg
lea
ret
push
sub
or
loope
dec
popa
push
inc
out
or
mov
xor
and
lcall
jg
or
cld
hlt
icebp
fmul
mov
xchg
ds
orl
rolb
cwtl
fucomi
out
adc
mov
xchg
lea
add
rcr
sarb
sarb
cmp
es
mov
and
imul
jno
sub
push
add
sbb
push
ret
imul
jns
aaa
sbb
sbb
push
adc
orl
gs
popa
adc
rolb
ret
cmpb
xor
add
cs
cmp
outsb
or
mov
push
push
data16
ja
xchg
add
xchg
jbe
jecxz
xchg
xchg
ja
outsb
imul
push
aaa
xor
das
and
pop
and
cmpsb
loopne
cmp
mov
and
xor
adcb
cmp
mov
shrb
sbb
jmp
ret
loope
add
in
jmp
mov
shr
mov
push
cmp
lcall
sbb
push
push
rcll
movsb
xor
push
inc
loope
or
push
mov
sbb
dec
subl
and
cmp
lock
notb
sbb
rcll
aaa
push
cmp
dec
repnz
ljmp
add
push
addb
decl
push
fs
adc
jb
outsb
mov
andb
scas
mov
lock
sbb
cli
jg
sub
add
arpl
cmp
mov
add
and
mov
cltd
xchg
push
and
lahf
test
push
push
cltd
jbe
mov
fndisi(8087
add
out
sub
in
cmc
lock
mov
incl
movsb
jecxz
xchg
xchg
pop
dec
hlt
aam
xchg
test
xchg
cmp
fcmovnu
or
mov
and
shl
rol
or
rol
mov
les
mov
outsb
mulb
mov
sub
mov
call
aaa
sub
adc
test
and
adc
lret
mov
daa
cmpl
cmp
loopne
mov
cmp
popa
adc
jb
jb
outsl
je
xor
xchg
push
sbb
xchg
ja
test
push
or
xchg
xchg
cmpsb
xchg
lret
pop
and
mov
andb
call
nop
xchg
cltd
mov
nop
push
and
daa
lahf
in
lcall
aaa
xor
adc
out
push
cmc
ljmp
pusha
mov
loop
in
mov
les
ffree
lcall
cld
jg
sahf
jmp
lret
lret
mov
and
and
lcall
loopne
es
and
rcrb
mov
mov
hlt
xchg
xor
cmp
pop
and
lock
xor
adc
and
xchg
cli
xchg
scas
ds
in
and
adc
mov
popa
adc
call
mov
pand
and
imul
xor
xchg
jne
loopne
pop
roll
xchg
push
add
loopne
xor
pop
pushf
lock
mov
adc
arpl
popa
clc
rorb
data16
mov
int3
imulb
cmp
in
add
cmc
sarl
sbb
shll
fwait
bound
repnz
jmp
dec
mov
clc
push
fadds
jl
pop
cmp
push
in
inc
inc
movsb
int3
inc
loope
fwait
out
addb
fcompl
lods
imul
mov
push
xor
pop
cli
push
cld
push
mov
sarb
pop
adc
out
cli
outsb
adc
xor
pop
adc
pop
loopne
in
repnz
dec
or
gs
lds
pop
pop
adc
mov
sbb
jne
je
push
xchg
adc
mov
xchg
or
xchg
insb
mov
add
cmpsb
adc
add
xchg
lock
mov
nop
arpl
cmp
and
mov
lahf
mov
adc
fs
or
in
incl
fcmovne
cwtl
pusha
fwait
loop
cmc
mov
stc
std
adc
dec
sbb
aaa
es
mov
cmpsb
movsb
push
push
or
orb
daa
xchg
shl
stos
mov
adc
rolb
mov
adc
imul
pop
sbb
jg
sbb
add
xchg
insb
add
mov
stos
add
mov
mov
cld
adcb
mov
inc
imul
xchg
push
fcmovnb
jo
or
or
xchg
xchg
add
cmp
xchg
sub
mov
ret
loop
mov
inc
pushl
mov
loop
cmc
mov
xchg
and
lock
orb
jo
sbb
jmp
push
adc
mov
ret
nop
aas
hlt
test
add
ret
jmp
repz
out
fxch
mov
mov
adc
xchg
in
mov
mov
cwtl
rcr
in
stc
lock
into
loop
rcll
loopne
adc
fdivp
cmpsb
mov
nop
hlt
stos
pop
jg
add
inc
andl
mov
add
add
cmp
or
xchg
push
and
cmpsl
or
xor
inc
lahf
pushf
fwait
es
dec
mov
or
adc
sbb
pop
add
movsb
mov
fistpll
xchg
cltd
cmpsl
mov
mov
mov
push
mov
push
nop
nop
int
je
out
sahf
test
pushf
mov
xor
cmpsl
adc
loop
jecxz
syscall
mov
mov
push
out
fcmovne
adc
lock
in
aaa
mov
dec
xchg
lock
std
adc
movsb
imul
aaa
cmp
xor
in
sbb
shr
je
sub
mov
fdivl
sbb
xor
popa
pop
data16
pop
popa
or
sti
mov
ss
aaa
xor
add
sbb
adc
add
and
fnstsw
outsb
sub
add
or
popa
cmp
add
shl
hlt
jp
xchg
or
push
and
push
pcmpgtw
mov
cld
mov
xchg
xchg
nop
add
inc
mov
cmp
xchg
inc
push
enter
je
fadd
cmp
sbb
in
out
push
cmp
jnp
push
in
sahf
test
repz
incb
std
pop
loop
movsl
push
test
ret
test
cli
push
cltd
mov
mov
mov
mov
jmp
loope
push
and
scas
scas
loopne
rolb
cli
cltd
setae
adc
push
fs
pop
data16
xlat
int3
dec
add
push
push
pop
adc
pop
inc
and
sbb
data16
inc
pop
mov
sbb
xor
aad
rcl
outsl
or
jne
sub
and
bndldx
jecxz
leave
ds
xchg
cltd
or
push
mov
adc
rcrb
mov
sub
sbb
adc
mov
dec
pop
xchg
insb
or
in
in
push
or
xlat
cmc
sbb
out
inc
imul
dec
xchg
cld
or
pop
js
fs
rcr
fdivl
lret
sbb
ljmp
call
fidivl
sahf
cmp
sbb
mov
rolb
or
cltd
adc
cli
push
or
ljmp
adc
addr16
shl
cmp
jb
jb
outsl
xchg
repnz
divl
add
push
add
jbe
shl
fiadds
xchg
push
or
xchg
pop
push
cmp
lock
mov
add
mov
or
mov
add
loopne
lds
loope
roll
push
push
out
sub
and
sbb
and
mov
shl
testb
lock
icebp
sbb
xor
inc
rorl
bound
cmp
addb
xor
in
mov
adc
jle
dec
push
hlt
mov
shll
mov
push
data16
out
imul
mov
push
add
insl
or
mov
pusha
outsl
outsl
clc
add
xchg
sub
pop
adc
imul
or
lock
pop
mov
pop
or
add
out
loopne
push
add
add
ret
loop
xor
sub
add
ljmp
mov
arpl
sub
repz
cmp
add
out
cmp
jge
addl
push
cltd
loope
adc
or
iret
jno
jnp
fadds
cli
pop
sbb
icebp
out
stos
mov
mov
push
movsl
add
lods
movsl
cwtl
jo
adc
xor
stos
add
stos
les
pop
movsl
xchg
lcall
add
mov
mov
sub
mov
mov
mov
or
inc
sbb
jp
mov
aaa
sbb
xor
jb
bound
push
in
cmc
out
idivl
jnp
fisubrl
incl
cs
or
sti
std
or
addr16
pop
cmp
sti
push
outsb
push
push
fisubrl
jnp
add
cld
and
cmp
pop
jnp
and
lcall
sbb
stc
cmp
sub
xor
xor
xor
or
rdpmc
xor
notb
aaa
dec
ss
dec
or
dec
dec
dec
xor
outsl
imul
dec
dec
pop
dec
push
dec
push
add
fistpl
mov
cmp
dec
add
sub
push
push
push
push
add
push
add
fldenv
add
pusha
pop
pusha
pusha
push
push
mov
add
push
push
jae
add
add
xlat
fstpl
push
jae
fldenv
dec
add
cld
pop
bound
xor
pop
into
adc
adc
inc
fcomp
or
adc
xchg
imul
mov
push
push
adc
push
pop
push
in
add
pop
push
sbb
in
mov
sbb
add
and
and
sub
scas
cs
fbstp
and
add
xor
or
xor
pop
sahf
idivb
aaa
ds
add
xchg
pop
push
pop
push
add
int3
fdivl
dec
or
jnp
add
xchg
xor
xor
scas
lret
iret
into
movl
scas
mov
or
scas
stc
xor
add
icebp
or
sbb
lret
add
adc
or
incb
inc
sbb
pop
fstps
push
sub
xchg
cs
add
inc
in
in
fistps
adc
add
aas
xor
cmp
add
cld
call
xor
es
inc
aaa
add
inc
adc
adc
mov
int
inc
dec
dec
add
dec
dec
push
dec
push
push
mov
fldt
push
inc
inc
push
dec
inc
add
pop
pop
cs
pop
add
gs
add
jle
add
insl
push
dec
dec
push
pushl
ds
insl
push
dec
je
es
push
jp
add
call
push
xchg
push
add
push
add
push
je
fistl
push
push
mov
fwait
add
jg
addl
nop
mov
jne
popl
jp
jg
fistl
jle
xchg
lahf
cwtl
add
mov
lcall
xchg
push
add
outsl
test
ljmp
out
sti
incb
pushf
xchg
test
jle
lahf
movsl
outsl
testb
xchg
mov
mov
add
fwait
xchg
push
sahf
xchg
add
decl
popf
add
stos
movsb
add
scas
test
cwtl
mov
outsb
sbb
mov
sahf
pop
mov
mov
mov
mov
cmpsb
mov
sarb
in
mov
pushl
lret
rol
mov
push
lock
iret
ds
imulb
dec
mov
ret
add
mov
push
mov
ds
or
push
aam
insl
loop
int3
xlat
into
ds
imul
clc
push
rcr
push
fwait
outsl
mov
fcom
push
rcl
rolb
fcom
add
fxch
fdivr
fdivrp
out
add
iret
add
add
push
out
pop
fwait
lods
std
insl
loop
xchg
aam
add
fld
push
xlat
push
std
fcomi
fistps
xor
fsubp
push
in
in
out
in
in
aaa
cmpb
rcll
in
loop
int
imul
out
js
out
lock
push
in
out
insl
mov
ds
jecxz
cli
jecxz
in
repnz
add
out
fistl
cmc
inc
sti
in
ss
lcall
fsubrp
cs
jmp
mov
ss
repnz
icebp
xlat
inc
outsb
not
loopne
fistpl
dec
push
jmp
push
fbstp
loope
jecxz
ss
negb
call
in
call
out
ds
outsb
mul
ds
loope
add
ljmp
fisubl
in
hlt
out
push
stc
es
out
xchg
insl
mov
dec
cli
pop
call
scas
mov
out
es
repnz
loopne
int
mov
mul
repnz
cli
lock
repnz
icebp
out
imul
jnp
mov
push
xacquire
insl
pop
cld
push
cli
repz
bnd
hlt
cld
push
cmc
sti
mov
fldt
sti
idiv
into
clc
cs
sti
in
push
pushl
icebp
out
out
repz
cmc
hlt
outsb
push
mov
outsb
push
lock
push
std
hlt
push
cld
div
imul
repz
div
stc
fstpt
mov
add
push
lock
push
cld
clc
ja
jmp
imull
into
dec
pop
fisubrl
div
cli
cld
call
int
push
pop
cld
std
stc
push
std
cld
sti
push
leave
les
repz
clc
cld
xor
ljmp
push
cld
jmp
pop
repnz
or
adc
adc
or
scas
cmp
and
cmp
out
xlat
clc
incl
mov
add
idiv
pop
repnz
call
cli
xchg
mov
rol
lcall
or
aaa
mov
sbb
pop
push
or
pop
mov
mov
addl
and
or
dec
jmp
sub
dec
xor
dec
dec
add
cmpsl
test
jecxz
insb
mov
loopne
sahf
xchg
cltd
add
xor
dec
js
dec
sbb
repz
push
fs
mov
lret
frstor
lahf
out
pop
pop
xor
pop
push
lods
je
arpl
out
jg
mov
out
jecxz
loope
repnz
clc
jbe
lods
push
lcall
sarl
jns
in
fisubrs
in
repz
fsubrs
int3
incl
gs
stos
xchg
stos
scas
cld
aad
mov
ret
rcl
into
sar
scas
adc
xor
gs
ja
shrb
jno
insb
bound
pop
pop
pop
pop
outsl
jo
jae
pushl
icebp
mov
sti
or
push
inc
inc
inc
inc
inc
inc
ds
aas
inc
es
mov
sti
xor
test
fldt
movsb
lods
add
sbb
adc
std
int
pop
scas
xor
sbb
add
popl
ljmp
icebp
dec
sbb
add
dec
xor
or
ffreep
cmp
jg
xor
push
shrb
cmc
ljmp
jns
dec
xor
xor
test
adc
pop
pusha
fildl
jp
xor
stos
lods
add
mov
stos
sub
jp
xor
xor
cmp
sub
sub
es
jno
xor
dec
pop
in
pop
pop
xor
or
mov
and
dec
int
out
mov
bound
cmp
cmp
pop
daa
pop
ss
fxch
sub
es
das
bound
xor
dec
mov
jnp
stos
test
push
xor
xor
fs
push
and
jg
cli
sbb
and
mov
pop
in
adc
add
fs
xchg
popa
clc
sarl
pop
mov
add
int
jmp
outsb
pop
ret
jge
testl
mov
mov
fcompl
lea
lcall
dec
sub
sbb
femms
jle
add
add
adc
test
mov
enter
sbb
pop
pop
pop
adc
pusha
int
add
cmp
lcall
mov
xchg
loop
mov
es
pop
push
in
insb
mov
add
pop
sbb
pop
mov
dec
or
fildll
fwait
int
bound
mov
mov
mov
xor
stc
mov
data16
inc
add
ret
pop
jge
xchg
mov
ret
into
push
rorl
sar
adc
jns
mov
add
or
pop
enter
int
or
and
pop
out
dec
pop
idivb
push
cmp
add
mov
scas
xor
cmp
xchg
inc
loopne
xchg
adc
inc
add
das
inc
pop
dec
jb
lret
push
add
inc
lea
inc
xchg
and
and
jmp
bound
add
pop
cltd
repnz
idivb
xchg
xchg
push
cltd
add
xchg
or
push
mov
xor
imul
enter
cmp
adc
mov
pop
xor
mov
dec
sbb
inc
xor
cmp
or
jae
cmpb
add
mov
and
add
out
std
into
and
or
add
aaa
pushl
add
cmp
sti
xchg
js
xor
js
ja,pn
sub
call
xor
lret
mov
imulb
subb
jo
mov
mov
add
xchg
cmp
es
idivl
xchg
pop
jb
pop
aaa
jae
jnp
cmp
mov
mov
out
jnp
add
frstor
or
movsb
mov
insl
cmp
or
push
xchg
add
pop
lods
test
and
push
stos
cwtl
and
or
leave
push
add
sub
dec
dec
inc
cmpsb
push
add
pop
add
aam
jecxz
pop
pop
add
pusha
cmp
clc
scas
adc
imul
es
push
out
pop
loop
rol
ret
addb
xchg
xchg
jge
lcall
negb
scas
cmpsb
cmpsb
xchg
add
xchg
stos
xchg
add
lcall
scas
cltd
mov
jg
pop
push
mov
fwait
add
sahf
add
or
inc
adc
mov
mov
mov
in
mov
mov
mov
xchg
fildll
lods
add
lds
mov
loop
and
push
mov
pop
mov
adc
xchg
movsl
push
add
mov
les
add
xor
aaa
mov
fadds
das
add
and
pop
push
cwtl
sub
sub
es
mov
xchg
dec
push
push
add
push
inc
or
dec
dec
dec
dec
lods
mov
ljmp
push
lods
cmp
jmp
fcmove
int
add
or
or
push
add
in
out
and
or
or
sbb
push
dec
sti
sbb
call
add
xor
scas
or
cmp
fsubrl
mov
adc
push
or
adc
and
pop
cld
ja
repnz
inc
push
adc
push
push
push
add
push
push
adc
aas
ds
iret
xchg
call
adc
aas
adc
add
sbb
dec
faddl
movups
sbb
es
jns
pop
add
sbb
sahf
stc
mov
mov
test
xor
mov
aas
add
cmpb
movsb
loope
cmp
push
sahf
or
pop
scas
push
decl
dec
dec
push
push
sub
adc
sbb
loope
jmp
and
xor
xor
sub
and
and
inc
incl
cwtl
add
incl
cmp
pop
pop
add
mov
jmp
pop
adc
or
aaa
add
sub
or
add
fs
jne
lcall
imul
sub
dec
xor
add
xor
xor
loop
dec
push
xor
stc
fcomip
mov
mov
add
and
sub
add
pop
add
cmp
out
divb
jae
xor
sbb
add
xchg
cmp
dec
sub
adc
insl
inc
dec
push
dec
push
add
push
pop
es
lods
insl
fwait
jmp
and
pop
bound
jbe
jge
pop
push
pop
xchg
sar
mov
push
cmp
jbe
add
inc
add
jle
mov
push
jo
insb
jo
add
ss
insl
xor
inc
jne
jp
imul
insb
fwait
inc
xchg
sbb
mov
add
sbb
sahf
xor
mov
add
inc
mov
inc
fsubrs
inc
orl
lret
or
push
xlat
push
es
and
ljmp
lock
sbbb
imul
mov
in
adc
testb
gs
outsb
lods
mov
and
cmpb
sti
mov
push
add
xchg
pop
push
or
or
outsb
pop
cmp
mov
lock
out
cmp
add
mov
push
push
dec
push
add
add
dec
xor
dec
addb
push
pop
xor
cs
popf
add
pop
xchg
add
insl
add
jbe
sbb
mov
push
sub
add
mov
ja
daa
cbtw
jbe
xchg
into
repz
movsl
mov
mov
das
dec
scas
aaa
pop
mov
cmp
dec
push
lahf
cmp
mov
inc
push
out
pop
jle
dec
test
je
push
jnp
in
outsl
jg
outsl
mov
push
jge
add
mov
loop
xchg
gs
mov
inc
ret
call
insl
mov
dec
pop
ret
jae
add
daa
adc
pushl
mov
and
cmpsb
cs
mov
stos
cwtl
push
cmp
cmp
mov
mov
dec
add
push
test
fcom
outsb
fwait
jbe
test
jo
mov
mov
pop
fwait
adc
pop
sub
dec
orl
test
sub
xchg
stos
fisubs
mov
xchg
ss
aad
ds
fildl
push
mov
test
add
mov
mov
out
sti
or
ficomps
cmc
add
loope
pop
shrl
mov
push
mov
add
xchg
add
lret
rcr
test
fildll
pop
mov
add
fadds
bound
les
push
push
push
inc
xor
insl
mov
jno
or
cs
push
mov
jne
stc
add
icebp
je
shlb
cmp
es
mov
nop
pop
fmulp
ds
rorb
mov
cld
sub
std
add
enter
cmp
add
mov
in
cmp
push
outsb
rcl
inc
lret
insl
or
xchg
in
push
push
push
je
fdivs
mov
mov
jle
sahf
push
cmpsl
lods
mov
push
insb
push
mov
mov
loop
enter
insb
pop
mov
add
adc
cmpsl
fdiv
mov
out
sti
rcr
add
add
lahf
stos
fiaddl
cmpsl
sbb
sbb
inc
lcall
hlt
xorl
add
or
repnz
cwtl
add
and
sub
push
fstpt
pop
pop
push
push
ffree
lcall
sbb
imul
sub
ficoml
mov
sub
scas
imul
add
pop
mov
xchg
push
sbb
insl
mov
inc
mov
cmp
jg
and
movsb
fistpll
jp
jg
lods
imul
ljmp
sbb
jns
ret
dec
jl
outsl
inc
sub
jns
test
data16
pop
and
jns
out
jnp
add
imul
push
mov
pop
inc
pop
inc
pop
divb
pop
add
add
fdivp
cmp
sbb
or
ret
loopne
sbb
or
int3
fstp
and
std
jge
add
mov
outsl
sub
test
or
add
mov
mov
lret
and
cmp
out
fldenv
mov
mov
pusha
test
inc
dec
mov
in
jo
mov
sub
sbb
adc
mov
mov
jl
push
push
fldl
add
mov
js
shl
decb
les
mov
push
mov
sbb
pusha
mov
pop
sbb
xlat
mov
sbb
cli
scas
sbbl
push
xor
ret
lods
mov
sbb
popf
mov
loope
fisttpll
mov
popl
ret
mov
sahf
cld
mov
push
add
sub
scas
cmp
clc
insl
into
ljmp
fimull
into
imul
sub
and
push
sbb
pusha
dec
mov
and
sbbb
fwait
jbe
jno
and
and
lods
mov
lods
cld
mov
insl
sbb
test
ljmp
hlt
mov
mov
add
cmp
cld
add
jp
fucomip
dec
rorb
add
test
lods
lods
xchg
sbb
xchg
mov
dec
mov
divb
add
push
push
sbb
test
shrl
clc
or
outsl
adc
push
pusha
jns
ret
sbb
or
mov
jo
dec
aaa
push
les
addb
jmp
ret
sar
lret
ret
loop
mov
js
jge
xor
mov
imull
jg
add
add
add
inc
add
cmp
ret
enter
mov
and
pop
dec
xchg
ud0
inc
sbb
popa
imulb
add
fsubrl
jle
push
push
inc
sbb
add
sbb
incl
scas
add
call
xor
pop
pop
pop
bound
xor
jb
test
imul
sub
push
pusha
jle
lods
jge
mov
stos
loopne
ljmp
jl
fists
push
jle
sbb
push
adc
jg
push
sub
scas
imul
jle
or
pushl
das
cmp
cmpsl
cmp
xor
pi2fd
push
adc
inc
dec
dec
pop
pop
pop
push
push
pop
in
out
les
mov
test
pop
pop
jp
xor
imul
mov
ja
mov
leave
mov
cmp
dec
push
push
cmp
inc
dec
pop
decl
dec
push
out
rorb
lods
mov
mov
fisubrs
jp
rol
mov
or
xor
lret
movsb
xor
fiadds
loopne
cmp
cmp
sbb
push
orb
cltd
adc
jle
cli
cmc
jl
aad
mov
mov
jmp
cs
fidivl
pop
add
addb
dec
push
les
add
jno
lret
jl
cli
cmc
aad
dec
out
add
jmp
fcomps
pop
add
cmp
add
mov
dec
inc
cmp
aad
push
push
push
insl
jo
xchg
js
xlat
into
xchg
out
jg
fabs
mov
jno
and
and
ds
or
inc
cmp
pop
cli
dec
pop
adc
addb
xchg
ja
call
jl
call
and
push
ss
push
push
or
or
dec
aaa
adc
jg
pushl
orl
cmc
cmc
div
aad
and
imul
sub
xor
dec
sub
js
addb
sub
cmc
xlat
cmc
sarl
mov
mov
jge
or
and
jg
mov
jg
sbb
and
and
testl
aad
or
loopne
in
lret
xlat
call
imul
xchg
imul
js
jg
clc
add
roll
xlat
mov
add
push
sahf
add
es
fsincos
jecxz
shl
xchg
outsl
scas
mov
push
cli
inc
adc
sbbb
or
mov
lret
subb
jle
idiv
add
jle
loope
inc
mov
mov
xchg
xchg
cmc
cli
jl
addb
scas
mov
aaa
js
mov
addl
pushl
jg
mov
jg
mov
imul
aad
jle
subb
div
int
scas
add
cmpl
aas
iret
and
mov
cmp
add
xchg
ss
cmp
jge
mov
and
xlat
call
add
insb
jg
cli
shlb
push
mov
mov
mov
sub
daa
adc
pop
mov
sti
add
or
out
outsb
and
test
jle
inc
sarl
mov
adcb
loopne
jnp
adc
idiv
cmp
xlat
daa
jno
mov
fsubp
jmp
sahf
mov
pop
mov
add
fisttpl
andl
ficoms
clc
out
pop
sub
jb
enter
cmc
int3
stos
jo
or
ja
and
mov
inc
cld
jle
leave
lods
sub
add
sti
std
aaa
mov
popa
xchg
sti
cli
in
aad
mov
pusha
sub
iret
cmp
hlt
gs
jle
mov
xchg
jmp
loope
enter
clc
call
stc
sti
pop
negl
add
shl
cli
ret
sub
andl
or
sarb
outsb
xchg
sti
adcl
movsb
mov
jl
push
jle
jle
andl
fnstsw
popa
xchg
cld
push
sub
jle
stos
add
mov
lock
add
movsl
iret
jne
test
ret
pop
push
jge
jg
repnz
xlat
adc
cmpsb
in
adc
xchg
fnstsw
and
jne
neg
outsl
jle
nop
nop
jecxz
loopne
addr16
jnp
sbb
std
mov
js
jle
push
adc
jns
mov
subb
or
mov
cli
sub
jne
inc
icebp
add
jg
ret
decb
xlat
inc
push
cmpb
fucom
repnz
mov
add
js
jg
xchg
insl
adc
sub
xor
js
sbb
mov
jg
pop
jle
sti
and
inc
add
les
sub
cmp
leave
cmpb
fimull
push
sbbb
sub
call
outsb
fldt
mov
push
rcll
push
sbb
xorb
pop
sarb
mov
mov
jp
adcl
jle
mov
aam
push
or
das
lods
mov
push
pushw
scas
jnp
jg
arpl
test
cld
add
dec
xchg
mov
insl
cmpl
pand
add
jg
cli
lds
ret
ret
outsl
xchg
call
inc
div
sbbl
jbe
in
pop
bound
jg
rorb
lods
into
sub
lds
jns
jge
roll
jle
incl
clc
sbb
mov
lods
outsl
cld
pop
jg
ret
gs
xchg
fnsave
add
ret
jns
rol
jns
addb
mov
fldl
jl
jge
and
in
out
sti
xlat
ret
jl
and
xchg
int3
xor
dec
add
mov
jge
add
jg
movl
mov
mov
xchg
fldl
push
sub
mov
lds
iret
or
fisubrl
add
outsl
insb
js
mov
push
jle
ror
subb
shr
out
jnp
int
icebp
sti
cmc
lret
jle
push
lods
aam
sub
adc
cltd
sub
pop
addb
imul
addb
call
aad
mov
jmp
loope
mov
jle
call
pop
idiv
cli
rolb
out
call
mov
ret
in
pop
jmp
lret
ja
push
jo
push
clc
je
ds
mov
or
push
push
add
cltd
inc
mov
and
inc
push
dec
and
push
add
adc
add
inc
adc
cmpb
and
addb
ljmp
add
or
inc
sub
and
test
add
add
add
or
inc
sbb
outsb
dec
in
dec
add
push
sbb
sbb
add
adc
adc
pusha
test
decl
adcb
adc
inc
mov
adc
and
mov
imul
sti
pusha
nop
or
or
dec
sub
or
sub
scas
add
andb
testb
mov
or
sbb
frstor
adc
adc
subb
cld
add
insl
imul
pusha
inc
xchg
add
int
push
outsb
je
or
add
fistps
push
adc
inc
add
inc
dec
push
mov
or
sub
inc
loop
add
lods
xor
push
andb
test
adc
testb
inc
and
pusha
sbb
popa
fbstp
add
or
or
inc
xor
sbb
pop
orb
or
cmpl
add
adc
adc
push
add
sub
cmpsb
jge
outsl
xchg
mov
add
and
inc
or
insl
or
dec
add
lods
or
add
or
inc
mov
and
adc
or
dec
and
addb
nop
inc
add
or
cmp
sarl
and
dec
add
push
push
dec
jo
adc
fsubl
add
orl
mov
push
or
dec
adc
pop
add
rcr
andb
and
or
mov
jl
xor
add
adc
sub
stos
add
loopne
nop
fisttpl
ljmp
add
jo
adc
mov
inc
orb
adc
pop
fildl
and
and
mov
add
lcall
test
fmull
dec
sar
or
or
data16
add
jo
pusha
mov
sbb
dec
adc
adc
ficoms
or
adc
or
or
subb
mov
data16
add
stos
mov
sbb
mov
push
test
shlb
and
andb
push
imul
in
or
push
stos
call
call
cli
mov
add
sub
lods
insb
pusha
insb
dec
or
and
dec
fdivrs
sbb
lcall
cwtl
mov
and
add
pusha
or
xchg
adc
add
dec
rclb
add
nop
jle
dec
lods
inc
fwait
adc
mov
or
jo
mov
dec
loopne
data16
sbb
inc
int
and
and
jo
loopne
nop
push
or
sbb
jg
outsb
std
mov
pop
add
push
inc
jecxz
or
call
mov
aas
fwait
fidivl
add
push
jl
mov
stc
fistpll
xlat
mov
jbe
outsl
push
imul
pop
mov
sti
jg
push
in
fistl
popf
fwait
ds
mov
fwait
mov
clc
popf
pop
imul
js
outsb
mov
into
mov
push
in
popf
jnp
in
stc
fwait
push
fwait
es
sti
jbe
mov
push
jle
cs
sti
es
cli
js
mov
data16
cmp
mov
fldt
das
push
jl
pop
add
jnp,pt
fbstp
mov
lahf
jnp
xchg
ljmp
es
mov
inc
imul
std
mov
cltd
mov
lcall
xchg
jg
outsl
sti
out
pusha
fucomi
fnstcw
sahf
jg
push
imul
insl
fldt
fwait
xchg
jns
push
jle
jl
data16
popf
xchg
mov
cmpsb
out
mov
out
stc
insb
flds
js
sbb
fbstp
mov
pop
out
into
mov
in
inc
out
cmpsb
outsb
popf
mov
fnsave
push
or
out
ds
js
in
fwait
idivb
imulb
outsb
fisttpl
jle
jle
ds
xabort
pop
mov
cmp
dec
sahf
imul
mov
jnp,pn
pop
jns
jnp
cmp
scas
fsubrl
sahf
jnp
mov
pop
mov
clc
mov
fwait
mov
push
mov
cltd
push
clc
cli
push
push
ret
inc
sbb
jns
cld
in
lds
mov
push
cli
out
jg
push
in
jecxz
fldl
push
jnp
fwait
idivb
popa
loope
cmp
ss
lahf
lock
outsb
xchg
push
push
or
jno
push
push
rolb
mov
pop
out
dec
fbstp
fnstenv
fucomi
popf
out
push
jmp
mov
push
push
inc
fldt
std
cltd
mulb
sti
jl
ds
cmp
ds
push
popf
push
mov
xchg
sbb
out
fnstsw
jg
fcomi
loopne
cld
imul
fldcw
out
incl
fistpll
mov
addb
std
xchg
imul
aam
push
mov
jnp
jl
imul
ds
ss
js
ds
cmp
push
pop
jg,pt
testb
int
jle
sahf
ljmp
setnp
stc
mov
sahf
mov
ss
ss
jbe
repz
xor
inc
jge
negb
loopne
mov
fwait
dec
push
loop
ret
call
outsl
out
ljmp
sahf
in
stc
mov
add
insb
outsb
jbe
fisttpl
pop
cmpsl
cld
jg
dec
in
incl
cmpsl
pop
pop
fdivrl
mov
dec
xchg
lahf
jle
jmp
pop
push
push
inc
dec
mov
movb
out
add
fsubl
pushl
mov
add
xor
adc
bound
push
out
fs
add
jmp
push
sbb
or
fcomip
hlt
lds
mov
dec
scas
dec
inc
cmp
ret
lcall
jle
push
sbb
sbb
into
sub
hlt
mov
cmc
movsb
adc
push
inc
mov
shlb
icebp
ljmp
cltd
insb
outsl
js
stos
xchg
mov
mov
sbb
call
jmp
and
sub
jmp
cmp
jg
or
push
xor
cmpsb
je
xor
mov
jg
push
arpl
adc
adc
aad
or
int
test
dec
decl
bound
dec
aaa
shrb
xor
sub
das
cwtl
out
jmp
mov
sti
cmp
push
cld
push
xchg
adcb
cwtl
jno
mov
push
mov
shll
pushl
cmpsl
sbb
mov
outsl
xrelease
iret
and
xchg
and
cwtl
push
das
sti
mov
pop
push
js
push
leave
stos
cmpsl
xor
leave
or
mov
mov
inc
inc
ret
push
movsl
fsubr
repz
scas
cmp
pop
ljmp
pop
mov
ds
stos
pop
inc
mov
mov
dec
aaa
into
xor
lea
ja
xchg
jae
movl
push
sahf
lcall
sarl
hlt
decl
lcall
push
ret
sahf
mov
insb
cmpsb
and
inc
into
adc
jg
incl
mov
adc
pop
mov
fisttpl
adc
out
jns
cmpsb
shlb
sbb
jbe
data16
push
fwait
rcr
dec
sbb
insl
sbb
mov
pop
ljmp
pushl
out
cmc
fmulp
lret
leave
inc
repz
std
sub
xchg
lock
repz
mov
xor
jmp
cwtl
lea
push
mov
je
lcall
sbb
fidivs
adc
ret
jecxz
sbb
aam
aas
insb
pop
dec
decl
imul
test
bound
inc
loop
jl
pop
push
pop
lret
addr16
jmp
subb
adc
test
pop
rorb
add
add
jne
cmpsb
loopne
sbb
decl
outsb
push
mov
xor
fstpl
les
and
mov
incl
fs
stc
and
add
jp
dec
jle
ds
pop
ja
stc
dec
sbb
adc
cli
mov
sahf
inc
push
cwtl
andb
push
sub
jnp
xchg
jae
mov
ljmp
cmp
stc
in
xchg
dec
lcall
push
mov
int3
lcall
movsl
testl
and
jmp
adc
decl
inc
or
cmp
cmp
nop
mov
in
test
jle
jg
das
cli
pop
xor
inc
xchg
lret
decl
mov
test
incl
mov
mov
adc
jl
inc
or
cmp
aas
scas
fimull
aas
adc
push
lock
jb
clc
ds
xor
and
pop
lret
subb
pop
or
sub
das
sub
fistps
aam
xor
ret
dec
fisubrl
mov
loopne
cmp
aas
jl
loopne
mov
rcr
imul
dec
jbe
pop
cmp
call
aaa
pop
cmpsb
nop
dec
xchg
test
les
jb
movsb
subl
sbb
mov
cmp
inc
insb
push
sbb
inc
inc
pusha
xor
mov
cmp
fisubrl
dec
arpl
add
and
call
pushl
cmp
lds
xchg
dec
scas
out
notl
add
cmp
cs
insl
push
mov
shll
lahf
mov
dec
lods
call
push
lds
lods
jge
stc
hlt
lcall
push
pop
out
rorl
call
pop
xchg
xor
fnstsw
popf
xor
jae
xchg
mov
sti
mov
inc
cmc
sbbl
dec
insb
xorl
pop
cld
sbb
push
sub
outsl
adcb
push
inc
mov
pushl
in
repz
lods
bts
inc
fsubrl
ljmp
pop
xor
cmp
mov
enter
lret
clc
std
es
mov
or
pop
jp
outsb
cmpsl
push
test
in
int
std
lock
push
dec
shr
sub
into
pop
lret
in
push
int
xor
mov
fdivr
xchg
sbb
jg
pushl
mov
pop
mov
and
ret
cmc
push
nop
seto
jmp
aaa
popf
into
mov
cmp
or
push
negb
les
jl
shrl
test
lret
xor
ljmp
cmp
stos
mov
shl
scas
hlt
mov
pop
jp
loope
nop
xlat
ja
pushf
stc
mov
push
add
jge
sub
jl
cmp
lds
sti
dec
mov
out
data16
iret
jecxz
insb
bound
mov
xor
jle
inc
addr16
pop
and
lock
incl
inc
mov
and
test
inc
pop
pop
mov
mov
ljmp
mov
dec
cmp
cmp
insb
test
ljmp
push
xchg
mov
arpl
cld
push
ja
sbb
jno
mov
xchg
mov
jg
and
fisubrs
ljmp
je
inc
pop
mov
mov
decl
mov
sti
jl
stc
pavgb
sarb
sbb
ljmp
pop
sbb
in
gs
push
mov
imul
fsubl
test
outsb
dec
clc
incl
xor
sbb
scas
dec
sub
das
mov
fmuls
mov
mov
loop
and
mov
jmp
adc
push
and
inc
or
xor
or
popa
mov
popa
cmc
mov
and
jmp
mov
les
sti
xor
pop
in
stos
ljmp
fimuls
lods
mov
pop
and
mov
xchg
add
pushl
divl
popa
scas
pop
jne
cmp
imul
call
aas
add
aaa
pop
rclb
popf
dec
add
cmpsl
sbb
push
cwtl
xor
add
pop
movb
lods
xchg
loopne
push
or
and
and
push
push
lds
movsb
lret
dec
push
ljmp
or
push
cmpsb
test
add
test
cli
mov
mov
cmpsb
mov
adc
inc
adc
add
mov
mov
or
cmp
insb
test
and
jae
and
fdivrl
add
bound
push
imul
enter
nop
inc
hlt
fisubl
ljmp
mov
int3
and
nop
xchg
push
sub
insb
xor
sbb
or
jp
addb
mov
add
aam
sbb
add
imul
and
mov
gs
or
xchg
or
lock
mov
cltd
xor
mov
cmp
nop
add
cmp
hlt
loopne
orb
push
dec
adc
cli
jnp
push
mov
in
out
push
mov
loopne
or
or
mov
sbb
or
sbb
dec
mov
bound
xor
cltd
xor
xchg
jbe
xor
mov
sbb
and
push
pop
sbbb
pushf
into
xor
enter
fcmovu
mov
add
xchg
nop
cmp
cmp
stos
dec
dec
cltd
cltd
sbb
pop
sub
xchg
les
add
test
rol
ret
orb
nop
data16
testb
or
push
out
dec
add
cld
movsb
adc
fadds
pop
jb
andl
and
and
or
mov
xchg
xor
in
xor
enter
data16
movl
and
pop
cltd
mov
push
and
sbb
lret
and
jae
fisubl
add
xor
shl
dec
and
adc
push
push
mov
xchg
adc
fdivs
inc
imulb
and
lret
cmp
cwtl
lcall
sub
adcb
cmp
pushf
pop
cltd
jp
in
pusha
xchg
fmuls
sub
jnp
lods
ret
dec
adc
rolb
fwait
xor
cltd
pusha
xor
sub
inc
adc
adc
dec
pop
add
adc
push
call
sbb
bound
insb
pusha
pushw
or
int3
into
xchg
adc
jbe
and
xchg
adc
adc
loope
and
dec
bound
adc
sbb
ss
xorb
enter
push
lods
inc
and
sbb
sbb
out
inc
pusha
data16
shlb
or
add
sub
nop
sbb
cmp
adc
cmp
cmp
push
jo
test
insb
scas
shlb
adc
les
mov
insb
xor
xor
sbb
push
push
adc
or
popf
int3
int3
sbb
bound
dec
cmp
add
hlt
es
push
inc
add
jnp
mov
sbb
sbb
jbe
mov
inc
inc
rclb
mov
adc
or
lds
mov
fsubrl
mov
push
or
or
push
push
insb
icebp
and
jb
pushf
dec
mov
arpl
jp
mov
mov
rcll
loop
add
and
sub
popf
or
lock
ror
lcall
mov
mov
xchg
ficoms
nop
mov
pop
and
subb
push
icebp
lret
mov
and
aas
add
je
outsl
fs
gs
popa
outsb
or
inc
js
je
jb
fwait
mov
outsl
arpl
jo
jg
int3
insb
outsb
adc
insb
cs
jne
test
push
imul
dec
dec
sub
je
insl
in
mov
inc
dec
inc
push
adc
gs
jnp
sti
insb
imul
arpl
addr16
push
cmp
inc
loope
sti
fldcw
ds
push
imul
out
or
jns
aaa
push
xorb
dec
jo
mov
jle
popa
push
xor
in
or
push
imul
inc
je
inc
jns
push
adc
lods
mov
insl
jo
cmpsb
inc
je
lahf
ja
testl
je
pusha
in
shl
imul
jo
mov
ss
push
and
adc
mov
cmp
or
push
jne
jns
loope
xor
push
outsw
dec
pushf
arpl
mov
int3
lock
cs
outsb
xchg
mov
dec
mov
incl
jbe
outsb
insl
ds
sbb
push
popa
imul
and
mov
sub
push
push
enter
jns
int3
sahf
cmpsl
pusha
gs
adc
jns
mov
idiv
gs
xor
insb
mov
mov
ficoms
push
xchg
das
and
jl
shll
push
pop
xchg
mov
or
jbe
xlat
leave
popa
inc
imul
push
test
jne
jg
mov
dec
fiadds
push
adc
sbb
rcrb
sbb
dec
popa
dec
daa
push
jns
je
cmp
ja
gs
gs
outsl
jns
push
ja
mov
dec
push
dec
insl
sarb
test
sub
fidivrl
insb
mov
sbb
imul
xor
gs
inc
and
outsl
inc
inc
push
pushf
jbe
adc
inc
mov
xchg
or
bound
sbb
cmp
jo
in
mov
inc
jo
inc
imul
push
imul
dec
sti
fiadds
int
pop
mov
cmp
jne
push
test
mov
inc
jb
inc
js
dec
dec
jnp
adc
add
outsl
imul
xor
mov
ficoms
add
push
dec
out
push
cmc
inc
pop
scas
rorb
loopne
adc
adc
jp
sbb
js
adc
inc
mov
int
pop
add
or
add
sbb
aam
sbb
and
add
mov
adc
and
int3
mov
rolb
add
adc
mov
inc
xchg
popf
jb,pn
jo
or
lea
add
push
pop
jns
cmp
add
and
pop
testl
adc
add
lcall
repnz
xlat
addb
push
add
dec
outsb
sub
nop
add
xor
shrb
aas
and
add
pop
pop
out
push
pop
add
add
lahf
inc
or
repnz
add
lock
aaa
xchg
add
test
sbb
add
add
mov
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
pusha
pop
add
mov
add
add
pop
add
add
add
add
add
add
cwtl
add
orb
add
add
orb
add
call
add
add
add
orb
add
cmp
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
cmp
add
lock
cmp
add
sbb
cmp
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
xor
add
or
add
xor
add
pop
add
add
addb
add
add
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
sub
add
call
add
add
pop
add
cmp
add
add
add
or
add
fadds
add
add
add
add
add
flds
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
dec
sti
add
mov
add
or
add
add
sar
add
call
add
add
add
add
pop
add
mov
add
or
add
add
add
add
call
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
pop
add
mov
add
or
add
add
cwtl
and
call
add
add
add
add
add
subb
add
or
add
add
add
add
add
ss
call
add
add
add
add
inc
add
mov
add
or
add
add
add
inc
add
mov
add
or
add
add
add
add
mov
add
or
add
add
add
inc
add
mov
add
or
add
add
jo
add
mov
add
or
add
dec
add
call
add
add
add
add
push
add
mov
add
or
add
add
add
add
mov
add
or
add
add
add
push
add
mov
add
or
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
mov
add
or
add
add
add
call
add
add
add
add
add
add
call
add
add
add
add
push
add
nop
test
add
or
add
push
add
pusha
stos
add
mov
add
or
add
add
call
add
add
add
add
add
add
lods
add
mov
add
or
add
scas
add
call
add
add
add
add
push
add
loopne
add
mov
add
or
add
pop
add
push
push
add
or
add
pop
add
rol
add
mov
add
or
add
add
pop
ret
add
sub
add
add
add
add
add
add
add
add
or
add
sub
add
add
add
add
mov
add
add
add
add
pop
add
push
fiaddl
sbb
add
add
add
clc
pop
add
add
add
or
add
or
add
add
mov
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
jae
and
dec
add
add
and
dec
add
popa
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsb
add
ja
popa
add
and
push
add
popa
add
add
add
imul
add
add
pop
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
add
add
jne
arpl
imul
add
add
add
add
outsl
add
jb
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
je
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
imul
add
imul
jae
and
inc
add
jne
outsb
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
imul
