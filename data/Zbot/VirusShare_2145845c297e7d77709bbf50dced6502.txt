add
add
add
sub
mov
mov
pusha
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
add
add
add
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
sub
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
lea
jge
popf
pushl
pop
dec
push
mov
call
jmp
add
add
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
xor
xor
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
call
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
jb
add
enter
fisubl
add
aam
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
int3
and
add
and
add
and
add
add
push
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
add
enter
fisubl
add
aam
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
int3
and
add
and
add
and
add
add
push
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
aad
inc
gs
gs
inc
imul
imul
inc
add
add
popa
jo
jb
add
aam
inc
gs
jb
jbe
push
jns
gs
add
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
je
imul
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
jo
outsb
fs
push
add
gs
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
gs
jb
arpl
jae
gs
imul
gs
insl
gs
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
movb
gs
jne
jb
outsb
je
push
add
lock
imul
jb
je
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
inc
inc
push
push
cs
insb
add
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
inc
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
xor
add
or
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
or
add
addb
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
movsl
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jl
stos
stos
lods
add
cmpsb
push
mov
mov
mov
ret
ret
stos
lret
lret
into
rcl
in
rcl
shl
rcl
shl
int3
int
hlt
mov
enter
mov
mov
stos
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
fcom
xlat
std
xlat
fcomp
fcomp
aad
rcl
sar
into
int3
into
aad
aad
iret
rcl
inc
ret
mov
mov
scas
iret
movsb
mov
xchg
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
sbb
mov
jnp
mov
mov
dec
lret
lret
call
ror
aad
xlat
xlat
fcom
call
aad
dec
int3
int
into
int3
int
aad
aam
int
int3
inc
rol
mov
mov
scas
std
test
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
rcl
fcomp
xlat
call
xlat
call
aam
dec
int3
into
dec
lret
int
int
vshufps
rol
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
push
imul
pop
fs
cmp
sbb
femms
movntps
push
sbb
cmp
aaa
cmp
sub
and
adc
push
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
leave
leave
call
iret
sar
aad
call
aad
rcl
iret
dec
enter
ret
ret
mov
mov
ljmp
movsb
mov
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jge
jle
jg
jle
jo
jno
popa
bound
push
push
push
xchg
cmp
inc
mov
outsl
outsb
outsl
nop
popa
popa
arpl
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
enter
mov
mov
scas
scas
scas
jmp
cltd
call
xchg
xchg
xchg
xchg
xchg
fwait
lcall
ds
ds
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jp
nop
mov
incb
jnp
idivb
jmp
outsl
jo
addr16
jae
jae
jle
jg
jns
jp
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
pushf
popf
sahf
call
xchg
decl
xchg
xchg
mov
mov
cwtl
mov
jp
js
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
test
xchg
addr16
cmp
and
jg
cmp
movsl
movsb
movsl
shrb
lods
lods
sti
lods
stos
lods
stos
lods
lods
test
mov
lcall
xchg
jp
js
jl
jns
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
femms
or
dec
insb
imul
xchg
fwait
lcall
fwait
lcall
mov
incl
mov
cltd
lcall
lods
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jp
lods
test
add
pop
adc
cmpsl
scas
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
popf
popf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
in
xchg
push
jne
prefetchw
add
or
es
push
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
lea
nop
call
lahf
sahf
jmp
stos
pushl
cmpsl
scas
mov
xchg
stos
std
mov
xchg
scas
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cwtl
lcall
mov
call
xchg
xchg
xchg
xchg
xchg
popf
pushf
popf
movsb
movsl
mov
mov
xchg
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
arpl
je
mov
lahf
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
ja
mov
cmpsb
mov
mov
mov
mov
movsl
add
mov
add
pop
adc
mov
ljmp
pushf
decl
xchg
nop
call
xchg
xchg
call
xchg
fwait
cltd
cltd
fwait
popf
sahf
mov
movsb
movsb
std
mov
cwtl
cltd
out
xchg
xchg
mov
cwtl
aad
cltd
lcall
lea
stc
xchg
xchg
std
xchg
jae
fwait
imul
ljmp
cmp
mov
jae
mov
insl
ljmp
pcmpgtd
stos
or
lods
or
pushl
lahf
scas
mov
stos
lods
pushf
movsl
movsb
movsb
and
add
shlb
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
popf
jmp
sahf
pushf
lcall
xchg
xchg
call
cwtl
xchg
call
xchg
cltd
cld
cltd
cltd
sahf
stc
mov
xchg
popf
cld
popf
mov
xchg
imul
xchg
dec
jp
cltd
cmp
push
sahf
pop
addr16
sahf
pop
jmp
arpl
test
ljmp
adc
scas
adc
mov
imul
adc
pushl
ds
lcall
lods
scas
lods
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
pushf
lcall
movsl
mov
jmp
xchg
cwtl
decl
mov
xchg
xchg
xchg
jbe
lcall
xchg
dec
jns
xchg
cmp
call
push
decl
or
pop
call
pop
jmp
adc
lods
sbb
pushl
sbb
outsb
mov
and
and
shlb
mov
xchg
scas
mov
scas
scas
mov
sahf
lahf
lahf
add
add
add
add
mov
lods
add
pop
adc
scas
mov
mov
lcall
mov
test
jmp
test
jmp
lcall
mov
mov
decl
sub
mov
decl
or
incl
add
mov
push
decl
push
call
add
mov
or
mov
jo
mov
jbe
mov
sub
mov
sub
sub
cmp
das
jg
movl
inc
mov
mov
movsl
movsb
movsb
dec
mov
movsl
movsl
add
push
push
adc
test
mov
lahf
fwait
popf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
mov
pop
incl
or
addb
incl
add
addb
decl
add
add
xchg
add
fwait
add
lahf
add
movsl
add
ljmp
sub
inc
ss
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
popf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
push
decl
or
xchg
push
decl
add
add
xchg
add
pushf
add
add
add
lods
add
jno
ret
dec
inc
mov
int
call
inc
mov
roll
fmuls
call
dec
xchg
fisttpl
fisttpl
ficoml
call
xchg
std
mov
mov
mov
lahf
mov
add
inc
dec
adc
jp
mov
test
sahf
ljmp
mov
pushl
mov
pushl
mov
mov
movsb
mov
decl
sbb
nop
sbb
lea
decl
pop
push
decl
add
xchg
add
pushf
add
mov
add
stos
add
mov
arpl
mov
dec
mov
aam
xchg
fcoms
ficoml
fistl
fistps
ficoms
jmp
pop
lahf
jmp
pop
mov
call
test
mov
mov
cmpsb
cmpsb
test
lahf
sahf
lahf
or
xchg
xchg
xchg
add
adc
ja
lahf
fwait
popf
jmp
lahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
movsb
call
arpl
xchg
and
xchg
and
call
sbb
or
call
add
lcall
jmp
add
mov
gs
mov
xor
fisubs
fisubs
jmp
data16
jmp
cmpsl
jmp
gs
call
push
test
dec
mov
mov
mov
lahf
sahf
add
inc
inc
adc
jb
cltd
xchg
lcall
fwait
lahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
sbb
pop
call
pop
jmp
add
stos
add
mov
pushw
movq
rolb
fsubrl
jmp
outsb
lods
jmp
outsl
stos
jmp
jno
call
jae
in
je
in
je
out
jbe
out
jb
jmp
mov
mov
cmpsb
test
lahf
lahf
mov
add
jge
cmp
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
mov
cmp
xor
lcall
lcall
add
add
add
mov
arpl
mov
data16
mov
sbb
ficoml
jmp
js
ljmp
in
xorb
lock
xacquire
push
cmpl
inc
mov
test
daa
sahf
lahf
sahf
add
add
add
add
xor
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
mov
jmp
cmp
movsb
inc
jge
movsb
inc
jg
movsl
ss
fwait
sbb
xchg
add
pushf
add
mov
add
scas
add
add
add
ret
add
call
daa
cmp
jmp
mov
icebp
mov
push
xchg
sar
nop
ret
push
xchg
xchg
ret
push
xchg
stc
ret
in
nop
mov
inc
clc
lods
stos
stos
mov
sahf
popf
xor
popf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
call
mov
mov
mov
mov
inc
ret
mov
jl
lcall
cmp
mov
adc
lcall
ljmp
add
mov
fs
mov
add
movl
mov
out
xchg
lcall
repz
push
lcall
clc
pushf
lret
cli
lahf
int3
cli
popf
int
cld
lcall
fidivrs
cli
mov
mov
mov
popl
fwait
cltd
cltd
add
add
add
cs
or
cmp
push
dec
dec
jecxz
pusha
decl
mov
mov
mov
sar
ret
inc
leave
inc
mov
mov
ljmp
xchg
movsl
sub
fwait
or
add
movsl
add
add
mov
arpl
mov
add
leave
add
rorl
filds
out
lea
push
movsb
int3
push
cmpsb
into
clc
test
cli
test
sar
cld
test
test
sar
cld
cmpsl
sar
negb
int3
dec
leave
int
mov
mov
sahf
mov
xchg
add
fwait
lcall
xor
or
inc
bound
push
xlat
jae
jb
mov
rol
rol
mov
ret
inc
enter
rol
pushl
push
test
scas
push
mov
scas
dec
test
mov
add
mov
add
mov
fs
mov
add
int3
add
xlat
add
loopne
jl
out
pop
cmpsb
push
popf
lret
cli
lods
sar
cld
mov
sti
mov
cld
scas
sar
cld
mov
cld
mov
std
mov
std
mov
pushl
sar
mulb
dec
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsl
outsb
outsl
mov
fcom
fcom
jmp
fcom
not
rcl
std
int3
int3
into
dec
lret
lret
dec
lret
mov
lods
jmp
push
mov
stos
jge,pt
sahf
push
jmp
add
mov
fs
mov
add
rolb
outsl
call
add
add
pop
xchg
cmc
jb
cld
scas
sar
mov
mov
cld
mov
xlat
cld
mov
xlat
std
rcr
std
mov
lret
jmp
mov
call
leave
int
mov
mov
xchg
or
add
add
xor
add
add
pop
or
enter
jecxz
pop
out
jmp
test
in
leave
fucom
fucom
fcmovu
fsqrt
aad
xlat
std
int
sar
mov
imul
jmp
add
mov
arpl
mov
add
lret
call
add
faddl
jbe
in
js
out
xor
cli
mov
inc
std
inc
fdivrp
inc
loopne
inc
dec
dec
fdivrp
dec
dec
cli
mov
enter
into
mov
mov
xchg
adc
add
add
incl
incl
incl
repz
hlt
or
out
in
pop
in
in
in
sub
out
out
dec
call
call
call
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsl
adc
jmp
add
mov
fs
mov
add
int3
add
fadds
jae
filds
ja
ljmp
cli
mov
loop
std
lret
jecxz
std
into
in
dec
in
dec
jecxz
dec
loope
dec
loop
dec
jecxz
std
iret
in
shl
call
jecxz
cld
in
mov
fdivr
ret
ret
out
cmpsb
test
mov
xchg
xchg
add
add
add
std
add
std
add
idiv
add
repz
hlt
repnz
in
lock
out
repnz
out
in
pop
loopne
loopne
les
sti
sahf
and
pop
jmp
add
mov
fs
mov
add
roll
jb
fiaddl
je
jecxz
jp
jmp
jge
negl
cld
mov
shl
std
shl
std
shr
shr
shl
call
out
jmp
std
fucomi
fucomi
std
shl
push
ret
in
lret
leave
lret
stos
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cli
add
std
testl
hlt
cmc
cmc
or
aad
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
call
add
faddl
jne
out
jns
out
sbb
stc
je
sti
fsubr
fucomi
fucomi
fldl2t
fldpi
std
fsubr
std
fsubr
fucomp
loopne
fucomip
jmp
jmp
cld
aam
push
ret
out
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loopne
add
leave
sbb
lods
jnp
repnz
ljmp
add
mov
add
int3
add
aad
jb
filds
jae
call
sub
shl
fdivp
std
fucomi
std
fldl2e
fldl2t
xlat
out
cld
aad
std
aam
cli
iret
loope
cld
shl
push
into
test
aad
out
mov
xlat
xlat
fdivr
mov
mov
fwait
cltd
cltd
cmp
lcall
mov
mov
add
mov
subb
insb
lcall
add
mov
mov
add
rolb
outsl
call
add
add
jmp
ss
sti
xchg
sti
lret
cli
lret
sti
clc
mov
aam
hlt
mov
iret
push
mov
into
jmp
mov
sar
call
shl
call
in
mov
mov
xchg
add
add
add
lret
add
sarb
mov
add
test
add
mov
add
into
or
rorb
je
ficoml
ja
loop
cmp
dec
xchg
jmp
scas
int3
call
scas
leave
std
loop
ret
cld
fbstp
mov
lret
vpmulhw
leave
into
into
xlat
shl
xlat
fcmovnb
out
loope
in
in
test
in
out
popf
call
lret
leave
push
stos
lods
lods
adc
cmpsl
test
add
rolb
sahf
stos
aam
dec
jg
sahf
sbb
test
push
scas
and
mov
jns
mov
inc
test
ret
push
mov
lret
test
mov
out
mov
enter
enter
lret
rcl
int
aam
shll
rcl
jg
fcmovu
jb
fnstsw
gs
jecxz
call
out
jmp
icebp
div
sub
div
and
repnz
fcmovnu
or
mov
int3
add
add
add
mov
roll
mov
stos
test
test
sbbb
mov
cmpsl
sarb
stos
mov
ret
cmpsl
enter
leave
rol
int
lret
jp
int3
into
addr16
ror
push
rcl
rorb
xlat
xlat
inc
rcl
aad
aam
fsubs
fcomp
ficompl
fcoml
fsubp
loope
in
out
ljmp
cld
testl
std
incl
std
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandb
mov
daa
int
shlb
iret
aam
sbb
aam
adc
aam
or
fcom
push
rcr
add
add
add
in
add
jmp
add
fcom
add
std
incl
mov
mov
add
rol
ret
lds
rol
sub
mov
mov
push
ret
or
leave
enter
movl
leave
aad
add
aam
rcl
aad
aam
aam
aad
add
fsub
add
aad
add
loope
add
fnstsw
add
out
add
repnz
std
add
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
ret
mov
mov
mov
stos
test
test
pop
add
add
add
add
add
add
scas
scas
mov
mov
mov
aam
ror
jmp
aad
cmc
aam
sar
ror
iret
cli
int3
int3
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
rol
leave
leave
enter
iret
aad
call
xlat
xlat
call
iret
iret
dec
into
iret
dec
int3
lret
inc
sarb
lods
lods
stos
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jae
jne
gs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
ret
dec
lret
lret
rcl
call
rcl
dec
int3
lret
inc
sarb
ljmp
sahf
popf
cwtl
xchg
xchg
jmp
jno
xchg
push
push
adc
xor
add
add
add
add
addl
test
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
ret
mov
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
fwait
lcall
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
fwait
xchg
cltd
fcoml
addb
jl
jl
jp
jp
jns
jns
jns
jns
je
je
push
push
push
cmp
je
pushf
sahf
pushf
mov
scas
lods
repz
scas
lods
sti
lods
lods
scas
std
test
popf
popf
call
test
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
movsl
cltd
jae
jae
adc
adc
add
add
add
add
insl
outsb
outsb
pop
xchg
mov
mov
test
std
nop
mov
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
mov
xchg
cwtl
cwtl
cwtl
repnz
xchg
xchg
std
lea
call
popf
lahf
ljmp
scas
std
mov
mov
stc
mov
mov
movsl
movsb
cmpsl
pop
jg
jg
pusha
pop
pusha
or
lods
mov
movsl
mov
mov
mov
call
sahf
mov
negl
jg
stos
push
push
push
jo
pop
push
outsl
insl
outsb
outsl
xchg
subl
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
jnp
mov
lods
stos
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
movsb
test
call
cwtl
cwtl
call
cltd
fwait
fwait
popf
pushf
fwait
lahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
lea
out
xchg
ja
notb
cmp
dec
jl
movsl
inc
jns
lods
aaa
ja
mov
jb
scas
push
insl
ljmp
sbb
mov
scas
mov
mov
scas
jle
mov
add
add
add
popa
pop
pusha
or
mov
lcall
lahf
popf
jmp
mov
xchg
decl
orl
xchg
jae
cld
xchg
pop
cmp
dec
jp
nop
cmp
xchg
daa
call
lcall
push
pusha
ljmp
sbb
sbb
pushl
pop
jae
mov
pop
mov
scas
scas
xchg
sahf
lahf
popf
adc
add
add
popa
popa
popa
or
mov
stos
movsb
cmpsb
jmp
test
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
imul
sub
pop
pusha
incl
or
mov
push
decl
add
pushf
add
or
jae
mov
das
jge
ret
jle,pn
leave
xor
lret
xor
xchg
inc
test
divl
test
add
add
add
pusha
popa
pop
or
movsb
stos
in
mov
cmpsl
pushl
mov
pushl
xchg
lahf
decl
adc
mov
push
incl
push
push
decl
add
xchg
add
lahf
add
add
mov
insl
inc
aaa
cmp
inc
mov
rolb
call
inc
call
inc
xchg
fimull
call
arpl
stc
mov
mov
movsl
mov
incb
add
add
pusha
pusha
pop
or
mov
ljmp
mov
pushl
mov
stos
lcall
pop
popa
call
adc
pop
decl
add
lahf
add
add
scas
add
mov
dec
nop
fstps
fcompl
ficomps
loopne
mov
jmp
insl
cmpsl
dec
test
cld
mov
mov
cmpsl
lods
cmpsb
xor
add
add
dec
pop
jge
jl
fwait
xchg
lcall
lods
mov
mov
mov
mov
mov
mov
sahf
fs
xchg
cs
lcall
and
xchg
adc
xchg
add
sahf
add
cmpsb
add
scas
add
mov
xor
jecxz
test
out
lods
call
jo
in
jno
call
cmpsl
mov
shrl
addl
pop
outsl
insl
imul
test
fwait
lcall
mov
mov
mov
jmp
je
mov
sub
xchg
or
lcall
ljmp
add
ret
call
inc
xchg
jmp
jns
jmp
cmpl
hlt
xchg
out
mov
mov
cmpsl
test
lcall
add
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
mov
xchg
jmp
sub
lcall
ljmp
add
mov
adc
mov
push
xchg
ret
push
cwtl
push
cwtl
enter
enter
lret
push
cwtl
jmp
lods
vcmpss
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
mov
cmpsl
jmp
dec
cmp
and
lahf
add
pop
pushl
push
fsubs
cmp
mulb
sar
stc
test
sti
test
iret
std
lods
sar
cli
test
jmp
mov
inc
rol
test
popf
sahf
or
add
add
push
push
dec
aaa
je
jae
stos
stos
stos
ror
int3
into
out
into
lret
cmc
leave
lret
lret
lret
lret
leave
mov
pusha
ljmp
adc
test
pop
pushl
add
int
outsl
fiaddl
je
jmp
xchg
mov
std
mov
mov
fdivr
cld
mov
fcos
std
mov
lret
rol
scas
scas
scas
mov
add
add
add
add
or
aam
dec
loope
fistps
out
shll
test
push
pusha
ljmp
add
lret
call
add
loop
jnp
repnz
mov
sti
loopne
std
loope
std
inc
fdivrp
dec
dec
loopne
sti
out
mov
lret
divb
pushf
popf
sbb
add
add
incb
std
incb
jmp
out
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
pushl
add
into
add
fldl
jne
ljmp
sti
ret
cld
shl
shl
shl
call
in
std
call
cld
aam
push
enter
int
stc
mov
mov
add
std
std
std
add
std
add
std
incb
aam
aad
mov
pop
mov
popf
or
pusha
pushl
add
rolb
jo
loopne
jne
in
pop
mov
stc
mov
shl
std
std
fldl2t
cld
fsub
std
xlat
out
cld
fsubr
cld
aad
push
enter
iret
sti
mov
sahf
popf
das
add
add
into
int3
into
or
fs
mov
add
mov
add
add
loope
js
in
das
xchg
push
fwait
enter
loop
cli
lret
test
hlt
ret
aad
icebp
rcl
out
sar
in
sar
out
aad
jmp
aam
in
fucomp
mov
test
add
add
add
aad
push
mov
jae
or
imul
pop
jb
lret
and
sub
lcall
mov
out
jecxz
lret
mov
loope
mov
lret
iret
mov
in
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
xchg
mov
fidivrl
andb
into
lahf
mov
shll
enter
int3
insl
aad
int
rcl
rorl
cmp
loopne
das
in
fisubs
loop
lock
in
in
or
incl
std
std
add
mov
outsb
scas
mov
lods
data16
mov
mov
mov
shrb
mov
pop
mov
rcl
or
or
int
add
incl
incb
cltd
lcall
vshufps
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
enter
enter
mov
ret
mov
mov
scas
insb
lods
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
aad
rcl
sar
iret
into
into
std
mov
stc
mov
mov
roll
sbb
add
add
add
add
add
add
add
add
jno
jb
pushw
inc
dec
dec
das
cs
inc
and
add
add
mov
mov
cmpl
ret
dec
int
call
aam
dec
int
inc
mov
ljmp
sahf
mov
mov
add
add
add
add
jae
jne
test
adc
bound
mov
push
insl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
xchg
lds
jb
daa
daa
es
add
add
add
add
jb
je
pushf
xchg
fwait
mov
test
clc
xchg
test
addb
push
push
push
inc
mov
pushf
into
movsb
movsb
movsb
in
lahf
lahf
lahf
sti
xchg
xchg
xchg
decb
lcall
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
stos
mov
mov
mov
cld
sahf
popf
popf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
mov
lcall
jb
mov
mov
stos
scas
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
lcall
xchg
lcall
xchg
mov
loope
je
out
nop
fs
fwait
inc
ja
cmpsl
cmp
lods
sub
jno
mov
outsb
pushl
sahf
lods
lock
mov
imul
int
add
add
test
pop
scas
movsl
stos
test
popf
pushf
popf
jmp
mov
xchg
decl
push
js
popl
decb
push
arpl
xchg
adc
xchg
or
or
mov
outsl
pushl
and
jnp
lds
test
rcrl
subl
jae
push
mov
movsb
test
pushl
scas
mov
sahf
xchg
decl
or
mov
push
decl
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
inc
mov
aam
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
cwtl
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
pop
arpl
pop
pusha
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
data16
call
fwait
mov
mov
mov
cmpsl
test
pop
add
add
bound
adc
pushf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
xor
jmp
jo
jmp
jns
jmp
mov
out
jle
push
jle
ficompl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
arpl
jmp
add
test
pop
pushl
or
fisttpl
in
mov
notb
enter
enter
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
cld
rol
inc
inc
mov
xchg
ljmp
pop
push
pushl
imul
adc
ljmp
clc
stos
sar
cli
lods
sar
sti
scas
sar
lods
sar
ljmp
fldenv
std
incb
xor
xor
mov
mov
rcl
aam
aad
aam
rcl
shr
leave
lret
mov
mov
jmp
add
ret
call
add
out
xchg
testl
cld
rcr
inc
inc
out
mov
ret
in
test
jg
add
add
stos
stos
stos
add
in
in
or
jmp
out
outsb
fcomp
movsb
daa
insl
ljmp
add
int3
add
fldl
cld
scas
aad
dec
in
dec
in
call
in
std
aam
std
shl
push
fcos
aad
int3
in
scas
scas
lods
popa
addl
add
std
add
std
push
int
shrl
lahf
sbb
lods
add
mov
add
jecxz
jp
hlt
push
cmpsb
dec
loopne
cld
out
cld
aam
aad
sti
aad
stc
shl
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
scas
add
mov
or
ficomps
cmp
out
mov
shl
jmp
mov
shl
in
rcl
ljmp
scas
push
lcall
add
rol
mov
lods
xchg
and
push
mov
shlb
int3
ja
mov
xlat
mov
int3
adc
int3
outsl
xlat
int3
into
pop
fst
aad
in
fistpll
out
call
sbb
mov
mov
cmp
mov
scas
push
mov
mov
cs
mov
lret
sbb
fstp
bswap
into
int
aam
push
incb
jg
addl
stos
incb
mov
incb
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
pushf
daa
jo
and
loop
sbb
cmpsl
cmp
xor
imul
sub
stc
inc
xor
inc
call
test
push
jp
dec
jecxz
call
sub
jge
push
rorl
movsb
xor
cmpsb
xor
lea
dec
ret
rcrl
and
adc
sub
call
clc
lret
mov
shrb
xchg
rcrl
setb
dec
out
pop
mov
cmpsb
adc
mov
stos
dec
adc
fisubs
jg
adc
mov
in
in
mov
xchg
fs
cmp
adc
movsl
sbb
dec
clc
pop
aam
push
mov
cmp
mov
adc
aas
jp
pop
inc
pop
inc
push
outsb
outsb
push
out
aas
into
icebp
popa
inc
or
loop
ja
dec
and
add
cmpsb
out
mov
jg
nop
mov
dec
ret
repz
leave
fmull
in
iret
mov
mov
test
sti
pusha
out
sbb
jnp
fwait
mov
stc
std
jge
mov
rorl
data16
mov
or
jno
cwtl
cmp
xchg
dec
or
js
sub
jae
sbb
int3
cltd
hlt
fs
or
mov
and
adc
jns
pop
std
jns
into
push
lock
add
lret
outsb
or
jecxz
movsl
mov
icebp
mov
fiadds
xchg
add
fildl
push
movl
sbb
sub
xchg
cmp
mov
ds
push
jae
cmp
mov
jnp
add
in
jnp
into
outsl
icebp
repz
fnstsw
out
lock
imul
adc
ja
or
mov
add
dec
push
icebp
pop
stos
xlat
out
jo
mov
xor
pop
out
das
sbb
xor
adc
push
mov
scas
addr16
aas
push
mov
popf
movsb
bswap
push
lret
jmp
xchg
push
jo
movsb
cmpl
negl
xor
inc
jl
jle
dec
sbb
cmp
mov
push
add
rclb
mov
sub
movsl
push
mov
mov
jecxz
mov
mov
es
cmp
add
push
jnp
addr16
insl
arpl
pop
or
std
rclb
stos
sub
aam
fwait
adc
mov
test
rolb
je
aad
shlb
push
jbe
gs
mov
ss
mov
and
inc
cld
pop
push
adc
mov
cmp
cmpsb
lret
and
xchg
inc
mov
mov
dec
and
cmp
sub
inc
jmp
xchg
lcall
sub
xor
mov
push
mov
mov
jl
push
int
or
popw
ret
add
or
cmp
aam
and
dec
test
xor
stc
adc
add
lds
cmp
dec
cmpsl
jl
jecxz
cwtl
inc
push
cs
sub
iret
fnstsw
cmc
fistpll
shrb
xorl
xlat
sbb
xchg
out
cmpsb
pop
cmc
xor
jmp
shl
test
loopne
sub
and
mov
inc
arpl
repz
fldl
mov
dec
dec
lds
pop
pushf
test
jb
sub
out
jno
aam
out
jl
ss
jmp
pop
out
jbe
cmpsb
or
movsl
jl
xorl
fs
xchg
mov
push
cmp
pop
insb
negb
int
jge
cmpb
aad
mov
dec
lahf
movsl
inc
test
xchg
jno
int3
movsb
xchg
jmp
pop
arpl
bound
jbe
push
adc
xlat
pop
lea
xchg
aaa
loopne
fstpt
jno
addl
dec
test
sbb
cmc
iret
negb
movsb
push
sbb
cmp
add
rcrl
rcl
adc
add
inc
jnp
sub
jg
push
test
push
xchg
jecxz
shl
jmp
push
sbb
lahf
test
mov
cmp
rclb
sbb
or
pop
sahf
inc
push
push
push
inc
imul
mov
out
shlb
rorl
pop
cmpsb
daa
push
aas
out
jb
in
sbb
mov
cmp
push
aaa
sub
push
pop
sbbl
out
lahf
test
jg
xor
in
mov
cmpsb
sbb
push
cltd
adcb
addr16
cli
sbb
hlt
mov
les
lock
cmpsb
cmp
outsl
and
rolb
outsb
aas
lock
out
ret
mov
adc
pop
ret
xchg
add
cwtl
dec
daa
xchg
es
rolb
jp
jecxz
call
xorl
loop
push
xor
fcompl
jg
push
push
jmp
out
inc
popf
out
mov
add
adc
push
mov
pop
lea
lcall
shlb
cmpl
mov
jbe
mulb
inc
fists
lcall
arpl
out
inc
lahf
pop
test
and
adcl
sbb
pop
repnz
lods
adc
addl
push
dec
in
cmc
testl
jns
xchg
sub
xor
cmp
push
repnz
test
sbb
and
imulb
inc
stc
jns
iret
jnp
jno
push
xchg
jbe
test
lds
nop
xor
sahf
inc
into
es
inc
gs
push
fnstcw
jmp
pop
js
fs
push
adc
aaa
gs
or
pop
sahf
movsb
jb
mov
test
dec
outsl
fwait
push
cld
cwtl
mov
pop
jle
pop
test
addr16
js
jecxz
inc
pop
jmp
movsl
mov
aaa
loopne
into
lahf
fldt
jnp
in
jmp
mov
aas
jl
mov
rolb
lret
cwtl
lret
pop
mov
popa
in
cmc
add
lds
test
xor
push
rorl
mov
fsubrs
jno
in
aad
shll
cs
sahf
popf
adc
hlt
daa
sahf
add
adc
sbb
aaa
outsb
add
sbb
clc
sahf
fcmovnbe
outsb
add
cld
and
and
cmp
jle
mov
into
nop
or
ret
cwtl
push
ficoms
xor
mov
rcr
mov
mov
lods
in
aas
inc
or
cli
pop
mov
dec
in
push
add
dec
in
pop
loope
clc
outsl
lods
cmp
inc
in
push
xor
push
lahf
push
add
push
fdivs
xchg
jae
pop
pop
out
inc
dec
sub
xor
test
and
ja
in
out
add
push
pop
and
mov
iret
push
ss
sbb
pop
mov
inc
es
or
ja
pushf
xchg
mov
jo
push
nop
sub
cmpsb
lods
jle
cmpsl
cmpsl
cmp
lahf
mov
dec
pop
mov
lret
cmpsl
xor
lock
push
sbb
andb
push
jb
push
fisubrs
aaa
addr16
jb
nop
into
shlb
imul
cmpsl
enter
pop
out
sarb
cmp
ds
cmp
pop
dec
in
mov
or
mov
add
add
sub
add
dec
ficoml
aas
mov
mov
pop
fmull
jae
std
out
das
mov
add
xor
and
hlt
inc
xlat
and
inc
pop
cmc
ja
jbe
xor
xchg
sub
lcall
cltd
in
jp
push
mov
cwtl
das
jno
clc
popl
mov
les
lods
xchg
in
push
mov
jno
insl
icebp
mov
rorl
repnz
lods
adc
les
add
pop
ja,pn
shrb
leave
pop
lock
mov
js
dec
hlt
pop
ja
sarl
pop
jecxz
pop
dec
ret
rep
mov
inc
ret
hlt
movsl
cmp
adc
dec
dec
test
js
shrl
lret
sti
mov
ja
dec
repz
es
es
inc
pop
lcall
stos
in
mov
pop
int
lods
arpl
cmp
xor
jno
push
call
fldcw
outsl
push
pop
cli
push
lods
sub
scas
dec
mov
jle
stos
inc
add
lret
hlt
lock
jbe
jg
inc
push
movsl
js
push
popf
cli
cltd
sub
lret
mov
sbb
and
mov
pusha
jno
xchg
lea
dec
mov
iret
je
jecxz
inc
and
in
xchg
pop
push
insl
or
vmovaps
je
pop
movsb
sub
pop
inc
out
jnp
push
fimuls
mov
fcomps
rcr
outsl
push
call
insb
shrl
std
xchg
mov
loopne
mov
push
cmp
arpl
push
out
mov
jmp
or
bound
sahf
xchg
sub
mov
scas
push
inc
iret
iret
add
stc
mov
in
test
pop
fnsave
mov
xor
sub
stc
push
mov
fisttps
fidivl
insb
data16
popf
idiv
sbb
dec
push
lods
jnp
mov
lret
int
rcrl
popa
clc
pop
lret
cld
inc
sbbb
sbb
mov
lret
push
out
xchg
sbb
call
push
pop
mulb
jno
in
fidivs
or
gs
jecxz
movsl
cmp
add
dec
jbe
fwait
xor
cwtl
and
or
lods
sub
fwait
mull
push
cltd
push
xchg
push
arpl
push
dec
push
lods
jae
push
movsl
data16
stc
dec
pop
cmc
jle
test
mov
mov
stc
jbe
push
pop
outsl
push
xchg
sub
push
mov
push
xor
xchg
mov
push
repnz
sbb
test
push
push
jmp
xorb
sarl
inc
and
xor
dec
jecxz
push
push
call
cmp
mov
xchg
jns
xlat
push
inc
xlat
pop
mov
jae
inc
push
movsl
jle
inc
fimuls
mov
into
and
lea
sbb
hlt
inc
push
cmp
mov
and
push
shrb
jns
lcall
clc
std
daa
into
gs
push
or
jns
push
in
and
lea
cmpsl
ds
hlt
mov
adc
lcall
sbb
insb
push
sub
call
shll
loope
sub
push
mov
push
and
ret
inc
repz
and
dec
dec
push
popf
je
sti
xchg
pop
sub
jle
fldt
push
movsl
push
mov
mull
add
mov
subl
dec
or
pop
pop
test
aaa
subl
adc
mov
in
adc
mov
cmpsl
aad
sbb
in
inc
cmp
js
pop
pushf
xor
sbb
cs
fistps
push
jmp
je
push
pusha
testl
sbb
or
push
out
sub
pop
fwait
aaa
repnz
mov
cs
mov
nop
dec
adc
adc
adc
push
dec
popa
clc
mov
movsb
fs
inc
cmp
cmp
cmpsl
pop
mov
repz
jb
sarl
push
out
scas
rol
pop
adc
inc
fld
cmpsb
cmp
aam
lock
cmc
or
icebp
pop
sub
xlat
cltd
fidivl
lret
mov
sbb
mov
out
push
or
out
lds
push
jmp
rorb
or
inc
xchg
adcb
or
sarb
pop
adc
lock
in
or
mov
add
mov
call
or
int
mov
out
rcr
jne
adc
pop
adcl
dec
push
loopne
popa
and
cmpsb
cmp
pushf
lret
pop
mov
add
push
cmp
repnz
fs
cwtl
lock
mov
or
je
inc
fsts
cmp
insl
sub
lea
mov
xchg
sub
dec
les
mov
call
test
inc
cmp
jne
imul
push
jb
inc
sbb
and
sahf
xor
xor
jb
inc
push
jb
test
mov
or
pusha
jp
inc
insb
add
stc
decb
jle
cmp
fs
nop
fnstsw
mov
push
and
sbbb
inc
es
xchg
mov
ret
jo
fs
pop
pushf
imul
pop
ds
xchg
imul
lret
and
pop
and
xchg
mov
in
push
in
and
inc
das
aaa
push
mov
dec
sub
push
imul
daa
jle
cmpsl
outsl
pop
lock
mov
dec
into
and
cmpsb
xchg
jo
movsb
movsl
mov
fsubs
inc
testl
test
dec
pop
mov
imul
pop
sbb
pop
cmc
outsl
jnp
xchg
or
fldenv
cmc
mov
mov
cmp
cmp
pusha
cmp
xor
and
add
add
bound
lds
jp
test
cmp
xchg
jecxz
test
cmc
sbb
ret
cmp
jo
int
jl
hlt
xlat
outsb
sub
iret
fnstenv
cmc
sub
out
ret
pop
loop
sbbl
fcomps
pop
imulb
dec
loope
jp
lods
inc
xor
dec
fists
xor
inc
hlt
cmpsb
cmp
push
lret
or
scas
push
jmp
cld
jb
and
push
data16
ja
inc
fldenv
adc
pop
divb
fidivl
add
in
shrl
sbb
sarb
imul
fwait
mov
mov
js
arpl
sbb
mov
cmpsl
push
inc
sub
xor
push
stos
inc
dec
mov
imul
fsts
xor
adc
dec
and
jnp
in
jne
sbb
adc
inc
cmp
aaa
popf
cltd
xor
pop
pop
repnz
gs
and
push
outsl
and
outsb
xor
rcrl
nop
daa
xchg
lret
cmpsl
add
and
insl
cmp
pop
aad
push
add
push
jno
nop
arpl
je
jne
pop
loopne
ljmp
stos
es
ds
test
roll
lcall
xchg
aad
mov
in
out
adc
jp
xor
mov
dec
daa
mov
lahf
adc
in
pop
rclb
sbb
in
cmp
loopne
add
jmp
or
jl
js
mov
lcall
lcall
mov
mov
lahf
in
add
leave
pusha
fidivl
in
lods
sti
fbstp
inc
cmp
jp
icebp
mov
mov
sub
and
lret
test
in
lahf
test
fimull
cmpsb
lret
imul
dec
fidivrs
scas
lock
addr16
sub
mov
xor
cmpsl
sbb
pop
out
stos
jns
or
xor
mov
rolb
mov
cmp
aad
jg
add
gs
mov
xor
jg
daa
scas
sub
popa
jns
stc
nop
das
adc
rolb
fsubrs
bound
push
add
xor
ffree
pop
or
movsl
inc
fcmovbe
sbb
dec
mull
xor
addr16
test
lret
sub
xor
out
or
mov
adc
pop
cmp
mov
inc
cs
cmpsb
sub
andb
jns
xor
cmp
jmp
dec
repnz
jg
mov
gs
mov
stos
ret
jno
jno
addr16
das
pop
daa
fmuls
push
mov
cs
cmp
mov
add
xchg
sti
mov
inc
scas
push
or
data16
sbbl
mov
mov
mov
test
sbb
icebp
imul
inc
inc
je
repz
pushf
mov
adc
jns
sub
jp
gs
ds
sub
popa
cltd
xor
push
fs
mov
psubw
push
ljmp
sbb
cwtl
adc
mov
dec
stc
pop
inc
adc
adc
adc
lret
mov
fisttps
enter
cli
pop
shrb
addr16
jecxz
jbe
and
xchg
xchg
sarl
aam
sub
add
adc
add
sub
movsl
inc
lret
pop
xor
jns
lret
add
push
sub
inc
in
xor
push
popf
xchg
jge
mov
out
fwait
aaa
xorl
lds
aas
lods
sub
mov
jae
push
xchg
inc
subl
xlat
subl
cmp
dec
push
addr16
cltd
popa
sbb
and
mov
les
repz
push
sub
inc
js
adc
lods
cwtl
push
mov
fstp
je
repz
inc
repz
testl
mov
into
push
icebp
xor
in
ret
fimuls
sbb
or
pushl
leave
cmp
pop
mov
fimuls
jmp
cwtl
aad
imul
fistpll
scas
int
cmp
mov
fldlg2
orl
out
nop
sub
mov
loop
sub
xor
inc
fldl
push
inc
flds
test
neg
je
sbb
enter
dec
pushf
xor
mov
push
shrb
je
repz
ret
hlt
inc
testb
cltd
adc
lret
iret
cwtl
jmp
leave
sbb
push
in
jmp
push
out
or
or
outsb
add
xchg
loop
and
mov
in
stos
in
sti
cmp
pop
mulb
cs
sbb
pop
ja
push
jl
sub
adc
cmp
add
dec
jmp
dec
out
push
imul
dec
xchg
inc
push
int
addr16
int3
push
xor
push
push
aas
fldl
jbe
inc
inc
dec
out
xor
xchg
xor
shrb
add
test
ja
inc
mov
inc
push
lret
stos
rol
xchg
int
cmpsl
dec
in
cmpsl
push
jmp
stc
imul
cli
jb
sub
mov
jg
nop
daa
jg
cmpsl
shlb
lds
int3
arpl
inc
jecxz
jns
ljmp
lcall
sbb
aas
cmp
pop
bnd
stc
ret
adc
aaa
xchg
imul
mov
mov
fst
push
jno
xor
mov
clc
arpl
lods
mov
sub
mov
popf
jns
pop
shrb
mov
xchg
mov
ficomps
mov
add
cmpsb
xor
nop
daa
bound
inc
test
adcb
fildl
or
mov
jle
inc
aaa
into
jbe
loop
mov
clc
vfrczps
add
xor
sbb
pop
cmc
push
aas
iret
data16
push
out
test
int3
cmc
mov
in
adc
cmp
movsl
mov
in
repnz
dec
out
fstpl
fmuls
or
mov
test
enter
sub
outsl
cmp
ja
xchg
fsubr
sbb
stos
add
mov
into
xchg
lds
loope
xchg
movsb
clc
lret
mov
lea
adc
je
dec
mov
jg
push
adc
mov
repnz
dec
hlt
sub
mov
aas
cmpsl
mov
jnp
sbb
cmp
pop
sbb
cmp
enter
mov
test
sub
incl
or
lret
aas
push
lret
testb
sub
sbb
mov
fistpll
js
outsl
mov
aad
insb
adc
sub
lds
aaa
add
sbb
pop
pop
roll
call
mov
sub
lret
xor
shrb
iret
out
fdivrs
push
or
mov
test
jl
and
mov
lock
or
ret
pop
lock
xchg
dec
loopne
jnp
adc
cwtl
xor
inc
mov
jne
mov
aaa
into
js
push
in
mov
addb
fidivs
and
xchg
sarb
shrb
dec
filds
inc
cmp
cwtl
sub
pop
mov
test
mov
push
call
add
jb
mov
ret
cmc
jns
jle
pop
mov
dec
lret
sti
imul
lods
dec
mov
aas
lahf
nopl
icebp
popa
cmp
xchg
adc
inc
mov
out
adc
add
dec
mov
cmp
dec
dec
pop
hlt
jnp
popa
clc
sahf
push
push
jmp
adc
pop
hlt
jg
or
mov
scas
push
call
lods
rclb
stos
add
cmp
mov
std
jmp
pop
dec
lea
cld
dec
lds
pop
scas
and
mov
mov
popa
inc
pop
mov
inc
mov
mov
xor
iret
movsb
xor
sbb
cmp
jbe
cmp
mov
test
mov
sub
cmpsb
xor
in
dec
push
shlb
incl
lock
push
in
adcb
call
xor
lock
xchg
stc
outsb
scas
inc
pusha
gs
push
int
sbb
mov
pop
cmc
mov
std
xchg
jecxz
stc
clc
add
pop
sbb
dec
test
jns
in
pop
ds
faddp
pop
push
popf
scas
in
lret
adc
aaa
jo
inc
inc
dec
out
push
sbb
add
mov
jle
in
dec
mov
les
clc
ret
inc
mov
repz
shll
xor
call
js
lock
lds
in
mov
loopne
add
fnstsw
and
fwait
mov
imul
loopne
adc
sbb
sub
xchg
xlat
mov
jl
lods
pop
xor
pop
jecxz
mov
pop
pop
hlt
insl
xor
pop
push
pop
and
lock
pushf
xchg
adc
iret
mov
and
repnz
sbb
out
jnp
pop
movsb
cmp
scas
fwait
xor
loopne
xor
push
xor
xchg
xchg
jae
pushf
inc
mov
add
push
leave
pusha
imul
push
hlt
jb
out
mov
mov
adc
pushf
adc
jmp
negb
mov
iret
shrb
jns
jbe
xchg
mov
add
insl
add
addr16
pop
lret
and
xor
pop
sbbl
mov
shrl
inc
sub
jns
pop
adc
dec
add
stos
jae
jbe
xchg
pop
test
dec
stc
dec
out
and
xchg
enter
cld
std
xchg
out
adc
cmp
enter
sub
pop
sahf
fmull
fs
dec
in
pushf
mov
mov
push
jmp
out
test
adc
cmp
popa
clc
fstpl
outsb
sbb
adc
fs
sbb
lcall
mov
xor
sbb
push
in
ja
sub
mov
ret
ss
push
dec
out
icebp
outsl
push
mov
fsubrl
loop
clc
movsb
cmp
inc
sbb
imul
stos
mov
mov
int3
pop
cmc
in
cmp
mov
repz
pusha
test
in
fs
cli
adc
idivb
ljmp
testb
out
mov
ficomps
outsl
push
push
fsubl
jmp
sbb
in
gs
out
in
xorl
loopne
or
pop
dec
xchg
bound
lret
andb
mov
fidivrs
cld
mov
sbb
pop
hlt
rorb
jl
cs
in
pushf
test
pop
adc
test
ljmp
sub
add
icebp
add
lds
mov
jl
sbb
pop
cmpsb
in
jae
or
cltd
xor
fldl2t
or
lahf
ss
pop
testb
xchg
sub
mov
or
jnp
lcall
stos
sub
popf
mov
inc
jg
inc
fisttpll
insb
push
jmp
and
mov
bound
push
sbb
int3
das
mov
lods
inc
xchg
mov
add
icebp
dec
jecxz
or
inc
iret
mov
pop
xor
iret
adc
or
pop
jbe
adcl
icebp
ja
ljmp
dec
in
or
mov
mov
xchg
mov
imul
dec
insl
xor
dec
pop
lock
inc
imulb
in
es
xor
xchg
adc
test
in
ja
pop
iret
aam
lock
push
push
and
mov
jle
aam
mov
cmp
je
inc
cmpsb
or
mov
fsubrl
ret
into
xchg
lret
sti
movsb
cmpsl
mov
mov
inc
scas
arpl
xchg
daa
jns
push
inc
pop
aad
mov
push
jae
jb
push
out
das
mov
inc
fidivl
adc
or
ret
inc
cmp
xor
add
out
ficoms
jp
fsub
jns
in
inc
push
pop
xlat
push
dec
cmp
outsb
jo
xchg
sub
lds
lret
mov
add
cld
push
sahf
xor
daa
inc
inc
jnp
mov
mov
les
cmc
add
dec
in
xor
xor
and
fisubl
add
daa
mov
fisubrl
es
cmp
in
pop
stc
xchg
lret
iret
int3
pop
adc
rcll
or
loope
aaa
xchg
add
mov
lea
cmp
dec
sahf
mov
arpl
mov
or
xchg
std
pop
cmp
pushf
xchg
loopne
in
call
in
pop
negb
or
xor
je
inc
insl
inc
orl
cmpl
or
inc
ja
add
cmp
aas
shl
pushf
insb
mov
dec
loope
int3
add
cs
clc
std
dec
leave
sub
jl
out
test
inc
and
insl
add
fildll
test
jge
and
cmp
push
in
cmp
shr
adc
mov
jae
nop
aam
scas
or
push
jmp
std
xchg
mov
push
dec
enter
sub
push
mov
adc
push
int
xchg
push
jmp
or
or
sub
cmp
aas
sub
jecxz
les
xchg
mov
out
aas
shlb
pop
add
fildl
ja
xor
stos
cmp
dec
xor
jno
fdivs
vprotb
out
pusha
xor
jne
sub
imul
sbb
mov
dec
aad
ret
pop
imul
mov
add
mov
cmpsl
mov
adc
lahf
mov
or
jle
mov
adc
in
and
daa
cltd
jmp
idiv
cmpsb
or
fstl
out
dec
pop
pop
jmp
xor
add
push
jmp
cli
push
mov
xor
lock
and
enter
push
out
pop
sub
loop
std
call
inc
int
or
sub
mov
dec
lods
cli
mov
ljmp
inc
mov
xchg
lds
ret
sbb
cmpb
mov
fadd
jecxz
aaa
cmp
subl
test
ds
sbbl
mov
cmp
inc
fdivr
pop
sbb
dec
mov
into
mov
ret
mov
xchg
mov
mov
lcall
js
mov
mov
in
xchg
rcrb
test
aam
scas
mov
cmc
dec
jg
xchg
insl
stc
push
mov
mov
cmc
sbb
testb
mov
cld
pushl
insl
insl
cmc
icebp
enter
xchg
clc
leave
lods
pop
jmp
stos
stos
jno
leave
orb
fnstcw
xlat
lock
and
imul
dec
mov
sbb
fildll
cmp
filds
rcll
xchg
sub
push
mov
cld
lcall
iret
jp
add
rcrl
ret
imul
imul
xlat
lret
bound
and
xor
add
and
in
out
pop
sahf
test
pop
fldenv
xchg
mov
lods
mov
push
mov
push
mov
aaa
push
mov
test
xchg
pop
xchg
mov
aas
or
shr
cmpsl
sahf
xor
lock
mov
fs
clc
lret
rorb
dec
add
test
out
pop
cs
inc
loopne
mov
jnp
mov
test
sbb
cmpsl
mov
dec
lret
cld
outsl
and
sub
out
ds
xor
sub
movsl
or
jne
xchg
mov
ds
cli
mov
xchg
out
xor
xchg
cmp
fsubp
jg
mov
push
fadd
loopne
cltd
ror
jae
jmp
lcall
dec
jne
rcll
add
or
mov
popa
dec
xchg
sub
pop
sahf
mov
xchg
shl
sub
and
mov
js
sub
aad
xor
lea
dec
add
scas
push
or
jg
in
mov
xchg
das
pop
int3
dec
loopne
je
sub
dec
fadds
cwtl
inc
adcl
mov
aas
lret
mov
mov
push
push
inc
shll
mov
cld
aas
fsubrs
and
loopne
or
pop
loope
repz
out
mov
lcall
fs
in
jb
sahf
push
jmp
sbb
insl
sub
rcrl
sbb
and
insb
pop
jae
dec
es
js
push
popf
call
rorb
pop
stc
sbb
subb
sti
push
fsubs
xor
add
in
aas
mov
adc
push
jl
pop
add
dec
xchg
cltd
cli
pop
sub
sub
insb
add
dec
cltd
xor
mov
fdivrs
dec
sub
std
pop
lods
test
jne
xchg
mov
xor
scas
in
dec
xorb
inc
mov
adc
dec
outsl
fnstcw
sub
sub
dec
sbb
int3
mov
insb
lret
cld
lea
or
xlat
dec
in
dec
rolb
arpl
inc
jns
stos
mov
inc
cmp
push
rcrl
and
xor
popa
mov
xor
sti
fdivl
push
dec
hlt
mov
cmpsl
stos
jne
shl
popf
adc
outsl
aaa
stos
fcomp
xchg
shlb
xchg
jne
sub
cmpsb
faddp
push
adc
mov
pop
push
sarl
dec
inc
mov
js
fdivl
cmp
popa
mov
dec
pop
loopne
mov
scas
adc
mov
pop
push
rclb
xchg
lods
pop
sub
imul
mov
xchg
adc
dec
loope
xor
iret
pop
dec
lods
or
aas
aad
outsl
inc
pop
cmp
mov
cmp
xlat
sbb
jge
hlt
mov
adc
pop
ficompl
inc
sbbl
inc
sbb
sbb
fsub
jl
mov
jg
mov
jo
sbb
imul
inc
sarb
in
fcomps
and
fs
sbbb
cmpsb
push
enter
and
pop
movsl
mov
fs
or
outsl
shlb
dec
fwait
std
dec
or
leave
xchg
xor
scas
fmul
dec
adc
adc
stc
push
xor
js
xor
subb
rorl
xchg
jle
fdivrl
fsub
mov
lods
clc
fnstcw
pushf
call
hlt
jge
push
call
xchg
cmp
add
imul
push
lea
addr16
lods
iret
loope
lea
cmc
iret
data16
add
xor
orl
push
test
rcr
jle
std
cmp
pushf
hlt
push
movsl
and
or
adc
sbb
movnti
stos
inc
and
adc
test
mov
mov
xchg
cmpsb
cmp
pop
xor
xor
adc
test
push
jmp
sahf
cmp
loope
add
pop
xchg
push
lahf
push
in
inc
pop
out
dec
aad
mov
in
xchg
les
mov
stc
mov
scas
inc
fs
xorl
out
imul
jle
inc
push
sbb
rorb
aam
lret
addr16
mov
fisubrs
xchg
out
cltd
xor
shlb
xor
mov
xchg
inc
movsb
popf
hlt
mov
in
jecxz
mov
mov
lds
xlat
jns
rcrl
bound
imul
mov
inc
sbb
push
dec
out
inc
inc
cmp
push
sbb
rorl
xor
pushf
adc
xchg
mov
mov
rclb
mov
lret
call
out
dec
mov
outsb
xchg
dec
jb
push
mov
out
je
inc
fsubrp
xchg
loopne
adc
xor
loop
cmpsb
ss
and
jo
pop
inc
fdivl
lods
xchg
roll
xchg
pushf
and
aam
and
lcall
popf
sub
jb
and
out
and
xor
nop
xchg
mov
ljmp
in
test
out
scas
sbb
and
pop
mov
cmp
lea
stc
adc
sbb
ljmp
mov
out
or
inc
adc
pop
inc
gs
daa
fnstcw
fwait
cltd
cltd
outsb
pop
arpl
pop
test
and
jno
hlt
inc
daa
scas
lods
push
pop
inc
fldcw
or
jl
jbe
daa
xchg
cmp
fidivrl
mov
push
mov
into
gs
scas
inc
in
call
and
inc
sbb
lock
cmp
inc
lea
adc
out
xor
dec
sbb
fdiv
mov
iret
dec
cmp
push
or
mov
les
into
movsl
outsb
es
mov
fnsave
loope
aam
cld
mov
call
psllw
mov
std
shlb
out
fstp
aad
sub
daa
aas
pop
cmpsb
pop
mov
cmpsl
lock
lock
xor
push
adcl
mov
ficompl
adc
xchg
pop
pop
test
ja
in
ja
test
gs
mov
sbb
fldt
icebp
insb
int3
sbb
imul
cmp
out
push
sbb
xor
fwait
jbe
dec
jle
repnz
lahf
add
dec
fdivl
mov
xchg
or
mov
aad
ds
ljmp
jmp
mov
sar
mov
stos
pop
dec
in
and
mov
push
dec
inc
ljmp
outsb
dec
or
push
or
cld
lahf
dec
xchg
mov
push
lds
in
lods
inc
sub
xor
xchg
sbb
das
xor
popf
jmp
pop
pusha
or
movsb
das
enter
ds
ss
sti
push
pushf
cmp
mov
mov
mov
and
mov
enter
inc
xchg
leave
fwait
cli
testl
sub
mov
add
cmpsl
icebp
das
push
mov
jo
cmp
arpl
iret
mov
mov
aaa
loopne
aaa
cmc
sbb
mov
scas
xor
adc
js
jbe
dec
lods
les
stos
dec
adc
push
mov
fidivs
popa
cmp
dec
test
out
mov
xor
frstpm(287
inc
imull
xchg
scas
or
or
push
lahf
cmc
fiadds
leave
jmp
repz
xor
dec
loop
jle
push
xor
push
xchg
gs
pop
sbb
adc
call
and
inc
xor
in
pop
xor
sti
rcrl
mov
or
and
pop
loop
int3
xor
and
cmp
add
and
pop
insb
push
adc
mov
pop
dec
out
push
stc
lods
cmc
dec
adc
and
mov
dec
sbb
rcrl
mov
or
and
popl
cmp
jecxz
arpl
fadd
cmp
mov
ret
cmpsb
mov
loopne
clc
ss
or
push
jno
loope
es
js
jo
mov
test
and
inc
adc
xor
push
push
js
adc
or
pop
out
fs
cwtl
outsb
popf
sbbl
xchg
movsl
lock
push
leave
sti
out
sbb
pop
jns
push
cs
cmp
xchg
cltd
mov
ret
push
push
pop
scas
dec
ds
lea
rolb
push
icebp
mov
outsb
fidivs
into
gs
dec
mov
pusha
mov
sub
cltd
cmpsl
ds
in
sbb
imul
in
mov
dec
leave
lret
ror
lret
push
orb
in
dec
cmpps
pop
sbb
pop
cmpsl
pop
lret
lock
inc
xchg
sub
lock
jl
inc
jecxz
jl
mov
pop
ret
jecxz
cli
cli
push
sti
int3
mov
mov
fldl
in
dec
fsubl
cmp
ja
mov
fwait
adc
and
fnsave
mov
test
sub
ljmp
in
repnz
mov
and
fidivl
pop
std
jmp
ret
dec
loopne
mov
cwtl
add
sarb
adc
and
mov
mov
imul
insb
test
mov
lret
jae
cmp
iret
pop
outsl
push
cld
xchg
test
insb
cltd
jbe
jo
push
and
jle
push
call
nop
jbe
out
iret
mov
jne
dec
dec
out
iret
mov
jp
repnz
ds
clc
mov
dec
pop
push
mov
or
push
arpl
movsb
lret
mov
sbb
cli
push
jge
arpl
cmp
xchg
test
les
xchg
and
aaa
in
jae
jno
xchg
xchg
je
in
dec
fmulp
and
enter
mov
add
jge
mov
dec
lods
pop
mov
push
inc
and
jne
pop
mov
xchg
sub
and
test
sub
loopne
adc
jle
daa
dec
fisttpl
xchg
jg
mov
mov
mov
scas
xor
test
push
loopne
sbb
daa
mov
mov
mov
mov
pusha
xchg
fsubs
mov
fisubs
push
icebp
xchg
mov
test
cmc
mov
js
and
push
call
incb
aaa
cmp
out
xorl
fsubrl
out
leave
mov
jmp
aad
fadds
out
test
xor
jne
je
call
shlb
cmp
jmp
aam
or
movsb
sbb
imul
aas
js
lds
pop
sbb
ds
inc
shll
mov
daa
and
decb
pop
pop
vmread
jge
jge
icebp
ss
xor
iret
popa
mov
outsl
and
jle
mov
fcompl
lahf
jmp
jns
jbe
adc
orl
fwait
add
nop
jl
jo
test
pop
icebp
sub
aas
call
jmp
jno
jge
cmc
outsb
insb
jecxz
pusha
insl
testl
push
enter
dec
jnp
aas
sub
mov
rcrl
lods
jnp
das
cmc
sbb
imul
loop
mov
mov
mov
adc
xchg
xor
sbb
xor
xchg
enter
or
out
sub
jmp
adc
mov
pop
inc
pop
repz
cmp
pop
mov
mov
scas
push
popf
pop
mov
sub
je
orb
mov
pusha
testl
pop
cmc
xor
or
pushf
sbbl
mov
addr16
xor
xchg
push
jmp
test
pop
not
cld
xchg
addr16
in
push
stos
or
jns
in
test
xor
stc
mov
mov
in
add
mov
rcrb
shrb
push
cld
jle
lret
xchg
jge
add
cmp
es
cmpsl
sbb
dec
enter
imul
sbb
jp
hlt
dec
in
movsl
mov
sbb
data16
xchg
push
scas
jnp
push
sub
in
test
cli
xchg
adc
cmp
jl
push
movsl
add
pop
hlt
xor
pop
repz
in
test
jbe
lahf
sbb
mov
pop
lahf
ss
adc
rolb
data16
js
cmpsl
mov
dec
adc
dec
rorb
jmp
push
xchg
pop
xchg
dec
in
popf
xor
call
enter
or
jne
fnstsw
mov
lods
jbe
ficomps
adc
mov
loop
jb
fadd
inc
jmp
add
and
lret
shl
or
test
iret
push
movsl
rorb
bnd
test
jae
inc
fnstcw
mov
addl
imul
pop
aaa
into
jbe
in
test
add
jmp
xchg
or
or
push
in
jnp
ret
cmc
push
out
mov
in
sub
outsb
pop
test
push
sbb
fnstenv
int
or
inc
mov
movsl
aad
xlat
and
stos
inc
in
sbb
into
jl
adc
mov
sub
out
mov
fs
ss
jno
lcall
push
movsl
in
adc
shll
out
mov
fcoml
ret
sub
lods
jbe
mov
fistl
lds
dec
in
and
pop
xchg
mov
aam
add
lahf
cld
push
ret
and
ficoml
mov
push
add
sti
imul
push
shll
into
gs
hlt
fdivs
fdivrs
scas
inc
jo
cli
push
fdivrl
jno
scas
sahf
xor
test
cltd
add
xchg
pop
lds
stos
jo
movsl
cmp
xchg
jbe
repz
mov
sbb
push
sbbl
mov
push
jae
mov
jne
pop
xchg
sub
push
jecxz
scas
nop
mov
loop
push
mov
loope
inc
shll
popa
icebp
xorl
in
mov
aad
xchg
popf
xor
call
enter
or
loope
ret
pop
cli
movsl
pop
icebp
sarb
loop
movsl
insl
in
sbb
jbe
pop
inc
fcmovb
nop
popf
or
inc
dec
mov
dec
mov
mov
pop
les
imul
ds
jo
or
repz
push
jns
push
daa
leave
adc
xchg
lods
inc
push
aas
aad
xchg
leave
lea
sti
push
int
hlt
dec
ss
mov
neg
cltd
stos
ret
adc
xchg
div
and
jo
les
mov
jl
sub
and
push
inc
sbb
adc
jle
iret
mov
mov
pusha
test
out
mov
mov
data16
mov
mov
xlat
enter
add
std
xchg
xor
sti
push
ljmp
push
call
loop
and
cmpsl
mov
jbe
into
xchg
cmpsb
pusha
das
fmull
or
lea
sarb
inc
ficoms
jmp
jp
arpl
mov
in
test
pop
es
testb
and
xchg
xchg
add
or
subl
xor
xor
push
xor
popa
lods
out
and
es
aaa
adc
add
inc
es
adc
jg
lods
xor
xchg
dec
jb
nop
daa
mov
les
test
idivb
mov
mov
xor
mov
sbb
xor
out
test
out
subb
sahf
push
and
rcrl
movsb
sub
cmp
sbb
and
clc
lret
cmp
stos
lret
cld
lret
jmp
aam
testl
xchg
arpl
push
mov
jae
insb
cmp
cmp
jnp
pop
cmp
mov
cmp
dec
in
movhps
les
sub
jne
pop
cmc
pop
addr16
test
int
or
lods
pop
icebp
fidivs
or
or
scas
and
adc
jnp
insl
loopne
jno
xchg
lcall
out
inc
sbb
insl
imul
rorl
lea
or
mov
lods
xor
dec
dec
mov
inc
int3
pop
xchg
mov
inc
push
hlt
sub
mov
in
add
adc
bound
cmp
jne
sarl
aas
dec
les
mov
and
adc
pop
ror
fldt
mov
ss
jb
cwtl
jns
jns
push
lcallw
dec
in
lods
enter
addr16
hlt
mov
fcoms
mov
aas
clc
cwtl
fidivl
mov
es
and
jae
pop
enter
pusha
push
into
xor
xor
push
xchg
xchg
sub
xchg
inc
pop
icebp
mov
sahf
hlt
mov
sbb
pop
mov
insb
add
rcll
xchg
lret
clc
shrl
in
push
shr
rcrl
out
xchg
repnz
add
jmp
or
dec
das
mov
adc
imul
cld
jg
sub
add
xor
and
fdivl
inc
les
pop
cli
xchg
inc
cwtl
es
addr16
cmc
push
pop
stc
nop
mov
lds
push
ljmp
and
jg
pop
out
sub
or
jmp
ja
icebp
push
push
jmp
sub
enter
iret
push
mov
push
js
fnstcw
das
xor
enter
sar
sbb
mov
les
fisubrs
aaa
into
push
xor
sahf
popa
ja
adcb
pop
cmp
gs
mov
ds
rclb
call
or
stos
sub
dec
out
in
jns
idivb
push
hlt
in
sub
dec
and
push
mov
mov
insb
or
popf
dec
cmp
fisttps
addb
xor
roll
cmpsl
pop
out
decl
adc
je
gs
lret
xchg
popa
clc
sub
dec
and
mov
flds
scas
fisttps
xchg
pushf
add
xor
push
mov
das
xchg
mov
cli
stos
lods
sbb
or
cs
clc
mov
dec
jecxz
scas
jg
add
inc
and
xchg
jnp
push
movsl
inc
pushf
jge
pop
bound
xchg
cmp
mov
sahf
into
gs
dec
xchg
sub
mov
dec
loope
sub
sahf
lret
jno
in
jns
mov
mov
push
aad
xchg
out
fnstenv
pop
jge
xchg
pop
lahf
ss
xchg
add
jne
push
aas
mov
xchg
lods
inc
punpckhbw
mov
xchg
xchg
je
ficompl
int3
arpl
ret
fldz
cmp
mov
ficomps
fisttpll
pop
push
es
inc
jmp
out
fs
mov
adc
outsb
xor
jne
aaa
into
cs
daa
push
sub
dec
push
jmp
xchg
adc
aaa
xor
dec
ds
call
pushf
cwtl
adc
fnstsw
sbb
dec
pop
or
pop
outsb
cld
xchg
mov
ret
aad
xor
jae
out
mov
ss
fcom
outsb
out
inc
cmp
je
testb
lds
aad
std
push
popf
cs
arpl
mov
dec
or
dec
in
sub
repz
adc
mov
outsl
push
cltd
test
and
fadd
pop
or
lods
inc
inc
sub
jns
popa
lret
jle
xchg
scas
mov
jg
rcrb
mov
or
sahf
cmp
cmp
push
pop
and
mov
jo
fisubl
ret
repz
push
lcall
sbb
or
inc
cmp
stos
lock
mov
xchg
sub
lock
out
xor
xchg
xlat
call
fs
inc
es
jbe
leave
add
jb
mov
cli
lea
and
jnp
mov
add
mov
sti
rcrb
addl
mov
add
icebp
pop
je
inc
shrl
rcrb
shrb
jge
lods
insl
mov
lcall
and
repz
fsubrl
cmp
dec
jo
and
xor
jno
dec
push
test
inc
and
popa
xchg
sub
adc
sbb
mov
add
cld
dec
fcomps
xor
and
jnp
test
adc
data16
lret
or
adc
push
add
mov
dec
push
jmp
inc
sub
rclb
rol
pop
mov
fs
inc
lahf
ss
iret
test
icebp
mov
inc
addr16
xor
rcll
out
dec
mov
cmp
pop
outsl
cmpsb
icebp
xchg
pop
pop
xchg
xchg
cmpsb
sub
aad
mulb
imul
addl
jns
inc
or
scas
inc
pop
imul
push
and
xchg
add
xchg
adc
inc
fucom
fisubrl
jp
lds
sbb
xor
into
movsb
and
mov
mov
xor
pop
and
jae
push
or
call
mov
xor
pop
out
cltd
xor
loop
mov
pop
xor
and
in
aas
inc
into
cmp
xor
push
adc
sahf
xchg
mov
repnz
cli
int3
push
das
push
jne
popa
mov
xor
lea
pushf
mov
dec
sub
rcll
xchg
shl
dec
scas
daa
adc
jb
js
add
mov
jbe
test
push
jecxz
test
xchg
push
fsubrs
xlat
les
js
mov
dec
aaa
mov
sbb
sbb
inc
mov
arpl
daa
jnp
test
mov
outsl
sub
add
dec
xor
imul
cmp
outsb
mov
in
lahf
repnz
inc
test
roll
cmp
jno
ja
stos
notb
pop
enter
sbbb
pushf
shlb
cmp
in
jnp
push
and
dec
mov
xchg
inc
and
mov
jb
addr16
repnz
cmp
mov
fstpl
add
inc
cltd
cwtl
in
push
xor
ss
or
mov
mov
pop
mov
push
cmpsl
lret
mov
pop
jo
inc
fimull
insb
out
mov
dec
cwtl
cmp
rcll
sbbb
xor
sbb
push
fisttps
adc
psraw
inc
fcoms
ljmp
jno
cld
add
scas
xor
push
pushf
or
insl
movsb
mov
out
int
lret
gs
aaa
mov
lods
xor
bound
mov
addr16
xchg
pop
out
jge
push
mov
add
je
jmp
ret
push
cs
pop
inc
dec
fidivrs
loop
inc
fldcw
mov
sub
andb
sbb
pop
pushl
pmaddwd
push
xor
loop
cmp
push
imul
push
inc
mov
scas
inc
mov
in
into
gs
pop
loop
popa
ds
sub
nop
nop
xchg
mov
push
mov
rcr
jo
add
jbe
scas
testl
and
jb
pusha
xor
mov
pop
lods
jl
cmpl
adc
mov
sahf
mov
divb
int
and
push
cmc
dec
fdivl
dec
es
rclb
das
mov
sbb
fs
pop
out
je
mov
xchg
jecxz
inc
pop
adc
mov
out
in
push
popa
mov
dec
fsubrs
cmp
xchg
popa
mov
lahf
es
dec
and
into
push
daa
ja
das
cmp
dec
decl
push
adc
fcoms
sub
and
iret
lahf
loop
jo
xor
divl
out
cmp
aas
lahf
pop
test
scas
cmp
adc
stos
in
xor
sahf
ljmp
jae
flds
cmpsb
ds
sub
outsl
addr16
mov
addl
es
les
pop
sub
xchg
loop
addl
adc
imul
dec
popa
lahf
mov
and
fsubrs
mov
stc
inc
jo
push
iret
adc
add
mov
rcrl
pop
mov
and
cli
inc
leave
scas
scas
xor
in
adcb
xor
shll
xchg
cs
adc
mov
daa
mov
sti
add
push
push
mov
sub
mov
mov
into
test
inc
insl
sub
sahf
int
cmp
ret
pop
xor
fs
jnp
jge
bound
sbb
loopne
pushf
mov
jae
pop
incl
sbb
inc
int
jb
sti
mov
test
test
mov
cmp
adc
mov
mov
les
jnp
jb
mov
testl
cmpsl
ds
pop
adcb
jle
add
sub
out
stos
sub
sbb
fnstsw
and
push
sti
xchg
das
mov
add
sbb
divl
int
nopl
push
jo
jae
js
cmp
push
adc
gs
add
adc
inc
inc
out
xchg
pushf
adc
sbb
dec
es
mov
or
outsb
jmp
lahf
mov
aas
mull
test
xor
mov
pop
jecxz
xor
imull
aad
xchg
mov
cs
sahf
stos
sbb
jae
cmp
cmp
pop
rolb
xchg
lcall
sub
cmpsl
or
cwtl
mov
push
ss
into
aaa
add
scas
mov
dec
dec
gs
pop
cmp
test
rcr
jbe
adc
fwait
add
xchg
cmp
sub
rcrl
sub
ret
in
imul
dec
cwtl
rcr
loope
cmpsl
cli
inc
fisubrs
push
into
loop
dec
gs
jnp
lret
cmp
push
clc
or
aam
icebp
sti
sbb
push
ss
adc
sbb
adc
aad
xor
sahf
popf
sbb
sti
repnz
fsubrs
cmpsl
cmp
cmp
pop
in
xor
mov
loopne
xor
lahf
mov
roll
and
lahf
loop
cmp
enter
in
data16
cltd
fcompl
mov
jg
ret
mov
cmp
jmp
mov
iret
push
jge
das
cmpsl
ficoms
lock
ret
cld
inc
adc
xlat
sub
cmp
pusha
rorb
pop
lock
mov
jecxz
inc
sbb
fisttps
mov
jmp
loop
sahf
xchg
scas
sub
idiv
push
shrb
andb
clc
pusha
pop
jne
sbb
stos
imul
imul
pop
cwtl
cmp
shlb
add
jg
test
or
stos
out
pop
sub
int
icebp
cmp
pop
hlt
cltd
cmp
xchg
iret
jns
int3
arpl
xchg
lods
and
ljmp
mov
mov
or
mov
inc
rorb
scas
clc
jae
cmpsb
sbb
pop
mov
push
jmp
loop
jnp
xchg
mov
ljmp
mov
out
pop
ds
xor
sub
push
addb
mov
into
cs
pusha
out
ds
jnp
push
call
lods
ljmp
cmc
pop
repnz
lahf
pop
adc
mov
subl
xchg
push
popf
std
fld
sub
jmp
ret
lods
dec
mov
insb
and
lret
jbe
in
or
jae
cmp
adc
das
inc
pop
mov
call
imul
cmp
push
repnz
stos
mov
stos
imul
cmp
add
or
mov
xchg
jg
movsl
xor
in
int
arpl
jmp
fs
ds
cmp
movntq
out
cwtl
jo
hlt
mov
fs
repz
and
inc
jp
imull
mov
call
cmp
lock
stos
jmp
fstpt
add
pandn
nop
jb
stos
mov
pop
out
adc
sbb
or
adc
xchg
into
movsl
mov
decl
fsubl
xchg
cmc
sahf
scas
addr16
je
iret
es
or
sbb
jo
in
test
rorb
adc
and
sbb
test
xchg
cmp
and
add
xor
pop
inc
bound
inc
test
or
pusha
addr16
xchg
fstpl
inc
out
sub
or
mov
mov
sbb
push
or
pop
je
mov
xchg
mov
loop
sub
shlb
inc
add
cmp
sbb
pop
dec
mul
pop
repnz
sbb
imul
sahf
xor
outsl
pop
inc
inc
mov
divb
add
push
lods
movsb
repnz
icebp
mov
push
pcmpeqb
dec
add
js
jg
fs
rcl
ret
loope
gs
pusha
xchg
or
xor
aas
out
jno
mov
cmpsl
ret
mov
or
mov
sarl
shlb
sarl
dec
add
je
and
pushf
test
push
xor
or
test
sub
inc
pop
sub
gs
test
cmpsb
sbb
es
sbb
jl
jecxz
dec
lcall
out
mov
insl
loopne
fcomps
mov
mov
xchg
adcb
add
into
pop
add
push
pushf
dec
fs
jp
xchg
aaa
das
jmp
ret
or
mov
and
jne
shlb
add
push
mov
nop
fdivrl
push
mov
out
jmp
sub
negl
sub
mov
mov
xor
arpl
pop
mov
test
inc
or
jge
or
pop
stos
sbb
cmp
inc
jae
shll
repz
testl
or
nop
push
negb
and
out
mov
push
xchg
add
sbb
inc
testl
and
stos
popa
push
xchg
push
dec
jl
jl
shll
popf
mov
repz
adcb
lods
mov
mov
mov
pop
mov
cmp
mov
mov
fstp
jb
push
push
addr16
nop
jb
adc
mov
ss
mov
lret
sub
jns
mov
mov
xchg
or
ds
cmpsb
sbb
fdiv
mov
push
pop
push
into
xchg
lock
xchg
in
adcb
jg
pushf
cli
nop
mov
mov
sti
mov
jg
mov
sahf
sbb
aaa
xchg
xchg
invd
inc
mov
dec
stc
push
dec
push
mov
ret
push
xor
mov
enter
mov
pusha
mov
mov
dec
mov
dec
mov
cld
rcrb
adc
cmp
push
xor
mov
das
dec
loope
cmp
push
cwtl
mov
add
adc
mov
dec
inc
out
jle
mov
inc
dec
mov
imul
pushf
push
dec
repnz
lcall
or
lahf
sub
jmp
pop
xchg
imul
xchg
cli
inc
dec
dec
xchg
dec
xchg
leave
sbb
je
sub
adc
xchg
push
xor
loope
sbb
inc
inc
xchg
pop
jae
sub
incb
out
icebp
sahf
mov
xlat
mov
fnstenv
int
adc
pop
push
dec
fcomip
ret
popf
dec
int
mov
push
mov
jg
and
inc
mov
enter
cwtl
ffreep
ds
out
sub
dec
mov
adcb
sar
xchg
arpl
or
xchg
or
bound
jmp
mov
mov
cmp
and
imul
mov
cwtl
shrb
cmp
pop
cmpsl
inc
sarl
scas
and
mov
dec
shlb
or
shlb
jnp
jmp
in
mov
mov
xor
es
mov
popf
lds
mov
add
mov
movl
sbb
dec
mov
and
pop
adc
das
inc
jle
gs
dec
arpl
mov
ss
data16
test
imul
cmp
popa
dec
int
mov
pop
pop
xor
hlt
stc
sbb
sub
outsb
mov
outsl
push
je
pop
subb
loopne
lcall
xor
aas
mov
push
adc
leave
mov
stos
xchg
xchg
mov
dec
gs
fsubrs
shlb
shll
lods
movsl
shll
fadd
jno
ja
fsubp
jecxz
inc
mov
or
dec
sbb
and
jmp
pop
int3
fmuls
jb
lcall
sub
mov
testl
cmp
loop
pop
mov
iret
xchg
jne
enter
js
xchg
dec
rcll
test
xor
cmp
into
mov
inc
nop
faddl
dec
xor
out
rorl
sti
or
or
pop
push
aam
pusha
mov
addr16
xor
mov
cmc
cwtl
hlt
ficoms
in
inc
lret
mov
in
insb
lods
adc
fimuls
mov
scas
xor
addb
test
mov
iret
mov
jo
stc
nop
test
push
je
adc
push
fsubs
jp
mov
sbb
pusha
lea
or
mov
mov
aad
outsl
push
repnz
push
xlat
je
mov
xchg
jne
dec
and
add
rorb
sub
dec
out
mov
insl
mov
mov
inc
push
cmp
popa
sub
pop
mov
and
mov
jae
add
dec
in
in
jno
pop
mov
jmp
xchg
add
dec
mov
cmp
push
jle
pop
stos
pushf
pop
sub
in
xor
jbe
cmp
jae
aas
scas
xchg
aas
cli
inc
jno
int3
jo
mov
stc
int
nop
loope
mov
inc
rol
mov
shrl
enter
ret
and
aam
shrl
push
mov
jge
stos
mov
mov
lret
dec
sbb
test
imul
jmp
xchg
call
sbb
cmp
int
jbe
or
je
adc
mov
test
rorb
lods
movsl
lcall
popa
adc
sub
sti
fimuls
test
jno
in
jne
sbb
push
pop
push
cmp
icebp
mov
loopne
ret
xor
or
rcrb
int
xchg
jbe
mov
jecxz
mov
movaps
stc
inc
sti
push
lods
and
push
jo
enter
fs
adc
xlat
adc
cmp
sbb
mov
dec
sbb
outsb
test
mov
icebp
enter
aas
add
test
outsb
int
imul
xor
out
add
test
and
scas
pop
pop
jmp
in
icebp
mov
adc
dec
out
dec
aas
insb
cmp
repnz
inc
or
jg
and
jp
shr
mov
int
inc
sbb
dec
xlat
test
hlt
or
gs
push
xor
mov
jnp
imull
cld
fsub
cmp
mov
addr16
rclb
inc
push
sub
test
loopne
test
lret
sub
call
jle
jae
fwait
cmpsl
je
test
aam
push
mov
pop
mov
mov
mov
aam
mov
rcrl
adc
arpl
sub
or
mov
pushf
jg
lods
cmp
push
add
sbb
inc
mov
push
scas
mov
movsl
jne
push
rorl
xor
or
test
jp
pop
xchg
mov
popf
or
lea
aaa
mov
or
mov
mov
std
add
test
enter
or
test
xchg
or
dec
mov
pop
loope
pop
in
leave
mov
int3
frstor
mov
push
mov
cmp
sbb
shrl
jo
push
loop
cmp
mov
sbb
cmp
pop
in
mov
mov
adc
cld
shlb
stc
mov
shrd
cwtl
iret
out
cmp
fadds
pop
not
push
pop
sub
dec
cmp
adc
jge
mov
fcomps
fisubs
out
cwtl
sub
stos
push
sbb
push
add
les
into
xchg
sbb
mov
aaa
adc
and
test
ret
aam
cmp
and
add
or
mov
mov
scas
xor
shr
and
ja
mov
cltd
jle
xchg
adc
shrb
sbb
fldl
mov
pusha
in
aas
mov
nop
mov
adc
add
icebp
ja
in
das
adc
mov
mov
cld
and
aad
lret
sahf
sub
sub
stos
pop
sbb
xor
shll
mov
dec
daa
inc
push
or
out
mov
sub
pop
je
push
sbb
out
pop
icebp
jae
inc
popf
rorb
and
js
jo
pop
scas
adc
es
lea
xor
and
jns
and
dec
dec
gs
lcall
ret
fsubp
out
jp
dec
ret
imull
out
sub
sahf
ror
sub
data16
dec
mov
mov
ret
jb
int3
movl
push
shl
enter
dec
xchg
mov
fistps
lret
mov
aaa
mov
mov
push
or
rolb
fmuls
pop
mov
jb
loope
mov
xchg
xor
or
dec
xchg
mov
xchg
mov
or
pop
iret
and
mov
adc
mov
mov
mov
enter
iret
cmp
rcrb
stos
push
mov
jl
jmp
int
lcall
push
jmp
imulb
pop
popa
add
loopne
push
movl
and
xchg
ss
dec
test
mov
lret
gs
andb
ljmp
in
cmp
xlat
mov
jmp
and
mov
sub
sbbl
mov
popa
cltd
hlt
lret
mov
inc
shlb
jle
cmp
fldenv
movsb
dec
or
cmp
jbe
cmpsl
mov
add
mov
fwait
dec
pop
xchg
push
rcl
cmp
mov
addr16
lock
mov
into
jae
push
xchg
or
sarl
cmpsl
push
xor
xchg
inc
adc
fisubs
call
rol
das
jb
xchg
inc
add
sub
cmp
mov
pop
rcrb
sarl
sub
loope
lods
imul
add
jge
and
inc
fwait
les
add
jb
aas
cmp
rcl
cmp
and
xchg
push
lods
nop
cs
ror
ds
adc
leave
test
adc
lods
mov
call
xor
and
in
mov
push
cmp
test
pop
xchg
xchg
jmp
loop
and
sub
leave
test
xor
mov
pop
insb
xor
fnstenv
and
dec
pop
js
xor
jp
mov
or
gs
jge
test
lahf
shl
shrl
push
jo
es
fists
push
or
ljmp
or
and
addr16
pop
lret
repnz
xchg
mov
ja
in
sbb
sahf
call
pop
cld
xchg
gs
inc
and
jbe
jne
push
stc
cmp
dec
stos
cld
test
arpl
js
xor
imul
stc
mov
xor
nop
dec
inc
mov
into
pop
jae
push
mov
pushf
aad
js
inc
js
aam
jo
xchg
pop
arpl
lret
xor
pop
pop
aas
cmc
mov
sub
clc
dec
sub
jnp
adc
sbb
jno
ja
fucom
pop
xchg
adc
notl
adc
test
mov
mov
cmp
sbb
daa
mov
cmp
mov
loope
adc
negb
pop
in
xor
mov
dec
aad
pusha
dec
flds
dec
in
sbb
jle
push
das
mov
lret
dec
cmp
xchg
mov
cmp
or
ret
cld
add
sbb
stc
ds
pop
fnstenv
std
ljmp
adc
sbb
xor
flds
scas
jnp
push
cmp
cmp
add
sub
and
dec
scas
je
pusha
xor
cmpsl
cmp
je
jne
rcrl
fstpl
inc
mov
leave
xor
mov
push
or
das
add
adc
cltd
cmp
mov
test
outsl
outsl
mov
shrl
jae
aam
fcmovnbe
inc
fldcw
clc
shrb
lods
dec
negb
mov
push
and
push
out
pop
filds
fmuls
inc
inc
scas
xor
push
pop
xor
test
repnz
jecxz
loope
lds
push
cltd
das
scas
dec
out
mov
fnsave
test
add
or
rorb
push
push
test
mov
ficoms
inc
mov
fidivrl
shrl
mov
int
es
arpl
hlt
mov
lret
adc
pop
mov
sub
jp
dec
nop
daa
cs
pop
jno
ljmp
pushf
cli
in
sbb
loope
xchg
das
mov
jp
push
jo
pusha
enter
orl
dec
enter
insl
addr16
std
ljmp
cmpsb
hlt
aad
mov
insb
stos
add
jle
fs
push
xchg
in
push
and
aam
in
mov
jno
mov
or
loopne
rclb
jp
sti
push
sbb
jle
xlat
cmp
or
aas
andb
jp
ds
dec
adc
and
jl
xor
xor
test
cmp
jb
push
mov
addb
add
test
call
xlat
sub
imul
stos
insl
or
daa
fldl
mov
adc
enter
sti
in
or
add
inc
outsl
add
mov
inc
lds
cli
mov
dec
pop
repz
addr16
mov
pop
test
and
xor
adc
sub
fisubrl
and
mov
popa
xor
hlt
pushf
sbb
mov
loop
cmpsb
lret
cmc
aas
fldenv
enter
xchg
or
ret
mov
lret
bound
mov
ret
push
pop
pop
call
xor
ljmp
mov
in
jp
bound
jbe
test
jmp
add
push
cs
ret
fbstp
dec
aaa
iret
test
sub
lds
dec
outsl
sbb
xor
rol
rcrb
pop
stos
fucomp
fstpt
mov
pop
inc
divl
mov
adc
pop
mov
push
jmp
and
into
push
and
pop
adcb
dec
aas
loop
fs
xor
pop
ljmp
xlat
outsl
lret
lods
inc
cld
test
xor
mov
sub
int3
dec
gs
jl
cmpsl
lods
sub
fmulp
push
pop
aas
js
jo
and
xchg
and
pushf
or
out
xor
lods
adc
fidivl
fwait
cli
dec
cmp
adc
sub
lahf
lret
mov
gs
fstpt
jb
fsts
inc
dec
push
gs
popa
xlat
mov
fs
xor
jne
cmp
pop
dec
stc
fcoms
jbe
subb
cmpl
test
xor
mov
add
dec
and
mov
sbb
inc
cld
push
jb
push
hlt
mov
inc
push
jno
jl
inc
add
imul
and
push
mov
int3
pop
outsl
dec
adc
sub
outsl
fmulp
mov
cmc
rcr
pop
int3
xor
test
inc
bndstx
pop
xor
movsb
lock
fsubrl
sbb
insb
imul
sbb
das
jo
aad
xchg
sarb
fstpt
adc
ret
lcall
in
pushf
arpl
fadd
mov
mov
xlat
inc
xlat
inc
sub
sbb
xor
outsb
shlb
xchg
or
lret
and
pop
pusha
sbb
pushf
jb
imul
xchg
jne
xor
sar
jne
loope
js
int
rol
mov
mov
test
jmp
aas
les
cmp
pop
shll
ret
sbb
dec
sbb
loopne
push
call
test
inc
mov
sti
or
shrb
int3
movsl
test
inc
gs
sub
sub
nop
xor
inc
popa
cmpl
push
loopne
dec
idivl
outsb
test
and
mov
cld
push
pushf
xlat
cmp
dec
dec
fnstcw
push
movsl
lea
pop
mov
leave
lea
adc
cmp
push
cli
pop
mov
jns
fsubr
testl
add
pop
push
xchg
xchg
sub
fsts
dec
sbb
jle
js
and
iret
pop
je
mov
sub
ds
fiadds
in
jg
je
mov
dec
inc
lret
mov
popaw
aaa
mov
ret
pop
push
ss
jno
jo
fsubr
mov
inc
loop
in
popf
repz
cmp
call
push
les
loopne
test
cmpsb
inc
jecxz
cltd
add
mov
frstor
into
dec
adc
std
pop
and
cmp
fildll
popf
mov
rorl
in
push
cltd
jnp
repz
push
add
mulb
adc
cwtl
out
add
jmp
fistps
data16
icebp
pop
cmp
lea
pop
mov
fldcw
sub
xchg
cmp
das
mov
sub
pop
call
lds
inc
push
fdivrl
adc
lcall
xor
mulb
xlat
outsb
jo
ljmp
mov
scas
pop
divl
jle
sbb
ds
es
cmp
ja
inc
pop
movsb
test
aaa
invd
xor
xchg
data16
sub
scas
mov
cmp
in
push
sbb
push
js
pop
std
cs
sub
cmp
jmp
test
nop
push
std
lahf
xor
and
xor
inc
jecxz
cmpb
ss
out
dec
shlb
push
mov
adc
mov
test
pop
or
jbe
xor
or
and
das
cmpsb
nop
fs
loopne
nop
stos
push
ret
cmp
in
call
mov
jmp
jne
xor
pop
mov
scas
mov
shlb
daa
cmp
sbb
mov
pop
cli
fildll
das
dec
cs
cltd
cmp
in
shll
jbe
pop
ja
inc
aad
lods
or
push
sahf
add
icebp
std
sbb
jge
es
dec
or
popf
sbb
ss
rorl
lock
mov
adc
push
sbb
mov
mov
popf
add
add
dec
sub
inc
mov
mov
in
or
ret
ljmp
jle
repnz
cmp
pop
pop
fistpll
xorb
sub
aam
jge
into
mov
je
cmpsl
pop
push
hlt
pusha
dec
sahf
and
clc
sub
testw
mov
mov
std
mov
out
add
test
mov
jmp
sbb
cmpb
push
mov
enter
cmc
and
jae
cmc
sbb
sub
fimuls
add
jl
movsb
ds
inc
sub
xor
mov
rorl
pop
loope
xor
and
icebp
clc
pop
fsubl
push
jg
cmpsl
stos
fwait
inc
cld
mov
cmc
cwtl
adc
std
push
inc
xor
xchg
fs
fldt
adc
mov
sahf
mov
popa
addr16
and
cs
cmp
ret
daa
movsb
push
cmpsb
xchg
icebp
pop
dec
es
lock
inc
inc
shll
sahf
jle
test
xchg
cmp
in
insl
lret
je
cmpsl
jae
test
or
cmp
dec
mov
mov
aad
orb
repz
outsl
jnp
out
mov
int3
mov
bound
mov
std
xchg
sbb
shll
imul
pushf
xchg
pop
popl
out
insl
jle
pop
add
cs
jns
call
cmp
mov
cmp
movsl
dec
adc
jo
es
or
loop
jmp
adcb
sub
movntq
push
jle
lock
test
jp
mov
outsl
jge
push
push
hlt
dec
xor
fisubl
or
test
into
sbb
mov
sbb
fiaddl
fwait
lods
mov
fiaddl
sbb
or
aad
aad
lock
scas
ljmp
mov
cli
add
test
js
mov
stos
iret
jo
fimull
xchg
sub
addr16
div
xchg
notb
adc
inc
inc
stos
mov
xor
sub
test
icebp
sbb
lods
mov
cmp
jmp
and
cmpsl
cmp
pushw
xchg
mov
leave
test
pusha
js
xchg
and
xchg
jge
mov
pop
xchg
iret
dec
xchg
cli
inc
mov
cmp
jp
lahf
jbe
out
aas
popa
loop
sbb
sahf
xor
int3
push
jecxz
mov
inc
mov
add
xchg
inc
jp
fs
xchg
out
enter
mov
rcr
and
jbe
cli
pop
add
cmp
or
add
int3
std
out
and
call
test
inc
jnp
cwtl
mov
loope
mov
cmp
arpl
loope
dec
cmp
push
push
in
int3
jno
gs
push
dec
pop
enter
rorl
jo
cwtl
idivl
push
jns,pn
xchg
imul
ror
and
xchg
pop
ds
inc
pusha
and
mov
lds
lods
and
push
into
push
in
shr
in
mov
jo
mov
cwtl
out
out
sbbl
cmp
fsubrl
movsl
and
lds
jmp
outsb
xchg
mulb
push
sbb
popa
pop
fistpll
mov
mov
jp
dec
mov
inc
fstpl
sbb
xorb
mov
daa
imul
pop
jae
add
testb
push
jne
pop
dec
inc
shll
add
xor
sarb
aad
jo
notl
cmp
jge
mov
pop
fs
imul
pop
roll
lock
dec
clc
jle
stc
pop
jp
push
inc
push
pusha
adc
sbb
inc
jecxz
mov
cmc
or
scas
dec
loopne
inc
push
or
mov
add
cmpsl
mov
loop
mov
cmpsl
sub
shrl
push
push
es
call
add
xchg
imul
fwait
mov
xchg
repnz
std
fs
xor
pop
out
ret
repnz
and
mov
and
xor
lcall
insb
clc
push
jmp
mov
ljmp
pop
xchg
repnz
mov
cmp
out
cmpsl
pushf
push
movsl
inc
dec
cmp
jg
out
das
and
jl
mov
sbb
fidivrl
rolb
loop
adc
jo
nop
mov
xchg
push
cli
sahf
or
mov
push
cmp
xchg
mov
add
aam
fidivl
adc
mov
test
inc
mov
cmp
js
xchg
jg
jmp
dec
sbb
mov
mov
loope
hlt
mov
dec
jnp
inc
adc
mov
lcall
sbb
dec
filds
cmp
xchg
xchg
add
sahf
in
xchg
sbb
cmp
fsubrp
mov
cmp
data16
dec
adc
sarl
in
adc
addb
dec
cmp
shrb
repz
push
jno
adc
mov
pop
test
fnsave
ds
mov
popf
stc
xchg
add
sbb
popa
push
jnp
xchg
test
pop
mov
out
sub
xchg
adc
stc
mov
sub
and
pop
inc
inc
mov
lods
loope
sub
xchg
arpl
lfs
fdivrp
popf
xor
mov
push
jecxz
in
and
add
push
xor
cmp
pusha
lahf
dec
add
jle
es
xchg
notb
cmp
stos
cmp
loope
in
inc
sbb
dec
dec
xchg
pop
jg
mov
lock
jae
or
mov
ret
and
mov
xor
daa
bound
dec
mov
or
mov
pop
aam
mov
jbe,pn
dec
pop
shl
and
xchg
push
das
mov
jae
sub
pop
leave
jnp
mov
cwtl
dec
pop
in
pop
and
push
ljmp
mov
xchg
xor
lock
inc
cmp
mov
stc
notb
cmpb
fs
adc
cmpsb
xchg
dec
scas
popa
ret
push
insb
pop
ss
push
repnz
repz
or
popf
and
xor
mov
roll
lret
mov
fidivrs
mov
in
sub
inc
je
ss
lahf
mov
jmp
jmp
add
popf
adc
into
mov
inc
in
add
xor
lods
jg
stc
or
inc
push
lahf
testb
pop
jge
jbe
xor
repz
jmp
arpl
dec
add
adc
xor
sbb
je
movsl
add
insl
xchg
cmp
ljmp
push
jmp
adc
loopne
pop
into
and
adc
lret
jae
mov
xor
daa
das
xor
lret
and
mov
push
sub
iret
and
mov
push
cltd
push
sbb
add
lcall
xchg
les
out
fnstenv
push
or
sbb
jecxz
fidivrl
cmp
dec
es
mov
xchg
add
sbb
gs
push
xlat
out
xor
pop
dec
xbegin
dec
out
mov
insl
mov
nop
jns
addb
int3
loop
mov
inc
bound
dec
movsl
xor
mov
xchg
icebp
sub
xchg
pop
sbb
out
loopne,pt
stos
jle
or
cmpsb
push
dec
sub
mov
ljmp
pop
lods
cmp
pop
xchg
adc
inc
fldcw
push
xchg
jae
jecxz
mov
in
pop
sub
scas
shrb
jge
scas
pop
repz
xchg
enter
cmp
cmp
ret
fildll
dec
flds
mov
loope
cmp
adc
mov
jae
cmpl
inc
fisttpl
mov
pop
loope
fnsave
xchg
cmp
push
je
pop
es
insl
inc
xchg
dec
nop
sub
cltd
cmpsl
sub
push
sub
lods
inc
add
out
ljmp
lock
outsl
ret
jnp
inc
mov
mov
cmpsb
xor
xchg
pop
adc
xchg
or
testl
mov
jge
ret
sahf
orl
fdivl
enter
scas
rcl
dec
xor
mov
pop
adc
daa
push
mov
sbb
es
adc
jae
int3
push
mov
rorl
sbb
aad
in
jecxz
icebp
faddl
cltd
dec
push
mov
cld
pop
pop
mov
lock
mov
popf
xor
stc
xchg
mov
mov
dec
pop
sbb
popa
rcrl
js
aaa
ret
add
fistpl
testb
mov
and
push
jp
sti
in
dec
mov
pop
fstpt
cmp
mov
xchg
mov
mov
add
mov
fsubr
cli
inc
lock
insl
daa
decb
pop
test
in
cmc
xor
add
mov
scas
or
pop
je
dec
jb
jl
mov
stos
and
bound
mov
into
adc
arpl
inc
push
in
inc
inc
mov
xchg
pushf
ljmp
iret
lahf
pusha
add
cli
xchg
loope
adc
lods
mov
aam
inc
data16
rcrb
call
das
cld
fsubs
add
cld
xor
pop
jp
ud2
out
xchg
xor
setb
pop
or
and
pop
stos
mov
pop
cmp
dec
aaa
mov
and
and
cld
xchg
jb
iret
flds
and
cmp
inc
and
hlt
aam
mov
push
xchg
dec
test
cwtl
xchg
pop
mov
jl
or
mov
xor
mov
cs
inc
pop
popa
jl
xchg
arpl
push
add
fdivrs
into
mov
dec
imul
lods
xchg
mov
aaa
movsl
rcrl
iret
dec
scas
jne
cwtl
push
xor
testl
jg
imul
out
mov
ja
xchg
daa
xchg
cmovno
test
xor
daa
test
ds
test
mov
mov
jmp
add
inc
cmp
out
ret
mov
jae
aam
insl
jp
int3
fwait
sti
fwait
hlt
sub
sbb
push
push
xchg
cs
adc
dec
scas
insl
cmpps
shrl
dec
int
dec
fchs
sti
andl
fs
mov
fucom
push
push
stc
test
jbe
add
jp
popf
and
popf
jbe
in
jl
sub
dec
shl
je
ljmp
dec
dec
in
add
lcall
xor
dec
inc
push
loope
jno
in
lret
pusha
adc
insb
notb
nop
daa
lods
stos
jno
mov
sub
daa
sub
pop
sub
dec
stos
inc
jg
xchg
in
ds
enter
mov
call
jl
pop
dec
push
pop
xchg
mov
xchg
clc
xchg
test
push
inc
push
out
jl
push
jmp
fimuls
fists
test
ja
and
sub
fidivrs
cltd
jl
xchg
cmp
ret
xchg
lret
ss
mov
stos
nop
inc
push
jnp
jbe
dec
cmp
pop
enter
mov
loopne
sbb
orb
out
aam
or
add
xchg
xchg
shll
jbe
sub
mov
dec
cmp
ficomps
lods
fldl
inc
push
inc
inc
jno
mov
cmp
in
lcall
std
insb
cli
push
iret
inc
and
ja
sbb
xor
push
movsb
pop
pop
sub
mov
test
or
mov
test
inc
dec
sub
data16
xchg
outsb
adc
cmp
outsl
inc
das
cmpb
sbb
mov
sbb
xor
ljmp
imul
inc
repz
jge
enter
sahf
mov
ja
ss
cmpsb
lock
shrl
lret
lds
or
cmp
cmpsb
or
inc
int
loope
out
mov
les
xchg
mov
cmovs
or
es
mov
jl
arpl
fstpt
jae
adc
ss
popl
frstor
jle
lea
mov
push
jmp
scas
mov
dec
sar
outsb
cmp
outsb
add
out
orb
and
jb
push
mov
mov
pop
cmc
popa
cli
sarb
bound
mov
popf
sub
dec
dec
xor
iret
sub
mov
mov
xor
call
in
xchg
addl
data16
xchg
or
fildl
daa
cli
dec
and
dec
shlb
dec
cwtl
repz
pop
adc
test
stos
sub
aad
insl
and
orb
aas
sub
sbb
fsubrl
out
sahf
les
mov
iret
xor
stos
pop
aaa
mov
mov
jecxz
gs
jnp
push
jle
in
xorb
or
shrl
push
test
cmc
stos
mov
or
adc
xchg
pop
jb
xchg
movsl
testb
orb
je
es
scas
pusha
mull
icebp
sbb
das
push
cld
push
mov
mov
cmpsl
dec
loopne
mov
andl
jmp
mov
dec
pop
adc
in
sti
inc
mov
inc
imul
das
ljmp
daa
sbb
insb
mov
iret
insl
test
lock
cmc
mov
pop
loop
mov
sub
aad
push
cs
movsb
jmp
push
and
loopne
dec
out
adc
je
push
bnd
pop
stos
inc
dec
out
pop
outsl
adc
inc
repz
sbb
sub
xor
sbb
push
push
int3
adc
lret
in
cmpsb
in
push
dec
movsl
loopne
dec
xchg
xchg
repz
mov
xor
dec
mov
xchg
cld
inc
sbb
dec
pushf
outsl
hlt
mov
shlb
ret
shll
sbb
or
sbb
rol
jns
dec
insb
icebp
loope
fsubs
push
xchg
in
les
cmpsl
ds
imul
fnstsw
mov
pop
imul
scas
andb
mov
popa
sub
gs
push
xchg
imul
imul
fsubl
push
jecxz
fmull
jb
jg
scas
xchg
es
mov
jne
jne
fldl
adc
cli
cs
imul
push
xor
fiadds
sub
fsubrl
es
fstpt
into
rclb
andb
add
repnz
mov
shrl
jecxz
jo
adc
jge
xchg
mov
je
xchg
popa
push
in
adc
ret
imulb
inc
fs
data16
mov
inc
mov
test
cmc
test
mov
repz
and
cltd
cs
push
push
lods
mov
add
push
mov
cmpsb
out
mov
push
xor
sub
cmp
addr16
dec
push
es
movsb
cmp
xor
in
adcl
mov
fistps
andl
cmp
xchg
mov
xchg
aaa
lods
xchg
and
stos
push
sbb
cs
sbbb
or
test
push
imul
dec
jmp
aam
hlt
jae
mov
ret
push
xchg
mov
aam
pop
sbb
jl
loopne
xchg
lcall
xchg
leavew
dec
pop
ret
lock
shll
cmp
insb
test
inc
push
inc
cmpb
shl
or
cltd
std
fisubl
in
adc
fiaddl
mov
lahf
adcl
pop
push
mov
sub
sbb
mov
adc
outsl
sarb
xor
fstpl
inc
stos
pop
js
push
lcall
insl
push
mov
rorb
jg
sub
mov
ret
sbb
jno
inc
leave
leave
xchg
add
jl
arpl
dec
scas
push
clc
or
add
cmpb
jo
mov
mov
push
or
rcrl
shrl
mov
scas
push
inc
mov
mov
outsl
jnp
sub
aas
jmp
cmpb
mov
sub
dec
push
jecxz
mov
pop
scas
lret
pop
shl
mov
cmpsl
mov
mov
lea
nop
je
cmp
mov
std
xlat
xchg
pop
ret
mov
clc
adc
lahf
sub
and
cmpsb
fcoms
out
les
mov
aad
cs
add
sarb
pop
sbb
insb
int3
arpl
jo
into
leave
sub
rcr
cmpsl
sbb
push
popf
lods
mov
roll
in
cmp
leave
pop
faddl
arpl
adc
pusha
pop
roll
popa
daa
aam
je
js
dec
add
in
je
lahf
push
xor
dec
and
gs
out
xor
jmp
lret
pusha
mov
push
push
mov
outsb
mov
mov
lods
sub
dec
cmp
xor
push
rcll
jnp
fistpl
xlat
movsb
imul
sub
adc
lss
repnz
sub
cmp
cmp
dec
popf
mov
dec
testb
jnp
imul
or
cmp
jp
push
push
jl
addr16
xchg
pop
leave
js
dec
sbbl
inc
ja
lahf
stos
dec
je
xchg
xchg
leave
mov
movsb
pop
int3
gs
pop
pusha
pop
xchg
roll
shll
xor
loope
in
xor
loop
out
outsb
and
repnz
mov
xor
mov
lea
shl
sub
push
fwait
mov
int3
mov
fwait
cs
insb
es
stos
pop
out
fdivl
cli
xor
fnstenv
push
push
in
sbb
sbb
int
and
out
scas
aas
xchg
js
je
cltd
imul
mov
lods
in
or
push
xchg
ret
mov
sub
arpl
cli
sbb
xor
mov
stc
test
repz
xor
sub
cli
and
mov
clc
pop
or
mov
jge
loope
aas
xchg
dec
add
xor
insb
xchg
adc
fildl
iret
cmp
cmp
incl
mov
xchg
fnstenv
sub
jb
mov
add
fbstp
push
aaa
push
pop
cmp
fcompl
jge
leave
das
adc
call
ja
lds
ljmp
jo
loop,pt
sub
jecxz
mov
fsub
xor
movb
or
lea
jp
xchg
and
fucomi
aas
mov
rolb
lret
jne
xchg
cmpsl
push
loopne
cmp
push
jmp
sbb
mov
andl
mov
clc
push
jecxz
aaa
iret
loopne
repnz
call
adc
sbb
and
ds
xor
fucomip
xchg
int
fadds
imul
in
in
sahf
sbb
mov
fsubrl
repnz
cmc
lret
xor
xchg
add
dec
mov
cmpsl
sub
xchg
mov
mov
sbb
push
push
dec
aas
lret
movsb
sti
clc
mov
inc
lahf
mov
lcall
push
mov
ror
loop
mov
test
jmp
push
push
sahf
jne
push
mov
into
xor
inc
and
or
lock
pushf
xlat
mov
sbb
inc
ss
int3
mov
jge
mov
push
mov
jge
mov
aad
inc
mov
fidivl
jno
xor
loope
shl
daa
adc
jecxz
inc
adc
push
jae
mov
call
add
mov
pop
dec
dec
outsb
loop
lods
enter
jno
test
mov
subb
inc
inc
in
cli
mov
xor
and
subb
cld
xor
in
mov
cs
xor
mov
adc
adc
sbb
mov
mov
pop
push
cwtl
aas
mov
imul
sub
out
xor
sbb
cld
jno
xor
mov
lods
push
ficoml
dec
xor
imul
arpl
inc
or
lods
imul
fnstenv
mov
inc
lcall
in
das
dec
push
or
js
pop
jb
pop
mov
pop
xchg
cmp
mov
push
ret
xchg
jno
idivb
loope
scas
adc
js
or
jns
mov
mov
cmp
add
negl
decb
orb
add
sub
shrl
dec
or
mov
lea
xchg
out
and
ja
sbb
push
xsha256
cmpsb
xchg
iret
stos
mov
pop
fs
add
stc
sbb
cmp
sbbb
arpl
dec
shr
pushf
dec
lds
in
jl
cmp
inc
outsb
fwait
lahf
mov
cmp
lahf
lods
mov
push
push
mov
xor
roll
rol
dec
xchg
cmp
inc
roll
inc
out
add
leave
xor
out
pushf
fstpt
push
inc
cmpsl
cli
sbb
out
dec
lods
jo
mov
add
mov
test
pop
cltd
out
push
and
push
dec
jno
stc
ficompl
or
xor
sbbl
sub
push
jl
cli
rclb
daa
sbb
pop
mov
cltd
outsl
lret
mov
frstor
add
stos
test
pop
push
bound
sarl
pop
fimuls
sub
and
mov
push
xor
jmp
mov
iret
lret
and
pop
inc
aaa
rcll
pop
xor
xchg
sub
add
lea
adc
inc
sub
mov
dec
mov
fnstcw
lods
in
inc
xor
pusha
pop
icebp
aas
outsb
xor
mov
mov
mov
mov
outsb
fs
add
movsb
repnz
outsb
orb
lds
data16
cwtl
aaa
dec
xor
mov
aas
pop
xor
std
push
sbb
xor
inc
xlat
inc
pop
lcall
push
pop
insl
pop
lock
mov
xchg
cmp
push
outsb
pop
pop
mov
subl
test
ss
movsl
cmc
push
test
add
pop
xchg
std
cmp
aam
and
popa
add
movaps
popa
mov
inc
les
out
test
ret
mov
fwait
pop
jmp
add
fisubl
xor
jle
clc
add
sbb
dec
testl
dec
adc
mov
pop
insl
testb
rorb
sub
sub
lcall
xor
xchg
push
mov
xlat
mov
in
pop
mov
push
movsl
push
hlt
mov
fnstcw
jge
cmpsl
jo
outsl
dec
sbb
jg
dec
pop
scas
mov
ss
xchg
xor
loope
imull
jns
jmp
sbb
inc
inc
inc
adc
jl
fs
shr
lods
push
jns
fld
lcall
gs
push
sbb
sub
stos
pop
repz
jnp
dec
mov
fxch
scas
sbb
fsubs
mov
mov
inc
fiadds
data16
lods
fs
aas
out
push
enter
push
insl
test
add
pop
pop
arpl
in
push
xchg
sub
cmp
in
jmp
or
in
mov
fwait
es
cmpl
jmp
push
jmp
lret
or
out
add
scas
das
adc
lret
xor
xor
xchg
mov
dec
aas
mov
mov
lret
ds
adc
adc
xor
push
cmp
jno
mov
fsts
arpl
mov
and
dec
mov
pop
mov
cmp
jecxz
add
repz
sbb
pop
lea
mov
mov
sbb
pushf
jecxz
sub
aaa
jns
mov
sub
add
push
fdiv
mov
das
addr16
jno
and
les
sub
data16
jbe
mov
scas
loope
mov
out
test
cmp
aad
sub
adc
pop
cltd
das
cmp
mov
out
push
daa
push
sub
cmp
mov
or
pusha
loop
ss
inc
sbb
stos
xlat
sbb
test
pcmpeqd
lods
pop
and
push
lahf
clc
push
cs
lret
ret
int
mov
iret
insl
xchg
lahf
daa
enter
push
out
xor
fnstenv
aad
sub
hlt
pop
jno
mov
mov
push
test
sub
inc
adc
addb
imul
add
push
or
xor
int
popa
xor
daa
mov
psrad
int
loop
dec
pusha
in
mov
xchg
xor
out
jo
inc
fisubrs
sub
dec
inc
cltd
xchg
pop
out
out
push
sbb
loop
pop
pop
lcall
and
xor
jne
fdivrl
aam
stos
bnd
in
add
push
add
cmp
sbb
pop
push
cmp
mov
popa
int
sbb
pop
mov
les
mov
xchg
fwait
icebp
adc
aas
mov
cmp
push
mov
lock
dec
ja
subb
xchg
jae
pop
insb
cmp
and
stc
mov
jg
xchg
adc
pop
xchg
mov
sbb
mov
arpl
sbbl
clc
pop
outsb
sbb
sbb
aaa
notb
mov
push
push
popf
loope
lea
shlb
es
rorb
push
jnp
pop
addr16
xlat
loop
xor
adc
xchg
mov
and
adc
gs
ja
xor
ds
jo
xor
enter
mov
xchg
sub
jno
and
push
inc
movhps
insl
call
sub
xor
lods
pop
fmull
icebp
aaa
dec
sub
insb
cmp
popf
jae
imul
jno
mov
test
push
sub
jle
xchg
test
sbb
push
cmpsb
movsb
iret
scas
inc
mov
jle
jl
nop
mov
sbb
push
lahf
jbe
lret
enter
lods
inc
xchg
pop
mov
cs
xchg
push
nop
leave
mov
dec
sbb
aas
aad
jo
adc
mov
mov
scas
jno
pop
xor
sbb
test
mov
pop
inc
faddl
sub
into
fs
sub
mov
roll
add
add
push
push
leave
push
dec
ds
pusha
stc
mov
fildl
or
dec
add
mov
stos
cmp
dec
cwtl
adcl
mov
or
in
jo
xchg
out
test
outsl
shrb
xchg
xorl
clc
andl
pop
shl
lret
xlat
dec
adc
stc
test
push
leave
out
out
ljmp
sahf
push
fisttpl
movsl
inc
loopne
test
out
ds
and
xor
push
repnz
push
lods
mov
fidivrs
js
js
popf
shrl
leave
movzbl
imul
into
cmp
aam
test
lods
mov
daa
inc
cli
xor
jo
insl
pushf
dec
repnz
jno
pop
imul
das
dec
jo
inc
push
mov
arpl
mov
xchg
enter
in
lahf
and
ror
enter
and
hlt
pop
sbb
add
movsl
pop
das
push
es
mov
mov
test
xchg
dec
out
sbb
xchg
std
push
pop
adc
sbb
or
shl
or
jns
loopne
testl
popa
or
ljmp
mov
stc
nop
adc
cmp
or
js
mov
add
xchg
test
ds
dec
or
inc
cltd
or
push
lock
lds
adc
mov
or
imul
fists
add
aas
cmp
test
pusha
mov
mov
mov
mov
sub
xchg
jge
sbb
push
fiadds
scas
test
fildl
aad
and
or
pop
sarb
dec
or
jge
out
mov
sbb
je
jo
mov
inc
mov
mov
dec
jecxz
mov
push
mov
xor
mov
test
pop
push
and
into
jge
inc
xchg
push
movsb
cli
shl
jmp
lcall
lock
mov
push
adc
xlat
xchg
jo
pop
das
loopne
sbb
mov
xchg
stos
mov
mov
xchg
cmp
sub
int3
movsb
out
cld
popf
call
add
jp
icebp
insb
push
adc
dec
outsb
inc
add
cwtl
imul
pop
imul
adcl
mov
out
xchg
inc
mov
sub
or
pop
xchg
mov
jnp
test
adc
push
inc
mov
mov
cli
jb
sub
sbb
fsqrt
bts
lahf
aad
int
leave
je
stos
pop
mov
dec
std
cmp
sub
ret
notb
shrb
mov
enter
xchg
cmp
enter
insl
in
inc
ficomps
xor
sbb
mov
mov
out
inc
ds
dec
shlb
adc
inc
push
jns
push
lcall
stos
mov
add
insb
addb
nop
mov
into
testb
xchg
ss
sbb
inc
fs
iret
jecxz
or
inc
dec
add
int
add
mov
push
add
xor
daa
sbb
cmp
inc
sub
add
fimull
dec
cmc
ja
push
test
repnz
inc
ficoms
addl
outsl
mov
out
int3
xchg
mov
dec
lds
in
das
cs
loope,pt
int3
movsl
lock
jb
dec
sbb
adc
xchg
out
mov
lods
inc
sti
and
je
ret
pop
sbb
movsl
dec
in
pop
mov
lcall
cld
outsl
insb
cmp
and
sbb
add
xlat
sbb
xor
dec
loop
jns
mov
je
mov
or
ret
dec
out
push
in
mov
cld
dec
push
cs
aam
sub
mov
push
pop
sbbb
test
mov
mov
sub
cmp
inc
aaa
inc
cli
xchg
jmp
sub
mov
ds
sbb
sub
or
push
or
stos
xchg
xor
ljmp
gs
inc
in
imul
fidivs
sbb
mov
and
xchg
and
mov
cli
fldcw
sbbl
shl
mov
iret
popf
cmpsl
ret
lds
insl
loopne
in
dec
ficompl
icebp
repz
and
inc
and
dec
scas
imul
int3
lock
sbb
out
js
cmp
pop
dec
adc
xchg
add
loop
lret
lods
sub
outsb
dec
fcoms
or
mov
cmpsl
sbb
pop
out
std
rep
aad
ret
dec
cmc
loop
shr
flds
mov
fiaddl
add
inc
sahf
xor
in
scas
mov
push
insl
mov
sar
dec
fucomi
mov
mov
arpl
fadds
mov
loop
add
incb
loopne
mov
and
test
in
push
cs
lret
jbe
sbb
scas
inc
inc
in
jo
sub
adc
sarb
push
mov
test
rorl
dec
fildll
fistps
enter
data16
push
add
shrl
mov
pop
fs
lret
stos
inc
xor
popa
into
test
clc
jp
jne
mov
imul
cs
xchg
sub
xchg
in
pop
xchg
cmp
jmp
pop
adc
lcall
in
clc
adc
or
xor
fs
jo
lcall
mov
int3
cmpsb
insb
sbb
mov
stc
and
sub
mov
push
jb
fisttps
mov
movsb
xor
jmp
cmp
loop
pusha
sub
mov
test
loopne
sbb
shl
push
pop
cmpsb
pop
testb
mov
test
add
push
int3
sub
popa
outsb
xchg
test
pop
fnstenv
fnstenv
int
or
pop
and
push
mov
shrl
mov
lock
jno
xor
call
std
xlat
mov
mov
inc
xor
decl
pop
xchg
inc
or
loope
aad
scas
inc
adcl
int3
fs
inc
jmp
js
or
xor
popf
cmp
lahf
ret
lods
inc
fdivrs
lret
bound
inc
and
sub
mov
clc
mov
cli
pushf
stos
in
inc
push
push
ljmp
sbb
fnsave
jb
gs
and
in
cmp
mov
mov
jbe
xor
addr16
push
cld
push
jbe
lret
daa
mov
test
inc
xchg
or
adc
es
xor
fiadds
mov
clc
lret
adcl
pop
test
or
or
enter
into
lock
mov
pop
out
mov
jg
mov
add
mov
rorb
or
rcrl
mov
adc
out
out
xchg
sub
enter
lret
dec
stos
dec
jl
lods
push
sbb
add
mov
outsl
fildl
mov
fldenv
mov
cmpsl
add
mov
pop
popf
cmp
repz
out
test
outsl
sti
jns
add
es
mov
movsb
mov
loopw
cltd
mov
mov
inc
arpl
pop
and
jge
arpl
lods
and
mov
or
jb
xchg
mov
int3
fs
movsb
inc
js
in
dec
push
adc
aad
xor
fsubrs
xor
lret
jno
mov
ret
sbb
lods
ja
jo
insb
jae
push
pop
jno
and
retw
or
lret
loope
xor
repnz
leave
jne
mov
icebp
mov
test
addl
call
adc
repnz
fs
es
cmp
adc
pop
out
ljmp
cld
je
sbb
movsl
in
cmc
stos
inc
out
jmp
lret
sub
xchg
mov
add
push
sbb
mov
mov
adcb
scas
inc
sahf
test
xor
aaa
int
addr16
sbb
aaa
push
fdivrp
outsl
repnz
cmpb
mov
jl
arpl
sbb
cmp
call
adcl
or
push
dec
lea
dec
movsl
lahf
out
shl
cmp
push
outsb
adc
cmp
and
scas
cmp
icebp
ret
outsb
das
es
in
daa
xchg
mov
imul
sbb
ror
lock
inc
out
inc
out
loop
xlat
in
outsb
push
dec
loop
push
mov
jg
and
call
xor
mov
adc
enter
das
inc
xor
push
sahf
or
lods
addr16
fwait
sub
add
test
jmp
aas
fisttps
lcall
xor
sarb
mov
test
pop
int3
xchg
fistpll
out
jl
dec
loopne
xor
xchg
fidivl
sbb
inc
fs
or
mov
pop
mov
pop
addr16
cmp
and
loopne
cwtl
cmp
and
adc
aaa
xchg
sub
or
push
leave
xchg
or
add
negl
pop
dec
addr16
jp
popa
jnp
js
shrl
popa
sbb
mov
push
pop
xchg
movsl
cmp
xlat
mov
int
sti
xchg
inc
into
sub
daa
dec
sahf
in
mul
out
negl
jp
pop
add
out
sbb
nop
push
movsb
and
mov
add
cs
or
insl
sub
dec
rep
jecxz
ficomps
push
clc
sbb
popl
jnp
dec
cltd
cs
mov
jb
fwait
pop
add
cmpsb
push
repnz
and
mov
mov
loop
pusha
push
or
daa
sbb
leave
test
xchg
out
and
das
cld
xlat
cmp
sahf
sub
imul
int
push
in
xor
jb
xorl
popf
testl
gs
daa
in
mov
inc
std
shl
aas
sub
pop
push
testb
mov
sub
xor
push
mov
test
shlb
mov
jae
dec
mov
sbb
shr
lahf
stos
inc
push
push
sbb
jge
bnd
hlt
insb
arpl
repz
mov
xchg
in
cmp
dec
les
sbb
lcall
insb
pusha
neg
jbe
push
jb
andb
add
rolb
pop
push
or
insl
aas
in
in
adcl
or
mov
je
sub
or
jecxz
push
insl
inc
cltd
jno
lea
push
lds
sbb
and
into
xchg
add
adc
mov
and
js
cmpsb
pop
test
mov
and
loope
ds
fnsave
mov
push
xchg
out
jg
xchg
mov
or
jmp
pop
shll
pusha
sbb
push
rcrl
lds
cmp
sub
cwtl
cs
xchg
xor
enter
mov
mov
cmpb
or
and
clc
loopne
push
sahf
out
loop
das
push
mov
pop
mov
lcall
es
addr16
push
jp
jl
idivb
pushl
cmpsb
loopne
aas
cwtl
lret
sti
mov
addr16
mov
add
out
xor
pop
out
xorb
mov
orb
jmp
enter
or
cmpsb
inc
jge
ds
and
into
pop
movsb
add
dec
insb
add
pop
xchg
push
xchg
adc
xchg
test
adcb
dec
js
je
mov
xor
add
int3
movsb
mov
insb
dec
or
and
and
mov
mov
fwait
mov
les
popa
out
jl
jno
in
outsl
jle
mov
inc
movsl
push
fidivrs
ss
xor
adc
test
pop
in
jbe
aad
in
dec
dec
decl
pop
les
or
shrb
sub
mov
jnp
icebp
inc
and
daa
mov
and
xchg
lahf
mov
out
mov
popa
sbb
push
leave
icebp
mov
xor
loope
mov
pop
in
call
mov
jl
test
jge
mov
mov
cmp
push
jmp
loop
and
filds
imul
sbb
andl
movsl
int3
test
mov
mov
repz
int3
mov
jle
pop
das
and
pslld
das
daa
popl
or
mov
int
int3
sub
movsl
in
mov
mov
int3
in
jecxz
roll
int
out
scas
push
out
jle
popf
cmp
inc
insb
mov
inc
ficompl
pop
outsb
addr16
add
inc
cld
pop
inc
arpl
dec
or
fnstcw
ljmp
sub
and
insb
fistpl
or
cmp
and
pop
clc
cmp
jg,pn
inc
xlat
add
xchg
add
lcall
pop
je
test
rclb
addl
mov
bound
inc
lods
inc
js
nop
mov
cltd
xchg
pop
mov
ds
fldl
dec
ds
into
dec
bound
push
bound
into
or
lahf
cmp
pop
cmp
imul
push
out
cmp
out
hlt
data16
push
push
pop
mov
std
out
popa
add
testb
jg
inc
sbb
stos
enter
lret
mov
or
and
mov
in
jns
pop
repz
push
sub
push
jnp
inc
dec
mov
sbb
fisubrl
je
mov
rclb
sub
mov
sub
loop
fcoms
adc
pop
and
xchg
mov
xchg
arpl
mov
shlb
pop
fildll
inc
arpl
pop
inc
lret
mov
mov
int3
and
cli
imul
pop
inc
fiaddl
xor
mov
jge
xor
jp
sub
outsl
lods
lea
push
fsubl
adc
daa
mov
pop
mov
pop
stc
nop
cli
fwait
cld
loope
sbb
outsl
pop
in
xchg
repnz
jbe
add
add
dec
fnstsw
rcrl
dec
inc
sub
cmp
and
insb
popf
push
fucomi
dec
enter
pop
cmc
cmp
inc
xchg
movsl
ja
inc
dec
pusha
sub
dec
or
int
pop
fldt
dec
arpl
cmc
cmpsb
cmp
clc
dec
aas
dec
cmpsb
std
push
push
pop
movsb
nop
mov
pop
fpatan
jno
arpl
jo
test
xchg
mov
test
cli
imul
ljmp
es
rcl
xchg
adc
cltd
ret
aaa
adc
sbb
xchg
out
push
dec
sahf
or
cmp
and
inc
cld
xor
les
sub
lahf
jmp
ret
push
lds
pop
jmp
or
jmp
mov
push
shlb
pop
out
or
push
mov
dec
leave
jo
je
loopne
push
or
cld
movsb
shlb
or
imul
sub
in
arpl
mov
sti
push
jno
test
push
or
popf
repnz
das
and
jne
cmp
mov
cmpsb
and
enter
cmp
ja
xchg
mov
pusha
mov
mov
adcb
popa
nop
ljmp
jne
shl
xchg
push
lods
stos
shrl
nop
adc
mov
andb
pop
pop
cwtl
loope
sar
lods
div
push
mov
stc
fidivrs
in
hlt
mov
jno
aaa
mov
lods
aas
hlt
lods
inc
les
dec
shl
xlat
sub
mov
xchg
mov
ja
ljmp
cmpsl
sbb
mov
sub
inc
mov
pop
outsb
fdivr
outsl
decl
sub
into
mov
add
jp
jnp
and
pop
pop
adc
add
popf
ja
or
pop
jns
andb
lods
in
add
imul
rcr
repnz
outsl
and
pop
lock
mov
dec
into
push
hlt
inc
push
xchg
sub
and
push
pop
fisubrs
mov
cmp
loopne
out
pushf
test
mov
or
in
in
xchg
sti
mov
fldz
sbb
lds
idiv
jmp
test
cmp
sbb
dec
getsec
and
insl
or
cmp
add
cmpsb
imul
ffree
sbb
rol
or
aaa
sbb
pop
inc
and
insl
ss
fists
mov
addr16
jno
jbe
aad
loope
lahf
iret
and
cmp
out
adc
add
or
in
xor
lret
sbb
pop
cs
scas
mov
push
cmc
js
cmpsw
push
outsb
adc
jp
test
imull
jb
jmp
mov
xchg
adc
cmp
adc
sub
pop
cmp
fsubrl
cmp
pop
pop
arpl
in
push
dec
mov
es
or
push
and
stos
pop
aaa
loop
leave
mov
mov
fisubrl
enter
dec
jmp
outsb
add
cmp
aad
popa
inc
aad
cli
push
sahf
xor
ja
mov
jl
and
cmp
or
sub
and
lods
stos
xchg
pop
les
into
mov
dec
fdivrs
mov
lcall
into
gs
sbbb
or
cmc
pop
lds
cmp
jl
mov
xlat
lea
push
dec
mov
mov
shrb
sub
push
or
cld
add
shlb
jge
cmpsb
out
inc
ficomps
leave
xor
mov
cmpb
jno
push
ljmp
jno
and
push
jae
or
rcll
jnp
cmp
clc
cmp
cmp
or
jp
enter
mov
pop
push
cli
pop
add
xor
lea
pop
jmp
ret
or
and
adc
cmpsb
mov
test
mov
mov
in
inc
sbb
mov
gs
pop
adc
dec
xchg
test
clc
popf
add
jg
xchg
mov
je
mov
mov
sbb
push
push
fucom
in
rol
repz
shlb
int
jle
ss
mov
push
mov
xchg
cmp
dec
negb
xchg
sub
test
aaa
ljmp
in
bound
ficompl
insb
shll
dec
test
mov
aad
sar
cmpsl
cmp
sub
adc
in
xor
fisttps
adc
out
mov
mov
js
in
decb
iret
inc
leave
adc
rorl
sbb
insl
pop
imul
in
test
jp
test
or
cmp
cmp
xchg
orl
mov
fucomp
andl
pop
push
cmp
clc
into
outsl
xor
xor
jp
jmp
adc
cmp
inc
popa
pop
fbstp
pop
flds
cld
mov
xor
ret
popf
pop
xchg
jne
sub
es
and
dec
aas
pusha
std
mov
rcrb
xchg
xor
dec
adc
adc
jno
imul
popa
mov
mov
notb
ss
ss
or
fimuls
lret
pushf
inc
idivb
jne
sahf
cld
dec
dec
dec
push
adc
xor
gs
adc
and
ds
pop
dec
ficoml
stc
or
and
mov
xor
dec
and
orb
repnz
sub
movsl
in
dec
ja
cmp
adc
adc
push
jg
fs
scas
xor
jle
jge
ss
pushf
mov
cmpsb
cmp
test
call
sbb
push
shll
pop
push
or
divb
sahf
lods
mov
scas
or
ja
iret
sub
push
jb
xchg
fists
int3
aas
nop
subl
jae
ja
aaa
shll
fcomps
call
mov
insl
inc
les
inc
je
aaa
insl
loop
sbb
pop
mov
je
dec
leave
lahf
dec
pop
cs
fwait
cmp
daa
outsl
out
cmpsb
repz
mov
hlt
addr16
inc
xchg
jns
xor
mov
sub
mov
hlt
dec
out
xchg
mov
dec
mov
loopne
dec
mov
lods
js
clc
lea
xchg
jae
sbbb
in
insl
and
push
or
int3
xchg
sub
jmp
fwait
xchg
loopne
nop
loop
inc
mov
js
adc
ds
stos
mov
fstpt
mov
ret
sbb
dec
jb
mov
push
push
in
int3
jp
cmp
fildll
mov
fs
jp
ja
dec
pusha
mov
sbb
or
sbb
dec
cmpsb
mov
pusha
pop
jo
push
cmp
je
sti
mov
shl
icebp
dec
pusha
jle
rcl
mov
lds
mov
out
xor
psrad
movsb
dec
test
xor
push
dec
pop
inc
push
notb
ret
ljmp
adc
leave
lahf
sub
out
mov
mov
fs
push
xchg
fadds
sbb
in
pop
or
cmp
push
movsb
mov
xor
xchg
inc
icebp
bound
and
outsb
incl
loopne
adc
je
cld
dec
dec
dec
inc
js
lret
sarb
push
pop
lock
aaa
pop
cwtl
mov
jb
xchg
outsl
pushf
push
dec
mov
mov
rol
sub
pusha
loop
stc
or
add
movsb
rolb
repz
loop
adc
or
xchg
add
or
bound
xorb
subb
sub
dec
cs
clc
add
out
sbb
xchg
mov
in
jp
dec
push
hlt
mov
lods
jo
xor
pop
push
adc
or
mov
sbb
nop
cmp
movsl
sbbl
call
xchg
sbb
mov
in
and
std
cmc
dec
push
pop
cmp
xchg
xor
imul
arpl
loop
cmpsl
subl
fnstsw
push
jbe
lock
jle
cmp
cmp
sbb
mov
into
outsb
std
pop
je
nop
cmpb
stos
push
es
mov
xchg
popf
lods
adcb
mov
sbb
lret
aas
fistpl
ss
push
xor
xchg
xchg
inc
iret
mov
icebp
andl
push
repz
pop
add
mov
daa
movsl
hlt
aad
std
mov
cs
xor
pop
int3
mov
xor
mov
sub
insb
pop
faddp
jl
hlt
repz
push
xchg
sub
sbb
inc
in
adc
in
xchg
and
adc
xchg
leave
sbb
push
popf
insl
and
mov
scas
sub
inc
bound
xor
cmpsb
ds
ror
sub
mov
shll
lds
and
outsb
dec
movsb
pop
das
xchg
cmp
sbb
jae
jmp
loopne
pop
movsb
nop
loope
fdivl
pop
data16
out
test
test
inc
fdivl
lret
dec
outsb
sub
loope
cld
mov
inc
pop
push
sub
mov
addr16
pushf
lds
scas
push
arpl
insl
movsb
adc
lds
fmuls
xchg
mov
mov
out
sbb
repnz
inc
js
xor
push
fnsave
pop
push
xor
lods
out
repnz
shll
lret
mov
movsb
ljmp
xchg
push
sbb
sbb
pushf
xor
and
idivb
lods
cmpb
jnp
cmc
mov
jge
adc
push
das
mov
call
movsl
fbstp
repz
aas
loop
sub
out
add
das
and
pusha
arpl
mov
dec
adc
into
loopne
push
push
and
fwait
test
xor
ud2
cltd
das
sbb
ds
out
loope
fimull
push
imul
test
add
mov
pop
sbb
jp
adc
mov
fldt
notb
mov
cmp
negb
cmpsb
add
dec
aad
lret
leave
xchg
mov
pop
aas
nop
mov
inc
pop
pop
lods
or
test
dec
pop
stc
jp
sbb
movsl
dec
or
sbb
xchg
and
adc
mov
gs
mov
test
sbb
adc
pop
cmpsb
shlb
xor
dec
es
pop
insb
or
sbb
xchg
stos
cmp
jns
mov
fcmovb
aas
ja
jae
push
or
loopne
or
repz
cltd
xor
std
xchg
sub
cmc
cmp
je
mov
scas
push
int3
jg
int3
xchg
test
enter
in
cmpsb
sbb
roll
cmp
in
shll
push
push
gs
test
insb
out
lahf
insl
push
insb
xchg
adc
pop
sbb
int3
fnstenv
stos
adcl
inc
xchg
dec
xor
in
fnstenv
sbb
sub
mov
push
lods
scas
out
push
mov
pop
mov
ja
fistpl
fiaddl
and
dec
pop
xor
cltd
jo
jp
adcl
rorl
xor
adc
dec
jle
cmc
mov
mov
mov
xchg
jecxz
movsl
cmp
adc
pop
call
out
add
sub
lret
mov
cld
ret
cmpsl
ret
jbe
sub
xor
js
push
test
push
and
ret
add
addb
or
sbb
cmp
xchg
mov
and
mov
inc
sbb
inc
mov
fdivrl
outsb
jge
ret
loope
pop
testl
sbb
iret
push
inc
rol
in
xchg
dec
out
inc
pop
pop
lahf
mov
je
iret
movsl
add
ja
sti
rcrl
mov
push
mov
cmp
pop
pop
ljmp
push
add
out
arpl
cmp
dec
sbb
add
hlt
cmp
out
push
pop
scas
mov
sbb
cs
cmpsb
xchg
dec
or
mov
insb
sub
mov
lods
dec
pop
mov
add
jp
enter
pushf
xorl
movb
clc
mov
add
and
mov
gs
pop
dec
mov
sbb
jo
addr16
and
cld
pop
sub
inc
popf
je
repnz
pop
shrb
adc
mov
test
loop
xchg
mov
mov
jmp
inc
pop
scas
mov
dec
lret
bound
pop
dec
das
pop
arpl
icebp
mov
add
or
sbb
out
stos
mov
andb
imul
call
adc
or
mov
and
ret
xchg
dec
jno
in
add
mov
jmp
jmp
test
jg
xor
cmp
mov
fidivrl
int
mov
add
push
pushf
add
inc
je
ja
subl
push
int
mov
mov
inc
ficompl
push
xor
js
mov
and
cwtl
imul
jo
jmp
jp
jne
push
mov
xchg
xor
mov
int
xchg
pop
scas
mov
lret
cli
jno
enter
iret
and
dec
leave
pop
out
push
jge
push
jae
mov
adc
insl
in
call
mov
scas
mov
daa
outsl
divw
jge
out
std
or
or
add
push
push
mov
adc
pop
pop
and
mov
fisubrl
dec
leave
sbb
dec
dec
push
push
repz
jecxz
pop
repnz
cwtl
and
test
or
ss
imul
outsb
sub
dec
lds
loopne
cld
dec
inc
imul
mov
sahf
clc
mov
dec
push
in
mov
test
fstpl
xor
pop
cld
mov
repz
test
xorl
out
jmp
add
jle
pusha
fldl
pop
out
sbb
loopne
sub
add
test
lods
sub
pop
icebp
add
xchg
movsb
ss
call
xchg
and
jle
xchg
fdivl
scas
and
mov
inc
inc
or
cmp
lahf
popa
pushf
in
mov
or
push
pusha
jns
repnz
pusha
ret
xor
rolb
mov
or
dec
dec
cmp
jmp
repz
aad
lock
lret
xchg
jno
cltd
lods
and
ret
test
mov
loopne
push
loop
jae
jns
and
add
push
adcl
and
mov
call
cs
mov
xchg
xchg
cs
sub
iret
ja
mov
adc
mov
jo
push
in
adc
sub
mov
and
inc
dec
jns
cmpb
jne
repz
push
dec
icebp
fdiv
aas
rcll
ret
mov
cmp
jno
std
divb
sub
sbb
aaa
inc
jge
in
push
orl
or
xchg
sub
jg
fdivp
scas
mov
js
test
in
hlt
mov
ja
das
pop
push
fld
or
sub
mov
mov
xor
push
in
scas
push
or
in
fucomip
leave
pop
jmp
pop
xchg
or
mov
rol
jb
lods
imul
mov
rol
shrb
out
sbb
outsb
mov
mov
iret
shrl
out
in
std
xchg
push
mov
push
stc
adc
fs
popl
sahf
add
push
push
sbb
cld
mov
roll
xchg
iret
push
mov
sbb
ja
enter
jae
ds
lods
inc
and
int
loop
lcall
mov
ret
xchg
hlt
jmp
adc
shlb
bound
hlt
out
mov
clc
and
mov
fiadds
mov
repz
cmp
adc
cmp
push
out
test
pop
mov
lods
or
mov
fldt
or
and
inc
pop
pop
adc
mov
in
xor
negb
and
les
jbe
arpl
mov
aaa
mov
push
mov
cmp
lret
inc
mov
or
in
mov
xor
push
jb
bound
xchg
in
jge
outsl
scas
push
cltd
je
dec
imul
cld
xchg
scas
add
pop
xchg
fs
lret
enter
cmp
jl
push
mov
pop
dec
rcrb
arpl
dec
lcall
mov
push
mov
push
push
or
loope
scas
ljmp
or
data16
aas
movsl
lds
into
data16
jne
cs
enter
imul
pushl
jnp
mull
and
test
xchg
mov
imul
lea
imul
jle
xor
sbb
xor
loope
add
cmp
inc
testl
sub
jecxz
dec
mov
ficoms
imul
pop
shrl
cmpsb
cmp
jnp
les
pushf
popa
xor
inc
push
push
inc
jmp
aaa
inc
and
mov
jge
adc
nop
pusha
add
fs
jl
pop
decb
cmpsb
imul
fstps
lahf
push
jno
sbb
ds
xchg
cmp
test
test
or
subl
aas
push
int
jle
push
stos
es
dec
and
pusha
bnd
je
adc
cld
xchg
inc
lods
mov
jecxz
cmpl
fdivs
mov
bnd
icebp
mov
mov
mov
push
cs
jg
jae
inc
movsb
and
data16
pop
scas
mov
leave
jmp
js
or
aam
mov
jecxz
and
movsl
mov
pop
dec
in
iret
adc
mov
jno
pop
cmc
inc
xchg
cltd
mov
sbb
push
cmp
sub
add
in
popa
fnstenv
pop
daa
mov
mov
mov
cmpsb
les
pop
xchg
mov
out
test
jecxz
scas
sarl
mov
loop
mov
and
and
nop
bound
sbb
pop
test
stos
dec
stc
clc
insl
jge
jp
lea
lahf
fwait
inc
fdivr
faddl
sbb
sbb
push
movsb
sarl
sbb
cwtl
add
dec
sahf
call
ljmp
lods
mov
jg
bound
rclb
leave
sub
sub
fwait
sbb
fisubrs
roll
rcrb
sar
pushw
mov
xor
sub
cld
sub
outsb
leave
hlt
hlt
mov
xor
sbb
xchg
rorl
in
mov
out
addr16
mov
adcl
mov
jnp
mov
mov
enter
and
mov
adc
stos
cmp
cmpsb
in
mov
jg
popa
or
inc
or
mov
sbb
decl
xor
ljmp
dec
or
mov
push
mov
sbb
icebp
dec
icebp
out
add
xchg
jmp
push
jae
xor
jge
int3
pop
sti
fsubs
mov
stc
jmp
sti
mov
jl
cmc
mov
sbb
cmpsl
sbb
subb
repnz
cs
mov
cmpsl
jno
or
adc
dec
mov
in
adc
push
add
xchg
dec
jp
jmp
out
xchg
pavgb
mov
fisttpll
dec
mov
fst
in
add
fcmovnbe
push
xchg
test
shrl
xchg
js
mov
xor
in
inc
inc
sub
xor
in
lret
bound
and
add
in
jo
push
je
xchg
icebp
mov
imul
in
test
aam
rcrb
and
fincstp
sub
loopne
jge
roll
loopne
push
xchg
adc
and
and
iret
rcll
mov
mov
ss
cmpsl
test
fcmovnb
dec
fcoms
mov
pop
cmp
outsl
push
es
mov
lret
xor
sahf
fistpl
in
daa
push
jo
or
sub
clc
or
enter
gs
add
pop
in
orl
mov
sbb
sarb
popa
mov
ss
push
inc
xchg
sub
hlt
pop
hlt
push
mov
mov
adc
pushf
xor
es
popa
ja
rclb
arpl
xor
out
enter
and
fcoms
mov
clc
push
leave
test
fwait
cmp
and
inc
and
outsb
push
fisttps
mov
shr
lods
inc
pop
hlt
jl
push
test
insb
sub
das
pushf
pop
cmp
test
loopne
movsl
lods
inc
adc
lret
cmp
iret
cwtl
cmp
xor
fnstcw
inc
inc
jge
sub
inc
add
inc
mov
xchg
iret
aaa
pop
mov
mov
inc
pusha
mov
js
mov
insl
xchg
sub
lret
or
sub
sbbb
int3
xchg
cmp
test
clc
int3
addr16
and
loopne
xchg
out
inc
dec
shll
xchg
leave
arpl
push
jne
adc
ljmp
ret
jg
insl
shr
fisttpll
nop
dec
es
fidivl
js
push
divb
sbb
push
repz
popf
or
fnstenv
sub
adc
jp
pop
cld
mov
scas
arpl
cwtl
xchg
rclb
pusha
xor
add
push
out
test
mov
idivl
shrb
jae
sarb
push
out
cltd
sbb
jne
in
mov
jmp
pop
lret
add
andl
stos
ljmp
push
or
mov
or
xor
test
fcmovbe
ret
mov
or
pop
test
cmc
aaa
jb
bound
and
pop
mov
in
pushf
jo
rol
dec
mov
xor
fdivrs
sub
jo
cmp
in
shlb
add
cltd
jne
cmp
into
fisubrs
mov
popf
jno
jecxz
xchg
and
jge
inc
xchg
popa
jp
sbb
or
iret
or
insb
add
dec
add
rorb
push
pop
mov
xor
sbb
fiadds
sbb
xor
mov
pop
sbb
shrl
loop
jae
shr
mov
push
and
inc
pop
stos
cli
or
aas
stc
repnz
pusha
cld
incb
flds
roll
loopew
xchg
pop
sbb
cmp
mov
cwtl
jne
cmp
mov
or
mov
leave
inc
sbb
xor
sbb
push
test
mov
mov
cmpsb
testb
mov
or
add
scas
xor
es
xor
mov
xlat
push
jo
loop
xor
sub
mov
or
mov
xor
ja
div
and
push
stos
push
insb
loop
push
clc
inc
fs
xchg
adc
cmp
mov
fs
and
push
sbb
and
lcall
xchg
cmp
mov
pop
in
cs
sbb
cmp
nop
add
sbb
ja
adc
in
mov
insb
add
lock
loop
mov
xorb
repz
clc
rclb
mov
mov
pop
mov
mov
lea
xor
repz
shlb
mov
movsl
fiadds
push
jnp
pop
xor
inc
mov
outsl
push
and
and
lea
cld
in
mov
fldl
pop
sbb
ds
pusha
jno
push
sub
adc
in
inc
adc
ss
xchg
sbb
addr16
add
xchg
out
js
les
test
sbb
enter
pop
push
sub
into
es
or
enter
mov
insl
ljmp
dec
jae
sbb
xor
mov
mov
lock
xchg
out
pushf
push
mov
fld
pop
or
in
or
js
jns
xor
xchg
test
int3
pop
adc
cmp
mov
push
mov
aad
xchg
decb
push
gs
xchg
jb
cmpb
sub
loop
enter
dec
cmp
fcoms
dec
sub
cld
push
aas
xor
inc
pop
test
push
push
nop
js
cli
xchg
lea
mov
scas
sbb
js
testl
xchg
mov
pop
repnz
in
scas
mov
out
inc
sbb
shlb
or
cmp
xchg
mov
mov
inc
mov
jo
movsbl
mov
mov
pop
cltd
xor
push
inc
jge
dec
xchg
stc
out
jo
sub
pop
mov
dec
fbld
aaa
cmpsl
cmp
jmp
mov
sbb
testb
mov
cmp
sahf
test
cmc
int3
rclb
jne
gs
cmp
bound
outsl
jge
fsubrs
jo
in
scas
cmp
mov
pusha
bound
xor
test
ljmp
cmp
inc
cltd
xor
push
std
mov
cli
enter
mov
or
rcrb
leave
or
xor
xchg
iret
repz
test
pop
jne
rorb
pop
push
mov
shll
xchg
outsl
jo
inc
pop
test
in
mov
aas
stos
xor
jno
add
cmp
adc
or
nop
pop
mov
or
fsubr
push
cmp
xchg
aas
fldcw
cwtl
shrl
ja
aad
out
xor
mov
adc
stos
jnp
pop
and
movsl
test
add
xchg
mov
test
xchg
mov
cmp
jb
cwtl
das
sub
cmp
adcl
pop
mov
pop
aaa
scas
or
jnp
insb
and
mov
in
sub
push
loopne
scas
push
les
pop
push
cwtl
push
sbb
cmp
mov
fidivl
addb
or
push
popl
mov
shll
xchg
push
inc
flds
pop
pop
cmp
iret
adc
push
pop
push
xor
push
add
test
xchg
lods
jbe
cs
mov
lods
and
jecxz
call
xchg
push
jmp
icebp
sub
shll
pushf
pop
out
mov
fcomps
icebp
xchg
and
mov
jg
sub
pop
rorb
test
jle
dec
xlat
inc
fmuls
add
adc
sbb
fldpi
jecxz
and
xchg
add
or
lahf
sbb
nop
adc
dec
push
out
xchg
sahf
push
cs
sbb
cmp
out
dec
dec
sbb
push
sub
test
sbb
popf
dec
arpl
adcl
add
sub
xchg
mov
aam
out
and
xchg
xchg
xor
loop
fdivp
jmp
push
mov
inc
lea
cmp
inc
mov
dec
dec
test
fwait
dec
xlat
movsl
cmp
outsb
dec
dec
loope
mov
int3
sbb
fidivl
xchg
jae
out
mov
add
or
outsb
mov
ret
sbb
jb
cmp
into
notl
test
inc
xchg
ret
adc
sub
sub
dec
in
mov
jle
push
insb
ss
jecxz
fwait
cmpsl
aaa
add
std
test
sub
test
repnz
fbld
inc
or
aaa
imul
enter
cmp
xchg
test
sbb
mov
leave
xor
je
sbb
cmpsl
xchg
mov
push
insb
js
into
xchg
jmp
mov
mov
rcrl
daa
xor
repz
insl
loopne
cltd
xor
xlat
mov
jl
clc
shrl
out
dec
push
mov
test
xchg
mov
jnp
and
in
adc
inc
daa
loop
pop
call
pop
xlat
cmc
push
stos
cmp
mov
call
dec
add
add
mov
hlt
push
mov
daa
xchg
cltd
xor
pop
movsl
arpl
push
lahf
inc
fstl
mov
xor
out
pop
scas
loopne
cmp
push
push
jb
andl
or
xor
jne
jo
mov
cltd
mov
or
inc
fcmovbe
cmc
pop
out
scas
inc
mov
bound
push
addr16
pop
test
lret
bound
jecxz
enter
mov
dec
popl
add
stos
inc
ret
add
xor
insl
in
pop
sahf
frstor
repz
pop
icebp
add
add
cmp
aas
inc
mov
sub
jne
mov
jb
jle
pop
adc
dec
scas
sbb
mov
push
lods
xchg
sti
outsl
mov
add
jbe
je
mov
mov
cmp
mov
add
push
jl
xchg
mov
jo
push
push
ljmp
mov
std
cmp
scas
cwtl
jno
stos
bound
push
jmp
sub
sbbl
mov
idivb
aam
pushf
add
xchg
cs
xchg
mov
jns
dec
scas
in
cmp
divl
stos
andl
add
xor
stos
cwtl
dec
cmpsb
sbb
faddp
jle
outsb
fidivrs
and
mov
xor
dec
xor
dec
cwtl
cld
sbb
mov
pop
jb
jmp
mov
jmp
mov
pop
stos
ficompl
imul
mov
or
jl
sbbl
and
loopne
outsb
ljmp
adc
and
mov
lcall
pop
adc
cwtl
test
cs
mov
pop
inc
push
lock
xchg
pop
add
cmp
aad
test
mov
mov
jns
jle
fwait
mov
imul
repnz
in
cmp
stos
sub
mov
push
nop
out
add
les
sbb
mov
arpl
rcll
or
push
ljmp
dec
out
mov
push
out
or
stc
jge
shlb
cmpsb
fidivs
fidivs
add
add
inc
ficomps
out
repz
out
iret
sub
fcoms
cwtl
das
sub
mov
test
scas
cli
and
xor
es
ret
fbstp
mov
add
pop
ljmp
xchg
out
call
jb
lea
pop
xlat
stos
mov
jg
xor
das
loop
incl
icebp
scas
sub
inc
mov
push
leave
cmc
mov
out
cmp
lret
pop
cmpsl
cvtps2pd
stos
enter
xor
mov
or
cmpsb
mov
mov
sbb
xchg
inc
or
push
cmp
push
std
jo
push
pop
andb
out
ja
insb
lret
jne
cmpsl
jno
sub
push
jmp
test
out
inc
loop
jp
cmp
out
xchg
sub
sbb
fs
mov
sbbb
mov
in
xor
ficompl
jns
dec
jbe,pt
add
jecxz
mov
loope
scas
jns
add
xchg
jb
pop
xor
mov
clc
shl
adc
push
les
sarb
fnsave
push
fidivrs
add
pop
pop
loope
add
into
mov
fimuls
out
lods
sahf
xor
mov
jl
outsl
xchg
sbb
out
and
pop
arpl
mov
push
push
fistl
mov
jb
xor
faddl
fists
adc
lods
add
scas
call
jp
aaa
into
jg
outsl
es
out
inc
mov
pop
jno
mov
fsubrl
orb
shlb
call
mov
fildl
xor
int3
ljmp
or
fildll
ljmp
ljmp
test
inc
xchg
push
jg
enter
dec
cmc
inc
jnp
out
mov
and
cmpsb
sti
mov
or
xor
mov
lock
inc
fnsave
shlb
repnz
dec
rorb
add
ret
mov
ret
in
push
les
jbe
ja
cmpsl
stc
lret
mov
sahf
in
mov
pop
dec
push
stc
jge
inc
jb
pusha
test
in
rcrb
mov
jo
movsl
add
jo
mov
jae
leave
sub
aas
andb
or
add
movsb
xor
fs
shl
leave
pusha
lcall
outsb
in
movb
mov
mov
mov
xor
das
push
mov
dec
push
inc
fdivrs
sub
sub
int3
xchg
mov
lret
clc
icebp
mov
cwtl
sub
nop
loope
lods
dec
mov
aad
sahf
lods
ret
and
insb
cli
pushf
ja
dec
test
inc
loop
mov
or
lods
lds
add
out
inc
sub
pop
in
js
dec
mov
inc
mov
jbe
call
std
xchg
int3
pop
sbb
clc
in
sbb
nop
sbb
and
leave
push
mov
or
mov
or
lock
ljmp
pushf
cli
pushf
roll
icebp
loope
xchg
cmp
addl
imul
iret
sub
cmp
or
adc
ficompl
sub
fimuls
cmp
add
es
fmuls
stos
pop
sub
jns
lret
stos
loop
inc
clc
pop
enter
push
mov
movsb
es
xchg
sarl
add
and
ret
repz
jb
mov
pusha
jg
inc
ficoml
jecxz
aam
popa
sub
adc
nop/reserved
dec
mov
incb
jnp
andl
add
inc
lcall
sbb
pusha
mov
insl
gs
popa
femms
hlt
addr16
cld
push
stos
cmp
sbb
repnz
sub
push
jbe
pop
sub
mov
and
and
ja
mov
aad
and
xor
mov
xor
push
or
xchg
xor
or
xchg
dec
cmp
movb
cld
mov
mov
outsb
inc
or
les
dec
mov
cmp
clc
jle
arpl
mov
xor
dec
xor
push
cmp
lods
cli
mov
cmp
push
scas
inc
cmp
clc
imul
jne
dec
jle
or
int3
arpl
rorb
jge
mov
push
aaa
jecxz
mov
pop
xor
xchg
adc
cltd
xor
cmp
sti
jbe
xchg
pop
push
cmp
stos
inc
cmp
jmp
or
test
dec
mov
cltd
push
lods
out
xchg
add
pusha
notl
or
sub
mov
stos
dec
or
push
push
xor
and
repz
mov
cltd
movsb
cmp
xchg
jae
xchg
adc
ljmp
push
push
xchg
and
fnstenv
push
in
test
outsb
jl
xchg
mov
dec
sub
mov
inc
das
xor
cmp
lds
mov
stos
mov
fcmove
mov
fists
cmp
mov
pushf
daa
or
pushf
cmp
sub
cs
jp
cmpsl
faddl
in
xor
sub
test
pop
inc
adc
fcmovnb
and
clc
add
sbb
push
inc
xor
subb
dec
movsb
jne
xlat
jb
push
or
and
dec
enter
sub
sahf
lods
jge
mov
stos
xor
adc
push
stc
dec
test
stc
nop
fistpll
push
ret
pop
lret
mov
aas
lock
xchg
jbe
jmp
jge
inc
stos
mov
popf
lods
fwait
jnp
mov
loopne
cli
rcrb
mov
xchg
jl
push
out
pushf
push
hlt
mov
mov
rep
add
mov
repnz
call
mov
cmpsb
mov
pop
mov
mov
scas
xchg
jg
jnp
push
in
hlt
adc
js
mov
jno
jo
mov
int
adc
divb
outsb
pusha
fs
leave
push
fidivl
push
loopne
lods
cmc
clc
outsl
add
mov
in
or
push
pop
sub
outsb
sub
movsb
cmp
pop
ret
test
outsb
pop
sub
fldl
pop
mov
xlat
inc
jecxz
in
jae
push
movsl
push
lea
or
mov
sub
inc
je
cs
cmp
sbb
add
test
push
adc
cltd
mov
out
mov
fcmovne
sub
iret
jae
movsl
mov
xchg
mov
or
arpl
repz
xlat
outsb
pop
xor
pop
or
cmc
sub
sub
dec
lods
popf
jo
jo
jne
imul
jge
and
jbe
fcmove
fwait
test
sarb
imul
pusha
and
pop
ljmp
push
in
orb
cli
mov
mov
repnz
add
stc
mov
ret
fs
call
xor
push
stc
jo
pop
rorb
jno
dec
inc
clc
out
xchg
sbb
mov
or
ret
adc
lcall
pop
ret
inc
lock
xor
pushl
sbb
mov
dec
int3
push
inc
andl
into
enter
or
mov
pop
lea
pop
ss
mov
pop
aas
das
jmp
dec
xchg
add
test
xor
dec
stos
int3
mov
mov
push
cld
lcall
push
leave
addl
jecxz
mov
into
cmp
push
addr16
jbe
xlat
in
cmp
dec
pop
aad
test
pop
shrb
into
mov
in
fildl
dec
push
or
imul
test
mov
pop
hlt
insl
or
jl
cmp
cmp
and
mov
sbb
arpl
sub
fwait
leave
inc
loopne
dec
stos
push
bound
fwait
adc
pop
add
mov
add
sub
ret
lock
in
ficoms
out
decb
shll
push
pop
and
and
div
mov
xor
fucomp
pop
sub
inc
or
fdivrs
pop
notb
aaa
jge
imul
fldt
aad
sahf
sub
and
enter
pop
bound
jae
jnp
sbb
push
lea
aaa
pop
out
push
jno
imul
mov
mov
fidivrl
std
mov
repz
mov
dec
cmc
sub
push
repz
mov
mov
xchg
je
js
cli
mov
cmp
adc
sti
mov
push
mov
cmp
push
lret
mov
idivb
and
pop
je
popf
in
outsl
sarb
jo
ss
aam
ja,pt
cmc
fucomp
cmp
pop
hlt
inc
pusha
sub
push
in
xchg
sub
nop
mov
mov
inc
pop
in
jge
dec
mov
xchg
enter
mov
push
inc
rolb
adc
add
xor
push
outsl
loop
lahf
mov
or
popf
dec
push
dec
or
xchg
sub
or
pop
cmp
imul
sub
jge
sbb
aam
ret
outsl
rcrl
mov
movsl
shl
pop
jo
test
in
fistl
pop
je
les
sub
loope
push
and
in
xor
cli
and
push
fdivr
mov
sbb
jno
les
repz
mov
movsl
aad
loop
dec
loop
jge
mov
lea
jp
scas
repnz
sub
out
cmp
push
dec
sbbb
je
stos
hlt
sub
shl
xor
sbb
out
arpl
or
sub
mov
or
fdivrp
sbb
bound
cltd
adc
fadds
xor
sub
es
jg
sbb
lods
jp
mov
add
sub
pop
hlt
mov
pop
movsl
rorl
jp
popa
inc
ret
cmp
mov
mov
push
mov
mov
dec
dec
add
cmp
in
sub
rcrl
shrb
sub
mov
dec
fldl2t
test
pop
cltd
xor
sbb
mov
out
add
add
jecxz
outsb
stos
shrl
or
mov
adc
jl
rcrl
sub
pop
pusha
scas
jg
mov
pusha
inc
jecxz
out
fimuls
cmp
data16
adc
rorb
dec
lcall
push
inc
jl
cmpb
fmull
ret
aas
xor
and
pusha
mov
mov
hlt
mov
sub
shrl
mov
enter
ffreep
inc
cld
push
shr
sbb
mov
aaa
inc
xor
mov
call
fdivrs
lods
out
pop
adc
inc
hlt
imul
out
shr
mov
mov
insl
push
mov
mov
xor
xor
lcall
mov
insb
lret
loop
lret
fwait
rcrb
in
insb
ret
xor
adcb
int
into
pop
add
js
mov
push
jmp
mov
pop
std
add
jbe
jp
cld
rol
fstl
xchg
jb
pop
les
push
cmc
or
imul
sub
jle
push
xchg
push
mov
xchg
xor
imul
mov
jmp
push
adc
inc
xor
push
repz
and
push
push
stos
mov
movsl
cmp
loopne
adc
adc
icebp
insb
jb
or
xor
jae
js
jno
rorb
add
jnp
add
push
cmpsl
mov
les
jo
fcmovnu
add
adc
mov
mov
cmc
insl
lods
jnp
aad
cmp
mov
iret
iretw
mov
test
pop
inc
andl
inc
ljmp
insl
mov
xchg
or
dec
or
sbb
cmpsb
mov
int
sbb
gs
jno
mov
loope
sbb
mov
adc
jne
push
cmp
xchg
sahf
push
sbb
cmp
inc
mov
add
adc
stos
or
in
sub
jle
pop
call
cmpb
inc
mov
fs
mov
mov
das
rclb
scas
xchg
or
pop
adc
dec
pop
inc
cmp
out
and
iret
daa
dec
or
dec
mov
mov
sub
and
push
pop
sbb
jg
jne
lods
lahf
mov
cmpsb
js
add
mov
ss
out
das
mov
out
outsb
xchg
mov
cmc
int3
or
das
imul
lret
sbb
and
push
out
mov
cld
aas
mov
stos
outsb
sbb
aas
add
mov
pop
fs
stc
nop
js
jl
mov
fsubrl
or
lods
xchg
mov
sub
add
es
push
fsubrs
pusha
mov
lret
jp
gs
mov
call
add
pop
cmpsl
xchg
in
sahf
nop
arpl
mov
mov
mov
mov
jp
mov
aam
and
mov
and
adc
mov
cmp
hlt
punpckhdq
lods
push
mov
adc
lods
xchg
lods
adc
jge
stos
xlat
inc
mov
dec
cmp
inc
or
cli
sbb
in
sbb
sbbl
in
mov
xchg
and
pop
iret
or
fxam
std
dec
sub
push
lods
mov
andb
ja
mov
arpl
inc
repnz
pop
jno
scas
jl
lds
xchg
lret
in
ds
outsl
jmp
mov
dec
scas
and
rorl
xchg
add
lret
notb
pop
test
pop
push
je
push
push
cli
out
xor
push
movsb
adc
xchg
mov
push
mov
clc
pop
outsb
push
or
hlt
dec
pop
test
mov
mov
pminsw
imul
push
sarl
sub
outsb
out
xchg
jg
out
divb
dec
pop
test
dec
and
xchg
xlat
lods
lds
cltd
push
mov
and
arpl
inc
insb
or
icebp
add
push
mov
movsb
movsb
cwtl
aaa
jle
aad
aam
adc
out
test
mov
std
push
jbe
mov
ja
inc
jmp
sub
cmpsb
add
mov
ss
test
or
jge
pop
test
mov
dec
mov
pop
aam
mov
xlat
sub
xchg
pop
mov
lret
fnstenv
mov
inc
pop
and
mov
or
aam
xchg
sti
int
dec
push
pop
push
or
out
stos
shr
pusha
add
xor
je
aaa
and
xchg
dec
dec
or
xchg
cmp
pxor
jb
cld
shlb
sahf
shrb
mov
sub
mov
iret
add
dec
or
jno
pop
pop
and
cmc
fs
sub
flds
sub
dec
and
mov
shl
out
cld
popf
jecxz
add
sahf
inc
mov
out
adc
pop
sub
lcall
cmp
or
aad
loope
ja
cmp
cs
add
dec
sbb
cmpsl
push
pop
out
cld
in
addr16
and
aad
cmpsl
inc
rep
inc
and
adcb
dec
sub
hlt
cmp
es
scas
dec
cmc
xor
and
inc
cmp
inc
jp
mov
jmp
cmp
int
jno
push
xorb
and
and
pop
dec
daa
fs
inc
mov
fisubrl
dec
add
das
call
sti
push
cmpsb
lcall
jae
test
push
and
outsb
popf
xor
popa
fdivp
enter
jnp
mov
ljmp
add
xor
cmp
or
aad
mov
push
add
in
in
pop
or
sbb
test
mov
sub
cmp
inc
xchg
ss
lret
adc
mov
adc
outsb
fwait
push
in
pushf
pop
out
inc
dec
cltd
pop
int3
fidivrs
mov
stos
xchg
push
aas
mov
movsl
popa
cmc
daa
adc
cli
dec
mov
bound
out
push
jbe
mov
sbb
scas
inc
cmp
xchg
mov
push
arpl
mov
jl
jmp
das
imul
outsb
jne
jo
scas
fdivrl
adc
fimuls
jb
rcrl
dec
imul
ss
sarl
sbb
or
lods
mov
xchg
loope
shl
mov
ret
push
shll
mov
lds
mov
sub
cltd
add
mov
cmp
out
adc
ret
lds
test
mov
dec
pushf
dec
add
adc
addr16
lcall
bound
scas
ds
pop
fimuls
mov
push
repnz
mov
cmpsb
lods
lea
into
movsb
sub
in
pop
mov
ud1
adc
xor
lock
arpl
es
pop
push
and
mov
inc
jae
or
inc
nop
enter
pop
decl
test
scas
dec
pop
fldt
and
dec
outsb
lret
subb
andb
lods
insb
jp
hlt
jle
hlt
mov
sbb
outsl
add
xor
lcall
pop
inc
jmp
cmp
test
in
aad
ljmp
lcall
test
movsb
icebp
mov
add
xor
movsl
push
push
jno
fisubl
and
mov
mov
adc
outsb
push
dec
shrb
arpl
pop
jno
loope
xchg
push
roll
inc
add
pop
aaa
mov
ljmp
or
jo
pushf
jae
into
mov
jl
jmp
cli
xchg
dec
int3
lahf
data16
insl
sub
stos
and
and
sti
lahf
mov
ss
jo
add
inc
xlat
mov
aas
pop
outsl
in
repnz
outsl
add
dec
mov
jle
aam
sbb
pop
dec
lods
cmc
dec
aad
arpl
pop
dec
aas
push
jge
xchg
xchg
push
cltd
sub
add
out
sub
pop
repz
and
adc
xlat
mov
xor
push
jno
dec
aad
adc
dec
cli
fdivrl
pop
repnz
sarb
mov
out
sbb
out
mov
dec
jg
scas
inc
lret
mov
in
test
pushf
lock
push
movsl
xchg
mov
sub
xchg
and
hlt
aam
call
in
xor
testl
sti
orb
adc
insb
inc
mov
outsb
in
jle
decl
ljmp
arpl
xchg
ljmp
adc
rcl
push
sub
hlt
mov
mov
std
mov
hlt
or
adc
fdivr
frstor
daa
xchg
sub
test
pop
mov
popa
lods
push
sub
jo
pop
sti
mov
insl
pushf
xor
rcrl
imul
imul
arpl
roll
fimuls
leave
xor
xor
das
or
and
rorl
or
popf
cmpsb
cs
xlat
sbb
jge
fnstenv
data16
inc
jne
push
xchg
mov
fnstcw
mov
adc
inc
mov
xchg
aam
rorl
movsl
ffreep
shrb
pop
add
mov
xchg
sbb
pop
jg
mov
push
rorl
cmp
and
pusha
sbb
cli
enter
clc
in
gs
push
mov
adc
outsb
jb
mov
loop
or
add
js
push
lahf
jbe
inc
test
pushf
outsl
dec
mov
or
nop
sbb
jnp
pop
add
jp
inc
pusha
pushf
jg
call
lret
mov
cmp
mov
mov
ss
andb
inc
arpl
test
or
imul
insl
cmpsb
and
sti
push
enter
clc
mov
sbb
mov
mov
mov
cmp
jo
mov
insb
divl
jne
or
cmp
adc
ljmp
jg
push
int
inc
cmc
into
loopne,pn
fisubs
mov
cs
inc
mov
nop
pop
sub
or
cwtl
dec
sahf
mov
mov
adc
das
popf
loopne
pop
out
jl
jnp
jg
bnd
sahf
ret
pop
nop
and
pop
test
cmp
ss
ss
sbb
ljmp
jnp
add
mov
jb
xorb
cmp
xorb
loop
addr16
push
mov
sahf
lods
cli
xchg
adc
jae
cli
out
scas
inc
push
mov
push
adc
cmpsl
add
test
inc
dec
mov
lret
xchg
out
pop
sbb
fdiv
bound
and
add
es
or
adc
lds
mov
hlt
push
inc
fldl
push
xchg
cli
gs
mov
lods
push
mov
xor
ss
and
das
jae
lahf
lret
cmc
dec
ljmp
jg
packssdw
jb
push
jae
scas
jno
pop
cmp
outsl
shlb
push
notb
mov
iret
and
ret
jl
shrb
leave
inc
pop
dec
push
lock
mov
xor
push
inc
mov
cmpsl
push
inc
std
ds
fistl
xlat
cmpsb
jb
shlb
and
inc
in
icebp
push
mov
jne
lcall
aad
cld
clc
cmc
stc
and
orl
mov
sbb
sbb
cmp
and
das
and
daa
out
jp
and
inc
or
sarb
cs
add
or
push
stos
dec
push
add
test
inc
cmp
xor
fwait
jge
mov
add
imul
adc
cmp
out
xchg
cli
fidivs
mov
jnp
enter
enter
mov
mov
ret
leave
jmp
inc
adcb
and
lods
inc
jae
sub
push
jno
cli
loop
xchg
push
xchg
movsb
xchg
ret
and
cmpsl
imul
push
add
addr16
adc
test
xor
cmc
xor
add
sbb
in
fldl
cmc
rep
jmp
inc
sbb
cmp
add
mov
lods
sub
shlb
cmp
loope
push
dec
inc
push
or
in
ficoml
movsl
xchg
adc
lock
arpl
adc
cmp
jecxz
pop
mov
adc
xchg
rorl
sbb
mov
add
lods
dec
mov
lods
xchg
xor
call
jb
sahf
push
add
pop
out
lods
hlt
ljmp
test
mov
mov
or
lret
push
adc
jecxz
ja
lcall
xchg
add
loopne
mov
lds
xor
pop
mov
jbe
gs
dec
mov
sbb
subl
xor
inc
hlt
sub
cmpsb
test
pop
xchg
add
fwait
add
test
sti
and
shlb
xchg
mov
sub
movsl
fisubrl
or
ss
adc
rolb
and
add
push
in
xor
mov
mov
mov
ljmpw
stos
dec
ljmp
xor
incl
mov
push
mov
sbb
push
notb
push
sub
lahf
jp
jmp
and
jae
push
sti
iret
fnsave
jns
mov
jg
mov
cmc
adc
daa
leave
enter
cmp
sbb
mov
lret
rcl
outsl
sti
xchg
loop
dec
popa
xchg
notl
xor
mov
push
lcall
and
mov
add
jno
jns
fs
and
add
sbb
aaa
dec
add
dec
movsl
ret
jp
sub
out
mov
or
stos
push
bound
xchg
pop
in
cmp
lock
fistl
mov
push
sub
mov
mov
lds
or
or
sbbb
pcmpeqb
ss
inc
outsb
add
in
cltd
nop
daa
pmaxsw
loopne
lock
inc
popa
jecxz
shlb
imul
insl
adc
cmp
lds
mov
aas
arpl
lea
int
pop
popa
jns
cmp
inc
cwtl
call
cld
mov
lock
in
mov
jno
leave
push
unpcklps
dec
adc
mov
popa
cmpsb
jne
sbb
dec
ds
sub
fisttpl
cmpsb
outsl
shr
aad
fabs
test
notb
add
mov
dec
scas
push
aas
mov
jmp
jecxz
xchg
mov
add
jmp
sub
ficompl
daa
mov
jo
mov
sbbb
mov
int
pop
decl
pop
in
arpl
test
cmp
jmp
icebp
aaa
lahf
push
jno
fs
fadd
mov
lea
inc
sti
loopne
add
scas
add
cmpsb
js
gs
loopne
sahf
shrl
loop
es
sahf
push
cwtl
dec
in
bound
iret
jg
mov
das
in
mov
cmp
jecxz
pop
adc
gs
push
iret
fwait
xor
mov
pop
xchg
adc
lcall
out
pop
jbe
or
sub
adc
out
dec
cmpsb
bnd
stos
adc
jl
push
add
pop
fwait
fwait
xchg
sub
call
js
xchg
xchg
pop
sbb
xchg
stos
push
mov
cmpsb
and
rclb
inc
clc
xchg
jns
and
cli
loopne
cli
mov
sbb
xchg
dec
ss
fsubr
mov
cmp
fidivrl
shlb
adc
inc
shlb
sub
push
and
push
ret
adc
xchg
movsb
repz
cmpsb
inc
hlt
xchg
sub
ficoml
or
add
jae
addr16
in
repnz
scas
inc
xchg
idivl
push
lret
dec
mov
jne
pop
push
into
push
jo
or
rcll
jecxz
push
sub
mov
pop
repnz
push
inc
push
mov
fsubs
movsb
repz
push
fucomip
test
cwtl
jo
lret
repz
addps
and
cmp
repnz
cmp
and
push
add
add
inc
inc
inc
cwtl
pop
dec
mov
mov
lds
lcall
dec
rol
pop
pop
jp
xlat
lcall
push
pop
mov
pop
nop
roll
mov
subb
or
jecxz
mov
mov
pop
jle
aad
lods
pop
icebp
fisttpll
ret
xor
add
mov
push
int3
test
xchg
sub
jg
aas
mov
jo
and
xlat
mov
lea
inc
jo
cmp
in
push
mov
clc
and
cld
xor
push
xchg
add
rcrb
mov
repz
orl
aas
xor
sbb
or
bound
addl
or
xchg
jle
or
xor
test
jecxz
mov
dec
cmp
scas
add
subb
insl
movl
aam
jle
add
mov
mov
daa
sbb
push
add
fimull
mov
jp
int
mov
push
jle
dec
mov
pusha
pop
fwait
ja
mov
mov
inc
mov
pop
push
rorl
movsb
mov
sbb
cmp
inc
outsb
pop
stos
jnp
cmpb
scas
decl
call
mov
fbld
inc
adc
bound
jp
stos
and
add
sub
push
aam
xor
mov
out
nop
xchg
mov
hlt
in
out
bound
mov
jo
in
jb
repnz
or
shrb
inc
inc
hlt
mov
popa
cli
xchg
add
cltd
push
je
sbb
invd
cmpsb
push
imul
in
sti
push
xor
or
lods
jl
int3
mov
pop
inc
pop
ljmp
call
sub
loopne
xchg
stos
inc
lret
push
into
sahf
aas
sub
lods
fmuls
test
xor
enter
in
loopne
fsts
lahf
or
jp
outsb
mov
insb
jle
jle
je
dec
aaa
int
push
cld
leave
or
inc
fs
test
xchg
ss
push
dec
and
lds
push
notl
rolb
sub
hlt
jg
repnz
outsb
sbb
es
cmp
xor
out
xchg
xor
mov
movnti
je
iret
popa
dec
dec
cmp
push
sbb
pop
aam
push
mov
loop
dec
and
mov
mov
mov
imul
call
xor
or
push
cwtl
pop
aas
imul
and
test
scas
les
mov
mov
je
in
adc
jne
mov
or
das
in
mov
insb
iret
add
mov
xor
mov
insb
decl
xor
jb
out
mov
dec
gs
in
popa
fdivl
mov
lcall
mov
xor
sub
lds
jne
mov
scas
pop
xchg
xchg
hlt
inc
jecxz
jno
and
jo
lock
lods
cmp
fsubrp
scas
out
clc
rcl
in
insb
ds
loopne
xchg
pusha
lahf
repz
dec
scas
cmp
ficoms
sbbl
mov
je
or
nop
out
scas
lock
mov
sbb
inc
dec
fmull
cmc
int3
imul
scas
cmp
insb
push
mov
xchg
or
mov
lret
outsl
add
lahf
jo
shr
das
inc
cmp
ss
cmp
jg
addr16
cld
adc
cmp
cmp
push
mov
mov
mov
loopne
das
adc
divl
into
xor
rep
rolb
cmp
repnz
mov
cmpsb
cmp
cmp
jge
add
and
cmp
andl
hlt
iret
icebp
lahf
push
out
ret
xor
aad
in
out
mov
xchg
push
cld
leave
into
popa
jecxz
cltd
popa
test
sarl
add
lods
jb
and
sbbl
jecxz
mov
icebp
jbe
dec
sbb
ljmp
cmpsl
xor
aad
bound
test
push
pusha
mov
mov
aas
mov
inc
jle
mov
sbb
aam
add
hlt
mov
ljmp
cmc
fdivrs
or
cwtl
ja
pop
cs
pop
nop
jo
ret
mov
insb
das
scas
mov
mov
shll
xchg
scas
test
stos
mov
lock
mov
xor
and
daa
jb
sbb
xor
mov
jno
cmp
sub
jp
das
sbb
cmc
pusha
lsl
fnsave
orb
test
xchg
adcb
xor
mov
fistpl
stc
add
testl
push
out
inc
rcr
out
addb
or
fdivr
adc
ds
cmpsl
jmp
push
cwtl
push
or
lret
pop
sub
push
repnz
mov
push
jns
xor
jle
arpl
sub
or
jne
push
call
inc
fnsave
pushf
xor
cmpsl
aas
filds
cmp
lea
pop
mov
subl
pop
mov
aaa
in
cwtl
xlat
ds
sahf
in
je
out
adc
leave
jmp
std
inc
stc
hlt
aaa
movsb
mov
xor
xor
adc
cli
insl
mov
sbb
lods
inc
push
xchg
xor
in
push
fdivs
xchg
cmc
and
adc
or
stc
push
mov
dec
xlat
jl
cwtl
add
daa
mov
xchg
outsl
shrb
cmpsl
jge
in
pushl
and
loope
fcomp
cmp
mov
pop
inc
std
xor
push
mov
mov
int
cmp
dec
dec
pop
rcrl
jo
lods
shll
push
and
xchg
sbb
loopne
popa
pop
lret
or
sbb
ds
xchg
gs
xorl
jne
jno
pushl
test
xchg
pop
xor
dec
dec
adc
rcrl
sbb
mov
add
mov
sub
add
movsb
jecxz
les
sahf
idivb
and
lcall
popf
mov
arpl
movsl
scas
jno
sbb
lock
stos
adc
pop
add
test
jne
pop
in
lods
adc
inc
mov
js
test
fnstcw
scas
mov
inc
not
ret
adc
icebp
mov
lds
adc
xor
outsl
and
jb
push
insl
pop
notb
jp
popf
push
mov
dec
mov
fdivp
sbb
jo
xor
mov
leave
fcmovnb
lods
or
sahf
push
pop
add
dec
les
inc
lret
jo
in
movsl
sbb
jo
dec
cmp
jp
jp
add
test
dec
fstpt
push
insl
or
ja
lret
fiadds
movl
scas
imul
test
pushl
jl
or
xchg
mov
mov
and
cmp
jecxz
mov
xlat
lds
mov
imul
adc
popl
nop
adc
loopne
xchg
adc
add
iret
outsl
cmp
mov
pop
mov
repz
test
iret
fnstenv
or
inc
icebp
mov
mov
sbbl
pop
dec
test
xor
jo
loope
mov
sub
stos
pop
lods
push
icebp
jecxz
int
adc
inc
sub
mov
jp
mov
sub
enter
adc
add
jbe
or
mov
dec
mov
in
adc
sub
dec
inc
ficoml
sub
shll
and
sbb
adc
mov
push
sar
test
lods
dec
adc
leave
and
mov
push
jo
lea
cmp
jl
orb
mov
addr16
xor
jb
push
scas
mov
test
mov
je
pop
cmpsb
call
adc
fisttpl
sbbl
cmpsl
sub
jne
bound
stos
outsl
adc
mov
jg
pop
jmp
fwait
in
lods
push
xor
in
mov
pop
jnp
loopne
xchg
pop
sbb
adc
jmp
aas
sbb
mov
in
sarb
fwait
xor
push
mov
daa
mov
jge
mov
jp
cmp
mov
jl
mov
pop
mov
ret
xchg
push
adc
rol
jl
mov
int3
dec
aam
jl
fnstcw
leave
fldcw
int
sbb
mull
mov
cs
cvtps2pi
pop
inc
repnz
push
dec
addr16
out
loop
test
jae
sub
in
mov
scas
mov
js
xor
pop
popa
jnp
lea
mov
jb
xchg
std
loope
test
pop
sbb
push
mov
jns
lds
sahf
xchg
dec
xchg
into
ret
repz
jecxz
dec
fistpl
jne
rcrl
push
and
mov
mov
jl
pop
sbb
enter
in
repz
pop
paddusw
mov
fimull
insb
in
xor
push
in
shr
sub
dec
sbb
rclb
adc
jno
fcoms
xchg
xorb
sti
es
aad
les
add
pushf
fistpll
jbe
mov
jmp
dec
gs
jns
jbe
mov
xchg
mov
jno
xor
div
lods
mov
rcrl
andb
or
jg
jbe
out
mov
fisubrs
fs
cltd
test
pop
push
xchg
mov
ret
rep
into
cs
loope
jbe
aas
dec
test
pop
mov
push
and
lock
pop
int3
mov
jmp
sarb
in
loope
xchg
pop
or
icebp
jle
test
sbb
mov
les
notb
sbb
mov
mov
jl
inc
push
call
mov
call
js
insl
nop
sbb
xchg
and
cs
call
test
dec
rcrb
fidivs
xor
jge
in
pop
stc
sahf
inc
pop
enter
clc
frstor
pop
dec
cmp
hlt
jns
in
push
arpl
xchg
dec
fcmove
cmp
push
cmc
fwait
sub
add
jno
mov
push
sahf
and
clc
lods
jb
repz
mov
fs
frstor
pop
mov
dec
mov
fimull
std
adc
jne
mov
jp
stos
fisubl
push
rcrl
out
or
insl
jecxz
ja
push
shll
push
inc
inc
and
out
add
fucomip
jmp
test
dec
mov
mov
ljmp
sub
mov
xchg
push
push
mov
add
fwait
pop
mov
outsl
cwtl
sub
pop
cmp
les
cltd
aad
mov
mov
push
xchg
mov
insb
mov
cmpsb
add
addr16
sub
mov
shrl
rorl
mov
sub
cld
jecxz
cmp
push
jge
test
loopne
cs
adc
outsb
cltd
insb
cwtl
pop
mov
addr16
add
lret
jb
test
popf
rcl
pop
jle
clc
es
cwtl
xor
and
ficoms
popa
lret
push
dec
mov
mov
aad
ret
jb
fisubrs
iret
stos
call
lret
jp
fnsave
jg
mov
jp
daa
setge
xor
repz
and
push
insl
sub
dec
lret
fldcw
fsubs
cmp
jb
in
lods
lahf
sub
movsl
sbb
mov
inc
out
test
scas
adc
andb
sbb
xchg
pop
mov
je
mov
push
pop
jb
dec
cwtl
mov
jg
data16
icebp
adcl
adc
outsl
push
xor
sahf
cmp
mov
sarb
add
sbb
mov
inc
pusha
out
xor
cmc
and
sti
mov
xchg
xor
cmpsl
stos
sahf
movsl
cmp
mov
repnz
pop
ret
fwait
inc
faddl
movb
loopne
mov
jns
mov
jle
mov
push
popf
cmp
pop
fsubrs
xchg
cltd
jb
addr16
push
leave
jbe
iret
fistpl
imul
sub
addr16
or
or
stos
jecxz
sub
sub
jge
inc
xchg
sbb
mov
push
add
fwait
cld
inc
add
out
popa
cwtl
inc
lcall
and
je
aas
outsb
je
repnz
adc
mov
mov
mov
daa
in
test
imul
lock
and
insb
jl
shrb
and
cmpsl
jle
pop
stc
adc
test
pusha
daa
scas
in
xchg
xor
ret
insl
sub
sbb
das
jnp
popa
pop
notb
xor
xlat
xor
pop
ds
sbbl
push
push
mov
xor
adc
shll
sub
push
in
pushf
inc
dec
int
jle
xchg
outsl
fildll
sub
mov
xchg
adc
fnsave
xchg
jmp
push
xchg
xchg
jnp
repz
outsb
fnsave
int3
sbbl
cli
scas
sub
fldt
popa
fsubrl
sbb
rcrl
in
mov
pop
int
cmc
repz
mov
and
hlt
or
mov
sbb
pop
push
dec
jno
movsb
dec
mov
not
out
adc
out
mov
mov
inc
inc
ss
mov
inc
rorb
pop
mov
stos
pop
fwait
jl
cmp
mov
aad
sbb
aaa
dec
or
movsl
inc
xlat
pop
mov
inc
movsb
fstl
or
mov
push
sub
jne
ja
adc
dec
mov
lods
cld
lods
ret
arpl
stos
aas
push
rolb
imul
pushf
outsl
push
push
fs
outsb
rorb
bndstx
add
cli
cmp
sahf
push
mov
fstl
pop
repnz
pop
mov
movsl
jns
sbb
pop
cmp
inc
push
sbb
xchg
icebp
out
repnz
dec
mov
clc
and
add
ja
bound
xlat
sub
xchg
subb
jns
add
xchg
orb
mov
repz
mov
mov
and
sbb
ds
in
cmpsl
cmpps
outsl
rcrl
mov
adc
sahf
fidivl
mov
mov
push
std
xchg
sbb
pop
rorl
pop
or
push
sahf
call
stc
decb
inc
scas
sti
xor
add
inc
cltd
xor
push
bnd
fldl
shrb
pop
fldcw
jb
mov
push
jl
sbb
shlb
mov
mov
cmp
inc
aaa
into
js
daa
aaa
jl
int3
arpl
lahf
sahf
fldcw
mov
push
test
inc
mov
adc
dec
int3
scas
fwait
xor
push
sbbb
xchg
push
jp
inc
pushl
push
adc
lret
xchg
rclb
mov
les
add
push
sub
sub
xchg
rep
or
mov
pop
xor
cmp
jnp
xchg
cmc
shrb
in
push
shlb
mov
idivb
int
or
in
dec
adc
popa
ja
jo
xor
cmpb
cmpsb
dec
sbb
xor
cmp
repz
in
adc
mov
cld
mov
push
lret
dec
cmpsb
iret
push
xchg
xor
sahf
xchg
lcall
dec
adc
add
adc
mov
jmp
scas
inc
das
sbb
mov
int
jb
push
fwait
push
xchg
adc
cmpb
inc
jae
jg
jmp
and
jp
insb
jle
mov
ds
orb
mov
int3
subb
mov
and
data16
xchg
das
out
loope
jl
inc
and
std
mov
scas
inc
xor
push
ja
push
int3
fidivs
inc
mov
rep
iret
push
movsl
pop
push
or
jp
mull
cmpsb
pop
rcrb
adc
xor
pop
jb
lret
scas
nop
xor
sbb
mov
es
jmp
shl
js
inc
sbbb
movsl
dec
ficoms
xor
mov
or
mov
ds
jo
pop
mov
stc
divb
jbe
sbb
adc
mov
fidivrs
push
push
lock
mov
xchg
sub
gs
xchg
out
scas
mov
repnz
push
cwtl
std
pop
jo
xor
les
jnp
out
mov
addr16
inc
push
xchg
addl
adc
js
adc
mov
jg
cmp
ret
push
lods
das
pop
adc
push
adc
inc
aam
ret
push
jmp
mov
jb
pop
in
mov
std
add
lods
add
add
mov
cwtl
add
stos
add
jae
scas
inc
enter
mov
xor
cmp
dec
call
mov
ds
fcompl
push
repz
fisttpl
leave
hlt
out
cmpsl
push
rcl
xchg
add
ja
mov
mov
mov
inc
xchg
jmp
jno
rcrl
test
add
jb
iret
lahf
push
add
inc
xor
mov
mov
ret
mov
fcoms
mov
imul
mov
enter
mov
and
adc
cld
or
dec
je
addb
cld
cmp
out
sbb
rorl
andl
jnp
dec
mov
stc
cmp
adc
xlat
push
or
jle
imul
push
cmp
fdivrp
pop
hlt
in
sbbl
sbb
sub
sbb
adc
repz
fs
addr16
add
es
test
roll
sub
cwtl
aad
cmp
xchg
faddl
push
shll
rcl
addr16
int3
jno
ljmp
out
jbe
rcrl
test
sbb
orb
scas
pop
imul
loopne
loope
mov
mov
rol
repnz
xchg
and
arpl
add
xor
and
dec
fldenv
dec
adc
jae
inc
jp
mov
mov
clc
mov
xchg
push
push
and
lcall
out
int3
or
es
sub
cld
add
cmpsl
aas
xchg
sub
notl
in
leave
repnz
fistps
adc
fbstp
mov
pop
mov
push
and
fistpll
ljmp
mov
dec
jg,pt
and
dec
fildl
popf
xor
sti
fldenv
cmp
ljmp
inc
cmpsb
xor
xor
xor
jae
loope
xchg
mov
push
cmpsb
push
fst
adcb
hlt
and
and
sti
jb
sub
hlt
add
nop
daa
iret
jp
jae
jno
inc
sub
xchg
test
movsb
ja
lahf
cmc
or
push
mov
faddl
rorl
rcr
call
stc
inc
mov
xchg
andb
rol
jmp
mov
sub
insl
inc
insl
subl
insb
xor
loopne
fcomps
pop
std
lret
xor
mov
stos
mov
daa
push
lcall
push
in
sub
pop
lock
data16
jb
lock
adc
cli
shll
rclb
les
add
lcall
cltd
adc
test
and
xor
jecxz
inc
xchg
sub
shll
lods
mov
add
filds
hlt
mov
je
ds
cmc
sbb
dec
push
je
int
mov
out
in
mov
imul
cmp
jecxz
shrl
lahf
jbe
scas
pop
jae
sar
sbb
mov
and
cmp
movsl
inc
mov
jb
cli
sub
stc
adc
subl
and
mov
test
and
dec
adc
testl
aam
aaa
mov
cmc
insl
daa
int3
out
pop
jae
hlt
mov
xchg
ret
and
or
inc
and
in
push
add
xchg
test
mov
pop
and
or
test
xchg
rcl
js,pn
pusha
repz
pop
dec
into
or
add
out
xchg
insl
sub
xchg
sub
mov
ret
xor
pop
xchg
lods
push
jp
insl
push
call
cmp
sahf
shll
mov
orb
popa
cs
into
scas
xchg
jns
inc
pop
mov
jl
movsb
push
incb
sti
pusha
in
push
adc
call
mov
je
push
test
inc
sbb
cmpsl
inc
ljmp
mov
shll
out
pop
sbb
jae
das
jns
push
sbbl
or
das
adc
mov
outsb
jbe
add
sub
sbb
movsb
shlb
pop
popf
add
scas
fwait
ds
cmpsl
or
outsb
mov
rdpmc
pop
rcrb
test
mov
cmp
add
mov
or
adc
sub
push
popa
pop
enter
sbb
adc
es
insl
or
jo
outsb
jge
or
jb
mov
popf
test
pop
js
mov
enter
pop
sti
je
pop
lret
jmp
fdivrl
and
push
or
add
pop
cmpsb
inc
push
inc
cld
fdivp
cmc
mov
loopne
mov
dec
dec
or
imul
int3
data16
sbb
add
jp
or
std
pop
popf
lahf
rclb
mov
jns
cwtl
and
push
xchg
enter
inc
ficomps
push
add
mov
es
inc
ss
hlt
inc
jo
cmp
cli
imul
push
jne
push
popf
hlt
pop
xor
sbb
push
xor
cltd
mov
out
stc
popf
lock
push
and
jo
jg
xor
mov
cmp
pop
mov
push
mov
jmp
addl
sub
sbb
adc
sub
mov
add
outsl
sub
cmc
cmp
sahf
in
scas
cmc
fnstenv
sub
jbe
jp
push
mov
jg
iretw
mov
sub
cmpsb
fdivrs
popf
push
jmp
add
cli
jge
and
sbb
or
fmulp
pop
pop
inc
xlat
lea
std
cli
loope
inc
std
xor
inc
xlat
and
pop
jb
jp
or
icebp
punpckldq
insb
mov
jne
and
cmc
and
sbbb
lret
out
xchg
push
jne
enter
in
das
subl
jg
bound
in
push
call
hlt
mov
inc
xor
pop
imul
call
cmp
dec
into
ja
andb
pop
jno
lea
outsb
add
pusha
mov
pop
add
aas
jns
cmc
mov
adc
mov
sub
sti
shrb
inc
cmp
in
arpl
xlat
xchg
flds
cld
or
stc
pop
or
push
cmp
fs
in
and
mov
pop
mov
ficoml
sub
or
add
stc
ljmp
lret
sbbl
cmp
jae
in
lret
bound
push
ja
iret
lret
pop
repnz
cs
and
jns
push
je
cmpsb
cs
jp
out
hlt
popf
add
lea
cli
pop
stos
inc
inc
scas
dec
push
dec
mov
and
call
xchg
lock
sahf
arpl
push
sbb
or
inc
or
mov
andb
mov
sti
fcomip
jne
rcrb
push
cmpsb
mov
and
push
mov
or
push
dec
les
dec
je
mov
jo
mov
shrl
repnz
insb
push
lahf
and
mov
rorb
sub
out
mov
leave
ds
stos
arpl
jne
dec
push
sbb
arpl
iret
xchg
pop
mov
test
mov
pop
sbb
lret
sbb
or
mov
dec
push
dec
jecxz
mov
dec
xchg
cmp
insb
mov
inc
imul
ljmp
repnz
inc
scas
push
cwtl
loopne
mov
push
or
push
mov
aad
xchg
mov
mov
dec
adc
cmp
adc
mov
sbb
fwait
sub
xor
push
adc
inc
adc
int3
inc
shl
imul
pusha
mull
cmpsl
sub
xlat
xor
or
popf
xor
out
add
pop
imul
push
jp
scas
dec
lea
pop
inc
fisubl
daa
push
ss
pop
hlt
leave
fsubl
incb
jnp
xor
lods
jns
push
test
mov
shlb
hlt
mov
mov
fildl
lock
cmpsb
sti
push
scas
cli
xchg
divb
adc
imul
xor
cld
ljmp
loop
mov
inc
and
jle
adc
add
jg
mov
mov
push
pop
cmpsl
dec
jbe
shrl
jecxz
pop
mov
in
sarb
mov
lods
out
fidivrs
cmc
add
xor
xor
jmp
mov
lret
pop
add
aad
inc
ss
xchg
mov
je
mov
cli
les
sbbl
sti
mov
in
rorl
test
ljmp
pushf
xor
pop
div
into
loop
jl
jge
iret
sahf
test
add
add
jecxz
enter
cmp
jle
lcall
xor
jnp
fsubr
push
jge
test
add
mov
push
ljmp
jo
aad
out
jle
or
lahf
mov
iret
lret
cli
sub
lods
xor
cli
jg
push
push
test
push
stc
mov
fsts
ss
shl
sbb
ret
test
cltd
jecxz
loope
xor
rclb
adc
sti
inc
mov
inc
pusha
mov
mov
rcll
mov
add
jno
mov
dec
pop
and
mov
jmp
or
std
and
adc
andl
pushf
jmp
or
pop
mov
inc
cs
rclb
fistpl
or
adc
push
dec
dec
outsl
lcall
ljmp
in
add
pusha
adc
stc
mov
pop
std
movsl
add
int3
xor
sbbl
push
fsub
mov
jne
inc
cmp
xchg
les
loope
sbb
orl
daa
stc
xchg
cmpsb
scas
dec
test
incl
outsl
leave
in
iret
push
insl
jmp
dec
xor
out
enter
push
notb
int3
cli
cmc
fwait
pop
outsb
push
push
subb
mov
arpl
decb
sub
adc
sbb
enter
mov
dec
in
mov
add
sti
imul
or
aaa
or
movsb
or
insl
lds
js
mov
cmp
loop
dec
push
cltd
jg
lret
rclb
inc
popf
xor
roll
out
inc
stos
fiaddl
fidivl
mov
jl
popa
scas
dec
scas
loopne
sbb
lret
int
jmp
adcb
mov
sbb
lret
or
pop
push
daa
mov
aad
les
idivb
es
aam
hlt
mov
bnd
mov
jg
in
das
cmp
daa
movsl
add
jp
aad
scas
test
sti
pushf
cmpsl
adc
insl
ja
xor
sar
xorb
cld
or
mov
ficoms
pop
jnp
push
jne
jle
lea
mov
daa
push
mov
xor
cmpsb
cmp
mov
lods
push
in
fstpl
insl
cld
popf
ds
cmp
gs
repz
mov
dec
aam
and
lds
int3
jg
loopne
pop
adc
repnz
int3
xchg
add
push
test
or
test
loop
push
cli
andb
movsb
mov
add
clc
xor
iret
add
and
xor
fbld
mov
sub
and
push
jbe
les
xchg
cmpsl
or
or
cmp
lods
fildll
cmp
jo
add
or
push
add
dec
pop
iret
jb
and
test
sub
je
rclb
mov
mov
mov
mov
movl
sbb
dec
stc
in
aaa
cmp
push
fmul
movsl
or
dec
test
push
xor
outsb
push
jb
xor
inc
sarb
fsubrp
inc
cmpsb
movsb
cli
jmp
daa
jbe
lock
inc
and
or
cld
loopne
cmpsb
out
cmp
arpl
dec
out
div
push
cmp
out
and
repnz
mov
xor
push
les
xchg
jbe
sub
flds
mov
loop
xchg
or
sub
jne
or
sbb
jge
push
mov
xor
mov
cmp
stos
jle
in
daa
loop
arpl
imul
sahf
push
pop
fisttpl
add
add
dec
lret
xchg
mov
dec
or
test
dec
dec
fmuls
mov
cmp
outsb
inc
lds
jns
jp
call
daa
or
into
fldt
shrl
int3
sbb
pop
inc
pop
addb
or
fdivrs
out
insl
loope
jmp
test
es
adc
out
lret
leave
ficompl
cmp
jne
icebp
push
cmp
inc
adc
push
and
sub
mov
divl
push
pop
out
lods
rcrb
mov
arpl
test
aaa
push
ret
add
imul
call
fbstp
jne
sub
dec
std
test
push
or
enter
push
arpl
hlt
test
push
pop
and
lods
pusha
stos
jle
push
subl
lds
lds
ljmp
jae
dec
sbb
fstps
add
hlt
mov
test
loop
push
xchg
and
jae
stos
xchg
mull
xchg
stc
daa
cwtl
add
mov
jbe
inc
add
xchg
aam
mov
sub
push
sub
pop
cmp
xchg
or
xor
mov
add
sbb
fldcw
or
out
popf
mov
dec
loope
test
in
jnp
out
sbb
push
cmpsb
ja
or
fmull
inc
push
adc
inc
xchg
sub
test
cmp
push
jmp
push
shrb
sub
xchg
call
add
repnz
leave
test
mov
or
sub
dec
aad
cmp
out
add
test
rcrb
xchg
mov
or
ja
movsb
das
out
stc
test
cmc
sbb
mov
aad
and
enter
add
sarb
scas
lret
xor
sub
shrb
mov
or
sbb
sub
mov
pop
push
sbb
nop
mov
and
sbb
mov
shll
mov
cs
lods
xor
mov
mov
notb
pop
mov
add
dec
std
adcb
inc
xor
in
cmp
mov
fnsave
cmpl
enter
je
stc
inc
sub
in
sbb
push
in
sub
cltd
cmc
mov
jae
sarw
jmp
addl
cmc
pop
shll
add
mov
or
repz
push
and
scas
inc
inc
int
repnz
int
jl
xchg
sub
sub
and
cmpsb
sbb
fadds
ds
jo
int
push
xchg
es
ret
xor
jmp
mov
sbb
enter
jge
and
mov
jge
mov
insl
shlb
movsb
adc
aad
daa
imul
jae
scas
push
push
pop
adc
push
movsb
xor
mov
dec
inc
push
loop
test
inc
nop
ss
mov
ja
mov
popf
jge
setno
jge
sarb
out
jns
inc
fistpll
in
push
lahf
adc
jmp
addr16
jb
xor
sub
or
xor
push
mov
add
test
sar
push
in
xor
rcrl
cmp
out
add
xor
jne
push
loop
xchg
mov
es
adc
fnstcw
push
and
dec
mov
mov
scas
dec
and
sub
cmpsl
mov
lret
movsl
sbb
push
push
orb
dec
dec
out
arpl
out
shrb
lds
arpl
mov
icebp
es
std
sub
jle
dec
dec
jg
repnz
jp
mov
clc
pop
cmc
dec
inc
test
mov
cli
sbb
jmp
fsubrs
inc
xlat
out
idivl
sub
add
sbb
dec
dec
cli
scas
and
out
inc
pop
and
enter
sub
sbb
cltd
dec
xor
jl
pusha
ss
pusha
and
jnp
fs
sub
jl
pop
shl
sbb
push
dec
sub
sub
aam
mov
push
jb
outsl
adc
cmp
cmp
lock
sti
inc
lds
xchg
xchg
out
lcall
int3
dec
pop
and
test
xlat
pop
xchg
shll
mov
add
jb
ret
and
inc
enter
and
loopne
xchg
popf
sub
fmuls
cmpsl
fldcw
sbb
jae
es
pop
xchg
cli
test
ficomps
push
mov
out
in
pop
out
scas
add
in
jp
lret
out
cld
xchg
jg
je
add
push
mov
sub
out
mov
xor
cmp
fcmovnu
je
or
xor
push
sti
xchg
mov
fwait
mov
mov
push
aad
inc
lock
loopne
iret
enterw
sahf
inc
in
inc
cli
mov
jmp
jns
jge
into
lcall
sub
mov
test
cmp
das
push
jecxz
cltd
lahf
repz
dec
fisubrs
into
loop
mov
mov
xor
movsb
std
or
int3
inc
push
and
ljmp
leave
inc
pmulhuw
mov
scas
sbb
arpl
mov
sbb
fwait
jle
mov
push
pop
adc
lcall
sub
cltd
sar
andl
or
xchg
push
mov
and
enter
dec
mov
aad
push
jmp
dec
xchg
enter
lret
cld
inc
iret
or
push
aad
jmp
loopne
inc
lea
cld
maxps
mov
cli
pop
daa
jo
test
mov
lea
lret
xlat
adc
push
and
and
inc
je
dec
in
sbb
lock
and
leave
pop
cwtl
loopne
inc
leave
jae
xor
shlb
sahf
jae
out
dec
scas
xor
fcomip
pop
lret
mov
sub
push
sbb
imul
lahf
jae
out
pop
cwtl
push
adc
fwait
mov
insl
jecxz
lahf
push
mov
and
sbb
inc
addb
pusha
mov
mov
or
adc
flds
cwtl
xorl
mov
xchg
lds
mov
outsl
test
fcompl
sbb
mov
or
aam
xor
pop
cmc
xchg
mov
cmp
lahf
inc
push
jno
fsubrl
imul
test
repnz
test
pop
adc
repz
scas
or
and
les
rorl
push
sub
jb
sbb
jae
call
adc
push
leave
mov
scas
gs
cvtdq2ps
pop
or
shll
push
mov
push
pop
sub
rcrl
cmp
cltd
std
mov
adc
nop
das
xchg
xlat
cmc
popf
or
rcll
cmp
in
leave
sbb
push
jmp
lret
test
out
fisubrs
inc
adc
lret
push
mov
sarb
enter
mov
jp
jg
push
xchg
in
mov
jcxz
jmp
push
xchg
sub
shll
sbb
enter
dec
or
je
aad
orl
or
icebp
pop
mov
lea
and
rclb
dec
aad
lcall
nop
cmp
clc
jae
pushf
push
test
test
xchg
mov
mov
xor
push
pop
fwait
lret
xlat
int3
jle
cli
imul
xchg
and
mov
jb
inc
pop
loop
jae
inc
flds
cli
lret
je
data16
out
call
test
aad
ljmp
das
pop
ror
popf
loop
sub
pop
add
dec
sahf
clc
aad
outsl
mov
mov
aas
mov
into
xchg
push
rcl
rolb
js
mov
pop
mov
dec
add
cmpsl
out
xorb
mov
mov
int3
adc
pop
xor
mov
int
jmp
sbb
and
ja
imul
jne
xchg
popf
ljmp
mov
hlt
mov
pop
jl
mov
rolb
add
mov
jge
xchg
gs
popa
or
push
out
xchg
aam
cmp
lds
fsubl
lods
out
mov
stos
outsl
mov
nop
fiaddl
ljmp
stos
add
or
dec
mov
stos
hlt
xor
push
jp
ss
cmp
stc
jmp
out
es
inc
jmp
and
mov
fnstcw
cli
inc
sahf
test
pusha
test
dec
out
fiadds
jb
outsl
jnp
fs
inc
lock
scas
sub
stos
mov
int
test
sbb
int
inc
mov
sahf
pop
jmp
testl
js
mov
mov
jg
and
popa
adcb
jns
repz
and
in
call
jo
dec
pushl
xlat
mov
daa
fld
fsts
rcrb
xchg
les
xchg
jl
sbb
pop
pop
push
popf
dec
inc
mov
push
adc
popa
clc
outsl
cmp
lds
aas
inc
scas
jne
ja
rcrl
lods
test
add
es
repz
movsb
movb
jp
mov
lret
xchg
xor
ret
stos
sub
ds
dec
pop
dec
pop
cmp
mov
popf
xchg
lds
mov
jp
pop
out
inc
push
mov
xchg
push
push
fidivl
push
sub
iret
fyl2xp1
dec
int3
arpl
jmp
dec
loope
ljmp
or
js
xchg
adc
ret
imul
xorb
mov
push
test
insl
pop
add
nop
jnp
cltd
int3
imul
mov
lret
cld
xchg
push
insb
test
jnp
aas
xchg
daa
add
fidivrs
repz
mov
push
es
jmp
test
lods
dec
rolb
mov
lcall
jbe
mov
dec
arpl
aam
loop
mov
stos
xchg
pop
or
cmp
aas
rcr
jmp
cwtl
mov
push
cmp
mov
mov
add
or
ja
inc
adc
mov
xchg
mov
hlt
pop
outsb
loope
add
hlt
xor
sbbb
aaa
notl
cltd
sbb
loop
adc
mov
rcll
mov
ds
mov
xchg
push
lea
popl
sub
and
mov
pop
adcb
cwtl
mov
push
cmp
je
sti
mov
cltd
jae
xchg
jne
movsl
xchg
inc
out
mov
push
test
mov
cmpsb
int3
pop
pop
cmp
inc
jae
lds
mov
push
addr16
cmp
jne
movsl
into
or
jne
mov
fstps
ret
idivb
iret
in
imul
sub
ficoml
mov
dec
cs
add
aas
xchg
push
add
adc
pop
insl
stc
sub
fsubrs
cmp
outsb
or
in
mov
fisubl
fadds
ja
sbb
pushf
add
adc
and
cmp
sub
xor
cltd
out
sub
rorl
popf
hlt
or
cmp
and
inc
scas
sub
lods
cs
test
xchg
ror
test
jecxz
outsl
cmpl
cmc
lcall
xchg
test
loopne
lods
in
inc
rolb
xor
out
add
adc
push
dec
adc
cs
xlat
cmp
imul
out
xchg
insb
or
or
or
or
sbb
inc
sub
sbb
enter
out
inc
daa
jmp
rcl
jge
sbb
lods
mov
sub
pop
push
xor
dec
popa
lods
mov
pusha
inc
bound
xchg
add
mov
or
ljmp
aad
sahf
cmp
pusha
mov
andl
or
lea
and
cmp
iret
imul
mov
test
xchg
sub
push
jl
and
add
mov
aas
in
and
mov
inc
aaa
into
push
stc
xchg
cmp
imul
lret
data16
mov
test
mov
fisttpll
adc
ret
xlat
rclb
sbb
call
repz
jge
mov
rcr
nop
push
cmp
mov
aam
and
pop
das
or
hlt
cmp
in
push
cmp
cmp
or
push
nop
and
int3
cmpsl
inc
jns
in
ja
mov
iret
pop
xchg
push
inc
pop
mov
mov
jmp
jbe
inc
mov
pop
je
sub
mov
pusha
dec
mov
shll
lea
lods
inc
loopne
pop
or
cli
out
scas
cmp
fldcw
pop
jne
dec
popa
lds
insb
pop
sub
mov
into
xchg
mov
daa
sbb
in
push
and
xor
push
icebp
mov
mov
shlb
lds
lds
pusha
xor
imul
dec
inc
or
loopne
pop
insb
xchg
add
add
push
cmpsb
test
sbb
mov
in
rorl
rolb
push
pop
lock
cld
and
stos
imul
push
sub
inc
inc
xor
or
pop
imul
dec
inc
scas
mov
lcall
push
fistl
cwtl
test
cmp
add
jnp
pushf
cld
jno
mov
cltd
test
push
sbb
ret
xchg
mov
mov
mov
adc
xor
out
pop
lods
rclb
mov
mov
sbb
mov
add
jb
pop
cld
sub
in
imul
loop
push
fcoml
cmp
or
loopne
mov
sbb
pop
xchg
cmp
aam
jae
nop
sti
jbe
mov
subb
das
shll
cmp
js
mov
popf
jmp
xchg
mov
movsb
js
cltd
ljmpw
and
pusha
fnsave
mov
mov
jno
sahf
xor
sub
in
adc
hlt
sbb
out
mov
fisubrl
fimull
stos
in
add
xor
es
inc
push
repz
leave
ljmp
mov
xchg
xor
cmc
inc
enter
mov
xor
insb
xor
pop
cmp
jnp
out
and
dec
ffree
ret
cmp
inc
sub
aas
add
jae
cmp
imul
jne
jp
pop
jecxz
nop
mov
je
xchg
into
js
repnz
adc
imul
imul
xor
ror
test
mov
gs
push
xchg
popf
and
pop
jns
push
in
popa
dec
sti
xchg
xchg
loope
and
sub
or
pop
loopne
out
pop
mov
mov
pop
push
test
mov
out
fcoms
fsts
fs
xchg
cmp
fisttps
dec
iret
jo
es
movsb
mov
push
jge
inc
xor
ja
jg
loop
enter
data16
fldenv
test
shrl
pop
mov
repz
ret
icebp
xor
cwtl
fwait
iret
test
out
loop
and
sahf
mov
jbe
sub
mov
jo
sub
dec
das
mov
sbb
mov
sarl
pop
sbb
sbb
stos
ljmp
mov
arpl
mov
and
hlt
xchg
fnstcw
adc
lahf
ss
xor
mov
lods
int3
lret
dec
repnz
or
jl
and
and
mov
mov
or
fbld
repnz
push
jns
inc
lcall
loop
jnp
call
dec
push
mov
add
dec
iret
ss
mov
and
clc
xchg
add
fwait
popa
stos
outsl
xor
pop
sbb
in
out
lcall
loopne
cld
roll
push
cwtl
jmp
ss
stos
inc
sub
sbb
aas
dec
pop
icebp
loope
stos
jno
cmp
clc
push
fnstcw
or
stc
dec
cs
pop
pusha
jo,pn
or
mov
jnp
fisttps
or
arpl
xchg
stos
ret
loopne
fwait
xchg
xor
mov
loope
dec
xor
mov
lcall
dec
in
lret
or
rolb
add
sti
adc
ret
scas
adc
lods
jg
movsl
mov
cmp
dec
iret
mov
or
mov
push
xlat
mov
xor
fcomps
xor
add
out
dec
loopne
adc
jecxz
push
sbb
and
add
pop
inc
mov
aam
je
cmp
or
cmp
adc
rorl
push
push
add
jmp
jle
fdivp
jl
xlat
je
lea
shll
test
js
scas
sbb
movb
pop
stc
mov
adc
lret
rdmsr
loope
imulb
stos
and
ljmp
jl
fsubs
mov
aas
js
push
imul
mov
fstpt
dec
shll
sbb
popa
fsubrl
cld
imul
loop
fxtract
mov
mov
fwait
stc
dec
outsl
dec
add
cmp
stos
ljmp
sbb
ss
mov
mov
fstp
scas
mov
sub
icebp
push
hlt
mov
cmpb
repz
push
add
sbb
mov
inc
int
mov
cmp
sti
mov
add
bound
cmp
in
sbb
xchg
pop
outsl
push
movsl
mov
cmp
xor
shl
pop
lock
cmpsl
pop
mov
add
idivb
inc
pop
pop
adc
jge
popf
or
outsl
imul
mov
mov
cmp
aaa
cmp
roll
mov
ret
mov
sbb
iret
inc
sbb
xor
and
outsl
in
std
jo
mov
push
mov
jecxz
xchg
lea
xor
ss
jae
push
mov
xchg
stos
cli
jg
jp
subb
or
imul
aaa
fildl
xchg
push
or
out
xlat
inc
fisttps
cmc
popa
jp
bound
xchg
dec
in
push
pushf
sbb
mov
daa
aas
mov
movsl
mov
inc
dec
jp
xor
xchg
cltd
cmpsl
mov
sbbb
stos
xor
and
in
or
push
sbb
mov
hlt
sub
jns
or
cli
push
xchg
sub
out
movsb
aam
and
adc
add
mov
aaa
or
ds
repz
or
in
mov
push
leave
out
in
test
jl
scas
or
jg
push
pushf
sbbb
les
lods
or
aam
push
pusha
mov
fs
rolb
lret
mov
outsl
mov
pop
mov
mov
daa
ret
jno
jg
fnstsw
nop
cmp
inc
insl
inc
popf
jo
orb
lcall
push
lods
xlat
popf
xor
pop
mov
sbb
xor
mov
dec
les
jmp
push
shl
jp
xor
scas
or
js
and
ficoms
in
add
loop
hlt
jnp
mov
sub
sbb
out
push
and
jne
insl
push
data16
mov
fcoms
pop
jb
mov
jp
int
adc
aaa
xchg
adc
ret
jbe
push
lock
adc
pop
inc
nop
sti
jbe
fndisi(8087
dec
inc
mov
lods
and
adc
xchg
out
je
out
jno
and
mov
mov
aaa
pop
inc
fmuls
sbb
sbb
insl
inc
mov
hlt
xor
mov
insb
xchg
ret
cmc
dec
jl
mov
insb
jne
xor
ss
xchg
pop
pop
out
shll
mov
dec
xlat
sbbl
movsl
xchg
loop
ljmp
inc
loop
loopne
push
push
jno
clc
insb
ret
push
leave
inc
sarb
dec
aam
lea
push
or
mov
mov
mov
add
dec
push
inc
std
adc
daa
sbb
dec
mov
in
test
sbb
cmp
jb
xchg
and
mov
inc
cmp
xchg
adc
les
out
in
lcall
dec
cmp
push
ljmp
out
test
lret
das
fisubs
data16
gs
inc
lahf
lods
in
push
mov
adc
push
inc
and
cmp
fsubrp
data16
dec
arpl
movsl
cmp
dec
flds
dec
dec
push
cmpsb
mov
in
push
and
mov
loopne
jg
cwtl
jno
jmp
fwait
mov
or
or
pop
ja
pop
insl
les
jmp
fiaddl
test
out
je
shrl
aam
sub
mov
mov
data16
mov
adc
mov
cmp
sub
push
movsl
or
jnp
cmp
xchg
cltd
sti
rorb
call
out
movsb
sbb
adc
ss
fldenv
mov
jo
mov
mov
lret
ret
inc
xor
call
stos
mov
hlt
or
stos
mov
stos
bound
test
insb
andb
or
ret
outsb
fs
pop
das
testl
lret
bound
push
popl
mov
mov
fnstenv
test
mov
dec
inc
dec
test
and
daa
out
cmp
idivl
mov
stos
and
mov
jle
push
xchg
push
xor
bound
mov
dec
inc
jl
subb
adc
lret
dec
mov
popa
add
insb
push
andb
or
movsb
pop
ljmp
sub
iret
cmp
sub
jg
fwait
je
inc
adcb
push
aaa
sahf
lcall
out
jae
fwait
mov
out
nop/reserved
ss
jbe
inc
in
nop
ljmp
dec
ret
or
mov
repz
dec
push
mov
cmp
jge
pop
sbb
pop
ret
pop
clc
sub
push
sbb
cmp
arpl
push
or
add
cmpb
rcrb
mov
loopne
mov
mov
das
sbb
jnp
popf
test
push
jo
je
push
pop
adc
adc
push
test
in
xor
mov
flds
mov
cmp
ss
clc
sub
out
mov
xchg
mov
fcomp
aaa
into
pusha
ret
sarl
add
or
or
sarl
cmpsb
mov
mov
loopne
rorb
adc
and
lea
test
addr16
in
adc
jp
mov
lds
shr
idivl
push
int3
cmpsb
insb
jns
enter
mov
mov
in
std
and
ss
insl
jl
insb
xor
and
and
or
adc
inc
fstl
jo
fld
or
pusha
das
dec
div
es
std
aas
jnp
scas
mov
lcall
shrl
sub
xchg
mov
addl
inc
popa
rorb
cld
inc
and
int3
mov
gs
imul
into
push
or
jmp
repz
xchg
sbb
jno
xorl
and
cmp
mov
mov
imul
enter
in
cmp
stos
cli
jp
mov
data16
xchg
imul
pop
sbb
adc
stos
mov
aad
sbbl
jg
push
pop
cld
or
xor
sub
mov
iret
bound
xchg
in
subl
or
push
std
pop
cmpsb
sbb
mov
inc
jnp
fbstp
mov
popa
adc
nop
aaa
sbb
sbb
mov
or
push
cmpsb
jns
sti
mov
sbb
adcb
pop
scas
dec
pop
hlt
xor
or
pushf
out
lods
mov
test
and
push
xchg
push
and
adc
je
jle
pop
dec
popf
mov
adc
dec
int3
xor
xchg
add
lahf
mov
push
in
pop
jl
xchg
mov
cmpsb
mov
fisubrl
sub
adc
mov
or
jnp
adc
mov
jb
in
dec
ret
push
aas
and
cmp
inc
nop
xor
push
jmp
xor
icebp
xchg
add
cs
add
push
pop
hlt
inc
pop
out
lea
push
fwait
arpl
or
mov
and
insb
dec
stos
jbe
sub
xchg
sbb
faddl
xor
bound
ds
adc
xor
xchg
xorb
pop
jo
sbb
cmp
aas
aaa
sbb
mov
inc
lds
mull
ja
and
push
xor
xchg
repnz
in
cmpsl
str
popa
ret
das
outsl
xor
mov
push
dec
aad
rcll
test
shll
mov
cwtl
inc
fisubl
pusha
xor
mov
ss
mov
sbb
xchg
mov
sysexit
mov
cli
cltd
fcmovbe
mov
cmp
push
push
add
ss
je
arpl
sbb
mov
iret
sub
into
add
cmpsb
rcl
cltd
xor
bound
ds
test
out
das
pop
out
mov
sbb
std
jmp
cmp
push
cmpsb
les
fs
cmp
movsb
mov
pop
xor
and
and
outsb
mov
fldt
dec
loop
pop
shlb
mov
pop
insl
test
int
lahf
lods
or
dec
outsl
jnp
xchg
jge
adc
ret
pop
jae
jns
jge
push
jae
lahf
ds
pop
sbb
int3
jp
mov
cltd
xchg
fwait
shll
rol
xchg
mov
fstpl
mov
push
push
push
mov
jl
repz
mov
out
push
jnp
je
xchg
dec
sbb
lcall
dec
mov
subb
or
adcl
add
push
inc
mov
xor
int3
inc
enter
cmp
push
in
sbb
loope
jl
test
dec
push
out
test
mov
jg
add
inc
js
loop
subb
add
lret
rcrl
jle
inc
sbb
inc
xlat
xchg
jo
lret
dec
mov
and
fcomps
gs
or
or
jle
movsb
scas
shll
test
xchg
adc
rcll
lret
dec
call
cld
out
sahf
push
int
test
lahf
addr16
sub
xorb
sti
movsb
scas
mov
push
mov
push
cld
xchg
test
out
mov
push
inc
call
int
push
xor
mov
dec
mov
pop
mul
lahf
movsl
push
aas
lret
je
addb
adc
jle
adc
inc
lahf
push
outsl
add
ret
fucomip
mov
imul
sbb
xchg
mov
aaa
and
xor
scas
inc
faddl
ljmp
jle
inc
scas
pop
add
shl
push
lret
mull
in
inc
test
das
ret
in
in
sub
xchg
mov
aaa
fsubrp
push
push
pushf
dec
je
pop
cmp
fisubs
push
and
dec
fimull
shll
loopne
xchg
cmp
xchg
stos
aas
out
fists
insb
icebp
pusha
sub
imul
call
jmp
movsl
dec
popf
lods
jecxz
push
test
bound
pop
sbb
mov
gs
cmpl
divb
js
adc
sub
pushf
imul
loop
jb
jne
jl
imul
add
push
dec
jecxz
push
jp
cmpsl
sub
xor
sub
iret
and
sbb
ljmp
ds
mov
and
enter
sti
dec
sub
jne
jno
fs
rcrl
cltd
pop
js
push
push
sub
in
imulb
mov
insl
ja
test
mov
pop
adc
push
lea
cmp
scas
fidivl
fs
imul
popf
shll
push
testl
add
mov
or
fnsave
lahf
and
sarb
push
cmp
mov
stos
movsl
sub
shlb
sub
rorl
xlat
jle
inc
test
add
push
std
in
iret
and
mov
mov
mov
sub
sahf
lock
xor
pop
pop
jl
xor
jae
push
fisubrs
xor
or
adc
adc
repnz
inc
aas
sub
add
aad
in
iret
lret
jp
dec
mov
jle
jno
es
aaa
testb
pop
negb
jge
outsl
push
jge
andb
rolb
or
jp
cli
xchg
lods
mov
cmpsb
xor
sahf
xor
in
mov
loope
imul
movsl
ret
pop
mov
sarb
cmp
gs
fstps
sub
shll
inc
inc
test
icebp
mov
std
add
mov
jb
or
leave
jo
xchg
insb
mov
repz
ss
pop
mov
test
jmp
sbb
inc
pop
mov
xor
lds
ds
scas
push
aad
or
lea
jle
cltd
xor
mov
les
es
andl
int3
push
adc
dec
dec
mov
add
dec
jno
in
and
pusha
icebp
mov
movsl
into
xchg
call
stos
xor
sahf
sub
mov
mov
push
push
shlb
mov
movsl
mov
ffreep
call
aas
lret
dec
cmp
mov
pop
ret
or
leave
fdiv
outsl
add
or
cmp
dec
mov
fistpll
mov
leave
xchg
jnp
mov
fsts
pop
cmp
in
movsl
dec
sbb
mov
fiaddl
or
dec
ror
lds
loop
adc
addb
add
lods
lea
push
clc
sbb
cli
dec
push
pop
out
xlat
dec
xor
or
jp
stc
push
data16
and
int3
xor
dec
out
push
pop
das
add
idivb
stos
mov
fiadds
sahf
test
inc
or
sbb
ljmp
pushf
cli
pop
jne
jae
lods
dec
js
xor
xor
and
xor
pop
cmp
data16
pusha
cmp
in
mov
mov
loope
jb
mov
hlt
cmpsb
es
jo
dec
push
mov
pop
stos
sub
jp
xchg
and
cmp
push
sti
push
jecxz
mov
jge
jne
loop
movsl
mov
pop
loope
dec
dec
xor
cmp
fnstcw
push
mov
daa
mov
int3
rolb
dec
xchg
pop
dec
aaa
cmp
inc
and
sub
xorl
cmpsl
pop
add
jo
imull
stc
nop
sub
andb
clc
dec
pop
repnz
push
loope
mov
in
sub
push
shl
cs
mov
jp
mov
or
add
xor
dec
push
inc
mull
into
imul
xchg
sub
aam
mov
ljmp
jne
add
mov
push
sbb
outsb
dec
push
aad
push
insb
cmc
push
sub
xor
icebp
mov
fisttps
add
in
out
jne
cmpsb
dec
mov
aas
jne
mov
movsl
inc
mov
cltd
add
adc
cwtl
lods
fnstenv
mov
push
mov
repnz
mov
ret
adc
fistpll
cmpsl
push
test
pusha
jae
fsubr
or
push
aas
cli
push
fimull
popf
pop
push
jmp
fcomps
enter
or
mov
sbb
inc
pop
sub
or
push
imul
xor
cld
pop
cmp
pop
sbbb
xchg
xchg
inc
or
and
xor
sti
mov
push
inc
cmp
repz
loopne
cmp
lret
aas
loop
pop
rcl
test
xor
cmp
xor
mov
inc
mov
xor
outsl
movb
ret
leave
pop
and
xchg
mov
repnz
scas
int3
push
sub
add
fs
dec
lret
ljmp
add
or
lods
gs
mov
pop
push
jle
testl
int3
inc
dec
je
out
les
cmp
jno
or
adc
push
stc
repz
outsl
xchg
cmpl
aaa
jle
and
push
daa
repnz
dec
jno
jnp
repz
inc
xor
mov
jle
or
popf
push
mov
adc
xor
imul
lock
pushf
ret
fucomi
mov
test
xchg
mov
fwait
mov
inc
pop
pop
in
mov
cmp
pop
sub
dec
xchg
pop
shrb
mov
fsubl
push
ljmp
lea
lcall
scas
inc
mov
testb
lcall
loope
subb
orb
mov
in
lret
imulb
xchg
mov
fsubrp
arpl
out
cmpb
pop
lods
inc
inc
stos
sub
mov
ljmp
icebp
mov
xchg
popa
xor
dec
fsubl
icebp
adc
jmp
fsubl
jno
loopne
mov
outsb
mov
stos
push
ficoml
insl
ror
fwait
icebp
idiv
imul
xlat
and
mov
or
iret
cld
adc
pop
outsl
punpckhwd
dec
sahf
cmc
mov
cmc
in
aad
mov
repz
adc
test
jg
hlt
mov
and
dec
lock
xchg
arpl
push
push
adc
std
in
jge
adc
jmp
cmc
lcall
gs
fmul
sbb
dec
push
loope
xchg
inc
pop
repz
mov
jmp
aad
jmp
jg
sti
cmpsb
inc
cwtl
das
jae
test
lcall
ja
mov
leave
pusha
hlt
es
ud0
xor
wrmsr
stos
jl
sbb
xor
fnstcw
inc
xor
repnz
mov
jmp
subps
cwtl
jb
ret
out
cmp
xchg
mov
cltd
mov
fistpl
cmp
scas
pop
pop
inc
loopne
es
fcmovne
push
or
ja
aas
push
inc
cmpsb
mov
and
and
daa
mov
xchg
out
xor
outsl
scas
fimuls
jnp
into
lods
sub
inc
das
roll
mov
divl
loop
and
es
push
sbb
xor
in
shll
jne
inc
lock
mov
push
out
dec
in
pop
dec
push
or
subb
mov
data16
xlat
cmp
pop
and
insb
imul
jg
cmpsb
mov
xchg
add
outsb
push
mov
jno
bound
mov
jle
xor
push
test
lret
dec
imul
mov
out
pop
jbe
cmp
lock
std
rolb
inc
pop
test
fnstenv
push
stos
mov
mov
clc
and
add
jmp
xor
andl
popa
in
jg
outsb
push
and
jecxz
inc
pop
pop
mov
adc
rcll
into
lock
enter
sub
xchg
push
inc
lods
xor
ljmp
add
scas
mov
and
cld
dec
push
sbb
into
fdivrl
jl
lret
loopne
push
int
jnp
lcall
fistpl
cwtl
and
inc
in
mov
scas
fstps
ljmp
shrl
ss
xor
cmc
outsl
int
pusha
dec
dec
mov
push
clc
lds
loopne
push
cmp
out
fidivs
xor
test
add
xchg
pusha
jp
pushf
mov
lret
pop
sbbl
adc
add
push
jge
xor
aaa
negl
mov
dec
lret
mov
iret
xchg
mov
xchg
sbb
jp
push
cmp
adc
sbb
aas
xor
xor
mov
pop
ja
inc
lods
cltd
sub
cmpsl
cmp
shll
sub
sbb
ffreep
sub
sub
push
pop
add
mov
xor
push
gs
push
jb
repnz
xor
test
test
mov
movsl
mov
pop
aad
mov
jle
imul
mov
loopne
sbbb
cs
int3
inc
ljmp
dec
repz
testl
push
notb
fldt
push
std
jo
push
xor
repnz
mov
mov
push
shll
dec
push
inc
or
sbb
xor
scas
mov
les
push
jp
lret
icebp
mov
arpl
test
xchg
outsb
push
data16
xor
lods
loope
lret
lea
cli
xor
fmuls
or
aam
xchg
push
mov
fldpi
mov
mov
lock
mov
sbb
sti
and
add
sbb
cmp
pusha
mov
xchg
data16
push
je
xchg
dec
bound
out
mov
aad
lods
or
pop
stos
pop
jno
dec
sub
adc
lret
jno
sbb
xchg
cmp
clc
adc
xor
or
in
xorb
das
sub
and
pushf
cmpsl
mov
cmp
cs
aad
adc
negb
divl
sarl
xchg
popa
test
lahf
jnp
iret
data16
mov
lock
ret
aad
mov
mov
imul
xlat
and
jle
pop
pop
ss
outsl
push
jl
lea
test
leave
es
lahf
je
add
sbb
lods
inc
and
cwtl
mov
jmp
std
cltd
xchg
lret
adc
je
pop
gs
js
mov
mov
scas
fidivrs
std
or
iret
orb
sub
mov
and
sahf
lcall
cmp
xor
mov
adcl
lcall
rcll
dec
loope
dec
inc
jmp
mov
jns
scas
shlb
jno
aaa
jno
mov
mov
adc
rcll
or
and
xchg
adc
movsb
jnp
shrb
push
mov
in
gs
fnstsw
xor
mov
adc
movsb
push
lret
push
int
mov
adc
xor
in
mov
out
pop
add
jae
and
xchg
xchg
lock
lods
mov
testl
mov
int
xchg
aam
fwait
icebp
aad
and
xchg
rep
or
adc
fiadds
or
mov
push
in
xchg
xor
sbb
jae
mov
ret
pop
mov
push
mov
js
loope
push
mov
fists
jbe
add
jns
lods
xor
sbb
aad
or
lret
imul
mov
lods
and
xor
test
rcrb
dec
mov
adc
mov
and
push
dec
adcb
add
rcr
mov
push
call
ffreep
inc
into
gs
orl
jae
lods
scas
dec
and
popa
dec
xor
data16
push
jl
sub
stc
scas
dec
xchg
test
stos
inc
inc
test
mov
jl
subl
test
out
xchg
addr16
pop
stos
push
fsts
add
sbb
insl
aas
mov
or
or
out
js
lock
inc
jbe
daa
lcall
adc
lock
xchg
mov
or
jns
es
xor
gs
push
jmp
int3
push
gs
push
sub
xor
inc
jp
and
cltd
rorb
or
insb
xchg
fsts
xor
jbe
push
popf
into
xchg
mov
push
out
cli
xchg
in
pop
push
adc
fs
sub
cmp
ja
js
fldl
cmpsl
push
mov
outsl
cmp
xchg
and
adc
cmp
mov
fbstp
arpl
cmp
and
les
test
insl
mov
popf
daa
mov
popa
mov
dec
adc
sarl
inc
icebp
std
xor
in
or
je
inc
icebp
fisubrl
mov
popf
ds
lods
pop
fidivl
dec
pop
fnstcw
outsl
stos
mov
push
ficomps
sub
pop
inc
jno
dec
imul
push
es
nop
pop
add
xchg
push
mov
xlat
jo
aam
pop
jmp
js
xor
clc
inc
scas
movsb
das
push
sub
jmp
test
repnz
daa
jnp
mov
cld
shll
jle
push
cmp
out
push
fcomps
cmpsb
cmpsl
out
shlb
mov
lods
loop
mov
aas
or
aas
xchg
mov
mov
fistpl
jae
push
xor
daa
repz
shr
lea
jmp
inc
scas
lea
push
stos
inc
or
call
push
pop
in
aam
aam
sarl
adc
loopne
mov
fisubrs
mov
or
cmp
cmp
mov
cli
jle
popf
nop
jl
cmp
data16
jb
push
in
out
adc
lcall
push
mov
test
movsb
push
daa
repz
sub
fs
mov
into
add
inc
pusha
mov
sub
test
stos
push
sbb
ds
sub
rorb
test
adc
dec
inc
call
iret
aas
sysenter
mov
scas
bound
and
dec
jecxz
decl
mov
mov
stos
nop
jmp
push
push
stos
mov
cmp
or
add
pop
mov
int3
lret
jne
cmp
and
rol
cmpsl
cli
pop
into
enter
push
mov
iret
dec
or
lahf
jmp
adc
jl
fwait
xor
mov
xor
jg
pop
cmp
es
pop
stos
negl
stos
and
xchg
dec
pushf
in
mov
mov
cmp
push
fisubl
gs
mov
mov
inc
leave
dec
jb
imul
xlat
sbb
mov
cmp
cmc
xchg
adc
nop
movsb
fldt
icebp
or
pusha
stos
shrl
ss
xchg
and
pop
jb
adc
into
incl
xchg
sarl
leave
int
scas
cmpb
mov
mov
loopne
fldenv
popf
mov
dec
in
shr
aaa
fldt
or
xchg
fwait
aas
mov
shrl
popa
imul
or
sbb
push
outsl
sarl
loopne
and
push
lcall
push
std
adc
cmpsl
push
lods
xchg
inc
dec
fbld
or
mov
ja
inc
scas
pop
clc
xchg
pop
jno
inc
mov
push
into
sbb
jmp
ja
mov
scas
mov
mov
das
dec
jecxz
aam
jmp
dec
jae
jg
jmp
aaa
dec
ljmp
out
outsl
sti
xchg
mov
addl
inc
stos
mov
mov
loopne
sbb
mov
pushf
mov
loopne
cmp
lret
jbe
out
mov
push
loope
call
push
sub
fiadds
sbb
jmp
pop
mov
outsl
pop
pop
adc
scas
pop
pop
subl
vsubpd
sbb
pop
icebp
dec
or
push
enter
lds
jecxz
cmpsl
pop
jmp
or
icebp
jns
mov
lds
pop
ss
lds
sbb
aad
aad
add
movsb
stos
js
mov
add
xor
mov
pop
and
insl
xorl
imul
pop
adc
fwait
add
jp
in
arpl
loope
scas
popa
sbb
inc
push
insl
xchg
shrl
cmc
push
pusha
dec
js
adc
mov
sub
xor
test
data16
aas
mov
mov
push
jp
test
xor
data16
xchg
jg
xor
ljmp
popf
fsubr
pusha
sub
push
scas
adc
lods
dec
add
sbbb
dec
lahf
ret
jns
es
pop
push
inc
xor
lret
cld
pushf
lret
jne
xor
ljmp
dec
push
push
sub
aas
adc
cs
fiadds
jge
jmp
aaa
outsl
jnp
int
mov
or
sbb
mov
and
inc
es
mov
dec
call
test
adc
mov
dec
and
pop
out
mov
int
cmp
scas
adc
in
sarl
adc
js
mov
cwtl
add
sti
sub
insb
mov
or
es
xlat
mov
cmp
push
icebp
nop
or
add
and
jg
sbb
lods
lahf
mov
push
loope
sbb
inc
push
icebp
jns
les
push
cmpsb
sbb
cmpsb
xor
iret
push
outsl
add
test
inc
mov
xor
sbb
ret
push
decl
aaa
or
repnz
mov
stos
add
pop
sbb
decb
xchg
insl
mov
leave
sub
mov
cmp
in
clc
icebp
mov
scas
sbb
dec
push
inc
mov
nop
rcr
jmp
repnz
pop
inc
ds
jge
idivl
fcomp
xchg
mov
movsl
mov
fisubrs
clc
jnp
sub
lods
mov
sbbb
int3
sub
cmc
mov
xchg
sti
push
jmp
cmpsb
fs
mov
aad
nop
xchg
iret
push
or
pop
in
popf
fcompl
fs
push
sbb
mov
or
mov
ret
xchg
insb
mov
push
in
push
jbe
push
xor
stos
xchg
andl
xlat
xor
fisubrs
push
push
loope
xor
ds
push
or
add
sbb
out
stos
call
lea
lret
push
mov
in
and
cmp
sti
push
lahf
push
sbb
aad
stos
dec
inc
scas
push
mov
xchg
insl
lcall
rcr
icebp
mov
in
sbbb
adc
and
jmp
scas
dec
push
inc
pop
and
mov
push
inc
and
pop
cld
pop
jo
xchg
mov
es
loope
jns
ljmp
lahf
cld
jo
repnz
pusha
dec
mov
mov
push
test
out
gs
data16
ss
stc
pop
icebp
mov
cmc
add
ss
jb
cwtl
sbb
mov
out
xlat
pop
loope
cmpsb
lret
jno
fildll
test
pop
loopne
push
stos
lret
mov
cmc
out
loopne
scas
sbb
test
arpl
iret
lret
inc
jle
sbb
pop
mov
xchg
sub
mov
lret
dec
mov
aam
mov
aam
push
mov
dec
inc
inc
sbb
enter
and
js
call
cltd
push
push
jl
leave
ja
mov
lock
jo
cmp
out
aam
mov
shr
jnp
jecxz
into
movsb
incl
in
testl
xchg
imul
sub
mov
push
pop
jbe
or
stos
jae
loop
int3
es
mov
les
andb
xorl
mull
ffreep
ja
out
jle
xchg
sbb
pop
inc
xchg
jne
cmp
addl
xchg
sbb
popf
lods
in
cmc
sub
xorl
xor
fldt
mov
std
sub
imul
mov
sti
arpl
imul
sbb
lds
cmp
add
push
cmpsl
pop
and
add
adc
jmp
fdivr
shll
mov
jae
mov
jp
stc
cli
xor
mov
int3
scas
push
mov
jb
sub
mov
ret
std
cmpb
insl
add
cmp
add
test
sahf
in
arpl
pop
jb
leave
push
jmp
push
mov
cmc
add
xchg
mulb
xchg
mov
scas
inc
daa
jnp
arpl
adc
pop
inc
jle
dec
lcall
adcb
and
add
fnstsw
jns
test
fnsave
jns
inc
loop
mov
mov
push
iret
orb
sar
adc
mov
shl
xchg
movsl
cmp
jmp
sahf
push
inc
xor
cmpsl
sub
fistpll
xchg
popa
lret
stos
das
lret
mov
mov
add
push
mov
hlt
mov
shl
add
inc
push
and
fsubs
aad
bound
pop
ror
bound
in
adc
pop
xor
arpl
ja
jae
out
test
mov
lock
outsl
imul
push
xor
movsb
jle
mov
shll
insb
in
push
push
sub
xor
fs
sbb
scas
ss
sahf
and
subl
cs
add
mov
test
adc
jnp
push
mov
push
out
or
insb
xor
clc
mov
cmp
xchg
jnp
mov
test
and
lock
sahf
and
jg
iret
dec
jb
mov
loope
xchg
aad
inc
dec
jmp
dec
cmp
int
sbb
imul
inc
ret
xchg
repnz
mov
xchg
push
andl
repnz
or
pop
sub
mov
inc
jns
mov
sub
in
shlb
mov
mov
jb
call
cld
mov
pop
jecxz
mov
scas
mov
out
xchg
rorb
push
mov
xor
inc
pop
xor
ret
xchg
mov
mov
mov
push
pusha
testl
xor
aad
stos
push
fsts
loope
fldenv
dec
xorb
fidivl
insl
xor
xchg
adc
dec
push
sub
mov
inc
dec
icebp
adc
sbbl
rol
iret
xchg
inc
fucomi
xor
cmc
cmp
ja
mov
or
mov
dec
nop
xor
inc
dec
jo
jecxz
xchg
rcrb
testl
ljmp
pop
push
and
mov
mov
shlb
leave
sub
mov
clc
aas
mov
cltd
mov
out
xor
mov
in
xchg
into
add
in
cmp
leave
outsl
addl
xchg
enter
cmpsb
or
stc
or
adc
lret
sbb
movsb
pop
cmpsb
mov
add
jp
sub
das
icebp
push
jg
ljmp
jb
lods
and
xchg
inc
sbb
roll
xlat
daa
and
cli
inc
and
or
inc
stc
cli
add
jno
xlat
incl
inc
movsb
add
mov
inc
test
rcpps
sbb
jmp
jne
mov
xlat
sbb
xchg
scas
aam
mov
sbb
addr16
ja
xchg
jns
xchg
lock
mov
es
jmp
lcall
pop
jno
push
shrb
lcall
pop
dec
lea
cmp
cld
xchg
andb
pop
cmp
mov
loopne
dec
jae
lods
mov
jnp
fldt
inc
dec
and
and
xor
ret
sahf
mov
pop
adc
add
lods
dec
mov
lret
sbb
lret
rorb
pop
xor
mov
mov
mov
push
push
cmpsl
mov
xor
addr16
jge
dec
mov
adc
mov
xchg
or
xor
daa
dec
and
imul
out
dec
dec
mov
mov
ds
push
je
sbb
sbb
pop
jnp
js
inc
sub
out
push
mov
int
icebp
cmp
stos
ficoms
sahf
rolb
lea
pop
push
and
test
cmp
pop
push
sub
xchg
cmp
sbb
es
mov
pop
rolb
add
daa
inc
mov
sbb
in
push
fbstp
lds
or
movsl
ja
mov
testb
fnstsw
adc
inc
inc
inc
and
fidivl
in
dec
adc
mov
dec
lods
hlt
or
test
int3
loopne
ljmp
aaa
sub
jne
fistpll
dec
or
test
aam
sbb
xchg
xlat
negb
dec
mov
mov
pop
jmp
jae
lods
cmpl
push
pop
and
push
jge
cmp
dec
lret
mov
iret
jo
fiadds
popf
in
or
mov
sub
xor
fs
js
dec
add
mov
sub
and
mov
sub
lds
repnz
xor
std
inc
bound
xchg
push
jno
mov
push
mov
xchg
rcl
or
push
movsl
fdivrl
aam
mov
mov
xlat
and
imul
aas
shll
push
push
in
cmpsl
adc
shll
cli
and
cltd
outsb
jl
sub
mov
jae
outsb
lcall
inc
dec
outsl
sahf
lods
push
pop
adc
pop
in
rorl
mov
stos
ret
stos
pop
pop
xchg
mov
rcrl
adc
mov
gs
mov
xor
icebp
pop
nop
jbe
mov
jbe
dec
icebp
pusha
stos
aas
out
ss
aad
push
pop
or
out
pop
fmuls
outsb
or
test
aam
push
inc
shrl
mull
leave
ljmp
loopne
xlat
pop
mov
jl
sbb
cmp
push
xchg
daa
inc
xchg
jge
mov
jae
mov
lret
daa
pop
into
xorb
xor
loop
sbb
int3
fidivs
movsl
aaa
xchg
jne
dec
pop
mov
incl
xchg
cmp
sbb
popa
mov
dec
cmc
or
pop
aad
out
lock
cmc
movsl
and
push
jnp
jae
orb
call
in
or
pop
sahf
cmp
xchg
push
daa
movsb
cmp
xchg
sub
iret
ret
push
mov
sbbb
leave
fildll
xlat
sbbb
aam
lods
into
jl
and
or
sub
insb
subb
nop
jmp
aam
fs
int
sbb
stc
dec
fimuls
jnp
jp
ds
ds
repz
mov
adcl
in
std
cmp
cmpsb
add
sub
xor
mov
cltd
mov
out
add
das
sub
pop
mov
es
pmulhw
xor
xor
movsl
sarb
insl
mov
and
or
test
repnz
mov
hlt
sahf
mov
jmp
popf
ja
enter
jg
mov
insl
cltd
fcmovb
fisttpl
lret
xchg
test
adc
rcrl
lods
lcall
jmp
sbb
loope
push
mov
inc
aad
add
rclb
xor
inc
loope
aas
push
pop
dec
mov
xor
iret
or
or
xor
mov
data16
pop
ret
mov
les
test
cmpsb
add
jns
xchg
mov
inc
fs
or
xchg
enter
add
mov
out
imul
sub
xchg
dec
inc
lods
dec
mov
out
fstpt
hlt
and
push
push
in
test
push
add
dec
in
sbb
xchg
js
negl
mov
out
shrb
dec
jg
jp
adc
mov
je
leave
das
dec
cmp
inc
xchg
sbb
fwait
xchg
in
cmp
and
push
call
jnp
dec
out
int3
stos
ret
ja
in
loopne
es
or
xor
mov
andb
stos
cmp
sub
xor
ja
push
jb
sub
jae
inc
movsl
cmpsl
xchg
adcl
or
mov
lds
cltd
shll
mov
dec
cltd
sahf
in
mov
es
ja
mov
pop
ja
int3
test
fcomps
inc
enter
loope
jecxz
add
xchg
addr16
sahf
jno
cwtl
xor
and
and
mov
mov
daa
jnp
fnsave
xor
fcompl
cmp
ljmp
xor
or
jge
mov
rclb
cmpsb
sbb
jb
pop
mov
jmp
pushf
xor
fs
jmp
mov
lds
ds
in
ss
inc
sbb
push
jo
cld
std
xchg
outsb
sahf
imul
sbb
popa
mov
jl
aas
xchg
push
andb
fidivs
test
inc
jo
jae
jno
xchg
mov
imul
leave
push
and
pop
sbb
cmp
and
sbb
loope
push
mov
repz
or
lret
les
mov
add
scas
lock
push
out
xor
ss
xchg
lods
xor
in
cmp
adc
xchg
lahf
dec
ja
mov
es
xchg
sbb
lods
cmp
push
and
mov
ror
sub
xor
clc
xchg
or
sbb
pop
lods
dec
cmp
je
pop
cmpsl
ljmp
aad
cmc
dec
aam
loopne
jmp
iret
push
iret
frstor
into
cmpsl
pop
aam
jle
arpl
add
push
cmpsb
and
dec
mov
inc
pop
dec
push
aas
push
jo
sbbl
les
lfs
xchg
push
sub
out
inc
add
mov
mov
or
pop
scas
fisubs
imull
mov
add
icebp
cs
mov
stos
in
rcr
roll
cltd
movsb
mov
aam
leave
and
lds
lds
fs
insb
jp
push
int
sti
jge
sbbl
dec
adc
push
popf
xor
xor
mov
andb
fidivl
cmpsl
xor
popa
hlt
cld
das
lcall
inc
ljmp
mov
pusha
loop
shrl
call
lods
and
mov
fsubp
mov
xchg
out
jecxz
fwait
jnp
jne
mov
cmp
test
cmp
imul
jns
stc
lcall
dec
mov
test
cli
ret
xchg
sbb
push
lods
cltd
sbbl
jge
xor
sub
push
aas
pop
imull
add
fiadds
shll
dec
cmp
in
movsb
sbb
jmp
outsl
add
aam
sbb
sbb
mov
imul
jg
inc
jns
leave
pop
jmp
push
push
mov
ret
clc
fs
int3
bound
ss
movsl
les
in
dec
orl
adc
cmpl
push
push
outsl
loopne
lcall
imul
addr16
pop
add
out
cmp
mov
pop
aas
push
push
sbb
test
xor
out
xchg
sub
test
xor
call
dec
xchg
mov
adc
mov
cmp
and
xchg
fwait
xlat
arpl
adc
cmpsb
je
mov
aas
and
pop
mov
mov
test
movsb
shlb
mov
mov
jbe
andl
adc
and
push
pop
scas
inc
xchg
jbe
icebp
stos
jb
fbld
push
fsubl
sub
pushf
jl
mov
adcb
jb
movsb
push
jno
pop
test
fsubrs
ljmp
or
jmp
xor
outsb
add
or
out
ficoml
sub
cmp
adc
jl
cmpb
cld
dec
sub
jns
bound
adc
je
sbb
mov
mov
push
ficoml
ja
aam
incl
pop
mov
adc
mov
out
inc
loope
aam
testl
pop
mov
inc
mov
xchg
or
repz
ret
jns
dec
movsb
cmp
xor
data16
jno
jle
adc
dec
jle
imul
adc
mov
xor
push
xchg
rcll
xor
shl
dec
mov
or
nop
inc
pop
jmp
adc
adc
aaa
push
inc
pop
repnz
sahf
or
jae
nop
jno
sahf
and
mov
lods
jb
pop
lock
sub
mov
pop
ret
call
pop
jmp
sub
movsl
cmp
jns
call
xor
xor
lcall
in
test
mov
loopne
mov
rcll
push
repnz
xor
mov
dec
pop
cmpsb
repz
jp
mov
scas
jo
js
dec
sbb
mov
hlt
stc
out
push
inc
dec
sbb
and
inc
inc
xor
adcb
movsb
repz
jge
cmp
or
xor
dec
arpl
mov
ret
imul
mov
lock
test
or
std
jo
mov
ljmp
lret
or
gs
cmpsl
aas
xor
aas
rorb
or
stos
lods
loopne
leave
fadds
or
cmpsb
cmp
pop
or
cmp
inc
loope
pop
into
gs
popf
mov
icebp
in
andl
stc
mov
adc
adc
popa
pop
mov
dec
mov
xor
sbb
lea
das
repnz
pop
out
mov
sbb
test
cmc
mov
mov
js
mov
mov
xor
notl
jl
xor
jp
mov
mov
divb
cmp
sti
insl
movsb
out
rcl
xchg
mov
pop
inc
push
sbb
mov
push
dec
loopne
mov
push
loopne
sbb
mov
or
cmpsl
jb
fnstsw
cld
and
pop
jb
mov
stos
mov
mov
inc
popf
loope
loopne
rcl
add
es
xor
sub
mov
pop
aaa
icebp
dec
ljmp
adc
fdivrs
test
jg
adc
out
jg
jl
mov
cmp
pop
mov
aas
add
push
popf
mov
sbb
inc
dec
fs
sub
iret
add
gs
arpl
in
jnp
xor
dec
jno
cli
ljmp
dec
aaa
mov
xchg
jno
ss
imul
push
jnp
dec
mov
add
repnz
and
push
mov
push
jno
vmovhps
jle
mov
adcl
fimuls
sarb
push
call
out
inc
into
pusha
stos
lock
push
add
ficompl
pop
int
clc
or
xchg
jb
cwtl
bound
lock
and
sub
rcrl
mov
fcmovnu
jne
mov
hlt
jp
jmp
lahf
push
add
jnp
mov
pushf
push
nop
push
imul
or
adc
std
xchg
fisubl
push
scas
fsubl
push
dec
adc
and
sub
ror
push
lret
out
sub
shl
scas
fwait
cmp
cmp
xchg
push
mov
jbe
repnz
lea
cmp
xor
repz
loopne
adc
jmp
and
das
cmp
or
add
shl
int
out
shlb
ljmp
bound
and
rorb
push
test
mov
mov
pop
into
adc
je
mov
push
adcl
cmpsl
frstor
cwtl
out
mov
lret
aas
mov
adc
in
mov
jo
cmp
cmp
ds
imulb
push
outsl
sub
stos
inc
popa
and
call
jl
jb
and
adc
pop
js
mov
xor
aad
outsl
push
pop
add
aaa
lods
mov
in
push
out
pop
adc
xchg
pop
pop
insl
outsl
or
mov
scas
cs
or
cmp
imul
mov
push
mov
inc
fnstenv
andl
sub
mov
mov
sbb
inc
inc
das
cmp
fwait
bound
inc
cmc
sbb
daa
in
adc
idivl
push
add
mov
push
xchg
scas
test
jbe
leave
ss
inc
jbe
out
call
sbb
pop
lods
inc
sub
sub
pop
enter
hlt
push
je
dec
sub
clc
push
cld
cmp
scas
mov
xchg
jg
push
mov
aas
dec
xlat
cmp
or
mov
mov
or
popf
xor
aad
xchg
inc
dec
mov
mov
xor
popa
jb
sbbb
repz
sbb
in
add
test
outsl
js
or
ret
out
lret
iret
mov
adcb
pminub
stc
mov
sbb
mov
ss
push
mov
es
imul
inc
fstpt
xlat
bound
aad
push
cli
ja
sbb
adc
mov
shr
adc
push
int
scas
push
ret
push
mov
cmc
sub
es
push
cs
adc
add
mov
sbb
adc
xchg
fimull
test
les
pop
ret
ret
jecxz
inc
repz
nop
mov
pop
sbbb
add
outsb
push
xor
sahf
cltd
andb
mov
xchg
int
cmp
add
xlat
jp
loopne
aas
push
shll
fdivl
adc
add
add
popa
in
mov
shlb
daa
mov
das
test
in
or
aam
cltd
lods
mov
xchg
push
mov
push
aam
mov
paddsb
pop
jns
fiaddl
aam
ds
shrl
repz
mov
les
movb
loopne
xchg
jmp
push
jl
divl
lret
jle
das
mov
cmp
ret
xorb
in
add
pop
aas
mov
mov
and
clc
jnp
stos
out
cmpsb
mov
mov
jae
add
subl
in
adc
lea
aam
xor
out
or
xchg
sub
adc
int3
or
test
mov
in
addr16
sbb
or
jmp
lock
lods
inc
fstp
mov
mov
leave
cmpsb
iret
cmpsb
and
xchg
jl
mov
or
popa
push
pop
jg
xchg
adc
jp
inc
inc
sarb
psubusw
sbb
jb
jle
jle
imulb
out
inc
fsubrl
leave
jmp
test
test
xor
scas
dec
push
fidivs
fisubs
pop
or
mov
cs
jae
repnz
rolb
sub
mov
out
xchg
adc
ss
or
loopne
stos
ficomps
sbb
out
cli
and
jp
insb
imul
or
lea
push
or
sub
mov
std
sarl
roll
negb
leave
adc
icebp
and
fs
or
lret
shrb
mov
fstpt
cmp
push
vxorpd
mov
pop
test
popa
inc
repz
dec
or
imul
adc
pop
jb
inc
or
test
mov
mov
push
loope
inc
add
das
sub
nop
inc
bound
mov
mov
outsl
cmp
es
push
ds
cwtl
xchg
sub
xor
dec
divw
and
out
add
fs
inc
ljmp
add
fdivl
push
test
cmp
lods
lcall
shll
inc
fsubrp
mov
jge
hlt
mov
aam
popf
or
pushf
insb
decb
pop
mov
fwait
ljmp
outsl
testl
adc
inc
rolb
sub
adc
adc
rcrl
andb
mov
test
aad
in
fmull
mov
cmp
xchg
stos
mov
stc
jno
cmc
dec
and
repz
icebp
mov
sarb
pop
sub
add
add
scas
std
or
rcrb
testb
xchg
mov
dec
cli
popa
jno
add
out
fldcw
mov
mov
aam
cmp
pop
daa
notl
cltd
in
mov
les
jmp
xchg
dec
es
aas
jb
mov
lods
sbbb
sub
arpl
jmp
push
lcall
stos
mov
sub
xchg
imul
sbb
inc
mov
nop
mov
push
inc
fiadds
cs
bound
stc
jmp
les
or
push
icebp
pushf
cmpsl
push
add
xor
cs
stc
inc
cli
out
add
outsl
fiadds
int
outsb
push
fsts
mov
test
xchg
js
in
mov
push
jb
cmp
sub
arpl
dec
arpl
pushf
inc
or
je
jns
aam
jnp
lahf
adc
cmp
push
jo
xor
movsb
inc
xchg
mov
add
rep
aad
xchg
mov
pop
std
or
jb,pt
bound
daa
xor
push
mov
cli
inc
daa
out
pop
cltd
or
or
pusha
ss
fwait
sti
nop
mov
and
aad
adc
cmpsl
push
test
in
lods
loop
xlat
lcall
sub
push
mov
inc
pop
imul
es
mov
iret
or
xchg
push
lods
mov
inc
repz
add
stc
pop
stc
je
daa
adc
pushf
loop
cld
cwtl
mov
movsb
jl
mov
movsl
mov
push
jo
popf
push
pusha
popa
cld
push
xchg
adcb
or
test
fs
rcrl
xchg
leave
mov
sbb
subb
clc
addr16
xchg
daa
inc
lods
mov
outsb
std
mov
outsb
mov
xchg
jge
cmc
mov
ds
aad
mov
xchg
xor
xchg
jae
leave
sahf
cmp
adc
mov
popf
rolb
push
negb
int
out
addr16
lcall
mov
jmp
pop
mov
or
mov
add
iret
enter
pusha
imul
aas
jle
testl
sub
xchg
sbb
enter
mov
mov
scas
call
inc
stos
lods
imul
push
fcoms
out
js
aad
movsb
mov
les
lea
repnz
hlt
and
lods
jo
xchg
xor
call
push
sbb
mov
test
test
xchg
or
and
sbb
ja
outsl
pop
shrl
test
mov
orb
repnz
loopne
clc
movsb
sub
push
repnz
pop
add
btc
jmp
xchg
insb
faddl
jbe
adc
subl
cmp
mov
xchg
sub
dec
ret
imul
sbb
loopne
sbb
pop
mov
aas
outsl
push
push
sbb
notl
inc
xchg
mov
fisubrs
mov
jno
adcb
lds
leave
pop
jb
mov
cld
mov
test
pop
and
xchg
jno
leave
out
fwait
ret
cmp
push
aas
imul
cmpsl
bnd
cmp
or
pusha
pop
lea
cmp
mov
jb
addr16
jo
pop
sahf
push
iret
nop
mov
ret
sub
dec
jae
add
sbbb
lods
cmc
rcrl
jecxz
les
cmp
loopne
push
into
and
fdiv
inc
cmpl
arpl
call
loop
xor
inc
pushf
loopne
cwtl
loope
add
ljmp
into
test
lods
mov
mov
in
xor
jmp
mov
es
aam
inc
test
adc
outsl
movsl
pusha
xchg
fstps
rol
das
fdivrs
arpl
push
xchg
test
sbb
addr16
loope
jb
in
int
sahf
add
rcrb
arpl
inc
stos
mov
jmp
addb
and
push
aad
call
into
adc
mov
js
scas
mov
lock
shr
dec
jg
jbe
outsl
jbe
ret
push
add
aaa
lret
scas
inc
loope
aaa
inc
xchg
mov
arpl
jb
mov
sbb
sub
jg
cmc
sahf
cmp
fs
adc
inc
mov
mov
push
jo
jl
int
incb
cmp
mov
push
push
xchg
stc
inc
sahf
jno
push
fsubl
iret
pop
inc
and
mov
inc
stos
inc
add
loopne
jno
imul
push
in
frstor
sub
pop
lret
pop
rolb
lods
pop
push
outsb
hlt
cmpsl
jecxz
cwtl
and
push
hlt
and
cmp
push
pusha
cld
push
aad
sub
insb
ss
sbb
or
in
add
aaa
xchg
scas
mov
mov
fdecstp
lcall
sbb
mov
xor
sbb
loopne
call
cmp
pusha
test
jp
repnz
ja
or
inc
fwait
shrl
and
in
inc
pop
inc
sub
stos
mov
lods
cmpb
mov
xchg
mov
jle
mov
push
mov
and
sbb
xchg
icebp
push
jo
push
sbb
xor
xchg
add
dec
xchg
fldcw
movsb
dec
inc
fidivs
pop
lcall
cs
shrl
push
mov
in
loop
jb
ret
cli
jae
sub
sbb
sub
cld
jae
pop
push
lcall
das
jle
popa
pop
je
xchg
mov
dec
mov
adc
pop
fisttpll
hlt
sbbb
arpl
imul
mov
adc
in
outsl
fs
mov
inc
mov
ja
sbb
jecxz
jnp
pushf
mov
fdivp
and
daa
sarl
and
push
or
cwtl
push
std
mov
and
cli
xchg
cld
lcall
movsl
sbb
stos
add
and
leave
adc
push
and
je
mov
fwait
inc
sbb
lock
mov
sbb
mov
lahf
dec
push
adc
sub
jmp
fwait
mov
mov
frstor
pcmpeqb
dec
mov
leave
jnp
movl
xchg
jns
push
mov
neg
mov
or
xchg
jecxz
xor
in
push
jmp
aaa
sbbl
and
mov
pop
inc
not
xor
jns
out
or
imul
ja
repz
xor
mov
out
jnp
inc
lods
adc
xchg
xchg
int
add
ljmp
mov
gs
jne
xchg
pop
push
lods
mov
pop
sbb
mov
or
lcall
xor
mov
bound
bound
divb
daa
push
xor
mov
cltd
jmp
or
xchg
cmc
mov
or
and
bound
int3
jns
adc
lcall
shll
sub
pop
outsb
sbb
shl
dec
loop
repz
lock
adc
jo
inc
sub
push
xor
xor
fnstenv
insb
cmp
hlt
inc
mov
repnz
and
sbb
mov
sbb
shrl
out
jnp
insb
sub
cmpsb
testb
lods
pop
repz
mov
lods
das
sub
test
pop
stos
or
adc
enter
mov
in
in
aaa
cs
xor
stos
pop
lcall
jmp
loope
out
push
idivb
imul
icebp
inc
and
sahf
test
and
xchg
adc
inc
outsl
mov
orb
push
frstor
cmpsl
mov
gs
xchg
test
call
sahf
sub
adc
xchg
lahf
loopne
rclb
sub
jmp
stos
inc
sti
or
pusha
js
imul
or
inc
scas
aam
pop
pop
out
or
inc
fidivl
lds
adc
xchg
mov
repz
lcall
sub
push
dec
xchg
dec
xor
lds
cmpsb
sub
ret
pop
mov
xlat
inc
es
mov
pop
in
xchg
aas
lret
jb
or
orb
mov
in
push
filds
sub
add
mov
test
adc
dec
mov
mov
xchg
inc
ljmp
fisttps
lods
dec
or
sarb
stos
cmp
loop
rep
ljmp
cwtl
xlat
push
or
adc
aaa
sub
jmp
dec
mov
or
adc
inc
dec
pop
hlt
mov
imul
repnz
push
xor
jle
lret
rcrb
rclb
gs
aam
and
scas
sarl
pop
adc
push
in
nop
mov
call
cmp
test
data16
ret
jg
or
adcb
xchg
int
push
mov
test
rcrb
sbb
fwait
cmp
lock
adc
cmp
jmp
mov
ljmp
pop
and
adc
jno
pushf
and
adc
fwait
push
sub
addr16
loope
mov
sbb
push
aad
jb
mov
and
fwait
cld
jnp
jbe
push
test
arpl
pop
xor
imul
mov
mov
in
scas
scas
addr16
or
ficoms
fcmovb
popf
xor
xchg
sbb
insl
or
cmp
cmp
mul
fstpl
xchg
mov
mov
and
cs
jecxz
enter
out
pop
fcmovnu
add
ja
push
test
cmp
add
test
cld
jne
add
xchg
popf
popf
and
insb
cmp
sahf
push
pop
xchg
stos
sub
pop
sbb
xchg
xor
jmp
xchg
in
push
mov
mov
in
les
lcall
inc
sub
cmp
push
nop
pop
and
pop
xchg
inc
mov
ret
jnp
scas
not
pushf
xlat
outsb
xchg
jbe
in
aas
cmc
inc
xor
insl
test
lea
xchg
test
scas
inc
sub
mov
loope
or
mov
popa
push
xor
inc
mov
dec
js
adc
repnz
and
imul
mov
daa
scas
inc
cwtl
das
jg
imul
and
pop
inc
insb
test
fisubs
subb
mov
and
pop
leave
mov
cmp
out
es
int3
push
por
cmp
and
jle
into
mov
adc
mov
sti
pop
je
sahf
adc
jp
jno
push
jg
or
xor
jns
sbb
out
push
icebp
int3
add
adc
xor
cwtl
stos
adc
push
in
lods
push
push
frstor
cli
fucomi
lret
sbb
loop
adc
jmp
ja
jne
mov
testl
ret
push
mov
adc
pusha
or
enter
xlat
mov
out
add
dec
and
pop
jecxz
leave
adc
jbe
aam
lret
push
sar
mov
out
sbb
fimuls
fsubrp
ds
fstpt
pop
pop
and
dec
lahf
inc
add
or
sbb
jae
jae
jp
fsts
pop
inc
out
and
sbb
sbb
lret
xor
sbb
adc
cmp
inc
fbld
int3
sub
test
mov
push
lock
push
fimuls
ja
stc
pushf
add
jnp
scas
sbb
es
add
mov
jmp
push
mov
mov
pop
into
jmp
xchg
lods
push
xor
mov
fdivr
data16
lock
fbstp
sub
mov
outsb
and
mov
sub
jl
xchg
add
push
mov
cmp
inc
dec
pop
jae
xor
rcl
push
bound
rcrb
cld
lcall
in
test
rcll
push
inc
in
cmpsb
sbb
outsl
daa
push
or
jno
scas
pop
neg
fistps
stos
inc
dec
pop
cmc
adc
outsl
pop
scas
nop
inc
pop
mov
hlt
or
scas
sbb
pop
lcall
jne
cli
pop
add
bound
jb
adc
insl
and
jnp
punpckhbw
and
inc
std
fiadds
xor
aam
sub
pop
movsl
pusha
lods
xchg
std
push
pop
pop
loope
movsl
sbb
cmp
es
jbe
sub
cmp
mov
stos
sub
testb
dec
mov
pop
lret
mov
add
sub
sub
fbstp
sbb
iret
sub
push
xor
push
jl
popf
inc
jle
mov
jae
inc
and
iret
pop
inc
add
fstps
cltd
flds
adc
sbb
out
bound
stos
pop
fisubrs
jo
mov
in
or
fs
xchg
outsl
mov
pop
push
scas
xor
test
or
xor
mov
pop
sbb
dec
xor
aas
addr16
test
pop
mov
loope
adc
jmp
jns
aad
aas
xchg
aaa
dec
les
and
rclb
ja
mov
movsb
jb
iret
push
lds
xor
jns
icebp
faddl
pop
pop
lods
decl
mov
xor
and
mov
mov
push
add
adc
fmulp
or
lcall
cmpsl
mov
pop
pop
idivl
xor
hlt
xchg
and
imul
repnz
jns
psllw
push
roll
jbe
jg
or
sub
aas
mov
cli
or
fwait
mov
inc
xor
cmp
push
xor
adc
sahf
fistl
cwtl
addr16
adc
cwtl
out
clc
insl
cmc
mov
xor
and
or
mov
push
in
stos
ror
inc
push
ljmp
adc
xchg
sbb
add
mov
ss
sbb
xchg
push
shll
mov
jae
dec
test
xorl
cs
sub
sub
push
daa
adc
fistpll
pusha
outsb
add
adc
ss
insb
jmp
cmp
jmp
js
fcoml
sbb
cltd
adc
push
jns
pushf
xor
mov
mov
pusha
sbbb
popf
ficoms
mov
mov
xlat
pop
xchg
inc
fsubrs
sub
aam
adc
into
cs
and
sbb
adc
and
xor
jns
jmp
sarl
fnstsw
inc
scas
xchg
inc
cli
jecxz
sbb
int3
movsl
inc
aad
gs
popa
xor
int3
fiadds
leave
and
mov
rorl
insl
loope
sti
xchg
iret
and
add
dec
and
or
push
addr16
cs
xor
ret
pop
xchg
adc
js
out
outsb
shl
mov
sbb
cmp
pop
aaa
push
xchg
or
addr16
dec
stos
mov
sub
nop
add
shrb
push
dec
mov
mov
jnp
cs
mov
outsb
xlat
int3
inc
mov
mov
and
jo
popl
or
pop
sbb
call
test
mov
shlb
xor
inc
push
mov
xchg
in
add
jb
sub
repz
jle
mov
sbbb
and
mov
xchg
lcall
mov
jecxz
mov
sbb
pop
dec
mov
pop
rcr
sub
xchg
nop
cli
movsl
and
movsl
jp
pop
in
stos
jbe
add
pop
mov
lcall
andb
jno
mov
daa
jne
xchg
xor
push
lret
or
or
lret
aas
andl
mov
or
test
jno
leave
jo
shlb
pop
jae
and
sbb
bound
test
xor
ja
sahf
or
add
cli
inc
jg
outsl
push
das
ss
arpl
adc
vpcmpgtw
adc
loop
lret
push
ret
adc
inc
int
loop
lcall
push
ret
mov
fwait
xchg
fldcw
enter
pushf
scas
std
jo
test
mov
out
out
mov
sahf
daa
jle
xchg
daa
sub
test
xchg
das
add
dec
gs
or
roll
pop
adc
pop
ret
js
cli
add
push
ffreep
rcll
push
addb
lahf
inc
sarb
push
push
pop
call
add
cs
dec
fbstp
cmp
cld
or
cmc
pop
xchg
mov
test
addr16
xchg
ljmp
and
in
lcall
andb
subb
push
inc
xchg
jo
adc
loopne
xchg
cmp
shr
loope
mov
jmp
pop
ret
rcll
xor
stos
scas
lods
adc
mov
and
repnz
test
fmull
xor
mov
inc
sbb
cmpsb
and
mov
adc
xchg
fwait
dec
push
sahf
jg
cmp
pop
lret
sti
cmp
in
scas
dec
cmpsb
jmp
or
lds
mov
lahf
out
lahf
jne
leave
es
and
popa
mov
or
aas
leave
mov
mov
adc
stc
test
add
aas
jae
jo
call
enter
mov
test
bound
xor
insb
cmp
or
test
std
hlt
mov
nop
repz
mov
mov
inc
pop
sbb
push
testl
icebp
adc
sub
cmp
jecxz
sub
rcl
dec
mov
sbb
movsb
cltd
test
cmp
adc
inc
xor
aad
inc
out
pushf
outsl
sub
mov
pop
scas
sub
pop
mov
int
in
mov
and
jmp
sbb
je
adc
dec
pop
mov
leave
jecxz
lods
adc
lahf
cs
imul
inc
or
xchg
popl
scas
fmull
xor
or
jnp
pop
sbb
inc
cwtl
cmc
sbb
aam
cs
inc
js
ja
out
fimull
ds
sti
cmp
jg
cmp
pop
cmp
mov
and
push
scas
xchg
xchg
push
jecxz
jo
and
mov
and
or
sub
dec
aas
fstpl
pop
push
movsl
xchg
mov
mov
pop
cld
mov
scas
xchg
cld
push
mov
mov
rcrl
cwtl
fldenv
stos
xchg
shlb
daa
sub
fmuls
aad
out
popa
lods
out
inc
lcall
leave
loope
movl
push
add
jmp
outsb
sbb
loop
fimull
scas
fdivs
stos
int
std
push
adc
sbb
rcll
cwtl
shlb
sti
xchg
jnp
jmp
push
ss
cmp
jns
cwtl
test
dec
adc
jle,pn
insb
jo
jnp
inc
shll
roll
dec
add
dec
cmp
or
popf
lock
cs
out
pusha
rolb
cmp
mov
mov
sub
adc
iret
sbb
inc
jmp
movsb
dec
scas
pop
dec
enter
inc
loop
inc
fwait
call
imul
dec
outsl
rcl
scas
fdivl
mov
out
sti
push
sti
sahf
dec
xchg
lods
jmp
ss
popf
clc
xor
sub
pop
mov
sbb
nop
lods
pop
std
adc
xchg
xchg
out
xor
outsl
cmpb
fsubl
ret
outsb
lods
inc
cwtl
sub
sub
or
test
mov
jae
sub
sub
iret
mov
sbb
lahf
sbb
pop
movsb
aas
lea
adc
pop
xor
lret
mov
xchg
xor
dec
movsb
aas
push
movsb
xchg
addb
sbb
mov
dec
add
or
pop
jge
out
mov
fmull
repz
and
push
adc
mov
daa
pop
mov
cs
jp
push
aaa
mov
inc
xor
or
test
lods
inc
ds
pop
sbb
inc
ficompl
and
jb
insb
push
dec
jecxz
movups
mov
divb
das
test
fs
dec
aad
es
out
test
cwtl
das
lds
pop
imul
adc
jns
dec
lcall
adc
cmp
push
sbbb
sub
enter
mov
add
cmpsl
js
stos
enter
inc
mov
pop
jb
sbb
insb
ja
popa
xor
xchg
jae
movd
pop
pop
or
or
std
xor
mov
call
cmpsl
ds
mov
shlb
int
cmp
pop
iret
fisttpll
stos
pop
lcall
cwtl
aaa
bound
pop
add
movzbl
jle
push
pop
aaa
loop
xchg
rorl
mov
imul
lods
cmp
ja
jecxz
insb
pop
lret
shrb
adc
int3
shlb
loope
ja
cmp
cmp
add
xor
jbe
cmpsb
sti
xchg
in
or
adc
xlat
insb
aad
aaa
or
and
mov
repz
push
mov
lcall
jne
mov
aas
outsl
inc
adc
popa
cld
xchg
push
pop
xchg
jp
push
mov
sub
outsb
mov
mov
addr16
fdivs
mov
adc
jno
ss
xchg
dec
outsl
adc
mov
add
cmp
inc
idiv
es
roll
sbb
sti
xchg
shl
cmpsb
dec
repnz
dec
mov
stos
cmp
adc
xchg
insl
dec
adc
xor
imul
add
aad
add
lods
add
ds
xchg
inc
int3
jae
icebp
jp
aas
mov
enter
xor
into
sahf
pop
or
outsl
shr
bound
dec
int3
js
sbb
mov
xchg
inc
inc
out
cmp
jae
popa
repnz
inc
sahf
jge
into
sub
cmp
int
or
divb
iret
fdivl
or
mov
add
fadd
jne
xchg
sub
cmpb
mov
pop
shl
popf
cmpsl
aad
dec
pop
cmp
xchg
push
xor
dec
test
addr16
out
jae
ja
sti
repnz
cmp
lods
dec
pop
bnd
cmp
mov
inc
loope
xchg
mov
fcomps
push
jmp
jae
dec
lock
adc
sbbl
test
inc
fucom
inc
mov
enter
and
adc
or
testl
cmp
out
xchg
js
daa
fsubrs
jg
imul
jmp
in
mov
aaa
mov
cmp
xchg
cltd
repnz
fs
scas
sbb
test
fiaddl
mov
push
test
rcr
stc
sbb
hlt
mov
mov
mov
test
cmp
cmp
sbbl
pop
add
insb
and
mov
jnp
ds
cld
inc
ret
jmp
jmp
icebp
push
mov
jno,pt
outsb
mov
adc
sbb
sub
mov
in
dec
iret
fninit
jbe
imul
xchg
sub
shl
push
mov
mov
clc
arpl
inc
fs
lahf
sbb
sahf
stos
mov
mov
rcrb
and
decb
cmp
fsubl
mov
lods
adc
jle
shlb
jnp
mov
mov
mov
aam
lea
pop
or
adc
xor
lods
push
jns
rcrl
push
outsl
pop
push
in
jle
xor
xor
xchg
divl
sti
lcall
push
stc
daa
icebp
jecxz
push
mov
aad
push
push
cwtl
loopne
fbld
add
cli
pop
pop
popa
stos
sbb
sub
movb
addr16
int3
fisubs
loopne
mov
lahf
and
xchg
int3
jae
pop
jmp
std
dec
inc
pop
out
popa
js
fcomps
mov
or
out
in
xor
or
inc
int
xor
jb
mov
leave
loop
data16
mov
mov
jmp
aam
inc
mov
jbe
mov
mov
xor
ja
aas
inc
add
decl
and
in
call
jne
in
jge
pop
pop
add
pop
mov
aad
jno
fmulp
in
nop
js
enter
enter
mov
out
and
dec
inc
add
inc
xor
mov
jl
outsl
mov
add
and
sbb
jae
sbb
xchg
into
sahf
mov
mov
mov
iret
push
and
loopne
popf
mov
jp
mov
mov
or
cld
xchg
inc
mov
leave
bound
test
mov
sub
sbb
push
sub
add
outsl
loop
mov
stc
into
sub
scas
sbb
push
inc
mov
dec
pop
orb
subl
sbb
lds
rcrl
sbb
lahf
and
and
iret
loop
shrb
pop
pop
cmp
push
imul
fwait
into
arpl
inc
stos
xchg
lds
sub
mov
xor
clc
inc
sbb
jle
andb
fdivl
leave
dec
jmp
inc
divb
sbb
adc
dec
xchg
xchg
ret
add
rcrb
inc
dec
loope
mov
aaa
add
push
mov
push
popf
dec
ds
mov
xor
es
pop
push
xchg
lods
ja
mov
dec
cltd
hlt
mov
push
loopne
movlps
je
mov
pop
add
add
inc
orl
repz
aam
sbb
lock
aaa
ja
jmp
movsb
cmp
mov
lock
stos
adc
mov
pop
nop
aas
xchg
inc
mov
dec
xor
imul
imul
scas
xor
sbb
xlat
das
mov
outsb
in
out
add
pop
imul
adcl
cmp
movsb
lret
ds
lcall
push
decb
in
cmp
inc
dec
mov
jmp
in
mov
cmpsl
xchg
push
jbe
loopne
js
jmp
out
icebp
or
stc
lea
push
sti
jb
jns
xchg
ret
or
xor
hlt
dec
push
sub
mov
int3
loopne
jmp
sbb
cmp
dec
push
rcrl
shrl
mov
mov
pop
push
out
fadds
out
xor
pop
lea
push
and
ja
daa
mov
cmp
sub
test
push
fstps
push
pop
daa
sbb
je
ficoms
fwait
sti
sbb
mov
add
and
mov
ret
xor
clc
mov
sub
dec
in
push
shl
cmp
adc
dec
mov
and
repz
clc
jno
push
inc
push
or
icebp
and
lea
mov
insl
fdiv
insl
fidivl
enter
push
sar
xchg
add
dec
push
pop
adc
lahf
lods
xor
lods
pop
mov
dec
jle
add
shrb
les
int
aas
push
mov
pop
shll
scas
inc
push
cmpb
jnp
insl
sbb
divl
nop
sbb
mov
add
fbstp
add
adc
cs
test
scas
push
xor
sarb
in
sub
leave
pop
cmc
push
sub
cmp
loopne
pop
cmp
mov
movsl
jecxz
mov
in
leave
xchg
adc
ljmp
aam
xchg
dec
pop
leave
cmp
add
cs
inc
cs
push
sub
scas
aaa
icebp
cs
sbb
jle
cmp
idivl
mov
in
outsl
out
mov
pop
in
xchg
js
andl
adc
addr16
mov
sbb
insb
nop
scas
in
cmp
imul
mov
orl
add
mov
pop
repz
push
mov
scas
cmp
sub
fsubs
idivb
jo
sub
jb
out
sbb
mov
imul
jge
xchg
inc
fadd
cmc
pop
repz
xor
leave
and
jne
mov
push
nop
aas
repnz
imul
les
pop
push
jo
mov
dec
inc
and
stos
repz
bound
cwtl
mov
xchg
mov
fistpl
outsl
cmp
mov
xchg
jg
pop
lds
push
adcb
pop
sbb
xchg
stc
int
mov
stos
pop
dec
pop
mov
jnp
test
push
pop
hlt
lds
xchg
push
push
in
xchg
je
fidivl
mov
lret
fwait
and
add
pop
mov
lock
jo
aas
pushw
rorl
pop
lret
mov
data16
mov
outsl
andl
cmpsb
enter
lret
cld
popf
jne
sahf
cwtl
lock
mov
xor
jge
addb
aaa
movsl
test
xlat
pop
push
ret
fwait
test
insl
cmp
sbb
mov
rol
pop
add
sub
js
cs
inc
fcom
daa
or
mov
mov
pusha
sbb
cmp
sbb
shlb
sub
in
add
adc
cmp
punpckhdq
dec
subb
sub
hlt
cmp
shrb
pop
jnp
add
xchg
rorl
push
jo
push
cld
jnp
stos
repnz
ret
mov
pop
lcall
mov
not
sub
dec
jns
repnz
jne
cld
sti
ja
sub
cmp
cltd
adc
movsl
lea
mov
mov
fcompl
adc
sub
or
repnz
pop
sbb
jb
rcrl
lds
inc
in
cmp
pop
mov
mov
adc
jp
xchg
jnp
and
ljmp
pushf
mov
test
shlb
int
and
loopne
shrd
data16
jecxz
incl
push
and
mov
cmp
cli
cmp
adc
ss
xchg
mov
mov
ret
jnp
cmc
mov
into
rol
xchg
js
jne
cmp
int
rclb
lock
xchg
jbe
lcall
ret
in
daa
push
addr16
inc
leave
vpunpckldq
mov
mov
add
sahf
sub
jno
or
and
outsb
mov
adc
daa
push
dec
xchg
mov
jmp
into
sub
ss
and
cld
sub
je
mov
adc
dec
aaa
and
lcall
in
stos
outsb
push
aas
mov
sub
xchg
stc
inc
mov
jecxz
adc
daa
ljmp
push
inc
mov
repnz
and
out
jle
lret
cwtl
fidivl
and
clc
adc
mov
lahf
adc
in
je
xchg
pop
cmpsl
sarb
aam
ret
sbb
loopne
cmp
inc
and
pop
mov
les
fidivs
cwtl
push
xchg
gs
and
cwtl
push
lock
loope
adc
jge
jge
insb
mov
loope
sub
mov
ret
testl
mov
add
pusha
dec
cmp
outsl
sub
sub
ja
fmull
mov
inc
fcoml
cwtl
and
mov
xchg
or
xlat
or
mov
sub
xor
daa
pop
rclb
push
mov
sbbb
lods
xor
daa
cmp
xchg
inc
fcomps
lret
dec
loope
shrb
stos
push
int3
jno
push
sti
pop
sahf
outsl
jnp
mov
sub
xchg
lea
inc
cmc
stos
xor
jb
or
lcall
mov
pop
into
test
mov
mov
jno
loop
negb
jg
sbb
adc
and
scas
xlat
idivl
idiv
xor
lods
cmpsl
hlt
sub
insl
aad
mov
xlat
adc
shlb
jo
jmp
sbbl
insl
push
sub
rcrb
popa
cmc
dec
sbb
mov
xorl
lea
das
pop
sbb
inc
push
dec
dec
loopne
cli
insl
xchg
dec
pop
cwtl
adc
sub
inc
iret
adc
gs
stc
je
inc
pop
imul
lods
xrelease
or
cltd
xchg
sub
fidivl
push
jmp
dec
add
push
aas
lods
je
lcall
mov
int3
rcrb
fistl
fsubr
stos
xchg
lods
cmp
inc
inc
mull
iret
dec
and
rol
dec
add
mov
lret
cmp
sti
in
subb
pop
arpl
sarb
sbb
ret
repz
inc
movsb
repnz
pop
sbb
rcr
outsb
add
test
pusha
sbb
out
repz
push
cmp
cmp
repz
dec
in
sub
jmp
mov
or
loopne
xor
mov
subl
jge
mov
mov
mov
add
fwait
scas
insb
insb
or
mov
icebp
dec
aad
xchg
test
push
jg
xor
shlb
into
lds
inc
in
or
adc
ds
cli
push
mov
lds
pop
add
and
add
lahf
hlt
jae
jmp
xor
cltd
dec
mov
mov
mov
jo
jle
jmp
mov
ret
adc
shlb
jo
xchg
scas
push
adc
bound
jnp
cmp
movsl
inc
icebp
insb
rcl
popa
sub
arpl
inc
xlat
and
pop
cmp
cli
mov
cmp
jle
sub
call
push
inc
in
xor
lods
push
or
lea
mov
and
adc
jno
cmp
sub
lods
in
test
ret
lods
inc
jmp
push
std
inc
xlat
push
sub
and
bound
jb
push
addr16
stos
sbb
jo
cld
pusha
push
sub
and
push
cmp
jo
xchg
dec
xor
scas
ja
mov
mov
xor
out
xchg
xor
adc
or
mov
mov
xor
inc
push
int3
add
loopne
xor
test
cltd
push
cmp
inc
sub
lods
jb
lcall
xchg
xor
out
or
and
sub
mov
dec
mov
stos
pushf
aas
inc
call
cmpl
lods
movsb
icebp
sbbl
loopne
mov
ds
xchg
jle
stc
mov
in
out
lods
push
jmp
cmpsb
adc
fnstenv
testl
mov
mov
xchg
cmp
sbb
dec
out
xchg
movsb
gs
fiaddl
popa
push
inc
jge
sub
and
push
mov
fidivrl
mov
push
je
bound
cmp
jne
ret
push
cs
jle
daa
mov
or
jno
jecxz
repz
sub
sub
sti
popa
cmp
pop
mov
adc
dec
dec
ret
loop
dec
cmp
and
repz
jo
mov
mov
lock
cwtl
mov
js
cmp
jns
mov
mov
filds
jae
or
cmp
lds
test
add
jbe
cmp
inc
inc
pop
lock
mov
movsb
jbe
adc
xor
cmc
jns
push
mov
add
sbb
or
jne
lods
mov
xchg
scas
js
mov
xchg
xchg
out
cwtl
je
mov
ja
call
xorb
pushf
testl
sbb
insb
jnp
pop
and
adc
sahf
xlat
outsb
ret
cld
jnp
es
sti
mov
les
aam
pop
insb
cltd
adc
mov
pop
cmpsl
andb
imull
ret
inc
cmc
adc
xchg
adc
xor
ficompl
lret
jnp
and
jecxz
pop
or
or
lfs
jge
xorl
fcmove
xlat
xchg
cmpsb
lock
jbe
aad
push
in
jb
mov
and
sbb
xchg
pushl
add
int3
pop
idiv
cwtl
fsub
and
and
dec
adcl
xchg
divl
inc
push
popa
and
jno
pop
jecxz
mov
mov
inc
and
stc
or
fstps
inc
rorb
ljmp
imul
cmc
in
cmp
mov
sbb
mov
cs
aam
or
push
or
int
cli
test
aad
cs
aad
push
sub
dec
lea
stos
pop
dec
filds
sub
sub
ret
fistpl
add
pop
ret
or
dec
in
add
jb
into
xchg
ja
mov
test
in
add
lea
push
lahf
subb
adc
lods
lret
push
pop
into
and
fnstenv
and
jno
mov
lods
clc
mov
test
jmp
mov
icebp
mov
iret
pop
lret
inc
fs
cmp
dec
shlb
cmpsb
fstpl
mov
movsl
je
add
and
pusha
and
fdivs
shlb
cs
outsl
pusha
adc
ljmp
sub
pop
jmp
add
mov
mov
data16
xchg
cmpl
add
xchg
add
xchg
jg
inc
imul
adc
jno
mov
bound
sti
fwait
jb
out
int3
sbb
stc
sub
mov
dec
lods
xchg
mov
mov
popa
and
sbb
sbb
sbb
dec
inc
jl
inc
aas
dec
pop
lcall
gs
jmp
sbb
adc
dec
cmp
pushfw
xchg
test
ficompl
pop
lds
mov
jnp
imul
scas
out
xor
ret
hlt
or
sbb
pop
aad
jo
xlat
nop
cld
fnstsw
dec
in
mov
ret
cltd
xchg
inc
cmp
pop
mov
xchg
insl
pop
sub
stos
xchg
jmp
mov
push
sub
das
jne
mov
push
sub
xor
scas
and
fldln2
test
inc
test
pop
lods
cli
in
ret
mov
bound
push
push
scas
or
push
lds
inc
adc
add
push
out
pop
outsb
test
aaa
dec
adc
mov
mov
repz
imul
loope
jge
and
gs
mov
sub
push
mov
add
aam
cmp
add
scas
mov
xor
ljmp
addr16
sub
fistpll
inc
jae
fimull
xchg
popa
iret
jp
jbe
fs
sub
cld
jle
pusha
ljmp
mov
mov
mov
rcrb
fmul
std
dec
nop
daa
addl
mov
loope
insb
sbb
pop
sahf
inc
push
push
stc
sbb
ror
fs
in
roll
xor
fs
lea
xchg
movsl
pop
call
push
add
cmp
or
inc
out
sub
pop
lahf
lret
out
ja
cld
add
sbb
cs
jl
out
out
or
xchg
mov
hlt
and
das
cmpsl
in
xlat
outsb
fldt
mov
or
call
nop
daa
je
insb
scas
arpl
scas
mov
add
fidivs
push
mov
jge
jb
jb
cmp
stc
mov
out
ljmp
repz
test
inc
cwtl
std
sub
test
and
xor
inc
call
insb
adc
dec
aaa
fnstcw
pop
mov
or
inc
ret
loope
sub
push
out
jl
inc
outsb
sub
push
aam
mov
std
in
js
ljmp
mov
mov
push
outsb
fidivs
lret
lcall
inc
fildl
js
scas
sbbl
jg
sub
jb
push
sub
dec
pop
jo
mov
jnp
xchg
cs
pop
mov
aaa
inc
jo,pt
mov
outsb
test
lcall
test
call
and
call
insl
fildll
jmp
das
push
lret
shlb
cmp
shrl
jo
faddl
and
aam
mov
and
test
fwait
addr16
push
dec
lahf
mov
mov
fdivrl
outsb
mov
and
dec
mov
and
inc
and
lret
adc
fildl
std
rcrl
ret
stos
lret
pop
andb
imul
fsts
mov
dec
andnps
aaa
push
imul
push
inc
or
or
sbb
cmp
cwtd
jg
int
lods
pusha
adc
subb
lods
inc
sub
fcompl
hlt
mov
xchg
fildl
and
pop
jo
test
mov
hlt
mov
mov
adc
enter
lods
daa
mov
cmp
movsb
cmp
fsubl
fs
cmc
xchg
and
push
jp
shlb
cmp
push
and
push
jbe
dec
mov
push
rolb
gs
icebp
fwait
jns
sub
mov
daa
add
movsl
hlt
out
adc
xchg
adc
shrb
cmp
add
scas
out
pop
mov
fsubrl
push
cmpsl
sti
lea
inc
push
scas
lods
inc
and
sahf
mov
js
scas
and
lahf
ss
push
xor
sub
in
inc
mov
aad
sahf
lods
dec
add
insb
addr16
cmpsb
xchg
cmpl
adc
jle
push
jp
lret
clc
add
sbb
jae
sahf
xor
mov
fdivs
movsb
pop
leave
fsts
xchg
xchg
dec
icebp
pop
aam
cmpsb
dec
rorl
pop
sahf
in
nop
adc
scas
dec
sub
in
add
mov
scas
stos
mov
arpl
xchg
mov
int3
ljmp
ror
and
mov
dec
aad
pop
sub
dec
decl
mov
into
sub
mov
pop
ficoms
clc
sahf
sbb
mov
repnz
xchg
arpl
push
out
shrl
jae
push
jp
jge
push
dec
push
inc
stc
cld
mov
push
mov
data16
inc
jp
xor
gs
test
ja
test
jmp
jg
fwait
mov
fstl
scas
mov
lods
cmpsb
mov
or
xchg
loope
lahf
or
mov
push
jecxz
cltd
sub
in
sbb
or
gs
xor
mov
loope
sub
out
mov
popf
push
jnp
xor
add
imul
or
jge
cmpsb
movsb
push
test
sti
xchg
adc
inc
das
addr16
movsl
push
pop
cmp
shrl
add
scas
push
repz
shl
push
fbld
popl
and
es
cli
mov
mov
pop
outsb
push
aad
or
jno
insl
mov
mov
andb
mov
cmp
xchg
popf
fdivr
leave
hlt
sub
mov
in
ljmp
testl
rcl
cltd
pop
shlb
mov
jb
xor
mov
shlb
push
stos
aaa
fiaddl
clc
sbbl
repz
and
in
xsha1
cmpsb
mov
add
mov
jae
pushf
sbb
repnz
mov
cmc
or
mov
push
push
in
push
or
push
sbb
dec
xor
outsb
je
inc
loope
mov
pusha
das
daa
inc
out
or
xor
cmp
scas
jnp
adcl
bound
in
adc
pop
jno
mov
push
lcall
cmpsl
mov
in
cli
cmp
vpaddusb
cmp
imul
shll
mov
pop
fnstcw
aam
xor
mov
int3
push
dec
jmp
cmp
xor
nopl
insb
and
imul
test
mov
or
add
stos
cmp
sub
test
iret
jno
stc
or
jl
jmp
iret
add
and
pop
xchg
push
scas
stos
inc
fsub
adc
cmp
bound
inc
dec
mov
xchg
jmp
xchg
fisubl
cmp
inc
inc
cmp
cmc
hlt
mov
enter
xor
mov
ja
in
dec
loope
dec
imul
loope
sbb
enter
cltd
ret
das
pop
int3
mov
lahf
mov
sbb
negl
pop
test
stc
inc
bound
ds
mov
xchg
fcoms
hlt
fmuls
stos
call
xchg
push
stc
jno
movsl
js
add
push
in
scas
push
adc
sub
test
and
mov
push
loopne
pop
in
testb
stc
loope
imul
push
xor
mov
mov
enter
flds
cmpsb
mov
dec
pop
jge
add
repnz
mov
adc
xorb
xchg
cmp
insl
sbb
les
cmp
push
adc
jmp
stos
xor
xor
push
xchg
cwtl
push
call
adc
push
es
xchg
mov
stc
sti
stos
cwtl
test
cltd
adc
mov
lret
daa
push
cmp
adc
jo
pop
icebp
movsl
aad
pop
rorb
dec
loope
jb
gs
push
pop
add
dec
in
jmp
loop
or
stos
pop
pop
jnp
loop
jl
push
mov
mov
xor
fcomp
mov
icebp
push
mov
push
xchg
xchg
and
int3
inc
dec
cmpl
jecxz
push
fwait
jnp
loop
inc
dec
xchg
sbb
ret
cpuid
ss
fsubrs
shrb
push
xor
pop
loopne
scas
icebp
adc
xchg
cmpsb
loop
lcall
rcll
dec
dec
push
pop
dec
in
out
es
cmp
jae
lahf
test
jg
pop
mov
xlat
mov
cmpsl
ficoml
movsb
lds
or
mov
test
je
subb
mov
mov
pop
cmp
inc
inc
jp
dec
jecxz
jle
in
fcomps
or
cmp
or
data16
lahf
nop
repnz
lds
les
xor
cmpsl
jb
xchg
scas
ret
adc
or
fistl
insl
xchg
dec
jnp
cmc
hlt
mov
clc
xchg
add
movsb
xor
ss
cmpxchg8b
iret
mov
mov
sub
ds
mov
clc
test
xor
cmc
sti
xor
xchg
das
gs
popa
inc
xchg
mov
cmp
mov
jmp
shlb
sbb
aad
pop
stc
push
testb
cmp
jl
pop
fistpl
dec
imul
outsl
mov
je
lods
xchg
and
inc
adc
or
aad
pop
std
xchg
repz
orl
dec
cmp
scas
inc
cmp
rol
mov
push
mov
out
das
addr16
and
jnp
cltd
xor
insl
call
sub
icebp
xchg
inc
pop
fwait
stc
xchg
mov
mov
sub
into
gs
push
fisttps
cli
cmpsl
out
mov
lea
push
je
fiaddl
test
pushf
movups
in
aas
push
in
or
arpl
jmp
out
out
jne
add
xchg
jno
xlat
xchg
sub
push
jl
mov
dec
or
or
stos
xor
sbb
je
jmp
add
fsubrs
jne
jb
movsl
jecxz
test
push
or
popa
fnstsw
sbb
or
dec
pop
and
cmpsl
ds
stc
iret
pop
dec
pop
mov
negb
inc
jecxz
pop
fisttps
pop
cmc
and
fldl
in
add
xorb
mov
push
jle
jle
imul
dec
pop
xor
jp
add
pusha
aas
imul
int
add
pop
cmpsb
adc
jns
dec
jno
test
aaa
push
stc
jp
divb
fcompl
data16
mov
mov
stc
popf
add
jmp
rcr
jno
ja
sti
pop
adc
and
mov
pop
loopne
out
insl
nop
pop
adc
aaa
pop
jbe
inc
pop
cmpsb
xlat
popa
clc
or
or
jge
mov
xor
in
ret
sbb
shl
sbb
push
dec
push
pop
test
sbb
jge
and
ret
fiadds
push
add
xor
and
out
dec
es
and
mov
jmp
jmp
xchg
dec
ret
movsl
inc
cmpsl
fnstsw
jb
ret
in
mov
xor
cwtl
ret
roll
jns
in
cmpsb
sub
pop
icebp
movsb
sbb
in
out
outsb
andl
shlb
add
int3
xor
je
imul
rcrb
ss
fsubrs
gs
cmp
fs
aad
pop
sbb
xor
sbb
mov
jl
xor
lods
scas
adcb
push
mov
cmpsb
es
mov
xchg
pop
repz
and
jo
test
inc
adc
xor
mov
push
lds
lea
adc
popa
loopne
jbe
or
daa
xor
jnp
push
sub
test
scas
lods
nop
push
call
cmp
lret
mov
scas
out
sub
shrl
hlt
cmp
call
ret
xor
sub
mov
sbbb
mov
push
push
outsb
push
out
je
cmp
ljmp
inc
xlat
jne
or
cmp
test
mov
add
sbb
mov
dec
nop
aas
jbe
mov
push
mov
or
xor
mov
push
mov
mov
imul
jns
ljmp
inc
jmp
mov
ljmp
call
in
xor
push
das
xchg
lods
mov
fbstp
xor
lods
jmp
push
xchg
fcomip
test
mov
dec
mov
dec
pop
mov
icebp
mov
rcr
out
daa
mov
jae
lret
cli
and
push
adc
jno
mov
imul
shr
imul
aas
mov
pushf
stos
loopne
cmp
mov
xor
adc
jno
shrl
inc
cmp
aaa
repz
pop
aas
push
jmp
jmp
xchg
mov
and
clc
push
sub
push
inc
mov
and
mov
sub
imull
pushf
repz
inc
ss
adc
mov
dec
push
mov
push
adc
mov
sbb
lock
test
xchg
jno
mov
sti
lahf
cmpb
cmpsb
test
adc
mov
mov
cmpsl
mov
cmp
cmpb
sub
mov
xchg
sub
xor
mov
jbe
dec
adc
fisubl
mov
call
stos
outsl
fcmovnb
inc
mov
push
lret
inc
stos
inc
jne
nop
scas
jp
leave
loope
fwait
mov
push
test
lcall
cmc
sbb
push
sub
cmp
clc
std
out
add
daa
push
loopne
aas
mov
ror
mov
test
dec
outsb
sbb
fimuls
or
sbb
imul
dec
sub
add
push
dec
push
cmpsl
ds
jae
daa
test
lds
fmuls
ret
pop
xor
dec
xchg
xchg
fs
out
xchg
cwtl
cs
cltd
test
pop
mov
push
lods
aad
loope
push
cmpsb
loopne
mov
mov
mov
and
mov
add
jecxz
jb
cs
xor
arpl
gs
xchg
cmp
popa
mov
insb
aas
add
mov
pop
lahf
test
or
or
sbb
andb
jp
rcl
pop
sbb
sbb
leave
jae
fistpll
pusha
popl
enter
and
jo
dec
dec
pop
xor
dec
fistl
xor
in
ficoml
mov
lods
int
ljmp
insl
loope
sbb
push
sti
adc
arpl
test
arpl
lds
test
add
mov
jmp
aas
add
pop
jbe
sub
cmp
push
mov
in
xor
mov
outsb
xchg
adc
xchg
or
adc
fwait
das
xchg
jae
pop
jns,pt
cltd
jns
cltd
jecxz
xor
fs
leave
fnstcw
mov
cmp
test
fldcw
sbb
push
inc
or
mov
int
xorl
nop
push
cmc
cmp
ds
mov
xchg
loope
pop
pushf
jle
movsb
lods
cmp
sub
xor
xchg
js
subb
sbb
mov
mov
lea
and
inc
movsb
addr16
mov
das
push
out
loope
pop
int
mov
xchg
aad
popl
jns
ljmp
loopne
xlat
adc
lea
push
arpl
cmp
into
mov
and
mov
push
movsb
scas
mov
gs
xchg
and
unpcklps
int3
inc
add
sub
test
loopne
sbb
pop
dec
dec
xlat
xor
popa
push
cwtl
adc
pop
jge
inc
cli
sub
hlt
jno
push
or
xlat
stc
iret
pusha
idivl
push
jp
cwtl
mov
xor
clc
sub
stos
popf
xchg
xor
xor
pop
pop
jno
xorl
pop
dec
xor
fiadds
adcb
mov
ds
mov
in
mov
sbb
inc
inc
add
mov
out
jmp
jne
test
push
loope
fistpll
lds
shrb
mulb
dec
push
lods
dec
fs
inc
popa
adc
sub
sub
mov
push
cmc
cmp
xor
lods
cmp
and
inc
inc
jmp
aas
xor
xchg
lcall
adc
add
inc
mov
aas
jo
mov
xchg
ss
add
fwait
gs
sub
or
xchg
xor
adcl
in
aad
pushf
pop
int3
mov
push
test
inc
xchg
test
jnp
inc
out
push
pusha
and
icebp
lret
cli
push
jmp
push
rol
push
jmp
jb
sbb
ja
movsb
pslld
and
push
xlat
sahf
mov
inc
push
inc
inc
ss
int
ja
or
daa
inc
sbb
push
push
mov
mov
jbe
pop
test
inc
movsb
repnz
fisttpll
dec
test
nop
bound
jp
hlt
cmp
dec
jg
in
jp
aas
add
test
ja
int3
inc
ss
sar
or
js
test
or
enter
in
jmp
cmp
test
sub
fsubr
fs
xor
jge
fs
mov
sbb
fldt
scas
inc
shll
pop
ss
int
mov
ret
fisubl
les
lds
xor
pop
mov
daa
in
jge
push
push
scas
mov
or
scas
dec
out
lods
inc
and
ljmp
fwait
sub
fucomp
cmp
sbb
shl
hlt
dec
hlt
lret
mov
cli
fdivrs
jb
inc
imul
ret
fisttps
fldt
fs
push
inc
loopne
dec
cmp
std
jb
jge
in
leave
adc
test
xchg
outsb
jl
cmpsb
leave
cmpsb
push
insl
and
add
pop
and
fadd
popf
pop
scas
inc
inc
adc
pop
loopne
cld
pushf
jle
sub
cmp
push
mov
inc
icebp
xchg
sub
in
cmpsl
ret
xchg
repnz
and
iret
fwait
test
scas
add
cwtl
loope
ret
dec
insb
push
lea
xor
push
push
cltd
lret
jbe
lcall
add
jno
inc
int3
loopne
fistps
mov
or
mov
sub
jnp
in
pop
xchg
adc
inc
addr16
jmp
icebp
or
call
dec
add
out
xchg
mov
jmp
addr16
jle
pushf
inc
aaa
scas
xor
jnp,pn
push
lods
mov
pop
or
add
lea
lea
daa
rorb
stc
je
out
mov
adc
mov
or
sti
mov
test
xchg
mov
and
xchg
adc
aas
sub
add
aaa
rclb
xor
xchg
inc
fs
ljmp
hlt
cmp
jnp
push
int
call
pop
test
loop
popf
and
scas
testb
mov
sahf
xor
out
push
gs
lea
push
sbb
stos
cld
mov
mov
insb
loop
push
nop
repz
pop
aad
popf
outsb
push
xchg
add
or
mov
loopne
mov
add
lret
or
dec
cmp
sbb
mov
push
jno
loop
mov
pop
pop
cmc
cmpsb
sarl
adc
jl
stc
mov
cmp
mov
aad
pop
or
and
fstpt
and
xchg
mov
dec
xor
stc
or
xor
pop
fdivs
jno
jno
scas
xor
dec
sbbl
popf
push
pushf
mov
test
mov
sbb
jb
inc
push
inc
mov
push
out
xlat
lcall
cltd
push
sti
in
xchg
test
inc
and
mov
jbe
fsubs
pop
ljmp
mov
and
lods
adc
daa
push
mov
shl
mov
enter
movsl
aam
adc
and
xor
in
decl
sub
cmp
mov
or
or
sub
xchg
pop
nop
dec
dec
mov
orb
xchg
aaa
jb
mov
adc
out
fistpl
xor
fsubs
mov
shrl
mov
jo
add
es
mov
adc
cmpsl
pop
mov
pop
loop
xor
jmp
leave
pop
pop
or
faddl
inc
sub
pop
xor
daa
sbb
push
add
add
sbb
mov
cmpsb
imul
or
dec
jne
mov
jbe
idivb
mov
xor
dec
pop
push
ja
mov
rorl
popa
and
pop
scas
add
mov
mov
popf
pushf
jno
add
fnstcw
fadds
jo
xor
push
xchg
ja
stos
jmp
fidivl
stos
out
sub
scas
cmc
sarb
jle
iret
push
lock
out
js
xchg
cmp
aas
push
out
mov
in
mov
ljmp
lock
xchg
mov
jne
push
dec
pop
mov
in
sub
cmpsb
jge
sbb
rcrl
mov
into
push
push
test
decb
fwait
jl
sahf
lret
subl
xchg
mov
mov
loopne
ficoml
and
xor
xor
insb
or
and
pushf
sarb
pop
cmc
scas
outsl
push
and
bound
xchg
out
and
pop
mov
xor
push
icebp
xchg
subb
mov
xchg
mov
sarl
pop
mov
jnp
jge
aad
lret
ficoms
dec
mov
loope
add
pop
xor
sbbb
loop
push
loop
sbb
sarl
xchg
or
in
insb
leave
inc
idivl
add
sbb
pop
mov
imul
jae
mov
lret
addb
dec
pop
pop
mov
or
jbe
shll
test
les
xorl
rol
push
out
sub
arpl
pop
inc
std
xor
stc
adc
jbe
lods
adc
jmp
imulb
leave
sub
or
add
dec
out
outsl
pop
loop
out
loope,pt
adc
mov
dec
leave
aaa
xor
mov
pop
adc
adc
add
pop
add
dec
adc
mov
mov
add
add
ss
mov
mov
aaa
xor
xchg
lret
add
push
mov
xchg
jmp
in
lods
outsl
xchg
je
xlat
movsl
or
mov
mov
or
push
insb
shlb
test
push
leave
xor
mov
add
fs
mov
fbld
insb
or
xchg
push
mov
jl
dec
and
jle
lcall
or
pop
or
idivl
cmp
mov
jo
in
ljmp
ror
stc
int3
pop
jecxz
pop
mov
hlt
inc
jmp
jbe
lret
cltd
icebp
sbb
inc
mov
pop
je
sbb
and
out
add
mov
dec
dec
dec
jecxz
jb
ret
inc
insl
int3
clc
push
inc
and
or
push
je
or
pushf
push
and
adc
loop
pop
insl
outsl
fdivr
push
repnz
fbstp
pop
jne
iret
jl
mov
lds
pop
pmullw
mov
test
xor
push
stos
das
mov
daa
inc
mov
popf
cs
jb
ljmp
sbb
movsl
mov
mov
jb
insl
mov
jnp
push
sub
push
dec
mov
push
adc
or
fnstenv
and
les
insl
add
ja
pop
shl
fcoms
cmp
push
lods
or
shl
sub
sub
pop
mov
ja
cltd
sub
inc
cmp
into
je
cmpsl
imul
add
icebp
add
in
nop
iret
adc
cmp
cmp
sbb
push
sbb
push
push
stos
mov
ja
daa
shrl
and
roll
test
mov
enter
fldl
dec
cmp
or
outsl
sbb
mov
das
mov
pop
push
jbe
and
fs
mov
cmpb
mov
and
xor
cmp
add
les
pop
outsl
stc
mov
cmp
std
push
jmp
xchg
xlat
sbb
pop
jb
add
imul
or
insl
jnp
dec
mov
jp
daa
jae
insl
movsl
pop
mov
mov
test
int3
mov
cmpsl
xor
fsubrs
xor
inc
into
adc
iret
inc
cmc
push
fimull
pop
fnstsw
fnstenv
fdivrl
cli
mov
mov
mov
cmp
aad
andb
jg
push
popa
scas
movl
stc
cmp
out
add
inc
movsl
dec
lock
out
movl
push
or
push
outsl
gs
mov
and
cwtl
xchg
daa
dec
fstl
pop
lcall
and
mov
in
fiadds
mov
add
cmpsl
mov
ja
push
pop
popa
clc
ljmp
fwait
xor
stos
inc
adcl
or
scas
xchg
incl
icebp
push
mov
xor
clc
push
loop
ficoms
jae
daa
andb
cli
or
and
cmpsl
shl
int3
cmpsl
loope
fbstp
pop
jmp
adc
pop
pushl
sbb
or
hlt
mov
lret
mov
mov
scas
inc
ljmp
sar
imul
xchg
jns
inc
loop
sub
lods
nop
in
jp
rclb
cmp
clc
out
mov
call
popf
push
test
xor
jmp
sbb
push
jns
pop
stos
out
cltd
pop
jecxz
repz
dec
mov
icebp
testb
pop
aas
sti
and
in
mov
inc
nop
and
dec
lret
and
lock
push
add
popf
sub
jbe
and
add
pop
push
gs
iret
and
push
data16
gs
push
std
mov
and
cmp
fmul
and
pop
mov
pop
xor
or
into
stos
xchg
ja
ss
push
and
ficoml
aas
enter
call
jecxz
pop
adc
mov
test
ljmp
and
outsl
shlb
sub
cmpsl
or
push
dec
sub
in
mov
adc
cltd
lock
int
and
or
sbb
icebp
xor
cmp
stc
sarl
aam
test
xor
lea
mov
mov
inc
mov
int3
popf
xor
adc
xchg
add
pop
mulb
loop
pusha
fwait
add
mov
xchg
sub
pop
jle
pop
mov
popl
xor
pushf
adc
int
movsb
dec
mov
mov
mov
lret
data16
push
lcall
jne
pop
mov
ficoml
sub
push
mov
dec
std
lods
jp
mov
shr
or
xor
pop
ret
cltd
add
push
loopne
in
dec
inc
push
ds
clc
in
les
fucomp
std
incb
ret
mov
out
cli
cmp
sbb
shl
push
js
lahf
shl
repnz
mov
lret
jbe
into
xchg
cmpsl
sbb
in
adc
aam
mov
ss
ss
inc
pop
push
mov
jge
jp
in
sti
pop
ret
xlat
mov
loopne
aam
and
outsl
mull
adc
push
sub
sbb
cli
outsl
and
cmpsb
fidivrl
dec
clc
or
or
scas
cmp
fwait
cmpsb
movsl
pop
cltd
mov
sti
pop
push
or
mov
out
jp
mov
pop
cmc
mov
cs
call
xchg
cmc
sahf
dec
ljmp
fwait
cmp
xchg
pusha
jbe
xchg
out
dec
les
das
jbe
stos
fistpl
mov
pop
mov
repnz
or
out
push
stos
mov
jne
mov
dec
push
mov
xlat
fildl
stos
adc
sbb
cmpl
mov
adc
sahf
pop
mov
pxor
xlat
mov
movsb
gs
in
pop
mov
loope
notb
jg
cmp
adc
shl
push
rclb
mov
in
cwtl
xor
xchg
push
sbb
loope
inc
pop
pushf
xor
lods
repz
shlb
je
aad
mov
jns
adc
mov
call
imul
fwait
dec
jb
mov
in
inc
aas
mov
xor
sub
xchg
dec
ss
mov
mov
shrb
adc
icebp
push
addb
loopne
testl
and
push
out
out
dec
adc
repnz
adc
cmp
lcall
jbe
lods
inc
xor
lret
fsts
jno
movsb
js
jae
adc
in
js
shrl
mov
adc
aas
jge
push
scas
pusha
and
shl
cld
add
sub
inc
jne
mov
jg
rcrb
mov
mov
orl
gs
push
pop
mov
pop
xor
jnp
test
push
pop
in
rcl
push
or
js
and
out
sbb
iret
and
push
in
or
jmp
or
sub
fsts
mov
iret
divw
ds
lea
xchg
ret
aam
sub
dec
mov
xchg
out
xchg
int
sbb
dec
loope
mov
outsl
cmp
mov
rcll
adc
nop
mov
arpl
or
sbb
dec
data16
mov
jmp
mov
and
inc
fs
pop
fwait
or
inc
xchg
outsl
andb
repz
cltd
sub
std
pop
fwait
dec
jp
xchg
loopne
imul
jns
imul
sbb
imul
insl
lcall
movsl
add
jbe
xorb
dec
movsb
out
test
jnp
mov
pop
xor
inc
inc
js
jb
mov
adc
pop
imul
rcrb
pop
daa
inc
cmp
in
lret
xchg
sbb
clc
out
inc
lahf
mov
add
sub
push
mov
adc
test
pop
test
jae
mov
pusha
ss
fidivrl
inc
xchg
push
mov
mov
and
fimull
pushf
adc
ja
sub
xor
jno
nop
imul
mov
aad
fnstenv
push
push
das
lods
neg
stos
xchg
cmc
add
cwtl
lods
pop
repz
and
adc
ret
mov
add
adc
xor
pop
ljmp
jno
xchg
ja
filds
push
data16
mov
gs
pop
lods
add
out
pop
inc
pop
cmpsl
je
sahf
rcll
aad
std
icebp
fldl
ret
push
shll
ret
fwait
mov
loope
or
enter
shlb
in
xor
gs
icebp
jno
bound
loopne
pop
push
push
scas
jecxz
or
incb
push
mov
ss
inc
xchg
push
movsl
cmp
popa
add
mov
and
mov
mov
js
sbbb
int
push
inc
in
sbb
in
inc
scas
ljmp
adc
adc
add
testl
jns
mov
movsl
call
pop
aad
sub
and
div
cmp
out
leave
test
testl
jne
pusha
add
fpatan
pop
or
icebp
dec
sub
mov
aaa
pop
pop
push
xchg
xor
lock
cmp
cmp
push
ret
fdiv
xor
pop
fwait
lock
dec
push
pop
jno
push
mov
mov
pop
repnz
xor
or
jns
sbb
dec
jecxz
xchg
mov
add
aam
mov
pop
loop
cmp
outsb
dec
ljmp
cltd
cmp
sbb
cmc
aam
daa
xchg
push
cld
xchg
add
lahf
mov
aas
in
xchg
jno
repz
test
sbb
iret
sub
jbe
loop
scas
mov
add
ja
clc
mov
and
out
int3
pop
mov
push
jp
cltd
mov
cwtl
lock
push
mov
or
arpl
mov
test
and
arpl
push
sbb
or
loopne
icebp
push
jo
mov
jle
std
xchg
pop
fsubl
int
sbb
xchg
les
stc
or
mov
ljmp
mov
push
nop
push
sahf
filds
sbb
or
test
test
icebp
les
or
mov
scas
inc
sub
adc
dec
lret
xor
add
adc
sub
mov
ficomps
mov
pop
sbb
outsl
out
scas
or
fcmovnb
andl
lahf
testb
or
out
stos
jmp
movsl
jno
and
cld
fwait
cmpl
pop
in
stos
ret
aaa
mov
arpl
add
js
inc
push
mov
pop
mov
fs
jecxz
fs
push
aas
inc
lahf
cmc
dec
mov
lods
rcrl
cld
insl
sbb
ror
rcrl
mov
loope
push
pusha
push
mov
test
sbb
shrd
lahf
test
xor
inc
and
insb
inc
into
les
hlt
fldcw
mov
cld
dec
inc
xor
in
jbe
aas
push
inc
push
xchg
jbe
mov
pop
inc
xchg
sub
mov
xchg
fcoml
gs
pop
lds
pop
push
inc
into
sub
fisubs
xchg
std
jo
xor
adc
push
mov
das
arpl
lock
push
mov
fs
sbb
push
sbb
pushf
adc
test
insb
mov
movsl
inc
ljmp
sbb
jp
jl
sub
xchg
adc
clc
dec
pop
cmp
pushf
xor
xor
sahf
mov
pop
adc
in
je
nop
jge
xchg
cltd
jo
sub
or
jmp
sub
dec
mov
cmc
pop
inc
clc
jle
cwtl
pop
iret
fwait
fs
xor
inc
cwtl
push
xchg
js
mov
dec
mov
out
adc
and
in
inc
add
xor
adc
dec
add
test
push
stos
push
jns
mov
into
shl
call
js
lret
divb
icebp
inc
lret
mov
mov
fucomp
pushf
xchg
pop
cld
fcoml
fsts
pop
cmc
add
xor
pop
fisttps
test
leave
idivb
mov
adc
mov
mov
shrl
outsl
jge
jb
fwait
sbb
inc
sarb
jb
cmp
inc
inc
jge
xlat
cmpsb
and
gs
jmp
jnp
cwtl
adcl
addl
xlat
ret
push
mov
stc
push
sub
out
cmp
sub
inc
and
xchg
loopne
out
mov
sub
mov
cmp
add
inc
push
sbb
push
stc
ret
mov
lods
and
jle
pop
fdivl
push
jg
inc
pop
jle
aaa
mov
inc
mov
sbb
aad
push
repz
and
daa
loop
js
mov
pop
fidivrl
xchg
mov
ret
cmp
repnz
ja
cmp
lock
mov
xchg
test
repnz
lcall
jno
add
data16
push
gs
mov
bound
sbb
in
sbb
sub
lods
aas
inc
test
stos
mov
rolb
faddl
aam
sub
add
cmp
pop
sbb
stos
cmp
mov
js
push
mov
inc
sub
pop
fiadds
add
pop
out
sbb
inc
fldcw
clc
jp
ret
xor
ds
lret
mov
out
cli
scas
sbb
or
xchg
sbb
mov
ljmp
adc
cwtl
lret
jbe
arpl
mov
xlat
mov
inc
cltd
cmc
inc
mov
inc
push
inc
out
xor
dec
cmpsb
push
cmp
push
xchg
aam
xchg
dec
jl
cmpl
dec
insb
cmp
mov
aad
lock
mov
mov
lea
and
push
aam
sub
int3
push
jge
jecxz
icebp
adc
dec
repz
add
fcomps
mov
push
mov
insb
mov
mov
pop
cs
mov
lods
mov
pop
test
or
xchg
hlt
xchg
nop
mov
adc
shrb
std
mov
mov
jge
dec
mov
jp
cmp
push
push
add
stos
or
outsl
sbb
bound
subl
mov
pop
and
and
ss
or
popf
and
shlb
inc
sbb
pop
lcall
cld
jno
sbb
shll
sbb
scas
js
sarl
stos
and
or
fs
les
mov
jle
and
hlt
xor
push
adc
jecxz
mov
push
cwtl
pop
xor
rcl
js
push
inc
popa
sub
mov
jge
shrb
xor
sub
mov
daa
mov
fld1
rolb
fldenv
push
sub
jle
repnz
aas
in
cmp
mov
push
sbb
cmp
ja
dec
xchg
pop
stc
insl
aad
jnp
pop
push
dec
add
jmp
lds
loopne
mov
dec
mov
mov
inc
xlat
notl
rolb
xor
jo
ljmp
lock
fcoms
fwait
mov
ljmp
jno
lock
push
mov
sub
mov
aas
jmp
add
jbe
seta
je
cmpsb
rcrl
fnstcw
stc
nop
xor
sti
fwait
dec
pop
imul
and
xchg
jo
inc
inc
lret
mov
ja
ja
bound
inc
in
or
xchg
pop
mov
and
les
mov
fld
jae
push
inc
mov
iret
lahf
stos
jae
addr16
add
ret
repnz
test
adc
lret
xlat
clc
adc
inc
or
les
fldenv
jno
and
mov
rolb
cltd
repnz
and
mov
jmp
aas
pop
out
sahf
dec
cmp
movb
setb
xor
xchg
sbb
push
sub
loop
mov
lods
dec
pop
xchg
shrl
mov
cmp
shlb
fwait
lds
dec
in
in
mov
ret
mov
loope
or
cmp
ja
cmpsb
cmp
push
mov
mov
lock
dec
mov
cld
xor
aas
pop
push
mov
add
xlat
push
jne
xchg
push
cmp
pop
xlat
lea
mov
add
push
jg
and
push
push
mov
mov
push
hlt
mov
sbb
jmp
mov
adc
xchg
shrl
and
push
and
outsl
xchg
adc
fisubs
in
or
push
repnz
push
pop
pop
out
into
cltd
std
test
xlat
dec
leavew
mov
out
enter
les
push
pop
xor
and
inc
mov
fucomi
xor
inc
rcll
sbb
cmpsl
adc
test
fcom
mov
sub
and
movsl
and
sbb
int3
pop
and
sbb
popf
push
push
jmp
or
out
into
cmp
int
inc
xchg
mov
rclb
xchg
rolb
sub
mov
js
clc
mov
pop
cli
pop
gs
jnp
push
xchg
faddl
nop
fwait
repnz
push
inc
fldpi
in
push
aam
popa
sbb
into
lahf
out
decl
jmp
mulb
pop
sahf
das
sahf
test
fwait
in
aaa
xchg
dec
sub
divb
mov
sbb
pop
lret
sub
jmp
fstps
hlt
xchg
add
or
push
rclb
xchg
mov
ret
ret
jns
jmp
cli
outsb
insl
add
in
daa
jmp
pop
sti
lods
push
adc
ret
sbb
add
adc
lods
daa
arpl
jnp
inc
mov
js
xor
inc
bound
jmp
mov
icebp
pop
or
mov
loop
mov
cmp
out
xor
pop
rep
shr
dec
cwtl
sbb
pop
js
inc
fldcw
lock
push
inc
push
xlat
idivb
jnp
out
xchg
dec
shrl
mov
pop
ret
testl
or
jo
or
sti
or
lods
mov
jne
fsubrl
cli
mov
repz
mov
lods
adc
out
push
out
inc
int
stos
inc
dec
push
xor
shl
pusha
and
pop
xor
in
mov
sbb
xchg
out
add
push
or
gs
repz
mov
cld
mov
cmp
mov
in
pop
aas
in
and
mov
sub
repnz
dec
or
test
push
test
pop
hlt
mov
push
mov
dec
call
push
in
xor
push
addr16
iret
adc
aam
das
and
lea
lods
inc
xlat
int3
lea
fs
stos
repz
xlat
out
inc
jo
scas
ret
loopne
xchg
mov
popa
bound
adc
xchg
or
in
mov
pop
insl
jmp
ss
roll
and
ds
adc
or
test
imul
push
lahf
adc
inc
in
xor
cmp
jle
stos
in
xorl
add
aaa
int
xchg
das
or
xchg
stos
inc
push
ret
dec
lretw
pop
adc
aas
out
int
dec
lcall
jmp
rorw
repnz
cmp
mov
test
jnp
jae
leave
pusha
das
xor
out
and
push
test
test
and
mov
mov
loop
fcoms
dec
stc
js
cwtl
loop
add
add
cmc
pop
mov
fmuls
or
into
push
es
idivl
int
icebp
std
jp
xor
dec
pop
nop
outsb
out
xchg
popf
xor
les
test
lret
mov
out
pushf
repnz
ljmp
push
dec
out
adc
jo
push
scas
popf
insb
cmpb
sti
sbb
cmp
and
add
das
ret
fistps
mov
push
shll
aas
movsl
imulb
mov
ret
mov
movsb
cmp
jg
cmc
jnp
ret
in
pusha
pop
cmc
gs
iret
cmp
out
cli
adc
push
cmp
adc
enter
mov
inc
sub
je
pop
lret
dec
add
mov
cwtl
jnp
mov
mov
aam
test
jo
popf
leave
aad
adc
es
in
push
mov
rcll
mov
into
and
les
pop
sub
mov
sbb
insl
mov
mov
and
xchg
jl
lea
xor
cmp
xchg
in
xchg
inc
mov
and
leave
mov
jne
cs
add
repz
push
mov
sub
fistpl
idivl
inc
data16
push
aaa
push
fucomip
aas
inc
cmpsl
loope
pop
mov
add
xorb
repz
sbb
mov
loopne
mov
aam
insb
es
scas
out
sub
xchg
add
js
inc
xchg
insb
inc
fistpl
jle
pop
nop
sbb
jle
mov
jl
mov
ficoml
call
pop
and
cmp
and
ret
xor
daa
lahf
idivb
push
sar
pop
sbb
fsubrs
popf
mov
dec
add
inc
mov
sbb
mov
fiadds
or
mov
sub
into
inc
dec
iret
icebp
jb
cmp
in
pop
adc
or
mov
mov
pop
ret
lds
push
icebp
orb
xchg
imul
jle
icebp
or
add
jb
mov
scas
push
scas
jbe
cs
fdivl
and
icebp
adc
add
sbb
sbb
cmpsb
dec
xor
xor
insl
xlat
xchg
call
mov
mov
pusha
cmp
icebp
movsl
out
xchg
sub
cmpsl
pop
or
iret
xchg
inc
sub
hlt
mov
xchg
xor
sahf
adc
decl
push
add
pop
mov
std
mov
and
aaa
into
frstor
inc
inc
adc
dec
and
push
or
push
cld
testl
adc
mov
inc
das
adc
jbe
cld
lahf
sahf
adc
mov
inc
push
jg
addr16
repnz
inc
enter
ficomps
popa
andl
cli
push
jp
mov
jno
pop
add
push
mov
pusha
xor
or
push
and
fisubrs
out
lret
hlt
cmpsl
dec
cmp
push
mov
inc
aaa
inc
adc
cmp
cwtl
insl
fnstsw
sbb
jne
mov
adc
mov
or
mov
outsb
or
or
and
push
jno
inc
mov
xor
movsl
jmp
dec
xor
shll
adc
dec
push
je
lret
outsb
xchg
pop
int
popf
insb
jl
inc
jo
jp
popl
cmp
adc
mov
fdivs
out
cwtl
test
add
frstor
pop
jecxz
fs
push
popf
inc
icebp
ljmp
ret
decb
xchg
fmuls
sti
sub
pop
or
dec
mov
dec
sbb
mov
inc
lret
xchg
add
fidivrs
test
lret
rol
stc
jp
aam
mov
adcb
and
mov
sbb
push
insl
arpl
enter
fnstsw
dec
push
pop
insl
std
mov
mov
insl
pop
dec
mov
sbbb
shlb
movl
and
xchg
add
and
lcall
inc
gs
fmull
adc
les
pop
cmpsl
out
in
xchg
add
lock
mov
pop
into
cmp
dec
dec
mov
mov
movsl
push
jl
cmp
fisubs
mov
adc
lret
mov
jns
cmp
movsb
push
rcll
mov
push
pop
ja
cmp
or
sbb
out
cmp
sbb
ljmp
fldenv
push
stos
pop
pop
outsl
outsb
orl
popf
adc
test
pop
xchg
or
movsbl
jnp
addr16
fwait
inc
push
and
out
clc
pop
ds
mov
je
pop
dec
cmp
shl
and
lock
and
inc
loope
jno
mov
in
and
adc
inc
bound
push
fnstenv
mov
push
and
pusha
clc
mov
fidivrs
in
cmp
inc
js
mov
push
cs
mov
pop
pop
xchg
mov
cmp
push
xchg
or
mov
jo
jb
leave
adc
jp
mov
fwait
sbb
cwtl
popl
cwtl
test
mov
adc
and
loope
jle
push
cs
push
adc
and
popa
cmp
lcall
lcall
pop
and
cmp
ficoms
mov
fsubrs
adc
lcall
and
cltd
bound
adcl
pop
js
pop
xchg
popf
sbbb
adc
enter
je
jo
imul
insl
shll
pushf
cmc
push
jge
cmpl
and
imul
cmc
mov
fbld
dec
icebp
xchg
enter
in
in
pop
test
mov
inc
or
xlat
lods
gs
mov
mov
push
jg
jmp
aaa
sub
test
lret
out
lret
mov
mov
adc
adc
or
imul
sbb
and
xor
out
cmc
cwtl
test
jl
fisubl
mov
insl
add
mov
mov
lret
scas
inc
std
inc
loopne
sub
push
xchg
xor
jbe
mov
stos
pop
adc
hlt
add
ret
sbb
ds
mov
add
jb
sbb
xchg
ljmp
cmp
leave
pop
rcrl
add
cmc
aad
inc
repz
repz
into
gs
lahf
mov
inc
fstps
mov
adc
cmp
xor
test
sahf
test
frstor
cmc
inc
mov
or
test
sub
adc
dec
sub
mov
xchg
mov
bt
sub
jns
pop
jnp
jp
mov
fstps
cld
jnp
rorl
mov
scas
loope
addr16
or
lods
and
mov
mov
adcb
leave
scas
cli
stos
fsubr
es
xchg
push
push
lcall
loopne
mov
in
out
jecxz
lret
or
ret
pop
insl
pop
jmp
and
mov
mov
loope
add
xor
add
cltd
sub
enter
iret
cmp
pop
sbbb
cmp
fcmovne
gs
mov
mov
stc
xor
mov
popf
dec
cmp
inc
stos
xlat
jmp
rcll
sahf
mov
cmpsl
out
movb
add
sbb
cld
test
cmp
or
vmwrite
mov
adc
test
push
mov
int3
dec
out
dec
dec
sub
ljmp
cmp
test
stc
cmpsb
mov
push
pop
cltd
inc
fisttpll
ret
push
mov
sbb
imull
or
mov
pop
popf
icebp
xchg
lods
dec
mov
ljmp
popa
insl
rclb
test
out
sbb
je
stos
add
xor
mov
push
femms
popa
adc
insb
bound
jno
add
xor
push
cmp
shl
sbb
sbb
add
push
aaa
xchg
es
inc
xorb
jno
shrl
out
dec
adc
mov
sub
in
fnstsw
stc
fisubs
aaa
adc
stc
push
inc
mov
int
mov
jo
and
cmpb
mov
fmull
stc
lret
mov
or
rcrl
les
or
jb
fbstp
xchg
xchg
and
std
jo
lret
adc
lea
mov
and
add
xchg
pop
negb
out
insb
jo
daa
aaa
or
jg
mull
xor
sub
fxch
ficoms
pop
cmp
js
mov
lods
dec
movsl
ljmp
int3
das
lahf
lds
add
mov
in
imul
dec
mov
and
dec
icebp
mov
inc
xlat
dec
repnz
aaa
in
test
mov
inc
imul
pop
inc
scas
add
mov
jno
loope
clts
stos
lahf
pop
adc
in
push
add
inc
cmp
mov
mov
jne
stc
shll
stc
aas
cmpsb
lods
lret
adc
sbb
mov
popa
mov
mov
pop
in
aaa
mov
pop
cmpsb
les
and
inc
cmpsb
mov
and
mov
jecxz
addl
loop
inc
pop
add
add
pop
lods
ss
pop
clc
inc
cmpsb
sbb
sub
fldcw
add
dec
push
shrl
xchg
scas
push
or
cmp
notl
mov
mov
daa
cmp
adc
lcall
fcomip
fdivr
xchg
pop
sub
adc
dec
sub
fwait
addl
pop
jmp
dec
dec
cmc
dec
mov
adc
ss
mov
gs
mov
ficoml
mov
xor
stos
enter
or
adc
lods
jecxz
les
popa
addr16
sub
rcll
inc
push
imul
mov
jle
enter
dec
pop
out
lods
sub
int3
jg
sbb
mov
add
sbb
jp
sub
nop
in
push
xchg
mov
clc
popf
dec
pop
test
mov
adc
and
xchg
in
push
xchg
inc
ss
xchg
jmp
xchg
js
mov
xor
sbb
xchg
test
push
sahf
int3
fdivr
imul
mov
sbb
insl
push
mov
push
fsubrl
inc
cwtl
test
in
inc
ret
int
dec
loope
jecxz
dec
loope
cmp
repz
pop
loopne
ret
mov
nop
mov
insb
xor
pop
jbe
jl
mov
push
or
xchg
loope
repz
test
inc
inc
stos
jp
stos
inc
cltd
inc
negb
iret
mov
sbb
jae
shrl
dec
pop
xor
inc
sbb
and
push
and
sub
xor
std
sarl
adc
cli
popf
push
inc
push
mov
push
repnz
pop
test
jecxz
add
movsl
mov
inc
fcompl
pop
movsb
ds
push
leave
xlat
jns
or
hlt
in
into
fidivrs
mov
leave
xlat
dec
or
icebp
pop
mov
xor
lahf
xor
or
pop
lods
dec
pop
pop
stc
js
sub
and
jnp
dec
pop
sub
fbstp
add
mov
in
mov
push
cmp
inc
je
scas
jns
xchg
mov
cmc
imul
daa
out
cmc
push
sti
mov
mov
sbb
jl
sbb
push
inc
das
mov
xor
test
fstl
rcl
addr16
movsl
loopne
out
pop
mov
jbe
mov
lea
hlt
imul
shr
sub
data16
and
xchg
mov
xor
jl
clc
sub
pop
ds
push
inc
in
shll
stos
mov
in
adc
pop
dec
das
or
pop
leave
nop
jmp
je
fistl
fcoml
pop
filds
notb
cli
and
lea
mov
mov
xchg
jo
cmp
mov
jle
int3
mov
xchg
ja
les
and
lods
ret
jle
dec
pop
cmc
lahf
mov
bswap
testb
pop
or
push
push
stos
jo
pop
xchg
xor
shll
ds
in
xor
enter
rcrb
fnstenv
jne
les
pop
cmp
mov
das
fnstenv
jne
jnp
push
inc
dec
ja
shl
adc
push
dec
pop
mov
out
adc
push
insl
add
mov
addr16
sub
add
mov
mov
add
cmpsb
xor
arpl
scas
push
and
arpl
frstor
js
pop
daa
adc
imul
es
cmp
xor
jle
les
xchg
xor
cmc
jecxz
es
inc
inc
aas
into
add
mov
mov
ficoml
shl
add
jle
shll
shld
loope
daa
push
lahf
inc
jmp
cmp
adc
push
and
ret
sub
decb
add
mov
ss
bndstx
xor
pop
mov
xor
push
adc
pop
inc
pop
dec
push
clc
aas
in
push
out
push
xchg
jb
loopne
mov
imul
rolb
test
cltd
clc
mov
jp
or
dec
dec
in
mov
leave
jo
insb
mov
imul
jbe
or
cmp
push
ja
sub
inc
shlb
push
cltd
mov
fmulp
fmulp
jb
stc
test
stos
cmc
mov
jo
and
fdivl
imul
int
fnstcw
aam
mov
rorb
dec
cmpsl
adc
aam
fs
sarl
outsb
enter
and
jle
push
and
ss
lods
loopnew
pop
jmp
sbb
mov
ss
jae
push
mov
orl
and
push
data16
push
push
mov
mov
ds
cmc
outsb
push
out
inc
mov
out
pop
out
in
andl
ljmp
out
je
xor
mov
push
fs
arpl
andl
cld
push
leave
mov
sub
pop
inc
outsb
clc
mov
add
xor
inc
cmp
push
jecxz
test
ja
mov
adc
push
sbb
inc
inc
dec
scas
dec
xchg
dec
lods
dec
dec
dec
mov
test
shrl
sub
jg
dec
lret
popa
imul
fwait
dec
sbb
mov
mov
xor
lods
add
fstpl
and
rcrb
mov
xor
pop
int
jno
rclb
mov
push
sub
cmpsl
in
popa
and
flds
insb
aas
mov
not
cmc
test
cmp
fwait
add
xlat
pop
mov
dec
icebp
mov
lret
pop
loopne
push
adc
popf
xor
mov
mov
push
jne
sbb
movsl
loope
or
inc
sbb
inc
push
iret
ficoml
sti
dec
insb
xor
fstpl
ja
adc
fs
or
inc
mov
jno
pop
mov
push
sbb
out
dec
es
xchg
stos
rol
ljmp
adc
out
add
orl
jnp
lock
xor
push
lea
mov
cli
or
jnp
sub
movsl
xor
push
cmpsb
xchg
jle
cwtl
andb
jb
pop
sti
out
fisubrl
sbb
aam
and
push
inc
sar
adc
mov
xorl
test
shlb
jp
out
mov
sbb
pusha
jmp
sahf
ss
adc
push
xchg
mov
popf
mov
xorb
mov
mov
push
in
je
sbb
and
stos
cmpsb
push
ret
mov
out
pop
test
rcrl
lods
mov
clc
sbb
xor
and
lea
shrb
and
sbb
adc
jbe
sub
and
scas
cmp
insb
jg
lea
xor
int3
push
ljmp
xchg
cmp
fistpl
subl
iret
out
cmp
enter
loop
or
ss
push
shr
xchg
int
das
sub
lods
cli
call
fnstenv
int
pop
outsb
into
not
jbe
and
mov
cmp
xor
xchg
pop
scas
movsb
pop
sbb
add
inc
dec
arpl
fs
cmp
jg
adc
inc
popf
out
or
and
fwait
roll
aas
cli
hlt
and
push
bt
inc
cmp
sub
das
add
fmull
stc
rclb
and
pop
mov
lret
xor
sbb
popf
sub
jbe
adc
mov
ret
or
aas
lret
mov
aam
pop
adcb
or
xlat
adc
mov
xchg
test
and
inc
adc
cmp
xchg
inc
inc
push
and
pop
inc
fisubl
sub
insl
jno
jb
pop
arpl
sub
fistpl
or
xchg
xchg
mov
divl
in
int3
pop
jecxz
push
sbb
add
leave
jne
int3
imul
cwtl
jmp
orl
in
shll
cmp
stos
push
testl
je
xorl
xor
lock
sahf
stos
test
das
sub
jns
jmp
adc
fs
push
xchg
call
lret
ret
arpl
daa
out
xchg
lea
pop
push
push
outsl
cmp
and
lret
test
cwtl
mov
cmp
cmp
push
sub
sub
pop
lahf
lods
inc
adc
test
imul
mov
lret
jns
lods
dec
adc
inc
inc
jo
push
outsb
jmp
sbb
cmpsl
cld
dec
pop
imul
loopne
outsb
shlb
lcall
push
jle
aas
mov
add
pop
rorb
push
fiadds
fscale
sub
aaa
cltd
pusha
fildl
outsl
push
or
xor
call
or
mov
bnd
mov
rcrl
xchg
xchg
shl
fisttps
fistpl
jno
xor
scas
mov
ja
rol
inc
adc
ds
inc
sahf
push
cmp
xlat
fmuls
clc
or
cmc
mov
adc
iret
push
fsubrs
ret
fmulp
sarb
add
testl
shlb
dec
testb
imul
mov
mov
pop
aas
xchg
mov
inc
popa
xchg
scas
and
je
adc
xchg
inc
and
test
fwait
aas
rorb
xor
jmp
dec
cmp
mov
jmp
add
jmp
sbbl
cmp
hlt
out
mov
mov
jmp
cmp
mov
pop
lea
in
ret
lretw
cmpb
add
mov
sbb
in
mov
jmp
mov
add
sbb
outsl
cs
xchg
sub
lahf
add
notl
or
ret
cmp
xchg
shlb
dec
shll
mov
js
sbb
sub
aad
pop
out
inc
jl
dec
rorl
sbb
jb
jle
clc
outsl
sub
ss
out
loope
std
shll
in
in
mov
addr16
xchg
repz
push
popf
mov
jns
ljmp
fucomi
sbb
imul
test
push
imul
adc
sbb
fs
call
push
ds
xchg
pop
add
push
sub
mov
add
or
cli
push
xchg
inc
push
das
ss
jl
sbb
movsb
inc
add
pop
jle
hlt
ret
arpl
lock
cmp
aaa
pushf
push
popf
inc
jmp
lock
jg
outsb
adc
imul
xchg
or
mov
mov
jae
gs
pop
cmp
loope
adc
jle
nop
jne
cmpsl
mov
xor
add
and
inc
xor
movsb
lcall
das
ret
jl
add
dec
bound
mov
dec
pop
mov
cmp
jns
and
pop
pop
jnp
lahf
push
inc
int3
mov
movsl
inc
lahf
sub
push
ss
push
inc
cmpsl
push
adc
xchg
gs
xchg
gs
push
jne
decl
and
movl
or
sub
maxps
ljmp
cmp
add
or
dec
xor
fs
xor
out
pop
lock
fcmovnbe
aam
cmp
imul
cli
inc
lods
jecxz
add
clc
adc
xchg
mov
sub
stc
es
cwtl
pop
movsl
push
ret
or
mov
cld
lahf
cs
pop
cs
sbb
jns
sbb
cmc
mov
pushf
loop
pop
call
addr16
outsl
push
sbb
adc
out
or
inc
data16
jmp
movb
mov
loope
into
in
add
push
xor
and
adc
adc
pop
insb
sub
inc
mov
cmp
les
loope
fs
push
mov
cmpsb
loope
push
jbe
mov
add
mov
or
repz
xor
cmp
adc
cmp
sub
sahf
inc
fildl
push
in
je
pop
or
cmp
push
imul
inc
add
iret
push
add
fldl
xchg
iret
cwtl
das
sahf
sbbb
cltd
mov
mov
jle
out
pop
jl
sub
mov
popa
stc
mov
xchg
ljmp
cmp
push
adc
imul
aas
movb
push
add
dec
mov
jb
mov
in
loope
stc
nop
sub
mov
fwait
or
or
ficoml
sahf
inc
push
or
push
fwait
ret
mov
push
inc
mov
or
fsubp
mov
not
loop
aad
pop
jle
or
mov
xor
sbb
mov
or
sbb
das
mov
fstl
and
xchg
adc
sbb
push
dec
push
pop
aas
mov
mov
clc
mov
xchg
test
push
loop
adc
call
xor
dec
lods
jg
shll
pop
push
pop
xchg
add
push
lahf
xor
int
jae
and
mov
or
pushf
push
xor
cmp
mov
pop
push
out
jge
mov
mov
sbb
fiadds
or
flds
test
sbb
outsl
mov
pop
aas
stos
lea
insb
call
pop
xor
ret
or
test
lea
sub
fwait
daa
mov
icebp
fsubs
sbb
xor
inc
popf
inc
ja
push
stos
push
icebp
repnz
ds
push
sub
inc
call
adc
dec
popa
loop
inc
bound
out
mov
pop
je
mov
adc
outsb
enter
sarb
xor
test
leave
cld
add
cmp
pop
arpl
ljmp
pop
xor
jno
fidivrl
imul
fs
outsb
add
adc
ss
or
or
mov
inc
jno
testl
xchg
out
sub
cmpsb
push
shrl
xchg
adc
repnz
shr
std
push
in
push
inc
int3
std
pop
sbb
pop
mov
xchg
xchg
push
aas
inc
adc
cmp
rorl
sub
into
test
jl
push
clc
push
pusha
lods
ss
mov
ret
dec
and
movsb
xchg
push
lret
lds
cmp
icebp
ficoml
pop
aad
cmp
sub
xor
adc
test
or
or
add
xchg
fmul
cs
xchg
call
jge
and
jmp
push
sbb
and
pop
icebp
test
bound
jmp
mov
inc
enter
iret
sbb
je
inc
or
push
jnp
sahf
ljmp
mov
lahf
int3
movsl
cmc
sbb
iret
sti
xor
out
addr16
pop
loop
mov
rcrl
xchg
xchg
sub
and
push
adc
dec
mov
push
cmp
push
xchg
lds
mov
out
les
leave
cmp
mov
fcomps
loopne
push
adc
or
adc
inc
add
inc
mov
aas
out
bound
cli
cmp
negl
movsb
aam
mov
sbb
xchg
clc
add
js
fsubrl
xor
cmpsl
mov
nop
lock
xor
sbb
rcrl
lahf
stos
icebp
inc
fwait
xchg
adc
xor
das
push
adc
int
xchg
xor
outsb
inc
dec
or
movsl
pop
mov
push
mov
in
movsb
lods
fbstp
push
adc
mov
sbb
mov
pop
dec
popa
add
mov
push
mov
fisubrl
popa
jns
push
add
dec
stc
out
xchg
or
fsts
or
inc
inc
dec
data16
loop
or
sti
fbld
sti
in
sbb
inc
mov
sbb
xchg
int3
cmpsb
nop
dec
or
insb
sbb
insl
and
sbb
into
int
cmp
pop
xorl
fldenv
inc
std
popf
xor
jb
sub
sub
sarl
mov
adc
mov
mov
inc
jmp
push
push
jmp
pop
jae
insl
sbb
rcl
xorb
cmp
inc
and
in
fs
outsb
lahf
js
mov
mov
jle
inc
mov
test
adc
ja
mov
sbbb
cmc
inc
out
das
inc
adc
ret
pop
cmp
into
mov
jecxz
mov
dec
sti
xchg
insb
test
enter
stos
xlat
jmp
cwtl
sub
gs
mov
jae
rcl
adcl
shl
pop
adc
jl
insb
mov
xchg
shlb
xchg
loope
pop
imul
cmp
add
cmc
clc
clc
pop
arpl
jmp
sbb
pop
mov
mov
es
jbe
pop
pop
outsb
dec
sub
jae
bound
mov
fs
pop
jecxz
test
dec
inc
sbb
sub
call
arpl
rclb
pop
movsl
ficomps
inc
xchg
pop
ret
les
aas
xchg
pop
jae
mov
movsb
dec
aad
mov
jle
pop
scas
jbe
ror
shlb
xchg
pop
insb
leave
test
test
loop
stos
pop
push
stos
inc
test
xor
sub
adc
jb
call
pop
add
xchg
and
lret
adc
push
jns
mov
dec
jnp
imul
cmpsb
lock
lds
out
jle
nop
mov
mov
lods
inc
push
xor
or
pop
shrb
sbbb
rcrl
stc
mov
and
pop
push
push
lea
loopne
mov
int3
lods
jl
lcall
dec
sbb
jecxz
xchg
ret
push
dec
mov
outsl
aaa
or
out
xchg
repnz
dec
and
dec
jl
lsl
mov
dec
cli
xchg
or
inc
ror
sub
scas
pop
cmp
bound
push
subl
and
arpl
mov
ljmp
jnp
adc
shll
sub
divl
mov
mov
sub
hlt
inc
xor
cwtl
push
jle
jb,pt
outsl
mov
sub
mov
ret
lock
mov
cli
je
adc
dec
in
loope
xchg
push
test
mov
and
dec
mov
mov
shlb
sub
mov
lret
call
rcrl
fsubl
xor
orl
xchg
xor
or
sub
mov
and
or
xchg
sub
mov
dec
repz
fildl
pushf
stc
popf
testb
loope
sbb
rcr
xor
ljmp
mov
sbb
outsb
mov
mov
dec
xchg
sub
inc
xchg
inc
mov
push
in
or
ret
enter
insl
rcr
jo
call
cs
addr16
cld
cmpl
sub
pop
or
mov
xchg
cmc
sarl
andl
jl
cmpsl
push
in
jg
and
das
repnz
stos
cmp
or
shrl
inc
in
lds
out
push
pop
push
mov
jp
or
iret
loope
inc
dec
mov
mov
jmp
lock
mov
mov
pop
sbb
inc
cmp
push
ret
sub
mov
xchg
xor
pop
stc
je
popf
inc
xchg
mov
cmp
adc
mov
fistpll
shll
out
dec
mov
rcrl
aas
iret
icebp
mov
es
inc
inc
and
leave
nop
dec
adc
xchg
xchg
add
in
loop
lock
fildl
enter
mov
xchg
jp
xchg
xor
cmpsb
push
aad
fs
xchg
out
test
in
inc
xchg
in
mov
out
stos
sub
mov
mov
jnp
fisttpl
loope
shrb
mov
in
push
popa
mov
stos
cmp
frstor
pop
insl
paddw
cltd
sahf
sub
jns
xchg
ljmp
sahf
cs
xor
gs
aam
lods
mov
in
adc
sub
sbb
lret
hlt
cmp
adc
dec
sub
pusha
loop
movsl
push
pop
inc
push
or
sub
fucomip
cmp
cmpsb
cmc
scas
repz
sbb
xor
ja
add
mov
jae
shlb
dec
add
mov
loopne
xor
negl
pop
cmp
subb
dec
cs
xchg
adc
sbbl
pause
or
lret
dec
dec
cwtl
dec
inc
popf
nop
xchg
in
xchg
cmp
cmp
or
push
das
or
lods
mov
imulb
add
pop
adc
in
xor
addl
icebp
in
shl
lret
jo
std
rol
scas
shll
lret
or
sarb
adc
mov
in
push
stos
mov
push
push
inc
ret
cmpsl
dec
xchg
test
scas
cmc
movsb
hlt
fcmovnu
push
mov
adcb
ds
pop
imulb
push
adc
jns
cs
in
add
jmp
pop
jbe
cmp
movsl
movsb
jae
adc
sbb
jecxz
mov
dec
inc
xor
out
popa
fs
push
js
mov
or
movsb
in
ss
inc
hlt
inc
lods
push
mov
gs
lret
sbb
push
outsl
inc
mov
xor
sub
rcl
push
ss
xchg
cmpsb
inc
and
bound
pop
push
test
xor
lret
mov
cmp
sbb
add
adc
aad
pop
add
xchg
data16
mov
adc
out
test
jb
fidivs
adc
mov
je
push
inc
repz
push
rcll
shll
inc
push
add
inc
mov
cli
gs
dec
push
sub
pop
out
mov
scas
pusha
inc
loop
shll
stos
and
or
js
xchg
fstpl
add
and
data16
cmp
inc
addr16
mov
xchg
rorl
mov
cmp
aam
push
mov
aam
push
mov
and
sbb
bound
mov
aas
adc
sub
mov
sub
or
sti
mov
faddp
les
and
repz
dec
loope
sbb
sahf
dec
xor
mov
push
stos
pop
push
or
loop
and
rolb
xchg
jmp
popf
dec
inc
lods
mov
mov
mov
or
push
xorb
jle
cmc
test
jmp
int3
inc
loopne
push
jae
inc
leave
mov
jmp
jle
add
pop
adc
inc
mov
jecxz
inc
pop
sub
pop
sub
or
ljmp
mov
movsl
lods
lea
add
loope
push
and
lret
mov
test
bound
aas
xor
jl
enter
btc
sub
mov
sahf
cmp
insb
mov
jecxz
lahf
lods
sub
jo
test
xor
iret
jle
push
xchg
mov
inc
or
repz
fwait
xor
lcall
pop
dec
jl
call
hlt
jecxz
fs
push
fimuls
mov
out
push
mov
test
dec
mov
sbb
xor
sub
push
push
dec
xchg
jge,pn
jnp
loop
lret
int
jp
jl
jmp
lea
aad
popf
mov
xchg
mov
out
stos
les
aaa
mov
add
out
push
dec
rorl
mov
xlat
insb
imul
adc
mov
push
cmpsb
pop
mov
push
scas
stos
ds
sub
mov
pop
call
test
or
fldt
fwait
add
icebp
xchg
mov
enter
cmp
stos
pop
add
add
in
xor
push
int3
xchg
jbe
sarl
push
mov
push
shll
popl
mov
push
jg
aas
cmp
insb
pop
insb
das
mov
or
rol
adc
adc
scas
xor
mov
and
fisubs
lret
and
cld
xchg
xor
ficoml
xchg
cmp
clc
xor
movsb
aam
pop
cmc
mov
sub
cmp
lcall
add
ss
test
lds
mov
popf
leave
pop
out
mov
and
mov
movsb
insl
in
mov
push
xor
jns
aam
or
into
idivl
fcoml
fbstp
dec
loopne
cmp
mov
outsl
push
fcomps
lods
fsubr
fnsave
sbbb
jp
lahf
or
sbb
test
lret
call
pushf
xor
pop
cmpsb
push
jo
call
adc
sub
jae
pop
imul
pcmpeqb
xchg
and
in
dec
aas
sbb
push
pop
loop
dec
and
shl
jle
xchg
adc
test
dec
jle
add
pop
mov
in
je
pop
pop
sub
aas
sub
pusha
je
int
xor
jb
daa
es
popa
jle
inc
out
int
xchg
rorl
cmp
cmp
sub
cs
stos
call
jne
loop
inc
fdivrp
push
xchg
ja
loope
nop
or
jmp
cvtps2pi
push
stos
test
shrb
stos
add
jle
xchg
faddp
dec
adc
fwait
inc
imul
ret
cmp
out
fwait
mov
mov
push
lds
push
mul
jne
bound
xor
sbb
cli
es
dec
ret
mov
sbb
ja
hlt
dec
fidivs
inc
pop
ja
mov
xor
push
inc
call
sub
andb
js
stos
mov
push
push
adc
sub
sbb
shrl
cmp
call
or
or
adc
xor
mov
fidivl
icebp
inc
mov
pmulhw
mov
dec
or
jae
pop
jno
mov
ja
xor
out
cmp
fldcw
call
lods
in
add
adcb
or
adc
add
vmread
pop
adc
adc
adc
outsb
std
xchg
sub
mov
jns
lods
andl
and
push
xchg
dec
and
out
rolb
orb
dec
sub
dec
and
call
js
add
cmc
push
push
call
cld
jg
pushf
popf
stc
sbb
mov
bound
bound
mov
testb
movsb
jb
xchg
or
dec
cmp
push
push
lods
or
cmpxchg
push
ret
pop
inc
or
push
mov
pop
repz
testl
and
pop
fisttpll
pushf
jg
jp
pop
cmp
aam
xor
sbb
int3
jg
sbb
test
fnsave
sub
or
cmpsl
and
mov
int3
loop
repz
adc
push
lcall
outsl
add
jbe
mov
push
mov
pop
inc
ss
lcall
in
push
cli
adc
dec
cmp
jmp
push
cli
inc
aas
inc
mov
pop
insb
xor
pop
inc
insb
or
mov
jo
cmp
insl
imul
aaa
lahf
out
sahf
sbb
mov
aas
lret
and
mov
int
cmpsl
mov
int
add
jnp
add
xorb
mov
es
jbe
pop
push
xchg
data16
cmp
xor
adc
adc
pop
cmp
and
push
cmpsl
add
loop
cld
and
sbb
ljmp
add
adcb
sbb
sbbb
mov
dec
fdivrs
les
push
stos
dec
cmp
xor
jg
push
mov
inc
addl
add
dec
mov
out
or
jecxz
dec
mov
sbb
sub
or
fcomp
and
xchg
iret
repz
add
lds
add
imul
inc
mov
mov
pop
mov
mov
push
push
je
movsl
lret
jns
ret
int3
gs
push
imul
push
je
push
ljmp
mov
xchg
jl
mov
mov
icebp
test
jae
mov
lret
inc
popa
add
test
sub
push
rcrl
jnp
std
cli
pushf
test
lds
andb
adc
pop
mov
in
cmp
push
jmp
cmp
pop
dec
mov
xchg
push
mov
test
call
xor
nop
jnp
mov
xlat
push
daa
mov
jge
adc
shrb
aad
inc
xor
adc
jno
lcall
adc
daa
xor
jns
cmp
scas
mov
mov
sbbb
jo
cld
int3
push
mov
and
ret
mov
push
gs
pop
loope
inc
or
sti
test
dec
or
les
jae
ljmp
sbb
popf
dec
sti
sub
and
lock
push
mov
pushf
popa
leave
or
add
aam
adcl
xlat
cs
xchg
lea
into
or
mov
jbe
mov
sarb
lods
inc
stos
mov
xor
imul
fidivrs
stos
arpl
fildll
add
mov
movsb
popf
push
les
xor
mov
fldenv
sub
pop
imul
je
jns
adc
mov
lahf
stos
popf
xlat
pop
xor
scas
je
mov
sbb
test
nop
jb
xorl
stos
mov
cmp
or
loope
sub
leave
jbe
mov
push
out
or
and
dec
jecxz
xchg
xchg
cmovp
imul
std
and
mov
std
dec
loopne
xchg
adc
sbb
add
rcrb
lret
lods
mov
xchg
test
cmpsb
and
xlat
lods
inc
adc
push
pop
and
pusha
aam
clc
imul
movl
cmp
out
addr16
mov
dec
std
jge
loop
lret
aam
adc
mov
jmp
lcall
jb
push
mov
mov
std
pop
pop
js
test
add
push
push
icebp
fists
pop
push
mov
jg
arpl
xchg
lods
xchg
cltd
loop
xchg
lea
rcll
fidivrl
inc
lret
js
ret
je
mov
jo
shlb
std
sbb
insb
sub
xor
jg
fdivp
dec
lret
push
jecxz
shrl
andl
daa
sbb
fnstsw
dec
adc
in
arpl
decb
leave
jl
lahf
push
ljmp
call
into
ror
shll
dec
inc
popa
jae
lds
lret
pop
lods
push
outsl
loop
inc
add
mov
ret
add
cmpsl
jb
mov
ss
jmp
sbb
loopne
inc
cmp
in
xchg
mov
ja
xchg
xchg
sub
or
push
mov
dec
inc
out
lds
arpl
ljmp
mov
aam
push
fsts
stc
or
mov
andb
pushf
xor
mov
add
pop
xor
cmp
inc
push
movsl
mov
stos
jge
das
js
enter
push
and
pusha
lods
daa
enter
lds
ret
or
ror
mov
int3
test
adc
xor
xchg
in
lods
cltd
gs
add
nop
pop
testb
pop
or
hlt
je
pop
dec
xlat
addr16
lret
in
sub
xchg
mov
dec
push
leave
ds
push
jmp
adc
push
es
aam
and
scas
cmpsb
push
xor
and
push
int
jb
ja
pop
jne
jne
into
jle
cmp
scas
xor
xchg
dec
mov
push
mov
mov
popa
inc
divb
les
sbb
pop
add
decl
test
or
das
cmc
pop
pop
lock
sub
jo
sub
out
inc
iret
xorl
sub
dec
add
je
iret
cltd
sub
add
and
xchg
xor
popa
aas
mov
jmp
cmp
xor
and
and
push
xchg
mov
stc
jb
mov
or
popf
cmp
and
lods
jo
sbb
inc
fbstp
inc
and
mov
fndisi(8087
gs
sbb
push
jb
mov
and
adc
imull
jge
inc
mov
aad
std
shrl
adc
push
int
add
enter
add
pop
adc
fmuls
inc
clts
cmpsl
roll
or
adc
inc
mov
bound
outsb
or
shrl
outsb
mov
cmp
mov
mov
pop
inc
scas
add
adc
or
jp
mov
or
jae
cmpsl
das
cld
and
cmp
mov
aaa
jmp
inc
fimuls
inc
movsl
popa
cmp
inc
mov
jle
jge
loope
mov
popa
fcomp
inc
sbb
adcl
xchg
fistl
fsubl
mov
in
lret
cld
stos
ret
stc
pop
cmc
sub
push
and
aaa
out
shl
dec
mov
test
fadd
jp
xchg
mov
pop
mov
pop
add
ljmp
sbb
adc
cmp
lds
mov
add
push
add
fnstsw
xlat
fwait
pop
add
lock
sub
jecxz
sub
mov
or
enter
xor
bound
jl
adcb
push
pop
add
mov
adcl
sub
sahf
rorb
lcall
cwtl
sub
cmpsb
or
call
xchg
jne
sub
stc
pop
cld
mov
shll
popa
adc
rclb
jle
xchg
add
jp
mov
clc
jnp
sbb
inc
mov
sbb
pusha
mov
ret
jnp
mov
ljmp
movsb
sbb
xchg
gs
sub
xchg
es
fcomip
pusha
add
pop
mov
mov
inc
mov
adc
dec
clc
imul
cld
and
xchg
add
lahf
push
push
mov
or
push
icebp
test
lcall
dec
xchg
test
pop
cmp
xchg
and
inc
out
mov
sbb
fmulp
xchg
mov
lret
xor
test
pushf
jp
nop
fidivrs
jnp
imul
push
jo
jo
mov
imull
push
mov
out
sub
movsl
push
sub
add
push
outsb
shlb
ljmp
xor
push
popf
jnp
xor
sbb
outsb
insb
adc
lea
xlat
xchg
lods
mov
lret
outsb
scas
fbstp
lock
fs
mov
sub
fistpl
xchg
cmp
push
loope
fs
xchg
in
push
mov
rorl
fwait
lcall
add
mov
adc
sbb
pop
xor
and
scas
jno
mov
add
jnp
push
mov
pusha
add
inc
push
mov
out
into
cmp
xor
pop
add
ja
bound
mov
pop
mov
and
pop
mov
movsb
mov
test
mov
cmc
mov
les
jae
xor
pop
mov
mov
cmp
mov
inc
ret
cmp
mov
and
inc
repz
aaa
loopne
out
out
pop
aam
sub
sahf
sbb
jmp
pop
repnz
mov
movb
pop
jmp
pushf
sti
out
ret
mov
addr16
in
xchg
mov
mov
stc
popa
push
es
jns
fldt
enter
lea
adc
ficompl
fmull
xor
lock
xchg
addr16
ret
movsb
out
addb
int
jl
nop
pop
sub
lock
adc
ja
mov
sbb
or
cltd
aas
leave
aaa
mov
xchg
stc
sub
sub
xor
mov
subl
fdiv
inc
mov
roll
push
lods
leave
xchg
mov
cmc
ja
shl
je
mov
ljmp
call
mov
adc
jle
mov
pop
xchg
mov
or
in
out
loop
fucomi
jno
xor
push
push
and
das
sub
movsl
ffree
out
inc
jp
sub
sub
icebp
jle
fwait
lods
adc
sub
push
mov
xchg
sub
push
or
popf
test
cmp
adc
pop
cmpsl
mov
mov
bound
pop
sub
dec
sahf
je
or
ja
adc
or
pusha
out
push
ja
mov
jp
jge
rorl
fwait
inc
and
or
icebp
in
cmpsl
rorb
add
pop
ja
out
and
push
add
pop
std
cld
sbb
inc
push
inc
loopne
add
jne
cmpsl
dec
and
cld
ds
and
lcall
negl
cmp
imul
stos
lcall
pushf
clc
cmp
je
inc
gs
std
or
xchg
and
cwtl
push
gs
int
pop
arpl
mov
cli
andb
scas
lfs
out
int
arpl
xchg
mov
rol
cltd
test
jb
pushf
ss
test
pop
mov
mov
xchg
cmc
xor
inc
int
push
std
imul
sbb
ds
in
fs
push
aam
and
and
je
repz
xchg
call
add
arpl
push
xor
mov
fidivrs
insl
add
sub
dec
out
pop
jmp
sbb
mov
cmp
sub
sub
icebp
icebp
xchg
dec
adc
repnz
and
mulb
movsl
adc
dec
das
adc
jge
mov
add
aad
int
xor
dec
mov
loopne
jmp
pusha
mov
jmp
mov
mov
repz
sbb
inc
loop
arpl
mov
and
pop
gs
mov
addr16
push
pop
fdiv
arpl
out
imul
lods
mov
jp
jne
mov
fistps
js
cwtl
inc
jb
push
jb
pop
mov
movsb
fdivs
test
mov
pusha
stos
les
popa
mov
shr
mov
mov
mov
sub
sub
adc
dec
sbb
cmc
push
jmp
pop
inc
loopne
pop
or
in
test
in
jae
dec
mov
xchg
std
out
xchg
addr16
enter
sub
adc
sub
fs
jg
add
repnz
xchg
nop
daa
decl
arpl
add
fucom
add
loop
push
push
loope
mov
movsl
cmp
jnp
sub
pushf
sub
xor
fs
push
push
out
sbb
jmp
pop
adc
jmp
and
imul
push
xchg
sub
mov
fistl
scas
inc
sub
mov
adcb
ds
xor
push
ljmp
xor
inc
push
sti
mov
loope
and
out
inc
daa
dec
dec
or
adcb
lds
jmp
roll
insl
sub
dec
mov
push
dec
icebp
nop
mov
or
jno
dec
inc
arpl
add
ss
scas
sub
jno
push
mov
call
and
fnstsw
sbb
mov
cmp
out
lock
dec
jecxz
and
scas
fstpt
push
fwait
cmp
repnz
sbb
daa
jecxz
mov
lock
push
shrb
mov
out
out
cs
push
scas
mov
xor
stos
jne
ret
adc
jne
pop
dec
jp
jge
iret
adc
sbb
es
mov
mov
insb
jle
mov
ret
test
jno
loopne
insb
xchg
aad
add
shrb
jecxz
and
ret
sarl
imul
sahf
mov
test
lahf
mov
and
mov
cmp
iret
inc
jb
mov
rolb
fucomip
or
sub
clc
cmp
push
fcomp
cld
lcall
pop
lret
mov
mov
and
addl
test
mov
adc
and
dec
addl
cmp
fisttps
ss
aad
sub
out
je
xchg
add
shl
dec
jle
pop
xchg
shrb
out
xor
jne
jmp
repnz
mov
or
clc
leave
xchg
scas
bound
leave
lods
daa
or
lahf
jb
fs
adc
ret
negl
shlb
fs
push
test
orb
add
aam
sti
nop
rcr
hlt
add
les
push
aaa
je
push
stos
add
xor
adc
testb
adc
test
out
popf
mov
daa
dec
popf
or
inc
pop
std
mov
jmp
mov
cmp
pop
leave
ret
outsl
jmp
decl
cmp
ret
jmp
xor
fisubrl
nop
outsl
inc
and
sub
cmp
push
mov
sbb
loopne
cmc
inc
outsl
inc
add
gs
inc
scas
push
add
xor
mov
lds
adc
je
mov
lahf
push
push
jecxz
adc
adc
outsb
hlt
iret
ss
sub
sbb
or
inc
icebp
push
sbb
scas
push
lods
add
call
in
mov
inc
movl
stos
sbb
out
push
add
cltd
scas
and
fbld
iret
cmpsb
cld
popa
pop
out
add
xor
std
sub
xor
je
cmpsb
ret
sahf
cld
mov
mull
ss
lret
jno
clc
jae
gs
push
push
testl
in
ja
cwtl
mov
fnstenv
in
xor
sarl
adc
out
or
sub
sbb
xchg
dec
iret
sub
in
loop
sub
jle
jbe
jmp
push
mov
jle
arpl
pop
les
mov
leave
orb
daa
sahf
or
cmp
mov
pop
push
inc
xlat
lea
fnsave
cltd
test
icebp
pushf
testl
mov
int3
arpl
pop
sbb
in
sahf
lods
pop
pop
inc
fdiv
pop
push
dec
cmpsb
outsb
test
pop
mov
pop
ljmp
pushl
loope
inc
outsl
and
xor
dec
add
or
mov
push
es
lods
cmp
lods
xor
test
push
jns
add
fstps
incl
mov
mov
sbb
cmp
call
sahf
xchg
stc
xchg
dec
pop
aam
mov
xor
pop
scas
testb
iret
push
and
mov
dec
ss
clc
std
cs
outsl
dec
sub
shll
sarb
into
xor
cmpsb
jo
ss
cmp
mov
cmp
and
xor
push
popf
push
dec
xor
iret
lock
cmpsl
shll
out
mov
xlat
xchg
cmp
xor
push
mov
aad
add
jne
mov
xor
mov
pop
mov
mov
bound
push
outsb
lds
insl
in
bound
sarb
jmp
mov
jo
push
cwtl
cmp
mov
push
push
leave
mov
stc
iret
je
arpl
ljmp
inc
jmp
sbb
or
sbb
add
jnp
xchg
pop
dec
mov
push
shlb
insb
pop
add
mov
fmull
adc
adc
les
test
fcoms
leave
mov
xrelease
mov
and
sub
cmp
pop
insb
jno
mov
inc
sbb
pop
pop
outsl
adc
scas
rcrl
mov
or
mov
mov
or
stc
pop
sarb
rclb
test
mov
jbe
mov
sbb
rcll
xor
decl
adcl
cmpsl
xchg
push
jae
jp
mov
lds
jmp
dec
inc
push
jp
cmp
ds
cmpsb
inc
push
icebp
out
dec
repnz
xor
cmp
cmp
dec
inc
stos
icebp
sbb
push
ss
addb
adc
les
lds
adc
lcall
psubusw
fsubrl
jge
inc
scas
mov
or
aad
inc
outsl
aam
add
mov
rcl
scas
mov
cmp
imul
or
loopne
lods
nop
nop
mov
jbe
sub
sbb
sub
jge
lgs
or
mov
pop
mov
xchg
popf
ja
mov
insb
or
xchg
lret
sti
mov
pop
jmp
cmpsb
cmp
xor
push
sub
pand
ljmp
fwait
xor
pop
adcl
mov
fldcw
lods
int3
int
mov
or
loopne,pt
out
loop
dec
push
adcl
repnz
fwait
push
add
stc
or
int3
int3
out
lcall
imul
jge
je
imul
cmp
push
mov
mov
xchg
pop
ret
aaa
lret
push
cltd
cmp
popf
jb
fwait
xchg
lcall
pop
xchg
repnz
gs
mov
cli
xor
rorb
jl
clc
add
and
adc
es
sub
dec
movsb
mov
gs
out
aas
ss
cmp
in
mov
fisubrl
sub
adc
push
push
outsl
add
sub
data16
test
cmpsb
ja
inc
subl
xchg
push
int
pop
mov
adc
dec
xchg
push
in
mov
add
icebp
cld
adc
pop
outsb
imul
push
fcom
add
cmovbe
out
xchg
shl
add
push
repz
sahf
mov
push
shlb
out
addr16
jb
std
jno
mov
lcall
fisttpl
rcrb
shll
jnp
scas
ficomps
mov
cmp
dec
jmp
adc
xor
mov
out
push
arpl
jne
cltd
pop
cmp
mov
sbb
es
jne
data16
xor
ds
inc
sbb
mov
shrl
movsb
fbld
add
push
pop
mov
fcompl
int
xchg
repz
andl
daa
orb
adc
iret
inc
data16
movd
adc
jbe
pop
fldcw
test
les
shl
xor
sub
pop
add
shlb
test
and
mov
addr16
outsb
jp
cmc
adc
jge
and
repnz
loop
in
jmp
arpl
les
push
stos
cmc
pop
xchg
cmpsb
addr16
clc
cwtl
ret
cmp
out
xor
and
idivb
imul
pop
add
es
sub
popa
xor
mov
push
imul
mov
stos
lods
inc
and
sbb
ficomps
pop
int3
jno
gs
test
arpl
test
sub
cmp
aad
dec
inc
aas
xor
jbe
xor
inc
pop
push
xor
jle
daa
inc
xor
pop
xor
repz
or
clc
add
xchg
sub
inc
dec
cmp
leave
fbstp
sbb
rcl
xor
lea
push
mov
nop
xor
sub
jno
daa
sub
shll
jp
int
cmc
push
test
int
pop
test
inc
jecxz
inc
cmc
das
adc
mov
sbbl
adc
mov
fdivrl
jb
lods
arpl
push
ret
jns
clc
xchg
in
fisubs
lds
sbb
cmpsb
mov
xlat
adc
cmpsb
push
lcall
mov
shrb
lds
cld
xchg
jae
leave
sbb
push
rcrl
cmpb
xor
outsl
pop
pop
lock
mov
mov
ja
sbb
dec
mov
imul
push
mov
push
xlat
push
call
jne
hlt
jge
push
sbb
pop
jns
xchg
fstpl
sti
fistl
cmc
ret
repnz
fisubl
ret
xchg
cs
push
adc
xchg
xor
xor
and
mov
add
push
pop
sbb
js
imul
pop
pop
rclb
hlt
popf
pop
cmp
push
subb
inc
rcr
hlt
lret
sti
adc
sbb
aaa
outsb
fsubs
je
bound
jmp
rcll
push
xor
xor
aas
adc
fisttpl
lcall
sub
stos
xlat
bound
xchg
xor
mov
aaa
stos
adc
or
mov
fsubr
cs
add
dec
ds
cld
or
jmp
fisubrl
fistpl
bound
or
gs
push
addr16
mov
incl
jbe
inc
insl
filds
rclb
cmp
repz
jae
adc
loope
inc
lods
jl
push
push
mov
add
insb
fildll
ds
scas
push
cmp
ret
cmp
cmp
out
jp
stos
pop
xorps
rclb
in
pop
push
xchg
daa
add
add
das
jno
and
mov
adc
out
and
xor
out
push
andl
jg
mov
inc
push
push
jae
pop
ja
stos
out
shlb
ss
pop
mov
cmpsl
mov
mov
sub
inc
pop
lcall
loopne
sub
stos
loopne
fnstsw
gs
pop
push
mov
out
cmp
or
inc
jo
pop
xchg
add
sbb
aas
out
lahf
adc
or
icebp
sbb
test
mov
call
mov
dec
vpaddsb
addr16
sbb
add
mov
jae
out
push
out
cmp
sbb
or
lods
movsb
and
sbb
mov
inc
rol
out
into
push
pop
sbb
iret
mov
outsl
mov
scas
aas
jnp
add
jbe
outsl
mov
rorl
xchg
test
inc
movsb
cmp
xlat
roll
cltd
icebp
es
sub
lock
clc
sbb
in
inc
mov
mov
mov
mov
mov
sbbl
fbld
sub
jno
clc
and
sarl
or
aaa
dec
mov
cmc
push
xchg
mov
lret
cmpsl
fs
inc
adc
mov
cltd
dec
sub
pop
cltd
pop
xor
popa
clc
pop
sbb
push
fcmove
and
xor
jne
scas
xor
dec
sub
dec
out
ficoms
inc
popa
cmp
int3
adc
gs
mov
mov
call
loopne
push
push
xor
test
pop
jge
jg
shl
xchg
pusha
fidivs
lods
xor
dec
mov
cmp
pop
add
nop
incl
lahf
mov
fs
test
shrb
popa
pop
insl
push
loop
dec
pop
cmp
stc
cmpsb
and
lock
and
inc
pop
cmpb
stos
mov
sbb
and
adc
ss
push
mov
stos
mov
aas
xchg
stos
jg
sub
negb
push
rorb
sbb
xchg
jbe
popa
mov
jb
and
and
shlb
movl
or
stc
mov
mov
insl
js
jg
sbb
popa
mov
scas
sub
jns
or
loope
inc
sbb
xchg
shrl
jl
cmc
scas
jp
mov
and
inc
std
push
popl
lds
out
pop
test
fnstsw
enter
push
nop
cmp
fs
xlat
int
or
pop
repz
ret
fs
jp
aas
and
pop
pop
ds
jl
adc
cld
pop
repz
std
mov
adc
into
jb
jne
cwtl
das
fcmovnbe
xor
lods
mov
fld
testb
or
test
jns
adc
or
inc
aaa
popf
rcll
gs
int3
psubb
pop
cmp
pop
mov
pop
push
cmc
mov
inc
fisubl
mov
scas
sti
sbb
xorb
mov
dec
or
movsl
sbb
dec
dec
sbb
ret
cmp
mov
lds
mov
dec
xchg
test
push
aam
xchg
repnz
mov
out
and
mov
push
rorl
push
cmp
push
pop
movlps
fsubrl
sub
mov
jl
push
xchg
dec
insl
mov
dec
cmpsl
ret
dec
iret
xor
pop
scas
ja
repz
icebp
aas
lcall
and
popa
pushf
xor
popa
sub
rcrl
xchg
and
xor
dec
in
fwait
inc
push
mov
mov
out
jo
sti
test
inc
fwait
aas
fildll
jge
push
and
sub
fdivr
jae
outsb
sub
lahf
ss
std
xchg
inc
jo
scas
add
xchg
fildll
and
fstps
inc
cld
dec
jp
inc
mov
decb
fstpl
xchg
ret
lret
push
loope
xchg
add
mov
movsb
lret
dec
pop
sarb
leave
je
push
stos
mov
aas
push
fsubl
push
xor
push
dec
out
nop
cs
lods
das
push
ja
mov
inc
lret
xlat
aas
push
fnstcw
sub
or
pushf
nop
stos
xchg
dec
push
nop
cmp
pop
idivl
sbb
dec
jg
or
out
pop
inc
fs
or
pop
pop
xchg
add
bound
addr16
idivl
andl
lock
leave
rclb
dec
arpl
xchg
inc
xchg
test
jmp
and
xlat
or
test
daa
push
mov
mov
movsb
imul
mov
loopne
lods
cmp
pop
ss
add
sbb
je
push
movsl
mov
jmp
push
xchg
add
scas
fisttpll
adc
mov
addr16
pop
jb
repz
aam
testl
fwait
sub
pop
mov
xchg
push
jne
mov
out
xchg
push
stos
mov
push
out
pop
cmp
push
cmp
and
push
fwait
mov
add
lret
add
daa
scas
inc
xchg
jno
shrb
mov
xorb
subb
xchg
jge
adc
adc
cmp
jb
lods
add
pop
xchg
mov
test
add
lods
popf
sub
insb
repz
pop
outsl
jecxz
pop
clc
lods
fcmovnu
jl
fisubrs
mov
mov
clc
out
lret
fs
test
mov
add
leave
sbb
add
mov
inc
and
and
mov
in
rcll
and
xor
fs
outsb
clc
or
cmp
fcompl
lret
loopne
imul
ljmp
lods
ljmp
popf
subps
mov
mov
loopne
inc
out
mov
dec
fnstsw
and
out
aas
push
ror
loopne
mov
mov
cwtl
mov
jae
fistps
pusha
push
lds
daa
dec
shrl
sub
fidivs
stc
cmp
mov
fimull
mov
test
cmp
xor
mov
dec
pop
sbb
lea
sub
out
lock
cwtl
fsubl
xchg
cmc
les
pop
xchg
sbb
adc
outsl
adc
push
push
jne
jle
cli
outsb
mov
mov
das
mov
bound
mov
lock
mov
mov
jl
adcb
rclb
cmp
push
jg
icebp
test
xor
pusha
lods
inc
jbe
icebp
fcmovne
sub
je
xchg
outsl
add
out
xor
into
inc
xchg
lods
loop
enter
sub
idiv
adc
in
fsubs
movsb
mov
mov
sbb
insl
sub
add
inc
lret
fs
or
test
out
ret
jecxz
insl
cmp
or
lods
or
aaa
jbe
xor
sahf
gs
inc
mov
adc
dec
add
add
jno
add
out
out
in
les
push
outsb
std
inc
scas
push
out
movsl
add
xchg
xchg
jge
xor
mov
sub
in
lods
ss
mov
and
pop
stos
ficompl
dec
xor
mov
push
mov
add
std
xchg
add
xchg
sbb
mov
jl
add
sbb
add
cmc
test
mov
int
aam
pop
addr16
sbb
mov
les
dec
aas
loope
pop
push
movsl
imul
or
ds
loopne
leave
xchg
adc
xor
inc
lretw
ret
mov
cmp
xor
dec
dec
push
repnz
aaa
xchg
iret
ret
iret
outsl
jnp
mov
push
dec
scas
push
mov
adc
std
repz
je
adc
pop
jne
push
imul
or
out
mov
adc
pop
ja
in
push
pop
lcall
dec
loop
test
cmp
ret
sub
outsb
sbb
jp
insb
mov
xchg
out
in
push
pop
dec
lods
outsl
out
mov
in
adc
pop
bound
hlt
push
jl
jp
xchg
sbb
ret
in
push
dec
add
jmp
xor
lcall
pop
cltd
fwait
push
js
mov
fistps
mov
or
clc
xchg
daa
repz
inc
es
sbb
pop
outsl
in
ror
pusha
push
maskmovq
mull
mov
call
cltd
push
test
std
xchg
loop
js
xorl
cmp
xchg
mov
jne
inc
push
sub
xor
push
lea
mov
push
xchg
add
lock
iret
fwait
sbb
push
sub
cmp
cmp
pop
xchg
ljmp
pusha
mov
shll
sbb
mov
mov
iret
in
rorl
mov
push
mov
xor
sahf
and
es
fidivl
or
and
adc
cmp
lock
mov
lds
sbb
shl
jge
dec
ficoml
push
mov
mov
sub
jno
pop
clc
scas
ret
sub
test
mov
bound
fdivrs
lods
jo
popf
fbld
imul
or
ret
in
loopne
lea
and
das
adc
pop
leave
scas
data16
leave
push
push
gs
jno
and
jno
in
mov
dec
jae
dec
enter
loop
out
xchg
iret
data16
hlt
dec
inc
or
lock
leave
pusha
pop
jmp
push
fyl2x
out
iret
jno
or
dec
int
dec
sub
cmpsb
sbb
in
clc
dec
cmp
arpl
inc
mov
pop
outsb
sub
jno
or
ljmp
mov
jmp
outsb
push
ss
outsl
add
or
cmp
fmuls
pop
mov
mov
fidivrl
xor
pop
mov
mov
gs
lods
xor
inc
mov
js
mov
or
and
or
sbb
sbb
hlt
daa
push
les
jbe
xchg
out
repz
sub
aaa
pop
insb
xor
sub
add
popa
jp,pn
pusha
andb
rcll
add
clc
mov
jp
adcb
or
push
inc
fidivl
movsl
faddl
sub
add
xchg
arpl
call
add
inc
dec
ds
loop
js
aaa
xchg
push
inc
xchg
sbb
inc
lods
adc
adcl
and
add
mov
add
arpl
push
ret
push
sahf
and
sti
inc
lods
push
pop
ljmp
ficompl
and
push
roll
mov
or
int3
xor
jne
inc
fiaddl
stos
outsb
xchg
fidivl
mov
jno
xchg
mov
stos
lret
and
jnp
inc
jmp
xchg
fwait
ja
mov
icebp
mov
adc
cmpsb
test
jnp
imul
sti
sbb
repnz
jbe
jo
sub
shrl
jl
add
fstpl
mov
add
xchg
dec
andl
and
inc
xor
cmp
test
pop
mull
cmpsb
lret
test
outsl
loop
push
test
mov
das
add
adc
loopne
scas
icebp
cs
jg
lods
jns
cmc
or
push
or
cmpsb
insb
mov
ret
mov
test
xor
rclb
and
pop
and
iret
test
pop
and
add
jbe
lea
push
adcb
mov
jmp
sbb
dec
out
bound
jns
addr16
fwait
sub
cwtl
insb
loopne
mov
jnp
test
mov
or
rcll
pop
adc
push
push
lcall
in
add
xor
inc
leave
mov
xor
sub
dec
pop
ds
xor
xor
aad
jl
dec
xor
imul
mov
data16
lahf
pop
jbe
mov
hlt
stos
scas
pop
stc
xchg
mov
cmpb
jmp
mov
mov
adc
mov
orl
mov
ds
push
ljmp
jno
and
and
pop
inc
imul
fnstenv
mov
pop
cmpsl
sbb
cwtl
aaa
cli
lock
inc
mov
ret
lret
shl
jle
scas
inc
dec
loop
stc
aaa
jge
cli
sbb
pushf
ret
mov
fwait
xchg
xchg
cmp
jmp
frstors
xchg
sti
push
test
mov
xchg
aas
mov
sti
jns
rcl
add
jo
sbb
mov
test
adc
gs
mov
call
add
dec
out
ljmp
mov
nop
sub
insl
shrb
pop
stos
fs
pop
rcrl
gs
clc
aaa
pushf
cmp
stc
in
arpl
adc
sbb
mov
jb
stos
mov
bound
xor
int
push
pop
in
cmp
js
out
pop
cld
xchg
rolb
jno
test
sbb
sbb
sub
mov
mov
cmp
mov
pop
out
mov
pop
dec
lds
lret
push
cmpl
stc
hlt
xchg
leave
jo
push
pop
sub
lahf
scas
inc
roll
mov
mov
and
sub
cmp
loopne
inc
fisubl
xchg
fidivrs
mov
rcr
mov
in
jp
push
or
xchg
and
sub
mov
mov
out
sahf
outsb
in
adc
dec
sub
inc
stc
ds
mov
ja
jno
pusha
xchg
in
dec
adcl
es
cltd
push
out
std
or
cmp
ret
flds
mov
push
dec
push
xchg
sbb
sbb
mov
xchg
daa
movsb
mov
pushf
lret
bswap
push
jne
cltd
or
cs
add
sub
shll
xchg
mov
pop
cmp
mov
and
jae
mov
inc
jb
xchg
lahf
movsb
adc
test
jo
mov
cld
inc
pushf
cmpsb
sbb
push
or
xor
scas
cmp
pop
sahf
inc
neg
repz
mov
push
jns
out
popf
cs
sub
lock
sub
lahf
pop
pop
lods
xchg
mov
into
pusha
std
js
xor
adc
outsl
or
imul
cmpsl
imul
sti
or
les
pop
fistl
xlat
jl
inc
xchg
dec
xor
dec
and
les
icebp
inc
mov
ficoml
aam
fisubs
cwtl
cs
mov
pop
clc
in
jo
adc
xchg
call
or
loopne
test
repz
outsb
addr16
and
clc
sbb
js
imul
jo,pt
ljmp
pushf
repz
cltd
mov
test
shll
inc
mov
cli
nop
mov
inc
dec
sbb
pop
jg
pusha
ret
div
xchg
push
pop
xchg
push
aaa
mov
aaa
sbb
mov
pop
out
jnp
mov
pop
leave
adc
stos
jmp
das
test
popf
jle
sti
mov
mov
sbb
push
les
out
fistl
mov
cmpsl
ds
mov
lret
js
arpl
xor
xor
cld
pop
shrb
lcall
push
xorl
cwtl
or
cwtl
ficoml
adc
mov
cwtl
pusha
aas
imul
addb
repnz
dec
pop
in
cltd
lock
and
out
push
clc
repnz
xchg
mov
fwait
lahf
push
or
out
add
daa
out
jg
dec
pop
cltd
mov
mov
sti
pcmpgtw
sub
int3
or
dec
sbbl
mov
mov
inc
push
sahf
jb
aad
imul
xor
pop
mov
and
test
cwtl
xchg
pusha
test
outsl
cmpsb
inc
loope
sbb
outsb
movsl
cmp
pop
pop
test
fdivs
js
arpl
pop
xor
mov
clc
xchg
xchg
test
sbb
mov
xor
std
addr16
cs
inc
sti
jae
pop
sub
aaa
sbb
mov
std
pop
incb
sbb
pop
aas
xchg
insl
ss
mov
jnp
cmp
sbb
cmp
push
outsb
xchg
mov
in
adc
xor
mov
icebp
pop
pop
jae
adc
sub
mov
jge
mov
sub
dec
jbe
lcall
bnd
lods
mov
ss
imulb
mov
aam
enter
push
pop
push
sub
sbb
hlt
lods
push
add
jl
insb
add
and
mov
sub
dec
fiaddl
cltd
or
xchg
jl
jbe
add
ljmp
or
out
mov
loopne
dec
std
popf
cmp
push
jecxz
pop
adc
mov
add
in
push
out
or
clc
test
adc
pop
jecxz
sbb
inc
fstl
xchg
dec
daa
loop
sbb
jnp
test
out
push
out
xchg
int3
or
mov
push
out
outsb
xchg
mov
jp
jae
push
dec
jg
xor
inc
lea
lods
mov
into
adcl
inc
fstpl
outsl
decb
jo
fs
in
adc
add
jmp
aad
das
lahf
mov
cmpl
cmp
jo
cmpsb
daa
mov
pop
shrb
jns
pop
sbb
cmp
cmp
cmc
fcmovu
cmc
dec
sub
xlat
insb
xchg
and
push
pop
xor
cli
clc
fmull
lret
call
push
cltd
loopne
dec
and
push
outsl
sub
mov
lcall
xor
jmp
or
jecxz
pop
rorb
mov
sahf
addr16
xor
mov
adc
jmp
pop
cmp
push
outsb
jl
into
pushf
and
das
loopne
ja
daa
test
pusha
push
call
dec
leave
test
mov
outsl
fwait
and
fwait
ret
mov
push
call
and
xchg
jl
cltd
inc
insl
loopne
xor
pop
scas
cmc
sqrtps
xor
mov
data16
fs
fst
inc
fs
repnz
cmp
adc
and
xor
xor
pusha
out
cltd
lret
in
xor
lock
add
mov
mov
cmp
shll
cmp
adc
test
and
add
push
push
pushf
mov
push
mov
stc
ss
sbb
pop
push
push
daa
outsl
mov
scas
xor
pop
call
mov
mov
push
jae
add
out
sbbl
les
movsl
sbb
andl
xor
daa
cli
fsts
mov
loop
orl
movsl
dec
mov
mov
in
pop
xlat
and
cmp
inc
inc
cwtl
jle
mov
gs
loope
or
movsb
ja
insl
jle
jp
xorl
aaa
in
push
nop
push
xorb
ss
lahf
idiv
movsl
cmp
lahf
mov
outsl
mov
mov
push
mov
jp
in
pop
in
mov
sub
rcrl
popa
subl
dec
mov
popa
subl
inc
cwtl
repnz
int3
dec
daa
lcall
jnp
inc
js
and
js
bound
dec
push
mov
xor
push
jno
xchg
inc
and
cltd
jo
and
clc
dec
sub
dec
maskmovq
testl
rcrl
mov
and
and
jno
mov
sbb
lods
rolb
das
mov
mov
sub
cmp
fwait
push
aad
mov
shrb
cwtl
stos
in
mov
mov
gs
mov
jae
outsl
pop
cmp
mov
inc
in
mov
add
mov
sbb
lahf
push
faddp
repnz
fdivl
cmp
faddl
cli
outsl
ljmp
cwtl
shlb
jbe
cmc
cwtl
int
fiaddl
lret
sti
mov
xor
lret
insl
fisubl
fs
in
mov
sub
push
and
or
sbb
xlat
jp
shl
jg
outsb
iret
movsl
mov
add
shl
jle
aad
mov
xor
cmp
fldl
and
dec
neg
inc
call
stos
mov
and
jge
pusha
cmp
adc
sub
ljmp
fs
and
scas
jno
add
data16
add
sbb
stos
inc
outsl
cmc
sahf
push
add
inc
sub
inc
push
stc
lret
inc
push
sub
xor
push
out
cmpb
adc
push
xchg
xchg
les
mov
lret
sub
in
pushf
jg
sub
mov
inc
push
dec
pushf
and
into
xlat
pop
adc
pushw
mov
lret
mov
daa
jg
xchg
cli
pusha
push
loopne
inc
dec
lods
daa
sub
jp
pop
lock
and
cmp
mov
mov
mov
jae
daa
cld
hlt
adc
dec
movsl
pop
imul
ret
gs
into
cltd
mov
mov
dec
add
enter
rcll
and
dec
or
lahf
and
push
sub
sbb
xchg
nop
sub
addr16
dec
cmp
mov
mov
ljmp
pop
mov
cmpsb
and
pushl
dec
and
xchg
add
movsb
jmp
jecxz
cwtl
daa
lods
or
sub
mov
and
stos
inc
in
popf
popa
adc
cwtl
sbb
jg
push
fwait
mov
jecxz
leave
data16
aam
adc
mov
jns
sbb
and
dec
sbb
mov
test
fdivrl
insl
rorb
mov
push
cwtl
scas
add
negl
xchg
jg
mov
lret
incb
and
inc
fucom
test
pop
in
mov
test
cltd
aad
popf
notb
pop
and
jmp
imul
cs
xchg
adc
movsl
mov
and
hlt
scas
mov
int
outsb
or
fsubr
and
inc
push
or
pop
loopne
mov
loopne
fsubrp
jnp
dec
jmp
in
les
push
xor
imul
ret
dec
add
adc
or
push
fwait
push
dec
ret
fsubr
mov
aad
adc
mov
pop
adc
repnz
add
inc
popa
cmp
jb
mov
icebp
aam
pop
pop
lahf
push
jle
mov
dec
pop
into
in
pop
jg
lret
adc
repnz
and
cs
cmp
inc
pop
lds
and
sub
adc
mov
dec
or
call
and
aam
xchg
lds
dec
out
lcall
dec
jle
jo
mov
pop
pusha
cmp
push
pop
adc
sub
lods
push
jecxz
loop
mov
cli
cltd
pushf
mov
std
out
out
dec
inc
jecxz
mov
daa
cmpsl
push
jge
int
mov
pop
xorb
jnp
push
arpl
outsl
push
inc
pop
loope
repnz
push
push
add
add
add
inc
sbb
je
sub
mov
decl
mov
pop
aaa
mov
arpl
inc
icebp
cwtl
sbb
sub
pop
xor
jne
pop
int3
addl
popf
pusha
ss
shll
pop
mov
test
jmp
popl
ja
adc
sub
jmp
les
sbb
addr16
sub
repz
jle
pop
popf
fisttpl
addb
cmc
shll
popa
imul
push
mov
cmp
outsb
jl
jp
mov
stos
mov
aad
mov
pushf
mov
test
xchg
add
bound
pop
hlt
pop
or
call
aam
insl
adcb
cmp
or
xchg
dec
xor
cli
pushf
cwtl
push
xchg
imul
mov
inc
sub
stos
nop
gs
xchg
ror
push
inc
xor
pushf
xor
int
sub
loop
dec
dec
dec
ljmp
jns
push
enter
jg
jae
pop
fdivs
lret
lret
jno
push
cmp
fwait
mov
addb
xlat
notl
jmp
or
cmp
fldl
outsl
ja
imul
dec
test
mov
mov
pop
lret
xchg
sbb
in
call
xchg
ss
lret
xor
pop
sbb
cmpl
neg
sbb
mov
cmp
insb
xor
ds
push
enter
dec
pop
push
dec
dec
xchg
jb
inc
mov
push
inc
test
mov
loopne
cli
sbb
cmp
pushf
mov
xor
imul
pop
sti
pop
negb
adc
out
jge
xor
loopne
xor
or
xchg
ss
sub
rorb
push
sub
jo
sub
push
and
mov
rol
ljmp
adc
repnz
cmpsb
mov
pop
in
jle
js
mov
shrb
cmc
fmul
and
inc
subl
or
je
lods
jp
inc
shlb
repnz
jg
sub
andb
mov
lea
testl
mov
xlat
jl
mov
inc
int
adc
push
mov
pushl
lods
std
add
cmp
or
ret
jb
add
in
mov
hlt
push
xor
out
or
sbb
mov
leave
shlb
inc
loop
repnz
out
adc
jae
pop
fnstsw
push
push
mov
adc
int3
push
adcl
or
mov
cmpsb
fnstenv
pop
aaa
mov
sub
sbbb
lods
mov
mov
mov
dec
pop
xor
sbb
cltd
nop
es
add
sbb
push
push
loopne
pop
push
xor
mov
push
lcall
in
and
dec
and
andl
jle
jns
sbb
out
cmpsl
outsl
inc
mov
rcl
dec
push
dec
dec
adc
or
in
push
scas
jb
mov
je
mov
adc
mov
call
popl
test
lods
popf
loope
js
mov
xor
into
lea
adc
xor
data16
ss
fidivs
movsl
push
ss
cli
pop
cwtl
push
jne
add
data16
inc
call
mov
sbb
je
andb
cmpl
add
sub
mov
decb
mov
add
sub
cld
outsb
shll
movsb
jl
jle
int
jno
repnz
inc
mov
icebp
lods
cmp
lret
les
or
pop
mov
rorb
adc
out
jle
push
loope
pop
repnz
mov
xchg
repz
mov
fwait
add
addr16
outsb
inc
xchg
sbb
xchg
xchg
in
xor
xchg
inc
test
jle
test
mov
xchg
pop
cli
pop
push
scas
mov
fistps
mov
dec
mov
sub
nop
pusha
or
add
push
jnp
out
push
loopne
or
mov
scas
xor
inc
pop
imul
dec
repz
xchg
push
and
das
das
pop
stc
cmp
xchg
and
mov
ljmp
pop
and
sbb
dec
xchg
rcrb
pusha
pop
sub
popa
fdivrl
imul
mov
mov
pusha
insl
cwtl
adcb
fwait
add
insl
call
xor
and
pop
or
dec
push
call
std
fldenv
lret
inc
dec
das
add
pop
insb
les
mov
in
pop
sbb
cmp
jns
pop
je
test
out
cmc
adc
jmp
fsubr
jp
insb
cmp
push
sub
scas
fldl2t
and
mov
cld
lret
shrl
out
aas
cwtl
cmpsl
loope
aam
insb
test
ret
outsb
call
and
std
mov
or
push
mov
popa
lock
fistpl
cmp
push
aaa
pusha
jmp
push
mov
cmp
mov
fisubl
fistpll
mov
adc
adc
mov
lea
adcb
sti
adc
insl
push
mov
cmp
mov
ljmp
jge
mov
nop
and
cmp
xor
fsubrs
xchg
push
mov
xchg
push
call
or
je
fbld
cmc
push
loopne
aad
in
pushf
addr16
or
push
outsb
ffreep
mov
pop
adc
out
sbb
or
mov
xorb
adc
push
dec
loope
jbe
push
sub
rcrb
shlb
out
dec
rcrl
out
outsb
jmp
push
xlat
ret
xor
lea
leave
in
adcb
testb
push
sub
or
xor
or
into
rcl
sarl
pusha
je,pn
pop
xor
add
mov
or
sbb
adc
mov
cmp
jae
xchg
shrl
cmp
pop
and
fimuls
pop
imul
loope
mov
icebp
push
test
loopne
aaa
in
adc
insb
add
sbb
mov
or
or
jmp
mov
mov
pop
or
xchg
nop
or
jns
mov
imul
loopne
enter
rcrb
mov
test
sbb
and
jo
cmpb
fwait
jl
lret
mov
xor
jge
inc
inc
and
sbb
lds
fnsave
shrb
cld
test
mov
pushf
idivl
xchg
mov
or
lahf
cli
push
jg
cmp
mov
shlb
mov
add
mov
pusha
sti
lds
dec
mov
jecxz
ret
dec
jb
mov
out
lcall
sbb
stos
in
xchg
popa
adc
add
xlat
sbb
or
mull
sbb
outsb
jg
mov
push
icebp
mov
aas
call
xor
shrb
pop
jl
mov
xor
loopne
mov
fwait
jnp
cmpb
jnp
test
mov
dec
dec
pop
decl
dec
fldenv
rcll
sbb
sub
push
movsb
fstl
cmp
xor
xchg
fs
pop
xor
mov
outsb
lds
dec
mov
xor
das
push
inc
push
push
fiaddl
mov
sub
push
stc
hlt
ja
or
add
adc
bound
mov
mov
and
incl
xor
fistps
jnp
mov
or
lods
ret
jp
incl
test
push
jmp
jecxz
jo
push
sbb
adc
inc
cmpsl
out
out
cwtl
or
cmp
push
cli
add
daa
dec
fidivl
add
movsb
mov
stc
sbb
add
shrl
repz
push
imul
hlt
xlat
outsb
es
fisubl
fwait
insb
icebp
and
insb
fildll
sbb
and
shl
cmp
sti
fwait
sbb
jb
xchg
add
scas
xor
in
push
popf
fwait
push
adc
inc
pop
mov
jmp
xor
or
shl
cmp
add
mov
ret
scas
ficompl
enter
insl
pop
imul
pop
xor
or
push
jo
mov
sbb
in
mov
aam
outsl
pop
and
add
fiadds
data16
pushf
daa
enter
pop
aas
push
cmp
pop
sbb
fldcw
adc
jns
popf
aaa
pop
jne
fsubrs
gs
stos
pop
prefetcht2
cmpsl
xchg
int3
push
push
and
cmp
in
aaa
dec
push
inc
mov
fidivrs
int
lret
bound
and
xor
lahf
test
xchg
mov
dec
mov
jecxz
test
jecxz
je
mov
mov
test
mov
push
call
jo
movsl
cmp
pushf
and
jne
fwait
cmp
jecxz
negl
mov
xlat
pop
inc
test
popa
das
fnstsw
inc
jecxz
stc
sbb
pop
cmp
mov
add
imul
pushf
xor
push
outsb
fnstcw
iret
or
cmpsl
mov
pop
adc
push
inc
xor
rcrl
pop
lret
outsl
jno
jle
xchg
mov
ret
out
mov
dec
aas
or
pop
jnp
shr
iret
and
pop
jge
inc
cmp
fsubl
or
dec
xor
jnp
les
shlb
jns
jnp
inc
push
pushf
fs
jno
mov
clc
inc
mov
pop
std
sub
push
std
lahf
jns
imul
or
add
mov
cmpsb
xchg
pop
cmc
mov
fldenv
cli
pop
xchg
cmpl
bound
or
enter
pop
mov
push
mov
dec
xchg
jmp
lret
mov
fbld
pop
popf
push
jne
ret
xchg
sbb
in
in
push
stos
mov
sahf
push
mov
mov
lcall
cmp
jne
sbb
cmp
ror
xchg
jnp
iret
or
pop
cs
in
scas
mov
sbb
push
mov
das
scas
sub
arpl
ljmp
ss
in
in
mov
aam
fidivl
add
repz
jae
inc
out
sbb
mov
cs
mov
lret
insb
push
inc
lahf
jno
pop
cltd
and
xchg
add
dec
mov
and
push
jne
adc
cmp
dec
pop
xlat
call
or
test
loopne
push
lahf
lods
stos
jmp
cwtl
xor
inc
fwait
jmp
insl
iret
mov
jge
mov
clc
pop
insl
sub
pushf
pusha
into
sti
and
sbb
stos
mov
fwait
mov
icebp
jle
sbb
xchg
sbb
dec
loop
pop
pop
in
iret
sahf
cmp
movsb
lock
fildll
call
or
in
aam
xchg
add
xchg
repnz
lock
cld
sahf
mov
pop
mov
aad
mov
mov
or
gs
cmp
jbe
rcrb
xchg
mov
jno
rcr
cli
fisubrl
adc
andl
push
imul
push
imul
push
pop
cmp
lods
adc
cltd
test
mov
mov
clc
cmp
pop
lods
xchg
inc
fstpt
or
lea
jmp
into
and
pusha
andb
or
jge
aad
xchg
mov
mov
and
icebp
movsl
ss
push
pop
push
imul
xor
mov
mov
sbb
lods
mov
outsb
fidivs
scas
jmp
push
arpl
pusha
je
std
xor
push
cmp
popf
and
inc
data16
jbe
mov
out
rol
lea
mov
lahf
dec
test
jns
out
rcll
movsb
dec
cltd
repnz
in
add
xor
sahf
jbe
jle
ljmp
add
pop
fsubrp
ds
fidivrs
mov
aaa
add
pop
jae
or
mov
fstpt
ljmp
jno
lahf
xchg
mov
pop
lcall
push
sahf
jg
jnp
mov
sub
jg
xchg
pop
and
jmp
push
out
mov
xor
xchg
sbb
push
jg
pop
and
in
xchg
inc
int3
and
push
xor
mov
out
jns
test
in
jg
ret
rcrb
das
fisubs
les
jp
lahf
idivl
gs
cs
shl
add
ss
leave
cli
test
push
dec
out
pop
cmp
loop
ss
rcrb
popa
fsubrs
cli
cltd
icebp
movsl
mov
rcrb
es
sbbl
inc
pusha
popf
inc
sahf
mov
popf
and
ds
aam
aam
adc
mov
into
xchg
push
out
mov
jne
enter
jo
fs
pop
cmpsl
jne
in
jg
in
dec
sar
cmp
aaa
bound
out
outsl
sub
les
imul
push
cmp
addr16
std
dec
pop
fisttpl
leave
cmpsl
ljmp
ds
ror
push
xlat
push
cmp
inc
ret
fs
pop
outsb
mov
bound
pop
movsb
andl
mov
inc
cld
push
xchg
xchg
add
jo
push
lea
addr16
add
stos
test
and
adc
lods
shlb
xlat
outsb
lods
push
loopne
fisttpll
insl
add
cld
andb
mov
sti
xchg
lods
jle
sbb
mov
or
movsb
lea
and
testl
mulb
push
cs
jne
inc
call
lds
jnp
mov
int
subb
fsub
add
cmp
lods
ljmp
xchg
inc
roll
jo
out
push
jmp
pop
mov
in
fcomip
test
das
arpl
mov
mov
add
sbb
xor
jmp
adcb
jge
mov
lret
aad
lock
loope
shlb
mov
mov
inc
push
cmc
lcall
xchg
fsubs
sbb
sub
cli
mov
imul
les
sbb
xor
cs
sub
stos
cmp
sbb
push
sub
arpl
jbe
inc
out
stos
lock
test
data16
into
dec
idivb
inc
ret
cmpsl
jns
push
push
cmc
ret
push
mov
jo
push
or
mov
arpl
inc
cmpsl
test
cli
dec
dec
dec
call
test
mov
mov
cmc
jno
jno
fdivs
in
out
adc
clc
ret
pop
lock
and
xchg
and
lahf
jb
push
cmp
nop
jno
dec
mov
cmc
sub
incl
enter
insb
add
fidivl
push
pop
repnz
pop
sbb
xlat
pop
js
mov
jg
xchg
and
jge
pop
mov
xorl
pop
and
push
xchg
fnsave
pushf
mov
push
push
sub
mov
dec
ret
and
notl
sbb
les
subb
aaa
jae
retw
shll
add
xchg
lods
outsb
cli
pusha
js
mov
rclb
xor
push
mov
or
pop
cmc
add
daa
jle
mov
and
out
movsb
cmp
mov
cmpsb
and
scas
outsb
jle
lods
xchg
adc
imul
loop
jl
sbb
testb
add
out
hlt
push
rcr
test
stos
stos
and
mov
mov
add
roll
push
bound
out
rcr
cmp
add
iret
into
mov
push
loope
jo
rcrb
adc
mov
in
mov
push
rcl
mov
dec
imul
lahf
nop
add
clc
loope
cmp
frstor
or
int
and
rcrb
out
xor
mov
filds
icebp
xor
mov
cmp
adc
fisubl
push
stc
push
lret
sub
stc
lods
lret
mov
sub
push
pop
arpl
jge
mov
ret
insl
and
shr
push
mov
or
xchg
xor
push
xchg
loope
inc
or
out
cmp
dec
xchg
sub
scas
arpl
sbb
call
sbb
cmp
cwtl
jg
and
pushf
xchg
lahf
out
ret
mov
jno
push
add
push
call
inc
mov
pop
xchg
adc
movsb
mov
lds
enter
cmp
call
sbb
mov
insb
mov
fwait
mov
add
les
inc
pop
sbb
insb
dec
out
icebp
outsl
aaa
mov
es
mov
sbb
jmp
or
stc
aas
lea
sub
and
repz
ja
adc
mov
jo
push
mov
push
shlb
testb
mov
test
clc
push
inc
icebp
popl
in
loopne
fstl
xchg
mov
and
stc
push
jge
mov
push
and
and
jb
lahf
cli
xorl
mulb
mov
sub
mov
push
fcomps
andl
frstor
sbb
test
stos
xchg
sub
pop
mov
cmp
int3
jo
out
mov
or
ljmp
inc
shr
mov
or
adc
sub
mov
clc
ss
icebp
and
pusha
bound
ret
les
and
push
mov
jg
jnp
call
hlt
jg
cs
xchg
adc
push
cltd
cmp
in
in
rorb
inc
inc
ds
jmp
cli
cmp
and
xchg
imul
lcall
popf
cmpsb
jle
pop
mov
repnz
bound
sbb
mov
push
and
sub
mov
xor
mov
add
jmp
outsl
mov
add
repnz
pop
xchg
adc
sbb
ss
dec
out
inc
dec
addr16
mov
mov
fwait
shrl
push
jp
add
sbb
call
mov
add
jb
inc
insb
sub
js
pop
cs
add
inc
xchg
push
pop
jne
repz
and
xchg
popa
into
psllw
leave
dec
fcmovnu
xor
add
movsl
mov
xlat
adc
mov
pop
ss
ret
iret
sbb
or
pop
dec
sbb
mov
in
cmp
in
notl
inc
inc
push
mov
ret
mov
inc
hlt
mov
pop
cmp
ss
pop
outsl
and
test
mov
cmpsb
sbb
outsb
inc
jp
loop
and
repz
cmp
pushf
gs
xlat
mov
push
call
mov
outsl
jle
es
sahf
ljmp
jns
and
xchg
cmp
insl
xor
inc
sub
addr16
mov
cmp
aaa
mov
adc
jae
in
jecxz
inc
mov
stos
ds
cld
pop
jmp
mov
mov
jnp
dec
ljmp
mov
frstor
ljmp
jl
insb
mov
fmuls
clc
dec
push
imul
cmpsl
aad
sub
in
ss
sbb
ss
inc
out
int
adc
andb
mov
cmpsl
rclb
pop
scas
rcl
pop
xchg
shlb
adc
or
mov
cltd
pusha
aaa
cmpsb
push
mov
dec
and
ret
inc
jnp
or
pop
out
int3
fs
mov
scas
dec
leave
dec
std
lret
inc
stos
adc
cwtl
sbb
pop
mov
fstp
or
jne
mov
xor
jae
in
push
lret
subb
cltd
pop
pusha
jnp
xchg
inc
aas
xchg
mov
enter
loopne
mov
inc
aas
or
jno
roll
lret
mov
sahf
pop
sub
mov
jo
pop
sahf
and
lret
mov
or
dec
iret
aas
mov
in
aad
pop
mov
push
outsl
mov
xor
sarb
dec
movsl
inc
push
jmp
std
or
mov
xchg
dec
mov
loope
push
enter
iret
fucomi
repz
stc
sbb
popl
lea
cltd
lea
sbb
and
lea
popf
pushf
mov
sbb
cltd
push
cwtl
push
sbb
inc
jp
mov
fisttpl
pop
jo
dec
test
icebp
push
outsl
cli
test
aas
and
xor
push
nop
dec
and
popa
add
shlb
std
xchg
push
xchg
cmpsl
xor
out
xor
jg
je
cmpsl
cmp
lods
imul
xchg
jno
mov
and
cmp
mov
pusha
push
xor
repz
imul
js
ja
jmp
pop
andl
mulb
cmp
test
or
stos
pushl
in
mov
mov
insb
movsl
sbb
cmc
test
cmp
rol
cmpsb
xchg
les
leave
lods
sbb
fsubrp
enter
addr16
shll
sub
gs
addb
xor
xchg
shl
adc
stos
xchg
mov
pop
inc
pop
pusha
xor
mov
int3
in
xlat
push
push
popf
push
sub
jg
call
pop
jbe
stc
fisubl
or
lret
mov
sbb
cmc
cmp
push
icebp
and
jmp
aam
push
dec
aam
cmp
imul
repnz
inc
movsb
cmp
push
in
ret
jbe
aas
push
pop
add
sub
sub
xchg
ret
jo
jno
aam
pop
mov
sbb
inc
pusha
idivb
sub
mul
mov
mov
cs
int
cmp
ret
nop
insl
mov
addr16
sub
clc
inc
push
xor
inc
pop
jo
xor
hlt
and
pop
ds
pop
fwait
movsl
jno
push
int3
test
cli
subb
ret
into
jae
push
pop
jg
fs
es
andb
out
pop
or
jne
sbb
unpckhps
jno
mov
mov
xlat
xor
xor
lods
arpl
cmp
je
adc
cs
pop
dec
loopne
std
out
and
decl
dec
mov
lods
aas
add
ja
push
jmp
or
inc
jnp
inc
out
dec
movsl
mov
sbb
xchg
and
xchg
mov
jmp
fidivrl
js
clc
xor
jmp
lahf
mov
mov
cmp
sbb
jb
xchg
cmp
std
cmp
and
test
xor
adc
add
push
push
mov
scas
inc
ret
out
mov
int
nop
test
nop
pushf
popf
or
addr16
push
push
stc
or
xor
int
je
lret
sub
jne
pop
and
enter
jecxz
xchg
shll
push
scas
call
iret
cmc
or
xor
stos
jne
subl
push
cld
fsubr
in
inc
int
out
mov
sbb
fst
mov
hlt
jno
pop
in
mov
xchg
add
lret
aaa
jo
ss
xchg
pop
cmp
int3
fidivs
imul
test
popf
push
adcl
movsb
or
adc
lds
or
cmc
fisubrl
mov
sahf
sarb
lods
mov
data16
lea
sub
sahf
jge
adc
jae
add
sbb
aad
sub
mov
mov
push
movsl
lds
ret
and
mov
rclb
mov
sahf
xor
fdiv
push
adcl
insb
repz
shlb
jae
into
jecxz
push
sbb
ret
outsl
frstpm(287
cwtl
test
sub
sbb
adc
xchg
xchg
icebp
std
cltd
cs
inc
inc
adc
je
shlb
sub
add
dec
dec
xchg
add
lcall
dec
mov
inc
mov
jmp
sub
call
add
scas
js
or
lcall
in
fmull
lret
pop
mov
out
in
push
cmpsb
out
inc
or
sub
imul
xor
decl
push
adc
push
pushf
dec
push
dec
and
cmpsl
jecxz
inc
mov
ja
and
pop
xsha1
cmpsb
mov
in
jecxz
xor
inc
adc
mov
cwtl
scas
int3
mov
adc
push
inc
jb
xchg
xchg
mov
push
or
jno
sub
mov
jmp
hlt
cmp
sub
sbb
cs
test
pop
pop
or
xorb
pop
jnp
push
icebp
nop
scas
cmp
inc
lcall
and
xor
pop
cwtl
movsb
stc
xchg
add
sbbb
cs
jmp
add
stos
pop
repnz
jne
decb
nop
movsb
mov
push
add
stos
inc
loopne
adc
lock
jno
push
stos
and
sbb
rcrb
imul
ss
rorb
adc
jns
bound
jbe
out
loopne
pop
push
aaa
lds
iret
xchg
mov
ss
sti
movsb
aad
enter
fstp
into
gs
inc
fs
movsl
mov
sbb
sbbl
lds
push
cmp
sbbb
push
es
push
xchg
inc
das
push
subl
push
fmull
or
pop
mov
in
mov
xchg
test
pop
loop
negl
ljmp
pop
xor
add
mov
mov
daa
mov
pop
dec
sbb
int
movsl
or
out
dec
push
mov
sahf
popw
pop
or
cmp
in
aad
sub
dec
aaa
mov
mov
inc
inc
aad
and
jb
lahf
insb
and
testb
mov
ljmp
dec
loop
into
mov
jg
lock
fs
addl
out
push
mov
int
adc
es
insl
in
scas
test
jae
or
cmp
insl
mov
clc
push
insb
rcrl
dec
push
xor
dec
in
mov
mov
dec
xlat
test
enter
push
lods
sbb
lcall
push
js
shll
jo
adc
and
jnp
push
stos
sbb
add
xchg
cmp
gs
xlat
shrl
cmc
mov
mov
pop
pop
mov
cmp
xchg
out
xchg
sbb
adc
push
lcall
mov
add
loopne
jo
int3
sub
arpl
ror
outsl
shlb
or
lret
and
loope
sbb
jns
jecxz
and
test
dec
xor
xchg
enter
push
in
mov
out
add
out
daa
les
jbe
push
es
jb
daa
ds
scas
cli
xchg
mov
inc
fsubr
mov
cmpb
outsl
aas
fsubl
add
out
sbb
sbb
jbe
push
mov
jae
mov
lret
call
loop
ja
or
xchg
stos
nop
sbb
addr16
fsubs
test
daa
add
dec
mov
or
and
mov
gs
sbb
clc
inc
gs
xor
adc
mov
adcb
or
stc
dec
cmpsb
pusha
adc
inc
pop
fldenv
mov
push
and
jno
lret
push
jle
test
test
aad
xor
loop
mov
pop
mov
ja
loop
pop
outsb
fisubrl
xchg
pop
insb
jne
mov
adc
ss
cmp
out
outsb
jge
mov
movsl
in
test
or
or
lods
test
push
fdivr
adc
xor
mov
dec
cmpsl
call
sahf
or
ret
push
addr16
dec
inc
movsb
int
pop
push
ret
mov
mov
int
addr16
test
adc
inc
sub
daa
lcall
fnstenv
pop
mov
xchg
mov
mov
cmp
daa
fdivrs
and
rcrl
push
jmp
pop
jg
iret
mov
mov
and
sarl
lods
in
rolb
pop
ds
fdivrl
adc
xor
cs
je
ljmp
loope
xchg
jo
jg
cmc
cmc
int3
mov
call
fnsave
in
cli
repnz
push
adc
andb
imulb
mov
lock
insl
dec
or
mov
sarl
mov
mov
repz
mov
in
mov
xchg
int
xlat
rorl
and
jo
out
sub
daa
mov
xchg
push
loop
out
mov
pop
jo,pt
js
sub
lods
mov
test
loop
push
sbb
pusha
push
test
roll
ljmp
jne
sbb
out
push
ljmp
sub
mov
mov
popa
and
mov
ficomps
hlt
cmpl
push
xchg
jle
shll
mov
mov
mov
out
cmp
enter
xor
in
inc
ficomps
in
adc
int
inc
test
out
outsl
fldcw
adc
jge
mov
shrb
orl
bound
iret
jecxz
fs
inc
adc
mov
cs
xchg
insl
push
popa
jnp
dec
push
into
inc
push
inc
test
loopne
dec
inc
xor
xchg
inc
sbb
cld
xchg
push
ss
mov
sub
push
stos
and
fcomps
or
aas
mov
out
inc
sahf
das
pop
adc
jo
xchg
jnp
rcll
iret
inc
xchg
sub
les
cmp
in
cmp
sbb
xchg
movsl
loopne
push
icebp
xchg
jl
pop
sbb
stos
jg
dec
mov
out
es
pop
mov
lret
lock
out
incb
clc
shlb
dec
popa
sub
xsha1
cmpsb
dec
inc
adc
mul
sub
mov
fisubrs
adc
dec
arpl
jns
and
adc
mov
xchg
or
mov
push
movsl
jg
sub
pushf
cli
stos
mov
lea
outsl
sub
mov
rorb
jp
cmc
scas
mov
std
xchg
aam
sahf
push
ljmp
cmp
les
pop
pop
in
das
sub
adc
cmp
sub
das
inc
aas
loope
mov
loope
nop
push
pop
js
inc
lds
vmovdqa
hlt
push
sbb
add
decb
test
or
sub
repz
enter
insb
ds
xchg
or
xchg
out
cmpsl
and
add
shl
iret
popf
jb
mov
dec
lods
adc
xchg
int
scas
les
cmpsb
loope
jge
aam
and
xchg
pushf
xchg
xchg
mov
mov
mov
jmp
out
and
jb
outsl
mov
push
mov
pusha
imul
push
cli
or
fld
aam
repnz
cld
xchg
popa
xor
xchg
sbbb
scas
pusha
sbb
cmpsb
mov
sub
cmp
imul
jmp
pop
fcoms
mov
sub
mov
gs
pop
movb
cmp
enter
adc
out
cmp
jo
mov
insb
push
int3
or
ss
push
mov
or
mov
les
loopne
shl
iret
pop
sbb
pop
push
and
push
inc
fchs
adc
adc
shll
pop
cmp
push
lahf
xchg
xchg
scas
fbld
ja
xor
add
xchg
sub
es
popf
mov
xor
fsubs
mov
dec
sbbl
mov
stc
pop
xchg
into
gs
in
out
xchg
out
loop
jo
fs
xchg
aad
les
imulb
fsub
fimuls
push
sub
cltd
pop
imul
jge
and
fs
sbb
cmp
in
xorl
mov
enter
scas
inc
inc
sbb
rclb
jl
jno
fwait
mov
mov
inc
push
or
aaa
es
mov
fwait
int
mov
xchg
mov
push
lds
decb
fdivl
dec
into
jbe
ja
stos
mov
mov
imul
jge
nop
cmp
pop
mov
mov
int3
insl
lahf
aad
inc
pop
mov
sub
mov
dec
pop
imul
imul
jne
mov
jg
cmc
ja
mov
movsb
bnd
orb
sub
mov
xchg
or
aas
inc
add
add
xchg
rorb
clc
nop
push
gs
movsb
int3
jp
mov
pop
stos
mov
fs
dec
cmp
jg
ja
add
jg
dec
insl
push
into
jno
pop
mov
pushf
xor
stos
rcrb
das
loop
pop
inc
cmpsb
add
aaa
or
inc
mov
les
sub
orb
mov
jns
sub
push
jns
in
or
loope
cwtl
call
pop
add
xchg
add
loope
jae
in
int
push
lahf
daa
jle
adc
rorb
sub
pop
sub
push
lea
in
dec
add
repnz
notb
xlat
sub
or
inc
ficomps
and
ss
pop
mov
adc
jno
and
xrelease
incb
adc
aad
popa
shlb
pop
aaa
jne
cmp
out
lret
fnstenv
sbb
dec
lcall
in
add
adc
aaa
or
lds
xchg
mov
out
test
pop
test
arpl
jne
pop
add
or
mov
inc
cmp
stos
and
andl
cmpb
fs
push
cmp
ja
divl
and
fstpt
orl
loop
cld
push
pop
or
call
lcall
test
cli
pushf
arpl
addr16
shl
or
inc
jmp
jp
jo
pop
dec
inc
xor
cmpsl
xor
sbbb
into
adc
inc
push
inc
push
test
inc
subb
xor
lock
fcoms
lret
and
lcall
and
js
lea
addr16
mov
mov
push
or
popf
or
and
xorb
pop
mov
cltd
je
mov
xlat
sub
ret
mov
xor
jns
cld
xchg
mov
fsubrl
enter
dec
and
cmpsl
pop
inc
mov
dec
sbb
shrb
daa
lock
std
jo
push
jae
insb
popa
mov
out
stos
xchg
insb
push
adc
lret
push
push
adc
cs
push
fstps
sbb
push
cmp
xchg
add
incl
ret
outsb
fdivl
add
mov
cltd
mull
mov
je
jge
mov
ja
dec
sarl
cmp
sub
stos
insb
outsb
pop
pop
pop
test
cmp
cmc
push
sbb
adc
lea
int3
lea
jle
xlat
std
mov
movsb
lret
mov
jecxz
stos
xchg
xchg
nop
mov
fmuls
repnz
subb
push
add
inc
fcoml
xchg
das
or
es
push
pushf
pop
pop
out
data16
mov
inc
icebp
xchg
add
add
xchg
push
jmp
inc
pop
adc
movb
ffreep
jne
add
push
shrl
jmp
sub
mov
push
ljmp
xor
aaa
dec
sbb
adc
int
test
or
dec
add
iret
pop
cs
mov
call
mov
and
shr
leave
cmp
cmc
repnz
push
and
repz
push
pop
xchg
adc
lods
inc
push
cltd
dec
sbb
les
mov
jo
xchg
mov
jo
ror
lret
cld
out
pop
les
rol
inc
ljmp
mov
fs
aas
test
ja
xlat
xor
mov
insl
jle
fsubrs
lods
mov
xchg
stos
rcll
repz
mov
divl
push
adc
mov
and
aaa
lds
pop
dec
add
add
dec
pop
xor
pop
aad
sub
inc
fs
mov
lret
xchg
out
cli
imul
mov
dec
in
adc
fadds
shr
repnz
jmp
dec
pop
ds
cltd
ret
ret
dec
fbstp
push
pop
pusha
loopne
leave
adc
sub
and
push
push
sarl
stos
pop
push
das
dec
add
adc
inc
or
pusha
ds
sbbl
cmpsb
mov
adc
jecxz
inc
movsb
retw
clc
push
cmpsb
pop
and
push
pop
jecxz
sub
jno
gs
sbb
test
shrb
jno
add
cltd
fnstcw
mov
orb
data16
lcall
daa
cltd
xor
movsl
sub
shll
hlt
mov
jge
out
jnp
pop
cmp
lret
mov
or
cmp
icebp
mov
dec
inc
gs
popa
pop
xor
data16
xor
pop
cmp
mov
lret
shlb
test
mov
dec
jp
in
stos
ljmp
push
push
push
sbb
jo
sbb
sbb
data16
xor
int
mov
addr16
ret
pop
xchg
bound
xchg
mov
icebp
adc
adc
pop
or
mov
sub
jnp
jnp
inc
cmp
fs
cltd
jo
mov
cmpsb
mov
fsts
xor
movsl
into
gs
je
mov
cli
adcb
xchg
or
les
pop
cmp
add
shll
loop
mov
sbb
push
jg
aaa
sti
outsb
jl
sbbl
loope
cmp
pushf
or
lahf
cmpsb
jg
xor
inc
sbb
dec
int
jg
jns
movsb
adc
incb
mov
fdivrl
pop
push
mov
movsb
mov
fsubrl
pop
jb
xchg
xlat
outsb
or
les
testb
dec
xchg
inc
inc
scas
mov
das
sub
mov
bound
sub
or
lcall
inc
jmp
mov
xchg
adc
aad
push
lcall
mov
sti
xor
add
xchg
cmpsl
jp
sbb
out
ret
add
jb
leave
pop
adc
jge
rol
xchg
xor
pop
lea
xchg
or
jne
cli
push
push
fwait
in
or
mov
inc
mov
imul
movsb
fdivr
cwtl
je
rcl
mov
dec
idivl
loop
xor
cld
ds
pop
in
icebp
stos
pop
dec
or
cmp
int
mov
out
add
xor
ja
mov
das
jge
in
pop
ret
rorb
or
sub
sub
jnp
pop
mov
lea
jae
imul
insb
cmc
or
adc
pop
setge
or
mov
sti
xor
xchg
int
jle
jecxz
jmp
cmp
cld
fnstenv
mov
mov
push
outsl
add
and
dec
push
ret
xchg
pop
cmp
shlb
lcall
shll
call
jg
cmp
mull
mov
das
ret
jp
subl
dec
add
mov
stos
jb
jae
scas
mov
xchg
xchg
add
idivb
inc
push
xchg
jge
lods
mov
arpl
popa
arpl
in
jg
jnp
dec
xor
inc
inc
pop
adc
pop
mov
pop
cmp
repnz
cmpsb
adc
and
lods
imul
enter
insb
shlb
jle
xchg
imul
xchg
pop
lods
jle
stos
movl
sub
adc
in
mov
sahf
cld
ret
mov
cmp
sub
jno
test
and
and
push
insl
sahf
out
mov
test
mov
mov
mov
adc
sti
push
pop
xchg
xchg
cwtl
das
ret
lock
cmpsl
sub
push
fxch
stos
shll
inc
lock
enter
das
add
out
cwtl
jnp
shll
ss
es
test
cli
push
cmc
adc
pop
push
cmp
test
icebp
mov
inc
sub
pop
cli
sub
inc
sub
adc
xchg
lods
fldenv
aad
jne
loop
sub
call
cmpsb
lock
scas
or
cmpsb
push
sarb
das
jne
jge
or
orl
push
xchg
jge
jle
jle
or
fidivs
xor
test
andl
sti
jbe
and
lret
int
cmp
cmp
movsl
fwait
adc
inc
pop
insb
add
push
lock
or
cmc
inc
xchg
push
fsubl
xchg
xor
movsb
out
insl
out
adc
cmp
cmc
xchg
aas
ret
jp
in
sub
stos
mov
adc
or
sbb
jbe
mov
insb
add
cli
cmpps
pop
roll
pop
loopne
jg
in
jo
push
jne
aad
mov
jae
push
push
sarl
xchg
mov
fdivs
pop
imulb
pushf
lahf
push
fnstcw
or
jno
repnz
in
addb
jno
stos
and
in
xor
arpl
mov
push
pop
je
xchg
pop
sahf
mov
movsb
dec
mov
sbb
jo
das
mov
and
shlb
push
cmp
or
and
addr16
test
test
jo
jb
in
add
hlt
xor
xchg
jae
jle
dec
lock
xchg
jge
or
cwtl
jle
test
pcmpeqd
adc
cmp
fldenv
jbe
daa
test
out
stos
dec
fdivrl
jne
sub
add
mov
ljmp
xchg
lret
mov
data16
fxch
mov
addr16
xchg
movsl
jbe
ror
dec
cmpsb
pop
cmc
cmp
jge
int
push
mov
push
insl
xor
clc
leave
sub
aas
inc
scas
jo
jo
mov
pop
push
dec
testb
jecxz
leave
mov
inc
mov
lods
hlt
mov
flds
and
pop
xchg
daa
mov
push
jp
mov
jns
sub
jb
jne
mov
subb
fildl
xor
shlb
sub
je
das
pop
add
mov
repnz
es
shr
push
cmp
call
dec
and
xor
jb
or
lret
mov
mov
jnp
adcb
in
lods
in
or
je
mov
movb
push
repz
dec
pushl
pushf
sbb
jnp
js
aad
or
outsl
notb
shrl
sbb
lock
inc
fbstp
cmp
pusha
pusha
cld
inc
sbb
lret
pop
fdivrl
arpl
push
cmp
pop
xor
test
ds
test
rcr
jp
cli
pop
lahf
notb
sbb
xchg
leave
and
mov
incl
pop
ficompl
gs
aad
sbb
cwtl
bound
pop
cmp
push
pop
push
xstore-rng
cmpsl
and
mov
xchg
xor
imul
sbb
das
pop
xor
nop
push
jle
ficompl
clc
ficoms
insb
xchg
iret
lds
inc
push
inc
mov
scas
xchg
ret
out
or
stos
test
push
fwait
dec
bound
out
and
push
fwait
call
mov
mov
insl
popa
mov
aas
aad
xor
xlat
int3
lret
cmp
leave
repnz
aad
aad
lods
cmp
cmp
insl
not
jns
testb
cmpsl
nop
shl
rcrl
inc
cli
jmp
and
fcmovnb
iret
push
call
int
aad
xor
loopne
out
lods
out
addr16
dec
rorb
in
push
add
mov
fbstp
lret
leave
pop
fcmovnb
pop
mov
xor
pop
sub
pop
cltd
jg
mov
les
dec
pop
dec
inc
scas
jp
out
dec
pop
inc
jns
jae
push
mov
iret
sbbb
push
jnp
nop
addr16
push
adc
xlat
daa
das
cwtl
daa
add
or
fidivrl
fcomps
cwtl
xchg
jecxz
test
rcl
and
push
fisttpl
das
bound
in
cmp
imul
jmp
repz
or
jae
mov
push
and
addr16
add
cmpl
cs
mov
add
cs
cwtl
sub
das
mov
dec
add
sub
fsub
or
clc
aam
mov
in
mov
pop
cld
or
je
inc
mov
fidivs
lret
nop
daa
mov
scas
cli
sub
repz
jg
mov
jb
jnp
leave
fxch
and
sahf
cmc
mulb
push
push
or
cmp
jmp
out
mov
lock
or
and
push
inc
stc
movsb
xchg
jg
in
cwtl
pop
fs
popf
stc
lahf
imul
test
addr16
or
mov
fiadds
mov
les
fidivrs
fucomip
loopne
sub
mov
shr
popa
or
sub
sub
jmp
mov
pop
test
pop
mov
int3
mov
cld
in
es
loope
pop
in
pop
sub
add
jnp
xor
jmp
mov
daa
popl
aam
out
out
pop
les
or
in
mov
jle
jns
mov
fwait
add
mov
cmp
test
xchg
adc
ret
push
inc
outsb
push
int
or
push
in
sbb
lret
mov
out
mov
pop
inc
or
mov
test
ds
pop
outsb
and
and
adc
in
test
stos
int3
sbb
mov
gs
add
adc
test
mov
jmp
or
imul
leave
jnp
shrb
cmp
shlb
mov
addr16
call
xchg
mov
xchg
in
pusha
and
js
test
scas
stc
movsl
sbb
pop
pop
cwtl
das
sbb
xor
movsb
cmp
ja
mov
test
sbb
loopne
shrb
lods
push
push
mov
or
test
stos
sub
sarl
mov
jecxz
cld
dec
push
into
loop
mov
dec
mov
jae
out
cmp
jnp
pop
dec
adc
jecxz
sbb
mov
jg
into
sbb
ds
insb
or
push
sbb
jl
xor
clc
dec
push
push
mov
dec
inc
pushf
sahf
mov
inc
cmpsb
leave
bound
mov
enter
xor
iret
inc
push
int
sahf
clc
adc
push
adc
aaa
aad
pusha
outsl
sbb
call
iret
push
mov
jbe
dec
mov
sahf
sbb
movsl
mov
rorl
pushf
outsb
sti
and
cmpsl
cld
or
mov
aam
insb
mov
xchg
mov
add
pop
movsl
dec
in
lahf
or
mov
pop
cmpl
loope
in
push
sub
sub
xchg
mov
xor
test
popa
pop
hlt
test
fiaddl
movsl
jnp
push
sbb
jnp
cmpsl
in
adc
dec
cltd
test
jne
in
cmpsb
xor
cmp
add
aad
fs
jb
jecxz
dec
push
mov
add
add
push
mov
cltd
mov
inc
fsubs
cld
ficoml
adc
mov
adc
push
in
jge
lahf
adcb
mov
xchg
mov
cmp
jb
dec
js
sahf
in
dec
push
ds
clc
pop
leave
mov
shl
pop
push
fs
sub
mov
jno
inc
pop
out
push
icebp
mov
lods
sub
leave
sbb
jns
adc
xchg
jno,pt
in
enter
nop
daa
aaa
inc
fnsave
fldt
sub
adc
jae
mov
or
adc
sbb
sub
add
cmp
or
in
test
mov
lds
sub
adc
mov
dec
outsl
cld
jg
stc
dec
hlt
or
fmul
das
std
rorb
stos
push
or
or
cmp
push
xlat
xchg
jmp
aaa
repnz
jecxz
xchg
ds
add
cmpsl
pop
inc
or
fildl
cmpsl
das
xchg
pop
cmp
imul
adcl
push
fld
cmp
cmpb
je
push
pop
cmp
cmp
dec
mov
cmp
add
cmpsb
mov
xchg
add
pop
out
test
push
xchg
arpl
mov
in
mov
sti
test
push
orb
xor
xchg
dec
aas
push
rol
push
add
stos
jbe
jne
and
pop
fnstcw
mov
push
dec
rcrl
cmp
andl
fbld
sbb
mov
mov
es
inc
test
pusha
lret
cmp
sti
jbe
out
or
in
test
mov
adc
loop
or
push
pop
movsl
mov
pop
mov
aas
lods
jnp
sbb
mov
push
subl
mov
pop
enter
jno
insl
push
out
inc
lods
jmp
test
int
ret
mov
mov
js
repnz
jns
jge
or
dec
add
popa
shll
int3
ss
add
mov
insb
lret
push
mov
add
repnz
push
mov
insb
inc
imul
or
xchg
call
adc
pop
cli
sbbb
out
xor
inc
into
enter
gs
in
cld
lcall
jno
mov
call
std
mov
mov
xchg
ret
xchg
pusha
sub
and
int3
cmc
lea
imul
lds
jle
mov
mov
ret
in
jge
cmp
test
out
stos
xlat
mov
mov
mov
adc
mov
loop
xor
ds
mov
sbb
cli
ffreep
fwait
mov
mov
mov
bndldx
mov
cmpsb
sub
jo
adc
inc
popa
outsl
addb
lahf
inc
mov
sahf
scas
addb
adc
cmc
dec
mov
test
cmp
push
jno
test
adc
mov
movsl
mov
xchg
and
adc
dec
mov
jne
push
fsubr
push
stc
sbb
mov
addl
or
outsl
or
inc
mov
mov
xchg
adc
push
ret
xchg
jb
cmp
and
cmc
sub
cmpsl
mov
push
sti
push
mov
sub
xchg
mov
jno
xor
idiv
movsl
mov
daa
cmp
push
in
or
int
and
loop
sbb
scas
ficompl
lea
lds
inc
pop
mov
mov
sbb
jb
loopne
xchg
and
adc
jle
in
js
sub
add
pop
dec
fadd
mov
push
cwtl
je
in
sbb
fisubrl
xor
out
gs
inc
popa
pop
fbld
in
inc
mov
inc
daa
clc
sti
mov
mov
lahf
and
push
mov
xchg
jne
and
dec
pushf
arpl
inc
andb
lret
imul
movsb
addl
pop
lcall
stc
test
hlt
test
cmp
jg
ss
jmp
push
pop
fmuls
iret
xor
jnp
jae
inc
mov
cli
mov
adcl
jmp
mov
popf
ds
xchg
cmp
out
mov
out
push
xlat
std
inc
mov
mov
xor
mov
adc
mov
jno
pop
cmpsb
inc
inc
fdivs
iret
push
sub
xchg
push
cmp
jae
xor
ds
sbb
push
fldl
push
pop
pop
fdivrs
pop
popa
push
pop
pop
jmp
pop
mov
jns
xlat
repz
or
xchg
xchg
enter
sahf
das
movsl
sub
std
cmc
jge
mov
xor
sub
aaa
mov
jne
mov
outsb
push
ljmp
push
je
cmp
repnz
cwtl
out
out
and
lahf
decl
daa
stos
lahf
fdivs
mov
add
in
outsb
cmpsl
ljmp
stc
sbb
mov
jb
dec
sub
jge
test
mov
sbb
stos
xchg
nop
or
lahf
xor
inc
ljmp
pop
aaa
sti
push
js
sti
cld
cmpsl
mov
scas
gs
and
add
pop
mov
cmpsl
jp
pop
xlat
sub
inc
inc
jo
xlat
mov
test
pop
out
or
imul
mov
xor
lahf
xor
sbb
outsl
mov
aas
dec
insb
or
push
loop
int
shl
jne
push
insl
cmc
stos
lahf
or
lahf
clc
lea
or
push
jl
les
into
repnz
and
negl
jae
loope
xchg
and
mov
pop
jno
je
fbld
push
sub
dec
xchg
xor
out
fsubs
movsl
cmp
jecxz
out
outsb
aas
push
pusha
lret
lea
cmp
and
jl
xchg
and
mov
sti
lret
bound
xlat
ds
stc
rcl
aaa
sbb
ja
pop
in
fcmovne
inc
loope
dec
out
test
bnd
mov
rcll
testl
leave
dec
out
mov
lds
add
ja
repnz
gs
mov
push
jle
test
mov
js
das
add
into
pop
or
sub
imul
mov
jmp
pop
inc
in
aad
fistpll
lahf
sbb
inc
xor
es
out
adc
fdivs
ret
shll
repz
sbb
dec
pop
outsl
mov
lds
cmp
cmp
jl
dec
dec
and
push
inc
int3
push
mov
addr16
stos
fs
shr
add
scas
pop
xchg
or
mov
jp
test
xor
add
adc
lods
out
mov
mov
bound
pushf
and
mov
push
dec
mov
xchg
call
mov
mov
mov
cmp
push
pusha
jg
mov
sbb
das
cmp
lcall
sbb
cwtl
inc
xchg
inc
mov
jmp
mov
daa
xor
jae
jp
pop
loop
popf
push
popf
xchg
jp
xor
mov
dec
inc
aam
jnp
inc
xor
incl
push
ret
loope
es
or
into
scas
mov
orl
mov
cltd
dec
hlt
into
cmpl
cmc
rcrl
lret
in
adc
pushf
mov
inc
loopne
movsb
shlb
imul
jo
jmp
fldt
mov
pop
shll
inc
pop
mov
out
stos
xchg
lock
xchg
dec
mov
pusha
or
mov
or
imul
dec
sbbb
sub
negl
pushf
inc
fsubrp
pop
inc
into
jb
sbb
leave
aad
out
ljmp
subb
scas
or
cltd
pop
jns
pop
les
int
data16
dec
cmp
push
push
push
aas
lea
push
lcall
dec
shll
pop
data16
mov
stc
cmc
cmp
pushl
scas
in
test
or
aas
lock
scas
jmp
sbbl
pop
xorl
mov
sbb
test
xor
aaa
pop
inc
xchg
add
call
sbbb
in
cmc
call
mov
std
orb
ja
in
cli
add
scas
mov
repz
add
push
mov
push
mov
sbb
adc
nop
pop
sbb
cwtl
int
sbb
xchg
mov
shrb
iret
sbb
cvttps2pi
aad
ja
mov
push
cmp
sbb
dec
adc
push
mov
sub
mov
mov
cld
sub
xor
mov
sbb
inc
nop
cmc
dec
enter
movsb
xchg
test
out
sub
fidivrl
sti
xor
xor
sti
pop
mov
je
inc
push
imul
in
sbb
inc
xor
data16
mov
mov
mov
adc
pop
add
aas
adc
inc
dec
cmpsl
jo
notb
sbb
pop
cwtl
test
pop
jmp
ficompl
pop
mov
mov
xor
lret
push
imul
ja
sbb
xchg
pop
addr16
sbb
xchg
cmp
cmp
sahf
out
out
mov
sbb
test
push
mov
pop
lods
dec
lret
jns
jo
adc
pop
jno
sub
cmp
pop
dec
push
pop
sahf
clc
aad
adc
push
ss
sub
pop
shlb
mov
xor
aas
fwait
push
mov
mov
les
push
mov
pusha
xchg
xor
je
pop
mov
xchg
adc
push
jne
sbb
fwait
in
adcl
aas
mov
push
inc
cmc
outsl
adc
je
movl
addr16
xlat
cwtl
dec
test
in
nop
pop
mov
sbb
mov
cmp
mulb
cmp
mov
out
mov
ret
repz
mov
inc
jbe
fbstp
jae
push
push
mov
pop
outsb
hlt
jb
inc
pop
icebp
rcr
jle
xchg
or
sbb
stc
je
inc
orl
cwtl
sar
adc
jbe
xor
jmp
lea
int
push
out
cmp
push
popf
or
jp
inc
jle
lahf
sub
inc
pop
or
and
ret
inc
pop
test
repnz
and
sbb
inc
inc
sbb
aas
shrl
xchg
push
dec
pop
js
imul
inc
mov
adc
mov
mov
arpl
into
adc
cwtl
adc
loope
std
repnz
sub
pusha
lods
ss
mov
arpl
sbbb
fidivl
pop
out
inc
iret
adc
or
std
jae
fists
ret
mov
ds
aam
inc
int
xor
fistpll
sbb
jmp
data16
ljmp
loopne
stos
out
cmp
mov
insl
push
push
sub
ds
hlt
scas
pop
hlt
pusha
mull
leave
add
lret
xchg
cwtl
xor
mov
ds
fcompl
int3
mov
mov
dec
in
in
stc
sbb
mov
ret
outsl
addl
xchg
dec
in
add
orb
call
loope
ss
out
xchg
fdivrl
mov
or
lret
sti
mov
ret
push
inc
push
faddp
pop
mov
mov
dec
aaa
jnp
pop
mov
mov
arpl
adc
mov
push
repnz
es
mov
jle
mov
subl
push
pop
scas
fdivrl
fsubrl
enter
inc
and
adc
daa
mov
in
stos
cmp
lds
mov
pop
push
into
and
addr16
add
stos
mov
pushf
cmp
lods
les
out
inc
dec
xor
sub
xchg
lret
push
push
add
or
pusha
pcmpeqd
je
or
std
mov
sti
jg
jge
inc
sub
popf
jge
xor
rclb
and
hlt
lds
xlat
jnp
jo
sbb
aaa
or
fnsave
pop
out
add
out
mov
pop
jg
dec
scas
shlb
mov
add
cltd
and
out
mov
cmp
insb
test
mov
jl
xchg
sbb
test
add
out
daa
mov
xchg
test
and
or
mov
insb
add
mov
int3
jo
aaa
push
push
xchg
data16
test
sbb
xchg
testb
and
lods
push
call
sti
lods
push
popf
pop
adc
xor
jno
inc
loope
adc
gs
repnz
arpl
sbb
mov
mov
sbb
inc
lret
push
lcall
mov
and
pop
fsubl
dec
xchg
cmp
or
dec
in
sahf
jnp
test
testb
mov
push
ss
push
cmp
jecxz
int3
idivl
xor
jmp
xchg
jmp
test
les
add
push
push
inc
jno
scas
mov
xorl
lods
cli
push
jne
into
shlb
xchg
mov
inc
stos
in
repz
dec
decb
mov
xchg
add
add
into
jl
pop
sub
and
int
add
inc
aam
insl
push
dec
lock
mov
inc
push
repnz
imul
jecxz
sub
mov
pop
and
fpatan
fcomps
movsl
mov
xchg
inc
dec
in
adc
stos
test
insb
inc
popa
leave
cmp
xchg
popf
push
les
test
add
pop
test
add
inc
sub
scas
call
imul
sbb
add
pop
scas
and
mov
push
jbe
movsb
decl
jp
xor
test
adc
xor
xchg
into
add
pop
mov
xchg
mov
test
stos
sarl
dec
out
js
adc
rol
insb
adc
cmp
mov
fbstp
sbb
lret
jns
xor
mov
ja
and
push
aad
cltd
push
xchg
sbb
daa
inc
loope
cmpl
nop
pop
push
fwait
test
inc
and
or
lahf
pop
test
xlat
mov
cld
cmp
test
xor
fidivrl
mov
xchg
popa
cmp
inc
in
rorb
sub
shl
sbb
clc
jge
out
cltd
pop
aaa
into
dec
test
test
cltd
mov
jae
jmp
int3
xor
pop
inc
mov
push
jae
or
add
and
jno
test
jns
lods
pop
and
in
iret
into
pop
pop
cs
lcall
cmpsl
dec
insb
xlat
pop
cmp
and
jns
cltd
stos
jno
sub
notb
scas
int3
lcall
mov
jo
adc
movsb
and
popa
add
mov
mov
movsb
lods
mov
ja
xchg
lods
inc
sbb
jb
std
stc
and
inc
sbb
es
shl
xlat
test
lods
cwtl
jmp
js
inc
ljmp
jno
push
inc
clc
push
cmp
mov
sti
loopne
jo
lret
cli
inc
jb
jle
adc
shrb
ljmp
int
sbb
ds
nop
call
xchg
js
int
out
mov
and
sti
xor
dec
and
jl
or
idivl
shll
inc
loopne
sbb
aad
out
loop
adc
insb
xchg
mov
fdivs
mov
mov
push
in
lret
push
sbb
pop
dec
fdivrl
mov
mov
test
adc
cmp
add
xchg
xor
dec
negb
clc
movsl
inc
push
xchg
sub
scas
dec
pop
cmpsl
movsl
mov
pop
loopne
dec
loop
xor
out
or
pop
lods
fnstsw
xchg
dec
mov
pop
enter
pop
sub
xor
jg
xchg
mov
cmp
push
dec
push
xor
mov
fdivrl
or
mov
scas
jge
loopne
imull
mov
outsb
je
je
jge
cmc
sub
lods
and
add
push
push
push
lods
inc
subb
adc
incl
je
cmp
lcall
mov
repnz
arpl
dec
jno
ljmp
inc
mov
xchg
adc
sub
jnp
mov
xor
fstpl
test
cli
mov
xor
sbb
xchg
popa
cmp
adc
lock
add
gs
or
fisubrl
sbb
int3
loop
daa
adc
or
out
mov
shlb
pop
xchg
mov
dec
push
sub
fwait
test
cmp
popf
fmull
fcomip
xchg
fsubl
mov
push
iret
mov
test
mov
dec
sti
mov
clc
inc
push
cmp
mov
lret
xchg
sarb
dec
pushf
mov
pop
or
sub
sub
testl
das
mov
sub
inc
cld
cld
clc
pusha
subb
je
sbb
add
jl
stc
sub
adc
clc
iret
mov
or
add
lcall
stos
out
cwtl
mov
adc
mov
mov
in
sub
inc
add
lds
cmp
xchg
pop
and
jmp
xor
ljmp
lea
jl
sbb
or
loope
fsubl
adc
aam
pop
xor
and
mov
mov
pop
out
popa
pop
test
push
add
cmp
ljmp
sbb
cmc
imul
pmaxub
out
mov
cmp
xor
adc
jns
mov
push
imul
out
sub
stos
inc
push
rcrl
out
sub
pop
and
fcoms
cmp
add
mov
push
sti
push
adc
sbb
popf
or
cmp
jmp
inc
add
addr16
stos
xchg
fstpl
clc
cmp
cmc
adc
es
test
in
adc
int3
lret
fwait
cmove
repnz
and
das
add
repz
xchg
cmpb
sub
in
cmpsb
dec
aad
lods
in
adc
fisubrl
jae
scas
loop
mov
aad
test
rolb
xchg
xchg
test
ja
jno
andl
in
lods
add
lods
decb
cmp
outsb
cld
adc
jp
fdivl
sbbl
imul
cmpb
push
ljmp
jne
xlat
push
paddw
inc
cwtl
insl
add
mov
into
adc
adc
lods
sbb
enter
mov
push
lret
add
mov
pop
rcl
repz
nop
gs
aam
testb
mov
cwtl
xor
sbb
sub
dec
pop
xor
test
stos
adc
test
jbe
mov
push
shll
add
sub
sbb
into
testl
dec
mov
repz
repnz
leave
dec
mov
stos
mov
or
lods
outsl
ss
ljmp
pushf
dec
imulb
pushf
arpl
jns
dec
mov
dec
mov
push
or
scas
push
imull
js
es
xor
add
addr16
pop
push
pop
imul
push
xor
mov
push
fs
jbe
cmp
inc
lret
aad
cmp
mov
dec
out
jg
popf
add
jge
out
mov
xor
fiaddl
xor
pop
imul
jae
mov
into
je
js
or
lcall
cmp
pop
pop
mov
xchg
xor
bound
fmull
cmp
sbbl
add
push
push
test
roll
sbb
sbb
call
mov
dec
imul
pop
push
xor
cmpsl
sbb
add
aas
push
push
push
pop
xor
adc
inc
je
std
pop
cmp
jp
push
mov
orb
jnp
dec
lds
sbb
push
push
in
ja
or
lods
nop
sbb
in
gs
sub
xchg
fbld
inc
lahf
dec
xchg
inc
fistl
fs
adc
stc
mov
cmp
pushf
mov
rcrl
jge
mov
push
inc
cltd
add
and
mov
or
in
mov
push
push
aaa
hlt
mov
mov
xor
out
xchg
cld
push
mov
adc
out
insl
adc
lret
sub
mov
hlt
insl
dec
mov
cmpl
jmp
push
loope
jl
xor
dec
sbb
aam
dec
cmp
sbbb
jp
push
imul
sbb
insb
or
adc
xor
mov
ret
test
iret
push
mov
and
clc
xchg
pop
icebp
enter
inc
fcmove
fmul
push
push
mov
adc
mov
mov
stc
lods
pop
or
daa
ficompl
movsl
cld
mov
cmp
adc
cmp
rolb
inc
lods
sub
inc
notb
jbe
xor
ja
cmp
dec
aam
or
out
out
mov
pop
jnp
adc
xor
mov
adc
dec
jecxz
push
rcrl
cmp
push
rcr
jo
into
js
sbb
push
pushf
cli
das
xchg
sub
test
gs
push
loop
rcrb
imul
lock
fdiv
inc
or
adc
jmp
mov
pop
ret
jnp
mov
sbb
mov
jne
pushl
scas
xchg
ss
and
dec
mov
in
xchg
inc
leave
ret
insl
add
jmp
mov
xchg
push
cmp
push
pop
jmp
iret
sarb
push
jb
xor
add
mov
addr16
test
mov
mov
jne
ja
cmpsb
push
and
mov
xchg
xchg
sub
sbb
sahf
mov
fld
repz
test
js
scas
jmp
or
xchg
dec
adc
mov
sbb
xor
cltd
jbe
cmpl
das
mov
js
xor
sub
inc
adc
orl
xchg
int
mov
pusha
testl
lahf
jle
mov
arpl
loopne
insl
xor
push
int
xchg
ja
pop
mov
xchg
out
jmp
adc
cmp
xchg
cmpsb
rolb
fs
cmp
xlat
pop
lcall
mov
shrl
add
jle
out
push
imul
fbstp
lret
rcrb
mov
pop
lret
addr16
jnp
xchg
loopne
in
inc
inc
rorb
xor
popa
xchg
mov
push
cmp
cmp
mov
lock
push
in
lahf
fstps
repnz
inc
sbb
lret
ficoms
or
cmp
adc
jge
dec
mov
mov
xor
test
leave
jno
ss
jbe
mov
xchg
jle
insl
push
lahf
lock
sarb
xchg
add
inc
mov
adc
insb
adc
inc
ficoms
lock
shl
jg
fcomps
lahf
adc
es
dec
cltd
aas
clc
nop
out
push
sbb
mov
jb
pop
mov
inc
lahf
arpl
xor
mov
lahf
lds
inc
cmp
repz
iret
shll
inc
popa
stos
sahf
fs
pushf
mov
lock
orl
sbb
leave
mov
cltd
test
cltd
ja
mov
out
enter
push
arpl
xor
movsb
mov
lock
xor
pop
xchg
mov
je
pop
push
in
pop
aad
pop
cs
fadds
mov
scas
mov
pop
icebp
test
test
lods
sbb
mov
xchg
lods
push
sub
popf
lods
inc
xor
push
mov
add
push
bound
jge
aas
pop
popf
imul
ja
cmpsl
push
scas
jmp
in
xchg
cmp
test
enter
push
orb
push
xchg
filds
sbb
ret
negb
sub
push
daa
data16
fnstenv
in
mov
mov
mov
jo
leave
sub
mov
adc
sub
pop
mov
lds
and
shrl
ljmp
cmp
mov
into
jb
sbb
push
push
mov
jp
test
aad
jbe
or
add
push
lahf
out
xchg
cmp
push
movups
mov
mov
mov
mov
push
sub
pushf
cli
jp
stos
ds
insb
les
jbe
mov
inc
in
stos
stos
data16
data16
push
cltd
sbb
out
lret
sbb
lock
nop
mov
dec
xor
rorb
ljmp
insb
mov
sbb
lea
mov
subl
or
and
jmp
push
sahf
lcall
sbb
mov
or
mov
fdivr
sbb
inc
jb
test
mov
jno
sahf
xor
pop
xchg
push
mov
mov
loopne
and
fistpl
push
fiaddl
adc
jo
push
xchg
mov
push
xchg
mov
fucomp
add
je
mull
imul
mov
ucomiss
inc
data16
pop
andb
xor
add
mov
push
mov
mov
andb
insl
push
fiadds
adc
shll
mov
sbb
shrb
pop
cmp
add
push
aas
lret
mov
mov
dec
xchg
mov
mov
jbe
inc
jb
ljmp
push
rcrl
push
jns
out
lea
loopne
mov
cmpsb
loopne
xlat
mov
and
enter
cltd
in
lds
negb
stc
je
and
xchg
adc
pushf
cltd
addr16
mov
jle
lcall
or
arpl
sbb
jle
enter
je
add
push
out
mov
jmp
int
cmpl
mov
test
scas
sbb
jns
fdivl
xor
cmc
mov
mov
popa
jl
push
out
sub
mov
popa
and
mov
jp
sti
pop
cmc
inc
pop
and
sub
xchg
sub
testb
add
out
add
orl
and
jno
fmuls
into
xor
ret
push
ret
or
test
lea
xor
lds
jae
xchg
sbb
or
sub
movsl
aaa
cmpsl
sbb
lods
outsl
dec
push
lods
inc
sbb
in
test
mov
or
test
shrb
lret
bound
into
push
cmpsl
jbe
jmp
or
aad
push
cli
adc
in
nop
repz
movsb
adc
sub
into
xchg
jle
sbbl
or
pop
and
pop
fdivl
sub
pop
bound
clc
mov
clc
in
dec
sarb
cld
dec
jne
sub
sti
insb
inc
insl
mov
xor
mov
mov
call
lods
add
ret
cmc
int3
js
xchg
ds
adc
out
dec
sbb
jecxz
adc
daa
jno
sub
pop
es
inc
cmp
mov
call
jecxz
popa
cld
mov
arpl
pushf
cli
and
xchg
clc
push
iret
fdivrl
push
push
cwtl
xor
dec
and
add
push
sub
sub
pop
movb
sahf
adc
dec
sbb
out
sub
scas
mov
in
test
pop
pop
clc
cmp
das
repnz
lahf
cli
loop
test
lret
imul
popf
mov
loope
pop
adc
cmpsl
gs
mov
cmp
negl
mov
mov
pop
dec
shlb
mov
push
in
push
or
xlat
lods
sub
xor
sbb
daa
pushf
pop
jecxz
add
dec
push
inc
inc
aad
into
gs
not
jbe
je
sub
outsb
insl
inc
pop
in
mov
mull
ljmp
inc
dec
loope
sti
outsb
xchg
cmpsl
sbb
sbb
sbb
imul
jle
call
packuswb
orl
lret
icebp
icebp
insb
out
and
add
push
and
imul
pop
cld
xchg
stos
jb
mov
and
or
push
cmp
out
pop
enter
pop
outsb
jle
stos
cmpb
or
sub
inc
add
aas
pop
sti
imul
testl
scas
xchg
xor
cmp
rcrb
out
xchg
out
push
xor
mov
xlat
dec
sub
pminub
aam
cld
mov
pop
orb
testb
scas
loope
sarl
addl
mov
int3
mov
out
adc
jne
std
lods
dec
and
scas
push
outsl
cmp
popf
cwtl
xchg
mov
and
das
jno
jno
lcall
shl
int3
pop
and
lret
push
cmp
rol
mov
loopne
and
xor
jns
in
mov
jecxz
mov
jo
add
push
dec
jmp
iret
and
and
lock
inc
xor
popf
call
movsb
push
lods
out
jnp
aaa
mov
add
arpl
sub
and
sub
inc
push
mov
sarb
subb
pop
lar
mov
dec
sbbl
xchg
jbe
add
add
dec
adc
pop
add
xchg
out
bound
mov
xchg
push
sbb
pop
subb
leave
sub
cmpsb
push
fstl
test
ss
sqrtps
jb
mov
or
adc
aam
mov
mov
cli
pop
ljmp
popf
pop
sbb
pop
and
xchg
lea
pusha
aas
sbb
xchg
ja
stos
inc
fists
jl
or
and
push
lds
xor
icebp
sub
mov
popa
comiss
adc
bound
mov
enter
js
insb
inc
xchg
dec
sbb
mov
add
mov
sub
dec
mov
stos
pop
push
fwait
lahf
orl
aam
xor
add
sub
cwtl
je
and
jg
pop
test
minps
lods
sub
mov
aad
outsl
mov
lcall
xchg
clc
xchg
scas
lret
cmp
mov
shl
mov
lcall
aaa
adc
cmpsl
dec
pop
lds
scas
adc
stos
jne
sbbb
push
in
dec
xor
mov
test
sbb
mov
xor
popf
xchg
pop
sbb
jbe
sub
push
rep
xlat
push
inc
clc
pop
pusha
add
mov
insl
outsb
add
mov
movsl
out
inc
pop
hlt
pusha
mov
and
inc
push
test
adc
popa
fcompl
aas
jnp
sub
sbb
adcl
add
lret
lock
inc
push
leave
jo
mov
push
aaa
push
xchg
mov
mov
in
inc
pop
mov
push
lds
fneni(8087
xchg
addl
inc
aam
ret
push
jp
lret
xor
fsubrp
nop
mov
pop
shlb
add
xlat
and
and
imul
mov
lcall
xor
pushf
pop
cmp
js
adc
or
aad
into
dec
adc
xchg
hlt
xor
push
adcb
add
mov
jo
ret
adcb
mov
add
jns
push
fidivrl
xor
bound
cli
andb
lret
sbb
cld
outsl
jge
lahf
ss
add
sbb
xor
push
fmull
stc
bound
sbb
insl
add
sub
insl
lods
cmp
push
repnz
fnsave
fldt
outsb
cld
xchg
mov
inc
sbb
and
rolb
mov
pop
fistl
sti
fists
push
lahf
xor
and
stos
aas
push
lock
mov
pop
ja
scas
mov
mov
fstpl
xchg
loop
into
add
cmp
mov
or
shlb
iret
push
mov
daa
sti
jns
pushf
dec
repnz
cmp
mov
iret
xlat
push
add
insl
popa
shll
mov
xchg
sbb
mov
xchg
popf
sub
inc
inc
dec
fbstp
mov
sbbb
daa
outsl
and
lret
lcall
xchg
add
inc
inc
push
or
xchg
leave
cli
mov
frstor
les
adc
jno
xor
or
dec
xchg
aad
in
dec
add
scas
ficompl
pop
mov
loopne
mov
aam
stc
or
dec
or
fldt
dec
inc
lahf
xor
mov
or
lcall
je
bound
das
and
xchg
ficompl
jle
mov
leave
xorl
movsl
mov
out
sub
or
fs
es
push
cmpsl
out
fldl
jmp
mov
rolb
les
movsb
iret
mov
sub
fisttps
mov
btcl
push
in
pop
aas
push
cmp
stos
andb
and
ret
movsb
je
add
sub
push
xchg
inc
insl
mov
xor
stos
out
mov
cwtl
xchg
leave
or
lods
dec
cli
mov
out
cmp
or
test
dec
add
xchg
mov
lds
das
xchg
pop
adc
mov
out
jg
lock
in
notl
pop
cmpsb
cltd
xchg
cmp
aad
adc
test
lret
stc
pop
or
shll
push
jno
mov
cmpl
push
call
faddp
jo
inc
call
aad
aaa
pop
inc
lcall
shlb
pop
imul
mov
cmpsb
out
push
sbb
nop
xor
stos
and
xor
push
fwait
xchg
xor
rol
xlat
add
sbb
inc
addl
cmp
pop
mov
and
pop
fcmove
cmc
xchg
lock
and
inc
test
jg
inc
loopne
adc
jmp
jmp
fcmovu
ss
pop
mov
cli
push
hlt
mov
or
ret
push
cmpsb
insb
leave
cwtl
scas
and
enter
xor
mov
shrl
xor
inc
xchg
add
leave
push
sub
fidivrs
test
lea
cmp
mov
into
pusha
leave
pop
cmp
subb
les
sbb
outsb
mov
dec
sbb
leave
adc
loope
pop
and
mov
sbb
das
ret
icebp
sbb
jae
fidivrs
dec
push
cmc
adc
add
jg
fwait
stos
mov
push
outsl
xchg
add
adc
mov
arpl
jecxz
les
testl
not
jo
jbe
mov
popa
andb
lret
push
ja
js
insl
mov
leave
push
pop
mov
int
sub
push
mov
icebp
aas
inc
int
mov
outsl
mov
adc
add
jo
xchg
imul
adc
lcall
mov
mov
jb
repz
ss
xor
adc
or
lahf
push
adc
div
cs
das
adc
mov
or
cmpsb
sbb
test
pop
pop
add
add
sub
decl
pop
mov
dec
shrl
adc
test
jge
decl
mov
imul
or
dec
sbb
push
ret
push
rolb
in
pop
lock
in
mov
xchg
div
xor
fsubs
leave
out
mov
push
or
popa
pushf
test
loopne
inc
repnz
imul
outsl
push
mov
je
andb
xchg
xchg
sub
sub
xchg
movsl
sub
mov
test
icebp
outsb
movsb
cmp
add
xor
ja
xorb
cli
lea
pop
or
shrl
mov
push
fnstcw
and
dec
in
fidivl
push
adc
lcall
aam
jecxz
sbb
cld
pop
xor
paddq
inc
repnz
pop
andb
cmp
inc
movsl
push
shll
outsl
inc
cld
push
lret
sbb
arpl
nop
das
mov
jg
jne
dec
in
xchg
dec
out
lock
jno
bound
inc
mov
jbe
test
add
das
cmp
loopne
andl
inc
lds
jmp
hlt
ret
jg
pop
cmp
dec
cmp
enter
mov
ja
jno
jg
cmpsl
jbe,pt
sbb
aad
lds
stos
mov
into
fcoml
push
in
arpl
in
insb
add
adc
xchg
jns
in
pop
inc
pushf
push
dec
cmp
mov
je
pop
add
popa
add
rcrl
xor
mov
add
mov
mov
mov
rorb
outsl
or
je
mov
fists
mov
mov
repnz
insl
cld
xchg
jmp
mov
subl
icebp
xorb
mov
dec
adc
push
push
subl
pushf
xchg
mov
push
xlat
push
push
inc
sbb
inc
pusha
daa
repz
sbb
ret
jle
jbe
scas
popa
pop
in
nop
inc
stos
mov
inc
lods
dec
loop
jb
push
dec
cmp
daa
jno
xlat
cmp
xchg
in
nop
lahf
fnstenv
test
sub
stos
mov
push
pop
aad
int
xor
adc
cmp
jle
sarl
rol
jl
jns
ret
fidivl
loop
pop
and
js
xchg
andl
mov
sbb
cmp
mov
dec
cli
inc
scas
sub
rcr
lea
mov
mov
or
mov
push
xor
xchg
and
push
dec
aas
pop
fistps
mov
cmpsl
fs
adcl
mov
test
dec
mov
pop
js
push
insb
test
in
sub
and
jmp
icebp
ds
or
or
dec
mov
insl
cmc
jp
mov
mov
daa
sub
mov
pop
out
cmp
imul
xchg
pushf
cli
outsl
and
add
lea
xchg
pop
mov
movsb
je
es
repnz
mov
mov
mov
rorb
loopne
sbb
or
dec
push
xlat
divl
pop
icebp
mov
sub
cltd
xor
lret
fwait
addb
jno
push
out
aad
mov
stos
cmp
pop
call
in
cmpsl
mov
mov
sbb
mov
fiaddl
jb
cld
inc
pop
cmp
sub
test
sbb
mov
xchg
rol
mov
add
xchg
add
and
mov
adc
adc
shll
insb
and
iret
orb
sub
daa
add
push
add
mov
mov
out
xor
popf
aam
dec
dec
movsb
dec
jmp
or
mov
loop
fdivs
aad
sbb
add
pusha
mov
nop
cwtl
popa
xchg
push
mov
inc
push
ja
mov
in
dec
inc
in
loope
xor
ljmp
add
das
pop
or
lcall
and
push
inc
dec
fld1
testl
inc
adc
hlt
roll
mov
jns
jne
cmp
outsl
lods
mov
out
pop
dec
dec
mov
in
clc
or
cmpsl
push
imul
push
cmpsb
lea
orl
xchg
push
popa
icebp
popl
fsubs
pop
or
imul
xchg
ljmp
clc
fistpl
addr16
mov
xchg
xor
popa
mov
sub
sub
dec
cmp
add
mov
dec
pop
dec
leave
repz
call
cmp
outsl
adc
stos
sbb
mov
insb
out
jle
lret
shr
test
call
push
ds
outsl
fisubrs
std
test
mov
xchg
pushw
push
out
leave
les
sbb
and
and
cltd
pop
das
jnp
dec
mov
in
cmp
pop
push
sbb
inc
pop
push
or
loope,pn
fldenv
and
out
adc
in
push
sar
cltd
cs
cmc
sub
and
pop
repnz
mov
add
repz
sub
lods
inc
mov
and
outsb
cld
xor
fcoml
cwtl
outsl
cmp
xlat
testb
sti
dec
rcrb
subl
aam
sbb
outsb
cmp
out
std
pop
cmc
adc
push
xchg
sbb
and
mov
popa
xor
mov
in
insl
jge
mov
sub
inc
inc
lods
std
push
enter
adc
sub
cmp
dec
in
cld
in
sbb
movsb
pop
nop
jbe
add
in
aam
je
inc
mov
mov
es
movsl
cmpl
xchg
popf
jnp
inc
les
imul
je
or
sub
testb
mov
xlat
lahf
jmp
movsb
ja
subl
pop
hlt
je
rorb
xchg
sbb
xlat
jbe
mov
adc
add
push
jl
hlt
push
mov
jno
les
push
cmp
ja
xlat
pop
lret
es
loop
out
divl
imul
ret
in
and
sbb
sbb
icebp
xor
fisubl
dec
or
movsb
cmp
and
jge
ss
xor
push
push
cmp
xchg
push
sub
ficoml
sbb
ret
loope
orl
loop
fistl
lret
movsb
cmp
arpl
sarl
push
divb
fisttpl
adc
adc
inc
fldt
ret
rclb
adc
jne
lret
mov
and
or
ds
xor
subl
pop
mov
jbe
sbb
jns
into
insl
dec
arpl
or
mov
push
jecxz
mov
jns
filds
ret
aam
push
xchg
pushf
mov
aas
insl
push
pop
dec
xchg
jp
xchg
outsb
in
js
jecxz
jb
mov
pop
push
push
or
arpl
push
sbb
or
ljmp
ljmp
insl
ja
or
mov
cli
inc
xchg
push
test
gs
lea
add
inc
mov
aaa
and
cltd
jmp
adc
fistpll
sub
push
decb
test
in
xchg
sbbb
mov
mov
loope
xchg
shl
and
pop
ds
mov
cmp
inc
mov
in
mov
pop
outsl
cltd
aad
sarb
mov
out
lea
fmulp
pop
mov
push
jge
arpl
test
xchg
aad
xchg
xchg
cs
loopne
xorl
aam
mov
jl
fisubrs
cmpsb
aaa
movsl
add
cltd
lock
fdiv
adc
xor
xor
test
icebp
adc
mov
or
xchg
jecxz
add
enter
dec
lock
dec
push
inc
cmp
mov
mov
insb
add
xchg
or
aaa
icebp
sub
fsubs
pusha
inc
add
pop
inc
daa
je
pop
mov
mov
lock
jno
dec
or
test
push
mov
mov
push
movsl
or
fmull
mov
jmp
jmp
mov
mov
loopne
mov
xor
and
jnp
inc
mov
push
popf
stc
fcoml
js
cmp
push
cmpsl
push
mov
shlb
popa
loope
mov
imul
loopne
cmp
cli
inc
fnsave
mov
xchg
movsl
je
int3
sbb
out
mov
xchg
dec
sbb
pop
lcall
mov
push
xor
fsubr
iret
aaa
sti
fildll
cmpsl
std
mov
cmp
and
and
addr16
xchg
jg
push
xchg
push
jg
adc
pop
pop
add
xchg
adc
mov
or
in
sub
mov
or
xor
insl
xchg
cmp
push
xor
cmpsl
scas
inc
dec
ljmp
mov
inc
cltd
out
xchg
icebp
xlat
aam
add
mov
cmp
in
cmp
push
add
fs
cltd
imul
push
sbb
add
test
pop
shll
scas
xor
pop
test
bound
jmp
or
test
mov
mov
mov
aaa
jbe
ror
int3
pusha
je
nop
cmpsb
out
test
inc
pop
and
in
sti
adc
mov
vmovq
dec
pop
repz
out
shll
sbb
jle
into
gs
dec
xchg
mov
lods
in
pop
ja
aas
mov
repnz
push
sbb
ret
mov
cs
sbb
lret
dec
js
jne
and
pop
sub
adc
in
flds
mov
rol
ret
adc
dec
add
cli
or
mov
xchg
xchg
mov
or
in
mov
jbe
aas
mov
xchg
insl
negb
sbb
jb
cmc
mov
cltd
mov
out
pusha
and
les
inc
jp
popa
les
mov
movsb
andl
lds
jns
jge
push
xchg
addr16
jo
xchg
stos
pop
sbb
push
dec
jmp
lea
adc
xchg
mov
jle
and
daa
jmp
popf
jo
divl
sarl
gs
loope
cmp
or
xchg
mov
and
xchg
jnp
push
nop
stos
test
daa
outsl
les
xchg
imul
xchg
inc
mov
push
jmp
or
call
or
sahf
imul
sub
sbbb
mov
jnp
lds
leave
jg
les
pop
test
dec
int3
mov
lock
negb
loopne
stos
adc
gs
mov
xor
jno
test
ret
outsb
add
test
xchg
es
pop
insl
add
pop
leave
ljmp
dec
and
shll
idivb
fbld
es
andl
sub
cld
stos
lds
and
sbb
sbb
sub
jbe
push
push
roll
pop
adc
push
dec
pop
mov
jb
test
inc
mov
decb
fildll
aaa
pusha
and
mov
cmp
xchg
mov
mov
push
int
inc
loopne
dec
dec
in
bound
inc
stc
test
lea
dec
and
inc
mov
frstor
inc
inc
decl
push
and
ljmp
mov
cmc
or
cmp
push
jecxz
fcmovnb
jecxz
and
idivl
mov
and
repnz
outsb
jl
or
push
out
fcoml
xor
xlat
inc
pusha
push
mov
cmpsl
or
lods
out
sub
dec
cs
scas
mull
jl
mov
outsb
ret
das
insb
fxch
jo
ds
loopne
pop
cmp
xor
lods
aam
dec
xchg
std
stos
jbe
xor
stc
insb
inc
xchg
dec
out
jge
cld
subb
sub
push
push
sub
push
or
xchg
xor
push
adc
fs
push
xchg
or
movsb
push
stos
sub
clc
push
int
jle
fstps
jg
lret
test
add
inc
lods
cmp
addr16
push
int3
pop
adc
call
jo
mov
shlb
xchg
icebp
call
adc
xor
mov
rcl
mov
jle
imull
and
inc
ret
cld
cmpsb
jp
mov
inc
outsl
sbb
cltd
dec
cmpsl
lock
push
jno
adc
sbb
inc
pop
js
insb
fldenv
int
rcr
jo
cs
mov
fsubr
jg
dec
or
stc
out
mov
xchg
xchg
push
test
ja
test
jbe
out
dec
in
push
into
mov
mov
ss
dec
pop
int
mov
loopne
icebp
pushf
pop
push
add
rcl
clc
out
je
jp
repz
xchg
adc
jg
stos
sub
or
and
dec
jge
dec
xchg
add
add
aam
xchg
cwtl
test
pop
loopne
dec
iret
jmp
jbe
imul
addr16
xor
pop
mov
xor
add
sbb
sbb
scas
pop
push
cmp
jne
and
repnz
and
and
mov
outsl
push
cmp
sub
es
inc
xchg
inc
cmovle
pop
ret
notl
cmp
pop
mov
or
fldt
pop
and
test
outsl
fsub
dec
jne
sti
sbb
xchg
adc
mov
mov
xchg
movsl
in
sbb
mov
push
enter
icebp
repnz
daa
and
jecxz
inc
cmc
int3
std
movsb
out
jbe
sbb
rdpmc
sti
nop
mov
sbbb
cmp
jb
and
push
imul
push
adc
mov
push
repnz
pop
je
or
imul
pop
adc
jle
loopne
in
and
das
mov
add
xchg
negl
cmc
adc
cli
adc
ret
std
push
fiadds
jbe
mov
mov
movb
add
mov
jns
adc
adc
mov
xchg
and
jbe
lret
dec
adc
jae
sbb
lds
test
adc
ret
jnp
mov
ja
aaa
imul
cmp
mov
jae
mov
inc
add
dec
int3
jne
das
cmpsl
in
iret
inc
jo
sbb
cmpsl
lahf
cs
mov
pop
xor
sub
call
dec
and
adc
aaa
sub
popf
mov
imul
inc
inc
dec
xchg
mov
leavew
pusha
xchg
jnp
sub
inc
out
jae
mov
les
push
divl
inc
divl
cmc
mov
xchg
fisttpll
aam
cs
fistps
sub
lods
inc
out
dec
ja
aas
andl
outsl
jge
mov
push
mov
out
pop
test
inc
fs
mov
lock
mov
stc
and
ret
cmpl
imulb
jmp
fsubl
jmp
or
icebp
dec
push
out
lahf
es
jbe
cmpsb
iret
inc
rcrl
jbe
jnp
push
pop
push
mov
xchg
data16
in
ss
das
lcall
out
loope
aam
mov
daa
outsl
mov
jne
xorl
xor
pop
pop
ret
sbb
xchg
lock
testl
fwait
pop
mov
xor
bound
js
popf
stc
mov
test
adcl
imul
lret
jmp
xchg
mov
int
jnp
jns
mov
incb
mov
dec
xchg
fsub
lds
pop
cli
jns
inc
stc
sub
xlat
rcr
repz
hlt
cltd
fsubl
xor
push
adc
push
insl
lods
loope
je
iret
imul
adc
mov
cmpsb
adc
enter
jne
cmp
imul
aad
jns
sbb
inc
in
xchg
adc
sysenter
sbb
push
cltd
xor
rolb
inc
inc
rorb
xchg
dec
xchg
addr16
sub
mov
subps
ja
loope
lcall
push
mov
cs
repz
movsl
mov
iret
push
add
aaa
sti
scas
push
or
add
jns
shll
mov
mov
movsl
or
cld
mov
xchg
dec
popf
jg
out
push
or
movsb
orl
pop
sbb
mov
xchg
std
sub
xor
fwait
shrl
nop
mov
cld
stos
scas
xchg
mov
push
jle
sub
mov
stc
push
arpl
in
push
add
mov
inc
ficomps
popf
out
jge
adc
and
lods
push
xchg
ficompl
lods
jo
lock
sbb
fdiv
mov
out
enter
fs
aas
test
in
in
jp
inc
movsl
cmp
imul
xor
loop
push
jecxz
or
jb
push
and
pop
xchg
nop
mov
push
mov
dec
xor
lods
imul
cltd
pop
loop
ret
xchg
jmp
fists
sbbb
jae
mov
inc
and
fidivrl
ds
push
rcrl
cs
test
xchg
jns
out
mov
fiadds
adcl
ret
loop
loop
mov
fwait
adc
stc
testl
iret
enter
lock
shl
and
dec
or
fmull
divl
insl
bound
push
mov
mov
icebp
add
nop
pop
pop
outsl
test
rcll
stos
push
lods
ret
cmp
cmpsb
mov
addr16
test
ljmp
adc
push
stos
xchg
push
sti
es
mov
cmpsl
push
movsb
testb
int
mov
pop
or
ret
lret
aad
adc
cmpb
outsl
cs
jl
add
sub
pop
cmp
fdivr
push
add
daa
pop
adc
jb
jmp
pop
pop
push
sub
lods
mov
pop
or
sti
fwait
mov
add
fisttpl
sbb
xchg
add
and
jno
test
scas
mov
pop
xchg
cmp
nop
sbb
sbb
xor
mov
cmp
sub
xchg
xlat
xor
or
call
ret
add
jns
push
inc
je
cmc
repz
and
jo
mov
es
mov
stos
fcmovbe
jle
mov
xchg
jge
fbstp
sbb
and
jns
add
mov
pop
out
scas
sbb
and
cwtl
push
sub
sbb
inc
ficoml
dec
in
add
je
or
lret
fisubrl
insb
push
cld
ss
loopne
lcall
aas
hlt
decb
jae
dec
dec
push
dec
pop
cmpsl
js
cmp
idivb
pop
jns
out
and
jg
das
push
in
mov
loop
rep
data16
adc
push
pop
faddl
and
or
xchg
jp
jg
and
xor
push
negb
pushf
lods
cld
ja
cmp
inc
das
shr
mov
cmp
sbb
test
and
adc
and
cmc
test
dec
incb
adc
mov
jae
inc
and
iret
leave
xor
clc
sbb
or
sbb
xor
pop
or
adc
out
mov
jo
push
sti
xchg
adc
out
xchg
cmp
sbb
pop
xor
pop
jno
push
pushf
mov
fstpt
push
push
insb
iret
data16
and
insl
add
test
or
add
xorb
push
or
call
ja
inc
xchg
sbbl
stos
adc
jb
jno
pop
movsl
adc
xchg
shlb
inc
jecxz
xchg
imul
and
pusha
nop
push
call
out
out
add
mov
jbe
mov
cwtl
push
jae
fisubl
movsb
sbb
stos
int
gs
lahf
mov
stc
cmp
addb
xorb
icebp
mov
out
cs
stc
imul
sbb
lcall
es
shlb
jbe
inc
rorb
push
inc
cld
adc
jne
lods
nop
sbb
hlt
dec
adc
mov
icebp
test
xor
dec
jg
mov
xchg
into
or
jbe
rorl
sbb
loop
arpl
xchg
sub
cmp
adc
mov
jl
and
jbe
or
aas
mov
icebp
leave
inc
xlat
or
xchg
xor
jne
jae
sub
mov
outsl
scas
inc
dec
je
xchg
xor
lahf
jb
push
in
lret
rorl
out
popa
filds
enter
daa
in
lods
push
jns
lds
mov
and
mov
test
daa
mov
mov
les
lahf
pop
es
in
std
xor
dec
push
loope
movsl
mov
pusha
or
pusha
inc
cmpsl
mov
iret
ljmp
xchg
cmp
inc
ror
mov
sbb
xor
add
pop
jno
dec
loope
ficoms
jmp
add
pop
sbb
cmp
filds
test
lods
inc
inc
shrb
pop
fiadds
jo
in
test
or
jo
loopne
adc
add
jge
mov
mov
enter
js
lock
das
jle
cmp
mov
mov
rcll
push
mov
in
and
pop
mov
andb
rcrb
dec
add
ds
mov
adcl
cmpsl
lock
hlt
add
in
clc
adc
sbb
stc
insb
jl
je
push
sub
xchg
call
jle
push
mov
leave
add
cmpsb
in
out
jbe
jge
dec
sbb
lret
inc
enter
jmp
dec
ss
lds
mov
loope
mov
testl
sbb
jbe
mov
push
inc
cmc
cmpsl
or
subb
xchg
stos
inc
cmpsl
js
mov
notl
mov
dec
and
sub
lret
les
shl
negb
and
je
mov
push
xchg
dec
lods
sti
mov
mov
shll
sbb
push
or
pop
push
aam
in
inc
cmc
out
sub
movl
inc
scas
mov
adc
add
pop
ja
cltd
xchg
add
cld
stos
dec
insb
xchg
scas
cmc
lret
and
dec
cmp
ja
push
cmpsl
ret
insl
xchg
or
jp
lds
shl
pop
and
add
js
xchg
icebp
mov
repz
in
or
test
cmp
das
xchg
sub
xor
bts
xchg
and
xor
add
out
shrb
mov
cmpsl
neg
and
pop
xor
cli
mov
sub
push
jl
imul
fsubrs
dec
pop
jmp
pop
jb
mov
add
je
ds
lret
repnz
aad
mov
xchg
clc
in
sub
sub
xchg
testl
out
iret
fistpl
enter
pop
lahf
mov
loop
dec
adc
ss
out
fwait
dec
pop
loope
mov
adc
or
mov
stos
inc
xchg
test
aad
push
pop
out
ss
xchg
aam
je
insb
jb
cmp
mov
inc
pop
rcrb
cmp
add
push
adc
mov
movsl
cmp
pop
neg
push
cs
inc
std
andl
xchg
clc
or
xor
iret
push
add
in
call
push
push
xor
test
mov
into
stos
add
jecxz
sbb
lods
push
push
cs
fbld
jmp
popa
add
pop
lock
dec
mov
add
sub
les
or
out
cmpsl
pop
fs
cmpsb
sahf
fbstp
ret
sbb
jl
mov
je
push
in
scas
sbb
lock
les
imul
leave
xchg
call
mov
aas
nop
hlt
call
fs
inc
fsubs
push
sbb
xchg
insl
mov
and
icebp
xchg
jns
sub
enter
mov
stos
mov
cwtl
lret
push
fdivrs
out
or
xor
push
xchg
test
xchg
cvtps2pi
clc
into
mov
or
dec
inc
push
std
in
out
pop
out
or
dec
cmpsb
sub
dec
sub
or
add
cmp
jae
pop
and
dec
xchg
stos
in
gs
or
mov
mov
and
lock
pmulhuw
dec
mov
shrl
mov
and
push
mov
mov
xor
dec
inc
test
ja
xlat
and
inc
sbb
inc
arpl
jle
out
push
movsb
popf
sub
icebp
xor
sub
shrl
je
loop
or
stos
sub
and
push
mov
xchg
push
sub
sbb
cmp
add
jmp
or
stos
daa
aaa
aaa
movsb
mov
rolb
sbb
or
decl
daa
and
pop
inc
pop
jae
xor
fldt
dec
pushf
dec
pop
xchg
jb
dec
pop
or
pop
mov
int
jae
fidivs
jne
cld
shlb
in
dec
dec
test
jo
jecxz
insl
mov
jno
lcall
das
and
dec
dec
loopne
push
sub
mov
mov
dec
cmc
mov
fwait
clc
push
cmpsb
mov
jl
stos
mov
xor
dec
xlat
inc
pop
fidivl
rorl
pop
or
lods
pusha
lds
dec
pop
vdivss
adc
mov
cmpsl
andb
jnp
test
jae
inc
loopne
push
push
inc
fwait
sbbb
inc
iret
and
inc
dec
xlat
stc
stc
mov
mov
lods
repnz
stos
jmp
jmp
adc
push
sub
push
lret
fcmovbe
mov
push
iret
jne
adc
jnp
fisubl
andb
jl
daa
cs
fdiv
cmpb
aas
ret
pop
hlt
lcall
ljmp
rcrl
add
lret
cmp
popf
xchg
add
cmp
hlt
sub
shrb
xchg
push
incl
test
mov
das
xchg
sub
xchg
inc
pop
dec
xchg
dec
jbe
cmp
aad
popf
orb
call
or
aad
rol
pushf
mov
cwtl
int
mov
xor
sti
cmp
fstpt
push
mov
fsubl
loop
mov
and
popf
cmp
mull
mov
xor
and
shr
sub
xchg
xchg
dec
test
add
mov
faddl
cwtl
sti
shlb
xlat
cli
push
outsb
pop
idivl
sbb
rcrb
out
stos
ljmp
xchg
call
mov
mov
jne
or
movsb
aam
lods
stc
jo
inc
test
nop
fidivl
iret
enter
sub
fwait
pop
dec
mov
jnp
fs
fwait
daa
outsl
xchg
je
dec
lods
outsb
jb
mov
adc
mov
in
lret
daa
into
mov
shll
lret
movsl
push
popf
push
out
mov
fsubs
cmpsb
bound
cs
mov
movsl
jno
in
cwtl
fidivrs
push
pop
inc
jecxz
jno
cs
xchg
mov
scas
inc
cli
jg
mov
sbb
jo
pop
adc
sbb
jecxz
cmc
adc
cltd
sub
mov
fstps
mov
push
mov
cmp
xchg
inc
xchg
jne
inc
mov
mov
sbb
push
sub
into
mov
cmp
xor
and
dec
ss
xchg
test
cmp
add
push
cmp
push
fwait
test
inc
and
push
and
mov
das
dec
jo
push
sub
ljmp
out
pop
cmp
cld
and
pop
mov
jmp
outsl
mov
test
mov
sbb
outsb
repz
add
push
mov
push
and
jnp
xor
lds
jo
sbb
sbb
clc
stos
leave
sub
cmp
shll
pop
xor
lret
negb
mov
dec
adc
xchg
ss
xchg
aad
cmc
cmpsb
jne
sbb
lods
loopne
pop
and
in
cmpxchg8b
adc
cmp
ret
pop
data16
je
shrl
das
xchg
sar
into
pop
mov
add
cmp
adc
add
loope
aas
loope
xchg
and
icebp
xchg
sub
mov
sahf
jg
lods
aam
nop
popa
dec
insl
sub
lret
mov
or
mov
js
aam
inc
in
xor
cmp
pop
insl
jnp
scas
xor
rcrl
adcb
stos
cmp
pop
lds
and
xlat
sbb
pushf
cmc
add
jecxz
bound
call
push
jb
cmp
push
adc
inc
or
fsubr
push
xchg
loopne
xchg
inc
fsub
add
sub
cld
mov
repnz
out
out
push
inc
sbb
adc
bound
mov
mov
pop
adc
mov
sti
shll
pusha
dec
popa
xor
rol
jbe
in
ret
imul
leave
xor
outsl
xchg
push
xchg
sub
bound
loop
cwtl
test
dec
mov
jo
mov
push
xchg
or
lea
je
mov
cli
daa
testl
pop
repnz
push
pop
cmp
fcomps
jbe
ds
mov
xchg
mov
int
in
sbbl
cmp
idivl
mov
sub
dec
repnz
ja
and
xchg
add
add
mov
clc
lcall
sbb
sub
jno
sbb
testb
decb
xchg
lds
jmp
test
or
xchg
stc
jno
outsb
xor
cmpsb
mov
shll
inc
loop
sti
enter
stos
jg
cmp
mov
movsb
sti
popa
jle
and
push
ljmp
icebp
sbb
push
add
arpl
jns
adcb
loop
push
dec
in
mov
ss
or
pop
push
dec
jmp
mov
adc
mov
mov
aaa
jg
or
dec
lds
xchg
imul
out
aas
in
push
xlat
sub
dec
loop
mov
inc
rcr
jmp
pop
fnstcw
out
pop
jb
shrb
pop
loopne
adc
out
mov
cwtl
xorl
sub
mov
sbb
xlat
mov
mov
mov
mov
ja
and
mov
repnz
jg
mov
scas
xchg
out
and
mov
stos
enter
inc
pop
jecxz
xchg
mov
add
push
push
std
sahf
push
fwait
std
jo
scas
adc
les
pushf
or
and
lea
insb
cli
xchg
sbb
xor
scas
std
jmp
add
aaa
push
scas
jge
cmc
idivl
ss
xor
sub
inc
sbb
cld
data16
mov
clc
les
sbb
pop
outsb
push
jbe
adc
hlt
data16
jle,pt
lock
pop
xor
cmpsb
lods
lds
mov
and
push
imul
sbb
mov
jg
mov
testl
mov
and
lret
in
pop
in
dec
inc
xchg
icebp
dec
push
cmp
sbb
and
xlat
popa
xchg
repnz
lock
fwait
lret
ss
mov
jno
popa
push
js
movb
push
mov
repz
or
in
scas
stos
in
lahf
inc
insl
sbb
ljmp
ja
pushf
xor
daa
in
seta
adc
dec
cwtl
add
stos
outsl
outsb
mov
inc
pop
inc
push
leave
gs
addr16
gs
inc
data16
movsb
or
adcb
imul
aaa
aam
adc
subb
xchg
repz
nopl
loope
push
js
mov
adc
test
mov
mov
dec
adc
dec
clc
stc
jne
cmp
push
sbb
add
jnp
fwait
clc
mov
lcall
pop
ja
sub
sbb
ja
and
inc
inc
pop
aad
and
push
divb
mov
mov
call
leave
sub
dec
xlat
jg
xlat
aad
dec
in
out
loop
jns
mov
lock
repnz
mov
int
ljmp
jmp
loop
imul
daa
xchg
les
vsqrtss
sbb
mov
sbb
cmp
out
repz
sbb
scas
push
or
mov
imul
sub
pop
lcall
ljmp
shlb
into
sbb
ficoms
test
mov
pushf
push
insl
stc
fdivs
sahf
shlb
and
add
push
icebp
cmp
xor
mov
insl
push
std
adc
popa
xchg
jae
rorl
lock
add
fidivl
sbb
clc
nop
lock
xor
lret
aaa
add
sub
js
aam
fildl
push
mov
fstps
mov
add
sub
aad
pop
inc
testl
sub
cmp
es
xor
mov
loop
adc
iret
dec
mov
lods
aaa
fstpl
leave
sub
pusha
sbb
ja
lahf
cmpsb
es
repz
jl
mov
std
xchg
sub
add
mov
in
shlb
repnz
mov
shl
mov
inc
xor
pop
pop
scas
shlb
sub
jle
or
dec
add
scas
mov
lods
cmp
inc
push
lods
jb
inc
in
sbb
jae
dec
repz
adc
cmpsl
mov
popa
in
arpl
sbbb
mov
fnop
outsl
fmulp
inc
inc
and
jbe
aas
neg
test
fwait
insl
sub
pop
xor
lahf
ds
shrb
xchg
sbb
cmp
jge
or
fstl
les
call
mov
imul
icebp
xor
and
dec
pop
jb
xchg
push
mul
dec
scas
mov
cmp
fcomi
mov
jno
in
test
in
xchg
fnsave
aaa
loop
xchg
aam
inc
dec
fldenv
sbb
xchg
je
or
mov
cwtl
sbb
pop
int3
pop
pop
add
insl
mov
gs
in
mov
mov
and
ret
fwait
stos
xchg
pop
jg
insl
sub
pop
adc
pop
adc
mov
dec
popf
enter
int3
iret
movsl
icebp
or
mov
mov
cmp
lea
mov
inc
jp
xchg
nop
dec
cmp
jb
cmp
pop
or
in
cmp
rolb
pop
aas
lds
pop
inc
sbb
push
sbb
inc
loopne
pop
into
fistpl
xorb
scas
inc
clc
ljmp
xorb
in
sbb
ja,pn
arpl
jmp
addr16
outsb
fldl
mov
cs
mov
dec
or
stos
sub
in
bound
imul
mov
outsl
adc
and
mov
cmp
mov
add
shl
jo
cmp
sub
jecxz
aad
data16
mov
xchg
jno
xchg
sub
es
xchg
test
mov
inc
arpl
push
sbb
int
or
jp
cmp
inc
loope
and
push
add
aas
call
faddl
out
pop
push
insl
mov
das
jb
sbb
fistps
shrb
sbb
repnz
push
out
insl
pop
out
pusha
pop
iret
xchg
insl
out
pop
pop
cmc
dec
jb
cli
popa
sbb
arpl
pop
lock
jmp
stc
ficompl
push
out
cmc
dec
stos
inc
aas
imul
pop
mov
xor
jbe
dec
loop
ljmp
xchg
xchg
jg
dec
inc
fdivrl
arpl
into
push
sbb
mov
nop
daa
dec
mov
jne
scas
out
test
add
mov
inc
fsubrp
fdivrs
cmp
lcall
mov
sub
fisubrs
pusha
cmp
js
testb
in
testl
fxch
es
mov
xchg
cs
cmc
sbb
dec
dec
je
cmp
daa
mov
lock
xlat
sub
mov
orb
bound
mov
es
jge
out
add
out
pop
sbb
in
pusha
cwtl
cmc
stos
fs
jns
push
aas
sub
cmpsl
pop
cmc
push
xlat
mov
jmp
rcll
lods
cmpsl
bound
les
lea
jp
and
cmpb
aaa
push
shll
inc
dec
rolb
aad
ret
sbb
ret
nop
or
add
mov
or
xchg
aaa
out
cmp
sbb
ret
adc
mov
ret
outsl
sbb
push
push
jo
ret
jge
cmpsl
hlt
and
jp
test
jae
mov
cmp
pop
test
xchg
jns
adc
xor
rclb
sbb
dec
adc
in
jecxz
mov
inc
pop
push
popa
daa
ljmp
dec
dec
int3
adc
sbb
inc
mov
test
xlat
inc
mov
mov
fsubrl
fbstp
je
popf
test
std
cmp
push
cli
iret
movsb
mov
mov
mov
cmp
sbb
cwtl
xor
dec
and
stos
out
pop
cmc
mov
cwtl
icebp
xchg
xchg
xor
fcmovnbe
test
mov
push
es
lret
inc
add
roll
and
xor
mov
and
leave
dec
or
scas
sub
pop
push
ficoml
cltd
sub
mov
push
xor
andb
push
lret
into
inc
in
out
imul
fdivrl
mov
je
sbb
mov
pop
lock
fwait
xor
test
out
cmp
shrb
test
add
mov
dec
psubd
bound
xchg
lock
movsb
dec
or
sbb
dec
adc
pop
mov
jmp
pop
adc
push
int
add
fisubs
jmp
rolb
out
aas
inc
add
xchg
mov
rclb
cmpl
xchg
movsl
cmc
jae
pusha
adcb
into
xchg
sahf
xchg
sbb
jnp
inc
gs
popf
and
insb
or
push
cmc
sub
sbb
mov
pusha
popf
fptan
arpl
sub
jmp
ds
lods
adcl
btc
fdivs
add
mov
sub
out
dec
sbb
cmp
js
or
pusha
cmp
pop
sahf
xor
push
lea
pop
push
add
dec
cmpsl
ret
dec
lods
ss
inc
mov
cmpsb
movsb
daa
mov
cmp
pusha
pop
lcall
popa
fldt
frstor
jp
aaa
and
and
andb
mov
mov
jmp
sti
push
xlat
xor
iret
arpl
or
popa
xor
shrb
lret
fs
xchg
pop
cmpsb
add
xor
xor
outsl
add
out
shr
outsl
mov
daa
lret
adc
mov
mov
lock
pop
call
lods
xchg
rorl
push
stos
xchg
stos
mov
push
and
ret
lds
mov
insb
add
jge
xchg
jle
mov
hlt
adc
loope
scas
inc
mov
xlat
mov
callw
xor
shll
sbb
outsb
sbb
sti
mov
or
push
shrb
lret
adc
rcr
jb
add
mov
inc
mov
in
push
or
xor
xchg
pop
sbb
adc
pop
mov
repz
fnstenv
div
icebp
xchg
js
cwtl
nop
dec
push
or
push
jbe
add
sbb
inc
ret
jg
pop
ss
dec
std
jmp
fldcw
loop
jo
lret
subb
dec
out
push
push
insl
jb
sbb
push
xchg
lahf
push
push
xchg
pop
leave
jp
mov
push
pusha
shlb
inc
adc
popf
pop
test
lock
insb
cli
arpl
shrl
loop
jge
addb
xchg
in
jb
in
mov
in
adcl
mov
jae
jge
inc
arpl
lods
mov
xorl
push
push
or
push
sub
lahf
push
jae
add
rcll
inc
mov
es
cmp
adc
mov
mov
cwtl
negb
hlt
bswap
inc
lcall
mov
xor
cwtl
test
xchg
cmc
xchg
es
push
push
pop
sub
fs
ss
bound
test
lock
adc
adc
jle
jo
outsl
mov
notl
mov
push
data16
xchg
push
mov
or
push
scas
fidivrs
mov
popf
in
cmc
jl
shl
ja
repz
adc
popa
fsubrl
and
push
jle
pop
lock
sbb
ret
shrb
sbb
insl
ja
jbe
xchg
inc
into
andb
leave
xor
std
fidivrl
jge
adc
cld
inc
cmp
push
jb
adc
aaa
cli
mov
add
dec
fwait
pusha
push
mov
ljmp
js
inc
mov
lods
pop
mov
arpl
icebp
cwtl
sub
mov
out
out
and
pop
dec
pop
ret
inc
data16
pop
push
out
lock
std
adc
push
mov
push
fsubrs
pop
ja
adc
sub
adc
sbb
fwait
sub
out
xchg
mov
adc
or
stc
sbb
std
andl
jnp
stos
push
xchg
mov
mov
js
jno
movsb
and
jecxz
mov
mov
mov
divl
sarl
inc
mov
das
jmp
or
decb
lock
inc
and
stc
mov
xchg
mov
inc
outsb
sar
jle
or
insl
adc
test
mov
lods
inc
fs
push
mov
adc
lds
jecxz
xchg
xor
jmp
jg
and
or
or
or
mov
push
sub
dec
or
sub
das
add
dec
rcl
add
pop
ret
scas
cmp
pop
ds
call
dec
cmp
mov
push
sahf
pop
cmpsb
mov
dec
ja
jnp
test
inc
lods
in
push
cwtl
sub
shrb
out
mov
mov
lds
mov
add
xor
or
pop
mov
push
in
test
and
movsl
aaa
xlat
mov
pop
nop
fwait
insl
dec
mov
xchg
push
cld
aam
insb
sbb
daa
inc
adc
and
add
sub
fisubs
push
rcrl
addb
stc
jmp
sbb
mov
fs
rcrl
addr16
sti
and
sbb
sbb
dec
cmpsl
cmp
jbe
add
xor
into
ds
das
andb
test
rcll
dec
or
imul
dec
into
pop
and
dec
dec
cltd
test
mov
int3
dec
cmc
imul
push
push
lret
jb
cld
mov
xor
shll
popf
stc
jge
mov
dec
scas
stc
mov
xor
pop
enter
xchg
dec
push
inc
dec
pop
cltd
xchg
aad
hlt
xor
sbb
fdivl
lcall
subl
add
adc
mov
in
fwait
pop
aaa
mov
jne
push
adc
sahf
enter
es
neg
mov
jbe
hlt
or
movsl
mov
leave
add
outsb
imul
out
mov
sahf
pop
ja
jne
in
xchg
jo
cmp
insl
iret
ljmp
or
mov
pop
lcall
rcrl
pop
popa
xor
xchg
dec
ss
xchg
outsl
mov
pop
cmpl
mov
repz
gs
fs
sub
mov
mov
in
xchg
xor
filds
stc
mov
shrl
push
insb
mov
orb
xor
sbb
insl
xor
inc
cmp
ljmp
call
fildll
aaa
push
xchg
outsl
sbb
shl
int3
imul
push
jecxz
outsl
or
shr
mov
insb
daa
or
stc
pop
in
pop
fidivrl
je
incb
mov
scas
sahf
xchg
sbb
les
push
push
push
xchg
jecxz
dec
dec
xchg
push
fwait
sti
popf
adc
mov
fld
fildl
dec
aam
adc
mov
cmp
push
inc
sahf
push
addl
jne
mov
cmpsl
hlt
mov
out
inc
cmp
and
out
pusha
int3
popf
xor
es
jnp
sub
stos
pushl
loopne
cli
push
repz
inc
int
push
test
mov
add
dec
lahf
mov
out
out
mov
jmp
jp
mov
cmp
jno
stos
lret
ljmp
mov
inc
icebp
xchg
xchg
pop
push
shrl
adc
cmp
fcom
bound
fsubl
ljmp
mov
ror
sub
pop
mov
mov
aas
push
lods
push
mov
mov
inc
pop
bound
or
lods
sbb
movsb
into
or
dec
push
xlat
sub
les
addb
test
xor
xchg
xlat
xor
rclb
outsb
scas
lock
sahf
add
mov
jno
arpl
push
or
sbb
js
movsb
repnz
push
movsl
xchg
stos
push
mov
cli
icebp
hlt
mov
xchg
push
in
jl
inc
dec
sub
fdiv
out
cmp
adc
xor
xlat
push
mov
fs
leave
push
and
sbb
jne
xrelease
mov
pop
mov
fwait
cld
push
xchg
lods
inc
sbbb
jb
adc
inc
jg
in
pop
je
lock
outsb
scas
stos
inc
dec
sbb
mov
pop
pusha
in
rol
adc
scas
jne
sub
repz
or
stos
xchg
lods
sub
hlt
filds
mov
inc
or
pop
jbe
or
inc
mov
loope
enter
sub
in
repnz
imul
lcall
dec
push
imul
cmp
ljmp
sbbb
lcall
jno
adc
out
xchg
cs
lock
in
pop
shlb
pop
jae
push
movsl
jp
stc
ret
out
and
xchg
fs
adc
roll
adc
jecxz
ss
mov
sub
jmp
jo
pop
ss
lea
jo
mov
and
push
in
xchg
divb
rclb
xchg
xorl
divb
shlb
mov
sahf
sbb
ljmp
jno
mov
cmpsb
scas
push
in
shr
movsb
enter
mov
sbb
call
push
or
xor
imul
adc
xor
fcomip
mov
scas
jl
ja
push
adc
mov
push
cmc
pop
cmp
ds
or
cmp
sahf
cmpsl
add
mov
dec
arpl
repz
push
push
xor
adc
sbb
test
out
mov
cmp
in
xchg
add
jne
sub
orb
and
mov
pop
sbb
cwtl
cmp
mov
out
inc
in
mov
icebp
sbbb
push
push
jmp
mov
jo
xchg
insb
mov
and
dec
test
jmp
or
push
nop
and
inc
xor
fs
dec
lret
mov
cmp
adc
or
mov
cmc
dec
bound
rcrb
xchg
adc
shll
mov
sti
in
mov
out
or
lcall
ja
cld
xor
inc
xchg
and
jnp
jne
fisubs
ret
lds
loope
insb
push
fists
out
mov
add
iret
fistl
out
cmp
rclb
mov
mov
aam
ficoms
test
xor
cmp
test
cli
imul
test
inc
testl
sbb
pop
sbb
pusha
jb
inc
int3
lret
push
mov
jp
ds
mov
jae
jns
fs
and
sub
cmp
sbb
jns
leave
rcl
out
je
sahf
mov
sbb
mov
scas
lock
dec
and
dec
pop
and
mov
mov
out
popf
jo
add
test
inc
sti
inc
push
fcom
incb
mov
lds
jg
sub
xchg
and
mov
jnp
call
mov
outsl
imul
cmp
or
mov
cmp
push
sub
pop
add
inc
jne
xchg
lahf
sbb
add
mov
jb
adc
xor
jb
ss
xlat
mov
add
push
inc
mov
fsubrl
mov
inc
pop
clc
movsl
xchg
xor
sub
mov
subl
data16
xor
shll
fwait
int
fcompl
das
mov
frstor
shlb
adc
pop
lret
into
xor
mov
push
je
rol
push
jae
add
std
dec
lcall
call
dec
and
and
mov
jne
jbe
psubsw
push
jle
test
jne
inc
cmpsl
fldcw
decb
pusha
adc
pop
repz
push
add
and
xchg
shll
and
cmp
sbb
lock
sub
int
mov
inc
test
out
push
lods
aad
fsubl
insb
sub
xor
lsl
sbb
out
jmp
cmc
adc
jg
push
push
xchg
sub
mov
mov
in
dec
push
mov
mov
shrw
add
out
xchg
shr
push
push
mov
hlt
jle
data16
outsb
sbbl
sub
dec
in
jmp
push
dec
jo
hlt
xor
mov
int3
add
push
xchg
mov
and
jae
and
inc
mov
ror
mov
xor
pop
mov
stc
dec
scas
xlat
outsb
fdivrp
fs
mov
adc
lcall
test
pop
in
jbe
sbb
inc
push
inc
jne
jl
outsl
xor
fbstp
jbe
mov
sti
dec
ret
arpl
xor
mov
adc
mov
adc
and
xchg
inc
push
mov
push
or
inc
lods
daa
cmp
mov
adc
pop
ret
sbb
jnp
bound
cltd
les
sbb
adc
outsb
ret
pop
xor
pop
mov
aas
cmp
cmp
dec
sbb
push
push
rcrl
xor
movsl
int
adc
push
jmp
xchg
addb
mov
sahf
cmp
and
adc
and
push
xchg
fiaddl
insb
test
pop
addr16
loopne
outsb
lods
lretw
add
mov
push
sar
sbb
adc
push
pushf
imul
sub
pop
pop
jae
xchg
push
sub
addr16
mov
mov
and
int3
and
mov
dec
inc
mov
aad
mov
je
adc
and
and
mov
lods
push
imul
int3
cmp
lea
fdivs
daa
mov
popa
test
in
dec
loop
lods
hlt
xchg
pop
pop
imul
add
call
outsb
and
test
dec
cmp
xor
mov
mov
cmp
fdivrl
aas
cwtl
mov
addr16
xchg
jne
pop
sahf
jno
test
enter
pop
ljmp
popf
pop
inc
fcoml
fsubrp
into
les
push
data16
mov
sbb
xor
insb
roll
push
clc
in
test
js
jl
pusha
repz
enter
cwtl
iret
xchg
inc
test
inc
xchg
out
push
in
jp
repnz
iret
or
jnp
data16
add
dec
pop
mov
dec
xchg
pop
dec
sbb
add
rorb
sub
pushf
stc
push
cmp
stos
fimull
mov
sub
xlat
pop
fisubl
mov
je
loope
mov
sub
cmp
cwtl
loope
stos
pop
aad
inc
in
mov
outsl
or
lret
outsl
fcmove
cmp
mov
fsts
std
fstpt
and
scas
adc
sub
repnz
subl
adc
mov
shr
push
pop
test
adc
cs
and
loope
mov
ds
orl
sbb
aaa
pop
mov
daa
imul
push
push
loope
sbb
and
adc
inc
imulb
push
sub
mov
lods
sub
push
cli
mov
push
push
stos
sbb
adc
jae
daa
loope
add
fsubrp
insb
pop
cmp
imul
pop
test
fistl
mov
ds
iret
push
mov
xchg
push
xchg
add
xchg
sub
jns
jbe
mov
cltd
out
push
xor
xlat
and
out
arpl
loope
adc
sbb
adc
mov
xchg
scas
shr
sub
fucomp
dec
ret
movsb
mov
mov
sub
test
cmp
or
cli
mov
sahf
push
loop
das
or
aam
jno
sti
dec
idiv
in
sti
xchg
incl
sahf
or
inc
mov
mov
popa
pop
das
fimull
mov
sub
cltd
mov
addr16
test
push
jno
mov
sbb
adc
and
adc
or
je
and
or
jo
jns
lock
pop
rcll
jo
xchg
dec
aad
jecxz
movsb
lcall
sub
bound
mov
fwait
mov
int
std
xchg
jmp
jl
cmpsl
jp
fnsave
mov
jnp
xor
int3
xor
add
lahf
test
aas
push
pop
pop
imul
add
les
mov
loope
imul
mov
push
mov
hlt
inc
loope
and
jle
ljmp
push
adc
cmp
pop
jb
imul
mov
cmpsl
jle
loop
adc
insb
or
scas
and
and
int3
jge
out
lods
dec
mov
imul
add
jnp
xor
mov
pushf
outsb
push
stc
popf
fisubrs
sti
jbe
js
xor
inc
int
movl
ret
push
add
pop
out
cmp
aaa
into
mov
pop
push
inc
cmp
imul
pop
aaa
sub
add
in
js
cmp
pop
xchg
jbe
ret
inc
inc
inc
mov
cmp
or
inc
fxch
call
pusha
lret
test
dec
test
lret
rol
data16
into
pop
push
sub
cmp
mov
in
je
enter
push
jmp
jno
mov
ss
lods
cmp
mov
and
lret
push
or
pop
stc
popf
cmp
cmp
in
stc
adc
push
aaa
mov
mov
xor
inc
push
shll
ret
inc
add
inc
sti
rcrl
cltd
rorl
or
adc
idivb
loopne
pop
repz
es
addb
mov
je
mov
nop
test
jmp
and
test
pop
into
mov
xchg
sub
lods
mov
fisubl
in
pop
dec
adc
orb
push
ljmp
call
jns
out
xchg
xchg
jns
repz
rclb
fcomps
repnz
hlt
mov
fists
push
sub
sbb
or
lods
pushf
es
push
mov
rol
mov
xchg
xor
add
xor
mov
stc
sub
cmc
adc
adc
dec
add
add
dec
shrb
sbbb
sbb
les
js
sbb
sub
sbb
fisttpl
mov
mov
in
mov
mov
arpl
sub
ss
dec
dec
cli
adc
dec
add
and
pop
push
push
insl
leave
xor
adc
je
xchg
xor
shrl
or
fs
fs
cmp
test
in
inc
jae
loope
push
icebp
adc
insl
add
mov
enter
lret
imull
lods
subl
icebp
dec
cmp
es
cmpsl
stc
aam
push
hlt
in
jb
stc
push
inc
cmp
icebp
sti
inc
and
sti
rorl
das
cli
dec
mov
out
ret
in
sbb
fs
adc
cmp
pop
icebp
dec
xlat
aas
sti
outsl
cmp
mov
mov
cmp
sarl
out
cmp
fucomp
aad
add
test
js
mov
xor
lods
sbb
mov
and
or
sbb
or
add
aad
add
imul
push
fs
out
stos
cmp
fcomi
out
pop
push
pop
mov
sbb
ret
jnp
push
sub
add
xchg
in
test
sub
lock
aaa
push
sub
mov
sub
mov
xchg
pop
jg
and
sahf
int3
pop
push
inc
xchg
mov
stos
rcrb
sub
ss
popa
shlb
pusha
pop
inc
sbb
jnp
shr
popf
or
loopne
loope
sub
xor
mov
fbstp
or
iret
es
int3
fdivp
sbb
xor
or
inc
fistpl
das
mov
xchg
fwait
mov
sbb
push
sub
mov
mov
outsb
outsl
das
inc
mov
add
movsb
repnz
jmp
fwait
lret
xchg
std
mov
xor
or
fmulp
out
push
jg
ror
bound
popa
adc
icebp
imul
cmpsl
push
mov
jle
xor
sub
xchg
pop
jmp
es
or
testb
rcll
in
in
mov
outsb
jle
push
pop
mov
dec
ret
movsb
in
std
fsubrl
lds
hlt
rol
cmp
push
push
mov
mov
cli
or
sub
dec
pop
repz
push
push
loopne
jp
xchg
inc
test
int
mov
xchg
jecxz
or
daa
loopne
test
inc
xlat
scas
xchg
mov
xchg
pop
sbb
dec
gs
insb
add
test
loopne
stos
inc
mov
test
mov
inc
outsb
dec
cmpsl
mov
arpl
dec
cmpsb
cmp
inc
and
pop
push
xchg
test
jg
enter
xchg
or
cmc
mov
out
ljmp
popa
shrl
rcr
icebp
addr16
xor
mov
sbb
mov
dec
mov
mov
jae
inc
mov
aam
pushf
xchg
mov
rdpmc
aam
lock
or
xchg
xor
push
pusha
idivl
fdivrl
mov
aam
icebp
mov
push
jecxz
pop
push
cmpsl
mov
cmc
inc
xchg
add
das
fsubrp
jnp
lret
cs
xchg
mov
movsb
lea
push
mov
sub
mov
dec
in
mov
sarl
push
adc
sub
test
dec
sub
or
push
nop
mov
jmp
data16
aas
iret
push
add
xchg
stos
jb
mov
fsubrp
clc
dec
adc
nop
std
das
cmp
aad
push
mov
or
les
loopne
pop
es
xchg
xchg
xchg
add
cmpsl
adc
xor
sbbb
push
js
lret
rcr
jmp
and
jno
sbb
test
pushf
scas
mov
dec
hlt
pop
push
push
mov
out
jb
in
xchg
jmp
movsl
divl
sub
les
repz
sbb
push
push
dec
push
das
addr16
sbb
and
pop
bound
dec
ret
js
xchg
sub
xor
xor
out
xor
loop
sub
lea
pusha
icebp
iret
adc
in
push
dec
push
popa
mov
int3
dec
mov
jle
ljmp
fdivl
mov
leave
pop
in
pusha
jne
js
pop
pop
aam
mov
push
fisttps
and
and
push
xchg
cmp
adc
int
sub
cmp
adc
cmc
cmp
icebp
push
jmp
cltd
arpl
js
shl
inc
jge
cmp
ret
xchg
outsb
jmp
loope
xchg
dec
pop
stc
cmpsb
dec
fldt
sub
cmpb
xlat
mov
mov
jne
push
mov
mov
mov
or
insl
loopne
imul
or
lds
sub
mov
stc
sti
in
stos
inc
inc
inc
call
cmpsb
sbb
data16
mov
fsubrs
dec
call
loopne
repz
push
lcall
stos
iret
and
fisttpll
add
ja
bound
in
sub
insl
xor
sbb
dec
sbb
aad
rorl
out
push
fbld
dec
ja
fs
pusha
out
xchg
cmp
cmp
mov
ret
outsb
mov
lcall
loopne
call
pop
aas
addr16
hlt
cmp
xor
sbb
test
roll
das
jae
in
inc
sub
pcmpeqb
jle
pop
out
pop
lret
and
jne
pop
lret
cs
lods
inc
adc
push
jge
pushf
aam
xchg
sbb
das
pushf
jmp
dec
mov
cmpb
pushf
out
sub
xchg
mov
rcrl
adc
sub
jnp
sarl
push
pop
sqrtps
loopne
rorb
sbb
stc
push
rol
xor
test
repz
cltd
pop
add
nop
add
inc
add
psrlq
cmpsl
out
push
loope
into
xchg
decl
mov
jo
stos
xchg
fucomi
repnz
jne
push
mov
mov
addr16
and
or
pop
mov
jp
clc
or
xchg
mov
mov
ljmp
imul
ficomps
xor
ret
inc
repz
cmp
imull
ret
sub
les
mov
adc
jmp
jge
lock
rcrb
cmp
sbb
or
jb
je
fisubs
imul
inc
push
in
mov
jns
daa
xor
mov
test
int3
fs
in
adc
pusha
jmp
inc
ljmp
mov
sahf
bound
daa
xchg
mov
mov
fsubp
outsb
das
inc
and
mov
mov
in
mov
xchg
out
es
fists
push
and
loop
pusha
lret
push
inc
lret
pop
iret
or
jg
out
lahf
adc
cmp
pop
dec
flds
sbb
xor
cmpsl
mov
outsb
sti
mov
push
xor
aaa
and
lods
and
sete
and
cmp
aam
fistl
inc
push
push
cltd
fs
mov
add
movsl
jno
xchg
in
loope
or
sub
jae
mov
mov
or
mov
sbb
subb
sbb
adc
or
cmp
cmp
jge
xchg
dec
lock
xchg
sbb
jnp
cmp
inc
xchg
add
mov
mov
loopne
add
dec
gs
sbb
loop
or
xor
pop
xchg
and
in
scas
and
adc
mov
out
mov
fwait
jne
inc
jbe
sbb
ds
repnz
mov
andl
mov
push
aas
add
inc
scas
popa
dec
iret
out
scas
adcb
pop
jae
jo
movsb
stos
stos
pushf
das
lcall
sub
or
cltd
xor
imul
stc
ds
lods
xchg
out
and
lods
andb
psadbw
jp
arpl
cmp
push
int3
xor
sbb
test
cmp
pop
mov
mov
fdiv
push
mov
mov
mov
leave
adc
fildll
fs
andb
loop
outsl
sbb
imul
mov
mov
lods
jmp
arpl
and
loope
lahf
add
inc
jl
in
cld
jnp
lret
add
adc
arpl
push
bound
insb
inc
fimull
xchg
xchg
fsubrl
or
loope
sub
or
ja
mov
jp
loop
out
nop
or
orps
fsubrs
or
cld
push
int3
adc
mov
cld
mov
jg
fstpl
xchg
sbb
js
mov
jg
clc
mov
cmp
loop
or
data16
cltd
add
aaa
aaa
rcr
jo
fstpt
push
lret
mov
push
add
adc
repnz
xor
dec
sub
mov
jne
and
gs
test
jle
adc
push
mov
xor
xchg
imul
loop
xchg
jmp
sbb
cld
shll
cmp
rcl
es
incl
popf
pop
dec
pop
mov
psadbw
movsb
inc
mov
sbb
inc
dec
adc
jl
mov
mov
adc
cltd
xchg
xchg
dec
mov
out
pop
push
les
push
or
movsb
cmpsb
icebp
push
inc
testl
add
loope
fisttpll
repz
repnz
popl
outsl
arpl
repnz
pop
lds
jecxz
fisubrl
push
jle
add
mov
mov
inc
jge
fmulp
dec
jp
insl
in
lahf
push
insl
not
mov
rorl
in
in
pop
lret
pop
loop
add
shrb
fldl
add
in
ficoms
mov
fldpi
imul
xor
repnz
ja
jge,pn
pusha
mov
shlb
xor
xchg
cmp
add
and
inc
xor
scas
out
mov
fistpll
fistpl
xor
mov
cld
cmp
fstp
dec
pop
ud0
cmp
adc
dec
and
stc
ret
inc
fcmovne
mov
sbb
add
pop
cmp
inc
jo
cmp
sub
mov
shlb
lahf
adc
adc
in
int3
scas
ja
cmpb
xchg
xchg
dec
std
shrl
out
push
call
mov
dec
push
lods
adc
jmp
xchg
out
pop
adc
push
repz
sahf
int
inc
mov
test
mov
test
push
imul
cmpsl
mov
xor
jnp
lods
jo
pushf
push
and
in
fstpt
lahf
fwait
push
mov
sbb
or
inc
into
jo
fnstenv
adc
stc
dec
dec
hlt
jae
lock
lds
or
jnp
push
jecxz
mov
fistl
xchg
add
xchg
sub
fs
out
push
fxch
push
xor
push
mov
ljmp
scas
or
in
or
lcall
mov
lds
leave
pop
adc
js
lods
rolb
popf
jbe
lret
sbb
or
in
add
inc
mov
fiadds
dec
rcll
dec
ljmp
sar
fsubrs
mov
or
in
mov
btr
lods
scas
dec
cmp
nop
mov
xchg
xor
pop
xchg
outsl
pop
ds
cmc
push
cs
dec
inc
pop
scas
and
mov
mov
ljmp
aad
mov
push
jmp
pop
mov
adc
loope
in
aaa
outsl
pop
dec
cmp
xchg
lcall
mov
repnz
out
aaa
stos
inc
mov
dec
adc
je,pt
lea
and
pop
dec
loopne
addl
out
bound
dec
aam
mov
std
sahf
popa
ret
or
lock
jo
add
sbb
mov
movsl
mov
fnstenv
sbb
sarb
in
dec
jp
jnp
inc
sub
mov
mov
in
dec
arpl
or
cmp
hlt
cmp
push
test
jmp
roll
inc
sub
jae
mov
lock
inc
push
shrb
xchg
push
mov
out
add
scas
mov
test
test
adc
mov
or
and
pop
insl
lahf
cmp
loope
shlb
mov
jl
xchg
shrb
js
leave
sbb
sbb
imul
std
daa
ss
gs
cli
mov
mov
cmp
sarb
shll
jns
xor
dec
jle
ror
mov
repnz
fisubrl
cmp
add
jp
clc
sahf
sub
mov
scas
ret
decl
rol
hlt
lret
adc
pop
call
stc
int3
hlt
cmp
dec
or
pop
dec
pop
out
fiaddl
push
fs
pop
cmpsb
lea
inc
xchg
bound
loop
int
out
stos
inc
sbb
jno
fdivrs
push
sub
stc
and
jne
sti
cmpsb
jmp
test
lret
xchg
mov
dec
adc
ja
mov
pop
xlat
push
daa
dec
fidivs
sbb
cld
cmpsb
in
enter
xchg
mov
mov
loopne
addr16
dec
scas
sub
xchg
jns
pop
jae
jns
pop
popf
out
iret
jnp
fwait
out
loope
imul
sub
out
mov
inc
push
loop
je
nop
sub
out
cwtl
dec
test
nop
jbe
in
mov
test
inc
mov
push
or
nop
popf
bnd
insb
mov
pushf
push
jno
or
push
int3
shrb
adc
sbb
aas
mov
sbbb
add
ljmp
inc
jecxz
xor
push
pop
xchg
popa
or
daa
out
test
add
jno
add
mov
outsl
xor
mov
add
std
pushl
push
outsl
xchg
mov
xchg
retw
jle
inc
mov
in
pop
dec
dec
lret
adc
add
repnz
sub
push
ds
mov
pop
xchg
sub
lret
push
lcall
cmp
mov
aam
inc
clc
test
add
sub
or
push
lds
jge
sbb
push
pop
jns
daa
lods
in
push
dec
scas
inc
jp
inc
pop
in
adc
inc
ljmp
xor
push
cmpsb
jno
repnz
push
inc
mov
mov
push
lock
fisubl
dec
cltd
xchg
test
pop
mov
cmp
imul
pop
push
fiaddl
pop
xor
jmp
sti
mov
xor
push
pop
incb
xchg
xor
dec
outsb
jno
mov
inc
out
pop
add
xchg
jo
enter
jp
in
mov
or
mov
mov
testb
call
sbb
mov
and
or
clc
pop
lods
inc
push
mov
sbb
fldenv
adc
mov
aas
adc
mov
adc
mov
dec
dec
loopne
lods
dec
or
cmp
dec
xchg
insb
and
pop
sub
inc
inc
sbb
stc
popf
and
mov
stc
push
sub
jmp
pop
xchg
outsl
enter
adcl
mov
cmp
out
test
gs
lahf
push
or
dec
data16
mov
fldcw
rol
cmp
fsubp
pop
ds
aam
adc
jne
sbb
rolb
push
nop
jnp
lret
cmc
dec
ds
out
sub
mov
jecxz
jae
push
sti
mov
loope
imul
push
mov
div
sub
lret
ret
pop
cmp
jne
aam
push
lods
push
std
fimull
loopne
pop
sbb
sub
xor
inc
jns
loope
push
mov
xor
adc
mov
sbb
fisubl
lock
or
jno
push
cmp
lret
mov
ds
loop
adc
repz
aam
fwait
inc
popa
roll
dec
pop
mov
pop
insb
mov
enter
push
adc
jns
gs
fmuls
jb
cli
rorl
ret
cli
mov
pop
shlb
pop
or
insb
sbb
inc
repnz
or
xchg
add
loopne
mov
mov
mov
bound
jle
jg
mov
mulb
fsubl
push
pop
mov
mov
add
and
push
push
sbbb
ret
stos
ss
add
and
test
and
movsb
push
mov
nop
scas
sti
jns
ss
test
adc
inc
sbb
mov
cmp
xlat
adc
ljmp
or
xor
or
movsb
and
sti
loop
pop
stc
sbbb
jnp
stos
nop
stos
push
js
or
mov
pminub
testl
cwtl
das
push
testl
out
jbe
and
xor
decl
lahf
push
jne
xor
pop
lods
rcll
int
jns
and
jnp
xchg
push
loop
js
test
xor
cwtl
lock
push
loope
out
or
xchg
ret
dec
mov
add
mov
in
enter
adc
mov
sbb
insl
xlat
xchg
js
or
mov
jecxz
mov
jne
push
and
loop
cmc
inc
movsl
push
ficomps
clc
aad
inc
fsubs
lds
decl
rcrb
imul
xchg
stos
jne
xchg
sub
cmp
jno
pusha
stos
adc
cmpsl
cld
push
and
in
cmpsl
fadd
imul
mov
test
lock
dec
ja
jns
aam
mov
mov
lock
es
pop
cmp
xchg
hlt
jge
bound
jo
movsl
push
decb
mov
add
repz
mov
test
ret
ds
jl
push
out
es
jmp
fdivrs
or
mov
jmp
sub
cmp
fstpt
lods
mov
xchg
or
mov
sbb
mov
and
in
dec
int
cli
mov
push
push
adc
in
mov
inc
vandps
aam
push
shlb
xor
loop
xor
mov
gs
jmp
pop
scas
sub
ret
cltd
sub
lret
add
jae
mov
rclb
and
mov
outsl
jp
lods
jmp
fucomp
add
push
stc
aam
fsubrl
jle
sub
mov
and
mov
push
mov
add
or
fwait
push
lcall
movsl
fstl
xor
out
xchg
test
pop
jp
inc
mov
add
in
repnz
jnp
test
nop
jl
aas
mov
ja
movsl
pop
out
pop
rcrb
sbb
lahf
subb
mov
mov
insl
add
xchg
sbb
mov
in
or
lods
jg
sub
loop
sub
and
and
cwtl
mov
ja
clc
call
and
fsubs
fcoml
jecxz
jle
ljmp
push
and
dec
std
and
xchg
mov
enter
sahf
sub
adc
ds
stos
xchg
lcall
clc
lods
or
push
ds
jb
cmp
xor
stos
movsl
loope
sbb
inc
inc
mov
movsb
cmp
aas
mov
lret
jmp
iret
call
and
jo
rcr
cmp
repz
cltd
xchg
cs
addb
dec
mov
int
out
pusha
mov
mov
daa
pop
out
inc
inc
mov
lods
jmp
enter
adc
outsb
fldenv
inc
sarl
or
dec
xchg
jnp
out
or
xchg
imul
xchg
push
xlat
fistl
inc
stos
adc
sarb
mov
aad
rorl
mov
adc
adcl
adc
xchg
popl
ljmp
pop
cmpsb
cli
int
jae
inc
out
sbbl
insl
subb
mov
outsb
sti
xchg
adc
lock
xor
sbb
dec
repz
das
push
jmp
lods
ret
pop
jae
mov
loop
aad
add
inc
bound
cmp
in
mov
push
adc
movsb
push
fimuls
xchg
push
inc
in
fists
pop
jl
pop
hlt
rcrl
cwtl
add
jnp
repz
mov
jno
cmp
mov
mov
ffree
add
mov
divl
std
fisttpl
gs
out
xchg
bound
clc
dec
movsb
repnz
jb
mov
pop
sahf
or
xchg
push
shlb
ja
push
out
test
jge
data16
pop
aaa
cmpsl
ds
mulb
scas
aaa
sub
das
push
jns
xchg
addr16
outsb
int
sbb
shl
push
in
mov
dec
jecxz
push
int3
dec
jg
sbb
dec
mov
out
faddp
xchg
fstpl
mov
pushf
add
outsl
add
cmp
movsb
gs
pop
pop
mov
push
jbe
xchg
cmp
sbb
push
pop
mov
pusha
mov
ret
pop
push
pop
sub
xchg
out
hlt
lret
mov
cmc
test
mov
fisubl
push
ljmp
jno
inc
data16
inc
xchg
pop
sub
inc
call
push
xor
sbb
dec
enter
mov
xchg
cmpsl
fildll
ror
xor
cmp
push
mov
push
mov
jle
mov
dec
loopne
jae
xchg
xchg
int3
andb
dec
insl
test
dec
mov
ficoml
mov
lahf
hlt
lcall
jmp
and
orb
aam
repnz
test
ljmp
mov
fildl
data16
cmp
das
fmuls
cmc
pop
jo
sbb
dec
stc
imul
push
push
adcb
jae
mov
sbb
sub
xor
jbe
or
insb
xchg
cmp
jmp
jno
fdivrs
pop
or
pop
and
mov
sub
and
loope
shlb
cwtl
fiaddl
daa
mov
popa
iret
sub
dec
mov
and
rolb
and
jns
add
ret
mov
lcall
movsl
pop
add
mov
les
mulb
sub
repz
addr16
push
inc
inc
push
inc
fs
xchg
bound
ss
fisttpll
pop
sub
push
test
lahf
xor
fdivs
lods
nop
outsl
andb
adc
jnp
dec
arpl
ret
in
iret
rcrl
rcrl
scas
jb
jns
pop
pop
mov
loope
lods
add
xchg
mov
jecxz
aas
add
aam
andl
sbb
inc
dec
pop
pushf
inc
and
inc
sbb
dec
iret
dec
insb
fsubrl
push
rorl
iret
push
jne
adc
mov
es
xor
fs
movsl
cmp
mov
ret
icebp
adc
pop
mov
mov
popa
mov
xor
sbb
ds
lods
sub
dec
pushf
ror
mov
lahf
divb
pop
adc
cmp
stos
sub
out
sbb
cmp
mov
ficompl
mov
or
out
fists
adc
xchg
sub
dec
add
popa
mov
les
outsb
popa
mov
out
and
pop
cmp
loop
insl
add
pop
insb
ret
sbb
jns
mov
inc
jl
or
shrb
or
arpl
shrb
arpl
leave
jns
repz
fcoml
or
ja
sub
jbe
push
adc
gs
jle
insb
cmpsl
clc
cltd
sub
rolb
mov
mov
fsts
movsl
lods
dec
pop
jmp
jb
out
mov
jno
ds
ja
mov
adc
out
arpl
cltd
fwait
mov
dec
outsl
mov
hlt
cmp
cwtl
loope
dec
stos
fidivrl
jp
lret
out
lods
ljmp
lds
fdivl
imul
sbb
cmp
data16
sbb
adc
sbb
cmp
fwait
xlat
repnz
mov
into
fucom
je
data16
movsl
fstpt
cli
jbe
and
cli
pushf
sbb
and
dec
cmc
jns
jle
inc
popa
movsl
mov
daa
je
rcl
jmp
adc
push
push
fs
xlat
repz
mov
xchg
dec
negl
cld
or
loopne
push
sbb
vmovupd
sbb
jnp
test
incl
rcl
add
jge
idivl
and
loope
stc
test
add
das
into
pop
or
xchg
mov
lahf
sbb
cmpsb
push
pop
pop
jb
inc
jb
ds
push
dec
movsl
cmp
lods
ret
inc
sub
inc
dec
add
loopne
inc
xor
icebp
in
imul
lea
push
and
out
dec
stos
push
testl
div
xchg
scas
xor
imul
hlt
cmp
jnp
ds
cmp
pop
decl
std
xchg
inc
inc
and
adc
xor
ja
pop
test
mov
out
inc
pop
hlt
inc
fwait
stos
sub
and
adc
popa
cmp
xor
mov
cmp
sub
ret
sbb
mov
and
stos
inc
sub
ret
inc
iret
and
ret
cwtl
mov
mov
ss
jmp
repz
stos
sub
aam
dec
mov
and
and
stc
bsf
push
jecxz
add
inc
jae
jp
sub
lcall
lret
add
mov
pop
and
mov
inc
cltd
and
lock
inc
stc
xchg
mov
push
sbb
mov
mulb
das
mov
mov
mov
addb
xchg
and
mov
xchg
fnstcw
scas
jbe
sbb
xchg
ja
sahf
push
inc
test
xor
pushf
fnstenv
in
inc
loopne
nop
test
sbb
pop
pop
push
sbb
cmp
pop
ret
out
insl
mov
addr16
fs
or
jbe,pt
repz
sbb
xchg
jmp
jge
xchg
movsl
dec
inc
fnstsw
xchg
out
fs
jo
hlt
insl
add
push
push
addr16
loop
cs
pop
ljmp
add
fwait
bound
aam
dec
shll
xchg
inc
pop
inc
pop
inc
out
jg
dec
dec
out
out
mov
inc
xchg
and
lods
lret
popa
pop
out
das
jg
mov
xchg
jnp
aaa
cmpsl
xchg
fwait
out
insb
out
jp
rcrl
push
clc
mov
and
mov
fsts
inc
in
js
cmpsl
sub
push
stos
add
adc
jle
subl
rcl
imul
and
push
xchg
sub
add
test
shl
jmp
daa
in
andl
loop
push
pop
push
ja
mov
push
shlb
iret
cmpsb
ret
jnp
push
or
shrl
xchg
loopne
xor
sbb
sub
es
cmp
call
sbb
xor
pop
push
insl
stc
cmp
movsb
jge
aaa
sbb
inc
add
jmp
jmp
push
popa
push
mov
xor
sbb
pop
test
movsb
rep
add
out
or
sbb
mov
mov
push
lcall
push
pop
pop
ret
call
rcrl
aaa
or
xchg
jg
lods
xchg
insl
push
xchg
and
fdivrl
dec
mov
rorb
jge
rcrl
lea
xlat
inc
jle
mov
push
data16
lret
inc
pop
stc
insb
add
cld
mov
lahf
push
and
call
std
lds
xor
nop
and
add
mov
lcall
push
inc
xchg
push
popf
add
adc
movsb
fidivs
inc
inc
cmp
jecxz
adc
pop
ljmp
insb
xor
test
jl
mov
popa
add
sbb
push
adcl
pushf
fidivrl
mov
ljmp
js
and
xchg
incl
inc
mov
insl
sahf
or
dec
adc
repnz
fisubl
bound
and
pop
out
addb
dec
popa
adc
push
push
sbb
jle
cmp
pushf
jae
jge
aam
out
stos
es
mov
aad
push
xchg
inc
out
push
pop
mov
and
dec
repnz
and
out
dec
cmc
sbb
bndldx
mov
lret
jns
xchg
push
jbe
or
orb
into
mov
cli
in
out
sbb
xchg
dec
stos
sub
sub
pop
fs
and
and
mov
test
push
and
inc
mov
jne
shrl
scas
out
mov
lcall
daa
pop
in
mov
test
test
xor
xor
and
jno
cmc
mov
loop
aaa
push
cmpsl
out
pop
iret
dec
pop
lret
outsl
xchg
daa
pop
arpl
jnp
push
mov
pop
in
sub
fs
aad
push
fnsave
js
cli
movsb
jle
sub
in
enter
clc
mov
xchg
pop
add
loope
or
ds
push
dec
push
xchg
lods
in
push
or
cltd
lea
das
sbb
xor
xchg
pop
jne
je
xchg
pop
pop
cmp
adc
add
xchg
sub
mov
pop
fdiv
pop
fs
lds
mov
mov
adc
cmp
stc
popf
sbb
pop
outsb
sbbb
mov
mov
daa
outsl
mov
jno
jp
add
xchg
test
cmovge
cmp
jnp
shlb
fcompl
iret
int
push
stos
stc
sub
loopne
adc
mov
jae
aaa
inc
add
adc
adc
jl
adc
shrb
popa
shl
rcll
and
mov
mov
inc
test
cltd
std
mov
jne
xchg
out
loop
daa
cmp
imull
jge
dec
js
ljmp
pushf
inc
into
mov
or
xchg
push
das
dec
stos
jns
je
sub
add
daa
imul
jno
out
je
shrb
arpl
jmp
hlt
jae
sub
fstps
in
inc
les
fsubs
imul
mov
fiadds
mov
pop
ja
dec
mov
xchg
emms
xchg
jns
fwait
mov
jle
cmp
decb
lods
ljmp
xchg
and
push
sub
push
aas
mov
add
jge
jmp
ret
xchg
sbb
add
cmp
or
dec
in
outsb
cld
xlat
mov
sbb
mov
notl
adc
sbb
fbstp
and
push
les
cmp
cmp
cld
testl
lahf
cmp
mov
hlt
imul
push
loop
movsl
push
sbb
fiadds
pop
xor
in
push
mov
sub
fidivl
dec
ljmp
and
xchg
icebp
jl
xchg
in
mov
dec
out
outsl
mov
test
jns
int
lret
pop
inc
fnstcw
lods
jb
sbb
rcrb
or
aam
sbbl
cmp
dec
and
ja
pusha
jp
dec
shrl
incl
cmpsb
psadbw
sub
xchg
dec
imul
lahf
test
lods
test
mov
out
jno
fsubs
adc
or
es
push
adc
mov
xchg
les
movsl
icebp
sbb
enter
in
jae
adc
test
dec
mov
jo
andl
shrb
pusha
test
mov
inc
jl
pop
lret
dec
loope
adc
scas
xor
xchg
inc
pop
dec
xchg
scas
mov
hlt
xor
mov
jae
ss
std
mov
dec
jmp
fmuls
xor
mov
or
mov
or
push
push
mov
pop
repz
or
xchg
jge
jns
lods
pop
push
loope
in
push
ret
cs
or
cld
pop
lret
or
jno
cmp
out
push
xor
iret
push
inc
ss
mov
adc
in
add
out
xor
pop
push
repz
xor
sbb
ret
xor
sbb
mov
dec
dec
stos
pusha
cmp
cmpsl
mov
xchg
cmp
leave
jo
push
test
and
rclb
mov
pop
and
insb
aad
fstpl
mov
xlat
rol
mov
jae
cmpsl
dec
mov
xchg
xor
lods
ljmp
movsb
in
inc
aad
xor
mov
xchg
out
pusha
inc
das
add
test
out
bound
adc
mov
push
movl
in
push
movsb
in
sbb
push
loope
insl
out
cmp
pop
pop
insl
loopne
mov
jge
fdivl
pop
pop
icebp
sarl
outsl
loope
ret
out
sub
adcb
loopne
jle
aas
sahf
xor
ret
into
leave
imul
stc
cli
das
ds
mov
add
push
cld
push
xor
std
sbb
mov
hlt
movsb
sub
adc
xchg
loopne
icebp
sbb
fnstcw
imulb
mov
aam
mov
mov
xchg
cwtl
fwait
sub
icebp
je
decb
and
test
jbe
pop
ljmp
pop
jno
out
push
roll
arpl
data16
add
mov
push
xor
adc
leave
push
stos
fcomps
mov
cmp
inc
sbbb
mov
cltd
sub
ja
cmc
divb
aas
adc
cmp
outsl
xor
mov
mov
jae
sub
fs
pushf
dec
mov
mov
mov
nop
adc
inc
push
xchg
pop
and
or
jnp
shl
movsl
dec
scas
mov
sub
lea
fsubrs
sbb
inc
pop
inc
push
daa
xor
fs
xchg
mov
popa
stos
sub
jnp
gs
xchg
push
int3
jg
fisttps
pop
or
ljmp
jmp
imul
pop
ja
mov
and
fidivs
fstl
jle
inc
imull
ss
mov
bound
and
pop
test
mov
jmp
or
out
dec
lahf
cmp
push
fldt
or
mov
sarb
xchg
rcll
sbb
lret
movsb
or
lods
push
push
or
mov
mov
sbb
popf
cmpsl
pop
jl
jne
pop
jb
add
in
imul
repz
sti
daa
sub
pop
sbb
jmp
xacquire
jns
lock
in
test
rorl
loope
mov
dec
cmp
addr16
cld
inc
out
mov
std
cmp
add
fiaddl
lds
xchg
mov
pushf
aas
or
jl
inc
mov
aas
out
fsubrp
sbb
ret
sbb
cmp
sbb
sub
cwtl
or
mov
mov
inc
hlt
cmp
sub
hlt
mov
test
test
sub
jecxz
mov
cltd
pop
aam
cwtl
fs
in
ljmp
in
and
pop
bound
sub
mov
jbe
push
jbe
or
mov
sbb
outsb
and
cmp
leave
dec
or
fnstcw
mov
xchg
mov
mov
cltd
jg
jp
sub
jne
arpl
dec
and
das
js
pushf
pop
sti
and
out
fst
jne
sar
adc
or
sbb
mov
lods
ljmp
pushf
dec
mov
insb
aad
jp
dec
sub
lock
and
aam
push
int
cld
or
push
mov
sbbb
push
orl
jnp
stos
pop
lret
jg
jmp
das
add
pop
lret
sub
sub
outsb
pop
scas
push
jbe
push
sub
xor
js
das
insl
rcl
repz
repnz
nop
movsb
or
pushl
mov
adc
jbe
ror
mov
sub
popa
pushf
nop
sub
arpl
pop
sub
lods
push
insb
test
inc
or
fwait
push
pop
push
pop
rcrl
scas
sub
mov
jne
arpl
movsb
push
call
or
cli
mov
jne
into
fdivl
sub
mov
movsb
or
sub
jns
insl
pop
hlt
xchg
pop
push
mov
pop
dec
loopne
ljmp
inc
scas
inc
in
stos
mov
mov
xchg
sub
adc
add
rorl
movsb
cmp
jecxz
inc
gs
call
popa
and
pop
ja
add
adc
xlat
jae
push
xor
fldl2e
or
mov
pop
or
mov
adc
mov
and
cli
cmpsb
mov
adc
into
mov
xor
mov
inc
add
lcall
scas
in
pop
cmp
ficompl
cmp
push
xor
stos
mov
pop
lahf
push
es
push
cpuid
inc
jo
into
test
jp
xchg
popa
jg
mov
or
cwtl
rcl
add
mov
sub
sub
pop
cmp
xchg
adc
cmp
scas
mov
add
inc
ja
cmc
movsl
ds
call
and
mov
mov
xor
inc
add
jbe
loopne
pop
stos
mov
popf
or
jl
sqrtps
xchg
cs
sbb
clc
or
cmp
cltd
fsubrl
nop
or
call
imul
or
xchg
call
ret
divl
inc
mov
pop
push
mov
mov
ds
shrb
sbb
sbb
mov
xor
xchg
and
inc
inc
cltd
push
aam
xor
sbb
lret
push
inc
inc
xlat
cmp
and
and
xor
xchg
ja
inc
sub
pop
rcll
xchg
adc
dec
cmp
cmp
aad
xchg
add
jl
ds
push
jp
pushf
add
jne
imul
jp
dec
xchg
push
es
push
and
adc
fbld
mov
adc
insl
pop
ficoml
mov
test
daa
aam
fisttpll
sub
movsl
lods
pop
or
mov
push
inc
stos
cli
insl
les
fstp
jno
mov
out
jnp,pn
negl
mov
pop
adc
xlat
ds
push
scas
pusha
sbb
jno
mov
sub
lcall
incl
mov
je
jecxz
sub
insl
add
rol
pop
and
dec
dec
mov
push
cmc
ds
cmpsl
aas
ljmp
sbb
into
dec
dec
test
arpl
pop
or
test
inc
cmp
inc
sbb
inc
icebp
fisubl
pop
sub
mov
pushf
ret
outsl
pop
inc
xchg
sub
ret
sbb
adc
push
ljmp
xchg
cld
add
mov
and
sti
adc
dec
cmpsb
inc
fcmovnbe
xchg
add
mov
pop
fs
dec
call
or
mov
loopne
push
xor
xor
sbb
sbbl
mov
js
dec
dec
punpckhdq
imul
or
or
cmp
or
pushf
inc
inc
push
mov
enter
xchg
bound
cmp
mov
dec
adc
adc
sub
inc
mov
xchg
pushl
sub
jle
sub
cli
stos
push
aaa
gs
pop
push
inc
in
sbb
mov
sti
in
mov
xor
dec
cmp
xchg
ljmp
lods
lret
shrl
lods
repz
push
ds
and
push
cwtl
repnz
fldenv
pushf
sbb
clc
or
es
or
shrb
jo
pop
jbe
imul
fcompl
loop
cmc
xchg
pop
daa
or
xchg
repnz
cli
pusha
int3
pushf
pop
fistps
xor
mov
lahf
jno
sahf
xor
pop
fs
inc
daa
jl
stc
inc
push
sahf
frstor
scas
aad
adc
cmp
xlat
jno
test
or
cmc
movsl
jge
add
cmpsl
xor
xor
mull
out
lds
fisttpl
dec
pop
mov
mov
mov
pop
leave
mov
jle
inc
or
mov
lahf
adcl
js
xchg
in
loop
mov
jge
imul
xorl
xor
mov
xchg
sbb
ret
mov
repnz
mov
jl
sbb
stc
popf
mov
jns
push
imul
lock
push
ss
pop
cmpsb
and
repnz
sub
ja
xor
dec
loope
ret
out
jle
ljmp
mov
mov
jb
jnp
bound
inc
xchg
or
jnp
cld
sbbb
sbb
xchg
scas
sub
sbb
int
mov
jle
pop
dec
cmpsb
dec
movsb
es
mov
pop
cmpsb
ljmp
test
mov
adc
je
xor
lcall
mov
jg
int
outsb
mov
dec
ret
hlt
in
pop
jge
pop
cmc
xor
rcrb
imul
fwait
cmp
hlt
fwait
cmp
inc
daa
inc
add
add
xor
daa
add
enter
hlt
clc
cli
aad
xchg
mov
or
sbb
pop
jno
cwtl
xor
dec
inc
gs
adc
mov
icebp
fldenv
lahf
movsb
dec
inc
xchg
xor
or
add
hlt
cmc
push
pop
in
stc
jmp
mov
cmpb
cmp
push
push
sub
mov
imul
sbb
sbb
and
dec
xchg
inc
mov
aaa
and
jp
lea
or
jl
xlat
sbb
mov
data16
popw
jo
int
out
sarl
adc
inc
stos
cmp
sub
lds
mov
repnz
mov
push
pop
andb
xchg
inc
ret
loope
ds
cltd
jle
movsb
pusha
push
xor
mov
fsubl
mov
mov
test
cmp
je
inc
fisubrl
push
dec
orl
or
xlat
in
sub
test
mov
mov
pop
mov
pop
mov
clc
or
pop
dec
ss
sarl
cmp
lahf
push
out
dec
mov
cmp
ds
arpl
xor
sbb
out
movsl
xchg
sub
lods
lods
pop
leave
fucomp
jmp
dec
lods
push
in
sbb
jp
popa
inc
jno
hlt
xchg
jae
pop
or
jns
adc
cs
nop
jmp
xchg
testl
icebp
push
cmc
push
iret
aad
cs
mov
jl
sbb
cs
inc
sahf
jge
cmc
mov
pop
inc
fmuls
arpl
js
ret
jmp
pushf
cmpsb
leave
mov
es
and
or
es
push
test
popl
ds
repnz
dec
xlat
scas
cli
cmpb
sub
repz
scas
lods
pop
icebp
jbe
pop
jb
stos
xchg
add
xchg
adc
push
cmp
rol
sbb
xlat
mov
dec
jne
mov
pushf
mov
push
add
xchg
es
aaa
push
add
aaa
test
and
into
test
jmp
pextrw
lods
cmp
stos
aam
xlat
lds
cmpb
in
sahf
lea
out
mov
sbb
lods
mov
sbb
mov
fucomi
push
mov
and
sub
fldcw
lock
out
pushf
xchg
mov
push
cwtl
inc
cmp
push
inc
icebp
adc
fnstenv
pop
sbb
int
xchg
ljmp
and
addr16
div
mov
cmpsb
cmp
iret
and
addl
inc
xchg
mov
outsb
xor
pop
add
hlt
cmp
popf
cmp
int
push
mov
and
cmp
leave
ret
xchg
mov
push
inc
std
sbb
cmpsl
arpl
pop
les
cmp
mov
jge
movsl
ret
andb
or
add
pop
fs
lods
pop
mov
test
pop
add
out
push
jl
out
sbb
popf
outsb
inc
dec
xchg
xchg
pop
lds
xlat
fs
cmp
jmp
or
or
xchg
sub
xor
sarl
push
sbb
outsl
dec
hlt
sahf
cmpsl
stos
cmp
lea
add
lret
cld
xor
loope
jne
rorb
loop
mov
xchg
xor
gs
call
daa
cmp
repz
adc
subl
aas
inc
scas
xor
arpl
enter
sbb
movsb
or
ds
daa
mov
ffree
adc
xlat
mov
lods
loop
call
push
xchg
pop
mov
vcvttpd2dqy
dec
jo
add
add
add
nop
dec
fldcw
sbb
mov
add
mov
mov
in
mov
push
mov
add
insb
and
jg
pop
jno
dec
shrb
sbb
enter
pop
jmp
mov
xor
xor
fwait
xor
mov
jae
decb
jle
fs
loope
lcall
int3
mov
xchg
stos
jne
stos
inc
and
lret
ja
mov
sub
cmp
mov
sahf
mov
fisubs
cmc
dec
cli
jecxz
pop
out
hlt
sahf
ljmp
ljmp
out
test
cmp
inc
mov
stos
mov
fisubl
xorl
or
dec
in
or
mov
fwait
pop
dec
clc
cmp
and
push
insb
jg
inc
std
jecxz
cmp
test
imul
dec
add
cwtl
inc
dec
lods
nop
dec
or
fcmovb
test
xor
and
xchg
in
add
or
inc
sbb
ds
jmp
inc
leave
mov
aad
xchg
adc
ret
xchg
fldenv
ret
enter
mov
pop
pop
lock
inc
cli
jmp
ja
xor
jne
bound
ds
insb
addr16
xlat
inc
mov
loopne
popa
in
sbb
les
push
add
lret
divl
lcall
loop
mov
cmp
mov
cs
xor
dec
in
sti
mov
shll
pop
das
loope
rcl
pop
adc
jmp
xchg
push
movsb
shlb
add
clc
cli
cmp
or
add
out
sbb
fwait
dec
iret
pop
es
and
ss
pop
mov
add
fidivrs
loope
stos
mov
adc
stos
jno
pop
add
cmp
xchg
pop
or
aaa
std
adc
cmp
inc
sub
mov
fsubl
add
test
cmc
nop
pop
adc
cmp
leave
dec
in
mov
pop
sbb
dec
inc
addr16
out
mov
fldt
cltd
push
fwait
cmp
dec
lcall
xchg
out
add
cmp
xor
dec
stc
shr
pop
cltd
pop
jns
int3
push
and
adc
pop
fbstp
jae
cmc
push
int
xor
xor
fdiv
jecxz
dec
fldenv
xlat
pop
mov
out
and
xor
pop
movsl
sub
les
scas
xor
dec
cmpl
mov
push
mov
jge
pop
ljmp
or
mov
sub
mov
call
bound
lea
mov
pop
and
mov
jae
mov
dec
push
jbe
icebp
xor
add
sbb
pop
jno
sub
inc
mov
dec
jle
in
and
stos
xchg
pop
xor
insb
cmp
repnz
xchg
dec
or
and
loop
add
jns
jnp
dec
stos
cmp
inc
std
dec
sbb
jge
data16
push
imul
mov
add
cmpsb
inc
repnz
sbb
or
dec
push
jle
inc
ret
xchg
in
or
mov
mov
cmp
lcall
rcrb
mov
ficoms
ret
lahf
pop
insb
pop
imul
mov
lock
dec
jne
je
inc
pop
inc
pushf
lock
mov
xchg
mov
jb
out
mov
jnp
push
dec
mov
adc
call
jg
cmpsb
insb
add
addr16
inc
cltd
jg
out
cmp
mov
sbb
int3
push
repz
sbb
out
pop
rcrb
mov
xchg
sahf
mov
pop
icebp
in
lret
std
mov
jg
icebp
insb
pop
mov
call
sbb
mov
movsb
dec
aad
adc
fld
mov
adcb
or
sbb
imul
add
adc
xor
pushl
jne
pop
test
popf
cmp
outsl
addb
popa
pop
clc
rcrl
stc
mov
jno
xchg
and
leave
sbb
hlt
push
xchg
jb
cmpsl
outsb
sub
insb
jge
movsl
jbe
pop
add
sbb
mov
inc
jle
xor
xchg
mov
sahf
test
dec
decb
and
dec
mov
loop
xor
repz
lret
sbb
and
cmp
test
push
shl
adc
lcall
jnp
or
es
dec
test
cli
cmc
adc
cmp
insl
ja
sub
adc
enter
adc
fadds
cmp
mov
push
repnz
mov
fwait
stos
jne
pushf
scas
imul
call
outsl
pop
mov
xor
xlat
sub
ret
aam
cmp
dec
int
outsl
mov
xchg
fs
sbb
inc
mov
out
ret
popf
loop
mov
inc
mov
out
cmpsb
xor
mov
add
pop
mov
xor
int3
int3
cmp
addl
popa
sub
xchg
jl
jle
sti
or
imull
pop
pop
loop
enter
sbb
jbe
test
dec
inc
fnstsw
pop
mov
scas
xchg
push
xchg
or
call
and
sub
in
imul
push
mov
xchg
test
mov
xchg
das
mov
sbbl
add
sbb
stos
cmp
call
cmp
mov
dec
orl
out
es
out
mov
mov
pop
mov
sub
call
enterw
loopne
out
lret
xchg
fwait
out
inc
jge
dec
xchg
cmp
test
outsl
sub
andb
add
sahf
mov
jo
mov
scas
and
xlat
pop
ss
adc
pop
jo
cmp
pop
pop
pop
negb
lds
xor
clc
inc
ret
sbbl
add
or
daa
mov
jge
add
hlt
adc
aaa
add
sub
ljmp
dec
dec
mov
inc
popf
leave
jmp
and
jo
rorl
imul
push
shr
scas
enter
loop
shlb
and
hlt
inc
jmp
xchg
and
or
andb
sub
mov
lahf
stos
es
push
inc
decb
sbb
popl
fnstenv
shll
aad
clc
aas
addr16
or
fucomip
mov
pop
sub
cmp
fucomi
adc
int
xlat
sub
pop
sar
pop
sub
movsl
sub
bound
movsl
cmp
std
scas
subl
movsb
rcrl
inc
aam
jecxz
inc
jle
pop
gs
mov
fbstp
xchg
cltd
or
cmp
jle
int3
mov
jl
lods
push
lds
lds
sahf
mov
inc
std
sbb
popa
dec
incb
mov
and
movsl
and
gs
xchg
pusha
mov
push
in
add
imul
scas
in
in
sbb
jae
mov
scas
dec
es
adc
sub
inc
arpl
pop
arpl
nop
into
push
movsb
addr16
sbbl
int3
incl
sbb
mov
leave
stos
push
out
shll
cmc
or
dec
xor
inc
and
push
jmp
into
test
xchg
cltd
xchg
std
jmp
push
popa
add
and
jmp
subl
shl
pop
sub
sbb
add
adc
fs
bound
cld
xchg
jnp
dec
push
in
dec
pop
dec
loop
add
icebp
xchg
sub
jl
xor
iret
fists
cmovle
js
ja
aaa
sbb
adc
adc
xlat
scas
mov
dec
dec
jo
into
mov
or
sub
push
adc
jo
jae
mov
ds
jns
jmp
xor
outsl
mov
dec
push
cmpsl
test
push
icebp
push
xchg
roll
and
scas
data16
push
sub
xor
pushf
in
scas
filds
shrb
enter
cmp
js
mov
push
inc
jnp
clc
addr16
loop
pop
bound
push
xor
int
jge
out
push
stos
fxch
test
aad
inc
sarb
mov
cltd
enter
sub
adc
decb
out
loopne
call
test
jge
test
rorb
adc
push
xchg
imul
mov
xchg
cmpl
scas
mov
mov
cmpsb
test
jno
popa
xlat
popa
inc
loopne
stc
ja
outsl
ss
imul
xor
frstor
fcmove
mov
call
gs
out
cmp
or
adc
cltd
jb
push
jae
xchg
inc
rolb
inc
push
cmpsl
pop
adc
in
inc
and
mov
fs
gs
int
aam
mov
js
call
mov
sub
adc
testl
shl
lahf
divl
scas
inc
stos
mov
repnz
gs
mov
ja
mov
ret
testl
xchg
cmp
mov
fimull
dec
out
insl
and
fnstenv
hlt
js
jge
outsl
inc
jnp
jne
outsb
add
aad
mov
fdivs
xchg
mov
pop
out
xchg
sub
xchg
sub
test
jle
and
imul
pop
into
cmpl
mov
gs
mov
popf
xchg
lea
xchg
stc
nop
xor
movsb
repnz
aam
sbb
xchg
xchg
clc
xchg
xchg
xor
pushf
sbb
jmp
mov
stos
inc
movsl
mov
cld
adc
mov
cld
or
jmp
into
mov
iret
test
lret
mov
push
mov
daa
mov
dec
jl
and
dec
mov
fisubrs
xchg
js
xchg
addl
out
movsb
ja
or
arpl
mov
xor
pop
mov
lock
mov
test
push
push
addb
stos
mov
mov
arpl
mov
cmpsl
andb
xchg
imull
fwait
inc
inc
aam
hlt
mov
add
sti
push
jno
jbe
clc
and
mov
fildll
js
lret
push
jecxz
cmp
in
in
iret
pop
imulb
jmp
pusha
mov
pop
mull
sub
xchg
clc
sbb
and
push
or
nop
imul
mov
xchg
jmp
frstor
jle
jne
daa
lcall
cmp
xchg
xlat
into
xor
add
mov
mov
nop
jnp
cmpsl
inc
call
ja
xlat
pop
ja
push
ljmp
call
jle
add
pushf
mov
xchg
dec
add
fdivs
sti
inc
inc
mov
int3
inc
sarl
in
in
xor
adc
mov
dec
in
push
in
dec
dec
or
xchg
mov
fidivrl
aaa
add
out
xchg
test
mov
mov
into
cmp
test
aam
push
cmp
jge
mov
and
lcall
lret
pop
adc
iret
xlat
sub
scas
ja
js
ja
cmp
enter
push
sub
mov
mov
mov
out
mov
and
loopne
test
cmpsl
ret
ljmp
xor
cltd
dec
jmp
dec
push
orl
xor
aad
gs
loopne
rcll
loope
jne
mov
add
cmp
pop
rorl
cwtl
inc
pop
sub
adcb
int3
lds
pop
sbb
inc
xor
jle,pt
lahf
and
and
jmp
xchg
push
mov
push
adc
into
jns
fnsave
cmpsl
mov
mov
sub
enter
jo
lahf
leave
out
mov
mov
test
mov
pop
and
cs
cmp
ja
dec
dec
xchg
out
jle
es
jno
add
dec
add
repz
cmpsb
cmp
lea
in
push
pusha
sub
sub
jmp
pop
insb
lods
movl
jnp
sub
les
iret
push
jmp
pop
sbb
shrl
repnz
or
pop
shll
push
adc
je
filds
sub
jmp
scas
inc
inc
fdivs
fnstsw
push
fnstcw
fistpll
sub
mov
cwtl
mov
mov
mov
xchg
arpl
sahf
push
and
or
mov
sub
cwtl
aaa
loope
imul
bnd
hlt
and
cmp
mov
loopne
jmp
mov
jl
ss
inc
imul
bound
push
nop
push
cmp
mov
lret
xor
orb
fwait
std
in
push
xchg
cld
dec
dec
jne
in
xor
xchg
fcmovbe
sbbl
push
cwtl
xor
cmpsb
mov
xor
xchg
sbbl
test
daa
fnstcw
inc
loopne
jg
push
ret
pop
fs
out
adc
or
lret
jnp
fcmovb
lock
in
in
gs
dec
mov
imul
push
push
mov
or
cli
jge
pop
decb
lock
stos
push
stc
daa
mov
jb
call
imul
in
jp
jno
cld
xchg
cltd
cmp
lods
icebp
cmp
mov
xchg
sub
push
lods
cmp
mov
adcb
gs
xor
subl
mov
xor
and
pop
push
or
into
push
repnz
and
mov
jnp
loop
in
out
add
adc
xor
pop
inc
fiaddl
mov
xchg
sub
or
and
in
jge
icebp
xchg
inc
mov
cmp
int
imul
imul
push
in
lcall
clc
aas
and
xchg
sbb
dec
ss
sub
jne
or
lds
in
into
ficompl
xchg
sub
test
mov
and
jbe
push
cmpsb
orb
pop
mov
test
pop
mov
pop
push
inc
sbb
mov
test
out
fs
int
jns
fsub
outsl
mov
cli
repz
adcl
cmp
sub
mov
adc
or
mov
and
mov
ss
les
adcb
pop
hlt
cld
insl
enter
xor
dec
fisubrl
sub
nop
mov
fbld
mov
out
jnp
aad
pop
push
std
pop
mov
dec
insb
mov
mov
icebp
mov
mov
dec
dec
dec
out
sti
pop
nop
pop
sub
mov
les
das
add
and
gs
int
clc
mov
shlb
fisubrs
xchg
pop
sub
test
scas
jo
rorb
popa
stc
push
cld
adc
stc
pop
int
push
add
xchg
pop
icebp
fcompl
dec
mov
pop
jg
orl
push
sub
cmp
int3
lods
out
icebp
sbb
addr16
push
mov
mov
mov
inc
inc
shlb
into
pusha
mov
adc
data16
inc
divl
pop
xchg
push
mov
loopne
mov
push
push
leave
lahf
cmpl
shrl
enter
jmp
popf
leave
pop
out
mov
dec
divl
std
jne
cld
sarl
loope
icebp
das
loopne
pop
jo
add
and
sub
push
fmuls
out
mov
pop
loopne
or
xor
push
mov
dec
add
mov
adc
aaa
mov
adc
sbb
ss
stos
cmpsb
mov
mov
or
data16
jae
outsl
scas
enter
iret
add
in
inc
pop
fisttpll
cmpsb
sarb
jge
jl
pop
jg
mov
scas
outsl
pushf
pop
pop
dec
pushf
adc
push
mov
mov
lods
popa
les
dec
into
cmp
mov
in
test
cmc
dec
lock
iret
inc
std
test
call
xchg
push
pusha
jbe
mov
mov
pop
je
mov
sub
btr
dec
mov
adc
movsl
lret
lret
jns
cmp
stc
mov
divl
lahf
adc
inc
dec
pop
xor
jbe
flds
mov
push
jecxz
out
lahf
sub
ds
push
push
jb
out
orb
and
lods
jp
mov
test
insb
mov
pushf
dec
adc
imul
popa
out
lods
rcrb
fisubs
clc
xchg
inc
push
rcrb
xchg
fs
mov
outsb
cwtl
jmp
and
mov
cli
push
sahf
clc
xor
lods
cmpl
cwtl
mov
test
mov
hlt
adc
int3
cmp
or
aas
cmpb
fwait
movsl
mov
movsl
out
test
add
inc
inc
or
fidivl
aas
imul
ret
mov
jecxz
aas
sbb
movsl
sahf
scas
mov
jne
aad
out
inc
cmp
or
or
adc
mul
pop
lods
pop
add
dec
add
mov
sbb
inc
rcrl
mov
ljmp
xor
icebp
push
icebp
aam
lods
jbe
adc
fimull
inc
into
jp
nop
stos
dec
lahf
push
jp
outsl
stc
push
push
sub
les
pop
pop
insl
stos
sub
ds
mov
cmp
adc
inc
vgatherqps
repnz
lods
adc
jl
mov
sub
les
dec
mov
hlt
in
push
adc
add
or
in
adc
mov
jmp
repz
mov
sub
lahf
pop
cmp
cmp
cmp
loopne
inc
xchg
scas
add
dec
inc
shlb
pop
xchg
push
fcmovb
sub
fld1
and
inc
sbb
inc
ja
sbb
loope
xor
jo
ret
xchg
ret
mov
dec
aad
outsl
daa
call
push
pusha
push
outsl
xchg
outsl
js
in
ds
cmp
fs
xchg
or
js
movsl
and
mov
jmp
stos
fidivl
outsb
or
push
mov
push
test
adc
add
js
out
cmp
test
cmpsb
pop
scas
pop
or
scas
clc
mov
inc
iret
and
xchg
imul
cmpsl
scas
out
cld
loopne
lods
mov
aam
icebp
xchg
xor
push
sbb
stos
divl
fyl2x
jmp
or
fists
pop
sub
enter
jno
out
jbe
scas
add
test
sbb
or
test
nop
neg
cmpsb
jp
fsubl
push
xor
xchg
seta
test
test
lock
std
inc
mov
in
arpl
push
fs
mov
sbb
xchg
jb
xor
cmp
jecxz
sbb
mov
push
jne
imul
stc
push
mov
xor
fadds
push
cmp
and
sbb
jbe
jg
add
aas
mov
insl
jge
mov
xor
loopne
push
adc
mov
jl
fst
inc
xchg
popf
scas
es
fidivs
and
hlt
notb
jbe
aad
dec
or
xchg
adc
popf
outsl
incb
popa
jge
and
sub
shll
shll
mov
sbb
test
mov
xor
mov
ja
sahf
add
movsl
lahf
dec
xlat
add
jecxz
adc
pop
adc
je
xor
sbbl
mov
aad
xchg
ja
mov
add
loope
push
pop
cmc
inc
loopne
cmpsl
push
add
mov
jmp
out
jle
push
ds
xchg
into
jl
js
mov
jbe
testb
mov
and
mov
inc
sahf
cmp
pop
insl
cmp
adc
xchg
sti
xchg
ss
ds
xor
sbb
arpl
popa
dec
in
lods
aam
sbb
rcll
mov
sbb
decb
movsl
adc
xchg
mov
xchg
hlt
cmp
inc
pop
cld
mov
clc
leave
popa
dec
test
mov
lds
cmp
rclb
jecxz
mov
mov
nop
mov
in
add
imul
insb
jmp
popa
lds
sbb
mov
xor
call
rcrl
mov
icebp
push
pop
xor
cltd
mov
rcrb
ljmp
loopne
shr
push
mov
push
xor
lds
into
pop
sbb
or
mov
movsb
ds
outsl
dec
pop
sub
in
test
out
jo
in
mov
loope
sub
jns
pop
jmp
jmp
or
dec
pop
fiadds
pop
movsl
add
imul
adc
cmpsl
add
lock
stos
inc
and
jbe
addr16
addr16
lret
cld
outsl
sarl
das
jo
ljmp
fisttpl
movsb
fistps
ret
jecxz
sbb
mov
daa
idivb
dec
shrl
insl
subl
insb
add
sbb
scas
dec
ret
hlt
sbb
sub
push
adc
jl
mov
jmp
xor
push
mov
dec
pop
pop
fldcw
push
mov
sub
inc
inc
push
in
sub
add
jge
push
scas
repz
int
js
pcmpgtd
test
mov
bound
xor
inc
mov
shll
outsl
out
push
adc
and
cwtl
cmc
sbb
in
pop
stos
push
lahf
jp
lea
jnp
loopne
or
xor
xchg
dec
jp
popf
or
shll
mov
mov
fmull
pop
cmpl
push
xor
scas
mov
mov
fidivs
leave
pop
aam
and
mov
push
lods
push
out
div
imul
das
cld
ljmp
mov
xor
jo
clc
adc
mov
cld
pop
cmp
mov
or
or
push
fidivs
inc
cmp
push
fiadds
mov
pop
shll
push
std
mov
insb
dec
or
xchg
aad
clc
and
jns
dec
xor
xor
in
adc
dec
mov
mov
ret
mov
jns
in
push
push
fisttpl
pop
clc
mov
add
mov
test
dec
lret
and
dec
push
cmp
adc
cmp
dec
mov
adc
sub
fmul
jne
dec
add
pop
xchg
xchg
fstps
and
sahf
cmp
fbld
add
cmpsl
aad
fnstcw
inc
mov
pushf
jae
adc
cmp
aad
jae
imul
shrb
jp
push
dec
bound
mov
adc
aam
lods
push
and
and
cmp
xor
inc
push
insl
adc
sbb
mov
in
push
je
stc
rcl
nop
pop
xor
sti
inc
jo
pop
dec
into
sbb
enter
jge
add
jmp
outsb
inc
stc
dec
jmp
rcrl
iret
cmp
dec
sbb
fsubrs
adc
jae
pop
cmp
xchg
mov
push
xor
jns
fidivrs
mov
ret
scas
dec
adc
call
cmp
or
cmovl
sub
mov
clc
outsb
jmp
xor
jo
ficomps
xchg
xorl
cld
aam
nop
pop
cmp
inc
mull
pop
inc
inc
push
sub
imul
imul
pop
xchg
jg
pop
jecxz
inc
popf
daa
addr16
in
aaa
push
adc
mov
lcall
ds
pusha
arpl
mov
and
mov
daa
shrb
test
or
mov
das
xchg
push
inc
and
aam
out
or
aam
dec
xor
lcall
out
xor
cwtl
xor
xchg
sbb
popa
xchg
xchg
sbb
pop
stos
test
stos
push
pusha
stos
in
fadd
sub
out
or
insb
add
dec
sarl
imul
repz
iret
xor
sahf
cmp
pusha
out
andl
sbb
xchg
and
lcall
loope
sarb
lret
jo
cmp
adcl
sbb
jmp
out
pop
fs
push
xor
push
pop
stos
subl
xchg
loopne
dec
pop
mov
lahf
mov
inc
add
aad
adc
ds
mov
test
pop
dec
divb
jl
scas
mov
cmp
mov
jb
inc
enter
adc
ja
movsl
push
push
mov
sti
sub
xor
mov
mov
mov
sub
xchg
stc
jns
push
pushf
mov
adc
push
pop
jecxz
scas
dec
fimuls
mov
pop
jle
fisubrs
nop
rcr
pop
push
rorl
ja
pop
xchg
xlat
push
fmull
in
mov
dec
mov
imulb
add
inc
cmp
popf
bound
sbb
hlt
imul
mov
or
xchg
jbe
mov
call
sub
cmpsb
imul
cmpsb
cmp
fiaddl
push
shll
mov
icebp
pushf
inc
and
jecxz
add
mov
jbe
add
pop
dec
mov
jo
scas
insl
jns
jge
sub
dec
mov
int
in
fidivl
sti
mov
ss
les
jnp
push
dec
mov
testl
xor
xor
sub
hlt
mov
sub
into
pop
pushf
and
loope
lods
pop
cmp
loope
pop
mov
sahf
scas
push
cltd
sahf
inc
stos
mov
in
fdivrl
inc
int
je
mov
xor
mov
out
mov
mov
shlb
add
fnstenv
inc
push
sti
jb
sbb
and
dec
repnz
clc
or
iret
mov
aas
mov
inc
aad
add
pushf
dec
or
je
dec
pop
jne
push
insl
jb
mov
sbb
inc
dec
fcoml
stc
mov
push
xor
and
repnz
add
call
in
pop
sbb
imul
mov
xor
movsb
test
movsl
das
mov
xor
clc
pop
push
and
iret
jp
mov
movsl
push
pop
xor
rclb
cmp
test
pop
scas
in
enter
push
mov
mov
loope
pop
cmp
add
jne
mov
push
xor
or
fidivs
cmc
leave
pushl
mov
mov
mov
icebp
sahf
cmp
stc
inc
or
pushf
mov
adc
cmp
sbb
pop
mov
mov
rorb
and
xchg
fcmove
push
or
inc
inc
pushf
pop
fucomp
dec
lret
int3
aas
aam
xchg
pushf
mov
stos
pop
xor
int
adc
cli
push
ja
lods
int
adc
push
pop
inc
dec
push
aam
iret
jge
leave
jmp
mov
ss
xor
pop
cltd
test
movsb
lea
inc
jae
je
xor
pop
sub
push
or
pop
xor
and
jp
cltd
sbb
xchg
out
fcmovu
inc
mov
je
mov
lret
dec
outsb
or
or
or
sub
into
mov
push
push
outsl
sahf
rcr
test
or
xor
mov
cmp
pop
jmp
sbb
dec
push
lods
orb
out
mov
in
mov
test
mov
ret
xlat
push
and
cmp
ret
sti
faddl
out
push
leave
mov
pop
outsl
fisubl
adc
xorb
mov
or
sub
mov
daa
clc
fisttps
addl
cli
cmp
dec
adc
or
mov
or
out
stos
sti
into
popf
repnz
push
aam
mov
xor
mov
jo
or
pop
cbtw
lods
hlt
roll
dec
or
adc
insl
mov
pushf
push
ss
mov
into
pop
push
cmpsl
stos
lret
into
xor
mov
insb
sbb
push
mov
push
fcomps
mov
js
jmp
jl
xlat
ja
gs
in
scas
imul
shll
pop
push
dec
adc
fwait
jae
lods
cld
loopne
inc
mov
jnp
xor
js
pop
das
mov
adc
int
pusha
xlat
lcall
lds
push
jp
jecxz
popa
sbb
and
imul
repz
push
mov
scas
rolb
pop
rorl
and
cmp
fisttpl
mov
mov
cmpsb
data16
and
push
inc
arpl
fwait
sbb
inc
je
cwtl
mov
push
push
sub
std
or
push
jno
scas
test
rorl
fstl
sub
dec
and
jnp
push
stos
je
jge
scas
test
sub
or
ret
in
or
jl
mov
inc
pop
fbstp
addr16
sub
lods
pop
icebp
adc
je
mov
mov
daa
dec
or
popf
push
mov
inc
imull
test
mov
lret
add
aaa
sar
scas
pop
lcall
or
mov
add
rcrb
or
cmp
pop
jecxz
out
ret
in
pop
cltd
xor
cld
jbe,pn
lret
aaa
jbe
enter
ret
hlt
inc
sbbb
cmp
push
jnp
inc
mov
jae
push
adc
sub
mov
push
cmp
jno
dec
pop
or
mov
jns
adc
movsl
nop
out
mov
cmovbe
into
mov
aaa
int3
cs
jae
rcrl
cmp
sbbb
stc
or
and
gs
gs
sahf
pop
loop
sub
sbb
pop
or
xor
pop
dec
dec
aad
cmp
and
out
sub
hlt
aam
sbb
sub
add
cmp
xorl
gs
and
mov
bound
pop
dec
inc
aam
pop
popa
divps
ret
in
add
test
daa
sbb
xchg
jle
rolb
or
push
loopne
inc
pop
inc
ror
shrb
jp
lods
fwait
mov
hlt
mov
sub
cmpsl
sub
imul
out
push
icebp
sub
mov
sub
or
cmc
cmc
xchg
sub
incl
pop
jp
clc
or
add
imul
test
leave
mov
jp
pop
insb
fistps
cmc
push
ret
sbb
lds
adc
loope
in
xchg
stc
cmp
cmp
movsb
test
rclb
cmc
call
add
sahf
xor
sbb
mov
cli
popa
mov
std
int3
mov
jae
jmp
lea
ret
jnp
in
add
pop
sahf
mov
dec
lods
cmp
mov
add
jbe
dec
mov
jle
mov
loope
jo
cmpsb
mov
inc
or
sarb
xor
xchg
rcll
xlat
xor
mov
sbb
dec
sahf
push
aas
mov
enter
imul
cmp
push
dec
pop
nop
mov
sub
outsb
insl
add
sbb
out
dec
add
int
fdivrl
cmp
xlat
push
sahf
aam
xchg
dec
jge
lcall
jb
push
mov
jo
xchg
jle
push
nop
insl
ja
scas
fdivp
and
aam
adc
lods
loopne
fimuls
mov
pop
add
fs
fidivs
jae
lret
cmpl
es
in
cmpsb
pop
mov
mov
jns
mov
mov
and
imul
clc
push
addr16
std
inc
push
xor
cwtl
sub
int3
inc
into
gs
adc
xor
les
scas
push
imul
jb
ja
lret
sub
rcrl
iret
movsl
dec
dec
insb
js
fdivr
inc
loop
ret
es
push
push
mov
std
xchg
sub
lcall
mov
dec
fstpl
or
sub
xchg
dec
hlt
outsb
andl
or
xchg
sub
sub
loop
xchg
outsl
add
push
ljmp
adc
shl
pop
in
lahf
sub
jnp
repz
sub
in
xor
sub
xor
inc
ljmp
sbb
es
out
inc
out
test
lret
xchg
addl
in
call
or
out
dec
xchg
xor
test
je
sub
or
or
fwait
inc
repz
push
add
bound
insl
and
mov
or
test
xlat
adc
fcoml
mov
mov
outsb
aad
pop
and
sbb
mov
xor
scas
out
cld
nop
into
jl
cmp
shll
pop
in
ds
sti
push
push
adc
xor
or
mov
lea
push
outsl
jae
cmp
addr16
outsb
jae
ret
lret
addr16
inc
icebp
mov
jge
outsl
call
in
mov
xchg
cld
mov
movsl
sub
cmc
inc
cmp
cmpsb
cwtl
pop
or
cmp
rcrl
or
adc
lock
jo
roll
mov
and
pusha
dec
in
cmpl
or
sub
adc
mov
or
push
loope
cmpsl
pop
cwtl
insl
adc
popf
scas
sti
xor
dec
call
or
cmpb
or
aad
mov
xlat
push
ret
or
mov
call
mov
stos
add
or
and
loope
mov
test
add
sbb
pop
inc
mov
repnz
xchg
jb
repnz
xlat
mov
jae
repz
dec
rclb
cmp
mov
inc
addb
xchg
push
adc
repnz
adc
cmp
int
test
inc
push
pop
pop
testl
out
sbb
and
stos
es
xor
sub
or
rcrl
pop
adc
jns
ljmp
scas
inc
lods
sbb
dec
in
cmpl
mov
fbld
sub
push
sbb
xchg
stc
aas
adc
mov
bound
add
xor
lods
inc
xchg
push
leave
push
sub
xor
mov
jp
dec
jo
or
rclb
int
mov
cmc
test
pop
sbb
cmp
pop
and
imul
out
aam
out
out
mov
dec
sub
das
pop
sbb
in
out
mov
iret
jl
inc
fwait
inc
pop
repnz
fsubl
loop
imul
rcr
lret
rcll
test
inc
dec
mov
push
fstpt
js
jne
inc
and
sahf
dec
loope
popa
xlat
pop
shrb
test
xchg
icebp
push
pop
pop
insb
cmp
insl
jge
cmp
fldl
mulb
dec
cmp
les
orl
jmp
mov
cmp
ss
adc
loopne
mov
imul
test
repnz
push
cmpsb
in
jp
clc
xor
pop
data16
in
icebp
or
sbb
test
or
push
add
push
frstor
jmp
add
aaa
popf
xchg
fimull
cmpsl
lcall
push
mov
inc
test
inc
ficompl
mov
sbbl
nop
daa
pop
mov
js
add
push
pop
jecxz
mov
xchg
cmp
push
inc
ss
add
in
inc
shl
ljmp
add
lods
aaa
jae
mov
dec
cmp
int3
xchg
inc
cmp
aad
popf
sti
stos
mov
mov
jae
fstps
inc
scas
xor
das
push
out
icebp
xor
sub
addb
addl
movsl
shl
mov
outsl
add
js
mov
jp
data16
jo
xor
in
xor
mov
push
sub
sbb
or
loop
insb
lods
push
inc
imul
jmp
sahf
sbb
pop
aad
stos
mov
dec
cs
sbb
adc
icebp
arpl
mov
ljmp
fcomps
xchg
repz
add
lea
mov
xchg
push
push
in
repnz
repz
xor
cmp
in
xor
push
fcomip
push
push
jp
repnz
pushf
xlat
add
sub
lds
std
sbb
dec
stos
cmp
pop
jecxz
mov
std
mov
out
stc
testl
por
push
and
mov
xor
js
and
fbld
sub
inc
ret
dec
je
xchg
push
shl
inc
cli
jbe
ss
fisubl
push
jno
ret
xor
rcr
dec
push
adc
push
popf
ljmp
mov
sbb
or
sbb
out
loopne
lahf
pop
icebp
jne
jecxz
fidivrs
inc
or
aaa
push
fnstcw
lods
or
gs
adc
ljmp
jns
sbb
outsb
popa
leave
outsb
insb
lock
jo
sub
mov
cmp
sbb
mov
pop
std
shll
mov
xor
push
sub
aas
in
dec
decb
pop
ja
nop
out
inc
das
movsl
aad
cli
push
push
sahf
xchg
jg
lcall
cld
jae
cs
jno
imul
int
add
push
fstps
pop
mov
adcb
je
test
repz
cmp
adc
push
push
adc
test
pop
jnp
push
cmp
dec
mov
je
bnd
mov
xchg
xchg
xorl
dec
mov
cmp
mov
je
cli
cwtl
push
arpl
jp
sahf
ss
leave
mov
add
outsb
es
pushf
jmp
mov
lcall
sarb
pop
or
mov
sti
sub
incl
push
pusha
cmp
jl
mov
jno
adc
add
jecxz
addr16
jecxz
cmp
lods
stos
mov
mov
repnz
popa
int
mov
pop
pop
inc
mov
mov
cmp
push
aaa
es
jle
divb
adc
and
ds
mov
sub
push
cmpsb
mov
push
lods
mov
push
sar
das
pop
and
pop
rep
iret
fidivrl
sub
lret
push
scas
and
stos
aaa
shll
jp
add
or
stos
lret
fndisi(8087
addr16
call
or
repz
add
out
xchg
jge
xchg
adc
add
dec
pushf
not
pop
cmp
cmp
pop
cmp
pop
loope
imul
call
js
or
cmp
dec
leave
push
icebp
or
cmp
xlat
lret
fstpl
cmpsb
pop
sub
into
fs
pop
and
std
bswap
mov
and
cld
cmp
xor
inc
in
push
dec
pop
xchg
inc
pushf
aam
pushf
sbbb
push
stos
out
push
movsl
mov
rcll
je
jb
cmpb
push
push
mov
jbe
sub
pop
test
jg
cmp
mov
inc
add
mov
insb
mov
push
mov
xchg
enter
call
pop
mov
push
loope
lret
mov
inc
inc
pop
int
push
js
and
cmpsb
push
cs
rcr
or
jns
adc
sub
outsl
ret
jle
sti
cs
iret
pusha
jo
test
lret
cs
in
popf
sarl
pop
mov
je
shrb
push
adc
xchg
add
or
es
imul
push
ljmp
sahf
mov
jne
hlt
mov
jbe
into
cwtl
mov
cmp
hlt
or
cmc
xchg
sbbl
xchg
cli
pusha
dec
subb
inc
insl
outsb
sub
xor
cmp
popf
xlat
jge
insl
mov
mov
lds
aas
push
insl
repnz
sbb
stos
xor
sbb
cmp
insb
pop
insl
les
scas
push
push
and
push
cmpsb
imul
out
stos
xchg
jo
outsl
ret
scas
fiadds
dec
dec
popl
outsl
xchg
inc
jo
shl
out
adcb
pop
rcrb
cmp
sub
cmpsb
or
out
js
daa
mov
sbb
jp
negb
mov
roll
and
add
mov
fisubrs
sbb
jae
icebp
leave
cmpsb
lock
aam
xchg
cs
add
sarb
mov
mov
adcb
cmp
push
scas
pop
sahf
or
push
fsub
subb
in
inc
outsl
jl
ficoms
enter
aaa
sbb
repnz
mov
xchg
lds
jns
mov
popl
pop
mov
scas
into
aad
idiv
cltd
jo
sbb
dec
push
inc
fbstp
stos
xchg
les
push
fs
stos
push
stos
dec
add
ljmp
xchg
jle
sbb
jmp
ficomps
cwtl
mov
sbb
sbb
loopne
xor
mov
dec
or
aad
xchg
mov
jecxz
jecxz
shl
std
push
in
mov
mov
mov
addl
push
out
cmp
clc
jle
sub
pop
js
mov
push
cmc
xchg
iret
ds
mov
cmp
fistps
xor
insb
scas
fisubrs
cmpsb
mov
fucompp
pushf
xor
cld
cld
orl
inc
push
test
xor
push
cmc
xchg
dec
jmp
push
adc
and
mov
out
jno
int3
inc
mov
outsb
sarb
ret
rorb
bound
add
test
mov
dec
stos
fcomps
pop
dec
dec
pop
stc
ds
xor
cmp
imul
cmp
mov
or
xchg
adc
pushf
push
xlat
icebp
dec
or
dec
mov
sahf
stos
push
in
push
addr16
sbb
sub
iret
push
fwait
cmpsl
sbb
sbb
add
pop
push
dec
dec
iret
sbb
xlat
cmpsb
or
lahf
mov
jge
adc
leave
int
repnz
push
xlat
mov
pop
leave
and
jo
cmpsb
out
mov
les
div
lods
scas
and
mov
pushf
add
leave
push
xchg
cs
xor
jl
sub
lds
push
dec
hlt
inc
or
pop
imul
pop
sub
mov
xor
xor
fwait
outsb
lea
mov
out
jle
aad
cmpb
adcl
mov
rorb
mov
mov
jle
in
pop
sarb
push
xor
fnsave
mov
cmpsb
aam
sbb
sub
ret
bound
jg
orl
sub
sahf
xor
inc
xchg
mov
rolb
mov
mov
dec
pop
adc
nop
adc
jl
dec
xor
push
add
movsb
daa
or
pop
inc
mov
std
and
paddb
mov
imul
in
int
cmpl
and
xchg
movsb
push
repnz
aaa
out
imul
push
nop
dec
and
adc
dec
add
pop
inc
cwtl
dec
xchg
xor
add
rclb
hlt
movsl
mov
push
shrl
push
cmpsl
adc
das
mov
or
or
pop
push
shlb
sbb
popa
jp
fmull
stos
add
std
bound
cmp
xchg
xor
sbb
jno
and
andl
lret
cltd
push
push
xor
cmp
cmp
clc
in
dec
clc
adc
dec
mov
sbb
push
psrlw
ljmp
popa
cmp
push
imul
jb
daa
jmp
inc
sbbb
mov
xlat
sbb
outsl
xor
mov
inc
out
add
cs
push
cmc
jmp
pop
dec
out
divl
xor
ss
inc
mov
ljmp
xor
loop
mov
imul
inc
movsl
add
mov
test
insb
xchg
imul
jg
mov
pusha
stc
sahf
adc
jbe
mov
test
mov
insb
push
dec
dec
sti
cwtl
and
dec
lret
icebp
push
adc
fsubrl
mov
sbb
mov
or
jnp
jmp
sarl
sub
sub
add
sub
mov
xchg
cmpsl
add
mov
add
jo
addr16
call
pusha
adc
mov
push
test
arpl
dec
pop
jae
mov
scas
fiaddl
sbb
jnp
push
jecxz
lds
pop
js
aas
xchg
sub
mov
stc
xchg
repnz
popf
inc
mov
xor
leave
jmp
outsl
cmp
out
add
sub
inc
adc
jbe
imul
lret
jne
push
adc
adc
int
add
jns
push
fwait
push
shlb
test
cwtl
das
inc
test
cltd
xor
lods
sti
push
dec
push
inc
sbb
and
sub
fists
mov
add
loope
scas
xchg
adc
lahf
iret
lret
lods
dec
push
mov
push
mov
into
gs
xchg
add
mov
lahf
xor
push
push
pop
dec
cmp
push
rcl
ds
xor
sub
cmc
dec
lahf
xchg
call
dec
js
sub
jge
mov
sub
push
or
jns
imul
fsubrp
push
pop
inc
loopne
mov
test
pop
adc
or
mov
out
outsl
mov
xchg
call
aad
dec
pop
inc
jo
repnz
sbbl
and
xor
push
loopne
jp
mov
hlt
inc
insl
ja
sbb
les
imul
adc
jg
les
adc
mov
mov
test
jle
jle
pop
sbb
aad
cwtl
popl
movsb
inc
icebp
jne
fisubrs
dec
push
ljmp
jb
pop
xchg
nop
pop
sub
in
jo
sub
or
fisubrl
mov
jo
push
jae
jl
les
jg
test
pop
bound
mov
icebp
inc
daa
or
test
call
insb
add
call
bound
imul
jg
roll
ja
xor
test
push
xor
arpl
stos
ds
xchg
test
clc
cmp
jne
jge
push
in
lcall
mov
add
mov
mov
xchg
clc
pop
clc
xlat
cmp
sub
xchg
cmpsl
sub
repz
in
cld
ret
shlb
rol
cmc
dec
mov
jl
rclb
loopne
mov
xor
pop
in
shll
pop
or
js
or
adc
mov
and
mov
mov
xchg
cmp
sahf
or
push
cld
into
sub
sti
pop
es
in
sbb
clc
aam
mov
xchg
gs
out
adc
arpl
stos
adc
adc
cld
mov
mov
or
mov
fs
nop
ss
mov
and
adc
bound
adc
sub
xlat
sti
xchg
cmp
lret
int
hlt
xchg
push
sbb
loopne
sbb
lret
lock
mull
sarb
sub
jecxz
xlat
and
and
fld
or
xchg
into
and
rcll
dec
mov
lahf
sbb
frstor
push
jae
fisttpl
loop
fidivrs
jmp
and
ljmp
out
fidivs
pop
cmp
add
jbe
jmp
rorb
sbb
das
lock
popa
mov
cld
and
sub
pushf
dec
dec
xchg
lcall
out
xor
adc
test
push
cli
push
sahf
add
jb
add
mov
and
cmpsb
jg
aam
inc
xchg
push
pop
inc
and
push
sbb
jmp
inc
push
jbe
xor
cmpsb
mov
in
add
shrb
pop
mov
unpcklps
sbb
jbe
ret
scas
lcall
ds
mov
pop
jmp
mov
xchg
push
push
and
xchg
mov
dec
xchg
add
and
movsb
pop
mov
lods
testb
add
xchg
add
gs
mov
sahf
xchg
fisubrs
lret
jae
call
scas
mov
ljmp
ret
in
orb
filds
xor
lret
mov
popa
adc
subb
sbbl
fildll
mov
insl
dec
xlat
repz
iret
and
or
lea
aaa
push
dec
loop
inc
ficompl
sub
imul
and
leave
test
decl
xchg
xchg
icebp
mov
add
add
lock
fs
dec
sti
jle
pop
out
xor
jmp
sahf
clc
sbb
incb
out
in
add
mov
jno
xor
add
cs
add
gs
data16
outsb
mov
lahf
dec
push
pop
rorb
lahf
stos
sti
pop
in
mov
outsl
add
cmp
test
jnp
arpl
mov
fsubl
rorl
lods
push
in
lock
add
pop
pusha
shll
dec
cwtl
out
mov
in
sub
fcomps
cmp
ds
pop
mov
rcl
adc
dec
dec
scas
add
jl
test
mov
sub
xchg
or
push
mov
cmp
pop
lock
push
ficomps
adc
add
xor
sub
out
loope
cmc
xchg
pop
xor
lret
cmpsb
push
jle
dec
xchg
insl
dec
stc
scas
mov
std
cs
inc
or
loope
push
xor
inc
mov
in
sub
fistpll
lds
je
sbb
adc
mov
adc
int
pop
xorb
sbb
out
stc
push
cmp
inc
out
imul
cs
rorl
decl
mov
dec
pop
push
mov
sbb
stos
leave
sub
out
cmp
test
jle
inc
fnstcw
repz
cmp
in
arpl
mov
xor
add
jle
mov
or
jl
aas
push
out
mov
das
cmpl
inc
ficomps
push
loop
in
rcrb
sub
cmp
push
fdiv
jae
inc
imul
sbb
lret
jmp
seto
loopne
mov
push
sbbl
ja
xor
jns
xlat
mov
xchg
subl
icebp
inc
in
push
pushf
sub
shlb
sbb
pop
sbb
nop
mull
outsb
add
mov
imull
cmpl
fisubrl
rcrb
test
lods
and
and
sub
les
pop
jbe
arpl
add
out
mov
out
xchg
aaa
shrl
in
add
hlt
rcrl
mov
fsubrp
pop
add
mov
lret
mov
sbb
add
xchg
dec
sub
aad
out
sahf
jno
clc
and
clc
int
mov
mov
mov
rcrb
movsb
cmp
stc
aad
hlt
mov
mov
jmp
or
mov
fsubrl
imul
jbe
sbb
or
xchg
repz
out
jb
xchg
mov
in
fidivl
cs
push
or
inc
add
sbb
fdivs
push
fst
lds
rcr
mov
pop
out
push
sub
inc
add
stos
inc
and
int3
inc
fdivr
mov
fbld
jp
stc
movsb
push
scas
xchg
push
xchg
sub
add
cwtl
fs
sub
mov
test
sub
push
popf
dec
popf
jne
xchg
imul
sub
popf
outsb
pop
cmp
add
pop
inc
popa
addb
jmp
mov
dec
cmpsl
les
lahf
fwait
mov
mov
and
cld
stos
adc
lret
outsb
test
or
mov
cmp
movsl
imul
or
and
cmp
sub
les
add
jl
pop
inc
fstps
into
out
cs
icebp
pop
jb
out
clc
js
cmp
movsb
dec
dec
nop
sbb
add
mov
insb
xor
jno
jl
mov
xchg
push
push
daa
mov
jns
ss
outsb
adcl
movsb
aam
jp
add
lret
pop
sub
and
aaa
jl
sub
scas
mov
in
std
lcall
in
les
loopne
mov
mov
xchg
mov
pop
mov
orl
hlt
cmp
xor
frstor
mov
jmp
std
jmp
rorl
adc
ret
mov
nop
adc
gs
xor
cwtl
mov
test
mov
dec
cmp
stos
jp
dec
cmpsl
mov
cwtl
push
jge
je
iret
adc
inc
sti
iret
out
jge
mov
mov
in
xor
mov
push
pop
sbb
xchg
test
fcoms
cmp
in
or
pop
lods
add
mov
and
test
dec
jl
clc
int3
xchg
test
mov
test
inc
cmc
push
out
loop
cmp
repnz
ljmp
das
dec
test
test
mov
xchg
push
test
sahf
jae
sbb
ja
addr16
daa
rcll
cwtl
outsb
sub
and
sbb
sbb
push
lods
lret
add
jmp
lret
mov
cmp
test
mov
pop
pop
jbe
jo
outsl
push
sub
sbb
mov
lea
faddl
dec
ss
stos
sbbb
in
cld
mov
lea
popa
nop
daa
xchg
adcb
push
xchg
movsb
ja
mov
adc
leave
mov
sbb
adc
loop
je
mov
fbstp
mov
sub
jl
pop
and
xorb
lret
insb
push
or
in
and
xchg
xchg
cwtl
shl
mov
mov
paddusb
inc
leave
nop
xchg
sub
mov
fs
sbb
sahf
mov
push
inc
jmp
ja
das
mov
and
cmp
mov
into
cmp
push
sub
dec
lcall
outsl
in
xchg
pop
push
scas
inc
imul
mov
cmp
adc
push
push
push
loopne
enter
jne
pop
push
xlat
stc
or
cmpsl
ret
hlt
jnp
fidivrs
repnz
in
adc
stos
pop
add
es
pop
pop
xor
int3
lret
jle
add
arpl
mov
sbb
fprem
push
xchg
cmpsl
mov
or
dec
ds
inc
loope
pop
adc
inc
sbb
jae
test
jbe
xor
mov
inc
mov
shrl
insb
adc
ret
in
cltd
ret
pushf
sub
cld
mov
pop
sub
sub
cmpsl
mov
inc
lods
adc
sub
dec
xor
xchg
bound
fcomps
push
mov
rcrl
dec
int
daa
fs
pop
adc
jge
add
popf
pop
inc
push
sbb
pop
add
push
jl
jl
ja
inc
dec
pop
repnz
sbb
fsubs
xchg
push
cmp
push
out
std
jl
mov
or
nop
push
cmp
inc
rolb
ja
popf
mov
xchg
cmpsl
movsb
cmp
and
or
fistpl
out
gs
xchg
or
sbb
mov
pop
ud1
sti
mov
outsb
jge
xchg
nop
add
ret
xchg
lock
call
mov
jne
mov
pop
lahf
lea
dec
dec
in
and
dec
add
aas
sbb
dec
push
pop
cmp
cmp
test
dec
mov
sbb
stc
cmp
push
arpl
xchg
mov
in
pop
popl
mov
cmpsb
jmp
aaa
loope
cli
jmp
mov
lock
fiaddl
mov
pop
jbe
pop
mov
test
pop
insl
out
pop
sub
lods
imul
lret
lds
js
hlt
lods
jmp
das
fildl
xchg
inc
push
lahf
lcall
pop
out
xchg
pop
inc
shl
lcall
aaa
mov
bound
orl
inc
mov
mov
jae
add
pop
and
mov
fcmovne
fdivrs
mov
xchg
jno
mov
out
fsubrl
pop
outsl
jbe
push
pop
stos
fwait
xor
in
mov
out
sbb
sub
push
mov
mov
lcall
lock
sbb
xchg
xchg
xchg
cmp
inc
cltd
push
inc
adc
stos
outsl
inc
cmc
mov
addr16
push
xor
dec
pushf
jno
xchg
mov
out
outsb
daa
dec
jmp
testl
ss
adc
ret
push
mov
aad
outsb
outsl
mov
mull
mov
mov
xchg
lods
repnz
cld
outsl
roll
lret
leave
jno
jl
mov
loopne
xchg
scas
inc
ret
mov
and
lret
clc
cmpsb
loop
nop
xor
add
push
outsb
cmpsb
mov
push
mov
xchg
imul
jns
mov
icebp
int3
rorl
rcrl
lods
cmp
out
jle
sbb
sbb
cmp
xor
les
movsb
mov
in
icebp
push
jno
insb
stos
aaa
aaa
add
mov
push
int3
lret
ljmp
out
loope
insb
dec
inc
jns
mov
std
cmpsl
aas
rcrl
xchg
dec
mov
arpl
xchg
inc
cmc
cmc
test
add
dec
inc
pop
mov
fbld
inc
xlat
in
and
mov
pop
movsl
mulb
jnp
iret
mov
xor
addr16
adc
mov
dec
scas
leave
xchg
push
push
std
out
dec
dec
fsubr
inc
mov
lret
xor
jae
sub
mov
ret
mov
cli
ljmp
adc
and
push
nop
push
mov
fwait
sub
outsb
lahf
jbe
incl
inc
cld
stc
subl
add
xor
int
push
in
pop
lock
repz
mov
inc
mov
shlb
xchg
nop
add
fnstcw
sahf
sub
xchg
cmpsl
jle
ljmp
sahf
clc
sbb
mov
ret
jb
sarb
xchg
jle
sahf
jmp
sbb
stc
cmp
sbb
test
aam
js
lcall
lret
sbb
xchg
aas
bound
push
in
adc
stos
mov
cltd
pusha
lretw
imul
daa
cmp
mov
dec
pop
lret
push
insb
push
lods
rcr
xor
cmp
push
insl
daa
aam
cmp
cmovge
pushf
mov
push
xlat
imul
pushf
cli
push
sbb
dec
aam
sbb
cmp
mov
xchg
jbe
decb
aam
cmp
test
mov
rcrl
jmp
popa
dec
popf
and
dec
cwtl
in
xor
in
dec
mov
loop
jns
xor
or
cmp
inc
or
mov
lods
mov
in
mulb
xchg
jecxz
movsl
pop
enter
cmpsb
lock
inc
sbb
inc
movsl
fmull
loopne
push
mov
mov
lahf
fidivs
prefetch
pop
xor
add
out
adc
ljmp
and
add
addr16
aam
inc
stc
add
cs
clc
and
fisttpl
mov
xor
dec
dec
push
das
ja
push
clc
shld
enter
fs
iret
stc
or
push
or
xchg
icebp
push
jle
test
lahf
test
lcall
stos
adc
jbe
faddl
sub
push
daa
mov
xor
xchg
cmp
lea
mov
rol
outsl
lahf
clc
mov
push
push
lret
imul
dec
cld
cmp
jo
push
hlt
mov
and
test
xor
dec
in
xchg
pop
insb
addr16
pusha
in
jg
inc
int
mov
push
dec
or
outsl
int3
lret
push
imul
inc
fimull
mov
lret
mov
xchg
jecxz
sbb
fistpl
insl
scas
dec
jl
push
mov
sub
lods
enter
mov
stc
aad
dec
dec
cld
mov
cmp
imul
scas
pop
aaa
mov
jge
popa
mov
xor
in
insb
sub
mov
js
or
dec
adc
or
dec
lods
sub
push
xor
or
jne
fcmovne
loop
rorb
mov
scas
mov
mov
or
jae
jle
nop
xchg
mov
add
mov
adcb
mov
retw
flds
push
sbb
xlat
push
xchg
jmp
iret
cwtl
ret
fstpt
inc
push
js
sbb
dec
pop
data16
popf
adc
fisubs
aad
xor
jge
call
add
loope
int3
cli
les
cmpsl
in
mov
loop
daa
je
adc
xchg
out
add
mov
mov
push
adc
stos
cmp
or
pop
inc
loopne
stos
jp
jmp
mov
das
movsb
cmpsl
sbb
popa
es
or
xor
stos
aam
in
lds
loop
outsl
inc
dec
add
lods
sbb
mov
test
adc
js
es
stos
inc
addr16
ja
clc
imul
test
bound
mov
cltd
sbb
xchg
mov
xlat
roll
out
jne
pop
or
cmp
push
sub
pop
pop
mov
and
cmp
fwait
and
xlat
fsubr
pop
push
sub
aad
jmp
cmpsl
testb
jp
jle
inc
movsb
iret
divb
push
sahf
cmp
stos
pop
out
sbb
es
int
xchg
fsubl
adc
jae
test
xchg
in
mov
test
mov
nop
mov
push
iret
test
mov
clc
mov
push
shl
pop
cli
js
sti
mov
lods
adc
cmpsb
lock
jne
adc
xchg
cmp
dec
add
in
ljmp
loopne
cli
cmp
pop
cmp
jae
adc
add
jns
jmp
xchg
leave
fldl
insl
pop
jg
and
xchg
dec
shr
pop
xor
fcomp
mov
bound
pop
cmp
inc
mov
arpl
dec
push
imul
xor
out
pop
cmpsb
les
scas
std
out
in
in
inc
sbb
cmp
jo
shl
mov
out
ds
inc
mov
mov
gs
out
xchg
mov
hlt
sub
cld
sbb
cmpsl
mov
add
cmpsl
stos
mov
ljmp
sub
insb
sti
xchg
jge
fwait
cmpsb
jg
xchg
out
pop
jp
pop
cmp
or
dec
cmp
in
push
xchg
push
ret
mov
pop
inc
scas
lret
stos
rorl
sahf
and
test
and
dec
mov
inc
jb
leave
mov
iret
mov
imul
out
inc
lods
cwtl
pop
jecxz
sbb
popa
mov
dec
aam
xor
popl
push
jmp
sub
and
add
xchg
sub
jmp
aam
jo
add
add
mov
pushf
cmc
xor
insb
ds
or
lea
push
jb
mov
pop
adc
push
jecxz
add
insl
cmpsb
fwait
sti
std
lcall
icebp
adc
xchg
cltd
das
jmp
and
pop
out
orl
push
or
inc
clc
sub
fists
je
popa
insb
test
gs
inc
jmp
std
and
jae
mov
sbb
into
insb
push
inc
sahf
stos
lock
popf
cmp
mov
in
lahf
push
daa
cmp
xor
ret
mov
int3
mov
out
cmpsb
lock
je
fistps
andb
sub
in
pop
outsl
push
dec
in
xchg
and
xchg
jg
add
jb
xchg
jne
jle
add
int
pop
mov
in
in
inc
aaa
mov
test
adc
mov
xchg
loopne
stc
adc
inc
sbb
sbb
pop
scas
mov
fsubs
std
mov
jecxz,pt
scas
xchg
bound
sarl
jge
jmp
sub
daa
mov
lock
enter
jo
das
mov
cmpsl
jp
dec
or
int
add
in
cmpsb
adc
cmpsl
mov
sub
add
or
jl
add
lock
pop
pusha
mov
movsl
aaa
sub
jb
push
aas
rcll
jnp
xchg
stos
and
jb
mov
addb
ret
dec
adc
and
mov
lods
ljmp
ret
out
push
negl
call
and
sub
xchg
jbe
mov
jg
mov
imul
cwtl
mov
xchg
inc
inc
inc
repnz
and
loop
inc
in
mov
mov
jmp
out
subl
dec
pop
in
pop
shrl
jbe
loop
out
xchg
std
cltd
lcall
loopne
fsts
mov
lcall
cwtl
inc
outsb
mul
jg
sub
fldt
mov
cmp
push
push
mov
cmp
or
stos
mov
push
cmpsl
sbb
dec
cs
and
call
pop
in
ret
lock
xlat
mov
or
sub
xchg
pop
clc
cmp
pop
jmp
xchg
test
cltd
dec
or
or
mov
cmp
and
out
inc
mov
in
hlt
xchg
adc
xchg
adc
ja
adc
ret
leave
inc
negl
cli
cs
xchg
shrl
movsb
std
dec
popa
dec
sub
dec
xchg
repz
jb
scas
inc
stos
sbb
int
or
mov
and
stos
fistpl
inc
test
rorb
shl
enter
and
adc
add
lock
lcall
stos
sbb
jmp
push
inc
lods
call
xor
add
es
das
mov
aam
cld
and
pop
shl
mov
push
mov
enter
adc
and
jns
cld
jnp
test
xchg
mov
ficomps
cwtd
stc
or
mov
cli
push
sub
jg
insl
out
rcrl
pop
add
mov
jmp
or
sub
push
pop
aaa
js
jns
fucom
push
sbb
mov
frstor
xchg
loopne
pop
clc
fucomi
adc
dec
aaa
bound
test
filds
out
dec
pushf
mov
out
je
pop
lret
pusha
rcrl
or
fidivs
cmp
jns
mov
dec
jno
mov
sub
loop
ret
or
es
and
push
sbb
mov
xorb
pop
cmpsb
xor
cmp
psrlq
dec
pop
adc
cli
cld
sbb
pop
je
and
mov
mov
icebp
jl
xchg
mov
mov
and
rolb
or
adc
std
sbb
cmp
mov
xor
push
idivl
mov
inc
pop
xor
mulb
pusha
pop
sbb
xor
pop
sahf
test
push
push
fwait
push
test
lret
inc
pop
lods
enter
dec
fcomip
cmc
loope
mov
cmp
dec
add
sub
cmp
addl
pop
add
add
cmp
and
sti
jl
clc
cmp
test
cltd
jnp
fildll
push
cmp
jl
je
jnp
xor
popf
xchg
dec
les
dec
mov
ret
les
sub
je
inc
fstpt
xchg
cmp
pusha
popa
shrb
jecxz
lods
push
testb
in
pusha
ljmp
xlat
stos
pop
jne
push
ja
ds
sbb
je
rclb
and
fistps
dec
and
jp
scas
ret
gs
mov
or
in
jnp
mov
loopne
repz
mov
leave
cmp
cld
dec
sbbb
data16
cwtl
sarb
pop
loope
out
ds
push
cld
sbb
xchg
repnz
imul
stc
lahf
negl
adc
jge
out
pushl
jecxz
cmp
jecxz
inc
out
leave
aad
aaa
iret
ds
jmp
pop
lock
fildll
insb
fsubr
imul
cmp
jne
add
adc
test
or
ret
insl
mov
add
mov
flds
push
dec
dec
in
pop
sbb
xchg
testb
lds
repz
adcb
mov
sbbl
mov
push
mov
jge
cmp
pushf
and
adc
add
ss
ja
cmp
mov
fnstcw
pop
mov
adc
jg
hlt
sahf
xor
sahf
inc
scas
xchg
or
test
fdivrs
or
xor
scas
pop
push
scas
popf
and
sub
mov
out
dec
imul
xchg
stos
outsb
inc
lods
jne
sub
adc
sbb
and
lret
or
push
das
jo
fcmovb
lcall
clc
out
add
fdivrs
orl
xor
pushf
xchg
mov
sub
arpl
or
xor
push
movsb
scas
stc
test
scas
jb
jp
mov
inc
inc
mov
jo
mov
imul
insb
cltd
lock
int
mov
xor
enter
icebp
loopne
loopne
daa
jle
add
lods
test
jne
adc
mov
cmp
mov
mov
pop
dec
pop
jae
or
sub
bound
or
das
pop
in
lcall
pop
mov
lods
mov
es
xchg
fdiv
pop
bound
mov
out
inc
and
insb
jl
mov
cmp
jmp
idivl
dec
push
pop
jne
pop
sub
leave
loopne,pt
pop
push
push
add
xor
ss
cmp
js
sbb
xchg
sbb
jmp
and
mov
lods
adc
movsl
xchg
mov
mov
outsl
jge
dec
addl
and
push
mov
cmc
imul
fistl
xchg
in
out
stc
daa
lods
mov
sub
cmc
sbb
sarb
hlt
sub
mov
lcall
stos
jo
pop
ljmp
in
cmpsl
clc
push
pop
es
cmp
xor
inc
pop
call
dec
mov
cmp
adc
add
movsl
add
movsl
xor
ljmp
push
mov
loope
test
movsl
testl
adc
push
mov
adc
int3
icebp
mov
fstl
xchg
iret
dec
aas
dec
mov
mov
jg
adc
outsb
inc
mov
in
cwtl
dec
cli
jbe
pop
test
xsha256
sub
mov
popl
ljmp
test
and
push
sub
push
lds
and
pop
cmp
jecxz
rcrb
and
adc
shll
push
adc
lret
cmp
sbb
and
jo
das
out
sub
xor
xchg
push
imul
mov
push
xchg
stc
sbb
and
sbb
aaa
push
sti
cmp
push
ret
dec
xchg
rcl
push
popa
jbe
mov
pop
adc
test
not
and
popa
stos
cmp
out
xor
shlb
loopne
and
fs
mov
adc
mov
jecxz
xchg
inc
shlb
mov
push
add
pusha
divl
sarl
pusha
ljmp
xchg
xor
cld
outsl
add
pop
xchg
or
mov
out
out
scas
add
daa
outsl
ljmp
stos
and
repnz
push
imul
cmp
push
pop
mov
mov
pop
sub
scas
stos
repnz
daa
sub
lods
inc
inc
out
insl
adc
xor
mov
pop
pop
ret
mov
sahf
stos
mov
pop
mov
fwait
inc
test
inc
sub
cmp
jbe
xchg
cmp
adcl
jg
idivb
out
mov
ficoms
adcb
push
pop
mov
push
mov
jp
test
cmp
aas
js
daa
pop
roll
xlat
fdivr
iret
mov
push
mov
push
hlt
loop
cwtl
sub
mov
test
gs
adc
je
ret
lods
mov
mov
or
out
and
imul
jecxz
sbb
scas
pop
mov
fsubr
inc
sbb
test
fnsave
xchg
mov
adc
lret
mov
mov
fsubs
lcall
xchg
es
pop
mov
push
loop
xor
test
xchg
cmc
pop
sub
mov
sahf
mov
ljmp
imul
hlt
cmp
gs
cmpsb
push
cmp
mov
add
pushf
xlat
lods
dec
ficompl
std
in
or
xchg
fs
subl
cmp
fsubl
orl
and
dec
out
jo
xor
xor
push
xchg
adc
rorb
lret
aas
inc
lods
add
and
movsb
ror
push
loope
xor
pushl
cs
clc
inc
pop
xchg
subb
dec
xchg
out
je
jae
das
outsb
sbb
mov
mov
add
push
add
pop
jo
decl
xchg
bound
add
inc
ljmp
into
mov
scas
mov
fildll
cmp
mov
mov
lret
adc
testb
lods
adc
lahf
daa
and
iret
and
push
daa
mov
mov
mov
adc
cmpsl
ret
cmp
ljmp
mov
scas
jo
push
inc
lret
sti
scas
cmp
scas
fldcw
in
inc
xlat
mov
adc
push
imul
pop
cmp
lcall
aas
into
mov
fidivrs
sub
inc
lods
and
xchg
sbbb
dec
add
sub
fs
repz
jo
lea
in
cmp
dec
mov
mov
nop
das
dec
or
stc
push
fstpt
jecxz
stc
push
fwait
repnz
aaa
or
jmp
or
jg
mov
sub
fnsave
mov
shrl
scas
push
test
mov
inc
mov
mov
fisttpl
flds
pop
adc
mov
cld
test
push
call
mov
add
xchg
mov
inc
xchg
cmp
push
lcall
js
in
hlt
sbb
sub
cmc
mov
scas
loope
cmpsl
lds
pop
rcl
mov
add
testb
jmp
push
stc
xchg
idiv
mov
fistpl
enter
mov
out
test
mov
cld
test
rcl
pushf
jle
into
hlt
mov
scas
out
lods
jecxz
sti
xchg
popa
xor
jge
das
loope
lods
out
jp
add
jnp
in
lahf
lods
sbbb
imul
out
sbb
cs
sbb
jne
movsb
mov
cmc
pushf
sbb
icebp
ret
mov
push
mov
push
icebp
add
cmp
shrb
sub
inc
push
gs
mov
test
cli
mov
add
mov
fcoml
lods
sahf
lock
or
cli
adc
inc
pop
and
cltd
testb
sar
dec
mov
xchg
test
sbb
dec
out
jae
sub
jecxz
icebp
jp
sub
das
xor
scas
xchg
stos
mov
or
inc
mov
or
mov
lock
pop
lods
or
pop
std
adc
jl
pushf
cs
push
or
js
jp
or
xchg
ja
push
mov
dec
fsubs
gs
or
pop
mov
scas
jns
fwait
aas
push
and
xchg
xchg
lods
int
cmc
mov
xchg
iret
mov
iret
mov
or
mov
out
stc
dec
xor
stos
jmp
rol
jl
fwait
popa
repz
mov
idiv
icebp
or
push
push
mov
loopne
enter
mov
repnz
mov
xor
pop
mov
add
dec
mov
and
outsb
push
iret
adc
mov
inc
nop
in
outsl
aam
out
xor
movsl
popa
cld
xchg
push
xlat
jmp
mov
sbb
add
cmpsb
lcall
das
mov
jg
xor
pop
and
scas
mov
dec
aad
dec
add
push
push
ret
test
in
inc
push
sbb
and
mov
std
sahf
mov
and
jno
jle
iret
add
gs
icebp
mov
dec
int3
enter
in
popa
mov
icebp
test
cmpsb
add
pop
mov
ss
push
test
fcomi
scas
dec
cmp
mov
cs
mov
inc
ret
pop
into
loop
movsb
push
dec
test
cmpsb
jg
push
shr
ljmp
je
pop
inc
int3
fidivs
frstor
call
dec
dec
push
adc
neg
je
in
fsts
ret
cmp
jb
shlb
sbb
push
jae
lahf
ljmp
lods
clc
jnp
addr16
adc
ret
daa
sbb
in
test
push
sub
push
sbb
int3
sub
mov
cmp
pusha
leave
mov
clc
dec
mov
jns
lods
sarb
sahf
lret
hlt
mov
in
shrb
dec
mov
add
ret
fs
outsb
pusha
lret
rep
scas
and
adc
arpl
es
push
call
pop
pop
pushf
mov
dec
pop
mov
jmp
sub
cltd
pop
xchg
xchg
lods
mov
mov
jle
fldenv
cld
aad
arpl
jo
arpl
inc
std
mov
adc
mov
dec
stc
popf
in
pop
sbb
movsl
mov
repnz
std
clc
sub
xor
jp
into
scas
lret
insl
test
cld
xchg
addr16
pop
subl
clc
fisubrs
cmpsl
mov
imull
adc
les
cwtl
loope
dec
pop
inc
dec
mov
push
push
lret
stc
popf
fs
jne
mov
fwait
adc
xchg
xchg
cmc
call
sub
pop
fildl
mov
lea
addl
or
pop
mov
lcall
arpl
or
adc
xchg
ret
inc
loope
hlt
loope
lock
add
nop
movsl
daa
cmp
xchg
pop
test
icebp
mov
jnp
rclb
push
jnp
mov
out
into
xchg
mov
xor
xchg
pushf
movsl
mov
ds
bound
xchg
and
xor
pop
sbb
cld
rcr
insl
inc
and
cs
int3
inc
cmpsl
xor
sbb
into
adc
imul
lea
cmp
xchg
adc
push
subb
sbb
dec
jge
xor
cs
xor
mov
loope
mov
mov
rcrl
popf
xchg
out
in
mov
imul
ja
es
push
aam
pusha
jbe
push
test
push
pop
pushf
cmp
outsb
lret
fistps
sbbl
out
add
push
add
cmp
jb
lods
aaa
ja
push
mov
scas
cmpsb
mov
fwait
popa
mov
stos
iret
inc
enter
call
fwait
pop
mov
push
cmp
inc
inc
push
mov
popa
pop
and
dec
sbb
pop
int3
daa
hlt
push
daa
push
xchg
icebp
xchg
pop
push
out
pop
jno
xor
inc
outsb
mov
inc
and
cs
clc
or
aam
or
cmp
fsubrs
fisubrl
or
inc
mov
xchg
orl
dec
lahf
mov
or
and
mov
iret
je
xchg
sub
jae
mov
sbb
sub
inc
dec
inc
pop
clc
xor
adc
pushf
test
sbb
push
out
mov
dec
and
mov
mov
xchg
mov
cmp
test
test
pop
jmp
je
loope
popa
sahf
out
mov
out
push
push
push
cmp
jbe
hlt
pop
shl
mov
les
xor
scas
jb
jg
int3
push
lods
mov
inc
test
dec
dec
push
add
call
add
cmc
mov
jo
ljmp
xchg
scas
or
in
mov
inc
movsb
clc
push
pop
mov
push
cmp
outsb
adc
jmp
pop
cmp
aam
pop
xchg
idivb
sahf
fcomi
cmpsl
mov
pop
in
cmp
int3
sahf
insb
jle
stos
daa
cli
pop
test
pop
push
jmp
fwait
mov
pop
sbb
or
cmp
xchg
push
dec
mov
stos
xchg
sbb
pushf
sbb
adc
sbb
fmuls
imulb
add
add
mov
push
mov
lret
lock
mov
xchg
movsb
mov
shll
and
fs
out
and
or
jp
sti
js
mov
mov
add
cmpsb
mov
push
test
lods
pop
xor
mov
test
rcll
sub
clc
or
and
loop
xlat
and
das
sahf
dec
es
inc
jle
jle
cmp
jnp
inc
cmp
push
pusha
les
pop
xchg
and
mov
idivl
mov
mov
push
pusha
testl
movsl
cs
dec
xor
mov
lods
jno
jno
addr16
es
loop
out
xor
fildl
addl
popl
sahf
push
mov
scas
and
mov
add
lock
popl
lds
in
scas
xchg
mov
fdivs
xor
push
sub
xor
testl
jl
dec
mov
sbb
inc
mov
out
pop
and
cmp
pop
mov
les
push
and
jno
gs
pop
testb
iret
and
popa
cld
mov
loopne
xchg
add
testb
bnd
repz
xlat
sbb
jae
xchg
xlat
sbb
mov
fbld
imul
mov
mov
out
in
and
push
into
lods
mov
fldt
mov
pop
add
cmpsb
mov
mov
dec
adc
mov
cmp
and
mov
jle
int
cwtl
push
ljmp
mov
call
test
jno
lahf
jnp
test
data16
mov
cmp
ja
sub
push
lcall
movsl
add
fsubs
push
jmp
out
jmp
rolb
or
jae
or
push
mov
test
sbb
js
lods
xor
popa
inc
add
gs
adc
test
xorb
xor
cli
daa
pop
jg
test
sahf
icebp
test
into
pop
pushf
push
mov
jp
push
xor
adc
inc
mov
inc
popa
hlt
fldcw
pop
sub
jno
jge
and
cli
mov
fsubl
push
fsubl
gs
jo
loopne
outsl
xchg
stos
cld
inc
mov
fcmovne
mov
add
ds
adc
mov
xchg
push
mov
fwait
scas
movsb
out
sbb
icebp
pop
mov
inc
push
lahf
pop
jo
xchg
pop
jbe
mov
mov
mov
push
cld
inc
and
and
clc
out
xor
stc
rcl
push
mov
inc
pop
push
andb
sarl
add
fsubs
sub
out
pop
ja
aas
mov
and
dec
inc
dec
push
ds
or
rcll
in
stos
and
pop
cmpsl
stos
sub
into
add
mov
inc
inc
sbb
dec
stos
cmp
addr16
mov
les
cs
bound
out
fcompl
ret
mov
icebp
movsl
jnp
loope
and
lds
test
inc
into
xchg
test
mov
cmpsb
mov
lea
cmpsl
mov
fmuls
roll
sub
xchg
ss
and
xchg
and
and
lods
sbbl
xchg
pusha
mov
dec
shll
clc
out
inc
gs
pop
outsl
daa
mov
push
xchg
sub
sub
daa
sbbl
xchg
pop
notb
mull
inc
cmp
cld
inc
mov
mov
outsb
jecxz
aas
jp
adc
or
cli
add
jle
jbe
inc
out
inc
cli
mov
inc
xlat
ret
inc
je
mov
adc
jae
mov
lret
xor
pushf
insl
mov
out
pushf
ds
fnstenv
repz
lock
insl
movl
mov
mov
or
mov
mov
sub
cmpsl
push
pop
in
lds
mov
adcb
mov
int3
fcmovnbe
js
call
or
movsb
xchg
movsb
cmp
std
ffree
or
repnz
fxch
dec
or
add
and
cwtl
shrl
rclb
fs
jle
push
push
jo
scas
aam
or
lahf
xor
cmp
fwait
out
nop
daa
pop
andb
jns
inc
xor
xor
ret
movsb
cmpsl
inc
rclb
in
sti
jbe
clc
cmpsl
sbb
push
xchg
add
sarb
shrl
lds
stos
dec
pusha
fnsave
daa
jmp
pusha
scas
and
addr16
pushl
sbb
mov
adc
stos
subl
lahf
push
adc
subb
lret
xlat
inc
icebp
jl
jne
outsb
lods
xchg
adcb
into
mov
mov
outsb
mov
sbb
dec
mov
pop
sbb
xchg
push
jmp
mov
js
ret
xchg
adc
add
adc
cmp
divb
ss
xchg
or
shlb
xchg
sub
lock
clc
sti
mov
sub
jae
mov
pop
dec
inc
movsl
repnz
dec
fs
mov
push
mov
fcmovnu
aaa
dec
push
jg
pop
out
rcrl
xor
ljmp
mov
xchg
mov
in
jnp
into
outsb
push
divl
inc
dec
int3
or
xor
pop
fs
insl
sub
push
test
in
les
pusha
dec
loope
jbe
test
xchg
jne,pn
ja
jl
ret
imul
inc
ror
int
out
push
int
mov
int
shlb
fldl
sub
xchg
das
xchg
sbb
sbb
sub
cmc
addr16
xchg
dec
cmpsl
dec
push
call
lcall
xor
cmpsl
sub
inc
shll
cli
out
out
das
call
mov
std
mov
xor
mov
ror
add
decl
icebp
and
rclb
into
jne
outsb
pop
imul
adc
and
test
sub
in
push
dec
ret
icebp
loope
push
xchg
dec
cmp
rolb
int3
std
xchg
pop
das
ljmp
outsb
pop
fnstenv
add
xor
stos
ljmp
jbe
sbbl
xchg
call
mov
dec
lcall
jno
pop
mov
bound
icebp
mov
out
in
jp
sub
test
sub
in
fbstp
insb
pop
das
sahf
xchg
cmpsl
ds
cmp
lds
xor
data16
or
test
pop
sbb
mov
in
sti
into
push
dec
pop
sbb
sub
js
rcrl
aam
jne
imul
xor
fldcw
adc
cmp
movsb
test
mov
xchg
cmpsl
sbb
xor
sti
scas
cwtl
mov
pop
sbb
cmpsl
and
rorb
rcl
pop
mov
dec
into
jns
data16
lret
hlt
xlat
dec
or
cmp
sbb
lds
fcmovb
insb
das
cmp
psadbw
in
lock
sub
int3
pop
je
push
push
insb
sub
sbb
pop
mov
addr16
clc
sbb
cmpsl
pop
xor
scas
jle
pop
je
jge
idivl
dec
cmp
or
loope
mov
xchg
hlt
xchg
in
test
add
or
es
jbe
adc
arpl
test
jae
fstpt
cmp
pop
cmp
shl
adc
out
mov
mov
aaa
jno
imul
scas
push
inc
add
jnp
addr16
xchg
scas
inc
pop
push
mov
cmpsl
leave
add
push
ja
sbb
out
test
or
sub
lock
mov
loopne
xlat
xchg
fldl
mov
in
pop
push
cltd
hlt
andl
xlat
daa
ja
push
jbe
mov
arpl
mov
bound
es
mov
inc
or
adc
test
dec
adc
loope
xlat
jge
push
jle
fisttpl
fsubrs
dec
pusha
fdivrl
shlb
fdivrl
cli
sub
pusha
das
mov
mov
lret
jmp
jb
rol
into
scas
test
sti
jl
fstps
cwtl
decb
mov
mov
mov
das
lret
scas
out
sub
push
cmp
mov
dec
fwait
mov
pop
lcall
jmp
out
ljmp
gs
int3
nop
inc
cld
dec
push
mov
pop
jge
sbb
jnp
imul
ljmp
inc
push
or
and
pop
pop
jge
ja
fbstp
pop
je
mov
xlat
fidivs
push
and
sbb
push
sbb
faddl
add
sub
dec
pop
and
and
test
inc
add
cmp
push
insb
push
and
push
inc
xor
jb
adcb
scas
mov
mov
lcall
iret
insl
loopne
xlat
xchg
pop
mov
mov
cmp
mov
shrl
dec
pop
cmp
add
inc
test
jmp
push
push
fsubr
sub
add
lret
cmp
pusha
clc
push
mov
pop
imul
clc
out
stos
daa
xchg
testb
ljmp
sbb
lock
sub
imul
mov
mov
sahf
lds
push
cmc
mov
adc
in
inc
js
mov
sarl
daa
mov
dec
pop
int3
insl
pop
aaa
les
bound
inc
sub
rep
sub
and
test
adc
pushf
ss
xchg
inc
mov
nop
fidivrl
jmp
std
pop
inc
aad
ja
push
and
or
mov
pop
into
enter
popa
mov
andl
loop
outsb
loope
scas
loop
cs
jb
lods
xor
pushf
xorb
scas
jae
cs
push
sub
adc
out
in
jl
cmp
in
jnp
mov
push
dec
add
lds
jge
xor
pop
lret
cmpsb
dec
mov
push
lods
pop
and
into
mov
mov
and
lret
lret
sbbb
leave
push
ret
xor
pop
movsl
push
jbe
je
repnz
xor
xchg
lea
xchg
clc
lret
and
adc
mov
ret
push
fucomip
mov
scas
cli
jo
movsb
pushl
fnstsw
iret
and
in
out
xor
insl
test
xor
push
icebp
inc
fucomip
adc
push
xor
jl
movsl
cmp
in
or
xchg
cmp
mov
xchg
ds
bound
in
mov
cmp
movsb
or
adc
clc
cmp
dec
sub
scas
test
xchg
sarl
mov
mov
sti
arpl
aam
mov
jb
out
mov
addr16
stos
inc
lods
sub
int
lret
xor
aas
lods
mov
sub
arpl
loop
incl
jno
inc
push
adc
mov
fisttpll
inc
rolb
xor
inc
out
je
xchg
lods
dec
sbb
mov
pop
dec
outsb
std
insl
clc
dec
fdivrs
sbb
and
mov
popf
dec
xor
push
cmp
movsl
in
mov
ss
sbb
test
addb
shl
push
bound
rcrl
mov
xchg
sub
sub
jb
mov
dec
scas
pop
and
xor
arpl
test
ja
inc
mov
ja
jl
orl
cmp
mov
mov
fisubs
iret
and
lret
mov
aad
lods
mov
mov
les
loop
pop
loopne
xlat
das
mov
arpl
jns
int3
lret
sbb
out
ss
icebp
ret
xchg
mov
out
fidivl
stos
or
aam
clc
into
and
fidivl
aaa
inc
fsubrs
sti
xchg
cs
rol
dec
sbb
sbb
mov
jo
cmp
imul
ljmp
and
sbb
imul
movsl
cmp
jmp
out
pop
ret
fimuls
fldt
push
cmp
test
cli
stos
jecxz
bound
mov
es
int3
stos
inc
fs
divb
out
jge
jae
xor
fs
ds
xchg
inc
adc
clc
adc
pop
mov
dec
mov
ret
pop
sahf
hlt
movsb
mov
outsb
inc
mov
stos
pop
jb
pop
sub
xchg
or
movsl
cmp
sub
pop
inc
ds
movsb
mov
test
pop
repz
xchg
das
mov
mov
adc
out
fsubr
pop
and
lahf
fidivrs
popa
adc
shrb
xor
push
sub
jp
in
enter
jb
stc
sarb
pusha
ja
fists
clc
dec
push
lods
add
out
sub
cld
cmp
mov
mov
mov
jae
add
xorl
out
imul
ljmp
sbb
cmpsb
jl
fbstp
push
bound
leave
xlat
mov
sbb
leave
inc
test
jae
mov
or
push
xor
mov
pop
xchg
fucomp
cmp
push
cli
mov
mov
inc
xor
fwait
das
imul
sbb
pop
xor
push
push
and
push
sbb
fistpl
aad
movsl
stos
inc
xlat
icebp
pop
xor
dec
dec
fistpll
mov
std
jbe
or
dec
lahf
sub
iret
jo
cmp
dec
shll
add
cmc
adc
pop
ror
inc
xchg
xor
pusha
xchg
jb
mov
repz
cltd
in
nop
push
pushf
out
jge
add
and
fdivrp
or
loop
lods
test
xlat
pop
cmp
fidivs
sbb
loopne
into
adc
repz
movb
add
push
in
shll
jecxz
mov
test
xchg
divw
sub
cmp
mov
dec
add
shl
jp
cmp
adc
push
dec
iret
iret
pushf
popf
clc
or
out
jmp
ljmp
aas
data16
cmp
cmpsb
mov
shrl
fs
mov
dec
pop
js
shll
mov
pop
and
or
outsl
divl
loopne,pn
je
aaa
mov
fsubl
sbb
out
mov
testl
inc
fidivrl
test
pop
outsb
mov
push
outsl
jnp
dec
mov
sar
andb
inc
adc
rcrl
push
rcrb
movsl
dec
movsl
push
sbbl
jmp
movsl
push
in
sub
inc
pop
sub
jno
cmp
mov
aam
sbb
mul
push
and
cli
lret
fistps
stos
cmp
stos
mov
mov
aam
aas
dec
lcall
adc
jbe
dec
fsubr
jl
rcrb
sbb
sarb
mov
jg
cmp
in
mov
mov
sbb
or
and
pop
push
dec
popa
jnp
mov
call
xlat
lods
orb
pushl
mov
xchg
sbb
and
mov
lock
mov
dec
loopne
or
pop
ja
sbb
mov
movsb
cmp
pushf
ret
sub
test
in
cmp
and
aad
xchg
mov
push
xchg
cmpsl
ds
push
adc
sbb
pushf
js
jb
adc
ss
dec
stc
mov
in
fmulp
in
lods
mov
jo
dec
lret
xor
mov
sbb
scas
stc
fnstcw
mov
int
mov
icebp
imul
pop
xor
int
lods
bound
xchg
pop
jb
adcb
jle
inc
and
roll
jno
cld
xchg
mov
sbb
inc
insb
jg
sahf
and
and
mov
insl
mov
ret
call
pusha
mov
add
jg
lea
cld
mov
filds
adc
mov
dec
outsb
fs
aam
stos
std
mov
mov
icebp
adc
out
fsubl
lods
in
adc
loopne
mov
push
fadd
add
cwtl
cltd
sarl
fimuls
cld
stos
shll
mov
dec
in
les
sub
iret
loop
pop
cltd
mov
aam
jno
test
push
and
mov
xchg
cmp
pop
cli
mov
cmp
mov
push
dec
pushf
ljmp
in
push
notl
inc
ds
outsl
xor
push
mov
or
mov
enter
mov
mov
pop
and
jecxz
mov
nop
adc
mov
in
mov
loopne
aaa
cmp
lcall
inc
arpl
sarb
add
sub
push
add
out
cli
jo
sub
push
loopne
pop
push
or
pusha
mov
in
pop
sbb
je
jg
fs
inc
fidivrs
andb
mov
lods
adc
pop
xchg
fiaddl
add
pop
popf
jmp
inc
in
mov
pop
sbb
orl
pop
fbld
pop
pop
in
cmp
rcl
xor
cmp
push
mov
jns
and
sub
mov
and
jbe
sub
fwait
push
outsl
leave
cmp
xchg
jmp
fwait
daa
and
fucomp
aas
test
pop
push
mov
ret
dec
push
ljmp
jns
mov
jp
mov
call
jp
mov
shlb
push
sbb
loop
mov
ljmp
xchg
in
mov
pop
sub
inc
clc
test
rcrb
jle
inc
sbb
sti
movsl
cmp
sbb
test
test
in
loop
cltd
in
fiaddl
mov
std
aaa
cmpsl
xchg
and
mov
lea
jnp
or
fstpl
inc
sub
sub
fwait
lcall
icebp
insl
clc
bound
xchg
mov
dec
cmp
and
mov
movb
inc
sbb
xchg
pop
or
inc
and
outsl
xchg
mov
and
sahf
sahf
and
imul
sub
lock
nop
and
arpl
jo
lods
je
lods
jge
push
push
mov
push
iret
call
rcll
das
ret
jnp
sahf
xor
or
and
insb
cld
shr
insl
nop
stc
rorl
adc
out
adcb
adc
mov
cwtl
and
adc
sbb
pushf
sub
cmp
and
arpl
lods
stos
divl
popf
mov
adc
xchg
jl
push
jl
shrl
shlb
jnp
dec
inc
testb
cs
lock
jno
cmc
sub
xchg
dec
dec
sub
dec
shl
mov
sbb
sub
subb
push
repnz
rcrb
sub
inc
push
in
cmpb
cmp
insb
mov
fldcw
sbb
mov
pop
add
jns
rcl
out
stos
daa
pop
push
fmull
mov
sbb
inc
aaa
andb
or
fcmovne
mov
leave
inc
add
lcall
test
in
push
dec
adc
pushf
sahf
push
pop
mov
mov
adc
js
mov
and
dec
inc
xchg
daa
out
call
cld
aas
sbbl
cmp
test
into
mov
or
pop
push
xchg
xor
stos
xor
ljmp
lret
cmp
jmp
hlt
xlat
mov
inc
popf
aaa
mov
inc
xor
pop
mov
movl
movsl
sti
adc
jo
mov
mov
ja
add
mov
inc
mov
mov
ds
lods
outsl
cmp
pop
jno
adc
xchg
jae
es
pop
les
scas
les
dec
xlat
fstps
fnstenv
jo
xchg
mov
cmpsl
mov
and
adc
xchg
sub
mov
stc
mov
rclb
stc
or
in
out
xchg
js
lods
inc
in
imul
push
jge
in
xor
sub
dec
loop
dec
adc
rclb
int3
xchg
daa
es
imul
leave
lock
sub
in
push
xor
add
dec
fsts
lods
fnstenv
cli
mov
in
xchg
js
push
push
sbb
push
daa
int3
push
jecxz
or
gs
push
cwtl
xor
mov
outsb
in
aas
cli
roll
fsubrp
sub
inc
fcomps
ss
es
sub
fucomi
test
aaa
clc
mov
xchg
adc
lods
lcall
jmp
mull
xchg
or
jp
push
fucomp
sub
andb
pcmpeqd
jp
and
ds
iret
in
adc
shll
out
jge
jae
fcoms
xorb
pop
sbb
lods
data16
xchg
mov
ljmp
insb
imul
fnstsw
jb
mov
pop
fisubrs
or
cmp
imul
fbstp
mov
sub
ret
mov
mov
xchg
ljmp
mov
test
decl
and
dec
stos
pop
loop
orl
xor
scas
mov
or
inc
fdivs
jle
cmp
and
subl
and
rclb
dec
cmpsb
xlat
outsb
and
insb
lret
cmc
enter
cmpsb
push
adc
sbb
mov
imul
jae
jnp
stos
stc
popl
jmp
push
jmp
cmpb
sbb
xlat
push
popf
rcr
shrl
mov
xor
out
imul
negb
sub
and
rcll
icebp
cld
mov
rcl
dec
push
call
mov
jo
dec
sbb
adc
mov
lahf
add
lods
xchg
jge
aam
in
sbb
jb
cmp
sub
aaa
aam
jecxz
push
push
lods
add
pop
xchg
insl
rorb
in
jg
arpl
call
mov
ljmp
insb
xor
add
cmpsb
mov
aas
jbe
inc
out
and
aad
adc
in
xor
jbe
in
movb
mov
add
or
sub
dec
mov
pop
xchg
add
push
cwtl
cmp
pop
and
into
inc
mov
jne
cmpsl
dec
mov
push
out
lods
iret
gs
xor
adc
rcrb
bound
cmpsl
pop
outsb
flds
adcl
xor
lahf
fs
aas
xor
pop
subl
rcrl
xlat
adc
outsb
loop
xchg
stc
sub
sub
adc
orl
les
mov
ds
loop
imulb
push
pop
dec
fsubl
lret
test
add
test
push
pushf
and
daa
inc
fmull
outsl
decb
pop
jle
add
pop
cmc
adc
cmp
loop
mov
fld
mov
pop
in
push
orl
insb
and
cltd
sub
cmc
lock
adc
push
mov
sbb
popa
sbb
ficoms
mov
pushf
xor
push
lods
aaa
push
cmpsb
les
xor
ret
fsubs
pop
scas
cmp
inc
je
xor
or
add
jne
xlat
rcrl
xor
pop
push
pop
mov
fimuls
sub
dec
sub
dec
in
data16
aam
movsl
cwtl
in
test
aam
mov
out
xchg
sub
jns
hlt
add
into
or
sbb
loop
ret
add
lods
xor
loop
mov
mov
les
cmp
pop
cli
aam
mov
stos
daa
cmp
fidivs
xchg
in
jl
jnp
xchg
lods
popf
into
incl
jle
movsb
scas
ds
mov
lock
call
testl
mov
xchg
stos
xor
imul
iret
dec
and
pop
lahf
stos
lods
mov
ljmp
cmp
es
mov
push
add
push
outsl
test
cwtl
xor
adc
and
xor
dec
sub
test
inc
dec
mov
xor
sbb
adc
xor
xchg
je
sbb
jmp
push
cmp
cwtl
jno
in
add
fnstsw
jae
cmpsb
adc
popf
xchg
lret
hlt
adc
xchg
cmp
cli
xchg
out
fists
mov
movsl
loopne
and
imul
fisubrl
cmpsl
out
jg
outsl
jnp
inc
xchg
jmp
es
mov
scas
stc
mov
lea
movsb
cmp
imul
mov
aad
add
scas
xchg
mov
addr16
sbb
mov
cltd
sub
lea
cmp
jge
adc
mov
xor
pop
cld
les
out
mov
lret
push
jb
jnp
mov
cmovno
dec
push
push
mov
lret
das
cmpsl
push
fistps
outsl
mov
and
rcl
sbb
mov
mov
jmp
out
in
enter
leave
inc
aas
or
ljmp
es
xorb
push
out
rclb
mov
into
sbbb
push
es
or
popf
xor
out
pop
and
ds
cmpsl
popa
mov
jbe
pop
xor
js
cmpl
inc
add
mov
jo
dec
xchg
test
leave
lea
pop
xchg
sub
mov
mov
jecxz
jg
gs
xchg
xchg
sub
adc
nop
jp
outsb
fcmovnu
cmp
sti
mov
pop
mov
sahf
fnstcw
sbb
mov
dec
mov
lock
or
leave
mov
jg
daa
cmpl
jp
popa
xor
jmp
shl
shlb
push
sahf
aam
rorb
rcrl
pop
sub
jl
jmp
mov
aad
aad
fdivs
mov
xchg
out
iret
sbb
leave
fsubs
les
add
loopne
dec
jbe
add
mov
cmp
add
loop
jae
aam
movsb
les
movsb
xor
or
and
xchg
fwait
jo
sub
call
cmpl
aas
into
in
adc
pop
push
lds
sub
xlat
popf
outsl
in
inc
popf
dec
pop
mov
adc
cmpsl
xchg
adc
lds
mov
aad
js
push
sbb
test
add
pop
and
jl
je
dec
cmpsb
out
fstl
lea
testl
and
sbb
sub
lcall
popa
idivb
sahf
cld
pushf
cmpsl
outsl
add
ret
xchg
xor
pop
sbb
push
cli
or
or
fsubp
jle
test
cmc
ja
iret
cs
adc
and
cmc
mov
xchg
enter
and
or
push
repnz
adc
cmp
push
fnstcw
dec
jno
xchg
mov
mov
fnstenv
adc
scas
cmp
mov
xor
movsb
clc
cmp
sub
and
cmovno
pop
or
nop
insl
mov
pop
mov
mov
shll
sub
sub
sbb
les
notl
push
mov
lds
pop
rorl
pushf
scas
jge
mov
xor
test
out
out
inc
jb
jbe
ja
cs
lea
movsl
and
leave
mov
aas
cli
data16
sub
pop
mov
into
pop
test
movsl
xor
cli
sbb
testb
cli
cltd
inc
dec
ret
adc
mov
ret
popl
sub
repz
into
or
cmp
xchg
icebp
push
pop
ss
leave
lahf
sub
repnz
jl
jae
mov
popa
fstpl
push
mov
add
jmp
push
mov
mov
es
fwait
jmp
loop
mov
mov
nop
adc
push
xchg
loopne
inc
lcall
and
out
jns
lods
and
test
xchg
lods
jns
out
or
jg
mov
icebp
pop
out
ficomps
or
mov
in
scas
mov
cmpsl
mov
cmp
call
or
sub
dec
pop
imul
pop
clc
into
or
popa
daa
jno
sti
mov
inc
js
clc
mov
mov
aad
aaa
pop
lock
into
and
push
mov
push
and
xchg
push
insl
enter
int
jmp
inc
jno
cmc
pmaddwd
xchg
sub
xchg
loope
addr16
xchg
mov
out
imul
lods
mov
mov
pop
xchg
sub
iret
inc
enter
aas
les
jo
movsl
lds
fmul
mov
fldcw
lock
and
loope
or
subl
mov
add
and
and
int3
adc
mov
bound
shl
mov
stc
cmp
loope
jge
jnp
aam
mov
cmpsl
inc
jnp
outsb
inc
int
test
sub
ss
rol
daa
mov
mov
mov
lock
loope
cmp
clc
test
iret
jp
jns
or
sahf
cltd
cmpsb
inc
lret
mov
jge
cmpsb
cmp
sub
push
push
xor
jns
out
loope
cmp
jp
push
lods
ja
and
push
fucomp
addl
inc
ljmp
adc
sbb
fistl
dec
pop
mov
imul
movsb
xor
insl
or
mov
xor
mov
mov
and
adc
mov
insb
add
popl
pop
insl
or
jg
mov
sarb
xor
mov
ret
mov
add
out
mov
xchg
or
mov
adc
mov
test
gs
dec
inc
and
jle
cmp
repz
cmpb
ss
add
push
popf
daa
pushf
rol
lret
ret
sbb
int
ret
mov
and
mov
add
and
test
out
xchg
mov
mov
jns
mov
adc
fdivrl
mov
cld
imul
cmc
mov
jae
aad
pop
pop
mov
or
aaa
push
sub
mov
icebp
jle
add
popf
call
test
adc
jle
rcrb
rcr
movsb
cmp
xchg
ss
int
pop
cmovl
not
je
lds
push
int3
adc
or
push
jbe
inc
and
xchg
cmp
dec
insl
sub
imul
inc
xchg
pop
nop
dec
imul
insb
sarb
cwtl
adc
pop
push
out
cli
pusha
xor
int3
xchg
ja
sbb
xchg
dec
xchg
sub
mov
es
das
ds
sub
sbb
mov
out
pop
repz
jp
loop
subb
sbb
outsl
xor
push
int3
arpl
pop
subl
jl
mov
add
cwtl
pop
sub
cmpl
xor
adcb
daa
mov
mov
stc
rclb
xchg
add
fbstp
add
mov
push
lret
pop
xchg
std
mov
sub
clc
pop
cwtl
out
fwait
xor
push
movsb
ds
xor
sbb
addb
fisubs
in
pushf
and
mov
push
cmpsb
xor
or
imul
mov
xchg
push
sub
jb
xor
in
or
lock
or
push
nop
stos
add
mov
ret
ret
pop
aaa
inc
in
std
pop
xchg
pop
filds
loop
mov
or
mov
or
cmp
nop
lods
or
mov
jno
mov
sbb
xchg
xor
cli
inc
push
aaa
inc
dec
lods
dec
adc
inc
stos
ja
cwtl
stos
mov
cltd
jne
sub
gs
lret
sbbl
fbstp
into
or
push
ffree
je
cmc
mul
sub
pop
pop
pop
push
mov
outsb
push
cs
mov
lock
dec
test
inc
js
pop
lods
cld
add
clc
and
inc
xchg
sub
sub
out
mov
aaa
std
or
adc
ret
mov
inc
cltd
lods
subl
jg
sub
push
jge
sbb
xor
cmp
mov
jg
ljmp
xlat
data16
mov
xchg
lea
jbe
test
je
mov
dec
stos
inc
mov
ret
aam
mov
xor
cld
mov
iret
sub
dec
xlat
add
jl
or
jp
cltd
out
add
fiaddl
push
adc
sbb
dec
xchg
inc
push
sub
stos
mov
push
pop
aas
into
ds
and
fwait
jns
inc
mov
mov
fisttpll
dec
movsb
adc
inc
vpaddb
xor
xchg
adcl
xor
dec
ljmp
ret
add
mov
insl
add
dec
pop
pop
pushf
xchg
inc
xor
mov
pop
sbb
stc
sbb
lea
test
jbe
addr16
mov
shlb
jae
adc
es
movsl
xlat
cmpsl
int3
fisubs
fcompl
cs
lods
and
mov
incb
test
jg
addr16
dec
pop
sbb
outsl
add
mov
mov
mov
orb
xchg
lock
adc
rcrb
pop
hlt
stos
or
in
dec
push
pop
mov
xlat
cmp
cld
push
in
std
xchg
add
jne
inc
loope
push
jae
cmp
addr16
fcomp
nop
sbb
je
xchg
cmp
cmpsl
add
cmp
insl
or
lock
jmp
lret
aam
scas
popf
out
mov
and
or
enter
dec
fcmovu
jne
inc
xchg
icebp
fnstenv
lods
movsb
mov
cmp
cmpsb
shlb
pop
xchg
iret
pop
stc
idivb
cmpsl
lds
xchg
sbb
xchg
add
test
adc
inc
bound
jg
mov
jl
sbb
ja
push
cwtl
pushf
pop
lock
xchg
push
scas
push
cs
push
jmp
rolb
addb
leave
pusha
inc
and
sub
outsb
in
loope
lods
sub
add
xchg
xor
inc
data16
push
mov
mov
jl
aaa
enter
xchg
cmp
out
repz
xchg
daa
cmp
push
ss
sbb
int3
pop
push
lods
pop
in
pop
inc
pushl
dec
sbb
les
jne
xor
fisubrs
or
jl
addr16
xor
test
rolb
lea
jo
or
mov
or
cmpl
je
lret
ja
scas
das
mov
in
add
es
xor
cmp
add
dec
lahf
add
ret
and
ss
push
mov
and
call
dec
adc
inc
xchg
xor
push
mov
jns
and
add
mov
fld
fsubl
aam
push
mov
aaa
mov
jo
insb
jle
inc
mov
inc
sbb
push
mov
ljmp
cli
loopne,pt
stos
sbb
scas
xor
lahf
sahf
pop
cmp
push
push
bound
or
xchg
imul
inc
sbb
add
push
shll
mov
cld
push
pop
fldl
push
push
push
popa
lret
bound
xor
push
xchg
jmp
call
ret
repz
push
mov
fbstp
clc
sbb
bound
notl
xchg
jo
push
sahf
jg
sbb
icebp
adc
ficoml
in
das
push
rclb
pop
inc
out
sti
jmp
push
inc
enter
xchg
outsl
jnp
cmp
lds
daa
add
adc
and
jno
cwtl
mov
ret
jmp
cmp
rcll
and
dec
lret
and
and
iret
movsb
mov
inc
pop
enter
add
or
dec
inc
in
xorl
add
or
ret
jmp
jecxz
push
xchg
pushl
and
cmp
and
xor
mov
mov
bt
and
dec
popf
or
arpl
scas
mov
fstl
sahf
data16
xor
pop
cld
pop
mov
aaa
cmp
in
xchg
mov
rclb
lock
ds
jg
imul
shrl
insb
ret
sbb
nop
out
pop
sbb
mov
sahf
adc
xlat
cmp
mov
pop
mov
add
out
xchg
arpl
ret
movsl
ret
pop
hlt
call
loop
xchg
sbb
stos
es
xlat
test
mov
jne
adc
addr16
and
mov
pop
mov
movsl
sbb
pop
adc
jae
add
jle
lcall
lods
addr16
or
mov
xchg
pop
data16
shrb
and
mov
jp
ljmp
orb
iret
sbb
sbb
pop
mov
scas
out
scas
mov
and
pop
test
aam
push
frndint
push
test
movsl
mov
or
arpl
out
outsl
sbb
mov
pop
repz
pop
mov
inc
fstpl
push
xlat
push
push
mov
bound
andb
cmp
into
faddl
mov
hlt
sbb
lds
test
in
cmp
inc
dec
bound
aaa
scas
js
in
cmp
jne
outsb
jae
lahf
adc
cmpsl
insl
adc
cmp
push
das
mov
lds
mov
dec
dec
enter
fmuls
push
xor
nop
jmp
and
test
cmp
pop
fcmovb
pop
push
sahf
sub
inc
addr16
cwtl
push
leave
push
loop
scas
xchg
inc
ficomps
shlb
repz
xchg
lock
push
out
cmpsb
cltd
xor
xor
lea
loope
notl
mov
push
mov
aad
aas
pop
testl
dec
std
xchg
fbld
xchg
mov
jae
icebp
shlb
loopne
clc
push
in
idivl
cwtl
imul
mov
sbb
push
or
mov
xor
mov
inc
lcall
rclb
in
test
adc
sbb
andl
rcrb
test
mov
jmp
inc
mov
scas
movsl
fcomi
or
inc
stos
push
mov
xchg
loope
loopne
mov
repz
jp
xor
push
test
imul
mov
out
mov
les
pop
mov
mov
jae
inc
mov
xchg
xor
cmp
addr16
dec
lahf
icebp
jne
add
adc
icebp
jnp
stos
lock
jp
sbb
jecxz
push
pushf
sub
jle
or
iret
and
in
jmp
aam
mov
data16
xchg
orb
xor
cli
xchg
push
inc
push
arpl
pop
lea
xchg
mov
dec
aaa
jmp
ret
jp,pn
cli
pop
ret
jb
xchg
push
push
mov
iret
imul
pop
cwtl
push
insl
and
jae
pop
and
or
add
pop
icebp
pop
call
mov
inc
mov
movsl
jmp
sbb
dec
push
test
cmp
das
or
imul
rolb
push
mov
inc
dec
out
push
mov
xor
mov
lds
mov
lods
mull
lods
mov
adc
mov
mov
or
push
loop
movsb
out
addl
outsb
aas
push
ret
inc
sub
cmpsb
into
xchg
sub
sbbl
fucomip
int3
adc
xor
push
dec
push
mov
mov
push
in
inc
into
inc
ljmp
ljmp
mov
jnp
icebp
lods
sbb
dec
and
adc
add
aam
mov
mov
jbe
pop
stos
jp
jmp
mov
push
mov
xlat
cmpsb
xchg
jle
cltd
cltd
push
ja
dec
adc
push
out
jb
jecxz
popf
lods
cmp
adc
rolb
mov
and
pop
fcomi
lea
fstp
and
mov
xchg
xchg
or
lds
inc
cmc
mov
ret
adc
iret
xor
sbb
lea
add
xor
sub
xorl
cmp
push
nop
mov
test
and
insl
sahf
pop
xchg
jno
imull
and
xchg
popf
jle
or
loop
jg
fsubl
push
int
jb
stc
push
add
stos
imul
mov
pop
add
pop
and
rclb
pop
ljmp
ljmp
jnp
push
lods
andb
dec
cltd
sbb
in
gs
jp
cmc
push
lahf
cmp
movsl
mov
stc
inc
imul
and
idiv
xchg
inc
push
jmp
mov
xchg
lds
loop
outsl
add
std
push
mov
fs
outsb
sub
sbbb
sub
push
mov
es
jo
sub
adc
cwtl
pop
dec
jge
inc
add
data16
cmp
cmpsl
imull
lahf
push
sub
jbe
cmc
dec
sbb
adc
bswap
push
jae
movsl
negl
add
mov
xchg
mov
sbb
add
mov
jge
add
pop
into
xchg
push
insb
mov
stos
mov
stos
jb
imul
insb
shrl
sub
outsl
mov
dec
sbb
or
das
mov
jne
in
test
and
and
and
cltd
out
push
call
dec
ret
outsl
cmp
pop
outsb
jl
idivb
adc
pop
shrl
ja
cltd
xchg
jg
test
out
pop
mov
push
into
push
mov
cmpsb
add
xor
filds
sbb
lock
cmp
push
mov
loope
outsb
xchg
cmp
mov
andb
mov
or
out
clc
push
in
dec
lods
xchg
sub
sahf
push
ss
push
test
mov
fwait
aaa
mov
jne
and
mov
cltd
outsl
cmpl
std
sbb
jmp
dec
in
or
fiaddl
fstpt
lock
inc
push
sbb
xchg
out
fcmovnu
xor
add
test
daa
hlt
push
out
and
aas
jne
jae
sbb
std
daa
inc
adc
cmc
adc
lock
inc
or
dec
add
push
lret
ud0
push
popf
push
adc
mov
fs
xchg
dec
add
mov
test
sahf
aad
xchg
arpl
sbb
sub
jnp
push
pop
sub
push
ret
fistps
out
jbe
mov
mov
out
lret
ficompl
mov
dec
mov
mov
jle
push
xor
movsl
mov
inc
ficoml
xlat
ja
inc
aaa
popa
mov
pop
mov
cwtl
jmp
aas
pushf
fs
mov
push
mov
cli
es
mov
pop
xchg
ret
stos
xor
arpl
dec
cltd
js
ret
xor
push
adc
push
cmc
inc
sbb
sbbl
or
mov
ljmp
sub
inc
xor
test
sti
or
psubsb
push
out
ljmp
add
js
fcmove
gs
push
movsl
jnp
nop
stos
mov
mov
test
sub
divb
mov
add
sti
jbe
adc
call
decb
mov
xor
mov
ja
push
cs
insb
divl
jno
jmp
arpl
leave
out
pop
rorb
and
and
mov
lret
icebp
pop
cmc
inc
shl
outsb
inc
lock
push
call
pop
shrb
mov
fnstsw
ds
dec
pop
push
xor
mov
jae
sbb
sub
iret
mov
cmc
mov
dec
enter
fdivp
pop
repnz
leave
pop
sub
jecxz
js
sti
mov
lcall
cmp
imul
mov
outsl
cli
pop
push
mov
xor
jg
mov
jl
iretw
adc
ja
push
popf
in
sbb
popf
pop
fs
xor
rorb
movb
xor
sub
pop
call
or
and
mov
cmp
xchg
sub
pop
dec
icebp
xchg
mov
and
xchg
jg
loope
inc
push
das
add
push
orl
pusha
fistpll
jge
cld
adc
fwait
cmp
std
xchg
sbb
aam
cmp
insl
pop
sahf
imul
je
and
enter
xor
cltd
dec
cmp
jbe
jle
sti
out
mov
inc
cmp
fwait
jb
push
stos
in
and
cmp
push
loopne
test
sub
addr16
fsubp
out
lds
imul
out
and
xchg
xchg
jle
mov
xchg
add
rclb
das
hlt
rclb
orl
leave
scas
and
rcrb
daa
or
cld
pop
add
int
scas
pop
scas
inc
lea
les
scas
int
testb
cmp
cmpsl
test
shrl
dec
cmc
cltd
ja
cltd
xor
adc
cmp
jbe
cmpsb
lcall
fwait
sti
enter
push
daa
gs
int3
arpl
jp
scas
mov
loope
cld
cltd
add
jno
mov
call
or
sbbl
pushf
ljmp
test
jb
leave
xchg
shll
sub
inc
fidivrl
xor
mov
jne
mov
mov
repz
sub
andl
mov
pushf
nop
adc
xor
mov
pop
mov
mov
dec
cmp
mov
inc
sti
movsb
test
ss
shr
xchg
push
mov
sti
push
daa
push
mov
frstor
xchg
fiaddl
or
stc
cwtl
sbb
out
inc
imul
insl
pop
imul
xor
lea
aas
sbbl
add
cmp
ffree
lret
in
jne
pop
adc
pop
repnz
xor
mov
push
cmp
movb
std
ret
icebp
lahf
ficomps
push
insl
sbb
in
imul
sbb
fwait
sbb
xchg
jmp
add
and
movsl
mov
push
xor
leave
clc
mov
popa
add
or
and
movsl
xchg
xchg
filds
pop
inc
jae
sub
lahf
jmp
rol
aam
psrlq
mov
lods
je
es
xchg
xor
int3
and
push
fxch
mov
sbb
add
aad
shll
push
pop
outsb
loopne
mov
push
daa
inc
ljmp
cs
xchg
jl
icebp
dec
add
push
sub
fcoms
xor
cmp
mov
jl
push
aas
xor
pop
addr16
jl
ds
inc
test
pop
push
pop
clc
xchg
mov
jp
insl
and
aaa
cld
push
imul
loope
insb
shlb
frstor
mov
imul
lahf
sti
xchg
shl
fldl2t
fdivs
sub
mov
nop
pop
js
or
xlat
outsb
jo
pop
push
xchg
cmc
sbb
and
ja
jne
dec
xor
cmpsl
jle
cmp
call
jl
pop
sarl
rcl
notl
dec
movsb
jg
and
pop
and
leave
aad
pop
mov
aad
test
mov
pop
inc
push
cmp
subl
inc
lea
sbb
je
dec
push
ficoml
push
lods
mov
out
push
mov
push
into
adc
shrl
jne
out
clc
pop
movsl
scas
push
outsb
inc
xchg
xor
add
mov
pusha
and
push
subl
push
adc
data16
mov
pop
fs
jne
test
je
mov
mov
add
mov
in
jbe
sub
lock
mov
hlt
dec
lret
push
bnd
fldl
fwait
xchg
sbb
xchg
rorb
mov
mov
mov
mov
aaa
adc
mov
stc
les
sbb
sub
iret
rclb
cmp
or
xchg
push
and
ss
sub
xor
test
fisttpll
dec
mov
push
popf
xor
bound
mov
lock
lods
mov
inc
ljmp
pmaxsw
mov
inc
mov
mov
lcall
pop
lods
sbb
mov
sahf
repnz
jo
ficomps
xor
adc
lock
push
push
repz
clc
mov
popf
xchg
rclb
out
cmp
leave
stos
jmp
repnz
jmp
jne
xchg
cmp
dec
cmpsl
ljmp
dec
inc
mov
push
int3
pop
xchg
inc
lret
icebp
mov
in
mov
mov
inc
insl
jae
or
in
xchg
aam
es
pop
fnstsw
loope
xor
int
mov
fisttps
rcr
mov
hlt
and
jge
fs
fmul
xor
jo
xor
xchg
movsb
fistl
pop
sbb
dec
sub
hlt
pop
add
cmc
jl
lods
mov
push
stc
lret
mov
int
cmc
loopne
notb
rol
mov
movsb
shrb
movsb
test
dec
mov
ret
add
out
pop
daa
ss
pop
jns
in
stos
ja
std
cmpsb
cmp
aaa
dec
imul
rcl
test
mov
mov
mov
push
sub
adc
or
push
jno
lcall
shll
std
xchg
dec
cmp
divb
xor
pop
lea
das
mov
lret
xor
out
roll
jmp
shlb
cmp
xchg
das
cs
jae
fisttpll
arpl
mulb
in
add
ljmp
mov
or
dec
js
jg
popa
out
pushf
addl
xchg
cmp
and
jo
test
mov
sarl
test
lods
clc
leave
pusha
sub
cwtl
das
gs
clc
or
test
cmp
jecxz
jne
ja
cmpsl
loop
mov
dec
pop
rclb
jo
test
pushf
push
xchg
inc
mov
fsubrl
rcll
std
and
pusha
pop
daa
pushf
xor
push
in
jge
inc
mov
push
jbe
test
sbb
adc
aam
rol
pop
push
lea
xchg
inc
xchg
mov
pop
gs
xchg
sbb
or
aaa
ds
std
xchg
jp
mov
loope
sbb
bound
mov
insl
cld
inc
cld
xor
push
mov
fbstp
cmp
jle
testl
mov
addl
imul
and
jae
jns
pop
test
push
jns
pop
and
adc
jne
mov
push
push
inc
int3
arpl
pop
jmp
or
jo
shrl
fnsave
push
movsl
out
scas
fmull
outsl
imul
call
mov
fwait
nop
insb
inc
push
ds
mov
xchg
sarl
jle
mov
cmp
pop
mov
xchg
ret
je
jns
push
ret
shrb
rolb
push
dec
xorl
ss
and
shl
pop
fsubs
cmp
sarl
sub
sbb
or
daa
cmpsl
dec
sbb
in
les
loopne
js
push
mov
xchg
dec
fistpll
xchg
fldt
sbb
mov
jns
pop
btc
imulb
mov
lret
pop
jno
sub
outsl
arpl
mov
js
outsl
mov
movsl
lcall
ds
test
cmpsb
cli
clc
stos
fdecstp
test
fisubl
inc
jg
repz
aam
ret
adc
sub
pop
mov
xor
popf
adc
rol
data16
jmp
mov
or
jle
iret
stos
in
popa
test
pop
into
fsubl
jmp
push
mov
mov
fnsave
jb
inc
lea
xchg
adc
pop
xchg
addr16
scas
arpl
push
fsin
stos
test
xchg
jne
lahf
sbb
inc
pusha
or
xchg
jb
mov
xchg
and
inc
mov
jb
cmp
add
lahf
stos
cwtl
and
test
cmc
jb
sub
enter
lock
loop
daa
xlat
lret
fdivl
cmc
mov
adc
repz
mov
dec
pushf
jge
icebp
daa
or
fcomps
add
bound
sub
push
ret
pop
xor
lds
test
mov
fisubrl
sbb
add
jl
mov
adc
inc
movsb
lods
adc
outsl
jnp
jb
push
sub
mov
lds
int
cmp
loope
dec
rol
cli
arpl
xlat
les
pushf
or
pop
xorl
xchg
rorb
or
cwtl
sbb
pop
jp
jne
or
arpl
cmp
push
cmpsb
aad
pop
pop
cld
and
fiadds
faddl
inc
decl
in
mov
ds
dec
cmpsb
lock
adc
adc
clc
or
cmc
or
mov
aad
shrb
je
out
int
inc
add
pop
pop
push
xchg
and
gs
adc
mov
fisubrl
cld
jbe
xor
lock
gs
nop
cmp
fcomi
mov
fs
xchg
decb
adc
xlat
into
pop
or
cld
pop
xor
push
pushf
aam
inc
adc
mov
imul
xchg
jmp
xchg
imul
add
sub
repnz
nop
adc
xchg
push
jl
pop
xor
jmp
or
es
and
fidivs
and
push
rcll
mov
repz
inc
push
push
cmp
divl
xchg
mov
subb
leave
sbb
cs
imul
test
inc
xchg
rcrb
call
or
imul
ds
mov
cmpsl
or
in
sbb
fwait
test
jmp
xchg
jge
fisttpll
pushf
jb
dec
and
ljmp
mov
pop
cmp
std
and
push
dec
loope
sbb
mov
test
pusha
mulb
mov
mov
in
mov
cmp
push
sbb
push
push
push
in
imul
sub
jns
sub
sbb
pop
sbb
shrl
xor
call
or
mov
pop
inc
in
cs
addr16
push
mov
shrb
push
decl
xchg
fdivs
loope
stc
dec
cmp
adcb
mov
int3
and
aad
imul
bound
mull
jns
xchg
cs
pushf
pop
push
or
fldl
add
sahf
sub
push
xchg
adc
stos
enter
scas
xchg
daa
mov
andb
repz
or
push
add
pop
push
jne
lret
mov
mov
ror
repz
dec
or
in
stos
xchg
adc
inc
fdivl
jb
aas
pop
pop
jg
jns
nop
dec
jecxz
adc
push
push
test
dec
hlt
stc
aaa
push
mov
test
inc
jg
pop
sub
in
mov
dec
sti
in
fnstenv
and
sub
scas
add
lret
cmp
lret
bound
fucomi
test
push
sub
xchg
jecxz
or
mov
and
xchg
inc
and
mov
push
adcb
xchg
mov
xor
add
rcrb
add
jae
out
aad
sub
xchg
or
ret
xor
imul
sahf
lods
lcall
jb
xchg
clc
push
sbb
sbb
fcmovb
cwtl
or
sub
aaa
je
imul
icebp
fiadds
sub
shlb
push
rol
sbb
mov
pop
repz
daa
arpl
push
dec
ret
js
cltd
int
mov
mov
gs
test
fmull
and
popa
and
out
iret
sub
xor
jne
in
mov
mov
aaa
incb
and
pop
mov
or
ljmp
push
dec
mov
dec
or
xor
scas
sahf
xchg
push
mov
fisttpll
sbb
push
add
lea
push
loop
xchg
aaa
adc
repnz
test
mov
fimull
arpl
push
pop
adc
ss
repnz
mov
enter
adc
call
or
sahf
pop
les
jo
and
jb
int
and
mov
das
sbbb
cmp
adc
inc
movsl
sub
xor
outsl
xor
mov
jnp
xlat
leave
push
jne
mov
subl
addr16
dec
nop
pusha
mov
xchg
mov
test
cli
xchg
addr16
mov
mov
xlat
insl
in
push
xchg
adc
inc
ljmp
cli
mov
inc
push
add
jg
aad
fs
in
lds
lea
xchg
jecxz
not
push
int3
leave
xor
icebp
arpl
pop
stos
cld
movsl
xor
add
leave
sbb
add
pusha
cmp
out
push
ret
jne
dec
insb
in
aaa
pop
mov
pop
push
sub
mov
and
iret
mov
add
test
jle
push
out
dec
movsb
subb
negb
std
fbstp
pop
leave
adc
imul
push
lock
int3
cmp
mov
sarb
dec
cmp
jle
push
jno
int
in
ds
pop
pop
movsb
stos
andl
outsb
jl
cmp
decl
mov
sbbb
cltd
jae
cmp
push
popa
jp
test
mov
ss
orl
divb
dec
mov
add
fmul
outsb
push
stc
sub
repz
cmpsl
mov
in
loop
and
or
cmp
xor
xchg
xchg
lcall
and
jbe
or
daa
xchg
cli
rorb
cmpsl
imul
sub
mov
sbb
dec
cmp
pop
mov
pop
xchg
sub
cmpl
inc
sub
je
xchg
stos
pop
xchg
push
hlt
rcrb
add
jnp
mov
fs
inc
sbb
aad
sbb
or
rcrb
pop
add
add
cmp
pusha
cltd
dec
imul
xchg
dec
or
enter
fldt
jecxz
adcb
sti
pop
or
sbb
or
push
in
sti
ja
sbb
pusha
mov
mov
dec
std
pusha
sub
out
das
mov
dec
mov
popa
mov
jg
mov
aaa
loop
loope
push
nop
mov
loop
dec
mov
mov
in
add
les
mov
jmp
hlt
rclb
xchg
dec
xor
xor
les
dec
lcall
bound
adc
inc
dec
mov
xorb
and
mov
push
mov
test
lds
inc
ss
dec
in
aam
cld
or
imul
adc
std
clc
subl
xchg
dec
mov
gs
pop
leave
rorb
or
pop
es
pop
sub
and
jl
cmp
jl
icebp
js
and
movsb
add
popf
pop
outsb
xchg
mov
and
cmp
js
mov
inc
bound
adc
mov
lods
push
dec
push
arpl
dec
loope
call
aas
push
sub
pop
in
cli
mov
inc
sbb
dec
popl
mov
ficoms
lret
scas
mov
add
sbbl
sbb
movsl
push
das
mov
lock
xor
mov
inc
inc
test
cwtl
push
sbb
dec
int
jb
into
out
aaa
into
pop
lock
and
dec
sbb
in
mov
xchg
imul
mov
jle
or
inc
imul
pushf
and
xchg
pop
xlat
add
pop
inc
ljmp
pusha
ficompl
mov
mov
xor
pushf
jo
push
mov
dec
iret
decl
cmc
and
int
or
sbb
aam
imul
fucomp
add
sbb
jg
push
adc
andb
popf
fisttpll
addr16
scas
mov
xor
andl
out
ss
in
or
and
outsl
cmpsl
jbe
clc
ds
push
shll
lea
pop
cmp
inc
jle
shlb
xchg
cmp
push
cmp
xchg
adc
sub
pop
sub
and
mov
add
mov
xchg
push
in
mov
je
jbe
imul
push
add
push
jp
push
daa
inc
add
push
push
mov
cli
adc
sub
cltd
aas
xchg
sbb
inc
fsubrs
cld
adc
test
dec
mov
movsb
jnp
shlb
stc
cli
loope
scas
push
stc
leave
sub
sub
lret
clc
icebp
or
bound
inc
inc
js
jge
movsl
mov
sbb
jns
xchg
stos
jmp
inc
adc
adc
push
mov
jo
push
les
sbb
in
and
push
jmp
mov
jmp
mov
add
cmp
addl
add
popa
cmpsb
cs
mov
ret
xor
mov
out
testb
idivb
adc
fnstenv
cmpb
loopne
lcall
testb
loope
shll
adc
inc
flds
in
xchg
loopne,pn
push
movsl
mov
xor
pop
xor
pop
mov
sub
popf
dec
xchg
sub
mov
fnstenv
loope
jp
mov
jne
or
out
imul
arpl
mov
adc
testl
dec
mov
mov
out
repz
loope
outsl
push
shlb
or
ret
mov
lock
jae
cmp
repz
xchg
jae
or
adc
mov
cmp
pop
mov
dec
mov
xchg
aam
push
xchg
mov
rcll
dec
jns
pusha
fcmovnbe
int3
and
sub
and
aaa
dec
loopne
repz
pop
jecxz
cmp
aaa
xchg
sbb
shl
shl
fwait
sbb
push
test
out
test
sbb
jbe
fdivs
cmp
inc
stos
icebp
dec
jns
test
pop
and
mov
jge
flds
inc
mov
jae
jb
gs
mov
push
gs
sbb
push
xchg
pop
jae
sbb
clc
inc
pop
je
sub
mov
add
xchg
testb
inc
out
sbb
push
pop
sub
in
sbb
and
and
stos
call
popa
adc
nop
xlat
addr16
dec
push
jecxz
lock
jge
sbb
ret
mov
jg
push
rorb
mov
xchg
xor
jg
xor
icebp
push
stos
rolb
xor
xor
jno
or
push
mov
jne
add
fisubl
dec
adc
cltd
test
push
rorl
mov
mov
rclb
or
mov
movsb
cmp
fnstsw
iret
test
fisttpl
fcoml
mov
imul
shr
test
mov
jnp
dec
xorb
sbbb
fwait
aam
xor
cmp
rolb
sbb
xor
leave
lea
push
mov
nop
push
rorl
icebp
push
cmpl
bound
push
jnp
dec
cs
pushf
cwtl
mov
es
pop
pop
fcmovu
nop
mov
dec
inc
daa
push
jae
xor
adc
mov
fldl
pop
jl
in
and
sbb
sarb
andl
xchg
movsb
adc
dec
lods
cs
cmp
mov
and
cmp
test
ja
jnp
mov
jo
rorl
rcrb
mov
mov
mov
out
and
and
test
cs
xor
nop
clc
jbe
adc
pop
push
pop
xorb
sbb
add
or
add
cmp
xor
dec
fnstenv
mov
fbld
xchg
lea
jle
hlt
test
outsl
mov
mov
jno
clc
out
adc
lods
mov
push
nop
je
pop
jmp
push
xchg
shrl
mov
mov
mov
sub
sahf
jecxz
loopne
adcl
dec
addr16
cmp
std
divl
mov
outsl
and
into
gs
jne
push
and
inc
xlat
and
inc
fmulp
fists
das
xchg
ficomps
movsb
inc
insb
adcb
cmp
sahf
jne
js
scas
int3
xchg
cld
data16
in
xor
mov
fldpi
add
jb
jg
ficoms
jle
xorb
in
rcl
push
mov
inc
pop
pop
adc
xlat
in
imul
mov
sbbl
call
sbb
mov
cld
outsl
xor
sarl
lods
cmp
scas
mov
rorl
jnp
imul
xchg
add
or
mov
push
adc
add
es
jecxz
mov
dec
fdivl
pop
hlt
in
in
mov
sub
and
pop
std
cld
pop
sub
scas
insl
out
les
add
jmp
fwait
arpl
inc
repz
mov
popa
adc
iret
xorb
loop
jmp
mov
dec
dec
pop
add
jmp
mov
stos
xorb
lea
aam
testl
dec
mov
mov
shlb
sahf
shll
cmpl
addr16
xchg
into
push
stos
add
cs
push
movsl
or
scas
mov
sbb
adc
gs
push
jmp
xor
push
ja
push
xor
and
jmp
arpl
sub
lahf
or
sbb
mov
int3
xchg
in
subl
mov
push
pop
lcall
and
push
fsubrl
push
decl
arpl
mov
fcmovb
and
mov
in
scas
test
ret
jp
or
cltd
fcomip
pop
ds
dec
pop
or
sub
jl
mov
adc
mov
push
loop
shr
add
loop
push
lods
mov
mov
mov
fsubrp
dec
leave
sbb
and
ret
sub
xchg
sub
mulps
xchg
mov
insb
out
dec
int3
popf
movsb
call
mulb
dec
xchg
sub
mov
int
std
aas
add
inc
loopne
lods
dec
pop
push
inc
fdivrl
mov
adc
push
shll
leave
jmp
or
jb
test
and
jmp
mov
push
jb
or
inc
arpl
mov
dec
das
or
mov
movsl
jae
add
loope
push
sub
push
icebp
and
or
js
jbe
shll
pop
push
sbb
stc
in
outsb
ficoml
cmc
mov
mov
shrl
adc
adc
aas
lock
bound
stos
sbb
sub
xor
push
seto
rcl
xlat
add
les
pop
bound
in
dec
das
jno
lods
out
cltd
adc
pop
and
cmp
xchg
cwtl
rcrb
inc
jmp
adcl
mov
hlt
adc
outsb
adc
popf
fildll
dec
xchg
sbb
movsb
pop
sub
jb
sub
out
test
lret
sub
xor
mov
es
sbb
add
jne
or
adc
sub
sar
fstps
sbbb
adc
les
not
shlb
xchg
xor
push
pop
jb
je
jl
mov
arpl
test
sub
fidivrl
jecxz
and
mov
cmpsl
jns
cmp
push
push
sbb
bnd
fidivrs
cmovl
pushf
gs
int
cmp
mov
and
out
cmc
mov
jmp
fstl
push
cwtl
out
daa
dec
inc
mov
jmp
cwtl
pop
scas
mov
fstpt
movsl
es
cmp
cs
sub
out
loopne
xor
scas
in
fldt
out
fs
gs
lea
xor
iret
cmp
adc
push
cli
lock
add
jbe
push
test
loopne
adc
jns
loop
out
mov
fs
mov
mov
lret
jecxz
ds
in
movsl
fisubrl
push
jl
mov
orb
mov
mov
repnz
jno
dec
inc
lcall
iret
std
cli
mov
pop
jmp
add
lods
or
inc
inc
std
popf
xor
loopne
je
fldcw
je
nop
cmpsb
ljmp
inc
pop
subb
fidivrl
ljmp
mov
sbb
push
sbb
jmp
in
add
mov
lods
cli
rorl
xor
je
bound
imul
subb
je
xchg
pop
repnz
and
cli
pop
fsubrl
push
ljmp
mov
push
sbb
dec
popa
loopne
or
sub
mov
js
pop
mov
xchg
cld
and
mov
inc
and
push
das
pop
in
mov
push
cli
arpl
fidivl
mov
prefetch
inc
imul
in
lea
xor
fwait
std
or
inc
outsl
xchg
sub
add
pop
add
mov
push
rcll
or
push
mov
mov
xchg
xor
cltd
or
push
adc
jno
loop
lahf
shll
add
push
repz
adc
inc
int3
add
and
mov
mov
call
orb
cmp
arpl
jnp
jno
cmp
repnz
dec
ffreep
scas
sbb
test
mov
bnd
ljmp
jno
ljmp
loope
xchg
test
push
jnp
adc
push
and
mov
push
dec
popl
pop
es
lds
fsincos
stos
call
stos
inc
test
and
js
fs
aaa
jnp
push
jmp
nop
aad
mov
test
add
pop
xchg
lea
sub
and
inc
fstp
add
gs
test
mov
in
sub
mov
inc
in
leave
sbb
icebp
in
repz
and
jp
xchg
jnp
imul
push
jmp
test
inc
mov
fnstenv
out
adc
pop
adc
shrl
ja
push
jno
xor
push
in
pusha
rclb
jae
inc
cmpsl
data16
loop
cmpsl
loop
mov
imul
sarb
mov
idiv
pop
adc
mov
cmp
or
movsb
inc
rolb
sldt
pop
outsb
pop
ret
pop
icebp
hlt
sub
les
pop
mov
in
adc
fadds
adc
mov
or
fidivrs
dec
pop
or
mov
hlt
iret
sbb
jecxz
mov
shll
sbb
xlat
xor
mov
stc
mov
jbe
insb
add
imul
in
mov
sbb
mov
cmc
jmp
sarb
dec
xorl
movsb
js
adc
lahf
cltd
cmp
test
add
xchg
dec
or
dec
inc
push
cmp
orb
cmp
inc
sbb
sti
ret
repz
loopne
das
mov
cmp
push
jno
xchg
aaa
and
shlb
loop,pn
adcl
lock
or
mov
int3
sbb
dec
adc
fsubr
or
dec
in
add
je
cmpsb
or
push
xchg
pop
js
cli
mov
jp
mov
insl
xchg
inc
add
jb
notb
fisttps
imul
jmp
add
push
xor
aaa
mov
sbb
cld
enter
shlb
inc
arpl
lea
jg
push
mov
mov
inc
cld
inc
out
ja
and
leave
test
jb
add
sbb
xorl
mov
clc
jmp
jb
ja
movsl
cmpsl
dec
dec
sub
jb
testb
push
cwtl
dec
pop
test
jb
mov
test
cmpsb
push
fstps
lcall
stc
stos
add
inc
mov
push
movsl
hlt
mov
addr16
ret
adc
jne
xor
pop
imul
pop
sbb
mov
xor
aas
add
push
jnp
cld
notl
mov
xlat
outsb
daa
xor
xchg
int
jp
xor
mov
or
lret
and
sbb
decb
pop
inc
dec
fldcw
pop
pop
jecxz
in
add
notl
addr16
jb
adc
sbbb
sub
xor
push
xchg
sahf
nop
stos
outsl
push
frstor
or
outsb
cmc
push
cs
cli
xor
int
frstor
callw
shr
cmc
push
or
xor
in
xchg
out
fsubl
jo
js
add
test
jp
or
dec
lret
andl
aas
gs
pop
dec
loopne
aaa
mov
add
enter
pop
mov
add
mov
popa
rclb
jle
add
dec
cmp
test
dec
ror
outsl
push
adc
int3
cmpsb
jecxz
xlat
push
popa
jo
roll
add
cmp
clc
inc
fstps
jno
test
ffree
in
cmpsl
jnp
jecxz
hlt
fbstp
push
inc
mov
or
rcrl
ret
sti
fildll
jns
sub
mov
push
sub
xchg
imul
adc
cwtl
stos
bsr
mov
aam
fidivrl
es
mov
mov
mov
push
pop
xor
sbb
inc
mov
xchg
out
push
or
sub
jae
out
cmp
pusha
jo
outsb
mov
mov
push
adc
pop
and
lods
push
add
inc
divl
movsl
adc
push
jmp
lds
mov
aaa
out
stos
adc
adc
sbb
js
xchg
imul
fldln2
not
push
frstor
or
or
and
mov
dec
mov
xor
cmpsb
popa
xor
xor
add
cmp
lret
dec
adc
and
pop
out
and
push
lock
pushf
ss
adc
adc
and
or
add
dec
add
pop
shlb
jecxz
std
scas
mov
push
aam
mov
bound
mov
mov
arpl
or
test
xor
jmp
mov
xlat
cmp
or
mov
cld
lods
pop
sub
lret
out
dec
mov
sahf
cmpb
into
inc
testl
cs
lods
fsts
or
movsl
mov
pop
addr16
push
mov
into
sub
xchg
pop
stc
xchg
mov
pop
push
xor
shrl
mov
jg
push
fisttpl
sbb
jne
popa
imul
movsb
ret
pop
aad
in
aaa
pusha
int
ja
pop
fsts
xor
pop
adc
imul
mov
push
jb
jp
jl
stc
push
jo
hlt
jle
mov
lds
pop
mov
pop
ljmp
pop
into
pop
dec
dec
pop
iret
fstp
scas
push
jmp
xor
fisubl
dec
push
pop
test
test
ss
sti
mov
jle
ds
push
shll
xchg
mov
pop
test
mov
push
inc
inc
cmp
push
mov
mov
xor
movsb
stos
and
cmp
sar
lea
jmp
inc
xchg
cmp
call
pop
add
jmp
lea
push
add
mov
call
addb
fsubrl
sbb
mov
stos
push
push
ds
out
daa
fiaddl
outsl
push
mov
push
mov
jne
jp
stos
stos
imulb
dec
mov
iret
jle
clc
rcl
xchg
pushf
cli
pushf
dec
je
imul
sub
push
push
cld
lret
pop
mov
sub
cmp
out
addr16
adc
leave
fcmovu
js
sti
push
out
sub
inc
push
jg
mov
mov
and
inc
pop
scas
js
mov
ret
mov
mov
enter
pop
test
xor
jo
dec
cmc
cmp
clc
hlt
mov
add
fadds
add
pop
js
xchg
lods
mov
mov
gs
inc
das
ja
mov
fisttps
hlt
cmpsb
mov
dec
test
fsubrs
inc
push
xor
outsl
fstl
mov
dec
inc
andb
popa
cld
cmpsb
xor
daa
add
mov
adc
adcl
dec
popa
pop
cmp
aad
mov
lds
sbb
lods
sub
pop
into
insb
cli
xor
pop
cld
out
aam
test
imull
push
scas
push
push
sar
decl
push
cmp
addl
or
arpl
mov
lret
or
test
icebp
fldenv
cmpsb
fsubrp
inc
call
cmc
aam
inc
pop
push
cmp
out
jp
into
or
adc
cmpsb
inc
mov
fcmove
movsb
mov
das
xor
pusha
xchg
sahf
das
popa
adc
mov
mov
jle
pop
nop
jmp
aaa
std
pop
lret
imul
add
lds
adc
in
stc
adc
inc
sbb
les
push
push
mov
add
into
pop
aam
jb
movsl
dec
or
rcrl
lock
je
insb
leave
add
bound
fstps
aam
push
adc
or
push
in
adc
xor
adc
cmp
cld
or
xor
and
dec
sbb
dec
outsb
mov
arpl
sbb
in
adc
and
add
cli
xlat
repz
ret
popa
sbb
pusha
mov
aad
int
stos
add
test
pop
push
mov
jne
in
out
mov
jne
mov
test
jbe
pop
insl
add
cmp
rcl
pop
inc
call
jae
lock
loopne
xchg
out
leave
mov
sti
pusha
js
into
iret
lea
lock
xchg
sub
stos
cmp
xor
and
pop
les
bound
popf
ds
in
rolb
out
imul
incb
sbb
mov
test
les
lahf
mov
aam
idivl
cmpl
fstpt
subb
xlat
mov
std
lret
pandn
add
xchg
xor
les
add
mov
mov
int3
and
sbb
mov
cltd
popf
xor
mov
mov
inc
out
out
cs
pop
outsb
lahf
xchg
fwait
sub
movsb
mov
dec
dec
or
outsl
push
push
dec
xchg
pop
cld
testb
aam
mov
test
ds
arpl
inc
push
popf
jae
incb
stos
sub
lret
insl
mov
mov
mov
and
xchg
sbb
mov
jg
push
scas
mov
push
sahf
cld
pop
inc
in
fucomp
xchg
xchg
add
inc
mov
push
fsubr
mov
inc
lea
addb
lcall
subl
subl
mov
lock
xchg
lcall
jg
or
dec
inc
adc
mov
add
xchg
and
rcrb
mov
push
imul
add
shl
mov
push
call
out
mov
jne
test
cld
les
leave
insl
sub
mov
lcall
arpl
mov
and
and
loop
dec
or
nop
mov
push
pop
push
xchg
int
call
cwtl
mov
mov
ficompl
dec
fidivl
outsl
adc
adc
int3
or
inc
popa
lahf
ljmp
test
int3
cmp
xchg
ror
insb
sbb
and
test
into
nop
mov
xor
inc
arpl
sbb
cwtl
fwait
and
pop
popw
loopne
and
incb
push
adcl
imul
xchg
mov
cltd
or
xlat
sarl
aad
ret
scas
into
jp
and
mov
mov
sbb
adc
nop
pushl
pop
and
xchg
imull
jns
jle
sub
ret
inc
dec
outsb
cmp
pusha
cmp
fs
dec
mov
cs
sbb
add
mov
pop
cltd
mov
daa
push
mov
int
and
sub
cmp
push
mov
dec
push
fisttpl
ljmp
jno
xchg
jo
out
inc
jnp
in
sahf
and
ljmp
and
mov
cmp
mov
xor
mov
fidivl
into
pop
ds
scas
imul
xorb
and
and
hlt
mov
iret
icebp
lea
sbb
into
dec
xchg
sub
loopne
add
push
fdivr
icebp
nop
fidivl
mov
mov
dec
mov
push
es
or
fnstenv
rcrl
mov
int
sbbl
adc
cltd
por
inc
in
mov
push
jno
or
aaa
sub
pop
mov
lret
cmpsl
leave
pop
mov
outsl
cmp
ffree
aaa
dec
cmp
or
inc
pusha
les
aam
sub
cmpsb
cmp
mov
subb
scas
cli
or
test
mov
fs
push
and
out
inc
lret
lret
fnstsw
icebp
loop
mov
cmp
xchg
push
shlb
mov
fistl
divb
inc
dec
bt
sub
fdivl
insb
cmp
lock
push
sti
fisubrl
xchg
push
imul
addr16
jl
mov
stos
mov
cmp
test
inc
loop
fistl
in
sti
sbb
dec
and
clc
xor
cs
mov
jg
shl
lea
cmpb
dec
pop
pop
nop
xchg
add
dec
ss
mov
fadds
movsl
cmp
gs
jo
dec
ret
pop
jp
stos
inc
adc
dec
pusha
adc
out
les
add
and
push
add
xor
sbb
adc
stos
or
pop
xor
or
pop
cmp
xchg
gs
out
or
rcl
test
dec
dec
fnstcw
cwtl
insl
jae
mov
push
xchg
sub
and
mov
mull
js
adc
test
xchg
lret
jle
jno
lock
cld
adc
push
sti
xchg
dec
inc
inc
out
pop
cltd
jl
push
push
jae
and
inc
loope
rclb
sahf
lods
add
cmc
sti
cmpl
ret
sti
xchg
cmp
sti
xlat
pop
jg
xlat
mov
je
jnp
dec
lods
push
xchg
pop
stc
lea
fwait
mov
cli
mov
cli
xchg
jb
and
aad
aaa
pop
push
scas
call
test
sahf
mov
cmpsb
sbb
pushf
push
out
std
sub
sahf
cltd
movsb
or
lahf
mov
std
xchg
sub
push
jbe
ret
repz
mov
add
pop
pop
shrb
jmp
scas
push
je
ss
sbbb
sbb
fsubs
and
pop
sarb
mov
aas
std
iret
es
push
sub
mov
mov
and
popa
idivl
lret
jne
add
inc
mov
pop
out
xchg
or
adcl
sub
pop
jno
or
js
cmpsb
cmp
int
cmp
pop
sbb
inc
xlat
call
inc
out
xchg
pop
subb
lock
insb
sub
add
jnp
add
pop
lods
mov
fstps
mov
jbe
sbb
and
jmp
hlt
imul
lret
mov
mov
scas
cli
pusha
pushl
xor
mov
stos
pop
iret
mov
mov
aas
mov
and
sbb
ja
ja
and
leave
jae
stos
bound
push
inc
mov
in
std
roll
mov
pushf
rolb
xchg
mov
std
fwait
sbb
test
pop
or
js
outsl
sub
popf
cwtl
or
rorb
jnp
je
popa
jle
jno
sti
push
pushf
sbb
lret
in
aad
xchg
outsl
adc
outsb
test
out
vpsllq
jecxz
mov
cltd
fdivp
aad
jbe
out
mov
ret
cmp
cmpsb
push
movsl
xlat
dec
jnp
ja
lods
mov
push
jg
inc
ficoms
mov
loopne
popa
popa
pop
cmc
test
cld
jg
inc
jl
xchg
jle
mov
lcall
adc
push
and
scas
inc
sub
pop
jle
inc
mov
xor
stos
push
lcall
add
lock
popa
xor
loop
push
jno
inc
mov
push
in
stos
aas
pop
notl
scas
sahf
mov
xor
outsl
inc
push
outsl
testl
pop
mov
stos
ja
adc
in
std
popa
cli
test
fmuls
adc
mov
inc
xchg
imul
out
sub
adc
inc
adc
lea
sub
mov
fdivrp
mov
lds
mov
jge
sub
leave
rcrb
leave
push
sub
adc
fnstsw
sahf
lcall
jno
mov
test
pop
ficoml
push
mov
loopne
pusha
xchg
or
mov
pop
inc
cmpsb
hlt
sub
and
lock
jp
fidivrs
xchg
or
push
xchg
fisubrl
cwtl
ljmp
movsl
aas
shll
pusha
sub
pop
and
arpl
mov
mov
push
xor
insl
mov
mov
daa
sub
cmpsb
aad
shll
or
dec
push
lret
adc
call
test
sbb
jl
xchg
cmc
jp
xor
xchg
jecxz
mov
std
enter
ljmp
inc
in
iret
xchg
scas
cmp
adc
inc
test
stc
fdiv
and
sbb
push
cmpsb
clc
and
pushf
jae
cmp
mov
or
adc
mov
idivl
test
rclb
pop
inc
icebp
mov
jnp
stos
and
in
push
mov
sbb
js
sahf
test
ja
dec
cmpsb
stos
cmp
sub
adc
cli
js
cld
or
loopne
mov
js
iret
pusha
push
jl
in
push
es
xor
add
jg
push
mov
pusha
mov
jmp
or
adc
rcrb
rclb
inc
ficoml
loopne
aaa
cwtl
dec
pop
stos
add
popf
xor
dec
or
sub
mov
sub
test
mov
pusha
jp
mov
add
repnz
fcoml
imul
arpl
adc
sahf
outsl
xor
pop
clc
popl
in
jge
cli
and
shrl
mov
loopne
iret
sbb
sbbl
push
push
popa
or
sbb
ss
lahf
ss
movsbl
sub
iret
scas
inc
add
int3
std
jp
mov
inc
pop
insl
push
xor
cmp
push
inc
mov
icebp
xor
inc
fidivs
loopne
xor
push
lock
lret
sub
sub
test
lcall
out
push
mov
dec
sarl
iret
jae
test
dec
xchg
push
pushf
and
xor
popf
loope
test
add
inc
fistl
mov
imul
push
call
cmp
sar
pusha
jg
outsl
shll
cltd
and
add
fcompl
test
mov
mov
shrl
xor
outsl
dec
fdivl
lods
les
xorl
mov
inc
fsubrl
les
out
pop
in
testl
mov
aam
idivl
xor
shl
push
jo
and
adc
mov
xor
bound
iret
adc
es
aad
add
or
loopne
js
popf
test
test
cmp
lock
popf
insl
int
inc
scas
inc
jl
pop
cltd
icebp
test
arpl
adc
mov
test
cmp
dec
xor
xchg
shlb
xor
bound
xchg
daa
int
arpl
add
mov
int3
test
mov
leave
lea
rorb
xor
mov
dec
stos
je
out
repz
or
mov
mov
inc
lods
jnp
int
mov
ss
mov
lea
mov
mov
in
adcl
imul
lods
mov
jo
testb
int
or
arpl
jmp
add
inc
xchg
clc
adc
or
scas
xchg
adc
jmp
push
cltd
into
fmuls
adc
or
aad
rcr
je
pop
pusha
fistps
sbbl
sbb
mov
aad
add
sti
fwait
fs
push
in
mov
aam
inc
pop
jg
and
mov
xlat
out
test
sbb
out
aad
fwait
push
push
loope
les
pop
mov
pushf
push
xor
loope
outsb
add
add
out
push
in
cltd
push
push
fwait
loope
scas
inc
addb
in
mov
lods
jp
jno
loope
out
test
iret
aad
push
mov
les
inc
xchg
ljmp
adcl
fcoml
jmp
or
and
or
dec
adc
xlat
out
xchg
dec
into
shr
jo
insl
and
stc
stos
js
das
jmp
sahf
dec
aad
popa
dec
xor
cmpsl
call
jecxz
sub
push
pushf
jo
orl
mov
aam
xchg
int3
pusha
inc
inc
ljmp
lahf
push
rcrl
mov
mov
icebp
dec
add
out
mov
pop
mov
dec
mov
push
push
aam
int
cltd
inc
pop
xlat
pop
or
add
movsb
cmp
and
xchg
jle
jbe
add
jge
sub
fcomp
push
jmp
mov
in
xchg
ljmp
cmpsl
xlat
xor
mov
pavgb
dec
daa
loope
loopne
xor
cmp
test
jmp
callw
es
outsl
cmp
jl
jle
jmp
push
pop
loop
test
adc
pusha
xchg
sub
xchg
mov
mov
pop
addl
push
pop
repz
push
sbb
lret
push
cmp
xor
scas
jge
fmul
mull
stc
inc
sbb
scas
and
mov
and
jbe
test
loopne
or
stos
mov
xchg
es
sbbl
fisttpll
outsl
hlt
fxam
fs
decl
in
mov
lahf
mov
sbbb
add
sub
ljmp
cwtl
cmp
insl
imul
test
rolb
dec
pop
dec
pop
xor
int
jecxz
push
or
mov
or
lock
ret
cmp
in
pop
push
stos
add
cmp
in
pushf
ret
shlb
popa
lcall
adc
or
jmp
mov
jns
mov
in
adc
add
dec
stos
imul
push
imul
dec
xor
shlb
add
cs
pusha
cltd
into
mov
mov
push
test
pushf
jne
pop
mov
ret
hlt
call
cld
xchg
dec
cmp
imul
mov
in
arpl
adc
inc
sub
mov
mov
mov
and
cmp
mov
bound
mov
and
push
pop
ljmp
ljmp
push
cli
or
pusha
sub
xor
shlb
mov
nop
inc
push
dec
sub
mulb
aad
jle
ja
sbb
loopne
ficoml
aaa
arpl
in
in
repz
test
inc
pop
sbb
mov
mov
jle
int3
ret
xchg
loope
push
sub
cmp
xlat
xchg
xor
mov
mov
push
pop
outsb
dec
out
pop
popf
mov
and
lods
add
pop
jb
lcall
popf
dec
movsb
inc
mov
sub
xchg
pop
ljmp
push
add
jb
xchg
mov
mov
popf
lret
and
lock
mov
push
dec
rcll
out
mov
es
leave
ficompl
inc
and
jge
in
mov
add
adc
push
adcl
add
into
ss
xor
mov
sub
cmp
frstor
mov
mov
out
call
scas
mov
sbbb
push
jmp
pusha
sarb
in
sub
sbb
push
push
push
push
sub
xor
fadds
dec
pop
cmpsl
jg
inc
mov
xchg
push
rcrb
loope
mov
cmp
and
inc
mov
push
or
aam
add
ja
jg
xchg
repnz
pop
mov
sbb
sahf
push
xchg
aad
xchg
pop
sub
push
addb
call
push
jno
loopne
incb
jecxz
lods
sbb
aas
filds
or
je
test
cmp
cmp
sahf
or
je
push
je
xchg
mov
out
jle
fisttps
divl
adc
cmpsb
dec
mov
xor
in
xchg
mov
jle
popa
mov
mov
jno
pushf
int
mov
and
in
in
xchg
test
arpl
outsb
movsb
cmp
leave
repz
jl
sub
push
and
jne
leave
xchg
dec
adc
mov
les
imul
mov
cmc
xchg
pop
sub
inc
push
add
fisttpl
xchg
cmp
iret
imul
rclb
lret
add
pop
jg
popf
scas
cmp
push
jno
cmp
mov
pop
fucomp
ss
les
lret
jmp
mov
push
xchg
or
sbb
aas
jecxz
mov
shr
xchg
xor
add
inc
sti
dec
aam
xchg
pusha
xor
into
or
or
pop
cld
adc
sub
aad
jns
fwait
cmc
add
inc
imul
sahf
mov
jge
loope
mov
inc
jne
dec
or
push
addr16
mov
inc
shrl
cmp
cmp
jle
xor
push
pop
fsubrl
dec
xchg
pop
mov
imul
shlb
sub
inc
leave
repz
fstl
lahf
mov
pop
je
addb
test
mov
fidivrl
out
mov
aam
js
sub
lret
inc
cli
rclb
les
xor
adc
cltd
pop
cmpsb
sbb
mov
bound
nop
xor
into
jmp
mov
cwtl
cs
aaa
lock
and
dec
cwtl
push
inc
into
xor
add
loop
cmp
mov
sbb
stc
shrl
lds
mov
movsl
cmpsb
adc
repnz
mov
jecxz
inc
push
sti
or
xor
call
adc
dec
imul
mov
cmc
rcll
jnp
test
mov
add
mov
push
jmp
or
and
sbb
std
aas
jbe
or
test
push
jae
cmpsl
pop
adc
out
in
sbb
ljmp
insb
cli
scas
stos
jnp
addr16
dec
cli
sti
mov
mov
xchg
push
fsubrl
rorl
out
bound
sub
aas
js
divl
xchg
lcall
xor
insb
fbstp
pop
jp
movsb
mov
sar
cmp
enter
mov
in
push
fsubrs
aaa
or
dec
and
call
call
dec
sbb
shrb
pop
inc
push
fldenv
xor
test
scas
and
out
sub
dec
cwtl
xor
sbb
xchg
clc
and
fnstcw
ret
jecxz
mov
les
push
rclb
cmp
sbb
xor
cmp
cld
in
test
sub
or
testl
sub
aaa
je
inc
fsubs
insl
xlat
mov
scas
add
leave
jge
adc
cmp
ja
cmp
jmp
jecxz
shll
je
add
ror
stos
inc
adc
inc
stos
sbb
addl
push
popf
sbb
or
cltd
xchg
insl
loopne
test
imul
scas
lret
ja
mov
sub
add
aad
push
mov
inc
aas
adc
mov
adc
pop
out
fidivrl
jmp
sarl
leave
pushf
dec
aam
adc
push
into
lods
sbb
jne
xor
popf
lods
push
add
dec
dec
push
xchg
sbb
push
movsb
loopne
aad
or
imul
iret
stos
push
mov
call
scas
mov
inc
pop
push
mov
fs
and
das
mov
mov
test
push
adc
je
test
out
or
mov
push
push
pop
pop
sbb
pop
mov
ffreep
cmp
sub
xorb
test
inc
scas
mov
mov
mov
add
mov
pop
shlb
inc
das
aad
pop
or
pop
rcrl
xor
dec
fs
pop
data16
xorl
sarl
repz
stos
bound
push
mov
and
mov
and
test
push
cwtl
add
cmp
das
insb
sbb
int
ficomps
clc
jno
repnz
lret
sahf
xor
sbb
lock
push
mov
sub
mov
dec
jl
test
adc
jl
mov
stc
leave
pusha
cld
roll
or
sub
pop
ja
cmc
dec
pop
stos
shlb
jb
leave
jns
or
mov
cs
xchg
jne
insl
xor
stos
inc
adc
lods
orb
cmpsb
int
in
les
mov
fists
and
je
inc
pop
mov
fsub
js
in
jmp
pop
out
add
push
add
stc
repz
push
add
jae
xchg
daa
mov
sbb
clc
pop
push
std
aaa
adc
test
jns
xor
sbb
sub
jl
dec
sti
push
mov
mov
js
inc
jecxz
adc
les
mov
push
shrl
xchg
cmpsb
mov
out
ljmp
lret
lret
pop
pop
push
call
push
sub
add
push
or
cmp
in
lods
jb
ret
filds
cmp
xor
cmp
and
stc
fimuls
sbb
mov
loope,pt
push
test
push
aas
lock
cmpsb
mov
nop
es
call
out
ljmp
fidivl
xor
aam
outsl
push
lods
push
lods
mov
jae
inc
movsb
and
push
mov
data16
fistl
sahf
test
push
dec
icebp
fs
cs
mov
mov
add
jl
xchg
mov
dec
fsubr
out
cmc
push
loop
pusha
sub
sbb
inc
mov
mov
and
mov
sbb
and
stos
leave
xor
xor
lret
mov
scas
imul
mov
insl
inc
hlt
imul
fwait
inc
jbe
in
rcrl
jno
dec
aas
jb
mov
popa
int3
into
jg
adc
aaa
aam
mov
cltd
and
jnp
cmp
decb
enter
xor
sub
pop
push
ret
mov
stc
sti
clc
xor
sbb
sub
mov
sbb
rclb
cmp
pop
fisubs
jno
imul
cmp
cmpsl
insb
mov
cs
cli
dec
outsb
test
lret
adc
sti
lcall
sahf
xor
mov
pop
cmpps
inc
fcmovbe
dec
dec
pop
add
jmp
ret
and
and
dec
dec
mov
cmc
inc
inc
scas
sub
dec
push
test
lods
insl
fwait
into
sarb
pushf
out
repz
scas
inc
xor
push
int
adc
cltd
ja
fistpl
movsb
mov
insb
inc
xor
mov
bound
fidivrs
xchg
repnz
push
push
xor
mov
loope
inc
sbb
push
jno
call
cld
push
test
mov
mov
aas
test
pop
and
subb
loope
ljmp
insl
inc
arpl
sbb
push
push
pop
push
jno
mov
and
into
hlt
push
sbb
lock
pop
inc
subb
jb
mov
push
popf
sarl
add
jp
and
sti
cmpsl
dec
rcr
pop
test
dec
pop
sbb
push
test
or
adc
cmp
adc
rorb
int
and
dec
dec
hlt
addr16
test
mov
je
sbb
and
pop
xchg
lret
jnp
or
and
jae
test
lea
pop
add
std
mov
fdivl
mov
leave
and
sbb
lcall
les
hlt
hlt
sub
repnz
xchg
mov
bnd
or
mov
mov
roll
jge
push
es
loopne
sar
or
sbb
cld
or
ss
cmp
xchg
dec
rcrb
shl
mov
cmp
xor
fimull
sbb
mov
push
jge
fisubrs
cmp
xor
xchg
push
inc
sahf
xchg
cmp
ret
dec
ja
pop
push
test
mov
mov
mov
pop
nop
rcll
negl
or
sub
stos
pop
arpl
shlb
cmp
mov
sub
js
mov
jns
xchg
testb
jmp
adc
ss
outsl
mov
shl
popa
lods
out
in
mov
push
xor
incb
xor
xchg
cmpsl
xchg
xchg
sbb
xchg
or
lods
cmc
ja
in
pop
out
movl
mov
pusha
mov
mov
imul
test
or
ja
imul
xchg
cmpsw
add
lea
cs
imul
gs
pop
setp
add
xchg
scas
xor
imul
lret
jp
cmp
push
pushf
mov
stos
fisubs
jmp
out
push
rcrb
adc
inc
pop
aaa
mov
xchg
int3
dec
pop
shl
xor
insb
sub
jnp
ficomps
ss
mov
daa
or
test
fdivrl
in
repnz
hlt
dec
dec
add
fisttps
repnz
in
inc
shrl
fimull
aam
add
cmp
out
iret
popa
jnp
mov
adc
mov
movsl
cwtl
and
cmp
adc
insb
xchg
movsb
gs
mov
mov
mov
cmpsl
flds
arpl
fcmovne
notb
cmp
fnsave
into
fimuls
push
sub
inc
cmc
cmp
mov
dec
test
jbe
sub
adc
call
cmp
push
add
cmpsb
in
sti
js
outsl
stos
jno
mov
je
jno
ds
call
fmulp
mov
xchg
shll
cli
cmc
and
cmp
pop
stos
inc
loopne
inc
shlb
push
push
xchg
mov
mov
or
jmp
movsl
enter
xchg
sbb
ficomps
mov
pop
cmp
aad
int
pop
mov
stos
push
jne
adc
in
or
dec
fsubrs
add
ja
js
pop
cltd
shrb
fs
fldenv
add
inc
loope
pusha
pop
gs
inc
push
sub
jle
frstor
xchg
or
loop
add
imul
mov
testb
addb
push
test
mov
fidivs
mov
imul
jge
pop
mov
sub
mov
in
push
jmp
xor
dec
or
lock
cmp
cmpsl
imul
loopne
xor
decb
es
ds
fnsave
sbb
lret
dec
movsl
lds
xchg
pop
loope
movsl
mov
pop
cld
ror
je
aaa
xor
insl
dec
fistl
andb
dec
dec
jo
sbb
cltd
sbb
sbb
or
xchg
xchg
and
es
lods
addr16
ja
je
sub
mov
shl
popa
cld
lcall
in
stos
leave
cmpsb
jmp
inc
push
pop
imul
in
mov
xchg
sbb
or
mov
add
mov
bound
lret
mov
sbb
sbb
call
insl
sub
mov
or
jle
and
ret
rcrb
sbbl
idiv
mull
les
lret
pop
inc
imul
cltd
addr16
cwtl
push
lea
or
and
dec
cmpsb
addr16
cltd
jecxz
sbb
scas
das
sbb
jae
imul
pop
repz
add
aaa
or
and
test
push
inc
mov
ljmp
jp
loopne
lret
mov
popa
sbb
popa
dec
stos
and
or
cmp
mov
fmulp
pop
or
xor
lods
dec
sub
or
sbb
or
mov
jl
pop
lcall
mov
mov
adcl
mov
xchg
sbb
or
mov
or
adc
sahf
loopne
cmp
iret
xor
push
push
sub
push
or
inc
stos
fcompl
and
cmpsb
fwait
js
pop
mov
mov
icebp
enter
mov
enter
outsl
jmp
jns
sub
add
xchg
push
in
test
xor
leave
cmp
aam
ljmp
aas
scas
jmp
adcl
hlt
test
es
adc
ficomps
adc
push
push
outsb
shl
out
add
pop
dec
dec
movsb
out
jne
pop
insb
ljmp
mov
add
roll
xchg
into
dec
shl
movsb
xor
aam
dec
dec
fiaddl
xchg
mov
repz
stos
mov
xchg
nop
das
cmp
pop
cmpsb
stos
divb
xchg
or
xchg
mov
inc
sbb
inc
inc
insb
cltd
std
les
jnp
and
data16
sub
inc
and
insl
xor
mov
and
test
enter
mov
lcall
cld
call
jge
pop
cmp
mov
sbb
dec
dec
in
mov
xchg
scas
push
fistpll
or
scas
nop
pop
push
call
fsubrp
sbb
xor
ljmp
and
push
xchg
idivl
icebp
add
lods
sbbl
xchg
cmp
push
push
outsb
pop
mov
out
test
movsbl
lock
pusha
jp
xchg
xchg
xor
add
data16
xchg
push
sbb
shll
mov
push
inc
push
scas
sbb
cld
and
adc
inc
test
fiadds
jp
loop
sbbl
inc
xor
cmp
fdivrp
ja
inc
adc
mov
jnp
insl
xchg
aad
cld
adc
or
xor
jnp
lahf
jns
jecxz
dec
int3
xor
aam
adc
pop
leave
lret
bound
loopne
mov
fwait
pushf
cli
fincstp
or
aam
mov
test
sbb
mov
out
lock
cmp
pop
push
cmp
pushf
cli
mov
repz
mov
cmpl
mov
or
loop
repnz
jp
pusha
popa
roll
pop
add
cmp
stos
xchg
pop
sbb
mov
or
aad
fdivrs
pop
sbbb
lds
add
mov
rorb
sti
dec
xchg
popf
sub
push
lret
rcl
ffreep
icebp
mov
je
pop
or
scas
jmp
inc
dec
push
ss
data16
push
push
imul
xor
jbe
add
pop
xchg
clc
pop
cmp
fwait
push
and
sbb
data16
pop
mov
testl
push
test
mov
xor
pusha
ss
push
add
scas
and
test
xor
movsl
inc
mov
ljmp
insl
clc
mov
bound
pop
ror
add
jp
stos
call
test
movsl
ret
inc
cmp
rorl
test
addb
cmp
push
stos
inc
mov
and
scas
insb
inc
les
push
dec
in
aas
daa
inc
imul
mov
push
lods
mov
cmc
pop
out
add
mov
xor
test
cld
xchg
mov
sarb
subb
push
sub
push
push
mov
icebp
adc
nop
dec
sbb
dec
ljmp
pop
cmp
dec
add
cmp
or
enter
sub
mov
mov
loop
in
lcall
cmpsb
movsb
push
faddp
movsb
sbb
lods
out
jns
mov
cmp
call
lcall
sub
lods
mov
fisubl
dec
push
mov
pop
pop
sbb
adc
vpcmpeqw
insl
loop
imul
jg
sbb
nop
xchg
out
mov
les
dec
adc
aad
mov
mov
stos
mov
and
mov
xchg
lahf
imul
xchg
jmp
inc
dec
jo
jg
sbbl
into
insl
gs
pushf
inc
cmpsb
push
adc
call
in
xchg
mov
cltd
ficompl
ljmp
leave
popa
xor
int
call
call
iret
pop
xor
dec
cld
in
ss
outsb
and
loope
push
and
fcomps
out
ja
stos
xchg
addl
clc
inc
out
fstpt
add
faddl
lea
jmp
lret
fisttpl
jo
pop
stc
push
cmpl
ss
mov
cld
sbb
xchg
cmp
sbb
repz
jno
cltd
jp
cwtl
mov
fdivs
cli
outsb
adc
notl
jbe
push
loope
xchg
cmp
les
add
cmc
sahf
es
dec
outsb
push
sbb
dec
ficomps
sbb
outsb
es
xor
fstps
in
cmp
push
pusha
or
adc
xchg
adcl
gs
fidivs
incb
sbb
pop
add
cmc
push
pushf
lods
add
scas
mov
cmp
xor
outsl
insb
fstl
popf
lret
xor
adc
test
dec
cmp
bound
dec
xlat
arpl
stc
mov
ret
insl
xorb
icebp
sbb
sbb
push
dec
push
xchg
sub
fcmovnb
xchg
pop
mov
mov
inc
dec
or
rorb
cli
jp
and
mov
in
mov
xor
inc
adc
fldenv
dec
repnz
push
lret
cmpsl
cmpsb
les
pop
mov
add
and
mov
adc
scas
jp
es
loope
mov
psadbw
call
dec
pop
fwait
out
mov
inc
out
dec
sbb
jns
mov
cld
gs
xlat
dec
xchg
sub
enter
repnz
es
mov
add
movsl
sub
lret
je
push
inc
in
out
jle
out
shrb
adc
cmpsb
ucomiss
and
inc
push
out
lods
out
mov
lods
cmp
sti
xor
mov
addr16
insb
push
out
push
sbb
jecxz
int
out
imul
out
xor
out
mov
dec
xor
ret
xor
and
test
lds
idivl
lea
notl
sti
adc
mov
jno
imull
sbb
xchg
insl
or
pop
repz
dec
testl
sub
sbbb
test
filds
fwait
mov
fisubs
jns
or
push
clc
mull
mov
js
arpl
add
push
cmp
push
clc
xchg
das
mov
sbb
rorl
cli
inc
cmp
jge
mov
or
repz
push
sbb
pop
pop
in
test
push
cmp
xlat
jns
dec
xchg
jle
add
stos
lcall
in
sahf
and
test
call
shlb
dec
lahf
and
jmp
sub
and
cld
lea
sub
outsb
add
jg
lea
inc
les
mov
jbe
dec
mov
jb
adc
cmp
and
insb
add
addr16
iret
aad
add
xlat
ret
mov
ds
xor
pop
repz
add
add
pusha
mov
cmp
fsts
aam
imul
pop
mov
rorb
ret
fcomp
mov
jb
inc
pushf
je
mov
orl
sbb
or
cmp
pop
sahf
push
xor
stc
rol
push
xchg
out
add
movsb
call
icebp
stos
std
outsb
cld
mov
mov
sbbb
mov
and
push
jne
notb
in
rcll
dec
sbb
mov
xor
mov
mov
lret
cmpsb
mov
test
fs
cmp
js
rcl
push
jecxz
fsubrs
test
lock
sub
ss
in
push
hlt
aam
fs
mov
push
ret
pop
jns
cmp
cmp
sbb
mov
adc
dec
int3
cmp
dec
ljmp
xor
shrl
push
mov
jmp
iret
leave
pushf
push
movsb
jb
jmp
or
clc
jge
sahf
mov
data16
pop
aam
jno
lods
inc
stc
jle
sahf
mov
inc
fistl
mov
pop
cmp
inc
xlat
out
enter
movsb
jmp
in
test
pop
sahf
imul
jno
push
xlat
outsb
inc
rorl
stos
jecxz
in
dec
jbe
jmp
clc
mov
xchg
sbb
cld
sti
shrl
insl
jl
lahf
rorl
or
or
jns
push
in
xchg
lcall
std
inc
xor
rcrl
lds
jl
std
bound
xchg
push
fwait
sti
adc
push
lods
mov
push
addb
hlt
add
inc
ja
pop
hlt
xchg
cwtl
int3
lret
xchg
sub
dec
gs
inc
insb
mov
adc
xorb
hlt
test
cmc
popa
cltd
xor
mov
add
ret
out
push
in
pop
or
lcall
mov
jns
clc
js
cmp
or
mov
sub
xchg
lds
mov
sbbl
push
std
cltd
fcomip
insb
add
das
push
popf
test
jmp
sti
or
fsubrs
sub
scas
shrb
lea
rcll
add
das
jns
jns
insl
jg
jns
mov
add
aas
adc
nop
daa
jp
inc
fwait
scas
inc
int
stc
dec
push
ss
jp
xor
int3
mov
inc
and
repz
xor
sbb
push
jmp
data16
sbb
sub
jp
cs
aaa
into
pop
push
cwtl
das
xchg
or
imul
or
mov
adc
roll
lea
jbe
mov
mov
sub
clc
shll
dec
push
cmp
xor
xchg
clc
xchg
mov
cmp
adc
sbb
lods
dec
shl
lea
xor
fwait
and
fistl
xchg
sub
movl
xor
popa
clc
dec
pop
es
jnp
lcall
and
add
ret
inc
xor
or
test
daa
pusha
fdivrp
xchg
adc
adc
sbb
lds
mov
mov
out
sub
xor
pusha
pop
xchg
dec
std
xchg
jg
and
mov
lock
fisubl
push
lds
cmpsl
ds
test
jp
push
lds
or
jmp
or
popf
cmp
std
xchg
jae
mov
cmpsb
mov
fldcw
jne
sub
loop
push
cld
xchg
mov
shrb
imul
sti
mov
xor
xchg
cs
push
insl
mov
clc
lods
lods
push
lods
fnop
mov
push
std
lcall
dec
xor
jg
movsb
sahf
inc
fxch
movl
aas
dec
sbb
pushf
mov
outsl
sarl
jecxz
or
push
cmp
adc
insl
pop
xchg
sub
lods
movsl
cmp
fldt
push
sub
cmp
push
mov
push
shl
sub
adc
aaa
xor
fs
jno
jle
push
lods
mov
es
push
ds
cwtl
das
push
cmp
or
mov
mov
out
sbb
pop
push
sub
leave
pusha
movsl
jle
repnz
les
cmp
sbb
orl
shlb
jno
shll
pop
out
cmc
cmp
mov
pop
mov
sub
cld
ss
fbld
dec
loope
rclb
rorb
das
pop
repz
push
xor
dec
lds
neg
inc
fmuls
into
gs
into
gs
mov
sub
insl
adc
cmp
out
jmp
ljmp
push
out
mov
or
insb
sbb
gs
jno
push
ds
outsb
sbb
stos
inc
call
xor
aad
sbb
jle
jmp
xor
jne
sbb
dec
mov
cmp
add
sub
imul
add
add
xchg
jno
lret
scas
adc
add
and
js
mov
add
shrl
cmpsl
jbe
stc
dec
stos
xchg
sub
or
adc
ret
jb
shl
push
out
adc
mov
test
dec
fistpll
cltd
add
sbb
dec
in
add
xor
leave
pusha
and
stc
cmp
mov
es
stc
cmc
mov
sbbb
repz
out
addr16
xchg
add
movsl
xor
cmpsb
cmp
sbb
cwtl
add
push
popf
mov
pop
hlt
adc
push
fidivs
xchg
ja
call
pop
movsl
push
pop
sahf
ss
fwait
scas
out
pop
scas
sbb
or
jge
jle
subl
or
xchg
cmp
fildll
jp
fldt
jae
pop
mov
ja
inc
cmpsb
out
das
jae
jae
stc
add
mov
dec
bound
jb
sub
sub
shll
jne
cmpsl
out
push
push
jae
mov
xor
test
lods
jecxz
popa
adc
sub
dec
in
ljmp
mov
outsb
adcb
jmp
adc
cmp
repz
out
xchg
xchg
cmp
or
roll
pusha
testl
adc
or
mov
int3
test
hlt
repnz
adc
inc
inc
adc
pushf
xchg
pop
icebp
enter
call
or
inc
cmp
or
fimuls
scas
gs
fsub
test
xor
lds
dec
in
pop
fadd
cmpsl
jno
aad
sub
adc
or
outsb
dec
xchg
jnp,pn
inc
fcmovb
mov
dec
in
hlt
add
outsl
inc
pop
sahf
jb
stos
inc
rcrl
mov
xchg
sub
xor
addr16
ret
pop
je
dec
loopne
cwtl
daa
mov
or
mov
scas
pop
inc
cmp
xchg
mov
lahf
ss
std
xchg
add
pop
sahf
pop
sbb
imul
add
faddl
and
js
inc
fadds
jecxz
adc
rorb
insb
inc
imul
cwtl
addb
mov
sbb
lcall
fs
inc
ficomps
andl
mov
fcmovb
pop
adc
pop
scas
jo
dec
filds
xor
loope
in
push
call
add
xchg
shll
movsb
jmp
sub
cld
cmp
insl
push
sbb
mov
and
or
and
popa
or
insb
cmp
add
fldcw
or
xchg
test
ss
aaa
test
cmp
xor
lods
popa
clc
ficoml
dec
out
mov
adc
mov
inc
fmul
or
xor
pop
cmpsl
mov
jo
xor
xchg
cmpsb
mov
xor
push
sub
addl
fsts
mov
jle
push
xor
cmp
mov
mov
fsts
push
incb
add
add
subb
fisttps
sub
lock
add
add
push
enter
aas
xchg
outsb
outsb
add
jmp
add
imul
push
lock
mov
icebp
in
testb
sub
xchg
pop
push
testl
fxch
insl
cli
cmpsl
push
push
out
sbb
adc
cs
enter
adc
insb
xchg
push
out
scas
adc
andl
jbe
in
inc
lods
outsl
pop
lret
fcoms
jne
xlat
daa
mov
pop
adc
fwait
xchg
mov
fstpl
cmp
cmpsl
das
orl
fidivl
out
mov
jmp
divl
add
adc
mov
push
aad
mov
push
sbb
cs
fsubrs
jnp
sbb
xchg
sub
cmp
or
pop
rep
xchg
mov
rcll
jp
jne
mov
xor
mov
jb
lret
bound
mov
sub
xchg
push
jbe
outsl
add
mov
adc
xchg
icebp
sbb
cmp
inc
cmp
xchg
cmp
dec
ret
lock
sbb
ret
cmp
loopne
scas
popa
mov
mov
flds
mov
inc
inc
jmp
mov
sub
out
dec
lahf
call
inc
xor
push
mov
push
xchg
pop
push
repnz
sub
mov
sub
popa
stos
dec
sysenter
xor
jle
cmp
dec
lahf
aaa
jmp
jno
sub
dec
and
sbb
imul
add
jge
pop
push
ds
pop
test
movsl
lcall
xchg
add
shrb
inc
xchg
sbb
ss
sbb
inc
xchg
ljmp
ja
out
push
pushf
xor
stos
pop
mov
pop
cltd
add
add
jle
fimull
out
negl
out
mov
sbb
ja
inc
lret
shll
test
or
inc
int
lahf
sbb
shlb
cmp
jle
daa
loope
sub
sbb
sarb
sbb
mov
imulb
stc
data16
mov
icebp
mov
shl
lods
inc
leave
les
stos
leave
shrl
aam
dec
in
mov
adc
push
mov
aam
push
mov
jnp
pop
sbb
int
das
repnz
int
subb
mov
inc
leave
mov
push
lret
xor
lret
in
in
and
movsl
mov
ljmp
test
inc
jl
jnp
sub
aas
flds
icebp
icebp
sub
pop
mov
sbb
inc
in
or
pop
sbb
ret
aaa
es
fnstenv
sub
mov
mov
fidivrl
mov
jae
or
lret
cmp
lds
out
xor
dec
or
mov
filds
xor
outsl
fxch
inc
ljmp
movaps
xor
cmpb
icebp
test
shl
mov
hlt
in
mov
mov
testl
ret
stc
xor
jmp
int3
data16
jns
fimuls
xor
loop
je
and
popa
jecxz
xor
daa
in
mov
shrb
hlt
adc
aad
push
iret
test
call
shlb
sub
jae
iret
jl
lock
mov
rolb
ret
mov
fmuls
push
adc
mov
int
add
push
movl
sbb
xchg
sub
sbb
ficoms
insl
aam
cltd
scas
popa
pop
stos
sub
cmp
dec
rcrl
sbb
repnz
rolb
add
push
xchg
daa
lods
and
fnstenv
cmp
ljmp
pop
adc
inc
shrl
shr
mov
sbb
inc
movsb
xchg
int3
inc
das
clc
pushf
xor
dec
fbld
push
ret
cmpsb
scas
pop
neg
dec
ret
in
mov
dec
iret
test
add
jecxz
inc
jle
pop
in
push
or
cmpsb
loope
inc
in
inc
enter
mov
mov
out
repnz
cmp
lods
scas
je
inc
cmpsl
pop
popa
mov
mov
push
lret
and
and
pop
mov
cmc
adc
and
fdivs
adc
data16
insl
or
mov
jg
lcall
push
out
and
daa
js
fnsave
rorb
mov
jb
sbbl
add
and
mov
fidivl
sub
data16
mov
pop
test
add
mov
rep
mov
out
jle
int3
sub
cmc
roll
es
aad
lahf
jmp
iret
inc
push
or
fisubrs
in
das
jmp
mov
orb
pop
movsl
repnz
pop
mov
mov
jno
call
leave
sti
mov
mov
cli
out
and
leave
jge
mov
jmp
fisubs
jo
fimuls
and
mov
sbb
jno
jbe
mov
cmpsb
mov
repnz
jl
adc
aad
rcl
js
xchg
insb
notl
leave
and
popf
xor
in
inc
into
mov
repnz
fsubs
dec
fs
stc
inc
sub
jnp
and
inc
xor
in
inc
aam
push
nop/reserved
xor
rcrb
xor
daa
and
xorl
dec
divb
adc
inc
push
add
push
push
loop
cmc
mov
lock
mov
dec
adc
mov
dec
xor
movsl
pop
dec
sub
mov
shlb
lea
gs
lods
xchg
pop
lahf
xchg
jbe
sub
push
push
insb
pushf
outsb
jg
dec
cmp
insl
push
or
cmp
sub
mov
xlat
cmp
out
jg
daa
mov
lock
mov
imulb
mov
push
loope
jbe
sahf
mov
in
imul
insl
jg
cmp
inc
fcmovbe
jo
push
dec
cmp
push
mov
xchg
sti
xor
movsl
sbb
add
rcrb
mov
cmp
movsb
push
sbb
add
in
cld
xor
in
mov
in
sbb
fsubl
mov
push
push
pusha
cwtl
gs
cwtl
mov
and
jae
subl
push
hlt
sub
push
fisttpll
push
leave
cmp
xchg
pop
fidivrl
pop
loop
data16
fnstcw
cmp
ss
sbb
lahf
out
xor
sbb
lahf
mov
and
adc
lock
test
test
test
or
and
cld
xchg
jno
and
push
xor
or
fstpt
pop
adc
aas
test
sbb
gs
add
xorl
scas
xchg
mov
or
add
lret
and
jmp
push
dec
lds
mov
adc
jmp
adc
adc
repz
out
add
xor
cmpsb
push
mov
leave
mov
mov
testl
and
xorb
jo
pusha
mov
sti
das
and
test
or
in
fildll
lock
and
scas
sub
sbb
or
mov
add
sub
hlt
xor
cmp
xor
dec
fbstp
int3
ljmp
shr
xor
aam
sub
jecxz
sarb
test
imul
mov
sbb
mov
mov
sub
mov
fstl
push
and
xchg
sub
mov
inc
mov
add
xchg
pop
mov
push
pop
test
inc
pop
insb
add
arpl
xchg
ficoms
xchg
nop
cmpsl
imul
shrb
jge
jns
pop
xlat
dec
mov
ss
test
clc
sub
sbb
push
mov
roll
pop
es
mov
cmp
popf
xor
imul
or
lret
push
lcall
pusha
xchg
dec
aaa
fdivrl
mov
pop
leave
or
ficompl
or
loopne
popa
mov
out
pop
fsubs
sub
push
mov
dec
fists
adc
dec
jbe
lret
cmp
sbb
cmp
les
icebp
sbb
ret
fstp
aam
fst
scas
pop
out
sub
lret
lock
aad
xor
mov
imul
loopne
dec
adc
insb
dec
xor
and
clc
into
aas
enter
push
fcmovnbe
push
out
pop
hlt
addr16
fsubrs
movsl
and
in
jae
lret
inc
mov
inc
sbb
mov
mov
std
scas
scas
jo
icebp
in
pop
stos
mov
and
xchg
std
imul
out
negb
mov
sub
pop
int3
popf
adc
sub
ret
dec
out
hlt
mov
sarb
cmpsl
and
jle
aad
mov
jecxz
xchg
out
xchg
pop
sbb
push
pushf
xchg
andb
mov
push
hlt
in
das
jmp
adc
pop
scas
loop
fnstsw
movsb
dec
into
mov
pop
fcoml
sti
cld
imul
daa
cmp
jne
cmp
fidivs
xchg
xor
adc
mov
mov
or
loope
dec
test
mov
mov
and
and
cwtl
lea
pop
sbbl
fs
push
push
inc
fmuls
test
mov
mov
cmp
test
sub
lcall
mov
orl
dec
outsb
add
or
inc
and
int3
inc
pop
andl
push
stos
push
push
mov
sub
fimuls
push
and
mov
xor
xchg
cmp
xchg
dec
test
out
xchg
xchg
iret
popf
ja
and
outsb
push
mov
add
pop
mov
out
or
xchg
cmp
push
out
xchg
andl
xchg
or
test
loop
movsb
fists
in
out
out
out
inc
lahf
stos
mov
test
rorl
push
push
fadds
xchg
and
sbb
ss
and
push
pop
xor
mov
addl
mov
pop
lock
xchg
or
and
enter
or
xchg
inc
fldl2t
sbb
sbb
push
in
outsl
push
imul
lods
dec
adc
addr16
mov
sub
stos
pop
stos
jg
aad
out
sahf
pusha
mov
fucom
and
dec
pop
or
cmc
cmp
sub
mov
in
lahf
rorl
cmp
ja
out
and
push
sahf
lods
jns
add
pop
sarl
xchg
outsl
xor
push
cmp
jae
dec
dec
mov
mov
jo
xchg
ss
push
shrl
jno
les
cmp
cmp
sti
dec
pop
jp
cltd
cmp
jns
xchg
sarb
xchg
xchg
pop
jmp
dec
mov
inc
dec
je
insb
push
lds
sub
je
leave
xor
filds
icebp
or
mov
mov
jns
adc
rcrb
fldln2
rcr
frstor
ret
daa
mov
sti
aad
shrb
dec
rcl
dec
lds
adc
cmp
or
push
jne
and
push
cmp
mov
pop
mov
inc
test
dec
xchg
popa
imull
sub
xor
inc
cmpsl
arpl
cmc
cmp
xor
or
lds
mov
push
cmp
push
sar
or
inc
fisttpl
sbb
jmp
ljmp
pop
push
jecxz
cmpsl
addr16
nop
ja
imul
add
bound
hlt
sbb
add
xchg
ss
push
adc
push
pop
icebp
sbb
push
ds
cld
xchg
mov
mov
pop
loope
mov
test
push
aad
push
mov
mov
hlt
mov
cmc
pop
iret
xlat
rorb
in
mov
cld
and
sub
adc
or
add
xor
or
sbb
mov
and
jnp
lret
cmp
sub
idivl
loop
and
sbb
sbb
xchg
mov
pop
push
jnp
mov
stos
jb
inc
outsl
iret
bound
mov
jae
push
pushf
sub
call
pop
inc
sub
inc
adcl
insl
movsl
and
jb
mov
sahf
jno
stos
mov
pop
lods
jg
sbbb
pop
addr16
inc
in
push
sarb
or
loop
mov
aad
out
and
fsub
sbb
stos
loope
hlt
test
movsb
imul
cmpsb
gs
sti
mov
xor
aas
xchg
jge
or
inc
stos
or
jo
add
push
rcrl
icebp
sub
outsl
in
das
xor
sarl
pusha
dec
int3
es
xor
push
subb
aas
jp
mov
fiadds
cmp
dec
out
popf
ss
outsl
mov
out
jmp
iret
andb
fnstcw
push
sti
outsl
aad
pushf
add
and
daa
outsl
fistps
dec
fstps
mov
imul
jno
ficompl
fstpt
orb
cmc
jmp
insb
xchg
push
ficoms
scas
mov
fldcw
leave
xor
adc
mov
sub
add
fnstenv
jo
lea
es
xchg
fnstcw
dec
add
lea
das
leave
jbe
sti
cltd
jp
add
fisubs
in
repz
cmp
pop
cld
daa
loopne
mov
mov
loopne
les
jne
sub
cli
cmp
ss
pop
mov
test
clc
scas
jl
or
notb
mov
add
jae
jae
mov
stos
pop
test
push
jmp
cmpsb
in
add
inc
les
push
cmp
xchg
mov
adc
test
cmpb
xchg
mov
dec
in
fdecstp
xor
lret
fucomi
push
iret
iret
and
int
stc
nop
into
iret
push
stc
int
cmp
into
scas
adc
adc
push
or
cwtl
push
push
or
mov
add
add
sbbb
fxch
and
sub
scas
into
sarb
iret
iret
aam
aam
shlb
mov
sarl
push
jle
mov
rcrb
jmp
fdivl
inc
pushf
scas
dec
scas
jle
add
mov
inc
aas
lds
push
rcl
in
jl
gs
dec
mov
arpl
mov
jnp
pop
mov
mov
loop
cmp
jbe
xlat
xor
iret
inc
loope
and
push
test
std
lahf
fwait
xchg
pop
mov
or
lea
mov
loopne
pmulhw
aas
cmp
in
test
push
dec
insb
xor
pusha
xchg
and
cltd
jns
in
jae
jbe
or
add
cwtl
aas
lods
std
and
lods
inc
mov
dec
jecxz
sub
sbb
pop
out
sbb
rolb
sbb
mov
sti
fisttpll
ja
push
test
lret
adc
popa
sub
push
call
inc
lock
sahf
mov
push
jmp
out
cmc
sbb
cs
cmp
in
mov
adc
cmp
adc
js
add
subl
mov
lcall
jmp
pop
jne
push
outsb
sub
jmp
mov
jmp
gs
adc
cmpsl
inc
mov
cld
bound
fnsave
pop
into
or
inc
cwtl
es
cld
cmp
pop
addl
dec
jno
outsb
icebp
mov
inc
cmc
mov
cld
xchg
adc
inc
stos
jne
pop
lods
sbb
pop
mov
xchg
push
jmp
add
jne
cmpb
cs
fs
or
adc
adc
xor
adc
aam
in
push
sub
iret
push
mov
pushf
push
int
xchg
sub
push
add
push
adc
dec
iret
mov
loope
fisubl
mov
test
push
shl
xchg
mov
sub
aas
icebp
push
addr16
sub
js
xchg
daa
icebp
daa
addb
scas
or
cmp
rclb
xlat
outsb
mov
addl
notb
jbe
sbb
popf
imul
dec
lock
cmp
shll
inc
iret
pop
push
jmp
push
adc
push
jp
loop
js
ljmp
cmp
pop
and
jl
std
xchg
xor
inc
int3
push
lcall
test
popa
movsl
loopne
add
repz
or
aam
scas
outsl
mov
mov
mov
inc
mov
mov
jnp
inc
mov
aam
addl
xor
jne
pop
lds
pop
aam
push
sub
dec
pop
inc
fcos
imul
imul
out
xchg
pop
repnz
sarl
and
sub
adc
outsl
push
xchg
mov
sub
xchg
outsb
movsb
cmp
pusha
push
stos
inc
repz
lret
push
push
mov
faddl
jg
rcrb
pop
scas
mov
sbb
filds
stos
inc
inc
cmp
jge
lea
cmp
das
mov
repz
sbb
out
xchg
push
aad
or
repnz
mov
fcomip
cs
roll
pop
leave
adcb
ljmp
fcomip
sub
scas
dec
ret
out
hlt
mov
into
loop
add
mov
out
ret
in
add
sbb
jb
je
aad
out
jmp
lcall
sub
cmp
mov
push
mov
mov
rcll
insl
clc
cmpsb
pop
rorb
jp
mov
mov
adc
cmp
pop
ret
fnsave
dec
mov
xchg
push
sarb
mulb
jmp
push
mov
dec
aam
lret
std
das
add
in
xchg
sarb
cmpl
stos
xchg
pop
das
mov
pop
adc
jmp
adc
mov
push
in
fidivrs
add
clc
loop
mov
in
in
shl
leave
pusha
div
lahf
xorb
dec
mov
rcll
xchg
std
je,pt
jo
inc
mov
jno
loope
sbb
testl
rcrb
adc
popa
cli
xchg
jg
xchg
ja
cmp
jg
mov
add
ljmp
daa
loope
xchg
adc
and
add
sub
rclb
repz
out
imul
ret
mov
push
add
cmp
xchg
stos
pushf
sbb
nop
mov
das
idiv
and
or
jmp
movsl
pop
test
jmp
les
shrl
scas
push
repnz
roll
inc
fcomp
inc
out
push
jbe
pop
lret
mov
mov
adc
test
lods
xor
lods
int
loope
ljmp
icebp
aad
fldl
rclb
adc
daa
rcll
leave
out
xor
fidivl
jle
call
scas
pop
test
adc
imul
pushf
mov
add
mov
imull
push
stos
cltd
test
xorl
ret
cmp
scas
mov
cmp
decl
jp
ljmp
inc
shrl
bound
mov
ljmp
push
lods
outsb
pop
xchg
jp
dec
sar
xchg
jnp
into
sub
out
sub
push
adc
je
enter
js
leave
push
aam
xchg
xchg
test
mov
leave
add
sbb
adc
mov
out
leave
fsubrs
js
cmp
pusha
movsb
orb
and
pusha
jns
xchg
iret
ss
into
ja
pop
add
les
pusha
jmp
movaps
or
mov
or
xor
aas
scas
jp
xchg
mov
fnstcw
arpl
outsl
pop
aad
and
adc
sub
hlt
ja
in
aas
loope
and
cli
shl
and
mov
inc
pop
cmp
mov
mov
loop
jbe
mov
lret
lea
shlb
push
dec
cltd
cmp
ds
cmp
sbb
xlat
cmp
inc
jge
or
shlb
xchg
shlb
mov
fists
pop
xor
subb
movsl
push
sbb
mov
in
pop
or
scas
fucomip
pop
mov
cld
hlt
loopne,pt
test
sar
xchg
out
hlt
lods
pusha
fstl
dec
mov
insb
rolb
out
sub
ja
mov
and
enter
cwtl
dec
cld
push
or
dec
test
shl
in
ss
xlat
add
loop
negl
mov
mov
dec
xchg
jb
jl
mov
sub
jb
sub
xchg
mov
nop
mov
fsubp
sub
add
in
dec
mov
test
or
and
jae
sbb
imul
into
popa
cmp
sti
inc
loop
mov
dec
lock
xchg
addr16
mov
mov
lea
mov
fcompl
insl
int3
fisttps
fadd
xchg
addr16
inc
fsubr
cli
out
sbb
cmc
cli
sub
lret
and
std
push
or
mov
xchg
mov
jne
jl
aam
mov
data16
stos
rol
sub
lock
ret
inc
mov
sbb
lock
lret
jmp
aam
fwait
xor
shl
sub
ficoml
stc
repz
call
loop
push
push
add
jmp
push
mov
or
fnstcw
pop
pusha
testl
mov
popf
xor
push
cwtl
das
inc
push
mov
dec
xchg
test
aam
out
testl
sbbb
mov
das
fdivp
push
call
xor
push
ja
insb
add
mov
xlat
jmp
inc
sbb
aas
leave
pusha
jno
pop
jle
out
les
add
cltd
and
and
jbe
inc
fdivrs
fcompl
or
das
jge
popa
cmp
adc
fwait
xor
mov
dec
adc
ss
push
mov
mov
fstl
cmpsl
push
and
enter
lds
dec
out
orl
shrl
add
mov
pop
insl
stos
inc
lahf
jns
cmp
repnz
les
adc
jle
pop
jecxz
push
add
jb
cwtl
mov
les
mov
or
cmp
ds
pop
pusha
testl
mov
popf
xor
or
mov
dec
xchg
cmpsl
fnstenv
mov
insb
in
testl
jle
adc
shrb
call
xor
jbe
insb
add
movsb
mov
ljmp
sub
leave
pusha
jo
pop
jge
out
ret
sahf
in
shl
add
cltd
and
and
jne
inc
fdivrs
fistpl
or
pop
repz
jge
pusha
cmp
insl
sbbl
push
push
loop
dec
adc
xlat
outsb
lcall
cld
sub
dec
imul
rcrl
sahf
dec
mov
mov
pushf
push
sub
shr
pop
dec
loop
int
jg
push
add
mov
movsb
adc
or
cs
call
cmp
jo
inc
pop
ret
pop
bound
mov
mov
sahf
addr16
clc
gs
sub
pop
mov
dec
add
repnz
stos
cmp
in
inc
pop
adc
cwtl
lods
das
fnstsw
dec
in
push
pop
sahf
aas
lock
sbb
mov
js
inc
fwait
xchg
mov
and
sub
jp
out
sahf
jne
fbstp
xchg
data16
es
mov
aad
jae
les
fnstenv
cmp
fisttpl
sub
cld
aad
je
mov
sbb
sub
adc
sbb
push
or
cmp
icebp
int3
xchg
jb
repnz
push
push
mov
push
dec
adc
lret
dec
pop
or
sbbl
pusha
pop
mov
insb
or
jo
lock
cli
or
cs
imul
fmulp
xor
inc
add
std
lcall
mul
mov
movsb
popf
xchg
insb
das
mov
adc
lds
icebp
in
dec
and
lods
cmp
in
push
sbbb
lcall
inc
lcall
push
push
repz
or
inc
jb
push
mov
mov
mov
ss
stc
pushf
sbb
inc
and
mov
mov
mov
pop
jno
sbb
add
xchg
push
sub
push
mov
dec
pop
lock
and
repnz
add
or
sbb
cmc
rolb
ljmp
dec
subl
lods
or
shll
test
sub
push
stos
sbb
xorl
inc
int
mov
push
aad
sbb
push
jae
iret
cmpsl
sbb
insb
and
jg
xor
out
and
xor
xchg
ljmp
lret
jg
ret
jo
daa
call
mov
push
dec
lock
jne
mov
mov
fsubs
icebp
xchg
push
rep
dec
push
mull
sbb
stos
dec
stos
xchg
inc
adc
outsl
jmp
in
push
ja
faddl
stc
aad
bswap
insb
ljmp
push
out
int
pop
clc
jnp
mov
mov
lret
or
sbb
cmp
sbb
xor
inc
push
jae
mov
dec
es
xlat
adc
push
scas
adc
lds
mov
xor
jg
sbbb
pop
mov
stc
bound
cmp
mov
or
pop
dec
bound
mov
lcall
add
jp
aas
ljmp
test
mov
fucom
outsb
xchg
adc
inc
or
leave
in
xchg
repz
aaa
jmp
insl
add
or
mov
and
outsb
add
adc
insb
add
mov
stc
pmaxub
mov
adc
mov
jbe
out
and
mov
push
mov
dec
lcall
fldenv
jb
push
pop
sbbl
into
sbb
adc
xchg
mov
jg
lahf
cli
xchg
adc
mov
pusha
idivl
dec
push
popf
cmp
test
sbb
xchg
sub
stos
xor
sbb
shll
fdivl
adc
pop
cmc
and
mov
adc
fnsave
lcall
scas
sub
aam
out
insl
mov
mov
sbbb
jnp
dec
push
jge
add
nop
dec
or
adc
sbb
mov
inc
cmpsl
xor
pop
mov
test
icebp
aad
and
out
push
add
scas
sub
mov
dec
and
xchg
mov
cmp
ret
xchg
test
nop
movsl
fistpl
inc
cmp
jg
and
mov
adc
add
aaa
lahf
and
push
add
mov
and
ja
lods
mulb
mov
int3
clc
aam
inc
sub
lahf
lods
ficoms
lods
mov
dec
cmp
fbld
mulb
cmp
dec
cli
mov
stos
mov
or
cmp
sti
fs
sahf
mov
in
jp
xor
push
jns
loope
mov
in
jae
jae
pop
adc
pop
add
mov
mov
jae
std
jb
xor
push
add
fs
push
dec
shrd
mov
fadds
mov
icebp
cmp
es
mov
cld
fs
cli
inc
or
test
push
clc
out
jge
xchg
mov
inc
or
pusha
fiadds
in
mov
faddl
and
repnz
cmpl
or
outsl
mov
mov
scas
mov
cmp
mov
std
data16
jl
rorb
push
push
std
cmp
out
je
xor
stos
jge
xchg
outsl
mov
and
aaa
inc
or
scas
push
std
movsb
std
fiadds
xchg
negl
arpl
jns
cmpsb
ret
mov
ja
ja
sbb
jbe
stos
xor
push
popf
enter
mov
dec
cwtl
mov
mov
insb
out
lock
dec
adc
cmp
jecxz
xor
int3
insl
pop
outsl
icebp
cmp
pop
add
sarl
hlt
add
js
iret
iret
fwait
inc
jne
call
add
lods
push
clc
lcall
and
addr16
xchg
lds
lock
xor
xchg
inc
scas
lcall
xchg
xor
pop
out
adc
cmp
icebp
pop
mov
sub
scas
lahf
aas
popf
xchg
xor
pusha
addr16
dec
scas
adc
popa
cmp
add
inc
push
sub
mov
outsb
in
loop
inc
sti
or
mov
cli
pop
and
dec
or
mov
jbe
insl
mov
xchg
nop
inc
movsb
jo
rclb
int
add
pop
xor
xchg
cltd
fidivs
jmp
push
jmp
repz
lds
fnstsw
xchg
cmp
or
ss
pop
clc
xor
mov
cmpb
dec
adc
xchg
test
out
mov
pop
stc
enter
adc
jg
mov
pop
idivl
dec
push
jb
ret
imul
fcoml
in
outsb
pop
sub
orl
mov
xchg
inc
adc
lock
push
jmp
ljmp
sbb
stos
into
mov
leave
mov
mov
mov
mov
rolb
insl
inc
test
stos
rcrl
cltd
pop
in
into
mov
mov
or
push
adcb
jmp
jb
mov
inc
outsl
imul
inc
loope
xchg
push
fwait
xor
orb
pop
and
into
ljmp
push
pop
mov
mov
sub
push
pop
xor
mov
inc
cmp
shlb
test
mov
mov
sub
adc
sub
xchg
lock
fstl
and
idivb
sbb
or
sub
mov
test
mov
mov
mov
mov
mov
push
dec
sub
adc
int3
lea
lea
push
mov
je
insb
in
mov
and
pop
xor
in
pop
int3
hlt
clc
add
test
mov
test
add
pop
loopne
in
insl
mov
inc
mov
lock
int3
mov
ljmp
insl
in
pop
clc
shlb
out
or
xchg
mov
enter
stc
jae
sarl
imul
out
in
pop
stc
push
add
es
push
adcb
pop
cld
add
fdivl
pop
outsl
ljmp
gs
rcll
ja
popa
hlt
mov
out
imul
adc
fistpll
dec
pop
or
in
mov
add
push
pop
out
test
dec
or
mov
xchg
aad
fnstenv
pop
decb
rcll
ret
nop
mov
pushf
pop
into
fidivrs
cmpb
aaa
outsb
fs
mov
stc
lcall
sbb
jno
lcall
mov
movsl
xor
xor
pop
lcall
data16
sti
mov
cmp
cmc
in
mov
cld
cld
cwtl
cmp
and
rclb
jnp
popf
js
pop
std
shrb
and
movsl
jge
sbb
and
rclb
cli
mov
mov
mov
cltd
cmp
xchg
push
pop
pushf
mov
sub
sbb
rolb
pop
inc
or
dec
adc
faddl
sbb
dec
cmovnp
xchg
and
incl
xor
xchg
pop
lret
cmp
jns
mov
jnp
inc
sbb
addr16
sarb
test
xchg
test
sbbb
dec
mov
jb
adc
sahf
mov
imul
cmp
fldl
lds
adc
ficoml
mov
mov
mov
mov
jmp
sub
int3
mov
cmpsb
xor
mov
pusha
lock
call
fstps
adc
insb
cmp
add
and
gs
shll
push
mov
ret
mov
add
loope
aad
dec
pop
les
test
imul
jae
fs
insb
addr16
add
fstpt
jo
xchg
outsb
ja
and
jne
or
nop
xlat
test
mov
cmp
cwtl
paddsb
les
adc
scas
sub
lods
lcall
inc
sarl
rcrl
and
lret
mov
inc
pop
mov
out
sbb
movsl
xor
push
rorl
sub
xor
dec
or
call
imulb
cmpl
and
jp
mov
push
push
shlb
adc
jnp
mov
sbb
les
push
adc
mov
jo
pop
stc
enter
rcll
popf
cmp
adc
stos
jle
jmp
add
rorl
push
or
stc
or
outsl
std
movsb
cmp
sub
xchg
adc
or
test
call
std
es
xchg
pop
add
sahf
mov
jp
xor
and
or
jae
inc
pop
jo
aam
int
int
insl
add
out
lahf
inc
adc
sbb
or
pop
mov
sub
cmp
frstor
scas
xor
jmp
cwtl
push
push
cli
stos
iret
mov
mov
pop
notl
jmp
out
outsb
push
mov
pop
cmp
pop
ret
and
mov
mov
movsl
das
daa
std
cmp
add
in
sbb
lahf
aaa
xor
sub
jne
je
in
hlt
ss
aaa
insb
add
in
mov
dec
pop
fcmovu
add
adc
adc
mov
rclb
adc
dec
test
push
dec
adc
cmp
repz
jp
movsl
in
xor
and
mov
repnz
out
ret
cmp
in
in
outsb
pop
add
jo
xchg
bound
adc
and
jbe
cmpsb
xor
outsb
mov
ror
xor
mov
loope
adcb
or
xor
mov
scas
mov
cmp
and
push
or
test
xchg
dec
inc
jne
xchg
mov
in
andb
mov
movsl
ss
imul
push
xchg
inc
adc
pop
cld
pop
dec
jo
push
xchg
cmpsb
push
mov
insb
imul
dec
or
cmp
mov
adc
arpl
sti
les
jb
or
dec
push
cwtl
xchg
lods
je
loope
sub
jl
xor
mov
jl
xchg
push
out
addr16
xchg
popl
push
mov
cmpsb
xor
mov
mov
xlat
pop
xchg
rorl
push
mov
outsl
cmp
xchg
outsb
jl
mov
xchg
imulb
scas
mov
mov
fidivs
add
and
repz
mov
ljmp
xor
jmp
fidivrl
jge
xchg
sub
pop
mov
push
aad
sti
mov
jb
orl
fiaddl
mov
out
jne
fisubrl
mov
pop
clc
pusha
adcb
jge
sti
popa
and
mov
xchg
cmp
push
test
daa
lods
fwait
negb
lret
jo
int3
add
mov
call
sti
into
xchg
mov
clc
pusha
add
imul
loop
dec
out
je
cltd
jge
bound
std
or
jle
pop
sarb
out
dec
mulps
dec
adc
rcll
insb
xchg
push
inc
mov
stos
inc
or
sbb
mov
rcrb
sbb
jecxz
pop
mov
push
dec
adc
inc
or
js
cwtl
loope
push
pop
hlt
fildl
pushf
jecxz
xchg
iret
test
or
outsl
fs
or
xchg
or
mov
scas
add
les
xchg
adc
adc
lret
stos
mov
inc
loop
mov
js
adc
lea
add
and
xchg
mov
shl
addr16
cmp
add
mov
fsubp
jno
cmc
call
pop
pop
sbb
ja
fiaddl
cmp
xor
lcall
call
js
inc
add
inc
fsubs
sbb
jnp
je
mov
aad
push
aad
push
jg
fdivs
stc
pop
jmp
xlat
xchg
adc
ds
rclb
xor
in
sahf
ds
movsl
push
lods
arpl
clc
test
fisubrs
mov
jl
nop
inc
test
int
jno
pop
dec
or
or
outsl
jmp
and
in
and
out
cli
xor
pop
dec
or
scas
dec
mov
outsb
out
pop
cmp
cltd
dec
mulb
or
mov
push
mov
pop
mov
sbb
jns
sti
xchg
inc
jp
mov
mov
je
rorl
into
stos
ss
lret
mov
dec
push
lcall
fcoms
lret
nop
inc
xchg
inc
mov
sarb
into
cmpsb
clc
pop
cmp
and
and
xorb
cmpsl
mov
xor
xor
dec
adc
sub
lods
pusha
ds
add
jne
loope
or
orl
and
pop
jle
js
push
add
mov
cwtl
rcrb
mov
adcb
js
cmp
cmc
gs
and
pop
fstl
jb
inc
fsubrs
pop
lahf
test
mov
mov
mov
cmp
fistl
leave
cmc
lods
xor
xchg
cmp
aad
lret
fadds
cwtl
rcll
aas
mov
es
cwtl
inc
add
push
jmp
push
pop
jmp
adc
test
and
ds
jl
jmp
data16
popa
icebp
xchg
xchg
orl
mov
cwtl
mov
mov
add
cmp
or
jns
fisubrs
mov
test
mov
cmp
mov
aad
daa
stos
inc
pop
add
mov
xorb
imul
jge
sub
inc
in
add
mov
inc
cvtdq2ps
cmp
testb
mov
into
xchg
inc
cmp
sbb
addr16
or
and
cmp
adc
mov
cmpsb
popf
cmp
cmp
or
ret
scas
sub
and
jmp
cmpb
inc
cltd
pop
jb
rol
push
push
sbb
push
in
mov
std
je
das
inc
nop
aaa
mov
scas
orb
scas
xor
cmp
and
subb
fcmovbe
rcr
andb
xchg
mov
sbb
adc
pop
std
pop
dec
cmpsl
xor
mov
rolb
cmpsl
mov
cwtl
jnp
and
popf
push
pop
ret
leave
mov
sub
fdivl
stos
sub
sbbb
xor
sahf
imul
dec
inc
or
mov
lods
xor
push
pop
xor
aaa
mov
pcmpeqb
mov
dec
test
aaa
cwtl
ficompl
movl
scas
das
jl
add
andb
xchg
fldcw
test
iret
pushf
cmp
jg
nop
jbe
lret
outsb
gs
dec
fs
xchg
adc
test
add
or
add
enter
cli
fcomps
jo
into
lahf
aam
bound
lret
jne
adc
inc
loopne
addb
inc
push
sar
pusha
adc
lods
ss
mov
pop
clc
dec
inc
pop
ret
mov
sarl
mov
sbbl
and
filds
ljmp
jne
ja
inc
stos
jbe
mov
mov
addr16
es
ds
dec
mov
test
bound
and
dec
gs
lock
js
movsb
cmp
loopne
subb
push
jp
int3
dec
ja
out
pushf
loop
out
mov
fdecstp
mov
xchg
ljmp
pop
sbb
imul
cwtl
inc
pop
xor
xorl
lea
lahf
push
rcrl
and
sbb
mov
imul
addr16
xlat
ja
fs
and
sahf
cmp
push
jle
sbb
cltd
aaa
pop
cwtl
adc
xchg
xorl
mov
jp
sbb
fcomps
in
mov
push
in
cmp
je
faddl
loop
inc
or
aad
dec
aam
outsb
rcrb
cmp
daa
scas
xor
ja
decl
mov
enter
mov
mov
out
jno
xchg
dec
orb
mov
rcl
movsl
xor
or
lcall
jmp
testb
mov
fmuls
jg
lods
add
lahf
insb
mov
sbb
pop
mov
leave
push
pop
jne
adc
push
lods
cs
cmpsl
push
push
rcll
dec
ss
jle
rcll
clc
test
gs
sahf
cmp
jg
push
data16
into
push
sub
cs
jnp
inc
adc
imul
arpl
inc
stos
sbb
adcb
push
leave
mov
movsl
xchg
inc
mov
mov
stos
mov
adcl
out
jge
pop
out
imul
outsl
mov
in
jl
xchg
inc
push
add
mov
mov
scas
cmp
mov
or
pushf
popf
mov
inc
inc
pop
cli
ds
sbb
push
mov
rcll
or
aaa
add
bswap
dec
pop
push
jp
push
add
data16
sbb
ficoms
mov
movsb
in
or
pushf
cmp
pop
lea
std
js
cs
stos
inc
sahf
dec
cmp
mov
and
and
add
adc
mov
mov
adcl
out
jb
push
shl
in
pusha
jecxz
push
dec
jne
dec
mov
out
stc
dec
adc
js
outsb
xor
cmp
outsl
out
mov
cmpsl
mov
call
mov
movsl
mov
mov
mov
dec
push
cmp
mov
pop
mov
mov
inc
je
jecxz
push
insb
popa
neg
dec
dec
or
aaa
incl
into
adc
sbb
dec
jle
inc
xlat
call
stc
pop
add
adc
enter
aad
pop
add
leave
jg
and
ss
jno
dec
xor
test
fs
push
push
xchg
cmp
ret
pop
push
and
shrl
test
mov
sbb
sub
push
cmpsb
fld1
imul
lcall
cltd
mov
xchg
in
lea
add
mov
push
loope
cmp
ljmp
outsl
ljmp
xchg
inc
std
pop
cmp
xor
mov
das
dec
or
mov
roll
cwtl
cmp
popaw
aaa
into
xchg
jp
mov
into
cmp
jmp
cli
sub
mov
sahf
inc
clc
test
test
jle
fsubrs
dec
or
les
faddl
rcll
mov
xchg
or
push
enter
and
repnz
or
insb
out
aas
sbb
sbb
cmp
xor
xor
pusha
pop
dec
or
roll
jge
lods
sub
data16
jl,pt
aam
sub
sarb
pop
or
ljmp
inc
sbb
adc
sub
xor
push
xchg
daa
mov
int3
jmp
sub
fs
decl
jg
xor
lds
mov
rcrb
add
or
in
in
daa
mov
clc
dec
or
cld
xchg
bswap
rol
push
push
hlt
jo
pop
call
mov
out
sbb
sub
fldenv
cmp
test
rcr
into
gs
pop
je
pushf
inc
pop
fildl
adc
inc
jb
xchg
push
int3
xchg
inc
ret
pop
lds
mov
xchg
cmp
pop
aad
push
push
add
mov
cmpsb
xchg
fadd
xchg
mov
mov
pop
mov
adc
cltd
cmp
dec
lds
enter
sbb
mov
rolb
push
imul
dec
mov
sub
mov
int3
xchg
push
dec
and
popa
mov
lods
pop
add
mov
int3
incl
mov
mov
fdivrl
movsl
sub
sti
loope
sub
xlat
fstpl
cmp
mov
inc
push
jno
push
sub
pop
filds
push
clc
mov
shrb
ds
jns
xor
push
int3
das
cltd
sub
and
xchg
aaa
jns
fwait
inc
mov
lods
sarb
jbe
out
call
and
xchg
mov
jnp
aas
sahf
cmp
mov
lret
mov
lods
mov
push
bswap
pushf
icebp
jmp
aam
adc
xchg
inc
mov
cmpsb
push
add
ret
mov
leave
xchg
mov
pop
cmp
fistpll
into
mov
sub
cltd
mov
cwtl
add
vpackuswb
scas
mov
movsl
mov
rcrl
inc
fisubl
or
push
into
fs
imul
ja
push
fwait
dec
insl
repz
lret
mov
or
test
inc
shll
cli
xchg
int3
xchg
loope
hlt
pop
mov
mov
cmc
push
push
out
lods
xchg
xchg
mov
fwait
inc
sbb
xchg
cmp
dec
mov
movsb
int
cmp
push
stc
dec
das
leave
xchg
inc
popf
jno
dec
xchg
jl
sbbb
inc
sbb
iret
mov
inc
cmpsb
ss
pop
ss
scas
push
sub
mov
jnp
push
ret
shll
push
xor
sti
pop
sub
jecxz,pt
jo
lcall
jb
lret
and
insl
mov
mov
jb
popf
ds
into
jns
rcll
aas
cltd
add
pop
dec
push
test
mov
montmul
cmpsb
test
push
clc
pop
add
fmuls
rorb
enter
std
inc
pop
fldl
lret
daa
stos
pop
pushf
test
testb
insb
inc
xor
int
fstpt
shl
xor
mov
stc
pop
sarb
stos
sub
xlat
jno
inc
les
nop
and
cmp
and
rorb
loopne
adc
cmpsl
xchg
jno
mov
test
lret
sbb
dec
jl
jle
lods
push
jge
jecxz
dec
lret
cltd
sbb
hlt
loope
push
loope
jle
mov
stos
xchg
mov
rcr
orl
pop
daa
test
adc
push
je
lret
xchg
xor
shrb
jg
pop
cwtl
inc
xchg
imul
out
jge
stos
clc
push
jbe
gs
outsl
xor
push
jmp
xchg
or
and
add
lds
or
lds
sub
sarl
mov
aaa
punpcklbw
push
inc
adc
or
cld
pop
cmp
or
push
cmp
call
outsb
scas
or
xchg
jg
mov
xor
fwait
loopne
jo
lret
sub
cmp
mov
stos
das
leave
test
push
fcomps
pop
add
fiadds
mov
sub
iret
addr16
cmp
mov
stos
xlat
jns
data16
cld
movsl
adc
iret
mov
mov
scas
jg
call
cmc
icebp
mov
popa
mov
cmpsb
test
mov
les
inc
lcall
aam
test
mov
cli
pop
jle
xchg
inc
imul
arpl
insb
push
leave
out
sbb
dec
repz
xor
cwtl
jbe
decb
popa
gs
jno
ja
in
insl
clc
pop
mov
mov
es
xlat
jle
stos
push
or
xchg
cmp
rolb
jae
dec
in
xchg
ds
push
gs
xor
repnz
pushf
inc
xor
lea
and
arpl
das
mov
jle
ss
aaa
pop
add
xor
sub
mov
sub
repz
cltd
cmp
push
xchg
xor
ja
int3
inc
adc
lret
and
scas
jmp
adcb
mov
insb
cmp
pop
mov
inc
adc
mov
pushf
dec
or
mov
and
add
cmp
into
lret
inc
adc
in
addl
xor
fs
dec
les
test
mov
sarb
pop
mov
sub
sarb
jecxz
dec
adc
mov
adc
addr16
orl
lahf
pushf
inc
sbb
cli
fs
dec
lds
pop
dec
mov
int
loop
mov
movsl
lcall
sub
dec
jmp
repnz
or
les
shrl
mov
and
out
js
aad
mov
inc
adc
cmc
jnp
xor
pop
cmp
movsb
dec
test
clc
lahf
aam
daa
xchg
push
add
fiaddl
mov
mov
repz
push
stc
mov
pop
add
sarb
pushf
mov
addl
lret
pop
orl
mov
or
xor
jae
fildl
push
sahf
aas
in
test
mov
cmp
xor
mov
movsb
lcall
ja
repnz
inc
xor
jbe
jp
xor
jp
je
xor
adc
adc
mov
mov
jp
xor
stos
xlat
and
pop
add
ss
mov
mov
sarl
pushf
lods
xor
das
or
cmp
lret
xchg
mov
test
mov
iret
jp
movsb
bndstx
jmp
add
aaa
or
and
push
std
push
xorb
flds
cmp
jb
or
and
xchg
cmp
ret
xchg
mov
rclb
mov
xchg
cmp
andb
push
fcom
jl
test
sbb
xlat
add
in
jne
cmp
mov
int3
xchg
shll
mov
and
adc
lahf
cmp
icebp
jo
rclb
adcb
or
mov
mov
push
add
push
or
pushf
cli
es
stos
ret
sbb
rep
push
ljmp
jno
popa
inc
mov
xchg
cmp
fsub
addr16
imul
nop
inc
cwtl
lret
xchg
mov
das
pop
fld
mov
mov
fmuls
pop
ja
imul
jno
cvttps2pi
pop
xchg
ss
ret
div
pop
cli
pop
adc
fs
lea
push
rcl
fwait
xor
push
adc
cmp
pop
xchg
sub
lea
cwtl
inc
inc
outsb
xchg
cmp
dec
cmp
sub
or
popf
cmp
sub
inc
or
inc
pop
add
dec
rorb
imul
cmpsb
adc
stos
and
jl
mov
add
mov
aas
in
inc
flds
movsb
or
sti
js
ds
mov
ss
xor
daa
xor
adc
in
inc
mov
cltd
cmp
shrl
xchg
rcrl
adc
sbb
test
inc
addr16
out
jmp
add
hlt
cmc
pop
jmp
nop
jmp
and
jecxz
xor
fdecstp
cmpsb
orb
rcrb
aad
sub
dec
test
add
popa
stos
xor
fucomi
jbe
push
mov
clc
jmp
jle
loope
jle
into
jno
rolb
push
or
lds
dec
pop
sbb
test
lods
push
int3
mov
mov
scas
inc
dec
adc
jp
aad
cmc
addr16
repz
jg
pop
inc
leave
mov
and
les
cli
pop
jge
xchg
inc
test
pusha
notl
cmpsb
jle
fmuls
faddl
cmp
ret
inc
or
mov
into
lea
fists
ss
mov
iret
lds
psadbw
sub
sub
addr16
jbe
dec
test
mov
mov
sbb
lret
mov
add
add
or
jle
dec
ja
cs
gs
add
pusha
push
notl
ss
iret
dec
cmc
push
jbe
es
popa
mov
js
dec
jno
push
lret
push
add
mov
cmpsb
dec
push
sub
bnd
fiadds
mov
lods
push
clc
lret
hlt
shlb
sbb
jge
je
shl
pop
decl
call
jle
xchg
into
repnz
in
lods
call
in
push
lock
sub
cmp
pop
and
das
jb
adcl
xchg
int3
lea
cmp
mov
mov
sbb
mov
xchg
cmp
test
rcll
mov
cmp
or
movsb
sub
pop
movsb
sub
or
idivb
adc
push
arpl
fs
mov
jo
jp
fnstenv
fistpll
ljmp
pop
inc
bswap
arpl
hlt
adc
mov
dec
fistpll
fidivrl
repz
out
sub
pop
mov
movsl
jp
mov
jnp
loop
pusha
repz
cmp
mov
cmp
jno
adc
ficoml
adc
adc
lcall
iret
mov
xlat
and
ljmp
mov
push
lods
lea
xchg
js
mov
mov
pushf
xlat
dec
out
mov
mov
in
clc
pop
into
push
std
jmp
sbb
xor
jbe
add
push
mov
std
arpl
lds
mov
sbb
rolb
xchg
cmp
push
fiadds
outsb
inc
or
xchg
and
dec
bound
mov
sti
adc
ret
push
test
mov
sbb
mov
test
movsl
sub
mov
pushf
cwtl
ss
pop
rcrb
mov
fiaddl
pop
pop
jmp
pop
add
jns
shlb
pop
or
sbb
sarl
push
cltd
inc
sarb
leave
mov
lods
jle
xor
inc
jae
popa
jg
out
sub
mov
xor
push
mov
mov
fwait
cmp
fdivl
xchg
add
nop
mov
mov
lret
mov
cmp
or
imul
push
jge
jnp
adcb
and
sbb
pushf
mov
sub
push
xor
scas
dec
dec
daa
mov
xchg
mov
fwait
out
xlat
orl
sub
mov
or
jg
sbb
mov
cld
ljmp
inc
dec
adc
pop
lret
pop
je
ss
jmp
sbb
dec
sti
pop
pop
insb
xchg
inc
aad
dec
or
int
xor
push
fidivrl
sbb
pushf
sub
mov
mov
cwtl
cmp
mov
pop
roll
lock
add
xchg
dec
push
mov
mov
aaa
sahf
jae
pop
lret
les
mov
mov
adc
xchg
mov
mov
jmp
add
sbb
xchg
inc
add
bound
push
scas
push
out
xchg
xlat
push
movl
pop
mov
mov
inc
movsl
cmp
dec
mov
sbb
dec
aas
cmpsb
xor
push
sbb
cltd
inc
adc
jae
mov
or
test
inc
mov
mov
lea
cmp
pop
in
repnz
push
mov
mov
in
jb
test
push
into
jne
xlat
jl
gs
call
sti
mov
jnp
outsb
test
adcb
xor
andl
repnz
xchg
xchg
add
adc
flds
xorl
push
call
std
xor
leave
rcl
ja
push
xchg
push
jne
je
mov
cmp
leave
filds
in
loop
and
shll
push
lods
push
loop
xchg
mov
out
aad
stos
sub
push
dec
pushf
bound
int3
sub
cld
cmp
pop
aaa
adc
xchg
push
lahf
outsl
in
xor
pop
sti
sub
aaa
or
jno
mov
sbbb
ss
inc
insl
jae
push
in
cmp
sub
pop
lret
mov
gs
out
jo
insl
pop
add
xchg
cmp
adc
add
inc
in
adc
into
lea
xchg
pop
xlat
inc
sub
jno
je
add
cltd
push
pop
adc
push
mov
out
pop
outsl
in
fdivp
xchg
inc
xchg
movsb
idivl
in
addr16
in
xor
pop
imul
pusha
mov
sub
jge
fcmovnb
xchg
jns
je
andl
or
mulb
push
arpl
mov
mov
repnz
int
sbb
jecxz
push
add
xchg
mov
push
aam
std
mov
cmpsb
and
xlat
cmp
outsl
call
in
jae
dec
pusha
out
sbb
jae
aam
clc
in
mov
cmp
and
jp
pop
add
scas
xor
or
push
dec
aas
mov
push
push
mov
aas
cmpsl
sub
stos
push
les
push
inc
test
cwtl
xchg
xchg
push
mov
addr16
mov
lea
enter
pop
adc
nop
sbb
mov
xor
loop
adc
call
icebp
push
outsl
push
xchg
push
jmp
fisubl
xchg
sti
stos
inc
sub
dec
leave
pusha
orb
inc
cmp
pop
lret
bound
mov
and
and
ss
inc
fmul
push
es
sbb
jge
outsb
cld
stc
sub
dec
adcb
jecxz
push
adc
xlat
outsb
push
mov
mov
adc
into
das
xor
pusha
out
push
lods
and
xor
jb
insl
add
xchg
push
jmp
pop
out
pop
sbb
inc
lods
cmp
pop
add
in
push
loopne
popa
adc
lcall
and
mov
inc
xlat
dec
fsubs
or
popf
sub
pop
mov
pusha
imull
into
jle
add
push
xchg
and
ljmp
lea
pop
adc
sbb
mov
leave
loope
adc
call
lock
outsl
push
xchg
push
jmp
fldenv
pop
xchg
cli
stos
inc
sub
mov
jg
lods
inc
cmp
out
rcrb
bound
mov
and
and
xor
push
es
sbb
jge
insl
sti
stc
sub
fwait
xor
dec
adcb
loop
push
adc
sahf
xor
addr16
mov
mov
fcoml
stos
or
cs
pop
out
push
lods
pop
orl
jno
insl
add
xchg
push
jmp
pop
in
pop
pop
jp
inc
lods
cmp
pop
decl
out
push
fmulp
popa
adc
movsl
xor
jg
and
mov
inc
fmuls
and
pop
imul
sub
pop
mov
pusha
imull
int3
jle
arpl
xor
mov
outsl
call
or
mov
vpshufd
adc
lret
push
lods
pushf
add
xor
jo
test
push
ljmp
jno
xchg
clc
lods
inc
sub
lret
or
jg
pop
int3
arpl
scas
ljmp
add
mov
push
daa
mov
sbb
jle
imul
cli
sub
sbbl
adc
fsubrs
repnz
lea
ficoml
or
xor
pop
in
pop
scas
sbb
ds
add
ret
and
jno
adc
ss
es
mov
jle
fmul
bound
jb
pushf
mov
les
mov
mov
inc
flds
and
negl
mov
popa
clc
test
lret
cld
popa
mov
xor
out
mov
cmp
fidivl
pop
push
lods
mov
stc
nop
dec
lods
xor
scas
lcall
int3
in
push
jo
orb
jmp
mov
jb
xchg
imulb
out
lret
pop
scas
inc
cmp
fs
push
popf
and
and
jb
or
les
mov
push
cmpsb
inc
fst
aaa
jle
imul
pushf
xor
fidivrs
aaa
shlb
fsubrs
icebp
mov
lea
fcoms
or
xor
pop
jmp
scas
sbb
push
out
cmp
outsb
add
shll
and
or
stos
inc
test
nop
daa
addr16
enter
scas
inc
mov
fcmovne
arpl
cs
orl
flds
es
cwtl
and
jle
jmp
stc
test
popf
xor
leave
adcb
pop
mov
ss
mov
jo
outsl
mov
aaa
ret
hlt
pop
push
lods
mov
xor
fldt
scas
cltd
cld
push
jmp
in
dec
jo
orb
and
xchg
hlt
lods
inc
es
sub
inc
lret
push
mov
cmp
into
gs
push
popf
push
lods
in
sbb
and
jo
or
ret
rolb
inc
xor
gs
sub
sbbl
fdivrl
cmp
das
fsubrs
lock
lea
adc
pop
xchg
sti
xchg
leave
sub
leave
pop
ljmp
lods
cmp
into
insl
int
add
mov
loopne
or
je
inc
cmpsb
xor
pusha
stc
xchg
jg
fxch
or
popf
lahf
sub
sbbb
mov
mov
inc
fiaddl
daa
mov
xchg
and
push
mov
push
jmp
or
sbb
pop
mov
aaa
dec
mov
jno
insl
mov
nop
xor
push
pop
scas
xchg
sti
xchg
inc
test
int3
fldenv
mov
cli
push
ljmp
jno
jle
push
in
cmp
rcrl
or
mov
sub
inc
lret
bound
mov
ss
jmp
mov
pop
sahf
sbb
in
test
cmp
or
rcll
and
inc
xor
push
data16
gs
mov
sbb
mov
cmp
fnstenv
out
mov
mov
adc
xchg
daa
xor
pop
call
push
call
imul
push
decb
and
adc
inc
movsl
xor
popa
clc
test
orb
or
sahf
sahf
sub
sbbb
lock
mov
inc
iret
daa
mov
xchg
and
push
mov
pop
call
or
sbb
pop
mov
aaa
dec
scas
imul
xor
fdivl
push
sbb
inc
cmpsl
ss
sbb
sub
jb
jge
push
in
cmp
je
icebp
scas
inc
and
int3
arpl
mov
xor
ljmp
ljmp
fstpt
mov
sub
dec
sub
jg
stc
adc
adcb
repz
and
sahf
xor
ja
mov
cmp
sub
mov
mov
fnsave
push
lods
add
es
push
out
mov
jns
jmp
imul
push
in
mov
fdivl
push
jb
inc
movsb
das
xchg
sub
lret
testl
int
pop
insb
or
pop
mov
or
inc
int
mov
xchg
pop
inc
fstl
sbbl
mov
ret
sbbb
pop
mov
cmp
fdivl
imul
je
push
sbb
inc
movsl
aaa
into
bound
mov
notl
sub
jae
jnp
push
out
cmp
or
out
scas
inc
and
int
je
mov
xor
shlb
call
out
test
cmp
mov
sub
sub
jge
arpl
adc
sbbl
and
test
jne
mov
cmp
sub
jb
ljmp
mov
fidivs
rclb
scas
add
xor
mov
ja
ljmp
jno
sti
mov
mov
fidivl
jo
inc
mov
ret
int3
arpl
xorb
dec
ror
gs
es
sbbl
mov
stos
push
inc
fnstsw
lret
sub
xchg
sbb
sbbb
outsl
gs
mov
roll
mov
cmp
fnsave
rclb
sti
xchg
xor
sbb
inc
mov
sbb
es
shl
inc
jae
jns
pop
out
aaa
lcall
mov
scas
inc
pop
lods
xchg
sub
inc
int
jb
mov
xor
addr16
or
fdivrs
daa
mov
sub
sarl
setle
iret
xor
std
and
sbb
push
or
jmp
stc
nop
mov
fidivs
rcll
scas
add
xor
mov
jbe
ljmp
jno
cli
xchg
mov
fnstenv
outsl
scas
inc
mov
ret
hlt
jg
inc
mov
jmp
inc
ror
gs
or
push
mov
or
ds
sti
pop
fs
nop
sbb
fimuls
sbbb
outsb
gs
lahf
add
cmp
rolb
mov
mov
je
data16
sti
xchg
das
mov
sbb
aas
mov
sbb
and
inc
jae
js
pop
out
ss
xchg
sub
push
jbe
mov
scas
inc
push
stos
xchg
sub
aas
int
jno
mov
xor
shlb
out
mov
xlat
cmp
mov
sub
sub
jnp
arpl
push
popf
dec
das
sbbl
and
test
jae
mov
cmp
sub
jb
call
stc
nop
scas
cmp
jne
rclb
scas
add
xor
mov
jne
ljmp
jno
stc
xchg
mov
nop
daa
dec
fdivs
outsb
scas
inc
mov
ror
repz
inc
mov
jmp
inc
ror
add
mov
push
mov
or
cmp
pop
fs
sbb
dec
mov
sbb
insl
gs
sahf
add
sbb
push
mov
cmp
je
rclb
sti
xchg
cs
sbb
mov
sbb
and
cmp
jecxz
jae
ja
pop
out
xor
push
jbe
mov
scas
inc
sbb
ds
jo
mov
das
xchg
jmp
les
addr16
mov
aaa
daa
mov
sub
sub
jp
arpl
or
sbbl
pop
sbbb
jb
mov
cmp
sub
jb
out
push
sbb
scas
cmp
jne
iret
pop
scas
add
xor
mov
je
ljmp
jno
clc
test
mov
nop
daa
dec
xlat
je
or
inc
lahf
sub
arpl
jge
inc
scas
adc
addb
add
mov
push
mov
or
cmp
sub
mov
inc
fimuls
sbbb
insb
gs
popf
add
sbb
push
mov
cmp
fnsave
rclb
sti
xchg
sub
dec
sbb
cmp
pop
sbb
and
jae
jbe
pop
out
xor
xchg
sub
push
jbe
xchg
scas
inc
sbb
xchg
sub
cmp
mov
cs
jmp
ret
dec
shlb
in
mov
aad
daa
mov
daa
mov
mov
or
dec
sub
data16
push
sbbl
push
push
xchg
mov
jb
out
push
sbb
nop
lods
cmp
jne
into
pop
scas
decl
int
fistps
mov
jae
jmp
xor
iret
lds
testl
je
pop
insb
scas
inc
sahf
sub
fs
jnp
inc
lods
adc
addl
add
mov
push
mov
or
cmp
sub
lea
inc
fimuls
sbbl
push
cld
fwait
add
sbb
push
rclb
mov
jne
rclb
cld
xchg
sub
fidivs
dec
sbb
cmp
sbb
and
je
jne
pop
out
xor
jbe
test
mov
sbb
into
outsb
cli
mov
sub
in
add
shlb
jecxz
mov
shll
or
and
inc
sub
ja
fs
or
sbbb
jmp
std
sbb
mov
sbb
mov
cmp
fdivl
in
push
push
jp
xchg
lods
aaa
fidivs
int
scas
decb
aaa
into
push
fstpl
mov
jb
in
mov
les
testb
sub
je
add
es
sub
into
gs
inc
stos
adc
test
into
gs
or
push
mov
shl
or
cmp
sub
cmc
pop
data16
mov
dec
filds
test
fisubrs
std
cltd
jmp
sbb
push
rclb
mov
jne
popa
rcrl
cld
xchg
sub
sbb
cmp
sbb
mov
push
in
and
je
jae
pop
lock
push
test
mov
sbb
into
gs
stc
mov
sub
shrl
loope
mov
shlb
sub
and
inc
fnsave
fsubs
cwtl
dec
loopne
sub
sbb
aaa
mov
test
sarl
cmp
and
jae
jecxz
pop
adc
fbstp
lret
sbb
mov
fcompl
mov
jo
in
mov
ret
hlt
adcb
adc
jne
add
mov
fwait
and
into
gs
js
dec
stos
paddsw
bound
mov
push
mov
shl
or
mov
ret
sub
hlt
pop
data16
mov
test
fsubl
cwtl
std
mov
sbb
push
rclb
movsb
cmp
mov
ret
idiv
xchg
sub
mov
pop
call
int3
pop
sbb
in
push
lods
cmp
fidivrs
je
jno
pop
lock
ja
and
inc
sbb
into
gs
dec
sub
shrl
loopne
mov
shll
sub
and
sub
jne
fs
or
sbbb
jmp
mov
sbb
sarb
cmp
and
jae
loop
pop
adc
cli
xchg
test
lret
sti
mov
xchg
mov
fistpl
mov
outsl
push
in
mov
shll
jg
out
mov
xchg
sub
jne
add
inc
lcall
gs
ja
dec
test
lret
cld
popa
or
dec
mov
shl
or
mov
ret
repz
data16
mov
loopne
test
addr16
xchg
cld
mov
sbb
dec
rclb
movsb
cmp
mov
ret
cmc
cld
xchg
daa
mov
ja
dec
sbb
cmp
sbb
in
sbb
je,pt
jo
pop
lock
xchg
xchg
sub
push
ja
and
inc
pop
movsb
xchg
sub
cmp
gs
mov
sub
push
adc
sub
and
ret
fs
pop
xchg
dec
loopne
sub
sbb
scas
cmp
push
add
fdivl
loope
pop
adc
xchg
test
fbstp
leave
sbb
mov
ficompl
mov
outsb
push
in
lahf
sub
rcrb
jae
bnd
out
scas
adc
or
addr16
cltd
and
gs
jbe
dec
test
in
test
leave
iret
data16
pusha
or
dec
mov
shl
or
mov
shrl
repnz
data16
xchg
dec
loopne
test
sbb
gs
xchg
sti
mov
sbb
dec
rclb
movsb
cmp
pop
ret
hlt
cld
xchg
es
ja
inc
sbb
aaa
cltd
cmp
lret
mov
jmp
in
sbb
cmp
fdivrl
pop
lock
xchg
sub
dec
ja
and
xchg
sub
aaa
into
gs
in
cmpl
or
iret
xor
mov
and
sub
jae
fs
push
xchg
dec
loopne
daa
sbbb
out
sbb
aaa
lods
cmp
push
add
fdivl
loopne
pop
adc
xchg
cmpsl
xor
jbe
enter
xchg
xchg
mov
fstps
mov
insl
push
in
sahf
sub
rcrb
or
jge
out
scas
adc
or
data16
cwtl
and
gs
mov
cmpsl
or
test
enter
pop
or
dec
mov
shl
or
lahf
add
xor
sub
icebp
push
data16
xchg
dec
loopne
cmpsl
test
fldenv
xchg
cli
mov
sbb
dec
rclb
movsb
cmp
fidivs
pop
ret
repz
xchg
and
inc
sbb
ss
cmp
leave
push
sbb
in
sbb
je
outsb
cld
pop
lock
dec
ja
and
inc
adc
ss
gs
mov
cmpl
mov
into
das
sub
and
sub
jb
fs
add
sbbb
out
pop
jp
aaa
lods
cmp
push
decl
fnsave
rcrl
sti
xchg
cmpsb
xor
jbe
sbb
mov
cmp
dec
xlat
sbb
popf
sub
rcrb
je
lock
out
lods
adc
or
fs
xchg
and
jmp
or
test
shlb
pop
or
mov
out
xchg
sub
loopne
or
loopne
mov
incb
loope
movsl
test
bound
xchg
clc
mov
sbb
jge
movsl
cmp
sahf
fbstp
pop
ret
pop
icebp
std
xchg
and
sbb
xor
push
mov
call
cmp
fdivrs
jne
insb
stc
pop
icebp
sub
js
jge
mov
adc
iret
data16
and
in
test
fisttpl
mov
lret
sub
push
movsl
sbb
ds
outsl
shlb
add
sbbl
jecxz
call
mov
sbb
std
mov
push
fcmovnb
pop
or
loopne,pn
pusha
lds
mov
cmp
rorb
sbb
add
es
push
mov
pop
out
test
lret
cld
bound
sub
mov
addr16
mov
mov
ret
shrl
pop
or
xchg
sub
fisubrs
movsl
lcall
ret
in
push
incb
loop
mov
imul
sub
pop
jnp
cmpsb
cmp
into
pop
les
out
std
xchg
and
sbb
xor
mov
out
out
pop
cmpsb
cmp
or
clc
pop
repnz
adc
dec
adc
iret
pop
sub
sbb
mov
repnz
into
pusha
pop
std
inc
jmp
add
out
andl
pop
outsb
push
dec
in
aaa
call
loop
insb
xchg
icebp
sbb
test
mov
in
and
xchg
imul
fistpll
stc
pop
xor
scas
fld
jo
cmpsl
dec
sbb
xor
inc
jg
xor
push
rclb
test
or
adc
ljmp
mov
lahf
lds
mov
dec
jl
cltd
pusha
enter
add
hlt
sub
cmp
pushf
mov
das
xchg
jl
lret
lret
stos
cli
cmc
sub
js
mov
cltd
call
jg
adcb
mov
xor
nop
mov
jp
je
sbb
pusha
jae
mov
ret
push
xchg
mov
jne
pushf
aaa
lret
dec
xor
dec
cmpsb
repz
int3
daa
movsb
scas
and
pop
push
jp
mov
sbb
aas
or
mov
sub
lret
imul
push
pushf
test
pop
cmc
fisubs
pushf
in
and
and
inc
adc
adc
jg
lret
scas
notb
xlat
cmp
fidivrs
mul
pop
pop
xchg
je
or
xor
mov
out
dec
mov
and
push
andb
insl
cltd
and
or
add
andl
push
adc
xchg
in
sub
sub
push
jle,pt
std
repz
or
into
sub
mov
cltd
pop
movsb
inc
ja
js
mov
stc
loop
sahf
mov
lret
js
push
jb
das
add
ljmp
pop
cmp
dec
roll
lods
mov
inc
jae
mov
pop
pop
cld
xchg
test
pop
add
mov
cmpsl
loopne
and
loopne
jmp
inc
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
add
or
adc
sbb
cmpsb
xchg
push
xchg
xchg
stos
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
jnp
push
mov
rcrb
mov
xchg
dec
pop
call
pushf
xchg
cltd
rorb
repz
xlat
lret
xchg
xlat
popa
outsb
adc
push
sbbl
or
inc
sbb
cmp
sub
sub
add
js
add
and
lcall
mov
xor
shlb
jnp
loope
cmp
icebp
lods
mov
inc
cmp
adc
in
das
mov
push
sti
scas
ret
fistps
data16
pusha
rcll
and
jb
ljmp
and
std
or
jl
adc
inc
push
lret
andnps
lahf
mov
jge
add
orl
add
leave
or
xor
xchg
push
pop
xor
repnz
jmp
std
sub
jecxz
je
shlb
lds
sub
cli
and
lea
xchg
adc
es
lods
mov
or
xchg
addb
lret
fsub
ret
jbe
sbb
mov
pusha
addr16
inc
xchg
in
sahf
andl
mov
dec
and
or
or
lock
jmp
out
dec
and
mov
negl
adc
loope
cmc
and
movb
inc
pushf
incb
add
mov
add
popa
mov
xor
and
mov
sbb
icebp
mov
cmp
or
fnstenv
dec
mov
mov
mov
jmp
adc
lret
or
cmpsb
push
xchg
in
xchg
mov
and
ss
xchg
sbbl
adc
add
repz
mov
cmc
lds
xchg
inc
cs
push
incl
jle
bnd
daa
gs
insb
jbe
sbb
les
iret
mov
scas
popa
xor
lds
sbb
movb
pop
cmp
