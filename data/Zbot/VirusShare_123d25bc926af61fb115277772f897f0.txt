push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
pop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
shlb
pop
pusha
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
jmp
ret
sub
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
jmp
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
lea
add
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
pop
and
add
add
adc
add
insb
and
add
and
add
and
add
add
add
add
mov
and
add
and
add
add
shlb
add
add
inc
and
add
add
mov
add
shlb
add
mov
add
in
add
add
add
xor
add
and
add
add
push
and
add
add
add
add
add
add
adc
add
xor
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
movsb
and
add
add
shlb
add
fisubs
add
cmp
add
mov
add
sub
add
mov
add
inc
and
add
and
add
and
add
and
add
add
add
add
pop
and
add
add
adc
add
insb
and
add
and
add
and
add
add
add
add
mov
and
add
and
add
add
shlb
add
add
inc
and
add
add
mov
add
shlb
add
mov
add
in
add
add
add
xor
add
and
add
add
push
and
add
add
add
add
add
add
xchg
add
je
jne
jb
outsb
je
push
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
dec
outsl
arpl
inc
insb
popa
addr16
add
add
gs
outsl
jbe
inc
imul
jns
add
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
call
inc
imul
bound
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
jb
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
outsb
fs
insb
outsl
jae
add
popa
je
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
enter
jae
gs
popa
insb
jne
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
bound
gs
add
push
push
je
imul
inc
add
movsl
add
je
gs
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jae
push
gs
jne
jae
jb
outsl
jae
add
ja
jo
imul
push
inc
imul
dec
gs
popa
addr16
add
jno
push
gs
jne
jae
jb
xchg
push
push
gs
jae
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
jnp
inc
gs
imul
outsb
addr16
add
xchg
inc
gs
imul
js
push
add
int
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
jnp
push
gs
outsl
arpl
add
push
push
inc
push
xor
cs
insb
add
or
push
push
dec
inc
jb
outsl
jb
add
add
dec
inc
imul
arpl
add
dec
inc
outsl
outsb
outsb
arpl
add
inc
popa
outsb
arpl
add
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
mov
jl
jp
jmp
je
dec
repz
mov
jno
mov
into
jle
mov
and
js
test
cmpb
add
or
pushf
shl
jl
loop
xchg
test
ret
sbb
push
shlb
sbb
adc
in
dec
addr16
dec
jecxz
gs
lds
not
or
mov
xlat
daa
lret
lahf
repnz
adc
in
fs
push
std
adc
pop
xor
movsl
push
jo
fsubl
mov
xchg
sbb
addb
sbb
xchg
lea
jns
int
sbb
cmp
push
pushf
jmp
in
jg
jno
popf
xlat
push
sbb
jmp
lock
push
lret
cmp
imulb
xchg
fwait
mov
outsb
shlb
decl
sub
inc
mov
push
jno
fiadds
cmpsb
daa
mov
dec
add
js
xor
in
add
add
enter
testb
cwtl
mov
test
add
cltd
fcmovu
jne
and
dec
sub
repnz
imul
sub
out
push
sub
xchg
jne
or
fmuls
adc
dec
dec
xor
repnz
fcompl
divl
fwait
sti
and
inc
xchg
mov
sub
sub
and
add
xor
arpl
sbb
fadd
push
rcrb
pop
test
pop
cmp
incb
mov
je
or
popf
and
notl
jo
xlat
shl
sbb
and
addr16
insl
and
outsb
mov
xchg
inc
lret
lahf
pop
sbbl
and
outsl
ds
fwait
or
add
mov
fwait
mov
jnp
ret
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
sub
add
movsl
movsl
pop
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
lcall
jg
add
jnp
lods
stos
lods
add
test
push
mov
mov
mov
ret
ret
leave
leave
lret
into
rcl
in
rcl
shl
iret
ror
hlt
int3
int
hlt
leave
lret
enter
mov
mov
mov
stos
stos
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
lods
scas
and
mov
mov
int3
lret
rcl
sar
aad
aad
xlat
xlat
xlat
fcomp
fdivr
aad
aam
ror
iret
dec
iret
iret
rcl
sar
rcl
iret
inc
ret
ret
std
mov
mov
out
lods
lods
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
scas
lods
lods
add
scas
sbb
mov
jnp
mov
ret
mov
lret
call
iret
sar
aam
fcomp
xlat
call
fcomp
call
aad
dec
int
dec
int
call
aad
dec
int
inc
rol
mov
mov
mov
cmpsl
cmpsl
movsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
add
or
or
add
add
mov
scas
mov
mov
mov
mov
mov
mov
mov
sar
mov
call
rcl
call
fcomp
xlat
call
aam
dec
into
into
dec
int3
lret
dec
into
int3
inc
mov
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
pusha
popa
or
xor
push
fs
aas
inc
sbb
sbb
or
push
sbb
aaa
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
call
rcl
call
rcl
dec
ror
dec
enter
mov
mov
mov
ljmp
movsb
cmpsb
pushf
fwait
fwait
cwtl
xchg
xchg
lcall
addl
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
lcall
jo
arpl
push
push
xchg
cmp
cmp
inc
inc
inc
mov
insl
insl
outsb
nop
fs
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
lret
dec
lret
lret
enter
rol
mov
mov
scas
jmp
pushf
call
xchg
xchg
cwtl
xchg
cwtl
lcall
ds
or
add
add
add
add
add
add
add
add
add
add
add
add
jo
outsl
add
pop
or
jp
xchg
mov
incb
jl
idivb
jp
outsl
jo
out
addr16
jne
jne
jle
jg
ja
js
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
ljmp
sahf
pushf
decl
test
decl
xchg
xchg
mov
mov
xchg
mov
js
jns
sub
add
push
add
add
add
add
add
add
add
add
mov
pop
push
cmpl
in
mov
mov
addl
mov
mov
jge
jb
jno
je
jne
jle
jl
addl
xchg
addr16
cmp
and
jg
cmp
movsl
movsb
movsb
shrb
lods
lods
sti
lods
lods
lods
stos
stos
stos
test
test
mov
cltd
lcall
mov
js
jp
jge
jnp
mov
cwtl
movsl
cmpsb
movsb
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
stos
call
addl
std
xchg
xchg
xchg
std
cltd
cltd
xchg
stc
xchg
xchg
xchg
in
mov
or
jg
int
mov
mov
push
pop
push
push
or
inc
dec
imul
xchg
leave
lcall
out
cltd
cltd
lcall
mov
decl
mov
lcall
ljmp
mov
mov
mov
mov
std
mov
mov
movsl
mov
jge
scas
cmpsl
test
pop
pop
pop
adc
test
mov
lcall
incl
mov
xchg
xchg
xchg
popf
sahf
sahf
std
mov
mov
xchg
in
xchg
nop
in
test
jne
cmovp
add
inc
or
or
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
call
pushf
lahf
jmp
test
pushl
test
mov
std
rorb
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cwtl
cwtl
decl
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
popf
pushf
pushf
cmpsb
movsb
movsl
stos
stos
test
movsl
cmpsb
cmpsb
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
bound
jne
jb
mov
lahf
addb
mov
xchg
testl
mov
jmp
lea
mov
push
dec
mov
aaa
mov
sub
mov
test
mov
stos
stos
mov
movsb
add
mov
add
pop
adc
mov
ljmp
cwtl
decl
nop
xchg
call
xchg
xchg
call
xchg
cwtl
cltd
cwtl
cwtl
pushf
pushf
fwait
mov
movsb
movsl
std
mov
cltd
pushf
out
nop
xchg
xchg
xchg
les
fwait
in
xchg
cwtl
out
nop
xchg
cmc
xchg
xchg
std
xchg
jne
lcall
jmp
dec
inc
pushl
cmp
ljmp
daa
adc
lods
and
ljmp
or
mov
mov
lods
pushf
movsb
cmpsb
movsl
and
add
mov
pop
pop
adc
mov
ljmp
fwait
call
xchg
xchg
lcall
popf
popf
lcall
sahf
popf
lcall
xchg
xchg
call
cwtl
xchg
call
cwtl
pushf
cld
popf
cltd
pushf
stc
popf
lcall
pushf
xchg
xchg
imul
pop
push
cltd
push
dec
cltd
inc
cmp
lcall
lahf
and
jmp
and
adc
stos
and
ljmp
and
pushl
es
mov
sahf
lcall
scas
scas
scas
movsb
movsl
cmpsb
sub
mov
add
add
add
add
pop
pop
adc
mov
lds
cltd
call
sahf
sahf
jmp
mov
movsl
jmp
xchg
cltd
decl
mov
decl
js
cltd
jo
cltd
arpl
xchg
push
dec
call
xor
decl
sbb
call
sysret
call
add
sahf
push
add
test
sub
pushl
xor
mov
xor
mov
xor
mov
fwait
xchg
mov
scas
scas
mov
mov
movsb
movsl
add
pop
pop
adc
lods
lods
ljmp
fwait
lcall
mov
ljmp
stos
test
lcall
jg
decl
inc
decl
sub
mov
decl
adc
test
add
xchg
add
mov
add
lea
add
xchg
or
call
add
mov
push
or
mov
pop
pushl
cmp
mov
ds
ret
aas
sub
movl
dec
inc
cs
push
inc
inc
xchg
inc
mov
mov
movsl
movsb
movsl
dec
mov
mov
add
add
add
lods
movsb
movsl
add
push
adc
test
scas
jmp
mov
test
ljmp
mov
ljmp
mov
jo
xchg
daa
incl
adc
incl
or
orb
incl
pop
add
xchg
add
mov
add
xchg
or
call
or
add
cmpsb
adc
ljmp
cmp
inc
dec
xor
dec
dec
cmp
lret
dec
cmp
int3
push
cmp
into
push
cmp
rclb
call
push
cmp
rcrl
dec
xchg
mov
lds
mov
movsl
cmpsb
cmpsb
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
mov
jmp
cmpsb
movsl
ljmp
mov
pushl
mov
mov
mov
stos
test
lcall
sub
decl
or
incl
or
decl
or
call
or
lcall
adc
jmp
push
add
mov
dec
cmp
int3
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
fsubs
fistpl
fstpl
fisubl
call
xchg
test
mov
mov
movsl
movsl
movsb
arpl
mov
add
add
add
cltd
xchg
cwtl
add
dec
adc
jns
cmpsb
sahf
popf
jmp
lahf
sahf
sahf
ljmp
mov
pushl
mov
pushl
mov
pushl
mov
decl
and
nop
and
decl
sbb
decl
push
add
xchg
or
call
jmp
adc
ljmp
sbb
dec
pop
dec
call
push
call
addr16
fsubrs
jmp
outsb
push
jmp
outsb
pop
jmp
outsb
pop
jmp
jno
call
xchg
test
int3
mov
mov
jne
sahf
mov
add
inc
inc
adc
jne
lahf
cltd
cltd
jmp
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
dec
inc
call
sub
and
xchg
es
xchg
and
decl
or
add
pushf
push
add
mov
adc
ljmp
adc
or
enter
xlat
imul
je
fidivs
fbstp
jmp
js
jmp
js
jmp
jp
jmp
jle
call
xchg
test
int
mov
in
cmpsl
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jae
lcall
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
push
call
aaa
xor
lcall
call
adc
call
push
add
mov
adc
ljmp
adc
mov
sub
call
push
inc
fnstsw
jmp
jg
jmp
xorl
jmp
xchg
in
xchg
mov
out
mov
out
xchg
xchg
mov
sarb
mov
lcall
mov
add
add
add
add
outsb
insb
js
out
lcall
mov
mov
mov
mov
mov
mov
sar
mov
test
popf
arpl
xchg
aaa
xor
mov
inc
cmp
lahf
cmp
lcall
adc
call
adc
jmp
adc
ljmp
push
add
mov
xor
fisubl
jmp
mov
jmp
popl
out
xchg
cmp
xchg
cmp
xchg
test
repz
test
repz
xchg
hlt
xchg
cmp
cwtl
mov
aam
mov
rol
imulb
popf
pushf
daa
popf
sahf
lahf
add
add
add
pop
add
ss
pop
popa
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
mov
mov
mov
inc
cmp
mov
dec
inc
jmp
and
call
push
add
movsb
adc
ljmp
adc
pushl
pop
add
les
add
sarl
daa
fistpll
jmp
lcall
out
sahf
push
mov
push
mov
xchg
push
movsb
xchg
stc
sahf
out
lahf
fidivrl
clc
lods
lods
lods
mov
pushf
popf
xor
fwait
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
ret
ret
mov
jg
lcall
push
dec
ljmp
ds
lcall
jmp
adc
pushl
sbb
inc
pop
add
leave
and
call
dec
xor
out
jp
out
mov
cltd
push
test
push
test
push
stos
lcall
scas
sahf
stc
scas
lahf
cld
scas
lahf
sti
stos
pushf
push
test
fistpll
cli
mov
scas
rcrb
mov
lcall
add
ss
add
xor
cmp
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
ret
inc
mov
ret
ljmp
push
dec
ljmp
dec
jmp
push
lcall
add
stos
adc
pushl
sbb
inc
sbb
dec
sbb
call
es
fistps
out
popf
mov
repz
push
mov
push
mov
cli
mov
cli
mov
cld
mov
cld
mov
test
sti
mov
cmpsb
push
mov
jmp
mov
leave
std
mov
mov
sahf
lahf
popf
dec
xchg
xchg
xchg
add
lcall
xor
xor
or
inc
bound
xlat
jae
jo
mov
rol
rol
inc
ret
ret
rol
ret
ret
mov
inc
pushl
pop
push
ljmp
push
dec
jmp
adc
jmp
adc
pushl
add
lds
add
int3
sbb
add
fbstp
adc
in
jae
push
scas
popf
stc
mov
mov
sti
mov
mov
std
ret
std
ret
mov
inc
mov
std
mov
std
mov
sti
les
jmp
les
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
push
add
dec
dec
outsb
jo
mov
mov
fcomp
jmp
aam
test
int3
iret
dec
lret
lret
dec
lret
leave
inc
enter
mov
pusha
pushl
inc
cmp
lahf
sbb
jmp
adc
pushl
pop
add
sbb
dec
sbb
call
pop
add
loope
add
jmp
xchg
sti
mov
mov
sti
enter
lret
sti
lret
cld
int
cld
into
mov
std
sarb
cli
les
call
int
pushl
lahf
mov
or
add
add
xor
add
add
pop
or
enter
in
in
out
jecxz
in
loope
jecxz
fucom
loope
fcmovnu
xlat
cli
aam
xlat
std
iret
into
iret
mov
insl
push
ljmp
adc
ljmp
adc
add
ret
dec
sbb
call
push
add
frstor
add
in
add
out
dec
xor
negl
mov
std
into
ret
cld
rol
cld
rol
std
rol
std
aad
cld
cld
std
xlat
enter
lret
int3
mov
fmul
int
mov
mov
xchg
adc
add
add
std
add
incb
cld
incb
repz
hlt
or
out
lock
jmp
out
sub
jmp
dec
jmp
call
ljmp
fstp
jmp
mov
jno
cmpsl
inc
cmp
movsl
and
ljmp
push
add
mov
sbb
dec
sbb
call
and
fisubs
add
jmp
pusha
inc
stc
scas
lahf
ror
std
aad
std
lret
std
xlat
int
std
fcmove
fxch
fcmove
fcmovne
std
std
cld
std
aam
out
lret
mov
inc
ret
out
cmpsb
cmpsl
cmpsl
mov
xchg
add
add
add
std
add
std
std
add
clc
cli
add
cmc
hlt
add
repnz
push
in
icebp
lock
out
out
lock
out
out
pop
jecxz
lds
jb
lahf
xor
lcall
adc
ljmp
adc
add
sbb
call
sbb
ficompl
add
jecxz
add
in
xor
push
ja
cld
shll
std
fcmovnbe
cld
fcmovbe
std
jmp
aad
loopne
loop
cld
jecxz
in
jecxz
cld
push
iret
sar
xlat
sar
lret
lret
lret
stos
test
xchg
xchg
xchg
and
cwtl
xchg
add
cld
incb
cli
std
cld
add
cld
cld
add
cmc
cmc
or
aam
xor
mov
jae
lcall
jmp
adc
add
ret
sbb
dec
sbb
add
fsubl
add
out
add
out
ds
stc
lea
sti
rol
sti
loopne
std
loop
loopne
loope
in
cld
in
in
std
in
cld
in
call
fdivr
std
push
iret
ret
fcom
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
fucom
add
mov
cmpb
sub
lcall
adc
pushl
pop
add
les
add
into
sbb
call
pop
add
loopne
add
call
dec
sub
sti
mov
sar
cld
loop
cld
loop
jecxz
std
loop
loopne
cld
loop
std
std
cli
clc
fcmovne
clc
fmul
push
rol
out
enter
fcom
call
aam
mov
mov
fwait
lcall
fwait
fwait
lcall
add
add
xlat
add
ret
adc
scas
mov
jmp
adc
pushl
sbb
inc
sbb
call
sbb
fcomps
add
loope
add
jmp
push
ss
stc
stos
xchg
std
aam
cli
aad
sti
rol
cli
into
ret
lret
mov
push
leave
mov
out
mov
call
leave
mov
std
jmp
ret
rol
imul
loopne
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
lret
mov
mov
xchg
loopne
ds
ljmp
adc
mov
sbb
dec
and
call
sub
fldt
sbb
in
inc
ljmp
call
mov
scas
cld
fistpll
mov
ffree
mov
ljmp
lret
aam
shl
fcmovnbe
out
fnsave
out
lock
popf
out
out
lret
lret
int3
push
lods
lods
lods
adc
test
cmpsl
add
rol
mov
rol
mov
sahf
aam
push
dec
popf
es
movsl
sub
lods
xor
cs
mov
push
inc
sti
ret
stc
leave
jb
test
xchg
mov
shrl
mov
aad
mov
lret
rcl
leave
mov
ror
mov
aad
fdivs
gs
in
out
call
xor
div
mulb
icebp
out
lock
fstp
or
mov
int
mov
add
mov
mov
rolb
scas
les
jo
lock
jp
ljmp
mov
mov
xchg
sarb
stos
stos
mov
mov
cmpsl
enter
lret
ret
ret
leave
enter
int3
addr16
ror
push
rcl
rorl
aad
inc
rcr
xlat
xor
daa
ficomps
fcmovnu
ficoms
fucom
in
loope
out
out
jmp
in
icebp
icebp
add
cli
cli
add
incl
std
std
add
std
add
mov
ret
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
lds
lret
int
daa
lret
rcl
and
rcl
sbb
aam
adc
aam
or
xlat
push
aad
fiaddl
fcmovu
add
fsub
add
jecxz
add
out
add
rcr
add
std
std
add
mov
add
rol
ret
vmovaps
ret
ret
sub
mov
mov
push
ret
or
enter
movl
lret
add
rcl
add
xlat
add
aam
flds
loopne
fcmovnbe
fildl
loope
fcmovnu
filds
in
out
lock
repnz
std
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
or
push
icebp
aam
jne
leave
xchg
addl
xor
sub
stos
stos
stos
dec
mov
push
fcmove
push
mov
xchg
int
adc
xlat
xorl
add
xor
add
ljmp
mov
xchg
push
out
mov
mov
roll
int
pop
loope
jne
leave
push
mov
mov
xor
gs
insb
xchg
xor
int
scas
pop
and
andb
pop
int3
push
sbb
cmp
cmp
xchg
fs
pop
imul
jb
cld
popf
mov
sub
inc
je
mov
sar
pusha
xchg
iret
xchg
mov
jne
imul
xchg
add
imul
xchg
dec
data16
in
cs
loope
sarl
gs
mov
notb
fstpl
in
pop
jge
cmp
call
gs
add
je
clc
stos
imul
inc
jmp
mov
pop
mov
dec
xchg
lret
into
iret
sbb
mov
not
inc
stos
loopne
and
mov
add
out
mov
cmc
lods
bound
jmp
pop
or
sbb
cmp
data16
xchg
mov
jo
ja
arpl
addl
movsl
sbb
push
leave
mov
into
mov
hlt
int
or
ret
sub
jae
inc
push
aad
fcmovne
jb
jge
or
stos
mov
inc
and
loopne
xor
mov
mov
push
xor
adc
in
insb
inc
xchg
mov
mov
jl
imul
lds
ljmp
xchg
xchg
cmp
xchg
mov
mov
mov
fcom
imul
in
pop
add
repz
or
pop
push
out
insl
cmp
mov
outsl
rclb
outsl
xchg
mov
roll
xchg
les
dec
or
push
xlat
xchg
insl
jmp
inc
add
xorb
jbe
cltd
dec
mov
jb
dec
or
imul
das
pushf
cmp
test
cmp
hlt
or
sbb
out
lcall
cli
lahf
or
xchg
xchg
lret
cs
movsb
mov
xor
aas
out
and
mov
loop
outsl
outsb
popf
pop
scas
and
cmp
inc
cmpsb
scas
xchg
int3
and
xchg
pop
dec
sarb
pushl
ja
cld
imul
std
stos
fstpt
xchg
dec
scas
inc
lods
and
sar
or
test
arpl
jb
mov
mov
inc
movzbl
sbb
cmp
jp
cmp
push
push
push
push
xchg
mov
cmp
jns
mov
cmp
jle
and
xlat
loope
jns
mov
test
push
xchg
testl
mov
or
setae
stos
cs
mov
or
push
adc
mov
mov
push
lock
mov
and
xlat
adcl
sub
ret
xchg
dec
push
lds
fsubs
je
lret
scas
and
and
sub
shll
lods
in
cmp
mov
js
jne
insl
mov
test
xchg
cmp
pusha
xor
mov
aaa
xchg
imul
int3
jg
jnp
adc
and
sahf
xchg
inc
jns
negb
xchg
jp
stc
mov
rolb
lock
popf
xchg
inc
fwait
mov
test
lds
idiv
das
xor
int
cmp
jno
fstp
and
push
mov
cs
add
bound
enter
xor
push
testl
insb
push
jp
aam
pushf
test
mov
aas
cmpsl
mov
sti
pop
mov
cmpsb
aaa
lahf
rcl
sub
jmp
ja
ret
pusha
hlt
mov
cmp
push
loope
filds
cmp
xor
sub
sbb
cltd
cmp
dec
sbb
es
in
rcll
std
dec
jno
push
clc
aad
mov
jmp
rcrl
popf
push
and
pop
dec
add
mov
cwtl
fsts
fmul
xchg
imul
icebp
inc
or
xchg
add
roll
outsl
sub
sti
jge
mov
stos
push
or
fnstcw
mov
pop
ljmp
js
mov
pop
pop
cmp
adc
popf
enter
fisubrl
int3
lea
mov
sbb
test
mov
cmp
aaa
inc
dec
stos
jmp
push
inc
gs
xlat
xchg
loope
xchg
add
xor
jecxz
movl
push
orb
test
mov
js
movsl
sbb
push
push
repz
clc
lock
adc
cmpsl
or
cmc
arpl
mov
xor
xor
clc
sarb
mov
sub
daa
ljmp
mov
arpl
lock
jmp
shlb
lds
pop
scas
hlt
mov
inc
push
mov
push
and
nop
gs
outsb
nop
mov
add
push
sub
inc
mov
inc
ret
enter
lods
inc
pushf
jo
sub
and
pusha
xor
testl
jns
xchg
cmp
fisttpl
fwait
or
xor
jne
sti
dec
leave
inc
sbb
aad
mov
loopne
cli
cmpsl
ds
pusha
jne
xchg
int3
out
mov
leave
xchg
sub
rclb
jmp
lods
add
ret
test
push
dec
jecxz
mov
adc
roll
lods
inc
sub
or
or
cmpl
ds
std
xchg
and
mov
mov
cmp
comiss
dec
call
pop
icebp
mov
sarl
mov
inc
fbld
dec
lcall
xchg
data16
hlt
xchg
pop
scas
out
cli
pop
ret
stc
add
test
in
jle
pop
adcb
mov
pushf
xchg
push
icebp
xor
test
frstor
adc
rcll
dec
ret
adc
frstor
imul
loop
imul
mov
dec
call
out
mov
popf
mov
fsubl
or
cs
fstps
stos
inc
mov
ror
repz
add
out
inc
and
add
push
stos
mov
fsubrs
or
fnstcw
pop
pusha
testl
ret
xor
hlt
add
jmp
mov
pop
cltd
test
mov
cs
lods
inc
inc
dec
adc
bound
lea
movsb
nop
and
jl
xorb
add
outsb
add
pop
repz
out
jecxz
jecxz
aam
idivb
dec
in
xchg
ljmp
test
insl
shl
xor
lock
inc
add
loope
mov
inc
rol
iret
pop
fidivs
push
shll
cmpsl
adc
scas
sbb
add
mov
repz
hlt
mov
adc
aaa
insl
imul
mov
adc
and
xor
popa
inc
mov
in
xchg
mov
add
ljmp
pop
cmp
test
lods
nop
sbb
add
aaa
into
adc
in
push
xor
add
mov
ficoml
dec
sub
pop
hlt
popf
or
mov
jnp
lock
addb
or
push
adc
ds
cmp
mov
push
mov
mov
loopne
aad
dec
fnstenv
repnz
pop
addr16
or
add
pop
aas
xchg
jg
or
mov
int3
pushf
stos
ret
mov
lods
inc
mov
inc
dec
in
arpl
insl
push
ss
outsl
jbe
sbb
cmp
cmp
sbb
scas
lea
jns
call
xor
lahf
test
jb
and
fstps
enter
add
cltd
sbb
sub
xchg
mov
pop
and
loopne
mov
dec
ret
pop
mov
pop
push
imul
imulb
push
jo
dec
in
xchg
loop
add
repz
and
lods
inc
ret
mov
sbbl
dec
ds
cmp
clc
imul
dec
dec
cmp
nop
popa
frstor
mov
cmc
scas
call
mov
mov
pop
repnz
arpl
sub
mov
movsl
cmp
negb
scas
adc
insl
add
mov
xor
in
insb
add
add
shrb
cwtl
sub
or
pop
subl
mov
cs
jns
shlb
push
popf
push
out
jbe
xor
outsb
xchg
fwait
mov
sti
ds
sub
shrl
movlps
and
lea
inc
jecxz
xor
addr16
jmp
add
dec
into
addr16
pop
imul
movsl
imul
jl
mov
fs
adc
lahf
dec
pop
xchg
xchg
jmp
mov
mov
pusha
and
inc
xchg
sub
mov
rcrl
dec
addr16
cli
pop
icebp
lcall
xlat
cmp
or
lods
into
fldenv
fcoms
mov
jno
cmp
insl
pop
dec
lods
inc
cmp
xor
sbb
lahf
dec
mov
fdivl
xchg
orb
movsl
adc
les
test
imul
cmp
lods
repz
adc
jecxz
sarl
push
aam
push
jmp
cmc
in
test
dec
push
mov
or
jp
rcrl
mov
loop
das
adc
or
sbbb
movsl
aas
in
push
in
lea
stc
fsubs
lret
adc
ljmp
sti
jl
push
out
jno
fnstenv
sbb
roll
push
adc
mov
ret
push
fistpl
xor
fidivs
add
call
adc
add
cmpsl
adc
mov
push
out
pusha
and
aad
xor
pop
outsl
in
les
push
loop
inc
ljmp
ret
hlt
mov
adc
cmpl
jns
addb
test
fidivs
leave
sbb
push
fstpt
int
xchg
sub
sar
or
test
or
xchg
adc
mov
push
jbe
test
adc
dec
hlt
mov
mov
dec
popa
mov
push
loop
loopne
jne
add
lret
mov
test
jge
hlt
stos
sbb
xchg
lea
jp,pt
sub
popa
inc
jne
xor
or
push
push
out
shll
notb
xchg
sub
jns
xchg
imul
iret
std
jle
and
dec
xlat
outsb
jne
ret
pop
and
jbe
pop
inc
dec
loop
hlt
or
dec
lret
sti
push
pop
pop
xchg
cmp
mov
xchg
sub
cli
xchg
xchg
nop
in
add
lods
inc
addr16
lea
mov
push
sub
pop
hlt
add
stos
sbbl
pop
leave
pusha
dec
jp
sub
pop
mov
xor
sub
xchg
stos
push
mov
mov
ret
pop
repz
shrb
cmp
lods
add
cmp
shrb
ret
jns
sarl
repz
xchg
mov
push
jge
mov
dec
out
pop
mov
test
andb
push
out
jl
cld
xchg
inc
adc
xchg
dec
arpl
push
out
push
push
jbe
stos
addr16
sbb
mov
lret
ficomps
cmp
mov
mov
push
clc
je
and
sbb
adc
push
call
loop
sub
out
and
jp
push
mov
fwait
in
orl
mov
sbb
ret
mov
add
movl
stc
nop
xchg
sti
jnp
in
inc
fwait
xor
push
inc
fdivrs
dec
fists
sbb
jg
xor
int
xor
mov
fsts
lret
loope
jmp
frstor
adc
hlt
mov
sbb
clc
popl
movsl
jecxz
pop
mov
jecxz
stos
xchg
gs
jbe
sbb
dec
icebp
xchg
sub
out
mov
add
cmpsb
cmp
or
lahf
cwtl
sub
insl
cmp
and
adc
fs
mov
sahf
xor
xchg
ja
jb
push
mov
cli
in
ja
sbb
dec
mov
mov
add
les
inc
cmp
xor
stos
inc
leave
push
pop
scas
inc
jp
fildll
pop
fidivs
jns
jp
xor
pop
push
sub
inc
pop
mov
mov
xchg
and
inc
stos
inc
cmp
lds
inc
fisubrs
mov
fidivl
xlat
outsb
cltd
xchg
loopne
add
int
arpl
pop
xchg
adc
sub
pop
jmp
testl
dec
fwait
adc
pusha
cwtl
aam
into
adcl
popf
lahf
adc
addl
sbb
into
cmp
stos
lds
jle
mov
dec
out
sub
sbb
cli
xchg
in
mov
fildl
fnsave
pop
repnz
sub
jl
mov
fwait
xor
push
adc
in
arpl
xchg
push
mov
mov
push
mov
popa
sti
pusha
es
sbb
add
scas
pop
hlt
and
xchg
cs
inc
push
or
push
xchg
sub
arpl
shlb
cmp
cltd
xor
push
dec
out
mov
cmp
or
or
sbb
stos
popf
xor
inc
jns
ss
testl
fwait
push
lcall
add
inc
mov
add
lock
and
xchg
xlat
cmpsb
cmp
sub
lds
pushf
mov
dec
jb
scas
insl
iret
pop
cmp
mov
dec
fcomip
clc
add
sub
incb
and
ja
jae
das
repnz
sub
pop
testl
adc
xchg
xchg
dec
mov
mov
stos
inc
xlat
add
cmp
pop
movsb
je
movsl
push
lds
adc
repnz
mov
push
out
addr16
mov
lahf
ss
adc
fsubs
jle
movb
out
pop
jle
jo
out
int
subl
lods
dec
mov
pop
into
dec
out
jp
pop
cmp
or
addr16
in
mov
pushf
xor
fsubs
jae
add
fwait
mov
pop
clc
mov
mov
dec
jmp
out
insb
testl
inc
jmp
or
movsl
pushf
push
pop
hlt
outsb
mov
jnp
ljmp
sahf
mov
adcl
jmp
lock
or
ja
pop
sbb
dec
pop
ljmp
mov
mov
mov
cmp
xor
push
pop
hlt
inc
leave
int3
arpl
dec
and
push
lret
cld
daa
inc
fistpl
adc
mov
mov
pop
xchg
or
pop
in
lahf
fbstp
push
in
pop
or
gs
lret
cmp
xchg
test
pop
mov
inc
fisubrs
ret
pop
out
das
sbb
mov
insb
cmp
out
test
mov
popf
loop
or
addb
in
xchg
mov
push
lods
or
test
stc
jp
jo
push
pushf
and
and
mov
fnsave
into
push
stc
fsubrs
xor
popa
dec
mulb
loopne
stos
add
shll
mov
js
xchg
push
shlb
test
rcrl
and
pop
lods
add
push
repnz
aaa
test
clc
cmp
cmc
adc
test
std
xchg
lods
mov
insl
and
outsb
xchg
pop
add
daa
mov
sub
into
ficoml
mov
xor
push
xchg
roll
sarb
jecxz
jo
adc
add
mov
mov
or
and
je
jl
ret
ficompl
xchg
ja
pop
test
lret
mov
xorb
push
pushf
cmp
loope
testb
and
stos
inc
lods
xchg
jns
mov
loope
aam
add
lret
mov
outsl
push
and
push
jmp
cmp
push
mov
ds
pop
adc
add
orb
pop
pop
and
lahf
push
test
push
cmp
xchg
cmp
sti
stos
sbb
cld
mov
test
loop
cmc
icebp
mov
cli
adc
shl
loopne
jecxz
dec
mov
fisubrl
sbb
dec
mov
test
xbegin
mov
or
cld
xchg
ret
xchg
xor
es
fldcw
clc
xor
dec
rcl
popa
adc
dec
shrl
pop
repz
adc
insl
add
push
push
call
shll
movsl
dec
repnz
ljmp
xor
aam
jp
sbb
dec
in
js
insl
imul
jl
cmp
ja
fnsave
xor
adc
inc
and
pop
dec
enter
push
cmp
repz
iret
cld
xchg
aas
lock
xchg
pusha
push
in
xor
jnp
mov
or
out
test
adc
inc
cmp
adc
ret
fisubrs
and
imul
adc
std
out
test
shll
adc
aaa
ret
pop
cmp
pop
imul
mov
mov
mov
fists
cmp
xor
aaa
add
lret
dec
aam
cmpb
imul
sarl
mov
mov
fwait
adc
and
dec
rorb
pop
lock
jae
lods
aaa
mov
bound
in
outsl
pop
icebp
pop
inc
mov
jae
push
ret
arpl
aaa
test
jne
fwait
add
jne
mov
cmp
and
mov
inc
and
aad
ljmp
or
sbbb
sub
les
mov
enter
xorl
pop
push
push
adc
test
and
xchg
xchg
adcb
mov
xor
adc
out
xor
fnsave
xchg
sbb
push
popa
mov
mov
xor
dec
test
inc
xlat
mov
xchg
shrl
mov
mov
icebp
jnp
loop
lahf
ss
adc
rclb
xchg
mov
ret
call
mov
jno
out
add
push
aad
sbb
je
imul
mov
dec
in
sahf
inc
fstl
and
int
out
test
lods
and
sub
push
movsl
insb
mov
pop
hlt
daa
repz
aam
sub
jns
lret
out
es
inc
pop
push
loope
sub
rcrb
push
in
xor
push
call
xor
xor
out
js
std
jae
and
incb
fdivrl
adc
push
cmpsb
xor
pop
loope
jns
jbe
adc
push
jmp
mov
mov
int3
mov
pop
lock
and
push
mov
mov
out
mov
mov
jns
cltd
js
imull
fidivs
dec
jmp
ret
mov
pop
or
pusha
aaa
sbb
cmp
ljmp
adc
outsl
mov
sti
sbb
in
xchg
push
xchg
xchg
out
pop
repz
out
hlt
in
cmp
fiadds
or
incb
repz
pop
pop
lock
mov
pop
sahf
in
dec
fistps
es
dec
mov
icebp
adc
cmp
es
arpl
push
mov
cmp
jno
dec
fildll
cmp
sub
cmp
adc
cmp
push
xor
inc
fisubl
aas
fiadds
iret
pop
incl
xor
mov
push
insl
pop
out
dec
ja
ret
jbe
dec
leave
cs
xor
push
or
mov
adc
or
push
sub
push
mov
rcll
testb
mov
pop
repnz
inc
adc
lcall
sbbb
mov
cld
xchg
jl
cmp
jbe
ja
cs
inc
fstpl
icebp
mov
cmp
orb
sbb
inc
add
scas
xchg
sbbl
ror
data16
inc
std
xchg
test
fdivl
leave
inc
fcomp
lock
sub
lcall
mov
fstpl
mov
ja
jo
or
cmp
mov
and
popa
push
sbbb
pusha
adc
lea
out
mov
and
adc
cld
xchg
fwait
xor
cmpl
cmp
mov
pop
scas
fstp
mov
adc
push
jmp
mov
int3
arpl
orl
add
cltd
aas
iret
xchg
mov
pushf
xor
and
jbe
movsl
cmp
xchg
add
pop
fucompp
sbbl
lock
sbb
xchg
sub
subb
dec
cmpsl
mov
mov
cli
loopne
mov
fnstcw
mov
cs
pop
jb
jge
jle
mov
cwtl
cmc
inc
mov
xlat
mov
shrl
xlat
jp
dec
dec
clc
ds
outsb
rclb
inc
pusha
xchg
inc
add
sahf
bound
cmp
cli
xchg
popf
icebp
ds
mov
pop
hlt
andb
loopne
cwtl
cmp
or
test
ljmp
movsl
pushf
add
jb
mov
and
cltd
or
jnp
loop
xchg
add
jb
shlb
or
jge
push
xchg
pop
test
inc
mov
mov
lcall
and
imul
repnz
mov
xor
jbe
popa
test
loopne
adc
inc
cmpsb
cmp
sub
cmp
and
cmpsb
lretw
outsb
pusha
fistps
push
push
incl
sbbl
inc
or
nop
sub
das
enter
mov
add
add
fsubl
mov
std
add
cs
shr
dec
and
pop
mov
cmp
sbb
mov
cmp
hlt
mov
mov
mov
icebp
or
add
rcrl
and
andl
iret
xchg
push
repz
outsl
outsb
push
adcb
std
cwtl
das
icebp
push
gs
inc
arpl
rolb
test
mov
call
or
ja
lcall
and
cs
mov
jae
jae
jmp
js
add
pop
clc
dec
call
push
add
lds
stc
nop
stc
bound
into
sbb
pop
inc
xlat
pop
lret
jg
faddl
daa
xchg
gs
xlat
xchg
mov
pusha
call
or
mov
or
cmp
lea
push
je
shlb
xor
mov
sbb
inc
scas
cmp
insb
rcr
jae
mov
shlb
adcb
dec
in
adc
testl
rcll
arpl
inc
stc
ss
jnp
hlt
shrb
push
shrb
and
mov
fidivs
mov
and
inc
xchg
and
pop
sbb
mov
js
mov
test
es
xchg
cmpsl
cwtl
outsb
les
pop
dec
out
sub
call
pop
int
mov
push
inc
addr16
jne
outsl
rcl
cmp
mov
dec
scas
jmp
or
loop
jo
cmc
add
jge
fidivs
pop
or
fucomip
jp
push
mov
lret
bound
mov
fldcw
mov
dec
adc
jns
mov
push
outsl
sarb
sbb
mov
xor
leave
aas
jo
ds
cmpsb
mov
adc
inc
jle
push
outsb
xor
xor
into
cld
inc
iret
loop
push
sarl
cmpsb
jl
testl
cmp
pop
lret
and
int
jge
add
ret
add
and
xor
push
stos
fwait
out
cmpsb
mov
cmc
dec
int3
pop
pop
sahf
dec
lds
lock
jno
outsl
aam
add
sub
out
test
pop
or
int
push
fisubl
xor
cld
xchg
jmp
lods
jg
repnz
mov
mov
enter
push
mov
xor
sarl
dec
aas
cmp
jle
fldl
inc
cld
xchg
jb
mov
lahf
jne
xchg
mov
adc
xchg
ficoml
adc
scas
jne
push
popa
mov
ljmp
loopne
cmp
loopne
out
xlat
ficoml
clc
adc
lahf
outsb
jbe
dec
sbb
les
dec
rol
pop
daa
fstps
or
inc
mov
addr16
push
mov
arpl
sarb
inc
lds
or
push
test
or
jae
loop
fstl
lods
cmpsl
sbb
jnp
fwait
mov
dec
push
xchg
sub
xlat
testb
fimull
or
cwtl
mov
cltd
sbb
jl
rcrb
sub
cmp
jl
pop
cmp
lods
mov
sub
or
push
mov
sbb
gs
cltd
xchg
mov
es
movsl
popa
dec
xor
nop
pop
call
jp
pop
popf
jg
adc
test
sbb
divb
pop
repnz
or
nop
lods
jp
mov
dec
loopne
cld
xchg
or
adc
adc
or
arpl
test
cmp
mov
mov
jns
push
mov
xchg
sbb
cwtl
xchg
cltd
pop
cmpl
movsl
aad
mov
push
or
mov
add
xchg
cmp
mov
dec
notb
repnz
lret
imul
or
jmp
jecxz
in
mov
mov
adc
jo
mov
std
subb
mov
aas
add
jl
push
push
xor
loopne
xchg
pop
leave
push
adc
loopne
push
shrl
outsb
adc
xor
add
cmpsb
cmpb
ret
dec
leave
jecxz
pop
leave
fisubrs
and
mov
pop
aam
insl
mov
dec
dec
ljmp
loope
in
mov
in
test
iret
outsl
push
sarl
scas
inc
lret
xor
inc
lret
cmpsb
lds
xor
loop
bound
cmpsb
cmp
sub
adc
mov
push
or
sub
ljmp
sti
xchg
mov
fistps
scas
and
add
js
aas
xchg
mov
lock
lds
xor
cmp
mov
mov
adc
fwait
and
inc
js
test
iret
cmp
add
fwait
mov
scas
xchg
dec
push
mov
les
jb
adc
ja
hlt
test
pop
setl
mov
das
jmp
add
mov
ss
imul
cmp
xchg
xor
push
or
cmpsb
inc
sbb
daa
mov
repnz
repnz
stos
push
xchg
sub
shrl
add
negb
push
mov
xchg
loop
add
push
lods
pop
or
xchg
divb
sbb
mov
xchg
fisubrs
mov
jmp
or
aam
and
mov
push
loopne
or
pop
mov
or
ljmp
push
mov
shl
std
adc
dec
loopne
or
jle
xchg
popf
fidivl
xor
adc
mov
dec
lock
and
jp
lcall
push
int3
inc
fscale
jno
mov
or
aam
mull
jmp
push
sbb
test
push
sti
xchg
dec
inc
stc
xor
push
jg
jo
jge
jns
loopne
jp
mov
mov
fidivl
lret
loopne
push
jmp
or
mov
movsw
cs
ljmp
push
in
cmpb
ljmp
iret
data16
inc
faddl
add
shl
add
and
sub
data16
cwtl
js
inc
mov
leave
jl
fiadds
lcall
je
imul
xchg
xchg
movsl
cmp
pop
test
xor
dec
ljmp
fstpl
xor
add
enter
sbb
outsb
popa
adc
pusha
sbb
mov
es
lock
push
mov
mov
pop
test
dec
nop
lea
mov
xchg
mov
jle
xchg
arpl
insl
sub
mov
push
sbb
lret
or
rolb
mov
xor
lds
sbb
cli
insb
movsb
or
fucom
sbb
jnp
nop
mov
add
xlat
jmp
stos
mov
mov
dec
jp
sti
call
mov
imul
aad
mov
dec
cwtd
in
fstps
jl
adc
push
xor
sbb
mov
fsubrl
jns
add
adc
mov
testl
cs
pop
jg
aad
sbb
stc
mov
sarl
loopne
adc
xchg
arpl
xchg
cs
xchg
fiadds
pop
hlt
mov
gs
bound
push
cwtl
sub
push
or
xchg
hlt
roll
hlt
cmp
push
orl
xchg
dec
addr16
xor
in
jp
pushf
mov
ficoms
and
xor
shll
pop
fnstsw
addr16
push
mov
or
xor
push
jmp
hlt
repz
mov
faddl
push
pushf
push
lock
into
hlt
mov
sub
mov
dec
xchg
sar
inc
mov
sub
mul
lock
cmp
insb
iret
data16
add
pxor
pop
adc
inc
or
push
addr16
dec
fistpl
mov
adc
xchg
in
movl
out
in
test
repnz
scas
mov
ficomps
imul
test
sahf
movsb
sbb
pop
sub
xchg
lret
out
test
push
in
mov
fdivrs
lock
int
fadds
push
leave
sbb
out
inc
inc
or
enter
push
stos
xor
xchg
cmp
jb
sub
pushf
xchg
imul
xchg
imul
nop
inc
cmp
jmp
xchg
stc
mov
mov
push
jmp
repz
mov
add
add
add
mov
mov
shrl
jp
cmpsb
fsubrl
mov
addr16
js
mov
push
cs
mov
and
je
mov
push
or
mov
daa
xchg
push
mov
sub
testb
repnz
out
hlt
nop
jno
mov
sarb
add
pop
mov
xchg
pop
in
test
cmp
add
xchg
add
fildll
arpl
xor
add
int
push
pop
js
xchg
pop
xor
add
je
pop
les
sub
push
shlb
fucomi
inc
pop
sahf
ja
dec
push
daa
push
mov
and
loopne
xchg
xchg
int
mov
sub
lret
cmc
mov
inc
sbb
add
push
out
and
xor
pop
sbb
jl
jnp
icebp
cmpsl
aas
fcomps
jg
movsl
adc
scas
pop
lret
aam
jnp
stc
mov
fldl
jns
mulb
mov
orl
not
shl
bnd
jmp
test
fists
cmp
imul
mov
or
add
xchg
sbb
sub
sub
shlb
fstpl
bound
sub
enter
mov
and
add
es
xchg
inc
jmp
dec
loopne
outsl
sub
int3
xchg
pop
scas
arpl
ret
lea
sub
pushf
in
cmp
sub
pop
int
scas
mov
or
gs
push
xchg
call
sbb
shrl
jg
adc
inc
push
test
ret
xchg
sub
mov
xchg
cltd
pop
pop
sub
sub
ds
pop
es
fstpt
cmpsl
in
cmp
sbb
pop
std
xchg
and
mov
ljmp
cli
push
dec
js
cmp
mov
rolb
fxch
call
push
adc
inc
je
mov
movsb
mov
cmp
mov
lea
insl
lea
jg
inc
shrb
push
test
cld
xchg
push
jmp
sti
and
adc
pop
pop
jg
jb
push
in
push
dec
imul
mov
ret
sbb
rcll
int3
adc
mov
xor
hlt
xchg
mov
sub
gs
or
scas
rcll
and
js
cmc
xor
cmp
or
jbe
xchg
and
lds
jl
fbstp
jmp
mov
inc
dec
sbb
lods
stos
std
or
into
cmp
cmp
jae
testb
insl
sahf
outsb
bound
push
pusha
testl
pop
test
dec
mov
inc
std
push
iret
nop
dec
mov
inc
adc
pop
mov
xchg
rcrb
sbb
ljmp
daa
leave
xchg
mov
xlat
or
sbb
test
rorl
sub
pop
mov
stc
nop
stc
mov
mov
mov
and
mov
fstp
jae
mov
mov
test
push
fcmovbe
outsb
or
shlb
incl
imul
loope
mov
rcll
rorb
add
and
xor
ficoms
push
mov
mov
out
movsb
jl
cmp
sbb
push
adc
jle
rolb
fldt
push
and
inc
lcall
gs
add
call
mov
cmc
aas
pop
push
mov
repnz
loope
or
mov
nop
cli
outsl
clc
das
inc
lods
popa
mov
movsb
jb
out
mov
push
jecxz
adc
icebp
mov
sar
fwait
pushf
scas
push
out
fbstp
inc
in
es
loopne
inc
loope
mov
call
xchg
adc
call
sub
gs
es
sbb
lds
outsb
add
mov
ja
lret
addb
inc
les
lods
jnp
in
int
test
iret
inc
les
sbb
std
ja
das
divb
stc
rclb
sub
lret
int3
daa
mov
or
inc
or
pushf
add
dec
add
jmp
and
int
jae
mov
cmpb
adc
lea
or
mov
mov
out
jmp
add
xor
rcrl
mov
or
test
jp
and
pop
jno,pn
imul
stos
xchg
outsl
mov
fbstp
and
push
repnz
push
dec
les
sbb
ret
rorl
in
das
stos
sbb
outsb
or
jb
dec
cmpsb
dec
fucomp
jae
jne
pop
push
cli
arpl
push
jmp
cmc
nop
dec
mul
in
inc
lds
jmp
insl
pop
das
xor
and
jns
scas
jo
jno
mov
add
push
addr16
xor
je
xor
imul
mov
je
pop
inc
out
adc
add
hlt
mov
out
fnstenv
push
adc
bnd
push
out
mov
jmp
cwtl
mov
fs
push
mov
out
and
stc
cmp
adc
jmp
and
test
sbb
out
filds
in
loop
sub
repnz
ss
arpl
negl
daa
dec
outsb
call
mov
dec
jecxz
cld
cmpsb
or
xchg
cmc
inc
pop
jbe
mov
subb
xchg
lahf
sbb
in
ljmp
adc
mov
push
js
push
sbb
mov
cmpsl
popa
adc
xor
insb
in
adc
gs
push
insb
mov
in
test
cmp
loopne
hlt
test
xchg
cs
xor
int
mov
out
repz
pop
adc
dec
pop
cmp
push
jge
and
cmp
sbb
xor
mov
in
inc
rcll
mov
lret
fsubs
pushf
leave
pusha
into
pusha
push
mov
lahf
addr16
shlb
bound
ja
add
repz
sbb
fs
push
jmp
fiadds
mov
imul
pop
mov
test
cmp
bound
insl
pushl
shrl
pusha
stos
call
or
or
fwait
xorb
jl
mov
out
jne
add
insb
adc
enter
xchg
push
and
inc
cwtl
jb
xchg
sbb
adc
adc
push
dec
jp
loope
adcl
pop
jge
xchg
ret
add
push
dec
es
cmp
or
mov
xchg
xlat
cs
mov
add
cmp
cwtl
mov
mov
fildll
mov
out
jno
push
call
cs
add
lcall
das
das
and
rolb
in
and
iret
mov
ja
inc
test
jp
enter
jns
fldenv
or
add
stc
jns
lds
arpl
shrb
iret
push
mov
jge
pop
scas
sbb
add
aad
jge
pop
mov
insl
pop
sahf
xor
pop
dec
sbb
sub
sub
shrb
xor
test
test
mov
sub
out
gs
cltd
push
dec
out
mov
push
xchg
adc
inc
out
mov
cld
cwtl
arpl
fcompl
sti
mov
jns
adc
sahf
jnp
scas
inc
mov
pop
or
or
iret
jno
daa
xchg
mov
out
inc
js
sbb
push
xchg
fnsave
into
and
or
in
stc
jb
jb
loope
movsb
repz
mov
and
clc
sub
add
sbb
ja
mov
sub
xlat
inc
sahf
lods
jl
ss
lods
movsb
mov
cs
jno
insl
dec
leave
repz
rcrl
nop
jge
pushf
hlt
push
adc
xchg
leave
arpl
int3
xlat
xchg
test
fildll
lock
cmp
mov
mov
jnp
hlt
mov
xorl
xlat
in
les
stc
mov
fs
xchg
push
push
f2xm1
jle
inc
jg
ret
dec
xchg
push
or
push
mov
push
inc
pop
xor
xor
ficoms
mov
stos
or
nop
pop
pusha
dec
jno
pop
mov
insb
cmp
dec
push
mov
xchg
fwait
or
orl
add
add
mov
stos
mov
xchg
sahf
movsl
add
dec
lahf
lock
daa
and
iret
adc
mov
jne
sub
xor
and
pop
and
xor
mov
cmp
lahf
sub
cmpsl
pop
and
jge
test
fldl
sub
xchg
aad
enter
mov
fldcw
ja
sbbb
xor
and
inc
dec
pop
and
stos
sub
mov
loope
jns
and
lret
fnstsw
xchg
dec
xor
stos
sbb
repz
clc
lods
ds
inc
add
fxch
cmp
out
add
xlat
add
ljmp
sbb
mov
daa
dec
mov
push
jae
rcl
fwait
iret
inc
xchg
dec
in
adc
pop
mov
jbe
notl
dec
add
pop
ja
cmc
test
adc
dec
mov
xor
xchg
xor
sahf
xchg
xor
testb
ja
inc
repz
icebp
adc
mov
fildll
and
daa
ret
dec
lret
mov
ljmp
sti
testl
cld
hlt
fldcw
add
mov
mov
mov
pop
pop
cwtl
cli
ficomps
sub
dec
mov
out
adc
inc
insb
add
ror
test
stos
inc
cltd
cmpsl
or
outsl
adc
and
ds
faddl
leave
lods
inc
sti
outsb
int3
adc
push
fwait
adc
inc
stos
lea
cli
cwtl
das
sub
movups
imul
insl
fsubrl
in
flds
es
fmull
loop
scas
bound
inc
jmp
xor
in
iret
popf
inc
leave
xchg
call
stc
cmpsb
dec
ret
pushf
push
inc
loopne
rolb
jle
pop
mov
data16
cmp
ja
cli
cmp
sbbl
gs
add
inc
dec
sub
inc
xor
subb
adc
add
mov
mov
jnp
aaa
or
xchg
gs
push
jne
ljmp
lods
lock
xchg
lea
inc
call
sub
jo
fsubrl
imul
mov
sbb
in
andl
imul
push
pop
rcll
fstps
jle
mov
or
cwtl
test
jne
aad
inc
rclb
in
push
sbb
arpl
insl
xor
rcll
jmp
jp
movsb
clc
cmpsb
fimull
in
in
stos
mov
je
les
pop
pushf
add
mov
cld
xchg
pushf
and
adcl
and
dec
loopne
cmp
std
loope
mov
loopne
stos
cli
or
push
pop
repnz
mov
jge
out
and
dec
mov
push
lods
add
mov
int
jb
pop
lret
cld
pop
gs
lds
lret
lds
lcall
push
and
xor
sbb
out
rcl
push
push
mov
sarb
fcompl
or
ja,pn
pusha
fisttpll
push
adcb
pusha
aad
dec
pop
addb
pop
aad
cmp
jl
xchg
iret
or
cmp
mov
sub
popf
or
mov
dec
mov
pop
push
scas
xchg
dec
cli
xchg
mov
or
and
push
sbb
inc
jo
ja
pop
dec
dec
pop
dec
loopne
insl
xchg
call
lcall
repnz
xchg
xchg
scas
rcll
mov
out
test
das
and
popa
and
pop
test
loopne
lea
adc
ret
popf
lret
cs
clc
sub
inc
mov
dec
mov
mov
cwtl
in
cmp
dec
scas
andl
cmp
int
xchg
dec
cld
movsl
dec
cmp
pop
dec
mov
sub
mov
sub
std
cltd
xchg
mov
lcall
lcall
xor
inc
xchg
mov
mov
dec
fidivrs
mov
in
je
daa
cmp
jbe
scas
xor
ljmp
hlt
pop
xor
int3
arpl
and
icebp
outsb
hlt
and
xchg
xchg
xchg
mov
mov
aam
loopne
sbb
jmp
pop
or
xor
xor
bound
movsl
daa
push
xor
xor
xchg
push
out
mov
fdivrl
sbb
decb
jg
pusha
bound
jl
mov
data16
inc
cmp
push
and
inc
int
xor
jmp
mov
cmp
sti
fucomp
fdivrp
ret
data16
dec
mov
daa
mov
aas
dec
mov
fsts
into
mov
mov
pop
and
dec
dec
lahf
xchg
test
imul
mov
iret
call
iret
push
and
cmc
loopne
push
cmc
xchg
mov
cmp
popa
mov
mov
ficoml
add
dec
popf
adc
fistl
insl
push
repnz
mov
push
out
fwait
push
sub
cmp
mov
enter
sbb
pop
rcrl
hlt
jg
pop
jmp
mov
ret
xor
sub
mov
jmp
mov
push
cmpsl
mov
xor
xchg
aam
dec
int
lods
xchg
ljmp
cmp
bound
inc
outsb
enter
adcb
sub
dec
jge
add
int3
in
dec
mov
inc
and
adc
xchg
leave
fs
mov
xchg
sbb
or
mov
push
faddp
pop
xchg
adcb
popa
cli
aad
pop
pop
out
dec
cwtl
cli
pop
mov
jae
pop
xor
mov
sbb
out
out
xor
cmpsb
or
movsl
das
inc
fldenv
or
movsb
cmp
and
in
pusha
pusha
mov
scas
jae
hlt
mov
out
stos
cli
pushf
push
adc
je
dec
fld
icebp
cmpsb
cmp
mov
xchg
cs
in
jo
jecxz
mov
mov
jne
push
mov
adc
dec
jl
xorl
push
out
add
fdivl
loopne
or
dec
sbbb
mov
ficoms
inc
cwtl
or
mov
xchg
sub
into
fldt
enter
int3
repnz
ljmp
sbb
loopne
cmp
mov
lcall
push
fcomi
mov
ja
sbb
or
xchg
sub
hlt
pop
idiv
xchg
sarl
and
pop
mov
loop
jecxz
bound
les
jae
inc
push
and
xchg
mov
and
add
sbbl
sub
inc
push
popa
ret
test
sahf
test
loope
mov
adc
jg
ret
mov
pop
cmp
push
and
xlat
push
jb
data16
loope
fs
lret
mov
fstl
jmp
sub
mov
cmp
jle
je
xlat
insl
push
adc
and
xchg
xchg
movl
pusha
scas
pop
fbstp
mov
es
popa
outsb
sbb
mov
jb
shrl
int
xor
push
fcomi
dec
mov
mov
and
addb
nop
pop
cli
jecxz
ret
in
xchg
dec
test
inc
in
insl
push
adc
add
xor
enter
xchg
xchg
pop
mov
mov
bound
adc
aam
repnz
mov
mov
bnd
xchg
icebp
sub
or
mov
fdivl
shl
push
cmp
inc
shll
icebp
inc
insl
sbb
cmp
mov
fistl
xor
inc
xlat
ret
insl
cld
jecxz
cmc
adc
push
mov
test
lret
lock
pop
add
aas
rclb
rol
scas
out
cmpsl
std
jp
or
ret
push
sbb
or
inc
pop
xlat
add
lahf
sbb
jecxz
imul
cltd
movsl
xor
mov
andb
push
adc
push
pop
adc
insb
jmpw
mov
jp
outsb
jl
xor
daa
fiaddl
xchg
sub
sbb
inc
mov
jno
jo
clc
cmp
cmp
leave
je
and
mov
aas
adc
repnz
jb
push
ljmp
dec
dec
xchg
js
int
imul
clc
cmp
cmp
shrb
sbb
data16
insl
xor
xor
cli
jne
dec
push
or
jmp
xor
mov
mov
cmpsb
ss
fstpt
lea
xor
ds
aaa
lock
add
mov
adcl
dec
push
sub
cmc
inc
jnp
out
jmp
insl
add
outsl
jg
insl
mov
lahf
inc
into
gs
cmpsl
decb
in
repnz
js
test
xchg
add
inc
inc
das
cmp
jne
inc
pop
adc
xchg
sub
ss
clc
popf
out
lret
mov
ljmp
mov
mov
dec
cmpsb
pop
ror
fmuls
stos
jg
push
jb
pushf
fadd
pop
cltd
orl
sub
jae
xor
das
pop
or
and
cmpsl
add
insb
jl
jns
sub
lret
dec
popf
sub
into
arpl
dec
cld
cmp
mov
out
rclb
cmp
sarb
out
xor
mov
int3
adc
sub
fidivrs
xor
sub
jo
cmp
imul
daa
adcl
lea
inc
pop
push
bound
xchg
jnp
adc
xor
ljmp
push
mov
or
jnp
add
ljmp
mov
inc
push
jno
movsb
and
nop
int3
lods
inc
mov
add
pop
lods
pop
test
cltd
fnstcw
cmpsl
pop
jb
lea
cmp
fucomp
mov
lret
test
loop
pop
mov
andl
fldt
into
gs
add
addr16
in
pop
add
mov
add
jnp
push
adc
out
shlb
lods
stos
cwtl
nop
jb
push
xlat
jns
push
mov
popl
rcrb
xchg
js
ret
loope
lods
inc
dec
sbb
lret
fists
cmpsl
mov
icebp
insb
push
pop
adc
adc
fisttpll
int3
nop
mov
sbb
mov
push
in
jp
jns
adc
xchg
jmp
insl
icebp
cmp
add
and
mov
sarl
faddl
popf
ret
fwait
out
xchg
aam
dec
leave
jb
inc
movsb
psubb
imul
roll
cld
data16
sub
inc
or
iret
insb
cltd
mov
lock
and
sub
cld
mov
sub
dec
lahf
decb
xchg
repz
xlat
hlt
idiv
inc
dec
sbb
pop
mov
push
pop
xor
inc
jne
jae
mov
jl
cmp
addr16
icebp
mov
loopne
movsl
aam
and
dec
out
mov
outsb
jl
mov
sbb
adc
push
rorb
aaa
xor
out
dec
sarb
cmp
popf
arpl
pop
mov
in
aaa
mov
in
sub
test
leave
int
sti
add
orb
loopne
loope
xor
push
in
mov
jae
fcmovnb
jae
iret
mov
lock
daa
and
mov
cmp
stc
pop
sbb
aaa
into
fcomip
cmp
popa
adc
scas
xor
idivb
loopne
outsb
sub
lret
mov
mov
icebp
xchg
pop
sbb
sub
xchg
jle
xchg
lock
int3
addr16
pop
rorb
punpcklbw
jg
push
add
lds
pusha
iret
fdivs
scas
fstl
leave
iret
ja
fsubl
add
jbe
mov
mov
push
jne
xor
xchg
xchg
andb
push
loope
or
lret
mov
loope
sub
leave
pusha
insb
dec
popa
inc
repnz
mov
or
push
jle
cmp
adc
insb
mov
push
or
jne
daa
mov
mov
inc
andl
or
inc
or
cli
inc
fwait
xor
xor
in
ret
mov
xchg
rorl
pop
cwtl
fs
mov
outsl
test
insl
add
std
jne
sti
movsb
mov
xchg
jb
enter
dec
sbb
bound
mov
dec
jecxz
xlat
loop
mov
lcall
hlt
adc
adc
add
mov
xorl
jecxz
inc
xor
jecxz
out
mov
sarb
xor
push
add
mov
xor
cmc
into
data16
xchg
in
bnd
cmp
xchg
push
mov
mov
xor
sbb
lds
push
push
out
pop
sbb
jo
jmp
mov
imul
cli
xchg
lods
adc
sbbl
or
sub
dec
jge
dec
lods
mov
xor
pusha
aas
adc
xor
pop
and
mov
scas
stc
sti
adc
mov
mov
enter
out
pop
fsubp
cmc
mov
jnp
push
insb
add
imul
pop
adc
int3
mov
inc
inc
sbb
pop
frstor
addb
ds
imul
fldl
lcall
pusha
jns
pop
mov
pop
aas
fucomp
popa
hlt
add
and
lods
jmp
fiaddl
outsb
mov
ret
jbe
andl
and
ficoms
insb
and
nop
sbb
ja
dec
sub
loopne
push
dec
decb
or
nop
int
lods
cmp
sub
inc
fldl2e
iret
xor
xor
insl
add
test
out
and
sub
inc
mov
enter
jle
aam
lods
add
jecxz
mov
aas
lret
cmp
sbb
aaa
mov
lret
in
aam
scas
idivl
inc
scas
nop
test
ret
in
popa
movsb
pushf
out
xor
add
mov
mov
gs
fisubl
jbe
sbb
lret
arpl
jp
and
xchg
lods
int
ljmp
xor
mov
into
mov
addr16
adc
aas
je
ficompl
insl
dec
sti
dec
mov
mov
lds
adcb
xchg
sub
imul
jg
out
xchg
lret
push
sub
xorw
gs
push
and
lods
je
push
mov
ret
fstpl
lret
jg
sub
popa
aas
sarl
mov
test
push
nop
sub
lds
scas
add
inc
mov
sub
push
sbb
loopne
lea
jne
aad
pop
pop
inc
gs
jnp
add
or
push
fs
jnp
xchg
idivl
mov
mov
in
adc
lcall
push
call
or
repnz
jb
xor
mov
mov
sbb
xor
in
fiadds
mov
cs
lods
mov
popf
das
jns
pusha
mov
das
sti
or
stc
adc
and
test
dec
cmp
fwait
outsb
addr16
pop
xchg
mulb
xrelease
xchg
es
xchg
jo
lods
pop
jle
sbb
jne
stos
xchg
and
stos
xchg
outsl
jnp
scas
pop
scas
fistps
cld
loope
xor
push
cli
das
or
dec
lcall
adc
movsl
icebp
enter
or
or
sti
rolb
div
dec
add
mov
jle
ds
dec
adc
mov
adc
mov
sub
mov
xchg
cmpsl
popa
test
push
adc
mov
pop
jge
inc
fsubrp
jb
lcall
dec
mov
or
mov
pop
fisubrl
inc
scas
mov
mov
dec
movsb
bnd
lea
jge
sub
cmp
negb
call
mov
sub
jnp
lods
insl
imul
in
arpl
push
jmp
push
pushf
and
insl
add
das
xor
xlat
mov
push
fwait
mov
mov
cmc
dec
sahf
xchg
add
ret
ss
mov
shl
stos
xchg
push
mov
in
inc
or
rcll
test
mov
aaa
add
scas
lods
shl
cmp
mov
insb
in
dec
adc
movsb
add
shll
mov
adc
add
aaa
into
repnz
fldl
cwtl
das
test
add
adcb
leave
sbb
xchg
dec
jns
add
inc
enter
scas
mov
sbb
fs
div
int
jge
pop
pushf
and
cltd
or
cs
fistpl
xchg
push
jge
mov
jg
push
outsl
mov
out
xchg
aaa
cmp
xor
xor
addr16
push
xor
sub
cld
jo
and
xchg
and
into
xchg
sub
push
xchg
dec
inc
adc
jne
lret
lret
cmp
mov
xor
xchg
jo
and
inc
pop
bnd
sub
dec
push
push
jb
out
add
int3
test
call
aad
sub
or
or
andl
sbbl
aad
pop
sahf
adc
outsl
hlt
and
push
add
mov
shlb
cmpsl
cld
lcall
xor
arpl
shll
inc
aas
ret
pop
jno
cmp
lock
xchg
rcrb
add
or
das
mov
mov
insb
xchg
lret
andl
push
aaa
add
mov
fildl
into
fisttps
lea
int
push
push
mov
push
adc
aas
xorb
and
shl
mov
jle
cmp
sbb
js
sbb
ds
jo,pn
push
movsl
pop
pop
sub
add
test
iret
push
mov
mov
scas
jmp
push
shl
mov
cmp
popf
add
imul
add
inc
sti
mov
icebp
rorb
unpckhps
xchg
inc
xor
sub
push
fdivrs
pop
pop
push
sbb
add
sbb
loope
sbb
mov
addr16
sub
adc
adc
popa
mov
test
je
int3
xchg
xchg
nop
leave
loopne
popa
mov
adc
xlat
rcr
bound
in
inc
fwait
and
test
add
add
repnz
pop
inc
add
fs
movsb
push
mov
push
addb
xlat
xchg
add
test
test
mov
sbb
add
insl
les
pop
inc
mov
js
negb
arpl
jl
jae
jp
movsl
addr16
add
movsb
outsb
rolb
sub
cwtl
stc
or
ja
cmp
cltd
mov
inc
push
pop
jne
das
cmpsb
cmp
repnz
das
add
pop
push
xor
fcmovu
sbb
sub
and
pop
cltd
adc
les
scas
daa
xchg
mov
or
insb
adc
scas
imul
fldcw
jnp
fists
in
jg
popf
mov
push
std
mov
push
out
shr
nop
pop
add
mov
mov
xor
adc
test
cld
push
mov
fistl
add
mov
mov
mov
das
test
les
jnp
das
lods
mov
mov
decb
push
sbb
aas
out
stc
repz
test
lret
nop
xlat
jns
add
arpl
cmp
pop
push
scas
das
ret
sti
xchg
fistl
dec
mov
mov
addr16
test
mov
sahf
lds
getsec
into
lea
adc
subb
mov
mov
rcll
adc
pushf
scas
add
shrl
into
es
gs
data16
pop
mov
inc
outsb
cmp
jecxz
ljmp
cli
xchg
dec
fdiv
daa
lcall
cmp
rol
fistl
mov
popa
cmp
xchg
je
rolb
jno
sti
mov
dec
popa
mov
pop
mov
aad
push
andb
addr16
cli
pop
daa
lds
aam
inc
mov
insb
outsl
dec
mov
das
dec
xorl
xchg
stc
nop
test
push
jns
adc
xchg
cs
lcall
pop
jle
adc
js
cld
cmpsl
ds
jle
mov
push
popf
sub
dec
jle
adc
and
adc
data16
cltd
fnstcw
jecxz
ret
cmp
jge
dec
test
mov
sbbb
test
adc
adc
cs
fs
add
cmp
mov
fs
mov
fsubl
lret
and
add
fcmovnbe
push
mov
cmp
or
mov
mov
jge
sti
lret
mov
call
fstpl
pop
shl
hlt
push
and
leave
xchg
cs
rcll
jg
xchg
push
pop
inc
jbe
dec
mov
rcl
repz
sahf
cmc
sbb
mov
pushf
mov
jl
mov
movb
pop
mov
fucom
pop
mov
push
subb
ds
loope
push
pop
scas
test
xor
rcrl
dec
dec
imul
sbb
pop
sub
into
fbstp
xorl
push
xlat
mov
ja
je
push
cmpsb
pop
jns
mov
jne
scas
mov
lds
push
in
sub
iret
xor
in
inc
iret
cli
cmpb
out
jmp
xchg
xchg
cmp
les
scas
ret
ds
in
xchg
mov
imul
stc
xchg
outsl
ljmp
pop
pop
sub
dec
out
cld
cmc
stos
inc
daa
push
sub
lock
inc
shl
iret
or
cld
int3
mov
jns
testl
add
in
das
inc
inc
push
inc
lock
pop
dec
arpl
fmulp
aad
jge
cli
adcl
dec
pop
adc
and
stos
flds
push
and
add
lret
xchg
out
je
sbb
xor
nop
push
cmpb
daa
ja
scas
test
sub
int
cmp
inc
xor
imull
mov
psrad
pop
inc
lds
dec
add
in
int3
sahf
or
icebp
loope
mov
cmc
push
jne
xchg
repnz
add
mov
sarb
insb
sbbb
sbb
mov
push
out
out
mov
popf
dec
mov
jnp
inc
fldt
sub
xor
pusha
imul
add
inc
std
xlat
out
loope
je
mov
aaa
mov
pop
fisttpll
jns
fld
insl
aam
jnp
xlat
pop
int3
cmp
daa
test
dec
or
inc
dec
xor
push
call
cmp
cmc
mov
pop
cmp
sub
aad
xor
dec
or
mov
mov
and
loope
ret
pusha
movsl
lea
push
add
fisubl
jnp
cwtl
mov
fbstp
roll
lcall
jbe
jecxz
dec
dec
es
xchg
stos
das
dec
push
out
repnz
jo
adc
jge
push
cmpsl
test
mov
fcoml
adc
mov
aas
dec
les
bndstx
pushf
pop
push
dec
push
addr16
out
pop
mov
mov
and
shrb
outsb
sarl
sbb
pop
out
lahf
popa
and
jno
xor
mov
jecxz
aaa
xchg
adc
mov
imul
xor
xchg
adc
cmp
mov
in
fcompp
pop
and
and
fwait
add
data16
and
call
mov
das
add
and
cmpsb
in
cwtl
test
ret
nop
sbb
mov
pop
imul
out
stos
xor
lock
xor
push
loopne
pop
inc
repz
jl
loopne
xchg
pop
jecxz
sub
mov
cmpsb
leave
cmp
pusha
insb
scas
push
sarl
aas
sub
int
xor
cmp
mov
xor
jecxz
add
cmp
inc
sbb
mov
mov
sbb
aas
mov
jne
int3
push
mov
popa
cmc
add
cmpsb
lahf
mov
or
mov
out
inc
in
aaa
mov
adc
in
push
or
push
fiaddl
pusha
fistpl
adc
xchg
das
and
cmp
mov
insl
cmp
scas
popa
popf
adc
xchg
in
fsub
mov
jg
lea
xchg
xchg
mov
andb
stos
sbb
fdivrs
xchg
jge
stos
subl
lret
pop
adc
push
mov
sahf
push
inc
cmp
jbe
arpl
js
cmp
lret
dec
sahf
aam
jne
leave
movsl
inc
cld
adc
jae
arpl
push
xchg
loop
push
add
jg
loope
cmp
jg
xlat
sub
stc
xchg
jo
jae
or
push
in
sbb
repz
mov
arpl
cld
outsl
out
nop
mov
mov
lods
adc
jbe
add
das
cltd
in
std
into
jnp
insb
test
mov
fucomip
outsb
inc
add
in
adc
in
inc
loope
test
outsl
loop
push
gs
inc
lret
mov
inc
jp
or
xchg
bound
test
mov
stos
xchg
mov
xlat
scas
jmp
pop
cli
test
popa
mov
std
mov
stos
xor
and
mov
rcll
dec
pop
dec
lcall
nop
adc
xorl
cmc
in
pop
stos
ficompl
xchg
sub
sub
xor
jmp
sarl
and
test
jge
into
lahf
mov
pusha
and
xor
push
in
adc
pop
xor
push
pushf
movsb
mov
movsl
aam
mov
jp
push
inc
cmp
lea
icebp
fwait
dec
loope
idiv
lcall
mov
add
xor
popf
add
cmc
aaa
or
push
daa
fadd
popa
or
cmp
enter
xor
xor
mov
fs
shl
mov
sub
mov
or
xorl
in
shl
je
outsb
hlt
out
and
cmp
mov
mov
mov
mov
int
xchg
sbb
scas
mov
mov
jecxz
jmp
test
or
mov
popa
dec
mov
outsl
sub
popf
add
inc
out
sbb
lock
pop
cmc
not
dec
mov
fxam
jo
xorl
dec
sbbb
inc
xchg
out
icebp
pop
mov
cld
mov
test
push
loope
mov
xchg
adc
cmp
test
cmp
push
sub
movsl
add
orb
es
and
dec
dec
inc
cmc
jge
and
cmpsb
mov
cli
push
lcall
push
jbe
add
ret
imull
inc
sub
jnp
icebp
iret
testl
dec
cmp
out
cltd
sub
mov
jle
xchg
sub
iret
cmp
rcrl
adc
pop
mov
mov
add
std
adc
test
cmc
mov
dec
mov
test
insl
dec
sbb
cs
mov
jo
cmp
and
and
pusha
jnp
inc
adc
fnstcw
test
or
inc
incl
mov
pusha
dec
out
cmp
jmp
mov
das
jne
mov
and
pushf
pop
mov
pop
es
sbb
jp
ss
and
jge
xchg
jbe
stos
inc
jg
inc
int
scas
jecxz
stc
popf
pop
mov
jno
scas
xchg
int
add
mov
and
mov
or
addb
push
sbb
or
xchg
call
cmp
xor
fwait
xor
cmp
test
ss
or
testb
dec
or
mov
repz
ficoms
jge
stc
pop
sbb
and
dec
lret
decl
dec
push
fmul
out
subb
xchg
jae
cmc
inc
mov
fisttpl
arpl
fisttps
and
lds
ljmp
fstl
xor
xor
xchg
push
jns
pusha
mov
pop
push
sarl
push
dec
dec
pop
mov
cmp
mov
push
aad
push
jno
js
and
in
push
out
inc
and
xchg
sti
pop
test
enter
push
xor
cmpsl
add
fnstenv
leave
inc
inc
cld
insl
arpl
lret
jae
cwtl
in
movsl
sbb
mov
je
repnz
nop
pop
or
nop
sub
ret
aaa
cmpsb
xlat
pop
and
inc
in
push
sahf
dec
pop
mov
push
jle
jmp
push
in
pop
lods
ljmp
and
mov
mov
jae
xorb
out
add
inc
arpl
je
jnp,pt
dec
xchg
test
pop
int
orl
add
rcr
push
dec
mov
inc
int
sbb
dec
or
out
jnp
pop
jne
adc
xchg
pop
sbb
lods
fdivs
lods
push
push
add
pushf
movsl
ljmp
or
cltd
rcrl
in
mov
addb
nop
cmp
xchg
fwait
sbbb
iret
dec
jg
shlb
jecxz
out
adc
cmp
shlb
inc
xlat
jb
mov
and
add
stos
mov
out
imul
dec
es
inc
repnz
mov
fwait
xor
sbb
cmp
lahf
xchg
xchg
test
push
call
pop
repnz
cwtl
pop
addr16
sbb
push
imul
rcrl
ret
out
xor
fadds
push
cmpsb
dec
addr16
lahf
mov
jge
call
hlt
in
lret
aad
cmp
movsb
rcrb
dec
add
adc
adc
nop
out
jle
jge
jmp
gs
mov
and
je
xor
lds
mov
sti
jne
int3
pop
and
popf
fmulp
in
addr16
pop
int3
or
sbb
out
or
ja
dec
insb
jns
lods
dec
mov
sti
inc
pop
mov
lret
mov
lcall
lods
xchg
add
repz
ss
mov
rol
add
mov
mov
lret
sbb
or
xor
jl
ljmp
cmc
mov
std
adc
push
enter
enter
xor
mov
push
lcall
into
les
shl
add
or
loop
les
push
pop
add
arpl
cmp
or
push
cwtl
pusha
aas
inc
std
imul
or
xchg
pop
dec
icebp
cs
pop
cs
adc
fnstsw
jno
int
lcall
add
xor
pop
insl
dec
push
dec
scas
stos
or
adcl
xchg
fisubrs
sahf
inc
hlt
mov
in
jne
orl
xchg
test
inc
stos
xchg
in
dec
and
data16
nop
out
sub
cmpsb
shl
mov
aad
pop
pop
pusha
nop
sub
lret
out
jno
jecxz
cld
mov
cs
fcomps
or
dec
mov
jb
aaa
dec
adc
pushl
or
dec
cmp
call
push
ror
push
popf
shrl
and
mov
les
adc
and
xlat
sub
movb
inc
sbb
subb
cmp
jae
sbb
pop
xchg
or
cmp
jns
dec
imul
push
hlt
fs
adc
or
into
jge
in
fwait
stos
pop
es
out
mov
mov
fsts
push
imul
sub
jns
dec
out
mov
jmp
pushf
xor
xchg
cmpsl
aas
push
mov
mov
cmpsl
sbb
fldcw
cmp
int
mov
arpl
lfs
push
mov
xor
lods
inc
adc
je
fnstenv
lret
xchg
testb
sarl
or
insl
loope
ret
adc
outsb
lods
test
mov
dec
aad
jo
jp
sahf
sahf
adc
jecxz
and
pop
mov
mov
push
push
jae
cmpsb
sarb
jecxz
jno
repnz
ficoml
mov
rorl
jmp
dec
lret
xor
shlb
lods
mov
idivl
rorb
jns
add
pop
cs
outsb
inc
push
dec
ds
and
xor
xchg
test
mov
loope
sbb
jbe
xor
mov
aas
or
cmp
xor
ret
pusha
dec
push
iret
mov
adc
fsubs
daa
mov
mov
and
insb
lahf
jp
leave
cmp
rcrb
cmpsl
fs
cmp
adc
jg
enter
mov
xor
dec
movsb
dec
xchg
test
xchg
out
xchg
int3
cmpsb
sbbl
shlb
cmp
stc
sbb
xor
adc
and
pop
outsb
mov
test
dec
push
dec
xor
stos
xor
ret
test
fs
sbb
les
movsl
js
mov
jecxz
lea
adc
push
fldenv
dec
mov
sar
lcall
loope
push
inc
push
rclb
mov
fisttpl
xchg
test
lds
in
pop
mov
mov
cmpb
or
add
fidivs
add
sti
xchg
mov
iret
das
xlat
cltd
push
and
sti
sti
sub
mov
out
aam
push
mov
aam
and
jo
dec
mov
ja
nop
loope
mov
sarb
fistpl
in
cli
inc
sub
incl
add
cmp
jle
arpl
ja
shl
jge
push
jg
outsb
xor
divl
jp
inc
push
dec
and
pop
nop
jle
add
out
and
or
test
test
sub
test
cs
inc
fdivrl
rcrb
pusha
mov
mov
pop
adc
rorb
shl
pop
cmp
mov
ret
mov
std
xlat
sub
xchg
dec
cmp
sbb
mov
out
mov
testb
aas
pop
out
lods
lret
rorl
call
jge
cwtl
mov
psraw
jle
rcrl
mov
mov
test
push
or
xor
push
xor
popf
stc
shr
xchg
in
adc
xor
popa
or
lods
imul
push
shrl
mov
cmpsl
lea
fcoml
subb
xlat
add
mov
sbbb
imul
andl
out
xchg
test
add
lret
dec
push
fldcw
push
fst
xchg
iret
cmpsb
fdivrs
lods
xor
push
fbld
cmp
mov
mov
lea
xchg
sbb
imul
sub
test
lret
lods
loopw
adc
add
je
push
push
roll
cwtl
cmpl
xor
fisubs
aaa
testl
movsb
sub
stc
test
xor
mov
xchg
lock
sub
adc
mov
cli
lods
cmp
adc
pop
adc
pop
inc
jle
out
outsb
and
ret
jbe
mov
shrb
stc
jmp
mov
into
jmp
scas
inc
mov
push
sbb
testb
adc
sub
loopne
xchg
testb
sahf
xor
pop
es
xchg
ret
sti
pop
jb
in
mov
out
jmp
dec
cmp
pop
pop
mov
lea
adc
out
imul
jp
xor
stc
xchg
or
pusha
stos
jo
sbb
mov
sub
loop
lds
repnz
jo
push
scas
inc
dec
enter
mov
and
shll
js
loopne
test
arpl
bound
and
mov
in
push
mov
test
jae
mov
mov
xchg
pop
popa
sti
xchg
push
sub
in
and
adc
ja
lret
inc
push
ljmp
sub
iret
xchg
js
adc
jg
xlat
scas
fwait
sahf
jle
scas
lods
sti
push
leave
rcll
lcall
mov
cli
mov
push
outsl
inc
xchg
leave
adc
test
bound
or
mov
hlt
rolb
xor
hlt
jne
andb
or
jg
dec
sahf
xchg
mov
push
lret
sbb
rorl
mov
xchg
push
insb
mov
insl
das
psubusw
xchg
sub
push
popf
push
scas
ficompl
popf
xor
aas
push
cltd
hlt
rolb
lds
push
adc
out
xor
fdivrl
imul
lcall
out
inc
mov
add
jnp
mov
out
add
dec
mov
pushf
mov
into
inc
ds
mov
cmp
add
loope
movsl
insl
in
mov
jle
and
out
jecxz
imulb
cmp
mov
sub
cmp
ret
ss
insl
adc
leave
sbb
xor
pop
xchg
decb
addr16
jl
xor
mulb
pop
adc
jbe
out
sbbb
inc
ss
lret
sub
orb
cmp
aam
jne
push
dec
in
mov
scas
call
test
call
arpl
loope
pop
adc
push
pushf
dec
ret
cmp
xor
fwait
test
sti
mov
stc
adc
push
sub
mov
out
les
cmpsl
fldl2t
and
in
mov
and
sbb
mov
aad
cli
out
xchg
pop
adcl
push
push
inc
pop
cmp
dec
rol
cltd
mov
bnd
adc
aaa
mov
add
fs
mov
cmp
popf
mov
cmpsb
cmp
add
inc
out
in
xchg
dec
jecxz
fs
pusha
insb
rcr
call
pop
mov
jg
outsb
fsubp
mov
movl
mov
mov
mov
jno
adc
notb
lret
sub
jae
ds
outsl
dec
jecxz
adc
je
jno
dec
and
adc
mov
sbb
jp
lock
in
ja
sarl
and
lret
aaa
jecxz
pop
adc
mulb
daa
mov
sbb
mov
test
test
popl
and
sbb
in
inc
imul
loopne
insb
das
jbe
sub
cmp
jnp
inc
js
pop
or
pop
jbe
mov
mov
test
cmp
xor
mov
and
and
pop
pop
pop
dec
repz
loop
sub
add
mov
pop
repnz
or
rol
ja
and
add
lods
mov
push
xchg
mov
ret
adcl
sub
inc
incl
adc
int
rolb
push
sbb
jno
cwtl
mov
js
out
jbe
mov
adc
mov
jl
ljmp
xor
mov
popl
in
jge
adc
frstor
inc
lods
sbb
adc
push
scas
flds
mulb
xor
push
cmp
jl
xchg
sub
cmpsl
mov
ja
loop
int3
je
xchg
cli
cmp
inc
out
jbe
data16
ss
addr16
push
push
xor
jbe
and
outsb
clc
sti
ret
cmc
roll
mov
lret
je
or
std
je
les
repnz
dec
pop
mov
jp
sahf
sbb
pusha
lock
test
cli
sbb
dec
sbb
push
push
mov
xor
xchg
repnz
ret
sti
stos
xchg
lcall
out
mov
data16
rcrb
cwtl
jnp
lds
adc
cli
pushf
dec
scas
icebp
xchg
mov
lea
mov
inc
inc
lret
js
sub
dec
clc
or
lock
xor
pop
pop
pop
push
test
aad
roll
push
xchg
cmp
cltd
cmp
mov
lahf
icebp
in
test
das
inc
movsb
sar
bound
inc
hlt
pop
mov
dec
stos
insb
jnp
adc
in
cmp
inc
fucom
xchg
pop
adc
ljmp
movsb
or
out
inc
push
add
mov
dec
sub
xor
stos
add
jl
cmp
pop
int3
fdivrs
cmp
int
jnp
add
push
xor
dec
xor
iret
push
add
xchg
cmp
dec
rdtsc
sub
mov
pop
lahf
jo
cmp
sub
bound
xchg
dec
sub
mov
xor
notb
fs
loope
add
dec
xchg
sbb
jmp
outsb
dec
and
jl
xchg
insl
iret
shr
test
jmp
pop
ds
fbstp
out
pop
xchg
dec
test
test
add
shll
adc
cmp
jge
iret
into
sbb
daa
push
lret
arpl
cmc
dec
pop
addr16
mov
icebp
pop
std
adc
and
insb
sti
add
sub
xlat
pop
cwtl
push
xlat
jge
scas
fcmovnu
sahf
push
xor
repnz
pop
cmp
xor
testb
pushf
mov
mov
adc
ja
les
mov
mov
add
lds
or
dec
add
or
and
jae
jle
das
jmp
push
popf
arpl
cmp
fld
outsb
rcrl
cli
xchg
jo
fbld
or
fcmovb
or
pcmpgtb
sbb
mov
insb
xchg
dec
sub
mov
pop
shrl
push
in
adc
sbb
pop
adc
loopne
sbb
in
jecxz
add
sbb
and
into
xlat
outsl
cmp
jp
les
and
and
adc
jo
insl
stos
jb
jecxz
cld
shlb
dec
jg
andb
jle
divl
aam
movsb
mov
test
pop
push
xchg
subl
jbe
pop
add
jb
out
leave
pusha
and
loopne
lcall
std
out
out
mov
push
test
repz
cmpsb
or
repnz
xor
mov
lock
sbb
adc
movsl
in
xor
arpl
repnz
inc
mov
push
mov
sbb
mov
fstl
dec
push
fwait
push
pushf
sub
or
mov
cmp
adc
mov
test
test
lret
je
add
mov
stos
and
add
cmpsl
xor
mov
xchg
mov
orb
sti
jecxz
out
movsb
les
push
aam
mov
sbb
stos
mov
mov
dec
mov
add
jl
scas
adc
inc
into
call
or
and
neg
mov
xchg
add
scas
mov
adc
add
scas
mov
rcll
ljmp
xor
dec
in
mov
pop
jmp
fisubrl
cmp
dec
mov
outsb
in
mov
es
mov
mov
mov
add
scas
test
inc
xor
jp
inc
push
xlat
jb
cmp
mov
lods
xor
dec
pop
movsl
insb
and
out
test
jle
stos
or
mov
sbb
outsl
ret
in
hlt
jae
imul
cltd
in
inc
jecxz
jl
std
sub
imul
inc
adc
into
aam
movl
ljmp
xchg
push
mov
jmp
leave
jmp
dec
dec
jns
sti
jge
mov
xlat
mov
in
sahf
xor
shlb
xchg
jge
ret
mov
xor
cwtl
incb
enter
and
in
setbe
outsl
mov
jo
xor
adc
imul
xchg
imul
fldl
mov
test
jecxz
test
lock
jecxz
jno
lds
push
mov
rcrl
push
push
hlt
mov
pop
jno
icebp
es
xchg
mov
and
add
ja
mov
xchg
xchg
push
pushf
pop
adc
out
out
pop
daa
cmp
jb
stc
mov
sbbl
xor
out
or
in
in
and
mov
jmp
imul
fidivl
and
fnsave
rolb
lea
rcrl
push
lods
subl
xchg
popf
fwait
sti
into
push
xchg
add
push
push
enter
mov
or
sub
jae
or
mov
into
popa
jge
adc
add
negl
aam
push
mov
sub
sbb
xchg
hlt
ljmp
fs
cs
insb
repnz
data16
or
mov
popf
fs
scas
inc
iret
add
cmc
sub
int
and
push
xlat
stos
stc
jbe
mov
sbb
add
cli
out
xchg
xor
enter
outsl
ret
xor
insl
imul
fidivrl
out
scas
outsl
stos
and
je
xchg
sub
scas
pop
push
lds
fnstsw
lahf
push
jecxz
mov
out
dec
mov
in
push
jbe
test
sbb
adc
dec
aas
inc
nop
add
or
xchg
mov
cmp
pop
xchg
mov
sub
daa
jns
mov
dec
pop
scas
jp
xor
pop
lods
mov
cmpsb
mov
cmp
or
inc
testl
pop
stos
inc
in
mov
data16
repz
daa
mov
adc
imul
xchg
cwtl
in
mov
clc
ret
fistps
add
push
lea
sub
out
add
stos
inc
jmp
mov
or
mov
sub
test
sbb
sbb
or
cwtl
insb
in
mov
and
push
subb
sarl
lds
adc
xchg
xlat
cli
lods
call
jo
xchg
es
imull
mov
fisttpl
mov
flds
fucomip
test
sbb
sbb
in
std
sub
xchg
mov
xor
sub
pop
mov
dec
sub
arpl
inc
ja
imul
inc
xchg
push
inc
shl
mov
fs
repz
pop
aas
jecxz
mov
sub
arpl
test
push
dec
into
lahf
inc
pop
inc
push
icebp
enter
leave
add
sti
jno
sbb
pop
mov
lret
fisttpll
mov
popa
push
adc
addb
pop
notb
mov
out
fidivl
shlb
mov
mov
mov
pop
gs
shll
mov
mov
outsl
ret
fdivp
hlt
in
fwait
mov
mov
rcrl
aaa
add
push
cmp
imul
xlat
mov
leave
outsl
arpl
ret
fcompl
or
jnp
cmpsb
rolb
test
cmp
sub
pop
xor
call
sub
shlb
jle
or
or
and
outsb
add
in
clc
sahf
nop
roll
lea
lcall
das
imul
loop
ljmp
test
in
cwtl
inc
lods
mov
mov
es
fwait
mov
dec
xchg
pop
or
std
inc
mov
mov
jae
sbb
cli
pop
cwtl
imul
or
dec
dec
outsb
lret
or
jo
jg
add
popl
jecxz
ss
cmp
punpckhdq
mov
testl
lea
mov
pop
in
addr16
mov
movsb
shll
loop
mov
xor
test
sbb
jbe
pop
lcall
jne
iret
jge
inc
scas
out
rcrl
jecxz
push
in
mov
pop
movsl
mov
xor
sub
add
and
fisttps
inc
and
adc
inc
out
pop
rcrb
mov
add
sub
les
cmp
or
jns
mov
loopne
js
addb
mov
outsl
aad
fimull
xor
ljmp
mov
lods
pop
mov
into
xrelease
mov
xchg
push
cld
rcll
out
and
and
mov
stos
mov
inc
and
mov
add
sbb
pop
ss
mov
sub
cmpsl
sbb
fstp
daa
inc
or
push
shll
lea
repnz
jecxz
sahf
sub
and
pop
fdivp
out
add
push
or
adc
mov
or
pop
out
jns
mov
pop
call
or
insl
aaa
push
das
test
sub
and
pusha
aaa
or
fidivs
inc
fdivl
insb
std
push
outsl
jecxz
lea
adc
lods
rcrl
inc
sbb
les
dec
fstpl
sbb
sub
lcall
loope
inc
ror
repz
pushf
sbb
adc
sub
jae
lods
pusha
stos
fiadds
mov
and
int
fdivl
loop
and
testl
and
lock
idivl
enter
xchg
call
push
pop
mov
fstps
std
mov
mov
xlat
xor
aam
cmp
xor
test
mov
pop
lods
mov
xchg
test
test
add
rcrb
jmp
mov
pop
sbb
loope
rorb
jbe
inc
cltd
data16
std
xchg
iret
arpl
fcompl
push
push
in
ja
pop
pop
mov
test
cmpsb
jne
ret
jbe
dec
movsl
adc
pop
add
arpl
add
test
imul
xor
dec
out
push
loopne
xlat
inc
or
test
shl
in
push
aad
mov
idivb
xchg
rol
sahf
add
pop
mov
push
jecxz
in
lahf
pusha
outsb
mov
xchg
outsb
add
leave
xor
mov
adc
aaa
jbe
jnp
das
stos
loope
insb
adc
add
push
sbb
sub
ja
in
test
rep
fildl
fisttps
je
mull
push
icebp
pusha
mov
adcb
jmp
test
inc
lcall
sbb
in
int
ja
adc
sbb
pop
pop
rorb
into
fisubl
scas
inc
out
fistpl
push
xor
je
cmp
push
cmpsb
lock
mov
xchg
fnstenvs
popf
xchg
mov
out
dec
sub
mov
stc
mov
add
add
mov
lock
cs
adcb
dec
leave
mov
inc
xor
xor
lods
adc
bound
mov
fbld
push
add
into
mov
add
jbe
sbb
sub
add
leave
jg
sti
sbb
shrl
and
les
dec
and
push
sbb
jb
xor
shlb
stc
xlat
pop
xchg
lods
inc
jns
js
notl
xchg
and
imul
pop
lock
rcll
and
adc
ret
mov
hlt
loope
xchg
add
xor
outsl
imul
rcrl
pushf
cmp
adc
xor
xchg
mov
adc
sbb
shlb
aaa
adc
lock
lods
add
notb
mov
cld
aad
lcall
xorb
jmp
push
shlb
mov
push
adc
rep
iret
scas
inc
es
pop
mov
and
xor
inc
xchg
mov
fs
pop
inc
daa
enter
and
mov
inc
lock
ret
pop
add
loope
mov
int3
in
cmp
es
xchg
xchg
pop
in
push
cmp
mov
xchg
jmp
cwtl
mov
loope
ficomps
in
popa
sbbl
pop
push
imul
fnstenv
js
mov
lea
adc
inc
lret
dec
insl
test
cli
rcrl
out
or
and
pusha
lods
push
cs
stos
das
sti
sub
sub
rclb
jnp
push
int3
stc
mov
pop
push
mov
out
pusha
lods
sub
and
jmp
ds
sbb
cld
lcall
in
dec
mov
loope
in
xchg
cltd
je
std
xchg
sbb
sti
sub
lods
pop
lods
sub
xchg
lods
add
popa
xlat
jb
jbe
out
dec
loopne
out
bound
cmpsl
xor
outsb
test
jg
dec
pop
aas
xchg
sbb
or
inc
data16
aaa
cmp
fwait
cmpsl
add
inc
cmc
pop
movsb
sarb
popf
mov
push
mov
test
cmp
movsb
int
and
arpl
repz
ds
pusha
shr
rorb
pop
mov
sbb
adc
push
movsl
mov
pop
popf
cmc
mov
sbb
mov
mov
int3
arpl
jecxz
push
inc
ljmp
cmp
sarl
imul
pusha
sbb
add
cmp
sbb
call
cmp
adc
jl
sbb
mov
les
lds
jmp
pop
loop
cs
dec
mov
xor
scas
adc
xchg
or
sub
adc
int3
bound
hlt
arpl
lea
pop
mov
push
nop
out
xor
cltd
xchg
pop
mov
cltd
fmull
add
xor
mov
out
decb
mov
inc
mov
mov
movsb
jns
mov
ror
cmp
shl
ret
push
lods
aad
mov
xadd
fdiv
xchg
add
inc
cwtl
pop
sub
sbb
mov
add
push
mov
sbb
mov
or
jae
mov
pop
fisttps
sbb
arpl
stos
dec
mov
ja
inc
mov
addr16
fstpl
ja
and
inc
stc
nop
je
aad
mov
div
lea
sbb
lods
jmp
lds
add
mov
cli
xchg
je
sbb
outsb
jle
dec
sbb
fsubl
mov
inc
mov
and
inc
mov
fwait
or
mov
xchg
daa
fiadds
xchg
fnstenv
mov
notl
std
mov
and
aaa
fs
out
sub
data16
mov
or
xchg
ds
xor
loope
lods
sti
jns
ljmp
adc
outsb
aad
mov
xor
insb
nop
daa
sahf
ror
enter
sbb
cmpsb
cmp
das
add
aam
adc
or
dec
sub
push
mov
aam
cs
sbb
jae
out
mov
cli
cwtl
pop
addr16
ja
cmp
insl
std
loop
mov
sub
inc
gs
in
test
bound
stos
mov
add
cmp
fstps
loope
lahf
sub
roll
jns
cmp
xchg
mov
enter
outsl
and
pop
repnz
inc
hlt
push
inc
fstpl
sbb
adc
sub
inc
lret
outsl
loop
nop
addr16
cmp
dec
aam
xor
and
in
jb
scas
fisubrs
loopne
mov
push
or
xor
dec
dec
push
lret
bound
loop
int
test
jno
xchg
push
xor
push
fisubs
mov
jns
and
xor
mov
xchg
dec
outsl
pop
push
test
int
cmpsl
pushf
cli
es
jmp
int3
ljmp
inc
push
push
pop
cwtl
mov
mov
mov
rcrb
popf
cmp
ja
xchg
or
stos
pop
decb
or
test
inc
nop
adc
mov
inc
ljmp
pop
test
out
nop
dec
stos
cmp
xor
inc
repnz
xor
push
lock
stc
push
divl
daa
mov
dec
call
add
add
int
ja
sub
fistpl
dec
cltd
cmp
mov
mov
fstpl
mov
or
aaa
or
imul
sbb
mov
xchg
mov
pop
imul
xlat
mov
cld
es
cmc
xchg
sub
add
push
loopne
idivl
adc
es
inc
arpl
xor
movsl
lcall
test
push
movsl
fistl
bound
jg
mov
or
adcb
daa
outsb
pop
push
insb
lret
dec
ljmp
aaa
into
arpl
push
movsb
arpl
cs
xchg
push
sahf
enter
or
int
adc
sub
jo
jno
js
mov
dec
mov
xor
jo
sbb
add
in
lahf
jne
inc
and
jae
stos
xor
std
cld
lods
inc
arpl
add
mov
scas
add
cld
or
cs
add
add
adc
sbb
pop
sti
pop
fs
repz
shlb
cmpb
sub
iret
sub
inc
cltd
inc
lods
popa
clc
dec
lcall
stos
add
daa
xor
lods
outsl
add
jg
mov
outsb
xchg
mov
insl
pop
cmp
adc
popa
xor
inc
or
cmp
add
dec
andb
aam
and
repnz
mov
arpl
pop
stc
fidivrl
ss
stc
cmpsl
push
push
icebp
inc
enter
sarb
xchg
ret
dec
loopne
cmp
rcl
sub
add
mov
sub
cwtl
or
das
mov
nop
inc
push
pop
icebp
cmpb
dec
mov
shrl
jb
add
inc
push
xchg
adcb
fistl
mov
sbb
mov
mov
xorb
xchg
sub
imul
lcall
loope
mov
push
dec
stc
insl
or
push
aas
sub
xchg
mov
inc
in
arpl
data16
arpl
je
stos
xor
in
pop
inc
adc
xor
sbb
cmp
dec
or
jg
mov
scas
idivb
cmp
and
jno
loope
cwtl
adc
loopne
add
mov
cmpsb
and
rol
jmp
bound
xchg
sub
add
in
cli
jne
rcrb
ret
and
orb
and
xchg
mov
stos
lcall
ret
outsl
nop
icebp
and
sub
mov
push
ss
jg
add
xchg
or
sahf
mull
cmpsw
cs
mov
lods
mov
xor
dec
pop
jns
ss
mov
pop
push
test
movsl
adc
fistl
xchg
and
pushf
mov
fistl
mov
int3
arpl
sbb
vpmuludq
sbb
cwtl
mov
or
jns
mov
xchg
scas
aaa
jecxz
pop
pop
sub
lds
sbb
sub
inc
push
call
mov
roll
clc
mov
cmpsb
sub
mov
sub
leave
aad
in
mov
sbb
bound
iret
push
mov
stos
and
jp
dec
lret
pop
sub
pusha
sbb
scas
mov
pop
add
sub
es
rol
cmp
cmp
jl
or
dec
and
adcb
jae
xchg
hlt
sbb
test
push
call
jns
repnz
adc
test
dec
mov
ss
inc
ffree
aaa
sub
jne
inc
js
fidivs
jae
mov
data16
fcoml
ret
nop
in
push
jno
jae
jbe
data16
xchg
fldpi
sub
das
xor
cmpsl
ret
shll
dec
or
stc
scas
into
mov
lods
cmp
push
add
leave
mov
add
pop
lock
test
jmp
fdivrs
add
jns
aas
mov
insb
outsl
ret
jnp
out
insl
adc
xor
ret
fmulp
aas
shrb
jmp
xor
rclb
and
inc
je
dec
shll
cmpsb
dec
imul
test
ss
add
xor
sarl
cltd
out
dec
cmpsb
sbb
gs
xor
mov
push
add
in
aas
push
cvtdq2ps
jg
add
xor
mov
jg
push
dec
add
call
fstpt
add
fcomps
adc
push
sbb
insl
ss
std
pop
mov
imul
lds
stc
jns
xlat
sub
fs
adcb
push
fdivs
xchg
jb
xchg
mov
and
outsl
or
adc
cmp
hlt
xor
mov
xchg
mov
cwtl
gs
inc
test
mov
cmp
sub
test
inc
sbb
leave
lea
or
fbstp
je
dec
mov
sbbl
sub
mov
std
cmp
or
cmp
xor
mov
data16
dec
test
cmc
xchg
fsubr
mov
and
ret
xchg
out
outsl
lods
js
adc
sub
add
lock
pop
ffreep
stos
mov
sti
leave
in
xchg
xchg
add
pop
lods
push
add
jg
mov
stc
pop
lock
inc
push
pusha
in
xor
test
mov
add
pop
aas
push
ds
gs
jl
jmp
int3
or
mov
xchg
ja
gs
inc
ret
outsl
xchg
mov
jae
push
aam
aam
das
or
pop
dec
jg
jg
cmp
loop
adc
aam
lods
xor
jno
cli
movsl
sbb
mov
lcall
ss
hlt
sbb
fisttps
pop
xor
jmp
ss
push
sub
push
out
stc
hlt
outsb
push
jecxz
loopne
jnp
fs
lea
stos
sbb
push
popf
mov
outsl
popf
lds
sub
imul
push
mov
push
adc
es
fs
sbb
stos
jecxz
xor
in
ljmp
and
testb
xor
jmp
das
mov
popf
jg
mov
cmpsl
sbb
mov
dec
sub
ret
nop
movsb
mov
adc
push
fwait
fs
adc
int
pop
sub
in
jbe
lret
loop
adc
fmull
and
popa
xchg
aam
or
scas
pop
cmc
out
lahf
fisubl
movsl
test
mov
adc
outsl
sahf
out
dec
pop
or
es
pop
cmp
mov
cmp
mov
lock
cmpsl
sub
in
test
cmpsb
fsubrl
lcall
push
fists
sub
arpl
sbb
ss
shrl
jb
in
xor
lods
outsl
insb
jne
cmpsl
movsl
cmpsb
in
pop
enter
lret
push
mov
pop
aaa
pop
mov
xchg
dec
mul
mov
pop
dec
add
jge
call
ja
mov
add
dec
mov
xchg
sub
and
sbb
andb
js
cmp
add
loope
cpuid
cmp
push
scas
push
inc
rol
sbb
outsb
int
int
addr16
lods
inc
test
adc
loop
sub
cmp
inc
mov
dec
mov
jge
scas
sahf
pusha
ret
mov
loope
in
andl
shll
pop
add
sub
add
out
cli
test
sub
mull
mov
jmp
and
out
mov
cmc
mov
jns
add
adcl
mov
fsubrs
mov
jo
and
scas
xor
gs
insb
pop
daa
ret
cli
or
leave
nop
jo
xchg
ljmp
xor
mov
mov
imul
cli
pop
or
das
les
push
test
int
pop
fsubrl
mov
or
add
xchg
jp
add
popl
cld
in
jp
cli
xchg
inc
lahf
dec
dec
loopne
sbb
cli
and
adc
adc
in
js
adc
xchg
mov
icebp
stos
fisttpll
push
sbb
jnp
cmp
pop
lcall
bound
ja
dec
sbb
jnp
xchg
sarb
mulb
pop
fdivl
out
scas
leave
in
push
cltd
jbe
clc
ret
mov
out
outsb
pop
push
aas
nop
jbe
xchg
aad
inc
adc
cmc
mov
inc
fnstcw
pop
fstps
call
xchg
imul
sub
cmpsb
inc
add
jecxz
mov
ja
jge
pop
testb
pop
and
xorb
xor
add
mov
jge
xor
fisttpll
test
setne
test
frstor
xchg
ja
mov
arpl
into
mov
pop
pop
lea
jbe
sbb
rorl
xor
mov
pop
fsub
outsl
rcll
jecxz
scas
bound
push
aam
test
sbb
xchg
dec
jp
push
mov
hlt
ds
add
hlt
cmp
lds
xchg
out
sub
pop
ret
xor
bound
pop
push
rorb
and
pop
adc
icebp
push
mov
push
push
sbb
mov
lock
cmpsl
add
or
test
fnsave
mov
adcb
dec
xchg
clc
cmpsl
imull
jl
loope
xchg
in
or
add
lds
in
iret
xor
popa
mov
aas
sbb
inc
leave
pusha
add
in
movsb
and
mov
or
xchg
mov
imul
bound
rol
movsl
dec
hlt
dec
out
push
mov
rcr
mov
adc
xor
add
mov
cmp
lret
push
repnz
in
int
ficompl
mov
adc
stos
xchg
std
sbb
ret
adc
pop
hlt
jo
sub
pop
lock
pop
mov
ds
out
mov
mov
cli
xchg
clc
into
into
enter
je
jne
pop
cmpsl
std
xlat
repz
movsl
lcall
xchg
mov
ret
addb
add
nop
sbb
stos
inc
fdivl
mov
test
insb
add
push
flds
mov
lret
data16
fnstsw
scas
mov
xor
adc
mov
movsb
inc
movsb
or
sub
rclb
adc
mov
orb
sub
sub
mov
mov
je
enter
sub
and
inc
or
pop
fistpl
int3
arpl
in
subl
sub
adcb
mov
aaa
pop
inc
xor
xor
dec
cwtl
push
roll
and
arpl
xor
and
ret
mov
js
jp
out
pop
adc
push
subl
lods
and
ret
fldl2t
fsubr
dec
dec
inc
orb
imull
sbb
daa
and
rorl
add
dec
lcall
adc
mov
pop
xor
push
cmp
movsb
and
pop
incb
outsb
stc
adc
add
sbb
dec
leave
popa
shr
div
rorb
stos
vpshuflw
add
sub
lea
cmp
shlb
and
jbe
lods
mov
cmp
jae
pop
ret
fisttpll
repnz
mov
movsb
jecxz
mov
js
ret
xchg
fcmovnbe
mov
cld
cmp
mov
push
in
popa
mov
jecxz
sub
mov
mov
adc
arpl
outsb
sbb
out
jmp
xchg
or
pop
movsb
stos
mov
outsl
repnz
jnp
sti
cmp
mov
push
mov
jmp
lret
fsubrs
cmc
popa
add
imul
push
mov
mov
inc
mov
decb
or
add
call
das
es
pushf
lds
les
cld
stos
imul
add
icebp
sahf
aad
adc
mov
lods
jo
jmp
lret
sub
sub
psadbw
imulb
add
xor
addr16
mov
jbe
jp
push
add
sub
std
xchg
mov
aaa
jb
inc
adc
pop
mov
fdivs
std
jmp
scas
xor
push
insl
pop
inc
mov
adc
sti
fistps
lret
push
lret
ljmp
cltd
rcrb
push
mov
call
loopne
pop
rcl
mov
fnstenv
pusha
imul
inc
jns
add
cmpsl
cltd
test
bnd
mov
add
xor
dec
fmuls
jnp
mov
mov
push
xor
adc
fnstenv
add
adc
aad
loope
rorb
mov
cmp
adc
fadd
fisttps
adc
and
nop
xchg
ss
sbb
xor
sub
xor
mov
aam
dec
in
or
xor
jp
int3
push
mov
pop
std
dec
repz
lahf
fidivl
and
inc
repz
stc
cli
push
cmpsb
ds
lret
jl
jbe
aaa
iret
sbb
loope
in
das
xchg
fwait
cwtl
gs
test
mov
push
mov
or
data16
dec
inc
dec
jo
push
iret
ss
and
lret
les
in
and
je
cwtl
sbb
jl
int
shl
inc
scas
or
bound
xchg
and
mov
pushf
jl
inc
pop
hlt
mov
sbb
sti
xchg
xchg
add
and
cmp
cli
cmc
push
mov
dec
loopne
jge
mov
adc
ljmp
ljmp
and
cwtl
stos
xchg
add
clc
in
jb
xor
scas
mov
stc
test
xlat
repz
sbb
rol
inc
leave
bound
pop
pushf
sbbb
mov
xchg
scas
push
add
cmp
sbb
adcb
add
pop
xchg
add
sub
xor
adc
loopne
push
sbbb
jg
xor
mov
lret
or
fadd
ds
mov
test
mov
mov
adcb
push
sarb
orb
jo
mov
fcmovne
pop
loope
inc
push
sti
mov
cmpsb
shll
cmp
pop
jp
test
cmpsl
cmpsl
mov
jbe
sbbl
cmp
and
mov
aad
sub
push
dec
xlat
dec
mov
jnp
loop
lahf
lcall
cltd
jl
pop
movsb
xchg
imul
add
scas
enter
sbb
outsl
pop
test
cmpb
cli
mov
and
sbb
mov
iret
gs
in
loop
rclb
insb
insb
sahf
pop
sbb
daa
and
cld
inc
int
jg
sub
mov
jg
data16
cmp
rcrl
loopne
xor
add
mov
mov
dec
mov
outsb
loope
mov
lock
sub
mov
adc
mov
pusha
dec
cmp
sub
mov
fmul
pop
jae
lock
pop
dec
pop
rolb
imul
push
in
mov
mov
adc
dec
xchg
and
call
lahf
sub
and
sbb
ja
mov
cmpsb
jo
mov
or
pop
mov
sahf
subl
scas
int3
mov
sbb
popf
xchg
imul
aaa
pop
dec
pop
leave
out
les
inc
ret
mov
repnz
gs
jae
add
jo,pt
dec
xchg
loop
jne
stc
jecxz
shrl
push
fcmovnbe
mov
push
in
push
clc
pop
add
xchg
mov
adc
enter
adc
icebp
call
and
outsb
sbb
mov
es
les
add
dec
shl
inc
fwait
lcall
loope
adc
xchg
adc
cld
cmp
sub
sbb
push
lret
mov
loopne
lret
or
repz
insl
shrb
cmp
out
outsb
repz
push
mov
or
rcl
adc
loopne
out
out
xchg
jns
mov
cli
mov
jle
mov
jns
mov
inc
sbb
xor
hlt
outsl
in
ss
fldl
in
sti
rclb
jo
jp
mov
mov
inc
ficoml
gs
sub
into
mov
int
loop
rcl
mov
test
add
jae
or
lock
leave
or
mov
pcmpeqd
sbb
lea
testl
xchg
rcrb
outsb
inc
and
jno
add
mov
pop
mov
adc
inc
js
xlat
mov
xorl
pushf
pop
sbb
imul
inc
push
pushf
inc
fcmovne
or
stc
cs
pop
fstpl
adc
fmulp
mov
jge
dec
scas
mov
dec
icebp
pop
pop
cld
jle
push
sub
fistpll
dec
adc
push
arpl
gs
pop
dec
xchg
push
jecxz
dec
pop
lods
hlt
adc
cld
lcall
in
xchg
int
test
shr
pop
stc
mov
push
sub
loope
push
xor
dec
pushw
insl
push
call
ficomps
jl
push
pop
xchg
jl
stos
in
xor
mov
scas
adc
dec
adcl
pusha
cs
pop
add
lods
push
scas
aaa
cs
rcrb
mov
bound
rorb
outsb
mov
push
mov
ljmp
push
or
or
in
rcll
or
and
iret
imul
jmp
jp
push
lods
ja
push
cmpsl
or
sub
add
dec
xor
sbb
sub
neg
mov
mov
dec
inc
iret
popa
mov
mov
and
cmp
out
push
leave
and
mov
add
iret
cmpsb
out
sub
mov
aam
icebp
fnstcw
add
push
or
sti
mov
lea
jnp
jns
insb
in
mov
cmp
inc
or
cwtl
or
rcrl
mov
xorb
jl
add
jmp
mov
dec
stc
mov
xchg
add
frstor
cmp
and
sbb
stc
cmp
pop
push
int
pavgw
lea
call
and
mov
popa
ljmp
adcl
mov
loopne
inc
pop
push
loope
push
mov
or
call
mov
fidivs
pop
mov
inc
jle
sbb
xor
repnz
inc
repz
out
and
cwtl
add
shlb
adc
movsb
mov
mov
dec
adc
fldt
enter
repnz
lds
outsl
hlt
cmpsb
add
loope
push
sbb
repnz
cs
loop
idivb
jl
or
jno
test
popa
sub
mov
lret
out
pop
dec
mov
movsb
inc
cld
pop
sub
jns
mov
add
fidivrs
addr16
lahf
imul
mov
or
or
mov
or
cmpsb
rcrb
add
jns
call
push
xchg
das
xlat
daa
repnz
or
loop
imul
xchg
in
mov
push
jg
sti
popf
int3
sbb
jl
jmp
mov
mov
pop
repnz
rorl
hlt
test
add
mov
sbb
push
and
jp
stc
mov
lods
lea
mov
mov
inc
sub
push
mov
jge
scas
add
shl
test
sub
lods
dec
int
inc
cmp
push
push
or
cmp
nop
ja
adc
loop
mov
sbb
mov
sub
mov
pop
scas
push
add
adc
movsb
and
push
lds
popf
xchg
sbb
ret
push
push
fdivs
das
popf
sbb
inc
push
xor
inc
sub
dec
lcall
mov
loope
daa
add
push
inc
or
adc
adc
std
and
and
pop
sub
dec
scas
jnp
mov
xor
push
icebp
xor
insl
add
sbb
pop
add
lods
xchg
add
add
test
mov
imul
out
add
pop
bswap
xchg
adc
add
jno
xchg
push
cmp
dec
cld
xchg
cmp
js
not
movsl
in
sbb
and
scas
cmp
lahf
sub
sbb
jo
sbb
mov
repnz
fstpt
cmp
fistps
cmc
rolb
jmp
cmp
rcrb
xor
cmp
mov
jecxz
pop
aas
and
outsl
xorb
pop
dec
cmp
pop
mov
leave
jl
dec
cmp
call
les
fwait
xchg
in
mov
daa
testl
cmp
xchg
sub
push
scas
shll
mov
das
outsl
inc
inc
push
test
push
adc
sbb
inc
fwait
lods
inc
dec
xchg
adc
bound
add
lds
mov
out
nop
hlt
sysexit
je
adc
dec
jo
test
aaa
call
pop
jnp
pop
lods
inc
add
sbb
mov
insl
pop
cmp
mov
and
movsl
sbb
mov
inc
arpl
testl
fisttpl
sbb
cli
mov
imul
xor
ret
xor
mov
fucomi
test
shl
cwtl
sub
and
mov
imul
out
fldcw
out
addr16
dec
scas
xor
shrb
aaa
xor
out
shrl
xlat
icebp
and
push
in
insl
ja
cmp
pcmpeqb
inc
pop
test
cmp
xor
xor
iret
push
mov
lret
mov
call
mov
icebp
scas
fdivl
lret
shrb
or
cmp
shrl
inc
lea
popa
cmc
mov
es
rcll
xchg
inc
movsl
sti
pop
jne
push
fbstp
in
fsubs
std
xchg
test
arpl
loope
xchg
out
popa
adc
cwtl
push
sbb
mov
in
cmp
adc
lds
int
data16
out
push
push
insl
xchg
std
scas
mov
mov
and
call
push
lods
jecxz
push
incl
sub
push
fdiv
mov
std
jle
das
fs
inc
adc
in
insl
adc
xor
mov
cs
push
inc
stos
sbb
dec
das
out
test
push
insl
icebp
jne
pop
sahf
ret
mov
jb
sub
push
in
mov
ret
adc
or
les
je
arpl
mov
sahf
stos
repnz
and
shll
add
insb
pusha
or
out
clc
pop
lcall
sub
xchg
pop
lds
jns
mov
mov
jns
xor
jb
inc
cltd
movb
mov
lret
hlt
inc
adc
lea
popa
sub
stos
loopne,pt
dec
ljmp
les
repnz
gs
mov
push
xor
in
mov
pusha
xchg
aas
cltd
lock
lret
and
prefetch
push
dec
mov
sub
xchg
and
jecxz
xlat
add
pop
push
clc
jecxz
xor
sub
mov
popf
push
inc
sbb
xchg
jge
movsb
pop
lods
pop
cli
or
and
repnz
push
or
lcall
repnz
loop
lahf
adc
icebp
out
insl
les
stos
mov
and
mov
xor
push
icebp
push
fwait
mov
push
pop
xor
push
lods
ljmp
xchg
pop
xor
pop
dec
mov
xchg
insl
dec
rol
movsb
adc
shrb
jge
fs
cli
sahf
and
add
inc
rorb
mov
cmp
or
rcrl
push
add
sarl
out
lret
mov
dec
shl
push
mov
dec
xlat
popa
jo
scas
ret
ds
jne
pop
mov
or
add
sbb
push
inc
les
jle
fwait
pop
fldcw
mov
imul
sbb
lret
sti
cmp
sub
push
cwtl
outsb
cmp
aad
dec
test
cli
push
push
cmpsb
lahf
mov
inc
lea
xor
jns
cltd
mov
test
int
dec
push
test
lcall
inc
cmpsb
xor
jg
mov
mov
cli
push
gs
aaa
enter
mov
ds
jne
or
jnp
pop
pop
fisubrl
leave
icebp
jecxz
or
popa
and
xchg
shll
or
scas
push
jb
xchg
add
jmp
and
and
cmp
cmpsb
xlat
mov
scas
cld
inc
movsl
out
jmp
push
cmp
sbb
add
cwtl
lahf
push
or
fldpi
pushf
xor
sbb
mov
and
push
fcmove
ficoml
cld
scas
popa
jbe
shl
mov
cs
aas
mov
cs
sbb
sbb
ret
jmp
data16
push
jno
sub
mov
dec
dec
out
jno
imull
insl
sbb
sti
xchg
stc
aas
sub
jl
xor
push
addr16
or
mov
push
and
mov
test
cltd
rcrl
push
lds
inc
mov
inc
mov
pop
mov
dec
mov
dec
je
adc
xor
mov
jmp
popa
mov
jne
mov
ljmpw
ss
push
sahf
push
out
jns
fwait
and
stos
mov
fcomps
jo
movb
outsl
sbb
mov
dec
lds
and
jbe
pop
cmpsb
cmp
or
cli
and
jo
cmpsl
mov
dec
mov
fwait
daa
pop
dec
mov
daa
xchg
in
sub
push
mov
lods
fistpl
lea
out
pop
aam
in
std
jp
popa
sbb
push
cltd
and
call
lahf
xchg
pusha
cmc
push
mov
data16
xchg
push
jne
and
mov
add
ss
pop
push
sbb
mov
xchg
xchg
sub
mov
shr
push
cs
push
in
inc
sub
lods
pop
fs
scas
cltd
jo
lret
iret
xchg
sub
mov
sub
mov
shr
xor
pop
inc
stos
ss
jne
mov
pop
jnp
fisttps
aaa
jl
jge
xchg
and
jecxz
push
out
or
outsb
in
jmp
fisttps
pop
div
mov
daa
outsl
mov
pop
jne
jg
xlat
xchg
in
in
and
subl
ds
out
pop
jmp
xchg
divl
aam
sbb
mov
dec
ljmp
inc
pop
aaa
jl
and
pop
and
daa
adc
cmpsl
and
ljmp
incb
and
scas
shll
lds
mov
test
jnp
nop
inc
pop
mov
push
loopne
movsb
iret
cltd
mov
aaa
jbe
mov
insl
jae
adc
mov
mov
jo
push
stos
les
and
xor
sbb
adc
cmc
pop
fucom
pop
jecxz
dec
mov
push
outsb
mov
jle
mov
in
and
and
cli
inc
cli
scas
fstpl
ficoml
cld
lcall
push
inc
fdivrp
jge
xor
inc
or
inc
es
xor
cmp
mov
gs
xchg
sub
jp
repz
lahf
data16
push
jg
testl
xchg
rolb
sub
data16
mov
xor
dec
scas
and
inc
cmpsl
movb
sbb
dec
lods
ljmp
call
add
sbb
and
pop
mov
arpl
sbb
or
cmp
jge,pt
xchg
jne
nop
jmp
fstl
lods
out
shll
add
pop
mov
andl
mov
lock
notb
xchg
ds
repnz
xchg
cs
rcll
pop
lods
sub
loopne
adc
ja
jae
mov
jne
xchg
in
jecxz
int
cmp
and
inc
xlat
jl
and
and
inc
js
or
adc
sub
leave
xchg
fidivs
loopne
lcall
and
imul
xchg
jge
sub
pop
shr
or
push
movsl
sub
mov
sbb
test
repz
hlt
ret
cmpsl
xor
dec
xor
mov
inc
negb
or
lret
sub
sub
xlat
sub
mov
scas
and
into
cmp
stos
xchg
sub
leave
mov
jb
push
push
sub
ljmp
movsl
mov
cmp
jp
sahf
std
xchg
aam
jns
mov
repnz
scas
sbb
mov
bound
ds
push
and
push
xchg
mov
cmp
mov
or
ljmp
push
cmp
cmpsl
ss
jecxz
pop
icebp
jl
add
aad
lahf
and
addr16
es
out
xchg
outsb
adc
popf
sbb
and
cmp
lods
mov
test
push
inc
test
cmp
push
dec
mov
sbb
pushf
inc
sti
dec
std
lods
push
inc
cs
mov
sub
scas
decb
fisubl
aam
push
or
movsl
and
and
pop
or
cs
pop
movsl
or
int
push
fwait
arpl
test
lods
or
mov
fsubs
jo
insl
mov
cmpsb
cld
jae
scas
dec
lret
xor
pop
in
mov
pop
mov
lds
aaa
orl
call
in
xchg
out
add
xor
sub
imul
cmpsb
pop
mov
or
jge
mov
mov
xchg
push
ds
add
mov
out
adc
aaa
outsb
cs
xchg
scas
mov
jae
sub
inc
lds
jb
imul
lds
mov
inc
in
data16
xor
leave
pop
push
lcall
ret
bound
fisubrl
ret
jns
inc
sbb
pusha
lret
mov
shll
pop
sbb
or
xor
sub
xlat
repz
pop
subl
dec
imul
lret
mov
mov
fistpll
les
ret
cltd
rcrl
mov
mov
aaa
into
push
loop
mov
jae
rcrb
lods
adc
or
sub
loope
cltd
das
mov
dec
mov
jg
mov
sbb
mov
fistl
lea
adc
aaa
adc
push
gs
adc
push
clc
pop
mov
sahf
add
out
das
mov
add
xor
sahf
xor
addr16
or
lahf
lods
mov
loope
orb
push
push
push
xchg
lock
mov
ret
js
test
push
pop
popa
and
imul
fcoms
sbbb
pop
dec
cmpsb
fiadds
popf
mov
pop
push
movsl
in
add
mov
je
jmp
dec
lock
sbb
mov
stos
add
inc
dec
mov
xor
mov
sub
pop
movsb
repnz
and
add
jmp
jb
mov
in
por
xor
xchg
mov
add
mov
enter
popa
inc
fistl
pushf
int
dec
mov
jns
scas
pop
or
cmpsl
jp
mov
mul
ss
push
scas
pop
inc
xchg
cld
xchg
lock
add
or
jp,pt
orb
mov
mov
imul
stos
sbb
lret
dec
xchg
std
push
xor
dec
push
mov
sub
jp
dec
jp
pop
sar
dec
mov
pop
insl
mov
sahf
sbb
jl
dec
mov
dec
data16
movsb
push
push
ucomiss
add
cs
xchg
cwtl
popa
lahf
sahf
sub
lret
xor
je
out
popl
xorb
mov
movsl
ja
sub
jb
pushf
push
lret
mov
inc
cld
movsl
ss
adc
or
mov
movsl
jg
lds
fwait
mov
push
mov
mov
push
call
pop
cmpsb
repnz
pop
sahf
addl
push
push
sub
lahf
ja
shl
mov
sbb
rcrb
cmpl
fldt
jmp
mov
sbb
daa
repnz
fs
pop
jge
hlt
fildll
rcl
in
mov
cltd
ljmp
mov
iret
xor
popa
xor
out
push
call
aam
outsl
push
fcoms
je
and
adc
xor
je
pop
into
out
es
push
movl
loop
mov
mov
mov
loop
in
imul
push
add
xlat
cmc
notb
call
jns
cmpsl
sbb
push
mov
pop
xchg
loopne
jp
push
ja
mov
inc
sub
xchg
adc
adc
inc
xchg
pop
and
lret
ss
cmc
push
add
dec
jb
psubsb
loope
fisttpll
fsubrl
aad
or
xor
xchg
sub
dec
pusha
xor
xor
std
push
push
andl
call
pop
aas
nop
jo
inc
cli
push
out
jp
nop
mov
mov
or
add
out
adc
xor
adc
pop
cs
adc
dec
rcr
xor
mov
je
mov
ror
jo
hlt
clc
dec
add
adc
gs
sbb
push
leave
movsb
mov
or
rcll
push
and
fnstcw
aad
or
cmp
push
xorb
scas
inc
sbb
lret
bound
in
es
ss
jmp
fisubs
repnz
test
cltd
push
cs
mov
sbb
outsb
lret
jae
stc
nop
jmp
xchg
repnz
movsl
dec
push
outsb
loope
rcrl
xlat
lret
pop
add
out
pop
xchg
test
jnp
jmp
addr16
jo
inc
leave
hlt
cli
data16
decl
out
cld
ror
insl
adc
js
jmp
jmp
pusha
adc
jo
push
imul
pop
jo
xchg
movsl
cmp
and
ret
pop
pushf
add
imul
in
addl
xchg
sbb
into
jp
ja
fcmovnbe
imul
xchg
cwtl
imul
mov
xchg
popf
sbb
lret
roll
fwait
xchg
jbe
pop
test
fwait
adc
data16
cmp
cmp
arpl
push
shl
or
mov
xchg
and
xchg
mov
push
pop
scas
and
dec
rclb
xor
shlb
dec
or
jae
and
cmpsl
mov
out
stos
push
sbb
icebp
adc
and
mov
push
adc
jno
xor
shl
sbb
push
push
decb
push
push
jmp
fs
push
jmp
push
adc
ret
mov
jp
inc
jo
lahf
cmp
clc
adc
xor
std
inc
inc
lods
or
and
inc
iret
xor
cmp
push
xlat
nop
mulb
fadds
lods
and
jb
lods
xchg
sub
stc
inc
adc
mov
add
jb
das
pop
xor
or
cmpsb
push
rorl
push
lods
sbb
out
sub
pop
arpl
pop
mov
ja
stos
mov
add
shl
and
out
xor
daa
mov
adc
enter
out
and
push
popa
in
jae
out
push
xchg
adc
jmp
cli
lods
mov
sbb
mov
stos
jbe
aam
pushf
jae
mov
fnstcw
mov
cmp
mov
jle
ret
dec
fidivrs
int
and
shrb
daa
inc
aam
ja
filds
adc
mov
lock
js
imul
or
add
daa
mov
insb
test
mov
loop
pop
mov
or
xchg
daa
fucomi
push
es
mov
inc
jle
dec
mov
into
jne
sbb
and
adc
and
mov
xor
stos
inc
addl
inc
popf
pushf
mov
xchg
out
leave
pop
testl
gs
adc
movsl
gs
enter
push
xor
aad
scas
add
dec
mov
in
int3
movsb
scas
add
rcrb
pop
and
fnstsw
ja
mov
call
xor
les
xor
ret
test
stos
int3
pop
mov
sbb
inc
ret
inc
out
in
pop
mov
or
push
in
lcall
sbb
jne
push
add
jno
mov
fisubl
mov
pop
movsbl
sbb
xor
sub
dec
inc
lods
dec
mov
cmpsl
out
jno
icebp
and
test
test
addl
sbb
inc
dec
stos
inc
jnp
mov
aaa
es
movsb
inc
xchg
pop
or
fdivrs
bound
or
mov
aas
mov
fildll
int3
xor
popa
in
stos
inc
cmp
push
ja
iret
aam
pop
push
jo
subl
cltd
scas
sbb
imul
fisubl
in
inc
ljmp
cld
xchg
or
jle
dec
sub
test
aas
jecxz
push
adc
fidivl
lahf
rorl
jae
jb
ret
jae
cli
xchg
imul
stos
mov
jnp
xchg
mov
sbb
ljmp
js
jl
inc
cltd
int
lret
hlt
xor
cs
push
rorb
call
jnp
jle
mov
lcall
and
pop
adc
scas
gs
inc
pop
mov
mov
clc
mov
std
outsb
int3
mov
enter
outsb
shlb
mov
fstp
and
fmull
or
push
sub
inc
es
incl
and
jnp
ljmp
inc
ret
scas
and
fsubr
data16
icebp
aaa
cli
stos
mov
sub
sahf
jno
enter
popa
in
iret
sbb
sbb
jno
and
push
push
xchg
fwait
mov
jp
xchg
in
xchg
sub
in
mov
out
popa
and
and
pop
add
scas
push
xchg
movsbl
mov
mov
mov
pop
jne
mov
insl
push
shrb
jno
adc
dec
mov
xor
cmp
mov
xor
mov
ds
mov
cli
inc
nop
sbb
hlt
sbb
test
push
inc
popf
adc
and
jae
push
or
xor
mov
mov
adc
sahf
mov
inc
or
add
mov
scas
xchg
loope
or
jp
dec
mov
enter
testb
sub
sbb
add
adc
jne
stos
push
in
jl
add
add
jbe
sti
push
jno
bound
mov
add
mov
adc
mov
sahf
rcrb
daa
into
fsts
arpl
pop
stos
xor
not
xchg
add
dec
jmp
xor
jmp
push
lret
and
insl
mov
dec
mov
or
jb
outsb
aas
into
push
push
leave
iret
and
sub
aad
adc
std
loopne
xor
rorl
push
push
push
sbbl
or
add
mov
pavgw
sbb
popf
decb
mov
xchg
stos
jno
push
in
xchg
out
int
sub
mov
mov
les
mov
stc
cmp
jo
test
ljmp
cld
sbb
xchg
pop
or
imul
sub
add
add
sub
jecxz
into
push
cmpsl
jbe
push
pop
pop
mov
ds
lcall
xor
aam
out
out
mov
add
jp
adc
fwait
pop
push
pop
aaa
inc
lods
push
sub
in
test
add
xchg
xlat
push
add
mov
xor
add
popf
push
ja
or
aam
out
les
mov
or
jo
adc
not
push
xor
push
lock
fwait
sti
or
mov
out
xor
mov
dec
in
std
bound
and
inc
popf
sbb
jg
lds
call
push
cltd
adc
outsb
das
jle
scas
xchg
dec
ljmp
dec
jg
fldt
jg
lock
je
and
andb
push
add
and
and
xchg
insb
dec
push
push
aas
dec
loop
mov
cs
je
push
adc
jge
scas
xor
sarb
push
loope
adc
aad
js
shl
je
rorb
sbb
loop
fistps
push
popf
lods
and
stc
adc
push
fisubrs
sbb
mov
int
sub
lret
cmp
int3
dec
cmc
pop
loope
mov
icebp
xchg
inc
fdiv
mov
bound
cmpb
mov
cli
pushf
mov
jns
mov
and
mov
jmp
iret
popf
jbe
dec
xchg
mov
jo
and
pop
xchg
stc
cmp
push
inc
jbe
fcomps
and
sbb
ds
pop
jo
push
movsl
pop
xchg
add
repz
test
push
mov
jnp
add
pop
imul
mov
adc
in
mov
fucompp
dec
adc
jo
dec
cmc
dec
repz
dec
xchg
mov
ja
add
movsl
mov
sbb
pop
dec
mov
and
cli
test
adc
fildl
lods
and
pop
push
dec
pop
mov
mov
sub
mov
gs
loop
mov
ret
or
fldcw
mov
call
scas
inc
test
mov
and
fsts
dec
jecxz
or
in
push
mul
dec
outsl
jb
xor
subb
outsl
fs
ja
xchg
js
aas
mov
add
fsqrt
or
ljmp
adc
inc
lods
int
dec
mov
imul
xchg
mov
rclb
sti
jbe
repnz
jns
leave
les
jle
in
jae
testb
and
xor
imul
and
test
icebp
leave
xchg
negb
mov
xchg
aam
clts
mov
inc
push
xchg
sub
or
mov
sbb
xor
add
jb
scas
inc
xchg
pop
push
stc
nop
mov
jb
notb
shll
movsb
or
cld
jl
push
sub
orl
enter
sub
lods
push
lods
xchg
iret
adc
jnp
pop
ja
out
mov
insl
loopne
mov
jnp
movsb
test
cmc
aam
cmpsl
mov
fsubs
pop
pop
fs
jbe
push
xchg
or
add
lea
pusha
xor
xchg
movsb
jge
xlat
jae
mov
mov
or
aaa
dec
push
jbe
dec
push
push
ljmp
dec
loop
out
subl
or
pop
lock
loop
xchg
adc
repz
es
insb
add
mov
sbb
aaa
xchg
sub
int
roll
pop
test
test
add
pop
or
fimull
mov
mov
mov
push
jbe
push
mov
and
std
adc
sti
mov
outsb
and
pop
adc
cmc
push
xor
add
lret
mov
mov
ret
sbb
pop
xor
data16
pop
jmp
mov
mov
push
outsl
inc
inc
fisubrs
dec
gs
int
xor
dec
pop
fcoms
xchg
jne
in
mov
cli
ss
out
pop
stc
dec
mov
mov
lahf
xchg
sbb
jae
jnp
sbbl
repz
sub
dec
xor
rcrl
out
mov
inc
push
mov
mov
insb
push
icebp
pop
repnz
adc
fidivrl
xor
aam
call
stos
xchg
xchg
jle
in
dec
pop
add
hlt
dec
cmp
ror
pusha
mov
test
xchg
adcb
lods
subb
jno
jg
shlb
xlat
adc
call
loopne
mov
std
clc
push
inc
into
iret
jb
aaa
adc
lret
jmp
arpl
lea
dec
and
test
inc
and
jp
sbb
xlat
data16
in
repnz
cli
dec
pop
and
mov
jmp
mov
xchg
push
jnp
jmp
fimuls
jmp
stc
sbb
jno
xor
dec
sbb
clc
dec
icebp
out
stos
outsb
jg
add
es
xchg
mov
inc
cmc
je
ret
das
sub
iret
fdiv
lods
test
adc
mov
and
repz
repz
lock
inc
test
push
hlt
out
aam
test
inc
mov
arpl
fidivs
bound
icebp
mov
fnstenv
push
decb
xchg
xchg
shlb
sbb
jle
je
dec
sahf
decb
arpl
mov
mov
or
cmp
mov
in
sub
call
dec
dec
add
pop
fldcw
xlat
xchg
pop
mov
pushl
or
std
in
or
jle
loopne
xchg
lcall
imulb
in
cmp
sbb
mov
out
insb
and
xor
jno
pop
add
xchg
and
testl
adcb
stos
xorb
xchg
fdivr
cld
test
roll
add
cmp
pop
push
scas
inc
in
das
mov
sbb
lret
or
and
mov
adc
cmp
cmpsl
rcr
jbe
cmpsl
mov
adcl
setle
pop
xchg
add
js
push
dec
sti
out
cmp
xlat
sub
in
inc
mov
data16
or
in
in
stos
jle
in
xor
add
mov
jecxz
clc
nop
push
out
subl
popa
cli
xchg
mov
pop
xor
pop
ret
sub
mov
stos
xchg
jno
xchg
shll
xor
in
rcrl
lea
dec
dec
and
mov
fwait
mov
lods
xchg
fwait
test
mov
scas
mov
inc
jno
add
test
mov
shlb
lea
xchg
and
inc
mov
stos
dec
fstps
testl
out
out
or
fcomps
int
daa
or
stos
dec
jae
or
push
mov
mov
sbb
xchg
stc
push
loope
adc
cmc
mov
mov
dec
cli
pusha
testl
or
fldenv
push
inc
and
xor
xor
add
mov
jns
sub
sub
daa
xor
adc
push
mov
adc
shlb
adc
xor
and
insb
adc
or
andb
xchg
xor
imul
mov
repnz
and
and
icebp
cmp
push
pop
imul
nop
aaa
push
into
loop
aas
pop
enterw
rcrl
inc
les
sbb
shll
aas
testl
xchg
je
gs
or
adc
xor
test
push
jg
push
jae
pop
fdiv
clc
stc
cmp
movsb
icebp
mov
push
jle
mov
pop
pop
add
dec
inc
push
cmp
loop
mov
test
mov
sbb
jb
xchg
sbb
in
iret
test
addr16
inc
pop
negl
adc
insl
leave
sbb
cld
xchg
pop
and
lods
shll
cmp
push
daa
addb
jns
rcr
out
mov
inc
pop
popa
adcl
add
adc
sbbl
xchg
pop
loope
movsl
cld
dec
pop
shrb
adc
adcb
sbb
jno
andl
sahf
popa
insb
and
xchg
call
cmc
mov
or
adc
dec
pop
insb
sub
iret
cwtl
div
ficompl
stc
in
jle
lods
test
sbb
xor
cmp
mov
sti
outsb
jecxz
mov
jne
and
fcoml
lret
negl
cli
dec
arpl
mov
cli
push
mov
rcrb
and
and
xor
push
add
pop
cmp
notl
fdiv
gs
rcrl
movsl
test
sbb
adc
in
insb
fidivs
mov
xchg
jge
xlat
mov
ret
ret
add
cmp
test
fcomi
sbb
arpl
hlt
lea
xchg
imul
mov
add
repz
inc
push
and
pop
mov
adc
push
xchg
mov
decl
cld
gs
xor
out
or
aad
imul
cltd
sbb
jl
mov
inc
add
and
cmp
lret
push
dec
addr16
jne
lods
shll
or
mov
push
mov
ljmp
or
sahf
pop
mov
inc
xor
push
mov
sbb
inc
addr16
ss
leave
int
adc
xchg
push
pusha
add
rorl
sahf
gs
dec
repnz
rolb
pop
lcall
adc
dec
mov
cltd
cmp
push
nop
push
sbb
jo
add
xor
adc
cli
dec
mov
xor
in
xchg
mov
jb
jb
add
pop
fwait
xlat
das
add
aad
adc
clc
ss
movb
and
jno
out
add
xchg
out
out
or
and
lods
inc
fcoms
int
push
push
xlat
sub
jbe
pop
push
add
or
lahf
jns
call
andl
xchg
insl
in
jecxz
ficoml
pop
addr16
out
mov
add
rorl
jae
fbld
add
fbstp
fnstsw
sub
xchg
jmp
pop
jb
cmp
sbb
outsb
pop
sub
cwtl
int3
mov
sarb
jl
imul
das
adc
or
sub
pop
sub
sub
lret
pop
jge
test
jge
rol
nop
sub
dec
shlb
xchg
lea
rcrl
mov
jp
mov
inc
cmp
sbb
add
mov
dec
add
jge
xor
pusha
in
inc
loop
mov
or
xchg
in
ficompl
jg
mov
aad
inc
out
loopne
pop
hlt
lods
adc
inc
xchg
mov
inc
push
push
fldenv
repz
scas
pop
push
or
arpl
fcompl
mov
jg
pop
add
in
add
dec
loopne
and
adc
add
pop
stc
adc
cs
lea
pop
stc
nop
xchg
stc
sti
mov
push
clc
xchg
lds
mov
inc
sbb
pop
mov
inc
mov
mov
clc
sahf
out
add
loop
in
jno
dec
vmovntps
pusha
insl
or
mov
mov
testb
outsb
rolb
or
aaa
dec
lods
cltd
add
jnp
jl
mov
or
pop
xchg
xchg
adc
or
cld
aam
add
lock
ret
sbb
mov
mov
sahf
push
lods
push
les
clc
das
icebp
xor
test
int
dec
lea
lahf
std
loop
repz
fcompl
adc
scas
inc
xlat
fisttps
jae
mov
clc
inc
rorb
and
sub
scas
add
xchg
xchg
jecxz
in
jae
and
sub
mov
lods
insb
xor
insb
into
iret
and
xchg
xchg
lea
push
lret
and
cmp
data16
adc
xor
xor
popa
test
xchg
lea
cmp
je
push
pop
mov
or
lcall
in
push
sahf
leave
sbb
push
mov
sub
dec
xor
repz
sarb
pop
push
daa
adc
and
movsb
scas
mov
mov
xor
out
hlt
xchg
ret
jae
xchg
mov
sbb
cs
adc
cmp
jns
icebp
insb
sahf
adc
jbe
decl
and
push
in
pop
cmpsb
xchg
adc
popa
out
cld
pop
xchg
imul
out
dec
inc
aad
and
mov
imul
sub
ficoms
jg
cmp
jg
mov
mov
shlb
imul
fidivs
lea
xor
bound
adc
insb
push
shl
push
cmp
ss
sub
sbb
xchg
cmpb
pop
xchg
pop
cmp
xorl
cwtl
and
rcrb
ret
fdivr
es
mov
sub
inc
mov
call
or
aaa
inc
fnstenv
js
lods
mov
mov
lret
in
push
inc
cmp
enter
in
pusha
mov
jle
outsb
aas
test
movsb
xchg
inc
xlat
jb
inc
sahf
xlat
mov
or
das
dec
dec
cmp
xchg
jae
and
clc
mov
rclb
xchg
popa
add
sub
inc
cmp
push
nop
ror
fisttpll
pop
jno
mov
and
outsl
loop
mov
push
inc
inc
cmp
loope
in
add
inc
sbb
add
mov
xchg
call
cmp
xchg
repz
lock
les
adc
insl
inc
testl
mov
mov
insl
cmpb
pushf
cmp
arpl
mov
je
sbb
cmp
sub
fistpll
ss
push
cmpsb
sub
fdivs
pop
add
add
rep
xchg
lea
xchg
shrb
scas
mov
inc
div
sub
mov
subl
gs
cmp
cmpsb
in
push
cld
nop
ret
add
ja
mov
xchg
aad
loope
lahf
cwtl
out
bswap
fldl
and
add
ret
clc
adcb
in
adcl
or
mov
lods
dec
aam
aas
imul
sub
lcall
ficomps
pop
cld
mov
fcomp
jge
push
enter
mov
out
push
rcl
push
test
sahf
ja
cwtl
movsb
das
leave
into
stos
add
fs
or
shll
mov
jnp
inc
and
pushf
lea
mov
mov
pop
ret
mov
scas
iret
mov
push
divb
int
insl
xchg
inc
imul
out
sti
lods
mov
imul
aam
flds
push
fs
adc
shrb
sub
xchg
add
test
adc
xchg
jo
jecxz
ja
sti
adc
dec
mov
cmp
movsb
and
xor
add
sti
stc
lret
fstl
xor
cmc
pop
lret
dec
sub
popa
mov
or
mov
mov
add
jge
loopne
jb
mov
test
and
push
imul
jecxz
fisttpl
fstl
shrd
xor
jmp
pop
jg
fs
hlt
lea
rcll
mov
pop
mov
cld
gs
adc
sub
jp
mov
push
pusha
out
shl
cld
sub
xor
sbb
test
out
and
aaa
pushf
xchg
mov
neg
xor
sbb
iret
jno
mov
clc
push
jg
mov
mov
cltd
push
popf
lret
into
fsubrp
sbb
adc
jb
xor
aas
shr
fmuls
add
push
xor
je
sub
hlt
mov
or
xchg
enter
test
mov
inc
pop
aas
ror
aas
sub
mov
fs
test
shrl
or
pop
out
cmp
shrl
mov
pop
add
push
and
test
mov
repz
or
jnp
popa
adc
mov
scas
push
fwait
test
pop
loop
mov
stos
lret
js
nop
jns
xchg
enter
stos
out
pop
stos
pushf
inc
push
add
loop
pop
xchg
scas
mov
js
sbb
sbb
jno
repnz
rol
in
mov
pop
das
inc
movq
and
pushf
dec
fsubrs
xchg
mov
sbb
sbbb
cmp
negl
ds
sti
sub
fmull
sbb
cmp
mov
pop
jb
ret
push
mov
fldt
or
push
sub
xchg
cmpsl
fs
pop
outsl
js
in
xchg
pop
mov
push
add
inc
jbe
clc
adc
fadds
pop
std
stos
xchg
mov
sbb
and
lret
enter
push
inc
sahf
or
and
sbb
jae
dec
mov
repnz
and
mov
sub
pop
jb
xchg
mov
cmp
andb
add
push
and
dec
mov
stos
popa
mov
and
pop
loopne
jb
sub
mov
mov
fistps
mov
imul
enter
mov
lods
mov
add
cmp
enter
mov
mov
cli
and
popa
clc
xchg
in
cs
iret
fdivrl
jbe
shl
jnp
jge
int3
arpl
or
sbb
xor
xchg
test
popf
movsl
data16
push
int3
jg
test
xlat
popf
sub
or
pop
imul
outsb
xchg
mov
xorl
aaa
push
lret
xchg
dec
pop
ljmp
in
div
dec
lods
fldl
jle
out
jnp
sbb
stos
int
mov
xor
push
lcall
push
jbe
push
sbb
and
or
leave
pusha
ret
cmpsb
sub
pop
jnp
lret
push
jg
add
int
push
sbb
push
insb
jecxz
iret
xchg
pop
xchg
sub
pop
mov
dec
or
jo
push
lret
stos
fsts
push
inc
into
repnz
add
outsb
adc
push
push
and
mov
add
int
ret
dec
pop
jne
les
pop
bound
pushf
sbb
push
mov
dec
push
adc
ret
loopne
daa
push
icebp
andl
mulb
xchg
scas
rorl
loop
pusha
and
aad
push
pushf
cli
test
push
imul
in
push
cld
out
pop
and
xor
cmpsl
adc
cmp
lock
inc
mov
aaa
push
push
test
pop
roll
das
ret
cld
leave
pop
iret
in
into
dec
gs
sbbb
add
nopl
mov
jmp
adc
sub
pop
pop
aaa
xor
add
in
dec
add
sahf
outsl
sbb
push
nop
pop
push
push
xchg
imul
cs
and
xlat
test
sub
and
xor
fsts
rcll
push
jns
ret
and
ret
fisttps
outsl
jno
adc
and
fsts
pop
jae
fistps
push
pop
pushf
mov
dec
sub
dec
rcrb
lea
shlb
scas
add
out
push
pushf
or
sbbl
shrb
repz
pop
push
mov
push
add
add
cs
test
mov
xchg
daa
mov
mov
aaa
mov
push
test
lret
call
ficomps
imul
sti
fnstsw
dec
fisttpll
fcmovnu
scas
dec
dec
fwait
stos
xchg
cli
outsl
xchg
cmpsl
jo
repz
popf
ljmp
pop
or
add
xchg
and
loope
mov
mov
xchg
sub
pop
ror
std
cltd
rol
inc
inc
sub
pop
sub
cltd
and
mov
je
sbb
sbb
cmc
adc
repz
dec
aas
addb
xchg
jecxz
xor
and
lock
js
popf
mov
dec
call
mov
imul
lret
lock
mov
dec
lahf
fistpl
out
ret
aaa
cpuid
cmp
and
push
or
sbbl
inc
or
addb
rolb
sbb
mov
dec
pushf
stos
add
test
jmp
outsl
push
lcall
xchg
push
and
mov
bnd
clc
aad
and
jp
push
mov
std
xor
cmp
cltd
xor
dec
pop
sahf
cmp
fisubl
inc
lret
dec
aam
cmp
inc
or
mov
imul
cmp
clc
out
dec
jl
inc
add
lcall
mov
call
push
pop
push
jno
cmpsb
jo
fmuls
testl
test
mov
sub
stos
inc
arpl
pop
pop
dec
mov
aam
cltd
mov
leave
aas
loop
sub
shlb
dec
pop
lock
dec
push
inc
sbb
jge
mov
xchg
dec
push
mov
stos
pop
sub
dec
ljmp
pushf
push
xrelease
mov
sbb
fcmovnb
je
cmp
faddl
cmp
add
pop
jb
jp
or
les
mov
fwait
jge
fwait
xor
andl
sbb
cmp
inc
ret
lcall
movl
js
rclb
fwait
xor
push
mov
mov
adc
lcall
js
inc
orb
pop
jmp
sti
sbb
repnz
push
add
fs
push
xlat
sbbl
ds
movsb
lds
fmuls
stos
aam
andl
iret
push
pop
or
sub
lahf
sub
pushl
hlt
call
jnp
dec
add
pusha
in
push
ljmp
cltd
jbe
dec
xor
xchg
clc
fdivs
leave
test
imul
out
movsb
and
mov
movsl
adc
fisubrs
xchg
cmpl
xor
int3
push
sub
call
dec
xchg
dec
in
imul
pushf
mov
stc
jl
xor
rolb
js
les
push
and
dec
popf
inc
and
ficomps
jnp
js
mov
test
sub
repz
sbb
mov
cmpsb
ja
popa
ljmp
mov
faddl
adc
test
rcrl
dec
mov
cltd
fistpll
sarl
pop
rcl
ljmp
ljmp
inc
call
sbb
ljmp
jb
pop
cwtl
sub
cmpsl
lock
inc
fimull
or
mov
popa
mov
lock
and
adc
in
push
lock
cli
pop
aas
mov
testb
mov
xchg
xchg
ret
in
jg
mov
loope
lods
fcmovne
add
mov
cmp
pop
stos
xchg
and
xor
cmp
jo
xchg
cmp
pop
cmpsb
cmp
scas
push
test
lods
sub
dec
aad
jbe
mov
rcrb
aas
dec
es
mov
xor
das
cmp
sbb
mov
sahf
loop
mov
mov
fisubl
shll
mov
aaa
hlt
stos
and
pop
cmp
mov
loopne
mov
punpckhwd
push
cwtl
incb
jmp
enter
push
outsb
pop
hlt
lahf
cmc
arpl
addr16
pop
mov
andps
incl
out
je
mov
cmpb
negl
adc
push
addb
std
pushl
addr16
ss
jne
xor
test
push
aas
sbb
xchg
push
sbb
faddp
jne
cmpsb
push
add
pusha
mov
sbb
or
test
iret
outsb
push
aam
inc
outsb
mov
jp
pushf
sub
or
jmp
rcr
adc
mov
lods
jne
mov
into
add
les
add
loope
lahf
or
sbb
pop
pop
pop
iret
ss
lret
sbb
dec
or
test
mov
aam
outsb
imul
dec
testb
lea
imul
mov
lahf
push
mov
outsb
add
loopne
jecxz
fildl
insb
adcl
gs
or
mov
jecxz
pop
scas
test
dec
ja
pop
mov
cmp
pop
sub
xor
jns
mov
ss
sub
mov
dec
test
mov
test
or
rclb
test
push
xor
dec
jae
lock
push
pop
add
hlt
and
jae
test
or
and
scas
nop
fldenv
sbb
xor
cmp
test
ret
pop
fs
pop
jecxz
dec
rolb
sub
add
sbb
jae
pop
cld
psubw
sti
sub
sub
pop
notb
sbb
inc
int
jmp
and
rclb
mov
adc
fwait
push
icebp
mov
sarl
inc
push
mov
dec
jmp
cmpsl
fld
mov
test
ret
ret
inc
orb
jbe
push
inc
pop
sub
ror
mov
push
jmp
xlat
pop
popf
inc
in
mov
cmp
fisttpll
mov
jno
inc
stos
cmp
dec
test
rcrl
mov
mov
pushf
icebp
je
xchg
sbb
movl
call
lcall
cmpsb
xor
jae
inc
sub
mov
mov
lea
add
add
cmp
std
mov
push
pop
mov
sub
jle
fbld
inc
test
add
or
xchg
scas
je
inc
fnstcw
xlat
cld
ficoml
sub
mov
repz
fsubp
movsb
adc
xor
shl
inc
mov
ss
jbe
fisubs
btr
ret
push
pop
adc
movsb
test
and
imul
inc
sahf
enter
stos
das
push
fwait
stos
clc
jmp
or
cmp
shlb
enter
push
jo
pushf
je
std
roll
and
cli
mov
fwait
mov
cmp
xor
inc
popa
call
mov
ret
sub
imul
xchg
and
xor
clc
lret
sar
int3
insb
and
sbb
dec
lods
pop
pop
inc
cmp
ret
push
sub
pop
mov
cmp
pop
daa
cmp
rorb
dec
adc
sub
lahf
lret
ret
jle
fs
pop
sbb
icebp
inc
add
mov
loope
das
mov
out
pop
xor
in
xor
ret
cmp
lahf
xor
ss
popf
movsb
push
cmpsl
lock
push
xor
movsb
xchg
pop
popa
mov
xchg
in
sbb
mov
and
imul
jge
pop
push
sbb
pop
jle
and
xchg
inc
popf
leave
jns
iret
fidivl
sbb
int
loop
loopne
cltd
repnz
and
cwtl
movsl
testb
dec
rorl
aad
test
mov
fnstcw
pop
ret
sub
xor
cs
out
inc
dec
scas
shll
mov
out
push
outsl
jmp
sbb
hlt
inc
and
pop
and
push
jp
and
push
mov
stos
push
mov
add
and
pop
jnp
notb
or
or
rcr
pop
pop
imul
pop
push
jns
inc
lret
push
test
mov
dec
push
or
add
sub
iret
xchg
inc
std
add
cmpsl
jle
dec
push
enter
cld
test
sub
sub
stc
or
xor
gs
dec
in
push
sbb
sbb
jecxz
mov
test
or
es
sarl
inc
inc
in
arpl
nop
jbe
push
loope
xor
xor
or
cwtl
stos
sbb
out
fisubrs
jne
lahf
inc
test
push
sub
mov
fdiv
or
jp
jle
test
mov
inc
sub
pusha
adc
imul
sbb
iret
xchg
shlb
jmp
push
testl
adc
sbb
sti
mov
cmc
outsb
lahf
notb
push
cmp
fwait
pop
xlat
pop
dec
adc
aad
jne
jl
inc
push
adc
jae
jg
xor
pop
mov
test
ljmp
mov
pop
cmovbe
xor
pop
jbe
dec
jno
mov
pop
xlat
cwtl
mov
sarl
push
inc
icebp
ja
mov
cmp
mov
aam
rcr
aas
cmpsl
cmpsb
jo
sbb
jmp
aam
push
pop
icebp
in
je
mov
add
xor
icebp
aaa
int3
std
mov
pop
and
push
push
aas
jp
insl
xchg
sub
rclb
fimull
push
sahf
loope
cmp
into
aad
lea
nop
adc
xchg
xor
lahf
cmpsl
inc
clc
aas
mov
push
in
in
fisubs
or
popa
or
fbstp
jg
ja
xchg
test
jle
pop
sbb
outsl
in
test
push
lds
addl
in
sub
xor
mov
cmp
ret
movb
xchg
rorb
xchg
cmp
das
jbe
repz
lcall
les
fiadds
sub
rcrb
mov
fldt
and
jecxz
mov
push
jns
mov
push
cmp
outsb
test
cmp
dec
jb
aaa
movsl
shlb
sub
mov
jb
xchg
xor
cltd
adc
jmp
xchg
mov
inc
aam
and
fisttpll
pop
pmullw
imul
fsubrs
addl
inc
push
mov
sbb
in
inc
dec
fsubrl
mov
bound
jle
test
xchg
pusha
test
mov
outsl
in
push
hlt
dec
into
mov
cmp
mov
jg
mov
cmp
sbb
orb
pop
mov
mulb
cli
inc
and
shlb
call
jnp
hlt
fisttpl
add
test
xlat
mov
ret
pop
xchg
add
test
dec
test
pushf
ret
sub
jnp
in
push
add
addl
add
mov
lret
test
shll
pop
fistpll
push
ficomps
xor
gs
cmpsb
or
ss
clc
adc
pushf
sub
inc
dec
ret
icebp
adc
cmp
ucomiss
divl
mov
mov
les
mov
xchg
lock
mov
aam
add
ss
imulb
pop
movsl
fdivrs
sub
imul
xor
jbe
int
lds
sub
mov
rolb
cmpsl
dec
pop
sub
cmp
dec
xchg
and
das
iret
in
or
xchg
and
in
repz
ss
cmp
push
add
fdivs
je
adc
xchg
mov
adc
shlb
ret
lds
shll
mov
stos
xchg
inc
std
push
jbe
scas
cmpsl
jnp
jno
mov
popa
mov
stos
sub
mov
lods
xor
insb
repz
mov
std
xchg
sub
cld
push
pop
loop
add
pop
ss
cmpsl
sub
cs
addl
inc
outsb
ja
in
cmp
sub
mov
std
push
mov
mov
xchg
cli
pop
and
sti
das
adc
dec
pop
testl
leavew
gs
stc
or
cmpsl
fbstp
fsubs
inc
out
mov
test
lods
push
push
out
fiaddl
jnp
jnp
clc
or
adc
pop
dec
shrl
cmp
mov
lahf
lds
push
xor
sbb
js
cld
shlb
mov
inc
fs
cmpps
js
cwtl
mov
push
jge
int3
mov
adc
sbb
aam
imul
mov
push
mov
loope
cmp
incb
pop
movsl
and
pop
or
xchg
jno
scas
cmpsb
add
cmc
popa
adc
es
out
std
adc
cmp
sub
popa
xor
shrl
dec
sbb
es
nop
mov
push
push
jb
push
mov
fwait
sbb
sarb
dec
push
inc
xlat
test
or
sbb
jecxz
mov
loopne
xchg
ret
outsl
movsl
dec
pop
add
loop
push
jl
punpckldq
add
jmp
or
stos
mov
addr16
arpl
pop
sti
adc
and
xor
popf
scas
xor
mov
pop
std
pop
stc
add
add
shrl
sbb
mov
and
inc
xor
cmp
inc
mov
xor
xor
cltd
js
inc
push
jo
pop
loope
jb
push
sub
sub
in
cli
mov
dec
xchg
sub
inc
dec
mov
cwtl
fsubrp
xchg
mov
xchg
jnp
notb
dec
repz
cwtl
les
sbb
rorl
subl
or
nop
je
in
jae
cmp
popl
mov
adc
jb
xor
das
cld
xchg
pop
sahf
hlt
dec
sbb
shrb
in
enter
inc
icebp
movsl
out
mov
fs
test
test
lret
mov
loope
mov
mov
mov
xchg
cmpsb
xchg
sub
ret
data16
enter
jne
adc
adc
add
mov
pop
jp
mov
ja
enter
nopl
cltd
jno
test
lds
push
sbb
pop
mov
jne,pn
scas
xchg
add
mov
or
inc
in
int3
ss
out
sub
add
sti
xor
hlt
push
mov
inc
imul
cmpsb
cmp
xor
mov
jnp
inc
test
adc
xor
fidivs
cltd
push
pop
push
cmp
xchg
insb
testl
stc
insb
push
or
ja
xchg
xchg
pop
lcall
jmp
loopne
ror
push
loopne
out
popf
repz
lds
push
lahf
je
enter
fwait
cmpsl
jb
imul
sbb
push
jo
out
sub
mov
and
out
xchg
inc
and
inc
xor
aam
sub
inc
out
pop
das
add
cmpsb
cs
push
xor
or
stos
cmp
subb
mov
cmpsb
fimuls
int
inc
jb
push
movsl
loope
call
mov
or
or
jge
jle
dec
mov
in
mov
or
ja
jns
xchg
popf
std
cltd
mov
fbstp
dec
mov
and
and
pushf
add
push
jbe
and
cmpsl
or
inc
mov
out
push
aas
aad
rcr
and
adc
cli
popa
sbb
lahf
shll
imul
cli
sbb
mov
sub
sub
cld
lcall
mov
add
scas
cmp
dec
int
mov
repnz
add
push
test
push
in
insl
add
sub
ja
push
in
subb
mov
mov
testl
jae
mov
jg
stos
pop
mov
push
iret
sbb
inc
lds
outsb
xchg
jb
iret
pop
sarl
dec
in
ret
data16
es
gs
mov
xchg
push
loope
repnz
add
mov
pop
push
cmp
scas
idivb
sub
imul
push
mov
sbb
mov
dec
out
jle
mov
rcrb
movsl
insl
pop
adc
push
sbb
lcall
inc
out
xchg
pop
negl
aad
out
push
out
sti
xor
sbb
mov
nop
jnp
sub
cs
lods
push
jp
pop
mov
pushf
popf
sub
jo
mov
jns
punpckhbw
rcrl
adc
inc
mov
addr16
imul
jbe
inc
fmulp
ja
stc
inc
add
dec
lcall
lahf
mov
cmp
xchg
xchg
fs
rcrb
icebp
fdiv
arpl
xor
and
mov
pop
ror
lds
cmp
out
inc
arpl
nop
cmpsl
div
repnz
pop
xchg
add
inc
out
ds
nop
lock
and
data16
mov
in
cmpsl
sub
mov
hlt
fisttps
mov
out
cmp
xchg
insl
into
cmc
jns
test
fidivl
cld
imul
insl
sbb
fisubs
xlat
sub
mov
push
push
out
shlb
cwtl
sub
jae
es
pop
push
xchg
xchg
sub
flds
cwtl
or
scas
xchg
and
jne
repnz
mov
sbb
jns
pop
ss
test
jl
sub
push
in
pop
cwtl
test
pop
outsb
ss
sub
push
mov
stos
pop
stos
decb
psadbw
xor
addb
dec
cmp
cmpsl
mov
xor
scas
std
rclb
decl
jo
xor
jns
inc
subl
lods
enter
lret
and
into
lock
jne
sbb
pop
mov
or
sub
fwait
cmpsl
add
pop
jb
pushl
sbbb
stc
xchg
jbe
mov
daa
stc
mov
dec
ljmp
push
jmp
sbb
mov
push
and
pop
and
add
out
add
pop
cmp
push
add
sbb
mov
ss
jne
enter
cmp
jae
pop
pop
add
mov
dec
lea
mov
test
incl
push
xor
fcomps
je
iret
aam
push
xor
jb
mov
xchg
mov
adc
shl
and
lret
movsl
mov
adc
cmp
sbb
jnp
mov
sbb
jle
mov
inc
lahf
mov
shr
jne
xchg
mov
jnp
add
nop
mov
imul
nop
rorl
jge
mov
inc
call
adc
lahf
lods
pop
add
mov
in
pusha
cmpsl
mov
adc
lea
inc
sbb
movsb
mov
sub
add
out
dec
imul
sbb
repnz
in
std
or
xor
jp
push
mov
jns
iret
ret
sbb
popf
inc
bound
das
scas
push
inc
ror
jno
fwait
xor
dec
dec
ss
inc
in
addr16
ret
xchg
shrl
movsl
jmp
icebp
jp
in
xor
xchg
rcrl
sbb
mov
das
rol
push
lea
cltd
js
push
push
es
pop
imul
cmp
xchg
jmp
es
stc
mov
into
adc
std
loope
enter
int3
sub
icebp
mov
xchg
aam
popa
lods
jmp
push
in
subl
scas
iret
pop
rolb
in
and
testl
xor
sbb
inc
out
push
xchg
cmp
mov
mov
xor
pop
ss
ds
add
push
popa
lods
in
xchg
jmp
jno
cmp
loopne
popf
fildll
je
or
cmp
sbb
icebp
cmp
add
out
ret
hlt
repnz
jb
aas
test
dec
mull
add
pshufw
xor
push
cs
cmp
pop
jge
in
and
lret
dec
scas
adc
mov
iret
jno
dec
mov
fcmovne
out
fst
sub
lods
inc
sub
add
js
mov
mov
mov
adc
std
lea
fdivrl
scas
sub
pop
xchg
mov
push
arpl
pop
decb
out
test
sub
adc
xchg
arpl
lea
push
ret
int
jmp
push
pop
rorl
scas
and
and
arpl
push
jmp
push
jb
arpl
mov
out
jp
rcrl
pop
out
jg
movsb
stc
inc
ret
lret
subb
shl
mov
repnz
mov
stos
test
das
xor
mov
testl
dec
or
stc
or
sbb
or
popf
imul
cwtl
stc
repnz
movsb
test
icebp
mov
ret
xor
repnz
sbb
jge
scas
inc
cltd
xchg
test
cmc
xor
mov
movsb
jl
shrl
int3
lret
loope
cmp
dec
push
rcrl
mov
cmpsb
in
mov
movb
mov
iret
xor
popa
inc
or
mov
jae
fidivl
xlat
cmp
and
sbb
je
dec
sub
cltd
incb
into
decb
cmpsl
mov
pop
imul
popa
jmp
add
cmpsl
cmp
inc
mov
xlat
stc
xor
aaa
mov
stos
and
mov
mov
add
inc
and
cmp
sub
xchg
repz
dec
out
scas
jnp
xor
ljmp
lret
stc
and
cmc
xchg
movsl
push
je
aam
push
repnz
es
in
cld
lods
cmp
mov
push
pushl
xor
dec
loope
test
or
cwtl
aaa
pop
mov
jl
mov
into
or
arpl
fwait
pop
movsl
popl
hlt
adc
jmp
repnz
loop
sub
shll
dec
push
pop
push
in
dec
les
enter
mov
mov
popf
jge
movb
push
jne
out
jle
sbb
or
dec
jp
push
xlat
mov
push
dec
inc
and
lahf
push
push
mov
imul
or
out
pop
pop
xor
mov
jne
mov
aad
or
lret
cmp
loopne
push
cmp
lcall
jne
sbb
pop
nop
adc
enter
imul
cmpsb
les
jae
mov
mov
pop
mov
pushf
in
test
mov
mov
push
xor
inc
or
cltd
scas
sbb
popf
jb
mov
iret
mov
mov
lock
mov
popf
inc
stos
fs
sub
or
pop
inc
pop
jecxz
addb
sub
out
lea
loope
mov
es
cmpsl
rclb
loop
int
cmpsl
mov
mov
sbb
fwait
push
lods
jno
jecxz
xor
jmp
pusha
push
jl
add
insb
repz
pop
inc
loop
pop
push
and
movsl
imul
xchg
icebp
in
daa
mov
dec
sub
faddl
push
lea
into
in
repz
mov
addr16
cwtl
dec
cwtl
out
add
and
mov
or
fldl
cld
mov
cmp
jl
mov
push
add
sbb
xchg
pop
cmp
inc
dec
aaa
mov
lods
mov
cmp
ss
pusha
sub
fdivrs
cltd
lahf
jbe
ss
addr16
aam
imul
and
test
jo
sbb
in
sbb
leave
enter
gs
sbb
or
adc
xchg
xchg
jge
in
outsb
sub
in
push
mov
out
cld
or
or
add
iret
push
fdivrs
pop
cmc
pop
adc
flds
je
fsts
sbb
xchg
outsl
mov
push
cs
sub
fwait
jbe
add
jb
fidivl
jae
jae
and
mov
testl
and
push
shll
sbb
jb
fdiv
cmp
fnstsw
xchg
insb
scas
xchg
test
mov
sti
loopne
lock
iret
add
sub
push
and
fcompl
inc
ds
jne
aad
lcall
xorb
jge
imulb
adc
add
shll
add
push
in
fwait
mov
dec
in
jb
jo
xor
imul
jecxz
and
jecxz
pop
or
cmp
ficoms
fidivrs
out
imul
mov
movsl
test
inc
jns
in
sti
jns
rorb
and
lret
cs
inc
lahf
div
aas
mov
out
or
and
ds
mov
js
adc
dec
jne
jae
fstl
leave
pusha
mov
jne
xchg
push
xor
or
xorb
dec
aam
ret
insl
xor
stos
add
adc
dec
rcll
adc
pop
xchg
into
orl
rcrl
dec
lea
mov
add
int3
cmp
cmpsl
dec
pop
icebp
ds
cmc
mov
lods
ret
and
sub
fistl
adc
and
jno
xor
sbb
and
decl
xchg
cmpsb
jns
jl
pop
mov
lret
sub
cmp
cmpsl
in
add
nop
cmp
jbe
nop
dec
dec
cmpb
mov
dec
movd
xchg
jno
pop
cmpsb
push
rcll
mov
fs
mov
data16
bound
push
xor
and
xchg
lds
push
sahf
pop
bound
push
jne
loopne
inc
aad
mov
fnsave
loope
and
pusha
out
sub
sub
ss
xchg
sbb
xorl
pushf
lods
pop
jo
std
push
cs
repz
mov
xchg
add
mov
mov
jo
stos
in
jnp
leave
inc
shlb
push
es
push
adc
incb
push
sahf
es
js
mov
iret
and
push
inc
bound
or
aas
adc
out
sub
xor
cmpsb
adc
adc
and
cli
mov
movsb
inc
mov
jbe
lock
and
pop
fldl
jg
jle
pusha
push
idivb
pop
mov
icebp
cs
push
cmpsl
dec
inc
ja
lods
dec
sbb
das
das
push
jns
mov
xor
cmp
sbb
xchg
or
mov
cmpsl
bswap
rol
jl
cld
rorl
aad
add
scas
push
or
mov
in
or
sbb
rcrl
and
rclb
or
into
dec
fucomip
dec
scas
outsb
jl
xchg
push
rorl
mov
into
roll
rolb
cmpsl
aam
sbb
hlt
call
in
pop
cltd
lods
and
div
rcpps
mov
jns
mov
addl
jmp
dec
loop
xor
add
je
or
sbb
mov
add
popl
mov
ss
and
mov
mov
fadds
sbb
or
arpl
mov
pop
jne
pop
in
mov
xor
mov
mov
and
jle
xlat
cmp
scas
dec
push
out
insb
sbb
mov
mov
mov
inc
mov
xchg
mov
jo
mov
add
fildl
push
and
dec
mov
xlat
cmp
lods
cmp
call
mov
icebp
and
cmc
dec
add
xchg
dec
scas
mov
outsl
push
xchg
aas
sub
inc
pusha
cs
sbb
sub
sbb
dec
dec
inc
sbbl
addr16
movsb
pop
subl
sbb
mov
outsb
or
imul
push
mov
push
out
les
pop
dec
cmp
sti
xchg
cmc
sbb
jnp
fisubl
xor
outsl
push
das
inc
aas
ja
in
xchg
loop
jb
pop
hlt
add
or
int
dec
jo
lea
jge
cs
test
arpl
push
jno
sub
jae
dec
jl
dec
or
stos
dec
mov
mov
fwait
in
cmp
add
mov
loopne
int
add
out
shlb
inc
lahf
repnz
rorl
into
or
jg
mov
loop
jp
lods
mov
mov
std
jo
test
lods
pop
push
in
psllq
loopne
data16
push
repnz
dec
scas
rcrb
imul
aas
mov
pop
iret
mov
jmp
ret
loopne
add
adc
lods
andb
clc
cld
addb
ret
adc
mov
ret
cmpsb
repnz
inc
push
cwtl
gs
loop
stc
dec
and
push
in
sub
lret
test
stos
xchg
mov
and
subb
jbe
imul
popa
or
fcom
idiv
pop
shrb
mov
cmp
scas
ss
cmp
inc
icebp
adc
cmpsb
pop
mov
xor
cmp
add
mov
dec
jbe
cmp
stc
ss
out
out
dec
inc
mov
stos
sar
fadd
mov
sbb
aaa
das
lea
cld
ret
mov
adc
hlt
xchg
lcall
mov
sub
divb
mov
into
mov
sbbl
movsl
lods
aas
xchg
jmp
mov
leave
cs
mov
outsl
stos
xchg
outsb
cmp
loop
fstpl
xchg
fnstsw
push
mov
out
cmc
fildll
mov
xor
insl
ss
icebp
shll
rorb
jb
fstpt
jo
adc
add
fwait
int
adc
in
fwait
bound
sarl
movsb
adc
dec
cmpsb
jae
loop
push
adc
lds
sbb
gs
pushf
jns
add
and
out
daa
outsb
dec
popa
cmp
sbb
push
jne
aas
js
xchg
jecxz
inc
and
popa
in
inc
into
enter
push
sarb
push
lahf
dec
xchg
add
pop
lds
jbe
nop
mov
scas
test
cmp
popf
test
mov
rcl
fcompl
jge
ret
pop
pop
cltd
sub
cltd
jecxz
sub
mov
add
test
out
bound
pop
fs
pop
mov
push
mov
test
fists
scas
fdiv
aas
imul
add
sti
sbb
xchg
cld
mov
fcomps
cmp
add
xor
push
cmovs
sub
mov
sub
adc
lret
lret
mov
stos
dec
add
inc
fldcw
test
add
push
inc
out
mov
popf
insl
xor
jbe
lahf
sbbl
adc
adc
inc
and
cmp
and
push
call
dec
dec
cmp
repz
xchg
pop
dec
das
cmc
js
jge
push
push
stc
jb
stos
xchg
xchg
bound
rorb
pusha
subl
sahf
in
sub
or
mov
pusha
push
push
fists
dec
repz
and
cmp
add
xor
fsubrs
xchg
popf
fmul
dec
ja
adc
sbb
test
xchg
pop
inc
bound
add
mov
push
inc
mov
jo
mov
cmp
dec
enter
pop
xchg
xchg
cmp
cmpsl
add
sbb
cmp
cld
leave
jmp
lcall
or
pushf
mov
add
fstl
xchg
cmp
sub
mov
pop
pushf
xor
fldenv
jo
mov
cmp
xchg
add
loopne
add
js
mov
push
inc
mov
xor
push
cwtl
push
or
movsl
fst
mov
subl
mov
sub
xor
add
pushf
mov
aas
sbb
xchg
sbb
or
fstpl
in
addr16
adc
and
mov
cmp
add
sub
push
adc
pop
cmp
sahf
stos
push
dec
dec
mov
cmp
and
jl
and
cltd
pop
jecxz
or
ljmp
iret
cmpsl
pop
jecxz
cmp
mov
sbbb
fst
lea
test
xchg
cs
jne
roll
leave
xchg
rclb
pop
nop
push
push
push
sub
or
stc
fs
lret
adc
sbb
add
ret
in
scas
lcall
jecxz
mov
xchg
push
xchg
dec
dec
mov
inc
cmp
cli
cmp
test
mov
outsb
xchg
fcoml
or
das
push
sub
push
in
stos
fisttpll
std
push
out
gs
int
sti
decb
mov
or
push
into
idivb
es
cmpsb
test
sahf
ds
add
ss
sub
xchg
and
jmp
push
scas
popa
test
mov
xor
and
push
mov
jb
xor
lcall
dec
xchg
sub
cmp
sar
dec
jbe
in
jg
jne
out
int
enter
mov
icebp
insb
pusha
nop
nop
mov
je
adc
mov
imul
fs
das
pop
and
lock
xor
inc
call
sub
or
std
xor
int3
or
insl
loopne
movsb
pop
adc
popa
ja
adc
xchg
dec
pop
mov
fildll
inc
push
or
pushf
mov
dec
and
shrb
dec
xchg
sub
adc
flds
sbbl
xor
shl
adc
in
dec
out
outsb
jnp
mov
repnz
lret
pop
jecxz
aad
inc
push
cmc
test
cmpsb
add
mov
mov
sub
xchg
dec
push
int
adc
je
adc
test
aad
add
xlat
test
pop
imul
mov
jbe
into
xchg
inc
inc
inc
mov
sbb
mov
dec
xchg
mov
loope
shrb
push
insb
outsl
inc
nop
je
in
pop
out
mov
add
clc
adc
rolb
out
mov
sahf
lods
or
test
fadds
dec
or
int
mov
mov
xor
imull
test
test
dec
les
data16
addl
jbe
pop
sbb
iret
in
ljmp
cmp
rorl
icebp
mov
imul
xchg
cmp
out
or
jp
lods
fnsave
aam
icebp
jnp
sar
test
in
pop
int
jbe
fldenv
jmp
sbb
das
mov
lods
test
icebp
clc
sub
shrl
add
sar
push
test
test
mov
fistps
jbe
inc
into
xchg
push
add
mov
push
mov
sub
inc
pusha
sbb
aaa
mov
add
pop
mov
pmullw
push
mov
shlb
stos
fisubl
push
dec
mov
sub
fbld
scas
jp
adc
push
cwtl
mov
in
and
adc
jecxz
pop
aas
mov
test
xlat
daa
mov
pusha
mov
mov
push
xchg
scas
loopne
call
mov
lods
inc
jb
xchg
rcll
and
insb
ficomps
xor
std
lea
pop
lret
scas
test
xor
fsubrs
or
mov
sbb
sbb
enter
call
push
mov
out
lret
xchg
in
test
mov
jecxz
xor
incb
lods
pop
clc
sahf
cmp
ljmp
or
popa
shr
mov
inc
loop
sbb
and
lock
aas
mov
or
jns
es
push
lcall
cld
mov
mov
es
ljmp
pop
cli
add
or
in
mov
out
dec
sbb
dec
pop
sub
pusha
dec
mov
arpl
shll
jae
jmp
inc
je
mov
pushf
mov
or
fsubl
test
das
push
ljmp
jno
cwtl
jmp
push
jne
mov
cmp
xor
sbb
shll
mov
xchg
push
and
mov
push
popf
jg
adc
and
andl
cli
roll
cmc
es
sub
xor
cmp
pop
popf
lret
das
sbb
pusha
lock
mov
roll
inc
arpl
imul
scas
icebp
and
dec
fistpll
adc
lcall
and
or
les
jns
mov
ret
dec
fwait
cmp
mov
lcall
imul
mov
bound
inc
movsl
in
mov
pop
mov
icebp
push
iret
push
enter
inc
sub
repz
mov
js
and
ja
negl
mov
jl
jne
mov
fstl
mov
xor
inc
fs
cltd
retw
pop
push
jb
push
fmull
cmp
cmp
jle
icebp
pop
je
repnz
loope
dec
adc
cmpsb
test
shrl
pop
ljmp
sbb
and
repnz
mov
inc
dec
lods
dec
mov
mov
pop
or
cmpsl
push
scas
fsts
mov
mov
fcomip
dec
jmp
clc
sbb
sbb
ret
mov
adc
dec
iret
pop
insb
push
sbb
mov
test
cld
cli
fiaddl
test
inc
arpl
cwtl
xor
jbe
push
test
leave
xorl
push
shlb
fnstenv
add
sbb
xchg
fdivrl
fcmovnbe
stos
and
jns
jbe
aas
rcr
jp
pop
push
push
into
mov
push
push
mov
sbb
int
mov
out
xchg
andl
push
push
in
loope
psrad
mov
push
adc
outsb
sbb
adc
mulb
scas
test
jae
clc
pop
repnz
jns
ja
imul
jbe
xor
pop
pushf
scas
int
ja
sub
nop
xchg
mov
pop
xchg
mov
xchg
sub
pop
mov
push
sahf
fwait
mov
adc
arpl
sub
push
or
jl
shll
xor
gs
scas
fisubs
cwtl
inc
lahf
sbb
jb
xor
in
pop
shlb
aad
fidivl
ret
fcmovne
sbb
inc
je
fidivrs
cmp
xor
push
popf
outsl
mov
dec
out
aas
push
and
mov
push
mov
fs
das
int
or
push
mov
sub
decb
sbb
inc
stc
inc
mov
test
pop
orb
stc
xchg
repnz
cmpl
or
lret
loopne
ss
push
insb
and
inc
popf
stc
lret
mov
bound
insb
push
xchg
into
adc
ljmp
mov
aaa
xor
int
push
mov
in
addb
xlat
fxtract
jne
cmp
adc
mov
xchg
test
flds
or
inc
je
mov
pop
mov
sbbb
adc
test
scas
daa
cmp
imul
jg
inc
or
or
push
sub
push
pop
js
pop
call
pop
ljmp
imul
adc
bound
sbb
cmp
cli
pop
cmp
sbb
sub
cmc
rcrb
sub
xor
adcb
adc
popf
iret
out
or
fucom
outsb
in
shrb
lcall
addb
call
mov
and
dec
idiv
pop
push
push
cld
stos
push
push
data16
adc
scas
popa
mov
orl
in
mov
xor
inc
popaw
push
add
addr16
and
icebp
xor
inc
and
sti
xchg
sbb
cmp
sub
jns
xchg
addr16
iret
lret
mov
cmp
push
jmp
test
outsl
mov
xor
mov
sar
sarb
dec
inc
lods
push
cmp
cmp
or
stc
loope
out
and
iret
lods
ljmp
inc
mov
pop
icebp
ljmp
cmp
dec
in
stos
jbe
or
cld
add
sarb
jo
sub
mov
stos
jmp
inc
into
movsl
icebp
push
inc
int
add
movsl
pop
dec
dec
mov
lods
dec
inc
pop
jecxz
fadd
jmp
push
movsl
mov
or
leave
xchg
leave
test
push
lahf
rcrl
rcll
das
push
cmp
imul
inc
push
mov
int
jecxz
xchg
cli
push
xchg
out
fdivrs
data16
shlb
cmp
scas
mov
lret
add
cmp
and
inc
pop
mov
push
push
lods
push
mov
mov
sub
cltd
arpl
add
test
loope
mov
cmp
or
ds
mov
dec
add
xchg
repz
ret
inc
pop
cmp
mov
jae
sbb
adc
mov
lock
fwait
out
jl
pop
push
inc
add
push
jo
loope
adc
inc
xchg
xchg
sbb
pop
xchg
cmpsl
cmp
cmpsb
dec
push
jbe
scas
outsl
jbe
sub
nop
loop
dec
adc
mov
aad
mov
jo
jle
iret
push
inc
data16
cs
rcrb
scas
cmpb
sahf
xlat
ljmp
mov
push
sub
cmp
mov
inc
mov
mov
ret
outsb
inc
shl
dec
dec
jl
aam
inc
movsb
cmp
mov
push
push
sub
pop
mov
insl
push
xor
xchg
das
addr16
jne
push
fiaddl
popa
lea
inc
mov
shrl
test
insl
sub
xchg
out
jl
movsl
das
aad
les
mov
mov
and
std
cmp
pop
inc
mov
sti
ja
jno
sbb
mov
sbb
or
clc
jo
mulb
jp
pop
jp
jecxz
add
stos
outsl
scas
xor
add
dec
hlt
dec
push
mov
int
and
stos
adc
jae
adc
cmp
xor
fmull
aas
xorl
jno
mov
fst
jne
hlt
sbb
lods
and
testb
aas
dec
dec
aam
xor
add
push
mov
push
test
sbb
movl
lea
gs
xchg
ljmp
and
push
sahf
xchg
jle
xor
pop
std
mov
in
sub
dec
and
repz
jle
daa
mov
mov
cli
dec
sbb
adc
shrl
or
hlt
inc
push
jmp
sub
jbe
mov
jmp
dec
adc
pop
aaa
aam
fwait
add
sub
jns
fidivrs
mov
out
cld
sub
fcomi
dec
enter
pop
xchg
test
call
cmp
imul
icebp
vpackssdw
sbb
mov
cmp
cmp
push
xlat
cmp
and
fwait
dec
xchg
ljmp
cmp
fcoms
insl
sbb
dec
or
fsub
adcb
aaa
xchg
cld
adc
adc
icebp
or
adc
shll
mov
int
js
or
inc
cmpsl
leave
idivl
inc
arpl
int
fstl
jl
or
mov
jle
jp
data16
inc
adc
fmulp
insb
pcmpeqd
pop
inc
xchg
leave
mov
sbb
scas
inc
sti
jg
test
lods
aas
sbb
sarb
xor
jb
mov
inc
std
cmp
subl
or
cwtl
popa
mov
notl
mov
testb
mov
dec
xchg
bound
sbb
adc
mov
pusha
mov
sub
outsl
mov
mull
jae
stos
inc
sbb
enter
pushf
aas
push
je
push
lahf
gs
mov
cs
nop
mov
mov
fcoml
cltd
scas
aas
sbb
inc
loopne
jb
add
dec
cltd
shl
int3
mov
pop
jb
push
cmp
je,pt
int3
mov
lret
mull
imul
movsw
mov
mulb
loopne
cmp
or
sub
xlat
jbe
xor
std
inc
inc
test
orb
nop
movsb
cmp
inc
data16
mov
mov
pop
popa
icebp
pop
out
xor
inc
push
push
fidivrl
stc
fcomip
cmp
repz
je
scas
movsb
movsl
test
iret
test
stos
call
mov
loop
in
aam
fadd
sbb
outsl
inc
and
push
push
lcall
out
mov
inc
fwait
std
lret
frstor
shl
pop
adc
cmpsb
in
inc
sbb
mov
arpl
and
push
inc
and
cli
notl
outsl
das
mov
lods
inc
inc
fisubrl
push
std
mov
int
fldl
rorl
mov
mov
repz
push
shlb
outsl
shrb
lcall
lock
aaa
inc
js
sbbl
and
jne
cmpsb
je
cwtl
cmovp
inc
or
popl
xor
fsts
lea
adc
and
adc
or
xorb
mov
sbb
ret
lahf
std
in
dec
sbb
jp
adc
dec
inc
mov
std
jle
cmp
daa
bound
inc
popf
das
jle
aam
push
push
mov
jno
jmp
adc
mov
push
out
mov
mov
out
add
repz
in
pop
loope
mov
idivl
push
cmp
sbb
jmp
or
add
mov
or
dec
dec
dec
mov
sbb
les
inc
les
lea
cmp
aas
jno
pop
pushf
xor
sbb
dec
cmp
iret
jb
iret
js
es
or
push
fsubs
pushf
ret
call
hlt
in
xchg
sbb
inc
pop
movsb
mov
rolb
sbb
cmc
sbb
test
mov
lret
out
dec
jne
stos
divl
das
loop
roll
out
xor
and
imul
dec
adc
cmp
pusha
ss
stos
insl
or
push
inc
test
out
pop
mov
mov
ds
aad
ja
push
clc
dec
pop
mov
movsl
and
das
addr16
repz
fcmovnu
icebp
mov
cmpsl
or
cld
paddusw
or
test
mov
jbe
scas
jp
push
nop
or
mov
cwtl
xchg
push
inc
das
sbb
xchg
out
lret
shlb
add
test
mov
int
fnstenv
outsb
mov
fisubs
pop
cmpsl
push
push
movsl
roll
pop
add
sub
es
pop
repnz
pop
cli
test
fildl
mov
popf
std
pop
lret
jbe
jne
fdivrl
or
inc
dec
aaa
jo
and
cmc
shrb
mov
cmp
push
clc
rcl
xchg
es
pop
push
jmp
push
hlt
sub
orb
call
lea
xchg
call
mov
jno
inc
inc
lret
mov
push
lcall
fwait
xor
inc
pop
mov
and
xor
ds
dec
imulb
push
add
xchg
mov
ret
call
or
dec
aam
enter
aad
adc
mov
aas
pop
mov
or
mov
mov
add
xor
and
testb
fs
xchg
xor
push
cmp
push
sub
sub
xchg
sbbl
fisubl
das
stos
sub
lcall
je
insl
cmp
fnsave
sub
roll
xchg
test
call
push
ja
cs
jns
lahf
mov
stos
xor
cld
push
or
in
and
push
jge
stos
mov
aad
or
mov
icebp
xor
add
hlt
and
inc
pop
or
sub
test
popf
lods
stos
dec
rorl
sub
loope
pop
dec
pop
pop
addb
aam
sub
enter
cmp
mov
lret
add
push
mov
sbb
mov
stc
push
dec
dec
or
mov
insl
mov
movsl
inc
iret
inc
sbbb
aad
movl
push
pop
pop
std
or
aas
mov
bound
and
cltd
pop
bound
in
cli
mov
mov
xchg
aad
and
sub
int3
sub
std
and
enter
shr
and
notl
jecxz
sbb
cmpsb
adc
in
xchg
movsb
sub
pop
cmp
nop
out
imul
lea
popf
sbb
outsb
mov
inc
jmp
push
aam
jge
jb
jo
stc
xchg
push
sub
jbe
add
lret
sti
out
inc
sbb
mov
cmc
mov
adc
je
je
fwait
shrb
loope
add
dec
sahf
stos
xlat
pop
out
cmp
xor
and
in
mov
scas
stos
add
cmp
cmp
mov
push
aas
push
jmp
push
xor
out
hlt
aaa
dec
stos
inc
mov
push
push
mov
xor
fldenv
je
jle
pop
mov
mov
mull
jbe
in
inc
pop
pop
js
mov
rorl
in
fimull
xor
shrl
movsl
dec
cmc
loop
push
lods
lods
push
mov
and
fldl2t
fldenv
sbb
jae
test
paddw
inc
dec
adc
sub
xchg
adc
xor
repnz
ds
outsl
lret
dec
fildl
push
jae
into
addr16
add
cwtl
xor
mov
jnp
imul
xchg
jg
lods
stos
popf
push
sbb
adc
inc
test
adc
pushf
adc
shlb
or
mov
popl
cmp
push
jb
push
sbb
pop
push
or
xor
test
xchg
std
rolb
jo
jnp
arpl
dec
push
mov
mov
xchg
ds
cwtl
out
mov
inc
mov
out
xchg
outsb
roll
pop
push
mov
lds
in
push
out
push
gs
pop
jns
sbb
inc
call
repnz
adc
mov
xor
out
push
cmp
jbe
or
fsubs
push
pop
mov
ss
scas
cmpl
add
mov
lea
ss
adc
popa
test
cmpsl
jns
pop
jmp
adc
inc
movb
jne
add
jns
dec
mov
mov
jecxz
xchg
ss
jno
shrb
dec
pop
ds
inc
cmp
rorl
mov
xor
inc
or
mov
cmp
and
ja
xchg
lcall
push
dec
jl
and
ret
lahf
dec
adc
lods
inc
and
inc
int3
mov
mov
sub
arpl
idivl
or
ja
xchg
les
nop
sub
inc
scas
xchg
inc
fcmove
mov
xchg
xchg
nopl
mov
outsl
test
mov
gs
fs
mov
lea
je
sub
out
faddp
mov
or
add
daa
xor
pop
ficoms
cli
or
out
test
or
cmpsl
stc
test
insb
push
push
jp
popa
into
jo
pop
rorb
jp
jnp
xchg
jo
add
int3
sbb
in
jne
pop
xor
dec
cmp
idivb
inc
ficoml
jmp
scas
pop
cmp
push
inc
sbb
cmp
ret
adc
cmpsl
rol
jb
lods
xrelease
std
or
fnstenv
cmp
lods
test
shrl
mov
enter
mov
and
cmp
in
dec
mov
pop
call
rcll
stc
lcall
in
scas
inc
xchg
push
out
imul
mov
ret
or
jo
pushl
mov
fldl
outsb
loope
mov
icebp
insb
mov
and
push
mov
xchg
addr16
outsb
jae
push
aad
mov
in
sti
xor
sub
dec
add
rcll
idivl
repz
adc
cmp
into
es
loope
add
jns
leave
rorb
mov
jne
fs
mov
sbb
cmpsb
jecxz
push
cmp
orb
adcl
out
stos
dec
shll
stos
cmp
lods
fidivrs
loope
stos
adc
mov
mov
mov
mov
mov
pop
pop
sub
fcmovbe
push
mov
testb
mov
jp
push
test
imul
mov
mov
outsb
movsl
inc
sahf
ss
inc
sti
cmc
dec
fnstsw
aas
das
cmp
fdivrs
cwtl
testb
mov
movsl
push
xchg
lea
xchg
aaa
pusha
ss
xor
icebp
clc
inc
lods
jmp
push
xchg
popf
and
andb
add
loop
push
sbb
pusha
addr16
lea
push
cli
push
cmp
mov
mov
movsl
and
fmull
jmp
and
icebp
xor
dec
ds
inc
lds
movl
mov
mov
push
push
es
mov
sbbl
scas
divb
mov
mov
rcrb
sub
push
pop
push
clc
sbb
jnp
pop
lahf
fwait
je
xchg
cwtl
test
decw
je
jae
pop
xchg
arpl
je
cld
xorl
popa
jg
dec
in
cli
cs
add
xchg
test
xchg
pop
imul
out
push
out
enter
fbld
push
lret
add
int3
cli
xchg
popf
jne
lods
add
mov
dec
ja
ficompl
push
dec
mov
cmp
sub
loope
leave
xor
popa
fs
imul
push
jl
xor
mov
mov
mov
cmp
fadd
in
pop
ja
ds
mov
mov
mov
inc
cwtl
push
mov
pop
or
pop
mov
fstl
push
jnp
or
jnp
dec
scas
mov
cmp
dec
dec
fildl
outsb
xchg
ja
daa
cmc
sbb
dec
mov
aam
ret
out
popf
inc
cwtl
das
jne
push
jno
inc
mov
jecxz
inc
push
mov
iret
icebp
popa
mov
jmp
and
adc
cmp
fadd
mov
and
mov
dec
fistps
xchg
sbb
pavgb
xchg
inc
jno
adcl
cmpsb
ss
jecxz
jne
je
sbb
push
stos
inc
dec
cwtl
lcall
adc
push
adc
mov
sbb
pand
add
adc
push
in
inc
add
es
and
adc
mov
or
les
cmp
mov
cmp
mov
xchg
das
insb
add
jl
push
dec
or
jb
push
cmp
or
iret
cltd
inc
jl
addl
loopne
cmp
or
dec
pop
xchg
test
in
cmpsb
icebp
gs
xchg
adc
mov
cmp
jno
out
mov
cmp
arpl
xchg
and
adc
xorb
js
cmp
mov
mov
push
dec
pop
sbbb
ljmp
bound
lahf
or
lods
outsl
pop
or
into
and
imul
stos
xchg
hlt
aad
inc
rolb
xchg
xor
jmp
mov
mov
aam
cld
pop
add
cmp
sbb
loopne
ret
xchg
std
xchg
cs
sbbl
fs
pop
xchg
inc
ss
push
adc
shl
test
cmpsl
sub
push
add
das
mov
lods
pop
movl
test
neg
imul
mov
imul
pop
push
adc
outsl
test
lods
jg
movsb
mov
imul
dec
outsl
cmp
mov
lea
adc
ret
fwait
and
or
popf
sub
loopne
jl
add
xchg
daa
cmp
push
cwtl
das
and
pop
jae
inc
mov
jae
cli
xchg
stc
xchg
or
mov
push
add
jns
inc
mov
daa
xor
xchg
outsb
pushf
pusha
push
cmp
rcrl
mov
jnp
mov
std
ljmp
xchg
popa
sbb
push
in
cmc
jecxz
sub
sarl
pop
iret
les
divl
test
sub
jbe
add
out
test
addr16
mov
add
xor
fcmovnbe
pop
loopne
lea
movsb
int
loopne
repnz
imul
les
loopne
in
jle
adc
std
xor
pop
jo
movsb
mov
subb
adc
int3
out
shl
shrb
loopne
or
cmpsl
inc
push
fwait
cmpsl
inc
push
xlat
jo,pn
jo
rcr
int
xchg
mov
test
call
lret
jne
fistpll
xor
dec
adc
mov
mov
clc
scas
aad
in
sub
jnp
jle
dec
imul
cmp
dec
pop
xchg
in
xor
arpl
fdivs
fsubrl
cmp
jle
push
xor
arpl
shrb
adc
push
iret
repnz
push
pop
jne
sarb
xor
jb
push
jne
push
outsl
aas
dec
fucomi
dec
sbb
pop
cmc
rcll
mov
sub
cmp
divl
into
pop
imul
scas
xorb
es
mov
inc
inc
repz
jae
mov
ds
shll
pop
lea
xor
movsl
shl
dec
nop
shll
mov
cld
cmpsl
out
fisttpl
adc
dec
lock
sub
es
mov
and
cmp
sub
stos
inc
lcall
mov
pop
lahf
push
xchg
shrl
add
lahf
cmpb
mov
sbb
inc
cltd
mov
push
push
xchg
adc
mov
jne
cmp
pop
out
sub
jns
push
cs
or
jnp
xor
sbb
adc
sbb
in
jae
and
mov
test
mov
fisttps
add
add
mov
clc
inc
xor
jbe
je
cmpsb
cs
in
cmp
ljmp
jecxz
mov
sub
mov
insb
inc
inc
in
leave
cmc
jo
dec
ljmp
mov
shll
xor
push
fstpl
xor
xor
popf
popa
adc
hlt
in
push
ja
out
js
orb
add
lret
and
add
push
ja
mov
filds
mov
decl
divb
add
int
mov
jmp
call
outsb
sbb
or
or
sub
rcrl
jne
leave
push
xchg
mov
pop
out
xchg
ret
hlt
icebp
aas
push
xor
dec
neg
arpl
or
adcb
les
ss
jmp
leave
push
outsb
dec
jbe
in
jl
sub
cmovae
outsb
out
mov
mov
xchg
jl
jnp
sbb
mov
ret
inc
shrl
into
std
arpl
testl
dec
nop
fistpl
pop
ret
push
hlt
mov
outsb
cmp
daa
add
pop
sub
sbb
imul
xchg
nop
iret
retw
pop
out
in
test
jecxz
push
lcall
mov
push
push
inc
movsb
loopne
mov
jl
fldcw
cmp
sub
andl
test
mov
je
sarl
push
adc
ljmp
cmp
arpl
adc
imul
shr
adc
mov
mov
pminsw
jmp
pop
cmpb
mov
fs
and
incl
dec
cmp
xchg
push
lods
dec
push
jge,pt
insb
inc
cmp
xchg
cltd
mov
or
aas
outsb
mov
mov
dec
out
clc
push
fbstp
in
sub
and
mull
inc
jge
sub
iret
xchg
add
repnz
sbb
test
repz
adc
cmp
fnstenv
or
test
test
fucomp
adc
adc
outsb
jecxz
adc
loop
out
mov
hlt
les
stos
pop
fdivrl
dec
cmp
jns
jg
or
cmpsl
int
js
repnz
aas
lods
or
cmp
jae
aam
fs
xor
ss
pushf
inc
push
jns
mov
or
add
xchg
pop
lcall
and
jge
mov
cltd
cmp
inc
int
push
pop
xlat
mov
jecxz
sti
vsubpd
push
jmp
movsb
ja
sbb
fisubl
xchg
and
xor
addr16
inc
fnsave
stc
jo
dec
or
and
pusha
in
jbe
xchg
fdivrp
lret
xchg
stos
and
xor
ficompl
mov
out
jge
std
cmp
test
shl
jl
jg
sub
add
in
lret
lahf
mov
mov
cld
movsb
test
and
xor
pop
stos
into
inc
push
inc
div
push
xor
cmpsb
int
shlb
cwtl
add
mov
xor
and
lea
mov
sbb
dec
pop
cmp
xlat
cs
scas
mov
popf
in
ja
sbbb
lock
lret
push
inc
mov
inc
jg
jne
in
push
and
scas
jnp
xchg
dec
data16
movsb
mov
jecxz
fldl
loopne
mov
xor
inc
and
add
fimuls
xchg
sbb
out
lea
testl
arpl
aam
lea
adc
or
push
outsb
sbb
sbb
fwait
mov
rclb
mov
lret
sti
sbbb
inc
ljmp
jmp
ret
pop
mov
or
inc
dec
dec
ja
mov
in
aaa
jbe
jbe
stos
test
push
push
adc
add
inc
add
and
aaa
in
pusha
movsl
xchg
mov
add
and
mov
ss
and
xchg
mov
sbb
ficoms
cli
iret
mov
fisttpl
mov
in
mov
jmp
sub
cmc
repz
adc
mov
cmp
jmp
pop
dec
sahf
clc
jecxz
sub
mov
or
sub
xor
jns
data16
push
cltd
cmp
jecxz
idivl
pop
test
cwtl
ret
imul
arpl
xchg
sub
pop
and
xor
gs
cmp
push
movsl
jae
dec
and
test
or
push
sahf
add
mov
fcoml
lods
mov
loope
and
addr16
xchg
xchg
sbb
sub
jnp
popf
add
inc
in
loop
pop
ljmp
int3
pop
dec
and
pop
lods
inc
mov
push
lret
aad
in
inc
pop
fisubl
dec
out
xor
cmp
cmpsb
jno
sahf
dec
cmpsb
and
inc
xchg
mov
inc
add
mov
stos
push
pop
sahf
addb
scas
and
adc
or
test
push
cmpsl
lcall
lret
sti
inc
or
lcall
push
mov
ror
pop
movsl
les
xlat
jnp
cltd
push
inc
aas
ret
cmpsb
std
loope
mulb
aad
mov
xchg
jnp
cs
pop
in
sub
lahf
add
push
jle
gs
cmp
repnz
mov
xor
fsin
sbb
mov
cmc
daa
inc
in
xchg
cmp
mov
lret
aam
sti
je
pop
inc
pop
mov
jl
jge
popf
sub
repnz
sbb
cmp
in
pusha
cmp
xchg
fsts
scas
pop
mov
lret
jns
jl
mov
sbb
fcomp
push
add
inc
push
clc
or
push
fldenv
out
enter
xchg
cmp
dec
roll
ljmp
in
in
sbb
xchg
loop
icebp
cmp
xchg
pop
cltd
adc
stc
inc
cmp
mov
cld
inc
cli
push
pop
adc
xor
xlat
inc
gs
lods
movsb
cmp
lods
push
and
lods
ret
imul
gs
out
aam
aam
inc
inc
cmp
loope
enter
sbb
jl
sub
outsb
leave
lds
lea
lret
sub
mov
cmpl
pop
popf
add
iret
mov
dec
imul
aam
jb
dec
xor
adc
xlat
icebp
pop
mov
ds
loope
pushf
daa
jge
imul
dec
xchg
shl
repnz
ss
mov
xor
dec
or
sarl
movb
dec
xchg
xchg
and
repnz
inc
and
adc
ret
fldenv
sbb
lahf
in
adc
in
imul
inc
insb
lock
cmp
data16
lds
pop
in
lcall
xchg
in
aad
ljmp
fsubr
lret
popaw
sbbb
hlt
mov
jae
mull
lods
mov
pushf
pop
shrl
and
sbb
sbbl
pop
jp
push
in
int
cmp
loopne
out
rcr
daa
mov
xor
add
mov
aam
fwait
sar
in
cwtl
sbb
sbb
jbe
lods
xor
lret
pushf
imul
mov
xor
in
mov
les
ss
lods
arpl
stos
mov
mov
sbb
push
cwtl
aam
into
cmc
jnp
dec
lds
add
push
lock
lods
and
pop
ljmp
pop
outsb
mov
js
jle
dec
shll
int3
clc
xchg
fmuls
sbb
xor
repz
and
dec
loop
push
call
fimuls
cmp
push
loop
mov
jle
pop
sti
push
jmp
push
stc
or
movsl
or
movsl
cmp
gs
add
mov
popf
loopne
adc
out
or
in
pop
dec
cmp
dec
xor
jg
das
lret
rol
lret
out
sahf
ret
mov
test
imul
jns
adc
mov
dec
in
stos
cltd
xor
ss
jns
fsubrp
das
test
dec
out
pushf
sarb
data16
ds
stos
mov
repnz
xor
xor
pop
jae
jmp
out
addb
sub
inc
mov
push
inc
imul
pushf
fsubr
sahf
cmp
push
out
scas
push
movsb
fs
jg
xor
addr16
mov
jns
push
jmp
sub
outsl
push
push
adc
dec
lret
mov
mov
fwait
jbe
mov
push
cltd
shr
iret
mov
xchg
repz
xchg
test
xchg
xor
arpl
popa
dec
push
mov
xor
pop
fdivl
inc
gs
daa
pop
ja
and
scas
inc
aam
popa
hlt
ds
add
insl
in
push
pop
mov
dec
aad
sbb
movsl
stos
dec
loopne
dec
addr16
bound
xor
jne
dec
push
stos
pop
insl
fnsave
scas
inc
mov
mov
push
jp
mov
jl
push
push
adc
int
std
icebp
mov
pop
shll
shll
sbb
out
imul
mov
sub
lcall
loop
lods
mov
imul
cmp
out
or
jb
xor
inc
and
and
push
testl
mov
fstl
fucomi
pushf
scas
push
xchg
ficomps
iret
cmpsl
fsubrs
fwait
jge
cli
jbe
fs
cwtl
adc
out
js
and
push
mov
fcmovbe
xor
in
adc
add
lea
pushf
pushf
pusha
or
or
mov
in
outsl
loope
out
sbb
jo
les
fldcw
push
pushf
cli
aad
cld
xchg
movsl
cld
inc
and
loope
jb
test
jo
jnp
xchg
das
cmp
push
cli
pushf
xchg
jl
mov
lahf
push
in
mov
jne
add
sbb
test
lcall
adc
jmp
mov
loope
lods
fldl
adc
jne
xor
movsl
jb
and
dec
insl
xorl
leave
sbb
aam
fsubrl
mov
out
jge
mov
lahf
fwait
jnp
lods
cmp
fwait
sub
add
jne
xor
adc
and
push
inc
mov
cltd
aaa
jg
xor
xchg
les
sbb
insl
push
movsb
cmp
insl
aaa
push
lahf
mov
std
add
cmpsl
sub
cmp
ret
pop
repz
mov
cmc
out
cli
jp
bswap
call
loop
or
fmull
das
addb
insl
sub
std
xor
sub
ret
and
and
xchg
clc
lea
sarb
cmp
adc
jae
push
in
ficompl
jp
jecxz
inc
dec
or
mov
jno
push
mov
cmp
mov
ficomps
xlat
lahf
daa
or
and
pop
shll
subl
sub
sub
out
rol
lret
dec
dec
pop
or
fsubrl
xor
push
clc
cmp
xchg
cli
ds
stc
xor
outsb
dec
in
push
jl
add
adc
pop
and
cs
cmpb
lds
ja
sbb
lcall
and
lret
fldcw
or
and
mov
sbb
add
fsubp
jns
mov
rcrl
jo
add
or
rol
lods
jne
fildll
sbb
xor
loope
push
hlt
mov
dec
gs
cmp
cmpsl
popf
jns
ret
stos
in
addr16
in
sarb
in
mov
adc
inc
pop
nop
mov
push
cmp
subb
jo
outsl
jnp
mov
inc
fucomi
idivl
movd
pop
rolb
jg
sbb
adc
push
daa
pop
mov
lds
sub
pop
add
xchg
push
out
pushf
mov
addr16
jno
or
lret
sub
jns
inc
fildl
cld
mov
jecxz
inc
lcall
and
jns
repnz
sub
lret
mov
outsl
mov
mov
pop
mov
add
das
mov
sbb
and
bound
filds
es
icebp
xchg
jmp
mov
xchg
mov
test
ficoms
xlat
rorl
repz
add
mov
cmpsb
dec
sbb
xor
push
arpl
je
movsl
xchg
adc
xchg
divb
push
jne
dec
push
fwait
push
mov
subl
in
pushf
sbb
dec
stc
popf
std
jecxz
mov
fistps
push
mov
cltd
mov
les
stos
push
fsubrl
push
and
pusha
mov
shrb
mov
xchg
stos
inc
fnstsw
sbb
sub
rcrb
pop
mov
mov
xchg
int
fbld
mov
div
adc
roll
jae
add
xor
inc
gs
scas
sbbb
inc
lods
movsb
mov
mov
dec
test
out
aad
out
cltd
or
jbe
dec
push
jno
pop
in
jmp
mov
mov
xchg
data16
mov
movsl
mov
push
add
mov
jle
jecxz
inc
mov
outsl
out
xchg
imul
jnp
xchg
jmp
jno
loop
int
mov
fnstsw
into
mov
add
lret
cs
cwtl
in
mov
mov
pop
adc
pop
arpl
xchg
adc
push
lods
add
jae
setns
ja
stos
mov
jnp
cmp
push
add
rcl
cmc
ja
out
cltd
xchg
xor
aaa
cwtl
ljmp
push
lret
cmpsl
sub
fcoms
dec
loope
xchg
add
decl
out
stc
xorb
aad
xchg
dec
mov
ficomps
rclb
or
and
dec
xor
scas
sub
fs
int
and
mov
cmpsb
cmp
cs
or
or
fcmovbe
push
jp
lahf
xor
scas
cmpl
in
pop
mov
mov
inc
adc
out
jmp
pop
push
loop
lcall
and
addr16
mov
mov
xchg
dec
pop
enter
lods
bound
inc
lahf
jl
jb
shlb
in
mov
mov
gs
pop
adc
push
lret
adc
jb
pop
cmp
add
jae
mov
hlt
xor
fnstsw
push
jne
cvtpi2ps
jno
xor
js
cmp
and
fstl
ret
jmp
mov
lret
xchg
std
vmread
jno
sbb
nop
xchg
mov
ss
out
mov
pop
fwait
or
aam
inc
jbe
jo
jno
or
inc
xchg
sub
movsb
inc
dec
xor
stos
inc
popf
ljmp
arpl
add
into
aaa
mov
dec
adc
imul
orl
xor
sahf
add
mov
jp
push
insb
and
dec
and
std
loop
imul
xor
pop
dec
jae
scas
add
cmp
ffree
inc
mov
aad
cmp
or
push
int3
adc
xchg
xor
cmc
aam
xchg
fs
push
fcmove
jmp
stos
adc
pop
adc
imulb
xor
movsb
or
sbb
dec
adc
mov
les
push
lods
fistpl
inc
int3
jo
dec
sbb
fbstp
push
inc
lods
inc
lcallw
push
mov
mov
inc
adc
imul
fcoms
popf
out
enter
mov
in
mov
jbe
fmull
and
loopne
outsb
mov
xchg
adcb
add
sti
nop
shrb
jne
sub
rcr
push
icebp
andl
repz
jle
xchg
out
mov
dec
imul
ret
sub
fcmovu
divl
imul
xchg
or
fs
xor
push
mov
ret
xor
or
jno
daa
subb
adc
outsb
or
jmp
sbb
mov
jmp
scas
push
fcoms
in
test
icebp
xchg
inc
mov
sti
es
pusha
rcrb
cmpsb
sbb
adc
push
jge
movsl
shl
add
push
mov
jbe
sub
clc
pop
xor
push
pop
pushf
aas
xchg
jne
dec
and
xchg
call
nop
and
lock
enter
push
jle
jmp
add
std
or
ret
fs
push
jb,pt
pop
js
out
es
sbb
sbb
jmp
mov
cmp
jmp
or
fbld
push
xchg
nop
pop
rolb
sub
ljmp
jno
mov
pop
dec
inc
fsub
jns
dec
aas
mov
imul
xchg
sub
inc
cmpsb
les
insb
cmpsl
out
test
sahf
pushf
adcb
or
adc
fidivl
loop
lods
popa
xor
call
cmp
pop
dec
pusha
jle
gs
push
fbld
pop
ret
jne
sbb
mov
push
jmp
sbb
push
cmp
jae
cmp
int3
pop
fsubrl
add
hlt
outsb
mov
push
mov
adc
popa
lods
mov
mov
das
mov
sarl
or
jnp
jecxz
rorl
mov
dec
in
lock
pop
xchg
js
ficompl
xchg
jl
fisttpll
push
push
mov
inc
xor
addr16
pop
fistl
xchg
sub
mov
adc
jbe
jecxz
pop
mov
subl
into
sub
popa
push
jo
xor
sub
stc
mov
cmp
mov
pop
dec
xchg
push
test
aam
subb
jnp
es
dec
adc
jns
sbb
jne
jb
lcall
sahf
or
jecxz
fs
sbb
sbbb
dec
pop
cmc
mov
fidivrl
negb
xor
out
mov
mov
call
cmp
icebp
mov
push
sbb
sub
loope
les
mov
pop
jno
sbb
les
jle
popa
and
aad
inc
ja
push
sarl
lods
stos
icebp
push
icebp
adc
enter
mov
jno
inc
fstps
pusha
aaa
inc
sti
xchg
sub
mov
loope
xlat
ficoml
dec
movsl
into
xor
mov
sbb
inc
push
pusha
sub
mov
fdivl
dec
sti
pop
pop
cli
lea
cmp
in
insl
cs
jl
jns
lcall
and
mov
inc
out
sub
pop
scas
icebp
scas
inc
and
mov
mov
into
gs
rclb
xchg
insl
out
orl
pop
int3
push
dec
in
push
pop
fisttpl
cs
add
stc
mov
mov
popf
xor
pop
test
sahf
fs
sub
stos
sti
sti
jmp
das
das
lock
push
orb
sbb
add
or
out
push
lods
fdiv
xor
mov
mov
sub
leave
pop
out
cmc
call
jae
dec
adcb
cmpsl
cmp
fists
out
fdivl
cmp
lods
push
fucomp
lea
and
and
bswap
fstpt
pop
jno
cwtl
cmpsb
dec
lea
outsb
and
pop
cmp
ljmp
data16
movl
xchg
mov
push
push
lods
inc
mov
mov
stc
jge
sbb
rol
jno
mov
jae
push
sub
push
std
xchg
and
lret
sti
icebp
pop
testb
inc
xor
xor
pop
lcall
and
xchg
mov
jp
fs
xchg
pop
mov
cwtl
das
in
add
sub
push
cmp
lahf
mov
shl
xor
dec
pop
mov
les
pop
sarl
adc
jo
and
xor
pop
dec
pop
dec
inc
mov
sub
in
rcrb
jl
pop
push
std
leave
cmpsb
jne
jecxz
jo
sub
dec
push
data16
xchg
daa
shrb
adc
loop
movsl
cmpl
je
lcall
cmp
out
inc
icebp
or
rclb
jge
mov
rorl
and
dec
arpl
sub
cmpsl
xchg
imul
adc
mov
cmc
mov
popa
sub
cwtl
inc
mov
fidivl
call
fwait
inc
mov
ret
jmp
lahf
dec
mov
sub
bnd
aas
mov
and
ficoml
das
int
push
pop
push
cltd
test
or
jnp
repnz
movsl
mov
jmp
mov
xor
cmp
pop
xor
mov
ret
mov
mov
sub
push
jnp
enter
cmp
cltd
xor
fidivrs
jnp
mov
jecxz
incb
inc
add
lcall
in
mov
jae
push
outsl
inc
addr16
or
lahf
out
test
decl
lods
inc
xchg
sbb
or
icebp
roll
dec
xchg
dec
push
fistpl
push
outsl
adc
test
adc
or
pop
jo
js
imul
test
insb
stc
or
out
repz
int
scas
jns
push
pop
push
call
mov
daa
repnz
mov
aam
push
jmp
aaa
in
jne
inc
push
pop
jecxz
inc
xchg
mov
les
mov
mov
filds
les
xor
push
inc
pop
ds
ret
mov
mov
push
adc
test
sub
cmpsb
lock
insb
aad
xor
pop
push
adc
xchg
cld
cmp
icebp
movsl
sub
inc
fwait
pop
add
sub
in
cmp
jns
outsl
jecxz
roll
mov
outsb
in
cmpb
mulb
pop
in
push
repz
pop
lret
inc
inc
std
js
push
pop
rcr
repz
mov
movsl
in
movsb
cs
hlt
pop
xor
sbb
addr16
mov
test
xlat
or
loope
int
mov
js
fbstp
add
movsbl
les
mov
adc
out
mov
int
fdivr
sbb
jbe
push
jae
cmp
mov
lods
ss
lahf
clc
xchg
adc
push
repz
jo
lea
mov
inc
repz
and
sbb
ficoms
xchg
pop
jge
mov
push
push
lods
xchg
dec
push
les
cltd
fst
cmp
mov
jp
sbb
enter
xchg
enter
xor
fstpt
fidivrs
jge
mov
or
cmp
lret
dec
mov
out
movsl
inc
xchg
sbb
pushf
lea
dec
loopne
jnp
inc
lods
add
sub
mov
ja
mov
fdivl
fstpl
loop
inc
pop
jmp
pop
out
sub
fbld
or
pop
pusha
xchg
es
mov
push
loopne
and
mov
inc
dec
jmp
lret
lock
jp
xor
repnz
das
lods
fimull
sbb
test
stos
xor
fsubl
into
gs
js
je
and
arpl
and
jns
insb
jle
lcall
lret
push
pop
sub
pushf
xchg
adc
adc
lods
mov
mov
adcl
inc
mov
mov
arpl
jnp
mov
aad
mov
add
cld
aam
js
adc
xchg
stos
jmp
shr
repnz
inc
cmpsl
add
pop
cmc
xchg
dec
loope
adc
inc
cmpsb
push
std
pop
fadd
sbb
clc
xchg
addr16
sub
cmpsl
xchg
ljmp
stos
mov
push
fcompl
mov
repz
sbb
loopne
insl
add
je
push
mov
xchg
lret
add
fbstp
shlb
call
outsl
push
pop
jo
and
das
xchg
out
lret
jp
sbb
xor
jb
shll
es
mov
mov
test
inc
or
add
push
jno
arpl
sti
inc
xor
aas
fucomp
push
les
minps
pop
test
xchg
sbb
test
notb
jb
inc
adc
fsub
dec
pop
jae
scas
test
test
jmp
jae
sub
jno
and
push
mov
pusha
adc
inc
adc
sbb
call
out
gs
lcall
adc
cmp
flds
cmp
push
push
fwait
mov
lea
pusha
test
xor
loop
test
xchg
and
in
es
push
in
inc
pusha
pop
popa
andl
push
outsb
xlat
xor
pusha
mov
pop
mov
pop
mov
xlat
push
in
xor
je
out
push
mov
sub
mov
in
xchg
or
lds
xchg
xor
fistpl
test
mov
push
in
scas
cwtl
jbe
mov
ss
adc
mov
les
xor
jo
pop
shll
jne
cli
loopne
ss
cld
stos
jl
cwtl
push
notl
imul
sbb
hlt
mov
ss
int
add
and
lcall
scas
lods
dec
imull
movsl
jp
aaa
rcrl
add
sub
cs
lret
pop
xor
gs
ficoms
shrb
jno
ret
pop
xchg
add
pop
mov
push
sub
out
es
in
ja
aas
scas
inc
outsl
in
ficoml
aaa
movsl
cwtl
and
fsubr
and
fidivl
stos
mov
addr16
daa
cmp
inc
fcmovnu
je
icebp
sub
pop
and
push
or
pusha
notl
mov
pushf
inc
movsl
inc
jp
out
pop
orl
fdivr
ljmp
cltd
mov
or
sub
sub
loope
shl
scas
mov
loope
imul
or
mov
cmp
cmpsl
push
xchg
sub
mov
lahf
insb
inc
fisubrs
inc
stos
jl
mov
pushf
subb
push
insl
push
clc
fdivrs
ds
add
mov
dec
add
add
ret
repnz
pop
test
sbb
push
fsubrs
popa
enter
sbb
int3
fcomps
lods
addr16
fdivs
xchg
scas
xor
lahf
arpl
push
ss
jb
pop
movsl
or
xchg
lods
xchg
pop
je
dec
and
xchg
sub
bound
insl
jne
sbbb
incl
test
cmp
mov
xor
int3
popa
xor
ret
aaa
push
or
outsl
fstpl
push
pushf
dec
xor
xchg
loope
into
mov
dec
subb
xchg
mov
mov
inc
dec
sub
loop
lret
bound
adc
cli
ds
inc
push
aam
lods
add
ret
pop
loopne
pop
adc
adc
into
fwait
xor
ret
out
jae
dec
movsl
ja
lahf
lahf
dec
and
or
sbb
pushf
or
inc
ljmp
iret
js
pop
daa
mov
pushl
xchg
jg
adc
data16
das
inc
mov
testb
sub
in
cli
dec
xchg
add
xor
sbb
ds
pop
repz
jae
add
cmpsl
scas
jl
rclb
dec
out
insl
loop
adc
inc
cmpsl
pop
insb
xor
scas
sbbb
loope
hlt
or
mov
iret
push
dec
sub
dec
and
repnz
jp
lods
lret
cwtl
ja
dec
jo
jnp
cld
xchg
nop
iret
adc
dec
in
pusha
mov
int3
push
mov
mov
sub
cmp
push
ds
enter
and
daa
outsl
sbb
mov
inc
fst
sbb
xchg
cld
aad
xor
movsl
sbb
repz
inc
test
pop
pop
jmp
pop
in
cmpb
mov
jl
scas
cmp
test
mov
push
test
lret
cltd
fwait
push
int
push
lods
into
mov
fnstenv
jb
push
cmp
popf
mov
add
push
jno
shlb
sbb
mov
jnp
inc
push
movsb
mov
jle
out
add
dec
lods
ja
ds
daa
or
sub
aas
pop
loope
mov
mov
cmpsb
mov
mov
dec
cmc
mov
pushf
loop
fists
shrb
mov
icebp
xchg
stc
xchg
add
out
pop
repz
subl
nop
push
adc
mov
hlt
and
and
cmpsl
lret
pusha
sbb
insb
add
es
scas
das
dec
mov
mov
jle
sbb
jp
xor
jo
scas
cs
lock
adc
pusha
stos
divb
add
mov
scas
jmp
loopne
pop
out
addb
xor
jbe
add
imull
out
lea
clc
add
or
cmp
ss
enter
adc
mov
arpl
cltd
ljmp
mov
mov
pop
inc
clc
into
xor
fs
lock
sub
inc
stos
dec
ficoml
dec
cmp
sub
ret
sbb
call
dec
out
call
insl
add
jl
jle
inc
jbe
jne
dec
push
xchg
sbb
mulb
je
xorl
or
rcll
lock
or
cmp
push
xchg
xchg
stc
jb
movsb
in
cs
sarb
movl
adc
xchg
mov
or
outsb
mov
out
test
in
je
in
leave
data16
insl
add
insb
adc
std
xchg
push
je
lahf
mov
orl
out
icebp
xchg
int
mov
int3
push
inc
dec
fbld
push
cwtl
les
scas
lcall
cmp
inc
cmpsl
mov
nop
sbb
mov
jecxz
mov
dec
sbb
outsb
cmp
insl
xchg
bound
adc
jae
sbb
lahf
lds
clc
cmp
int3
movsl
sub
jb
mov
xchg
and
loop
lds
addr16
imul
mov
push
or
pop
mov
jl
lea
fucomi
inc
mov
jmp
outsl
sbbl
ss
push
cmpsb
out
dec
lds
out
stos
out
in
mov
or
inc
gs
mov
inc
dec
cmp
cmp
inc
into
out
and
imul
mov
popf
pop
lea
or
inc
shr
cltd
add
test
and
jae,pn
sbb
es
mov
rorl
inc
or
xor
arpl
frstor
jo
mov
fsubr
inc
push
adc
subb
cmp
testl
enter
ds
cmp
fidivs
pop
out
lahf
in
loop
lret
outsb
icebp
movsl
ret
sbb
fsubp
scas
mov
push
stc
jl
pop
jge
test
insl
sarb
jnp
push
mov
imul
flds
and
imul
xchg
push
inc
hlt
das
and
mov
rcr
movsl
icebp
pop
add
jge
adc
mov
pop
test
in
sub
jg
daa
adc
scas
lcall
cmpsl
fstps
outsb
cld
fwait
cmp
xchg
jecxz
inc
scas
and
fdivs
xchg
mov
leave
xchg
loopne
add
insl
shll
or
fldenv
or
cmpsl
pop
fs
fldl
cs
insb
out
sbb
inc
pop
cltd
movsb
sub
rorb
inc
pop
stos
mov
fisttpll
cld
test
lods
pop
fwait
xor
cmp
scas
push
in
jnp
ja
lock
ja
push
sbb
mov
mov
cmc
pop
jne
mov
push
mov
in
or
pop
test
mov
rol
cmp
inc
fcmovnbe
lods
cmp
and
pop
in
cmc
adc
call
xchg
mov
adc
mov
xor
mov
push
je
xor
sub
adc
sub
mov
mov
ret
js
fildll
push
fcmovu
and
mov
cmp
enter
cmpsb
outsb
leave
dec
flds
lds
testb
idivb
dec
loop
popa
ret
aas
imul
mov
add
jo
in
cmpl
and
jo
dec
sub
pushf
adc
pop
dec
or
shlb
jmp
pop
mov
sarl
leave
push
push
xacquire
shll
jl
adc
jmp
enter
imul
iret
pop
add
dec
pusha
daa
jg
mov
je
sbb
sarb
rorb
jecxz
hlt
cltd
repz
mov
adc
repnz
lret
lcall
aad
push
rcll
or
add
xor
push
cmp
test
imul
lret
into
loopne
fsubrs
or
clc
or
test
stos
sub
fucomip
fwait
test
pop
pop
or
mov
dec
cmp
mov
add
repnz
adc
les
scas
jle
out
aad
js
bound
dec
cmp
int3
cmpsb
ss
mov
pushf
lret
mov
mov
push
je
mov
ret
jle
cli
pusha
push
dec
push
xchg
mov
dec
push
sti
adc
pushf
xchg
xor
incl
push
aas
dec
pop
pushf
out
inc
stos
jmp
aaa
and
add
dec
bt
mov
scas
leave
push
add
fstpt
push
mov
sar
mov
sub
in
fisttps
mov
jae
mov
mov
adc
and
clc
cmp
ss
lcall
test
popa
sbb
test
movsb
mov
mov
and
mov
mov
clc
or
sahf
jnp
dec
scas
mov
cmp
xchg
sub
add
mov
repnz
fdivl
cwtl
icebp
aaa
push
mov
inc
lods
cwtl
jns
cmp
xor
and
push
add
pop
mov
jle
mov
pop
mov
cmp
push
push
std
pop
mov
fs
cli
push
clc
popa
sbb
popf
scas
sbbb
outsl
imull
pushf
add
or
test
pop
mov
mov
call
and
push
ljmp
jno
mov
and
xchg
mov
and
loopne
adc
dec
inc
xor
adc
fwait
sti
in
push
jae
loop
leave
movl
and
lahf
mov
lret
xchg
mov
pop
cld
ss
bnd
rcrb
sub
xchg
fsubp
cmp
fwait
repz
gs
test
in
popf
in
mov
cmp
out
mov
orb
adc
fldenv
jle
inc
mov
sbb
cmp
iret
cmp
imul
xor
inc
xor
mov
xchg
push
call
xchg
imul
inc
popf
pop
push
or
inc
std
out
loop
js
or
cmp
adc
mov
xchg
mov
xchg
aas
fs
sbb
cmp
cmc
xlat
ficompl
dec
je
fbstp
aad
sbb
fildl
mov
scas
es
cmova
stos
int3
sub
pop
mov
test
and
shrl
mov
repnz
jl
call
cwtl
push
sub
push
xchg
push
jne
xchg
mov
mov
mov
mov
das
adc
lods
cli
dec
pop
adc
xchg
lret
jle
cmpsb
pop
cld
cmp
push
popf
pop
cmp
mov
fucomp
packuswb
pop
aas
inc
mov
pop
mov
add
scas
inc
jne
adc
scas
pop
int
push
int3
test
sbb
push
fs
ljmp
pusha
and
push
jb
loope
mov
notb
scas
js
xchg
outsl
cli
fisubrl
addl
add
mov
in
out
or
fidivs
enter
jo
adc
aam
and
test
fucomip
push
add
scas
outsl
sbb
pmaxub
xchg
adc
cs
cmp
push
ljmp
cmp
bnd
dec
mov
add
fbld
pop
mov
jp
hlt
mov
adc
clc
out
cld
shll
or
adc
bound
add
xchg
mov
adc
push
jnp
jb
add
insb
add
loop
dec
xchg
inc
cmp
div
push
lods
mov
sti
sub
sbb
mov
shlb
push
pop
mov
xchg
add
cmp
es
xchg
lods
fcmovnu
loopne
mov
adc
xchg
cltd
hlt
xchg
jp
cmp
notb
lahf
les
dec
std
mov
pop
xor
mov
lock
pushf
push
mov
push
sbb
ja
testl
or
enter
es
push
sbb
test
jae
push
jmp
testb
out
setp
mov
dec
add
mov
ret
push
test
add
mov
xor
cltd
pop
call
cmpsl
xor
out
inc
decb
aas
xchg
sub
cmpsl
and
int
sbb
inc
mov
xchg
mov
lret
movsb
ds
mov
mov
lock
pop
sahf
inc
jl
dec
cmp
and
mov
dec
les
mov
cli
or
fbld
mov
int3
dec
sub
repz
cmp
sbb
shlb
hlt
adc
jg
pop
inc
mov
rol
inc
xor
pop
xor
inc
clc
jg
test
in
adc
xchg
jge
jo
or
xor
fldl2t
pop
aam
fisttpll
pop
fbld
push
xchg
cwtl
push
push
fnstsw
cmp
and
inc
gs
and
and
call
and
cmp
pop
push
ds
lds
push
sahf
dec
aaa
jecxz
in
mov
mov
xor
pop
push
cmp
into
jg
sub
xchg
mov
push
test
fistpl
rcrb
inc
lcall
pop
adc
jp
and
nop
les
cmc
mov
mov
fs
inc
xchg
fmul
pop
or
shrb
imul
inc
test
and
xchg
sub
mov
dec
mov
dec
call
mov
or
stos
popa
mov
popl
and
jo
fidivl
sarl
jge
mov
mov
sbb
xor
push
or
ja
xor
adc
pusha
push
in
xchg
movsl
dec
inc
mov
mov
inc
bound
jmp
aad
cmp
loope
sbb
lea
mov
pop
mov
lea
hlt
pop
cmp
mov
repnz
xor
loope
pop
xchg
inc
xchg
cmp
push
mov
inc
inc
adc
adc
or
xchg
imull
or
cmp
add
shrb
adc
jmp
imul
mov
fisubrl
adc
dec
add
xchg
out
cmp
push
arpl
loop
sbb
ss
sub
subl
lea
in
mov
and
push
mov
xor
cwtl
sub
push
xchg
push
sub
fidivl
das
rolb
daa
lret
mov
fistpll
dec
pop
ret
arpl
scas
cmp
in
adc
sub
mov
xchg
das
jo
clc
adc
shll
hlt
jmp
repz
stos
mov
mov
movsb
inc
mov
xchg
call
or
lcall
fmuls
jne
dec
xor
pop
out
adc
imul
fwait
jns
cmp
mov
int
test
xor
adc
in
xor
cmp
popa
cmp
mov
pop
test
xchg
jmp
sbbl
jns
mov
enter
fnstcw
dec
push
push
or
addr16
mov
aaa
or
jns
inc
and
rorl
pop
mov
push
mov
cmp
hlt
in
cltd
lahf
stos
cmp
jecxz
adc
js
popf
das
mov
outsl
push
or
xor
pop
adc
jle
lea
lahf
sahf
pusha
sbb
jl
aaa
mov
and
dec
sahf
inc
and
scas
dec
daa
fdivl
imul
ret
ds
xchg
push
sbb
fs
jnp
sahf
mov
dec
test
lret
inc
and
mov
and
xor
and
ret
orps
mov
and
into
fidivs
add
add
inc
ud2
adc
int
sbb
pop
or
jne
arpl
push
in
or
jl
out
cli
sarb
dec
shl
in
repnz
jo
inc
lock
mov
lods
inc
mov
push
lcall
or
cltd
je
push
ljmp
pop
aaa
dec
sub
mov
fbstp
push
mov
mov
jmp
pop
push
mov
arpl
shll
clc
cmpsb
out
push
or
and
addr16
fucomp
pop
fcmovb
or
repnz
data16
mov
into
xchg
les
and
sbb
ss
lret
in
dec
ret
xchg
and
mov
sahf
test
shlb
push
gs
clc
dec
adc
sub
push
xlat
stos
test
cmpsb
test
cmp
and
test
mov
pop
fmul
jo
das
jbe
mov
jp
push
out
cmpsl
out
mov
in
insb
mov
adc
xchg
mov
or
aaa
xchg
adc
and
or
scas
adc
add
xor
inc
push
int
pop
cmc
adc
outsb
mov
ret
outsb
pop
out
cli
and
inc
push
xchg
js
and
fxch
movsb
push
out
cmp
loope
pinsrw
xor
or
sbb
popf
stc
cmp
adc
mov
jno
or
cmp
push
jns
pop
or
pusha
imul
cmp
push
cs
inc
lods
push
mov
arpl
xor
arpl
in
sahf
dec
ja
inc
pop
xlat
pushf
outsl
repnz
mov
mov
sbb
lcall
sbb
and
mov
out
scas
divb
jns
inc
mov
mov
lret
sbb
popa
sub
sbb
fwait
jne
iret
cmpsb
mov
or
jmp
jno
loope
dec
cmp
mov
ds
push
add
ds
mov
cwtl
pop
or
add
rcl
ret
dec
jmp
adc
movsl
pop
cltd
sub
rcrb
arpl
shll
push
sub
outsl
cwtl
push
pop
ljmp
testb
mov
pusha
xchg
fistps
jecxz
mov
sub
ret
jnp
aas
inc
adc
cmovle
ljmp
xor
loope
in
stos
inc
add
fistpl
ds
jb
push
insl
jb
adc
popf
dec
call
int3
pop
xchg
ret
clc
rorl
mov
pop
adcb
mov
je
or
mov
pop
cmpsb
add
mov
jno
cs
or
jne
add
add
and
imul
fsubrs
pop
popf
loope
xchg
pop
fistpll
orl
jnp
mov
daa
and
xchg
pusha
xchg
lods
xor
fnsave
mov
nop
lock
or
adc
mov
in
outsb
inc
sbb
pop
popl
xor
adc
push
movsb
mov
decb
cmp
jge
js
or
fadd
shlb
loop
cmp
dec
popa
push
ja
sbb
jb
inc
dec
dec
in
fidivl
mov
fists
lret
or
cs
lret
mov
jge
xor
adc
xor
idivb
mov
mov
jp
push
mov
sbb
cltd
je
xor
call
or
sub
dec
push
jae
das
inc
pop
push
and
push
rcll
ret
dec
jns
inc
clc
clc
cs
insb
sbb
std
stos
jle
pop
scas
ljmp
jno
stos
xchg
stos
das
test
inc
jnp
pop
pop
es
pop
mov
inc
aad
jg
clc
jg
shrl
dec
jg
imulb
pop
xlat
sahf
test
sarl
push
shll
sbb
stc
cli
jne
mov
das
inc
test
cmp
lret
adc
mov
jae
in
test
push
xchg
jecxz
lahf
leave
fldcw
arpl
das
pusha
das
das
fsubl
fisubrl
jno
push
mov
dec
cs
pop
push
push
inc
call
push
clc
jmp
and
sub
and
push
dec
add
jo
xor
sbb
test
cmp
inc
fadd
push
jg
scas
js
mov
jno
enter
aad
movsb
js
imul
popf
xchg
pop
imul
mov
jp,pn
xlat
cmpsb
mov
test
cmpsl
shll
jge
jmp
aaa
and
mov
repnz
or
push
dec
xchg
xor
or
sub
notb
movsl
mov
jns
and
lods
ds
xor
dec
sub
xchg
js
cmp
push
dec
mov
mov
test
loopne
arpl
lret
push
mov
dec
outsb
repz
cmpsl
nop
std
insb
mov
xchg
pop
adc
scas
xor
or
or
mov
scas
or
mov
inc
mov
sarb
scas
add
sbb
out
inc
pop
mov
repz
mov
push
mov
outsl
dec
stos
mov
push
dec
or
xor
js
mov
add
dec
out
jp
cmp
stos
jl
push
lret
sahf
xor
fstps
pop
mov
sti
imul
push
mov
fcompp
jmp
push
inc
lahf
cmp
call
pop
rcrb
or
out
cmpsb
in
jle
cli
inc
scas
inc
js
and
lock
dec
mov
adc
inc
aam
push
addr16
fldl
cli
popl
mov
addr16
sbb
mov
pop
icebp
xor
lret
pushf
jo
or
mov
or
sub
ret
dec
ret
pop
mov
fiaddl
cld
xchg
jns
stc
addl
aad
lahf
push
cmp
mov
popa
inc
inc
push
flds
pop
stos
js
pop
adc
lcall
sahf
jno
mov
xchg
mov
cmp
ficoml
pop
repnz
imul
sbb
mov
push
mov
test
stos
mov
in
test
cli
aam
xchg
push
sbb
movsl
and
dec
xchg
call
scas
push
adc
sub
cmp
int3
jg
mov
leave
or
jle
cmp
push
mov
or
sub
add
idivb
shll
mov
lahf
cmp
shlb
sub
mov
or
icebp
mov
lds
jns
movsb
movb
nop
std
cmp
cmpsb
mov
sarl
add
push
test
lret
mov
gs
mov
xor
stos
pop
cld
in
outsb
lock
lods
push
scas
adc
inc
dec
test
pop
jbe
and
sub
jnp
push
xchg
outsb
jle
mov
sbb
arpl
cmp
imul
int3
jg
mov
xchg
movsb
mov
push
push
mov
imul
faddl
xor
pop
shrb
push
cmp
push
scas
sub
xchg
and
lret
ds
add
pop
or
ds
add
scas
in
xchg
mov
push
sbb
mov
test
or
and
loope
iret
dec
jns
das
cs
cwtl
dec
mov
test
cs
push
loope
rcl
mov
jns
sub
xchg
dec
cmp
outsb
cs
add
adc
clc
dec
push
popf
hlt
sbb
jmp
xchg
or
cs
int
mov
xor
jae
sbb
adc
ss
jle
push
mov
and
mov
fstl
andl
xor
scas
or
cmp
out
push
out
cmp
dec
pushf
imul
pop
push
push
icebp
jae
pop
and
loope
dec
mov
push
jmp
xor
jle
inc
mov
mov
adc
mov
or
inc
push
mov
jnp
pop
inc
cltd
sbb
jge
xchg
cli
clc
and
sub
mov
repnz
sbbl
pop
lcall
xchg
dec
mov
cmpsl
out
xchg
jmp
push
push
pusha
xchg
fstp
ljmp
fwait
xchg
xor
sub
dec
mov
fmuls
adcb
xor
add
iret
cmpsl
adc
sub
mov
iret
push
movsl
shrl
sahf
stc
into
jns
lcall
and
add
imul
or
sahf
or
lcall
or
out
adc
orb
inc
adcb
and
pop
cmpsl
jb
incl
loopne
push
cmpsl
sub
add
add
je
mov
icebp
mov
fidivs
mov
inc
mov
cli
fnstsw
mov
int
sti
sbb
jnp
push
adcl
mov
xchg
xor
leave
push
test
inc
mov
xchg
push
movsl
clc
pop
insb
fsubs
faddl
es
mov
cwtl
and
adc
leave
mov
cld
dec
push
jne
mov
mov
mov
adc
fwait
mov
test
cmpsl
movsl
jg
sub
xchg
cmc
cmp
movsb
pop
aas
sbb
jmp
adc
dec
mov
jmp
inc
fldt
pop
mov
xchg
adc
xchg
pop
jo
lahf
ss
fldcw
push
xchg
mov
dec
inc
loop
cltd
adc
les
out
push
ret
dec
jle
ret
test
add
adcl
inc
jmp
sub
add
dec
es
je
popa
fwait
aaa
xchg
cmp
fwait
pop
in
dec
dec
loop
mov
jmp
test
imul
xchg
das
fdivrl
adc
fmul
jg
mov
fldenv
movsb
xchg
sti
sbb
rdmsr
and
or
cli
sarl
jns
ja
fidivl
repz
in
and
xor
xchg
sahf
dec
dec
inc
out
das
sahf
mov
sub
scas
sub
add
mov
je
inc
push
cltd
xor
sub
mov
xor
sbb
popa
xchg
mov
shl
pop
or
mov
mov
lods
stc
loopne
pusha
clc
nop
rcrb
xchg
or
pop
adc
cmp
lcall
cmp
inc
out
jns
adc
roll
mov
sbb
lret
sbb
das
xchg
mov
inc
pop
adc
andl
imul
popf
dec
ret
and
add
or
pusha
ret
out
lahf
push
dec
call
and
fldenv
sbb
xor
repz
adc
out
mov
hlt
mov
pop
rol
aam
push
pop
pop
mov
pop
cld
push
inc
and
test
dec
sub
cmp
test
inc
add
dec
push
mov
lea
stos
inc
mov
enter
pop
ds
cld
outsl
js
dec
push
pop
adc
or
xchg
mov
imul
loope
sub
lret
fbstp
and
out
pop
pop
jns
nop
jle
imul
or
ds
test
adc
xchg
mov
pop
sub
adc
rorl
mov
mov
xlat
addr16
stos
or
popw
sub
push
lods
and
or
test
sub
sti
test
lret
pop
sbb
mov
push
notb
ret
pop
shl
inc
or
repnz
xchg
leave
xchg
push
lea
mov
shl
xor
in
push
sarb
mov
sarb
fs
es
fldt
add
or
addb
out
ja
push
rclb
adc
gs
inc
or
push
sbb
pop
imul
ds
aad
jbe
add
scas
mov
iret
sub
jecxz
pop
pushf
out
mov
jle
and
inc
loop
jg
call
test
lret
out
push
pusha
and
xor
mov
mov
xor
dec
cmp
arpl
sub
mov
push
xchg
dec
in
repz
ljmp
hlt
inc
sti
xchg
mov
lret
ret
faddl
jg
in
jbe
push
movsb
ja,pt
sti
rolb
sbb
push
xchg
pop
push
add
xor
fists
mov
sbb
ljmp
push
push
sub
aam
xchg
cmc
lret
sbb
xchg
mov
lahf
push
cs
out
loope
adc
lahf
push
dec
in
inc
pop
cltd
mov
addr16
nop
adc
iret
mov
movsb
stos
test
mov
mov
mov
jge
int3
adc
js
add
ss
add
dec
cmpsl
sahf
dec
add
mov
sub
sub
iret
mov
xchg
fildl
xchg
shlb
scas
xor
mov
cld
movsl
sbb
lret
mov
mov
xchg
sbb
lcall
add
mov
out
std
lods
sub
jnp
mov
inc
cli
mov
insb
mov
scas
pop
sti
fsubp
inc
fstps
push
add
xchg
jle
cs
fsubrs
adc
es
sbb
ret
into
gs
mov
mov
bound
jl
push
insl
push
lods
mov
fstl
pop
xchg
lock
sbb
stos
inc
and
flds
jp
pop
pop
dec
fmuls
loop
xor
mov
add
xor
add
ds
test
adc
lods
jg
lahf
sbb
mov
and
cmp
lods
dec
daa
mov
and
rcll
sbb
push
inc
lods
pop
test
stc
mov
or
subb
xchg
jl
push
cwtl
cmp
out
inc
inc
adc
cmpsb
jg
mov
inc
stos
cmp
sbb
les
pop
push
imul
ret
jp
gs
inc
push
cwtl
mov
adc
add
test
sbbb
xor
xor
fstpt
add
xlat
into
adc
add
pop
stos
or
sbb
cmpsl
leave
add
hlt
fs
mov
in
or
mov
subb
lods
xchg
mov
sub
sti
dec
xchg
lcall
fisubrs
fdivp
adc
mov
test
pop
or
insl
sub
xor
ljmp
adc
xor
popf
jmp
mov
aas
loopw
mov
mov
mov
mov
cmp
rorl
stos
stos
mov
lods
xor
xchg
arpl
int3
arpl
xchg
add
push
cmpb
int
fnsave
push
stos
subl
xchg
add
add
pop
cmp
cmp
cmc
mov
int3
outsl
loopne
dec
aas
xchg
jp
and
push
popf
add
imul
stc
loope
popa
dec
cmp
pop
jno
ret
fists
ss
pop
ja
mov
or
add
xchg
sub
cmp
mov
rorl
add
mov
xor
jae
lretw
jb
es
ret
lahf
ss
add
ret
rclb
mov
adc
aam
pop
push
imul
mov
test
das
jp
out
jae
scas
test
ret
popa
jo
cli
pop
lcall
lret
mov
dec
loopne
adc
pop
xor
dec
mov
fsubr
sbb
pusha
imul
fs
test
movsb
repnz
popa
xchg
or
fsubrl
pop
or
add
imul
cmp
pop
hlt
addr16
imul
clc
inc
dec
aas
jp
out
fwait
dec
push
and
mov
jbe
push
cmc
dec
out
icebp
jbe
dec
mov
and
xchg
fstpl
out
int3
xor
mov
ljmp
sub
daa
jg
pop
xor
xor
xor
push
lods
test
loopne
sub
int3
dec
cmpsb
lret
popa
inc
cld
shll
add
mov
add
xor
and
mov
clc
cwtl
sbb
mov
cltd
or
and
cli
fwait
sub
stc
bound
sub
sub
pop
sti
xchg
mov
sbb
int3
insl
mov
xchg
cwtl
scas
mov
xor
mov
adc
addl
push
push
pusha
mov
mov
jne
pop
jmp
and
sub
and
int3
out
mul
mov
aam
xchg
inc
enter
rcr
sbb
loope
and
push
mov
pop
ret
mov
cmp
mov
pop
cmp
cmp
adc
sbb
adc
push
mov
cs
cmp
cmp
add
cltd
dec
outsb
cmp
ret
ja
insb
lret
lret
sub
sbb
fstpt
cwtl
xor
movsb
mov
imul
and
loope
cmp
jno
test
in
cs
fmull
add
xchg
fyl2x
lret
invd
je
mov
out
jl
adc
std
iret
add
jge
mov
outsl
mov
popf
stos
cmp
das
mov
and
mov
push
xor
fs
adc
inc
xlat
loope
mov
dec
xor
sub
scas
movsb
cmpsb
xor
and
sub
lea
push
aaa
pop
aaa
xchg
in
pushf
int3
xor
in
push
mov
pop
ss
and
repz
lods
inc
jp
decl
stos
cmpsb
daa
out
pop
ror
pop
shl
hlt
or
xor
add
or
push
and
pushf
ret
cmp
stos
mov
outsb
push
icebp
mov
pusha
lds
es
sbbl
cmp
int
mov
pop
out
nop
mov
movsl
sbb
lods
mov
sub
xor
xchg
dec
in
out
xor
mov
mov
sar
sbb
xor
mov
cmp
int
imul
inc
clc
push
ljmp
icebp
sbb
mov
mov
push
cmp
push
out
mov
stc
cmp
push
out
out
jb
xor
pop
push
lret
test
or
lods
jge
cmpsl
es
sahf
nopl
fsub
and
fisubs
lcall
or
jae
pop
shr
sbb
popf
push
xchg
push
pop
imul
popa
insl
xchg
insb
push
inc
aam
mov
iret
fistpl
stos
adc
mov
es
sub
sar
or
or
push
mov
test
popa
gs
xchg
scas
aaa
dec
loope
lds
adc
cs
lahf
add
mov
or
push
sbb
mov
xor
mov
shrl
mov
xchg
xchg
popa
test
test
push
pop
mov
mov
and
jns
or
mov
lods
push
rcrl
mov
jno
cmp
mov
daa
add
mov
fmuls
test
lods
jne
xorb
repz
xchg
mov
push
mov
adc
jnp
repz
inc
xchg
xor
push
xlat
mov
pop
adc
sbb
lret
test
outsb
mov
lds
lahf
sub
andl
outsb
dec
test
pop
adc
xchg
xlat
sbb
sbb
ss
sbbl
leave
int3
jns
gs
lods
cmp
xchg
sub
stos
in
pop
push
fbstp
xor
sar
cmp
loopne
syscall
inc
jbe
aas
lods
lock
aam
xor
les
pop
addl
cmp
jmp
sbb
dec
loopne
scas
and
out
js
scas
ljmp
pushf
std
insl
mov
neg
lea
push
call
mov
add
cltd
stc
mov
lahf
popa
xchg
ds
test
mov
shll
mov
cld
mov
push
cmp
nop
cmp
xchg
inc
mov
jae
sub
outsl
sbb
mov
test
push
lock
gs
ja
and
mov
xor
lods
es
aaa
movsl
adc
xor
ds
fadds
xor
ja
adc
mov
cld
pop
lods
inc
jns
mov
sub
xlat
dec
icebp
insb
dec
jge
packsswb
xchg
scas
fwait
push
fidivl
mov
mov
hlt
clc
or
mov
and
xlat
ljmp
cmpsl
sbb
xor
test
pop
mov
xchg
sbb
lds
rorl
int3
xor
xchg
push
adc
mov
rcll
in
rclb
pop
ja
add
cmp
dec
addr16
sub
mov
les
std
sub
inc
inc
push
adc
inc
subb
push
mov
mov
and
jmp
sub
std
out
aam
cmp
dec
daa
lar
out
xchg
cmp
xor
and
and
faddl
repz
mov
sti
ja
xlat
rcrb
hlt
adc
sub
adc
cmp
inc
ja
push
jge
out
xchg
mov
add
jns
dec
stos
xor
push
pop
mov
mov
push
sbb
adc
call
mov
sahf
aaa
into
shlb
xchg
inc
xor
cmp
push
orb
dec
xor
test
cmp
xor
out
in
cmpps
addr16
add
je
push
xor
shlb
arpl
xor
out
sbb
mov
js
les
adc
int
push
mov
cmp
xchg
sub
cltd
js
sbb
inc
sub
scas
hlt
outsb
mov
lahf
push
popa
lods
and
inc
xor
loopne
sub
enter
cmp
fmuls
xchg
movsb
push
push
ficoml
lcall
and
sub
and
into
xchg
cmp
test
fcoml
sub
jecxz
iret
and
lea
mov
adc
push
in
fisttps
mov
xlat
jle
mov
sbb
daa
cmp
add
sahf
xor
popf
bsr
sbb
cmpsb
cmp
cwtl
cmp
pop
add
and
xor
in
jbe
sbb
shlb
mov
gs
mov
push
sub
pop
loopne
dec
movb
pop
cmpsl
pop
cli
imul
mov
pusha
loop
inc
hlt
loop
je
jmp
lea
jle
in
pop
ds
jl
es
call
pop
push
sbb
add
cld
std
mov
adc
cs
daa
jle
outsl
push
sub
scas
pop
pop
or
pop
call
fbstp
mov
xchg
in
inc
pop
inc
stc
cmp
ljmp
cmc
cmpsl
call
mov
incb
movsl
dec
cmp
xchg
xchg
dec
filds
sub
pop
shll
or
sub
mov
mov
dec
out
aas
dec
mov
mov
dec
xchg
pop
adc
or
ror
popa
ja
fsubs
mov
lret
pop
mov
arpl
ret
hlt
mov
xchg
cmp
addb
push
lods
outsl
mov
outsl
out
pop
sahf
nop
sbb
push
mov
repz
or
xchg
sub
xor
mov
pop
push
xchg
mov
test
sti
xchg
mov
inc
xor
call
stos
inc
mov
adcl
sbb
jp
mov
aaa
mull
xor
xchg
push
mov
pop
mov
in
add
sti
sbb
adc
push
sbbl
int3
out
test
xchg
or
add
xor
sbbb
addb
add
jb
push
push
cmp
stc
inc
scas
and
sbb
lods
pop
and
sbb
inc
pop
je
fsubrs
push
dec
add
sbbb
insl
inc
pop
sti
cmp
inc
pop
push
cmpsl
add
clc
fwait
movsb
mov
jmp
loopne
lods
loop
stos
fwait
xchg
je
sub
xchg
pop
cmp
mov
std
jns
sbb
lcall
pop
nop
jecxz
dec
xorb
jmp
popa
mov
jge
push
sti
mov
fldl
fisubl
arpl
jmp
and
sbb
adc
in
call
xor
testl
mov
mov
insl
sub
jae
shl
add
adc
test
add
add
or
fadd
pop
enter
inc
fs
in
and
clc
mov
stc
mov
inc
fstpl
xchg
cmp
mov
sarb
jmp
xorl
lods
shrb
cmpsl
aas
lahf
outsl
jnp
inc
test
popf
dec
push
sub
sub
popf
jne
jns
dec
ljmp
hlt
cmp
adc
ficoml
xor
shlb
pop
cli
inc
jp
xchg
sbb
nop
inc
sbb
mov
js
imul
mov
and
out
push
cmp
shrl
xor
mov
jo
inc
mov
xor
scas
out
lcall
and
adc
mov
sbb
testb
dec
dec
cld
fs
mov
pop
addr16
dec
pop
xchg
dec
add
aas
xchg
push
mov
cmp
insb
push
jmp
or
ljmp
pushf
in
cmp
pop
jae
push
jae
dec
movsb
mov
jb,pt
push
ret
ljmp
pop
loope
mov
movsb
cmp
add
fiadds
adc
cs
jg
cld
lea
mov
pop
fstp
cmp
adc
sbb
inc
adc
enter
xsave
pop
mov
push
jg
outsl
lods
sbb
test
pop
pop
cmp
into
stc
std
push
imul
repnz
faddl
jecxz
mov
stos
fwait
inc
lods
or
repz
es
addb
cmp
ja
mov
mov
test
sub
pop
loop
lcall
push
into
loopne
sub
inc
pop
xchg
es
xchg
sub
mov
ss
pusha
mov
jnp
pop
xchg
cmp
jbe
adc
es
pop
out
fwait
push
in
mov
leave
push
xchg
test
mov
mov
insb
call
jnp,pn
mov
sbb
int3
loopne
jne
mov
mov
xchg
pop
push
mov
lret
stos
clc
add
jge
xor
mov
mov
test
cmc
push
cli
xchg
jbe
scas
cmpsb
lock
fldl2t
fistps
mov
jbe
loop
stos
sbb
xor
stos
xchg
shlb
lahf
pop
mov
adc
xchg
outsl
pop
sahf
pop
xlat
aad
pusha
inc
mov
lds
jge
pop
loop
jle
adc
mov
mov
xor
jnp
mov
enter
jae
dec
mov
pop
lret
out
push
xor
cmpsb
dec
pop
sub
mov
clc
add
lcall
movsb
mov
fisttps
adc
sub
enter
push
sahf
gs
cld
xor
je
push
inc
lds
cwtl
sbb
movsb
sub
add
aam
leave
or
loope
lock
scas
mov
jge
jl
fcoml
subb
arpl
cmpsl
in
test
xchg
pop
ljmp
out
fdivl
push
in
jae
lret
es
push
jge
mov
or
addr16
mov
test
inc
mov
jb
mov
jno
iret
sub
mov
or
mov
mov
ja
scas
sub
jecxz
jl
adc
sahf
test
fimull
mov
adc
mov
jl
mov
jnp
ret
push
mov
testb
aas
adc
pop
call
std
jo
mov
ja
stos
inc
into
outsl
and
int
pop
xlat
outsl
int
mov
out
stos
psubusb
and
jns
and
roll
ficomps
adc
in
inc
ret
mov
sub
int3
xor
pop
mov
popa
xchg
aas
cmpsl
popf
mov
outsl
add
mov
add
dec
mov
loopne
imul
jp
mov
test
jl
popl
orb
xchg
stc
jmp
jecxz
into
gs
sbbb
insl
jnp
sub
sahf
stos
pop
gs
gs
test
push
in
add
mov
cmovns
add
popf
popa
cmp
or
pop
fldt
loope
cli
adc
addl
std
pop
lds
rol
mov
push
ret
push
push
push
outsl
mov
repnz
mov
jbe
xlat
outsb
lahf
cwtl
mov
dec
lret
inc
nop
daa
jne
jb
cltd
movsl
push
sub
jo
xor
adc
fsubl
push
movsl
sarb
sahf
inc
xor
sahf
xor
loop
mov
push
mov
mov
xor
fs
mov
or
xchg
movsl
cltd
push
sbb
addl
jne
je
push
push
push
out
sub
aam
pop
sbb
jecxz
into
and
insl
dec
ret
jp
add
pop
sbb
push
pop
jae
imulb
fwait
push
or
inc
push
inc
xlat
test
add
jbe
cmp
adc
leave
lock
loop
pushf
stc
test
or
je
push
test
cmp
clc
sub
xchg
push
xor
arpl
pop
in
jo
insl
cwtl
sbb
cltd
sbb
hlt
lcall
data16
lods
jg
jmp
int
cltd
cmp
stos
fcomi
mov
loopne
xchg
sub
dec
pop
xchg
inc
push
scas
xchg
shll
aam
pop
sbb
jmp
addl
sbb
sbb
add
cmp
insb
mov
cmpsb
les
movsb
pop
mov
jns
and
ret
jg
scas
pusha
mov
pushf
xor
mov
pop
mov
push
adc
aam
popl
xchg
mov
xor
test
shll
call
out
cmp
sub
cmp
call
pop
pop
or
sahf
cmp
xor
imul
inc
mov
adc
imul
ja
mov
inc
jb
jp
adc
sti
inc
jp
pop
popa
data16
mov
jnp
dec
jns
inc
pusha
cmp
pusha
rcrb
repnz
sbb
xchg
lods
push
mov
mov
sbb
movsb
ja
std
inc
cwtl
inc
movsb
mov
cmpsb
push
sub
push
xbegin
insb
pop
sbb
les
out
sbb
mov
adc
ror
sbb
mov
repnz
adc
sub
pop
mov
js
mov
jg
pop
mov
and
jl
and
mov
fidivrs
adc
loopne
pop
push
add
cli
inc
sti
mov
scas
insb
shl
rolb
and
ds
inc
loop
shlb
les
jns
lea
enter
push
xor
adc
insl
in
xchg
scas
outsl
pop
mov
scas
int3
sub
sbb
into
loop
mov
jmp
dec
fwait
mov
push
lods
cmp
or
pop
adc
lret
data16
adc
in
test
jne
test
sbb
das
mov
xchg
pop
push
sahf
and
jns
or
jle
scas
mov
mov
jg
popf
call
stos
xchg
out
mov
lret
cmp
pop
xor
sub
js
test
jne
cmp
dec
xor
je
icebp
adcl
and
sub
inc
push
hlt
stc
sub
ja
call
enter
jnp
and
in
cmp
pop
jns
jno
mov
pop
pop
cmp
mov
push
push
push
fisttps
and
mov
in
inc
xor
sbb
push
lods
inc
mov
dec
dec
and
cmp
dec
imul
movb
ds
decb
rcrl
push
and
ret
mov
push
frstor
mov
cmc
or
xchg
dec
mov
mov
xchg
out
adc
aam
jne
pusha
and
xor
iret
adc
sub
xchg
jno
hlt
dec
mov
xor
xchg
jl
jecxz
rcrl
mov
mov
jb
push
cld
lcall
in
fwait
pusha
sar
popf
pop
mov
sbb
std
ret
inc
lea
test
push
js
and
test
pop
adcb
pop
pushf
fsts
sub
rcll
scas
int3
jae
or
push
ljmp
sahf
lea
dec
dec
fnsave
pop
dec
sbb
or
mov
das
std
lret
fldcw
xchg
lock
je
add
mov
jno
or
into
cmp
cmp
lods
push
aaa
dec
xchg
pop
popf
cwtl
sbb
and
loopne
mov
inc
int3
shlb
dec
lahf
lcall
xor
xlat
dec
pop
or
cmpsl
push
andb
or
out
cmpsl
and
dec
lahf
sbb
cmp
dec
fs
pop
push
mulb
in
clc
adcb
in
scas
sahf
xor
dec
scas
jmp
cmpsb
mov
scas
xchg
ja
adcb
xchg
test
stos
add
popa
addr16
push
adcl
add
enter
push
nop
push
push
fisubl
jg
test
sbbl
pop
cli
test
loope
and
add
push
cmp
or
fidivrs
cwtl
pop
fmull
lods
sti
ja
push
movsl
pop
pop
outsl
call
add
mov
mov
and
fidivs
inc
cwtl
inc
andb
pushf
imul
int
orb
inc
test
xchg
cmp
ljmp
push
neg
dec
and
imul
cld
sti
xlat
outsb
in
push
jmp
jns
lods
cmp
xchg
mov
cmp
sbb
lock
sahf
outsl
rolb
mov
push
loope
rorl
mov
aad
daa
int
loope
push
push
push
adc
outsb
add
xor
mov
jg
daa
mov
inc
scas
das
out
adc
notb
pop
mov
xor
cmp
sub
xchg
cmpsl
in
sbb
sbb
fucomip
and
dec
jnp
xchg
pop
aam
cmpsl
push
pop
dec
dec
add
xor
fwait
stos
jae
mov
lret
cmc
lcall
push
shl
ss
test
push
lods
icebp
inc
lods
in
cmc
popf
xor
xchg
sub
jae
push
pop
xchg
adc
loopne
jle
mov
xor
das
icebp
xchg
mov
out
xor
lahf
sub
pop
js
push
ljmp
or
not
out
lods
test
gs
or
ret
sub
data16
pusha
xchg
shlb
movsl
cmpsl
mov
in
mov
and
or
mov
psadbw
xor
xchg
cmp
mov
pop
cmc
mov
incb
jae
mov
mov
inc
nop
daa
xor
shll
int3
ljmp
inc
fsubl
inc
enter
add
push
rcr
xchg
push
jb
fstpt
pop
out
jg
pop
mov
xlat
pop
add
sub
xchg
lcall
jg
fdivl
jbe
and
push
movsl
push
dec
shr
nop
dec
mov
add
mov
aaa
mov
or
and
lea
stos
xchg
push
pusha
inc
dec
in
icebp
pop
notb
cmpsl
loope
mov
xchg
scas
loopne
mov
fstp
inc
and
pop
xor
arpl
mov
jb
cmpxchg
xchg
cmp
movsb
out
fbstp
stc
sub
sahf
lea
pop
es
shll
repnz
out
test
andb
inc
jbe
add
into
ss
movl
add
cli
outsb
adc
sub
repz
sbbb
sub
xchg
pop
filds
cs
cltd
xor
dec
incb
mov
cmp
or
ret
std
ja
mov
xchg
jbe
dec
push
rcrb
push
jmp
push
subb
lods
or
mov
stos
inc
shrb
or
sbb
dec
jp
imul
cmp
in
mov
imul
aaa
nop
xchg
push
mov
sbb
inc
jae
push
pusha
popf
lahf
pop
stos
or
mov
and
add
mov
jnp
fmul
mov
jno
cwtl
xor
jmp
rcr
out
push
jo
pop
movl
incb
movsb
in
cmpsl
loop
pop
or
lahf
lret
scas
fstpt
jbe
add
jno
sub
vphaddbw
addl
sub
push
lds
push
ds
push
sbb
mov
fmul
ljmp
mov
lods
inc
adc
test
fsubs
inc
je
jne
and
push
dec
xchg
xor
enter
ljmp
mov
outsb
mov
jl
addl
fildll
rcl
lds
xchg
mov
and
and
pop
cli
pop
mov
jmp
jae
and
pop
aad
push
push
mov
lret
movsb
call
test
lods
push
sbbb
mov
adc
movsb
mov
pusha
ret
aad
cmp
push
ss
sub
repz
fstpt
sub
xchg
ficomps
xlat
mov
sbb
push
xor
popa
or
fadds
dec
fbld
xchg
fnstenv
test
int3
mov
or
js
mov
cwtl
xor
or
pop
jno
xor
andl
pop
in
push
or
jae
sub
fdiv
mov
cmpsl
popa
or
inc
pop
lret
xchg
xor
push
aam
fistps
mov
cmp
dec
xchg
mov
outsb
movsb
add
jnp
jl
in
int3
out
lds
cmp
lods
inc
nop
pop
add
or
mov
jge
pusha
bound
xor
pop
inc
add
ljmp
cmp
js
scas
outsb
dec
repz
dec
mov
jl
repz
and
mov
ss
add
adc
and
inc
jmp
or
shl
leave
loop
stos
mov
inc
or
in
xchg
ret
cwtl
sub
lods
xchg
nop
js
and
mov
jle
add
adc
jp
push
mov
dec
push
stos
repnz
clc
nop
stc
mov
sbb
shlb
loop
dec
sbbl
outsl
stc
jge
push
mov
pop
cmp
je
nop
sub
jnp
jle,pt
ret
xchg
notb
pop
les
cld
inc
xchg
mov
mov
mov
shr
in
fsub
jge
add
das
repnz
fwait
rclb
mov
test
popf
dec
dec
iret
push
lret
lods
test
sbb
iret
data16
les
pop
in
xchg
stos
fsts
pop
mov
in
sub
sub
pop
xlat
pop
lret
fstp
dec
leave
cmp
cld
lds
fsubrl
std
sub
sbb
inc
loopne
les
pop
test
js
jne
fisubrl
fstl
aas
loope
sbb
loop
imul
repnz
leave
daa
inc
sti
daa
hlt
cmp
xor
jecxz
cmp
out
jge
and
js
dec
pop
cmp
insb
mov
scas
sbb
xor
mov
cld
std
mov
adc
icebp
or
jae
dec
in
sbb
out
sbb
scas
es
cli
sub
insl
vxorps
mov
pop
test
inc
fidivs
xorl
and
jbe
adc
insl
in
mov
sub
fdivrs
call
loope
push
shll
jo
popf
scas
xchg
pop
loopne
sbb
jecxz
stos
inc
loope
mov
jo
fwait
insl
mov
popf
arpl
idivl
into
iret
pop
movsb
adcl
dec
cli
ljmp
popa
or
xchg
xchg
pop
add
test
mov
test
mov
xchg
mov
add
mov
std
call
and
cwtl
faddl
out
mov
adc
adc
inc
pusha
sbb
xor
clc
inc
ret
cmpl
cmp
sbbl
xchg
push
cmp
mov
fbstp
hlt
add
bound
cmpsl
aas
xchg
mov
lock
test
pop
dec
xchg
loope
or
jb
inc
xor
fs
sub
aam
dec
mov
pop
rcrl
xor
xor
mov
popa
adc
and
into
push
lods
jae
pop
pushf
lea
add
inc
inc
sub
xchg
js
push
sub
inc
fisubrl
adcl
jmp
dec
ret
stos
test
hlt
stos
jmp
das
in
insb
out
test
pop
adc
outsl
inc
daa
fdivrs
mulb
inc
inc
fdivr
cwtl
dec
xor
outsl
cld
inc
in
mov
mov
and
hlt
ds
out
xor
out
xchg
or
fstps
inc
stos
inc
int3
imul
inc
mov
mov
lods
add
push
out
int
into
insb
out
jne
inc
mov
test
jo
sbb
fbstp
fisubrl
loope
rclb
pminsw
scas
call
dec
stos
mov
xchg
imul
and
lret
xlat
jmp
sbb
push
dec
mov
negl
dec
dec
cmpsl
push
out
movsl
cmp
pop
stc
or
mov
daa
icebp
dec
or
repz
push
push
clc
cltd
mov
lret
fstl
pop
cmp
mov
xchg
fs
dec
fisubl
mov
jle
jmp
push
jle
mov
mov
sarb
inc
cmp
aas
cs
loop
repnz
loopne
adc
in
lea
xlat
mov
push
insb
in
in
and
jb
cld
mov
xchg
xchg
sbb
cmp
mov
mov
cli
push
xor
jp
xchg
in
ja
sub
or
mov
and
pop
fiadds
jle
clc
jnp
clc
in
cs
and
repz
pop
into
shlb
js
inc
mov
dec
or
test
movsl
fwait
mov
loope
divb
fs
mov
adc
mov
jg
out
fsubrs
add
rcll
sbb
bnd
movsl
jo
inc
mov
xchg
and
inc
roll
bound
mov
dec
xor
cli
inc
movsb
cmp
outsb
push
lods
fwait
mov
sub
call
jge
lahf
or
scas
xchg
mov
cvtpi2ps
cli
sub
cltd
cld
cmp
push
inc
sbb
lods
pop
bound
out
jp
les
test
lret
mov
outsl
jne
xor
mov
mov
leave
mov
xchg
in
mov
xor
fidivs
dec
leave
sahf
push
fistl
mov
mov
popf
mov
es
sub
mov
xchg
enter
inc
bound
call
mov
mov
inc
lods
add
jecxz
xor
outsb
add
clc
dec
psrad
dec
out
xchg
or
mov
push
lock
inc
fsubr
imul
cmp
xchg
jp
into
je
lahf
add
pushf
iret
es
push
mov
addr16
and
pop
jbe
push
mov
sarb
mov
cmpsl
ds
dec
std
dec
aam
jp
in
push
and
inc
test
mov
add
lock
outsb
sub
xchg
push
mov
icebp
mov
pop
insl
loopne
je
stos
mov
dec
dec
outsb
dec
xor
xchg
add
pop
cmp
mov
outsb
into
adcl
addr16
notb
mov
incb
mov
and
inc
aaa
into
js
and
jnp
inc
xchg
lock
in
in
test
imulb
mov
jns
mov
scas
mov
nop
and
loope
rcrb
scas
xor
loopne
jo
mov
cs
stos
lea
dec
movl
aaa
push
push
or
jbe
cld
dec
dec
fisttpl
cmp
ss
inc
movsb
xchg
scas
push
sahf
adc
ja
lods
cmp
jns
xchg
dec
fs
scas
idivb
or
jl
lds
lea
mov
xor
pusha
xor
inc
fidivs
loop
call
dec
mov
adcl
icebp
jbe
cmp
dec
xchg
xor
or
mov
jbe
inc
inc
rolb
xchg
mov
loope
imul
xchg
out
push
mov
xchg
mov
dec
mov
sbb
aad
ljmp
pop
sub
jecxz
or
push
out
imul
repnz
push
out
jnp
or
rolb
les
out
jp
bound
les
push
std
pop
shr
push
mov
std
mov
add
inc
sbb
pushf
ljmp
dec
jmp
pop
xor
push
leave
pusha
scas
mov
out
and
gs
sub
ljmp
jbe
or
in
pusha
fldenv
imul
mov
jmp
push
sbb
pop
xchg
scas
jns
jns
mov
rcr
mov
incl
stc
sbb
mov
cmc
mov
adcl
mov
dec
pop
sahf
cmp
mov
mov
pop
xor
or
into
add
add
or
mov
push
sbb
insl
jne
into
cmp
aas
push
push
lahf
and
xchg
daa
test
xor
jae
loop
push
ds
fsts
in
mov
imul
scas
pop
cld
jl
dec
sub
popf
xorl
mov
data16
orl
in
fsubp
xor
sbb
in
push
lds
scas
call
aas
dec
mov
movsl
sub
imul
xor
imul
push
ds
mov
jmp
cli
inc
jo
mov
and
test
arpl
pusha
fcoml
sub
xor
mov
jae
ret
push
imul
gs
daa
xchg
sub
stc
in
sarl
ror
popa
cmpsl
inc
fcmovne
mov
bound
mov
getsec
cmpsl
rorl
adc
cmpsl
daa
pusha
mov
pop
cltd
loop
and
inc
lcall
xchg
xchg
and
xor
cmp
mulb
sahf
fndisi(8087
jge
mov
or
subl
scas
xchg
daa
dec
sbb
sub
shrl
out
je
imul
jecxz
jo
popa
add
sbb
fsubp
jp
dec
push
push
daa
add
jp
out
sub
popa
inc
mov
jno
mov
fdiv
outsb
insl
pushf
or
mov
lret
cwtl
std
out
jle
in
xor
mov
push
or
fs
dec
cmpsb
jbe
add
gs
xchg
lock
push
dec
xchg
aas
ret
stc
test
xchg
inc
dec
lahf
pop
mov
hlt
test
add
jbe
hlt
add
mov
pop
pop
xchg
scas
push
jle
fwait
push
das
lock
loopne
shl
cmp
loop
mov
aam
outsb
test
loope
int
cli
lock
ret
ret
ja
sub
add
or
xchg
push
call
cmp
aam
xchg
ss
mov
sarb
inc
jmp
in
xor
dec
mov
add
xchg
push
xchg
fstps
mov
cmc
cmp
inc
into
inc
sahf
js
movsl
cld
adc
mov
inc
psllw
pop
adc
push
sub
xchg
popf
fs
test
and
push
mov
loopne
ja
arpl
es
mov
and
xchg
xchg
imul
sbb
cli
add
adc
and
cmp
mov
rol
ds
sbb
outsl
add
sub
cs
out
ret
pop
in
mov
jle
push
imul
push
mov
lock
jnp
fcoms
out
inc
mov
pop
jmp
loopne
lea
mov
std
call
push
sbb
adc
jp
push
out
cld
jg
sbbb
push
add
mov
mov
cs
dec
push
pusha
add
shll
mov
pop
and
pop
dec
cmp
mov
or
fs
sub
repz
lock
xor
imul
fstpt
daa
pop
scas
mov
loop
cltd
sarb
or
outsl
loop
rolb
push
xor
and
inc
inc
push
inc
pop
mov
sub
xchg
cmp
cmp
or
push
or
sub
mov
clc
mov
mov
outsl
pop
mov
lock
push
and
mov
cmc
pop
mov
ljmp
aad
inc
ss
and
or
adc
mov
out
dec
out
sbb
js
fcoms
mov
fbstp
push
pop
mov
cmp
add
popa
jns
jp
sub
inc
stc
and
adc
lcall
inc
push
lods
jo
mov
out
push
fcmovne
xor
loope
stos
or
xchg
lods
dec
cmp
outsl
loop
in
imul
aam
cmpsb
xchg
xor
cltd
cmp
push
imul
push
setnp
xchg
jnp
fisubl
xlat
fldenv
lods
ljmp
pushf
aaa
mov
push
lods
mov
ficomps
inc
or
shrb
push
mov
sbb
push
sub
cmp
repnz
negb
outsl
loop
adc
jns
jns
inc
adc
pfmul
loop
jg
mov
xchg
movsb
pop
sbb
mov
adc
mov
mov
inc
xchg
dec
xor
rol
hlt
test
scas
inc
add
fadds
push
mov
out
adc
sti
inc
psubsb
and
mov
pop
lret
std
sub
pop
repnz
push
inc
popa
dec
sub
jae
cmpsb
pop
dec
lret
sub
push
and
rolb
enter
push
lds
mov
in
cmp
pop
je
nop
les
jno
xchg
mov
int3
out
ret
sti
jbe
push
sbb
xor
sbbb
fbstp
leave
cmpsb
cmp
cmp
cmp
push
inc
inc
clc
hlt
cli
pop
push
push
sbbb
and
mov
xor
repnz
and
mov
push
and
stos
push
sbb
loopne
xor
jo
shl
dec
in
repz
push
xor
ds
jbe
jle
xor
inc
xorl
pop
fwait
xor
push
inc
inc
fidivrs
lret
pop
int3
insl
add
mov
inc
lea
mov
push
xchg
xchg
dec
adc
push
fidivrs
ja
xlat
xor
jecxz
dec
adc
dec
dec
or
xchg
pop
das
sub
xchg
dec
sbb
fcmovnb
shl
jg
xchg
sub
push
cmc
lea
cwtl
dec
cld
jl
push
xchg
jae
push
add
lods
and
inc
xor
imul
aas
mov
divb
and
andb
pop
movsb
inc
notl
push
jl
mov
cltd
fiaddl
add
aad
frstor
and
push
mov
push
jecxz
sbb
push
movsl
rol
into
dec
jecxz
out
outsb
and
or
es
adc
add
pop
enter
sub
pop
xchg
pop
stc
clc
cmp
ficomps
mov
xchg
mov
ficomps
mov
pop
adc
inc
cmc
mov
pop
int3
popf
inc
enter
imul
rorb
mov
icebp
dec
sub
jg
pop
dec
push
push
sbb
push
testl
das
jl
popa
pusha
daa
add
sbb
lds
sub
jno
mov
lea
mov
movsl
rcll
cmp
pop
iret
adc
fsubs
jae
jno
fxam
inc
mov
sbbb
dec
xor
mov
ss
push
je
push
fnstsw
mov
mov
sub
dec
movsl
xchg
imul
clc
je
sub
adc
mov
and
fmuls
sti
push
cmpsl
pushf
or
lods
mov
cs
adc
mov
les
cwtl
pop
repz
inc
cwtl
push
es
xor
dec
fcoms
adc
mov
xchg
inc
xchg
add
ret
hlt
aas
in
das
lret
push
push
rol
push
mov
and
cmp
mov
aaa
push
scas
imul
imul
lods
rorb
ret
dec
das
outsb
cmp
cltd
push
push
and
pop
dec
scas
ds
fwait
xor
pushf
lock
pop
adc
sbb
stos
mov
push
push
test
mov
push
int
repnz
jecxz
pushf
adc
jp
lods
xor
data16
setge
rorl
imul
popf
repz
aam
and
out
arpl
sbb
stos
jecxz
mov
add
xchg
and
sbb
cli
sbb
pop
dec
bound
xor
lods
inc
xchg
ficompl
mov
fnstenv
mov
push
lds
adc
ss
fbld
inc
push
inc
call
and
das
repnz
ret
mov
and
jg
xchg
adc
push
cmp
mov
inc
cmp
push
add
dec
lods
call
insl
ret
movsl
push
fs
cmc
pop
mov
mov
in
pop
data16
clc
fsubrs
mov
lret
xchg
xor
add
cmp
push
or
add
mov
test
iret
sbb
xor
mov
adc
jnp
mov
add
pop
pop
cmp
add
call
jmp
sahf
mov
inc
sbb
xor
pushf
and
fisubrl
or
ret
jbe
jo
data16
sub
insl
mov
xchg
pop
sbb
inc
lock
add
lods
xor
pop
out
push
dec
cld
scas
out
mov
stos
cwtl
insb
lahf
nop
mov
cmpsl
mov
dec
leave
int3
fs
fldenv
push
xchg
roll
aaa
data16
stc
rcrl
pop
xor
fld
ja
popf
xor
shlb
inc
mov
ret
mov
add
divb
sarb
mov
jl
push
andl
clc
imul
dec
jle
inc
push
sbb
enter
lcall
xor
push
test
addr16
pop
sub
cltd
hlt
sub
or
or
fadd
jns
mov
adc
dec
and
inc
icebp
add
and
arpl
loopne
and
pop
dec
mov
mov
jae
xor
jae
push
sub
jb
add
push
inc
and
loope
in
mov
pop
fisubrl
pop
pop
das
lds
insl
iret
mov
loop
push
pusha
mov
shlb
fdivl
int
or
shrl
and
mov
jg
shrb
xor
xlat
out
cwtl
mov
testb
in
incl
mov
bound
lahf
sbb
dec
shlb
das
fsubrl
fadds
clc
iret
mov
xchg
sub
mov
pop
jp
ret
jnp
stos
mov
lcall
xchg
cmp
shrb
add
inc
lods
addr16
fdiv
push
or
lret
pop
adcb
inc
push
and
fmull
sbb
xor
xor
mov
aas
aad
xchg
push
jmp
popf
lods
popf
shlb
leave
dec
jle
mov
mov
xchg
roll
int
es
mov
inc
int3
fimuls
lcall
scas
fldpi
xor
sbb
pop
xchg
mov
je
lods
repz
jno
bts
jne
sub
lods
js
fimull
in
inc
mov
mov
shrl
jle
out
decl
xchg
dec
je
into
and
adc
and
add
inc
in
mov
xchg
cmp
inc
jb
xchg
push
push
dec
push
or
add
sbb
jne
adc
adc
sbb
jge
popa
and
icebp
aaa
push
aaa
int3
jg
cld
in
imulb
out
lret
in
inc
fnsave
xchg
pop
enter
cmp
push
mov
pminub
jbe
ljmp
out
xor
xor
pop
xchg
push
popf
push
jae
jbe
fwait
push
pop
add
push
clc
leave
mov
stos
push
fsubrl
loope
xor
mov
xor
ja
dec
pop
push
movsb
cltd
ljmp
xchg
vandnps
insb
icebp
mov
rcrb
dec
xor
idiv
mov
mov
mov
ret
xchg
dec
cltd
xchg
cltd
or
ja
fiadds
pushf
xchg
pushf
push
das
push
cwtl
pusha
aas
and
and
mov
int3
ret
sbb
inc
es
into
in
sti
inc
fsubs
inc
and
pusha
xor
rcrl
push
ja
mov
aas
jae
movsb
mov
clc
popf
out
ljmp
sbb
or
scas
in
cmp
sbb
pushl
mov
add
popf
mov
push
jmp
adc
cltd
sbbl
adc
dec
leave
fnstcw
mov
jbe
push
adc
mov
jb
cmpsl
in
into
lds
int3
enter
mov
xorps
out
insl
les
sub
pushf
jbe
mov
xchg
push
jno
sbb
cltd
fldcw
dec
imul
ret
dec
jo
leave
int3
sub
std
jl
fcmovnu
lock
cmp
cmp
sbb
add
inc
fwait
sub
or
jae
mov
ret
xchg
xchg
jg
ret
push
cmpsl
rolb
xchg
sub
jle
inc
mov
rol
popf
dec
clc
or
cmpsb
jecxz
add
pop
mov
and
xor
jl
lods
pop
mov
movsb
pop
adc
mov
idivl
test
mov
test
inc
pop
test
fisubs
jl
std
bnd
push
jl
dec
mov
test
add
mov
push
mov
push
dec
adc
addr16
xchg
sbb
mov
out
popa
cmp
inc
lcall
sub
mov
lock
iret
add
jae
test
mov
adcl
mov
sbb
push
aas
push
mov
int
mov
mov
jns
insb
cmp
adc
mov
adc
xchg
add
into
ss
sar
or
and
push
in
mov
push
mov
and
fstl
xor
lret
out
sbb
fimull
jne,pt
jo
pop
sbb
outsl
movsb
cmpsl
repnz
push
in
jl
or
test
lret
rorb
inc
jecxz
jmp
movsb
fldz
sub
push
pop
out
dec
mov
jbe
sbb
loope
inc
mov
call
sbb
mov
flds
push
cltd
aam
call
dec
cltd
popa
push
enter
out
aam
jae
mov
jbe
aas
stc
inc
out
data16
nop
cmp
xlat
push
cli
test
sub
loopne
loop
jo
mov
dec
aad
imul
xchg
mov
js
xor
test
pushf
jno
mov
std
scas
in
imul
add
cmpsl
faddl
and
movsb
loop
shlb
scas
les
aad
xchg
nop
test
cmp
cmp
jns
movsb
mov
jmp
or
stos
jmp
popf
cwtl
outsl
mov
pop
testb
xor
pop
mov
adc
out
xor
mov
aas
push
cmp
adc
push
aas
jo
dec
icebp
dec
pop
cmp
inc
cmpsl
mov
stos
pop
push
mov
int
xor
fdivl
test
xor
dec
pop
mov
test
push
mov
pop
push
and
repz
mull
nop
out
movsb
lock
out
andb
pushl
inc
inc
mov
cmp
lahf
xorb
shlb
and
adc
jno
mov
inc
fmul
jle
nop
outsb
dec
mov
dec
dec
sub
mov
mov
push
lock
cmp
sub
mov
call
subl
lahf
and
mov
dec
cmp
mov
arpl
or
ss
inc
shlb
je
in
and
imul
mov
imul
addr16
or
lret
adc
push
daa
xchg
mov
fsubrs
mov
mov
add
loope
scas
and
lahf
mov
cmpsl
rorb
add
stc
es
and
push
mov
or
dec
inc
or
xchg
add
cli
xor
add
mov
xchg
sub
dec
mov
ja
imul
lock
jp
mov
inc
mov
inc
das
or
call
push
mov
adc
push
scas
xchg
ss
nop
or
pop
outsb
and
jecxz
fcmovnb
popf
or
addr16
sti
sbb
aad
jmp
insl
stc
add
cmpb
adc
pop
and
inc
clc
pop
push
js
cltd
sub
xchg
aad
cmpsl
xor
push
jns
daa
stos
aaa
jnp
or
push
iret
mov
cli
mov
stos
sub
jne
inc
xchg
xchg
mov
ret
imul
addr16
pop
cmp
mull
adc
addr16
sbb
xchg
dec
loop
sub
inc
maskmovq
dec
loopne
in
sub
lods
fildl
in
rcll
out
xchg
stos
fsts
push
in
test
or
inc
ret
pop
xor
sbb
in
inc
push
push
jmp
das
gs
mov
fbstp
adc
cld
xchg
arpl
je
lods
sbb
daa
adc
gs
cmc
aas
dec
pop
jo
shr
jmp
xchg
cmpsb
mov
lock
movsb
push
out
sbb
in
je
add
xor
sti
stos
std
out
inc
fstpl
adc
add
jecxz
mov
jecxz
mov
int
dec
fdivrs
in
orl
rorb
jp
or
pop
pop
lret
dec
out
scas
in
mov
mov
loopne
fcmovnb
inc
xchg
adc
mov
outsb
out
popf
pop
push
or
ret
sahf
imulb
push
pop
fsubs
notl
cmp
jmp
push
ret
pop
or
sub
cmp
jp
cmpsb
or
movsl
je
data16
fwait
and
mov
mov
insb
nop
add
fsubr
loopne
xchg
sub
sbb
scas
inc
ficomps
dec
out
inc
pushf
scas
add
and
iret
orl
xchg
pop
fstl
mov
in
fdivrl
and
sbb
or
pop
dec
lahf
cmc
or
aas
mov
fadd
aam
mov
lods
mov
cltd
scas
out
or
stos
inc
mov
fsts
fsub
push
add
test
and
mov
ror
xor
into
es
push
pushf
jbe
pusha
add
dec
sahf
push
pop
cltd
fisttpll
push
pop
inc
test
ret
dec
lahf
out
adc
jmp
pusha
inc
fnstenv
mov
mov
fidivs
pop
scas
fldenvs
cmc
inc
icebp
mov
dec
shlb
and
out
push
dec
or
into
pop
in
test
and
mov
sbb
fistpll
fstps
inc
pop
push
orb
js
push
xor
xlat
ds
push
sub
mov
jb
fnstenv
fsubl
leave
in
nop
push
stos
out
mov
js
sbbl
test
mov
mov
cmc
or
data16
fidivs
mov
push
in
lcall
mov
sbb
movsb
js
int
inc
lea
scas
sub
push
insl
mov
aas
mov
addr16
gs
in
push
push
pop
stos
lods
inc
xor
sbb
sahf
or
adc
mov
into
test
clc
pop
loop
jl
sbb
sbb
cmpsl
push
in
fcoml
push
pop
cli
add
gs
insb
dec
iret
cmpb
sbbl
inc
sbb
inc
dec
mov
int
mov
shl
sarl
inc
pushf
pop
mov
test
lea
push
mov
cmp
push
je
xor
dec
jo
xchg
gs
cmp
jg
jg
mov
pop
shll
push
push
xor
loope
jp
fbld
mov
xor
cli
adc
or
adc
imul
dec
loop
das
sub
movsb
shl
scas
xchg
mov
adc
sbbl
cs
add
mov
fs
repnz
aas
dec
jb
mov
pop
mov
cmpsb
cmp
jae
and
push
ljmp
cmp
cmpsb
mov
inc
stos
fldl2t
sub
push
arpl
mov
and
pop
cmp
dec
mov
mov
adc
je
sub
xchg
pop
mov
maxps
and
push
mov
push
popa
pop
push
xor
out
mov
loope
rorl
mov
push
fldenv
xchg
inc
addr16
jnp
mov
jmp
sbb
gs
or
fxch
or
cmpsl
jp
rclb
imul
xor
mov
rcrl
andl
pop
adc
jbe
shl
mov
mov
push
icebp
and
jecxz
js
dec
push
jge
test
rorb
js
xor
fnstcw
jb
icebp
daa
ljmp
js
jns
mov
push
pop
repnz
lods
clc
push
pushf
arpl
out
fadds
or
pop
scas
add
rorb
xor
or
int3
jg
out
cmp
ds
insb
xchg
lahf
ss
pusha
push
sub
mov
lret
mov
sarb
sbb
aad
jp
mov
inc
fnstcw
pusha
sub
psllq
mov
add
sub
mov
fcoml
mov
fstpt
ljmp
and
cmp
fwait
add
pop
andb
shlb
iret
push
loopne
sbb
repnz
mov
push
mov
pop
ret
mov
aas
jb
fists
and
inc
out
or
xchg
cmpsl
cmp
out
mov
out
dec
pushf
cld
stos
lods
data16
icebp
lods
dec
mov
cmc
mov
aad
mov
pop
cmp
adc
shlb
or
push
scas
inc
xchg
xor
jbe
pushf
adcl
enter
add
xor
mov
lret
sub
inc
add
ret
pop
jbe
xor
js
pop
add
xor
xchg
mov
icebp
into
mov
aad
je
out
std
add
inc
sbb
or
or
mov
aam
mov
sub
cltd
cmpsb
xor
pop
jno
sub
mov
imul
jecxz
xchg
popa
into
xor
add
sub
jbe
ret
arpl
fs
imul
stos
jo
or
jecxz
clc
inc
xchg
jmp
repz
lods
cmpsl
fwait
mov
lahf
inc
and
in
cmp
mov
adcl
lret
cmc
aas
insl
das
scas
jbe
loope
pushl
mov
add
int3
mov
iret
loop
fadd
pop
or
dec
repnz
outsl
pop
je
iret
std
xchg
add
cs
xchg
fstpt
not
mov
jle
cmp
fsubrs
insl
ret
addr16
pop
push
rcr
jb
shl
mov
stc
aas
or
add
jg
xor
mov
std
push
mov
jp
sti
fwait
test
mov
mov
cmc
leave
jnp
mov
cmpsl
mov
push
arpl
sub
adc
shll
loop
adc
repz
and
mov
push
hlt
inc
fsubl
jg
ss
fidivrs
ror
fidivrs
dec
mov
pop
xlat
mov
sbb
inc
leave
jb
mov
repnz
sbb
aas
rorb
xor
push
mov
scas
and
int3
push
mov
xor
lret
pusha
pop
ja
mov
sbbb
in
pushf
dec
movsb
inc
dec
addr16
out
daa
inc
jno
dec
jb
repz
cltd
scas
aas
cli
mov
sbb
data16
mov
repz
test
out
mov
fs
mov
cs
pusha
and
or
cmpsb
cmp
js
fs
std
dec
pop
decb
fwait
sbb
and
cmp
mov
and
imul
testl
lods
hlt
mov
imull
pop
mov
test
sarl
and
adc
jecxz
xchg
adc
fadds
arpl
int
out
xchg
fldenv
fmull
leave
xor
sub
sbb
mov
mov
xchg
push
into
mov
bound
and
inc
repz
ljmp
clc
dec
xor
outsb
jg
mov
inc
cli
or
rcl
cld
jge
jae
sbb
cld
adc
or
mov
addr16
jle
mov
test
xchg
pop
sub
xsha1
cmpsb
push
or
xchg
adc
ds
dec
inc
pushf
repnz
or
cmp
jmp
pop
pop
insl
cmp
push
out
mov
jo
lcall
pop
sar
popa
or
outsl
bnd
lss
mov
imul
sbb
xchg
xchg
out
call
bound
push
inc
lea
jg
scas
lret
jbe
jl
pop
sub
push
je
fsub
jl
xlat
outsb
movsl
dec
and
lcall
aaa
dec
mov
fiaddl
jb
out
lds
inc
into
enter
loope
or
cmpsb
jns
jmp
jns
pop
in
sbb
clc
cmp
ljmp
pop
popa
xlat
mov
jns
pop
stos
add
jb
enter
push
mov
or
cmpl
loop
bound
add
push
lret
xchg
fnstcw
repz
xchg
dec
into
pop
sub
nop
out
adc
mov
sti
fidivl
mov
mov
lods
sub
xor
adc
in
pop
das
lods
nop
or
jo
rol
push
shll
xor
pop
cmp
pop
lock
rorl
inc
inc
or
cmp
pop
popf
push
push
jne
clc
cli
sti
sub
mulb
dec
sub
cli
mov
sub
popa
shld
decb
lds
out
mov
adc
inc
push
outsl
test
clc
out
leave
push
aam
sub
stos
ret
dec
pop
sub
add
or
jns
ss
cltd
repz
pop
mov
pop
push
shrl
repz
insb
jno
mov
loop
cmp
pop
int
pushf
mov
shlb
mov
loope
test
jle
or
pop
xchg
inc
psrad
push
aad
jge
mov
add
lods
or
call
popf
insl
xchg
push
leave
or
gs
adc
pop
inc
es
cld
aas
push
data16
mov
dec
in
insb
inc
lea
sbb
jmp
icebp
and
inc
lods
movsl
cld
ja
dec
into
outsb
clc
jns
stos
int
rorl
lahf
stos
adc
jbe
mov
ret
push
test
loopne
add
clc
ret
inc
sbbb
dec
sbb
jge
xlat
push
jne
mov
mov
xchg
sbb
lock
stc
inc
push
fcmovnu
xchg
lcall
and
in
into
wbinvd
or
or
xchg
popa
fsts
ja
cs
xlat
cmp
fwait
add
sbb
jge
mov
mov
mov
dec
lret
rcrb
cld
test
jge
pusha
and
push
pop
add
dec
cld
and
mov
sbb
xchg
cmp
inc
pop
sub
or
in
outsl
jae
dec
in
pop
sahf
lods
lods
inc
fistpll
add
xchg
jmp
popa
sbb
pop
mov
pop
xchg
sbb
lret
jae
test
push
mov
add
xlat
repnz
out
add
jb
or
testb
lahf
mov
out
insl
in
ljmp
adc
add
mov
inc
cld
pop
imulb
mov
jnp
push
mov
cmp
pop
sub
sti
xor
dec
sub
stc
mov
sbb
push
popf
add
mov
pusha
leave
test
ja
jl
and
xchg
xor
stos
cmpsl
mov
push
test
filds
inc
rorb
cli
add
dec
pushl
out
int3
jge
fmuls
subl
dec
and
adc
xchg
pop
outsl
inc
and
dec
lcall
jbe
inc
jo
xor
push
in
xlat
mov
cmp
mov
je
jle
mov
in
pop
mov
sbb
cmp
cmp
in
sbb
adc
pop
stos
or
fists
rol
sub
mov
ret
dec
mov
fnstsw
mov
push
sbb
sbb
push
pop
cs
out
std
pop
sbb
jb
adc
jl
aam
lock
and
fadds
mov
fidivl
pusha
sti
daa
pop
dec
dec
sbbl
shlb
enter
push
mov
popf
int3
arpl
cmp
push
iret
xlat
jmp
aaa
cmp
add
aaa
add
mov
inc
jge
sbb
pop
lcall
data16
roll
test
icebp
flds
inc
testb
mov
rcll
aad
push
fstpl
jg
and
xchg
imul
dec
fsub
repnz
push
ljmp
sub
out
lret
dec
inc
addr16
push
mov
push
mov
shrb
mov
loopne
test
insb
xchg
fldl
mov
mov
push
gs
mov
push
push
inc
out
add
pushf
xor
outsl
push
cmp
or
aam
imul
cmpsl
adcb
sub
fs
lock
add
repnz
mov
adc
sub
js
popf
ja
out
and
fisttpl
or
sbb
cmpsb
ds
rcl
and
rcrl
idiv
mov
inc
pop
sbb
fcomp
rclb
cli
add
stc
int
mov
jp
mov
add
imul
jno
outsb
mov
fwait
andl
xchg
adc
pop
mov
sbb
jbe
xor
push
jno
or
inc
inc
rcrl
fildl
push
adc
mov
bound
pop
inc
clc
inc
shll
loope
aaa
inc
clc
jle
push
dec
pop
fwait
into
and
push
pop
adc
je
xor
cmpsb
fld
adc
cmp
mov
mov
sub
mov
cmp
sub
and
out
es
iret
jecxz
jae
xchg
lret
jns
mov
data16
jnp
sbb
sbb
ret
cli
fisubrl
cmpl
cwtl
dec
lret
shlb
movsl
sarl
or
lcall
in
movsb
pop
ja
es
pop
out
aad
pushl
fwait
inc
clc
pop
cmpsb
sub
aas
arpl
cli
xchg
lcall
pop
imul
iret
mov
adc
mov
ja
daa
lea
jp
xor
jno
aad
rcll
mov
imul
sub
push
scas
xchg
stc
popa
clc
sub
jge
aam
ret
test
iret
push
sub
rcrl
xor
mov
cmp
in
or
push
inc
daa
pop
mov
mov
inc
xchg
fisttpll
test
mov
jae
jae
out
rcrb
dec
jnp
in
dec
push
aam
jmp
pop
int
stos
inc
pop
xchg
sbb
cmpsl
adc
inc
movsb
hlt
pop
push
and
bound
dec
in
shrb
into
insb
cmp
pushf
inc
std
jmp
fidivl
dec
push
lcall
xchg
dec
cmpsl
add
mov
and
cltd
add
xor
xchg
or
push
or
adc
jl
subl
lret
and
cld
inc
pop
or
sahf
sbb
push
push
inc
jmp
addr16
clc
pop
out
mov
int3
iret
add
sbb
enter
push
jmp
jnp
push
or
jmp
sahf
icebp
pop
xor
imul
cmpsl
clc
mov
jnp
pop
push
rclb
mov
pop
xchg
and
push
xchg
fcmovnbe
sub
pop
and
jo
xor
push
pop
out
insl
hlt
cld
je
outsb
pop
hlt
mov
shl
fs
xchg
jno
daa
arpl
mov
testl
or
mov
dec
push
jno
lea
xor
fnsetpm(287
and
cmp
xchg
lret
sub
and
sub
add
adc
or
mov
fistpll
pop
movsl
imul
pop
in
push
inc
loope
aaa
mov
mov
fsubr
dec
mov
mov
jg
std
dec
out
shl
movsl
out
pop
dec
jnp
dec
inc
sbbb
push
subb
xor
xchg
pop
aad
in
pop
rclb
hlt
imul
ret
adc
imul
dec
pop
aaa
loop
push
test
dec
out
mov
inc
ret
clc
hlt
jg
mov
jne
xchg
jg
dec
mov
fisubrs
adc
insb
jg
mov
mov
inc
mov
xchg
stc
bound
lahf
lahf
push
subl
inc
xor
dec
add
mov
jnp
push
cmpsl
in
dec
or
test
in
das
xchg
mov
ss
test
sahf
pop
xchg
lea
mov
gs
cpuid
xchg
sub
test
inc
sub
mov
test
pusha
cmp
arpl
push
ret
lcall
cmpsb
cmp
mov
pop
lret
call
mov
in
outsl
xor
fmull
inc
arpl
fldenv
and
sbb
push
outsl
dec
adc
inc
push
in
stos
pusha
pop
enter
scas
mov
or
mov
icebp
inc
xor
mov
lds
in
adc
push
push
movsb
jle
sub
aaa
xlat
popa
loope
cmp
aaa
into
add
aam
push
stos
jmp
dec
mov
pushf
sbb
mov
repnz
lods
enter
xchg
add
cli
pusha
sbb
sub
shl
data16
fsubrl
push
pop
int3
lret
sub
aas
cmpsl
inc
inc
mov
ret
push
jnp
leave
shl
cmp
fpatan
cmp
loop
test
mov
mov
sub
add
nop
push
aaa
and
adc
inc
testl
icebp
lea
mov
and
insl
mov
and
or
xor
jnp
xlat
push
in
orl
pop
fstpl
mov
stc
or
jmp
xchg
test
mov
addr16
mov
adc
mov
inc
cmp
pusha
ss
shll
push
ja
mov
repz
jecxz
cmp
sbb
inc
inc
cld
jp
scas
cmp
repnz
add
cmp
hlt
data16
push
ja
fwait
icebp
xor
and
repz
push
xor
int
lcall
sbb
aad
in
jns
mov
push
jp
cs
idivl
mov
insl
add
mov
fists
adc
jb
fsub
in
add
mov
inc
ret
lods
cmp
adc
shl
lahf
stc
je
nop
mov
out
cmpsl
repz
push
iret
push
stos
jae
loopne
mov
jne
jp
ljmp
mov
scas
adc
popa
sbbb
mov
xchg
sbb
dec
sarl
loop
adc
stos
lods
mov
clc
loop
add
bound
add
dec
pop
lcall
sbb
jecxz
pop
and
iret
idivl
into
call
dec
in
stc
or
leave
cmpsb
jge
or
dec
orl
lahf
test
loop
sub
mov
loope
test
inc
ljmp
sub
icebp
orb
mov
shlb
add
call
mov
push
pushf
push
inc
mov
mull
in
mov
and
fsubs
dec
xor
std
aad
aad
lahf
push
call
push
sub
cmpl
lret
sti
shll
leave
xchg
xlat
xor
lret
mov
gs
iret
mov
movl
loope
push
add
scas
fwait
repz
mov
clc
cmp
jo
ja
in
sub
push
lret
test
cmp
sub
mov
cmp
push
mov
mov
xor
aaa
lcall
and
sub
inc
arpl
out
xchg
sbb
addr16
loop
hlt
sbbb
mov
pop
mov
cs
add
stc
shlb
sub
cltd
scas
lds
aas
mov
je
test
cmpsb
hlt
repnz
adc
jne
xor
pop
fcompl
pop
push
cli
pop
in
loop
rcrb
fsub
jle
xchg
cmp
adc
adc
cli
sub
mov
mov
jl
outsl
mov
test
in
lahf
jecxz
inc
loope
inc
movsb
jmp
ljmp
xor
add
aad
xlat
mov
add
mov
cmpsl
jne
push
xor
repz
imul
jnp
inc
pop
outsl
leave
push
lds
push
fnstsw
rcl
loopne
xlat
outsb
xchg
andl
push
xor
mov
mov
frstor
or
adcb
jb
or
repnz
xchg
adc
rcl
sbb
xchg
jmp
rcll
mov
or
hlt
mov
sub
rol
test
and
fldl
decb
sbb
lds
mov
xchg
sub
or
xchg
push
xchg
mov
adc
dec
mov
and
js
in
jl
sbb
nop
pop
repz
mov
pop
insb
lods
push
jb
loop
stc
popa
cmp
cmp
aad
punpcklwd
push
lahf
push
mov
mov
xor
xchg
mov
mov
pop
or
push
sbbb
fidivrl
mov
push
or
int3
flds
movsl
and
adc
rorl
add
add
into
lods
clc
mov
fcmovnb
mov
test
mov
in
in
loope
or
cmp
decl
jo
mov
mov
jmp
movsb
rolb
jne
xor
xchg
pusha
aaa
movl
dec
mov
in
pop
out
pop
push
movsl
cmp
pop
jns
and
fldt
aaa
sarb
lret
inc
cltd
ja
outsb
inc
fidivs
lods
out
clc
mov
js
outsl
inc
push
loopne
das
pushf
mov
sub
ljmp
sub
hlt
mov
outsb
mov
es
lods
jge
pop
popf
cmc
adc
dec
ror
adc
in
je
mov
xor
jb
add
negl
cltd
data16
cmp
cmp
or
outsl
jl
fbstp
push
sbb
idiv
fcmove
sysret
sbb
xchg
mov
fsubrp
sbb
xor
cltd
push
cmc
add
pop
sub
inc
loop
dec
cmp
mov
inc
jns
loope
out
push
push
mov
pop
adc
dec
jae
sub
lret
hlt
sbb
push
mov
dec
ds
push
std
mov
sbb
dec
lods
xchg
icebp
bound
mov
sub
daa
adc
int3
adc
xchg
inc
out
push
sub
scas
scas
cs
inc
add
ss
pop
in
les
push
addr16
pop
pop
cmp
cs
movsl
mov
idivb
dec
loop
inc
pop
lock
decb
xchg
ja
jno
mov
scas
ret
out
lock
and
cmc
dec
cld
mov
sar
into
lods
cld
and
out
sbbb
pop
jmp
push
pop
inc
and
rcrl
sahf
and
movsl
jae
push
or
lods
mov
xlat
sbb
mov
das
adc
jle
push
inc
mov
adc
mov
clc
pop
sub
jne
out
outsb
add
lahf
in
imul
xor
jge
popf
ljmp
and
mov
dec
or
jae
popa
lods
xor
ljmp
mov
xor
aam
xchg
xor
sbb
fsubs
sub
sarl
mov
jo
sbb
cmp
jmp
leave
xchg
pop
les
imul
into
outsb
mov
jnp
pop
push
mov
mov
add
in
inc
sbb
xor
arpl
adc
in
test
popa
cmp
pop
mov
xor
das
push
add
xchg
dec
movsl
incb
push
xor
mov
push
and
inc
test
cld
adc
xchg
rorl
sbb
gs
insl
fsub
push
xchg
test
stos
cmpsl
into
aaa
mov
cmc
fdivrl
cmp
rcrb
push
and
inc
loop
clc
adc
frstor
jle
add
sti
jne
je
inc
jg
mov
push
in
outsl
xchg
pop
mov
gs
lret
jns
mov
push
dec
test
xor
ret
out
imul
sub
xchg
add
int
mov
mov
push
sub
popa
sub
mov
or
sub
aas
nop
adc
jbe
out
jge
js
leave
pop
cltd
mov
cld
rorb
cli
iret
add
pop
outsl
hlt
rorl
lea
mov
or
mov
add
scas
ret
mov
mov
fs
lds
fdiv
mov
arpl
int
sub
cmp
jecxz
aad
sti
mov
mov
xchg
and
lahf
mov
rorl
mov
pop
cmp
in
cmp
or
xchg
imul
test
pop
insb
out
xchg
xor
ret
cld
and
cmpsl
test
scas
in
cmp
scas
cmp
add
fadds
jmp
ja
mov
shrl
mov
clc
cmpsl
sub
es
jp
rcl
xor
push
orl
call
jbe
and
lds
mov
add
mov
loope
aas
out
test
jle
inc
push
out
les
lahf
or
dec
loopne
scas
adc
sub
push
adc
dec
aaa
imul
movsl
out
jb
push
fsubrp
scas
xchg
mov
or
je
adc
out
dec
sti
xchg
jnp
nop
add
pop
cmpsl
inc
pushf
sub
aad
dec
xchg
call
xor
pop
in
jmp
lcall
pop
sbb
nop
scas
aaa
into
or
push
sbb
gs
pop
testb
cmp
inc
push
sbb
sbb
dec
roll
ja
call
pop
stc
push
push
stos
jge
or
cmp
jns
leave
jb
lea
jno
outsl
mov
and
mov
cmpsl
adc
out
sub
xor
test
adcl
mov
xchg
add
mov
ret
mov
mov
in
sti
fwait
lret
jns
adc
int
or
and
outsl
mov
sbb
add
xchg
call
or
mov
pop
cmp
lret
test
sbb
negb
mov
aas
lods
cmp
jmp
sets
outsl
xchg
jmp
negb
jmp
jbe
jl
mov
out
jne
pop
push
std
aaa
into
enter
push
pop
pop
xor
test
aam
flds
es
loopne
ss
mov
out
not
test
sub
and
aaa
adc
sbb
outsl
sub
xor
pop
sub
cs
jne
jle
pop
mov
mov
xchg
push
outsb
push
aas
push
cli
mov
roll
cld
adc
push
xor
mov
mov
movsb
and
inc
daa
ljmp
int
xchg
pop
scas
test
scas
std
scas
je
stc
push
dec
and
inc
cmp
push
leave
add
movsb
pop
ss
sbb
fs
push
icebp
mov
mov
fisttpl
mov
pop
imul
push
lock
sub
lea
rcrb
ds
scas
scas
xchg
xchg
sbb
or
push
stos
inc
and
or
addb
dec
push
inc
jecxz
adc
cli
shlb
out
or
xor
push
push
xor
mov
fwait
and
jne
sub
cld
or
dec
mov
pop
imul
inc
mov
sub
int3
push
icebp
inc
jmp
dec
pop
in
sbbb
push
pushf
push
pusha
dec
shlb
test
inc
pop
jg
xlat
dec
mov
fsts
xchg
dec
imul
mov
stos
bound
das
addr16
jmp
mull
js
xlat
or
add
add
add
sbb
jns
pop
aam
stos
dec
movsb
shlb
cmp
mov
xchg
call
push
jmp
test
in
sti
push
test
int3
cltd
xor
lock
mov
xor
in
lods
sbb
fcomip
push
fisubrs
int
je
xchg
sti
xchg
xor
out
mov
cmp
rol
repnz
cmp
adc
enter
faddp
sbb
outsl
push
jmp
jle
popf
je
shrl
or
mov
fistpl
xor
adc
jne
sub
mov
inc
aad
xlat
adc
outsl
fsubr
cltd
sub
nop
out
rolb
or
ljmp
divb
mov
ret
mov
out
arpl
pop
lret
scas
jae
nop
cmp
pop
call
pusha
sub
pop
test
fadds
lahf
scas
fsubrs
js
inc
mov
mov
pop
mov
rcrb
mov
push
sub
sub
je
ficoms
sub
bswap
fcoml
mov
cmc
push
dec
ss
mov
je
pop
cmp
or
cmp
add
outsl
lret
bound
pop
cltd
or
cmp
pop
test
and
nop
xchg
popa
clc
or
fcmovnb
sub
daa
ss
pop
je
add
and
mov
shl
in
adc
int3
cmpsb
jbe
or
jge
shrl
adcl
repnz
add
mov
in
ljmp
or
xor
popf
es
pop
lock
push
ja
adc
bound
push
pop
jge
dec
fs
mov
insb
xlat
adc
or
lcall
lods
pop
hlt
fisttpll
fdivrs
jns
inc
dec
jb
jge
leave
test
dec
outsl
aad
sub
pop
lcall
mov
pop
sbb
cmovbe
aaa
push
test
stos
pop
push
pop
insl
add
dec
leave
xchg
pop
addr16
mov
push
out
xchg
sub
inc
sti
insb
or
mov
dec
cmc
jo
mov
clc
lods
das
enter
push
leave
imul
movsb
or
gs
and
inc
sbb
inc
jmp
mov
adc
or
inc
ror
mov
mov
orl
and
cmc
lahf
ss
sub
stc
pop
ret
loop
sbb
stos
lret
push
frstor
adc
sub
cmp
es
mov
sub
cmc
retw
adc
inc
in
fldt
mov
inc
andl
push
sub
mov
sub
xchg
jb
sub
sub
dec
cmp
int3
jmp
sub
push
aaa
push
dec
sbb
dec
mov
pop
cmp
fcom
sub
dec
mov
pop
sahf
mov
fnstsw
dec
xchg
mov
cmpsb
in
sub
std
and
inc
into
dec
loop
std
data16
imul
and
mov
xor
into
mov
std
inc
fnstsw
push
xchg
dec
pop
cmpsb
aas
sub
and
int
cld
inc
mov
sbb
insb
call
cmc
dec
dec
std
addr16
loop
imul
sbb
xor
add
and
dec
ljmp
out
aam
sbb
aam
mov
pop
mov
sub
inc
pop
loop
pop
dec
pop
dec
add
and
pop
mov
lcall
pop
mov
cmpsb
mov
mov
pusha
mov
dec
lahf
push
lret
jp
sahf
out
fidivl
and
lods
outsb
jl
in
mov
push
lret
lods
inc
jmp
out
hlt
test
fdivp
and
and
inc
in
roll
outsl
push
pop
xor
or
mov
and
shr
loop
fsts
inc
clc
sbb
ds
add
sarb
lock
add
xchg
cmp
jecxz
fistpl
mov
test
jmp
sahf
rolb
stos
lcall
or
add
push
adc
and
pushf
test
or
pusha
jo
pop
mov
xlat
sbb
iret
cld
push
mov
adc
dec
sbb
jno
mov
xchg
and
ret
mov
lock
shrl
pop
stc
push
leave
push
in
addr16
jbe
xchg
jne
int3
sarl
add
cmpsb
lea
xlat
stc
aam
std
pusha
pushl
insl
add
inc
sbbb
and
inc
xor
pop
fidivrl
mov
movsb
pusha
xlat
pusha
jbe
data16
xchg
or
dec
lret
andb
movsl
jne
adc
int
sbb
ds
imul
xchg
xorl
out
mov
xchg
cmp
jle
nop
lods
popa
test
push
out
adc
and
js
fs
xor
xchg
ds
pushf
inc
xchg
inc
add
ja
push
mov
in
rorl
inc
int
jecxz
fdivrl
mov
mov
mov
les
imul
stos
xchg
push
flds
je
les
or
jmp
dec
sbb
mov
sbb
or
loope
cmpsl
testl
pop
sbb
adc
fsubl
rcll
into
push
mov
xchg
jb
fdivl
cmpsl
cwtl
inc
inc
mov
sub
ret
push
jne
leave
xor
jbe
mov
mov
and
popa
lret
cmpsl
sbb
or
mov
mov
imul
push
sub
mov
jle
insl
sub
inc
scas
mov
adc
jno
mov
fsubr
cwtl
or
imul
jg
mov
aam
or
dec
aam
in
int
rclb
aas
xchg
or
push
fcomi
jmp
cmpsl
fsts
sbb
sub
test
inc
jle
inc
jge
imul
ret
inc
jbe
aaa
add
out
xchg
sub
cmp
sahf
scas
clc
mov
jmp
fiadds
cmove
jb
or
mov
cli
rcll
mov
xor
xor
popa
cld
add
addb
xlat
dec
push
adc
jbe
xchg
fbstp
ds
jne
fisubl
mov
rorl
adc
mov
mov
lea
sarb
xchg
aaa
sbb
or
das
data16
out
inc
daa
push
int3
pop
pop
add
pop
cs
mov
lods
lret
jp
fwait
mov
fldenv
add
fiadds
cwtl
adc
xor
shll
lods
mov
stc
into
xchg
pop
inc
jmp
sbb
out
xchg
jo
scas
add
imull
xchg
cmp
xchg
inc
sbb
cmp
je
cltd
je
dec
mov
lahf
cmp
pop
dec
in
mov
aaa
pop
cmp
and
fs
dec
in
or
cmp
in
cwtl
pop
xchg
add
in
dec
and
ret
mov
add
popa
fidivl
mov
fistl
les
mov
les
cmpsb
mov
add
push
arpl
add
addl
pop
xabort
sti
ror
repnz
fmul
push
imul
test
or
push
sbb
leave
imul
jb
mov
cmp
sbbb
sbb
xchg
xchg
loopne
mov
es
mov
push
aaa
inc
shrb
jnp
adc
add
sub
std
es
stos
int
dec
dec
enter
mov
inc
mov
aas
mov
mov
jne
popa
mov
or
sub
mov
js
jae
xchg
insb
iret
pushf
pop
mov
pushf
aas
push
push
xchg
push
les
icebp
inc
mov
fldl
fisttps
cmpb
xchg
ret
lds
push
jno
push
scas
pop
adc
outsl
sarl
adc
mov
push
push
mov
outsb
in
push
dec
lcall
mov
add
es
or
xor
xor
xlat
inc
dec
jno
jl
inc
scas
cltd
pusha
adc
es
fists
pop
sub
gs
cmpsl
stos
in
and
inc
push
xorb
mov
mov
test
mov
lock
mov
icebp
adcb
call
adc
pushf
repnz
push
ja
ds
push
pop
and
xchg
cltd
xor
or
cmp
gs
sub
adc
jnp
shlb
out
jb
popa
ja
out
mov
lock
inc
sbb
ja
je,pt
dec
cmp
mov
ljmp
out
dec
jmp
cmova
add
std
les
mov
das
loopne
popf
cmp
iret
stos
cmpsb
lea
pop
cmp
mov
stos
sbb
xchg
pop
scas
add
leave
repz
into
pop
lock
aam
shlb
pop
jmp
mov
sbb
mov
cmpl
push
mov
xor
dec
sbb
test
stos
xchg
jmp
lods
popf
sbb
xchg
jae
testl
and
insb
outsb
inc
in
dec
add
inc
sbb
and
cld
xchg
mov
push
adc
bound
adc
int3
inc
lcall
xchg
or
jb
lods
xchg
jl
fyl2xp1
loopne
inc
hlt
mov
push
push
or
fnstcw
inc
aad
adc
inc
cmp
cmpsl
rcrb
dec
subb
push
mov
cmc
call
lret
addr16
adc
xlat
cmp
sbb
cmc
sub
and
in
mov
repz
sub
test
mov
leave
fcmovnu
cmp
stos
jmp
std
test
adc
mov
sub
ljmp
out
out
jne
add
arpl
sahf
mov
or
jmp
add
inc
pusha
or
or
jg
ds
xlat
test
mov
push
je
mov
adc
repnz
pop
ret
mov
push
js
ret
pop
gs
movsl
not
pop
jle
jne
push
sub
sbb
and
in
frstor
inc
mov
testl
adc
sbb
push
sbbb
dec
in
imul
ror
addl
sub
mov
push
icebp
adc
mov
call
cmp
movsl
bound
aam
jl
cli
cld
inc
popf
lods
mov
pop
repnz
mov
push
inc
addr16
stos
or
je
clc
fcoml
test
jbe
adc
inc
cltd
mov
jno
cmp
sbb
push
lahf
cmp
test
js
dec
stos
jbe
scas
jl
roll
pop
inc
fimull
push
out
fldenv
jne
movsl
sub
popf
jp
lcall
and
jnp
scas
inc
cld
test
jb
divb
int
cmp
fwait
jge
jbe
test
bound
outsb
xchg
mov
xor
int
sbb
adc
push
dec
loop
push
xchg
and
xchg
shr
jmp
jmp
mov
push
cwtl
cmpsl
lods
inc
push
mov
enter
mov
push
cmp
mov
pop
repz
add
je
jmp
test
sarb
xchg
jb
xor
mov
mov
xchg
adc
mov
dec
clc
fidivs
andb
mov
mov
aam
dec
push
stos
das
and
mov
out
mov
in
fidivs
dec
cmp
mov
aad
fistpl
adc
mov
es
ret
insl
sbb
mov
add
fnstenv
lret
pop
mov
pop
cs
xchg
gs
jge
shll
and
add
orl
pop
dec
pop
imul
push
std
mov
loope
fmulp
popa
shrl
adc
inc
mov
mov
jcxz
call
add
fidivrl
push
pop
imul
mov
mov
lret
fdivrs
sub
movsb
mulb
push
data16
mov
mov
cmpsb
push
lods
pop
hlt
lahf
xor
idiv
xor
mov
cmovs
outsl
popa
out
mov
add
sbb
out
loopne
jle
jecxz
stos
lcall
mov
imul
xor
xchg
bound
jp
mov
and
test
mov
adc
and
insl
ret
mov
je
push
adc
insl
sub
pop
dec
addr16
popf
repz
lods
imul
aas
clc
dec
cmp
ljmp
adc
movsb
xchg
inc
xchg
cltd
pop
lds
and
pop
repz
ds
scas
pop
inc
mov
inc
repz
lret
mov
xor
xlat
mov
jecxz
ss
inc
insb
dec
inc
fs
or
jb
push
adc
imul
mov
push
mov
push
fldt
cmpsb
leave
jg
adc
outsb
cmp
pusha
sahf
cmc
test
sub
xchg
testl
es
ds
cli
popf
xor
mov
push
andl
add
scas
in
push
loopne
dec
adcl
sbb
mov
adc
push
cmp
test
jle
mov
fwait
pop
mov
mov
fcomps
jb
xchg
sbb
adc
lfs
jnp
inc
fdivl
sub
fidivl
or
ret
add
jmp
push
int
sarl
xlat
pop
int3
ja
aas
imul
inc
or
ljmp
mov
popf
in
nop
xchg
sub
hlt
popf
cmpsl
mov
decl
cmp
inc
call
xlat
and
add
or
ljmp
push
jp
mov
lret
mov
dec
mov
lret
sub
andl
push
xor
decl
dec
divl
sub
mov
ret
mov
mov
notl
inc
mov
clc
stos
xor
inc
inc
sub
cmpsb
cmp
popa
or
adc
sbb
sbb
mov
cmpsb
inc
testl
push
jne
sub
bound
ljmp
cmp
daa
orl
jns
jbe
stc
mov
je
xor
shll
xor
cmp
cmp
sarl
mov
cmp
repz
popa
loope
cmc
cmpsl
stos
andl
icebp
addr16
xor
cmp
mov
mov
jl
dec
sub
jl
xor
dec
popa
cmp
mov
mov
jmp
mov
fldl
add
hlt
insb
scas
cmp
dec
dec
imul
xchg
jbe
inc
dec
cltd
xor
mov
jg
push
push
lods
xchg
mov
aas
popa
push
fnsave
pop
mov
cmp
shlb
dec
xor
cmp
xor
xchg
sub
push
cmp
addl
leave
sub
arpl
pop
loope
and
nop
es
sub
jno
mov
sub
fistps
mov
leave
scas
jbe
push
jmp
stos
xlat
icebp
fucomi
jo
mov
inc
movsb
gs
adc
inc
data16
js
mov
dec
cltd
sbb
push
jecxz
cmp
adc
loope
cmp
lret
jmp
adc
jg
cmpb
push
xor
mov
aam
jge
and
inc
pop
insl
adc
sub
mov
test
and
scas
pop
and
or
add
repnz
push
mov
xchg
mov
xchg
add
fidivrl
outsb
add
push
lea
dec
jb
out
in
ficoml
sbb
movsl
sarb
mov
mov
adc
ret
xor
pushl
hlt
mov
addr16
or
or
std
dec
dec
pop
les
lcall
or
hlt
cmp
aaa
jg
call
pcmpgtd
ja
sub
sti
pop
repz
stos
mov
ljmp
in
fs
cmpb
ret
pop
cmp
fstps
and
push
test
xor
inc
or
add
cmp
popf
push
push
lcall
cwtl
add
in
push
enter
jecxz
inc
inc
cld
cmp
fadds
jg
in
gs
fisubs
add
incb
aam
hlt
nop
dec
jl
in
imul
sbbb
int3
xor
loope
icebp
inc
pusha
fnstcw
sbb
addb
pop
inc
sub
ret
mov
inc
in
cmc
lds
pop
xchg
adc
adc
mov
arpl
divb
lods
or
dec
mov
fwait
inc
dec
jle
push
jns
push
data16
aaa
pop
mov
cmpsl
sahf
data16
add
daa
jns
mov
adc
push
fstps
js
mov
test
test
pop
insl
in
mull
xchg
pop
clc
sahf
ret
sub
call
xor
push
or
ret
loopne
jge
mov
add
mov
adc
movsl
xlat
sarb
xor
pop
inc
xor
xchg
gs
pop
ds
jae
into
sahf
sub
jno
inc
shll
jl
popf
lret
push
inc
insb
test
dec
stos
xor
das
cmp
xchg
sub
mov
dec
cmpsb
inc
adc
test
sub
insl
movsl
lods
inc
add
xchg
cmp
icebp
mov
add
mov
sub
sbb
jae
stc
inc
loope
inc
add
insl
dec
orl
subl
pop
or
imul
pop
fsts
xor
pop
sub
movsb
jb
in
push
jno
jns
inc
dec
mov
inc
sbb
jl
mov
out
xor
sbb
dec
cmp
push
mov
jle
je
xchg
push
imul
sub
shlb
mov
int
pushf
sub
push
xchg
adc
sub
cltd
cmp
ret
xlat
out
cmp
imul
xchg
xchg
lods
insl
sub
cmp
rcr
and
pop
dec
mov
repz
mov
les
adc
mov
clc
xchg
mov
cld
xchg
data16
movsb
test
scas
outsl
jmp
inc
inc
pop
data16
cmp
fcomps
pusha
mov
daa
inc
sahf
sti
mov
xchg
das
and
mov
int3
cwtl
ret
pop
push
inc
leave
push
and
ret
ficoms
add
jnp
xor
fcmovu
mov
lret
lret
outsl
mov
jo
decb
ds
fmuls
xor
insb
jle
xchg
fs
repz
imul
cs
pusha
hlt
push
andl
sarl
pusha
ds
imul
insb
es
imul
shrl
rcrb
jmp
add
xchg
inc
shlb
dec
cmp
jb
jge
cmp
shl
into
fsubrl
rcll
jno
aad
jge
add
mov
mov
jne
lock
xor
divb
xchg
hlt
aam
inc
push
cld
xor
and
mov
daa
pop
outsl
push
cmp
dec
sbb
pop
fisttpll
add
rcll
mov
adc
push
frstor
fisubs
repz
push
mov
sbb
pop
in
xchg
sub
push
shll
pop
cmp
inc
and
test
mov
xor
orb
loope
adc
pop
jo
cmp
call
pop
mov
mov
cld
sti
arpl
dec
and
xchg
mov
popa
mov
pushl
mov
jns
push
adc
pop
xchg
hlt
mov
mov
pushf
ljmp
pop
pop
pop
add
add
sbbl
arpl
mov
inc
adc
sub
lahf
mov
inc
std
and
mov
icebp
lret
dec
mov
insl
mov
fwait
jns
clc
test
jne
or
or
imul
inc
pop
bnd
xorl
pop
mov
aam
cmpsl
add
push
pop
lock
call
sub
dec
pop
pusha
sti
jp
daa
insl
in
addl
xchg
test
cmpsb
aam
push
adc
xor
aas
and
xlat
inc
and
and
xor
mov
mov
dec
mov
dec
jne
mov
addr16
xlat
mov
add
int3
xor
leave
fbstp
test
lods
inc
mov
xchg
xchg
jb
ret
xor
pusha
into
mov
hlt
addr16
push
repnz
adc
xchg
sbb
and
xchg
repz
and
test
pop
ret
or
fwait
shlb
int
mov
das
mov
shr
stc
pop
push
jl
mov
scas
in
jnp
enter
mov
add
xor
dec
adc
subb
repz
loop
mov
cmpsl
mov
aas
jp
js
out
imulb
cmp
jle
shrb
mov
pop
call
push
jp
das
in
push
jo
paddusw
pop
lret
push
sbbl
push
fs
mov
aam
pop
imul
imul
cltd
ds
pushl
negb
jl
inc
leave
cli
dec
loopne
fmuls
sub
dec
adc
jnp
pop
adcb
push
inc
and
dec
cmp
pop
std
leave
mov
and
and
jo
mulb
daa
repnz
cmpl
mov
sti
sar
xor
mov
dec
mov
js
mov
or
nop
fwait
add
cmp
shlb
sbbl
jge
ss
and
jg
call
int
call
inc
sbb
lret
int3
aam
mov
push
cmpsl
cmpsl
rcrl
pop
xchg
cmp
enter
xor
jmp
lret
jl
test
rcrl
cmp
cmp
inc
jmp
add
fcomi
sbb
jg
into
fdivrl
lods
loope
push
dec
and
cmp
bound
cld
leave
sbb
cmp
out
inc
mov
mov
int3
insb
xchg
mov
out
repnz
test
fwait
inc
push
xchg
ljmp
ret
aas
lea
lret
int3
xor
add
push
mov
fistl
gs
sti
cmpsl
sub
stos
dec
enter
roll
jnp
adc
test
push
popf
xchg
mov
push
pushf
daa
pop
sbbb
in
mov
dec
and
mov
add
ljmp
outsb
in
pop
lock
mov
movsl
in
adc
cmp
add
xchg
mov
in
push
or
xor
pushf
pop
sub
pop
mov
dec
add
cmp
aaa
adc
or
xorb
insl
mov
pop
add
stc
push
or
xchg
mov
push
clc
das
mov
xorb
pop
sbb
sbb
push
enter
xchg
fwait
mov
mov
shl
pop
sahf
and
or
or
scas
cltd
jo
pop
pop
xchg
sub
jge
mov
outsl
mov
and
push
push
jo
dec
mov
push
mov
pop
sbb
pop
loop
jbe
shlb
cmc
mov
sbb
mov
and
imul
jmp
notb
add
sbb
fstps
push
or
jge
lds
int3
jae
mov
cli
subb
pop
enter
push
movsl
js
inc
stos
push
lret
inc
and
sub
imul
add
xchg
xor
js
mov
xor
xor
inc
pop
pop
testl
fs
jb
xor
inc
xchg
or
clc
iret
fidivs
cmp
aaa
sbb
test
mov
gs
ret
push
pop
dec
in
pop
xchg
pop
in
add
ljmp
dec
test
cmc
lea
pusha
fstps
sub
xchg
test
and
mov
testb
imul
inc
mov
sbb
je
stc
mov
add
lods
sub
rcll
movsb
ret
push
lock
int3
in
add
add
clc
pushf
cwtl
pusha
mov
inc
mov
mov
push
jp
xor
test
out
push
fiadds
inc
fmull
inc
sahf
xor
call
jb
mov
pusha
fcompl
sbb
mov
fnstsw
enter
nop
jge
xor
mull
pop
loope
imulb
cmp
test
ret
arpl
shr
dec
dec
xor
xchg
outsb
lods
push
and
push
dec
mov
outsl
dec
sub
in
sub
mov
es
psraw
dec
shl
es
movsl
cmpsl
inc
sub
adc
inc
mov
mov
fcompl
int3
lcall
pop
les
add
bound
add
les
xchg
test
push
inc
fdivs
jae
jno
mov
cli
inc
mov
push
mov
pop
adc
mov
pop
sar
cmp
jp
lahf
cmp
pop
cmpb
sbb
push
int
loope
cli
and
jmp
roll
jo
out
das
xchg
divl
jge
sbb
jg
push
jp
sbb
pop
dec
js
mov
orl
xlat
loopne
icebp
es
stc
mov
js
adc
aas
xchg
mov
cmp
xor
es
mov
fwait
cmpsl
popa
enter
addr16
shll
cwtl
das
stos
mov
lods
push
mov
mov
mov
xlat
pop
pushl
xchg
add
shr
loopne
dec
mov
mov
test
test
sbbl
mov
add
cwtl
repz
mov
int3
shlb
cli
add
pop
test
iret
movl
cmp
out
inc
cwtl
fwait
rol
jp
and
cmp
test
mov
inc
or
stc
and
push
dec
adc
scas
mov
filds
jno
cs
cmp
push
movlps
js
xor
aam
bound
mov
sub
mov
add
and
lods
add
push
fs
xlat
jb
adc
push
pop
imul
jb
imul
sahf
je
jne
loope
cld
pop
mov
inc
mov
ds
iret
nop
xor
inc
mov
lods
jg
adc
inc
lret
ljmp
shll
sbb
adcb
arpl
xor
pop
mov
xor
jnp
or
cs
mov
or
rclb
and
mov
sub
jbe
pop
jle
xlat
rcll
test
adc
add
push
scas
and
fdivs
std
xchg
cmp
sbb
inc
int3
aaa
into
std
popa
leave
mov
into
flds
testl
repz
add
mov
mov
bound
xchg
pop
cmp
dec
mov
pop
repz
repz
adc
sarl
jne
lea
mov
xor
mov
xchg
cmp
lods
and
aad
daa
mov
insb
jg
imul
mov
lret
pop
mov
add
lcall
std
and
inc
aas
psubq
mov
jle
lahf
das
pop
pusha
add
insb
in
dec
clc
scas
mov
orb
and
push
shll
sahf
fstps
sbb
out
push
lock
scas
add
loop
imul
mov
cmp
lock
mov
fidivrs
adc
popa
nop
xchg
mov
pop
scas
imul
sbbb
lds
rep
mov
dec
fiaddl
add
fcmovnb
lret
cld
out
andl
cs
rolb
sbb
push
fnsave
nop
popf
sti
inc
xlat
cli
adc
push
fists
jo
in
shl
inc
cwtl
add
in
out
lret
pop
mov
xor
fsubrs
ja
fsubl
testb
push
push
inc
xor
cmpsb
jbe,pt
jge
in
lds
cmp
mov
movsl
push
scas
sub
subl
dec
xor
xor
fistl
pushf
sti
sbb
jns
jmp
xor
pushf
out
or
cmp
push
mov
repz
loopne
pop
cmpsb
sbb
je
enter
arpl
lcall
and
adc
mov
out
mov
fistpll
test
loop
and
mov
ljmp
mov
xor
pop
sub
mov
sahf
jb
xchg
imul
mov
mov
ss
in
adc
dec
popl
xchg
ret
lods
movsb
cmp
loop
fwait
or
aaa
push
lahf
popf
cmp
jg
sub
xor
pop
icebp
mov
inc
xor
mov
and
imul
outsb
vmread
ljmp
xor
mov
xchg
jg
lods
movsb
aas
sbb
sti
mov
push
lods
sbb
xlat
xor
hlt
fnsave
sbb
fstp
add
add
pop
ljmp
push
jns
loopne
push
fwait
add
mov
jbe
js
out
push
repz
leave
mov
mov
push
xchg
cld
shlb
ja
sub
mov
xorb
dec
sbb
or
aam
cwtl
stc
iret
sub
push
aad
cmc
sub
mov
mov
scas
inc
xlat
imul
jo
mov
flds
inc
addl
adc
mov
mov
cmpsl
mov
jns
cmpsl
fucomp
fsubs
call
outsl
sbbl
mov
cmp
enter
leave
fdivrp
mov
sub
outsl
pop
xchg
inc
gs
loope
stc
jne
mov
das
mov
sub
add
shrl
data16
scas
jbe
jbe
inc
mov
push
fidivrl
cltd
cmc
bswap
sub
pop
pop
jmp
pop
jne
xchg
mov
dec
xor
or
jecxz
data16
dec
aam
cli
xchg
push
xor
and
leave
xchg
dec
fidivrs
int3
loop
int3
pop
repz
clc
std
mov
dec
push
add
out
inc
sub
inc
pop
add
into
in
repnz
cmpsb
lret
xchg
inc
ficoms
fsubrp
or
inc
cmpsl
xor
push
push
inc
fistps
cmp
push
cmc
shrb
and
cltd
shll
ficoms
js
push
sbb
repz
dec
jle
loop
cmp
cltd
lock
mov
mov
test
or
imul
das
inc
aas
sbb
mov
and
pop
push
outsb
test
ret
pop
inc
mov
popa
adc
nop
sbb
sub
dec
fdivr
sub
pop
fcomip
mov
and
xor
in
jbe
jno
dec
sahf
jnp
or
sbb
lods
sbb
ficompl
lahf
stos
adc
jle
scas
cmp
addl
insl
cmp
cld
lods
cmp
sbbl
test
lods
mov
push
mov
xlat
cmp
je
lds
sahf
scas
aaa
fld
mov
xchg
mov
insl
pop
int
jp
icebp
movsl
dec
cltd
lret
addr16
add
lahf
mov
into
xor
lahf
fwait
fwait
sbbl
pushf
lods
cmp
cmp
and
out
sbb
lock
arpl
sub
cmp
sub
daa
mov
cmpsl
out
pop
xchg
popa
aam
movsb
jmp
add
pop
mov
inc
pop
xor
int
push
ja
or
inc
fdivs
jno
mulb
dec
cs
push
dec
loop
test
jbe
int
jecxz
aas
adc
out
adc
aas
stc
ljmp
mov
gs
cmp
insl
cmc
cmp
test
imul
cmc
push
push
cmp
push
jecxz
fidivs
dec
cld
sbb
fld
fiaddl
int
incl
jge
xchg
cmp
lds
iret
sbb
and
jle
lahf
cs
add
mov
pop
xor
sbbb
push
push
in
mov
les
testb
ss
xchg
or
les
inc
mov
cwtl
xor
sub
mov
cmpsb
loop
add
mov
dec
sbb
icebp
add
cmpsl
sub
fldcw
xlat
out
pop
fldenv
pop
ret
lods
out
test
adc
negb
nop
cmc
pop
rorl
dec
dec
imul
xor
sbb
push
in
enter
pop
in
mov
cli
push
outsl
or
insl
add
dec
push
cmc
hlt
mov
addb
lret
jae
ja
xchg
mov
test
mov
lods
sbb
int
out
mov
xchg
nop
mov
into
cmp
push
inc
ret
js
pop
inc
mov
mov
addl
lea
out
xchg
mov
mov
mov
mov
dec
fmuls
les
push
in
mov
xchg
cs
dec
or
enter
xor
sub
mov
add
mov
fisttpl
dec
loopne
mov
push
movsl
lahf
jge
adcl
xor
push
insl
push
ret
adc
lahf
ss
pushf
in
mov
xchg
mov
push
out
clc
cwtl
test
sbb
sub
loop
jns
cmpsb
cmp
stos
iret
xlat
ja
outsl
push
cmpsb
cld
jp
lods
dec
lea
scas
jl
mov
add
mov
scas
fucomip
loopne
cmp
and
push
out
rorl
fisttpll
jne
mov
iret
and
xchg
lret
int3
movsb
fs
fxch
jl
dec
push
or
add
negb
fnsave
clc
and
ficoml
das
adc
inc
fwait
enter
js
or
call
sbb
lcall
test
push
sub
mov
scas
mov
sarl
mov
push
lds
outsb
inc
fnstsw
cs
jb
popa
sub
cvtps2pd
sarb
cli
mov
fimull
mov
sti
xchg
popf
rorl
and
cmc
xchg
jg
loop
mov
scas
push
adcl
or
outsb
stos
pop
xchg
adc
sub
sti
pop
mov
idivl
test
ss
je
push
dec
pop
cwtl
pop
je
insl
hlt
mov
lea
pop
icebp
into
jnp
mov
cmp
insb
lahf
cmpsl
mov
or
or
push
pop
lods
addl
xor
pop
push
ret
je
jnp
add
sbb
jl
cltd
scas
xchg
lds
sahf
sbb
mov
mov
aas
add
scas
or
out
jg
mov
jno
test
dec
push
cltd
fdivl
sub
test
inc
cli
jecxz
cmc
or
sub
xor
das
mov
pop
dec
cmp
test
cmp
cmp
outsb
pushf
cli
imul
xchg
push
popa
clc
cmp
out
dec
cmc
cwtl
shll
aaa
pop
xchg
bsr
shll
mov
fcmovb
push
jl
mov
ja
cmp
loope
xor
scas
and
sub
addr16
into
sbb
or
pushf
xchg
shll
sub
dec
xchg
lock
pop
imull
jp
popa
cmp
ret
xchg
pop
pop
mov
xchg
sub
pop
fbstp
ss
jb
dec
add
xor
fnstcw
push
nop
cmc
jl
testl
push
lret
cld
jae
and
shr
aas
xchg
loope
dec
xor
les
lret
fwait
dec
lret
pop
push
out
js
dec
je
jge
push
xor
xchg
xor
out
jo
in
test
jl
adc
dec
in
sub
xor
inc
incl
push
sbb
mov
cmp
stos
add
popf
imul
mov
dec
mov
lahf
add
fnstenv
int3
insl
movhps
pop
xor
test
sbb
add
bound
mov
cmp
sub
dec
adc
sub
dec
push
jp
cmpsl
dec
ficompl
mov
or
sbb
in
jp
add
mov
mov
rcrl
rcrl
test
ljmp
fldenv
imul
mov
mov
fstpl
sarb
sub
cld
xchg
xchg
mov
nop
dec
xor
pop
lods
mov
adcl
inc
lock
mov
into
pop
adc
je
or
lea
cltd
xlat
mov
adc
jmp
cmp
jbe
sub
pop
repnz
add
pop
jns
mov
inc
mov
sbb
adc
add
insb
jg
inc
dec
dec
lock
addb
mov
adc
jns
out
xchg
cltd
sbb
push
mov
fistps
frstor
xor
shlb
shll
pop
lods
pusha
fsts
sub
cmp
pop
xor
xor
daa
mov
gs
out
hlt
xor
xor
xor
mov
movb
fmul
mov
in
insb
mov
pushw
fcom
mov
pop
mov
insl
loop
lahf
fcmovu
call
imul
jmp
add
ds
xchg
aaa
in
xor
cmp
and
pop
dec
mov
lret
mov
pop
fstps
int
push
jnp
mov
popa
std
add
clc
inc
sbb
push
ret
fwait
jmp
ljmp
jb
insb
outsb
mov
xchg
aad
jb
es
cmp
iret
out
mov
in
insl
data16
popf
scas
lds
mov
shll
stos
pushf
mov
stc
mov
sub
dec
shl
fwait
rorb
gs
push
insl
lcall
xor
mov
scas
adc
lret
mov
dec
sbb
adc
aas
aam
loopne
loope
ja
xor
xor
pop
je
fcompl
adc
xchg
sbb
mov
das
push
xchg
jp
and
xchg
dec
aas
lcall
xorl
xor
xchg
stos
pop
dec
out
arpl
daa
mov
jg
gs
mov
dec
jle
in
call
jno
scas
mov
stos
stos
jge
out
xchg
xor
jae
adc
cmp
out
data16
lea
repnz
and
inc
dec
mov
test
xchg
test
fistps
fidivrl
pop
dec
fbld
lea
mov
faddp
inc
lret
jns
shlb
jp
fcoml
or
mov
repz
mov
negl
jns
nop
stos
cltd
lcall
pop
stos
or
lea
cmp
lcall
insl
scas
lea
dec
pop
jo
in
nop
daa
pop
jne
jns
jns
rcl
xchg
call
int3
sub
iret
xchg
test
btsl
sbb
lds
cmc
push
jmp
or
and
lea
inc
or
mov
fists
push
or
push
fwait
aaa
jae
or
aas
pop
sub
enter
push
jmp
pop
and
cmpsb
xor
hlt
jmp
clc
hlt
xchg
outsb
and
mov
or
push
mov
in
jg
lret
sub
pushf
jb
jno
aaa
mov
mov
push
push
jge
cmp
jb
out
pop
dec
xor
enter
imul
loope
sbb
test
sbb
ficoms
mov
push
or
ret
out
pop
inc
mov
add
pop
xor
sbb
bound
cmp
hlt
jno
sarl
fsubrl
add
inc
sarl
mov
pop
testb
ljmp
sbb
mov
xor
xor
sarb
fcompl
lods
fucomip
arpl
pusha
ja
scas
jno
cltd
xchg
cmpsl
xchg
sub
mov
or
testl
adc
xor
pushf
lods
rclb
jb
repnz
and
mov
pop
cmp
addr16
fmulp
mov
mov
sbb
aas
insl
add
pop
cmc
push
cld
movsb
lret
stos
aaa
scas
int3
psrlq
or
mov
mov
sbb
imul
inc
mov
sbb
fsubr
xchg
inc
outsl
stos
addr16
mov
pop
jnp
adc
lcall
ret
hlt
pusha
shlb
lea
jne
fistps
into
scas
dec
gs
ja
inc
jmp
mov
or
aam
into
push
or
ja
repnz
lods
or
pop
jecxz
mov
int3
xor
mov
fnstsw
repnz
mov
xchg
add
std
les
test
fidivrl
push
pop
nop
push
imul
xchg
dec
nop
daa
xor
call
arpl
cli
pusha
jnp
push
push
lods
xchg
stos
lahf
mov
mov
fnstenv
scas
shr
shll
mov
dec
cmp
add
cmc
mov
and
rorl
mov
jae
jecxz
cmp
mov
dec
imul
cmp
jg
sbb
daa
inc
mov
sub
jge
sub
ljmp
ret
addr16
pushf
xor
mov
idivl
jne
int
push
popf
push
inc
xchg
lret
sbb
inc
dec
cmpsl
les
rcll
mov
jnp,pt
test
sbb
or
mov
or
cmp
adc
mov
dec
dec
xchg
bound
cld
or
xchg
jmp
adc
adc
cmp
mov
inc
cwtl
popl
cltd
loopne
daa
mov
imul
push
shlb
mov
add
aas
cltd
jns
mov
or
leave
test
xchg
fsubrl
jecxz
push
sbb
cwtl
sbb
leave
xorl
cmc
jp
inc
mov
push
pop
mov
sbb
ret
jae
mov
fmulp
lcall
dec
pop
es
lahf
mov
xchg
loope
mov
in
and
dec
mov
jl
daa
outsl
iret
cmpsl
mov
sbb
out
adc
mov
notb
inc
pop
or
das
pop
or
jmp
mov
sbb
sub
fiadds
adc
in
movsb
out
lock
mov
rcrl
scas
push
dec
ret
inc
dec
add
out
repnz
shl
xchg
lcall
push
xor
jbe
pusha
lahf
daa
xchg
das
std
gs
add
aam
add
adc
xchg
gs
sbb
push
into
pop
xchg
inc
jb
inc
push
mov
nop
mov
pop
fiaddl
insb
inc
repz
test
scas
cmp
xchg
dec
or
cmp
jecxz
push
mov
loopne
push
lods
pop
gs
repnz
xchg
lea
std
pop
rolb
xlat
xchg
mov
pop
ret
stc
in
psrlw
cli
xor
dec
pop
nop
adc
fs
repz
cmp
fwait
push
into
sbb
mov
lret
clc
jmp
scas
push
fisubrs
loope
dec
xlat
or
cmp
repnz
sbb
mov
icebp
stc
mov
sbb
pop
mov
inc
xchg
cmp
pop
push
push
lds
dec
jecxz
xchg
or
push
and
iret
push
outsl
cltd
test
ljmp
mov
and
inc
mov
ja
sub
pushf
fstpl
scas
shll
stc
out
and
enter
add
andl
or
xchg
cltd
lock
testl
imul
dec
in
mov
ja
push
add
jl
rorb
cmp
jge
cld
bound
je
pop
jg
shr
ret
mov
rclb
sbbb
mov
mov
insl
mov
sbb
and
sbb
mov
add
jns
xchg
loop
lods
xor
das
ljmp
or
fadds
sub
sub
sub
movsl
sub
jl
lea
adc
push
sbb
mov
icebp
insb
cltd
es
mov
cli
add
loope
ljmp
push
push
in
cmp
shlb
aas
das
neg
xchg
movsl
lds
test
fcmovu
inc
cmp
std
add
add
push
pop
std
bound
outsl
dec
ja
insl
fs
mov
cltd
add
sbb
mov
jne
bound
sub
add
jp
mov
push
mov
je
xor
mov
push
jmp
movb
pusha
jno
pop
shlb
outsl
fisubrs
ss
mull
adc
xchg
jle
and
xchg
inc
sbb
aam
adc
out
adcb
mov
xchg
push
sub
jo
aaa
mov
das
lods
filds
push
jae
push
mov
jecxz
xor
cs
cmc
leave
fldcw
pop
int3
test
fxch
dec
mov
dec
or
pop
icebp
lret
cmp
cmpsl
out
pusha
mov
lea
xor
das
jge
stc
out
iret
repnz
mov
shlb
mov
sbb
and
ljmp
jne
out
ficoms
sub
jge
mov
jge
cmp
dec
or
fnstcw
ss
pusha
imul
jge
jmp
leave
in
shrb
sub
adc
cmp
scas
jns
mov
incl
xor
cmp
push
test
push
inc
push
mov
loopne
jno
lcall
and
push
mov
sbb
push
mov
inc
pop
mov
mov
jb
int
xchg
es
fnsave
sub
xchg
inc
jnp
lret
and
jbe
testl
out
cmpsl
loop
pop
outsl
jg
and
aad
mov
je
inc
shr
jae
inc
movsb
aam
sbb
push
leave
pop
cmp
pusha
mov
cmpsb
pop
xchg
clc
sub
cli
and
sbb
sub
mov
adc
sti
lret
jb
shlb
pop
adc
inc
je
xor
dec
mov
add
push
add
xor
loopne
mov
je
mov
fsubrl
aaa
pop
ret
das
lcall
mov
push
imul
stc
push
fsub
test
xor
jo
lea
push
dec
in
jmp
imul
shlb
insb
xlat
test
shll
jae
pushf
into
outsl
daa
arpl
sub
testb
aaa
test
sub
adc
mov
arpl
cs
mov
dec
pop
mov
sub
mov
scas
mov
pushl
push
or
mov
mov
ret
lock
sub
cmp
imul
jg
add
jl
push
cwtl
pop
jg
daa
lcall
enter
cmpsb
mov
sahf
xchg
movsl
icebp
sahf
xchg
mov
popa
xchg
pop
rorb
idivl
sbb
jnp
add
shll
cmpsb
hlt
xchg
out
and
mov
jno
adc
jecxz
pop
pop
lea
rcl
cmc
mov
add
adc
pop
jae
push
mov
xchg
xor
xor
rclb
or
mov
fidivrs
mov
jne,pn
jo
jnp
stc
xchg
iret
fldl
adc
repz
stos
and
mov
fimull
pop
imul
mov
lret
push
aaa
es
inc
add
push
jge
and
lret
mov
pop
mov
test
pop
sbbb
pop
jl
cmp
sbb
mov
int3
fcompl
stos
xlat
popa
lahf
pop
notb
jg
and
and
out
xor
filds
jno
rcrb
and
and
xchg
jo
mov
rcrb
popa
or
icebp
sbb
adc
dec
dec
lods
std
cltd
mov
jns
jp
or
cmp
jp
cmp
loopne
mov
inc
mov
addr16
imul
cmp
mov
jb
dec
rcll
jne
lock
or
xchg
cmp
mov
mov
sub
flds
jecxz
decl
push
adc
pop
pop
or
jae
mov
sub
xor
mov
jo
jmp
xor
inc
ja
cmp
cmp
pop
jg
sub
xchg
scas
xor
test
andl
dec
fidivl
das
jg
inc
inc
clc
push
imul
pop
xchg
loop
cmp
inc
sub
les
ss
sbb
fistpll
or
pop
sub
mov
rol
add
shlb
outsb
mov
sbbb
cltd
lret
cmp
in
insb
repnz
insl
mov
sahf
mov
cmpsl
ds
add
pop
xor
fists
leave
iret
mov
movsb
in
clc
dec
hlt
mov
xor
mov
xchg
rorb
je
lds
pop
outsb
pop
fidivrl
int3
lcall
leave
sbb
clc
and
ja
jns
divl
pop
add
imul
pop
notl
sbb
dec
fisttps
sbb
insl
cmovle
nop
imul
xchg
mov
cli
test
data16
jmp
int3
call
sub
xchg
sub
xor
pop
cmpsl
stos
add
jae
nop
cmp
xor
jnp
fildll
insb
add
into
cmp
inc
jg
in
push
fwait
mov
gs
mov
add
adc
into
gs
xor
jle
pushf
icebp
rcr
or
loopne
rclb
mov
pop
cmpsb
push
nop
mov
add
add
pop
hlt
addr16
pop
repnz
push
ret
jle
add
lea
sub
jne
dec
iret
xor
inc
call
xor
adc
inc
daa
rcrb
sbb
cmp
push
mov
into
fmull
jmp
mov
adc
notb
mov
lcall
dec
pop
adc
insl
sub
out
movsb
cmpb
pop
insl
cmc
call
push
scas
xor
sbbb
lcall
shrl
adc
sbb
mov
in
repnz
mov
jle
or
mulb
aam
data16
ljmp
adc
pop
or
xchg
psrad
jge
mov
mov
nop
imul
or
int
cmp
mov
shll
mov
and
pop
pop
adc
dec
clc
ja
lods
mov
mov
sub
lcall
js
pop
test
scas
lret
es
jno
mov
and
cmp
stc
jl
ja
call
or
repnz
sbb
push
mov
mov
sarb
leave
and
shrl
ret
leave
sbb
xchg
sbb
nop
dec
push
add
and
aaa
push
dec
pop
jmp
aas
jb
outsl
int3
adc
dec
iret
add
arpl
gs
jbe
movsl
xchg
push
inc
movsb
lds
fsubrl
inc
inc
fs
sbbl
scas
jl
push
std
or
mov
dec
xchg
xorl
movsl
cmp
fistpll
inc
mov
pop
mov
gs
pop
cmpsb
inc
sar
ljmp
jno
push
inc
pusha
insl
or
cmc
xchg
stc
sub
inc
movups
lret
les
xchg
cwtl
rorl
add
jb
ret
or
out
sbbl
pop
bound
mov
push
cmp
cmpsl
clc
pop
repz
dec
add
mov
lahf
push
mov
mov
dec
mov
fstpt
and
add
imul
sbb
outsb
aas
sbb
mov
scas
xchg
std
int
xchg
testb
cmpsb
jge
jno
push
xchg
jnp
push
js
dec
stos
jbe
rorb
clc
sahf
adc
cmp
js
push
mov
inc
ds
jle
pop
addr16
mov
mov
push
fistpll
gs
out
inc
xlat
pop
or
jp
imul
jg
mov
jns
lretw
stos
cmc
dec
fistpl
push
out
in
insb
pusha
or
mov
ss
xor
pop
repnz
aad
mov
xchg
adc
aaa
fistl
pop
adc
loop
rcr
sub
inc
std
mov
inc
sub
push
loop
pop
inc
fmuls
xchg
loop
inc
addr16
add
lods
cmp
mov
push
or
daa
dec
dec
and
ficomps
jp
push
mov
test
out
and
pop
mov
rcrb
movsl
mov
inc
add
adcb
inc
sub
negl
mov
mov
push
fsubr
pusha
into
aad
pusha
push
cld
xchg
dec
xchg
test
xchg
sbb
lds
fwait
xor
loopne
jb
mov
rcrl
rolb
mov
mov
js
mov
push
push
ds
mov
xlat
mov
mov
and
loopne
xlat
xchg
test
lret
or
bound
scas
iret
mov
xor
mov
push
fs
xor
cli
js
pop
fwait
lcall
and
clc
pop
add
aad
xchg
sub
repnz
je
js
xor
fldcw
cld
sbb
mov
sahf
sbb
jmp
testl
scas
adcb
sahf
inc
mov
scas
inc
sub
shll
lret
daa
ficoml
inc
mov
shl
imul
cmc
ljmp
lcall
dec
jecxz
jmp
jae
xchg
dec
pop
cmpsb
popf
mov
mov
loop
sub
test
mov
xor
insb
push
imul
aaa
lock
insb
sub
lods
imull
jge
repnz
icebp
or
dec
jg
repz
ret
or
out
rcrb
mov
mov
xchg
xor
jnp
cmc
lods
in
mov
jl
inc
pusha
call
push
scas
mov
out
lret
repnz
lods
repz
lods
fnsave
xorb
jle
hlt
cmp
pop
popf
pop
add
push
bound
jns
sub
cltd
jge
insb
mov
push
push
rcll
mov
or
adc
pop
xchg
das
nop
mull
lods
adc
aas
dec
jb
xor
data16
jbe
xchg
in
mov
add
out
repnz
adc
mov
das
lods
push
sub
jmp
dec
in
or
repnz
cmp
loop
xchg
xor
cmp
call
or
pop
in
lock
and
insl
or
lahf
pop
push
jno
add
jge
xchg
test
and
and
mov
mov
stos
ret
outsl
jne
test
in
inc
pop
xchg
add
push
lds
call
add
sahf
or
inc
in
dec
dec
divl
fldt
adc
cmp
mov
push
or
jmp
and
imul
jae
out
jle
arpl
add
dec
cmp
mov
test
inc
push
mov
push
xor
push
out
adc
imul
pop
fsubp
test
and
and
dec
lea
xor
xor
cli
jno
mov
lcall
xor
push
scas
out
pop
movsl
dec
dec
fidivrl
mov
jp
adc
xchg
shlb
push
stos
rorb
stc
adc
dec
dec
mov
movsb
jp
inc
pop
or
xor
and
ret
adc
add
ss
xchg
add
adc
xchg
aas
add
loope
xchg
and
push
cmpsl
jp
cmp
push
or
cmpxchg
xor
jmp
lock
or
and
adc
fmull
or
leave
adc
cli
xchg
adc
adc
in
aam
imul
jecxz
or
movsb
daa
jae
sub
or
aaa
or
xchg
aad
mov
add
mov
xchg
xor
stos
cmc
mov
xor
xor
stos
jle
or
data16
ficoml
xor
sbb
inc
or
xchg
outsb
incl
inc
push
xchg
jno
loope
add
repz
sbb
push
fisubrs
push
lret
repz
mov
and
hlt
pop
sbb
add
outsb
lret
call
mov
inc
push
sub
xor
shlb
push
stos
inc
xchg
in
out
pop
repnz
scas
sub
adc
and
push
mov
fstps
jmp
inc
mov
or
mov
mulb
out
ret
ja
test
inc
sbb
mov
pop
hlt
sub
pushaw
fidivl
adc
neg
xor
imul
cmp
add
cmp
add
xchg
sub
mov
lods
pop
pop
lods
rorl
cmp
sub
movsb
imul
fwait
mov
cs
mov
insb
in
test
stc
jb
sub
add
mov
mov
idiv
or
xor
scas
sbb
mov
xor
mov
jge
dec
int
loope
in
mov
dec
inc
dec
xchg
hlt
nop
mov
mov
pop
add
mov
mov
pop
lods
and
pop
push
inc
sbb
inc
fcoml
arpl
fnstcw
or
jae
sub
in
mov
nop
dec
mov
loopne
sbb
cmp
aad
inc
mov
jbe
pusha
subb
gs
cwtl
xlat
xor
cmp
push
sub
lds
mov
mov
lods
jns
pop
mov
cmpsb
jecxz
das
mov
mov
cmp
push
mov
xor
jle
or
xor
mov
rcr
jo
jg
fsubs
mov
call
jbe
jecxz
xor
pop
mov
and
das
xor
cwtl
movb
pop
add
add
leave
pusha
push
jle
sbb
add
cwtl
xor
cltd
das
test
inc
cmpsl
inc
jnp
cli
jne
adc
rcrl
call
icebp
push
pop
jmp
push
and
in
hlt
sbb
pop
xchg
jnp
and
mov
jg
ds
push
sub
add
dec
test
cmpsb
cmp
sbb
orl
mov
dec
dec
fsts
mov
pop
inc
scas
lods
xchg
movsl
icebp
int
lret
ret
add
in
push
dec
add
outsb
shll
push
cmp
into
gs
adc
sets
test
ss
lods
mov
cmpsb
movsl
ret
jle
dec
daa
mov
and
mov
icebp
arpl
fs
dec
cld
stos
mov
or
insb
sub
add
leave
mov
add
jecxz
xlat
push
nop
mov
sub
mov
roll
loop
mov
xchg
daa
repnz
inc
inc
push
cmpsb
jge
loop
je
movl
push
cmp
xor
xchg
lahf
mov
rcr
sub
in
subl
sbb
cmp
or
fs
pop
sub
outsb
inc
ficomps
pop
jo
mov
test
fnsave
popl
inc
shrl
sahf
xor
mov
add
and
push
arpl
movsl
bound
pop
test
pop
dec
in
jge
push
jbe
pushf
repz
stos
rolb
je
push
mov
mov
and
das
push
add
sqrtps
aaa
xor
in
or
adc
lret
xor
mov
dec
leave
popa
mov
inc
jp
arpl
jae
sub
cmp
fiadds
inc
sbb
or
scas
sub
jb
ret
mov
mov
mov
add
xchg
xor
dec
jecxz
cwtl
stos
lock
popa
mov
mov
out
call
rorl
stos
adc
xchg
fisubl
dec
popa
aam
and
pop
hlt
adc
inc
mov
xor
adc
xor
lock
add
inc
repnz
cld
data16
vphsubwd
mov
xchg
test
test
jns
out
into
pop
push
testl
movsl
jge
mov
sbb
pop
insl
add
out
mov
clc
in
pushf
mov
ljmp
xor
adc
mov
add
out
jb
jmp
test
inc
jne
out
and
mull
nop
push
mov
pop
popf
out
into
cmp
data16
pop
push
mov
repnz
adc
jns
mov
sub
xor
pop
idiv
push
icebp
bound
bound
movb
aaa
gs
and
xlat
loopne
rcrl
movsb
xchg
sbb
lods
mov
stos
cltd
sbb
jne
lret
xlat
lret
xchg
adc
loopne
xchg
mov
std
mov
cmp
mov
cmpb
mov
cmp
loopne
push
jmp
mov
fbld
int3
into
enter
or
pop
add
mov
sub
sub
arpl
sub
pop
mov
cmp
les
mov
arpl
xchg
ror
pop
outsb
or
xchg
ror
jo
adc
jle
jae
sbb
sbb
mov
xor
or
jno
push
ret
cmc
clc
cmp
xor
mov
pop
mov
pop
loop
iret
movsl
xor
xchg
popa
call
aas
sahf
les
jl
mov
bound
mov
cmp
scas
fistpll
push
mov
fistps
cmp
cmpsl
out
add
loop
decb
pop
das
and
mov
dec
mov
add
les
mov
mull
pop
sti
test
andl
add
test
mov
loope
lret
iret
pop
call
repz
mov
cmp
mov
jmp
cmp
inc
lea
lock
sub
cmpsb
test
pop
sub
sub
pushf
jmp
jg
lods
mov
xchg
dec
mov
mov
outsb
sbb
sahf
cmp
jbe
pop
loop
pusha
clc
xor
xor
jmp
aam
hlt
notl
sub
dec
push
cwtl
push
adc
inc
js
lods
test
inc
adc
xchg
repnz
repz
fdivrl
paddq
das
outsb
cwtl
pop
pusha
rclb
repnz
dec
xor
jp
outsb
ror
adc
addr16
mov
int
sub
add
daa
dec
fists
bound
cmp
cmp
in
shl
or
les
std
lods
cmp
es
shrb
aad
fadds
or
xor
ljmp
imulb
je
test
bound
shr
addb
and
fimuls
cli
mov
in
orl
mov
add
and
adc
push
cwtl
das
mov
mov
cmp
adc
outsb
bound
sub
repz
and
cmp
hlt
test
repnz
or
xor
stc
or
xor
dec
dec
push
jmp
dec
iret
imul
orl
jb
sbb
jno
rclb
jno
outsl
fwait
cmp
and
jmp
inc
je
mov
arpl
incb
andl
fucomp
inc
sbb
rclb
xchg
sbb
in
mov
inc
sub
aas
sahf
inc
sbb
adc
pop
jmp
gs
sti
cltd
mov
jmp
push
nop
test
cmp
clc
sub
pop
sbb
lahf
mov
es
xlat
popl
lahf
sub
fisttpl
cs
std
das
sti
or
add
es
push
jp
push
xor
adcl
inc
pushf
shr
dec
xor
or
call
fsubrs
push
sbb
aas
fsubrs
rclb
or
jl
add
adc
or
mov
xor
push
in
faddp
das
mov
jbe
addr16
mov
sahf
clc
sub
lcall
mov
and
out
scas
inc
dec
xchg
jecxz
jg
mov
loopne
sub
cld
add
shrl
lret
jae
add
cli
pop
fmuls
in
ucomiss
dec
pusha
xor
clc
add
mov
cli
xchg
sub
imul
sahf
mov
mov
adc
pop
mov
imul
pop
mov
mov
ljmp
or
dec
lcall
fbld
dec
xlat
jne
sub
fwait
jbe
roll
cwtl
add
dec
out
cltd
mov
stos
inc
mov
lea
sbb
mov
outsb
sub
mov
sub
push
rcrl
movsb
inc
mov
repz
cmp
sub
ficompl
dec
out
repz
mov
lcall
mov
mov
push
jno
fisubs
xor
icebp
xchg
and
into
mov
fnstsw
mov
jecxz
ja
bound
cmp
sub
mov
pop
sbbb
aad
ret
data16
sbb
xchg
test
sbb
andb
outsb
xchg
cmp
movsb
fistps
mov
sub
dec
imul
or
paddsb
cmp
mov
das
or
pusha
in
test
nop
cmp
daa
pop
mov
cmp
pminsw
scas
mov
pop
sbb
je
or
out
shll
cwtl
pop
mov
mov
adc
popa
sbb
cmp
jecxz
jecxz
out
pushf
fcoms
imul
ljmp
sbb
js
jnp
jecxz
jno
sub
repz
out
popf
inc
lods
rclb
mov
int3
xor
pop
add
pop
test
pop
inc
push
ja
xor
mov
pushf
loope
or
or
xchg
mov
mov
add
call
es
xchg
cwtl
cltd
mov
xor
mov
jp
neg
rclb
add
in
stos
inc
mov
sub
dec
mov
jg
sub
add
idivb
sub
ds
inc
fldenv
dec
xchg
cmc
inc
pusha
divl
cmp
sbb
add
jns
insl
outsb
sub
mov
mov
rclb
test
leave
popf
fs
xor
les
xchg
add
dec
stc
popl
aaa
sbb
mov
je
pop
pop
and
and
testl
xor
nop
incw
icebp
rorb
lret
xchg
or
sarl
loopne
call
and
jno
dec
mov
roll
dec
lahf
je
dec
call
es
push
cmp
xchg
xchg
pop
es
mov
aad
sahf
pusha
enter
push
aas
and
or
cwtl
and
sahf
clc
ja
mov
push
inc
xor
mov
or
imul
sub
xchg
mov
dec
sbb
xlat
not
jmp
xor
xor
andl
adc
pop
imul
daa
jle
dec
pop
inc
add
clc
xchg
push
xor
adc
out
xor
das
mov
mov
sbb
lret
sti
lods
sub
mov
mov
pusha
insl
inc
shrl
in
je
pop
cmp
push
pop
leave
int3
fs
fwait
addr16
lret
dec
lahf
cmp
rcrl
xlat
js
cmp
cs
divl
or
test
ss
cmp
mov
mov
dec
pop
outsb
cwtl
imul
pop
push
xchg
or
cmp
push
in
hlt
mov
mov
adc
cmpsl
sbb
ljmp
jo
or
add
cmp
ljmp
add
outsb
divb
jb
pop
in
lea
hlt
hlt
or
movsl
sahf
jg
rol
mov
cmp
out
call
dec
mov
xor
ds
inc
roll
or
xchg
sub
xor
add
xlat
cmp
or
xchg
sub
shrl
ret
push
mov
sarl
addr16
lret
add
jbe
sub
dec
pop
repz
outsb
or
cmpsb
lock
pop
xchg
sub
sbb
in
lods
ds
sbb
jne
inc
push
fwait
test
push
jb
or
ljmp
fdivp
call
fidivs
fwait
shrl
inc
cld
dec
jl
xchg
lods
fstpl
mov
in
mov
aam
push
inc
xchg
movsl
test
ja
push
mov
jbe
cmpsl
xor
jo
mov
adc
push
popa
stos
into
xor
arpl
popa
inc
dec
outsl
jl
daa
or
addr16
out
mov
lcall
and
out
sbbl
xchg
ljmp
cmp
push
dec
insl
lahf
imul
cmp
jp
cmp
xlat
lods
xchg
mov
adc
out
sub
pop
adc
pop
fdivs
mov
testl
lret
jo
xor
cmp
xor
inc
insb
mov
inc
fidivl
add
xchg
xchg
jmp
and
fisttpll
push
cmp
sbb
xor
fsubrp
leave
les
or
sbb
push
sahf
adc
pop
cmpsb
sub
loopne
pushf
iret
inc
cmpsb
stos
mov
xchg
xor
cs
inc
mov
dec
out
movsb
xchg
add
mov
mov
cmpsb
inc
push
mov
fs
jo
out
mov
iret
stos
jmp
push
mov
cmp
sbb
jbe
and
fprem1
sahf
mov
in
mov
out
imul
insb
push
test
add
icebp
repnz
lods
outsb
mov
sbb
stc
nop
xor
loope
dec
shll
test
test
adc
fiadds
mov
jnp
xchg
jns
dec
push
xchg
adc
push
add
push
lods
jb
in
inc
fnsave
loope
xchg
insl
das
mov
jle
lret
hlt
dec
adc
aam
add
push
mov
inc
testb
adc
cwtl
adc
aaa
call
push
test
pushf
in
mov
fwait
lds
mov
xchg
movsl
jle
loope
cmp
jbe
fisubs
call
lahf
je
testl
test
xlat
sub
and
mov
sbb
jmp
adc
jno
push
cmp
jle
imul
xchg
add
or
or
inc
push
xchg
push
mov
xchg
enter
fmull
pop
hlt
pop
adc
daa
arpl
scas
adcl
or
lahf
pop
xor
test
mov
nop
imul
icebp
dec
cmp
stos
mov
sub
push
jnp
outsl
mov
mov
loopne
lods
pop
jnp
ljmp
jno
out
fs
push
in
inc
outsl
mov
int3
and
sub
lods
test
icebp
dec
sub
and
insl
push
dec
inc
mov
jae
mov
xchg
aam
lret
mov
sub
mov
shrl
mov
mov
jl
dec
xchg
mov
cmpsl
fldt
push
les
cmp
push
outsb
outsb
fidivrs
sbb
jmp
test
cwtl
rcr
loope
stos
pop
add
mov
mov
sbb
cwtl
cmp
test
add
dec
mov
pop
out
cld
push
fdivrl
mov
std
popf
jbe
cmp
push
xor
jp
das
mov
mov
fisubrs
jle
adc
icebp
subl
ret
ficoml
dec
mov
lock
cld
sub
enter
sbbl
test
and
xor
add
loop
aam
nop
and
jo
in
test
dec
lahf
push
shlb
sub
movsb
ljmp
push
jp
sub
es
fidivs
or
mov
sub
inc
scas
mov
jmp
jo
and
mov
mov
hlt
sbb
add
imul
jp
dec
lahf
gs
in
push
js
sti
mov
sbb
mov
aas
fidivrs
inc
add
js
call
sub
imull
nop
cmp
or
mov
in
dec
enter
cmp
mov
loopne
addr16
test
lods
mov
pop
adc
mov
rorb
mov
mov
mov
fidivl
call
fmull
in
andl
mov
lods
ds
add
cli
mov
push
xchg
sub
mov
cmp
stos
jbe
sub
inc
loop
jmp
mov
push
jl
dec
push
jmp
dec
mov
shrl
cmpsl
add
sbb
icebp
dec
arpl
inc
push
ljmp
dec
das
aas
jb
scas
nop
jl
add
lods
sub
sbb
aam
pop
lcall
in
push
movsl
push
jbe
data16
mov
and
push
ror
lret
les
imul
push
insl
test
loopne
clc
xor
fs
mov
lea
fdiv
pop
jp
insb
fcomp
imul
jne
xor
dec
repnz
hlt
mov
lods
adc
iret
mov
sub
adc
dec
stos
inc
fidivl
or
cmp
mov
imul
in
loopne
xchg
mov
add
dec
mov
sub
jnp
cmp
inc
hlt
ds
addr16
push
lret
bound
test
pop
insl
inc
push
jbe
and
repz
pop
and
dec
movsl
ret
mov
rorb
jge
jae
aad
sub
cmpsl
xor
jb
mov
add
jne
call
lods
dec
fistpll
push
lods
scas
mov
inc
loopne
lcall
loop
inc
xor
pop
dec
xlat
pop
insb
xor
outsl
inc
in
out
repnz
fistpl
out
sub
pop
mov
lret
rorb
or
aas
pop
and
fbstp
jg
sbb
push
popf
push
inc
jns
das
add
outsb
cmpsb
mov
out
or
jge
loop
inc
xchg
jnp
fwait
ja
mov
bound
pop
push
and
jae
mov
notb
testl
cmpsl
negl
bound
pop
dec
adcl
enter
cltd
popa
stc
mov
cmp
cmpsl
cmp
lret
push
aad
push
cld
push
out
sub
dec
push
cld
orb
xchg
adc
insb
add
or
or
xorl
sar
iret
pop
out
inc
cwtl
mov
loop
mov
sbb
ss
xchg
push
out
iret
mov
cmp
in
lods
loope
mov
mov
cwtl
lret
mov
cmp
outsl
jle
pop
adc
pusha
cmp
add
xchg
adc
fisubrs
sbb
inc
mov
jmp
lea
sbb
dec
lret
lea
and
enter
bound
xchg
test
clc
adc
mov
dec
or
mulb
and
cmp
pop
lret
cli
ret
inc
fistl
in
xchg
xor
ficompl
xchg
fidivl
test
mov
fstps
jmp
pop
mov
lock
lods
and
scas
repnz
vunpcklps
popa
mov
loope
xchg
int
mov
pop
in
aam
jb
sahf
xor
adc
pop
mov
je
sbb
ja
test
mov
jmp
aas
push
mov
jb
and
nop
jmp
in
or
out
sti
push
and
and
mov
movsl
inc
ja
pop
repz
adc
dec
fsub
push
sahf
repnz
arpl
loopne
inc
idivb
xchg
dec
dec
clc
std
les
jecxz
pushf
mov
sahf
jno
cwtl
shlb
dec
fdivrl
popf
jnp
sub
dec
mov
rorb
pop
and
push
jae
bound
jbe
xor
xor
mov
dec
loopne
jp
fdivp
jg
popa
push
repz
cs
pop
mov
mov
ds
xchg
mov
scas
xor
mov
js
shrl
xchg
xchg
cs
sbb
imul
or
pop
mov
jno
inc
inc
inc
and
mov
mov
ds
and
js
mov
push
js
dec
dec
out
sub
shlb
inc
decb
dec
dec
lods
imulb
adc
outsb
mov
in
dec
leave
fstps
das
stos
mov
jmp
aas
push
lock
push
lahf
inc
fdivr
and
andl
fs
pop
daa
push
add
andb
mov
cwtl
inc
sti
add
mov
and
insb
and
xchg
daa
in
xchg
mov
and
xchg
xchg
mov
les
in
test
sar
in
or
xor
mov
cmp
or
or
movsl
sbb
lcall
orl
xchg
mov
test
mov
cmp
call
aaa
jmp
inc
mov
lock
roll
sbb
lret
rol
jp
js
xchg
adc
dec
adc
mov
xor
repz
je
cmp
repz
pop
sub
cmp
xchg
inc
fiaddl
adc
inc
push
mov
and
fimull
jo
insl
and
lock
push
sbb
test
adc
and
insl
bound
inc
pushf
cmp
xchg
dec
loope
in
xor
ret
xchg
or
dec
add
ss
lea
add
lods
ja
out
push
pop
adc
xor
jge
aad
into
rolb
jl
insb
fucomp
insl
sub
pop
cmc
fs
push
loopne
pop
loop
pop
push
bound
imul
mull
out
xchg
dec
lods
mov
pusha
in
lds
dec
fldt
out
lahf
cld
fisubl
fistl
cli
xchg
ja
test
lea
and
stc
sub
dec
adcb
jnp
std
dec
sub
jnp
ljmp
and
dec
add
xor
les
imul
faddl
testl
movsb
leave
and
push
mov
push
test
cmp
mov
negl
mov
jae
out
in
and
mov
clc
xor
jge
imul
js
pop
jb
adc
sub
pop
add
mov
fmuls
dec
mov
pop
push
imul
mov
iret
enter
jns
push
or
adc
insb
add
sbb
pop
xor
nop
imul
pop
repz
mov
mov
pop
insb
dec
nop
pop
push
push
xchg
and
xor
shlb
lret
sti
inc
push
mov
sbb
sbbl
mov
scas
enter
lahf
insb
inc
push
and
fisubrl
call
mov
or
jg
cmp
fidivs
scas
jae
adc
mov
sbb
ss
iret
sahf
hlt
mov
int3
in
pop
rorb
adc
je
jno
xchg
arpl
or
clc
test
mov
pop
int3
out
shr
test
movsb
lods
test
lret
aas
orl
jns
stc
test
mov
test
pop
mov
push
pusha
testl
pop
stos
inc
push
pop
and
ficoml
sbb
or
xchg
loope
loopne
mov
push
int
movsl
fldl
jns
pushl
pop
cmpb
out
pop
mov
and
push
push
sti
andl
loop
les
iret
sbb
ja
sbb
fidivrs
and
push
mov
pop
add
cmpl
ss
lret
bound
push
push
movsl
std
shl
cs
fdivl
in
jle
cli
sti
fimuls
jp
out
stos
xor
mov
jmp
addb
lds
das
jge
pop
cs
testb
icebp
sub
lods
xchg
xorb
push
call
adc
inc
das
std
lods
add
add
xor
icebp
mov
repnz
cmp
cs
dec
or
cmp
xorl
push
ror
ret
xor
fsubrl
or
lods
cmp
inc
repnz
jae
out
mov
mov
add
repnz
xchg
into
xor
inc
in
stos
jns
sahf
xor
sbb
sbb
xchg
fyl2xp1
mulb
fisttpll
and
scas
vpshab
lret
lcall
dec
and
lods
cli
lcall
fucomp
mov
popa
std
std
leave
mov
push
push
std
or
jecxz
push
jno
scas
and
jbe
ror
inc
mov
repnz
mov
push
add
les
scas
mov
nop
ljmp
adc
and
scas
push
movsb
lods
pusha
jp
pop
xor
xchg
xor
repz
insl
mov
ret
cwtl
mov
les
pop
scas
sub
out
pop
xor
jae
pop
or
cltd
je
jp
shlb
fdivs
xchg
and
hlt
jo
push
leave
cwtl
sbb
dec
mov
xor
lods
pop
in
fidivrs
mov
or
pop
xor
jg
cwtl
scas
rcll
mov
mov
lcallw
incl
fstps
fwait
add
outsb
jmp
push
inc
or
mov
outsl
inc
test
lock
stc
ljmp
lods
icebp
sub
push
and
mov
out
adc
dec
cmp
mov
lcall
out
push
mov
inc
std
push
ljmp
jno
lods
sbb
inc
add
lods
mov
sub
mov
or
dec
lcall
xchg
fldln2
pusha
cmp
dec
or
pop
add
cmp
jne
loop
int3
pop
add
cmp
cmpsb
mov
scas
fisubs
shrl
mov
sbb
adcl
push
mov
add
push
dec
adc
and
and
aad
mov
pushf
cmpsb
xchg
cmp
and
adc
push
dec
mov
ret
fst
mov
mov
imul
int3
cmp
mov
pop
insl
loop
pop
cltd
push
sub
or
jae
cld
movsb
repz
in
leave
mov
jg
cvtdq2ps
int
in
outsb
xor
arpl
in
mov
inc
in
add
addr16
sub
jle
fdivrs
and
sarl
notl
add
inc
nop
outsl
in
push
pushf
jmp
cmp
imul
add
dec
scas
sti
jp
xlat
mov
ja
movsl
rol
fisubs
adc
push
daa
into
dec
fisubl
sub
das
movb
push
push
loope
cmp
add
icebp
and
insl
sub
push
lcall
or
out
lds
cs
pop
dec
push
aaa
loope
jbe
and
and
jne
in
in
icebp
js
xchg
sbbl
ja,pn
push
mov
imul
push
xchg
jae
int
adc
pushf
pop
dec
mov
out
push
out
adc
and
hlt
mov
test
sbb
ficoml
xor
pop
gs
mov
out
scas
pop
jo
mov
push
xchg
push
movsl
mov
loope
sub
aam
and
call
outsl
fistpl
inc
andl
xchg
jmp
inc
inc
sub
mov
arpl
or
in
adc
cmp
pop
in
ss
fbld
dec
data16
aam
push
mov
stc
adc
loope
adcb
loope
mov
flds
mov
adc
ret
jl
imul
xor
sbb
out
ret
cmp
fcoml
fcmovu
clc
jae
jb
sbb
out
sbb
sbb
nop
or
dec
jl
js
xchg
movsb
test
lock
pop
xchg
add
pop
cmp
xor
loope
aaa
pop
mov
pop
push
inc
jno
add
mov
fildl
or
pop
mov
pop
mov
and
cwtl
std
loope
xlat
dec
and
outsb
lcall
mov
inc
inc
pushf
add
aas
ficoms
xor
jo
jge
sub
xor
nop
push
pop
int
xor
push
or
mov
pop
add
xchg
enter
lods
fistpl
fidivl
jg
xchg
lea
sbb
scas
push
mov
outsl
out
int
cmp
out
sti
fwait
inc
xor
xor
mov
int3
adcl
ret
jbe
jg
fldenv
and
les
fistl
icebp
jae
cmp
xchg
and
push
mov
xchg
out
push
icebp
push
and
jecxz
faddl
xchg
push
sub
inc
out
fists
cmp
push
test
inc
aas
xlat
mov
cmp
inc
xchg
pushf
dec
or
add
std
es
ljmp
fidivl
mov
in
and
cmp
cwtl
pop
fmull
jp
rorb
lahf
repnz
fwait
mov
stc
fildll
jge
adcb
out
test
pop
xor
and
xchg
mov
pop
mov
xchg
ss
outsl
decb
adc
xchg
addb
sub
add
daa
js
sub
movsl
loopne
jns
jl
add
jg
mov
fistpll
jl
repz
jp
adc
imul
insl
xor
inc
and
push
push
popa
pusha
cmpsl
xchg
lods
xorl
or
aaa
push
je
sub
sub
insb
mov
lods
sub
sbb
addl
jnp
ret
dec
shlb
std
nop
daa
nop
and
dec
out
mov
mov
mov
mov
mov
jmp
fs
push
loope
push
lds
insb
aaa
dec
and
sbb
sbb
mov
mov
sahf
fldcw
dec
add
fwait
outsb
cmp
andb
mov
pop
cmpsl
and
mov
xchg
push
sahf
mov
jne
cmp
push
in
jg
jne
inc
sub
push
sub
mov
xor
inc
scas
add
jg
xchg
mov
jns
repz
lea
mov
inc
pushf
push
cmp
out
mov
subl
retw
outsb
je
pop
leave
pop
push
push
subb
lods
sahf
testb
enter
dec
nop
and
jae
xchg
pop
outsb
push
push
scas
in
pop
cmpsl
aas
adc
ds
fwait
adc
mov
ss
jle
mov
clc
inc
fistpll
push
mov
out
pop
enter
imul
xchg
filds
cltd
ret
es
fsubrs
mov
jmp
lret
in
test
outsl
push
pop
add
hlt
add
scas
dec
hlt
push
and
iret
xor
hlt
mov
add
adc
mov
fwait
xorb
mov
stos
test
fnsave
adc
sub
jb
or
sub
sub
or
xor
jnp
xchg
les
mov
bound
mov
adc
loope
add
jp
mov
sbb
sbb
icebp
inc
cmpsl
stos
xor
cmp
or
adc
cmp
shrb
fadd
pop
dec
bound
xchg
mov
fsubl
jl
cld
mov
add
cmp
mov
lock
lods
ret
mov
out
sbb
inc
jbe,pn
mov
adc
lret
lahf
mov
loopne
stc
test
jne
repnz
movsb
out
test
inc
pop
push
fucom
cmc
cmp
add
add
or
js
les
mov
popa
out
mov
xchg
stos
ffreep
push
and
insb
ret
ljmp
loope
and
sub
mov
pop
rcl
dec
call
sub
insb
jp
sahf
mov
jae
out
cwtl
das
fnsave
iret
lods
xchg
sub
jmp
adc
test
mov
aad
and
or
ljmp
mov
jmp
jo
insl
sbb
xchg
into
or
ret
rorb
and
fnstcw
aad
pusha
orb
push
lcall
cmpsl
sbb
stc
nop
mov
inc
incl
jg
cltd
lock
xchg
ljmp
and
cmp
aad
push
enter
in
dec
shl
mov
jbe
test
xor
enter
adc
add
fisttpll
push
push
jb
or
lea
ficoms
lret
adc
jno
cmp
imul
mov
push
cltd
push
dec
inc
stc
cmp
mov
push
jo
mov
dec
sbb
mov
pop
rcrl
add
xchg
cmp
cmp
mov
rcr
lahf
inc
jmpw
cmp
mov
fnstsw
dec
in
pushf
pusha
int3
into
mov
enter
scas
popa
incl
clc
inc
sbb
jno
mov
fnstsw
push
setns
imul
cwtl
fwait
lock
push
inc
push
sub
shl
lea
leave
push
sub
adc
popf
xchg
cmpsb
cmp
les
out
mov
pop
mov
mov
add
sbb
int
push
sub
mov
add
cli
adc
xchg
sub
add
test
fbld
loope
out
lds
adc
fstl
and
jle
pop
mov
insb
sub
test
pop
pop
adc
xor
pop
jno
incl
lahf
jg
inc
fnstenv
jp
push
jp
inc
fidivs
fwait
rcll
shl
mov
and
into
or
out
shrb
mov
lock
ret
or
jno
clc
aas
arpl
cmp
por
cmp
cmp
popl
int3
arpl
xchg
add
lds
aas
push
in
into
cmpsb
adc
lret
sub
test
ret
inc
ljmp
mulb
ret
jecxz
std
adc
scas
inc
sbb
iret
cmpsl
mov
push
jae
sub
insb
pop
xchg
xchg
and
pop
jbe
dec
push
stos
jp
insl
xor
or
mov
or
push
push
dec
dec
iret
mov
adc
and
cmpsl
inc
fcom
sub
pop
xor
movl
data16
popw
sub
inc
test
xchg
loop
jo
or
sub
daa
adc
loop
les
xor
fs
popa
out
test
scas
and
cmpsb
push
adc
dec
push
pop
adc
data16
bound
loope
fs
push
scas
mov
push
lret
sub
scas
adcb
sub
sahf
mov
and
push
jae
pop
adc
pop
cmp
or
cltd
rclb
push
jne
fistps
and
fnstenv
hlt
call
sbb
adc
xchg
adc
icebp
xorb
aas
mov
cmp
lods
sti
push
add
push
xor
or
lock
pop
out
jg
je
out
jp
loopne
dec
insl
inc
std
xchg
ja
push
jne
jle
sub
aas
sti
movsb
jmp
loopne
inc
inc
aam
in
in
push
mov
aad
aad
mov
jne
push
or
pop
out
mov
jne
das
enter
sub
notb
leave
pop
pop
jg
sahf
lods
mov
push
pop
xchg
push
sahf
inc
fisttpll
or
fsubs
shlb
int
fdivrs
test
dec
stc
xor
jmp
mov
adc
xchg
xor
cmp
outsb
aaa
add
scas
mov
loop
jns
mov
loopne
mov
dec
in
and
sbb
in
insl
mov
xchg
or
fcomps
mov
sbb
arpl
inc
les
test
xchg
jmp
dec
dec
or
dec
lahf
adc
push
or
shlb
leave
mov
mov
inc
or
cmp
sbb
dec
and
lds
inc
sbb
sbb
iret
or
pop
aas
data16
mov
insb
add
cltd
pop
inc
jecxz
or
gs
jne
adc
push
inc
fnsave
xchg
pop
push
pop
xchg
or
dec
jl
enter
test
mov
xor
xchg
push
adc
mov
loope
cs
andl
loope
or
jle
or
insl
push
ficomps
int
es
imul
sub
aaa
pop
fcoms
xrelease
repnz
nop
jle
inc
aas
jns
sarl
in
gs
outsl
push
cmp
inc
xor
shll
jecxz
stos
xor
xchg
int
mov
lahf
out
addl
dec
push
fbstp
lods
int3
cmp
adc
fisubrs
xor
bnd
and
jg
jle
subl
scas
addr16
pop
push
je
pop
inc
pusha
jae
mov
hlt
test
scas
xchg
or
jle
clc
xor
and
mov
cmp
cmp
movsl
push
jmp
insb
aas
sub
shrl
adc
xchg
add
xor
inc
xchg
cs
push
icebp
pop
into
push
jo
iret
jns
idiv
std
xchg
jp
in
jne
mov
cmpsb
push
sub
fisttps
fldenv
mov
popa
std
xchg
cmp
imul
xor
sub
popf
dec
daa
hlt
inc
fiadds
mov
stos
inc
xlat
sahf
imulb
mov
sbb
jbe
inc
and
xchg
adc
push
jbe
outsb
inc
scas
bound
inc
data16
mov
in
mov
aas
lret
mov
sub
jp
imul
insl
mov
fldenv
mov
xchg
add
xchg
lret
cmp
or
pop
pop
pushf
das
dec
divl
cmp
mov
outsb
sbb
out
mov
lods
inc
leave
xorl
sbb
int3
je
sbb
sbb
imul
dec
push
cmp
sub
outsl
nop
test
pop
jns
rcl
mov
fbstp
fcom
push
push
sti
test
adc
mov
mov
mov
jns,pt
and
stos
arpl
roll
ds
cli
sub
xor
sbb
xchg
mov
push
in
sar
sbbb
mov
test
std
int
or
mov
push
pop
jnp
iret
mov
pushf
ret
aam
xor
push
sub
dec
fwait
xchg
sbb
fwait
mov
jmp
movsl
jl
adc
or
add
sub
iret
sbb
xor
mov
sarl
aad
stos
pop
in
clc
adc
sub
lods
inc
add
test
nop
adcl
loop
or
rcrl
imul
repnz
fisubl
or
cmp
ret
lods
aam
add
pop
or
popa
cmp
and
inc
fneni(8087
xchg
adc
jae
loope
jnp
cmp
es
cld
flds
stos
dec
cld
add
jmp
fisubrl
std
mov
push
lods
dec
int
idiv
lea
jbe
and
adc
add
shl
cltd
ljmp
mov
xchg
or
sti
xchg
dec
popf
lahf
push
je
lock
insb
sbb
sahf
test
dec
mov
adc
les
aas
mov
push
jle
xor
ss
cli
stc
push
push
xor
sbb
xchg
xlat
arpl
das
jg
movsb
mov
add
adc
iret
into
xchg
lret
divb
loop
mov
pushf
fnstenv
popa
gs
sbb
testl
xchg
loop
sar
pop
lret
or
idivl
fs
or
sub
aad
dec
mov
xchg
idivb
hlt
test
in
fcmovnb
iret
inc
nop
pop
hlt
ret
and
jnp
ds
loop
dec
clc
and
scas
xchg
dec
out
cmp
stos
inc
and
out
enter
pop
stos
jge
ret
outsb
or
lds
movsl
jo
mov
or
fwait
jmp
mov
xchg
test
mov
out
ja
outsl
sbb
inc
mov
orl
push
test
cmpsb
add
sbb
mov
xchg
fisubrs
jle
hlt
aam
mov
call
and
sahf
cmc
mov
jl
fsubrs
orl
adc
jmp
lds
ss
push
pop
pop
adc
add
push
adc
stc
jmp
push
cmpsb
fs
mov
cmpsb
xor
pop
int3
and
fldt
or
add
cmc
imul
push
clc
test
movsl
or
sti
jbe
in
mov
fadds
mov
sub
lret
popa
cld
unpckhps
fstl
inc
push
sarb
dec
loop
outsb
jmp
cwtl
sbb
scas
scas
lret
lock
jecxz
adc
out
push
pop
aad
lods
enter
lcall
cmp
outsb
daa
ja
push
call
inc
inc
xchg
push
nop
test
jne
dec
test
movsl
int3
stc
sub
nop
mov
fldenv
pop
xor
xchg
call
cmp
cmp
fs
dec
aad
jmp
andl
jg
int
push
jo
push
push
jbe
int
sub
imul
dec
fwait
adc
int
ret
mov
cwtl
imul
stos
pusha
popa
aam
xor
mov
lods
jecxz
jg
dec
out
aaa
adc
push
push
pop
lret
loopne
fcom
out
cmc
fstl
aaa
loop
cli
data16
push
or
das
mov
sub
movsl
repz
mov
adc
dec
xchg
or
cmp
pop
jno
je
iret
push
mov
xchg
rcrl
fbld
mov
and
aaa
gs
jle
jl
clc
mov
jnp
inc
push
sti
pop
inc
movsl
or
and
sbb
mov
mov
test
fpatan
xchg
dec
popa
ret
aam
sub
in
pop
fcmovbe
pop
shlb
and
or
mov
in
push
subl
pop
lods
add
lods
mov
je
stos
je
ret
add
push
test
sub
adc
popa
cld
dec
aaa
add
jo
push
loope
xchg
scas
addb
pop
cmp
nop
mov
and
iret
bound
sub
jns
mov
leave
cmpsl
and
fldcw
aam
xchg
repz
and
and
jmp
sub
je
pop
lock
in
pop
sti
xchg
dec
xchg
xlat
pop
jecxz
mov
mov
icebp
cmp
mov
and
mov
cmp
sti
cli
push
adc
leave
inc
inc
or
je
lret
xchg
xchg
sbb
leave
lahf
mov
add
fists
inc
inc
xchg
adc
jg
push
mov
ds
pop
adc
pushf
mov
jns
aas
stos
jmp
mov
adc
rolb
sub
xor
mov
inc
loop
inc
cmp
jnp
fstpl
iret
mov
cmpsl
inc
jge
out
dec
pop
aas
pop
xchg
mov
pop
cs
adc
inc
xor
push
mov
in
sbb
dec
push
rol
and
add
pop
inc
cs
and
jo
cmp
stc
test
inc
push
pop
into
xor
stc
or
xor
mov
repz
sub
jbe
enter
mov
int
jo
in
sbb
hlt
movl
pushf
mov
mov
inc
inc
add
xor
or
aas
aam
cmp
fsubl
sti
jecxz
mov
aam
scas
inc
sub
mov
fimuls
cmp
xchg
out
je
sub
cmp
add
movsl
mov
jle
cmpsl
sub
in
pop
mov
or
add
adc
aam
mov
ds
add
sbb
jmp
ret
add
add
dec
xchg
and
dec
outsl
cs
fwait
pop
cmp
mov
dec
mov
leave
xchg
or
ljmp
addr16
lret
daa
mov
movsb
cmp
jo
mov
xor
push
inc
repnz
data16
sbb
pop
in
std
sbb
lods
inc
pop
cmp
movsl
sbb
ds
lcall
sti
imul
pop
pop
insb
sbbl
enter
cmp
adc
es
fbstp
pop
inc
rcrl
hlt
pop
or
jb
sub
push
adc
sub
lcall
dec
mov
scas
jb
movsb
das
lods
xchg
les
mov
sbbl
sbb
ds
out
repnz
mov
pop
mov
mov
push
je
mov
mov
mov
mov
pop
push
mov
mov
cmp
cwtl
sub
mov
dec
pop
sub
test
clc
pop
add
pop
mov
dec
out
sahf
rolb
add
repz
scas
popf
scas
loopne
imul
jne
push
not
push
mov
push
cmpsl
sbb
outsl
add
jnp
xor
mov
inc
fnstcw
pop
and
sub
and
add
add
outsl
push
or
movsl
lea
pop
cmpsb
ds
bound
scas
mov
loope
iret
jg
pop
or
cmp
add
scas
push
pop
leave
push
in
fnstcw
pop
loope
pop
je
mov
std
mov
arpl
pop
into
ficoml
mov
insb
lock
mov
test
mov
xchg
adc
fs
imulb
jbe
inc
test
scas
dec
pop
xor
push
xchg
xor
adc
lret
add
scas
aas
into
xchg
inc
popf
dec
pop
xchg
dec
dec
xchg
or
lcall
js
pop
and
leave
daa
call
sarl
mov
jmp
push
cmp
ss
adc
jae
xor
xor
jge
mov
inc
movsl
stos
add
aad
loopne
rcr
mov
shlb
std
lock
jnp
pop
aam
ljmp
sbb
cs
xchg
xchg
out
mov
push
jmp
lock
loope
movsl
cmp
jns
push
jmp
mov
jbe
sub
fsubs
jmp
dec
adc
fs
aad
add
jbe
mov
push
popf
jl
lds
pushf
cld
dec
pop
loop
push
out
fldt
pop
fisubl
test
adc
and
jp
imul
add
ficomps
pop
bswap
push
lret
ljmp
enter
or
dec
add
pop
dec
pop
jo
imul
or
xchg
dec
ret
repz
popa
fwait
jbe
lds
mov
fistl
push
test
lahf
inc
movsb
pop
pop
jmp
or
jle
loope
inc
push
mov
jl
sbbl
push
in
pop
or
mov
add
fidivrl
mov
dec
shl
mov
xchg
jle
dec
pop
push
nop
adcb
cmp
push
std
incb
mov
pop
jp
push
adc
std
in
dec
cmpsl
xchg
inc
aam
push
dec
ds
push
and
fidivs
mov
lds
daa
pop
scas
push
es
jns
mov
lods
scas
add
loope
jns
hlt
or
mov
push
out
outsb
in
or
push
dec
ljmp
cmp
mov
outsl
xor
mov
mov
and
test
ja
jae
pop
adcl
and
or
jns
imul
dec
adc
idiv
add
sub
push
sbb
pop
jmp
jae
std
jnp
fstps
adc
adc
divb
mov
cltd
dec
lods
inc
jb
mov
xchg
les
jp
data16
adc
pop
cmp
imul
mov
adc
sarb
xchg
popa
clc
std
ds
scas
pop
mov
popa
xorl
insl
loopne
ficomps
shl
test
mov
jl
fidivrl
adc
mov
or
inc
sub
repz
push
xor
movq
lret
fldenv
push
adc
lds
cld
pop
cmp
sub
dec
popf
js
xchg
mov
adc
adc
fldenv
lret
leave
xor
add
cmp
xchg
notb
loopne
std
aaa
pop
ss
pushf
mov
loopne
push
mov
daa
mov
xor
dec
sub
sbb
jb
lret
sub
cmp
pusha
sti
outsb
mov
add
sub
dec
movsw
in
lods
dec
frstor
je,pn
jo
out
cmp
cltd
xor
pop
mov
out
imul
dec
cmp
xchg
int
outsl
pushf
xor
fbld
jae
mov
jg
pop
xchg
mull
inc
sahf
cs
cwtl
das
es
mov
xor
fucomip
cmpsl
push
ss
in
mov
ret
es
mov
call
fsts
cmp
jp
inc
cli
unpckhps
push
lods
jno
push
lods
and
or
pop
scas
jecxz
lea
adc
xor
stos
pop
cld
cmp
sbbl
imul
dec
sahf
inc
jle
fidivl
popf
sub
negb
pushf
adc
xchg
lret
aaa
sarb
sbb
mov
lods
jno
inc
popa
and
scas
add
iret
mov
adc
xchg
scas
sub
inc
imul
cmp
fwait
sub
xor
adc
cmp
cmp
xorl
pop
inc
add
fdivrs
inc
es
into
aad
adc
scas
cmc
push
sahf
pop
data16
lret
sub
or
pop
dec
push
sbb
sbb
into
cmp
bound
adc
mov
dec
mov
je
scas
in
push
das
lods
dec
pop
fstpt
es
popf
pop
jno
dec
out
aam
and
inc
out
push
inc
pop
test
sub
clc
inc
arpl
test
add
jnp
fists
mov
jl
sub
dec
adc
inc
push
sarl
mov
sub
jnp
push
and
data16
ret
iret
ret
or
gs
stos
push
lret
pop
shll
cltd
aad
mov
inc
mov
repnz
lock
push
or
rcr
je
mov
or
imul
cmp
test
lock
cmc
mov
add
xchg
int3
lcall
stc
pop
les
sti
mov
fmuls
mov
adc
je
mov
adc
lahf
inc
push
lock
xor
add
fs
jno
push
sub
daa
dec
ret
xor
mov
int
mov
lods
in
int
pop
add
lods
mov
add
pop
repnz
xchg
pushf
fldl
mov
rcrb
mov
nop
stos
movsb
rorb
leave
cmc
cmp
das
or
jae
ja
dec
pop
cmp
sub
lret
sbb
jbe
hlt
loope
jecxz
adc
inc
inc
test
call
rol
aam
mov
mov
insl
push
test
sub
xchg
push
rcl
sub
and
push
fwait
imul
pushf
mov
mov
push
scas
jmp
les
xor
push
inc
mov
insb
push
dec
push
sbb
jbe
mov
adc
unpckhps
inc
fists
inc
pop
or
cmp
ficomps
lods
push
mov
pop
inc
add
fdivl
bound
loope
aad
dec
and
dec
sub
idivl
cmpxchg
ss
fmuls
pusha
bound
call
stos
adc
out
cwtl
imul
pushf
mov
ss
je
pop
lcall
les
mov
pop
in
add
js
jecxz
mov
stos
test
adc
jl
arpl
mov
jmp
movsl
mov
ss
imul
sbb
icebp
int3
xorl
lock
aas
or
pop
and
xchg
cltd
std
sahf
jne
dec
es
mov
aaa
shrb
pop
fildll
pop
jae
add
sbb
xchg
icebp
add
push
and
push
loop
pop
lahf
lds
shlb
sub
mov
out
aaa
mov
js
loope
ljmp
and
fisubrs
inc
les
int
xchg
cli
fidivl
push
clc
cmp
ljmp
notb
xor
sahf
xchg
sub
or
testb
add
xor
xor
imul
popa
xor
fninit
inc
and
jl
xchg
xchg
test
inc
inc
out
movsb
cmp
cmp
aam
mov
shrb
dec
bound
jnp
roll
and
xchg
inc
aad
je
pop
movsb
fbstp
repz
inc
pop
mov
inc
mov
xor
cmp
add
xor
cwtl
sbb
nop
ss
icebp
cli
loope
mov
or
xchg
cmp
push
rorl
jnp
dec
dec
mov
xor
mov
ljmp
xchg
and
cwtl
call
sti
loop
test
and
aas
cmpsb
test
dec
mov
mov
iret
mov
xor
call
mov
stos
sbb
aad
shrb
lds
sbb
out
rclb
mov
mov
scas
adc
inc
ret
or
js
rcl
popa
lahf
scas
inc
roll
dec
and
xor
cli
and
jb
mov
and
add
popa
pop
stc
es
push
aaa
fmull
jle
lods
push
je
xchg
imul
inc
cmp
jle
cmp
arpl
or
int
or
fidivrl
push
xor
sti
stc
nop
xchg
pusha
aad
cs
fcomps
sahf
and
mov
and
jbe
aaa
xchg
out
and
ja
test
mov
std
xchg
dec
jmp
repnz
fnstsw
pop
stos
lea
mov
stos
jp
popa
add
xchg
fwait
xchg
push
pop
pop
out
dec
and
mov
stos
cmpsb
inc
divl
jo
pop
jb
mov
loopne
pop
cmp
push
xchg
clc
dec
in
pop
out
xchg
inc
adcb
mov
sbb
iret
xor
cmp
pop
sbbl
out
roll
push
outsb
repnz
sbb
jmp
stc
push
inc
push
sbbl
test
in
fs
fdivrp
inc
mov
sbb
mov
imul
pop
icebp
shrb
xor
xlat
icebp
popf
adc
inc
imul
popf
in
loope
add
negb
and
xchg
xchg
rcrl
enter
mov
sahf
mov
aaa
mov
xchg
jle
xchg
sbb
in
in
sbb
in
xchg
movsb
repnz
lret
cmp
stos
insl
cmc
jne
cmp
loopne
jp
cmp
mov
loope
adc
mov
out
scas
fldcw
shr
mov
pop
mov
fisubrl
mov
aam
jmp
mov
add
das
pop
mov
pusha
int
pusha
aad
int
and
int
jo
mov
inc
stos
aam
and
scas
std
inc
loopne
xor
ffreep
push
in
fldl
sbb
xchg
mov
inc
and
test
lret
xor
mov
test
sub
adc
popf
arpl
call
dec
and
mov
inc
decl
nop
mov
dec
lock
xor
xor
mov
popf
ljmp
test
sbb
addr16
insl
ret
cmc
fs
jecxz
lret
out
movlps
cld
loopne
sub
ja
jmp
or
mov
push
sahf
dec
out
push
shl
xor
pop
lea
mov
mov
daa
mov
jge
pop
add
int
sub
imul
xor
cmp
sbb
icebp
sub
pop
outsb
ja
bound
xchg
movsl
and
mov
fisttpll
sarb
icebp
shll
ljmp
jl
mov
or
fcompl
mov
test
sbb
fnsave
sbb
pop
xchg
pusha
xor
stos
mov
or
jecxz
lcall
and
pop
adc
cs
mov
dec
imul
fwait
ss
int
pop
or
pop
sbb
mov
insl
push
das
pop
and
pop
lock
pop
ja
shrb
ja
jmp
xchg
outsl
xchg
mov
push
stos
inc
adc
sub
add
fs
adc
pusha
push
lahf
mov
cmp
jo
es
xchg
mov
jp
cmp
test
dec
mov
lahf
es
xchg
loope
inc
sbb
mov
mov
in
sar
aad
inc
pop
xchg
ljmp
mov
mov
sahf
scas
jge
cmpsb
test
adcb
pop
clc
inc
sub
mov
clc
pop
aaa
mov
mov
call
sub
int3
cli
inc
dec
sbb
fs
cmpsl
arpl
mov
cmp
leave
inc
xlat
cmp
adc
negb
adc
sbb
mov
push
jae
in
arpl
pop
cmp
xchg
lahf
jg
pop
sahf
rorb
push
or
movsb
pop
std
adc
add
and
out
push
out
andb
les
xchg
push
xchg
mov
jge
cld
adc
lods
test
dec
clc
fistl
ret
data16
mov
loopne
adc
std
mov
push
fnstcw
lods
push
das
rcr
push
xor
cwtl
cli
and
fcomi
jp
cmpsb
ja
ljmp
int
dec
push
lret
push
sub
leave
loope
adc
adc
loopne
cmp
jmp
mov
imul
mov
movsb
fwait
imul
and
cmpsl
dec
push
and
inc
sbb
pop
lock
cmp
loope
arpl
test
inc
subb
arpl
push
sbb
sahf
mov
sahf
or
imul
out
inc
pop
mov
add
inc
mov
fdiv
and
push
mov
cmp
cmp
int
adc
xor
clc
iret
and
js
pop
mov
mov
fmull
xchg
sbb
sti
cmpl
xor
push
insb
test
fsubr
nop
jns
popa
pop
nop
mov
mov
les
cmp
adc
mov
int
or
das
jecxz
les
addps
pop
sub
pop
aam
lret
push
pop
mov
push
sti
adc
mov
repz
aam
pop
add
fbld
mov
int
xor
jo
shll
xchg
scas
insl
rolb
mov
dec
jecxz
ja
sub
inc
push
xor
scas
scas
adc
fstpl
pop
stc
sbb
movb
rclb
fldcw
mov
mov
je
pop
push
lds
pop
jb
push
jecxz
push
aas
mov
jle
push
dec
test
out
mov
cltd
push
mov
or
adc
lds
mov
andl
jp
pusha
adc
mov
sahf
stos
fs
adcb
xor
mov
scas
lods
clc
lahf
push
jno
cmc
aas
ret
jp
movsb
inc
add
xchg
sbb
pushf
bnd
arpl
dec
pop
pop
lods
xor
movsl
xor
sub
mov
dec
iret
mov
mov
mov
push
dec
cmp
shrb
jle
jge
ret
out
push
repnz
and
lods
fcmovu
mov
out
cmc
mov
jmp
fmuls
and
inc
sub
inc
ja
je
imul
dec
lret
aaa
sarl
push
mov
fs
or
clc
jae
in
into
push
repz
and
es
and
stos
mov
sub
mov
bound
stos
imul
mov
icebp
in
int3
lods
mov
mov
arpl
inc
pop
xchg
arpl
popf
ret
jmp
lret
std
mov
popl
and
sbbb
pop
jbe
push
out
cld
push
adc
fldenv
adc
cs
data16
pop
test
xchg
das
xchg
test
or
push
inc
sub
cmp
lahf
out
popf
lahf
rclb
add
adc
xchg
xorl
inc
add
dec
xor
movsl
stc
or
ljmp
mov
push
mov
xlat
mov
push
cmpsl
or
sets
cmpsb
mov
mov
mov
outsl
sbb
xor
lret
int3
mov
out
rorl
lds
je
in
mov
pop
xor
andb
add
lods
enter
dec
cmp
cmp
cmpsb
lods
divl
pop
repz
roll
ret
mov
adc
xchg
int3
cmp
mov
push
mov
fiadds
add
in
or
frstor
add
cmp
sub
xchg
sbbb
adc
push
and
cmpb
pop
rol
push
jne
sub
shlb
adc
pushf
inc
lea
fiadds
sarl
cltd
loopne
iret
and
shl
sub
addl
rep
mov
and
jnp
test
pop
and
cmpsb
lock
adc
add
inc
insb
shlb
sbb
adc
adc
add
or
and
pop
in
addr16
aas
push
inc
repz
inc
push
jmp
inc
rcrb
push
dec
mov
insl
mov
xor
cmp
js
js
fwait
xchg
in
out
cld
sbb
pop
aas
dec
mov
out
das
pop
sub
imul
jb
int3
fidivrl
es
mov
insb
loopne
rol
mov
jle
mov
add
fs
push
lea
ret
dec
out
int
enter
jne
pop
sub
cmp
inc
in
sub
push
add
or
lods
icebp
mov
sbb
push
ret
sub
jae
jmp
fldl
adc
in
loope
notb
xchg
js
dec
cmp
adc
lock
mov
xchg
xchg
dec
into
and
dec
xchg
divl
mov
lea
mov
adc
dec
pop
mulb
pop
clc
fucomp
adc
xorb
push
push
cmpsb
les
stc
sbb
pusha
test
in
jne
es
xchg
sbb
xchg
sbb
pop
push
mov
xor
mov
out
hlt
js
mov
add
xchg
cltd
push
mov
in
pop
cmp
out
call
into
sub
inc
xchg
nop
inc
testb
sub
xor
jns
pop
inc
shll
sub
jne
fbstp
pop
pop
in
mov
cmc
mov
dec
push
dec
xchg
mov
int
mov
test
fwait
push
lock
fucomip
mov
add
push
jmp
lret
shrb
mov
ljmp
xor
pop
jmp
or
add
daa
pop
lds
aas
push
adc
mov
jl
xor
and
cmp
in
pop
xor
pop
fisubrl
mov
cmp
pop
xor
jns
in
xchg
daa
mov
in
pop
mov
shlb
pusha
dec
lods
insb
mov
ret
imul
scas
push
cmp
int
xor
xchg
fadds
push
insl
cmp
pop
pop
sbb
jae
jno
bound
cmc
jge
mov
mov
test
dec
jle
xlat
clc
lea
inc
xchg
movsl
cmp
cltd
mov
xchg
add
test
cmp
jo,pn
mov
negb
mov
inc
aam
fmul
in
pop
cmp
pop
mov
mov
cld
gs
and
or
scas
and
ror
shr
ret
cli
aaa
mov
mov
or
mov
sbb
dec
and
ja
fiaddl
lret
fisttpll
add
xor
aas
xchg
aas
push
lahf
fwait
enter
repz
inc
push
or
sbb
push
jae
rcr
mov
fstpt
dec
shrb
fs
mov
fcmovnb
sub
push
mov
xchg
cmp
movd
xor
push
pop
out
arpl
gs
arpl
aas
aad
xchg
sarb
adc
mov
push
in
imul
sub
lahf
add
push
repnz
mov
aaa
fldcw
inc
dec
pop
leave
jne
and
bt
ret
addr16
adc
adc
call
int
mov
mov
and
and
adc
and
dec
fadds
shll
les
xchg
subb
xor
adc
scas
les
xchg
dec
add
ret
jne
xor
aad
test
inc
fld
out
xor
movsb
test
jae
call
mov
test
xor
insb
mov
pop
lret
cs
jno
lds
popa
and
sub
fwait
push
dec
xchg
or
div
push
sub
mov
mov
jmp
negb
gs
std
stc
popf
xor
in
or
adc
inc
dec
sbb
or
push
rcr
shlb
dec
jge
mov
notb
push
lret
xor
lea
mov
arpl
xor
movsl
icebp
stos
inc
popa
xor
xor
adc
sub
cmp
sbb
mov
stc
or
or
out
mov
fsubs
movsb
popa
aad
add
pop
cmp
icebp
mov
iret
paddb
testl
fisubs
cmp
sbb
pop
rcrl
xchg
mov
adc
pop
jo
or
icebp
ss
addr16
mov
rorl
jl
loop
xadd
imul
mull
arpl
and
in
pop
clc
mov
loopne
mov
push
lret
and
nop
gs
aad
jns
test
ss
insb
sub
sahf
pop
cmp
jo
pop
fs
out
lahf
push
mov
aad
insl
cltd
and
cmc
repz
shlb
cmp
lods
push
mov
call
or
dec
ret
jmp
in
lods
xor
fldcw
and
or
or
inc
mov
fbstp
add
cmp
cmp
push
clc
xchg
sub
popa
push
icebp
pusha
sub
inc
test
mov
andl
dec
dec
inc
xchg
add
mov
icebp
addr16
xchg
mov
xor
mov
and
in
mov
lret
mov
je
xchg
push
mov
ja
sbb
test
push
call
faddl
mov
lods
xor
fbstp
lret
sbb
sti
xor
mov
ret
aam
sub
xor
inc
mov
stos
notb
scas
push
enter
insb
js
lods
scas
inc
stc
mov
rol
push
out
sbb
lods
sbb
into
mov
lcall
iret
xor
xlat
bound
es
dec
mov
adc
cs
call
or
dec
xchg
jb
sub
call
jecxz
js
mov
inc
sub
test
sub
mov
out
push
xchg
fs
frstor
ror
pop
jmp
stos
pop
xchg
xchg
int
sub
loope
test
pop
add
out
xchg
lods
jecxz
ljmp
sub
mov
dec
test
stos
shrl
mov
faddp
push
jns
lods
inc
hlt
pop
dec
scas
inc
cmp
push
inc
rcll
rcrl
aad
sub
rorl
ret
shrb
cmc
jne
xor
sbb
add
in
jp
aam
sti
mov
scas
andb
lcall
sub
xchg
jge
iret
rol
popa
fcoms
add
pop
jecxz
lahf
test
push
sub
leave
cli
inc
fildl
insl
jge
filds
movl
daa
fnstenv
sub
imul
sub
push
cs
cli
mov
loopne
pop
hlt
xor
fsubr
cmc
or
and
fsubs
pop
xchg
add
pop
fwait
hlt
add
aaa
mov
cmpsl
and
popa
js
out
add
test
jle
xchg
push
sbb
jecxz
out
insl
sub
adc
cs
push
frstor
mov
push
and
pop
pop
test
add
shlb
sub
fidivrl
aaa
push
cmpsb
inc
push
jne
sub
dec
add
insb
cmp
mov
xchg
pop
inc
xlat
test
or
pop
insl
out
jno
das
and
lretw
aam
add
cmp
lcall
sub
cwtl
lods
loopne
mov
stos
jae
fmull
dec
insl
inc
xchg
daa
pusha
pop
out
xor
push
notl
jmp
sahf
lods
sbb
jo
clc
mov
and
inc
xchg
push
xchg
rolb
inc
sub
push
outsl
imul
bound
aad
push
sbb
movsl
push
sub
mov
loope
fldcw
add
clc
xchg
sub
xor
insb
add
xlat
mov
xor
mov
inc
lcall
mov
mov
add
cmp
pop
adc
jl
das
lods
push
jp
lea
jns
pusha
pop
cmp
fmull
aad
out
out
js
int3
push
inc
into
movsb
ljmp
shr
aas
repnz
push
mov
shrb
xor
pop
push
adc
mov
jbe
sub
or
push
xchg
imul
xchg
decb
cmp
hlt
lods
stos
lock
xchg
inc
arpl
js
aad
test
out
inc
imul
into
and
and
sub
movl
cmp
filds
lock
mov
outsl
daa
inc
sbb
pop
imul
fwait
int3
repz
jmp
pop
dec
mov
xchg
pop
jbe
into
jecxz
cmp
mov
insb
subb
and
push
jp
dec
fistl
cmpsl
ja
add
in
adc
inc
or
scas
xchg
jb
inc
push
bsr
cmc
cmp
lock
rclb
cmp
mov
add
lods
jmp
add
inc
ljmp
fisttpl
mov
incl
pop
aam
ss
inc
gs
std
mov
mov
push
inc
stos
push
jae
xchg
xor
xchg
push
dec
std
push
jo
xchg
push
inc
fnsave
das
mov
add
push
pop
push
ret
into
dec
xor
shll
lcall
and
imul
xor
rclb
pop
dec
xor
adc
nop
lahf
clc
mov
pop
scas
push
outsb
mov
add
je
sbb
movsl
dec
pop
and
out
scas
dec
cltd
movsb
adc
rolb
xor
insl
in
out
loope
pop
cltd
js
cld
xor
xor
push
popf
lock
or
jnp
lret
adc
jne
test
pop
sbb
or
stos
roll
sbb
xor
inc
jns
pusha
outsl
cmpl
pushf
fisubl
in
mov
dec
es
push
mov
leave
cmpsb
pushf
imul
dec
jb
jns
dec
stos
xor
mov
xchg
aaa
push
into
out
dec
cmpsb
xchg
jecxz
es
cmp
push
jno
xchg
dec
pop
sbb
mov
push
mov
xor
aaa
mov
dec
out
dec
mov
inc
dec
mov
add
xor
rcrl
adc
jbe
arpl
and
inc
xor
data16
test
cmp
lock
adc
add
dec
cmp
push
psraw
scas
xchg
and
xor
ss
fcomps
sbb
jno
pop
data16
repnz
xchg
out
clc
cmp
push
xchg
mov
movsb
jae
es
es
movsb
jo
loop
or
dec
frstor
jecxz
rorl
mov
adc
lea
sahf
orl
fidivs
adc
sbb
loope
je
add
daa
mov
mov
cmpsl
push
inc
outsl
rcrl
xor
movsl
bound
inc
jl
xchg
out
in
and
jle
iret
adc
adc
push
cmp
push
xchg
int
mov
rclb
dec
stos
ret
add
sbb
inc
inc
das
ret
shl
js
lds
inc
dec
out
push
jae
or
cmpsl
aas
push
out
clc
adc
imul
ret
mov
and
shrb
test
dec
movsl
enter
std
dec
mov
push
push
pop
insl
popl
and
mov
jnp
iret
xor
xchg
sbb
pop
pop
push
mov
mov
adc
mov
push
mov
mov
mov
mov
scas
ret
push
lds
ss
inc
sub
inc
fidivl
stos
ds
sbb
ds
add
inc
pushf
in
inc
insb
test
mov
ret
loope
loop
sub
add
andb
les
dec
mov
push
movsb
fidivl
push
inc
in
jno
stc
clc
in
mov
orb
cmp
push
enter
xor
cmp
out
xor
inc
sub
loopne
pushl
or
sub
xor
adc
dec
fcoms
mov
mov
lods
sbb
push
push
cli
jns
mov
push
ret
push
dec
pusha
adc
xchg
mov
xor
mov
loopne
out
cmp
add
xlat
imull
daa
inc
adcb
inc
popa
divl
add
orb
mov
pop
aas
decl
scas
xchg
insl
fldt
or
insl
loopne
pusha
movsl
add
stc
sahf
es
jb
inc
call
int3
les
sti
inc
mov
leave
movsb
je
loop
adc
shll
out
test
dec
imul
cmp
js
mov
jle
pusha
mov
push
loope
test
das
push
adc
jl
mov
clc
mov
mov
cs
mov
popf
subb
lahf
mov
fmull
daa
push
ret
imul
movsl
mov
ja
pushl
ret
gs
push
pushf
xor
mov
inc
fs
ljmp
jecxz
mov
adc
data16
mov
or
xchg
adc
adc
int3
mov
int
movsl
xchg
scas
dec
push
jbe
adc
xor
xor
lods
dec
fcomps
mov
movd
jae
cmp
push
adc
out
cmp
adc
mov
sbb
mov
or
mov
pusha
daa
jmp
sbb
test
negb
jmp
jl
xor
shrb
iret
push
mov
dec
insb
xor
test
lret
push
je
lods
dec
rcrb
jmp
push
rorb
outsb
notl
dec
xor
pop
in
inc
loopne
add
fidivrl
imul
movl
icebp
out
and
into
ficoms
lds
je
push
or
inc
clc
or
mov
cmpsb
pushw
cmpsb
jge
and
pop
orl
pop
jb
jmp
pop
sbb
dec
out
jge
gs
cmp
wbinvd
or
push
mov
sub
sub
enter
ret
daa
loop
push
in
mov
ret
cld
lcall
sarl
mov
aaa
push
dec
lret
enter
push
add
vpcmov
aam
mov
fstl
bound
sub
shl
xor
out
jl
mov
lds
fistl
jmp
imul
mov
flds
dec
cmc
sahf
les
adc
incl
bound
test
mov
push
fwait
cli
into
mov
jne
lea
sbb
pop
mov
inc
movb
jmp
mov
pop
adc
push
movsl
fyl2x
sbb
sarb
iret
outsl
loope
xor
popf
cmpsl
sub
mov
stc
stos
inc
pop
fstpl
xor
mov
xchg
mov
cwtl
js
mov
fistl
add
dec
mov
or
orl
fwait
outsl
out
movsb
or
es
mov
cmp
xchg
xor
in
fsubp
or
mov
mov
mov
pop
jns
sti
mov
shrl
mov
std
pop
stc
shlb
scas
push
aam
dec
push
push
outsb
in
rcrl
js
mov
rcrl
or
pop
bound
stos
test
out
aad
rolb
jg
push
and
and
subl
mov
inc
fdivr
pushf
adc
into
ficoml
push
push
jecxz
test
push
out
clc
adc
xor
repz
xchg
repnz
or
lea
adc
frstor
movhlps
cmc
rolb
ja
stos
push
dec
cmp
push
fbstp
and
in
mull
jge
movsb
ret
or
xchg
sub
movsb
lret
push
mov
lds
inc
lcall
outsb
test
aad
and
sub
pop
mov
test
outsb
mov
jo
mov
mov
dec
add
xchg
jmp
sbb
inc
subl
push
xor
pop
daa
fcmovbe
cmp
cmp
cmp
sti
mov
sbb
addr16
movsb
xchg
dec
movsl
imul
mov
and
pop
dec
ja
movsl
cmp
mov
xlat
dec
xor
inc
and
popa
push
bound
call
sbb
movsl
dec
repnz
pusha
out
jmp
ret
xchg
daa
jmp
add
push
lcall
mov
add
sub
push
jge
push
mov
lcall
std
inc
lahf
adc
push
xor
ds
mov
pushf
xchg
loope
jecxz
test
insl
stos
add
outsb
jb
hlt
mov
pop
insb
add
movsl
lock
cli
xchg
cmp
leave
sbb
jl
pop
mov
pop
fbld
fs
push
xchg
bound
cmpsl
pop
popf
int3
cmpsb
jae
aad
movsb
inc
inc
jg
sbbb
xchg
out
aas
divl
xor
push
pushf
nop
xor
ret
call
aaa
addr16
add
and
fs
sbb
hlt
leave
bound
rcrb
jg
test
mov
imul
test
jns
jno
push
pop
sub
lahf
lahf
testl
jae
mov
add
stos
cli
xchg
cmc
add
pop
js
jns
xchg
adc
and
jmp
sub
jge
jae
cmpsb
cmp
test
jo
lahf
and
ret
jp
dec
dec
cmc
xor
xor
les
std
sti
shrb
push
fs
cmpsb
inc
pop
sub
sbb
jno
enter
add
inc
xor
test
and
sbb
mov
les
adc
cmp
jp
lret
lcall
mov
mov
jl
in
mov
inc
adc
insb
in
test
cmpsb
dec
cpuid
cmp
and
ja
aad
inc
out
stos
cli
dec
pop
cs
movsl
adc
jb
sbb
dec
jle
jge
fstps
jnp
mov
xchg
cmc
xchg
test
sarb
mov
xor
lret
jle
add
inc
pop
mov
mov
mov
mov
ljmp
int
inc
push
push
jecxz
inc
sti
fsts
fwait
xor
mov
movsl
xchg
sub
imul
jo
mov
sbb
mov
ret
sbb
xchg
jl
inc
xchg
xor
push
push
mov
fisubrl
filds
movsb
and
test
jb
sbb
sbb
cmpsl
inc
data16
rclb
popa
mov
xor
addr16
pop
xchg
mov
ss
addl
pop
sbb
or
lods
jg
push
pop
sahf
or
and
add
mov
xchg
mov
mov
mov
push
cwtl
inc
cmpsl
mov
int3
or
push
inc
jge
and
sub
cwtl
nop
push
cltd
in
add
in
sub
jge
sub
xor
dec
out
push
jle
push
popf
xlat
dec
mov
pushf
les
pop
push
jo
jmp
sbb
cmp
cmp
xchg
movsb
movsl
out
pop
loopne
pop
xchg
js
call
fs
mov
inc
sbb
push
mov
dec
jae
ret
fadds
popa
in
call
xorl
cwtl
test
pop
mov
push
adc
mov
pop
icebp
xchg
mov
fdecstp
xchg
and
hlt
push
adc
data16
fstl
pop
shr
push
andl
jp
push
pushf
loope
jnp
xor
add
sbb
jbe
add
mov
xor
push
mov
rolb
or
dec
bound
mov
int3
scas
mov
mov
jb
xor
lcall
cmc
jmp
es
mov
and
mov
fld
and
iret
pushw
inc
mov
xor
inc
loop
sarb
lock
jmp
fs
pop
mov
addr16
leave
cmp
mov
rclb
nop
xchg
movsl
mov
mov
mov
cmpsb
push
pop
mov
push
addr16
pop
movsb
adc
movsb
jg
inc
or
sub
mov
int
mov
popf
mov
jne
mov
jp
inc
mov
outsb
shlb
mov
dec
insb
add
xchg
mov
rcll
add
jae
dec
pusha
jl
mov
scas
mov
push
out
push
sub
add
outsb
adc
aam
pushf
or
cmc
lret
out
fdivp
adc
insb
add
xor
loope
lcall
lods
jl
cwtl
mov
cmp
dec
mov
or
inc
add
push
jne
cs
pop
mov
xchg
shrl
pop
xchg
cld
inc
test
sub
loopne
inc
cmp
out
aaa
mov
pop
in
test
dec
push
mov
imul
push
add
or
lret
or
mov
ret
bsf
and
into
enter
imul
lahf
bound
mov
out
cmp
pop
or
gs
push
jbe
sbb
xor
hlt
pop
pop
stc
jg
push
push
or
jecxz
data16
sub
cli
dec
or
cld
ss
out
lret
fs
int
jge
ret
int
lods
out
fsts
pop
adc
popf
in
mov
mov
dec
add
aaa
mov
push
cltd
test
push
cmp
jle
repnz
out
add
lret
and
test
adc
sbb
imul
xchg
sbb
and
xor
or
out
cld
std
xchg
add
shll
jne
inc
mov
push
in
mov
xchg
jmp
push
in
lds
xlat
inc
int3
iret
out
xchg
jmp
jle
inc
out
fsts
push
out
mov
fdivs
mov
jb
sub
ret
mov
push
shll
clc
shll
cmp
jb
testl
and
pop
ffree
mov
sbb
xor
or
popf
scas
mov
div
or
loopne
mov
cmp
imul
jne
mov
call
test
scas
imul
jnp
test
test
fnsave
mov
pop
jno
outsb
or
ret
daa
ljmp
hlt
gs
mov
mov
divb
nop
xor
push
jle
pop
insl
jge
sbb
aaa
jbe
pop
int3
lret
int3
outsl
pop
mov
frstor
loop
xor
sbb
push
mov
or
lock
scas
and
ljmp
xor
xor
lcall
dec
xchg
adc
push
insb
sub
jb
jne
shlb
adc
and
push
mov
inc
jmp
shlb
iret
xor
ucomiss
pop
jo
test
arpl
push
int
xorb
mov
pop
cwtl
adc
mov
jno
in
push
xchg
scas
and
push
dec
fnstenv
cwtl
rcr
pusha
cmc
xchg
inc
push
cmpsl
imul
mov
test
mov
in
out
push
dec
stos
test
pop
leave
fisttpl
int
sub
mov
pushf
dec
mov
mov
inc
and
popf
in
dec
dec
subl
xchg
add
cmp
loopne
cmc
adc
mov
fisubrs
ljmp
xchg
cmpsb
xchg
dec
xchg
incl
movsl
mov
pushf
mov
push
pop
push
xor
push
mov
xor
jecxz
ficomps
cld
lock
out
cmp
push
mov
iret
xor
ret
scas
fmulp
sub
je
xor
xchg
setnp
push
adc
add
std
outsb
orb
fnsave
add
mov
xchg
mov
insb
into
mov
dec
nop
push
mov
pop
xlat
jl
pop
cmpsb
mov
ret
ljmp
popf
ficompl
push
daa
add
push
ret
test
fmul
fsubs
dec
loop
cmp
scas
sub
icebp
mov
adc
cltd
lret
sbb
push
xchg
movsb
pop
and
out
outsl
inc
mov
ret
pusha
popa
dec
mov
or
xlat
gs
ror
mov
xor
fnstcw
fs
cltd
sub
test
xor
icebp
dec
divb
push
adc
test
loopne
inc
gs
inc
pushf
mov
es
pop
lods
jmp
xchg
sti
out
mov
aad
mov
dec
push
int3
pop
mov
outsb
xor
out
push
lret
shl
in
orl
jns
push
cmpsl
mov
insb
sub
push
jp
pop
rclb
imul
mov
xor
mov
pmullw
jns
inc
sbb
push
rorl
addb
in
iret
dec
mov
add
add
inc
rcll
mov
in
std
pop
scas
cmc
leave
mov
inc
insb
xchg
and
stos
mov
int3
jecxz
push
lods
mov
flds
leave
adc
addb
into
xchg
flds
lock
fsubs
popa
mov
add
lret
test
jge
imul
lods
jno
push
or
dec
jg
xor
mov
cwtl
push
clc
or
into
sarl
xlat
ja
dec
xor
or
push
scas
out
mov
or
dec
punpckldq
stos
add
mov
sbb
insl
aam
sub
inc
mov
cltd
push
pop
push
aaa
lret
mov
pop
mov
push
popl
clc
pushf
dec
out
fmull
je
cmp
rcrl
and
or
popa
or
or
sbb
fcompl
leave
fsubs
test
and
ja
inc
notl
mov
mov
inc
lock
test
or
jae
xchg
jnp
dec
jmp
or
push
out
add
add
pop
xchg
imul
cld
lock
push
out
add
popa
shlb
pop
lret
sbbb
jge
jnp
lods
adc
sub
test
add
aaa
add
xor
mov
pop
call
test
push
mov
xchg
cmp
adc
loopne
pop
inc
nop
push
aas
hlt
mov
jbe
jg
xchg
inc
xchg
jmp
or
ficomps
aam
stc
mov
xor
xchg
repnz
add
xlat
mov
push
pop
adc
int3
mov
outsb
and
fldcw
test
xor
jne
jmp
xchg
enter
sub
mov
or
fs
or
scas
sarl
insb
add
add
sbb
jmp
sub
out
jecxz
mov
out
mov
fidivl
mov
mov
adc
nop
inc
mov
movsb
repnz
mov
xchg
push
pop
mov
stos
mov
add
xorl
lret
jle
push
sahf
cmc
add
inc
pushf
jl
pop
and
dec
aas
jp
std
jmp
sti
xchg
mov
rcl
pop
push
int
jne
cli
popl
xchg
lods
cltd
sbbb
push
gs
gs
pop
testb
clc
mov
push
jnp
fimuls
pop
imul
aas
mov
inc
mov
cmp
ss
sarl
or
fstpl
mov
mov
cmp
fucomi
xor
pop
stc
adc
push
pop
xor
cmp
cltd
and
lea
mov
repz
mov
jns
nop
mov
mov
outsb
fstps
cmpsl
jne,pt
cmc
lock
push
mov
jge
leave
popa
pop
movsb
data16
fidivrl
push
push
xchg
decl
jb
out
push
outsl
add
lds
inc
stos
in
in
or
xchg
icebp
loop
inc
fld
mov
jge
popf
fidivl
lock
repz
int
lret
imul
add
cmp
ss
xchg
out
xlat
mov
mov
xor
repz
andl
xlat
clc
xor
test
fwait
pop
cmp
adc
xchg
xor
push
rolb
repz
fwait
insl
add
rep
daa
movsl
cmp
fs
mov
jmp
inc
imul
xchg
add
int
jno
sbb
ret
xchg
inc
std
sbb
mov
pusha
hlt
cs
pusha
xchg
add
stos
jg
jb
orl
ljmp
sbb
dec
out
mov
cmp
inc
in
sti
int3
jg
test
jmp
cwtl
stos
sbb
inc
shl
xor
adc
mov
das
addr16
mov
or
in
in
pop
mov
sbb
lods
mov
pop
cltd
inc
ficomps
xor
inc
je
cmp
mov
cli
rolb
ret
and
mov
mov
inc
mov
pop
push
mov
adc
sub
mov
mov
push
mov
adc
push
fisubrs
adc
loop
out
fmull
mov
fcmovbe
jne
and
movsl
icebp
push
cltd
push
scas
in
bnd
mov
sbbb
sbbb
sub
stc
dec
adc
inc
ss
je
jb
cli
dec
xor
sbb
or
enter
sarl
in
out
sbb
inc
arpl
popf
mov
inc
cmp
aaa
das
popa
icebp
jp
lcall
push
sbb
mov
lahf
push
dec
mov
nop
and
sub
stos
inc
pushf
mov
add
push
inc
xchg
stos
pop
dec
cmp
xor
and
xchg
test
mov
das
rcrb
out
add
clc
pop
mov
mov
ret
scas
inc
out
or
sbbl
ljmp
mov
adc
mov
int3
pop
mov
adc
push
std
mov
jne
inc
xchg
dec
inc
adc
cmp
out
es
sub
sub
jnp
add
cltd
jae
sahf
push
push
sbb
jp
sbb
jne
mov
cltd
popf
jge
xor
xchg
push
fstps
xchg
xchg
and
push
das
outsb
je
push
shll
jge
scas
lret
loopne
repz
xor
xchg
or
add
mov
in
or
push
xchg
imul
push
arpl
xor
jle
mov
cs
movsl
sub
pop
cmp
xlat
push
xchg
ja
daa
bound
adc
test
mov
push
or
jg
and
leave
pop
inc
enter
and
adc
iret
sbb
sub
push
cltd
daa
loop
movsb
cli
aad
test
sti
hlt
pusha
divl
pop
jle
test
ret
jge
cmpsb
inc
or
mov
fs
es
mov
xlat
ret
pop
test
pop
imul
dec
mov
int
popf
dec
add
mull
push
pusha
insb
jle
jb
shlb
cmp
cmp
push
and
mov
outsl
cmpsb
call
cmp
adc
and
int
outsl
dec
loope
rcrb
push
cmp
inc
and
mov
popa
add
test
fisttps
dec
sbb
js
mov
add
sbb
pop
dec
pop
jne
lds
addr16
outsl
sbb
mov
mov
aam
fstps
cmp
movsl
pop
ret
ds
xor
rolb
les
mov
inc
cmp
dec
mov
xchg
loop
roll
cmpsl
pop
inc
aad
data16
loop
mov
stos
or
inc
ds
les
leave
pop
push
pop
test
nop
ficomps
das
sbb
stc
sbb
aad
arpl
dec
pop
sahf
push
inc
out
and
sbb
repnz
das
jnp
xchg
lret
jns
ja
and
jmp
aaa
loope
inc
xor
xor
data16
sbb
adcb
sbb
cs
inc
aad
mov
pop
xchg
dec
pop
imul
sub
mov
cltd
ja
mov
mov
mov
and
jmp
repnz
cld
enter
mov
and
pop
add
mov
sub
fildll
push
and
cmp
mov
or
lods
lds
movsl
mov
fwait
testb
rolb
mov
stos
pop
filds
bswap
jnp
ja
push
movsb
lock
xchg
mov
stos
call
adc
leave
in
add
into
sahf
clc
shrb
lret
adc
xchg
sub
decl
fs
add
pop
push
mov
aaa
int
ret
mov
fbld
cmc
mov
adc
in
daa
shll
sbb
mov
push
aas
into
mov
and
xchg
xchg
rorb
andl
loope
in
push
mov
imul
and
les
enter
mov
fiadds
pop
xor
jecxz
cmp
in
adcl
rcrl
jle
aas
and
repnz
lcall
cmp
add
icebp
ror
jae
push
mov
jp
cwtl
stos
push
sti
sarl
adc
leave
mov
jle
sbb
adc
inc
lret
gs
clc
insb
in
dec
pop
roll
mov
push
jecxz
jns
lret
lcall
xchg
sbb
in
mov
lea
push
sbb
bound
ja
xor
sub
inc
pop
mov
xor
fcomps
dec
add
or
or
mov
sbb
xchg
adc
les
cmc
das
les
fucomi
and
dec
mov
and
lret
sub
pop
inc
gs
ja
data16
in
test
icebp
rcll
sbb
test
add
popa
xchg
adc
mov
mov
xor
lret
adc
in
cltd
fnstenv
push
insl
sahf
ja
xchg
dec
std
sbb
xor
aaa
lds
lock
stc
ret
pop
out
test
mov
loopne
cmp
aas
mov
nop
and
dec
cmp
and
int3
inc
cli
sbb
push
popf
sub
popf
mov
cmp
insb
lret
adc
push
add
int3
scas
dec
add
fstl
out
cmpsl
jp
xchg
lods
enter
inc
dec
pushf
add
adc
sbb
jmp
mov
sar
jne
aaa
int
adc
ret
xchg
push
sbb
lret
jb
mov
xchg
mov
jg
sbb
adcb
loopne
nop
and
scas
sub
sub
daa
mov
movsb
les
mulb
cmpps
popf
cmc
lret
and
push
push
roll
jae
out
movsl
pop
push
adc
xorl
push
pop
jmp
fucomi
mov
fisubl
mov
lds
ret
dec
sarb
cmp
pop
outsb
roll
sub
addr16
jbe
cmp
cwtl
data16
insb
test
pop
dec
in
lcall
xlat
js
in
add
fnsave
nop
pop
ljmp
test
dec
dec
mov
sbb
out
out
mov
pop
pop
fidivl
cltd
frstor
clc
inc
and
xor
mov
mov
int3
mov
shll
pop
cmc
addr16
dec
ss
cltd
and
loopne
mov
push
lret
int
scas
ret
test
imul
and
xor
dec
inc
mov
ds
mov
mov
mov
pusha
repnz
adc
es
fdiv
adc
scas
inc
cmp
int3
jg
adc
roll
cltd
loop
fucomip
sub
or
xor
cmp
or
lods
sarb
gs
sub
imul
or
cmp
movsl
out
dec
mov
ret
mov
leave
imul
sub
cmpsl
and
shl
or
lods
repz
sti
nop
push
adc
les
push
jo
lds
out
xchg
push
or
inc
jns
mov
lcall
pop
mov
popf
mov
int3
out
insb
sbb
xchg
mov
jbe
push
rcr
adc
lea
mov
lcall
decb
loope
or
sub
mov
lcall
push
lods
add
xchg
and
mov
rorl
or
cltd
xor
push
mov
rclb
lock
inc
dec
add
cld
into
mov
sub
sub
sbb
push
sub
lret
lahf
cltd
imul
insl
bound
in
sub
leave
dec
or
int3
test
stos
imul
jno
and
adc
xor
add
mov
push
mov
push
cmp
out
daa
adc
subl
mov
xor
mov
pop
jne
cmp
aas
cli
stos
xorb
rcrl
pop
and
test
xchg
xchg
inc
fsubr
xor
cmp
mov
sahf
das
daa
xlat
outsb
cltd
pop
or
pop
test
add
add
cmpsl
and
jl
andb
popf
lock
pop
add
push
std
mov
xor
fidivrl
test
clc
cmp
rorl
mov
or
das
insl
ja
mov
cmp
test
leave
add
inc
into
sahf
sub
push
mov
mov
data16
inc
adc
jo
outsb
dec
or
inc
push
popf
je
jg
notl
or
scas
mov
xlat
mov
mov
aas
mov
inc
sbb
sarl
adc
xor
in
fistpl
cld
ds
std
sbb
inc
test
mov
sub
repz
out
add
out
insb
mov
clc
aaa
push
stos
jecxz
add
or
jmp
fisttps
inc
loop
lods
rcll
ljmp
fists
mov
push
xor
xchg
out
test
mov
lret
xchg
nop
jae
and
cmp
and
and
aam
sbb
mov
xchg
push
loop,pn
movsl
sub
pop
cmpsb
add
mov
ja
and
mov
leave
cmp
mov
sub
add
daa
cmp
xchg
sahf
lret
mov
aas
or
jb
js
ret
push
mov
mov
mov
test
bound
jbe
aam
jbe
enter
faddl
daa
pop
push
xor
sub
hlt
adcb
add
addl
add
repnz
out
imul
lea
movsb
jmp
fidivrl
mov
pop
imul
shl
and
ja
inc
int
xchg
enter
inc
inc
ret
jne
jne
dec
push
call
aad
fbstp
scas
outsb
sbb
stc
adc
lods
test
jnp
call
xor
pop
cmpl
leave
xlat
mov
sbb
jg
jno
lds
mov
insl
nop
sub
pop
scas
jnp
mov
adc
mov
xor
pop
repnz
fstl
xchg
jp
cmp
add
mov
xrelease
jp
aad
int3
xor
pop
inc
fmuls
and
ja
xor
scas
aas
scas
call
add
lods
adcl
ss
jb
aas
mov
and
mov
adc
ror
rcl
push
popl
adc
xchg
andb
sub
jmp
jae
dec
mov
dec
sub
mov
insl
hlt
push
stc
daa
test
pop
sub
pop
mov
enter
pop
sub
add
and
cmp
call
gs
gs
jecxz
sub
mov
cmpsl
leave
popa
mov
dec
fdivrl
cmp
stos
int3
cmpsl
jo
jbe
sub
mov
dec
sbb
sarb
jmp
shrl
xor
jmp
and
cmpsl
mov
or
imul
mov
in
lcall
cltd
pop
leave
outsl
repz
rcl
jl
stc
adc
and
inc
jno
xchg
cs
sarb
sbb
lock
mov
inc
mov
fwait
push
sar
and
lahf
arpl
pop
das
in
es
cmp
loop
jno
popf
stos
imul
mov
cli
shrl
nop
and
pop
jg
popf
inc
out
adc
push
cltd
pop
xor
mov
stos
jnp
xchg
je
sub
aas
adc
subl
repz
lods
xlat
aad
adc
jns
jmp
mov
mov
and
and
lods
mov
pop
pop
cmc
xchg
out
xor
shll
inc
mov
test
inc
ret
push
pop
xor
push
xor
add
out
dec
ds
loopne
stc
jp
lock
decb
xorb
cmp
add
cmc
pop
test
cltd
insb
or
jnp
ret
mov
loopne
mov
adc
mov
sbbl
add
jge
les
xchg
mov
push
adc
outsl
aaa
mov
mov
mov
mov
cmp
daa
jnp
inc
out
xchg
sbb
adc
loopne
pop
jne
mov
add
test
pop
pop
rclb
mov
add
sub
cmc
sarl
out
cld
insl
fwait
pop
pop
outsb
ljmp
adc
out
sbb
push
or
and
test
inc
pop
into
cmpsl
jnp
into
popf
mov
jmp
xor
es
pop
cmp
inc
outsl
jb
cmp
mov
popa
orb
and
pusha
push
mov
push
in
jnp
mov
stos
icebp
lcall
pop
ljmp
call
enter
les
push
mov
cmp
xor
dec
aaa
push
enter
jb
sub
arpl
mov
add
dec
hlt
push
addl
pop
out
jecxz
xlat
pop
xchg
push
mov
jg
inc
inc
sub
xchg
mov
xchg
outsb
add
stos
jmp
cmp
lods
es
xor
insb
jle
imul
fs
arpl
mov
clc
mov
in
xchg
outsb
add
ljmp
cmp
lea
push
insb
cmp
imul
push
bound
push
mov
mov
push
lds
dec
or
outsl
out
mov
fiaddl
insb
hlt
push
cwtl
and
ss
leave
insl
jge
test
inc
and
inc
int3
fidivs
inc
or
popa
pop
jo
adc
mov
dec
cmpsl
xrelease
lahf
mov
scas
hlt
mov
loopne
lds
mov
pop
push
repz
mov
out
adc
int3
dec
call
into
insw
hlt
fdivl
mov
imul
sarb
mov
adc
test
test
sub
adc
push
fcompl
pop
je
ss
sbb
imul
daa
fwait
and
adc
push
or
mov
sarl
sarl
popa
out
adc
je
xchg
sub
push
pop
xor
or
ss
aam
cmp
or
sqrtps
jg
dec
jb
push
push
cmp
lea
std
cs
es
and
pop
out
push
cmp
loop
pushf
imul
lock
movsb
sub
ja
cmpsl
in
mov
cmp
imul
in
popf
lret
mov
and
cmc
nop
sbb
int
nop
mov
mov
les
cli
or
mov
xlat
push
mov
icebp
or
cs
pop
fdiv
mov
fisubrl
xchg
push
loopne
jne
inc
aad
rorb
imul
push
cmp
xchg
test
lret
loop
stc
adc
mov
adc
ja
stc
lds
pop
negl
mov
xor
lcall
dec
mov
cmp
jb
dec
in
and
push
out
push
in
cmp
mov
mov
sbb
sbb
dec
mov
pop
push
pushf
or
mov
insl
cs
out
push
sbb
sub
mov
addr16
mov
and
mov
or
dec
sub
mov
pop
dec
xchg
scas
in
push
push
xor
out
addr16
cld
dec
or
or
mov
xchg
sbb
pop
clc
mov
outsl
mov
je
sub
lods
xor
mov
jns
jo
pop
adc
mov
popf
and
in
aas
jg
push
stos
mov
mov
ja
jno
xor
xor
push
or
sub
repnz
mov
test
repnz
cmpsl
nop
gs
js
lea
mov
addl
addb
lods
je
sahf
xor
inc
into
jno
add
lcall
jnp
out
xchg
inc
fcmovbe
jp
incb
out
popa
gs
adc
cmp
cmp
xchg
and
cmpsb
in
cmpsl
dec
fstpl
xchg
pusha
cmp
mov
div
jge
sbb
mov
enter
sbb
ret
pop
test
jne
dec
pop
add
push
jle
mov
dec
dec
cmp
andl
test
mov
sub
sbb
fstps
or
and
adc
sbb
mov
mov
jmp
bound
xor
push
stc
clc
imul
out
imul
iret
mov
push
movsl
xchg
inc
or
ret
add
cmp
lahf
in
scas
mov
cmc
imull
pop
mov
cwtl
adc
nop
push
scas
sbb
andb
xchg
xchg
std
call
cltd
sub
je
rcrl
repnz
and
xchg
lret
jbe
inc
sbb
fwait
orb
add
fs
mov
loop
lods
in
jo
int
in
ficompl
sbb
cmp
stos
in
hlt
fisubl
xor
out
je
loopne
call
or
lods
daa
inc
add
sbb
mov
push
xor
fldl
into
in
push
jae
ficoms
loope
cltd
stc
arpl
inc
xchg
xor
popa
addr16
clc
and
jl
pop
loope
pop
push
in
mov
movsl
fisubrl
fisttps
stos
pop
jmp
pop
mov
shlb
dec
push
ljmp
ljmp
sarb
out
inc
push
jbe
and
inc
fistl
mov
scas
xchg
in
jno
mov
sar
xchg
and
into
in
psllq
adc
fnstenv
aam
jmp
xchg
adc
sbb
push
inc
shrb
jmp
jmp
dec
pop
test
or
cmpsl
cmp
mov
out
xchg
pop
jecxz
incl
or
loope
gs
lret
aad
add
xchg
cwtl
and
movsb
cmpsb
cmp
lcall
leave
sub
das
dec
div
dec
bound
fsub
push
or
decb
sbbl
fwait
xchg
xor
mov
inc
cmp
out
jecxz
mov
insl
add
jg
inc
push
add
shlb
nop
dec
pop
loope
cmpsb
sub
lret
in
sbb
push
outsl
lock
mov
repnz
sbb
lcall
push
mov
mov
cwtl
and
test
push
cmp
xchg
test
or
pop
sbb
or
cmp
adc
andl
mov
and
pop
movsb
ret
or
xchg
sbb
cmp
mov
jle
daa
mov
mov
in
adc
clc
adc
sbb
mov
data16
push
in
es
aam
sbb
fdivrs
dec
sahf
pop
xorl
xor
out
lds
cmp
outsl
mov
fnstcw
or
push
sub
cmp
xlat
fisubrl
or
xor
popf
call
mov
jo
inc
test
dec
subb
stos
cli
adc
or
push
arpl
push
mov
cwtl
mov
jns
cmp
or
ret
adc
jmp
repz
leave
xchg
lods
or
and
repnz
lcall
in
xor
jl
idivb
data16
sub
nop
dec
and
mov
testb
sub
shll
mov
mov
add
scas
loope
and
outsl
pop
psrlw
sub
cmp
mov
mov
mov
or
cli
xor
roll
sub
loope
jnp
in
cmp
sti
xchg
dec
inc
dec
cmp
xchg
cmp
es
pop
inc
enter
mov
jp
xor
clc
test
movsb
dec
pop
mov
dec
imul
insb
mov
xor
xchg
out
dec
std
inc
push
xor
ss
sbb
sbbl
out
hlt
xchg
xchg
ret
mov
or
pop
jnp
pushl
movsl
cwtl
push
sbb
mov
xor
cs
mov
cltd
adc
cmp
inc
jbe
dec
lods
popa
xlat
test
ret
dec
inc
arpl
cltd
mov
push
and
cmpb
push
cli
out
lock
and
stos
sti
stos
xchg
sub
das
add
out
ret
adc
fsubl
call
fnstenv
cli
jecxz
leave
mov
xlat
push
mov
mov
cmp
mov
sbb
pop
mov
jne
insw
xchg
sbb
xchg
jle
inc
in
js
push
sbb
cmpsb
and
aam
jle
data16
mov
outsb
enter
iret
add
add
lahf
or
mov
das
cli
jbe
lock
cltd
icebp
mov
out
mov
stc
jp
adc
push
mov
sbb
xchg
insl
aaa
sbb
orl
das
lcall
lret
cmp
rclb
rol
mov
in
loope
daa
or
inc
push
pop
cwtl
aam
out
je
push
xor
xchg
sub
test
in
stos
xor
push
sahf
mov
xor
xor
repz
aas
popw
mov
xchg
mov
repnz
cmp
insl
inc
adc
push
mov
adc
es
push
bound
xchg
ljmp
rep
inc
je
jmp
cld
test
sub
pop
icebp
je
and
js
cmc
int3
in
int3
les
jl
push
or
pushf
loopne
rcl
test
cld
mov
ret
adc
ds
roll
and
fisttpl
rcl
inc
adc
test
inc
mov
adc
scas
dec
in
rorl
icebp
mov
loop
arpl
addr16
mov
and
std
ljmp
jg
push
hlt
jns
sahf
lahf
inc
xor
sub
push
jl
cmp
dec
rorb
dec
mov
push
repnz
outsl
inc
adc
clc
xor
popa
and
pushf
and
inc
xchg
cs
sub
outsb
pop
jae
aas
arpl
dec
aad
movsl
aas
fcompl
xor
aaa
outsb
shl
testb
inc
and
add
or
add
pop
out
or
fst
mov
xorl
cmp
mov
adc
cwtl
xor
data16
push
mov
es
and
jns
dec
negb
jnp
in
mov
cmpsb
inc
sahf
rcl
in
mov
pop
neg
scas
cmpsb
jge
adc
or
cltd
and
fnstenv
push
inc
jns
out
pop
test
bound
sub
rclb
hlt
ret
fisubrl
add
mov
insl
scas
push
enter
int
aad
and
test
rcrb
cmp
mov
es
enter
adc
popf
lods
stc
aad
outsb
aam
pop
add
lods
or
sub
scas
mov
adc
jmp
jp
dec
jmp
dec
add
pusha
add
outsl
inc
xchg
xor
and
mov
rcl
cmpsl
ret
mov
cmp
popf
push
cli
push
xor
mov
imul
fldt
mov
insl
cmp
out
hlt
mov
sbb
les
das
mov
loope
adc
es
mov
pusha
mov
mov
or
mov
adc
dec
dec
push
dec
jae
nop
scas
loopne
xchg
les
std
mov
cmp
mov
cmp
fdivs
inc
jo
mov
push
es
popa
pop
lods
sbb
insl
add
ret
mov
xchg
push
jl
daa
stos
dec
jb
outsl
cwtl
jmp
test
xor
add
and
gs
insb
sub
shrb
out
xchg
sahf
test
push
lret
fmull
hlt
jecxz
stos
in
shl
mov
inc
cld
es
adc
fisubl
jp
cmpsl
stos
shlb
les
mov
lret
shrl
add
test
ret
jmp
lds
aaa
mov
jb
xlat
sub
int3
stos
subb
xor
xchg
sbb
call
add
mov
inc
or
movsb
or
cmp
jmp
mov
fsubr
orl
imul
jmp
push
cmp
xchg
push
insb
sub
mov
adc
in
push
add
pop
mov
add
mov
sub
or
xor
sub
movsb
push
leave
pusha
dec
shr
cmp
jg
insb
pop
cmp
popf
xor
xchg
sti
or
ret
mov
and
call
pop
sub
scas
sub
jae
sbb
popf
mov
lcall
or
xchg
test
jo
aaa
sbbb
push
sub
push
das
stc
shr
xorb
rcl
sbb
and
ja
xchg
test
inc
inc
hlt
into
xor
push
test
movsb
and
push
iret
adc
pop
and
aas
push
addb
loope
and
daa
pushf
cli
or
push
mov
xlat
jecxz
xchg
out
inc
cmpsl
in
in
adc
or
pop
out
mov
stos
pop
cmp
add
mov
push
daa
test
mov
and
dec
mov
push
mov
xchg
jne
test
pop
cltd
mov
leave
xor
mov
adc
cmpsl
in
test
xor
add
or
jecxz
and
mov
xchg
data16
push
dec
or
mov
bound
and
jecxz
lret
test
sbb
inc
movsl
shl
cmp
adc
inc
push
outsb
lea
xchg
cmp
popf
push
fsubrs
scas
lods
ljmp
or
call
pop
pop
cs
ds
xchg
aaa
lret
xlat
outsl
pop
push
aad
test
test
push
sub
xchg
test
rcrl
je
bound
int
pop
mov
aas
notb
push
fwait
mov
xchg
cmp
js
mov
in
or
loop
jmp
sub
sbb
in
jo
repnz
outsb
mov
int3
push
or
push
or
sarl
sub
pop
xchg
jne
cmp
push
repnz
call
mov
jo
fiaddl
sbb
add
mov
cmc
pushf
pop
test
shrl
push
inc
cmpsl
gs
inc
addl
pop
shrl
xlat
sub
jge
cmp
jae
fmuls
cltd
and
insb
xchg
pop
mov
xchg
insl
push
cmp
jno
stos
arpl
sub
sbb
pop
add
jl
outsl
ret
fld1
mov
unpcklps
jo
cmp
xorb
pusha
inc
fidivs
lods
data16
frstor
add
fwait
dec
xchg
pop
popf
ja
loop
jne
and
inc
inc
mov
push
mov
inc
mov
mov
mov
dec
pop
cmovge
lahf
dec
sahf
mov
sub
movsb
stos
jbe
cli
test
push
fisubl
xchg
imull
cmp
aas
addr16
cmp
imul
mov
push
inc
inc
sarl
lret
xlat
mov
dec
test
cs
icebp
mov
psadbw
and
icebp
lods
mov
rorl
xchg
xchg
cld
jns
loope
lcall
push
or
stos
inc
pop
dec
mov
bound
adc
arpl
outsl
fscale
mov
sbb
jecxz
add
std
insl
xor
mov
insl
shll
aad
int3
popl
mov
in
or
jnp
testb
jg
adc
mov
cmp
sub
outsl
inc
popa
xor
in
xor
negw
push
mov
xchg
adc
add
incb
mov
xor
std
int
scas
inc
push
push
in
mov
shrb
and
nop
dec
push
ds
test
xor
mov
mov
cmp
test
outsb
loope
cmp
jbe
sarb
sub
xchg
jge
pushf
inc
shl
ds
pop
adc
or
lds
pop
push
adc
or
or
cmp
jge
mov
pop
popf
sub
cmp
xor
stos
inc
inc
rcll
cmp
mov
jnp
outsb
pop
add
mov
mov
sub
jecxz
mov
loopne
pusha
pop
icebp
inc
sub
enter
or
dec
add
insl
dec
ds
and
cmp
daa
mov
imul
into
xchg
push
sbb
xor
nop
xchg
or
cmp
lcall
adc
ss
aam
mov
dec
bound
xchg
sub
je
js
test
mov
loop
push
in
xor
jae
into
movsl
nop
pop
jg
dec
pop
jb
test
into
dec
mov
jge
mov
and
daa
data16
ljmp
negb
pop
iret
jmpw
rcrb
sbb
xchg
outsl
pmulhw
jno
sbb
sar
mov
and
jge
sbbl
inc
jae
ss
add
ret
std
pop
outsb
mov
xchg
add
popf
inc
test
sbb
mov
loope
stos
jmp
adc
mov
enter
les
aam
and
inc
hlt
arpl
add
jbe
jle
pop
stos
hlt
mov
jge
adc
pusha
je
xchg
lock
inc
pop
aaa
fdivl
outsb
jmp
or
cli
xchg
in
xor
test
cmc
mov
movsb
mov
mov
divl
dec
loopne
push
adc
mov
mov
mov
fidivrs
pop
mov
aad
jnp
cmp
mov
dec
xlat
adc
pop
mov
xor
inc
push
mov
jns
std
push
loop
or
cwtl
das
rep
callw
mov
divb
add
add
adc
push
bound
pushf
ret
pop
repz
mov
mov
xor
fwait
or
push
mov
or
scas
loop
mov
mov
mov
sbb
cmpsl
inc
or
insl
adc
stos
cmpsl
and
adc
xor
mov
fwait
rcrl
push
adc
stc
aas
bound
pop
test
pop
scas
jecxz
loop
sub
shl
stos
dec
dec
mov
scas
and
shrl
scas
mov
sbb
icebp
xchg
inc
mov
and
out
fwait
and
and
push
sbb
outsb
imul
pushf
les
add
lret
das
mov
mov
shrl
icebp
mov
inc
sti
add
cmpsb
hlt
mov
loopne
cltd
inc
cmp
jbe
adc
lahf
bound
mov
mov
int3
mov
pop
xchg
jmp
cmp
xchg
cmpsb
sub
lret
xchg
addl
std
cmp
pop
adcl
mov
add
test
sub
ja
cltd
test
adc
cmpsl
insb
pop
or
mov
outsb
test
dec
cmc
cmp
sti
adc
cmp
out
pop
jl
scas
mov
mov
sahf
push
out
iret
insl
push
testb
xchg
imul
lahf
add
cmp
out
pushl
or
in
cltd
sub
mov
in
push
inc
ljmp
xor
scas
cmovg
test
stos
cmpl
data16
repz
cmpsb
push
adc
popa
lret
ja
loopne
or
xchg
sub
pop
dec
into
pop
mov
xchg
mov
les
fs
pop
jge
daa
stos
mov
push
push
imul
in
pop
dec
rcrb
daa
sub
movsl
lock
dec
jnp
sbb
mov
xor
popl
push
adc
loopne,pn
xlat
inc
jecxz
sub
bound
jno
push
mov
xchg
cs
pop
mov
enter
lahf
lea
in
ret
fucomip
sub
mov
jg
and
mov
rcrl
outsb
push
leave
fdivrs
arpl
and
cmpsl
sbb
pusha
test
icebp
push
inc
and
outsl
mov
faddp
mov
pushf
scas
push
je
sbb
cli
out
sub
lahf
test
mov
fwait
je
xchg
icebp
insb
pop
fisubrl
mov
pusha
inc
add
dec
dec
sbb
mov
test
imul
add
and
hlt
or
cmp
in
nop
xchg
mov
push
jmp
inc
aaa
ret
fldcw
mov
inc
cmp
pushf
sub
mov
xlat
jmp
stc
push
inc
pop
inc
adc
movsl
push
pop
push
cmc
dec
mov
in
jge
xchg
or
sbb
mov
imul
cmc
sti
jae
push
lods
add
mov
data16
shlb
movsl
inc
fistl
leave
or
pop
push
or
bnd
in
push
xchg
scas
xor
addr16
cwtl
std
in
cmp
push
mov
lods
mov
dec
and
xchg
lods
mov
fistpl
fisubrs
push
mov
inc
imul
mov
shl
enter
jle
add
sbb
jae
shll
repz
repnz
leave
push
pop
repz
and
dec
imul
adc
xchg
pop
mov
test
data16
mov
outsl
mov
pop
mov
mov
dec
leave
sbb
es
shlb
stos
mov
pushf
sub
out
inc
add
mov
test
xchg
out
shrl
ljmp
pop
xchg
pop
pop
mov
dec
popf
mov
xor
push
push
adc
push
jmp
pop
xchg
jmp
imul
mov
mov
or
push
xchg
mov
cwtl
or
movsl
adc
xlat
notb
sti
sub
push
sti
xor
sarb
sbb
jns
cltd
jbe
lcall
xchg
jo
imul
fistpll
xchg
mov
and
roll
out
mov
dec
popa
add
and
cmpsb
insb
in
test
sub
aam
add
shl
dec
dec
mov
fadd
popa
loope
aas
push
es
test
popf
sahf
out
add
xchg
in
add
sub
xchg
out
mov
mov
lock
inc
push
jae
sbb
jge
notb
adc
inc
rcll
divb
shll
mov
pop
xor
inc
cmpsl
arpl
cmp
and
jno
or
cmp
jns
or
in
push
insl
mov
mov
jne
popa
clc
out
aaa
pop
gs
push
cltd
fmull
xchg
pop
xor
jb
or
mov
popf
ret
pop
shld
idivl
dec
sub
push
dec
inc
std
xchg
fnstcw
adc
movsl
ret
outsl
xor
shr
and
mov
pusha
smsw
jo
dec
and
sbb
ds
add
out
or
cs
sub
xorl
nop
imul
xchg
scas
fdivl
mov
cli
xchg
jle
shrl
and
adc
jg
jo
out
mov
loop
or
out
imul
shlb
pop
ret
mov
push
das
inc
mov
les
in
test
sub
cmpsb
lock
sbb
mov
mov
movsl
testl
int
imul
divb
mov
addl
int3
dec
push
jb
in
jae
ljmp
mov
jmp
cmp
clc
push
xor
jae
and
clc
xchg
or
dec
and
push
test
stos
jbe
mov
inc
add
call
in
cmp
mov
fstpt
jmp
gs
rcl
pusha
jno
mov
inc
mov
pop
xchg
and
or
divb
out
push
inc
sarb
xchg
xchg
cmc
jno
icebp
sub
cmp
lret
inc
lock
push
out
mov
mov
mov
in
aad
jge
iret
dec
mov
leave
int
push
pop
out
push
les
lret
call
or
dec
sahf
dec
cmp
cmpl
jp
lds
push
adc
jl
jne
lods
jecxz
sub
lock
mov
jg
cld
and
jge
shrb
xor
sbb
inc
push
xchg
jae
loopne
sbb
dec
mov
lods
loop
mov
jb
lds
dec
cmp
lock
push
fdivrs
and
mov
add
pusha
and
sbb
mov
push
fdivrs
mov
ret
mov
les
cli
and
xchg
addr16
in
dec
or
mov
popf
sbb
add
xor
std
push
push
pop
imul
popf
and
mov
aas
lock
lock
fstl
les
xchg
sbb
movsb
push
adc
mov
shlb
lock
push
add
push
mov
mov
xchg
scas
les
lock
sahf
test
mov
mov
xor
mov
xorb
jne
and
adc
or
mov
cmp
cmpsb
mov
inc
repnz
mov
pushf
adc
cmp
in
jmp
inc
mov
pop
lret
ss
nop
push
popf
jmp
pop
call
xor
sub
rcrb
fsubrs
or
sub
mov
aaa
push
mov
and
dec
icebp
pop
mov
mov
lds
jecxz
das
scas
dec
hlt
mov
and
loope
cmp
pop
addr16
add
hlt
rcrb
mov
xchg
mov
aaa
jl
push
jmp
dec
adc
jle
mov
add
aad
lahf
pop
out
xchg
dec
jecxz
les
mov
mov
inc
fsub
test
mov
or
mov
sub
jno
inc
ficompl
xchg
fcoms
sub
pop
push
pushf
lods
icebp
in
jp
inc
inc
or
dec
jecxz
xchg
out
lahf
jns
dec
stos
sarb
xchg
call
jecxz
in
jmp
mov
repnz
rdmsr
push
cmp
mov
jl
dec
mov
dec
xchg
add
imulb
cmp
testb
mov
mov
inc
jnp
clc
xor
and
lret
xor
lahf
jb
dec
cmp
gs
jecxz
adc
cmpsb
addr16
mov
jb
mov
add
pop
lea
int
add
mov
jmp
jno
sbb
mov
jle
mov
jl
in
pushf
repz
daa
lock
and
int3
mov
loopne
cmpb
lods
es
out
inc
jo
xor
mov
leave
dec
pop
int3
xchg
fstpl
mov
or
lods
mov
das
jne
xchg
adc
adc
and
shr
xchg
test
test
lock
xor
push
lds
fdivrs
push
in
pop
lock
ficomps
out
sahf
dec
arpl
xchg
cmp
jge
jmp
int
pusha
out
push
scas
dec
adc
mov
dec
fs
outsb
test
jae
adc
icebp
sbb
repnz
cmp
sub
pop
gs
scas
xchg
or
inc
xchg
fistpll
les
or
pop
lret
push
les
sbb
popa
dec
inc
outsl
adcl
sub
subl
and
mov
fwait
jne
or
cmp
int3
icebp
lret
inc
jo
dec
adc
add
lock
xor
adcb
push
mov
jno
pusha
pop
hlt
div
add
sbb
icebp
stos
push
shll
fnstcw
dec
fsubrs
repnz
out
int
jmp
push
in
push
mov
push
mov
out
dec
shrl
pusha
add
dec
popf
stc
out
adc
adc
xchg
push
out
sbb
outsb
push
adc
stc
and
loop
ficompl
cmpsb
lods
jmp
dec
stc
data16
cs
insl
addb
mov
out
push
cmc
mov
pusha
stc
inc
dec
std
cmp
pusha
mov
sbb
in
xor
in
pop
aas
cld
jnp
cs
nop
adc
in
sbb
jp
cmpsb
and
in
imul
sub
and
xchg
jl
stos
vpcmpgtb
out
xchg
es
aas
pop
das
jle
xlat
add
scas
hlt
clc
mov
xor
add
imul
inc
inc
and
push
cmp
fisttpll
icebp
inc
dec
shll
imul
mov
adc
mov
repz
iret
fmuls
mov
inc
loope
jecxz
seto
mov
pop
enter
and
pop
adc
rorb
data16
mov
sti
cmp
jl
int3
add
adc
enter
out
ret
pop
adc
sub
hlt
xor
mov
sub
pop
or
int3
mov
and
in
jge
loope
add
sbb
xor
push
pop
cmpsl
push
hlt
sub
push
dec
lds
sub
and
push
lock
and
enter
pop
outsb
mov
int
aaa
sti
mov
mov
mov
cs
xchg
inc
aas
dec
ret
popa
jns
leave
inc
push
sti
sbb
je
pop
test
lock
scas
loopne
pushf
testl
enter
fmuls
jg
repz
leave
data16
xchg
xor
dec
data16
popa
dec
sub
xchg
lds
jp
mov
xor
xor
decl
test
pop
outsl
xor
jp
adc
mov
shlb
jo
fcmovb
leave
fcoms
in
mov
xor
movzwl
das
push
adc
or
push
test
out
push
jae
mov
xor
shll
mov
and
hlt
add
shll
push
jno
into
pop
cmpsb
add
fcoml
mov
test
xor
lcall
ja
enter
dec
outsb
push
cmpsl
adc
mov
xchg
cmp
sbb
rcr
dec
xchg
mov
xchg
mov
mov
pop
scas
les
jle
cmpl
stc
mov
adc
mov
test
jnp
jae
mov
cmp
inc
xor
mov
pop
mov
imul
sbb
push
movsb
fistpll
pop
ja
xor
ret
lcall
dec
aaa
jns
or
mov
jg
add
cld
andb
loopne
aam
sbb
xchg
push
int
mov
xchg
addr16
pop
cmp
lea
cmp
clc
or
lods
jge
cs
rclb
repz
mov
outsb
sti
dec
shrb
pop
jb
jmp
dec
and
pop
inc
icebp
mov
xor
push
xchg
and
jae
cmp
mov
cld
xor
ja
sti
es
cmpsb
inc
sbb
dec
pop
sbb
inc
push
mov
insb
xor
les
adc
imul
je
jbe
ja
imul
add
jmp
cmp
mov
mov
or
jno
scas
cmp
mov
sub
daa
add
pop
xor
scas
fisubrs
das
mov
fs
and
inc
stos
mov
cmpsl
imul
and
dec
dec
loopne
pushf
inc
fmul
pop
loop
addr16
dec
dec
test
mov
adc
cmpsb
mov
scas
inc
mov
jno
movsb
es
cli
mov
push
test
mov
in
mov
and
or
aam
movsl
test
cs
jnp
cmp
push
mov
mov
mov
jecxz
and
push
movsl
test
stos
mov
cmpsl
dec
cmp
dec
movsl
lds
bndstx
xchg
sub
js
mov
mov
test
sbb
cli
sbb
mov
repnz
mov
push
dec
sbb
dec
je
movsl
cmp
xchg
xchg
nop
sbbl
popa
dec
pop
mov
mov
out
sub
addb
mov
jns
rcrb
divl
push
shl
sbb
daa
mov
ljmp
add
xor
jb
test
push
test
push
frstors
movsl
stos
adc
inc
sti
imul
add
mov
movsl
add
xor
popa
fs
pop
add
dec
pop
and
mov
jnp
clc
jl
and
out
int3
or
xchg
mov
sub
inc
pop
xchg
pop
jl
adc
cmpsb
inc
push
or
out
inc
popa
cld
loopne
xchg
stc
lods
pop
out
dec
loopne
xor
movsb
in
cltd
fimull
mov
pop
jp
mov
les
cmc
mov
and
mov
or
ss
or
add
sub
and
test
bound
stos
in
push
scas
dec
jmp
sbb
jo
arpl
cwtl
dec
and
imul
clc
adc
out
fsubrl
jle
xchg
les
inc
dec
xor
fsubs
pop
push
sarb
test
pushf
pop
lods
xor
push
mov
in
cmp
mov
cmp
sbb
pop
sahf
sbb
sbb
cmp
out
xor
in
push
pushf
xor
lahf
lea
inc
xchg
push
mov
sbb
sahf
xor
mov
gs
mov
mov
push
clc
xchg
decl
fsts
xor
add
ret
rclb
enter
sub
push
insb
aaa
cltd
dec
jbe
pop
xor
mov
lods
addr16
sahf
lret
bound
ja
add
das
enter
call
int
loop
add
jne
outsl
and
mov
stos
cmp
and
stos
std
push
cmpsb
les
das
mov
repnz
sbb
xchg
lret
mov
stos
jo
jb
dec
and
sahf
mov
std
lods
movsl
cli
xchg
xlat
cwtl
cmpsl
push
movsl
cmp
addl
push
mov
jmp
imul
lods
pop
cli
push
sub
cmc
jle
in
jbe
add
pusha
push
adc
xor
xchg
js
lock
stc
adc
std
lret
idiv
jns
int
loop
sub
push
mov
iret
sbb
bound
rcrb
add
add
insb
in
xchg
out
sbbb
add
in
mov
inc
movsl
cmp
or
aam
stc
mov
mov
dec
sarb
jmp
mov
gs
addr16
inc
pushf
add
pop
add
push
cld
and
nop
inc
sub
dec
insl
jp
dec
outsl
push
jg
jae
push
adc
cmpsb
sarb
outsl
ret
aam
pop
jo
lahf
notl
sub
cmp
mov
push
or
xchg
pushf
pop
jecxz
push
jge
iret
sbb
jmp
jns
addr16
mov
pop
popa
aad
mov
dec
adc
sti
xor
aad
dec
cmpl
inc
mov
pop
xlat
mov
cmp
jne
in
dec
and
mov
je
xor
sbb
or
adc
leave
jle
mov
or
es
hlt
inc
push
iret
aas
dec
movsl
mov
cmp
pop
mov
xor
xchg
xor
xor
push
or
stos
bound
dec
rclb
cli
gs
into
std
push
bnd
stos
mov
test
mov
rol
cltd
lea
push
in
push
subl
hlt
mov
cmp
pop
fwait
mov
sbbb
dec
in
clc
lret
add
stos
xor
push
pop
xchg
inc
shll
pop
mov
pusha
xor
fnstcw
add
test
dec
dec
jl
push
xchg
mov
jns
in
sbb
popf
gs
arpl
mov
cmp
sbb
sub
call
xorl
or
or
test
xchg
loope
mov
push
add
aam
push
push
cmp
sbb
int
aaa
shrb
call
fucomp
add
lret
ds
mov
dec
mov
mov
in
mov
mov
adc
xor
push
mov
inc
mov
divb
cmp
movlps
daa
repz
or
rcrl
or
imul
dec
cmp
sub
out
mov
fbstp
jne
outsb
or
daa
lods
push
cmc
inc
inc
es
scas
sub
stos
in
bound
fidivrl
or
fwait
pop
sti
pop
lds
int3
xchg
repz
repz
rorl
pop
mov
mov
int3
xor
iret
test
into
gs
lret
lock
idiv
mov
movsb
cmp
adc
mov
jmp
out
mov
mov
or
add
cld
divl
add
mov
push
inc
and
sbb
mov
xchg
jmp
or
and
data16
cmp
divl
mov
cmp
xor
pop
cli
and
ret
sbb
xchg
jns
mov
push
scas
loopne
fistpl
cmp
xor
mov
xchg
sbb
push
mov
jp
dec
lahf
insb
lahf
icebp
dec
dec
cltd
inc
std
push
in
push
aam
insb
pop
mov
sbb
ss
ret
inc
fisttpl
fisubl
fdivrs
jg
cmp
push
and
int
sti
mov
outsl
ficomps
sbbb
xor
inc
ljmp
xchg
out
add
incl
or
sbb
sub
out
fildl
push
jno
pop
outsb
loope
out
sbb
cmpsb
jge
test
pushf
repz
pop
dec
sub
addr16
sbb
xlat
dec
out
cmpsb
insl
ljmp
dec
xchg
rclb
aas
xor
outsb
dec
jle
mov
movsb
add
test
leave
enter
or
mov
test
dec
xor
pop
les
shrl
out
dec
jmp
loopne
or
sbb
pushl
xor
repnz
mov
test
aaa
ffreep
push
lret
repnz
mov
or
int
push
and
ficoms
or
fisubs
xchg
cmp
cwtl
jle
inc
mov
lock
stc
fldt
xor
lret
test
cs
loope
mov
bound
push
inc
inc
mov
sbb
mov
push
in
lahf
mov
adc
xchg
cs
sbb
cmp
mov
mov
stos
mov
arpl
mov
add
in
add
mov
aad
xor
mov
xchg
fadd
shlb
dec
hlt
out
add
xor
js
add
insl
fstps
cld
xorl
xor
clc
daa
out
popa
fistpl
addb
or
xor
pop
adc
call
clc
mov
mov
ret
mov
fdivr
sbb
test
mov
fsubl
popf
sub
mov
mov
xchg
mov
test
scas
and
jnp
mov
adc
insl
add
pop
enter
mov
adc
mov
fs
ljmp
jb
inc
push
mov
dec
push
mov
push
out
push
pushf
sub
mov
rorl
push
stos
mov
lcall
inc
cmp
mov
cs
sub
mov
outsl
jl
jl
test
bound
xor
in
push
loopne
xor
jmp
insl
pop
dec
xchg
sub
int3
in
cmc
repz
ljmp
call
pop
or
sahf
lcall
xlat
out
std
in
das
dec
adcl
jg
daa
mov
imul
dec
pop
cld
les
jo
stos
cli
inc
xlat
lret
pop
fimull
dec
sahf
mov
jo
jo
das
stc
push
xlat
xchg
lods
jno
mov
jmp
sbb
shrb
xor
movsl
lcall
lods
sub
fcomps
sbb
ret
inc
das
mov
leave
xchg
les
sub
popf
xchg
stos
sbb
rcll
inc
out
and
add
mov
sub
sbb
add
popf
sub
gs
dec
movsl
xor
ficomps
or
pop
push
add
test
inc
sti
pop
sub
mov
in
nop
sbb
jbe
test
mov
adc
add
fidivl
push
add
xchg
sbb
fwait
sbb
sbb
arpl
mov
pushf
lcall
adc
adcl
lret
loop
adc
xor
and
sbb
add
push
mov
cmc
fucomip
xor
inc
clc
jae
pop
mov
subb
lea
mov
or
dec
fstpt
push
insl
lods
push
je
jl
xlat
repnz
adc
mov
popf
addb
lret
xchg
dec
lock
je
lahf
mov
leave
mov
out
cmp
pusha
cmpsb
jns
pop
es
adc
add
out
hlt
addr16
mov
scas
fidivrs
adc
loop
push
sub
push
xor
cmpsl
dec
jne
inc
sbb
enter
call
fisubrl
in
mov
leave
pop
jl
inc
gs
or
inc
inc
inc
adc
mov
mov
xchg
pop
enter
in
sub
dec
call
test
sbb
fadd
fmuls
rcll
add
cltd
or
call
stos
add
inc
jne
cwtl
xchg
gs
ret
addl
push
fldl
pop
xor
jle
flds
pusha
in
test
stc
xchg
push
fs
std
lret
pop
push
lds
xchg
popa
jns
call
inc
data16
or
lock
cmc
push
arpl
sbb
aaa
mov
cmc
in
lcall
push
scas
xchg
popf
aad
addr16
mov
in
jl
ja
jo
sbb
jbe
dec
dec
dec
rclb
xchg
add
in
pusha
outsb
mov
lahf
std
push
add
inc
lock
fistl
aaa
out
bts
imul
xor
adc
out
mov
mov
sub
pop
push
fnsave
loopne
jle
out
insl
or
or
lea
xchg
jnp
xchg
scas
push
pushf
movsb
xchg
push
mov
mov
divps
lret
pop
adc
loop
jmp
xchg
fisubrl
mov
outsb
or
ja
or
repnz
add
lcall
loop
inc
jmp
js
xor
mov
ja
cmp
orl
andb
inc
pop
insb
add
lods
inc
mov
fnstsw
and
icebp
push
scas
fisttpll
jae
addr16
push
xlat
shrl
cmp
mov
pop
in
addr16
in
out
add
inc
mov
jno
rol
cltd
adc
stos
push
repnz
dec
mov
fiaddl
cmp
cmc
gs
das
cmp
ljmp
inc
adc
jne
push
popf
incl
pop
loope
and
ljmp
and
rolb
push
pop
loop
mov
jl,pn
out
cmp
adcb
pop
test
faddp
cltd
aaa
push
mov
mov
ljmp
mov
cmp
ljmp
mov
int
mov
xor
pushf
adc
mov
idivb
mov
dec
divl
aam
pop
jno
dec
fcmovbe
push
es
sbbl
push
push
clc
push
stos
movsb
jge
push
cmp
testl
scas
mov
fsubrp
lods
lods
cmp
lret
outsl
cld
aam
cs
mov
rorl
cmp
rep
inc
or
cmp
pop
sub
test
dec
lds
cmp
xlat
dec
sbb
shll
xchg
push
mov
xor
xchg
in
call
xor
xor
mov
xchg
push
xchg
ffreep
je
call
leave
add
rclb
movsb
xlat
push
enter
push
jne
js
sub
xlat
fbstp
push
sarl
data16
inc
xor
dec
sub
leave
int3
clc
xor
loope
add
js
fs
mov
add
add
mov
sti
cs
cmp
out
pop
ficompl
xor
dec
pop
xchg
cld
inc
fsubrs
sub
nop
pop
aas
pop
imul
pusha
cli
push
lock
nop
sub
daa
sahf
mov
xchg
mov
shlb
xor
je
dec
jnp
add
pop
std
insb
mov
mov
fwait
rcl
pushf
outsl
nop
aad
inc
in
shrb
pop
or
std
cs
jbe
into
xor
or
cmpsl
ret
push
insl
pop
adc
inc
in
cli
stos
in
daa
dec
in
cld
je
mov
jno,pt
push
sbb
xchg
andb
jge
popa
clc
pop
jnp
ret
adc
out
mov
clc
xor
mov
or
movsb
ljmp
or
adc
adc
lods
mov
ljmp
adc
pop
add
imul
cmp
imul
pop
mov
in
push
jne
cmp
adc
dec
rol
pop
stc
je
push
dec
ror
popf
jecxz
and
mov
add
out
mov
fucomip
mov
std
mov
aas
cmp
or
mov
sub
lods
pop
mov
push
nop
cmp
loop
cmp
adc
jne
adc
stos
xor
fnsave
jne
hlt
bound
je
imul
mov
mov
inc
pop
fiadds
in
or
aam
rcl
xor
mov
nop
fwait
dec
out
mov
popf
dec
stos
sbb
mov
pop
mov
testl
into
cmp
cmp
mov
ljmp
push
mov
pusha
jbe
sub
or
std
mov
xchg
mov
arpl
or
and
xchg
sub
lods
mov
jnp
push
jne
andb
dec
daa
xchg
cs
imul
lods
xor
add
jle
push
and
xchg
jno
inc
fucompp
imull
loopne
pusha
sbb
int
rcll
repz
jecxz
in
pop
lods
sbb
xchg
dec
sub
stos
int
shll
stos
repz
ficoms
xor
aas
fs
les
push
mov
loop
test
bound
jbe
mov
or
pop
cs
aam
rclb
int
cmc
movsl
cmp
lods
cmp
dec
cmp
jge
push
cld
sahf
pop
pop
ret
lcall
aad
xor
jg
sbb
mov
inc
rolb
stc
cmp
cs
hlt
nop
out
or
call
add
sub
sti
sbb
fwait
les
cmp
adcl
push
in
pop
pop
jne
dec
or
cwtl
cmp
pop
sub
xchg
fildll
cmpsb
xor
mov
fidivl
sbb
movsl
stos
imull
cmpsb
in
repnz
jae
adc
sbb
lds
cmp
icebp
jno
mov
xor
xchg
mov
adc
out
inc
fistpll
scas
xor
mov
add
mov
mov
xor
in
fnstsw
push
jl
jae
sub
pop
mov
add
jg
ja
mov
frstor
push
inc
stc
mov
dec
pop
int
ret
pop
clc
push
xlat
adc
inc
adcb
cli
xchg
jl
lods
sub
sub
inc
mov
and
push
leave
dec
add
movsl
ret
popa
pop
pop
mov
test
imul
sub
jp
loope
dec
jmp
mov
push
test
cmpsl
xchg
lods
mov
pop
fldenv
jno
hlt
adc
jae
xadd
out
cld
and
xor
jbe
fs
and
and
push
mov
call
push
setl
adc
adc
dec
loope
and
std
cmp
sub
inc
inc
negb
ds
cmc
push
int3
iret
iret
and
sbb
dec
push
sbb
icebp
push
mov
cmp
daa
test
xchg
sbb
hlt
mov
ret
mov
mov
adc
mov
mov
pop
aaa
in
pusha
stc
mov
add
mov
dec
mov
in
xchg
aaa
sub
sub
aaa
lret
jbe
or
and
xor
dec
pop
fxch
pop
lret
hlt
add
repnz
mov
add
inc
mov
scas
enter
cltd
movsl
lods
aas
add
cmp
inc
pop
inc
int
enter
and
jae
fst
cmpsl
mov
xchg
leave
push
jg
jecxz
fs
sahf
sbb
cli
lret
js
notl
jbe
mov
arpl
mov
xlat
push
cwtl
test
lret
ror
sub
jl
dec
fwait
mov
loop
mov
dec
iret
out
fwait
push
aas
or
mov
mov
cmp
cmp
mov
adc
lea
jns
in
xor
jge
cmp
and
leave
insl
add
ljmp
jnp
xchg
sahf
gs
lods
repnz
outsl
sub
or
insb
add
push
push
dec
mov
push
andb
out
pop
loopne
ret
lods
mov
cmpl
daa
and
repnz
or
mov
sbb
paddusw
push
jne
cmp
imul
fdivl
adc
sbb
pop
cli
adc
jl
arpl
xchg
ljmp
push
lea
rcrb
jo
add
test
cmp
mov
repz
sub
ret
repz
aaa
fwait
sub
jp
mov
xor
int
sbb
test
icebp
xlat
jmp
sbb
repnz
push
mov
insl
mov
leave
es
jo
xlat
rcrl
lds
scas
loop
add
mov
imul
xor
incb
cmp
push
dec
jecxz
mov
push
push
mov
cmp
icebp
je
lea
lea
dec
movsb
repnz
and
add
xchg
cmp
mov
jl
add
ss
cli
jo
adc
dec
and
testb
mov
pop
stos
xlat
int
jo
sbb
pop
ss
aad
faddl
mov
mov
insb
or
dec
nop
push
loopne
mov
pop
xchg
ss
pushf
xchg
test
dec
add
inc
in
adc
into
rclb
cmp
in
adcl
sbb
push
or
in
cmp
packssdw
or
xor
add
push
mov
pop
outsb
sti
shlb
jmp
push
dec
leave
mov
push
mov
pop
mov
jecxz
xor
jmp
inc
xor
mov
cwtl
push
out
pop
adc
fsubrs
int
or
in
test
xlat
mov
mov
mov
inc
sub
iret
stos
sbb
ds
add
fiadds
popf
in
adc
xchg
mov
xor
cmpsb
jne
out
push
in
sbb
inc
arpl
or
push
push
clc
xchg
nop
push
jecxz
mov
sarl
rol
push
jno
fwait
xorb
mov
xchg
das
imulb
mov
ret
mov
cmpb
aas
sbb
sti
xchg
cmc
cmp
dec
popa
pop
cmp
add
jb
ret
mov
pop
aad
out
jp
sarl
add
fnsave
mov
mov
aam
sub
sarb
add
dec
push
cmp
sbb
jle
push
lods
mov
mov
push
lret
sub
cli
cld
push
loope
loopne
or
add
rcll
mov
fdivs
inc
aaa
rol
cli
aas
mov
int3
push
mov
sub
and
sbb
sbb
es
sbb
pop
in
call
or
dec
mov
fbstp
hlt
lods
loop
std
xor
aas
xlat
icebp
jo
fwait
xor
jbe
or
mov
lret
xchg
cltd
xor
leave
fwait
sub
inc
rorb
js
aad
lds
add
mov
push
daa
sbbw
into
popa
jns
rcrb
test
jo
cld
test
sbb
call
dec
iret
movl
imul
cmc
popa
lea
stc
xchg
pop
cmp
sbb
daa
jl
or
sahf
push
mov
inc
insb
loop
fs
jno
insl
rcl
xchg
and
jp
sbb
sub
js
sbb
and
xchg
cmp
dec
push
fwait
dec
out
dec
lea
ret
xchg
leavew
ds
loop
push
out
jne
call
adcl
sub
ret
pop
fcmovne
addr16
sbb
mulb
pop
ja
repz
pop
mov
push
jb
pop
pop
mov
mov
mov
insb
add
xchg
mov
mov
jl
incb
adc
xchg
xor
orl
clc
dec
xlat
sbb
addr16
pop
scas
mov
add
leave
scas
xor
hlt
shlb
add
ret
sbb
movsl
inc
lcall
test
adc
mov
xor
dec
sbb
les
lret
bound
xchg
cmpsl
push
mov
adc
into
sub
scas
gs
xchg
adc
int
lea
inc
and
cmpsl
jo
jns
subl
cmp
push
icebp
push
mov
jae
sbb
xchg
mov
insl
add
fidivrs
inc
loop
cmp
out
icebp
movsl
inc
test
aas
insl
aad
pop
aad
idivl
sbb
push
jns
mov
aam
jns
lahf
mov
fucomp
or
pop
mov
fbstp
ret
cmp
lret
rcll
hlt
mov
sub
pop
jno
sub
mov
or
pop
mov
jo
insb
lret
cmp
jle
adc
xor
add
add
out
inc
sbbl
ljmp
mov
adc
fs
adc
dec
xlat
jnp
cmc
cmp
xor
jae
mov
and
add
ds
sub
jg
add
insl
mov
imul
das
mov
adc
stos
jae
in
pop
cmp
pop
xor
mov
iret
jb
lods
popa
adc
pop
clc
push
push
cwtl
repnz
sub
sbb
mov
lret
arpl
jb
lds
dec
out
adc
and
cltd
andl
fisubrs
lcall
movsl
push
mov
fcompl
pop
pop
pusha
pop
cltd
aam
mov
lss
lods
movsl
scas
leave
mov
bound
mov
out
xchg
jmp
inc
jnp
add
jb
ljmp
dec
jmp
mov
sub
iret
data16
pop
into
sub
jp
dec
dec
adc
outsl
aad
iret
shlb
data16
push
inc
push
mov
mov
add
sub
lcall
jne
scas
jo
shlb
inc
sbb
into
xchg
xor
jle
jmp
and
popf
cmp
or
fbstp
jo
cld
and
xchg
movsl
sbb
or
lahf
jge
cwtl
fs
out
pop
or
nop
sub
jne
mov
frstor
lret
sti
add
xor
or
mov
loope
jns
mov
notl
repz
jns
xlat
or
mov
aad
pop
cmc
sbb
jns
xchg
mov
push
ss
out
and
dec
pushf
mov
jg
xchg
mov
insb
gs
enter
popa
cld
mov
push
pop
mov
xchg
pop
pop
sbb
lock
out
rorl
mov
repnz
jmp
sbb
jbe
cltd
push
popa
xchg
nop
pusha
mov
arpl
xor
daa
xorl
ret
inc
das
jno
and
das
repnz
addl
outsb
push
das
hlt
pushf
pusha
push
dec
adc
lods
sub
jp
mov
mov
rorb
pusha
ds
shlb
fstl
and
sub
clc
push
adcb
lods
adc
pusha
mov
stc
fbstp
or
jp
mov
xchg
iret
jo
pop
mov
push
fidivrl
ror
lret
lahf
xor
sub
rorl
mov
lret
rcr
sbb
enter
xchg
ret
mov
mov
popa
mov
mov
push
sub
in
and
sub
sbb
sarb
hlt
push
push
jmp
enter
jg
xchg
mov
loop
mov
mov
sbb
jae
insb
js
xchg
lret
mov
xlat
mov
enter
aaa
xchg
fimull
mov
std
xor
mov
ret
cmp
push
sbb
sbb
rcr
dec
outsl
push
jge
imul
adc
jnp
xchg
mov
dec
pop
xor
jns
movsl
pop
inc
fmuls
scas
pop
sti
xchg
filds
pop
xchg
jne
mov
das
rol
push
roll
in
movsl
inc
loop
jbe
lret
pop
ds
je
fcomps
adc
adc
dec
jge
cmpsl
inc
xchg
mov
cmp
in
lds
cltd
and
adc
jge
jg
jge
add
ss
mov
faddl
mov
mov
adc
pextrw
das
cmp
pushf
jg
gs
pop
push
sub
add
in
jnp
mulb
das
add
pop
ja
negl
sti
push
out
inc
xchg
pop
shlb
mov
out
mov
retw
mov
ja
inc
adc
lahf
xchg
mov
cmpsb
xchg
jg
out
and
daa
pop
dec
flds
data16
nop
sarl
cmp
jae
stos
mov
xchg
out
xchg
cmp
mov
iret
dec
icebp
or
push
mov
push
jae
push
push
mov
jno
in
push
pop
repz
xchg
jp
mov
fwait
xor
dec
mov
cmpsl
jo
jbe
pop
lahf
rorl
cmc
xchg
jmp
cld
xchg
das
jb
or
or
test
inc
dec
dec
out
aad
mov
movsl
push
jmp
scas
cld
int3
les
or
dec
lea
std
mov
pop
std
in
dec
dec
arpl
sbbb
adc
or
adc
js
lret
shl
outsl
jl
xchg
movsl
sarb
sub
pop
push
cmp
inc
js
andb
mov
in
cmp
loope
ret
test
mov
adc
sub
rol
jb
mov
sahf
xor
rclb
in
adc
insb
lds
stos
dec
cmp
jge
popl
fwait
xchg
adc
fisttpl
mov
push
and
sbbl
rcl
cwtl
test
mov
xchg
jo
jo
cltd
sbb
cmpsl
push
inc
stos
mov
push
stos
inc
cmpsb
xor
cli
jecxz
addl
icebp
adcl
rol
xor
mov
jae
or
mov
and
xchg
sub
and
mov
pop
imul
or
sbb
test
add
push
aad
inc
jle
clc
mov
mov
xchg
lods
test
mov
inc
cltd
add
xor
push
ja
jp
fcoms
dec
fcmovb
aad
jmp
add
xor
sarb
fs
mov
mov
add
cwtl
sub
jg
mov
rcrl
jo
dec
cltd
stos
cmp
mov
jb
mov
pop
scas
rcl
inc
pushf
and
push
push
lret
and
cld
aas
imull
adc
push
xor
mov
lds
and
push
rolb
enter
test
in
mov
cli
inc
push
in
jae
adc
out
adc
xchg
jno
rorl
addr16
scas
fidivs
jae
xchg
je
add
test
push
jg
jb
jle
and
adc
inc
dec
fsubs
mov
push
aam
dec
mov
cmc
jmp
xor
aam
inc
add
and
ja
add
cmp
arpl
das
adc
ds
sbb
jmp
jl
lock
fistps
pop
mov
rol
cmp
mov
add
inc
cwtl
movsb
scas
imul
dec
in
and
push
cmp
pop
xchg
fmuls
fstl
sahf
xor
adc
jne
dec
sub
scas
cld
adc
inc
jb
jmp
push
mov
shlb
lock
outsl
jle
xchg
in
inc
test
lret
lcall
jecxz
jecxz
and
xchg
add
addb
fbstp
shlb
inc
mov
mov
lea
push
jge
dec
pop
ja
popf
cmc
testb
in
sahf
sub
iret
or
mov
repz
push
mov
nopl
dec
out
aas
dec
ljmp
in
push
int3
jecxz
dec
stos
imul
out
jle
arpl
jae
adc
sti
xchg
dec
pop
fldl
imul
sbb
aam
or
bound
mov
outsb
or
repnz
ljmp
push
adc
ss
ss
cmp
and
sbb
cltd
cmp
loope
fbstp
dec
shl
and
and
or
jne
mov
out
sti
pop
adc
outsb
clc
pop
outsb
jge
mov
cmc
in
es
adc
add
jne
cli
or
and
adc
daa
inc
or
shlb
pushf
daa
jnp
sbb
movsb
sub
test
adc
jle
pop
cmp
pop
outsl
push
xchg
pop
mov
and
cmp
js
loope
push
or
dec
incb
push
out
cmp
dec
pushf
cmp
in
cld
andb
daa
outsl
imul
movsl
imul
cmpsb
pop
adc
mov
test
out
inc
pop
pusha
insb
je
mov
jmp
pushf
or
cmp
jge
lods
ficoms
push
mov
xor
loop
shrb
into
scas
aas
jns
imul
sbb
mov
daa
mov
rorb
repz
shlb
fs
subb
call
sbb
test
imulb
gs
pop
cltd
and
stos
and
push
xchg
cmpb
or
xor
mov
loopne
inc
out
aas
divl
into
call
push
sar
fdivrl
adc
jo
jo
subb
jb
inc
mov
mov
cmp
es
sbb
mov
dec
ljmp
mov
arpl
push
pop
iret
xchg
inc
mov
mov
sub
pop
out
rorl
dec
pop
imul
cmp
ja
jbe
flds
jns
insb
lods
fpatan
test
mov
add
mov
xchg
jb,pn
dec
in
ss
outsb
pop
sub
scas
xor
fmul
fdivrl
push
gs
fwait
push
mov
imulb
jle
out
movsb
sub
es
mov
inc
mov
adc
fstl
mov
add
push
aas
cld
cmp
inc
cs
pop
fstl
in
add
pop
jns
test
xchg
cmp
mov
pop
imul
mov
push
sbb
test
clc
fstps
xchg
stos
mov
mov
cmp
or
jg
nop
push
adc
dec
pushf
lods
inc
fs
mov
es
nop
xor
cmp
xor
fwait
xor
mulb
movsl
mov
les
nop
in
mov
shl
xor
leave
ror
loop
nop
movsb
rcrb
jae
inc
adc
xor
xor
pusha
inc
fsts
jb
inc
inc
leave
jecxz
cmp
mov
stc
test
cltd
dec
jb
cmpl
dec
cmpsb
shll
leave
pop
lods
pop
pop
cmp
out
lea
pop
adc
notb
mov
cwtl
and
clc
dec
sbb
lock
cmp
xchg
mov
stos
xlat
cmp
subl
push
fwait
mov
pop
push
mov
adc
int
sbb
sub
sbb
cmp
cs
mov
hlt
mov
into
push
inc
fdivrl
add
es
test
dec
je
cmp
aaa
adc
mov
cwtl
xor
iret
cld
xchg
mov
push
and
sahf
out
fisttpl
scas
icebp
idivb
sub
dec
test
stos
rcrl
stc
loope
fucomip
addl
sub
push
enter
jbe
std
imul
std
xlat
xlat
jbe
sub
xchg
mov
test
call
push
or
pop
div
data16
pop
jmp
es
dec
mov
xchg
xchg
sub
fidivl
sub
pop
xor
cltd
mov
mov
fwait
aas
push
cmpsb
mov
xchg
push
sbb
xor
loop
mov
adc
call
or
insl
dec
out
pushf
dec
push
and
and
stc
rol
jno
push
cmc
lock
stc
bound
adc
loopne
rol
push
mov
or
lods
mov
std
push
nop
jmp
test
sub
testb
negl
cltd
lds
push
arpl
push
leave
inc
push
jne
or
cmp
in
mov
insl
cmp
cltd
pop
movsl
mov
mov
cld
fwait
clc
cmpsb
aaa
aad
sub
ja
dec
push
or
jecxz
enter
sarb
xchg
mov
cltd
push
mov
dec
iret
xchg
mov
sbb
test
sahf
jmp
lret
jmp
cmp
icebp
mov
fmuls
adc
bound
inc
pop
jl
lahf
add
idiv
adcl
push
mov
call
stc
dec
vprotb
pop
cmp
or
mov
out
bound
adc
xchg
mov
mov
pop
shll
fnstsw
push
adc
lds
inc
in
mov
lock
testl
pop
fmull
pop
fstps
xchg
mov
into
ss
int3
arpl
or
mov
fisttpl
and
lock
out
pop
in
lahf
inc
outsb
rcrb
stos
mov
push
fsubrs
xchg
stc
mov
mov
pop
ds
movl
pop
shlb
data16
adc
popf
ret
mov
fmuls
mov
add
loopne
notl
mov
or
jecxz
jae
dec
xchg
pop
ds
mov
cmc
inc
push
scas
push
jne
shl
dec
lea
lret
lret
xchg
cs
adc
push
mov
test
loope
xor
mov
pushf
inc
mov
push
je
insl
xchg
rolb
add
call
das
and
mov
mov
repnz
iret
mov
es
adc
add
into
popa
xchg
scas
mov
iret
inc
aad
mov
out
cld
xor
push
sbb
in
mov
leave
cmp
xchg
out
rolb
fwait
cmp
jecxz
in
pop
mov
lds
es
aam
dec
icebp
push
call
icebp
xlat
add
adc
mov
jle
in
sbb
cmp
mov
fs
popf
cs
add
test
xchg
inc
cmc
scas
idivb
aaa
dec
dec
add
cltd
xor
adc
xor
jbe
cli
and
addb
xchg
xchg
cmp
inc
icebp
dec
or
adc
pop
leave
pusha
mov
inc
out
xchg
addr16
sub
lcall
pop
mov
mov
mov
shlb
jne
cli
lods
jbe
ficomps
jecxz
inc
adc
js
in
popf
jbe
xor
popf
inc
jmp
shr
scas
addl
or
loopne
repz
jne
push
sub
pop
jne
cmpsl
mov
push
shrb
sbb
nop
cmp
inc
bnd
daa
pop
movsl
sub
cmp
scas
test
mov
out
push
xchg
pop
or
in
sbb
xor
stos
icebp
stos
fdivrs
inc
ljmp
push
call
imul
inc
jb
inc
jne
and
xchg
lods
and
jb
fldenv
rep
into
movsb
push
in
test
xchg
mov
pop
or
inc
xchg
mov
fdivrl
xchg
repnz
lcall
mov
jbe
add
push
or
repnz
imul
dec
pop
je
leave
push
mov
xchg
insb
sub
adc
pop
repnz
push
lret
pop
bnd
mov
call
dec
test
movsb
mov
int3
jecxz
aas
fstps
jl
mov
mov
into
icebp
mov
lea
push
push
and
sub
xor
push
mov
lods
and
mov
mov
mov
dec
xchg
test
inc
lods
ret
int3
fcmovne
loope
adc
pop
sbb
fidivrs
mov
test
add
xor
jae
push
adc
pop
les
mov
ds
jno
std
fs
stc
nop
aas
movsb
test
sbb
shrl
adc
pop
test
in
xor
stc
mov
and
add
or
push
mov
cmp
adc
incl
scas
and
xor
lods
adc
inc
leave
hlt
jbe
daa
rcll
out
ficoml
push
in
popf
jg
int
stos
shrb
cld
push
out
mov
sub
mov
mov
js
or
add
xor
ret
inc
fstl
add
faddp
js
fistps
mov
sbb
bound
or
loopne
sub
jg
jo
test
add
cmp
bound
jmp
fimull
xchg
sbbl
andb
movsb
hlt
shr
in
lods
ret
cltd
xor
or
push
insl
push
sbb
adc
lods
imul
cmpsl
mov
out
dec
fnstcw
shll
aad
stc
cmpsl
mov
aas
and
jo
cmp
cmp
dec
out
in
comiss
in
push
and
hlt
stos
iret
cmp
xor
nop
cmpsb
pop
pop
jo
outsb
sub
push
adc
in
mov
adc
iret
and
test
in
mov
mov
rorb
cmpb
pop
lods
add
hlt
and
scas
out
notl
sbb
push
xor
xor
jne
inc
testb
inc
lea
scas
addr16
iret
xchg
mov
inc
lock
outsb
xchg
sbb
lods
imul
mov
xchg
cmp
hlt
mov
out
xchg
std
lods
cmp
sahf
mov
int3
out
cmp
mov
add
xchg
xchg
cmp
mov
xchg
bound
xchg
mov
inc
fcmovu
inc
mov
cmp
xor
jb
mov
faddp
daa
adcb
aas
std
adc
xchg
add
fdivrp
jae
in
ja
popl
scas
xchg
in
lret
xlat
aaa
cmp
or
pop
mov
mov
push
xor
in
cli
sbb
xchg
rorb
imul
popf
sbb
inc
test
clc
xlat
xchg
ret
ss
imul
cwtl
mov
je
scas
mov
pushf
test
loope
push
cltd
push
cmc
data16
adc
jmp
mov
stc
sub
jne
lcall
dec
mov
adc
adc
test
daa
out
pop
es
out
faddl
pop
cld
std
int3
bound
add
and
or
insb
sarl
cmp
push
mov
sbb
outsb
loope
push
jp
inc
inc
iret
pop
xchg
lods
call
xor
out
cmc
xor
jmp
and
or
cmp
stos
and
mov
and
jns
test
aaa
mov
test
xabort
sti
mov
insb
loop
ja
fs
outsb
adc
cmc
sbb
js
jne
ja
dec
sbb
dec
lret
mov
mov
mov
jae
mov
fwait
sub
push
xor
setl
por
add
inc
add
in
inc
in
jge
lret
mov
or
filds
jecxz
push
jge
out
scas
cmp
jl
add
pop
test
push
pop
jbe
movaps
pop
push
xor
xchg
test
dec
mov
gs
cwtl
sub
arpl
jp
shll
mov
xchg
repz
push
mov
icebp
int3
cmp
mov
adc
push
pop
repnz
sub
sub
mov
push
push
cmpsl
psrad
mov
out
jb
pop
data16
dec
out
shl
pop
push
push
ds
lock
mov
and
aam
test
dec
movsb
cmp
cmc
mov
int
in
sbb
into
mov
aad
pop
rclb
pop
add
movsl
mov
in
sub
xor
adc
cmp
fidivrl
out
sub
mov
mov
add
idivl
adc
out
push
inc
arpl
inc
fcmovb
aaa
popl
sti
ret
imul
lods
sub
and
sti
pop
mov
push
fnsave
xchg
testb
mov
or
aas
xchg
adc
movsb
pusha
jbe
stc
sbb
jne
mov
xor
cltd
push
lret
mov
lret
call
in
mov
push
cmp
imul
ffree
adc
add
and
sub
add
test
xchg
inc
or
add
sti
and
bound
cmp
das
add
push
scas
push
pop
daa
es
xor
mov
test
and
rcl
scas
push
imul
les
cs
and
push
sub
xchg
cmc
cld
and
inc
xor
jmp
jp
mov
je
fs
mov
adc
iret
mov
cli
aam
jbe
fdivrp
sahf
sub
and
js
psadbw
stc
scas
mov
test
dec
fdivrs
push
inc
mov
in
je
inc
xlat
sub
adc
inc
pushf
sub
mov
mov
sub
repz
repz
sub
sbb
in
xchg
das
aaa
adc
repz
iret
loop
jbe
pusha
lret
dec
inc
lods
imul
in
shll
xor
push
push
xchg
jb
int
test
or
push
lcall
and
hlt
rorl
fwait
pushf
xlat
fs
mov
add
divb
xor
sbb
xor
lods
ret
push
sahf
outsl
repnz
dec
out
push
in
mov
pop
test
mov
fidivrl
and
push
jmp
dec
popa
and
xor
add
add
out
call
jle
je
or
stc
push
jns
xorb
pusha
push
insb
arpl
mov
subl
cltd
mov
data16
fwait
aaa
into
shl
sub
int
push
jns
insl
mov
sbb
repnz
sbb
popa
in
pop
mov
mov
icebp
jecxz
es
sub
adc
or
addr16
int3
push
test
fldenv
and
or
mov
sbbl
in
call
xchg
pushf
mov
inc
mov
js
fcomp
scas
pop
dec
cld
mov
push
in
lret
jbe
pop
jbe
mov
xchg
xor
outsl
in
dec
sarl
xchg
xchg
inc
jne
jno
test
lret
cmp
popf
cmp
cmp
push
sbb
or
fs
pop
add
sahf
push
aaa
mov
clc
pop
out
es
or
and
movsl
testl
push
idivl
mov
cli
mov
sub
movq
pop
cmp
mov
jg
sub
jmp
mov
mov
push
stc
pop
xchg
mov
ljmp
xchg
mov
cltd
std
cld
cmpsb
add
out
cmp
or
sbb
data16
push
mov
std
lcall
pushw
jo
xchg
xchg
fldenv
jnp
pop
sub
iret
xchg
dec
xlat
sahf
lahf
mov
push
aad
inc
clc
inc
jne
stc
inc
in
inc
and
and
xchg
je
jns
call
lahf
pushf
lds
idiv
loopne
xor
bswap
rcl
jo
push
pop
ficoms
loope
or
lret
lret
cmp
mov
xor
pop
push
fmuls
push
out
int
adcl
ret
mov
push
jae
setge
rcrb
psllw
inc
adc
sub
cmp
sbb
decl
or
or
push
adc
imul
xor
js
xor
aaa
dec
push
es
jp
inc
popf
mov
mov
daa
sub
sub
mov
arpl
mov
int3
icebp
xchg
or
mov
imul
pop
hlt
ror
pop
pop
xchg
daa
xor
jp
mov
dec
loopne
pop
hlt
dec
iret
in
xchg
inc
cmp
out
out
dec
cli
mov
mov
or
mov
fwait
mov
lcall
lods
iret
les
mov
test
jbe
push
and
pop
shll
mov
sub
sbb
lea
sub
jge
lahf
lret
icebp
push
cld
cwtl
movsb
clc
pop
adc
mov
je
pop
or
mov
jmp
cmp
push
mov
and
lcall
and
aam
shll
testb
jge
sub
pusha
clc
jle
xchg
add
mov
jge
xchg
js
mov
inc
fcompl
arpl
int3
mov
adc
cwtl
pop
fbstp
cmp
jmp
mov
dec
mov
sub
stos
mov
jl
shr
inc
inc
fstl
cmc
movsb
xchg
mov
aam
hlt
and
aaa
mov
dec
cmp
inc
fiadds
xor
mov
in
pop
push
dec
sti
xchg
scas
sbb
rol
pop
ss
subl
clc
nop
sub
ja
andb
xorl
aas
lahf
xchg
mov
cli
adcb
mov
into
mov
or
jbe
out
jne
lcall
lods
xlat
or
and
xchg
dec
in
ret
pop
inc
cwtl
fimull
fwait
push
cmp
stos
ljmp
sub
sbb
daa
adc
scas
in
push
mov
mov
or
cmp
jg
sti
fwait
in
sbb
jle
inc
int
icebp
jle
imul
xchg
leave
jecxz
fdivl
inc
dec
aad
lret
and
push
lods
sub
mov
xor
sbb
dec
dec
lcall
push
outsb
scas
adc
aam
xchg
push
sbb
lea
cmp
sub
mov
out
imul
lahf
jbe
sub
or
push
stos
mov
fsub
push
sbb
sbb
test
cmpsl
scas
mov
loop
andl
jl
sti
lods
mov
ret
push
cltd
pop
and
addl
out
sbb
push
mov
xor
jne
and
push
hlt
lods
add
scas
pop
and
in
aas
jle
mov
dec
loopne
xor
or
cmp
in
inc
xchg
push
dec
mov
loopne
and
cs
call
imul
pop
sbb
sub
lods
jbe
pop
cmpsb
call
xlat
jnp
mov
popf
push
repz
loop
pop
push
movsl
std
xchg
adc
sbb
xchg
testb
add
push
js
adc
ja
loope
lods
xchg
and
notl
repnz
or
mov
lea
inc
push
aaa
lret
sbbb
fsubs
cwtl
ss
fidivrl
xchg
cli
inc
or
xor
fs
fldenv
fwait
je
ror
mov
jb
and
test
xchg
jbe
imul
outsl
jl
adc
push
mov
xor
loopne
cmp
nop
pop
ret
jne
mov
mov
lods
inc
add
int3
gs
aad
jo
popa
mov
aad
push
mov
jmp
cmp
movsl
xchg
pop
cs
imul
sbb
sti
mov
sub
testb
pop
xor
jo
pop
test
fcmove
arpl
add
test
sub
les
je
mov
jns
sahf
sub
ret
es
and
cmpsb
stos
out
xchg
fadds
adc
mov
mov
jge
int
ja
push
outsl
push
repnz
je
pop
xorb
repnz
pusha
es
pop
jo
inc
cmpsl
out
jmp
in
cli
ja
das
xchg
pushl
gs
xor
mov
mov
test
mov
ja
imul
pop
aas
push
fdivrl
mov
mov
mov
push
in
subl
in
int
dec
or
fwait
stos
arpl
into
jne
movl
cmp
fwait
out
imul
inc
cli
jae
add
addr16
jne
xchg
mov
xchg
add
fucomp
bound
adc
xor
in
mov
pop
hlt
and
cld
cmpl
cs
jle
addr16
repz
inc
in
repnz
loop
sub
enter
xchg
mov
lea
sbb
push
testl
mov
mov
rcr
sub
popa
sbb
outsl
sub
shll
pop
in
cmpsl
inc
jb
mov
push
xlat
outsb
aad
adc
in
dec
int3
rolb
daa
je
ficomps
mov
and
jb
cld
cwtl
dec
in
mov
xchg
sar
iret
add
adc
pop
lods
inc
mov
jmp
or
jecxz
and
jmp
push
xchg
les
push
cmp
scas
pop
fisttpl
push
inc
leave
enter
int
mov
pushw
push
push
or
cmpsl
sbb
out
fisubrs
push
outsb
sub
mov
sbb
fiaddl
bnd
test
adcb
sbbl
mov
push
mov
fsubrl
inc
adc
mov
add
xlat
jb
mov
xchg
inc
pop
orb
push
jg
jp
lret
jns
pop
pop
addb
dec
pop
mov
jo
xor
ds
adc
daa
test
mov
mov
mov
push
inc
dec
sub
sub
mov
xlat
in
fwait
push
out
fsubrl
jmp
dec
push
ret
gs
xchg
and
cmp
xchg
aam
xor
push
lahf
neg
and
jl
xchg
xor
dec
push
inc
and
mov
lea
sahf
sub
aam
stos
pop
shlb
outsl
pop
adc
or
lock
xchg
sub
and
aas
ss
es
out
mov
push
ja
fdiv
jns
das
hlt
es
std
lahf
or
fdivr
shll
es
inc
and
xchg
xlat
sbbl
cltd
adcb
imul
mov
fidivrs
xlat
xor
enter
mov
push
push
push
cmp
movsb
add
pusha
push
dec
xlat
les
xor
push
movsl
inc
movsb
or
cmp
or
or
std
lret
add
pop
mov
add
cmp
adc
xchg
sbb
mov
leave
mov
sbb
mov
jb
gs
lret
out
sub
sahf
aas
xchg
mov
fs
jle
mov
aaa
je
mov
rclb
xchg
add
test
pop
leave
sub
or
andl
mov
jmp
cmpsl
out
xor
mov
ret
sub
inc
and
loope
jno
lret
scas
or
push
sbb
insb
out
jnp
inc
testl
pusha
push
jge
seta
inc
icebp
mov
pushf
jnp,pt
pop
xchg
testl
or
and
mov
je
mov
mov
ja
shrl
leave
js
repz
pop
in
jl
jl
lahf
xchg
xor
mov
test
jmp
int
shll
sarb
test
rolb
imul
sbbb
adc
outsl
jl
pop
mov
add
pop
int
or
dec
mov
jo
movsl
mov
fs
cmp
add
jb
jl
inc
xchg
stos
fsubrs
or
or
scas
sar
nop
test
lahf
jp
leave
pop
push
bound
mov
sbb
sub
mov
testl
sub
and
bound
mov
jge
aad
pop
and
ret
sbb
inc
fsubl
fs
mov
std
imul
test
pushl
inc
je
push
add
sbbb
fsubr
orb
inc
push
inc
and
jle
in
xor
js
enter
sbb
lods
inc
ja
push
or
jb
inc
icebp
pop
xchg
xor
xchg
pop
push
dec
out
xor
push
jmp
lret
add
push
cmp
nop
stos
popf
or
dec
and
repz
int
in
addl
xchg
mov
inc
nop
lods
scas
and
notl
sub
enter
sbb
or
lock
test
pushf
icebp
add
and
lods
fsubr
aas
xchg
fistps
vrsqrtps
sti
ret
inc
pop
push
into
enter
cmp
leave
fmuls
mov
dec
insb
jnp
xchg
lahf
test
pop
inc
adc
inc
cwtl
xchg
mov
mov
adc
daa
ret
pop
mov
jge
mov
and
mov
jno
mov
jg
fsubrs
mov
dec
push
adc
test
xchg
cs
stc
cli
jge
fidivl
movsb
cmp
js
xchg
insb
add
mov
xor
lret
addb
xor
fcom
sbb
movsb
popl
jp
popf
mov
or
jb
pop
mov
mov
stos
inc
fldl
cmpsl
jb,pt
shrl
cmpsl
popf
xor
lock
outsb
in
add
movsl
movsb
outsb
add
bound
ret
pop
daa
xchg
test
pop
in
aas
xorb
add
pop
sbb
lods
mov
sahf
xor
pop
adc
mov
rorl
or
pop
jb
dec
or
dec
adc
xchg
leave
mov
cli
push
call
test
adc
insl
pop
outsl
push
dec
mov
and
ljmp
aaa
mov
sub
shrl
insl
pop
inc
aas
xor
test
movsb
lea
push
sbb
orb
aas
xor
cmp
rcll
mov
pushl
fwait
pop
sbb
pop
je
sti
cmpsl
fcomp
popa
fildll
push
lods
movsb
jno
adc
jno
xor
and
je
aad
push
outsb
std
pop
cmp
cmp
mov
test
fldpi
ss
cli
pushf
scas
or
and
fs
sahf
mov
pop
call
cltd
mov
fstps
decb
mov
sub
jbe
inc
call
pop
jae
pop
rcrl
stos
insb
adc
jb
adc
push
in
add
rolb
scas
ljmp
jns
push
or
pop
test
sti
adc
dec
jno
insl
icebp
outsl
mov
mov
xor
mov
mov
mov
ja
ljmp
jle
mov
gs
inc
fcomps
xchg
in
inc
mov
addr16
rcll
addl
cmp
xchg
sub
in
xor
outsl
add
pop
xchg
in
push
fists
pop
imul
ljmp
or
and
pop
jno
lret
lods
ret
mov
add
pop
lds
fnstenv
loop
inc
mov
mov
out
add
dec
in
dec
popa
pinsrw
daa
and
adc
ret
adcl
in
adcl
out
test
cltd
mov
js
adc
movsl
test
xor
cli
jae
in
mov
lds
jns
test
sbb
add
loop
es
xchg
mov
dec
mov
jb
aas
mov
sbb
insl
fidivl
enter
xchg
jno
dec
sbb
dec
sahf
dec
jp
mov
cmp
fdiv
xchg
lea
sub
popf
ret
and
bsf
mov
cmc
ds
fs
adc
jb
pop
pushf
dec
push
xor
andb
out
xor
mov
imul
xor
pop
cmp
daa
movsb
es
hlt
dec
cmp
addr16
test
fstl
lods
mov
mov
xor
adcl
ss
add
test
jae
cmp
rcl
es
popf
push
test
ret
push
lcall
push
je
pop
mov
cltd
xor
inc
jmp
inc
fsubs
data16
xchg
jmp
loope
out
out
jp
inc
adc
test
loop
sbbb
pop
fimull
mov
adc
cs
mov
fistps
cld
int3
clc
or
ja
xchg
nop
gs
add
cs
mov
pop
das
or
cmp
jb
jmp
sub
popa
leave
mov
mov
enter
loopne
mov
stos
sti
push
and
and
and
add
xchg
prefetchnta
scas
mov
cmp
xchg
sbb
call
push
inc
dec
cmp
aam
inc
dec
push
xor
popf
lods
out
ret
ret
add
test
push
iret
popf
cmpsl
cmp
pop
clc
out
repz
lret
stos
daa
mov
outsb
jne,pn
pusha
dec
int
mov
les
imul
addr16
pop
mov
movb
cmp
sbbb
test
fs
out
add
push
mov
neg
outsl
sub
popa
clc
and
push
adc
jg
inc
fcomps
xor
leave
add
jno
mov
xor
push
xchg
push
scas
xchg
test
inc
bound
jns
dec
dec
inc
jecxz
jb
dec
stc
mov
jnp
ljmp
mov
and
xor
or
dec
fstpl
and
fidivs
mov
cs
into
or
jle
push
outsl
and
jbe
dec
mov
adc
lock
mov
add
je
mov
mov
add
add
gs
jnp
jnp
frstor
dec
xchg
pushf
jno
insl
out
je
gs
or
sub
cld
cmp
arpl
out
ror
mov
movsl
sub
fisubs
inc
int3
movsl
test
mov
push
fstl
push
dec
icebp
xor
sub
jl
int
roll
fsubl
out
xchg
push
adc
xor
pop
loope
rolb
nop
daa
sub
mov
sbbl
push
sub
fsubl
push
test
loop
shl
ds
cs
pop
dec
inc
add
sbb
add
inc
pop
je
lret
and
or
xchg
mov
add
xlat
cmpsl
push
dec
add
xor
or
testl
loop
jae
gs
aaa
dec
es
hlt
adc
push
daa
mov
sahf
icebp
fstl
gs
daa
lcall
push
leave
mov
pop
hlt
xor
adc
or
imul
xor
ds
mov
push
push
xor
fsubrp
daa
mov
sbb
aaa
loop
ja
cmc
and
je
mov
mov
dec
cltd
jecxz
xchg
inc
adc
in
mov
or
fists
fimull
call
sbb
fsubs
jns
push
cmp
cs
push
sub
dec
pop
lret
cmp
push
sbb
xor
pop
sbb
das
mov
mov
popa
mov
mov
adc
and
fdivs
add
ss
mov
mov
push
cmp
ret
mov
add
sbb
aas
cs
mov
jge
or
sub
outsl
dec
hlt
js
pop
mov
push
test
mov
dec
popa
push
nop
daa
inc
les
xchg
bound
incb
addr16
cltd
jno
icebp
loop
xchg
wrmsr
repz
daa
fisttpll
lods
dec
cli
or
mov
dec
cmpsb
sub
jl
jmp
inc
dec
enter
fcmovnbe
rcrl
jbe
mov
pop
dec
jo
leave
pusha
nop
lahf
test
sbb
mov
jno
adc
cld
push
inc
cmc
stc
bound
push
xlat
cmc
sub
cmp
mov
push
lods
jbe
shl
nop
data16
push
cmp
arpl
aad
fwait
push
add
or
iret
data16
iret
ds
mov
inc
jp
aaa
push
mov
jg
cmp
enter
fnstsw
cmp
adc
mov
cmp
mov
xor
leave
inc
out
push
dec
scas
leave
jno
js
cltd
test
scas
je
stos
popa
xorl
dec
scas
es
movsl
lret
jg
and
mov
aas
lahf
lahf
mov
add
call
adc
sub
cmp
gs
out
test
lret
ret
daa
xchg
sbb
dec
loop
mov
imul
imul
rcrb
bound
ja
pop
fimuls
push
add
mov
sub
outsb
outsl
pop
lock
or
sbbb
push
mov
cmp
fmull
jge
mov
xor
cmpsb
cmp
aam
les
adc
jmp
cmp
loopne
pop
pop
inc
mov
cmc
pushl
stos
xlat
jo
push
ja
or
fnstenv
jae
movsl
push
int
jmp
push
pop
out
and
dec
in
cmp
scas
sbb
cmp
push
in
mov
inc
xlat
xor
shufps
aad
cmp
cmp
clc
cmp
scas
rcrb
ss
sarb
pop
pop
mov
sub
les
in
sbb
clc
dec
test
mov
sbb
pop
pop
pop
mov
movsl
sti
mov
push
or
das
pushf
dec
popf
mov
xchg
cmp
xorb
test
je
clc
push
movsb
push
pop
sub
mov
leave
push
xchg
in
sub
daa
lcall
sub
xor
or
jge
mov
mov
cltd
adc
cltd
mov
cmc
adc
in
or
dec
and
xchg
xchg
ror
gs
jae
lahf
xor
cld
push
fmul
push
divb
imul
mov
mov
inc
cmpsl
ljmp
ss
pop
loopne
push
mov
std
xchg
out
ljmp
xchg
mov
mov
push
in
jne
dec
xor
imul
sbb
sub
ja
cltd
sahf
pop
je
mov
in
loop
and
dec
cmc
xchg
jle
sub
push
hlt
sahf
mov
add
insl
xor
push
xchg
dec
sbb
pop
shl
clc
adc
lds
icebp
fs
orl
cmp
xchg
loopne
adc
mov
enter
push
lret
dec
cmp
imul
xchg
mov
inc
in
into
idivb
ss
movb
int
icebp
pop
or
outsl
jecxz
and
mov
cltd
mov
daa
push
lods
fcompl
mov
push
in
in
pop
fmull
cmp
dec
pop
std
je
xor
push
fs
cmp
mov
mov
shlb
insb
int3
je
sub
cmpsb
lea
xor
mov
sub
mov
dec
sub
iret
dec
arpl
and
lods
jo
jg
xchg
mov
jne
or
mov
in
dec
inc
cmp
dec
fs
push
and
add
shll
repz
loopne
pusha
xlat
clc
push
les
mov
xchg
insb
mov
ds
or
iret
mov
and
mov
fisubrs
stos
push
mov
adc
sbb
cmp
adc
and
pop
std
xor
and
out
call
fisttpl
cmp
or
mov
inc
and
roll
es
cmp
lock
adc
stos
push
cwtl
in
nop
cmpsb
xor
jp
ja
mov
int3
and
or
movsl
inc
sbb
mov
pop
pop
dec
pop
xchg
inc
cmpsl
cmp
mov
cmp
adc
mov
int3
mov
ficoml
mov
mov
push
shll
inc
das
or
dec
icebp
into
loop
xor
or
dec
test
daa
loop
mov
ret
adc
inc
mov
xchg
fstpl
pop
pop
pop
hlt
scas
cltd
jp
or
cld
sbb
jg
imulb
cmp
mov
push
push
mov
inc
clc
pfmul
andb
or
ret
jno
cs
arpl
pop
fists
xchg
xchg
lahf
lcall
inc
fldenv
lret
lret
lods
scas
sti
ss
je
fbld
dec
or
mov
scas
in
icebp
cmp
loope
xchg
pop
lret
dec
dec
mov
rol
sub
lods
iret
test
jge
popa
xchg
ljmp
push
inc
ja
and
mov
mov
jge
push
mov
dec
cmpsb
movsb
mov
or
push
test
out
test
jnp
dec
jmp
jge
dec
jne
aam
std
pop
rcrl
or
or
mov
es
push
jae
pop
xor
imul
push
loopne
ret
hlt
mov
sub
xor
aas
cmp
scas
imul
ss
sub
jmp
arpl
je
arpl
aaa
push
cmp
inc
cmp
xchg
push
aam
inc
push
lahf
add
in
cmp
mov
cld
pop
push
or
lcall
jae
add
jne
aad
icebp
xchg
add
adc
lret
inc
push
jl
hlt
int
cmp
adc
jb
js
repz
stos
pop
adc
lea
jp
arpl
in
adcl
movsb
cmp
push
dec
lahf
nop
pop
test
inc
ja
out
mov
sahf
hlt
or
ljmp
xchg
ret
or
push
xchg
pop
xor
jle
jne
pop
sub
pusha
push
stos
sbb
and
ret
fdivl
mov
push
sbb
inc
fdivrs
fcompl
xchg
and
push
loope
cli
push
lods
add
and
mov
popa
dec
jmp
out
notb
aaa
jno
nop
popa
sub
icebp
mov
adc
push
xlat
mov
dec
mov
xchg
movzbl
ror
sbb
jge
lds
shrb
out
xchg
lret
mov
mov
push
fistl
ret
mov
jl
xchg
mov
incl
adc
imul
call
mov
enter
insl
aad
sub
push
in
in
add
xor
outsl
pop
push
dec
pop
pop
nop
test
loop
icebp
sarl
jge
std
pop
nop
leave
and
pop
cmpsl
push
mov
xchg
pop
shrl
nop
dec
push
adc
idivb
adcb
icebp
les
lods
daa
cmpsb
or
loop
leave
add
xor
push
std
or
pop
cmpsb
bound
and
add
in
loop
addr16
jg
mov
out
setae
mov
adc
scas
in
mov
fisttps
pop
cld
dec
imul
dec
mov
jbe
jmp
lock
std
cltd
pop
sub
cmp
lahf
je
mov
push
push
outsb
movsb
adc
push
fs
xor
push
inc
and
push
and
inc
adc
dec
enter
addb
rorl
inc
into
and
fst
outsb
mov
add
adc
or
int
dec
in
pop
push
dec
arpl
adc
or
pop
imul
and
dec
xlat
outsl
cs
push
rolb
fwait
pop
mov
adc
jnp
in
dec
mov
or
in
jl
xor
pop
nop
pop
cmpsb
test
clc
or
mov
push
subl
hlt
movsb
and
out
push
imul
sub
dec
imul
ret
sarb
imul
fnstcw
push
insb
jmp
jl
iret
cwtl
push
cwtl
lods
stos
jecxz
out
jae
push
rorb
insb
icebp
xor
inc
arpl
sub
pop
mov
std
cmpsl
cmpsl
pop
jae
sbb
push
push
cmpsl
ret
sub
jmp
sbb
and
js
inc
xchg
push
out
push
cltd
xor
mov
pushf
stos
cmp
jae
lcall
popa
fxch
dec
fdivrl
rcll
xchg
add
jbe
mov
sbbb
xchg
inc
daa
push
loopne
push
cmpl
xchg
push
ficomps
mov
pop
pushf
mov
pop
cmp
loopne
popf
mov
mov
int3
adc
enter
and
cmp
dec
stos
out
mov
loopne
mov
xor
in
sbb
adcl
add
mov
arpl
outsl
mov
xor
mov
mov
fwait
addl
and
es
je
jmp
and
mov
pop
shrb
scas
call
mov
jns
jno
adc
xchg
push
jnp
enter
inc
std
add
dec
stos
pop
sahf
mov
jmp
xchg
sub
mov
clc
insl
inc
dec
in
xchg
xchg
jns
dec
imul
orb
mov
mov
push
lret
out
xor
daa
inc
pushf
jmp
jg
fwait
mov
or
adc
adc
xor
push
push
pop
enter
into
dec
in
mov
lods
aam
push
and
push
icebp
cmp
cmp
pop
cs
inc
xlat
lcall
test
inc
fs
repz
gs
push
pusha
inc
xchg
insl
mov
push
call
imul
mov
xchg
dec
or
add
es
test
add
jno
and
adc
inc
push
and
sbb
or
stos
out
cli
in
dec
mov
aam
sbb
stos
xor
push
jno
jbe
mov
xchg
xchg
xor
lea
push
insb
mov
test
and
jmp
inc
in
das
cmp
cld
pop
cmp
xor
sahf
jbe
inc
pop
or
push
push
inc
sub
mov
sub
lods
jle
pop
subb
int3
and
xor
dec
or
loopne
cmp
pusha
cmc
dec
sbb
xchg
out
cmp
lcall
mov
cltd
out
add
std
daa
loopne
jbe
imul
inc
sub
cmp
cmc
adc
imul
mov
outsl
clc
aam
incb
jl
rcl
ja
xor
inc
lea
pop
out
test
or
outsb
mov
or
sub
nop
daa
push
jne
das
xor
cs
es
xor
lea
xchg
outsb
push
mov
shr
xor
cmpsb
ret
xor
inc
cmp
inc
or
and
push
movsb
push
pop
out
mov
hlt
ret
call
dec
pop
jmp
mov
jo
icebp
shlb
adc
xor
lcall
cwtl
jo
mov
inc
push
in
xor
enter
je
fndisi(8087
testb
xor
sub
mov
jo
sub
out
repnz
add
mov
jle
sbb
adc
mov
andl
and
cld
xchg
dec
stos
mov
mov
ja
loopne
pushf
cmp
xchg
fnstenv
lret
cmpsl
cmpsl
jecxz
scas
or
loopne
aam
and
out
push
pushf
fwait
cld
xchg
idivb
xlat
jecxz
fcomps
subb
jb
negl
mov
ret
insl
add
inc
lret
or
fnstcw
jns
add
in
xchg
jmp
dec
test
jo
lock
and
in
imul
sub
js
mov
mov
inc
sbb
decb
popl
lret
or
sbb
jne
xor
scas
stos
into
fcmovu
adc
push
xchg
out
imulb
loop
sub
xor
shrl
fldcw
jns
cmpsb
stos
mov
adc
aaa
add
lahf
into
push
js
loopne
mov
mov
inc
pop
ss
mov
pusha
xor
ret
mov
push
push
ljmp
out
js
clc
cs
add
test
icebp
es
xchg
lret
cmp
in
in
sbb
imulb
int3
cmp
or
and
pop
gs
jo
fs
or
jle
add
nop
cmp
pop
and
loope
out
jbe
push
je
jnp
mov
les
inc
fldl
xlat
cs
repnz
arpl
jns
cs
mov
mov
jl
loop
cmpsb
out
dec
xchg
addr16
gs
jp
inc
push
test
lahf
jbe
leave
int3
mov
insl
std
xchg
lahf
fisubl
iret
arpl
push
insl
int
sbb
cmp
jns
xor
cmp
aam
pop
repz
adc
jmp
lock
adc
cmpsl
cmp
leave
lock
adc
loopne
icebp
enter
inc
push
adc
inc
push
lret
int
leave
int
inc
jecxz
inc
mov
cmpsl
out
pop
mov
or
imul
cmp
aad
shlb
lods
jb
inc
fldcw
push
xchg
pandn
aas
xlat
dec
loopne
rolb
jnp
pop
push
fcoms
repnz
lret
xor
aam
xchg
and
xchg
sub
gs
cmp
aas
push
push
cltd
stc
pop
iret
dec
sbb
mov
mov
dec
jns
pop
jmp
or
cmp
mov
imul
aam
test
movsb
inc
lods
std
bound
xor
inc
fdivrs
iret
mov
jne
inc
jo
xchg
lret
adc
push
cld
pop
and
mov
ret
arpl
add
xchg
push
xor
sbb
cld
xor
xchg
lret
lods
rolb
arpl
in
mov
mov
fs
or
outsb
mov
mov
pop
inc
sahf
jnp
sub
femms
mov
mov
mov
mov
jle
pop
add
mov
or
jo
push
xlat
pop
jp
push
imul
adc
dec
jl
mov
ret
icebp
push
rclb
mov
idivl
or
jns
call
lret
or
lock
ljmp
sti
xchg
and
aam
cmpsl
push
nop
scas
orb
stos
imul
add
mov
out
xor
push
mov
enter
push
sbb
lret
mov
aam
imul
movsl
das
jne
bnd
in
add
inc
or
sbb
ss
loop
aaa
bound
jae
add
xchg
sub
mov
xchg
xchg
lods
add
mov
and
inc
fbld
jne
les
or
mov
out
ss
stc
xchg
xchg
loope
sarb
rcrb
mov
jmp
mov
test
pop
mov
scas
loopne
sbb
mov
dec
cmp
push
hlt
adcb
dec
and
insl
fcmovnbe
popf
fs
shl
and
out
ret
pop
nop
rcr
push
cmp
jb
arpl
arpl
rcrl
fstpl
mov
sbb
es
das
mov
cmpsl
movsl
fcoml
xchg
ja
in
mov
data16
fstpt
fdivrs
scas
popa
sub
cli
add
fsubrs
mov
popf
lods
cvttps2pi
xchg
sbb
js
mov
mov
sti
push
ss
mov
add
fsubrs
jp
jae
fdivl
fisubl
xor
push
in
js
imul
scas
das
dec
push
cmc
mov
es
and
imul
add
es
clc
popl
sub
or
sub
add
xchg
add
hlt
pop
xor
push
jb
clc
dec
jne
cmc
ja
inc
insl
cmp
jnp
bound
pop
dec
cli
in
push
pushl
lods
ljmp
shll
push
adc
orl
xchg
sahf
dec
scas
inc
inc
fbstp
and
jle
sub
pop
sbb
jl
or
fstpt
or
dec
sbb
int
adc
hlt
rclb
xchg
ljmp
movsb
adc
loopne
xchg
mov
mov
mov
js
xchg
mov
inc
lret
cmc
inc
outsl
ljmp
mov
and
insl
fdiv
nop
daa
es
lcall
and
push
fildll
jg
inc
insb
rol
out
xchg
ljmp
outsb
aam
xor
loopne
xchg
xlat
jb
callw
and
movsl
xchg
add
outsb
push
sbb
stc
clc
inc
daa
sub
or
test
test
add
mov
adc
inc
xchg
movsl
xor
stc
cmpsb
pop
pop
jne,pt
pop
call
cwtl
dec
inc
fnstsw
scas
lret
pop
out
jae
xchg
cs
shlb
jo
add
jecxz
arpl
outsb
xchg
inc
mov
cli
mov
push
rcll
sbb
cmp
scas
rcll
mov
leave
int3
mov
fildll
stc
incb
xchg
xor
cmpsb
icebp
movsb
sbb
mov
daa
push
shll
lds
js
es
xlat
xchg
xchg
test
push
adcl
sub
or
imul
into
mov
mov
or
std
lods
dec
inc
data16
fxch
fnstcw
push
rcr
mov
mov
sub
push
nop
adc
and
roll
or
mov
mov
xchg
pop
iret
mov
mov
push
mov
jl
inc
ss
jle
cli
push
add
clc
mov
fldt
shlb
popf
cld
mov
dec
mov
jb
stos
lret
sub
roll
fsubl
sbb
inc
inc
and
mov
loopne
adc
pop
jns
cmp
imul
pop
test
lret
popa
cwtl
paddw
cmpsb
pop
sub
dec
bound
push
sub
ret
pusha
inc
inc
dec
out
dec
and
dec
fldenv
cmpl
pop
jo
add
mov
out
adc
pop
mov
aam
std
mov
mov
cmp
mov
push
push
xchg
adc
adc
or
mov
adc
fists
dec
aas
dec
mov
xor
mov
inc
dec
cmp
mov
pop
out
fistps
push
mov
sub
les
add
sbb
bound
shll
les
ss
test
test
or
pop
dec
andb
cltd
lods
xor
jae
jae
mov
pop
jg
jb
jb
xor
pushf
or
into
test
outsl
and
push
jl
push
fnstenv
dec
fnstenv
inc
pusha
mov
iret
sub
pop
in
or
outsl
push
fldenv
or
jle
adc
aam
aas
or
clc
int
call
rcrl
aad
and
cmp
mov
arpl
inc
in
int3
std
mov
and
mov
sti
fcoml
ljmpw
fs
pop
mov
jbe
mov
outsl
push
fiaddl
or
out
shl
jnp
and
cmp
sub
sahf
movsl
cmp
mov
inc
add
insl
xchg
mov
int
mov
sahf
test
dec
mov
adc
scas
jae
xchg
shlb
jle
in
lods
ret
and
jbe,pn
int3
test
outsb
cmpsb
dec
popa
push
cmp
dec
lock
pop
sbb
cmovns
dec
jnp
out
xchg
das
mov
ret
ret
pop
scas
sub
cmpsb
dec
bound
xchg
in
stos
xlat
mov
mov
jnp
mov
xchg
dec
repnz
lret
pop
mov
xorl
push
mov
fsub
jle
xor
add
and
hlt
mov
mov
adc
inc
jbe
inc
ds
addr16
jbe
inc
ljmp
repnz
jne
jecxz
inc
loopne
das
adc
push
pop
in
test
adc
aaa
mov
jne
mov
fistl
sbb
mov
mov
insl
jge
sub
pop
call
cwtl
testl
push
les
pop
push
add
xchg
xchg
ss
fsubrs
cmp
scas
dec
mov
xor
or
xor
xchg
cmp
in
dec
imull
mov
cmpsb
imul
cmp
sub
pop
cltd
xchg
pop
lahf
mov
dec
out
test
fdivrs
int
pushl
pop
xor
xchg
fwait
push
std
cmp
xchg
adc
lea
mov
imul
and
es
sti
out
mov
loope
out
jne
pop
xchg
xchg
sahf
sub
mov
jle
aad
mov
testl
jge
lret
out
movsb
lret
sbb
jmp
lds
test
sub
stos
orb
and
enter
inc
dec
push
cli
and
aaa
pop
add
mov
push
scas
lods
mov
mov
pop
jl
jge
jp
cmp
inc
inc
in
repz
out
ja
loopne
mov
iret
inc
add
fisubs
add
xchg
dec
inc
mov
cli
mov
stos
adc
sahf
cmpsb
or
in
dec
daa
cmp
or
sbb
sbbb
mov
repnz
push
and
cmp
mov
sbb
rclb
div
ja
in
shlb
jb
push
pop
int
mov
mov
aam
leave
enter
repnz
aad
test
or
jno
lock
pop
loop
jl
add
pop
jecxz
out
das
dec
pushf
js
dec
fldt
cmp
enter
lock
shlb
adc
lret
jne
cmp
mov
sbb
ror
bound
je
enter
insb
pop
cmp
jle
sbb
out
push
movsl
xor
outsl
ret
test
test
je
imul
sub
sti
pop
dec
neg
jb
xor
ljmp
xor
or
pop
sbb
addr16
mov
iret
adc
sub
mov
sub
push
lds
inc
fidivl
pushf
fmuls
pop
mov
leave
sub
mov
scas
stos
and
clc
lods
xlat
or
add
loop
scas
out
loopne
imul
mov
out
pushf
push
ret
movsl
nop
call
mov
pop
nop
or
shrl
into
pop
dec
cmp
sub
add
inc
or
pop
mov
fxch
orb
inc
ficoml
mov
fiadds
mov
add
loop
sbb
test
ljmp
ss
jg
fldt
negb
ja
sub
or
mov
jle
push
pop
add
das
inc
fs
aad
sub
dec
into
cmp
mov
in
and
mov
lahf
push
out
lahf
sbb
insb
mov
in
xchg
pop
in
xorb
outsb
out
test
xchg
stc
in
dec
inc
aam
mov
lods
mov
int
repz
or
adc
loopne
in
out
jnp
push
ss
gs
ds
ljmp
cmp
in
cmp
in
mov
mov
inc
rcrl
daa
and
mov
dec
inc
popa
cmp
mov
xchg
pop
add
dec
rcrl
rol
loope
outsb
cltd
sub
pop
mov
test
jno
cmp
sub
iret
cmpsb
adc
or
imul
aad
xchg
dec
rcll
xor
push
bound
cltd
insb
pop
sub
ret
adc
hlt
cmp
mov
mov
jg
sti
pusha
push
sbb
pop
xchg
cmp
icebp
rorl
std
xchg
inc
jle
cmpsl
bound
mov
push
outsb
push
xchg
cmp
inc
jbe
mov
mov
push
jecxz
pop
rep
inc
mov
jne
imull
and
sbb
ret
in
xor
push
std
pop
add
adc
mov
and
jle
test
stos
nop
dec
jno
jle
dec
fsubrl
pop
stos
dec
loope
and
std
pop
sbb
pop
repz
sarb
movsl
out
test
pop
lret
sti
cwtl
jp
lret
cli
icebp
ret
jge
aas
fwait
xor
int3
push
aas
movsb
test
lret
out
jmp
pmuludq
cmp
sbb
lret
bound
leave
jmp
pop
int3
stos
mov
lcall
test
or
test
out
mov
in
xor
bound
stos
dec
mov
jo
cmp
ds
pop
jmp
pop
inc
inc
test
shll
test
enter
ret
popa
nop
inc
loop
mov
test
inc
pop
test
jnp
dec
adc
scas
inc
loope
push
popa
or
jmp
inc
and
xor
incl
lret
push
adc
dec
mov
clc
hlt
aad
jmp
imul
inc
lods
mov
cmpsl
fs
push
scas
icebp
test
mov
pop
das
out
mov
addr16
imul
pop
or
sbb
cmp
xchg
incl
and
mov
pop
pop
fldcw
insl
das
mov
xchg
test
jnp
jp
sub
rcr
mov
das
leave
jge
repnz
pop
xchg
lcall
cmpl
jle
and
adc
fwait
std
test
jcxz
mov
and
fbstp
inc
mov
popa
adc
ret
mov
push
out
push
mov
dec
pop
pop
xor
cmc
insb
aas
push
pop
sbb
dec
cmp
nop
outsb
addr16
sbb
andl
enter
xchg
cmp
adc
leave
flds
arpl
sar
lret
xchg
lds
xchg
mov
push
cmpsl
mov
inc
popa
arpl
addr16
leave
bound
test
ret
adc
pop
call
mov
push
pop
sahf
aaa
mov
and
inc
jle
cmp
or
popa
cld
mov
xor
and
mov
sub
ret
dec
rorb
jns
mov
rcrb
push
pop
xor
sbb
aas
cmp
subl
out
pop
or
cmp
leave
insb
or
ret
mov
adc
stos
cld
lcall
in
push
sbb
cs
cmp
test
dec
mov
mov
lret
sbbl
into
fiadds
ljmp
jae
pop
sub
push
lea
cmc
and
mov
push
inc
jnp
jae
out
push
lahf
push
es
or
bound
cs
popa
mov
jp
stos
fistps
or
xchg
jp
jne
lret
xor
lcall
cwtl
or
mov
xchg
mov
pop
pop
mov
addr16
or
daa
mov
mov
jno
sahf
leave
add
or
jne
mov
movsl
pop
arpl
imul
loopne
xor
gs
cmpsb
cmpsl
mov
ret
ret
sub
imul
pop
jbe
cmp
mov
xlat
aam
imul
leave
sbbb
sub
pop
fidivrs
push
and
aad
jb
sub
shrb
add
or
aas
jno
mov
and
xchg
sub
inc
lret
push
aas
fwait
add
sbbb
pop
adc
sub
ficompl
or
mov
and
hlt
sub
rcl
push
dec
jmp
and
jno
and
push
into
mov
insl
cmp
pop
out
cmpsl
mov
mov
hlt
xlat
mov
sub
xor
mov
lds
ljmp
rorl
xor
sbb
mov
pop
out
cli
xchg
mov
or
ds
add
or
outsb
inc
dec
ret
nop
push
xchg
adc
mov
mov
fwait
push
divb
xchg
test
popa
jne
mov
je
xor
out
addb
inc
lret
adc
push
inc
inc
iret
fisubrs
stos
push
aas
dec
inc
subb
push
sub
lods
or
push
adc
inc
jl
js
popl
lret
sbb
jecxz
pop
pop
mov
fs
rcrb
sbbb
inc
xchg
sub
out
pop
aas
and
cmp
rolb
cmp
jecxz
in
mov
je
divl
fcompl
cmp
pop
jmp
outsb
call
mov
xchg
fsubr
popa
cmp
jb
mov
leave
in
mov
je
mov
sbb
fstpl
in
push
addb
xor
xchg
ljmp
push
mov
test
dec
push
int3
and
pop
sub
jne
dec
push
fs
cld
pop
jl
jmp
mov
cmp
add
lahf
mov
int
cmp
in
pop
cmpb
inc
push
cmp
push
pop
adc
sub
lahf
xchg
inc
sbb
jno
out
mov
cwtl
xor
xchg
lret
aam
or
popa
jbe
call
fldenv
or
inc
push
inc
sbb
test
ss
in
rcll
cmpb
push
mov
jae
jp
push
sbb
outsl
out
sahf
je
xchg
jmp
push
cld
sahf
add
mov
lds
lds
mov
je
xchg
add
xor
je
fwait
adcb
xchg
movsb
inc
outsl
sub
jns
xlat
lock
stc
jo
lahf
mov
mov
dec
insb
and
mov
jae
es
mov
cli
inc
xchg
mov
xor
int
leave
pusha
xor
les
loopne
sub
fisubs
xchg
xchg
cmpsl
sahf
scas
arpl
pop
out
std
push
adc
sbb
sub
rcr
mov
int3
pop
push
sub
imul
cld
push
or
addr16
cwtl
inc
pop
mov
sbb
bound
mov
jge
jb
mov
lahf
jnp
fdivrs
cmp
imul
sub
ret
dec
loope
mov
cmc
xor
call
cwtl
adc
arpl
mulps
pop
ljmp
stos
jnp
fldl
cmp
sti
dec
dec
and
sbb
cmc
cmpsl
sbb
jne
sbb
iret
mov
ficoms
decb
jp
add
test
add
into
iret
inc
cli
add
add
je
sbbl
dec
or
mov
xchg
and
adc
in
inc
pop
pop
clc
aaa
lea
and
lds
mov
mov
lds
pop
and
into
loopne
jl
mov
lods
mov
jl
push
je
and
ret
cs
lahf
ss
push
jb
mov
pop
lock
test
xchg
sub
push
adc
ss
sub
mov
xor
repz
hlt
hlt
push
out
push
fidivrl
inc
xchg
mov
jle
mov
xchg
lods
fadd
xchg
add
jge
pop
ja
lahf
push
mov
push
cmc
cmp
adc
jl
add
xchg
fisttps
pop
inc
stos
es
cmp
cmp
or
mov
lcall
cwtl
sub
leave
mov
ds
in
pop
das
push
dec
daa
mov
inc
lcall
fsubl
in
pushf
push
loopne
mov
pop
push
ja
test
bswap
nop
daa
cli
xor
xor
testl
push
fsubrs
jns
jb
mov
xlat
push
add
cmp
mov
test
inc
pop
xor
rcr
pop
push
cmc
js
popa
pop
mov
std
xlat
mov
test
jecxz
ror
pop
push
rcl
lock
int
and
pushf
cmp
int
or
push
pop
imul
pop
mov
inc
adc
cs
sub
jp
ret
or
cmpsl
adc
ss
ljmp
je
push
in
aaa
sti
xorb
pop
sbb
es
in
xor
inc
ss
cli
iret
mov
dec
je
pusha
xor
pop
mov
cli
push
add
in
push
sub
cmpsl
push
scas
mov
sbbl
repnz
nopl
xor
push
pop
test
test
lret
dec
dec
data16
test
call
dec
dec
push
push
add
scas
lret
je
push
and
stos
jbe
inc
ficoms
into
cli
shrl
pop
inc
fadds
mov
inc
loop
pop
ret
int
ljmp
pop
sbb
test
cwtl
mov
sub
orl
repz
xchg
cmp
mov
adc
pusha
sub
mov
lea
stos
je
or
push
or
add
out
xor
xchg
mov
fstpl
cld
pop
pop
loop
mov
sbb
mov
in
cmpsb
fwait
mov
xchg
mov
xchg
scas
mov
and
xor
or
push
enter
add
mov
dec
pop
pop
pop
addr16
in
cltd
test
addr16
je
jns
stc
push
or
mov
notl
lret
mov
jbe
scas
inc
orb
adc
xor
fxtract
fidivl
add
shlb
fdivs
xchg
in
jbe
sti
repz
loope
gs
push
add
add
mov
mov
insl
out
lahf
lret
push
insl
int3
xchg
dec
dec
in
jne
test
or
std
sahf
dec
les
scas
pop
cli
dec
and
movsb
cli
mov
into
dec
mov
movsb
out
or
jae
loop
mov
mov
in
add
adc
pusha
inc
in
inc
push
gs
bound
hlt
jo
stos
shll
lahf
jbe
les
xchg
sahf
xor
loopne
cmp
mov
jo
sarl
xchg
leave
dec
pop
ret
pop
mov
test
mov
mov
jno
xchg
mov
jle
test
and
add
aam
sbb
movsl
jno
adc
stc
stos
pop
rorl
test
jmp
mov
movsl
repnz
ret
inc
sbb
jl
int
loopne
xchg
mov
mov
mov
js
in
xlat
dec
test
push
outsb
test
xor
push
iret
xor
cmpsb
sar
insb
inc
mov
hlt
adc
dec
cmp
insl
stos
inc
shlb
cmp
leave
push
fadds
xchg
stc
jecxz
loope
aas
mov
jo
ss
loopne
add
sbb
outsb
xorl
xlat
jbe
bound
iret
mov
out
vunpcklps
mov
pushf
push
in
dec
das
cmovge
in
test
notl
shr
test
lahf
add
xor
dec
adc
ljmp
push
or
scas
push
fwait
jmp
ficompl
xchg
call
cmp
cmp
fistpl
jne
cwtl
sbb
les
sbb
push
test
cmp
mov
inc
cmpsb
aaa
xchg
pop
push
lret
insl
jb
sbb
jmp
subb
mov
es
inc
inc
pop
in
mov
je
xor
and
pop
rcll
xor
pop
adc
xchg
out
loop
outsb
fwait
add
push
sbb
rcll
add
xchg
sar
popa
dec
cmp
movsb
stc
xchg
and
xlat
in
stos
mov
pop
dec
add
bnd
pop
mov
dec
dec
outsb
sub
cmp
xchg
icebp
dec
pop
fsubr
daa
ret
and
xor
in
insb
fs
xchg
dec
add
ss
mov
mov
add
int3
sub
scas
cmp
pushf
and
mov
gs
adc
pop
sahf
lds
jae
or
mov
sub
cmpsb
icebp
seta
push
pop
lret
jb
cmpsl
ret
out
xchg
sub
add
daa
test
lret
negb
mov
pop
jae
sbb
jnp
cmp
xchg
lock
inc
mov
push
test
ljmp
icebp
inc
and
dec
test
xor
icebp
js
push
in
inc
stos
in
fwait
insl
cmp
sarb
ss
loope
sbb
pushf
push
loop
movsl
loop
out
fisubrl
into
loope
push
adcb
inc
push
es
push
cltd
xlat
popa
imul
lcall
dec
idivl
cld
stos
daa
cwtl
add
and
mov
and
add
add
jge
inc
jo
cld
adcl
in
lcall
jp
jecxz
pop
out
ret
ret
mov
test
ret
mov
enter
cmpsl
out
sbb
dec
test
mov
xchg
push
jmp
ret
jb
add
ja
rcrl
scas
push
xor
jo
xchg
sub
xchg
cmp
or
mov
movsb
or
stos
les
sub
loope
xor
inc
popf
mov
add
fldl
mov
test
cmp
sub
sub
mov
xchg
scas
pop
shlb
pop
xlat
xor
mov
icebp
mov
jp
das
jg
movsb
sbb
mov
sbb
lret
jne
call
xor
lods
mov
cmc
jle
push
sub
call
pop
sahf
fwait
cmp
jnp
xorb
test
and
xor
ljmp
pop
in
sbb
fwait
and
sub
sbb
subb
mov
mov
fidivl
jg
mov
adc
pop
push
sub
dec
and
add
pop
xchg
cli
jmp
fildl
xor
loop
js
mov
stc
popf
das
fs
sbb
pop
imul
adcb
dec
jbe
push
push
sahf
dec
cmp
es
mov
sbb
adcb
jno
mov
fmuls
call
mov
xchg
jnp
cltd
xchg
nop
sub
adc
fsts
add
js
ss
inc
xchg
add
cmc
xor
sbb
ljmp
sbb
iret
imul
sbb
inc
pop
mov
xor
jmp
into
sbb
bound
mov
mov
pop
lcall
or
es
cmp
test
cli
push
popf
lods
mov
dec
mov
adc
pusha
xor
fadds
in
sbbb
xchg
mov
jae
das
test
ljmp
das
inc
imul
fimull
outsb
and
sub
into
and
inc
and
mov
pandn
xchg
out
mov
rclb
or
adc
pop
mov
out
mov
aaa
cmp
fwait
sbb
and
adc
aam
jge
jae
loope
pop
mov
out
daa
dec
leave
int
or
das
cmp
out
mov
imul
pop
fwait
push
xor
shrl
and
aad
daa
shrb
push
cltd
push
fldenv
fmulp
push
mov
dec
or
xor
jmp
insl
cmpsb
push
xor
pushf
jno
sbb
cmpsl
loope
repnz
add
mov
gs
pushf
in
jnp
push
cwtl
jbe
mov
outsl
leave
jge
jp
arpl
and
test
loop
test
lret
les
push
mov
andl
adc
dec
or
aad
inc
stos
jmp
ds
adc
das
mov
mov
bound
lods
lods
sub
stos
aaa
popa
cmpsl
inc
dec
pop
ja
and
sub
add
outsb
popf
add
or
scas
mov
push
push
int
fwait
push
and
bound
mov
rcl
scas
adc
mov
subb
sbb
scas
mov
push
inc
aas
rorl
mov
pop
push
mov
adc
subb
pop
xor
jle
movsl
les
xchg
in
rorb
pop
es
dec
aas
dec
inc
js
cmp
std
faddp
bound
sbb
dec
lods
inc
insl
or
xor
iret
cli
push
add
push
adc
push
and
andl
mov
lret
jl
add
imul
cltd
jb
sub
inc
push
into
and
cwtl
stos
lods
mov
out
dec
fstps
xor
fmuls
das
roll
or
xchg
popa
sbb
stos
jg
jmp
mov
xchg
push
sbb
adc
fcomi
scas
inc
mov
and
xchg
add
push
andb
minps
mov
js
add
shll
js
dec
xchg
scas
and
sub
sub
mov
nop
push
inc
push
and
mov
xchg
popa
cmp
icebp
xchg
cmc
ret
sub
mov
decl
repz
push
je
add
and
popa
orl
inc
sbb
jecxz
test
test
loop
pusha
adc
cmc
out
stos
ds
mov
and
ss
jns
pop
mov
mov
aad
das
pop
push
pusha
pop
jbe
mov
and
adc
stos
sub
repz
pop
adc
js
bound
icebp
jnp
sbb
adc
rol
fldpi
mov
mov
lcall
jl
pop
mov
movq
sbb
pop
lods
pusha
mov
shll
push
lret
pop
sbb
dec
pop
stos
notl
lret
add
push
js
in
stos
mov
cmp
adc
mov
jb
adcl
cmp
pop
or
xor
mov
or
mov
imul
fdivrl
or
lods
js
pusha
and
push
aas
jns
add
mov
in
pop
outsl
lcall
inc
fcmovnu
ret
stc
stc
jmp
push
cmc
cmp
mov
hlt
jl
mov
enter
cmpsb
cmp
out
mov
add
lds
mov
push
sbb
das
rolb
daa
pop
out
pusha
push
mov
or
push
mov
inc
mov
in
xor
lds
cmc
cmp
dec
fildl
test
out
bound
fisubs
pop
mov
lods
push
outsl
sub
rcrb
mov
inc
decb
sbb
cmpxchg
out
pop
xchg
ja
pushf
lds
fisubs
add
imul
fadd
xlat
icebp
xchg
xor
out
push
xor
or
and
scas
pop
mov
fwait
jae
adc
mov
fnstcw
pop
xchg
jae
test
and
sarl
adc
adc
xor
jnp
jo
les
jbe
sub
sahf
jecxz
lods
out
inc
aam
in
mov
imul
out
sarl
clc
xchg
cmpsl
cmp
adc
outsb
fsubrs
outsb
jne
xchg
inc
or
out
xchg
and
es
pop
cmpsl
and
adc
xchg
cmp
jns
push
psrlq
bnd
inc
ret
test
dec
aam
dec
mov
jg
arpl
pop
push
or
pushf
adc
jmp
jnp
adc
and
mov
mov
jo
xor
cmc
int3
icebp
in
jle
int3
sbb
and
sbb
insl
pop
sub
sahf
pop
call
pop
inc
out
mov
movsl
iret
push
xchg
cmp
cltd
ss
sbb
mov
sub
mov
xchg
add
je
out
inc
adc
jp
or
vmread
ljmp
inc
in
out
lret
lcall
pop
data16
outsl
jge
jle
adcb
sub
cmc
mov
ljmp
adc
fst
cmc
dec
into
movsl
lds
mov
add
push
mov
push
pop
outsl
push
push
repz
mov
inc
mov
and
sbb
aas
lahf
jb
outsb
data16
mov
inc
cmp
jne
sbb
xor
add
in
dec
pop
in
mov
outsb
pop
mov
xorb
lods
fwait
mov
sbb
jp
jl
xor
or
jnp
xchg
sub
pushf
mov
jecxz
mov
add
or
rol
dec
lcall
popa
clc
or
pop
scas
bswap
add
xor
ret
clc
xchg
arpl
inc
fsub
pop
inc
out
sbb
scas
rol
xor
addr16
rorl
pop
mov
loopne
and
addr16
dec
mov
add
pop
das
mov
push
outsl
xor
mov
push
jno
dec
mov
jmp
lods
sarl
shll
pop
repz
pop
stc
jecxz
inc
add
mov
subl
arpl
sub
lea
or
xchg
jno
cltd
inc
mov
xlat
and
or
rcrb
data16
inc
dec
lret
int3
xlat
lea
mov
add
sub
or
es
pop
sbb
cmp
jbe
scas
clc
push
orl
inc
mov
andb
mov
mov
xchg
jge
adc
scas
xchg
pop
test
adcb
push
or
ficompl
pop
xor
pop
cmp
ret
and
mov
mov
sub
xor
enter
jecxz
xor
shl
cltd
test
out
int3
mov
sbbb
add
shlb
pop
jno
xchg
mov
popf
xchg
and
test
mov
fmul
pop
mov
cli
inc
jae
adc
cwtl
ss
lret
cmp
sets
push
sbb
inc
cmpsl
repnz
shl
jge
out
mov
loop
scas
push
icebp
divl
dec
xchg
nop
xchg
dec
outsl
push
jmp
jl
call
cmc
adc
repnz
in
mov
iret
rol
jb
test
and
or
xor
push
test
addr16
jbe
inc
xor
bound
leave
fwait
or
sbb
es
cmpsl
int3
jg
and
push
std
data16
dec
and
cmp
sub
inc
cmpsl
xorl
fs
iret
sbb
lret
push
jb
dec
ja
dec
mov
sbb
or
movsl
xchg
push
sbb
fcoml
popf
lods
jne
sub
push
andb
add
into
insl
scas
rcl
shrb
mov
leave
jb
rcrl
cs
gs
dec
sbb
pop
out
fisubs
test
and
xchg
push
in
xchg
push
das
jle
xor
shl
test
dec
dec
fcmovbe
pop
xor
jno
imul
aad
mov
stos
ja
es
or
pop
fwait
clc
cmpsl
iret
push
test
loopne
jae
add
aam
sub
dec
cmp
insb
cmp
fcompl
lret
push
imull
iret
push
sub
mov
fldenv
aam
xlat
icebp
adc
jg
imul
fildll
push
pop
stos
aas
jnp
nop
std
dec
pushf
outsl
sbb
dec
popf
add
cmp
cmp
pop
loopne
cmpsb
pushf
sub
cwtl
adc
jl
pusha
dec
pop
imul
iret
jnp
shlb
mov
jne
xor
idivl
popf
jno
dec
mov
test
mov
adc
pop
insb
aas
jbe
xor
push
sbb
mov
cltd
psadbw
sbb
jmp
imul
addl
cvttps2pi
shlb
jle
fxch
push
inc
lock
or
les
fcomps
clc
push
test
xchg
loope
sbb
js
push
shlb
mov
dec
cmp
add
dec
pop
jne
scas
inc
aam
fsts
int
and
add
cmc
xchg
out
cli
arpl
cmp
mov
inc
fcompl
adc
lock
sahf
xor
cli
cwtl
inc
sbb
dec
nopl
mov
and
test
xchg
sub
int3
jbe
xchg
and
or
sbb
sub
adc
mov
or
cs
fs
mov
cltd
adc
out
inc
aam
cwtl
lret
aad
and
clc
arpl
xchg
rorl
jae
cmp
adc
pushf
in
int
out
lds
pop
aad
rcrl
mov
adc
int3
lret
loopne
cmpsb
enter
push
jns
xor
jns
enter
je
imul
fidivrs
daa
cmp
ja
push
sub
push
inc
push
cmp
in
mov
xchg
loopne
sbb
sub
nop
mov
cmc
jbe
xor
leave
mov
daa
and
pop
adc
aas
mov
enter
cmpsb
dec
lcall
mov
xor
sbbl
push
pusha
mov
push
fmul
xchg
ds
test
lahf
push
inc
js
in
bound
sbb
movups
cmp
shrb
movsb
repnz
js
cs
add
pop
sub
adc
jl
cmpsb
mov
push
or
popa
jl
mov
push
insl
shr
push
jmp
loope
nop
nop
mov
add
lahf
cmp
and
lock
lcall
cmp
lret
movsb
repnz
jmp
adc
add
ljmp
mov
mov
inc
xchg
add
sbb
sbb
out
outsl
push
pop
imul
dec
and
adc
adc
sbb
lahf
push
mov
or
dec
mov
sub
aas
jo
loop
add
mov
jb
shlb
dec
xchg
push
and
popa
and
loope
dec
pop
adc
ss
cli
dec
or
movsb
push
subl
push
and
ds
cmc
add
test
pxor
rorl
fcoms
cmpsl
jecxz
and
ljmp
pushf
xor
cwtl
adc
mov
cmc
ja
fdivrs
int
mov
inc
cmp
imul
sarl
add
leave
std
sbbl
jl
push
mov
mov
cli
and
jg
scas
jno
idivb
ja
out
jae
push
insl
add
lea
ljmp
jge
jg,pn
and
lahf
das
inc
xchg
ss
imul
cmp
fdivl
mov
sbb
bound
lds
lods
adc
mov
inc
mov
cmc
mov
stc
xchg
daa
jmp
or
sahf
or
inc
ds
push
in
inc
xchg
and
fisttpll
sub
lahf
ja
das
mov
bound
sbb
pop
cmp
xchg
jle
mov
jnp
outsb
ljmp
insl
cmp
mov
cmp
lcall
jl
loop
jecxz
js
add
pop
or
xchg
dec
or
pop
jno
je
aad
cmp
divl
sbb
push
jbe
mov
cmc
and
jmp
repnz
stos
or
sarb
in
mov
push
push
jecxz
sub
xor
or
andl
add
lods
out
push
fwait
or
xlat
outsl
js
pop
scas
xlat
out
pop
outsl
xchg
clc
xor
sbb
mov
clc
mov
test
xchg
enter
dec
aaa
dec
mov
push
icebp
rorb
jbe
sbb
fiaddl
pop
daa
xor
fldenv
rorb
inc
and
int3
ds
dec
test
repnz
adc
pushf
popf
jo
pop
sbbb
jle
pop
fistps
out
sbbl
fists
scas
adc
scas
aaa
push
lods
mov
mov
ds
push
xchg
gs
mov
xchg
pop
les
sub
sub
and
pop
std
jo
mov
sar
sbb
loopne
jg
lahf
add
mov
mov
dec
es
fnstenv
fs
push
mov
push
mov
and
shl
lcall
mov
das
cmpsb
mov
lahf
and
jae
in
xchg
hlt
xorl
sahf
jno
syscall
movsb
add
jg
and
pop
data16
ret
rcll
or
subb
mov
das
sub
sub
in
daa
movsb
cmp
mov
xchg
mov
push
enter
pusha
cmp
jecxz
cmp
movsl
divb
cmpsb
andl
ss
into
sahf
incl
cmp
mov
mov
cmpb
cmp
fcmove
popa
push
or
jb
outsb
pushf
stos
in
rolb
ljmp
mov
mov
xor
push
push
lock
aad
not
aam
popl
repnz
fdivl
jg
daa
pushf
lods
xchg
add
out
ss
jne
push
xchg
scas
addr16
fsubrl
xor
and
cmpsl
dec
mov
hlt
shlb
jo
jg
lock
xorb
dec
and
fldt
out
sbb
jg
fdivrs
cltd
std
je
out
mov
imul
xorl
int
adc
mov
dec
push
into
fdivrl
dec
into
cmpl
orl
rdtsc
pushf
xchg
notl
lods
mov
xchg
call
mov
fiaddl
ja
cmp
jns
loope
cli
mov
stc
mov
fdivrl
inc
bound
bound
invd
rcrb
call
sub
adc
outsb
aas
jp
push
cmpsb
xchg
jg
xchg
arpl
or
pop
imul
add
inc
dec
nop
pop
repnz
icebp
int
sub
and
test
jbe
mov
test
hlt
mov
dec
jecxz
mov
loope
aas
adc
loop
mov
xor
mov
dec
cmc
pop
cld
ds
pop
ljmp
cmp
orl
lret
pop
or
mov
sbbl
and
dec
nop
lret
or
mull
inc
subb
popa
mov
and
leave
jne
loopne
mov
rorl
test
mov
std
cmpsl
loope
cs
jns
aad
into
movsl
arpl
pop
insl
jl
repnz
cltd
mov
jo
xchg
mov
adc
push
or
ror
mov
iret
popfw
xchg
sbb
mov
push
add
xor
lea
push
aas
iret
sub
xlat
and
and
push
fldcw
xlat
pusha
nop
jmp
dec
incl
rcl
lods
add
cld
lea
sbb
out
cmp
imull
loopne
dec
push
inc
or
push
hlt
stos
push
push
pop
fstl
jns
lcall
xchg
push
mov
shl
xchg
flds
repz
lds
pop
and
mov
dec
leave
inc
sahf
fsubrl
add
sub
fwait
jo
adc
pop
xorl
testl
sub
cmc
or
les
xchg
rclb
icebp
enter
lds
enter
add
bound
xchg
mov
adc
jp
pop
xor
arpl
pop
filds
xor
push
xor
out
test
mov
cmpb
pushf
mov
sub
in
les
add
jmp
stos
out
push
adc
sub
cmp
stos
cmp
jnp
pop
push
or
jnp
cmp
rorb
addr16
mov
fimuls
xchg
jge
sbb
or
push
sub
adc
ja
adc
dec
dec
das
mov
mov
xchg
in
das
xor
ljmp
jmp
je
in
shr
pop
cmp
mov
mov
jge
mov
adc
fstpt
add
lods
pop
pop
jne
lahf
sub
stos
xchg
mov
inc
add
dec
pop
mov
xchg
aas
adc
jnp
adcb
jecxz
test
push
insl
sub
push
mov
leave
mov
mov
cld
fcomps
xchg
sbb
int
xor
cmp
adc
push
fsub
pop
jne
pop
das
adc
push
sbb
jl
and
mov
mov
push
or
and
mov
pop
xor
andb
sub
mov
dec
ret
clc
pop
inc
inc
xchg
push
js
ret
push
or
cli
jp
mov
or
sub
sub
inc
xchg
mov
xchg
cmpsl
andb
mov
mov
pop
xlat
sub
das
jno
in
xchg
sub
into
cmp
dec
sub
clc
inc
mov
pusha
aam
shlb
icebp
cmpb
iret
stos
test
sub
pop
icebp
push
pop
add
add
sti
jb
je
mov
mov
xchg
popa
inc
aas
fidivrs
jl
clc
xor
das
xchg
lret
lret
fwait
add
mov
jo
stc
int
outsb
sbb
movsb
enter
dec
or
sub
loopne
dec
popf
adc
adc
scas
jmp
test
clc
iret
ja
dec
imul
lret
pop
scas
call
inc
mov
ret
mov
xor
jae
xchg
add
subl
jmp
fcmovu
and
push
ret
rorl
lret
pop
rol
repnz
loopne
pop
pushf
in
jns
into
adc
mov
subl
dec
rcll
arpl
addr16
push
push
mov
jge
lea
xchg
lods
dec
xor
ja
js
pop
stos
mov
in
jno
test
sbb
mov
mov
sub
sbb
addr16
fs
or
xchg
addr16
outsb
ss
ljmpw
add
mov
cmpsl
sahf
data16
mov
divl
dec
push
out
push
gs
repnz
lods
stc
inc
push
incl
xor
xor
cmc
push
mov
jl
aas
pop
out
test
cmc
popf
bound
mov
pop
insb
dec
cli
out
push
sbb
scas
dec
out
pop
negb
fdivrl
mov
iret
xchg
pop
xor
int
lret
fbstp
cmp
lods
dec
and
xchg
lahf
gs
mov
addr16
jne
orb
mov
push
add
cmp
faddp
imul
push
cmpsl
psubq
mov
adc
dec
int
mov
adc
push
testb
insl
jo
jl
cmpsb
and
pushf
or
das
cli
rorl
adc
mov
cmc
jo
mov
aaa
mov
xchg
test
sub
das
enter
out
or
dec
mov
xchg
mov
mov
insb
and
mov
ss
pop
mov
xchg
jge
pop
mov
jle
fwait
mov
or
xor
lret
mov
cwtl
mov
enter
inc
adc
push
pop
decl
arpl
stos
hlt
call
loopne
jnp
mov
stos
jae
pusha
stos
mov
push
dec
pop
sbb
bound
mov
shrl
stos
cmp
mov
popa
cs
jb
jnp
inc
dec
pop
cs
shrl
dec
jecxz
inc
mov
xchg
jle
lret
out
loop
cmp
nop
add
lcall
mov
adc
add
inc
lcall
mov
test
push
jns
push
movsl
push
loope
dec
ret
out
mov
or
pusha
mov
loope
inc
in
inc
inc
push
jmp
xor
push
fadds
negb
xor
mov
out
cwtl
test
test
cmp
jecxz
insb
in
sub
movsb
cmp
bound
dec
lock
adc
movsl
cmp
adcb
jg
mov
pop
sbb
mov
adc
stc
ljmp
popf
adc
pcmpeqd
or
in
and
xchg
push
or
addr16
outsb
push
fidivl
pop
dec
lcall
inc
notl
lock
fiadds
gs
push
movsl
mov
adc
push
leave
ljmp
lret
repnz
in
or
push
mov
shlb
nop
nop
adc
addr16
cs
jecxz
call
movsb
pop
ja
pushf
sbb
and
fstpl
rorl
jge
and
js
notb
movsb
sarb
test
ret
pop
adc
or
push
nop
daa
push
xor
scas
nop
mov
dec
push
push
outsl
dec
pop
push
and
lds
or
pop
out
sub
aad
fidivl
fsubrs
cwtl
adc
nop
jbe
dec
insl
mov
inc
fcompl
scas
fxch
pushf
scas
push
mov
push
inc
in
mov
mov
xchg
adc
aaa
mov
stc
sbb
lea
and
add
adc
xor
jg
filds
cmp
scas
add
jmp
loopne
pop
push
fimull
and
xchg
loop
popa
fs
push
xchg
dec
les
enter
clc
jae
pop
adc
repz
jg
cmp
outsl
andl
loopne
mov
mov
pop
dec
repnz
fldl2t
xlat
aad
inc
dec
dec
ljmp
mov
jmp
shll
lods
out
popa
or
mov
or
imul
dec
sbb
call
sbb
jge
popa
mov
scas
ss
daa
movsb
scas
stos
dec
mov
out
cmp
xor
sub
mov
sbb
in
xchg
subl
stos
and
lcall
dec
shll
les
icebp
idivb
iret
int3
dec
pop
lock
inc
cmc
insb
bnd
mov
or
js
mov
sbb
and
push
jbe
sub
pop
mov
das
dec
jns
sahf
in
repz
mov
xchg
lods
jg
pop
int
sub
push
xor
jg
out
mov
lahf
idivl
and
mov
sub
rcl
jb
sbb
jg
andb
push
pop
cmp
jle
pop
cmp
imul
popf
jae
mov
mov
int
pop
cmp
pusha
sub
sbb
mov
in
rclb
cmp
iret
das
icebp
popa
xchg
mov
sbb
test
xor
mov
push
es
iret
test
mov
ss
lret
inc
leave
pop
fs
inc
sbb
cs
lock
push
mov
inc
fs
xchg
pop
sbb
mov
sub
fdivs
loop
idivb
push
jecxz
loopne
inc
cmp
int
rorb
sbb
aas
sub
lock
jbe
imul
cmp
jg
outsb
jle
mov
rclb
mov
mov
fs
cmpl
pop
icebp
cmpsl
sub
imul
loopne
mov
rorl
sub
or
andb
push
lcall
xchg
adc
pop
fpatan
cmp
mul
mov
aaa
pop
lock
xor
adc
cmp
jmp
mov
dec
dec
ds
jmp
adc
int3
xor
xlat
int
idivb
fs
loopne
rcl
inc
sbb
sti
inc
enter
fisubl
out
nop
stc
lea
les
pop
pop
jbe
cs
pop
sub
mov
iret
lretw
push
nop
add
movsb
lahf
pop
testl
ljmp
pusha
xlat
xchg
scas
rolb
cmc
lock
ss
sub
mov
jns
mov
lret
into
xchg
lret
add
pop
cwtl
jecxz
fs
xchg
sub
adc
and
fstpt
cmp
lret
mov
cmp
mov
mov
addr16
adc
fwait
cld
add
mov
sbbl
imul
mov
push
mov
idiv
inc
arpl
inc
xor
insb
sub
push
sbbb
xchg
push
cwtl
dec
imul
mov
notl
insb
xlat
pop
outsb
aaa
fisubrs
dec
xchg
lret
lret
cltd
xchg
cli
push
or
push
jecxz
sub
cwtl
sbb
adc
nop
mov
shrb
pop
in
dec
xchg
push
inc
dec
cmp
cmp
push
popf
mov
dec
sbb
fidivl
sbb
stos
mov
pusha
fiaddl
xor
fbstp
hlt
hlt
ret
js
push
sahf
mov
and
outsb
fmul
or
int
sbb
pusha
aaa
hlt
scas
or
stos
push
sub
fidivs
adc
inc
inc
mov
sti
bound
mov
gs
push
adc
sbb
cmc
xor
sub
sbb
inc
imul
int3
insb
mov
in
hlt
push
cmp
lahf
jbe
jl
stos
lds
ror
pop
daa
xor
in
stos
adc
cmp
and
xchg
in
ljmp
sub
mov
mov
shlb
push
push
arpl
inc
mov
push
mov
aam
andl
call
pop
mov
jge
mov
adc
rcll
invd
mov
imul
push
scas
inc
xor
xchg
and
sub
cld
pop
jae
cltd
or
push
inc
and
push
cli
push
out
fisubs
jbe
popa
pop
bound
out
add
jbe
xor
mov
xor
sbb
mov
int
xchg
xor
repnz
pop
addr16
push
mov
mov
movsb
lods
inc
adc
test
int3
mov
aas
fsubl
jge
loop
outsl
pop
sbb
cld
inc
mov
pop
jmp
arpl
sbb
pop
ret
mov
incl
mov
xchg
cmp
frstor
dec
aad
inc
xchg
sbb
lods
xor
sbb
rol
mov
adc
iret
mov
ret
sbb
fbstp
fcmovb
pop
dec
stc
mov
jg
inc
arpl
arpl
jecxz
cmpl
cld
pop
xchg
sub
popf
and
fcomi
adc
in
jg
jge
cld
dec
mov
jg
jns
sub
shlb
incb
es
pop
in
cli
xchg
push
add
hlt
jnp
fimull
das
js
outsl
ret
or
jecxz
adc
cmp
jns
cmp
or
pop
lret
cmc
mov
loop
xor
cli
mov
mov
cli
add
test
test
cmp
testb
movsb
inc
lock
ret
pop
inc
ljmp
sbb
add
fistps
or
in
push
sub
dec
pushf
sbb
mov
jmp
push
dec
mov
gs
mov
jmp
ret
mov
xchg
data16
lret
aam
outsl
push
pop
jle
pop
insl
divl
adc
into
enter
into
sbb
ljmp
cltd
pop
aad
clc
rcl
scas
mov
into
cmc
pusha
mov
pop
xchg
pop
mov
push
movsl
xor
pop
ja
mov
pop
outsb
mov
fsubs
adc
mov
pop
fdivs
push
outsb
jl
addb
stos
push
push
or
pushf
jg
ficomps
rcrb
cli
sub
sahf
mov
in
push
mov
xchg
cltd
or
es
insl
add
push
aad
popa
xor
pop
mov
cli
jno
sbb
fsubrl
stc
shlb
fadd
loop
mov
fst
popf
sub
mov
jmp
call
xchg
cmp
xchg
aad
mov
add
loopne
movsl
imul
fcoms
outsb
inc
jge
inc
xor
cmp
int3
mov
jl
sbb
arpl
mov
sub
mov
inc
out
shlb
mov
daa
outsl
inc
fdivs
popa
xor
dec
cmp
xorb
push
orb
or
in
jmp
inc
btc
xor
je
fwait
in
test
jle
fbstp
adc
std
dec
cmp
leave
sub
cmpsl
ret
clc
jmp
mov
outsb
or
add
fwait
or
inc
mov
stos
xchg
insl
dec
in
mov
les
stos
inc
pop
xor
lret
mov
retw
mov
xor
mov
pop
push
out
negl
addr16
add
sub
jge,pn
inc
sub
mov
pushfw
xor
daa
mov
lds
rcr
clc
sbb
cmp
adc
xchg
jecxz
push
or
add
add
enter
push
mov
out
sub
and
mov
dec
pop
push
jle
test
mov
fimuls
jg
inc
out
sbb
test
fmul
loop
push
or
test
stc
data16
nop
or
sub
insb
push
pop
jno
mov
push
test
hlt
xchg
sbb
sbb
into
adc
in
mov
inc
dec
adc
cmp
lss
jae
movsl
fisttpll
dec
in
loop
dec
jg
ds
outsl
mov
pop
imul
cmp
sbb
push
jge
add
out
cmp
add
xor
sbb
jne
lret
mov
fstpt
mov
pop
lret
inc
sbb
ja
aas
push
ds
mov
sub
movsl
pop
fisttps
mov
sbb
cld
scas
jp
lahf
stos
mov
lds
data16
push
mov
imul
mov
xlat
push
in
pop
dec
mov
jg
inc
out
xchg
rcrl
adc
and
leave
jecxz
outsb
std
mov
fstpl
loopne
test
push
lods
lods
cmpsb
cmp
faddl
inc
int3
sub
dec
aad
jb
ss
enter
lahf
jmp
leave
push
movsl
aaa
sub
mov
pushf
pop
pop
insl
rclb
pop
fnstsw
cmp
adc
sub
adc
lock
jmp
adc
mov
icebp
mov
stos
lahf
mov
pop
adc
pop
cmc
and
scas
xor
xchg
push
in
adc
push
cmp
mov
sub
xor
jbe
insb
gs
xadd
or
add
movsl
stos
add
push
out
adcb
cmpsb
xchg
popf
and
pushf
jmp
subl
adc
push
pusha
rcrl
inc
sbb
ljmp
mov
lret
aaa
pop
xchg
shr
dec
mov
pop
adc
mov
pop
jb
popa
and
dec
and
addb
jae
pop
cmp
pop
push
pushf
adc
dec
aaa
sti
test
xorl
idivb
dec
push
inc
popa
inc
dec
dec
jnp
inc
sbb
icebp
sbb
pop
scas
ljmp
fsubs
fadds
out
push
test
add
movsb
sub
frstor
loop
sahf
sbb
movsl
imul
aam
rcrl
out
cmp
cld
mov
repnz
fptan
adc
mov
fiadds
test
ljmp
insl
lock
inc
pop
inc
fisubrs
push
imul
and
sub
lods
dec
pop
push
fstps
scas
jmp
dec
fwait
popf
mov
shlb
repnz
cmp
outsl
rolb
mov
sbbl
push
jns
fdivs
clc
cmpsl
push
cmp
ret
popf
cmpsl
notb
dec
dec
adc
sub
mov
out
jns
in
test
or
jecxz
and
jge
jmp
mov
cmpl
adc
xlat
xor
push
adc
dec
call
jae
mov
popf
outsl
pop
jg
cltd
cwtl
inc
addl
jo
subl
push
mov
adc
pusha
mov
sub
push
dec
or
cmp
andb
sub
mov
adc
scas
jecxz
pop
rorl
push
insl
repnz
ror
dec
cli
in
push
mov
and
imul
or
sbb
insl
int
gs
cmpsl
xchg
shll
enter
out
imul
sbb
pusha
adc
lret
orl
adc
or
xchg
mov
ljmp
jg
lret
shll
cwtl
jecxz
sbb
fbstp
pushf
mul
mov
in
jo
fisttps
movsb
outsl
inc
or
cmpb
negb
test
sub
test
test
hlt
mov
daa
subb
xchg
or
push
out
movsb
and
mov
aad
xchg
push
leave
sbb
daa
clc
cmpb
pop
sub
lods
in
push
int
sbb
mov
test
push
icebp
je
leave
pusha
js
jnp
movsl
dec
out
mov
pop
lods
out
es
gs
inc
aas
mov
xchg
jmp
pop
hlt
dec
add
leave
cli
leave
and
notl
adc
jno
pop
xor
dec
push
sarl
jg
sub
adc
and
movsb
mov
mov
stos
push
mov
lea
inc
sub
jbe
push
pop
push
mov
outsb
aad
ret
dec
fsubr
sub
jb
xor
sahf
cmp
test
ss
cmp
ret
cs
adc
fisubrs
insl
sub
cmpsl
push
movsb
iret
push
lahf
cwtl
add
daa
out
and
mov
cmpsl
gs
or
aad
push
mov
call
and
xchg
cmpsl
mov
push
stc
jg
push
out
mov
dec
rcll
sub
bound
int3
fnsave
mov
mov
sub
add
aaa
sti
sub
push
lods
pop
add
stos
mov
jecxz
xchg
mov
push
mov
mov
xor
xor
mov
dec
mov
out
ret
fsincos
cmp
clc
and
sub
popa
mov
aaa
mov
js
fnstcw
or
aaa
dec
push
pushf
lods
xorb
mov
sarb
dec
mov
pop
mov
add
push
loopne
xchg
loop
arpl
cmpsl
add
loopne
jns
dec
stos
and
push
decl
cmpsb
aaa
mov
mov
xor
lods
add
sahf
cli
lret
mov
mov
jecxz
jnp
inc
push
imul
dec
fcomp
xor
xlat
mov
and
fstp
push
rcll
cmpsb
mov
pop
sbb
push
push
sbb
lods
inc
mov
jmp
mov
and
mov
xor
inc
lods
mov
lret
xlat
or
sbb
push
std
ja
out
cmpsl
js
or
xchg
testl
mov
cwtl
das
mov
sbb
pop
mov
dec
fildll
je
idiv
add
movl
fcmovnb
sbb
jbe
movsb
mov
xchg
in
sbb
scas
dec
loop
test
and
jns
lea
inc
fistl
xlat
insl
movsb
cld
inc
or
or
int3
inc
inc
push
cmpsb
mov
dec
loope
xchg
jg
xchg
loope,pt
mov
xlat
imull
jecxz
fdiv
inc
cmpsl
cmp
add
sub
adc
lods
xchg
dec
or
hlt
dec
loop
sbb
out
rol
testb
and
inc
cmc
sbb
push
lret
in
mov
cltd
in
ficoms
ja
cmp
pushf
xchg
imull
xchg
push
sub
aaa
push
fucomip
scas
xor
adc
lods
sub
test
sub
ss
cmpsb
cmp
mov
enter
adc
mov
dec
cmpsb
pop
dec
in
mov
mov
sub
xchg
xchg
push
pop
in
test
ss
jae
bound
jnp
inc
push
jo
xchg
ficomps
pop
std
mov
sub
add
addr16
sbb
jg
into
cmc
dec
and
mov
orl
adc
sbb
xchg
push
sahf
cmp
mov
outsb
lods
jecxz
sbb
test
xor
jbe
xchg
inc
repz
dec
dec
cmp
cmp
leave
mov
or
jg
pop
and
aam
rcrl
hlt
xorl
pop
cmp
push
jmp
addl
dec
sbb
cli
push
mov
push
insl
shrb
int
and
xchg
add
adc
cmp
mov
pop
push
lcall
mov
push
adc
push
sub
sbb
daa
ljmp
jne
xlat
mov
inc
mov
adc
jnp
xor
dec
mov
ljmp
insl
push
mov
mov
xchg
aas
mov
mov
pop
add
lods
fsubrl
pop
ds
mov
test
loopne
mov
outsl
daa
aaa
stos
dec
xor
pop
aaa
adc
leave
pusha
aam
ret
stos
pop
fwait
mov
mov
xor
mov
jne
cmp
adc
mov
dec
mov
ret
cld
add
mov
loope
ffreep
add
push
std
fdivl
xchg
push
movsb
push
nop
int
inc
jp
jne
push
adc
adc
mov
setbe
push
std
cmp
gs
push
pop
push
aam
push
add
sti
mov
lahf
das
mov
in
pusha
mov
mov
cmpl
fidivs
decl
xchg
inc
fs
add
out
lret
or
out
jbe
rcll
ss
lahf
cmp
out
xchg
aas
pop
out
cmpsl
mov
daa
insb
and
jns
inc
mov
outsl
rolb
lea
pop
push
popf
dec
dec
lock
ja
ds
cltd
lea
push
arpl
dec
aad
jge
jne
cwtl
or
js
out
jmp
mov
mov
push
enter
xchg
cs
adc
xchg
adc
nop
pop
in
cs
std
lcall
sub
cmp
xchg
ja
xor
mov
sub
nop
out
cmc
arpl
fisubl
cmp
jb
stc
push
int
movsb
mov
imul
divb
cmp
test
roll
cmp
arpl
pop
out
test
cltd
xchg
test
push
inc
mov
ret
xchg
xchg
xor
xchg
cmc
mov
cmp
pop
sub
js
aam
clc
test
and
mov
es
test
dec
cmpsl
ret
call
xor
or
sbb
cltd
adc
stos
scas
cmp
sbb
add
jbe
fwait
sti
xchg
mov
mov
addb
enter
mov
jecxz
sti
fistps
push
ja
pop
xor
stos
jp
iret
popf
mov
mov
lea
stc
or
and
xchg
cmp
pop
sbb
jmp
jmp
xchg
dec
movsl
mov
cltd
cli
fsubr
xor
jae
ljmp
orb
stos
daa
push
push
xor
int
out
test
adc
sbb
jge
mov
test
pop
jne
adc
mov
movsb
inc
push
jb
in
icebp
and
inc
es
test
popa
gs
stos
cmp
mov
repz
neg
dec
cmp
gs
adc
fnstcw
fs
aam
lods
xor
enter
sub
jle
dec
jle
add
mov
out
xor
out
dec
mov
pop
push
scas
in
shr
dec
cmp
mov
outsb
mov
ret
incl
repnz
arpl
test
and
pop
addl
xor
xor
notl
and
sti
hlt
xor
cmp
loopne
fwait
cld
repz
movsb
xchg
imul
call
sub
mov
sub
cmp
dec
setl
lods
xchg
jbe
subl
int3
fidivrs
or
mov
cmpsb
add
insl
push
das
shrl
mov
fidivrs
mov
hlt
cmp
pop
add
jge
fidivrl
xor
jbe
add
jle
ds
push
fdivp
jbe
fstpl
jmp
mov
ret
jp
insl
andb
xchg
mov
sahf
xchg
inc
xor
mov
call
sbb
in
adc
add
repz
or
cmp
adc
cmpb
addl
stc
or
push
loop
mov
cwtl
repnz
and
push
outsb
out
ret
or
out
lcall
imul
incb
imul
inc
dec
cs
xchg
add
xor
cs
nop
jge
ss
icebp
xor
arpl
cmp
mov
add
lock
jne
and
push
push
inc
mov
ffreep
pop
xchg
cmp
mov
add
sbb
daa
jmp
or
clc
fdivr
push
xlat
push
sub
jmp
scas
lret
mov
subl
lcall
shlb
push
and
les
daa
jecxz
out
nop
jecxz
pop
out
push
and
int3
pusha
cmpsb
fstpl
mov
pushf
jg
scas
cmp
lahf
xchg
add
int
mov
mov
mov
test
adc
push
cmpl
mov
xor
push
mov
je
pop
lods
pop
mov
jae
xor
mov
out
fmul
push
jno
mov
stos
xchg
xchg
cmpsl
xlat
insl
jge
add
sbb
sbb
dec
nop
fs
cmp
push
or
adc
xchg
xchg
jne
sub
or
mov
inc
mov
jne
dec
push
movsb
mov
add
and
jg
jle
lea
mov
cmp
fxch
bound
mov
cwtl
mull
jno
add
jmp
arpl
jnp
clc
lock
ljmp
add
aaa
dec
xor
roll
std
cli
hlt
mov
stos
nop
adc
pop
mov
lcall
pop
inc
stos
or
mov
out
ljmp
movsb
les
loopw
jne
mov
pop
mov
add
jb
stos
sbb
jge
sbb
test
xor
rorb
jnp
jg
out
sub
es
testb
rclb
inc
sbb
ret
insl
cli
inc
lahf
lret
int
cltd
xor
mov
cmp
mov
cltd
pusha
pop
push
aam
mov
inc
jle,pn
inc
push
stc
shrb
outsb
pop
nop
aam
inc
jo
mov
insl
imul
insb
mov
adc
mov
pop
jg
xchg
add
mov
pusha
out
inc
sbb
inc
inc
push
mov
jg
lahf
mov
jno
cmp
jg
cmp
adc
arpl
xchg
enter
xchg
push
imul
inc
popf
ss
inc
loop
lods
lcall
pop
jbe
in
lcall
mov
fwait
cmc
jecxz
mov
addr16
mov
inc
fsts
or
cmpl
lret
lret
fcmovnb
xchg
lods
testb
negl
cmc
arpl
sub
push
or
call
dec
xchg
in
mov
xchg
jae
es
pop
dec
jge
call
into
sbb
cmp
and
sub
rep
in
cmp
popa
negb
cwtl
out
repz
stc
xchg
rorl
adc
pusha
push
and
and
inc
out
in
adc
pop
xor
aad
push
mov
fnstsw
test
int
xlat
add
inc
divl
dec
sub
inc
pop
cmpsb
xchg
sbb
add
dec
pop
je
shrl
sahf
popf
popa
les
jno
adc
jmp
mov
dec
adc
orl
mov
mov
addr16
fwait
test
loopne
cs
jae
stos
scas
rclb
mov
cltd
outsb
fucomp
loopne
jl
rcll
fwait
sbb
je
mov
sbbl
mov
or
test
pop
jne
mov
mov
push
fs
xchg
xor
stos
lcall
mov
mov
dec
fsubs
outsb
loope
pop
insb
jle
inc
cmpsb
cmp
jno
cmp
cmp
or
xor
mov
sti
add
fdivrl
inc
sbb
pop
scas
nop
push
xchg
sti
mov
test
je
pushf
sbb
jg
cmp
flds
sbb
mov
inc
ljmp
jmp
cmpsl
out
pusha
jno
mov
rcll
cmp
sub
in
adc
dec
jne
sub
stos
push
xor
dec
fsubr
test
aad
jmp
mov
enter
mov
arpl
cmp
fidivrl
mov
fdivrl
sahf
popf
pop
rcrb
dec
repnz
inc
aas
xlat
sbbb
xchg
in
dec
shlb
inc
mov
xchg
adc
cwtl
rol
das
inc
cmc
cmp
insl
mov
pop
push
stc
cli
out
daa
andb
daa
sbb
dec
dec
mov
jp
sub
aad
cmp
fstpl
and
imul
popf
cld
pop
lock
cld
push
addr16
dec
xchg
pushl
mov
fwait
stos
repnz
inc
adc
mov
or
mov
aas
adc
out
jle
movsb
aam
cmp
cld
mov
sub
fsubrl
jmp
and
aam
inc
outsb
out
dec
dec
mov
outsl
and
iret
pop
fsubl
fdivp
movsl
int3
adc
adc
lahf
testb
sub
jmp
lahf
sub
xorb
sub
pop
dec
lock
repnz
xor
adc
xchg
mov
mov
cmp
scas
push
xchg
int
mov
mov
pushf
sub
jns
les
pop
imul
ret
js
fsubrl
add
ljmp
push
jns
hlt
mov
sbb
in
sbb
fistps
dec
pop
in
out
mov
inc
adc
dec
int
lcall
xor
in
inc
mov
mov
ja
outsl
insl
repz
mov
cmp
addr16
scas
jmp
lods
mov
bnd
stos
mov
xacquire
xchg
xchg
mov
add
pop
loopne
fistpll
or
and
hlt
out
ret
cmpsl
imul
fpatan
iret
mov
jns
sub
or
dec
sub
subl
nop
stos
jl
ret
testb
js
xchg
enter
clc
xor
jp
mov
add
push
push
adc
mov
cwtl
mov
sbb
rclb
std
mov
inc
xor
rclb
add
scas
into
jns,pt
mov
mov
jae
inc
call
addr16
lods
lods
xchg
push
pop
xchg
pop
mov
sbb
std
nop
cmc
cmpsl
test
icebp
int
aaa
cmp
cmp
leave
jne
imul
cli
rcl
dec
mov
jg
fucomp
inc
sub
push
and
pop
into
pop
lahf
sbb
and
mov
or
leave
clc
loop
cmpsb
dec
das
cld
adc
lods
mov
imul
sub
fisttpl
push
sbb
fcmovu
ret
jno
jge
subl
jns
dec
shll
out
mov
cmp
insl
ret
dec
cmpl
push
cwtl
xlat
jmp
call
repnz
mov
cli
push
lds
sub
outsl
ljmp
es
pushf
repnz
repz
cmp
insb
lock
stos
push
and
add
mov
addr16
dec
and
inc
push
push
adc
cs
int
lret
test
push
movsb
push
mov
cmp
out
mov
ret
rcl
mov
sti
push
sub
sub
bound
jns
dec
dec
lods
sbb
cmp
rclb
in
popa
out
xlat
sbb
clc
scas
inc
lock
cli
push
xchg
int3
data16
xchg
sub
inc
orb
pop
or
cmpsl
jae,pt
insb
push
pop
jo
or
rolb
nop
ljmp
cmp
and
pop
les
sti
imul
inc
and
push
insl
adc
mov
gs
cmpsl
fdivrs
mov
pushf
mov
ret
dec
sbb
jg
mov
nop
aad
dec
add
test
xchg
and
xchg
cmp
pop
cmp
mov
pop
lock
add
push
jae
daa
outsl
mov
inc
pop
scas
xchg
inc
daa
or
inc
sbbb
sub
fucomip
rol
repz
xor
or
push
adc
mov
push
jmp
andl
pop
pop
and
inc
loope
mov
cmpsl
rclb
add
decl
and
push
xor
pop
adc
mov
test
add
jne
loope
sub
cs
or
sti
outsl
add
fists
xor
adc
out
sbb
dec
pop
mov
inc
lahf
stos
jne
shrl
ss
outsb
cmp
xbegin
and
imul
mov
sahf
sbb
daa
fsubr
test
sbb
sbb
testl
fisubs
fcompl
mov
sub
je
popa
clc
push
out
sbbl
or
inc
cmpsl
sub
adc
in
dec
call
or
mov
mov
adc
xchg
popl
and
sbb
movsl
dec
mov
xchg
insb
inc
sub
in
mov
sbb
jge
mov
jge
clc
inc
add
xor
xor
in
adc
dec
mov
cli
or
lahf
imul
stos
ds
and
jle
dec
ds
test
add
cmpsb
add
add
movl
or
sub
sbb
rcl
mov
adc
icebp
fs
bound
sbb
lahf
out
cmp
lahf
imul
mov
xchg
out
cmpsl
fwait
mov
xchg
mov
es
inc
mov
jp
mov
js
xor
sub
add
in
test
lock
push
dec
xor
jmp
or
adc
mov
push
ds
inc
jb
mov
sbb
mov
xor
aas
pop
roll
aaa
imul
push
insl
lock
sbb
cli
call
test
sti
inc
scas
call
add
jmp
aaa
aam
cmp
pusha
dec
pop
cmpsl
mov
xchg
sub
fidivl
mov
fcomip
icebp
dec
or
add
gs
fnsave
cmp
cmp
loopne
pushf
mov
pop
jg
mov
testb
scas
les
int
into
cli
xchg
int3
push
mov
cli
imul
call
outsl
movsl
xor
push
scas
in
xor
dec
push
sbbb
std
call
test
fwait
aas
int3
stc
mov
push
adc
cmp
insl
xorb
mov
push
mov
xor
outsb
sarb
cmp
int3
pop
pop
fidivrl
loopne
popa
and
sbb
adc
jnp
loopne
push
imul
test
mov
iret
xor
fistpll
cmp
cmp
pop
and
dec
mov
push
dec
mov
imulb
sarb
pop
and
sahf
repz
lds
mov
and
sub
sub
push
stc
jg
fsubs
cmp
xor
pop
loopne
ljmp
mov
inc
pop
inc
mov
cmp
mov
mov
push
insl
dec
and
xchg
sbb
xor
inc
pushl
push
jb
inc
push
pop
lods
shlb
out
push
fs
cmp
inc
pop
or
mov
inc
mov
inc
adc
loop
sbb
adc
xchg
shl
out
sbb
push
mov
mov
cmp
dec
fs
js
jg
dec
push
enter
int3
pop
push
lods
or
mov
mov
pop
pushf
std
xchg
mov
pop
and
push
inc
sbb
jnp
sbbb
pushf
xor
adc
jo
mov
and
fsubrl
xchg
icebp
stos
lds
mov
dec
fdivs
xchg
jmp
sarb
lods
andl
movsl
loop
iret
push
inc
fidivl
jns
push
sub
sti
jg
dec
mov
mull
mov
pop
jnp
lods
mov
dec
inc
inc
fnstenv
cmp
rcr
pusha
jl
xor
test
rorl
call
repz
aam
inc
mov
mov
jle
out
test
ljmp
ret
aaa
push
stc
pop
cmc
dec
inc
adc
mov
cli
add
xor
and
xchg
movsb
ds
mov
hlt
lretw
daa
pop
orl
push
jo
push
fsubr
xor
scas
jp
out
mov
inc
icebp
dec
std
mov
fsubl
inc
pop
ss
hlt
mov
dec
jl
push
out
fwait
stos
cmc
pop
out
fsubrl
je
mov
jge
iret
das
mov
adc
lds
pop
out
xor
fbstp
loope
xchg
testb
cmp
push
pop
sbb
in
mov
ljmp
aas
add
jle
xlat
es
fs
stc
aaa
add
aam
jg
push
push
pop
adc
add
scas
push
adc
xor
dec
jne
es
cmpsl
iret
add
and
addb
and
mov
sbb
fcmovne
scas
sbb
mov
bound
loope
xchg
test
pop
mulb
imul
cmp
pop
inc
or
mov
pop
popf
into
stos
jecxz
and
lcall
cmc
cs
mov
lret
cmp
adc
adc
inc
stos
mov
test
notb
dec
frstor
rcll
sarl
adc
push
lahf
mov
sbb
inc
ds
gs
xchg
xchg
push
lock
adc
lret
std
arpl
int
dec
addr16
lret
gs
fidivl
iret
lahf
sti
popf
sub
into
sbb
inc
inc
fmull
mov
mov
std
xchg
dec
mov
sbb
scas
ret
push
dec
pop
cmc
jp
hlt
pop
fwait
jl
clc
and
lods
pop
cmc
dec
pop
imul
std
xor
lret
pop
cwtl
data16
je
sbb
mov
out
icebp
mov
and
loope
lret
sbb
movzbl
das
popa
and
lret
loopne
or
jne
cs
adc
pop
dec
lea
cld
mov
imul
or
lods
gs
gs
mov
ja
xchg
and
fsubrp
gs
sbb
out
fmull
add
xchg
cmc
mov
cmp
popf
adc
cmp
mov
pop
imul
mov
in
mov
or
mov
xchg
adc
ret
xchg
imul
inc
lods
ljmp
pushf
out
xlat
and
pop
push
je
and
mov
dec
js
xor
pop
dec
pop
std
and
pop
xor
mov
xor
sbb
rclb
loop
mov
jg
push
mov
jbe
cmp
repnz
outsl
shr
adc
or
pushf
sub
rcrl
ffree
cmp
sbb
xchg
mov
movsb
jo
lea
mov
or
push
cmpsl
cli
mov
mov
adc
mov
mov
sub
mov
div
cltd
lods
xchg
stos
je
test
addr16
xchg
cltd
mov
lret
add
fsubl
mov
nop
fs
adc
pop
jbe,pn
fidivrl
fs
or
jb
mov
leave
lcall
out
movsb
call
fnstenv
sub
or
lret
sbb
pushf
loop
cmpsl
mov
fs
sub
add
scas
sti
mov
mov
and
leave
xchg
push
push
movsl
gs
push
fdiv
test
sbb
rclb
ret
jbe
sbb
dec
sbb
inc
icebp
sarb
pushf
cs
aad
repnz
mov
dec
inc
stos
out
in
clc
or
test
pop
push
add
inc
pop
xor
pop
xchg
test
std
xor
sub
cmp
adc
dec
dec
mov
pop
lock
sub
adc
jecxz
sti
leave
int
out
in
mov
fnstcw
sbb
fwait
mov
cmc
xchg
jb
adc
mov
push
add
ds
movsl
and
lret
fisttps
dec
es
mov
xchg
dec
mov
mov
mov
jbe
bound
pusha
lcall
jmp
inc
adc
loopne
lcall
xchg
lahf
lds
insb
xor
cli
or
adc
sbb
sti
adc
sub
mov
jo
enter
repz
mov
mov
imul
enter
ds
pushl
sbbb
inc
test
dec
mov
in
les
std
ret
in
sbb
arpl
xchg
pop
xor
and
iret
fcoms
sbb
xrelease
ds
jo
pushf
int3
and
test
lods
test
gs
je
aam
sahf
aad
es
jbe
mov
ret
outsb
icebp
xor
sbb
rol
sub
jae
pop
inc
dec
or
aas
push
sbb
push
adc
mov
into
mov
fsubp
pop
jg
insb
xchg
sbb
insb
stos
jo
fsubrs
sbb
xchg
add
xor
decl
jp
xchg
adc
aam
pop
es
and
fidivrl
mov
stos
xchg
cmp
jne
cmc
adc
inc
popa
ja
in
mov
adc
int
sbb
jne
jb
sub
push
scas
shrb
das
scas
mov
xor
jnp
push
into
or
lret
or
pop
es
cld
dec
adc
inc
xor
sbb
inc
cwtl
call
add
jbe
sbb
push
inc
dec
aad
mov
ss
test
pusha
mov
cwtl
xchg
add
xchg
jns
scas
out
out
lock
out
es
or
out
add
sbb
ret
testb
sub
scas
repnz
ds
add
popa
repnz
call
push
inc
sbb
mov
xor
pop
pop
les
lcall
les
push
mov
or
shr
lcall
outsl
and
sbb
lret
cmp
sahf
shll
sub
or
scas
pop
test
jmp
pop
loop
testl
btr
add
mov
fnstcw
push
mov
dec
xchg
push
xchg
das
decl
shrb
lock
push
repnz
mov
and
aad
lret
cmpsb
xorps
cmp
jb
pushf
in
hlt
mov
sbbl
popa
xchg
inc
scas
leave
ss
cli
jno
adc
shrl
adc
outsb
repnz
pop
push
adc
and
cmp
hlt
dec
fbstp
dec
add
mov
stos
push
inc
xor
push
cwtl
inc
add
orl
xchg
mov
xchg
sbb
mov
ljmp
mov
out
cmp
adcl
pop
fcomps
mov
scas
and
and
pop
xchg
outsl
mov
pusha
imul
inc
in
loopne
stos
fisubl
xchg
test
xor
js
pop
cltd
lcall
ljmp
fwait
xor
sub
mov
insb
push
mov
mov
pop
cmp
jb
add
cltd
gs
adcb
repnz
xor
ss
mov
cs
mov
negl
dec
jecxz
movsb
pop
outsb
icebp
mov
inc
movq
cld
mov
lea
dec
rclb
lea
sub
fldpi
and
popa
cmpb
cmpsl
mov
or
into
lods
lds
push
cs
mov
cmc
in
inc
fisubs
jl
sub
fstpl
mov
clc
or
fcompl
xchg
lret
xor
popa
fwait
dec
fbstp
shll
mov
into
push
cltd
sub
les
add
xchg
xchg
stc
addr16
gs
xor
mov
xchg
outsb
push
shll
fcoml
jae
adc
push
dec
mov
test
outsb
sbb
push
or
jns
test
fwait
push
inc
xchg
xchg
jl
cmc
out
sahf
imull
and
aas
fldt
aam
pusha
lock
insl
int
mov
aas
pop
stc
or
dec
shrl
add
adc
xchg
clc
sar
add
popa
inc
add
push
out
cwtl
daa
push
mov
ja
daa
addr16
fsubp
xchg
adc
sbb
and
sbb
jbe
mov
mov
sahf
inc
in
test
fimull
movsl
or
shrb
pop
pop
in
mov
add
dec
mov
xchg
cs
sub
dec
test
stos
std
mov
xchg
mov
call
sbb
and
daa
scas
xor
hlt
outsl
out
aad
sub
jbe
shrd
dec
add
sbb
stc
popf
cmp
sbb
mov
and
mov
in
add
xor
cld
or
nop
mov
sub
sub
repnz
decl
in
cs
lock
into
push
std
jl
push
imul
or
popa
jbe
or
mov
rcrl
nop
cld
andl
pop
mov
dec
push
inc
dec
fisubrs
daa
xchg
in
mov
or
fwait
icebp
jge
ljmp
inc
popf
adc
dec
sub
outsb
jl
mov
mov
cmp
mov
in
aas
pop
jae
out
jnp
xor
cmp
data16
dec
jnp
cltd
lock
add
push
push
sub
sub
mov
mov
jl
jo
mov
enter
adc
aas
mov
jecxz
in
call
cmp
adcb
push
iret
push
sub
popa
xor
cmp
fs
adc
jp
inc
inc
loopne
dec
insb
add
insb
data16
cwtl
fists
rclb
jbe
das
jmp
push
outsl
ljmp
loopne
into
lea
fs
inc
jno
mov
push
pop
adc
lock
mov
imul
test
adc
push
fcmovb
popa
xor
jb
insl
sub
mov
add
arpl
shrb
cwtl
mov
lds
std
inc
adcl
sub
hlt
stos
inc
es
aam
out
enter
pop
sub
inc
cmp
or
aam
outsl
shrl
or
lods
repnz
es
jbe
sahf
xchg
loope
rclb
notb
jb
aaa
sbb
fbstp
int
loop
mov
out
sub
hlt
push
inc
jns
adc
loope
and
fsubl
gs
aas
push
in
pop
xor
push
pop
jae
mov
sub
daa
lods
cld
aad
call
and
mov
dec
aas
mov
mov
or
lret
stos
xchg
jecxz
mov
add
imul
pushf
mov
cli
aas
mov
jl
push
stos
rcrb
ja
mov
lret
loop
mov
or
jge,pn
push
pop
jl
or
loop
jne
mov
cmp
inc
stos
push
sarl
orl
pop
xor
jl
pop
jns
int3
sub
mov
popl
mov
add
or
outsl
add
lds
dec
pop
lock
jp
add
xor
testl
mov
movsl
jne
jns
fldl
nop
mov
ljmp
jne
jne
sub
aas
arpl
loope
pop
mov
mov
cmp
fisttpll
frstor
popf
mov
xchg
fmull
add
jbe
sbb
and
push
fdiv
push
repz
mov
ds
sub
adc
xor
outsb
test
lcall
push
fdivl
call
pop
mov
dec
adc
and
cmpsl
push
pop
cmp
pop
idivb
imul
stos
pop
mov
pop
push
inc
fstl
movsb
xor
into
mov
push
mov
fs
mov
iret
sbb
mov
imulb
mov
or
inc
xor
cltd
add
dec
xchg
and
ja
scas
xchg
sub
js
or
mov
and
push
push
xor
adc
inc
ret
inc
push
jb
sbb
lret
inc
test
push
out
ja
dec
fisubl
cltd
jne
cltd
mov
test
rorl
or
mov
inc
sub
add
aaa
or
inc
test
iret
subb
lcall
push
sahf
lea
cmp
xchg
daa
or
sub
pop
cmc
out
enter
lret
inc
ds
pop
cmp
jecxz
insl
and
mov
mov
ffreep
cmp
stos
sbb
push
pop
xchg
add
and
out
adc
push
aas
mov
arpl
cltd
movsl
aad
adc
ss
out
gs
or
ljmp
int3
fisubrl
dec
push
call
and
pusha
fsubrl
aam
xchg
mov
fwait
inc
scas
into
stc
mov
movsl
out
fs
push
add
adc
negb
xor
jp
pop
mov
push
test
pushf
sub
pushf
inc
jmp
fcompl
or
mov
icebp
aam
add
add
xor
pusha
call
pop
dec
aas
cwtl
out
cmp
adc
leave
lods
inc
bound
mov
inc
xorl
fwait
mov
jl
mov
inc
lret
scas
imul
movsb
cmc
pop
imul
pop
cli
or
icebp
push
mov
je
mov
fsts
push
jecxz
lock
int
cmpsb
push
lods
jle
add
into
pushf
mov
outsl
pusha
inc
arpl
daa
clc
add
lods
outsl
xor
sub
dec
shrl
mov
push
and
jge
loop
adc
jmp
xor
inc
adc
pushf
notl
inc
fnstsw
cmc
sarl
fnstsw
mov
out
cmpsb
test
into
xchg
bound
xor
les
pop
cmp
in
pop
notl
sbb
adc
cmp
lods
push
movsb
mov
fwait
xchg
sbb
jae
lcall
cld
jns
aaa
and
mov
cmp
inc
adc
push
and
pop
add
je
inc
dec
loop
in
cld
push
sbb
cmp
mov
fcoml
jmp
jg
cmp
and
lods
arpl
call
lcall
lea
adc
sub
mov
sbb
out
add
adc
xor
jnp
adc
sbb
call
and
cld
adc
cmp
xor
test
lods
shrb
stos
push
int3
mov
int3
and
pop
stos
sub
in
lock
cmc
imul
mov
mov
push
adc
stos
xchg
pop
sub
jmp
cmc
cmpsl
sbb
xor
push
sub
jo
mov
inc
xor
mov
pop
mov
stos
jle
mov
call
or
out
xlat
int3
xor
mov
mov
mov
sbb
shrb
pop
adc
or
rclb
sub
add
in
ss
clc
push
cmpl
jne
sub
into
push
std
enter
leave
mov
es
jae
lahf
push
ret
outsl
lret
sub
push
inc
inc
imul
push
sub
nop
jno
in
xlat
repz
idivl
nop
mov
pop
popf
xor
mov
popf
jb
mov
and
fstp
lahf
pop
stc
fisubs
push
jbe
adc
inc
lock
sub
out
pop
cmp
pop
es
sbb
jae
push
movsl
and
jle
ljmp
add
out
cltd
cmp
adc
mov
jecxz
sbbb
movsb
je
xchg
lret
data16
repz
lods
add
cmp
cld
lea
adc
sbbl
movntq
out
bound
or
pop
sbb
leavew
sbb
sub
xchg
mov
pop
push
or
fidivs
mov
xchg
ja
push
lds
pop
mov
movsl
mov
lods
jle
loopne
add
xor
dec
mov
subl
push
stc
cmp
inc
sbb
sbb
lods
sahf
outsb
sub
ss
dec
mov
cmpsb
aam
inc
inc
mov
xchg
sbb
mov
test
mov
push
or
mov
ljmp
mov
fcompl
pop
loopne
mov
jp
iret
push
sub
js
sub
rcl
mov
lock
sbb
xchg
mov
lock
ja
xor
add
pop
pop
jno
xchg
out
in
sbb
fldenv
fdivrl
rorl
mov
pop
cld
mov
sub
ret
outsl
stc
test
sbb
xchg
cwtl
imul
fs
inc
xor
out
paddsb
mov
nop
mov
imul
repz
mov
and
inc
cld
inc
incb
arpl
cwtl
mov
fisttpll
aaa
lea
and
mov
pop
data16
xor
add
mov
je
je
aam
push
or
cld
mov
cs
push
outsl
nop
or
in
mov
fistl
or
jbe
outsl
test
mov
mull
addr16
fdiv
outsl
mull
cli
shl
int
enter
test
in
enter
je
stos
mov
stos
inc
ljmp
mov
push
test
ja
out
xor
xchg
cli
xchg
cmp
pop
mov
mov
xchg
push
out
scas
xchg
icebp
jo
ljmp
test
jle
pop
stos
mov
cmpsl
out
sbb
or
rcl
data16
sub
xlat
cmp
mov
inc
or
cmp
cmp
imul
lret
fs
pop
push
xchg
mov
leave
sub
sbbb
dec
movsb
ja
ljmp
jmp
std
or
adc
cmpsb
arpl
mov
sbb
push
cmpsb
cltd
insb
roll
movsb
aaa
mov
push
das
pop
sbb
ds
pop
cltd
les
in
mov
insb
rorl
mov
mov
xchg
xor
subb
test
rorl
lahf
add
xchg
sbb
fwait
sti
mov
lahf
insb
jne
and
sub
push
out
mull
pop
lcall
lahf
rclb
cmpb
jmp
inc
jo
sar
jne
adc
loope
out
push
mov
xchg
cld
xchg
sahf
jmp
dec
mov
inc
lret
sbb
adc
or
repz
loope
popa
inc
add
loop
lock
mov
dec
cs
loope
bound
ret
shlb
inc
push
movsb
sarb
mov
add
xchg
sub
cmp
mov
adc
add
or
jl
inc
fs
sub
loopne
mov
sub
cmp
js
or
jp
jno
and
jb
bound
out
pop
lahf
jmp
lock
test
inc
pop
push
pop
lds
pop
out
push
mov
xlat
addr16
test
ret
jae
pop
sub
mov
sub
pop
fwait
jmp
icebp
jecxz
pop
fiaddl
sarb
inc
pop
out
ja
das
addr16
icebp
adc
in
sub
xchg
inc
and
je
mov
push
outsl
push
mov
add
adc
loope
inc
push
leave
xchg
out
dec
push
push
mov
dec
jno
outsl
ds
in
lcall
leave
jo
dec
adc
xchg
push
call
repnz
out
into
addr16
and
add
repnz
push
out
pushf
xchg
dec
mov
jecxz
or
test
cmp
gs
cmpsl
aaa
dec
fldenv
stc
and
or
pop
out
cmp
pop
cmp
jne
and
in
faddl
pop
jne
and
xchg
loopne
repnz
add
sbb
mov
arpl
and
jecxz
insl
lahf
push
data16
hlt
mov
jns
mov
test
mov
test
pushf
xchg
mov
sub
xlat
mov
in
sbb
insb
lret
xchg
out
sti
repz
or
lret
pop
test
popa
cwtl
adcb
cmpsb
sub
sub
out
pop
rorl
xchg
jl
pop
ds
rolb
inc
test
sub
rorb
pushf
scas
cmp
pop
sarl
in
ja
mov
call
cld
mov
jo
pop
jno
cmp
inc
test
es
sbbl
add
pop
mov
xchg
ljmp
in
push
lods
mov
and
sub
pop
icebp
ss
popa
insl
jle
mov
inc
xchg
jg
jbe
cmc
xchg
mov
dec
decb
lds
add
adc
or
notl
imul
xor
sbb
jnp
fnstcw
in
stc
cmp
sbb
gs
and
sub
into
cld
lock
xor
add
add
lret
lods
and
fnstcw
bound
and
test
stc
jmp
jno
adc
stc
fld
ss
inc
push
inc
inc
les
stc
nop
sub
into
mov
mov
ffreep
push
adc
fsubrp
icebp
xor
inc
cmpsb
jbe
jle
xchg
and
jl
fsubrl
sub
ds
pop
sub
and
ljmp
mov
inc
fmul
sub
loopne
fsts
stc
push
cmp
std
xchg
lea
cmp
jns
into
mov
mov
push
mov
cwtl
js
xchg
jbe
hlt
jns
add
xchg
cs
in
xor
cmpsb
cmp
add
hlt
mov
daa
cmp
lea
jle
mov
arpl
or
mov
fimull
dec
mul
add
mov
and
outsl
cld
push
push
add
jo
les
imul
and
cmp
inc
stc
mov
cmp
pop
test
jne
mov
arpl
aaa
call
outsl
outsl
jge
rcrb
fists
enter
sahf
jmp
xor
aam
movsl
lds
pop
fcmovu
push
cld
or
sub
pop
pusha
lcall
inc
popf
std
pop
iret
adc
or
adc
mov
jns
pop
inc
xor
jno
fsubrl
sub
insl
out
in
in
loope
repz
fmul
cwtl
sbb
sahf
gs
pop
push
repnz
mov
popf
mov
lahf
movsl
mov
xchg
test
aad
dec
mov
popf
pusha
aam
xlat
scas
cmpsb
lcall
clc
popa
mov
sub
jl
pop
adc
das
jecxz
idivb
faddl
int3
mov
out
inc
adc
push
addr16
mov
sub
scas
push
lock
pushf
push
lods
mov
pop
sub
aaa
lret
jmp
ret
pop
or
adc
outsb
push
add
mov
shrl
pop
int
add
daa
je
test
sub
clc
mov
out
jge
sub
int
cltd
sbb
push
xchg
sahf
sbb
mov
call
jmp
insb
jns
pusha
sub
jbe
ds
ljmp
cmp
fnsave
arpl
pusha
nop
adc
mov
jg
pop
cltd
in
and
rorl
popl
push
adc
mov
pop
cmc
push
mov
mov
cltd
pop
sbb
loopne
movsl
cli
cmc
gs
lds
and
sahf
add
sbb
mov
mov
popa
pop
jl,pn
inc
in
jle
nop
inc
adc
adc
mov
call
push
jmp
int3
fsubrl
aas
dec
in
jo
mov
insb
jl
stc
std
popl
and
mov
arpl
and
rcr
xchg
out
adc
hlt
mov
stc
add
lods
mov
movsl
push
mov
orb
aad
jbe
seta
mov
jg
inc
mov
je
push
popf
stc
or
and
filds
or
cmp
ret
insl
dec
pop
sbb
fidivl
push
xchg
repnz
shl
fsubl
popf
jg
mov
jg
lods
aaa
mov
push
sahf
add
sub
testl
dec
push
add
mov
popf
push
jne
xor
inc
mov
test
mov
popa
cltd
pushf
insb
cmp
out
pop
pop
push
lods
cli
out
or
xchg
sbb
and
mov
cmovb
popf
arpl
lahf
and
call
push
fucomp
loopne
xor
mov
xor
lods
ret
push
mov
add
xchg
mov
pop
outsl
mov
into
xor
jne
jl
arpl
movsb
push
setle
testl
mov
lock
push
mov
mov
das
imul
sbb
mov
and
scas
sub
sbbb
pop
mov
push
add
adc
lret
lahf
cld
bound
sbb
jecxz
sub
repz
das
adc
les
ja
inc
xchg
sbb
add
mov
adc
jecxz
add
rolb
shlb
fnsave
dec
fcoms
jl
xor
mov
sbb
lock
dec
dec
into
out
arpl
inc
jmp
add
ret
and
arpl
mov
rolb
jmp
adc
outsb
mulb
loop
cmp
test
out
cmpsb
push
xlat
pop
mov
jbe
sub
xchg
sub
mov
cmp
xchg
push
mov
mov
or
daa
jmp
or
xor
insl
pushf
outsl
inc
mov
and
ret
hlt
fidivs
mov
add
add
aad
adc
inc
sarb
in
mov
lcall
cmp
addr16
cmp
mov
addb
jg
push
es
pop
fwait
sbbb
aas
lahf
idivb
xorb
cmp
movsb
mov
and
sub
das
or
in
push
lods
push
cli
xlat
jnp
pmaddwd
mov
inc
sub
lods
loope
sub
xchg
lahf
aaa
shr
mov
movsb
dec
jo
pop
inc
sahf
push
dec
dec
ficoml
dec
test
movsl
movsb
sub
jnp
mov
nop
call
test
int3
cs
xchg
mov
xchg
mov
pop
dec
adc
add
sub
and
sbb
mov
shll
shr
and
adcl
add
lods
xor
xor
xchg
dec
fs
cli
stos
xchg
mov
fldt
mov
push
leave
dec
and
pop
stos
iret
lcall
mov
pop
add
sbb
dec
ds
push
out
jmp
in
add
test
ret
add
and
xor
sbbb
pop
xchg
dec
pop
lahf
jg
stos
inc
lock
mov
pusha
sarl
out
sti
add
jp
sbb
sbbb
loop
addr16
shlb
pop
inc
stos
push
pop
mov
pop
mov
mov
cli
out
pop
jb
in
mov
pop
mov
and
cltd
or
daa
ds
test
sub
mov
dec
adc
hlt
pop
mov
xchg
inc
in
or
add
out
xchg
stos
fbstp
push
push
pop
out
dec
cli
stos
cmp
scas
mov
inc
stos
test
sbb
mov
les
pop
int3
lahf
mov
or
jmp
sub
xchg
mov
lds
or
repnz
dec
mov
lock
dec
cmc
cmp
mov
mov
test
lods
mov
cmp
insb
jle
call
sarb
leave
bnd
lods
cwtl
sbb
lret
int
sub
mov
aaa
fmull
call
pop
jg
lahf
xor
rcrl
pop
pop
loope
dec
adc
sarb
repz
lret
xor
sbb
aas
jge
add
cld
cmp
pop
push
push
dec
cmp
mov
std
dec
fnstsw
leave
and
inc
mov
mov
and
mov
lahf
cs
cli
in
adc
rclb
mov
xlat
shll
out
cltd
push
je
inc
repz
fsubrs
cwtl
insl
packuswb
sbb
mov
inc
aam
popa
clc
jge
dec
icebp
jo
orb
adc
test
lahf
jns
leave
xor
into
fiadds
lods
mov
dec
inc
outsl
adc
outsb
jl
and
shll
xchg
sub
xlat
outsl
rorb
arpl
xchg
pusha
or
sbb
add
rcr
scas
js
out
jno
xor
notl
andl
mov
fistpll
push
cwtl
pusha
push
pop
pushf
arpl
jb
repz
jo
cmpl
ret
mov
cld
repnz
loopne
push
hlt
push
pusha
mov
stos
orb
stos
push
fwait
xchg
sub
cld
out
shlb
xor
cmp
fmull
push
out
int
inc
or
lds
lods
push
ret
pop
xor
jb
xorb
rcl
js
ret
test
inc
ja
sti
xor
outsl
push
pop
xchg
or
rep
sbb
scas
mov
inc
and
cld
dec
shrb
inc
inc
inc
das
fdivrs
lea
xlat
aam
push
push
fistpll
js
dec
lahf
xor
iret
mov
mov
enter
jno
jbe
pop
lahf
lods
xor
test
pop
mov
add
enter
push
in
das
sub
dec
push
sub
inc
sbb
fldt
call
xor
test
es
xchg
and
push
pop
stc
mov
cmp
out
lods
xchg
mov
dec
cmp
xor
or
shrb
push
pop
popf
loope
fnstcw
shll
dec
push
push
das
inc
cmp
push
imul
xlat
repz
sbb
and
xorb
rcr
xor
shlb
mov
mov
into
icebp
dec
xchg
sub
mov
das
call
js
jae
out
lret
sub
cld
xchg
mov
adc
rcr
testb
and
out
dec
push
test
insb
imul
xchg
cmpsb
mov
rorl
pop
outsl
hlt
push
ret
pop
xor
cmp
mov
test
xor
aas
mov
mov
addr16
fdivr
stos
mov
cmp
sti
cmp
adc
sti
jb
mov
stos
int3
push
nop
xchg
adc
and
add
xor
pop
mov
jb
xchg
movsb
loop
int
sbb
jecxz
ss
sub
or
mov
jle
xchg
cmp
or
add
push
imul
push
jle
sub
flds
imul
push
out
call
out
ss
sbb
jnp
or
push
push
pop
push
jne
sbb
and
int3
fiadds
data16
fwait
inc
or
cmp
fldcw
add
push
mov
pop
xchg
mov
movsl
and
lock
push
xchg
cmpsl
cld
loopne
push
mov
push
adc
add
lock
and
mov
push
push
cld
inc
out
push
sbb
cmp
xor
rcr
xchg
push
or
dec
sub
xor
xchg
xchg
adc
jno
shlb
and
sahf
icebp
push
push
and
dec
xlat
rep
jge
jecxz
push
mov
mov
movsl
fucomp
loop
mov
scas
and
pop
lahf
shlb
push
push
mov
cmpb
stos
adc
or
jno
adc
rclb
fs
ljmp
adc
imul
push
cmp
mov
push
or
enter
fisubrl
popf
jecxz
xor
lahf
loop
push
sub
and
enter
and
fnstcw
cld
repnz
jg
xlat
ret
mov
mov
sbb
adc
push
and
jae
je
cmpsb
divb
cmpsb
pusha
fadd
sub
mov
ret
jmp
lea
dec
call
sub
ficomps
add
jg
pusha
icebp
mov
xor
adc
adc
sub
xor
cmp
and
dec
mov
or
jecxz
and
xchg
xor
out
pop
fs
stc
mov
mov
adc
inc
push
loope
test
sub
mov
int
push
in
lea
mov
sub
pop
rclb
enter
out
scas
sub
or
fstpt
fbld
push
lea
or
pop
mov
add
lds
cld
xchg
push
xchg
ss
cmp
dec
pop
xchg
pop
and
pop
xor
test
pushf
cmpl
jmp
mov
mov
stc
insl
mov
ja
sar
xchg
jno
xchg
sub
xor
ss
add
dec
mov
fs
xchg
adc
stos
lea
mov
mov
cmpl
adc
inc
jmp
xchg
js
ja
iret
pop
mov
sar
mov
div
cmp
sbb
cld
dec
xlat
daa
cmpb
bound
outsl
xchg
add
lods
fisubrs
in
jno
and
sub
cmp
jp
mov
pop
cmp
cmp
jae
test
std
mov
mov
xor
inc
testb
jmp
pop
cltd
movb
cmp
imul
dec
mov
mov
xchg
ret
jnp
inc
out
adc
cltd
dec
push
cmc
fimull
cmpsb
adc
sbb
adc
divb
jnp
test
nop
repnz
mov
bts
and
mov
fstpt
fidivs
cmp
or
int3
or
cmp
dec
adc
mov
jg
and
sbb
inc
dec
mov
mov
fisttps
adc
std
adc
and
xor
gs
push
inc
inc
mov
into
pop
lds
lds
cmp
cltd
daa
jb
cs
xor
das
cli
adc
hlt
jno
test
dec
iret
fstpt
push
ds
fdivrs
pop
cmp
dec
cli
push
hlt
sbb
sti
xchg
sbb
in
jne
xor
out
stos
mov
and
iret
jne
jge
fistpl
mov
lret
lret
js
lcall
ljmp
aam
rol
pop
add
scas
push
cmpsl
test
jmp
sbb
test
cs
dec
lods
or
lods
les
mov
sub
repnz
fwait
inc
pop
je
sbb
lret
add
cmp
mov
fists
or
pop
pop
scas
cmp
sub
pop
cmc
inc
test
xor
push
jl
or
ljmp
scas
rcrb
fstl
stos
cmpsl
push
movsb
sub
aad
sub
xor
lret
pushf
pusha
push
pop
out
mov
das
pop
test
jbe
roll
aad
xorb
test
lret
cmp
stc
nop
fcompl
pop
fsubs
dec
pop
add
dec
add
dec
adc
jecxz
loop
mov
repnz
and
sbb
repnz
or
dec
into
cmp
adc
jo
mov
andb
lret
xchg
lahf
out
roll
mov
lock
add
push
sbb
sbbl
xchg
dec
jno
cmc
cmp
push
imul
sti
jl
fsubl
call
fsubs
mov
mov
xorl
popl
mov
dec
dec
xchg
int3
in
mulb
arpl
movsl
cmp
or
cmpsb
xchg
scas
pusha
inc
call
push
inc
push
jle
leave
data16
ljmp
daa
lods
insb
lret
sub
clc
jecxz
and
dec
in
test
pop
cmp
mov
or
sub
rclb
das
sbb
je
popw
mov
push
mov
f2xm1
je
loope
mov
pushf
pop
xor
sbbl
not
scas
insb
and
add
orb
repnz
mov
cltd
push
jb
lods
add
push
les
inc
sub
sub
jg
loopne
xor
mov
lret
push
jne
or
iret
lods
xchg
int3
fmul
dec
push
test
inc
repz
test
jo
je
sbb
cmpsl
push
insl
pcmpgtw
aas
mov
icebp
jp
sbbl
cmpb
nop
jo
ret
add
into
ja
dec
sbb
iret
mov
stc
xchg
mov
pop
inc
test
pop
mov
cmp
sbb
cld
aas
pop
jbe
cmpsl
xchg
xor
ljmp
cmp
cmc
lret
xor
mov
inc
or
shlb
add
adc
test
out
ss
in
jl
fadds
cmc
or
pop
clc
jp
sub
dec
mov
xchg
push
js
push
sti
mov
call
adc
pop
and
add
js
shrl
sub
mov
adc
mov
mov
add
out
push
inc
inc
out
sbb
cmp
xor
mov
je
xchg
repz
mov
sarl
or
xchg
jecxz
push
into
and
in
fwait
fs
mov
stos
mov
pop
les
sbb
jo
dec
xchg
popf
sub
add
xlat
mov
add
inc
gs
fcom
call
push
and
dec
scas
jle
pop
lock
push
jmp
sahf
mov
lods
pop
inc
jae
cmc
lock
jg
add
mov
fisubs
jns
lods
inc
addb
cs
cmp
sbb
jae
aam
imul
stos
dec
xchg
push
cltd
clc
dec
clc
xchg
ljmp
xor
mov
pop
mov
jp
daa
mov
test
mov
testb
movsl
test
rorb
cmp
lea
pop
mov
lds
jnp
hlt
and
inc
fnsave
shll
lret
lahf
jo
mov
fbstp
loope
inc
adc
cmp
jmp
cmpsb
icebp
add
jne
fwait
cmp
cmc
in
jb
sbb
cli
sub
es
repnz
mov
pop
xor
fucomp
jbe
pop
jecxz
js
push
add
xchg
in
cmp
push
je
fwait
dec
and
ljmp
jo
daa
or
popf
sub
sub
clc
imul
xor
fcomip
sarb
inc
xchg
stos
and
push
jae
mov
dec
jge
dec
es
nop
pop
cltd
fnclex
das
mov
mov
lods
sub
mov
jnp
lock
jp
fisubs
lcall
scas
divb
mov
push
popa
sbb
mov
push
popa
gs
xor
push
cmp
fnstsw
loopne
test
loop
jmp
cld
xchg
std
pop
ds
or
jo
std
in
js
notl
sbb
sbbb
xor
adc
inc
inc
add
in
outsl
push
push
pushf
or
sub
mov
and
dec
int3
or
mov
cmpsl
cmpsb
fcoms
mov
icebp
or
mov
leave
ret
loop
outsl
imul
outsl
sbbl
sti
cmp
in
sbb
xchg
stos
mov
int3
fdivl
inc
mov
cmc
jmp
test
dec
icebp
mov
xchg
cmp
out
sbb
mov
xorl
mov
mov
inc
add
das
ficomps
fcompl
sub
mov
push
stos
inc
pusha
idivl
enter
jle
scas
jb
adcl
mov
andl
movsb
jae
pop
mov
xchg
cmc
cltd
ret
lds
out
push
in
out
cmp
add
neg
and
mov
cli
dec
mov
dec
pushf
and
call
stos
cmc
stos
shlb
mov
pop
notl
jle
outsb
add
clc
rcrb
and
xchg
insb
pop
sbb
fadd
in
sbb
sub
or
mov
push
pop
dec
dec
mov
and
mov
in
call
fucomip
cs
jb
push
out
cmc
jl
or
mov
lock
call
jne
hlt
enter
cltd
cmpsb
stc
push
js
pop
insb
xchg
fistps
push
pop
dec
rcll
sbb
jg
push
test
movsl
stos
inc
out
mov
xor
push
arpl
xor
mov
in
inc
in
fwait
or
and
mov
jl
push
xchg
xor
xor
fs
lret
dec
lods
je
xchg
ss
movsl
mov
pop
movsb
outsl
adc
lds
cmp
dec
xchg
sub
sbb
pop
outsl
xor
or
ljmp
xor
xor
and
xchg
orb
pop
cli
fwait
cmovb
sbb
jo
mov
jo
fldenv
mov
push
lods
lret
push
mov
shl
or
aaa
pop
mov
leave
sti
jmp
stos
mov
cmp
and
les
leave
test
sub
pop
mov
push
call
cmc
inc
repnz
imul
mov
lret
aad
xlat
dec
popa
mov
fstl
outsl
gs
cmp
dec
sbb
bound
out
sbb
fistl
stos
mov
xor
cmpsl
mov
sub
mov
push
lahf
fldlg2
push
mov
pop
inc
push
je
mov
iret
push
bound
sbb
ret
fisubl
or
icebp
cmpsb
mov
out
cmp
jne
aam
push
cltd
cld
push
xchg
insb
sbb
mov
pushf
clc
mov
mov
xor
bound
and
bound
or
lods
popf
lds
lods
shll
mov
loop
mov
sub
xchg
or
mov
cld
mov
fisttps
cmpsb
adc
sub
das
subps
dec
bound
dec
lahf
decl
sbb
cld
in
adc
mov
dec
ret
out
loop
jne
xchg
add
ljmp
add
or
sub
cmp
shl
xor
mov
inc
fidivl
or
repnz
iret
xor
int
insl
or
hlt
mov
mov
lret
test
icebp
call
dec
popf
jg
and
mov
mov
and
insb
jno
or
lcall
loope
clc
ret
cs
fldt
or
outsl
mov
fisubl
ds
ds
mov
ret
or
jecxz
stos
fistl
sub
arpl
fisttpl
iret
ss
add
jbe
sahf
orl
test
lods
push
mov
ret
mov
fcoms
popa
sbbl
dec
sub
sbb
cs
ficomps
mov
cmp
or
sbb
arpl
cs
mov
push
shrb
pop
cmp
inc
loope
in
inc
inc
leave
push
sub
lret
mov
jmp
sub
repz
xchg
push
inc
pop
mov
push
subb
call
dec
rep
push
or
pop
jae
nop
sti
sbb
into
push
push
sub
sti
pop
loop
mov
mov
hlt
sub
xor
movsb
aaa
jge
pop
mov
mov
lds
mov
jne
mov
aad
push
xchg
mov
shr
stos
mov
cmp
adc
test
sub
fldl2t
xchg
dec
jge
cmc
mov
sti
lahf
push
ljmp
rcl
jnp
mov
or
inc
pop
and
shll
movsb
sbb
mov
fcmovbe
fnsave
out
lods
in
push
push
inc
sbb
jno
xchg
sub
sub
stos
mov
dec
fnstcw
push
mov
dec
adc
sbb
outsb
out
xchg
add
test
lret
sbbl
orb
shlb
or
data16
adc
push
dec
out
inc
outsb
icebp
push
pop
arpl
subl
pop
leave
or
bound
ljmp
xlat
mov
inc
pop
dec
xchg
cs
lea
pushf
xchg
push
ss
or
rorb
stos
scas
or
clc
into
movsb
movsb
loop
and
in
or
dec
pop
mov
lahf
and
es
and
jl
in
rcrb
cmp
cmp
pop
push
clc
or
adc
pop
pushf
jge
mov
mov
sub
jl
movsb
cli
hlt
dec
push
and
mov
andb
add
cmp
sub
loopne
andl
mov
out
add
add
in
cmp
cltd
cltd
or
and
push
mov
fidivrs
ret
dec
dec
bound
ror
dec
loop
imul
outsl
push
aaa
outsl
mov
jno
lods
mov
push
arpl
test
iret
adc
cmpsb
mov
je
bound
pop
mov
add
aaa
test
in
pop
xchg
sub
int
xor
enter
sub
sub
imull
mov
aas
jp
sub
fnstenv
icebp
ret
pop
dec
pop
clc
test
ret
stc
hlt
pusha
movsb
fcoml
stc
rcr
fxch
jle
arpl
rdmsr
dec
xor
mov
lea
mov
pop
in
shrb
or
es
fbld
sub
das
aas
xchg
popa
pop
sbb
xchg
add
xor
and
out
and
mov
jle
mov
jo
sub
notl
jge
andb
fldt
sti
xchg
hlt
movsb
jbe
sbb
mov
out
dec
xchg
insl
cmp
int
inc
aas
adc
mov
push
icebp
adc
mov
lret
adc
xchg
sbb
std
ret
call
into
sub
mov
lahf
jmp
jmp
xor
push
test
aad
inc
and
movsl
pop
popa
std
cwtl
pop
les
gs
mov
sub
sub
xchg
in
cs
dec
dec
jecxz
push
cmpsl
adc
out
andl
xchg
xor
mov
cld
push
sub
inc
jg
jbe
cmp
inc
and
xchg
add
cmpsl
hlt
movsb
lds
cmp
push
pop
loop
mov
add
and
cmc
mov
and
lcallw
test
out
mov
mov
fdivrl
adc
add
in
xchg
add
pop
xlat
repz
mov
mov
cmp
lret
mov
dec
xor
cmp
fisttps
scas
fmull
das
stos
movsb
mov
scas
sarl
xor
inc
cmc
scas
stc
nop
loope
leave
pop
mov
mov
push
fsubs
rorl
repz
jb
pop
movsb
xchg
sbb
sub
pop
scas
jnp
mov
push
mov
ss
sbbl
jns
lahf
data16
push
inc
jmp
or
sarb
push
dec
popa
lea
dec
and
shll
cmpsb
cltd
mov
add
xchg
pusha
insl
insb
data16
jp
sub
hlt
push
xor
lahf
movsl
lds
xor
imulb
data16
mov
mov
or
pop
jnp
mov
push
out
xlat
mov
int3
xor
ret
inc
pop
int3
or
xlat
xchg
jne
cltd
rcl
sub
loop
add
js
mov
inc
movsb
xor
lock
pop
mov
lret
in
popf
int
bound
out
addr16
pop
sub
inc
aad
jmp
fistpl
mov
mov
sysret
aas
into
and
sahf
mov
mov
dec
mov
scas
ret
pop
loope
jle
fnstcw
mov
adc
mov
cli
test
nop
add
bound
mov
pop
mov
and
mov
scas
cwtl
mov
daa
inc
ficomps
mov
adc
add
daa
sbb
xor
mov
cmc
je
jno
sbb
jl
mov
xchg
inc
gs
fwait
add
dec
clc
jecxz
out
jg
mov
dec
mov
addr16
in
mov
pusha
repz
mov
pusha
rcrb
pop
adc
imul
icebp
loopne
gs
int3
sub
jno
add
leave
into
sbb
dec
inc
push
cmpsl
or
out
cmp
stos
jb
sahf
ja
sbb
cltd
clc
outsb
cmpsb
push
out
dec
and
dec
andw
shll
sbb
fwait
imul
cmp
imul
pop
pop
and
in
cmp
xor
mov
xchg
icebp
imul
cwtl
aaa
sbb
lods
mov
js
das
cmp
out
lcall
cwtl
jbe
inc
push
loop
mulb
mov
jns
xchg
jge
sbb
dec
and
cwtl
in
jno
xchg
add
inc
or
in
test
test
mov
sti
es
iret
es
icebp
jge
cmp
and
dec
sub
pop
jae
nop
dec
xchg
cmp
fyl2xp1
dec
xchg
cmpsb
xor
mov
jne
insl
inc
jl
sub
mov
dec
popf
scas
movsb
lcall
dec
dec
in
mov
push
in
xchg
and
add
and
jp
aaa
adc
in
xor
lahf
sub
inc
lea
or
push
xchg
jne
xor
inc
mov
cli
mov
push
mov
imul
mov
pop
inc
pop
arpl
cmpsb
or
mov
testb
test
icebp
mov
xchg
jb
xchg
int
icebp
xor
popf
stc
aad
arpl
ja
repnz
ljmp
or
jb
or
and
xchg
adcb
stos
lods
ret
dec
loop
cmpsl
lea
fwait
imul
and
dec
fsubrl
or
sub
pop
sub
fnstcw
mov
pop
stc
out
mov
mov
jp
mov
lret
cwtl
das
fcomps
adc
adc
xchg
mov
or
insl
sub
leave
sbb
xor
hlt
pop
mov
and
add
dec
jae
test
data16
dec
das
mov
ffreep
mov
btr
xchg
sub
mov
mov
call
in
sub
jge
pop
cmp
outsl
inc
ficoms
cmp
shrb
mov
fwait
add
nop
and
inc
pop
scas
in
mov
sub
dec
push
mov
ss
sub
out
cs
xor
mov
cmp
or
inc
out
loope
dec
rolb
adc
icebp
div
dec
pop
out
fcmovbe
sub
stos
gs
cli
cmp
inc
xchg
je
adc
cmc
enter
subl
shrb
out
add
shrb
sbb
mov
imulb
push
push
mov
pop
hlt
shll
rclb
pop
sbb
push
sbb
outsl
sbb
push
pop
ret
arpl
mov
lods
test
lret
cld
xchg
movsl
ss
sub
dec
loopne
enter
sbb
dec
dec
sarb
mov
lock
push
in
push
mov
dec
jae
jbe
imul
jns
jb
or
pop
lods
push
popa
cmp
xchg
or
pop
adc
dec
pop
insb
jle
cmp
out
xchg
cmp
or
cmp
xchg
decb
test
jecxz
addr16
bound
jae
xlat
daa
lods
fcoml
or
scas
mov
xlat
sub
in
inc
ljmp
xchg
adc
mov
mov
and
add
add
add
pushf
jo,pt
mov
push
push
repz
push
jp
gs
sbb
sub
mov
or
pop
nop
das
call
sub
sbb
mov
stos
xchg
idivb
cmp
pop
ret
inc
arpl
leave
jl
mov
ss
jg
test
xchg
sub
dec
dec
fwait
add
jae
enter
mov
dec
mov
dec
cmp
out
mov
imul
jne
and
test
call
xchg
clc
cmpsl
ficomps
stos
test
fsubl
in
lods
repz
mov
js
icebp
lods
inc
mov
fidivrs
mov
test
pop
xchg
xchg
mov
lds
test
call
or
adc
and
add
xor
out
enter
and
add
pop
mov
add
daa
mov
hlt
pop
dec
pop
scas
repz
push
fwait
jno
mov
fisttps
push
dec
mov
sub
cli
add
mov
pop
mov
sub
jmp
adc
mov
mov
adc
daa
inc
negl
aaa
mov
rclb
add
mov
cmp
pop
pusha
nop
sub
pop
ljmp
in
andl
jmp
and
repz
pop
jmp
xchg
cmp
mov
mov
js
out
pop
aam
cmp
pusha
sbb
aam
pushf
adc
add
jge
push
int3
stos
push
mov
mov
rclb
fistpll
es
mov
sbb
das
inc
adc
xor
push
in
test
imul
jp
clc
fistpll
shlb
pop
cmp
andb
sahf
xor
adc
mov
mov
dec
fists
jp
pop
es
dec
sbbb
lock
imul
loope
mov
pop
decl
or
das
xchg
jo
or
repnz
cltd
xchg
sub
mov
pop
loop
into
pop
add
sub
pop
pop
jno
pop
popf
xchg
jmp
ljmp
insb
adc
push
cmpsl
mov
add
cmp
add
adc
in
sahf
jb
pop
inc
dec
push
lahf
sbb
jo
jne
ljmp
push
aad
adc
out
mov
ret
sub
mov
scas
ret
jno
cli
into
pop
jmp
fstpl
test
pop
shlb
xchg
xchg
insb
in
mov
in
dec
jecxz
push
fxch
adc
out
sti
addr16
add
stc
addl
orl
adc
pop
pop
sub
test
fiaddl
punpckldq
std
pushf
xor
push
ret
int
lret
jp
call
hlt
int3
aam
fwait
add
cmpsl
and
push
add
xchg
sub
aas
scas
mul
xchg
sbb
or
stos
xchg
loopne
jnp
sub
clc
and
andl
inc
out
inc
sbb
mov
pop
and
shr
sub
mov
inc
dec
pusha
shlb
test
pushf
or
mov
xor
add
cs
mov
mov
daa
decl
stos
sub
mov
sbb
repz
cmp
xchg
pop
popf
out
arpl
cmp
cmc
nop
dec
add
mov
test
or
mov
faddp
xchg
fstpt
repnz
push
xor
inc
cmp
push
xchg
adc
cltd
mov
add
scas
jecxz
sbb
lds
inc
xchg
mov
jecxz
stc
xchg
hlt
inc
mov
lret
or
jno
sbbl
test
out
std
adc
outsb
test
scas
or
loope
orb
in
pop
jnp
in
pushf
dec
push
mov
inc
cwtl
mov
mov
lods
mov
mov
mov
adc
push
pushf
mov
pop
cwtl
test
pop
sbb
mov
mov
insl
dec
fisttpll
cld
xchg
push
xor
mov
nop
enter
cli
or
jmp
rorl
into
mov
cmpsb
dec
arpl
les
xor
shrl
adc
test
lods
jo
mull
xchg
out
popa
xchg
loop
shlb
inc
sahf
stos
rolb
cli
mov
and
sub
aas
cmp
fsubrs
sbb
lods
push
cs
push
xlat
push
jno
ss
sub
xchg
pusha
lcall
in
clc
loopne
push
jmp
or
shlb
pop
sahf
xor
int
mov
loop
or
adc
lods
loop
and
xor
dec
xchg
je
or
clc
jp
ds
dec
pop
out
cmp
pusha
negl
push
in
movsl
sbb
xlat
outsb
xchg
pop
ja
dec
pop
cld
xchg
push
push
mov
ja
jbe
mov
jl
jp
dec
loope
or
push
pop
sub
xor
adc
add
xchg
and
jo
ret
ss
dec
xor
jecxz
fucomi
jns
mov
mov
mov
xchg
je
cmpsl
xchg
push
and
push
cwtl
xchg
mov
aas
shlb
pop
cmc
aaa
ja
cltd
mov
or
mov
negl
mov
sub
mov
imul
mov
push
push
xor
and
ret
dec
xchg
adc
lcall
sbb
mov
sub
not
cmc
pop
mov
out
out
dec
adc
incb
in
mov
ljmp
fwait
add
in
add
pop
lods
jne
data16
je
out
pop
in
mov
inc
in
xor
test
push
xchg
fistps
rcr
jle
or
leave
in
mov
sbb
xchg
mov
dec
and
cld
outsb
jnp
push
push
imul
repz
xor
fldcw
aam
inc
xchg
test
jmp
cmp
imul
cmp
cmp
es
sub
movsb
sub
sti
jbe
xor
imul
and
lds
movsb
add
mov
ror
xchg
or
arpl
and
and
dec
ljmp
or
into
cmpsb
sbb
cmp
xchg
jecxz
fsubrp
pushf
sub
insb
repz
push
mov
je
loop
fnstenv
add
xchg
ret
xor
test
ret
push
jo
jg
cltd
dec
sbb
inc
push
cmp
cmp
je
addl
daa
dec
and
sbb
dec
pop
pop
mov
rcrl
aam
jge
xor
jns
pop
scas
mov
cmp
pop
bound
mov
jg
cmpsb
jge
adc
mov
ljmp
cmp
pop
xor
and
push
sbb
insl
mov
mov
clc
leave
mov
push
in
sbbl
push
ljmp
rorb
lahf
ret
int3
add
repnz
mov
xchg
pop
mov
fwait
sbb
fwait
out
jae
lret
add
pushf
jno
mov
xlat
loope
mov
imul
jle
cmp
lods
xor
push
mov
data16
mov
arpl
aad
cmp
push
sub
jb
dec
aas
mov
xlat
cmp
pop
dec
clc
js
sub
mov
into
jge
cs
sub
pop
cmp
inc
arpl
xor
cli
out
lret
mov
imul
cmp
scas
inc
shll
sub
lds
inc
faddp
jo
divl
mov
data16
fisubl
cmp
mov
fcomps
fnstenv
pop
pop
jecxz
xor
std
cltd
pop
in
jge
jge
mov
push
das
addr16
fldl
pcmpgtw
orb
xchg
push
pop
movsl
jecxz
enter
jmp
sbb
pop
out
es
xchg
xchg
jo
pusha
loopne
xchg
add
jbe
cmp
int
lods
cli
addl
sub
push
mov
lods
mov
dec
in
add
test
xor
loop
icebp
jecxz
add
pop
sarl
sub
test
ret
jae
je
test
scas
xchg
pop
xchg
pop
mov
inc
in
ds
inc
es
bound
inc
pushf
push
jecxz
aas
insl
stc
and
call
out
cmp
shlb
jb
sbb
adc
dec
jae
cs
divb
add
sbb
scas
push
inc
cmp
mov
outsb
jne
cmpb
movsb
repnz
leave
out
cld
push
sbb
mov
jp
pop
repz
pop
imul
adc
adc
xor
pusha
xlat
inc
xorb
stc
out
sub
push
cmpsl
jo
pop
dec
jb
test
in
repz
in
in
mov
ja
push
jbe
cmp
scas
and
or
lret
sbb
shrb
jns
int
dec
loope
lret
fimuls
hlt
mov
lock
fisubs
mov
inc
push
sti
scas
adc
xchg
push
jae
or
enter
ds
ljmp
push
dec
enter
mov
cltd
cld
movl
jno
sub
or
mov
aad
in
shr
push
push
inc
sbbb
jae
sub
adcb
or
mov
ss
sub
aaa
lods
mov
sbb
leave
pusha
imul
movdqu
nop
xor
or
mov
mov
pop
popf
scas
pop
and
sbb
lcall
jg
test
clc
ret
sti
push
popf
and
and
xor
ja
pop
mov
add
out
jno
test
push
int3
popf
data16
mov
push
lret
shll
sub
dec
pop
insb
or
inc
fsubrl
and
push
mov
nop
or
mov
fsubrs
js
out
mov
imul
pop
and
inc
pop
pop
mov
xor
xchg
mov
xchg
push
add
or
dec
pop
jnp
loope
dec
rclb
adc
xchg
xor
les
mov
lahf
dec
pop
dec
sbb
fwait
daa
pop
out
add
int3
xlat
jae
inc
push
jb
in
cli
xchg
push
sub
cmp
mov
int3
insl
lret
ret
pop
repnz
lret
inc
int
loope
mov
dec
js
mov
pop
sbb
xlat
pop
sbb
push
adc
cmpsl
xor
out
enter
aam
push
mov
push
popf
shrb
and
jo
push
jo
aad
andb
or
jge
xchg
lahf
xor
push
jge
mov
or
push
dec
test
movsl
pop
popf
lahf
xor
insb
sub
cmpl
sti
mov
add
mov
adc
clc
test
sub
bound
scas
xchg
icebp
lods
cmpsb
pop
loopne
mov
cmc
jo
es
jp
pop
cmp
aas
fwait
sub
and
mov
lds
es
fistl
nop
fmulp
sbb
sub
cmp
jae
sbb
add
cmpsb
push
mov
fmull
movsl
pop
js
jo
add
insl
cmp
insl
mov
shlb
jg
jne
loopne
jnp
inc
call
sbb
pop
mov
imul
pop
rcrb
mov
push
xor
int3
xor
into
mov
adc
xchg
testb
jp
adc
mov
in
in
dec
mov
sbb
insb
imul
xchg
xchg
xor
push
cmp
cwtl
call
test
out
aas
add
add
sub
xor
adc
out
dec
pop
sarb
dec
mov
es
out
pusha
out
push
jno
lea
mov
jg
scas
daa
jo
movsl
imul
testl
xchg
mov
lods
mov
pop
testb
pop
movsb
pop
scas
mov
stc
sub
scas
aas
mov
adcb
pop
add
mov
pop
fnstcw
add
adc
scas
loopne
or
and
cwtl
xor
xchg
in
sub
jg
cmpsb
imul
xchg
call
dec
fadds
jle
ds
cwtl
sub
add
sbb
mov
mov
les
xchg
fmull
scas
inc
aaa
pop
daa
jnp
inc
das
shrb
scas
repnz
inc
out
xor
popa
icebp
out
mov
test
and
mov
lret
ljmp
arpl
mov
dec
add
stos
xchg
out
addr16
ss
in
jl
sahf
mov
cmp
and
sub
mov
test
movsl
inc
mov
or
mov
push
je
test
fs
xor
sub
cmp
stos
inc
pop
test
leave
pop
loop
dec
aam
jno
pop
adc
adc
gs
scas
dec
mov
mov
rol
popa
pop
data16
cmpsb
xchg
sbb
cmp
jbe
cld
push
jmp
ffreep
jmp
and
aaa
sub
iret
pop
in
test
pop
and
add
pop
sbb
xor
fidivs
lods
dec
insl
dec
ja
xchg
test
sbb
std
dec
cmp
subl
xchg
and
leave
push
dec
mov
out
fistps
add
shll
addr16
mov
dec
nop
mov
xchg
clc
mov
repnz
adc
sarl
xchg
ss
pop
popf
mov
mov
add
inc
add
addr16
inc
pop
out
xor
mov
in
sub
cmpsl
ds
xchg
jae
aas
pushf
mov
es
push
or
mov
sub
xchg
scas
pop
dec
adc
andl
inc
mov
mov
mov
inc
xchg
adc
lea
or
jmp
or
aaa
push
cmp
jg
add
lret
andl
leave
mov
gs
mov
into
add
scas
vpandn
je
inc
aaa
into
xor
int3
add
into
aas
adc
je
dec
dec
push
subb
hlt
mov
nop
dec
loope
add
loop
xor
mov
movsl
cmp
ficoms
or
add
xchg
lcall
fbstp
or
jmp
out
arpl
xor
sub
fbld
and
jnp
imulb
ss
movsl
dec
addr16
mov
call
aam
nop
mov
push
in
lret
mov
mov
inc
mov
rolb
mov
loope
mov
nop
aad
ja
cmp
insb
pop
jle
xchg
aad
nop
fwait
dec
rcll
out
testl
dec
enter
in
inc
push
xchg
cmp
sbb
aad
stc
or
inc
push
fiadds
push
mov
test
in
cmp
out
imul
adcl
xor
decb
sbb
pop
inc
fnstenv
rorb
out
fisubl
add
add
inc
dec
call
stc
int3
scas
stos
lea
inc
in
inc
pushf
jb
cmpsb
push
inc
loop
pushf
push
popf
mov
pop
and
mov
cltd
cmpsb
push
inc
dec
or
and
js
int3
pop
pop
cltd
pop
jmp
or
xor
mov
mov
cwtl
das
push
push
and
in
fs
or
iret
cmc
adc
push
ss
arpl
fldl2t
cmpsb
lea
mov
push
pop
insl
xchg
and
test
push
xor
cld
add
nop
icebp
gs
pusha
xlat
push
loope
mov
jb
into
xchg
jno
lcall
and
and
inc
movsl
inc
and
scas
xchg
or
jecxz
add
xor
insb
cmpsl
add
movsb
mov
repz
arpl
dec
or
mov
inc
mov
xor
fdivl
push
xchg
test
jae
movsl
dec
mov
int3
int
xchg
mov
mov
pop
outsl
sub
out
lcall
out
in
repz
sbb
data16
lds
inc
adc
jae
repnz
cli
xchg
sbb
sbb
fsubl
mov
imulb
sbb
repnz
sahf
std
pop
pushf
hlt
jns
idiv
leave
std
jae
dec
scas
mov
and
lea
in
pop
lahf
lret
hlt
sbb
adc
pop
adc
into
inc
and
lods
jo
add
mov
push
in
and
jge
xchg
ljmp
lock
imulb
in
insb
ljmp
dec
or
pusha
jg
xchg
inc
fdiv
stc
adc
mov
push
mov
icebp
mov
push
inc
arpl
insb
adc
addr16
xor
mov
lcall
sbb
std
iret
pop
out
or
ss
pop
fildll
data16
adc
ljmp
jge
cmp
inc
xor
cmp
xor
dec
fbstp
or
cmpsl
cmp
jecxz
and
cmp
jp
and
aas
lock
fdivr
adcl
mov
fs
jmp
aas
xorb
pusha
out
test
jno
adc
or
aas
sbb
or
lods
fisubrl
repz
mov
test
adc
and
sti
jo
inc
mov
fmul
jns
add
ljmp
cmp
mov
inc
and
rcrb
mov
sbb
mov
ret
or
mov
shrl
cli
sbb
into
pop
cwtl
adc
pop
and
mov
cmp
push
fiadds
cli
jecxz
mov
sbb
cld
out
mov
shrl
and
dec
pop
es
das
push
add
xor
pop
push
inc
out
pop
rcrb
xchg
in
sbb
xor
cwtl
mov
fstpl
adc
inc
call
mov
push
jns
xchg
cld
or
fdivrl
push
subb
sbb
aaa
insb
and
outsb
sbb
repz
ret
icebp
jp
jnp
jnp
sbb
mov
mov
inc
iret
inc
aad
push
int
bound
push
outsb
sbb
lahf
arpl
negb
cmp
jne
add
sub
int3
incb
stos
imul
call
andl
jecxz
or
mov
scas
pop
xor
xor
cmc
jo
scas
adc
mov
xchg
mov
sbb
sub
dec
rcr
icebp
dec
jl
orl
and
fsubl
int3
mov
push
into
daa
mov
xor
pop
mov
mov
mov
stc
sub
repz
pop
aam
test
fidivs
mov
call
dec
jle
imul
popf
xor
call
inc
push
dec
cmpsl
pusha
repz
loop
jns
pop
cmpl
adc
jge
xchg
sbb
or
adc
adc
cmp
adc
and
mov
jno
lds
sbb
inc
inc
sub
aad
loop
cmpsl
in
adc
arpl
cld
xchg
test
sub
cltd
sbb
xor
or
sub
outsb
and
fisubrl
mov
push
sbb
fwait
xchg
idivb
and
xor
mov
pushf
adc
adc
pop
sub
rol
jge
addr16
in
sahf
shlb
test
cld
push
in
push
outsl
arpl
lret
bound
fucomip
lods
push
and
jns
sbb
addr16
and
pop
sbb
sahf
lods
mov
jle
jg
js
push
dec
lahf
ss
scas
inc
int3
sbb
pop
and
int3
arpl
popa
push
jae
shrb
testb
fisttpl
out
inc
cld
inc
lcall
lcall
sahf
mov
scas
out
in
jnp
jp
mov
in
mov
faddl
movsl
gs
dec
out
mulb
xchg
lcall
test
clc
test
inc
lock
ror
and
in
cltd
fs
push
push
in
mov
push
fimuls
insb
adc
ss
daa
popf
fisubrl
daa
jae
and
jnp
fisubl
add
cmc
mov
fdivs
leave
sub
and
cmc
in
add
pop
ljmp
lock
and
or
push
mov
or
into
mov
and
or
lods
xor
push
hlt
sbb
pop
inc
mov
cmp
jae
xchg
sbb
or
les
inc
xchg
rcll
push
cmc
mov
movsl
dec
and
sub
rolb
pop
cmp
xchg
cmc
pop
orb
fisubl
push
jb
sub
shr
outsb
pop
xor
loop
ret
hlt
lds
movsl
outsl
add
pop
jge
jb
and
nop
das
cld
mov
es
fwait
mov
jecxz
inc
mov
test
repnz
inc
add
push
ss
pop
sbb
loopne
aam
cwtl
sbb
loope
sarl
xchg
mov
mov
int
add
daa
xor
scas
push
inc
mov
mov
jne
adc
pop
lahf
decb
pop
repnz
sbb
pusha
add
pop
dec
cmp
clc
add
lret
dec
clc
sti
ficompl
mov
mov
mov
dec
push
das
cmp
mov
imul
into
jo
mov
les
test
inc
push
xchg
add
xor
add
dec
ja
mov
jp
pop
mov
mov
mov
or
cmp
inc
xchg
insl
mov
push
test
jmp
out
add
xchg
mov
shlb
cld
scas
stos
push
mov
mov
sub
nop
fists
test
mov
adc
aaa
in
lea
fmull
loopne
jmp
mov
mov
addb
sahf
pusha
push
adc
jns
stc
ss
push
mov
fst
xchg
in
xor
sbb
sahf
mov
je
ret
test
sub
dec
cmp
or
jo
lods
popf
mov
and
push
lods
dec
mov
xor
es
push
mov
icebp
rol
pop
enter
cmp
icebp
xor
and
push
sbb
ficoms
and
aad
rcr
pop
insl
in
pop
rcll
push
pop
rcll
xor
jg
adc
jle
push
test
jb
jge
jecxz
pop
mov
adc
repnz
jb
adc
cmc
sbb
push
hlt
dec
lret
jae
cmp
pushf
xchg
mov
repz
mov
sbb
or
iret
push
inc
xor
mov
nopl
sub
lods
aas
pop
out
push
scas
jne
fldcw
ret
cli
fdivr
sti
xchg
sbb
sbb
add
xchg
sbb
mov
or
popa
inc
fs
int3
loopne
xchg
movsl
push
sbb
rcrl
xor
rcll
cmc
inc
push
mov
push
xor
punpckldq
dec
dec
inc
add
add
xchg
inc
ffree
adcl
outsl
adc
add
or
dec
pop
lock
fadds
push
pop
insb
add
fdivr
xchg
push
mov
sbb
clc
or
testb
jge
push
jb
mov
test
xchg
arpl
and
repnz
icebp
push
sbb
and
jl
adc
dec
out
insl
xor
mov
push
pop
jbe
dec
adc
inc
add
cmp
sub
inc
movsb
dec
mov
ds
in
cmp
test
pmaxub
cmpsb
dec
fldenv
js
inc
fwait
pop
fsubrs
imul
sti
int
sbbb
jl
cli
movsl
into
ds
add
fbld
dec
mov
out
out
std
xchg
imul
cltd
pop
test
add
pop
imul
insl
stos
cmp
lcall
cwtl
mov
xchg
in
add
iret
sahf
insl
jbe
sbb
cmp
out
inc
dec
cmp
xor
fs
dec
or
mov
cmc
insb
push
mov
nop
or
mov
jne
xor
fstl
jae
xchg
mov
fsubrp
mov
sub
adc
jno
inc
inc
mov
int
jbe
xchg
inc
test
testl
inc
cmp
xor
and
cmp
aad
mov
in
jno
shll
sbb
pop
jge
and
lock
insl
or
outsb
push
pushf
call
push
cmc
cltd
es
pushf
adc
adc
fldt
in
xchg
hlt
call
add
int
arpl
sarl
jl
js
lods
call
int
fwait
ss
pop
loopne
add
fcoml
and
dec
xlat
dec
std
sahf
out
pushl
jmp
sahf
ljmp
mov
nop
xor
mov
push
cltd
cmc
mov
daa
mov
stc
mov
filds
std
xchg
movsb
sub
test
dec
cmp
ret
inc
xor
pop
addr16
dec
xor
mov
cltd
xor
mov
cmp
sarl
sub
les
mov
xchg
cs
mov
pusha
popf
push
test
mov
add
sarl
ja
flds
lret
mov
clc
sbb
fmull
fwait
jl
xchg
and
out
daa
adcb
jb
pop
mov
fwait
shl
std
adc
adcl
lock
into
push
jns
mov
notb
push
inc
faddl
test
cli
fsts
in
cld
dec
lfs
push
sbbb
stos
adc
test
mov
fisubs
shlb
inc
push
add
mov
mov
int
cltd
adc
jge
push
ljmp
xor
inc
lods
jnp
fidivs
adc
jmp
jae
jmp
out
cmpsl
jb
mov
pop
inc
test
add
shl
out
and
stos
xchg
std
xchg
pop
lret
inc
mov
or
sbb
lret
in
sbb
inc
push
mov
mov
and
sub
mov
aas
and
inc
cld
xchg
je
inc
arpl
adcb
jo
fxch
cmp
push
adc
mov
outsl
call
test
subl
or
add
aam
and
pop
lods
fsts
repnz
scas
and
scas
inc
fildll
adc
aad
push
jmp
fdivrs
lods
lock
adc
add
mov
xor
push
data16
rcrb
mov
xor
add
inc
jmp
andb
lret
and
dec
jne
shlb
push
mov
cld
xchg
and
les
inc
std
shll
mov
in
insb
testl
mov
mov
lods
nop
jmp
or
lods
aas
ja
and
adc
push
sti
inc
or
cli
int3
xchg
jmp
in
jne
loope
push
das
aas
gs
jo
add
into
repnz
and
out
and
sbb
pop
jmp
and
and
ret
rcr
addr16
ja
outsl
sarl
out
dec
repnz
sbb
fistpl
lahf
ljmp
scas
mov
mov
dec
push
fwait
jg
jae
clc
cmc
cli
imul
jo
mov
mov
stos
jp,pn
push
or
lods
push
mov
pop
push
push
xchg
data16
pusha
cmp
gs
mov
dec
scas
leave
and
mulb
cmpsl
lcall
shl
outsb
popf
xchg
insl
mov
mov
ret
cmc
adc
rolb
dec
fistps
rcr
iret
jecxz
push
leave
adc
mov
leave
ret
test
jecxz
cmpsl
loopne
addr16
divl
mov
xor
imul
lahf
xor
popa
outsb
inc
and
fidivs
push
sub
add
ret
lea
nop
cmpsl
jo
int
jg
mov
xchg
or
fwait
xchg
mov
or
jnp
cmp
cld
in
ret
in
pop
in
mov
inc
loope
out
mul
mov
xchg
mov
iret
push
in
add
lcall
push
lret
pop
mov
adc
leave
xor
mov
pop
xchg
pop
movsb
cmp
out
mov
add
jp
mov
cmp
aaa
push
jmp
in
loopne
dec
popf
or
loop
dec
inc
and
jle
jns
mov
subb
pop
ret
cmpsb
rcr
dec
dec
cs
aam
cmpsb
or
jl
or
xchg
jecxz
lcall
and
cltd
loope
inc
out
jg
je
fisubl
in
testl
and
xchg
pop
mov
sbb
mov
pop
je
mov
test
inc
and
add
mov
lret
mov
bound
xor
push
xlat
clc
sub
ss
jp
or
cli
lcall
loop
jb
mov
pop
adc
mull
in
jns
dec
addr16
inc
push
popf
sti
dec
out
jge
xchg
adc
jb
pop
testb
subb
stos
jge
aad
daa
out
pop
inc
cmpsl
jb
mov
mov
inc
xchg
aaa
leave
xlat
icebp
ja
loop
outsb
into
adc
dec
xor
lahf
xor
mov
xchg
inc
adc
insb
enter
int3
std
mov
or
dec
cmp
dec
mov
leave
aad
adc
xchg
outsb
xchg
sub
scas
inc
repz
mov
mov
in
es
jno
fcomip
dec
mov
adc
dec
pop
mov
sub
or
mov
pop
and
pusha
cmp
test
or
cltd
or
and
imul
icebp
lret
xchg
scas
stc
cmp
es
call
adc
cmpsb
das
inc
xrelease
and
pop
in
decl
sub
ret
dec
pusha
std
jecxz
cmp
xor
movsl
add
jl
cmp
or
or
es
push
les
in
sti
pushf
mov
dec
sbb
pop
jge
std
sbb
cmpsb
or
popf
iret
fldt
fistpl
data16
add
cmp
inc
xor
loopne
push
nop
sbb
pop
and
cmp
fnstenv
jne
mov
iret
out
aam
mov
lds
dec
xor
pop
sbb
mov
dec
ret
inc
lret
adc
adc
mov
cmp
push
test
pop
roll
sub
test
daa
xor
xchg
bound
dec
or
push
push
jmp
push
cmp
stos
mov
jno
or
fsts
jl
out
iret
pop
dec
mov
and
and
out
nop
imul
scas
int
inc
in
addr16
je
xchg
int3
fcmovnbe
int3
xchg
adc
mov
sbb
adc
jecxz
jno
dec
add
ds
jmp
aaa
and
mov
fwait
jl
lret
push
mov
fstpl
or
xlat
aas
xchg
add
inc
sub
jg
or
outsl
cmp
loope
scas
push
cmp
test
std
enter
imull
and
popa
adc
pop
ja
pushf
cs
push
popa
decb
inc
hlt
fnstcw
shr
xchg
cltd
push
out
xchg
push
sub
clc
int3
dec
lea
pop
mov
jbe
shrb
jae
iret
movsb
into
dec
and
out
das
jo
jle
and
popf
adc
pusha
push
pop
mov
mov
stos
and
xchg
imul
cli
adc
decb
mov
push
and
out
cmp
mov
clc
movb
negl
and
enter
cmp
mov
mov
out
int3
arpl
cmp
sbb
scas
bound
jle
lret
xor
scas
scas
rorb
iret
repnz
add
jae
xchg
jmp
dec
cmc
outsl
shlb
push
ret
cwtl
pop
cmpsb
pop
in
and
inc
jge
adc
imul
les
popf
fucomi
int3
inc
stc
out
dec
subl
sbb
dec
mov
inc
daa
or
push
dec
loop
imul
call
sahf
dec
in
push
imul
xor
out
sub
dec
loop
daa
xchg
daa
ret
cmpsb
mov
inc
in
je
inc
stc
adc
dec
fistpl
pop
cmp
dec
in
imul
mov
adc
push
or
cli
nop
pop
adc
pop
mov
icebp
movsl
sub
xchg
jecxz
cmc
loope
push
xorl
ja
add
pop
xchg
mov
dec
mov
shlb
xchg
mov
xor
push
sbb
and
cmp
or
and
mov
scas
inc
hlt
pop
sbb
sbb
adc
sub
xor
pop
mov
adc
cmp
shl
mov
daa
adc
push
out
cs
insb
shrl
sbb
dec
popa
into
sub
mov
stc
dec
dec
mov
sbb
stos
adc
out
test
cmp
rcrb
insb
adc
movsl
dec
inc
mov
andb
push
dec
sbb
sbb
les
dec
push
inc
jnp
bound
das
nop
cmpsl
pop
loopne
add
outsl
cmp
jecxz
or
stos
gs
pushf
popa
imul
mov
push
xorb
and
pop
lret
popf
add
in
dec
cmp
mov
push
dec
pop
xchg
aas
sbb
mov
popf
xor
aas
pop
insb
cmp
jno
mov
rolb
mov
jnp
jmp
or
or
inc
repnz
negb
fidivrs
ret
sbb
in
repnz
add
xchg
not
loop
or
jl
into
cmc
dec
ja
iret
dec
jbe
add
xchg
pop
lock
insb
test
xchg
sub
jp
ds
sahf
sub
into
pop
insl
loopne
push
jg
xor
jnp
inc
lods
sub
or
jmp
test
jl
adc
fbstp
inc
mov
xor
gs
rcr
dec
sbbb
dec
and
lret
mov
sbb
xor
xchg
sub
or
mov
mov
adc
sbb
cwtl
addr16
lds
pop
mov
pop
fildl
dec
scas
cmp
fdivl
out
dec
ja
mov
lods
movsb
xchg
loop
xor
xchg
mov
mov
paddq
mov
cmp
les
lds
jne
mov
pop
dec
jecxz
inc
or
ja
push
dec
xchg
push
add
sub
xchg
xor
stos
pop
mov
ss
xchg
cltd
int3
je
popa
mov
jp
lods
and
bound
and
cmpsb
push
outsb
mov
test
scas
call
pop
adc
adc
push
xor
cld
aaa
mov
fistpl
pop
aas
loopne
push
aad
or
fsubrl
xchg
push
nop
fistps
mov
adc
cmp
dec
mov
test
mov
je
sbb
lret
xorl
xlat
aas
mov
hlt
push
cld
and
xor
sbb
roll
test
mov
dec
mov
test
adc
xchg
sub
lds
scas
inc
int
loop
mov
fsubr
test
inc
fbstp
das
sbbb
xchg
adc
mov
fbstp
sbbb
cmp
cmpsl
push
insl
add
jbe
jbe
sbbb
js
cmpsl
stos
mov
fbstp
xor
cmpsl
xchg
mov
add
fbstp
bound
test
push
insl
add
inc
inc
andl
add
out
gs
xchg
add
mov
fidivl
mov
pop
push
fistps
jmp
out
xor
xchg
pop
mov
lods
add
push
xor
xor
sub
add
sahf
outsb
mov
and
jns
cld
and
ljmp
push
pushf
push
sbb
mov
inc
xchg
test
enter
cli
shlb
cmp
sbb
aaa
mov
mov
aad
ret
jge
or
push
push
test
dec
sub
stc
push
cmpsl
dec
movsl
mov
rorl
jo
sub
out
xchg
repnz
mov
jmp
fidivs
mov
rorl
or
xor
mov
jp
jbe
sbb
lret
jo
sti
lret
pop
stc
and
mov
aad
test
jle
xchg
dec
shrl
mov
loop
and
xchg
mov
pop
push
inc
mov
insb
sbb
scas
lds
xchg
xchg
test
adc
xchg
add
call
xor
pusha
pop
or
lcall
or
hlt
lret
jg
dec
jl
in
lods
push
cltd
sbb
shll
cmpl
jns
pop
pop
dec
mov
jbe
xchg
pop
imul
mov
xchg
pop
lods
popf
jl
fisubl
and
je
cmc
sbb
xchg
dec
and
push
sub
jmp
dec
gs
movsl
lock
imul
xchg
push
mov
imul
cltd
pop
dec
les
in
sub
pop
dec
je
xchg
ss
dec
pop
je
push
das
jmp
cld
xchg
push
je
add
aad
jbe
inc
scas
xor
icebp
imul
pop
das
aas
jbe
sub
adc
popf
cmp
pusha
nop
jnp
inc
adcl
jp
fs
ja
xchg
lods
rcrb
mov
iret
lcall
dec
mov
popf
out
sub
aad
in
dec
sahf
int3
lds
sub
push
orl
movsb
dec
in
mov
push
sti
xchg
and
dec
push
test
jne
daa
in
repnz
fmul
scas
xor
pusha
or
xchg
lcall
lods
test
roll
and
idiv
xchg
loop
call
stc
jbe
aaa
jne
cmpsb
test
mov
and
sbb
inc
fcomps
cmp
push
outsb
inc
out
rcr
dec
jnp
ret
ja
cmc
call
sub
ds
dec
jp
xor
cwtl
icebp
mov
push
add
push
pop
and
add
pusha
out
movsb
sub
fwait
push
xchg
mov
xchg
js
lds
ljmp
negl
aaa
fbld
push
cmp
adc
fwait
into
add
cwtl
lods
fcomps
into
dec
push
mov
xchg
rcrl
push
mov
mov
mov
imul
rol
pop
or
or
xchg
add
and
je
inc
inc
loop
aaa
ljmp
sbb
mov
mov
push
mov
andb
loopne
jmp
push
notb
jbe
jbe
jae
sbb
inc
pop
popa
js
jmp
jle
cld
andl
movsb
clc
aad
es
push
jns
out
mov
leave
test
inc
xor
repnz
mov
pop
scas
test
jmp
aad
jbe
pop
stos
mov
mov
push
mov
enter
nop
stos
jb
dec
in
xchg
sarb
outsb
jecxz
push
pop
and
cmp
scas
cmpsb
imul
leave
lods
lret
push
lret
aad
ror
in
and
sub
stos
and
jp
push
test
mov
xchg
popa
adc
mov
push
es
test
push
std
outsb
lds
jp
push
negb
dec
test
mov
inc
xor
filds
vcmpord_sps
lahf
mov
push
adc
mov
rcll
push
xor
sub
mov
lods
cltd
out
xchg
shll
ss
bound
adc
xlat
adc
inc
bound
enter
aaa
pop
mov
lea
xchg
lock
sub
push
rolb
and
and
stos
out
pop
je
inc
pop
icebp
int3
lret
iret
mov
lea
inc
xchg
xor
xchg
sbbb
lret
jmp
jmp
inc
inc
jecxz
hlt
sbb
loope,pt
arpl
or
inc
push
jmp
push
jno
xchg
out
dec
nop
stc
popf
mov
jmpw
aam
pop
push
dec
out
lcall
imul
xor
mov
test
fbld
test
jnp
rcrl
cmp
fdivl
sub
je
mov
in
and
xchg
push
int3
dec
xchg
or
loopne
or
popa
mov
roll
xchg
xchg
xchg
loope
push
inc
mov
sbbl
adc
push
adc
xchg
or
stos
cmpsb
mov
xchg
push
popf
cli
mov
shll
push
or
les
add
out
sarl
jecxz
outsl
mov
jecxz
nop
jno
dec
adc
sbb
mov
lea
or
mov
xchg
ficoml
lret
aas
mov
push
std
hlt
jnp
pop
sub
adc
jecxz
and
cs
faddl
js
and
fiaddl
dec
cmp
pop
dec
lods
pop
out
add
scas
sbb
mov
gs
lea
jle
int
les
fwait
adc
loope
pop
jo
or
and
sub
jnp
out
arpl
xchg
xor
fmull
adc
adc
pushf
jge
call
iret
dec
jbe
pop
cmp
dec
repnz
and
push
sub
sbb
mov
bound
repz
std
push
sbb
popf
lret
fxch
add
or
dec
aas
mov
cwtl
int
test
shrl
cwtl
aad
sahf
sub
adc
mov
xor
lods
mov
stos
jge
xchg
es
fisubrs
adc
mov
jle
and
cmpsb
or
dec
mov
push
sub
push
sbb
xor
bnd
cs
mov
add
dec
lret
out
jg
mov
lahf
movsb
sarb
pushf
lock
ja
das
mov
in
jle
xchg
daa
add
push
and
sbb
and
ljmp
push
in
fs
jbe
outsl
pop
clc
fisubs
lea
out
subl
xor
jno
imul
test
jge
cli
int
xchg
pushf
xor
xchg
jbe
out
jg
cltd
pop
scas
rolb
sbbb
popa
sub
inc
test
pop
repnz
clc
adc
arpl
fisubl
dec
gs
sbb
movb
lahf
into
gs
sbb
jg
call
sbb
flds
subl
mov
scas
xor
jae
sahf
pandn
sbb
sub
data16
andl
in
cmp
or
out
pop
ja
add
mov
push
cmc
mov
popf
push
push
push
das
and
or
xorl
add
mov
adc
lea
pop
sbb
in
adcl
or
enter
jno
outsl
movsl
fld
mov
mov
inc
cwtl
xchg
fldln2
enter
scas
or
xchg
mov
sub
jp
jg
jne
push
test
adc
xor
or
jl
sbb
jae
aaa
cmp
insb
scas
xlat
cmc
lods
movsb
insb
mov
pushf
sti
inc
cmc
mov
int
sbb
lcall
test
repz
pusha
cltd
iret
data16
xor
mov
mov
mov
test
mov
push
lret
les
std
js
pop
movsl
sub
adc
stos
cmp
ficoms
xor
push
repnz
lcall
and
push
fcoml
iret
and
jne
mov
jne
negl
popl
in
repz
mov
inc
adc
xchg
mov
inc
jns
out
test
rorb
push
sahf
pushf
or
ljmp
loop
pusha
leave
and
adc
daa
in
push
pop
ret
data16
push
in
pushf
andb
xchg
ret
lcall
jne
icebp
xlat
imul
cltd
fs
add
test
xor
stos
mov
inc
jne
outsl
pop
fwait
insl
cmp
inc
cmpsb
mov
cmp
mull
fsubl
jp
mov
jecxz
nop
pushf
ret
call
lea
cmp
imul
ret
in
imul
pop
sub
push
adc
nop
cmp
lods
nop
nop
std
lret
add
xor
ja
std
adc
xchg
pop
mov
mov
pusha
pop
pop
hlt
jmp
or
aas
test
js
ss
outsb
sub
pop
in
adcl
out
add
sbb
xchg
xchg
mov
mov
jle
test
jbe
mov
test
cmp
into
push
out
mov
xchg
add
sahf
fiadds
lret
pop
in
aam
pop
mov
movsb
push
lcall
aam
push
gs
adc
inc
dec
call
mov
sbb
push
je
jp
enter
xchg
fs
lds
aaa
sbb
mov
cmp
cmp
mov
mov
aad
or
inc
dec
int
or
cltd
lret
out
ret
dec
fisttpll
fistpl
orl
push
cwtl
jns
sbb
inc
push
sub
insb
sub
lret
inc
gs
pop
cmp
sub
sbb
mov
or
or
adc
leave
loopne
popf
push
push
pop
jno
jbe
aaa
mov
pop
inc
push
adc
jg
pusha
xor
or
xchg
xchg
je
sub
ljmp
or
adc
pop
inc
out
mov
movsl
push
sub
push
mov
loope
push
jno
dec
and
sub
fbld
fcmovnb
ss
cld
pop
cs
pop
shlb
ret
aaa
mov
ret
inc
arpl
and
cmp
xchg
pop
sub
jle
cmp
mov
into
test
ja
xor
inc
repnz
push
and
inc
popa
je
jp
mov
mov
shlb
rcll
clc
movsb
add
xor
jg
add
sbb
loope
dec
in
inc
test
pop
mov
push
ja
nop
and
add
movsl
movl
jns
stc
pop
out
push
push
call
mov
pop
push
sub
divl
xor
ljmp
in
mov
jbe
or
xchg
pop
push
shll
adc
imul
xor
sbb
lods
adcb
int3
cmp
fnstcw
mov
push
ret
mov
fcmovbe
fwait
daa
cmp
shll
sbb
ljmp
jl
sbb
pop
in
dec
pop
mov
rol
clc
xor
xchg
push
pop
int3
rolb
push
inc
and
inc
leave
lret
or
and
cltd
jle
ret
and
ja
mov
dec
and
xchg
lcall
movsl
in
sbb
pop
xor
dec
imul
scas
shr
cwtl
xor
les
mov
and
dec
dec
adc
les
push
push
mov
jle
sbbb
pop
in
pop
adc
mov
push
stc
test
lea
xor
fsubs
test
mov
out
shrl
pop
dec
mov
mov
lods
lds
stc
inc
mov
cmp
mov
push
mov
jecxz
testb
push
jb
lahf
xchg
pop
sti
lods
mov
test
adc
sub
xchg
ret
pop
xor
sbbl
out
add
push
add
inc
dec
pop
mov
bound
ret
jp
iret
fstl
xchg
icebp
inc
sub
or
cld
nop
scas
sub
sbb
inc
sbb
sbb
mov
mov
divb
add
or
push
mov
jns
mov
int
popf
adc
cmp
in
sub
ret
add
inc
jae
xchg
cmpl
pop
sub
in
mov
ljmp
cltd
lcall
shll
and
or
xchg
les
rol
sub
rorb
inc
push
mov
cli
or
mov
jg
in
sbb
sub
ret
and
dec
pop
mov
ret
shll
ffreep
or
sbb
inc
out
cmpsl
jno
jae
aaa
jg
adc
dec
mov
jae
adc
pop
push
xor
mulb
insb
stos
popa
xor
mov
push
inc
xor
lods
push
or
daa
sub
xor
into
inc
cmpsl
rorb
inc
pop
sub
fwait
arpl
push
mov
push
mov
pusha
lods
pop
ss
jmp
mov
repnz
ja
das
insb
jg
xor
int3
xchg
or
sub
push
add
ret
out
in
pop
fistl
push
add
xchg
mov
jnp
test
lods
jmp
scas
inc
push
adc
imul
mov
cmp
push
pop
insb
daa
dec
test
inc
sarb
movsl
inc
scas
or
and
mov
loope
jbe
push
dec
mov
cmc
sub
mov
stc
cmp
push
scas
and
std
sbb
inc
cmp
mov
add
cmp
cmp
lock
in
dec
and
adc
mull
push
push
popf
in
das
xchg
ja
push
mov
shll
push
aas
adc
scas
repz
mov
dec
outsb
or
cli
repnz
jns
push
pop
add
add
iret
cmc
scas
cmp
cmp
stos
sbb
ss
xor
in
jno
mov
inc
ret
jp
xchg
push
adc
and
das
into
popf
cmp
mov
lcall
or
jno
xchg
and
sbb
fadds
and
ljmp
ljmp
push
ret
or
loope
push
push
repnz
cmpsl
js
sbb
xchg
mov
rcrb
cwtl
daa
push
shll
mov
xor
or
ds
scas
call
add
sahf
push
push
sub
mov
ret
cmp
pop
jmp
mov
mov
iret
iret
fcmovb
xor
mov
out
inc
inc
out
mov
out
xor
jmp
in
cs
pop
sbb
xchg
sub
shrb
xor
mov
es
fistps
add
js
push
sub
and
add
sub
adc
mov
fwait
mov
shlb
pop
hlt
inc
or
test
ljmp
xchg
rol
inc
ret
sub
fcoms
lea
cld
add
sbb
pop
shll
ret
stos
inc
and
enter
mov
ficompl
ds
outsl
mov
xchg
jg
xchg
xchg
lock
cwtl
test
and
pop
dec
loop
cmpsl
sbbl
mov
pushf
inc
cmp
xor
insb
aas
outsb
sti
ret
shll
fisttps
inc
divb
adcb
aas
fdivs
sahf
roll
mov
adc
in
xchg
cmp
dec
xor
clc
mov
mov
jmp
in
cli
outsb
test
in
mov
sub
add
mov
fwait
mov
mov
inc
pop
cltd
dec
scas
je
ja
loope
push
sbb
stos
add
outsb
or
in
fldl
jg
negl
stos
xchg
xchg
mov
pop
stos
lahf
fadds
test
lret
enter
mov
addr16
mov
gs
lret
add
mov
fmul
not
xor
loopne
xor
jno
imul
and
out
das
dec
cld
pop
lock
outsl
jns
pop
ja
or
daa
aad
pop
cmp
cli
fwait
insb
mov
dec
out
lods
fcompl
test
xchg
and
ds
inc
aas
clc
mov
in
aam
jg
and
add
xor
movsb
sahf
xor
jecxz
dec
sub
xor
adc
in
bound
sbb
adc
push
sub
xor
pop
pop
movsb
icebp
aad
mov
ret
sub
mov
sbb
push
repz
mov
outsb
mov
and
push
dec
adc
mov
lcall
lock
sti
inc
icebp
sti
pop
movsb
mov
sti
stos
xor
and
stos
inc
dec
jl
inc
ljmp
mov
aas
jmp
mov
cs
push
ss
inc
cmp
add
jae
push
sub
test
inc
jmp
pop
sub
cmp
sbb
jecxz
pop
fists
cltd
xor
stos
mov
adcl
inc
mov
int
lods
xchg
sbb
stos
fwait
pop
jnp
jbe
stc
mov
or
daa
add
mov
fwait
sti
cmp
lods
dec
hlt
mov
aad
jo
dec
in
nop
xchg
add
jb
mov
sti
pop
jns
pop
outsl
mov
xchg
pop
inc
or
nop
xor
outsl
and
bound
imulb
adc
jno
jnp
adc
stos
hlt
aaa
push
lret
xchg
insl
insb
lcall
lret
iret
addr16
fxam
dec
add
imul
ret
aam
mov
jnp
imul
loope
xor
out
cmp
xor
notl
sbb
mov
fcompp
xor
ret
sahf
test
outsl
scas
test
add
movsl
cs
out
int3
mov
leave
jne
mov
popa
pop
scas
in
push
cwtl
icebp
cmp
jl
mov
sub
insl
push
loop
jge
adc
int
rclb
cli
test
seto
filds
subb
test
xchg
jns
rcrl
cli
dec
cmc
daa
or
adc
or
push
mov
push
inc
jmp
and
mov
mov
cmp
jae
movsl
addr16
sbb
test
jle
sbb
lcall
shlb
mov
sub
lret
divb
popa
push
add
inc
pop
ljmp
jno
loopne
inc
fldenv
lahf
aad
mov
std
pop
sbb
add
sbb
jnp
out
and
scas
imul
add
dec
xrelease
dec
mov
ja
mov
add
stos
nop
bound
popa
imul
out
cld
outsl
decl
push
mov
lahf
stos
pop
adc
lea
jbe
mov
js
in
loope
xor
icebp
pop
pop
aas
dec
ret
dec
filds
lahf
stos
cmp
mov
ds
jne
xchg
out
inc
inc
pop
sub
icebp
aaa
push
pop
das
aad
popf
mov
pop
mov
inc
mov
in
pop
pushf
addl
add
push
imul
fwait
push
jg
adc
in
xchg
ljmp
mov
or
negb
mov
cli
js
pop
pop
lret
shrb
lods
push
xlat
push
jg
or
cld
inc
jp
push
pop
mov
cmp
mov
dec
sbb
popf
repnz
and
and
ret
sub
dec
push
mov
lahf
rcl
stos
adc
jle
bound
popf
in
scas
lods
inc
jne
xchg
lret
jg
lahf
out
ret
mov
mov
dec
pop
xchg
sub
and
cli
inc
in
mov
shrb
xchg
fistpll
xchg
in
add
rcll
rcll
leave
test
jno
adc
mov
arpl
xchg
popa
jmp
add
mov
stc
mov
outsb
std
dec
add
ljmp
mov
stos
mov
sbb
adc
ja
popa
xor
pop
sub
dec
rclb
cmc
lods
call
push
xor
loope
mov
loop
xor
adc
jecxz
mov
pop
testl
pop
jp
xchg
cmp
fimuls
or
hlt
into
mov
push
fists
int
fs
out
int
cmpsb
jmp
into
mov
ds
prefetchw
or
xor
scas
lea
cmp
mov
fldt
push
mov
mov
xchg
dec
hlt
icebp
lret
fisubs
mov
aad
inc
fwait
sbb
dec
out
test
ss
out
inc
fs
ss
mov
insb
inc
xlat
or
aad
inc
pop
hlt
xchg
stc
ljmp
adc
repnz
fimuls
rcrl
mov
aam
popa
stos
or
adc
push
xor
roll
data16
fcmovu
mov
pop
lret
inc
sti
jnp
xor
inc
sub
push
mov
ss
fyl2xp1
nop
stos
xchg
mov
sahf
and
sahf
and
mov
push
outsl
adc
lds
mov
add
stos
stc
nop
fmul
aaa
push
cmp
pop
xor
pop
in
mov
xchg
addr16
stos
std
mov
loop
xor
xchg
insb
jmp
shlb
mov
leave
sahf
jecxz
ljmp
adc
jae
movsb
add
mov
add
push
and
mov
xor
lcall
sarl
xchg
rcrb
adc
lret
xor
push
cmc
add
movsb
inc
fisubs
adc
push
xchg
mov
repz
out
in
loope
pop
xchg
mov
not
adc
pop
mov
hlt
test
push
jb
jbe
jno
xor
std
mov
cmpsb
leave
jbe
mov
xchg
ret
or
gs
rclb
iret
loope
cltd
pop
and
dec
or
cs
add
jnp
and
push
ret
or
mov
das
jle
in
movsl
lahf
dec
dec
xchg
jnp
mov
rcrl
mov
sub
testb
xchg
popf
mov
imul
jb
popa
inc
fcoml
mov
es
sti
dec
leave
pusha
aas
pushf
stos
inc
psraw
adc
leave
int
or
js
or
insl
dec
sub
mov
mov
mov
jb
mov
enter
cs
fs
out
push
scas
fidivl
jmp
adc
inc
clc
sahf
in
add
je
insl
pop
or
cmp
in
pop
xlat
mov
pop
sub
ficompl
lods
inc
negl
adc
add
fbstp
mov
test
dec
mov
add
sub
or
cs
dec
add
or
mov
push
stos
fwait
push
adc
negb
es
add
pop
jmp
mov
mov
xchg
jecxz
cmp
ss
in
jnp
adc
mov
popa
cwtl
rclb
dec
loope
add
mov
pop
push
sub
xchg
and
call
or
lds
pop
imul
adc
outsl
push
cmc
sbb
into
dec
push
mov
cltd
rcrb
add
pop
add
jl
jmp
add
inc
adc
aad
cwtl
push
loopne
jge
xor
fidivl
push
fwait
xor
mov
pop
testb
mov
data16
xchg
fidivs
cmpsb
pop
not
push
outsl
push
push
idivl
sub
and
dec
mov
jl
lret
bound
mov
xchg
xor
andb
movsl
aas
subl
test
bound
int3
jmp
add
inc
out
aas
sbb
xor
outsl
mov
dec
jecxz
and
daa
jbe
push
movsb
inc
lds
cwtl
das
add
mov
icebp
and
stos
inc
dec
jne
sbb
mov
xor
sahf
rcrb
mov
rclb
and
fs
pop
push
in
xor
push
jae
mov
lods
inc
pop
scas
xchg
loopne,pn
sub
lahf
sub
dec
loopne
jg
into
lods
push
adc
or
mov
cmp
jl
loopne
jns
subb
pop
sahf
std
and
mov
mov
adcb
mov
fwait
xor
mov
pushf
fmul
pusha
adc
scas
inc
aas
jo
cmp
sbb
pop
repnz
xchg
movsl
jmp
stos
sbb
jp
xor
outsl
sahf
ljmp
mov
ret
pop
xor
in
andl
insl
mov
mov
jmp
call
lock
insb
push
mov
jge
popa
mov
and
mov
jnp
subl
aam
test
pop
scas
xor
repnz
push
xchg
mov
js
pop
lods
aad
fidivrl
stos
stc
shrl
lret
add
mov
push
cmpsb
inc
fcom
je
dec
mov
les
and
mov
mov
push
mov
ret
testl
lret
dec
stos
shrl
xchg
push
dec
sub
jp
aad
push
stos
inc
call
jnp
xor
jbe
lret
sub
adc
xchg
cmp
in
cli
push
lahf
xchg
mov
lock
leave
sub
sti
push
jnp
xorb
lock
mov
mov
in
push
xchg
sub
xchg
leave
pusha
mov
jnp
addb
jne
sub
lds
fwait
xor
xchg
mov
push
fcoml
mov
dec
jnp
inc
fmulp
scas
xchg
ficomps
fmuls
popf
shrl
xchg
gs
movl
push
subb
int3
int3
dec
jno
jp
jno
mov
leave
pusha
shlb
es
es
xlat
outsb
in
daa
mov
bound
sub
pop
repnz
dec
out
xor
or
mov
call
inc
jmp
jne
xchg
sub
mov
int
fiadds
mov
jnp
mov
enter
or
xchg
sub
mov
gs
loopne
jge
cmpl
mov
lret
mov
fsubr
pop
lds
loope
push
mov
lret
mov
lea
aas
leave
pusha
outsb
fwait
gs
leave
rorb
hlt
pop
mov
mov
mov
sbb
and
lea
inc
fmulp
or
lods
lea
fwait
xor
popa
clc
cmc
pop
lods
inc
and
cmp
fdivrp
inc
movsl
cmp
sub
test
pop
mov
mov
xor
dec
mov
imul
fwait
xor
lcall
roll
out
pop
out
nop
mov
das
aam
imul
xchg
xlat
and
aad
dec
fistpll
pop
loope
mov
or
mov
push
sbb
mov
and
cld
cltd
xor
in
jno
es
out
cmc
sub
je
adc
gs
cmpb
cltd
aam
add
jmp
pop
adc
adc
jnp
xorb
or
add
jnp
out
test
cmp
ja
out
pop
rclb
les
xchg
sbb
stos
call
scas
inc
lods
add
fbld
push
in
test
jne
aas
test
mov
mov
imul
push
add
mov
jg
jecxz
dec
xchg
sub
fsubrs
cmpsl
adc
add
ja
sub
jl
addr16
xlat
outsb
je
lods
inc
mov
jg
daa
scas
inc
add
inc
test
enter
jns
inc
dec
loop
int
dec
lcall
dec
in
push
call
lcall
sub
push
push
inc
fiadds
mov
xchg
sub
adc
fwait
xchg
sub
and
push
push
sub
or
icebp
mov
sbb
dec
push
fbstp
aam
inc
push
movsb
std
xchg
shlb
popf
xor
testl
mov
popa
clc
jb
inc
fmull
xchg
or
pop
in
jnp
sbb
test
lret
xor
add
rcrl
das
pop
jge
scas
stos
ss
xchg
fs
mov
xor
fsubrs
add
ret
repz
inc
aam
xor
push
pop
cs
mov
aas
test
leave
inc
fdivr
pop
mov
call
loopne
jbe
fwait
add
xor
push
arpl
test
push
in
inc
movsl
xchg
sub
push
insl
test
shl
icebp
inc
or
jns
adc
inc
lcall
xchg
icebp
and
outsb
test
cmp
xchg
or
enter
sbb
jo
insl
add
scas
cmp
stos
inc
mov
mov
cli
out
outsb
add
cmp
fldcw
int3
mov
cli
mov
jns
pop
push
out
push
pop
add
push
std
daa
mov
cmp
fdivrs
loop
sub
outsb
add
cli
push
lods
sub
jmp
mov
mov
fdivp
sbb
and
push
mov
cmp
mov
xor
mov
jns
rorb
sti
out
sbbl
sbb
lock
scas
fmuls
mov
test
pop
les
in
sub
mov
nop
nop
xor
call
popf
aad
adc
mov
cld
xchg
add
jge
jle
add
push
cmp
addl
sbb
mov
arpl
movsl
xchg
sub
mov
insl
adc
into
orb
ret
aam
inc
lock
mov
add
jmp
scas
and
cmp
mov
out
xchg
inc
xchg
jle
cmp
repnz
mov
das
es
rolb
shrl
mov
sub
sahf
mov
inc
and
push
pop
shrb
xchg
jnp,pn
inc
rcrb
sub
inc
push
aas
mov
jno
add
jns
and
add
sbb
mov
or
add
and
pop
adcb
or
sahf
test
dec
mov
jecxz
data16
loope
imul
sti
push
mov
add
pop
rorl
insb
add
mov
fadds
inc
cmc
push
inc
xchg
cmp
and
nop
roll
repnz
pop
jmp
and
cwtl
mov
sbb
adc
jle
mov
sbbl
inc
inc
call
lret
xlat
idivl
rorl
jne
cmp
fstps
or
in
stos
pop
jle
mov
out
and
in
push
mov
fisubs
jmp
movsl
int
jecxz
mov
lret
mov
xchg
repz
aad
test
ds
xor
incb
adc
push
add
imul
adc
mov
jmp
gs
cmovb
inc
pushf
jo
sub
fsts
jo
stc
jne
je
mov
lea
jle
xchg
xor
push
call
aaa
ret
icebp
dec
jmp
mov
xchg
pop
pop
fsubl
imul
out
lcall
sub
xor
xchg
sub
jp
fstpt
inc
inc
mov
leave
jbe
pop
xor
jno
xor
jb
push
push
sbb
mov
nop
jns
cmp
mov
xchg
lock
sbb
xor
xchg
pop
addr16
pop
std
mov
call
sarb
dec
into
scas
je
cmp
cmp
mov
push
push
popa
add
xor
imul
jle
pop
stc
xor
rorl
xlat
outsb
jge
mov
hlt
add
xchg
jge
cwtl
sbb
jbe
in
mov
cli
pop
lret
mov
cmpb
int3
lcall
out
xor
mov
or
fidivrl
fimuls
cmp
adc
add
sub
mov
xchg
repnz
dec
movsl
insb
mov
pop
imul
pop
sub
out
sub
movsl
sbb
cmpsb
in
or
in
mov
iret
xlat
imul
mov
inc
push
fnstcw
loop
test
lds
cmp
aaa
inc
sbb
push
jnp
sbb
sub
dec
pop
hlt
mov
lods
mov
enter
push
fstpl
in
jns
jge
push
out
cmp
dec
jl
or
jmp
or
sub
out
push
in
push
test
jp
dec
adc
ficompl
push
cmp
movsl
xor
and
adc
insb
inc
int
xor
bound
cmp
insb
add
lds
call
xchg
stos
and
sbbb
jle
inc
jne
or
inc
push
add
push
inc
cmp
adc
and
inc
push
or
pop
push
divb
arpl
or
leave
cmp
adcl
push
movsb
in
push
mov
stos
pop
pop
fisubs
jne
xor
and
jecxz
jb
xor
in
in
mov
fsubrs
sarl
mov
pop
mov
shrl
and
cmp
shrl
sti
xor
sbb
call
inc
sbb
sbb
cmp
mov
jecxz
fcmovnbe
in
xchg
mov
repnz
xor
fdivl
jmp
in
sub
sub
jae
cmpsb
cmp
adc
stc
and
or
xor
into
inc
cmpl
ja,pt
jle
roll
push
rorl
fcomps
fs
int
mov
pminub
loopne
inc
fdivs
aam
xchg
mov
adc
jl
call
mov
hlt
das
jo
inc
mov
lea
mov
rcll
adc
shlb
xor
pop
das
jecxz
scas
int
repnz
push
or
push
mov
xor
pop
push
cmpsl
push
and
lret
push
push
int
push
rcrl
pop
xchg
cmovl
mov
inc
mov
push
out
fs
xor
inc
fs
in
dec
or
pop
daa
adc
ja
inc
les
leave
pusha
pop
sub
cli
cs
and
leave
xchg
dec
in
push
mov
nop
add
gs
popl
mov
std
inc
push
int3
push
mov
inc
ret
dec
or
sub
pusha
or
popa
sti
sbbl
pop
push
popf
out
push
xchg
ret
pop
fwait
aaa
lds
jne
cmpsl
js
cmp
xor
add
jb
fucomip
pop
fistpl
loopne
mov
push
cli
insb
fadd
inc
jecxz
adc
outsl
sarl
adc
jp
mov
pushf
or
clc
xor
jns
movsb
ds
pop
sub
pop
jle
addb
inc
dec
jne
jnp
int3
cmp
mov
push
xchg
cltd
mov
out
xorl
stos
fsts
xchg
inc
ficoms
cmovs
jns
xchg
jle
dec
dec
loop
lcall
jmp
fstps
jno
sbb
xchg
dec
mov
test
dec
fcomp
addb
leave
insl
scas
fdivl
stc
pop
pop
imul
les
iret
data16
sbb
and
cmpl
jne
dec
ret
inc
mov
pop
iret
arpl
fwait
les
mov
dec
cwtl
es
dec
mov
jg
sbb
lds
lock
out
aam
or
sbb
lock
rclb
jmp
dec
stc
dec
outsb
add
rcrl
pop
mov
loopne
xor
xlat
nop
nop
xlat
mov
add
mov
out
std
fdivs
iret
and
rcr
jno
ljmp
mov
not
dec
ret
test
in
das
ret
fs
ds
mov
pop
or
lods
inc
push
imul
jb
xor
je
cmpsb
insb
popa
xchg
cmpsb
bound
xor
cltd
mov
xchg
sbb
ljmp
lods
jl
shrl
sub
pop
sub
jo
filds
es
std
fwait
rcrl
mov
fidivrs
lret
adc
push
xchg
add
mov
xchg
pop
mov
mov
test
inc
mov
cmp
leave
aaa
jno
shrl
and
cmc
mov
fldenv
and
cmpsb
xor
iret
add
inc
mov
or
mov
stos
mov
out
imul
mov
jnp
je
jnp
inc
pop
sbbl
dec
mov
dec
add
leave
pop
lea
leave
inc
mov
push
push
dec
das
stc
xchg
jns
bound
test
or
xchg
cwtl
dec
loop
add
jg
xchg
outsb
pop
sub
idivb
sahf
xchg
pop
dec
and
push
cmp
sarb
jmp
ffree
dec
loopne
adc
push
mov
dec
in
out
inc
add
dec
add
mov
fcoml
ljmp
repnz
mov
cmp
or
lods
popa
sbb
cmp
adc
je
addr16
sbb
popf
jno
adc
fwait
jne
xchg
aam
cs
sahf
mov
xor
les
jne
xchg
stos
adc
test
bound
mov
sbb
or
out
lcall
and
outsl
add
and
pop
push
push
cmp
lret
mov
add
stos
inc
fwait
mov
nop
jnp
jle
repz
xchg
mov
jb
lcall
pop
add
sbb
xchg
sub
enter
cmp
cmpsl
mov
insb
scas
mov
push
out
dec
sbb
inc
cmpsl
pop
sbb
mov
into
mov
jns
dec
in
lcall
jmp
add
sbb
pushl
inc
jle
sahf
inc
push
out
jo
jno
aaa
sub
sbb
push
ljmp
sub
inc
xchg
push
and
push
imul
xorb
mov
adcl
popw
sub
cmpsb
es
aam
in
stos
les
je
shrl
pop
fldl
adc
mov
out
pop
add
fisttpll
popf
lods
pusha
and
mov
jno
jns
sbb
lahf
push
push
mov
fldcw
and
sbb
mov
movsl
xor
mov
std
cltd
out
sub
push
popf
cwtl
sahf
rclb
mov
mov
pop
and
push
or
lea
scas
stos
outsl
or
andl
mov
push
or
sub
ja
pop
pop
test
or
mov
xchg
pop
pop
insl
lcall
xor
xor
aaa
cmp
pop
jle
in
jle
sahf
xchg
cs
cmpl
cmp
dec
jae
pop
ffree
dec
loopne
filds
mov
insb
divl
xchg
sub
daa
cmpsl
and
idivl
mov
shll
pop
out
movsl
repz
cld
insl
iret
aas
ds
xchg
loop
loope
stc
add
xchg
iret
aad
sar
push
mov
enter
gs
in
aad
xchg
xlat
mov
sub
rclb
adc
dec
lret
dec
pop
test
mov
pop
lret
cld
pop
movsl
push
dec
push
repnz
popf
sub
addl
jp
gs
aad
in
mov
insb
mov
adc
pop
rcl
movsb
loop
loop
out
mov
into
xor
xlat
dec
in
aas
xchg
jno
lods
jne
xchg
or
das
mov
cmp
cmp
ja
pop
ss
sbbl
cmpl
cmc
push
popf
mov
inc
mov
mov
std
dec
in
int3
pop
ror
dec
or
cli
es
xchg
movsb
lock
in
add
bound
adc
jno
test
call
scas
jno
cli
xchg
int3
sbb
test
fistpll
scas
mov
sarl
lock
xchg
fsub
ja
mov
lock
lods
outsl
ljmp
sub
fisubrl
in
dec
fstpt
popa
mov
test
cmp
std
lcall
repnz
jecxz
in
icebp
mov
inc
rcll
cmp
call
scas
and
sub
cmpsl
jns
jge
into
scas
movsb
mov
out
xchg
insb
add
stos
push
mov
les
cmp
loop
inc
int
movsb
and
and
inc
lret
cmp
dec
arpl
repz
cmp
test
pop
rorl
stc
inc
xor
mov
pop
cmp
dec
pop
out
push
xchg
jns
aaa
loopne
mov
add
test
and
aad
inc
xor
aas
cmova
add
loop
icebp
daa
ss
push
lods
idivl
inc
insl
sbb
dec
sahf
ds
inc
jge
mov
test
mov
and
pop
jmp
andb
stos
popa
or
jge
cltd
js
push
lcall
sar
xor
push
xchg
je
fnstenv
aaa
pushf
test
testl
cmp
or
dec
jae
test
cmp
movsl
cmp
loop
daa
rolb
and
cwtl
push
enter
push
in
inc
adc
dec
mov
pop
sahf
andl
lcall
jp
out
inc
fstps
pop
and
xchg
or
or
sahf
jecxz
loopne
or
and
jp
sbb
scas
ss
test
sub
mov
repnz
mov
and
iret
xlat
in
mov
aad
or
fsubrs
in
into
lock
mov
lret
pusha
cmp
inc
lods
mov
pop
cmp
push
cmp
push
mov
or
shlb
stos
cmp
adc
fnstsw
inc
enter
pop
fstp
cmp
push
pop
mov
jmp
xor
cmpb
call
popa
jle
ret
pop
jecxz
call
addr16
mov
mov
ret
enter
jp
mov
add
iret
push
mov
insb
scas
mov
icebp
dec
mov
fldcw
repnz
fcoms
stos
loopne
and
insl
add
stc
jg
dec
ror
pop
adc
add
and
cmpsl
andb
inc
jp
jnp
xchg
dec
mov
pop
sbb
cltd
pop
xchg
insb
cmp
xchg
ret
inc
sub
int
push
lcall
inc
orl
scas
loopne
out
xor
into
in
cld
xor
sahf
push
in
test
push
sahf
push
aam
fldl
es
cmpsb
push
inc
mov
mov
jmp
imul
bound
adc
xchg
addr16
daa
fistpl
sub
mov
popf
cmp
loopne
lret
stos
and
clc
mov
and
cld
xchg
xchg
sub
into
jmp
cli
xor
mov
loop
int3
nop
aam
repnz
jp
lock
bound
adc
pop
icebp
or
nop
push
sub
adc
inc
test
add
fwait
lods
xorl
mov
lret
out
xor
dec
add
in
cmp
popf
imul
cmpsl
into
mov
pop
scas
pop
repz
or
add
fwait
dec
jmp
sahf
mov
pop
mov
mov
out
xchg
cmp
pop
iret
cmp
mov
loopne
mov
push
sbb
jns
xchg
xchg
push
xor
xchg
dec
test
push
push
push
int
jb
mov
mov
push
lret
outsl
add
std
test
das
jl
test
lods
mov
add
ret
sahf
pop
icebp
ftst
jne
rcr
add
jl
aam
add
fimull
clc
das
add
clc
imull
hlt
dec
loop
rorb
cmc
in
das
icebp
ret
daa
mov
cmp
enter
cmpsb
sarl
sbb
aad
in
mov
mov
stc
mov
sub
scas
jne
xchg
xchg
cmp
popa
mov
jns
xchg
dec
mov
inc
jne
inc
cmp
leave
xor
or
stos
in
pop
pop
loope
outsb
sarb
cmp
xchg
pop
loopne
fbstp
add
pop
sahf
adc
push
jmp
int
push
movsl
ss
push
repnz
cmp
es
sbb
push
or
inc
jo
daa
mov
stos
inc
sub
fs
mov
mov
sbb
fs
xchg
sub
test
sbb
sub
pop
movl
fwait
cmp
das
push
rcrl
xor
shld
ljmp
xor
cli
mov
icebp
and
lds
xchg
mov
test
inc
shl
adc
sub
mov
out
inc
les
pop
lret
inc
stos
les
fs
scas
inc
loop
fiadds
scas
mov
js
push
int3
adc
cwtl
das
ja
push
aam
cmp
push
adcb
ret
lods
add
xchg
ss
outsl
aad
push
jmp
inc
mov
psubd
sub
cmp
push
test
sub
push
adc
inc
mov
mov
sub
lods
dec
je
mov
push
jmp
jae
jle
sahf
das
repnz
xchg
popa
mov
arpl
inc
movsl
jl
and
dec
ret
cmp
xchg
mov
adc
test
jnp
jne
and
add
dec
rorl
cmp
mov
es
cmp
pushf
jno
jae
enter
data16
jo
xor
inc
mov
pop
popa
fwait
push
out
test
push
jle
insl
enter
cmp
stos
sbb
lahf
in
sub
in
std
pusha
pushf
jmp
mov
popf
shrb
out
mov
jecxz
rcr
out
push
lods
xchg
lds
enter
push
mov
dec
clc
dec
loopne
cmp
inc
and
push
fbstp
jmp
push
adc
outsb
mov
xor
ret
cmpsb
aaa
int
mov
shrl
lods
mov
or
xchg
dec
nop
outsl
iret
xor
sbb
xlat
cmp
hlt
in
ret
cmp
int
int3
arpl
adc
mov
mov
xlat
outsb
xor
xchg
push
lds
mov
dec
cmp
mov
imul
lret
jg
mov
popf
nop
xor
mov
push
gs
leave
dec
data16
fistpl
adc
mov
jo
and
bound
hlt
dec
pop
or
dec
cmp
cmc
mov
or
lds
dec
icebp
cmp
jne
aas
das
jmp
jl
addl
mov
lds
in
repz
push
mov
lret
insb
sub
sti
cmc
outsl
lcall
and
ret
lods
sti
xor
fisttpll
add
std
outsl
nop
xchg
xor
push
sbb
popa
add
push
lahf
push
cld
xor
stos
popa
xchg
jno
pop
popf
jbe
xlat
dec
adc
js
xchg
lods
outsl
sbb
ret
aaa
xchg
mov
fisubs
mov
fsubrs
push
adc
popf
push
mov
xchg
push
cmp
scas
or
or
mov
mov
cmpsb
rolb
or
insb
lcall
outsl
mov
imul
ss
fisubrl
imul
aas
adc
jmp
std
enter
and
mov
divb
fcmovne
xchg
xchg
jnp
lods
inc
ret
cld
popa
xchg
mov
daa
ljmp
push
out
jg
sub
inc
pushf
lds
lcall
jne
add
sbb
sti
scas
int3
es
mov
jns
adc
int
movsl
gs
xor
or
pop
adc
outsl
pop
add
shll
xchg
sub
mov
out
fsub
outsl
jecxz
dec
mov
ret
mov
fisubrs
mov
adc
xor
mov
mull
test
loop
movsl
jb
inc
dec
sarl
out
and
pop
push
shlb
lret
iret
aaa
rcrb
les
xor
sub
loope
push
fisttpl
sbb
add
jnp
sub
hlt
push
xchg
xchg
xchg
adc
push
js
in
jp
dec
in
inc
dec
cmp
ret
jge
xchg
aas
imul
aaa
jno
sbb
pop
scas
bound
flds
xchg
jp
int
dec
cmpsb
cmp
mov
cld
sub
orb
jo
jmp
popa
test
rcl
xlat
fwait
je
pop
enter
mov
cmc
fstpt
lret
cmpsb
pusha
test
mov
fs
add
adc
adc
lods
mov
lock
cmp
cmp
or
sub
ror
jmp
jge
adc
cwtl
xchg
and
pop
rorb
stos
sub
daa
fistpll
push
jo
mov
cmp
jecxz
sbb
mov
movsb
mov
neg
xor
jecxz
ds
ret
loopne
xor
xchg
mov
mull
sbb
mov
cmp
fsub
out
fdivrp
insl
ret
fidivl
sbb
adc
je
imul
mov
mov
cmpl
jnp
xchg
push
mov
mov
jo
aad
jge
out
jl
mov
mov
fsubrl
jge
mov
lret
mov
testb
and
xchg
dec
dec
enter
aam
lea
adc
xlat
pushf
xorb
adc
lods
into
xor
dec
xchg
int3
dec
add
outsl
lea
stos
pop
ja
mov
dec
sbbl
and
mov
cmp
jb
mov
inc
lret
xchg
mov
subl
dec
dec
adc
push
pop
es
pusha
stos
fadds
cs
jae
arpl
inc
or
scas
sti
mov
sub
dec
or
push
sti
cmp
rcll
push
push
and
mov
xchg
sahf
loop
das
enter
jns
loope
in
sub
les
push
push
xor
cmp
pop
cld
popl
lret
ret
jns
out
cmpsb
pop
mov
dec
lahf
aam
mov
xchg
call
mov
imul
mov
lret
push
sub
mov
xor
in
into
insb
cmp
dec
ret
or
inc
lret
lock
out
insl
mov
sub
sub
xchg
pop
adc
mov
data16
into
cmp
mov
pop
out
push
or
movsb
cmp
pop
sub
pop
xchg
sub
mov
loopne
sbb
pushl
imul
popf
push
xchg
lock
movsb
cmp
adc
movsl
inc
cli
ret
fs
xchg
dec
loopne
jg
dec
loope
mov
imul
and
xchg
dec
xchg
popa
stc
xor
popa
sbb
jg
orl
pop
push
sbb
outsb
test
int
popa
clc
sar
loopne
loop
push
aam
pop
mov
imul
mov
mov
xlat
add
cmpsl
dec
mov
imul
push
rorb
jl
xchg
sub
sahf
insl
add
cmp
and
pop
cmc
dec
mov
cmp
pushf
repnz
xlat
and
fnsave
sub
lds
lcall
insb
add
cmp
popa
es
movsl
cmp
dec
call
sbb
push
popf
add
mov
sti
pop
push
mov
sbb
dec
loopne
cmp
push
mov
mov
inc
add
je
popa
test
movsl
out
outsb
sbb
push
sbb
pop
adcb
mov
rorl
pushl
mov
fst
xchg
xor
jg
xorl
cmc
dec
add
lret
push
adc
lock
dec
inc
cltd
pop
xchg
mov
fisubl
mov
mov
dec
pop
sbb
adcb
stc
push
test
dec
inc
xchg
and
push
mov
scas
inc
mov
add
sub
int
push
loop
imul
dec
pop
out
lret
loop
js
xchg
pop
jmp
push
mov
imul
jle
xor
nop
pop
push
mov
push
lods
push
xchg
sbb
and
shr
adc
mov
ja
repz
adc
mov
cs
mov
sub
cli
je
sahf
pop
pushf
fisubl
out
dec
in
sahf
add
dec
imulb
loope
call
mov
inc
outsb
adc
out
adc
sub
pop
mov
mov
lds
and
adc
cmp
mov
jl
or
xor
fwait
ljmp
xchg
dec
adc
adc
mov
mov
xchg
push
sti
addl
mov
mov
ret
loop
cli
sbb
push
add
mov
lds
xchg
inc
adc
jbe
lds
push
nop
or
cmp
mov
xchg
les
or
in
mov
roll
jl
cs
mov
or
ror
pop
mov
adc
push
mov
sbb
xchg
pushf
orl
and
lds
sub
cmp
jle
dec
or
pop
ret
sbb
in
daa
cli
dec
or
iret
push
orb
or
fs
cwtl
dec
jecxz
inc
cmp
xchg
push
cmp
push
cmp
push
mov
movsl
cld
cmpsb
push
out
and
loope
inc
push
cld
dec
cld
cmp
inc
mov
scas
clc
je
test
mov
adcb
int
inc
ja
roll
push
push
fcoml
cmp
xor
subb
xchg
fstl
test
sbb
loope
cmc
mov
sub
je
or
cmp
shrl
ss
xor
dec
push
out
cmp
inc
fmul
fildl
cwtl
int3
outsb
pop
pusha
insl
ret
pop
pop
add
jae
push
jb
pop
hlt
test
push
in
test
cmpsl
ds
and
pop
hlt
stos
cmp
test
dec
push
out
cmp
mov
adc
outsl
add
bound
in
mov
jge
scas
lock
into
loope
dec
loop
shlb
xor
imul
outsl
aas
pusha
mov
lds
outsl
push
bound
lret
lea
stos
inc
clc
adc
loope
or
lret
mov
jo
sahf
aad
lret
clts
popf
inc
jge
cmpsl
scas
popa
push
add
mov
cmpsb
std
mov
popa
repz
rolb
fisubrs
ret
daa
push
mov
mov
mov
pop
lods
jge
push
add
ljmp
nop
and
cmp
subb
xchg
decl
sbb
sbb
dec
outsb
cmc
mov
mov
lahf
sbb
push
pop
dec
orb
test
sti
pop
and
out
lods
lea
xor
pop
dec
cli
popa
jecxz
roll
stos
sbb
mov
stos
jge
pop
xor
mov
shlb
fisttpll
in
ret
and
pop
rcll
std
loopne
jbe
push
repz
jno
pop
mov
scas
in
in
mov
jns
push
lcall
xor
and
jo
mov
stos
in
imul
push
stc
icebp
cmp
push
shlb
jns
pop
mov
or
call
cld
dec
lar
sarl
push
ret
in
les
sbb
jno
rorb
clc
adc
insl
mov
stos
push
cli
inc
bound
fists
mov
adc
pop
enter
jle
out
xor
adc
aam
inc
outsb
lods
xor
and
and
xchg
pop
xor
sahf
inc
dec
add
ficomps
das
mov
xchg
jo
fiaddl
aad
mov
jp
orl
pusha
or
pop
pop
insl
out
xor
movsb
sub
ds
fiaddl
filds
push
cli
int3
nop
pop
pop
arpl
loope
sti
movsb
cmc
mov
jne
rorb
xchg
inc
or
pop
dec
loopne
push
mov
data16
imul
insl
or
inc
or
pop
cmc
pusha
in
dec
mov
pop
test
mov
ret
add
cmpl
cmpsb
push
bound
cmp
lock
fsubrs
mov
out
add
clc
inc
adc
pmaxub
addr16
scas
in
cmp
cmp
rcrb
sub
jns
pushf
jle
addr16
test
mov
fldl
jmp
jo
xor
add
test
and
dec
icebp
mov
ja
pop
std
xchg
mov
insl
imul
push
mov
mov
sub
subb
imul
cltd
out
jb
call
mov
mov
stos
sub
pop
std
andl
call
repz
cmp
fisubs
mov
xor
mov
and
loope
jp
or
jge
test
mov
jp
jmp
nop
xchg
xchg
pop
std
mov
mov
push
aam
sbb
dec
or
stos
jnp
lock
inc
in
dec
or
pop
pop
std
mov
and
sarl
fwait
out
add
fnstenv
lods
fdivl
outsl
rcll
scas
sub
cmpsb
jge
addl
shll
loopne
sub
inc
cmp
sbb
cltd
arpl
push
sub
adc
mov
pusha
stc
cmp
ss
xor
mov
movsl
fstpt
and
pushf
gs
call
scas
out
fwait
cmp
mov
fs
xor
xor
sbb
test
rcll
out
lahf
cmp
cli
lock
lret
mov
mov
inc
ss
test
sub
test
das
bswap
or
icebp
cmp
sbb
lock
dec
test
roll
sarl
inc
xchg
gs
ret
push
jo
and
popl
cmp
test
fildl
xchg
test
mov
ret
adc
cmpsl
inc
cs
andps
mov
mov
add
pop
cli
xlat
ficomps
add
sub
into
bound
mov
adc
jmp
aad
and
sti
or
call
pop
rcrb
and
rclb
mov
mov
nop
sbb
addr16
js
xor
cmp
and
psrld
and
pop
inc
adc
add
xor
cmp
loope
iret
push
pushl
test
and
into
mov
mov
fadd
cmp
shlb
sbb
or
std
cmp
das
add
in
mov
xor
ljmp
outsb
cmp
jecxz
sarl
hlt
into
xchg
cmp
push
mov
popa
sub
xchg
cmp
icebp
jle
sub
pop
insl
repz
pmullw
enter
mov
xor
je
inc
inc
insb
hlt
fistl
mov
mov
xor
sub
xchg
xor
pushf
inc
cli
and
mov
jmp
insb
cmc
shl
mov
sarb
lods
int
xor
inc
std
and
rcrl
insl
notb
mov
cmpl
sahf
inc
insl
and
mov
jg
dec
push
mov
testb
mov
es
or
add
pop
ret
fcoml
xchg
xor
out
jae
and
mov
or
xchg
loopne
mov
pop
mov
and
xor
mov
jae
movsl
jecxz
sti
adc
or
scas
iret
adc
dec
shll
inc
or
xlat
inc
fcomps
gs
mov
and
cmpsl
mov
cmp
add
rolb
pop
popa
push
xor
stos
jne
sbb
shlb
fcoml
mov
adc
jmp
inc
jne
fistpl
stos
xor
push
pop
add
das
cmpsl
daa
inc
xor
loope
movsl
sub
shl
pop
mov
stos
xor
cmpsb
sbb
divb
test
adc
in
jg
cmp
adc
mov
enter
and
push
add
sbb
outsb
in
jne
scas
pop
stc
or
mov
push
add
lods
rolb
xchg
mov
xor
aam
icebp
xor
xor
jb
push
add
imul
push
xor
xor
push
cltd
cmp
or
push
push
add
jmp
popa
xor
xor
and
mov
sbb
inc
js
fsubr
and
aaa
add
xchg
es
or
out
jno
adc
lea
pop
mov
cmp
mov
movsb
sub
lret
push
pop
decb
push
stc
pop
cmpsl
mov
cmp
dec
push
jnp
inc
adc
sub
test
je
lret
fs
cmp
mov
add
vcvtsi2ssl
leave
scas
daa
mov
mov
jg
test
sarb
in
fldt
call
push
shlb
addl
mov
mov
or
repnz
jne
inc
flds
sbb
xchg
cmp
cwtl
inc
das
je
jmp
insl
or
cmp
fs
aam
hlt
pop
lds
sbb
and
adc
inc
xor
xor
ja
push
add
xchg
jno
hlt
jg
add
sbb
lret
int3
testl
cmp
adc
mov
out
mov
test
or
sub
sub
loope
jb
cmp
mov
or
xor
pop
add
popf
fiaddl
sbb
test
jae
scas
xor
data16
cmp
sti
testb
les
movsb
das
push
and
mov
sub
mov
fadds
mov
in
jne
mov
mov
loopne
outsl
sbb
jl
cmp
sub
aaa
fwait
pop
sbb
lock
jge
push
pop
push
inc
stc
mov
xchg
out
sbb
test
inc
ret
rol
sbb
mov
and
xor
lock
sub
je
push
cmp
fwait
pusha
adcl
ja
enter
jnp
js
push
hlt
pop
loopne
sbb
xchg
jmp
orb
adc
mov
adc
mov
mov
jle
push
jne
scas
ret
lods
mov
push
jnp
inc
adc
bound
adc
xchg
jb
sarb
imul
cli
lock
push
mov
test
and
out
mov
add
int
mov
mov
cmp
iret
sbb
pop
hlt
aas
cltd
aas
adc
sti
and
lahf
and
les
scas
xchg
or
or
or
adc
inc
dec
xchg
sub
mov
jae
stos
jo
pop
jns
lods
push
dec
or
mull
addl
xor
mov
popa
in
or
sbb
cmpsb
mov
mov
bnd
filds
std
gs
jge
cmp
sub
jne
lds
lret
xchg
data16
sbb
inc
or
jle
inc
or
cltd
or
mov
cwtl
cmp
int
dec
and
test
aas
mov
jnp
ret
xchg
and
cmp
ss
scas
fs
test
imul
mov
inc
loop
movsl
das
add
aam
bound
and
leave
jmp
add
add
rep
inc
adc
cmpsb
cmp
iret
adc
pop
inc
lock
fistl
cmp
shl
std
data16
mov
rcrl
int
xchg
adc
stc
scas
fdivrs
cs
and
or
int3
lea
push
aas
pushf
xchg
cmp
scas
mov
jo
sbb
or
push
jae
xchg
int3
outsl
jmp
or
jp
fbstp
pop
cld
cmc
jmp
mov
sbb
ds
push
lret
in
mov
sbb
fldt
rcr
in
les
test
je
std
mov
xchg
cmp
sarl
lcall
dec
orl
fnstsw
shl
pop
scas
push
lea
mov
pop
add
test
xchg
sbb
mov
inc
xchg
ss
pop
lret
pop
xchg
stos
and
sub
cmp
rolb
pop
jge
mov
mov
sahf
test
aam
test
daa
fldt
inc
insb
jmp
test
ds
add
loope
push
lret
arpl
ss
mov
mov
fiadds
inc
or
xchg
dec
push
mov
lds
mov
sbb
mov
adc
rcrl
iret
push
mov
mov
mov
ds
cmc
shrl
add
outsl
scas
aaa
mov
mov
push
testl
outsb
in
mov
cmpsl
call
cmc
std
xchg
inc
adc
and
dec
cmc
inc
push
cltd
cmp
popf
or
lahf
sbb
dec
les
fldpi
pop
mov
divl
in
rclb
mov
mov
sbb
xchg
loopne
lret
add
pop
pop
mov
or
mov
mov
pop
mov
mov
mov
adcb
loopne
xchg
fcmove
adc
lock
and
or
cmpsb
sub
shl
call
call
imul
arpl
repz
loop
aad
xor
jno
cld
negl
mov
add
aad
adc
mov
jmp
adc
add
xlat
inc
adc
push
xlat
jno
clc
imul
cmpsl
fnstenv
pusha
add
adc
roll
jbe
add
out
sbb
jmp
sbb
cmpb
lea
cmp
scas
sbb
jle
or
pop
mov
mov
adc
dec
sarl
int
movsl
into
mov
sub
push
add
add
or
push
jecxz
and
ljmp
gs
cmpsb
in
imul
and
popa
sub
jns
mov
es
repz
fs
in
add
mov
les
dec
ret
sbb
inc
or
push
push
ret
add
add
push
mov
adc
dec
adc
xor
sub
xchg
inc
jl
and
or
rolb
add
pushf
cmp
mov
pop
out
in
jae
neg
adcl
lcall
jbe
daa
stos
shlb
sbb
push
std
mov
in
jne
mov
pop
push
add
sbb
notl
ljmp
sub
mov
scas
and
insl
cmp
dec
shrl
sarl
into
out
inc
cmpsl
orl
bswap
in
fmul
mov
stos
xchg
inc
outsb
or
repz
adc
stos
insl
cli
xchg
sahf
or
clc
lods
sub
scas
xor
mov
mov
jle
push
cld
mov
lods
xchg
ds
sarb
push
push
add
call
adc
xchg
aad
jno
daa
mov
imul
jle
repz
fs
inc
in
call
gs
popa
inc
or
adc
push
into
push
inc
in
push
push
and
lahf
xor
fadds
pop
push
stos
das
sub
and
stc
cmc
jg
and
xor
inc
push
test
dec
psrlq
out
movsb
inc
add
mov
jp
fwait
movsb
xchg
rcrb
xchg
sbb
dec
dec
push
mov
dec
adc
mov
int
addr16
push
mov
ret
jae
adc
push
enter
movsl
aam
inc
adc
or
pushf
cmp
test
imul
popf
aaa
inc
pop
mov
adcl
in
push
sub
mov
inc
or
xchg
out
je
lcall
and
mov
cmp
enter
sub
cmp
sbb
mov
or
or
scas
pop
mov
mov
sub
adc
inc
cmpsl
mov
jg
loopne
pop
clc
outsb
sti
das
lods
mov
mov
nop
inc
pop
push
pop
cli
fadds
mov
icebp
fdivr
pop
pop
lock
out
addb
adc
sahf
lods
sub
hlt
mov
xlat
gs
ds
xor
add
jl
arpl
hlt
outsl
mov
mov
mov
sbb
dec
adc
sti
cmp
mov
stc
data16
movsl
gs
adc
xor
add
xchg
mov
imul
lea
cltd
jo
lods
mov
ret
xchg
cmp
jge
inc
xchg
stos
xor
mov
pushl
popa
mov
mov
mov
scas
fildl
or
pusha
in
dec
fwait
xor
out
popf
push
neg
stc
cmp
cmp
in
jno
das
or
mov
mov
movsl
sub
data16
mov
push
add
into
insb
jmp
sbb
insb
mov
and
sahf
or
mov
test
movl
mov
cmpsl
xor
into
cmp
adc
mov
orl
lds
fdivs
dec
sub
cmpsb
lcall
popf
mov
lods
int3
iret
aam
and
lods
and
arpl
rclb
inc
test
subb
pop
pop
std
int3
mov
jbe
adc
xchg
mov
iret
mov
xchg
cmpl
lock
insl
and
lock
xchg
xor
sahf
into
sub
out
mov
aad
mov
and
hlt
out
insl
adc
jae
jmp
repz
push
xor
sti
bound
fs
and
icebp
pop
arpl
out
add
pusha
fstpt
lcall
ljmp
adc
movq
xchg
cld
jne
pop
leave
into
mov
rcl
insl
add
dec
out
and
daa
xchg
and
sahf
push
pop
or
cs
pop
push
std
mov
mov
or
xchg
lds
sub
int
mov
jb
loopne
orl
out
mov
jmp
loopne
lahf
fstl
in
or
dec
or
aad
in
cmp
cli
dec
sti
sub
push
mov
fbstp
inc
adc
aas
popf
aam
cs
mov
mov
fists
lahf
jae
push
xchg
lret
lds
iret
inc
push
std
pop
sbb
xchg
mov
stos
mov
pusha
xchg
xchg
shrb
and
pop
imul
rorb
lret
mov
mov
dec
push
pop
sub
lahf
cmp
jp
cltd
jb
dec
mov
mov
int3
xchg
mov
push
mov
packuswb
inc
xlat
aas
pop
mov
sbb
sub
mov
cli
dec
int
into
in
dec
adc
sbb
sbb
xchg
icebp
or
pusha
enter
jne
pminsw
jno
pop
add
jns
xor
mov
faddl
int3
stc
mov
pop
rcrl
enter
into
push
in
pushl
scas
inc
imul
xchg
shll
and
cmp
add
inc
xor
xor
filds
out
or
mov
dec
jg
flds
in
repz
test
fdivrs
ret
scas
and
gs
push
add
and
adc
push
xorl
adc
push
sub
loop
repnz
xchg
or
mov
mov
shrb
icebp
cmp
ficoms
xlat
jle
test
stos
lock
xchg
mov
test
je
mov
sub
mov
lods
filds
pushf
rorl
shl
iret
xchg
cmp
sti
xor
daa
test
mov
paddq
sarb
sti
lret
loop
dec
add
pop
add
sarb
sub
dec
push
hlt
pop
add
adc
fsubp
addr16
push
jns
push
mov
jne
test
aam
fdivrl
add
mov
xchg
repz
shrl
adc
inc
push
add
enter
dec
sbb
scas
xor
fildl
mov
hlt
push
xchg
mov
xor
add
push
xchg
xor
mov
imul
jbe
and
pop
lea
and
test
xchg
cmp
rclb
xchg
enter
clc
pushl
pop
rorb
xchg
fistps
cli
mov
stos
negl
or
scas
clc
jbe
fcomps
loop
fcoms
dec
call
clc
es
mov
inc
loopne
out
adc
out
imul
sbb
cmp
insl
les
jmp
popa
sbb
mov
stc
xor
pop
adc
test
adc
adc
mov
test
xchg
faddl
pop
push
iret
sub
jae
and
iret
pop
push
and
nop
cmc
out
xor
arpl
and
jg
and
divl
gs
pop
push
xor
fistps
adc
add
aaa
xchg
sub
bnd
jp
out
negb
pusha
push
add
test
jne
fbstp
jbe
cmp
mov
xchg
sub
pop
dec
call
mov
mov
sti
ret
fimull
fisttps
sub
clc
fs
cmp
enter
jge
inc
push
lock
mov
mov
or
cmc
pop
test
xor
imul
clc
cmp
ss
mov
cld
ljmp
out
shll
and
dec
stos
aaa
push
mov
mov
scas
sarb
xchg
push
mov
sub
mov
sub
pushf
popf
push
cld
inc
int3
inc
or
fldenv
dec
mov
xchg
cmp
push
mov
mov
add
inc
loopne
cmpsb
push
movsl
sub
mov
cmp
dec
xor
lahf
ds
out
mov
mov
mov
xchg
roll
inc
mov
xchg
rcl
cmpl
out
dec
or
es
mov
xorb
fidivrl
xor
pop
push
pop
test
mov
addr16
mov
fdivr
arpl
ret
dec
sub
or
pop
add
lods
push
xor
mov
fisttps
sbb
lock
in
orb
cld
and
sub
lods
xchg
xor
dec
mov
mov
xor
ljmp
bnd
js
imul
jmp
enter
mov
pop
movsb
lods
sub
fimull
es
sub
arpl
lret
push
clc
jecxz
add
rcll
push
nop
test
mov
sbb
gs
aaa
xchg
aaa
popa
cmpsb
jb
adc
mov
sub
push
cltd
push
add
inc
test
mov
rcrl
ret
adc
fbstp
xchg
test
ret
jl
bound
mov
es
mov
nop
lods
andl
ja
enter
sbb
scas
xor
iret
dec
mov
test
stos
pop
add
pop
lahf
inc
adc
add
jns
push
sti
mov
lods
mov
shll
bound
cmpsl
xor
push
mov
sub
xchg
add
cmp
pop
mov
test
xor
or
cltd
and
pushf
aas
inc
dec
push
leave
rclb
lds
sbb
orb
arpl
lods
push
iret
xor
lods
inc
add
notl
push
imul
stos
cli
fs
lods
sub
ja
jl
das
lods
gs
arpl
jge
xor
mov
sub
popl
outsl
lcall
loopne
lahf
cmp
cld
int
add
xor
pop
dec
or
push
sbb
ficoml
mov
fidivrl
imul
lcall
cmpl
adc
mov
stos
jmp
lods
or
add
out
push
jmp
mov
iret
rorb
les
cmp
push
sti
sbb
mov
jno
dec
push
not
lds
std
or
popa
jmp
pmaxsw
mov
cli
push
enter
mov
lret
inc
adc
mov
into
inc
lret
mov
adc
je
dec
or
addr16
mov
arpl
loop
mov
std
ja
jmp
push
mov
ds
int3
fdivrs
out
roll
cltd
add
add
mov
and
lcall
sahf
inc
shll
dec
pop
mov
add
jnp
add
lock
jge
xor
jmp
or
mov
in
xor
sti
mov
ljmpw
and
ret
fiadds
sti
dec
or
mov
fwait
pusha
out
push
mov
addb
mov
mov
push
sarb
and
fidivrs
addb
cmp
adcb
mov
cmpsb
mov
ror
cltd
fnsave
out
jbe
sbb
mov
lds
jno
mov
mov
lcall
shlb
inc
mov
stos
lea
push
das
loopne
dec
xchg
or
add
xchg
mov
aam
jmp
add
outsb
and
ret
xor
mov
adc
nop
aas
cmp
movsb
lcall
push
xchg
popa
xor
test
jg
imul
imul
out
push
push
xchg
inc
mov
mov
inc
adc
jae
lea
rclb
rcll
rol
aas
and
push
and
jne
add
jbe
push
mov
xchg
cmp
js
lods
sub
cltd
mov
lods
fadds
cmovp
ss
jno
lret
inc
adc
xor
lds
add
stos
pusha
in
rorb
aad
dec
movsb
adc
pop
xlat
mov
daa
mov
sarl
je
fdivrl
imul
sub
xchg
sub
or
sub
dec
jge
das
mov
sbb
ret
sbb
push
imul
hlt
rorb
inc
xor
shlb
icebp
pop
lods
cmp
push
mov
pusha
in
inc
movsb
scas
xor
xchg
jecxz
xchg
push
outsl
in
xor
adcb
lea
in
negb
sub
lods
cltd
and
into
in
sahf
inc
lock
jb
jecxz
addr16
ja
xchg
mov
mov
call
or
addr16
push
cmp
xchg
shlb
in
mov
push
and
ds
xchg
mov
sbb
mov
xchg
lds
in
insl
add
pop
cmp
and
cmp
imull
mov
scas
push
js
flds
pop
cmc
pop
fisubrs
push
fildl
lods
add
dec
or
add
enter
dec
mov
out
scas
sahf
inc
xor
jle
sahf
and
rorb
push
inc
or
testb
xlat
jns
push
dec
add
outsb
in
xchg
push
lods
imul
fs
repnz
cld
cmpsl
sub
pop
sar
xchg
push
jmp
mov
xchg
sub
insb
pop
hlt
popf
push
sbb
sub
aaa
pusha
in
push
cli
or
fists
in
pop
data16
pushf
adc
jecxz
or
in
inc
adc
movsl
mov
mov
mov
mov
pusha
push
les
stc
nop
sti
push
pop
jecxz
aad
xchg
mov
andb
out
fidivl
outsl
cmc
inc
adc
jne
inc
mov
imul
test
outsb
jmp
inc
pop
adcb
mov
mov
cli
pop
mov
hlt
pop
and
cmpsb
xor
call
ds
dec
xchg
inc
push
cltd
fnstsw
nop
mov
push
popl
xchg
rcl
test
popf
cmp
das
test
xor
popl
fs
int
or
and
xor
bound
nop
cmp
add
xchg
push
or
fwait
jge
sub
xchg
inc
fidivl
lret
leave
cmpsl
xor
adc
mov
fbstp
mov
xor
enter
inc
adc
mov
stc
pop
pop
jae
or
popf
cmp
repnz
stc
mov
mov
iret
mov
mov
and
cmp
bswap
mov
test
insl
popf
sbb
jg
icebp
data16
js
and
test
cmp
adc
fs
jno
rclb
orl
insb
repz
push
in
jae
iret
jmp
sysexit
and
movaps
fcomps
add
or
mov
cmp
cltd
and
xor
adc
shrl
lcall
sbb
scas
or
lods
dec
pop
int
pop
mov
xchg
jge
test
xchg
xchg
push
or
clc
jp
int3
sbb
push
mov
mov
mov
xor
aam
and
adc
js
clc
gs
outsl
repz
outsl
adc
cmp
loop
mov
in
lret
scas
mov
pop
adc
das
rolb
ret
xchg
inc
and
test
cmp
lahf
xor
push
add
rcll
jl
cmpsb
insb
out
xor
sbb
xor
bnd
pop
push
push
repnz
xor
sbb
test
in
imul
stos
mov
cmpsl
cmp
ljmp
pushf
sahf
leave
in
addr16
les
mov
enter
pushf
xor
int3
adc
imul
add
cmpsb
adc
mov
mov
frstor
loopne
cmc
pop
mov
mov
pop
lods
jnp
gs
ret
add
or
pop
sti
gs
cmp
out
dec
jb
test
out
jo
aam
in
std
or
fwait
aad
insl
faddp
jnp
testl
cltd
xor
push
jmp
lea
lods
xor
push
cltd
andb
rolb
xor
into
lea
push
cmp
in
aad
mov
imul
jno
rcrl
test
gs
mov
cmpsw
or
mov
repz
pop
test
lret
cli
inc
fsubrs
sbb
into
push
orb
sti
rcrb
pop
subb
in
fisubs
xlat
inc
adc
pop
nop
cmp
pushl
sub
cmp
xchg
add
dec
adc
xor
mov
in
sbb
add
sbb
cltd
inc
sbb
lods
xor
jg
pop
cwtl
adcb
roll
icebp
incw
dec
in
xor
arpl
jo
addb
add
in
test
int3
mov
faddl
jg
fiadds
outsb
in
adc
add
mov
scas
inc
or
push
notb
ret
jns
aaa
loop
mov
sub
dec
in
mov
xchg
stos
sti
movsb
or
push
mov
sbb
dec
sub
int
insl
leave
xchg
push
mov
xor
test
notl
lret
add
inc
sbb
popa
xchg
les
push
repz
and
push
pushf
mov
mov
mov
les
dec
jp
xchg
hlt
xchg
pusha
icebp
xchg
mov
pop
fidivrs
lea
les
pop
sbb
add
mov
adcb
xchg
inc
clc
loope
xlat
out
outsl
fimull
xlat
sbbl
cmpsb
adc
fwait
lret
pusha
lahf
cmp
subb
pop
lods
sub
pop
cli
mov
mov
jb
fldcw
or
mov
cmpsl
int3
mov
stc
in
push
mov
arpl
fmuls
or
sbbl
cmp
sub
roll
mov
sbb
or
incb
das
cld
inc
push
sarl
clc
push
adc
incl
mov
repnz
pop
add
adcl
addb
addr16
test
push
rolb
mov
icebp
rorl
enter
enter
cmpsb
push
test
and
test
cmp
cli
bound
pop
call
mov
dec
xor
frstor
mov
std
int3
jp
aam
pop
push
cli
and
cmp
data16
loope
stos
insb
pop
add
mov
ja
xor
jecxz
clc
es
add
out
negl
xor
je
mov
int3
push
sahf
scas
xor
push
daa
test
cmp
jl
push
stos
xor
push
push
shlb
sarb
daa
xchg
cmp
mov
mov
lock
mull
mov
orb
cmpl
pusha
insb
repz
mov
outsb
hlt
iret
or
lcallw
lret
in
mov
in
add
stos
xchg
mov
lods
xor
add
xor
adc
mov
jne
mov
cmp
xchg
mov
xor
pusha
mov
xchg
mov
fcompl
mov
enter
cs
pop
sbb
orl
or
add
es
push
adc
inc
js
dec
stos
gs
xchg
lret
iret
data16
mov
sbb
push
out
test
mov
mov
pop
sub
hlt
mov
jae
adc
sti
xchg
xor
push
sbb
jmp
aaa
into
cmp
cli
push
in
sub
pop
xchg
dec
jae
jle
loopne
in
xchg
sub
push
call
and
sbb
fs
cmp
fstpl
pop
lock
in
or
cmpl
mov
nop
inc
fadd
divl
cli
adc
shrl
xor
out
xchg
mov
movsb
and
mov
ret
xchg
dec
loopne
cmp
mov
addr16
sbb
pop
scas
pop
cmp
int3
pop
mov
ljmp
jno
pushl
jbe
and
xchg
mov
ficompl
mov
int3
arpl
sub
rcrb
jmp
dec
jle
out
scas
insl
or
add
daa
mov
push
adc
inc
jbe
dec
test
fs
xchg
leave
iret
data16
mov
sbb
sbb
test
mov
mov
mov
sub
repnz
fnsave
dec
loopne
add
xchg
xor
addr16
xchg
push
sbb
jmp
or
sub
pop
nop
dec
je
jge
loopne
jecxz
xchg
sub
add
xchg
ss
mov
and
mov
inc
into
gs
cmp
fistl
pop
lock
dec
ja
cmpl
inc
ffree
cmc
mov
daa
loop
sti
adc
push
pushfw
out
xchg
xchg
movsb
and
mov
ret
fdivl
xchg
dec
loopne
cmp
pop
aad
scas
push
cmp
int
mov
jmp
ffreep
pop
adc
jb
xor
jbe
pop
xchg
sub
std
xchg
mov
scas
inc
movsb
fcomps
mov
int
clc
sub
rcrb
in
orl
out
lods
insb
or
add
xchg
sub
inc
fiadds
mov
cmpsb
arpl
xchg
iret
data16
mov
sbb
sbb
test
cmp
insl
or
sahf
pop
rclb
sub
lock
fidivs
adc
inc
add
xchg
xor
xchg
push
sbb
out
cmp
xlat
or
sub
mov
or
scas
loopne
loope
xchg
sub
add
xchg
xor
mov
and
mov
inc
iret
data16
cmp
fsts
pop
lock
or
jg
sub
insl
mov
inc
fidivrs
loope
cld
adc
push
gs
mov
fidivrl
ret
fnsave
dec
loopne
cmp
mov
addr16
adc
aaa
test
es
into
push
mov
in
test
lret
jae
std
xor
jbe
push
xchg
sub
std
xchg
mov
mov
mov
imull
cmp
pop
sbb
test
push
out
stos
imul
pushf
int3
jne
mov
xchg
sub
dec
filds
mov
movsb
popa
data16
xchg
divl
out
xchg
mov
movsb
pushf
pop
rcrl
sub
out
lods
fbstp
cmovp
inc
std
xchg
xor
call
mov
sbb
aad
movsl
cmp
notb
daa
pop
ret
pop
lea
or
scas
loope
loopne
xchg
sub
add
xchg
xor
mov
and
test
data16
cmp
xlat
xchg
in
test
clc
pop
icebp
sub
or
jge
sub
imul
fidivrs
fbld
adc
imul
lock
test
movsl
sbb
mov
ret
outsl
sub
je
nop
dec
loope
jle
xchg
mov
push
mov
xor
aaa
into
push
mov
cmpsl
fcmovnb
pop
or
loopne,pn
pusha
sbb
sub
xchg
mov
mov
mov
ret
into
gs
es
push
push
in
test
pop
out
test
lret
cld
mov
xchg
sub
or
mov
mov
ret
shrl
mov
sbb
push
lock
mov
movsl
lcall
ret
in
stos
fbstp
or
std
xchg
das
pusha
imul
xorl
cmpsb
cmp
and
inc
jne
js
loop
fistps
add
push
push
pop
mov
aas
iret
data16
cmp
test
negl
sub
or
jl
sub
imul
mov
and
gs
push
inc
shrl
das
sbbl
xchg
icebp
mov
andb
sbb
mov
les
fnsave
dec
loop
jl
xchg
scas
loope
add
rcrb
mov
xor
aaa
into
push
mov
in
movsl
fcmovnb
pop
or
loope,pn
pusha
sbb
xchg
mov
mov
lahf
aam
mov
ror
repz
push
adc
test
pop
lock
lret
cld
mov
xchg
sub
cmp
mov
mov
ret
shrb
scas
test
loope
icebp
mov
mov
cmpsb
lcall
in
test
jbe
or
std
xchg
sub
dec
sbb
in
cmp
roll
cmpsl
ds
push
out
and
pop
mov
jbe
jecxz
fists
add
sbb
and
outsl
movsl
ds
nop
in
test
negl
in
mov
jl
sub
addr16
cwtl
das
iret
mov
mov
or
aam
jbe
sbbl
xchg
repnz
andb
sbb
mov
lds
fnsave
dec
jecxz
jp
xchg
lods
loope
add
into
sbb
data16
iret
push
xchg
in
mov
lds
sub
xchg
sub
add
popf
rcrb
mov
mov
cmp
push
adc
test
icebp
cmpsl
gs
xchg
enter
mov
shr
xchg
cs
or
cmp
dec
mov
rcl
rep
test
adc
mov
movsb
cmp
adc
ret
mov
loopne
fmuls
dec
in
stc
xchg
sub
add
mov
and
sahf
cmp
iret
add
aas
ss
out
and
pop
mov
or
fstl
add
sbb
mov
cmp
outsb
mov
out
test
cmc
pop
repz
mov
jp
sub
data16
cwtl
das
int
dec
fistpll
fisubl
or
imul
pop
xchg
repnz
jg
cmp
rol
push
add
fidivs
lea
jns
xchg
stos
fildll
adc
sbb
fs
cmp
push
test
out
mov
les
imulb
loop
pop
pop
xchg
sub
add
pushf
rcrb
mov
mov
cmp
push
adc
xchg
pop
icebp
movsl
fs
psubb
xchg
cs
or
cmp
sahf
pop
push
push
lods
xchg
inc
jmp
xchg
push
ret
mov
loopne
xlat
or
cmp
xchg
sub
add
mov
and
popf
cmp
into
add
out
and
pop
mov
or
fcoml
cltd
cs
and
insl
mov
out
test
hlt
pop
repz
inc
jp
jns
sub
gs
mov
mov
pop
fldenv
or
imul
sbb
repnz
jle
cmp
rol
push
add
lds
fidivs
mov
js
xchg
stos
fisubrs
adc
sbb
arpl
cmp
dec
test
out
mov
ret
jne
cmc
sub
jns
push
xchg
sub
add
fwait
iret
push
mov
mov
cmp
push
adc
xchg
pop
icebp
movsb
arpl
maskmovq
divl
xchg
cs
pop
dec
loope
imul
mov
xchg
inc
movsb
cmp
adc
xorl
ja
or
cmp
xchg
sub
mov
mov
scas
mov
loope
cmp
int
test
xor
pop
out
pop
push
pop
mov
or
fistl
add
sbb
mov
cmp
insb
mov
out
test
loope
mov
js
sub
fs
cwtl
das
lret
test
mov
mov
push
fsubs
or
imul
sbb
mov
jge
cmp
rol
push
add
lds
fidivs
mov
ja
xchg
test
lret
sbb
bound
cmpsb
cmp
mov
ret
hlt
sub
jns
adc
add
lcall
addr16
and
xchg
pop
repnz
les
divb
cwtl
das
dec
add
mov
pushf
push
push
imul
xchg
inc
cld
movsb
cmp
adc
xorl
dec
in
cmc
xchg
daa
pop
insb
add
scas
mov
loopne
cmp
lret
add
out
sbb
jbe,pt
jo
in
ficoml
add
pop
dec
and
push
aas
rorl
pop
hlt
and
or
adc
adc
sub
bound
dec
fbstp
data16
pop
aas
aad
jno
test
pop
xchg
repz
jnp
cmp
iret
rclb
das
imul
dec
in
jne
xchg
cmpsl
fsubrl
push
leave
sbb
popa
sbb
rorb
ds
push
out
sahf
aad
pop
pop
shlb
sub
jp
adc
lods
data16
cwtl
int
mov
mov
ds
or
xchg
jno
repz
ret
jp
cmc
mov
ret
cltd
xor
dec
loope
imul
insb
out
cmpsl
xchg
inc
cli
movsb
cmp
adc
jg
xor
out
loopne
rolb
dec
out
repz
xchg
and
inc
sbb
ja
mov
fistps
stos
inc
xor
pop
out
sbb
xchg
or
add
sub
mov
adc
shlb
lahf
inc
xlat
rorb
pop
cmc
and
or
push
inc
jl
jbe
sub
pusha
xchg
lcall
ljmp
add
test
pop
xchg
hlt
mov
jns
cmp
int
push
pushl
xor
addr16
jbe
mov
mov
fisubrl
sbb
pop
sbb
rorl
test
mov
pop
out
pushf
rol
pop
add
es
pop
adc
cltd
stos
fs
xchg
lret
and
jmp
or
xchg
pop
hlt
mov
sarl
scas
sub
loopne
lcall
addr16
add
cmpsb
xchg
fmuls
movsl
cmp
popa
adc
jle
xor
in
loope
roll
call
mov
mov
stos
mov
fstl
stos
inc
xor
pop
lock
pop
test
push
outsb
movsl
out
xlat
xchg
sub
clc
add
sub
mov
adc
shrl
popf
inc
xlat
into
mov
xchg
fisttpll
adc
ret
lcall
call
incb
cmp
insl
outsb
test
hlt
mov
jns
cmp
int
pop
pushl
gs
ja
xchg
mov
xchg
movsl
fsubrs
sbb
clc
sub
rorb
test
mov
pop
lock
rol
pop
add
in
push
adc
cltd
test
mov
xchg
leave
and
jmp
or
mov
xsha1
cmpsb
mov
sub
xor
jecxz
gs
add
cmpsb
mov
fmuls
cmc
mov
pop
adc
jle
xor
loop
loop
roll
push
out
repnz
mov
jne
mov
fistl
stos
inc
cs
enter
js
insl
mov
xchg
sub
daa
loop
dec
adc
and
addr16
inc
xlat
int3
mov
xchg
fmull
movsl
or
cs
pop
xchg
lcall
out
dec
sbb
push
insl
insb
and
hlt
mov
loopne
test
xor
arpl
loope
push
test
mov
call
or
sbb
and
cmp
dec
jl
aas
scas
push
icebp
fwait
iret
pop
add
in
push
adc
cltd
cmpsb
arpl
mov
mov
push
sbb
dec
or
mov
imul
pop
adc
out
scas
vmovsd
add
xor
dec
xchg
push
imul
mov
insl
call
or
mov
clc
cmpsl
sub
stos
mov
pop
jge
xor
loopne
jecxz
rolb
push
out
icebp
add
xchg
mov
cmpsl
mov
fsts
stos
inc
sub
pop
repnz
pop
cmpb
adc
jge
lea
fwait
and
inc
and
cwtd
inc
xlat
lret
mov
fisttpl
cmpsb
or
jl
jo
sub
xor
jg
loop
in
dec
push
shrb
add
insl
push
xchg
push
mov
mov
ficoms
test
xor
popa
pop
loop
push
orb
jb
xchg
mov
lds
mov
daa
mov
pop
pop
cmp
aas
lods
imul
mov
in
push
push
cwtl
das
inc
jae
lcall
and
out
inc
xlat
dec
pop
repz
imul
mov
das
fisttpll
fwait
xor
dec
in
bound
add
mov
testb
pop
adc
lea
pop
jnp
xor
fistps
call
and
push
test
mov
cmpsb
lea
xchg
cmp
inc
sub
pop
repnz
dec
leave
pusha
jg
jns
push
out
rorb
add
dec
adc
mov
fs
inc
fmul
test
mov
cmpsb
or
sub
xor
jge
loop
jecxz
push
adc
aaa
xlat
outsb
imul
cmc
mov
adc
cld
das
xor
pusha
sbb
dec
out
jo
xchg
mov
ret
push
mov
mov
pop
adc
test
repnz
int3
pop
mov
out
push
or
das
jb,pt
fwait
mov
les
mov
in
inc
fadds
repz
push
adc
in
stos
das
fisttpl
dec
in
popa
mov
add
mov
testl
mov
pop
jns
xor
ficomps
push
call
pop
push
outsl
push
test
mov
movsl
lea
xchg
cmp
inc
sub
pop
repnz
dec
leave
pusha
jle
jns
imul
add
dec
adc
mov
arpl
icebp
mov
fmuls
cmpsb
or
les
fwait
xor
jl
loop
loop
push
adc
imul
push
mov
mov
fcoml
stos
or
cs
pop
sbb
jns
orb
outsl
add
add
push
mov
and
cmp
inc
stos
pop
repnz
lret
pop
std
mov
out
push
or
fwait
mov
ret
and
jecxz
inc
fadds
repz
addr16
negb
mov
das
fimull
xor
sti
dec
in
pusha
mov
add
fsubrs
mov
testl
mov
pop
js
xor
fstpl
push
call
push
push
outsl
push
cmpl
mov
movsb
lea
xchg
cmp
inc
sub
pop
repnz
ss
push
mov
pushf
and
mov
cmove
mov
bound
icebp
mov
xlat
xsha1
cmpsb
or
jge
insl
sub
xor
jnp
loop
loope
push
adc
imul
and
mov
mov
fistl
stos
or
ret
pop
cli
sub
loop
dec
jg
out
outsb
add
add
push
mov
and
and
cmp
inc
test
lret
cld
mov
adc
sbb
cwtl
das
cmp
add
mov
ret
repz
imul
inc
fadds
repz
push
adc
ljmp
xor
pop
mov
add
fsubrs
lahf
mov
roll
cmpsl
ds
adc
pop
ja
xor
fcompl
push
call
sbb
ds
mov
mov
cmp
inc
sub
pop
repnz
leave
pusha
jl
jns
addr16
out
iret
mov
pushf
and
mov
push
inc
and
popa
xchg
inc
fadd
xor
mov
pop
negb
montmul
cmpsb
pop
cmp
insb
sub
xor
loopne
push
adc
imul
and
mov
fsts
stos
or
les
lret
fcomps
addr16
and
sbb
cltd
xchg
xor
and
popf
inc
cmp
popa
push
repnz
ljmp
dec
jne
mov
mov
jnp
in
inc
fld
xlat
ljmp
dec
adc
mov
js
cmp
pop
lahf
jne
faddl
sti
in
inc
sub
das
sbb
aas
adc
mov
cmp
dec
js
ja
pushf
push
xchg
in
iret
push
push
sub
out
jno
mul
in
nop
test
mov
inc
xchg
and
pop
or
xchg
sbb
mov
icebp
pop
lods
imul
jmp
ret
push
mov
or
jl
iret
mov
in
sbb
call
in
push
popf
sahf
push
dec
cld
jmp
insb
xor
pushf
jb
lcall
ja
sbb
lock
test
and
pushf
mov
sti
shlb
mov
loopne
fsubrl
mov
loop
lret
mov
jg
jecxz
int
xor
xlat
add
sbb
aad
cmp
add
or
cltd
out
repnz
mov
mov
dec
dec
test
push
mov
push
pushf
loope
pop
cmpsl
and
jg
cmc
stos
xorl
jge
jl
jp
movsb
jns
ret
pop
out
shl
and
mov
and
or
lods
mov
aas
je
and
cmc
push
das
insl
insl
lcall
sub
movsl
mov
mov
adc
dec
cmp
sti
insl
cvttps2pi
and
xchg
jne
data16
add
call
jmp
push
sar
mov
scas
addb
push
mov
jae
mov
mov
cld
jne
out
jne
test
je
inc
and
fwait
cs
add
add
xor
add
add
and
test
add
add
inc
mov
pop
lret
mov
pop
adc
psllw
aam
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
cmp
outsl
les
jle
loope
sbbl
xor
or
mov
cs
addr16
dec
and
xchg
sub
std
xor
