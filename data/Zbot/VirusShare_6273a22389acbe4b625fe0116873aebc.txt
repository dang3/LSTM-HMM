pop
jae
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
inc
add
inc
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
inc
add
add
inc
add
add
inc
add
jae
add
jae
add
je
add
je
add
inc
add
add
add
xor
add
xor
add
nop
xor
cwtl
xor
mov
xor
nop
add
lahf
xor
add
pop
pop
aaa
dec
push
push
push
push
js
cmp
push
mov
aaa
add
and
rorb
lods
cmp
xchg
cmp
movsl
cmp
or
cmp
lods
cmp
or
hlt
cmp
or
push
or
cmp
mov
mov
mov
cmp
sub
aad
or
icebp
cmp
fmuls
and
mov
push
jne
jno
xchg
ds
fdivrs
push
icebp
rorb
add
fisttpll
and
push
push
aas
aas
das
push
dec
aas
sbb
push
aas
inc
push
pop
aas
pop
push
jb
adc
jge
imul
push
or
loop
xchg
add
rdtsc
add
cmc
add
xor
add
ret
xor
xchg
xor
add
xor
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
scas
add
jmp
inc
add
arpl
push
jb
js
add
lahf
pop
popa
fs
pop
bound
inc
jns
push
jo
add
pop
popa
fs
pop
bound
inc
jns
xor
add
je
adc
jne
push
jns
outsb
minps
jmp
add
sub
popa
notl
imul
inc
je
enter
jmp
add
lods
push
je
add
ret
outsl
mov
push
arpl
jns
jmp
add
lods
push
je
mov
mov
outsb
xchg
jmp
add
out
inc
add
xor
xor
pop
xor
xor
inc
add
xor
dec
xor
inc
xor
and
je
cmp
inc
inc
push
jb
sbb
add
pop
popa
fs
pop
bound
inc
jns
add
add
add
push
jb
push
pop
xor
mov
xor
add
inc
jbe
flds
mov
push
insl
jae
inc
add
movb
mov
pop
add
mov
arpl
push
jb
jle
insb
inc
pop
outsl
arpl
xor
add
arpl
push
jl
inc
inc
pop
add
push
insb
push
add
cmp
dec
inc
add
and
jo
pop
insb
outsl
or
add
add
outsb
push
pop
xor
aad
insb
insb
jmp
add
sub
je
stc
pop
arpl
aas
dec
gs
add
xor
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
add
flds
add
flds
add
flds
add
flds
add
stc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
les
add
sti
cmpsl
push
jmp
call
cs
jmp
xor
add
call
cs
fdivs
add
or
call
xor
jmp
call
xor
add
sub
add
push
leave
incl
add
inc
sub
adc
push
sbb
adc
inc
sbb
add
inc
sub
add
add
add
stos
sub
add
add
add
shlb
add
add
xor
add
xor
add
movsb
add
push
adc
add
xor
add
xor
add
xor
add
xor
add
flds
add
flds
add
adc
add
flds
add
flds
add
fsts
add
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jo
add
xchg
pop
add
jmp
dec
add
fsts
add
flds
jmp
jmp
flds
add
flds
add
flds
add
stc
add
dec
lock
popa
aaa
cmp
jmp
pop
add
fldenv
jmp
or
jmp
push
add
xor
add
xor
add
xor
add
xor
jb
push
into
jmp
sub
jmp
jmp
aaa
jmp
jmp
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
inc
xor
add
add
push
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
xchg
dec
add
sbb
jmp
push
add
add
xor
jmp
push
add
fstl
jmp
push
add
orps
call
jmp
push
add
fwait
push
add
jg
add
repz
add
xchg
push
add
xor
push
out
xor
push
out
fists
xor
push
out
sbb
push
out
notl
xor
out
lea
xor
push
out
xor
push
out
xor
add
add
xor
push
out
rcll
xor
push
out
pop
push
out
xor
add
xor
dec
out
xor
dec
out
movsl
dec
out
xor
dec
out
xor
dec
out
rorl
orl
add
xor
out
add
daa
sub
add
sub
add
daa
sub
add
xor
and
add
sub
add
adc
add
call
sub
jmp
mov
sub
ret
mov
add
mov
sub
outsl
mov
add
sub
aas
mov
sub
mov
sub
shrl
add
ja
add
jbe
add
ja
add
add
jbe
add
jbe
add
jbe
add
add
cmp
add
jbe
add
add
pusha
jbe
add
ja
add
js
add
add
ja
add
js
add
js
add
ja
add
add
lcall
add
ja
add
add
inc
add
add
push
add
add
add
imul
pop
cmp
jmp
cmp
pop
cmp
mov
add
inc
cmp
cmpl
jmp
cmp
fwait
cmp
lret
cmp
fnstcw
add
jmp
cmp
or
add
jns
add
jg
add
in
add
pop
cmp
movsl
cmp
cmp
cmp
cmp
iret
cmp
add
add
jmp
cmp
add
xchg
add
inc
cmp
add
xor
cmp
xor
push
out
jmp
out
xor
inc
out
xor
inc
out
mov
out
xor
inc
out
sti
inc
out
xor
inc
out
aad
out
xor
inc
out
sbb
xor
inc
out
sti
inc
out
xor
inc
out
jnp
add
out
xor
inc
out
xor
inc
out
dec
inc
out
xor
out
xor
xor
inc
out
sti
inc
out
xor
inc
out
fildl
xor
inc
out
xor
subl
add
lods
xor
arpl
xor
insl
sub
add
and
add
sub
add
add
sub
add
sub
add
sub
add
xor
add
test
xor
adc
xor
icebp
movsb
xor
ljmp
add
inc
jbe
add
add
pushf
jne
add
add
inc
imul
add
test
add
test
add
fdivs
add
xor
add
add
sbb
add
add
xchg
xor
add
xor
orb
add
push
add
add
add
add
test
add
xor
andb
add
xor
add
jmp
push
add
sub
add
jmp
push
add
or
push
add
jae
add
scas
push
add
dec
push
add
dec
push
add
arpl
jmp
push
add
imul
jmp
push
add
xor
push
add
xchg
push
add
mov
jmp
push
add
xchg
jmp
push
add
insl
push
add
adc
add
jmp
push
add
or
jmp
push
add
add
inc
push
add
leave
add
jmp
cmp
ds
xor
ds
aaa
ds
xor
ds
inc
ds
xor
out
push
ds
xor
out
pop
cmp
xor
out
adc
out
xor
cmp
xor
cmp
xor
cmp
xor
out
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
xor
cmp
xor
out
pop
cmp
xor
cmp
xor
cmp
xor
out
pop
cmp
xor
out
add
add
add
xor
insl
mov
xor
or
xor
xchg
mov
add
xchg
xor
adc
xor
sarl
xor
add
cmp
sbb
add
xor
add
loop
add
loope
add
shlb
sbb
mov
add
xor
cmp
add
mov
add
les
add
add
jbe
add
movb
add
add
pop
add
inc
add
dec
add
sub
add
add
sbb
add
cli
add
push
cld
add
cwtl
sti
add
mov
add
push
add
js
add
sbb
add
and
add
or
add
sar
add
repnz
add
fs
push
pop
add
mov
pop
add
sahf
pop
add
or
add
add
add
jmp
cmp
jmp
cmp
add
loope
add
lds
jmp
ds
add
pop
ds
add
add
lea
add
mov
add
movl
add
pop
dec
add
inc
dec
add
movl
add
sbb
dec
add
rorl
ja
add
repz
add
popf
dec
add
mov
jmp
dec
add
inc
dec
add
dec
dec
add
leave
add
jmp
dec
add
fildl
add
add
imul
add
add
mov
add
mov
add
mov
add
mov
dec
out
mov
dec
out
imul
xchg
dec
out
mov
out
xor
add
mov
dec
out
out
jmp
rorl
xor
dec
out
xor
dec
out
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
dec
out
in
jmp
add
call
sub
add
sub
jmp
lods
sub
frstor
add
mov
add
lods
sub
out
sub
mov
sub
mov
lods
sub
xchg
movsb
sub
jmp
mov
add
sub
popa
das
sub
call
sub
add
sub
add
and
sub
add
sub
add
xorb
add
mov
shll
inc
icebp
xor
pop
sbb
and
mov
ds
or
out
das
inc
lahf
cmp
loopne
pop
inc
push
test
jge
rcrb
add
das
pop
dec
int
sub
mov
mov
movsl
andb
dec
inc
and
scas
push
push
mov
sub
inc
rclb
push
mov
ds
sarb
shll
adc
mov
add
loop
jmp
movsl
xor
cli
stc
cmc
incl
or
dec
mov
pushf
push
cmpsb
into
ja
divl
mov
xor
add
insb
adc
cmp
sub
lahf
popf
mov
jge
mov
dec
fneni(8087
push
fsubrs
or
fwait
pop
pop
daa
push
inc
clc
lds
cmp
outsl
mov
jge
fstpl
inc
call
jge
cmp
cmp
mov
cmp
push
sbb
jae
fisubrs
push
mov
add
lock
jae
call
jo
and
jmp
jmp
popf
stc
aam
jo
and
jmp
jmp
shr
jg
sbb
pop
cmp
and
add
cmp
test
cmp
push
push
lock
lret
mov
mov
xor
jae
and
fidivs
inc
xor
jmp
cs
jae
add
dec
lcall
xor
xor
repz
je
adc
cltd
arpl
dec
inc
pop
cmpsl
sub
subl
ficoms
xchg
ss
scas
subb
sbb
ficoms
xchg
ss
scas
bound
mov
jae
adc
xor
ret
jmp
sbb
adc
shrb
add
insl
mov
ficoms
xchg
mov
shrb
test
fmull
loop
add
popa
add
test
les
rclb
pop
jp
adc
addl
mov
adc
mov
bswap
sub
lods
inc
inc
rclb
jb
add
lea
jae
xor
hlt
dec
enter
js
sbb
inc
dec
add
nop
mov
add
dec
jbe
jmp
data16
xor
adc
add
fwait
jno
xchg
mov
add
jmp
fistl
fiaddl
add
adcb
cmpsl
dec
mov
add
insl
add
and
not
ficompl
stos
add
daa
inc
in
rolb
add
cmpsl
pusha
add
sbbb
inc
push
push
rcr
cltd
lret
add
sbbb
mov
pop
stos
add
sbbb
das
mov
dec
add
dec
cs
add
pop
dec
jmp
xor
jae
mov
daa
sarl
mov
stc
jnp
push
pop
add
pop
jnp
add
xor
add
xor
add
sub
in
out
xor
add
xor
js
xor
add
xor
add
xor
js
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
imul
js
xor
add
xor
jmp
jns
test
add
call
xor
push
hlt
decl
add
out
xor
jmp
xor
pop
cmp
call
call
xor
jmp
lock
add
loopne
add
in
add
lock
jmp
out
add
in
add
lock
jmp
out
add
loopne
add
lock
jmp
out
add
in
add
lock
jmp
out
add
add
in
add
lock
add
cmp
add
cmp
add
adc
sarb
push
add
cmp
or
sarb
mov
sarb
dec
add
cmp
add
xchg
cmp
cmp
lahf
cmp
add
cmp
cmp
cmpb
add
add
and
inc
cmp
add
add
push
cmp
inc
cmp
or
adc
pop
add
cmp
add
push
push
jmp
or
or
xchg
or
jmp
push
pop
jmp
or
or
xchg
or
jmp
or
xchg
or
jmp
add
jmp
or
xchg
or
jmp
or
jmp
or
add
xchg
or
jmp
or
jmp
add
jmp
or
xchg
or
jmp
or
xchg
or
jmp
or
jmp
add
jmp
or
xor
or
xor
or
std
add
xor
or
xor
or
xor
add
xor
or
jmp
or
xor
or
jmp
add
add
xor
or
xor
or
xor
or
xor
add
xor
or
xor
or
xor
add
xor
or
xor
or
xor
or
xor
or
jmp
or
xor
cmp
jmp
loopne
add
loope
add
out
verw
lock
jmp
add
loope
add
out
inc
add
lock
jmp
fucomip
add
lock
jmp
loopne
call
call
add
jmp
loopne
add
jmp
and
jmp
fildll
fldl2t
ss
lock
jmp
add
lock
jmp
inc
aaa
inc
add
loop
add
inc
cs
add
aaa
pop
add
aaa
sbb
add
add
cmp
adc
jns
add
cmp
add
add
das
adc
shlb
imul
ret
add
or
shlb
mov
ret
add
cmp
add
xchg
ss
add
add
subl
jne
xorb
add
das
or
add
add
add
and
add
xchg
or
jmp
or
xchg
or
jmp
add
jmp
or
xchg
or
jmp
add
xchg
or
xchg
or
jmp
add
jmp
or
xchg
or
jmp
or
jmp
or
xchg
or
jmp
add
jmp
or
add
xchg
or
jmp
or
jmp
add
jmp
or
xchg
or
jmp
or
jmp
add
jmp
or
xor
or
xor
or
xor
or
jmp
or
xor
or
xor
or
std
add
xor
or
xor
add
xor
or
jmp
xor
or
jmp
or
jmp
or
xor
or
jmp
or
xor
add
xor
or
add
jmp
add
loopne
add
loopne
add
icebp
add
lock
add
loopne
add
loopne
call
jmp
add
loopne
add
loopne
add
add
icebp
movb
jmp
add
loopne
add
loopne
add
icebp
xchg
fucomi
dec
add
loopne
add
loopne
add
mul
add
lock
add
loopne
add
loopne
call
pushf
cmpsl
jmp
loopne
add
lock
sti
jge
add
loopne
add
cmpb
add
roll
cmpsb
or
inc
cmp
inc
cmp
add
mov
add
add
add
inc
cmp
add
xor
add
add
add
cmp
add
xor
add
cmpsb
cmp
add
js
add
cmp
shlb
adc
ret
add
cmp
add
xor
or
ret
add
cmp
xchg
xor
add
cmpb
add
cmp
add
stos
sub
add
xchg
or
or
xchg
or
jmp
decb
xchg
or
or
xchg
or
jmp
or
xchg
or
xchg
or
jmp
incb
jmp
or
or
xchg
or
jmp
push
jmp
or
or
xchg
or
jmp
push
jmp
or
or
xchg
or
jmp
or
add
xchg
or
or
jmp
cld
add
xchg
or
xor
or
xor
or
cli
cld
leave
xor
or
xor
or
xor
or
xor
cld
loope
jmp
or
xor
or
xor
or
jmp
or
xor
cld
in
xor
or
xor
or
std
cld
test
xor
or
add
xor
or
xor
or
jmp
or
jmp
or
jmp
or
sub
call
out
xor
cli
ja
add
loopne
add
lock
add
icebp
jne
fcoms
add
loopne
add
lock
add
icebp
aad
jmp
loopne
add
lock
add
icebp
xchg
add
pop
cmp
jmp
lock
add
icebp
lds
std
testl
add
lock
jmp
xlat
inc
add
loopne
add
rclb
mov
xor
add
xchg
cmpsl
dec
add
cmp
add
cmpsl
adc
ja
addb
ss
add
cmpsl
xor
push
movsb
ret
add
or
inc
cmpsl
pusha
add
and
push
movsb
mov
add
addb
cmpsl
inc
add
movsb
loop
xor
push
add
cmpsl
pop
add
cmpsl
sbb
adc
add
cmpsl
js
shlb
rolb
mov
adc
ret
add
cmpsb
sub
shlb
sti
or
xchg
sti
mov
xchg
sti
dec
jmp
cld
bnd
or
add
xchg
sti
push
jmp
sti
adc
cmpsl
sti
add
cmpsb
or
jmp
sti
je
xchg
sti
xor
xchg
cld
lret
or
jmp
sti
and
xchg
cld
stos
jmp
sti
add
xchg
sti
test
xchg
sti
inc
jmp
cld
ljmp
sti
pop
jmp
sti
sbb
xchg
cld
lcall
sti
jl
xchg
sti
cmp
xchg
cld
test
pop
jmp
sti
insb
add
jmp
jmp
cli
jno
jmp
sti
ja
jmp
cli
xchg
xor
or
xor
sti
sbb
jmp
sti
test
xor
sti
fnstenv
jmp
cli
sub
xor
sti
leave
xor
sti
or
jmp
sti
jmp
xor
sti
test
xor
or
xor
sti
mov
add
xor
cli
pop
xor
or
xor
sti
and
jmp
fninit
inc
add
rorb
jmp
mov
add
mov
add
mov
jmp
call
jecxz
add
addb
jmp
ja
cli
jecxz
add
pusha
daa
add
pusha
addr16
push
outsl
add
jecxz
add
inc
pop
add
inc
push
add
add
xor
add
xor
add
and
call
jecxz
add
add
call
icebp
mov
add
loopne
add
rcrb
fiadds
mov
sbb
rcrb
cs
pushf
mov
add
fwait
dec
add
sub
add
sub
add
sub
adc
add
add
add
sub
aaa
sub
inc
xor
add
sbb
add
sub
add
sub
and
sub
add
sub
or
addl
xor
add
sbb
sub
add
sub
sbb
cwtl
or
jmp
or
in
or
jl
add
or
jg
add
fwait
or
jmp
or
sti
cltd
or
add
jmp
or
out
jge
shr
or
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
call
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
repnz
xor
add
ss
lock
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
call
call
xor
jmp
xor
ljmp
add
call
xor
in
call
xor
out
call
xor
out
call
xor
icebp
call
xor
loopne
xor
loopne
xor
repz
xor
loop
xor
loop
xor
cmc
call
add
xor
in
xor
fsubr
xor
jmp
call
xor
jmp
add
add
add
add
adc
add
adc
add
add
add
add
add
shrb
add
shrb
add
ret
add
das
add
shrb
add
shrb
add
shrb
add
das
add
xchg
das
add
xchg
das
add
sahf
das
or
xor
add
add
xor
add
or
sahf
das
or
push
xor
or
fidivs
add
or
scas
xor
add
xor
add
or
push
xor
or
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
xor
add
xor
jecxz
out
add
xor
repz
add
add
xor
add
xor
repz
add
xor
add
xor
repz
add
xor
add
xor
add
xor
add
xor
add
xor
repz
add
xor
add
xor
repz
add
xor
jecxz
out
jecxz
pop
add
xor
pop
out
add
add
out
add
call
sub
call
out
sub
test
sub
sub
sub
enter
dec
out
sub
mov
sub
or
sub
fsubr
sub
pop
out
sub
cwtl
call
sub
sbb
sub
cwtl
call
sub
fsubr
sub
lock
sub
and
sub
mov
call
add
sub
add
sub
sub
add
dec
xor
add
xor
add
sub
add
or
or
or
cmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
or
out
xor
add
xor
add
or
fbstp
or
iret
sub
add
or
add
aas
sub
or
xchg
xor
add
sub
or
push
sub
add
sub
add
sub
or
adc
or
mov
or
hlt
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
or
fiaddl
jmp
add
jmp
add
or
cli
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
xor
xor
add
loop
mov
add
xor
add
xor
loop
inc
add
xor
add
xor
add
xor
loop
inc
add
add
xor
add
xor
add
xor
loop
push
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
repnz
repnz
add
xor
add
xor
add
xor
add
xor
outsb
out
daa
add
daa
add
out
daa
add
call
daa
add
add
call
daa
add
daa
add
daa
add
call
daa
add
daa
add
daa
add
call
daa
add
daa
add
daa
add
jmp
sub
ss
sub
mov
sub
ds
sub
ss
sub
push
call
sub
jmp
xor
add
add
xor
add
sub
or
lea
or
insl
das
or
sbb
das
or
lods
das
or
in
or
cmp
das
or
lods
das
or
int
or
or
das
or
popf
das
or
popf
or
lods
das
or
popf
or
sbb
or
lods
das
or
jge
or
add
std
das
or
std
or
or
or
jmp
add
jmp
add
pop
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
or
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
sub
shr
sub
out
call
sub
jmp
in
sub
out
sub
loope
sub
loope
sub
lock
icebp
daa
or
loope
or
fisubs
or
mulb
or
out
es
out
or
fbld
or
out
and
or
fsubl
and
cmc
in
and
in
in
or
fsubl
cmp
cmc
in
cmp
in
in
or
fnstsw
or
or
aas
or
or
add
xchg
or
push
movsb
and
push
je
push
push
test
push
push
test
push
push
inc
and
push
push
and
push
inc
and
push
inc
and
push
and
push
push
xor
push
push
inc
and
push
inc
and
push
inc
and
push
adc
push
push
add
push
push
add
and
pmaddwd
syscall
and
syscall
and
pextrw
and
pmullw
pextrw
and
sldt
jmp
adc
hlt
outsb
adc
in
xchg
pmulhuw
adc
hlt
outsb
adc
in
xchg
pmulhuw
add
fimull
pop
adc
sbb
std
addr16
pop
cld
xchg
pop
hlt
sbbl
sbb
xchg
sbb
rcll
sbb
add
sbb
xor
sbb
sbbl
add
loope
sbb
loope
sbb
rcll
sbb
add
sbb
xor
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
pop
out
in
pop
fildll
pop
iret
sub
pop
pop
sub
add
pop
out
sub
pop
out
in
pop
add
fildll
pop
iret
sub
pop
pop
sub
add
pop
out
sub
and
sub
and
sub
and
sub
and
sub
aam
sub
int3
or
cld
or
in
or
fmull
sub
aam
sub
add
sub
jmp
in
pop
icebp
add
loopne
or
loop
or
hlt
cmp
fsubr
cmp
out
fistpll
adc
fsubs
adc
fstps
adc
fstps
adc
cli
and
and
cli
sti
and
cli
sti
and
std
fsubl
cmc
aam
adc
push
and
adc
and
adc
xlat
and
push
mov
push
push
xchg
es
push
add
xchg
es
push
lds
pop
pop
xchg
and
pop
pop
jp
sbb
jp
sbb
mov
sbb
mov
sbb
cmp
sbb
cmp
sbb
ljmp
sbb
daa
sbb
cmp
sbb
dec
daa
sbb
dec
daa
sbb
cmp
sbb
cmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
loope
sbb
rorl
sbb
add
add
sbb
pusha
sbb
icebp
das
sbb
icebp
das
sbb
loope
sbb
loopne
sbb
rorb
sbb
add
sbb
pop
sbb
lock
sbb
cs
sbb
cltd
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
dec
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
imul
xor
jmp
out
xor
jmp
in
xor
jmp
ljmp
jmp
clc
xor
jmp
enter
mov
xor
jmp
call
xor
add
enter
sbb
cltd
lock
pop
pop
cmp
jo
or
adc
sti
jo
push
test
insb
jns
andb
and
ret
or
jle
cmp
and
sbb
pop
ds
test
jns
sbb
sbb
hlt
or
lods
insb
adc
adc
std
add
idivb
mov
pop
push
arpl
push
cli
lahf
das
or
fs
dec
sahf
repz
aad
inc
addr16
add
pop
or
movsl
cwtl
sbb
xor
mov
fistl
int3
mov
fdivr
sbb
fbld
push
not
push
out
repnz
ret
add
mov
andb
add
cmp
scas
mov
cmp
mov
adc
mov
add
push
aaa
outsl
add
inc
push
stos
out
push
jmp
xor
ljmp
aad
adc
mov
mov
mov
push
mov
mov
insb
repnz
add
add
pop
mov
sub
mov
sbbb
and
lods
scas
add
adc
pusha
ljmp
mov
fwait
or
lods
xchg
and
jl
mov
sbb
sbb
aaa
mov
mov
push
push
dec
pop
add
ror
repz
pop
sub
sti
mov
add
xchg
inc
push
sarb
ret
bound
inc
xchg
inc
lods
das
pop
xor
ja
lods
mov
inc
xor
xor
es
stos
mov
xor
mov
sub
cmpsl
xor
stc
fdivrs
mov
or
sbb
imul
lock
mov
out
pop
push
lahf
addr16
pusha
pusha
mov
push
pop
mov
pop
push
add
cmp
mov
lret
imul
lcall
mov
ljmp
arpl
add
fdivl
cmp
movb
or
dec
insb
push
in
mov
add
jecxz
pop
jge
lahf
jo
or
pushf
jb
imul
and
mov
add
sub
and
ficoml
push
neg
insl
pop
mov
mov
mov
imull
cld
mov
fdivrs
sarb
mov
int
mov
aas
out
mov
lahf
call
or
cmp
movsb
pusha
or
aad
push
fwait
test
xor
add
lods
or
andb
shrl
sbb
or
xchg
cmp
mov
xor
add
cld
idivl
jns
pop
mov
mov
mov
repz
test
xchg
fxch
fs
dec
shll
arpl
repnz
push
das
orb
movsb
push
cli
notb
fstps
sub
mov
push
fistpll
loope
jge
jb
sbb
mov
xor
popf
cmp
popa
ja
sbb
xchg
and
sub
jnp
cmp
sub
jecxz
mov
out
out
mov
xchg
inc
mov
popa
or
movsb
ret
add
aaa
mov
add
add
sub
cmp
or
xor
pop
dec
mov
in
pop
scas
lea
arpl
inc
pop
aaa
cmp
les
push
sub
xor
push
les
sbb
xchg
jno
jp
pop
int
inc
arpl
push
mov
push
adc
jmp
add
sbb
xchg
adc
fidivrs
ss
push
ret
add
iret
add
push
jl
sbb
dec
xor
sub
jle
insb
fs
ja
int3
pop
pop
push
lea
fxch
or
sarl
jne
jecxz
lock
pop
aas
scas
mov
popa
sbbb
sbb
dec
and
js
add
out
popa
das
push
mov
std
pop
cwtl
sbb
test
sbb
sub
sub
test
lea
icebp
inc
mov
in
out
pop
sub
lahf
outsl
sub
dec
jmp
mov
repz
cs
sub
jne
xor
inc
cmpsl
popa
mov
jo
add
decb
gs
push
loopne
in
sbb
cli
clc
inc
and
or
pop
push
jo
sbb
imul
mov
mov
mov
arpl
jnp
outsl
lahf
faddl
jle
in
xor
mov
cwtl
add
xchg
or
scas
fsubr
inc
add
outsb
loope
jae
adc
pop
call
add
add
movsb
sub
lods
push
or
stos
int
shl
mov
sbb
addr16
sub
add
fsubl
cmc
xor
push
mov
or
sbb
pop
dec
sarl
out
addr16
push
mov
clc
pop
scas
jbe
stos
lret
mov
popf
adc
xchg
push
xor
aas
jle
out
pop
mov
cs
lock
mov
and
es
cmp
pop
xor
push
inc
jg
dec
mov
lahf
add
insl
stos
sbb
sub
xor
mov
lods
mov
imul
xchg
test
add
iret
shrb
adc
jg
cmp
ss
daa
sbb
pop
push
loop
lcall
xchg
imul
sahf
jle
cld
ret
dec
jo
decb
adc
int3
clc
orl
push
mov
test
test
xchg
and
lret
cli
mov
adc
sbb
fsubrs
jle
je
and
push
nop
inc
ljmp
jbe
aad
ss
add
sub
movsl
add
xchg
inc
jno
pop
pop
push
stos
imul
lret
out
fistps
add
adc
add
xchg
repnz
push
mov
jl
hlt
mov
fisubs
and
jo
dec
bnd
cmp
int
dec
and
imul
cmp
jecxz
pop
push
sub
inc
add
dec
imul
lds
es
mov
jmp
sub
lahf
rolb
lds
add
clc
xchg
sbb
cltd
pop
sti
insl
mov
jns
loopne
cmp
in
inc
fildl
sbb
mov
add
mov
jno
adc
add
add
pop
mov
lahf
jns
cmpb
push
jne
loop
addr16
mov
das
dec
or
out
repz
lods
jmp
inc
fs
testb
lods
adc
pop
mov
in
mov
sub
orl
mov
mov
jns
stos
bnd
jmp
pusha
add
clc
int
add
add
jl
arpl
rep
cli
push
lods
sub
pop
outsl
mov
sbb
sti
pop
cmp
adc
push
push
jmp
je
pop
and
sub
and
push
or
or
adc
psrld
paddusb
mov
dec
xchg
pusha
jmp
loopne
std
shlb
out
mov
mov
or
add
lds
xchg
aas
jnp
iret
jo
and
imul
ds
pop
aas
sbb
jmp
lds
test
inc
fmuls
mov
push
sarl
add
and
xchg
sub
ret
popa
test
stos
push
inc
add
jb
push
rorb
add
push
dec
add
xchg
mov
stc
xchg
or
add
jae
push
or
sub
fsub
jge
popf
icebp
mov
fs
push
mov
mov
std
lods
std
lock
in
icebp
dec
leave
stos
jecxz
outsl
imul
inc
mov
fsub
loope
cli
clc
aaa
jae
jne
cmp
push
std
divl
lahf
jp
sub
mov
fmuls
and
stos
or
add
push
lcall
sbb
mov
and
pop
std
ss
pushf
hlt
xor
les
call
push
jbe
xchg
sbb
inc
pushf
add
inc
pop
sahf
orb
dec
addr16
xor
movsl
ss
push
shl
insb
push
or
pop
push
add
dec
into
leave
jno
scas
and
dec
sbb
add
add
inc
sub
pop
inc
arpl
mov
sub
add
lahf
adc
xchg
dec
add
add
loopne
incl
aaa
mov
cld
and
and
jle
and
dec
ja
sub
jl
outsb
jnp
sbb
imulb
cmp
ja
outsb
lds
imul
add
jmp
inc
push
loope
out
fildl
arpl
cmpsl
mov
movsb
iret
or
or
data16
ficoms
dec
pop
sbb
aaa
in
loope
pusha
sbb
dec
mov
mov
imul
inc
test
inc
push
push
addl
push
inc
add
sbb
inc
rclb
push
in
xor
or
push
dec
jb
push
jns
cmp
es
xlat
dec
mov
pop
fucom
pop
pop
adc
pop
inc
mull
pop
or
outsb
pop
outsl
pop
lods
pop
add
xor
loopne
mov
jb
jmp
jno
inc
repnz
jns
mov
add
inc
mov
jns
jg
es
jecxz
adc
sub
das
add
out
stos
adc
imul
int
shl
lods
sbb
aam
adc
sarl
fadd
enter
mov
lcall
fs
fwait
jns
inc
lcall
lret
lea
dec
add
jge
inc
js
fwait
in
mov
pop
push
and
ficoml
test
fwait
loop
push
les
cld
push
xchg
test
pop
pop
lret
or
push
pop
mov
mov
bound
xor
pusha
sbb
iret
pop
fldenv
xchg
ret
inc
repz
pop
outsl
mov
fidivl
push
add
push
push
das
sub
imul
shrb
bound
test
mov
xchg
add
xchg
jne
int
addb
xchg
mov
outsl
nop
xchg
mov
mov
sahf
lcall
dec
divb
int
mov
cwtl
xor
lcall
add
out
movl
mov
xor
mov
sub
mov
xchg
subl
orl
push
push
cmpl
test
push
xchg
mov
pop
test
sub
dec
inc
movsb
stos
mov
jmp
or
scas
and
outsl
lods
out
lods
lods
sbb
xor
add
cld
aaa
jne
ret
lea
mov
cwtl
sarb
idivb
mov
je
mov
push
inc
mov
popa
xorb
fisttpl
mov
push
dec
mov
dec
mov
jne
adc
mov
nop
mov
inc
push
mov
pop
xor
xlat
xchg
sub
lods
sub
add
xor
je
xchg
fdivp
lret
inc
imul
dec
push
mov
or
movsb
mov
xor
pusha
mov
mov
fisttps
sbb
bound
in
movsb
shrl
adc
mov
jnp
in
push
jb
cmp
into
sahf
stos
and
into
xor
pop
dec
xor
add
repz
stos
mov
stos
nop
clc
xchg
push
in
mov
mov
sbb
pushf
sub
cmp
fdivl
lret
xchg
xchg
mov
js
cs
mov
je
loope
inc
push
fs
outsb
repz
sbb
icebp
adc
push
movsl
xorb
or
scas
cmp
pop
xor
add
lock
mov
les
xchg
ret
scas
cmpsb
pop
iret
xor
sub
lds
lock
lea
fs
inc
clc
cmpsl
mov
inc
fwait
xchg
dec
xchg
and
je
mov
out
jp
enter
gs
je
fwait
call
out
mov
hlt
fisttpll
dec
insb
dec
jb
mov
add
push
adc
cmp
cmpsb
push
jae
lods
xor
fstps
inc
jns
cmp
lods
and
leave
xchg
push
dec
push
mov
mov
popf
mov
and
fildl
adc
sub
insl
xchg
push
cmp
sbb
cs
pop
sub
mov
xor
fimull
jg
cmpsb
cs
xchg
decb
gs
stc
out
jno
pop
dec
leave
xor
inc
arpl
sarb
imul
rcl
sbb
shll
pop
in
xor
pop
cwtl
sahf
push
sbb
stos
mov
std
cmovae
inc
jnp
call
push
push
mov
add
pusha
and
sbb
mov
mov
movsb
sti
jmp
repz
leave
push
inc
xchg
jle
xor
in
shr
lcall
push
rclb
fimull
popl
xor
pop
ret
cmp
cmp
cltd
xchg
out
xor
jmp
inc
mov
mov
pop
ja
push
mov
pop
add
fdivrl
add
jl
mov
insl
and
add
xlat
hlt
cmp
ret
jbe
push
sti
xchg
or
cli
sar
mov
leave
push
rclb
or
mov
outsb
push
stos
jle
lahf
inc
jmp
jl
pusha
add
xor
xor
push
gs
ret
mov
or
inc
add
add
fistps
sarl
out
aad
jae
and
inc
xchg
adcl
dec
cmp
std
xchg
cmpb
pop
daa
jnp
xorb
push
cmpsb
decb
push
xchg
pushf
std
sub
mov
jne
popa
popa
into
je
out
fcmovnbe
scas
push
stc
adc
xchg
adc
pop
jmp
sub
pop
add
mov
or
loope
sbb
xlat
cld
mov
mov
adc
add
cs
es
cmpsl
call
mov
push
xor
adc
aas
add
mov
mov
mov
pop
pop
sub
dec
push
push
icebp
mov
subb
aam
ja
adc
cmc
jle
addr16
ret
add
jbe
jl
lret
sahf
sbb
loope
push
test
jge
lret
adc
rol
mov
jmp
cwtl
test
pop
rcrl
insl
cli
lock
xchg
adc
or
mov
test
in
mov
dec
mov
mov
nop
sub
outsb
nop
push
xchg
fildl
add
arpl
mov
and
int
add
jmp
add
jne
or
mov
push
sbbl
hlt
pop
andb
dec
push
mov
mov
adc
mov
mov
rcpps
mov
pop
pop
inc
aam
sti
int3
add
pop
pop
cmp
fs
add
sub
mov
mov
add
data16
daa
jae
les
jno
es
pop
mov
std
add
clc
mov
decl
imul
mov
or
sub
push
mov
and
andb
pop
lock
fdivr
sti
movsl
cwtl
cli
sub
jns
dec
xchg
imul
add
xor
loop
xor
iret
push
cltd
and
lods
sbb
add
or
pop
mov
pop
insl
and
inc
mov
in
test
mov
mov
mov
xchg
or
aaa
or
cmp
call
jns
mov
pop
sahf
lods
mov
add
sahf
popf
pop
add
add
xor
addr16
stc
xor
xor
cwtl
sbb
sbb
sub
adc
sbb
sahf
push
popa
bound
xor
and
add
fs
in
mov
xor
les
add
mov
call
ljmp
sbb
dec
add
fisubs
dec
popl
popa
pop
cwtl
add
jno
pushl
or
loop
adc
xchg
cmp
mov
mov
lods
hlt
adc
sub
flds
std
sbb
mov
js
add
cmp
or
add
outsl
add
lea
adc
and
and
sub
pop
mov
aam
add
adc
mov
fnsave
mov
cwtl
leave
push
scas
test
mov
dec
or
and
pop
insb
xchg
orl
push
mov
xor
dec
dec
xor
push
sbb
ret
scas
movsb
daa
insb
mov
xchg
in
mov
std
mov
and
inc
push
and
lods
hlt
es
and
xchg
cwtl
lea
sbb
jp
in
repz
add
jns
js
gs
jg
add
arpl
adc
imul
aad
into
sub
dec
aaa
mov
ficompl
rclb
mov
and
pop
mov
pop
push
push
push
dec
popf
lock
jle
pop
jge
call
and
les
jle
push
mov
mov
sub
xor
add
pop
fidivrl
inc
dec
fucomip
div
sub
out
mov
push
ret
inc
pop
test
push
mov
daa
add
mov
push
jg
mov
in
xchg
xchg
repz
or
cmp
sub
sub
shrb
xchg
mov
aas
arpl
add
cmpsb
sahf
mov
inc
ret
add
repnz
inc
mov
or
cs
loopne
test
das
push
adc
hlt
jns
leave
std
sub
jo
mov
out
out
mov
xchg
fbld
cmp
rcl
inc
test
mov
mov
subl
adc
pop
mov
jbe
mov
inc
ja
gs
out
sub
insb
cmp
lret
or
sub
sarb
pop
iret
cmpsb
idiv
loope
cmp
rorb
or
sub
and
adc
sbb
ja
stos
mov
mov
mov
or
lock
scas
cmp
push
iret
push
test
inc
sbb
repnz
dec
ret
push
xchg
add
sti
sub
test
mov
push
ret
addr16
out
jp
or
inc
xor
sbb
shll
sarb
outsb
mov
add
jmp
shr
sti
out
sbb
lret
fistps
sub
sbb
jmp
cs
stos
cs
jne
mov
movb
mov
add
adc
push
xor
push
bound
test
scas
data16
out
outsl
and
flds
sbb
cmp
bound
in
pop
mov
test
add
enter
mov
pop
xchg
pop
fistl
imul
or
sbb
std
cs
pop
jae
mov
mov
out
fadds
add
and
mov
aam
stos
and
insb
sub
xlat
pop
imul
mov
sub
mov
daa
repz
or
add
push
iret
aad
xchg
testl
xor
mov
sti
pushf
mov
mov
mov
jns
add
push
jbe
jge
mov
dec
add
sbbb
xchg
sbb
cmpsb
pop
mov
mov
push
out
lea
cli
rol
or
clc
in
icebp
scas
xchg
into
push
jno
or
cmpsb
xor
stos
bound
clc
jmp
imul
out
xchg
jmp
mov
cmp
shrb
add
add
lret
pop
lcall
xchg
mov
jno
test
clc
and
imul
xor
nop
imul
or
push
mov
dec
pusha
jns
or
int3
lret
std
mov
iret
add
aad
mov
xchg
cmp
xchg
xor
add
add
into
js
movsl
out
jl
add
shl
in
shlb
mov
cmp
shrb
loopne
or
js
das
nop
test
fsubrl
mov
push
adc
cltd
cmp
fcoms
into
pop
mov
arpl
lret
sub
push
xor
pop
xor
es
xchg
push
stos
int3
imul
add
cmc
lods
mov
inc
enter
jnp
rcll
hlt
pop
xor
jbe
jmp
sub
pop
stos
xlat
dec
cwtl
ret
add
frndint
mov
ficomps
orb
jo
xor
mov
push
jb
iret
jnp
call
xor
jbe
and
sub
inc
add
out
jmp
test
jle
fs
dec
sub
clc
call
outsl
enter
dec
dec
and
cs
mov
sub
aad
jmp
pusha
in
xor
add
int3
lahf
outsb
jb
mov
in
ror
aad
std
jnp
imull
sbb
pop
std
adc
or
pop
mov
jg
pusha
and
add
jg
adc
xor
jbe
mov
loope
xchg
cmp
cmc
push
or
dec
rorb
mov
xor
adc
fldenv
or
jmp
mov
push
pop
inc
sbb
pop
adc
les
sub
cwtl
sub
xor
stos
or
lret
push
lret
aam
out
add
or
mov
das
add
jmp
xor
cmp
bound
or
dec
fdivl
mov
jle
mov
aaa
jne
mov
xorl
push
dec
call
sbb
or
inc
xchg
and
jle
cmp
xchg
add
mov
add
std
push
inc
pusha
fists
js
fs
popa
jns
sti
inc
dec
inc
xor
add
add
pop
jge
adc
mov
into
lahf
mov
lret
bound
sbb
jne
fcmovu
mov
xchg
sarb
push
mov
and
movsb
and
adc
repnz
cmp
jecxz
cld
xchg
jae
xor
call
ljmp
add
in
cli
dec
jl
mov
xchg
add
pushl
hlt
pop
scas
in
or
pop
fs
les
push
push
or
add
cmp
lret
int3
dec
push
push
or
xor
lods
repz
lcall
popf
cmc
mov
cmpsb
stc
mul
nop
cld
add
sub
adc
bound
and
mov
jp
out
dec
dec
mov
out
fbstp
pusha
ret
mov
push
pusha
mov
punpckhwd
cmp
sub
pop
pop
cmc
iret
jl
movl
mov
mov
pushf
imul
bound
frstor
cli
mov
in
pop
leave
loope
dec
dec
add
loopne
es
xchg
cltd
and
push
repnz
jmp
scas
pusha
inc
cmp
jno
inc
sbb
mov
jne
sbb
enter
mov
shlb
pop
scas
rorb
and
rclb
mov
scas
pop
jge
jae
cmp
cmc
xor
je
inc
inc
push
add
pop
xor
mov
mov
dec
jnp,pn
add
stc
mov
jae
xchg
jno
in
and
xchg
cmp
push
adc
lds
pop
xlat
aaa
lods
pop
mov
subl
lock
cld
out
jne
xlat
and
call
add
xor
sub
push
mov
rclb
aam
sub
sub
jo
mov
sbb
sub
xor
xchg
inc
add
ljmp
dec
mov
movsb
mov
pop
xlat
push
cwtl
inc
cmc
jnp
mov
mov
scas
rcrl
mov
jp
lods
faddl
cmpsl
push
cmpsb
cli
popf
pop
add
add
incl
sbb
orb
fbstp
lret
fxch
and
imul
int
add
mov
dec
mov
mov
pop
popa
xorl
sbb
je
pushf
lock
pop
jg
addr16
lds
push
andl
inc
add
xorb
add
dec
dec
cmp
mov
sbb
sbb
icebp
xchg
adc
or
cli
cmp
dec
push
sub
cmp
mov
inc
mov
dec
in
cmp
jl
gs
sahf
mov
mov
xchg
adc
popa
mov
push
jae
pop
jg
adc
add
xchg
daa
int3
mov
jle
inc
aas
dec
rolb
rol
cmp
shll
out
leave
sbb
lahf
sbb
adc
jmp
aas
pop
mov
sbb
rcl
add
mov
stos
stc
adc
inc
sub
shrl
push
push
hlt
and
andb
mov
lods
add
lods
lods
cmp
jge
jge
mov
mov
add
into
xor
and
jbe
cs
xor
in
adc
xor
into
sbbl
loope
dec
imul
popf
fs
fisttpl
fwait
dec
push
xchg
aaa
std
arpl
xchg
insl
sbb
push
addr16
mov
xchg
inc
and
mov
call
push
xchg
aam
sub
in
repnz
aas
lea
push
xchg
rolb
dec
clc
aas
fildl
or
dec
jnp
insl
dec
cmp
mov
dec
rcll
sbb
lahf
ret
dec
xchg
xchg
test
and
adc
adc
js
push
cld
pushl
push
push
popa
cmp
add
xor
cmpsb
mov
fcoml
inc
push
repz
push
sbb
jmp
pop
leave
fs
loopne
mov
push
sub
push
mov
or
repnz
mov
sub
decl
mov
mov
and
nop
mov
mov
xor
movb
add
sahf
addl
stos
cmp
jno
add
xchg
lods
add
inc
pop
inc
mov
lahf
jg
pop
and
adc
lds
sahf
cmp
out
mov
mov
cli
pop
lods
cmp
leave
mov
scas
cmp
addr16
mov
aaa
imul
out
loop
xchg
xchg
mov
loopne
popf
mov
sub
push
add
insl
jbe
add
xlat
or
and
lahf
les
xchg
push
dec
jmp
lret
push
jbe
pop
sub
cmpsb
out
jl
rolb
mov
mov
mov
sbb
jbe
jg
jecxz
inc
loop
ret
imul
sbb
push
pop
fidivrs
aas
mov
and
sbb
into
xchg
int
test
add
mov
push
or
pusha
outsl
movsb
jo
jbe
pop
pushf
lods
lods
mov
pop
mov
xor
jg
xor
fstpl
adc
dec
dec
mov
lods
xor
pop
movsb
sbb
dec
std
lods
out
push
inc
dec
push
je
push
out
iret
xchg
pop
sbb
out
add
jbe
stos
sbb
cmp
std
xchg
push
out
into
rcll
add
inc
mov
adc
push
jnp
ja
int3
mov
popf
pushf
in
jnp
jmp
rolb
je
mov
cs
mov
fwait
hlt
aad
cmp
sbb
mov
jl
add
leave
jecxz
add
nop
pushf
lcall
push
loopne
cmp
lret
lods
psraw
aaa
add
shrb
jae
sbb
lock
push
popf
enter
jo
lds
enter
inc
popf
lret
cmpl
sbbl
aaa
lret
scas
fidivrs
aad
ret
mov
testb
mov
mov
aam
mov
jecxz
jecxz
add
dec
outsb
cmp
add
push
cmpsb
insl
add
xlat
je
movsb
int3
test
lea
das
jne
dec
dec
loopne
jbe
or
mov
sbb
add
cs
add
pop
outsl
movsl
frstor
cmp
lods
xchg
xchg
out
adc
repnz
pop
sbb
sbb
ljmp
cwtl
sub
lcall
mov
add
rclb
mov
pop
popf
add
pop
mov
rcll
or
cmp
dec
jno
dec
sub
inc
loope
adc
cmpsb
das
mov
inc
xor
adc
and
fidivrs
add
cmpsl
dec
scas
inc
out
enter
icebp
or
xchg
movsb
xor
cmp
adc
lret
int
in
sub
add
mov
and
adc
jns
sbb
mov
pop
sahf
pushf
jl
ret
mov
cmc
into
inc
enter
sahf
sbb
pop
xchg
addb
popf
loope
iret
push
test
insb
lods
dec
jne
sti
push
adc
xor
jp
lea
xchg
ljmp
adc
jp
xchg
xlat
push
push
mov
add
mov
test
test
sysexit
cmp
hlt
cs
xor
jp
sti
stos
or
bnd
movsl
dec
or
fcmovb
movsb
cmp
mov
lods
bound
sbb
mov
cs
pop
call
xchg
in
dec
add
outsl
hlt
fildll
mov
cmpsl
scas
cs
nop
imul
add
mov
cwtl
xor
mov
idivl
xchg
sbb
stos
mov
call
ret
mov
js
pop
xchg
in
jp
addr16
xchg
pop
jmp
icebp
ljmp
add
call
ss
call
pop
add
shll
leave
xor
add
sub
add
xor
add
sub
jae
add
inc
sub
jecxz
nop
xor
add
xor
add
xor
add
xor
add
adc
inc
xor
add
adc
xor
add
xor
add
adc
ss
add
xor
add
xor
add
lret
add
add
add
add
xor
add
xor
add
xor
sbb
add
cmp
jmp
add
jmp
add
jmp
add
call
pop
or
out
adc
rcrl
add
pop
ret
add
pop
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
add
jmp
jmp
arpl
xor
jp
dec
loope
int
and
rcrl
dec
int
lock
adc
and
mov
inc
and
mov
or
add
xor
fisubrs
xor
sub
jmp
subl
test
jmp
jle
mov
add
jmp
shrb
add
add
xor
xor
push
sub
mov
add
add
rcrl
roll
jmp
add
adc
or
add
outsl
push
call
pop
loope
xor
jmp
call
sar
cmp
xor
add
sar
call
enter
or
sbb
xor
int3
call
add
add
mov
enter
xor
adc
xor
jmp
call
lock
mov
lock
mov
lock
popf
lock
inc
incl
and
je
jmp
popa
add
imul
sahf
sub
add
sub
dec
inc
adc
add
pop
sub
dec
inc
out
push
inc
imul
jno
inc
cmpsb
push
jb
rorl
imul
jno
inc
out
inc
jae
xchg
inc
incl
fstpt
add
aas
add
in
add
fidivrl
add
aas
add
sldt
jmp
add
jmp
add
movl
insb
jmp
add
add
jmp
add
add
add
jmp
fbstp
call
out
dec
inc
in
in
int3
outsb
outsl
inc
jmp
outsb
inc
jmp
outsb
inc
jmp
jo
jmp
cmove
cmpsb
jo
jmp
insl
inc
jmp
outsl
inc
jmp
jo
jmp
outsl
inc
jmp
outsl
inc
jmp
outsl
inc
jmp
add
ljmp
add
pop
add
jmp
mov
push
add
add
jmp
call
mov
xor
mov
xor
add
xor
add
xor
add
xor
sub
loopne
jmp
loope
jmp
popa
jge
xor
add
xor
add
xor
add
xor
add
xor
jb
xor
add
xor
jb
xor
add
xor
jb
xor
add
xor
jb
add
xor
add
xor
jb
xor
add
xor
jb
xor
add
xor
ss
xor
mov
out
add
out
add
out
add
out
add
out
add
xor
or
xor
pop
pop
xor
or
xor
push
cmp
add
out
add
cmp
add
add
call
xor
mov
sbb
add
call
xor
mov
stc
xor
push
out
add
fnstenv
add
out
add
ret
jmp
sub
add
mov
add
mov
sub
add
sub
call
mov
add
jbe
call
add
jmp
xor
add
jmp
xor
add
xor
add
jmp
ret
stos
xor
add
ret
mov
ret
mov
add
imul
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
jo
add
jmp
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
outsl
add
jmp
outsl
add
call
outsl
add
sub
jmp
outsl
add
sub
jmp
outsl
add
xor
outsl
add
xor
add
xor
add
xor
add
add
xor
add
xor
jmp
rolb
xor
jmp
cltd
add
xor
jmp
cwtl
add
xor
jo
xor
jmp
sub
xor
jmp
stos
outsl
jmp
push
add
xor
add
xor
add
xor
jmp
scas
outsl
jmp
and
xor
add
xor
add
add
xor
add
xor
mov
call
xor
fucomp
xor
and
xor
int3
call
xor
mov
int3
xor
scas
call
xor
imul
xor
push
jl
add
xor
sbb
add
call
xor
fs
xor
add
call
xor
callw
mov
xor
mov
xor
add
pushl
xor
add
jmp
xor
ljmp
add
test
ljmp
add
mov
xor
add
xor
add
jmp
add
mov
add
mov
xor
add
add
pusha
add
pop
add
add
jns
push
xor
jne
jnp
inc
xor
add
xor
wrmsr
add
pop
add
fiaddl
jmp
out
add
out
add
add
add
jmp
lcall
ljmp
cmp
adc
push
ljmp
add
add
lsl
ljmp
push
ljmp
inc
ljmp
push
ljmp
outsb
ljmp
ljmp
add
insb
add
ljmp
or
ljmp
add
xor
add
xor
xor
je
sbb
jno
adc
jo
add
cld
xor
fidivl
pop
add
xor
xor
mov
add
xor
add
xor
divl
pop
add
xor
xor
fidivl
push
add
xor
mov
xor
add
xor
lret
xor
push
pop
xor
aaa
xor
push
loopne
iret
push
repnz
mov
or
add
in
add
add
in
fildl
dec
in
add
loop
inc
in
add
cmc
add
push
add
push
add
in
loope
xchg
in
add
in
add
in
add
add
in
sub
xor
es
add
in
add
in
repz
in
add
in
add
adc
mov
add
add
in
add
in
das
add
in
add
sahf
xor
add
xor
jo
dec
add
xor
jg
imul
in
xor
and
cmp
xor
cmp
xor
cmp
jbe
add
addr16
xor
xor
mov
xor
movsb
xor
cmpsb
xor
test
mov
cmp
xor
add
ret
cmp
xor
cmp
xor
xor
xor
xchg
add
sti
mov
scas
sti
mov
mov
ret
pushl
fcmovne
pushl
fcmovnu
mov
mov
mov
sarl
add
sbb
add
sbb
add
add
sbb
add
sti
add
int
add
into
sti
adc
iret
sti
adc
rcr
std
call
fildl
fcomp
ltr
fistl
add
mov
sbb
loopne
sbb
loope
sbb
loop
xor
dec
add
call
add
inc
add
call
add
jno
scas
incl
add
push
lock
shrl
ss
cs
or
sub
or
sub
or
sub
decb
das
das
incb
das
decb
das
and
shrl
xor
shrb
xor
shrl
inc
cs
xlat
cs
dec
cs
add
in
push
push
sbb
add
mov
ljmp
mov
sti
add
add
add
incb
xchg
ljmp
ret
ljmp
mov
out
add
mov
icebp
add
mov
jmp
xchg
out
add
push
ljmp
inc
ljmp
dec
ljmp
aas
ljmp
sbb
loopne
sbb
filds
add
add
ss
add
aaa
push
add
xor
xor
pop
xor
push
push
add
xor
pop
xor
imul
pop
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
jl
add
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
fdivrp
push
out
pop
std
dec
out
std
das
out
or
xor
or
inc
out
or
xor
mov
inc
out
xor
xchg
incb
aaa
out
jg
cmp
mov
cmp
xchg
cmp
jl
cmp
cmp
out
cmp
out
decb
xchg
aas
out
incb
add
popf
incb
hlt
std
inc
out
sti
std
xor
out
add
dec
out
decb
paddd
out
incb
and
inc
mov
sub
mov
or
into
sub
in
or
fldt
decb
sub
int3
std
ljmp
std
or
sar
sub
sar
shrl
std
add
add
std
out
sub
std
out
cltd
std
std
lds
std
int3
sub
std
or
pop
std
or
pop
std
fisubrl
std
adc
inc
std
aad
add
or
push
or
push
or
push
or
ljmp
dec
out
cmpsl
add
test
inc
fisttps
loopne
add
lock
xor
add
loopne
and
test
jnp
addl
loopne
add
addl
push
lock
add
arpl
xor
add
lock
loopne
add
loopne
add
lock
add
lock
add
push
es
add
es
add
and
xchg
add
and
lcall
and
popf
add
sahf
add
and
mov
add
movsb
add
movsl
add
add
es
stos
es
add
mov
jno
mov
data16
addr16
je
mov
gs
mov
es
add
add
in
or
call
in
mov
call
pop
or
call
adc
or
call
cmp
vcomiss
call
adc
enter
leave
call
mov
or
push
mov
and
mov
or
into
jle
mov
enter
add
enter
enter
enter
or
sahf
or
mov
adcl
push
xchg
or
push
mov
push
xchg
push
jle
rclb
or
push
sub
push
sub
push
and
push
and
push
xor
pop
push
das
or
push
es
push
pop
or
push
ret
or
ret
push
mov
adc
or
add
push
cmpsl
or
sahf
or
push
or
push
mov
jns
mov
or
xchg
or
or
cmpsb
or
push
mov
sub
ret
loope
and
loope
and
icebp
cmp
and
loope
and
loope
and
icebp
dec
and
cmp
loope
and
push
icebp
ljmp
add
loop
and
cli
bnd
cmc
loop
and
xlat
mulb
out
pop
and
mov
xor
mov
xor
mov
xor
test
xor
dec
loope
and
cmp
dec
icebp
aaa
and
cmp
add
cmp
mov
cmp
and
cmp
and
and
and
push
and
push
and
add
cmp
pushf
cmp
lods
cmp
mov
add
and
cmp
add
sub
adc
pop
and
cmp
aaa
pop
and
and
mov
adc
jbe
shll
aaa
lret
and
push
aaa
sbb
inc
aaa
sbb
jmp
or
ljmp
or
or
add
or
or
or
or
push
insb
or
push
or
push
push
or
js
stos
into
jns
lods
cmp
mov
xor
mov
int
or
lret
or
push
xor
mov
add
decb
arpl
in
or
ljmp
lret
out
and
add
out
adc
xor
or
lahf
or
push
xchg
or
push
orl
in
push
jae
decb
or
push
or
push
pop
or
push
push
or
push
mov
out
xor
or
dec
orb
dec
sub
cmp
sub
dec
dec
sub
rorb
or
dec
daa
or
sub
or
add
dec
mov
adc
or
mov
imul
or
add
faddl
add
mov
incb
in
add
faddl
xchg
add
sbb
or
inc
in
add
push
hlt
or
add
cmp
adc
add
add
adc
sbb
syscall
adc
cmc
adc
in
add
loopne
pop
add
mov
das
push
mov
cs
add
add
data16
cmp
push
cmp
push
xor
cmp
push
sub
or
sub
or
mov
aaa
or
scas
aaa
or
push
pop
cmp
push
add
bound
adc
push
cmp
push
push
cmp
push
mov
aaa
adc
xchg
aaa
adc
push
movsl
aaa
pop
push
mov
sbb
fwait
aaa
sbb
cwtl
aaa
sbb
sub
sbb
push
cmp
pop
cmp
push
lea
pop
push
xchg
cmp
push
jmp
pop
and
aad
and
pop
and
roll
and
faddl
and
cmc
fiaddl
daa
in
filds
sub
add
rolb
sub
int
sub
fiadds
sub
fildl
sub
aam
sub
cmc
bound
das
in
or
in
or
frstor
xor
inc
or
in
inc
or
inc
or
cmc
push
aaa
in
outsl
or
in
or
fstpl
cmp
dec
or
in
inc
or
in
or
cmp
inc
cmc
xor
pop
sub
lret
aaa
int
add
daa
aaa
les
cs
iret
pop
and
aaa
roll
aaa
rolb
aaa
xchg
pop
xor
xchg
pop
and
test
pop
aaa
jl
mov
jns
mov
ss
mov
ss
pop
xchg
ss
pop
sahf
ss
pop
xchg
ss
pop
mov
ss
pop
mov
mov
fisubl
or
popa
inc
or
popa
inc
or
add
bound
adc
inc
loope
xor
push
xchg
repnz
loop
xor
xor
loop
xor
jno
jnp
jb
pop
bnd
push
loop
xor
xor
outsb
xor
repnz
xor
js
xor
jns
xor
jp
mov
loop
xor
jbe
xchg
add
ja
sub
xorb
loop
xor
repnz
repnz
loop
xor
jge
daa
bnd
add
cmp
or
pop
xor
cmp
jns
pop
xor
das
pop
xor
pop
xor
pusha
xor
popa
xor
bound
inc
das
arpl
ds
test
das
das
test
adc
stos
adc
add
das
lods
adc
scas
adc
cs
imull
mov
aam
mov
lds
mov
mov
cs
mov
mov
icebp
cs
out
cs
mov
cli
ss
mov
cli
xor
mov
fiaddl
add
rcr
add
cli
in
ret
add
add
add
add
mov
lret
mov
les
sbb
add
jmp
mov
add
test
or
push
ljmp
mov
lret
mov
dec
and
inc
and
dec
and
push
dec
and
inc
and
add
push
xchg
and
push
lea
push
les
jns
stc
pop
jns
aam
js
stc
dec
jns
pop
cmpsb
jns
stc
pop
jns
adc
or
push
cmpsb
sbb
stc
push
scas
adcl
jns
arpl
jns
stc
push
inc
cwtl
adc
lret
fldenv
cmpsb
cwtl
js
clc
push
mov
into
cmp
clc
outsl
jns
movsl
jp
dec
lret
add
js
rep
dec
lcall
inc
lcall
dec
adc
movsl
dec
mov
movsb
dec
push
outsb
movsl
dec
dec
mov
dec
cmc
movsb
dec
dec
mov
cmp
inc
adc
imul
mov
mov
jecxz
movsl
dec
or
inc
mov
cmp
push
mov
jmp
call
add
xor
jmp
call
xor
add
das
add
add
add
adc
and
inc
es
add
sub
add
add
aas
xor
mov
ss
stos
inc
add
ret
add
punpcklwd
add
sbb
imul
insl
outsl
inc
cld
jo
or
sub
js
subb
pop
xor
arpl
sbb
fiaddl
imul
add
outsl
add
jo
testb
ja
repz
dec
jle,pn
push
add
push
add
inc
add
inc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
push
cmp
push
pushl
push
sub
pop
push
and
push
push
sbb
dec
push
adc
inc
push
or
ds
add
ss
cld
and
push
hlt
and
push
in
and
push
in
jmp
add
add
xor
or
aaa
icebp
cld
int
push
les
idiv
icebp
sub
add
pop
out
lods
and
push
movsb
and
push
pushf
and
push
xchg
and
push
mov
mov
icebp
sub
add
pop
cmpsb
push
insb
and
push
pop
and
push
dec
and
inc
and
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
add
add
add
push
xor
add
add
inc
xor
add
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
add
add
add
add
shll
add
shll
add
ret
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xchg
xor
add
xorl
add
add
xor
add
xorl
add
or
ljmp
add
or
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
jle
xor
add
xor
add
xor
jae
xor
cmc
xor
jae
xor
out
leave
jae
xor
add
xor
je
xor
add
xor
add
xor
jo
xor
inc
divl
sbb
add
xlat
jo
call
jo
mov
mov
sub
mov
add
call
jo
pop
out
push
add
call
jo
push
out
xor
adc
add
push
jno
repz
jno
sbb
sub
stc
cmp
js
xor
in
cmp
inc
out
inc
add
sbb
imul
inc
add
sbb
add
sahf
inc
add
or
jle
inc
add
add
mov
push
add
mov
or
or
adc
out
inc
add
das
or
or
pop
add
das
pop
add
das
or
xchg
sahf
inc
add
cs
add
or
cmp
or
push
lahf
inc
add
adc
rcrb
or
add
cmpsb
movsb
inc
add
mov
or
divl
pusha
add
jmp
je
jmp
add
jmp
jne
jmp
add
jmp
jne
jmp
add
jmp
je
jmp
add
jmp
jbe
jmp
add
jmp
jbe
jmp
add
jmp
je
jmp
add
jmp
jbe
jmp
add
jmp
jbe
jmp
add
jmp
jne
jmp
add
jmp
jbe
add
jmp
add
jmp
jbe
jmp
add
jmp
jbe
jmp
add
jmp
jne
jmp
mov
jbe
xor
ja
xor
aad
std
jbe
xor
aad
adc
add
xor
add
xor
stos
xor
add
xor
stos
xor
add
xor
add
xor
add
add
xor
jbe
xor
add
xor
outsl
stos
xor
sub
xchg
add
xor
outsl
sub
incl
fnsave
int
sub
mov
call
xor
add
out
add
jno
bnd
jo
lcall
add
jo
inc
out
add
jo
cmp
add
mov
xor
pop
mov
sub
push
fwait
jo
iret
call
jo
fwait
out
add
out
add
call
jno
add
inc
jno
xor
sub
add
test
xchg
movsb
xor
add
xor
add
mov
jb
add
add
add
mov
xchg
adc
mov
das
xor
add
add
xor
add
xor
add
inc
add
xchg
repnz
add
xor
add
xor
add
xchg
repnz
add
mov
add
sbb
jmp
add
add
jmp
jo
jmp
add
jmp
jo
jmp
add
jmp
outsb
inc
jmp
add
ljmp
push
jmp
outsl
inc
jmp
add
jmp
outsb
inc
jmp
add
jmp
imul
add
jmp
push
jmp
add
jmp
insb
inc
jmp
add
jmp
insb
inc
jmp
add
ljmp
jmp
add
lahf
insb
inc
jmp
add
imul
jmp
add
push
insb
inc
jmp
cmpsl
add
xor
insb
sub
jno
icebp
xor
insb
sub
mov
in
xor
insb
sub
xchg
add
xor
insb
sub
cwtl
add
xor
add
xor
add
xor
add
xor
insl
stos
xor
add
xor
insl
stos
xor
add
xor
insl
stos
xor
insb
stos
xor
add
add
xor
insb
stos
xor
add
xor
insb
stos
xor
add
xor
xchg
call
jno
mov
inc
add
aas
jno
call
jno
mov
inc
jno
push
call
jno
cwtl
out
cmp
xor
out
xor
cmp
call
jno
fwait
out
add
add
jo
mov
sub
test
call
jo
jl
and
cltd
shll
out
inc
add
call
jo
scas
call
jo
add
xor
add
mov
pop
sub
inc
add
inc
add
sub
add
inc
add
xor
cmp
or
cmp
push
xor
add
inc
add
adc
bound
add
cmp
add
orb
add
mov
and
push
add
inc
add
mov
cmp
mov
addr16
push
add
mov
jmp
add
jmp
push
por
inc
jmp
add
jmp
addr16
jmp
add
add
inc
jmp
add
jmp
inc
jmp
add
jmp
inc
jmp
add
mov
add
jmp
mov
or
jg
inc
jmp
add
jmp
mov
or
jnp
inc
jmp
add
jmp
add
jmp
mov
or
jmp
add
jmp
lahf
inc
jmp
sub
xor
add
stos
xor
add
xor
stos
xor
fdivl
aad
sub
cmp
out
xor
add
xor
mov
lock
add
xor
add
xor
add
xor
sub
add
xor
xor
stos
xor
add
xor
stos
xor
add
xor
stos
xor
add
add
xor
add
xor
sub
cmp
insl
dec
jo
scas
call
jo
mov
dec
jo
in
cmp
test
out
add
call
jno
xchg
call
jno
pop
call
jno
sub
add
dec
jno
adc
aaa
add
dec
jno
cwtl
out
add
add
dec
jno
xchg
out
add
call
jno
jne
cmp
std
mov
jae
jl
rorl
and
ljmp
add
xor
add
sarl
add
xor
add
xor
add
sarb
add
xor
inc
add
inc
add
xor
inc
add
add
xor
jp
inc
add
inc
add
xchg
inc
add
xchg
inc
add
sub
add
pop
add
xchg
inc
add
add
push
add
jmp
arpl
scas
add
jmp
bound
cmp
jmp
bound
cld
add
jmp
bound
iret
add
andl
add
jmp
popa
inc
jmp
add
jmp
bound
dec
add
jmp
bound
push
add
jmp
bound
pop
add
jmp
gs
jmp
add
jmp
fs
jmp
add
jmp
bound
je
es
popa
inc
jmp
add
jmp
bound
push
add
jmp
sbb
xor
add
xor
stos
xor
add
xor
add
stos
xor
add
xor
add
xor
add
xor
bound
xor
sub
mov
stc
xor
add
xor
bound
xor
jecxz
leave
bound
xor
add
xor
bound
xor
bound
xor
add
xor
add
xor
arpl
xor
add
xor
add
xor
push
add
push
mov
test
dec
mov
dec
jns
or
dec
je
lea
sbb
xor
add
loope
pop
mov
leave
test
xchg
aaa
and
mov
stos
into
clc
xchg
aam
cmpl
fs
inc
xor
mov
dec
ret
in
mov
int
push
and
xor
dec
pop
and
popa
sti
or
add
xchg
je
push
ret
mov
mov
push
pushf
into
cmpsl
add
cltd
mov
data16
shlb
jle
lock
or
mov
cwtl
stc
ds
lea
sti
add
in
sub
in
sbb
push
aad
stos
pop
scas
and
mov
mov
pop
pushf
inc
cltd
lds
adcl
add
add
test
sbb
icebp
xor
test
into
adc
push
in
hlt
nop
mov
and
leave
lock
lea
in
push
sbbl
mov
repz
dec
idivb
push
orl
jmp
add
jmp
add
jmp
add
jmp
add
jmp
or
add
jmp
add
jmp
add
jmp
or
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
or
jmp
or
add
xor
add
das
call
add
das
call
add
das
call
add
add
jmp
cs
call
xor
add
out
in
jmp
cs
jmp
cs
jmp
call
add
push
jmp
push
call
sub
ljmp
sub
call
call
in
das
add
out
add
jmp
pop
loope
add
ss
repz
fincstp
push
adc
sti
and
shr
es
jecxz
pop
leave
inc
dec
and
dec
push
daa
sarl
sub
pop
aas
xor
cmova
lods
add
test
dec
xchg
sarl
imul
xorb
jle
mov
mov
mov
xchg
arpl
jg
imul
push
xchg
outsl
add
mov
je
sbb
js
push
leave
jl
adc
xchg
mov
lea
mov
stos
cltd
fwait
mov
popf
lahf
mov
mov
cmpsl
stos
fwait
stos
stos
out
scas
scas
loop
mov
ficoms
mov
mov
into
inc
mov
jnp
lret
push
jo
iret
add
add
ja
xlat
cli
imul
negb
fcomip
push
loop
out
daa
out
jmp
sub
nop
add
xor
cwtl
std
sub
cli
adcb
add
or
or
lock
push
in
jmp
or
sbb
cmc
adc
and
out
frstor
rol
in
int3
leave
icebp
xor
add
mov
stc
cmp
aad
cmp
mov
popf
gs
test
insl
dec
enter
mov
mov
pop
sbb
mov
sub
mov
xor
jbe,pn
sarb
bound
fisubl
mov
incb
andl
pop
mov
pop
xchg
jns
push
xchg
add
jne
push
popf
popa
stos
dec
cltd
pop
cmpsb
dec
gs
inc
popa
test
inc
insl
push
fidivrl
dec
cmp
ret
push
mov
sub
cmp
repnz
and
stc
sbb
lods
cmc
sbb
loope
push
mov
call
es
or
push
adc
add
sbb
std
rcll
out
stc
filds
repz
div
add
or
in
ret
push
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
out
xor
movntq
add
call
xor
jmp
call
xor
jmp
call
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
cmp
pop
xchg
xor
add
xor
add
xor
add
xor
add
add
sub
incl
inc
xor
add
add
push
xor
add
add
inc
xor
add
incl
jl
incl
add
add
add
add
adc
add
adc
add
add
mov
xor
call
add
sbb
add
sbb
add
sbb
add
sbb
add
and
lcall
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
xor
sbb
add
add
rcrl
add
jmp
add
jmp
add
jmp
add
jmp
xor
add
sub
add
jmp
add
jmp
add
imul
add
sbb
add
sbb
add
sbb
add
xor
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
imul
out
and
pop
out
aad
jmp
jmp
or
add
add
sti
adc
stc
push
fistl
fstps
fistl
imul
or
add
sti
adc
stc
push
fistl
fstps
add
push
subb
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
sub
add
adc
add
add
add
sub
inc
add
push
sbb
inc
add
push
add
or
inc
add
push
add
inc
add
sbb
and
inc
add
dec
es
add
sbb
jp
ljmp
es
add
lcall
and
add
sbb
dec
push
lcall
inc
add
and
add
sbb
jmp
in
jmp
adc
add
jmp
in
add
adc
jmp
hlt
add
mov
in
jmp
adc
add
inc
adc
add
push
adc
add
and
add
jo
inc
jmp
in
jmp
adc
add
push
adc
add
and
add
lock
add
add
stc
sbb
adc
add
add
fstps
inc
jmp
adc
jmp
sbb
xor
sbb
xor
sbb
xor
sbb
xor
out
xor
sub
or
jmp
xor
xor
out
xor
adc
xor
out
xor
adc
xor
adc
xor
sbb
xor
adc
xor
sbb
xor
adc
xor
sbb
add
xor
adc
xor
sbb
xor
loop
xor
adc
xor
loop
xor
add
add
or
add
clc
jno
les
xor
mov
jno
xlat
or
add
or
add
leave
std
incb
jno
sbb
std
xor
jno
sti
lret
and
jno
cli
add
lret
adc
jno
fisttpll
jno
fmull
jno
mov
jno
mov
jno
and
xor
stc
divb
adc
xor
stc
divb
add
and
add
and
cmp
add
and
push
and
add
and
aas
and
add
and
sub
add
and
inc
add
add
and
xchg
adc
add
pop
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
sub
inc
add
add
fistpl
inc
add
add
push
inc
add
add
fistpl
inc
add
sldt
sub
inc
add
push
loop
jmp
adc
aas
loop
jmp
adc
dec
loop
jmp
adc
add
inc
loop
jmp
adc
push
loop
jmp
adc
inc
loop
jmp
adc
push
loop
jmp
adc
mov
adc
mov
adc
xchg
loopne
jmp
adc
xchg
loopne
jmp
adc
mov
adc
mov
adc
fwait
loopne
jmp
adc
lcall
jmp
inc
loop
add
xor
adc
xor
loop
xor
loop
xor
loop
xor
adc
xor
loop
xor
loop
xor
loope
xor
sub
enter
xor
sub
lret
loope
xor
adc
xor
loope
xor
adc
xor
adc
add
xor
sub
loope
xor
adc
xor
mov
insl
add
xor
sar
add
xor
mov
insl
add
xor
mov
inc
xor
nop
cld
insl
add
cld
insl
add
insl
add
add
insl
add
add
insl
add
aad
add
insl
add
add
aad
add
fsubrl
mov
fsubrl
mov
cld
insl
add
cld
insl
add
insl
add
cld
adc
add
and
in
adc
sti
and
lret
add
inc
add
pop
inc
add
pop
inc
add
and
add
inc
add
and
add
pop
inc
add
and
add
add
pop
inc
add
adc
add
inc
add
adc
add
inc
add
verw
pop
inc
add
sti
push
inc
add
str
pop
inc
add
sti
push
inc
add
add
add
pop
inc
add
test
por
inc
jmp
lock
inc
jmp
lock
push
inc
jmp
out
por
adc
jmp
out
por
adc
add
jmp
out
por
adc
jmp
out
por
out
por
adc
jmp
out
por
adc
jmp
out
por
adc
jmp
out
por
out
jmp
adc
add
inc
adc
add
push
adc
add
and
out
xor
sub
jl
jmp
xor
add
jmp
and
jmp
adc
jmp
rclb
jo
jmp
mov
test
arpl
jmp
mov
in
xor
in
xor
adc
xor
xor
in
xor
in
xor
in
idivb
adc
xor
adc
xor
adc
add
xor
mov
jno
dec
lahf
xor
inc
divl
dec
mov
add
xlat
jno
dec
fnstenv
add
fidivl
dec
stc
xor
fsqrt
jno
xchg
dec
idiv
sar
add
fdivs
xchg
dec
idiv
mov
or
add
sbb
add
clc
jno
inc
or
add
or
add
add
leave
xor
nop
clc
jno
cltd
leave
xor
inc
clc
jno
cwtl
leave
xor
xor
jno
add
adc
add
and
and
add
sti
and
adc
add
and
daa
adc
add
adc
add
and
and
and
mov
add
inc
add
add
inc
and
push
and
cltd
sldt
add
jnp
inc
add
and
lahf
sldt
cmp
inc
add
inc
add
pop
inc
add
adc
add
pop
inc
add
dec
loope
jmp
adc
inc
loope
jmp
adc
inc
loope
jmp
adc
inc
repnz
jo
inc
jmp
repnz
inc
adc
inc
repnz
push
adc
inc
loope
jmp
adc
add
shl
dec
icebp
adc
shl
cmp
adc
mov
adc
into
loope
sbb
adc
mov
adc
int3
loope
cld
rclb
jmp
loope
in
rclb
inc
jmp
loope
fsubl
cmp
jmp
stc
or
jmp
xor
sub
sbb
jmp
and
sub
sbb
jmp
adc
sub
cmp
add
add
xor
sub
cmp
jmp
xor
sub
pop
loop
xor
adc
xor
adc
xor
adc
xor
loope
xor
loope
xor
loope
xor
adc
xor
loope
xor
xchg
lret
nop
sti
insl
add
xor
inc
add
fldt
dec
lret
xor
insl
add
xor
and
insl
add
xor
adc
insl
add
fldt
or
xor
xor
insl
add
mov
add
sti
insl
add
dec
xor
adc
insl
add
inc
xor
sarb
rolb
mov
outsl
add
inc
xor
mov
add
outsl
add
cld
outsb
add
add
outsb
add
push
or
add
or
add
inc
add
cld
inc
testl
sti
stc
inc
add
or
add
stc
inc
add
or
add
stc
inc
add
or
add
cli
inc
add
or
add
or
add
cli
inc
add
add
sti
stc
inc
add
add
sub
inc
add
or
add
add
inc
add
or
add
inc
add
add
jnp
inc
add
add
sub
inc
add
pushf
in
jmp
cmc
inc
jmp
in
jmp
cmc
inc
jmp
hlt
call
or
inc
jmp
add
jmp
add
jmp
add
jmp
out
lods
fiaddl
add
or
lcall
out
mov
add
jmp
out
jl
add
jmp
out
add
insb
fiaddl
add
or
lcall
add
or
decl
add
call
add
ljmp
add
fildl
add
fadds
add
fildl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pop
out
xor
pop
out
in
pop
add
out
xor
pop
out
in
pop
out
xor
pop
out
in
pop
out
xor
pop
out
in
pop
out
xor
pop
out
in
pop
out
xor
pop
out
in
pop
out
xor
pop
out
in
pop
out
xor
pop
out
jmp
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
mov
add
mov
add
xchg
jae
jmp
xor
adc
xor
inc
ja
add
mov
xor
add
cmp
jae
out
pop
out
adc
add
aas
out
inc
cmp
loope
xor
mov
jae
add
sar
decl
inc
add
add
sar
jnp
inc
add
iret
ljmp
loop
add
sar
cmp
inc
add
or
decl
in
jnp
inc
add
out
add
loope
add
iret
dec
loope
add
loope
add
loop
add
mov
or
decl
loop
add
incl
add
loope
add
ljmp
loop
add
fnstsw
add
mov
loopne
jmp
icebp
inc
jmp
loope
jmp
icebp
inc
jmp
loop
jmp
icebp
inc
jmp
loopne
in
lahf
icebp
inc
jmp
xlat
fcoml
hlt
dec
shl
jmp
cmc
mov
cmp
add
and
inc
jmp
loop
jmp
repnz
jmp
loop
jmp
repnz
add
jmp
loopne
jmp
repnz
jmp
loopne
insb
and
inc
jmp
xlat
lcall
inc
jmp
repz
inc
jmp
push
repz
mov
loop
xor
loop
xor
loop
xor
loope
xor
icebp
test
jmp
icebp
sub
aam
fsubr
lahf
icebp
sub
repnz
jmp
clc
sub
push
repz
mov
xor
loop
xor
icebp
sub
clc
loope
xor
icebp
sub
sti
loope
xor
icebp
sub
jmp
inc
icebp
sub
fucom
insb
jmp
icebp
test
jmp
icebp
test
jmp
sbb
cmp
inc
cmp
adc
add
or
add
or
add
or
add
add
sti
insl
add
or
mov
outsl
add
mov
mov
fldl2e
popf
mov
ljmp
mov
outsl
add
fwait
outsl
add
jnp
add
jnp
add
pop
outsl
add
decl
loope
add
fneni(8087
inc
add
loop
add
add
in
lcall
inc
add
jecxz
decl
inc
add
jecxz
lcall
inc
add
loop
add
jecxz
lcall
in
decl
in
lcall
inc
add
ljmp
loop
add
fndisi(8087
inc
add
loope
add
fndisi(8087
inc
add
ljmp
loop
add
stos
repz
add
inc
jmp
repz
inc
jmp
repz
inc
jmp
cmc
pushl
cmc
inc
jmp
cmc
jmp
cmc
inc
jmp
cmc
call
cmc
inc
jmp
cmc
incl
cmc
inc
jmp
cmc
push
out
cmc
inc
jmp
cmc
jmp
mov
cmc
call
xchg
cmc
inc
jmp
cmc
inc
shl
jmp
repz
repz
jmp
repz
in
jmp
testb
mov
jmp
inc
imulb
xor
out
test
call
hlt
inc
call
dec
repz
aas
repnz
call
push
ret
mov
out
call
adc
jmp
shl
xor
cmc
sub
adc
add
aam
lahf
cmc
sub
pop
repz
out
cmc
sub
repnz
aas
cmc
sub
fxam
hlt
xor
out
sub
mov
out
sub
add
lea
lcall
add
dec
jb
jl
aaa
add
cmp
aaa
add
dec
jb
pop
dec
aaa
add
cmp
aaa
add
or
aaa
add
add
std
jno
xor
jb
and
jno
adc
int
add
jae
test
jae
out
ss
mov
xor
xor
lock
lret
faddl
adc
fcmovnu
inc
add
std
incl
sub
inc
add
lret
lcall
fldl
lret
decl
fldl
add
aam
fcmovnu
inc
add
sar
ljmp
loop
add
loop
add
loop
add
loop
add
ljmp
loop
add
lcall
sar
decl
sar
lcall
inc
add
loop
add
addr16
lcall
cmc
decl
cmc
incl
add
inc
jmp
cmc
ljmp
inc
jmp
cmc
lcall
inc
jmp
cmc
decl
inc
jmp
cmc
cmp
repz
jmp
hlt
ljmp
icebp
inc
jmp
hlt
lcall
icebp
inc
jmp
hlt
decl
icebp
inc
jmp
scas
in
shl
jmp
repz
in
out
icebp
inc
jmp
hlt
fsubl
hlt
dec
xchg
icebp
inc
jmp
hlt
mov
add
xor
repnz
mov
pushf
inc
xor
sub
mov
mov
sub
mov
jl
adc
sub
dec
shrb
repnz
in
repnz
in
repnz
in
repnz
in
icebp
test
in
icebp
test
in
icebp
test
jecxz
icebp
test
add
jecxz
icebp
sub
inc
repz
scas
icebp
sub
push
repz
jecxz
icebp
sub
add
jecxz
nop
mov
jecxz
inc
lcall
xor
jecxz
and
add
jecxz
adc
add
jecxz
inc
pop
outsb
add
jecxz
xor
add
jecxz
and
outsb
add
dec
jecxz
adc
outsb
add
add
sbb
xchg
sub
outsb
add
sti
insl
add
jecxz
nop
sti
insl
add
jecxz
rcr
add
loop
mov
outsl
add
daa
repz
decl
repnz
lcall
inc
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
fneni(8087
inc
add
fdivrp
ljmp
add
sar
lcall
loope
add
iret
decl
loope
add
add
fneni(8087
inc
add
incl
sub
inc
add
lcall
inc
add
decl
inc
add
decb
pop
fiaddl
cmp
decb
stos
flds
jmp
hlt
jmp
mov
in
hlt
nop
testb
hlt
jmp
shl
jmp
cmc
push
jo
inc
jmp
out
add
jmp
testl
adc
inc
jmp
out
jmp
testl
jo
inc
jmp
out
push
and
inc
jmp
out
inc
adc
inc
jmp
cmc
pushl
stc
inc
jmp
repz
cmc
inc
jmp
in
jmp
cmc
inc
jmp
in
jmp
cmc
inc
jmp
in
jmp
cmc
inc
jmp
ret
xor
imulb
xor
testb
sub
movsb
in
xor
in
xor
in
xor
sub
dec
in
jo
imulb
xor
hlt
jo
imulb
xor
in
adc
sub
or
hlt
xor
clc
test
loopne
imulb
loopne
imulb
loopne
imulb
loopne
cmc
test
xor
xlat
add
hlt
xor
ret
xor
push
nop
divb
xchg
int
add
aad
add
jb
xchg
mov
jb
xchg
jb
push
cwtl
inc
xchg
jb
pop
cwtl
sbb
js
flds
sbb
pop
sub
pop
xor
add
cmp
and
add
jb
call
jb
fsubrp
xor
xchg
jb
rcrl
mov
jb
add
loop
decl
inc
add
loop
lcall
inc
add
in
add
lcall
jecxz
decl
aam
lcall
inc
add
fadds
xorb
add
xor
add
repnz
incl
add
add
xorl
add
add
incl
add
xor
call
fcompl
cmp
sbb
movsb
in
int3
mov
and
mov
xlat
test
mov
loopne
mov
pusha
add
mov
vstmxcsr
pop
addr16
ss
into
pop
or
int
add
int
cld
ror
dec
hlt
dec
iret
mov
add
push
or
push
mov
int
pop
js
add
outsb
cmp
mov
pushl
inc
addr16
subb
push
adc
jo
sub
hlt
cmc
movsl
leave
cwtl
out
mov
fsubl
lahf
xor
addr16
lea
repnz
push
xchg
cmpsl
test
sub
mov
lcall
pop
xor
jmp
sbb
mov
lea
std
mov
or
push
pop
inc
adc
dec
lods
into
arpl
and
add
or
add
leave
mov
xlat
test
mov
test
lds
mov
add
add
adc
out
sti
adcb
or
repz
jl
or
fimull
daa
adc
add
popa
lods
mov
lret
out
and
fbld
pop
push
pop
cltd
push
fdivrs
mov
popa
dec
jne
jp
add
mov
sbb
aaa
in
or
and
negb
mov
cmp
inc
repnz
or
adc
sbb
gs
js
in
xchg
add
out
insl
insl
int
and
sbb
insl
fs
shrb
call
lds
addb
test
loopne
jge
fildll
sbb
sbb
mov
rolb
mov
xchg
call
cltd
xor
sub
shlb
add
sbb
ds
fnstsw
inc
inc
mov
lea
and
xor
cmp
out
cmp
sub
jmp
inc
lret
sti
add
leave
or
add
fidivs
sub
mov
rclb
or
mov
pop
movsb
jmp
mov
stos
int3
stos
and
and
push
mov
push
das
add
enter
pop
mov
imul
sbb
mov
int3
dec
shll
int3
imul
int
cmp
adc
orl
bound
lahf
js
insl
push
in
and
cmp
or
aam
pop
fst
or
pop
sub
cmp
stos
pop
std
jbe
xchg
pop
lret
jg
mov
add
pop
xor
aam
and
test
mov
mov
and
int
loopnew
fnstsw
pushw
ds
jge
jmp
hlt
and
aad
and
aad
and
pop
and
leave
or
icebp
adc
push
lret
jge
aaa
negl
jl
and
testb
cmc
add
sbb
adc
lds
je
xor
mov
mov
sahf
sbb
inc
sarb
int
mov
std
mov
add
mov
sahf
jecxz
lea
imull
adcl
jno
loope
push
fmull
int
mov
add
add
add
add
add
xor
ljmp
push
jmp
xor
ljmp
ds
push
imul
imul
fsubp
push
xor
scas
out
cmpsl
loop
mov
dec
jmp
sbb
lcall
std
jle
ja
sbb
out
xor
outsb
out
ss
add
mov
add
push
jmp
push
adc
icebp
fnstsw
test
push
jmp
jno
push
stc
rcr
test
shll
adc
sbb
rcll
insb
mov
ds
ja
mov
adc
xor
mov
sbb
push
aam
iret
arpl
iret
cmpl
cmpsl
cld
aam
push
add
add
jge
outsb
lea
hlt
mov
lret
repz
jmp
xor
or
lods
xor
xor
sbb
repz
ret
pop
rorb
in
test
cwtl
sbb
sub
xor
int
pop
sbb
gs
cmp
pop
add
push
add
add
sub
lahf
sbb
lret
pop
lret
gs
pusha
sbb
push
sbb
pop
pop
fldt
into
es
cmp
jno
mov
push
sub
rclb
add
mov
js
lds
xchg
sub
pushf
xchg
mov
test
cmp
add
and
cmp
xor
cmp
sub
cmp
and
adc
push
mov
xchg
adc
jbe
mov
sbb
sub
adc
sub
pop
and
cmp
xchg
cmp
cmc
repnz
insb
adc
push
gs
add
cmpsb
jns
insl
adc
jmp
cmp
dec
ljmp
add
scas
ljmp
mov
ret
mov
lcall
in
hlt
mov
out
rorl
push
sbb
mov
leave
test
aaa
xorb
lods
mov
pop
xchg
adc
push
mov
arpl
inc
cmpsl
aad
sbb
subb
add
add
je
inc
add
add
sbb
add
add
add
jmp
jge
jmp
add
jmp
jle
jmp
add
jmp
jl
jmp
add
jmp
jl
jmp
add
jmp
jge
jmp
add
jmp
addl
add
jmp
addl
add
jmp
addl
add
jmp
addl
add
jmp
jge
jmp
add
jmp
jnp
jmp
add
jmp
mov
mov
jmp
mov
push
add
jmp
mov
push
add
jmp
addl
pop
add
xor
add
xor
add
xor
test
xor
add
xor
jmp
xchg
xor
xchg
xor
xchg
xor
jmp
arpl
jmp
and
add
add
xor
fdivs
mov
add
xor
jmp
cmp
push
dec
jge
jb,pt
pusha
dec
push
dec
inc
push
hlt
divb
add
or
add
call
jno
lret
add
loope
add
shll
test
jno
or
jb
ds
inc
mov
add
lods
jno
outsl
add
and
andl
add
add
or
jno
fisubrs
jno
sbb
jno
imul
dec
add
arpl
push
out
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jae
in
xor
add
xor
add
xor
add
add
xor
add
xor
mov
xor
add
imul
mov
xor
jne
outsb
add
xor
pusha
xor
outsl
xor
inc
xor
add
inc
add
inc
add
imul
xchg
xor
add
xor
add
jo
jae
gs
jmp
add
jmp
add
add
jmp
add
jmp
dec
pop
ss
add
jmp
add
jmp
add
add
jmp
add
sub
jmp
add
jmp
add
jmp
add
jmp
add
xor
jmp
push
inc
jmp
incl
cmp
inc
jmp
incl
xchg
jecxz
inc
jmp
pusha
inc
jmp
pop
inc
jmp
pusha
inc
jmp
pusha
inc
jmp
pusha
inc
add
jmp
pusha
inc
jmp
cmp
adc
xor
push
sbb
cmp
add
xor
inc
sub
jmp
clc
or
push
adc
xor
fdiv
xor
stos
sub
and
fdivl
xchg
stos
sub
shrb
sub
ret
xor
sbb
stos
xor
add
xor
mov
add
stos
xor
add
xor
add
xor
add
xor
add
xor
stos
xor
xor
and
jo
xor
add
out
inc
add
pop
add
dec
add
inc
add
out
add
call
xor
add
out
add
call
jp
or
pop
add
xor
cltd
call
add
xor
or
inc
add
call
jno
lcall
add
push
jno
push
dec
jno
jp
jno
mov
or
sub
jno
add
push
imul
pop
insb
add
pop
imul
dec
jb
aas
inc
add
or
inc
jae
sub
add
pop
imul
add
aas
gs
into
push
inc
imul
outsl
insl
fisubrl
push
outsl
push
add
pop
imul
inc
gs
cmpsl
dec
addr16
das
add
lea
jo
push
je
daa
dec
addr16
pop
arpl
push
jb
jno
jp
jmp
add
jmp
imul
xchg
xchg
mov
jb
flds
add
adc
add
jnp
arpl
adc
inc
jge
outsl
cmp
gs
jne
add
inc
out
fdivrp
stc
sub
dec
ficomps
pop
out
scas
idivb
jmp
fistpll
jmp
repz
jmp
add
jmp
testb
cmc
inc
jmp
testl
dec
lock
jmp
lock
jmp
add
aas
jmp
cmovb
xor
fcomi
xor
in
xor
add
test
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
mov
sub
inc
fsubr
xor
adc
xor
xor
xor
adc
xor
xor
sub
lods
inc
daa
je
inc
jmp
scas
inc
mov
add
xor
jmp
fwait
add
movsl
add
mov
add
call
pusha
pop
jmp
mov
xor
and
je
sbb
and
jmp
sbb
ja
jmp
adc
pop
inc
and
xor
sbb
add
jb
sub
xor
sbb
jne
sub
add
sbb
add
pop
dec
add
add
cmpl
push
xor
add
push
inc
xchg
add
push
inc
push
pop
inc
dec
add
add
push
dec
push
add
popa
popa
inc
push
rcrl
sub
add
jnp
push
adc
push
sbb
add
add
jae
inc
or
push
inc
pop
sub
outsb
outsb
testl
add
packsswb
pop
arpl
outsl
outsb
xorb
add
hlt
push
outsb
int3
test
jmp
je
aad
pusha
gs
sahf
pop
imul
mov
push
jge
pop
add
jmp
pop
gs
popa
insb
andb
jmp
push
add
pop
sarb
jmp
iret
aas
jmp
fdivrl
jmp
sarb
jmp
iret
aas
jmp
fnstcw
jmp
inc
inc
jmp
inc
inc
jmp
loopne
jmp
inc
inc
jmp
inc
inc
jmp
inc
inc
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
pop
ret
jp
xor
add
dec
imul
xchg
mov
jne
cmp
jo
dec
lods
add
xor
add
xor
jl
cmp
add
xor
add
xor
dec
xor
add
xor
add
xor
sbb
adc
add
xor
add
xor
add
xor
xor
add
out
add
add
call
add
adc
out
add
call
xor
xchg
cwtl
jb
jmp
int3
or
pushf
lcall
nop
xchg
dec
and
in
or
aas
test
stos
outsb
inc
xor
jae
cmp
pop
push
xor
or
pop
adc
gs
nopl
or
add
gs
inc
pop
imul
or
xor
add
outsb
inc
inc
iret
add
cmp
dec
xchg
outsb
dec
push
mov
jbe
pop
mov
bound
fs
push
dec
insl
outsb
push
inc
jno
adcl
xor
xor
dec
add
aaa
sub
add
push
xor
scas
sub
add
add
sub
imul
ss
gs
das
add
mov
add
sub
add
jmp
add
jmp
add
jmp
add
adc
jmp
jno
jmp
js
jmp
jp
jmp
int
jmp
int
jmp
fdivrl
jmp
jle
jmp
jle
jmp
jg
jmp
incl
jmp
cmp
add
add
mov
mov
mov
add
mov
jno
jmp
pop
add
jne
jbe
pop
xor
jmp
xor
jmp
xor
jmp
xor
jmp
das
add
outsl
cs
add
jmp
sbb
pop
sbb
xor
bound
inc
rolb
jmp
repz
adc
or
ss
loope
jmp
jmp
cs
jmp
add
xor
add
xor
add
xor
xor
call
jle
stos
ss
pushf
ja
or
pop
lods
push
xchg
call
repz
xlat
in
in
add
mul
mov
mov
lock
add
add
cmp
pop
or
add
das
lret
and
call
add
dec
jg
daa
lcall
cmc
inc
jbe
push
inc
add
cmp
les
xlat
cmp
fcmovbe
es
add
in
cs
incl
xor
mov
push
outsl
jmp
pop
mov
mov
push
jp
outsl
cmp
add
and
add
adc
out
add
out
fs
out
and
xchg
adcl
out
mov
repnz
sbb
xchg
mov
push
sbb
and
jb
iret
cli
idivl
xor
add
xor
jle
jne
add
mov
shl
stc
adc
add
sub
add
pop
add
or
and
pop
add
add
sub
add
add
xor
jae
jmp
jb
xor
jnp
call
inc
arpl
pop
push
jmp
adc
push
or
pop
stos
lahf
push
pusha
mov
pop
gs
test
add
jmp
push
inc
and
popf
fwait
cmpsl
nop
arpl
mov
cmpsl
add
jmp
inc
dec
mov
sahf
cmp
add
add
leave
add
jmp
incl
jmp
cmp
aad
add
jmp
sbb
rcr
adc
jmp
cmc
cli
cld
or
push
pop
cmp
pop
pop
push
push
jmp
movsl
addb
jg
insl
mov
lcall
jmp
aas
push
inc
addr16
jns
inc
adc
loopne
mov
cmpsb
int
xor
and
add
test
adc
xor
add
sbb
add
sub
push
add
xor
enter
rolb
mov
into
adc
sub
push
les
aam
jle
mov
mov
xchg
imul
lahf
pop
inc
xchg
push
pusha
pop
xor
push
dec
inc
cmp
inc
pop
jbe
sbb
ja
jmp
std
cld
cmp
add
add
sub
pushl
lret
adc
call
outsb
dec
pop
cs
pop
or
jae
sbb
jae
xor
dec
cmp
fstps
lock
pop
and
sub
loop
sbb
cmc
fisubrl
sbb
push
push
or
push
add
sbb
icebp
call
in
mov
add
jp
leave
out
ret
xor
add
lret
add
lods
lret
cltd
sar
cltd
mov
rolb
bound
outsb
push
inc
sub
pop
fisubl
pop
in
addr16
cmp
adcb
xchg
mov
adc
lods
call
into
sti
clc
adc
out
mov
repnz
jmp
repnz
cld
ret
sar
jmp
mov
out
imul
jmp
in
or
out
and
add
jmp
ror
les
rcr
mov
aad
call
leave
add
jmp
mov
lahf
jnp
popf
mov
dec
push
xchg
call
repz
lods
jl
fcmovnbe
jo
out
jnp
jmp
into
xor
fiaddl
ret
lds
add
sbb
ror
adc
pushl
pop
inc
mov
pusha
insb
scas
xor
outsl
xchg
cmp
negl
aam
rclb
lock
aaa
lcall
mov
mov
xchg
lods
rcrb
mov
leave
mov
call
push
imulb
jmp
push
xor
inc
add
and
push
and
mov
in
scas
outsb
js
test
jnp
popa
stos
pop
stos
jle
xchg
mov
nop
mov
xchg
mov
je
jge
xchg
stos
test
jo
mov
imul
sbb
push
mov
or
cmc
xor
movsl
es
sub
outsb
pop
sub
call
add
or
or
gs
and
dec
aaa
fbld
sub
call
or
aam
dec
sub
adc
cmp
mov
push
add
mov
pop
jmp
rcrl
add
mov
xor
add
mov
add
mov
xchg
adc
sub
or
add
add
push
cmp
add
add
and
xor
add
and
or
outsl
inc
adc
or
push
clc
cli
sbb
pop
pop
jg
xor
add
ret
cmp
int3
dec
out
leave
inc
out
into
push
jecxz
popl
fcmovnu
xchg
jbe
ret
out
in
lret
clc
mov
jmp
hlt
testl
fucom
add
aas
outsb
vmaxsd
call
add
jmp
jno
mov
or
repnz
arpl
je
push
jnp
imul
aaa
pop
xor
add
add
loopne
adc
dec
jmp
jae
cmp
ds
mov
add
mov
add
or
inc
pop
out
cmc
ljmp
adc
add
daa
add
jmp
lahf
mov
xchg
lret
and
and
xor
pop
mov
hlt
daa
mov
fsubrs
mov
int3
pop
lods
xor
dec
lods
popa
mov
imul
sar
and
outsl
dec
sub
pop
xor
dec
xor
imul
inc
dec
push
insb
inc
push
inc
rorb
jae
add
cmp
dec
and
mulb
cli
add
xor
insl
add
pop
int3
add
sbb
xor
push
mov
cmc
mov
add
mov
repz
pop
dec
jle
and
xor
shl
cmp
call
shll
data16
inc
push
xchg
sahf
arpl
push
dec
cmp
jle
nop
and
mov
add
std
add
sbb
repz
sti
cmp
call
jae
sub
fs
cli
mov
sub
mov
xor
jmp
fwait
sbb
sub
mov
adc
sub
push
and
repz
and
es
push
push
adc
adc
inc
jnp
jle
add
jmp
or
adc
inc
pop
lock
xor
jnp
jns
inc
jg
push
jbe
dec
push
and
popa
bound
inc
and
loop
arpl
fs
add
decl
add
push
sbb
inc
pop
jmp
cli
push
sub
cmc
stos
test
cld
movsb
test
cmp
icebp
xchg
popf
mov
add
add
cltd
lods
mov
test
mov
xor
jg
push
mov
outsl
pop
jnp
push
dec
or
mov
call
stos
mov
mov
lods
subb
out
ret
repz
jmp
lahf
mov
cwtl
mov
jbe
iret
ret
mov
rol
xor
mov
add
mov
out
push
push
ret
xor
div
popa
mov
enter
fisubs
or
adc
hlt
or
cld
stc
add
hlt
dec
push
and
add
aam
in
or
or
push
or
stos
add
out
out
add
and
adc
xor
mov
stos
fcmovb
addr16
int3
mov
test
add
arpl
mov
mov
fwait
shlb
dec
jl
jne
call
lcall
loopne
push
notl
int3
stos
cmpl
xor
fnstcw
call
add
div
sub
pop
or
hlt
icebp
cli
sub
fisubrs
adc
loop
sub
sti
add
or
in
lock
mov
call
pop
dec
xor
inc
pop
xor
xor
dec
hlt
pop
inc
daa
imulb
add
pop
push
pop
fprem1
inc
push
sar
outsl
in
clc
inc
push
shll
push
out
cld
pop
inc
fadds
fs
insb
jnp
cld
pop
jbe
pop
outsl
jb
push
dec
jne
mov
jne
add
jnp
loopne
sub
add
add
imul
jnp
jns
insb
addr16
inc
jb
dec
inc
inc
push
push
aas
jl
pop
pop
popa
xor
inc
popa
jl
jo
pop
push
push
pop
inc
jae
inc
pop
ret
add
je
jmp
popa
jb
lcall
lds
sbb
shrb
push
pop
jge
and
xchg
cmp
add
hlt
xchg
or
repnz
xor
nop
sti
or
popf
testb
repnz
sahf
adc
cmc
inc
pop
add
jnp
test
je
jp
add
jmp
dec
dec
cmpsl
cltd
add
jmp
int3
cli
cld
inc
stos
mov
cmc
pop
sub
jo
jmp
adc
sbb
push
data16
sti
push
inc
adc
push
clc
insb
add
or
mov
and
jmp
xchg
mov
jmp
outsb
fadds
xor
xor
outsb
lds
pop
pop
pop
sub
xor
and
cli
insl
or
shlb
fldl
cli
xor
or
inc
ljmp
xor
jmp
jo
dec
flds
mov
out
xchg
cltd
nop
call
ja
mov
call
xchg
cmc
fcmovne
movsl
loop
lds
scas
scas
mov
sahf
movsb
lahf
in
mov
icebp
mov
cmp
incb
out
cmp
sub
push
sub
icebp
adc
add
pop
std
dec
jmp
add
ret
add
cltd
sbb
push
fldcw
or
shlb
add
cli
dec
sbb
xor
ficomps
xor
rolb
add
or
incb
fdivp
inc
bswap
fsubs
mov
inc
push
fldenv
cmp
xchg
in
repnz
lods
je
out
insl
call
out
std
ret
lcall
xchg
inc
aaa
jge
pop
and
adcl
and
add
stos
and
sarb
cltd
add
into
fldl
add
jmp
int
ja
aad
outsl
fcmovu
add
lret
adc
add
out
sbb
push
stos
or
adc
add
sti
cmpsb
das
cmp
cltd
push
or
adc
push
jns
mov
imul
pusha
lcall
adc
outsl
push
or
xor
push
leavew
imul
jmp
cmpsb
mov
add
xor
orb
pop
and
cltd
add
jmp
jg
pop
cld
test
lret
pop
lcall
push
add
out
dec
shr
pop
sub
cld
pop
hlt
add
jmp
push
test
lcall
sbb
sub
dec
call
add
xor
and
adc
roll
testl
add
push
sti
lock
stos
arpl
xchg
mov
jae
jle
mov
ret
jae
push
lcall
push
mov
pop
stos
xchg
mov
jg
cmp
jns
popa
stos
xor
cmp
in
xchg
adc
orb
lds
sbb
jb
mov
add
add
mov
xor
cltd
out
pop
and
aad
sub
jmp
dec
std
inc
push
inc
adc
sub
call
sbb
push
mov
call
mov
xor
ret
jmp
jo
cmpsb
jmp
add
and
call
fstpt
stc
and
pusha
roll
add
incb
lret
jmp
ffree
je
fisttps
add
pop
or
add
adc
rcl
and
ds
fucomip
push
xchg
jl
into
insl
je
inc
xchg
icebp
icebp
mov
lock
pop
pop
enter
into
pop
push
push
loopne
push
add
fsubp
push
xchg
call
addr16
pop
push
sub
xor
sbb
bound
add
sbb
or
jle
sub
insb
jno
fstpl
mov
js
xchg
add
jmp
in
loopne
dec
fdiv
add
add
jmp
cmp
pushf
mov
inc
inc
out
inc
cmp
cmpsb
mov
push
cmp
pop
dec
inc
daa
push
add
and
inc
adc
jp
adcb
add
add
push
inc
pop
cmc
inc
dec
jae
pop
inc
add
outsl
jae
cmp
gs
sarl
lret
rolb
mov
sbb
ret
xor
mov
cmp
mov
test
test
enter
fisttpll
popf
pop
fisubrl
cmp
pop
add
xor
add
idiv
in
pop
repnz
lock
fdivr
out
in
hlt
add
call
xor
vhsubps
mov
lds
jp
dec
scas
pop
jne
aad
ja
mov
jnp
push
fiadds
mov
call
filds
fimull
js
inc
xor
or
jne
mov
xor
outsb
addr16
cltd
pop
xchg
les
jmp
add
call
hlt
pop
cltd
movsl
repnz
mov
in
push
xchg
or
dec
mov
add
push
jnp
sti
pop
pushf
mull
icebp
jecxz
or
cmpsb
inc
or
jmp
add
popf
dec
add
call
dec
aaa
aam
bound
ror
xor
sub
add
push
adc
push
add
addr16
pop
push
xor
add
out
push
dec
add
out
pop
push
push
jo
push
push
pop
cmovb
xor
add
pop
dec
sbb
push
pop
pushw
pop
pop
push
pop
inc
fs
inc
dec
daa
xor
add
inc
and
dec
das
and
cmp
xor
add
and
out
sub
and
inc
sub
mov
cmp
push
xor
movsb
cmp
jae
dec
cmp
test
add
mov
sub
jmp
push
insb
imul
mov
mov
data16
push
cwtl
add
jmp
inc
push
test
lret
inc
inc
lahf
iret
aas
push
stos
mov
ss
test
add
jmp
hlt
adc
mov
sub
dec
out
cwtl
push
or
in
add
fisttpl
adc
add
add
inc
sti
maskmovq
negl
xor
xchg
incl
add
mov
xlat
xor
or
fistps
push
sbb
xor
in
fldl
shll
in
int
xchg
push
jmp
int
inc
xor
and
add
adc
pop
subb
sub
adc
adc
lds
scas
add
mov
mov
xchg
pop
mov
jmp
ja
inc
adc
adc
in
cwtl
ret
sahf
mov
loop
mov
int3
flds
jmp
pop
loopne
push
in
cli
xchg
xchg
fisttpll
andb
pop
sbb
subl
pop
sub
lds
shlb
add
add
das
and
movsb
test
push
xchg
mov
call
dec
xor
inc
push
sub
adc
outsl
mov
sub
stc
jp
int
ds
sub
add
notl
or
dec
xor
in
dec
aaa
das
jbe
sub
adc
sub
aaa
cmp
ds
xor
add
add
pop
xor
add
pop
jbe
inc
add
shr
dec
push
or
aas
inc
pop
inc
pop
push
or
inc
push
inc
add
lds
xchg
cltd
int
pop
sub
add
test
repz
test
mov
stos
mov
mov
je
jmp
fstp
xorl
add
push
jb
in
lret
lods
lret
mov
shlb
mov
das
aam
mov
sbb
sbb
fidivl
sbb
in
and
mov
or
xchg
add
jmp
add
jmp
aaa
dec
scas
mov
push
inc
das
outsb
or
inc
dec
mov
arpl
cmp
add
in
pop
adc
inc
inc
into
sbb
push
inc
xor
inc
and
repz
inc
sbb
and
aaa
in
sti
arpl
push
or
shufps
jecxz
xlat
daa
or
or
inc
mov
push
and
out
and
lods
mov
jmp
shrb
and
push
or
popa
jmp
and
pop
outsl
and
add
pop
loope
jae
test
sbb
insb
roll
sub
aad
cmp
xchg
jnp
jmp
jp
stc
loopne
loopne
ret
add
iret
mov
imul
enter
mov
stos
bound
mov
lods
jae
pop
xchg
imul
pop
mov
mov
xor
adc
add
cli
incl
arpl
jg
call
pop
and
int
pusha
or
mov
mov
arpl
xor
loopne
call
add
popf
xor
add
mov
and
notl
and
das
and
xchg
xor
add
in
xor
mov
add
add
ffree
sahf
imul
fiaddl
xchg
std
enter
out
mov
fcomip
mov
xor
add
out
bound
in
ja
cmp
jge
add
mov
test
shlb
add
out
ret
fwait
out
outsb
pushf
loop
aas
rclb
test
jno
jp
movsl
mov
sbb
pusha
jne
add
int3
lret
icebp
mov
xchg
leave
mov
test
ljmp
add
roll
daa
pop
cmc
insb
add
call
jb
sbb
mov
add
test
sbb
fisubs
cmp
ja
add
xchg
push
testb
adc
xchg
add
outsl
pop
outsb
cmpb
lcall
inc
cmp
movsl
add
add
xor
sub
out
repz
not
sub
add
xor
sarl
js
scas
mov
jecxz
push
insb
roll
xor
add
cs
jmp
mul
cmc
fbstp
push
cmp
or
inc
mov
and
fildl
das
xor
cmp
add
dec
fwait
out
cmp
xor
adc
inc
les
dec
enter
out
lcall
add
add
jmp
stos
xor
inc
add
call
cmp
lock
add
int3
inc
das
out
sub
lock
loop
fwait
incb
push
dec
das
and
call
mov
fucomi
call
incl
rcrl
cmp
xor
stc
pop
sub
leave
or
les
add
xor
adc
sbb
fildl
push
fcmovnb
mov
lcall
out
push
add
out
add
icebp
pusha
add
call
das
add
add
add
shrb
add
mov
inc
add
inc
add
inc
add
cmpsl
inc
add
movb
int
add
loope
add
inc
add
int
add
int3
inc
add
add
movb
adc
cld
bound
or
icebp
sti
pusha
fs
mulb
repz
js
inc
add
sbb
fs
xor
add
add
push
cs
add
add
fiaddl
inc
jmp
add
roll
dec
jmp
add
aad
outsl
jmp
add
test
add
mov
outsb
jmp
add
add
sbb
jae
add
mov
add
cmc
add
hlt
add
sti
add
hlt
add
push
add
jmp
add
inc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
xor
add
les
mov
les
mov
movb
xor
add
add
xor
add
xor
dec
sbb
cmp
lds
sti
es
rcl
add
xor
add
xor
add
xor
add
xor
add
xor
sub
or
sub
or
sub
or
sub
sbb
stos
xor
leave
stos
xor
ss
xor
popa
mov
jmp
adc
mov
push
pop
add
test
push
fs
mov
ja
call
sbb
rclb
aam
sbb
into
inc
repz
inc
pop
fs
out
call
out
repz
jmp
mov
add
cli
pop
push
jnp
adc
jp
xor
or
dec
add
push
add
call
dec
add
out
add
out
dec
add
add
out
add
or
cs
xchg
or
insl
add
jno
hlt
jmp
in
imul
divb
and
js
and
imul
out
insb
mov
imul
testb
imull
mov
xchg
addr16
ja
push
out
and
stc
jae
mov
incl
add
popa
add
sub
bound
dec
outsl
data16
or
scas
clc
pop
das
or
and
inc
xor
add
add
jmp
add
imul
outsl
jmp
add
jmp
add
push
add
imul
add
test
inc
jmp
jecxz
jmp
and
enter
xlat
push
imul
add
dec
imul
jae
stos
and
jmp
mov
jmp
testb
stos
aas
jmp
or
or
inc
jmp
stos
aas
jmp
stos
aas
jmp
lods
aas
jmp
dec
je
xor
das
aam
dec
cs
push
push
addr16
add
add
and
push
cld
sbb
adc
inc
or
inc
jmp
sahf
add
les
test
inc
test
or
stos
xor
leave
sub
or
sub
adc
xor
sub
popa
cmp
xor
enter
enter
enter
xor
xor
enter
sub
movsl
sub
lock
sub
sbb
add
xor
xchg
in
lods
cld
movsl
adcb
cli
xor
add
cli
mov
mov
adcl
outsb
add
pushf
in
lods
cld
movsl
adcb
mov
cli
mov
dec
push
add
inc
push
add
mov
jmp
fldenv
push
jae
push
dec
test
mov
mov
xchg
mov
inc
sbb
out
rolb
mov
cmp
add
les
adcl
rorb
sub
or
push
sbb
das
add
add
arpl
add
jne
cmc
cmp
das
add
sar
outsb
aaa
adc
std
cmp
inc
sti
outsb
jae
lcall
lods
cld
sub
ljmp
je
pop
cld
push
jae
add
addr16
jae
add
push
add
jne
add
subl
push
add
sub
outsb
add
push
add
jmp
add
add
jmp
add
in
add
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
bound
jmp
add
xor
push
push
sti
xor
test
sub
pusha
xchg
inc
add
xor
pop
jo
popf
sbb
mov
mov
add
add
sbb
cld
mov
shll
cmc
std
pop
dec
iret
cmp
ret
or
xchg
sti
sti
call
jbe
out
sbb
test
aaa
in
mov
ljmp
in
scas
pushf
mov
call
push
sub
imul
push
and
mov
out
mov
mov
add
sbb
lea
loope
scas
jecxz
adc
out
mov
xchg
repz
and
mov
je
addr16
jmp
mov
mov
fdivp
lcall
mov
aad
out
mov
loopne
mov
loopne
mov
fdivp
ljmp
add
sbb
add
out
fwait
sbb
jp
addb
ljmp
add
xchg
daa
xor
push
xor
jbe
jo
pusha
jo
pushl
inc
adc
nop
cmp
push
fld
cmpl
inc
mov
ljmp
daa
xor
add
je
jne
or
aas
push
adc
adc
push
mov
jg
and
add
ja
out
sti
xchg
jno
push
xor
add
xor
adc
xor
jge
xor
jge
push
mov
jmp
push
inc
jmp
jbe
sub
mov
add
cmpsl
stos
add
scas
xor
mov
jne
mov
mov
add
ss
xchg
sub
ljmp
add
xlat
mov
inc
fsts
addl
add
adc
xchg
add
sub
pop
cmp
cmpsl
mov
add
stos
out
push
xor
imul
xchg
mov
sub
mov
adc
xor
jmp
push
push
mov
das
jmp
inc
jmp
mov
stos
xor
mov
add
add
loopne
pop
loopne
jmp
mov
outsl
mov
or
mov
jno
push
dec
pusha
xor
mov
in
jmp
dec
sbb
pop
test
mov
ss
stos
sti
test
pop
xor
aas
shrb
mov
pop
pop
xchg
inc
jne
ffree
push
jmp
mov
jne
adc
mov
add
es
aas
das
sub
push
pop
mov
addr16
fcompl
inc
jmp
in
imul
mov
adcl
pop
je
into
mov
hlt
add
gs
out
adc
f2xm1
ljmp
mov
in
hlt
fsubs
inc
add
mov
pcmpeqb
push
test
jbe
mov
mov
add
pop
in
pop
mov
out
push
sbb
and
xchg
das
add
lds
stos
cli
aas
add
bound
jle
xor
test
cwtl
push
add
push
lea
cltd
or
and
add
std
je
mov
add
jp
std
jge
mov
push
jns
mov
call
add
add
cmp
fstpl
psubsw
out
aaa
xchg
stos
mov
outsl
push
jmp
xchg
add
cmpsl
push
push
stos
adc
sbb
je
mov
inc
add
sbb
add
dec
mov
add
push
add
sub
or
in
dec
push
xchg
inc
mov
stc
jo
mov
add
add
rorb
je
xchg
add
push
sub
jmp
xor
add
scas
push
add
shr
xor
mov
mov
xor
cmp
aaa
pop
sub
jmp
pushf
out
mov
add
add
jo
outsl
cmc
in
imull
mov
add
js
lock
inc
sub
dec
jmp
loopne
xchg
loope
xor
cmp
or
mov
jb
add
or
dec
add
add
mov
call
xchg
testl
enter
test
pushl
lahf
jno
shll
add
in
push
xor
shl
jecxz
jae
add
xor
jmp
out
mov
or
loopne
test
lock
int
xor
xchg
jo
add
sub
mov
lcall
mov
push
cmp
fs
rolb
push
add
adc
sub
sbb
push
aam
addl
add
push
mov
jmp
mov
push
pop
mov
mov
scas
idiv
jg
push
lcall
rclb
out
enter
lret
push
mov
ljmp
inc
mov
test
add
sub
subl
jae
fmul
adc
repz
mov
mov
cs
pushl
xor
jmp
adc
mov
fldcw
or
add
add
xchg
aaa
lds
add
je
sub
ljmp
dec
fidivs
inc
jmp
mov
and
aaa
lods
adc
cltd
add
cmp
stos
imul
push
push
adc
and
negl
jae
jl
sub
mov
push
sub
ss
mov
fs
add
xor
jmp
jmp
xor
cwtl
sbb
add
mov
cwtl
mov
sub
xor
les
sub
push
cmp
jno
push
xchg
xor
lock
or
call
push
adc
hlt
xchg
sbb
mov
and
add
xor
aas
iret
sbb
add
xor
add
push
out
outsb
call
cld
stc
sbb
into
dec
and
in
dec
inc
add
scas
dec
lret
pop
xlat
fs
lea
push
lods
incb
mov
mov
and
sub
push
iret
loope
and
push
sub
adc
dec
adc
int3
cli
dec
rorb
jne
imul
arpl
adc
add
mov
push
mov
push
jecxz
mov
test
xchg
lods
shll
loopne
sbb
jmp
dec
mov
jb
ds
jle
sbb
inc
push
inc
ret
xchg
jl
xchg
aad
insb
mov
jbe
mov
fstpt
add
iret
cmp
jl
cmp
mov
dec
dec
stos
movsl
cmp
je
test
jl
push
push
push
xlat
cli
fcoms
cmp
push
push
pop
add
pop
lea
or
cmpl
add
pop
stos
aas
mov
aam
add
push
xchg
test
repz
mov
add
outsb
das
pop
jecxz
inc
xor
add
scas
cld
mov
cmp
jns
data16
or
cs
cltd
cmpsl
add
pop
push
pop
xor
push
push
jmp
and
cltd
dec
mov
pop
mov
pop
mov
insb
adc
loope
cld
sub
xchg
inc
cmp
outsl
ret
mov
insb
sbb
pop
sub
daa
mov
add
mov
add
jmp
test
add
lcall
cwtl
xorb
mov
jb
jno
push
jo
call
lret
subl
xchg
arpl
mov
shl
int
jae
mov
lods
addl
cmp
dec
add
and
lock
push
add
jl
call
lods
mov
pop
jo
dec
adc
and
pop
icebp
xor
or
inc
pop
jae
roll
sub
push
out
mov
jecxz
out
xor
dec
jmp
pop
jb
xor
push
jne
push
sub
iret
inc
shld
and
in
xor
push
push
data16
add
insb
shlb
lea
and
gs
pop
jg
lret
push
sbb
sub
mov
mov
mov
mov
roll
mov
pushf
inc
std
xor
and
aaa
loope
repz
mov
pushl
mov
cmc
loop
pop
stos
in
rorl
push
push
call
mov
add
adc
enter
push
add
mov
and
add
push
push
pop
int
leave
jecxz
mov
mov
sqrtps
inc
std
add
cmp
dec
add
xchg
inc
or
xor
cmp
jmp
add
xchg
dec
cmp
movsl
cmp
test
add
cmp
imul
and
test
push
es
ljmp
cmp
testl
hlt
pinsrw
add
lahf
popa
dec
cmp
sbb
jne
mov
pushf
add
test
add
and
adc
add
jmp
inc
and
adc
sub
lock
ljmp
xchg
repz
shrb
icebp
call
jge
mov
lods
gs
inc
add
pop
and
popa
cmc
add
pusha
xor
jae
mov
xor
xchg
mov
jle
aas
iret
and
sbb
popa
sub
test
addl
in
push
cld
loope
pop
xor
or
test
arpl
sbb
dec
fcoms
or
in
add
or
add
jmp
add
call
jge
call
fdivrs
std
imulb
add
call
cmp
jne
push
cmp
mov
push
cmp
imul
repnz
cmpl
lea
jmp
daa
adcl
xor
jb
stos
xlat
pusha
sbb
mov
shll
and
add
add
xor
add
pop
push
dec
mov
push
push
cmp
push
ret
mov
push
add
add
xchg
jb
idivl
cmpsb
notl
inc
testl
inc
scas
in
add
insl
sub
iret
and
shrl
cwtl
push
aam
xor
xlat
test
rol
or
jmp
add
or
outsl
jb
in
inc
and
inc
pop
cwtd
repz
jne
cmp
scas
les
jmp
mov
mov
lock
jo
out
jo
out
pusha
inc
jp
bound
or
lret
into
sbb
pop
sti
add
xor
push
ja
pop
jns,pn
push
scas
xlat
add
add
push
mov
rorl
ret
jg
sti
ss
push
pusha
push
xor
shll
cmc
push
mov
jne
mov
push
test
xor
add
mov
dec
pop
push
jmp
cmp
sbbb
lcall
and
mov
and
imul
add
add
add
cltd
out
jb
out
das
out
divl
sti
xor
lock
call
addr16
call
add
xor
pusha
std
int3
pop
push
adc
xchg
push
xor
jb
push
inc
imul
adc
add
sbb
fcos
push
pusha
ja,pn
push
fisubs
add
adc
ret
dec
jmp
jg
add
les
add
cmpsl
add
adc
ja
sbb
sbb
and
sbb
push
nop
cmpsb
xchg
scas
fistpl
sub
ret
jb
push
adc
jne
add
xor
movsl
call
int3
ficompl
andl
xor
test
call
cmp
mov
add
shlb
mov
nop
adc
inc
and
inc
mov
cmp
inc
xor
sti
inc
and
ret
ret
jae
jmp
call
mov
ret
jb
jmp
and
inc
push
imul
orl
cmp
fistpll
decl
adc
not
orl
xor
sub
rolb
add
or
or
sub
or
inc
inc
cmp
es
dec
xor
mov
mov
fiaddl
rcrl
inc
ret
dec
mov
mov
das
adc
das
or
stos
call
fmuls
pushf
jmp
add
stos
leave
fwait
nop
jmp
add
xchg
ficoms
mov
das
and
add
or
add
and
xchg
adc
jl
add
cmp
sub
jle
xchg
and
push
fdivl
pop
lock
fwait
xor
mov
dec
hlt
sbb
push
stos
xor
imul
push
aam
stc
adc
imul
jg
std
or
std
out
mov
es
jmp
jbe
add
rolb
test
cmc
add
movsb
icebp
arpl
ss
in
stos
scas
dec
mov
xor
jge
dec
fisttpll
add
cmp
mov
icebp
push
push
mov
and
jge
sbb
fnsave
push
xchg
in
push
sub
mov
cmc
pop
repnz
cmp
push
push
sbbb
sub
xor
add
or
notl
sub
fldl
adc
popa
or
mov
jb
jb
dec
adc
cmc
jbe
in
insl
adc
mov
and
aam
pop
inc
jmp
stos
dec
sbb
cwtl
fstl
fisubrl
add
sub
inc
sbb
incb
hlt
int
insb
add
ljmp
push
mov
xor
jmp
pop
inc
fisttps
cld
shl
mov
loopne
jne
jg
lea
out
pop
int3
std
mov
mov
jns
testl
xchg
xchg
push
mov
mov
cmc
decl
inc
loope
mov
push
push
or
sbb
pop
mov
dec
call
push
push
mov
test
mov
add
pop
das
pop
data16
or
jo
lcall
aam
jge
mov
add
lcall
inc
jnp
inc
dec
mov
sbb
lea
pop
push
jle,pt
dec
mov
fidivrl
data16
or
cmpsb
out
sbb
adcb
cld
jb
jns
sbb
sbb
add
adc
add
lahf
imulb
fwait
movsl
adc
push
inc
add
negl
xor
jns
imul
setnp
sub
andb
inc
inc
add
cmpsl
xchg
imul
call
add
cmpsl
adc
loopne
in
movsb
std
xlat
push
jb
in
incl
inc
jmp
and
add
jo
inc
test
inc
mov
add
add
jmp
adc
adc
jecxz
movsb
movsb
loopne
sub
dec
fstl
repz
jmp
dec
and
add
in
add
mov
into
dec
scas
mov
pop
fisubl
sbb
das
idivl
rclb
in
and
jmp
mov
sti
cmpsl
inc
loope
add
jmp
mov
inc
hlt
adc
cmp
mov
xor
mov
sbb
or
andb
jecxz
repz
mov
cmpsl
jmp
xor
add
dec
adc
inc
sbb
clc
inc
or
and
mov
mov
je
xchg
inc
sbb
sbb
mov
aas
cmp
push
add
add
inc
mov
sbb
ret
xchg
imul
adc
inc
rolb
dec
scas
dec
mov
pop
adc
inc
sarb
into
cmp
dec
pop
idivb
femms
jmp
push
jle
xchg
mov
adc
cmp
or
jmp
dec
or
into
fiaddl
in
fsubr
push
outsl
dec
inc
add
inc
js
stc
icebp
mov
jg
pop
adc
loopne
or
push
jecxz
add
dec
cld
add
aam
std
cld
xchg
inc
inc
pusha
es
inc
jb
call
movd
dec
stos
lret
inc
mov
push
cli
jae
dec
int
sub
rol
pop
cmp
cmp
lea
add
lcall
mov
add
jbe
mov
fidivrs
bound
pop
inc
mov
mov
lods
out
add
shrb
jmp
ljmp
ret
div
add
mov
cs
shll
push
dec
jo
iret
sbb
lea
adc
ss
push
outsl
jne
sub
add
jg
cmp
pusha
popa
push
repz
mov
push
out
mov
jmp
add
cmp
push
cmp
scas
add
imull
adc
jmp
hlt
cmp
lcall
jmp
xor
stc
out
mov
jno
and
jno
and
aaa
jnp
push
das
add
jbe
mov
add
mov
repnz
add
mov
les
in
and
out
push
mov
call
sub
add
cmp
dec
xor
movsbl
mov
add
js
mov
or
or
push
repnz
push
idivl
pause
fwait
cmp
add
cmp
xor
repnz
xor
ret
call
jo
xor
mov
mov
orps
add
mov
call
inc
adc
out
or
pusha
pushl
jmp
jmp
dec
or
cmpsl
iret
add
loopne
or
into
out
sub
pop
mov
bound
push
add
outsb
pop
add
add
jo
inc
xlat
push
fimuls
test
jge
ret
imul
inc
mov
mov
inc
in
stc
cmp
adc
pop
pop
mov
jmp
adc
lods
imul
xchg
jmp
add
pop
add
jo
sub
sbb
lods
pop
add
rorb
add
fucomip
cmpsl
xor
xor
cmc
or
xor
adc
negb
sub
pushf
add
inc
stc
insb
mov
mov
add
xor
out
imul
xor
mov
scas
fsubr
out
cmp
mov
loope
mov
sbb
fdivl
arpl
sub
sbb
sub
pop
out
in
sbb
pop
push
add
add
cmp
push
lds
je
bound
jmp
jmp
out
mov
jmp
fdivl
pcmpgtw
jmp
scas
cmp
call
cmp
cmpsb
in
das
subps
scas
mov
scas
in
andps
scas
mov
insb
fcoml
rol
add
gs
and
add
fdivrs
daa
out
and
outsl
push
jmp
sub
test
ret
stc
out
pop
das
add
dec
outsb
jae
push
dec
adc
push
push
and
sub
decl
decl
outsb
or
je
mov
add
stc
and
fadds
add
inc
lea
add
push
pop
ljmp
and
xor
add
lds
xchg
and
or
lock
xor
add
sbb
add
jmp
sti
cld
aam
scas
add
jb
push
imul
scas
add
fimuls
cmp
cmp
or
daa
add
imul
negb
repz
add
cltd
add
sbbl
push
pop
add
pop
add
add
and
xchg
subl
push
add
or
stos
adc
dec
xor
jmp
dec
cs
jmp
mov
cs
call
ja
addr16
add
add
call
inc
jmp
jle
pushf
addr16
inc
jmp
data16
addr16
sbb
jmp
scas
inc
jmp
sti
pop
cli
lock
add
lods
sub
in
imul
insb
inc
test
jo
addr16
pop
addr16
add
in
out
add
add
sbb
dec
push
xor
xor
sub
sti
sub
leave
call
lods
xor
sbb
pop
sbb
call
cmp
jmp
cwtl
mov
sbb
adc
fisttpl
jb
loopne
movsl
call
clc
add
and
call
pushl
jmp
cmpl
cmp
add
add
jns
mov
fdivl
add
and
lea
and
jne
and
add
xchg
sub
rclb
add
mov
push
mov
add
mov
mov
pushl
enter
add
add
xor
jne
add
dec
pushf
jb
ret
je
mov
add
cmp
ret
rol
add
add
pop
pop
jp
adc
jg
jmp
mov
sbb
sub
mov
inc
das
mov
hlt
mov
pop
ror
push
fists
jae
xlat
pop
and
cmp
test
pop
add
mov
fiadds
push
loopne
cmp
push
sub
subl
push
outsb
xor
mov
pop
sub
adc
pop
add
xor
les
ljmp
mov
xor
repnz
cs
orl
mov
add
mov
jb
in
call
add
xor
add
sbb
loopne
das
inc
stos
pop
jmp
aaa
pop
cmp
movsb
jmp
gs
fs
add
arpl
or
pop
clc
fdivs
fs
mov
xor
fmul
jno
pop
cmp
mov
add
int
jno
idiv
mov
aad
dec
and
and
out
lods
enter
jnp
add
packsswb
and
pop
out
stos
icebp
pop
sbb
and
jno
and
ja
adc
out
push
inc
shll
leave
imul
testl
jmp
sbb
jmp
call
or
jmp
sarl
movsl
inc
or
cld
popa
jae
adc
aas
out
and
jae
out
add
hlt
and
add
dec
and
inc
xor
scas
lcall
popa
out
subl
lcall
push
inc
mov
push
inc
push
xchg
xchg
sbb
popa
out
inc
das
add
sbb
mov
sbb
adc
ljmp
mov
or
jp
pushl
mov
and
mov
add
stc
jmp
test
sahf
xor
inc
cs
inc
inc
jmp
add
scas
imul
jmp
add
sub
push
push
addr16
add
cli
test
dec
adcl
out
cmp
add
mov
outsl
in
in
jle
pop
push
aad
cmp
adc
push
inc
cmp
lea
add
add
dec
add
daa
rorb
pop
cs
mov
ss
dec
dec
add
pusha
sahf
out
mov
xor
lods
out
add
out
ss
sub
out
in
sub
mov
lock
leave
add
xor
xlat
xor
jle
adc
xlat
and
das
jp
cltd
add
psubsw
pop
cmc
cmp
xor
adcl
xor
xlat
xor
jle
adc
imul
hlt
xor
hlt
or
ja
add
sbb
out
jmp
rolb
stos
jmp
push
addr16
call
daa
xor
jae
push
movsl
jle
inc
int
test
lds
leave
add
add
fmul
sbb
rolb
mov
lret
xor
adc
or
and
mov
test
imul
stos
jae
sub
std
int3
adc
std
mov
mov
mov
xor
rcrb
or
pop
loop
add
and
push
dec
mov
mov
mov
add
fnstenv
cmp
xor
mov
mov
mov
out
add
add
xor
lcall
xor
mov
pop
pop
mov
data16
push
jns
and
shlb
add
sbb
jne
fcmovnbe
jmp
pop
xchg
std
jne
shlb
mov
mov
pop
mov
out
add
xorl
mov
lea
test
sbb
jmp
shl
repz
jo
fwait
loope
inc
add
ljmp
call
lret
hlt
aas
jmp
add
fimuls
add
dec
jp
ja
jae
push
jns
orl
call
pusha
outsl
mov
jbe
jns
shrl
mov
add
scas
jp
add
aas
dec
add
sub
into
bound
test
add
add
jmp
enter
mov
jmp
aam
insl
pop
push
xor
sbb
call
adc
cwtl
adc
sub
sbbl
jmp
jl
fcomps
and
mov
or
int3
mov
call
add
add
cmc
or
pushf
lods
and
add
inc
add
hlt
add
inc
adc
ljmp
in
sbb
xor
arpl
imul
lcall
insb
in
outsb
fsubp
std
sub
mov
jne
or
jns
incb
adc
cli
xchg
decb
jo
mov
call
fildl
jmp
add
ljmp
jmp
stos
xor
push
xor
jge
das
add
aad
mov
int3
outsb
adc
mov
add
test
roll
ljmp
add
mov
sbb
push
rolb
and
mov
das
add
or
mov
mov
jne
fxch
call
shlb
add
dec
fnstenv
repnz
je
mov
pop
inc
add
outsb
push
push
lcall
push
add
fisttpll
lahf
pusha
mov
ljmp
decl
lret
adc
ljmp
add
shrb
sbb
xor
add
fdivs
mov
dec
add
stos
dec
add
add
sub
testl
push
xor
xchg
mov
daa
jl
add
lds
inc
add
in
ret
dec
add
pop
cli
mov
inc
inc
ja
cmp
pushw
lcall
aam
je
into
mov
add
lcall
ja
ja
jnp
aas
and
jle
mov
add
cmp
ret
out
dec
xor
aas
adc
fs
add
frstor
jle
or
loopne
sub
jo
jno
add
cmpsb
xor
sahf
inc
mov
jl
pop
call
xor
cmp
sysexit
arpl
jb
movups
out
loopne
test
xor
pushl
js
mov
add
jmp
mov
js
cmp
jle
mov
jmp
and
cld
lods
ljmp
sub
jmp
cmpsl
xor
orb
aas
in
hlt
and
sbbb
call
mov
cmc
jmp
and
out
xor
add
or
call
jecxz
push
imul
and
add
push
incl
pushf
inc
add
jmp
dec
cmp
adc
pop
mov
lods
push
jmp
sub
add
sbb
add
rcl
rcrl
pop
ret
push
mov
mov
xor
push
pop
std
jae
test
decl
inc
xor
mov
add
sub
and
lea
dec
push
and
inc
push
xor
add
adc
mov
ds
ret
leave
adc
call
cltd
adc
call
mov
add
rol
pop
jmp
les
jmp
xchg
or
xor
int3
cmp
enter
notl
add
jne
sbb
outsl
nop
sub
es
mov
lcall
or
and
sarb
and
push
add
jmp
push
and
shll
and
jecxz
mov
xor
jae
push
inc
mov
adc
sbb
fwait
hlt
ds
mov
push
jo
fwait
mov
xchg
imul
xor
and
or
add
pusha
cld
or
les
jae
or
data16
int
in
or
arpl
aam
cmp
jo
filds
js
or
adc
in
pop
jnp
dec
xchg
mov
ffree
inc
sbb
mov
cmp
push
jp
cmpsl
mov
lods
das
adc
cmpsl
lods
fcomip
call
imul
add
lock
add
negl
jmp
or
pusha
mov
or
out
jl
gs
push
adc
or
push
push
icebp
xor
jmp
cmpsl
insb
jg
push
jb
or
pusha
fildl
jmp
out
xor
int3
or
mov
sbb
aaa
aad
push
jae
sub
push
dec
add
hlt
or
push
arpl
mov
pop
mov
and
push
es
xlat
mov
add
add
addl
cmp
ljmp
jne
lods
jb
loop
jb
loop
jb
repnz
jb
repnz
jb
loop
push
and
mov
push
dec
or
call
push
mov
dec
sbb
jae
testb
sahf
push
cmp
and
add
adc
push
xor
je
je
rcl
movsb
pushl
hlt
xor
aaa
add
mov
jle
xor
pop
jb
push
jl
add
jmp
fidivs
mov
push
test
adc
xchg
out
loopne
add
es
mov
inc
sub
imull
push
xor
add
lds
add
test
inc
add
mov
jle
push
pop
xorl
sbb
idiv
push
push
cltd
cltd
jmp
add
pop
sbb
outsb
stc
or
add
xchg
subl
jns
pop
xor
cwtl
mov
hlt
incb
lods
and
imul
ret
add
sbb
jmp
lods
roll
pusha
jmp
call
and
lds
int3
in
mov
mov
ss
push
or
jmp
add
les
jmp
sti
pop
data16
les
mov
int3
xor
or
add
roll
sbb
loope
push
inc
or
mov
jmp
add
call
jmp
or
jb
jmp
and
mov
add
clc
dec
je
imul
call
cmp
and
cmp
pop
push
call
std
xor
dec
je
imul
lcall
negl
lahf
imul
bound
je
dec
fildll
out
je
imul
cmpl
fsub
dec
outsl
sbb
imul
mov
mov
inc
addr16
push
mov
adc
dec
push
call
pushl
mov
inc
ljmp
adc
push
testb
or
xor
xor
fcoml
xor
lret
adc
inc
push
incl
and
push
push
fisubl
add
ret
jge
mov
decl
lahf
mov
mov
or
adc
cmc
jb
cmp
push
mov
rorl
inc
loop
stos
push
add
fadd
and
cmpsl
lea
inc
rorb
mov
sbb
dec
mov
jae
test
int3
out
xor
cmp
add
cmpsl
xor
cmp
cmp
jne
xlat
jns
pop
sub
jmp
add
daa
xor
jne
xlat
jns
aaa
addr16
or
push
loope
hlt
test
fadd
and
daa
xorl
mov
jp
dec
bound
in
add
fildll
aas
inc
insb
fmull
push
cmpsb
stc
pop
test
das
xchg
iret
add
fsubr
int3
adc
mov
mov
daa
lret
pop
push
aas
jmp
pop
jb
je
jmp
adc
jns
xor
pop
adc
std
shlb
add
sbb
xor
sub
xor
jle
or
loopne
jmp
jbe
cmp
outsb
popf
lock
stos
jne
call
add
out
inc
dec
jb
jmp
lds
and
mov
and
pop
push
mov
movsb
dec
sar
loope
mov
aaa
mov
insb
sbb
sbb
adc
or
adc
mov
call
mov
adc
sbb
mov
into
xchg
lds
jno
and
add
mov
outsl
add
cld
out
scas
das
add
lahf
mov
pop
push
das
push
mov
mov
fnstcw
mov
push
mov
repnz
adc
add
bound
clc
add
mov
sarb
xor
insb
or
je
pop
std
mov
cs
ds
jae
mov
adc
call
mov
mov
pop
dec
mov
iret
jmp
cmc
mov
xor
fcmovnb
fistl
mov
int3
daa
mov
mov
es
xchg
sbb
add
push
test
lea
ror
outsl
addr16
push
push
mov
jecxz
dec
jne
push
insl
pop
add
ret
add
sbb
mov
outsl
mov
push
call
sbb
sbb
mov
jnp
xlat
xor
jge
cmp
cmp
cmp
jmp
pop
addr16
or
mov
daa
pop
mov
or
lods
call
push
scas
mov
add
add
xor
add
cld
imul
out
xchg
xor
add
mov
clc
inc
insl
mov
jmp
test
xor
pop
insb
rorb
cmp
sahf
pop
fwait
pop
les
inc
cmp
add
adc
jmp
stos
adc
cmp
mov
and
add
incb
enter
add
out
xor
jmp
lods
mov
push
cli
movsb
adc
and
mov
pop
jmp
fs
or
inc
arpl
adc
mov
sbb
adc
call
add
or
push
sbb
cmp
or
push
and
arpl
add
jge
and
jecxz
int3
call
or
adc
fdivl
shl
sub
xchg
adc
call
daa
cmp
stc
out
dec
xor
mov
adc
add
mov
enter
push
push
mov
and
adc
mov
mov
out
mov
fldt
ret
pop
add
ret
pop
add
push
icebp
or
into
xor
jmp
mov
ret
inc
ds
ja
or
sbb
fcoms
and
sub
out
add
and
out
adc
inc
and
fisubl
push
shll
jo
xchg
add
add
add
out
sub
pop
push
dec
inc
test
dec
cmp
push
dec
xor
push
dec
sub
push
dec
and
push
dec
add
sbb
push
dec
adc
push
dec
mov
das
jns
adc
add
jmp
rclb
cmp
pop
and
mov
in
jmp
inc
cmp
outsl
movsl
push
dec
lods
addl
sub
fisttpl
xor
enter
addr16
hlt
xor
je
jmp
call
add
add
ljmp
stos
mov
xchg
inc
subl
sub
js
mov
add
mov
out
jo
adc
mov
jmp
popf
jae
and
push
shlb
pop
shlb
push
shlb
cmp
and
sahf
mov
sarl
scas
jo
out
cltd
xor
ds
outsb
pop
xor
add
adc
adc
out
sub
adc
scas
mov
push
sub
add
arpl
and
sbb
imul
shlb
in
and
sbb
jmp
sbb
adc
xor
push
mov
inc
and
pusha
mov
pop
sub
inc
xor
inc
push
dec
jo
jmp
add
shrl
add
cmp
inc
add
mov
adc
mov
push
and
mov
mov
mov
mov
xchg
mov
xchg
lea
mov
push
lea
sbb
pop
lahf
sub
xchg
stos
incl
add
jmp
xchg
mov
add
add
pop
add
jle
rorl
mov
rorl
aam
cmpb
bound
jmp
add
pusha
imul
je
mov
aad
jae
into
mov
jmp
mov
inc
je
std
add
jmp
mov
call
jo
mov
xchg
add
add
push
dec
lock
jae
xor
rorl
xor
lock
into
or
jle
jmp
lods
pop
aaa
lods
sub
ljmp
mov
sbb
push
add
cmp
sbb
jne
or
xor
aam
mov
mov
and
jge
add
popa
inc
popa
inc
dec
lods
mov
jmp
shll
sbb
push
out
or
dec
out
or
inc
out
or
cltd
je
or
aad
shrl
call
dec
push
sbb
inc
sar
inc
jae
fdivr
mov
cltd
sbb
jge
sbb
jmp
rcll
in
push
shl
dec
and
adc
cli
sub
jae
add
jmp
dec
sbb
les
add
out
jae
hlt
aas
outsl
cmp
ds
aas
jae
clc
add
outsb
arpl
push
adc
mov
or
mov
ljmp
jecxz
push
add
ljmp
inc
addr16
adc
lock
adc
jne
mov
xor
rcrb
push
add
push
es
mov
and
push
pop
add
ret
call
pop
hlt
jb
or
inc
inc
add
push
xor
xchg
ret
insl
cmp
pushl
pushl
pop
std
push
ds
add
dec
inc
jmp
jge
popf
cmpb
xlat
dec
xlat
mov
notl
dec
jns
inc
jmp
clc
adc
add
adc
xchg
dec
jno
repz
lcall
rcl
xlat
mov
inc
notb
mov
notb
int3
in
ds
outsl
je
outsb
repz
sbb
lods
jg
sar
aad
lret
pop
sbb
pop
push
xor
cltd
lret
test
add
jmp
out
es
bound
scas
xor
add
rorl
stc
jo
dec
jmp
jmp
pop
xchg
dec
andl
fs
adc
xchg
jo
test
aaa
data16
arpl
fadds
orb
jmp
fsub
popa
pop
lret
sub
lods
lret
aaa
dec
aas
pop
cmp
add
mov
jp
std
arpl
popl
outsb
jecxz
lret
xchg
jmp
and
add
xchg
push
jae
sub
mov
dec
jmp
enter
sub
bound
out
mov
dec
pop
push
int3
dec
add
popf
hlt
jmp
xor
shlb
cmc
test
jmp
pop
push
jnp
imul
call
jecxz
sbb
dec
insb
daa
sub
add
imull
jmp
and
in
push
mov
test
push
insl
cmp
sahf
mov
pushf
rdtsc
add
imull
push
std
lret
rorl
xor
lret
push
pop
stos
test
add
inc
lock
arpl
rcrl
cmp
push
mov
lock
xchg
loopne
xor
add
add
fs
call
mov
or
ljmp
lea
insb
out
mov
add
movsl
fiadds
femms
xchg
cld
call
xor
sub
call
imul
shlb
call
gs
xlat
jmp
mov
loopne
dec
jg
push
jns
sbb
les
or
addl
mov
inc
jg
adc
add
add
jnp
int3
inc
push
outsl
subl
sub
jmp
xchg
pop
dec
xor
push
mov
lret
sub
mov
fnstcw
pop
sbb
dec
add
aam
out
and
xor
xchg
cmp
ss
mov
cmpsb
xchg
roll
add
cmc
fisubrl
aaa
hlt
add
jno
stos
jmp
jmp
hlt
ret
hlt
call
neg
enter
xor
enter
jmp
lock
js
dec
rcrb
jno
shrl
jb
addr16
in
push
xor
add
sub
aaa
jns
dec
pop
outsb
lods
cmp
mov
add
add
xor
rcll
push
insl
stos
xor
jmp
or
nop
xchg
testb
gs
insb
mov
jmp
xchg
mov
inc
mov
add
gs
insb
mov
inc
or
mov
adc
push
insb
inc
cmp
jmp
cmpsb
cld
mov
add
add
sti
add
gs
insb
mov
jmp
jno
mov
mov
mov
sysret
mov
ljmp
idivb
add
cmp
xorb
or
jp
mov
push
cmp
push
mov
jne
scas
ljmp
in
add
mov
jne
scas
ljmp
add
in
add
xor
add
mov
jne
scas
ljmp
jecxz
add
sarb
ret
jne
scas
ljmp
jo
aas
jmp
bound
jmp
pop
test
out
mov
aas
jmp
ss
dec
jg
decl
add
jnp
sar
xchg
out
sbb
fldl
jmp
inc
jae
add
leave
divl
lea
add
pop
xor
repnz
sbb
inc
xorl
mov
push
xchg
dec
add
call
add
or
in
pop
jo
faddl
pusha
push
push
sbb
leave
pop
and
mov
sbb
shll
arpl
xor
int
fwait
and
add
xchg
xor
dec
popa
push
push
clc
sbb
add
push
xor
add
int3
lss
fidivrs
xor
add
fs
jae
xchg
pop
add
xor
adc
sub
push
and
insl
xchg
sbb
call
fucom
loope
mov
xor
add
sbb
pop
addr16
xchg
fucom
mov
push
add
xor
call
cmp
push
fiadds
add
call
std
lock
stos
stos
inc
add
ds
call
sub
add
scas
sub
enter
jne
lret
or
movsb
dec
call
call
dec
sbb
jmp
xor
aas
xor
add
sub
ret
xor
mov
add
outsl
dec
push
mov
pop
cmp
push
mov
pop
inc
jae
push
daa
jae
push
sbb
push
mov
cmp
push
and
cmpl
je
push
inc
cli
mov
loop
push
int3
add
adc
inc
pop
pop
push
or
fs
test
enter
mov
leave
add
repz
ss
add
popa
push
push
dec
and
add
icebp
mov
fs
divb
out
hlt
push
rolb
dec
iret
out
or
xlat
and
push
cmp
lea
or
mov
iret
push
mov
iret
push
jl
jg
cld
sub
cmp
xchg
adc
add
cmp
push
xchg
mov
punpckhdq
dec
pop
cs
add
or
inc
lods
mov
jmp
mov
jae
les
jae
outsl
add
xor
std
fwait
loopne
shl
pop
imul
or
out
clc
jo
lds
stos
or
lods
shl
movsl
sub
pop
mov
jns
add
aad
sub
sub
movl
pop
cld
fldl
ja
dec
adc
mov
xchg
pop
in
push
out
outsb
in
push
aam
sbb
adc
push
bound
inc
gs
push
jmp
mov
mov
sub
enter
lock
fnstenv
incb
add
mov
jg
movsl
inc
in
sbb
sbb
lcall
mov
xor
gs
call
rol
jb
or
add
stos
sub
push
jb
sub
insb
inc
xor
jmp
call
scas
push
ret
sbb
add
mov
add
add
mov
lea
mov
imul
push
mov
std
jge
mov
sub
pop
out
add
int
or
and
ret
pop
fdivl
add
jmp
jl
inc
mov
jmp
mov
or
or
push
stc
jae
inc
xchg
mov
insl
out
inc
sub
add
mov
push
xor
pop
add
add
test
push
dec
sbb
orl
add
xchg
enter
mov
pushf
mov
test
imul
nop
push
out
scas
ljmp
mov
jecxz
mov
stos
sti
add
inc
sbb
pop
sub
dec
sub
dec
or
add
in
mov
stos
mov
push
lea
add
out
sbb
add
sub
dec
mov
pushf
xor
popa
sbb
aas
mov
xor
mov
pop
jb
add
mov
jmp
arpl
mov
out
data16
sti
pushf
mov
out
jo
gs
pop
mov
or
add
xor
mov
xor
pusha
add
js
pop
push
jmp
notl
add
icebp
cmp
in
sub
xor
mov
push
iret
in
jmp
out
insb
cs
ljmp
add
hlt
add
pop
xor
jge
out
int
add
call
lods
stc
jno
mov
xor
je
and
nop
fbld
jmp
mov
pop
push
add
xor
add
call
orl
icebp
xor
and
jno
call
xor
enter
mov
add
ljmp
add
jg
dec
cmp
pop
cmp
call
push
adc
lahf
xor
add
add
dec
xor
inc
fidivrs
inc
add
out
inc
cmp
jne
adc
jmp
inc
rol
xor
and
in
push
popf
loopne
inc
scas
pop
push
lea
hlt
and
mov
inc
and
mov
push
add
mov
xor
je
xchg
es
dec
push
and
add
mov
mov
data16
add
pop
push
add
add
idivl
sbb
push
lcall
add
mov
and
sbb
daa
pushf
adc
pop
add
and
jae
xor
gs
jo
idivl
sbb
push
cmp
lret
dec
xor
jno
mov
pmaxsw
daa
xor
sbb
pop
pushf
lea
sub
iret
pop
jae
add
inc
add
pop
push
jg
sbb
push
sbb
clc
sub
xchg
mov
sbb
push
mov
xlat
sub
daa
divl
adc
push
sbb
jmp
cltd
imul
aas
pop
jb
insb
cmp
enter
pop
xor
fsubrl
call
daa
add
fildl
cmc
pop
mov
imul
xor
adc
insb
enter
pop
sbb
pop
testl
or
aaa
mov
xchg
sub
jmp
push
sub
mov
xor
sbb
push
clc
mov
push
xor
test
mov
jmp
add
add
jmp
dec
and
movsl
adc
cld
push
jp,pn
fsubrl
aas
inc
jmp
xchg
xor
jmp
xchg
cs
nop
sub
jmp
sub
mov
and
xorb
hlt
and
push
or
fimuls
insl
mov
jge
add
or
incl
push
push
repnz
push
mov
popa
adc
mov
jmp
mov
dec
lea
in
mov
add
mov
adc
push
idiv
call
adc
inc
je
or
push
sysret
call
xchg
add
pop
out
cmp
add
insl
add
add
roll
jmp
push
push
bound
adc
icebp
incl
and
fwait
enter
pop
jae
out
push
fistl
sub
push
mov
jb
imul
pop
jae
or
sti
or
jmp
sbb
and
mov
mulb
test
movsl
sbb
aas
roll
jns
add
xor
jo
shl
popa
jl
lock
sbb
jo
jno
enter
enter
or
inc
lock
and
mov
cs
push
popl
jmp
stc
addr16
push
adc
test
outsb
mov
subl
in
stc
mov
xor
in
repz
add
mov
pop
pop
push
adcb
xchg
cmp
mov
or
pusha
ljmp
jo
xor
shr
push
add
adc
jmp
mov
jmp
mov
aas
inc
jmp
filds
mov
int3
xor
lds
aad
lock
add
jne
sbb
adc
aam
cmp
jmp
das
mov
and
imull
jae
pop
jae
imul
cmp
dec
sahf
xchg
adc
mov
push
mov
stos
idiv
or
and
movsl
adc
and
lock
loope
adc
shll
add
inc
adc
add
outsl
add
int3
mov
push
mov
add
lea
imul
test
testb
mov
sub
cmc
sbb
sub
std
je
cmc
icebp
dec
les
test
out
mov
mov
push
add
or
inc
add
rep
dec
or
fimull
push
data16
fcoml
cmp
or
imul
add
adc
outsl
fcmovbe
pop
or
popf
and
rcr
mov
sbb
add
mov
out
mov
js
lea
das
or
add
adc
add
test
xor
or
xchg
jmp
dec
sub
add
add
xchg
scas
ret
lods
lahf
in
imul
call
inc
call
sub
push
dec
xor
mov
dec
jmp
out
call
cmp
das
cmp
repz
adc
test
fildl
jmp
out
sbb
out
jmp
hlt
add
xor
lock
add
add
jo
add
xor
jmp
andb
jmp
call
out
jge
lods
push
subl
inc
cmp
out
add
gs
call
xor
jmp
jmp
adc
jmp
jmp
call
pop
cmp
xchg
xor
imul
add
cmp
adc
out
mov
lods
pushf
sbb
dec
sbb
cmpsl
xor
out
add
add
out
add
add
cwtl
mov
pop
mov
addl
std
test
add
add
shr
lods
loop
or
xchg
mov
inc
and
mov
std
pop
subb
add
add
push
push
sar
je
dec
mov
jp
sbb
je
mov
jns
push
mov
adc
inc
in
std
mov
icebp
or
ficoms
inc
cmpsb
ljmp
add
mov
xor
mov
xor
outsb
push
int
push
mov
jae
mov
and
or
add
add
adc
push
xchg
sbb
pop
or
sbb
pop
sbb
or
mov
sub
cld
cltd
idivb
jmp
or
sbb
pop
adc
call
rclb
repz
mov
add
dec
push
js
insb
push
js
addr16
xor
add
add
inc
xor
add
aaa
sub
mov
mov
adc
fs
sbb
and
nop
movsl
jecxz
scas
or
jg
sub
pop
clc
inc
xabort
inc
daa
add
ss
jne
mov
out
jmp
lahf
push
popf
jle
inc
in
xor
inc
sbbl
insb
ret
push
push
jne
add
lea
dec
mov
divb
mov
xorl
add
mov
imul
or
fiaddl
jno
sub
push
jo
outsb
call
sub
inc
icebp
pop
push
scas
add
mov
or
bound
std
aam
aas
inc
jmp
xlat
je
insb
cmpsl
mov
out
test
jmp
jns
ret
xor
mov
jp
and
dec
popf
cmp
lds
add
mov
lcall
call
shll
pop
add
call
xor
pop
add
mov
cmp
adc
add
cmp
test
push
call
add
push
jb
adc
push
adc
xlat
imul
cld
test
adc
jmp
mov
sub
inc
lahf
repz
mov
repz
mov
jge
sub
mov
fbstp
and
sahf
mov
std
aam
inc
mov
out
stc
mov
testb
add
mov
and
or
cmpsb
and
or
pop
dec
decb
mov
add
or
mov
addl
jae
xor
push
lahf
dec
inc
or
add
mov
fsubr
pop
cmpsl
cmp
xor
push
add
das
insb
fmul
inc
mov
jb
shl
add
xor
jl
lods
mov
adc
inc
jb
or
add
scas
popl
ljmp
add
and
enter
rolb
and
jecxz
fs
xor
add
sbb
sbb
jo
mov
and
cwtl
sbb
cwtl
lods
inc
int
push
lock
add
int3
cs
mov
xor
into
scas
shll
add
addl
or
jmp
push
xchg
xchg
cmp
jmp
jae
jle
push
movsb
or
sub
add
test
push
out
xchg
jbe
sub
pop
shrb
inc
ret
shrb
jge
add
push
push
shll
cmc
ret
jo
mov
jmp
sbb
jecxz
call
or
incl
jbe
popf
imul
movsb
clc
insb
sbbl
push
fdivrp
xor
sub
mov
cwtl
lret
call
push
pop
jmp
lcall
subb
in
std
test
add
clc
or
inc
mov
ret
test
adc
dec
mov
jb
add
or
push
jns
repz
adc
inc
cld
or
pop
add
lds
scas
pop
xor
mov
pop
mov
jmp
xor
adc
lgs
mov
dec
mov
xchg
les
add
out
jmp
dec
je
ss
leave
add
movsb
or
or
add
cmp
inc
repz
or
fsubrp
mov
mov
ret
pop
lods
cmpsl
ror
mov
push
pusha
out
ficompl
cltd
xor
call
movsl
pop
dec
daa
sbb
push
mov
inc
daa
add
add
in
test
sar
push
dec
js
adc
dec
cli
cmp
stos
imul
adc
fistpll
and
pop
dec
and
sub
out
out
add
out
addb
mulb
rorb
pop
push
ss
sbb
mov
ja
fisubrs
add
call
pop
fsubrl
subl
add
xchg
jmp
cs
incb
daa
push
xor
gs
jle
lahf
adc
out
inc
loope
xlat
je
cmp
add
shlb
jmp
pop
addr16
in
inc
jmp
fsts
push
pusha
cmpsl
cs
xor
mov
push
sbb
inc
repnz
mov
pushl
xchg
popa
mov
enter
add
dec
or
leave
add
push
or
push
cmp
out
cmp
sbb
or
xor
mov
jne
call
mov
add
mov
xor
imul
fisttps
add
xor
into
xor
add
adc
mov
std
test
out
xor
jp
add
xor
and
add
or
add
pop
cmp
or
test
adc
mov
add
jmp
mov
xor
pop
add
bound
push
jmp
jge
repz
cmp
jmp
mov
aas
jmp
imul
movsl
cmovno
or
add
pusha
int
mov
incl
add
mov
dec
in
or
mov
or
add
lods
sti
out
jle
add
adcb
mov
cmpsl
add
out
fucomp
mov
mov
in
xor
mov
ds
repnz
jb
in
test
out
mov
xor
dec
jno
fucomi
push
sub
sbb
gs
xor
cmp
jno
fildl
add
sub
int
les
push
les
pop
mov
mov
mov
fwait
sub
mov
scas
and
jb
jb
in
pop
daa
or
cmp
pop
mov
lods
imul
adc
pop
sub
clc
adc
add
nop
imul
in
in
cmp
lods
lahf
and
loopne
faddl
add
inc
inc
jmp
ret
std
bound
test
lds
notl
popf
mov
dec
icebp
movsl
lahf
and
imul
add
nop
add
jmp
lods
rcr
jnp
aad
dec
mov
sahf
xor
call
dec
loop
adc
jno
inc
ljmp
jle
mov
push
push
push
push
in
add
lcall
clc
or
adc
jnp
inc
or
push
inc
data16
cmp
xor
inc
pop
clc
add
xchg
cmp
inc
push
imulb
jecxz
sub
dec
inc
adc
jmp
adc
les
xchg
mov
incb
adc
sahf
add
cltd
lret
call
jmp
mov
subb
js
add
jo
cmc
mov
adc
add
sbb
cmp
xchg
aas
in
dec
jmp
jg
cli
js
out
je
divl
inc
mov
dec
mov
sub
push
std
push
ljmp
repz
inc
pop
xor
stc
stc
mov
mov
xchg
mov
cmp
mov
jo
js
add
jb
xor
xchg
xor
jp
clc
pop
out
inc
daa
cmpsl
add
loope
cmpsb
les
xchg
inc
lds
insb
inc
cmp
aaa
pop
adc
pop
inc
push
jecxz
das
loope
cmp
sbb
pusha
mov
jne
push
push
sub
jo
pop
mov
mov
lods
push
and
call
adc
or
mov
add
add
mov
call
mov
mov
les
into
les
add
test
std
sbb
mov
stc
arpl
je
pop
xor
lods
or
dec
test
cmp
sub
add
adc
cmp
xchg
cmp
jb
sub
adc
and
sub
xor
add
mov
sbb
jmp
and
adc
mov
call
nop
mov
sbb
cld
pusha
push
jnp
and
cmp
adc
pop
cmpsl
adc
mov
jns
out
je
pop
and
dec
jge
or
ret
jne
mov
sar
ret
xor
aaa
add
sbb
adc
mov
add
pushl
and
xor
addr16
std
cmc
jg
imul
lods
add
xchg
pusha
and
std
lcall
pushl
call
je
jmp
mov
adc
adc
xchg
incl
iret
mov
addr16
add
add
testb
add
pop
in
imul
jmp
aad
sbb
repnz
pop
flds
jmp
js
lcall
add
jae
in
xchg
arpl
adc
pop
add
aas
repz
mov
jecxz
add
push
jbe
lcall
add
pop
stos
in
call
cmp
add
pop
inc
mov
in
add
jmp
jne
xlat
xor
add
mov
adc
call
add
add
mov
out
jo
ret
adc
xor
aam
or
push
adc
call
out
das
out
ljmp
xchg
or
xchg
or
inc
or
pop
cli
jo
xchg
jle
or
mov
pusha
enter
cmc
mov
add
xor
shll
push
add
inc
mov
and
fdivs
mov
xor
xchg
sbb
add
call
loopne
sub
mov
fucom
mov
add
shll
ret
jne
xor
int
or
mov
sbb
jmp
mov
dec
aam
call
add
std
fcompl
inc
jmp
nop
or
call
dec
sbb
push
or
mov
inc
add
and
jge
pusha
adc
xor
and
das
add
mov
adc
add
std
xlat
jns
jge
es
add
and
pop
pop
jns
pop
push
jb
add
cs
mov
adc
add
add
sub
test
lret
push
add
xor
add
repnz
push
outsb
push
test
add
pop
inc
jno
je
popa
sysret
movsl
std
call
cltd
and
add
jmp
xchg
jmp
out
mov
invd
add
jmp
enter
adc
test
and
test
hlt
push
cmp
movsb
test
add
test
add
or
cmp
ja
ljmp
lea
cmp
out
sar
clc
and
xchg
pop
xor
push
cmp
cmp
out
jmp
push
mov
hlt
adc
shl
ret
xrelease
sbb
jb
lret
pushf
and
je
sbb
sbb
inc
jmp
rcrb
cmp
add
ljmp
add
add
sti
add
xor
add
xor
mov
out
into
jmp
bound
imul
test
jmp
add
pop
mov
push
cmp
cmpsl
add
jg
jmp
test
out
ss
xor
jo
mov
xchg
lcall
xor
add
sub
add
mov
fdivrp
sbb
sub
sbb
pop
add
movd
xchg
jno
out
xor
pusha
push
addl
jmp
sub
sbb
test
ljmp
ljmp
sub
jb
pop
jb
xchg
jno
call
ja
inc
bound
jae
sbb
call
mov
add
xor
inc
cmpsl
jb
push
mov
imul
loop
call
lods
mov
fs
lock
push
push
and
adc
sub
pop
xlat
out
push
int
dec
jae
sub
mov
repz
mov
ret
jb
rcl
adc
gs
add
sub
add
inc
ret
push
aam
mov
dec
call
and
jb
jmp
sar
fisubrs
adc
into
xlat
ret
iret
push
pusha
and
cmc
cmpsb
movsb
mov
jmp
mov
bound
aaa
adc
or
dec
mov
mov
mov
imul
sar
jo
add
ja
add
or
inc
jae
out
cmp
or
ja
stos
pop
inc
cs
or
std
bound
mov
adc
lock
ja
call
lods
cmpsb
xlat
pop
adc
mov
xor
mov
xor
aam
mov
adc
add
sbb
xor
xor
cmc
lods
mov
jmp
push
add
xor
inc
add
sub
add
out
dec
cwtl
cmp
sbb
insb
inc
in
jns
jmp
push
cmp
out
je
enter
in
add
mov
fmull
ds
mov
sub
or
cmp
add
add
jmp
call
leave
enter
call
add
add
or
test
lahf
jo
out
dec
les
out
lods
shrb
out
in
dec
pop
sub
sbb
and
out
add
xor
jmp
faddl
andb
xor
jmp
add
pop
std
sbb
pop
std
aam
and
add
add
call
sub
add
add
mov
dec
inc
lret
adc
xchg
mov
je
fscale
imul
cmp
sbb
mov
push
das
add
aad
call
adc
inc
mov
jle
scas
cmc
add
aaa
jae
imul
jg
movsl
cmpb
jb
dec
mov
inc
adc
sbb
incl
add
adc
in
ficompl
daa
jmp
mov
or
adc
xlat
add
ljmp
call
cmp
sbb
xorl
add
add
je
cmpsb
into
divb
cmovo
jle
test
pop
fwait
dec
mov
pop
add
pusha
daa
sbb
add
loopne
adc
lock
xor
push
add
add
dec
out
sbb
add
jge
ja
into
mov
aaa
xchg
or
add
or
aaa
mov
jge
xor
xchg
push
cmpsl
add
inc
cmp
iret
test
add
std
daa
fidivl
fsubs
cmpsb
aad
sub
mov
add
stos
cmpsl
mov
dec
imul
lock
add
lock
xchg
mov
loopne
cmp
xor
hlt
pop
aaa
sarl
sbb
or
sbb
adc
pusha
cmp
jbe
test
mov
push
sbb
int3
inc
rclb
add
out
pop
mov
sub
cwtl
popf
addr16
push
add
mov
add
arpl
mov
mov
mov
mov
adc
pop
nop
pop
jmp
add
and
sbb
push
and
lods
pop
iret
pop
std
mov
sbb
into
shrl
call
test
cmc
jae
je
ja
mov
cmp
pop
pop
pop
out
mov
and
out
mov
add
sub
adc
push
mov
sbb
add
aaa
xor
cmp
push
mov
push
push
push
out
fildl
adc
pcmpeqw
stos
out
and
in
cmp
sti
je
push
inc
and
rolb
xchg
push
add
mov
mov
std
push
test
std
je
sub
rcrl
cs
call
pusha
mov
idivl
outsb
adc
out
data16
pusha
pop
mov
aas
sbb
pop
adc
push
sbb
sbbl
aas
sbb
inc
xor
test
decb
ljmp
inc
iret
or
pop
jo
into
pop
mov
pop
popf
inc
outsl
jg
add
or
add
add
testb
inc
jmp
inc
push
xor
add
xor
insb
subb
jmp
xor
arpl
xor
fmuls
mov
pop
ds
mov
out
je
fisttpl
js
movsb
xor
pushf
std
out
pushf
das
mov
push
mul
stos
stc
je
add
add
addb
bound
add
jl
xor
test
jmp
movsl
mov
add
andl
lock
and
mov
in
cmp
addb
cmpsl
in
jno
out
das
jmp
cld
mov
or
jo
insb
add
jno
call
add
ret
pop
jo
shl
push
xorl
push
test
call
jle
jmp
in
jle
jmp
jmp
mov
movsl
call
xor
repnz
je
out
adcl
ds
std
je
nop
xchg
je
xor
jl
call
or
loope
std
mov
pusha
push
push
dec
cmovo
add
aad
dec
jle
mov
adc
jmp
shlb
xchg
repz
push
pop
dec
incb
xchg
loop
or
or
jl
inc
das
mov
fstpl
pusha
push
inc
das
add
mov
testb
inc
inc
xor
xor
push
xor
cmovo
or
roll
adc
add
add
leave
mov
push
or
sub
addl
mov
inc
jmp
fs
push
add
fisttpll
add
ja
aam
push
mov
xor
sub
xor
add
push
call
addr16
mov
push
or
and
addb
aam
pop
cmovo
cltd
popa
jnp
add
lret
add
mov
sbb
or
out
mov
scas
and
jo
xor
or
xor
adc
movsb
sub
out
int3
punpckhbw
add
filds
aad
jg
sub
or
fwait
push
and
sub
fs
sbb
iret
arpl
and
add
add
xor
inc
je
sbbb
out
fwait
insb
pusha
fidivs
jnp
pop
pusha
imulb
lods
call
insl
add
cwtl
add
add
out
mov
call
or
stos
inc
mov
je
or
jmp
xor
mov
mov
push
adc
out
dec
jno
add
cld
shr
mov
jmp
push
push
dec
lret
into
addr16
push
xchg
push
add
shl
mov
sub
pop
movsb
push
add
sahf
stos
out
cs
dec
test
cli
push
xchg
add
ret
pop
add
add
pop
push
lea
dec
dec
addl
add
insb
je
adc
or
cmpb
cli
std
jb
adc
adc
pop
sbb
mov
scas
loope
jecxz
push
push
cmp
add
add
sub
add
jbe
jbe
or
add
push
add
jmp
inc
jmp
add
outsl
dec
mov
cwtl
or
add
push
jge
fists
add
push
leave
shl
add
inc
and
add
mov
jbe
or
push
inc
cld
out
or
add
or
sbb
das
in
mov
cmpb
clc
in
add
je
shl
jg
pop
add
fsubr
or
mov
dec
std
lcall
xchg
jle
lods
push
repnz
xor
scas
out
or
add
jmp
bound
repnz
in
mov
call
push
clc
lock
repnz
sub
stos
iret
jno
imul
mov
mov
popa
fcomps
shrb
call
clc
adcb
sahf
out
mov
xchg
or
jl
punpcklbw
jo
ret
sub
unpckhps
call
add
add
movsb
xchg
xor
lcall
add
movsb
sbb
add
std
imul
fdivrl
call
sub
jns
aad
and
add
xor
out
rolb
call
jmp
add
es
add
mov
jmp
test
add
lret
jo
xor
scas
hlt
push
pop
sub
adc
fs
xchg
sub
xor
ret
call
or
sahf
clc
sub
cmpb
adc
aaa
xor
incl
add
add
xor
enter
out
aad
decl
es
sub
call
jne
and
jns
and
add
loopne
dec
out
movb
mov
sub
popa
fldcw
push
jns
and
das
add
dec
icebp
and
test
and
mov
cmp
add
push
pop
pushl
scas
jp
jmp
scas
or
push
mov
pushl
sub
jne
nop
roll
cld
fnstenv
or
jmp
js
pop
push
rorb
add
leave
add
cmpsl
in
fcos
sub
jg
decl
xchg
lcall
mov
and
jne
aas
jmp
movsl
and
or
in
ds
sar
push
lock
jmp
adc
inc
add
jmp
mov
mov
data16
push
push
jb
inc
out
mov
js
sub
ret
cs
add
sub
add
sub
mov
fwait
popa
jecxz
imul
call
or
sahf
jp
test
bound
and
loope,pt
dec
add
lock
push
insl
add
jl
jg
jae
jns
inc
shlb
sahf
and
jns
sbb
mov
mov
cltd
movsl
roll
inc
sub
fidivs
inc
and
jl
cmp
sbb
xor
mov
add
push
pushf
scas
pop
mov
gs
call
data16
int
movsl
xlat
rclb
dec
add
cmp
lds
psllq
sub
iret
jb
insl
cmp
call
dec
sub
jmp
add
call
lods
and
call
adc
adc
sahf
add
add
addr16
and
imul
imul
imul
or
inc
xorl
aas
xor
mov
push
and
imul
insb
inc
and
imul
mov
jbe
insl
in
xor
or
inc
push
adc
inc
add
add
push
add
add
mov
cmpl
lahf
inc
add
je
test
xor
shll
lcall
jge
or
sub
lea
add
mov
ds
mov
les
jmp
out
shlb
jae
xchg
in
pusha
sbb
rcr
iret
add
add
in
in
pop
add
and
push
inc
repz
nop
and
add
in
iret
push
sub
or
xor
and
xor
adc
and
flds
mov
test
in
das
out
insl
leave
out
jmp
arpl
pusha
xor
add
lret
mov
mov
adc
jbe
xlat
xor
adc
add
or
mov
or
or
jbe
ljmp
arpl
xor
xchg
out
xchg
xor
add
adcl
pop
push
les
adc
call
inc
or
repnz
jmp
xor
mov
and
jmp
daa
mov
lock
aas
test
jne
mov
call
or
call
adc
xor
xor
call
out
xor
test
mov
jmp
fildll
push
inc
lret
fs
adc
jmp
roll
jmp
in
mov
in
out
loop
filds
add
shll
xor
je
mov
nop
divb
add
call
mov
inc
add
cli
mov
add
xor
mov
cli
adcl
mov
jnp
dec
inc
mov
lods
mov
cli
add
jae
or
jns
jno
ror
inc
leave
mov
imul
mov
jno
fidivrl
hlt
cmp
push
lea
add
fstps
cmp
lret
mov
xchg
ss
push
and
mov
adc
stos
lods
test
jmp
mov
loopne
mov
fadds
into
dec
add
fisttps
add
mov
add
xchg
mov
jmp
mov
or
push
add
add
pop
pop
shlb
pop
enter
mov
xor
nop
mov
add
ljmp
dec
in
add
popa
enter
inc
add
jecxz
jmp
push
jnp
jmp
mov
repnz
mov
xor
push
fdivl
test
in
aaa
lahf
add
daa
pop
out
xor
add
jb
loopne
sti
mov
mov
jb
or
testl
xor
add
add
lret
jmp
jge
out
xchg
int3
jb
js
out
outsb
icebp
out
shr
push
cmc
mov
movsb
or
mov
and
pop
xor
push
outsl
and
add
mov
ja
ljmp
or
mov
lds
scas
testl
xor
ss
mov
jo
push
sub
push
and
add
sbb
call
push
test
xor
pop
ljmp
jl
pusha
push
and
jae
and
jb
and
pusha
jge
add
cmp
jb
daa
push
add
subl
pusha
push
dec
lds
and
pop
jo
mov
ret
add
decb
add
add
mov
cmp
push
add
or
sbb
add
fldenv
inc
mov
addl
xor
push
scas
in
cmp
mov
and
cmp
and
in
sbb
add
clc
and
popf
and
push
xor
and
xor
pop
pushl
ss
lahf
and
add
push
jle
push
mov
cmp
or
push
test
mov
adc
mov
shlb
enter
mov
sub
push
push
cmp
adc
push
enter
mov
sti
xor
jnp
or
movd
ljmp
jle
flds
jmp
add
fcomp
add
fadd
scas
add
mov
or
fwait
pusha
jno
jmp
add
pop
xor
fisubrs
icebp
cmpsl
mov
xor
mov
sbb
mov
mov
jnp
or
add
mov
pop
fildll
xchg
add
xor
xlat
add
add
js
out
outsb
aam
jg
inc
out
repnz
jecxz
data16
add
mov
jnp
jmp
jb
fsubr
inc
add
jl
repz
push
aad
insb
mov
imul
mov
mov
mov
inc
push
cmp
call
call
xor
call
out
xchg
add
dec
out
fucom
std
jb
adc
xor
stos
adc
cltd
jnp
pop
lret
mov
call
jnp
mov
je
add
shll
add
jbe
call
sbb
jno
sub
cmp
fsub
std
aad
lods
rolb
xor
push
scas
inc
decb
xlat
das
push
add
mov
inc
cmp
or
add
add
sarb
mov
mov
and
adc
mov
mov
add
adc
xor
jge
add
call
and
xor
cmova
mov
sarl
mov
shrb
or
mov
mov
sbb
xorl
jmp
jmp
jge
add
pop
flds
add
popa
mov
push
pop
pop
fstpl
flds
lea
divb
mov
mov
add
enter
lds
sbb
xor
xchg
add
add
loopne
cld
add
into
flds
cmp
pop
fcmovnu
sbb
xchg
adc
sti
int3
ret
outsb
cltd
nop
or
rcll
sub
add
into
flds
minps
andnps
rorl
push
test
xor
loopne
xor
add
add
push
mov
dec
scas
xor
dec
scas
sub
push
mov
add
or
add
xor
cmpb
out
push
or
sub
cmc
lcall
sub
out
or
pop
mov
add
add
out
lds
pop
xchg
mov
ds
sar
dec
mov
sub
arpl
loop
jmp
sub
xchg
mov
jmp
out
test
popa
imul
or
mov
int3
or
mov
and
call
lods
or
xchg
add
add
call
xor
or
out
lcall
xor
mov
fdivrl
std
jmp
sub
or
xor
add
ret
ret
mov
mov
add
xchg
sub
add
sti
mov
add
add
inc
sub
std
call
push
and
bound
add
mov
or
call
mov
pop
add
sub
adc
mov
inc
mov
divb
add
aaa
popl
ljmp
add
shlb
pop
ljmp
add
leave
mov
mov
insl
notb
sub
inc
jae
push
inc
jae
inc
idiv
je
add
pop
roll
add
movb
pop
mov
or
lret
sub
leave
lods
je
push
test
stos
enter
mov
sub
orb
stos
enter
iret
jle
iret
or
add
push
pushl
cmp
add
in
pop
mov
add
add
call
out
cmp
addr16
lods
test
and
out
jo
sti
jl
adc
add
mov
jl
hlt
in
add
insl
fbstp
test
lock
filds
pop
cmpsl
xor
push
jmp
loopne
or
imul
xor
add
sbb
xchg
cmp
add
add
mov
out
in
add
stc
mov
add
inc
add
xchg
fnstenv
jmp
xchg
test
add
out
stos
sbb
call
sub
insl
testb
push
lret
out
sti
fdivrp
bound
call
js
std
pop
add
dec
jp
call
mov
xor
mov
xor
popf
adc
call
xlat
jb
into
fidivl
sbb
xor
mov
aaa
mov
add
jl
idivb
call
pop
imul
sahf
add
aam
inc
xor
or
xchg
and
ss
add
push
leave
pop
add
inc
push
je
mov
jle
add
shll
cmpsb
enter
xor
and
xor
add
js
pop
adc
add
enter
xor
into
daa
inc
incb
jmp
add
add
sbb
in
pushl
cs
into
cmp
rorb
lcall
inc
sbb
movsb
adc
faddl
hlt
sbb
add
dec
sub
pop
add
clc
loope
addr16
dec
out
pusha
mov
and
sarl
setle
add
ds
cmp
lret
ret
sub
leave
add
cli
test
xor
add
ss
scas
jge
xchg
ss
add
pop
jl
cld
adc
mov
mov
ret
rep
into
jbe
jecxz
mov
pop
mov
mov
clc
pop
inc
jo
mov
adc
mov
sbb
jb
push
jecxz
popa
jae
jp
pop
sahf
fwait
shlb
jo
mov
or
jp
xchg
imul
sbbb
add
enter
call
jmp
arpl
je
push
addb
cmpsl
ljmp
mov
aas
fldenv
cli
add
hlt
pusha
or
push
es
hlt
test
xor
leave
imul
mov
test
add
add
and
inc
and
imull
add
inc
loope
and
push
add
insl
and
lods
and
out
add
insb
stos
stc
push
fstl
pop
lds
test
mov
incl
enter
push
add
pop
andl
mov
add
add
repnz
xchg
js
pop
shrl
std
je
icebp
mov
mov
sub
and
add
add
mov
sub
incb
pop
sub
push
add
adc
mov
sbb
mov
call
cmp
mov
lods
addr16
dec
hlt
pop
jmp
adc
jmp
xchg
imul
cmp
subl
ffree
add
jo
in
test
iret
and
leave
add
add
lock
sbb
out
sbb
add
cld
cmpl
js
out
dec
add
subl
leave
movl
leave
add
sub
ja
ljmp
arpl
xor
movb
or
sbb
fwait
in
lods
pop
in
adc
movsb
sbb
fdecstp
or
pop
add
xor
ret
mov
mov
jge
or
add
fisubrs
add
push
sbb
xchg
cmc
stos
ss
add
idivb
cmpsb
es
mov
pop
push
jmp
push
or
sbb
insl
push
incb
jmp
ljmp
cmp
add
icebp
cmpsl
int3
movsl
xor
mov
fistps
es
jne
add
iret
pop
std
push
lock
and
jbe
pop
imul
mov
out
mov
ljmp
fcomp
gs
jmp
ret
adcl
in
subl
xor
pop
popa
cmp
call
aam
add
push
xor
mov
std
sbb
push
aaa
call
add
je
mov
flds
xchg
mov
call
cmp
push
sbbb
std
in
push
inc
insb
sub
push
test
daa
decl
rcrl
sub
xorb
add
cwtl
sbb
push
lret
mov
push
test
sar
aas
cwtl
sbb
cltd
pop
dec
sbb
xor
fadds
add
xor
movhps
mov
or
jmp
cmp
xchg
push
cmp
call
imul
int3
xlat
hlt
inc
frstor
jmp
sbb
mov
jnp
stos
xor
cmp
or
mov
jl
mov
cmp
mov
mov
add
test
lret
add
aas
ljmp
pop
repnz
add
dec
aaa
ljmp
rorb
cmp
mov
add
xor
cmp
outsb
out
jae
or
and
aam
sbb
add
fnstsw
int3
xor
inc
outsl
icebp
idivb
adc
add
negb
or
jnp
add
shll
xchg
fnstsw
shl
out
popl
arpl
add
out
pop
adc
add
ljmp
push
and
cmp
shrl
imulb
movl
fdivl
out
in
xor
mov
stos
add
push
and
rcr
jne
and
std
bound
fdivrs
add
pop
jno
scas
adc
mov
jge
or
jmp
pop
add
gs
xor
jmp
sub
inc
test
mov
in
in
rolb
divl
add
mov
or
jmp
test
cs
sahf
repnz
mov
or
push
inc
lahf
pushf
xor
ss
add
pop
insb
adcl
mov
xor
and
add
cmpl
stc
mov
je
mov
mov
out
inc
test
sub
cmp
jb
add
loop
rolb
adcl
mov
or
into
cs
or
stc
mov
inc
mov
incl
xchg
xor
add
mulps
pop
neg
adcb
in
incl
scas
cli
push
outsl
adc
jl
jnp
aam
add
push
cmp
lea
inc
ret
fadd
add
faddl
push
jmp
lret
lret
hlt
movl
inc
mov
push
push
inc
or
add
inc
xchg
sti
in
shr
out
adc
cwtl
push
push
fisttps
sbb
mov
push
mov
cli
in
mov
or
aas
arpl
fidivs
out
push
xor
add
mov
in
rcrb
divb
out
push
flds
or
cld
add
xor
hlt
push
sub
add
out
jge
das
out
pop
movl
out
out
popf
adc
add
mov
in
iret
and
sbb
out
test
mov
add
iret
idivb
jmp
add
hlt
bnd
fnstenv
mov
xchg
int
push
adc
jle
xchg
add
call
int
and
es
add
dec
cs
push
call
xor
jmp
call
int
in
adc
jmp
call
xor
imulb
jmp
xor
add
into
std
and
or
stc
xchg
sub
add
xor
jecxz
xor
cmp
lea
xorb
daa
mov
jae
std
jo
and
adc
add
push
pop
insb
dec
mov
std
popf
xor
mov
ja
clc
cmp
andb
and
xchg
iret
sti
aas
mov
test
loopne
fcomp
std
das
inc
cmp
and
jmp
int
dec
add
mov
add
jmp
jg
push
cmp
xchg
xor
cmp
dec
lcall
adc
add
mov
sub
sub
jne
les
mov
arpl
mov
pop
and
inc
inc
add
and
orb
add
xorb
pushf
adc
fsubl
incl
add
mov
pop
pop
rcr
push
dec
and
xor
mov
out
sub
mov
fisttps
jne
jecxz
das
adc
xlat
adc
jne
aas
push
in
enter
jmp
xor
sub
fistpll
xor
add
mov
scas
jo
xchg
cmp
inc
pop
or
jo
add
pop
sbb
cvtps2pi
mov
out
es
fcmovb
stos
mov
pop
jg
lret
push
daa
fwait
xor
add
ret
pop
sahf
pop
add
f2xm1
std
in
subl
xor
and
adc
add
pop
or
int
or
out
insb
stos
jmp
mov
or
jmp
add
popa
mov
adc
push
or
jmp
mov
pop
mov
push
cmpsl
in
inc
cmp
shr
sub
jmp
rcl
arpl
int
movsb
out
mov
enter
icebp
jb
add
js
test
cmp
add
cs
cmp
cmp
cmp
cs
rclb
popa
std
push
push
out
mov
add
add
cmc
loop
or
and
test
cltd
testb
mov
lret
sti
jmp
cmp
popa
and
add
add
cmpb
and
jo
inc
inc
test
mov
xchg
and
mov
lcall
dec
inc
add
insb
jmp
sbb
xchg
inc
sbb
add
jb
and
shrb
inc
pop
and
dec
lret
xor
xchg
cmp
cmp
je
sbbl
imul
orl
cwtl
ljmp
pop
inc
sbb
xlat
mov
xchg
inc
xchg
stc
leave
mov
fiaddl
andl
add
xor
stc
xor
mov
mov
jmp
cmpsl
ljmp
mov
sbb
fimuls
popa
xor
cmp
xor
xchg
pop
mov
jo
loop
shrl
test
add
aaa
push
add
xlat
or
jbe
mov
and
cmp
and
xchg
xor
add
mov
add
add
out
mov
xor
mov
xor
loope
cmp
mov
mov
add
add
sub
movsl
les
or
push
movsl
xor
fisubrl
mov
int
push
mov
fistps
add
idivb
pusha
sub
xor
ret
sub
cltd
mov
mov
mov
shrb
add
pop
clc
and
xor
jo
or
loopne
scas
xor
xor
inc
or
lods
call
popa
incl
std
mov
adc
inc
daa
and
xchg
xor
addb
pusha
and
dec
jno
and
adc
lcall
add
add
pop
or
mov
adc
lea
and
xorl
cmp
adc
loope
add
jb
inc
cmpsb
push
aaa
rcrl
cmp
lret
out
add
jmp
sbb
jmp
mov
bound
mov
add
loopne
gs
jmp
scas
add
xor
add
xor
repz
cmpsl
jmp
jae
lcall
xor
int3
xlat
mov
cmpl
or
lods
xor
or
jmp
andb
add
sub
and
pop
push
std
aaa
jmp
pushl
shrl
pop
ljmp
pop
ljmp
pop
inc
jb
aas
add
add
inc
dec
push
ss
jb
add
out
cmpsl
or
cmp
or
je
xlat
stc
sbb
xor
outsl
xor
call
cmp
stos
jno
inc
daa
or
js
mov
stc
mov
shrb
or
shrb
cmpsb
xor
jno
aas
iret
adc
lret
decl
pop
pop
xor
fadds
add
xor
or
insl
and
jecxz
mov
movsl
in
inc
pusha
cld
or
adc
inc
faddl
sbb
std
push
or
jmp
call
insl
and
mov
xor
jmp
outsl
inc
add
call
insl
and
pop
sub
add
jl
jo
and
out
xor
jb
or
and
mov
pushf
lds
shl
pop
add
xor
call
mov
mov
add
leave
loope
mov
push
sti
mov
push
mov
xchg
add
aam
decl
rorb
mov
mov
sub
add
pop
and
popa
mov
pop
add
mov
cmp
mov
inc
add
je,pn
jbe
shr
inc
mov
push
mov
mov
sti
lcall
stos
and
xchg
cs
jmp
cmc
std
je
push
insb
fcoml
cmc
fs
push
mov
xchg
inc
test
cmp
and
fadds
add
loop
dec
ljmp
xchg
add
call
add
adc
jmp
inc
ljmp
sbb
mov
call
hlt
xlat
add
jne
add
pusha
jge
ret
call
and
or
mov
out
or
or
xor
fimuls
fwait
xor
jo
xchg
shrl
add
mov
pop
adc
cli
lock
mov
aad
xor
jo
jb
push
jmp
jp
add
lock
mov
imul
or
loop
add
mov
jmp
mov
leave
sahf
inc
jmp
xor
wrmsr
popf
mov
jo
add
mov
mov
divb
push
jbe
jmp
aaa
sar
add
jmp
mov
int
mov
insb
int
sub
add
add
lahf
inc
xor
lods
aam
xor
test
inc
or
pop
mov
call
test
or
dec
int3
insb
call
or
test
xor
bound
and
add
or
jle
add
or
add
xor
test
xor
add
clc
test
aaa
lret
mov
pop
outsb
xor
push
xor
unpcklps
xchg
or
divb
call
inc
and
cmp
inc
orl
jl
aas
mov
xor
add
inc
and
adc
subl
add
xor
mov
pop
add
xor
xchg
xor
je
mov
cs
add
fsincos
mov
sub
lods
enter
sub
lcall
add
jmp
jge
xchg
gs
jl
rorl
push
jge
stos
enter
adc
xor
orb
mov
add
push
push
and
add
add
movl
jbe
mov
dec
aaa
movsb
mov
mov
repnz
adc
clc
std
hlt
push
jge
stos
enter
lahf
repnz
fdivrl
inc
bound
insl
and
xor
out
mov
add
xor
mov
iret
adc
xchg
and
add
or
sub
cmpsl
jb
stc
mov
outsl
fwait
icebp
outsb
mov
sub
add
xor
xchg
sub
pusha
dec
pop
and
add
xor
push
sub
out
pop
xor
dec
adc
mov
iret
jo
add
test
xchg
daa
ret
xor
xchg
push
icebp
and
out
test
and
test
xor
std
jmp
repz
push
je
pop
call
add
fwait
test
lcall
cmpsb
xor
pop
call
das
leave
mov
test
call
jno
call
add
mov
adc
jge
call
mov
cmp
xorb
shll
push
std
push
fcmovnbe
dec
add
lret
sti
mov
add
inc
add
das
in
aad
sti
subps
push
pop
imul
rolb
cmc
test
inc
mov
or
aas
das
in
xchg
das
add
sbb
std
shlb
inc
sahf
ud2
mov
das
add
rol
and
add
setle
out
loope
inc
mov
cmp
sti
pushl
mov
in
add
adc
inc
mov
sub
ret
inc
jmp
sbb
lret
sarb
mov
cld
inc
psubsb
sarb
addb
roll
iret
xor
mov
jmp
stos
addb
rorl
adc
and
pop
dec
add
inc
inc
and
inc
pop
and
dec
iret
or
add
jne
add
jmp
sar
push
decb
pop
add
jmp
and
add
pop
inc
cmp
sarl
call
xor
pop
bound
sub
push
icebp
xor
sbbb
ja
movsl
xchg
or
pusha
bound
jmp
cmpsl
std
imul
sub
lds
lret
push
sbb
shll
add
jecxz
cmpsb
inc
mov
popa
cli
add
cmpsb
sub
and
cld
push
movsl
and
fildll
jnp
adc
sub
cmp
cs
jb
mov
std
outsl
or
in
push
sub
add
call
je
cmc
ret
loopne
gs
push
insb
imulb
icebp
mov
mov
jecxz
or
lds
add
imul
fcoml
cmp
add
gs
adc
call
mov
sti
call
sbb
pusha
lods
or
shrb
aaa
mov
jmp
and
inc
push
dec
add
test
shl
or
add
or
std
mov
repnz
jno
clc
sti
mov
fwait
add
lock
cmp
or
xchg
add
ret
xchg
unpcklps
jno
adc
out
jle
stos
incb
add
jno
adc
fmull
mov
add
jns
insb
smsw
decl
mov
adc
jg
and
cmp
dec
mov
adc
xchg
inc
mov
add
or
adc
add
jmp
roll
sbb
mov
enter
out
push
or
in
scas
add
dec
in
or
xchg
faddp
ja
fld
add
enterw
inc
call
inc
iret
mov
xchg
sub
cmp
leave
add
mov
sub
cmp
movl
addb
cmp
add
or
xchg
jmp
jmp
sub
out
imulb
bound
iret
sbb
jl
or
sub
and
pushf
das
out
mov
or
cs
mov
cs
testb
jle
jle
std
test
add
stos
popa
adc
xor
sbb
jnp
add
or
lahf
fcmovne
das
out
mov
or
imul
mov
sub
inc
fiadds
jle
jl
cld
ljmp
mov
and
daa
fdivs
add
or
test
bnd
xor
add
call
insb
and
loopne
jne
xor
jmp
xor
push
sar
add
sarb
jb
std
mov
jmp
movswl
sub
test
xchg
add
out
call
jno
and
jae
cwtl
jmp
test
mov
add
enter
mov
inc
jle
add
jno
cmp
test
add
mov
and
aaa
inc
and
add
push
inc
out
and
rolb
aaa
pop
jbe
subb
mov
inc
mov
rcll
adc
dec
xor
add
xor
and
outsl
test
aaa
ret
out
icebp
in
inc
mov
dec
sub
aad
or
jne
pop
mov
lds
sti
sarb
sti
leave
add
add
jb
and
xchg
pusha
test
inc
ljmp
or
add
push
addb
ljmp
lret
testb
and
mov
mov
sub
in
stos
add
movl
push
or
push
cmp
mov
jmp
jo
add
pusha
sbb
adc
adc
int3
sbb
adc
jo
std
cmpsb
inc
cld
imul
add
fildll
jl
or
sub
cmpsb
pop
pop
stos
das
out
push
add
and
mov
sub
xchg
out
add
movsl
imul
xor
add
test
pop
jmp
out
or
add
xor
add
scas
jl
dec
movsb
mov
dec
sahf
jl
dec
xchg
mov
in
or
add
xor
jns
enter
mov
and
lock
jmp
call
or
ret
adc
test
inc
out
xor
jne
jo
call
and
xchg
daa
jo
scas
lods
stc
inc
mov
push
mov
mov
add
and
jb
sbb
cmp
cmp
lcall
iret
scas
mov
rorb
mov
imul
add
or
addl
or
mov
orl
pusha
vmptrld
clc
or
jg
dec
and
cmp
or
xchg
aas
inc
add
leave
cmpl
lcall
mov
cmp
or
or
stos
or
icebp
xchg
sti
incl
and
inc
jp
in
push
mov
test
icebp
rorl
out
les
sub
cmpb
pop
pop
cmpsl
xchg
jl
loope
cmp
gs
andb
or
cli
add
add
jmp
mov
test
shlb
lea
out
cmp
jbe
or
adc
xchg
add
push
or
cld
sbb
or
sbb
test
mull
loope
rcll
loope
push
sbb
test
cmpsl
loop
sub
mov
fs
dec
popf
scas
fimuls
add
shrb
divb
out
cltd
ljmp
fcomi
and
xchg
adc
imul
add
xor
mov
scas
jle
stos
repnz
scas
jge
or
mov
scas
push
loop
out
mov
xor
mov
ss
repnz
aaa
sqrtps
loop
imul
add
add
lods
negb
mov
cmp
and
sub
rorb
into
out
insb
mulb
mov
pop
repz
gs
sahf
dec
out
inc
rclb
cwtl
test
cmp
mov
stos
std
fiadds
cmpsb
add
jmp
stos
std
stos
scas
addr16
or
add
sub
push
popf
test
insb
fisubrs
sti
es
repnz
pop
jecxz
or
add
xchg
aas
inc
test
jno
dec
xchg
xchg
sti
cmp
lret
mov
mov
sti
inc
repnz
ficoms
sub
incl
inc
test
ja
sti
mov
xor
xchg
add
mov
sti
paddsb
add
fdiv
add
add
lret
rorl
in
aaa
xor
mov
add
and
jno
insb
and
inc
test
jb
and
out
cltd
add
inc
cwtl
cmp
gs
mov
cltd
add
sbb
cwtl
and
cltd
add
je
sub
ljmp
xor
test
std
push
adc
or
jmp
jo
xadd
std
ja
cmp
leave
sbb
and
and
cwtl
add
add
sub
add
aas
xor
jmp
subl
out
push
ljmp
loop
add
loop
pop
insb
nop
fisttps
add
mov
fwait
daa
iret
mov
repnz
pop
das
filds
jmp
andl
xor
add
cmp
insb
scas
mov
jb
add
stos
out
jmp
cmp
jmp
js
ja
or
add
mov
sub
and
mov
ret
add
xor
xor
loop
add
das
out
fsubp
add
sbb
mov
xor
ljmp
call
pop
push
pop
call
int3
or
call
mov
subl
stos
std
push
mov
mov
call
mov
or
sub
out
jbe
in
in
add
hlt
and
push
mov
push
icebp
add
call
xor
test
jnp
and
jns
aaa
inc
xor
sti
inc
sbb
pop
lea
pop
push
jns
add
xor
and
mov
add
push
fs
jp
sti
mov
lock
incl
push
pop
add
dec
pop
add
shlb
xor
pushl
add
call
jmp
dec
aad
dec
dec
jae
cmp
xor
ja
or
add
xor
jmp
int3
or
jmp
test
cwtl
add
jb
addl
add
jmp
test
adc
dec
cltd
pop
scas
cmpsb
fsts
mov
ljmp
cmpb
add
test
test
push
add
jmp
xor
insb
sbb
add
fbstp
out
fscale
jo
and
cltd
add
jmp
andb
add
jb
push
xchg
out
jb
or
mov
add
mov
push
jmp
ds
call
pop
idiv
and
mov
lods
xor
add
mov
xor
add
xor
and
xor
add
add
add
jbe
or
insb
cmpsb
out
xor
mov
pop
add
pop
pop
scas
das
out
inc
aaa
cmp
out
push
mov
jae
fadds
ja
movsb
xchg
mov
std
xchg
in
call
add
repz
push
jb
cltd
sbb
shll
xchg
hlt
dec
mov
sub
inc
lds
mov
jge
sbb
mov
adc
shl
les
call
pop
shrb
jmp
adc
and
std
mov
repz
loopne
xor
call
or
aaa
adc
and
add
push
xor
add
pop
std
incl
mov
push
test
and
adc
add
pop
push
pop
add
xor
mov
push
repz
and
incb
inc
xchg
aaa
pop
scas
xchg
jo
fldt
add
jl
cmp
and
cmp
add
sub
xorl
jmp
add
rorl
jl
inc
and
or
out
fldenv
sub
and
jmp
xchg
jecxz
add
mov
hlt
xor
bswap
orl
pop
inc
and
pop
jmp
test
std
or
or
mov
pop
cmp
push
int3
add
add
pop
cltd
add
pusha
pop
xor
pop
insl
xor
add
add
add
jmp
nop
and
cltd
add
xchg
push
mov
je
addb
loop
pop
pop
xchg
enter
pop
mov
adc
mov
adcl
mov
mov
and
jb
add
loope
cmpsb
mov
dec
call
xchg
in
subb
dec
add
and
xor
add
add
cli
ret
sub
lcall
stos
pop
xlat
xor
repz
mov
xchg
add
xor
xor
mov
out
bound
movl
cs
fldl
or
xor
xor
sahf
insb
dec
pop
call
jo
std
insb
sub
dec
xor
std
aam
xor
add
lock
std
cltd
loop
mov
popf
and
fisubrs
jmp
pop
flds
lods
pop
sti
pop
adc
mov
push
jno
and
out
xor
test
add
cmp
imul
jmp
imul
loop
jmp
sub
fiaddl
push
inc
inc
and
sub
mov
push
pop
add
add
inc
mov
push
sbb
push
sti
mov
pop
std
call
mov
pop
add
sub
mov
cs
popf
shlb
sub
pop
add
xor
cli
cmc
test
test
add
cmp
add
inc
xchg
cmp
or
cwtl
popf
std
lcall
insb
smsw
mov
add
sarl
inc
and
sub
cmpl
add
sbb
aas
bound
sbb
outsb
xor
shll
sbb
ljmp
mov
cmp
lea
mov
add
sbb
call
dec
dec
cltd
sar
xlat
std
fsubl
jge
aaa
mov
add
repz
pop
jbe
or
add
sti
ljmp
je
pushf
sahf
add
sub
add
xor
dec
push
out
xchg
ss
bound
inc
fs
hlt
adc
sbb
add
ds
das
xor
out
and
mov
jmp
xor
mov
out
push
in
das
add
out
xacquire
push
add
imul
xor
add
mov
jle
push
xlat
push
aaa
push
incl
jo
in
jmp
mov
fidivs
negb
iret
push
add
fs
test
das
mov
or
cmp
and
out
add
pushf
mov
sbb
push
cmpsb
push
push
pop
call
add
call
add
call
popf
std
jmp
cmp
lahf
arpl
pushf
push
pop
cli
push
sbb
std
jmp
call
inc
cmp
cmp
add
xor
sub
add
mulb
sbb
push
jne
mov
sbb
mov
int
dec
push
or
call
test
add
xor
mov
dec
adc
in
cmp
dec
lret
mov
push
sbb
push
hlt
xor
push
xor
shll
inc
inc
xor
dec
push
sbb
dec
fwait
add
idivb
aad
subl
fidivs
jg
mov
xor
por
cmc
add
mov
add
xchg
lea
push
xchg
jmp
add
mov
fs
jmp
xchg
add
mov
jmp
add
mov
insb
add
mov
out
add
and
add
push
mov
jns
adc
jae
push
lret
addl
rcrb
testl
add
xlat
pop
add
xor
add
mov
xchg
xor
fdivrl
mov
std
out
scas
jne
jmp
push
loopne
mov
add
xchg
gs
insb
das
rorb
into
jnp
fs
sbb
repz
aad
xor
fadd
fwait
cmpsb
iret
rcl
out
call
sbb
jmp
iret
push
cmpsl
sbb
add
xor
repz
mov
or
xor
cld
out
jmp
pop
cmp
inc
cmpsl
xor
xor
jmp
arpl
call
hlt
fwait
mov
aam
std
jmp
out
xor
je
pop
call
inc
pushf
std
insb
test
test
popf
pushf
std
rcrb
or
mov
mov
sub
add
adc
ss
dec
into
jo
push
cmp
cmpsb
xchg
insb
xor
jmp
subl
jo
cmpsb
mov
adc
call
sub
sbb
mov
cmc
test
xchg
dec
push
or
sub
ss
pop
add
dec
insb
inc
xchg
sti
mov
dec
std
incl
add
dec
pop
add
xchg
sub
sub
sti
dec
in
shl
pushf
jle
in
cmp
xlat
xor
test
sbb
ret
push
lea
or
in
cvtps2pi
pop
inc
and
xchg
js
pop
xchg
fmuls
rcll
mov
js
pop
xchg
std
and
xchg
add
std
mov
or
and
js
filds
icebp
xchg
int3
std
testl
pushf
jmp
add
sub
js
pop
add
jmp
xchg
and
mov
add
mov
std
pop
sub
mov
mov
push
inc
jmp
xchg
and
xor
add
xor
add
out
or
fcoml
inc
xchg
pop
cmc
out
jmp
mov
ret
out
addr16
xchg
jo
xchg
out
test
imul
xor
add
add
xchg
hlt
out
jmp
popf
inc
jmp
xchg
and
xor
add
fisubs
lock
xchg
dec
sbb
jmp
cmc
out
jmp
xor
xlat
add
xchg
add
mov
xor
mov
xchg
add
dec
adc
stos
dec
xor
add
std
fidivrs
add
hlt
cmp
inc
jmp
sbb
xchg
mov
xchg
std
jb
dec
xor
jns
add
call
xchg
std
jo
mov
jmp
mov
hlt
call
insb
dec
pop
call
add
call
xor
jne
hlt
call
or
and
out
xor
ljmp
incl
xor
mov
dec
std
call
pop
xchg
push
sar
test
idiv
xor
imul
ret
xor
mov
pop
add
xor
add
xor
icebp
ds
add
add
push
insb
inc
xchg
push
and
sub
add
push
pop
add
sti
mov
dec
std
incl
xchg
cmp
sar
test
cmc
incl
addr16
adc
add
ljmp
inc
fwait
push
nop
and
mov
add
pop
cmp
pop
ljmp
insb
sub
add
add
jmp
mov
pop
ljmp
and
mov
add
btc
mov
std
dec
testl
je
andb
add
stos
pop
mov
pop
add
jmp
popl
push
and
mov
add
adc
dec
add
ja
lret
daa
and
out
cmp
xchg
iret
hlt
out
jmp
cmp
cmpsl
xor
add
add
outsb
enter
jle
popf
pop
enter
mov
xchg
dec
enter
add
cmpsl
arpl
pop
xor
add
ficoml
iret
hlt
out
jmp
pop
ds
push
pop
das
xor
add
fisubl
psllw
enter
add
xor
sarb
out
ljmp
add
add
push
pop
add
add
sub
subl
xchg
mov
stos
inc
sbb
cld
mov
das
jl
xchg
mov
hlt
call
pop
dec
pop
call
sub
std
popf
or
call
syscall
inc
jmp
out
xor
ljmp
call
int3
xchg
std
jmp
push
cmp
insb
xchg
popf
std
out
add
xor
out
test
add
xlat
stos
pushf
jmp
xchg
jne
hlt
jge
xchg
fwait
mov
adc
dec
pushl
or
ss
std
call
fwait
mov
and
aas
add
and
shrl
sti
mov
dec
std
inc
cs
inc
xor
sub
outsl
sar
push
rolb
popf
mov
hlt
std
push
inc
cmpsb
and
cld
inc
nop
adc
pushf
xchg
sub
xor
popaw
sti
lcall
push
add
inc
add
enter
xlat
call
xor
sub
jp
pop
dec
xlat
pmuludq
cmp
in
stc
inc
add
test
or
adc
and
push
jnp
jmp
add
cmpsl
imul
push
add
add
jmp
cmp
dec
pusha
xlat
icebp
xchg
ds
ret
jo
or
and
jmp
add
lret
add
aaa
mov
jns
fnstsw
sahf
push
cli
cmpb
std
xor
pop
loope
jecxz
loopne
dec
int
mov
mov
xor
out
mov
push
pop
jp
xor
add
out
nop
jo
add
test
ljmp
add
repnz
aas
cmovne
pop
and
or
int3
out
jle
inc
popl
in
out
jmp
jge
or
pop
pop
aas
xor
add
gs
pop
in
out
jmp
xor
aaa
push
fwait
add
xor
add
aas
jo
push
sub
cs
out
add
mov
fdivs
test
fs
std
sbb
mov
test
xor
bound
xor
mov
push
jbe
cmp
aam
daa
inc
jmp
stc
movb
outsb
or
mov
out
mov
mov
pop
mov
test
out
test
push
dec
pop
add
arpl
add
and
aas
loop
inc
push
mov
xor
hlt
xchg
test
mov
rclb
add
pop
and
psrad
adc
sar
gs
inc
xacquire
test
push
mov
rol
add
or
mov
add
xchg
cmpsl
divl
push
fdivrl
lds
jmp
dec
repnz
jmp
jge
sub
adc
cwtl
and
cwtl
cmp
stos
xchg
jne
stos
xchg
lret
xchg
movsl
push
stos
xchg
mov
add
stos
xchg
add
stos
xchg
out
stos
xchg
mov
stos
xchg
sti
add
xchg
fs
stos
xchg
cltd
or
add
xchg
mov
sti
sub
jmp
sub
insb
or
lcall
sub
fisttpll
sub
out
out
out
loopne
out
lock
out
repnz
out
out
out
fcomip
out
div
out
out
icebp
out
out
out
fdivp
out
div
out
fyl2x
out
out
add
fyl2x
out
stc
icebp
out
stc
icebp
out
stc
icebp
out
stc
icebp
out
icebp
icebp
out
in
out
into
icebp
out
in
lock
jmp
out
fdiv
out
shl
out
shl
out
cwtl
mov
icebp
out
shl
call
push
xor
jmp
jecxz
aas
jmp
jmp
aas
jmp
aas
dec
aas
jmp
add
mov
aas
jmp
jge
aas
jmp
movsl
mov
rorb
aas
jmp
in
xor
out
cmp
repz
or
mov
push
dec
cli
aam
push
and
loop
sub
rolb
sub
and
leave
push
and
leave
push
and
rorl
push
iret
push
daa
add
fwait
es
xchg
sub
lcall
add
dec
clc
dec
dec
pop
clc
dec
xor
xorb
xchg
test
xor
mov
cmp
clc
cmp
or
stc
inc
inc
adc
ret
adc
inc
adcb
inc
pop
adc
adc
fistl
inc
add
adc
push
cmovno
push
cmovno
and
and
inc
cmovno
cmovno
add
cwtl
adc
push
adc
jmp
outsb
adc
cwtl
mov
sub
inc
pop
sub
lea
sub
loopne
sub
cmp
sub
xchg
adc
stos
xchg
sbb
stos
xchg
push
sbb
xchg
sbb
stos
xchg
out
stos
xchg
jmp
stos
xchg
mull
stos
xchg
inc
and
add
xchg
pop
and
xchg
fsubs
stos
xchg
fsubs
sub
ret
xor
fsubr
icebp
out
in
out
or
out
movl
call
jb
add
mov
sbbb
jecxz
push
lret
mov
out
xchg
call
sbb
mov
xchg
add
insb
in
in
gs
dec
insb
in
lock
in
cmc
or
gs
push
pop
ficoms
subb
out
divb
imul
out
stos
aaa
add
cmp
jmp
jmp
dec
pusha
call
insl
outsl
or
jmp
rclb
add
pop
out
pop
ljmp
call
xor
inc
lds
ss
add
add
int
insb
sub
xor
cmp
jo
dec
insb
subl
in
and
pop
in
stc
aam
mov
sub
call
add
add
dec
jp
add
sub
insb
and
scas
jmp
jmp
add
lret
cmp
add
mov
add
mov
jle
loopne
sti
lock
test
inc
or
aam
and
test
cmp
adc
int3
std
mov
xchg
xor
lgs
mov
and
into
adc
test
sbb
add
mov
and
sub
add
and
jmp
add
bound
add
add
xchg
add
fcoml
fnsave
das
sub
xchg
je
jmp
mov
pop
test
and
add
pusha
aam
mov
jb
frstor
bound
fisttpll
scas
jg
call
outsl
imul
repz
invd
add
jmp
mov
add
adc
loopne
jmp
add
repz
cmpsb
mov
pop
add
xor
sub
icebp
in
mov
out
bound
lods
out
dec
mov
xchg
xor
je
fsubp
lahf
mov
out
adc
xchg
or
je
mov
jmp
jo
insb
out
jmp
mov
loopne
xor
add
add
lahf
jmp
out
dec
ret
add
xor
pop
or
jl
out
sub
test
add
out
imul
cmp
call
mov
pop
ljmp
insl
or
add
call
cmp
xchg
test
jo
gs
lret
add
call
icebp
xchg
call
add
xor
lods
lock
add
push
mov
jmp
pop
cmp
call
xor
jmp
call
inc
add
cwtl
xor
add
pop
add
or
add
add
inc
or
push
dec
push
aad
push
add
mov
comiss
jmp
pop
or
rcrb
pop
dec
pop
test
cmpsb
dec
jge
dec
sub
xchg
add
or
xchg
add
bound
dec
bound
adc
sub
dec
and
xlat
movsl
mov
jg
push
mov
and
add
leave
mov
fs
add
sbb
test
add
push
mov
ds
rorb
pop
add
cld
int3
cli
jg
mov
cs
pusha
mov
adc
add
ret
adc
jae
pop
mov
pop
mov
add
fstpl
lret
frstor
ljmp
lods
iret
ja
add
adc
cmp
popf
add
and
add
xchg
orb
xchg
mov
aas
mov
add
out
testb
xor
add
call
mov
jmp
out
adc
fstps
sbb
pop
clc
mov
icebp
jmp
add
jle
add
adc
pop
add
xchg
iret
adc
in
dec
iret
sbb
movl
pop
jmp
add
repnz
add
popa
sub
in
cmc
dec
or
or
stos
push
js
into
and
jo
push
adc
test
sub
mov
sub
mov
or
xchg
insb
sub
call
lret
cmp
mov
call
les
add
arpl
and
add
popa
cld
and
and
mov
push
call
mov
jmp
adcl
sub
aas
bound
shlb
pop
push
mov
xor
jl
mov
jae
std
cmp
dec
test
and
into
mov
into
mov
sar
mov
repnz
xor
add
add
orb
ret
mov
mov
adc
cmp
push
mov
cmp
subl
je
sbb
cld
cmp
xchg
jb
jmp
cli
pusha
add
xchg
mov
add
xchg
pop
pop
mov
ret
leave
in
push
pop
dec
cmp
lock
jo
add
add
in
add
xchg
mov
ljmp
add
dec
in
hlt
jns
pushf
ret
add
in
or
jmp
inc
cmp
jns
out
xchg
add
in
jmp
add
fmull
xchg
add
xchg
testl
and
mov
add
aaa
add
jmp
push
add
out
xor
add
add
out
std
ss
push
fs
wbinvd
xchg
mov
push
lahf
add
xor
bound
pop
iret
xor
jl
push
inc
xchg
add
pushf
ret
call
jb
lret
outsl
loop
jns
ficoml
bound
and
lret
sub
int3
add
jge
xor
push
sub
test
call
jb
or
sti
cmp
add
add
and
jno
addr16
pushf
jbe
cmc
lcall
inc
bound
push
sbb
xor
push
jmp
mov
and
fs
js
cmpsb
jno
cmpsl
or
notl
push
inc
dec
or
out
cmp
data16
and
call
sub
add
push
cmp
add
inc
jl
mov
add
and
out
inc
add
leave
fisubs
incl
out
ss
aaa
lret
inc
ret
out
cmp
call
dec
and
cld
xchg
and
das
add
xchg
lcall
dec
add
mov
push
add
test
add
das
test
cld
imul
stos
pushf
sub
dec
lret
xchg
or
and
testl
push
test
add
dec
daa
cld
decl
xchg
add
or
xchg
repz
sub
pop
lods
std
test
je
pop
jnp
jmp
add
jp
std
mov
mov
jmp
add
loopne
pop
and
mov
add
jp
add
add
add
jg
js
jmp
repnz
shl
out
xchg
dec
xchg
jg
jmp
je
imul
jo
jp
sarl
add
or
or
jmp
dec
and
setne
xor
add
test
jnp
push
lret
jp
inc
sub
test
in
in
mov
xorb
nop
xor
add
add
out
test
pushf
push
movsl
cld
jmp
push
mov
imul
in
iret
std
addr16
push
lods
lock
call
nop
xor
ss
sub
aam
daa
add
add
xor
adc
push
jmp
call
pusha
out
orb
out
add
dec
push
push
addr16
pop
add
lcall
push
sub
idiv
loopne
jbe
mov
ret
ja
jmp
sbb
adcb
hlt
and
clc
push
jle
push
jb
dec
pop
push
sub
arpl
call
and
cld
cld
lods
push
inc
jmp
fs
sub
xor
push
add
add
call
and
and
add
call
loopne
add
sub
lods
scas
mov
add
aas
pop
mov
or
xorl
mov
and
xor
pop
scas
sti
je
mov
je
clc
ret
clc
push
and
scas
shlb
mov
add
pop
sub
xor
call
push
cltd
and
sub
mov
inc
cmpl
out
mov
add
push
movb
jmp
jle
shlb
add
bound
jnp
add
pusha
pop
ljmp
and
mov
add
rcr
scas
jmp
add
adc
dec
pop
adc
mov
jmp
or
mov
push
pushl
add
imul
mov
or
sub
scas
xchg
push
adc
cmpsl
imul
arpl
jl
aas
or
inc
jmp
ds
clc
mov
inc
jmp
lcall
out
pop
xor
stos
lahf
add
xor
rcl
lock
iret
mov
imul
cmpsl
add
dec
inc
or
sbb
add
jmp
setg
mov
adc
xor
pop
subb
sbb
scas
xor
subb
lret
test
add
sbb
stos
xor
sbb
jae
out
push
sbb
imul
mov
sub
mov
outsl
pop
adc
sub
jecxz
adc
and
jmp
add
sbb
insb
scas
add
sti
dec
or
jecxz
sbb
jmp
std
jmp
call
dec
or
in
mov
divb
jne
inc
div
lcall
mov
push
sbb
push
call
jne
test
lock
mov
sbb
pop
xor
jecxz
add
ficoms
mov
add
cmc
push
jne
cmp
inc
incl
lods
repz
shrb
xchg
pop
std
cli
add
hlt
out
aas
je
call
das
add
subl
enter
adc
movl
lock
add
xlat
lcall
movsb
das
add
mov
sub
mov
push
inc
das
add
add
cli
adc
xchg
jo
push
jmp
psubusb
dec
add
xor
mov
lods
outsb
sub
lcall
add
xchg
pop
xor
jmp
icebp
mov
notb
stos
sarb
call
mov
jmp
cmp
cwtl
pop
or
adc
pop
inc
add
fstpl
pusha
pushf
fstpl
add
push
or
and
xchg
data16
add
add
dec
jmp
lcall
stos
xor
out
aad
xor
daa
add
imul
mov
aad
dec
sub
testl
aad
popa
mov
sub
sub
sti
add
test
add
test
loopne
add
add
xor
sbb
sub
jg
and
add
fs
stos
xor
xor
mov
ret
fsubrs
ret
movsl
insl
jb
es
push
imul
inc
sub
push
jb
fisttpl
add
loope
pop
adc
std
sub
je
push
inc
push
mov
add
add
ret
call
mov
xchg
mov
testl
imul
adc
outsb
sbb
call
data16
call
testb
in
sub
dec
mov
lods
mov
xchg
xor
jno
int3
ljmp
outsl
das
sarb
ret
inc
shlb
add
dec
push
and
fcompl
add
popf
fcomps
xchg
pushf
fcomps
imul
jne
and
dec
mov
add
xor
add
push
mov
lret
dec
sbb
xor
inc
push
outsb
std
call
outsl
std
push
stc
mov
add
mov
mov
cli
jmp
js
add
movsl
sbb
call
lds
adc
xor
sbb
or
sub
in
push
loop
or
test
pop
sbb
push
hlt
lcall
nop
dec
aas
xchg
inc
in
ljmp
inc
mov
adc
sub
mov
add
push
call
lea
je
add
negb
sbb
xor
icebp
add
subl
pushf
pop
sbb
push
fwait
xor
add
imul
fisubs
mov
out
scas
bound
fwait
xor
cmp
rorb
in
insl
out
inc
inc
bound
sti
mov
jmp
cmp
call
jmp
add
pop
in
jo
divl
jb
iret
cmp
mov
mov
iret
cmp
int3
out
mov
add
xor
sbb
jmp
stc
mov
jmp
adc
sub
xor
fs
or
xor
std
shlb
mov
push
data16
dec
mov
out
add
fs
incb
mov
push
insb
cmp
std
cmpsl
in
xchg
cmp
sub
insl
jne
dec
jecxz
outsb
add
std
cmpsl
in
push
or
xor
add
xorb
jmp
mov
pcmpeqb
jae
fsincos
or
jne
push
jmp
in
shrl
add
pushf
fs
add
adc
xchg
sbb
sub
das
jle
xchg
adc
scas
xchg
mov
add
sbb
rorb
rorb
ret
test
in
shll
xchg
add
add
movl
mov
nop
jmp
add
lahf
sub
std
pop
pushf
stc
incb
add
or
pop
sti
loopne
adc
mov
or
in
mov
xor
pop
cmp
add
xchg
inc
jecxz
sbb
mov
mov
test
push
pusha
leave
lods
adc
push
add
das
jl
cmp
into
ret
inc
dec
ljmp
add
jmp
pushl
cs
xchg
movsb
add
mov
out
push
insb
ds
jo
push
lods
insb
insb
cs
xor
mov
std
mov
out
add
cli
xor
out
mov
iret
mov
pop
ficomps
cmp
mov
add
cmp
sub
iret
sbbb
sub
jmp
jb
add
testl
ds
xchg
sub
jecxz
scas
in
out
push
jb
out
ret
cmpsb
ljmp
and
andl
in
sub
pop
mov
rcrl
inc
call
push
inc
add
dec
add
sub
pop
pushf
loope
ret
add
jmp
add
scas
xor
cld
test
jmp
and
pop
call
mov
or
mov
call
sub
in
andl
inc
addb
test
std
je
lds
mov
hlt
incl
sarl
test
dec
push
cmp
dec
or
rorb
xor
add
jb
mov
and
out
mov
and
push
push
add
inc
adc
inc
cld
jae
add
jae
ret
add
push
dec
stos
push
jmp
mov
adc
inc
or
pop
fwait
adc
inc
add
test
push
mov
pop
test
xchg
push
push
xor
call
add
add
pushf
jae
loop
xchg
sub
add
imul
cmpl
add
cmpsl
jne
push
hlt
push
inc
or
or
mov
pop
add
xchg
jle
pop
ficomps
add
sub
xor
cmpl
daa
xor
adc
xor
fcmovnu
lock
mov
jle
add
add
xor
xor
popa
adc
inc
jmp
xchg
aaa
or
jb
dec
push
adc
pop
mov
inc
rcll
push
cs
mov
jg
adc
cmp
xchg
add
sub
add
or
sti
popa
test
cmp
popf
mov
xor
cld
mov
add
add
mov
add
call
test
cmpsb
call
cld
mov
std
out
fldenv
je
push
call
fs
add
bound
jmp
mov
shll
or
sbb
adc
mov
subl
and
rolb
fdivrs
xor
jb
call
call
xor
jge
call
xor
jne
jge
cmp
xor
ss
js
sub
pusha
adc
push
xor
mov
das
cmp
xor
orb
jno
or
add
pop
mov
call
add
test
mov
test
push
jb
ret
call
xor
stc
xor
lcall
mov
scas
push
add
jne
cmp
xorb
fists
add
je
dec
andl
pop
pop
cmp
or
pop
mov
mov
pop
mov
ret
imul
popf
fstl
and
adc
add
inc
lahf
jno
pop
mov
push
lock
jmp
lret
call
pusha
dec
pop
mov
xor
or
xor
mov
scas
aad
fisubrs
sar
cmp
mov
add
bound
mov
call
add
das
fidivl
out
adc
bound
test
xor
jg
fnstsw
pop
ds
mov
push
clc
mov
pop
fbstp
out
or
mov
pop
imul
mov
popa
inc
iret
cmp
jb
add
jmp
out
add
jno
call
bound
pop
ss
out
xor
shll
cmp
call
jb
pop
push
pop
out
xor
call
test
mov
push
xor
call
arpl
jmp
aas
mov
jmp
mov
or
cmp
lock
cmc
or
mov
std
jmp
add
stc
std
mov
out
data16
xchg
add
and
xchg
mov
push
add
xor
mov
xor
fisttps
ret
adc
hlt
cmp
xor
add
cld
inc
test
std
incl
and
iret
jp
jns
xorb
loopne
xor
inc
out
push
dec
addl
enter
out
sbb
lods
popf
or
je
inc
scas
push
add
push
add
jmp
daa
add
jle
shlb
lods
mov
dec
add
and
sbb
out
ljmp
jmp
inc
inc
push
jno
ftst
aad
add
dec
daa
add
daa
add
loopne
ret
je
add
rclb
add
lret
cmpb
inc
aam
jmp
daa
add
cmp
int
sub
add
int
je
js
pop
pop
jle
adc
cmc
mov
xchg
push
xor
gs
jb
pop
cmp
arpl
xchg
out
dec
scas
adc
dec
mov
in
mov
add
inc
xchg
std
pop
pop
call
pop
and
jns
xor
sbb
clc
or
jmp
cld
or
lock
xchg
mov
sbb
lret
fisubrl
pshufw
out
xor
out
daa
adc
jmp
or
dec
inc
scas
das
out
and
scas
mov
std
imul
mov
push
pop
pop
mov
xchg
jmp
add
sbb
aaa
jmp
cmp
out
stc
pop
cmp
and
xchg
push
jmp
cmpsl
dec
sbb
cltd
call
repnz
call
push
test
aaa
outsb
je
jmp
xor
in
call
add
in
mov
dec
jle
out
xor
icebp
jmp
xor
pop
add
xchg
fs
call
and
mov
xor
lea
cmp
push
and
and
leave
mov
mov
and
mov
sbb
shlb
mov
cld
je
pop
cld
je
pusha
cld
je
dec
dec
lea
dec
push
push
and
pop
push
ret
inc
dec
cmp
xor
lea
add
dec
inc
push
call
hlt
ja
adc
dec
jl
popw
incl
dec
test
stos
dec
into
mov
dec
add
xchg
nop
adc
push
inc
add
test
xchg
rcrl
andl
add
jl
outsb
push
adc
push
sub
adc
or
or
push
int3
ret
jl
jmp
pop
push
add
std
inc
adc
in
adc
mov
les
jb
xor
rorb
inc
je
jno
sbb
andl
and
sbb
sbb
mov
dec
jmp
filds
push
pop
sub
jmp
daa
pop
out
call
fwait
sub
out
bound
aas
push
xor
aad
sti
mov
ret
pop
sub
incl
xchg
add
daa
add
repnz
out
jmp
in
and
adc
in
int3
out
jmp
mov
fdivrs
inc
jmp
sahf
stc
add
daa
add
lret
inc
add
push
inc
add
out
add
adc
mov
push
test
inc
add
cld
dec
rorb
inc
pop
sub
test
xor
push
adc
mov
add
inc
adc
fmuls
cmp
xor
sub
jecxz
cld
mov
test
and
mov
push
or
aad
mov
repz
enter
mov
push
loop
mov
test
cli
cmp
std
cmp
fstpt
or
sarb
jmp
insl
fldl
push
mov
add
lea
sub
push
xor
mov
add
add
ds
loop
cmc
stos
mov
in
out
sti
mov
int
mov
and
sbb
add
scas
rorb
jbe
jmp
mov
xchg
dec
mov
and
aas
cmpsb
je
sbb
jmp
loope
add
jge
movl
add
hlt
inc
and
add
mov
mov
subl
sub
sub
and
mov
add
ds
cwtl
lea
std
divb
aas
jmp
cld
dec
adc
sbb
mov
les
sbb
into
add
add
lret
sbb
call
and
xor
rol
movsl
and
in
sub
clc
dec
mov
test
inc
xbegin
mov
out
dec
imull
pop
push
popa
stos
inc
popa
sysret
inc
ror
jae
popf
xchg
fdivr
jle
push
rorl
fwait
jmp
jo
testb
xchg
ret
sub
enter
adc
sbb
push
movsb
lret
adc
inc
push
add
jo
add
sub
add
lret
testb
and
std
insb
scas
fstl
bound
or
divb
or
bound
dec
xchg
adc
xor
roll
dec
add
add
out
xor
xchg
insl
insl
inc
sub
xor
xorl
mov
add
xor
and
fnstsw
xchg
mov
mov
out
pop
call
dec
add
negb
push
push
push
mov
stos
jp
jge
inc
and
aad
mov
push
adc
push
adc
add
xchg
xor
mov
lds
adcl
dec
cmp
or
and
mov
dec
arpl
inc
xor
je
ja
add
sysexit
inc
xor
inc
and
pop
andb
in
and
pop
arpl
jmp
add
or
mov
es
int
add
add
int3
aas
and
cmp
lds
sarw
loopne
and
mov
add
das
data16
daa
outsb
jmp
cmp
adc
es
mov
add
dec
cltd
icebp
mov
xchg
sarb
sub
gs
jo
pushf
dec
test
add
lahf
gs
scas
insl
in
xchg
cmp
add
xor
and
ror
in
add
lds
jl
or
pop
jge
or
dec
sub
sarl
or
jecxz
lods
and
ja
jbe
out
or
add
xor
pslld
jecxz
dec
push
popa
stos
jb
dec
mov
cmpsl
or
fwait
out
in
add
add
sub
cmpsl
add
sub
xor
fs
addr16
sbb
pop
cmp
cmc
and
push
jmp
pop
pop
int
add
das
pop
sbb
mov
jg
pop
ds
xchg
loop
push
mov
flds
adc
loop
out
ljmp
adc
loop
push
mov
mov
add
and
out
jle
inc
sub
subl
into
test
rclb
repz
cld
mov
adc
mov
push
mov
push
and
adc
jmp
imul
or
arpl
push
pop
mov
rcl
cld
cmp
sub
test
add
incl
pop
test
bsr
mov
mov
lretw
push
push
pop
adc
push
mov
or
mov
and
pushf
call
add
int3
pusha
je
inc
inc
jg
inc
add
jmp
stos
mov
push
sub
dec
iret
cld
and
or
add
add
hlt
add
or
add
or
mov
cmp
jbe
push
pusha
test
cmp
repnz
ljmp
add
sbbb
push
fs
sahf
add
fists
das
push
mov
inc
jmp
test
cmp
popa
insl
imul
xchg
xor
test
mov
adc
mov
add
imul
call
inc
jmp
cmc
out
int3
and
mov
xor
cmp
cmp
das
push
out
xor
sti
scas
ljmp
mov
add
cmp
add
push
xchg
out
in
and
add
je
jns
jecxz
jns
out
cmp
mov
dec
arpl
fdivs
les
pop
add
add
out
and
xlat
lds
add
les
in
xor
add
adc
mov
sahf
mov
dec
adc
fmuls
add
add
pop
les
push
ss
push
push
dec
inc
mov
sub
sub
mov
aad
aaa
cmp
sbb
pop
repz
test
dec
add
add
call
cmp
dec
arpl
ljmp
sbb
or
ret
mov
cltd
out
pop
mov
jo
jmp
push
mov
inc
decl
inc
subl
add
filds
mov
out
push
int
jns
xor
xor
jne
pop
xor
sti
adc
loope
cmp
orl
add
divl
mov
test
xchg
sbb
testl
mov
xor
pop
mov
or
imul
enter
push
sti
ljmp
out
or
or
push
cmc
cmp
mov
out
in
cld
adc
test
xchg
push
mov
adc
fldcw
jne
pop
xor
fistps
add
iret
jae
and
ret
int3
lret
inc
mov
movb
mov
sub
ljmp
ds
add
adc
push
add
fnstenv
in
add
jmp
inc
xor
xor
or
fiadds
or
test
lods
pop
push
add
jmp
lret
daa
add
add
push
enter
and
mull
aad
ret
lahf
adc
sbbb
jo
dec
jne
ret
imulb
adc
add
or
aas
adc
fucomip
movsb
dec
pop
add
xor
adc
arpl
xor
enter
pushf
mov
inc
and
and
adc
add
mov
sbb
in
cmp
std
cmpsl
dec
out
sub
fldenv
pop
andl
mov
add
push
dec
mov
imul
fldt
das
add
arpl
in
shlb
std
cld
hlt
and
cli
jo
stos
ja
pop
stos
mov
mov
scas
xchg
push
or
add
inc
sar
call
call
repz
sti
mov
add
test
lret
mov
add
xchg
test
pop
add
call
in
js
or
inc
add
faddl
add
xchg
and
add
cmp
in
mov
add
out
lock
decl
sub
popa
imul
shrl
adc
ret
inc
push
push
lret
ret
sbb
sub
std
lcall
je
jns
inc
iret
inc
mov
testl
dec
imull
push
rorl
push
add
xchg
adc
add
sub
jmp
fistpl
push
add
sbb
and
mov
adc
add
jno
add
pusha
daa
mov
insl
dec
jae
adc
jmp
mov
daa
adc
sbb
dec
dec
add
adc
inc
pop
test
xchg
and
sarb
pop
cs
pop
xor
pop
xchg
pop
push
add
mov
shlb
sbb
add
xor
sub
xor
andb
mov
push
cmp
insb
jbe
add
or
mov
pop
ficoms
sbb
lcall
dec
ret
outsl
mov
mov
dec
std
test
xor
add
imul
fs
sbb
jo
pop
push
into
push
outsb
adc
add
mov
xchg
inc
std
jmp
mov
jge
jmp
xor
add
add
xor
ret
dec
jp
inc
je
hlt
mov
call
jmp
pop
jbe
jmp
data16
insb
lods
sub
call
pop
push
jmp
and
pop
int3
xor
jmp
fcoml
sbb
jl
call
inc
cmp
mov
aam
call
call
add
add
xorl
test
call
push
in
jae
mov
add
push
xor
repz
cmp
jg
add
mov
je
lret
call
popf
jg
add
xor
and
aam
push
add
push
mov
xor
xchg
adc
add
mov
jmp
sbb
add
jns
jge
call
and
lret
mov
push
outsl
jmp
add
lcall
xor
adc
call
test
mov
and
std
xchg
fidivrl
jo
jl
xlat
imul
mov
subl
adc
pop
add
std
mov
jmp
or
mov
hlt
add
jmp
mov
lods
mov
fs
xchg
ret
adcb
add
lds
mov
inc
in
or
lds
std
mov
cmp
jo
xlat
andb
icebp
imul
add
cmp
xor
jns
add
dec
inc
mov
jp
out
movsl
jecxz
xlat
sub
jno
fcoml
jmp
fs
add
outsb
jns
fidivrl
add
sbb
insb
pop
popf
sbb
jno
inc
ss
hlt
cmpsb
add
pop
leave
mov
inc
adc
out
pop
mov
out
insb
inc
push
and
out
ljmp
stc
jno
jo
inc
sahf
push
push
cmp
dec
sub
pop
in
push
call
lret
mov
add
call
cmp
fsubl
lret
pusha
imull
inc
subb
lock
das
xorl
dec
inc
jmp
xor
sbb
and
nop
out
call
repz
aam
sbb
jmp
test
xlat
fisubrl
push
and
sub
xchg
ret
mov
push
push
add
sbb
test
jno
push
xchg
and
adc
sub
inc
xchg
mov
je
push
decb
adc
sbb
xchg
add
pop
push
push
jne
and
adc
shlb
mov
adc
mov
lcall
and
pop
gs
fdivr
push
cmp
push
aad
lods
adc
test
in
or
add
mov
rclb
push
sar
negb
inc
jmp
inc
or
sarb
jmp
add
fistpll
pushl
sub
lret
out
decb
sar
ljmp
push
fwait
dec
xchg
dec
xchg
sar
fidivs
inc
je
xchg
incl
add
push
mov
xchg
lret
add
decl
xor
pushf
mov
mov
out
cmpsb
and
push
sbb
ljmp
stos
stos
pop
repz
popa
not
daa
imul
cs
xchg
mov
add
push
xchg
mov
add
imul
add
xor
xlat
enter
xchg
out
add
jo
ret
out
ljmp
lea
mov
sub
stos
add
inc
fs
mov
add
dec
test
test
mov
popf
inc
dec
call
outsb
xor
jmp
mov
notb
gs
imul
xor
cltd
gs
dec
cmp
aaa
call
add
decb
add
lret
loope
pushf
xchg
call
jecxz
imul
out
cmp
lcall
sar
call
aam
jle
lret
cmc
add
sub
test
dec
mov
and
stc
sub
mov
ds
add
mov
rolb
push
call
out
inc
add
add
in
mov
add
xor
adc
int
xlat
test
dec
decb
ret
inc
pop
pop
add
ret
int
pop
pop
add
or
xchg
xor
push
stc
ret
push
or
add
insl
cmp
pushl
loop
inc
inc
mov
or
mov
std
jae
ret
jne
fnstcw
jmp
jb
repnz
stc
add
stos
inc
xchg
inc
cmc
add
test
por
jb
sar
jne
je
ds
std
pushf
out
cld
jmp
in
mov
add
jmp
inc
je
divl
aaa
dec
add
xchg
pop
push
adc
dec
jle
daa
dec
add
xchg
add
xchg
sbb
fildl
add
insl
sti
add
jmp
inc
je
pop
jno
pop
push
sar
add
loopne
cmp
mov
mov
gs
imul
add
shll
cmp
rcll
stos
xor
add
in
mov
jnp
cmp
jb
push
repz
aam
jne
int
out
mov
call
inc
sbb
jno
fsub
sbb
mov
add
mov
clc
pop
mov
sub
xor
mov
add
jge
or
jno
sbb
in
dec
cli
and
outsb
mov
das
mov
add
call
jne
xchg
mov
lahf
repnz
mov
mov
xor
mov
test
add
call
test
clc
inc
test
xor
jmp
arpl
je
aas
jb
cmpsl
add
fdivs
out
lods
inc
test
in
add
das
test
jecxz
add
and
sub
add
sub
mov
pop
xor
mov
call
cld
adc
jb
adc
push
outsl
std
test
inc
lea
dec
push
mov
cli
push
sub
adc
add
mov
je
mov
cld
test
push
mov
inc
aaa
fwait
xor
shrl
mov
pop
dec
lea
sbb
dec
ss
cs
cmp
xor
int
mov
cmc
jae
add
push
jmp
push
das
shlb
pop
out
mov
pop
xor
add
sub
mov
stos
inc
jp
add
xlat
push
ret
and
and
aas
fistpl
ret
daa
jb
add
add
add
pop
adc
mov
divps
pop
dec
jb
pop
call
inc
inc
sar
pop
add
add
bound
push
incl
add
jmp
sbb
fiadds
add
stos
sti
stc
mov
xor
inc
add
mov
cwtl
arpl
idivb
cmp
pop
inc
cmp
xor
cmp
add
out
enter
adc
pop
mov
in
lahf
adc
jp
loope
cmp
jmp
xchg
inc
out
xor
lds
out
jae
push
jecxz
add
call
loopne
add
cmp
pop
fbld
cmpsl
add
cmp
and
lock
ret
cwtl
movsb
out
add
jmp
pop
mov
jbe
out
push
or
add
shlb
jmp
cmp
std
jmp
add
jmp
into
xor
sub
call
and
gs
jl
test
add
insl
xchg
add
call
jg
jmp
mov
std
insb
jae
sub
xor
add
mov
push
adc
push
std
fs
jne
in
and
sub
xor
cmp
imul
or
std
sub
pop
push
pshufw
rcrl
and
inc
add
out
or
inc
xor
inc
add
push
or
add
lea
xor
movsb
lret
test
aas
and
add
add
mov
push
adc
inc
xor
add
cmp
cli
je
add
adc
and
shll
push
push
adc
ret
andb
or
sub
push
add
les
jae
add
sbb
add
jb
and
data16
and
arpl
dec
add
cltd
or
cltd
or
mov
and
jne
mov
lds
mov
lds
mov
lds
rorl
add
cmc
jo
add
cmp
add
pop
cmpsb
stc
mov
jnp
or
into
mov
stos
lret
xchg
loope
dec
sbb
adc
insb
add
push
mov
push
mov
call
add
fisttpll
add
inc
fs
lods
std
add
xor
enter
pop
sbb
bts
push
enter
scas
or
subb
clc
jle
or
fucomi
xor
add
add
nop
adc
jmp
pushf
sarb
xor
pusha
add
movsb
adc
aad
and
xchg
pop
mov
mov
dec
aas
sub
mov
jmp
xor
ljmp
adc
push
xor
std
jmp
call
or
sub
stos
inc
inc
or
sti
mov
adc
xlat
enter
xor
sbb
sti
lock
xor
jmp
pusha
xor
add
xchg
adc
pop
and
pop
push
lcall
mov
and
mov
femms
popl
add
pop
push
push
int
adc
outsl
std
test
das
add
pusha
cld
je
add
je
sbb
add
xor
aas
sub
add
adc
push
add
std
ljmp
xor
shrb
push
lcall
adc
lods
clc
lcall
add
jmp
sar
fimuls
inc
jmp
rorl
sarl
stos
popa
adc
das
sub
push
int3
mov
adc
pop
xor
mov
mov
sub
pop
out
add
push
lahf
clc
cld
push
rcr
inc
jmp
pmuludq
pop
add
dec
fiaddl
mov
add
sub
pop
pusha
in
mov
inc
rorb
cmc
inc
fldcw
inc
std
jae
out
ret
mov
inc
jge
push
xor
movsb
mov
xchg
mov
sub
xor
icebp
in
movsb
xchg
sub
ret
xchg
inc
out
data16
sbb
lock
sbb
movntps
mov
fbstp
mov
add
mov
call
sti
jo
inc
out
xchg
pop
sbb
add
movsl
subl
cli
mov
cwtl
and
and
pop
arpl
lods
daa
out
aam
sti
orl
mov
popa
jl
adc
std
push
xor
pushf
add
hlt
sub
jae
dec
inc
adc
test
pop
xchg
sub
xchg
and
inc
jmp
andl
hlt
lock
ret
arpl
fld
mov
mov
sbb
into
sub
adc
inc
inc
push
jle
cmp
faddl
inc
inc
jmp
call
xor
inc
xor
mov
add
push
call
test
and
inc
ret
pushl
xchg
test
or
inc
stc
in
mov
pushl
inc
sti
jne
std
sti
jne
xchg
adc
xchg
repz
pop
iret
jb
add
test
imul
jno
sub
mov
push
scas
shlb
cmp
cld
je
xchg
jno
leave
decb
add
ljmp
jmp
xchg
jno
lea
or
call
ja
inc
jmp
ret
pop
sub
add
test
cmp
call
jecxz
call
addr16
in
pop
add
out
lfs
js
repz
jle
pushf
pop
push
adc
mov
adc
repz
notb
ficoms
pop
add
push
mov
outsl
lock
jmp
mov
daa
aad
push
dec
cmp
inc
je
repnz
add
add
sti
cmpsb
xlat
pop
jo
clc
mov
sub
arpl
inc
push
sub
mov
clc
xor
ret
fmull
mov
jmp
jne
pop
adc
push
cvttps2pi
out
add
stos
movsb
iret
push
fdivs
mull
inc
jb
hlt
mov
shlb
sbb
clc
inc
mov
fsub
sub
out
mov
testb
mov
sti
xor
sbb
and
adc
arpl
xor
addr16
inc
jmp
hlt
mov
stc
gs
push
cmp
std
ds
inc
std
mov
add
aam
jae
xchg
sub
in
test
pop
mov
inc
add
cwtl
inc
jmp
cwtl
mov
call
out
addb
je
or
mov
sbb
lret
fcmove
lahf
sbb
sbb
std
sbb
sub
add
add
mov
in
pushf
xor
add
into
xor
push
cltd
add
mov
xor
adcb
add
mov
or
in
sti
fldenv
jno
jl
jno
in
add
inc
xchg
icebp
pop
ret
aaa
or
pop
aaa
mov
ret
sub
xor
push
push
push
inc
push
je
or
add
out
ss
ret
inc
cmp
mov
aas
jmp
lahf
pop
stos
sbb
inc
sub
mov
pop
xchg
insl
sub
sbb
je
jno
xchg
sbb
notb
mov
outsl
jle
int3
push
xchg
aas
and
into
xlat
sbb
outsb
sub
pop
mov
popf
xlat
cmp
add
add
mov
add
add
hlt
sub
add
push
mov
xor
sbb
test
xor
sub
adc
fwait
sub
clc
xchg
pop
adc
insb
dec
pop
call
xchg
test
mov
cld
adcl
inc
cmpsl
add
xorl
sbb
push
call
sub
xchg
adc
add
pop
pusha
add
add
adc
push
into
in
sbb
pop
mov
insb
inc
incl
adc
mov
sbb
enter
xor
adc
adc
push
imul
jmp
les
in
xchg
inc
jmp
lock
xor
fs
jb
je
push
add
mov
loope
fdivr
inc
inc
mov
mov
lcall
inc
and
inc
inc
pop
je
mov
mov
adc
in
push
pushf
pop
mov
icebp
jb
mov
out
jno
mov
sub
sub
fsubrs
xor
cmp
sub
lods
stc
or
xor
mov
add
pop
jae
fistpl
jno
int3
or
xor
mov
sbb
mov
add
out
pop
adc
data16
push
cmp
add
xor
ljmp
roll
enter
sar
xor
cltd
js
fisttpll
mov
xor
imul
mov
je
mov
add
add
lahf
xor
sub
xor
scas
cld
cmp
test
mov
mov
and
fadds
movsl
repnz
jb
loop
je
xchg
inc
sub
lcall
and
xor
sbb
int
cmc
pop
imul
sub
or
or
aas
adcl
add
xlat
xchg
cmp
inc
push
fcoms
test
jb
xor
sub
xlat
imul
pop
pop
mov
insb
push
cmpsb
pop
fs
ret
out
imul
push
add
xor
push
imul
test
xor
out
sub
push
add
xor
imul
jb
lea
add
dec
xchg
or
into
mov
mov
cs
push
adc
shr
imul
sbb
jb
enter
stos
push
push
bound
ja
call
pop
testl
add
pop
and
test
std
pusha
push
lods
aas
jmp
loope
lds
je
cmpb
sbb
and
add
pop
xchg
add
out
cwtl
lret
xor
repnz
and
mov
push
hlt
sub
call
push
call
in
pop
mov
or
insl
and
pop
test
add
push
sti
call
out
or
ret
roll
push
lods
loope
cli
test
push
mov
lock
test
add
dec
push
loope
adc
mov
stos
inc
cld
add
addr16
mov
and
shrb
rcrb
mov
fmull
inc
inc
jne
mov
and
sarb
jne
mov
aad
in
push
jmp
in
sub
flds
subl
insb
or
movsb
push
std
ficomps
jmp
dec
std
outsb
sti
int3
shld
add
sbb
pop
inc
pop
adc
lods
cmp
in
lcall
imul
das
add
add
bts
jle
xchg
fcoml
pop
pop
sar
xchg
sahf
sti
push
int
shll
push
sbb
and
ds
scas
imul
add
dec
test
call
mov
imul
add
lock
mov
test
dec
jecxz
adc
inc
popa
les
imul
add
adc
out
xor
cwtl
sub
out
mov
push
cld
daa
popf
ret
or
push
push
lahf
dec
out
imul
out
push
xor
mov
add
sbb
jne
and
adc
xor
mov
decl
cmp
jmp
push
or
lods
add
call
and
fs
xor
jmp
enter
pushf
dec
sub
in
mov
push
and
add
popf
addb
lods
cld
and
mov
stc
jge
dec
int
add
aaa
divl
call
jo
add
jb
and
sbb
loopne
pop
fs
xor
fidivl
lea
imul
stos
testl
ret
add
add
inc
aas
dec
or
sbb
mov
call
push
add
test
call
test
xchg
xor
fnstcw
adc
add
add
add
enter
xor
xor
push
std
fistpll
push
jmp
xor
js
dec
cmp
dec
inc
movlps
vpunpckhqdq
mov
or
add
add
mov
sub
sbb
stos
xor
pop
inc
adc
bnd
ljmp
mov
addb
or
pop
imul
mov
xchg
xchg
repnz
dec
and
mov
ret
cld
cmp
test
xor
jg
xor
add
or
jno
add
and
out
add
les
pop
xlat
cmpsl
mov
mov
cmp
in
pop
push
call
movsl
das
out
call
jne
arpl
jne
out
pop
push
add
and
fcoms
iret
pop
mov
push
push
add
xor
jmp
out
push
sub
jo
lret
xor
pop
fucom
add
mov
scas
push
add
inc
outsb
mov
mov
mov
mov
and
xor
ret
loope
lock
and
xor
jmp
test
jae
arpl
jae
cmp
and
mov
cmp
push
adc
std
gs
and
xor
jae
add
sbbb
add
mov
push
aad
ljmp
or
add
inc
mov
dec
adc
insl
inc
std
ljmp
das
idivb
dec
and
jl
shll
test
mov
xchg
add
xor
jne
mov
and
jg
or
stc
add
pop
cmp
jle
mov
xorb
mov
push
test
xchg
xor
or
test
add
xchg
test
xor
add
test
nop
inc
xor
call
mov
xrelease
leave
icebp
or
clc
and
cltd
icebp
or
jmp
add
mov
rcrb
int
add
ljmp
inc
out
mov
pop
jmp
in
mov
ss
out
push
add
outsb
dec
rorb
pop
lret
dec
dec
std
add
pusha
pop
pop
cmp
or
sbbl
addb
or
xchg
test
push
es
mov
arpl
pop
push
jl
pusha
cmp
or
popf
rol
pop
ljmp
shlb
and
sub
jmp
repnz
ja
jmp
add
xor
jo
pop
cmc
jle
push
clc
int3
fld
les
sarl
mov
jae
adc
push
xor
daa
repz
out
xor
dec
insb
xor
enter
out
jae
out
cmp
mov
cmc
mov
sbb
add
jo
pop
filds
jmp
and
xor
add
movsl
jp
in
call
lods
sar
adc
xor
movsb
and
cmp
cld
jl
inc
jmp
and
sbb
fnstsw
mulb
imulb
inc
daa
fsubs
cmp
movsb
insl
mov
sub
or
jg
or
in
pushf
hlt
mov
loope
call
push
add
push
add
xchg
cmc
xor
je
mov
clc
shl
mov
frstor
aad
adc
pop
in
cld
test
xor
idivb
dec
add
mov
shll
lock
jle
push
dec
jmp
hlt
push
cwtl
xor
xchg
xor
inc
ret
jne
fwait
into
call
sarl
add
push
ficoms
call
addr16
decl
test
iret
cmp
clc
test
xlat
sbb
sar
loopne
or
ret
test
fmull
mov
int
ljmp
decl
scas
mov
push
aas
push
jo
dec
adc
shlb
rorl
lea
xlat
dec
adc
push
sar
add
aad
sbb
sarb
mov
or
push
ss
ljmp
daa
call
cmp
mov
mov
out
in
dec
fs
aas
divl
js
lods
aad
hlt
xorl
fwait
pop
aam
fbstp
js
lods
lods
cld
push
pop
hlt
pop
pushl
js
test
add
add
add
push
arpl
fwait
insb
pop
js
pop
fisttps
dec
jb
xchg
out
out
jmp
sarb
jl
mul
cmp
add
insb
push
cmp
lcall
cmpb
int3
xor
push
cmp
lock
add
sub
mov
mov
mov
pop
fsubrl
push
test
add
sbb
mov
jp
adc
adc
add
mov
adc
add
xchg
pop
adc
out
pop
or
lock
push
dec
shll
std
jmp
jp
mov
bound
pop
cmp
inc
cltd
and
call
pushf
and
lcall
pushl
mov
add
jp
sti
ljmp
clc
xor
sti
push
or
in
push
xor
push
in
push
inc
jmp
push
aam
push
push
cwtl
push
or
push
inc
or
inc
add
push
or
or
xor
xchg
decl
inc
fsub
push
call
bound
pop
pop
mov
or
lods
jmp
add
xchg
xor
push
insb
xchg
pushf
and
sub
jge
sbb
or
add
stc
mov
pop
lods
mov
pop
scas
out
sub
add
fidivl
das
inc
inc
pop
add
mov
add
pop
fiadds
pop
add
add
xchg
rol
hlt
xchg
cmpl
int
add
fdivl
add
ja
sbb
sarl
add
test
add
or
add
loopne
test
jbe
subb
out
add
add
add
xor
add
jp
push
adc
pop
shll
out
inc
adc
sub
push
cmovge
add
xor
insb
insb
add
cwtl
dec
cmpsb
popl
add
dec
ljmp
xor
xor
sbb
das
out
cmpsl
dec
xlat
fucomp
sbbb
dec
xchg
fdivs
out
daa
dec
testl
cmp
cmovge
add
mov
push
fisubl
std
jmp
and
push
xor
cmp
fwait
mov
pop
push
call
add
ljmp
lea
inc
std
jge
jnp
adc
je
inc
dec
xor
mov
int
sub
xchg
test
insb
and
cwtl
xchg
cwtl
adc
icebp
fists
fs
popf
cmp
push
test
fs
and
inc
adc
adc
sbb
and
sbb
sldt
push
shll
adc
enter
pop
loope
and
sti
adc
fld
and
adc
add
push
aam
into
call
std
lret
sti
ret
mov
inc
rol
xchg
push
mov
std
jae
sub
jne
shlb
call
add
add
jmp
cmc
mov
add
sub
inc
xchg
pop
mov
cmp
add
xor
test
or
ficomps
in
addr16
sbb
mov
and
cmpsl
cmc
mov
cmp
xchg
ret
hlt
mov
add
pop
and
xchg
das
lea
xchg
inc
xor
in
fdivrl
xchg
cmc
sbb
add
cmp
push
jmp
jmp
jp
pop
cli
ja
pushl
ljmp
push
fmuls
and
or
mov
incl
aaa
xchg
jb
inc
xchg
aas
pop
mov
jecxz
pop
cmc
ss
add
mov
rorl
rolb
sbbb
mov
inc
and
mov
pop
in
jno
pop
jns
push
xlat
add
add
mov
cmp
loopne
xor
shlb
and
jno,pn
insb
xor
mov
add
jno
xor
mov
sbb
arpl
mov
cmpsl
mov
mov
inc
add
xor
or
cs
insb
pop
ret
adc
imul
jmp
call
add
repnz
in
loop
mov
inc
inc
xchg
push
inc
xchg
pop
xchg
adc
loopw
std
jmp
adc
xchg
adc
mov
ret
andps
arpl
mov
and
or
test
add
pop
sti
mov
adc
dec
adc
xchg
xor
mov
push
pop
and
lock
mov
cmp
mov
add
xchg
cltd
push
adc
adc
adc
push
std
je
icebp
aaa
xchg
dec
xchg
inc
cmp
enter
sbb
mov
sbb
fdivrs
and
jmp
frstor
lret
xchg
aaa
jle
repnz
adc
pop
std
daa
adc
add
jmp
inc
imul
mov
sub
in
pusha
fsubp
daa
rclb
xchg
and
mov
or
mov
fsubp
cmp
in
in
jb
and
mov
shlb
out
jns
cmpsl
xor
sbb
outsl
je
jae
insb
mov
add
pusha
xor
rol
sbb
nop
stc
xor
add
je
sti
fs
ret
mov
call
daa
push
cli
mov
pop
movsl
lea
out
pop
or
mov
out
or
inc
mov
clc
popa
enter
rcl
xor
inc
push
call
mov
dec
pop
mov
lock
out
xor
add
add
push
pop
mov
inc
sbb
clc
lea
aad
insb
and
pop
fs
outsb
pop
std
adc
sub
and
movsb
sbb
adc
int3
jbe
and
int3
inc
inc
ljmp
jmp
or
xchg
dec
add
mov
add
fstpt
jge
pop
inc
ljmp
and
dec
xor
dec
and
dec
dec
push
out
insb
sub
hlt
mov
add
testb
jmp
jg
sbb
add
outsb
out
xchg
inc
inc
mov
shlb
add
mov
push
dec
icebp
and
test
mov
cs
add
adc
inc
and
sub
movb
mov
dec
mov
cmp
enter
xchg
sub
les
stc
and
arpl
int
mov
daa
jmp
inc
out
jmp
lock
or
mov
sub
cld
xchg
xor
xchg
repz
in
xchg
add
mulb
std
pusha
push
call
and
sbb
and
lds
repz
das
ss
stos
cmp
and
fsubr
ljmp
mov
daa
add
and
sbb
add
cmpsl
in
clc
jge
xchg
inc
jae
xchg
out
jmp
cmp
or
repz
add
mov
call
sub
mov
std
cmp
dec
add
lahf
dec
mov
faddl
sub
or
enter
enter
pop
popa
in
inc
or
pusha
dec
imul
sub
mov
mov
icebp
add
cmc
inc
das
dec
cli
add
ret
repz
sbb
mov
add
dec
add
out
xor
imul
push
add
jl
imul
sub
fsubrl
ljmp
adc
pusha
je
add
out
inc
int
xor
int
fimuls
jl
cmp
push
sub
push
and
je
cmp
add
inc
jmp
subl
add
std
mov
mov
std
popf
test
xchg
mov
popf
test
ljmp
xchg
push
mov
and
mov
and
xor
mov
lock
lds
push
enter
push
mov
and
lock
outsb
adc
push
aaa
push
scas
icebp
or
stc
and
dec
fldenv
inc
push
jb
sbbl
test
cmp
or
ljmp
imul
pop
xor
add
and
pop
push
mov
aad
fsubs
roll
mov
hlt
xchg
sub
xchg
sub
or
cmc
add
jmp
mov
cmpsl
nop
mov
add
add
ljmp
ljmp
and
dec
in
dec
sbb
mov
dec
mov
add
mov
aas
ss
jp
jg
and
mov
jae
xor
mov
mov
jecxz
sbb
sub
repz
jnp
jb
ret
out
add
or
insl
insl
add
bound
ffree
adc
inc
loopne
xor
enter
enter
ret
jecxz
sub
ljmp
ret
sbb
jno
test
xor
or
gs
ret
fbstp
or
arpl
mov
dec
out
mov
dec
xlat
in
stos
jo
ds
lods
jno
and
repz
int
add
stos
dec
lds
jge
outsl
je
loope
xor
es
and
jno
and
push
mov
jmp
xor
or
or
test
shlb
add
mov
and
push
mov
push
jb
dec
cmp
push
mov
out
shrl
sub
pusha
sub
adc
icebp
fiadds
xchg
or
mov
and
sub
incb
cmpsb
loop
sti
lret
shll
cmp
push
fld
and
fxch
and
leave
fldenv
adc
test
mov
xchg
stc
loopne
cmp
or
adc
cmp
xor
inc
or
and
add
push
xchg
xchg
inc
add
clc
jl
mov
and
mov
and
mov
and
mov
and
sti
mov
mov
push
lea
mov
xor
inc
call
sbb
mov
xchg
enter
aam
mov
add
mov
pop
mov
xchg
imul
sar
repnz
add
adc
sub
mov
mov
into
mov
mov
and
sub
aad
dec
loopne
jo
sbb
mov
sub
daa
testb
movsl
push
loopne
jmp
jo
or
xlat
enter
out
lods
mov
inc
bound
fsubrs
or
jae
add
ret
imull
enter
or
mov
mov
add
test
xor
pusha
sub
add
stos
add
inc
mov
fadd
and
inc
xor
inc
loop
in
xor
fisubrs
imulb
sbb
scas
push
and
push
daa
mov
push
pop
mov
push
add
pop
xchg
test
mov
mov
add
push
adc
jae
and
popa
je
test
add
jmp
xchg
mov
mov
popa
test
jno
and
push
jne
vpsadbw
cmp
movsl
and
jle
mov
vmovdqu
out
xchg
jmp
sub
push
loop
inc
or
or
and
out
orl
cwtl
testb
incb
rclb
sti
inc
add
scas
ret
scas
sti
dec
scas
adc
and
xor
mov
inc
inc
out
adc
mov
fisubrs
fisubrs
mov
dec
and
dec
or
xchg
adc
data16
add
lds
std
jno
or
in
and
stc
inc
and
mov
or
ljmp
and
xor
sbb
call
add
or
jmp
mov
loopne
cmpb
mov
sti
idivl
hlt
adc
aaa
add
iret
out
cmp
sub
jae
fidivrs
bound
in
out
or
arpl
push
mov
std
or
pop
cli
add
inc
inc
pminub
mov
push
mov
add
ud2
push
dec
sub
call
daa
sbb
call
aas
add
xor
jg
loopne
lahf
xor
ret
out
ret
divl
lret
rcl
test
xlat
cmpsb
xor
xor
push
sbb
push
ret
insb
jne
ljmp
push
xor
lods
repnz
or
or
sbb
xor
add
bound
jae
ret
xlat
jae
lret
imull
testb
jne
push
out
lods
cmc
das
ss
popa
mov
sti
scas
into
adc
jne
clc
sarl
fildll
shll
call
es
sbb
or
add
orl
mov
push
mov
mov
fldenv
mov
lds
scas
mov
add
mov
pop
add
stos
sub
in
out
add
dec
dec
cli
mov
ret
dec
sub
pop
das
xchg
fs
or
jmp
mov
xchg
pusha
and
and
xor
fs
cld
xchg
or
mov
das
add
push
lret
add
testb
jmp
jge
and
pop
add
test
ljmp
xchg
out
aaa
lds
and
leave
ret
dec
adc
mov
sbb
mov
adc
cmp
xor
cltd
and
cltd
and
aaa
jle
sub
and
mov
push
out
jno
xchg
push
push
add
inc
aaa
dec
add
jmp
sarb
mov
and
jle
and
cs
inc
bound
jo
call
sub
out
cmp
push
call
and
add
add
pop
int
enter
ret
in
nop
or
iret
das
jns
bound
in
imul
add
push
cmpb
mov
or
add
sub
add
inc
add
jmp
add
scas
jmp
jg
repz
arpl
fadds
or
popa
enter
mov
cs
enter
es
inc
out
test
lret
sub
int
das
dec
xlat
sub
mov
loopne
bound
adc
and
inc
jmp
stos
push
jl
add
dec
or
xchg
jbe
jp
dec
iret
jp
dec
sti
jp
dec
lret
jp
dec
mov
sub
mov
ljmp
call
jl
je
dec
aas
jo
mov
and
subb
push
and
cs
bnd
je
bound
push
sbb
mov
bound
push
xor
add
shl
or
scas
cmc
cld
jbe
gs
and
mov
sub
clc
xchg
mov
lds
or
loop,pn
and
jecxz
and
shlb
mov
push
push
pop
mov
in
xor
adc
add
add
repnz
xchg
xchg
cltd
mov
pop
fwait
out
and
mov
sbb
jns
and
jnp
and
add
js
and
xor
add
or
add
dec
and
jp
and
or
cmova
inc
jns
and
jns
and
ja
and
loope
pop
fsubp
daa
iret
or
and
stc
in
and
dec
and
jns
mov
push
sub
movl
inc
xlat
shll
inc
rcl
imul
add
ret
mov
leave
cmp
pushl
mov
cmp
je
and
iret
imul
dec
jnp
jl
pop
adc
and
fstps
fmull
inc
loopne
push
mov
xchg
mov
sub
ret
nop
shlb
xchg
shlb
inc
mov
and
inc
shlb
add
or
inc
pop
xor
out
pusha
insb
cmp
fs
lret
fwait
arpl
cmc
sbb
enter
fmull
std
xchg
sub
add
fdiv
and
xor
loopne
scas
cmpsb
ljmp
lret
or
jae
push
call
xor
mov
test
add
ret
fwait
ret
sub
jb
ret
fwait
add
sbb
or
jmp
in
and
mov
mov
add
test
or
daa
sbb
test
lods
repnz
cmpsl
or
jo
push
and
out
sbb
popf
repnz
lods
adc
ljmp
sub
jne
nop
add
imul
adc
repz
imul
cmp
aam
mov
add
test
decl
mov
out
jmp
and
xor
inc
iret
out
push
pop
out
ljmp
jmp
or
fsubr
inc
add
sbb
mov
sti
je
sub
je
xlat
xchg
cld
je
sti
je
pop
in
jmp
jb
jne
dec
je
es
and
dec
je
add
fidivs
and
dec
je
mov
dec
je
mov
loope
inc
out
test
in
jae
sti
mov
adc
shll
push
aas
repnz
rorl
add
sarb
inc
rolb
shrb
jmp
adc
iret
jns
lret
jmp
cvttps2pi
mov
inc
sub
pusha
mov
pop
pusha
int3
faddl
add
adc
jmp
faddl
ret
mov
pop
push
pop
aam
pushf
mov
and
jle
cmp
adc
jmp
into
mov
jns
pop
call
jle
aaa
mov
clc
sbb
cs
mov
and
mov
xor
adc
loopne
insl
sub
sbb
add
adc
add
or
insb
or
jae
iret
js
sub
or
jge
out
jl
out
jnp
sbb
cmpsb
in
and
lods
ljmp
in
jnp
jo
jmp
jge
sbb
cmpsb
in
hlt
outsl
sub
add
iret
or
cmpsl
or
cmpsl
or
jge
lock
es
add
out
adc
incl
mov
or
pop
pop
mov
fdivp
pop
add
call
push
sbbl
mov
in
xor
sub
adc
bound
lcall
ret
lock
or
mov
mov
cmc
inc
or
add
add
aaa
and
jno
push
imulb
mov
mov
xor
add
in
ret
xchg
or
and
stc
and
sti
add
inc
or
and
jmp
cbtw
add
test
out
dec
inc
xor
setl
popa
setge
or
add
shrl
and
push
les
insl
jae
cmp
sarb
mov
shrb
dec
leave
pop
pop
cmc
lock
pop
jb
inc
out
test
mov
xor
dec
sub
test
xchg
add
jmp
xchg
and
lds
pop
fildll
repz
mov
in
dec
dec
call
repz
pushf
xlat
push
jl
pop
aaa
jnp
cmp
mov
add
xlat
push
fsub
outsb
sub
cmpsl
fidivrs
xlat
add
fcmovnu
add
jo
call
inc
repz
punpcklbw
sub
cwtl
mov
ffree
js
lea
inc
inc
add
push
or
adc
adc
jmp
and
adc
ror
or
repz
cmc
popa
rolb
enter
enter
enter
enter
out
es
mov
or
jae
shlb
out
and
enter
rorb
dec
pusha
mov
or
shr
std
and
lret
ret
jmp
ret
lret
arpl
shl
in
pop
sub
ret
mov
iret
mov
cmp
test
xchg
cli
lcall
adc
add
pushf
adc
lods
adc
loop
adc
fs
std
mov
mov
imulb
jmp
loopne
jae
dec
and
mov
dec
pop
add
lods
adc
push
xchg
inc
inc
inc
jmp
fs
add
call
mov
mov
sub
mov
call
and
icebp
call
add
call
pop
dec
bound
adc
add
mov
and
outsb
test
aaa
enter
inc
mov
mov
and
xchg
xchg
cltd
aaa
add
mov
dec
and
xor
xchg
or
jbe
sbb
sbb
inc
sbb
add
add
cmp
sbb
shrl
add
mov
and
or
jae
mov
inc
jnp
and
add
sbb
call
cmp
cmp
jno
xlat
mov
jo
cld
cmp
ret
faddl
call
and
xlat
cmpl
xchg
add
fsubrl
addl
add
xor
enter
xchg
push
int
add
or
xlat
test
in
push
sar
xor
mov
mov
cmpsb
mov
sbb
data16
aam
gs
sub
mov
push
pusha
enter
mov
adc
out
movsl
insl
je
or
and
fcoml
inc
repz
jo
add
movb
sbb
and
ljmp
or
and
add
or
cmc
jmp
aaa
mov
mov
sub
in
pop
push
jg
push
movsl
outsl
scas
xchg
mov
js
or
pop
lret
testl
mov
inc
mov
jmp
jl
adc
repz
jmp
std
popa
test
frstor
add
and
std
pop
and
hlt
pop
and
xchg
mov
cld
cmpsb
jno
xchg
popa
jge
icebp
cmc
popf
rcrl
pop
and
cmc
pop
and
in
pop
and
aas
mov
cld
pop
popa
add
cmp
lods
bound
mov
inc
cmp
stos
outsl
insl
and
test
stc
pushl
push
add
add
fsubl
ja
lret
aaa
std
decl
sbb
xor
jg
mov
add
and
fsubr
into
and
incb
xchg
mov
cmp
push
in
popf
pop
call
jmp
into
sub
ljmp
cmp
stc
cmp
testb
test
sub
inc
add
inc
or
add
inc
add
add
adcl
inc
or
pop
add
flds
push
hlt
jle
pop
mov
or
jmp
cwtl
sbb
fcomps
je
in
inc
xlat
sub
int
outsl
inc
call
add
xor
cwtl
or
inc
call
or
in
and
or
add
and
push
lret
or
add
and
push
add
pop
rcr
jmp
or
movsl
xor
add
daa
cmpsb
or
sub
call
fimuls
inc
js
xor
jg
out
or
out
es
or
pop
xor
add
pop
push
or
jmp
mov
add
xorb
add
in
sub
fsub
out
jmp
testb
or
rorl
sbb
mov
in
mov
push
bound
cmpsl
inc
sbb
stos
mov
scas
dec
jne
xchg
push
int
daa
shl
mov
pop
jbe
cmpsl
aaa
jne
xchg
in
cld
out
mov
jbe
mov
add
test
mov
sbb
aas
insb
aaa
pusha
add
daa
fiaddl
shl
ss
call
sub
scas
pop
xor
aas
aam
test
or
add
stos
inc
in
push
xor
out
mul
cld
gs
xor
hlt
mov
repz
out
jecxz
add
xchg
mov
add
cmp
jbe
add
pushl
adc
inc
adc
adc
loopne
adc
xchg
sbb
dec
sbb
popf
or
xor
or
das
xchg
or
lea
ret
das
dec
push
icebp
xchg
push
push
dec
adc
adc
mov
push
inc
ret
mov
loop
xchg
dec
add
pusha
sub
add
outsb
out
adc
movups
add
or
jae
jmp
or
ror
test
inc
loop
sbb
or
xchg
fcompl
xor
fcoml
out
out
addb
push
pusha
inc
mov
add
int3
incl
add
jmp
and
push
inc
xchg
sub
cmp
sub
cli
sar
inc
rcr
sbb
mov
fsubrs
add
add
hlt
mov
or
push
aaa
or
xlat
test
cld
incb
push
outsb
cmp
aas
pusha
xor
sub
sbb
in
sub
out
shrl
pushf
cmpsb
push
mov
jno
out
loope
jle
xor
xor
xchg
or
mov
or
sub
out
pusha
jge
out
popa
jne
int3
mov
jmp
xchg
enter
dec
daa
or
ficomps
je
movsb
sbb
xor
popf
jecxz
fnstsw
cmp
add
jmp
dec
sbb
add
arpl
pusha
aaa
push
insb
fwait
or
and
call
sub
mov
jo
mov
jmp
fdivs
call
add
scas
add
repnz
mov
push
cmp
jmp
cmp
and
lahf
test
mov
insl
and
imul
or
add
sub
add
call
xor
jne
mov
add
nop
and
or
sub
xor
test
ss
dec
xor
xorb
adc
leave
sub
xchg
add
add
or
jae
test
sub
add
movsb
mov
test
sti
push
push
mov
jle
movsl
sti
mov
pop
add
add
add
dec
insl
call
mov
mov
je
fiadds
insb
mov
cld
sbb
movl
add
add
loopne
add
daa
or
loop
mov
mov
inc
call
dec
leave
add
jmp
xor
push
inc
mov
into
leave
adc
jmp
dec
pop
mov
fs
or
xor
sbb
imul
add
popa
insl
and
enter
ds
int3
outsb
inc
inc
nopl
add
stos
cmp
add
xor
or
cmp
pop
or
add
xor
mov
ficoms
jle
aaa
out
push
test
mov
test
out
addr16
cmc
jg
aaa
out
jb
in
hlt
xor
cs
shrb
adc
push
push
xor
add
test
fistpll
add
mov
add
subb
aad
sbb
xor
popa
mov
pop
fucom
mov
add
push
cmp
mov
xchg
inc
xchg
orl
call
xchg
add
call
ds
call
inc
fdivrp
jmp
lock
xor
call
mov
out
xor
fcompl
inc
inc
jmp
add
sbb
jmp
repnz
push
adc
jmp
xor
jge
dec
std
xchg
adc
jmp
xor
aam
aas
inc
jmp
mov
inc
mov
je
add
dec
and
stos
rorl
inc
pop
add
ret
and
pop
in
mov
je
scas
mov
cmp
dec
pop
je
push
mov
lret
call
add
sarl
call
daa
sti
shufps
cmpsl
add
push
mov
add
mov
xchg
cmp
sarl
add
mov
mov
and
cmp
add
push
xchg
sti
adc
jmp
dec
or
and
call
je
inc
addl
inc
jb
call
add
add
mov
je
cmc
xchg
jle
sbb
add
jmp
add
fs
pop
and
movl
push
stos
leave
jnp
psrld
push
cmp
std
xor
nop
and
lret
outsl
movsl
in
pusha
adc
mov
loop
cmc
out
add
mov
xor
call
add
ja
inc
fidivs
add
jmp
xchg
xor
add
sub
jmp
out
out
cmpsl
pop
jmp
dec
ret
pushl
insb
ja
mov
popf
sbb
or
add
in
xchg
inc
jecxz
mov
lcall
or
add
fldl
jb
ret
mov
add
dec
leave
testb
and
decl
clc
pop
fucomip
sti
xor
repnz
lcall
sbb
dec
call
stos
sub
add
call
sub
cmpsl
fs
cmc
fs
add
mov
call
pop
add
call
test
jmp
add
shr
mov
frndint
push
rcr
cld
ss
sbb
call
or
jl
call
lods
stc
add
sub
and
or
push
mov
mov
mov
inc
adc
sub
and
lds
mov
and
xor
into
enter
lock
out
sub
mov
add
enter
rclb
mov
movb
adc
je
sub
pop
test
xlat
inc
inc
out
nop
out
sbb
pop
test
mov
mov
orb
jmp
mov
loope
ja
xchg
pop
xchg
ret
call
push
into
test
inc
ffreep
mov
imul
or
int
notb
add
add
stos
les
fcompl
jmp
add
loopne
adc
imul
leave
add
mov
jae
xor
leave
clc
lcall
add
in
mov
lcall
jl
in
xchg
push
pusha
and
lret
add
mov
or
js
xor
jmp
lahf
stos
out
test
les
mov
push
dec
les
out
out
mov
out
out
mov
xor
xchg
xor
adcl
add
xor
js
or
divb
es
js
lock
fst
out
push
xor
xor
daa
and
scas
inc
add
xor
clc
jne
stos
add
loopne
add
rcll
icebp
dec
sti
push
fisttps
sahf
adc
data16
jl
test
or
and
jl
xor
dec
cs
and
iret
test
or
lret
sbb
dec
cs
and
mov
mov
imul
inc
lds
pop
sbb
adc
das
sub
shlb
jb
mov
or
add
pusha
imul
repz
repnz
xchg
rcl
mov
in
adc
test
flds
mov
adc
in
pushl
int
or
and
lahf
in
shrl
sti
push
sbb
push
adc
mov
jo
test
add
pop
mov
push
add
and
add
push
lret
call
push
jo
test
sub
inc
and
xlat
mov
xchg
or
pop
enter
data16
cmp
mov
add
adc
add
sbb
inc
or
jmp
mov
sahf
xchg
jge
adc
push
inc
inc
or
jmp
inc
mov
stos
int
and
mov
add
divl
mov
xrelease
leave
sti
in
pop
shlb
sti
or
leave
add
mov
rclb
dec
jae
push
ret
dec
scas
xor
int3
ret
push
or
shl
add
daa
and
cmpsl
sub
sub
pop
jge
icebp
push
cld
dec
shr
in
add
daa
pop
stc
outsl
sahf
cld
sub
mov
imul
mov
cmpsb
inc
loopne
das
out
bound
in
sbb
pop
mov
rcl
fwait
call
sub
mov
sbb
test
xor
add
outsb
sti
jle
and
jmp
out
push
test
bound
sbb
call
inc
and
jo
ss
not
cld
roll
sub
jmp
repz
xor
call
cmp
xchg
clc
jae
fs
push
bound
xor
mov
sub
pop
sub
adcb
add
dec
mov
pop
and
dec
jge
inc
add
test
data16
or
and
add
out
add
mov
pusha
inc
and
xor
add
mov
mov
inc
stos
sub
jmp
add
adc
lods
add
sub
cmp
das
leave
ljmp
call
pop
mov
sbb
out
std
add
sub
cltd
sub
mulb
mov
call
add
add
pop
add
push
orl
adc
int
cli
test
rclb
fdivrs
cs
nop
xor
daa
std
popl
rcr
mov
jb
out
jg
adc
or
fstpt
mov
jbe
imul
or
pop
xor
jb
jp
cmc
add
mov
out
dec
mov
add
mov
pop
test
clc
push
movsl
fiadds
pop
test
stos
out
mov
add
loopne
pusha
xchg
movsb
sub
subl
push
or
mov
cs
push
pop
and
jmp
cmpsb
nop
out
fnstsw
iret
sbb
imul
nop
repz
nop
out
and
dec
fs
add
cmp
add
add
xor
lods
arpl
imul
xor
inc
popf
repz
cltd
in
pop
popf
fwait
add
bound
ret
xchg
pop
add
mov
mov
shrb
into
imul
test
loope
aaa
push
adc
cld
stc
add
pop
aas
sub
cwtl
fwait
mov
sbb
or
lahf
int
fstps
add
mov
aam
mov
int
cmp
push
jb
dec
in
cmp
xor
lcall
mov
mov
sub
subl
out
jecxz
pop
fcmove
cld
out
mov
aas
push
mov
and
xchg
xor
lea
daa
lcall
adc
add
lret
inc
cli
push
data16
fnstcw
push
pop
daa
pusha
push
ret
les
sti
xlat
and
pop
mov
push
mov
mov
dec
add
cmp
xorb
push
lods
xor
mov
faddl
add
mov
sub
call
jns
movsb
adc
push
incl
push
push
dec
mov
add
add
jne
jmp
inc
dec
popa
sbb
or
add
bound
or
sub
mov
fildl
adc
sbb
sub
mov
mov
inc
and
sub
pop
push
inc
xor
cmp
xchg
inc
inc
dec
pusha
sbb
dec
cwtl
test
jo
add
pop
call
add
sbb
add
ljmp
sub
js
in
int3
roll
add
push
push
and
add
inc
xor
mov
fadds
lret
popa
in
sti
out
out
sbb
jb
iret
and
cmp
call
cli
stc
xor
test
jmp
std
pop
push
xor
add
ret
adc
and
hlt
add
cltd
xor
mov
fsubrs
and
jno
imul
lcall
lret
sti
jnp
jo
mov
mov
mov
xor
call
mov
mov
or
mov
add
insb
mov
jno
or
cli
mov
rcrl
out
jge
cld
jb
xor
ret
and
call
pop
repnz
xor
mov
sub
sbb
adc
push
xor
popa
jne
pusha
mov
repnz
adc
xor
movsl
int3
and
nop
les
call
xor
add
adc
add
cmpl
adc
cmp
xor
fisubs
push
add
or
mov
decb
int
push
add
jp
call
hlt
jo
leave
jb
test
sub
je
push
inc
aas
cltd
ret
jge
inc
sub
inc
or
aas
jne
mov
xchg
stos
xor
lret
xor
add
test
test
push
mov
add
cmpsl
mov
dec
std
jae
push
or
add
call
mov
sbb
sbbl
pop
jmp
mov
xchg
jmp
dec
or
or
jae
add
jo
sbb
sti
dec
jae
push
into
out
cli
add
jo
call
pop
bound
push
mov
inc
dec
add
add
add
decl
dec
or
sbb
cld
xor
mov
ds
jle
pop
and
inc
ljmp
inc
push
cmp
jns
out
inc
mov
inc
ds
push
add
add
call
pop
xor
add
mov
dec
jo
add
or
call
add
xor
out
imul
aaa
repz
hlt
scas
sub
add
adc
out
hlt
call
out
xor
scas
in
lds
jmp
gs
call
or
add
shlb
jmp
mov
fsubrl
ljmp
call
add
add
mov
xchg
orb
popa
push
sbb
xor
mov
push
jbe
enter
mov
out
dec
aaa
mov
imul
add
dec
inc
loop
add
fnstenv
lahf
pop
and
mov
cld
incl
ficoml
shll
mov
out
inc
pushl
nop
and
xor
add
add
lret
cld
inc
fnstcw
daa
ret
xor
call
adc
adc
push
ud1
sbb
xor
call
pop
in
or
dec
mov
sbb
add
lahf
mov
and
add
jmp
lea
mov
or
mov
jbe
sbb
mov
add
push
stc
subl
jl
jmp
add
aam
lock
xchg
sub
sar
and
mov
xlat
roll
fcomps
cmp
cmp
and
fadds
add
and
xor
add
imul
xchg
mov
adc
lcall
fwait
fs
push
add
lcall
add
ret
fisttpl
jo
addb
mov
adc
ret
sbb
scas
or
setle
std
lea
cmp
inc
pop
sub
orb
out
jmp
fs
call
add
xor
flds
jmp
bound
fildll
push
add
add
out
and
xor
mov
or
test
add
addr16
outsb
xor
add
jbe
pop
push
call
xlat
mul
call
pop
push
jb
add
push
hlt
rclb
call
insl
add
adc
call
xor
cld
jmp
adc
cld
jmp
add
lcall
inc
jmp
jae
jnp
add
fdivs
add
scas
jp
out
push
xchg
stos
sub
leave
call
pop
or
icebp
pop
dec
aas
sub
sub
add
adc
jg
push
cmp
add
xchg
test
add
js
cld
decl
leave
sti
push
pop
push
fwait
stc
add
add
adc
lock
cmp
in
sub
inc
jle
scas
mov
push
push
loope
sti
adc
in
jp
sub
pop
inc
pushf
push
or
cmp
jns
xchg
hlt
bound
jmp
add
fs
and
jo
incl
or
flds
mov
push
testl
pop
add
jmp
add
or
call
mov
push
jmp
adc
xchg
sbb
cmp
and
enter
rcrl
or
or
rolb
and
enter
clc
add
jmp
jge
icebp
lret
jae
inc
inc
testb
push
pop
xor
or
enter
shlb
jae
dec
add
jno
fbstp
in
mov
ljmp
lock
mov
enter
shrb
and
pushl
or
dec
jecxz
push
xor
add
xor
movsl
inc
xor
mov
jg
inc
jne
neg
enter
pop
cmp
subl
ljmp
add
xor
shl
call
stos
xor
push
adc
sub
popf
gs
jb
add
jbe
rclb
out
int3
pushw
mov
jmp
push
jecxz
push
add
inc
push
ss
adc
or
jmp
adc
movsl
call
push
imul
add
call
push
std
pop
dec
push
imul
aaa
mov
inc
add
mov
inc
add
jle
inc
cmp
xor
mov
xor
inc
add
fcomps
dec
scas
mov
cmpb
push
mov
xor
add
push
mov
push
mov
jle
incl
add
mov
or
lret
shlb
mov
mov
jno
or
arpl
fsub
or
xor
push
icebp
das
out
xorl
jae
jmp
ret
rcr
jp
enter
inc
ret
loope
add
ja
hlt
pop
lds
mov
sarb
jae
inc
inc
push
jmp
sarl
pop
in
dec
add
jo
clc
out
mov
ja
adc
jnp
or
in
dec
and
lret
push
enter
jns
dec
pop
xchg
fcomps
leave
add
pop
out
xor
add
icebp
leave
daa
std
call
xor
jb
repz
xor
imul
movsl
repnz
mov
hlt
mov
pop
jmp
sub
out
mov
lcall
jle
mov
add
jmp
push
jmp
xor
jle
and
cmc
mov
cs
imull
loop
out
sbb
xor
pop
je
repz
xchg
and
lcall
adc
cld
jmp
add
xor
loope
inc
pushl
rcr
call
ljmp
je
sub
in
test
cld
jmp
or
cld
jmp
das
mov
ds
hlt
sub
call
les
and
cwtl
test
call
gs
sub
add
sbb
add
jmp
inc
out
xor
add
outsb
push
mov
xor
outsb
push
das
add
inc
xor
mov
or
add
xchg
add
add
cmp
orb
jae
insb
outsl
add
fistpll
jg
dec
inc
out
inc
cmp
test
jg
or
dec
and
cmp
add
add
adc
add
mov
sbb
adc
and
cmp
mov
psubusw
sub
xchg
in
sbb
pop
hlt
and
sahf
movl
mov
push
inc
and
push
dec
and
dec
shlb
ds
and
push
dec
and
dec
dec
and
inc
dec
and
lahf
or
mov
add
sub
jmp
push
dec
iret
ja
push
das
jns
iret
sub
sarl
xchg
jbe
jg
iret
pop
fdivl
add
call
sbb
je
sub
out
popa
fildl
add
ljmp
pop
in
out
lahf
int3
inc
andl
mov
mov
fiaddl
add
lods
lods
fistpl
mov
adc
cmpsl
movsl
xor
pop
stos
cmp
cmpsl
enter
xor
fbstp
out
jmp
out
andb
insl
out
pushf
data16
add
cmp
shrl
repz
mov
popa
add
int
xor
add
add
add
scas
cs
pop
push
pop
ret
add
addr16
lcall
xor
ds
divb
or
pop
add
fidivl
and
call
mov
call
outsl
sub
dec
in
mov
and
rcll
jmp
call
mov
jmp
mov
inc
sldt
push
repz
call
cmp
and
cmp
xchg
push
adc
xchg
sbb
ss
je
cli
inc
je
mov
add
jb
call
mov
xor
add
addr16
orb
or
jge
push
xor
add
mov
ficompl
adc
xchg
scas
lds
cmp
mov
xor
add
add
xchg
aaa
dec
sub
pop
xchg
mov
dec
xlat
jb
xorl
push
movl
add
xchg
sub
stos
and
jmp
xor
out
out
or
aad
cli
pushl
es
sti
push
or
sti
push
mov
movl
hlt
and
inc
fnstsw
sbb
adc
add
pop
and
movb
push
cmpsb
jmp
jb
addb
add
jge
push
mov
sbb
add
cltd
push
bound
ds
test
cmpl
popa
jmp
add
jmp
inc
hlt
push
imul
imul
add
out
fiadds
sbbl
cli
imul
sub
arpl
sbb
add
arpl
out
dec
add
xor
dec
jmp
and
call
jns
mov
add
call
rorb
call
add
loopne
add
gs
push
and
sti
or
cmp
aas
or
jo
sub
xor
xor
test
cmpsl
aas
pop
imul
add
in
cli
jae
stos
cmpsb
add
shlb
cmp
mov
jl
mov
push
adc
cmpb
inc
or
out
adc
mov
add
call
mov
fs
call
jo
test
inc
push
orl
mov
aam
xor
push
add
jg
jmp
push
sbb
add
add
cmp
cmp
scas
call
repnz
xor
or
mov
mov
add
in
sub
out
inc
aas
testl
mov
or
lock
add
cld
in
stos
les
enter
dec
ss
pop
mov
int3
ds
and
inc
mov
mov
cltd
and
pop
mov
imul
das
cwtl
scas
mov
js
iret
fbld
ljmp
and
add
repz
cmp
cld
mov
push
aaa
lock
xor
mov
mov
cmp
enter
mov
jno
movsl
faddl
sub
sub
sahf
outsl
bound
out
jecxz
mov
lods
daa
add
les
pop
negl
out
sbb
inc
jmp
shrl
lock
test
out
adc
out
lods
or
add
jmp
call
adcb
fidivrs
cmp
sub
cmc
imul
div
aaa
jb
shll
mov
out
cmp
pop
dec
lods
xor
xor
jg
fsubrl
push
push
mov
add
or
daa
stos
call
ja
and
adc
push
inc
int
inc
add
add
out
addr16
fisttpll
mov
hlt
mov
std
push
xchg
xor
lods
add
xchg
hlt
dec
or
jmp
rorl
adc
incl
call
testb
notl
adc
push
pop
bound
or
inc
and
add
jb
sub
mov
add
push
push
jge
cmc
test
xor
mov
pop
inc
and
push
push
pcmpgtw
je
inc
lcall
rorb
or
sub
inc
sbbb
mov
or
ljmp
lea
or
jmp
and
adc
sbb
xchg
push
add
mov
pop
adc
add
imull
repz
fsubr
ficoml
sub
sbb
and
add
mov
jl
ljmp
and
cwtl
add
in
test
push
jbe
sbb
cmp
fsubr
je
add
mov
mov
inc
ret
mov
je
push
xchg
enter
shll
adc
incl
add
push
sub
add
out
sub
push
sub
mov
adc
call
out
sub
xchg
xchg
xor
clc
in
sub
bound
pop
mov
cwtl
push
iret
xor
xchg
cmpsb
daa
add
pushf
cmp
add
decb
add
cmp
mov
lods
popa
push
iret
inc
rdmsr
mov
out
and
roll
mov
call
jns
cld
cs
sub
aad
xor
stos
gs
or
xchg
push
jb
push
cmc
jmp
repz
mulb
call
in
or
or
jmp
add
fnstcw
mov
sbb
shlb
mov
stc
mov
jmp
mov
std
jo
push
adc
xchg
and
arpl
mov
add
jno
decl
repz
xchg
flds
clc
je
mov
or
sub
xchg
sub
pushf
add
ret
jne
imul
add
add
cmpsl
sti
je
dec
sti
adc
cmpl
mov
pop
adc
test
cmp
inc
aaa
or
jno
lea
push
pop
pop
sti
adc
inc
jns
sub
dec
sub
jo
sbb
flds
lods
enter
jle
call
jo
push
call
bound
add
outsb
fcoms
and
jb
popa
dec
sub
movsb
or
adc
xchg
insb
add
sub
xor
aas
inc
call
push
or
sub
jo
mov
aas
fists
jae
inc
add
xchg
push
fwait
adc
ret
add
insl
cmc
mov
xor
jmp
inc
call
mov
add
push
fdivl
mov
add
mov
mov
push
iret
xchg
test
incb
test
daa
xchg
mov
mov
add
mov
fbstp
les
push
xlat
xor
lret
mov
fs
iret
add
adc
cwtl
pop
jnp
test
enter
pop
idivl
stos
daa
add
and
ljmp
shll
add
cltd
add
pop
sub
leave
add
xchg
idivb
aad
fildll
movl
insb
call
add
dec
and
imul
sbb
pop
inc
add
cld
dec
sbb
bound
mov
shl
and
add
add
ljmp
inc
jmp
sub
dec
dec
xor
and
jb
jo
loop
adc
incl
cmpsb
cmpsl
adc
dec
mov
mov
add
mov
add
dec
sbb
lea
cltd
in
xorb
inc
negb
jg
mov
pusha
xchg
notb
pop
sub
call
dec
dec
mov
pop
and
insb
fwait
inc
add
xor
inc
adc
add
shlb
add
imul
or
jmp
push
inc
mov
and
imul
and
loope
ret
rolb
addl
add
fbstp
add
addr16
sub
movsl
cmp
stos
xchg
jg
out
pop
dec
inc
addb
jmp
fisubrl
mov
inc
orl
iret
fwait
lea
jnp
inc
iret
in
call
jo
jg
ljmp
add
mov
add
xor
sqrtps
mov
mov
aas
add
add
xchg
out
jb
imul
cmp
lods
inc
add
xor
jae
cld
icebp
das
out
ret
mov
jmp
lock
and
or
jnp
or
hlt
or
jae
mov
jg
sbb
mov
pop
and
repz
call
stos
incl
arpl
add
add
xor
mov
pop
xor
mov
sub
andl
mov
mov
in
jne
out
lea
mov
mov
xchg
insl
pop
dec
ljmp
or
xchg
cmpsb
cld
js
pop
das
adc
subl
insl
jne
ljmp
jmp
add
jne
and
aad
push
ss
ret
mov
push
sbb
mov
repz
mov
inc
cmp
jmp
xchg
daa
sarl
shll
shlb
sbb
xchg
das
das
rorb
mov
push
out
dec
inc
sbb
testb
js
mov
ljmp
sub
mov
mov
and
mov
cmp
inc
xchg
mov
and
mov
and
and
je
movsb
test
pop
test
push
in
jo
and
mov
insl
cmp
incb
jg
xchg
add
pop
xor
mov
sub
push
outsb
aam
dec
sbb
mov
xchg
aam
pushf
add
das
or
or
ret
jmp
push
mov
imul
or
cmp
xchg
jge
jmp
add
add
in
ficomps
clc
mov
xor
sub
mov
pop
xor
std
mov
scas
or
call
fsts
in
push
jmp
add
add
imul
in
mov
jb
or
arpl
out
jmp
add
iret
incl
jmp
mov
or
out
jmp
mov
icebp
lods
xor
push
mulps
xlat
aaa
mov
and
pop
lods
add
cli
pushl
lahf
mov
int
scas
ret
in
jno
in
popa
cmc
and
sarl
add
lret
dec
dec
sbb
sbb
mov
int3
push
subl
call
in
and
jbe
mov
mov
inc
loope
hlt
and
out
mov
pusha
and
bound
mov
aad
and
adcb
ljmp
repnz
cld
bound
jae
mov
in
xchg
add
shll
add
lret
call
xchg
jae
es
sahf
incl
pop
push
adc
add
ret
sub
add
test
add
xchg
sub
in
shrb
add
std
xchg
scas
bound
rcr
pop
cmpsb
aas
push
mov
lods
pop
and
cmp
dec
jge
mov
xchg
xor
leave
add
or
and
out
inc
add
lret
pushl
sbb
aad
data16
into
cld
cmp
les
pop
add
jmp
data16
sub
pusha
and
mov
add
cld
mov
add
decb
cli
add
jmp
mov
add
jle
dec
out
pop
rcll
adc
add
fnstsw
jmp
add
loope
jge
jmp
add
iret
data16
add
int3
roll
xor
cld
mov
push
jns
ds
mov
stos
and
inc
mov
and
out
test
sub
insb
cmc
lret
cmc
ret
stos
sub
movl
out
or
jb
int3
test
iret
mov
dec
call
inc
jb
aas
mov
movsb
sbb
test
sub
test
mov
cli
arpl
iret
push
add
call
and
and
xchg
jecxz
mov
jb
stos
dec
out
and
jmp
and
sub
fwait
cld
xchg
in
inc
add
insl
lcall
sbb
mov
or
jbe
pop
add
je
pop
xchg
cli
jmp
cltd
popf
mov
bound
aam
and
les
out
xor
sub
inc
push
xor
out
xor
and
xor
testb
add
xor
popf
in
test
mov
dec
sub
shll
dec
sub
int
or
mov
adc
jo
cmp
pop
rcl
aam
push
je
ret
pushf
sbb
push
pop
repnz
call
dec
repnz
cmc
mov
cmp
pop
call
or
and
add
repnz
call
add
jmp
out
test
aas
xor
push
mov
cld
jo
xor
xor
or
xchg
and
dec
push
push
dec
outsb
push
push
jo
fistl
mov
mov
mov
jmp
jnp
cmpsl
repnz
jp
jmp
fnstenv
mov
orl
push
cwtl
and
add
cmp
cmp
and
pop
or
cld
int3
add
add
insb
mov
add
push
mov
imul
push
iret
mov
ret
daa
add
lcall
mov
jne
imul
pusha
addl
or
ss
ljmp
outsb
xor
mov
add
enter
jmp
out
xchg
out
xchg
sub
add
add
xor
inc
add
lods
xor
lock
add
call
xchg
mov
add
add
add
ret
dec
popa
add
cmpsl
ljmp
mov
jmp
xor
call
fs
add
call
cmp
sub
dec
lds
xchg
inc
lods
inc
jmp
xor
and
add
add
or
jmp
psubsw
insb
stos
push
je
cmp
in
and
arpl
or
ljmp
add
popa
sbb
aad
xchg
or
jmp
add
xor
mov
sti
dec
cmp
cmp
cmp
leave
or
xchg
mov
and
sub
mov
push
lea
je
add
incl
insl
jo
add
stc
mov
test
add
inc
xor
orl
xchg
sub
or
cli
push
pop
mov
orb
xchg
push
and
mov
and
je
or
xor
sar
xchg
add
xor
xchg
add
inc
call
std
test
add
mov
fldl
add
add
mov
push
adc
les
xchg
test
jl
add
data16
add
mov
jb
and
andl
jbe
push
aam
xor
cwtl
and
add
mov
mov
push
adc
sub
stos
mov
iret
jns
ret
out
mov
jg
jle
add
sbb
pop
sub
add
jmp
add
xor
inc
jmp
sub
ljmp
cmp
in
lahf
sbb
xchg
pop
mov
lods
out
jmp
mov
sub
xor
ret
rcrl
test
fildl
orb
jmp
fs
cs
das
pop
cmp
je
pop
cmc
pop
fmull
lods
add
add
adc
out
mov
add
sbb
xor
out
push
xor
insb
test
adc
push
test
call
lods
call
mov
fwait
or
and
add
and
or
test
and
jmp
sub
mov
dec
mov
add
and
and
jmp
and
xor
pop
push
nop
jmp
mov
and
in
xchg
jae
mov
dec
add
add
xchg
dec
jp
adc
popa
sub
pop
jecxz
xor
add
adc
jmp
cmp
pop
test
or
rorl
stos
call
addb
dec
xor
push
aas
bound
ds
mov
xor
jne
stos
je
mov
push
aas
orb
inc
addb
rclb
add
addr16
test
nop
jle
adc
inc
add
adc
add
inc
add
and
stc
and
add
jo
and
mov
add
push
add
je
mov
cmp
ret
add
xchg
jmp
cmp
add
jo
sbb
imul
add
xlat
inc
rol
pop
add
andl
leave
dec
or
fldt
push
mov
jle
xor
stc
add
jmp
jb
iret
cmp
add
lret
add
jecxz
ljmp
fsubr
sub
arpl
jo
rep
ficompl
dec
test
testl
jb
hlt
popa
mov
jb
enter
jnp
inc
jo
xlat
push
movsl
sti
out
mov
leave
out
fs
out
lods
movb
xor
fbld
jb
enter
mov
std
add
add
xchg
mov
and
cmp
inc
pop
xchg
jne
fcoms
subl
xchg
orl
in
out
and
add
mov
fmull
or
and
idiv
cld
sbb
or
sub
dec
push
scas
leave
push
cmp
jle
pop
lea
xchg
add
mov
call
stos
cmp
call
or
bound
xor
add
push
inc
and
adc
mov
and
xchg
jle
pop
je
push
pop
imul
and
add
pop
mov
dec
mov
cmp
pop
icebp
inc
ret
call
add
orl
call
or
push
call
aam
push
add
xchg
ljmp
cli
xchg
out
add
mov
push
push
pop
xchg
sbb
ljmp
jno
ljmp
out
aas
jmp
mov
or
hlt
mov
cmpsb
jns
add
rcrb
addl
add
sub
push
sbb
inc
and
add
xorb
inc
out
int
xor
cltd
mov
add
add
xlat
or
sub
aas
jmp
inc
imul
sbb
shll
cmp
cltd
dec
sbb
add
incb
hlt
mov
push
lock
add
push
out
js
add
cwtl
popa
aad
cmp
fstps
sub
jmp
dec
add
test
pop
sub
ret
lds
cmp
jecxz
sbbb
out
jae
dec
dec
mov
popf
js
xchg
pushl
mov
in
daa
mov
in
mov
lahf
push
mov
addb
fwait
xor
xchg
push
ljmp
add
jmp
push
jb
mov
xor
std
jecxz
mov
mov
daa
or
cld
jmp
movsl
nop
ljmp
pushf
pushl
jo
jecxz
lods
cmp
add
mov
out
adc
or
push
mov
jmp
mov
xor
icebp
inc
xor
xchg
out
jl
cld
fs
jae
add
int
mov
xor
add
push
lock
or
dec
lea
lds
aad
clc
mov
add
or
lret
adc
imulb
jmp
clc
xor
push
xchg
or
cli
lret
push
push
loop
call
aas
jne
pop
dec
loop
test
out
add
add
add
push
or
xchg
xor
jmp
xchg
mov
dec
push
cmp
xchg
xchg
jmp
sarl
push
and
fsub
sub
sar
fsubr
xchg
int
mov
inc
dec
lea
ds
movsl
test
aam
mov
std
or
inc
xor
clc
subb
loope
hlt
nop
ds
add
jne
fdivl
inc
add
dec
cld
pop
sahf
shll
or
cld
scas
sar
pop
cmp
pop
test
mov
repnz
add
pop
scas
pop
and
pop
rcr
jb
xor
push
jmp
pop
test
pushf
imul
sarl
bound
add
leave
jmp
fs
addr16
add
xor
cmp
mov
mov
mov
clc
jae
popa
push
mov
cwtl
xor
mov
pop
inc
pop
inc
iret
mov
mov
dec
arpl
mov
test
ljmp
pusha
jg
jmp
mov
jae
negb
hlt
dec
push
add
add
int
call
and
xorl
sub
popa
add
movsb
addb
popa
dec
or
dec
div
jo
pushf
call
roll
call
mov
scas
call
call
leave
cmpb
scas
sbb
adc
data16
ljmp
cmpsb
or
call
jecxz
fucomip
aas
rclb
fs
aad
mov
add
inc
stc
rolb
outsb
jo
jnp
add
lods
jne
addb
dec
and
dec
sbb
xor
rolb
sbb
jne
inc
xchg
mov
aad
mov
lods
sti
or
sbb
testb
jno
jmp
lret
or
out
jle
ljmp
push
in
pop
pop
or
add
sbb
jno
dec
out
inc
mov
cmp
mov
mov
and
adc
jb
test
jle,pn
inc
jg
inc
adc
mov
dec
xchg
mov
out
mov
xor
or
rcr
push
mov
cmpsl
mov
fldt
rcl
cld
dec
add
movsb
fdivr
and
shll
leave
cld
add
cmpl
add
adc
nop
fstps
add
sbb
pop
pop
cmc
pop
add
scas
jge
inc
jecxz
dec
pushl
or
sbb
xor
arpl
add
out
fisubrs
movsb
sub
ret
cld
fbstp
out
out
add
dec
out
repnz
push
rcrl
adc
sbb
ret
fsubs
push
dec
jecxz
pushf
or
fimuls
add
cmp
lea
sub
mov
cmp
fs
sub
sub
call
xchg
mov
mov
loop
clc
stos
ljmp
xor
xchg
incl
in
je
hlt
pop
jb
sub
and
xor
xlat
sub
subl
add
gs
outsl
sbb
xor
mov
call
cmp
shlb
cld
mov
lods
sub
das
fildll
mov
sti
mov
push
out
ds
popa
inc
or
adc
loope
and
aas
icebp
repz
divb
inc
pusha
cmp
aaa
add
or
movb
add
add
repz
popa
fildl
jae
jg
jmp
pop
faddl
cmp
insb
sahf
sbb
xchg
push
mov
mov
adcb
mov
adc
mov
ss
push
mov
scas
aaa
add
sub
fistl
xor
push
lods
fisttps
add
adc
ret
out
cmp
pusha
lea
dec
mov
cltd
add
ljmp
add
sub
mov
push
push
sub
ss
movsb
cld
mov
push
add
and
jo
cld
mov
dec
add
dec
sub
jnp
lods
add
pop
pop
pop
xchg
sahf
ret
filds
push
add
adc
int3
jae
push
mov
mov
scas
insl
std
shrl
andl
out
clc
mov
or
adcl
push
call
ret
imul
mov
xchg
aas
daa
inc
stos
mov
stos
imul
mov
add
out
xor
imul
jno
arpl
fcoms
fcmovb
add
insl
in
ret
mov
xor
push
jmp
adc
addr16
jno
sbb
nop
push
or
dec
idivb
push
out
icebp
scas
inc
lcall
mov
call
icebp
mov
xor
xchg
outsb
fisubs
fnsave
mov
outsl
push
nop
in
add
mov
add
xchg
jo
add
scas
and
outsl
adc
mov
in
rol
push
bound
mov
insb
das
incb
aaa
jl
bound
sub
add
pop
cmp
int3
push
jmp
sti
mov
pop
mov
out
ret
mov
cmp
cmp
test
cs
dec
popa
repz
decb
add
pop
mov
das
pop
fldcw
and
push
or
insb
push
mov
lods
call
push
push
push
sbb
stc
ret
push
push
jl
call
add
hlt
push
sbb
repz
cli
cs
call
or
mov
inc
add
lods
mov
pop
pop
insl
jg
jmp
dec
push
pusha
pop
lock
adc
cld
adc
adc
in
xchg
xchg
adcb
and
push
inc
cmpsl
mov
out
js
add
add
ret
add
xchg
pop
es
cmp
punpcklbw
leave
add
pop
dec
push
cltd
dec
push
aas
fcmove
add
jmp
add
or
and
mov
push
jmp
inc
pusha
add
add
add
add
add
call
cs
jmp
dec
sub
mov
mov
add
pop
daa
nop
stos
cmp
push
iret
add
rcr
in
lock
scas
dec
sub
sub
sbb
mov
jmp
mov
add
scas
mov
das
in
shlb
add
clc
bound
sarb
test
cld
jnp
and
cmove
jl
aas
mov
fmull
jmp
add
aas
shll
and
sarl
xchg
je
or
cmp
pop
pop
sub
cmp
pop
push
add
lock
stos
push
ret
out
js
add
push
add
jle
pop
sub
call
dec
jmp
jmp
stos
xor
push
call
ret
jmp
pop
mov
fldt
fadds
inc
xor
ret
call
xor
mov
xor
clc
adc
subl
or
lea
into
xor
add
jo
or
mov
call
subb
dec
add
aam
sarl
push
push
test
sti
xor
and
xor
adc
mov
add
add
inc
add
adc
push
mov
cld
outsb
jle
sbb
sbb
sub
adc
incl
add
dec
adc
ss
jo
sbb
jno
mov
mov
xchg
sub
add
xor
dec
add
cmpsl
xchg
ret
mov
ljmp
dec
push
sub
fmull
test
test
out
jo
stos
mov
enter
out
sub
sti
cltd
cmpsl
jle
and
add
jl
and
jge
and
sub
xor
les
jo
fildll
push
pop
cmp
cmc
lock
xchg
adc
inc
dec
xchg
fldt
fisttpl
lock
ljmp
pop
mov
adc
inc
jmp
and
fidivs
add
add
xor
cmp
lods
test
mov
add
in
xor
and
cli
jmp
out
add
inc
pop
call
add
call
jo
cld
pop
lds
xor
out
add
out
add
push
adc
push
adc
andl
fsubrs
mov
sub
mov
and
adc
and
cmp
shl
sub
addl
cwtl
cs
push
xchg
adc
aaa
out
incl
xor
test
aas
xchg
xor
mov
setbe
jo
pop
pop
jg
jl
ds
add
inc
jbe
push
cltd
cltd
dec
push
mov
popf
adc
add
mov
mov
sbb
mov
sar
addb
je
call
leave
nop
xor
xor
shlb
jecxz
pushl
mov
xchg
xchg
shr
add
testb
pushl
pop
movsb
adc
push
mov
pop
mov
cmp
lods
or
shll
or
add
xchg
jp
dec
std
movl
push
adc
loopne
stos
xchg
lds
xchg
and
jle
push
dec
in
cltd
mov
add
stos
push
pop
andl
add
jae
or
add
xor
arpl
idivb
sbb
pop
cltd
xor
jp
mov
sub
cmp
add
stos
pushf
adc
into
fwait
jnp
out
bound
ss
sbb
sub
xchg
out
fiadds
add
cmc
mov
std
fstpt
pshufw
mov
scas
pop
js
mov
pop
push
adc
lds
loopne
mov
insb
or
fwait
adc
scas
arpl
mov
jmp
mov
add
and
adc
pop
ret
loopne,pt
popa
add
push
or
ficomps
jbe
inc
jecxz
jmp
mov
dec
mov
xor
mov
adc
mov
and
jae
jb
loop
push
push
rorl
test
divl
mov
pop
fdivr
cld
or
adc
ss
scas
sahf
shrb
add
call
add
mov
xor
inc
mov
and
add
xor
add
inc
and
or
and
xor
xchg
inc
jl
adc
adc
stc
icebp
jbe
stc
inc
mov
fbld
dec
xor
lea
xor
mov
sbb
xchg
rol
jnp
mov
inc
sbb
push
mov
and
add
add
add
dec
jecxz
adc
jmp
sbb
pop
fnstcw
push
push
psadbw
mov
push
jmp
call
add
call
das
pushf
push
rclb
sub
sbbb
inc
jg
popl
jmp
mov
add
mov
add
jg
add
stos
xchg
jmp
add
add
sbb
xchg
addl
push
fcomps
outsb
out
xchg
mov
push
scas
pop
xchg
mov
jnp
iret
push
jnp
push
sbb
add
jnp
cvtpi2ps
push
imul
or
add
movsl
and
enter
mov
cmp
bts
lock
sub
mov
pusha
in
or
mov
cmp
add
or
adc
sbb
dec
lea
out
lock
pop
std
sti
jle
mov
iret
inc
pushl
jg
fiadds
jae
xor
popf
xchg
pushf
cmp
jb
out
call
push
add
out
sbb
sbb
std
aam
sbb
adc
sbb
jae
into
cs
inc
sti
pop
adc
dec
sbb
push
mov
out
divb
cwtl
jne
or
pop
mov
test
data16
push
sbb
in
pop
out
mov
jne
leave
add
fdiv
call
jo
hlt
adc
mov
incl
xchg
out
ret
hlt
repz
call
push
icebp
and
xchg
inc
add
subb
fsubrl
add
mov
push
xchg
hlt
cmp
pop
mov
or
sub
jg
dec
cs
jbe
leave
adc
decl
mov
testb
test
push
push
loopne
push
push
adc
push
inc
pop
cmp
insb
xor
pop
or
add
push
sub
cmpsl
mov
or
jb
push
shr
cmpsl
jae
cmpsl
adc
push
inc
add
jnp
data16
sub
or
mov
jne
addps
add
mov
dec
push
mov
push
jnp
pushf
mov
lcall
inc
jmp
scas
jb
jo
and
sti
mov
sub
add
xor
sti
add
negl
orl
xor
cmc
or
cmp
and
pop
cld
ret
cwtl
pop
inc
repz
lahf
in
ss
cs
js
roll
inc
add
push
xor
popa
out
jle
out
jmp
fistl
cmpsb
cmp
add
mov
sub
push
inc
jbe
push
sub
xor
mov
xchg
cli
jno
add
repz
pop
jmp
out
mov
inc
jmp
cwtl
add
test
cs
call
add
xchg
and
push
inc
add
stc
inc
mov
rcl
jb
cmp
xor
jno
andl
ljmp
jb
lahf
je
inc
mov
insb
jb
mov
xchg
repnz
cmp
sub
repz
out
mov
iret
bound
or
dec
insb
mov
dec
adc
fmul
dec
push
adc
add
add
inc
jae
adc
mov
cmp
push
and
testb
xorb
std
mov
dec
js
inc
into
gs
enter
call
gs
ret
and
cmp
inc
push
add
sti
adc
or
jl
das
ljmp
int
scas
cli
call
add
je
out
adc
dec
inc
adc
cli
jle
pop
add
lret
lds
jmp
sbb
mov
xchg
cltd
clc
incl
pop
sar
in
push
shr
push
dec
mov
ficompl
jo
adc
cwtl
dec
xchg
je
xchg
jl
add
xor
fdivl
fisttps
add
cwtl
data16
add
add
stos
test
mov
cmp
inc
sar
decl
inc
jecxz
decl
cmpb
mov
add
bound
cltd
cmp
cs
sbb
push
jp
in
ja
mov
sbb
push
jge
add
xor
das
jo
arpl
xor
out
jge
mov
ret
add
add
imul
test
xor
hlt
jecxz
cmpsl
lods
in
jno
or
outsb
sub
arpl
stos
out
pop
das
mov
mov
xor
call
fiadds
mov
imul
adc
icebp
add
cmp
dec
dec
insl
cld
jo
cmp
test
add
xor
or
lock
and
scas
stos
out
lds
mov
cmp
divb
notl
jb
stos
out
lea
mov
cmp
out
adc
adc
stos
out
inc
jno
add
mov
dec
push
leave
je
call
jecxz
pop
shll
add
cmp
je
call
repz
pop
shll
std
pop
dec
sbb
mov
shll
aas
sbb
and
dec
outsb
mov
shll
shl
aas
sbb
lcall
clc
cmp
pop
mov
dec
add
lods
cli
decl
xchg
add
sub
add
add
sahf
aas
lods
rolb
xchg
push
cmp
add
push
add
rcrl
pushf
add
test
out
adc
test
or
addb
sub
or
cmpsb
push
adc
addb
pop
aas
jmp
test
das
pop
ss
imulb
ret
cld
add
pop
je
std
jnp
std
cli
dec
lahf
dec
out
xor
loopne
out
add
cld
out
pop
hlt
or
fucom
mov
pop
sub
leave
xchg
outsb
ljmp
cmp
inc
add
bound
jecxz
jo
adc
stos
jecxz
imul
fbstp
cwtl
adc
es
fmulp
lods
fcmovnb
out
push
add
out
fbstp
out
popf
sub
mov
jecxz
decl
hlt
imul
lock
inc
aad
daa
adc
adc
aaa
jb
jmp
sbb
call
jae
jae
andb
call
and
imul
pushf
addr16
jecxz
mov
add
pop
jecxz
fs
jecxz
aas
dec
add
lods
cmp
push
sarl
add
std
dec
pop
jo
out
push
fs
jb
mov
call
call
inc
sti
jne
jno
fadd
push
adc
jo
pop
movsb
sub
ret
push
mov
packuswb
xchg
push
xor
add
iret
xor
test
inc
dec
push
sbb
push
push
into
inc
add
jno
jns
sti
jne
mov
sti
push
out
scas
rorb
out
mov
adc
dec
lods
std
inc
sbb
push
loop
xchg
stos
outsb
cli
incl
xchg
sbb
xor
mov
pusha
mov
cld
push
xor
push
test
out
ds
add
mov
loop
dec
mov
aam
rorb
add
sbb
cmp
or
jno
add
adc
test
sbb
adc
push
lods
and
pop
jmp
daa
imul
dec
adc
sti
xchg
sti
outsl
pop
std
aam
mov
add
daa
fdivr
aaa
xor
cld
aas
sub
cld
aaa
xor
repz
mov
inc
daa
add
out
cld
sub
pop
movl
push
outsb
gs
fists
add
dec
fmull
hlt
inc
faddl
hlt
inc
pop
xor
aaa
jno
daa
ret
pushf
xchg
clc
sbb
xor
gs
inc
jmp
jbe
fcmovne
or
in
in
fwait
out
jo
shlb
cmp
cmp
cltd
iret
imul
xor
fs
insb
mov
out
add
jae
xchg
add
fs
push
pop
ljmp
mov
inc
and
fs
jmp
sub
add
pop
push
cmpb
lods
fsubr
call
out
ret
cltd
pop
jne
or
fisttps
add
add
xor
jb
scas
cmc
je
scas
cmc
out
lahf
call
nop
push
in
fiadds
data16
and
add
adc
out
decl
jge
test
xchg
mov
xchg
testb
cld
jle
mov
mov
das
mov
xchg
call
shlb
inc
cmp
mov
test
adc
incl
push
adc
jg
adc
adc
out
decl
std
mov
call
lds
cmp
mov
inc
add
aam
jae
in
sti
mov
je
call
adc
lods
jge
adc
pop
jge
pop
popa
mov
fcoms
add
add
ljmp
sub
stos
xor
pop
xor
cs
out
sti
inc
jmp
ds
jmp
fists
cld
lds
shrb
mov
sub
bnd
xor
sub
push
pop
mov
sarl
cmp
je
xchg
add
int3
rclb
add
xor
add
add
mov
mov
es
loopew
add
lret
out
lods
adc
jmp
fs
mov
pop
inc
sarl
outsl
cmpsl
stos
cmpsb
or
call
scas
lods
stc
jno
dec
mov
add
mov
jle
xor
cmp
out
mov
xor
and
xorb
sub
pop
inc
sbb
and
add
add
das
add
call
test
inc
push
jecxz
xchg
cmp
xor
out
incb
cmp
dec
pmaxub
sbb
sbb
daa
adc
iret
loope
sub
push
push
js
in
test
push
outsb
jl
push
cmp
add
test
fwait
pop
sti
in
cli
push
xchg
mov
jmp
add
call
test
dec
cmp
imul
inc
add
stos
xor
outsb
mov
inc
add
test
inc
fidivrl
or
nop
xchg
jp
or
ja
inc
xchg
jp
adc
lahf
xchg
jp
adc
pop
mov
jnp
sbb
out
xchg
jp
sbb
xchg
jp
and
xchg
add
jp
and
out
inc
cli
jnp
sub
into
xchg
jp
sub
mov
fstpt
imul
add
ljmp
or
xor
fimuls
mov
push
ljmp
mov
push
xchg
mov
mov
xchg
cld
push
mov
shll
addb
cs
xchg
xor
inc
mov
jmp
les
je
das
push
adc
cltd
mov
jmp
cmp
cmpb
push
jl
ljmp
inc
jmp
add
outsb
adc
xchg
xor
xchg
out
xchg
pop
mov
fnstenv
jmp
xchg
mov
mov
jle
sub
aam
out
mov
sub
add
stos
sub
pop
out
inc
dec
outsl
xchg
xchg
stos
pop
pop
lea
push
stc
inc
jg
gs
out
mov
dec
mov
xor
stos
add
out
push
cmpsl
out
jmp
mov
dec
insb
and
sbb
xor
sub
clc
jmp
add
aam
lods
call
push
xor
test
dec
jno
cmp
addl
bound
imul
jb
jne
pusha
cs
xchg
mov
add
cmpsb
aas
jmp
fdivs
add
sub
add
aam
sub
imul
mov
jo
dec
call
add
call
incl
xchg
xchg
nop
or
mov
jmp
sbb
cld
call
xor
xor
mov
cmp
jne
inc
shlb
add
ss
add
or
imul
cld
incl
jo
dec
sbb
fs
jg
mov
sbb
mov
xorb
shlb
or
sarl
push
jmp
inc
add
pushl
shlb
jl
dec
test
sahf
rolb
add
hlt
call
jnp
movl
mov
test
sbb
aam
sarb
das
dec
incl
repz
jmp
jp
filds
rcrl
push
jnp
repz
xorb
jecxz
mov
int3
into
inc
add
push
inc
cmp
inc
add
shlb
or
aam
jb
xor
lret
in
jle
cs
inc
out
sbb
ljmp
cmpsl
inc
insl
pushf
jl
mov
call
add
ficompl
adc
loop
jl
xor
add
aad
add
in
pop
movsl
int3
sub
aas
cmpsb
pushf
pop
ret
adc
or
lods
dec
cld
mov
pop
sbb
jl
adc
sbb
bound
fwait
xchg
jae
add
cmpsb
movsb
fwait
push
inc
mov
jmp
push
jge
adc
in
dec
cmp
push
loopne
imul
add
bound
out
and
add
sti
pop
mov
sub
jnp
pop
mov
pop
add
xor
mov
aaa
pushf
call
xor
xor
cmp
adc
push
insb
push
mov
outsb
jecxz
sti
test
or
call
out
jns
pop
cld
jmp
add
push
mov
aaa
incl
and
add
add
test
sbb
add
cmp
xchg
inc
sub
decl
and
cmp
pop
add
js,pn
mov
push
adc
lcall
cmovo
cmp
pop
insb
aam
and
cmpb
inc
and
mov
rcl
test
push
inc
xchg
jg
ret
mov
jo
add
out
mov
and
leave
mov
xchg
jmp
add
jmp
inc
and
cmp
fs
cld
xlat
gs
cld
cmp
inc
and
cltd
lea
mov
inc
add
push
sub
mov
dec
data16
in
sbb
cmp
stos
dec
jnp
xchg
cld
cmp
xor
fnclex
clc
push
push
int
and
in
addr16
cmp
add
jo
jl
cmove
std
aaa
out
aas
jmp
xchg
jb
in
jnp
ja
jb
xor
test
stos
test
subl
jno
jno
jb
out
call
inc
and
xchg
cld
test
push
inc
xor
test
sub
bound
mov
add
popf
test
adc
jmp
je
enter
sub
incb
decb
test
xchg
lods
add
lock
pop
xchg
and
test
call
dec
push
icebp
jmp
out
call
data16
gs
and
jae
int
rcll
jg
call
add
push
mov
cmp
movsl
jl
cwtl
mov
or
call
test
movb
jb
jmp
call
cmpsl
testb
push
adc
sub
pop
pop
jmp
js
inc
jmp
xchg
imul
xchg
ror
sub
test
inc
jbe
test
outsl
inc
in
aad
in
sbb
incl
add
cmovo
inc
sub
fst
inc
in
iret
mov
mov
pop
cmovo
andl
add
adc
mov
push
mov
imul
pop
leave
shll
xchg
cmpl
data16
pusha
mov
incl
sbb
inc
dec
sbb
mov
pop
push
xchg
add
dec
add
or
bound
jmp
or
mov
mov
xchg
dec
add
outsb
mov
jo
mov
mov
mov
xor
push
repnz
dec
das
icebp
cltd
aam
dec
jg
xchg
jnp
dec
pop
dec
push
into
shlb
cli
inc
sbb
mov
out
pop
add
pop
mov
out
add
xor
add
or
or
cmp
int3
hlt
xor
mov
imul
xor
jbe
push
jg
pushf
push
out
cmp
add
xor
imul
aam
sub
sti
push
bound
icebp
and
and
addr16
mov
out
mov
sub
imul
mov
adc
pop
cmp
call
loopne
cmpsl
add
icebp
int3
xor
iret
cmp
les
insb
cmp
and
fisttps
jb
ficoms
les
add
mov
push
out
mov
in
arpl
sub
sub
mov
ficoml
cmp
push
cld
jmp
mov
dec
divb
out
xchg
arpl
or
sbb
add
pop
push
aam
mov
push
je
or
mov
or
std
hlt
jl
inc
jmp
xchg
std
and
xchg
in
and
fmull
sbb
subl
and
and
mov
mov
or
adc
movl
out
add
push
dec
push
sub
cmp
pcmpeqw
add
or
inc
stc
lock
mov
push
aas
push
dec
aam
dec
call
leave
movsb
xchg
xchg
call
push
ljmp
lret
leave
call
mov
add
lret
or
jmp
cmp
jb
add
jmp
or
arpl
ficoms
jp
in
rclb
inc
sarl
jecxz
iret
pop
cmc
sbb
bound
clc
gs
sbb
inc
push
add
aaa
jnp
fistl
inc
testl
sub
inc
fistps
or
sbb
andb
xor
mov
psadbw
test
test
xor
lds
add
xor
js
adc
fwait
lock
adc
jno
ret
inc
adc
fisttps
pop
add
pop
or
cmp
stos
ljmp
stos
in
jns
ja
add
mov
incl
hlt
mov
add
push
xor
stc
inc
fadds
inc
jecxz
imul
add
dec
addb
je
in
orb
push
jmp
addr16
mov
add
add
fcomi
decl
mov
std
push
addr16
add
fsubl
jae
std
dec
adc
mov
and
jae
push
shlb
outsl
mov
push
xchg
mov
in
icebp
call
les
call
data16
sti
sub
dec
add
out
inc
jmp
xor
xchg
inc
out
and
fsubrs
aaa
pop
les
loop
dec
imul
jl
add
call
sbb
dec
out
sti
adc
mov
jno
adc
add
xor
push
adc
add
mov
sub
add
mov
push
inc
ret
test
add
dec
aad
dec
mov
add
repnz
push
jecxz
add
sti
pusha
and
dec
sub
xor
mov
pusha
sti
adc
lret
js
sbb
test
and
cmp
cld
notb
push
inc
jmp
xlat
and
pop
push
orl
mov
add
pop
mov
lds
jle
and
pop
add
aas
jbe
xor
es
aas
pusha
pushf
push
fildll
sub
aad
call
adc
jge
add
cltd
ret
xchg
popl
jp
lds
fs
stos
pop
enter
enter
scas
neg
clc
rorb
test
cmc
or
add
pop
sub
outsb
fnstenv
daa
aad
inc
adc
and
out
jb
daa
cmc
das
flds
pushw
fbstp
or
addl
aaa
out
movsb
fsub
in
pushf
fsub
in
xchg
mov
mov
add
jno
out
jo
mov
inc
push
jmp
mov
test
test
add
scas
and
add
aad
int3
add
xor
mulb
adc
push
mov
gs
lods
call
sub
inc
jmp
insb
dec
jae
push
mov
add
loope
das
adc
jg
divl
pop
mov
je
or
and
lods
or
dec
fadds
add
and
xchg
in
inc
lds
inc
out
outsl
in
and
pusha
hlt
or
fnstenv
inc
mov
sbb
mov
sub
jno
xchg
cld
jl
push
xchg
inc
aas
mov
and
lods
sti
sbb
mov
inc
push
adc
test
ljmp
pop
test
mov
mov
add
jg
mov
imul
sub
dec
out
adc
cld
std
sub
mov
xor
cld
stc
push
and
in
or
rol
and
shl
adc
or
pop
jmp
inc
mov
mov
and
or
ja
or
imul
shr
xlat
aam
or
add
add
jmp
decb
sub
test
pop
add
push
rolb
dec
add
jmp
std
inc
ljmp
call
xlat
dec
out
push
xchg
pop
cmp
ljmp
add
push
cmp
xor
xchg
out
sbb
push
int
and
adc
jae
or
jns
xchg
mov
popa
into
add
loopne
das
divl
mov
aam
popa
in
or
addr16
cmp
loop
call
repnz
push
negb
pop
jne
and
ret
in
lret
jno
pop
pusha
lock
jmp
enter
stc
in
ret
mov
out
xchg
decl
out
add
add
jb
aaa
pop
jo
and
pop
sub
sub
jb
aas
jno
adc
ss
call
out
into
xchg
sti
call
or
mov
adc
cltd
ja
and
pop
cli
and
push
inc
test
call
inc
inc
lds
mov
or
cmp
arpl
and
inc
daa
mov
rolb
add
call
xchg
add
add
mov
add
inc
add
mov
xchg
xlat
icebp
jo
clc
cmp
inc
popa
sti
je
add
lods
les
add
push
sbb
inc
xchg
in
add
in
xor
mov
mov
dec
mov
call
mov
xor
lret
es
dec
inc
add
add
jge
sbb
mov
cmp
push
mov
or
jo
jb
dec
and
aad
xchg
in
std
daa
cs
cmp
add
cmpl
mov
push
pop
pop
jno
xor
add
scas
jne
mov
fiadds
out
sahf
add
add
pusha
or
pop
cmpsb
mov
mov
xlat
addr16
fwait
shrl
mov
jns
dec
inc
sar
or
rol
in
inc
inc
sbbl
inc
cli
xor
add
jo
daa
cmc
xchg
mov
jge
cmpsl
inc
sbb
imul
cmpsb
lock
scas
jp
sub
jmp
and
sub
insl
repz
test
add
inc
fadd
cmp
and
pop
in
and
outsb
jp
inc
cmc
ret
outsl
lret
mov
add
pop
mov
cld
inc
imul
mov
add
xor
xor
mov
inc
imul
loope
sub
xor
mov
clc
fcmovb
mov
sub
negb
stos
inc
loop
hlt
cld
mov
adc
adc
cmp
add
jp
mov
repnz
ds
xchg
repz
icebp
jecxz
inc
mov
mov
xchg
push
xor
xchg
ficoms
and
fs
insb
mulb
mov
hlt
add
lods
in
xchg
aam
xchg
add
xchg
cld
hlt
xchg
les
pop
or
add
add
add
add
std
jo
push
push
mov
add
pop
and
and
test
add
sub
cld
incl
sub
cld
incl
mov
in
insl
enter
enter
mov
pop
mov
in
lods
enter
cmp
push
and
dec
and
mov
add
and
mov
and
jmp
sbb
jbe
sbb
jb
sbb
jne
mov
jmp
mov
add
out
mov
jmp
add
mov
gs
adc
out
mov
jmp
push
dec
clc
or
push
int
or
xchg
add
jmp
jg
and
add
mov
add
add
and
je
enter
mov
iret
and
rorb
push
cwtl
jae
push
xchg
cltd
jne
fwait
ret
xlat
cmp
stos
pop
mov
pop
jmp
sbb
add
ret
aas
jp
arpl
insb
enter
mov
adc
dec
adc
xor
into
loopne
addb
add
jno
enter
in
jecxz
iret
add
or
jo
dec
out
xchg
aam
mov
lock
xlat
imul
shrl
lahf
out
sti
pop
sbb
enter
pop
aas
push
insb
into
dec
inc
jbe
hlt
add
pushf
aas
fstpt
repnz
mov
ss
mov
dec
loope
repnz
mov
ljmp
push
cmp
lret
rorb
fs
push
rol
cld
insb
ljmp
fisubrs
inc
int
mov
int
dec
dec
callw
test
or
mov
cmp
cld
mov
loop
ss
or
add
add
xor
xchg
rorl
inc
xor
mov
add
inc
mov
cmp
pop
sbb
call
ljmp
test
jno
add
inc
std
mov
adc
mov
adc
test
and
add
add
mov
popa
sti
je
or
sti
cmp
mov
dec
pushl
sbb
or
add
jmp
sti
dec
in
movsl
mov
fs
cmp
outsb
sahf
sbb
ret
dec
pop
std
int3
int
and
xor
mov
subb
cmp
mov
outsb
call
shlb
inc
mov
cs
or
push
sub
repnz
and
jo
mov
dec
dec
add
push
enter
ret
dec
fsubrl
add
dec
mov
sub
xor
ret
push
xor
adc
js
push
les
es
aam
pop
cmpsb
daa
pop
popa
cmpsl
add
cli
out
pop
test
pop
xor
loop
cmp
push
cmp
add
in
fimuls
mov
cmp
adcl
add
scas
add
push
ljmp
add
add
inc
push
loop
pop
jbe
lods
jb
inc
imul
xchg
or
jmp
adc
ret
mov
imul
pop
jmp
loope
mov
xor
out
subl
daa
xchg
xor
add
call
inc
push
jb
push
mov
call
ffree
icebp
add
call
std
jl
mov
sbb
cmp
cmc
pop
int3
inc
inc
add
mov
in
mov
call
sub
cli
cmp
push
inc
mov
xor
mov
inc
add
add
shrb
in
pop
xor
pop
ret
push
mov
add
lock
hlt
add
push
push
mov
in
aad
sti
test
inc
add
imul
sbb
mov
test
mov
xchg
mov
or
sub
mov
xchg
xlat
add
dec
adc
cs
mov
lock
mov
cmp
out
out
push
add
pop
dec
test
add
add
push
add
pusha
xlat
test
jle
shr
out
push
push
ljmp
push
push
stc
outsl
adc
pop
sar
pop
push
and
mov
mov
sbb
sub
mov
std
push
adc
hlt
add
pushf
dec
pop
adc
sti
insb
xor
fcmovb
jge
adc
sub
ret
mull
pop
jo
pop
adc
dec
add
add
sub
inc
add
xor
and
out
lcall
xor
in
sbb
and
add
aaa
cli
lock
or
sbb
out
cld
lods
dec
stc
out
dec
and
aaa
out
cmp
out
xchg
adc
and
dec
xor
mov
aaa
call
shlb
add
std
add
or
out
inc
mov
and
fndisi(8087
ss
sbb
lds
arpl
daa
add
jo
ss
ss
imul
movzbl
inc
and
cmp
or
int3
cmp
call
xchg
xor
sub
mov
or
cmpsl
int
insl
or
call
call
aaa
add
add
call
ret
stc
fs
adc
jmp
add
or
ss
jmp
f2xm1
pushl
dec
xchg
stc
jmp
aam
add
pop
and
imul
incl
and
inc
xor
add
pop
sti
xor
insl
fistpll
add
xor
jne
mov
pop
add
add
inc
mov
and
add
pop
std
mov
xor
jbe
dec
call
ja
xor
popa
insl
cld
hlt
add
je
jg
lret
call
popa
icebp
pop
pop
jns
shl
xor
ret
dec
push
mov
xor
ret
mov
filds
inc
rorb
ljmp
dec
fwait
pop
sub
add
stos
inc
rorb
ljmp
pop
outsl
xchg
add
xchg
sarb
ja
push
push
in
inc
iret
push
sbb
rorb
aam
pop
or
add
cmc
dec
add
jmp
add
adc
lea
ljmp
std
mov
mov
xor
push
xor
out
lock
add
sub
xor
pop
xor
add
adc
push
loope
add
lods
fisubrl
cmp
sti
lret
fdiv
out
fs
sbb
add
psraw
cld
xor
iret
in
lock
sbb
fldt
push
lock
out
mov
inc
pop
sbb
iret
xor
faddp
stos
ret
push
cmp
into
cmp
inc
add
push
xor
insb
imul
icebp
pushl
add
fimull
mov
ret
rcr
fbld
loopne
bound
cmp
and
mov
lds
xor
adc
popf
ret
jmp
hlt
call
mov
add
popa
xlat
and
in
push
cld
cld
cmp
inc
jmp
add
pop
repnz
std
out
mov
insb
bound
je
and
out
sub
out
test
cmp
add
cmp
add
add
jae
mov
and
mov
bound
shr
incb
adc
aaa
repz
out
push
xor
sbb
and
xchg
and
jmp
add
mov
mov
lods
ret
add
out
add
mov
sub
cmp
push
orl
mov
pushf
ret
push
pop
pop
xchg
cmp
adc
lret
xchg
sbb
xchg
loop
cld
pushf
cmp
xorl
add
loope
fcoms
inc
mov
mov
inc
add
xlat
cmp
xlat
filds
loopne
add
add
push
arpl
dec
clc
xchg
and
and
into
xor
cmpb
mov
add
sub
jl
ljmp
jmp
sbb
mov
ds
data16
sbb
or
fcos
subb
movsl
pop
fidivl
pop
pop
insb
stos
call
outsb
imul
in
jl
add
push
jns
in
in
jp
pop
or
mov
add
or
movsl
mov
add
xor
add
movsl
shlb
sub
sub
icebp
mov
pop
dec
xor
add
xor
add
sbbb
inc
test
nop
pushf
mov
sub
mov
mov
jmp
add
call
xor
cmpsl
lods
mov
int
mov
cld
jmp
shll
out
loope
mov
lret
inc
out
bnd
cli
loop
mov
xor
sti
aam
inc
inc
jmp
push
je
sbb
rcr
add
sub
lds
fwait
add
out
repnz
repz
jno
add
and
jo
pusha
movsb
push
sub
adc
je
push
int3
mov
sti
xor
negl
pop
mov
pushf
ret
ret
bound
mov
xor
fs
sti
andb
add
lock
push
stc
lock
xor
lock
sub
js
inc
out
mov
sub
inc
mov
push
lea
push
dec
push
add
dec
pop
jl
xor
je
testb
out
inc
inc
add
negb
adc
xor
jmp
sbb
cmp
push
stos
in
push
les
movntps
ja
sysenter
jnp
ss
cld
pop
adc
pushl
adcl
mov
decl
movsb
call
insb
push
jns
add
mov
mov
pop
lret
lds
or
adc
fs
faddl
push
xchg
add
jmp
gs
or
mov
xchg
xor
cmp
fstpl
iret
xchg
mov
test
out
inc
outsb
xlat
or
enter
jle
xor
add
int
jmp
in
andb
int
add
movsl
jne
adc
movsb
in
jnp
push
xlat
int
inc
sub
out
ds
xlat
cmc
xchg
jmp
arpl
push
adc
add
aas
add
test
shll
sub
out
and
push
mov
jo
pop
xor
mulb
out
add
ret
mov
inc
jmp
call
add
sub
jne
pop
cmp
mov
inc
jmp
mov
dec
pop
push
mov
mov
int
sub
xchg
das
push
addl
imul
jp
and
insb
cld
call
push
out
ss
inc
xchg
sub
adc
stos
in
movsb
dec
insb
fwait
sahf
add
mov
clc
xor
push
fmull
sti
mov
pop
adc
add
dec
and
xchg
mov
inc
out
sub
push
insb
push
adc
lcall
mov
flds
loop
cmp
xchg
jg
in
call
je
mov
cld
je
sbb
push
scas
out
adc
leave
and
adc
xor
push
fdivp
mov
add
sbb
clc
pushl
aas
and
sbb
push
repnz
push
fs
out
sti
test
xlat
roll
insl
add
in
lods
mov
sti
daa
push
hlt
add
bts
mov
aas
jmp
inc
out
jl
cld
aad
call
push
jo
and
sbb
sub
push
xchg
add
lcall
popa
jae
xor
jl
aam
cld
add
mov
push
xorb
cmp
adc
das
rcll
mov
push
add
lods
pop
xchg
pop
add
out
pmuludq
in
mov
jno
mov
pop
cmp
jmp
sub
adcl
ret
in
mov
mov
jmp
xor
mov
icebp
xlat
or
and
inc
add
cmp
push
das
lcall
fdivl
insb
inc
sbb
into
shr
popf
in
adc
jno
or
popf
int
sbb
jo
mov
jae
fmull
ret
xchg
and
mov
cmp
loopne
xor
inc
popl
inc
pop
clc
sub
xchg
loope
add
cmc
sbb
or
add
cmp
cld
sbb
inc
jmp
in
daa
out
sub
cmp
ret
test
sub
pop
repnz
insb
movsl
call
push
or
out
xor
xchg
mov
inc
pop
clc
sub
test
jecxz
or
adc
push
xor
repz
pop
subb
testb
pop
sbb
adc
push
mov
pop
or
call
shl
std
xor
jge
push
adc
inc
cmp
or
ret
inc
mov
sub
xor
xor
add
xchg
mov
je
ljmp
je
xchg
jl
out
sti
xchg
ljmp
add
pop
dec
jo
jmp
add
sub
or
out
cmp
push
add
sub
add
mov
enter
mov
pop
fsubrs
inc
or
cld
mov
sahf
adc
add
out
out
aas
jmp
pop
adc
mov
sub
rorl
in
or
aaa
pop
ljmp
int3
or
shrl
sldt
jmp
sub
mov
hlt
aas
jmp
cld
cld
jns
cld
xor
negb
sarb
repz
cmp
mov
inc
sub
das
sub
and
in
mov
cmp
mov
cwtl
mov
add
mov
mov
add
and
inc
add
pop
mov
inc
lcall
hlt
xor
imul
sub
xchg
sti
xchg
pushf
std
pop
pop
inc
or
lock
jle
sub
mov
add
xor
jne
jnp
pop
out
and
add
and
fnsave
push
in
add
rcrb
sbb
adc
out
data16
add
ss
hlt
clc
and
in
and
add
popf
xchg
inc
jmp
add
jmp
outsw
and
jmp
pop
jae
cld
mov
jmp
call
xor
add
mov
mov
ljmp
and
sub
add
cmp
inc
mov
add
add
ja
repnz
inc
das
jg
cli
cmc
imul
fmull
inc
fisttps
ja
mov
sub
aas
push
out
xor
clc
mov
ljmp
xchg
les
mov
mov
inc
xchg
mov
cmc
xchg
lds
or
ret
test
repz
incl
add
add
outsl
in
add
shlb
rolb
mov
jg
jo
dec
sbb
call
clc
loopne
inc
mov
scas
sub
stos
pop
test
fistpll
and
jmp
xchg
sub
aas
jmp
shlb
out
inc
pop
int3
scas
xor
fcompl
mov
add
add
lods
pop
push
subl
push
adc
enter
test
adc
lock
out
sti
jo
jle
pushf
imull
movsb
aas
sub
repnz
stos
das
jmp
mov
add
jmp
imul
test
inc
ss
std
and
neg
jo
mov
cmp
hlt
add
and
push
mov
inc
sbb
or
push
cmp
cmp
mov
sub
add
mov
or
movsl
popa
mov
bound
sub
adc
call
xchg
inc
jmp
mov
or
jno
push
add
call
je
cmp
sub
orl
add
pop
jo
cld
inc
inc
inc
jmp
pushf
mov
leave
testb
push
call
test
jb
test
sti
dec
in
rolb
icebp
pop
adc
xor
add
aas
icebp
pop
adc
cld
adc
pop
jne
daa
or
inc
push
test
push
push
test
and
jecxz
je
daa
xchg
add
lea
dec
testb
xor
mov
stos
cmpsl
and
xor
add
fistps
adc
add
in
std
adc
std
lods
inc
or
lods
or
aaa
mov
ret
mov
push
mov
enter
pop
sbb
incl
pop
dec
lret
sbb
sub
cmpl
cmpl
jae
xchg
mov
add
or
add
pop
push
je
out
jmp
fiaddl
push
rcr
je
out
xchg
pop
add
cmpsl
lock
jmp
inc
jae
das
insb
add
pop
push
je
mov
adc
inc
add
stos
sbb
mov
jg
rdtsc
call
clc
add
jb
jecxz,pt
in
add
xor
add
inc
test
ljmp
jge
jmp
sbb
enter
sub
mov
je
and
jo
xchg
adc
cwtl
das
jmp
lock
xor
cmp
add
pop
test
add
sbb
jmp
add
add
jge
mov
scas
lods
jg
sbb
inc
in
xor
sbb
or
add
xchg
test
jmp
pop
cmpsb
adc
aas
aas
mov
test
test
out
mov
jmp
xchg
and
add
insb
or
jb
mov
int
pop
and
call
test
inc
insb
lea
add
xor
out
mov
dec
xchg
adc
push
or
pop
add
push
bound
inc
push
add
jmp
push
jo
out
sti
test
xor
rorb
xor
mov
cmp
call
fwait
add
mov
push
mov
sub
jg
cmovo
add
lret
lea
lret
gs
add
loop
mov
or
and
or
jecxz
push
rcr
je
in
pop
push
xorl
repz
inc
add
jecxz
dec
jge
jge
inc
pusha
test
and
mov
jae
xlat
mov
sbb
iret
aas
mov
xchg
gs
call
or
jo
and
testl
test
call
jb
jge
out
nop
roll
fwait
or
pop
jmp
jge
pusha
cmp
or
mov
jbe
adc
push
jae
xor
jl
or
inc
call
xor
shll
outsb
ret
pushf
or
stos
aam
pop
ret
ret
test
sarl
add
stos
roll
push
movsb
inc
mov
out
xchg
mov
mov
loop
bound
jp
sub
lock
stos
pop
adc
outsl
les
mull
jp
push
pusha
mov
test
sbb
repnz
aas
sbb
cmp
jo
jle
dec
outsb
cmp
ljmp
add
sbb
pusha
xor
inc
out
inc
std
jmp
xor
jmp
xchg
icebp
push
jb
adc
and
repz
add
aaa
out
pop
sub
xor
bound
mov
add
inc
jmp
inc
adcl
les
jb
fnstcw
pusha
sbb
xlat
mov
testl
int
or
cld
mov
mov
push
cld
add
pushf
outsl
and
fwait
pop
mov
jns
inc
adc
inc
add
add
lret
jp
sahf
add
out
cmp
add
sbb
push
ret
lcall
out
lcall
fs
sti
out
enter
outsb
add
pop
jnp
rclb
stc
nop
dec
push
pop
pop
push
fnstsw
sub
in
sbb
xor
and
pusha
cmp
lds
and
add
sub
shrl
outsb
inc
or
mov
rorl
out
add
aad
fdivr
mov
jo
or
in
ja
jmp
mov
shrl
incl
add
jle
inc
fstpt
dec
out
mov
aaa
and
out
mov
mov
in
test
je
jg
fisttps
sti
or
lods
and
jmp
aas
mov
jmp
test
xor
xchg
movsb
and
mov
mov
add
mov
add
stc
outsb
ror
pop
aaa
add
mov
cmp
add
arpl
stos
test
add
mov
in
fmulp
adc
jb
out
aad
sub
add
cmpsb
cmp
push
out
jmp
add
push
std
scas
fdivs
js
dec
adc
xor
dec
push
push
aad
stc
jo
jmp
mov
pop
std
sub
sti
push
add
sahf
loope
imul
adc
inc
sbb
sub
mull
scas
and
imul
xchg
imul
fbstp
mov
add
ret
and
call
add
sub
cltd
loopne
aas
jge
xor
push
or
pop
stos
aas
cmp
jne
leave
xor
push
mov
add
lcall
push
xor
mov
mov
dec
inc
or
hlt
sub
outsb
loop
push
mov
xor
mov
addr16
mov
in
jle
fildll
sbb
stos
lds
mov
xchg
mov
xchg
inc
or
xchg
inc
xchg
inc
xchg
or
jo
cmp
xchg
jb
lea
add
sbb
push
pop
pop
ja
add
insl
lcall
push
decl
add
sahf
inc
xchg
or
divb
das
cmp
or
add
cld
xchg
dec
sub
out
xchg
jp
jecxz
mov
addl
add
or
add
xchg
mov
aas
inc
pop
add
call
nop
shl
or
push
cs
add
xlat
cmpb
sahf
mov
incl
outsb
rclb
leave
jg
iret
addr16
outsb
mov
movsl
lods
sti
inc
lods
inc
add
stos
sub
push
cmpsb
sub
arpl
mov
call
push
sbb
fs
pop
add
xchg
jmp
add
mov
push
ja
test
arpl
cmpsl
mov
mov
push
nop
iret
in
mov
mov
call
mov
lahf
adc
inc
aam
outsb
filds
das
sub
xchg
jmp
out
or
addr16
add
xchg
jle
sahf
mov
gs
add
mov
mov
shr
add
jmp
sbb
and
call
scas
fucomi
call
add
cmp
je
and
inc
cwtl
call
notb
add
call
mov
shr
or
xchg
mov
xor
sahf
mov
add
cwtl
sti
push
adc
add
sbb
sbb
xor
test
pushl
jle
cmp
lret
fldenv
test
mov
mov
mov
mov
cmp
mov
inc
inc
lds
mov
insl
sti
decl
sbb
call
in
xor
xlat
inc
mov
mov
sbb
leave
imul
out
jg
xchg
or
dec
xor
jbe
xlat
pusha
pop
pop
inc
dec
sbb
mov
ss
and
addr16
adc
sbb
cmpsl
pop
call
or
hlt
inc
cld
inc
xor
xor
lcall
pop
pop
and
out
pop
lcall
mov
andb
ds
jmp
scas
push
xchg
psubusw
add
pop
add
bound
pusha
mov
call
sub
ja
push
jbe
mov
fwait
out
ss
cmc
xchg
cli
jo
jp
mov
shr
data16
sbb
test
mov
add
mov
call
and
pop
mov
sub
loop
int3
arpl
test
add
and
sarl
mov
shr
arpl
out
shlb
add
push
ds
xchg
or
jmp
and
push
std
ss
cmc
jecxz
jo
movsb
cs
outsl
inc
and
stos
mov
pop
cld
cld
fdivrl
call
arpl
loopne
insb
into
subl
fs
dec
push
icebp
push
sti
hlt
cld
cmp
imul
in
sbb
jg
jmp
cmp
adc
cmp
rcrl
insb
pop
stos
adc
xchg
stc
mov
in
jne
sbb
sub
test
fistpl
adc
cmp
sarb
or
add
sti
inc
xor
testb
cmp
add
sti
add
pushf
aaa
jo
ds
add
imul
in
scas
out
push
xor
push
pushf
mov
popf
mov
sbb
xchg
push
sti
jb
mov
add
mov
out
sbb
adc
add
mov
push
mov
lock
mov
cmp
sbb
mov
push
sar
mov
jmp
decb
sbb
add
add
or
or
ret
add
fcmove
mov
or
out
jl
cld
addb
dec
iret
sbb
sbb
add
insb
popf
inc
jae
pushf
fsubs
sti
lret
inc
inc
add
dec
shl
scas
ljmp
add
dec
or
nop
lahf
mov
sbb
test
dec
or
add
xor
sub
push
inc
sbb
scas
movsb
xchg
out
call
push
stc
ror
and
sbb
xor
lock
or
jns
mov
cmp
loope
xor
pop
iret
enter
in
xor
jno
in
push
out
loop
fistpll
shll
mov
sub
das
xlat
inc
push
jnp
mov
add
mov
sub
stos
jmp
or
mov
call
lcall
movsb
imul
in
rcrb
jmp
sarl
ss
loop
shll
jle
or
add
inc
xchg
in
push
outsb
add
dec
push
push
lea
sub
or
add
sub
test
xor
push
mov
or
int
sbb
jmp
dec
sbb
pop
bound
bound
xor
pop
push
bound
arpl
mov
xor
aaa
inc
icebp
pop
sub
sub
arpl
mov
call
std
aaa
cmp
dec
inc
xorb
add
add
mov
add
mov
add
mov
add
lock
sbb
lock
adc
out
pop
sbb
out
pop
sbb
mov
and
in
aad
jae
test
xor
add
negl
sbb
jp
test
sub
pop
adc
push
test
sbb
call
jo
mov
in
add
in
sbb
cld
add
pop
neg
cld
push
out
sbb
mov
sbb
mov
clc
mov
cmp
lods
std
jecxz
movsb
add
movntps
mov
test
divb
in
in
fbld
add
inc
pminsw
out
test
bound
jecxz
jo
sub
pop
sbb
xorl
xor
nop
add
test
add
fildl
sub
mov
jo
mov
fs
push
ljmp
ss
sbb
ljmp
xchg
jae
adc
mov
sub
and
dec
and
enter
call
xor
enter
shlb
lods
out
lcall
add
insb
jne
xlat
dec
insl
insl
int
jo
mov
movsl
inc
pop
push
cltd
in
and
test
arpl
je
sbb
out
sbb
add
and
adc
das
test
push
dec
stos
push
jb
mov
subl
push
mov
sbb
add
imul
mov
xor
pop
popa
and
inc
or
lea
pop
jno
fsts
fcmove
xor
insb
jl
popa
jno
jmp
icebp
ds
xor
push
push
mov
in
pop
inc
rcr
xchg
xorb
je
in
xorb
imul
add
mov
and
fmul
or
xor
push
sbb
adc
outsl
popa
or
pop
sbb
hlt
pop
adc
scas
stc
add
sbb
mov
mov
fisubl
xor
inc
hlt
cmp
in
addb
mov
or
add
outsl
fidivl
sub
add
popl
mov
pop
inc
call
jmp
mov
push
sub
imul
mov
and
cwtl
sub
in
add
outsb
rcll
movsl
loopne
in
sbb
push
jo
lea
sub
lea
push
lea
xor
mov
dec
mov
addb
jl,pt
or
jmp
add
jmp
xchg
ljmp
xor
aam
je
loopne
aaa
popl
jmp
cmp
ljmp
mov
dec
in
mov
dec
or
aam
mov
push
mov
enter
test
mov
fbld
add
add
xchg
add
jae
and
out
add
cmp
add
call
ja
stc
or
test
insb
add
jmp
dec
sbb
jmp
outsb
out
or
xor
callw
and
pop
or
or
pusha
gs
add
call
mov
dec
sbb
add
jno
and
add
fdivr
jno
rcr
lea
mov
push
data16
stos
aas
and
adc
shll
jbe
daa
push
lods
std
add
dec
dec
es
cld
xchg
adc
mov
icebp
add
adc
inc
out
mov
jnp
pop
push
push
imul
add
add
pop
jmp
sti
call
or
stos
add
cmp
pop
sbb
cmp
repz
push
outsl
xor
fcomps
xor
call
rolb
fstpt
pusha
jb
adc
cmpsl
cmp
iret
fistpll
subl
pop
inc
push
pushf
and
in
pop
xor
repz
cmp
jmp
xor
add
jmp
add
jmp
mov
mov
test
adc
lcall
or
sub
rorb
lods
cmp
adc
or
ljmp
or
xlat
adc
pop
not
mov
icebp
int
insb
add
movsb
test
pop
fs
sub
fucomp
add
repnz
movsb
xor
add
or
inc
fbstp
dec
pop
mov
ffreep
inc
gs
test
call
hlt
outsb
sub
jmp
hlt
das
jmp
loopne
jno
mov
add
or
aad
push
jge
repnz
add
add
call
xchg
add
shr
inc
call
in
lods
shr
call
inc
call
cli
cmpsl
mov
jb
push
and
pop
mov
cmpb
add
push
cmp
push
pusha
and
inc
out
in
movaps
cmpsl
inc
add
dec
sub
and
jae
jo
and
scas
cld
adc
imul
add
movsb
shlb
jo
aas
push
add
jne
sbb
ljmp
je
mov
mov
sbb
out
inc
cli
push
mov
pop
xor
add
add
pop
push
jge
xchg
in
or
xor
add
ret
cs
test
pop
mov
add
fiaddl
xor
sub
xchg
in
jg
add
adc
mov
aaa
push
jmp
add
pop
out
iret
mov
test
pop
out
fildl
aam
xchg
cs
pushl
in
out
ret
and
cmp
jae
decb
mov
cmpsl
in
mov
mov
add
cmpl
inc
movl
inc
imul
incl
jge,pn
pop
push
das
jae
jl
pop
xor
sub
add
jmp
movsl
sbb
int
movsb
sub
mov
push
mov
add
add
fsubrl
ficoml
add
sub
sti
pop
rorb
inc
ja
jmp
lcall
stos
rcll
xor
add
sub
fsubs
sub
scas
aad
lcall
sbb
push
sub
je
or
shr
add
movsl
add
jecxz
lds
sbb
lock
test
xor
rclb
clc
insb
fnstcw
adc
add
xchg
aad
jle
frndint
test
inc
dec
das
sub
cmp
mov
jle
jb
cs
fcoms
adc
insb
test
sbb
loope
shrb
push
in
sub
mov
sahf
stc
sti
jb
scas
sti
pop
xchg
scas
sti
fisubs
call
sub
test
add
int
xchg
add
sub
mov
shrb
sti
incl
outsl
push
adc
pop
and
jl
mov
xchg
sti
lcall
testb
addb
out
xor
fstps
notb
outsb
jp
rorb
add
push
lock
ljmp
add
outsl
jecxz
icebp
xor
mov
add
sub
xchg
add
pop
jnp
jmp
sub
push
push
jnp
pop
sub
jmp
add
pusha
imul
push
cmp
ret
push
sub
pushf
or
subl
mov
ret
and
or
add
or
xor
roll
xor
sbb
les
clc
pop
jbe
pop
jl
out
xor
mov
or
sbb
jge
call
in
inc
repz
out
and
jmp
fsubs
rcll
push
add
xchg
jo
enter
jle
imul
inc
sub
add
in
jp
mov
add
or
pushf
divl
add
js
inc
jo
add
std
repnz
clc
dec
add
addr16
faddl
add
lods
sub
fcomi
sub
imul
xor
gs
in
jae
lds
adc
aaa
xor
and
add
idiv
bound
adc
imul
cli
mov
push
int
aaa
add
sub
ret
add
xchg
es
mov
aaa
push
jecxz
mov
aad
sti
jb
xor
popf
push
xlat
insb
call
push
push
insl
test
add
jb
pop
cmp
xor
in
inc
jge
imul
add
dec
adc
fstpt
and
add
xor
mov
adc
adc
sub
cmp
repz
xchg
sti
imul
dec
cld
call
in
shrb
inc
scas
sub
add
cwtl
sti
stc
out
mov
subl
inc
push
js
add
jl
add
call
xor
mov
jne
xor
icebp
jmp
ds
add
pushf
add
push
mov
adc
incl
push
push
sub
add
int3
iret
cld
out
adc
inc
lret
jg
pop
test
jns
push
pop
add
or
push
adc
xor
and
ret
jmp
add
rolb
lock
sub
jl
out
jmp
sub
pop
data16
add
mov
xor
mov
jno
inc
ljmp
inc
mov
hlt
jmp
sub
or
insb
or
add
xor
js
or
dec
hlt
rep
mov
test
loop
pushf
or
shl
test
js
and
and
les
sub
xchg
fwait
add
movsb
cmpsl
sub
test
fwait
lods
xor
add
lods
sub
fbld
jle
mov
add
xor
xor
add
les
lea
mov
jmp
lods
repz
insl
scas
jg
insb
push
cli
not
arpl
aam
and
sbb
sti
cmp
repnz
jmp
add
call
test
inc
jno
or
jb
scas
repnz
lahf
add
adc
repnz
arpl
cmpsl
rorl
pop
leave
sub
jb
pop
xchg
fs
add
movl
enter
mov
adc
repnz
es
cli
adc
mov
ret
fcoml
pop
mov
add
out
add
xchg
push
jns
and
stos
out
and
push
push
pop
push
xor
aas
icebp
pop
and
icebp
pop
inc
shrl
cmpsb
sbb
fisttpl
cmpsb
add
ret
mov
adc
ficoms
sbb
sbb
jge
jmp
clc
test
add
mov
dec
add
jo
jnp
add
mov
jl
inc
dec
nop
sub
mov
xchg
jecxz
gs
stos
dec
jo
repz
push
xor
add
call
fildll
mov
clc
mov
decl
mov
mov
rorl
pop
mov
lret
mov
nop
ljmp
and
rcrl
movl
pop
xor
add
adc
shll
add
sub
sub
sub
mov
adc
jmp
clc
imul
fldcw
in
mov
adc
pop
sub
cwtl
jg
jmp
in
xor
sub
adc
jmp
add
add
lds
xchg
mov
mov
fwait
add
adc
xor
add
add
decl
cwtl
std
test
mov
jo
sti
inc
xchg
xchg
or
call
inc
test
test
add
lret
jmp
jo
sti
jmp
iret
out
dec
and
dec
lcall
out
add
inc
xor
out
sti
jmp
sti
enter
mov
daa
pop
out
xor
mov
icebp
dec
aas
lods
and
cmp
out
add
dec
or
xchg
xor
jle
dec
mov
jecxz
sub
add
mov
dec
jo
inc
xor
add
jb
dec
sub
push
decl
or
js
add
repnz
test
popf
or
add
inc
adc
add
das
mov
jno
adc
jecxz
bound
mov
pop
sub
cld
test
xor
adc
sbb
add
xchg
pop
xor
ret
jg
push
xlat
call
pop
cmc
addl
pop
xchg
repz
and
add
xlat
pushl
fs
lcall
dec
cltd
push
or
aad
incl
xor
loope
xlat
decl
outsb
and
cld
sar
ficoms
and
outsl
lcall
test
imul
stos
and
outsb
sbb
cmc
inc
xor
xchg
movsb
in
insb
jle
in
xchg
and
sbbl
add
xor
sbb
push
data16
push
xlat
mov
pop
in
push
shll
dec
shll
jbe
decl
add
mov
sub
pushf
mov
adc
incb
orl
pop
inc
mov
loopne
movsb
imul
pop
hlt
dec
sub
add
xor
add
add
xor
jmp
mov
outsb
or
jp
fdivrl
and
in
outsl
or
rclb
inc
jne
stos
add
pop
jle
jb
shrl
in
das
and
or
shll
xlat
hlt
in
call
mov
and
shlb
jmp
out
xchg
sub
push
xchg
add
out
push
int
mov
lds
lret
mov
or
xor
jmp
movsl
mov
cmovbe
add
ret
rcl
xchg
mov
cld
incl
outsb
or
into
xor
add
sbb
dec
cmp
jg
add
mov
push
cmpsb
push
test
dec
push
cs
add
add
insl
push
mov
sbb
icebp
pop
and
test
adc
sub
test
xor
add
and
leave
adc
shrb
test
jmp
add
shrb
or
push
mov
xchg
test
and
outsl
xchg
adc
xor
inc
out
adc
xlat
push
add
daa
hlt
jmp
fsub
dec
inc
pop
lock
call
imul
sub
jb
in
and
jecxz
fsubl
and
xchg
pushl
and
imul
or
test
jmp
jae
adc
jmp
aaa
js
flds
jmp
pop
push
int3
cmpb
lods
test
add
pop
or
add
in
out
jmp
insl
jmp
mov
or
insl
add
lods
fisttps
loop
mov
insl
out
xor
add
inc
call
add
add
push
jbe
sub
sbb
or
xchg
add
jmp
inc
movsl
addb
je
or
call
add
aam
fdivp
mov
out
xor
jmp
sarl
mov
mov
add
push
cmp
lea
cmp
call
push
sti
fsubrl
inc
jmp
inc
xor
daa
iret
mov
call
testb
arpl
jg
mov
inc
in
push
adc
pushf
hlt
in
imul
add
xor
inc
xor
scas
pop
add
jmp
je
lahf
cld
adc
jmp
mov
xchg
ret
mov
fnstenv
test
sbb
push
stos
cmp
mov
sbb
out
ljmp
xchg
mov
pop
std
mov
cmc
lods
mov
push
inc
cs
in
sti
incb
add
mov
xor
inc
mov
adc
stos
imul
sarl
jmp
scas
mov
mov
mov
mov
lods
jmp
mov
push
mov
shrl
mov
inc
mov
add
lcall
scas
int
incl
add
xchg
push
inc
iret
and
or
inc
add
jmp
or
jmp
es
in
xlat
pushl
bound
jecxz
jbe
jecxz
mov
push
mov
cmc
les
fs
out
stos
rolb
xor
sbbb
jmp
cmp
or
insb
inc
imull
jmp
dec
cmc
dec
mov
dec
fldt
or
test
add
xor
enter
enter
cmp
or
fiaddl
ret
das
jmp
sbb
sbb
cmp
sbb
dec
scas
dec
xchg
jecxz
add
jo
and
shl
add
call
mov
sarb
add
in
push
loop
insb
ja
add
imul
lock
add
loope
sbb
jl
jo
paddb
call
pop
push
pusha
imul
call
imul
call
outsb
ja
sbb
pop
ja
mov
lahf
and
out
add
repz
out
and
call
mov
stos
sub
add
inc
cld
test
rclb
ret
push
xor
push
fcoml
out
sti
test
aaa
mov
add
push
add
add
lds
jnp
shrb
call
test
add
pop
mov
mov
add
mov
aas
and
add
mov
bsf
add
repz
cmp
xlat
jmp
xor
push
push
xchg
add
xlat
lods
add
aam
or
add
jmp
mov
gs
nop
sbb
mov
jae
pop
loopne
call
dec
add
xchg
or
imul
hlt
push
fadds
add
jmp
aam
or
dec
aam
jmp
push
out
mov
pop
or
imul
mov
xor
mov
jmp
mov
loopne
cs
add
xor
mov
or
stos
test
jmp
filds
test
add
cmc
add
out
loop
jmp
dec
push
sbb
test
hlt
push
jmp
sar
arpl
loopne
lods
in
cmp
sub
vaddsubps
jmp
enter
loopne
add
ljmp
mov
out
test
jmp
gs
add
adc
out
pop
add
call
add
mov
call
mov
mov
inc
mov
call
adc
ljmp
xor
sub
inc
jmp
mov
sti
jmp
mov
test
sub
xor
scas
adc
pop
das
std
ret
add
add
or
push
xor
inc
cld
jno
test
and
mov
add
pop
push
mov
add
pop
aaa
mov
stos
inc
and
or
sarl
or
mov
add
xor
or
pop
pop
sub
bound
shlb
aas
and
add
cmp
add
mov
imul
fidivs
and
jg
dec
pop
in
pop
clc
pop
cmpsl
jg
decl
push
fildl
adc
mov
mov
dec
fisttpl
xor
jle
testl
bound
dec
cld
les
and
dec
sbb
add
in
test
lods
jnp
jecxz
add
hlt
push
in
aas
mov
xor
imull
jecxz
sub
and
add
je
stos
adc
cmp
or
je
or
sarb
xor
fnstsw
xlat
divb
mov
jg
xor
add
int
hlt
fsubr
mov
add
mov
inc
out
mov
add
xor
or
mov
sub
cmp
jmp
xchg
or
sbb
pop
and
idivl
inc
ljmp
add
movsl
dec
lds
dec
int
pop
jl
test
mov
test
jmp
push
cmp
and
in
sub
jmp
adc
add
out
push
rcrl
test
push
adc
inc
mov
push
xor
insl
jo
cltd
cmp
jecxz
call
imul
mov
dec
push
fdivrp
stos
jg
lret
out
lea
push
leave
sti
add
cld
dec
xor
mov
add
ret
je
repz
adc
f2xm1
pop
and
add
das
pop
call
enter
das
xor
jae
add
lret
test
add
das
add
xchg
add
add
dec
lea
das
push
push
mov
adc
das
add
push
push
inc
shrb
clc
mov
pop
inc
and
cmp
mov
add
call
push
loopne
fs
pop
add
or
mov
xchg
xchg
mov
jl
mov
insb
enter
push
jmp
aas
imul
aas
cmpsb
ss
cld
stc
imul
cwtl
addb
adc
adc
call
movsb
sarl
adc
push
cld
cld
pusha
ret
and
inc
pop
cld
fcoml
jmp
push
jae
in
rol
cmp
mov
add
xor
jge
lods
faddl
cmp
jg
adc
cmc
jle
adc
mov
arpl
jae
xchg
fs
lcall
fs
das
jno
or
nop
push
push
fldl2t
jl
enter
fldcw
or
mov
mov
lock
jl
movsl
sub
jecxz
adc
add
add
add
call
jge
enter
fcomps
int3
xorl
fildll
loopne
insb
and
loopne
scas
out
mov
fsubrp
lods
push
fcmovnbe
jg
jmp
stos
clc
rcrb
lret
rorl
jg
pop
in
test
int
leave
cmp
shlb
test
iret
add
stos
iret
addr16
add
fcmovnbe
jg
jmp
test
inc
das
xchg
inc
jmp
jg
sti
bound
jp
test
add
test
clc
jb
iret
pop
fcmovnbe
xchg
add
cmp
mov
adc
shlb
cmpl
je
loopne
into
stos
int
pushl
jo
mov
cltd
mov
adc
pop
push
stc
cmp
push
mov
inc
cmovno
add
je
icebp
notl
icebp
fists
daa
push
cmp
sti
test
mov
call
push
xchg
jmp
push
inc
sub
sti
ljmp
repz
in
jmp
jle
jecxz
into
mov
popa
imull
dec
leave
repnz
rolb
lds
cld
cld
add
and
aas
jmp
pop
pop
xchg
nop
out
sub
cmp
jmp
enter
adc
jge
jecxz
lock
enter
in
add
ret
push
sets
inc
ja
inc
sub
sub
aas
jae
cmp
inc
adc
jg
iret
pushl
icebp
call
mov
xor
call
icebp
pushf
add
sbb
stos
lods
inc
jp
inc
sbb
jmp
out
mov
add
test
push
add
add
leave
xor
hlt
repz
test
in
cld
jecxz
xor
fs
cld
cmpsl
jmp
lcall
pop
ds
lea
mov
movsl
iret
add
fsubrl
or
call
and
je
adc
cmp
lods
int3
push
sub
fsubr
adc
jge
test
mov
sbb
cmpsb
test
clc
insb
sub
adc
je
adc
fistps
ret
inc
shll
jg
in
orb
cmp
and
add
cwtl
aad
xchg
push
adc
insb
negl
arpl
sbb
jmp
cmpsl
inc
add
jb
push
pusha
xor
sti
push
test
pop
xor
imul
jnp
pop
xor
aad
mov
das
add
fld
inc
cmpsb
pop
jmp
dec
xchg
pop
xor
jp
dec
push
jecxz
push
rcll
cmpl
pop
and
and
add
sbb
jecxz
aas
daa
cld
mov
jecxz
jne
sahf
xchg
dec
subl
dec
es
data16
cld
mov
rclb
mov
test
int
or
jmp
fistl
shlb
adc
jp
add
dec
incl
shlb
dec
nop
and
inc
cmp
fwait
mov
ss
and
lret
clc
push
loope
rolb
add
sbb
ret
push
mov
repz
lret
jnp
pushf
jecxz
cmp
pushl
mov
enter
in
bound
xor
loopne
outsb
xor
das
bound
xor
pop
cld
inc
dec
pop
cmpb
addl
bound
das
cmpsb
sub
xchg
dec
cmp
shlb
into
add
sub
pop
cmpsb
xor
mov
and
fistps
inc
sub
mov
jae
add
shr
xorb
add
or
or
ret
xor
cmp
test
inc
test
pushf
or
sub
jge
jmp
jmp
push
gs
bound
add
jp
pop
pop
cmpsb
inc
in
pop
aam
fstps
adc
jb
scas
sti
mov
lods
repnz
jmp
cmpsl
ret
mov
call
inc
xor
call
and
dec
sarb
out
add
and
jmp
mov
ds
out
data16
cld
add
shlb
inc
jmp
sub
mov
add
mov
pop
sti
call
int
popa
mov
inc
out
xchg
imul
pop
roll
cmc
cmp
jne
popa
lahf
mov
dec
pop
mov
sbb
sub
and
shlb
call
mov
call
out
aam
call
dec
pop
jecxz
inc
xor
pop
sub
adcl
fwait
push
lcall
dec
je
or
les
push
dec
cmp
jp
lret
cmpsb
ja
out
push
cmp
cmpsb
mov
mov
sahf
daa
stos
mov
inc
cwtl
and
pop
add
xchg
add
jmp
add
hlt
push
cld
fmul
fsubs
int
lret
scas
loope
cs
jbe
add
adc
or
fistpl
add
mov
pop
inc
add
or
jno
pop
andl
xlat
repnz
incl
int3
idiv
test
cld
mov
jg
jmp
lock
xor
add
shll
addl
or
cmpsb
cmpsb
js
fildll
push
testl
jmp
xlat
add
in
xor
jmp
push
ret
gs
jae
sbb
xor
add
mov
lock
cmp
mov
sub
cmpsb
je
out
jp
mov
sub
sub
fmuls
mov
insb
inc
clc
xor
in
xchg
xor
bound
mov
add
sti
push
int3
je
andb
xchg
and
jg
add
out
adc
cmpsl
inc
push
arpl
cs
and
call
inc
cmp
jb
mov
rcl
stos
sub
call
int
stc
imul
pushf
movsb
mov
sti
adc
mov
call
xchg
out
lret
roll
call
add
add
sti
incl
cltd
push
ret
mov
jns
xor
dec
jg
jbe
dec
cmp
inc
push
and
popf
mov
push
mov
cmc
je
idivl
add
leave
inc
add
cmp
sahf
jecxz
add
cli
push
int3
mov
cli
jne
add
dec
mov
test
mov
dec
mov
add
jl
ret
call
fmull
ret
call
push
xchg
lds
jmp
adc
mul
mov
xchg
jns
push
xchg
push
sti
push
pop
les
dec
mov
fcos
test
lds
xorb
jns
and
psubq
arpl
jg
jp
pop
pushf
ds
test
add
mov
xchg
call
lret
ror
jle
jmp
cmpsb
sub
xlat
jmp
or
stos
mov
push
push
jo
rcrb
mov
cld
repz
insl
ljmp
add
adc
jmp
int3
stos
add
insb
add
mov
add
xor
pop
and
push
cltd
inc
pause
pusha
cmp
cmp
add
jecxz
jmp
or
icebp
pop
jmp
pop
push
sbb
mov
add
xor
iret
adc
mov
jmp
lock
xor
int3
lock
add
xor
mov
adc
add
std
mov
out
std
test
xor
inc
jmp
outsl
hlt
or
icebp
pop
ljmp
or
inc
jmp
add
ja
and
jmp
push
add
ret
adc
xchg
adc
sti
jle
lock
add
sti
mov
mov
jmp
pop
imull
mov
add
adc
mov
or
jmp
sti
jb
or
sti
cld
shlb
jmp
adc
add
sarl
xor
mov
add
inc
adc
mov
test
iret
or
push
xstore-rng
cmpsl
add
subb
mov
adc
add
divl
jne
add
push
xor
mov
or
xorl
ljmp
jnp
cli
sub
jb
push
nop
adc
cmp
jne
pop
sbbl
shll
jae
sarb
dec
push
add
add
mov
cli
ds
lret
sti
sti
mov
mov
or
cmp
or
jmp
xchg
adc
fcos
out
mov
repz
mov
pop
add
push
jge
sub
or
jmp
incl
adc
js
imul
out
stos
fsts
lea
and
pop
push
xchg
xchg
adc
add
sbb
xchg
cld
test
adc
js
sti
in
push
hlt
test
jl
ljmpw
cmp
add
in
jmp
mov
cltd
mov
cli
imul
xor
nop
sub
push
or
sar
decl
mov
fsubr
add
sbb
fcom
inc
jmp
inc
ret
xor
aas
pop
cmp
add
xor
hlt
data16
std
jno
inc
flds
mov
push
mov
and
push
data16
aad
mov
jo
imul
cmp
add
xor
leave
xchg
jae
je
popa
popa
adc
or
call
repnz
cmc
call
and
jmp
repnz
cmc
jmp
adc
lret
add
sub
jmp
hlt
xor
dec
fs
sti
pop
pop
sbb
sti
test
push
lods
arpl
jge
aam
pop
inc
push
jle
inc
cmp
jmp
rclb
push
xor
hlt
xorb
add
mov
sbb
arpl
insb
adc
sbb
mov
test
xchg
xor
add
add
ret
dec
pop
inc
add
out
je
fsubs
xor
xor
pop
sub
inc
xchg
add
call
stc
mov
call
test
sarb
cmp
xor
test
cld
pushl
push
leave
push
addb
push
cmp
lea
mov
call
jmp
inc
in
push
addb
fstps
or
ret
aad
jmp
out
test
push
sbb
icebp
xchg
mov
inc
add
add
stos
ficoms
test
mov
push
mov
add
add
fs
in
mov
sti
inc
push
les
inc
in
stos
adc
add
mov
mov
sti
data16
lea
mov
inc
jmp
xor
ds
call
nop
stos
bound
cld
rol
dec
pushf
dec
insl
jmp
cmp
cmp
fs
in
mov
xor
inc
jecxz
xlat
pop
xchg
adc
and
mov
adcl
mov
push
add
imul
insb
inc
int
xlat
xor
sti
cli
testl
inc
add
loope
outsb
add
pop
cmp
in
jo
rorb
add
cmp
cwtl
insl
imul
jbe
sti
xor
lock
add
insb
add
sub
mov
add
add
add
in
addr16
stos
sub
sub
add
out
mov
imul
push
sub
mov
aam
add
lea
pop
dec
push
mov
pop
push
movsl
add
mov
mov
dec
leave
push
lcall
not
jnp
xor
adc
in
ret
sbb
add
push
jo
pop
fisubl
inc
hlt
jb
outsb
sub
loope
inc
pop
aas
shlb
lea
pop
call
pop
push
push
xchg
inc
sub
cmp
repz
mov
pop
call
inc
push
fmull
not
jmp
inc
cmp
imul
adc
aas
inc
lret
scas
inc
dec
sti
xchg
and
jb
xor
lret
call
jmp
addb
clc
jb
mov
push
imul
data16
pop
ret
rcrb
cmp
jo
xchg
xchg
dec
les
outsl
push
repz
jl
pop
lea
ficompl
subl
daa
sti
cmp
cmp
xor
testl
add
int
sahf
enter
xchg
jmp
push
and
idivb
mov
lea
pop
mov
call
dec
dec
lods
add
add
insb
insl
push
rolb
cmp
pop
outsb
icebp
xchg
std
cld
imull
ret
mov
addr16
fidivl
jmp
mov
pushf
dec
inc
jmp
shl
add
mov
add
scas
outsl
ficomps
push
push
test
and
xor
bound
xchg
jmp
in
je
sub
or
adc
enter
xor
fidivl
add
cmc
push
xor
or
dec
bound
adc
jno
and
and
cmp
cmpsl
push
ret
inc
stc
mov
dec
adc
add
sbb
mov
jne
push
and
nop
add
jmp
sbb
pop
cmp
test
xchg
dec
add
or
add
leave
jo
cmp
push
and
iret
jo
sbb
mov
and
divl
mov
mov
xor
pop
es
ret
add
dec
dec
and
dec
dec
or
add
cmpsl
sbb
mov
lret
test
call
inc
jnp
jnp
add
inc
and
pop
jns
les
and
push
stc
rorl
jmp
or
jne
jo
ss
imul
in
test
sub
ds
cmp
add
jmp
decw
in
add
add
testl
fistpll
add
in
lea
jmp
hlt
jno
loopne
push
cmp
cli
aam
mov
pusha
stc
out
mov
sbb
mov
inc
jmp
push
cmp
adc
out
jmp
mov
and
into
push
addb
push
inc
sub
pop
pusha
pusha
add
add
xchg
gs
loopne
cmpsl
xor
outsl
ret
push
stc
fadds
jmp
test
fdivr
mov
cmc
inc
insb
sub
incl
lea
mov
stc
jmp
pop
in
mov
loopne
fnstcw
pushf
into
inc
jmp
mov
add
xor
add
popa
add
mov
stc
fldt
and
adc
mov
out
sub
jle
insb
mov
rol
add
fucomp
pop
sar
mov
flds
mov
cmc
mov
cmc
or
lcall
fld
mov
pop
mov
add
mov
aad
inc
and
jae
or
xor
jmp
xorb
jmp
call
cmp
jmp
add
call
pusha
jg
mov
mov
sbb
jo
add
test
adc
out
inc
lea
add
dec
and
pop
add
fidivs
sti
out
sgdtl
iret
hlt
je
mov
sub
cmp
push
mov
jg
addr16
lock
inc
in
inc
data16
push
divl
notl
add
fnstcw
xchg
cmp
arpl
dec
incl
xor
add
dec
lock
jmp
xor
add
jmp
and
jg
push
cmp
or
cwtl
dec
pop
test
in
sti
cli
mull
add
lret
fdivp
sti
sub
jl
push
inc
in
xchg
aaa
testl
add
add
movb
sbb
cmp
jnp
jmp
pop
sti
popf
inc
adc
fmuls
jl
add
in
mov
jmp
push
data16
xor
push
xor
repz
insb
out
adc
clc
insb
inc
jmp
jae
mov
mov
mov
inc
xor
add
add
subps
insl
xchg
jmp
jmp
add
fiaddl
mov
in
andb
jmp
dec
jmp
shl
xor
dec
data16
movsl
mov
cmp
enter
xor
popa
data16
mov
add
sub
call
insb
scas
cmp
push
and
aam
sub
sub
call
cmpsl
cmp
push
and
mov
sub
call
insb
sub
shll
je
es
inc
mov
add
int
push
xchg
addr16
lret
xor
out
add
mov
pop
mov
cltd
pop
push
mov
ret
test
or
add
and
pop
add
test
xchg
inc
pop
mov
sub
aad
xchg
idiv
adc
push
jb
mov
and
popa
bound
and
jge
adc
test
xor
inc
pop
addl
sarb
dec
push
mov
and
inc
jp
add
in
pop
sete
pop
inc
sub
divl
bound
add
negl
pushl
and
shll
add
mov
or
push
aaa
inc
and
mov
ret
jb
xor
dec
push
push
leave
push
xchg
xchg
out
or
test
xor
xor
push
rclb
dec
cld
jae
add
inc
mov
fs
rorl
pop
add
lret
add
fmul
lcall
sub
inc
jmp
out
sub
xor
inc
jmp
push
clc
mov
mov
add
fnstenv
call
sub
subb
sub
mov
call
into
shll
rorb
mov
daa
xor
pushl
mov
add
dec
sbb
inc
jmp
jno
das
xor
cmpsb
jae
sub
inc
jmp
popa
cmpsl
xor
cmpsb
xchg
dec
and
inc
jmp
popa
scas
xor
divl
cmpsb
and
add
add
inc
jmp
add
or
jmp
call
xor
mov
sbb
lods
add
call
xor
dec
iret
sbb
inc
or
adc
sub
lahf
shll
jmp
out
js
test
lahf
xor
insb
add
test
and
test
lahf
xor
insb
add
sbb
dec
test
pop
hlt
test
lahf
add
or
add
into
sub
je
insl
add
jae
adc
fs
mov
mov
arpl
adc
ret
fs
sub
add
and
or
sub
add
jae
adc
push
mov
gs
sub
add
jae
adc
inc
mov
add
sub
in
push
insl
add
jmp
hlt
adc
movsb
push
xchg
aam
add
pop
inc
jmp
je
sub
jmp
mov
pop
inc
jmp
stc
stc
mov
lds
scas
push
push
jo
stc
mov
lcall
daa
jle
sti
fidivs
aad
xchg
adc
fistl
or
add
insb
jp
pop
cmpsb
xor
bound
adc
outsl
add
cmp
je
xchg
mov
mov
xor
pop
sti
mov
jmp
in
pop
mul
push
add
adc
cmpsl
xchg
or
stos
and
std
jl
push
stc
jge
push
in
inc
jb
jp
push
fnstcw
push
aad
sbb
xchg
xchg
imul
add
jmp
insb
xchg
jmp
jmp
add
xor
gs
jg
insb
jg
push
out
ljmp
cmp
hlt
aam
lret
sbb
outsl
enter
or
out
loope
xor
push
adc
out
xchg
cli
pop
push
stos
jne
cmp
out
outsl
sub
leave
call
inc
mov
add
rclb
jmp
xor
jecxz
dec
jg
loopne
out
inc
xor
mov
and
inc
jmp
and
das
add
call
or
scas
out
or
mov
push
adc
inc
jnp
cmpl
mov
and
iret
insb
pop
mov
sub
add
mov
pushl
dec
push
inc
add
jno
shl
cmp
cwtl
push
jb
xchg
je
fisubrl
push
sub
idiv
sub
inc
pop
repz
mov
sti
mov
icebp
push
sub
inc
or
sbb
fs
lods
and
add
jb
add
stos
mov
and
xor
outsb
or
xlat
or
cmpsb
xchg
pop
sbb
add
adc
push
add
daa
mov
repz
add
cld
pop
mov
add
mov
out
xchg
lahf
pop
leave
xlat
xor
sbb
or
add
mov
jno
cmp
outsb
add
std
sub
or
mull
ss
xchg
pusha
push
add
loop
mov
iret
popf
sub
add
es
mov
xchg
pop
into
iret
push
mov
push
jmp
cmpsl
call
dec
out
jmp
jns
push
dec
add
xor
ret
mov
inc
jmp
mov
add
xor
jle
es
pop
cld
add
jbe
push
fsts
mov
pusha
add
fildl
outsb
out
in
add
xchg
pop
push
jbe
push
in
fldt
and
addr16
jle
xor
add
dec
iret
inc
outsb
add
mov
sub
cmp
ljmp
and
fs
jmp
out
and
cmp
pop
jbe
out
xor
insl
daa
and
jb
mov
add
shlb
cmpsl
adc
pop
call
add
xchg
and
jb
mov
sti
jmp
enter
repz
mov
add
call
push
sti
push
mov
dec
push
xor
mov
add
out
orb
mov
adc
sbb
test
jae
popf
insl
pushl
xor
icebp
and
mov
lea
je
cltd
aas
lea
addb
notl
mov
inc
and
pop
push
mov
mov
idiv
xor
mov
add
test
adc
jmp
or
pop
xor
push
inc
jmp
cmp
fsubp
cmc
aas
jmp
ficoms
pusha
push
ds
mov
ret
fwait
ljmp
xchg
incl
sub
and
pop
adc
stos
xchg
inc
notl
or
push
bound
rolb
lea
dec
adc
dec
xor
push
jae
xchg
xchg
loopne
jnp
push
and
repz
incl
xor
add
add
push
and
sti
xor
adc
test
daa
call
mov
test
xchg
push
int3
adc
ljmp
xor
sarb
add
out
add
mov
sahf
cld
jmp
outsb
shll
loop
jp
jmp
xchg
bound
jmp
add
add
sbb
cmp
sbbb
mov
push
xchg
push
std
ljmp
sub
call
sbb
lahf
mov
aad
stos
adc
push
xor
out
pusha
xchg
in
pop
and
test
int3
or
sub
fdivs
push
cmp
das
xchg
add
add
adc
out
cmc
add
in
xor
or
popf
or
mov
xchg
jmp
popf
stos
das
add
push
pop
mov
ret
sub
sbb
xchg
mov
or
xorb
add
inc
xor
notl
xor
add
imul
push
out
dec
push
add
cmp
add
testb
bound
pop
test
pop
adc
cltd
das
mov
addl
push
and
jmp
in
jg
and
dec
je
insb
cmpsb
sbb
ss
add
or
and
call
das
lea
sub
call
push
push
adc
and
pusha
pop
out
pop
cmp
mul
add
out
and
shll
inc
adc
push
sbb
out
js
imul
sub
std
jae
sub
mov
and
incl
adc
xchg
mov
in
in
fstl
pushf
mov
sub
sub
xor
push
jb
sub
cmpsb
and
aad
dec
cltd
std
adc
xor
xor
or
add
clc
xor
ljmp
add
in
int3
xor
hlt
pop
pop
movl
cmp
mov
mov
mov
and
inc
pop
icebp
cmp
mov
jno
sub
add
clc
xchg
dec
cmp
xchg
dec
add
test
pop
inc
iret
clc
sbb
ret
add
add
add
fs
stos
je
cmp
add
cld
dec
cmp
rclb
jmp
add
push
insb
sub
inc
cltd
insl
hlt
and
call
imul
sbb
loope
hlt
and
movsb
dec
dec
cltd
inc
test
call
ljmp
inc
add
pop
xchg
loop
in
and
add
std
push
adc
hlt
and
je
call
shrl
fldl
ja
and
pusha
push
push
mov
mov
ret
cs
lahf
mov
sub
xchg
sti
imul
mov
subl
out
lcall
fs
divl
stos
fs
divl
stos
fs
add
divl
lea
out
add
repnz
cmpsl
add
jbe
mov
jo
sub
rolb
and
out
adc
filds
orl
xor
das
sub
into
hlt
push
ret
push
cmp
mov
xchg
lcall
sbb
inc
add
adc
and
jge
ljmp
or
adc
mov
adc
pcmpeqb
das
nop
out
inc
ja
lea
xchg
decl
mov
roll
add
xchg
fcoms
push
push
dec
and
or
pushf
cld
jmp
sbb
insb
jne
xor
add
stos
cmpsl
add
xor
push
jbe
lds
inc
mov
inc
pop
push
mov
add
add
push
or
add
pusha
cmp
dec
push
sub
xor
mov
lods
xchg
pop
out
add
xor
in
lahf
or
push
or
add
fwait
repnz
sbb
xor
or
scas
push
cmc
test
loopne
dec
fstps
push
mul
xor
movl
jnp
call
add
ds
iret
sub
hlt
and
sbb
lea
rcr
dec
call
lcall
call
cld
pop
push
bound
xor
lock
pop
pop
int
lods
dec
lds
mov
jmp
cmp
xchg
xor
jb
push
js
add
lds
add
popa
in
and
scas
mov
dec
out
call
pop
lods
pop
push
mov
mov
in
mov
inc
hlt
add
sub
cmc
dec
xor
call
dec
add
push
rorb
les
add
stos
inc
hlt
dec
pop
sub
inc
push
mov
test
orl
jge
fcmovbe
dec
add
add
xor
mov
or
mov
lods
inc
add
hlt
pop
mov
test
push
punpcklwd
hlt
adc
outsl
add
icebp
cli
mov
sbb
call
dec
in
add
mov
inc
mov
scas
mov
ljmp
push
inc
popf
mov
xlat
sub
add
sbb
mov
jle
jnp
rclb
xor
test
mov
ret
cs
lea
pushf
out
add
sti
scas
ljmp
leave
sub
in
add
push
out
popf
adc
movsb
hlt
call
aad
sbb
inc
jmp
mov
xchg
jmp
jmp
cld
add
xlat
add
lods
xor
add
mov
inc
pop
cmp
out
lret
or
in
adc
push
incl
xor
cmpsl
popf
pop
mull
pop
aad
stos
mov
clc
pop
push
mov
cmpsl
add
inc
add
lds
in
jae
out
stc
mov
shll
into
sti
jo
daa
aam
mov
add
add
addr16
jmp
or
sbb
clc
adc
out
fnsave
call
jb
idivb
pop
push
xlat
ljmp
adc
mov
sub
jg
in
dec
in
pop
call
les
addr16
jmp
add
call
push
or
pop
repz
add
pop
sub
nop
push
das
add
cmp
lea
dec
adc
fsubrs
mov
mov
out
push
das
add
popf
test
leave
jns
inc
rcrl
cmpsb
add
sbb
push
jg
shrl
add
sub
add
mov
xor
sbb
inc
roll
add
test
jg
add
xchg
add
add
ret
decl
loop
ljmp
pop
add
incl
imul
xor
mov
jl
adc
hlt
add
push
xchg
jmp
incl
jmp
inc
jl
xchg
addb
std
addl
jmp
decl
add
xlat
cmpb
lcall
add
mov
xchg
jmp
jecxz
mov
add
jmp
mov
add
repz
add
jmp
subb
add
add
push
jecxz
add
stos
clc
ljmp
repz
mov
faddl
inc
jmp
adc
add
and
lcall
inc
sbb
cwtl
jno
leave
bound
mov
sub
add
stos
data16
xor
xor
xchg
cmp
outsb
push
cmp
push
and
push
mov
in
jmp
add
bnd
inc
cld
adc
out
xor
cmpl
subb
add
add
lods
mov
jmp
push
or
out
xor
jmp
call
push
mov
xor
pop
pop
jne
jmp
jmp
es
jmp
and
in
xor
mov
jmp
bound
imull
leave
data16
cmp
push
xchg
cmp
xorl
jge
add
mov
adc
scas
inc
xor
mov
ja
call
pop
leave
add
inc
arpl
add
addr16
addb
mov
pop
clc
add
xor
insb
icebp
sub
test
sub
sub
lea
repnz
rclb
aad
xchg
out
xor
push
cmp
je
jmp
or
add
jmp
push
add
and
aas
pusha
push
mov
xor
incl
mov
mov
xchg
dec
push
jne
adc
or
into
ljmp
add
jg
pminsw
push
add
xchg
dec
mov
xchg
dec
mov
aam
shrb
leave
dec
cmpl
cmp
add
mov
decl
gs
dec
ja
rorl
push
in
jmp
shl
mov
xchg
jmp
into
xorb
test
jmp
lret
popa
xchg
adc
pop
pop
jmp
add
aas
cli
push
mull
ljmp
xor
mov
test
adc
jmp
lahf
fs
call
shr
pushw
jmp
add
xor
jg
dec
in
fisttpl
or
call
sub
push
add
stos
in
stos
in
sahf
adc
lea
xor
jmp
call
inc
xlat
mov
sbb
dec
incb
add
lods
shrb
pop
out
pop
sbb
jge
lahf
xor
inc
pop
xchg
je
jmp
sbb
ds
xlat
test
xchg
xchg
add
imul
mov
call
outsl
or
loope
dec
mov
sbb
adc
call
pshufw
enter
fwait
push
push
add
mov
and
pusha
notl
iret
outsl
jbe
cmp
jle
jp
loop,pn
mov
sub
and
xchg
lods
mov
lcall
dec
push
inc
adc
inc
and
adc
add
sub
sub
in
push
ret
dec
push
push
mov
incl
adc
add
dec
es
mov
inc
jl
push
lods
je
and
xlat
adc
outsb
dec
inc
push
ror
add
lcall
incb
addb
add
or
in
push
stc
add
jmp
sbb
imul
es
xor
in
dec
add
xchg
addl
add
add
add
xor
insl
outsb
in
and
adc
add
pop
adc
outsl
cmpsb
cmpl
jmp
imul
add
push
sti
sub
sbb
stos
clc
add
xor
repnz
imul
sar
and
pop
lret
pop
fstpl
icebp
adcl
add
rorb
out
sbb
and
add
xor
pop
hlt
clc
movsl
jle
and
or
sbb
xor
mov
add
je
outsl
xchg
fimuls
xchg
xorb
test
call
mov
in
daa
pop
sub
xor
and
xchg
jae
cmp
mov
add
cmp
xchg
push
call
or
mov
out
push
mov
sbb
or
push
sbb
add
mov
decl
jns
cli
mov
xchg
push
pop
mov
mov
sar
add
pop
mov
out
jle
jne
insb
lock
mov
add
rclb
inc
add
pop
mov
test
jns
incl
jle
jne
insb
in
lfs
mov
inc
mov
call
jns
inc
jge
setbe
rolb
jns
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
add
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
fsubs
jl
adc
stos
xor
dec
sub
imul
mov
jnp
mov
lret
je
ljmp
sbb
add
xchg
add
pop
fisubrs
in
add
or
imul
lods
sub
popa
outsb
mov
pusha
fs
pop
jns
cmp
jmp
int3
lds
cmp
fadds
inc
xchg
sbb
add
mov
or
push
lock
and
add
imulb
insb
pusha
daa
cvtps2pi
out
or
hlt
int3
pop
loopne
sub
sarl
add
pop
and
movaps
mov
xor
out
xchg
cld
std
call
lock
testl
add
mov
jmp
call
aaa
addl
sti
xchg
mov
shrb
xorb
test
ljmp
gs
dec
ljmp
cmp
push
cmp
jae
add
mull
call
and
call
cmp
test
sub
jns
movswl
ds
imul
call
test
incl
mov
and
xor
sbbb
test
xor
lea
inc
and
or
push
xor
add
sub
sbb
andb
xchg
push
test
das
add
stc
pop
and
add
and
data16
push
das
cmp
test
jmp
call
nop
daa
and
inc
movsl
cwtl
adc
enter
imul
add
clts
rclb
addr16
sbb
add
cltd
leave
inc
ljmp
add
add
jg
cmc
pushf
xor
fsubrs
ror
or
xchg
push
mov
movsb
test
call
in
adc
jmp
jg
imul
and
std
dec
adc
mov
cmp
or
mov
add
mov
jb
inc
pop
dec
pusha
dec
mov
pmuludq
or
add
mov
les
aaa
push
insb
mov
and
pushf
mov
add
add
les
lock
push
testb
int3
pop
loopne
push
add
xor
iret
push
jmp
adc
pop
ret
mov
clc
gs
in
jno
dec
push
add
lock
cs
mov
popf
add
out
inc
testb
jo
adc
sbb
dec
adc
in
cmp
xchg
daa
call
add
out
ja
and
addr16
or
mov
add
stos
mov
daa
call
jno
pop
jnp
mov
outsb
repz
imul
loope
jo
and
sti
lods
sbb
add
call
and
adc
dec
sub
jge
mov
lods
jno
dec
negb
sbbb
shll
mov
push
leave
not
insb
je
mov
and
xchg
inc
adc
and
add
out
and
jp
jns,pn
or
test
into
insl
pop
test
add
out
addb
jg
mov
push
jg
scas
test
xchg
xor
dec
out
test
jmp
in
xchg
mov
ret
rcrb
mov
or
je
add
pop
sbb
insb
xlat
sbb
movsl
jle
or
adc
jmp
dec
and
adc
je
adc
incl
push
adc
jb
pop
jo
out
add
jo
push
xchg
cmp
jecxz
out
lea
adc
cmp
xchg
incl
adc
insb
rorl
mov
jno
aam
sub
jmp
stos
divb
jmp
mov
sbb
test
das
roll
lds
add
add
mov
shl
add
outsb
stos
add
xchg
push
mov
or
xchg
lds
xchg
mov
rol
mov
loopne
and
rolb
pop
shrb
leave
xorb
jmp
push
call
xor
insl
push
sti
pop
shlb
push
add
mov
mov
add
cli
ss
lods
inc
add
es
call
jge
test
insl
mov
adc
mov
fsubr
xor
xor
xor
inc
out
mov
aas
fisttpl
mov
mov
mov
jmp
ret
out
xor
add
add
cs
and
clc
call
xor
and
mov
or
loopne
adc
ret
ds
repnz
jg
outsl
and
ret
inc
inc
cmp
mov
jo
and
test
ret
idiv
cmp
stc
bndstx
call
fld
subl
je
push
enter
add
enter
jnp
jmp
push
and
test
stc
and
sbb
mov
mov
pushl
push
and
sbb
push
fcoml
inc
jmp
push
mov
dec
call
stc
or
pop
fcos
je
push
and
scas
push
pop
add
rcll
dec
movl
lods
dec
in
cltd
jle
xor
add
add
leave
ds
xor
mov
sub
jmp
les
xor
movsb
sbb
pop
add
jo
pop
mov
dec
cmc
mov
xor
shrl
out
jmp
sub
outsl
imul
add
add
stos
adc
stos
in
add
adc
or
lods
sbb
in
insl
lret
ljmp
rcrb
xor
cmp
push
push
sub
add
push
movsb
sub
jmp
sub
scas
sub
push
nop
jp
sti
jle
dec
ljmp
cmp
push
xor
inc
sub
sbb
or
inc
mov
stos
mov
call
sub
loop
test
imul
add
sub
add
push
bound
cltd
call
call
test
imul
das
add
shlb
add
lret
xor
popf
mov
test
xor
push
add
lret
sbb
inc
cmpb
add
push
pop
mov
negb
inc
xchg
cs
mov
cld
sbb
je
add
add
stos
lret
std
jle
and
sub
fnstcw
popl
add
adc
or
ret
fs
and
movsb
stos
inc
adc
add
mov
and
mov
and
mov
test
cs
sti
jbe
aam
repnz
popa
fsubr
ret
rorb
pop
movsl
push
decl
or
adc
testb
jge
out
mov
sub
or
jmp
mov
push
jmp
and
and
insl
dec
and
sub
in
dec
xchg
and
pop
lret
repnz
mov
fwait
ret
mov
loopne
jbe
add
testl
gs
lds
in
jmp
or
push
add
mov
jb
add
sbb
sbb
add
jb
fcompl
inc
cmp
mov
mov
or
add
cmpl
outsb
sub
out
adc
mov
mov
or
das
adc
xor
push
out
imul
xor
mov
ret
out
arpl
and
in
es
imul
sti
mov
push
testb
sbb
idivb
mov
ljmp
or
mov
or
daa
add
pop
add
outsb
shlb
add
in
mov
add
push
jle
push
ljmp
test
dec
jg
cli
xor
dec
adc
dec
test
add
int3
cs
mov
cmp
jmp
mov
ror
cld
sub
jmp
mov
aas
or
add
push
lahf
leave
xor
fiaddl
dec
lret
dec
jle
dec
je
call
add
mov
sbb
push
or
push
push
test
and
or
push
add
xor
shrl
mov
outsl
dec
add
add
add
nop
pushl
or
adc
mov
mov
push
subb
jge
add
mov
sub
inc
xchg
cmpsb
pop
adc
hlt
adc
jg
out
test
jg
mov
or
inc
jne
dec
cmp
add
mov
jmp
mov
jg
cltd
add
loop
incl
add
xor
add
xor
in
mov
out
pushf
ja
loop,pn
mov
add
xor
ljmp
std
sub
cli
push
shlb
add
mov
add
incb
loopne
sub
aad
mov
jmp
add
loope
jmp
mov
mov
cld
xchg
jp
adc
xchg
mov
jmp
pusha
sbb
sbb
ljmp
adcl
popa
sub
add
repz
fsubrp
xchg
outsl
imul
call
jecxz
ret
sub
push
je
outsb
inc
fucomip
xchg
dec
imul
jmp
test
jg
out
and
xor
repnz
outsl
inc
xlat
out
xchg
sub
add
orl
add
or
add
push
mov
idivl
call
sub
add
mulb
mov
lods
repz
mov
test
or
pop
add
jne
add
cs
dec
adc
lret
ret
idiv
add
jp
add
xor
mov
and
mov
xor
cmpb
out
inc
or
and
shl
int
movb
mov
repz
mov
mov
les
sbb
ljmp
push
nop
inc
andb
mov
mov
xchg
xor
outsl
daa
mov
add
add
cmp
jo
jecxz
pusha
inc
fnstsw
sbb
inc
adc
or
std
fs
sbb
pop
adc
and
jle
lret
jmp
sbb
cs
ret
out
sti
lods
or
pushf
cmpsb
jg
and
mov
mov
shrl
scas
sti
imul
push
loopne
cmp
add
ljmp
adcl
xorl
inc
or
mov
mov
push
lock
inc
scas
and
dec
ljmp
cmp
loop
push
je
scas
sub
out
add
shrl
pop
sub
xchg
jmp
ret
dec
dec
sub
add
fildl
imul
add
popf
jbe
sub
iret
pushf
fidivrl
jbe
movsb
aas
cltd
jnp
or
xor
jmp
add
jb
call
fiaddl
xorb
sti
or
movsl
das
sub
dec
cmp
addr16
fisubs
testb
mov
std
push
jp
repnz
test
inc
jp
jae
and
in
add
pop
mov
jno
add
or
das
add
mov
inc
jmp
cmc
div
movsl
mov
xchg
dec
jns
lds
ss
sub
inc
xchg
mov
outsl
test
std
call
jmp
jg
adc
xchg
add
enter
faddl
push
xor
inc
push
mov
outsb
jle
jnp
dec
jbe
rolb
push
jmp
cli
incl
imul
xchg
mov
add
add
testl
jge
clc
inc
jbe
ret
cmp
pextrw
cmp
and
sub
cmp
push
and
jne
and
testl
lea
sbb
mov
xor
add
add
add
notl
dec
pop
push
jg
hlt
push
and
add
mov
data16
cwtl
les
xchg
in
test
adc
lods
or
or
add
or
imul
mov
emms
jg
out
push
push
and
push
cmpb
mov
call
mov
add
cli
fcomp
shl
stos
mov
nop
jae
jne
ss
jbe
call
lods
add
jo
sbb
adc
sbb
lods
shlb
dec
es
xor
test
repz
stos
dec
mov
jae
jne
ss
andl
cld
addr16
in
mov
add
fadd
pop
loopne
sub
frstor
shr
jb
jle
dec
cmpl
mov
outsl
inc
jmp
add
xchg
pushf
push
jbe
mov
sub
sub
dec
and
subl
xlat
cmc
ja
push
or
and
bound
scas
in
inc
fidivs
testb
cmp
xchg
mov
and
in
fsubl
and
call
add
cld
add
bound
test
push
xchg
pop
movb
test
jg
dec
testl
cltd
insb
adc
popf
cmp
jbe
mov
imull
in
fmuls
xor
movb
cmp
push
pop
movb
or
je
add
outsb
add
sub
pop
hlt
in
movb
xor
push
and
repnz
mov
ret
je
sarl
add
adc
sub
aaa
and
data16
pushf
iret
test
jg
jbe
add
fisubrl
ljmp
jb
test
add
or
fwait
or
int3
aaa
je
mov
fisttpl
sub
mov
sbb
test
loope
inc
test
xchg
sub
mov
xchg
mov
and
sahf
aas
rcl
jmp
ret
sub
jae
in
lcall
ds
bnd
push
icebp
pop
mov
add
sub
je
cmpl
lcall
outsl
test
pusha
aas
xchg
inc
push
jne
add
mov
adc
clc
jmp
test
fstps
imul
lcall
in
mov
imul
outsl
int
icebp
inc
imul
outsb
cmc
das
in
mov
fs
sti
jmp
add
scas
pop
nop
loop
jb
pop
push
in
call
mov
lahf
inc
push
stos
call
push
call
out
jmp
bound
lock
cmp
in
imul
call
test
dec
call
pop
shr
xor
cmpsl
out
sub
or
cmp
add
xor
test
gs
out
xchg
testl
push
test
lds
daa
mov
push
sbb
fucomip
pushl
mov
or
cmp
test
push
add
mov
dec
or
sub
xor
out
call
mov
or
inc
pop
call
subps
and
inc
add
add
xchg
jne
ret
je
mov
and
xor
call
jo
testl
stos
add
loope
push
mov
mov
inc
or
xlat
inc
add
pop
sub
add
or
jmp
mov
sti
in
fstp
add
pop
jbe
jecxz
inc
or
jp
sti
jl
test
in
or
add
add
subl
or
lods
sti
push
fistpll
or
sti
push
xchg
repz
fyl2x
pop
inc
push
cmp
loop
xchg
icebp
sbb
and
cmp
les
aas
iret
sub
jns
mov
jb
jle
scas
mov
xchg
movups
hlt
rcr
inc
mov
mov
faddl
fmull
add
jae
loopne
das
adc
out
shll
lock
mov
imul
jp
jb
pop
cmp
bound
jne
add
cmp
cmp
js
inc
fs
bound
inc
int
mov
mov
aam
xchg
divb
adc
out
popf
add
mov
insl
sti
ficomps
std
insl
aad
or
push
cmp
fnsave
sti
push
xor
nop
in
sti
sahf
pop
out
adc
notb
xor
outsl
jmp
jae
ds
sti
inc
jmp
jae
cmp
and
fstpt
jmp
add
inc
push
jmp
mov
push
and
add
addr16
jmp
lock
in
mov
or
fstps
addb
orb
pop
mov
pop
lea
sub
shrl
push
test
bound
sbb
pop
mov
cmpb
or
add
jge
cmpsl
sti
in
mov
sarb
addb
push
push
jle
jmp
xchg
lock
xor
mov
xor
cld
out
add
cwtl
out
mov
fisttpll
push
ret
je
sahf
sti
iret
rorl
sbb
mov
ljmp
mov
lock
jmp
ljmp
imul
jmp
jmp
jmp
ljmp
jno
cmp
add
jmp
icebp
cmp
jmp
in
cmp
jmp
out
cmp
jmp
pop
aam
xor
roll
xor
sar
xor
shl
xor
shr
xor
shl
xor
rcr
xor
ror
xor
rol
xor
shlb
xor
rcrb
xor
rorb
xor
rolb
add
xor
shl
xor
aad
xor
aad
xor
fidivs
pop
xor
into
xor
xor
mov
xor
call
push
and
add
and
add
inc
and
add
xor
add
and
add
add
push
and
add
mov
add
mov
and
bound
and
mov
xchg
and
add
and
or
and
add
and
cmp
lods
icebp
jae
pusha
mov
push
and
imul
and
clc
add
mov
inc
xor
or
and
fnstenv
add
add
je
fdivl
jne
mov
or
and
jmp
cmpl
insb
test
pop
xor
cmp
sub
je
cmpb
lcall
fmuls
and
std
mov
or
jmp
mov
sbb
add
jmp
inc
js
js
jmp
mov
jo
cmpsl
xchg
inc
negb
sbb
sbb
adc
fwait
idivb
arpl
sbb
jecxz
sub
pop
adc
push
xlat
pushf
pop
push
stos
xchg
ret
jmp
out
ffreep
jg
pop
adc
and
testl
and
add
xor
push
out
mov
or
das
xor
and
orl
jo
leave
mov
sub
movsl
mov
lret
cmc
add
leave
cmp
shlb
repnz
fadd
or
or
lret
adc
in
insl
pop
ljmp
xor
or
insb
popl
cmp
add
stc
lock
popf
shlb
adc
int3
xor
lret
sub
popf
mov
das
add
test
pop
or
or
cwtl
imul
jmp
lds
add
push
jmp
push
bound
sbb
addr16
gs
ss
push
arpl
xchg
sti
aam
xor
imul
fldl
add
fcompl
mov
sarb
jmp
in
xor
fstpl
adc
out
lar
out
push
pop
stos
out
xor
addl
push
xor
add
sti
add
add
add
xlat
les
jnp
jno
pop
pusha
das
adc
sub
shlb
jge
xor
leave
out
imull
add
adc
jp
inc
sub
ret
jno
sub
cli
idiv
fnsave
shll
mov
and
and
add
mov
test
inc
add
adc
sti
aad
mov
cmp
mov
mov
push
ds
or
sub
jne
inc
cs
push
dec
xchg
adc
add
outsb
out
xchg
pause
pop
mov
call
jno
ss
mov
ret
fcos
punpckhbw
cs
xchg
repnz
out
stc
xchg
push
out
addb
push
add
jmp
mov
adc
incl
and
jmp
das
dec
mov
xor
xor
aas
jmp
ret
xor
cmp
push
insb
add
dec
cmc
call
inc
jmp
cld
pop
add
call
inc
jmp
movsl
or
xor
add
call
add
inc
insl
negb
jo
adc
sub
bound
mov
scas
xor
movsb
jecxz
add
test
iret
test
lods
add
lds
scas
xor
mov
es
cmpsl
xor
xchg
jae
dec
add
lock
or
ljmp
cwtl
cld
call
sub
mov
aad
xor
jmp
pop
lods
xchg
xchg
sbbb
mov
bound
xor
scas
mov
das
inc
jmp
inc
sub
xor
xchg
paddsw
pusha
hlt
and
popa
in
and
and
and
repnz
mov
in
rcr
and
add
lods
adc
adc
jmp
repz
call
in
sub
push
les
jmp
sbb
dec
sbb
cs
xchg
stos
lock
add
push
stos
dec
sbb
adc
inc
xchg
mov
push
fwait
mov
dec
xor
mov
insb
inc
inc
clc
out
inc
xor
inc
lds
test
out
adc
xorl
loop
adc
xorl
out
popf
sbb
dec
lods
mov
push
sub
aas
jmp
call
stos
jmp
incl
jmp
nopl
dec
lods
lcall
jmp
pushl
xchg
stos
xchg
sti
jl
mov
jmp
mov
push
inc
pushl
inc
and
and
mov
xchg
lahf
xchg
add
jbe
out
jmp
jmp
dec
sbb
xor
roll
push
clc
jmp
add
test
inc
jmp
mov
add
add
adc
mov
std
xor
shrb
std
in
in
xor
test
cmpsl
cld
mov
lock
add
cmp
aam
sub
pop
ss
jmp
fimuls
jmp
mov
inc
pop
inc
data16
cmpsl
xchg
mov
stos
sbb
sbb
jmp
mov
pop
int
in
out
add
and
push
stc
es
fadd
push
inc
pop
xchg
push
negl
je
sub
xor
mov
xchg
sbb
add
sbb
add
sbb
add
mov
add
lahf
sbb
add
lahf
sbb
add
ds
std
xchg
sbb
push
dec
push
sub
add
dec
movsl
xor
fdivl
push
push
adc
or
add
add
add
das
add
adc
dec
jecxz
inc
das
mov
add
test
inc
add
dec
jecxz
xchg
cs
inc
lods
pop
xchg
sbbb
push
cmp
and
in
xor
lods
test
das
call
test
add
push
mov
dec
or
mov
test
in
bound
push
sub
fwait
mov
test
movzbl
mov
out
imul
sahf
dec
xchg
orb
out
fadds
popf
mov
cmp
xlat
icebp
aas
jmp
xchg
call
outsl
pop
sbb
pusha
dec
iret
imul
cmp
jecxz
push
mov
daa
adc
add
dec
mov
push
pop
sbb
imul
mov
outsb
xchg
xchg
test
add
adc
jno
xor
push
ss
div
aas
jmp
mov
dec
in
jmp
adc
pusha
xor
rol
hlt
call
add
lock
or
imull
in
call
movb
cmp
jae
lock
xchg
push
and
das
call
imul
xor
lds
lods
lds
and
jmp
lcall
ljmp
add
push
xchg
xchg
push
notl
cmpsb
stos
cli
pop
add
fsub
xor
cli
jb
mov
push
add
jg
pop
dec
jp
sarb
and
push
cs
outsl
lods
call
pop
add
aas
shrb
jg
in
pop
xor
lock
aaa
ljmp
jmp
pop
push
loope
push
cs
fs
out
sub
sub
push
negb
ss
add
mov
add
into
add
arpl
cmp
sub
scas
shl
push
das
mov
add
mov
mov
add
mov
xor
add
and
fidivrl
jmp
shrb
dec
and
fcmovne
call
or
push
incl
add
mov
or
fsts
call
pop
jp
inc
cmp
mov
ljmp
out
dec
add
dec
loop
test
sahf
rcrb
in
iret
cmp
push
jo
jl
iret
push
jl
jae
inc
iret
dec
jl
and
out
push
dec
and
iret
addb
pop
and
rolb
out
loop
sbb
add
js
add
pop
das
add
pop
sbb
lods
repz
jbe
call
adc
call
sti
test
dec
mov
repnz
add
add
add
cmp
repnz
les
ljmp
test
jno
lahf
ja
jmp
test
pushf
insl
jp
add
push
aam
add
f2xm1
call
stos
jbe
outsb
push
punpckhwd
add
lods
sbb
add
jmp
in
gs
mov
jmp
roll
test
pushf
mov
call
xchg
jmp
ret
xchg
xchg
jmp
stos
jmp
out
pusha
mov
cs
je
or
add
add
mov
test
jge
in
cmp
mov
xor
bound
scas
xlat
movb
lret
in
call
add
call
insb
jae
sahf
jmp
push
adcb
stos
lret
rolb
xor
adc
arpl
jb
stos
inc
cmc
adc
call
pop
add
fadd
call
add
jno
push
lea
dec
sbb
pop
notl
shrl
xlat
sub
call
push
mov
mov
add
movsb
add
add
mov
adc
mov
icebp
mov
js
add
incl
addr16
sub
dec
push
dec
cmp
push
dec
in
aaa
mov
add
addl
mov
jmp
adc
and
stc
shrl
sbb
or
out
add
testb
jbe
mov
aad
jmp
jp
imul
jbe
mov
outsb
or
scas
in
jmp
inc
jp
outsb
lret
pfrsqrt
sbb
inc
incl
sub
xacquire
inc
es
sbb
sub
add
test
sub
stc
jbe
xchg
jecxz
jnp
ljmp
add
lods
test
mov
adc
or
add
movsl
and
fs
roll
cli
cltd
adc
movsl
pusha
sub
jmp
add
fs
loopne
test
sti
and
insl
xchg
pushf
dec
popa
xchg
add
xor
mov
cli
mov
jle
outsb
mov
fucomi
js
or
pushf
adc
mov
xchg
push
cmp
rcrb
add
xor
add
xor
mulb
dec
rorb
lahf
adc
idivb
testb
sti
sbb
or
iret
ret
xor
and
punpckldq
add
add
int3
jo
add
sub
pop
stos
adc
xchg
stos
iret
ret
xor
and
lahf
jp
lods
fnstenv
add
lds
hlt
and
jmp
mov
add
les
adc
xor
mov
out
xor
add
icebp
and
dec
add
iret
mov
call
cmp
inc
ficomps
push
add
mov
push
push
shlb
fildl
nop
or
xor
pop
jecxz
adc
lea
inc
mov
and
xor
push
or
or
push
and
int3
vshufps
mov
pop
jecxz
mov
testl
stos
jno
add
dec
and
stos
xor
ret
ret
jmp
sub
xor
out
push
xchg
je
push
fmull
pop
je
cmp
jmp
jbe
jmp
call
pop
cs
pusha
mov
add
push
sub
mov
jnp
cli
fisubs
xor
adcl
out
sbb
jo
jbe
jecxz
aas
and
out
and
lock
xchg
incl
add
cmpsl
xor
push
pop
pushf
fistpl
outsb
push
adc
jmp
lcall
mov
or
decb
jmp
mov
int3
icebp
cmp
aaa
xor
sub
ret
add
push
fsubl
or
pop
out
adc
pushf
scas
call
lock
adc
out
pop
mov
jmp
pop
stos
fs
xchg
stos
xor
jns
add
sub
out
sti
sbb
mov
mov
mov
hlt
xchg
in
lock
rcll
add
out
das
ret
cmp
adc
mov
shrb
sub
addr16
xor
jmp
ljmp
insl
mov
es
ficomps
or
or
xor
jmp
call
add
pusha
fldt
jo
jmp
and
inc
jmp
test
xchg
push
xor
jmp
xor
push
pop
cld
out
test
push
aam
add
xor
mov
mov
add
popf
jae
adc
pop
add
push
jno
test
and
xchg
pmaddwd
popw
mov
add
mov
cwtd
outsb
pop
mov
inc
scas
rorb
and
lcall
mov
ja
push
das
push
push
fisttps
push
insl
pop
push
push
adc
les
cwtl
dec
je
pop
je
ljmp
inc
push
push
adc
jmp
mov
inc
iret
cmp
js
jmp
jne
ljmp
add
add
incl
sbb
jbe
ljmp
ds
push
push
xchg
sbb
stos
in
das
mov
stos
insb
xchg
mov
decl
outsl
adc
cmp
pop
popa
xchg
fistpl
xchg
adc
sahf
into
outsl
push
xchg
in
enter
je
rcll
daa
pop
add
jmp
sbb
clc
xor
add
add
aad
insb
hlt
push
mov
lds
aaa
and
outsl
adc
xor
adc
jecxz
shr
fwait
or
shr
xor
mov
push
push
adc
mov
test
call
fsubs
subw
dec
jmp
in
cwtl
mov
negl
and
stos
xor
inc
ljmp
add
insl
adc
loop
pop
outsb
jo
out
adc
jmp
imul
push
fnstenv
push
pop
in
frstor
mov
insb
int
pop
pop
xchg
call
and
xor
je
adc
cltd
jnp
and
mov
jno
insl
pushl
add
ja
and
add
gs
in
outsb
out
add
cmp
call
lods
rcr
jo
jmp
je
and
sbb
push
add
test
adc
xor
aam
insb
sti
imul
dec
stc
call
mov
dec
mov
movaps
and
adc
or
call
add
lcall
pushl
mov
add
sub
inc
and
pop
push
mov
sbb
push
test
mov
arpl
inc
arpl
into
movups
jmp
jmp
or
scas
cmpb
add
je
je
pop
mov
out
and
rclb
sbbl
add
add
adc
lcall
add
mov
cltd
add
mov
pop
je
call
rclb
clc
inc
aad
lods
gs
adc
pop
loopne
test
ficoml
sub
outsl
jg
push
test
ja
lcall
incb
jne
ret
mov
jnp
popa
xor
mov
gs
xor
jbe
and
add
and
mov
add
das
jmp
xchg
das
jmp
push
lock
pop
add
xor
call
xor
imul
jmp
xchg
xor
add
int3
sbb
inc
hlt
adc
lock
add
xor
jmp
jmp
add
les
push
cmpsb
jmp
jmp
inc
fs
iret
dec
jmp
andb
mov
add
cmp
idivb
and
sbb
gs
add
call
je
jmp
ret
loopne
daa
pop
dec
rcl
dec
jg
enter
lock
xor
cmp
xor
sbb
pop
fsubr
call
lods
sti
popf
xchg
adc
xchg
das
je
jnp
and
mov
add
lock
scas
inc
mov
sbb
bound
push
sbb
shl
mov
aad
mov
add
or
je
sbb
inc
es
je
and
rolb
push
std
pop
push
roll
add
lahf
imul
mov
add
mov
xchg
ret
mov
add
lcall
push
mov
push
mov
add
mov
inc
adc
jae
inc
das
jl
or
je
sub
push
stc
cli
fwait
je
adc
std
jmp
mov
pop
es
nop
xchg
jl
les
enter
xchg
mov
xor
enter
and
test
das
add
not
push
bound
in
cld
inc
jmp
xchg
testb
js
jmp
jnp
fnstcw
jmp
jp
cmp
loopne
inc
jmp
or
xor
and
fcoms
shrl
rolb
xor
jl
popa
lock
shlb
stos
mov
push
add
pop
adc
inc
push
out
add
mov
jecxz
scas
in
call
fs
loope
xor
add
aad
scas
xor
ss
mov
shll
or
xor
sub
sub
dec
outsl
les
lret
xor
dec
sub
jo
ja
ljmp
faddl
mov
add
call
fldt
sarl
adc
imul
push
sub
test
dec
xchg
shlb
mov
fcomps
fsubrl
jmp
data16
jmp
sbb
xor
fisttpl
mov
data16
lcall
mov
adc
push
xor
je
add
push
inc
add
int
movsb
orb
dec
inc
xor
lcall
jge
js
xor
ljmp
xor
mov
sti
mov
ret
fsubl
repnz
xor
test
into
or
mov
out
mulb
cmc
push
push
cmp
lods
jmp
add
add
sbbl
xor
incl
cld
out
jb
xor
inc
or
lret
ds
icebp
pusha
xchg
sbb
xor
mov
xor
js
jo
addr16
jbe
test
xlat
pop
inc
inc
pcmpgtd
stos
dec
inc
inc
rdmsr
insb
lea
adc
adc
mov
sbb
aam
lcall
sbb
lahf
xor
and
ljmp
adc
sbb
add
pop
mov
sbb
pop
and
mov
sub
and
sub
adc
lods
sub
cmc
or
pop
lods
sub
in
or
add
insb
in
sub
inc
pusha
lock
int3
pop
outsb
push
mov
in
std
dec
outsl
jbe
ds
add
sub
cmpsl
icebp
in
lret
insl
call
insl
insl
xor
add
adc
adc
mov
mov
dec
push
pop
xor
das
cmp
mov
jl
or
add
fldenv
dec
std
cmp
fimuls
bound
add
sub
inc
ss
xchg
add
add
inc
and
inc
lea
out
sub
push
leave
xchg
inc
aaa
sti
sahf
push
sub
and
lret
and
jmp
daa
test
push
iret
cmp
nop
sub
dec
std
add
sub
add
add
das
add
jl
add
insb
pop
sub
jl
and
je
adc
jo
inc
cmpsb
sbb
fistpll
loope
jge
addb
test
dec
adc
movnti
mov
notl
jne
mov
add
pop
mov
test
sub
mov
xor
clc
repz
subl
pop
xor
sti
mov
add
pop
pop
xor
jnp
jmp
rclb
addb
mov
ss
jo
jmp
insl
mov
cli
std
shr
lcall
or
mov
xchg
sbb
xchg
push
add
into
out
xlat
or
orl
in
outsb
je
jno
imul
stc
mov
je
jmp
cmp
add
add
iret
or
jcxz
mov
inc
iret
jno
sub
jmp
add
aam
jne
xor
adc
shrl
add
cmp
sti
je
mov
xor
xor
or
push
add
inc
outsb
iret
mov
or
nop
cmp
and
enter
jl
js
add
stos
fidivrl
sarl
sub
mov
gs
idivb
jno
and
cmpsl
and
lcall
or
xor
add
xor
subb
sub
jb
fdivrs
pusha
xlat
sub
jle
jmp
ret
filds
jmp
iret
xor
addr16
bound
xlat
mov
sbb
add
jmp
scas
cmp
sbb
or
fsts
adc
jmp
in
pushl
movsb
jmp
xlat
add
xor
sbb
ss
outsl
and
test
and
jp
add
cmp
jae
mov
jo
mov
out
cld
or
out
add
add
mov
cmp
ret
jo
add
xor
sarb
mov
addr16
cmp
outsl
add
je
adc
and
rcrl
in
add
sbb
ret
popa
add
ja
call
sub
inc
cld
xlat
outsl
jmp
jne
je
add
and
ret
jmp
mov
add
add
je
mull
jp
pop
sbb
jo
sub
data16
int
jecxz
imul
or
es
rorl
test
int
jecxz
add
cli
mov
inc
jne
mov
jo
or
incl
inc
jp
pop
stc
jp
out
stc
jo
mov
mov
add
add
pop
lea
jg
pop
and
outsl
dec
insb
inc
xchg
push
adc
xchg
add
jo
adc
jmp
inc
jae
addl
cmp
js
stos
movsl
daa
sti
test
call
leave
lds
test
or
out
fcmovne
cld
jo
or
mov
incl
add
dec
call
pop
xorl
add
loopne
cld
loopne
push
fsubrl
mov
cmpsb
cld
dec
stos
sbb
jge
cmpsl
add
jecxz
inc
loope
idiv
insb
test
repnz
test
sub
jb
adc
jmp
xor
icebp
addr16
sbb
test
pop
test
jae
jmp
add
dec
mov
add
xor
jmp
and
and
mov
insb
lds
stc
adc
jo
in
jo
or
lods
xor
pop
adc
shl
cli
add
adc
mov
or
pushw
mov
add
jmp
pop
fildll
or
pop
dec
mov
jne
adc
or
aam
add
add
xor
cmp
addb
outsb
decl
add
mov
mov
cmp
jae
lea
cmp
mov
xor
iret
fiaddl
add
mov
or
sub
mov
add
or
aaa
aas
out
sarb
add
jmp
jns
jo
push
jge
dec
ljmp
sub
add
repz
xchg
mov
add
lret
sti
jno
xchg
push
es
scas
inc
fldt
pop
cli
cli
aas
add
test
add
out
lahf
cli
pop
ja
cmp
movl
xlat
testl
add
push
xor
insb
fs
leave
xchg
sub
gs
ss
insl
std
call
inc
inc
xor
dec
and
lcall
lods
scas
test
cmp
cmc
mov
push
outsb
jno
adc
xor
ljmp
mov
fld
dec
nop
mov
xor
xor
js
rorl
rolb
add
nop
icebp
fildll
xor
enter
nop
xor
jp
or
or
xor
jmp
shrb
jne
xor
jb
push
and
inc
push
xor
push
sub
inc
push
sub
das
jne
push
je
aam
test
sti
out
sbb
sti
loopne
push
mov
inc
mov
add
mov
jecxz
mov
stos
or
das
bound
loop
call
push
ss
mov
sub
xor
adc
cmp
pop
out
add
add
jno
and
mov
and
pop
push
push
rcrb
je
add
push
out
cld
mov
jecxz
cltd
imul
add
add
inc
pop
sub
pop
pop
sub
mov
and
pop
push
push
push
and
xor
fwait
je
fwait
push
and
mov
and
xor
inc
out
push
je
sbb
mov
jne
addr16
jmp
scas
push
jmp
sbb
jmp
sub
loope
je
loop
incl
sti
push
lcall
add
push
call
shlb
dec
pop
nop
inc
mov
packssdw
xchg
leave
faddl
mov
out
mov
dec
sti
jle
push
pop
in
jl
addr16
and
out
ret
sub
je
iret
addr16
mov
jmp
adc
push
pop
pop
xor
imul
mov
adc
add
sbbl
xor
push
fbld
hlt
lds
sarb
movsb
jl
push
adc
rcll
mov
aad
lahf
push
int
xchg
push
lds
push
mov
add
mov
hlt
pop
pop
mov
mov
imul
std
push
add
aas
push
or
cmp
je
inc
lods
mov
add
push
xchg
push
sub
shrb
int
sub
sub
cmp
cld
pusha
callw
scas
faddp
mov
pop
ljmp
jb
mov
test
addb
and
sub
ret
xchg
lret
int
mov
sti
push
xchg
mov
sub
sub
xor
cmp
pop
and
or
sbb
xchg
je
cmpsb
add
je
dec
divl
not
stc
movsb
test
testb
daa
xchg
testl
adc
push
or
sbb
scas
ljmp
shll
pop
mov
dec
xchg
push
mov
pop
inc
cmp
add
sar
mov
push
adc
pop
cmpsl
xchg
add
xor
mov
cmpsl
shll
lds
adc
addr16
in
pop
imul
loop
sti
cmp
sub
push
push
and
push
bound
jmp
jns
mov
mov
add
cli
sub
add
incb
and
rol
xchg
jmp
movsl
add
sbb
pop
mov
or
dec
int
lahf
xor
gs
data16
iret
sub
push
cs
adc
aaa
pop
incb
or
stos
mov
leave
xor
mov
pop
fbstp
in
js
mov
jg
cmp
add
jmp
jmp
sbb
pop
pop
mov
jo
out
jns
pop
mov
pop
push
cmc
out
stos
jbe
pop
lock
and
cmp
inc
sub
out
or
pop
stos
cmp
in
js
icebp
nop
in
icebp
pop
mov
inc
pop
fwait
sbb
in
fdivl
add
out
xor
or
add
dec
sub
push
xor
test
add
cmp
jg
stos
loopne
adc
out
cmp
fmull
enter
mov
popa
pusha
sahf
sub
aaa
stos
mov
test
mov
pop
ret
cmp
xor
ljmp
test
add
xor
xor
and
mov
jb
add
or
dec
icebp
push
adc
mov
xchg
cmp
addl
add
in
xor
dec
jmp
jge
leave
test
pop
aas
addb
add
je,pt
adc
ljmp
inc
ja
ds
ror
dec
mov
jnp
leave
sahf
daa
jp
add
out
sub
mov
jb
mov
lods
clc
and
icebp
ds
mov
mov
pop
add
inc
fs
dec
jmp
out
cmp
inc
pushf
jo
xor
and
xchg
mov
stc
pop
incb
ret
and
xchg
lret
and
movsb
dec
rclb
inc
rorb
xchg
adc
cs
mov
add
leave
mov
fbld
push
inc
stos
loop
jl
jecxz
or
popa
sti
inc
mov
sub
pop
nop
lcall
ljmp
jg
xor
jle
jmp
lahf
fwait
daa
pop
or
cs
push
sbb
adc
or
mov
mov
add
fidivl
test
lods
pop
fsubr
mov
in
adc
sahf
adc
and
in
add
adc
mov
jg
fmuls
inc
mov
jb
int
arpl
mov
call
inc
insb
decb
mov
in
cmp
scas
jae
cld
cmp
bound
and
cmpsb
es
jno
add
stc
stos
sub
jecxz
adc
mov
or
fldt
jbe
xchg
mov
dec
cmpsl
cmc
cs
add
or
add
lret
cmp
es
in
add
inc
and
jmp
js
je
fldt
adc
add
add
xor
je
cli
jae
jns
push
add
jmp
mov
pop
or
pop
jmp
decb
push
idiv
dec
jae
add
jmp
ret
mov
add
mov
add
sub
sub
orl
jne
stc
pop
call
jmp
xchg
decb
dec
mov
mov
sbb
add
xor
shl
pop
sti
pop
sbb
mov
pop
inc
xchg
xchg
xor
std
inc
or
sub
mov
daa
sub
mov
jae
popa
fcoms
and
xchg
jecxz
push
mov
call
xchg
sahf
rolb
xor
pop
xchg
add
subb
repz
rolb
jl
add
ret
sti
push
or
add
out
dec
mov
movsl
testl
mov
pushf
mov
mov
xor
mov
hlt
and
clc
js
and
das
xor
and
sub
out
lock
out
lods
mov
sbb
mov
add
jns
add
mov
xchg
and
daa
add
cmp
lock
cld
outsl
stc
pushf
add
outsb
inc
mov
pop
dec
sbbl
pop
sub
jmp
add
stos
add
xor
lahf
sbb
and
out
jb
or
xor
ret
scas
or
scas
sbb
sti
sbb
add
stos
dec
icebp
xchg
popf
or
mov
es
insl
jo
jb
sub
mov
xchg
pop
loope
mov
arpl
xchg
gs
jne
sti
lock
arpl
cs
out
jae
mov
sub
pushf
aas
dec
popf
jns
jne
jae
adc
fptan
add
lock
call
cmp
das
bound
mov
add
xor
idiv
mov
and
xor
jb
mov
adc
xchg
out
cli
inc
xchg
adc
add
loop
push
call
pop
ja
shl
mov
in
jl
cmp
mov
pop
jmp
add
jge
testb
aas
sub
call
add
jmp
inc
je
mov
pcmpgtd
std
arpl
mov
inc
adc
add
inc
inc
pop
xchg
fs
or
fs
push
out
std
sbb
mov
mov
mov
xchg
xchg
jmp
cmp
add
pusha
mov
test
mov
push
les
add
sub
add
add
or
xor
mov
pop
sti
mov
dec
call
xor
or
or
dec
movsl
xor
cwtl
mov
add
xchg
pop
enter
jno
pop
fimull
mov
push
or
addr16
inc
sub
icebp
cmp
cwtl
pop
xor
fs
movsl
xchg
jno
mov
push
xor
add
mov
or
cli
icebp
dec
or
sbb
jmp
outsb
in
mov
mov
xor
iret
nop
pop
add
mov
mov
popf
aaa
test
ja
mov
hlt
mov
add
push
sub
stos
test
jmp
ja
adc
loopne
pop
or
add
ret
mov
out
mov
jmp
aas
fsub
jmp
cmp
sti
cmc
rorb
int
outsb
dec
jle
lods
push
int
xlat
call
lods
aam
call
fs
xor
push
sbb
add
mov
ljmp
xor
jmp
cli
fstpl
inc
mov
add
out
mov
add
cmp
add
push
lahf
in
shufps
setbe
adc
mov
jmp
push
adc
stos
out
dec
xchg
test
stos
aam
jl
mov
insl
test
lea
push
and
call
lret
cmc
push
out
test
jmp
movl
das
xor
xchg
add
xchg
enter
dec
je
mov
fisubs
xchg
add
je
shlb
add
repnz
or
and
not
int3
jo
and
pop
and
or
and
out
mov
xchg
je
jle
cmp
aas
les
out
cmc
cmpsl
pop
cmp
inc
ljmp
add
daa
add
push
xchg
mov
test
icebp
mov
lahf
stc
test
lock
repz
icebp
push
dec
xor
int3
xchg
inc
enter
add
push
inc
imul
sahf
xor
xchg
fldl
or
test
ret
pop
popa
imul
add
mov
ret
push
sbb
clc
test
cmp
mov
inc
stos
push
vmovsd
punpckhwd
add
xor
nop
mov
ret
punpckhwd
mov
add
dec
xor
sbb
push
inc
mov
jo
nop
lods
xchg
mov
ret
mov
inc
adc
flds
sbb
mov
add
add
pop
rol
aaa
leave
sub
mov
movsb
pop
jo
mov
mov
or
inc
into
inc
inc
dec
mov
cmpsb
add
or
adc
ds
aas
dec
push
fchs
inc
inc
push
out
xchg
nop
jp
mov
icebp
adc
call
push
popf
out
xchg
sbb
dec
rclb
cs
and
add
and
and
in
and
sti
jmp
mov
push
push
push
iret
jo
xor
adc
xchg
push
std
jmp
jle
xchg
stos
jle
ljmp
call
add
jmp
sub
pop
sub
mov
jmp
mov
xor
adc
es
cmp
pushf
orb
xlat
dec
adc
outsl
inc
into
das
add
jecxz
jle
sbb
and
popa
out
scas
int3
lea
ret
ret
mov
and
push
or
sub
js
outsl
xlat
or
call
sti
or
pop
test
push
add
out
sti
hlt
ss
adc
in
test
ljmp
add
add
cmpb
sub
mov
push
cmp
push
aad
jmp
insb
mov
push
or
add
bound
pop
adc
sbb
cmc
lods
xor
outsb
pop
ljmp
jle
mov
xor
add
xchg
add
movsl
stos
xchg
fwait
jle
testl
fldcw
aad
cmpsb
orb
adc
sbb
adc
add
xor
mov
inc
leave
sub
icebp
je
fs
lahf
mov
mov
data16
pop
cli
fmul
es
jmp
xor
cmpsl
insb
sbb
pushfw
xchg
test
pop
movsb
test
add
sbb
ss
push
test
push
scas
inc
sbb
mov
cmp
je
add
shl
fwait
or
sbb
sub
adc
gs
sub
mov
xor
xor
inc
jecxz,pn
inc
xchg
decl
notb
bound
call
sbb
test
mov
cmp
xor
add
xor
clts
jno
add
add
jle
xchg
xor
add
out
repnz
js
divb
repz
push
sub
inc
inc
scas
mov
add
dec
clc
pop
pop
test
rorl
lea
pop
xchg
incl
data16
sti
hlt
mov
out
dec
push
jo
pop
arpl
xor
sti
les
mov
add
aas
push
addl
imul
add
xor
inc
jmp
jns
xchg
das
mov
lods
jno
pop
mov
imull
insb
stc
pop
ss
inc
shlb
mov
mov
insb
stc
xor
jbe
fistpl
call
and
sub
int3
xor
add
fdivr
and
ret
mov
add
icebp
cmp
repz
push
add
lods
mov
adc
mov
xchg
fnstenv
xor
add
xor
push
mov
dec
dec
sbb
jmp
ret
insb
movsl
push
mov
xor
xor
push
adc
inc
xlat
ss
jbe
pusha
dec
inc
adc
cmp
aad
pop
call
add
lods
mov
and
stos
mov
cs
jnp
stos
push
xor
jmp
aas
mov
mov
pop
adc
jmp
call
push
add
mov
xlat
or
lock
push
movsb
dec
add
arpl
call
push
shlb
xor
loope
inc
cmp
aaa
sub
add
das
xor
dec
lods
dec
movsb
inc
lds
mov
xchg
adc
add
mov
or
das
add
inc
popa
idiv
outsl
pop
xchg
inc
stos
mov
mov
add
add
push
mov
xchg
mov
xor
add
roll
shrb
mov
push
push
inc
stos
and
popa
loope
add
movd
pushf
daa
pop
inc
movsb
cli
add
iret
loop
xor
push
mov
dec
mov
xchg
and
jmp
call
cs
cmp
aas
or
add
or
andl
jmp
and
call
sbb
orb
ficoml
sub
add
div
icebp
aas
jmp
sbb
add
or
gs
idivb
cli
movsb
je
and
add
incl
mov
addl
call
test
cltd
add
xor
jmp
insb
inc
shll
js
dec
aad
mov
and
cs
dec
sbb
mov
test
pop
fucomp
pop
or
add
mov
adc
dec
jno
jmp
andb
jmp
add
int
cmp
jmp
out
repz
pop
cwtl
loope
dec
data16
loope
stos
mov
shl
inc
sub
arpl
jmp
cld
jl
cltd
fucomi
xor
xorl
mov
push
add
fcoml
test
call
mov
xor
add
js
shrb
lock
xor
pushf
push
cld
ljmp
xchg
or
jno
call
out
lea
add
call
or
lea
or
call
or
lea
lock
call
lret
pop
pop
jmp
call
popa
cli
add
add
jne
or
mov
dec
xor
call
shll
jae
xor
jne
cmc
adc
stos
push
add
xchg
lcall
pop
bound
push
addl
jnp
ret
push
add
xor
sub
insl
pop
arpl
adc
test
mov
add
xor
or
cli
dec
or
xor
add
pop
decl
idivl
adc
sub
jnp
ljmp
xor
enter
pop
clc
test
sbb
call
mov
adc
repz
lcall
push
add
add
outsl
testb
jmp
les
pop
stos
push
inc
sbb
incl
call
add
adc
pop
in
rcrb
ja
fwait
divl
subb
std
mov
and
inc
fidivs
enter
adc
test
inc
sbb
fbstp
or
cltd
inc
lahf
push
fnsave
add
and
or
push
pushw
push
lcall
add
je
and
lock
dec
push
jmp
mov
test
sbb
test
pop
sbb
adc
ret
mov
test
icebp
mov
and
mov
lcall
daa
mov
jo
jmp
add
sbb
je
lods
xchg
or
fwait
pop
je
cltd
xchg
gs
aam
add
jmp
or
call
jb
pop
je
enter
int3
and
inc
pop
adc
xor
and
dec
into
add
movaps
mov
add
mov
or
jo
dec
and
daa
test
add
mov
add
mov
cmp
pcmpeqw
loope
sub
add
push
notl
or
pop
inc
fdivrs
xchg
jno
add
push
dec
push
mov
mov
mov
call
mov
das
add
add
xor
mov
push
sbb
scas
push
add
jns
test
aad
jne
shrb
dec
push
aaa
andb
cs
add
scas
mov
jae
stc
adc
xor
jmp
daa
test
insb
mov
lret
enter
xor
jl
scas
dec
sbb
neg
xlat
incb
movsb
mov
clc
not
sbb
xor
jb
nopl
pushl
sbb
jmp
gs
push
xchg
sub
add
add
es
bound
call
mov
mov
fcoml
iret
cli
fwait
adc
xor
jne
fsubs
sbb
into
mov
inc
sub
and
clc
or
out
pusha
pop
enter
nop
das
push
lds
daa
or
cmpsl
and
cmp
cmp
jmp
jmp
rcrl
int3
mov
or
nop
outsl
push
xchg
pop
add
jmp
add
push
or
mov
cmp
jmp
jmp
add
xchg
call
add
lock
jmp
ret
and
add
add
push
or
or
push
nop
sti
test
jle
cwtl
jge
bound
and
jmp
call
sub
andb
mov
sti
cld
jo
inc
jmp
add
arpl
jae
mov
and
out
jl
repz
popa
sub
movswl
or
rcll
inc
int
lods
mov
int
xor
jmp
call
sub
jmp
mov
mov
mov
dec
mov
add
mov
pop
pop
stc
mov
jo
xor
ret
xchg
xor
add
fists
das
mov
add
dec
mov
decl
mov
add
push
ja
add
test
lcall
cmp
jecxz
test
stc
cld
incl
dec
push
in
pop
clc
adc
test
pushf
std
pusha
cmp
xor
notl
sbb
leave
jmp
xchg
mov
aam
add
xchg
jbe
jmp
jecxz
jmp
ret
inc
sti
data16
xchg
stos
xchg
aas
jne
ljmp
jmp
hlt
mov
mov
iret
cli
fmulp
adc
xorb
sbb
incl
mov
xlat
out
sar
push
hlt
cwtl
cli
push
int3
loop
roll
out
roll
push
pop
or
add
lcall
loop
fwait
xor
test
add
mov
call
rorl
test
outsl
xchg
call
call
sbb
add
push
hlt
out
divb
mov
add
jmp
sbb
mov
call
sbb
add
add
out
xor
sub
add
cli
sub
outsb
lock
xchg
xor
add
mov
add
lcall
jmp
imul
xor
sbb
rcrl
call
jne
add
jnp
and
mov
dec
add
lock
pop
call
lods
jmp
ret
and
cmpsl
icebp
insb
and
in
lods
mov
call
push
or
add
xor
jmp
call
scas
lahf
jmp
ljmp
aad
xor
loop
js
sbbb
dec
xor
imul
dec
push
xchg
push
and
aaa
mov
adc
shll
dec
lea
xor
mov
push
sbb
mov
sbb
add
push
scas
daa
notl
inc
loope
sbb
jnp
mov
mov
add
pop
fwait
decl
inc
jne
pop
loope
sbb
jb
add
andl
add
jb
cmc
adc
iret
insb
pop
test
daa
or
xor
sbb
sbb
lods
and
push
insb
lea
push
adc
fstps
out
mov
mov
sbb
ljmp
jecxz
jmp
incl
rorl
subb
aam
hlt
pop
mov
xchg
pop
add
pop
or
or
adc
jl
ljmp
mov
push
add
pop
fcompl
adc
adcb
jmp
mov
lcall
add
add
dec
popa
sbb
ror
xor
mov
repz
insl
add
add
fs
add
mov
loopne
leave
xchg
cmpsb
add
pop
mov
das
jmp
add
xor
enter
enter
enter
enter
test
or
leave
pop
insb
or
add
add
rorl
sti
xor
stos
push
add
jmp
test
add
jmp
sub
test
pop
pop
lea
push
sub
fsubl
inc
jmp
xchg
das
add
mov
and
je
out
and
cli
jb
push
sbb
sti
out
cwtl
add
sub
cmp
sbb
add
add
adc
dec
cmp
push
adc
dec
and
inc
popf
sti
xor
fs
push
sti
js
test
xchg
sbb
push
out
pop
mov
in
mov
cmp
cli
dec
in
inc
xor
call
xchg
test
add
cmp
xor
push
or
iret
sbb
add
push
adc
jne
rolb
addl
loope
push
xchg
inc
fcomps
cmpb
mov
adc
mov
adc
pmullw
aaa
sub
xor
sbbb
xor
insb
outsl
push
jmp
or
sbb
cmpsb
mov
fdivrs
pushl
inc
test
movsb
add
sbb
and
mov
add
jle
jmp
iret
out
sar
ljmp
stos
pop
fsubl
pushl
push
mov
push
push
jo
jp
aas
mov
pusha
push
loopne
or
pop
incb
out
shll
fcoml
ret
and
xor
lea
out
xchg
pusha
add
icebp
jg
xor
add
add
or
shlb
popa
sarl
test
test
decb
or
les
xchg
sub
lea
lcall
sbb
insl
jmp
push
or
test
stos
inc
pop
aas
adc
xor
or
add
sub
cmp
outsl
je
mov
sub
jnp
add
fadds
add
jns
in
roll
pusha
dec
mov
cmp
push
out
cmpb
mov
ret
call
mov
push
int
mov
lds
mov
int
jge
cld
sub
add
sub
dec
lret
sbb
sub
aam
jle
adc
cli
fs
test
mov
add
dec
shlb
dec
jb
popf
add
call
push
add
xorb
xchg
dec
jle
xorb
rorb
call
jge
inc
xor
mov
xor
xchg
xor
push
les
add
adc
or
add
xor
mov
xor
cmp
add
add
jnp
into
jmp
add
movb
adc
push
push
icebp
push
pusha
loop
adc
cmpb
push
scas
xlat
fs
das
fwait
pop
sbb
decl
adc
jmp
aam
push
pop
jg
ja
ljmp
ret
xchg
sbb
xorl
cltd
xor
arpl
jp
add
sahf
adc
je
mov
sub
testl
xchg
sub
fisubl
ljmp
add
pop
xchg
mov
jb
loopne
outsb
mov
add
pop
iret
cli
xor
es
xor
jmp
fidivrl
xor
add
add
xor
mov
enter
mov
add
add
xor
inc
clc
dec
xor
mov
add
push
add
ds
mov
push
clc
add
jmp
pop
scas
and
sub
jmp
ljmp
or
in
stc
imul
add
xor
jp
and
outsb
cli
insl
insb
lods
in
cli
cmp
pusha
sti
pop
xlat
mov
sbb
out
dec
int
add
cmpsl
jae
hlt
adc
loop
adc
out
inc
into
call
movsl
sub
xor
xorb
jmp
cli
dec
add
jmp
xor
shll
add
sub
and
xchg
in
push
and
sbb
mov
add
out
mov
xor
hlt
fsubs
inc
jmp
add
dec
jge
add
jbe
and
inc
rorb
xor
jge
testl
xchg
cmc
jae
imul
cmp
sbb
adc
out
sbb
cmp
sub
cmp
je
add
inc
xor
test
xor
movsl
mov
xor
add
push
adc
mov
or
inc
jnp
and
adc
test
bound
rcrl
cwtl
sti
mov
or
jle
mov
out
aaa
sbb
mov
outsb
int3
add
or
jle
mov
sti
jo
sbb
or
mov
jmp
das
adc
mov
leave
push
push
cwtl
rcll
xchg
sahf
jnp
pmaxub
pusha
into
push
test
incb
icebp
lods
add
or
add
jmp
leave
sbb
inc
jnp
mov
call
xor
dec
loopne
fsts
xor
jmp
add
xor
pop
xor
add
xchg
or
push
nop
imulb
aaa
pop
adc
sub
in
stos
test
add
lds
ljmp
lods
inc
jb
add
popf
clc
pusha
pop
enter
push
push
test
xchg
jl
jl
dec
std
jge
dec
std
jmp
xor
lret
jmp
jmp
xor
add
outsl
jmp
cli
jb
push
adc
sub
outsl
loope
nop
or
or
cmc
test
add
dec
scas
aam
cmpl
pop
pop
add
call
xor
cmc
in
lods
leave
xorl
cli
adc
stc
jo
push
inc
lods
mov
lock
inc
outsb
fdivl
xchg
das
add
imul
add
mov
imul
cmp
sarb
mov
adc
add
add
xor
daa
call
add
xorb
push
call
sub
push
ret
xor
push
or
cmpl
jne
xchg
shr
cmpl
jb
adc
popf
push
add
arpl
ja,pt
pop
mov
out
push
jl
xor
push
mov
and
add
add
sub
inc
xor
jmp
mov
or
mov
add
repnz
data16
sbbb
or
dec
cmp
push
data16
dec
sbb
push
jg
and
jl
repz
call
pop
sbb
rcrl
test
push
inc
jmp
test
or
dec
insb
xchg
jp
rorl
mov
add
or
mov
jmp
lea
cli
sbb
nop
test
xor
jmp
mov
add
test
jmp
add
test
jmp
add
cmpsl
jns
ljmp
add
icebp
lcall
sub
rcll
xor
xor
add
pop
sub
xchg
std
cmc
add
movsl
stos
int
sub
pop
xor
sub
add
data16
add
xor
mov
movsl
out
jmp
fadds
pop
or
adc
jb
xchg
scas
push
call
nop
stos
enter
inc
pop
mov
pop
add
call
int
sub
mov
out
xor
cmp
fiadds
jmp
call
xor
insb
das
jge
cmp
sbb
test
mov
xor
jmp
imul
sti
xchg
fsubl
call
mov
xor
icebp
pop
add
enter
cmp
mov
add
mov
add
add
xchg
decl
and
jne
into
cld
mov
dec
clc
cmp
xor
shlb
orl
ss
call
inc
je
pop
mov
xor
push
pop
mov
dec
rorb
add
lock
xor
mov
fstpl
add
push
add
ljmp
xchg
jns
mov
add
pop
pop
push
ljmp
or
xchg
cld
ja
out
test
mov
add
fnstcw
jmp
jecxz
fsubl
ret
add
fldenv
xorb
inc
in
out
push
sub
inc
inc
femms
pop
sbb
add
daa
ss
xor
inc
add
shlb
sub
push
jo
hlt
enter
inc
add
fistpl
mov
fsin
or
cmc
in
fsubp
test
and
jb
call
jl
test
add
mov
pushf
call
jg
push
ret
jbe
inc
repnz
stos
xor
test
sub
data16
fbstp
iret
jmp
jmp
push
pusha
out
mov
add
add
call
test
test
rcl
inc
add
xor
pop
or
add
push
outsl
out
jns
imul
or
mov
cmp
jge
dec
jg
lahf
scas
xlat
push
jo
adc
inc
cmc
jp
jmp
cmp
mov
jnp
add
and
call
add
mov
icebp
ret
add
mov
dec
xchg
add
movsl
aad
dec
add
jnp
les
cmp
jmp
call
jne
adc
pop
scas
xor
push
insb
inc
and
mov
je
push
and
add
or
rdpmc
lock
leave
subb
dec
daa
mov
orl
add
add
fsub
fists
inc
jne
imul
add
call
mov
stc
push
cmpl
adc
add
push
dec
jge
mov
add
xchg
addr16
or
repnz
in
dec
xor
cld
pop
std
jmp
jp
ljmp
and
fs
dec
xchg
std
pop
or
in
enter
add
add
adc
inc
mov
lcall
cmpsb
and
gs
cltd
cmp
fdivr
pushl
jge
hlt
imull
and
xor
push
pop
and
fisubl
pusha
fwait
rcll
sti
ljmp
ret
dec
push
and
je
dec
jns
fcomps
mov
in
cmp
push
add
lds
xchg
dec
cmp
jmp
test
jmp
xor
add
int
insb
cli
addb
xor
popf
insl
je
in
jbe
or
test
lret
fs
popf
aad
mov
mov
sub
enter
sub
mov
daa
sub
ljmp
or
fldcw
fimull
add
addr16
sub
icebp
fistpll
add
imul
push
pop
dec
push
and
add
out
lcall
imul
loope
inc
jmpw
xchg
call
mov
inc
pop
jge
jmp
add
callw
xchg
lock
call
mov
adc
add
out
imul
cli
imul
outsb
ljmp
push
jmp
add
cmp
add
or
add
repnz
cli
mov
fcomps
lea
xchg
incl
cmpsb
dec
add
mov
imul
cli
sbb
push
push
leave
jge
jl
add
add
fmull
out
cli
jns
push
adc
mov
add
sub
mov
addl
mov
mov
sub
or
mov
mov
cmpb
and
jmp
dec
call
nop
xchg
push
pusha
mov
mov
add
add
bound
call
push
stos
jmp
decb
lret
and
loop
xor
push
push
adc
push
push
aas
or
jmp
shll
fsts
push
push
xor
xor
sbb
or
ja
jmp
dec
faddl
add
add
divl
aas
sub
in
hlt
mov
pop
call
testl
xchg
pop
cmp
jmp
imul
add
add
cmc
sub
mov
and
jmp
add
jle
enter
notl
test
jecxz
popf
mov
jmp
mov
mov
out
sbb
add
ljmp
lods
mov
rolb
jb
stc
dec
xor
mov
cmp
fdiv
xor
jmp
aas
jb
adc
out
mov
repz
xor
xor
in
addr16
adc
push
sbb
cmp
call
cmp
leave
jmp
push
push
fdivrl
jmp
add
cmp
add
jno
stc
push
lret
jmp
adc
fisubs
pop
mov
movsl
jns
jle
or
push
sub
add
sub
out
fcoms
or
call
and
cmp
add
sahf
dec
push
leave
and
adc
rcrl
and
add
xor
mov
push
add
inc
outsb
inc
and
stc
xchg
mov
cwtl
add
add
add
add
mov
jg
push
xor
cs
add
jmp
jle
out
jbe
jmp
decb
ljmp
jecxz
ljmp
xchg
ljmp
sti
mov
sbb
xchg
xlat
incl
add
jecxz
ljmp
shll
jecxz
ljmp
jg
fsin
pushl
jecxz
jmp
decb
sbb
mov
jbe
loop
jb
loop
bound
inc
sti
add
gs
push
add
les
mov
or
outsb
insb
int
arpl
fs
or
pusha
subb
add
add
add
add
xor
and
mov
or
add
cltd
push
icebp
mov
or
xchg
xor
cmpsl
or
stos
in
jmp
inc
in
fmull
arpl
arpl
or
push
add
mov
out
mov
add
jae
out
fsub
cli
xchg
loopne
add
add
adc
jg
call
and
insb
das
pop
pop
es
xchg
adc
sub
xchg
call
fxch
loop
in
test
rolb
xor
mov
leave
jmp
bound
call
adc
add
out
jnp
jle
stos
adc
out
popa
clc
outsb
push
xor
jmp
xor
aad
xor
inc
xor
jmp
aaa
mov
idiv
mov
test
cs
les
add
flds
call
or
cmovbe
add
mov
add
jb
or
dec
adc
rep
inc
jecxz
nop
je
dec
out
add
orl
je
mov
rorl
add
rorb
subb
loop
pushf
call
scas
ror
jnp
inc
sub
test
jmp
ljmp
loopne
jmp
decb
cltd
push
sti
jge
adc
ljmp
pop
test
fdivr
fisttpll
lret
jmp
incb
pop
cmpsl
fildl
jmp
outsl
shlb
test
cmp
call
leave
xchg
add
cmc
jmp
sub
bound
or
arpl
jmp
lods
out
jns
ljmp
fcomi
jmp
decb
nop
es
push
lret
inc
push
push
jne
xor
pop
in
call
jg
xor
add
jmp
jg
xor
xor
mov
dec
jns
jmp
xchg
lods
jecxz
jmp
je
add
pop
xor
add
sbbl
stos
pop
inc
mov
les
out
xor
xchg
int
jmp
rol
mov
mov
nop
mov
lock
jp
add
ficoms
insb
inc
xlat
sub
repz
xchg
dec
gs
insb
mov
jmpw
and
xor
mov
add
xchg
mov
add
mov
inc
fdivl
and
repz
pop
add
jle
lret
add
jmp
das
mov
out
test
out
rcr
jae
mov
enter
mul
and
fsqrt
shl
mov
adc
add
rorb
jmp
test
test
mov
jmp
dec
pop
lcall
and
add
xor
push
lds
lea
loop
out
xor
mov
push
or
mov
and
mov
push
jo
sub
mov
xor
add
or
jmp
mov
and
xor
add
iret
xorl
data16
xor
je
mov
pop
mov
js
xor
push
movsl
or
add
xchg
push
test
xor
add
add
idivb
add
pop
add
mov
outsl
add
jmp
int3
int
movl
mov
pop
lds
jg
lret
lods
push
mov
test
jno
cmpsb
ljmp
fdivrp
imul
out
push
lret
pop
lret
stos
sti
jp
jmp
decb
adc
add
incb
add
stos
jecxz
jmp
mov
test
ljmp
lea
cs
dec
adc
xchg
mov
mov
xor
add
icebp
jmp
add
pop
pusha
add
add
cmp
stos
sti
aam
add
lock
fst
cmp
pusha
enter
enter
add
push
xor
xchg
or
call
ret
xchg
scas
gs
stos
xor
nop
test
xor
mov
sub
in
ljmp
pop
jl
jae
or
cli
sahf
imulb
sbbb
out
jae
and
xchg
fisttpl
out
inc
push
insl
scas
fs
add
sub
sbb
cmpsl
gs
test
pop
pushf
inc
pop
aad
jle
cmp
sti
popf
in
pop
cmp
insb
xor
inc
cmp
fiaddl
jmp
xchg
xor
jmp
movsb
fimull
dec
push
xor
aad
add
add
stc
pop
cmp
lret
jb
ret
lock
sub
sbb
xor
orl
add
add
testl
loope
jno
test
aaa
fisubrl
sarb
jecxz
mov
stos
add
jns
call
jmp
test
pop
pop
cltd
mov
in
ljmp
push
dec
or
lahf
cli
decl
test
inc
es
mov
pushf
std
add
cmp
jnp
xchg
mov
jl
inc
or
add
jmp
leave
out
pop
ds
outsl
xchg
cs
leave
repz
in
dec
pusha
add
or
and
mov
jnp
cli
aad
xor
jle
pop
jne
in
decb
mov
sti
adc
mov
cmp
xchg
adc
add
cwtl
rcl
sub
mov
push
nop
cli
xor
fdivl
into
jmp
sti
xor
inc
sbbb
sbb
add
mov
movsb
inc
sub
movsw
sbb
jmp
mov
jmp
xchg
imull
sbbb
stos
or
or
insl
add
andb
inc
clc
add
mov
icebp
mov
clc
out
pop
in
aaa
or
pop
mov
fsubl
in
bound
rclb
daa
jge
add
icebp
icebp
add
int
nop
scas
leave
push
out
push
shll
je
cmp
jle
movsl
push
xchg
xchg
jmp
imul
add
jns
mov
iret
int3
push
sbb
jb
push
int
xchg
imul
push
sub
sub
dec
jg
in
dec
add
xor
addr16
das
pop
push
bound
daa
xchg
rclb
iret
push
call
dec
add
xor
xlat
fs
mov
xchg
adc
sub
or
jbe
adcb
add
movsb
mov
je
xor
mov
xor
add
jno
add
xor
or
adc
in
xor
xor
mov
mov
or
push
pop
and
lahf
push
push
jns
push
and
inc
jnp
add
xor
jmp
loop
sbb
jae
jmp
add
dec
jge
jmp
lret
pop
add
iret
jmp
subb
lcall
into
lds
daa
ja
cltd
jl
daa
iret
in
add
mov
pusha
lea
enter
subl
movsl
gs
enter
xchg
add
or
pop
fwait
scas
sar
fiadds
out
aas
jmp
inc
je
dec
nop
and
les
pop
clc
movsl
iret
jne
iret
daa
jl
dec
enter
adc
add
xor
repz
mov
or
lret
in
lds
jp
stos
xchg
out
cmpsl
dec
lods
pop
jecxz
js
stos
xchg
fs
test
subl
sub
fdivl
xor
in
push
or
jl
inc
jo
in
test
std
push
ljmp
pop
fstpt
jnp
test
cld
add
aam
xchg
add
jmp
push
jns
dec
xchg
in
mov
shll
pop
add
subb
fnstsw
subl
jbe
test
sub
sbb
hlt
add
outsl
jmp
das
aas
xchg
sti
push
jmp
dec
shl
or
test
jne
call
bound
add
add
andb
insl
hlt
cmp
push
sti
fsubl
and
jae
imul
jne
sti
pop
out
sub
push
adc
jmp
mov
ret
push
pop
icebp
sbb
je
or
loope
add
cli
addr16
inc
add
flds
subb
shlb
sub
jmp
sub
jnp
jle
push
push
add
lds
and
sahf
fs
cltd
push
and
es
test
enter
movsl
add
xchg
push
jmp
std
mov
jno
adc
test
pop
xchg
push
pop
call
jmp
aas
jne
daa
out
gs
test
dec
or
test
loop
jbe
add
add
mov
sub
movsl
pop
outsb
pop
xchg
or
incb
xchg
out
push
mov
leave
inc
loopne
movb
cmp
jle
repz
push
pusha
mov
mov
inc
movl
cli
daa
repnz
jmp
inc
push
jo
test
adc
xor
jmp
jmp
jmp
add
add
rcl
mov
jo
jl
sbb
xlat
inc
les
int
outsl
ja
mov
movsl
icebp
in
xor
idivl
jmp
inc
out
xor
outsl
dec
in
je
ret
daa
sub
js
xchg
cmp
sub
dec
xor
add
shr
test
add
cmp
call
notb
in
nop
out
push
inc
or
and
hlt
push
and
jae
xor
cs
xchg
popa
xchg
test
and
test
pop
inc
adc
test
pop
ds
in
xor
jmp
add
das
iret
jp
pop
leave
cs
rorb
jo
jae
pop
pop
leave
push
ds
iret
jmp
movsb
pop
add
adc
mov
jae
add
dec
lods
decl
sub
inc
fmulp
xchg
dec
jnp
add
xor
add
jno
xor
xor
pop
adc
lret
scas
ret
add
xchg
and
dec
adc
cli
push
or
lea
cmp
xor
add
inc
sub
push
xor
jmp
sti
ret
jno
fwait
lahf
cltd
stc
sbb
jb
ljmp
adc
std
ret
jl
jmp
incl
jmp
jnp
cmp
add
push
mov
daa
sbb
clc
and
jnp
pushl
lret
daa
pop
sti
sarb
jmp
lcall
push
add
enter
or
mov
add
xor
inc
dec
ret
xor
or
add
add
jmp
mov
add
xor
enter
add
aad
les
adc
lock
jp
fdivs
scas
gs
add
xor
xor
pushf
fnstenv
bound
ljmp
jmp
jmp
aaa
cmpsl
subb
std
imull
sbb
jmp
aaa
jnp
lret
cmp
adc
inc
out
sbb
hlt
loop
jno
add
lock
scas
in
leave
scas
add
inc
nop
mov
out
mov
pop
jmp
add
jo
pop
fcos
call
or
outsb
sti
cmpl
in
mov
add
call
dec
jl
jmp
jne
imul
out
js
cli
mov
pop
aaa
xchg
add
and
icebp
sbb
mov
jmp
add
jg
xor
push
add
jl
push
add
xor
or
xor
cmp
je
add
outsl
push
ret
lret
lret
int3
jno
mov
dec
push
call
xchg
ljmp
xor
xor
mov
or
ret
call
test
cmpsl
out
inc
shlb
mov
cli
test
mov
mov
pop
roll
jb
add
out
jns
xchg
xor
mov
jne
ds
push
xor
ja
pop
add
orw
out
jg
jmp
jmp
mov
pusha
inc
jp
jg
jnp
ja
mov
out
push
aad
add
jp
test
mov
xchg
add
sub
aas
push
sbb
ja
pop
les
bswap
ja
pop
rorb
inc
xchg
movsb
mov
cmp
or
jb
loop
xorb
pop
sbb
lret
and
add
hlt
in
bound
pop
mov
pusha
cmp
insl
cmc
insl
and
inc
xchg
add
add
mov
js
mov
push
fcomps
js
and
add
insb
sti
inc
jmp
and
ljmp
les
sahf
test
or
lods
mov
aas
aaa
test
or
repz
loopne
jmp
scas
iret
in
cmp
fs
shll
ret
sbb
or
adc
sbb
push
scas
jecxz
adc
out
in
arpl
aaa
scas
mov
push
stos
loopne
xchg
shrl
xor
aaa
cmp
je
mov
int3
adc
add
push
cmp
sub
cmp
call
mov
sub
push
add
sub
adc
add
mov
test
dec
sbb
xorb
add
sub
lcall
pop
call
ret
mov
pusha
and
in
mov
and
mov
pcmpgtw
lea
fstpt
jle
xor
adc
rol
aas
mov
push
xor
lea
mov
stos
in
call
pop
push
pop
jmp
xor
adc
sbb
dec
pusha
sbb
daa
hlt
push
jg
sub
jb
daa
and
into
xchg
stos
shrl
fildll
jmp
dec
sti
fisubrs
inc
jmp
ret
or
je
adc
inc
and
mov
mov
add
xor
call
pusha
add
inc
and
add
or
xchg
and
aam
sbb
or
xor
jb
lds
fildll
adc
fnsave
outsb
dec
adc
add
in
sbb
sti
fnstenv
subb
pop
dec
pop
sub
or
jmp
sbb
ss
add
inc
cmp
lcall
lret
insb
cwtl
adc
dec
out
mov
pop
or
out
jns
mov
ja
outsb
dec
iret
and
add
es
pop
jmp
incb
repnz
repnz
push
shll
pop
sti
inc
out
xor
insb
sbb
add
call
movl
lret
cli
rolb
add
cli
jmp
jmp
xor
jmp
enter
jno
and
stc
lock
in
inc
inc
loope
aaa
inc
and
jecxz
inc
bound
cmp
shlw
call
leave
add
sub
add
insl
add
pop
fimuls
or
pusha
decb
cmp
aam
call
sub
add
cmc
decl
sbb
das
jnp
jle
mov
adc
js
cmp
add
mov
in
push
das
mov
or
inc
cld
decl
ds
mov
and
mov
and
xlat
fiadds
add
addb
add
push
pop
das
push
incl
add
push
lock
jge
mov
xor
das
mov
mov
call
out
fcmovbe
incb
out
jmpw
and
and
ds
test
lea
test
out
adc
sub
sbb
adc
add
daa
in
mov
pop
call
pushl
sub
lock
jo
inc
shlb
inc
fsin
incl
add
lcall
adcb
ret
xchg
ljmp
icebp
loopne
push
call
xchg
cmp
mov
ret
int3
pop
fadds
jmp
adc
mov
imul
add
jmp
popa
mov
cmove
xchg
mov
or
insb
dec
nopl
pop
push
pusha
pop
add
movups
scas
fdivl
jmp
or
call
and
mov
lea
xor
adc
call
cli
js
add
jae
or
lock
xor
repz
jb
es
add
or
fucom
xchg
push
inc
cmp
sub
sbbb
cmp
cmc
pop
ret
call
add
call
lds
insl
repz
jmp
jp
add
call
mov
andl
adc
ret
pop
icebp
mov
mov
int
mov
add
add
out
jne
mov
call
mov
pop
push
pop
cltd
mov
adc
popa
sub
lea
add
int3
loopne
shlb
test
jg
stos
add
testb
cmc
mov
cld
mov
shl
in
mov
push
pop
lods
inc
and
bound
mov
inc
aas
icebp
jne
add
dec
and
divl
or
adc
add
or
adc
inc
jl
lds
data16
jbe,pt
or
add
add
pop
push
fwait
sbb
lahf
sub
std
out
jmp
jnp
push
mov
rorb
rep
jmp
mov
xor
outsl
or
inc
ret
out
cmpsl
idiv
pop
xchg
dec
decb
leave
xchg
out
cld
cli
je
lds
jne
jg
int3
les
jmp
dec
and
cli
dec
push
mov
jge
jo
out
fchs
jge
cmp
add
hlt
xchg
imul
movsb
sub
dec
aad
adc
idiv
into
lock
outsb
mov
adc
scas
enter
mov
xor
pop
jmp
fs
inc
fildll
call
add
stos
jo
jmp
jmp
dec
xchg
mov
stc
outsb
and
aam
in
add
add
test
adc
add
adc
ljmp
add
call
lcall
cwtl
sub
dec
cmp
cli
pop
out
pop
pop
sub
jle
jmp
call
cmpsl
dec
lea
out
add
test
cli
testb
call
mov
fisubrs
std
call
add
call
mov
and
imul
mov
xchg
addr16
and
imul
push
loope
xor
pop
dec
daa
addl
and
notl
xchg
jnp
test
pop
inc
cmpl
adc
xor
add
xor
es
jl
and
push
add
push
xor
add
fimuls
lret
cmc
dec
add
ret
inc
out
add
sahf
das
add
cld
and
in
add
add
lret
sub
push
sbb
pop
fnstcw
add
jmp
jmp
iret
xor
test
mov
nop
push
rclb
mov
iret
shll
rcr
jns
ljmp
add
dec
cmc
call
jo
sbb
testb
jmp
in
ss
ja
bound
add
call
push
bound
sbb
popa
inc
sub
mov
push
and
xor
sub
idivl
cmp
mov
add
add
xor
or
pop
or
loope
mov
sub
or
lods
and
lea
cmp
mov
rcll
jo
add
insl
lds
fs
hlt
imul
xor
lods
mov
xchg
xchg
call
mov
pop
or
cmp
enter
jmp
movsb
pop
add
xlat
enter
mov
add
cmp
xor
call
out
push
shll
fs
xor
jge
popf
in
add
inc
add
rcll
mov
movsl
and
xor
xchg
rcll
add
insb
jns
int
jl
xchg
in
xor
jb
adc
ljmp
xchg
add
add
push
mov
or
cli
jmp
sbb
and
rclb
xor
mov
add
cmp
mov
add
push
aaa
leave
call
mull
dec
lret
addr16
sub
call
mov
decb
pop
push
add
adc
add
out
mov
push
dec
pop
pop
xor
add
push
add
xor
inc
fistl
out
and
add
jae
or
xor
and
push
shll
ja
xchg
outsl
and
mov
std
xchg
out
jle
mov
xlat
cld
jno
lock
scas
cli
push
sti
imul
or
sub
aad
push
xor
dec
adc
add
push
inc
and
mov
jns
movl
out
jo
cli
pusha
add
idiv
in
inc
and
pusha
dec
repnz
jp
rcl
lret
clc
cli
mov
xchg
dec
andl
xor
imul
add
sbb
add
xor
test
xor
add
add
push
roll
mov
lcall
dec
out
add
rcll
mov
mov
sbb
test
add
xor
add
inc
add
stos
test
movsb
dec
fnstsw
fcoms
push
cltd
popa
push
icebp
mov
sub
dec
and
incl
hlt
outsb
add
pop
imul
add
int3
call
add
call
xor
mov
insb
xchg
stc
push
insl
jne
push
test
mov
xchg
ja
call
sub
xor
xor
sub
mov
xchg
sub
lock
add
xor
xchg
add
jge
out
push
cmp
jle
add
call
es
jmp
xor
add
ja
call
test
cmp
inc
subb
add
adc
xorb
pop
jle
inc
sbbb
outsb
insb
add
aaa
or
inc
inc
test
ret
call
leave
mov
mov
mov
jecxz
and
push
pop
push
pop
sub
rorl
testb
pop
loopne
inc
adc
xor
ljmp
lock
fistpll
sub
pop
jmp
xchg
stc
mov
mov
inc
add
dec
add
imul
pop
adc
jg
xor
jne
addb
movl
dec
inc
loope
mov
sarb
add
inc
outsl
or
adc
out
xor
in
push
mov
mov
stc
adc
sbb
xchg
shr
add
add
das
mov
cmp
int3
push
pusha
xor
enter
xor
mov
call
lret
mov
lahf
xchg
mov
jle
or
add
add
outsl
mov
jg
or
imul
enter
mov
jbe
stos
shlb
mov
inc
inc
mov
jmp
andl
xor
lret
lock
addr16
pop
jmp
add
xor
jg
or
fmull
jmp
jne
movsb
dec
lds
pop
dec
push
aas
out
cli
pop
imul
adc
adc
xchg
pop
push
cltd
sbb
jnp
push
xor
popa
push
xor
popa
and
psrld
leave
stos
cli
push
mov
lods
add
mov
ljmp
call
call
push
pop
and
das
test
jnp
gs
test
rolb
lock
add
add
xor
and
push
popf
pushl
aas
and
add
push
push
sub
pop
shll
mov
pop
add
xor
mov
fwait
cmc
mov
mov
jne
data16
xor
jle
aas
and
lea
in
push
mov
mov
clc
rorl
dec
push
leave
movsl
dec
dec
pusha
add
sbb
lods
cmp
inc
add
add
xchg
daa
pop
adc
call
xchg
outsl
and
ret
xor
dec
mov
sbbl
jmp
jge
pop
jle
jnp
jp
adc
stos
add
jo
outsb
fstpl
or
or
ja
iret
xor
sbb
jle
xchg
add
inc
jl
iret
movsl
cmp
pop
and
fistpll
add
call
dec
push
pushf
sbb
and
adc
std
and
out
fsubrp
cli
pusha
into
jl
add
and
add
int
bound
dec
jmp
fs
xor
add
mov
mov
shrl
push
data16
add
ret
push
sub
mov
mov
faddl
add
xor
add
les
xor
shll
mulb
sahf
jl
or
dec
insb
popf
xchg
xor
pop
je
inc
lock
inc
scas
sarl
and
in
outsb
idivb
in
push
stos
cli
bound
xchg
or
xchg
sti
cwtl
adc
mov
pop
cmp
jno
mov
stos
outsl
add
ret
stos
xchg
mov
cld
pop
scas
xor
addr16
or
sti
push
shr
push
xchg
mov
pushf
jmp
push
mov
out
divl
pop
jns
cli
mov
daa
add
add
call
xchg
movsb
fiadds
test
lahf
cmpsb
cli
add
xor
push
sub
add
pop
testl
jns
add
insl
or
bound
repnz
adc
lock
adc
dec
push
je
popa
or
add
fistpl
sahf
dec
push
fldl
push
inc
xor
scas
sub
orb
pop
fidivl
idiv
frstor
jmp
aam
push
mov
movsb
cmp
pushl
hlt
or
or
add
mov
cli
js
inc
pop
pop
mov
xchg
dec
dec
test
gs
mov
cltd
out
loope
add
ja
out
push
add
insl
adc
cli
sub
push
push
dec
mov
ret
jmp
cli
movsb
push
cmp
jno
xlat
enter
test
pop
rcll
in
data16
iret
fimuls
jb
push
mov
stos
cltd
jge
out
push
cld
shll
in
mov
jg
and
jmp
scas
lods
std
shl
movsl
push
mov
inc
sub
je
js
cwtl
sbb
add
add
fcomps
les
and
pop
aas
cmpsl
add
pop
inc
test
jbe
add
lea
add
jle
pop
xor
pop
roll
xchg
add
jo
pop
mov
or
adcl
add
pop
xlat
bound
mov
sbb
mov
call
sti
cwtl
xchg
ret
pop
cmpsl
subl
xor
cmpsb
pop
mov
pusha
lods
push
sbb
add
lea
and
push
lcall
hlt
movsl
cli
insl
test
pop
jb
xchg
xlat
inc
cmpsb
xchg
xchg
xchg
hlt
push
mov
in
test
or
xchg
rolb
sub
call
stc
mov
jecxz
insl
std
notb
iret
je
xor
add
sub
or
xor
add
add
sub
or
push
mov
outsb
and
mov
inc
and
pushf
push
sti
gs
test
inc
add
push
or
push
ret
mov
xchg
test
jne
pop
pop
adc
ret
adc
xor
mov
and
xchg
idiv
lds
and
jmp
je
jmp
int3
push
fs
add
push
inc
mov
xlat
jbe
and
jb
daa
sbb
sub
mov
jmp
xor
and
out
jecxz
cli
jo
sub
loop
pop
iret
orl
pop
pop
out
fiadds
jmp
push
jae
and
mov
push
sub
xor
cwtl
add
add
add
jmp
mov
outsb
push
push
pop
jo
xchg
daa
lret
add
test
je
jmp
mov
or
lcall
cmpsl
insb
ret
mov
dec
adc
add
pop
or
xor
cmp
add
add
add
mov
cmpsl
mov
dec
int
movsb
sbb
aad
cmp
mov
add
cmpsb
pop
mov
ret
push
mul
mov
movsb
daa
add
outsb
lds
pop
pushf
cmp
insl
incl
daa
in
aad
sti
push
mov
pop
mov
loop
stos
adc
pop
data16
lods
cli
jbe
push
rolb
lods
leave
shll
cli
ficomps
and
jbe
out
ds
cli
jb
dec
sub
dec
scas
popa
les
add
mov
adc
lods
dec
sbb
dec
sbb
lahf
xor
mov
cmp
cmc
add
xchg
aas
cmpsb
cli
jb
scas
leave
push
adc
push
insb
in
clc
insl
stc
and
mov
scas
adc
nop
xor
sub
add
cmc
and
ficoml
adc
std
mov
pop
mov
addl
mov
cmp
pop
dec
mov
cmp
push
add
mov
and
mov
and
sub
clc
ljmp
cmc
add
adc
adc
pop
cmp
test
pop
hlt
lock
sbb
sbb
dec
stc
and
push
repnz
ljmp
dec
lea
cmp
popf
fwait
sbb
cltd
incb
cltd
bnd
scas
or
add
add
jmp
or
jno
mov
addl
jbe
testb
push
cli
mov
xor
imul
icebp
aas
jmp
ret
or
push
dec
jo
sub
cmp
sub
xorl
out
mov
jbe
test
cltd
gs
cmp
sbb
lret
mov
daa
cwtl
popf
lock
mov
outsb
dec
iret
inc
inc
lds
cltd
insb
add
xor
pop
inc
pop
popa
rolb
fdivrs
into
add
mov
or
sbb
sbb
rorb
rorl
adc
pop
test
add
inc
jmp
movsb
adc
or
xchg
sub
push
cltd
sub
mov
sub
add
push
mov
int
gs
add
mov
xchg
cmpsl
xchg
mulb
sbb
out
fwait
cmpsl
cli
bound
incl
call
xchg
cmpsl
xchg
popa
jp
loop
cmpsl
cli
fs
mov
pop
lahf
add
loop
cwtl
sti
sti
push
jo
dec
adc
je
and
cmpl
call
cmpsl
xchg
xchg
xchg
fidivl
test
sahf
hlt
insb
lcall
add
jae
pop
adc
mov
cmp
scas
or
inc
xchg
mov
or
outsb
outsb
or
insl
adc
daa
add
jmp
sar
les
test
movsl
arpl
sub
push
pushf
pop
xor
jbe
sub
add
mov
and
test
add
adcb
cwtl
adc
cmc
lcall
mov
pushl
adc
xor
ret
xchg
add
xor
adc
mov
cmp
sbb
xchg
adc
add
jmp
sub
out
data16
pusha
aad
gs
lcall
add
jl
or
ja
cli
mov
inc
or
out
inc
adc
mov
mov
push
pushf
and
test
push
jne
xor
in
ljmp
add
es
jo
fwait
cwtl
jmp
out
call
mov
mov
lahf
jge
dec
xor
mov
mov
add
rcrl
adc
add
mov
popf
jge
lahf
call
fisubl
imul
cmp
outsl
arpl
pushf
cmp
mov
rorb
and
mov
mov
mov
mov
xor
stos
cmp
jae
xor
and
jg
and
imul
out
jmp
lcall
add
pop
and
adc
add
lahf
xchg
daa
aas
cmpw
lock
test
xchg
xchg
psrlq
dec
into
mov
orb
cmpsb
ret
mov
mov
cltd
mov
xor
jmp
fwait
cli
bound
mov
jge
mov
std
into
pop
das
sbb
mov
jne
or
lods
pushf
insl
in
xor
loopne
push
cli
add
adcb
pop
leave
ret
xlat
stos
out
shll
push
stos
testl
dec
addb
ds
xor
out
icebp
inc
in
or
cmc
sti
jb
stos
std
ljmp
cmc
incl
push
leave
ret
push
lods
out
es
push
add
movsb
pusha
xor
push
cs
jg
sub
xor
in
cmc
jmp
js
add
fsub
and
or
pop
call
cli
pusha
mov
in
cli
cld
addl
das
sbb
sbb
rcl
test
pop
xor
cs
jle
jle
inc
or
dec
sbb
rolb
addb
and
adc
inc
out
nop
xchg
or
inc
jecxz
add
mov
mov
sbb
pop
mov
push
and
inc
pushf
cli
cmp
test
outsb
xor
out
mov
mov
outsb
adc
pop
inc
out
pop
add
fmuls
lret
sbb
xchg
fwait
shll
stc
lock
add
out
scas
lods
pop
dec
xchg
out
lock
in
jmp
mov
xor
xor
push
and
xor
add
int3
pop
xlat
add
adcb
mov
or
add
xor
dec
xchg
mov
jmp
clc
mov
mov
and
xchg
aas
pop
and
or
pop
sahf
lock
stos
push
adc
cmp
insb
stos
push
sbb
mov
xchg
xor
mov
call
inc
call
bound
mov
fnstsw
fsts
out
mov
cli
jb
mov
add
jnp
in
fsubp
inc
add
call
sbb
sbb
call
add
call
cmpsl
lret
call
mov
das
add
lret
clc
and
cmp
dec
xchg
cmc
sbb
add
adcl
into
stos
incl
cmpsl
lret
call
dec
repnz
gs
test
test
ret
call
sbb
and
outsb
add
add
add
add
and
sub
sti
call
ds
test
and
cmpsb
cmp
jmp
cmp
adc
jb
and
sub
sar
clc
xor
xchg
das
jge
mull
ds
adc
lret
push
fisttps
add
add
ds
push
xor
clc
repz
dec
add
sub
iret
outsb
add
fmuls
lea
or
pop
jno
inc
and
clc
xchg
cli
leave
incb
and
jae
pop
push
sti
imul
adc
push
xchg
es
xor
test
xchg
pop
out
cmpsb
add
xor
sti
and
dec
xchg
sbb
insb
ret
lahf
sub
loopne
add
mov
jle
dec
fstp
add
jecxz
mov
insl
rolb
idivl
xor
lods
xrelease
xor
sbb
insb
cltd
imul
jno
xchg
inc
sub
jnp
xor
sbb
jle
dec
insb
ret
clc
adc
movl
adc
xchg
or
xchg
dec
sub
in
pop
pop
loope
dec
sti
hlt
inc
and
pop
mov
add
mov
inc
inc
jo
dec
adc
stos
dec
outsb
scas
es
mov
test
pop
jb
pusha
addr16
cmp
dec
and
out
adc
push
xchg
pop
adc
xlat
push
adc
es
mov
add
hlt
test
add
sbb
and
sbb
add
bnd
lock
repnz
fildll
data16
mov
push
xor
insb
es
cmpb
jl
sahf
jns
push
cmp
sbb
les
rolb
or
inc
bound
or
mov
inc
pop
lock
push
dec
and
insl
incb
mov
sbb
cmp
pop
jmp
lods
aaa
add
add
xor
jb
mov
add
xor
inc
out
testb
repnz
lahf
scas
ljmp
and
je
push
seto
sub
dec
iret
ja
push
sbb
xchg
and
push
or
or
sahf
adc
mov
xlat
pop
call
dec
ds
ja
add
xor
add
mov
jmp
sub
pusha
dec
or
das
ljmpw
inc
iret
xor
xor
das
pop
stc
insb
inc
test
add
sbb
xorb
jne
jmp
adc
lds
idiv
sbb
push
aas
test
mov
sbb
fs
cmp
dec
push
xchg
jmp
and
in
add
add
outsl
js
cli
inc
mov
repnz
xchg
andb
adc
decl
lea
ljmp
les
test
hlt
push
jmp
imul
les
sub
in
add
fimull
mov
subb
jmp
das
stos
movb
cli
es
cli
push
xor
add
xchg
in
push
negl
mov
out
in
inc
ds
out
es
shrb
stos
clc
fs
sub
into
cld
orb
bound
call
bound
inc
call
adc
out
inc
adc
movsl
jb
sbb
call
call
cs
scas
addr16
jg
or
xchg
inc
push
pop
add
shrl
push
jg
xor
sbb
xor
pop
mov
lea
shl
ds
cmc
test
stc
imul
dec
sub
faddl
test
lahf
xchg
mov
push
mov
std
and
stc
and
push
and
stos
aaa
adc
ret
adc
inc
sub
cmp
add
mov
cmpb
dec
sub
cmp
mov
cli
outsb
lret
and
lods
lret
and
mull
lock
jg
xchg
sbb
pop
cmpsb
outsb
jge
xchg
incb
jmp
cmp
data16
sbb
sub
lods
andl
jp
jmp
call
add
push
cltd
xor
hlt
add
int3
xor
fldt
lcall
icebp
das
fsubl
cmc
les
jb
int3
ret
xchg
nop
call
xor
daa
in
xor
jg
add
or
mov
mov
fcompl
sub
cmc
int3
cmp
cmp
call
fildl
jno
in
add
outsl
mov
adcl
xor
or
fwait
mov
jmp
leave
icebp
mov
jmp
inc
incl
mov
rorl
mov
call
mov
jg
adc
sub
or
out
lods
mov
insb
mov
adc
mov
adc
inc
dec
add
and
jmp
add
and
add
call
mov
push
cmp
mov
push
xor
jmp
xchg
hlt
in
jns
add
call
pop
xor
in
cwtl
inc
add
xor
test
push
add
xor
and
inc
divl
or
add
or
inc
loope
mov
sbb
mov
fcomi
and
je
mov
dec
and
fidivrl
push
sub
add
adc
push
mov
or
call
mov
cmpsb
loopne
pop
loope
addl
orl
loopne
fcoml
sbb
jmp
mov
add
add
nop
dec
or
mov
dec
adc
ljmp
dec
adc
xchg
jae
jge,pn
subl
test
cmpsl
out
add
cli
adc
xchg
call
sar
push
lods
adc
xchg
jmp
es
cmp
adc
test
clc
out
cmp
cli
jo
xlat
lods
or
mov
dec
jmp
movl
add
push
roll
xor
insb
das
jmp
add
aas
test
outsl
mov
or
sbb
lods
mov
xor
shr
cmp
push
mov
and
out
cwtl
mov
pop
and
jns
xor
repz
jmp
sub
addr16
push
jno
mov
mov
negb
aas
sub
jp
bound
or
add
call
xchg
jmp
pop
out
sbb
insl
aam
cmp
shll
sbb
in
ss
into
xor
push
jmp
jne
pusha
xor
sub
adc
push
cmc
pop
sbb
jg
mov
mov
lds
mov
add
push
mov
lds
leave
push
inc
imul
jge
dec
pop
add
or
mov
into
out
mov
jne
ja
loop
push
mov
jb
mov
xchg
out
cmp
imul
sbb
add
mov
iret
xchg
dec
ljmp
dec
jne
sbb
xor
ret
loop
mov
cmc
xor
push
mov
call
add
add
jecxz
add
push
in
pop
bound
pop
lea
add
or
mov
je
pusha
pop
out
pushl
adc
jp
inc
pop
aas
and
add
aas
and
add
and
mov
out
cs
lds
push
sbb
mov
mov
adc
add
push
pushf
push
pop
aad
add
aas
xor
xchg
add
cmp
jg
fwait
mov
in
adc
jae
xor
sub
sbb
jae
pop
or
push
test
cmp
sub
cmp
lock
test
out
xchg
ficompl
dec
jl
jne
out
adc
je
xor
dec
int3
cmp
xor
mov
les
add
les
adc
pop
cmpsl
sub
mov
icebp
mov
out
outsb
call
leave
sub
call
add
mov
sub
or
jo
fistpll
addb
cmp
cmp
outsb
and
jmp
fmulp
sub
out
call
shl
adc
gs
mov
push
adc
fidivrs
push
add
cld
imul
and
jae
gs
repz
mov
mov
std
repz
repnz
call
dec
pop
call
mov
xlat
test
add
push
out
xor
jmp
jecxz
push
sub
lods
mov
sahf
pop
popa
mov
addl
xchg
add
test
filds
mov
aaa
sub
mov
and
ljmp
push
stc
jg
sbb
fmull
daa
stos
or
mov
cmp
ds
outsb
adc
xor
add
aaa
outsb
or
jno
or
xor
jg
add
xor
add
jb
pop
nop
cmp
addl
jle
dec
push
hlt
mov
xlat
mov
cwtl
or
pop
sub
push
jno
negb
jmp
add
add
outsb
or
xor
ds
or
repnz
jmp
or
je
pushl
inc
test
jg
shr
xchg
decb
xchg
testb
xor
push
dec
add
add
jmp
std
sub
or
jmp
xchg
mov
xor
cmpsb
xor
mov
sbb
xchg
sub
stc
mov
call
jecxz
adc
add
test
cmp
push
dec
push
outsb
dec
pop
sub
xor
cmc
jl
movsb
out
xor
arpl
les
insl
mov
nop
fdivl
fidivrl
dec
xor
hlt
mov
pop
movd
addl
mov
mov
fs
add
insl
in
or
shll
dec
mov
cmovl
pop
push
ljmp
dec
iret
pop
pop
test
jecxz
gs
adc
int3
aam
ss
add
addr16
es
add
call
stos
shrl
ret
test
sbbl
push
cmp
hlt
pop
cmp
fdivl
iret
jecxz
xchg
push
push
add
sub
ljmp
inc
jmp
scas
das
sbb
push
lods
add
xchg
mov
adc
pop
hlt
push
aaa
jo
xchg
add
cltd
pop
cs
cmp
daa
mov
test
jle
orl
sub
loope
rol
sub
scas
imull
hlt
dec
adc
ret
ja
mov
outsl
add
imul
jp
pop
mov
lea
test
jae
sbb
mov
mov
cmp
add
add
test
pop
cmp
pop
fxam
mov
push
cmp
cli
sbb
jmp
cmp
fmull
aaa
or
mov
sti
insb
or
mov
mov
mov
add
cmp
sub
leave
out
in
mov
pop
ljmp
add
add
addl
sahf
push
mov
xchg
inc
mov
cli
push
test
enter
sti
push
jl
je
and
jmp
mov
lods
xor
xchg
jo
sti
aad
adc
stc
in
adc
jmp
movsb
syscall
das
shll
push
loop
lods
dec
ret
ret
lret
or
add
or
test
jmp
loopne
movsb
sub
loopne
xor
fimull
push
mov
test
sub
call
pop
inc
mov
fwait
dec
push
mov
pop
jmp
test
in
push
fmulp
inc
and
loope
inc
pop
loope
dec
data16
scas
fcmovu
adc
out
inc
in
adc
jae
das
sub
mov
lea
add
sub
call
ljmp
push
and
pop
shl
pop
cmc
adc
and
jmp
cli
and
jno
or
dec
xor
pop
sub
xor
jmp
lret
xor
push
or
sti
cmp
loope
xchg
add
xor
mov
cmp
inc
add
ret
xor
divb
jge
cmp
or
pop
xor
std
fisttps
repz
data16
push
mov
mov
aaa
pushf
idivb
call
gs
push
mov
add
xlat
scas
ljmp
lret
adc
rol
push
mov
add
add
xchg
lock
jle
lret
fs
les
jae
add
ret
mulb
adc
je
add
ljmpw
pop
mov
subl
sub
ljmp
and
mov
jmp
and
jae
and
jae
add
decb
jl
lea
add
lea
or
rorb
ds
xchg
rorl
enter
inc
add
cwtl
cli
in
outsb
xchg
cmp
add
stos
mov
cltd
jno
add
dec
xor
mov
and
mov
ret
loope
sbb
xchg
jge
aas
iret
and
ret
clc
and
adc
lods
sub
jle
push
stc
lock
add
add
sub
aas
mov
ret
fsubs
mov
dec
fwait
jge
push
f2xm1
call
jg
dec
call
ffreep
das
jmp
mov
jmp
outsl
aam
imul
testb
add
out
mov
add
fldcw
lret
dec
add
call
mov
call
or
jb
and
add
cmp
cli
cld
xor
inc
jmp
out
add
shlb
out
add
dec
push
data16
fcoml
test
in
into
ret
out
lods
or
jl
mov
fsubrl
add
call
loopne
sahf
clc
lods
dec
lds
xchg
rolb
cltd
ret
cmc
mov
int
cmc
ret
mov
inc
xor
fisubrs
sbb
xor
pop
sub
or
cmc
inc
inc
js
jae
jle
ret
push
mov
out
or
dec
push
cmpsb
xlat
pop
adc
inc
jne
inc
js
push
xor
inc
add
das
push
push
ret
and
jmp
mov
and
sub
mov
add
scas
mov
out
dec
add
aad
add
mov
js
inc
add
fistl
mov
outsl
jbe
add
sbb
jmp
out
inc
jmp
stos
jae
add
in
push
lods
add
jmp
sbb
xchg
adc
push
add
sbb
ljmp
inc
jmp
stos
jae
shll
add
xchg
add
lods
dec
adc
sub
sub
mov
mov
stos
test
adc
mov
mov
xor
push
call
lods
push
stos
jmp
fcoms
roll
jns
jle
sub
lds
rcll
jns
jg
add
stos
fsubl
pop
add
adc
sub
out
xor
gs
add
sbb
test
fs
fcoms
add
das
lahf
lahf
popa
lock
xchg
inc
jns
ret
mov
jns
xor
cwtl
xor
push
sbb
dec
mov
fldl
stc
fcomi
incl
or
jmp
ds
repnz
and
inc
hlt
and
jns
mov
sub
xchg
add
bound
inc
and
out
sarb
inc
lods
cli
adc
cmp
leave
cmp
jg
out
or
nop
arpl
aad
mov
dec
sbb
lods
inc
sbb
add
cmc
lcall
daa
lea
push
call
lahf
call
adc
sarb
or
push
dec
idiv
add
ljmp
fmul
ret
sub
cmc
call
stos
fcompl
lods
test
mov
les
call
sub
push
addl
subl
mov
notb
stc
fbld
and
aaa
and
push
push
dec
scas
mov
and
and
pushf
mov
out
lods
subl
inc
push
adc
sbb
xor
dec
sbb
clc
leave
gs
push
and
sarb
cwtl
add
jmp
lods
mov
fs
xchg
dec
test
and
out
sub
mov
jo
call
pop
add
sti
mov
add
or
pop
test
pusha
jl
call
adc
add
mov
sub
js
das
mov
stos
xchg
jge
jge
dec
cmc
push
jbe
or
jb
add
sbb
insb
dec
iret
and
hlt
xor
insb
add
xor
cmc
mov
cmpsl
and
hlt
stos
and
jo
add
jb
test
push
imul
add
pop
jno
les
jl
dec
stc
xorl
jmp
mov
jmp
push
scas
inc
inc
jo
dec
adc
sub
mov
fidivs
ret
inc
das
sbb
ja
out
outsb
sbb
and
outsb
xchg
call
lea
and
add
imull
je
mov
pop
addb
subb
add
dec
cmp
call
sub
call
outsl
mov
ret
stc
mov
data16
lods
xor
les
out
lock
cmpsb
sub
gs
xor
push
lea
pop
outsl
aaa
xor
sub
fmuls
pop
mov
cmp
push
pop
xchg
push
jnp
jbe
push
and
jns
loop
add
test
test
cmp
leave
sub
add
and
add
lds
adc
adc
cmc
mov
lock
ljmp
adc
ljmp
inc
add
pop
add
jmp
aaa
cmp
mov
xchg
repnz
cmpsl
insl
fimuls
mov
adc
lods
cli
cmp
cmpb
add
data16
iret
sub
add
xor
lods
adc
out
jns
lock
push
xchg
shlb
xchg
pop
push
xchg
pop
les
cltd
loop
add
ss
pop
sub
or
fnstenv
in
mov
movaps
aaa
add
add
fdivrs
and
mov
sub
sub
and
mov
cmp
push
fsubrl
mov
lock
mov
pop
add
mov
in
loopne
in
cld
push
test
es
xor
in
push
ss
xor
mov
icebp
call
pop
add
sahf
jle
inc
jmp
stc
push
xlat
popa
pusha
mov
push
stos
sbb
jns
test
add
in
sub
add
call
lock
sbb
test
dec
fdivr
test
push
bound
add
in
jge
call
mov
imul
test
push
jmp
sbb
add
in
imul
xor
in
out
inc
jmp
sbb
mov
out
ds
mov
add
mov
inc
or
lock
repz
inc
sti
mov
icebp
test
je
add
add
xchg
nop
add
push
xor
lcall
xor
push
cltd
enter
add
add
je
out
push
aad
je
push
xor
add
add
cs
jne
adc
mov
push
jae
inc
shlb
jmp
jp
aaa
imul
ljmp
fstpl
add
test
sub
jl
sub
outsl
sub
jae
movsl
cli
mov
pop
push
sti
add
dec
pop
mov
pop
call
repnz
mov
data16
cli
adc
decb
test
adc
fisubl
cmc
inc
cmpsb
add
cmp
cli
fmull
mov
jmp
xor
shrl
call
test
jmp
data16
xor
out
mov
mov
add
add
add
in
jp
xor
add
daa
cld
outsb
repz
scas
cmp
jnp
cmp
inc
out
mov
clc
jp
inc
daa
add
push
outsb
mov
out
in
cwtl
xor
add
cmp
das
out
and
popf
ret
dec
dec
inc
push
decl
mov
call
add
adc
inc
inc
jmp
push
mov
mov
bound
jns
call
inc
aaa
and
test
aaa
ss
inc
or
test
mov
push
mov
std
dec
mov
lds
push
data16
xor
hlt
call
lods
je
mov
push
or
fidivrl
sti
fcompl
inc
jmp
imulb
add
add
xor
mov
in
jae
lret
pop
insb
cmc
adc
aad
add
mov
scas
dec
add
mov
or
insb
cmc
adc
add
add
outsl
push
mov
out
mov
xchg
jo
jne
aam
adc
sub
imul
mov
add
add
add
add
je
xchg
adc
cmp
cmp
mov
decl
cmc
jne
jmp
pop
add
add
jmp
mov
jmp
jmp
xor
push
pop
jmp
mov
adc
es
add
daa
mov
push
ret
popf
sub
cli
gs
jmp
subb
pop
dec
xchg
pop
decb
add
loope
cli
push
dec
sbb
or
addr16
lcall
pop
ljmp
repnz
fs
aas
sub
jmp
mov
ret
daa
cmp
mov
ret
mov
ret
jl
inc
pop
shrl
mov
das
cmpsb
je
insl
loope
sub
in
cmp
les
sbb
or
cmc
cmp
xor
cmp
pushf
xlat
in
lock
outsb
incb
ret
insl
push
adc
insl
adc
add
jns
pop
mov
sbb
imul
movsl
call
repnz
jmp
sub
addr16
cmp
adc
jmp
dec
loopne
cs
lock
daa
sub
test
push
push
lahf
add
push
popa
out
xchg
cltd
loop
sti
je
mov
pusha
imull
xor
pushf
mov
je
dec
filds
mov
out
pop
xlat
shrb
sub
add
sbb
sti
sbb
gs
in
pushl
inc
shrb
sub
push
mov
test
insl
sub
cmp
sbb
sti
incl
add
jmp
inc
and
arpl
je
inc
adc
push
push
sub
pop
inc
add
push
inc
add
jae
push
jecxz,pn
out
adc
xchg
hlt
decl
xorb
add
xchg
mov
jmp
hlt
lcall
sbb
jmp
add
ds
fs
int
and
mov
pop
and
ror
dec
orl
mov
and
pop
adc
in
sarb
pop
sbb
add
rcrl
ljmp
sti
movsb
jle
mov
movsb
addl
add
movl
sub
ret
mov
das
sub
add
mov
or
data16
mov
insb
ret
mov
imul
and
add
adc
in
mov
jmp
sub
out
out
fsubl
rcr
lock
stos
or
cli
lock
xchg
mov
add
mov
mov
arpl
fucomi
xor
daa
xor
xor
cmpsb
lahf
jno
mov
inc
imul
inc
repz
cmpsl
in
into
outsl
inc
int
and
sbb
leave
sub
xor
jmp
ljmp
ret
add
call
add
addr16
adc
fs
push
cmp
jne
call
adc
jmp
mov
push
flds
scas
leave
inc
test
pop
inc
mov
iret
mov
mov
xlat
mov
push
test
cwtl
aas
inc
jmp
call
pop
mov
xor
call
out
inc
cli
push
dec
add
xor
adc
sub
add
mov
out
pop
pop
subl
add
mov
in
arpl
push
stos
pop
sti
inc
jl
cmp
mov
cld
mov
mov
incl
notl
dec
enter
dec
imul
mov
cli
adc
in
ret
xor
adc
lahf
dec
or
mov
or
push
hlt
incl
add
mov
pop
pop
shll
push
inc
xchg
cli
cmp
ret
jae
into
shl
lret
std
cltd
incb
and
out
repz
xchg
sbb
rcr
cltd
push
in
ficoms
sub
sti
testb
pop
sub
pop
sub
mov
fucom
or
idivl
jmp
push
add
add
iret
stos
jle
cmp
adc
sbb
xchg
xor
aaa
insb
ja
xor
lods
test
jmp
push
rcll
arpl
rcr
lock
add
mov
mov
and
add
add
jns
xor
mov
or
out
lods
scas
pop
dec
adc
xor
add
add
insb
xchg
inc
xchg
cmp
add
sahf
aaa
push
int
mov
fcomps
xchg
leave
neg
cmp
add
jo
movsb
pop
mov
les
addr16
movsb
mov
aaa
inc
stos
pop
data16
cli
gs
pop
fisttpll
jbe
sub
aam
ds
jmp
shlb
sti
fisttpll
sti
aad
ss
mov
add
in
gs
cmc
and
sub
xor
sti
repnz
mov
pop
stos
jnp
sub
pop
inc
out
cmp
jmp
xchg
pop
or
mov
dec
in
mov
flds
je
mov
in
cmp
dec
cli
pushl
icebp
mov
cmc
je
icebp
or
pop
cli
out
sub
insl
jae
mov
and
inc
cmp
cmp
adc
stos
lock
std
lcall
and
push
mov
and
les
xor
in
pushl
adc
cmc
call
or
incl
adc
ss
adc
xor
notl
add
clc
mov
mov
add
shll
xchg
sar
add
ficomps
aas
jmp
shll
jmp
cmovs
mov
dec
decb
dec
mov
push
cmpsl
jmp
ret
je
out
aam
jge
cmp
sbb
cli
jle
xchg
je
push
xor
outsl
or
mov
dec
cmp
test
push
xchg
adc
pusha
add
or
push
sbb
push
xchg
add
xor
lcall
sub
jo
or
outsl
shrl
loopne
daa
pop
pop
inc
jmp
jecxz
scas
pop
xchg
mov
lods
sub
test
inc
jmp
pop
sbbb
stc
lcall
dec
lcall
mov
fbld
loopne
add
mov
cmp
jmp
jmp
add
das
inc
inc
or
jmp
call
sbbb
or
fdivrp
xor
cld
call
sahf
gs
mov
pop
jae
mov
push
add
jo
inc
and
push
cs
fwait
cmc
out
mov
out
dec
sbb
sub
and
out
addr16
add
call
cmc
out
call
les
out
ret
movsb
push
mov
jmp
aam
add
lahf
inc
shrb
mov
mov
loopne
inc
cld
push
repz
push
and
add
icebp
push
stos
pop
mov
add
xchg
and
push
jb
push
xor
or
add
inc
mov
add
fistps
out
mov
sub
jl
adc
mov
add
add
add
call
mov
mov
cmp
test
sub
xchg
lods
repnz
popf
mov
sub
sti
xchg
fists
add
jmp
sub
aas
jmp
xchg
roll
add
test
pop
and
fwait
std
testl
jnp
ffree
mov
icebp
das
hlt
mov
out
add
jge
mul
mov
sub
sti
sti
add
imul
adc
sub
ret
xchg
adc
xor
inc
jmp
jecxz
dec
cmc
call
add
add
aaa
add
mov
add
fbstp
inc
jmp
and
cmpsl
scas
sub
mov
es
pop
sti
stos
div
call
add
rorb
mov
pusha
inc
xor
aad
cltd
adc
pop
test
xlat
lock
loopne
add
test
lds
mov
shr
adc
mov
fs
daa
iret
and
mov
add
inc
adc
call
call
adc
sub
insb
jb
push
jno
test
in
push
xchg
arpl
and
fcoms
lds
add
and
cli
mov
jae
out
cmpsl
push
cli
jb
cli
fmull
inc
jmp
sbb
jg
push
fwait
push
cmp
add
sbb
push
add
push
cli
push
adc
add
call
adc
sbb
dec
or
push
push
xchg
jp,pn
test
inc
and
push
jne
add
or
adc
dec
lds
cmp
mov
add
xor
lret
push
test
pop
enter
pushl
decl
add
inc
and
pop
stc
adc
out
je
mov
push
add
sub
push
test
and
adc
xchg
pop
mov
jne
mov
repz
xchg
subl
in
jg
pop
addl
int3
cmp
mov
pminsw
stc
mov
push
jbe
xchg
dec
adc
pop
cmp
sti
dec
incl
add
mov
clc
aas
jmp
ret
jae
icebp
sub
fisubs
mov
pop
mov
mov
addl
mov
xor
mov
or
out
xor
xchg
dec
mov
les
imul
ljmp
add
add
call
sarb
scas
andb
mov
ret
test
push
call
xchg
and
loop
fdivrl
sub
jo
hlt
add
test
inc
clc
mov
jno
add
and
lcall
cmp
popa
sti
fnstenv
inc
jmp
add
inc
or
add
add
bound
repz
jecxz
call
gs
adc
jo
movsl
call
aam
jmp
adc
push
add
inc
adc
mov
into
std
xor
cli
jmp
sbbl
scas
loop
xor
call
add
lcall
add
jp
pusha
imull
push
rolb
and
lret
imul
pop
cmp
xchg
movsl
shl
push
or
imulb
bound
or
lods
sti
add
in
out
push
test
dec
dec
adc
inc
shrb
dec
push
cmp
outsb
add
jno
xor
mov
and
adc
add
pop
cmp
adc
jmp
aam
add
in
add
fsubr
or
lock
xchg
add
cltd
pusha
mov
cs
jmp
cs
nop
mov
push
mov
inc
rcl
mov
cmp
adc
lea
jg
aam
outsl
hlt
aas
jmp
xchg
add
xor
mov
sub
add
jmp
jnp
jecxz
inc
and
fiadds
adc
inc
xchg
jnp
iret
fldenv
adc
call
pop
add
mov
fmuls
xlat
and
aam
mov
or
mov
test
inc
jmp
out
jmp
xacquire
jno
clc
xchg
pop
out
addr16
add
cmpsl
push
jnp
or
addl
add
movsl
lods
out
test
lods
out
add
push
jecxz
lcall
xor
lods
rolb
xor
inc
iret
sbb
push
sbb
cld
jmp
jmp
sti
je
xor
push
sbb
jb
add
addr16
xor
stos
push
add
shl
cli
jae
jae
mov
mov
add
inc
cmp
loop
xchg
sub
test
mov
mov
call
ljmp
add
ss
or
bound
add
ficompl
push
insb
xchg
or
push
cli
jmp
mov
push
inc
or
add
adc
jne
out
jg
add
orl
dec
xor
out
aaa
pop
es
jne
leave
cmp
sbb
clc
sub
adc
aaa
out
incl
das
cmpb
je
scas
jbe
imull
je
sub
jmp
divl
cmc
adc
lahf
das
add
ret
mov
dec
and
add
fsubl
and
jmp
out
add
inc
sti
inc
xchg
outsb
out
and
out
fisubrs
and
outsb
cli
shll
inc
dec
add
incb
sub
adc
negb
inc
and
and
pop
mov
inc
jle
push
xor
pusha
add
icebp
jb
loop
and
gs
iret
push
ret
pushf
jb,pt
loop
bound
loop
jecxz
pushl
dec
sbbl
add
aad
je
xor
jg
pop
addl
xor
and
aas
in
add
insb
pop
in
sub
int
jg
adc
jle
adc
jle
mov
out
mov
daa
cld
sbb
aam
inc
add
jmp
movsb
clc
outsl
jno
notl
xor
cmp
int3
adc
mov
mov
loopne
lods
fucomip
mov
movsl
xchg
rcr
jl
hlt
mov
ljmp
and
pop
jmp
mov
dec
cli
xor
jmp
push
aas
mov
icebp
sbb
es
add
xor
aaa
incl
jmp
push
loope
scas
jo
add
call
pop
shrb
ljmp
pop
push
sahf
arpl
sti
push
jecxz
cli
ss
inc
test
hlt
cli
xchg
fs
imul
in
repnz
xor
aam
iret
inc
add
repnz
mov
adc
add
cltd
aaa
sub
jmp
xchg
fistpl
add
fs
add
pop
dec
orl
push
int3
enter
shr
int
call
push
jb
pop
stc
mov
icebp
lcall
mov
or
popa
cmp
gs
ljmp
decl
xor
dec
sub
add
fldcw
jmp
inc
xchg
jmp
out
add
cli
pusha
sbb
cli
test
hlt
gs
mov
pop
push
incl
shll
push
sub
cmp
sub
push
jo
add
dec
inc
cli
xor
adc
xchg
aam
jns
ret
cmc
jle
imul
mov
adc
jo
jecxz
rcrb
add
add
popf
jnp
inc
sbb
cmp
xor
xor
in
or
xor
adc
scas
sub
push
and
rcrb
fnstsw
dec
rcrl
f2xm1
call
divl
sub
xor
gs
xlat
pop
sbb
jmp
sub
mov
loopne
loope
aas
iret
loopne
xchg
add
or
mov
jmp
imul
loopne
mov
movsl
imul
in
sub
es
mov
fucomip
mov
jmp
decl
mov
in
jae
ljmp
fists
das
mov
add
shrl
xor
mov
call
mov
add
loopew
push
add
dec
xor
insb
call
imul
dec
icebp
shrl
jmp
fnstenv
xchg
loope
ljmp
sub
std
scas
mov
call
lret
arpl
test
push
cmovl
cli
call
pop
push
cmp
and
jne
xor
sti
pop
jmp
shlb
xor
add
enter
add
or
mov
adc
inc
add
push
inc
push
mov
or
je
jbe
or
pop
mov
cmp
or
lahf
sbb
cmp
push
adc
or
movsl
clc
ljmp
mov
add
mov
cmp
push
push
out
dec
push
jnp
add
notl
push
inc
jmp
jg
out
into
aas
and
mov
notl
aas
add
xchg
fimull
pusha
ficoml
bound
or
pushf
cmp
mov
leave
xchg
mov
cli
jl
lcall
xlat
mov
test
push
xchg
push
xchg
mov
add
pop
jmp
sub
xchg
and
out
outsb
test
jb
add
adcl
add
add
dec
cli
sub
popf
xor
inc
test
jns
pop
hlt
inc
loope
fs
pop
pop
insl
cmp
mov
out
inc
or
pushl
xor
lock
xor
add
cltd
sbb
add
jne
or
mov
ret
pop
mov
add
cli
lock
add
add
fwait
mov
sub
loope
pop
loope
and
shlb
in
jmp
icebp
enter
sub
sub
xor
scas
shl
mov
inc
rolb
cmc
ret
add
mov
lock
aaa
lea
les
push
xor
xchg
xchg
mov
add
mov
outsb
out
imul
push
mov
jb
dec
hlt
add
xchg
cltd
mov
notb
imull
arpl
sub
ljmp
imul
add
push
pop
adc
add
imul
cld
or
mov
add
adc
sub
mov
je
push
decb
imul
subb
sub
mov
and
pop
loop
es
test
in
jae
into
scas
jae
fdivrs
lea
pop
dec
jmp
ficoml
stos
push
add
or
or
and
ret
je
lret
xorb
inc
add
or
xor
gs
mov
and
call
fstl
cmpl
cmpl
or
mov
addr16
divps
adc
add
das
arpl
xor
xor
xor
dec
call
mov
in
filds
add
sub
fldenv
insl
iret
enter
call
xor
inc
mov
jmp
icebp
mov
adc
dec
add
testl
repz
mov
sub
xor
test
addb
add
insl
test
or
pushf
daa
mov
mov
mov
add
add
call
out
call
cmp
stc
mov
fisttpl
outsb
loopne
std
popa
push
and
ret
mov
cmpsb
adc
xchg
or
cs
mov
or
jb
movups
aam
inc
or
add
dec
es
adc
arpl
popa
fbld
mov
out
jmp
das
stos
lock
aaa
xor
clc
add
aaa
ja
inc
and
xorb
adc
out
dec
push
sbb
call
dec
adc
scas
mov
adc
scas
mov
jnp
scas
ret
fs
ret
add
mov
jae
add
dec
aaa
push
repnz
add
pop
je,pn
scas
hlt
adc
xor
mov
ret
mov
add
jp
cmpsb
xor
ret
add
and
pop
xorl
and
jmp
daa
lret
sub
cmpsb
mov
xchg
lock
je
in
and
sbb
dec
pop
popa
push
xor
in
pop
xor
add
arpl
mov
inc
loop
sub
ret
out
fcompl
inc
daa
test
repz
mov
lcall
pop
cli
movsb
or
push
xchg
jno
cli
xchg
push
ds
lret
fprem
stc
jl
addb
cmp
insb
pop
out
or
sub
imul
mov
js
and
inc
orb
add
or
insb
jge
inc
cmp
popl
xchg
rcrb
sahf
hlt
jge
stos
test
add
cld
jmp
dec
daa
test
xchg
inc
jl
out
push
pop
daa
test
xor
popf
jge
jnp
add
xor
add
jmp
out
add
mov
xchg
mov
icebp
in
sarb
aas
xchg
enter
loop
fdivrl
xor
imul
pushl
clc
dec
sub
sbb
jg
mov
inc
jmp
gs
jmp
sbb
adc
aad
decl
cmpsl
or
call
mov
inc
xchg
cmp
dec
lahf
loope
fcompl
or
shrb
add
jle
mov
fisttpll
adc
and
cli
mov
push
leave
cmp
and
rol
adc
arpl
rcl
icebp
inc
xor
std
and
mov
imul
mov
adc
cmpsl
jno
push
ja
push
push
jne
pusha
mov
ss
mov
ss
roll
xor
jnp
push
add
pushf
lods
inc
xor
adc
add
jo
dec
inc
jae
push
cmc
out
mov
pop
shl
jnp
jmp
loopne
mov
mov
xchg
fcomps
in
sub
mov
inc
jmp
xchg
inc
ljmp
icebp
out
addl
lock
pop
mov
jge
inc
jo
add
ljmp
cli
outsl
mov
punpckhbw
jge
inc
jg
dec
xchg
leave
mov
call
inc
in
lea
adc
out
pop
std
jmp
cmp
jl
call
jb
jmp
out
sub
dec
test
add
lret
jo
mov
mov
loop
movsb
dec
cltd
int
xor
jmp
add
pop
sub
add
cmpsl
xor
sarl
in
das
jmp
ret
push
test
xchg
js
repz
das
jmp
faddl
cmc
call
add
add
add
jmp
jmp
ret
jne
ret
imul
nop
jno
jecxz
movsl
cmp
adc
jmp
or
add
mov
inc
jmp
call
aaa
xor
push
cmp
call
das
jnp
inc
mov
cmc
jecxz
xor
cli
shll
add
test
sbb
int
call
sbb
push
aas
xor
cmc
sbbl
add
pop
je
cli
pusha
stos
pop
jle
arpl
out
sbb
sub
out
pusha
jecxz
movsb
add
dec
mov
sub
inc
cmc
add
add
cmp
test
xor
lcall
inc
subb
test
gs
jno
data16
fnstenv
lretw
jp
gs
jo
mov
mov
popf
xchg
cmpsb
inc
pushf
mov
mov
xchg
xchg
cmpsb
inc
movsb
mov
mov
mov
add
add
pop
addl
pop
addl
pop
addl
sub
xchg
mov
fiaddl
sub
xchg
mov
test
pop
into
push
stos
xor
push
je
scas
or
push
pop
movl
roll
repnz
jb
ljmp
ja
ret
xor
add
pop
add
outsb
add
xchg
sarb
adc
lret
add
test
incl
or
call
push
cmp
insb
bound
add
es
inc
hlt
insl
insl
ffreep
pusha
fdivl
dec
subl
jmp
in
jmp
sbb
add
std
cli
mov
cmp
out
add
lock
pusha
incl
dec
jmp
jmp
mov
sub
dec
testb
insl
fimuls
push
aad
ret
les
sub
lret
jmp
cmpsl
pop
jmp
pop
imul
jmp
ljmp
sub
mov
das
shlb
test
sbb
dec
xor
cmp
xor
lods
loopne
mov
cli
add
jno
pop
es
xor
jmp
idivl
mov
cli
push
idivl
jl
dec
xchg
arpl
cmp
stos
divl
push
jb
mov
rcll
mov
loope
out
push
lods
pop
jae
movsb
mov
cli
dec
out
ret
push
jb
movsl
push
stc
test
adc
cwtl
dec
mov
add
cmp
ror
mov
add
mov
cmc
jne
mov
lcall
cmc
mov
xchg
or
dec
das
add
xorb
ja
mov
adc
add
cmp
cmp
pop
test
in
in
or
jg
out
ss
dec
push
and
rorb
outsb
mov
cld
cmp
call
mov
cld
add
inc
cmp
push
cmp
mov
push
push
hlt
movsl
insl
test
ret
shll
jp
xor
shlb
out
int3
push
je
rolb
jg
cmp
outsb
out
ds
lret
nop
push
jns
jecxz
psubsb
jp
jo
sbb
adc
or
aaa
xchg
mov
xchg
push
stc
std
sbb
sarl
add
roll
lock
xchg
jo
xor
push
test
hlt
daa
xchg
hlt
std
xchg
xor
repz
in
les
ja
aaa
jge
dec
js
icebp
xor
repz
sub
jl
dec
pop
rcrl
loop
fstps
stos
aam
xlat
test
jo
enter
sbb
gs
xchg
dec
cld
mov
outsl
pop
xchg
into
add
jp
in
add
clc
mull
stos
mov
dec
sbb
jno
test
test
inc
mov
rclb
xor
jo
enter
enter
cmp
pop
out
jnp
cli
jb
scas
out
xorl
add
out
and
sub
cs
or
pushf
cmp
sub
add
jecxz
lahf
sbb
xchg
popa
cld
sbb
call
movsb
xor
call
cltd
jecxz
sahf
fstpt
cli
jge
sbb
divl
stos
mull
push
ds
out
mov
mov
adcl
rcl
sub
pop
jns
pop
pop
mov
add
das
dec
push
hlt
in
testb
add
das
add
out
jnp
imul
cmp
pushf
sub
xchg
das
or
push
fs
ffree
ljmp
sub
add
loope
or
xor
push
sbb
add
xor
xlat
ss
inc
inc
das
add
push
cmp
fcomps
lret
jmp
sub
iret
add
outsb
xchg
not
adc
sub
or
js
jnp
adc
sti
hlt
cwtl
imul
mov
add
aam
jne
mov
push
adc
pop
mov
dec
imul
clc
jnp
pop
xchg
in
incl
jmp
inc
inc
fists
jmp
std
push
pusha
mov
mov
mov
mov
add
imul
pusha
mov
xchg
and
push
addr16
sbb
xchg
insl
and
test
push
movsl
sbb
insb
sub
cmp
call
ljmp
in
outsb
daa
add
push
in
mov
cmpsl
adc
xor
iret
call
std
dec
aad
add
inc
loope
xor
jns
stos
and
pop
movsl
mov
mov
movsb
pusha
cwtl
jle
add
mov
subl
sbb
scas
push
xchg
ss
les
add
call
mov
sbb
call
mov
dec
lds
sbb
xor
add
call
mov
sbb
inc
sub
and
lcall
lret
xor
jmp
and
test
adc
lods
push
lcall
scas
lea
shll
add
mov
push
or
fisttps
inc
scas
fdivr
das
sbb
inc
adc
add
add
mov
mov
sub
xor
push
inc
js
adc
insl
adc
xor
mov
loope
cmp
pop
push
fwait
testb
pushf
sub
je
mov
in
mov
add
inc
add
test
dec
cmc
xorl
ljmp
dec
cmp
cs
fstpl
jnp
add
out
lcall
js
xchg
xchg
outsl
or
std
jmp
call
cli
jle
andl
js
in
lds
push
xchg
data16
data16
or
inc
ja
ret
cmpsb
data16
shll
cli
mov
add
pop
incb
movsl
js
xchg
outsl
out
sahf
data16
jo
or
movsb
xor
add
cmc
lock
rcrl
xlat
shll
pop
xor
inc
notb
fs
fsubs
adc
shrl
xlat
aam
inc
inc
adc
mov
out
lcall
test
mov
addl
data16
sbb
jne
out
out
bound
jp
sbb
jle
mov
or
and
out
add
jecxz
pop
sar
sbb
je
es
add
sub
data16
es
push
test
gs
and
mov
in
je
rcrl
sub
imul
lret
cli
sbb
mov
add
neg
stc
xchg
aaa
call
bound
call
inc
lods
xor
aaa
outsb
and
std
add
call
push
or
les
test
push
mov
xor
mov
inc
out
add
insb
add
xchg
cmp
loop
sbb
repnz
shll
rolb
testb
and
insb
and
in
lods
inc
or
aas
add
aam
add
mov
xchg
push
push
idiv
dec
mov
add
and
adc
scas
icebp
pop
sub
test
jns
sbb
and
or
jg
ret
shl
mov
je
or
rolb
ljmp
pop
ret
jg
mul
sti
popa
ret
jae
xchg
inc
add
lahf
add
sbb
ja
push
mov
and
add
mov
cmc
jae
scas
adc
adc
sub
or
ret
out
push
mov
adc
add
fmuls
outsb
push
add
rclb
pop
aad
add
scas
adc
jnp
sbb
jae
cmp
or
jnp
or
out
in
pop
adc
out
jmp
ds
adcb
xchg
int
add
mov
imulb
out
jmp
lods
divl
xchg
lods
dec
xor
ret
dec
mov
sti
andb
and
sbb
out
jmp
adc
sub
lock
popf
arpl
les
mov
jp
adc
js
outsb
out
fdivs
mov
mov
sub
gs
jnp
add
adc
out
xor
push
add
rcr
mov
aad
mov
mov
std
movsb
fsubs
jle
fwait
jl
clc
es
mov
ret
inc
test
loope
push
sarb
loope
stc
test
in
or
stc
out
lock
aas
xor
mov
mov
sbb
pop
aad
add
xchg
mov
pop
cmp
mov
pop
xchg
inc
mov
adc
lahf
dec
hlt
pop
fisttpll
pushl
je
adc
push
mov
mov
lea
xchg
idiv
and
mov
scas
mov
orb
shrb
jo
leave
adc
leave
mov
cmp
loopne
mov
mov
add
add
jge
cmp
inc
cwtl
sub
mov
pop
mov
imul
in
adc
push
jns
mov
push
or
and
lea
dec
mov
xchg
xchg
movb
popa
sub
stos
inc
mov
sbb
push
sbb
sbb
scas
mov
inc
insb
pusha
cmp
out
sub
addl
stos
vpsubd
mov
daa
pusha
inc
insb
mov
movsl
pop
or
jo
and
enter
mov
and
mov
out
in
or
icebp
push
cmp
sbb
repnz
sbb
insl
jo
push
stos
ss
xor
insb
xor
adc
scas
cmp
jmp
add
inc
bound
xlat
mov
int3
xor
dec
outsl
icebp
ljmp
jae
bound
push
adc
cmpsl
inc
gs
test
sbb
and
xor
jmp
dec
mov
add
mov
push
push
fs
add
cld
and
test
xor
jb
movb
add
call
scas
add
call
test
insb
repz
icebp
xchg
mov
sbb
adc
dec
outsl
sbb
sarl
add
outsl
sbb
shlb
push
mov
or
sbb
pop
or
sbb
je
imul
std
repnz
stc
xor
insb
add
xlat
mov
push
add
or
adc
add
lea
jmp
sub
jp
pop
xchg
test
rclb
andb
dec
cld
cmp
push
call
xor
push
sbb
shr
add
add
testb
stc
xor
mov
loop
push
add
xor
push
fcomip
adc
leave
jg
jne
mov
push
loopne
mov
add
push
inc
test
pop
adc
outsl
add
pusha
mov
pop
cli
fcompl
fcoms
inc
sbb
lret
inc
mov
rcrb
wbinvd
mov
add
jae
bound
mov
add
incb
out
cld
sbb
gs
pop
je
push
not
stc
fscale
cs
mov
pop
cli
pusha
dec
gs
pop
les
cmpsb
sbb
lret
xor
inc
xchg
rep
out
ljmp
mov
scas
inc
pusha
hlt
mov
and
jmp
out
data16
adc
push
jmp
repz
mov
sbb
add
lahf
xor
sti
mov
test
bound
gs
jo
mov
and
sbb
mov
repz
jo
mov
fs
fmuls
or
fldenv
push
lods
daa
add
mov
jl
mov
xor
or
or
sub
dec
mov
adc
jge
mov
mov
add
xorl
push
mov
rclb
add
mov
sbb
icebp
stos
out
mov
out
dec
sbb
out
add
dec
push
pusha
test
call
and
pusha
pushf
stc
test
gs
je
gs
bound
xor
push
jo
faddl
mov
sub
jns
jne
mov
add
iret
mov
scas
rolb
jp
push
cwtl
enter
mov
rorb
adcl
imul
lods
inc
incl
andl
jge
adc
hlt
stc
test
xor
add
adc
inc
addb
shrl
in
push
out
mov
inc
jmp
add
adc
jge
push
js
cmc
adc
jmp
dec
jle
or
daa
pusha
pop
mov
sbb
adc
jle
sub
xchg
adc
out
aas
jmp
shlb
cmp
dec
mov
push
movsl
shlb
pop
push
adc
sbb
iret
lret
scas
xchg
clc
mov
pop
add
stc
leave
std
pop
test
jmp
add
decb
jmp
out
lahf
fcmove
std
test
cld
fisttpll
sub
aad
xchg
xorl
pop
ds
mov
xor
jg
ror
lods
sarl
xchg
shl
stos
cmc
in
adc
pushf
imul
pop
outsl
lock
lods
pop
adc
push
testb
inc
mov
add
xchg
stos
and
pop
xor
xlat
mov
cmp
jecxz
lods
hlt
jle
aas
xchg
and
cs
pushf
lret
mov
test
jecxz
insl
and
add
roll
push
test
sbb
jmpw
mov
xor
push
xchg
xchg
inc
and
sub
test
sub
mov
xchg
add
div
push
cmp
outsb
stc
push
lret
push
push
movb
sub
dec
rclb
jl
loope
adcb
mov
fld1
xor
bound
test
mov
inc
add
call
lret
ret
sbb
or
jmp
ljmp
mov
add
xlat
push
ret
test
adc
dec
add
mov
add
add
or
mov
movsb
gs
inc
mov
call
mov
xchg
add
je
ret
xchg
or
imul
call
cmp
push
in
mov
add
xor
imul
mov
add
push
add
les
sbbb
jno
ret
add
sbb
mov
jmp
or
and
popf
loope
jmp
adc
inc
mov
cmp
enter
imul
or
sub
addr16
pushl
pop
cld
cld
ljmp
fimull
xchg
lret
mov
push
cli
leavew
popf
cmpsl
push
dec
add
push
leave
dec
mov
add
push
lahf
push
add
cmp
test
out
jmp
sbb
adc
out
lock
add
xor
dec
mov
call
push
in
pop
sbb
insb
xor
push
ja
mulps
mov
push
jns
pop
and
out
notl
rol
lods
fs
sbb
mov
int
icebp
jg
dec
add
add
adc
mov
iret
stc
sbb
stos
inc
jne
mov
popf
push
roll
add
icebp
sti
or
jmp
and
mov
or
test
test
inc
jns
push
call
in
add
xchg
lret
mov
push
les
cli
lcall
cmp
testb
test
shrb
pusha
hlt
test
out
mov
inc
mov
sbb
mov
pop
stc
sahf
insb
leave
scas
call
inc
jge
add
sub
arpl
repnz
repnz
add
sub
pop
cmp
lret
je
mov
adc
cmp
leave
add
sub
inc
inc
mov
aam
mov
outsb
mov
idiv
ljmp
movswl
lahf
es
insb
cmpsb
test
pop
test
mov
xchg
sbbl
cmp
inc
shrb
notb
pop
cmpsb
adc
sub
stos
gs
or
ljmp
jp
sahf
lahf
push
dec
add
lods
dec
pop
stc
ljmp
adc
sbb
jmp
cmp
and
int
dec
pop
aad
mov
push
cli
dec
fisubrl
aas
jmp
cmp
push
sub
fisttpll
lcall
inc
jmp
lret
xchg
add
jns
push
enterw
adc
jmp
mov
add
xor
outsb
sub
and
cmpsl
inc
test
add
push
mov
xor
lods
lds
xor
push
addr16
sbb
cmc
sbb
out
loopne
mov
and
stos
das
pop
inc
sbb
push
gs
mov
jo
cmpsl
add
add
push
and
out
sbb
loop
add
add
fs
icebp
lods
in
add
xor
add
mov
loope
cmpsl
add
add
call
inc
push
adc
push
cli
jmp
test
xchg
cmp
add
call
adcl
movsb
push
sti
cld
sbb
inc
jmp
sub
sti
mov
xchg
or
adc
insb
movsl
add
call
cmp
call
push
test
jmp
xor
mov
sub
lahf
pop
or
cmp
insb
and
ds
sti
pop
stos
popf
pop
jge
ret
xor
jle
sbb
cltd
shlb
inc
push
or
jbe
sub
dec
and
clc
push
sub
add
int3
sbb
notb
int3
add
inc
jns
add
mov
fmuls
idiv
cmp
insb
inc
xor
mov
sbb
mov
call
in
mov
std
pop
or
fistl
call
lret
stos
mov
scas
push
add
pusha
lods
stos
mov
push
idiv
xchg
xor
lock
jne
testl
dec
cli
insb
jb
cmp
imul
inc
pop
jnp
bound
lcall
ret
mov
outsb
std
jmp
jmp
andb
or
andl
xor
stc
add
or
add
and
pop
cmp
add
fsub
add
popf
lock
cmp
push
insl
ljmp
imul
jmp
adc
adc
pop
dec
insl
push
inc
hlt
insl
adc
subb
dec
popa
adc
mov
pop
mov
test
pusha
dec
int3
insb
out
jb
out
nop
jb
inc
call
add
scas
or
mov
mov
cli
je
mov
push
into
jecxz
or
xor
into
sbb
scas
inc
add
cmp
push
bound
stos
adc
aaa
or
jbe
pop
mov
test
dec
mov
adc
xor
arpl
lahf
xchg
mov
add
push
fimuls
test
ds
add
pushl
sub
and
xlat
add
dec
sbb
out
arpl
jmp
cmp
insb
mov
adc
add
outsb
dec
push
xchg
pop
test
comiss
ret
fcomip
std
mov
dec
sbb
jmp
inc
xchg
cmp
jl
call
dec
incl
add
mov
fbstp
inc
sbbb
jae
sub
stc
call
arpl
inc
push
cwtl
dec
and
cmc
and
xchg
sub
mov
xchg
pop
jle
cld
push
dec
jae
das
mov
fucomip
aas
jmp
inc
out
add
sti
sub
pop
sub
add
sbb
mov
sbb
xlat
or
mov
xchg
add
jmp
jns
iret
jmp
enter
inc
inc
movl
dec
adc
jmp
rorb
pop
scas
and
jbe
jmp
pavgw
adc
mov
addr16
push
mov
cmpsl
add
call
push
pop
mov
dec
add
call
add
add
insb
or
call
cwtl
or
aad
fdivl
addb
inc
mov
call
add
xor
and
add
popw
dec
mov
movsb
ret
addr16
call
add
mov
inc
add
xor
and
add
ret
add
xchg
int
add
fistl
jmp
add
fucomip
call
push
call
pop
sub
cmp
push
test
call
xor
add
jecxz
je
or
adc
mov
test
fs
adc
pop
mov
dec
cmp
cmc
fsubl
in
insl
idiv
push
add
or
imul
hlt
cwtl
pusha
data16
dec
and
fndisi(8087
xlat
xor
mov
imul
inc
es
lea
mov
adc
add
aas
dec
idiv
lea
push
mov
sti
mov
lods
pop
lods
test
push
cmp
mov
push
call
aas
icebp
sbb
adc
add
sbb
and
shll
insb
inc
sar
ja
les
xlat
push
pop
add
jge
adc
mov
pop
push
int3
dec
dec
stos
subb
add
jmp
scas
push
je
stc
ljmp
jl
xchg
je
adc
in
mov
outsl
scas
pop
add
ljmp
icebp
es
sbb
dec
add
push
jecxz
pop
test
jnp
push
cmc
inc
sbb
ret
fmull
sbb
test
jmp
test
jmp
mov
mov
popf
inc
stc
jl
lods
xchg
or
jmp
mov
iret
or
je
push
or
mov
mov
jbe
or
xor
mov
xor
inc
cwtl
cmp
outsl
mov
adc
add
sti
pop
push
aas
daa
test
stc
es
insl
sbb
out
jbe
iret
inc
loope
xor
sbb
addl
xor
jno,pt
pop
sub
mov
inc
mov
mov
pop
aam
addl
gs
add
push
lcallw
mov
push
movsb
scas
rcl
pop
shrb
add
imul
cmp
jns
push
mov
pop
call
xor
je
dec
xor
mov
xor
pop
into
sbb
mov
inc
inc
outsl
sub
out
repnz
fwait
out
out
dec
lds
pop
jle
lret
push
add
xrelease
add
add
adc
std
fidivs
test
stc
cmp
stc
mov
test
and
xor
jl
and
pop
mov
loop
bound
sar
pop
push
pop
mov
push
push
mov
and
push
add
push
lea
loop
scas
jae
jmp
addb
lea
sub
out
cmpl
add
add
pop
push
add
mov
sub
pop
inc
cmpb
incl
out
aas
jmp
and
xchg
or
push
bound
test
jecxz
xchg
pop
imulb
pop
mov
out
xchg
sbb
ljmp
loope
cmpsl
pop
decb
outsl
idiv
jmp
fsubrl
pop
xchg
fucomip
pop
decb
add
outsl
out
jmp
std
pop
jmp
lret
mov
add
push
and
jmp
sub
xor
inc
jmp
outsb
cmp
out
stos
mov
out
lods
sbb
orb
fildl
insl
out
int3
jl
jbe
dec
out
pop
insl
push
push
inc
mov
out
jmp
mov
or
ss
jg
add
jb
add
or
subb
jl
lods
xchg
subb
sub
fsubrl
or
mov
out
mov
sbb
mov
inc
cltd
lahf
sub
xor
gs
xchg
lods
shl
xchg
call
xor
push
add
in
push
shlb
test
sti
stos
cli
inc
into
insb
movsl
call
sub
or
or
insl
les
sbb
and
loop
aas
pop
cli
jb
sub
shrb
add
jne
pop
inc
data16
in
call
or
add
add
cmp
add
push
add
inc
add
jle
dec
push
shll
adc
mov
mov
cmc
mov
cmp
inc
push
mov
notb
pop
scas
int3
scas
jb
les
mov
mov
fimull
push
xor
add
xor
clc
std
mov
cld
dec
fdiv
adc
add
jmp
xor
sbb
ljmp
lock
sbb
movsl
fidivrl
je
cmpsb
adc
add
sub
fisubrl
icebp
je
mov
push
popa
cmp
pop
pop
pshufw
outsb
add
sub
dec
aas
cli
cmp
inc
jae
repnz
cli
xchg
adc
orb
std
decl
add
xchg
mov
push
cmpsb
pop
je
xchg
enter
aas
cli
lret
xor
inc
popf
sbb
inc
mov
addr16
inc
pusha
adc
popf
xor
xor
das
pop
divps
ret
pushf
mov
pushf
mov
sbb
mov
cmpsl
mov
mov
jbe
int3
daa
add
xor
sbb
cmp
gs
je
aam
add
inc
add
inc
mov
cmp
in
mov
sbb
jae
bound
das
xchg
or
jnp
and
add
mov
add
mov
add
stos
or
mov
sub
dec
push
shll
or
outsl
and
pusha
ja
add
outsb
outsl
and
xchg
cmc
xchg
int3
stos
je
loopne
clc
mov
add
sub
and
movsb
adc
sahf
in
cli
push
out
stos
je
imull
cli
aas
out
xor
divb
call
pop
jl
jae,pn
or
add
cmp
test
add
mov
or
adc
cmc
adc
dec
ds
movsl
stos
fs
cs
adc
add
adc
inc
add
leave
add
sub
ret
rorb
inc
test
movsl
stos
inc
add
inc
imulb
inc
gs
push
push
mov
push
xlat
stos
mov
jge
jg
mov
push
jbe
aad
pop
addl
add
nop
or
jmp
cmpsl
adc
xchg
leave
and
add
pop
xchg
inc
pop
and
cli
addr16
inc
jmp
mov
sub
out
push
ds
daa
cmpsb
std
adc
frstor
fs
icebp
out
pop
mov
jmp
mov
adc
ljmp
sbb
fimuls
mov
sub
cmp
pop
cmp
pop
shl
pop
fwait
es
dec
rcll
mov
in
add
lahf
loope
cli
divb
xlat
adc
nop
cmc
ret
add
push
sub
add
ret
adc
divb
sub
out
push
push
or
call
jp
inc
jo
int3
fidivl
shlb
in
icebp
repnz
xor
add
lret
imul
out
push
ss
dec
lea
enter
dec
add
es
loope
mov
je
ret
cmp
es
or
xor
add
push
adc
stc
jmp
push
push
stc
fidivs
jl
and
sti
jle
lods
sti
sub
loop
mov
push
clc
jmp
lret
xlat
or
call
xor
pop
pop
cmp
lock
out
mov
xor
add
jl
and
push
mov
roll
mov
mov
pop
add
call
sti
mov
loopne
mov
call
push
push
add
jae
push
and
mov
xor
incl
dec
or
add
add
mov
je
jg
sbb
inc
test
mov
int
mov
out
dec
xor
cmp
adc
xor
mov
xchg
incl
jb
or
cmp
xor
mov
and
iret
sti
aaa
stos
adc
mov
and
xor
xor
jmp
cli
mov
aas
test
push
sbb
mov
out
inc
cld
push
ss
add
cmpsl
jmp
jne
xchg
or
mov
push
and
test
sub
pop
sub
inc
inc
push
jo
int
sbb
push
sub
cltd
aaa
subl
add
mov
adc
or
je
in
sub
into
cli
daa
adc
xchg
push
test
xor
clc
std
out
movl
call
push
leave
test
dec
mov
lock
scas
out
lar
sub
pop
add
or
test
std
jae
cs
aam
out
out
lea
push
or
lret
and
add
lock
lahf
mov
sti
mov
or
add
add
add
test
cmc
sahf
mov
add
pop
and
int
rdtsc
xchg
adc
sarb
test
movsl
call
idiv
hlt
xor
inc
jmp
loope
std
scas
hlt
fs
add
mov
adc
mov
add
cmpsl
pusha
addr16
mov
inc
or
out
xor
add
add
or
outsb
data16
add
lds
sbb
sub
out
pop
stc
cld
xor
inc
jmp
stc
insb
and
iret
je
or
xor
data16
xchg
in
divb
notl
shll
add
adc
xlat
setge
cmc
inc
test
pop
inc
fcoms
shrb
mov
loop
push
in
push
mov
add
add
mov
cmp
mov
and
iret
push
mov
sbbl
loop
or
movaps
mov
insl
add
jmp
test
push
rclb
add
dec
jo
loopne
mov
jg
test
in
test
outsb
jmp
xor
add
xchg
xor
jae
xor
iret
lahf
in
je
pop
iret
xchg
dec
out
dec
xor
outsl
inc
mov
jo
and
sub
add
outsl
hlt
je
pop
mov
pusha
les
test
iret
out
int
roll
mov
pop
cmp
ds
addb
push
iret
mov
inc
sbb
add
push
xchg
pusha
mov
pop
outsl
rorb
fs
mov
mov
test
and
lea
pushf
test
enter
arpl
xor
lahf
stos
mov
xor
dec
rol
fdivrl
sub
jg
arpl
dec
jg
jge
mov
dec
pop
add
mov
clc
arpl
xor
cli
xor
pop
sldt
mov
mov
stos
in
push
bound
jl
xchg
daa
inc
jmp
imul
sti
xor
nop
push
test
push
mov
cmc
jmp
add
mov
inc
jmp
call
test
cmp
ljmp
push
xchg
das
stc
mov
xchg
cli
test
add
loope
test
pop
add
call
loopne
inc
mov
divb
inc
xor
shr
stc
imul
fldcw
sti
stc
call
scas
cmp
adc
sub
add
popf
sub
add
cmp
ret
pop
lods
inc
addl
or
add
inc
imull
adc
mov
add
sbb
inc
mov
call
dec
push
dec
mov
cld
mov
inc
negb
cmp
vmovhps
add
jl
loope
mov
shr
mov
test
pop
incl
fdiv
ljmp
mov
scas
cs
push
test
jmp
mov
roll
das
jb
push
sbb
add
std
jle
aam
das
repz
push
sbb
add
fwait
pop
inc
jmp
inc
or
sub
adc
repnz
add
dec
jle
sub
xchg
jnp
ret
xchg
cli
int3
xchg
inc
out
xor
add
repnz
push
stos
ret
add
in
jmp
sbb
mov
mov
sar
stos
xor
cmpsl
cs
out
add
addr16
lea
popa
mov
shll
pop
sbb
stos
push
inc
test
cmc
jl
push
shl
pushf
daa
shlb
icebp
mov
fwait
xor
mov
add
cmpsl
pushf
dec
test
xor
icebp
sbb
xor
nop
ret
fsubl
add
xor
jmp
and
jb
ret
adc
dec
data16
add
pop
stc
aam
and
gs
xlat
add
fsubr
push
in
xor
insb
sub
bound
sub
ret
jl
out
repnz
arpl
cld
je
inc
jmp
jmp
jmp
enter
xchg
stc
jmp
call
cmp
push
hlt
cli
cld
inc
es
jmp
add
pop
fs
lds
dec
push
xchg
stc
imul
dec
notb
or
leave
test
cmp
repnz
adc
adc
mov
xor
call
dec
xor
jmp
inc
imul
inc
loop
subl
addl
divb
inc
adc
inc
out
stc
mov
add
idiv
lcall
in
std
jae
jbe
fdivrs
loope
add
add
cmp
pop
pop
std
std
jle
or
add
sbb
push
or
adcl
sub
idivb
std
fcmovb
adc
mov
jns
call
inc
or
lds
xchg
mov
les
add
inc
bound
aad
loop
rcll
dec
lods
push
mov
xor
sahf
je
out
mov
popf
loop
adc
pusha
int
in
cwtl
cs
daa
sub
sbb
inc
push
inc
or
lahf
imul
sbb
xchg
pop
out
mov
je
push
aaa
insb
in
mov
push
add
sub
xor
sub
mov
mov
pop
and
je
sub
lahf
or
xlat
andl
fwait
and
or
imul
test
fimull
arpl
xchg
add
push
mov
mov
inc
ds
push
cltd
or
cmpsl
inc
dec
jno
sbb
xchg
sub
add
jg
xchg
jmp
insb
sub
cmp
sbb
cs
sti
andb
adc
mov
push
dec
in
and
stc
les
adc
push
out
pop
or
shl
add
sub
cld
mov
jns
out
add
push
dec
push
outsl
cmp
add
add
int3
jge
inc
xor
add
xor
push
dec
dec
mov
notb
push
js
lea
add
xor
add
into
testb
xchg
inc
xchg
outsb
jmp
test
push
fdivs
add
xor
push
or
inc
inc
insb
cmp
jne
push
fs
int
sub
add
mov
jno
negb
jp
mov
enter
jo
add
inc
push
xchg
mov
jmp
std
mov
jmp
fcomps
inc
jmp
add
push
inc
je
mov
dec
outsb
xchg
flds
add
sbb
xlat
repnz
dec
das
add
lret
ret
jbe
loopne
sbb
rcll
aam
push
add
mov
fdivr
mov
cmp
incl
adc
or
cli
push
out
fcmovnu
add
sub
js
xor
sub
add
mov
pop
sub
jmp
pop
push
aad
int3
out
adc
cmp
mov
sbb
xor
add
cmp
add
int
aaa
jl
adc
mov
dec
or
jg
xor
add
jecxz
jmp
imull
push
sbb
std
addr16
std
ds
out
lock
ljmp
fldenv
adc
adc
mov
cmp
mov
jle
sbb
or
es
sbb
fs
adc
mov
add
inc
cwtl
dec
test
or
test
jnp
push
bound
mov
jg
int
test
mov
shl
insb
cmp
sbb
aam
loop
xor
sahf
adc
shrb
lea
ret
sub
andl
push
push
insl
insl
clc
mov
scas
jbe
and
stc
pushl
add
xor
push
add
push
lds
pusha
push
inc
xor
pop
cli
std
mov
jecxz
lea
dec
lea
add
mov
aas
cmp
lods
xor
testb
mov
dec
repz
xor
push
push
adc
add
jmp
adc
fs
add
add
jmp
ja
xor
std
lcall
in
cmpb
std
call
test
std
lcall
fdivr
lcall
fscale
dec
jbe
dec
add
xlat
adc
test
xlat
std
gs
sub
adc
subl
std
mov
cmp
add
jmp
js
jae
std
incl
ljmp
jmp
ljmp
fildll
xor
add
jmp
out
cs
movsl
pushf
push
adc
int
mov
add
imul
lods
mov
ffreep
das
out
jb
aam
jge
pop
mov
inc
jmp
out
outsl
mov
std
add
mov
xchg
es
lods
stos
clc
arpl
call
loopne
repnz
sub
sub
das
add
call
xor
jmp
pop
jmp
add
int
jae
ret
mov
out
xor
jmp
sbb
mov
call
or
inc
mov
mov
stos
call
add
call
lods
xchg
mov
mov
jbe
rclb
fidivrs
mov
or
imul
loopne
push
pushf
dec
add
ljmp
add
xor
cmp
outsb
or
std
adcb
mov
cmp
outsb
or
sub
push
iret
movsl
xchg
data16
outsb
jae
add
mov
roll
les
adc
jns
adc
pop
mov
ret
adc
push
ret
xchg
push
add
ret
jge
cmc
dec
mov
push
notb
adc
je
mov
xchg
add
add
call
outsl
cltd
xchg
arpl
fsts
add
add
sbb
decl
out
inc
scas
sbb
push
stos
fsts
jmp
and
mov
sbb
or
stos
pushl
adc
cld
hlt
sbb
repnz
jmp
inc
jae
ret
outsb
xor
cli
int3
test
cli
ficoms
repz
jmp
out
fistps
out
sar
jmp
outsb
push
add
mov
xchg
lods
cmpsl
cwtl
loope
ret
mov
or
leave
xor
and
jl
ret
pop
in
sub
in
and
lock
jnp
and
xchg
mull
repz
jnp
mov
mov
insb
out
mov
or
sub
cmp
push
or
pop
adc
xchg
or
adc
add
or
push
int3
filds
and
mov
out
mov
mov
lret
jb
adc
jb
adc
aam
loop
lret
xor
fsubrl
xor
call
scas
lret
mov
je
or
lds
and
jne
rolb
insl
std
test
mov
scas
add
sub
in
jnp
inc
cmp
inc
and
jg
mov
mov
xor
jne
mov
or
cli
call
mov
faddl
xchg
xor
lret
xor
mov
insb
addl
add
jl
inc
mov
xor
add
sahf
shr
pushf
mulb
add
jne
cmc
loop
inc
scas
repz
xor
jae
std
mov
mov
lods
repz
jp
push
jae,pn
pop
and
xor
mov
inc
cmp
jmp
std
push
sbb
repz
stos
pop
add
mov
test
subl
out
push
dec
cli
sbb
mov
add
test
in
jge
idivl
popl
cmpsb
add
mov
std
jg
sub
sti
xor
mov
stos
push
repz
lea
test
jmp
std
out
push
dec
cli
push
loopne
repz
xor
mov
outsb
inc
xor
and
nop
sub
ret
testl
add
repnz
enter
mov
sbb
clc
cmp
add
sbb
insb
inc
call
fdivl
mov
orb
lock
inc
xorb
xor
xorl
mov
xor
add
sbb
lods
inc
cmpsl
add
aam
adc
jg
dec
cwtl
lock
cwtl
in
loope
pop
icebp
cmp
leave
add
fsubs
add
sbb
jae
stos
ss
arpl
adc
sub
sub
jg
pop
movsb
or
push
fidivs
and
jg
mov
out
push
out
xor
pushf
xor
mov
and
mov
in
insl
imul
daa
mov
jbe
roll
add
add
xor
out
pop
and
push
loope
dec
sbb
adc
push
fnstsw
add
jmp
sbb
pop
pop
outsl
loope
dec
ds
mov
hlt
stc
mov
fwait
mov
sbb
xor
adc
imul
rorb
mov
sub
add
imul
add
rorb
test
sbb
call
sub
leave
xchg
jae
xchg
push
scas
inc
inc
aaa
add
jmp
or
out
inc
subl
jb
jbe
sbb
out
mov
cli
cmp
ror
outsl
or
test
pop
lods
gs
jo
scas
cli
cmp
ror
outsl
mov
add
add
int
xchg
loop
add
mov
mov
xchg
es
shr
mov
add
scas
leave
jno
stos
leave
mov
lea
mov
out
pop
std
xor
inc
enter
jl
fildl
sub
fmuls
lods
jecxz
fsubp
add
cmpsb
daa
or
add
lock
pop
ret
jmp
mov
rcl
out
lds
and
inc
jge
out
daa
sbb
stos
shrb
shl
and
out
jae
mov
jl
inc
call
xor
mov
sub
add
pop
lock
sub
xchg
add
or
in
push
adc
in
mov
push
sub
aas
into
pop
in
orb
popa
add
inc
jae
xchg
pop
mov
jne
or
push
or
jge
xchg
aad
adc
ficoml
out
xor
push
fidivl
sbb
cmp
inc
jge
sub
popf
push
jb
pop
in
outsb
je
push
add
sub
add
jbe
cld
mov
dec
xchg
lods
or
das
loope
jne
cmp
int
adc
jns
movsl
lods
std
xor
push
push
testl
fidivrs
scas
sub
addl
sbb
push
lods
call
shrb
push
mov
mov
inc
lcall
add
add
xor
sub
sub
orb
inc
clc
mov
lds
enter
push
jo
test
out
push
mov
gs
std
cli
mov
mov
test
add
in
xchg
loop
dec
xlat
push
or
out
dec
test
out
add
sub
and
add
fcmove
cli
notb
ss
stos
cli
cmp
test
cmpsb
jmp
sbb
sbb
sti
fsubp
adc
pop
cld
mov
dec
dec
xor
inc
mov
pop
cmpsl
out
inc
and
filds
cltd
xorl
test
call
mov
pop
rolb
icebp
or
cmpsl
add
gs
call
mov
add
adc
aam
in
fildll
out
pop
movsl
sarb
push
xlat
enter
ja
loopne
jne
adcb
push
inc
addr16
mov
inc
aas
pop
dec
jno
mov
inc
xchg
sbb
add
imul
clc
xchg
adc
sbb
push
xlat
sarb
inc
shlb
pop
stos
add
in
xor
cmp
repnz
cwtl
pop
inc
jmp
and
outsb
add
test
cltd
jns
insl
add
out
cmpsl
cmp
cmp
add
or
cmp
cmp
pop
adc
lcall
and
xchg
push
cmpsl
fsqrt
add
or
pop
mov
movsb
add
add
or
push
sbb
xor
sarb
sub
inc
das
pushl
rcrl
shrb
rcrl
outsl
add
subl
or
notb
inc
idivb
ret
dec
cwtl
rcll
test
idiv
push
insl
je
pusha
je
addb
add
add
iret
cwtl
cmovo
jne
dec
pop
or
or
xor
cmp
push
hlt
mov
scas
test
adc
push
fscale
jae
cmp
je
pop
sub
daa
divb
push
cld
push
sub
pusha
std
in
xchg
lods
cli
push
adc
jecxz
sar
idivb
cmp
add
add
or
inc
adc
fidivs
ljmp
int
add
mov
add
lods
lret
mov
sbbb
lods
int
call
adc
outsl
rclw
and
icebp
xchg
lods
dec
out
jmp
mov
xorl
pop
rcl
dec
adcb
cltd
movsl
mov
add
pop
adc
add
stos
daa
cwtl
loopne
pushf
bswap
xchg
inc
adc
mov
movsb
pinsrw
mov
call
pop
and
or
clc
xor
jge
into
hlt
clc
fcmovnu
cmp
push
bound
lods
adc
ss
leave
rcr
stc
fs
je
insb
push
or
int
pop
xlat
sub
insl
negb
stc
adc
movsl
inc
int
add
data16
mov
repnz
jnp
add
jmp
sub
retw
in
insl
push
adc
push
sub
stc
pop
adc
and
int3
dec
or
arpl
lods
les
push
movsb
adc
pop
scas
leave
add
addr16
call
loop
jne
inc
je
test
notb
lea
rolb
cmp
or
dec
mov
xor
aas
lea
inc
inc
xchg
notb
jge
adc
popf
add
ret
call
andl
dec
xchg
aas
dec
push
cmp
xor
sub
add
xor
mov
xor
sub
dec
insl
insl
push
inc
xchg
cmc
call
movsb
dec
inc
jae
add
stos
repz
jl
fwait
pop
cli
addb
cmp
cwtl
push
mov
cwtl
add
jbe
out
faddl
dec
fwait
jbe
outsb
mov
repz
adc
xlat
mov
or
sbb
and
or
adc
jl
add
cli
in
dec
mov
cli
fcompl
pop
add
xor
leave
mov
xlat
dec
ret
xor
jl
sub
call
sub
loope
and
call
ljmp
orb
aam
add
jecxz
xor
insb
inc
loope
sub
mov
test
cmpsl
out
filds
xchg
cmpsl
xchg
mov
insl
out
mov
cmpsl
nop
lcall
jmp
jmp
and
add
fs
jecxz
ljmp
add
dec
psllw
leave
in
sbbb
int
cmp
mov
sarl
in
imul
inc
mov
jbe
sub
mov
std
imul
cmpb
bound
push
push
xchg
add
je
mov
daa
inc
fnstcw
xchg
sbb
stos
aad
sub
cmp
das
add
pop
pop
push
sbb
cmp
cmp
stc
sub
mov
aas
lods
rclb
or
out
enter
add
call
xchg
cwtl
popa
xchg
mov
cmp
pop
in
sub
xchg
cli
mov
idiv
std
mov
sbb
add
add
add
inc
aad
inc
out
addb
cmp
and
popf
mov
dec
call
sub
and
xor
dec
inc
sub
insl
jo
mov
inc
je
xchg
je
clc
aam
jmp
fs
daa
adc
cmovo
push
push
push
jmp
stos
push
jb
cmpsb
call
int3
in
adc
fidivrl
push
and
add
mov
xchg
sbb
in
push
rclb
subl
or
repz
xor
sbb
add
or
adc
xchg
push
mov
out
push
ret
mov
bound
mov
lds
in
adc
sarb
push
and
ja
push
add
or
and
dec
js
cmp
add
cmpl
pop
xchg
inc
inc
stos
adc
cmovne
adc
cmp
out
adc
cwtl
cltd
jl
fwait
out
popa
aaa
mov
and
insb
inc
xlat
add
icebp
add
daa
add
aad
add
aas
imul
pop
out
mov
mov
add
add
and
enter
add
mov
add
xor
call
call
mov
in
dec
and
pop
inc
or
stos
adc
inc
dec
push
add
adc
pop
adc
mov
mov
cmp
xor
adc
scas
shrl
add
jbe
push
loopne
jns
js
dec
in
orl
jb
adc
jo
adc
pusha
add
mov
sbb
test
adc
push
jle
scas
loopne
cmp
add
dec
xlat
sbb
push
mov
in
or
stc
pop
adc
jne
xchg
push
cltd
add
xor
mov
stc
call
popa
add
in
and
mov
iret
sub
dec
add
dec
dec
and
cs
imul
add
ss
push
fadds
xchg
mov
mov
dec
cltd
add
xorb
cmp
mov
or
aas
daa
inc
xor
das
fprem1
sub
adc
cli
incl
inc
ljmp
pop
push
adc
inc
mov
lock
sarb
fwait
push
mov
bound
jmp
jg
repz
add
jl
rcrl
cli
mov
js
stc
lods
aas
cmp
out
pop
cli
adc
or
dec
mov
adc
fisubrl
pop
test
jbe
or
ret
adc
mov
cmp
xlat
add
cli
pusha
bnd
mov
jmp
fadds
xchg
test
add
add
shrl
pop
mov
in
mov
in
jb
jbe
xor
jo
lock
fcoml
call
in
les
hlt
pop
sti
jo
jle
inc
aad
mov
test
cmp
cmpsb
sbb
call
inc
fdivl
sbb
repz
add
jo
add
imul
jmp
fnsave
call
scas
or
xchg
scas
push
sub
dec
ret
out
jmp
arpl
add
cs
cmpsl
lret
push
dec
lcall
push
bound
xorl
add
in
cmp
adc
in
and
sti
test
push
xchg
call
jae
add
add
mov
out
rorb
sub
sbb
insb
out
xchg
test
inc
outsb
push
pop
jnp
add
jl
les
jb
xor
je
jge
lea
or
test
push
jge
sbb
mov
es
cmp
sub
je
inc
mov
sbb
mov
sbb
leave
pop
sldt
xchg
int
sbb
mov
repnz
je
inc
aas
adc
push
cli
cmp
daa
add
push
mov
mov
imul
out
aas
jmp
ja
mov
and
jle
sti
icebp
pushl
push
mov
sti
mov
jno
xlat
and
hlt
jmp
or
add
movsbl
mov
add
pop
adc
test
add
pop
out
dec
out
push
mov
popf
sbb
aas
jmp
ja
and
sub
jecxz
cmpb
push
mov
or
push
loopne
xor
lds
cmp
sub
cmp
cmp
cwtl
jae
xchg
add
enter
mov
or
scas
or
addl
cmp
lods
icebp
cmp
fbstp
aaa
add
xor
or
mov
add
or
cmp
push
sub
mov
xchg
ffreep
pop
adc
enter
enter
enter
pop
adc
xchg
adc
leave
imul
add
out
jne
aas
pop
cmp
icebp
mov
jge
jmp
lret
gs
xor
jmp
stc
lods
mov
sub
dec
xor
jmp
les
dec
addl
orl
jmp
fdivrl
pop
lods
cmp
xor
pop
push
aaa
sub
push
loop
jne
mov
add
pop
insl
and
sub
divl
clc
inc
and
sub
inc
add
icebp
je
mov
das
add
imull
stc
call
inc
stc
sbb
inc
shlb
rorb
cltd
jne
sub
mov
setle
jecxz
jns
and
mov
call
add
sbb
mov
std
or
add
add
mov
jmp
xor
fidivl
jae
ljmp
je
sbb
push
scas
sbb
jmp
pop
mov
adc
sbb
jmp
lcall
pause
inc
das
pop
dec
stc
fisttps
cld
jmp
dec
push
jmp
mov
insl
xor
dec
out
inc
push
mov
repz
or
add
shrb
fsubr
xlat
std
cld
scas
xlat
mov
jge
pushw
stos
lcall
mov
xor
ret
xchg
jmp
push
js
add
pop
js
add
js
add
js
add
js
add
jbe
mov
add
cmp
repz
add
fstpt
push
cmp
iret
cmp
aas
enter
pushf
xor
push
enter
sub
ret
stos
out
cmp
ret
fsubr
in
out
mov
mov
xchg
cmp
push
sahf
xor
add
mov
daa
mull
and
pop
inc
push
jecxz
cmpsl
add
pop
add
sub
test
insl
mov
pop
mov
lods
adc
imull
test
dec
xchg
add
adc
add
fdivl
andb
jno
ss
scas
add
xor
mov
xor
mov
cmp
mov
out
into
sbb
scas
rclb
cld
insb
and
jae
je
and
outsb
icebp
adc
or
ret
jno
subl
sbb
add
dec
or
add
data16
ret
pusha
ss
popf
lods
pop
add
filds
add
rolb
mov
adc
out
popa
cmp
sub
add
push
push
bound
mov
add
insl
push
push
paddq
notl
sub
sub
pop
dec
push
aad
inc
add
add
shrl
cmpsb
add
or
cmp
xor
cmpsb
xlat
std
clc
mov
int3
xor
sub
std
das
jmp
dec
push
xchg
les
sub
xchg
jb
xor
fmuls
add
xlat
cs
and
or
xlat
std
call
push
addb
xlat
lea
jmp
std
xadd
dec
mov
xlat
jg
loop
out
add
adc
pop
adc
dec
dec
and
sub
adc
ficoml
add
stos
xlat
andl
pop
ljmp
nopl
iret
dec
sti
fnstenv
stos
mov
sti
stos
sub
pop
or
add
test
cmpsl
imul
out
sbb
pop
sbb
cmpsl
add
pusha
pop
pop
inc
mov
pop
add
insw
add
outsb
inc
or
rorl
pop
test
dec
mov
jo
xor
lret
jo
out
hlt
aas
xchg
je
mov
mov
jmp
test
jmp
jo
and
pop
pop
les
in
into
outsb
testb
jno
arpl
shrl
dec
int3
jmp
xor
inc
jmp
add
scas
aad
fldcw
ds
push
jb
push
inc
sub
icebp
xchg
imul
stc
hlt
enter
insl
jb
push
sub
cs
mov
in
pop
mov
mov
jae
ficoml
insl
xchg
mov
cmp
ret
jnp
test
les
adc
jmp
mov
mov
sbb
sbb
mov
add
add
inc
pop
jae
or
sti
out
dec
mov
add
push
pop
stc
repnz
ret
inc
mov
inc
push
out
xor
pop
adc
idivb
sbb
add
je
inc
push
mov
add
xchg
add
sub
xor
fwait
add
jae
xor
xor
add
jmp
xor
add
push
xor
inc
jmp
xor
adc
in
inc
cmp
ja
inc
push
enter
test
adc
fdivrs
repnz
outsl
xor
xor
mov
cmp
sub
mov
fcmovnb
std
push
sub
xor
aad
jo
jbe
and
push
aas
adc
adc
add
jne
cs
and
or
test
inc
jmp
pop
add
xor
mov
sub
icebp
mov
outsb
xor
outsb
push
mov
jno
cmpsl
stos
add
push
jne
jmp
mov
push
jne
xor
sbb
jno
mov
out
fisubl
sbb
mov
clc
enter
push
mov
add
scas
xor
stos
aas
stos
add
icebp
mov
mov
roll
out
fcomps
testb
jecxz
mov
js
adc
xor
shrb
inc
sbb
enter
mov
add
mov
rcll
push
push
enter
inc
add
fnsave
aas
pop
pop
test
or
mov
pop
xlat
add
sub
test
jg
test
outsl
push
and
jo
mov
mov
mov
dec
movlps
pusha
push
cmp
add
call
cmpsb
adc
cmpsb
test
mov
ljmp
adc
decl
das
sbbl
jno
adc
add
shrl
jno
sbb
cs
lcall
jge,pn
xchg
xorl
lret
je
or
add
pop
mov
adc
enter
inc
mov
and
fldt
add
insb
xor
and
jae
jb
movsl
ds
shrb
or
jg
and
or
xchg
enter
jmp
decb
inc
cmp
div
jno
push
andl
xchg
xchg
dec
sub
add
repnz
repnz
mov
adc
fiaddl
insl
inc
jmp
aad
xchg
jnp
mov
xor
push
jo
or
mov
fimull
hlt
fcomi
adc
fdivrs
or
inc
add
add
out
in
jo
cmp
xor
add
sub
out
jmp
mov
xlat
mov
movsl
lcall
mov
pusha
daa
mov
and
cmp
loop
mov
pop
push
inc
jmp
fdiv
clc
inc
jmp
sbb
mov
mov
pusha
daa
fildl
add
jo
add
xor
in
in
aaa
add
xor
orl
add
or
pusha
mov
mov
add
sub
insb
and
xor
jo
call
stos
xor
jmp
xor
out
shlb
jmp
xor
mov
pop
mov
lods
cmp
push
add
enter
arpl
test
nop
jb
inc
xchg
lods
dec
add
add
sbb
xlat
mov
es
and
mov
jae
mov
dec
lcall
stc
incl
xchg
inc
xor
pop
mov
add
aas
dec
or
fmuls
dec
cmp
push
add
inc
ret
addl
iret
mov
or
xor
mov
or
mov
or
mov
add
jle
adc
arpl
lret
cmpl
add
mov
mov
and
mov
dec
paddsb
lds
and
pusha
push
push
mov
add
test
sub
jge
lds
add
jo
sub
icebp
or
inc
push
and
inc
sub
jecxz
dec
pusha
add
sbb
in
sub
jmp
jp
pop
in
ret
sbb
add
bound
or
inc
push
and
xor
sti
jne
int3
jo
and
xor
daa
iret
or
jnp
test
add
cmp
mov
and
push
cmpsl
add
or
mov
jmp
xor
pop
adc
mov
test
ss
mov
push
jne
xor
jl
or
pop
in
push
adc
push
dec
pop
dec
nopl
pop
stc
outsl
cmp
and
cmp
das
lahf
jg
add
add
outsb
dec
pop
or
add
in
sub
add
popa
add
inc
xor
jmp
jmp
cmpsl
inc
int
popa
test
xchg
push
and
insl
icebp
jae
cmp
nop
sti
test
test
scas
cmp
std
mov
xor
scas
xor
mov
scas
aad
repnz
lds
outsl
push
and
popa
sbb
xor
and
add
add
xchg
mov
stos
cmp
pusha
pop
and
add
cltd
cmp
add
inc
imul
ret
pop
test
mov
push
leave
mov
inc
add
call
inc
and
je,pn
mov
ret
testl
or
dec
push
add
mov
dec
mov
je
out
xor
xor
inc
or
push
rcrl
adc
or
pop
add
jne
pop
dec
push
jae
dec
xor
cmc
sub
xchg
ret
xchg
xchg
inc
dec
and
dec
les
dec
dec
and
mov
mov
in
pop
mov
jl
pop
sarb
es
xor
mov
add
add
dec
mov
pop
push
or
pop
sub
lods
cli
mov
daa
bound
cmp
push
bound
jno
pusha
js
jb
xchg
ljmp
pop
mov
or
cmp
out
aad
ds
gs
mov
leave
jp
or
int
adcl
out
andb
ret
sbb
add
add
enter
mov
aas
movups
bound
out
movsl
push
mov
ja
sbb
ljmp
pop
aaa
in
cltd
and
insb
aaa
jg
or
fistpl
mov
pop
into
lock
fprem1
std
cmpsb
jl
or
push
imul
xor
mov
or
inc
mov
test
in
xor
dec
or
add
pop
jb
add
call
stos
test
int3
dec
test
nop
scas
cli
es
test
sbb
inc
inc
shl
scas
insb
lods
call
andl
add
mulb
mov
lea
faddl
jge
pusha
andl
inc
pushf
sti
test
in
add
out
pushl
pop
xor
push
add
dec
cs
push
add
movsb
add
jmp
or
add
pop
push
or
or
push
pop
sub
mov
movsb
mov
je
mov
add
daa
add
aam
in
rcrl
jmp
jb
or
jmp
adc
loop
sub
and
xchg
xchg
pop
jbe
add
das
inc
and
cs
lcall
mov
stos
scas
clc
adcl
jp
pcmpeqb
jmp
xchg
jo
jno
and
out
xlat
jo
sub
lea
jge
xchg
jp
rolb
stc
pushl
sbb
idivl
sbb
fidivrs
inc
and
sbb
or
pop
jo
add
mov
enter
and
xor
fadd
jmp
std
test
xchg
jp
cmp
iret
fwait
out
decl
std
aas
jg
jp
fucomi
add
sbb
outsb
icebp
ljmp
push
sub
or
divl
push
push
data16
bndldx
mov
jle
cwtl
pop
jmp
add
mov
icebp
mov
mov
inc
insb
sub
pop
inc
insb
std
mov
dec
mov
jecxz
cmpsb
push
pop
outsl
pop
inc
lcall
mov
cmpsb
mull
in
cmp
adc
cwtl
inc
pop
inc
adc
fiaddl
jbe
inc
cld
mov
add
call
outsb
in
pop
das
and
fsubrl
sub
mov
test
add
jno
sub
mov
fldcw
xor
sub
add
rcll
pop
and
sub
add
and
add
xor
cmp
inc
cmp
out
inc
cmp
push
sbb
decb
and
push
into
repz
je
add
mov
add
sti
adcb
push
mov
pop
jns
shrb
add
pop
cwtl
idivl
push
addl
and
imul
cli
xchg
scas
idiv
mov
sbb
add
add
xchg
das
add
xchg
daa
adc
add
bnd
cmpsb
test
jo
add
add
sub
pop
mov
add
add
imul
jne
add
cli
xorb
mov
add
loope
iret
xchg
jbe
adc
out
hlt
adc
lcall
xor
jo
inc
jmp
cmp
sbb
loope
out
push
inc
push
test
cwtl
std
jmp
insl
cli
movsb
adc
jmp
pop
cli
mov
dec
test
cld
adc
sub
insb
in
jb
pop
aas
clc
push
xchg
sub
std
mov
aad
repnz
int3
or
test
aaa
stos
shl
and
fildl
cwtl
mov
jp
inc
data16
stos
jo
and
mov
aam
stos
inc
iret
xchg
inc
jmp
sub
aas
mov
add
jno
lock
mov
repz
push
andl
testl
pop
aam
repnz
clc
and
sub
and
imull
insb
out
outsl
rep
outsl
out
iret
jo
mov
stos
xor
or
inc
xor
in
xchg
xor
fnstsw
negl
xorb
pop
cmpsl
push
call
mov
cmp
add
add
mov
stos
shrl
in
sbb
xor
add
call
mov
add
imul
repnz
rep
cltd
and
mov
stos
test
in
jae
ret
dec
out
xor
bound
jge
cmp
add
icebp
decl
mov
mov
cmp
sbb
adc
por
mov
pop
repz
cmp
je
add
imul
divl
out
inc
cmpsl
insl
push
push
cmp
enter
repnz
jecxz
mov
xchg
pop
add
mov
dec
mov
adc
testl
add
imul
or
inc
stc
in
xchg
lods
aas
fistps
add
incb
in
add
in
repz
rol
or
sbb
add
inc
add
inc
add
inc
add
cmpsl
inc
add
xchg
into
jg
add
xchg
dec
jg
add
lahf
inc
add
lahf
inc
add
add
lahf
inc
add
and
call
mov
xrelease
xchg
popf
std
pop
pop
out
mov
loop
mul
and
testl
out
push
adc
into
xchg
outsb
dec
jecxz
movsb
xchg
call
sub
xor
insl
int
sbb
dec
xor
add
inc
xor
mov
dec
iret
inc
es
fistpl
inc
sub
mov
add
pushl
inc
jmp
outsl
sub
add
dec
adc
lods
aad
push
mov
xchg
push
lea
cmpsl
subl
aaa
test
out
test
adc
out
or
stc
mov
mov
call
outsb
jb
and
add
xchg
dec
pop
jbe
enter
call
jae
lods
aad
hlt
test
or
call
stos
stc
cld
pushf
test
or
cmp
stc
aaa
pop
mov
call
add
jbe
pop
dec
outsb
adc
xchg
sub
out
push
idiv
adc
in
sti
or
add
mov
not
mov
xchg
test
divl
mov
or
ja
les
imul
rcrb
jns
push
pop
ljmp
add
mov
push
adc
lea
xchg
push
push
pop
cmp
mov
adc
inc
jo
cmp
repz
call
sbb
jge
jmp
add
out
ret
insb
stc
add
incb
mov
call
clc
inc
loopne
aas
xor
pop
std
pop
pusha
dec
aas
sub
mov
push
bound
test
jp
pop
fstps
test
adc
pop
jbe,pn
call
in
xchg
std
dec
popf
std
or
add
jae
push
popl
dec
xor
xchg
out
aas
add
jmp
les
xor
inc
jmp
sub
and
and
sbb
insb
dec
addr16
cwtl
ss
push
outsb
aad
cmp
repnz
mov
fdivs
daa
pop
fnstenv
imul
lock
sub
adc
xchg
push
xchg
test
aaa
adc
cli
sub
fs
sub
stos
clc
add
aam
daa
add
jo
and
xor
xor
and
inc
jmp
add
sbb
inc
jmp
test
inc
ss
sbb
push
test
es
sub
lods
in
cwtl
pop
hlt
mov
cmpsl
sub
stc
test
subl
lods
xchg
jmp
cmp
dec
lcall
das
cmpsl
adc
jmp
insb
daa
sbb
push
sub
and
inc
cmp
test
mov
xor
pop
lcall
ljmp
jae
bound
and
pushf
or
mov
je
jge
jg
adc
mov
je
stos
add
je
push
adc
movsb
cmp
mov
add
cmp
and
imul
jecxz
ret
cmp
xor
xor
rolb
sbb
push
lcall
mov
push
leave
inc
addr16
mov
cld
rorb
test
xor
cmp
dec
je
and
xor
sub
out
aas
jmp
mov
cld
cmp
stc
mov
cmp
movl
add
jle
shlb
xor
sub
arpl
xor
cld
inc
and
mov
repz
jmp
rorl
and
cmpsl
mov
pushl
and
fwait
or
mov
iret
xor
pop
xor
mov
sub
push
inc
mov
jmp
xor
sbb
xor
add
xor
popa
shlb
sti
cmc
push
inc
pop
inc
movl
push
or
mov
push
movl
bound
sub
dec
xor
ret
mov
stc
and
jmp
outsb
call
jo
repnz
mov
add
lahf
push
pushf
rolb
add
sahf
decl
mov
out
rol
add
xchg
jge
fdivs
jae
insl
add
xchg
sbb
sbb
ret
mov
orl
sub
push
cld
dec
mov
call
dec
stc
ds
adc
fsubs
test
add
pop
add
add
fstl
adc
rcl
inc
jmp
pop
mov
add
je
add
call
sbb
add
xor
push
das
jmp
jl
mov
shl
jp
mov
xor
inc
sbb
and
icebp
and
mov
or
inc
cmp
push
psllw
sub
lods
inc
and
add
popa
push
idiv
popf
mov
aas
xor
add
mov
add
dec
push
lahf
lock
or
xor
add
dec
push
push
inc
adc
add
in
movsb
push
adc
mov
push
test
je
xchg
fcmovnu
je
xor
shlb
and
push
popf
clc
pop
jbe
clc
add
mov
ja
add
outsl
test
pop
dec
jmp
jge
std
jae
pop
dec
add
jl
push
stos
mov
cmc
cmp
pop
fxch
std
fldt
pop
adc
ret
les
popf
das
mov
xor
push
jecxz
aaa
push
fwait
hlt
repz
lock
stos
and
inc
repnz
or
pop
inc
movl
pop
call
jmp
je
lahf
fwait
jp
cmp
jb
inc
inc
daa
add
mov
sbbb
inc
jmp
fs
lcall
mov
lcall
out
stos
insb
je
lcall
outsl
jno
decl
ret
lds
and
incb
add
outsl
lea
call
xchg
stc
mov
lock
mov
test
call
pushf
stc
sahf
clc
movsl
sbbl
stc
cmp
mov
stc
jbe
decb
mov
xor
cmpb
push
xchg
or
xor
jmp
sbb
stc
adc
add
mov
push
popa
in
arpl
mov
cmp
push
pop
test
mov
std
adc
mov
nop
cli
adc
xor
push
mov
mov
adc
idivl
add
test
repnz
movsl
shrb
adc
fidivrl
cli
add
lock
push
notl
push
add
xchg
add
jo
xor
pop
pop
mov
pop
bound
cmpsl
pop
nop
cli
add
jg
jmp
dec
mov
sbb
std
out
xchg
aam
adc
idivl
outsb
sbb
in
or
cs
inc
lds
mov
jmp
decl
into
push
cmpb
mov
add
lods
mov
mov
out
mov
lcall
std
stc
test
in
jl
aam
cs
orb
add
jmp
std
dec
sbb
inc
jecxz
inc
cld
fdiv
mov
shr
mov
ret
xor
add
movsl
test
mov
xchg
imul
ljmp
sbb
fs
pop
mov
xchg
imul
out
insl
push
out
bound
add
add
popf
push
std
pop
adc
add
xor
push
cmc
add
xor
in
fsubl
jno
sub
xchg
cld
mov
stos
sbb
inc
xchg
pop
ret
xchg
in
or
subb
orl
jmp
xorl
xor
jmp
sbb
aas
mov
popf
xchg
fdivr
push
and
add
and
and
stos
in
push
call
adc
in
call
sub
fcoms
cli
mov
adc
call
addl
call
icebp
sarl
xlat
add
jle
stc
jle
mov
call
lcall
mov
sahf
test
repnz
add
add
pop
idiv
roll
add
je
lahf
out
psubsb
xchg
idiv
mov
std
add
push
cmpsb
idiv
addl
rol
xor
mov
sbb
xor
xor
dec
push
dec
push
idiv
pop
ljmp
mov
addb
cmp
call
test
inc
push
adc
add
repz
dec
xor
dec
call
stos
sarb
xor
mov
out
push
int3
adc
and
inc
inc
and
cwtl
push
mov
insl
icebp
stc
and
les
jbe
mov
sahf
mov
adc
lea
push
mov
mov
jmp
in
jb
sbb
push
push
divb
xor
loope
push
pusha
gs
add
ret
or
cld
ljmp
push
clc
mov
push
and
or
je
push
mov
test
add
jmp
out
pop
dec
dec
scas
dec
testl
push
cmpsl
mov
inc
js
rolb
daa
push
cmpsl
lcall
xor
xor
lret
mov
push
and
ret
jg
arpl
add
cmp
push
iret
cmp
cmp
mov
sbb
jb
rclb
dec
iret
ret
jge
dec
repz
stos
mov
add
mov
add
out
jl
movsl
add
jmp
inc
in
cs
inc
lcall
dec
adc
mov
dec
and
mov
out
add
sbb
out
inc
mov
add
xchg
cltd
pop
jb
notl
idivb
std
imul
testl
jno
call
jb
lods
repnz
xor
call
xlat
stos
je
mov
xchg
test
call
dec
call
pop
sub
and
clc
dec
push
push
fdiv
or
jmp
incl
add
movl
and
jne
mov
push
test
test
loope
outsb
arpl
lea
adc
pop
pop
dec
push
push
call
jle
pop
test
push
and
ljmp
test
jmp
adc
jmp
mov
or
fucomp
test
jle
test
add
cltd
std
jmp
sub
orl
cli
test
int3
cmpl
pushl
push
sbb
xor
out
leave
popa
inc
fmull
test
and
mov
mov
stc
pop
fisubs
adc
mov
lret
mov
je
sbb
and
xor
clc
xchg
push
sub
in
adc
add
push
outsl
pusha
scas
aad
jg
int3
test
lret
mov
icebp
jle
aad
nop
mov
cltd
mov
insl
out
je
jns
mov
lret
in
pushf
pop
or
xor
sti
xor
mov
mov
mov
dec
xor
out
addps
int3
outsb
js
repz
adc
add
mov
cld
push
mov
jnp
rcrl
imul
mov
add
mov
jge
push
fildl
mov
std
gs
jl
stc
aas
cltd
jo
mov
test
call
cmp
mov
push
call
fs
push
and
add
push
decb
mov
aam
imul
push
xor
jmp
pushf
lock
das
mov
shr
pusha
add
call
push
adc
push
pop
jb
mov
xchg
shlb
add
lcall
push
clc
loope
into
jp
mov
clts
sbb
xchg
mov
je
inc
dec
push
or
idiv
jno
test
xor
add
clc
pop
add
test
jne
inc
bound
call
test
bound
test
jp
dec
and
ficompl
repnz
std
or
mov
xor
add
add
and
roll
jmp
sub
push
add
rcl
sub
mov
lods
mov
cltd
std
pushl
and
cltd
std
shr
ds
push
mov
and
int
stc
je
mul
pop
cmp
stc
jo
fcompl
ljmp
xor
repz
push
mov
mov
pop
sub
sub
adc
mov
xchg
cs
add
mov
adc
jae
xor
stos
mov
add
shl
push
adc
sarb
jo
out
cwtl
mov
mov
pop
shrl
xor
outsb
xor
loope
dec
out
cmp
cmp
orb
xchg
xor
fistps
call
bound
mov
fstpt
push
enter
les
in
xlat
mov
fildl
add
mov
xor
cmc
xor
add
fs
ret
ja
mov
push
idiv
popa
lods
mov
aad
or
out
jns
cmp
call
jb
mov
scas
lods
mov
sbb
adc
or
xchg
sti
jle
mov
bound
add
xchg
jae
in
sub
mov
push
and
adc
jb
pop
aad
jl
stc
imul
and
mov
adc
lock
lcall
pop
fidivl
cmc
push
push
inc
hlt
dec
fucomp
and
jb
pop
adc
mov
add
add
std
inc
or
jns
notl
pop
push
push
add
jl
add
sbb
icebp
mov
notl
mov
sub
clc
std
aad
push
push
cmp
popf
inc
inc
or
mov
andb
xchg
sub
test
stos
and
inc
or
je
inc
test
add
mov
cmp
stc
outsl
push
dec
sbb
test
sti
fmull
aam
ret
mov
sar
adc
call
adc
jbe
adc
mov
jmp
sub
add
stc
mov
pop
int
sbbl
cli
gs
std
gs
enter
mov
push
mov
stc
xor
nop
push
cltd
push
sub
outsl
jbe
xor
ja
dec
iret
xor
add
out
out
jae
iret
push
xchg
js
inc
and
push
ret
data16
sub
data16
divl
mov
inc
imul
aas
sub
arpl
lock
scas
xor
ja
dec
fbstp
sbb
sub
insb
or
jmp
xor
add
mov
inc
jmp
pop
js
sub
push
add
lods
call
sub
cld
xor
inc
jmp
cld
adc
push
scas
cmp
mov
daa
and
sub
cmp
jmp
jmp
stos
xor
out
rolb
arpl
out
xchg
test
ljmp
out
add
cltd
je
add
test
test
gs
and
ret
cmc
inc
push
push
jb
push
mov
sub
aaa
adc
insl
bound
mov
out
inc
mov
call
cltd
call
xchg
les
jb
mov
adc
ret
push
js
mov
mov
nop
ret
xor
lea
rorl
add
ret
or
out
and
sti
pop
push
or
and
sub
dec
mov
pop
mov
stc
inc
je
scas
call
shrb
add
mov
push
inc
xor
jmp
mov
gs
jge
ljmp
sub
xor
lea
inc
and
test
jno
add
or
ret
loope
cltd
enter
cmpsl
jae
add
add
cmp
adc
testl
push
rcll
mov
add
mull
aaa
mov
jmp
xor
pusha
jg
mov
jb
std
jmp
inc
lock
xchg
adc
and
push
xor
pop
cmp
gs
add
xchg
push
add
outsb
aad
mov
test
pop
insb
cmc
lret
mov
lods
jl
adc
mov
mov
add
in
jmp
mov
mov
pop
out
adc
mov
sbb
inc
je
xor
pop
inc
sti
std
xor
into
sub
adc
push
cmp
test
aaa
xor
xor
rcr
insl
or
add
add
sub
call
push
push
cmp
outsl
out
pcmpgtb
incl
jo
dec
and
add
and
lds
jmp
dec
adc
movsb
dec
sbb
lods
dec
sub
cwtl
stos
pop
adc
adc
ja
jo
les
test
imul
mov
loope
dec
sahf
scas
add
push
lods
rcrb
jl
fsubrs
mov
ret
add
xchg
jmp
mov
and
mov
and
xlat
adc
lea
mov
js
push
jmp
sbb
sbb
idiv
adc
subl
aam
adc
roll
aad
push
and
mov
push
insb
add
shlb
je
add
bound
add
or
cmpb
test
push
adc
jmp
inc
call
aad
add
das
xchg
jge
jmp
add
adc
je
pop
add
lods
repz
stc
lret
adc
imul
push
je
add
popf
or
mov
lret
adc
mov
inc
fimuls
rorl
mov
push
dec
push
sbb
cmp
incl
mov
push
lods
sub
mov
jb
sbb
incl
xor
mov
xor
mov
jb
jo
cmc
mov
out
fbstp
dec
loop
adc
jo
test
add
add
stos
mov
sti
xchg
and
das
mov
lock
lock
hlt
xor
xor
in
repz
loope
out
xor
sarl
testl
outsb
sub
lret
rorb
jnp
sarl
add
das
fistpl
push
xor
add
add
out
test
sahf
inc
outsb
fldcw
adc
lods
jb
aaa
test
es
cld
dec
dec
mov
pop
dec
mov
hlt
xor
adc
adc
out
test
jg
jmp
inc
xchg
push
fldt
xchg
or
das
xchg
add
mov
xor
jl
jmp
out
xor
aaa
insb
add
ds
add
add
pushf
add
rorb
loop
into
stos
dec
xchg
dec
mov
clts
pop
stc
incl
shrb
hlt
decl
pop
fs
add
rorb
in
clc
call
std
mov
hlt
decl
pop
fs
push
xor
push
mov
jbe
scas
mov
test
pop
push
add
pop
imul
dec
mov
test
add
test
hlt
add
mov
jbe
andb
or
dec
jbe
jmp
ss
cmpsb
mov
mov
add
xor
mov
xchg
jne
stc
imul
cmp
jge
jne
push
sbb
mov
add
add
leave
push
pusha
push
movsl
test
dec
mov
outsb
mov
cld
mov
dec
fildll
scas
sub
sub
sub
inc
orl
fs
xor
jle
inc
in
jbe
push
in
outsb
add
cmp
outsb
ljmp
outsb
fidivrl
xor
add
loop
or
imul
xor
fnstcw
stos
mov
out
add
imul
add
jmp
mov
mov
out
inc
scas
sarb
jmp
outsb
or
jl
xchg
sbb
mov
outsb
mov
das
push
test
add
or
in
adc
jnp
jmp
jae
in
insb
scas
cmp
arpl
jb
mov
add
add
test
je
stc
sahf
inc
adc
adc
sbb
xor
jmp
std
mov
insb
sub
dec
cwtl
pushf
call
mov
jns
xor
in
push
js
add
insl
in
and
into
loopne
add
call
mov
add
test
divl
lcall
test
decb
mov
inc
add
icebp
and
loop
sar
inc
ret
pop
aaa
push
call
dec
and
sub
ret
hlt
movsl
fstpl
xor
push
leave
pop
dec
mov
in
orb
pop
and
addl
int3
cmpl
push
or
aad
lock
add
orl
imul
cmp
pop
std
jae
leave
jle
out
shlb
adcl
fld
std
jle
lds
jmp
pop
test
sub
xorl
dec
data16
add
das
jge
jmp
adc
inc
add
pushl
test
mov
adc
add
adc
push
add
jle
test
add
jmp
sub
push
std
add
jmp
add
jmp
mov
call
cmp
or
xchg
xchg
xor
mov
fnstcw
add
ret
test
push
cmp
mov
cmp
das
jecxz
sub
in
xchg
pop
mov
cmp
sbb
sub
sbb
test
ss
mov
dec
fcomi
cmpsb
lods
scas
lods
add
sbb
xchg
mov
andl
inc
outsb
inc
jmp
jle
stos
ja
mov
bound
divb
fcomi
outsl
mov
js
adcb
add
jge
jae
arpl
ljmp
dec
fidivl
daa
or
sbb
add
xchg
adc
ja
lret
add
jno
daa
cmp
jl
in
adc
imul
mov
adc
stos
inc
loope
stos
inc
lds
loope
nop
lahf
and
xor
adc
loope
stos
dec
or
ja
callw
mov
adc
into
stos
popf
jae
int
fadds
push
push
xor
call
add
push
xor
lcall
jnp
ret
ds
mov
imul
jne
imul
jmp
scas
mov
ljmp
mov
sub
fstpt
and
adc
and
cmp
insb
and
mov
dec
sti
mov
xor
aam
jmp
js
mov
add
adc
jo
loope
jo
cld
mov
pop
xchg
sub
jl
vmread
mov
jmp
adc
sub
popf
scas
xor
or
lods
jl
push
sub
sbb
xchg
xor
pop
pusha
mov
scas
test
mov
out
pop
mov
add
xchg
dec
ret
mov
add
add
push
jns
push
xchg
test
xor
fisubs
add
lea
push
cmp
mov
sti
movsb
mov
adc
sbb
inc
sub
iret
dec
outsb
roll
insb
mov
lods
daa
cmp
cmpsl
sbb
push
call
sahf
lds
mov
out
cmp
mov
fcompl
jg
out
cmp
insl
aas
jecxz
jecxz
add
sub
pushf
adc
sbb
addr16
xchg
jecxz
jmp
lret
fidivrl
outsb
addl
push
cwtl
jns
gs
out
mov
xor
push
pop
lods
rcl
lods
lret
fdivrp
ds
mov
xchg
inc
mov
jmp
movsb
je
test
stos
das
pop
call
lods
dec
int
jns
pop
call
add
dec
or
mov
sub
sarl
jo
je
mov
jmp
mov
repnz
jp
push
out
xor
fs
incl
push
sbb
std
fnstcw
dec
push
and
clc
stc
call
hlt
out
test
adc
mov
je
repz
and
scas
cmp
add
ds
mov
add
addb
mov
je
test
divl
adc
cmc
ret
sub
add
mov
je
dec
add
imul
outsb
adc
loope
dec
mov
mov
lock
push
shlb
mov
fimuls
test
repz
sbb
add
pop
sub
iret
jae
push
jmp
or
test
and
mov
test
mov
imul
jge
mov
inc
repz
seto
je
pusha
jbe
sbb
mov
js
std
pushl
xchg
pop
outsb
bound
add
and
sbb
xchg
pusha
xor
add
add
xor
mov
scas
fsubrs
rcr
sub
inc
jno
cs
jp
sbb
jmp
cmp
scas
dec
out
repnz
xlat
aaa
movsb
stos
xor
out
movsl
cmp
ljmp
out
mov
lcall
lock
scas
inc
xor
jmp
xchg
call
add
pop
call
scas
cltd
jmp
sub
add
add
add
cmp
or
mov
or
daa
in
pusha
inc
push
add
cld
scas
out
xor
and
std
push
bound
push
mov
call
in
fs
pop
push
into
loop
popa
ds
mov
daa
dec
int
test
scas
sub
or
add
into
jl
shlb
icebp
hlt
clc
adcb
xor
notb
mov
rclb
mov
dec
add
xor
les
mov
rorb
xor
cmc
ss
leave
fwait
jecxz
leave
mov
add
aas
jae
mov
add
mov
or
test
daa
add
test
add
daa
std
xor
adc
mov
add
stos
je
xchg
add
ja
cmc
mov
add
cmp
movsl
sub
inc
movsb
mov
ret
jae
shlb
push
std
and
shr
in
lcall
dec
add
imul
ja
je
ljmp
pop
std
test
add
xchg
jg
mov
dec
push
je
movsb
stc
lods
shrb
push
or
repnz
sbb
jmp
jge
cmpsl
sbb
jg
add
push
jb
lcall
pop
gs
jmp
jge
stos
mov
sbbb
ret
add
stos
mov
sti
sbb
in
push
add
out
imul
add
jge
ljmp
mov
das
gs
ret
push
sub
add
pop
xlat
in
sub
lea
das
adc
xor
cmp
xor
insb
aad
push
xchg
jle
inc
mov
lods
push
xor
out
jnp
icebp
lods
inc
add
sub
lock
mov
repz
mov
test
cmp
clc
and
call
pusha
cmpl
adc
cmp
mov
vunpckhps
insb
cs
out
mov
push
je
lret
push
imul
mov
add
jge
in
mov
call
add
iret
xchg
addr16
and
pop
je
jmp
sbb
sub
imul
addb
sbb
add
push
call
sbb
cld
sbbl
rolb
mov
test
sbb
inc
cmpsb
mov
call
fldenv
cld
orl
ret
cmpsb
mov
push
int
clc
mov
add
dec
add
imul
addr16
mov
idivl
xor
js
sti
adc
mov
aad
insl
or
jge
jmp
push
bound
jp
and
aad
or
pop
pushf
push
adc
stc
sbb
ja
jecxz
pushf
adc
int
out
iret
bound
inc
pop
adc
add
inc
jne
add
jo
clc
mov
imul
adc
scas
pop
xchg
add
jmp
pop
sub
in
jo
clc
mov
arpl
lea
inc
push
mov
or
lret
jo
jnp
pop
xor
add
in
imul
ljmp
mov
add
mov
imul
sub
test
add
add
mov
daa
mov
inc
pusha
aas
cmp
test
scas
mov
bound
sub
stos
mov
aas
pop
inc
call
aaa
pop
inc
jp
adc
jg
in
cmpsb
xchg
adc
jnp
imul
dec
outsb
jne
sbb
push
cmp
jmp
add
cmp
lods
mov
lods
jl
add
loopne
cmpsl
insb
in
pusha
xor
sub
sub
andb
movsb
cltd
inc
push
scas
and
pop
cmp
insl
or
xchg
mov
push
scas
divb
or
insb
jl
add
imul
dec
int
add
test
jb
mov
add
mov
in
sbb
xchg
add
inc
xor
call
sub
jp
lods
idivl
imul
add
test
call
mov
and
jmp
mov
and
add
sbb
testl
jg
jl
inc
xor
leave
sbb
jge
imull
pop
push
pusha
mov
add
add
jno
inc
mov
lret
pop
leave
inc
lcall
in
push
add
mov
and
push
js
dec
jb
iret
mov
ja
adc
bound
movsb
stc
test
dec
and
loop
and
aam
and
cmpsl
movsb
je
push
movsb
mov
jo
fnstenv
jb
flds
push
loop
call
jo
call
add
add
or
adc
sbb
sbb
std
jl
imul
push
sbb
jcxz
xor
jmp
jmp
dec
and
xor
lods
mov
jle
lcall
or
pop
fldcw
xor
das
pop
cmp
sti
pop
pop
adc
cwtl
nop
mulb
pushf
add
call
or
jbe
insl
in
xlat
xchg
loopw
fucomi
dec
mov
push
lcall
and
add
mov
in
sbb
cmp
rcr
outsl
pusha
dec
outsb
dec
pop
inc
ljmp
inc
inc
mov
xchg
push
adc
scas
sbb
xor
jmp
add
jae
add
call
popf
add
call
cmpsb
jae
gs
add
insb
mov
inc
lds
xor
imul
arpl
insb
sbb
add
mov
scas
sub
andl
pop
out
or
jb
add
in
out
add
add
fwait
or
add
movb
add
movsl
pop
test
mov
xorl
sub
add
mov
and
stos
shlb
cmp
sbb
pop
or
adc
in
shlb
dec
and
mov
inc
or
and
pop
jmp
dec
xchg
stos
xchg
add
pop
clc
inc
out
fs
jne
mov
movsl
nop
sub
cmc
out
push
pop
add
shrl
push
das
and
mov
and
or
test
pop
mov
rcrb
or
bound
out
mov
jmp
test
add
mov
cmp
movsl
jecxz
pop
popa
dec
je
adc
and
in
test
insb
int
sub
js
add
leave
fidivrs
and
into
inc
and
outsb
inc
add
add
xchg
in
sub
inc
arpl
mov
sub
add
bnd
out
xor
call
pmaddwd
aaa
in
lret
out
jmp
pop
add
iret
adc
push
aaa
fildl
mov
mov
jecxz
push
jae
movsl
cmp
pop
adc
pop
add
pop
xor
push
repnz
jecxz
negb
movsl
outsb
add
rep
mov
inc
fs
out
push
jecxz
pop
or
ljmp
jo
repz
xor
mov
stc
cmpsb
stos
out
jb
xor
mov
inc
sub
jl
push
add
cmpsb
xor
jmp
add
stc
stos
push
loope
cld
and
pop
testb
sub
clc
ds
push
cmp
sub
xor
mov
add
add
data16
mov
push
test
gs
test
xor
xchg
popa
frstor
adc
bnd
and
dec
mov
add
call
jge
imull
enter
sti
jmp
add
fimull
ljmp
test
push
and
je
pop
cld
jb
dec
mov
lea
dec
dec
push
popf
addr16
xchg
xor
je
js
je
js
pushl
xor
mov
sbb
xor
mov
je
bound
pop
inc
and
cmp
adc
add
push
pop
incl
add
push
dec
inc
cmp
sub
push
push
dec
xor
outsb
adc
push
fwait
adc
mov
add
stc
outsl
mov
cmp
sahf
dec
mov
lcall
fdivs
ret
std
cs
adc
das
stc
inc
repz
jmp
rorb
add
push
outsb
adc
bndldx
adc
add
xchg
jnp
clc
pushf
jecxz
or
dec
xchg
pop
pop
mov
movsl
or
add
testb
popa
xor
in
mov
lahf
push
pop
arpl
mov
das
outsb
dec
out
sub
xor
out
xor
shll
jmp
xor
stos
and
in
add
les
adc
mov
cmpsl
mov
lahf
add
loop
arpl
loop
jbe
jmp
pop
dec
unpckhps
fwait
outsb
pusha
insb
xchg
xor
aad
mov
mov
test
ss
jmp
pop
inc
bound
pop
adc
ficoml
bound
addr16
xchg
push
pop
stc
sahf
mov
je
pop
hlt
and
jne
add
xchg
add
out
int3
ret
mov
in
push
out
cld
es
sbb
push
sub
add
stos
xor
sbbb
inc
test
mov
std
and
pop
adc
inc
bound
add
pushf
or
inc
xor
pop
mov
dec
call
test
and
pop
shll
ret
jns
add
cs
add
cmpsl
lock
or
push
repz
lock
hlt
jmp
popa
mov
lcall
fadd
add
xor
decl
xchg
cld
lods
into
mov
cmp
sar
call
mov
aaa
mov
mov
mov
dec
rcrl
pop
pop
roll
pop
dec
rorl
adc
movsb
cwtl
add
add
dec
or
sub
lret
int3
cmp
sbb
into
mov
cs
add
dec
movsl
cltd
in
cwtl
test
int3
mov
ficoml
pop
jno
stos
dec
mov
data16
inc
pusha
or
subb
mov
jp
aam
jp
xchg
sub
sti
jmp
movsl
mov
ja
in
inc
dec
xor
add
jmp
xor
mov
out
dec
lahf
or
lods
lret
out
pop
out
mov
inc
dec
sbbb
mov
adc
cmp
je
add
xor
xor
xor
sub
clc
ss
clc
or
jmp
jge
mov
jmp
and
sbb
lock
scas
adc
mov
mov
pop
addr16
add
add
add
xor
in
in
stos
xor
add
xor
icebp
xchg
inc
add
cmp
add
call
pop
push
mov
jne
mov
sub
mov
jmp
jnp
adc
out
push
jb
popa
ja
cld
jo
inc
jmp
in
mov
mov
mov
loope
in
push
pop
insl
lock
add
add
rcrl
xor
jp
shrb
xchg
or
bound
or
or
mov
sarl
pop
mov
dec
push
mov
in
shll
and
int
and
std
daa
and
push
push
divl
clc
adc
or
in
pop
arpl
add
cmp
and
adc
fsts
push
ret
dec
mov
ds
xchg
incb
mov
pop
clc
or
test
hlt
decl
scas
inc
add
test
cli
sbb
sahf
inc
stc
int3
loop
and
les
pushf
ret
mov
mov
test
push
sarb
add
xor
mov
sub
pusha
aad
adc
jo
jp
jmp
push
jecxz
clc
ss
or
stos
lret
adc
xor
mov
cmp
or
arpl
mov
nop/reserved
mov
inc
mov
add
add
stc
outsb
xor
movntq
daa
test
mov
rolb
add
incl
add
mov
icebp
cld
xor
inc
and
fldt
adc
repz
icebp
ds
push
outsb
xchg
push
cs
mov
pop
loop
out
test
xchg
push
jno
push
outsb
outsl
and
and
xlat
add
inc
push
xlat
pop
pop
in
mov
mov
mov
add
push
fcoml
add
out
xor
push
cli
sub
loop,pn
insb
movsl
call
mov
jmp
dec
cmp
imul
sahf
and
call
sub
xchg
es
out
pusha
ficompl
pusha
test
push
aam
dec
out
and
shll
insl
inc
or
xchg
lods
mov
jecxz
popa
dec
push
stc
gs
or
push
cli
test
add
shl
cmc
out
rol
out
cmp
stos
pusha
call
arpl
add
adc
fwait
out
add
add
dec
push
jns
insl
cmp
rclb
notl
bound
clc
je
stos
sbb
pushl
cmp
data16
daa
push
in
call
lock
add
pop
mov
pushl
xor
adc
inc
fmuls
adcb
sar
push
xor
push
rcrb
dec
jl
shll
int3
cmp
mov
dec
add
outsb
add
cmc
in
mov
clc
fcoml
sub
clc
ljmp
cmp
int
add
loopne
data16
nop
adc
pop
cmp
ret
add
push
ds
loop
dec
std
test
pop
xor
adc
push
pusha
jge
dec
mov
inc
cs
dec
xor
ljmp
jmp
ds
stos
cmp
push
in
xchg
add
clc
push
sbb
stos
and
mov
hlt
bound
out
out
add
cmp
mov
jg
xor
add
fcoms
test
add
xor
sti
daa
jo
nop
pop
or
or
aad
push
add
je
push
pop
jmp
out
mov
xor
ss
mov
call
add
jnp
mov
push
test
cmc
aaa
push
jb
dec
test
and
add
jmp
andl
rclb
test
push
pop
and
jb
dec
pop
bnd
pop
jp
lahf
fimuls
test
or
pop
lahf
gs
out
shrl
stc
cld
adc
inc
jmp
add
imul
push
push
stc
add
xchg
negl
xchg
mov
je
push
push
mov
dec
or
push
mov
and
jns
dec
push
jns
notl
xchg
or
movsl
sti
out
push
mov
insl
and
pop
add
jb
add
jmp
es
dec
mov
push
addl
je
push
add
or
shufps
xlat
add
lea
mov
or
or
or
jmp
sti
dec
cmpsb
insl
jne
cmova
subb
call
pop
js
testl
mov
out
loope
stc
jo
sti
mov
jbe
loopne
rolb
xlat
fimull
enter
call
pop
add
add
jg
loopne
lds
inc
sarb
and
shr
in
dec
mov
pop
std
std
jno
in
or
jl
push
pop
std
test
xor
lcall
arpl
jmp
cmp
addr16
add
xor
shrb
out
jns
adc
xchg
les
jle
add
dec
jp
sub
pop
jns
adc
xchg
mov
add
les
fwait
jmp
repnz
and
ret
xor
add
pop
loop
mov
sbb
dec
arpl
out
ret
xor
insl
inc
or
add
add
dec
cmp
jp
ja
dec
stc
arpl
adc
jmp
add
fisttpl
test
scas
xor
jmp
mov
add
call
stos
test
call
mov
jmp
jecxz
jl
in
push
jb
and
jmp
call
mov
subb
add
loopne
insb
jb
cmp
out
les
dec
in
xor
add
das
call
add
add
int3
call
insl
pop
flds
add
mov
add
inc
xor
xor
pop
jmp
into
cmp
add
jl
inc
jbe
xchg
jns
jne
mov
call
cmp
mov
inc
pop
mov
add
xor
and
enter
pop
push
pop
add
dec
xchg
push
ret
dec
mov
mov
xor
add
jmp
jp
sbb
push
fs
in
test
jmp
and
stc
sbb
mov
cli
dec
iret
xchg
cmpl
add
push
pop
jl
adc
mov
jbe
test
jo
pushf
outsl
test
push
mov
xchg
mov
inc
add
in
jg
push
idivl
ret
jnp
cli
int3
sarb
jmp
std
jl
cmp
xchg
mov
add
cs
jnp
out
jo
xchg
mov
lea
stc
cmp
das
fwait
shrb
sub
xchg
inc
jmp
insb
push
bound
add
cmc
mov
pusha
std
fwait
repnz
lret
xor
lcall
repz
loop
jge
add
pop
pop
jmp
out
mov
dec
mov
jns
push
mov
adc
pop
jno
addr16
add
mov
mulps
out
cmp
outsb
mov
sar
ss
rcr
dec
add
call
xor
jmp
fbstp
in
les
mov
gs
dec
mov
pop
mov
or
add
xor
adc
cmp
cli
inc
jno
mov
cld
and
dec
rol
jmp
imul
repnz
mov
aas
mov
cli
dec
insb
stos
adc
sbb
and
insb
mov
push
outsb
jmp
push
push
je
loop
dec
add
fwait
or
in
xlat
ffree
xlat
test
and
int
imul
in
aas
or
rclb
imul
lea
movsl
xchg
or
mov
ja
daa
cli
imul
add
into
dec
stc
mov
ret
filds
adc
testl
adc
test
pop
js
call
std
or
adc
std
cmp
jmp
dec
movsb
jmp
std
test
xchg
jns
push
sbbb
es
push
mov
push
mov
pop
add
pop
jbe
sbb
into
cmp
clc
inc
or
fs
push
or
inc
shll
cli
dec
into
ret
jae
pop
dec
movsb
jmp
std
test
xchg
xor
push
ret
jmp
and
add
std
jbe
push
leave
sub
popf
cmc
add
jmp
xor
xor
roll
repnz
cs
xor
test
arpl
inc
arpl
out
cmp
sbb
and
das
pushf
push
rcrb
test
xchg
jmp
in
imul
pop
add
jns
sub
xor
pushf
mov
mov
add
add
fcmovnb
test
mov
movsb
adc
test
add
lar
in
sbb
mov
push
fisttps
mov
ljmp
gs
gs
outsl
iret
arpl
inc
push
pop
std
push
call
std
jmp
je
xchg
mov
dec
or
lock
lods
rclb
add
dec
insb
and
push
call
insl
cmpsl
mov
mov
loope
fistps
out
sbb
mov
stc
mov
andl
dec
sub
imul
sub
loopne
add
gs
fisubs
adcl
add
push
cmp
or
jo
add
bound
jecxz
dec
pushf
xchg
add
xor
add
fs
xor
inc
and
add
xchg
divl
ret
and
or
xchg
mov
loop
shlb
adc
push
mov
pop
out
inc
xor
je
cwtl
sub
add
mov
and
aam
stc
inc
mov
rcr
bound
jmp
test
cld
jmp
call
jp
add
iret
shlb
into
mov
pop
and
enter
push
dec
or
cmp
jge
gs
jmp
inc
jnp
pop
xchg
mov
pop
std
in
xlat
cmpsb
xchg
jmp
std
jmp
xchg
add
pop
cmp
les
sub
lahf
jb
and
mov
inc
js
iret
and
add
cmp
or
cltd
addl
mov
sub
loopne
inc
out
into
dec
cmp
pop
push
ret
mov
add
enter
loope
ret
fdivrl
repnz
inc
cmp
outsb
jb
mov
inc
and
decl
add
sub
sbb
sbb
roll
repnz
ljmp
add
push
dec
or
jl
inc
push
lahf
outsb
in
add
mov
jmp
out
sar
ljmp
call
jmp
mov
shlb
cwtl
jmp
sti
or
pusha
bound
lcall
inc
stc
push
gs
add
call
dec
dec
cwtl
mov
cmp
add
add
mov
sbb
call
adc
push
push
and
xor
stc
out
data16
hlt
jno
and
cmp
call
sub
add
test
xor
std
jno
add
pop
dec
call
sbb
popa
cmovo
mov
and
scas
les
std
addb
add
mov
sbbb
mov
insl
scas
xchg
in
aas
jmp
xchg
jp
add
stos
xchg
add
ret
pop
mov
and
scas
and
jmp
mov
insl
and
out
add
jmp
into
clc
ficomps
jge
jmp
sbb
pop
add
fs
jmp
cmp
in
or
add
xchg
pop
std
jmp
cwtl
add
dec
mov
pop
pop
xchg
pusha
call
adc
cmp
and
inc
dec
sbb
stc
push
sar
jmp
int
pusha
sbb
jl
xchg
mov
faddl
jl
cld
jmp
xchg
pushf
jmp
std
inc
jb
jb
jmp
out
scas
adc
roll
add
jle
jge
lods
mov
lahf
adc
xchg
mov
cwtl
ret
in
sub
xchg
aas
xchg
jge
xchg
jmp
outsb
lea
mov
add
xor
lahf
addl
jo
mov
out
mov
add
outsl
inc
clc
enter
cltd
aas
xor
add
jl
lret
into
and
xchg
add
add
inc
ljmp
mov
lds
push
inc
or
push
loop
pop
add
inc
jmp
call
adc
jmp
ret
add
xchg
nop
jmp
in
mov
shlb
jmp
movsl
add
call
popf
add
call
cld
test
add
adc
test
add
stc
cs
stc
pop
int
les
fs
mov
add
call
xor
add
mov
inc
cs
orl
adc
pop
push
pop
fistpl
adc
pusha
clc
je
sub
icebp
sub
stc
add
xor
pop
pushf
je
out
das
idiv
cli
xor
add
add
test
jo
out
push
scas
inc
and
mov
test
xor
shr
addb
or
imul
pop
orb
xchg
hlt
lods
add
xor
mov
inc
std
ljmp
add
inc
mov
adc
lock
mov
xchg
insl
iret
cld
jmp
xchg
add
inc
std
test
std
mov
add
jmp
mov
add
gs
mov
inc
add
and
shr
lahf
inc
jmp
dec
movsb
jmp
jp
dec
lock
int3
xchg
add
dec
gs
rorl
test
negl
jp
jmp
imul
arpl
mov
add
mov
add
xor
out
jmp
das
push
inc
cmpsb
jp
add
xor
out
jmp
das
testb
call
into
cltd
cmpsl
test
add
test
insb
cmp
jns
data16
xor
pop
subb
add
out
in
cmp
rclb
lock
add
sub
add
out
adc
popa
mov
jb
addr16
arpl
pop
lret
cld
sub
ljmp
sub
ss
callw
xor
push
iret
pushl
lret
out
or
fstps
cmpsb
fiadds
outsb
add
xchg
ja
and
addr16
pop
jmp
mov
or
stos
loop
stos
lock
add
add
cs
bound
jae
sbb
add
addb
sub
iret
cmovo
push
ret
addl
inc
mov
push
jb
dec
stc
imul
mov
in
jecxz
jno
adc
insb
adc
add
add
mov
idiv
pop
xor
mov
add
negb
out
or
adc
jmp
mov
inc
loope
ret
inc
mov
add
incl
mov
inc
std
jmp
jns
jmp
std
and
aaa
jnp
jmp
std
test
xor
shrl
add
dec
std
jmp
jns
jmp
std
pop
sub
std
jl
dec
into
push
popf
lcall
push
pusha
lock
add
insb
shr
std
addb
jns
ljmp
popf
ljmp
and
push
out
jno,pn
pushw
and
and
cmp
xor
push
addr16
cs
lret
test
gs
mov
xchg
pop
rcr
push
sbb
cmp
mov
add
push
cmpsl
add
insb
jmp
sub
insb
cs
out
jbe
sub
jmp
add
mov
ljmp
iret
push
jecxz
testl
jo
lret
dec
pushf
loope
aaa
je
or
add
pushf
and
imul
sub
ret
ljmp
add
add
adc
mov
into
incb
mov
add
ja
cmp
gs
sub
push
lods
jno
xchg
xor
jmp
clc
dec
or
lods
dec
or
xor
jmp
fistpl
imul
and
jno
add
sub
xlat
xor
jmp
adc
add
sub
addb
add
shl
loope
add
test
mov
repnz
sub
adcl
jecxz
cwtl
xor
push
pop
stc
decl
insl
std
mov
test
mov
adc
add
jne
mov
inc
add
xor
jne
cmpsl
shlb
and
pop
dec
call
add
in
jae
stc
mov
sbb
incl
sarb
call
adc
mov
xorb
outsb
jno
ret
jecxz
xor
jmp
wbinvd
sarb
push
mov
add
adc
inc
int
test
inc
jmp
cmp
add
cmc
test
add
shlb
sub
jb,pn
ret
sbb
lods
stc
out
inc
jmp
sub
jns
jp
out
pop
xor
test
jae
mov
ret
xor
fistpl
pusha
ret
repnz
push
ja
sub
data16
in
xor
ficompl
fcoml
adc
cmc
pop
leave
call
mov
rep
sbbb
push
add
sub
fs
clc
sbb
shrl
stos
xor
call
inc
in
jle
sub
pop
jl
jecxz
out
jmp
xor
dec
in
mov
pop
cld
jo
aam
xlat
add
add
decl
sbb
dec
cmp
lods
out
insb
leave
daa
push
xchg
cld
inc
push
sub
add
jae
adc
and
mov
add
mov
jmp
fdivrl
stc
gs
mov
add
orl
ss
and
jae
and
fistpl
adc
sub
xchg
insb
cmp
aad
int
ljmp
or
data16
adc
clc
out
jl
sub
scas
rcrb
jns
lock
jmp
pop
clc
adc
aad
or
adc
mov
add
out
flds
dec
jo
out
sti
idiv
std
pop
clc
adc
fsubl
ret
fldl2e
adc
dec
xor
cmp
sar
xchg
out
or
jge
ljmp
xchg
pop
clc
adc
or
sbb
adc
in
cmp
mov
push
leave
addr16
sub
mov
cwtl
loop
cmp
add
hlt
push
inc
jmp
aam
test
inc
jmp
inc
jae
cmp
orl
sub
notb
mov
call
sbb
inc
std
sub
xchg
pop
cld
lcall
int3
test
and
out
addr16
pop
lret
daa
nop
jmp
std
clc
xchg
imul
add
inc
jbe
mov
xor
and
clc
cmp
inc
je
lods
add
lahf
imul
xorl
mull
jmp
shlb
jmp
sub
jecxz
push
fcmovbe
movsl
mov
test
lcall
nop
xor
add
sub
xlat
push
hlt
std
mov
movsb
add
pop
push
inc
xor
or
xor
xchg
add
add
sbbb
je
or
adc
sub
mov
ret
das
fisubs
je
mov
push
aam
call
sub
andl
mov
mov
pop
and
call
movsl
mov
loope
xor
add
add
dec
dec
sbb
fs
mov
fisubrs
pushw
push
andb
inc
add
daa
sbb
push
sub
or
or
lret
cmp
call
push
aas
test
ret
add
imul
xor
popa
shr
xor
add
inc
divl
test
or
add
pushf
outsb
add
jno
pushl
or
push
pop
or
jp
pop
pushl
cld
push
add
and
xchg
cmc
incl
sbb
sbb
sbb
cmp
stc
incl
es
cmc
sbb
push
scas
dec
and
mov
iret
cli
fldt
push
test
or
xchg
mov
adc
add
imul
and
ljmp
call
mov
xlat
insb
fcoms
idiv
aas
xchg
pop
jg
adc
add
push
push
pop
xchg
cmp
les
fs
pusha
lahf
jns
jb
jo
es
jnp
xchg
jg
aas
mov
out
das
outsb
fsubl
add
ds
data16
outsl
push
lock
jo
mov
pop
jle
adc
jnp
jg
sbb
xor
sti
jl
sub
and
fcmovbe
popa
jnp
pop
jge
enter
mov
jle
sub
cmpl
stos
jle
and
aad
shlb
and
sub
mov
ret
sbb
sbb
add
mov
pop
or
daa
sbbb
inc
cli
sub
xchg
push
jne
aaa
shrl
mov
xchg
add
shrl
test
xchg
xlat
sub
add
stc
out
lock
jo
fnstcw
mov
mov
call
and
mov
mov
add
add
or
addl
fldenv
push
std
in
lods
clc
in
mov
jae
mov
jmp
cli
cmp
clc
pop
xor
add
rolb
das
add
popa
outsl
inc
jmp
mov
or
sbb
sbb
insl
sub
stos
add
inc
sbb
add
xchg
pushf
stc
jbe
lods
cmp
add
add
sti
incl
das
jecxz
mov
add
dec
push
inc
adc
mov
in
dec
jmp
dec
fldenv
push
inc
pop
cli
or
xor
rclb
lods
cmp
test
outsb
push
ret
dec
mov
arpl
lret
testb
sbbl
jmp
testl
orl
fs
shr
std
jmp
iret
jl
push
jmp
add
add
cmp
adc
data16
mov
sub
and
lock
lock
std
jmp
adc
ret
or
ret
incb
test
adc
add
pop
std
inc
es
jecxz
cli
jg
ret
divb
push
imul
clc
xchg
out
inc
inc
inc
ds
inc
jne
xorl
add
xor
add
enter
jmp
sbb
inc
addr16
inc
out
xor
sti
sub
dec
sahf
stos
xor
ss
add
mov
out
add
cwtl
pop
pop
adc
mov
aam
subl
jg
xchg
add
cwtl
data16
das
sbb
pushf
mov
ret
fcoml
popf
pop
shrb
outsb
jae
pop
adc
outsb
aaa
data16
add
sbb
inc
fs
sbb
bound
andl
test
mov
add
sbb
movsb
and
push
cs
xor
icebp
shll
imul
in
jno
adc
rcrb
ja
test
movsl
arpl
out
pop
insb
xor
dec
cmp
add
sub
and
scas
mov
sbb
jo
pusha
xlat
inc
inc
jmp
inc
scas
out
fs
popf
pop
add
lea
mov
mov
test
je
test
dec
and
insl
insl
sub
test
push
jl
dec
cmp
insb
insl
sbb
es
incl
pop
test
push
add
jge
sahf
sub
push
xchg
dec
decl
testl
pop
mov
adc
mov
dec
push
int3
cmc
sub
in
idiv
xchg
test
lock
cmpsl
out
je
dec
jne
movaps
pop
push
and
cmp
lods
mov
ret
mov
dec
subl
sbb
pusha
push
lret
clc
add
mov
or
filds
js
rorl
fwait
out
or
xor
es
xchg
sub
dec
sbb
sbb
mov
push
clc
add
mov
data16
add
in
pop
test
xchg
pop
je
xchg
add
mov
mov
xchg
mov
stos
nop
adc
outsb
enter
sldt
cs
xchg
mov
jl
pop
jo
adc
push
jmp
outsb
inc
mov
push
mov
sbb
popf
loop
pop
nop
sbb
inc
mov
or
jae
mov
mov
es
and
js
and
lcall
cmp
pop
dec
loop
add
add
sub
jb
sbb
iret
dec
sub
es
jmp
adc
add
call
mov
insl
add
mov
call
inc
gs
inc
jne
test
ret
mov
mov
lahf
adc
rcrb
push
pop
mov
call
push
and
mov
in
je
add
sbb
jmp
pushf
or
je
andb
das
jnp
test
in
insl
sub
hlt
in
call
pop
orl
hlt
inc
jbe
call
test
jbe
add
fdiv
inc
sti
jecxz
call
cmp
test
xchg
enter
sub
sbb
add
inc
mov
jne
add
dec
xor
jmp
pop
inc
inc
call
or
mov
test
pop
push
les
clc
test
fnop
pop
xchg
pop
pop
adc
add
icebp
pop
stc
push
add
sub
xchg
imul
inc
inc
mov
adc
mov
fsub
fs
mov
pusha
test
push
xchg
lahf
dec
call
pop
roll
sbb
in
es
test
xchg
popa
clc
push
lods
std
cmp
jmp
data16
and
sub
jbe
les
sub
nop
add
xor
mov
enter
repnz
mov
dec
jecxz
pusha
insb
or
gs
add
sub
nop
pop
dec
iret
nop
add
daa
dec
jmp
daa
dec
fisttpl
jmp
out
daa
dec
xlat
inc
das
dec
fildl
xor
inc
das
dec
incl
jmp
out
mov
push
pop
or
dec
cmp
add
mov
pop
push
and
insb
and
pop
addr16
or
push
popa
xor
fnsave
or
cmpsb
jnp
bound
dec
sub
jno
and
xor
add
mov
or
add
divl
inc
inc
xchg
add
addb
sub
sub
jb
stos
dec
int
outsl
push
xchg
cmp
pop
pop
subl
xor
mov
push
test
cmp
stc
pop
lods
xor
jmp
arpl
add
pcmpeqw
push
nop
test
add
jb
and
cs
jnp
ss
cmp
sub
rcrb
adc
insb
call
mov
test
clc
mov
inc
push
push
jge
ror
test
bound
sub
popf
inc
orb
iret
push
and
lds
je
loop
fwait
mov
push
xor
add
ss
xor
xchg
push
sbb
repnz
incl
daa
dec
mov
adc
xchg
add
ss
pusha
pop
mov
ljmp
push
xchg
mov
stc
in
add
add
cmp
in
out
push
iret
lods
or
shll
push
or
dec
xchg
add
xor
roll
add
cmp
rorl
and
sbb
mov
lods
gs
aam
mov
dec
rcrb
push
in
cmp
cmp
jo
xor
pop
sbb
lret
adc
sub
mov
xor
xlat
cmp
pop
and
test
pop
mov
cmpsl
cmp
hlt
aam
outsb
push
add
dec
or
insl
inc
mov
mov
fdiv
mov
ret
fwait
mov
or
out
jmp
jb
insl
fwait
imul
sub
pop
add
dec
mov
mov
mov
adc
sub
mov
dec
das
sbb
stc
mov
xchg
imulb
andb
stc
cltd
add
jae
mov
mov
mov
cmpsb
sub
inc
jmp
pusha
pop
stc
rcrb
stc
jmp
and
or
and
jb
sbb
jne
push
mov
call
mov
and
jbe
das
jle
call
or
sbb
scas
fnstsw
mov
jecxz
push
lods
dec
and
add
mov
dec
lea
xor
mov
pushf
add
xor
bound
incl
mov
adc
push
cwtl
add
das
sub
mov
lods
out
int3
in
test
mov
divl
loope
push
xchg
lcall
mov
decl
mov
add
add
mov
jp
fsubr
mov
push
lea
xchg
jmp
popf
and
fsubr
subb
repz
xchg
inc
adcl
jbe
stc
jo
mov
outsb
aad
adc
push
std
cmp
cmp
adc
mov
shlb
inc
mov
shll
jl
and
pop
push
mov
add
push
push
push
sti
mov
and
xor
jb
and
inc
and
xor
jmp
dec
xlat
mov
push
jmp
jge
out
inc
mov
xchg
cs
jl
mov
sub
sbb
movsl
daa
jle
sub
add
pop
inc
jo
ret
pop
loop
movsl
mov
movsb
add
add
imul
lret
dec
je
or
push
stc
sbb
shr
jo
mov
or
mov
iret
movsl
mov
push
outsb
in
out
sbb
mov
add
into
pop
stc
push
cmp
mov
call
addr16
jmp
xor
jle
mov
gs
jo
iret
aas
jmp
xchg
mov
jo
dec
and
mov
test
in
mov
sbb
out
aas
pop
subl
xor
in
lahf
mov
push
xor
adc
sub
and
xor
bound
je
push
adc
push
xchg
push
inc
subl
xor
xor
test
pop
push
xor
cmp
jae
test
add
clc
sbb
push
cwtl
sahf
add
addl
add
add
xchg
xor
add
jmp
pushl
jle
jle
test
jmp
mov
and
sub
add
insb
call
mov
or
add
xor
mov
xor
push
fidivrl
sahf
loop
push
jmp
jp
pop
push
mov
add
cmp
test
mov
mov
inc
test
add
or
mov
fucomp
popa
add
leave
or
lcall
or
popa
sub
aas
jmp
inc
test
test
or
test
scas
dec
mov
pop
inc
and
push
adc
mov
and
cmp
add
add
incl
mov
pop
lret
mov
dec
out
adc
test
daa
dec
iret
stos
jne
lods
xchg
dec
or
push
fwait
mov
push
stos
mov
sti
mov
iret
dec
ds
push
icebp
les
out
cmc
mov
add
mov
ret
imul
add
add
lret
sti
dec
sub
or
mov
adc
or
enter
fdivrl
lock
or
ds
cli
mov
std
movsb
xchg
stos
dec
int
or
test
xchg
pop
mov
out
add
data16
dec
int3
jl
fldcw
and
js
repnz
cmp
cmp
dec
adc
ret
adc
cmc
inc
push
std
ret
sbb
lock
call
bound
push
adc
and
cmp
cmp
lods
inc
or
xlat
lods
pop
add
fdiv
push
xchg
test
idiv
jge
jl
mov
inc
and
loopne
adc
add
jp
addl
xor
dec
js
testl
add
jle
pop
das
ret
jns
ds
add
sub
jae
add
dec
push
mov
lock
pusha
jg
lea
dec
push
fnstsw
sub
mov
jnp
adc
decl
stc
idiv
jmp
lods
push
int3
cltd
js
jmp
add
and
icebp
icebp
pop
lods
ret
add
fxch
scas
pop
mov
pop
add
mov
jmp
mov
sbb
or
jmp
mov
pop
or
pushl
jnp
jb
and
cld
dec
stc
dec
mov
or
pushl
jnp
frstor
sub
dec
stc
and
xor
or
jmp
jne
and
add
dec
test
shll
or
xor
xor
push
add
data16
jmp
out
mov
or
push
ret
push
outsb
stc
loope
stos
test
cmpsb
add
call
jl
test
sub
cmpsl
cli
daa
jecxz
mov
jecxz
sbb
shll
out
popfw
add
sbb
pop
pop
mov
inc
cmpb
out
into
jg
push
pusha
insl
add
and
mov
add
add
mov
sub
jno
ret
sbb
add
sub
xor
call
orl
out
xchg
add
call
xchg
test
call
xchg
cmpsl
cmpsb
sahf
imul
insl
and
mov
xor
jbe
stos
inc
mov
jb
or
add
add
pop
mov
jge
stc
jge
cmc
call
sub
pop
call
cmp
mov
sbb
jl
cmc
decl
divl
clc
adc
dec
rcrb
stos
add
jmp
mov
call
ficomps
mov
push
push
incl
add
push
and
mov
add
jle
inc
les
inc
add
test
jge
leave
cmpsl
and
push
xor
jg
pop
xor
dec
pop
je
jle
xor
jle
dec
push
jmp
adc
fisubrs
mov
xchg
and
fcoml
ja
ja
aaa
or
stc
add
aaa
ds
clc
popf
and
shrb
scas
clc
mov
enter
stos
pop
xor
std
mov
aas
sbb
jmp
sub
sub
sub
or
lods
mov
xchg
add
sbb
cmp
sub
repnz
xor
add
xor
add
add
cmp
fstl
push
jecxz
stos
imul
push
out
jmp
pop
xor
jmp
cmpsb
cld
imul
and
repz
out
mov
push
cmp
imul
out
es
arpl
jmp
jg
mov
bound
push
out
fsts
loope
mov
adc
inc
dec
xor
addr16
aad
adc
or
call
jge
and
popa
mov
inc
int
adc
test
or
loope
mov
push
movsl
call
sahf
mov
add
and
test
and
or
insb
cmp
xor
add
xor
jmp
mov
mov
pop
mov
mov
dec
call
mov
jne
mov
imul
add
jno
push
es
mov
add
add
fnsave
dec
cmpsb
adc
inc
mov
jge
or
and
adc
divl
adc
jne
in
add
mov
ja
inc
cmp
sub
add
push
and
cld
dec
std
fnsave
divl
clc
adc
jmp
inc
adc
pop
divb
mov
jns
in
xchg
popa
add
sbb
stc
mov
xchg
stos
inc
stc
pusha
cmpsb
sbb
sbb
cmp
lret
insl
enter
cmp
mov
sti
in
mov
testb
mov
lret
subb
push
sbb
daa
imul
dec
test
and
sbb
push
cmc
insb
mov
mov
xchg
xor
jmp
dec
dec
mov
push
ja
push
divl
popa
jl
sbb
sbb
dec
and
arpl
and
add
xchg
stc
outsl
fs
xrelease
pop
mov
sbb
mov
or
jmp
std
or
cmpsb
xor
mov
repz
cld
imul
sbb
cmp
adc
popf
or
inc
jecxz
cmp
jg
mov
or
mov
call
icebp
outsb
sub
adc
addl
and
adc
add
call
ja
dec
mov
xor
jmp
mov
add
pop
stc
mov
jae
stc
jmp
sbb
stc
push
outsl
mul
lahf
pop
or
insb
sub
test
call
or
gs
xor
jmp
sub
xchg
call
sbb
and
or
call
sub
stc
cmp
add
idivb
add
push
adc
xor
test
les
cmpsb
insb
movsl
xchg
xchg
jno
add
dec
testl
or
notl
xchg
jo
lea
jge
test
sub
idiv
push
repnz
test
std
movsl
outsl
addl
add
aam
aas
in
cmc
jmp
test
inc
cmp
add
xor
jmp
pusha
je
std
out
dec
inc
stc
sbb
dec
pusha
and
std
jmp
ret
out
cmp
mov
jg
jle
jmp
test
push
mov
mov
jns
pop
sbb
lcall
add
jno
jmp
push
pop
jns
inc
jge
push
repz
jmp
repnz
std
lcall
and
pushf
in
push
sub
js
bound
adc
sub
in
jmp
or
pop
dec
xor
bound
adc
clc
shl
ret
inc
lods
es
push
arpl
mov
add
add
pop
pop
jg
aaa
fs
or
out
scas
dec
ret
jbe
dec
iret
js
bound
jo
mov
gs
pop
loop
mov
ss
int3
push
out
das
dec
add
dec
pop
jns
bound
jns
popa
mov
mov
push
push
sbb
jbe
insb
sub
sbbl
xor
push
push
inc
in
mov
call
add
or
sbb
lcall
pop
jns
subl
mov
call
add
mov
pop
jne
cs
push
subl
mov
call
aam
mov
lcall
negb
mov
out
xor
xor
fnstenv
add
add
out
add
mov
jle
xchg
xor
mov
inc
and
mov
aaa
mov
call
mov
sub
xor
insl
jno
icebp
divl
jb
test
icebp
clc
test
leave
pop
mov
loopne
sbb
and
std
mov
jb
or
daa
pushf
adc
jge
push
out
adcl
jmp
jb
mov
add
mov
testl
daa
cmc
cmp
test
mov
add
or
inc
jmp
leave
and
mov
inc
stos
mov
addl
cmc
pop
jb
loopne
jo
loopne
in
fprem
sub
mov
cmp
or
into
loopne
add
jo
loopne
stos
xchg
inc
or
loopne
mov
push
jle
sub
stc
jo
loopne
pusha
lods
loopne
pusha
int
adc
add
sbb
insb
or
sbb
fiadds
cmp
enter
jecxz
sbb
insb
add
cmpb
cmp
inc
and
pop
enter
sti
add
pop
mov
cmp
scas
mov
add
dec
inc
xor
pop
outsl
push
cmpsl
add
bound
jmp
xlat
addr16
xor
out
xor
pop
mov
ret
in
stc
push
loopne
outsb
xor
sti
jmp
fs
call
xchg
ficoml
xor
stc
pop
pop
call
jmp
sub
pop
mov
dec
fisubrl
pop
xchg
add
icebp
or
stc
jmp
stos
jno
jbe
and
call
jo
stc
push
mov
add
call
pop
test
jno
bound
pop
dec
stc
insl
icebp
or
add
ja
cld
add
call
pushl
jge
movsl
stos
mov
inc
xchg
lahf
dec
hlt
add
dec
xor
inc
add
inc
or
subb
ret
ret
js
inc
notl
mov
bound
push
dec
dec
xlat
inc
jnp
xor
cmp
mov
in
sbb
test
pusha
fiaddl
dec
mul
add
dec
incl
jge
pop
add
xchg
add
das
cmp
frstor
or
clc
jbe
int3
stc
mov
loop
ds
out
rcrb
cmpsl
bound
shl
andl
jge
push
mov
jae
cmpsl
cmp
adc
cmp
pusha
push
cmp
adc
dec
repz
enter
add
inc
das
mov
or
add
sub
adcl
mov
inc
pop
lcall
outsb
aaa
mov
fwait
sub
dec
shll
rcrb
fisubl
mov
cmp
subb
cmp
mov
inc
mov
cmp
xchg
or
sub
add
cmp
jb
push
add
stos
sbb
mov
mov
add
or
xor
leave
mov
mov
mov
xor
mov
in
andb
aam
add
jae
adc
loop
jmp
add
jmp
and
xchg
movaps
xchg
mov
push
mov
or
addl
adc
push
push
jae
jmp
push
inc
lahf
pop
in
inc
jge
add
gs
add
daa
mov
imul
ljmp
xor
mov
adc
arpl
test
ljmp
jo
pop
push
sub
add
lock
push
sub
arpl
jne
call
add
dec
sbb
cmp
pop
fimull
xlat
push
xchg
out
je
or
repz
add
mov
xor
pushf
jmp
mov
ds
jp
add
test
add
cmp
call
clc
mov
sub
jne
fisttps
inc
loopne
call
sub
inc
pushl
mov
test
jge
jmp
or
jmp
sub
cmpsb
mov
jmp
mov
add
cld
jmp
mov
jmp
pop
stc
push
push
adc
mov
ljmp
cld
jae
or
clc
fisubrs
inc
into
test
cmp
adc
mov
add
or
jmp
aaa
mov
and
jl
or
cmp
js
add
scas
xor
addr16
cmpsl
add
xor
mov
out
jmp
js
add
cmp
jo
add
xor
mov
pop
cmp
add
mov
out
mov
cmp
stos
add
xor
or
repnz
xor
daa
add
jb
jle
test
cmc
cmp
into
add
xor
add
call
popa
std
lods
repz
hlt
xor
add
sti
shrl
jo
jmp
repnz
xchg
fdivl
pushf
out
xor
mov
das
jae
rorb
mov
cmpsb
inc
or
adc
push
sub
jmp
in
test
jl
ret
call
sub
stos
je
adc
add
insl
jne
or
stc
adc
dec
dec
adc
cmp
fsubs
inc
dec
test
dec
sahf
cmc
pop
adc
out
inc
les
push
mov
add
mov
adc
or
lods
inc
and
jmp
shlb
test
push
decl
xlat
xchg
andl
ds
dec
decl
sub
scas
add
inc
cmp
in
jnp
ror
xor
push
hlt
clc
cmp
not
adc
mov
ret
add
and
xchg
sub
clc
dec
sub
adc
jmp
cmp
fists
xchg
inc
add
stc
cmp
cmp
xchg
sub
jle
das
add
jmp
sbb
mov
add
test
adc
jl
jmp
add
scas
pop
leave
xchg
sahf
add
mov
push
aam
pushf
adc
or
mull
out
ljmp
add
xchg
push
inc
jmp
xor
xchg
jmp
std
jl
cs
clc
fisubl
and
psadbw
clc
pop
xor
add
mov
add
adc
sarl
out
movsb
pop
push
in
mov
shl
repz
jo
subb
popf
mov
jge
add
cmp
scas
mov
xor
out
insl
inc
shl
stc
shrb
fnstsw
stos
loopne
sub
mov
enter
out
xor
add
mov
add
sub
stos
jmp
mov
icebp
sbb
mov
mov
das
xor
push
stos
repz
repz
mov
out
add
ljmp
jmp
pop
scas
dec
or
fidivl
bound
lods
mov
xchg
call
stc
xor
imul
hlt
js
test
add
call
jl
xchg
arpl
inc
mov
sti
mov
stc
adc
sti
jo
add
xor
call
adc
push
or
adc
push
in
jo
cmp
clc
test
adc
test
mov
add
xchg
add
filds
push
push
in
adc
xchg
adc
add
mov
sbb
xchg
or
mov
test
call
pop
jecxz
adc
pop
jne
jne
jbe
and
adc
xchg
jmp
sub
popa
lret
scas
sti
inc
or
sbb
in
push
mov
push
mov
add
test
sbb
jg
mov
test
int
in
add
mov
cmc
and
loopne
sub
mov
adc
sbb
xchg
unpckhps
outsb
sub
je
xchg
sub
stc
pop
rorl
mov
ret
aad
stc
int3
mov
add
fdivr
sub
pop
cld
xor
xor
cmp
aas
ljmp
or
es
push
dec
adc
push
add
jno
fiaddl
sti
xchg
sbb
or
imul
out
in
mov
cmpsl
insb
out
clc
js
ret
adc
push
mov
jge
jno
or
pop
jle
loop
out
in
test
out
hlt
cmp
xor
add
sub
push
ljmp
idiv
pop
push
out
cld
mov
sub
add
lods
sarl
pop
push
stos
mov
jmp
cwtl
je
shl
push
jb
sub
in
outsl
clc
sbb
outsl
stc
cmp
push
sahf
cld
lock
out
mov
pop
aad
add
jnp
mov
addr16
sub
call
jb
scas
icebp
lea
pop
sub
dec
lahf
pop
and
fdiv
adc
popf
sub
xchg
add
clc
stos
inc
adc
in
inc
out
add
cmp
cld
faddp
ret
dec
sub
stc
push
dec
mov
sub
sbb
sub
clc
xor
ljmp
test
add
sbb
adc
notl
roll
int
dec
and
add
cmp
cmpsl
adc
add
mov
xor
aaa
je
ja
stc
push
push
fdiv
adc
inc
ljmp
xchg
xlat
pusha
jmp
std
lcall
and
rcl
cld
jl
or
pop
outsb
push
mov
jo
call
ret
jbe
xchg
jbe
stc
jl
cmp
adc
paddw
mov
dec
mov
shrl
ss
jne
pop
std
test
add
push
cld
fiaddl
test
mov
je
push
jne
jo
sbb
mov
xchg
aad
xchg
int
push
pusha
mov
push
in
or
jp
mov
mov
lock
fadds
mov
cli
sbb
cmpsl
add
adc
xor
jmp
fidivrl
mov
add
lock
adc
loop
xor
jmp
repnz
scas
gs
out
jne
jecxz
lret
or
inc
out
adc
out
pop
scas
enter
add
lret
cmc
out
out
cmpsl
adc
add
les
sub
call
ds
jmp
lret
out
clc
jmp
add
xor
mov
testl
jmp
mov
xor
jmp
inc
cmp
cmc
outsb
cmp
push
lods
insl
mov
push
mov
mov
jmp
cmp
add
out
add
xlat
inc
cld
fsubrs
out
test
jmp
add
test
add
push
idiv
add
jns
dec
inc
xchg
or
mov
cmovbe
inc
imul
idiv
je
sbb
or
fscale
outsl
push
idiv
je
push
clc
mov
jno
ljmp
addr16
cmp
and
insl
adc
inc
xor
add
or
pop
imul
imul
add
sbb
imul
jl
push
add
adc
mov
hlt
jbe
dec
aaa
out
int
insl
ss
cld
inc
mov
inc
add
mov
outsl
or
pop
rclb
or
loopne
jo
loope
cmp
push
pusha
stc
pop
add
das
cmp
dec
push
decl
sbb
pop
add
stos
fidivrs
cmpsb
and
add
fbstp
or
in
pushf
or
hlt
pop
ja
cmp
js
inc
inc
adc
sub
shlb
inc
pop
rcrb
jmp
xorl
jle
in
fisttpl
fidivs
jle
inc
pop
mov
xor
add
add
xor
hlt
mov
fucomip
mov
out
and
jle
adc
add
add
xor
mov
jmp
div
jo
addl
sub
insb
inc
testl
rol
xor
adc
out
fdivrs
lcall
xor
add
mov
mov
insl
in
fnstcw
add
rcrl
bound
jo
jb
cmp
mov
out
add
pop
cltd
psubsb
add
xor
hlt
mov
jne
stc
cwtl
cmp
test
inc
jmp
add
add
jbe
push
dec
jle
jb
push
adc
add
xor
call
jmp
movups
pushf
unpcklps
jl
sbb
jl
sbb
mov
add
or
sub
sbb
pop
fwait
sbb
add
cmpsl
jecxz
mov
jnp
hlt
lcall
ret
cmpsb
insl
xor
sbb
pop
icebp
sbb
cmp
addl
inc
sahf
xor
push
or
sbb
or
sbb
mov
cmp
inc
out
rolb
inc
fiadds
aas
mov
push
imul
cmc
lret
test
cmp
add
jmp
cld
aas
mov
sbb
adc
or
jmp
or
pop
mov
and
out
lock
jmp
int3
test
xor
and
cmp
push
aam
fcomps
int3
lret
fcomps
push
fmul
clc
push
or
lcall
test
int
insb
iret
pop
iret
test
out
out
into
mov
jmp
mov
mov
xlat
sub
cld
jae
xor
inc
mov
mov
add
xor
cs
lds
cs
push
jecxz
add
test
ds
xor
jmp
xchg
out
mov
xor
iret
inc
cmpsl
add
lret
adc
jo
or
jne
xor
add
add
outsl
rclb
out
sbb
mov
add
fsub
add
pop
sbb
mov
daa
add
cmp
or
icebp
lcall
pop
call
out
xor
jo
push
call
in
dec
int
lods
push
test
pusha
pop
dec
call
out
add
mov
and
in
add
call
lods
jae
jecxz
test
push
sarb
out
out
jmp
mov
clc
jmp
movsb
in
jmp
movsl
call
add
push
fwait
pop
call
mov
test
push
rcrl
push
push
jb
adc
sub
fcom
dec
pushl
xchg
or
je
mov
and
add
pop
test
xor
add
fdivrl
xor
mov
stc
incl
push
scas
fmul
push
mov
inc
ret
adc
rorb
hlt
fistpll
cmp
adc
xor
inc
sbb
or
je
fisubl
push
jmp
test
ret
push
xor
enter
mov
add
cld
jmp
test
packsswb
lds
stc
pusha
enter
push
je
ljmp
jmp
sub
fisttpll
add
xlat
jg
call
aam
push
pop
fwait
es
fsubrs
add
xlat
test
push
pop
add
xlat
test
push
pusha
add
xlat
test
push
pop
add
xlat
test
push
pop
add
xlat
test
add
add
xor
add
jle
stc
sarb
daa
add
add
push
adc
and
cmp
add
mov
cwtl
in
pop
out
xor
adc
sbb
dec
xor
add
out
xor
aam
cmp
push
add
in
out
xor
inc
cmp
add
xor
ret
add
les
and
imul
xor
add
mov
fs
add
mov
arpl
mov
xor
push
arpl
mov
xor
fisubrs
jmp
call
dec
ljmp
in
sahf
xor
sub
lods
iret
bound
jmp
popf
jmp
push
jmp
insl
insl
and
shlb
jmp
pop
test
out
or
clc
push
sub
mov
es
jl
mov
cmp
out
insl
fstl
add
adc
and
add
movsl
mov
mov
jmp
rorl
lcall
push
idiv
sub
idiv
xchg
xchg
call
jns
add
mov
rolb
inc
cs
add
add
pop
test
adc
ljmp
das
add
adc
sbb
lret
call
das
inc
sub
jecxz
inc
setge
ret
test
outsb
pop
test
inc
test
jmp
pop
stc
or
inc
push
stc
xchg
jecxz
and
inc
push
stc
jl
sub
sbb
pusha
add
jo
hlt
test
bound
pusha
in
decb
xor
call
jae
pop
mov
and
stc
sbb
and
fsubs
or
dec
lods
sub
pop
push
call
pusha
mov
addr16
loopne
shlb
test
fdivr
jmp
xchg
add
loopne
shlb
clc
mov
ljmp
ret
cmp
mov
insb
lret
imull
ret
stos
addr16
mov
call
hlt
mov
fs
lods
xchg
jmp
outsb
inc
into
shl
mov
push
call
or
das
pop
dec
adc
cwtl
and
mov
orl
pusha
enter
pop
test
dec
pop
stc
in
cmpsb
xchg
out
out
out
stos
sbb
add
hlt
gs
test
je
xchg
out
ficomps
add
mov
add
sti
push
pusha
jb
insb
push
adc
negb
xor
scas
jmp
inc
xchg
sbb
adc
push
loop
mov
pop
push
lock
faddl
cld
sub
cmpsl
jmp
call
add
or
xor
je
cmpsl
jmp
in
cmp
push
icebp
or
mov
add
lcall
lahf
cli
in
je
mov
push
or
xor
add
call
stc
sarl
push
rorl
xchg
arpl
xorb
je
clc
out
inc
inc
inc
and
xor
or
add
inc
mov
call
jecxz
ret
cmp
jg
xor
xor
call
insl
call
test
add
xor
inc
and
xor
fmul
sbb
arpl
mov
test
leave
cld
pushl
loopne
in
sub
daa
hlt
mov
jecxz
shlb
pop
cwtl
xchg
add
xchg
sbb
jae
bound
pushl
lods
in
push
shll
xor
and
out
enter
arpl
or
aaa
sub
in
or
enter
dec
iret
das
test
jg
iret
iret
cld
jae
inc
lods
addr16
enter
enter
xor
cli
icebp
loop
add
add
in
jmp
mov
in
stos
out
add
sbbb
in
push
cs
sbb
pop
inc
mov
pop
adc
out
adc
in
jmp
rclb
sbb
push
loopne
dec
jg
jmp
aas
or
fucom
sbb
adc
mov
push
pop
dec
inc
lea
add
sbb
mov
dec
dec
add
xor
add
inc
repnz
add
jmp
mov
nop
call
call
cmp
movsl
movsb
and
stc
mov
inc
pop
out
fstps
stc
popf
mov
or
out
add
loope
and
decl
and
inc
jecxz
stos
call
adc
ss
test
loope
mov
dec
dec
or
add
xor
call
das
hlt
or
adc
ret
push
inc
xor
idiv
xchg
fldt
and
and
stos
add
fwait
fwait
clc
push
cmp
das
pop
mov
xor
call
je
ljmp
inc
std
addr16
clc
add
add
sahf
insb
testl
add
sar
test
xchg
fnstenv
add
pusha
inc
inc
lods
jg
inc
das
add
jmp
inc
add
idivb
fisttps
add
out
test
jmp
mov
add
sahf
clc
in
inc
je
dec
add
daa
sub
xchg
std
jmp
mov
enter
loopne
mov
enter
add
pop
les
dec
cld
mov
imul
clc
dec
sbb
imul
inc
push
test
sub
cmp
js
or
mov
ds
out
xor
add
loop
sbb
fcmovbe
neg
jo
fcompl
fnsave
clc
movsl
xor
sub
add
movsl
fcmovb
push
jne
cmp
push
dec
fisubl
jg
rcrl
clc
cmp
ret
xchg
cmpsb
fisttpl
add
arpl
aam
adcb
int
out
adc
rcll
push
icebp
es
lds
ret
ds
add
icebp
ljmp
sub
repnz
push
inc
inc
jmp
movl
add
add
mov
std
sub
adc
stc
sbb
bound
mov
and
out
xor
aam
lods
mov
out
xor
fstpl
fldl
aad
fadds
cltd
js
into
pusha
xchg
jmp
cld
add
shll
cmp
in
fs
pop
xor
fidivl
push
jae
in
push
incl
add
shl
push
cmpsl
aas
testl
mov
add
xor
inc
push
dec
mov
sub
adcb
add
jnp
adc
mov
insl
adc
rorl
mov
divl
ds
mov
xor
outsb
call
mov
push
ret
dec
mov
test
jne
ds
adc
rolb
sub
adc
add
ret
add
mov
cmp
push
pop
jmp
repz
adc
clc
mov
adc
sahf
mov
sub
or
mov
test
lret
adc
add
cmp
mov
lcall
fcomi
clc
pop
aam
jae
jbe
or
cmc
add
divb
aas
jmp
test
lret
ret
std
adc
lods
push
cmp
or
pushl
arpl
jge
inc
jg
fisttps
and
scas
sub
mov
or
fmuls
and
inc
or
subl
aad
jg
pop
sub
mov
dec
out
jmp
mov
test
xchg
mov
lods
mov
repz
enter
add
ja
jg
cli
aad
sub
enter
aad
inc
ret
cld
loope
ret
mov
bound
sub
or
and
stos
or
aaa
jl
lods
fbstp
test
test
push
leave
dec
cli
xlat
test
dec
fs
sbb
test
fistps
push
in
dec
stc
cli
add
out
notl
xchg
loopne
test
orl
ds
jb
stos
lret
adc
cmc
icebp
enter
ftst
in
aas
les
xlat
bound
leave
dec
out
test
xlat
imul
fsubrs
stc
es
jge
sub
in
lods
lds
add
stos
add
mov
cli
xor
imul
add
mov
ret
dec
call
sbb
sub
subb
out
enter
sahf
stos
add
xor
jne
mov
and
sti
rcll
cmp
cltd
inc
idiv
inc
sub
andl
rcll
lods
and
sub
add
repnz
stos
hlt
add
test
addl
xor
xchg
stos
sbb
add
subb
push
jmp
clc
outsl
fmuls
std
adcb
jmp
add
push
cmp
stc
addr16
cmpl
ljmp
call
cli
sub
inc
je
dec
shlb
shl
adc
jp
data16
push
jbe
call
call
mov
dec
cmp
shlb
add
jp
and
push
enter
jne
wrmsr
jne
pop
fcoml
xchg
add
test
sbb
xchg
sub
fs
mov
gs
out
mov
push
jg
or
sbb
jecxz
in
ljmp
sbb
xor
or
out
scas
or
mov
pop
jmp
clc
dec
cmc
ret
or
aam
add
add
out
fwait
popf
out
push
pop
sbb
pop
cmpsb
jne
loopne
icebp
bnd
popa
jle
sub
std
rcll
mov
inc
call
out
addb
pop
fcoms
lea
adc
jle
lods
aam
jge
mov
cmc
fs
rcrb
div
lods
mov
mov
mov
jbe
xor
xchg
push
push
add
mov
call
rorb
mov
xchg
add
pop
jg
mov
out
aad
add
out
insb
fstpl
cli
mov
sub
popa
jmpw
push
data16
fucomp
pusha
stc
hlt
push
and
ret
call
dec
clc
test
test
stc
xchg
push
adc
lahf
push
mov
fwait
mov
and
add
xor
test
out
sub
adc
lret
inc
idiv
nop
cmp
push
mov
cmp
add
aas
dec
push
aad
ljmp
jnp
add
xor
iret
pop
sbb
test
mov
fcoms
ds
jmp
mov
dec
xor
add
add
in
and
adc
mov
jb
mov
mov
ljmp
sub
xchg
cmp
or
sbb
lcall
inc
mov
jns
dec
repnz
arpl
mov
lret
dec
sbb
outsb
mov
stc
or
or
push
enter
cmp
jle
ja
out
lds
add
pop
loop
clc
test
aas
jmp
outsb
mov
xor
mov
mov
ds
bswap
inc
sbb
mov
xor
dec
sub
dec
xor
sub
jge
pop
push
fldenv
into
arpl
or
pushl
lcall
sbb
aad
or
xor
mov
pop
int3
mov
add
pop
push
es
ljmp
and
outsb
sbb
adcl
mov
punpckhdq
mov
inc
or
xor
jmp
mov
cmpl
add
mov
call
sbb
push
add
sub
push
sbb
mov
add
mov
je
push
adc
add
sub
stc
cld
pusha
cmp
mov
aaa
mov
cmc
test
jo
scas
out
mov
jno
sbb
jo
xor
mov
add
cltd
add
xor
or
xor
push
sub
lods
sbb
decl
insl
cmp
scas
call
or
mov
mov
je
add
dec
push
or
xchg
add
dec
int3
xchg
mov
ljmp
call
ds
xor
ja
mov
jmp
out
pop
add
rol
xor
ss
clc
xchg
and
sbb
dec
mov
jg
inc
iret
lds
outsl
repz
test
push
mov
sti
inc
andl
add
mul
in
test
shlb
bswap
adc
in
cld
test
ss
jl
rolb
jb
dec
mov
or
dec
andl
pop
test
pop
push
popa
lret
pop
cmp
mov
sbb
cld
out
or
stc
addr16
popl
pop
fcomps
ficompl
sbb
xor
add
add
cmp
xchg
das
ss
mov
jge
aas
sbb
mov
adc
pop
ja
xchg
xor
inc
insb
insb
push
jnp
int
out
inc
divl
lds
ds
cmp
xor
pop
cmpsl
cwtl
jl
int
cmpsl
js
mov
xchg
in
js
dec
push
xchg
or
stos
cld
outsl
idiv
in
lret
loope
test
into
add
add
lahf
mull
mov
cmp
sbb
mov
call
xor
out
test
adc
out
xor
addr16
jbe
inc
push
sub
mov
insb
fiaddl
stos
xor
out
aam
aas
jmp
stos
xor
push
out
shrl
sar
lods
icebp
xchg
popa
dec
popa
loope
dec
jnp
add
jmp
leave
jb
fbstp
fs
out
in
xbegin
cmpsb
pop
jno
test
scas
outsb
or
xchg
mov
add
aad
dec
or
cld
sub
dec
inc
cmp
daa
jmp
call
inc
fimull
call
inc
insl
je
repnz
or
scas
shrl
add
int3
das
adc
add
rorb
add
xchg
je
mov
jnp
nop
fs
roll
jecxz
xorl
push
leave
sbb
rcrb
sub
or
pushf
lahf
jmp
cld
push
and
aam
cmpsl
flds
adc
lcall
mov
push
mov
data16
jmp
add
xchg
adc
stc
outsl
cltd
mov
ret
mov
adc
adc
inc
loopne
hlt
insl
mov
pop
xor
sbb
lcall
inc
adc
sar
jmp
stos
push
pusha
and
out
push
cmp
jmp
mov
sbb
jbe
outsb
xor
add
mov
pop
mov
xor
cld
movsl
cmp
and
arpl
add
sbb
pop
adc
mov
jmp
jmp
mov
xlat
cmp
cmp
mov
call
lods
cmp
nop
xor
sub
es
loop
imul
or
stc
js
mov
dec
into
and
out
movl
sub
cmp
and
leave
mov
inc
pop
stos
add
push
jb
inc
in
imul
dec
aaa
bound
push
fistpll
push
add
call
xor
insb
je
sub
out
add
xchg
dec
push
test
lret
or
add
shlb
inc
jmp
cmp
adc
lock
cli
incl
scas
subps
je
dec
mov
stc
in
or
ret
push
je
push
jnp
call
jmp
add
jnp,pn
adc
scas
add
mov
data16
insl
aad
lock
mov
mov
lcall
das
testl
add
dec
sbb
add
xor
jle
adc
add
dec
lea
sbb
xor
xorl
push
sub
adc
in
pop
test
std
clc
fs
and
inc
andb
dec
and
adc
jecxz
cld
jmp
jns
xorps
std
mov
popl
or
dec
iret
shl
imul
mov
cmp
jmp
dec
add
iret
leave
in
dec
fwait
std
subl
pop
test
and
add
xor
mov
loop
lods
stos
aad
push
jo
mov
push
int3
jae
ds
ljmp
test
cmp
mov
call
or
bound
test
in
jmp
push
xchg
cs
fs
adc
mov
lods
add
cs
out
in
ret
xor
mov
roll
pusha
mov
add
xor
cld
ret
movsb
mov
sub
popa
pop
nop
or
xchg
in
mov
jl
fldenvs
ret
cmp
mov
int3
and
add
pop
push
cli
imul
out
es
sbb
pop
sbb
icebp
imulb
call
add
add
cmp
outsl
stc
out
xchg
clc
fs
dec
ja
jne
and
cltd
stos
iret
jb
lret
sub
xchg
jmp
test
sub
dec
cli
jmp
mov
insl
pop
and
subb
jmp
jmp
inc
int
dec
stc
jb
mov
int
fld1
xchg
mov
jo
add
imul
add
fs
add
pop
cmp
sub
addl
dec
sbb
in
mov
and
lods
mov
and
mov
decl
clc
pop
xor
idiv
sub
pop
mov
mov
les
in
insb
mov
dec
and
mov
sbb
and
dec
fdivrl
test
add
add
jg
add
xor
sbb
mov
shlb
pop
test
stos
int
jmp
stc
pushf
clc
test
xor
lret
es
enter
cld
mov
jg
lock
mov
add
andb
int
data16
cli
clc
adc
mov
mov
loop
add
add
cmpb
leave
cld
in
inc
push
call
in
mov
call
leave
or
ss
xor
dec
cli
subl
out
jmp
lcall
cmp
or
mov
xor
sbbb
xacquire
ja
mov
pop
add
mov
xor
in
data16
add
lock
or
test
pop
fisubrl
cmp
out
push
loop
mov
mov
xor
and
mov
xor
push
inc
in
fcompl
push
inc
xor
add
push
xor
jg
mov
lock
or
mov
mov
and
inc
or
add
mov
mov
and
inc
adc
dec
xor
notb
rol
rcrb
mov
sarb
mov
xor
or
xchg
mov
mov
mov
jmp
arpl
push
or
inc
mov
jnp
cltd
inc
sti
adcb
jb
jecxz
pushf
mov
cmp
mov
rolb
mov
add
imulb
addr16
jge
dec
xor
push
test
negl
test
pop
mov
push
cli
push
loop
push
push
adcl
cwtl
sub
mov
lods
in
shll
fcomi
cmpsl
cmp
add
gs
mov
add
xor
inc
jmp
jg
pop
add
dec
or
sbb
push
into
push
adc
xchg
jp
inc
repz
callw
dec
mov
stc
std
hlt
adc
fidivrl
outsb
or
insb
popf
add
jge
inc
jmp
ja
ljmp
outsb
xchg
add
xor
push
adc
add
outsl
lret
mov
xchg
add
jmp
andb
sbb
aad
xor
outsb
punpcklbw
jecxz
or
sub
fs
pop
add
jp
dec
and
add
cmc
ficompl
out
mov
jno
jle
xchg
mov
aad
jmp
arpl
jb
imul
xor
in
imul
add
repz
mov
lods
imul
and
les
hlt
dec
outsl
insb
jmp
push
jo
add
fnstenv
insb
scas
aas
mov
rcll
test
cmp
loope
xor
pop
sbb
sbb
fstps
leave
xchg
arpl
sub
add
cmp
clc
xor
or
xchg
or
or
lods
and
test
icebp
jl
jmp
inc
and
shll
lods
fadds
int
pop
lods
aam
mov
xor
or
pusha
mov
xor
decl
in
je
sbb
mov
call
add
jp
inc
rorb
mov
call
testl
ljmp
jmp
pop
push
mov
arpl
int3
push
repnz
int3
push
repnz
int3
xchg
lods
in
xchg
pusha
cmpl
sarl
jmp
and
repz
xor
inc
push
arpl
push
push
adc
or
add
movsb
iret
mov
jmp
cmp
bound
adc
sub
sarb
xchg
inc
int3
lock
add
stos
mov
dec
jge
int3
outsl
add
jb
out
loope
pushl
sub
bound
cld
ljmp
add
fidivrl
lods
xchg
add
sahf
or
add
cwtl
test
sahf
test
xor
pop
lret
out
mov
negb
jecxz
out
jmp
call
adc
in
add
sbb
push
cmpsb
in
mov
stos
mov
adc
or
stos
cmc
movd
subb
outsb
repz
mov
xor
sub
xor
outsb
add
out
mov
insb
shrl
and
lock
push
jecxz
mov
mov
in
and
lcall
fwait
sub
jmp
repz
fiadds
test
xor
jge
and
and
outsl
je
imul
push
cmp
jge
cmp
std
call
add
call
mov
pop
sub
xor
aad
stos
dec
or
pop
mov
test
fnsave
in
arpl
mov
aas
out
add
and
cmp
in
insb
or
cltd
repz
push
xor
test
cmp
les
push
mov
xorl
mov
push
incl
icebp
jnp
mov
rcl
ds
xor
add
mov
pushl
mov
lret
in
int3
or
add
mov
cmp
mov
mov
xchg
xchg
dec
call
jo
adc
add
stos
das
add
xchg
mov
push
mov
mov
add
enter
iret
jnp
sbb
pop
test
in
std
pop
les
sbb
push
push
rcll
pop
add
inc
inc
xor
jae
jp
dec
lds
xchg
mov
lret
cmpsl
push
ror
dec
inc
sub
xchg
cmp
bound
inc
mov
jns
scas
xor
add
scas
movsl
mov
push
pop
mov
scas
inc
out
stos
push
jmp
insb
or
movsl
out
cmc
jo
push
sub
out
cmp
jo
pusha
xor
add
jnp
mov
jo
jl
mov
push
xchg
lcall
ss
jns
add
xor
das
stos
sub
push
jge
cmp
out
add
fs
iret
jl
push
pusha
dec
adc
enter
lcall
fstpl
mov
jecxz
clc
bound
push
jno
mov
insb
jb
add
pop
and
or
and
clc
dec
fs
dec
cmp
mov
jmp
outsb
jo
add
inc
daa
push
dec
xor
cmc
icebp
push
pop
insb
jmp
nop
out
add
mov
stos
cmp
mov
test
adc
lods
int3
insb
jmp
nop
out
repz
push
mov
add
cmp
rcl
xor
repz
mov
loope
icebp
xor
orl
clc
call
pop
je
popa
insb
mov
sub
mov
add
cmp
mov
add
add
mulb
jnp
add
pop
fidivl
pop
jmp
sbb
inc
sbb
fmuls
and
or
mov
xor
insb
push
or
dec
mov
addl
scas
inc
xchg
sub
loope
xchg
inc
sub
pusha
jp
xchg
and
int
add
xorb
out
mov
add
cld
jmp
mov
jmp
jnp
xchg
mov
push
dec
les
dec
imul
jne
push
sbb
stc
je
stos
mov
jmp
xor
xor
std
jo
jae
insb
std
cmpb
jmp
cld
jno
xor
jp
imul
addr16
xor
addb
test
out
ret
cli
xor
dec
outsb
xchg
ret
ret
in
jmp
into
ror
mov
add
xor
mov
data16
scas
push
pushf
cwtl
push
pop
jmp
data16
in
xchg
ret
fidivl
out
xchg
mov
sbb
add
jnp
cmp
fbstp
sub
ret
scas
out
lock
addl
add
sub
jge
out
and
jb
xchg
push
pop
xchg
test
scas
hlt
mov
fisubrs
call
loope
pop
bound
jno
popf
call
xor
pushf
in
rcrb
xchg
and
cmpsl
les
push
mov
jg
jmp
jle
jmp
xchg
cwtl
ss
out
xor
push
xchg
add
cmp
test
imul
cmp
test
sbb
add
xor
cmp
pushf
testl
sub
sub
test
dec
push
dec
mov
bound
orl
aaa
orl
orl
fwait
adcl
sbb
add
fwait
push
xor
incb
inc
add
ss
je
jne
mov
xor
add
xor
sbbl
insl
inc
jns
pop
test
pop
sti
shrb
insb
push
dec
leave
push
jmp
push
call
pusha
pop
pusha
test
sbb
pop
push
call
pusha
movsl
das
rol
or
in
sub
pop
push
aam
test
mov
iret
ja
add
and
cmp
popa
fdivr
stc
push
push
add
pop
dec
dec
xchg
aas
push
pop
jmp
ja
adc
jge
xchg
scas
jg
cmc
add
js
push
adc
in
jne
mov
cmp
into
mov
lahf
xor
mov
rolb
jg
cmp
scas
movsl
lods
out
data16
pop
inc
pop
outsb
loope
jmp
add
outsb
stos
dec
jnp
lods
push
jg
and
out
in
scas
mov
cmp
lods
out
mov
inc
inc
lods
out
xor
xchg
push
outsb
repz
jle
or
xchg
mov
das
cs
pop
cmp
cmp
cmp
cs
xor
hlt
add
jge
clc
dec
jg
icebp
inc
jge
add
sbb
push
sub
loopne
xor
add
inc
bound
cmc
popa
bound
bound
repnz
mov
mov
ljmp
in
jmp
loope
xor
push
xor
leave
in
cmp
out
add
outsl
bound
adc
call
jmp
or
push
adc
sbb
lret
adc
add
call
decl
add
test
mov
jmp
mov
cwtl
add
ret
shrl
ljmp
xor
xor
xchg
mov
scas
xor
mov
loop
pop
loopne
and
hlt
jmp
mov
mov
add
push
shrl
push
jle
add
xor
add
roll
je
xchg
orl
jle
adc
add
mov
add
add
incl
jnp
dec
pop
inc
dec
pusha
push
dec
test
xchg
add
enter
clc
and
cmova
pop
cmp
push
xchg
cmp
inc
add
lret
jo
xor
sbb
int
dec
add
lret
scas
std
jmp
imul
jo
and
xchg
mov
aas
pusha
jmp
cld
push
imul
imul
inc
lahf
xor
mov
cmp
sbb
ds
loop
outsb
mov
push
jmp
outsb
mov
cmpsl
inc
jge
sti
insl
mov
add
outsb
push
jmp
pop
add
xor
add
cli
xor
negb
or
jmp
outsb
jbe
aas
out
pusha
lods
push
xor
rcl
add
aaa
pop
ret
mov
ds
push
push
cmpsb
adc
imull
sub
jp
push
add
mov
add
dec
or
jmp
push
es
fstps
pop
roll
add
lahf
clc
mov
cmp
fbstp
or
clc
sahf
sub
or
out
test
jmp
std
call
jl
xchg
inc
add
sti
imul
lods
dec
add
outsb
in
sbb
add
testl
call
imul
inc
loope
add
mov
dec
add
xor
push
xchg
shr
push
shll
push
ret
or
add
dec
pop
dec
xorl
pop
cmp
mov
add
nop
std
dec
push
pop
sub
add
sub
or
pop
jp
out
call
inc
add
push
or
push
mov
notl
jmp
int3
push
jmp
in
add
pop
sub
jge
stc
incl
cmp
adc
je
inc
cli
sbb
outsl
and
cmpsb
aam
adc
jle
in
cld
js
jg
fists
cld
jmp
repz
jg
call
pusha
ja
adc
dec
insb
pusha
cmp
xor
in
xor
jmp
inc
ja
das
jnp
test
add
outsb
ja
sub
add
adc
insb
or
sub
out
ja
mov
dec
inc
lds
outsb
gs
push
jo
movsl
mov
xchg
movsb
push
movsl
out
insb
idivb
mov
stos
outsl
movsl
imul
lods
mov
cli
cs
movsb
out
pushf
sbb
xor
cltd
outsb
imul
add
mov
jmp
add
mov
jle
sbb
cmp
pop
adc
out
je
rolb
fs
mov
xor
push
movsb
out
test
adc
call
les
and
test
jae
int
test
inc
add
jnp
or
jbe
ja
popa
outsb
test
inc
add
add
subb
imul
xor
jmp
cmp
jmp
mov
clc
out
mov
ret
call
call
mov
mov
mov
rcrb
cmp
and
inc
pop
mov
insb
loop
cmp
out
jmp
add
and
or
add
add
xor
inc
jle
adc
add
inc
mov
sub
insl
testb
mov
add
lock
dec
addl
inc
pop
or
xor
jb
inc
cmp
cmp
orl
ds
jge
cld
inc
loope
adcl
xchg
add
fisttpll
mov
jnp
dec
mov
adc
inc
sbbb
js
push
std
pop
xchg
push
pop
or
push
inc
insb
sub
fs
xchg
cld
shrb
je
pusha
pop
inc
cmpl
add
rclb
mov
xchg
xor
pusha
pop
jo
in
push
rorl
dec
inc
call
add
pusha
addl
clc
sbb
adc
adc
out
and
add
lods
jne
jmp
pop
dec
mov
sbb
out
loopne
mov
pop
xchg
mov
out
mov
pop
jns
cmp
add
inc
stc
or
outsb
pop
in
das
push
mov
cmp
jb
jmp
mov
out
jmp
push
add
add
xor
sub
xor
pop
add
pop
outsb
test
adc
xor
mov
add
pop
ss
jmp
popa
pop
jge
pop
mov
mov
push
hlt
dec
xor
or
push
or
ja
call
cltd
inc
mov
cli
add
clc
push
push
repnz
add
xchg
mov
mov
hlt
std
in
popa
stos
lahf
call
inc
add
stc
cltd
popa
pusha
hlt
testb
test
mov
mov
lahf
clc
out
jle
popa
call
call
mov
add
stos
ds
or
addb
mov
rcll
or
lret
lods
lods
push
inc
xor
mov
add
sti
decb
fnstenv
sub
popa
dec
mov
pop
pop
xor
mov
ds
ja
mov
test
in
aas
sarb
movsl
push
maxps
pop
inc
jne
pop
xorl
adcl
lret
test
jecxz
jmp
lds
jb
dec
cmp
in
or
and
add
xrelease
fiaddl
jle
dec
neg
pop
movsl
and
lret
daa
cmp
lret
pop
fs
aaa
dec
ror
das
fldl
decb
cld
mov
cld
jmp
pop
je
in
xchg
jo
in
xchg
test
jge
jmp
mov
or
add
mov
add
jne
fs
out
push
sahf
in
add
test
flds
outsb
push
pop
add
sub
movsb
fmull
icebp
xchg
fcompl
push
shrb
push
mov
mov
add
imul
xchg
pushf
das
cmpsl
sbb
and
inc
mov
pop
push
add
repnz
add
add
xchg
cmp
pop
dec
cmp
xchg
adc
add
aam
jb
loope
push
call
cltd
sub
mov
fwait
cmp
lods
pop
add
scas
push
mov
cmpsb
das
out
xor
call
mov
xchg
add
insl
sbb
pop
ret
call
add
pop
bound
adc
call
adc
dec
stc
fwait
clc
bound
adc
call
mov
call
sub
inc
rclb
stc
fwait
inc
sbb
inc
test
xchg
clc
decl
out
jmp
and
jnp
add
subb
rorb
cmpsl
cwtl
push
push
das
mov
add
add
das
add
inc
es
ret
jae
test
or
pusha
orl
cmp
mov
mull
inc
dec
mov
add
stos
mov
push
sub
clc
dec
ror
jmp
jo
ja
cld
pushl
outsb
xchg
jmp
cld
test
out
ljmp
jle
cmc
xchg
or
dec
add
pop
mov
insb
outsb
loope
test
sbb
clc
pusha
push
cmp
lods
dec
add
pusha
fisubl
jmp
lods
dec
fwait
mov
cld
test
push
hlt
xchg
cmp
test
push
push
adc
jp
add
inc
cmp
pop
push
or
push
jle
std
xor
add
xor
add
pop
dec
das
mov
pop
add
ljmp
add
aas
std
mov
add
in
jle
out
outsb
repnz
insl
repnz
mov
mov
mov
cmp
ret
es
jo
ss
lods
nop
mov
mov
mov
pop
ljmp
add
popl
out
and
mov
add
scas
add
movsl
test
add
pop
mov
ljmp
mov
pop
adc
in
lods
pusha
mov
pop
bound
insb
lret
lods
mov
mov
cmp
lods
stc
xchg
dec
xchg
xchg
push
lods
mov
daa
add
lahf
xlat
call
xor
jmp
popa
stos
mov
inc
popf
scas
cmp
add
popa
stos
lahf
fucomip
xor
jmp
pushw
call
mov
pop
add
xor
dec
data16
je
sbb
mov
add
stos
ds
xor
out
mov
push
divb
inc
cmp
bound
test
test
inc
add
out
orl
mov
orl
hlt
verr
jle
rclb
mov
jge
pop
addr16
incl
xor
add
or
add
test
add
ja
and
cmp
dec
out
sbb
push
dec
add
and
pop
xor
ret
cmp
add
adc
insb
jo
jg
cmp
jecxz
add
movsb
adc
sub
xor
imul
aad
cld
pushl
dec
syscall
lds
adc
cmp
dec
out
sbb
push
mov
fisubrl
push
push
sub
jmp
cmp
jg
sti
adc
pop
adc
stos
in
xchg
insl
push
mov
testl
add
out
nop
jno
mov
pop
dec
add
repz
cmp
ss
aam
cwtl
imul
sub
fisttps
insl
mov
call
fs
mov
cmp
adc
jle
and
out
int
lods
sbb
xor
fbstp
decl
jmp
push
out
ljmp
adc
jmp
add
adc
or
add
jae
add
adcb
add
daa
cmp
xchg
clc
push
inc
add
inc
add
fdiv
into
cwtl
cltd
pop
jb
idivl
add
stos
cmp
xchg
xchg
neg
call
in
orl
add
xor
jmp
jae
call
call
add
clc
call
test
cwtl
mov
pop
inc
adc
adc
push
or
push
mov
addl
inc
or
sub
or
bound
inc
test
or
pop
test
add
pop
pop
or
mov
aas
adc
repnz
mov
clc
add
cwtl
addl
dec
or
add
add
cwtl
orl
cld
pop
subb
stc
jmp
mov
pop
push
adc
inc
das
add
inc
nop
push
add
add
aam
popl
lahf
nop
xor
sub
or
jo
hlt
xchg
js
pop
xlat
push
inc
adc
lret
out
stc
ss
movl
jo
incb
add
cmp
mov
jmp
lock
jg
xchg
iret
pusha
pusha
lock
nop
add
pusha
pusha
hlt
lock
mov
iret
push
xor
add
in
outsl
in
fidivrs
sub
xor
movsl
test
jcxz
add
ljmp
das
shl
sti
cli
add
jmp
stos
cmp
inc
add
jecxz
in
repz
loop
and
movsl
cmp
fs
add
cmp
xchg
xor
loopw
jnp
sub
xor
movsl
pusha
xchg
lretw
in
sbb
mov
out
mov
xchg
fs
add
add
addr16
std
in
in
inc
rclb
add
call
test
adc
add
stos
inc
in
incl
popa
adc
inc
adc
inc
std
outsl
sbb
jmp
leave
stos
aas
pop
jno
aas
call
push
notl
jb
and
or
out
adc
and
pop
mov
add
bound
inc
push
cmp
mov
fldenv
xor
add
add
add
mov
dec
xor
push
mov
add
add
mov
loope
mov
mov
push
inc
cmp
rclb
jb
inc
add
xor
jbe
push
leave
lret
jnp
push
xor
add
sbb
popf
xchg
and
jae
test
je
add
jb
enter
add
add
std
sub
mov
add
mov
clc
push
imul
mov
aam
push
push
lret
cs
xchg
loop
clc
rcrl
aam
sahf
cltd
cld
xchg
stc
subb
cld
jmp
call
or
cld
jmp
xchg
aas
fists
cmp
hlt
ss
adc
add
adc
clc
jb
add
sbb
adc
add
addl
mov
call
daa
sub
add
sub
mov
int
mov
pop
aas
jecxz
sub
fistps
mov
jns
pop
outsb
cs
fimuls
sub
fiaddl
test
cmp
mov
add
add
insl
ss
pushf
pop
jmp
repz
and
ret
into
ret
mov
cmp
out
insb
cmc
push
jns
sub
and
inc
lret
xor
add
jne
jecxz,pn
call
shll
dec
call
sub
adc
or
clc
jmp
scas
and
daa
jmp
das
jb
add
sub
je
jecxz
jno
mov
das
adc
std
test
fstps
xchg
das
mov
cmpsb
cmp
leave
arpl
pop
jb
sub
mov
rorl
aaa
movzbl
inc
sub
sub
in
xchg
mov
addl
jo
cmp
mov
xorb
add
aam
orl
mov
push
mov
pop
add
lret
out
das
test
add
inc
pop
add
inc
mov
add
xchg
adc
add
out
pop
test
ds
adc
inc
add
test
pop
inc
sbb
imul
je
cmp
xor
jb
mov
jmp
xor
ret
add
adc
cli
pop
pop
lock
jns
dec
lret
es
and
xor
inc
and
lods
xorl
sahf
dec
cmpsl
push
pushf
mov
cmp
cld
test
cltd
dec
sbb
fucomi
xor
ret
out
test
xchg
mov
dec
adc
and
xor
add
push
add
cld
jl
pushf
pop
jae
sbb
xor
jmp
xor
and
sbb
sbb
jne
mov
xor
inc
adc
sti
inc
insl
xor
and
push
add
xor
add
mov
adc
xor
add
testl
inc
pop
scas
add
mov
adc
add
repz
and
dec
lock
sahf
fiaddl
mov
xchg
sub
repz
sub
xchg
fwait
add
xor
inc
in
jno
loope
cmp
in
mov
call
push
iret
cli
push
or
in
cmpsl
mov
rolb
push
test
in
sub
add
stos
sub
das
scas
xor
pop
mov
outsb
adc
jb
cmp
cmpsl
sub
divl
xor
mov
call
lock
or
jo
clc
push
and
test
or
shl
adc
scas
pop
mov
call
lods
icebp
lcall
clc
call
xor
push
add
add
je
insb
repnz
jnp
mov
orl
or
in
pushl
mov
mov
sub
add
addb
add
push
mov
or
je
jae
mov
add
mov
incl
mov
jle
mov
add
cltd
cld
mov
cltd
cld
jmp
pop
icebp
subb
incl
add
lock
cld
cmc
push
rcl
xor
jmp
mov
imul
fnsave
data16
fsubr
push
lcall
out
lcall
adc
adc
inc
pop
add
dec
pusha
dec
inc
mov
mov
push
jmp
jge
jecxz
inc
je
fs
adc
insb
jb
and
or
mov
add
add
jle
out
mov
jecxz
aad
inc
mov
out
int
out
inc
add
push
stos
dec
mov
insl
shrl
movsl
sub
insl
fbstp
jae
add
mov
hlt
imul
js
cmp
hlt
das
sub
repz
sarb
cmp
in
das
or
add
repz
bnd
cmp
in
das
test
adc
sarb
cmp
popa
sti
sub
mov
lock
inc
cmc
jae
pop
popa
fldt
mov
shrl
popa
mov
cmp
cmc
xor
pop
popa
xchg
sub
mov
xchg
lods
inc
aad
clc
pop
popa
xchg
sub
adc
add
addr16
sub
das
mov
push
pop
inc
call
xchg
aaa
clc
jbe
out
pop
sub
add
scas
inc
add
jo
scas
adc
pop
fimuls
push
ret
jnp
and
pop
test
dec
mov
std
and
pop
dec
arpl
fidivl
mov
inc
rorb
dec
jo
pop
cmp
push
ret
mov
mov
push
or
pop
xor
cmp
add
pop
test
cmp
test
add
shl
and
cmp
xor
dec
cmp
stc
inc
pop
addl
inc
sbb
outsb
insb
add
jmp
je
sbb
mov
mov
idivl
aaa
add
cld
dec
pusha
lds
xor
add
ret
xchg
ss
sarb
faddl
adc
jle,pn
add
cltd
and
pusha
push
sbb
push
adc
jmp
inc
adc
xchg
xchg
cltd
cld
mov
ret
in
jp
insl
ljmp
jmp
and
add
jmp
inc
sbb
mov
jl
xor
cmp
mov
pop
push
add
rcr
mov
sub
outsl
andb
lods
xor
outsl
dec
call
pop
outsb
fcoml
mov
pusha
popa
sbb
out
jmp
push
cmpsb
outsl
hlt
into
xchg
pusha
push
sbb
jl
and
scas
xchg
pop
pop
rep
cmpsl
push
fs
jo
aaa
stc
pop
dec
pop
leave
jge
dec
xlat
cltd
mov
pop
xor
add
mov
lock
insl
fistpl
lea
pop
add
xchg
icebp
clc
fwait
pusha
lock
jb
push
test
int
dec
mov
test
inc
lods
ja
daa
bound
icebp
clc
cmp
pop
jo
in
jl
icebp
enter
xor
or
sub
scas
pop
add
call
scas
fwait
call
icebp
test
icebp
clc
mov
add
call
add
icebp
call
xor
jmp
ret
and
pop
inc
jmp
in
pushl
stos
mov
shrl
or
mov
dec
add
mov
or
cmpsl
pushf
push
add
addb
lahf
jl
add
add
or
and
ljmp
pop
pop
xlat
push
ret
mov
mov
inc
fnstcw
inc
xchg
int3
out
mov
push
pop
jp
idiv
movsl
loopne
in
jb
add
cld
idiv
inc
rclb
adc
jmp
mov
pop
jmp
iret
lret
aaa
into
iret
lret
das
sbb
or
clc
fcomip
leave
lahf
imul
mov
xor
bound
mov
add
adc
daa
cmp
push
pop
popl
bound
outsl
out
xor
jb
faddl
notl
adc
or
pushl
xor
daa
xlat
jl
lock
incb
adc
clc
insb
xor
ret
ret
pop
jmp
nop
mov
lea
iret
xor
xor
add
inc
stos
sbb
bound
inc
cmp
push
ret
test
imulb
xchg
jb
add
jle
mov
jmp
mov
or
mov
aaa
aas
stos
jg
push
out
cmp
mov
cmp
inc
mov
mov
mov
hlt
add
data16
repz
mov
add
add
sub
mov
jns
lods
mov
xor
sbb
call
cwtl
mov
adc
and
loopne
ret
loope
icebp
xor
call
flds
pusha
mov
jns
movl
mov
scas
sub
imul
pushf
arpl
sub
add
mov
jge
jmp
push
adc
ljmp
cmp
inc
pop
mov
xchg
sbbl
jp
and
daa
push
mov
or
mov
sub
dec
int3
sbb
bound
arpl
or
mov
or
pop
pop
outsl
or
mov
or
cmp
pop
fnsave
call
add
sarb
jge
jbe
addl
inc
and
loopne
roll
add
test
add
je
pop
jmp
adc
push
pusha
mov
test
mov
cmpsl
lret
inc
dec
mov
dec
push
pop
jmp
cld
shrb
mov
jmp
lret
daa
sbb
mov
ss
ret
add
sahf
mov
push
push
and
cld
jmp
movsb
test
cwtl
mov
push
data16
pop
push
mov
and
mov
ss
fdivs
jmp
les
test
mov
dec
mov
fbld
scas
push
lods
mov
inc
add
add
rcrb
repnz
jmp
out
insb
ficompl
shrl
fldt
fadds
fs
dec
mov
cmpsl
lods
pop
data16
push
cltd
inc
xchg
out
and
xchg
stos
lcall
xchg
push
pop
inc
mull
and
mov
push
sbb
add
dec
jge
repz
sbb
mov
add
add
xlat
mov
jg,pn
inc
stc
mov
jp
jmp
push
push
in
out
xchg
push
fldcw
mov
lretw
sbb
xchg
mov
mov
jmp
test
insl
jbe
add
outsl
add
jecxz
cmpsb
xor
call
xor
or
call
add
xor
add
lods
inc
or
and
inc
adc
out
add
fnstenv
mov
mov
call
inc
cmp
mov
inc
loopne
cmp
add
add
jb
add
gs
jge
xor
mov
sub
rcrb
mov
add
mov
adc
xchg
jnp
cmpsb
sub
stc
and
add
rolb
or
adcl
sub
or
std
idivb
pop
mov
movsb
std
out
gs
add
popa
and
mov
mov
pop
sbb
rcrl
dec
call
jo
mov
sbb
cwtl
mov
call
adc
jmp
cmp
add
and
adc
jmp
cld
subb
stc
shrb
test
test
cld
jmp
mov
les
xor
rcrl
jg
xorl
jp
das
out
mov
sub
shrb
sub
stos
call
daa
movsw
call
add
xor
gs
jns
ja
add
xor
add
stos
jmpw
in
mov
jg
xorb
lretw
test
jecxz
push
repnz
mov
repnz
ret
bound
jns
js
xor
jb
sub
stos
loopne
dec
test
xchg
stc
push
jge
add
push
jbe
insl
mov
ret
sub
test
xor
jne
push
outsb
jo
punpckhwd
and
jmp
out
je
arpl
pop
cmpsb
cmpsl
sbb
daa
scas
xor
scas
clc
xor
jb
push
subl
test
sub
xchg
cli
les
adc
xor
add
jb
or
add
test
movsb
push
in
dec
xor
push
or
dec
ret
push
ljmp
test
cli
incl
mov
jne
xchg
sub
push
xchg
xor
pmuludq
testl
out
jp
pop
stos
dec
clc
inc
pop
jnp
xor
mov
xor
adc
das
add
push
mov
mov
add
jb
or
dec
cmpsl
cvtpi2ps
adc
out
cld
cmp
arpl
mov
pop
int3
cmove
cmp
cld
test
and
sub
inc
cld
cld
lods
mov
in
push
mov
sbb
jp
mov
subl
add
data16
cwtl
push
jge
cmpb
xchg
jl
pop
xor
pusha
inc
in
sub
push
test
add
or
xchg
inc
mov
out
cli
inc
adc
xor
add
cld
clc
jnp
test
lahf
in
in
cltd
test
add
ds
xor
jle
jns
dec
repz
idivl
xor
mov
jmp
jae
es
ss
scas
imul
xor
add
rolb
add
cwtl
xchg
out
gs
in
adc
decb
push
stos
lods
cmpsb
aaa
inc
test
sbb
jmp
add
test
mov
jb
sbb
stos
pop
push
loopne
mov
call
stos
inc
loope
pop
sub
test
test
loope
aas
stc
call
xor
jmp
add
fdivs
add
call
xor
bound
icebp
test
mov
in
mov
and
scas
mov
jmp
insb
imul
ljmp
adc
inc
std
pop
jmp
xchg
test
outsb
add
inc
hlt
dec
clc
push
cmc
cmp
push
inc
xchg
inc
dec
add
addl
scas
repz
clc
push
imul
ret
sbb
repz
fisttpl
ljmp
clc
sbb
pop
mov
and
sub
sub
lods
ja
xchg
xor
xchg
sub
call
mov
add
sub
clc
jmp
cmpl
incl
add
fadd
jns
jmp
jbe
sti
inc
jne
pop
incb
jb
mov
test
add
jae
loop
inc
and
push
aam
popf
mov
inc
sub
push
clc
push
bound
lahf
jae
cld
sbb
mov
add
or
je
adc
sbb
sub
call
jo
lods
xchg
add
inc
cld
call
push
out
cltd
push
out
inc
aas
outsb
inc
lret
mov
cmp
ja
adc
xor
add
clc
cmpsb
add
xor
jmp
out
jmp
mov
add
mov
add
xor
xlat
xor
xchg
out
push
jno
sub
xor
jne
inc
cmpsl
jl
gs
inc
lret
mov
jp
add
outsl
clc
ret
test
clc
inc
outsb
sub
faddl
inc
pop
pop
xchg
mov
in
scas
stos
lock
push
insb
icebp
shl
loop
insb
insl
push
jge
psubsw
xor
std
std
mov
jne
add
bound
pop
mov
call
mov
icebp
jno
repz
jmp
jmp
arpl
or
add
call
adc
test
call
xor
mulb
inc
add
call
push
xchg
jmp
les
fs
add
pop
mov
popf
inc
cld
leave
scas
lret
loopne
mov
or
mov
adc
jle
mov
cmp
fstps
fwait
sub
push
movsb
addl
mov
add
add
inc
adc
cltd
add
out
call
das
add
xor
push
inc
add
leave
push
dec
shlb
orl
dec
clc
dec
hlt
pop
mov
xor
add
xor
xorb
jge
xor
test
xor
add
push
jb
insl
dec
mov
xor
xchg
hlt
xchg
popf
fsubrl
loop
test
add
cwtl
pushf
punpckhdq
inc
jo
mov
pop
into
push
stos
decl
mov
in
pop
mov
ds
sbb
jmp
cld
jl
push
cld
or
idiv
sar
jmp
cld
out
sahf
cld
jmp
hlt
xchg
jne
fcmovnu
push
clc
lods
pop
idiv
mov
jp
xor
cli
push
add
scas
push
clc
ljmp
xchg
xor
das
pushl
xchg
lahf
punpckldq
add
add
scas
mov
xchg
push
mov
jo
out
jmp
sub
xor
jg
cmp
add
mov
pop
mov
stos
cmp
jecxz
pop
xchg
das
mov
addr16
lahf
outsl
outsl
movsl
mov
sti
ljmp
add
insb
pop
pop
out
out
add
call
in
jmp
jmp
in
pusha
clc
into
insl
out
out
sub
or
add
bound
cmp
insl
shr
xor
jmp
cmp
pop
scas
test
fcompl
scas
xor
out
repz
jmp
push
insb
out
add
out
clc
jb
in
fsubp
mov
int3
inc
gs
jp
call
push
out
insb
stc
pushf
dec
mov
add
mov
or
adcl
dec
push
stc
stos
add
jle
call
inc
xor
push
jmp
cli
xchg
cwtl
sub
push
mov
addl
add
mov
jno
push
add
adc
add
mov
mov
call
in
inc
cld
leave
insl
outsb
add
ds
inc
lock
outsb
addl
mov
add
in
inc
hlt
cmp
testl
xor
test
fs
inc
xchg
jo
cld
rclb
push
jae
mov
out
push
cld
ljmp
imulb
or
and
jmp
js
icebp
push
cld
or
cmpsl
dec
das
into
mov
or
dec
clc
call
movb
stc
jle
pop
std
jmp
ret
xchg
mov
jl
xchg
mov
push
call
out
sub
pop
cmp
cmp
popf
push
xchg
inc
loop
xlat
imul
add
xor
mov
jmp
sbb
clc
and
movsl
pop
in
movsl
xor
inc
jecxz
add
out
push
aaa
pop
add
testb
xchg
outsb
out
jl
push
in
and
inc
cmp
cmpsl
add
movsl
jmp
outsl
cmp
loope
aas
inc
mov
loopne
in
imul
pop
aas
xor
inc
sbb
xchg
and
call
addl
or
xor
es
push
inc
dec
lock
cmp
xor
fs
aam
call
gs
std
call
mov
xor
jmp
int
dec
add
pop
out
add
out
test
repnz
insb
test
addl
push
add
jmp
shll
pusha
cmp
sub
add
pop
push
mov
icebp
xchg
orl
sbb
or
mov
insb
loopne
jge
mov
mov
jnp
cs
clc
cmp
cltd
or
lea
add
add
bnd
cmp
fdivrs
popa
lea
clc
fimull
mov
mov
rcll
andps
dec
xchg
push
mov
mov
cs
sbb
xchg
push
stos
lock
or
iret
in
dec
ja
inc
scas
jne
xor
mov
call
mov
mov
jnp
hlt
mov
add
cld
jmp
and
jmp
js
jecxz
cld
or
shlb
hlt
test
outsl
repz
fidivrl
sbb
test
xchg
and
lret
mov
cld
in
fs
js
mov
add
in
das
jo
iret
mov
in
mov
out
dec
mov
lods
add
cmc
xor
imulb
sub
jne
outsl
fs
fidivrl
sub
add
lcall
das
push
pop
push
aaa
out
gs
lahf
xchg
add
sub
outsl
mov
or
pop
cmpsl
scas
pop
pushf
andl
repnz
in
sbb
out
jmp
call
add
imul
pop
neg
stos
insl
jno
ljmp
mul
pop
aad
cmp
push
call
inc
std
cmpsl
dec
add
push
cld
clc
gs
repz
and
call
pcmpgtd
bound
push
enter
std
call
call
dec
in
jnp
jmp
fdivr
sbb
add
xchg
mov
adc
jge
das
insl
in
mov
arpl
cmp
aas
jp
xor
testl
lods
stos
mov
shrb
add
xchg
stos
mov
ret
xchg
cmp
add
ljmp
xorl
add
push
test
push
dec
movl
sbb
add
call
inc
lods
mov
test
nop
testl
jmp
jbe
jmp
adc
lcall
add
push
mov
cmpsl
mov
mov
jmpw
dec
jmp
add
loopne
fsubrs
jae
push
movsb
xchg
shr
cld
jmp
xorb
cld
shl
cld
incl
add
sbb
in
jg,pn
addr16
insb
push
adc
or
test
rolb
sbb
xchg
fimuls
jb
hlt
test
xor
xor
mov
xor
mov
mov
hlt
add
and
add
data16
in
adc
cmp
inc
xor
add
xor
enter
add
pop
and
jmp
pop
push
aas
cltd
out
jmp
push
mov
jl
out
jmp
lahf
in
lods
scas
mov
lods
sahf
lds
ficoml
stos
sub
pushaw
ljmp
pop
frstor
jmp
jge
sti
bound
add
push
cmp
mov
add
call
in
xchg
xor
cmpsl
sahf
out
frstor
xor
aam
subl
mov
jmp
hlt
mov
jmp
scas
push
pop
pusha
cmp
dec
add
sbb
movsb
sub
call
jno
jecxz
dec
pushf
int3
shll
add
stos
rorb
add
cs
dec
data16
cmp
lfs
sarb
outsb
pop
pop
xor
add
adcl
sbb
shrb
inc
fcompl
lcall
int
ret
cli
stc
call
add
add
adcl
mov
mov
pushf
sti
rorb
dec
mov
add
loopne
dec
add
add
or
xor
pop
data16
mov
in
cltd
test
jo
mov
ljmp
in
fadds
add
dec
stos
rol
jb
push
add
jmp
cld
out
dec
cld
incl
into
adc
inc
fwait
clc
mov
ret
add
inc
cld
call
add
incl
in
inc
or
cld
out
push
cld
jmp
sbb
test
xor
add
push
xchg
jg
jmp
pushw
das
xor
xchg
xor
add
cmpsb
in
mov
push
and
sub
jo
add
lahf
fdivrs
hlt
mov
in
out
scas
push
or
add
add
add
icebp
xor
clc
mov
stos
popa
lret
xlat
xor
jmp
out
jmp
test
add
jg
dec
out
insl
lret
addr16
xchg
mov
test
popa
mov
sahf
jo
fs
stc
lock
ffree
push
call
push
out
bound
insl
fbld
clc
cmp
shlb
call
add
stos
xor
pop
fwait
out
icebp
sahf
jo
gs
clc
fwait
cmpsl
pop
loopne
scas
jmp
cmpsb
push
pop
jo
test
jg
mov
inc
lock
ljmp
call
je
jecxz
cmp
rcr
stos
inc
hlt
ret
lea
add
lods
rorb
es
dec
mov
add
add
outsl
sti
shr
outsb
push
sarl
add
cmp
adc
pop
mov
stos
shll
inc
fdivl
sti
inc
adc
cmp
add
cs
loopne
jmp
adcl
test
mov
cwtl
sti
rorb
mov
je
or
mov
or
add
fs
rcrb
das
jg
pushl
mov
ljmp
in
cltd
test
rolb
into
cmp
sub
cld
fldt
inc
cld
jmp
push
mov
mov
movsb
adc
adc
inc
cld
test
jns
pop
mov
out
pop
cmpl
pop
test
cld
incl
add
loope
stc
push
and
leave
mov
xor
mov
pop
in
xlat
loope
adc
inc
das
out
jmp
push
in
jge
repnz
mov
jmp
out
jmp
dec
xchg
cmp
imul
out
mov
movsl
and
outsl
sbb
outsl
outsl
ds
adc
pop
cmp
out
jmp
fs
add
in
pop
out
xor
scas
ret
push
ret
outsl
call
pusha
ds
stos
mov
punpckhwd
dec
sti
stos
ljmp
outsl
jmp
xor
cli
inc
test
push
sub
jb
icebp
xchg
repz
xor
add
scas
dec
fnstenv
fistl
daa
lods
inc
rcrl
aas
bound
add
scas
dec
mov
arpl
jmp
jl
fucom
lods
inc
xchg
xor
mov
loop
push
lock
imul
call
call
push
clc
add
mov
lock
mov
mov
inc
in
jmp
mov
add
pop
stc
incl
test
add
push
xor
orl
mov
cmp
add
xor
mov
mov
lret
loopne
mov
or
mov
and
sahf
addl
cmp
add
pusha
stc
inc
mov
jb
sub
out
xchg
pop
dec
sub
movd
inc
xor
inc
movsb
popf
in
inc
cld
in
out
and
dec
add
jecxz
das
clc
bound
jge
fildl
inc
jnp
aas
loopne
or
sbb
pop
rol
mov
pusha
mov
pushf
cmp
pusha
mov
add
xor
jg
or
add
mov
push
mov
inc
idiv
in
inc
jg
repz
add
xor
repz
int3
arpl
ret
loope
aam
add
lods
insl
add
xor
dec
sahf
push
fwait
xchg
outsl
xor
mov
or
sti
push
add
ja
xor
fcoml
inc
add
inc
jmp
jmp
mov
mov
cmc
repz
push
cmpsb
xor
xchg
xor
xor
shll
outsb
jmp
mov
add
test
pop
mull
jecxz
pop
adc
aaa
adc
push
clc
jmp
std
xchg
pop
jmp
ja
sbb
call
push
clc
jmp
aad
cli
es
test
in
or
popa
xchg
arpl
sti
jo
inc
xchg
call
loopne
push
push
lods
dec
leave
add
sub
andnps
lods
add
aaa
jnp
insb
pop
adc
fucomp
fcompl
mov
dec
or
sarl
add
popa
clc
call
and
push
shl
in
fstpl
push
clc
mov
je
add
and
sub
push
adc
push
sbb
inc
push
clc
mov
lahf
insb
xor
test
inc
adc
add
xor
or
dec
jb
push
xorb
psubusw
or
add
call
mov
inc
addl
pop
insb
or
call
add
jmp
inc
or
dec
cld
jmp
or
ret
sub
mov
or
add
popf
sbb
dec
cld
call
add
jmp
ss
inc
xchg
pop
dec
cmpl
lea
jne
mov
lock
fs
test
ret
into
inc
fsubrs
adc
clc
xor
test
ret
sbbb
dec
pop
cmp
jecxz
cmp
xor
push
xor
xor
push
mov
push
push
scas
xor
push
add
daa
xor
push
pop
xor
pop
xor
rdtsc
cld
push
pop
xor
pop
pushl
aas
pop
divl
movsb
push
out
xor
push
fbstp
push
pop
xlat
xor
pop
iret
xor
xor
mov
xor
dec
scas
xor
dec
pop
xor
push
rdtsc
xor
pop
xor
push
pushl
fistl
xor
out
xor
xor
add
fbstp
add
adc
pushf
mov
add
cmp
lret
cmp
inc
push
aad
cmpl
test
dec
lds
jae
inc
adc
test
add
mov
mov
loop
bound
adc
jl
xorb
call
nop
pop
lods
cmpsb
xor
inc
jp
clc
sbb
mov
add
add
jl
sbb
sub
sub
mov
dec
in
sub
add
bound
stc
notb
add
or
or
icebp
pop
mov
arpl
mov
inc
addl
dec
pushl
mov
sarb
push
ret
ja
in
jno
dec
mov
mov
cld
sbb
clc
incl
add
mov
jnp
xchg
inc
cld
subl
les
mov
cld
mov
xchg
add
jmp
sub
lcall
jmp
and
cmpsb
lcall
daa
or
jmp
or
push
jo
jg
ffreep
xchg
dec
lods
sbb
cld
out
add
xlat
mov
jo
mov
jne
data16
or
mov
dec
mov
xchg
sarl
cld
push
sbb
mov
outsl
mov
scas
dec
jle
out
sbb
mov
dec
aaa
pushf
xor
lea
fidivrl
dec
insl
aas
jecxz
cmpsl
mov
insb
and
jns
add
in
movsl
jns
cmp
sub
out
jmp
push
jns
jmp
shlb
jp
ss
js
mov
mov
sub
add
xor
mov
mov
and
outsb
push
das
pop
loope
mov
mov
gs
jns
dec
decl
xchg
mov
test
xor
insl
jbe
out
loop
cmp
int3
ret
in
jne
sub
cmpsb
or
outsl
mov
stc
repz
cld
out
insl
dec
clc
push
xor
push
nop
mov
sub
jae
fbld
push
cli
ds
in
adc
je
push
lods
jo
xchg
jbe
push
adc
add
mov
dec
jl
push
xor
enter
cltd
add
jge
lahf
inc
test
add
testl
inc
xchg
or
mov
arpl
loope
mov
mov
and
sti
cltd
pop
test
or
ficompl
mov
gs
mov
add
add
fstpl
lret
cmp
add
hlt
add
xchg
das
add
jmp
ror
sub
mov
lret
pop
lods
jns
push
hlt
notl
mov
sbb
mov
sbb
clc
adc
cld
xchg
rorb
call
jmp
mov
add
add
sbb
rorl
inc
jmp
jns
push
shll
bound
andb
clc
xchg
pop
cld
insb
jecxz
daa
hlt
jb
test
xor
sbb
stc
fdivrs
jmp
sub
insl
hlt
cli
jg
lds
sub
xor
mov
jmp
pop
aas
pop
mov
mov
add
adc
out
fbld
xor
inc
insl
pop
or
out
fmull
mov
push
test
int3
mov
fidivrs
pop
outsl
btc
jp
pop
pop
aaa
fwait
mov
mov
xchg
incl
inc
and
cmpsl
fisttpl
sahf
jo
mul
insb
dec
clc
lahf
jmp
add
call
test
push
mov
loope
xor
clc
stc
out
hlt
xor
push
sbb
test
mov
cmc
dec
jb
cmp
in
inc
int
xor
xor
sub
btc
cmp
sbb
adc
cmp
and
cmp
aam
mov
loope
xor
mov
iret
movsb
pop
cltd
xorl
add
add
pop
in
ror
dec
call
lret
lock
scas
and
in
mov
repz
pop
sbbb
idiv
leave
push
cld
push
cwtl
sub
adc
mov
jecxz
xlat
movsb
jnp
sbb
push
pop
cltd
xchg
push
ret
out
in
ds
dec
mov
cmp
test
cli
push
adc
dec
movl
xor
in
add
call
incl
or
jmp
adc
fsubrs
and
push
sbb
movsb
inc
jmp
jge
jecxz
stos
xchg
push
jnp
dec
aam
jo
stos
hlt
jle
cs
cmpsb
inc
jnp
inc
rorb
inc
pop
push
add
adc
cmpsl
pop
jge
out
aas
cld
cwtd
or
pop
cld
xor
add
pop
cld
test
movsb
push
sbb
mov
jl
pop
cld
inc
push
inc
jmp
daa
fdivl
test
inc
insl
inc
lahf
mov
add
xor
andb
mov
mov
in
cmp
or
jl
inc
pop
or
mov
adc
mov
mov
ret
pop
pop
cld
add
lods
inc
loop
and
pop
std
push
sub
in
xor
ficomps
jmp
adc
pop
pop
inc
jmp
data16
cmpsb
cmovl
repnz
mov
dec
in
inc
int
stos
xor
mov
movsb
lods
dec
inc
iret
mov
icebp
mov
cmp
mov
jo
add
add
jnp
jmp
je
aad
js
jb
xchg
ljmp
add
mov
out
inc
lods
inc
loope
repnz
out
or
into
outsl
rorb
aad
ss
cmp
addr16
clc
in
xor
cmp
repz
sub
test
lods
dec
add
enter
add
incb
xorl
add
adc
xchg
incl
test
les
mov
enter
mov
cld
test
cmp
testl
cmpsb
mov
cld
test
mov
cmp
mov
test
scas
idiv
xchg
imul
into
sub
incl
mov
test
int3
sti
add
cmp
inc
test
ret
out
inc
or
jle
lods
sti
ljmp
test
cli
mov
test
fs
pop
cld
jl
pop
xchg
and
shlb
xor
jge
das
dec
xchg
xor
cmpl
leave
add
push
xchg
scas
xchg
fstpl
add
flds
and
jmp
and
dec
xchg
xor
lock
addr16
loope
stos
and
lea
mov
data16
or
outsb
imul
push
icebp
outsl
std
in
mov
or
xchg
and
dec
roll
ds
rorb
xchg
dec
in
xchg
pusha
daa
adc
jmp
add
push
ss
lods
push
inc
scas
dec
add
call
insl
lcall
jne
push
xor
sbb
jl
repz
push
jbe,pt
sub
push
pop
xor
fsubrl
mov
insl
call
pop
stos
outsb
out
push
ljmp
dec
mov
fildll
mov
icebp
dec
mov
call
xorl
add
insb
clc
inc
mov
xor
ja
out
loope
clc
push
sub
jge
push
or
cmp
insb
in
lcall
insb
testb
nop
dec
clc
add
cmp
orb
inc
repnz
nop
and
idiv
inc
clc
cld
test
mov
inc
push
addl
jb
call
adc
cld
test
inc
sti
or
addl
inc
cwtl
arpl
idiv
add
cld
test
inc
sti
sbbb
addl
dec
pushf
nop
lods
call
shl
cld
test
dec
sti
orb
addl
dec
out
loopne
cmp
testl
xor
jle
ret
out
inc
jae
add
lret
jo
xor
ss
int
movsl
mov
test
int3
inc
jae
lret
pusha
or
mov
into
mov
ret
cmp
dec
xchg
mov
push
xchg
out
js
scas
dec
xchg
je
sti
pop
xchg
mov
jo
sub
sub
movsb
lods
out
es
push
vhaddpd
inc
test
fmul
mov
add
jno
jle
mov
pop
push
imul
stos
add
loop
dec
add
mov
jecxz
stos
pop
push
push
nop
sub
mov
add
les
stos
pop
push
push
mov
add
loopne
dec
test
sub
push
imul
fsubrs
insl
dec
add
inc
jo
jle
mov
pop
push
imul
mov
push
cmpsb
mulb
mov
push
ljmp
pusha
add
test
dec
lds
sti
insb
xchg
sub
jb
sub
test
add
sbb
test
out
jno
sti
xchg
ljmp
enter
add
loop
jb
add
sbb
lods
xor
ljmp
and
jae
jge
out
jnp
jo
sti
fs
jb
dec
and
inc
add
hlt
imul
mov
je
cltd
jbe
mov
add
add
int3
ds
adc
jnp
push
mov
jne
test
jnp
test
and
add
notl
add
test
sub
dec
data16
dec
add
sub
leave
cmc
insl
push
icebp
hlt
xor
sahf
xor
and
out
iret
subl
dec
test
hlt
mov
mov
por
inc
incb
mov
xor
and
repz
je
inc
pop
mov
mov
stc
int
add
xor
add
and
jle
jbe
mov
outsb
cld
test
cmpb
add
pushl
xor
es
or
movsb
lret
out
inc
jae
mov
xchg
ja
leave
xchg
std
outsb
clc
je
aas
add
lock
jno
cmpl
stc
fwait
cmpsl
fstps
xchg
adc
add
push
aam
repnz
and
jb
cmp
call
cmpsb
mov
sbb
and
les
mov
jp
jne
adcb
pusha
cmp
clc
les
cld
adc
mov
sbb
mov
out
jno
cmp
call
cmpsl
xor
jno
sub
push
roll
add
testb
cmp
push
cs
gs
jb
or
push
cmp
sbb
call
lods
mov
bound
test
cmpsb
inc
icebp
or
inc
ffree
in
mov
popw
stc
jb
aam
insl
xchg
call
out
outsb
jb
jne
and
add
sbb
mov
leave
sub
adc
popa
mov
xchg
add
out
inc
jge
mov
jmp
sbb
gs
mov
idiv
incl
cmc
insb
add
jmp
test
sbb
jbe
lods
jne
leave
jno
mov
inc
dec
pusha
dec
mov
push
sbb
cld
mov
lret
sub
stos
fstpl
mov
jne
add
mov
add
and
add
pop
ja
test
rolb
mov
xor
or
push
mov
mov
int3
mov
je
jmp
lea
test
sub
inc
add
mov
jns
inc
fistpll
gs
mov
xor
cmc
xor
test
or
mov
add
mov
jmp
pop
pop
adc
pushl
cld
test
dec
out
push
dec
out
jae
fsubl
mov
cld
dec
jbe
cmp
dec
int3
test
paddq
movsb
dec
cld
shlb
out
sahf
cmp
outsl
push
push
subl
fmulp
mov
add
xor
dec
and
xor
push
ficomps
in
lods
clc
lock
mov
add
stos
mov
icebp
out
jp
add
xor
ds
mov
hlt
addr16
ss
pop
sub
outsb
mov
inc
jno
subb
mov
mov
adc
test
add
clc
jmp
call
ss
jmp
jae
push
pop
out
push
ret
call
imul
loop
jae
pop
call
push
lods
rcl
ds
fidivs
sub
push
pop
mov
lahf
xchg
iret
scas
push
dec
jb
pop
or
xor
mov
push
lods
add
xor
cmp
dec
test
stos
dec
add
push
mov
cmp
js
stos
xor
mov
ja
adc
fdivr
call
inc
xor
dec
push
jl
outsb
cmp
jnp
ds
je
mov
incl
test
xor
out
loopne
adc
rcrb
adc
mov
insb
add
xchg
stos
cmp
xor
loopne
pusha
mov
clc
subb
xchg
iret
inc
out
mov
stc
subb
xchg
aam
sti
sbb
jae
push
jle
jl
or
outsb
adc
sbb
cmp
add
xor
subl
add
dec
call
je
mov
inc
stc
js
mov
js
clc
push
cmc
add
cmpb
xor
fbstp
jg
dec
adc
xor
scas
stos
or
repnz
fs
std
lods
imul
mov
xor
std
jp
fdivrp
add
jmp
xor
pusha
loopne
lret
sbb
and
insb
loop
jl
jmp
and
std
sbb
add
push
jo
xorl
mov
out
jg
roll
mov
mov
clc
imul
sbb
in
ds
push
subl
dec
daa
jb
add
mov
sbb
call
std
orl
arpl
mov
bound
add
aaa
mov
lods
pop
adc
add
add
cmp
fdivs
jb
lds
je
cmp
inc
loope
sbb
add
mov
stos
mov
add
testl
cmp
clc
call
sub
jnp
xorb
inc
or
add
mov
pop
fxch
push
ret
push
icebp
int3
ja
in
push
sbb
mov
xor
push
test
mov
pop
shlb
add
jl
add
add
sub
mov
or
lret
jmp
cld
ss
pushl
cmp
push
add
pusha
cmp
notb
roll
xchg
mov
xchg
sbb
sbb
stc
pop
shlb
push
mov
cmp
insb
sbb
push
jo
cmp
sbb
dec
je
add
jecxz
inc
test
ret
xlat
out
sbb
sbb
add
sti
lock
jmp
add
jecxz
fnstenv
inc
jp
fbstp
push
fdivs
out
inc
xor
add
loope
repnz
add
xor
push
mov
sub
imul
jmp
add
mov
div
mov
bnd
test
pop
add
add
jmp
jb
cmp
jmp
jp
hlt
jmp
addr16
insl
add
xor
add
jmp
xor
subb
pop
inc
repz
add
xor
outsl
movb
out
add
roll
jmp
jbe
add
call
lods
mov
add
clc
jmp
out
stos
inc
jo
add
aas
ds
scas
stos
mov
cs
jmp
adc
clc
jmp
call
lods
clc
in
mov
jmp
lock
fnstenv
sub
lahf
in
mov
jnp
push
lds
js
imul
sti
call
arpl
mov
dec
jnp
add
jns
or
add
mov
inc
insb
pop
testb
repnz
pop
call
mov
inc
test
lock
mull
sbb
idiv
xchg
dec
pop
hlt
sbb
incl
mull
insl
test
and
inc
or
je
or
out
outsl
or
adc
sbb
testb
sub
jmp
scas
add
add
xchg
into
add
adc
lods
pop
jl
jecxz
sub
cltd
ss
fistl
dec
jbe
int3
dec
fisubl
out
xor
call
mov
call
sbb
pop
add
daa
cmp
sbb
pminsw
jmp
and
jnp
xchg
in
jmp
jge
lea
les
pop
pop
test
inc
cmp
add
jo
mov
push
jge
mov
das
xor
aas
and
mov
adc
mov
cli
mov
stos
mov
xorb
xor
add
push
jno
jae
inc
mov
call
xor
add
mov
add
xor
cld
lret
jmp
adc
outsl
jp
das
add
xor
dec
jg
jle
add
inc
cmc
fisubrs
xor
in
scas
xlat
mov
jmp
jmp
jmp
add
subb
jmp
or
xor
push
xor
jmp
xor
ret
cld
les
mov
les
push
cmpb
add
jecxz
jmp
dec
sub
cmpsb
cmp
xchg
std
aaa
and
push
mov
add
clc
xorl
mov
add
test
jl
in
add
jb
xor
xchg
clc
push
stos
pop
out
or
mov
or
push
test
mov
stc
incl
add
test
clc
push
inc
ljmp
mov
add
adc
cltd
xchg
jl
notb
sti
push
aas
mov
fistpll
xchg
clc
addl
rclb
andb
inc
jmp
jmp
jl
adc
fists
jge
dec
pushf
mov
add
fwait
mov
cmp
imul
and
jge
out
cmp
call
xchg
and
add
outsl
dec
sti
outsb
mov
adc
add
dec
clc
in
aaa
add
out
imul
imul
sbb
push
clc
push
ds
jl
scas
outsb
inc
xchg
dec
jne
iret
sahf
push
add
add
addr16
je
pop
pop
mov
in
pushf
popf
ljmp
sub
push
inc
sub
push
and
imul
lods
sub
pop
mov
push
add
pop
into
hlt
adcb
fbld
les
mov
add
dec
add
mov
adcl
bound
add
mov
insb
xor
daa
xchg
icebp
out
imul
test
outsl
lods
add
add
xchg
mull
jbe
insb
fldt
clc
push
mov
movsb
mov
ljmp
imull
int3
ja
insb
or
clc
push
mov
sub
and
xor
sti
and
mov
sub
rolb
add
clc
jmp
inc
sub
jnp
test
and
clc
bound
lods
enter
or
call
ret
sbb
or
cld
inc
lea
xchg
stc
push
add
data16
xor
xor
pop
mov
je
mov
dec
mov
jmp
std
mov
stos
data16
add
add
push
mov
test
lock
test
clc
call
xorl
orb
jl
fimuls
repz
jne
fildll
test
xor
lret
jmp
jns
iret
mov
clc
pop
pop
push
stc
jl
push
add
cmpsl
adc
fistps
add
add
pop
xchg
sti
data16
pop
dec
pusha
xchg
and
inc
outsw
mov
pop
pop
clc
bound
sub
jnp
fildl
clc
adc
clc
adc
inc
add
lock
imul
mov
sbb
in
or
xor
fdivr
out
adc
jb
xor
out
aas
or
pop
test
pop
clc
lods
xor
andb
add
mov
test
movsl
ljmp
in
add
imull
sbb
jb
or
fs
push
gs
and
mov
and
fs
out
fs
and
cmp
daa
subb
fs
cwtl
das
push
and
mov
mov
mov
repz
jecxz
xchg
aam
and
insb
push
pop
arpl
add
in
test
bound
cwtl
imull
or
clc
jb
xchg
notl
cmp
clc
ret
pop
bound
jecxz
out
std
jmp
inc
inc
inc
mov
clc
dec
pop
mov
inc
enter
leave
mov
test
test
mov
in
xor
cli
mov
or
jo
add
mov
sub
cld
mov
imul
out
jno
jl
daa
clc
addr16
mov
push
loop
jge
mov
jge
clc
mov
push
adc
clc
testl
sub
add
mov
mov
movsl
mov
out
pop
mov
jecxz
in
imul
jno
int3
add
push
jb
int3
push
mov
sub
push
mov
jle
sub
add
mov
jp
mov
jle
mov
or
idiv
shrb
jns
jmp
popa
jl
or
pop
jo
mov
repz
test
dec
xchg
lods
pop
add
mov
ret
out
pop
test
cs
add
mov
push
lret
scas
rcll
add
cmpsl
inc
test
adc
or
pop
mov
or
push
pop
add
in
imul
daa
test
lahf
mov
int
lods
add
mulb
dec
push
ret
adc
pop
inc
push
lret
mov
lods
dec
mov
movsl
dec
mov
mov
bndldx
inc
cmp
rolb
addr16
add
lea
sub
pop
sbb
leave
sub
pop
call
push
and
adc
sbb
movsb
fistpll
push
scas
xchg
sti
mov
xchg
push
scas
lods
pushf
pop
movsb
or
inc
lock
xlat
icebp
jle
jp
and
shlb
inc
fdivs
lcall
xor
sahf
mov
addb
lods
pop
mov
push
movsb
inc
inc
out
add
rcrb
dec
mov
imul
cmp
mov
mov
mov
xor
and
ljmp
mov
xorl
mov
mov
push
int
jae
push
aaa
pop
scas
pusha
testl
fisttpll
popa
jb
pusha
inc
ja
add
inc
aaa
mov
pop
clc
jmp
clc
arpl
add
roll
xor
add
xor
int3
mov
add
sbb
rolb
subl
idiv
ret
push
jge
idiv
xchg
xor
push
dec
xor
jge
push
xor
add
sti
addr16
or
jnp
stos
xor
or
mov
add
repz
mov
push
stos
rorl
mov
in
mov
aas
mov
stos
aas
dec
jmp
push
xchg
add
jmp
ficoml
pusha
mov
xor
movsb
in
mov
ljmp
or
jmp
test
and
dec
pop
add
jb
loopne
jae
cld
jmp
mov
add
pop
add
pop
jae
jmp
sti
bound
ljmp
into
call
pop
icebp
aaa
pop
add
push
nop
flds
jb
ret
xchg
pop
add
rclb
add
adc
pop
in
bound
sbb
add
mov
out
dec
jne
jmp
imul
add
insb
jo
pushl
push
and
inc
xor
fsubr
or
push
fbld
or
inc
push
nop
mov
sbb
mov
sbb
out
iret
je
subb
ret
jnp
mov
sub
inc
call
sub
dec
and
add
mov
icebp
pop
xchg
add
nop
add
lahf
jbe
icebp
call
out
pushf
jae
push
xchg
jae
or
call
xor
jmp
jno
call
inc
sbb
jmp
out
add
push
xor
scas
jmp
ja
jg
das
insb
fildll
lock
jmp
out
movsb
add
add
add
outsl
rolb
das
add
outsl
jb
int3
fisubrs
int3
mov
outsl
cmp
aas
jne
in
add
xor
or
push
int
pusha
imul
jge
inc
pop
or
lods
and
add
mov
cld
xor
in
fnstenv
jb,pt
int3
test
jne
xchg
loopne
lea
add
jl
lea
mov
test
cld
icebp
jne
xor
aam
jl
adc
mov
xchg
inc
jae
mov
mov
xchg
xchg
jecxz
dec
lcall
test
aas
into
clc
in
sbb
mov
cmpsl
jecxz
lret
lahf
lret
dec
lret
mov
test
sbb
jb
push
inc
xchg
fdivl
add
pop
sbb
and
pop
lock
pop
push
pop
dec
jo
in
dec
sbb
adc
test
addr16
or
or
lock
call
movsl
cmp
ja
sub
dec
xor
xchg
mov
jg
mov
jae
jg
mov
and
iret
movsl
xchg
out
pushf
stos
pushf
push
xor
movsb
repz
sbbl
into
hlt
pop
cmc
jae
jo
test
jo
call
lods
mov
inc
mov
in
lea
lods
hlt
pop
sbb
sub
add
sbb
and
mov
out
jmp
test
fwait
clc
jo
sbb
aam
and
clc
push
add
pop
nop
sti
sub
idivl
jge
insb
clc
xchg
add
xor
lret
lods
fisttpll
xor
jge
fnsave
in
les
and
les
jo
dec
bound
out
mull
add
lods
inc
icebp
imul
aas
je
in
xor
xor
add
mov
add
inc
xor
add
bound
jae
dec
adc
loope
adc
xorl
add
testl
xor
pop
adc
int3
jg
jmp
jge
jp
inc
insb
clc
test
mov
je
loop
adc
mov
jg
insb
sub
testl
add
dec
fcompl
jmp
mov
pusha
xor
add
or
lret
daa
mov
lret
pop
pop
aas
lret
aaa
inc
aas
lret
das
aad
jmp
int
shr
das
cmp
dec
ret
add
cmp
ljmp
lret
add
stos
add
pop
aaa
aas
fcomi
sub
adc
ret
sti
mov
sub
jmp
scas
mov
add
out
inc
lret
cmpsl
mov
lret
lahf
fisttpl
mov
dec
lret
scas
mov
mov
xor
add
jle
loopne
xor
dec
or
xor
pop
mov
jmp
add
push
enter
sub
movsb
fwait
push
xchg
xlat
fiaddl
jmp
fs
xor
dec
mov
mov
stc
xlat
call
mov
add
fldl
jmp
sub
jmp
imul
testl
fidivl
jmp
inc
mov
in
inc
mov
add
or
sbb
call
sub
jne
js
jmp
jno
hlt
ret
xchg
xor
in
add
jae
mov
add
pop
inc
scas
divb
xchg
movl
cmp
push
push
jl
jmp
xor
add
sarb
jle
push
mov
call
loope
jle
loope
xchg
rcrl
scas
sahf
adc
pop
mov
push
sub
xchg
das
cs
test
adc
cmp
mov
adc
mov
loope
incl
das
add
add
jecxz
mov
lret
jl
mov
adc
jl
jl
jg
jl
sahf
xchg
dec
or
mov
clc
jns
loop
rcll
cmp
jl
aas
push
int3
into
jo
int3
push
jno
int3
push
jno
int3
ja
jmp
into
ss
fstpt
aad
mov
push
push
test
nop
mov
push
add
jb
pop
test
adc
jb
push
lds
xchg
jnp
lock
add
jae
idiv
push
xchg
jnp
loopne
add
jae
idiv
cmp
jnp
loopne
add
arpl
idiv
and
jnp
lock
add
arpl
idiv
or
jnp
filds
add
push
mov
test
jnp
testl
je
mov
sar
jb
push
dec
cmp
xor
jle
xor
add
jno
out
jmp
jge
sub
jno
test
bound
lcall
jge
jo
inc
shrb
pop
jge
cmpsl
aam
lret
je
push
mov
mov
iret
or
repnz
pop
aaa
or
add
cmp
jge
adc
cmp
push
adc
pop
add
daa
jmp
adc
jmp
dec
js
or
add
and
jmp
mov
test
xor
and
addl
xor
insb
mov
call
jbe
push
js
bnd
ja
loop
add
xor
mov
xor
push
or
add
push
dec
or
call
psubb
testl
add
outsl
sbb
add
js
pop
sti
test
out
mov
or
dec
xorb
repnz
jle
pop
or
xor
add
iret
sti
jmp
fs
add
mov
jg
push
mov
leave
xor
cli
pop
sbb
fisubrl
pop
jl
leave
ror
pop
xor
gs
mov
push
clc
ljmp
adc
push
addr16
fimuls
jb
mov
jmp
aad
mov
jb
jmp
movsl
push
jo
mov
scas
inc
inc
lret
cmpsl
pop
inc
lret
lahf
lods
jp
push
dec
jnp
add
pusha
lock
lods
push
inc
clc
pushf
testl
in
roll
outsb
fcomp
pop
inc
addb
jmp
sar
xor
inc
jmp
inc
jl
mov
in
jae
dec
sbb
jp
adc
int
test
fldl
push
adc
xor
int
xor
int3
fnsave
xor
jo
jmp
add
add
pop
fs
pop
daa
ror
aam
icebp
in
mov
iret
out
jmp
stc
mov
or
int3
in
into
test
add
hlt
repz
inc
fwait
jnp
or
stc
cmp
je
ljmp
repnz
xchg
ss
dec
inc
cmp
add
int
imul
xor
mov
add
ret
addr16
inc
and
and
pushf
sbbl
cmp
cltd
cmp
mov
cmp
clc
push
es
cmc
dec
jbe
sub
call
cmp
scas
lods
add
jmp
xchg
mov
in
xor
xor
mov
xchg
arpl
clc
jmp
xor
add
mov
jge
std
mov
les
hlt
mov
xchg
and
xor
adc
pop
inc
or
add
mov
add
or
jns
mov
adc
das
add
adc
or
mov
cld
std
call
adc
aad
cli
or
or
mov
mov
jp
idiv
add
sbb
adc
cmpsb
push
mov
sti
idiv
stc
int3
adc
arpl
add
inc
das
notl
sub
mov
popa
mov
adc
jmp
ja
pop
outsb
lock
pusha
insl
mov
sbb
sbb
push
pop
xor
mov
add
in
xchg
jecxz
aam
push
push
add
out
add
mov
pop
add
ds
addl
outsl
scas
sbb
call
inc
xchg
shlb
loop
add
bound
out
add
jb
pop
popa
cmp
shl
adc
pop
add
fwait
xor
jge
enter
mov
cmp
lret
clc
mov
sti
add
outsb
mov
out
jecxz
jns
fidivl
jmp
stos
clc
mov
sbb
jnp
js
aaa
stc
jnp
int3
iret
add
mov
dec
dec
mov
jmp
mov
add
xchg
lcall
or
cmp
testl
insl
mov
ret
xor
arpl
fwait
mov
add
add
aaa
or
jmp
mov
or
adc
xchg
jnp
mov
call
rorl
jno
pusha
xor
pop
lock
push
jmp
pop
mov
in
fldcw
or
scas
and
mov
mov
cmp
jmp
inc
and
out
pop
lcall
std
arpl
cltd
icebp
mov
imul
xor
push
pusha
and
add
or
or
mov
add
call
mov
adc
add
add
add
pop
mov
popa
shl
test
or
jecxz
lret
subl
scas
test
pushf
xor
mov
add
out
xor
add
cmp
adc
xchg
mov
or
add
mov
mov
jp
xchg
fistl
mov
sub
ret
xchg
nop
test
fwait
sbb
lds
test
jmp
cmpl
sbb
jmp
add
adc
out
mov
sbb
in
xchg
sbb
add
jo
mov
jmp
or
push
scas
out
mov
pop
cli
inc
xorl
inc
jbe
arpl
add
jo
lock
in
mov
pusha
adc
jp
fists
jns
cli
xor
jnp
xor
jmp
add
sbb
repz
sti
pop
xor
adc
popa
pop
repz
insl
mov
sbb
arpl
push
pop
jmp
jp
icebp
jecxz
jmp
sbb
mov
cmp
enter
xor
les
jmp
xorl
adc
in
mov
pusha
or
pop
mov
xor
js
sbb
push
jmp
jecxz
fsubr
nop
and
add
add
nop
push
cmp
sub
nop
xor
and
add
adc
adc
loope
roll
ret
repz
xchg
leave
push
jmp
outsl
pop
add
xchg
dec
add
call
sub
push
add
add
ja
mov
lock
bound
enter
cmp
scas
jns
sub
adc
add
aad
mov
out
cli
adc
adc
inc
mov
adc
ret
or
jge
push
mov
or
jg
push
inc
xor
mov
aas
pop
notb
lahf
pop
sub
mov
call
add
mov
xchg
jmp
in
mov
add
push
or
jmp
mov
adc
ret
mov
add
xchg
loopne
mov
xchg
adcb
sbb
add
cmp
ret
sbb
popa
cmp
leave
jecxz
adc
fwait
in
jg
fildl
add
or
push
jle
adc
jne
jmp
xchg
xchg
sbb
jo
adcb
add
sbb
adc
jmp
xor
test
inc
xchg
je
fstl
add
fsubrs
xchg
mov
pop
add
stos
xor
mov
add
mov
cmp
lods
mov
repnz
jae
jmp
cmpsb
enter
add
adc
out
ljmp
push
jmp
jmp
add
add
xor
add
lods
movsb
xor
push
mov
jecxz
sub
loope
mov
loopne
cmc
and
mov
pusha
enter
jg
xor
jmp
pop
push
add
xor
xchg
mov
sbb
sbb
or
and
jmp
jno
push
jmp
jmp
add
push
jmp
outsl
ja
jb
add
mov
xor
call
inc
jmp
lcall
mov
call
mov
adc
lahf
loope
lock
push
jmp
popa
mov
xlat
call
mov
pop
icebp
xor
mov
mov
lret
cmp
adc
add
cmp
adc
xchg
lods
push
or
stos
scas
push
xorb
xorl
adc
cltd
scas
push
xorb
leave
idiv
mov
jge
mov
add
inc
adc
inc
push
mov
ret
xchg
mov
mov
fstl
sub
xlat
or
jne
bts
mov
and
mov
push
je
orl
jp
jmp
test
dec
cmp
inc
mov
or
jo
or
jmp
or
ljmp
add
xorb
movb
or
mov
insl
vmfunc
sahf
int3
push
mov
jb
adcb
or
add
mov
bound
imul
add
add
push
add
mov
adc
or
clc
mov
adc
pop
addr16
jmp
xchg
push
clc
in
dec
cs
xchg
xor
add
lds
xor
jmp
cmpsb
mov
arpl
clc
xchg
lock
pop
daa
jmp
jnp
xor
mov
sub
in
pop
sbb
dec
jl
xor
mov
test
adc
add
dec
adc
add
mov
call
xor
xor
mov
testl
cmp
mov
mov
xor
cmp
pop
lock
push
jmp
ja
mov
call
jp
out
pop
pop
div
out
inc
loope
stos
mov
xor
jb
push
inc
roll
add
clc
mov
jne
pop
addr16
arpl
call
push
inc
mov
inc
stos
jmp
les
or
out
leave
pop
push
inc
mov
xor
fisubs
jmp
inc
push
add
add
add
adc
test
cwtl
les
add
push
stc
es
pop
in
repz
adc
shlb
inc
pop
or
mov
jp
add
data16
jge
xor
inc
push
jl
jp
decb
dec
xchg
mov
sbb
adc
xchg
mov
sbb
cmp
mov
inc
push
test
push
lret
push
jmp
add
lea
add
sti
jmp
adc
add
mov
mov
es
out
xchg
xchg
clc
pushf
or
push
pop
clc
decl
add
fisttpl
add
rcrb
std
or
mov
or
call
rol
mov
test
popa
adc
jmp
jb
add
jae
add
jo
adc
pushl
out
jno
mov
mov
mov
and
xor
jmp
je
inc
and
push
add
add
xchg
pusha
je
and
add
push
jb
inc
out
fidivs
push
ret
sub
add
mov
add
xor
pop
insl
rorl
add
fidivs
mov
call
sarb
mov
mov
jmp
out
jno
mov
add
sti
test
fcom
cmp
lcall
mov
pusha
push
adc
mov
jmp
and
or
clc
push
lret
adc
dec
jecxz
mov
dec
fidivl
add
call
add
mov
xchg
sub
loop
lock
add
mov
test
xor
jb
mov
or
stc
mov
mov
cltd
int3
in
and
mov
inc
cmp
bound
push
add
mov
sub
into
jl
sbb
loopne
cmp
adc
add
mov
push
add
pop
mov
mov
add
and
add
in
mov
mov
xor
call
cmpsl
adc
movsl
dec
lock
lock
out
sub
cmpsl
mov
xchg
rol
out
sub
mov
mov
add
out
orl
pop
insl
pop
add
in
addb
pop
or
add
jmp
mov
scas
jmp
or
adc
mov
add
dec
xchg
or
push
out
lods
dec
adcl
sub
jae
add
hlt
aas
fwait
mov
or
cli
push
mov
or
or
pshufw
jmp
das
aas
js
and
pop
push
add
push
stos
and
jno
jecxz
insl
mov
jb
and
jmp
fchs
mov
push
mov
and
xor
add
test
jmp
loop
xor
in
push
pop
outsl
scas
adc
ret
dec
cmc
jo
inc
test
push
jmp
aaa
adc
xor
ljmp
fdivl
orl
add
add
loop
mov
aas
or
jmp
outsl
fwait
xchg
pop
add
call
sbb
cmpsb
sub
pop
push
pusha
mov
jo
popa
outsb
or
sub
jmp
clc
dec
lret
iret
cltd
or
pop
mov
dec
adc
movsl
mov
call
stc
test
call
nop
or
add
and
jmp
ja
mov
call
pop
ret
sbb
xor
les
ds
fidivrl
test
fsubl
add
je
push
movb
jno
shrl
out
pop
fmull
subl
xor
scas
mov
add
pop
bound
add
jae
add
pop
or
call
stos
mov
xor
nop
movsb
mov
add
xor
add
xor
jl
add
add
push
push
mov
ss
test
mov
out
lcall
lret
das
aas
lret
daa
mov
push
add
jae
add
pusha
cmp
test
add
jb
adc
xor
test
orl
sub
mov
subl
push
jg
pop
jo
pop
xchg
add
push
hlt
xor
stc
sub
cmpb
add
xorl
jge
mov
stos
inc
mov
in
inc
add
xor
movsl
inc
and
bound
jmp
cld
ret
jns
mov
cmp
outsb
push
jbe
clc
cmpsl
and
pushaw
loope
cmp
push
adc
jmp
loope
xor
jae
xchg
sbb
add
fdivs
or
cli
cmp
test
insb
fidivl
jmp
add
push
sub
in
inc
mov
and
add
add
push
push
xchg
add
mov
jne
call
push
mov
pop
stos
adc
sbb
or
cmp
dec
bound
or
jno
and
sub
stos
js
movsl
popa
or
call
jno
and
sub
stos
js
test
jb
add
sub
sub
cmc
mov
cmpsb
fwait
jmp
add
nop
sbb
mov
shrb
mov
clc
inc
cmc
mov
fildl
pop
dec
pop
pop
ja
lret
int3
outsl
jb
mov
mov
pop
jae
or
hlt
idiv
or
and
or
roll
int
add
sub
adc
jg
push
hlt
idiv
cmp
add
sub
bound
add
mov
cmp
call
insl
jmp
push
aad
lea
and
dec
xor
add
shll
mov
fisttps
out
add
es
ret
jl
fbstp
aam
xor
std
cmpb
sbb
xchg
push
iret
fbstp
ret
popa
add
jb
iret
filds
es
sub
jnp
pop
sbb
in
popf
xchg
roll
dec
jne
push
loope
push
pusha
adc
jecxz
rorl
jo
jl
fsubr
inc
xchg
jb
dec
iret
push
mov
flds
add
xor
add
xor
add
and
xchg
out
addr16
xor
jl
xor
add
jmp
pop
xchg
adc
add
inc
push
xor
jp
repnz
pusha
fsubrs
sub
test
scas
cmp
jmp
jmp
lods
mov
add
fucomi
repnz
out
pop
aam
xor
jp
sub
jmp
gs
inc
cmp
add
push
jo
push
add
mov
call
inc
add
add
arpl
cmp
jmp
xor
push
jge
jmp
jp
jb
mov
jecxz
jle
add
add
lods
mov
out
adc
shr
mov
call
cld
imul
jb
pusha
xor
jmp
imul
bound
or
call
xor
pusha
loop
add
xor
data16
add
xor
pop
je
mov
addr16
or
xor
or
notb
sbb
xorb
pushf
or
cld
call
xor
mov
or
push
push
mov
call
adc
leave
lods
out
lretw
dec
mov
inc
xor
adc
adc
add
adc
or
les
mov
jbe
dec
adc
xor
mov
sub
bound
test
arpl
jmp
ret
dec
xchg
adc
scas
fiadds
add
loop
cmp
jne
verw
dec
jle
add
fs
mov
jb
jge
add
loopne
add
inc
mov
lea
loopne
add
jp
and
les
jns
mov
cmpsb
aaa
lret
pop
sahf
aaa
lret
aaa
dec
jns
jo
pop
add
jmp
inc
pop
shr
inc
js
sbb
add
mov
jmp
sub
mov
jmp
sub
scas
sbb
add
add
xlat
ljmp
jl
ret
je
push
bound
add
xor
mov
jmp
stos
out
xor
add
jbe
ret
sub
push
jb
jecxz
jmp
or
jecxz
pop
mov
xchg
jmp
iret
das
andl
mov
mov
xchg
push
jmp
add
inc
jbe
fsub
mov
xlat
call
rolb
insb
arpl
adc
and
ret
push
in
test
pop
inc
add
mov
cmc
les
mov
mov
test
xor
push
aaa
jbe
adc
mov
dec
mov
pusha
xor
js
push
jmp
mov
add
imul
add
mov
push
add
stc
inc
fisubrs
adc
incl
data16
add
add
or
dec
mov
mov
sbb
jge
mov
jle
sub
add
add
lcall
daa
je
mov
inc
xor
mov
dec
and
leave
stc
or
inc
inc
sti
test
je
jmp
mov
lret
pop
mov
cmp
das
dec
jne
pusha
adc
pop
add
cmp
scas
movsl
je
pusha
sti
test
adc
jmp
jmp
mov
mov
or
flds
jge
add
test
sbb
jne
jecxz
or
add
ljmp
adc
fnstenv
push
roll
arpl
adc
jmp
mov
pushf
push
pop
add
das
fsubrs
pop
mov
jmp
adc
xor
sbb
fs
jb
mov
add
push
scas
dec
lock
jl
jmp
test
je
jmp
add
add
in
jl
cmp
in
cltd
psrad
jmp
shr
mov
cmc
jp
movsb
out
add
mov
mov
inc
cmp
add
push
scas
mov
fnsave
add
mov
sbb
call
push
pusha
stos
push
jmp
and
divl
sti
les
and
les
add
and
les
mov
lahf
inc
arpl
push
mov
jmp
stos
ljmp
and
adcl
mov
aas
int
mov
loop
xor
jl
mul
jecxz
sbb
call
into
imul
fbld
jg
clc
mov
mov
call
or
add
hlt
mov
sbb
cmc
out
add
imul
pop
icebp
or
lahf
xor
fbstp
push
inc
fisttps
add
xchg
in
test
xor
add
xor
add
pop
mov
jge
push
or
jl
jmp
push
filds
add
adc
push
fs
xlat
in
mov
pop
push
add
push
mov
jae
add
movsl
fucomi
mov
addb
jmp
mov
jo
hlt
xchg
fistpll
aaa
add
adc
mov
push
jbe
cmc
flds
bound
fs
fstps
or
inc
and
jnp
adc
flds
mov
es
add
rcr
add
jo
or
sub
rorl
xor
jge
cmp
add
in
shlb
shll
scas
subb
sarb
jmp
add
mov
adc
jmp
std
xor
cltd
popf
daa
iret
bound
pushf
cmp
add
lcall
cmp
popa
pop
hlt
jecxz
sldt
repnz
and
std
adc
push
or
clc
mov
sbb
out
cli
jns
movsb
add
call
fwait
push
jmp
sbb
pop
loopne
fwait
push
jmp
outsl
mov
push
inc
pop
cmovo
insl
icebp
call
push
sub
xchg
scas
div
add
loope
mov
outsb
test
pop
jb
xchg
sub
pop
mov
orl
jmp
adcl
stc
in
adcl
xchg
mov
clc
add
cmp
add
inc
mov
shll
pop
or
cs
mov
add
inc
xor
xor
pop
xlat
push
add
mov
je
shll
add
div
clc
cltd
enter
cmp
add
rolb
lock
adc
mov
insb
xlat
add
imul
push
insb
xlat
adc
lcall
jmp
push
scas
add
imul
add
add
pop
jb
int
sbb
sub
add
in
faddl
add
push
test
jmp
pop
adc
lea
mov
fdivr
imul
popf
adc
call
cld
imul
popf
adc
call
int
imul
and
mov
sar
imul
adc
mov
iret
cld
imul
and
mov
sar
imul
adc
mov
add
xor
adc
jecxz
jl
and
cmp
xor
cmp
and
cltd
xchg
add
xor
adc
xor
adc
out
add
xor
add
mov
rep
das
pop
cwtl
and
sahf
pop
test
test
repz
mov
add
cltd
clc
sub
jbe
movsl
lret
scas
das
jmp
add
add
xor
and
inc
and
out
xchg
faddl
fsincos
pop
jmp
sub
cld
imul
and
and
mov
add
add
sti
mov
add
jmp
mov
add
jmp
mov
add
add
fsubl
add
jmp
mov
add
jmp
mov
add
in
mov
out
add
sub
out
add
sub
out
add
mov
adc
ljmp
pop
sbb
dec
test
add
div
clc
sbb
add
add
and
lds
inc
aas
clc
add
data16
or
das
add
insl
xor
mov
mov
add
mov
add
int3
add
in
subb
and
xor
add
jge
cld
cmp
push
mov
fidivl
jle
push
add
jmp
sub
fcom
js
movb
dec
sbb
adc
add
add
dec
or
je
mov
stos
or
cmp
sub
pusha
out
inc
in
dec
and
jmp
add
out
cld
jmp
clc
xchg
fcmovnu
ret
fsincos
jbe
pop
cld
test
mov
pop
fsub
jbe
pop
cld
and
movb
mov
pop
cld
sub
into
mov
aam
jmp
xchg
and
sub
add
mov
sbb
call
xor
push
enter
mov
push
add
xor
hlt
mov
jmp
xor
int3
iret
add
xor
inc
xor
add
push
repz
jo
sar
mov
bound
push
enter
mov
les
fucomi
rcr
mov
fiaddl
add
add
neg
imul
arpl
jge
cltd
sbb
bound
fwait
jmp
imul
xor
and
mov
sub
inc
xor
or
pop
loop
call
mov
xor
adc
adc
flds
jmp
aaa
or
outsl
cld
imul
call
add
mov
test
inc
xor
xchg
sub
jmp
imul
add
xor
push
mov
in
inc
add
xchg
jge,pn
adc
incl
ret
popf
ret
add
sbb
popf
xchg
leave
aaa
add
adc
add
in
inc
xorb
addl
in
jl
leave
sbb
ljmp
clc
add
jge
mov
mov
call
add
ds
pop
xor
inc
or
xor
pop
pop
sub
hlt
movl
mov
cld
sub
xchg
int3
movl
psubd
es
push
sbb
movsb
into
add
sarb
add
jmp
xor
add
call
clc
jmp
add
stos
lret
jecxz
clc
push
inc
sbb
fsts
test
sub
incb
roll
or
cld
jmp
fdivrs
popa
xor
inc
movaps
add
jmp
hlt
mov
repnz
cld
unpckhps
jno
fiadds
add
xor
add
adc
jmp
mov
scas
das
nop
test
push
in
sbb
jmp
adc
sub
hlt
shll
and
adc
sub
in
mov
xchg
pop
push
icebp
xor
lock
in
sbb
inc
push
mov
pop
jmp
add
int3
dec
bound
jge
add
je
mov
lods
cmp
stc
pusha
inc
add
mov
out
pop
xchg
xchg
les
lret
mov
mov
fucomp
lods
cmp
das
call
ficoms
sub
les
pop
adcl
movsb
pop
mov
push
lods
lcall
lods
inc
mov
jge
jne
xchg
jmp
pop
xchg
jecxz
icebp
clc
mov
add
sbb
cmpb
add
arpl
add
cmc
mov
pop
and
stos
cmp
mov
fiadds
clc
mov
rclb
mov
iret
xorl
inc
cmpsb
jl
scas
leave
add
ret
call
cmp
outsl
mov
movsb
jae
lcall
adc
mov
insl
inc
stc
loopne
jmp
add
add
out
sub
dec
push
xlat
add
ja
inc
xor
cmp
xor
mov
add
clc
lock
add
pop
idiv
roll
loopne
xchg
mov
adc
bound
and
lret
cmpsl
jmp
mov
lods
push
clc
outsb
adc
pop
ljmp
inc
mov
stc
cmp
ss
inc
add
stc
lret
rolb
ret
nop
add
or
jb
jl
lret
fs
test
add
dec
inc
std
stos
das
repz
dec
xor
ja
flds
pushf
add
dec
cwtl
dec
jo
xor
loopne
sbb
loopne
test
std
pop
outsb
cmp
sub
je
sti
gs
mov
fldcw
push
mov
add
pop
or
in
fucomip
and
mov
add
mov
adc
mov
lods
jmp
filds
das
call
xchg
addr16
fldt
outsl
fcomps
sbb
mov
lock
jmp
insl
imul
imul
insl
imul
call
xor
ljmp
call
xor
out
xor
into
call
xor
push
out
xor
xchg
call
xor
xchg
xor
jle
shl
jbe
xor
outsb
mov
shl
pop
pop
shl
push
xlat
shl
dec
call
testl
xor
imull
add
fistpll
add
xlat
sbb
push
fistps
push
xlat
fadds
push
fadds
add
cmp
add
add
clc
pop
push
aas
clc
andnps
clc
pop
inc
aas
clc
aas
adc
aas
clc
fstl
jmp
push
push
jae
cli
push
jns
mov
rolb
push
repz
scas
fidivrl
cmpb
pop
or
xor
jbe
shrl
jle
fiadds
jg
out
hlt
jle
out
fdivrl
push
dec
push
add
or
and
or
and
sub
add
push
sbb
jb
fbstp
pusha
subl
bswap
jbe
adc
das
pusha
sbb
xchg
sub
xchg
das
ja
iret
dec
and
dec
mov
xlat
into
inc
jo
inc
cmp
rorb
and
notl
test
add
pusha
and
jle
lock
movb
jmp
repz
pop
or
push
jle
jecxz
and
outsb
sbb
adc
add
jmp
jmp
xchg
mov
jg
outsl
addr16
test
or
add
xor
sbb
test
leave
mov
xchg
fsubrl
cmp
fwait
add
xchg
dec
xor
jmp
fisubs
fabs
test
iret
sbb
inc
jmp
lock
ret
adc
jmp
sbb
neg
ret
cmp
jmp
lods
xor
mov
imul
nop
pop
dec
in
hlt
subb
std
loopne
add
sbb
inc
jecxz
in
mov
std
in
add
test
sbb
jnp
adc
jb
cld
call
adc
rolb
jmp
clc
mov
push
clc
cmp
xor
imul
out
fmuls
xor
push
xor
add
call
adc
in
addl
ja
popf
test
xor
cltd
stos
mov
add
adc
out
xchg
add
and
push
jl
mov
ret
jge
fadds
in
mov
mov
add
xor
cmp
push
mov
jecxz
data16
mov
loopne
sub
cmp
add
add
dec
mov
adc
iret
imul
and
or
addb
jmp
cld
jmp
shlb
inc
cltd
pop
adc
add
cld
test
aas
mov
jge
fistl
mov
inc
call
or
mov
lds
and
and
push
jl
fstpt
ljmp
jge
fcoml
movsl
adc
add
or
add
jmp
cld
incl
add
xlat
xor
and
dec
cld
stos
inc
scas
and
push
jge
add
ret
jecxz
dec
add
xor
xor
jb
enter
std
xlat
rorb
jae
jb
addr16
xlat
pop
out
xchg
or
rolb
mov
add
xor
cmp
dec
inc
mov
jns
adc
leave
gs
dec
fstps
jge
add
sbb
mov
xchg
mov
test
dec
mov
xor
adc
enter
add
int
fistpl
js
movsb
mov
add
fimull
mov
jne
sub
cli
mov
mov
jmp
jmp
sub
add
shll
mov
inc
loop
sub
loop
repz
sarb
sbb
add
icebp
cmp
mul
push
cmp
mov
pop
push
inc
adc
pop
lret
inc
adc
pop
dec
icebp
cmp
mov
addr16
jecxz
xchg
mov
inc
adc
dec
mov
mov
push
sub
add
or
jb
jns
lds
mov
int3
imul
mov
imul
xchg
add
mov
ficoms
subb
mov
outsl
fstl
stos
mov
add
rorl
je
int3
mov
call
inc
repz
cmpl
imul
dec
xor
repz
mov
and
sub
mov
rorl
por
or
sti
js
aas
add
add
test
add
mov
imul
push
sbb
pop
cmp
stos
ret
cltd
hlt
mov
xchg
aaa
clc
orb
jmp
cld
jbe
adc
jge
fadds
add
jbe
adc
jle
call
cmp
jl
xlat
jnp
ljmp
in
dec
aas
xchg
iret
dec
lahf
and
add
lock
in
xor
push
fldl
push
adc
jb
outsb
xor
mov
jno
jnp
cs
call
adc
inc
or
xchg
ret
repz
add
xor
jecxz
sbb
sub
lock
or
xor
cmp
and
decb
outsl
leave
push
ret
repz
add
xor
add
jecxz
mov
in
mov
or
xor
enter
outsl
xor
sbb
leave
add
scas
mov
int
rcr
jnp
cmp
das
cmp
ljmp
insb
leave
xchg
xchg
jns
imull
div
test
shrl
idivb
cmp
sub
ficoms
jmp
divl
stc
lahf
lock
roll
add
cmp
aad
shrb
lock
jns
sub
ficoms
mov
pop
push
sub
aas
aad
stc
out
shrb
pop
imull
cli
in
repz
lock
inc
mov
and
inc
pop
and
sub
jge
scas
cwtl
pop
in
idivl
pop
fistps
add
xor
mov
add
cmp
scas
xchg
cmp
xor
add
les
call
idivl
stc
xor
es
or
sub
dec
pop
inc
aaa
sbb
ret
faddl
shr
aaa
pusha
xchg
divb
fimull
pop
dec
inc
sbb
cwtl
adc
fsubrp
and
push
mov
cmp
inc
hlt
out
mul
adc
add
push
test
neg
adc
fcomps
mov
xlat
add
mov
xchg
mov
pop
fmull
cmp
jo
bound
mov
test
xlat
ret
icebp
loop
jl
ret
je
out
xor
and
pop
push
jl
ret
je
out
test
fildl
push
jle
xor
add
xor
in
add
pop
mov
call
hlt
ja
sub
arpl
cmpsl
cmpsl
hlt
lods
aaa
mov
movsl
aaa
mov
mov
xchg
jl
cmp
test
fdivrl
test
insl
imul
inc
mov
push
imul
inc
mov
inc
lock
jp
xor
xor
sub
std
jno
jmp
dec
loopne
jg
add
test
inc
js
jae
ret
push
add
lods
insl
shll
jge
jmp
push
cmp
xor
add
fldcw
outsb
in
outsl
hlt
jb
scas
rclb
cmp
and
add
jmp
xor
sub
lods
adc
inc
add
inc
icebp
out
xor
sbb
push
inc
dec
test
add
call
test
dec
inc
je
sub
xlat
fwait
sti
cld
lret
stos
push
or
push
xor
nop
and
inc
jne
dec
scas
xor
sub
inc
xorl
jb
popl
jns
xor
divb
cltd
pop
orl
mov
andb
call
das
fisttpll
aaa
and
add
ret
nop
fmull
add
arpl
movsl
jle
jg
je
xchg
mov
and
lar
pushf
mov
inc
push
mov
bsr
dec
test
dec
xchg
int
testl
ret
addr16
xchg
jbe
scas
subl
lret
fnstenv
mov
js
sub
loopne
add
sahf
sbb
mov
sub
test
lahf
sub
sti
or
add
std
jmp
dec
aam
sub
jmp
std
add
xlat
lret
fdivr
jmp
adc
cmpsl
or
fcom
add
bound
xchg
sbb
test
inc
mov
or
add
shll
inc
mov
xchg
mov
add
mov
lods
xchg
pop
ljmp
cs
mov
xor
ljmp
pop
fcmovnbe
fists
mov
sub
jo
jns
inc
int
movb
popa
dec
cli
xor
add
clc
and
push
aaa
pop
dec
sti
xor
mov
push
inc
sub
jnp
outsb
add
add
lock
add
lock
aam
pop
decl
out
std
enter
pusha
xchg
adc
adc
jne
push
das
add
call
aam
mov
lods
clc
test
push
xor
jmp
sti
jns
and
mov
jmp
lcall
je
enter
xor
lcall
insb
hlt
add
gs
sbb
call
ds
rolb
xor
lods
adc
inc
clc
test
xor
xor
call
push
add
std
dec
in
or
xor
dec
xor
cmpsl
adc
and
iret
xor
xchg
xor
jns
mov
jne
cld
fs
mov
incl
add
test
mov
jne
lods
cmp
mov
xor
lea
out
mov
jl
add
leave
add
lcall
adc
jnp
mov
rcl
cmp
add
loop
in
xor
pusha
xchg
or
cmp
cld
into
bound
mov
cmp
add
pop
add
add
or
push
dec
add
jb
pusha
jle
insl
testl
push
jno
add
in
push
call
jmp
xor
jnp
push
bound
dec
mov
sbb
popa
jg
sbb
fisttpl
sti
jo
popa
cli
test
imul
add
fsubs
aas
lods
in
mov
xor
add
aad
repz
jo
fdiv
aaa
mov
pop
stos
pop
xchg
js
add
xor
mov
pop
stos
iret
scas
in
adc
test
fs
aas
and
fldt
sub
sbb
aam
hlt
in
test
add
test
dec
add
push
shrb
xor
sub
add
les
jno
mov
lock
add
sbb
and
bound
and
ret
xor
cwtl
sbb
arpl
jb
and
mov
ret
imul
icebp
mov
pop
mov
or
and
pusha
mov
lcall
mov
stos
cmc
les
add
jbe
mov
int3
ljmp
cmpl
mov
test
or
jne
shlb
mov
mov
cmp
inc
testl
ja
xor
xchg
mov
dec
test
add
adc
xor
fwait
jb
mov
cmpsl
jge
daa
mov
in
incl
add
mov
in
incl
mov
mov
mov
hlt
pop
pop
inc
out
movsb
cmp
jle
div
xchg
xor
testl
cmp
cmc
insb
jb
xchg
cmc
negl
cld
arpl
dec
adc
xor
and
add
enter
mov
inc
hlt
add
xchg
flds
jmp
jle
push
sar
neg
mov
inc
jmp
dec
hlt
mov
leave
add
test
sti
dec
jo
pop
jmp
lahf
xor
add
in
rorb
notl
add
cs
add
movl
aas
stos
inc
testb
mov
popa
sbb
test
das
jno
push
pop
add
das
in
adc
enter
enter
sti
cmpsb
movsl
cmc
push
pusha
fs
push
jo
ret
dec
bound
stos
fisttpll
mov
ljmp
movsl
mov
cld
inc
pop
mov
xor
bound
sub
dec
stc
insl
jl
fs
add
sub
outsb
mov
add
cmp
mov
jns
mov
add
and
adc
mov
int
nop
arpl
cmpsb
or
pusha
and
mov
and
pop
dec
lock
add
pushf
mov
xchg
in
les
sub
les
adc
std
push
xor
xchg
sub
jl
jge
jl
jge
lods
inc
adc
mov
push
inc
ret
push
inc
add
add
inc
add
shlb
add
ret
pop
mov
pop
mov
ret
push
or
test
testb
mov
add
inc
add
inc
add
icebp
add
inc
xor
call
shl
add
jge
mov
jg
cmp
ds
sbb
icebp
xor
add
mov
fwait
add
adc
add
push
shrb
sbb
out
fisttpll
jge
repz
sbb
negl
push
dec
sbb
call
push
enter
adc
rcll
mov
push
mov
mov
out
inc
adc
test
push
in
negl
sbb
jl
testl
add
pusha
push
test
inc
xchg
stc
mull
sbb
jl
fisttps
divl
jb
fldt
std
cmc
hlt
mov
repz
sbb
pop
sti
stc
xchg
jae
test
sbb
ss
test
outsl
xor
loopne
subl
bound
negl
sbb
sub
lret
and
add
add
stc
inc
outsb
sti
test
cwtl
mulb
stos
sub
cli
cmp
adc
xchg
and
ret
cmpsl
xchg
repz
int
arpl
in
adc
das
pop
lahf
fwait
sub
sub
insl
enter
insb
dec
mov
jmp
ljmp
jmp
arpl
ret
cmp
add
push
sbb
sbb
jge
adc
cmp
sbb
add
repnz
mov
cmpsb
gs
ss
xor
popf
push
test
clc
bound
test
lock
mov
jae
mov
mov
mov
out
call
cli
fnstenv
add
test
adc
xchg
mov
add
pushf
inc
xor
test
ret
cmpsl
cmp
push
or
lahf
and
adc
test
add
cmp
mov
out
mov
xor
jmp
in
mov
aas
fimull
add
adc
std
cmc
or
mov
sahf
dec
call
xor
cld
cmp
faddl
add
leave
cmp
mov
add
stos
rorb
loop
mov
sbb
call
adc
ljmp
fiadds
and
dec
cltd
add
leave
mov
ds
jl
mov
sbb
in
clc
push
mov
add
decl
sub
out
add
xor
add
outsb
shrl
aad
mov
push
add
faddl
jmp
mov
jo
jo
push
loop
faddl
imul
jl
movsl
sub
adc
lods
test
jp
cmc
sub
jmp
inc
mov
sbb
push
lahf
or
enter
mov
xor
jp
xchg
ljmp
popa
and
jae
xchg
jnp
jo
dec
repz
push
jbe
ljmp
and
call
xchg
rcrb
fsts
enter
mov
mov
fucomp
movsl
notl
and
stc
inc
sbb
arpl
insl
icebp
mov
idivb
test
les
add
and
cmp
add
dec
cmp
pusha
push
adc
and
add
sub
dec
and
cmp
mov
sub
xor
jmp
out
mov
xor
out
stc
sbb
or
cmp
clc
mov
data16
stc
lea
adc
xchg
inc
hlt
incl
add
sub
fildll
ret
xor
add
pop
call
test
xor
add
mov
sbb
add
or
adc
xor
mov
jbe
mov
mov
gs
out
pop
in
push
dec
ljmp
cmp
icebp
subl
inc
mov
add
jge
mov
add
jmp
mov
or
lock
sahf
jb
hlt
or
mov
imull
notl
add
dec
dec
mov
stos
ret
xor
stos
lock
enter
cltd
call
ljmp
jl
jmp
push
sbb
add
xor
fdivr
hlt
call
add
seta
xchg
jl
push
loope
lcall
icebp
sbb
push
out
sub
adc
sub
mov
scas
mov
jb
jecxz
jb
testl
sbb
aaa
cmpsl
dec
aam
sahf
dec
xlat
xor
add
mov
lahf
js
mov
add
aam
sub
pusha
in
jp
cmp
mov
cld
add
inc
out
test
stc
das
add
imul
pusha
adc
cmp
pusha
mov
xorl
sbb
fwait
jmp
add
mov
jbe
mov
test
and
mov
aad
cmp
dec
add
sbb
inc
jb
test
idivb
sbb
jb
mov
lahf
sbb
mov
repz
ficoml
mov
sub
xchg
out
xor
sahf
inc
or
clc
jecxz
movsb
cli
mov
xchg
jb
inc
mov
mov
cmp
and
jg
cmpl
and
xor
ljmp
add
add
mov
add
jno
jns
add
adc
push
jns
mov
dec
call
mov
dec
cmp
and
mov
lods
push
push
dec
orb
test
xor
clc
bound
mov
push
in
lcall
mov
out
in
fistps
ss
in
add
add
push
in
mov
add
push
int
mov
in
jno
in
sub
push
add
adc
jns
jecxz
dec
mov
inc
popa
testb
push
cld
mov
or
push
scas
push
push
sbb
cmp
mov
mov
pop
ds
xchg
loop
adcl
in
jp
push
stc
js
push
in
dec
sub
mov
add
add
jmp
jp
push
add
pushf
and
icebp
js
push
aad
sbb
movsl
daa
test
inc
mov
daa
add
popf
daa
sti
adcl
shlb
aaa
adc
mov
inc
and
mov
jg
push
icebp
repnz
mov
and
and
jne
add
add
or
call
test
xchg
mov
xchg
xor
add
fld1
mov
adc
xchg
addl
call
insb
add
clc
pop
movsl
call
insb
add
lock
lods
call
insb
add
fdivl
pop
gs
pop
movsl
call
or
mov
xchg
add
dec
sub
pop
insl
add
sub
dec
or
shrb
xor
inc
ret
add
cmc
push
inc
xchg
sub
inc
subb
loopne
xchg
out
xchg
int
inc
xchg
xor
add
xor
pop
xor
add
inc
std
push
inc
inc
lods
sti
incl
outsl
cmc
push
xor
add
push
sub
xor
lret
mov
cld
add
int
mov
mov
or
jmp
dec
adc
add
out
adc
cmp
in
jmp
inc
add
ja
pusha
ficompl
enter
les
jle
mov
test
sub
xchg
leave
jne
jo
and
je
jne
pusha
fcomi
pop
mov
pop
icebp
pop
add
pop
stos
cld
rolb
je
pusha
pop
adc
pop
add
into
pop
or
icebp
rcr
sbb
rcr
lock
addr16
adc
jne
sbb
pop
or
push
jne
iret
mov
fsubrp
dec
outsb
push
mov
pop
add
xchg
insl
pop
and
and
cmp
in
add
lock
cld
psubb
loop
xlat
xor
int
mov
jmp
mov
mov
add
inc
jmp
push
inc
add
inc
jmp
loop
sbb
sbb
jb
pushl
cmp
mov
aad
lcall
lds
cmpsl
shrl
je
mov
je
mov
je
mov
je
call
scas
cmp
mov
xor
jge
popa
rorb
andl
add
pop
mov
mov
call
sub
push
stos
arpl
mov
insl
les
test
mov
or
pop
add
sbb
push
fisubs
cmp
loopne
out
mov
add
dec
and
jb
cmp
adc
stos
jb
stos
mov
rcl
jbe
adc
jo
mov
sti
ret
add
push
test
or
call
orl
add
repz
mov
out
pop
aas
jb
cmp
mov
inc
call
fcomi
je
fimuls
inc
scas
insb
call
loopne
out
cld
je
out
lcall
mov
sub
mov
xor
rclb
mov
jae
gs
out
cld
mov
out
incl
add
call
ret
leave
gs
mov
adc
jmp
fs
adc
sbb
ds
fistl
lret
mov
outsb
pop
add
pop
inc
sbb
jp
add
icebp
pop
lcall
jmp
inc
sbb
adc
sti
sbb
sbb
jle
push
xor
dec
cld
xor
scas
xor
add
sbb
push
call
scas
adc
push
and
clc
pop
aad
pop
mov
jns
cmp
add
ret
push
shlb
fistpll
popa
fdivr
sbb
outsb
out
mov
fdivrl
jmp
popf
arpl
xor
jo
mov
sub
mov
xor
test
push
mov
add
in
call
add
add
testl
push
out
ret
sti
adc
pop
addl
ds
imul
mov
pusha
jbe
mov
jmp
repz
mov
add
mov
push
xchg
popa
add
xor
push
insb
les
lock
sarb
cmp
add
clc
pop
shl
fidivl
add
mov
rol
cs
bound
inc
or
repz
adc
inc
add
xchg
sbb
lea
in
xchg
mov
lock
adc
bound
xchg
fsubrp
aaa
pop
push
mov
inc
adc
lock
jmp
mov
ljmp
es
add
incb
mov
and
add
push
enter
shlb
fidivl
out
lcall
jbe
or
pop
xchg
jns
mov
push
add
sub
jmp
push
adc
mov
inc
sub
out
call
mov
lcall
cmp
cmp
cmp
xchg
sub
out
call
inc
add
inc
add
int
out
inc
add
inc
mov
add
ljmp
jmp
call
add
dec
loop
or
roll
jmp
inc
jmp
add
jmp
loop
in
pop
rolb
rolb
mov
add
xchg
loope
int3
not
inc
jmp
rolb
mov
add
jbe
imull
rolb
mov
add
loope
add
mov
roll
rolb
mov
add
mov
imull
inc
jmp
roll
mov
add
xor
push
mov
inc
iret
test
xor
loope
mov
scas
into
test
xor
loope
mov
fidivrl
xor
loopne
lahf
pop
mov
sub
jmp
loopne
lahf
jecxz
add
sub
iret
mov
jmp
mov
mov
sub
jmp
loopne
lahf
mov
sub
lahf
mov
jmp
jle
je
je
test
repnz
call
dec
cmpsl
divl
push
repnz
call
dec
cmpsl
test
icebp
repz
call
call
xor
mov
add
addr16
pop
pusha
or
mov
jmp
call
clc
adc
call
cld
adc
call
test
jmp
call
fs
call
dec
adc
call
and
jmp
xorb
sbb
and
push
xor
inc
xor
adc
add
push
xor
push
xor
add
dec
adc
xor
adc
add
adc
in
adc
xor
adc
xor
adc
xor
adc
xor
add
sub
add
adc
shlb
loopne
shlb
int3
adc
xor
adc
xor
adc
xor
adc
xor
ret
adc
xor
adc
xor
xorb
adc
xchg
hlt
fildl
fiaddl
add
sti
xchg
cwtl
sti
xchg
mov
xchg
pushf
fildl
add
xchg
mov
sti
xchg
je
xchg
js
xchg
insb
fildl
add
xchg
pushf
sti
mov
adc
mov
add
mov
or
mov
cld
fisttpl
add
fisttpl
add
add
sti
mov
mov
sti
mov
mov
xor
add
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
sub
add
sub
add
add
sub
add
sub
add
inc
jmp
add
inc
jmp
add
ds
call
je
jmp
call
in
jmp
call
int3
pop
jmp
call
enter
mov
pop
jmp
call
lods
pop
jmp
add
call
mov
jmp
call
mov
jmp
call
jne
jmp
call
jno
jmp
call
call
xor
xchg
cs
jb
cmp
xchg
cs
xchg
xor
subb
jb
cs
xor
inc
cs
add
inc
sub
push
cs
push
and
inc
cs
inc
sbb
adc
add
adc
adc
add
cld
push
add
ret
adc
cs
push
adc
add
add
in
push
add
clc
push
shrb
xor
ret
adc
sub
dec
adc
sub
add
fldl
add
in
xchg
int3
in
add
xchg
enter
add
add
xchg
mov
in
add
xchg
lods
in
xchg
lods
in
add
cmc
xchg
test
xchg
pushf
in
add
cmc
xchg
cwtl
in
xchg
loopne
xchg
aam
xchg
fdiv
xchg
int3
in
xchg
shl
xchg
fldl
add
mov
iret
fisttpll
jmp
add
add
daa
jmp
add
jmp
add
daa
jmp
add
daa
jmp
add
daa
jmp
add
es
add
daa
jmp
add
es
add
sub
add
daa
jmp
add
es
add
jmp
add
add
add
cmp
add
jmp
add
cmp
add
and
add
jmp
call
nop
add
jmp
call
sub
jmp
call
jo
jmp
call
les
jmp
call
inc
push
jmp
add
call
dec
adc
call
rolb
call
adc
jmp
call
enter
xor
adc
xor
adc
xor
shlb
inc
or
ret
or
xchg
xor
xor
xorb
or
xchg
xor
xorb
or
add
push
xor
or
inc
xor
or
push
xor
or
inc
xor
or
adc
or
add
jne
add
in
or
xor
or
xor
or
xor
or
xchg
in
xchg
call
out
add
fldl
add
in
xchg
adc
xchg
faddl
add
add
in
xchg
xor
xchg
rcr
add
xchg
lods
out
add
testl
add
testl
add
testl
add
xchg
fcmovnbe
xor
add
es
add
and
add
add
and
jmp
add
and
jmp
add
and
jmp
add
and
add
and
add
and
jmp
add
and
jmp
add
and
add
and
add
and
add
and
add
sub
add
add
and
jmp
call
test
jmp
call
mov
jmp
call
jl
jmp
call
orb
call
push
or
call
fmull
jmp
call
imul
jmp
call
rorb
jmp
add
call
and
adc
call
lods
or
call
das
test
add
orb
das
insb
or
das
or
add
jo
shrb
pop
or
cs
or
cs
shrb
pushf
or
mov
jne,pn
ret
or
cs
or
cs
or
cs
or
add
je,pn
subb
or
insb
or
js
inc
cs
and
push
cs
push
sbb
inc
cs
inc
adc
jmp
add
xchg
or
xchg
cld
loope
add
lock
hlt
icebp
xchg
clc
loope
add
loope
add
icebp
xchg
in
xchg
call
loope
add
icebp
xchg
in
xchg
call
add
loope
add
loope
add
xchg
icebp
xchg
cs
add
fiadds
add
icebp
xchg
enter
lods
loope
add
lock
movsb
icebp
xchg
push
loope
add
icebp
xchg
cwtl
loope
jmp
add
jmp
add
jmp
add
jmp
add
and
add
add
jmp
add
jmp
add
cmp
add
jmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
jmp
call
cmp
jmp
add
call
xor
jmp
call
xor
jmp
call
pushf
or
call
xchg
or
call
insb
or
call
fs
call
jl
jmp
call
sbb
jmp
call
les
jmp
call
rorb
add
call
fmuls
add
xchg
or
in
or
mov
inc
xor
or
xor
or
xor
or
xor
or
xor
add
fs
xor
shlb
pop
or
xor
ret
or
xor
shlb
dec
or
xor
ret
or
xor
add
xorb
or
xor
xchg
xor
xorb
or
xor
lcall
add
repnz
add
loopne
add
repnz
add
loopne
add
lock
add
xchg
add
xchg
add
xchg
add
repz
add
jecxz
add
add
jecxz
add
xchg
add
repz
add
jecxz
add
jecxz
add
repz
add
repz
add
jecxz
add
loopne
add
lock
add
repz
add
jecxz
add
jecxz
jmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
jmp
add
jmp
add
cmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
cmp
add
jmp
add
jmp
add
jmp
add
aaa
jmp
jmp
call
into
or
call
cmpsb
or
call
sahf
or
add
call
mov
jmp
call
add
jmp
call
decb
jmp
call
ljmp
call
out
jmp
call
repnz
call
dec
or
call
inc
or
call
pop
or
xchg
das
xor
xchg
das
push
or
add
das
push
or
and
push
das
push
or
sbb
inc
das
push
or
adc
push
das
decb
inc
das
or
inc
das
testb
das
add
adc
out
or
das
cli
or
das
out
adc
repnz
das
fimuls
add
ljmp
loop,pn
shrb
into
or
fimull
ret
or
rorb
shrb
mov
or
add
cs
xchg
cs
cs
or
xchg
add
repnz
add
loop
add
repnz
add
loop
add
repnz
add
loop
add
repnz
add
loop
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
repnz
add
cmp
add
aaa
jmp
add
aaa
jmp
add
aaa
jmp
add
cmp
add
aaa
jmp
add
aaa
jmp
add
aaa
jmp
add
add
aaa
jmp
add
cmp
add
aaa
jmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
jp
jmp
call
mov
or
call
ret
call
fimull
jmp
call
add
sahf
or
call
mov
jmp
call
mov
or
call
incb
jmp
call
add
jmp
call
out
jmp
call
ljmp
shlb
push
or
xor
or
xor
xchg
xor
or
xor
or
add
xor
or
xor
or
xor
or
and
inc
xor
or
sbb
push
xor
or
adc
inc
xor
pop
inc
xor
pop
adc
testb
xor
or
xor
pop
add
cli
pop
adc
out
adc
repnz
add
fiadds
add
ljmp
xor
pop
ret
pop
jmp
add
add
in
xchg
add
in
add
in
xchg
add
in
add
in
xchg
add
in
xchg
add
in
xchg
add
in
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
in
xchg
add
xchg
add
out
add
out
xchg
add
add
out
add
out
xchg
add
xchg
add
xchg
add
xor
add
jmp
add
cs
add
cs
add
jmp
add
sub
jmp
add
sub
jmp
add
cs
add
sub
jmp
add
add
sub
jmp
add
sub
jmp
add
sub
add
call
call
call
data16
call
call
mov
call
call
outsb
call
call
sar
call
add
call
call
call
lcall
call
sahf
call
call
add
call
call
push
call
add
jb
add
pop
push
shrb
push
shrb
push
push
ret
push
ret
push
shrb
pop
push
shrb
inc
push
ret
push
ret
add
add
das
add
das
out
add
das
cmp
xchg
das
es
subb
push
subb
push
push
das
sub
push
das
push
push
inc
das
and
inc
das
push
push
push
das
sbb
push
das
push
push
inc
das
adc
inc
das
incb
adc
testb
das
out
add
out
add
out
cltd
add
out
add
out
xchg
add
add
out
add
out
xchg
add
out
add
out
xchg
add
out
add
out
xchg
add
out
add
out
xchg
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
xor
add
jmp
add
sub
add
jmp
add
jmp
add
jmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
call
cs
call
call
xchg
cld
call
call
mov
call
call
data16
call
call
cld
call
call
mov
cld
call
add
call
mov
cld
call
call
lret
call
sar
call
call
scas
cld
incl
xchg
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
shlb
push
ret
add
xor
shlb
dec
add
add
xor
ret
add
xor
xchg
xor
add
xor
xorb
add
xor
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
sbb
mov
push
out
add
out
mov
push
out
add
out
mov
call
mov
imul
mov
cli
add
call
mov
bnd
xchg
ljmp
add
call
xchg
xchg
into
call
xchg
and
xchg
adc
ljmp
adc
xchg
cs
std
jmp
add
ljmp
stc
jmp
jmp
add
xor
add
jmp
add
add
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
jle
out
insl
repz
vrsqrtss
mov
or
xor
add
mov
repz
and
faddp
push
aaa
add
out
xor
bound
mov
outsb
jmp
test
push
test
cmp
shlb
mov
mov
jmp
call
push
pop
xchg
test
sbb
subb
add
fbld
cmp
or
xor
imul
add
test
cmpsl
xchg
std
out
jle
fld1
xor
push
jge
mov
fmulp
inc
add
loopne
xchg
int
mov
and
ret
sarl
pop
push
nop
addb
mov
sub
loopne
fwait
repz
or
hlt
adcb
ret
negb
push
xor
inc
clc
xor
subl
xor
add
add
jo
std
mov
add
mov
and
jo
inc
mov
xor
sbbl
adc
int3
jge
ret
call
push
mov
add
jns
or
jb
and
popa
in
jmp
rolb
mov
shl
data16
push
ds
movb
add
mov
ds
inc
xorb
das
std
imul
ds
inc
stos
adc
mov
es
roll
push
add
mov
add
add
repz
test
xchg
mov
jl
jmp
push
dec
mov
out
sti
or
mov
add
xor
jo
leave
or
cs
aam
scas
sbb
jmp
outsb
inc
enter
test
or
mov
push
cmp
xor
pusha
hlt
or
xchg
sub
sub
cs
lods
movsb
add
iret
jp
mov
test
jns
inc
enter
push
add
out
xor
stos
add
cmp
jmp
lods
cmp
and
jl
push
ds
xor
mov
rol
mull
jno
adcl
testb
xor
stos
cmp
ljmp
std
imul
mov
out
clc
add
add
gs
std
or
jne
lods
lds
push
add
push
or
push
jbe
add
inc
lret
mov
adcb
add
int3
inc
xchg
mov
add
int3
dec
and
das
adc
int3
sub
xchg
mov
add
subl
add
push
scas
insl
add
inc
cmc
cmpb
and
add
adc
add
cmpsb
xor
orl
in
call
and
jmp
das
xor
popf
add
mov
add
hlt
cmc
subb
add
push
popa
xor
pop
jl
std
mov
incb
notl
es
add
push
test
lea
add
out
or
and
lret
enter
mov
lcall
mov
add
mov
mov
insl
in
fbld
call
push
jno
ss
or
xchg
mov
in
jae
and
push
jmp
xchg
mov
mov
mov
mov
cmc
xor
add
loop
push
push
push
or
stos
cmpl
inc
mov
jbe
mov
sbb
inc
enter
ljmp
icebp
add
insl
mov
mov
cmp
xor
or
repnz
push
push
or
sub
int
add
jge
imull
jo
sbb
sub
movsb
leave
das
ret
add
jge
push
dec
cwtl
hlt
push
add
pop
mov
xlat
call
sbb
movsb
mov
sbbl
out
nop
cmp
into
xchg
jno
sub
das
cmp
jmp
mov
lods
jne
call
push
add
and
jge
jb
sbb
and
mov
lret
call
push
es
fsubrp
mov
push
popf
jl
inc
cwtl
js
add
add
icebp
and
sub
sti
decl
mov
outsb
push
ljmp
inc
mov
and
rol
scas
sti
lea
out
cmpl
insl
or
jne
inc
xor
cmp
hlt
push
pushf
push
add
inc
enter
mov
add
mov
or
sub
add
add
ljmp
add
add
cmp
mov
add
jne
xchg
jl
mov
add
insl
lods
idivl
es
xchg
or
push
shrb
push
xchg
dec
xchg
shrl
jne
mov
decb
negl
jne
andl
push
das
movsb
sub
add
dec
push
pushl
xchg
sbb
icebp
aas
sahf
jge
jne
mov
add
lea
imulb
pop
mov
cmpsl
pushf
sbb
jmp
sbbl
addl
mov
mov
in
sub
std
int3
mov
mov
jb
add
movsb
loopne
in
leave
add
jb
adc
sbb
add
jne
movsl
mov
jb
xchg
sbb
cmp
xchg
mov
jb
xchg
sbb
cmp
jge
xor
stos
xchg
mov
sbb
stos
xchg
mov
adc
stos
xchg
add
mov
jp
sub
call
lds
ret
inc
inc
ja
inc
fs
or
lds
imull
insb
sti
or
add
add
jb
mov
imull
fs
or
mov
jns
push
add
mov
cmp
push
and
push
icebp
mov
push
and
cmp
mov
ret
jns
xorl
cmc
cmpsb
jns
sbbl
insb
out
adcb
mov
addl
push
divb
idiv
jne
cmpl
fs
sub
incl
add
call
ret
dec
stc
sbb
jg
addb
ret
call
inc
and
add
call
ret
adc
push
add
call
ret
adc
push
add
inc
call
addl
add
scas
cld
xor
dec
add
int3
mov
test
hlt
je
int3
stc
test
fs
add
jmp
test
adc
mov
insb
in
roll
jbe
or
add
stc
in
jge
icebp
pop
das
add
andl
ret
jo
add
cmp
dec
adc
add
pop
fwait
dec
ss
push
pop
fwait
dec
ja
mov
push
fs
das
bound
push
cld
push
addr16
jmp
loopne
cmp
mov
insb
into
xor
jmp
inc
nop
mov
mov
jmp
insb
jbe
sub
scas
cld
outsb
stos
test
in
in
jmp
test
fdivl
int
xor
test
inc
out
ficompl
stos
mov
push
icebp
xor
mov
jb
add
fnsave
ljmp
outsb
out
idivb
ljmp
outsb
stos
pushf
xchg
push
scas
sub
or
sub
mov
andw
clc
xchg
inc
mov
jecxz
xor
add
sub
or
sbb
pop
push
in
jl
call
add
jecxz
jmp
cmp
enter
push
cmp
out
jae
call
cmp
ret
push
add
ds
inc
subl
cmp
jno
push
std
insb
insb
out
push
sti
add
inc
cmc
je
leave
and
jge
cmpl
xor
sti
jge
cmpl
adc
out
incl
add
insl
or
sub
call
adc
mul
aaa
mov
call
ret
cmp
sbb
xchg
inc
loope
ret
call
adc
push
add
call
subl
jne
enter
sahf
ret
cmp
add
enter
sahf
cmpl
add
jb
cli
inc
jae
cmpl
fidivl
out
sub
xorl
cli
test
jne
push
adc
in
idiv
es
insb
mul
loopne
imull
or
mov
pusha
add
jmp
adc
add
pop
add
lods
xchg
loope
es
insb
in
inc
cli
xchg
inc
rorl
in
xchg
pop
add
es
jecxz
fs
rclb
push
punpckhwd
or
push
push
and
jb
xor
xor
enter
addr16
add
scas
test
dec
add
xor
inc
leave
mov
loope
jecxz
fwait
jmp
mov
loopne
mov
pop
in
out
mov
loop
test
fsubrp
add
in
in
cwtl
lahf
je
add
mov
loopne
mov
ljmp
jae
lods
call
or
je
push
sarb
or
add
pop
fnsave
in
mov
sub
fisttpll
fsubrl
int
fcompl
mov
xchg
fcompl
lods
inc
fisttpll
add
add
fstl
sbb
icebp
fmull
or
rcl
push
jmp
cmp
or
mov
jmp
mov
cmp
add
in
inc
mov
and
out
pushf
out
call
filds
lea
sub
hlt
push
jb
inc
loope
xor
ud0
call
add
add
out
ret
mov
and
pushf
gs
je
or
add
add
xchg
fwait
xor
xorb
cli
clc
xor
dec
mov
jmp
idiv
xchg
xor
rorb
sbb
jmp
add
jo
fiadds
xor
pop
add
in
mov
sbb
add
subl
add
dec
jg
call
jo
push
add
pop
mov
add
pop
je
enter
ljmp
enter
ficompl
push
ljmp
jbe
add
aam
mov
add
jp
stos
add
mov
and
insb
lock
fwait
or
test
add
pop
and
jmp
imul
add
add
addr16
push
dec
or
test
xor
inc
and
test
jae
stos
in
fstp
fwait
std
push
add
loope
sbb
imul
sbb
jmp
jmp
clc
mov
out
popf
xor
add
out
inc
test
add
aas
out
stc
pop
cmp
lea
sbb
scas
jo
in
jo
or
cmp
adc
push
div
sub
fildll
outsl
xchg
in
mov
and
adc
stos
insb
and
jmp
stos
adc
pop
scas
das
xor
push
in
pop
fistl
add
in
jae
imul
sub
gs
jno
out
jl
imull
shlb
sub
cmp
ljmp
cmp
and
and
xchg
add
stc
add
call
ret
add
stc
or
arpl
inc
xor
pop
jmp
sbb
lock
add
test
sbb
adc
add
ret
mov
add
dec
hlt
insl
mov
and
out
pop
outsl
sub
jl
in
sarl
mov
jmp
fwait
pop
push
add
call
jo
or
ja,pn
cmp
cs
add
jmp
jp
enter
ljmp
add
add
pop
push
sbb
cmpsl
notl
push
out
repz
hlt
jbe
outsb
repnz
movsb
popf
imull
gs
add
pop
pop
sbb
out
loopne
orl
cmp
inc
stc
addb
pop
adc
push
cmpsb
imul
xchg
cmp
jb
pushf
imull
arpl
push
inc
call
loopne
outsl
es
shll
jmp
loopne
add
lcall
jmp
negl
push
or
push
jge
test
jno
add
in
jp
jno
jmp
push
in
scas
shl
iret
aaa
push
loop
out
stc
pop
mov
sub
mov
arpl
icebp
xor
imul
and
jmp
jmp
hlt
ds
popf
xor
jmp
add
adc
imul
out
jmp
push
lea
sub
mov
cmp
stos
jo
in
and
dec
lahf
scas
cli
cmc
mov
pop
imull
imul
jbe
int
dec
pop
ret
push
sub
imul
jecxz
stc
icebp
or
call
stos
fs
push
in
stc
icebp
int3
fistpll
pop
imull
dec
mov
add
add
and
push
or
int
testl
shrb
repz
addr16
bound
add
shrb
repz
out
pop
idiv
jb
sti
call
sub
hlt
ficomps
jmp
test
incl
sub
hlt
call
idiv
cmp
incl
push
sub
hlt
push
pop
idiv
cmp
call
sub
add
push
hlt
jmp
push
sti
jmp
add
jmp
add
jmp
cmp
in
out
fdivrl
cmp
aam
add
jmp
add
jmp
cmp
mov
mov
add
jmp
add
jmp
cmp
xchg
fdivp
decl
add
add
jmp
add
jmp
xor
insb
es
jmp
sti
pop
dec
add
jmp
add
jmp
xor
cmp
loope
xor
add
jmp
add
jmp
xor
call
loopne
or
jmp
add
xor
cmp
in
pop
test
loopne
jmp
add
xor
cmp
les
faddp
pop
jmp
add
add
xor
add
xor
cmp
pushf
pop
jmp
add
xor
add
xor
stc
je
shl
jo
jmp
add
xor
inc
push
pop
push
testl
add
xor
add
xor
add
xor
add
xor
cmp
pop
add
fstps
mov
pop
idiv
mov
add
pop
mull
adc
pop
idivl
push
pop
divl
pop
testl
pop
idiv
negl
ficomps
xlat
pop
imull
xlat
pop
testl
mov
pop
idivl
pop
pop
negl
pop
pop
negl
pop
testl
pop
testl
add
inc
es
lcall
incl
xor
add
sbb
lcall
sbb
dec
sbb
jmp
sbb
incl
hlt
ficoms
hlt
ljmp
hlt
ljmp
sbb
inc
xor
add
sbb
jp
hlt
decl
hlt
lcall
hlt
incl
hlt
call
sbb
ljmp
call
and
hlt
incl
add
es
inc
sbb
incl
add
xchg
sbb
call
add
jmp
dec
cld
sub
dec
cld
and
dec
cld
sbb
dec
cld
adc
dec
cld
or
dec
cld
add
inc
cld
cld
faddl
hlt
hlt
inc
cld
in
xchg
in
dec
cld
fadd
dec
cld
aam
inc
cld
int3
jp
cld
les
ds
mov
lcall
movsb
pushf
cmp
cld
add
xchg
add
cld
test
cmp
cld
je
cmp
cld
fs
cld
pop
jl
cld
push
cwtl
ds
dec
mov
cld
inc
xor
inc
aas
pop
push
inc
aaa
pop
imul
pop
xchg
inc
pop
pop
mov
pop
pop
lea
pop
scas
inc
pop
pop
stc
dec
lcall
dec
negl
dec
out
pop
sbb
dec
fistps
dec
xlat
pop
repz
add
iret
pop
arpl
jg
mov
pop
xchg
dec
scas
pop
and
dec
dec
lahf
pop
cmp
jmp
pop
pop
leave
dec
jg
int
ja
stos
dec
outsl
pop
mov
dec
pop
pop
jne
push
pop
add
pop
idivl
mov
idivl
mov
pop
testl
mov
pop
negl
add
mov
notl
mov
negl
mov
pop
idivl
xor
fists
pop
imull
sub
cmp
pop
testl
pop
mul
sub
fldt
pop
notl
sub
std
sub
stos
sub
mov
sub
fwait
sub
add
out
repz
out
repz
repz
add
hlt
repz
repz
hlt
repz
repz
repz
repz
hlt
repz
bnd
repnz
cmp
hlt
jmp
hlt
call
repz
repz
repnz
repz
repz
repz
repz
repz
repnz
jle
repz
repz
add
repz
jmp
ds
fs
ds
pop
lret
ds
push
add
cld
dec
in
cld
inc
adc
ds
xor
ds
sub
ds
and
aaa
cld
sbb
aaa
cld
adc
aaa
cld
or
inc
cld
add
inc
cld
cld
cmp
hlt
shlb
cld
in
fdivs
cld
in
aaa
cld
fmull
cld
int3
mov
cld
in
cld
mov
push
inc
cld
add
lods
dec
add
jmp
xor
cld
xchg
add
cld
mov
add
push
add
imul
add
mov
add
mov
add
mov
add
xor
push
pop
imul
pop
jg
inc
pop
jmp
xor
pop
sub
das
pop
filds
jmp
sbb
pop
pop
fbstp
pop
pop
out
addps
das
call
das
notl
das
out
push
inc
das
add
out
jno
fists
das
xlat
push
imul
push
imull
push
cmc
cs
push
lods
cs
push
sbb
cmpsl
push
in
lahf
push
out
xchg
push
cmp
push
add
mov
push
imull
mov
push
divl
push
test
call
push
notl
stc
push
mull
stc
push
negl
call
push
test
add
movsl
push
not
lods
push
negl
lods
push
divl
push
testl
push
mull
push
notl
and
testl
and
push
not
and
push
testl
xor
add
out
call
out
decl
jmp
repz
repz
jmp
repz
add
repz
call
repz
out
repz
repz
jp
repz
repz
sbb
inc
sbb
pushl
out
repz
hlt
mov
sbb
ficomps
ljmp
hlt
ljmp
hlt
ljmp
push
sbb
incl
sbb
sub
pushf
lods
sub
xchg
cmc
sub
add
mov
cmp
cld
je
cmp
cld
xor
pop
daa
dec
cld
push
cmp
dec
adc
inc
out
inc
cld
cmp
inc
cld
xor
xor
sub
sub
and
sub
sbb
sub
adc
ds
or
inc
cld
add
dec
cld
cld
or
cld
hlt
dec
aas
cld
in
cmpb
in
aas
cld
fcoml
cld
aam
dec
cld
int3
nop
dec
cld
add
les
dec
cld
mov
xchg
dec
scas
push
orl
push
dec
xchg
push
mov
dec
xchg
jg
out
xor
shll
outsl
push
add
push
fnsave
pop
push
pop
inc
push
push
addr16
dec
push
mov
inc
push
scas
dec
aas
push
ret
dec
aaa
push
testl
push
xlat
dec
pop
push
rorl
xchg
inc
andps
inc
pop
push
inc
xor
add
push
jmp
cmp
push
outsl
cmp
push
imul
jmp
sbb
iret
push
mov
push
add
add
shl
push
mull
push
notl
push
idivl
rcll
rcll
rcll
push
imul
call
push
idiv
call
xor
fld1
xor
fsubrp
xor
add
add
push
negl
xor
imul
idivl
rclb
rclb
xor
out
call
push
imul
and
xchg
adc
add
hlt
call
add
xchg
add
mov
add
add
mov
add
fcoml
jle
add
ss
call
hlt
decl
call
hlt
decl
hlt
lcall
sbb
jmp
and
clc
and
and
jmp
and
fisubl
hlt
jmp
and
pushl
and
incl
add
xchg
and
jmp
cmp
aam
cmp
int3
das
cmp
les
add
cmp
cld
mov
cmp
lods
jns
cld
add
movsb
xor
cmp
xchg
jno
cld
mov
cmp
test
cmp
jl
cmp
je
add
jmp
add
dec
pop
xlat
adcl
mov
movsb
add
mov
or
addr16
loop
push
cltd
ljmp
jmp
sub
loop
pop
cmpsl
jmp
add
adc
pop
jg
or
add
add
xor
sub
sti
and
mov
incl
and
call
pop
sbb
sbb
int3
dec
adc
ret
cmp
xor
add
ret
ret
and
pushf
sbb
aad
pop
or
scas
cmp
xor
mov
lcall
aad
add
xchg
adc
rcr
addl
xor
and
icebp
dec
sbb
add
xor
or
fcos
inc
int3
xor
xchg
out
jno
or
pop
daa
add
pop
ds
xor
es
dec
or
rorb
fmuls
call
fnstsw
shr
in
cmp
call
ret
leave
aam
int
xlat
jmp
rcl
pop
stos
add
jb
call
xchg
add
add
aam
mov
leave
dec
jmp
rcl
pop
aaa
int3
enter
aad
ds
mov
sub
xlat
jb
mov
popa
outsb
cmpsb
adc
add
push
gs
push
je
sub
notb
jno
pop
cmp
xor
outsl
lods
das
push
outsb
movb
jae
xor
dec
and
sahf
pop
pop
inc
xchg
xor
jb
pop
pop
push
push
xor
popa
outsb
clc
jno
xor
add
popa
jo
cs
outsl
popa
xor
mov
popa
jo
and
adc
addl
sahf
push
sub
cld
xor
repz
pop
pushf
push
add
adc
imul
sub
xor
imul
sbb
add
dec
call
adc
jae
push
jns
sahf
add
jns
inc
sbb
insb
push
pop
add
xchg
sub
adc
adc
push
add
out
sub
adc
adc
push
add
fwait
leave
adc
jb
xor
jmp
testl
shrl
adc
fcompl
sub
add
xor
add
das
fiaddl
sub
fsubl
pop
cmc
pop
sbb
in
and
xor
inc
dec
adc
ret
aaa
add
iret
pop
ss
and
xor
add
or
mov
add
enter
stos
xor
adc
add
xor
movsb
add
iret
into
jno
cli
leave
dec
jmp
lock
cmp
out
dec
enter
lret
in
dec
inc
int3
in
call
out
aam
sbb
push
xor
jmp
aam
adc
sub
add
jmp
pop
std
hlt
fdivs
enter
fcompl
xor
adc
fistps
fdivs
leave
in
inc
into
fcompl
xor
jle
add
cli
push
lea
enter
or
mov
adc
mov
add
push
xor
insb
mov
popa
insb
sub
adc
int
fs
fwait
adc
movsl
and
add
lods
add
adc
out
out
jno
and
push
arpl
and
aaa
add
adc
cmpsb
sub
xchg
cs
add
fs
jno
sahf
daa
arpl
add
ds
pop
outsb
subb
add
xchg
es
jb
sub
punpckhwd
and
inc
mov
rorb
mov
cld
ds
jmp
clc
punpckhwd
jns,pn
add
mov
ss
ds
sub
pop
add
pop
daa
adc
dec
jmp
add
inc
pop
pop
inc
and
gs
sub
adc
adc
add
inc
ds
insb
daa
imul
jge
or
or
imul
cmpsb
and
cld
test
lret
sbb
shr
add
cmpsb
and
fnstsw
mov
fstpt
pusha
xor
and
add
cltd
fnstsw
sbb
inc
daa
xchg
adc
lods
shll
push
ret
cmp
inc
mov
pop
and
int
add
xor
and
repz
pop
fsqrt
and
int
add
cs
adc
stc
fnstenv
add
sar
mov
or
dec
jmp
pop
rorl
add
fadds
stos
fldenv
call
int
jns
fstps
out
push
repz
fsubr
jecxz
pop
pop
aas
add
enter
add
pop
sbb
shrl
out
jmp
fucom
pusha
adc
rcl
dec
jmp
add
inc
std
hlt
iret
jmp
hlt
ret
cmp
stc
add
ljmp
insl
xor
inc
add
pop
jae
sbb
inc
add
aaa
gs
mov
arpl
xchg
es
gs
push
dec
mov
push
js
xor
add
push
push
popa
xchg
daa
inc
push
add
movsb
add
pop
adc
and
add
stc
xor
repz
add
fisttpll
push
jae
call
push
jns
loopne
inc
imul
arpl
arpl
mov
add
fwait
testb
pop
insl
lret
fs
xchg
out
or
jb
mov
push
gs
cmp
aas
xchg
sbb
xchg
adc
cmp
push
and
adc
add
add
daa
cld
call
cmp
adc
inc
pop
dec
cmp
fs
std
xor
dec
push
pop
insl
dec
das
and
jmp
add
push
cmp
addr16
shlb
or
pushf
adc
mov
sbb
xor
aad
and
rcll
xor
pop
aam
cmp
lret
cs
fdivr
add
mov
je
mov
js
jmp
sub
int3
aam
and
aad
or
jle
sbb
xor
add
sub
pop
into
sbb
lret
pop
adc
xor
inc
rolb
add
int
cld
jb
aad
pop
int3
fld
pusha
lret
js
call
aam
aam
les
lret
pop
movb
cli
int
mov
lret
gs
fsub
pop
cltd
call
mov
pusha
sti
in
insb
jmp
arpl
in
aas
enter
out
lret
cld
cmp
mov
imul
dec
add
jb
call
mov
pop
pand
add
or
push
jb
out
jmp
add
adc
scas
push
pop
arpl
xor
add
and
and
add
jo
pop
gs
add
push
inc
push
jne
and
pop
and
mov
and
lahf
sbb
pop
add
xor
je
push
pop
arpl
inc
inc
push
add
imul
hlt
pop
pop
insb
out
call
sbb
adc
add
faddl
ds
cmp
sbb
cmp
adc
jmp
cmc
dec
stc
pusha
ljmpw
stc
pusha
pop
imul
jbe
imul
andb
mov
movsb
ret
pop
pushf
mov
pop
mov
add
mov
lock
add
jmp
bound
stc
jmp
fcoml
ds
cld
enter
adc
xlat
inc
mov
incl
or
cld
out
aas
clc
jmp
add
int
test
push
xor
mov
cmc
fs
fldl
movsb
rol
scas
mov
call
call
add
shr
lcall
lret
call
call
test
inc
icebp
cmpsl
fld1
add
sub
in
fld1
add
xor
hlt
aas
iret
ljmp
rcr
gs
out
cld
insb
sbb
fldl
mov
sbb
es
int3
inc
cld
sahf
ret
xchg
lock
fnsave
scas
fdivr
inc
add
call
int3
pop
cltd
pop
xlat
les
dec
jmp
inc
ret
insb
xchg
push
in
addr16
push
rcrl
call
into
pop
scas
pop
aam
movsb
and
in
jecxz
jne
pop
ss
push
loopne
jecxz
push
and
arpl
aaa
gs
imul
idiv
scas
ss
gs
push
insl
out
inc
add
add
inc
push
push
sti
dec
push
add
push
imul
arpl
xor
inc
push
imul
push
dec
cmp
pop
jb
push
imul
inc
jns
push
pop
fs
push
idiv
imul
push
imul
push
add
push
push
imul
inc
jno
jmp
icebp
pop
jg
shlb
add
fsubrl
mov
imull
shrb
sti
mov
sbb
insb
cmp
fbld
sbb
data16
std
dec
std
inc
fidivs
fsubrl
je
pushw
pop
loop
push
xchg
sti
push
add
fsubrs
gs
mov
loop
ret
mov
inc
jmp
add
mov
xchg
pop
in
mov
inc
jmp
movsb
sarb
xor
dec
jecxz
ret
pop
xor
in
pop
aam
call
cmp
or
imul
in
cmp
pop
call
adc
call
repnz
shr
call
add
repz
rcr
int
call
call
add
fcmove
mov
xlat
int3
ret
mov
ret
rcl
call
mov
jp
mov
call
cli
aad
dec
clc
shll
sub
in
incl
repz
push
enter
sbb
inc
dec
iret
enter
or
cs
dec
push
mov
shll
shll
mov
insb
or
cmc
data16
add
jle
dec
xchg
imul
std
inc
sbb
cmp
adc
out
addr16
mov
call
in
gs
dec
rcrl
call
enter
dec
bound
jno
ds
imul
pop
add
push
imul
popa
outsl
mov
push
imul
cmp
ds
outsb
adc
je
add
insb
push
jae
dec
push
gs
add
push
imul
pop
outsl
popf
das
mov
fs
push
jb
repz
push
push
fwait
dec
push
outsl
lahf
inc
inc
add
fs
dec
and
das
mov
gs
push
inc
subl
fisubrs
mov
pop
mov
int3
decl
add
mov
mov
add
add
loop
dec
sub
data16
repnz
clc
in
dec
cld
sti
sbb
or
pusha
inc
adc
pusha
dec
cmc
int3
mov
and
cmp
ljmp
in
add
push
inc
shlb
xor
dec
adc
fbld
inc
add
ficomps
push
out
pop
flds
ret
push
add
jnp
push
xchg
xor
add
add
leave
mov
cltd
mov
pop
add
sarl
lcall
loopne
xor
roll
loope
jmp
loop
add
xor
in
int
in
dec
aad
repz
or
add
lret
inc
lret
or
xor
in
int
in
push
aad
repnz
cmc
out
xor
filds
add
aam
test
mov
add
mov
inc
lds
dec
shlb
inc
lds
adc
jmp
ficomps
mov
arpl
call
int
push
or
pop
inc
fucompp
imul
fs
cld
dec
sub
leave
arpl
ret
scas
cmp
sbb
loopne
sbb
add
rcrl
mov
jb
mov
dec
jmp
mov
cmp
mov
jno
test
dec
out
negl
aad
add
outsl
pop
jne
dec
idiv
in
push
ja
dec
bound
push
jb
xchg
add
cmp
dec
push
outsl
jno
idiv
bound
push
push
add
inc
dec
bound
xor
pop
imul
fs
notb
gs
add
push
jb
cld
push
pop
gs
sub
add
cmp
testl
gs
push
jno
cmp
outsl
jmp
add
call
repz
into
outsl
out
ret
dec
add
xchg
imul
fs
add
std
push
xchg
in
inc
scas
rcl
in
out
aas
dec
aam
pop
dec
aas
jmp
add
pop
push
push
out
dec
sbb
push
jmp
add
jb
sbb
outsl
cmp
add
push
in
pop
adc
cmp
out
add
xor
loop
lret
cwtl
cmc
add
add
movsl
ficomps
ret
popf
xor
in
xchg
aam
rclb
add
jmp
xchg
nop
loope
in
lret
call
loope
in
out
call
sbb
mov
es
fldl
pop
rolb
cmpps
or
xor
loope
enter
ret
or
add
add
int
add
jns
pop
int3
popf
xor
pop
into
dec
ret
pop
repnz
pop
ret
das
xor
outsl
les
push
mov
add
cmp
lcall
pusha
lea
jb
add
outsl
jmp
ror
jb
stos
aad
inc
fcmovne
outsl
jmp
lret
cmp
add
iret
pop
cmp
lret
outsb
cmp
into
call
out
out
jno
fisttps
fldl
fs
push
je
inc
push
jmp
aas
push
push
sub
outsl
lea
popa
jle
pop
outsb
push
xor
add
imul
bound
aas
inc
imul
je
dec
pop
add
inc
jb
dec
imul
dec
push
jb
mov
push
shrb
test
push
cmp
gs
insb
push
je
dec
bound
das
pop
add
dec
jb
notl
jae
push
push
push
jmp
add
jmp
and
imul
call
pushl
aas
push
push
mov
fistl
lds
decl
inc
shrl
dec
mov
dec
add
add
jmp
cmpsb
out
mov
add
mov
fstpl
mov
add
mov
insb
mov
rcrl
sti
sub
das
pop
mov
jmp
add
cld
jno
in
imul
loopne
jmp
pop
add
lret
or
or
pop
lock
loopne
xor
add
int3
std
ljmp
call
icebp
add
lret
mov
call
faddp
fxch
in
shrl
xor
les
add
fiadds
shll
xor
mov
mov
xor
jmp
dec
mov
call
loop
loope
inc
xchg
lret
imul
or
sub
shlb
add
mov
pop
sbb
icebp
pop
std
stos
aam
cli
xchg
pop
sbb
ficomps
shlb
and
mov
add
ss
jb
call
aam
lods
adc
inc
jmp
adc
push
adc
dec
jmp
rcrb
pop
add
mov
dec
add
adc
and
idiv
aas
ss
gs
clc
pop
jo
sub
xorb
lds
imul
jb
in
inc
add
xor
push
popf
sbb
xor
add
adc
sbb
pop
add
xor
and
dec
arpl
idiv
les
xor
andl
add
jno
pusha
addr16
idiv
pusha
ss
imul
arpl
arpl
push
fisubrs
jnp
jb
sbb
cmp
inc
js
data16
mov
inc
or
push
cmp
fisubl
sub
adc
pusha
in
dec
add
call
or
ljmp
les
shll
sbb
or
add
imul
fbstp
cmp
aas
mov
mov
inc
test
add
mov
loopne
jmp
add
xchg
inc
loope
cmpl
sbbl
or
lea
sub
cmp
sub
sbb
sub
sbb
rdtsc
test
sub
or
add
sets
out
sahf
push
pop
in
fsubs
add
add
scas
test
test
add
xor
les
js
hlt
mov
daa
add
je
hlt
nop
mov
add
notl
call
cltd
dec
dec
fcoms
add
out
insl
pop
cmp
add
xchg
js
dec
mov
addr16
out
add
mov
insb
add
sbbb
lahf
imul
mov
jb
call
cltd
push
int3
dec
pushf
jb
cmp
cmp
cmp
addr16
call
xchg
outsb
test
cltd
push
popf
sbb
arpl
jg
push
jae
add
push
push
xor
pop
push
jae
pop
push
push
ret
add
sbb
das
adc
sub
out
pop
bound
and
outsl
loopne
pop
arpl
xor
add
sbb
fisttps
fs
sub
das
pop
bound
and
xor
pop
arpl
and
jle
push
jb
push
js
add
sub
pop
popa
jle
jno
pop
xor
add
lock
lds
js
mov
add
jmp
lock
mov
imul
jmp
sar
inc
cmp
imul
icebp
imul
jmp
push
popa
cld
pop
ljmp
push
ljmp
dec
add
xor
jmp
aas
add
or
out
addr16
incb
inc
int3
add
pop
mov
int
push
lahf
out
test
mov
add
outsl
fwait
out
movsb
test
popf
xor
cmp
jmp
nop
inc
imull
je
aad
sub
sbb
mov
xor
xchg
push
roll
or
adc
jle
clc
es
add
aam
sub
add
loopne
popf
fcmovbe
int
mov
add
xchg
lods
rol
xchg
add
adc
addr16
xor
add
and
addr16
add
imul
fimull
fistl
jns
mov
mov
sub
jns
test
sbb
roll
sbb
js
jb
jns
fs
mov
inc
pushf
pop
mov
sub
insl
ficoml
ret
push
add
imul
sub
push
gs
sbb
je
add
push
push
jne
xor
push
sub
inc
dec
mov
or
ljmp
push
popa
es
push
outsl
sbb
xor
popa
out
inc
outsb
jecxz
pop
je
jmp
loope
jb
xchg
xor
add
and
jb
push
add
addr16
pop
addr16
or
xorl
jmp
fldt
add
iret
shll
xlat
shll
xlat
add
leave
fldt
loopne
cmp
scas
in
js
sbb
nop
jmp
fldt
lret
fbld
loopne
push
cmpsb
loopne
pop
jne
dec
jmp
cld
dec
dec
xchg
inc
inc
outsb
mov
aas
jne
jb
ja
dec
jmp
add
insb
mov
decl
aam
push
and
push
pop
jecxz
add
iret
pusha
fdivs
sar
pop
add
xor
aad
cwtl
fcmovnb
inc
daa
or
cwtl
pushf
fcmovnb
iret
mov
aam
mov
mov
mov
repz
jns
add
xor
repz
jg
add
xor
cmc
sub
push
add
popf
pop
lds
pop
mov
sbb
in
mov
fbld
pushf
xor
aaa
mov
cmp
adc
cld
aam
nop
or
stc
jge
add
lcall
inc
lcall
sbb
negl
andb
sbbb
xchg
pop
lods
adc
addr16
cmp
imull
andb
insl
popa
xchg
jle
dec
jmp
add
call
xchg
dec
jg
mov
inc
jmp
jg
pop
cmp
xchg
insl
inc
mov
divl
orl
mov
and
popa
adc
iret
add
push
xor
add
push
and
push
ss
push
push
idivb
push
jnp
push
insb
xor
add
add
jecxz
insb
pop
adc
jae
pop
push
adc
idiv
inc
pop
insl
arpl
pop
dec
jnp
push
push
gs
jo
pop
repz
lock
arpl
adc
push
adc
shl
xor
xor
or
cmpsl
xor
gs
add
loopne
pop
insl
jmp
shll
add
jmp
loope
into
sbb
icebp
jno
add
sbb
out
ret
std
add
jmp
fbld
add
imul
sbb
add
fwait
lds
pop
xchg
add
mov
jno
out
pop
push
mov
jns
int
dec
cmpsl
fiaddl
mov
dec
insl
cld
sbb
push
int
cmp
imul
jb
jns
bound
sbb
jne
push
int
add
std
xor
adc
adc
je
cmp
xchg
xor
rcrl
fidivrs
cltd
aad
inc
and
aad
pushf
shl
cltd
ret
fsubp
test
add
lea
ljmp
xchg
add
stos
icebp
xchg
jne
cmp
sahf
aad
push
aam
nop
dec
add
add
xor
mov
cmp
push
inc
xor
popf
add
mov
pop
daa
cltd
mov
mov
cmp
call
pop
es
jmp
test
dec
test
push
lahf
add
out
insl
jb
dec
xchg
pop
stos
pop
lea
cmp
aad
jo
mov
xchg
jo
call
test
and
add
nop
insb
orb
pop
movsl
sub
divl
ljmp
cmpsb
lret
mov
pop
dec
rclb
pop
dec
xchg
and
add
sbb
jmp
push
gs
pop
jb
clc
inc
add
sub
aam
cmp
sub
imul
imul
idiv
sub
fs
bound
add
adc
push
gs
gs
std
pop
jb
jo
inc
add
inc
jb
or
gs
ljmp
data16
shlb
add
mulb
and
push
popa
jmp
jmp
pop
or
or
aas
das
push
rdmsr
mov
pushf
add
xor
pusha
ucomiss
push
add
std
aaa
repz
pop
and
in
lds
add
jmp
lods
inc
movsb
hlt
into
inc
mov
stc
rcrb
out
xchg
in
into
call
lods
pop
xchg
lods
add
out
inc
cltd
lods
jecxz
dec
cmp
lods
imul
pop
aas
mov
pop
inc
pushf
call
add
xor
mov
jb
call
add
xor
inc
jmp
sbb
sub
cli
xchg
or
pop
jbe
out
movsl
jmp
mov
jne
out
movsb
sbb
enter
dec
pop
ret
subl
xchg
movsb
lock
mov
add
mov
lock
movsb
fwait
ljmp
scas
mov
push
push
jmp
sahf
xchg
jno
jge
mov
push
out
insl
push
sbb
xchg
fs
mov
xchg
jb
scas
jge
sbb
mov
test
inc
pop
pop
adc
dec
mov
arpl
and
fstpt
xchg
push
aad
mov
add
cmp
lcall
xor
insb
mov
call
mov
jae
lahf
mov
pusha
pop
idiv
cmpsb
xor
push
push
xor
aas
cmovb
stc
sbb
pusha
je
add
loope
pop
jb
xor
jno
mov
adc
out
icebp
push
jb
or
loope
imul
pop
je
cld
push
xor
add
out
jo
ljmp
das
ljmp
push
push
jno
jg
idiv
scas
xor
jb
add
and
jno
dec
or
dec
adc
popa
adc
inc
push
sub
dec
xor
stc
and
push
sahf
add
dec
cwtl
in
push
shlb
scas
mov
dec
dec
cld
outsb
jmp
fsubrs
pop
fstps
lds
cmpl
std
pop
jmp
add
add
inc
out
or
ljmp
dec
aad
jmp
push
into
sub
cmp
inc
mov
out
push
std
lds
lock
stos
or
jb
loope
imul
out
jbe
test
xorb
xorl
test
inc
jg
aam
xchg
jp
and
mov
daa
lahf
jp
add
mov
movsl
dec
aam
xchg
aas
call
aas
mov
je
and
cmp
and
xor
and
cld
xlat
test
push
add
sub
and
rclb
mov
int3
xchg
movsb
shr
jno
add
add
call
add
insb
dec
fcmovu
push
pop
test
sbb
adc
jb
jge
lahf
pop
jnp
jge
mov
call
xchg
shlb
lea
daa
mov
sbb
dec
cmp
add
lods
inc
cmp
mov
push
add
dec
xchg
dec
mov
lahf
inc
add
sbb
jmp
add
call
push
mov
pop
ljmp
inc
add
adc
ljmp
div
in
xor
pop
add
sub
pop
arpl
idiv
into
xor
pop
add
or
scas
xor
filds
pop
jbe
xor
jno
das
add
jae
rolb
pop
jne
xor
add
add
idiv
jp
pop
fists
pop
jb
sub
jno
adc
jmp
call
imul
outsl
cltd
add
imul
fdivl
fmul
insl
mov
fdivrp
in
add
inc
mov
mov
pop
fwait
in
push
shr
pop
dec
mov
loope
sbb
jno
pop
frstor
add
insl
mov
xchg
pop
add
push
pop
ret
gs
stc
pop
in
add
pop
in
into
push
cld
dec
cmpsb
pop
scas
dec
movsb
pop
sub
cld
shlb
pop
shrb
xor
add
sub
shl
xorb
or
int
lods
popf
mov
pushf
popf
loopne
popf
xchg
inc
jb
add
lods
jmp
add
dec
xchg
fisttps
jge
cmp
test
push
mov
testb
add
cs
adc
in
or
sbb
or
aaa
ret
adc
add
or
loopne
sti
adc
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
inc
xor
add
add
add
push
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
inc
add
xor
add
add
sub
add
push
inc
add
xor
add
xor
add
inc
add
add
xor
add
add
push
xor
add
or
add
xor
cmc
mov
pop
add
jmp
call
jmp
add
jmp
add
jmp
idiv
adc
dec
testl
add
jmp
add
jmp
add
jmp
cld
jmp
dec
neg
and
add
adc
add
jmp
add
jmp
add
add
jmp
add
jmp
mov
add
or
add
or
int3
or
add
or
add
or
sub
add
jmp
jmp
js
jo
add
xor
add
xor
inc
in
jo
add
xor
add
xor
add
xor
add
mov
jnp
jo
add
xor
add
push
jne
loop
jmp
incl
add
jno
add
sar
inc
lods
aaa
sub
and
fnstsw
xchg
lds
js
jno
mov
outsb
arpl
imul
sub
mov
xchg
dec
insb
add
push
fnstcw
add
popf
scas
mov
pop
adc
adc
mov
xchg
shrl
mov
push
pushf
pop
jmp
inc
addl
cltd
dec
daa
insl
push
and
and
pop
cmp
jbe
repnz
inc
adc
push
ljmp
push
lret
lahf
rorb
cmp
push
push
imul
and
cmp
iret
mov
pop
jg
dec
cmp
fwait
xchg
pop
add
jge
xchg
lock
test
mov
push
adc
addr16
clc
repz
mov
subb
fwait
xchg
loop
add
push
adc
add
imul
aas
cmpl
xlat
and
sub
adc
icebp
cmp
lea
in
add
gs
pop
pop
jne
icebp
aas
add
jmp
add
addr16
out
push
les
scas
add
das
sbb
mov
dec
imul
or
push
cmc
xor
ret
xchg
fdiv
ljmp
jg
push
fcoml
mov
cmpsl
les
mov
aad
inc
mov
xchg
sbb
mov
add
stos
rorb
cld
bound
data16
cmp
xor
test
rorl
dec
adc
cltd
xor
dec
dec
iret
outsb
cld
or
push
js
adc
adc
out
jae
inc
dec
enter
imul
leave
call
jnp
cmp
xchg
adc
test
into
jb
cltd
add
bound
cli
aam
loop
das
mov
dec
inc
mov
mov
movsl
jle
or
jp
inc
mov
je
lcall
and
cld
ja
xchg
sub
test
daa
iret
adc
push
clc
inc
mov
push
sbb
cmpsb
insb
bound
test
in
out
lahf
std
clc
sti
mov
add
xchg
call
add
jno
dec
xorb
call
jo
jmp
call
xor
jns
jo
jmp
call
xor
das
xchg
jno
jmp
call
xor
add
xor
add
xor
add
enter
xor
add
xor
add
add
aas
add
xor
add
add
insb
leave
aas
add
add
push
xor
add
add
and
xor
add
xor
add
xor
add
fidivrl
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
fidivrl
add
pop
add
jmp
add
jmp
add
jmp
test
add
add
pop
add
jmp
add
jmp
add
jmp
movsb
inc
jmp
add
jmp
add
jmp
add
jmp
test
jmp
add
jmp
add
jmp
add
jmp
stos
inc
jmp
add
jmp
add
jmp
add
jmp
stos
inc
jmp
add
jmp
add
jmp
add
jmp
and
pop
add
jmp
add
jmp
add
jmp
and
add
add
sbb
add
xor
add
xor
sub
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
sub
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
iret
test
xor
add
xor
add
xor
shrb
xor
jmp
call
outsb
add
call
xor
jmp
fwait
outsb
add
call
xor
jmp
pushf
outsb
add
call
xor
jmp
sahf
outsb
add
call
xor
jmp
add
call
outsb
add
call
xor
jmp
sbb
xor
jmp
call
outsb
add
call
xor
add
das
add
cmp
add
shrb
add
ret
add
inc
add
add
shrb
add
ret
add
push
add
add
subb
add
add
add
xchg
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
lret
add
mov
mov
inc
add
mov
outsb
mov
jmp
ja
jmp
ja
jmp
ja
jmp
ja
jmp
ja
jmp
ja
jmp
jbe
jmp
jbe
add
jmp
jbe
jmp
jne
jmp
jne
jmp
jne
jmp
add
jmp
xchg
or
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jp
jmp
jp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
mov
add
pop
add
jmp
add
jmp
jmp
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
add
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
add
add
add
add
shlb
add
shlb
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
inc
xor
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
repz
or
das
or
rclb
add
sbb
pop
ret
jl
cld
jmp
incb
repz
out
hlt
std
out
sbb
aam
decl
cmp
push
roll
push
mov
inc
cmp
push
inc
inc
pop
push
inc
test
add
add
mov
pop
aaa
inc
inc
pop
pop
inc
pop
pop
incl
in
add
add
xor
adc
inc
or
inc
jmp
add
mov
in
out
aas
in
adc
aas
lds
iret
aas
lods
adc
aas
movsl
adc
inc
lea
aaa
inc
inc
adc
inc
dec
adc
aas
adc
insl
adc
test
popl
adc
in
xor
add
stc
fdivl
xchg
frndint
xor
in
sub
fcompl
int
dec
sub
in
cmp
sub
sti
pop
sub
hlt
mov
in
sub
pushf
sub
in
mov
sub
hlt
or
adc
fldt
int
dec
sub
lods
sti
insb
sub
dec
add
hlt
mov
insl
in
sub
fcompl
xor
xchg
mov
xor
push
xor
xor
ss
sbb
push
xor
cmp
divb
dec
ss
insb
xchg
jl
jbe
mov
jbe
pushf
ss
xor
divb
int3
divb
fdivl
add
xor
ss
xor
or
mov
sbb
push
xor
cmp
jbe
dec
aaa
ss
aaa
push
xor
aaa
jmp
add
mov
add
sbb
add
aam
les
add
cld
mov
in
fwait
add
cld
adc
add
sti
or
repz
mov
add
rcrl
add
ret
repz
or
mov
or
mov
movsb
and
adc
adc
aam
xor
in
sbb
hlt
repz
add
sti
or
repz
mov
or
or
inc
std
or
std
clc
inc
gs
push
inc
test
mov
std
cwtl
inc
movsl
std
sub
std
sbb
std
dec
inc
std
cmp
std
add
call
inc
inc
lods
std
fadds
test
or
std
mov
std
js
gs
push
cmp
mov
add
jmp
add
hlt
rolb
hlt
mov
loopne
in
add
hlt
rolb
hlt
rolb
movsl
xchg
insb
xor
jbe
xor
jl
gs
xor
add
xor
pop
mov
xor
aaa
or
popf
aas
cld
xor
ss
in
push
sbb
aad
dec
xor
adc
pop
xor
testb
imulb
xor
fidivrs
xor
mov
xor
mov
xor
popf
sbb
add
add
push
cmp
inc
push
dec
xor
pop
xor
push
imul
push
jnp
push
push
mov
add
stos
xor
add
lret
xor
push
add
sti
xor
or
pop
sbb
pop
sub
pop
cmp
clc
dec
xor
clc
pop
xor
pop
imul
jnp
xchg
mov
stc
lcall
add
mov
xor
clc
fidivl
clc
ljmp
adc
or
or
sbb
jecxz
sub
mov
in
dec
mov
arpl
imul
out
mov
mov
fwait
push
movsb
in
stos
push
jl
mov
stos
in
fcomi
mov
in
sti
notb
stc
or
or
sbb
jecxz
sub
mov
aad
cli
dec
mov
jecxz
imul
stc
mov
movsb
clc
stos
sbb
push
stc
lret
std
sub
fcomi
xor
stc
mov
lock
in
add
clc
rolb
rolb
clc
xor
clc
and
testl
inc
pop
divl
testl
inc
popf
testl
add
inc
test
and
testl
lock
sti
add
int
sarb
sti
sarb
sbb
cld
mov
cmp
sti
jo
pop
cld
jo
gs
cmpb
cld
cmpb
cld
nop
cmp
and
mov
add
in
xor
std
mov
push
cmp
xchg
jo
popf
andb
add
adcb
gs
cmp
mov
cmp
sarb
push
lock
inc
adc
popf
xor
cmp
xor
cmp
and
cmp
and
mov
adc
sbb
add
cmp
scas
cmp
lahf
cmp
push
divl
cmp
not
cmp
mul
cmp
add
div
cmp
sti
add
sti
adc
sti
and
sti
xor
sti
inc
cmp
sti
push
cmp
sti
bound
xor
xor
xor
xor
data16
cmp
xor
cmp
xor
cmp
cli
add
es
and
sti
inc
cmp
out
bound
add
xchg
cmpb
mov
mov
push
push
test
jae
jecxz
sbb
repz
adc
add
sti
hlt
adc
repz
and
mov
hlt
inc
lds
hlt
arpl
xchg
cmc
andl
hlt
mov
or
pushf
hlt
sar
repz
jecxz
fwait
hlt
repz
adc
add
add
sti
repz
repz
mov
cmc
inc
les
cmc
push
mov
xor
cld
js
pop
cld
push
cmp
mov
jne
cwtl
cmp
cld
cwtl
cmp
cld
mov
xor
jmp
call
inc
mov
repz
inc
xor
hlt
enter
add
fadds
hlt
push
inc
jge
mov
hlt
js
popf
hlt
sub
hlt
sbb
hlt
or
hlt
sbb
hlt
call
aas
mov
mov
insb
xor
fists
fidivs
test
les
and
mov
xor
les
sub
add
cwtl
in
or
jns
das
in
xorb
jo
cmp
addr16
cmp
push
cmp
xchg
cmp
inc
mov
aaa
mov
and
aaa
mov
fdivl
adcl
sti
ljmp
cmc
cli
cmp
cmc
add
repnz
fidivrs
ss
out
ds
out
cmp
cmc
idivb
add
mov
cmc
push
cmp
cmc
cs
cmc
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmc
jle
push
testb
cs
cmp
mul
cmp
imul
cmp
div
cmp
cmp
cmc
lret
cmc
sarb
jb
fidivrl
jmp
hlt
jecxz
cltd
hlt
jmp
mov
repz
rorb
das
mov
scas
daa
out
dec
pop
mov
fwait
push
mov
mov
push
mov
mov
inc
out
mov
out
aaa
out
outsl
in
testl
cmpsl
negl
lahf
mull
ja
fistpll
cld
jmp
in
ja
push
in
jg
test
xchg
push
in
sbb
clc
push
in
lahf
add
clc
mov
out
divl
inc
out
dec
cmp
push
out
pop
cmp
jmp
out
add
jge
in
ds
fdivrl
cmc
icebp
cld
ds
icebp
cld
ds
icebp
sub
aas
aas
mov
cmp
movsl
icebp
sub
gs
insb
ds
insb
jne,pt
jl
gs
insb
ds
icebp
dec
ds
mov
add
cmp
into
cmp
cld
inc
cmp
cld
icebp
aaa
add
mov
push
std
mov
fistpll
mov
and
pop
and
cmp
adc
cmp
cmpsb
cmp
cmp
hlt
mov
jecxz
xor
inc
shlb
leave
call
mov
sub
add
repnz
lcall
jle
das
iret
xchg
imul
andb
jo
xor
je
xor
arpl
xor
xor
gs
loope
sub
cmp
stc
pop
cmp
enter
cmp
sub
idiv
add
add
add
push
add
icebp
add
add
fiadds
popf
aaa
sub
out
aaa
inc
clc
xchg
cmp
clc
fstpt
movsb
hlt
push
cmp
sti
lock
ret
add
add
xchg
cmp
ljmpw
repnz
xor
cld
inc
xor
jno
sti
mov
xor
sbb
add
jmp
lock
push
lock
pushl
mov
pushl
jae
gs
add
xchg
out
fnstsw
sti
push
rolb
movzwl
clc
sub
shr
mov
adc
loope
jbe
pop
in
mov
add
add
loopne
aaa
test
fstps
lock
out
or
mov
es
cmc
mov
xor
lock
add
cmp
int3
out
cmp
inc
out
jo
jmp
call
cmp
in
fidivrl
in
fdivrs
sub
cmp
out
lods
cmp
out
inc
cmp
in
pop
cmp
in
call
cmp
sti
mov
sub
out
shll
cli
inc
cmp
stc
aad
movsl
stc
cmp
mov
add
js
add
inc
ss
stc
lea
ret
clc
bound
add
je
xor
pop
sbb
pop
inc
xor
pop
cmp
pop
xchg
cmp
ja
out
xor
sbb
xor
sbb
xor
sbb
xor
es
push
xor
cmp
fnsave
cli
and
xlat
fidivrl
fcomp
leave
xor
dec
fnstcw
sahf
add
mov
push
aaa
push
clc
xor
sub
xor
imul
jp
mov
insl
in
xor
in
xor
out
xor
out
xor
in
xor
in
xor
or
in
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
mov
add
add
out
xor
fbstp
insl
in
xor
out
xor
out
xor
out
xor
out
xor
inc
xor
out
xor
jne
adc
mov
ds
xor
fucomi
in
mov
stos
clc
inc
mov
push
stc
lcall
stc
jmp
loope
movlps
pop
add
xchg
add
ljmp
negl
add
jmp
add
jmp
out
rcl
lock
dec
lock
mov
fcoms
add
or
out
cmpsb
sbb
mov
fsub
add
das
add
jmp
icebp
add
inc
in
sbb
cld
out
lods
in
pusha
xor
out
es
stc
pushf
daa
push
es
das
sub
sub
jmp
add
daa
in
repz
aam
sti
daa
hlt
ljmp
add
adc
hlt
ljmp
hlt
ljmp
adc
mov
daa
xor
mov
add
xchg
daa
hlt
ljmp
hlt
ljmp
push
ljmp
je
mov
test
xchg
daa
je
jnp
je
jae
je
stos
daa
add
add
add
cmp
or
cmp
sarb
or
fdivrs
cld
xchg
loopne
cld
sub
cld
xorb
in
push
cmp
fmull
cmp
inc
dec
cmp
inc
adc
or
sbb
test
cmp
test
je
lock
add
mov
or
mov
sarb
test
fdivrs
xchg
add
cmp
cmp
cmp
add
sarl
cmp
roll
rorl
rcll
cmp
sbb
add
xlat
das
cmp
xlat
aas
cmp
inc
cmp
dec
cmp
push
cmp
xlat
pop
cmp
enter
out
das
add
mov
mov
call
jecxz
xor
jecxz
xor
in
xor
in
xor
in
xor
in
xor
jmp
or
add
es
pop
xor
cli
in
ss
mov
mov
out
aaa
inc
jecxz
aaa
fst
sbb
mov
and
pop
add
jmp
and
enter
sub
loopne
ljmp
adc
add
mov
add
jmp
repnz
xchg
repnz
sbb
jmp
sbb
sbb
nop
cli
fs
inc
repnz
clc
push
icebp
xchg
pop
out
dec
fsubr
push
fsubrl
in
pop
aam
in
fs
addr16
mov
xchg
in
btr
ljmp
shr
push
adc
or
sub
pop
ljmp
lret
out
cmp
out
mov
out
test
xor
add
or
sub
out
add
cmp
xor
in
inc
sub
in
push
sub
shr
xor
add
xor
repz
and
xchg
and
repz
and
cmpsl
push
dec
icebp
inc
pop
out
negl
fwait
lock
sbb
sbb
inc
and
sub
fsubl
das
aam
sub
sub
mov
sub
mov
popf
cld
sub
xchg
in
sahf
sub
scas
xchg
insl
cs
jbe
sub
sbb
sub
push
subb
pop
pop
das
jle
int3
mov
cmp
cmp
inc
adc
cmp
mov
aaa
nop
pop
out
lock
and
push
mov
jno
add
ret
pushf
fistpl
cmp
add
pusha
cmp
xlat
hlt
cmp
sub
sbb
cmp
lret
cmp
mov
push
pop
fdiv
incl
xor
add
xor
ficoms
xor
popa
xor
fistpll
xor
add
fcomip
xor
fcoms
xor
loopne
xor
loopne
ss
idiv
adc
add
mov
in
xchg
jecxz
and
out
and
pop
push
movups
js
ret
out
insl
call
ljmp
add
jmp
repnz
cmc
jmp
fidivrl
scas
mov
push
repnz
mov
sub
and
ljmp
mov
in
add
xchg
mov
jmp
repnz
or
lret
in
fcomip
out
xlat
out
imul
pop
out
and
clc
call
mov
es
push
arpl
jb
dec
jmp
stos
es
mov
xor
cmc
cmpsb
sbb
xchg
sbb
icebp
pop
pop
pop
repnz
sub
jmp
sub
jmp
sub
out
test
dec
in
lds
out
es
push
out
arpl
xor
jmp
adc
cmc
xchg
and
sbb
sbbl
sub
std
dec
sub
cmp
cli
fildll
ret
cmp
into
sbb
add
add
lret
lds
ret
rorb
xor
das
aaa
cld
ret
sub
mov
or
push
xchg
fidivs
jmp
call
je
mov
das
xor
das
mov
xor
loopne
negl
xor
pop
call
xor
cmp
aaa
cmp
xor
cmp
add
loopne
xor
fistps
add
add
fbld
xor
aad
xorl
rcr
ss
adc
shll
sub
cmpl
lcall
stos
cmp
or
mov
xlat
jnp
fdivrs
cmp
fldl2t
cmp
fsubr
cmp
fsts
cmp
push
into
cli
jns,pt
pop
aas
aas
add
dec
lret
idiv
push
jo
add
leave
add
jmp
in
inc
fistl
in
arpl
sbb
jge
mov
lahf
fldt
repnz
mov
fsubr
adc
in
jmp
sbb
lock
lret
sbb
icebp
or
sub
inc
div
out
out
out
outsl
notb
cmpsl
fidivs
aad
in
fldl
in
mov
add
in
mov
out
sbb
out
adc
out
sbb
out
adc
in
add
add
imulb
cmp
xchg
sub
daa
sub
ljmp
or
popf
and
call
jo
in
in
and
in
and
out
and
in
loop
push
ljmp
repz
test
jmp
mov
add
add
repz
and
hlt
fcomps
dec
repz
jmp
in
push
shl
lret
push
mov
repnz
repz
mov
jge
push
icebp
xchg
push
aam
or
sub
push
shrl
mov
inc
lea
lods
push
xlat
sub
inc
push
popa
das
popa
jmp
cs
adc
cmp
mov
sbb
add
scas
aaa
jno
lea
cmp
ljmp
shll
pop
cmp
mov
xchg
cmp
rcl
dec
xchg
xor
or
mov
movl
test
cmp
fnstcw
ficoms
cmp
xor
cmp
jo
dec
cmp
fmuls
cmp
aad
add
cmp
add
cmp
add
rorb
stos
sarb
cmp
lahf
iret
mov
cmp
fs
repnz
scas
shrb
ds
shlb
jle
call
aas
or
dec
aas
movsb
roll
aas
in
idiv
xchg
adc
add
add
faddl
xor
xorb
add
xor
xorl
sbb
xor
add
stos
int3
sbb
sbb
int
clc
fs
mov
lods
int
negl
fdivr
aad
fldt
adc
pop
aam
fistpl
ret
xchg
fidivrl
ret
push
mov
aam
mov
aam
and
pushf
and
push
or
or
mov
cmc
add
jmp
int3
mov
lret
or
add
mov
pop
fcoms
lahf
mov
xor
fsubrs
es
fldcw
push
fsts
neg
jecxz
mov
daa
dec
sbb
fidivl
sbb
inc
sbb
js
lret
sbb
loopne
sbb
push
pop
loop
push
or
inc
pop
jmp
add
xor
aam
and
add
insb
and
test
adc
and
imul
pop
and
xlat
test
xlat
inc
and
xlat
push
and
xlat
mov
add
es
mov
iret
sub
dec
inc
inc
cmp
inc
jnp
push
xor
xchg
mov
cmp
push
xchg
inc
push
bound
imul
mov
enter
adc
or
xor
add
out
loope
aaa
xor
or
push
xor
bswap
scas
xor
jge
jae
sub
mov
xor
jmp
mov
add
xor
pusha
xor
add
xor
add
xor
add
roll
xor
add
xor
add
cmp
xchg
add
add
xor
add
or
add
push
xor
add
xor
add
xor
or
inc
xor
stc
pop
xor
stc
pop
xor
clc
pop
xor
add
xor
add
xor
stc
xorb
test
pop
fcomps
ffreep
xlat
stos
xlat
mov
mov
push
fadd
mov
fcom
add
mov
sub
fstpl
das
fsubr
pop
inc
fdivr
pop
xor
sti
pop
loope
add
imul
xlat
and
sub
and
cmp
sub
adc
dec
fisubs
adc
push
mov
jge
ret
mov
xchg
int3
and
adc
adc
rorl
adc
inc
add
xchg
xor
add
aas
sbb
add
lds
pop
fisubrs
jbe
push
sbb
test
call
add
xor
inc
and
cmp
lret
push
push
rcrb
and
xlat
insl
and
fadds
and
add
aam
add
movsb
and
xchg
and
aad
push
push
add
add
sbb
shr
xor
add
xor
xchg
add
fwait
ja
pop
lcall
push
mov
inc
cmp
mov
cmp
mov
and
in
xchg
sbb
lods
xchg
jb
lods
inc
push
mov
xor
lea
push
cmp
and
insl
adc
insl
adc
cmp
add
cmp
mov
cmp
and
cmp
shr
mov
mov
cmp
pop
neg
cmp
out
ds
cmp
idivb
mov
testl
cmp
negb
cmp
mulb
cmp
cmp
clc
fstpt
js
inc
cmp
stc
les
add
in
cmp
cli
pop
cmp
xor
daa
cmp
pop
clc
inc
cmp
fdivp
pop
cmp
mov
jo
stos
testl
cmp
mov
fmuls
sub
fdivrs
dec
fimull
cmc
insb
fcmovb
in
and
in
fiaddl
fadd
flds
aam
fsts
add
int3
sub
sub
daa
fldt
mov
flds
and
ficoml
adc
add
hlt
cmp
loope
cmc
fyl2xp1
in
ret
in
add
rcl
add
mov
mov
mov
mov
and
aam
and
aam
and
aad
and
add
add
and
aad
and
aad
and
and
lock
popf
shrl
pop
inc
shl
pop
cli
shrb
and
shlb
pop
cmp
fldt
sbb
sbb
repz
sbb
sbb
outsb
sbb
push
sbb
frstor
rcr
add
cld
sbb
ficomps
xor
adc
xor
ret
data16
ret
xorb
lods
xor
nop
xor
test
mov
add
xchg
shll
adcl
and
xor
cs
out
xor
mov
adc
jg
pusha
aaa
cmpsl
inc
lahf
adc
imul
cwtl
xor
mov
xor
lods
sbb
das
push
add
pop
mov
adc
int3
das
sbb
pop
xor
xchg
xor
cmp
xor
cs
xor
jo
mov
and
out
pusha
cli
push
cmp
repz
xchg
std
aam
test
sub
nop
adc
jae
mov
aaa
clc
and
jo
aas
aam
fidivrs
adcb
add
push
xor
add
add
xor
xor
add
fiaddl
mov
xor
cld
fnsave
mov
jle
idiv
out
xor
add
xor
add
xor
cmp
dec
xlat
test
xchg
mov
int
test
sbb
jno
addr16
push
adc
rol
push
cld
jecxz
sub
add
fsubr
vpaddq
fisubrl
shrl
aam
ret
rorl
mov
fadds
mov
fldcw
mov
adc
pop
pop
fcom
movaps
xor
int
cld
leave
xchg
add
pop
add
jmp
rclb
and
add
add
mov
mov
shrl
and
iret
mov
sbb
iret
rolb
add
sbb
addr16
in
sbb
fsubrl
sbb
fdivl
pop
pop
jg
dec
push
iret
ficoml
sbb
scas
pop
mov
fadd
adc
imul
jmp
add
xor
rcll
push
aam
push
add
sbb
cmp
imul
add
sub
cmp
sbb
sub
and
mov
mov
sub
leave
cmpsl
xor
fistpl
dec
das
add
mov
movsl
mov
movswl
xchg
mov
aaa
push
scas
das
cmp
mov
adc
pop
nop
pop
cmp
xchg
dec
cmp
cmp
push
inc
clc
cmp
xor
add
add
xor
add
add
pop
add
in
cld
adc
incl
cltd
xor
add
enter
xlat
popa
xor
incl
xor
ret
xor
push
xor
inc
xor
call
xor
add
movsb
jecxz
ss
in
aaa
test
or
xlat
cmc
jle
add
fdecstp
lcall
sti
call
add
sub
cmp
cwtl
std
dec
xor
mov
mov
adc
rorl
lods
shrl
sbb
adc
mov
int
fcoms
jecxz
add
int3
fldenv
pusha
fistl
and
ret
test
mov
call
lret
les
dec
xchg
add
mov
add
add
sub
out
xchg
iret
out
out
iret
int3
fisubs
aad
shlb
jbe
jecxz
psrld
mov
rorl
lods
out
shll
and
rorl
xor
shlb
adc
push
jmp
xor
rcr
add
rcrl
and
and
push
aad
add
xlat
iret
add
xlat
movsb
add
xlat
add
popl
das
xlat
outsb
add
mov
xchg
into
add
xlat
testb
or
add
sub
popa
xlat
insl
add
xlat
jge
xlat
pop
add
xlat
mov
xlat
pop
add
cmp
in
loopne
enter
inc
outsb
jge,pn
shrb
xorb
and
cmp
lret
cmp
add
and
aaa
loopne
mov
fldcw
adc
adc
inc
cmp
dec
cmp
hlt
cmp
es
dec
push
lcall
lods
inc
xor
mov
sbb
inc
lods
xorb
xchg
pushf
out
xchg
mov
xor
lods
es
mov
pop
ficomps
mov
lahf
ds
mov
add
scas
loop
aas
mov
xchg
aas
enter
adc
les
ljmp
aas
inc
jb
add
xor
add
loop
xor
loop
xor
in
xor
in
xor
loop
xor
leave
xor
loope
xor
repnz
loop
xor
loope
xor
xor
sub
xor
jecxz
xor
add
cmp
xor
jmp
xlat
push
mov
fcoms
mov
int3
mov
leave
inc
and
rclb
ret
mov
jl
aad
les
stc
sub
out
inc
out
jg
dec
out
push
xlat
iret
pop
into
pop
shll
sub
dec
mov
push
rcl
scas
fadd
xor
loopne
inc
add
adc
dec
fidivl
add
inc
cld
jmp
shl
stc
cmp
sbb
clc
into
xor
pop
fcoms
xlat
xor
xor
fcoms
push
dec
fxtract
add
inc
add
mov
or
int3
dec
or
leave
movsl
push
scas
leave
jg
cmpsb
lret
xor
inc
or
iret
add
or
iret
mov
iret
inc
or
ret
shrb
jo
add
pushw
adc
das
push
int
jecxz
adc
mov
adc
dec
or
jns
insb
int
or
int
or
xlat
or
into
fimull
lret
into
or
iret
into
add
iret
and
inc
lods
mov
mov
cs
out
xor
loopne
aaa
xor
lahf
or
xor
cmp
xor
dec
xor
subb
cmp
das
push
add
sbb
das
adc
lret
pop
pop
xor
pop
sub
stos
aas
or
fwait
aaa
push
xor
cmp
xor
sbb
xor
sbb
inc
sbb
xor
mov
and
int
jno
es
setp
lods
xor
add
loop
xor
loop
xor
into
loope
add
push
jecxz
aaa
xor
pop
aaa
xchg
in
aaa
cmpsl
in
aaa
push
stos
aaa
pmulhuw
aaa
loope
ljmp
negb
cmp
idivb
cmp
mov
int
xlat
cmp
notb
cmp
cmc
sub
sahf
cmc
movsl
cmp
push
cmp
cmp
mov
cmp
clc
inc
cmp
clc
outsb
cmp
clc
loope
jmp
or
add
ffree
inc
out
and
fwait
out
mov
xlat
rol
xor
add
movb
adc
hlt
scas
cwtl
les
aas
les
in
fcoms
add
outsl
add
jmp
rorb
out
inc
sti
test
roll
popf
sarl
pop
rcrb
fcmove
int3
add
jp
mov
add
xor
rcrl
into
stc
sbb
and
xor
push
std
mov
shlb
decb
shl
or
adc
popa
int3
inc
or
das
or
inc
or
into
test
mov
or
enter
enter
enter
enter
enter
leave
push
push
fxch
add
fildl
movsl
leave
lods
push
jbe
jg
lret
pop
leave
addr16
ja
pop
pop
jl
dec
pop
js
ret
push
mov
mov
mov
cmp
add
add
shlb
jmp
call
xor
xchg
pop
xor
lahf
mov
and
push
xor
and
sub
jo
mov
sbb
sub
sbb
sub
cmp
cs
pop
cmpb
sub
add
sub
cmp
inc
das
jge
shlb
loope
and
add
cli
icebp
cmp
hlt
cmp
or
jp
divl
cmp
hlt
nop
cmp
rep
cmp
hlt
or
add
stc
test
stc
mov
cmp
clc
mov
into
clc
sarb
clc
out
push
cmp
lret
cmp
xchg
in
ret
in
aaa
ds
dec
jp,pt
loopne
cli
cli
cmc
ds
inc
aas
outsl
stc
pop
aas
mov
notl
mov
jg
jmp
xlat
repnz
xchg
add
jmp
rorb
add
sbb
rclb
cli
out
test
shlb
cli
stos
roll
lret
xor
ret
out
xlat
xchg
rolb
mov
shrb
dec
shr
mov
les
and
lret
xor
adc
lret
mov
dec
add
lret
mov
lret
xor
inc
lret
enter
les
cmpsl
les
add
xor
imul
mov
lret
incb
sbb
aas
or
lret
jl
test
movsb
or
lock
enter
enter
enter
enter
leave
outsl
push
cmp
cltd
push
pop
leave
jbe
lock
sbb
sbb
cmpsb
lds
add
stos
add
jecxz
xor
add
add
xor
aam
cld
sbb
inc
sti
push
into
xchg
xor
or
incl
sbb
loopne,pn
sub
or
or
test
mov
stc
and
cmpsl
mov
cmp
mov
xor
mov
mov
mov
cmpsb
xchg
xor
mov
mov
xor
push
mov
sub
repnz
cltd
xor
add
fwait
gs
mov
jecxz
icebp
xor
xor
and
xor
es
mov
es
xor
shll
aaa
add
call
incl
out
add
pop
das
add
lret
faddl
mov
fcompl
das
and
xor
ffree
xor
fidivl
stos
xor
filds
xor
add
fnstsw
or
jge
xchg
hlt
inc
cmp
negl
es
cmp
jmp
cmp
mov
jle
add
fcompl
xor
fdiv
xor
filds
jmp
rcrl
fiaddl
rol
fidivrl
shr
fidivrl
sarb
mov
lods
les
add
sbb
sti
les
adc
lcall
enter
leave
sub
fstpt
out
fimuls
mov
jg
jb
jl
mov
add
mov
ror
sbb
iret
push
sbb
iret
cltd
pop
mov
sar
jbe
int
xor
int3
popf
stc
lods
lret
sahf
or
add
mov
or
pop
mov
leave
fiaddl
mov
add
inc
inc
add
inc
repz
roll
incb
inc
cs
and
incb
movsl
mov
in
aam
pushl
jg
dec
inc
mov
aam
ltr
popa
add
test
addl
xor
xor
add
xor
add
add
xor
add
idiv
push
xor
call
xor
dec
xor
mov
dec
aad
xor
mov
arpl
pop
mov
mov
sub
and
sub
cmpsb
sub
cld
fsubrl
lods
hlt
sub
scas
repz
loop
cs
loop
das
sub
inc
das
lret
add
rolb
aaa
rorb
cld
mov
cmp
lods
fnstenv
inc
and
xor
stos
sbb
add
dec
cmp
xorl
lahf
jo
cmp
in
fnstsw
sbb
ds
jno
ds
imul
ds
jb
and
ds
outsl
push
aas
shlb
add
rolb
xor
add
add
xor
push
pop
xor
push
jns
pop
pop
out
xor
add
adc
push
sbb
inc
push
imul
add
cmp
sbb
cmp
nop
aaa
xchg
cld
insl
cmp
hlt
cmp
icebp
fdivl
addr16
ss
filds
inc
xlat
cs
in
iret
aam
sbb
jnp
mov
add
xchg
add
daa
cld
jmp
xor
mov
das
ret
add
cmp
add
mov
add
les
lret
mov
cmp
sarl
inc
xchg
xor
inc
mov
jmp
add
xor
cmp
cmp
cmp
sti
repz
pop
std
call
add
add
xor
xor
dec
xor
dec
xor
ljmp
mov
jl
cmp
xor
arpl
dec
xor
arpl
insl
xor
arpl
dec
xor
addl
xor
call
add
jmp
jmp
add
xor
sbb
mov
cmp
add
mov
cmp
and
xor
stos
popa
xor
cmp
mov
cltd
out
aaa
ss
in
xor
pop
aad
xor
fcmovnb
xor
jmp
call
enter
adc
sub
jnp
mov
inc
imul
add
mov
xor
in
cli
xor
negb
sub
add
fmull
sub
jecxz
cmp
ror
cmp
mov
testb
imull
xchg
mov
pop
imulb
cmp
neg
cmp
jo
cmp
jo
cmp
sti
pop
cmp
sti
je
lahf
sti
mov
sti
leave
cmp
sti
out
cmp
sti
or
arpl
cmp
add
hlt
dec
xor
add
add
das
sbb
stc
jmp
loop
ret
xor
les
ss
and
cmp
clc
jmp
ss
add
aaa
add
adc
jl
cld
jmp
sub
mov
enter
cmp
lcall
cs
idivl
cmp
cmp
fbstp
xlat
pop
cmp
add
fists
cmp
xlat
sbb
aad
xor
lock
or
xor
push
push
jg
int3
push
dec
sub
inc
adc
sub
cld
mov
movsl
hlt
popa
cmp
xor
cmp
clc
call
cmp
test
cmp
clc
mov
cmp
neg
cmp
imull
add
negl
pop
testl
cmp
idivl
cmp
testl
cmp
xor
arpl
mov
jmp
xor
add
aaa
aas
add
aaa
push
add
aaa
jg
jne
xchg
add
aaa
lahf
add
aaa
mov
add
add
sub
cld
cld
sub
fstpt
fistpl
mov
add
mov
sub
mov
pop
sub
sbb
sub
cli
test
cli
jl
sub
je
and
in
sub
sub
fcmovu
sub
fcmovbe
sub
fcmove
sub
mov
mov
sub
mov
sbb
add
or
cs
add
add
adc
xor
or
add
ret
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
inc
xor
add
add
push
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
add
movl
add
movl
add
movl
add
movl
add
movl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
add
xor
add
xor
add
xor
add
das
add
shrb
ret
add
das
add
shrb
add
shrb
add
ret
add
das
add
xchg
das
add
xchg
das
add
subb
add
das
add
xchg
das
add
subb
add
das
add
push
das
add
inc
das
add
inc
das
add
push
das
add
push
das
add
inc
das
add
inc
das
add
adc
add
adc
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
inc
xor
add
cltd
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
xorb
add
add
push
xor
add
add
inc
xor
add
add
push
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
das
add
shrb
add
ret
add
das
add
shrb
add
shrb
add
ret
add
das
add
xchg
das
add
xchg
das
add
subb
add
das
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
inc
xor
add
add
push
xor
add
add
inc
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cltd
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
inc
xor
add
add
push
xor
add
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cltd
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
add
add
sub
add
adc
add
add
add
shlb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
inc
xor
add
add
push
xor
add
add
inc
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
inc
xor
add
add
push
xor
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
add
sub
add
subb
add
add
inc
sub
push
sub
add
inc
sub
add
adc
add
add
add
adc
add
add
add
shlb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
add
inc
xor
add
add
push
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
add
add
add
add
shrb
add
ret
add
sub
add
shrb
add
ret
add
sub
add
subb
add
add
sub
add
push
sub
add
inc
sub
add
push
sub
add
inc
sub
add
adc
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
add
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
xor
jmp
call
add
xor
jmp
call
xor
jmp
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xchg
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
push
jle
mov
clc
and
out
xchg
lods
dec
mov
lds
xor
push
loopne
dec
ljmp
xchg
inc
mov
mov
cmpsb
ror
pop
push
ss
add
add
add
xor
insl
rorb
into
sbb
inc
add
jbe
lods
aad
inc
jg
sti
roll
add
mov
sub
sbb
scas
adcb
hlt
cld
addr16
repnz
popa
mov
mov
sahf
mov
sbb
and
inc
bound
mov
mov
push
test
lea
inc
in
mov
add
lret
sub
dec
in
cs
jae
add
or
stos
outsl
psrlw
mov
shll
inc
push
mov
loopne
imul
inc
sub
dec
sbb
cltd
and
pusha
push
out
mov
or
mov
or
testb
push
mov
shrb
inc
fbld
mov
add
mov
sbb
cmp
jns
aas
pop
rcrb
and
arpl
and
ret
movsl
testb
cwtl
pop
mov
cltd
insb
out
jle
fstpt
jns
fcmove
lock
fwait
cmpsb
sub
jo
fildll
popf
js
out
and
jmp
pop
test
fldt
inc
leave
std
push
xlat
mov
shll
mov
jmp
in
or
sub
xor
clc
and
outsb
lahf
out
inc
cmp
push
and
test
stos
lahf
dec
sub
adc
outsl
inc
cmp
mov
sub
icebp
mov
jae
fwait
int3
data16
cli
add
repnz
pop
cmpsl
and
jo
xor
or
ret
pop
mov
insb
mov
jne
int3
mov
ret
int3
scas
jne
int3
ds
pop
mov
mov
push
ret
push
mov
xor
iret
mov
add
jecxz
cmp
jo
and
mov
cld
add
adc
push
mov
out
int3
add
mov
dec
mov
mov
fisttps
scas
mov
fisttpl
jecxz
inc
clc
pusha
mov
dec
add
mov
testl
jo
testl
lods
in
jmp
jmp
add
loop
dec
hlt
push
jl
inc
arpl
pop
jae
add
xor
inc
repz
push
mov
xor
add
add
sahf
jl
inc
adc
scas
or
mov
jecxz
test
or
xor
dec
out
jmp
inc
rorb
jne
int3
mov
ret
int3
scas
jne
int3
ds
call
add
add
mov
loope
sub
subl
mov
addr16
xor
pusha
hlt
out
inc
sbb
mov
xor
imul
xor
sbb
fdivs
add
cld
jmp
add
adc
mov
mov
add
repz
jae
mov
jge
call
push
add
mov
xor
mov
pusha
mov
ss
int3
lahf
je
int3
mov
ret
int3
scas
je
int3
push
mov
cmp
and
repz
ds
clc
pop
pop
sub
aaa
je
int3
das
je
int3
sahf
mov
push
mov
pop
scas
inc
jmp
ret
je
int3
aaa
je
int3
das
je
int3
add
sahf
mov
push
push
xor
call
push
cmp
push
cltd
add
mov
clc
sbb
add
mov
sqrtps
add
out
pop
push
test
repz
mov
repz
xor
jmp
mov
cld
push
test
adc
das
dec
cld
add
fdivrl
add
xor
adc
outsb
imul
xor
add
xchg
sti
ljmp
ret
jne
int3
mov
ret
int3
scas
je
int3
ds
add
dec
mov
mov
jmp
ret
je
int3
mov
ret
int3
scas
je
int3
ds
mov
scas
ja
jmp
jl
jmp
add
add
out
scas
jmp
push
pop
mov
or
pop
mov
xor
add
xchg
or
ljmp
cmp
in
repz
icebp
sar
scas
stc
add
mov
mov
lock
mov
testb
xor
or
add
jecxz
dec
clc
pusha
sub
mov
add
mov
or
pop
mov
mov
mov
mov
or
out
sti
mov
cmp
imul
inc
in
int3
mov
dec
mov
mov
in
hlt
fisttpl
out
mov
call
jae
jmp
inc
lock
lods
cli
add
xor
lock
mov
xchg
cmpb
pop
test
add
xor
add
push
jo
fisttps
out
notb
jb
repz
xchg
cmpb
cld
sbb
repz
mov
mov
or
clc
jns
jo
fisttps
sti
mov
hlt
jo
fisttps
fninit
cmpsb
mov
jmp
mov
lods
ja
jmp
push
mov
add
cld
inc
cmpsb
mov
add
xor
add
mov
lods
pop
or
add
mov
push
xor
xor
mov
loop
mov
xor
cmpsl
sub
mov
test
lea
sub
push
pusha
div
push
subl
or
rorl
das
stos
adc
add
scas
test
hlt
pusha
out
jecxz
sub
mov
ljmp
idiv
add
fcompl
insl
ret
int3
sahf
stos
jecxz
ljmp
push
notb
cmp
inc
jge
inc
jmp
cmp
sbb
add
test
sqrtps
add
cmc
pop
push
mov
repz
add
lods
jecxz
mov
cmp
sub
inc
mov
jmp
dec
add
ffree
int3
das
insb
ret
int3
sahf
stos
jecxz
aas
sub
sub
hlt
decl
pusha
lock
mov
stos
sarl
jo
add
pusha
cmc
jmp
mov
stos
dec
clc
jb
repz
data16
inc
push
xor
sarb
sbb
jecxz
jne
stos
cmp
pusha
in
add
subl
mov
sbbb
dec
arpl
mov
cmp
rclb
mov
jo
in
jno
int3
pop
insl
ret
int3
aaa
insl
ret
int3
das
insl
ret
int3
mov
sub
inc
testl
jmp
add
mov
add
fcmovnb
int3
mov
ret
int3
scas
insb
ret
int3
ds
jecxz
mov
xor
add
test
xlat
mov
pop
mov
xor
jb
fisttps
and
cmp
jecxz
cmp
add
add
lcall
call
or
out
push
or
xor
xor
sbb
push
jge
lock
jb
fisttpl
mov
fisttps
cmp
sub
inc
imull
add
jmp
or
ljmp
loop
cmp
test
pusha
mul
xorl
add
inc
call
pop
cmp
inc
adc
fisttps
fstpt
dec
mov
neg
cmp
push
add
dec
sub
inc
pop
loope
inc
inc
test
or
call
out
scas
xchg
add
loopne
adc
daa
sub
shrb
out
out
pop
test
in
mov
cld
hlt
jnp
out
or
sub
mov
dec
ret
out
dec
scas
mov
cmp
mov
jmp
insl
or
add
das
xor
ss
cmpb
add
sarl
jmp
adc
sub
add
jmp
mov
fimuls
xor
jnp
lock
push
or
xor
xor
add
cmp
push
xor
jne
push
inc
push
jo
repz
xchg
xor
push
sti
into
jmp
cmpsl
xor
fdivs
xlat
mov
pop
add
add
test
loopne
in
fisttps
cs
dec
mov
test
push
sahf
jp
subl
mov
add
aaa
mov
cmpsb
inc
fsubr
test
add
xor
loopne
test
xor
push
mov
jmp
add
jp
call
and
mov
xor
cmpsb
mov
xlat
jne
ljmp
add
add
mov
mov
call
inc
mov
jmp
xor
lcall
hlt
fwait
hlt
decl
sub
mov
xor
fisubrs
inc
jmp
out
cmpsb
jns
andl
decl
xor
incl
push
mov
sbb
adc
testb
movsl
or
jnp
call
add
fisttps
jmp
dec
sub
hlt
call
test
decl
mov
jmp
mov
cmp
hlt
decl
or
mov
cmp
push
lahf
mov
add
xor
mov
roll
ret
int3
scas
gs
int3
lods
jecxz
sub
int3
scas
gs
int3
add
push
lods
jecxz
adc
sarl
jo
or
push
sarl
movsb
pop
pop
sub
int3
sahf
stos
jecxz
ret
cmp
aas
jmp
pop
mov
xor
xchg
ljmp
pop
mov
loope
add
sub
cmpsl
xor
jne,pt
in
je
int3
lods
jecxz
mov
xor
add
outsl
cmp
xor
movsb
in
jmp
jmp
add
es
jmp
mov
add
stos
inc
or
add
das
xor
imul
cmp
push
js
add
cld
add
out
mov
jmp
add
jmp
or
out
sbb
inc
jmp
add
jmp
xor
pop
in
lcall
sarl
jmp
add
push
xor
jne
or
incl
add
nop
scas
inc
jmp
add
fistpll
out
and
inc
jmp
cmp
call
mov
cld
pop
in
jmp
sub
loopne
daa
xor
out
mov
jmp
cld
aas
jmp
push
add
xor
add
jbe
mov
xor
adc
add
dec
cmp
daa
mov
xor
aas
ja
ljmp
sti
mov
aad
jne
andl
decl
jmp
cmpxchg
xor
pop
jns
ljmp
add
mov
out
jae
stos
cmp
sbb
movsl
sti
je
add
rcll
mov
xor
add
add
xor
inc
dec
loopne
or
call
popf
stc
jmp
mov
add
cmpsl
dec
in
jmp
add
test
loopne
and
das
xor
jns,pn
jmp
jmp
jo
testl
lock
out
jae
cmpsl
add
pop
in
incl
es
adc
add
mov
call
cmpsl
inc
clc
push
call
adc
call
rorl
mov
xor
inc
inc
stos
pop
jmp
stos
and
jp
decl
jmp
leave
mov
js
inc
jmp
leave
mov
sub
clc
hlt
jae
or
cmp
jl
pop
sub
mov
add
out
sarl
push
sbb
inc
jmp
insb
or
scas
inc
jmp
cmp
mov
adc
sbb
shlb
ret
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
int
rolb
mov
jnp
mov
out
pop
xor
lahf
dec
clc
inc
jmp
jp
repz
imul
dec
out
sti
repz
adc
xchg
lds
jb
mov
insb
add
cmp
lea
push
add
or
test
fisubrs
hlt
jge
xorb
sub
add
incb
outsl
mov
xor
jno
bound
pop
in
cmp
data16
ror
cmp
nop
jmp
leave
andb
pop
mov
je
dec
add
mov
fiadds
mov
mov
sar
int
add
stos
add
add
dec
popa
sbb
in
adc
mov
arpl
jo
dec
es
or
test
xchg
sahf
leave
jl
mov
imul
xchg
dec
mov
adc
jnp
jle
andb
xchg
push
fsubrs
mov
cmp
xchg
sbb
inc
push
cmp
sub
jmp
jle
jp
insl
test
xchg
or
test
pop
fisubrs
repz
cs
ficomps
xor
testb
jl
pop
dec
sub
iret
inc
mov
in
cmp
jp
mov
sub
xor
aam
or
xor
iret
cmc
in
fucom
lods
imul
sahf
into
xchg
sub
and
pop
pop
cmpb
dec
pushf
cmp
sbb
mov
push
sbb
xchg
push
loopne
fwait
shrb
fbstp
jecxz
jp
sub
xor
xor
lds
adc
lret
aad
and
sbb
hlt
cmp
mov
stos
mov
aaa
stos
mov
sti
jae
inc
xchg
push
stos
jbe
imul
sbb
sub
incl
aad
pop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
mov
movl
movl
push
push
call
movl
mov
mov
movl
movl
mov
mov
lea
push
mov
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
call
test
jne
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsl
outsb
je
outsl
insb
pop
inc
insb
popa
jae
pop
jnp
xor
aaa
inc
inc
inc
sub
sub
sub
sub
xor
xor
cmp
inc
jge
xor
xor
add
jp
add
in
push
add
push
add
add
add
add
adc
push
add
push
add
jno
add
jns
add
add
push
add
push
add
push
add
push
add
push
add
jp
add
je
add
push
add
je
add
je
add
push
add
push
add
push
add
push
add
je
add
je
add
je
add
je
add
jne
add
push
add
jne
add
push
add
push
add
push
add
jne
add
jne
add
push
add
jne
add
jne
add
jbe
add
jbe
add
push
add
jbe
add
push
add
push
add
push
add
jbe
add
jbe
add
jbe
add
jbe
add
ja
add
ja
add
add
push
add
push
add
push
add
add
add
ja
add
ja
add
ja
add
ja
add
ja
add
js
add
add
add
js
add
push
add
js
add
add
push
add
add
add
push
add
push
add
js
add
js
add
js
add
js
add
js
add
js
add
jns
add
jns
add
jns
add
add
add
jns
add
push
add
push
add
push
add
push
add
jns
add
jns
add
jns
add
jns
add
jp
add
jp
add
jp
add
push
add
push
add
add
add
push
add
push
add
add
add
jp
add
add
add
push
add
je
add
je
add
push
add
push
add
push
add
push
add
je
add
je
add
je
add
je
add
jne
add
push
add
jne
add
push
add
push
add
push
add
jne
add
jne
add
push
add
jne
add
jne
add
jbe
add
jbe
add
push
add
jbe
add
push
add
push
add
push
add
jbe
add
jbe
add
jbe
add
jbe
add
ja
add
ja
add
add
push
add
push
add
push
add
add
add
ja
add
ja
add
ja
add
ja
add
ja
add
js
add
add
add
js
add
push
add
js
add
add
push
add
add
add
push
add
push
add
js
add
js
add
js
add
js
add
js
add
js
add
jns
add
jns
add
jns
add
add
add
jns
add
push
add
push
add
push
add
push
add
jns
add
jns
add
jns
add
jns
add
jp
add
jp
add
jp
add
push
add
push
add
add
add
push
add
push
add
add
add
jp
add
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
rolb
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jb
insl
jo
push
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
popa
jae
inc
jb
outsl
jb
add
jb
jo
push
add
adc
inc
imul
outsl
push
jns
je
insl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
outsl
arpl
push
imul
insb
jae
jb
popa
je
add
and
inc
gs
jb
arpl
fs
jae
add
hlt
add
fs
imul
add
dec
add
jb
popa
je
gs
popa
addr16
add
stc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
gs
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
insb
inc
jb
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
insb
gs
inc
add
outsl
jae
dec
popa
outsb
fs
add
inc
jb
popa
je
inc
imul
gs
imul
imul
jns
add
lea
jb
je
inc
imul
je
insb
outsb
inc
add
jp
push
imul
outsl
dec
jne
je
inc
jns
gs
add
je
outsl
fs
gs
imul
add
data16
je
imul
je
add
inc
jne
jb
outsb
je
jb
arpl
jae
ret
add
gs
inc
imul
jb
gs
imul
xchg
add
jb
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
push
jb
jbe
je
push
jb
imul
imul
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
lods
add
je
jne
jb
outsb
je
push
dec
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
testb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
push
dec
outsb
outsw
add
imul
insb
insb
outsl
arpl
add
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
addr16
popa
imul
je
jo
gs
bound
arpl
popf
add
je
outsl
jns
arpl
add
push
gs
jae
addr16
add
or
ja
jo
imul
add
jo
je
push
popa
addr16
add
xlat
add
fs
arpl
push
add
add
fs
arpl
inc
add
inc
push
xor
cs
insb
add
mov
insb
outsl
ja
jb
add
add
jae
push
add
outsl
outsb
je
outsl
insb
data16
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
aas
add
jo
pop
insw
outsl
fs
cmp
pop
pop
jo
pop
arpl
insl
outsl
fs
insl
add
fs
jae
pop
imul
add
jae
je
jae
jb
popa
je
gs
add
out
pop
imul
insl
add
add
addr16
popa
imul
pop
add
arpl
insb
outsb
add
gs
je
add
pop
arpl
imul
arpl
inc
imul
pop
gs
je
inc
add
gs
je
insl
popa
insb
insb
outsl
arpl
add
add
jae
outsb
add
fwait
add
js
gs
pop
push
gs
add
ja
pop
arpl
js
je
aad
ja
jae
outsl
jne
add
jbe
jb
cs
insb
add
icebp
add
outsb
push
jb
arpl
jae
outsl
imul
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
add
jne
insb
push
imul
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
jb
push
gs
popa
jbe
dec
gs
add
push
gs
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
inc
add
addr16
gs
gs
push
popa
insb
jne
push
add
add
addr16
insb
outsl
jae
dec
gs
fildl
inc
jne
insb
imul
imul
js
add
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
add
pop
add
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
gs
imul
push
gs
outsl
jb
dec
gs
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
cmp
outsb
imul
add
imul
outsl
push
outsb
imul
imul
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
xor
cs
insb
add
add
je
inc
popa
outsb
outsl
outsb
imul
push
add
push
je
push
je
dec
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
ret
jmp
add
add
add
sbb
add
sbb
add
ret
jmp
add
add
add
add
add
xor
add
ret
jmp
add
add
add
pop
or
add
add
pop
addb
xchg
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
rolb
add
aaa
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
push
push
add
add
mov
xchg
ss
ss
ds
inc
aaa
dec
aaa
push
aaa
cli
cmp
push
cmp
ja
mov
in
cmp
cmp
add
pusha
push
add
add
adc
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
hlt
ss
ss
aaa
push
aaa
fs
xchg
aaa
mov
cmp
pop
cmp
cmp
jae
jns
jg
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
arpl
imul
jnp
cmpl
xchg
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
data16
cmp
jle
test
