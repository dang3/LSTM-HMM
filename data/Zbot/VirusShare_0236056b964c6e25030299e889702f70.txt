push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
mov
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
popa
mov
push
lods
dec
and
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
sub
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
std
jbe
jg
mov
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
dec
daa
ljmp
insb
push
icebp
jo
mov
std
pop
lock
xlat
fwait
and
mov
pushf
lret
test
je
push
in
test
sti
sub
or
insb
rcll
nop
loop
adc
jo
mov
mov
push
mov
mov
fldt
push
mov
mov
in
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
mov
enter
int
out
iret
addr16
scas
lcall
out
sarb
ret
lret
shll
aaa
pop
lock
repnz
xor
jle
lods
push
lods
and
dec
push
cmp
dec
jle
loop
cmp
adc
aaa
sub
test
aas
popf
pop
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
push
aad
mov
leave
rcl
sbb
cwtl
imul
cwtl
in
aad
lea
pop
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
adc
or
xor
mov
sbb
sub
xchg
xchg
fs
mov
adc
jg
push
rclb
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
pusha
pushf
jle
jle
mov
cmc
sub
int3
stc
mov
aam
movl
cwtl
jecxz
mov
loope
scas
xchg
and
fmull
cmp
jmp
ret
push
pop
clc
sbb
sub
pushl
pop
lods
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
lret
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
mov
add
or
add
add
add
and
add
pusha
and
add
add
dec
and
add
and
add
add
sbb
add
js
add
repnz
add
and
add
add
push
and
add
add
add
and
add
and
add
add
hlt
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
mov
add
or
add
add
add
and
add
pusha
and
add
add
dec
and
add
and
add
add
sbb
add
js
add
repnz
add
and
add
add
push
and
add
add
add
and
add
and
add
add
push
add
fs
je
insl
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
imul
jbe
jae
add
add
fs
imul
add
fwait
add
je
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
icebp
add
imul
jb
je
arpl
add
add
je
imul
bound
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
das
add
outsb
fs
je
insl
push
add
insb
outsl
jae
dec
popa
outsb
fs
add
insb
jae
jb
outsb
push
add
mov
push
insb
gs
roll
dec
gs
jo
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jb
jbe
push
jns
gs
add
inc
outsl
jo
inc
imul
gs
jo
gs
jb
jns
imul
je
imul
push
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
inc
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
gs
je
inc
js
arpl
imul
outsw
jb
add
inc
insb
insb
push
imul
jb
gs
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
push
add
test
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jp
lods
lods
stos
add
test
push
mov
mov
mov
ret
lret
lret
int
rcl
shr
rcl
shl
iret
rcl
hlt
into
int3
into
hlt
mov
out
mov
in
mov
mov
lods
lods
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fdivr
fcomp
fcom
xlat
aad
dec
iret
sar
int
int3
aad
rcl
iret
inc
ret
mov
mov
scas
iret
movsl
movsb
movsb
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
sbb
mov
jnp
mov
mov
dec
lret
rcl
iret
aam
xlat
xlat
fdivr
fcom
call
aad
dec
int3
into
dec
into
int
aad
int3
int
mov
mov
mov
std
cmpsb
cmpsl
cmpsl
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
push
or
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
into
int
rcl
sar
xlat
call
call
aam
dec
into
into
dec
lret
leave
dec
int
inc
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
push
push
imul
pop
pop
pop
fs
push
das
femms
movntps
sbb
xor
cmp
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
enter
ror
sar
aam
call
aad
dec
iret
sar
leave
leave
leave
inc
ret
ret
mov
mov
ljmp
mov
popf
xchg
cwtl
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jge
jle
jge
jb
jo
arpl
mov
cmp
lea
inc
mov
outsl
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
lret
leave
lret
enter
ret
ret
mov
mov
ljmp
mov
lcall
xchg
xchg
cwtl
xchg
xchg
cltd
cltd
fwait
in
addl
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
jo
pop
pop
pop
or
jp
nop
fcoms
cmp
jp
idivb
jmp
outsl
outsb
out
push
push
ret
jge
js
jp
arpl
fs
inc
inc
cmp
pop
sbb
movups
or
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
xchg
incl
test
xchg
xchg
xchg
mov
mov
cwtl
mov
jp
jp
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
mov
jg
jle
jb
jno
jne
jne
jle
jg
addl
xchg
pushw
cmp
cmp
and
and
jg
jge
fwait
cltd
fwait
lea
test
lods
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
test
mov
xchg
xchg
xchg
decl
jg
js
jp
jl
jns
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
mov
or
or
dec
insb
insl
insl
jl
xchg
leave
cltd
cltd
cltd
fistps
lcall
mov
decl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
lods
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
popf
sahf
sahf
std
mov
mov
xchg
in
xchg
in
xchg
push
jne
push
or
inc
or
inc
sub
daa
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
xchg
lcall
cmpsb
cmpsb
ljmp
lods
pushl
mov
test
mov
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
sahf
cltd
lcall
mov
call
nop
xchg
xchg
xchg
popf
popf
pushf
movsl
movsb
movsb
test
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
popa
jne
jb
mov
lahf
test
int
nop
xchg
in
nop
xchg
testl
mov
jmp
lahf
pushl
imul
mov
xor
ja
mov
cmpsb
mov
mov
mov
stos
lods
lods
mov
movsb
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
call
xchg
xchg
call
cwtl
lcall
lahf
mov
mov
stc
xchg
cwtl
lcall
nop
xchg
les
lcall
mov
stc
xchg
test
std
xchg
jae
lcall
jmp
jge
mov
jp
mov
jb
mov
outsl
ljmp
adc
stos
or
ljmp
jg
mov
mov
stos
pushf
movsb
movsl
movsb
and
add
add
mov
add
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
lcall
popf
pushf
call
xchg
cwtl
call
cwtl
nop
call
cltd
cld
cwtl
cltd
sahf
stc
lahf
lcall
pushf
mov
xchg
push
xchg
pop
jge
xchg
dec
js
cltd
cmp
push
popf
push
addr16
mov
adc
arpl
stos
adc
stos
packuswb
lods
adc
scas
adc
mov
imul
adc
pushl
inc
jg
mov
mov
scas
scas
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
popf
call
popf
lcall
movsb
movsb
jmp
mov
xchg
decl
mov
mov
xchg
xchg
js
cltd
jo
fwait
fs
xchg
push
jnp
xchg
jb,pt
xchg
sub
decl
pop
call
add
pop
lcall
add
push
pushl
pop
outsl
pushl
pop
jb
mov
and
shll
inc
inc
test
les
mov
mov
mov
movsb
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
jmp
test
ljmp
test
lcall
jg
decl
dec
outsl
decl
sub
mov
pusha
incl
or
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
and
mov
ja
mov
sub
mov
sub
inc
sub
inc
das
cmp
enter
lea
cld
scas
mov
lret
movsb
dec
mov
movsl
movsb
add
push
push
adc
test
mov
jmp
stos
test
lods
stos
lods
ljmp
mov
lods
scas
scas
jmp
jb
incl
or
incl
or
test
push
incl
add
add
mov
push
decl
add
xchg
add
cltd
add
lahf
add
add
lods
adc
mov
aaa
cmp
cmp
dec
cmp
dec
cmp
call
cmp
dec
mov
std
mov
mov
movsl
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
sahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
test
push
incl
add
mov
push
call
add
pushf
add
add
cmpsb
add
stos
add
sbb
ret
cmp
dec
inc
mov
roll
call
inc
mov
dec
xchg
fmuls
fisttpl
fmull
ficoml
call
xchg
std
mov
mov
mov
sahf
mov
add
dec
dec
adc
jp
movsl
lahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
insl
decl
sbb
xchg
pop
pusha
decl
adc
mov
push
decl
add
xchg
add
sahf
add
mov
add
test
pop
arpl
shll
call
push
cltd
fcoms
fistl
fstpl
fists
ficomps
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
cmpsb
test
sahf
mov
lahf
add
inc
inc
adc
js
sahf
lcall
lahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
arpl
xchg
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
fwait
fisubl
fbld
fisubs
jmp
fs
jecxz
cmpsb
call
imul
faddl
mov
cmpsb
test
lahf
lahf
mov
add
inc
inc
adc
jp
xchg
lcall
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
outsl
lcall
sub
xchg
push
call
add
cltd
add
mov
add
lods
add
mov
pushw
movd
roll
jmp
outsl
lods
jmp
jo
jmp
jno
call
je
in
je
out
jne
in
jne
out
je
jmp
mov
mov
test
lcall
mov
add
add
add
jg
cmp
insb
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
sahf
aaa
jbe
mov
xor
fwait
push
call
add
lahf
add
movsb
add
test
pusha
pushl
add
mov
sbb
fistl
jmp
ja
ljmp
in
xorl
push
test
push
cmpl
call
mov
mov
cmpsl
sahf
pushf
pushf
daa
sahf
sahf
lahf
add
add
add
pusha
add
ss
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
ret
mov
jmp
cmp
mov
inc
jge
movsl
ss
fwait
sbb
xchg
add
popf
add
movsb
add
add
scas
add
mov
gs
mov
add
call
daa
cmp
movsl
jmp
mov
repnz
push
nop
sar
xchg
sar
nop
push
xchg
clc
xchg
mov
in
mov
fidivl
lods
stos
mov
pushf
pushf
xor
pushf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
pushl
mov
inc
mov
ret
ret
ret
mov
mov
jge
lcall
dec
cmp
movsl
xor
push
pusha
lcall
add
add
lods
add
mov
arpl
mov
add
leave
add
mov
call
xchg
vlddqu
push
lcall
negl
lret
cld
sahf
int
sti
sahf
int3
sti
cwtl
lret
xchg
ret
fidivs
cli
mov
mov
sahf
lahf
sahf
aas
nop
popl
lcall
add
cmp
or
cmp
push
dec
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
ret
mov
enter
mov
mov
ljmp
dec
mov
movsb
sub
fwait
pop
pop
lcall
add
lods
add
mov
arpl
mov
add
leave
add
or
fiadds
in
mov
push
movsb
into
push
movsl
int
clc
cmpsl
int
cld
test
sti
cmpsb
sar
sti
cmpsl
iret
cld
stos
iret
stos
iret
cld
test
push
lahf
jmp
mov
dec
leave
int
mov
mov
mov
xchg
xchg
add
lcall
xor
xor
or
inc
bound
push
xlat
jae
jb
mov
sarb
mov
enter
rol
mov
cmpsb
jmp
mov
scas
dec
test
mov
add
movsl
add
lods
add
mov
fs
mov
add
int
outsl
call
add
adc
in
pop
cmpsb
push
lahf
lret
cld
scas
sar
sti
mov
cld
mov
sti
mov
mov
mov
mov
std
mov
pushl
sar
cmc
movsl
jmp
mov
dec
leave
int
mov
mov
sahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
outsl
outsl
mov
mov
aam
xlat
jmp
xlat
test
int
dec
lret
lret
leave
lret
dec
lret
lret
leave
mov
scas
jmp
push
mov
lods
jge,pt
sahf
push
arpl
mov
add
mov
fs
mov
add
rolb
outsl
fadds
jae
loopne
jne
ljmp
cld
lods
aam
std
mov
cld
mov
cld
mov
fdivr
mov
fdivr
inc
mov
lret
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
enter
in
call
out
test
in
leave
fstp
fucom
fcmovu
fdiv
xlat
cli
aad
std
int3
iret
into
mov
push
test
test
add
pop
pushl
add
ret
dec
add
add
fldl
jbe
in
js
in
xor
sti
mov
loope
inc
inc
loopne
inc
std
inc
inc
fdivrp
dec
fdivrp
dec
dec
sti
mov
leave
call
lret
sar
mov
mov
xchg
adc
add
add
std
add
std
add
std
add
div
or
in
jmp
in
out
in
sub
out
out
dec
call
ljmp
in
out
fcmovnu
fucomi
les
xchg
test
ja
movsb
adc
pop
ljmp
add
mov
add
into
add
fadds
jb
fiadds
jbe
ljmp
sti
mov
in
dec
in
dec
out
dec
in
dec
in
dec
loop
dec
loopne
dec
in
shl
std
shl
call
in
cld
out
mov
xlat
inc
ret
test
cmpsl
mov
xchg
xchg
add
add
add
incb
incb
idiv
testb
hlt
repnz
repz
push
out
icebp
out
pop
in
lock
cmp
in
out
pop
loopne
loopne
lds
xchg
sti
lahf
and
lcall
add
stos
add
mov
fs
add
leave
add
add
fiaddl
jbe
jecxz
jp
in
push
pop
stos
sti
mov
cld
shl
shl
shl
call
out
shl
std
aam
std
jmp
std
fld1
fld1
fucompp
dec
loop
repz
aam
jecxz
fcos
lret
rep
stos
test
xchg
xchg
xchg
and
cwtl
xchg
add
std
cld
add
std
stc
add
cld
cli
add
div
or
aam
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
faddl
jbe
call
sbb
stc
jne
cli
std
fldl2e
fldpi
fucomi
fucompp
fucomi
fsubr
fucomi
std
fsubrp
fucomip
jmp
jmp
std
aam
push
ret
aam
out
iret
ror
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loope
add
mov
xchg
stos
jnp
repnz
pop
push
jmp
add
mov
add
into
add
aad
jno
fiadds
jne
jmp
sub
cld
shr
jmp
out
fsubr
fucomi
call
jmp
cld
aam
sti
shl
sti
shl
clc
int
stc
lret
fdivrp
test
in
mov
fcos
sti
mov
mov
lcall
add
add
add
fcom
add
mov
mov
lcall
add
mov
arpl
mov
add
iret
add
xlat
add
loope
jp
jmp
aaa
xchg
sti
cwtl
cld
enter
lret
loope
sti
clc
mov
sar
repnz
iret
push
mov
into
ljmp
jmp
ret
sar
ljmp
cmc
fsubrp
mov
mov
xchg
add
add
add
int3
add
mov
loopne
xor
pop
ljmp
add
mov
add
int3
or
rorl
fistl
ja
loope
cmp
dec
cwtl
jmp
mov
call
mov
std
loopne
cld
fildll
neg
mov
enter
int3
in
lret
xlat
shl
xlat
fcmovnb
out
loop
in
in
test
in
out
popf
ljmp
push
stos
lods
lods
adc
cmpsl
cmpsb
cmpsl
add
ret
ret
ret
mov
popf
stos
aam
dec
cmp
sbb
test
push
scas
and
mov
jns
mov
inc
xchg
les
stc
lret
test
mov
out
mov
rcl
ror
aad
int
ror
lret
mov
iret
shll
xlat
rcl
jg
fcmovnu
jb
loopne
gs
jecxz
out
out
call
div
sub
cmc
cmc
and
lock
sbb
or
mov
int3
add
add
add
rol
mov
scas
mov
test
push
lock
xchg
ljmp
mov
sarb
mov
les
ret
ret
int
lret
jp
int
addr16
iret
push
rcl
rorl
fcom
inc
rcl
aad
aad
fldenv
fcompl
fstl
fucom
jecxz
in
out
jmp
add
cli
testl
std
std
incl
std
std
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
ret
inc
ret
xor
int
daa
int
into
and
rcrb
rcl
aam
iret
aad
or
fcom
push
aam
xlat
add
add
add
in
add
in
jmp
add
incl
mov
mov
add
ret
les
mov
mov
mov
push
rol
or
enter
leave
enter
leave
add
rolb
rcl
add
fcom
add
xlat
add
fadds
loopne
aad
flds
fnstsw
loop
loopne
in
out
repnz
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
ret
ret
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
iret
jmp
rcl
cmc
rcl
sar
into
rcl
cli
int3
lret
int3
stc
lret
hlt
mov
mov
iret
lods
stos
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
iret
xlat
aad
xlat
call
iret
sar
int
int
lret
inc
mov
mov
stos
lods
lods
icebp
xchg
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
je
jne
fs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
ret
lret
lret
lret
call
rcl
call
rcl
dec
int3
int3
inc
mov
mov
ljmp
sahf
sahf
xchg
xchg
xchg
jmp
outsl
jo
push
pop
push
dec
add
add
add
add
add
add
jg
addb
jp
addl
aam
imul
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jo
jo
scas
scas
mov
mov
mov
mov
mov
sar
mov
mov
ljmp
lcall
xchg
xchg
xchg
cltd
fwait
lcall
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
cwtl
cwtl
fcoml
addb
jl
jge
js
jns
jp
jnp
jnp
jp
jae
jae
push
push
push
cmp
jne
popf
pushf
pushf
mov
scas
scas
rep
scas
lods
sti
scas
scas
lods
std
test
cmpsl
std
pushf
sahf
sahf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
cmpsb
cmpsb
cltd
jb
je
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
xchg
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsb
orl
cwtl
cltd
repnz
xchg
xchg
std
mov
call
sahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsl
mov
addl
add
add
popa
pop
popa
or
scas
mov
cmpsb
sahf
movsb
decl
lea
cwtl
cwtl
xchg
std
popf
sahf
lahf
sti
mov
cltd
cwtl
call
push
push
push
jo
pop
pop
outsl
imul
jle
subb
mov
std
xchg
mov
ljmp
sbbb
mov
mov
jge
mov
scas
lods
insl
stos
test
add
add
add
pusha
pop
pop
or
mov
in
mov
xchg
call
cwtl
lcall
cwtl
fwait
cltd
pushf
pushf
popf
lahf
popf
cli
xchg
xchg
xchg
jmp
xchg
mov
xchg
orl
cld
xchg
pop
jle
sahf
dec
jp
mov
aaa
ja
scas
sub
push
outsl
pushl
sbb
pop
mov
mov
jle
movsl
mov
add
add
add
popa
or
mov
in
movsl
test
xchg
xchg
cwtl
lcall
mov
lahf
call
mov
xchg
jns
std
xchg
jno
cld
cwtl
popa
test
xchg
dec
jp
xchg
cmp
xchg
daa
call
lcall
punpckldq
test
imul
mov
insb
pushl
pop
jb
mov
pop
mov
scas
lods
xchg
popf
popf
popf
adc
add
add
pop
popa
pusha
or
mov
test
mov
test
test
cmpsl
test
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
fwait
add
or
and
mov
jl,pn
lds
jle
enter
leave
xor
dec
pop
xchg
inc
test
divl
cmpsl
cmpsl
sbb
add
add
pusha
pusha
pop
or
movsl
test
test
cmpsb
test
scas
scas
mov
mov
mov
mov
mov
movsl
xchg
lahf
decl
adc
mov
pop
incl
push
push
decl
add
xchg
add
sahf
add
add
mov
insl
inc
cmp
dec
inc
mov
aam
mov
xlat
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
movsb
mov
add
add
add
pusha
or
sahf
mov
ljmp
mov
mov
mov
test
decl
sbb
decl
or
call
add
mov
add
lods
add
jbe
rorl
fstps
ficompl
fistps
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jl
jp
fwait
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
call
pop
lcall
add
scas
add
or
int3
xor
fsubl
jmp
outsb
stos
jmp
outsl
lods
ljmp
out
jno
call
test
mov
inc
jg
addb
add
dec
dec
dec
pop
insl
outsl
imul
xchg
lcall
mov
mov
mov
jmp
cmp
cmp
popf
sub
xchg
or
fwait
add
movsb
add
stos
add
mov
gs
or
dec
xchg
jmp
jns
ljmp
push
test
xrelease
fldcw
mov
push
cltd
lcall
sub
sub
push
push
dec
pop
addr16
xchg
mov
mov
mov
sarb
mov
xchg
ljmp
sub
lcall
ljmp
add
mov
adc
jmp
popa
mov
push
xchg
ret
push
cwtl
push
xchg
enter
enter
lret
cwtl
jmp
lods
inc
mov
lods
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
ret
mov
cmpsl
jmp
dec
test
mov
add
popa
pushl
add
leave
add
fsubs
cmp
mulb
iret
stc
test
cld
stos
sar
cld
stos
sar
std
lods
sar
cli
cmpsb
lret
jmp
mov
inc
rol
stos
stos
test
or
add
add
dec
dec
push
aaa
jb
jb
stos
stos
stos
ror
int
out
iret
int3
cmc
lret
lret
leave
lret
mov
mov
mov
stos
bound
jmp
add
mov
fs
add
int
insl
flds
ljmp
sti
mov
std
mov
fcos
std
mov
mov
sar
jmp
enter
repz
scas
mov
add
add
add
add
or
aam
dec
loopne
jecxz
fsubp
fistps
fcmovu
fsubr
shll
test
push
pop
pushl
add
enter
aad
je
jecxz
jl
icebp
dec
mov
sti
loope
std
std
loopne
dec
fdivrp
dec
loopne
std
lock
lret
divb
sahf
sahf
sbb
add
add
std
incb
std
add
jmp
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
inc
add
iret
add
fildl
jne
call
outsb
mov
std
ret
cld
shl
shl
shl
call
in
xlat
out
fsubr
shl
push
enter
int
stc
mov
mov
add
std
incl
incl
cld
std
incb
aam
aad
mov
pop
mov
popf
or
pop
pushl
add
roll
jo
fiadds
ja
in
pop
mov
stc
mov
cld
shl
fucompp
fucompp
cld
xlat
jmp
std
fld1
std
fsub
cld
aad
push
enter
iret
xlat
sti
mov
lahf
lahf
das
add
add
int
int
mov
arpl
ljmp
add
movl
jno
loopne
ja
out
xor
cli
int
clc
lret
test
icebp
ret
aam
lock
sar
in
in
aad
ljmp
ljmp
test
std
std
add
add
add
aam
push
mov
je
or
mov
imul
sbb
lret
and
cs
fists
clc
jecxz
mov
out
in
leave
jmp
fidivrs
int3
leave
faddp
sarl
in
fcompl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsl
les
mov
mov
fidivrl
jg
rol
stos
mov
lahf
mov
shll
leave
jge
lret
insl
aam
into
pop
aam
rorl
fcomp
cmp
fsubp
das
in
frstor
in
lock
in
jmp
faddl
std
std
incl
incl
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
ret
enter
rcl
pop
mov
rcl
or
loopne
or
int3
into
add
std
incl
std
incl
lcall
pinsrw
or
int3
into
int3
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
rol
mov
leave
mov
rol
mov
scas
scas
scas
insb
lods
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
aam
rcl
sar
int
into
std
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jae
jno
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
aam
sar
into
into
iret
dec
mov
ljmp
mov
mov
add
xor
add
sbb
jae
jae
xchg
adc
popa
popa
popa
mov
addr16
jb
pusha
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
xchg
lds
jb
daa
es
pop
add
add
je
jb
popf
xchg
lcall
test
clc
mov
test
test
imul
mov
into
mov
mov
xchg
decb
lea
scas
cmpsl
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
test
test
mov
xchg
xchg
xchg
cld
popf
pushf
popf
cmc
lcall
mov
push
push
imul
jle
nop
aam
mov
pushf
mov
pushl
xchg
mov
stos
mov
test
stos
stos
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
fwait
cltd
lcall
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
fs
push
jl
pushf
inc
jne
movsl
aaa
je
scas
sub
jno
mov
insl
pushl
pushf
lods
lock
mov
imul
int
add
add
test
pop
scas
movsl
lods
test
lahf
sahf
lahf
jmp
mov
xchg
decl
push
ja
popl
mov
imul
xchg
adc
xchg
or
mov
push
insl
pushl
and
inc
sub
ret
ds
rcrl
subl
jae
push
mov
mov
cmpsl
ljmp
mov
lcall
sub
mov
pop
incl
add
decl
pop
jmp
adc
shlb
dec
ds
iret
inc
mov
aad
call
push
xchg
dec
cltd
mov
mov
mov
movsl
mov
add
push
xchg
xchg
test
lahf
movsb
cld
lods
lods
scas
pushl
mov
movsb
call
arpl
pop
pusha
call
add
mov
add
mov
push
xchg
fstpl
loopne
mov
jmp
cmpsw
call
fwait
mov
test
cmpsl
cmpsl
pop
add
add
bound
adc
popf
fwait
fwait
cld
mov
mov
mov
mov
mov
fwait
dec
jl
fwait
xor
lcall
jmp
add
mov
dec
xor
jmp
ja
jmp
mov
out
jle
out
jg
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
arpl
lcall
add
ljmp
add
or
fisttpl
in
lea
hlt
xchg
clc
cwtl
leave
push
xchg
jmp
cmpsb
mov
cmpsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
ret
vcmpsd
ljmp
sbb
movsl
add
mov
gs
add
aad
js
ljmp
clc
stos
sar
cli
scas
sar
cld
lods
sar
lods
iret
jmp
enter
rcr
movsb
movsl
ds
std
std
add
outsl
outsl
inc
scas
mov
mov
aam
mov
aad
rcl
out
lret
cli
mov
mov
jmp
add
ret
add
add
out
xchg
testl
fdivr
cld
ret
cld
ret
cld
rcr
icebp
mov
ret
in
test
addl
stos
lods
lods
add
in
jmp
out
call
inc
loope
in
fcomp
fisubl
movsb
es
ljmp
add
int3
add
add
out
cmp
std
int
call
in
call
in
call
in
call
in
cmc
leave
fcos
aad
int
lods
scas
scas
popa
cmpl
add
std
incb
incb
int3
lret
shrl
mov
add
mov
add
loope
jns
hlt
push
movsl
cld
loope
std
aad
cld
aam
cld
aad
std
shl
cli
shl
push
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
imul
or
cmp
out
mov
shl
call
ror
call
lret
ljmp
scas
lcall
add
sahf
lods
xchg
dec
and
push
mov
shlb
lret
mov
xlat
mov
lret
int3
outsl
fmul
into
pop
dec
jecxz
loopne
out
out
in
out
out
sbb
sarb
cmp
movsb
scas
arpl
lods
mov
ret
cs
mov
int3
sbb
bswap
int
or
aad
incl
addl
add
lods
incl
sarb
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
enter
jmp
mov
andl
scas
mov
add
adc
test
fdiv
arpl
aaa
dec
mov
pop
addr16
mov
xor
cmp
mov
aas
lock
mov
stos
add
lahf
mov
out
arpl
or
adc
loop
inc
ljmp
pop
popf
mov
lsl
sarl
outsl
movsb
sub
sub
into
pushf
lahf
dec
sbb
dec
sahf
dec
cmpsl
jae
jno
adc
pop
xchg
faddl
rolb
es
out
dec
mov
jbe
mov
lahf
lahf
and
fsubl
jle
dec
dec
mov
stc
sub
xchg
pop
aaa
cmpsb
sbb
out
jnp
mov
push
adc
mov
and
dec
into
mov
fidivl
add
aaa
fldl
fldl
mov
call
dec
cmpsl
mov
lret
xor
fstl
pop
out
jecxz
test
add
xor
jl
and
pop
ja
scas
mov
mov
repnz
add
pusha
insb
mov
xor
mov
fcomps
shll
ss
inc
inc
popf
out
dec
push
pushf
xor
subb
push
add
sahf
insb
out
xchg
push
or
jno
loopne
repnz
js
cmp
out
dec
xorb
jns
bnd
dec
and
fistpll
inc
fs
sbb
inc
loop
cli
fcoms
dec
out
jl
jns
mov
ljmp
push
add
rcll
or
mov
mov
mov
mov
sahf
test
insb
sub
jge
fsubl
mov
enter
xor
dec
rcrl
dec
test
push
push
stos
sbb
int3
pop
add
in
lock
push
loope
fistpll
add
sub
mov
mov
dec
sub
pop
mov
push
cld
pop
js
sbb
xchg
xchg
or
xchg
jp
pop
xchg
jp
dec
xchg
mov
test
sbb
add
inc
and
jge
inc
outsl
icebp
lds
in
cmp
cmp
daa
inc
cmp
push
bound
dec
xorl
aas
jmp
add
popa
fbstp
negl
jg
scas
add
orl
daa
adc
push
rol
subl
inc
lcall
xchg
cmp
fwait
xlat
add
mov
scas
das
mov
or
sub
jge
aam
jg
callw
mov
jns
popf
jb
rorb
aas
jge
or
mov
call
dec
cmp
cmpsb
push
test
cs
lods
jns
inc
jno
inc
sbb
xor
push
cld
xchg
sub
popa
mov
xchg
aas
push
sub
xchg
repz
out
pop
xchg
or
enter
out
movb
jle
mov
add
filds
xor
popf
inc
xchg
sub
pop
mov
out
adc
scas
add
sarl
push
stc
adc
inc
je
sahf
sub
inc
int3
jae
sbb
cmp
sub
fs
dec
rcll
andl
xor
dec
icebp
cs
lret
leave
push
fcompl
cmp
js
into
enter
inc
sbb
adc
xchg
out
mov
sub
xchg
ljmp
xor
pop
push
add
mov
repz
call
xchg
sahf
mov
push
pop
int
xchg
mov
add
xchg
stos
inc
flds
aam
bound
movsb
fmul
fbstp
js
pop
cmp
rcrl
gs
mov
dec
push
adcl
jns
push
es
out
inc
push
dec
lea
out
mov
pop
mov
je
add
jae
incl
xchg
sti
push
pushf
adc
pop
mov
cmc
xchg
movsb
fdivrp
jae
add
adc
xchg
mov
and
cmpb
ljmp
jl
push
inc
mov
stos
je
cwtl
xchg
gs
xchg
arpl
cmp
inc
mov
pop
jae
fs
sarb
adc
dec
aam
mov
inc
and
xor
test
fisubrl
daa
ljmp
jnp
xor
push
adc
mov
sub
adc
adc
les
dec
test
fs
sbb
mov
push
push
js
jae
divb
add
loope
fisttps
dec
loop
push
push
stos
imul
rclb
jg
call
xchg
sub
scas
daa
jno
popa
loope
sti
scas
sub
or
dec
inc
cmc
mov
mov
ljmp
loope
mov
imul
cwtl
inc
repz
stos
test
mov
sbb
popa
cmp
sbb
repnz
xchg
jb
add
arpl
scas
or
aad
mov
je
jl
dec
mov
mov
bound
mov
icebp
call
test
loope
and
sarl
ret
es
test
lock
inc
cmpsl
add
jbe
ja
cwtl
pop
and
jg
xor
jmp
adcl
xchg
pop
stos
enter
loope
fisttpl
popa
enterw
xor
cmpl
xlat
or
mov
jne
daa
cmpsl
or
pop
sub
jmp
aam
movb
cmp
aad
xor
xchg
loop
push
cld
mov
test
add
xor
je
xchg
cli
lods
idivb
mov
mov
mov
dec
push
aad
adc
sbb
orl
lahf
sahf
jnp
dec
lods
mov
aad
add
inc
faddl
repz
arpl
int3
je
test
in
adc
clc
aas
lds
jl
dec
xchg
dec
jecxz
insb
lcall
mov
xchg
mov
ret
hlt
gs
mov
mov
loop
lcall
movsl
mov
fldcw
or
dec
loope
in
es
jle
ljmp
rolb
fcomp
sbbb
xor
mov
adc
or
sbb
lret
shrl
icebp
mov
ds
outsl
fistpll
push
mov
mov
into
push
rolw
in
test
push
ljmp
jno
or
bound
cmp
shrb
repnz
lea
mov
fbstp
adc
stos
imul
xchg
fmuls
movsl
or
loop
dec
stos
stos
inc
fsubrl
pop
pushf
std
leave
pusha
das
mov
out
adcb
push
inc
mov
pop
repnz
cmc
and
call
or
test
jmp
shrl
cmp
xor
xorl
btc
inc
dec
fwait
push
mov
inc
lods
mov
mov
or
sub
xor
dec
dec
out
mov
js
mov
icebp
or
jmp
adc
ljmp
jl
mov
cmc
jle
out
sahf
mov
mov
mov
fistl
test
mov
das
pop
cmc
clc
daa
orb
dec
push
lods
jns
imul
fwait
xor
int3
and
push
jmp
stos
aas
jo
jno
lds
mov
push
in
inc
pop
jae
cltd
movsb
cmp
popa
push
and
mov
fiadds
popf
punpckhdq
fwait
xor
popa
mov
inc
fnstenv
aam
testl
mov
insl
call
or
lea
int3
mov
lods
sar
xchg
add
sbb
xor
lahf
jb
cltd
xor
test
push
fstpt
scas
sti
fdivs
shll
add
nop
andb
push
mov
mov
cmpsb
icebp
cmp
es
shrl
pop
repz
testb
je
lods
cmpsl
ljmp
idivb
mov
jo
push
out
xchg
rorb
xchg
pop
adc
out
xor
test
push
out
aad
int
test
jbe
es
sbb
stc
pop
sahf
sbb
or
sbb
jmp
test
mov
dec
leave
adc
fwait
sbb
rorl
out
insl
push
out
pusha
or
pop
addb
mov
mov
cmpsl
movsl
lods
cmp
sbb
cmp
lods
pop
jle
dec
roll
mov
ret
mov
jp
clc
lahf
ss
movsb
cmp
ret
shrl
loope
sarl
cmp
in
clc
pop
call
or
pop
cmp
jbe
mov
daa
insl
or
mov
xor
jo
inc
or
pusha
xchg
dec
gs
pop
cltd
jp
cmp
xlat
sbb
sub
lret
mov
fildl
negl
xchg
jnp
pop
in
stos
leave
fmuls
jmp
scas
je
mov
mov
cltd
xor
test
dec
sbb
mov
fs
mov
sbb
adc
and
mov
push
xchg
jo
repz
fs
push
les
xor
mov
xor
or
dec
sub
mov
test
negl
mov
jl
adc
pop
or
sub
xchg
sub
dec
fistl
mov
in
mov
adc
push
lcall
inc
add
xor
pop
stos
lret
fwait
sbb
push
test
aad
jns
stos
pusha
lahf
or
in
gs
out
jmp
inc
mov
lock
cli
cs
aaa
dec
aad
mov
pop
mov
fst
push
in
addr16
sbb
jb,pt
jo
adc
ret
aad
lret
rclb
push
ljmp
xchg
clc
lods
insl
add
fwait
movsb
cmp
inc
mov
jb
mov
inc
les
out
scas
inc
cmp
dec
mov
dec
lea
and
inc
pop
lock
mov
xor
movsl
pop
mov
sbb
stos
cltd
xor
aam
aad
jmp
push
mov
scas
inc
mov
fisubrl
in
loope
scas
inc
roll
cmpsl
mov
ret
push
movsl
sar
mov
add
fst
imul
push
movsl
cmp
shll
insl
fisttpl
mov
and
out
inc
mov
aad
ja
xchg
sub
cwtl
cmpsb
cmp
es
insl
xchg
inc
dec
loope
mov
and
outsb
sub
push
jmp
repz
xlat
test
jne
cmpsb
pop
faddp
push
cld
jl
data16
jbe
and
pop
sbb
push
cmpsb
push
movsl
sbb
scas
dec
cmp
cmpsb
push
ss
mov
test
test
cmp
lret
mov
faddp
push
fidivs
cltd
xor
mov
or
jmp
fwait
lcall
add
es
notb
jbe
push
js
enter
xchg
dec
pop
sub
xor
push
push
repnz
and
ljmp
dec
insl
push
and
cltd
faddl
jno
or
arpl
daa
sub
cltd
pop
dec
sbbl
shl
pop
scas
adcb
cmp
pop
testl
shll
hlt
aam
jecxz
lret
lods
scas
push
sti
arpl
dec
inc
fisubrl
pop
jno
mov
inc
mov
pop
je
xchg
mov
pop
cmp
jp
jnp
cmp
je
mov
sbb
adc
cli
jno
movsb
filds
ficompl
test
mov
add
mov
inc
jne
mov
cmpsl
pop
lds
jp
in
xchg
sbb
daa
mov
sbb
shrl
and
ss
loope
mov
or
fcmovnbe
cmp
sbb
scas
mov
jno
fldcw
into
gs
inc
lret
stos
mov
mov
enter
fidivs
xor
jo
push
into
call
data16
cmp
cmc
add
stos
inc
jp
pop
lret
mov
flds
add
lcall
leave
stc
push
inc
ret
das
insb
stos
inc
sahf
popa
sub
xchg
mov
data16
push
ljmp
xchg
out
lahf
fisubs
das
fisubl
js
loope
dec
in
add
rolb
adc
xchg
testb
xor
ljmp
xor
mov
add
stos
xchg
mov
daa
mov
add
push
sbb
fcompl
adc
push
jo
adc
loope
ret
andl
jno
cli
in
sbb
insl
mov
ss
sub
arpl
mov
jmp
jbe
insb
cld
xchg
pusha
ss
push
xchg
inc
pop
bnd
fcompl
sbb
rorb
adc
shld
or
dec
loop
sub
mov
pop
fwait
xor
fs
stos
jecxz
sbb
loope,pt
jns
push
in
lds
or
push
pop
out
in
mov
out
xchg
shrb
mov
mov
fwait
xchg
sub
sub
dec
push
in
jo
push
ljmp
loopne
and
aaa
into
dec
inc
stos
inc
inc
outsb
insl
add
bound
pop
sbb
xchg
sub
dec
jecxz
push
lcall
push
lahf
ss
outsb
lret
bound
je
cmp
push
popf
push
adc
mov
inc
add
inc
jl
jne
inc
xlat
push
sub
cltd
pop
inc
sub
jb
je
pop
cmp
ret
insl
mov
cmpl
cmpsb
sub
sub
pop
divb
push
mov
push
in
push
jmp
js
lret
mov
lret
icebp
mov
mov
fsts
sbb
dec
loop
sarl
iret
les
add
pop
icebp
stos
inc
in
jecxz
les
out
iret
xchg
mov
neg
je
mov
insb
sub
stos
inc
pop
mov
arpl
mov
loopne
insb
mul
jp
or
outsb
add
sbb
sbb
sub
dec
inc
fdivrs
xor
stos
fiadds
int
add
arpl
xor
jmp
ljmp
fcmovnbe
pop
icebp
sar
push
jmp
and
xor
in
adc
jns
xchg
mov
mov
shl
lcall
mov
pop
idiv
mov
sti
sbb
mov
mov
xor
xchg
int
jo
cmp
out
pop
ret
pop
icebp
test
jl
roll
push
jmp
bound
mov
xchg
and
fs
add
push
mov
push
inc
xlat
sbbl
ds
sbb
ret
sub
or
pop
lock
sub
mov
stos
xchg
push
jmp
lret
sub
adc
into
ficoms
sub
ret
mov
xchg
pop
repz
out
ljmp
or
push
in
sub
test
arpl
out
inc
or
mov
dec
ret
inc
fsub
insb
xor
add
enter
arpl
sub
and
inc
xor
pop
sarb
iret
ljmp
rcrb
cmp
add
es
xchg
popa
clc
mov
xor
cld
aam
mov
sbb
push
jmp
aam
adc
addr16
mov
jmp
enter
push
ljmp
jno
add
dec
jno
in
test
call
sbb
dec
push
popf
imul
jns
pop
outsb
add
push
push
mov
xchg
js
sbb
int3
icebp
mov
xor
or
xchg
aad
sub
out
test
dec
repz
adc
jge
pop
test
stc
nop
fldenv
incb
insl
add
push
mov
out
into
adc
inc
inc
out
jbe
mov
fsubp
jle
pop
mov
cmp
jle
cltd
dec
jmp
pop
sbb
rclb
dec
loop
popf
mov
lahf
xchg
cmovns
inc
mov
fucom
popa
imul
xor
push
xchg
cmp
cmp
out
shrw
imul
xorl
shrb
xchg
cld
outsl
add
mov
pop
pop
xor
pop
fs
in
repz
push
out
cltd
fisttps
mov
xor
mov
pop
xchg
inc
fiaddl
test
out
ljmp
mov
sub
into
pushf
test
test
dec
lret
inc
mov
incl
adcb
outsl
adc
pop
popa
rolb
shlb
jo
push
jecxz
mov
lods
adc
mov
ljmp
jo
xor
mov
mov
fwait
mov
es
test
inc
out
mov
scas
mov
mov
shl
testl
in
cltd
jbe
fs
fistl
shr
repz
xchg
jmp
push
pop
push
pop
sbb
mov
jne
lods
sbb
mov
mov
ret
daa
test
adc
arpl
jae
sbb
pop
lock
int
dec
adc
or
mov
enter
insl
outsb
shrb
mov
out
xor
fcmovnu
push
pop
or
sti
mov
cmpsl
push
aaa
push
aaa
test
mov
add
jae
popa
push
into
xchg
cmpsl
popa
movsl
js
daa
stos
call
push
andb
mov
in
fdivl
test
and
adc
xlat
sahf
test
ret
sbb
aas
pop
inc
or
shll
inc
dec
push
icebp
mov
insb
pop
hlt
movsl
cmp
jg
dec
jmp
pop
sbb
ss
xchg
cmc
out
or
test
mov
mov
push
test
out
cmpsl
and
pop
dec
mov
mov
pop
fwait
cld
iret
mov
outsb
sbb
dec
mov
jns
ficompl
jl
test
orl
mov
fdivrl
mov
lret
mov
cmp
mov
cwtl
cmp
stos
sbb
pop
lahf
inc
xchg
jnp
add
imul
dec
dec
dec
shll
lea
pushf
mov
fs
lea
xchg
fisttpll
leave
hlt
xor
popa
mov
les
in
cmp
gs
push
filds
ss
inc
mov
inc
les
adc
xor
aam
dec
loopne
cmc
cmpsb
movsb
jge
repz
xchg
rolb
inc
add
or
sbb
xchg
dec
adc
or
xchg
scas
inc
fbstp
shl
sub
sti
lret
bound
xchg
xchg
sub
cltd
out
push
push
pop
inc
shrl
pop
insl
cs
push
std
mov
xchg
xchg
sub
push
mov
cmp
xor
jne
jle
cli
adc
lds
mov
and
je
or
pop
nop
jl
mov
cmp
inc
fsubrl
aad
ficoml
dec
hlt
mov
cltd
fnstenv
mov
enter
push
shrl
push
mov
or
push
xchg
or
std
scas
sub
sub
ss
out
stc
inc
flds
outsl
rol
fwait
scas
push
in
loopne
and
adc
ss
sbbb
adc
jp
dec
add
cmpsl
sbb
dec
test
test
mov
pop
call
xorb
cmp
outsl
jg
mov
jne
mov
push
rcr
rcrl
aad
inc
cmp
xchg
insb
in
aam
dec
pop
icebp
rcll
andb
inc
stc
mov
push
or
sbbl
jg
sub
mov
cmp
jns
sub
mov
insl
shrb
lods
inc
pop
in
add
pop
fst
into
popa
mov
xchg
out
stos
mov
add
jmp
stos
inc
cmp
pop
fsubrl
ret
sbb
pop
and
dec
bound
mov
jnp
inc
ret
xor
ss
jb
into
inc
dec
jmp
insl
das
aaa
jp
stos
xchg
loope
fbstp
cmp
loope
paddw
jo
add
push
jl
push
fnsave
insl
lahf
sbb
fs
pusha
pop
nop
int
adc
jl
lcall
push
mov
inc
addr16
mov
and
push
outsl
xchg
push
test
mov
mov
push
bound
iret
mov
sub
imul
and
cmp
or
xor
pop
cmp
jae
xor
push
imull
inc
and
or
negb
insl
sarb
rcrl
dec
xchg
pushf
cwtl
jge
les
clc
stc
filds
inc
sti
mov
mov
mov
inc
pop
mov
pop
iret
iret
cltd
inc
sti
adc
xchg
jmp
mov
xor
and
ror
adc
roll
cmpsl
jle
pop
or
mov
shll
add
mov
loop
sti
cmc
inc
in
in
and
lds
les
push
push
aas
int
cmp
je
push
pop
daa
ret
push
jecxz
mov
ja
mov
push
xchg
xor
push
fucomp
je
pusha
test
push
fdiv
inc
adc
xchg
enter
or
in
idiv
aas
or
lret
cmp
orl
fistpll
adc
movsb
in
adc
xchg
inc
insb
jno
into
ljmp
ret
les
ret
cmpsl
jle
fcomps
dec
inc
out
xchg
outsb
sub
pop
pop
mov
sub
cltd
dec
inc
aaa
nop
daa
inc
lahf
cld
dec
or
repnz
insl
pop
mov
jno
aam
lods
add
dec
inc
sti
insb
gs
adc
sbb
ja
jg
xlat
or
push
jnp
mov
in
sbb
mov
mov
cmp
and
mov
jne
in
mov
mov
mov
fwait
adc
mov
pop
repz
gs
sub
rcrb
push
sub
and
xor
inc
ja
negb
jno
std
ss
cs
jp
lret
lret
cmp
bound
test
xchg
pop
sbb
and
mov
adcb
sbb
sub
shrb
cs
add
lret
ds
jno
mov
mov
in
or
popf
sbb
adc
dec
fists
add
ds
jg
pop
daa
loopne
jp
aaa
lods
pop
adc
dec
ret
cmc
xchg
lret
sub
gs
sahf
sbb
adc
movsb
scas
mov
rcll
mov
cmp
sbb
mov
cmp
cli
rclb
or
cmpsl
push
stos
rcrl
mov
mov
ret
jns
xchg
subb
push
push
pop
add
das
cwtl
stos
pop
cmp
cmp
inc
shr
pop
pop
outsl
cmp
flds
pop
pop
mov
je
cld
movsl
in
enter
shrb
popf
cmpsb
gs
stos
je
cltd
movsl
ja
out
xor
jb
sbb
sbb
loopne
loop
cli
mov
or
mov
dec
push
in
jl
in
push
pop
xchg
imul
xchg
jmp
sub
addl
mov
sbb
leave
iret
lods
ds
in
xchg
push
scas
cmp
clc
popa
outsb
mov
adc
faddp
sahf
cmp
in
xchg
call
mov
dec
repnz
ret
test
mov
sti
xchg
int
lret
jns
add
jge
xor
mov
mov
outsb
or
or
loope
testl
push
sbb
pop
shl
popf
movsl
loopne
ret
lea
movb
pop
mov
movsl
mov
fiaddl
cmc
scas
cld
jne
sbb
inc
pop
mov
pop
out
add
dec
cld
xor
mov
pop
out
mov
cltd
pop
sub
xorb
mov
xchg
outsl
icebp
adc
inc
lock
sahf
jecxz
mov
jnp
mov
bound
rolb
push
sbb
jecxz
sahf
or
push
test
sub
shrb
pusha
lock
lret
movsb
jo
push
adc
mov
mov
jne
inc
cmp
cmp
or
adc
sbb
inc
outsl
arpl
je
mov
insb
mov
fwait
jg
mov
imul
testl
test
push
push
sahf
sub
lret
test
pop
orb
jns
mov
in
push
mov
xchg
pop
push
xchg
xor
dec
mov
orl
jecxz
pop
mov
lock
test
out
popa
cwtl
mov
ds
cmpsl
jne
lret
jmp
mov
cld
xor
outsb
loopne
aad
pushf
aam
jl
pop
sbb
sub
std
ret
lahf
sub
or
hlt
lods
addl
cs
push
enter
pop
jb
pop
psubsw
in
lds
pop
loop
ffree
lods
xchg
fisubrl
hlt
mov
jmp
mov
call
or
xor
imul
insl
xlat
dec
ds
jmp
out
or
cmp
push
mov
sub
orl
leave
je
cmp
pop
xor
sub
rclb
cmc
popf
adc
hlt
test
aam
repz
hlt
jnp
push
push
insb
ja
test
mov
stc
aam
lret
jmp
sti
sbb
adc
adc
inc
jns
jle
jg
mov
aam
inc
in
sti
add
imul
dec
fs
cmp
int
jbe
ds
push
sub
xchg
adcb
std
mov
dec
pop
jp
mov
dec
into
xchg
jno
vaddsubps
sti
movsl
cmp
ret
mov
mov
fidivl
out
stos
jne
inc
fdivrp
mulb
call
adc
fnstenv
or
gs
pop
imulb
faddl
sub
inc
fsubs
cmp
scas
mov
rclb
add
jns
je
outsl
push
cltd
lds
push
mov
cltd
jns
andb
cmpsb
adc
in
rcll
mov
push
add
ret
inc
sub
cmp
imulb
jo
test
iret
inc
pusha
xchg
and
inc
xchg
adc
xchg
xorl
cmp
jg
sbb
inc
arpl
dec
push
adc
pop
popf
dec
enter
xor
or
adc
imul
xchg
inc
fldl
outsl
rclb
or
and
imul
and
stc
fstps
cwtl
push
xor
mov
js
push
ret
add
ss
fnstcw
mov
xchg
lcall
repnz
nop
cmp
js
ret
aam
inc
insb
mov
enter
xchg
pop
mov
cmpsb
stc
xchg
inc
mov
mov
inc
movsb
enter
mov
xor
ret
rolb
stos
add
add
clc
xor
mov
push
sub
pop
jg
lret
inc
stc
loope
pop
clc
cwtl
or
push
cli
inc
jne
je
scas
dec
idivb
xor
sbb
inc
nop
pop
out
dec
in
lahf
jo
add
mov
inc
mov
ret
setge
mov
iret
mov
mov
pushw
shlb
outsl
test
dec
mov
jg
popa
iret
mov
mov
sub
shrb
push
mov
mov
xchg
xchg
cltd
pcmpeqb
in
cld
dec
mov
xchg
notl
inc
sub
mov
dec
into
and
mov
mov
pop
insb
dec
jecxz
jp
sbb
mov
adc
rclb
ss
in
movsb
js
sbb
andl
xor
data16
xor
insb
and
mov
xchg
ds
testl
ss
xor
or
ljmp
inc
arpl
imul
push
insl
data16
xchg
jns
test
jl
pop
scas
add
sbb
notb
pop
push
daa
mov
pop
inc
mov
pop
inc
sbb
or
iret
xchg
mov
sub
and
xchg
xor
stos
shlb
adc
in
and
insl
imul
xor
popa
scas
push
mov
fcompl
stos
sbb
xchg
xchg
imul
mov
and
aaa
pop
shl
cmc
mov
jecxz
adc
cmpsb
cmp
xor
add
fidivs
sbb
inc
cmp
jb
in
mov
pop
sti
mov
shlb
stos
pop
movsb
in
adc
pushf
cmp
inc
inc
sbb
cmc
xchg
ds
ss
idivb
scas
cld
in
sub
cmp
pusha
adc
push
mov
fs
add
pop
mov
xchg
into
and
and
xor
pop
jmp
daa
xchg
out
testb
stos
aaa
mov
mov
mov
inc
repnz
cmp
cli
push
dec
dec
fwait
xchg
sub
outsl
iret
leave
mov
dec
sub
sahf
lahf
loope
outsl
aas
and
test
cwtl
popf
jecxz
sbb
push
sbb
push
xor
aas
mov
cli
pushl
mov
xchg
pop
out
cmp
lret
jae
loopne,pt
xor
xor
out
and
mov
inc
sti
in
jne
lret
xchg
sub
fists
dec
jo
out
xchg
dec
lea
fdivs
pop
sahf
push
push
movsb
xchg
adc
sbbl
es
mov
aam
int3
xor
ljmp
mov
xor
les
lods
cmc
mov
ds
test
leave
xor
inc
wbinvd
orl
mov
push
xchg
mov
lea
adc
rcrb
jno
ss
xor
adc
inc
sbb
push
inc
mov
dec
dec
push
mov
cmpsl
aad
pop
data16
cmp
aam
imul
inc
stc
call
movsb
jl
lods
or
sub
hlt
or
jo
add
mov
or
in
and
repnz
sbb
lret
mov
xchg
les
pop
in
orl
out
inc
inc
in
mov
jo
jnp
lods
mov
rolb
push
out
fsub
daa
sub
movsl
lret
sbb
mov
fdivrl
mov
fiadds
jbe
lock
in
ret
push
xchg
push
lea
ljmp
mov
push
fdivrl
ljmp
push
pop
icebp
inc
jnp
cld
push
inc
inc
mov
jo
jns
movsb
pop
push
cmp
or
int
cwtl
outsb
sar
mov
jo
pop
mov
mov
xor
inc
mov
inc
ret
outsl
push
cmc
ds
mov
mov
fcomi
cmp
or
lcall
push
call
sti
addr16
cwtl
sbb
mov
jne
sbb
add
sbb
stc
xor
xchg
hlt
xor
mov
arpl
dec
mov
inc
adc
andl
jl
jle
dec
in
popa
cltd
mov
jle
aas
sbb
jle
jmp
das
rclb
cmp
lret
push
in
xlat
push
jp
push
popf
inc
stos
jo
fildl
xor
repnz
popf
mov
movsl
cmp
fdivs
or
ds
in
jp
loopne
sub
pop
mov
insb
daa
mov
xchg
add
mov
sbb
inc
fdivs
cmp
pop
testb
sub
and
jecxz
es
je
les
jbe
shrl
jp
mov
inc
sub
mov
jnp
xor
rcrl
mov
jmp
cmpsb
adc
add
and
push
mov
mov
sti
push
lcall
jns
mov
lret
repnz
outsb
cltd
xchg
test
scas
insb
int
xorb
push
mov
push
in
jg
mov
cld
daa
mov
push
push
pusha
push
push
test
xchg
arpl
lods
jne
daa
jge
mov
scas
inc
xor
jb
push
cmp
roll
and
aas
adcl
push
add
scas
sub
mov
mov
in
stc
nop
pop
addl
dec
jl
push
cmp
rclb
insb
lcall
jge
push
jns
pop
stos
je
lret
mov
shrb
int
repz
cmpxchg
js
das
clc
sahf
mov
in
adc
adcl
inc
ficompl
lods
dec
in
outsl
xor
pop
xor
dec
xchg
in
insl
or
gs
inc
adc
xchg
bound
xor
shlb
push
sbb
jnp
and
iret
sub
fsubs
xchg
fsubrs
push
dec
jecxz
idivb
shl
std
movsb
cmp
sbb
jo
or
mov
adc
flds
les
dec
loopne
xchg
fbstp
popf
add
pushf
ss
sub
movsl
mov
cmp
inc
xchg
xor
iret
inc
inc
es
aas
andl
popa
ss
aas
lds
sub
cmp
lds
scas
push
inc
pop
fs
sbb
jne
es
into
hlt
stos
repz
mov
mov
gs
adc
sbb
dec
xchg
daa
mov
hlt
mov
loopne
enter
sbb
pop
imul
in
jo
mov
sahf
sbb
repz
push
xor
sar
mov
cmp
cmp
popw
jo
insb
mov
cmp
int
xor
or
cmpl
test
cmpb
sub
mov
push
xlat
xchg
orl
cwtl
adc
pop
inc
mov
cwtl
das
xchg
or
inc
ds
dec
jmp
or
insb
cmp
ljmp
add
adc
mov
xor
xor
dec
in
sti
arpl
sub
insb
add
mov
push
leave
cltd
std
imul
jnp
and
adc
js
add
pop
out
and
push
inc
jl
cmp
sti
push
jp
int
or
push
dec
loopne
cmc
adc
jl
daa
gs
pop
clc
shr
das
cli
push
imul
cmp
jns
insl
stos
jge
cltd
jmp
cld
xchg
mov
cltd
jle
outsb
push
test
lea
les
jne
sbb
add
and
std
xchg
cs
in
test
test
pop
sahf
add
xor
mov
mov
loopne
jl
cwtl
adc
mov
sahf
push
pop
mov
xlat
movsb
inc
stos
es
mov
stos
add
jbe
fstpt
insl
mov
jl
or
cmc
sbb
xor
mov
aaa
xor
or
pop
jge
sub
add
mov
sti
shlb
mov
mov
ret
xor
pop
testb
cmpsb
enter
in
adc
mov
pop
adc
inc
jle
imull
sarl
insb
fbstp
in
sahf
pop
push
cmpsb
cmp
cmp
adcl
jmp
fiaddl
mov
bnd
lods
cli
cmc
mov
call
jmp
cmpb
push
es
sarl
xchg
push
daa
inc
ja
push
cs
dec
lahf
dec
xlat
outsb
cmpl
mov
mov
jg
jg
sub
sub
lods
xorb
jle
or
cmp
mov
cmp
scas
push
popf
add
push
cli
sarl
lea
add
inc
pushf
pop
outsl
nop
mov
mov
clc
pop
mov
stos
pop
xchg
push
inc
sahf
sti
xor
bound
add
arpl
roll
and
mov
loopne
push
jmp
or
enter
xor
jle
lods
in
jp
sbb
mov
arpl
mov
call
and
mov
test
leave
popf
xor
sub
adc
lret
andl
lock
ret
pop
movlps
dec
add
add
imul
popf
or
mov
aas
or
jo
sti
inc
jl
add
mov
jbe
jge
loope
lret
dec
bswap
hlt
nop
out
xor
mov
mov
sub
pop
imul
pop
mov
push
sub
jo
pop
inc
sarb
scas
aas
mov
pop
pop
xchg
cli
pop
and
cmp
pop
inc
pusha
add
jl
shlb
xchg
sub
out
cmpsl
xor
movsl
ss
jg
notl
ret
out
scas
jae
rol
xchg
xor
mov
lret
out
les
out
add
daa
add
and
push
setne
repnz
inc
and
loopne
xchg
outsl
xchg
repz
cmp
lock
mov
mov
in
insl
sbb
dec
out
or
stos
add
and
mov
lret
and
jno
lret
mov
imul
mov
mov
out
fsubs
sbb
mov
sarb
lret
je
or
rcl
inc
leave
push
out
stc
lock
push
in
decb
xorl
mov
xor
cmp
add
adc
jno
pop
ds
sbb
jnp
loope
cs
js
xor
loopne
dec
xchg
adc
dec
dec
loop
sti
stos
adc
cmp
repnz
sbb
nop
and
mov
stos
lret
out
xchg
and
jg
push
xchg
movsb
dec
in
jl
cltd
leave
inc
dec
imul
aaa
cli
jno
inc
leave
sahf
rolb
mov
fucom
test
mov
rorl
jns
js
cmp
lock
add
mov
js
mov
int3
fsubs
dec
dec
dec
mov
cmp
fld
cmpsl
jne
pop
insb
test
jne
mov
dec
hlt
pop
mov
scas
lcall
jne
push
cmpsl
sbb
jle
mov
repnz
test
insb
bound
jmp
adcb
cmpsl
dec
xchg
leave
in
jnp
mov
das
dec
sub
cmpb
shrl
cmp
outsl
mov
dec
std
adc
pushf
ss
adc
test
andb
xor
adc
xchg
xor
gs
xchg
dec
xor
stos
add
cli
arpl
push
and
imul
cli
rorl
pop
push
push
jns
cmp
adc
sub
xchg
lds
movsl
dec
jbe
cs
iret
xchg
in
jge
ja
xchg
pop
shlb
jae
cltd
and
adc
mov
out
lcall
mov
push
push
hlt
notl
cmpsb
add
jnp
mov
xchg
mov
and
inc
push
mov
fsubl
inc
arpl
inc
jno
mov
lods
and
test
sub
fwait
jns
xchg
lret
sub
inc
repnz
pusha
jno
dec
andb
inc
incl
push
mov
lea
add
push
adc
sbb
adc
stos
jne
and
cltd
ror
add
and
addr16
push
lock
iret
in
pushf
fidivl
or
push
ret
stos
cmp
mov
cmc
adc
loopne
jae
and
dec
mov
add
shlb
push
adc
inc
aaa
fs
pop
shlb
stc
mov
call
sti
out
stc
mov
cwtl
pop
pop
mov
pop
mov
add
push
push
adc
in
cmovle
lock
test
clc
lahf
in
jl
lock
aam
call
pop
xchg
outsl
jb
subb
jbe
fwait
aas
add
jge
cmpsl
dec
dec
fimull
insl
ja
and
jns
pop
jp
pop
lods
jnp
nop
inc
ds
jg
adc
and
popf
pop
pop
xchg
call
jl
mov
andb
fisttpll
mov
push
jmp
loopne
jo
jp
fidivl
icebp
jb
sub
aad
xchg
inc
sar
pop
mov
icebp
in
aaa
push
push
cmp
and
aaa
mov
pop
dec
lea
fbstp
mov
pop
mov
ret
inc
push
es
in
into
or
mov
adc
rcl
shlb
loopne
xor
xchg
lods
sub
adc
das
xchg
outsb
cld
pop
xchg
in
popf
and
into
xchg
push
aas
pop
repz
mov
inc
mov
or
inc
lcall
and
movsl
jg
test
dec
stos
in
push
push
shl
mov
lret
mov
inc
lahf
cmpl
pop
insb
sub
mov
jmp
sbb
lcall
cmpsb
mov
cmpsl
outsl
sti
shrb
xchg
insl
ret
hlt
adc
push
call
scas
xor
imul
push
std
xchg
pop
mul
xchg
aaa
aas
add
enter
and
adc
cmpb
stos
in
xor
int
push
mov
inc
gs
repnz
push
xor
cld
ds
test
sbb
loop
mov
mov
pop
adc
lock
lods
mov
push
dec
mov
lea
jp
es
sub
jmp
out
in
sbb
push
cli
xchg
inc
fimull
jae
subb
out
jbe
pop
out
push
fldcw
jmp
xlat
pop
xor
or
out
loop
add
xlat
pop
xchg
jne
shrl
push
dec
or
bound
pop
pop
aad
cmp
sbbb
fmuls
xor
cmp
mov
add
adc
xchg
sub
stos
mov
adc
shr
cltd
clc
pop
mov
ss
mov
cmpsl
stc
or
sbbb
dec
push
mov
mov
adc
arpl
mov
mov
jbe
cwtl
xchg
fmull
idivl
cwtl
cmp
sub
mov
push
fldlg2
cs
push
cmp
fldenv
bound
jne
or
aam
pop
nop
cmp
lahf
fisttpll
jns
scas
loope
xchg
xor
sub
adc
xchg
inc
mov
jno
inc
das
jns
popf
inc
or
sahf
popf
lret
sti
mov
cmpsb
popf
movsb
xor
cltd
cmp
data16
push
pop
xchg
fs
idivl
xor
jbe
repz
ljmp
push
pop
sub
pop
sbbb
in
ret
jle
pusha
jg
push
adc
lret
mov
jbe
leave
int
and
addb
mov
lods
gs
mov
jb
fcoms
aaa
shrb
mov
loop
outsl
push
aas
mov
andl
jae
out
fsubrl
inc
jge
jge
js
xor
fs
shrb
cmp
mov
or
sbb
icebp
sbb
or
cmpsl
push
mov
insl
test
nop
jbe
sbb
scas
xchg
push
mov
add
loope,pt
and
ficompl
lcall
in
fdivrl
push
jmp
aas
push
pop
pop
test
int
jae
push
ss
ss
mov
jge
mov
iret
cwtl
inc
xlat
or
mov
jns
sub
scas
lds
in
in
outsb
inc
push
ret
stos
pop
out
mov
loope
pop
repz
iret
std
xor
jo
dec
fiadds
inc
mov
adc
cs
in
into
gs
and
and
outsl
push
dec
lret
movsl
cmp
push
inc
xlat
aam
jl
es
pop
cmp
mov
roll
jle
repnz
pop
lahf
push
inc
pop
jp
aas
lods
jp
mov
rol
lds
mov
xchg
lea
inc
and
xchg
jbe
lcall
pop
repz
incl
push
xchg
mov
push
repnz
das
sub
test
xchg
cmp
subl
inc
fdivs
dec
cwtl
mov
push
jl
popf
jecxz
repnz
and
push
pop
pop
adc
insl
push
cmp
lds
dec
add
jns
lock
mov
xchg
aam
add
out
jge
imul
lret
rolb
dec
cmc
insl
push
mov
mov
cmp
aas
push
push
pushf
xchg
insl
out
addr16
rclb
arpl
or
cmp
sbb
mov
jge
inc
scas
jb
outsb
add
ret
xchg
jae
inc
xchg
push
xchg
mov
push
loopne
loop
ja
daa
xchg
popa
loope
sub
inc
pop
or
arpl
push
movsl
sbb
cmp
mov
mov
loop
inc
push
push
lods
push
jl
pop
or
lds
mov
ds
sbb
mov
jge
mov
int3
inc
movsb
scas
lods
out
dec
push
loope
test
mov
loop
inc
fs
loop
pop
mov
adc
rcl
mov
ss
insl
mov
int
in
cmp
mov
pop
add
dec
enter
insl
jno
adc
sbb
ret
jg
dec
jno
movsb
sti
mov
lret
adc
pop
or
xor
cmp
push
fwait
pop
push
mov
mov
xchg
popl
imull
cmp
xadd
push
add
jnp
movsl
jg,pt
mov
popa
addl
movsb
or
sbb
cmc
out
mov
dec
add
lcall
test
dec
mov
lret
roll
outsl
jo
jae
enter
or
mov
or
jp
cmpps
out
sqrtps
mov
jbe
mov
aas
movl
cmp
imul
and
ss
sbb
faddp
movsl
mov
fs
dec
sub
inc
jmp
jbe
test
rorb
out
xor
xchg
loopne
jbe
movb
add
mov
sti
xchg
sub
and
in
notl
outsb
mov
scas
imul
out
mov
insb
mov
push
cmpsl
out
xor
ret
addr16
mov
cs
movsl
arpl
push
mov
sbb
dec
push
inc
or
push
inc
xchg
sub
sbb
cli
jmp
aas
repnz
loop
mov
sarl
xchg
loope
enter
and
inc
int
dec
scas
sbb
sahf
xor
ljmp
lock
sub
adc
test
rol
sub
mov
mov
loope
pop
in
inc
xchg
inc
mov
mov
sbb
push
aaa
ljmp
sbb
mov
ja
popa
out
sti
cmp
xorps
leave
inc
stc
mov
pop
jl
fcmove
mov
xchg
sub
push
cmpsb
sbb
mov
enter
sub
ret
nop
data16
aaa
test
out
test
lret
push
dec
xchg
pop
jl
hlt
insl
sbb
dec
pop
jge
xsaves
lock
out
push
clc
xlat
icebp
lret
push
pop
dec
cmp
loop
outsl
cwtl
mov
mov
cmp
jl
xlat
leave
cmp
out
sub
shrl
xchg
jp
loope
ljmp
loope
shlb
dec
add
mov
mov
dec
clc
lds
call
cmp
dec
adc
ss
and
aad
movsb
testl
mov
dec
fidivl
mov
out
push
jecxz
or
in
mov
stos
je
subb
shll
aad
xchg
icebp
inc
cli
out
arpl
cmpsl
xchg
imul
cmc
in
cmp
lret
cmp
lods
loopne
in
mov
ret
mov
jmp
daa
scas
cltd
add
rcrl
loope
adcb
jo
adc
cmp
aaa
xchg
xchg
cmp
pop
call
cwtl
xor
shll
and
pop
xchg
cmp
loop
cmp
stos
sti
pop
xchg
inc
shrl
sbb
outsb
jl
dec
and
mov
cmp
jp
mov
repz
or
imull
sti
stos
dec
hlt
sbb
dec
in
pop
mov
xchg
pop
addr16
iret
or
pop
xor
repnz
and
adc
imul
mov
orl
fcompl
insl
loop
scas
push
xchg
inc
inc
xchg
dec
inc
ljmp
sbb
mov
mov
cli
or
lods
adc
dec
test
jo
lock
inc
push
out
test
cmp
push
jne
pop
push
js
and
xchg
add
sar
push
push
std
lods
push
fidivs
cwtl
test
mov
jge
xchg
iret
rcrl
lods
jl
pop
lret
cwtl
iret
mov
mov
lret
jae
xchg
lods
imul
cmpsl
dec
mov
rcll
lods
sar
mov
jns
mov
aad
sub
dec
xchg
popa
insb
push
inc
in
mov
les
icebp
and
std
dec
mov
xorl
cmp
jb
aaa
mov
popf
xchg
inc
sub
orb
es
adc
add
xchg
in
test
rcr
out
imul
sub
mov
jb
mov
cmc
scas
sub
psubq
bound
push
into
ret
insb
sub
cmp
ret
pop
ffreep
fucomi
test
push
or
pop
mov
outsb
addb
mov
aaa
pop
das
push
adc
pop
sub
or
pop
imul
fmull
sbb
lret
mov
xchg
pop
sub
subl
in
xor
push
cmpsb
sbb
cmp
mov
xchg
ficoml
cmpsl
cmpsb
arpl
leave
clc
jae
jne
andl
mov
or
mov
jns
push
pop
bound
arpl
cs
movsb
insl
stc
pop
pop
pop
add
mov
mov
jle
xor
aad
aad
mov
dec
call
insl
pop
mov
data16
sbb
push
push
jne
adc
mov
add
or
insl
loopne
jmp
inc
out
mov
mov
clc
hlt
mov
mov
les
nop
inc
or
rol
fucomip
ss
in
mov
iret
mov
bswap
pop
lock
out
js
xchg
out
lcall
push
cmpb
daa
movsb
fdivl
add
jecxz
or
fwait
xchg
int
or
sub
cmp
cli
aaa
and
test
test
loop
inc
or
shr
pop
repnz
mov
push
jno
aas
outsl
mov
inc
leave
jb
lods
lret
sub
pop
jmp
push
sbb
dec
xor
sub
dec
dec
loope
std
pop
dec
mov
sub
mov
aad
les
mov
dec
jns
loope
lods
ljmp
movsb
pop
mov
dec
mov
xchg
and
add
cmp
mov
ja
mov
xorb
jno
jbe
dec
pop
sbb
test
jno
push
jno
popa
sub
das
lods
inc
pop
xchg
insl
movlhps
dec
ret
lock
int3
fldl
xor
scas
nop
add
sbb
dec
lods
jno
enter
test
push
popf
push
mov
jmp
nop
fcoms
es
lcall
or
ds
out
mov
dec
fistps
out
pushf
scas
lea
pop
bound
xchg
mov
adc
aad
lcall
jecxz
and
push
jge
sub
addr16
ficompl
push
jne
mov
mov
rcll
and
cmc
addr16
loopne
addb
data16
mov
xchg
and
xchg
scas
out
and
in
call
addb
push
lahf
mov
shlb
stc
sub
ficoml
loope
jmp
sbb
rcll
lods
dec
insb
cmp
xchg
mov
mov
inc
rcll
in
movsb
xchg
mov
and
and
push
outsl
out
sbb
mov
xchg
dec
pusha
xchg
or
clc
and
fstl
cmpsl
mov
addr16
sub
and
jb
inc
sbb
adc
test
test
adc
ljmp
dec
ss
xchg
push
and
rcrl
rorb
xchg
lcall
rcl
ljmp
mov
ret
jp
scas
stos
dec
mov
icebp
push
push
movsb
sub
pmuludq
jae
insb
int3
pop
sti
jg
test
add
lods
gs
adc
arpl
lods
xor
xor
add
dec
clc
cwtl
jbe
dec
sbb
sbb
pop
dec
aaa
sbb
or
aaa
pop
xor
sub
pop
sub
inc
repnz
add
shr
pop
cmp
jns
pusha
and
xor
pop
adc
jae
pop
add
jno
cld
popa
mov
inc
fdivrs
popf
repz
js
pop
scas
fisubrl
xor
outsl
imul
xchg
je
mov
sub
cmp
popf
dec
or
jnp
mov
mov
clc
mov
xchg
sbb
lret
ret
xchg
jecxz
mov
or
imul
push
lret
mov
sahf
or
fs
push
pop
lods
vxorps
pop
cmc
fwait
jns
imull
mov
xor
jg
outsl
mov
fwait
mov
ds
movsl
sbb
pop
adc
sub
mov
pop
jl
ficomps
sub
sbbb
xor
push
jg
loopne
jmp
and
lret
stos
inc
je
mov
sub
add
mov
fisttpll
mov
lret
mov
sub
test
icebp
nop
sub
dec
mov
movsl
int3
stc
and
fcoml
jns
das
stos
in
cld
test
es
into
sahf
cwtl
sti
adc
and
int
repnz
in
test
shl
loope
pop
add
xor
pop
testl
xchg
sub
or
test
xchg
dec
movsl
dec
jae
ds
testb
in
sbb
mov
lahf
testl
mov
mov
push
jo
jae
mov
mov
mov
jo
xor
pop
addr16
jmp
inc
loop
out
aam
and
fistpll
paddq
add
adc
pop
inc
xchg
cmpl
sbb
sub
loop
test
mov
push
mov
push
lcall
mov
adc
push
xchg
cmpsl
fdivrl
pop
add
rol
dec
jo
ror
lods
ja
fucomip
sbb
jne
jnp
popa
cli
xchg
mov
pop
cli
fsubrl
test
stos
das
test
mov
ret
popa
clc
hlt
popa
and
ret
or
mov
push
imul
cld
push
mov
pusha
scas
inc
and
mov
pusha
jbe
xchg
sbb
sub
cltd
test
cmc
pop
cmpsl
ds
stos
scas
fsubrl
adc
or
mov
popa
pushf
outsb
sbb
mov
pop
push
mov
shlb
sbb
fisttpl
fcmovbe
in
add
sarl
fists
fsubl
popa
shll
data16
jnp
ret
enter
mov
insl
pop
jge
xchg
dec
sbb
mov
loopne
pop
out
mov
sub
into
fdivl
jno
or
cmpsl
jnp
jnp
mov
push
jmp
fsubl
xchg
mov
cmp
dec
cmp
cs
mov
pop
out
push
gs
addr16
jg
fs
test
ss
mov
ret
cmpsb
xchg
nop
sub
scas
mov
aaa
inc
fucomip
sbb
cwtl
add
jae
xor
test
inc
repz
fs
mov
aam
mov
popa
pop
sbb
inc
pop
sti
xor
xchg
sub
pusha
sub
out
test
pop
stos
addl
adc
ja
rclb
outsb
xor
sub
test
push
add
add
or
es
cmp
rcrl
nop
dec
fs
pop
rclb
mov
pop
adc
daa
mov
adc
movsl
pop
outsl
pushf
test
mov
shlb
jnp
inc
out
pop
gs
push
and
insl
mov
jbe
xchg
daa
lds
shrb
inc
pop
or
cmp
and
lods
mov
shl
mov
test
push
ljmp
pop
mov
frstor
ljmp
or
xlat
daa
movsb
push
cmp
int3
pop
lret
int3
xchg
icebp
aas
cltd
push
pop
pop
mov
pop
dec
int
jno
lahf
rcrb
jae
or
cmc
xchg
jns
jecxz
cmp
icebp
xchg
xchg
jecxz
sbb
push
hlt
or
das
inc
dec
cmp
adc
pop
or
ss
out
mov
jbe
jle
xor
in
lret
adc
adc
sbb
leave
sbb
into
ljmp
stos
dec
inc
fdiv
out
fnsave
in
leave
ljmp
gs
cltd
add
pop
es
loope
xchg
adc
js
and
sub
ret
mov
push
lock
aam
xchg
mov
xor
mov
xchg
and
mov
jno
insl
into
gs
rol
jnp
fisttpll
into
jo
mov
hlt
enter
andb
mov
mov
out
xchg
insb
ret
lret
mov
xchg
jns
pop
inc
in
lahf
icebp
xor
push
cmp
popf
je
daa
pop
fimull
or
shrb
dec
gs
xchg
mov
ret
jo
mov
and
ds
mov
aam
or
xchg
bound
sar
add
pusha
pop
xchg
loope
scas
inc
fwait
jmp
push
cmp
rol
push
test
aam
cmpb
add
mov
sbb
jmp
cmp
jle
repnz
mov
leave
enter
stc
jmp
mov
and
xchg
lods
lret
mov
int3
add
mov
mov
add
andl
pop
enter
lahf
adc
rcll
add
adcl
add
mov
mov
in
cmp
inc
cmpsl
add
lods
sub
in
mov
lds
test
mov
std
adc
adcb
xorl
cld
sub
data16
lods
ds
push
in
fwait
lods
pop
and
pop
addl
imull
jecxz
cmp
idivl
xchg
mov
push
test
in
mov
js
arpl
stc
ljmp
push
mov
orb
and
xor
imul
sbbl
mov
inc
inc
es
xor
out
test
push
mov
outsl
ret
dec
ljmp
call
cmpb
pop
fiaddl
stc
mov
aaa
test
in
fucom
js
fidivrs
xchg
dec
mov
add
stos
sbb
test
loop
fwait
push
loope
dec
adc
dec
imul
and
subb
mov
mov
pop
sbb
icebp
mov
aaa
adc
dec
or
sbb
lds
inc
cwtl
out
mov
xchg
cs
xor
mov
leave
jl
push
jmp
push
aad
lods
jmp
sbb
xor
lods
add
decb
out
and
push
out
xor
mov
mov
jne
out
addb
loop
clc
mov
add
jecxz
outsl
inc
fadds
pop
push
int
jmp
adc
scas
pop
adcl
mov
aas
jns
dec
scas
inc
in
pop
jnp
and
inc
xor
ficompl
cwtl
mov
aam
add
xchg
pop
call
aas
ljmp
mov
fiadds
sahf
add
pop
push
lcall
loop
sahf
lcall
sahf
popl
blsic
xor
arpl
roll
lret
inc
in
jnp
nop
xchg
mov
pusha
add
or
and
test
mov
adc
out
and
cmpsl
andb
sub
adc
push
arpl
pop
xchg
push
in
in
jl
jp
push
mov
or
cs
jecxz
jge
inc
fnstsw
or
jae
sbb
mov
cmp
pop
scas
or
data16
nop
bound
inc
gs
mov
loopne
pop
push
sbb
jmp
loope,pn
pusha
test
mov
inc
incb
into
es
adc
jo
cmp
lcall
hlt
js
mov
push
pop
adc
mov
cmp
sti
dec
mov
xchg
cmp
mov
nop
stos
ja
cld
mov
fxch
inc
int
cwtl
push
and
xor
loop
out
dec
xor
add
xor
cmc
mov
cld
mov
movsb
fsubrl
push
adc
mov
aas
push
or
mov
repz
outsb
icebp
mov
loopne
adc
dec
pop
repnz
mov
or
or
jo
add
fldenv
stc
lea
cli
sarl
lea
in
pop
sti
cmp
push
xor
repz
imul
mov
push
es
lds
add
cmpsb
cmc
arpl
mov
rcrb
jp
pusha
lahf
or
adc
add
fwait
sti
aam
mov
dec
cmp
test
pop
clc
test
cmp
sbb
cmc
add
mov
roll
push
jp
or
out
mov
and
mov
jmp
pop
mov
push
lods
cld
pmaxub
lcall
pop
cmp
dec
ja
dec
xchg
jl
bound
stos
sahf
sub
nop
mov
leave
xchg
test
mov
leave
xor
xor
lret
adc
push
push
or
aas
push
insb
jp
jl
cmp
cmpsl
push
push
fcmove
mov
call
in
jo
outsb
mov
clc
xor
in
cltd
ds
into
mov
incb
sbb
or
pop
adc
aas
jmp
imul
jo
dec
sub
pop
ret
js
pop
shl
mov
xchg
sbb
sub
sbb
out
movsl
lea
xchg
rolb
add
ja
pushf
mov
or
mov
fildll
add
mov
push
push
test
dec
in
dec
pop
jmp
xor
bound
popl
insb
fsubrs
sbb
mov
test
aam
incl
xor
adc
loope
test
sub
fdivl
xchg
out
push
enter
xchg
fs
xchg
clc
adc
push
adc
testl
jne
push
jno
jb
mov
ja
lea
lahf
dec
xchg
xchg
stos
jmp
sbb
fidivrs
negl
je
push
sub
add
jp
push
and
pusha
stos
sub
cmc
scas
lret
jmp
into
sbb
dec
jns
test
or
lcall
testl
std
cmp
sub
sub
arpl
shll
dec
add
jecxz
cwtl
adc
sub
sbb
jae
movsb
in
mov
jle
sub
fsubl
mov
in
push
or
aaa
stos
dec
cmpsb
mov
jg
inc
sbb
lea
pop
gs
movsl
mov
inc
pop
shlb
repnz
jne
and
popa
nop
test
xchg
and
inc
fisubs
inc
inc
pop
xor
mov
push
testb
pop
pop
xchg
int
sbb
cmpsl
or
jnp
mov
and
mov
jg
push
xlat
insb
inc
mov
repz
popa
mov
mov
mov
filds
popf
xor
push
subb
jmp
mov
push
and
roll
clc
or
fstl
repnz
mov
cmc
fstpt
push
divl
or
mov
lods
xlat
mov
mov
sub
and
mov
sbb
outsl
mov
push
and
push
clc
and
out
sbb
das
adc
xor
xchg
mov
mov
shl
mov
sbb
nop
jl
test
jno
imul
scas
stc
test
jne
lock
dec
fs
lahf
sti
divl
inc
cmpsb
mov
mov
sub
jl
adc
add
jne
sbb
adc
loope
int
sbb
sbb
pop
cmp
outsb
addl
loope
mov
xchg
inc
ljmp
inc
fistl
add
push
adc
mov
push
pop
out
dec
gs
pop
and
cmp
and
es
repz
lods
movsb
or
test
fwait
in
pusha
sub
or
aad
sarl
outsb
mov
mov
or
and
pop
mov
stc
or
shll
mov
jo
gs
and
cmpsb
and
imul
jo
sarb
dec
ss
lock
mov
mov
out
pop
out
adc
and
icebp
cmpsb
ja
jno
popl
or
mov
aas
jp
scas
out
je
mov
sbb
das
stc
mov
mov
sahf
lea
fs
lret
arpl
adc
rcrb
dec
push
jae
jp
push
sub
les
add
dec
aaa
and
stc
cmp
or
mov
mov
loopne
mov
lea
xchg
dec
ss
lds
ljmp
xchg
push
rorl
testb
ret
jge
fists
add
mov
mov
in
movsl
push
in
inc
jno
arpl
lock
or
push
push
movsb
fisttps
cmpsl
add
rcrl
add
jns
mov
lea
push
push
cwtl
xchg
xor
pop
jb
xor
movsb
pusha
jle
inc
dec
or
insl
ja
push
in
cmp
mov
sbb
mov
lahf
lcall
movsl
clc
ja
xchg
test
mov
push
ljmp
pop
insl
cmpsb
fucom
daa
ds
mov
add
lcall
out
fsubrs
or
imul
out
mov
mov
out
sub
mov
mov
mov
jnp
inc
mov
std
sub
mov
push
add
sti
xchg
or
cltd
mov
jnp
out
mov
pop
cmp
pop
mov
push
jp
sti
stos
mov
aas
cld
jno
mov
sub
fs
push
rcrl
inc
adc
cmpsb
sub
rcrb
icebp
pop
icebp
mov
test
mov
shl
jmp
xor
adc
or
aaa
xchg
ds
mov
js
shrb
dec
testl
sub
jno
dec
mov
jo
pop
test
or
add
mov
inc
cs
decb
dec
lds
mov
ror
aad
ljmp
repz
repz
xor
xchg
inc
push
hlt
or
mov
xor
push
in
fwait
pop
and
sub
movb
pop
jmp
out
test
mov
lds
and
or
push
mov
jmp
mov
mov
insl
push
mov
stos
cmp
sbb
fs
inc
jmp
cmpsb
test
jne
sbb
push
out
std
or
addr16
push
addb
sub
cmc
js
inc
sub
stos
std
cmp
add
into
mov
les
mov
push
pop
movb
imul
cmpsl
mov
jne
mov
inc
out
aaa
cmp
xor
rcrb
or
fmull
xor
ss
or
and
sahf
jns
xchg
mov
fstpt
std
cmp
ja
cld
inc
sbb
ret
push
mov
pusha
jp
pop
mov
pop
jb
sbb
adc
bnd
add
ja
loop
mov
jecxz
icebp
sbb
lret
sar
pop
dec
outsl
ljmp
adc
or
lret
sub
xor
loope
ljmp
adcb
sub
and
push
dec
addb
pop
mov
nop
jnp
mov
int
sti
insb
lret
sub
fadd
mov
jle
int3
les
insb
repz
dec
push
cmp
adc
xchg
add
fidivrl
jo
test
dec
int
daa
jb
mov
out
pop
iret
cmpsb
push
add
add
arpl
pcmpgtd
add
mov
adc
inc
and
iret
push
outsl
imul
jae
adc
mov
inc
xor
and
inc
movsb
xchg
lock
mov
arpl
dec
pop
int3
push
xchg
xlat
setno
jge
fwait
mov
sbb
ret
jb
repnz
shll
push
or
repnz
and
xchg
loopne
pop
mov
rcrl
push
push
mov
int
and
movsb
cmp
xor
aad
faddl
push
pusha
jp
push
and
aas
pop
mov
imul
push
push
sti
or
sbbl
mov
test
xlat
adc
lret
icebp
lock
jo
sti
adc
add
adc
movsl
add
sub
inc
dec
icebp
mov
add
adc
hlt
cltd
call
sbb
mov
rolb
jmp
insl
push
mov
add
push
cwtl
pop
push
add
add
jb
rorb
mov
sarb
pop
in
adc
and
mov
fmuls
cld
xor
das
jne
and
movsb
out
pop
add
pop
and
jecxz
hlt
xchg
inc
xor
aaa
shrl
mulb
or
cmp
das
call
aas
les
fmuls
cltd
fs
add
xor
test
enter
test
or
aam
and
sbb
xchg
jnp
push
xor
mov
push
jecxz
les
rcrl
mov
stc
jbe
add
adc
inc
fildll
lret
scas
mov
addb
cs
test
adc
aam
imul
inc
pop
test
xchg
pop
call
or
adc
aam
push
jge
xchg
scas
sbb
testb
ret
adc
fucomp
stos
leave
dec
sub
out
hlt
mov
mov
pop
pop
test
cmc
cs
and
ret
mov
imul
cltd
insl
shlb
and
call
ss
and
push
fdivr
push
fdiv
xor
test
arpl
sbb
sub
pop
mov
in
and
mov
inc
sub
jb
pop
xchg
mov
dec
adc
mov
cmpsb
loope
movl
inc
jno
inc
arpl
test
push
ficompl
push
scas
arpl
push
pop
inc
testl
pop
lcall
inc
xchg
pop
pop
inc
bound
push
dec
les
ror
jae
push
stos
mov
fsubrs
andl
out
insb
add
inc
lock
xchg
test
pop
xchg
gs
xor
daa
xor
push
test
add
outsb
dec
cld
js
jp
mov
add
cli
lret
pop
mov
inc
in
js
pop
stos
loop
cmp
cvtpi2ps
pop
das
stos
subb
and
add
pusha
fcmovnu
jle
outsl
fnsave
inc
call
add
xor
stc
ret
push
imul
adc
sub
dec
adc
repnz
stos
loope
imul
push
xor
adc
xor
xchg
sbb
add
push
pop
mov
sbb
lret
call
xor
push
rol
sbb
jb
push
mov
or
push
stos
jae
insl
dec
mov
dec
mov
inc
lods
mov
xchg
fcoms
cmp
mov
adc
mov
dec
pop
pop
sarl
icebp
mov
lods
lahf
loopne
pop
add
xor
push
sub
arpl
shr
push
dec
mov
push
subl
jnp
pop
fcoms
idivl
sub
daa
ds
mov
shlb
mov
out
mov
cli
clc
push
cmp
roll
add
push
insl
add
inc
les
iret
inc
sbb
mov
call
fcmovnu
mov
notb
imul
jne
int3
push
and
push
inc
dec
int3
gs
or
popf
dec
xor
mov
and
dec
test
pop
jno
mov
jecxz
push
adc
imulb
jl
out
jp
cwtl
xchg
imul
dec
lea
les
cmp
push
ja
shlb
xchg
loop
cld
adc
mov
jmp
mov
pop
popf
enter
dec
add
dec
pop
and
outsb
inc
lods
cs
inc
sti
jl
jae
dec
loop
pop
cs
or
imul
jns
outsl
testb
cmpsl
loope
les
out
add
aad
lods
push
inc
fidivrs
fisubrs
subl
shl
imull
add
xor
mov
add
ret
loope
jecxz
outsb
dec
pop
xor
cli
bnd
es
cmc
shrl
mov
jl
ffree
fs
sub
add
dec
adc
imull
addr16
gs
push
mov
inc
fstpt
xor
pop
ja
aas
in
popa
xlat
psrad
xchg
stos
push
mov
imul
inc
mov
mov
out
dec
mov
and
jmp
push
sub
dec
dec
mov
xor
push
push
lods
test
into
fs
outsl
test
add
insb
cld
pop
stos
mov
arpl
pop
inc
mov
rcrb
xchg
cmpsb
cmp
in
push
andl
testl
test
imul
dec
add
adc
pushf
cli
lock
bound
lahf
jmp
in
mov
sub
subb
push
loop
clc
ljmp
sub
or
xor
addl
es
cmp
mov
out
fs
sbb
xor
push
xlat
xor
leave
bound
cmp
rorl
sub
jne
sub
mov
push
shl
or
inc
sbbl
stc
mov
movsl
sbb
adc
pop
out
pop
cmp
fsub
ds
adc
jno
clc
insl
aam
fistps
call
inc
adc
xchg
sbb
jnp,pn
lds
xorb
add
negl
push
pusha
ret
jle
sti
mov
dec
cli
insl
fucom
jmp
lahf
test
cltd
cmpsl
je
jecxz
and
mov
xlat
jp
mov
inc
push
mov
jnp
cmpl
pop
sbb
or
ret
sub
cmp
jo
xor
mov
mov
adc
jg
jnp
daa
inc
shlb
adc
lea
imul
insb
mov
es
insl
outsb
sub
lret
cld
aas
dec
loopne
fwait
mov
inc
and
fnstenv
leave
sarl
mov
pop
sub
movsl
adc
ss
xchg
push
push
push
or
data16
xor
mov
adc
adc
jmp
sub
jmp
and
lcall
xchg
imul
jp
fdivp
jo
sar
xchg
insb
sbbb
cpuid
cmc
adc
dec
loopne
sub
add
mov
je
cmp
xsaves
inc
mov
push
add
mov
out
lahf
cmp
arpl
je
or
es
subl
inc
adc
push
cld
sarb
push
loope
fs
push
scas
test
repz
jle
mov
xor
inc
fwait
and
push
inc
ja
outsl
sub
pop
xchg
xchg
mov
mov
test
repz
stos
les
cmpsl
ljmp
shll
adc
les
xor
cmp
lcall
sub
or
aad
lret
mov
xor
xor
or
add
xchg
sub
add
cmc
mov
std
sub
adc
xchg
cmp
mov
cmc
push
add
xchg
and
mov
ret
hlt
daa
or
mov
ljmp
mov
sbb
fcmovnb
mov
mov
push
mov
imul
jle
daa
jnp
jmp
subl
outsb
sarl
xchg
sti
cmp
out
mov
add
inc
es
cmp
cmpb
mov
in
cmpb
out
sub
and
shrl
out
xchg
mov
inc
dec
jecxz
mov
push
pop
sbb
aam
cs
mov
dec
xchg
movsl
popa
pop
rcrb
dec
pop
dec
xor
mov
loopne
jg
das
ja
dec
aaa
inc
fbld
xor
idivl
add
int
push
movsb
stc
or
inc
dec
xor
xchg
fldenv
movsb
inc
cmp
mov
lret
js
cmp
shlb
pop
lock
pop
cmp
cli
pushf
imul
dec
test
or
jl
call
xchg
inc
btr
mov
mov
outsl
sub
xlat
icebp
adc
push
add
jmp
iret
fnstenv
or
mov
xor
ds
pop
xor
lcall
fisubrs
xchg
subl
inc
sbb
add
xor
sub
xchg
mov
and
test
shlb
add
jle
stos
iret
jg
sub
shl
push
jmp
add
cmp
dec
lahf
scas
ja
or
out
scas
xor
adc
push
mov
mov
icebp
mov
pop
mov
movsl
xchg
pop
mov
mov
test
sub
int
dec
jmp
inc
addr16
int3
dec
mov
repz
pop
cmc
cmp
pop
jl
nop
loope
xchg
inc
aad
mov
sbb
adc
cmp
jl
iret
fnstenv
popf
pop
icebp
ret
add
fimuls
sbb
mov
mov
add
xor
mov
jbe
mov
bound
and
subl
out
dec
roll
negl
call
daa
rorb
push
cmc
adc
out
adc
pop
cmp
xor
mov
std
xor
adc
shlb
xchg
andl
clc
imul
adc
xchg
xchg
stos
xor
pushl
inc
test
push
pop
imul
dec
gs
mov
js
push
or
mov
jns
push
jnp
pushf
out
rcrb
pop
ret
scas
xor
in
cmpb
sub
push
xchg
xchg
sub
push
mov
xor
pusha
sbb
cmp
insb
outsb
in
sbb
cmp
shrl
or
in
add
mov
inc
inc
rolb
aas
fcompl
cmp
jecxz
dec
repnz
inc
insl
test
pop
pop
add
mov
ds
xchg
jmp
mov
ja
mov
xor
mov
add
pusha
scas
mov
out
push
jp
or
scas
jge
fisubrl
sti
mov
icebp
jno
jnp
insl
scas
test
and
lret
out
sbb
push
add
sbb
test
nop
and
push
adc
enter
in
cmp
cmp
mulb
pop
repnz
add
cltd
cmpsl
jb
pushf
and
and
push
mov
ret
dec
ror
cltd
imul
dec
or
jne
ljmp
mov
iret
xor
shl
add
outsb
cmp
mov
in
test
mov
mov
outsb
ja
mov
in
jmp
pop
adc
push
pop
aaa
mov
push
fidivl
nop
daa
mov
fidivrs
out
insb
mov
xchg
scas
cmp
sar
xchg
ja
xorl
push
movsl
push
in
add
inc
sub
and
push
lock
xchg
mov
sarl
leave
and
xchg
mov
popa
jg
pop
adc
mov
mov
inc
rorl
std
sbb
fnsave
pushf
dec
xor
xchg
pop
mov
ret
out
js
jb
sub
mov
jp
mov
mov
clc
faddl
mov
or
or
mov
icebp
or
fisubl
jno
push
cmp
sub
pop
shll
mov
push
ljmp
mov
push
dec
inc
ficoml
in
je,pt
into
movsl
pop
fwait
and
xchg
pop
cmp
outsl
sub
mov
jbe
sub
les
mov
pop
loope
ret
xchg
fwait
out
sar
jp
dec
std
or
xor
icebp
pusha
daa
rorb
idivl
jmp
fs
sub
xchg
xor
inc
jl
lahf
repnz
mov
rorl
es
sahf
dec
adc
and
pushf
lret
sahf
in
pop
and
test
add
shlb
inc
in
inc
push
inc
jmp
fs
lods
inc
sub
push
into
xor
das
sub
mov
dec
mov
pop
mov
sbb
push
cmp
xchg
xor
cs
stc
pop
repnz
stc
inc
imul
dec
jbe
sbb
xlat
sbb
jns
test
jl
or
movsb
adc
or
dec
iret
push
cmpsl
ds
fsubr
sbb
cmp
lea
jbe
sub
sub
fs
and
inc
outsl
lods
aad
push
xchg
or
out
mov
jne
test
jmp
mov
inc
out
jb
adc
mov
adc
push
clc
jae
dec
jb
mov
fdivp
add
mov
add
xor
or
xlat
shll
lock
mulps
stos
sahf
push
mov
scas
or
fidivl
es
pushf
push
push
inc
lret
push
inc
repz
shrb
stc
pop
clc
cmpsl
dec
inc
sub
cmp
gs
pop
pop
cld
cltd
pop
cwtl
cmp
rep
out
mov
aad
loope
fsubrs
xor
sbb
imul
icebp
jb
out
daa
dec
sub
icebp
push
and
xlat
bound
xchg
xchg
daa
mov
xor
cmpsl
cmc
mov
or
in
out
mov
sub
adc
lahf
je
cmpsl
out
adc
leave
cwtl
pop
andl
stos
xor
sub
push
mov
xor
inc
pop
scas
mov
jns
shll
pop
movsb
dec
xchg
pop
lahf
repnz
fwait
jle
out
xchg
sbb
int3
pop
xor
xchg
sub
adc
push
xor
xor
mov
and
mov
fisubl
dec
repz
dec
jo
push
cld
adc
sub
dec
cwtl
aaa
pushf
testl
mov
loope
xor
add
ror
and
mov
popf
mov
xchg
sbb
mov
cmp
pop
dec
call
jl
pushf
into
outsb
or
repz
push
mov
cld
jmp
fcmovnbe
push
scas
repnz
jbe
xor
es
cmp
cmp
in
popa
fsts
push
pop
xchg
sub
ss
xchg
inc
int
mov
sbb
negb
popa
nop
dec
mov
fdivr
fs
in
stos
rcll
push
or
lock
clc
pop
inc
movsl
jno
dec
ffreep
or
lods
mov
mov
jp
addr16
fidivs
orb
mov
pop
sahf
mov
ret
insl
jo
adc
xor
jg
or
mov
fsubrl
jecxz
dec
shlb
les
xor
mov
xchg
imul
mov
cmp
dec
jmp
sbb
sar
cli
cmp
sbb
adc
sbb
andl
xchg
fmuls
hlt
push
je
mov
mov
jae,pn
dec
movsl
dec
xor
dec
pop
pop
mov
xor
sbb
adc
cmp
mov
xor
sbbb
imul
out
xchg
pop
stos
mov
sti
cmp
in
data16
inc
lret
in
stc
pop
dec
push
ds
add
mov
mov
cmp
push
pop
inc
call
cmc
jle
and
pop
test
mov
insl
nop
popf
insb
sbb
shlb
das
in
push
outsl
sub
stos
inc
inc
hlt
mov
mov
push
lods
inc
xchg
movsb
aas
fcmovnu
mov
xchg
aam
mov
fldt
jg
and
sbb
and
and
mov
ficomps
fnstenv
xchg
pop
add
inc
cld
cmp
popf
and
xchg
mov
aas
add
cmpsl
mov
gs
xchg
mov
mov
jb
incb
gs
xchg
lret
lret
test
sub
pop
mov
lret
jle
popf
add
iret
aaa
add
pusha
xor
pop
sahf
lret
mov
xlat
js
push
sub
jae
pop
sbb
in
aad
cmp
dec
and
fisubrl
push
pop
cmp
mov
xchg
mov
dec
leave
clc
sti
jb
mov
sub
insl
or
repnz
adc
cld
ja
push
es
pusha
xor
in
jnp
push
pop
jge
push
js
sahf
movsl
sbb
cmp
mov
fisubrs
dec
loop
or
imul
cmp
push
cmp
movsl
pop
pop
cmp
dec
jae
or
test
push
aaa
into
andl
in
in
out
lret
or
and
in
ss
shrb
lret
bound
lret
idivl
cwtl
sub
arpl
pop
sub
inc
les
aam
sub
or
mov
aad
je
dec
lds
sti
pushf
scas
frstor
push
dec
out
inc
idivb
lods
fst
sub
mov
or
or
cli
and
cld
std
or
test
jno
cmp
mov
lods
mov
das
dec
jge
cli
adc
orb
fdiv
out
pop
sbb
dec
sar
pusha
mov
call
dec
cmp
enter
subb
jle
xor
mov
std
outsl
mov
inc
fdivrl
iret
out
out
fsub
or
loopne
inc
stc
xor
push
mov
imul
sub
add
leave
pop
or
sub
loopne
cmp
sbb
pop
and
jmp
imul
jo
xor
add
pop
mov
daa
aas
sbb
adc
ljmp
sti
jo
sub
lds
ljmp
mov
arpl
xor
roll
ret
cli
in
call
adc
xor
sarl
sub
push
jb
add
in
add
or
adc
repz
mov
ljmp
sub
inc
and
cmp
inc
lahf
out
in
add
mov
jecxz
xlat
aaa
xchg
sub
ja
mov
jno
mov
sub
or
test
push
aaa
pop
adc
jnp
das
pop
call
xor
stos
mov
jns,pt
pop
ss
push
sbb
add
dec
or
sub
cmpsb
ds
inc
and
movsl
pop
push
jle
mov
mov
sbb
dec
loopne
mov
ret
mov
jb
pop
test
ds
push
xchg
mov
cmp
xchg
mov
dec
fadd
push
push
in
aas
pop
fists
in
rorl
sbb
daa
inc
push
aad
sub
xchg
mov
je
pop
inc
in
mov
call
out
lahf
loop
nop
popf
popa
jns
nop
or
pop
loope
xchg
lds
dec
mov
fwait
mov
rcrl
add
sub
adc
int
icebp
gs
pop
adc
mov
ror
dec
pop
push
loopne
xor
xor
inc
mov
jecxz
xchg
rol
es
adc
pop
xor
jmp
cli
dec
in
pop
push
imul
aam
push
shll
subl
mov
push
pusha
loop
fwait
pushl
arpl
insb
cmp
jmp
adcl
mov
movsl
jnp
loop
ret
dec
jecxz
mov
sbb
shll
repz
dec
test
cmp
insl
popf
pop
sbb
addb
add
mov
jo
jge
or
jae
outsl
lds
dec
and
adc
les
mov
fldpi
divl
popf
jne
add
xchg
mov
sbbb
cmp
jne
cmp
pop
push
mov
or
aas
or
jle
stc
movsl
inc
test
cmc
jg
push
aaa
pop
push
add
or
add
and
sahf
ss
xchg
mov
add
test
sbb
outsl
mov
rcl
xor
inc
mov
jns
jnp
push
dec
jl
adc
cmpsl
push
mov
rol
ja
dec
pop
mov
into
enter
cwtl
stc
pushf
inc
push
mov
xchg
push
add
mov
lret
xor
fisttpl
mov
push
icebp
mov
xchg
fcmovne
enter
mov
repnz
mov
pop
or
in
loop
faddl
aad
pop
mov
lret
jae
xor
inc
mov
push
push
ljmp
and
sbb
das
add
pop
into
outsb
adc
in
test
out
cmp
das
and
lea
adcl
or
jnp
js
push
and
pop
ljmp
push
push
shr
test
mov
insb
lea
inc
jo
cmp
setne
dec
add
push
push
pushf
xor
sub
cmc
sub
aaa
into
pop
wrmsr
das
hlt
pop
sub
mov
jg
dec
out
test
orl
rolb
stos
jno
push
mov
mov
add
enter
mov
divl
cmp
pusha
xorb
movsl
popf
dec
fiaddl
ss
mov
or
cmpsb
cmp
lahf
stc
inc
fsubl
sbb
adc
add
sbb
bnd
xor
mov
fisttpll
stos
mov
push
lods
jbe
fidivs
vfnmsub231ps
dec
mov
je
sbb
rolb
addb
ret
pop
dec
xchg
push
mov
mov
xchg
and
jbe
out
test
test
and
rorb
call
jle
outsl
push
xor
lods
mov
sbb
mov
iret
adc
enter
lds
jnp
push
jmp
mov
fnstcw
jb
jmp
fs
int
push
mov
shlb
shll
popa
cwtl
mov
test
add
out
bound
sbb
pop
dec
pushf
decb
arpl
pop
in
sub
xor
cltd
popa
std
or
xor
pop
mov
adc
jle
inc
scas
ss
sub
pushl
ret
lcall
and
xchg
mov
out
cmpl
inc
mov
xor
in
das
test
ret
sub
insb
push
inc
hlt
xchg
sub
mov
fistpll
repnz
ftst
stc
xor
dec
pop
mov
dec
dec
sbb
daa
mov
add
xor
dec
movsb
xor
fs
add
mov
and
jle
aad
xchg
mov
dec
or
and
out
sbb
adc
mov
in
fsubs
cli
sub
sub
sbb
sbb
push
jns
mov
insb
jge
orb
push
stos
adc
adc
jp
jl
lcall
in
and
jecxz
fidivrl
push
or
adc
lods
lret
stos
or
adc
rcr
and
mov
fidivs
cmpb
mov
fnstenv
sahf
dec
idivl
push
sbb
cli
sub
push
sbb
mov
out
xor
imul
push
push
jmp
push
arpl
insb
es
inc
lret
mov
imul
mov
mov
call
cmp
jnp
cmp
rcrb
dec
pop
mov
ljmp
or
mov
adcb
cld
mov
jp
jbe
mov
sbb
sub
test
cmp
jb
xor
movsb
pop
mov
pusha
mov
das
push
inc
fstpl
insl
shlb
cmp
xchg
sbb
ds
bound
and
pop
dec
xchg
in
stos
pop
pop
gs
mov
lea
mov
or
cmpsb
jb
mov
sbb
sbb
and
shrb
inc
stos
add
lahf
mov
rcrl
rcrb
or
dec
cmc
enter
jl
cmp
adc
test
pop
rolb
in
adc
icebp
inc
add
xchg
sbb
cmpsb
icebp
adc
inc
int3
shl
in
push
stos
scas
pop
fwait
push
pop
cld
arpl
xchg
inc
pop
dec
mov
stc
jmp
sbbb
shrb
sub
icebp
xor
inc
fsubrs
cwtl
lods
out
es
xor
les
pop
pop
xor
andb
add
cmpsb
rclb
jae
ficomps
and
dec
fisubrl
jle
sbbb
call
repz
pop
in
push
mov
dec
ret
mov
aam
sbb
jbe
sub
test
pushf
xchg
cli
dec
mov
jl
mov
push
xor
jnp
lods
dec
mov
mov
push
or
daa
mov
pop
mov
hlt
test
shrl
stos
imull
jle
xchg
lock
clc
pop
cltd
sub
out
loope
or
in
out
cli
loopne
jp
sbb
mov
stos
mov
inc
loop
mov
shll
in
adc
pop
inc
or
fnstcw
adc
aaa
cmp
mov
lods
clc
inc
cmc
pop
js
inc
mov
cs
in
sbb
jbe
imulb
stos
and
pop
sbb
sbb
pop
rorb
loop
add
test
jae
dec
sub
push
repz
in
cmp
jmp
inc
xchg
ficoml
les
xlat
insl
xchg
xchg
mov
das
hlt
or
dec
xchg
jne
test
mov
lret
and
pop
fnstenv
ret
fbstp
es
xor
aad
xchg
pop
lahf
inc
sbb
inc
jmp
cmp
cmp
and
jnp
repnz
test
out
and
bound
cld
das
test
fdivrs
push
sub
imull
xchg
sub
push
or
push
outsl
jb
popf
pop
insb
fnstenv
test
jge
jnp
lcall
jmp
jl
cltd
jmp
or
pop
sbb
inc
xor
loopne
fwait
cmp
or
in
and
push
ret
cmpsb
in
jecxz
and
xor
out
es
scas
loopne
insl
rcr
adc
sbb
dec
mov
add
rcrb
adc
sub
cmp
push
cs
fsubrl
jmp
stos
std
push
nop
adc
or
cltd
je
in
repnz
in
mov
push
stos
inc
mov
dec
mov
and
int
in
data16
rorl
dec
aaa
fisttpll
push
orb
jl
mov
fbld
jge
ja
ss
jns
das
jmp
mov
mov
dec
out
push
movsl
cmp
fidivrl
push
fists
sahf
out
fs
out
add
sti
xor
inc
fldl
decl
data16
mov
loope
xor
sub
rolb
sub
cmp
cmpb
xchg
pop
std
addr16
sahf
mov
add
stc
mov
faddl
lock
jno
fdiv
popl
dec
std
mov
test
sbb
pop
dec
fldcw
aam
filds
sub
repnz
cltd
subl
mov
sti
nop
adc
jmp
add
xchg
les
movsb
cs
jge
jecxz
push
mov
xchg
mov
mov
in
int3
add
mov
fsubp
pop
les
mov
cmpsb
push
pop
xlat
push
push
aaa
lods
subb
in
pop
sbb
xchg
popf
lock
fsubr
or
sbb
sub
jno
mov
inc
mov
fs
push
in
addl
xchg
sbb
imul
cld
cltd
imul
lret
sbbl
push
inc
clc
arpl
adc
and
mov
fists
mov
mov
xchg
jb
testl
das
jle
dec
xor
dec
jmp
sbbl
ret
jge
add
jle
jp
dec
mov
xchg
andl
out
or
xchg
add
out
bound
sbb
pop
lods
cmp
lea
push
inc
negl
scas
ds
push
fwait
bound
adc
inc
sahf
jbe
jmp
stos
and
jg
pushf
xchg
lcall
add
pop
xor
ljmp
adc
mov
jmp
rcll
mov
xlat
push
scas
sbb
jp
cmp
test
xchg
ljmp
les
dec
loopne
popf
mov
push
jnp
mov
fldl
jb
fcmovu
loope
jg
mov
movsl
jne
faddl
dec
ss
mov
xor
mov
pusha
push
inc
pop
lds
cs
mov
ds
pop
push
pop
inc
fisttpl
sub
pop
cmp
adc
and
arpl
or
repz
nop
dec
in
inc
sar
movsb
mov
jmp
scas
inc
add
std
out
xchg
inc
push
sahf
inc
xchg
dec
xchg
sti
rolb
cmp
imul
or
jl
fisubl
incb
cmp
or
pop
scas
xchg
or
lock
in
or
or
push
in
xor
xchg
jge
jae
outsb
adc
push
test
notl
lds
outsb
mov
cmp
scas
test
mov
and
mov
mov
mov
jns
xchg
or
sti
xchg
stos
jle
out
int3
sbb
jp
ds
incl
xlat
repnz
sub
mov
push
or
inc
push
xacquire
push
or
pop
loopne
cmp
loopne
pop
popf
aad
sub
pop
and
jo
sbb
cld
cmpsb
int3
lret
test
lret
mov
movsb
clc
push
insb
cmpsl
adc
iret
jno
cmp
xchg
lods
adc
jns
repz
mov
mov
into
fiaddl
fnsave
jg
mov
fwait
mov
imul
pop
sbb
push
add
or
mov
jp
nop
mov
out
jnp
rclw
add
pop
int
jae
roll
nop
pop
daa
lcall
inc
sbb
ja
xchg
fdivr
rcrl
repz
mov
adc
aas
push
lods
pop
add
dec
xor
fidivl
or
dec
mov
dec
cmp
jl
mov
fnstcw
push
mov
jno
packuswb
mov
mov
cli
xor
je
adc
ss
cmp
pop
sti
sahf
jmp
in
loopne
mov
rol
jns
pop
idivb
jmp
push
pop
stos
mov
sbb
mov
loopne
adc
pop
nop
sub
inc
pop
mov
mov
clc
adc
bnd
ja
mov
lahf
inc
mov
xchg
data16
sbb
add
xor
push
sahf
popf
or
mov
adc
test
addr16
aaa
into
movb
clc
lods
mov
scas
xchg
dec
and
lock
cmp
test
stos
inc
mov
in
in
popf
xor
je,pn
dec
jge
push
insl
out
pop
sti
jne
jl
mov
sbb
lds
mov
mov
jb
mov
mov
fcmove
mov
add
inc
adc
loopw
push
mov
xor
pop
push
cmp
push
aas
inc
push
out
sbb
mov
cmp
inc
lcall
add
mov
fadd
mov
sbb
std
dec
cmpsb
stos
movsl
inc
push
cmp
pop
ja
hlt
pop
popf
mov
cltd
aas
dec
sti
pushf
leave
aaa
xor
je
jmp
jle
lods
mov
lret
insb
add
mov
xor
xor
loope
inc
push
inc
mov
jne
pop
outsl
inc
or
jecxz
push
push
stc
mov
mov
fiaddl
lahf
pop
test
jne
mov
jecxz
fsubrs
and
xchg
in
xchg
and
cmpsb
daa
aas
inc
push
repnz
adc
cmp
scas
loop
push
jge
mov
add
movsl
push
push
sub
push
mov
adc
int3
icebp
call
hlt
daa
push
jae
pop
or
aad
mov
sbb
gs
int
out
cmp
js
xor
popf
xor
cmpsl
popf
jmp
call
outsb
push
rcrl
hlt
jl
and
leave
push
xorl
or
fs
sti
in
adc
leave
inc
and
push
test
adc
out
adc
xlat
dec
mov
cmp
push
mov
add
cltd
divb
cmp
mov
inc
cwtl
out
mov
mov
jo
ss
xchg
mov
ret
enter
mov
jl
mov
sbb
or
pop
xor
jle
out
decb
popa
mov
pop
arpl
js
or
cmp
mov
mov
sub
clc
dec
imul
mov
xor
stos
xchg
xor
bound
xchg
out
fs
mov
lods
mov
fdivp
icebp
adc
addr16
sub
mov
mov
shll
inc
shll
popa
inc
fcoml
ss
inc
aaa
mov
mov
pushf
dec
pop
add
arpl
cs
xchg
sub
pop
xchg
jb
ss
sahf
mov
pop
mov
pushf
jns
rcrb
test
stos
notb
repz
fsts
xchg
sub
roll
or
or
movsb
xchg
mov
dec
cs
push
jle
lds
out
pop
sbb
and
mov
je
std
sub
ret
sub
orb
mov
filds
push
pop
sbb
mov
sbb
xchg
xchg
and
xchg
aaa
ja
movsb
cmp
jns
fistl
xor
push
fsts
and
push
xchg
es
xchg
inc
in
mov
dec
add
call
iret
mov
leave
mov
outsb
or
hlt
or
in
clc
stos
add
and
enter
incb
test
cwtl
out
mov
xchg
lcall
mov
pop
cmp
xchg
jmp
movsb
add
lods
pop
leave
mov
sbb
sbb
stc
cmp
js
notb
and
or
and
jl
adc
jle
add
or
xor
inc
or
jb
fwait
das
hlt
fs
clc
pop
or
imul
cs
fyl2xp1
loope
cmpsb
cmp
jmp
mov
test
mov
mov
push
insb
rol
mov
mov
sbb
bound
loopne
dec
xchg
sub
cltd
je
cmp
mov
cmc
and
mov
cwtl
mov
mov
pop
outsl
popa
jp
popf
fnstcw
mov
aaa
xchg
dec
lods
mov
fsts
in
jns
cld
out
sti
and
popa
jns
ds
inc
mov
mov
add
xchg
lret
xchg
das
mov
divb
subb
cwtl
xor
inc
mov
or
xlat
mov
pop
test
pop
cmpsb
aam
lds
add
test
lods
or
cwtl
ss
adcl
arpl
xchg
dec
imul
lods
push
push
mov
fidivrl
loop
loop
cmp
dec
mov
pop
jb
mov
lcall
mov
mov
out
sti
adcl
sub
js
sbb
negb
push
xchg
scas
mov
xchg
fimull
jo
add
cmp
test
xchg
mov
mov
inc
and
sub
xor
sarl
loope
add
je
rcl
xorb
inc
rcr
mov
stc
mov
psrlw
mov
mov
cmpsl
sbbb
sub
test
dec
sbb
loop
iret
and
push
jb
cld
xchg
cmp
mov
imulb
dec
cmp
dec
nop
adc
in
fistl
popa
jae
sub
xlat
sbb
xor
push
aam
xchg
mov
or
cmp
loopne
into
repnz
sub
xchg
imul
sbb
ret
adc
mov
xchg
xor
cmpsl
ds
xchg
inc
in
arpl
imul
lds
scas
cmp
cwtl
mov
push
dec
cwtl
xor
pop
mov
outsb
inc
mov
push
cltd
test
pop
jb
inc
adc
push
insb
adc
insb
jae
mov
insl
cmp
insb
xor
mov
sarl
mov
cmp
jnp
jmp
inc
and
push
dec
cwtl
pop
mov
sub
mov
out
fwait
shlb
xchg
mov
aam
push
push
sbb
ficoml
mov
jp
push
pop
out
xchg
test
test
sub
and
sarl
das
clc
sbb
inc
cltd
lock
mov
mov
scas
fiaddl
xchg
shlb
jno
pop
jne
xchg
insb
jae
jb
data16
sub
bound
mov
push
sbb
dec
and
dec
es
scas
jnp
pop
vmovups
pop
adc
in
mov
hlt
clc
push
int
stos
js
mov
lret
mov
jno
mov
push
mov
push
pop
mov
adc
cld
or
pop
push
pop
fistpl
icebp
popa
mov
xor
mov
fwait
mov
cltd
mov
mov
ret
mov
adc
idiv
sbbl
int3
push
xchg
ret
repz
jl
mov
sbb
scas
mov
sahf
or
xlat
pushf
mov
repz
add
insl
adc
mov
push
xchg
mov
cmp
sti
out
sbb
mov
jp
fisubl
rcll
mov
push
and
into
xchg
cmp
sbb
ja
fwait
test
js
out
repz
in
call
loopne
and
mov
mov
test
sbb
push
imul
test
enter
mov
aas
dec
negl
je
ret
jns
cld
aas
sbb
mov
insb
jnp
loopne
add
test
mov
les
addr16
push
inc
jae
xchg
leave
into
push
sub
add
xchg
push
sti
arpl
cmp
sbb
and
adc
cmc
rorl
cmp
dec
sub
leave
mov
cli
ds
lds
push
leave
fwait
outsl
ret
cmp
scas
xchg
loopne
add
popa
shll
cwtl
fldl2t
mov
cli
mov
orb
test
cwtl
push
sbb
aaa
std
repz
inc
mov
nop
aad
jns
ret
in
xchg
ss
sti
mov
lret
mov
mov
leave
ja
xchg
xchg
xchg
dec
sub
mov
icebp
adc
pop
imul
out
divb
push
xor
inc
mov
ss
fidivs
inc
or
inc
mov
fmul
cs
add
pop
shll
les
aad
pusha
pop
pop
and
pop
popf
and
xchg
xlat
bound
adcl
or
mov
loopne
mov
in
or
ss
in
mov
sub
js
jae
xchg
je
int3
movsb
push
repnz
addr16
pop
test
fistps
push
es
repnz
dec
cwtl
add
popa
cli
dec
movsb
movsb
jb
and
pop
xor
add
sti
inc
lods
jb
lret
sub
mov
sub
mov
rorl
out
add
sub
mov
les
iret
in
rcrl
ds
out
das
xchg
outsb
add
push
mov
aas
and
fs
stos
inc
xchg
push
ja
jmp
push
jno
or
loope
xchg
movsl
scas
add
xor
jg
push
add
dec
jo
repz
les
fisubl
adc
iret
xchg
fsubs
lods
call
mov
xchg
adc
jge,pn
mov
jmp
lret
jl
xchg
lds
test
in
int
leave
inc
ds
and
cli
add
mov
or
mov
nop
insb
aaa
add
scas
mov
lock
xlat
insl
fidivl
mov
and
xor
mov
clc
aad
sub
jne
outsl
int
aas
mov
push
mov
packssdw
xchg
cmpsl
out
mov
xchg
dec
and
mov
pop
lods
adc
inc
into
ret
fists
aas
and
popa
cmpsb
ss
cmp
jno
cld
inc
fcoms
pop
adc
and
sub
pop
dec
pop
daa
retw
iret
ret
dec
cmp
shrl
lret
adc
add
fisubs
pusha
aad
xor
iret
lods
adc
mov
mov
roll
int
mov
adc
lcall
cmp
pop
clc
dec
pop
repz
movsl
enter
mov
mov
and
mov
dec
pop
push
out
cmp
fstps
insb
test
out
cmc
or
lods
mov
add
andb
xor
fs
in
jb
lea
mov
rcrb
xor
jmp
jle
mov
sub
in
push
cmp
icebp
daa
outsl
inc
push
mov
pop
mov
cmpsb
cmp
pop
out
movsb
mov
mull
xlat
mov
popf
xor
into
repz
stos
leave
mov
sbb
enter
fmuls
pop
dec
xchg
test
lea
stos
xchg
sub
imul
ss
rorb
mov
xor
scas
mov
xor
mov
divb
mov
jne
jno
jo
test
jae
sbb
pop
sbb
cli
xchg
mov
ss
out
adcb
fcoml
nop
shl
outsb
pop
aaa
cwtl
in
in
jns
mov
mov
scas
arpl
js
add
sub
cmpsb
lods
pop
pushf
repz
insl
jmp
adc
ret
sarl
loop
inc
inc
sahf
cmp
ljmp
pop
mov
ds
push
movsl
sub
scas
jmp
xlat
inc
jno
pop
jl
scas
sub
pusha
sbb
ds
cmc
lret
xlat
and
push
cmp
inc
xchg
add
fnstsw
addr16
repz
cmpsl
mov
imul
jmp
repnz
faddl
dec
nop
sub
mov
add
push
loop
mov
xchg
and
gs
pop
pop
xchg
scas
rcll
xlat
movsl
loopne
ficoml
pop
mov
hlt
ljmp
ficompl
mov
stos
xor
sub
imul
aam
sub
loope
xlat
icebp
or
adc
fildl
gs
lahf
sahf
pop
fcomps
out
inc
jp
adc
mov
dec
and
dec
icebp
in
mov
inc
sub
insl
adc
push
daa
add
scas
pop
fisttpll
rol
mov
push
push
pop
mov
js
addr16
sets
ja
xchg
adc
inc
sbb
jecxz
movsb
mov
cmp
aaa
mov
mov
jp
cmp
insb
add
dec
in
cmp
adc
ret
pop
push
jmp
cmc
pop
iret
cmpsl
and
or
repz
cmpsb
adc
fwait
xchg
arpl
dec
pushf
cmp
pop
sub
cmp
lods
pop
out
fcmovu
inc
sahf
pop
in
mov
mov
lret
fwait
cs
xlat
and
sub
adc
outsl
repnz
mov
jp
test
arpl
inc
fs
rcll
and
mov
rcrl
sbb
cmpb
movsl
stc
hlt
jo
push
and
xchg
jl
js
jno
ja
mov
inc
cmp
lcall
lods
out
cli
pop
xor
jne
push
stc
jo
ja
shll
mov
in
sbb
in
leave
nop
push
outsl
cmp
lods
fstl
xor
mov
mov
mov
pop
mov
jge
xchg
imul
xor
cmp
mov
stos
add
cld
xor
sbb
fwait
insb
add
jp
mov
fimuls
test
negb
popa
pop
loopne
adc
and
mov
sbb
into
add
ds
inc
cmp
xor
movsl
decb
es
lea
and
mov
ljmp
jnp
mov
dec
inc
pop
mov
mov
xor
jecxz
pop
dec
sbb
stos
fbstp
jle
in
jecxz
dec
loopne
data16
frstor
pop
pop
cwtl
fisttpl
mov
mov
ds
test
popf
jo
cmp
testl
std
fstpt
sbb
push
pop
les
into
popa
mov
fucomi
test
int
dec
and
inc
xchg
jae
sti
pop
push
out
jmp
mov
test
stc
mov
pushl
fucomi
popa
mov
pop
pushf
inc
lcall
and
jbe
into
pop
pop
push
test
pop
xchg
mov
sbb
and
imul
push
mov
dec
dec
sbbl
stos
sbb
ss
and
or
testb
aam
pop
andl
push
clc
mov
xor
repz
mov
les
push
js
outsb
lods
add
mov
aas
out
inc
jo
loopne,pt
xchg
mov
nop
es
add
cmp
mov
cld
sbbb
xchg
pushf
inc
pop
lds
jg
xchg
or
dec
ds
pushf
cs
ret
fisubs
ja
dec
or
icebp
cld
jno
popf
test
gs
jb
dec
test
and
outsb
andl
mov
sub
lahf
jp
leave
ret
mov
stos
out
ljmp
inc
xor
jl
and
xchg
mov
out
rcrb
cmc
incb
jecxz
jl
xchg
xchg
mov
pxor
in
jg
add
outsb
mov
cltd
jl
sbb
ficompl
repnz
test
test
push
call
subl
push
sub
pop
xor
das
repz
popa
aad
push
adc
fwait
jle
lret
mov
dec
mov
mov
fistl
pop
outsb
ss
sub
sbb
rorb
in
xchg
adc
pop
xchg
pop
dec
shll
adcb
xchg
jp
popa
clc
dec
stos
pop
jle
out
push
ror
mov
sbb
in
mov
jb
shlb
lcall
enter
dec
loope
cmp
push
subb
imull
sub
pop
in
fadd
fldl2t
clc
roll
xor
stc
addb
fisttpll
mov
out
cmp
jno
das
pop
pop
lods
lods
lret
into
and
xor
iret
nop
mov
adc
iret
fdivrl
dec
insb
cld
xchg
lahf
popa
adc
push
xor
inc
outsb
daa
pop
cmc
orb
ret
mov
addl
push
pop
outsb
loope
cmp
imul
testb
cmpsb
mov
loop
fdivs
jmp
push
pop
xor
and
sti
xchg
cmp
inc
add
outsb
push
xor
dec
pop
push
imul
jecxz
mov
add
test
shrl
adc
out
popa
ja
lret
sub
push
enter
enter
jns
loopne
lret
scas
pop
jg
mov
dec
das
test
cwtl
imul
aam
inc
cli
aad
sub
std
jge
fsubrl
fidivrl
jo
test
or
sub
scas
pop
insb
nop
sahf
imul
movsl
or
jecxz
andl
subl
iret
cmpsb
mov
xchg
aad
sub
stos
out
je
scas
fcoml
push
test
xor
movb
jmp
sbb
inc
add
mov
xlat
out
mov
push
adc
out
bound
pop
andb
mov
push
pop
jle
inc
mov
jne
adc
push
adc
int3
pop
and
mov
pop
jg
lcall
arpl
sub
add
faddp
push
ret
mov
out
sub
lods
and
repnz
mov
in
and
jo
popa
cmc
lret
and
ret
pushf
add
jmp
rclb
mov
pmaddwd
adc
mov
sbb
jnp
les
pop
push
cld
stos
ret
fcom
adc
push
lods
mov
mov
cmc
pop
inc
xlat
or
orb
xor
imul
mov
and
in
sti
insb
popa
mov
enter
mov
pop
pop
adc
fnstenv
jo
mov
iret
pop
lods
inc
mov
dec
insb
das
lret
dec
cmp
clc
or
je
xchg
push
jnp
inc
pop
pop
xor
lret
pop
hlt
lock
pop
lock
aam
adc
enter
xchg
call
pop
mov
repnz
into
jmp
pop
xchg
jmp
pop
stos
and
push
cmpsl
ljmp
lret
cltd
ret
and
adc
mov
push
sub
repnz
dec
dec
movsl
cmp
xchg
testl
and
int
push
loopne
or
les
les
push
pop
dec
pop
scas
test
pushf
dec
incb
loope
mov
enter
adcl
mov
lds
call
add
fstps
push
mov
pusha
xchg
and
adc
sub
xchg
and
xchg
in
popf
cmp
dec
pop
mov
cmc
cmp
or
cmpb
adc
fistl
inc
fsubrs
out
mov
lea
leave
pusha
sbb
jg
xchg
xchg
inc
negl
idivb
mov
roll
divb
loop
adc
xor
cmc
sbb
sbb
test
sbb
mov
or
pop
lret
push
loopne
jmp
add
adc
sbb
jo
pop
add
stos
adc
imul
in
jno
test
jg
xor
dec
pop
dec
int3
ljmp
lcall
add
dec
cmp
popa
movsb
xchg
in
fildl
test
ja
cmpsb
xchg
adc
ret
xor
pushf
sbbl
xchg
leave
lds
rcrl
nop
imul
mov
xchg
sub
adc
push
cs
mov
outsb
incl
sbb
pop
pop
jnp
loop
xorl
inc
mov
bswap
out
adc
xchg
fisttps
cmpsb
push
fsubrs
push
in
clc
fldt
add
jg
pusha
aam
mov
pop
shld
push
jb
push
mov
das
mov
xchg
adc
add
lcall
or
push
lcall
sbb
adc
pop
loop
subl
arpl
jle
mov
fnstenv
adc
push
sub
repz
adc
in
mov
iret
lock
mov
adc
insb
mov
insl
xor
call
cmpsl
sub
repz
or
mov
outsl
jecxz
shl
adc
sarb
addl
push
cmp
icebp
mov
out
pop
push
mov
mov
in
inc
ret
and
pushf
jnp
nop
cwtl
add
ljmp
push
mov
lock
aam
out
lret
into
mov
xchg
jo
mov
into
subl
jle
mov
shl
jecxz
or
sub
out
lock
subb
in
jbe
hlt
mov
rolb
and
push
sahf
mov
jne
jmp
shr
dec
stos
fisubl
pop
sub
mov
sub
imul
xchg
add
dec
inc
jnp
aam
hlt
jb
mov
and
aaa
stos
jge
mov
push
lds
push
sub
inc
cmpsl
jbe,pt
loopne
xlat
scas
pop
fs
call
scas
mov
call
xchg
out
cmp
cmp
subb
sarl
inc
xchg
or
sahf
mov
dec
mov
jae
jmp
push
inc
xchg
sub
mov
bound
shrl
jb
add
ljmp
jb
jl
or
jl
iret
jae
in
or
sbb
out
pushf
repz
cltd
push
cmpb
xor
pop
mov
jnp
repz
mov
xchg
xor
daa
arpl
jmp
pop
lods
push
jno
jno
test
dec
les
loop
lock
cmp
mov
ja
arpl
and
test
decb
rolb
test
hlt
lods
scas
and
ss
fistpl
dec
cmp
cmp
outsb
push
xchg
out
shr
les
inc
cmp
mov
xchg
xchg
mov
call
xor
sub
jecxz
aaa
data16
addr16
push
jbe
incb
jae
jle
mov
fwait
movsb
push
push
pop
jne
std
or
insb
test
mov
movsb
xchg
jo
pop
or
int3
xchg
pop
ds
push
mov
sub
and
incl
sub
push
aaa
pop
rcrb
and
jl
or
xchg
daa
in
aad
sub
andb
and
rclb
cmpsl
add
mov
push
shrl
or
jg
mov
fiadds
mov
jbe
gs
sbb
popf
leave
mov
adc
int3
fisubrs
sbb
test
xchg
cmp
xor
xchg
out
push
or
and
cmpsl
push
montmul
cmpsb
test
arpl
sub
clc
lahf
stc
sbb
in
push
je
add
cmp
push
xchg
push
test
cmp
arpl
jb
pop
fsubs
fcoml
f2xm1
mov
sbbl
fdivs
sbb
insb
ja
out
sub
add
pusha
out
cmp
dec
filds
pop
inc
pop
add
mov
mov
pop
aad
mov
int
or
inc
sub
scas
mov
pushf
in
jecxz
fsubs
pop
xchg
ss
jecxz
lret
addr16
mov
paddb
jo
ret
jg
aad
pop
cmp
bndstx
shrl
imul
into
fdivrl
sbb
daa
dec
cld
insb
adcb
ljmp
arpl
aas
into
call
repz
mov
out
add
xor
dec
mov
xchg
push
sbb
mov
fs
mov
push
add
cmpsl
mov
jae
add
jno
and
jle
cmpsl
jnp
mov
or
scas
push
xor
and
aaa
cmp
push
pushf
test
aaa
dec
xchg
imul
adc
insl
or
test
and
jno
lret
int3
push
mov
pop
xchg
or
stos
inc
rcrb
inc
lahf
sarb
cmc
cmpsb
mov
xchg
or
inc
cmp
xchg
mov
loopew
icebp
or
out
inc
xchg
loope
jo
mov
jp
mov
mov
dec
sub
jl
rcr
push
vcvtsi2ssl
pop
lods
xchg
data16
jge
aam
fwait
cmp
loopne
ret
xchg
sarl
and
mov
inc
adc
out
les
fisubl
notl
into
ficomps
lds
out
nop
ret
cld
cmpsb
lret
sbb
mov
cmp
insb
jno
into
call
test
repnz
mov
adc
insb
fisttps
and
jp
mov
mov
shl
adc
pop
icebp
xor
xor
or
out
test
mov
mov
mov
lods
loop
ret
inc
xor
test
mov
insb
mov
lods
jo
outsl
xor
dec
push
jne
and
iret
test
mull
or
cmpsb
imul
jecxz
in
in
xlat
outsb
lret
loope
stc
loop
cmc
cmp
out
jae
xchg
jmp
das
or
cmp
lahf
testb
inc
xchg
repnz
sbb
clc
jbe
ret
pop
push
add
sbb
inc
cmc
cmp
mov
dec
push
and
mov
inc
ficompl
xor
fldt
push
leave
push
sbb
fldl
xlat
cmpb
int3
mov
sbb
xchg
jge
mov
jmp
mov
mov
out
xorb
ficompl
popf
push
out
push
pop
mov
ljmp
fbstp
push
and
das
pop
pop
adc
jl
lret
lods
test
cmp
cmpsb
sub
jl
cmp
mov
jno
sbb
out
lcall
fisubl
test
outsl
cld
lods
sbb
push
and
xchg
test
dec
sbb
or
dec
lock
xchg
and
lods
xor
nop
mov
fisubrs
mov
cmpsb
sbb
out
imul
cmp
imul
mov
add
mov
mov
mov
mov
jp
out
imulb
mov
cmp
mov
pop
popa
mov
add
aaa
xchg
xlat
mov
mov
stos
mov
jno
sub
pop
out
insb
rorl
shlb
add
sbb
fcoms
mov
push
sbb
xchg
mov
out
adc
shll
lea
arpl
xchg
sub
nop
movb
pop
jp
xor
dec
in
ja
jb,pt
dec
xlat
cmp
subb
int3
pop
lcall
jnp
insl
jo
xchg
xor
in
adc
add
ja
pop
sahf
imul
dec
aam
clc
push
pop
dec
xchg
testl
push
adc
xor
lcall
je
pop
xor
jmp
push
or
xchg
jo
in
sti
movsl
sbb
xchg
dec
test
lret
movsb
rcrl
cmpsl
push
cmp
dec
lea
xlat
jo
scas
movsb
lock
shrl
jl
push
inc
pop
out
fcomps
sub
dec
cmpxchg
leave
js
out
jle
in
fisubrl
add
dec
cmp
and
mov
lea
aaa
fmull
popa
xor
inc
xchg
in
mov
lea
add
and
add
mov
push
ss
and
add
test
or
or
sbbl
iret
xor
cmp
dec
mov
aas
daa
push
adc
push
jmp
mov
mov
iret
jecxz
subps
in
scas
mov
ljmp
mov
fcoms
stos
in
dec
adc
mov
jl
and
ljmp
shll
sbb
jo
sbb
jmp
and
mov
popa
cltd
sub
lret
and
std
and
arpl
into
ret
hlt
outsl
push
rorl
sbb
mov
pop
outsb
scas
ss
xor
fstps
insb
fldl2t
les
loopne
add
ret
stos
fmuls
test
sbb
shlb
into
ds
movsl
inc
notb
xchg
pop
and
push
pushf
and
aas
pop
in
jg
mov
out
xchg
rcrl
add
pop
fucomi
orb
idivl
mov
dec
daa
rclb
aaa
inc
repnz
xor
insl
mov
dec
add
mov
je
imull
jae
frstor
cmp
sbb
pop
add
cmp
adcb
insl
aam
aas
out
out
mov
adc
movsl
cli
adc
addb
sub
mov
gs
push
jbe
ss
cmpsl
mov
je
dec
insl
mov
mov
loopne
inc
add
cmp
bswap
ja
dec
or
or
insl
mov
adc
xor
sub
jns
xchg
fisubrl
mov
andb
push
out
add
test
icebp
push
or
sbb
enter
cld
shr
cmpsl
or
in
jp
stos
mov
pop
fs
ljmp
push
jmp
xchg
mov
pop
push
fwait
fwait
xlat
cmc
lret
or
bound
stos
dec
repnz
leave
jl
fimuls
sarb
mov
xchg
sbb
pop
adc
movsb
mov
in
fcoml
jp
imul
js
mov
fs
stc
mov
arpl
loope
cmp
sub
pop
fs
fs
iret
jecxz
pop
testl
ss
out
xchg
clc
test
jecxz
cmp
xor
xchg
fsubl
fsubs
insb
adc
inc
int3
hlt
movsl
cmp
mov
hlt
inc
sbb
inc
pop
pop
xor
mov
lcall
xchg
cld
outsl
repnz
push
jmp
iret
cmpsb
sub
lock
sub
adcl
or
mov
fneni(8087
cmp
std
sub
mov
or
dec
lea
push
or
movsb
repz
rol
sarb
out
push
ret
or
sbb
mov
test
mov
mov
or
jmp
loope
push
jbe
mov
into
lds
mov
in
bound
sbb
cmp
loopne
and
in
xchg
mov
jle
iret
mov
rorb
inc
pop
es
testl
add
pop
pop
ret
pop
outsb
xor
clc
jae
xor
jno
mov
mov
mov
loopne
lea
lods
outsl
mov
pop
shll
jp
out
cmp
sbb
lret
inc
cmpsb
cmp
call
test
cwtl
std
sbb
rorb
popf
pop
xchg
xchg
sbbb
cmp
pop
je
icebp
popa
lods
inc
cld
adc
aaa
shll
imul
jns
lea
ret
push
dec
mull
std
adc
stos
mov
and
mov
ja
out
cmp
outsl
lahf
push
adc
aam
fnsave
mov
xlat
sub
cmp
cmp
shr
lock
fidivrl
pop
sahf
or
push
scas
lcall
fnstenv
scas
fisttpll
pop
aaa
adc
push
iret
sbb
inc
data16
adc
xchg
scas
ja
stc
mov
fadds
mov
mov
scas
jbe
pop
test
loop
clc
and
cmpsb
mov
fs
fwait
mov
add
inc
test
fmuls
divl
scas
xchg
sub
out
bound
adc
dec
sub
xor
shlb
decb
pop
mov
aaa
dec
add
jne
shll
pop
or
repnz
test
xchg
cwtl
iret
data16
push
sub
test
stos
inc
mov
fcmovb
sub
xor
push
xchg
xchg
pop
xor
popa
cli
push
in
loopne
ja
sbb
inc
lahf
push
cmp
mov
subb
sub
add
xchg
aad
and
ficoms
js
icebp
gs
and
adc
test
dec
add
je
push
das
mov
inc
sub
nop
xchg
in
xchg
push
mov
cmp
insb
orl
notl
aam
dec
cmp
adc
jl
push
inc
cld
movsb
and
test
xchg
mov
xor
mov
mov
gs
out
xchg
mov
adc
push
popa
clc
add
ret
sbb
cld
inc
pop
cmp
scas
negl
inc
cli
stc
shr
sub
mov
sub
dec
shrb
lret
jp
out
xchg
xchg
cmp
mov
inc
pop
out
xor
cwtl
jmp
xor
cmp
das
iret
pop
sbb
out
jmp
shrb
jne
ljmp
imulb
fisttpl
sub
mov
mov
enter
outsl
jo
into
mov
cs
ret
in
jno
sbbl
xchg
out
xchg
jns
and
hlt
adc
jecxz
pop
adc
mov
rclb
or
jns
aas
cmp
divl
test
push
jnp
sbb
dec
aam
mov
icebp
icebp
inc
std
mov
push
mov
jae
or
nop
xchg
out
jg
testl
dec
and
jp
jnp
fwait
sub
inc
loope
push
sub
lds
loopne
orb
pop
stos
jns
data16
mov
movsb
shlb
lds
lods
outsb
lahf
pop
sahf
rorb
adc
test
and
adc
cmp
xchg
mov
es
lods
pop
outsb
push
clc
mov
push
enter
push
mov
jno
push
pop
lret
bound
sub
pop
shr
add
aad
add
pop
std
and
mov
stos
insb
xchg
notl
int3
pushf
aas
jmp
out
lret
mov
jmp
mov
dec
gs
scas
push
aam
mov
sub
adc
or
cli
dec
mov
mov
das
stos
in
pusha
xchg
ds
filds
push
pop
mov
test
xor
sti
inc
mov
cmp
mov
xchg
dec
rcl
mov
sbb
lcall
jecxz
pushf
dec
out
sbb
pop
icebp
push
push
pop
pusha
mov
in
xor
mov
or
loop
fcoms
xorb
cwtl
jns
pop
ljmp
jno
pop
xor
inc
and
bound
vpsllq
rcll
pop
sbbl
mov
sub
ss
scas
cli
fadds
or
and
stos
inc
cld
xchg
js
rorl
pop
arpl
mov
mov
loope
int
ficoml
pushf
adc
test
xchg
sub
dec
xchg
inc
cmp
fists
mov
mov
jnp
pop
cwtl
push
add
and
std
jno
push
ja
test
jmp
je
push
xor
std
test
xchg
mov
ror
mov
and
xchg
jg
leave
xor
mov
dec
loopne
fs
jb
repnz
sub
clc
nop
jo
mov
int3
fs
add
pop
mov
inc
fwait
xor
mov
scas
inc
mov
mov
mov
or
add
imul
fcomp
das
xchg
adc
cli
cmpsl
mov
out
mov
pop
jb
shll
jg
loop
add
mov
inc
pop
out
stc
lret
in
xchg
sub
dec
mov
pushf
lods
out
mov
push
xor
imul
adc
mov
sbb
lds
inc
inc
in
sahf
sub
imul
fcompl
mov
push
sbb
sbb
cld
or
xor
lcall
dec
push
aam
xchg
pop
daa
ret
pop
lea
mov
bound
xchg
adc
mov
dec
mov
cmp
cmpb
cmpsb
dec
rcl
mov
adc
xor
dec
sbb
and
xchg
push
mov
push
jo
lock
leave
mov
fsubs
movsb
mov
ja
outsl
ret
fisubs
mulb
and
jns
inc
ret
xchg
frstor
xor
popa
ds
push
sbb
or
imul
or
adc
movsb
xchg
inc
gs
cmp
lret
jl
lds
xor
jmp
jo
dec
jne
jnp
cwtl
inc
cwtl
ja
mov
lcall
data16
int
mov
imul
xchg
shrl
mov
rcll
in
xchg
mov
cmpsb
std
mov
movhlps
xchg
add
add
mov
sarl
xor
test
fwait
aad
xor
int
icebp
or
iret
outsl
in
mov
xor
in
push
and
movsl
call
test
aaa
lods
aam
push
add
rolb
test
stos
test
or
sub
stos
scas
outsl
jnp
or
xchg
mov
add
pop
out
jle
xlat
xorb
mov
in
test
fnstsw
dec
pop
and
inc
test
mov
adc
cltd
leave
or
add
adc
jno
lea
hlt
adc
xor
push
out
into
fdivs
xchg
scas
jo
orb
sbbl
aaa
jle
out
scas
pop
adc
fldt
das
fcompl
lahf
xor
sub
in
lock
mov
in
cmp
rclb
stos
test
cmpsl
imul
xchg
adc
add
decl
sbb
sbb
jmp
sbb
adc
nop
mov
into
insb
sub
pop
imul
cli
mov
cli
dec
call
int3
adc
jb
in
jl
stos
pop
addr16
jle
mov
test
rorl
cmc
mov
sbb
push
sub
aaa
add
iret
xor
dec
stos
aam
xchg
sub
xchg
or
addr16
int3
shll
fsubs
push
push
xchg
mov
movsb
mov
inc
sahf
decl
cmc
shlb
repz
jp
or
pop
sti
fwait
test
cmp
aad
rcll
lds
or
call
cld
cltd
jb
stos
jnp
repnz
xchg
out
enter
cs
fisubrs
call
pop
xor
sti
and
mov
mov
ja
testl
pop
or
pop
popf
imul
incb
lods
or
lcall
mov
fnstenv
sub
divl
xchg
loope
scas
sub
outsb
fwait
or
and
lret
mov
xchg
mov
pop
scas
mov
int
fs
jecxz
xor
cmpsl
arpl
or
fstps
je
and
in
add
sbb
inc
sbb
shlb
sbb
sbb
bound
aaa
adc
mov
sbb
mov
mov
out
and
cwtl
xchg
mov
cmp
addl
hlt
dec
and
push
cli
xchg
add
adc
mov
mov
int
pop
pop
pop
sahf
mov
and
ja
xchg
mov
mov
clc
mov
cmpsb
ss
add
out
pushf
out
push
scas
in
lea
jge
pop
mov
dec
mov
xor
adc
and
and
jl
xchg
sub
pop
mov
mov
jbe
imul
and
rorb
outsb
sub
adc
lea
nop
jmp
add
int3
out
sub
xor
in
xchg
adc
jl
loope
mov
sub
or
push
in
testl
inc
prefetchnta
jmp
and
pop
movsl
and
into
enter
js
sbb
bound
mov
and
and
pop
adc
cmp
addr16
into
fadd
mov
pop
std
sub
orl
sahf
xor
fs
mov
jmp
loopne
cmp
mov
cmp
push
outsb
fcoml
cmpsl
add
fidivrl
mov
daa
or
or
popf
ss
cmpsb
std
fildl
adc
add
or
or
mov
movsb
iret
mov
mov
cld
popa
mov
xor
push
add
push
jmp
and
push
test
or
mov
daa
and
idivb
aas
dec
popa
cmpsb
mov
aaa
mov
adc
xor
fidivrl
pop
xor
jge
push
stos
xchg
cmp
sub
fs
std
pop
jae
jae
add
jnp
mov
mov
xor
bound
cli
pusha
insl
stos
adc
cmp
mov
add
fwait
jne
adc
jge
xor
sbb
pop
mov
lea
inc
xchg
test
test
xchg
pop
jns
test
cmp
cmpsl
mov
stc
je
push
pusha
jp
lods
call
gs
mov
xchg
stos
inc
add
nopl
xor
shl
scas
mov
fstp
mov
mov
scas
les
mov
sbb
dec
sbb
loope
mov
adc
data16
mov
cmp
cmpsl
add
mov
jb
pop
sbb
mov
mov
test
cmp
mov
rcrb
xor
sarl
pop
bound
push
scas
stos
inc
sbb
arpl
outsl
pop
and
mov
inc
inc
adc
lcall
das
addl
movsl
rcll
mov
pushf
push
dec
xor
xor
xchg
inc
into
lock
push
mov
and
jne
mulb
lahf
sub
mov
lods
and
cmpsl
fistpll
inc
sbb
inc
pop
add
sbb
ret
rclb
xchg
mov
adc
pop
fucomip
int
outsb
test
xchg
movsl
inc
shll
cmc
push
lods
mov
cmpsl
aad
xchg
pop
cmpsl
push
add
and
shrb
xchg
les
lcall
mov
sbb
popa
out
data16
cmc
jle
aad
aas
aas
jmp
jae
and
or
shrl
mov
rorb
ljmp
mov
ffreep
xor
adc
lods
jns
or
pop
jnp
or
and
inc
bound
xchg
scas
ja
andl
push
lahf
or
pop
pop
fldt
das
pop
in
cmp
insb
fadds
mov
scas
mov
in
xchg
push
or
mov
dec
mov
dec
cmpsb
inc
cmp
mov
lahf
push
rolb
das
jge
mov
pushf
add
addr16
and
aaa
pop
rcll
idivl
jns
movsl
lock
ret
lods
test
sub
add
enter
pop
ljmp
mov
jmp
xor
dec
movsb
mov
scas
cltd
ljmp
add
mov
sub
je
nop
imul
iret
pop
lret
adc
repz
jmp
insb
xor
inc
mov
je
cmp
das
cmpsl
push
jl
iret
loope
jns
mov
jmp
pop
int3
xchg
ja
test
sbb
int3
add
mov
clc
sbb
lahf
pop
cltd
sbb
lret
out
je
or
movb
mov
add
mov
cld
adc
sub
shl
dec
xlat
push
push
and
fisubs
jb
into
pop
call
and
push
xor
cmp
je
nop
cmp
mov
ljmp
out
jbe
rcr
out
repnz
pop
jae
pop
jecxz
xchg
imul
jl
xor
movsl
jp
jb
inc
movsl
xchg
cltd
std
hlt
adc
and
std
outsl
loop
fisubrs
test
aam
adc
shl
repnz
push
xor
iret
inc
fcoml
or
cmpsb
movsb
pop
subl
adc
mov
ds
movsl
inc
sbbl
push
leave
flds
nop
cltd
incb
negl
mov
pusha
ss
mov
dec
push
pop
clc
and
imul
pop
ret
test
out
adc
ss
out
sbb
pop
dec
inc
cmp
push
leave
loop
push
or
nop
je
add
cmpsl
jp
and
in
fsubp
xchg
in
xchg
cmpsb
xchg
sub
scas
pop
xor
pop
pop
xor
adc
lods
inc
scas
pop
and
ror
fs
sbb
and
pop
in
jo
or
pop
testb
add
enter
push
ja
inc
in
int
jo
xor
xor
pop
fmul
or
stos
sbb
faddl
and
sbb
and
mov
pop
pop
test
mov
aad
stos
aas
and
mov
xchg
fcoml
cmpsb
lock
adc
outsb
jge,pn
pop
scas
push
cmc
mov
inc
dec
in
pop
cmp
loope
fcomps
cmc
mov
fstpt
es
xor
daa
mov
xor
cmpb
xlat
pop
stos
inc
loopne
pusha
daa
leave
jmp
shl
xchg
adc
jbe
je
call
adc
sbb
xchg
dec
mov
sbb
je
jmp
call
sti
scas
daa
push
jmp
adc
icebp
insb
xor
out
push
mov
sbb
fs
mov
xchg
mov
movsb
add
sbb
fildl
ret
movsb
push
lods
ret
pop
lret
out
outsl
popa
loopne
mov
std
push
mov
movsl
mov
mov
ja
mov
lahf
mov
xchg
ret
pop
aas
pushf
jo
sub
mov
mul
cmpsb
lods
mov
xor
jg
jecxz
push
sub
out
fildll
movsb
inc
int
imul
cltd
adcl
inc
xlat
int
jo
adc
jp
inc
mov
sbbb
shr
push
cmc
out
repz
aam
shll
fdivs
aam
cwtl
inc
and
aad
pop
and
mov
xor
xchg
xchg
jp
in
xchg
sub
or
popa
lds
repz
jne
pop
mov
lods
mov
xor
fbstp
popa
cmpb
fsubrs
call
xor
mov
dec
std
xchg
add
sarb
add
xor
push
shlb
loop
shl
or
pop
loope
rcrb
cmp
ljmp
adc
dec
imul
mov
mov
mov
jb
xchg
mov
into
jg
or
retw
push
dec
and
sub
or
loop
sbb
dec
mov
jge
jnp
and
daa
adc
or
adc
popa
push
sbb
out
decl
jmp
dec
in
mov
mov
push
or
push
mov
xor
movsb
or
inc
aaa
sub
imul
fisubs
movd
sbb
pop
mov
aam
outsb
cmc
mov
fldenv
and
xchg
mov
pop
popa
in
mov
shlb
add
loop
sbb
jp
jle
addr16
jmp
jmp
or
push
imul
adc
cmp
mov
rolb
daa
inc
and
outsb
push
mov
loopne
adc
and
push
out
push
xor
pop
lods
or
scas
add
mov
ja
je
jmp
push
fidivl
sbb
xchg
icebp
adc
mov
imul
lock
lcall
enter
lock
push
neg
nop
jmp
out
fcomps
sub
xchg
xchg
sbb
cltd
stos
inc
test
or
das
xchg
pop
jmp
sbb
jo
pusha
xorb
dec
mov
push
jns
test
orb
js
js
rorb
cltd
xor
inc
aam
fwait
ss
sub
dec
movb
xlat
pop
or
lret
lret
into
mov
dec
jmp
out
aas
cltd
sarl
dec
or
sahf
fdivrs
sahf
iret
ss
stc
test
mov
inc
jae
dec
out
fdivrl
inc
jno
inc
inc
inc
add
enter
dec
call
dec
cmp
sbb
lea
mov
pop
or
jg
stc
mov
pop
ror
std
pop
scas
pop
add
in
dec
repz
adc
aad
xchg
jb
pop
jb
scas
sbb
xchg
mov
mov
dec
imul
jne
push
push
out
mov
and
mov
jne
adc
ss
cmp
pop
jg
stc
insb
xor
xor
jle
test
push
inc
sbb
insb
insl
stos
inc
lahf
in
xor
push
sahf
gs
xor
test
movsl
push
mov
js
mov
sub
add
or
es
cmp
iret
mov
push
mov
add
adc
inc
inc
cld
xor
xchg
lods
sahf
clc
outsl
in
adc
adc
mov
in
mov
xchg
push
sub
xor
aaa
hlt
bound
mov
pop
pushl
pop
aaa
pop
sbb
fldlg2
je
in
outsl
or
add
push
popf
sbb
sbb
std
lahf
push
jmp
test
mov
push
pop
js
pop
push
sets
sbb
pop
test
fdivl
popf
push
mov
shrb
push
xor
mov
dec
in
cmp
fnstsw
fwait
push
push
xlat
outsb
sar
or
cmpsl
xor
mov
jecxz
push
aam
in
jb
pusha
xchg
inc
das
je
dec
jmp
pop
aam
pushf
scas
mov
popf
aaa
repz
cmp
imul
mov
in
pop
hlt
push
lahf
mov
shll
mov
cli
test
jo
and
inc
jmp
inc
xor
ficoml
inc
mov
andl
mov
adc
xchg
pushf
push
pop
test
iret
inc
fisubl
xlat
das
and
scas
xchg
cwtl
icebp
mov
loopne
mov
add
nop
mov
sar
xchg
inc
out
loopne
pop
daa
inc
cmp
sbb
inc
jbe
xchg
insb
sbb
stos
mov
hlt
mov
jmp
adc
add
pushw
lret
xchg
fadds
int
test
mov
fidivs
popf
add
mov
cmp
pop
mov
icebp
mov
lods
xchg
and
andb
pop
loop
inc
xor
mov
and
insb
mov
repz
pop
in
aad
xchg
sub
jle
inc
cmp
ss
xchg
push
inc
pushf
mov
or
jge
or
outsb
xchg
sbb
test
dec
lods
mov
ljmp
mov
sub
in
sbb
xchg
xor
or
cmp
adc
imul
aam
push
inc
loope
cmp
out
icebp
nop
popa
add
pusha
mov
sar
inc
bound
lods
jo
lret
mov
xor
lods
pop
pop
adc
xchg
imul
xchg
insl
sahf
icebp
lahf
stc
cmp
int
out
cld
lock
mov
int3
call
cmp
fisubs
fldt
imul
add
in
push
xchg
std
mov
mov
data16
dec
sbb
mov
cli
or
dec
xchg
rcl
dec
roll
test
sub
hlt
test
add
xor
push
add
fdivrl
sbb
pop
inc
fdiv
jne
andl
sbb
xlat
clc
cmp
mov
adc
dec
out
mov
bound
js
mov
xlat
aam
sbb
pop
dec
sbb
jl
jl
and
mov
cmpsb
xchg
in
in
add
mov
dec
sbb
aaa
lods
add
popf
and
stc
icebp
stos
jmp
rcrb
js
pushl
or
int
nop
sbb
stos
add
xchg
shrb
push
pop
mov
push
jne
mov
ficompl
int
xor
add
iret
adc
pop
adc
jge
lods
push
xchg
and
aas
add
and
stos
pop
testb
pop
fldt
and
in
test
mov
mov
imulb
int3
cmp
jecxz
push
jmp
mov
or
xor
jmp
mov
lea
sti
es
hlt
mov
and
ret
rorl
push
pop
loopne
shrb
rcrl
cld
cmp
jne
and
add
adc
in
inc
pop
pop
xor
ds
sub
cltd
pop
movsb
xabort
test
push
jnp
inc
je
lock
push
ja
rorl
jle
nop
stos
sub
repz
cmp
ljmp
jg
out
mov
sub
inc
out
jns
inc
add
dec
mov
lods
cs
fidivrs
fidivrs
dec
mov
sub
in
cmc
dec
pop
and
mov
add
cmp
mov
adc
or
lds
scas
mov
inc
pushf
xor
jbe
xchg
adc
push
mov
sahf
mov
int3
add
mov
dec
inc
and
in
mov
sahf
xlat
jg
jno
mov
xchg
xor
jne
push
sub
xchg
lret
add
xor
ret
jle
andl
mov
fsubl
sarl
imul
aaa
mov
cli
jmp
test
adc
push
sbb
shlb
frstor
outsl
mov
add
es
mov
adc
js
fwait
push
lods
mov
push
xor
jo
sarb
and
or
ds
mov
shlb
loopne
in
cli
adc
arpl
xor
jnp
and
jo
jne
sbb
outsl
scas
test
sbb
or
jno
mov
lcall
fistl
push
or
std
mov
jnp
pushf
test
popa
jg
lods
pop
mov
mov
sbb
outsl
fists
call
sti
out
dec
dec
lock
jecxz
or
lahf
repnz
mov
fucom
into
into
mov
sbb
sti
xchg
mov
incb
or
xchg
cmpsb
jb
sbb
push
pushl
xchg
add
das
add
je
push
push
push
mov
aam
gs
and
inc
aad
fs
or
ret
js
or
movsb
ds
leave
daa
push
sahf
adcl
popa
inc
sti
add
dec
mov
cmp
lds
imul
aam
sarl
adc
cmp
dec
cmp
pop
add
xchg
and
cmpsl
shl
jl
xor
dec
imul
fdiv
mov
lods
std
add
xchg
mov
leave
pusha
adc
jg
sahf
addr16
fisttps
and
aam
scas
sub
sub
add
cmpsb
ret
sub
mov
adc
sti
jb
gs
sbb
xchg
inc
sub
sub
ss
cmpsl
lds
pop
lcall
aaa
xchg
pusha
push
or
aaa
push
fnsave
test
mov
sub
xchg
mov
sbb
push
push
call
ljmpw
pop
addr16
mov
je
cmp
into
inc
sbb
rorl
cmpsb
sub
nopl
sub
inc
and
call
daa
jecxz
sbb
inc
and
shrb
es
mov
icebp
mov
push
sbb
xchg
xorl
mov
push
test
cmp
push
mov
xchg
mov
ficoms
cltd
jns
sbb
xchg
loopne
add
pop
les
sub
cmp
push
pop
mov
sbb
cmp
mov
or
mov
xchg
dec
pop
jge
inc
mov
push
jnp
push
cmp
pushf
aaa
loopne
jge
pop
dec
pushf
mov
sahf
or
dec
push
mov
ret
scas
jl
sub
iret
jmp
fdivs
fsubrl
push
dec
push
inc
fiaddl
or
cmc
xchg
jnp
jg
pop
movsl
sub
sub
cmp
pop
stc
dec
sti
rcrl
loop
mov
pop
adc
or
and
out
addr16
fidivs
fdivrs
shrb
ja
popa
mov
push
cmp
sbb
jecxz
xchg
ret
pop
enter
pop
pop
mov
out
fdivl
das
and
jle
lock
call
push
test
jg
into
subb
sub
lds
push
mov
enter
pop
push
xor
icebp
in
mov
sub
xor
add
dec
add
push
sbb
adc
movsl
cli
lea
cmpsl
nop
ja
dec
mov
cmp
xchg
sbb
mov
insl
imul
fsubrs
sub
in
push
lahf
ss
jae
add
cmp
xchg
sbb
ljmp
push
sbb
jmp
dec
notl
jl
subl
adc
sub
ss
xchg
dec
inc
fimull
jmp
push
shl
pop
cli
arpl
cli
pop
inc
aaa
ret
shlb
inc
mov
aad
xchg
stc
adc
sbb
fldcw
push
or
push
inc
jg
mov
push
mov
jmp
cmpsl
add
push
adc
cmp
clc
jnp
inc
cmp
loope
mov
repnz
jno
in
push
xchg
mov
push
or
movsb
lods
insl
pop
out
jl
dec
movsl
dec
outsl
aas
mov
pop
leave
je
xor
in
or
leave
jl
shrw
shrl
jp
xor
aad
mov
push
dec
xor
shlb
push
jl
dec
in
pop
push
cli
data16
cli
pushf
xor
pop
mov
repz
xchg
cwtl
mov
shll
push
int
dec
aas
clc
dec
pop
bound
test
and
xor
or
out
add
mov
lcall
sarl
dec
cmc
adc
add
mov
mov
add
daa
aaa
push
cltd
mov
push
jae
shll
xchg
mov
adcb
insb
add
mov
cli
or
cmp
or
fistps
mov
loop
imul
add
insb
mov
stos
psubb
mov
lret
push
shl
xchg
sbb
fcomi
sub
jp
test
mov
jae
push
fstpt
jmp
or
ret
mov
subl
dec
cmp
push
lods
xor
rorl
mov
add
cmc
inc
clc
imul
sbbl
int3
fchs
pop
iret
push
out
test
hlt
xchg
push
inc
inc
cmp
loopne
fstpl
mov
sbb
pop
cmp
sub
in
xchg
add
cli
rolb
dec
in
daa
inc
sub
cmc
leave
ja
mov
rcl
lods
push
pusha
cmpsb
test
gs
cld
push
sub
lds
mov
xor
lds
loopne
je
push
scas
cs
mov
add
or
sub
sub
popf
adc
fs
data16
call
add
mov
cmp
pop
mov
jb
lea
iret
dec
popf
sti
movsl
dec
cmpsl
xchg
inc
in
frstor
mov
rol
sar
add
sub
jbe
mov
cltd
xchg
jge
scas
lock
insl
and
and
adc
ficompl
imul
jnp
mov
push
sbb
dec
dec
or
enter
jmp
clc
sub
sbb
fcomps
jl
insw
sub
aam
sbb
sbb
cmp
fcoms
inc
cmpsl
push
pusha
notl
fcmovnb
cmp
repz
lea
cmp
fisubrs
jmp
cmc
gs
jne
and
jne
cmp
sub
and
fistl
dec
aaa
aam
pop
idiv
adc
inc
pop
mov
sub
daa
mov
pop
fldcw
fmul
lret
lret
xor
inc
cmpsl
cmp
fwait
cmp
ss
in
push
xchg
xor
imul
inc
mov
cmp
push
or
or
mov
ret
enter
jb
data16
or
out
xor
addr16
cmp
cwtl
imul
jmp
inc
fisubrs
test
pop
push
mov
movsb
jg
lret
pushf
sbb
adc
xchg
jbe
dec
xor
cmpsb
jecxz
xchg
fldt
jp
cmpsb
arpl
and
push
jno
mov
test
jecxz
cltd
sub
insb
add
sub
jo
xchg
test
inc
pop
jge
adc
jb
pushf
xor
test
cmpb
scas
push
dec
arpl
lods
jb
fisubrl
sti
dec
sti
call
mov
aas
test
mov
inc
clc
ret
lods
dec
loope
in
mov
pop
lods
or
xlat
push
jmp
xor
rcrl
cmp
push
push
movsb
jp
push
leave
faddp
testb
push
inc
loop
scas
adc
pop
mov
lods
arpl
xchg
iret
push
icebp
push
jbe
jmp
cmc
sarl
jge
leave
jnp
cmp
dec
pop
repz
jnp
xchg
fwait
iret
jp
cmpsl
xchg
push
mov
inc
sbb
scas
fdivl
cwtl
jl
sbb
dec
dec
pop
jne
push
inc
fwait
loop
lods
jecxz
dec
adc
pop
mulb
push
mov
roll
fst
pop
jmp
and
jmp
adc
and
sbb
idivb
arpl
jne
sbb
pop
add
or
movb
les
adc
bound
dec
add
cmp
andl
dec
shll
daa
mov
dec
stc
repnz
push
lods
sbb
cmpsb
sti
and
xor
fucomp
push
xor
mov
cmc
fcomps
add
xchg
stos
push
cs
rcl
add
lods
jns
pusha
mov
sahf
push
repz
shl
push
leave
adc
das
cmp
jo
ljmp
aam
jmp
mov
stos
push
mov
dec
and
fsubrs
test
or
sbbb
in
inc
mov
pop
les
clc
arpl
cmp
xor
add
in
pop
cmp
adc
sbb
loope
adc
inc
mov
push
sar
arpl
aaa
rorl
jb
push
or
rclb
dec
in
jecxz
cmp
shrb
icebp
mov
int
popa
jns
in
call
or
sub
popa
int
xchg
jg
add
xor
mov
and
or
cmp
add
outsl
lock
test
test
pop
xchg
aam
mov
fxch
test
add
push
orb
das
movsb
call
push
fs
std
push
inc
pop
test
scas
add
inc
pop
sbb
mov
shlb
add
addb
fldenv
xchg
dec
scas
inc
adc
sbb
popa
dec
pop
adc
and
push
or
pop
mov
ret
aam
or
hlt
scas
dec
cmp
ret
push
sub
es
es
js
xchg
and
es
xchg
inc
inc
sub
and
fucomp
test
xchg
jmp
lods
cs
lock
mov
mov
mov
jmp
add
pop
ret
pop
stc
gs
dec
mov
loop
shll
xchg
stos
cs
ret
pop
push
dec
stos
sarb
jg
mov
sbb
rorl
testl
in
das
mov
mov
ja
pop
cs
mov
adc
push
inc
push
icebp
outsb
add
aad
clc
lea
jg
jp
js
call
hlt
add
xor
pop
cmovbe
fbstp
xchg
lret
movsb
pop
sub
jmp
sbb
decb
adc
xor
dec
jae
sbb
in
mov
push
jb
imul
dec
clc
mov
mov
adc
cmp
test
mov
xchg
scas
xor
sbb
ds
mov
mov
sahf
sbb
pop
cli
test
addb
iret
cmp
popf
imul
std
and
leave
js
cmp
xor
in
xchg
mov
xlat
pop
rol
adc
fwait
or
pop
lret
mov
dec
inc
or
minps
out
xor
out
ret
mov
test
and
and
fists
aad
gs
xchg
xor
sub
mov
test
icebp
gs
dec
pop
push
in
and
das
loopne
adc
inc
pop
lock
or
ss
dec
and
add
das
xchg
ja
sbb
mov
into
gs
mov
xor
leave
inc
pop
cmc
pop
scas
jp
mov
sbb
test
cmc
jecxz
cmp
mov
xchg
rclb
adc
cmpb
shl
push
cltd
sub
das
mov
mov
mov
mov
and
mov
xchg
mov
test
cmp
sub
jmp
ret
enter
adc
pop
inc
xchg
int3
pop
adc
push
pushf
push
pusha
imull
jl
in
daa
dec
add
icebp
xor
and
pop
lods
ljmp
cli
cltd
pop
int
add
gs
dec
ret
dec
cmpl
mov
adc
sub
inc
loop
pop
enter
push
xor
mov
mov
dec
sub
push
xchg
gs
adc
lret
mov
mov
cmp
aam
stos
push
sub
ret
ds
mov
shll
cli
xchg
xor
push
lea
rcll
sarl
scas
and
cmp
insb
icebp
push
shr
xchg
xrelease
push
dec
pop
dec
xchg
cld
xor
adc
jg
arpl
inc
sbb
cli
jne
cmp
mov
lea
rol
aam
scas
fisubs
cmp
inc
cmpsb
call
jp
test
lds
out
insb
sbb
and
lods
xchg
xlat
cmp
or
les
or
pushf
mov
jae
test
es
sbb
pusha
rorl
dec
test
pop
into
mov
mov
fstpl
orl
movsb
sbb
mov
push
movsl
or
cs
push
add
pop
ds
pop
mov
aam
adc
cmp
cld
mov
mov
lret
add
stos
and
mov
jae
das
sub
gs
xchg
sbb
cmc
enter
pop
mov
cmp
scas
push
and
into
push
pushl
jmp
movsb
in
mov
and
ret
iret
shrb
and
test
dec
xor
jge
arpl
orl
gs
lock
xchg
inc
adc
sahf
xor
sub
mov
lret
adc
fs
xor
mov
cmp
or
mov
add
pop
inc
cmp
cmp
sbb
mov
daa
mov
jmp
sub
mov
movsl
pop
jecxz
popa
jnp
sahf
inc
mov
inc
mov
add
out
mov
rcr
sbb
jnp
and
outsl
lock
add
cmp
mov
lret
fcmovb
loopew
cmpsb
sub
negl
push
sbb
mov
and
inc
inc
fdivl
fsts
dec
inc
arpl
lds
xchg
dec
sbb
fimull
cmpsl
adc
test
in
pusha
loopne
dec
in
add
jecxz
xchg
lods
cli
mov
test
cwtl
sub
mov
inc
in
addr16
cmp
or
xchg
icebp
adcb
add
mov
push
jp
ret
sbb
in
cmp
call
mov
pop
into
sarl
push
aam
loop
sbb
cmc
stc
jle
dec
call
sbb
inc
out
fs
and
pop
insl
xor
jecxz
pop
stc
gs
xchg
rcrb
mov
pop
ja
xorb
ss
push
pusha
test
xchg
cmp
push
adc
sbb
jg
cmp
adc
push
in
sub
jno
ds
in
push
scas
push
sub
iret
lea
cwtl
xchg
test
inc
outsb
push
cwtl
add
aas
in
jecxz
push
pusha
jmp
jbe
cmpb
sbb
mov
test
jb
jmp
test
or
popa
clc
and
rcll
add
jns
or
addr16
or
mov
call
aam
xchg
faddl
mov
divb
lods
cmc
push
jge
je
hlt
adc
push
aam
xor
fisubs
inc
insl
inc
repz
fldenv
mov
cmp
fisttpll
loopne
add
push
pop
or
and
push
test
outsl
mov
stc
in
jmp
std
ljmp
in
ret
int3
cmp
mov
jge
sti
xchg
cwtl
push
mov
mov
dec
imul
xor
pop
lods
mov
push
jno
pop
push
sub
int
mov
xor
jge
push
mov
xor
pop
mov
sub
ficoml
test
lods
push
jae
lods
inc
iret
or
cmp
lret
pop
pusha
ret
add
out
push
inc
outsb
jne
jbe
jle
dec
sti
mov
fcoml
xchg
dec
xchg
sub
cmc
incl
arpl
xchg
mov
push
pop
lods
and
adc
shl
mov
push
and
loopne
mov
cmpsl
xchg
pop
outsl
les
xchg
es
mov
push
or
mov
lahf
data16
pop
or
loopne
or
cs
push
jecxz
lds
js
mov
mov
jl
push
and
adcb
and
pop
nop
add
inc
pop
fwait
sbb
arpl
sbb
ja
cmp
jbe
loop
dec
xchg
pop
dec
and
jg
testl
insl
push
test
pop
clc
or
nop
int3
sub
xchg
xor
insb
lret
fcoms
test
sbb
xor
jb
clc
mov
inc
fildll
pop
xor
adc
inc
setge
mov
mov
test
lock
popf
xchg
sub
hlt
scas
sub
les
push
sti
cmpsb
aam
and
cmpsl
mov
adcl
pop
ds
fldenv
fwait
adc
jle
sahf
sub
test
mov
pop
in
movsl
cmp
mov
addb
mov
jle
mov
push
cld
or
test
ficoms
aam
jae
pop
xor
cmpb
clc
imul
test
lret
add
adc
jg
lcall
sbb
jp
and
xchg
push
jbe
add
js
ss
dec
loope
mul
std
nop
push
leave
xchg
pushl
pop
sub
clc
movsb
sbb
push
stc
mov
mov
sbb
sarl
sub
subb
mov
sub
inc
shlb
mov
adc
cli
cmp
loop
leave
in
xchg
xchg
and
xchg
dec
jecxz
jb
dec
add
icebp
push
and
shrb
inc
sub
rcr
inc
fiadds
test
jl
jmp
jns
jnp
inc
jno
cwtl
ja
lret
outsb
jle
push
pop
in
cmc
mov
pop
scas
inc
jns
mov
jae
inc
sbbb
mov
cmc
and
or
sub
arpl
test
push
fimull
inc
jl
jb
movsl
adc
sub
dec
imul
inc
sarl
fsts
test
mov
outsl
js
dec
adc
cmp
pop
add
and
inc
test
dec
out
mov
scas
repz
mov
clc
inc
adcb
das
lods
aam
add
xorl
xchg
test
cmc
addr16
mov
pop
ss
imul
aam
xchg
sub
outsb
add
sbb
iret
mov
fists
sub
out
arpl
push
test
flds
scas
pop
mov
int
pusha
sti
xor
xchg
int3
bound
jns
or
inc
scas
arpl
fisubs
daa
cmp
jb
fmuls
daa
adc
cltd
sub
decl
xchg
and
mov
xor
mov
xor
adc
rcll
out
loop
pusha
dec
xor
push
dec
pop
jmp
mov
mov
mov
sub
add
in
ljmp
daa
in
loope
sbb
dec
pop
jb
push
test
mov
inc
std
mov
adc
xor
inc
jbe
cltd
scas
jnp
sub
std
lods
push
test
es
adc
or
pop
and
sub
out
rol
or
rcrl
inc
cmp
pop
and
aaa
xchg
jnp
mov
mov
ja
push
cs
push
jmp
mov
jo
outsb
or
sbb
or
in
jg
mov
std
jg
adc
pop
pop
divl
notl
dec
pushf
nop
fidivl
aas
adc
add
mov
inc
inc
jmp
call
movsl
xchg
pusha
jns
push
mov
or
dec
adc
clc
xor
sarl
dec
cld
lcall
mov
fcmovnbe
mov
sub
and
std
shlb
repnz
mov
aam
push
call
dec
subl
jmp
pop
mov
call
cmp
scas
je
leave
and
rcrl
add
jns
mov
in
mov
mov
jne
in
sub
xrelease
loop
inc
fwait
pop
psraw
mov
cwtl
mov
arpl
outsl
jbe
push
das
pop
subl
dec
pop
push
outsl
out
lods
into
xchg
test
or
hlt
dec
jle
push
jbe
push
dec
mov
outsl
pop
sub
xchg
nop
push
jae
test
adc
or
inc
mov
sti
mov
jl
int3
hlt
add
push
xor
bound
mov
lds
jbe
mov
xchg
sub
sub
mov
repz
jle
rol
or
xor
push
int3
sbb
adc
fcmovne
fisttpll
adc
xor
sbb
arpl
sarl
mov
and
jno
push
adc
or
mov
sahf
hlt
popf
xchg
pop
push
fcoms
in
or
and
shl
sti
inc
pop
adc
cmp
adc
jmp
lods
mov
aaa
imul
inc
mov
sbb
xlat
cltd
dec
push
cli
fwait
mul
add
xor
popf
insl
into
or
and
das
jo
ror
aad
int
ja
mov
arpl
fstl
mov
aad
inc
idivl
in
fbld
dec
clc
jb
pop
and
shl
mov
fldenv
int3
mov
add
dec
cmp
mov
orb
xchg
dec
pop
cmp
test
or
inc
cmpsb
cmp
mov
mov
cmp
sub
mov
jb
std
cmp
push
sub
dec
repz
icebp
cmp
fnstenvs
outsb
arpl
dec
mov
cld
push
div
add
testb
adc
test
xchg
bound
adc
or
pop
jbe
lea
imul
sahf
or
out
lahf
arpl
aas
outsb
mov
mov
dec
aam
jg
insb
dec
xor
addr16
inc
outsl
shrl
sbbl
stos
xlat
or
div
push
stos
ds
jnp
push
inc
fiadds
pop
push
pop
fidivrs
xor
jecxz
mov
sub
aaa
and
xor
cld
imul
test
jl
repz
int
sub
andb
aad
aaa
or
cmpsl
cli
out
and
es
loopne
sbb
xor
repnz
push
clc
push
adc
in
cld
mov
cmp
xor
or
fucomip
leave
andl
pushl
xor
lds
sbb
adc
call
sbb
fs
xor
mov
mov
sti
stos
aas
dec
fsub
pop
cmpl
popl
je
test
aam
lds
cs
pop
pop
xchg
aas
mov
fidivl
test
fisubrs
xchg
or
cmpsl
shl
add
and
movsb
xchg
mov
push
aaa
pop
nop
dec
push
scas
nop
xchg
sarl
ss
sub
ret
mov
movsl
jb
movsl
cmp
mov
in
pop
hlt
mov
or
push
subb
or
cmp
add
sub
inc
rcrl
pop
jnp
sbb
stc
es
jmp
ret
in
sahf
loopne
out
push
in
sub
je
xor
and
and
mov
cmp
cmc
mov
incl
cltd
and
and
cmpsl
repz
xchg
pop
out
lret
std
and
aaa
shrb
push
clc
fstpl
inc
cmp
mov
popa
add
mov
pop
mov
dec
out
cmp
push
ret
jnp
popa
lods
sub
adc
callw
sets
push
mov
in
inc
clc
fisubl
pop
repnz
fidivs
jne
jns
ljmp
bound
fs
aad
xchg
ret
mov
and
fldt
out
pusha
dec
or
ror
xchg
mov
and
add
xchg
into
enter
subb
cmpsl
mov
or
cmp
scas
jo
pop
mov
insl
xor
mov
js
inc
icebp
mov
dec
movsl
lock
pop
mov
jnp
sub
adcb
inc
jge
jno
and
iret
inc
inc
divl
dec
mov
int
or
cmp
sahf
cwtl
dec
and
pop
ss
pop
xlat
outsb
mov
mov
shll
inc
out
xchg
mov
inc
shrl
mov
mov
shrl
sub
and
and
jle
fwait
jb
int
push
aas
popf
stc
and
fmull
icebp
jp
imul
imul
add
shl
dec
and
inc
push
daa
clc
insb
fucomip
lret
fbstp
ficomps
int
mov
and
daa
rol
or
dec
and
repnz
cmp
pusha
fcmovne
aam
iret
les
std
jae
lret
pop
loope
sti
or
mov
xchg
fdivl
das
loope
loope
js
movsl
add
mov
filds
aam
jns
push
jne
and
idivl
pop
gs
jb
pusha
or
call
outsb
addr16
mov
lea
dec
xchg
push
cs
push
mov
and
sub
jae
outsw
in
push
enter
xchg
dec
das
mov
push
in
inc
add
je
es
pop
xor
test
dec
xchg
and
push
stos
aam
xor
mov
mov
pop
scas
sbb
bnd
lods
push
xor
sbb
fcoml
and
mov
sbb
mov
cmp
jne
ja
mov
push
in
roll
mov
sbb
mov
fistps
repnz
sahf
or
cmp
jo
and
mov
movsb
add
inc
mov
fcomps
dec
push
jbe
xchg
add
push
movsb
pop
cmpsl
add
dec
hlt
sub
or
jb
xchg
leave
ja
idivl
fsubr
sub
test
stos
icebp
pop
mov
pop
lahf
gs
pop
push
sub
mov
or
in
push
xlat
mov
inc
sti
xchg
pop
push
mov
out
fcmovbe
loope
sub
loope
fnstcw
jmp
dec
loope
xor
imul
push
and
ss
ljmp
xor
pop
mov
pusha
in
and
out
cmp
mov
add
mov
movsl
push
mov
scas
sbbb
mov
add
and
cli
fwait
dec
sbb
test
mov
cmp
das
sub
rol
xchg
fadds
imull
mov
clc
or
pusha
xchg
scas
xchg
adc
jne
cmc
lfs
shlb
lret
les
cltd
loope
imul
out
jge
cmp
xchg
jb
int
or
cmpsb
arpl
sub
orb
mov
and
push
stos
imul
push
jmp
fsub
xchg
push
or
mov
xchg
xchg
jmp
lret
mov
and
inc
adc
xchg
jno
or
clc
scas
cmp
push
sub
insb
out
jns
dec
mov
xorl
cwtl
inc
jnp
cmp
iret
fldt
mov
inc
mov
je
dec
into
mov
mov
lcall
ja
cmp
jg
inc
ret
adc
cmp
aad
scas
cmp
ja
clc
or
pop
mov
ret
jecxz
mov
jae
mov
adc
out
dec
in
pop
push
jp
pop
jmp
mov
mov
ss
add
repz
push
inc
fstps
push
inc
sbb
pop
mov
add
mov
cmp
sbb
and
xchg
cmpsb
cmp
mov
data16
mov
cld
out
test
or
xlat
sbb
push
sbb
arpl
fwait
js
subb
xchg
loop
sub
pushl
sub
rol
mov
or
pop
aam
cmp
or
inc
bound
inc
pushf
popf
xchg
fidivrs
nop
popf
cmc
mov
insb
mov
and
lret
cld
int
and
int
sti
or
mov
jmp
dec
mov
pop
adc
pop
sbb
cmp
pop
aas
cli
mov
mov
shrb
int3
daa
mov
jnp
sub
and
push
shlb
or
mov
mov
sub
jb
mov
mov
push
inc
xor
sbb
or
jmp
or
xor
dec
lret
xchg
outsl
mov
mov
dec
movsl
in
mov
enter
mov
fstpt
xchg
mov
scas
das
cmp
mov
jle
sahf
adc
loope
loop
xor
outsl
mov
mov
aas
popa
add
pop
ficompl
pop
add
inc
add
cld
cwtl
sub
add
and
and
fs
fdivl
out
js
jne
cli
scas
and
bound
xchg
xor
mov
test
cmp
out
adc
ss
and
xlat
cmc
mov
xchg
add
lock
scas
cmp
pushf
outsb
xlat
icebp
arpl
pop
imul
sub
imul
pop
pop
je
aas
xor
add
lods
add
pushf
jae
in
ffree
xchg
cli
and
xchg
dec
in
push
sarl
mov
lahf
jbe
mov
and
jp
mov
and
dec
daa
or
and
mov
nop
aam
and
shlb
loope
pusha
pushf
sbb
xchg
std
das
cmp
and
int
aam
push
jmp
test
mov
mov
sbb
loop
xchg
fisubl
hlt
mov
fs
dec
and
xor
int
jae
push
ds
xor
inc
inc
push
cli
adc
outsl
mov
xlat
aaa
and
push
stos
lcall
mov
sub
inc
fwait
sub
sub
shl
jb
dec
mov
and
cli
adc
dec
cmovs
movb
fsubl
sti
add
inc
clc
push
stos
xchg
pop
inc
pop
insb
mov
fs
mov
sbb
out
dec
cmp
jmp
push
mov
stc
mov
mul
adc
mov
lcall
test
jns
mov
repz
mov
sub
xchg
jmp
lods
jb
or
loope
movsl
pusha
push
movsl
mov
cmp
jecxz
mov
cs
sti
mov
add
fnsaves
fsubs
popa
cmp
cmp
cmp
push
lcall
js
push
loop
test
jl
dec
xor
mov
orl
popa
jl
bound
fldcw
lret
cltd
or
pop
push
jl
stos
push
jne
jae
inc
jp
clc
or
mov
subb
mov
imul
jg
ljmp
mov
mov
movsb
enter
call
mov
jns
lcall
inc
dec
test
cli
rcl
dec
loopne
js
inc
ja
mov
ffreep
xchg
inc
dec
lret
je
nop
mov
add
sbb
mov
or
mov
ficoms
mov
adc
mov
sarl
pop
cmp
push
scas
addr16
jge
in
sbb
sub
into
and
lock
xor
xchg
daa
push
adc
scas
add
dec
lds
aam
dec
sbb
es
jnp
std
popa
push
out
xchg
mov
inc
sub
cmp
adc
call
gs
adc
mov
inc
dec
xlat
inc
shl
call
pushf
jbe
mov
stos
mov
jns
push
mov
xor
ret
adc
inc
push
pop
testb
adc
loope
fsubl
lret
mov
and
adc
les
fldt
push
jne
loop
gs
xchg
inc
stc
xlat
stos
fwait
mov
out
pop
pusha
pop
iret
adc
repnz
sbb
mov
movsb
cmc
jno
cmpb
xor
mov
dec
test
shrb
cmp
mov
fidivrs
xchg
cmp
scas
push
int
ret
pop
adc
out
cld
aam
movsb
fstpt
fs
popa
or
mov
jp
icebp
aam
or
adc
imul
outsb
push
or
popl
add
leave
mov
sbbl
pusha
ljmp
sub
aaa
bnd
and
shlb
enter
sbb
arpl
inc
jns
ficompl
sbb
dec
dec
out
std
xchg
fsubrs
cmc
rclb
mov
inc
pop
insl
add
loope
inc
add
pop
mov
jne
jno
cmpb
mov
fidivs
push
iret
lret
adc
in
cmc
cld
stos
gs
dec
push
mov
mov
mov
or
dec
sahf
adc
aas
stos
mov
pop
ss
addr16
jae
mov
cmpsl
lea
insb
aas
cmc
adcb
mov
mov
mov
sti
push
lods
int3
jle
cmp
jecxz
cmp
and
cli
sti
int3
adc
sbb
pop
and
fwait
lret
lcall
push
jae
dec
push
fwait
jle
jmp
sahf
mov
fstl
mov
mov
mov
or
mov
xchg
enter
cmc
sbb
fs
enter
and
daa
sahf
cmpsl
mov
stc
data16
lret
addr16
sub
ja
mov
cmp
mov
cmp
or
aad
pop
testb
cmpsl
cmp
xchg
mov
mov
mov
dec
dec
js
xchg
mov
mov
call
lcall
push
lcall
cmpb
adc
pop
int3
arpl
arpl
ds
cmpsl
push
adc
mov
sub
cmpsb
add
neg
imul
scas
sarl
int
jg
sahf
pop
jl
fs
sub
cltd
popf
mov
push
das
outsl
or
pop
or
xor
jl
or
testl
rcrb
sbb
lds
out
cwtl
dec
jns
popf
frstor
inc
and
loop
cli
sub
rclb
scas
inc
cmpsl
into
js
pop
leave
int3
jbe
push
adc
out
mov
mov
mov
sbb
add
inc
cmc
pop
movsb
mov
dec
call
mov
cmpb
stos
int
push
outsb
jle
out
cmp
pop
inc
out
jbe
inc
add
nop
out
in
filds
adc
push
cmp
jmp
or
outsl
xchg
sub
aaa
mov
ja
ficoml
loope
inc
cmpb
out
mov
jp
pop
in
jl
leave
xorb
and
pop
fcoms
or
or
das
mov
mov
aam
int3
or
shl
repz
jb
inc
adc
add
adc
mov
or
cld
push
sub
or
mov
dec
push
loop
jbe
ljmp
out
lds
ret
imul
mov
push
jo
gs
movsl
inc
insl
pop
ljmp
or
mov
dec
adc
dec
push
mov
or
imul
mov
mov
sub
or
call
sbb
and
pop
loopne
mov
and
xor
pop
dec
add
adcb
repnz
test
inc
fsubr
mov
arpl
push
nop
inc
in
mov
roll
xchg
xchg
insl
js
sahf
es
mov
enter
lds
bound
mov
xchg
out
mov
jae
aas
rcrl
aam
and
in
and
pop
lock
mov
cmp
scas
insb
jmp
sub
sti
xchg
lahf
ss
arpl
sbb
sbb
aas
mov
out
cmpsl
dec
out
clc
mov
xor
mov
sbbl
mov
imul
test
mov
clc
cmp
cmp
pop
inc
dec
jne
je
or
xchg
dec
jns
sub
fbstp
cli
sti
mov
jne
xchg
testb
or
mov
adc
cmp
sbb
or
mov
push
mov
or
jg
push
rcr
push
ss
repnz
lods
add
sub
jle
adc
or
sub
pop
or
jne
ljmp
mov
add
int
jb
cmp
jecxz
xchg
cmp
pushf
add
es
push
movsb
or
andl
pop
jae
repz
sub
cmc
hlt
dec
xor
out
pop
ret
adc
pop
push
sub
jecxz
and
push
cmovp
mov
xor
lock
sarl
or
out
mov
ret
xchg
jns
test
shll
mov
xchg
adc
jne
push
push
push
fldl
inc
and
xchg
test
outsb
iret
into
cltd
data16
xor
or
or
pop
mov
loopne
push
cmp
or
lods
imul
mov
pop
pop
sahf
cmp
mov
sti
aam
fwait
mov
lods
push
ss
jp
insb
stos
dec
sub
xlat
inc
adc
mov
and
adc
inc
cltd
shlb
xchg
pop
and
iret
mov
fsts
notl
aas
div
leave
jp
sti
aam
mov
lahf
adc
push
mov
lret
pushf
inc
jns
in
and
xor
push
fiaddl
mov
xchg
mov
roll
movsl
adc
outsb
pop
jge
dec
push
sbb
pop
lcall
sbb
lcall
sti
cmpsl
dec
in
inc
cld
sub
imul
sbb
stc
aas
adc
repz
negb
jnp
sub
aaa
ret
add
or
arpl
sub
jmp
repnz
and
mov
push
adc
xor
xor
jne
dec
aas
add
cld
jg
inc
adc
sub
enter
xchg
push
inc
shll
jp
lods
ljmp
and
jg
mov
out
mov
sbb
and
lea
mov
mov
adc
cmp
inc
lods
stos
inc
pusha
leave
imul
clc
stos
push
pop
cltd
jne
lret
arpl
sbb
sbb
in
jnp
push
lods
push
ret
and
mov
addb
icebp
aas
icebp
dec
out
test
lock
and
mov
sub
repz
mov
xor
pop
add
shl
outsl
mov
fdivrs
jbe
popa
out
rcrl
add
cld
xchg
xchg
sbb
mov
lock
rcll
xchg
pop
pushf
fdivrl
rolb
orb
movsl
mov
xlat
cwtl
xor
idivl
adc
jae
insl
arpl
nop
xchg
pop
mov
mov
mov
jnp
or
ret
scas
dec
pop
loope
bound
xorl
jecxz
enter
ljmp
scas
sbb
loopne
mov
jecxz
psubq
push
stos
jg
sbb
or
push
lahf
and
cmp
push
mov
or
jecxz
nop
pushf
into
shrl
icebp
clc
jnp
lret
mov
inc
push
rolb
roll
add
pop
dec
gs
imul
pop
xchg
add
jne
popf
negb
add
add
mov
arpl
leave
push
out
mov
fwait
repnz
loopne
ficoml
jae
add
pushf
push
inc
cld
pop
jb
jp
fcoms
mov
or
fwait
xchg
es
rcrl
xchg
add
push
lret
xchg
fsubrp
xchg
sbb
dec
rcll
out
jp
mov
lock
out
mov
jmp
es
jle
cmp
cltd
iret
inc
sbb
add
pop
ret
lcall
es
jecxz
mov
addr16
mov
or
fldl
jb
sub
push
mov
mov
inc
dec
dec
xor
shrl
loope
jb
mov
sarl
dec
mov
fcmovnu
adcb
loop
arpl
cmc
mov
mov
xor
push
push
adc
mov
pushf
repnz
sbb
fwait
js
shrb
cmp
aas
fld
pop
or
xor
pop
jae
sub
nop
mov
sub
jb
push
pop
mov
jnp
cmpl
sbb
jge
lds
mov
lret
adc
popf
pushf
sbb
clc
enter
hlt
pop
add
lods
mov
mov
mov
cwtl
fucomi
dec
iret
pop
jg
in
fwait
xor
cld
xchg
movsb
aaa
mov
dec
imul
push
lret
mov
insb
scas
cmp
cmp
rcrb
sub
cs
sbb
cmp
out
bound
leave
pusha
pop
loope,pt
sbb
mov
sub
in
mov
or
shlb
dec
push
repz
and
pop
pop
fisttpl
adc
outsl
jbe
dec
cmpsl
js
sub
add
mov
push
and
push
inc
xlat
cltd
add
and
mov
mov
xlat
or
jo
lret
sbb
lods
outsl
adc
or
dec
dec
insb
ret
mov
sbb
inc
dec
sbbl
sbb
mov
pop
cmp
cmp
lcall
fs
pushf
adc
je
es
hlt
ds
jno
push
and
dec
packsswb
test
pop
std
inc
xchg
mov
in
and
push
loope
outsl
mov
mov
and
adc
pusha
dec
mov
and
outsb
bound
push
push
xor
xor
bound
cmpsb
data16
daa
mov
mov
add
mov
icebp
jb
cmc
pop
push
xchg
xchg
mov
and
add
lods
push
lcall
cwtl
sbb
sbb
orb
andb
jne
pop
inc
es
cli
mov
cmp
push
lahf
or
cmpsb
mov
xchg
xor
scas
xor
and
dec
or
fcomi
scas
gs
fbld
xor
push
add
xor
ficoms
inc
pusha
adc
sbb
cmp
jnp
xor
inc
call
loopne
call
push
data16
dec
add
test
pop
sbb
in
fwait
ret
pop
stc
call
lock
pop
jb
cli
nop
push
jmp
cmp
xchg
scas
in
outsb
push
mov
int3
mov
insl
jno
add
daa
mov
jmp
stc
popa
xor
or
enter
and
jb
pop
je
scas
loopne
sarl
xchg
add
sbbl
inc
push
test
pop
jns
add
adc
arpl
lods
sub
mov
stc
popf
inc
xchg
push
movsb
in
sahf
pop
mov
sbb
cmc
and
push
add
push
lea
cli
mov
mov
imul
cmpsl
cli
jge
fidivs
ret
or
enter
dec
and
adc
ret
into
call
cmpsb
pop
or
rcr
daa
mov
sub
enter
sub
dec
xor
or
adc
mov
daa
xchg
inc
test
jbe
mov
dec
mov
mov
add
mov
push
pop
decb
cltd
js
sbb
jno
movsl
lds
shrl
mov
icebp
movsl
fldenv
sub
fdiv
sub
cld
rorw
adc
mov
outsl
cmp
adc
inc
lcall
shl
mov
stos
mov
pop
ds
in
clc
jae
or
ret
aaa
inc
in
int3
push
cmc
push
jge
mov
sub
cmpsb
push
notb
aam
cmp
add
push
decl
or
scas
cmp
sub
js
xor
lea
clc
and
shrb
jg
cmp
mov
push
xor
xor
push
es
les
cs
insb
mov
es
fstpl
mov
arpl
in
lret
loope
smsw
mov
xchg
hlt
and
cltd
fisubrl
or
popf
das
xchg
sub
sbb
or
out
cwtl
lea
mov
fdivl
cli
pushf
xor
cmpsb
mov
fisttpll
sbb
sub
push
stos
pop
in
pushf
jbe
push
test
add
ljmp
or
and
push
push
push
nop
and
fucomp
or
xchg
cmp
cmc
push
add
pop
push
out
aaa
into
fistpll
sub
adcb
jecxz
fidivrs
jb
or
cmp
sahf
aad
mov
push
test
hlt
xor
xchg
cs
push
fildll
cli
push
inc
push
scas
pop
aaa
in
arpl
inc
pop
mov
push
push
das
jmp
cmp
xorb
or
dec
cld
sbb
mov
call
in
sub
cmp
and
ret
imul
push
mov
fiaddl
shll
inc
mov
add
add
outsb
adc
enter
dec
xor
inc
mov
iret
mov
lock
mov
inc
cmp
neg
jae
xor
mov
es
lock
mov
loop
and
shll
mov
cld
gs
cmpb
push
shlb
popa
out
sbb
repnz
lods
adc
adcb
repz
fildll
decb
popf
cmc
dec
scas
push
movsb
pop
lods
dec
cmp
out
jg
xlat
inc
mov
push
nop
sti
xchg
movsl
cmp
into
dec
pop
add
test
mov
xor
mov
cmp
dec
or
pop
nop
sbb
scas
xchg
xor
test
flds
clc
clc
cli
cmp
adc
dec
icebp
adcb
add
adc
mov
push
mov
sub
add
js
loop
call
add
mov
enter
jo
push
xor
stos
mov
pop
lods
dec
or
dec
push
bound
pop
lcall
in
mov
lods
push
dec
mov
jo
or
jg
adc
mov
mov
push
cld
into
icebp
outsl
push
and
repz
add
mov
mov
sub
pop
pop
jo
push
cltd
inc
fsubl
pusha
push
inc
cmp
inc
aas
mov
aas
jecxz
js
jne
shrb
pop
xor
sbb
mov
filds
lret
es
jns
xor
out
xchg
mov
shr
imul
ffreep
mov
fmuls
fldl2t
lea
into
mov
adc
xchg
int3
pop
adc
xlat
xor
or
sbb
aas
fmul
jo
into
mov
jb
adc
xlat
mov
inc
ds
pop
cmpsb
ret
fisttpll
sbb
idivl
data16
dec
sub
xor
pop
das
lcall
clc
mov
push
mov
sti
sbb
xchg
outsb
mov
xchg
lods
cmp
xor
xchg
xor
sbb
cltd
xchg
sbb
idivb
stc
xor
xchg
daa
repnz
or
test
repz
mov
dec
cmpsb
or
push
jne,pn
mov
movsl
icebp
push
ljmp
insl
jge
dec
dec
shl
cmpsl
or
fimull
sub
loopne
push
in
clc
push
push
cmc
cmp
cld
out
loope
test
stos
in
push
in
dec
and
test
stc
popf
daa
jmp
cmp
xchg
movntq
imul
stos
xchg
adc
adcl
mov
push
mov
dec
sarb
mov
jp
dec
pushf
cmpsl
jp
mov
cmp
fsubl
or
mov
add
jmp
cmp
mov
popa
and
mov
sub
stc
sti
inc
cmp
mov
pop
jp
lret
jmp
fidivs
test
sub
pop
insl
cmp
and
push
sub
jns
jbe
outsb
stc
sahf
rolb
xchg
pop
mov
jae
jecxz
addl
jg
fdivl
out
ret
push
fidivl
fadd
cwtl
pop
int3
movsb
cmp
std
and
fisubl
or
scas
clc
or
lds
dec
and
inc
aad
fbld
aas
dec
pop
add
lahf
daa
cmp
das
cwtl
cs
lret
pop
out
cld
icebp
daa
scas
int3
lret
jbe
dec
addr16
stos
loopne
jle
inc
shl
mov
sbb
jns
mov
cmp
pop
add
dec
pop
inc
and
xlat
xor
or
dec
mov
jae
jge
mov
cmp
mov
push
test
movsl
pop
ret
ret
add
int3
lret
cmpsb
xchg
es
andl
add
and
jno
push
inc
lods
jae
sbbb
mov
or
das
xor
or
cmp
pop
sbbb
test
repz
jg
xchg
xor
cmpsb
popl
cmc
fisubrs
adc
int
jne
frstor
inc
inc
push
jae
lock
cltd
dec
sbb
rep
mov
lds
push
std
xchg
mov
insl
adc
and
or
push
mov
test
cmp
lds
sub
inc
fwait
popf
xor
mov
insb
lock
inc
cmp
xchg
insb
xlat
jp
clc
adc
in
mov
fwait
cmp
push
imul
adc
aas
popa
mov
inc
shll
stos
arpl
leave
js
mov
and
in
out
mov
push
je
sub
push
mov
cmp
mov
ret
rorl
lock
dec
mov
dec
cld
adc
shr
insb
mov
es
ss
mov
dec
incl
add
sub
pushf
sbbb
lret
adc
addr16
imul
or
dec
int3
mov
xchg
in
or
pop
orb
sub
fcomp
cs
imul
mov
shl
sub
push
pop
xor
pop
loopne
push
iret
xor
es
push
aaa
cmp
cltd
xchg
xchg
push
sbb
push
call
jne
ljmp
icebp
arpl
outsl
sbbb
xchg
dec
aaa
pusha
sub
mov
decl
andl
int3
les
bound
jl
sbb
cmc
cmp
or
in
mov
adc
inc
shrl
mov
loopne
sbb
push
outsl
dec
mov
ffreep
cmp
loopne
and
xor
int
daa
cmp
sub
jne
pop
mov
int3
jge
int
push
sub
enter
out
in
test
cmp
jg
mov
sbb
in
sahf
and
sbb
fs
and
jp
std
imul
dec
lods
pop
sbb
data16
sti
sbb
icebp
inc
mov
sub
push
sub
or
pop
popf
xchg
repnz
mov
push
stos
jle
pop
daa
mov
cmpsb
loope
mov
out
mov
sub
xor
pop
xor
daa
call
arpl
test
fldcw
push
mov
outsl
aas
dec
in
pop
cmp
mov
lods
dec
in
adc
ficoml
aaa
pop
xor
or
lcall
ret
shr
insl
and
shlb
mov
cmpl
mov
dec
insl
shl
sub
loop
cs
mov
jl
daa
mov
addr16
and
push
insl
mov
mov
mov
cwtl
mov
imul
xlat
pop
jge
aas
adc
xor
push
pop
or
xlat
and
std
lret
push
lea
movsl
cmp
add
ja
mov
dec
jge
sbb
rol
pop
clc
loope
in
sub
xchg
push
pop
mov
sbb
cmp
mov
jb
in
scas
fistpll
mov
inc
ret
outsb
decl
arpl
scas
loop
pop
imul
mov
stos
sbb
aaa
push
jae
fwait
lods
jg
clc
aas
xchg
mov
cmp
and
insb
push
mov
aam
pop
outsl
lcall
or
test
push
fstl
mov
xchg
cs
dec
and
es
cmp
movsl
in
or
mov
pushf
xchg
mov
cmpsl
sub
push
in
mov
pop
jmp
lods
mov
fstpl
loopne
int
adc
sbb
sbb
push
adc
add
adc
add
and
sub
push
pushf
push
mov
cmp
sbb
push
jb
rep
mov
mov
ss
fmuls
and
pop
sbb
cmpsb
pop
int3
mov
xor
pop
sub
dec
mov
sbb
cmp
push
mov
xchg
hlt
outsl
sub
jne
add
pavgb
push
lods
dec
mov
pop
mov
dec
jnp
divb
jg
cmp
and
out
gs
inc
pop
mov
mov
fsts
pop
popf
push
ljmp
and
xchg
dec
sbb
aaa
push
outsl
xchg
add
cmp
fwait
aaa
aad
mov
mov
pushf
mov
montmul
cmpsb
pop
or
movsl
sub
leave
inc
jge
or
or
out
cld
add
jecxz
mov
mov
scas
outsl
mov
mov
pusha
fisubs
movl
lods
subl
rcrb
or
mov
cmp
std
insb
add
xchg
rorb
mov
cmp
add
add
lods
add
sbb
repz
inc
lods
fisttpl
pop
xchg
pop
test
loopne
or
decl
int
xchg
mov
aam
and
daa
mov
loop
rcr
pop
mov
push
in
int
ret
inc
imul
xorb
inc
shrl
dec
pushf
pop
aaa
std
aas
mov
pusha
ljmp
scas
aas
dec
out
add
in
jmp
inc
mov
sahf
int
xchg
das
shl
iret
xchg
dec
push
call
fdivrl
push
loopne
pop
mov
cmp
sub
enter
jbe
mov
push
xchg
sub
pop
jae
out
js
loop
sub
push
sbb
push
dec
loopne
and
jae
loop
mov
scas
movsl
jbe
lods
inc
add
stc
nop
ss
loop
pop
pop
scas
mov
xor
ljmp
inc
mov
addl
or
arpl
mov
mov
mov
xchg
ds
adc
lds
pop
inc
insb
pop
jo
lea
jb
ds
xchg
sbb
xchg
and
cltd
add
add
jns
arpl
fucomip
xor
insl
mov
aam
mov
inc
aaa
dec
popa
into
dec
pop
enter
scas
and
xor
jl
jp
xchg
out
stos
out
mov
xchg
sbb
outsl
dec
fstl
and
decb
lret
push
movsl
push
test
mov
jmp
andl
xchg
jbe,pn
adc
in
mov
bound
fcompl
cmp
imul
ljmp
and
imul
jnp
in
outsl
xor
filds
adc
std
fcoml
mov
icebp
outsb
cltd
std
xchg
movsl
push
cmpl
sbb
mov
push
call
mov
and
jnp
ss
add
std
mov
ds
aam
in
out
int
imul
decl
jns
inc
cli
test
ss
fwait
push
xor
adc
and
pop
cld
cmc
pushf
test
out
mov
pushf
ja
stos
xchg
mull
sub
rorl
jae
jnp
push
jp
mov
or
ja
push
sub
fwait
jmp
popf
cltd
jl
xchg
push
jns
sti
fisttps
jle
jne
or
aam
push
clc
xchg
popf
jg
mov
sub
add
ds
cmp
or
add
mov
dec
push
or
daa
inc
sub
cmpsb
cmp
dec
leave
pusha
rol
mov
sub
rcrb
add
adc
adc
sahf
popa
cmpsl
sub
add
sbb
fnstcw
clc
mov
mov
repnz
add
cmc
mov
into
pop
inc
shr
dec
loop
es
xor
test
fdivrl
pop
xchg
pop
pop
mov
pop
lock
or
scas
mov
adc
in
vmovmskps
push
or
dec
jge
adc
mov
fnstcw
mov
lea
inc
fistps
xchg
hlt
pop
or
cld
scas
jmp
aaa
aas
cltd
push
lea
aas
push
in
xchg
mov
mov
or
xor
push
outsb
jae
dec
out
mov
push
mov
imul
dec
ljmp
movl
cmpsb
sbb
data16
in
outsl
cmp
jge
aam
add
cmp
hlt
jg
loopne
jmp
push
inc
sbb
call
das
dec
or
sbb
data16
rclb
sub
aam
xchg
nop
call
cmp
loop
push
in
scas
fcomip
jae
or
mov
lods
and
int
xor
loop
sub
fdivrs
push
xchg
sub
xchg
adc
in
fildll
dec
push
int3
push
mov
shl
pop
sbbb
jle
mov
mov
out
inc
leave
fstpt
sub
inc
cmp
or
dec
loopne
jge
jmp
push
mov
mov
repnz
scas
das
fsubr
test
scas
into
addl
inc
out
lods
push
ljmp
dec
fmull
in
pop
cs
fs
xchg
push
js
inc
stos
ja
repnz
pop
mov
fsub
scas
mov
hlt
pop
outsb
clc
leave
xchg
loop
shlb
inc
sahf
jmp
ret
ret
inc
cli
adc
push
in
add
lods
dec
loopne
jl
outsl
shlb
jp
lods
xor
imul
xchg
sub
jge
scas
inc
sti
ss
orl
pop
sub
xchg
cmovge
jne
jns
sbb
or
ficompl
cmp
push
sub
stos
jb
seto
in
fwait
xchg
rcrl
mov
and
and
inc
inc
insb
mov
jle
repz
scas
inc
cmp
nop
pop
addr16
fbstp
repnz
fistl
aam
cmp
and
xchg
jge
pop
aad
add
dec
xchg
fcomps
fisttpl
cld
lcall
cltd
out
mov
jnp
cld
out
jnp
mov
push
and
jne
aas
insl
movsl
mov
hlt
mov
test
or
daa
addb
sbb
ljmp
xor
inc
pop
push
test
test
push
ds
mov
jg
daa
sub
test
leave
dec
fnstenv
adc
clc
push
push
mov
or
push
out
sbb
sub
sbb
pop
jg
jnp
outsb
mov
insb
vprotb
scas
inc
mov
sub
andl
fisubrl
loop
enter
jne
test
call
cmp
gs
jecxz
cwtl
imul
push
test
ja
outsb
or
mov
mov
stos
push
xchg
data16
cwtl
shll
add
in
ret
or
pop
adc
aam
rorb
dec
ds
xchg
mov
xlat
and
std
fwait
imul
fildll
fdivrl
lret
lods
mov
dec
les
xor
and
aad
or
mov
jnp
or
jae
xchg
jns
or
dec
dec
in
jmp
out
sbb
scas
inc
movsb
ja
jb
push
push
mov
and
stos
xlat
jmp
fidivrl
push
fstps
mov
push
in
lret
stos
or
xor
pop
mov
cmp
and
mov
push
cwtl
stos
mov
loope
sub
xor
ds
sub
xor
fcmovu
and
das
push
jecxz
ss
outsl
enter
test
aad
out
mov
jmp
cs
pop
ja
or
pop
xchg
add
mov
andl
aam
outsl
jnp
fsubrs
lods
mov
add
xchg
fdivrs
pop
daa
ja
push
dec
loope
jnp
jnp
sbb
test
sti
sub
andb
lret
jnp
int
mov
out
inc
push
push
jae
outsb
add
xchg
lret
dec
dec
loopne
ret
adc
inc
ret
seta
loopne
cwtl
adc
imul
aas
xor
cwtl
lea
sti
xchg
or
jmp
xorb
jnp
xor
jne
movsb
xor
cmp
sub
xor
mov
xor
fadd
pop
rclb
push
aad
push
jmp
jg
out
push
shr
sti
clc
jg
sub
xor
xchg
xor
add
push
jmp
popf
push
xchg
test
pop
ret
jge
pusha
fistpl
nop
dec
test
andb
lds
int3
rorb
imul
int3
arpl
mov
sub
mov
repnz
arpl
dec
pop
add
loop
lods
xlat
insl
ficoms
push
scas
iret
testb
mov
test
fwait
sub
gs
cmp
out
push
cmp
jecxz
stos
adc
lds
sub
add
lods
into
gs
mov
in
inc
fstps
insl
pusha
pop
jae
pop
cmp
sbb
aam
inc
inc
mov
outsb
pusha
stos
mov
cmp
pushf
outsl
mov
and
dec
jo
movsl
sahf
ror
pop
fsubrl
in
popf
push
enter
push
loopne
cmp
or
pusha
inc
lahf
cwtl
call
add
filds
cmc
mov
out
negl
test
mov
mov
sub
aaa
shlb
popf
mov
cwtl
imul
xor
add
pop
lret
idivl
cli
imul
push
hlt
ds
pop
out
jns
cmpsb
inc
ret
and
gs
data16
ret
xor
hlt
pusha
inc
jecxz
cwtl
test
shlb
fists
mov
addl
pop
inc
xchg
inc
fwait
dec
fwait
stos
dec
sbb
push
xchg
sub
ret
jno
movsl
bound
lods
fdivr
or
and
popf
or
js
dec
insl
inc
and
cmp
push
jo
xchg
or
mov
mov
icebp
or
decb
dec
cmp
imul
jp
xlat
insl
jl
sti
ret
mov
push
sahf
int
inc
lods
mov
mov
divl
sub
outsl
aad
mov
pop
loopne
or
movsb
add
insb
insl
push
sbb
inc
sahf
or
sahf
lahf
jae
faddl
stos
mul
push
add
cmp
push
bound
jle
mov
push
or
jne
jg
call
out
jno
or
add
sarb
mov
add
mov
sub
or
in
loope
test
cmp
mov
fs
inc
xchg
mov
adc
xor
cltd
out
jecxz
cmp
lea
into
pop
sub
mov
cwtl
mov
xor
add
adc
adc
lret
push
enter
mov
mov
add
inc
mov
test
out
mov
pop
xor
movsb
stos
jmp
sbb
out
rolb
popf
dec
scas
dec
jmp
xor
ljmp
cmpsl
lods
mov
push
int
mov
adc
mov
pcmpgtw
loopne
movb
xor
inc
jno
stos
jmp
and
or
lret
test
sbbl
outsb
movsb
loop
int
decl
mov
nop
push
shrb
sbbb
adc
push
jl
adc
test
lret
dec
adc
je
imull
xor
adc
sub
pop
popa
cmpsl
ja
jnp
pop
lods
xchg
mov
add
cmp
push
inc
mov
in
in
xchg
rep
pop
lret
sbb
inc
and
push
test
aaa
ret
adc
sbb
dec
sub
in
cli
inc
icebp
jle
cmp
rcrb
push
push
pop
or
xor
repz
js
outsl
in
loop
or
movq
jge
rol
inc
sub
pop
je
xor
sbb
int
jb
or
adc
xor
xchg
push
mov
sbb
xor
mov
push
xchg
cmpsb
lcall
shlb
jo
std
orl
sub
jecxz
pop
and
xchg
jnp
dec
mov
and
iret
movsb
lods
jmp
in
inc
mov
test
xchg
dec
pushf
adc
aad
jge
aam
cmpsb
lock
ret
outsb
loope
xchg
adc
mov
out
lea
pop
pop
hlt
pop
cmp
testb
test
rcrl
aas
xchg
les
insb
mov
or
pop
lock
popa
out
testb
inc
rcl
in
in
lds
lock
mov
or
sahf
in
jo
xor
aas
xchg
mov
mov
dec
mov
jne
sub
lahf
lea
shll
loop
sbb
mov
xchg
xchg
mov
sarl
xchg
xchg
add
or
and
mov
rclb
xchg
and
mov
insl
shr
jl
aad
insb
scas
dec
dec
pop
ss
mov
mov
lock
rcrl
sbb
idiv
aas
sbb
cmc
mov
lock
mov
shll
sbb
xor
adc
fildll
mov
je
sbb
push
cmpsb
es
fnstsw
adc
add
js
lea
lea
fdivrl
lods
sti
sbb
jg
dec
inc
lcall
or
and
mov
jb
pop
jmp
inc
push
xchg
mov
int
push
fs
xchg
ja
aad
fisubs
repz
pop
xor
test
jge
outsl
mov
dec
stc
add
mov
bound
mov
loope
cmp
lahf
sbb
cli
jge
or
xor
adc
xor
jl
mov
push
sahf
lods
xor
dec
test
stos
icebp
ja
inc
inc
enter
xor
dec
sbb
cltd
aas
push
pop
outsl
jp
pop
clc
das
idivb
sub
stos
aam
shrl
pop
addr16
lods
jo
push
push
int
dec
pushf
lods
dec
mov
addr16
jbe
mov
adc
repnz
scas
xchg
test
cmc
mov
push
xchg
loopne
add
repz
repz
push
mov
jae
daa
sub
xchg
lret
mov
cmp
test
jp
xor
aad
pop
fsubrs
mov
sbb
fnstcw
adc
sti
pop
xor
scas
data16
mov
sbb
or
fsubr
mov
out
pop
in
sub
jge
adc
outsl
mov
add
leave
insb
lods
lds
inc
icebp
rcll
mov
and
cmp
ljmp
and
pusha
addb
cmpsb
std
jp
inc
out
mov
inc
lock
rorb
lods
dec
mov
icebp
xchg
insl
outsl
mov
insl
test
add
sbb
cmpsb
push
add
jle
and
dec
outsl
cmpsb
rcr
adcl
adcb
mov
push
sub
rolb
es
ss
push
je
xor
lret
int3
pop
aam
push
push
fdivp
out
es
out
sbb
jg
or
mov
fwait
mov
test
mov
mov
pusha
int3
inc
sbb
mov
pop
ss
pop
mov
rep
pop
lret
pop
insb
mov
imul
and
jnp
mov
ret
enter
lahf
push
jb
mov
jecxz
inc
inc
xchg
xor
loop
xlat
and
mov
mov
fwait
pop
pusha
sub
rcrb
or
movsb
cmp
dec
icebp
cmp
jl
adc
les
jb
sti
mov
std
cmpsl
loop
fldpi
es
and
pusha
test
scas
fwait
ja
ljmp
mov
push
jl
or
xchg
sub
hlt
imul
lods
sar
int3
mov
int
int
movsb
out
xchg
in
insl
lcall
adc
add
add
or
and
repz
pusha
add
outsl
adc
cmp
nop
adcl
mov
fimuls
std
xchg
xor
inc
xor
in
sbb
push
mov
mov
in
cs
xor
sub
jbe
in
sahf
clc
rorb
orb
jge
push
loopne
mov
int3
add
pop
int3
push
inc
int3
das
inc
popfw
or
lret
xor
ror
out
popl
cltd
xor
sbb
dec
mov
mov
push
das
jo
vzeroupper
testb
adc
loopne
test
pop
jns
dec
cltd
or
cmp
xchg
xor
insb
cmp
das
push
mov
adc
jle
xor
and
std
lret
add
rcll
xchg
pop
test
pop
mov
jge
ljmp
ds
mov
add
je
je
fidivrl
push
lods
inc
cmpb
ljmp
in
cmp
xchg
push
push
xchg
jb
push
inc
pop
hlt
push
fwait
mov
dec
fsubl
loop
rclb
xchg
gs
or
clc
adc
pop
adc
sub
les
dec
adc
mov
pop
push
adc
xchg
lea
stc
fbstp
movsb
jp
mov
out
jmp
inc
mov
les
lds
jge
mov
in
xorl
push
xor
or
pop
ja
enter
jb
or
stc
and
daa
popf
jo
and
fsubrl
mov
pop
xchg
outsb
fstp
das
xchg
xchg
dec
mov
pop
lock
mov
dec
cmp
fstl
xor
sub
dec
xor
xor
out
call
xchg
jbe
loopne
out
ja
pop
pop
cld
rcrl
lahf
shlb
mov
jg
dec
pop
jb
add
push
out
sbb
jne,pt
mov
mov
fidivrs
adc
mov
mov
iret
aaa
sub
add
jbe
mov
movsb
test
inc
popf
repnz
test
movsb
stos
stos
ja
adc
aaa
xchg
popf
push
add
add
push
mov
mov
enter
out
adc
cmc
mov
mov
mov
ja
pop
stos
sub
sbb
xor
inc
insl
rolb
loope
loope
and
outsb
add
push
pop
adc
in
arpl
and
test
icebp
dec
fisubs
sbb
sti
sub
xor
sbbb
jecxz
pop
dec
sbb
jge
mov
xchg
les
out
sahf
les
pusha
jp
dec
dec
mov
scas
ds
aas
push
sarl
xchg
movsb
pusha
stos
mov
cmp
jne
push
and
test
xor
ja
gs
mov
push
add
in
add
mov
js
lret
insl
adc
outsb
mov
cli
cld
mov
adc
aaa
movsb
dec
arpl
jle
test
dec
jnp
mov
repnz
add
lahf
inc
pop
adc
fsub
pop
fisubl
stos
shlb
xor
push
xchg
daa
int3
outsb
sub
pop
dec
cmp
fs
data16
pop
les
loop
fs
pop
add
and
push
xor
mov
fcoms
test
shrl
cmpsl
inc
dec
xchg
add
dec
cmc
xor
cli
movsl
lahf
int
sbb
mov
pop
dec
jb
in
pop
mov
push
sub
mov
bound
add
loop
xchg
dec
sub
sarb
sbb
stos
xchg
mov
inc
cli
jns
icebp
out
sbb
pop
loop
or
aad
fsubl
dec
lret
out
rol
into
mov
dec
out
ds
hlt
mov
xchg
outsl
jl
in
test
and
out
and
les
ret
push
hlt
jg
bound
loopne
push
xlat
xor
jecxz
adc
mov
mov
adc
xlat
icebp
dec
fs
sub
scas
xor
push
cli
inc
xor
fs
mov
pop
dec
mov
dec
mov
iret
ret
push
jle
push
inc
out
aas
sahf
cmp
mov
aas
aad
call
pop
xlat
and
fldenv
sub
mov
frstor
leave
xchg
scas
dec
loope
rcll
and
incl
test
inc
or
jmp
aad
repnz
xchg
adc
ljmp
sar
cwtl
mov
stos
jp
pusha
shr
mov
cmpb
push
sahf
stos
mov
jae
sub
cs
bound
in
sub
andl
jo
fcmovbe
popf
lods
add
and
out
xchg
push
mov
clc
nop
or
push
mov
sub
loop
mov
rol
inc
pusha
in
loop
lea
sub
xlat
cwtl
aad
add
cltd
mov
add
pusha
das
dec
fisubl
repnz
addr16
mov
test
aam
popa
xor
sub
push
push
in
sub
adc
enter
not
sar
xchg
aaa
pusha
cmpsl
and
mov
ret
dec
mov
mov
test
pop
aam
sarl
fcomi
mov
mov
movsl
sbb
sbb
adc
inc
mov
test
adc
mulb
mov
push
subb
cmp
mov
cmp
xor
sahf
sub
or
cmc
mov
push
pushf
add
mov
lret
and
dec
jo
jge
rcll
cmp
inc
or
xchg
fiadds
or
mull
pop
insl
je
insl
iret
mov
lret
shll
jmp
sub
xor
inc
mov
mov
mov
fimuls
xorps
roll
negb
scas
sub
push
cmp
enter
dec
and
stos
aam
cmp
notl
adc
ja
xor
fwait
mov
or
clc
mov
filds
or
shl
stc
out
mov
inc
sbb
fnsave
sub
ucomiss
pop
outsb
pop
in
sbb
jne
add
shrl
cmp
mov
js
insl
sbb
pop
jns
dec
push
outsl
sbb
mov
insl
mov
or
out
lcall
sbb
arpl
jbe
lock
xor
cmpb
loop
fdivp
cmc
ljmp
add
out
int
xor
nop
mov
sbb
sbb
stos
gs
out
inc
insl
mov
notb
clc
and
sub
shrb
pop
mov
adc
pusha
xor
into
lock
pop
xor
sub
mov
xchg
mov
jl
push
jno
xor
cmpsl
mov
lods
xor
test
jp
enter
pop
popf
xor
mov
cmp
mov
mov
cmc
xlat
mov
xor
lret
iret
jno
cmp
repnz
ja
push
gs
test
int3
pop
or
sbbl
rcll
xor
or
lcall
jne
mov
shll
rorb
ljmp
and
pushw
push
pusha
jecxz
addl
call
aas
sub
aas
mov
arpl
loopne
and
ret
inc
add
sub
int3
out
mov
out
sar
testb
cmpb
pop
mov
loopne
xor
xor
andl
pop
inc
mov
mov
data16
xor
jbe
push
push
pop
adc
ljmp
flds
pop
adc
and
call
leave
cmp
repz
test
popa
hlt
add
es
mov
inc
fdivrl
leave
pusha
scas
xchg
std
xchg
stos
xor
adc
sbb
ja
lods
mov
imul
movsl
gs
movsl
mov
mov
ljmp
lods
add
aas
inc
je
cmpsb
and
push
loopne
clc
and
loop
and
or
pop
mov
test
sbbl
add
pop
push
cmpsl
pusha
rcl
out
pusha
fistpll
pop
add
and
fwait
adc
inc
mov
cmp
cmp
pop
mul
pop
imul
adc
subb
decb
int3
or
rcll
or
pop
lock
cld
scas
xchg
nop
inc
sub
add
lcall
push
dec
ds
push
dec
inc
adc
std
cmpsb
mov
pop
add
mov
repnz
and
and
xchg
xchg
pop
les
ret
mov
jnp
addr16
push
shlb
test
cwtl
out
sub
pop
lret
je
mov
fmull
or
repz
int
cwtl
add
out
mov
mov
xlat
ss
cwtl
repnz
out
out
jne
and
in
pop
int3
adc
cli
rcrl
in
sub
mov
daa
jmp
jp
shl
ljmp
pop
int3
jg
pop
je
push
lock
das
inc
inc
jge
mov
lock
lret
jne
cmp
clc
arpl
scas
sub
dec
xor
pop
mov
mov
xchg
xchg
pop
push
scas
push
insb
dec
imul
lock
pop
xchg
xchg
in
shlb
cs
mov
fstl
insl
or
inc
cmp
cmp
scas
sbb
jg
stos
std
gs
and
notb
and
sahf
ds
loop
std
pop
push
mov
sbb
sarb
jg
or
loop
push
sbb
mov
push
and
mov
fcompl
outsl
mov
jns
and
mov
in
push
push
and
shll
add
adc
cmp
insb
fidivs
into
sahf
mov
cmpsb
dec
sbb
lock
xchg
mov
dec
stos
pop
testl
add
mov
push
adc
xorl
popa
pop
fidivl
inc
pop
pop
stos
out
fdivrl
mov
stc
dec
sub
rcr
push
out
cld
pop
stos
jmp
movsl
jg
push
mov
mov
scas
lea
in
into
xor
mov
mov
mov
jns
push
and
jle
inc
mov
adc
mov
sahf
jae
inc
out
into
in
cmpb
pcmpgtw
mov
mov
mov
xor
out
inc
adc
orb
inc
ret
inc
push
lock
insl
stc
mov
ficomps
adc
hlt
pop
jbe
mov
mov
pop
sti
dec
pop
fcoml
ficoml
lret
adc
xchg
scas
dec
add
into
pop
fnstcw
daa
mov
sbbl
xchg
and
dec
loope
into
ja
sbb
repnz
insb
jge
inc
sub
sarb
dec
enter
cmpsb
sub
mov
or
xor
arpl
cmp
dec
mov
dec
mov
jno
cmp
push
adcb
mov
push
fs
insl
pop
or
jbe
mov
aam
mov
in
mov
lods
pop
xlat
and
cld
lods
out
cmp
adc
iret
push
js
dec
in
jle
in
loop
add
xor
stc
xchg
dec
les
div
cltd
outsb
fildll
cli
gs
jae
sarl
fistpl
mov
push
jp
out
xor
clc
cmp
pop
push
fiaddl
movsb
jne
bound
inc
fldl
adc
ja
lods
jmp
xlat
add
xor
mov
xchg
push
mov
add
cmpsl
push
sti
divb
mov
arpl
cs
scas
leave
inc
gs
lods
iret
fdivrl
mov
movsl
xor
add
sub
or
dec
xor
mov
or
sbb
pop
and
mov
mov
andl
mov
cmpsl
notb
add
pop
notb
jb
lcall
lcall
cs
inc
stos
das
mov
push
cmp
incb
mov
push
sbbl
sbb
aaa
dec
cmp
clc
imul
or
jl
or
insl
sbb
inc
leave
dec
dec
lock
orb
jnp
dec
jb
roll
mov
jne
int
mov
sub
push
jge
shll
aam
mov
nop
or
jle
push
add
nop
addr16
repnz
jmp
icebp
test
cmp
subb
adc
je
mov
fstpl
sub
sub
shlb
mov
push
jne
stos
int3
pop
push
inc
and
jge
xchg
xchg
mov
push
stos
jmp
xorl
pushf
scas
jmp
jae
fs
jb
adc
ds
aam
jecxz
adcb
add
sarb
sbbb
outsl
aas
xor
test
pop
cli
addl
cmp
es
std
or
pcmpgtb
push
and
cmp
stc
ret
in
adc
jb
call
xchg
jg
lds
hlt
adc
loop
aam
pop
sub
mov
lahf
ja
inc
cbtw
mov
gs
gs
cmp
ss
and
adc
adc
into
and
fs
fwait
popf
jmp
mov
add
test
sub
cmp
loop
jb
pop
pushf
xor
mov
cmp
xchg
clc
push
mov
lcall
stos
cwtl
lods
test
int3
jbe
outsb
fdivrp
cwtl
mov
out
dec
aas
jno
jg
ljmp
push
les
test
lret
adc
dec
in
lahf
and
push
push
dec
mov
inc
fwait
xchg
jb
cmp
inc
icebp
pop
cmp
call
mov
test
dec
and
cmc
call
jmp
xchg
push
add
loopne
mov
xchg
inc
pop
mov
lds
pop
ret
jne
and
and
adc
lock
mov
cs
addr16
fwait
test
jmp
stos
fsubr
xchg
scas
sbb
scas
push
icebp
or
mov
cli
lea
jae
dec
aaa
cmp
xchg
ret
repnz
je
sbb
mov
in
xor
sbb
and
and
sub
push
xchg
xor
xchg
add
test
test
mov
mov
aad
dec
dec
mov
int3
frstor
notb
rcr
jecxz
cmpsb
push
jbe
dec
xchg
mov
mov
and
lods
xlat
lds
pop
lods
out
jns
add
imul
ljmp
jp
mov
mov
add
xchg
add
mov
out
xchg
scas
sub
xchg
movsb
jge
pushf
in
push
sbb
dec
mov
sub
dec
push
sbb
jmp
cmp
push
scas
jp
mov
xchg
and
rcl
inc
cltd
js
dec
mov
and
sbb
inc
push
dec
add
lcall
and
cld
andl
xchg
mov
push
out
arpl
inc
das
push
mov
mov
dec
jecxz
and
push
popa
repnz
mov
jno
xor
in
add
mov
push
int
data16
das
out
inc
jo
pop
je
nop
packsswb
pop
out
mov
pop
mov
dec
js
jge
sbb
mov
cld
mov
or
add
fistpll
or
icebp
orl
xorl
call
dec
or
push
pop
sub
pop
cmc
mull
dec
fbstp
das
inc
outsb
sbb
add
xchg
jnp
jbe
sahf
aaa
pop
inc
stos
adc
adc
bound
stos
mov
outsl
aad
je
iret
in
add
push
aad
lods
jns
fdivp
cmp
push
rcrb
pop
lds
loopne
dec
adc
sbbb
imul
add
iretw
dec
push
cltd
xor
and
and
xchg
dec
ret
pop
mov
fwait
sarl
into
aaa
sar
jge
add
and
cmp
add
xchg
mov
ficoml
dec
sarl
xchg
push
or
addl
pop
and
adcb
nop
mov
inc
xchg
pop
shl
mov
gs
and
add
add
ffree
add
sbb
out
sbb
mov
xchg
mov
inc
xchg
mov
shll
sbb
add
pop
ss
popf
xor
push
sbb
rolb
or
xchg
divl
lods
nop
push
add
pop
jbe
xchg
dec
ffreep
xchg
icebp
add
pop
fwait
sahf
es
in
pop
fcompl
loopne
adcl
testb
daa
xchg
or
leave
xchg
shl
add
ljmp
mov
lcall
lock
sub
ja
outsb
fmul
test
mov
clc
bound
mov
addr16
in
jp
add
dec
mov
iret
pop
sbb
scas
sbb
cwtl
stos
test
sub
popf
out
mov
cmpsl
mov
xchg
sub
adc
inc
gs
inc
push
cmp
in
cltd
stos
out
nop
cmc
jg
fs
lcall
lahf
jl
dec
push
mov
rcrl
pop
sub
xchg
ficomps
in
in
imul
cmp
lock
inc
cmp
inc
pushf
adc
lcall
cwtl
add
scas
jno
pop
sbb
je
add
push
push
mov
cmp
lds
mov
ds
mov
and
jb
and
cli
data16
or
aas
adcb
and
cmc
gs
lods
arpl
ja
aaa
sub
pop
jmp
cwtl
xor
jne
jae
sub
pop
out
rcrb
and
dec
in
jno
add
loope
dec
arpl
ficomps
push
dec
loope
cmp
stc
inc
jmp
lods
cmpsb
mov
sahf
les
lods
xor
push
xor
les
push
inc
gs
xchg
push
int
imul
jo
xor
movsb
jno
dec
pushf
orb
mov
jle
test
out
aas
call
loope
pop
negl
jl
push
gs
nop
jg
scas
cmp
xchg
pop
and
xchg
sbb
ds
jo
into
gs
jge
cli
mov
in
fwait
push
jnp
mov
inc
and
and
sub
adc
cmp
mov
cltd
lret
xor
cmp
xor
outsb
or
outsl
stos
xchg
push
fldcw
jp
arpl
adc
shrl
es
push
nop
or
aad
loopne
xchg
addr16
out
lcall
pushf
add
jae
out
push
or
adcl
shlb
xor
sbb
lret
mov
pop
dec
lahf
jmp
mov
stos
movsb
inc
popa
out
lcall
mov
mov
aas
dec
pop
sbb
jmp
cmp
dec
ror
jmp
fmul
push
dec
cmp
or
pop
dec
xchg
xchg
cld
xchg
rol
pop
popf
insl
in
fucomip
pop
push
lahf
out
xlat
stos
movsb
test
or
scas
cpuid
jbe
xchg
sub
mov
ror
das
imul
icebp
inc
pop
int
and
in
icebp
push
inc
outsb
sub
fadd
mov
mov
adc
cmp
mov
clc
inc
les
cld
xor
sub
push
mov
inc
fcomp
push
mov
es
aam
sbb
mov
lcall
push
mov
sub
ret
ss
pop
push
insl
sahf
dec
lods
cmp
cmpsb
adc
push
mov
mov
into
testl
popf
xor
mov
mov
and
stc
ret
mov
mov
mov
jmp
lea
leave
and
cmpsl
es
fsubrs
and
fwait
mov
bound
lods
push
push
and
lret
popa
cli
cmp
xchg
mov
idiv
clc
cmp
shll
cs
adc
xorl
xlat
fimuls
and
cwtl
pop
call
sti
ljmp
mov
addl
test
pushf
xor
cmpsb
sbb
add
pop
incl
fwait
dec
test
out
and
popf
inc
lret
inc
lret
gs
inc
scas
pushf
fisttpll
mov
fdivs
xlat
fstps
mov
adc
mov
je
inc
dec
pop
rorb
stc
adc
push
outsl
push
xor
insl
daa
dec
pop
pop
cmpsl
xchg
sub
testl
sbb
jae
jmp
sbb
aam
dec
lret
mov
mov
mul
dec
sub
mov
cld
or
subl
sar
jo
xor
roll
repnz
sub
or
fwait
pop
call
and
mov
adc
jae
pop
lods
ja
fisubrs
iret
mov
pushf
bound
sub
or
movsl
sbb
push
inc
inc
mov
inc
xlat
test
sbb
xchg
lds
idiv
mov
pusha
je
sbbl
push
and
loope
lret
sub
adc
icebp
je
int
flds
out
call
les
push
lock
fdivr
enter
paddusb
jmp
in
mov
xlat
ljmp
sub
aad
sbb
jo
mov
neg
gs
sub
pop
ja
in
pop
lcall
dec
pop
inc
ljmp
stc
add
lret
sub
push
xchg
sbb
ss
jb
dec
test
push
out
xor
pop
mov
fsubrs
aaa
jmp
and
roll
js
dec
ljmp
adcl
sti
cmp
mov
sti
stos
leave
inc
xor
adc
out
test
loopne
daa
jns
aad
push
ss
imul
lea
cmp
or
cmpsl
outsl
aam
lret
lea
cmova
clc
xchg
mov
dec
lock
jecxz
xchg
adc
pop
sbb
sub
mov
add
negl
cmpsl
insb
int
fnsave
outsl
push
sbb
imul
and
test
push
inc
jno
xchg
lret
lods
or
fucomip
aas
dec
and
addr16
iret
call
sarl
pop
imulb
les
or
stos
imul
pusha
mov
clc
lcall
mov
repz
lock
lret
lret
xor
lret
hlt
popf
xchg
daa
push
mov
xor
sbb
outsl
js
adc
xchg
mov
popf
jae
jns
test
pusha
aas
inc
in
mov
insl
xor
push
decl
les
adc
inc
shl
jle
push
or
subb
pop
cmp
push
jno
cld
add
push
mov
pop
hlt
inc
add
or
aaa
mov
pop
jb
pop
mov
push
fs
xchg
mov
cli
pop
cmp
xor
push
fcoms
xlat
movb
xlat
repz
leave
test
mov
mov
imul
sahf
pop
jo
sti
es
jno
push
cs
add
mov
aam
icebp
pusha
test
jmp
repnz
lahf
xor
push
add
test
inc
into
pop
loope
icebp
mov
xchg
push
in
les
cmpsb
rcrb
adc
mov
into
subb
mov
test
and
movl
mov
lods
pop
inc
adc
or
lds
movsb
dec
ficoml
xchg
fdivrs
lds
shr
mov
adc
mov
and
mov
push
cmp
mov
cmp
rcr
test
into
mov
jg
test
in
nop
movsl
cmp
imul
xor
mov
mov
sahf
js
mov
pop
inc
push
repz
sbb
sbb
sbbb
mov
push
out
or
jg
ljmp
in
loope
xor
icebp
mov
sbb
mov
cmp
mov
pop
adc
inc
mov
loopne
sub
jl
sub
lret
fstps
inc
pop
sbb
lahf
outsl
in
pop
push
out
mov
js
movsb
cld
outsl
cltd
aad
out
dec
cld
daa
lcall
int
mov
lret
xor
add
jo
xchg
pop
nop
daa
push
mov
mov
xor
int3
jg
fldenv
mov
cmpsb
inc
test
cmp
cwtl
or
out
pop
sub
mov
inc
or
and
ret
in
cmc
pop
out
insb
repnz
imul
enter
adc
dec
pop
dec
cwtl
cwtl
das
lret
pop
mov
mov
xchg
xchg
leave
mov
sahf
push
lods
push
sbb
push
jnp
addr16
pop
ljmp
or
jbe
fwait
push
sub
mov
out
orl
or
insl
inc
sub
pushf
pop
jb
dec
mov
loop
jo
sbb
adc
xor
out
sahf
test
insb
sub
ja
mov
fimuls
lret
lea
icebp
pop
cmp
sbb
and
mov
pop
fcompl
jb
std
pushf
sub
cli
dec
and
nop
and
xchg
inc
adc
and
cs
dec
xor
cmc
push
test
mov
int3
out
int
insl
hlt
jae
cmp
jo
ds
adc
rorb
cmp
xchg
push
or
xlat
xchg
sub
addr16
xlat
jae
mov
lock
std
inc
std
mov
mov
rclb
sahf
push
mov
adc
and
sbbl
cmp
pop
in
inc
dec
mov
jl
out
nop
sbb
and
or
out
icebp
mov
ss
push
inc
loope
inc
sahf
ret
fdiv
fdivrs
mov
test
das
add
mov
cli
out
mov
sbb
jl
xor
sbb
and
or
test
add
mov
adc
or
ffreep
leave
test
sbb
push
sub
lret
lods
clc
xor
rorb
in
mov
sub
scas
inc
fsubl
adc
sbbl
sete
imul
jmp
addr16
adc
je
or
jo
sub
in
pushf
inc
add
stc
popf
mov
or
outsb
pop
orb
in
push
shll
add
lods
mov
dec
xor
out
sbb
mov
cmc
pop
cwtl
shrl
daa
and
pop
ss
inc
push
popf
in
fs
mov
enter
imul
cmc
out
mov
push
and
and
sub
idiv
lret
xchg
mov
xor
jmp
mov
ljmp
cld
adc
mov
ja
test
mov
adc
xor
mov
sub
inc
loop
xchg
js
das
stos
dec
nop
inc
mov
mov
mov
ljmp
lret
stc
dec
repz
jne
daa
vmovntps
cmp
mov
jle
popf
sub
and
jg
pop
lock
sbb
je
ljmp
ret
loopne
sti
ror
mov
es
jo
mov
mov
jmp
or
jbe
push
pop
rorl
dec
clc
jle
in
ds
pop
gs
lds
arpl
sahf
pop
xor
dec
add
int
dec
lods
repz
jmp
int
data16
sbb
push
sbb
adc
pop
or
dec
adc
mov
xchg
lds
inc
sahf
into
mov
loope
dec
insb
inc
jge
fisubrs
xlat
mov
dec
stos
mov
pop
add
jg
mov
lods
inc
data16
jno
pop
int3
repnz
lods
fsub
aad
or
adc
and
push
mov
nop
dec
push
or
cs
fsubs
orb
fidivl
jns
movsb
mov
ret
mov
popf
sbb
inc
mov
mov
adc
pop
leave
mov
movsl
cmp
pop
enter
mov
or
sbb
mov
dec
fpatan
jl
xchg
mov
loopne
test
in
fs
popa
std
or
sub
lcall
loop
les
aad
ljmp
pop
mov
sbbb
pop
scas
and
mov
push
jmp
dec
xchg
and
je
mov
call
push
enter
je
xor
out
push
dec
movl
push
xchg
sub
jne
add
movsb
mov
and
and
pop
mov
cmp
xor
mov
cmp
popf
ss
xchg
add
xor
out
jmp
daa
sub
inc
inc
xchg
movsb
dec
loope
jg
lret
fwait
pop
addr16
jno
jns
jbe
jge
in
movsb
test
cmp
orl
mov
iret
in
dec
in
sub
fdivrs
mov
insl
sub
js
dec
dec
scas
inc
mov
mov
push
out
pusha
mov
xchg
nop
pop
adc
cmpsl
outsb
push
pop
adc
mov
xchg
xchg
sbb
jecxz
in
nop
add
xor
ret
or
in
push
sti
or
sub
jge
mov
or
jo
inc
aaa
into
jne
xchg
add
lea
cmp
xchg
pop
or
loopne
gs
xchg
cmp
mov
ret
fisubrl
lods
jns
sub
pop
and
aaa
fxch
fwait
add
lock
cltd
stos
addr16
je
cltd
test
mov
je
cld
fstpl
pushf
adc
call
scas
packssdw
inc
hlt
jne
mov
sbb
enter
bound
mov
push
sbb
sahf
xor
sbb
andb
les
addr16
enter
cmp
inc
lcall
inc
fcompl
adc
out
jnp
mov
or
mov
out
pop
sbb
dec
inc
loope
sbb
mov
pop
cvtpi2ps
ss
mov
push
gs
sbbb
push
popa
adc
add
mov
cmpsb
ja
fldt
rol
sbb
movsb
inc
xor
inc
jnp
sub
or
mov
mov
shrb
lods
mov
stos
aas
fsub
lret
add
push
cltd
xchg
mov
je
or
push
nop
daa
adcl
test
xor
leave
lahf
ss
addr16
popf
leave
sarb
sbb
mov
sbb
outsb
mov
cltd
lret
es
mov
pop
xor
jnp
loope
jb
cmp
cmp
hlt
mov
mov
or
fistl
into
fisubrl
insl
or
push
out
adc
orb
sbb
shlb
mov
popa
or
outsb
outsl
sti
xchg
mov
cmp
add
add
mov
popa
mov
fwait
ja
test
rclb
xorb
mov
xor
push
ss
sbbl
stos
hlt
movsl
push
in
clc
push
in
out
imul
stos
cmp
add
mov
cmp
and
adc
dec
lods
shl
shrb
fldt
nop
sahf
lock
fadd
rcll
sbb
or
aaa
or
xchg
sub
fwait
nop
dec
push
add
repnz
rolb
xlat
add
fiadds
idivb
add
outsb
loop
jl
adcl
popf
in
cs
jp
arpl
fwait
push
lods
lret
cmp
xchg
call
inc
mov
push
ss
stc
pop
stos
xor
push
js
out
ja
cltd
fsubrs
fimuls
push
mov
cs
daa
dec
int3
fsubs
mov
subl
sbb
sub
pop
sbb
xor
adc
push
jbe
insb
xchg
dec
or
sub
xor
sbb
data16
mov
sbb
sbb
inc
and
sti
cmp
mov
jl
rcrl
sbb
push
jg
stos
popf
or
and
jne
jae
or
mov
dec
iret
sbb
cmp
sbb
and
xchg
inc
mov
sub
fmuls
lahf
dec
inc
mov
cltd
and
cli
push
mov
mov
outsl
sub
insl
sti
dec
mov
mov
js
fildll
rorl
imul
lea
pop
cli
sbb
mov
call
jg
in
test
xchg
push
dec
inc
lods
pop
inc
loop
into
adc
xchg
mov
test
into
add
shlb
and
mov
dec
mov
jg
stc
or
xchg
dec
ffreep
scas
scas
mov
lcall
mov
mov
les
jno
xchg
inc
xchg
mov
and
div
arpl
inc
rclb
xchg
js
enter
jns
aas
xchg
fnstsw
mov
leave
stos
inc
jg
shrl
mov
add
xor
jge
mov
mov
or
pop
mov
and
cmp
shl
and
mov
dec
cmp
xor
jne
sub
mov
mov
lea
loope
push
pop
shrb
stc
jp
mov
jo
and
inc
outsb
and
cmc
lods
mov
inc
leave
adc
dec
out
pop
xlat
mov
mov
mov
rcr
data16
fmull
push
int3
je
mov
pop
repnz
xlat
xchg
xchg
nop
loop
jo
lods
cmp
fucomp
fcmovnb
dec
push
push
lcall
inc
cwtl
cld
std
fcomi
movsl
in
ficoml
cmp
cmc
pop
and
mov
xor
cmp
inc
lahf
fsubl
stc
mov
mov
or
or
xchg
insb
sub
pop
out
sbb
mov
pushf
fldenv
lcall
dec
dec
cmc
add
gs
les
aas
inc
xor
and
flds
or
bnd
aas
push
mov
mov
test
jecxz
insl
cwtl
cmp
lods
fisubrl
mulb
stc
push
aad
pusha
int
mov
ret
or
mov
or
stc
adc
adc
sbbl
mov
ficoml
notl
and
mov
and
xor
andb
leave
jae
jp
gs
jp
xchg
enter
aas
mov
xor
cmp
aad
push
lods
xchg
repz
lahf
aam
jne
iret
addr16
popa
add
mov
je
xlat
dec
sbb
mov
popa
fidivl
out
rcl
mov
mov
sub
aad
les
mov
stos
test
mov
repnz
popf
cmp
jg
xlat
cwtl
insl
cmp
mov
lea
adc
sbb
sahf
clc
jnp
xor
or
mov
sub
and
stc
ss
push
push
dec
dec
pop
hlt
inc
cs
push
movsl
xor
dec
fwait
test
jl
mov
push
xchg
push
popa
stos
pop
pop
cmpsb
sahf
mov
mov
pop
jbe
stc
test
or
and
push
fsubr
push
idivb
shrl
lahf
mov
rcl
push
outsb
or
sub
jae
dec
shlb
repnz
lret
sahf
sbb
repnz
cmpsb
outsb
push
jns
lds
mov
adc
pop
sub
mov
addr16
dec
inc
adc
add
in
and
adc
sbb
and
xchg
test
popf
popf
mov
adc
sbb
dec
in
jge
mov
dec
inc
fiaddl
pop
jecxz
shlb
mov
into
pop
jg
pop
pop
dec
or
dec
leave
sti
pop
push
je
sbb
repz
jbe
sub
and
xchg
and
lret
popa
adc
jno
pop
leave
mov
xor
xabort
cs
out
hlt
dec
fstl
flds
jnp
cmp
push
xor
pop
js
das
cmp
test
fistpl
jo
jp
popa
fcos
lahf
sub
icebp
in
xchg
mov
or
jmp
iret
icebp
mov
aas
push
push
and
pop
stos
sub
jo
push
mov
lahf
mov
shl
add
inc
and
push
xchg
push
and
mov
and
add
iret
sub
fwait
lret
xchg
adc
xchg
cwtl
mov
fisubl
dec
mov
inc
out
push
and
push
sub
aaa
jp
mov
inc
sub
clc
mov
sbb
notl
mov
and
pop
cli
sub
push
mov
add
daa
outsl
jp
cmpl
cwtl
cmp
pushf
lods
loop
imul
decb
pusha
mov
out
pop
fwait
mov
mov
xchg
shrb
sub
mov
jp
dec
aas
mov
cld
mov
daa
int
xchg
xor
fnstcw
sub
test
xlat
push
clc
mov
test
inc
test
xor
mull
ja
out
xchg
and
mov
sbb
lcall
xor
or
inc
push
cwtl
adc
je
adc
insb
scas
or
cwtl
adc
imul
stos
das
mov
push
test
es
cmc
sbb
pop
andl
add
dec
stc
sub
xor
stos
mov
nop
jae
or
aas
aad
pop
and
data16
jno
xor
mov
fisubrs
cltd
std
push
test
xor
mov
push
js
sub
mov
shlb
inc
pushf
dec
repz
imul
xor
outsl
pop
loop
or
and
mov
dec
in
test
fcomp
sbb
rcll
sti
or
pop
cli
pushf
arpl
ja
stos
cs
scas
stos
push
mov
ret
sub
cmp
cmp
imul
stos
cmp
or
sub
int
into
test
icebp
aaa
inc
daa
mov
pop
rolb
movd
lahf
scas
xor
add
bound
add
lcall
cs
repz
rorl
adc
test
hlt
in
repnz
mov
lock
push
sbb
ds
sub
xor
jmp
out
test
adc
push
int
js
notl
cmp
pusha
adc
leave
jge
inc
hlt
outsb
dec
test
cmpsb
or
mov
pop
push
mov
movsb
in
in
ljmp
lods
cmp
ja
cs
pop
xor
mov
clc
mov
bound
dec
mov
ret
rcll
leave
mov
jo
movsl
stos
cmpxchg
add
mov
shr
jg
pop
add
push
mov
cmp
cmpsb
adc
loope
ret
repz
dec
filds
mov
iret
data16
mov
mov
mov
in
xchg
stos
stc
or
xor
jecxz
arpl
ds
cwtl
and
leave
and
adc
and
push
sahf
cmc
or
mov
outsl
loop
adc
mov
add
and
pop
in
imul
aas
xor
outsb
jle
pop
inc
fs
mov
and
pusha
and
maskmovq
testl
xor
lods
jno
dec
mov
jb
sarb
mov
adc
or
adc
sbb
xchg
stos
ror
cmpsl
ds
stos
test
jp
movsl
cmpsb
mov
stc
mov
popf
inc
jecxz
daa
and
jno
mov
ss
jp
pop
mov
scas
or
ds
push
cltd
dec
mov
push
add
mov
sarl
mov
sbb
sbb
mov
nop
andb
mov
and
out
sbb
jae
push
jno
nop
dec
inc
sbb
mov
daa
xchg
into
test
test
lods
lcall
cli
fdiv
mov
addr16
lahf
imul
inc
cmpsb
adc
mov
and
xchg
push
sub
dec
inc
lock
xor
loope
pop
daa
ret
mov
repz
mov
lods
ljmp
sbb
insb
xchg
int
mov
cmp
daa
gs
mov
xchg
or
in
mov
inc
popa
and
and
mov
xor
int
mov
fsubp
mov
movsl
cmp
jecxz
dec
push
mov
lock
xor
and
dec
pop
call
in
xchg
sbb
jge
shlb
pop
stos
cs
xlat
push
inc
pop
adc
sar
popa
pop
test
fwait
sbbb
mov
add
cld
cmp
dec
pop
inc
popa
js
adc
enter
fidivrs
adc
xchg
jp
fstpt
test
je
and
adc
cmpsl
lds
repnz
cmpsl
sbb
xor
push
insl
add
pop
ret
xchg
xchg
cmpsl
pop
iret
mov
sbb
orl
movsl
mov
test
xor
xor
sbb
movsb
insb
idiv
push
jo
in
outsb
dec
jne
push
and
int
inc
fmuls
or
push
scas
pop
jno
push
repnz
fmull
and
xor
int
pop
cld
pop
dec
mov
ret
and
mov
in
lret
or
imul
push
inc
insl
lock
dec
push
cmpsl
mov
pushf
and
jnp
cmp
lds
pop
out
mov
jbe
inc
and
inc
loop
jbe
push
xor
pop
mov
cwtl
mov
lods
inc
cmp
iret
pop
xchg
push
imul
sbb
test
xor
das
fs
add
mov
hlt
clc
bound
iret
cwtl
divb
insl
std
sub
inc
mov
xchg
mov
xchg
std
gs
mov
sub
fisubrl
sub
push
xchg
outsb
xchg
fists
shl
aam
mov
repnz
mov
test
xchg
xor
jmp
repnz
lods
inc
push
and
cmp
jecxz
xchg
shufps
icebp
test
mov
outsb
mov
fcomi
push
jp
add
mov
rolb
add
mov
movsl
adcb
jle
in
jbe
cmpsl
ds
cwtl
fwait
push
out
sub
in
cmp
sarl
push
mov
add
sbb
jno
lock
push
mov
mov
jno
sahf
mov
push
sub
imul
jg
jns
test
fs
xor
sbb
add
mov
psrad
test
in
aad
jecxz
mov
insl
dec
or
mov
loop
push
fadd
push
inc
enter
daa
push
js
mov
or
popf
and
lods
push
mov
fstpt
loope
xchg
mov
add
xor
push
sbb
in
imul
es
sbbl
xchg
addr16
dec
lcall
scas
add
test
popa
push
sbb
or
xchg
imul
xorb
inc
push
sbb
jmp
push
int3
mov
clc
sahf
negb
rcrl
cmp
std
and
pusha
push
adc
lea
lds
cld
or
mov
mov
in
xchg
cmc
and
filds
test
ret
loop
fsubl
xchg
roll
add
inc
or
xor
pop
sarl
xchg
xor
sub
xor
mov
cmpsl
or
adc
ret
jle
rcrb
pop
or
add
push
cmp
inc
xchg
popa
xchg
loopne
and
mov
push
ja
sbb
pop
iret
add
add
xchg
cmpsl
stos
lcall
jne
iret
cmp
mov
cmp
sub
xchg
inc
ficoml
mov
aad
popa
push
loopne
ret
push
ljmp
lock
mov
fcmovne
push
xor
push
fstp
sub
movsl
mov
inc
push
aaa
cmp
jbe
mov
adc
lods
rcl
push
sarl
out
jl
add
iret
imul
mov
test
jns
mov
mov
xor
mov
or
stos
sub
dec
adc
js
mov
cmp
sub
jg
das
les
aam
push
sahf
or
rep
jns
sahf
adc
std
inc
in
inc
sbb
and
jg
cld
mov
sub
imul
jp
dec
bound
sbb
repz
xlat
add
push
sbb
ss
pop
inc
push
pop
mov
lret
in
cmp
sub
mov
aam
sub
jecxz
mov
sahf
xchg
xor
scas
sbbb
sub
push
mov
cmc
vmwrite
aam
cmp
lret
bound
sbb
mov
aas
bound
stos
ret
ret
jne
cmp
push
sahf
into
nop
repz
out
and
add
sahf
scas
inc
mov
pop
movb
jge
or
nop
cmpb
sub
mov
aaa
test
scas
cli
pop
iret
cmpsl
jo
fcmovb
mov
sub
mov
test
pop
mov
dec
add
push
jg
out
push
sbb
lds
lock
std
movsl
jp
rclb
icebp
pop
jbe
dec
daa
or
mov
cmp
cwtl
notl
mov
test
cld
pop
push
dec
arpl
daa
mov
pop
std
jp
xor
cwtl
cs
xor
pop
mov
cmp
sbb
dec
cmp
mov
push
gs
inc
mov
inc
and
fpatan
stc
in
stc
dec
aas
and
bound
stos
mov
xor
mov
pop
mov
pop
sub
pop
fs
jecxz
and
icebp
add
inc
cmp
in
mov
mov
lods
add
jo
xor
testl
pop
sbbb
dec
mov
jge
jg
sub
out
push
xor
mov
mov
je
xor
pop
insl
cmpl
ja
mov
cmp
negl
mov
push
scas
and
mov
outsb
je
mov
outsl
sbb
cltd
test
pop
repz
or
fwait
outsl
ljmp
push
jnp
addr16
jae
in
jge
mov
push
aad
lret
imul
xchg
xchg
jne
adc
add
lds
test
pop
cld
xor
bound
insb
inc
jae
xchg
xor
in
jns
je
add
int
adc
jnp
xor
into
orb
gs
xor
inc
lods
ja
gs
out
icebp
pop
and
test
pop
lar
or
pop
lods
jp
test
repz
xchg
jo
incb
cmpsb
xchg
and
jle
out
and
test
std
adc
out
jo
bound
mov
pop
dec
roll
popf
push
push
xchg
push
mov
adc
repnz
stc
add
cmp
popa
notl
inc
jg
jl
add
or
bound
lahf
out
cmc
adc
ss
movsb
cmp
xorb
add
aam
xchg
inc
inc
mov
iret
es
inc
xchg
addr16
xor
mov
jge
jnp
xor
push
push
sub
jb
xchg
jl
xchg
leave
arpl
pop
push
sub
mov
les
loope
adc
xor
push
xchg
outsb
mov
pop
sub
mov
mov
pushf
mov
push
inc
fildl
push
xchg
and
mov
rol
push
enter
insl
bound
out
lcall
adc
test
dec
mov
xor
cmp
xor
imul
xor
lea
notl
sub
fwait
fs
das
jp
mov
xor
cmc
addl
loope
adc
out
cld
pusha
test
xchg
js
adc
cltd
aaa
int
dec
sub
mov
xchg
jl
int3
je
sbb
leave
daa
jp
mov
je
out
movd
dec
push
insb
jae
push
inc
pop
mov
mov
lcall
mov
or
xchg
cmc
sub
jne
shr
imul
sbb
mov
mov
pop
jae
xlat
outsb
push
pop
out
popf
ret
jle
arpl
repnz
xor
jl
inc
addl
arpl
jbe
xchg
stos
stc
cmp
rcr
rcr
cmpsb
sbb
js
pop
ljmp
push
out
xchg
addr16
xor
pop
sub
notl
in
add
push
testl
pop
push
jno
subb
jl
or
aam
adcl
push
jne
hlt
incb
test
mov
push
sbb
push
sbb
in
cwtl
sub
xchg
je
leave
mov
mov
pop
ljmp
pusha
dec
xor
mov
scas
loop
mov
mov
push
adc
ja
and
pop
bnd
add
bound
push
adc
add
outsl
loop
stos
adc
sub
gs
test
and
jmp
adc
aas
cld
rcll
ss
sbbb
out
iret
and
fdivrl
dec
out
dec
xlat
dec
jmp
pop
or
xchg
sub
js
inc
ficoml
mov
leave
xchg
cmp
fldcw
dec
jae
test
test
inc
mov
aam
loopne
sub
pop
arpl
loop
push
mov
out
daa
push
mov
mov
pop
stos
add
popa
add
mov
repz
xchg
sbb
ss
bnd
and
push
push
push
inc
fmuls
cmp
outsl
push
pusha
divl
adc
sbb
les
cmp
sahf
into
xchg
shrb
lea
sub
xor
popf
dec
dec
mov
popf
loope
and
test
cmc
int3
mov
call
or
sbb
cmp
fildll
pop
out
rorb
sti
std
cltd
mov
sub
xor
xor
push
lcall
dec
out
test
mov
mov
shrl
pushf
inc
inc
fbstp
sub
pop
mov
add
stos
imul
mov
lcall
jge
std
adc
cmp
ja
test
ds
mov
jmp
das
pop
or
pop
out
xchg
lods
rcll
xor
and
scas
inc
pop
jns
outsb
add
int
push
insb
fists
mov
je
mov
mov
in
leave
test
pop
mov
lods
mov
xor
sub
inc
lret
jae
sbb
cwtl
rclb
mov
outsl
xchg
jg
daa
mov
leave
cli
dec
jle
shl
sbb
xor
xchg
inc
fcompl
nop
fdivrl
adc
std
push
mov
or
jb
sub
fbstp
subl
and
in
jno
gs
ret
nop
and
adc
lcall
adc
xchg
mov
and
jbe
pop
jg
mov
aad
mov
hlt
psrld
push
ret
xor
neg
outsl
sub
xor
insb
into
imul
lea
std
push
scas
mov
loope
pusha
ss
lea
stos
rorb
shl
jl
std
mov
test
add
insb
lods
repz
or
mov
adc
xchg
fidivrl
push
mov
mov
out
cmp
xchg
inc
lret
rorb
enter
push
add
insb
sbb
lret
push
inc
xchg
fsubrl
test
test
fsubl
pushf
or
add
das
stos
mov
rolb
inc
mov
icebp
dec
movsl
inc
sub
pushf
adc
mov
pusha
in
andl
cmp
jo
mov
push
sub
inc
notb
add
iret
mov
jns
mov
mov
icebp
stos
sbb
cmp
jecxz
or
mov
or
mov
mull
xchg
add
lahf
test
rcrl
data16
sub
pusha
cwtl
repz
aam
lahf
push
ficompl
rorl
cmp
lcall
sbb
scas
aam
sbb
popf
insl
test
insb
int
das
mov
dec
outsl
icebp
mov
nop
dec
xor
in
sti
ficomps
sub
cmp
ss
dec
sub
xchg
bound
dec
lret
sbb
enter
ret
jmp
mov
pop
mov
mov
xor
adc
lock
pop
add
in
pop
jmp
fildl
mov
jns
popf
movsb
dec
nop
xor
dec
push
std
adc
in
stos
or
lea
rcrl
shll
or
adc
cmp
dec
icebp
xchg
jmp
add
inc
xor
jg
pop
int3
rcll
les
or
pushf
pop
jo
sub
sbb
cmpsb
test
xchg
pushl
lods
cmp
fadd
cmp
add
xchg
adcl
and
es
rorb
shll
stos
sbbb
loop
out
loope
cmp
shl
mov
ja
ja
sarl
or
daa
sbb
bound
scas
mov
mov
arpl
cmpsb
jno
and
imul
stc
hlt
xchg
cmp
sub
inc
sbbb
xor
fincstp
mov
shrl
pusha
jmp
mov
fcomps
jg
jno
mov
out
mov
mov
repnz
rclb
dec
enter
imul
shrb
fucomi
push
push
sbb
scas
out
or
cmpsb
outsl
add
repnz
jne
loop
mov
popf
ret
ror
xchg
pop
mov
enter
mov
xor
cs
jno
fldcw
shl
push
rcrb
xchg
dec
and
enter
pop
out
cmp
pop
mov
and
jle
stc
nop
imul
cmp
xlat
loop
and
sub
sbb
lds
cmpsb
sbb
dec
inc
mov
mov
fistpl
cmc
aad
jle
mov
test
leave
testl
inc
lret
add
pop
push
jo
add
add
mov
fistl
icebp
arpl
mov
lock
mov
push
ss
inc
lahf
push
orb
or
mov
and
lret
dec
sub
adc
je
xor
pushf
sub
or
decl
lret
popa
sub
movsl
mov
cmp
in
test
fcmovu
add
mov
xchg
in
jns
mov
xchg
movsb
scas
inc
leave
mov
rcll
icebp
test
out
adc
or
mov
dec
jo
nop
daa
out
cwtl
pop
call
or
mov
fwait
xchg
and
mov
push
imul
jns
adc
icebp
lods
xor
xchg
sbb
xchg
icebp
add
fsubrl
andb
cmp
add
lods
sbb
ficoml
cmp
addr16
fimuls
out
test
fldenv
cmpsb
dec
push
pop
xor
outsl
cs
push
pop
fwait
xor
out
mov
ds
lock
stos
dec
lret
int3
mov
jo
cmp
mov
xor
shrb
fcmovnu
dec
pop
cmp
and
dec
jbe
rolb
sbb
arpl
push
in
test
jae
lahf
sub
push
roll
repnz
repz
and
xor
aad
out
mov
mov
enter
loope
and
and
iret
movsb
inc
in
outsl
xor
mov
lea
arpl
jecxz
sarl
popa
lret
stos
lea
mov
adc
loope
jle
addr16
mov
sub
outsb
push
lods
lahf
xlat
xor
lret
data16
outsl
jge
pop
leave
xchg
shl
add
sti
inc
add
fnstsw
addr16
cwtl
jns
mov
xchg
and
int
xlat
iret
sub
cmp
push
adc
test
lock
movsl
pop
xchg
cmp
leave
and
ds
repz
testl
imul
lods
outsl
das
add
mov
incb
shll
lahf
xchg
cld
hlt
pop
jb
and
aam
push
pop
cmp
cmpsl
dec
mov
and
mov
fsts
insb
inc
popf
xchg
add
or
xorl
test
aam
fnstcw
xchg
mov
cmp
aas
into
pop
jno
testb
or
push
and
imul
pusha
xor
clc
aaa
hlt
xchg
adc
fidivrl
adc
jne
push
daa
and
pop
jns
mov
das
mov
or
mov
jbe
sbb
decb
xor
test
ja
fildll
cmpsl
out
outsl
es
mov
xchg
and
repz
mov
sarb
mov
jno
or
pop
jns
test
mov
push
test
dec
cmp
jb
mov
out
pop
icebp
fwait
pop
hlt
mov
and
in
jb
add
or
icebp
insb
test
adcl
add
fidivs
adc
icebp
out
es
fwait
add
jnp
add
bt
mov
neg
pushf
aad
dec
cld
jle
das
ss
push
movsb
icebp
pushf
popa
roll
and
lret
pop
scas
xchg
adc
js
jge
inc
push
jge
jle
je
bound
jns
subb
lock
scas
jns
adc
insb
cmp
dec
lods
sub
pop
jl
dec
pop
jnp
jbe
inc
rcrb
xchg
xor
mov
xor
mov
dec
mov
sbb
ret
insl
xor
jbe
shll
loop
cmpsb
jge
lahf
outsl
mov
add
fcomi
add
adc
or
or
imul
popf
cltd
stc
jmp
movsb
mov
stos
test
int
stos
into
pop
sub
xchg
xchg
cli
fs
or
test
sub
mov
fwait
sahf
pop
gs
cmp
stos
icebp
popf
or
or
pop
inc
out
rcrl
aas
ficoml
mov
mov
ss
mov
sbb
dec
leave
mov
insl
jmp
lret
and
pop
loop
xchg
aas
iret
inc
test
ret
push
outsl
sbb
xor
cmc
mov
out
out
xchg
sbb
push
mov
mov
xchg
or
pop
popa
mov
xchg
jl
jmp
call
xor
xlat
cmc
inc
cs
push
movsb
or
cs
add
sub
mov
lock
fcoms
bound
ficomps
les
mov
aas
call
and
aam
aaa
and
pop
push
mov
jae
push
pop
cmp
out
sbb
test
fscale
cmp
outsb
push
test
push
shrb
test
rcll
mov
jge
loop
les
mov
test
call
cmp
adc
xor
inc
je
jl
xchg
mov
push
cmc
mov
mov
iret
mov
lret
cmp
inc
lock
outsb
outsl
daa
xor
test
jmp
lods
enter
mov
or
add
xchg
sub
inc
pop
imul
aaa
les
cli
pop
pop
testb
jge
mov
fildll
cwtl
in
sbbl
mov
insb
sub
bnd
lds
pop
sbb
ficomps
ss
test
pop
mov
aas
xchg
notl
mov
std
xchg
pcmpgtw
xchg
icebp
ss
rorb
mov
inc
int
add
imul
repnz
jnp
adc
mov
mov
or
imul
lock
js
mov
mov
pop
push
push
xchg
push
mov
test
jno
and
ja
xor
adc
push
dec
fldenv
mov
adc
or
jge
aaa
jle
fwait
mov
jmp
insb
loope
out
ja
push
decl
movsb
pusha
xchg
inc
lds
adc
addl
cmp
push
outsl
push
push
lret
and
adc
ds
inc
int
daa
jne
push
jne
in
sub
jns
jbe
push
and
ja
jge
xor
es
and
hlt
pusha
sbbl
cmpl
test
repnz
jmp
or
and
mov
mov
testb
dec
movsl
jmp
push
in
notl
shlb
sbb
int
iret
out
out
std
lret
fs
cld
xor
int3
loopne
aas
pop
out
push
sbb
fsubs
sub
mov
fbld
out
pop
lahf
jecxz
cwtl
movsl
sbb
adc
ds
mov
fisttpl
rcl
imul
std
push
jmp
mov
jo
jge
jecxz
dec
sahf
sub
inc
jmp
mov
sarl
adc
xchg
popa
orl
add
outsl
push
push
imul
mov
ffree
lret
push
cwtl
je,pn
dec
in
insb
xor
cmp
sahf
xchg
sub
incl
insb
mov
jg
xlat
mov
mov
jns
out
out
repnz
adc
cwtl
inc
ds
adc
rol
cmp
out
repnz
rcll
mov
cmp
mov
mov
jl
ret
adc
dec
in
inc
pop
mov
cwtl
sti
mov
cmp
xchg
sbb
dec
aaa
into
cli
xchg
sbb
dec
sbb
ret
aam
cmpsl
mov
sbb
cmp
andb
sahf
scas
scas
pop
call
mov
cmp
mov
push
jno
xlat
dec
xchg
fs
test
mov
in
xor
iret
clc
nop
lds
pop
loop
and
push
push
adc
out
lret
es
push
out
lock
xor
xor
inc
movsw
mov
cmpsl
mov
test
adcl
cmp
cmpsb
or
mov
notl
xchg
jmp
gs
mov
lahf
sti
pop
xchg
repz
test
mov
xchg
fmull
fsubr
xor
dec
outsb
pop
push
push
mov
dec
pop
nop
fdivl
cmp
cmpsb
notl
icebp
dec
xor
js
adc
aaa
push
add
stos
xor
push
mov
dec
in
pusha
cs
mov
ret
icebp
xchg
inc
gs
repnz
in
fldl
add
push
sbb
add
fidivs
xchg
rol
jb
and
int3
sbb
shll
outsb
into
jmp
cld
sub
push
sub
xor
aad
jbe
and
jle
cmp
cmp
std
cmp
lods
mov
fbld
rorl
insb
outsl
mov
xchg
sub
or
mov
lock
pop
enter
addr16
sbb
jge
sub
iret
imul
aam
adc
and
out
or
shll
aas
pusha
outsl
xor
cli
pushf
lcall
or
fcoms
sub
test
cmp
in
insl
enter
and
sbb
loopne
sti
xchg
popf
add
outsl
jns
and
lcall
jp
mov
stos
or
pop
add
push
fcomps
sbb
or
cmp
lahf
stos
and
fadd
xchg
in
xchg
test
popa
clc
int
repz
adc
ss
xorl
xchg
bound
xchg
mov
ret
push
ljmp
out
xchg
sbb
mov
fisttpl
add
push
mov
out
aad
cmp
mov
bound
push
inc
jae
ja
mov
popf
inc
sbb
mov
mov
adc
iret
shrb
or
popf
testl
rcr
pop
movswl
push
cmp
push
movsb
push
fsts
cmp
sub
ja
mov
mov
js
dec
jl,pn
push
scas
push
fwait
loopne
insl
push
pushf
xor
data16
mov
ret
and
and
jbe
test
sbb
ret
dec
scas
pop
mov
pop
sbb
ds
or
add
iret
jge
test
bound
dec
cld
xchg
xor
fistpll
lahf
daa
or
sar
push
jae
test
pop
scas
push
mov
pop
fsubrs
lret
cmp
pop
addb
stc
nop
xchg
jg
adc
mov
loop
jns
or
mov
sti
cmpsb
mov
aas
lods
dec
xor
popf
nop
lods
ret
inc
addr16
in
push
je
xchg
sub
mov
jg
fdivs
push
fidivl
mov
hlt
add
das
cwtl
sahf
testl
or
pop
andl
pushf
xor
adc
mov
and
add
cmp
divb
movsl
pop
jmp
xor
in
out
sbb
fdivr
or
movb
or
add
rcrb
sub
ja
fbstp
outsb
test
mov
jb
pushf
rorl
popw
scas
enter
out
test
insl
data16
cmpsb
je
or
xchg
sub
fdivrl
xchg
jns
rcr
repnz
add
out
jae
adc
mov
imul
jl
rol
mov
dec
mov
movsl
ret
sbb
inc
movsl
cmpsb
mov
mov
add
push
dec
mov
or
ror
fs
pop
cld
popf
repnz
ds
dec
and
cmp
lods
jns
pushf
push
pop
fistpl
mov
inc
test
inc
arpl
in
arpl
xor
jp
cs
pusha
nop
add
fbld
lds
pminub
cs
test
push
push
jecxz
push
fadds
push
jns
mov
pop
fstps
scas
inc
jle
mov
dec
cmpsl
or
pop
dec
ret
fs
shll
xchg
mov
pusha
push
pop
mov
jle
daa
sahf
push
movsl
add
les
enter
xchg
ljmp
jne
xchg
push
push
shrb
ja
lret
test
push
or
fisubrl
cli
int3
call
gs
sbb
cmp
jge
add
cwtl
call
jp
cli
popf
xor
sbb
sub
cmpsb
pushf
test
mov
aaa
push
jae
mov
xchg
sub
loop
cmp
sub
movsb
pop
repz
mov
les
repnz
aam
or
notb
fsubl
and
test
ss
and
iret
fstl
ret
scas
xlat
ljmp
mov
dec
xor
jmp
out
ss
imul
pop
nop
stc
pop
push
lcall
jo
stc
cwtl
xchg
add
jno
dec
rorb
inc
idivb
adcb
push
leave
iret
add
rorl
lods
jae
repnz
or
cmpsl
pop
loopne
or
lock
fxtract
jge
stc
cli
or
stos
pusha
ss
fs
sahf
jecxz
xchg
adc
jno
inc
or
push
aad
iret
jmp
out
cmp
sbb
jge
jecxz
cmp
rcr
xor
push
pop
and
mov
stc
add
in
adc
and
inc
sti
fsub
popf
pop
mov
hlt
jno
test
xlat
dec
jae
sbbl
lcall
pop
insl
inc
jge
xlat
mov
loope
clc
dec
addr16
daa
inc
jg
lods
shrl
lret
jmp
ja
mov
ret
rcr
dec
insb
loope
xor
lea
std
inc
dec
je
sub
jo
dec
dec
push
aas
aam
les
test
pop
data16
sarb
add
repz
lock
or
out
add
inc
cmp
lcall
bound
xchg
or
pop
jg
cs
aaa
shll
std
adc
cli
fcomp
out
scas
sbb
mov
ss
sbb
ljmp
xor
or
jb
sub
in
mov
inc
jle
out
aad
push
pop
push
or
cmp
pop
xor
mov
adc
std
inc
out
sbb
push
jg,pn
mov
add
addr16
cli
and
sub
dec
inc
std
cltd
or
loop
sahf
add
in
push
adc
jmp
in
add
push
std
pop
xchg
test
icebp
pop
sub
and
movsb
jnp
mov
cmpl
insl
adc
cmpsb
stos
mov
in
jnp
bound
leave
stos
mov
push
fwait
push
push
das
xlat
loopne
ja
xchg
and
pop
pop
mov
ret
lahf
xchg
jb
fcmovnu
fsts
and
in
xchg
fcoms
dec
mov
push
mov
mov
mov
pop
dec
rclb
xchg
in
adc
dec
test
pop
nop
movsb
movsl
xchg
into
cmp
pop
xchg
jno
push
push
pop
xchg
pop
mov
lcall
dec
push
push
sbb
mov
ds
xchg
mov
ficompl
adc
lcall
dec
adc
cmp
xor
push
xchg
adc
mov
pop
add
and
adcl
mov
enter
stos
movsl
ljmp
mov
add
xchg
std
inc
xchg
or
mov
push
outsl
xchg
pop
rcr
sarl
sbb
or
into
fisubs
jmp
int
sti
sub
cmp
cmp
cmp
adc
popf
repnz
cmp
sbb
push
xlat
ss
sub
pop
fisubs
aas
into
aam
fsubrl
push
pop
repz
pop
mov
cmpsl
jp
xchg
les
not
jbe
aad
xchg
mov
mov
mov
outsb
imul
add
mov
adc
jne
sahf
je
push
cmpl
and
xor
lcall
arpl
add
loope
and
dec
add
cmp
imul
popf
pop
movsb
jecxz
aaa
add
mov
mov
or
sbb
addb
mov
push
and
adcb
or
sbb
mov
or
sbb
inc
dec
in
cmpsb
cmp
sub
icebp
outsl
sarb
xchg
jp
in
testl
and
and
jmp
cmp
xchg
insl
mov
sbb
xlat
ffree
out
stc
dec
out
dec
jmp
jo
pop
mov
adc
push
popa
and
sbb
rol
jnp
in
pop
jns
or
scas
inc
mov
push
push
sub
test
mov
lcall
mov
in
sub
outsb
loope
mov
pop
sbb
adcl
dec
pop
outsb
inc
stos
outsl
cli
adc
sbbb
dec
pop
xchg
es
mov
lods
add
int
sbb
xor
filds
scas
ja
pop
out
sbb
sbb
mov
mov
add
cmp
pop
or
subb
lods
push
shll
sub
lods
aam
fbstp
jae
inc
mov
mov
dec
jmp
addb
jecxz
bound
mov
cmpb
xor
fmull
push
cmp
mov
outsl
push
fmul
mov
int
xlat
sub
pop
roll
sub
mov
stos
js
sub
les
jp
scas
aad
mov
ficomps
cwtl
icebp
lods
insl
imul
and
mov
sbb
out
lahf
or
jle
pop
rcl
mov
mov
addl
int3
add
notl
pop
mulb
dec
xor
and
jnp
inc
ljmp
or
xchg
adc
mov
xor
mov
rolb
jmp
loop
sbb
xchg
mov
mov
jle
inc
je
jne
bndstx
push
bound
xchg
mov
jmp
pop
mov
inc
mov
call
stos
cltd
stc
pop
movsl
mov
test
jnp
xchg
pop
lret
add
xchg
sub
pop
aaa
or
mov
mov
ret
jg
or
dec
enter
xchg
lret
dec
movsl
movsl
nop
gs
icebp
lods
inc
or
pop
inc
mov
mov
fdiv
mov
pop
mov
cmp
cmpsb
rolb
pop
fdivl
pusha
scas
and
and
pop
pop
aam
cmp
push
dec
jg
adc
inc
test
jno
xchg
mov
jnp
mov
cmp
xor
aaa
lock
fbstp
adc
jne
out
std
xchg
and
cwtl
test
nop
and
dec
lret
test
inc
xchg
sbb
ds
hlt
jle
js
lcall
cmpsl
ret
cmp
jns
add
push
insb
push
add
inc
jp
sub
mov
add
inc
inc
sti
bound
jbe
sbb
or
cmp
inc
ja
mov
inc
gs
xchg
repz
pushl
lahf
jge
push
faddl
fwait
jb
xor
imul
add
pop
or
pop
cmp
outsl
push
dec
insb
in
lcall
cld
pushf
sub
pop
dec
push
out
in
popf
test
pop
mov
dec
popa
int3
pop
loop
mov
call
arpl
bound
std
mov
mov
or
jnp
add
push
jno
and
add
inc
jbe
xchg
das
cmp
xor
or
lock
int
addl
shll
mov
mov
inc
sbb
sub
orl
sub
xchg
or
jns
cmp
mov
pop
lret
insl
inc
arpl
popa
stc
or
xchg
cs
fs
adc
dec
into
mov
fsubrl
shll
aam
push
cli
mov
imul
dec
fistl
test
adc
fistps
xorb
ja
stos
in
repz
inc
xlat
test
lret
pop
dec
insl
js
test
fdivl
std
movsb
cmp
ret
sub
js
push
or
jmp
pop
add
loop
stos
rorl
sub
fistl
sbb
cmp
lahf
lret
mov
scas
ret
jnp
loopne
jnp
roll
scas
xchg
mov
mov
test
push
sbb
cmpsb
loop
sbb
sbbl
in
cmp
dec
cltd
shrb
mov
and
call
icebp
or
sbb
int
std
xchg
push
outsb
in
mov
sbbb
jmp
mov
cmpb
addl
sbb
xchg
xchg
xor
aam
jno
call
mov
mov
hlt
aad
xor
pop
inc
insl
xor
pop
cs
pusha
push
dec
fcom
jl
scas
vpsrlvd
xchg
aas
dec
shrl
jo
jg
xor
daa
push
cld
aad
push
repnz
testb
mov
shrl
cmp
add
pop
sub
aaa
lods
inc
imul
lret
push
mov
cwtl
das
bound
xor
adc
aam
sbb
adc
in
adc
repnz
mov
pop
cltd
pop
insl
cwtl
jnp
fwait
ret
repz
dec
es
pop
mov
push
inc
adc
xchg
ss
dec
pop
mov
jmp
ret
repz
pushf
idiv
sub
popl
adc
jg
negl
mov
adc
lea
mov
sub
shlb
cld
jo
das
inc
or
push
sub
in
leave
cwtl
adc
inc
inc
xor
sbb
dec
mov
mov
jb
notl
inc
fldt
dec
stc
jl
in
pusha
test
inc
xchg
jne
pminub
add
xchg
enter
in
xor
pusha
adc
jae
nop
in
std
shr
push
add
inc
pop
pop
cltd
clc
lret
inc
adc
stos
pop
mov
in
mov
stc
adc
mov
add
leave
imul
adc
divb
xchg
add
iret
sub
insl
and
insb
add
inc
sbb
sbb
add
mov
and
cwtl
sub
cld
cwtl
xor
xor
sbb
and
aad
mov
loopne
push
jl
stos
test
inc
adc
mov
jp
jg
pop
adc
inc
jp
or
jle
adc
sbb
stos
and
sbb
pop
lahf
out
sbb
or
out
je
xchg
popa
icebp
lods
jne
fst
stc
nop
mov
xlat
and
xchg
mov
sahf
loopne
sub
add
or
jecxz
mov
jl
rol
xchg
cmp
popa
inc
bound
bound
push
es
lsl
dec
fcomps
lahf
lods
scas
mov
rcrb
mov
pop
and
and
ds
xchg
mov
divl
sub
xchg
scas
test
je
daa
mov
cmp
shl
mov
cmpl
jbe
and
sub
pop
dec
es
and
mov
mov
js
xchg
stos
sar
lods
inc
push
int3
lret
pop
sbb
nop
out
xchg
and
dec
sub
loope
mov
cli
inc
push
or
mov
lcall
jle
das
mov
mov
test
xchg
inc
sbb
xchg
pop
test
vmwrite
inc
xor
mov
enter
cwtl
inc
andb
jae
pop
adc
imul
rcrb
sbb
adc
jae
shl
and
ffreep
enter
and
mov
lcall
rorb
mov
mov
dec
xor
xor
xor
push
push
cmpb
dec
mov
and
dec
cwtl
bnd
mov
cmp
xchg
aam
mov
fsubl
add
daa
outsl
aad
xor
adc
push
pop
arpl
aam
popf
mov
rcll
jge
or
mov
push
fidivrl
xchg
pop
cmp
sbb
call
mov
sub
sbb
addl
jns
pop
repz
push
jp
ss
int
adc
dec
pop
xor
mov
jle
push
jp
xchg
cmp
cwtl
cmpb
mov
out
pop
adc
jae
insb
add
adc
sub
clc
adc
dec
js
jge
pop
mov
out
pop
mov
push
mov
pop
cmpsl
outsb
xor
push
out
pop
mov
dec
fistl
xchg
or
xor
sbbb
or
mov
call
test
loopne
enter
mov
mov
mov
mov
jb
adc
inc
inc
pop
dec
cmp
pop
pushf
imul
sbb
lea
loop
mov
in
sub
add
xchg
mov
mov
iret
or
sbb
pop
add
jne
jnp
or
mov
jae
aaa
dec
mov
dec
ss
lock
daa
int
jecxz
stc
loop
sub
push
mov
shl
dec
inc
inc
scas
fptan
iret
inc
fiadds
adc
sbb
cmp
jl
push
mov
in
mov
sti
fwait
push
dec
das
push
clc
mov
mov
push
clc
mov
aam
pop
jp
fadds
dec
xchg
push
add
testl
mov
in
stos
dec
fstl
sarb
fsubl
dec
cmpsl
mov
andl
or
or
cmc
cmc
cmpsl
push
mov
xor
mov
sti
rcrl
call
popa
dec
fiadds
outsl
cwtl
aad
cmp
inc
icebp
pop
mov
sub
xchg
push
js
stos
test
xor
and
add
adc
fistpll
and
mov
fimuls
dec
nop
lcall
mov
movsb
jmp
repz
cld
inc
lock
aaa
pop
dec
les
jne
cli
cmp
jb
lcall
pop
stos
xchg
mov
mov
data16
scas
test
cmp
in
out
jmp
shrb
insb
mov
mov
inc
mov
sub
adcl
and
xchg
outsb
xorb
cmp
stc
lods
icebp
or
fwait
dec
mov
push
aas
adc
and
mov
shl
or
xor
jecxz
dec
push
jge
mov
xor
inc
ljmp
xor
pop
daa
jns
fldt
xchg
lods
mov
pop
data16
lret
ljmp
jg
pop
cmpsl
and
mov
int3
arpl
jnp
std
jmp
or
outsl
jno
jns
sbb
pushf
out
je
mov
ljmp
xchg
pop
or
cmp
lret
int
shrl
xor
push
test
mov
addr16
jo
sahf
comiss
sti
cmpsl
sub
shrb
rcrl
mov
dec
shll
jnp
cltd
leave
and
test
icebp
pushf
or
adc
cmp
scas
adc
mov
pop
and
dec
sub
dec
pop
cmpsl
andl
jnp
jnp
adc
outsb
or
xor
repnz
xchg
cltd
xor
mov
fstp
aad
xor
in
imul
insl
and
outsb
cmp
push
insl
pop
push
sahf
pop
pusha
testl
sbb
scas
iret
data16
mov
ja
lret
add
jbe
dec
mov
sbb
test
mov
mov
sti
adc
imul
jbe
push
adc
mov
loope
mov
movsl
ret
les
jne
aad
sbb
cmp
aaa
add
out
xor
dec
xchg
sbb
inc
sbb
pushf
dec
sub
sahf
pop
lret
lock
ljmp
les
xchg
push
popa
xlat
scas
push
into
icebp
leave
imul
push
inc
repz
lea
adc
iret
add
push
in
pop
in
push
in
shlb
xchg
pop
push
loop
push
das
mov
cli
inc
mov
cmp
xor
stc
xchg
cwtl
lahf
negl
in
or
xchg
adc
rolb
cli
pop
hlt
adc
and
fadds
sbb
leave
cmp
cmp
adc
push
sbb
out
xchg
in
add
push
fucomi
jns
mov
or
sbb
pop
jl
lea
sub
paddw
popf
or
stos
test
stos
sub
mov
dec
out
lds
xchg
cmp
sub
pop
pop
es
hlt
add
xchg
xchg
in
pusha
or
pop
mov
jns
sahf
icebp
out
sbb
and
adc
icebp
or
jae
clc
and
push
scas
aam
int
jp
ljmp
arpl
jmp
dec
clc
adc
ret
aas
pop
repz
and
pop
fwait
mov
fwait
xor
xchg
sub
pop
dec
jbe
add
inc
dec
loopne
jmp
clc
jge
pop
mov
std
lret
popl
pop
pop
fsubrl
adc
clc
inc
push
jg
paddsw
sub
jmp
jno
lock
pop
xlat
xchg
leave
dec
stos
xchg
jecxz
leave
or
push
pop
std
cmp
cmpsl
jnp
jno,pn
jno
inc
popf
mov
push
push
xchg
sub
or
mov
mov
cmp
jo
shll
inc
jecxz
inc
shll
fldcw
push
or
roll
xchg
lods
ljmp
inc
push
sub
dec
sbb
mov
mov
call
loopne
mov
adc
sub
shr
pop
cmc
sbb
sub
mov
hlt
ret
outsb
sub
cmp
xor
xor
lea
push
xchg
mov
jg
mov
push
out
mov
dec
jns
aaa
addb
push
movsl
xchg
xor
lods
int
aam
in
popa
fisubl
shlb
les
je
sarl
adc
sarl
out
sbb
aam
ja
cltd
call
sub
cs
add
jl
in
cs
xor
cmpsl
aaa
mov
jl
paddusb
cltd
clc
fbld
sub
shll
push
pop
out
jg
fs
jno
pop
pop
inc
xchg
inc
or
sbb
push
shrl
sbb
test
dec
mov
int3
faddl
mov
or
pop
mov
xchg
stc
outsb
loope
or
std
leave
fildl
fcomi
mov
ss
jo
aaa
push
lds
sub
ror
outsl
bound
xlat
adcl
push
sub
xor
loopne
movsl
mov
add
data16
or
mov
cmpsb
adc
mov
and
mov
xchg
inc
jns
mov
jl
dec
sub
mov
popa
and
lods
sahf
hlt
data16
and
and
aaa
bound
lret
sbbb
xchg
rcll
cwtl
sbbb
and
cs
mov
cmp
adc
in
stos
sbb
aaa
cld
lahf
mov
xchg
and
notl
stos
sbb
jg
cld
xor
lret
and
rcr
repz
sbb
rolb
decl
dec
jb
jge
jecxz
sub
les
loope
sahf
mov
test
mov
xchg
or
sub
mov
mov
scas
fs
dec
sub
push
testl
mov
shll
push
and
fistpl
jle
push
jl
mov
inc
mov
fildl
push
imul
lods
inc
push
iret
xchg
mov
shr
add
push
xchg
push
jge
jecxz
xor
sbb
and
jp
inc
cwtl
jl,pt
fcomi
adc
mov
jae
lock
out
push
push
enter
sub
iret
icebp
lahf
jbe
fnstsw
push
movsb
cwtl
sub
push
jge
nop
lock
cmp
jo
mov
in
push
cmp
adc
jns
dec
or
test
mov
andl
cmp
add
inc
push
push
pop
cmc
test
xor
pop
inc
les
in
test
pop
add
repnz
push
outsb
pop
xor
dec
dec
xor
and
pop
scas
out
leave
bound
and
or
stc
jg
jmp
iret
aas
xchg
aad
sbb
das
mov
insb
or
push
cmp
out
mov
popf
lods
jmp
lea
cmp
in
addr16
stos
jmp
rorb
adc
dec
jns
inc
rorl
call
outsl
sti
or
pop
inc
mov
ja
ret
xchg
fsubl
pop
jmp
jl
ljmp
add
jno
stos
das
mov
push
jbe
jmp
sub
bound
or
or
mov
outsb
add
jb
lds
mov
rorl
int
push
and
xchg
stos
jp
sbb
pop
movsb
cmp
add
inc
dec
pop
jne
mov
pushw
mov
xchg
add
xchg
popa
stc
clc
pop
cmp
cwtl
mov
inc
out
add
das
aam
sbb
out
int3
out
push
xor
push
in
mov
push
inc
cli
xchg
je
sbb
inc
inc
sbbl
ficompl
aam
mov
sar
pop
jnp
insb
xor
call
out
sub
movsl
xchg
imul
aam
lds
sbb
hlt
insb
lcall
push
je
push
cmp
pop
xchg
mov
ljmp
pop
in
scas
jno
scas
add
cmp
nop
pop
clc
push
add
sub
cmp
leave
inc
fbld
ret
pop
mov
cmp
push
notb
push
pop
fldenv
je
mov
cwtl
mov
push
idivb
fidivs
add
pop
xor
iret
xor
mov
sbb
insl
pop
lods
jo
out
test
and
aam
cltd
je
mov
xchg
adc
dec
lods
sbb
insb
insl
js
xor
xchg
shll
sti
add
sub
ret
hlt
dec
imul
mov
int3
arpl
xor
sbb
outsb
adc
inc
shlb
pop
mov
out
mov
jmp
iret
mull
mov
movsb
or
inc
and
xchg
fcomps
dec
dec
in
push
rcr
lahf
inc
dec
stos
and
and
pop
fucomip
or
data16
mov
or
fldenv
add
mull
mov
daa
outsl
aaa
lock
outsl
fsubp
pop
cltd
push
test
je
xchg
cmp
scas
xor
or
fisttps
jmp
pop
iret
stos
fwait
inc
test
inc
pop
add
lea
popf
in
lret
push
or
mov
popf
rclb
xchg
lods
jmp
inc
outsl
adc
out
cmpsl
loopne,pt
and
fwait
inc
mov
loop
mov
mov
ret
loopne
inc
pop
cltd
sub
adc
xchg
outsb
imul
inc
test
lock
mov
ss
mov
addl
adc
pop
mov
xchg
test
insl
sbb
das
cmp
push
dec
adc
pop
cmp
dec
ds
jle
xchg
add
mov
sti
lds
dec
fistps
cmp
pop
jae
jge
iret
fnstenv
push
in
les
pop
iret
in
lea
icebp
test
cmp
pop
dec
repnz
dec
mov
push
mov
movsl
add
jo
in
pop
push
fcompl
daa
addr16
lcall
dec
fisubl
ds
or
fwait
shlb
adc
ds
repz
sbb
fs
mov
add
jle
pop
adc
dec
sbb
mov
lds
sbb
cwtl
leave
pop
and
inc
out
iret
lock
jg
pop
lret
mov
jmp
bound
sbb
inc
ret
repz
inc
cmp
dec
push
in
pop
ret
xor
std
hlt
cmp
aam
jecxz
cmp
dec
pop
lock
aad
mul
ret
push
jmp
add
sahf
jb
and
mov
mov
pushf
jbe
rol
pop
xchg
arpl
das
pusha
inc
or
roll
mov
arpl
das
xlat
xchg
faddl
mov
add
sahf
sub
aaa
fldcw
pop
sub
out
jle
test
adc
sub
daa
xchg
add
stc
cmp
push
mov
je
adc
push
mov
sbb
sub
fldl
jb
aad
mov
dec
lahf
inc
stos
lcall
movsl
jmp
arpl
das
js
aam
roll
cld
scas
out
sub
mov
mov
jnp
insl
sub
fisubrs
shl
xchg
and
or
push
bndstx
shl
fmul
and
dec
pushf
ret
loopne
insl
idiv
or
or
addr16
and
and
out
xchg
mov
mov
mov
push
scas
add
jecxz
pop
cwtl
sahf
inc
jae
mov
repz
cs
jp
xchg
cmpsb
adc
movsl
sbb
or
stos
mov
scas
dec
imul
xchg
mov
mov
stos
lea
pop
mov
sub
and
mov
aad
jbe
shll
lcall
pushf
out
push
inc
and
and
lret
clc
pop
insb
push
fists
in
sarb
dec
rorl
insb
test
adc
icebp
mov
outsl
mov
adc
imul
fdivrl
mov
pop
jl
insl
aam
lahf
sar
jg
xorb
mov
pop
mov
andl
sbb
and
out
xabort
cmp
and
pop
jo
popa
jno
enter
push
push
pop
loopne
aam
ljmp
mov
data16
fs
sub
inc
scas
out
push
aam
mov
cmp
push
idivb
inc
pop
xchg
sbb
cmp
stc
lahf
mov
xchg
push
mov
mov
inc
faddl
gs
movsb
adc
fistpll
int
arpl
mulb
insb
sub
mov
pop
test
movsl
cmp
shl
inc
jo
notb
mov
push
loop
or
cmc
sub
mov
jno,pn
mov
add
sbb
sbb
add
fwait
xor
or
scas
xchg
sub
or
scas
sbb
movsb
test
mov
dec
clc
fcmovbe
and
adc
jmp
std
jmp
push
std
mov
adc
push
test
icebp
hlt
movsb
jmp
dec
lock
movsl
pop
pop
fisubrs
jg
jl
into
xchg
lods
mov
sti
pop
xchg
jecxz
sahf
ja
lret
or
repz
movsb
scas
mov
loop
nop
dec
sub
gs
xor
add
dec
and
jp
mov
pop
jbe
xchg
mov
xchg
test
push
arpl
add
xchg
bound
lods
in
jecxz
push
sbb
test
mov
xor
push
fildl
icebp
loop
leave
int
ds
sub
dec
push
aaa
insl
pop
sbb
cmp
mov
xchg
push
cs
shr
arpl
cmp
push
mov
notb
inc
dec
mov
jle
push
or
and
test
xor
pop
scas
jo
push
jmp
fnstsw
mov
push
cs
insl
inc
sbb
dec
inc
xor
je
cmp
mov
xchg
or
mov
aaa
fiaddl
imul
jnp
jne
dec
cmp
jnp
and
xor
pusha
in
sub
aam
sub
xorb
mov
ret
lds
jmp
pop
iret
cmc
cmp
or
pop
rep
add
ja
mov
pop
and
mov
add
ja
fstps
stos
inc
sahf
sub
dec
icebp
xchg
jmp
fwait
ret
outsl
mov
aas
scas
xchg
aaa
into
adc
xchg
mov
and
cld
test
lret
cmc
mov
push
mov
cmp
mov
sub
out
or
movsb
cmp
scas
lods
cli
mov
jp
jl
int3
ja
add
cmp
popa
jg
pop
es
dec
rcl
les
cmp
mov
enter
mov
adc
or
into
nop
lock
in
ss
ss
add
xchg
fimuls
mov
andl
cmp
ljmp
xor
call
jnp
roll
fisubrs
cmc
mov
add
out
jne
jnp
pop
mov
sbb
dec
pusha
jmp
mov
enter
inc
pop
out
mov
adc
add
lods
inc
xor
rorl
imul
leave
mov
in
rol
pop
pop
jae
aam
mov
inc
jb
cld
in
or
jnp
xchg
hlt
scas
inc
push
lods
aad
sbb
inc
std
mov
mov
and
std
test
pop
enter
cmp
fistps
mov
loope
dec
lods
fucom
xchg
cmpsb
cmp
jbe
out
sti
push
xor
lds
fiadds
mov
cld
pop
push
daa
adc
adc
jae
add
lcall
out
adc
ds
outsb
mov
pop
sub
jp
and
ja
out
lock
jnp
mov
pop
add
out
cmp
testl
cmp
xchg
jae
xchg
lret
decb
and
popa
js
jbe
js
push
push
std
xchg
icebp
fcomip
and
sbb
dec
xchg
ret
and
sti
ret
outsb
adc
sarl
idivb
insb
js
dec
rcrl
in
jns
imul
leave
rclb
insb
or
shlb
pop
mov
mov
jmp
fs
and
rcrl
sub
pushf
mov
or
xchg
sbb
sub
popa
add
int3
mov
mov
adc
aam
or
imul
jae
loopne
les
sub
cmc
rolb
pop
ds
sbb
cmp
mov
enter
int
xor
aas
pop
mov
jle
test
ja
sbb
adc
rorb
mov
cmp
icebp
sbb
lods
xor
jno
sub
jnp
push
mov
xchg
cmp
push
sbb
add
mov
adc
cmc
mov
push
mov
or
cmp
into
sub
ds
roll
cmp
jb
dec
cmp
sar
fcmovnbe
fcoml
ret
jns
add
jp
xchg
ljmp
decl
cmc
jns
pop
les
scas
cmp
push
or
imul
push
adc
int
ficompl
or
mov
adc
adc
push
inc
std
mov
jmp
vpcmpeqd
add
cmp
andl
jge
in
ror
fs
mov
sbb
ljmp
mov
and
mov
fistpll
lcall
and
add
adc
sti
js
loope
sbb
movsl
into
adc
inc
ret
mov
popw
jb
push
imul
jle
push
inc
inc
dec
inc
xchg
jno
clc
mov
sbb
std
mov
imul
dec
cmpsw
loope
xchg
sbb
jp
lret
mov
fucomp
mov
pop
lds
cmp
mov
or
xchg
stos
cmp
mov
fimuls
repz
push
sub
shlb
sbbl
push
sub
imulb
xchg
in
lods
push
stos
push
dec
cs
loopne
inc
add
inc
popf
stc
jno
pushf
jo
adc
sub
inc
sub
adc
xor
inc
int
cwtl
das
jg
imul
nop
decb
sub
sub
sti
cmc
stos
int3
std
sbb
loop
push
aam
jg
sbb
inc
movsb
dec
popa
frstor
inc
fwait
test
insl
ret
into
cli
popf
pop
dec
fistl
jb
shrb
ja
sbb
inc
test
add
and
push
stc
sub
xchg
pop
push
repz
or
fwait
outsl
cmp
and
cmp
cmp
inc
cmpsb
aas
call
jnp
jno
hlt
mov
idivl
stos
dec
jae
xchg
and
test
lock
sbb
sbb
mov
inc
jge
jns
add
mov
pop
imul
in
dec
push
sahf
dec
jne
jb
pop
call
test
and
nop
stos
add
sbb
pushf
in
dec
out
enter
loop
sub
jle
je
arpl
jle
lret
js
jbe
adc
pop
pop
jno
int3
and
inc
sbb
stc
test
sbb
les
mov
mov
mov
mov
out
das
nop
sbb
nop
lods
movb
ja
cmp
sahf
not
push
jne
sbb
mov
fildll
gs
icebp
je
andl
adc
push
iret
stc
nop
add
and
push
and
xchg
mov
filds
insl
add
testl
clc
push
in
inc
lahf
mov
sbb
out
mov
sub
mov
adc
adc
ret
push
adc
xlat
call
adc
xlat
shl
xchg
scas
cmp
idivl
popa
add
fwait
mov
inc
pushf
sub
mov
mov
inc
or
lea
scas
out
cld
out
lret
xor
fisttpl
adc
insb
jmp
icebp
push
jnp
fwait
pop
fsubl
addb
aas
test
into
push
push
cmp
movsb
arpl
dec
lds
out
aaa
dec
adc
inc
mov
stos
jle
inc
rcrl
lock
loope
mov
xor
test
xlat
lahf
sub
nop
add
ret
sbb
jo
subb
mov
mov
dec
sbb
jle
cmp
test
jbe
dec
pusha
push
lcall
and
add
ds
inc
add
enter
rcr
ljmp
pop
stc
push
mov
sub
mov
mov
test
js
xchg
lretw
xor
or
dec
loopne
lea
sbb
cmp
xchg
scas
adc
jg
add
jne
fisubs
std
mov
or
fldcw
les
xchg
mov
scas
into
push
mov
inc
or
push
pop
popf
hlt
popf
mov
cmpsb
xchg
iret
addb
mov
sahf
pop
inc
fs
dec
out
pushf
ss
scas
dec
jecxz
imul
sbb
int
xor
jbe
in
fcmovnb
push
test
or
test
mov
cwtl
fdivl
xor
push
push
cwtl
rcll
sti
subb
fldl
insb
push
lds
hlt
dec
sbb
mov
test
push
cmp
cld
mov
push
sub
xchg
pop
adc
jg
pop
cmp
stos
lahf
mov
dec
das
jno
fldt
xchg
dec
add
mov
inc
fiadds
jbe
out
addr16
ds
test
mov
je
aaa
stc
xor
or
adc
aad
inc
adc
mov
or
addr16
je
shlb
jo
cmp
jg
xchg
dec
xchg
pop
or
lahf
jp
loop
push
out
push
cmp
aad
xchg
mulb
shl
inc
lcall
and
mull
and
add
push
shrl
arpl
lret
in
cmp
outsb
cmp
mov
jo
mov
fucom
sbb
dec
mov
or
bound
pop
mov
xlat
xor
popf
fsubp
and
add
je
mov
pop
mov
mov
push
pop
pop
out
pop
add
push
adc
dec
xchg
push
xor
call
aad
fldl
ljmp
jmp
pop
and
lods
mov
pop
and
insb
pop
roll
push
scas
push
mov
mov
enter
mov
fidivl
addl
fimuls
and
adc
pop
push
scas
add
lcall
aas
jmp
adc
dec
pop
adc
lock
push
cmpsb
sti
pop
push
mov
or
xlat
sbb
ljmp
cmp
sbb
dec
sar
add
cmp
stos
dec
rcrb
adcb
test
xchg
xchg
stc
rclb
sahf
sub
scas
cmp
js
lea
mov
push
sbb
mov
mov
and
adc
dec
cli
mov
jge
lea
adc
adc
out
cmp
int3
movsl
in
dec
fyl2x
cs
xor
adc
enter
dec
or
and
arpl
fnsave
clc
out
je
decb
xor
lahf
subb
and
mov
jns
iret
test
fsubr
rcrl
mov
dec
cmp
fiaddl
or
inc
imull
loope
ja
mov
cmp
les
sub
pop
leave
push
inc
incb
int
fistl
aas
push
out
and
mov
cmpsl
mov
ds
mov
add
shrl
pop
mov
jle
xor
arpl
insl
pop
sbb
cmp
popa
cmp
out
test
add
outsb
in
sahf
jb
shrl
inc
jae
sbb
aas
loop
or
sub
push
adc
outsb
cltd
out
cmp
jecxz
lods
popa
shl
and
scas
mov
and
jle
sbb
jge
or
pushf
add
lock
cmp
movsl
insl
nop
inc
add
push
cmp
xor
xlat
adc
xchg
jmp
aaa
imul
aas
pop
cmpsl
jns
pop
xchg
mov
cmp
out
mov
xchg
ja
mov
mov
ret
pop
xor
andb
scas
lods
mov
mov
mov
pop
leave
mov
pop
pop
cmc
rclb
add
mov
js
xchg
lret
mov
mov
daa
leave
lahf
xor
es
mov
cwtl
push
xor
cmp
mov
pop
inc
lret
cmp
cmp
add
push
das
in
sbb
insb
cmc
xlat
or
mov
xor
into
aaa
and
test
out
push
fcmove
popa
dec
aaa
pop
sub
call
je
out
or
mov
rcl
bound
dec
xor
cmp
iret
cmp
mov
ret
pop
push
andl
jmp
sbbb
or
dec
ds
js
pop
xor
dec
or
loop
es
or
outsl
jge
das
dec
fisttpll
mov
dec
xor
inc
lods
subb
loope
xor
mov
in
insb
mov
xchg
mov
push
xchg
inc
lret
and
mov
push
dec
xor
mov
pop
dec
aaa
mov
lea
aad
std
shl
sub
std
push
out
or
adc
lock
and
movsl
xor
xor
jecxz
shl
mov
cmp
lds
ret
imul
arpl
mov
std
xchg
addr16
fucomi
cmp
and
lret
pop
adc
mov
das
xor
mov
ds
xor
popf
mov
and
cmp
leave
xlat
ljmp
sahf
into
in
and
aaa
cmpsb
call
call
push
inc
mov
orb
mov
repz
fidivl
imul
mov
cli
pop
mov
mov
mov
push
imul
adc
enter
mov
dec
mov
mov
in
inc
xchg
sub
or
pop
mov
mov
lret
lods
rclb
decb
out
test
ss
mov
aaa
add
lea
sbb
test
sbb
adc
jno
xlat
cwtl
cmp
and
cmpsl
sahf
add
repz
jmp
aaa
mov
or
mov
ds
pop
cmp
sub
push
jnp
push
sub
mov
ds
fdiv
movsl
insb
enter
or
jne
mov
xchg
and
xor
fstpl
imul
lret
data16
shll
mov
cld
sub
loopne
adc
rorl
and
into
jae
sub
or
or
sbb
lcall
test
lahf
sub
js
lock
mov
lret
sub
adc
lret
lock
sub
inc
dec
das
xor
add
mov
pop
sbb
add
out
daa
add
mov
ror
xlat
pop
mov
and
mov
sbb
dec
test
lods
mov
and
and
aaa
into
xchg
xchg
int
repz
negl
into
pop
jl
pop
pusha
notl
cmp
in
mov
ret
loop
mov
addr16
xchg
mov
popa
mov
xchg
add
sbb
lcall
popa
or
scas
inc
pop
mov
xchg
pop
xchg
pushf
and
mov
add
in
ret
rcrb
sbb
jg
add
sub
mov
jecxz
mov
inc
ficompl
loope
outsl
cmp
je
lods
mov
aas
aas
loopne
mov
inc
lea
inc
int
loope
enter
bound
int3
pusha
movsl
mov
cmp
clc
mov
push
out
mov
jl
xorb
jne
cltd
pop
xchg
popf
push
dec
insb
xchg
sub
imul
fchs
jns
push
cli
and
mov
xor
mov
aaa
mov
test
test
xchg
into
sub
mov
insl
test
into
mov
sbb
mov
sbb
fadd
rcrl
pusha
adc
stos
cwtl
inc
das
pushf
test
pusha
dec
jle
faddp
fdivl
push
jmp
aad
push
rclb
add
inc
in
clc
adc
jge
xor
xchg
fiaddl
and
push
push
cmp
gs
movsl
mov
xor
or
mov
mov
push
push
flds
insb
fistpll
jecxz
mov
cmc
push
mov
or
lods
inc
aad
gs
jb
and
jae
mov
lods
adc
jmp
lret
adc
push
mov
push
daa
lcall
or
cld
dec
fwait
sti
cmp
imul
std
cltd
aas
sub
lds
inc
insb
add
inc
jne
fisttpll
sbb
rcrb
jae
fld
pop
fiadds
lret
jne
mov
cmp
or
or
jecxz
jnp
push
mov
fldt
pop
repz
insb
inc
or
out
add
sub
lock
jecxz
jb
xchg
xor
sbb
in
xchg
push
and
mov
test
shrb
xor
and
arpl
gs
or
push
dec
popf
add
test
lret
mov
pop
or
bound
inc
or
loop
sub
pusha
pop
popa
jmp
iret
sub
fnsave
or
or
add
pop
cs
dec
dec
outsb
cmp
data16
ljmp
jae
out
jbe
jb
lods
scas
lods
jp
fmulp
notl
add
cmp
mov
pop
sarb
pop
add
mov
jg
jbe
dec
mov
pop
and
xlat
dec
filds
push
addr16
push
mov
int
xchg
fsts
addr16
fxch
jb
cmovs
outsl
jp
outsb
cmpsl
loope
inc
test
test
add
jb
or
mov
nop
xor
int3
jg
out
mov
push
and
sbb
scas
movsb
pop
sarb
mov
sbb
lock
sbb
pop
push
movsl
imull
notb
insb
insl
add
lock
sarb
xor
sbb
push
push
scas
das
fimull
hlt
je
xchg
cmpsb
adc
sbb
mov
fidivl
mov
or
in
cmc
push
sub
or
pusha
push
je
cltd
xchg
pop
aam
sbb
push
sahf
icebp
fsubr
xlat
insl
lods
xor
jne
mov
cmc
int
cmpsl
lret
add
cmp
mov
hlt
mov
inc
ret
mov
enter
dec
xor
ds
fcmovnbe
addps
xchg
lret
lods
pop
mov
testb
lcall
pop
lret
sbb
arpl
and
fcoml
cmp
xorb
je
sub
roll
add
lock
jno
push
movsb
and
pop
orl
outsb
shr
and
out
xor
fildl
mov
pop
pavgb
mov
sbb
and
add
and
mov
xlat
jae
aad
pop
add
loopnew
xlat
cmc
push
or
call
sbb
push
add
outsb
popa
dec
lock
mov
test
lahf
add
xor
ror
adc
imul
sub
stos
mov
lcall
jbe
sbb
mov
mov
aas
push
repnz
enter
jno
dec
test
outsl
and
orl
imul
push
ljmp
lods
in
shl
mov
mov
lcall
push
fidivl
aam
push
sbb
cs
std
leave
push
popa
mov
add
clc
pushf
and
loope
xchg
xor
push
test
xor
jmp
in
sti
sbb
or
xchg
popf
or
xchg
push
call
ljmp
cmpsl
push
iret
jl
cwtl
lock
sub
int
mov
mov
mov
inc
push
mov
out
loop
lods
cmp
pop
or
jb
xor
cmp
jmp
and
cmp
adc
stos
and
cmc
cli
jg
sub
scas
mov
adc
inc
mov
sub
adcb
push
sti
fisubrl
sbb
cmpsl
jmp
fiadds
lret
sbb
push
les
xor
cs
aas
mov
xchg
incb
fwait
xor
fmul
test
test
fldl
sub
ret
xchg
or
inc
dec
mov
lock
jbe
icebp
testb
daa
adc
push
cltd
jge
or
es
pop
mov
dec
stc
add
mov
xor
popf
push
cmp
pushf
xor
fucomp
xchg
icebp
mov
insl
std
imull
inc
lds
inc
les
scas
jp
cmp
add
sbb
push
cmp
adc
xchg
enter
cs
ds
cmp
cmpps
js
sbb
pop
lods
jecxz
outsl
lret
adc
sti
dec
call
rorl
xor
and
cmp
lea
leave
movsb
adc
test
mov
aaa
fimuls
mov
dec
sbb
mov
xor
aaa
lcall
dec
mov
lock
dec
add
sarl
scas
add
adc
add
insl
loopne
adc
pop
cld
jo
dec
inc
fmull
or
and
push
les
xor
xchg
nop
mov
or
jg
jmp
test
pop
or
aad
fisubl
aaa
mov
pop
xor
movl
ret
shlb
xchg
mov
mov
sbb
loopne
mov
sahf
arpl
sub
jecxz
arpl
sbbl
bnd
and
incl
push
xor
lret
pop
gs
mov
cld
push
gs
adc
cmpl
pop
cwtl
stos
cmp
add
fmulp
pusha
adc
adc
lea
jbe
fidivrl
xchg
cmp
push
jbe
jns
ss
pop
sbb
dec
sub
adc
lds
out
test
pop
dec
in
jbe
hlt
mov
mov
sti
cmp
jp
and
lds
adc
xchg
mov
lods
in
or
nop
out
out
test
jecxz
mov
scas
lret
ret
mov
sbb
cmpsl
fisubs
mov
call
lret
push
pop
and
test
pop
jl
pusha
adc
inc
ss
pop
push
xchg
int3
rclb
dec
je
out
push
sbb
cli
xorl
push
and
cmp
fimuls
mov
jns
loop
out
popa
push
xchg
pop
or
paddusw
mov
fsubrp
xchg
pushf
hlt
dec
gs
push
adc
sbb
pusha
mull
fidivrs
inc
ret
mov
jns
mov
call
mov
inc
notl
in
paddd
mov
push
adc
fnstsw
adc
xlat
and
dec
adc
nop
sbb
andl
xchg
add
daa
sub
cmpsl
xor
xor
arpl
js
adc
xchg
pop
loop
stos
hlt
lock
lret
dec
shr
dec
add
cmp
and
dec
decb
and
in
pusha
test
lret
call
or
cltd
mov
lods
fimuls
int3
jg
mov
lret
aad
ss
dec
dec
pop
or
push
xchg
cmp
push
push
dec
ret
repz
scas
clc
inc
pop
aad
stc
nop
inc
stos
and
shll
jne
sub
push
xchg
and
scas
out
rolb
hlt
fidivrl
iret
sahf
and
dec
nop
inc
test
fs
mov
test
mov
jnp
mov
jecxz
lods
out
mov
jmp
add
push
xchg
ljmp
pop
decb
xchg
mov
push
fldenv
jl
cmpsb
scas
mov
sub
pop
shl
xchg
add
mov
pop
out
arpl
push
sbb
sub
push
push
xchg
jns
fwait
repz
ds
xchg
sub
jno
pushw
mov
clc
add
xor
pop
adc
fidivrl
inc
jo
xor
fs
mov
jmp
cs
xchg
push
sub
sarb
mov
cmp
mov
and
jo
and
or
cmpsl
cli
sbb
aaa
jns
inc
rcl
cli
dec
imul
and
pop
xchg
jo
or
cli
push
jno
enter
out
loope
inc
int
dec
imul
adc
dec
cmc
fbstp
xchg
dec
cwtl
jg
ret
jns
popa
pop
dec
jmp
lret
mov
in
fcomip
xor
jmp
sub
repz
lods
and
cmp
jge
bound
cmp
pop
sub
jnp
inc
jg
cmp
es
hlt
clc
lods
inc
inc
rcrl
jl
outsb
push
push
hlt
inc
sti
xchg
js
mov
fstps
loop
cs
icebp
cmp
mov
xchg
add
mov
movsl
in
pop
lea
pushf
outsb
in
mov
test
enter
aam
xor
mov
leave
and
leave
mov
xchg
jp
gs
rol
xchg
jp
xchg
call
ja
fidivs
cmp
add
and
rcll
mov
les
xchg
push
btl
repnz
in
jecxz
sbb
jle
aam
jo
add
out
shr
cwtl
xor
clc
jae
fsubl
test
hlt
test
add
sub
lret
mov
lea
pop
rclb
imull
mov
sbb
dec
adc
imul
cmp
mov
lds
jl
mov
mov
fs
jnp
xchg
mov
jb
jg
jo
test
mov
jl,pt
subb
adc
sahf
or
mov
mov
clc
out
cmpsl
cmp
and
ret
inc
movsl
jecxz
mov
mov
aam
xchg
ret
push
test
pusha
jne
mov
outsb
ret
sbbl
mov
rcll
dec
mov
pop
pop
and
adc
divl
cs
jne
int
mov
int3
arpl
sub
or
sbb
xor
andl
sahf
data16
popl
pop
jns
ljmp
rorl
or
sbb
popa
stos
mov
pusha
cmp
loop
ss
xchg
sub
pushf
idivb
dec
aas
shll
dec
icebp
insb
cwtl
scas
nop
mov
das
rcrb
mov
jnp
scas
push
inc
push
cwtl
iret
sbb
xor
or
movsb
ja
xchg
or
jp
mov
mov
pop
mov
pop
mov
mov
jp
leave
aas
loope
inc
negl
sti
cmp
lret
pop
adc
les
addr16
mov
pusha
xchg
cmp
or
xchg
mov
out
mov
push
shll
data16
sub
xchg
pop
pusha
orl
mov
mov
cmp
fimull
stc
adc
out
jle
jg
cltd
mov
fcmovnu
dec
dec
jae
repnz
outsb
aaa
add
xchg
sub
cmc
mov
sub
rorb
inc
inc
pop
sub
xor
mov
mov
push
popa
shlb
inc
bound
lods
lods
sbbb
das
and
add
xchg
inc
lcall
dec
jl,pt
cmp
fcomps
jge
scas
cld
enter
xchg
mov
out
std
sahf
mov
mov
loop
pop
or
mov
sbb
lock
dec
ret
lds
bts
popa
mov
movsb
pop
jbe
pop
test
add
decb
test
sbb
hlt
int
sub
ficompl
push
rorl
popa
jp
sahf
inc
xor
add
test
or
push
repz
data16
adc
mov
jbe
mov
xor
jo
sbb
decb
xlat
insl
fadd
push
ljmp
call
les
and
in
sbb
imul
arpl
dec
js
or
and
mov
lcall
add
or
mov
ficoml
cmpsb
fbld
aam
loopne
dec
clc
sbb
sub
push
lret
rcrb
into
popa
sbb
jno
xlat
hlt
pop
sbb
dec
cmp
pop
aad
nop
dec
sbb
mov
aaa
and
ficoms
push
push
pop
movsb
ja
js
js
xor
xor
gs
dec
mulb
les
jns
push
int3
mov
xchg
dec
cmp
stos
inc
pop
add
subl
mov
out
push
frstor
cwtl
mov
adc
andl
xlat
insb
pop
push
dec
jp
jno
enter
jecxz
inc
in
xchg
or
mov
or
popa
sub
sbb
rorb
mov
mov
nop
daa
sbb
rcrl
imul
rol
aas
dec
div
andb
push
pop
dec
adc
lcall
sbb
cmp
loopne
cmpsl
bound
cmp
fnsave
insb
add
mov
lcall
mov
shlb
xor
filds
dec
jmp
sti
test
pop
cmp
icebp
dec
pop
movsb
arpl
in
inc
enter
adc
sub
imul
lods
pushl
push
jp
or
push
xchg
pop
nop
dec
mov
movsb
mov
mov
or
cli
jnp
sbb
sti
stos
xchg
aas
dec
dec
repnz
mov
and
leave
jnp
ret
popf
addr16
leave
out
fidivl
jo
leave
test
cmp
mov
ds
and
or
ret
je
push
mov
xor
outsb
sub
inc
test
cmp
sub
lea
mov
and
ret
mov
cld
cmpb
push
ret
filds
ljmp
and
ret
xorb
dec
pop
sub
scas
inc
xor
and
jae
outsl
xor
loop
imul
std
push
test
xor
sub
orl
add
dec
dec
push
cmpsb
in
push
mov
mov
repz
cwtl
pop
inc
sbb
mov
cmp
push
mov
jne
insl
push
fidivs
jle
imull
push
into
roll
adc
dec
pop
fs
xlat
ljmp
mov
dec
leave
aam
out
dec
int3
jmp
in
inc
mov
dec
fs
insb
mov
loopne
fcoms
fstpt
mov
rol
fnstenv
loope
dec
inc
decl
ja
lock
stos
xchg
mov
sub
jp
cmp
loop
in
or
add
and
je
mov
fcomps
jmp
mov
jbe
lock
jb
int
lock
orl
and
xlat
rorl
nop
test
inc
mov
xor
mov
jmp
fcoml
addl
ss
pop
ds
sarb
ret
mov
jbe
nop
sti
cwtl
xor
ret
ret
repz
or
or
jne
xor
jns
or
push
jg
inc
std
mov
lahf
pop
hlt
shlb
data16
add
mov
push
cwtl
mov
and
dec
push
jb
or
pop
and
sbb
dec
lds
adcb
in
out
xor
clc
or
movsl
int3
mov
xor
push
mov
xchg
sub
out
dec
aad
inc
pushf
cmpb
outsl
rol
jo
hlt
jecxz
push
popf
mov
fnsave
les
pushf
dec
test
adc
ljmp
orl
fs
jecxz
push
adc
negb
bound
into
fucomp
inc
lea
mov
pop
fcomps
mov
dec
cltd
shl
dec
in
or
dec
adc
sub
and
dec
push
fdivrs
jb
fisttpl
imul
mov
sub
push
rorl
mov
mov
sub
aas
aad
pusha
ss
push
mov
lods
ljmp
pushf
xor
inc
loope
dec
inc
fsubrl
xchg
data16
jle
cmp
je
xchg
jbe
pop
das
jecxz
fstps
mov
cmp
sbbb
jnp
or
mov
push
data16
lods
dec
mov
lahf
aas
cmpsl
out
fwait
mov
call
xchg
ja
push
add
and
xor
imul
inc
add
mov
jg
aad
lahf
ds
inc
sahf
adc
out
and
and
jl
ret
jmp
cmp
push
adc
dec
test
outsb
push
fadd
push
nop
inc
fimuls
shlb
fcompl
mov
xchg
test
ret
mov
sarb
shrb
ja
cmp
test
inc
sbb
jnp
mov
mov
outsl
fs
xor
jmp
pop
hlt
or
das
inc
add
xchg
ds
icebp
and
mov
adc
out
fnsave
in
rcrl
add
scas
and
inc
push
cltd
faddl
int
cmc
shrb
push
and
mov
mov
lea
cmpsb
addr16
movsl
sbb
sub
xchg
push
dec
in
outsl
fcmovne
ror
imul
stc
push
out
out
imul
out
push
fwait
and
sub
jmp
xchg
xor
das
out
aad
push
stos
adc
loope
in
xor
adc
shll
xchg
mov
push
cmpsl
xor
or
loope
mov
out
imul
or
loop
stos
dec
dec
movsb
xor
adc
and
into
cltd
das
bound
fisubl
in
repnz
lods
outsl
add
cmp
ficompl
lret
nop
add
pop
inc
xchg
mov
jno
jns
sbb
mov
inc
daa
or
push
mov
loope
inc
shlb
cmpsb
jp
push
lods
pop
mov
mov
inc
outsl
fldt
andb
xor
in
inc
fmul
cmpsl
sbbl
mov
xchg
jb
pop
ds
or
push
adc
movsb
adc
int
leave
add
stos
fisubl
ss
cmp
and
cmp
or
pop
sub
repz
loope
sbb
mov
arpl
jmp
js
incb
out
or
jb
xchg
xor
insl
es
jle
rcrb
sahf
and
aad
popf
pop
int
pop
ljmp
jno
ret
add
dec
in
imul
jb
jbe
lock
mov
mov
mov
pushf
adc
pop
aaa
ret
xchg
or
xor
jnp
push
fiaddl
aaa
adc
test
lahf
sub
out
rorb
add
ja
or
push
shrl
cmc
dec
adc
lret
faddl
jb
lods
movsl
pop
cmp
test
adc
gs
mov
dec
jecxz
cwtl
adc
mov
add
sbb
inc
jg
fsubs
adc
push
mov
sub
xchg
mul
jg
xor
push
ljmp
call
in
adc
lods
xchg
cmpsl
test
and
jg
aaa
mov
test
push
inc
xor
push
pop
lcall
inc
and
orb
repz
dec
or
mov
cmp
bound
jecxz
sub
mov
pop
les
fcoml
add
es
push
and
dec
adcl
loopne
dec
fiadds
outsb
cmp
push
lds
sub
daa
lahf
dec
adc
sub
stc
pop
lret
scas
mov
push
xchg
jl
pop
xor
cmpb
xchg
adc
mov
mov
xchg
xor
dec
mov
or
mov
push
mov
addr16
pop
jne
dec
jo
lret
outsb
push
andb
or
pop
add
adc
shrl
test
dec
mov
mov
xor
mov
pop
inc
popf
cwtl
mov
push
sarl
addr16
pop
sub
mov
outsl
shlb
int
aas
mov
sub
mov
jnp
aaa
pushf
icebp
insb
in
add
mov
fbld
adc
int
jle
xor
lahf
jg
push
xchg
aaa
pop
inc
cmp
sbb
not
sub
jne
jp
mov
ljmp
es
repnz
cmc
adcb
and
aad
insb
jecxz
out
js
mov
fcompl
bound
sahf
das
es
jmp
out
xchg
test
push
adc
jecxz
push
xlat
addr16
inc
sbb
mov
mov
pusha
notl
out
test
jg
popa
xor
data16
test
sub
cmp
add
pop
stos
lds
cmpsl
pop
lock
in
jns
pop
and
ret
hlt
addl
adc
jmp
push
sub
xor
jle
or
mov
mov
inc
fidivl
outsb
sub
cmpsb
cmp
sub
adc
inc
xlat
lahf
test
or
cs
pop
stc
push
bound
iret
jmp
push
mov
mov
cmp
xchg
xchg
bound
push
or
and
add
mov
dec
dec
mov
leavew
push
shll
mov
in
in
or
xchg
cs
repz
shrl
stos
pop
and
or
js
xorb
sbb
pop
inc
pop
stc
je
jmp
cmp
push
sbb
aas
mov
movsl
icebp
push
out
sub
jg
hlt
jl
hlt
jnp
jmp
sbb
jl
stos
xor
aad
adc
jne
fs
cmp
mov
mov
clc
sahf
sbb
cmp
dec
lods
dec
out
jmp
cmp
je
and
push
push
jg
fcoms
scas
loope
loopne
mov
mov
xchg
test
mov
add
dec
adc
mov
stos
les
sub
mov
xor
lods
and
jns
xor
inc
loopne
popf
push
fisubl
mov
sahf
cmp
cmovno
inc
xor
mov
in
lret
out
test
mov
xor
cmpsl
ror
and
push
sbb
mov
push
in
loopne
adc
jge
dec
roll
scas
and
pop
add
adc
jge
sarb
add
je
test
add
aaa
mov
fwait
sub
mov
gs
test
sub
rol
lcall
sbb
push
aaa
rorb
leave
fisttpl
jmp
and
repnz
mov
push
insb
pop
or
jbe
shll
fdivs
hlt
cmp
sar
sub
imul
add
pop
repnz
jp
or
inc
jns
in
arpl
xchg
push
pop
cmp
add
xchg
js
ss
ret
jecxz
sbb
shlb
sub
jmp
test
js
xor
orl
and
sarl
mov
mov
and
inc
cwtl
sub
pop
jae
dec
icebp
or
xlat
lods
jg
in
insb
shr
add
out
or
or
mov
hlt
mov
clc
loopne
loop
sahf
pop
cmp
adc
mov
cmpb
insb
stc
push
je
push
pop
in
fnsave
push
inc
push
xorl
int
xchg
jmp
cmc
and
movsb
or
pop
add
aad
scas
push
notb
lcall
add
nop
mov
pop
cmp
testb
mov
int3
lret
xor
arpl
test
sbbb
pop
scas
into
lock
repnz
add
shll
push
gs
push
sarb
rclb
dec
pop
adcb
cmp
test
sbb
dec
add
sub
cld
jbe
shlb
inc
cmpsl
repnz
sub
mov
in
repnz
ss
bswap
sub
ljmp
cmpsl
mov
shll
fsub
das
lcall
fisubrs
fstp
jb
dec
insl
jne
jge
push
mov
xchg
out
leave
mov
imul
sbb
movsb
ds
ficompl
xchg
scas
cmp
fstpl
sub
sarb
add
push
shll
clc
and
push
gs
vmovaps
jb
sbbl
push
gs
inc
outsl
pop
mov
arpl
lret
repz
cmpb
sahf
adc
bound
pop
cli
jecxz
test
loopne
inc
daa
int3
test
out
stos
filds
in
xchg
mov
mov
and
sub
dec
jmp
add
jb
push
jo
ja
adc
mov
clc
sub
scas
xor
in
jp
out
fldl2t
inc
or
nop
xor
pop
mov
xchg
or
dec
xor
shrl
sub
pop
xorb
sub
jo
cltd
test
ficoms
push
ret
jno
lds
cli
adcb
xor
mov
xchg
adc
mov
cmp
pushf
fdivl
sbb
jp
mov
loope
notl
popa
inc
push
add
sbb
lret
pusha
imul
popf
inc
pusha
divl
or
adc
sub
sub
rcrl
movsl
xchg
dec
into
jp
push
in
insb
loopne
sahf
addr16
jmp
outsb
cmp
addb
clc
incb
enter
mov
lods
out
sbb
pushf
out
or
insb
pushf
lret
jge
adc
scas
stc
jae
data16
push
jae
or
dec
dec
xor
dec
xchg
pop
stc
or
iret
mov
sti
push
fsubrp
test
inc
sbbb
mov
inc
adc
andl
pop
mov
cld
iret
cmp
and
mov
push
dec
test
cwtl
testb
dec
scas
jae
lahf
cmp
adc
ficompl
imul
in
mov
dec
outsb
test
lods
imul
jge
into
inc
fmul
push
cltd
cmc
lret
cld
rorb
ljmp
mov
popf
mov
cld
int3
push
leave
xor
xchg
aas
ret
fs
leave
loopw
imul
push
inc
lcall
out
sub
adc
cmp
divl
jae
xchg
sbb
dec
xor
call
stc
or
dec
shl
mov
mov
loopne
sub
jg
add
fisttpll
sti
pop
pop
adc
jns
insl
mov
adc
inc
inc
dec
jle
xchg
enter
xor
lahf
mov
les
pop
scas
cmp
neg
mov
dec
mov
pop
scas
xlat
mov
xlat
sub
int3
outsl
mov
leave
jecxz
lods
mov
cmpl
es
aaa
jecxz
mov
dec
adc
sarl
xchg
mov
pop
sbb
xchg
add
in
outsl
lcall
jo
sbb
aas
cmp
in
das
aas
loopne
rcl
sbb
fwait
leave
mov
jmp
push
fadds
xchg
mov
or
xor
daa
lods
popa
call
insb
out
or
cmpsb
xchg
push
add
loope
jecxz
rolb
pop
xor
cmp
pop
repz
xchg
je
ss
fisubrl
fisttpl
stos
push
shrb
lods
inc
mov
sti
xor
push
inc
jmp
mov
cmpsb
out
or
nop
mov
xchg
xchg
lret
andb
pushf
nop
inc
fnstenv
cmp
ja
cmp
jecxz
dec
test
pushf
cli
loopne
sub
pushl
mov
inc
enter
fadd
pop
push
gs
mov
xchg
or
test
out
jns
adc
popa
das
dec
in
jne
ret
mov
mov
jb
inc
sbb
push
xchg
inc
shll
pushf
fldcw
dec
adc
mov
loope
in
xchg
imulb
cmp
push
and
cmc
mov
pop
xchg
cmp
sub
jecxz
shll
jl
adc
nop
dec
paddsw
cmc
insb
adc
push
fcmove
push
add
fimuls
or
jl
sbb
jbe
scas
mov
push
not
mov
mov
icebp
cmp
jl
shlb
pop
fwait
jecxz
mov
in
pop
jg
jnp
mov
lods
mov
jg
adc
pop
imul
inc
aas
fisubs
in
pop
fstpt
decl
jecxz
fwait
dec
movl
adc
ds
lds
mov
pop
cli
xchg
scas
mov
pushf
mov
jge
cmpsl
mov
cmpsl
cmp
mov
xchg
sbb
in
fwait
in
mov
imul
mov
xor
ret
inc
push
mov
mov
jp
cmp
bound
pop
fdivl
inc
stc
cmp
adc
movsb
js
call
dec
ret
or
cmp
dec
or
cmpsb
push
sbb
mov
sub
out
into
nop
pop
shlb
clc
iret
out
mov
sub
inc
fimull
and
enter
mov
popa
pop
xor
sub
iret
or
and
pop
pop
popf
out
into
xchg
sahf
jne
fdivrl
inc
loope
into
insl
repnz
push
fcoml
or
divb
jge
pop
ds
jo
pop
movsl
mov
inc
andl
mov
test
fisubs
popf
or
movsb
js
fcomps
adcb
push
rclb
xor
add
sbb
adc
xor
in
mov
add
or
xchg
adc
xchg
das
jno
pop
sbb
mov
int3
lock
mov
dec
popa
or
sbb
pop
scas
push
loopne
xchg
cmp
andl
popa
jge
adc
shrb
int3
lock
shrl
and
push
xchg
jbe
lahf
push
call
sbbl
xchg
les
loope
icebp
js
sbbl
pop
pop
mov
pop
jnp
out
cmp
pop
mov
fsubrs
push
add
cmp
lea
or
mov
jno
fiaddl
stos
popa
fdivrl
negl
or
xchg
ds
out
sub
pop
fld
out
scas
jp
xchg
outsb
mov
and
xor
fstps
pop
arpl
test
das
cmp
fisttps
pop
flds
xor
mov
arpl
clc
cmp
movsb
mov
inc
idivl
or
inc
xchg
neg
inc
nop
xlat
sub
mov
in
pop
or
add
repz
arpl
mov
push
and
sbbl
sub
cld
dec
insb
ds
cmc
mov
jo
ret
mov
push
cld
mov
push
push
mov
pop
xor
and
int
cld
or
scas
inc
sbb
aas
lret
bound
jo
add
push
jmp
mov
cwtl
out
push
cmp
or
jecxz
andb
in
arpl
outsl
pop
inc
mov
ficompl
ja
mov
int3
xor
push
push
jmp
mov
clc
mov
stc
xchg
mov
scas
fidivrs
test
add
pop
ss
and
mov
out
add
or
mov
lcall
cmpsl
insl
inc
ss
dec
filds
push
clc
in
in
rclb
popa
imul
jo
pushf
pop
dec
test
loopne
mov
push
rolb
int3
dec
shll
or
jl
lahf
out
mov
sbbb
and
aaa
mov
xlat
movsl
push
inc
pusha
mov
mov
xor
repnz
mov
addr16
sbb
inc
push
ret
cmp
cmp
repz
mov
andb
adc
add
frstor
imul
mov
jb
mov
adc
repz
cmpsl
decb
rcrl
es
sbb
and
xchg
pop
popf
xchg
mov
xchg
aaa
sub
dec
gs
fs
fidivl
enter
inc
fdivp
jns
adc
inc
push
pop
jmp
addr16
push
mov
scas
jnp
es
mov
cmp
mov
mov
mov
jne
fidivs
cltd
lods
ja
jae
dec
sbb
mov
aam
add
adc
mov
jp
add
pop
sarb
cltd
fidivrl
xlat
push
scas
repz
pop
je
aam
mov
je
fwait
xor
jne
dec
or
lock
xor
jne,pn
add
pusha
xchg
icebp
ret
cmp
pusha
loopne
stc
cmp
imul
sbbb
clc
js
inc
push
lahf
test
mov
xchg
sub
lds
orl
negb
dec
loopne
adc
addr16
repnz
es
dec
sbb
adc
inc
or
in
callw
mov
fucomi
dec
aam
fdivl
add
test
mov
test
mov
xor
xchg
cmp
sbb
dec
jl
inc
cli
push
adc
pop
mov
in
lods
jge
popf
jmp
xchg
mov
cltd
je
daa
add
xor
stos
inc
ficomps
std
gs
or
mov
test
xchg
fisttpll
mov
mov
cli
xchg
push
pop
ja
into
push
orb
xchg
pop
mov
lock
gs
loopew
inc
out
jmp
arpl
dec
mov
scas
sub
jae
jno
cmp
fwait
inc
sti
adc
push
mov
sbb
ret
inc
xchg
stos
lock
mov
jl
shrb
decl
and
sbbl
mov
loopne
ja
push
inc
add
jo
rolb
in
dec
pop
lock
out
or
aas
mov
arpl
popa
pop
push
xchg
insb
in
popf
mov
sbb
repnz
xor
mov
fildl
std
in
inc
popa
and
jne
jecxz
lods
push
aaa
enter
fisttpl
loop
fxch
pop
or
xchg
jbe
sbb
xchg
fpatan
ret
in
insl
fmuls
dec
cmpsb
fnsave
mov
and
mov
mov
xchg
jb
pop
mov
inc
sbb
test
pop
mov
and
dec
je
shl
jno
dec
push
mov
inc
xor
jmp
aas
js
xchg
sarl
adc
scas
or
inc
jb
addb
pop
add
jp
dec
cmp
jg
movsl
mov
nop
sub
xchg
sub
xchg
mov
mov
jl
mov
add
sti
inc
jnp
add
lret
xlat
enter
or
jb
cmpsb
sbb
iret
jp
mov
decb
scas
cmc
scas
sbb
leave
imul
rcll
and
idivl
roll
sub
push
insl
loop
ret
lret
dec
push
adcb
lods
inc
or
mov
int3
sub
arpl
sub
sbb
add
adc
adc
add
adc
aaa
lea
arpl
lea
jge
push
cli
pushf
pop
add
cmp
cld
dec
push
jp
rorl
movsb
adc
and
jmp
lea
jmp
pop
dec
dec
cmp
cmp
andb
fwait
popa
lods
or
mov
mov
addr16
into
cmp
bound
mov
jns
test
movb
ficompl
xor
add
jb
pop
inc
cli
test
repz
inc
loopne
mov
call
leave
mov
jae
aad
xlat
sarb
cmp
test
pop
cmp
lahf
pusha
movsb
mov
push
mov
xor
jno
fsubr
pop
scas
insb
scas
mov
cmpsb
sbb
or
jno
xor
leave
hlt
jmp
pop
xchg
adc
cmp
sbb
mov
popf
jmp
pop
xchg
cmp
and
cmc
jge
inc
aas
loopne
nop
add
xchg
xchg
rcll
jae
jmp
lea
cmp
mov
loope
aas
push
pop
or
hlt
xor
out
mov
dec
and
shll
inc
inc
add
inc
sarb
push
out
loopne
cmpsl
call
loope
int3
push
lock
imul
and
add
rclb
inc
insb
or
xchg
mov
lods
push
hlt
push
punpckldq
push
cwtl
pop
or
jbe
clc
ret
sub
pop
mov
push
cltd
push
pop
outsl
cld
xor
or
push
xchg
out
imul
or
bound
dec
add
es
pop
fstps
sahf
in
dec
test
sub
adc
clc
test
fisubs
sahf
cmp
outsl
jecxz
orl
cmp
aad
outsl
mov
lea
scas
std
enter
out
lods
sti
fwait
andb
testl
test
ljmp
call
and
nop
mov
jbe
and
xor
orl
fs
mov
sub
repz
fnsave
or
dec
cs
sbb
or
mov
adc
psubsb
into
inc
add
pop
mul
mov
add
and
sahf
gs
cmpl
mov
mov
pop
inc
jmp
mov
fsubl
sub
sar
push
mov
out
enter
mull
jnp
cmp
and
xor
fwait
dec
mov
pop
insb
aad
and
adc
sbb
test
or
cmc
andb
popf
jno
mov
movsl
icebp
fildll
test
jb
movsl
push
enter
loopne
bound
mov
push
ds
popf
push
movsl
fadd
js
dec
add
pop
lret
adc
ret
rclb
out
std
mov
cmpsb
sub
in
xor
adc
push
jl
aaa
add
arpl
and
mov
push
cwtl
pop
int
mov
mov
std
inc
sbb
addl
mov
mov
jg
pushl
adc
mov
in
cld
fwait
adc
call
sti
mov
inc
sub
inc
stc
lds
xchg
dec
scas
outsl
jne
loopne
lock
lret
inc
add
mov
inc
sbb
je
add
add
pushf
cmp
sub
rolb
imul
lods
pushf
pop
mov
call
xor
popf
jnp
adc
mov
mov
out
add
mov
test
add
jg
adc
lcall
xor
insl
or
jne
dec
mov
adc
subps
jmp
out
xlat
in
imul
dec
scas
div
cld
daa
jo
cmpsb
push
xlat
push
leave
int3
add
stc
out
iret
mov
loopne
push
mulb
inc
mov
cmp
adc
lea
adc
je
insb
jb
test
xorb
adc
ss
ja
sbb
shl
pop
stc
gs
arpl
mov
lods
lods
aad
cmc
mov
lea
sub
jge
in
mov
aam
pop
inc
cmp
fcmovbe
inc
andl
mov
and
mov
sarl
fcomps
xor
test
rcrb
lods
imul
ret
cmpxchg
in
in
mulb
sub
out
cld
xchg
jp
gs
aas
dec
add
jmp
outsb
dec
mov
jl
xchg
popf
mov
popf
outsl
je
push
and
xlat
sub
fistps
dec
pop
mov
mov
sbb
or
dec
jmp
fwait
arpl
pop
jmp
cmp
js
sarb
adc
stos
adc
adc
add
mov
lock
mull
ret
jecxz
cli
adc
cs
sbb
push
cltd
rorb
xor
mov
push
mov
mov
adc
mov
push
push
mov
movsb
sti
mov
adc
mov
sbb
jnp
dec
out
rorl
add
push
push
aad
das
fildll
xchg
scas
push
xchg
cmp
jns
adcb
fwait
adc
ss
mov
loopne
stos
cmp
pop
std
out
push
jmp
and
mov
push
xor
cltd
pop
inc
cld
faddl
cmpsl
rol
nop
jp
dec
mov
pop
sbb
inc
cwtl
clc
bound
pop
aaa
jl
push
xlat
xchg
or
nop
inc
aam
sub
mov
gs
in
xorl
push
jmp
sbb
ja
mov
hlt
fiadds
add
std
sbb
dec
lods
shlb
test
push
icebp
ret
int3
movsl
fwait
pop
shlb
lahf
imul
in
jp
mov
ffree
pop
paddusw
mov
movsl
inc
outsb
shl
mov
jbe
cwtl
aad
mov
rdmsr
cltd
inc
mov
mov
aaa
into
stc
inc
lret
push
cmp
push
in
cmpsb
xor
pop
je
adc
in
test
and
dec
arpl
loopne
push
jmp
adc
out
sub
aaa
fwait
cs
popa
ds
hlt
sbbl
imul
jbe
loop
xor
arpl
cmpsb
pop
filds
sub
or
push
ficompl
cmp
sti
clc
sub
cmp
sti
and
out
stos
push
aaa
jno
xor
pop
mov
adc
and
cmp
or
test
xor
shrb
je
cmpb
pop
dec
xchg
adc
adc
icebp
rol
out
loope
add
sar
negb
cmpb
cmp
mov
ljmp
out
inc
test
lret
mov
dec
shl
inc
fstl
sub
fs
in
cmp
mov
xor
dec
pop
mov
scas
inc
fstpl
dec
loop
int
xor
inc
inc
sbb
cltd
xor
lds
bound
fcmovbe
push
sbbb
or
mov
or
pop
push
sub
sub
inc
lahf
xchg
dec
push
dec
addl
pop
test
inc
mov
adc
push
shr
mov
je
repz
dec
cmp
rolb
mov
jmp
aas
inc
fldt
cmp
dec
out
stos
dec
popf
dec
push
and
jp
jg
xor
xchg
imul
lods
scas
mov
jbe
inc
or
mov
xchg
arpl
push
jno
xor
xor
fadds
mov
outsb
call
mov
dec
aaa
mov
cmp
cltd
pop
mul
aam
jp
mov
repnz
ss
negl
xor
fisttps
add
xorb
outsl
push
mov
sub
xor
imul
adc
cmp
pop
mov
inc
loop
std
inc
dec
aam
cltd
mov
repz
cli
pop
psubq
and
dec
fwait
pop
fcoms
into
fmull
mov
popf
sub
jnp
jbe
or
xor
pop
mov
je
je
repz
xlat
xlat
pop
outsb
and
rcrl
sbb
icebp
rol
sbb
aam
cmpb
mov
sarb
cmp
out
xchg
xor
xchg
insl
jecxz
pop
sahf
test
xchg
and
movsb
cmp
pusha
rol
cmp
icebp
repz
ficoml
aad
inc
cmp
loop
in
rorl
ret
xchg
add
outsl
lahf
movsb
ret
cmp
shlb
inc
xchg
loop
ret
push
cmp
ja
sub
out
adc
dec
or
loop
xchg
push
jnp
jno
or
mov
fisttpll
cli
adc
xor
pop
call
mov
nop
sub
xchg
xchg
xor
push
loop
sbb
ret
mov
sti
xchg
ds
cmp
aam
loope
push
out
dec
inc
add
out
aas
loop
adc
nop
cltd
or
cwtl
lods
mulb
pusha
mov
mov
sbb
aas
scas
call
and
loop
xchg
js
mov
push
cli
loope
or
popf
fcoms
or
jbe
aam
in
cmp
inc
idiv
scas
adc
cmp
cmp
pop
mov
mov
cmp
ljmp
leave
fsubs
and
mov
dec
add
cmp
sbb
loopne
lret
xchg
loop
or
aam
sub
call
dec
jge
jle
mov
xor
mov
lret
fucomip
xchg
push
adc
adc
loopne
in
enter
or
hlt
cmpsl
clc
addr16
xor
dec
mov
adc
adc
das
movb
inc
repnz
xchg
fmull
fmuls
shlb
fadds
or
loope
leave
mov
sub
mov
adc
add
inc
fiaddl
xor
push
jb
stos
mov
xchg
mov
mov
sub
pop
lcall
das
scas
xchg
loopne
dec
scas
dec
and
pop
cmp
jb
test
cmp
into
loop
add
sahf
shr
scas
jp
sbb
inc
pop
jg
lods
pop
or
out
lock
sbb
pop
adc
jns
daa
cltd
in
cmp
inc
inc
scas
cs
gs
mov
and
mov
lods
std
jg
fisubrl
cmp
cmpsl
cwtl
cmp
or
mov
mov
xchg
lahf
pushf
mov
xchg
stos
repz
shrl
cmp
or
adc
add
jp
pusha
mull
mov
lods
mov
test
xchg
cmp
xchg
insb
pop
and
pop
hlt
dec
das
dec
sbb
or
sti
xchg
sbb
lretw
cmp
cmp
push
mov
mov
inc
test
cmp
arpl
or
jle
adc
cli
fadds
rcrl
pushf
sbb
sub
xchg
cmpsl
adc
stc
and
cmp
loopne
nop
cmovge
pop
jb
and
pop
or
arpl
jnp
mov
fsubrs
inc
jp
filds
and
jno
sbb
sbb
sub
out
xor
aaa
lds
and
aad
push
inc
mov
mov
inc
imul
shlb
data16
xor
out
fwait
and
iret
sbb
cmp
insb
add
lds
mov
fsts
cld
insl
mov
cs
pusha
ja
xchg
das
mov
popa
dec
adcl
andl
mov
and
lret
cld
sbb
subb
dec
push
lds
add
sbb
rcr
dec
cmpsl
inc
pop
fldcw
cli
xchg
into
and
ror
dec
pop
inc
add
daa
es
mov
iret
mov
add
in
lock
jo
jo
pop
xor
push
mov
mov
sbb
bound
and
push
jo
inc
jns
pushf
push
pop
rolb
xchg
sub
gs
pop
push
jnp
or
loopne
sub
add
jl
mov
pop
pop
cmp
adc
mov
or
pop
sub
jo
cs
push
movsb
xlat
aaa
stos
les
enter
jg
loopne
pop
fwait
adc
add
pop
repnz
dec
rcrl
or
shl
mov
scas
adc
inc
fistpll
cmp
adc
dec
inc
sbb
adc
mov
or
jno
xchg
lock
dec
in
and
xlat
adc
jge
test
cltd
jb
hlt
or
xchg
and
int
cmp
and
test
inc
inc
jno
adc
sbb
out
cli
jle
addr16
cmp
ret
dec
and
movsl
mov
adc
cld
dec
jnp
jb
sub
jae
cmp
mov
sbb
cmp
mov
pop
jmp
cmp
sahf
out
sbbl
decl
sub
cmc
sarb
mov
mov
add
push
cmp
or
sbb
out
outsb
clc
jae
test
fwait
ret
fucomp
jle
pop
in
orl
in
inc
sbb
nop
and
bound
add
sbb
cmpl
xlat
adc
jne
or
xor
dec
mov
and
xchg
xchg
adc
mov
or
cs
scas
gs
jb
fisttpl
popa
mov
dec
repnz
jnp
adc
pop
sbb
cmp
cmpsl
nop
aam
jecxz
cmpsl
mov
cltd
adc
inc
stos
mov
cmp
pop
js
ljmp
cmc
roll
jecxz
inc
iret
push
jne
bound
sbb
mov
test
push
data16
mov
std
nop
sub
out
aaa
lahf
in
jbe
mov
rclb
and
cmp
push
and
inc
rcrb
dec
popa
adc
sub
and
cmp
sub
xchg
jne
imul
test
addr16
das
cltd
pop
aam
cltd
call
pop
add
push
add
in
dec
push
xor
jle
pop
es
xchg
std
inc
cmp
les
arpl
js
sub
lcall
sub
push
push
bnd
xorl
mov
aas
fldenv
rolb
mov
push
rep
inc
jg
dec
loopne
or
popf
cmpsb
shrl
xchg
stos
jns
pop
addr16
xchg
aam
sahf
mov
cltd
dec
lods
jno
lods
aas
and
push
je
add
test
mov
mov
mov
or
aaa
imul
outsl
pop
inc
loop
popl
lret
lock
insb
push
inc
adc
sahf
cmp
sub
cli
push
sahf
rcrb
test
sub
icebp
adc
xchg
jne
jp
lock
lock
icebp
lods
ret
sub
fs
xchg
xchg
test
outsl
lret
cmp
loopne
lcall
fildl
mov
mov
jns
push
inc
xchg
fnstenv
adc
into
mov
scas
out
pop
push
push
mov
mov
mov
add
jle
mov
fdivrl
roll
fdiv
xchg
sbbl
push
cwtl
aam
inc
mov
popa
mov
cmpsl
cmpb
shl
xor
cli
arpl
out
add
mov
sbb
xchg
rolb
add
out
sub
xor
pop
out
loopne
cmp
in
movsb
adc
outsl
pop
mov
adc
push
mov
dec
push
cmp
out
popa
popf
fcomps
in
insl
ret
ljmp
and
sbb
stc
and
push
fwait
sbb
fistps
mov
pop
lea
sbb
jecxz
loop
aas
push
or
enter
repz
xchg
stc
aad
insb
mov
push
lea
and
or
jmp
adc
cmp
cld
push
sahf
cmp
push
fcmovnbe
cmp
adc
push
push
fnstenv
dec
mov
inc
movsb
in
pop
loope
into
push
cmpl
add
outsl
cmp
popf
pop
arpl
stos
cli
cltd
das
lock
or
pushf
mov
dec
cmp
insl
xchg
or
pop
sub
push
mov
pop
pop
or
in
push
mov
sbb
inc
inc
mov
ds
mov
and
inc
pop
mov
dec
dec
loope
xor
cwtl
pop
pop
lahf
stos
mov
push
ret
pop
xor
xor
rdpmc
mov
inc
pushf
jmp
adc
fcmove
gs
sub
fs
popf
adc
addb
idiv
in
or
sbb
sub
sub
cmp
pop
or
sbb
jo
jae
cli
sahf
inc
adc
push
clc
sbb
test
insl
xchg
jmp
xchg
stos
fiadds
push
jmp
popa
pop
inc
popf
pop
bound
push
mov
ficomps
mov
adc
mov
les
pop
in
xchg
rol
push
outsl
add
in
out
das
pop
mov
pop
push
or
les
mov
dec
ret
jno
arpl
mov
pop
push
add
or
mov
sub
pop
insl
jae
sbb
loope
popa
mov
fdivl
call
ret
mov
in
push
sbb
jg,pt
arpl
rcrl
repnz
sub
fldl
int
and
mov
shlb
stc
aaa
mov
dec
or
aam
js
mov
je
adc
insl
sahf
fistps
push
mov
arpl
and
and
jbe
or
fwait
push
mov
or
jp
mov
movsb
fnstenv
mov
rcrl
insl
cwtl
jle
and
leave
mov
push
inc
loope
bound
sub
popa
cmp
daa
sub
pusha
pushf
xor
inc
mov
lahf
or
xor
cmp
push
inc
adc
cltd
jge
xlat
cmp
and
dec
dec
mov
pop
insb
mov
ret
push
out
adc
test
lahf
and
sahf
add
loope
fdivrl
inc
popa
xchg
fcmove
push
fadds
sub
mov
int
sbb
stc
sub
push
cltd
stos
push
lea
pop
push
jmp
dec
rcrl
outsl
ret
popa
enter
push
aad
sbb
inc
jno
js
iret
addr16
xchg
or
subb
xchg
mov
sbb
stc
sbb
jb
call
sub
ja
xlat
repz
ljmp
loop
ficoms
aam
inc
and
dec
add
icebp
sub
xor
or
lahf
das
outsb
mov
sbb
sbbl
js
cwtl
pusha
arpl
andl
add
jbe
andl
adc
movsb
xchg
push
lea
mov
jl
jb
pushl
cmpb
ja
push
mov
cli
xlat
and
clc
cmc
gs
loope
dec
call
mov
out
add
les
adc
and
daa
mov
xchg
test
jo
jmp
in
add
or
scas
aas
dec
mov
pop
sbb
pop
dec
ss
mov
push
in
in
xchg
mov
push
es
pop
dec
jns
sbbl
pop
stos
lea
sbbl
js
pop
or
lods
in
cli
mov
testb
arpl
sbb
pop
stos
add
jae
cmp
jo
dec
xchg
fucomp
lods
push
xchg
push
test
mov
mov
jmp
jns
push
shrl
mov
mov
lcall
inc
gs
mov
pop
jmp
or
xchg
dec
and
or
flds
lods
testb
int
aad
inc
push
outsl
add
push
repnz
xor
lret
hlt
sahf
mov
std
enter
xchg
mov
push
pop
xchg
push
ljmp
push
in
test
jae
and
stos
mov
sti
stos
dec
pop
cmc
mov
dec
cmp
mov
jbe
sarl
inc
dec
push
mov
mov
pop
lock
or
mov
jle
and
or
mov
jne
ror
add
es
inc
jl
inc
scas
adc
jbe
jb
adc
jo
pop
icebp
les
push
cmp
add
clc
or
popf
and
xchg
call
clc
cmp
cmp
mov
adc
bound
jp
jp
and
aaa
aam
popf
insl
xchg
push
pop
lcall
mov
mov
xor
xchg
push
ret
lds
xor
push
enter
les
std
cs
data16
mov
cmp
dec
cmpsb
cmc
sti
or
mov
sbbl
inc
pop
rolw
pop
mov
jb
sub
xor
loop
pop
mov
aas
std
pop
leave
test
leave
rep
mov
push
push
mov
movl
cmpsl
sbb
jno
inc
fsubl
lcall
repz
rcrb
insb
xlat
ds
or
sbb
aad
add
pop
sub
repnz
test
inc
add
cli
xor
pop
popf
adc
xchg
loopne
sub
and
mov
rorl
pop
xlat
pusha
pmullw
js
mov
stos
jle
pop
mov
jp
and
fmull
cmp
jae
mov
fwait
jmp
cmp
stc
mov
enter
outsb
mov
push
inc
adc
xor
push
sbb
sbb
cmp
jae
call
jle
sbb
clc
and
jp
rorl
imul
popf
pop
ss
or
test
pop
fdivrp
repz
fldl
add
inc
inc
jmp
je
outsb
mov
mov
jo
push
outsl
insl
inc
aam
xchg
inc
imul
das
test
dec
cmp
leave
and
mov
jmp
addl
lods
push
jge
sbb
addl
and
ss
inc
shrb
mov
adc
jno
mov
aas
rolb
cmp
adc
repnz
jecxz
and
cmp
fisubs
scas
rcll
sub
inc
mov
or
pop
movsb
cmpsl
sub
loop
mov
les
lcall
mov
add
mov
js
ds
mov
ljmp
push
jbe
mov
fdivrp
xchg
dec
pop
fs
add
es
iret
outsl
cmp
ret
inc
xor
nop
adc
std
cmp
mov
lds
pop
incl
xor
jge
xor
pop
insb
jns
cmpsb
pop
inc
test
inc
sub
push
adcb
cmp
mov
ljmp
fs
out
cmp
imul
inc
sub
push
push
sub
repnz
and
aaa
int
mov
in
inc
inc
add
les
lret
mov
pop
fnsave
in
cmc
adcb
sub
cs
push
mov
pop
adc
cmp
ret
dec
lods
push
aad
cmpsb
xchg
into
or
pop
sar
stos
pop
add
push
ds
lahf
ss
push
cmc
sarl
pop
cwtl
adc
adc
jb
roll
inc
stc
jl
inc
adc
incl
cmp
pop
pop
mov
pop
mov
lods
jne
push
clc
or
mov
shrl
stc
push
call
push
leave
outsl
or
loop
movsb
jae
xor
data16
iret
or
xor
mov
test
pop
lret
sbb
insl
pusha
out
inc
fwait
mov
mov
nop
add
mov
mov
ficompl
inc
fs
dec
push
jnp
push
outsb
push
mov
pop
stc
mov
lock
leave
lret
pop
subl
leave
sbb
sbb
rorl
jl
pop
jns
xchg
sub
fsubrs
negl
lea
test
inc
lea
pushf
ja
es
xchg
cmpsl
inc
clc
xor
repz
mov
dec
and
mov
frstor
jnp
jp
mov
rcrl
mov
ret
sbb
sbb
add
test
ret
or
mov
ljmp
pop
sarl
sbb
shr
sti
mull
or
gs
dec
mov
inc
add
adc
sbb
lods
inc
popa
aad
or
pop
test
cld
addr16
arpl
daa
jns
shll
lcall
call
into
rcrb
addl
push
lahf
notl
aam
repz
cli
xchg
clc
loop
hlt
dec
xchg
sbb
in
pop
scas
jne
mov
int3
mov
insl
punpckhbw
push
jmp
cltd
push
sub
ficomps
vpunpcklqdq
xchg
dec
mov
jg
adc
and
lret
enter
les
mov
leave
inc
lds
insl
inc
decb
aad
call
out
cmp
cs
mov
imul
mov
push
fs
mov
adc
pop
ss
xor
sbb
fildl
or
je
jno
and
mov
push
jns
into
loope
fbld
mov
popa
xor
push
bswap
bound
jo
pop
mov
sbb
pop
adcl
ds
push
call
and
mov
xchg
pop
pop
fwait
xor
mov
addr16
adc
xchg
int3
divl
into
fsubl
rorl
lods
fdivrp
dec
cmp
lret
dec
cmc
gs
movsl
cmp
xchg
cmp
dec
imul
imul
cli
loop
aam
or
fs
cmp
xchg
xchg
mov
mov
and
jge
cld
push
inc
push
addr16
ret
enter
std
mov
repz
sub
in
inc
push
flds
push
adc
mov
mov
rcrl
mov
mov
or
dec
aas
aas
out
shrb
pop
mov
mul
aaa
sbb
lret
test
lds
das
daa
mov
mov
leave
mov
dec
sbb
testl
xchg
aad
adc
dec
sarl
jae
mov
bound
xchg
inc
inc
sti
outsl
ss
xchg
nop
outsb
sarb
pop
loope
jb
fbstp
xchg
js
mov
test
lds
push
sti
push
popa
notl
mov
adc
cli
test
xchg
rcl
in
test
dec
xchg
arpl
jne
inc
int3
rclb
insl
pop
push
cmpsb
mov
shll
clc
shr
push
cltd
inc
cli
adc
mov
pop
or
dec
mov
mov
loope
push
dec
scas
aaa
mov
popf
or
nop
mov
jbe
test
shlb
sub
shll
push
iret
addl
xchg
shlb
push
shl
xorl
mov
fistpl
stos
jge
mov
and
rcl
lcall
cmpsl
mov
out
mov
pop
jmp
add
andb
scas
out
and
xchg
sbb
adc
hlt
pop
fdiv
gs
pop
data16
daa
pop
add
xchg
xchg
xchg
in
test
or
cld
xor
mov
mov
push
iret
int3
mov
cmpl
dec
in
pusha
sbb
unpcklps
in
cmp
jmp
inc
jecxz,pn
pushf
jmp
leave
mov
mov
popf
pop
imul
dec
pop
mov
push
mov
xchg
lahf
ds
inc
pop
test
mov
dec
adc
xor
fs
lea
enter
jl
lds
adc
call
mov
jmp
bound
xchg
inc
pop
xchg
cli
pop
shll
cmc
dec
es
push
fwait
cmpsl
inc
xchg
jge
dec
fidivs
adc
push
inc
push
ss
insb
xchg
mov
adc
ret
sub
dec
ljmp
mov
sbb
les
enter
stos
ficomps
push
les
movsb
sub
pop
adc
mov
add
xchg
fsubs
adc
leave
pop
sti
sub
scas
in
arpl
dec
and
pusha
or
stos
in
dec
movsb
add
out
orb
inc
and
dec
movsb
cmp
mov
sbb
fs
into
mov
sarb
mov
dec
or
push
movsb
hlt
int3
jge
insl
in
aam
ret
pop
sahf
cmp
cld
mov
sarl
push
lret
cmpsl
mov
cmp
imul
cmpsb
inc
lea
aad
jg
fisttps
mov
test
bound
dec
adc
pop
das
xor
add
rclb
xchg
scas
add
push
or
cmc
and
pop
mov
inc
xor
sub
nop
jmp
mov
inc
inc
adc
jle
mov
mov
test
inc
js
in
push
add
sarb
mov
imul
inc
pushf
pop
dec
iret
ror
loope
in
dec
dec
mul
add
sahf
jno
mov
fadds
push
xchg
dec
push
fldenv
jnp
ret
stos
mov
mov
pop
imul
mov
add
in
mov
sub
std
mov
sarb
jo
sahf
repnz
and
ds
add
test
or
les
je
dec
dec
jmp
add
and
adc
ror
mov
push
dec
dec
fildll
movsl
loopne
cmp
mov
xor
out
std
jns
fisubs
in
mov
aad
inc
lods
dec
out
popa
jo
add
mov
dec
insb
or
mov
es
dec
jecxz
sti
inc
jge
xchg
push
mov
data16
or
inc
fisubs
mov
lret
jne
loope
repnz
adc
xchg
xor
or
addl
pop
mov
pushf
stos
xor
xchg
push
sbb
and
lds
pop
mov
jge
jno
lret
addr16
adc
push
cwtl
cltd
jns
sarb
loop
mov
int
push
add
test
or
test
inc
mov
jecxz
and
mov
mov
mov
mov
push
pop
xor
iret
mov
pusha
testl
scas
cmp
cmp
push
daa
mov
sahf
lods
jmp
push
fsubp
xlat
sarb
add
push
flds
je
sbb
mov
push
mov
popa
sub
add
lcall
inc
adc
leave
pop
sbbb
and
or
inc
dec
subl
in
and
push
xor
call
scas
sub
or
repnz
dec
aam
inc
cmpsb
imul
dec
xchg
mov
stc
pop
ret
jmp
out
jl
shl
pop
sub
icebp
mov
xchg
in
push
outsb
mov
sbb
test
sub
adc
cs
pop
jmp
or
cmp
adc
pop
out
clc
ds
repz
xlat
fldenv
jp
negl
in
mov
jnp
dec
mov
lcall
ljmp
xchg
xor
call
dec
call
mov
lods
gs
cmp
lods
sub
lods
fistpl
and
mov
cs
call
xor
in
sbb
adc
mov
je
push
fiaddl
or
bound
out
jae
adc
add
jo
mov
push
inc
xor
out
adc
mov
mov
in
ret
hlt
add
test
jo
cltd
in
pop
and
mov
fdiv
xchg
inc
add
mov
xor
cld
in
and
jnp
lods
sub
xchg
fstpt
pop
mov
out
inc
cmpsb
test
cli
jmp
and
jbe
and
pop
data16
negb
xchg
test
and
movsb
adc
add
xchg
enter
mov
dec
scas
in
test
or
mov
mov
adc
stc
dec
pop
or
in
icebp
jge
test
inc
pop
xor
cwtl
cmp
imul
movsb
mov
jmp
cmpsb
rcr
sarl
icebp
insl
jge
enter
mov
push
popa
lret
or
mov
xor
mov
inc
out
imul
xchg
mov
xor
fcomps
das
push
push
cmp
insb
cmpsb
mov
mov
data16
leave
mov
adcb
jl
mov
or
pop
sub
ljmp
jno
scas
push
mov
cltd
movsb
popf
sub
xorl
adc
xor
mov
int3
mov
int
out
mov
inc
in
lock
push
inc
add
imul
mov
sub
pop
jecxz
dec
aas
jp
in
xchg
mov
fcompl
loop
push
dec
movlps
negb
sbb
les
jle
push
insl
inc
push
mov
add
xchg
hlt
ds
jecxz
xchg
pop
hlt
cmp
les
ret
xlat
outsb
ds
and
clc
cmc
sub
lods
push
inc
call
mov
jmp
add
add
or
je
es
sub
aam
sti
ror
int3
in
jns
dec
mov
popa
nop
push
sbb
push
mov
enter
pop
movsb
inc
push
in
push
xor
mov
cmp
or
pop
add
in
inc
or
mov
ud0
decl
sbb
fisttpl
and
jbe
xor
addr16
loope
popa
jb
pop
movsl
sub
in
fsubr
push
shll
or
xor
dec
adc
mov
mov
loope
adc
test
inc
cmp
ds
lods
inc
or
rclb
adc
icebp
cmc
ljmp
test
push
pop
dec
test
movsbl
pop
xrelease
dec
bound
fisttps
out
cltd
mov
incl
xor
ds
test
inc
lahf
push
jnp
sti
mov
cmc
lods
jbe
mov
sub
arpl
stos
pop
cmp
or
into
sub
adc
fldl
lahf
jb
sbb
mov
pop
fucomp
xchg
loopne
push
cmp
daa
inc
enter
fisubrs
jae
mov
ret
xchg
lret
or
and
adc
in
enter
not
mov
imul
push
push
mov
adc
iret
je
push
mov
mov
lret
xchg
les
divb
jbe
dec
mov
ret
fnstcw
adc
inc
imull
jo
faddl
push
outsb
testl
cmpsl
sbb
lds
xchg
xor
out
add
arpl
adc
jg
fwait
mov
pop
push
adc
push
add
push
jne
in
addr16
movsb
jae
xor
gs
rolb
xchg
incb
mov
mov
cmp
iret
aaa
cmp
or
in
repnz
adc
adc
leave
jge
daa
out
je
inc
stc
mov
aad
dec
pop
ds
test
mov
pushf
mov
sub
shl
pushw
mov
mov
jae
sub
test
std
add
cltd
pop
mov
jg
xchg
movsl
mov
sbb
mov
negb
and
das
ja
cmpsl
insl
inc
stc
ja
inc
sbb
mov
ret
fists
add
mov
and
in
aam
mov
sub
mov
scas
enter
inc
lds
mov
and
pop
mov
js
sbb
scas
push
icebp
push
in
outsl
add
insl
add
dec
cmp
aad
fistpl
mov
push
push
jge
jae
xchg
scas
pop
ret
adcl
test
inc
lds
mov
mov
outsb
jmp
mov
imul
xchg
ret
pmuludq
icebp
inc
popf
add
cld
mov
jns
das
jae
int
cmc
ja
insb
mov
aam
and
xchg
mov
int3
leave
sub
test
dec
jmp
iret
imul
repz
daa
sbb
movsl
lds
imul
fdivrp
push
mov
les
frstor
mov
sbb
inc
fisttpl
dec
jp
mov
xor
ret
pop
cmc
adc
lods
xor
xor
mov
xor
mov
and
repnz
in
mov
cmpsl
mov
fcmove
and
fs
cwtl
mov
or
in
xchg
cmp
and
ja
ret
stc
cmp
repz
xor
aaa
lret
je
into
lahf
jb
aas
push
push
and
in
shll
jecxz
movsb
sbbl
mov
pop
cld
hlt
xlat
cmp
push
mov
ss
pop
negl
aam
inc
fsubr
add
sbbl
dec
xlat
aaa
mov
mov
sbb
fcmove
xor
stos
popa
inc
or
dec
pop
icebp
lret
jmp
sub
gs
shlb
fwait
pop
into
stc
aad
xchg
push
test
or
mov
xchg
rcll
pop
in
data16
adc
int3
data16
cli
lea
and
gs
andl
pop
scas
push
pop
int
stc
in
ret
mov
inc
in
cwtl
sub
in
test
adc
dec
or
adc
or
in
xchg
cld
xchg
push
sub
test
les
pushf
jbe
or
pop
push
sahf
xor
xchg
cmp
mov
dec
aas
lods
pop
jmp
lea
dec
dec
pop
iret
jbe
sbb
dec
dec
mull
rol
inc
xor
mov
sbb
inc
jb
mov
fidivl
cld
cld
xorl
mov
popf
leave
sub
iret
sahf
xorb
cmp
xchg
lea
cmp
inc
mov
lcall
xchg
cmp
data16
dec
icebp
dec
repz
cltd
gs
or
mov
sti
call
and
sbb
pop
jg
iret
pop
mov
icebp
icebp
xchg
addr16
fwait
cmpsl
data16
fcomps
addr16
ja
adc
int3
xor
clc
arpl
out
test
dec
in
insb
cmp
xchg
inc
cmpsl
icebp
mov
xchg
add
xor
xchg
adcb
or
hlt
fists
not
sbb
sub
mov
lods
in
cwtl
xchg
ret
ss
cmc
mov
xor
repnz
mov
xor
icebp
cmc
pop
or
push
mov
cmp
xlat
outsb
mov
mov
shld
jns
enter
jp
scas
pop
xchg
ss
lret
std
mov
mov
ss
push
add
inc
hlt
xor
stos
aaa
std
push
and
sti
aad
push
fucomp
sub
pop
add
shll
xor
std
pushf
rcll
push
dec
mov
pop
in
out
in
sub
pusha
sbbl
orb
frstpm(287
jmp
leave
iret
aam
int
addr16
sub
dec
mov
imul
xchg
mov
push
out
cmp
enter
mov
mov
cmp
lahf
push
jae
xor
push
mov
aas
dec
mov
push
inc
inc
xchg
jne
dec
jno
cld
mov
aaa
mov
daa
pusha
fiadds
mov
fisttps
mov
xor
xchg
fldenv
ds
adcl
std
ret
leave
and
lret
inc
cwtl
sub
push
das
loop
mov
inc
adc
push
jge
fnstenv
push
jbe
sbb
cltd
xor
cmp
scas
loop
mov
fisttpll
push
fldcw
xchg
adcb
shl
adc
repz
lds
fstpt
sarb
lcall
or
sbb
stos
and
sbb
mov
fdivs
xor
call
push
lea
adc
xchg
jne
dec
xchg
or
scas
push
pop
stc
enter
inc
and
addb
mov
cmp
dec
pop
xor
pop
xchg
sub
jae
dec
mov
push
jecxz
out
pop
repz
fnstenv
mov
in
mov
jae
cmc
jae
push
xchg
mov
mov
test
inc
mov
in
bound
mov
fisttpll
or
xlat
add
pop
cmpsl
scas
jnp
aam
mov
add
shll
mov
xchg
loope
cmp
mov
in
in
fcoml
sti
fsubrp
sub
lods
jns
inc
inc
sti
xor
clc
and
xorl
jmp
push
mov
test
lea
fnstenv
lods
insl
mov
and
adc
mov
fwait
lahf
ljmp
lcall
jne
pop
cmc
aam
popf
test
dec
dec
insb
inc
mov
jnp
mov
mov
mov
insl
mov
cli
xchg
and
add
call
xchg
sbb
fnstcw
and
push
adc
fs
aam
fildl
lods
mov
inc
jecxz
push
mov
cmp
aaa
in
mov
add
adc
scas
icebp
mov
mov
dec
lahf
mov
int3
lret
mov
adc
ljmp
rolb
ret
xlat
cmpsb
mov
subb
fs
packssdw
jecxz
inc
push
sarb
shrl
jl
pop
in
jecxz
add
cmp
pop
pop
fdivrl
and
std
cltd
sub
adc
mov
xor
push
pop
pushf
sub
pop
repnz
lods
in
into
add
mov
add
sbb
cltd
scas
stos
or
push
xchg
test
fcompl
imul
jecxz
pop
sbb
add
lods
into
sahf
pop
add
lret
lcall
inc
lea
rcrl
and
roll
scas
test
aad
les
out
movsl
cmc
adc
test
jg
mov
imul
mov
xor
cltd
sti
lods
mov
enter
daa
push
pop
pusha
addb
iret
movsl
pop
pushfw
or
fs
cmpsb
push
push
jo
dec
cmp
and
ds
inc
xor
ffree
add
test
rcll
xchg
mov
test
enter
fmuls
or
dec
jns
dec
mov
in
push
in
adc
mov
pop
stc
aam
mov
incl
das
mov
push
pop
adc
cmp
shr
imul
outsl
pop
cs
les
cwtl
call
notl
aaa
outsl
mov
mov
subl
arpl
outsb
adcb
icebp
add
mov
xchg
mov
push
mov
cmp
push
push
jecxz
inc
jle
das
cmp
cwtl
jnp
mov
sub
scas
out
mov
test
pusha
lret
jo
jb
clc
mov
cltd
pop
insl
sarb
mov
mov
test
jnp
mov
sbb
mov
sahf
imul
insl
adc
cmc
bound
or
sbb
adc
sub
xor
andl
mov
mov
sub
lea
stc
dec
fisttpll
loopne
jnp
aam
movsl
pushf
loope
repnz
lret
adc
or
jo
int
xor
arpl
outsl
loop
sub
dec
cwtl
pop
pop
imul
mov
xchg
push
test
xor
jmp
and
jo
mov
fidivl
faddp
gs
inc
scas
sbb
or
mov
dec
hlt
sub
scas
cmp
repnz
jb
add
cld
pop
mov
mov
jae
arpl
fdivs
loopne,pn
dec
dec
rolb
pusha
add
or
cmpl
mov
das
into
in
pop
lds
jecxz
jb
les
shlb
xchg
loop
mov
mov
adc
mov
push
jp
into
stos
jnp
outsb
inc
inc
pop
cli
sti
aaa
add
xchg
adc
popw
lcall
add
shrb
test
inc
lahf
aas
out
jno
lahf
pusha
adcb
shrl
xchg
out
rorb
add
sbb
push
shrl
addl
ret
outsb
fucomip
mov
jp
sbb
xor
inc
or
dec
je
js
popf
outsl
inc
add
and
sbb
into
pusha
mov
imul
mov
rolb
andl
xor
aam
and
lret
and
mov
into
shrb
addr16
jo
dec
sbb
nop
cmp
sbb
ss
icebp
push
push
in
inc
mov
dec
int3
jmp
aaa
mov
cld
cmp
scas
mov
push
sahf
xor
sbb
inc
jmp
inc
insl
or
sub
popf
inc
ljmp
addr16
sbb
mov
cmpsb
inc
adc
sub
lret
hlt
ja
push
in
push
add
lds
cmc
mov
stos
out
dec
mov
jmp
mov
out
mov
lret
and
mov
aaa
jb
xchg
xchg
and
xchg
sbb
sbb
out
sub
mov
movsb
out
cmpsl
enter
xor
cmp
push
xor
aaa
pop
fcmove
ret
out
orb
pop
hlt
cltd
lret
inc
js
std
add
cltd
or
cld
ret
daa
addr16
lock
std
in
sbb
jmp
or
jp
cmp
pop
out
insl
enter
cmpsb
jmp
mov
je
mov
out
cmpsb
dec
jecxz
popf
xor
repnz
fbld
xchg
dec
jp
outsb
out
add
xchg
fsubrs
mov
adc
sbbl
inc
push
pop
sti
movl
mov
lret
adcl
js
xor
lock
sarl
push
je
mov
adc
xchg
jne
jne
and
add
in
adc
adc
aaa
outsb
add
inc
sbb
sbb
and
xlat
mov
push
ffree
mov
adc
fs
inc
mov
inc
fdivs
cwtl
je
jmp
ss
xor
cld
xchg
arpl
ljmp
scas
sub
pop
pop
add
mov
lret
push
xor
sbb
add
dec
xor
and
sbb
mov
or
les
dec
test
dec
ret
in
stos
pop
mov
and
repz
sub
mov
icebp
push
and
jns
xchg
push
rclb
adc
pop
lock
lahf
andl
mov
mov
jle
cmc
mov
test
sub
subb
cs
movsl
test
fiadds
sbbl
in
dec
lret
dec
sbb
inc
sbb
jo
pop
loop
arpl
icebp
mov
mov
das
push
std
push
fildl
jo
push
push
out
jmp
cmpsl
jae
add
dec
repz
xor
inc
test
lret
jb
jnp
lock
je
fcmovbe
movsb
loop
scas
ficompl
pop
repz
out
popf
xor
push
push
stc
je
int3
call
out
stc
insb
std
xchg
adc
mov
xor
dec
test
push
jle,pt
sub
lretw
fisubrl
pop
lods
imul
jb
pop
sub
cs
cmp
imull
cld
sbb
dec
pop
dec
cmp
mov
xchg
fsubr
out
sbb
inc
jmp
or
shll
mov
jecxz
jmp
test
xchg
push
mov
stc
test
add
clc
dec
stos
insl
loopne
and
pop
andl
sbb
mov
into
fcompl
mov
sub
xor
and
mov
push
jno
cmp
add
lret
fcomip
or
pop
sbb
mov
jecxz
les
mov
fsubp
add
lods
lods
mov
mov
int3
mov
clc
lods
add
jmp
xchg
add
popl
lea
mov
popa
js
xor
or
adc
cmc
cmp
es
xchg
pop
movsb
mov
push
aam
cmp
in
insl
daa
dec
sbb
mov
test
or
les
add
push
xlat
rcrb
mov
ret
mov
loop
adcb
jne
int
add
pop
bound
jbe
cmpl
insb
adc
cmpsl
test
cmp
addb
and
mov
test
push
aad
pop
and
cmpsl
inc
push
fnsave
movsb
dec
push
and
aam
clc
in
xor
sub
xchg
mov
mov
out
ljmpw
rol
out
dec
je
jge
addl
jp
xor
iret
cwtl
lea
mov
subb
pop
or
xor
cltd
xor
mov
mov
jle
push
fnsave
scas
out
lcall
test
mov
or
pop
les
add
xor
je
mov
scas
mov
or
push
mov
repnz
jae
loopne
mov
mov
and
jne
sub
sbb
inc
sub
cltd
inc
movsb
inc
bound
sti
popl
push
mov
push
push
icebp
adc
push
pop
mov
sahf
mov
cmp
ljmp
lds
fwait
divb
loopne
mov
mov
add
fs
loopne
js
cmp
jg
pop
sub
xor
jle
cmp
xor
std
adc
sub
mov
mov
add
nop
jmp
dec
andb
or
xor
dec
out
xlat
test
add
andb
clc
adc
sub
ljmp
ljmp
dec
push
jne
loop
fninit
mov
ljmp
mov
cmp
mov
mov
ljmp
cmp
enter
mov
pop
push
rcrb
in
pop
pushf
cli
gs
jb
loop
adc
jo
push
jl
js
test
cmp
aad
mov
or
in
mov
frstor
jmp
mov
mov
push
fsubrp
or
xor
std
in
push
lods
push
aaa
push
insb
in
aas
xor
jo
iret
ds
inc
push
call
test
fucomi
and
and
rol
mov
push
jmp
xchg
or
dec
loopne
push
sub
dec
loopne
inc
arpl
mov
xor
jno
jb
add
push
inc
fbstp
xlat
mov
leave
or
lods
dec
jl
pop
scas
cmc
movsb
pop
jecxz
loopne
movsl
lods
xchg
sub
mov
arpl
add
test
mov
add
jle
fxch
addr16
push
jnp
jecxz
mov
push
mov
fimull
sbb
mov
jg
hlt
pop
fs
cmpsl
inc
popf
mov
roll
sbb
jp
jge
out
fwait
test
inc
inc
out
mov
pop
testb
imul
hlt
mov
mov
mov
call
mov
jmp
mov
dec
mov
dec
mov
push
lods
adc
imulb
in
fwait
jmp
or
call
int
sbb
sub
jmp
and
outsb
testl
xchg
mov
inc
sub
cmpsb
arpl
and
pop
push
jo
lea
adc
test
add
adc
and
imul
fiadds
adc
sbb
in
int
or
loop
pop
sub
push
push
andl
add
test
inc
pop
in
push
out
ljmp
shrl
pop
cmp
mov
dec
pop
mov
mov
into
xchg
daa
inc
lock
mov
mov
into
jo
jne
je
push
push
ret
in
pop
mov
pop
cmp
out
shlb
andb
xchg
jns
push
testb
or
add
add
int3
imul
test
lret
sti
in
inc
sbb
push
testl
test
rcrb
test
mov
repz
push
add
cwtl
cmp
jg
mov
test
pop
push
dec
loopne
sar
cmpsb
xchg
repnz
loope
sahf
popf
dec
movsb
aaa
addr16
and
xor
pop
gs
shl
enter
div
cmp
fisubrl
fwait
sbb
lret
out
cmp
inc
scas
sarl
and
add
or
mov
pop
sbb
and
sbbb
dec
add
adc
jae
cmpsb
mov
movsb
jecxz
test
mov
or
sub
fdecstp
dec
daa
add
rcrb
jno
cmp
push
pop
sbb
insl
dec
jnp
cltd
lods
inc
hlt
dec
mov
adc
repnz
xchg
xchg
scas
cmpsl
cmpsl
sub
mov
shlb
adc
in
dec
pop
xor
push
divb
sbb
mul
cmp
jnp
push
pop
lods
push
loopne
pop
lock
xor
gs
enter
xor
test
scas
mov
fsts
cmp
int3
icebp
scas
cmp
stc
sub
mov
adc
push
aad
jnp
icebp
adc
out
insl
sub
xor
xor
hlt
mov
scas
sti
test
mov
imul
fisubrs
push
jnp
jae
iret
dec
mov
lcall
push
in
add
cmp
push
mov
xchg
enter
data16
inc
dec
cmpsb
test
mov
fldl
in
decb
sbb
in
mov
adc
adc
std
or
jg
mov
mov
aam
cmp
out
pop
loop
cltd
xlat
outsb
cmp
jge
fsts
lods
dec
loopne
arpl
stos
cmpsb
imul
mov
push
sub
sub
pop
and
std
mov
lahf
pop
ds
lcall
popa
mov
lods
jg
mov
movd
push
imul
mov
jne
fidivs
mov
xchg
divl
aam
push
push
out
push
out
scas
mov
sub
inc
add
dec
test
mov
xor
jb
jne
mov
sbb
repnz
xchg
mov
xchg
xor
cmc
js
adc
mov
fsts
nop
insl
out
loopne
inc
pop
fnsave
movsb
das
pop
xor
jle
loope
ss
ret
jnp
mov
push
xchg
push
xchg
sub
cmp
insb
pushf
sti
mov
mov
dec
cmp
inc
pop
sub
dec
mov
push
lods
lret
jns
cmc
lock
call
lea
push
out
mov
and
out
aad
pushf
xchg
ljmp
cmp
xlat
out
cld
hlt
cltd
xor
adc
pop
call
rolb
leave
test
push
repz
fmulp
push
es
mov
imul
xor
fcoms
cmp
lods
ljmp
repnz
xchg
dec
and
mov
xchg
cmpsb
xchg
gs
xchg
shl
cltd
rcrb
clc
sbb
movsl
pop
push
mov
cmpsl
or
cltd
sub
sahf
xor
and
push
add
pop
ss
and
mov
loopne
fldt
stos
xchg
mov
jg
cmp
insl
jge
out
outsb
dec
lret
or
enter
adc
imul
aas
lret
fbld
pop
jmp
sbbb
or
inc
mov
mov
outsl
dec
lods
cli
sbb
pop
mov
andb
aaa
test
sahf
and
out
fsubrs
movsl
jno
mov
pop
rep
xor
ret
push
hlt
xchg
pop
lcall
add
and
fidivrs
pop
imul
cmpsb
push
mov
in
cli
js
sub
stc
popf
ds
jnp
xlat
jmp
shrb
dec
addl
sbb
sahf
shrl
cmp
mov
popa
iret
sbb
sub
xchg
cs
dec
dec
or
decl
movsl
call
sub
test
shll
stc
test
xor
jge
cmp
xchg
pop
adc
mov
add
aaa
mov
adc
addb
mov
cmp
es
out
icebp
je
cmp
insb
gs
icebp
cmc
xor
in
mov
lods
nop
pop
mov
xor
repnz
pop
into
adcl
jl
dec
fidivrs
dec
or
inc
jbe,pt
out
mov
add
jnp
cwtl
jae
inc
int3
stos
inc
inc
cmp
scas
in
int
inc
dec
fsts
repz
add
and
pop
or
mov
add
dec
iret
dec
xor
in
push
jmp
mov
or
cmpsb
sbb
icebp
xchg
xor
jp
push
mov
out
xchg
stos
jne
es
push
repnz
das
outsb
adc
xchg
adc
inc
mov
xchg
cwtl
dec
and
mov
mov
lods
aas
dec
pop
xor
scas
dec
inc
fisubs
pop
adc
or
mov
adc
nop
repz
add
xor
sub
inc
es
dec
loope
daa
jmp
push
roll
mov
pop
xchg
in
aaa
dec
dec
pop
je
mov
add
xor
xchg
pop
add
sbb
inc
std
add
sbb
xchg
loopne,pt
cmp
jae
or
sti
push
das
jg
xchg
fwait
icebp
xlat
jmp
std
or
cmpsl
dec
mov
neg
inc
pop
lret
adc
mov
push
jb
adc
cltd
sbb
inc
ret
pushf
jns
inc
fidivrs
adc
pop
or
pop
popa
push
mov
mov
outsl
push
pop
into
call
or
xchg
adc
add
sarl
mov
xor
and
js
jg
lods
adcl
push
cmova
loop
sub
or
cmp
mulb
movsb
shrl
fildll
cmp
jne
push
test
jns
jae
ret
pop
sub
mov
adc
push
lods
cli
lcall
xchg
cmpsb
ds
jge
aad
or
add
movsb
into
and
fwait
mov
arpl
xchg
daa
mov
daa
lcall
cmp
in
fidivl
or
lcall
insl
ds
es
jo
xchg
xchg
sub
add
scas
xchg
mov
dec
fwait
inc
lahf
mov
xchg
loop
cmp
mov
adc
out
loope
in
fadds
sub
push
aam
xchg
and
loope
inc
lcall
inc
push
fimull
mov
addb
push
aaa
adc
test
lds
loop
add
pop
dec
add
aad
sub
sahf
ss
cmc
movsb
pop
mov
pop
push
jp
xchg
or
mov
adc
imul
adc
jno
and
adc
sbb
icebp
dec
insl
lahf
ljmp
cwtl
lcall
imul
cmp
cmp
push
pop
push
insl
sub
incl
xor
roll
mov
enter
stos
xchg
fsub
jne
and
dec
data16
test
cwtl
sub
jns
dec
dec
add
ret
pop
and
icebp
cmp
rcr
mov
or
jp
test
daa
fcmovu
bound
lea
and
mov
pusha
repnz
mov
in
add
xchg
add
fisubrl
push
aad
cmp
inc
aam
cli
addps
loopne
pop
xchg
call
dec
movsb
mov
in
mov
aad
xor
jmp
sbb
or
push
data16
les
sbb
fwait
mov
and
jl
xor
dec
xor
xchg
add
test
loop
sub
movsb
cli
xchg
jnp
or
inc
std
jge
cmc
jne
cmp
xchg
mov
std
or
push
mov
adc
adc
jo
jge
lcall
cmp
shrl
mov
fs
mov
in
sbb
mov
pop
mov
mov
sbb
jnp
mov
jnp
loope
sbb
cmp
xor
inc
outsb
sbb
pop
cmp
or
push
cmp
in
hlt
cmc
push
mov
adc
mov
push
push
and
sub
sub
out
aas
lods
push
repnz
adc
dec
ss
push
push
inc
xor
jb
mov
mov
inc
mov
xchg
pop
cmc
les
jmp
insb
mov
jp
jbe
jno
fisubl
cmpsl
cmp
cmp
popf
sub
xor
lea
lahf
mov
cmp
dec
mov
dec
dec
nop
imul
sub
jae
addb
je
mov
fldcw
push
xchg
jo
test
movsl
mov
push
inc
fmuls
adc
jo
xchg
pop
dec
scas
inc
rcll
sub
test
loope
dec
nop
gs
inc
lods
push
ds
je
or
scas
data16
xchg
lcall
aad
sahf
or
inc
divb
lret
insl
sbb
xor
hlt
aas
jl
mov
cmpsl
dec
loop
ss
cs
testl
ds
in
outsl
cmp
mov
push
and
repz
dec
cmpsl
pop
movsl
fmuls
fists
mov
cltd
addr16
into
mov
aad
inc
adc
sbb
cmpsb
adc
mov
xchg
mov
mov
pop
xchg
push
movsb
test
inc
sbb
xorl
push
lcall
insb
decl
dec
sti
xor
pop
scas
aad
or
int3
jle
in
sub
push
rcrl
shrb
mov
aas
pop
outsl
add
cmp
test
in
xchg
add
nop
xchg
out
ret
jae
repnz
pop
jae
imul
outsl
mov
aam
pop
pop
icebp
jnp
iret
sbb
stos
stc
pop
scas
mov
out
ja
xor
loop
nop
mov
sub
pop
and
lods
sbb
cs
cmp
adc
cmpsb
jae
es
and
or
push
icebp
sbb
in
jg
in
cwtl
lods
ds
cmpsl
jg
ja
scas
xchg
xor
pushf
xchg
les
jb
sbb
adc
dec
sbb
out
lahf
or
repnz
dec
push
cmp
jecxz
push
pop
push
test
lret
or
scas
lock
movsl
push
jmp
ljmp
cmp
js
loope
ds
add
ret
loop
fidivl
mov
js
jge
mov
stos
add
inc
loop
fucom
add
fbstp
and
cwtl
xchg
adc
call
mov
cs
pop
enter
xor
shl
and
test
xchg
lods
jbe
inc
push
leave
dec
and
syscall
fdivs
rolb
mov
call
fists
mov
jecxz
js
ljmp
in
fisubl
pop
hlt
sbb
inc
outsb
sub
xchg
xchg
pop
jbe
je
push
cs
mov
ss
roll
popa
decl
and
call
cmp
push
in
push
jecxz
mov
outsb
add
test
pop
ds
loope
fdivs
addl
pop
outsb
cmp
sahf
push
test
push
stos
sbb
pop
xchg
ss
in
push
jbe
add
daa
cli
pop
addl
sbb
cld
fmuls
cmp
in
arpl
sbbl
cwtl
mov
cmp
outsl
mov
cmpb
push
ljmp
pushf
jae
or
pop
inc
xchg
loop
in
es
jne
lds
pushf
enter
aaa
cmc
aas
out
inc
jg
cmp
dec
dec
stos
inc
addb
jo
sti
push
jle
pop
ja
lock
mov
popf
popa
aas
or
lock
js
fiaddl
inc
aam
stos
xor
es
test
test
add
adc
add
xchg
outsb
add
sbb
and
out
push
adc
or
mov
test
out
dec
inc
insb
push
fisubrl
mov
js
je
aas
inc
sbb
dec
adc
dec
and
mov
and
dec
loope
in
les
movsl
fldcw
pop
add
mov
mov
mov
mov
movl
lock
mov
rclb
adcb
push
pop
aad
das
stos
fisubl
pop
cmc
div
cmp
mov
divl
add
add
inc
fidivl
cmp
test
fdivrs
lret
jl
je
adc
xor
es
ss
fidivl
pop
popa
clc
mov
sahf
movsb
and
mov
adc
dec
pushf
sti
daa
mov
pop
add
shll
call
mov
out
jl
add
jmp
sbb
iret
loop
ds
fisubs
test
mov
fneni(8087
jge
cmp
out
mov
and
jle
and
icebp
sbb
pop
sub
in
cld
lret
sti
mov
imul
cmp
mov
sbb
repz
push
outsb
aas
test
in
or
pop
idivb
cmp
adc
imul
imul
rcll
xchg
pop
je
in
push
test
jnp
ret
sub
vprotw
lds
pop
pop
jmp
jns
adc
sbb
jge
fwait
and
xchg
inc
mov
aaa
movsl
xchg
test
sbb
xor
cmpb
cmc
enter
xor
out
hlt
test
arpl
mov
out
int
jg
sbb
cmp
xchg
sbb
dec
jns
imulb
push
mov
mov
jnp
scas
and
adc
add
push
push
and
inc
loope
xchg
sbbb
call
dec
adc
dec
mov
imul
xchg
nop
mov
mov
sbb
jp
dec
inc
jp
int3
lahf
and
xchg
aaa
add
mov
sbb
adc
and
mov
lds
mov
sarl
dec
mov
lret
ds
sbb
imul
mov
repz
lock
push
mov
jae
mov
sbb
jne
push
mov
jmp
cmp
sbb
in
loop
and
push
or
sbb
test
mov
xchg
sub
shrl
mov
arpl
inc
lods
dec
xlat
mov
mov
xor
xchg
push
sub
mov
outsl
inc
push
lods
in
fdivp
sbb
mov
sbbb
push
xorb
test
ljmp
inc
add
mov
loopne
cli
pop
ret
ds
mov
lock
pop
fidivl
jge
jge
aaa
pop
mov
mov
inc
inc
loopne
adc
repnz
push
mov
ss
ljmp
mov
xlat
add
int3
jecxz
mov
int3
adc
dec
dec
xor
jne
movsb
push
inc
jge
and
xor
inc
imul
adc
in
sbbl
dec
xor
dec
cltd
and
mov
sarb
lcall
hlt
mov
sub
les
test
jp
hlt
mulb
dec
aaa
mov
pushf
out
test
cmc
jb
outsb
movsl
ja
icebp
enter
pop
sub
xor
fs
mov
test
or
ds
adc
or
outsb
in
daa
dec
mov
xor
cmp
inc
outsb
insl
add
ss
outsl
pushf
adc
pop
icebp
xchg
adc
cmp
clc
sbb
lahf
pop
xor
pushf
orb
movsb
cmp
cwtl
stos
mov
insl
jbe
cmp
mov
aad
inc
sbb
cmp
mov
cmp
push
sbb
add
mov
out
jle
je
jo
push
or
out
mov
inc
mov
test
lret
test
js
int
sub
int
ja
pop
test
mov
nop
mov
in
adc
cmc
pusha
mov
movsl
call
in
mov
stos
mov
mov
push
inc
adc
adc
pop
dec
roll
push
mov
dec
ljmp
aas
pop
mov
test
lret
ljmp
int
sti
pop
aaa
aaa
cwtl
iret
lretw
inc
cltd
movsb
lods
mov
das
iret
std
xchg
add
stc
mov
sbb
stos
sbb
fwait
orl
into
lock
mov
test
inc
pop
xchg
add
mov
and
int
cmpsl
xor
xor
in
outsb
mov
pop
out
jmp
sub
rorl
imul
std
mov
aaa
pop
ss
out
enter
dec
xchg
test
lock
bound
pop
aaa
iret
push
out
in
arpl
sbb
mov
repz
and
ficomps
cmp
xchg
or
add
pop
or
xlat
push
mov
pushf
pop
loopne
daa
mov
fldl2t
stos
xchg
fsubs
xlat
xchg
xchg
lcall
cmp
inc
mov
jns
mov
clc
ds
fdivr
jg
jo
and
flds
jae
enter
rol
xor
add
bound
inc
lods
push
addr16
and
arpl
adc
inc
fildl
push
jmp
imul
sbb
iret
jecxz
and
push
repz
inc
xlat
sbb
ljmp
xor
and
and
and
test
cwtl
mov
cmpsb
imul
das
push
sbb
les
xchg
aaa
cmc
icebp
outsb
addl
enter
push
xchg
addb
mov
shrb
xchg
add
push
cltd
mov
xlat
cmc
lds
lcall
repnz
xor
aam
cld
nop
xchg
pop
aaa
sahf
mov
mov
cmpsl
femms
adc
xlat
test
dec
jb
cmc
adc
inc
pop
cli
adc
out
mov
fwait
out
addl
shrb
push
push
jle
mov
add
enter
mov
lods
adc
adcb
ss
jae
aaa
shr
aaa
nop
pop
xchg
out
loope
lcall
mov
out
sbb
fcoms
fdivl
pop
clc
test
or
xchg
pop
movsl
cld
int3
mov
push
arpl
int
test
dec
lahf
es
or
shl
push
pop
aad
xchg
inc
push
lahf
enter
mov
test
sbb
cmp
adc
in
lds
sbbb
xchg
into
lods
inc
sub
mov
pop
pop
testb
js
push
push
sbb
daa
sub
or
cmp
jo
or
jge
in
xorl
insb
popf
or
enter
ss
cwtl
jmp
cmp
movsl
insb
ljmp
xorl
enter
adc
adc
dec
sbb
not
imul
repnz
addr16
jae
dec
outsl
mull
lea
cmp
jge
xchg
jge
fwait
lock
jo
mov
or
xchg
test
adc
mov
cmp
or
xchg
stos
es
outsl
mov
inc
jno
adc
xchg
xor
and
add
leave
cwtd
jle
jl
ss
pop
sub
jno
loope
sub
push
mov
loope
sub
nop
dec
pop
push
mov
mov
push
adc
inc
add
enter
inc
stos
cltd
lret
xchg
push
push
sub
mov
lret
inc
dec
sbb
enter
imul
cli
dec
xchg
pop
lock
out
fldenv
mov
sarb
test
in
movsb
sub
dec
push
outsl
push
mov
adc
sub
xor
mull
cmpsb
loope
mov
mov
jo
sbb
mov
out
jl
aad
in
cmp
push
jp
out
dec
int3
call
sub
and
cmpsl
push
shl
test
sub
and
pop
mov
insb
test
mov
mov
sti
stos
fs
lcall
movsl
xor
mov
sahf
mov
sub
aas
icebp
pusha
and
daa
pop
lret
push
sub
push
add
and
out
icebp
mov
sbb
lea
fildll
imul
jp
sbb
add
sbb
push
dec
out
dec
mov
out
xchg
inc
decl
je
and
dec
lods
fidivrl
into
dec
adc
jne
cmp
jge
dec
cmp
cmp
call
fstpl
push
movsb
jmp
lret
inc
cld
cmp
lea
scas
nop
out
sub
add
repnz
cmpsb
sub
adc
xor
mov
les
add
cs
jo
pop
cmp
mov
jne
fldcw
out
sbb
adc
loop
stos
cmp
andl
and
popf
xor
cmp
mov
jb
cmpl
addr16
repnz
sub
cs
in
or
push
add
clc
or
repnz
jno
or
js
or
imul
mov
aas
vmovlps
addr16
xchg
inc
mov
add
mov
push
mov
jnp
ljmp
mov
sub
pop
lods
xchg
fbstp
mov
cltd
lret
dec
push
sub
mov
and
rcrb
mov
sahf
push
pop
cmp
test
jmp
mov
mov
outsl
xchg
lds
divb
insl
insl
mov
xchg
test
and
rcll
mov
imulb
movsl
loopne
adcb
mov
and
cmpsl
or
iret
in
push
inc
fcmovnbe
gs
sub
jb
rolb
pop
stos
adc
lret
jnp
adc
and
mov
into
or
movsl
clc
sahf
mov
mov
push
mov
xchg
outsl
js
ret
js
push
mov
mov
xchg
insl
dec
fstps
dec
mov
pop
xchg
adc
out
push
sbb
mov
add
lea
test
cmpsb
jg
sbb
cwtl
sub
xchg
inc
out
rorb
jo
dec
aas
or
dec
mov
and
sbb
inc
sub
push
cmc
push
inc
push
cltd
jbe
jl
outsl
sbb
push
pop
jle
cwtl
mov
push
js
push
icebp
mov
frstor
gs
ret
fsubs
shll
ljmp
fdivs
jbe
test
inc
adc
push
inc
jle
adc
pusha
mov
mov
ret
jns
xchg
jno
cltd
sbb
int
sarb
add
fisubrl
dec
popa
rcr
inc
pop
mov
jmp
pop
test
shrb
nop
dec
inc
scas
and
shll
cmp
add
push
sub
mov
xlat
sub
inc
in
pop
push
push
push
jno
adc
mov
jge
cmp
pop
orl
xchg
and
xor
out
dec
or
xor
mov
lods
int3
lcall
mov
inc
adc
add
inc
xchg
stos
jbe
xchg
add
outsl
clc
and
test
push
ret
leave
and
mov
repnz
xor
adc
pop
clc
mov
mov
pop
in
cmpps
jp
leave
gs
mov
jg
call
iret
and
arpl
and
fldl
cmc
mov
out
insb
pop
das
test
cwtl
lret
popf
popf
popa
push
fldt
xchg
in
mov
adc
push
notb
ret
rep
inc
or
or
and
sub
and
adc
test
pop
sub
fdivrl
xor
jp
mov
push
fisttpl
faddl
and
pop
sahf
shll
pop
aad
aad
aas
enter
ljmp
push
or
adc
pop
pop
sbb
rcl
push
scas
sbb
dec
movsl
icebp
dec
sub
imul
mov
dec
pushf
or
imul
mov
xor
cmp
repnz
cmpb
mov
xor
push
jnp
xor
and
sbb
orl
adc
sbb
fs
xor
out
bound
clc
push
mov
inc
jo
arpl
sub
cmc
lea
sbb
xchg
ds
testl
xchg
rcrl
pop
and
movsb
mov
in
and
adc
lods
aas
sbb
xor
gs
cmp
sub
jne
xchg
mov
push
sub
lret
adc
cld
mov
std
inc
pop
xor
xor
insl
and
stos
inc
inc
lcall
or
fwait
adc
ret
incb
mov
jae
jne
cmp
imul
loop
sbb
dec
dec
pusha
mov
mov
xor
int
add
dec
lea
xchg
inc
mov
push
lcall
xchg
aad
enter
cmc
mov
adc
mov
dec
bound
jo
incb
xor
inc
fistpll
add
add
dec
rcrb
mov
cmp
or
adc
sahf
imul
lret
inc
xchg
jge
mov
sbb
cmp
jmp
shll
dec
adc
aad
js
nop
inc
ja
ja
pop
xchg
mov
les
icebp
xchg
loope
dec
xchg
mov
shrl
dec
pop
das
adc
cltd
push
es
pop
jo
shl
ss
movsl
cmp
jl
inc
test
inc
ficoml
dec
dec
loopne
mov
aaa
push
aaa
scas
repnz
leave
add
mov
jo
cmp
jg
mov
sub
sbb
jo
cmpsb
dec
push
ja
lods
test
inc
push
add
loope,pt
lcall
inc
hlt
mov
push
add
add
jmp
sahf
or
inc
add
xorl
adc
dec
repz
and
push
lret
xor
adc
out
ret
test
mov
andb
jne
ficomps
lcall
cmp
xor
inc
aas
sar
daa
std
inc
fnstsw
push
mov
out
jmp
fldt
and
mov
add
xor
jg
sub
mov
adcl
repz
aad
jbe
xchg
notb
outsb
xlat
xchg
lods
not
imul
cmpsb
gs
jg
inc
lock
push
shlb
lcall
mov
stos
test
loop
add
fincstp
or
cwtl
dec
hlt
adc
aam
mov
push
mov
mov
xchg
and
ret
fs
pop
fwait
imul
lret
dec
mov
cmp
inc
fcmovu
mov
shlb
push
dec
dec
gs
cmpsb
insb
sbb
mov
aam
dec
dec
fisubs
outsb
imul
sub
test
ljmp
js
pop
jmp
test
cmp
inc
mov
cmpsb
xchg
pusha
fisubl
in
jno
fimull
decl
adc
adc
fadds
call
insl
cmp
mov
jp
pusha
and
int3
xor
insb
add
lods
rorl
movsl
inc
sub
pop
push
repz
adc
adc
loop
dec
push
jmp
scas
dec
jo
xor
shrl
mov
sbb
test
cmp
mov
push
dec
rcl
insb
push
fsts
inc
in
clc
daa
test
call
sbb
repnz
pop
inc
inc
repnz
xor
sbb
mov
mov
cmp
aad
into
in
out
scas
xchg
movsb
test
pushf
xchg
or
stc
in
movsb
adc
arpl
pop
pop
in
subl
jg
stc
or
mov
out
cld
lcall
cmpsb
sub
fcomps
out
in
push
dec
mov
or
ss
adc
push
out
pusha
xor
rcl
cmpsl
push
negl
and
xchg
mov
xor
stos
xchg
mov
xor
outsb
jl
adc
inc
sub
inc
ficompl
insl
mov
mov
pop
mov
aaa
or
cmc
leave
rcrl
add
pop
pop
call
inc
dec
sahf
mov
jmp
icebp
movsl
out
mov
inc
testb
jecxz
or
mov
movsl
jmp
jmp
jmp
xor
xor
adc
cwtl
xchg
cwtl
test
fsubr
test
mov
lods
stos
or
aam
loop
and
addps
shlb
pusha
jge
sbb
mov
and
aaa
sbbl
push
loopne
cmp
int
aad
call
add
cmpsb
not
and
pop
xor
outsl
idiv
fnstenv
sbb
mov
mov
je
xor
add
mov
pop
aad
or
push
and
out
nop
mov
mov
aas
mov
fiaddl
adc
xor
pop
scas
in
ljmp
jb
pop
pop
pop
fldl
repnz
and
arpl
push
push
ret
out
dec
fldt
repnz
jb
lcall
jb
aad
lods
ror
pop
pushf
dec
pop
inc
mov
pop
or
pop
repnz
dec
int
mov
loope
or
adc
pop
cltd
xor
idivb
push
in
push
or
decl
sbb
loopne
jb
lahf
in
inc
lods
adc
in
lods
or
rol
lea
out
popf
push
or
in
jecxz
adc
pop
iret
das
les
mov
mov
or
sbb
mov
xchg
testl
xchg
stos
les
lret
jne
leave
pop
sub
popa
test
fidivs
lret
rorb
mov
and
pop
push
dec
cmp
cwtl
loopne
pop
lcall
sub
shlb
test
xchg
in
mov
jp
std
cmp
lret
inc
ljmp
inc
out
xor
cld
fists
jmp
inc
jle
adc
xchg
push
add
gs
mov
dec
push
rolw
lds
imul
cmp
sbb
dec
jecxz
repnz
call
mov
inc
mov
in
cmp
insb
out
lods
loope
insl
adc
xor
outsb
mov
sub
cmp
xor
lret
aam
mov
xor
xchg
aad
stos
push
dec
push
xchg
in
push
xor
ret
icebp
mov
or
nop
ja
and
fimull
cmp
cltd
dec
fldt
xor
incb
ficoml
xor
xor
jae
pop
ds
dec
cmp
shrl
fsubrl
push
mov
lods
mov
inc
mov
scas
dec
mov
mov
or
aad
repnz
out
fstpl
dec
out
shll
sub
cmc
jge
pop
jo
lahf
sub
daa
aam
cmp
jmp
out
pop
adc
roll
pushf
sarl
je
push
mov
call
lock
adc
xor
je
xchg
loope
in
mov
insl
cmp
in
call
mov
mov
xchg
push
push
out
xchg
sub
jp
gs
xchg
xchg
dec
add
mov
ficoms
aas
push
arpl
push
pusha
xor
cmp
fdivrs
push
arpl
lret
out
out
xor
mov
loope
js
or
adc
jae
jg
lods
push
inc
sbb
add
mov
aam
xchg
add
jne
ret
or
aad
xchg
or
dec
adc
pop
mulb
mov
ret
and
stos
xchg
imul
xchg
mov
int3
pop
inc
cmp
xor
fimull
lds
repz
and
dec
sbb
sub
push
push
xor
xchg
jl
dec
in
int
insl
fbstp
xor
fisubrs
stos
scas
sub
mov
jge
mov
cmpsl
and
js
jl
popa
jecxz
call
rorb
mov
scas
xor
jecxz
cld
lcall
jne
mov
fs
pop
cltd
pop
xchg
data16
or
imul
mov
push
aam
fadd
das
or
loopne
pop
gs
push
cmpsb
add
dec
adc
bnd
jg
jle
subb
mov
lret
clc
sub
xor
xchg
cmpb
lods
inc
aam
cmp
outsl
inc
popf
dec
es
imul
loope
push
pop
jae
dec
dec
add
pop
dec
cmp
sub
jmp
xchg
xor
in
push
sub
loope
ds
lods
in
loop
aad
or
arpl
or
xchg
cs
icebp
fidivs
jl
mov
fmul
xchg
sub
pop
decb
lods
sbbl
int3
or
jecxz
fldcw
mov
jno
mov
lock
inc
popa
divl
lret
or
pop
inc
push
jl
imul
inc
stc
leave
repnz
lods
test
dec
scas
int3
or
xlat
dec
stos
mov
cmp
push
xor
les
jo
pop
jb
dec
movsb
jg
mov
add
xchg
shrl
cltd
rclb
xor
push
fs
ret
divb
cmc
mov
stos
xchg
test
push
xchg
imul
ja
mov
adc
dec
mov
imul
test
xor
fists
aas
push
jge
lcallw
xchg
mov
xorl
or
jmp
and
ja
dec
xchg
add
jnp
mov
jb
inc
xchg
cwtl
jb
into
add
out
jns
xor
mov
out
test
arpl
rorb
push
push
pop
ja
push
xchg
add
xor
out
fildll
out
dec
mov
dec
pop
sub
jo
in
jb
push
jnp
lea
xchg
cs
movsl
mov
jbe
jp
addr16
outsl
in
fwait
cmp
js
ja
add
bound
xchg
sub
clc
fpatan
and
xchg
nop
addl
dec
fld
mov
inc
mov
dec
ret
ret
cmp
pop
rorb
xchg
ds
ret
jo
adc
sub
imul
ret
std
cmp
in
or
popf
enter
repz
jno
movsb
js
cmp
sbb
pushf
jo
sub
mov
xchg
mov
sti
and
inc
xchg
xor
and
lods
pop
cmp
jle
add
je
fmulp
mov
negl
cmpsl
mov
ss
xor
stc
rclb
xor
es
out
or
fidivs
jmp
loope
sub
stos
pop
in
stos
fiadds
cmpsl
and
xor
loop
lretw
push
xchg
int
mov
mov
negl
xchg
push
mov
mov
lahf
stos
gs
adc
aas
insb
sub
pop
add
inc
jo
mov
add
test
adc
add
in
popf
insb
xchg
add
mov
sbb
test
out
bnd
cmp
jge
scas
scas
les
ja
fisubs
add
jl
imul
or
adc
pop
push
pushf
daa
cmpsl
pushf
in
dec
ja
lret
inc
enter
shlb
push
insl
lcall
cli
jbe
jns
mov
rcrl
jno
leave
pop
adc
aad
sbb
imul
lods
in
xchg
pop
inc
stos
jmp
add
int3
lods
mov
push
mov
adc
jno
ss
inc
dec
mov
dec
xor
mov
lods
cmpsb
rclb
out
je
cmc
lods
push
repnz
mov
test
jb
cmp
inc
pusha
arpl
xor
push
inc
test
out
xor
rolb
mov
mov
sbb
push
jmp
out
xor
mov
test
hlt
sar
mov
rolb
mov
and
push
fidivs
xchg
xchg
dec
ljmp
pop
or
sub
inc
mov
push
lock
loope
stc
jl
movsb
dec
adc
ficomps
or
nop
scas
jp
xchg
cmp
inc
lea
dec
push
mov
mull
cltd
pop
cld
ret
mov
xchg
adc
mov
rolb
mov
fidivrs
mov
test
mov
aas
imul
lret
movb
leave
dec
in
push
mov
sub
xor
mov
imul
xchg
not
nop
sbb
mov
je
mov
fucompp
rcrl
aam
sbb
and
jl
pop
pop
mov
cltd
mov
sub
jo
fstl
mov
mov
scas
cmpl
lock
pop
pushf
into
imul
jle
popa
mov
shr
or
dec
loop
mov
or
mov
cwtl
add
dec
lea
popf
jae
addr16
pop
jno
fsubr
cld
add
cmp
popl
lods
sbb
movsb
mov
or
jae
mov
loopne
sbb
call
xor
pop
push
push
jecxz
push
arpl
mov
add
mov
jo
mov
mov
add
xor
jle
sub
sbb
out
sbb
dec
push
pop
call
addb
dec
mov
or
aam
mov
bound
popa
fisubrl
or
insl
dec
xchg
dec
dec
mov
cmp
das
dec
lcall
jne
sub
mov
stos
pop
xor
cmp
test
movsl
xchg
mov
rcll
sub
fnstenv
in
mov
push
test
repnz
imul
sbb
mov
addr16
in
push
pusha
cmp
ja
or
iret
lods
add
xchg
sbb
inc
ljmp
out
mov
pop
jne
insb
inc
add
mov
jne
arpl
mov
int3
jg
pusha
jne
push
pop
fidivs
divb
loopne
add
mov
inc
xchg
pop
out
iret
ds
inc
fsubr
filds
hlt
adc
push
scas
inc
test
sbb
xchg
jmp
fstps
pusha
xchg
dec
outsb
add
insl
sbb
sub
mov
rorb
lods
rcrb
xchg
loope
sbb
rcrl
orl
jge
outsl
pop
sub
aas
sub
mov
pop
sti
inc
pop
pop
mov
leave
das
jnp
add
inc
sub
inc
mov
shrb
repz
jb
fdivs
mov
insb
sbb
sbb
push
inc
rcll
xorb
movsb
cmp
ret
dec
iret
gs
push
push
addr16
push
imul
xor
jnp
push
imul
repz
cmp
clc
sub
inc
arpl
dec
mov
cmp
sahf
xchg
mov
mov
cmpb
cmp
ss
pop
ds
shll
hlt
sub
mov
ret
pop
enter
mov
mov
dec
lods
jae
out
in
xchg
xor
aam
es
jb
inc
in
insb
inc
and
xchg
dec
jmp
mov
dec
pop
lea
mov
pop
call
addr16
data16
mov
test
inc
nop
xorl
pop
mov
xor
repnz
lods
nop
es
in
shrl
rolb
jp
dec
jmp
nop
dec
sarl
aad
movsl
pop
ret
repz
cmpsb
ror
pop
push
mov
andl
adc
xor
mov
pop
dec
rcrb
bound
nop
pop
mov
arpl
shl
or
sti
xchg
mov
sbb
mov
mov
mov
and
mov
mov
sahf
inc
dec
mov
aaa
and
test
pop
jb
pop
movsb
jb
fbstp
jl
and
xchg
lahf
test
insl
imul
cmp
adcl
and
mov
out
fldcw
jp
incl
mov
sarl
outsl
int
ret
and
mov
adc
dec
lret
and
fstpt
jb
cld
insl
das
sbb
jo
hlt
cmp
mov
pop
mov
pop
adc
mov
sub
jecxz
or
mov
fwait
loope
in
out
scas
mov
and
xor
into
cld
daa
sbb
mov
add
dec
mov
pop
in
lea
adc
mov
repz
adc
or
out
push
jl
cmp
xchg
push
ret
icebp
mov
hlt
outsl
dec
jg
jnp
ret
dec
cmc
add
imul
mov
fwait
ljmp
movl
push
dec
mov
lret
xchg
ljmp
mov
out
mov
pop
les
and
cmp
jb
dec
popf
add
icebp
cmp
mov
out
xor
jle
in
popf
mov
jno
pop
xchg
sub
mov
pop
mov
loopne
cmp
nop
mov
mov
pop
jl
jno
pop
subl
hlt
cmpw
and
fildl
inc
bound
mov
fdivp
inc
std
xchg
adc
inc
push
popf
mov
or
in
rcrb
push
cmc
xchg
adcl
mov
pop
push
jmp
or
dec
pop
inc
xchg
lock
lahf
pop
es
mov
mov
roll
sbb
repnz
lea
addb
ds
movsl
mov
rcl
sbb
das
ret
jo
daa
mov
push
push
jae
mov
imul
sbb
idivb
adc
push
movsl
mov
add
cmp
xchg
push
mov
js
sub
sub
cmp
cmc
clc
pop
mov
loopne
xchg
push
add
or
pop
hlt
pop
sub
jnp
pop
dec
jl
add
push
xchg
and
pushf
add
ret
mov
das
mov
dec
mov
ja
sub
ja
aaa
das
les
cmp
mov
jecxz
int
pop
lcall
and
insl
pop
inc
pop
dec
push
test
xor
les
mov
push
add
xchg
cmp
int
jns
adc
mov
jmp
inc
and
or
push
and
xlat
cwtl
inc
push
aas
clc
aas
mov
sub
jne
test
add
pop
xor
push
sub
jecxz
cli
or
xlat
nop
out
add
adcb
outsl
decb
scas
xchg
pop
sbb
mov
jnp
mov
adc
iret
ja
pop
fisubs
cltd
push
out
inc
fsubl
pop
jbe
pop
daa
data16
adc
mov
add
dec
jp
negb
xor
das
cmp
repz
mov
roll
js
pop
xor
aad
jmp
xchg
pop
leave
adc
pop
inc
hlt
repz
pop
popa
push
mov
pop
inc
out
jge
bound
lcall
sbb
popa
clc
cmp
jge
push
cld
jp
aaa
and
mov
xchg
js
add
jmp
inc
mov
mov
add
scas
daa
out
cmpsb
iret
and
scas
int
push
enter
pushf
inc
push
into
leave
scas
outsl
sti
out
xor
xchg
rcl
lret
lock
or
notl
mov
add
stc
popf
mov
lahf
mov
pop
stc
decl
movsb
adcb
xlat
cmc
notl
push
out
cmp
rclb
pop
lock
mov
or
push
push
arpl
cmp
movsl
lds
iret
or
cli
loopne
ds
std
pop
mov
fnsave
or
stos
sti
xchg
mov
lock
push
lock
xor
leave
es
sti
mov
push
std
in
push
or
in
sub
movsl
dec
lret
xor
repnz
cmp
push
divl
cmp
or
out
lds
cmp
into
imul
arpl
popa
outsl
add
sbb
dec
mov
jp
je
pop
jle
add
jg
and
sbb
scas
pop
add
sbb
int
jecxz
cli
mov
dec
cmp
shll
xchg
jmp
mov
xchg
pop
pop
aad
cmp
mov
mov
popa
jmp
sbb
xchg
lods
cld
enter
mov
jmp
mov
fstpt
xlat
xlat
outsb
out
into
andb
sbb
je
jmp
fnstsw
cwtl
xchg
cs
jl
mov
lahf
cmc
add
cld
add
out
pushf
push
mov
pop
test
xchg
jae
add
rcrb
aad
sbb
dec
std
mov
and
fdiv
sbb
xor
mov
and
lcall
dec
in
inc
movsl
mov
and
popa
jns
adc
test
mov
test
int
jne
xchg
mov
shll
mov
pop
cmpsb
cmp
ret
push
ljmp
pusha
lock
push
mov
mov
push
and
jl
mov
dec
sbb
push
int
cmp
je
cmp
scas
mov
jp
cmpsb
in
stos
mov
fdivl
ds
inc
test
fsubl
or
push
lahf
xlat
lods
dec
lods
pop
adc
and
mov
cltd
incb
mov
cmp
xchg
arpl
inc
mov
fsubl
xor
sar
lods
bound
bnd
mov
movsl
test
adc
mov
push
pop
ret
dec
jp
adc
xorb
dec
xchg
cmpsb
jns
outsl
jns
mov
popf
pop
jb
sub
push
fmull
stc
or
dec
sbb
movsb
and
mov
out
call
adc
in
sub
xchg
hlt
xlat
ficomps
aas
clc
mov
cmp
pushf
lods
in
mov
in
mov
out
fsts
stos
push
mov
push
mov
addb
push
xchg
into
inc
fsubrp
mov
in
cwtl
xor
pop
lods
sahf
jge
mov
dec
pop
and
js
mov
mov
sub
inc
lds
inc
sbb
sub
fisubl
dec
sbb
pop
pop
mulb
jno
add
outsl
push
lea
pop
rcr
jnp
jb
aas
mov
adc
outsb
leave
addr16
mov
xchg
loopne
stos
push
out
mov
mov
cli
push
int3
inc
pushf
jb
ljmp
arpl
imul
imul
inc
mov
xchg
jl
repnz
movsb
cmc
cmp
hlt
gs
push
adc
cmpsb
jns
cmp
clc
adc
adc
inc
shrl
icebp
jg
sub
xchg
push
fidivl
cmova
out
loopne
ret
inc
ret
popf
cli
loopne
ljmp
xor
les
mov
test
inc
fidivs
sbb
xor
aas
mov
setno
lock
xchg
xor
sub
adc
ja
mov
dec
loope
dec
mov
jae
ror
arpl
pop
push
jno
adc
addb
ds
or
fs
lods
xchg
leave
test
nop
push
jmp
and
sbb
lahf
aas
in
jmp
xor
leave
inc
popf
xchg
jae
lds
mov
add
xor
adc
cld
push
in
into
jne
shl
jnp
subps
pop
mov
jmp
cld
or
fbstp
xor
lock
fidivl
movsb
jns
lods
xchg
cmc
cmpsl
and
stc
jns
pusha
mov
mov
xchg
add
inc
cmp
xchg
push
xor
test
push
jge
jle
jl
xchg
cmp
dec
xchg
imul
pop
insb
jle
jae
dec
pop
pop
ss
xor
sub
mov
fidivrl
cmp
in
xchg
fwait
out
jle
stos
sub
cwtl
adc
aad
mov
stos
leave
iret
push
test
push
pop
lcall
xchg
adc
sahf
adc
mov
es
mov
test
pop
xlat
mov
cli
scas
jns
mov
fdivs
inc
decb
sbb
mov
sbb
add
pop
xor
pop
mov
or
lcall
aad
push
push
cmp
js
outsb
stos
cli
push
in
mov
adc
pop
shrl
leave
or
into
je
dec
call
bound
scas
cmp
sbb
or
cmp
ljmp
dec
insb
daa
push
outsb
test
inc
mov
dec
jae
clc
pop
sbb
in
jno
fiadds
cmp
lods
ret
pop
inc
aas
cmpsb
sbb
inc
clc
or
mov
iret
cmpsw
imul
lods
sub
test
outsl
fidivrl
and
xchg
adc
and
insb
sub
adc
scas
rclb
mov
sub
int3
adc
mov
cmp
lahf
pushf
imul
mov
and
inc
outsb
push
nop
mov
push
shrl
or
mov
enter
inc
jge
push
scas
push
pop
xor
jo
xchg
sub
push
mov
fsubrs
dec
cmc
sub
adc
push
inc
jbe
dec
pop
xor
cs
sub
mov
clc
mov
divl
dec
shll
xlat
repz
push
fidivrs
xchg
fsubr
lcall
mov
jmp
xchg
scas
movsb
xchg
inc
faddp
adc
jg
lods
xor
outsb
push
leave
jg
mov
ljmp
inc
lret
imul
mov
mov
dec
xor
and
add
addr16
xor
adc
les
mov
cmp
and
aaa
adc
mov
or
mov
jae
mov
cltd
pushf
push
xor
imul
inc
fyl2x
mov
sbb
cmpsl
pop
out
lods
push
daa
mov
jnp
mov
rcrl
lret
repz
gs
into
and
lret
jae
push
movsl
in
cs
loop
push
sub
aam
test
stos
xor
sub
xchg
es
inc
and
cwtl
enter
push
imul
out
cmp
stos
cmp
cmp
clc
sbb
push
out
int
mov
cwtl
jecxz
xchg
jp
stos
stos
aas
mov
sar
push
call
fidivs
add
jl
mov
int3
movsb
outsl
lret
sbb
jmp
and
pop
jne
jmp
jge
pop
mov
nop
std
pop
pop
scas
push
aas
adc
xor
outsl
addl
xchg
enter
push
in
cli
push
xchg
jae
lea
mov
lock
in
add
or
fistps
mov
jle
push
pop
sub
adc
inc
and
out
out
rcll
insb
nop
sahf
sub
mov
cmc
sub
mov
cmp
sti
pop
cmp
imul
sbb
repnz
cmp
test
pop
pop
fnstsw
jle
and
cli
xchg
fsubs
int
scas
call
jmp
and
cmp
and
jnp
fsts
xor
ja
xchg
cmp
xchg
sub
movsl
pop
jae
mov
cli
xchg
push
insb
call
mov
fwait
xchg
orl
sub
fs
mov
adc
mov
iret
or
lcall
call
js
mov
divb
and
nop
ud0
jne
inc
jb
xchg
mov
xor
inc
in
fnstenv
pop
call
pushl
or
pop
adc
stc
inc
sbb
dec
loopne
or
jnp
imul
sub
icebp
je
loope
fs
push
add
repnz
push
mov
xor
mov
inc
ret
mov
fimull
cmp
std
push
cmp
push
pop
fldt
cmpsl
and
push
fcmovne
bound
jg
fistps
xor
pop
sub
jmp
xor
arpl
push
adc
enter
adc
cs
push
and
vpslld
fcomps
lahf
pushf
imul
aam
inc
dec
cld
popa
xchg
inc
and
cli
fwait
jmp
aam
xchg
xor
xchg
test
pop
je
out
int3
fsubrp
addb
testl
lret
dec
into
push
xor
sbb
xchg
mov
adc
enter
int
iret
and
cwtl
and
pop
loop
lret
in
js
mov
pop
mov
mov
leave
js
pop
sub
in
repz
adc
testb
dec
xchg
mov
in
pusha
or
in
add
inc
mov
popa
pop
fcoms
test
ret
mov
or
push
push
push
push
push
aas
jge
inc
scas
ret
mov
out
push
sahf
fcmovb
mov
jnp
sti
lods
outsb
push
inc
ret
mov
das
out
jmp
sbb
out
cmpl
xor
clc
adc
mov
rclb
addr16
out
mov
subl
and
adc
insl
jbe
inc
scas
push
clc
inc
adc
jle
cltd
stos
inc
sub
or
imul
popa
sbb
inc
adc
jmp
arpl
fdiv
movsb
imul
add
or
xchg
inc
dec
mov
call
inc
fidivrl
mov
xor
bound
add
and
jno
pop
pop
jb
cmp
test
cmpsb
mov
and
imul
fsubl
das
cwtl
and
sub
mov
test
xchg
or
push
push
je
out
movsl
push
xor
xchg
lahf
icebp
sbb
xchg
test
sbbl
in
repz
nop
dec
loop
jl
fsubrl
loop
loopne
insl
add
xchg
bound
cwtl
jmp
pop
pushf
hlt
and
cmp
data16
mov
jg
pop
jns
jle
push
cmpl
sbbl
ss
data16
push
sahf
xchg
inc
cmp
dec
pop
daa
inc
in
cli
in
mulb
sub
pop
jo
dec
pop
addr16
bound
sti
sbb
data16
pop
mov
push
icebp
jmp
mov
cmpsb
cmp
dec
movsb
or
adc
mov
out
leave
push
mov
mov
xor
test
pushw
add
lods
adc
lods
sti
dec
in
and
lock
stc
cmpsb
sub
ret
or
lahf
andl
push
mov
add
fisttpl
mov
scas
inc
cld
pop
xor
xchg
pop
std
or
pop
ss
sbb
jns
in
or
inc
sub
outsb
int3
lods
jg
dec
sarl
push
pop
cmp
loopne
mov
cmp
dec
lahf
adc
fwait
nop
xor
jecxz
nop
sbb
inc
push
xchg
stc
nop
ret
cmpsl
push
inc
jo
pop
lock
push
push
cmp
sub
je
mov
popf
sbb
jbe
imul
insb
lds
or
leave
adc
out
cmp
lcall
mov
push
and
inc
fnstenv
pop
and
sub
push
test
fnsave
fnstcw
mov
sahf
xor
cli
dec
mov
and
pop
and
jecxz
icebp
fwait
adc
mov
mov
insl
inc
jmp
test
incl
cmpsl
cld
push
into
aad
fldenv
jnp
leave
repnz
out
pop
sbb
in
or
ret
ja
out
notl
sti
fwait
add
jns
into
sub
leave
sar
sbb
outsl
lcall
adc
cmp
ficomps
popf
sub
ret
cwtl
subl
fnstcw
adc
sbb
cmp
jmp
arpl
cmp
pop
ds
push
cmp
mov
mov
cmc
mov
xlat
insl
sub
inc
pop
popa
cmp
scas
mov
adc
push
repz
pop
imul
scas
mov
mov
or
sub
or
pop
rorb
mov
mov
rcr
push
sbb
xchg
mov
div
mov
adcl
add
sub
scas
adc
jae
lds
sub
fstl
jl
int3
adc
inc
cmc
mov
mulb
iret
mov
stos
dec
or
xchg
fstps
sahf
je
jns
outsb
push
stos
inc
inc
sub
pop
cmpsb
and
imul
push
dec
add
cmc
in
rorb
pop
hlt
pop
add
mov
pusha
cmp
jb
sub
daa
mov
adc
sub
inc
sbb
sub
inc
cmp
mov
add
data16
outsb
mov
dec
sub
push
and
sti
mov
cwtl
insb
adc
push
sahf
jecxz
es
inc
sub
add
popf
das
fcomps
test
cs
hlt
adc
xchg
pop
aaa
add
orl
cmpsl
xchg
add
or
add
sub
scas
inc
into
enter
xchg
ljmp
mov
sbb
jae
mov
or
mov
or
cwtl
jge
icebp
dec
mov
test
cmpsl
mov
rcrb
fists
imul
xchg
dec
add
imul
add
outsl
inc
mov
cmpsb
dec
test
or
cwtl
mov
mov
jmp
and
push
hlt
cmc
xchg
test
pop
push
ret
sti
in
inc
cmp
sahf
das
mov
add
mov
dec
sub
jbe
sub
inc
pop
in
inc
inc
pop
lcall
js
adc
xchg
stos
or
popf
mov
sbb
shll
loop
sbb
psrad
add
insl
outsb
dec
cmp
pop
xchg
add
cmp
mov
jp
incb
pushl
sarl
sbb
xor
icebp
or
cmc
cmp
mov
mov
les
cli
ret
mov
sahf
lock
xor
inc
jns
imul
sbb
test
cmpsl
aas
fs
call
or
push
icebp
sbb
push
mov
aad
jmp
xor
dec
test
sbbl
and
in
fidivl
pop
addl
add
inc
sub
sub
pop
cmp
jp
and
rcl
das
xchg
sub
movsb
pop
fisubl
mov
icebp
and
mov
push
pop
jmp
in
movsl
shlb
jo
loope
lods
and
enter
mov
repnz
adc
mov
or
incl
clc
popf
mov
arpl
xchg
jns
mov
shr
stc
out
inc
fldl
push
jne
imul
mov
call
add
int
test
sbb
das
ret
inc
popa
inc
mov
cmpsb
mov
push
jb
cmp
mov
mov
lds
jp
scas
add
inc
ror
pop
aaa
arpl
shl
xchg
sbb
adc
fcmovnb
rorb
mov
divb
fsubr
jmp
push
mul
mov
add
lds
jecxz
push
leave
std
out
sarb
dec
decl
jle
idivl
movl
pop
xchg
fimuls
and
mov
jae
jbe
mov
orb
and
fdivl
xchg
pushf
mov
cld
inc
scas
loopne
loope
out
inc
adcb
push
cmp
or
movsl
insl
sbb
or
es
mov
aam
sub
cmp
ljmp
jae
add
pop
adc
repz
or
pop
ljmp
test
dec
dec
adc
lcall
fsubrs
aam
int
stos
cli
data16
lret
and
jmp
add
sbb
fisubl
jmp
int3
sub
mov
adc
xchg
mov
mov
xchg
cli
adc
sbb
fdivs
sub
sub
popa
jo
xchg
stos
lods
fnsave
sub
ret
test
outsb
mov
subl
enter
pop
loop
pushf
pop
mov
add
add
int3
repnz
loop
dec
lcall
dec
adc
mov
jge
ret
loop
adc
popf
jp
add
gs
mov
jns
xchg
adc
repnz
into
mov
push
sub
xlat
push
sub
add
daa
das
sub
xchg
rolb
bound
mov
shlb
pop
aaa
into
push
ficoms
movsb
aaa
ret
dec
loope
push
adc
xor
add
adc
cmp
inc
jmp
mov
inc
mov
sahf
int3
pop
popf
adc
cld
dec
mov
sub
pop
cltd
xor
lret
cmpsl
xor
cmpsl
push
data16
pop
outsb
mov
out
xchg
xor
pushf
in
sbbl
and
sti
stos
sub
mov
push
jbe
gs
push
fbld
lcall
fildl
movsl
and
xchg
inc
imul
daa
and
mov
inc
pusha
and
push
shll
ds
inc
ljmp
mov
orb
sub
inc
mov
outsl
xor
and
sbb
fimuls
push
pop
orw
sbb
jnp
and
push
addb
mov
sub
mov
or
cmp
movsb
test
xor
les
or
ret
pop
mov
stos
mov
and
shll
mov
adc
cmp
mov
stos
in
adc
addr16
jmp
adcl
int
in
jg
cltd
jl
sbb
mov
push
push
xor
inc
test
icebp
fildl
fisubrs
add
mov
inc
and
movsb
ds
aas
pop
mov
jb
xorb
dec
popf
or
mov
loop
cmp
mov
scas
push
inc
push
movsl
jb
dec
adc
sub
test
in
mov
mov
jae
std
inc
stos
ficompl
xchg
scas
adc
arpl
cmpsl
ds
xchg
mov
push
jno
xor
fucom
pop
jae
cltd
xor
inc
aas
or
in
xchg
mov
cmpsb
mov
pusha
test
ds
or
ret
in
stc
dec
sub
push
xor
idiv
pop
or
mov
mov
xor
xor
lock
xor
adc
les
iret
fldl2e
inc
push
mov
mov
mov
or
shrl
mov
out
insl
add
xchg
mov
push
sbb
js
sbb
dec
cmp
push
shlb
or
pushl
mov
clc
leave
int
xor
fs
fsubs
xchg
mov
pushl
sbb
fdivrs
ret
lcall
lcall
sub
or
out
insb
sub
iret
sti
pop
sub
lret
xlat
into
fistpl
mov
mov
add
into
je
fistpll
xchg
xchg
nop
push
dec
mov
xchg
stc
popf
pmulhuw
mov
movsl
jmp
pop
dec
out
jmp
inc
scas
cmp
test
stos
shrb
push
mov
aam
add
mull
or
and
test
adc
das
in
pop
mov
jo
cltd
insb
cs
aaa
mov
push
sub
les
rclb
imul
mov
or
popa
mov
and
inc
das
xchg
adc
jns
or
or
mov
popf
outsl
fwait
mov
cmpsb
loope
ljmp
test
dec
pop
push
lods
mov
mov
addr16
jns
inc
push
mov
into
dec
add
es
repz
sub
cwtl
or
pop
mov
fisttpl
mov
jo
scas
add
iret
cmp
mov
cld
fisubs
loopne
cmpsl
out
rep
dec
xchg
add
sbb
out
adc
jge
fistpl
fimuls
and
adc
cmpsl
sbb
inc
jne
insb
test
adc
or
dec
dec
sarb
enter
ret
inc
fiaddl
push
imull
fsubrs
push
lahf
push
gs
xlat
lret
or
push
and
mov
out
js
or
add
or
mov
cmp
scas
cmp
clc
mov
js
fldenv
pushl
aam
adc
cmp
aam
xor
in
add
inc
inc
adc
cwtl
inc
fs
push
push
dec
xchg
shlb
repz
push
mov
call
pusha
mov
mov
ss
or
outsl
jb
test
ja
cmc
and
dec
inc
inc
jnp
ss
sbb
or
out
inc
fisubl
dec
clc
dec
arpl
cmp
mov
jo
mov
cltd
xlat
idivb
imul
dec
fs
pop
es
mov
lods
jmp
std
add
js
and
mov
pop
repz
fucom
inc
push
fucomp
repnz
cmp
sbb
pop
mov
icebp
lds
not
scas
cmp
dec
ffreep
in
shlb
xlat
sbb
inc
xor
inc
lea
mov
xchg
inc
pop
jae
lahf
mov
daa
and
imul
xchg
fs
mov
in
mov
ja
or
fnstcw
lods
sbb
cmp
fst
ret
cmp
xchg
repz
fsubrs
shr
xchg
pop
dec
pop
pop
in
pop
loopne
inc
fs
xchg
sub
pop
repnz
arpl
or
imul
movsb
cld
mov
test
xchg
mov
gs
mov
repz
cmpsb
and
pushf
pusha
lods
push
shlb
adc
cld
inc
add
es
pop
push
adc
ror
mov
mov
jno
mov
popf
gs
xor
imul
cli
xor
ret
inc
or
xchg
sub
sbb
pop
add
insb
addb
jecxz
sbb
jo
pop
or
push
pop
push
sahf
popf
shlb
add
cmpsl
mov
stc
sub
imul
mov
and
mov
jno
cli
mov
sbb
jg
arpl
jl
push
jmp
ret
pop
cs
sarl
dec
repz
test
iret
dec
xor
cmovns
mov
nop
int3
lret
and
out
mov
fnsave
mov
add
push
cld
inc
mov
fwait
and
je
popa
stos
test
mov
mov
cmpsb
mov
sub
pop
mov
pop
cld
aad
cmpsb
cs
pop
cmp
movsb
mov
mov
ds
jbe
or
and
call
push
in
xchg
loope
adc
inc
cmp
je
push
mov
jmp
mov
js
push
mov
xchg
pusha
test
adc
mov
test
adc
mov
leave
xchg
and
cmp
in
push
or
nop
sub
ret
and
xor
pushw
xlat
cwtl
sub
xchg
xchg
mov
sub
test
clc
out
out
pop
cmp
mov
jge
sub
pop
repz
loopne
std
pushf
adc
xchg
test
cmp
add
repz
and
inc
cmc
pop
stc
ss
iret
inc
jmp
adc
xor
pop
inc
push
loopne
sub
fstpt
push
repnz
add
xlat
scas
or
push
cwtl
push
movsb
dec
hlt
sub
dec
cmp
lods
cmp
insb
pop
sub
ss
mov
shrb
out
and
mov
pop
and
mov
addr16
lods
inc
repnz
pop
add
repnz
pop
lods
inc
pop
leave
nop
lret
inc
hlt
mov
mov
ds
cltd
or
insl
std
jecxz
xchg
lcall
xor
cmp
in
mov
sbb
add
mov
repz
or
data16
sub
arpl
popf
mov
sbb
pushf
xchg
sub
sti
sub
xchg
scas
and
push
xchg
bound
std
jae
stc
push
and
pop
and
jo
call
jnp
cli
push
roll
ret
inc
dec
fs
add
cmp
lea
into
push
repnz
jne
sbb
cs
xor
xor
dec
pop
loop
ss
pop
out
loop
in
or
jbe
pop
push
addr16
lcall
or
dec
insl
sbb
push
icebp
movsl
loopne
fdivrl
insb
dec
jno
insb
jbe
push
das
mov
loopne
jmp
cmpsl
dec
sub
add
adc
add
mov
jmp
cwtl
lahf
push
out
push
or
je
fs
adc
stos
inc
or
lret
cltd
orl
adc
jecxz
cmp
pop
xchg
xor
test
sahf
pop
rcrl
xchg
aaa
enter
cmp
dec
pusha
adcb
xchg
rcr
aam
mov
aam
fisubl
movsb
mov
mov
test
lahf
leave
test
or
or
pop
sub
jle
mov
dec
mov
pop
icebp
pop
jge
mov
or
dec
cld
js
mov
out
andl
pop
dec
xor
arpl
xchg
mov
lret
es
testl
imul
int3
lock
dec
dec
hlt
dec
daa
dec
add
loop
mov
adc
hlt
stos
sti
sahf
arpl
call
pushf
add
pusha
fdivs
subl
pop
popf
jmp
push
popf
xor
jecxz
push
inc
and
xchg
lods
jb
movsl
and
pop
out
jmp
adc
fldl
ljmp
fbld
and
adc
dec
dec
jmp
cmp
mov
pop
cmp
pop
jae
aam
adc
xchg
adc
push
mov
leave
jo
call
insl
lea
sbb
xor
lea
mov
cltd
gs
mov
mov
movsb
pop
scas
shl
push
and
sub
inc
decb
fcmovbe
call
and
stos
fs
mov
lds
sahf
out
stc
xchg
inc
cmp
add
ret
xor
subb
sbb
pop
cmc
xchg
add
aad
loop
pop
adc
aad
xchg
cmc
and
adc
jb
ljmp
int3
es
xor
inc
mov
pushf
cli
cwtl
pop
aas
push
adcl
sub
push
push
dec
popa
push
fsubrs
mov
lds
and
cmp
cmpsb
cli
sarl
aaa
mov
pusha
outsb
push
mov
ss
fldlg2
or
loopne
jo
lea
pop
mov
stos
adc
xor
cli
and
ror
jae
sbb
rorb
test
or
xor
jge
sbb
aad
or
mov
pop
das
sub
ljmp
push
sub
test
ja
nop
jmp
dec
mov
cmp
aaa
fcmove
iret
or
jne
test
mov
inc
test
sbb
xchg
push
sub
lock
cld
add
mov
ja
ret
mov
sbb
filds
and
cmc
pushf
arpl
leave
cmpsl
dec
pop
out
and
inc
nop
adc
stc
cmp
push
ljmp
push
mov
add
sbb
je
push
mov
and
sbb
jbe
pop
arpl
sbb
fcoms
das
lds
lds
outsb
pop
mov
mov
es
adc
mov
popl
add
inc
adc
jns
popa
outsb
inc
sub
lret
ds
scas
arpl
or
test
xchg
mov
adc
test
test
add
mull
mov
sub
mov
fdivrl
inc
dec
orl
dec
mov
negb
add
jnp
dec
test
pop
jno
mov
mov
or
int3
iret
ds
fisubrl
ficompl
mov
mov
sar
sti
fnsave
clc
mov
call
sbb
mov
aaa
xor
rorl
push
arpl
orl
jmp
popa
inc
fcoms
pop
cld
jae
pop
test
daa
xor
pushw
inc
xchg
xor
adc
cmpsl
mov
mov
inc
int3
arpl
adc
pop
mov
lock
pop
jmp
or
fimull
push
loope
sarb
mov
or
add
clc
jge
aad
mov
sub
mov
mov
nop
cld
push
and
cmp
outsl
loop
and
add
add
popa
xor
loop
out
mov
out
inc
sti
lret
test
and
sbb
mov
enter
push
call
or
adc
bound
aaa
es
and
bound
aam
fsincos
mov
aam
outsb
mov
js
sbb
out
lret
and
data16
outsl
sub
xchg
mov
cwtl
fcomps
nopl
mov
xchg
fstpl
push
push
jle
stos
outsl
je
mov
and
jecxz
pop
orb
arpl
mov
jl
lds
push
outsl
vmwrite
pop
inc
and
mov
pop
scas
adc
nop
add
and
ss
lcall
in
push
clc
pop
xchg
xlat
das
mov
outsl
cwtl
mov
jo
xchg
sub
pop
idivl
mov
repz
mov
std
jo
stc
popf
mov
push
xor
dec
les
pop
mov
lds
mov
push
and
mov
iret
sti
es
gs
clc
cwtl
mov
dec
and
push
mov
xchg
inc
fs
fwait
insl
dec
sbb
nop
push
imulb
aam
sbb
outsl
das
mov
inc
jno
jnp
and
xchg
sub
jmp
push
hlt
mov
mov
fbstp
ret
add
dec
outsl
stos
mov
hlt
lock
gs
movsl
mov
lahf
xor
es
shlb
ljmp
sub
fnstenv
in
ret
test
dec
and
xchg
arpl
loop
or
push
stc
adc
sahf
pusha
fisttpl
jecxz
outsb
call
test
in
mov
mov
lret
dec
dec
and
int
jp
cmp
lock
ja
sbb
xchg
dec
mov
jnp
add
loopne
lds
popa
ret
repz
mov
mov
pusha
add
enter
adc
mov
or
cmp
into
mov
inc
outsb
cld
pop
pop
adc
jo
dec
xor
test
push
in
add
mov
out
test
les
sbb
sub
imul
cmp
xchg
sbb
or
inc
adc
lods
fisttpll
mov
pusha
dec
push
mov
xchg
cs
or
sub
sub
dec
pop
inc
test
mov
std
sub
inc
push
insb
insl
push
leave
push
or
jge
pusha
sbbb
fdivs
xlat
adc
push
pop
imul
xor
outsl
jns
out
or
inc
push
jno
push
cli
sbb
int
mov
cs
push
pop
or
mov
pop
test
jp
ja
mov
ret
shll
pop
clc
mul
push
in
sbb
out
insl
xor
inc
push
mov
add
popa
jp
mov
or
pop
inc
loopne
xor
adc
xor
nop
xor
aad
into
fidivrs
rorl
jl
xchg
out
fcoml
js
xlat
lcall
xchg
sub
lahf
js
out
es
in
mov
cwtl
stos
mov
dec
mov
jne
imul
test
aam
mov
js
int3
xchg
pop
inc
loope
ja
mov
mov
mov
aad
inc
xor
dec
gs
and
push
mov
adc
in
sahf
dec
cmp
jns
arpl
out
sbb
push
fsubrl
pop
pop
or
bound
inc
popf
xchg
dec
sub
sub
enter
inc
inc
call
jecxz
xchg
lcall
rcr
nop
xchg
jns
adc
adc
iret
push
mov
mov
bound
push
popf
out
out
test
and
aaa
test
inc
or
dec
cmp
pop
mov
jb
pop
push
lret
sbb
repz
aaa
clc
out
xor
and
jle
lds
adc
mov
in
test
or
dec
in
or
aad
lcall
and
mov
ret
jns
in
orb
int
or
fldenv
inc
cwtl
pop
std
ss
xor
bound
fwait
mov
xchg
jne
sub
hlt
push
cmp
mov
icebp
inc
loop
pop
mov
out
cmpsl
js
jnp
loopne
lahf
out
cmpsb
and
sti
loopne
adc
sub
or
ja
dec
arpl
cmpltps
fisttpll
mov
or
push
icebp
and
idivw
mov
push
nop
shr
and
mov
xchg
les
addb
mov
push
call
nop
xor
sub
and
add
push
xor
sbb
es
mov
jp
es
or
stc
call
sarl
pop
in
dec
mov
sbb
into
test
mov
cmp
repz
test
clc
cmp
cmpsb
mov
sbb
movsl
jo
adc
jb
mov
lods
jns
cld
dec
fs
mov
gs
shlb
stos
xchg
sub
scas
add
insl
sti
out
sbb
xor
lcall
push
push
lahf
push
cmp
mov
int
test
cmp
push
xchg
repz
fidivl
fbld
inc
lods
push
ljmp
les
dec
cld
cld
sbb
fsubp
jl
xor
sub
mov
insl
add
movsl
mov
and
sahf
xchg
xchg
xchg
loop
mov
mov
imul
dec
testl
mov
cmp
loop
ja
mov
mov
xor
ja
into
pop
jge
push
pop
sub
gs
shl
repz
clc
cmp
out
sti
stos
jmp
xor
fwait
sbb
add
movsl
dec
and
pop
mov
iret
test
xor
jae
and
lret
mov
inc
rcl
xor
movsb
mov
pop
adc
out
test
xor
jecxz
mov
mov
sub
and
pop
sbb
or
mov
clc
inc
jnp
push
or
pop
lret
add
cmp
fiaddl
adc
cmp
inc
and
push
adc
sbb
mov
sub
and
jecxz
testl
negl
xchg
cmp
lea
dec
movsb
icebp
cmpsl
orl
enter
repnz
clc
and
out
js
repz
pushf
test
pop
adc
adc
xchg
and
xor
inc
mov
mov
popa
outsb
std
stc
adc
push
mov
xor
jl
ret
stos
imul
leave
mov
int
adc
not
push
je
push
and
mov
lock
adc
sub
add
sbb
ret
push
sbb
jbe
mov
test
sbb
xchg
or
mov
fists
mov
js
lds
sub
pop
adcl
fxam
pop
iret
cs
loop
gs
sbb
and
std
das
push
sub
and
dec
imul
leave
xchg
jnp
xchg
sub
mov
xor
shll
mov
fnstcw
or
leave
xchg
push
pop
cwtl
jge
fistpll
mov
or
xor
and
sub
mov
mov
aad
mov
mov
sti
mov
mov
xchg
scas
cmp
mov
stos
in
inc
ljmp
and
xor
clc
aas
adc
stc
js
push
imul
fsubr
shll
sbb
ss
mov
sub
xor
sub
in
xchg
adc
and
dec
frstor
popf
sbb
repnz
mov
cs
push
adc
pop
mov
sub
cmp
arpl
inc
jmp
dec
outsl
testl
inc
fnstsw
cmp
scas
mov
outsb
or
and
add
mov
adcb
mov
lods
fwait
push
cmovns
shll
imul
test
loope
sbb
adc
push
dec
or
stos
sbb
sbb
sub
xchg
mov
dec
cmp
repnz
mov
or
cmp
push
jo
jmp
push
sbb
add
and
jmp
push
popf
popa
mov
mov
mov
into
xorl
jb
ret
fdivrl
insb
mov
cltd
jecxz
ja
xchg
into
xchg
jnp
mov
or
in
popf
cli
mov
jge
adc
xor
in
pop
sbb
cmp
and
in
int3
dec
test
sar
jle
rorb
out
imull
repz
or
cmp
repnz
dec
or
mov
cmpsl
or
test
sub
movsl
stos
and
movb
dec
mov
mov
leave
and
cs
lock
imulb
adc
sub
mov
adc
nop
mov
sbb
int3
cmp
dec
shrb
pop
adc
nop
fdivs
lret
shrb
inc
cmpsl
jecxz
mov
pop
or
mov
jg
adc
stos
xchg
mov
mov
sbb
icebp
inc
jo
adc
je
jae
es
ret
pop
adc
jno
mov
leave
repnz
mov
cwtl
inc
jno
cmp
int
xlat
dec
push
push
stos
adc
loope
hlt
sub
adc
testl
shrb
lahf
clc
jno
insl
inc
insb
push
daa
add
pop
dec
mov
xchg
mov
addr16
in
inc
sbb
out
or
pop
jne
outsb
lods
test
fs
scas
imull
xor
lds
push
dec
movsl
sub
dec
hlt
shrl
cld
push
lea
iret
int3
hlt
xor
enter
mov
and
dec
mov
and
sub
mov
cmp
into
add
das
dec
lods
push
push
aad
cmp
movsb
inc
lds
add
fcmovbe
jno
rorb
jo
pop
rcrl
repz
enter
mov
popf
mov
insb
movsl
ds
pushf
pop
insb
imul
rcll
call
mov
dec
loop
mov
or
es
sub
pop
mov
fidivl
or
cmp
ja
rorl
xchg
shll
push
pop
push
ret
add
stc
cmp
scas
mov
in
lret
cmp
xchg
pop
mov
inc
mov
jg
insl
lock
lahf
xchg
insb
stos
stc
call
xchg
mov
mov
arpl
into
into
enter
mov
imul
scas
jo
xor
jne
cmpsl
jns
mov
push
mov
dec
lock
clc
xchg
dec
and
daa
outsl
aas
pushl
xlat
pop
cli
dec
mov
xor
push
mov
mov
cmp
aad
dec
test
add
cmp
ret
sbb
jb
mov
adc
dec
sbb
sarb
mov
pop
sarb
lods
lds
stos
dec
test
xchg
mov
sub
mov
dec
cld
pop
jecxz
add
mov
cmp
or
fimull
stos
lods
fistpll
sub
scas
ret
xchg
add
lahf
imul
subb
pop
mov
inc
arpl
ret
insl
add
in
outsb
out
mov
shl
out
test
mov
fidivrs
jns
out
add
outsb
cmpsb
cmp
je
and
xchg
pop
jmp
adcb
mov
fistps
and
mov
bound
pop
inc
cmpl
jmp
sub
rcr
rol
and
ret
pop
loop
inc
pop
mov
lock
in
clc
jb
js
push
movsb
and
mov
vandps
call
push
and
xchg
fstpt
jg
inc
ljmp
stos
xchg
or
fdivl
into
lea
fcmovu
xchg
xor
jmp
cli
xchg
push
adc
shll
sbb
and
das
xor
leave
cmpsl
lds
es
call
push
pop
popl
mov
movsb
mov
out
stos
ror
daa
push
lea
rcrb
mov
fidivs
xchg
sbbb
and
inc
push
aas
popa
clc
jo
dec
push
mov
adcb
xor
sahf
addr16
pop
addr16
por
ret
mov
and
test
add
aaa
pushf
repnz
xor
sarb
cmp
dec
daa
test
and
aas
push
cmc
daa
shlb
call
mov
outsb
add
mov
sub
pop
repz
repnz
push
cltd
movsl
ror
mov
dec
pop
xchg
lahf
sbb
insb
pop
call
pop
add
adc
in
xchg
push
mov
std
mov
fdivrl
push
xor
inc
adc
orb
dec
ds
jle
pop
mov
push
jp
pop
test
xorb
in
in
mov
jae
leave
in
mov
fmuls
xor
and
lret
outsb
scas
clc
cli
les
xchg
inc
in
loope
jne
or
mov
out
xchg
xor
xchg
addl
in
imul
popf
push
imul
and
mov
mov
sarl
outsb
pop
cltd
add
inc
pop
ror
pop
int3
pop
xor
cmpsl
lahf
enter
inc
iretw
mov
or
loop
jns
test
insl
fisttpll
adc
stos
ret
das
and
icebp
mov
mov
mov
or
icebp
bound
mov
push
or
sbb
push
mov
xchg
mov
repz
jnp
sub
lods
jmp
mov
mov
cmp
pop
into
rorl
pusha
jb
out
inc
xchg
mov
mov
dec
jb
lods
xchg
fsts
test
xchg
scas
lcall
cmpsb
xchg
push
cwtl
pusha
cmp
push
jb
out
add
test
or
in
fisubl
inc
popa
out
fsts
cld
inc
push
jne
out
mov
jbe
pop
cmp
mov
xchg
mov
insl
sub
jge
fadd
cltd
adc
mov
or
pop
or
inc
jne
push
jo
xchg
adc
adc
leave
push
test
xor
jo
lods
movsb
mov
mov
fidivl
push
stos
js
pop
cmc
jno
jb
inc
pushf
movsl
add
call
in
cld
addr16
js
cmp
scas
adc
lcall
sbb
cmp
dec
mov
push
ror
dec
clc
shlb
jno
xor
fcompl
cmp
fdivrl
pop
fistps
cltd
jb
insb
in
sbb
testb
pop
mov
cs
adc
stos
inc
ret
push
xchg
xor
cmp
mov
push
xchg
mov
stos
jno
mov
leave
nop
xor
sar
stc
inc
insb
sub
sbb
pop
dec
mov
sub
pusha
cmpsl
out
xchg
mov
mov
cmp
mov
std
push
sub
inc
and
insb
aam
pop
shlb
jp
cltd
adc
ret
out
mov
sahf
cwtl
mov
mov
inc
sbb
enter
pop
das
pop
and
mov
daa
scas
push
push
mov
sub
leave
and
dec
mov
outsl
cmp
push
arpl
insb
addr16
ficomps
adc
pop
aad
dec
in
xor
cmp
mov
sbb
cld
jg
pop
mov
in
pop
ljmp
test
adcb
aad
dec
cmp
sbb
dec
or
insb
pop
das
gs
mov
mov
outsb
in
push
mov
cmpb
out
mov
add
mov
pop
paddusw
jmp
pusha
stc
lds
shlb
subl
movsb
scas
mov
rclb
outsb
xchg
sbb
cld
js
adc
and
pop
adc
mov
subb
xchg
pop
xor
adc
pop
mov
mov
repz
push
subl
ljmp
cmp
and
pop
lods
dec
adc
daa
mov
sub
mov
iret
xlat
mov
das
subb
sbb
mov
pop
pop
fisttps
jle
jb
fdivrs
dec
fyl2xp1
test
jecxz
addr16
add
sbb
fdivl
add
ljmp
jno
jb
sbb
mov
mov
cmpsb
push
scas
cmp
mov
imul
imul
cmp
in
push
and
clc
or
loope
and
add
pop
aaa
push
jbe
and
xchg
movntps
scas
jnp
hlt
daa
mov
sub
mov
fstpl
xor
cwtl
jne
mov
ljmp
leave
in
push
fsubrl
sarl
cltd
fisubs
sub
negb
psubsb
pusha
push
in
aam
cmp
into
xor
in
and
xchg
movsb
test
clc
dec
or
or
and
aas
add
sub
loopne
adc
mov
pop
fucomip
sub
out
incl
popf
xor
lods
inc
inc
pop
dec
call
add
and
or
pop
shll
enter
xchg
dec
dec
cmc
int3
inc
lcall
and
jb
lcall
pusha
insb
cli
fcmovnb
mov
iret
ds
and
lock
fldenv
fidivl
or
cmp
or
scas
xchg
or
stc
nop
dec
sbb
dec
das
or
es
pop
mov
adc
sbb
shlb
aaa
xor
fs
out
lds
in
jnp
fiadds
mov
push
lock
mov
cld
shl
mov
int3
cmp
ljmp
jp
dec
ss
jecxz
or
or
cmp
icebp
inc
add
jae
pop
add
push
jp
aas
mov
or
rcr
mov
aam
xor
arpl
push
adc
dec
fadds
xchg
dec
aas
dec
pop
fwait
cmp
mov
lret
xchg
lock
dec
xchg
pop
cltd
cli
pop
jae
call
das
cmp
xchg
ja
dec
jg
mov
fisubs
je
mov
sarb
inc
fidivrs
inc
push
cli
mov
popa
insb
jg
ss
cmpsb
xchg
call
sbb
pop
jp
dec
or
jmp
loopne
outsl
xchg
mov
fistps
ret
add
pushf
daa
xchg
mov
pushf
add
scas
push
call
das
movsl
add
aad
xchg
jmp
dec
push
jmp
out
inc
sbb
mov
mov
movsl
icebp
xchg
out
mov
rorb
mov
dec
cmp
and
xor
aaa
scas
add
loopne
mov
or
loope
popf
cmpsb
mov
out
rorb
push
cmpsl
imul
cmp
or
jl
mov
add
lahf
cmpsb
imul
icebp
pop
aam
ds
rcl
pop
pusha
xchg
test
or
and
mov
pop
or
in
jbe
in
out
daa
cmp
sbb
test
cli
fcmovne
stos
adc
sbb
std
cmc
arpl
or
mov
and
sti
or
and
clc
fwait
daa
outsl
mov
rolb
mov
cwtl
cmp
jnp
jg
or
mov
sbb
sbb
clc
dec
xchg
mov
adc
dec
add
insb
mov
punpckhwd
aam
xor
shlb
push
pushl
lods
ljmp
xchg
sub
stos
pop
in
xorb
ret
xchg
and
or
negl
push
aaa
mov
or
mov
iret
push
out
popa
rcrb
mov
push
shl
test
mov
fldcw
or
or
mov
sbb
sbb
lock
shlb
xor
shrb
xor
xchg
cmp
mov
cld
mov
adc
cmp
sub
xor
je
or
imul
adc
xchg
arpl
jmp
mov
xlat
adcb
mov
jl
adc
mov
push
jg
fistl
push
push
push
test
mov
jae
or
jp
fwait
cli
int3
pop
int
clc
mov
pop
mov
and
cmp
push
inc
xor
dec
and
rorb
xchg
clc
sbb
fdivrl
mov
and
test
or
xor
div
das
movsb
loopne
push
adc
mov
cmp
lret
in
xor
push
pushw
mov
pusha
add
and
mov
sub
repz
mov
outsl
add
pushf
cmpl
xor
loope
jbe
out
sub
cs
filds
pop
jae
int3
push
mov
or
sbb
pop
outsl
lock
push
dec
cmp
jo
orl
mov
ds
push
adc
repz
dec
push
xor
lcall
adc
sahf
or
out
mov
pop
ret
aas
mov
mov
xor
dec
fs
cmp
stos
cmpsb
dec
loop
mov
mov
push
pop
and
roll
inc
sbb
jmp
and
jb
and
mov
mov
bound
mov
pop
pushf
inc
hlt
daa
or
push
mov
or
fcoms
sbb
lret
aam
lods
xchg
daa
ds
jae
lcall
mov
jbe
or
aas
inc
jl
aad
enter
inc
fsubr
repnz
leave
adc
data16
jne
dec
lcall
loopne
sub
lds
push
pushf
mov
xchg
xchg
ds
lahf
mov
pop
pop
cmp
xchg
ret
dec
inc
push
out
addr16
lods
xchg
arpl
dec
addr16
repnz
and
adc
jb
sbb
stos
pushf
jne
dec
mov
push
imul
xor
xor
pop
scas
mov
lcall
and
aaa
sarb
cmpl
cwtl
and
test
outsb
jnp
jp
push
and
sbb
sarb
dec
xor
negb
insl
xor
movsl
cmp
inc
fidivrs
out
inc
arpl
add
in
mov
insl
and
lods
sarl
out
pop
sub
dec
lock
xor
add
cwtl
dec
fcmovb
lea
insb
pop
adc
popa
mov
in
pushf
jmp
or
dec
cld
inc
push
lock
loope
fcompl
fidivrl
push
int3
rorb
nopl
fs
inc
out
fidivrl
mov
inc
and
mov
xor
test
cmpsb
xchg
cmpsb
push
sub
inc
mov
fstps
nop
xchg
insl
stc
ret
mov
data16
jo
cmp
and
cmp
mov
mov
sub
ret
cmp
imul
sbb
bound
iret
into
sbbl
inc
sub
push
xlat
pop
jg
jno
mov
stos
xchg
xor
daa
les
adc
lahf
daa
jle
stc
nop
mov
sub
mov
xor
js
push
fcmovnb
adc
cmp
out
adc
jns
jmp
or
push
es
cwtl
mov
push
pushf
jno
push
inc
out
jno
in
cld
or
aaa
into
sbbb
dec
jle
push
or
jecxz
sub
or
inc
xchg
lods
cs
push
sbb
adc
inc
inc
lahf
or
int3
xchg
movsb
jns
pop
xor
mov
cld
jmp
cmp
or
sub
pushf
jns
std
in
mov
pushf
shrb
add
fs
nop
inc
and
notb
int
xor
xchg
loope
dec
push
mov
xor
into
jge
jl
sbb
rcrl
adc
leave
push
fisttps
pop
jmp
rclb
jmp
icebp
sbb
mov
xchg
insl
aad
mov
inc
inc
mov
cli
mov
pop
xor
fsubrp
sbb
pop
pop
sub
xchg
out
push
mov
lret
out
adc
shrl
movsb
mov
or
stos
lds
enter
and
fisubs
mov
into
and
lcall
dec
pop
jo
sub
jl
jbe
rol
out
cmpsb
jge
out
xor
push
pushf
jnp
jo
icebp
mov
lods
mov
frstor
in
or
cmpsb
loopne
mov
out
jae
ss
push
jbe
sub
push
jecxz
add
push
and
xor
call
pop
inc
movsb
pop
jo
shlb
in
in
mov
std
aad
cmp
stos
mov
pop
pop
call
mov
je
pop
in
pusha
stos
pop
js
ljmp
idivb
shll
into
adc
jns
jle
push
or
pop
je
psrlw
incb
adcb
out
push
call
cmp
gs
sbb
test
sbb
in
subl
hlt
push
jns
aad
fdivrs
cld
out
or
add
xchg
daa
push
pop
xor
xorl
fstl
jp
adc
movsb
adc
cmpb
fsts
mov
sbb
or
scas
mov
xor
sbbl
pop
rcrl
les
xchg
popf
in
pop
pand
mov
xchg
jecxz
cmp
cmpsl
fcomps
inc
repnz
test
adc
addr16
fwait
or
subl
mov
pop
xchg
orb
fisubrs
or
push
mov
push
mov
mov
sbb
sbb
repnz
bound
jns
mov
add
xchg
and
ja
repnz
and
and
jg
nop
fcmovu
xchg
sti
mov
popa
clc
das
jbe
sub
xorl
clc
mov
add
lahf
jmp
and
jae
loopne
pop
in
stos
imul
sbb
xor
inc
mov
push
iret
lret
or
push
shlb
shlb
ja
fidivrs
mov
imul
iret
sub
push
repnz
mov
arpl
lods
fptan
aam
les
sti
pop
xor
add
das
adc
rorl
icebp
xchg
outsl
in
add
and
ret
pop
int
adc
add
aas
icebp
add
xchg
stos
cmc
sbb
add
mov
fdivs
pop
gs
or
cmp
aaa
and
sub
adc
add
inc
xor
mov
bound
out
aam
mov
push
repz
xchg
adc
push
xchg
ficoml
inc
pop
mov
inc
lock
mov
sbb
das
inc
or
adc
outsb
inc
icebp
pushf
cli
cmp
in
mov
mov
loope
and
sub
add
mov
xorb
and
adc
test
scas
xor
hlt
movsb
imul
jno
jge
gs
in
fstps
mov
popa
jecxz
jb
xchg
push
stos
push
rorb
and
test
pop
xor
mov
test
fdivl
mov
dec
leave
int3
xor
fnstcw
lcall
movsb
mov
imulw
xlat
je
push
shrl
add
fldenv
dec
pop
imul
testb
dec
movsl
cmp
or
es
push
pushf
icebp
test
loop
arpl
vpmuludq
pop
jae
sbb
xlat
iret
aas
push
inc
repnz
adc
sti
mov
xor
and
dec
imul
outsl
xlat
jmp
in
shrl
ret
inc
push
jno
push
icebp
push
adc
shll
pop
test
and
scas
mov
cmc
in
pop
mov
push
pop
adc
mulb
filds
es
setge
inc
jae
xor
addr16
movsb
xor
stc
nop
add
jge
pushf
jns
xchg
and
ja
dec
loopne
sahf
sbbl
fucomp
jp
daa
push
mov
pop
sbb
pusha
test
or
mov
adc
push
popf
dec
inc
inc
mov
insl
shlb
add
push
add
ret
inc
ljmp
test
add
faddl
cltd
and
and
or
dec
ss
push
insb
xchg
sub
mull
jp
and
dec
stos
insb
xchg
mov
mov
inc
orl
loop
dec
cld
mov
mov
xor
into
fadd
in
cmp
push
push
test
dec
mov
cmc
jmp
mov
dec
or
mov
pushf
shlb
mov
aad
adc
cs
xchg
imul
aam
and
inc
imul
add
fidivrl
std
repz
jle
adc
cmp
js
sbb
movsb
fwait
lods
aad
push
cmpsb
pop
es
jb
pop
lret
bound
dec
mov
pop
add
mov
push
outsl
outsb
shrb
cmc
mov
dec
sbb
icebp
test
stc
jle
inc
xor
je
xor
pop
inc
pop
negl
lods
fldenv
rorb
jge
or
and
xchg
adc
inc
add
mov
cmp
push
test
adc
jle
and
fidivs
fsubrl
inc
mov
clc
sbb
dec
mov
cltd
adc
mov
movsl
push
out
sub
push
push
negl
mov
aad
xchg
fdivrl
flds
inc
mov
mov
xor
push
mov
xchg
mov
les
add
lret
inc
cwtl
push
fs
test
sahf
incb
or
push
xchg
rcrb
cmpl
adc
inc
adc
jne
stc
test
scas
push
outsb
xor
xlat
add
jbe
adc
movsl
mov
mov
outsb
jg
sbb
imul
dec
xor
je
xchg
xor
adc
cmp
sub
xchg
outsb
xlat
sbbl
jbe
jbe
push
repz
repnz
loop
ss
sbbl
mov
ja
cmp
fs
add
push
outsl
add
nop
pop
das
imul
xchg
mov
xchg
out
cmp
push
mov
lea
popf
mov
repnz
sbb
setb
mov
fisubrs
inc
xchg
inc
and
cs
pop
mov
xor
stos
lods
cmp
push
out
inc
inc
out
fldt
bound
ja
mov
mov
into
sub
daa
cltd
push
and
inc
xorb
jnp
shr
mov
push
cltd
and
jmp
mov
adc
and
data16
fs
pop
ret
test
sti
mov
pop
mov
sub
in
stc
repnz
out
cmp
ret
xchg
inc
in
lahf
fs
cmp
test
rcr
jg
mov
lret
push
jmp
add
out
adc
stos
push
imul
insb
mov
das
ret
ds
and
imul
movsb
stc
sbbb
fstpt
pop
cmp
sbb
aas
mov
scas
xor
push
pop
mov
push
dec
dec
rcrb
out
xor
xchg
pop
sahf
xor
push
lea
mov
sahf
pop
imul
cmp
add
outsb
mov
rcrl
mov
test
arpl
test
andb
fsubr
stos
lcall
push
jle
mov
ljmp
xor
push
sti
xchg
mov
sbb
jo
bswap
sar
mov
or
in
pop
in
fwait
daa
lret
xchg
mov
movb
pop
cmpsl
iret
pusha
mov
sbb
xor
arpl
movsl
inc
dec
inc
out
je
pop
outsl
ficoms
or
sbb
notb
test
repnz
das
fwait
nop
lcall
xchg
mov
inc
push
dec
fnsave
pop
sbb
jae
out
and
dec
shlb
cmp
add
inc
les
outsl
jbe
cld
sbb
nop
jbe
sar
popf
xor
stc
mov
sbb
lret
push
adc
mov
or
sub
inc
adc
cmp
dec
loop
insb
ds
inc
stos
jmp
cli
loope
xor
into
pop
push
dec
mov
mov
jp
into
gs
sahf
lahf
push
shll
insb
enter
andb
fwait
stos
cmpsb
cmp
xor
loop
fisubl
pop
imul
mov
xchg
sub
daa
add
dec
arpl
in
loopne
lcall
addb
insl
xorl
push
cmp
sti
xor
pop
sbb
shlb
js
sbb
push
jbe
gs
or
xchg
fstps
test
adc
sbb
into
pop
cmp
ja
pop
inc
cmp
je
popf
movsl
movsb
jecxz
xor
lock
repz
cli
sub
pop
popf
sahf
outsl
pop
je
add
aaa
hlt
enter
add
aas
mov
test
inc
push
xchg
mov
jbe
sbb
repz
es
lret
and
inc
lea
in
out
xchg
and
mov
jg
fidivs
fidivrl
dec
lcall
jae
rorb
push
jnp
adc
inc
lret
mov
mov
sub
sbb
cmp
mov
inc
std
jnp
push
cmp
mov
inc
push
dec
jnp
jp
dec
bound
xchg
sub
xchg
mov
cmpsb
jl
test
fdivs
jo
out
add
mov
pop
dec
dec
loop
cmp
out
outsb
clc
pop
leave
lret
loope
mov
push
mov
aad
dec
dec
aas
jno
mov
cmp
inc
push
cs
adc
dec
popf
pop
xchg
push
lahf
scas
dec
in
test
dec
cltd
sub
and
push
mov
sbb
adc
repnz
push
aas
notl
mov
orb
mov
fwait
mov
shll
pop
jmp
add
ret
mov
push
cmp
mov
jg
nop
adc
dec
dec
or
jb
jp
mov
pop
bound
jmp
push
or
imul
pcmpeqd
shlb
in
add
pop
push
pop
xchg
xor
inc
adc
push
inc
pop
js
push
in
mov
test
mov
fs
mov
fcoms
add
inc
bound
ret
jo
cli
bound
xchg
adc
mov
pop
and
or
cmp
and
jmp
call
xchg
out
sub
stc
dec
pop
scas
adc
and
inc
sub
testl
movsb
testb
jb
repz
or
int
inc
jno
push
popa
loop
add
insb
movsb
test
xchg
dec
or
roll
ret
aad
and
insl
stc
mov
int3
jg
add
enter
inc
outsb
aas
mov
jmp
xor
gs
fmulp
cmp
jns
loop
insl
pusha
shl
xchg
sbbb
mov
inc
in
das
pop
fidivrl
mov
inc
cmp
call
lods
xchg
cmp
aam
jge
cli
mov
jmp
arpl
jecxz
shll
and
add
sahf
repnz
movsb
orb
outsb
std
fwait
pop
mov
mov
jg
inc
mov
arpl
test
xor
jp
lods
pop
jle
or
mov
dec
adc
mov
cld
push
enter
jnp
dec
movsl
adc
fmull
inc
mov
divl
pop
aam
fisubl
les
xor
std
jo
in
sub
mov
fsubrs
lahf
adcl
xor
xor
xchg
aas
push
inc
inc
xchg
xor
lahf
inc
fisubl
or
cmp
inc
popa
mov
push
test
mov
fnstenv
std
and
or
mov
and
fadd
cli
mov
cmp
lret
xchg
sub
sub
jno
pop
xor
mov
push
insl
sub
pop
dec
movsb
aas
xor
pop
mov
fnstenv
pushf
push
push
inc
ret
cwtl
test
popa
dec
adc
or
jbe
movsl
mov
jno
mov
xor
shrb
push
out
add
push
jp
fnstsw
subb
scas
aam
movsb
ja
sbb
fidivrl
ja
adc
mov
das
leave
pop
inc
push
sbb
mov
or
pop
call
mov
jle
mov
aam
imul
inc
xor
repnz
or
pop
ret
inc
pop
or
sbb
xor
sahf
out
in
add
mov
and
jne
mov
roll
aas
fsubrs
bound
dec
cmc
inc
imul
dec
rorb
lea
add
jp
sub
iret
mov
mov
inc
or
scas
cmp
sahf
dec
push
xor
and
mov
mov
push
in
dec
js
add
inc
nop
push
loop
xchg
sub
inc
orb
test
jle
filds
adc
jmp
adc
and
loopne
test
test
jg
mov
jp
add
push
jl
call
push
aaa
sub
sub
and
jns
dec
and
lret
std
push
inc
or
jg
inc
inc
test
ja
xor
into
in
inc
mov
mov
ljmp
push
pop
mull
test
inc
sub
jno
test
cmpsb
push
pop
or
lret
pop
cmp
cld
dec
scas
test
dec
rcr
adc
dec
pop
push
adc
xor
out
jecxz
sbb
push
lods
in
push
shll
jmp
add
and
push
jmp
pushf
aam
jmp
cmp
js
out
data16
movsl
sub
inc
aad
test
adcl
outsl
into
mov
xchg
fwait
cmp
xorb
xor
adc
notb
popf
add
fsubrs
pop
dec
jge
dec
sub
leave
icebp
cs
test
dec
out
bound
jmp
movsb
mov
das
mov
loop
sbb
jecxz
jg
and
or
ret
into
enter
inc
cmpsb
fcompl
lock
repz
push
xor
dec
pop
cwtl
sbb
adc
add
dec
das
adc
and
inc
popa
xchg
pusha
xchg
scas
call
push
lock
xchg
dec
imul
dec
xchg
jmp
mov
or
inc
cwtl
stos
gs
addb
hlt
jbe
pop
fmull
jl
out
and
dec
pop
mov
push
inc
popf
sbb
cmp
shll
or
jne
loope
pop
mov
std
push
jecxz
in
xchg
mov
les
ja
movsb
jge
iret
sbb
fstl
popf
fs
xchg
fiadds
popf
cmp
std
push
rcrl
pop
xchg
sbb
push
xlat
or
ds
push
push
or
mov
movsl
jle
or
call
push
sbb
xlat
xchg
data16
out
dec
inc
sahf
and
es
push
fldl
dec
xchg
push
in
ret
sub
lds
pop
or
movsl
jle
decb
jecxz
add
fisubrl
lcall
fwait
jnp
inc
sahf
jnp
and
enter
into
jg
shl
cltd
adcb
pop
scas
mov
fidivs
pop
adc
or
lock
push
add
lock
loope
jb
fcom
sarb
cmp
push
test
mov
pop
mov
pop
data16
pusha
not
xchg
add
and
xchg
ds
hlt
sbb
pop
in
test
or
or
jnp
out
push
in
mov
xchg
cmp
std
mov
cmpsb
addr16
outsb
cli
daa
test
adc
mov
fnstsw
movsl
imul
jmp
lea
in
sub
or
js
push
mov
xchg
mov
push
fistpll
xor
pop
imul
lods
aas
outsb
ror
dec
sbb
mov
std
adc
cmp
std
jns
jne
dec
movsb
add
nop
ljmp
cld
or
mov
ja
popf
mov
mov
xchg
dec
jae
push
add
repz
pushf
std
test
push
and
mov
popa
out
int
sub
movsb
imul
dec
ja
pop
lret
inc
and
add
out
push
inc
call
sub
mov
nop
mov
xchg
dec
mov
and
adc
add
adc
jl
aas
and
xchg
xchg
insl
xchg
scas
loop
inc
push
movsb
stc
fldt
lds
sbb
pop
add
cli
inc
mov
fldt
sbb
testl
stos
clc
outsl
movsb
xchg
lcall
aaa
fs
pmaxsw
das
mov
mov
fnstenv
rorb
mov
into
dec
aaa
sbb
and
rcrb
popa
pop
mov
sti
push
jl
mov
mov
add
loopne
mov
aas
xor
or
push
xor
mov
inc
push
bound
mov
and
ud2
aas
dec
cmp
testb
scas
loop
cwtl
adc
insb
add
loope
pop
cmp
andl
shr
js
sub
dec
xchg
cwtl
cmc
jmp
sbbb
sbb
hlt
xchg
in
mov
hlt
jmp
cmp
jns
push
movsl
mov
test
mov
push
push
dec
fadds
mov
push
es
or
addr16
pushf
arpl
xor
in
pop
test
jle
clc
pop
jmp
test
lock
mov
addb
mov
pop
mov
or
push
testl
cmpl
and
ljmp
push
adc
sub
repnz
pushl
loopne
lret
and
cmpb
inc
mov
mov
xchg
sbb
jge
dec
or
add
out
icebp
leave
pop
xchg
fwait
sbb
repz
dec
push
shlb
fs
cmp
fdiv
mov
and
xor
xchg
ds
aam
dec
and
scas
pop
sub
or
and
gs
and
out
test
pop
cmc
push
gs
xchg
data16
cltd
enter
pop
lock
sub
stos
sbb
mov
aaa
pushf
mov
ficompl
xchg
dec
jno
sbbl
mov
out
mov
test
ss
fisubrs
dec
cmp
iret
cmp
sahf
scas
jno
outsb
push
fstp
call
adcb
dec
adc
pusha
or
pop
lret
in
int3
jo
aad
jmp
xchg
and
mov
icebp
nopl
and
in
add
inc
mov
xor
push
loopne
push
xor
aad
daa
rclb
test
fwait
testb
inc
jne
jb
jmp
shlb
xchg
icebp
fsubl
mov
push
leave
push
dec
add
sbb
dec
inc
jmp
shrb
stc
push
pop
pop
mov
inc
jns
push
mov
pop
dec
push
xchg
repz
mov
in
out
rcr
addb
xor
cmp
scas
movsb
fwait
push
adc
aad
inc
leave
jno
out
mov
pop
xchg
xor
test
movsb
push
in
jb
push
rorb
xchg
sub
dec
mov
int
pop
inc
xor
out
enter
cmp
repnz
lahf
xor
dec
cmc
mov
jge
test
mov
jb
push
adc
xor
or
fld
sub
cs
cmc
pop
aad
jecxz
enter
inc
scas
sbb
xchg
and
push
inc
and
xor
push
xor
shll
xchg
imul
mov
ss
cmp
imull
sbb
mov
and
subb
cmp
mov
lds
std
loope
call
add
cmpsb
mov
outsb
jno
fildll
jp
scas
sbb
or
or
mov
js
pop
add
std
js
sbb
push
ljmp
inc
cwtl
xor
gs
ss
adc
dec
xchg
xor
xchg
loop
es
sbb
lret
or
and
mov
daa
ljmp
and
fsubl
xchg
rcr
icebp
clc
sti
push
cmpsl
sub
int
sbb
xor
push
stos
fimull
std
outsb
cmp
pushf
xchg
mov
sti
iret
push
and
sbb
imul
push
out
jge
mov
arpl
je
xchg
and
mul
popf
ljmp
popf
stc
and
xorl
icebp
imul
mov
add
outsl
jnp
in
add
pushf
repnz
and
divb
and
and
mov
jl
scas
push
fwait
and
xchg
jge
xor
mov
xor
mov
insl
or
imul
aad
jno
movl
rol
pop
ljmp
test
jl
lock
dec
inc
lss
pop
clc
mov
mov
std
fisubrs
adc
jmp
popa
adcb
pop
inc
data16
sbb
stos
mov
jno
outsl
mov
imul
pop
push
sbb
repnz
mov
cmp
adc
shrb
popa
xchg
stos
xchg
or
mov
cmc
in
outsl
pushf
mov
push
add
fsubs
jno
mov
into
sub
mov
aad
add
add
divb
jle
and
repz
pop
mov
sub
gs
push
ret
iret
fwait
sbb
out
push
sti
cmp
fisubs
push
clc
loopne
jmp
loope,pt
xlat
fwait
mov
xor
jp
mov
movsb
inc
and
dec
add
push
cmp
jmp
sbb
jg
push
or
shrl
jo
xlat
subl
mov
jo
cmpsl
out
add
mov
mov
pop
rol
out
bound
or
outsl
addr16
mov
data16
jg
and
out
xchg
xor
xchg
sub
out
push
jnp
sti
jbe
adc
enter
andl
dec
aam
xchg
ret
and
cltd
aas
mov
cmpsl
sbb
ret
and
push
fmuls
cmp
pushf
loope
sbb
mov
fistl
xor
fs
pop
pop
lds
mov
aad
jo
pop
pop
adc
int3
mov
pop
cmpsb
imul
pop
xchg
subl
adc
xchg
pusha
push
push
cmc
pop
lret
lret
mov
stc
or
adc
adcl
ror
pop
repnz
icebp
adc
cmpb
and
mov
scas
pop
out
push
loop
cmp
or
sahf
mov
sbb
and
lock
daa
inc
adcl
hlt
push
lods
adc
lods
rorb
inc
pop
xchg
fwait
xchg
xlat
push
or
mov
sub
es
xchg
xor
inc
mov
std
sbb
xchg
push
jns
sbbl
repz
cmc
mov
jbe
push
aam
sub
sbb
stos
aad
loop
xchg
mov
int
fcoml
xlat
add
je
dec
scas
push
out
fildll
xchg
scas
ret
and
repz
push
mov
sahf
lahf
add
dec
xchg
insb
inc
xlat
shll
leave
mov
ja
aam
shll
fdiv
outsl
in
mov
and
sbb
mov
or
js
push
mov
push
xor
cmpsl
fldt
ret
ss
es
dec
sub
movsb
cltd
pop
mov
mov
cli
subb
dec
loopne
out
dec
push
popf
pop
repnz
fldcw
add
dec
mov
cmp
insb
sarl
jns
mull
and
pushf
pop
inc
ja
ret
mov
lcall
xchg
adc
int
cmp
hlt
cmp
sti
push
fucomp
xlat
call
test
or
push
mov
and
mov
rcr
out
iret
sub
lds
das
scas
adc
je
ret
loop
sub
aas
rclb
lea
dec
mov
nop
push
push
pop
shrl
stos
or
inc
mov
and
orps
dec
add
movsb
ja
mov
movsl
shlb
xor
repnz
cmpsb
adc
call
fistl
mov
sbb
sub
iret
js
sbb
or
mov
fistl
psllw
and
pusha
es
xchg
jp
and
add
arpl
iret
or
mov
fs
xchg
insl
mov
pop
fiaddl
sub
gs
cmp
xchg
sahf
imul
shrl
neg
mov
mov
rorl
sub
mov
jle
leave
movsb
pop
lahf
scas
and
mov
in
scas
pop
lea
sub
int3
jg
es
sbb
jmp
fbstp
jno
fcomps
es
aad
sbb
pop
xchg
sub
cmp
sahf
cmp
shrb
out
or
jne
sub
dec
mov
stc
shll
jecxz
pop
jne
dec
mov
cmp
and
int
fwait
lcall
std
in
pop
push
ljmp
jno
nop
test
or
mov
imul
sbb
outsl
sahf
adc
inc
xor
adc
js
gs
push
loop
ljmp
test
mov
inc
sub
lret
jne
xchg
inc
mov
pop
push
lahf
mov
in
cmpsb
xor
mov
lret
ret
call
xlat
fcmovne
dec
aad
jl
xlat
pushl
mov
sbbb
vprotb
scas
sbb
sub
xchg
mov
xor
nop
arpl
xchg
sahf
xor
push
mov
push
in
filds
jmp
sbb
jecxz
dec
mul
add
data16
mov
add
push
sbb
mov
push
mov
insb
clc
ljmp
rclb
sbb
popf
stos
popa
jle
call
push
cmp
insb
xor
insl
lcall
xor
jmp
mov
daa
push
mov
inc
call
fcompl
lds
pop
scas
inc
test
xor
or
jecxz
scas
clc
lods
jecxz
sbb
xchg
mov
cld
inc
in
adc
js
mov
hlt
xchg
pop
and
cli
jns
fs
fwait
cld
lret
add
mov
pop
pushf
fidivs
scas
fistpll
aad
rolb
and
mov
fsubrp
cmpsb
imul
clc
and
flds
sbb
xchg
mov
add
cmp
shl
pop
pushf
pop
mov
loope
jne
pop
cmp
nop
mov
leave
add
in
xchg
rcrb
or
ret
sub
and
mov
lea
ljmp
mov
je
inc
push
sbb
push
out
lret
into
test
fcmovne
in
rorl
sbb
lods
mov
mov
jnp
mov
push
frstor
mov
lcall
in
sub
adc
mov
fidivl
pop
push
in
rcrb
in
xchg
lahf
fwait
loope
into
fwait
mov
jge
xor
pop
fstpl
xor
and
pop
scas
add
ret
lods
inc
pop
pop
mov
mov
rorb
lods
jns
mov
push
or
add
jno
fists
ds
fwait
xchg
dec
adc
leave
mov
xlat
loop
cwtl
push
insb
lret
mov
xor
repnz
inc
movl
sub
sahf
xchg
or
jae
pop
push
les
sbb
push
lods
push
in
nop
sbb
shrb
aaa
or
jg
add
adc
inc
test
mov
or
jno
or
or
mov
mov
sub
inc
fcoml
push
jne
movsl
stos
inc
xlat
pop
fdiv
mov
testl
ss
cwtl
pop
outsb
lret
sbbl
or
adc
mov
xchg
pop
or
inc
dec
std
sbb
pop
adc
push
test
in
jp
jecxz
lret
push
xchg
ja
mov
pop
in
pop
mov
insl
mov
sbb
xchg
outsb
lock
fdivl
and
das
gs
xor
xor
dec
xchg
lret
rcll
loop
pushf
call
dec
push
shlb
ret
arpl
xchg
xchg
aas
outsb
xor
hlt
inc
pop
test
cli
mov
mov
sarb
inc
pop
mov
lock
test
arpl
in
push
outsb
cwtl
mov
mov
xor
jnp
movsb
xor
mov
cmp
int3
push
lds
test
lret
enter
inc
movsb
cmp
pop
cmc
pop
cmp
inc
fisttpll
mov
int
jp
inc
lods
cmp
popf
enter
jne
call
inc
sbb
repnz
orl
adc
sub
pop
and
scas
mov
cmp
cld
dec
lods
pop
leave
mov
mov
ret
mov
mov
out
lods
daa
ja,pt
out
pop
test
arpl
cld
push
sub
mov
dec
dec
or
push
fistl
test
jns
iret
stos
test
mov
fwait
lret
xchg
shll
lods
enter
cmpsb
fs
popa
dec
adc
cmp
jb
cmp
insb
jle
push
js
dec
or
mov
push
mov
movsl
adc
and
xor
push
into
pop
negl
movsb
mov
add
out
mov
imul
lahf
cmp
loopne
in
lds
xor
dec
add
lods
jg
xor
dec
cmp
cltd
mov
icebp
mov
push
adc
into
cmp
xor
xor
test
mov
adc
mov
out
push
mov
fidivl
ret
mov
push
add
fwait
cltd
sub
in
js
stc
jmp
fidivl
int
adc
and
int
testb
gs
mov
lods
pop
cmc
xor
mov
cmpsl
sub
addr16
rorl
pop
testb
sub
xor
push
ljmp
adc
sti
cmp
movsb
dec
mov
inc
dec
rcrl
xchg
sub
inc
dec
or
pop
or
adcb
andb
mov
add
fadd
lea
shll
push
shl
inc
push
xor
jl
xchg
sub
imul
push
jmp
fldl
nop
and
enter
mov
pop
xor
aam
outsb
sbb
push
mov
xor
push
ret
data16
rclb
movsl
sbb
mov
sub
add
inc
fs
push
addr16
push
mov
adc
movsl
js
test
call
popf
fcomps
mov
bound
mov
jg
mov
fsubr
lods
push
ficompl
adc
out
in
sub
push
cmc
lods
enter
es
mov
jb
jno
mov
stos
lds
test
pop
mov
mov
pop
inc
mov
in
jns
cs
mov
xor
insl
sbb
addr16
adc
movsl
mov
push
loopne
cwtl
pop
adc
aas
lods
incb
nop
dec
xchg
lods
int3
mov
in
push
aas
push
xchg
js
sub
in
aas
inc
xor
cwtl
mov
out
mov
fmuls
lea
pop
hlt
xchg
sub
push
xor
imul
jle
pop
imul
leave
movsl
mov
sbb
mov
xchg
adc
aas
push
adc
lahf
cmpb
aaa
dec
test
mov
repz
shlb
and
clc
adc
push
std
mov
xchg
inc
pop
dec
dec
push
mov
rcl
rcrb
inc
sbb
movsl
les
push
adc
push
pop
out
mov
imul
xchg
dec
fucom
xchg
jo
push
sub
xchg
xor
ret
fucomp
cld
scas
inc
call
out
jno
lret
stos
fiadds
filds
jbe,pn
jae
adc
scas
int3
iret
and
outsb
sbb
xchg
rolb
jbe
idivb
gs
scas
scas
mov
mov
out
lret
mov
cld
inc
pop
daa
push
pusha
icebp
adc
xlat
int3
fdivp
cli
fldenv
data16
ret
mov
shl
push
sbb
mov
cmp
das
arpl
or
dec
mov
call
dec
mov
dec
into
xchg
mov
lds
repnz
mov
jb
mov
mov
pop
cmp
add
scas
xchg
sub
adc
inc
push
pop
mov
sub
push
outsl
aas
clc
leave
push
pop
fildl
dec
nop
cmp
leave
scas
jne
jbe
loope
icebp
push
aam
into
sub
call
test
mov
mov
cld
divl
mov
cmpsl
mov
pop
jnp
add
push
icebp
or
mov
push
cwtl
jle
je
or
in
xor
das
sti
and
fs
push
mov
icebp
mov
data16
fwait
inc
mov
test
inc
stos
and
sbb
imul
mov
sbb
lods
xor
or
sub
jne
decl
adc
xchg
jge
test
out
mov
insb
call
cmp
mov
mov
jb
push
aaa
lret
inc
lret
add
sahf
lretw
cmp
inc
xchg
pushf
sub
imul
dec
divb
repnz
jmp
test
aam
dec
push
mov
push
daa
setno
and
fistl
and
or
cmpsb
dec
xchg
mov
enter
pop
out
pop
xchg
stos
loope
push
adc
clc
and
rcr
and
mov
in
inc
pop
sbb
inc
int3
jo
fsubrl
sbb
cli
dec
push
sarl
ret
xchg
adc
daa
xor
mov
jle
dec
sub
sbb
sbb
fxch
pop
or
fisubrs
sub
or
shrl
mov
or
cmp
loope
nop
xchg
out
sbb
mov
insb
sbb
pop
and
shrb
jge
inc
orb
cwtl
mov
mov
and
and
push
call
jb
ljmp
jnp
push
movsl
arpl
rcr
jmp
push
xor
push
pop
push
mov
ja
clc
enter
test
mov
add
mov
loopne
daa
call
in
subl
jle
add
outsb
adc
xor
pushf
loope
fldenv
sbb
mov
push
lock
in
stos
and
add
repnz
mov
jle
mov
cld
jmp
mov
adc
add
in
or
aaa
inc
sbb
mov
push
jl
cmpsb
or
mov
arpl
ret
pop
xor
lods
mov
jns
loope
shrl
jns
sub
rcll
mov
dec
outsl
cmc
test
scas
xchg
push
cmp
xor
xchg
ret
ja
push
lods
sub
jnp
sbb
lahf
jae
ja
xchg
fcmovnb
lock
sbb
inc
push
cmp
push
fistpl
add
jno
jp
js
and
inc
add
out
aam
rclb
add
aaa
mulb
push
loopne
add
out
and
xor
pop
mov
add
dec
mov
fst
mov
ja
aad
adc
out
andl
sub
jb
push
insl
adc
push
cmp
adc
pop
das
decb
dec
stos
pop
imul
push
imul
sar
enter
sub
and
loop
jmp
cltd
popa
xor
sti
mov
divl
lods
iret
movl
xor
jmp
xchg
ret
ss
and
add
addb
shl
inc
dec
dec
dec
jl
add
xchg
xorb
jle
mov
mov
cmc
mov
mov
into
mov
cmpsb
mov
arpl
repz
sub
call
dec
xlat
lods
add
jns
mov
fmuls
popa
mov
mov
mov
inc
push
jmp
test
mov
fnstsw
jmp
or
ror
xchg
les
push
dec
pop
mov
out
jbe
clc
sbb
cmp
mov
cmp
out
add
sub
pop
dec
popa
jg
and
nop
inc
pop
xor
xor
leave
jns
push
out
mov
iret
or
xlat
push
xor
or
scas
push
sbb
outsb
addl
frstor
insb
std
sub
xchg
loopne
in
mov
mov
ret
hlt
std
mov
stos
inc
pop
out
jne
cmp
lods
add
popa
imul
dec
xchg
mov
mov
pop
in
xchg
aas
mov
loopne
daa
adc
fcompl
cli
xchg
inc
sbb
pop
int3
mov
xchg
pop
mov
mov
cmpsl
xor
hlt
clc
inc
and
jmp
pop
ljmp
loopew
test
mov
fmuls
pop
inc
loop
jae
inc
stos
xor
xor
dec
mov
lahf
cli
pushf
ss
ljmp
fdivrs
rorl
ja
repz
jge
xchg
xchg
mov
sub
lea
mov
sbbb
xchg
lret
lock
jmp
mov
adcl
movsl
iret
adc
jnp
cli
mov
push
fidivrl
nop
into
popf
and
xchg
sti
cmp
sub
out
push
inc
ret
movsl
cmp
add
test
sub
mov
mov
popf
repnz
pushf
mov
sar
subl
inc
lret
out
lret
cld
dec
dec
call
dec
jge
pop
mov
push
in
and
inc
or
and
cld
jg
lods
push
xchg
sub
pop
add
sbb
dec
frstor
sub
push
push
movsl
cld
add
pop
mov
mov
mov
sbbl
int3
mov
xchg
pop
fs
ffreep
jbe
push
jecxz
data16
cmp
in
idivl
sbb
push
mov
fidivs
fsubrs
mov
add
mov
add
xor
stc
lods
push
cli
test
mov
jbe
loopne
jle
mov
push
push
les
cmp
mov
xchg
xchg
cmp
pop
sbb
sbbb
scas
int
sub
mov
inc
arpl
imul
or
lcall
cmovge
pop
dec
xor
add
jecxz
in
sub
xor
jno
mov
pop
cmpsb
mov
insb
cmp
outsb
aam
add
sub
nop
push
cltd
push
push
jmp
cmp
and
negl
or
and
push
cli
add
sbb
daa
lahf
pusha
gs
pop
add
into
enter
addr16
jle
xor
cli
idivl
dec
push
shll
jae
adc
sbb
sahf
stc
sbbl
adc
xchg
xchg
jns
dec
add
or
xor
stc
aas
push
push
ja
jae
stos
sbb
stos
xchg
jmp
and
cmpl
call
in
es
pop
loopne
aaa
cli
shll
pop
jb
into
stos
mov
ss
js
repnz
call
in
lret
push
enter
mov
jge
pop
mov
push
test
mov
testb
dec
andl
les
aad
mov
sub
fmul
es
outsl
movsb
cmp
adc
and
das
xchg
xchg
movsb
ja
call
fidivl
cwtl
mov
mov
idivl
mov
stos
xor
jmp
call
flds
jmp
aam
push
jne
pusha
stos
jmp
stc
ja
aaa
mov
fdivrl
mov
sub
lods
pushf
xchg
mov
pop
jle
call
pushl
jo
mov
add
mov
jecxz
lds
inc
jle
mov
mov
push
mov
mov
mov
inc
jno
and
jb
notb
lea
cmp
aam
fimull
bound
rclb
inc
or
aad
into
insl
mov
xor
fwait
jns
add
mov
cs
jecxz
jecxz
sub
rol
pop
or
fs
push
pop
jbe
inc
std
cmpl
jmp
mov
cmp
test
mov
fnsave
xchg
leave
pusha
or
dec
cwtl
push
jo
fldt
aas
rol
jb
mov
xlat
cmp
push
jp
ret
and
adcl
or
xchg
push
je
clc
pushf
jae
cmp
sbb
mov
mov
es
or
mov
fstl
movsb
lcall
cld
bound
xchg
cwtl
mov
cmp
test
insl
pop
mov
mov
jbe
mov
loop
lods
jge
mov
xchg
add
test
adc
bound
mov
mov
mov
sbb
cmp
jecxz
xlat
pushf
sbb
adc
xchg
scas
pop
cmpsb
mov
sbb
xchg
inc
nop
sbb
in
cmpsb
cmp
das
aam
mov
lock
or
arpl
sbb
adc
fsubrs
inc
gs
push
imul
sbb
pop
int
adc
mov
push
fs
fcmovne
or
stc
jp
icebp
pop
cld
les
lea
repz
mov
push
repnz
nop
adcb
cmp
jle
pop
ljmp
push
insl
jg
sbb
xchg
xor
rorl
lds
pop
jo,pt
jg
or
dec
pushf
ret
jnp
lods
les
inc
adc
addr16
cmpsl
andb
lock
cmpb
and
sbb
add
mov
dec
lods
out
pop
xor
lret
iret
lret
xchg
jle
add
movsl
clc
std
sub
jge
and
das
inc
fisubrs
lret
addr16
out
orl
sahf
nop
bound
cmpb
cmp
repnz
cmpb
cmp
xchg
push
inc
xlat
dec
je
cwtl
xor
push
in
cwtl
pushf
fbld
adc
jg
xchg
lds
icebp
or
outsl
sub
pop
in
add
mov
bound
xchg
sahf
xchg
cmp
mov
dec
sub
jo
sahf
pushf
jg
inc
mov
mov
inc
movsl
lds
inc
lds
mov
lods
pop
iret
ss
or
adc
das
push
cwtl
jp
mov
std
imul
jno
inc
sbb
fdiv
lahf
sbb
iret
fisttpl
out
test
lret
mov
jmp
mov
std
sbb
sarl
les
repnz
mov
pop
out
movb
es
or
popa
mov
lcall
adc
dec
dec
arpl
lret
into
mov
jle
mov
icebp
fwait
scas
inc
lret
adc
push
xor
roll
mov
jp
xchg
push
pushf
scas
xor
xlat
out
add
daa
mov
cmpsl
std
nop
outsl
and
inc
mov
inc
adc
dec
mov
lret
sbb
aad
jne
xchg
push
clc
nop
incb
mov
xchg
xchg
sub
xor
push
and
lea
cmc
aad
cwtl
mov
adc
incb
xchg
sub
sbb
cwtl
and
fistps
jo
mov
mov
imul
add
jns
sub
inc
lcall
inc
inc
mov
dec
mov
fptan
sub
dec
jns
ja
jo
mov
push
aad
jge
ja
xor
rcl
out
pop
mov
insl
enter
in
hlt
out
pop
sbb
jl
shrb
clc
cmpsl
or
sbb
ljmp
idivl
inc
into
mov
sbb
and
cmp
stos
mov
push
mov
clc
mov
std
outsb
lods
in
js
lret
js
add
test
xor
cltd
addr16
fnsave
push
or
decb
sub
jo
sarl
adc
mov
or
add
mov
jg
inc
adc
cli
aaa
decb
into
pop
mov
inc
pop
sub
enter
xor
jge
xchg
stc
mov
or
push
mov
lret
mov
push
mov
push
incb
outsl
cmp
dec
and
sbb
xorl
xchg
fwait
adc
pop
scas
bound
into
cmp
sub
je
int3
xor
fnstsw
dec
pop
xor
lcall
mov
jmp
jns
adc
les
test
dec
stos
fiadds
dec
mov
push
mov
mov
pop
add
notl
pop
jns
and
xor
mov
ds
push
ljmp
pop
cmp
xor
jne
add
insb
pop
sbb
clts
jno
and
add
dec
push
xor
add
push
pushf
mov
in
lcall
jmp
scas
test
sbb
or
cli
mov
cmc
and
sub
mov
shrl
and
enter
xchg
int
mov
loopne
cmp
pop
imul
xchg
in
jnp
cmp
pop
xor
add
adcb
push
jmp
cwtl
pop
mov
jge
and
notb
adc
sbb
inc
fsubl
jns
jne
jbe
out
jmp
imulb
cld
inc
lock
adc
stos
and
fiadds
xor
aam
shrb
out
dec
sti
sub
ror
adc
jbe
in
stos
mov
sbb
and
aam
jl
xor
ljmp
lret
push
fildl
inc
fcompl
push
cmpsl
outsl
mov
addb
sbb
mov
jb
dec
dec
fmul
xlat
add
ret
iret
push
sbb
sub
pop
ret
cmp
dec
push
sbb
cpuid
pop
jae
mov
test
cli
int
and
leave
imul
xor
int3
lods
insb
sub
daa
pop
outsb
inc
inc
sti
popf
mov
daa
jle
outsb
jmp
mov
fcoml
mov
and
fldcw
ss
cwtl
mov
ret
dec
xchg
jp
mov
dec
cmp
imul
push
and
inc
popf
push
cmpsl
jmp
fdivs
adc
rcrl
call
xor
add
xor
fiadds
pop
scas
and
out
inc
icebp
jmp
mov
out
xchg
lock
and
inc
imul
clc
pusha
aaa
cld
fs
sbb
out
xchg
cld
push
pushf
into
push
aam
insl
dec
fildl
fs
cmp
xor
push
jne
or
cmp
inc
sbb
dec
mov
xor
fldt
mov
adc
stos
orl
scas
negl
jns
out
clc
xor
jbe
out
and
mov
pop
push
mov
sub
xlat
data16
ret
mov
pop
in
mov
mov
mov
popa
sbb
out
insb
sti
xor
mov
orb
add
pusha
mov
and
adc
pop
lods
lcall
outsl
clc
or
mov
sub
cs
inc
pop
in
xor
adc
or
xchg
jo
popa
shr
sbbb
das
rclb
mov
repz
lret
stos
test
push
andb
sub
adc
xchg
xor
das
pop
sub
enter
imul
sub
dec
dec
sub
lea
leave
fxch
jae
cli
jecxz
sahf
stos
push
stos
jns
lock
jne
mov
dec
xor
fisubl
call
or
inc
cmp
ss
fidivl
test
dec
push
outsb
ret
js
jle
imul
scas
sahf
in
xchg
push
inc
jnp
jb
sbb
pop
xchg
sub
sub
aas
cmp
imul
aas
dec
sbb
nop
jmp
dec
mov
xchg
push
mov
cmpsb
xchg
sahf
fnstsw
sbb
and
inc
pop
pop
cld
xchg
pop
sub
sub
add
xor
push
mov
daa
mov
imul
les
mov
and
out
sub
inc
push
mov
addr16
stos
dec
sbb
sbb
gs
mov
mov
das
mov
jns
sub
aad
dec
lret
popf
pop
outsb
std
test
jns
sti
mov
es
jmp
fldl2t
test
inc
sbb
push
pop
push
in
xor
int3
push
testl
gs
inc
ror
pop
pop
addr16
popa
xor
and
int3
fs
repnz
call
stc
add
dec
add
cmpsl
std
jp
mov
adc
cwtl
in
inc
fisubrs
fsubp
stos
mov
lret
gs
popa
sbb
jg
fldl
mov
jmp
int3
sub
adc
ljmp
mov
push
jl
test
cs
out
frstor
and
sbb
insl
xchg
cli
push
dec
mov
lret
daa
fs
inc
stc
and
mov
ljmp
xchg
je
jmp
mov
shrl
pop
mov
nop
cmc
stos
ss
push
and
inc
and
or
scas
xor
sbb
fdivs
lret
xor
and
test
roll
dec
pop
pop
mov
shrl
sbb
std
jne
mov
push
sub
mov
clc
lret
dec
data16
loope
lods
sub
call
bound
or
adc
clc
lods
mov
idivl
sti
pop
xor
cmp
data16
sbb
lds
mov
fldenv
fiaddl
fsubl
or
jb
mov
mov
std
lods
es
jb
jp
and
sub
call
jl
fmull
ror
and
dec
sbb
mov
push
es
sbb
loop
ds
pop
fisubs
sti
leave
inc
push
jg
stc
shl
icebp
jl
cmp
sbb
add
aam
je
scas
pop
xor
cmp
add
adc
lea
cwtl
out
cmpsl
int
push
out
ss
daa
mov
je
jae
negl
das
mov
xchg
jmp
jnp
or
ret
jns
out
adcl
lods
jo
cmp
cmp
jae
ja
xchg
popa
stos
lcall
test
out
lret
add
mov
mov
mov
jge
sarb
sub
push
and
dec
jecxz
and
cmp
jmp
inc
cmp
push
dec
imul
pop
hlt
mov
dec
sub
repz
fistl
pop
jp
mov
movsl
push
outsb
mov
pop
mov
mov
adc
jb
mov
jecxz
ljmp
mov
mov
push
xchg
filds
icebp
int3
sahf
pop
jmp
lcall
jo
repnz
roll
out
jo
arpl
xchg
or
lcall
out
jae
mov
sbb
push
scas
jp
mov
lret
xchg
aas
out
js
mov
push
mov
aad
or
sti
xchg
sub
and
inc
add
cmp
cmp
ljmp
xchg
icebp
mov
inc
push
mov
jge
or
lods
inc
pop
xchg
xchg
jbe,pn
sub
mov
filds
ljmp
inc
bound
and
lods
push
xchg
jbe
sbb
out
xor
js
pop
stos
and
js
scas
int3
pop
push
test
mov
pop
and
outsl
xor
lret
outsb
stc
sarb
pushl
aas
cld
jns
push
pushl
in
lods
xchg
popa
cmc
data16
push
sub
sbb
add
xor
ja
and
sub
fistps
mov
lret
inc
adc
es
xlat
xchg
loopne
cwtl
jp
out
jns
mov
sbb
in
push
pop
mov
pushf
mov
in
incl
lret
iret
pusha
push
cwtl
scas
mov
lret
adc
fnstsw
daa
jmp
fbld
mov
shrb
dec
test
stos
xor
push
or
jp
xchg
add
push
test
lock
jne
jno
jl
dec
mov
sar
and
cmpsb
int3
pop
lea
ret
in
in
pop
fistpl
outsl
inc
lods
fisttps
lea
push
mov
xor
lock
loop
push
icebp
xlat
push
and
pop
xchg
lret
pop
jmp
push
stos
mov
shlb
sbb
adc
add
jmp
cld
mov
pushf
popa
cmp
pusha
jo
mov
jcxz
lods
mov
call
enter
sbb
fwait
mov
repz
std
xchg
je
out
inc
pop
xlat
pop
jmp
lgs
pop
test
cmp
sub
push
ficoml
and
out
sbb
sarl
out
aaa
setbe
cmpsb
add
ljmp
rcrl
addl
setnp
pop
into
mov
or
in
leave
leave
in
push
and
stc
cltd
jnp
movsb
lods
mov
mov
popa
enter
inc
inc
sti
xor
push
cmpsb
xor
xlat
xor
inc
cli
fisttpl
dec
fs
iret
cwtl
inc
gs
or
call
leave
mov
and
pop
and
mov
sbbb
xlat
jge
sahf
scas
testl
inc
shrb
sahf
pop
dec
pop
adc
int
inc
push
mov
aad
sbb
xchg
movsb
push
mov
cmp
cmpsl
pop
xor
cmpsb
leave
cs
clc
enter
sbb
outsb
cld
xchg
add
sbb
subl
inc
pop
hlt
mov
sbb
xchg
mov
or
mov
or
popa
ret
daa
enter
fisubl
xor
adc
test
xchg
subl
xchg
sub
loopne
push
iret
sub
xor
push
popf
adc
push
push
sub
test
mov
lods
inc
adc
adc
lock
push
xor
jo
or
popf
scas
xlat
xchg
rol
mov
testb
pop
adc
test
ljmp
aam
cmp
push
xor
jb
cmp
cmp
inc
into
or
dec
popa
pusha
shr
test
movsb
outsl
pop
adc
inc
and
lea
and
pop
aaa
enter
out
test
mov
push
movl
out
xor
aas
xchg
jo
test
and
pop
imul
adc
dec
cmp
addr16
add
and
adc
cmp
push
mov
xchg
test
fimull
ror
add
movsl
mov
shr
push
mov
clc
bound
xchg
mov
push
mov
addb
out
fwait
out
fidivrs
sub
add
je
jl
mov
pop
add
jge
call
fs
sbb
jb
fwait
xchg
xchg
lcall
add
sub
popa
push
popf
mov
fdivrl
enter
and
jp
fwait
lret
mov
sub
pop
fs
lea
add
add
xchg
pop
aam
daa
lcall
fwait
sbb
and
sbb
aas
les
and
inc
ret
sti
pop
and
sub
pop
mov
lods
repnz
ljmp
rolb
mov
cmpsl
inc
aam
inc
adc
test
sbb
mov
sub
rorb
jno
cmp
lret
ljmp
bound
push
or
outsl
push
and
sti
lea
push
mov
dec
add
adc
jno
pusha
push
int
inc
add
es
xchg
adc
jge
push
aad
lea
add
mov
xlat
jg
sarl
jmp
and
xchg
inc
rcll
out
push
rcrl
mov
mov
lret
clc
out
xchg
scas
inc
callw
mov
sbb
push
mov
iret
fcomi
outsb
mov
divb
out
ss
jmp
test
inc
pusha
sub
jb
and
mov
xchg
cwtl
mov
hlt
pop
fidivrl
adc
notb
mov
lahf
fsubrs
dec
into
jge
push
mov
mov
cld
dec
outsl
sbb
das
lcall
repz
jge
adc
pop
jecxz
bound
push
mov
fidivrl
and
pop
mov
aam
inc
pop
sub
shlb
adc
lea
xor
jmp
mov
imul
insb
hlt
cmp
jge
mov
test
push
cmpb
test
iret
enter
inc
stos
sub
mov
cmp
lds
xchg
adc
add
fimull
icebp
mov
adc
movsl
mov
and
mov
adc
cmp
imul
rol
ljmp
mov
add
push
pop
js
shrl
imul
mov
jae
sub
dec
mov
add
subl
insb
and
xor
mov
mov
cmp
push
push
lods
or
add
addr16
das
imulb
pop
lcall
sub
insb
js
aaa
pop
lret
stos
aad
pop
or
mov
xchg
movsl
cmpsb
push
mov
imul
pop
icebp
mov
iret
push
jge
imul
lret
repnz
out
into
fisubl
jp
jno
stos
addr16
xor
inc
les
test
dec
mov
cmp
mov
xchg
xor
lods
cli
push
pop
xchg
test
or
in
loop
stos
dec
mov
pop
dec
add
lcall
mov
add
xchg
rorb
cld
stc
dec
or
ret
shl
jge
in
mov
cmp
pop
imul
mov
xor
add
scas
js
sub
movd
mov
iret
enter
lock
mov
mov
test
lret
inc
fiaddl
dec
lock
aad
add
into
gs
mov
outsb
push
jnp
cwtl
mov
xchg
xor
adc
cli
push
sar
jmp
arpl
inc
pop
or
test
rcl
cli
jg
ss
jo
inc
mov
repnz
xor
movsl
lea
cmp
xorb
jbe
sahf
fs
push
test
xchg
mov
xor
mov
inc
sub
mov
ja
sub
pop
pushf
xor
pushf
pop
adc
divb
cli
add
pushf
mov
pop
test
adc
loopne
push
adc
and
jle
pop
mov
stos
inc
sbb
mov
mov
jg
sbb
xchg
push
loope
out
loopne
mov
mov
arpl
xor
call
mov
subl
mov
cwtl
pop
lea
movb
dec
jecxz
outsl
inc
movsb
adc
mov
test
cs
adc
mov
xlat
xchg
popf
iret
cmp
push
cltd
pop
scas
sbb
test
mov
test
repz
in
movsl
xchg
lods
iret
dec
inc
insb
sub
push
in
mov
mov
insb
add
xor
cmpsl
mov
xor
call
xchg
repnz
lds
mov
lret
les
mov
and
xchg
mov
insb
jle
lcall
shrb
repnz
les
or
and
mov
dec
xchg
add
sub
inc
xor
in
fcoml
add
nop
mov
ja
repz
inc
push
std
ds
pop
mov
or
inc
pop
push
sub
imul
cmpsl
in
mov
fbstp
rorl
pop
std
cltd
fcoms
adc
fisubs
jne
xchg
gs
pop
insb
push
cs
xlat
fs
adc
cltd
stos
push
ja
rorb
imul
sub
pop
insl
leave
mov
push
ds
cltd
sub
repz
pop
push
sub
xor
mov
inc
fs
mov
cltd
pop
inc
pop
cli
lea
frstor
outsb
stc
xchg
ss
lods
pop
inc
ljmp
not
push
testb
sub
pop
xlat
scas
int
loopne
cli
push
iret
mov
sahf
fadd
pop
gs
add
js
ffreep
rorl
stos
pusha
testb
xor
adc
push
or
cltd
jo
jecxz
and
call
mov
cmp
push
xchg
push
and
mov
cmp
test
rolb
pop
dec
mov
cwtl
loope
pop
imulb
iret
jge
clc
neg
int3
scas
into
insl
pop
ja
and
or
and
xchg
adc
aaa
lcall
scas
aas
stos
inc
mov
inc
stos
paddw
fdivrs
bound
inc
in
and
sub
pmaxub
add
mov
out
mov
sbb
mov
incb
stc
mov
pop
ficoml
mov
or
jb
and
bnd
mov
pusha
and
rcrl
loope
jne
mov
jle
adc
pop
xor
shl
subb
adc
les
pop
jge
or
fnsave
shlb
jno
push
xchg
pop
xchg
subl
mov
imul
lock
cmp
pop
pop
xchg
xchg
mov
mov
jl
fdiv
mov
adc
popa
imul
adc
fstps
push
xchg
mov
ss
call
stos
scas
out
and
imul
adc
imul
jmp
push
lret
imul
mov
das
xorl
cmp
pop
ljmp
add
cmc
loop
lock
ds
test
popf
or
push
popl
mov
mov
in
fstl
mov
cmp
or
mov
pusha
mov
jne
dec
into
fmull
jp
fsts
xor
aam
test
out
aas
lock
ret
jne
fsts
int3
inc
icebp
xchg
mov
addr16
imul
mov
iret
or
loopne
adc
push
or
sub
mov
mov
lret
mov
mov
cs
leave
loope
sti
iret
movsbl
enter
cmp
sbb
out
mov
jns
adc
adc
push
ljmp
xchg
xchg
or
mov
mov
pop
rcl
fbld
aad
xchg
insb
mov
mov
or
dec
xor
pop
arpl
sarb
popf
add
aad
push
ljmp
xchg
mov
call
dec
sbb
dec
dec
in
pop
xchg
aaa
mov
popl
cs
add
xor
push
outsl
cmp
iret
xchg
icebp
mov
and
mov
int
mov
and
mov
and
jmp
pop
xchg
sti
xor
inc
mov
fsts
js
add
jns
push
jae
xor
and
jmp
scas
lea
popl
ja
and
in
or
in
sub
mov
in
fs
mov
mov
repz
sbb
jae
stos
inc
loop
mov
lea
lds
repnz
stos
jmp
or
and
stc
scas
xchg
in
inc
ret
cmc
lret
xchg
insl
adc
mov
mov
ds
int
aaa
push
xor
nop
mov
pop
lods
jg
dec
jl
idivl
mov
ja
arpl
ret
lret
mov
adc
inc
ficompl
dec
mov
divl
cmpsl
jp
loope
clc
int
test
sbb
addl
xchg
pop
cwtl
add
inc
js
scas
outsb
lock
adc
pop
inc
push
pop
hlt
andb
xor
dec
mov
dec
mov
jb
ret
movsl
test
orl
lret
cmp
mov
mov
ret
rol
cwtl
pop
aaa
inc
icebp
sub
mov
jnp
pop
mov
into
es
xchg
clc
ss
andnps
and
adc
and
adc
push
xor
stos
js
lret
cs
imul
movsb
xchg
mov
add
dec
jno
fwait
xlat
outsb
adc
dec
fsubrl
dec
adc
ud1
and
inc
scas
aad
lock
addr16
xchg
xor
push
les
cmp
iret
leave
sbb
imull
iret
arpl
inc
fmul
add
lds
sbb
xor
je
jle
inc
imul
aas
jns
ja
cmp
adc
xor
lahf
hlt
mov
outsl
jnp
aam
ja
push
icebp
or
leave
inc
outsb
add
mov
lret
ss
jecxz
jmp
add
xchg
rol
ret
push
jmp
mov
mov
shlb
adc
lahf
push
pop
and
xchg
jb
mov
mov
lret
imul
mov
out
loop
js
xor
jnp
pop
out
test
shl
xor
fidivs
dec
in
cmpsb
mov
test
mov
jns
xor
jmp
inc
xchg
adc
inc
stc
incl
daa
xlat
mov
mov
pop
jg
pop
testb
sti
pop
nop
ja
lcall
jg
pop
adc
mov
mov
loop
test
push
clc
adc
sbbl
fdivl
pop
mov
test
jp
loop
ficoms
jo
test
fimuls
popf
inc
cmpsb
inc
sbb
aad
push
jo
or
aas
dec
cmp
sub
add
sti
mov
pop
mov
pop
pop
jl
mov
jae
dec
int
mov
mov
out
pop
test
push
gs
fisubrl
cmp
xor
push
push
loopne
cmp
jge
popf
or
or
mov
out
xchg
rcll
mov
adc
cwtl
arpl
mov
loope
ds
jo
clc
aas
rorb
push
cli
test
les
mov
mov
cmc
xor
iret
test
jle
mov
push
add
cs
cmp
ret
ss
mov
xchg
mov
pusha
sbbb
repnz
test
pop
nop
dec
lea
xor
idivb
cmpb
dec
push
push
das
cwtl
mov
dec
cmp
jl
xchg
arpl
add
pop
scas
add
xor
jle
lock
mov
je
push
outsl
push
and
int
popa
clc
xchg
xchg
ds
scas
mov
mov
jae
cli
in
arpl
push
sbb
rcll
loop
lret
mov
sub
into
cmp
in
clc
sti
sbb
out
jo
xchg
push
mov
scas
ljmp
xor
test
xchg
js
add
xchg
adc
and
xchg
adc
out
xor
loopne
jb
xor
mov
push
insl
or
inc
push
push
decb
es
cmp
mov
dec
pusha
data16
mov
adc
fistpll
shrb
popaw
dec
xchg
add
dec
and
stc
xchg
out
jge
lret
lods
mov
repz
add
add
rcrl
pushf
mov
shl
add
or
fbstp
add
cmpsb
inc
loope
out
cwtl
sbb
sbb
notl
inc
cmp
push
add
std
rep
or
cmpsl
loop
aad
fs
sub
int3
fdivp
xchg
insb
mov
lods
mov
jle
dec
inc
sahf
cmc
mov
xchg
add
in
jp
outsl
ss
inc
sbbb
dec
push
jbe
cs
cli
pop
out
clc
xchg
fcomi
movsb
push
sub
loop,pt
nop
or
or
xor
scas
inc
or
sbbl
shll
xchg
push
dec
xor
mov
out
in
outsl
fisubrs
cmp
xlat
dec
je
push
mov
jae
and
jo
cmpsb
test
fucom
addr16
test
adc
lods
add
lcall
popa
dec
mov
out
ss
in
lods
iret
mov
adc
popa
nop
ljmp
mov
mov
mov
movsl
sbbl
jecxz
popa
and
xor
popa
enter
pop
xor
jnp
push
mov
shll
pop
ljmp
cmc
repz
xlat
outsb
dec
shrb
jmp
mov
fmull
insl
les
xchg
lret
addr16
inc
in
xlat
xchg
pop
mov
in
int
in
pop
jne
lods
iret
data16
insl
cmc
mov
or
lods
push
mov
xor
notl
icebp
and
sbb
ds
daa
jno
aaa
sub
lcall
mov
push
je
push
movsl
xchg
inc
ds
popf
pop
das
lds
dec
pop
clc
iret
jnp
pop
xor
xchg
jle
xchg
ret
sbb
push
pop
leave
fs
divb
dec
push
sbb
xchg
inc
repnz
in
push
stos
test
mov
pop
shll
data16
adc
out
cmp
pop
dec
aaa
push
cmc
xlat
mov
sbb
pop
jnp
dec
sbb
scas
dec
imul
push
xor
mov
dec
adc
add
ret
daa
shll
cld
or
inc
ljmp
mov
rcrb
rcl
mov
nop
repnz
mov
inc
jmp
sbb
jecxz
mov
mov
in
sbb
adcl
mov
lds
xchg
js
js
jo
and
sbb
add
mov
sbb
xchg
mov
popa
arpl
adc
out
aad
mov
push
jl
aas
adc
daa
push
fstpl
dec
adc
add
and
popf
lods
repz
loope
cld
cmp
hlt
add
fsubr
stos
push
pop
cmp
jb
mov
loopne
nop
clc
inc
xlat
push
mov
and
cmp
jp
dec
sahf
mov
and
dec
push
ret
mov
hlt
push
push
and
pop
divb
repnz
push
stos
mov
xchg
pop
scas
notl
scas
fs
nop
mov
bound
mov
bound
xchg
cmp
loop
setne
shll
mov
mov
jmp
cmp
push
shlb
popf
sub
mov
pop
xlat
mov
repz
orl
mov
icebp
popf
mov
js
add
aam
ds
ds
xchg
ja
in
pusha
shl
mov
mov
in
hlt
cs
jne
jl
jge
or
mov
xor
iret
push
stc
dec
lods
pop
iret
xor
mov
lock
ss
pop
xchg
inc
andb
rcrl
out
adc
rcrl
outsl
sbb
mov
mov
sub
popa
xor
xchg
cwtl
mov
adc
inc
loop
int
xchg
xor
aad
xchg
int
out
cmp
sbb
cli
aaa
int
sub
in
xor
popf
inc
dec
hlt
jg
and
hlt
lock
aad
pop
shll
mov
inc
repz
ret
inc
pop
pop
xchg
push
and
xorb
xor
pop
rcll
push
insl
jp
jb
mov
pop
jle
adc
sahf
cmc
das
repnz
adc
dec
pop
fistps
mov
int3
outsl
inc
in
in
xchg
xchg
mov
scas
sbb
or
xchg
js
push
add
xchg
adc
fsubrs
mov
in
shl
or
dec
imul
mov
nop
push
push
inc
cmpsb
test
jecxz
cmp
fldenv
mov
in
add
mov
or
imulb
add
movaps
and
leave
jo
out
insb
sub
jl
add
es
filds
or
push
cmp
orps
daa
jnp
lods
and
adc
or
cmp
mov
sbb
test
pop
outsl
or
pop
pop
cmp
jle
stos
addr16
rcl
add
jmp
ficompl
inc
dec
ja
sti
cmp
mov
bound
pop
pop
add
push
fs
insb
arpl
fbld
mov
pop
cltd
mov
pop
js
sub
sbb
push
dec
fimuls
out
jno
or
lahf
insl
and
cs
mov
adc
push
inc
fdivl
outsl
repz
and
sbbl
rcll
test
pop
mov
push
sub
push
xor
in
jns
stos
ds
pop
scas
xor
insb
cli
push
inc
popa
clc
jbe
pop
test
mov
jo
xchg
mov
mov
pop
sub
bound
lods
data16
and
mov
testl
xor
mov
and
adc
jb
movsl
or
clc
iret
jo
or
xchg
push
inc
shll
cmpsb
cmp
orl
push
cmp
scas
out
outsl
push
scas
adc
shrb
pop
push
ss
cltd
mov
jl
xchg
aad
or
xchg
mov
mov
xchg
mov
mov
and
cmp
sub
stos
nop
pop
mov
test
dec
ja
stos
in
sti
lock
cltd
pop
dec
sbb
jle,pn
xchg
dec
jb
add
jl
fistpl
cli
sbb
ljmp
jo
das
fldcw
push
repnz
jmp
bndstx
sub
cld
bnd
and
dec
jecxz
adc
xchg
adc
push
dec
decb
flds
mov
test
adc
ja
lcall
and
push
lcall
sub
ret
cmp
mov
sbb
push
xor
sbb
test
je
call
xchg
sbb
repnz
enter
andl
cmc
adc
inc
jecxz
and
jge
dec
out
ds
imul
lock
insl
push
inc
insl
lcall
pop
imul
jno
push
mov
adc
in
stc
xorl
je
call
or
addr16
add
inc
out
xchg
fnsave
mulb
lcall
xor
imul
sbb
in
inc
fistps
or
in
inc
pop
lds
fnstenv
dec
icebp
jle
into
cmpsb
cmpsb
and
add
jl
add
daa
add
adc
sbb
jg
mov
dec
pop
push
mov
stc
pop
fdivrl
lret
addr16
sbb
ffree
cli
sub
pop
lods
mov
sbb
addr16
fldt
jb
cmpsl
push
es
jno
mov
xchg
ja
adc
mov
adc
idivl
cmpsb
ret
imul
mov
mov
dec
pop
mov
jmp
lods
mov
cltd
add
lds
cmp
orb
leave
mov
sbb
pop
popf
popa
cmp
sbb
in
xor
notb
cmc
roll
or
add
cltd
and
mov
bound
add
into
fimull
pop
sbbl
dec
fnstsw
dec
leave
fsts
out
sub
rcl
insl
inc
dec
aam
or
jle
fs
in
xchg
fdivp
push
jo
out
pop
mov
mov
mov
pop
mov
mov
dec
adc
cmp
xor
cmp
xor
add
mov
aam
cwtl
idivl
sub
icebp
ret
mov
jnp
push
mov
sub
lret
test
test
jp
push
adcb
scas
sbb
rorb
icebp
cmp
mov
mov
iret
adc
test
xchg
mov
ret
pop
and
mov
scas
xchg
inc
int3
popf
insb
mov
mov
push
out
aaa
xchg
or
insl
call
in
mov
inc
sub
rcr
mov
pop
faddp
test
lcall
aas
shll
mov
cltd
fimuls
jp
mov
jbe
imul
xor
pop
clc
ss
mov
push
subl
adc
ja
int
idivl
add
xchg
sahf
daa
pop
push
mov
pushl
and
jmp
jmp
and
sahf
cmpsb
les
push
add
nop
orl
sbb
mov
in
mov
pop
ss
loopne
add
push
icebp
push
and
js
cld
idivb
mov
push
aam
inc
jno
inc
in
aad
stos
ss
jg
leave
jecxz
inc
je
js
mov
inc
test
cmc
lcall
gs
jl
adcb
jno
push
jmp
push
dec
mov
cld
mov
mov
adcl
inc
into
bound
dec
cmp
shlb
mov
aam
adc
or
pop
adc
xor
inc
lret
mov
xor
push
popf
mov
mov
inc
shrd
push
mov
out
fwait
sub
inc
sbb
in
shr
fldt
xor
pop
test
in
cmp
test
mov
stos
pop
jle
or
cmp
mov
loop
les
sbb
push
mov
jbe
fimuls
and
lds
lret
xor
pop
iret
cmp
xlat
pop
sub
mov
dec
mov
mov
cmc
ljmp
cli
xor
mov
xchg
mov
lds
pop
xlat
push
mov
cmp
inc
call
clc
mov
mov
xchg
icebp
nop
adc
mov
dec
scas
cld
or
cmpb
hlt
mov
inc
repz
mov
test
sbb
xchg
sub
inc
ret
cmc
and
push
aad
in
sbb
push
xor
inc
int3
pusha
lcall
and
push
xchg
pushf
jmp
mov
test
dec
adc
lods
sbb
mov
push
in
mov
mov
xchg
pop
push
out
xchg
mov
cmp
mov
cltd
ret
aaa
jp
mov
lcall
shrl
dec
repnz
in
cmp
pusha
ljmp
rorl
outsb
jnp
sbb
mov
into
sub
clc
fdiv
cmpsl
hlt
jmp
sub
or
mov
push
mov
xchg
inc
fsubrs
js
in
jecxz
pop
ret
push
lods
fiadds
adc
sbb
popa
mov
xchg
ljmp
xor
aaa
mov
jb
sub
out
out
push
push
jno
imul
xchg
add
repnz
mov
xchg
mov
popa
mov
push
mov
cltd
dec
sbb
adc
lret
pop
lret
push
jo
mov
mov
mov
push
loopne
push
inc
cmpsl
inc
or
fists
mov
popa
enter
mov
cmp
fucom
adc
mov
les
xchg
pusha
mov
push
std
lods
jp
out
test
cld
xor
cmpsl
rcrl
xchg
jge
leave
insb
lcall
ds
inc
or
popa
cmpl
push
or
arpl
pop
xor
call
cmp
mov
or
ja
dec
mov
jmp
std
lcall
in
test
inc
nop
gs
mov
fbld
inc
push
shrl
movsl
fmull
dec
add
inc
xchg
jle
enter
shl
jge
pop
call
subb
mov
test
sub
jmp
fstps
mov
sbb
shlb
insl
jg
ljmp
or
jnp
sbb
mov
xchg
cmp
sub
inc
aad
jg
lret
jb
and
cltd
loopne
stc
aas
push
and
repz
xchg
jl
lods
gs
mov
add
jne
and
test
xchg
loope
cmp
out
insb
imul
out
sbb
in
lods
fucomip
shl
divb
jb
add
out
dec
loope
fistl
in
imul
fcom
jnp
inc
push
in
dec
inc
loopne
mov
bound
mov
jns
hlt
arpl
jmp
mov
xchg
scas
cmp
cmc
lret
jb
aas
jnp
pop
cmpsb
pop
testl
adc
jl
ljmp
dec
adc
push
imul
jmp
and
pusha
int
leave
add
shll
xchg
out
orl
lcall
andb
cmp
adc
fidivl
inc
test
shll
jecxz
cmp
xchg
lret
cmp
pop
mov
push
sarl
ud1
popf
mov
fldt
dec
pop
out
jg
jno
ret
adc
jge
jg
sti
mov
loopne
pop
in
std
add
fists
fadd
or
mov
dec
lret
xor
js
leave
and
popa
mov
xchg
out
xchg
inc
sti
xchg
outsl
test
in
insl
mov
arpl
shlb
mov
aad
xor
stos
cmp
push
dec
lcall
inc
pop
in
loop
xor
test
mov
mov
mov
push
cmpb
es
cld
sub
out
fdivrl
pop
repnz
xchg
dec
fidivrl
iret
in
adc
cmp
mov
xchg
movsb
lods
pop
lea
and
jl
out
dec
repz
cmp
dec
loopne
push
rcrb
insl
dec
mov
sbb
add
cmpsl
ja
fmull
jl
sbb
push
dec
loop
push
jo
lahf
test
mov
js
repz
push
mov
popf
pop
mov
xchg
sbb
jge
pop
ljmp
push
je
or
jns
iret
mov
inc
out
xchg
dec
or
jecxz
ljmp
call
test
dec
cwtl
inc
xor
repz
xchg
adc
mov
jl
popa
push
lahf
jo
or
mov
mov
mov
xchg
add
cwtl
and
scas
fadd
aas
push
sub
into
daa
test
adc
adc
inc
cmp
cs
lock
out
xchg
dec
inc
cmp
and
push
jmp
xor
movntq
out
jp
add
xchg
ret
sbb
movsb
scas
mov
movsl
mov
mov
popa
and
sbb
or
jae
into
add
dec
jecxz
les
cmp
push
pop
sahf
mov
sub
js
shrb
sbb
jo
jne
mov
push
inc
addr16
ret
ret
jo
push
mov
add
push
sbb
xchg
inc
aas
subb
pop
mov
inc
scas
xor
rcr
inc
arpl
jp
cld
int
xor
scas
fwait
repnz
outsl
and
pop
incb
cwtl
test
out
mov
int3
fadds
pop
add
xchg
notb
and
out
ljmp
popf
mov
xor
fstpt
ret
lds
test
sub
daa
repnz
ds
mov
jmp
loope
test
xchg
mov
jecxz
push
fiadds
int
sub
pop
pop
sbb
popf
dec
jnp
jl
lock
call
dec
add
mov
popf
movsb
pop
arpl
xchg
jl
xchg
fs
add
and
adc
pushf
sub
cmpsl
repnz
mov
sbb
lea
lea
inc
sub
jae
out
push
jae
or
addl
or
cli
jno
mov
lcall
mov
mov
pop
js
lahf
clc
test
aaa
mov
mov
xchg
leave
pop
shlb
adc
insb
std
xchg
lcall
icebp
add
or
aaa
push
push
in
cmp
mov
ret
xchg
sbb
mov
jns
cmp
xor
mov
jmp
push
sbb
out
ss
and
pop
repnz
rcrl
nop
jg
adc
outsl
loopne
scas
adc
and
addr16
arpl
add
pop
mov
jnp
inc
add
xchg
dec
push
out
mov
mov
dec
xlat
mov
scas
dec
dec
pop
add
push
addr16
iret
pop
dec
and
or
out
rcrb
xchg
sub
push
out
mov
fstpl
aad
fcmovnb
loopne
pusha
cwtl
das
xchg
cmpsl
fnstenv
cs
divl
cltd
mov
sub
pop
pop
adc
sub
mov
sbb
in
inc
sub
xor
inc
cs
push
mov
add
or
adc
lahf
lods
xor
faddp
aas
nop
js
subl
inc
insb
sub
adc
add
js
lcall
pop
mov
jp
dec
aas
fidivrs
bnd
shlb
rcl
aam
push
repnz
dec
aam
inc
rcrb
jae
fucomi
dec
dec
dec
cmp
imul
dec
mov
repz
shlb
aam
out
or
jae
or
or
ja
je
mov
push
lahf
test
out
stos
pusha
sti
xor
xchg
and
fdivrs
jg
enter
les
test
mov
sti
pop
cmp
cmpsl
cmpsl
loop
xchg
enter
mov
xchg
mov
mov
mov
cld
sub
inc
fstl
call
push
add
cmpsb
mov
pop
sahf
push
sarb
cwtl
mov
imul
jl
push
jns
adc
and
stos
inc
inc
pop
lock
aam
test
xchg
add
jnp
jmp
sti
dec
movsb
xor
jecxz
imul
mov
lcall
lret
decb
xchg
inc
inc
fdivl
adc
fadds
cli
cmp
inc
sti
popf
clc
nop
gs
rorl
pop
xchg
mov
lods
sbb
outsb
adc
push
sarl
mov
pop
push
push
sub
in
mov
subb
pop
pushf
mov
aad
xchg
xor
ficomps
sarl
or
fstl
shrl
psadbw
adc
sub
shrb
insl
pop
hlt
cmp
sub
test
lea
add
cwtl
out
bound
cmp
mov
dec
mov
icebp
or
faddl
into
xchg
push
arpl
gs
frstor
scas
out
fs
sbb
sub
daa
mov
nop
xchg
jo
in
shl
pop
push
clc
jg
shll
mov
ja
sub
sub
jb
push
sub
mov
push
popf
mov
sub
mov
mov
lds
xchg
iret
aam
cltd
jge
add
hlt
push
stos
sub
pop
add
add
xchg
jne
jnp
je
pop
push
or
mov
in
jl
dec
out
jae
inc
fldt
mov
sti
jp
popf
push
lret
cmp
jnp
inc
push
cltd
and
mov
testb
test
jge
dec
lock
xchg
fdivrl
in
mov
dec
adc
jb
popf
repz
jae
test
inc
push
cmp
mov
and
bound
and
pop
cmp
test
lock
ds
loope
pop
fidivrl
mov
and
cmp
and
pop
jmp
out
test
mov
sbb
les
sub
mov
pusha
sti
int3
mov
addr16
ret
xchg
pop
sub
iret
mov
jle
pop
xor
jns
inc
push
arpl
ds
jge
int
xchg
ret
mov
out
call
xchg
das
test
dec
mov
int
mov
mov
pop
jno
orb
dec
aad
outsl
scas
daa
jo
sub
and
arpl
xchg
add
movsb
sti
xchg
push
ffreep
pop
fdiv
sahf
scas
sbb
daa
inc
outsl
inc
lds
cld
pop
ss
push
int3
mov
sahf
xchg
hlt
mov
das
adc
mov
mov
xor
and
mov
iret
jecxz
in
daa
lret
ret
cmp
pop
int
in
adc
mov
dec
arpl
enter
iret
sar
fsubp
scas
push
jge
fstpt
in
mov
inc
sub
mov
iret
pop
fistl
sub
adc
xchg
xchg
dec
es
mov
aaa
cmpsb
mov
pop
jmp
sbb
aam
popa
xor
push
movsb
jnp
aad
mov
adc
mov
or
inc
fsubrs
lret
popa
clc
cld
sarb
rcll
push
insb
shlb
out
cmpsl
push
enter
popa
pop
loopne
test
aaa
pop
push
enter
jmp
xor
mov
sub
fwait
ss
sub
mov
lods
addb
xchg
ja
jae
fcomps
icebp
lret
nop
xchg
or
sarl
cld
cs
jmp
movsb
jecxz
shrb
movsl
stos
imul
mov
pop
dec
fstl
fwait
mov
aad
in
es
mov
pop
scas
jne
adc
jno
les
testl
pop
push
add
lret
mov
xor
adc
lret
clc
or
mov
cmp
or
shr
jb
cwtl
sub
jp
lret
mov
push
xor
inc
inc
in
xchg
cmp
fcompl
dec
mov
push
adc
jae
call
fcomi
add
and
in
jae
enter
cmpl
cmpsl
sti
or
out
repz
stos
enter
add
lret
cmp
mov
adcl
mov
inc
inc
in
insb
inc
pop
xchg
leave
sbb
cmp
mov
and
push
cs
movsb
in
popf
dec
pop
dec
ds
outsb
and
xchg
sbb
das
jb
rcrl
push
adc
mov
cmp
stos
jmp
jle
loopne
aam
pusha
mov
aaa
push
jo
mov
shlb
push
inc
test
pusha
lods
pop
mov
fsubl
adc
int3
std
stos
fnstenv
mov
sbb
push
or
pop
rep
stc
push
pop
and
mov
pusha
iret
test
mov
rcrl
stc
sbb
into
sahf
idivb
fsubl
mov
fnstsw
adc
insl
cmp
cmp
lcall
imul
mov
pop
movsb
mov
xor
xchg
out
xchg
mov
ficompl
push
aam
pop
pop
leave
or
mov
pop
repnz
into
das
mov
jp
pop
daa
fildl
popl
xchg
xchg
pop
fs
push
pop
out
xchg
cmpsb
mov
jl
cltd
sub
popf
mov
lret
in
scas
mov
jl
in
add
xor
scas
mov
jecxz
cld
mov
xchg
cli
pop
cs
insb
ret
subl
add
jbe
ljmp
and
add
adc
and
inc
arpl
into
xor
iret
movsl
jmp
mov
idivb
sub
sbb
dec
loop
dec
cltd
mov
pop
icebp
and
ja
adc
cmpsb
jecxz
int
jns
mov
loop
sahf
mov
test
push
jb
scas
pop
mov
sbb
pop
pop
daa
inc
aas
sub
mov
sbb
xor
sahf
cmpsl
aas
lcall
cld
ds
ja
mov
stos
or
mov
call
or
leave
or
mov
mov
aam
test
cwtl
inc
movsb
or
mov
or
loopne
mov
repz
add
popf
fsubr
out
push
xchg
sti
jecxz
loopw
inc
sahf
or
cli
push
cs
addr16
add
adc
xchg
dec
xchg
ja
pop
cltd
aaa
int
push
test
fisubrl
scas
cmp
xchg
mov
enter
and
or
scas
inc
adc
scas
call
aas
std
jecxz
test
xchg
sbb
jmp
pushf
int3
daa
fxch
insb
or
sub
cmp
lods
sahf
loop
lock
pushf
hlt
sub
fwait
mov
popf
xor
fs
hlt
out
mov
cltd
xor
mov
mov
ja
pcmpgtb
push
outsl
push
mov
push
rcll
lock
mov
fs
pop
inc
xor
pop
bound
aam
pop
scas
loop
sbbl
cld
mov
pop
mov
lds
stos
bound
push
in
addb
std
icebp
popa
gs
ds
pop
jo
lahf
and
xchg
pop
je
out
sbb
push
lods
loop
orl
add
xchg
mov
pop
mov
pop
loope
mov
fisubs
adc
out
dec
shl
icebp
mov
sub
popf
loopne
aam
adc
jo
loope
int
hlt
sbb
mov
jle
xchg
add
out
and
adc
mov
ret
add
int3
fadds
push
cmp
dec
cbtw
subb
xchg
nop
shlb
add
outsb
jl
and
xchg
neg
sub
stc
iret
loop
cmp
or
mov
enter
sbb
pusha
adc
lods
add
out
push
test
xchg
dec
xor
mov
sbb
je
iret
adc
cld
cmp
sub
dec
adc
xchg
in
fwait
pop
pop
inc
add
jno
and
sbb
dec
mov
add
or
xchg
fmull
sahf
sub
mov
lods
push
cmp
in
jge
scas
inc
lahf
stos
xchg
mov
leave
cmpsb
lock
jl
lea
fstpl
fisttpl
std
xchg
xor
stos
add
mov
das
outsb
outsb
mov
je
pop
mov
sbb
dec
mov
fcmovnb
sub
mov
lcall
inc
mov
out
jmp
out
xor
rcrl
sbb
cmpsb
iret
and
inc
es
sbb
ss
and
negl
mov
sub
adc
faddl
mov
adc
or
jle
xchg
inc
lret
pop
stos
inc
xchg
jmp
inc
mov
sub
mov
mov
sub
and
xchg
incl
popf
add
sbb
and
jns
xchg
xchg
mov
popf
lret
dec
fwait
bound
mov
xor
scas
clc
jg
push
mov
adc
mov
dec
sub
mov
std
push
cltd
xor
xchg
fldl
lock
push
lock
adc
push
insl
jnp
fists
test
sub
xor
cmpsl
and
ljmp
push
cltd
inc
les
popf
xor
and
dec
jb
sbb
imul
adc
movsb
ss
mov
in
mov
push
fsubl
push
sub
push
fistps
sti
cmp
fsubl
cmp
cmp
test
push
fcmove
fcoms
mov
inc
scas
dec
imul
or
mov
and
clc
inc
cld
mov
xchg
mov
mov
jge
idivl
cwtl
push
push
sti
jmp
outsb
jo
and
lds
push
aas
cltd
das
icebp
leave
call
pop
in
insl
jns
pop
lahf
jae
adc
sbb
hlt
add
scas
and
fmuls
lods
mov
sarl
dec
mov
xlat
adc
std
xor
xchg
push
or
lret
fdivrl
add
jmp
loopne
mov
adc
outsb
adc
sbb
jge
inc
mov
and
sbb
stos
xchg
lods
push
push
jne
je
pusha
cmpsb
pop
call
lret
xor
pusha
pop
lock
push
je
lret
int3
jmp
imul
cwtl
sub
les
loopne
cmp
xlat
pusha
stos
push
push
in
pop
repnz
sub
push
add
or
add
pop
push
xchg
int3
int
pop
ljmp
push
push
mov
jl
or
test
sahf
push
icebp
mov
sbb
pop
sub
call
aad
scas
sbb
xor
mov
xor
daa
mov
jecxz
in
mov
jne
fs
mov
arpl
insl
adc
push
add
in
stos
mov
dec
clc
push
fisubrl
daa
lods
push
rcr
inc
scas
test
lods
inc
mov
imul
clc
pxor
enter
xchg
out
lahf
cmpl
lahf
xor
int3
lret
out
cmpsl
dec
enterw
addr16
pop
mov
test
and
dec
fcoml
mov
mov
dec
or
inc
inc
mov
js
mov
mov
push
dec
mov
gs
rorl
dec
dec
sub
sub
sti
cvttps2pi
leave
in
mov
sti
adc
add
cmp
cwtl
pusha
push
imul
test
outsl
xchg
enter
movsl
cmp
out
imulb
div
xchg
mov
xchg
add
cmp
scas
pop
mov
scas
xor
ret
cs
pushf
sbb
aas
scas
mov
lahf
ss
xchg
inc
or
xchg
sbb
mov
addr16
lahf
mov
pop
popa
clc
out
clc
or
insl
jg
mov
insl
sarb
jmp
add
jo
pop
rolb
or
xor
sbb
mov
pop
pop
dec
jmp
je
pusha
adc
jp
repz
out
pop
sbb
jp
sub
jbe
mov
and
mov
enter
mov
xor
lods
cmpsb
xchg
sub
lods
sub
in
out
pop
sub
loope
jne
mov
pop
testb
cmp
xor
ret
and
pop
xor
mov
mov
xchg
and
imul
cmp
jo
xchg
ret
cmp
mov
iret
jb
mov
stc
and
ret
ds
jae
inc
loope
mov
nop
add
mov
aaa
in
xchg
mov
xor
test
dec
lahf
out
xchg
xchg
cmp
push
push
jg
mov
pop
mov
adc
push
pusha
enter
dec
jg
es
sub
shl
divb
sub
shrb
pop
addb
inc
pop
lds
jmp
into
gs
stos
jnp
inc
in
fwait
inc
xchg
mov
lcall
cmpb
inc
push
xchg
dec
fdivrs
cltd
shll
adc
lret
testb
sbb
jmp
sbb
push
adc
jecxz
cmp
add
or
dec
inc
push
out
push
test
aam
and
cmp
out
test
lret
sti
jno
sub
cmp
sub
and
in
iret
lret
jecxz
test
ret
les
lret
mov
xchg
jle
js
movsl
push
cmc
and
inc
xchg
hlt
cli
jns
pop
movsb
js
imulb
loop
mov
lds
fistps
rcrb
enter
xor
and
imul
andl
cwtl
mov
fidivs
xor
repz
inc
or
mov
cs
push
or
ljmp
inc
pushf
insl
out
fs
mov
fisttpl
jb
movsb
jno
inc
rolb
sti
mov
jl
or
stos
mov
leave
fstpt
int
inc
add
cld
aad
shr
fisubl
jo
mov
mov
rclb
clc
iret
lret
xor
inc
xlat
push
enter
je
jp
adc
rorb
cmp
inc
in
push
ja
adc
mov
psrad
repnz
and
xchg
lret
pop
cmpsb
and
aad
out
test
jl
push
xchg
mov
or
mov
sbb
insl
jne
lahf
popa
mov
lea
mov
dec
mov
cmpsl
xchg
fstpt
std
pop
aas
mov
mov
fmulp
outsl
int
clc
pop
imul
adc
xchg
cs
mov
adc
pop
inc
sub
cltd
xor
jecxz
push
leave
aas
mov
in
popa
cmp
lds
jmp
and
mov
jp
adc
stc
adc
or
pop
jne
mov
out
xor
cmp
or
push
shll
and
into
test
add
pushf
cltd
push
orl
out
insl
xchg
mov
mov
test
jmp
xchg
pop
add
jo
lods
mov
or
sahf
jns
jae
and
jmp
mov
and
dec
mov
inc
pop
mov
pop
faddp
loopne
dec
push
lods
jge
in
sub
xor
rcrb
push
leave
stos
cmp
fdivl
enter
sarb
push
repnz
lds
out
xchg
sbb
mov
pop
cmp
in
das
xlat
popf
das
outsb
push
je
adcl
daa
push
jg
shll
mov
push
pop
negl
hlt
stos
mov
lcall
fcmovb
inc
popa
sub
inc
addb
cwtl
pop
add
shlb
pop
cmpsb
adc
jns
cmc
aad
push
aaa
jnp
out
sar
xchg
add
cwtl
add
in
pop
lcall
dec
loop
scas
lahf
mov
imul
add
add
fisubrs
mov
inc
fcoms
mov
hlt
rcrl
mov
movsb
pop
inc
out
push
mov
cmpsb
loopne
push
fildl
sub
in
dec
mov
cmp
lods
cmp
pop
dec
outsb
fcomp
mov
gs
push
add
mov
hlt
rolb
movsb
cmp
or
xor
inc
mov
lods
inc
shl
pop
xor
mov
scas
cmpsb
mov
frstor
repnz
xor
xchg
push
ret
adc
in
stos
lret
or
xchg
movsl
popf
lea
mov
xchg
sub
xlat
pop
mov
pop
lea
sub
mov
dec
mov
jae
add
xrelease
sbb
bswap
out
dec
pop
arpl
mov
fnclex
std
add
es
das
loopne
pop
les
add
in
sar
mov
and
int
idivb
sbb
fcmove
mov
add
adc
mov
and
push
pushf
repnz
mov
lock
or
data16
mov
mov
mov
out
popfw
inc
cmp
inc
mov
mov
lods
lock
pop
sbb
cli
pusha
dec
mov
lea
movsb
lahf
or
jbe
or
out
cmp
sbbl
movsl
fbld
or
pop
push
icebp
cmpsb
sub
mov
dec
mov
pop
adc
icebp
mov
mov
fs
daa
mov
cltd
adc
lea
and
repnz
fnsave
int
aam
stos
cli
or
ja
push
fsts
sbb
dec
ja
mov
ja
icebp
test
and
mov
pusha
push
xor
sahf
mov
mov
xor
mov
pusha
pop
repz
cmp
clc
out
xor
pop
jne
rcrb
adc
fwait
cmp
test
mov
repnz
xchg
jae
adc
push
adc
jmp
jg
xchg
mov
pop
sub
xchg
sbb
ja
mov
or
cld
cmp
adc
mov
aas
mov
cltd
rolb
or
iret
cli
test
cmp
mov
lea
jns
jmp
das
adc
jbe
sub
xchg
cwtl
rcrb
imul
pop
addr16
scas
sub
sub
adc
cmp
xor
lahf
add
xchg
jns
lock
subl
sbb
mov
addr16
fpatan
and
in
adcl
gs
pop
jne
adc
cmp
into
clc
out
cmp
roll
outsb
ret
sbb
push
std
out
in
and
push
movsb
cmpsb
sbb
daa
xor
mov
ficompl
push
shrb
in
inc
fs
push
sti
adc
test
fstpt
inc
push
mov
jge
push
scas
mov
mov
ret
stc
push
jno
clc
or
filds
xor
scas
aad
and
test
jno
cmc
leave
nop
push
mov
push
loop
pop
cltd
jno
test
push
inc
adc
add
das
pop
and
dec
mov
out
test
fs
add
inc
or
jb
pop
outsb
movsb
or
mov
rcrb
xor
mov
xor
popf
xchg
popa
clc
enter
lret
mov
lcall
in
xchg
jo
mov
out
xchg
inc
mov
out
imul
jne
jae
orb
or
sub
das
loop
ds
icebp
testl
les
pop
repnz
ret
jns
mov
pop
xchg
stos
xchg
fsubrl
scas
pop
or
add
int3
into
subl
add
stos
adc
pop
ret
adc
in
das
cmp
cmp
push
in
inc
sub
push
jbe
cmpsb
mov
rcr
fisttps
pushf
cmc
int
in
cmp
int
dec
sub
jae
xor
cmp
add
in
xor
xor
sub
data16
jo
sbb
push
lret
inc
inc
sti
outsb
and
outsb
negl
push
cmpsb
outsl
jge
mov
dec
fwait
scas
std
cmp
pushl
arpl
dec
sub
clc
out
into
xchg
xchg
xchg
lret
les
rorb
add
pop
cmp
sub
push
ss
popa
addr16
dec
mov
mov
outsb
decl
inc
xchg
bound
jae
test
loop
rorl
movsl
movsb
pop
sbb
dec
adc
mov
xchg
loopne
pop
rcrb
adc
js
sbb
fwait
das
sbb
fwait
xor
std
mov
jno
dec
dec
add
fistpll
and
cmpsl
enter
mov
jae
leave
pusha
mov
rcll
push
dec
lods
inc
addl
mov
jmp
or
push
daa
inc
rorl
pop
xlat
xor
mov
aas
mov
and
mov
push
in
push
push
cld
mov
std
cmp
sbb
adc
cmp
or
push
fstp
push
mov
mov
xor
rcll
into
imul
mov
das
ret
hlt
push
fsubr
test
cmp
pop
push
mov
out
cli
jecxz
sub
outsb
clc
fmul
xor
mov
push
lcall
popf
push
jne
movsb
mov
mov
cmp
out
mov
jge
xor
iret
pop
adc
xchg
scas
inc
dec
sub
scas
dec
jo
arpl
shlb
lds
lds
mov
out
cs
outsl
addl
lahf
fimull
shr
xchg
sub
lahf
mov
and
xchg
out
aad
in
aas
rorl
sub
xlat
xchg
add
cld
push
mov
and
dec
jbe
sbb
and
push
pop
fdivl
xchg
inc
outsb
jo
pop
xor
pop
dec
xchg
jle
dec
imul
xchg
mov
pushf
xor
dec
ss
aaa
mov
or
out
outsl
es
xor
sub
sti
dec
stos
hlt
pushf
sbb
test
stos
inc
mov
fcmovne
pusha
or
ret
jo
jns
sub
mov
in
mov
data16
or
testl
js
cs
in
pushf
cltd
lret
mov
jg
add
mov
int3
jb
bound
jnp
jmp
adc
mov
pusha
inc
push
xchg
jp
loop
jge
jns
sarb
inc
mov
ja
decb
xchg
test
cwtl
adc
lret
movb
popa
adc
dec
jecxz
ss
add
incb
enter
xor
mov
imul
pop
xor
jne
out
push
sbb
je
lcall
sub
int
cltd
insl
popl
popf
rorb
adc
sarb
mov
or
into
gs
testl
inc
xlat
lods
sub
mov
jne
out
cmp
jmp
push
ret
adc
fmull
fimuls
xorl
xchg
mov
lcall
dec
fs
in
or
push
lcall
xor
mov
out
dec
in
push
stc
insb
int
pop
ret
hlt
push
outsb
int3
push
in
jmp
or
popl
dec
gs
mov
in
ret
pusha
imul
adc
xchg
mov
push
aad
add
add
stos
push
pop
jbe
mov
clc
adc
cmp
mov
pushf
and
dec
bts
cmp
cmpsb
mov
mulb
rcrl
push
sarb
adc
jo
adc
sbb
or
xor
pop
mov
mov
addl
adc
add
pushf
daa
inc
addr16
sub
xor
mov
pop
mov
push
mov
ret
loopne
jmp
leave
jnp
jb
xchg
sub
scas
scas
add
fcomps
repz
ja
pop
cltd
adc
mov
mov
imul
aas
adc
sti
xchg
and
test
or
divb
bound
push
addr16
fs
cltd
aas
mov
xor
xchg
test
mov
aaa
cmp
repnz
adc
inc
scas
mov
inc
testl
jle
sub
jmp
imul
cmpsb
mov
pop
mov
xor
repnz
xor
in
push
fldcw
jg
jp
mov
addr16
xchg
adc
cmp
mov
imul
out
cmpsl
mov
ja
mov
ss
jmp
aaa
lea
xchg
idivl
cs
inc
mov
test
xor
mov
sub
andb
jae
mov
adc
or
popf
inc
sti
jmp
adc
iret
sub
les
aas
rcrl
mov
jns
sahf
ljmp
loopne
adc
ja
push
lahf
lcall
loopne
loop
xchg
stos
jle
and
jo
adc
xor
xchg
push
lds
mov
sbb
jnp
cmpsb
pop
pushf
sbbb
cmp
xchg
cld
xchg
cwtd
test
pop
and
pop
add
mov
cld
cltd
out
fsubrp
popf
or
in
test
lcall
shrb
insl
repnz
cmpsb
lods
mov
sbb
push
adc
inc
pop
jne
push
lock
imul
out
xlat
inc
jb
aaa
jge
or
cmp
ss
lock
aam
jno
lods
cld
clc
mov
dec
data16
call
pop
sar
mov
sbb
mov
int
cmp
mov
xor
ror
inc
arpl
jnp
sarb
inc
js
push
jne
pusha
cmc
pop
cmpsb
fadd
faddl
cmc
js
xor
or
rolb
or
in
mov
lock
repnz
dec
push
rep
mov
dec
repnz
scas
mov
outsl
or
adc
lahf
cmp
data16
orl
mov
mov
xorb
jecxz
fcmovbe
mov
xor
mov
addr16
lods
icebp
sbb
jnp
in
xchg
adc
sub
lret
in
ret
xchg
xchg
sub
scas
mov
xchg
xchg
sub
imul
mov
add
fwait
and
dec
adc
and
xchg
and
push
lcall
push
dec
mov
inc
gs
push
sbb
dec
mov
push
leave
popa
stos
cmp
lret
cmp
xor
dec
xchg
mov
js
lret
pop
xor
call
push
aad
rcrl
flds
repz
and
shr
inc
xchg
out
xor
sbb
xchg
rol
and
leave
xchg
imul
mov
dec
pop
xor
cltd
or
out
add
call
xorb
fsubrp
fidivrl
xchg
and
or
sub
add
xchg
hlt
xor
fwait
in
rcll
hlt
fisttps
movsb
divl
and
sbb
push
je
pop
iret
test
jnp
pop
cmp
jnp
dec
cmpsl
pusha
dec
call
mov
fwait
sbb
ret
insl
cli
mov
or
nop
mov
sar
leave
test
cs
loopne
popa
in
sub
aas
dec
sub
xchg
repnz
mov
adc
push
pop
add
fists
jno
cmp
xchg
mov
mov
dec
in
mov
cmp
jne
mov
call
push
mov
jae
sbb
push
test
mov
push
daa
mov
push
add
cmp
movsb
aaa
outsb
outsb
mov
xlat
pop
repnz
subl
xchg
or
push
jne
rdmsr
call
ja
mov
mov
mov
adc
or
das
call
xchg
jecxz
mov
lret
sub
mov
jb
and
loopne
pop
push
fstl
xchg
repnz
stos
mov
mov
stos
adc
add
push
test
stc
mov
add
sahf
sub
call
jle
sbb
stc
add
sti
cmpsl
jge
outsl
fistpll
fldenv
pop
nop
jns
cli
cmp
mov
movsl
adc
fs
mov
pop
inc
ret
fs
adc
add
mov
jbe
daa
mov
das
repnz
scas
je
push
xor
stc
cmp
jne
adc
dec
ror
adc
jmp
mov
jmp
cmpsb
test
push
lret
pop
cs
scas
adc
scas
sub
hlt
fadd
xor
adc
xchg
sbb
fisttpll
adc
cld
push
cmpsb
inc
sbb
dec
push
adc
ss
xor
fwait
xor
adc
dec
mov
xchg
and
enter
jmp
inc
add
pop
cmp
lea
sbbl
sti
inc
dec
push
popf
push
push
jle
lds
xor
or
push
in
js
mov
push
cmp
jno
gs
repnz
pop
ds
inc
fs
outsb
movsb
imul
mov
clc
mov
sub
mov
cs
in
in
jl
imul
sbb
push
int
js
ret
mov
sub
and
shlb
dec
push
int
mov
push
fwait
inc
insl
inc
jl
jle
push
sub
xchg
sub
in
inc
call
in
cmpsb
dec
je
mov
imul
sbb
cld
cmp
in
adcb
or
or
sti
sub
ret
xor
mov
ficompl
xchg
mov
test
sbb
dec
out
lcall
push
sbb
inc
test
jns
jl
in
xchg
sbb
test
jo
fcoms
test
fwait
push
inc
xchg
sbb
iret
popf
pop
ret
aas
pop
out
and
xor
push
inc
fnstsw
test
aas
inc
out
dec
enter
pop
into
js
loope
push
sbbl
arpl
cwtl
in
lret
mov
pop
subb
insl
in
jge
add
xor
xor
add
ss
pop
xchg
lret
sbb
movsb
adc
or
jb
dec
int3
in
ret
adc
clc
dec
dec
fs
jo
roll
pop
mov
fimull
xlat
push
mov
sahf
or
mov
sahf
xchg
sub
std
nop
mov
pop
xor
push
xor
lahf
gs
push
fwait
mov
inc
js
movsl
cld
inc
test
inc
pop
inc
adc
hlt
outsb
mov
ljmp
rol
orl
shl
cmp
sub
out
push
xchg
or
imul
lock
cmp
cmp
idivb
xchg
movsl
inc
adc
addr16
add
pushf
mov
ja
cmp
and
inc
mov
mov
xchg
cli
lret
dec
cwtl
aad
fstpt
pmulhuw
adc
mov
inc
lods
mov
ljmp
inc
cwtl
in
mov
cltd
das
sbb
js
cmp
jns
push
jecxz
cmp
mov
pop
pop
inc
mov
xchg
xor
xlat
mov
scas
mov
sub
je
lods
xor
sahf
or
mov
lds
add
xchg
jne
jbe
sbb
cmpsl
lahf
test
cmp
fists
cmp
adcb
mov
inc
dec
jb
test
fidivl
push
xchg
out
cmpsl
shl
imul
cmc
or
loop
or
sub
mov
sub
mov
jb
ja
call
xlat
inc
arpl
mov
subl
mov
jle
out
ja
mov
jp
or
sub
test
dec
gs
orl
lahf
dec
add
push
test
inc
lret
adc
or
jb
xor
lahf
bound
leave
in
andl
mov
inc
or
inc
adc
add
in
push
test
push
sbb
clc
adc
pop
mov
sub
insb
fbld
scas
inc
in
xchg
int3
jnp
xor
fidivrs
xor
sub
sti
push
int3
jmp
inc
sbb
mov
push
inc
fsts
jne
idivl
mov
int3
and
mov
sub
hlt
or
pop
mov
orl
jb
popa
rol
mov
and
xor
mov
dec
es
dec
dec
ss
push
movb
out
pop
out
sar
or
adc
leave
xlat
addr16
jecxz
sahf
fs
push
xor
gs
xor
shll
fs
das
ljmp
xor
push
jge
push
inc
push
ficoms
mov
shlb
outsb
or
scas
add
loopne
loop
pop
notl
inc
in
hlt
push
mov
push
lret
xor
aaa
pusha
cmpsb
push
popa
or
inc
es
and
xchg
adc
add
pop
push
jge
mov
test
or
adc
inc
shlb
cli
dec
pop
pushf
pop
cmp
rcrb
xchg
mov
aas
lds
xor
std
cltd
mov
fbstp
ss
mov
push
fiaddl
fucomp
add
pusha
std
pop
dec
fdivrs
in
push
lods
sbb
add
outsb
adc
call
movsl
rorb
jecxz
loope
movsb
cmp
push
out
push
sub
inc
lret
lock
sbb
movsl
mov
mov
scas
jge
pop
in
into
loop
sub
cmpsl
push
leave
enter
negl
orl
mov
jae
pop
aaa
and
xor
outsl
mov
xor
aas
add
and
dec
xor
fisubrs
aam
jecxz
inc
adc
pop
mov
das
mov
mov
mov
cli
xchg
scas
inc
sbb
inc
pop
rcl
sub
cwtl
fsubrs
pushf
mov
lret
lret
das
ret
jnp
pop
lds
xor
pop
leave
sub
sbb
notl
xor
sub
xchg
jns
dec
movsb
je
outsb
xchg
out
cmp
inc
loope
mov
jne
ret
xchg
adc
and
and
ss
mov
rcll
jecxz
mov
adc
pop
xchg
mov
test
jle
out
jmp
mov
and
jmp
inc
jmp
jno
fwait
xor
pop
outsb
mov
lds
bound
iret
and
insb
and
adc
jns
test
lcall
dec
pop
sbbb
scas
xchg
fldenv
push
pop
scas
xchg
loop
sub
and
dec
dec
int
inc
dec
shr
dec
push
xchg
stc
rcrl
pop
aaa
inc
sbb
jecxz
out
dec
lds
pop
ret
sbb
fisttpl
ret
mov
mov
jo
jmp
jl
insl
test
dec
cmp
xchg
or
mov
addb
jge
and
fldt
add
shrb
mov
xchg
mov
cmc
shlb
mov
push
sub
pop
inc
jno
in
test
pop
sub
cmp
push
mov
jecxz
sub
iret
jae
push
sub
movsb
or
lahf
push
cmpsb
out
xor
sub
pop
mov
mov
adc
loopne
push
push
or
popf
mov
cli
mov
ret
xchg
testl
pop
cmc
adc
xchg
loopne
test
repnz
repnz
add
icebp
stc
lret
xchg
add
mov
repnz
cmp
jecxz
sub
add
cmpsl
mov
dec
enter
ljmp
lds
icebp
jmp
push
dec
aam
sub
push
jmp
push
fnsave
fdivrp
adc
cmp
inc
lret
das
in
or
pop
insb
clc
loopne
sbb
mov
jmp
mov
jmp
xchg
rclb
push
cmp
mov
icebp
pop
mov
aam
cmp
adc
lret
add
mov
inc
clc
scas
xchg
and
fistpl
mov
and
push
adcb
mov
jbe,pt
pop
mov
loop
mov
ds
popa
sub
add
sbb
xor
stos
out
aam
arpl
adc
cmp
rorb
xchg
pop
in
lahf
testb
jle
inc
insb
fstpt
sub
xchg
lea
adc
or
adc
xchg
dec
cmp
mov
adc
jns
jl
sub
mov
add
fsubs
fmull
push
mov
or
adc
int
inc
daa
frstor
int
cmove
aas
dec
jno
inc
in
call
mov
enter
addr16
repnz
iret
jecxz
shlb
lods
outsl
cmpsb
int3
jg
lret
xor
aas
jno
cmp
orl
mov
jl
std
pop
pop
adc
lds
mov
lcall
mov
push
out
mov
outsb
lds
mov
adc
scas
out
add
dec
sbb
sti
jbe
add
subl
cs
sbb
cmp
movsb
mov
lahf
ret
jae
pop
lea
cmp
scas
into
mov
mov
push
imul
xchg
cmp
int3
add
ret
push
mov
clc
out
lret
je
jns
jno
xor
ss
inc
and
lds
lret
jne
daa
mov
bnd
out
xchg
xchg
mov
cmp
mov
push
xlat
stc
push
pop
xor
sbb
sub
les
push
xor
repnz
push
out
adc
js
cmovns
in
scas
sarb
lods
mov
lock
mov
mov
push
add
out
popf
add
or
fs
out
xchg
xlat
xchg
fmulp
mov
je
stos
fbld
fmull
test
mov
iretw
out
cmc
inc
pushf
lea
lods
and
jmp
and
jae
mov
and
aaa
loopne
sub
pop
int3
cmpsl
call
and
mov
subb
pop
cmpsb
sbb
ja
xor
dec
push
test
ja
and
push
dec
mov
push
jne
cmp
sub
mov
dec
xchg
out
or
dec
pushf
pop
stc
nop
mov
add
xchg
sub
orl
xor
jae
fs
and
pushf
add
jg
mov
cmp
xchg
sub
fbstp
ljmp
jno
test
aaa
push
mov
mov
insl
sub
xor
out
pop
jbe
pop
std
or
pop
fucomi
jns
addb
lret
cs
rorb
cmp
mov
mov
sub
pop
testb
and
and
shlb
in
das
repz
mov
mov
imul
movsb
ss
cmc
dec
pop
push
inc
cmpsb
movsb
xchg
movsb
ss
jno
std
mov
mov
mov
movsl
xor
jbe
mov
loope
dec
jl,pn
xchg
out
aam
aas
jp
bound
jbe
mov
push
test
or
adc
jns
and
hlt
pop
cmp
cmp
movsl
xchg
pop
loopne
lret
cld
addr16
pop
cwtl
rcl
jl
call
sub
mov
fs
xchg
jmp
fwait
aad
xchg
imul
jne
xchg
add
jne
xlat
into
movsl
add
dec
xor
pusha
mov
cmp
loop
stos
xor
cmp
xchg
pusha
and
bound
pop
mov
dec
mov
testl
jns
push
insb
push
test
repnz
lret
fmulp
gs
cmp
or
imulb
jmp
inc
push
jns
mov
notb
sub
das
push
cs
test
jb
scas
clc
adc
inc
inc
mov
insb
movsl
in
int
jmp
outsb
hlt
shlb
fidivl
or
push
mov
mov
neg
dec
lret
xchg
aas
ja
in
mov
rolb
jmp
adc
mov
sub
fwait
data16
imul
stos
cmp
or
fcomp
mov
mov
insb
jle
test
sbb
enter
test
add
ret
nopl
or
addr16
xchg
clc
sbb
loop
adc
ret
stc
test
mov
lock
mov
mov
stc
popf
mov
pop
jmp
mov
cmpsl
pop
ret
jae
insb
int
stos
rclb
jbe
int3
stos
jne
adc
push
jl
jnp
push
nop
stc
xor
mov
adc
fidivl
cwtl
pop
aam
loopne
push
cs
cmpsl
clc
arpl
out
ror
mov
arpl
jnp
jnp
jge
pop
mov
xchg
mov
fwait
in
leave
in
sarb
in
push
jno
fildl
divb
cmpsl
push
mov
aas
pushf
push
clc
push
roll
shll
add
mov
cwtl
inc
push
mov
and
test
cmpsl
jecxz
pop
ror
and
lods
pop
mov
pop
in
pop
cmpsl
out
outsl
gs
ds
xchg
in
scas
jle
pop
pop
lcall
js
nop
ret
aaa
cmp
orb
movsl
loope
cmpsl
loop
aad
add
call
xchg
xorl
movsl
sbb
jbe
inc
cmp
or
addr16
push
xor
dec
aas
sub
stc
test
aam
or
sub
adc
jae
mov
pop
imul
imull
out
push
cli
jns
sub
aam
scas
or
das
ds
shll
mov
push
ds
or
mov
jp
mov
push
mov
sbb
rorb
lret
lret
mov
xchg
mov
cmp
mov
repnz
lret
jmp
js
xchg
mov
cwtl
out
xor
leave
xor
cmpsb
sub
jmp
rcrl
fisttps
xlat
mov
push
fnsave
dec
daa
pop
sbb
or
xor
fldcw
std
or
xor
dec
sub
and
inc
ficoms
enter
fadds
test
jg
mov
push
xchg
push
pop
out
xchg
js
dec
das
icebp
dec
mov
add
pop
das
mov
add
push
movsb
jp
jge
xchg
mov
pop
repnz
idivl
xor
adc
sbbb
xor
btc
imul
ja
xchg
jno
data16
fidivl
mov
or
jb
dec
push
jbe
fcoml
sahf
lods
mov
inc
jno
push
jne
xchg
jl
stc
add
jle
insl
scas
popf
xor
pop
adc
and
jge
scas
add
adc
or
fidivl
ja
inc
test
sbb
scas
or
sub
outsl
leave
lea
rorl
cmp
xchg
psrld
jo
sbb
js
xlat
jmp
xchg
out
mov
arpl
jle
ss
push
jo
cmp
xchg
and
push
xchg
shll
inc
or
fmull
test
pop
repnz
ss
mov
xlat
or
lret
xchg
mov
std
cltd
xchg
out
mov
out
imul
jnp
in
or
adc
push
cltd
fs
in
lds
xor
dec
add
in
mov
test
mov
jo
push
adc
mov
test
mov
mulb
sub
ja
icebp
hlt
or
dec
xor
sub
and
dec
dec
mov
out
xchg
sub
movsb
cmp
xchg
cmp
fidivl
clc
or
jle
or
mov
cmc
in
sbb
inc
ret
hlt
jecxz
xor
imul
cmp
popf
and
xor
push
leave
fmull
cwtl
mov
lret
bound
aam
icebp
push
into
das
cs
repnz
mov
hlt
mov
shr
inc
pop
mov
xchg
andb
xchg
mov
sbb
out
dec
add
imul
sub
mov
test
ret
addr16
cwtl
ss
cltd
adc
push
mov
loopne
outsb
daa
and
sub
cmc
mov
or
and
test
xchg
xor
push
dec
jns
in
dec
rclb
xorb
sbb
addr16
jo
loopne
in
cmpsb
sub
jmp
fisttps
in
bound
sbb
jnp
rclb
pushf
int3
mov
pop
mov
insb
sbb
dec
dec
shl
into
ds
pop
or
cld
std
dec
test
sub
or
repz
cwtl
inc
mov
adc
setge
mov
xor
jmp
and
lds
jp
call
shlb
int3
jg
pop
cltd
test
pushw
lock
test
and
mov
lea
push
sarl
loop
sbb
loopne
mov
jmp
ret
sub
mov
add
sub
test
mov
adc
mov
and
mov
imul
dec
xacquire
or
cmp
daa
xor
inc
jae
cmp
adc
xchg
push
je
pusha
xchg
mov
fnsave
inc
or
shl
rclb
cmpsl
add
leave
bound
icebp
lea
push
addr16
frstor
out
cmpsl
xchg
adc
sub
fiaddl
mov
outsl
mov
adc
scas
cltd
and
xor
inc
sar
shrl
push
out
pop
daa
aaa
into
push
ret
mov
repnz
stos
dec
jb
popf
pop
mov
xchg
mov
popf
arpl
dec
lods
aad
inc
dec
enter
mov
jle
push
add
jecxz
inc
dec
pop
test
add
ret
ret
and
jns
fsubr
xchg
inc
andl
es
mov
xlat
testl
mov
push
xor
dec
lods
jg
fildll
pop
imul
inc
fmull
pop
cmc
cs
movsl
lds
mov
xor
xchg
jmp
pop
cltd
mov
das
inc
push
pushf
loop
cmp
push
movsb
dec
sub
insl
ja
dec
xchg
pop
xchg
into
mov
mov
sub
mov
loopne
enter
daa
xchg
and
sbb
xlat
data16
out
add
int3
lea
fstpt
cmp
xchg
inc
loope
lea
adc
sbb
jle
jo
cltd
jno
int3
pop
mov
mov
push
sub
jbe
ds
sub
mov
in
aad
scas
pop
push
push
dec
inc
lds
add
push
sbbb
xchg
mov
ficompl
daa
push
cmp
pop
xchg
cli
inc
mov
les
mov
push
adc
and
jb
lock
int
sub
jecxz
inc
in
sbb
sbb
rcrl
xor
mov
scas
aas
cmp
test
pushf
pop
addb
test
mov
ja
dec
idivl
mov
push
es
and
gs
fstpt
scas
es
xchg
dec
test
mov
push
popa
cmp
popa
int
adc
ret
outsb
sub
insb
dec
es
inc
push
adcl
je
or
adc
xchg
aad
and
jg
sbb
mov
popa
sbb
es
mov
ret
ret
push
pop
mov
inc
jns
or
repz
shlb
push
fistl
mul
aas
lods
pop
out
stc
or
mov
sbb
addr16
pushf
jge
test
mov
mov
lcall
mov
mov
psrad
add
add
je
pop
fimull
fadds
sbb
in
or
jae
out
cmp
daa
fsubrp
or
dec
loope
add
cmp
push
stc
nop
insl
jbe
out
cmp
and
adc
pusha
jo
mov
mov
lea
sbb
mov
imul
lea
cmp
imul
add
adc
push
stos
cmpsb
mov
sarb
push
mov
pop
lods
xchg
lods
or
adc
cmp
push
outsl
mov
push
jnp
loopne
push
mov
push
or
pop
fsts
mov
leave
adc
sbb
in
or
sbb
mov
gs
cmp
adcl
fdivrl
jne
mov
orl
cmovne
rep
jg
ja
pop
sbb
add
negb
aaa
push
sub
mov
les
aaa
fcmovnbe
adc
ja
fcomps
push
in
sbb
insb
iret
sub
and
shr
adc
jb
into
inc
inc
scas
xor
daa
xlat
dec
in
icebp
dec
aam
aad
cmp
lcall
and
addr16
imul
scas
fidivrs
push
pop
into
pop
int3
mov
mov
adc
pop
adc
dec
cmc
je
callw
fimuls
push
jno
cmpsb
lahf
lods
mov
mov
fs
inc
lahf
jno
push
rorb
and
mov
fidivl
xor
pusha
lret
stos
xor
push
jl
cmpsl
sbb
test
inc
cld
add
fwait
adc
lahf
loopne
push
inc
arpl
mov
pop
xchg
sub
ret
enter
and
cmp
push
loop
arpl
sbb
out
dec
sbbl
mov
stos
and
xchg
xchg
sbb
pop
int3
out
ds
or
das
xor
sub
lret
jp
fs
mov
scas
out
sti
gs
adc
pop
cmp
popa
mov
inc
cwtl
gs
aaa
add
mov
pop
mov
push
push
adc
cld
mov
push
lret
pusha
push
inc
jp
hlt
lods
lods
or
push
and
lahf
pop
inc
shr
or
inc
test
mov
icebp
or
push
nop
dec
or
jmp
xchg
mov
cmp
xchg
and
adc
stos
xchg
or
pop
cmp
cs
push
push
mov
and
cmp
mov
push
mov
mov
or
xchg
sub
dec
outsl
add
push
insb
xchg
lds
lcall
xor
mov
jne
loopne
pushf
mov
das
sub
jno
jns
xor
mov
orb
add
xchg
out
gs
cmp
adc
stos
fcom
ja
pop
jmp
out
xchg
sub
shrb
insb
jmp
mov
pop
sub
dec
push
jne
jo
lea
mov
and
notb
adc
ds
scas
add
push
dec
xchg
fldenv
stc
xor
inc
dec
sahf
ss
iret
imul
ds
sub
dec
dec
loopne
rclb
rcrl
cmp
sahf
lahf
adc
inc
lea
icebp
mov
inc
loopne
fwait
xchg
test
sbb
lock
dec
cmp
test
inc
in
and
test
pop
scas
test
adcb
xor
jae
insl
mov
aam
int3
jae
ljmp
jno
icebp
outsl
pop
mov
add
in
hlt
jo
ret
mov
mov
xchg
or
fs
mov
cmp
sbb
mov
fadds
cmp
sti
fnsave
lcall
sti
push
sbb
add
cmp
iret
bound
movhlps
je
cmp
mov
sub
popa
leave
xor
xrelease
jl
idivl
jne
pop
call
dec
shrb
les
xor
scas
mov
sarb
stos
loop
hlt
dec
call
mov
sarl
adc
sub
pop
adc
jns
mov
pop
push
pop
icebp
inc
sub
sub
ss
sti
dec
lret
xchg
aad
xor
push
popa
push
xor
scas
jl
pop
scas
iret
adc
mov
je
shrl
sub
imull
lea
pop
stc
push
pop
repz
aam
cmp
std
cltd
decl
xchg
pop
cmp
out
enter
and
jmp
jle
jo
fs
add
inc
fcmovne
je
lahf
mull
repnz
inc
add
add
cmpsb
subb
mov
sub
loope
aad
cmc
mov
test
mov
sub
imul
in
jg
mov
add
xchg
leave
mov
loopne
fwait
or
jecxz
call
jmp
loopne
mov
movsb
inc
pop
dec
cmp
xchg
sbb
out
cld
psrld
mov
or
xchg
jp
and
cmp
lret
outsl
adc
inc
mov
push
sub
push
lock
jno
sbb
or
mov
adc
cltd
and
mov
loopne
jbe
std
roll
xchg
add
scas
scas
scas
and
mov
or
xchg
loop
or
dec
inc
jl
movsb
mov
or
sahf
sub
cwtl
xor
jb
ljmp
outsb
mov
mov
push
mov
mov
add
sub
sahf
pop
sbbb
mov
arpl
xlat
repnz
jg
or
aad
popf
ret
sub
sbb
and
add
insb
loopne
ret
lock
fisttpll
hlt
and
mov
mov
movsl
or
mov
sub
cli
cmp
pop
dec
rcrb
call
fld
addr16
stos
sbb
outsb
andl
mov
mov
add
adc
cmp
movups
push
stos
outsb
jns
sbb
shr
clc
cmp
inc
add
xchg
jne
shl
popa
xchg
pop
adc
mov
mov
cmpsb
adc
sbb
cmp
outsl
in
and
cmp
add
jecxz
jo
dec
dec
sbbl
dec
out
movl
mov
loop
mov
jno
idivl
mov
or
push
divl
mov
xchg
inc
pop
popf
subl
sahf
aaa
inc
cltd
lock
and
dec
lret
cmp
pop
jae
in
lods
add
movsb
fcoms
lds
cmp
xor
mov
ds
mov
dec
cs
jle
out
cmpsl
add
cltd
test
xchg
fs
xor
add
pop
aad
fsubs
movsl
lods
sbb
push
popf
jecxz
pushf
cli
int
sahf
jno
divb
push
fmul
fsubrl
dec
filds
lock
mov
sbb
or
sbb
les
inc
inc
pop
cmpb
inc
hlt
inc
sti
sbbb
sbb
inc
and
inc
fs
pop
push
push
jmp
out
in
mov
xchg
pop
mov
js
hlt
test
loop
sbb
dec
push
stos
mov
xor
rolb
add
fs
and
in
in
sub
out
cmpsl
dec
fiadds
cmpb
ret
sbb
mov
scas
call
jecxz
sarb
shrl
addr16
cwtl
cmp
in
jo
jmp
xchg
lods
daa
cmp
roll
dec
jno
mov
lods
xor
hlt
shr
cmpsb
out
pop
cmp
cmp
cltd
sub
or
les
push
mov
sbb
pop
popl
push
sbb
gs
loop
loope
arpl
test
mov
push
rorb
mov
cmpb
fiadds
lcall
pop
clc
and
pop
bound
sub
loope
sbb
aas
lea
stos
fildl
aas
fildll
mov
add
mov
and
or
sbb
loope
scas
scas
xchg
push
sbb
js
xchg
add
test
in
cwtl
addl
xor
and
jo
mov
and
mov
pop
adc
nop
xor
mov
push
fnstsw
pop
dec
fyl2x
orb
push
or
sub
mov
pop
imul
call
xor
mov
add
movsl
cld
pop
rorb
stc
cld
jp
test
stc
pushf
xchg
inc
in
test
jecxz
andb
ds
fsubrs
and
lret
repz
fmull
mov
pop
ds
sbb
jnp
dec
mov
dec
sbb
cmp
out
sbb
inc
adc
sub
mov
mov
sub
int3
adc
hlt
sub
adc
outsl
aam
cltd
nop
in
ret
or
flds
push
jecxz
repnz
pop
push
and
dec
loop
inc
cltd
xor
out
add
mov
decb
inc
rcll
adc
lea
notl
hlt
cmp
xor
dec
mov
pushf
dec
xchg
sub
test
push
cmp
pop
push
ret
js
xchg
mov
imul
loope
popf
call
aad
xchg
out
stos
sbb
fmul
adc
mov
inc
cltd
std
pop
int
imul
movsb
js
cltd
push
nop
and
push
test
into
jbe
das
xor
decb
cli
rol
aam
sbb
dec
fsubs
pop
movsb
mov
cld
stc
insb
or
push
cwtl
sub
cltd
dec
xchg
das
inc
dec
outsb
jp
pusha
pop
arpl
bnd
adc
jo
add
std
xlat
and
mulb
sub
fs
pop
dec
pop
cmp
lcall
adc
mov
sbb
lock
or
sub
xlat
xchg
jb
sub
jecxz
ret
or
imul
pop
int3
arpl
mul
pop
add
sbb
andb
push
addr16
jb
jbe
ljmp
xor
insb
in
outsb
xchg
sbb
pop
scas
pop
xor
shrl
pop
adc
cmp
jnp
pushf
enter
out
cmp
scas
test
into
jne
imul
int3
scas
mov
jecxz
fcomps
mov
add
loopne
insb
and
sahf
push
test
movsl
mov
jp
daa
jns
pop
int
je
int3
and
leave
push
out
aam
dec
mov
divb
and
xor
and
xchg
fninit
cld
mov
cmpsl
dec
xlat
call
push
dec
lahf
daa
fprem1
lds
xchg
dec
jecxz
or
ficoms
outsb
push
ret
or
jp
adc
roll
cmp
pop
enter
push
xchg
daa
cwtl
je
push
pop
in
push
xor
fcoml
and
shll
fidivrl
jp
jle
mov
sbb
lods
dec
cmc
inc
push
fwait
jb
lahf
stos
cs
data16
jnp
cmp
push
test
push
jge
gs
mov
out
mov
pop
fidivl
in
stos
add
fmuls
mov
cmpsl
sub
sahf
movsb
or
jge
daa
stos
dec
mov
repnz
shlb
rol
out
adc
stc
jge
out
xlat
dec
cld
ret
ror
les
test
daa
movsb
xor
add
or
pop
sub
lods
dec
leave
test
inc
fidivs
sub
sbb
imul
xor
gs
or
ja
daa
mov
mov
inc
fdivrs
mov
mov
jg
xor
push
ds
stc
cmp
dec
mov
pop
and
jbe
lea
jb
lret
bound
mov
jmp
jp
leave
fs
in
lcall
fmull
adc
push
insb
mov
adc
mov
pop
lds
jp
xchg
sbb
pop
iret
add
inc
movsb
arpl
pop
in
mov
ffree
push
push
aas
ja
jp
repnz
inc
and
into
iret
test
push
push
in
mov
ret
jmp
flds
sahf
ficoml
and
inc
mov
nopl
test
pop
arpl
sbb
mov
or
and
mov
xor
in
sub
in
push
std
cmp
out
xchg
mov
ret
push
daa
outsl
mov
push
aad
add
ss
and
stos
ds
insl
in
daa
stos
lock
mov
das
dec
mov
sahf
mov
mov
fisubrl
mov
add
and
in
adc
pop
jbe
mov
aas
xor
fs
jge
cmp
jecxz
xlat
adc
mov
xor
xlat
xchg
cld
pop
inc
mov
out
out
push
pop
outsb
sarl
insb
mov
lods
mov
cltd
das
or
dec
mov
lods
int3
push
mov
pop
add
ret
add
add
mov
rcll
mov
or
fidivs
movsb
jae
pop
data16
xchg
xchg
add
mov
xlat
inc
cmc
xor
pusha
rcl
pop
pushf
fs
mov
insl
in
stos
repz
cmp
lret
push
mov
lahf
test
mov
clc
adc
xchg
mov
enter
nop
dec
jecxz
cmp
test
movsb
lret
xchg
scas
inc
push
js
in
sahf
adc
cmp
pop
mov
sbb
inc
sahf
lcall
push
cmc
loopne
repz
insl
jle
dec
lock
push
push
fsubr
jnp
std
scas
aaa
or
cmp
xchg
cli
sbb
addr16
fs
sbb
jnp
arpl
rcl
push
push
xchg
pop
adc
das
adc
push
inc
out
aam
loopne
clc
stos
mov
or
pop
dec
mov
push
subl
jl
mov
sub
inc
xchg
sbb
and
adc
ljmp
int
add
ss
push
insl
inc
inc
inc
fiadds
scas
xor
fcmovnbe
push
pop
adc
sub
cvtps2pi
mov
in
jmp
arpl
out
outsb
mov
xor
xor
shr
mov
jnp
ret
outsl
and
rcll
mov
hlt
movb
mov
or
jl
and
jno
aas
inc
xchg
sbbb
xchg
pop
rcl
xchg
jmp
scas
mov
fwait
sub
mov
pop
cmc
leave
cmp
test
push
fs
test
xor
add
jne
dec
hlt
mov
movsb
sub
push
sub
jae
pop
jo,pt
jecxz
test
arpl
and
jl
imul
stos
mov
out
xor
sub
xchg
push
inc
cmp
out
movsl
cltd
pop
sub
mov
filds
or
das
dec
data16
and
mov
cmp
out
sub
add
push
push
adc
mov
and
lods
xchg
rorl
hlt
lods
dec
dec
push
int3
dec
into
sub
push
nop
inc
fisttpll
outsb
xchg
lret
fwait
lcall
or
inc
lock
cmp
jecxz
cld
rolb
sbb
shrl
in
lcall
jns
stos
ret
rcrb
pop
pop
add
inc
neg
mov
add
ret
jbe
mov
jae
or
sub
js
jne
call
hlt
mov
out
pop
out
fs
imul
push
loope
cmp
adc
lock
nop
pop
jl
sbbl
jmp
outsb
sbb
cmp
fmull
jmp
lods
mov
ja
addr16
inc
popf
push
cmpsl
and
jne
push
rcrl
ss
xchg
or
lahf
push
cmp
jae
cmp
out
cmp
dec
pop
je
cmp
mov
mov
mov
mov
out
add
mov
jae
adc
lock
dec
fimuls
mov
aas
sti
xchg
mov
jne
mov
jmp
push
aam
iret
sti
movzwl
mov
int
cwtl
mov
sahf
and
xchg
daa
ret
mov
ficompl
clc
pop
xor
aas
and
cli
or
test
sbb
add
popl
cltd
cld
push
xorb
xchg
sbb
testl
jbe
push
or
div
rorl
ret
xor
ficomps
sbb
jp
call
lods
inc
outsl
jge
or
sub
jmp
mov
adc
insb
mov
iret
fwait
inc
data16
pop
repnz
ficompl
shll
imul
push
mov
loopne
test
ret
js
or
dec
xchg
cmp
call
loop
and
xchg
fldt
bnd
xchg
imul
iret
lock
addr16
scas
in
out
mov
push
stos
es
lods
insb
fists
lock
dec
push
add
repnz
and
mov
lods
jbe
mov
ficoms
das
mov
xor
jle
pop
sbb
push
mov
add
xchg
pop
xchg
in
and
cmp
push
jmp
sub
popf
shll
enter
sbb
adcb
pop
adc
fwait
sbb
sub
jg
mov
movsl
mov
and
shrl
jmp
pop
cwtl
mov
xor
mov
ljmp
imul
xlat
outsb
mov
pop
lock
pop
shrl
and
repz
int
cmp
int
adc
cmpsl
fdivl
je
sub
sti
xchg
cwtl
pusha
mov
mov
out
cmpsb
shlb
xor
in
pusha
clc
mov
fnstcw
or
jge
inc
push
adcl
loopne
scas
aam
mov
dec
sub
je
cmc
clc
adc
sti
xchg
testb
pushf
outsl
testl
pop
xchg
pop
mov
jecxz
jl
pushf
lods
dec
loopne
or
adc
in
dec
add
xor
outsl
mov
jbe
movsb
xchg
inc
lods
dec
sub
cli
or
pop
sub
outsb
pop
andb
dec
pushf
pop
and
sbb
fistpll
imul
icebp
clc
and
jp
stc
inc
jg
andb
mov
je
stos
out
fldl
cld
push
inc
sahf
rorb
sbb
aas
sub
cmp
movsb
out
push
jnp
push
aas
pop
push
jno
std
xchg
test
ds
sbb
inc
sahf
cmpsl
ret
add
ja
or
test
int3
push
add
push
mov
jae
sbb
mov
xor
mov
pop
repz
or
pushf
mov
push
loopne
fs
andb
adc
fiaddl
leave
pop
loope
pop
cmpsb
hlt
std
pop
stc
je
outsb
jl
push
test
add
mov
pop
stos
adc
in
mov
repnz
addr16
xchg
fistpll
jmp
repz
rclb
mov
mov
dec
rcll
popf
not
pusha
iret
sbb
jns
call
sbb
movsl
mov
and
add
in
in
jle
outsb
ror
popa
ret
lret
inc
mov
aas
lods
adc
cmpsb
add
jle
out
ja
movsb
ret
inc
inc
mov
in
test
xchg
jg
add
fidivl
jle
adc
or
inc
inc
sbb
xor
imul
out
mov
push
lods
push
aas
push
adc
shlb
lret
imul
jnp
lahf
mov
pop
mov
mov
sbb
pop
popl
push
stos
nop
mov
jb
repnz
stc
add
cmp
call
insb
mov
or
mov
sbb
and
sti
sub
imul
bound
rcl
mov
pop
mov
addr16
add
mov
pop
cmpsl
xchg
push
rcrb
js
inc
ds
data16
lds
fdivl
adcb
jmp
inc
in
inc
scas
in
xsha256
cmpsb
xchg
inc
jnp
ljmp
push
and
in
mov
aam
daa
dec
dec
adc
cmp
ret
sbb
mov
icebp
adc
and
bound
test
or
aam
lods
mov
shl
jns
push
aas
dec
cmpl
push
push
lcall
add
mov
nop
std
push
mov
cmp
pusha
xor
stos
cmp
pop
mov
out
xor
pop
call
sbb
cmp
push
fidivrs
adc
xor
js
int3
arpl
test
lret
fs
sbb
mov
aas
and
lds
push
or
mov
mov
es
or
ds
mov
inc
cmp
jecxz
push
cmp
adc
ja
loop
xor
test
dec
cmc
les
push
stos
shl
dec
call
mov
cwtl
repz
dec
frstor
pop
cmc
testb
and
fadd
mov
sbb
and
xor
shlb
test
xor
dec
mov
addb
mov
push
mov
jp
leave
stos
int
arpl
inc
es
push
mov
mov
push
push
and
imul
cmp
fsub
mov
mov
pop
sub
je
push
pop
nop
inc
pop
stos
das
fucomip
pusha
lret
lds
jb
pop
mov
adc
jge
xchg
add
adcl
andl
or
pop
and
imul
shl
xchg
shlb
mov
xchg
xchg
repnz
dec
and
inc
pop
fdivr
rorb
stos
push
cs
fimull
mov
je
dec
bound
sbb
push
xchg
and
shrb
test
pop
pop
cmp
cmpb
mov
xor
lahf
pop
dec
and
fs
xor
fldt
call
pop
cli
pop
cltd
xchg
dec
or
jle
lock
inc
test
mov
mov
lret
adc
ret
xor
xchg
imul
scas
jns
in
stos
jb
psubsb
add
ror
lret
jg
outsb
push
mov
fwait
jbe
or
lcall
gs
inc
dec
pop
ja
mov
pop
cmp
pop
outsb
and
out
sbb
sbb
test
rorb
addr16
stos
dec
mov
lods
cmpsb
pop
movsl
rcr
xor
jl
aad
mov
xor
inc
loop
fcoms
stc
or
call
xor
movsb
mov
nop
pushf
or
xchg
addr16
js
test
repz
adc
push
aad
push
fnstsw
cltd
pop
cmp
sub
adc
adc
fildl
add
mov
sbb
push
les
mov
gs
fdivl
cmp
jmp
inc
faddl
mov
jp
ret
dec
pop
xor
xlat
pop
arpl
stos
jb
pop
rol
add
addr16
lods
pop
cs
cmp
mov
sub
push
sub
dec
mov
mov
fstl
rorl
mov
sub
jg
iret
daa
mov
ds
ljmp
shrb
mov
or
xor
add
mov
scas
xorl
add
push
sbb
sub
jecxz
pusha
test
fnstenv
test
pusha
mov
mov
out
sub
jecxz
incl
fistl
adc
rorl
rolb
dec
pop
and
mov
sbb
jb
or
adc
mov
popa
mov
pop
sub
das
inc
adc
je
mov
jge
push
add
aaa
pop
aas
sahf
cmp
int
jmp
mov
in
andb
cmp
pop
icebp
rcrl
fsubs
out
lret
or
hlt
xor
inc
ja
fstps
xorl
push
cwtl
xor
arpl
imul
push
add
adc
ret
sahf
ja
adc
movsb
sub
cmp
xchg
cmp
push
cwtl
and
xchg
movsb
cmpsl
dec
psllq
inc
insb
cmp
stos
push
adc
mov
insb
xor
push
sbb
push
movsb
push
scas
add
sarl
xor
add
mov
bound
scas
mov
jle
jp
adc
aaa
push
adc
outsb
dec
mov
ret
xchg
push
ljmp
fdivs
or
out
cmp
sbb
xchg
ss
sbb
push
repz
jno
insl
adc
push
aad
movsb
push
in
aad
pop
inc
test
dec
push
out
mov
ror
pop
dec
lret
mov
sti
ds
iret
cmp
mov
popf
mov
test
insb
fisttpll
or
lea
fwait
sbb
add
inc
jnp
test
gs
adc
popa
je
push
pop
jp
daa
mov
and
dec
cwtl
pop
cmp
push
test
out
adc
and
jns
call
push
inc
xchg
mov
jno
daa
sub
roll
movsb
repz
lcall
scas
les
daa
data16
adc
mov
add
in
test
push
add
xlat
sti
sbb
cltd
insl
jge
aas
inc
sbb
ret
lcall
ja
mov
push
out
shll
inc
and
repz
or
xchg
faddp
aam
fwait
and
or
out
cmp
pusha
push
enter
fwait
xor
jmp
cmpsb
sbb
mov
notl
adc
sahf
inc
cmp
cmp
sub
mov
mov
adc
jecxz
xor
stos
ljmp
fstp
pop
add
sbb
cs
int3
testb
dec
inc
push
out
lods
popf
mov
pop
adc
inc
or
call
cmpsl
and
xchg
cmp
and
inc
xchg
cmp
and
mov
xchg
lret
jnp
test
adc
mov
shl
mov
cmpsb
xor
and
jo
sub
ss
xchg
mov
pushf
je
adc
cmp
mov
test
cmp
xor
lret
push
and
std
shll
and
or
xchg
sub
mov
dec
mov
call
sub
inc
ja
cmp
clc
inc
nop
aam
je
or
pop
jl
mov
fdivp
dec
ret
mov
dec
push
repz
pop
adc
sub
sub
pop
repz
push
mov
and
iret
dec
cmp
xchg
push
sbb
push
add
pop
frstor
pop
mov
cmc
fsubrp
cs
dec
enter
inc
xchg
xchg
das
enter
sub
daa
out
pop
sub
mov
fidivl
sub
mov
in
les
sbb
test
or
dec
aaa
adc
dec
push
rolb
inc
aad
and
mov
jecxz
add
lcall
mov
xchg
sub
das
movb
test
sub
or
fisttps
sar
aad
and
mov
fbstp
push
jg
ret
stos
sub
push
movsl
and
mov
inc
xor
jmp
or
sarb
popa
loopne
sbb
mov
sbb
jle
cmc
mov
in
dec
cli
fs
arpl
stos
addl
jp
hlt
sub
sub
pop
add
into
inc
gs
adc
pop
fcom
les
lds
aaa
push
roll
aaa
push
jnp
outsb
addr16
add
cld
xchg
stos
and
and
test
mov
add
outsl
xor
adc
loope
pusha
push
jmp
les
cli
mov
sti
cmpsl
mov
push
andl
in
daa
and
mov
rcr
push
mov
jb
rolb
scas
vorps
lock
popa
add
xchg
and
xor
or
pop
mov
pop
lock
push
dec
in
push
xchg
mov
sarl
iret
pusha
xor
sub
pop
mov
inc
jbe
test
fldenv
mov
lods
data16
and
loopne
out
rolb
out
dec
dec
or
push
aaa
movsb
ds
push
out
aam
imul
dec
mov
inc
outsl
adc
sbb
xor
sub
push
jbe
lahf
fnsave
jg
ret
out
sti
rcrb
aas
imul
lock
push
divb
iret
jo
int
gs
push
xchg
nop
pop
pop
lahf
xor
enter
sub
sub
aam
push
and
out
fiadds
or
add
popf
lods
jle
cmp
sahf
inc
xor
fstps
dec
mov
push
iret
mov
pop
stos
cmp
push
rcr
sub
jl
shl
inc
sbb
lea
and
jnp
mov
out
jecxz
int3
fs
cmp
xchg
pop
adc
sti
push
mov
inc
fstpl
mov
xor
push
cmp
fisttpl
mov
fldl
mov
int3
and
push
xchg
data16
adc
cmc
je
pop
add
xchg
outsb
aaa
daa
mov
xchg
mov
jmp
loope
push
mov
mov
mov
pop
pop
adc
mov
js
repz
cwtl
out
sahf
mov
xchg
call
mulb
push
mov
fmull
mov
loopne
add
cmc
loope
add
fdivs
data16
adc
jne
jle
pushf
cmpsl
test
sbb
call
mov
adc
sub
lock
out
inc
cwtl
std
sub
dec
push
dec
cmp
cmp
mov
jecxz,pn
jns
gs
rclb
cwtl
pop
hlt
fs
jl
lret
dec
leave
push
test
push
and
dec
sbb
test
lahf
les
out
push
cmc
pop
frstor
sbb
fisubrs
dec
mov
loope
or
push
xchg
nop
daa
les
xchg
scas
inc
pop
mov
dec
hlt
xor
fmuls
cmc
mov
mov
cmpsb
in
mov
push
push
cmpsb
add
lea
push
adc
cmp
add
adc
das
aam
aad
xchg
xor
mov
fbstp
xchg
push
hlt
push
fcmovnb
loopne
jae
xchg
scas
xchg
sub
aas
inc
xchg
aam
lcall
sarl
xor
int
push
pop
scas
ret
jnp
out
adc
repz
mov
in
xorl
clc
mov
movsl
clc
inc
std
dec
pop
mov
imul
adc
push
mov
xchg
testl
add
gs
outsl
push
movb
andl
mov
mov
inc
in
dec
loope
dec
sbb
mov
loopne
nop
xchg
mov
hlt
mov
xchg
push
jge
lods
or
sub
cmpsl
xor
and
mov
notb
aam
arpl
pop
test
dec
repz
and
jnp
sub
aas
insb
test
pop
push
dec
loopne
andb
inc
inc
xchg
fwait
std
arpl
or
outsl
daa
ret
cld
repz
imul
and
inc
cld
xchg
js
jne
jb
mov
arpl
shr
xchg
mov
leave
mov
xor
dec
into
pop
pop
cli
iret
push
shrl
nop
add
icebp
pop
out
mov
jbe
dec
ds
dec
ret
pop
push
add
clc
cmp
andl
xlat
outsl
rcrl
cmc
mov
xor
cmp
adcl
push
mov
sbb
xchg
pop
sub
lock
lret
pusha
pop
popa
dec
andb
es
daa
inc
sbb
mov
cmp
shl
jge
xchg
xor
or
xchg
scas
inc
daa
mov
or
pop
xchg
mov
xchg
inc
cs
test
aad
mov
pop
cmc
movsl
or
std
cmpb
ja
mov
sbbl
add
lds
adc
push
cmp
jmp
sub
jbe
je
insl
out
cld
ret
push
push
into
rcll
adc
repnz
frstor
in
xchg
jecxz,pt
mov
mov
push
push
pushf
mov
dec
shll
inc
push
mov
iret
les
fisubs
mov
mov
dec
and
mov
stos
test
jl
adc
clc
push
xor
mov
fistl
cmpsb
daa
out
sbb
aad
mov
mov
dec
ja
fs
aas
cwtl
shlb
pusha
sbb
or
push
outsl
je
xchg
sti
or
adc
cmp
stos
cmp
inc
nop
pushf
rcr
mov
mov
jecxz
add
xchg
int3
lret
pop
jb
stos
push
insl
pusha
adc
rcr
insb
cmp
repnz
dec
xchg
popa
cmp
rcr
ja
xchg
mov
paddusw
and
dec
pop
std
ds
jl
jle
ss
add
dec
push
or
lock
adcl
or
xchg
xor
xor
mov
test
adc
repnz
shlb
addr16
cltd
sub
sub
or
ret
repnz
fstl
or
jbe
outsb
jle
xchg
pop
negb
mov
mov
call
int
idivl
into
push
iret
jle
lds
lods
push
hlt
or
insb
push
adc
outsb
ja
push
pop
cmc
inc
sbbb
repnz
pop
and
sbb
jnp
mov
xor
and
cwtl
push
jo
push
es
pop
mov
inc
push
aas
jae
inc
mov
add
lds
pop
iret
imul
ss
shrl
add
xor
pop
nop
jmp
mov
dec
sbb
std
fwait
insb
test
jns
mov
xchg
hlt
cli
mov
aaa
call
addr16
imul
add
jmp
mov
cmp
xor
cmc
fs
pop
rcll
push
lret
ja
adc
clc
jecxz
mov
adc
push
pop
test
push
mov
mov
sbbb
xchg
inc
jmp
pop
xchg
mov
das
push
das
push
xor
mov
sbb
inc
sti
push
cld
shll
xor
pop
hlt
lods
stos
and
dec
orb
adc
cmp
imul
in
test
fwait
cmp
or
jae
jae
cltd
insb
pushf
pause
mov
incl
hlt
shll
and
mov
enter
aaa
stc
xchg
std
cmp
shlb
mov
lahf
fstp
shll
and
int
xor
push
loop
adcb
cmpsb
std
sbb
repnz
xchg
outsb
std
inc
icebp
lods
stc
xchg
ds
xchg
fcomps
stc
out
cmpsb
pop
addr16
sahf
and
lods
mov
pop
pushf
dec
mov
out
xchg
mov
mov
or
mov
dec
dec
scas
ds
jno
ds
lahf
pop
insl
rcrl
mov
jns
cmp
pop
pop
repnz
in
fs
xchg
orw
mov
ds
cmp
stos
inc
and
popf
cs
int
or
test
mov
push
lds
and
push
or
dec
jbe
dec
jbe
adc
inc
stos
std
xchg
out
cli
dec
mov
out
pop
pop
scas
mov
or
ret
sub
xor
push
fdivrl
mov
call
or
test
adc
dec
push
int3
mov
jnp
int3
arpl
aam
lcall
out
pop
sbb
mov
mov
loop
lods
jo
cmp
push
push
sbb
shll
mov
leave
pop
xor
mov
aam
test
int
cmp
dec
lods
fwait
test
xchg
arpl
nop
cmpb
dec
push
outsl
mov
sahf
push
incl
or
sub
inc
aad
sbb
jnp
push
mul
mov
sub
mov
mov
aam
mov
andb
push
dec
ds
push
ss
and
add
test
lea
cmpsb
lock
iret
mov
or
shl
pop
dec
cmpsb
cmp
jge
jp
enter
cs
push
lret
into
and
ret
aas
into
gs
and
mov
ret
xor
push
out
je
mov
daa
in
pop
fnstenv
into
sub
ljmp
outsw
ja
fsubrl
lods
inc
cld
xchg
sub
int3
movsb
inc
out
imul
aaa
mov
sbb
mov
sbb
les
negb
in
lret
mov
sqrtps
sbb
dec
mov
loopne
mov
lock
sahf
stos
in
test
loope
adcb
lds
or
sbb
daa
mov
cwtl
fstp
test
xor
sub
test
push
sub
mov
mov
xor
jo
and
mov
inc
mov
mov
cmp
mov
das
dec
pop
pop
mov
js
imul
int3
mov
rorl
mov
cmp
arpl
xor
pop
pop
stos
push
insb
sahf
sub
lock
in
inc
repnz
lock
out
add
aaa
mov
out
shl
mov
ss
nop
lds
cmp
subl
ret
and
inc
call
dec
push
xchg
mov
mov
adc
je
shl
mov
in
std
addb
mov
in
mov
xor
sbb
push
outsb
je
pop
in
sti
pop
inc
pop
pop
and
into
xor
dec
sub
aas
repnz
lock
psrlw
jno
mov
shll
dec
icebp
adc
mov
fsubs
aad
inc
test
mov
mov
lret
popa
mov
dec
fdivrl
cmc
mov
add
sbb
stc
or
cs
lret
call
sbb
pop
push
xchg
mov
jae
cs
pop
mov
add
es
dec
imul
inc
and
cmpsb
and
or
out
movsl
das
sub
enter
bnd
dec
hlt
jbe
dec
pop
ficompl
out
lock
inc
fdivs
push
stos
scas
out
xchg
dec
shll
in
aaa
cmp
xchg
lret
or
cmp
push
movsl
adc
mov
fnsave
sti
mov
dec
repnz
jbe
mov
and
sahf
pusha
mov
xor
aas
add
xchg
adc
es
pop
pop
xor
and
aaa
pop
push
sub
jmp
lret
cld
repz
and
jns
pop
stos
lea
jnp
sbb
mov
and
and
jns
add
add
or
mov
jmp
xchg
std
mov
in
push
ds
in
les
inc
push
das
lcall
fmull
sub
int
mov
loopne
call
mov
ficomps
mov
subb
pop
dec
mov
pushf
lea
sbb
mov
mov
icebp
std
xchg
pop
pop
dec
adc
inc
push
xor
jnp
mov
outsb
xchg
pop
mov
sbb
push
cmp
addl
xchg
xor
les
outsb
in
mov
inc
jo
sti
xchg
push
push
cld
dec
ds
or
xor
sub
sbb
jge
lods
mov
jp
fmul
jb
icebp
mov
add
push
cs
ret
adc
jns
std
cmpl
movsb
dec
inc
pop
pushl
test
fdivs
sarl
fnstsw
and
cmp
bound
nop
loopne
repnz
out
cmc
sbb
xor
mov
inc
xchg
addb
pop
cmp
pop
dec
lds
jnp
cmp
scas
rcrl
dec
int3
cmp
fcomip
xchg
dec
out
xchg
jmp
stos
hlt
xchg
fdiv
sbb
push
lret
rdpmc
xor
push
cwtl
orl
test
jge
sub
or
js
push
ret
mov
jecxz
mov
mov
fcoms
add
scas
and
ret
jbe
cmpsb
mov
setle
lock
push
callw
test
cmpsl
mov
testl
int3
and
cwtl
pop
stos
inc
pop
xchg
pop
rcll
in
lahf
cmp
imul
popf
in
mov
dec
movsl
clc
lds
inc
or
fmuls
add
gs
call
jle
lret
jo
insb
imul
movsl
dec
outsb
imulb
add
inc
add
jbe
jmp
mov
push
mov
jecxz
pop
out
cmp
or
mov
or
ja
adc
fwait
push
mov
pop
popa
outsb
inc
sbb
stc
dec
adc
xor
add
int
fisubl
idiv
rorb
rcrl
and
push
je
sbb
std
pop
in
mov
aam
icebp
nop
cmp
pushf
loop
fists
out
dec
or
mov
sahf
sbb
jl
aaa
add
push
push
adc
jb
and
js
jne
cmp
jne
cs
pop
xchg
push
sub
mov
aad
mov
mov
loopne
sbb
scas
inc
fdiv
cmp
imul
add
ret
sbb
ds
sub
popf
xor
jl
sub
mov
out
out
shrb
in
inc
inc
xchg
cmp
lcall
pusha
fwait
or
mov
mov
rcrl
sbb
xchg
push
gs
fiaddl
pusha
jp
push
and
fiadds
mov
adc
repz
lock
push
and
ret
mov
insl
in
xchg
mov
test
mov
fildll
leave
insl
sub
popa
xchg
mov
ja
pop
imul
mov
mov
cwtl
mov
fwait
and
int3
test
repz
push
sbb
lahf
daa
jo
adcb
mov
sahf
gs
mov
dec
mov
jae
mov
popf
jmp
mov
jl
fdivs
and
fdivl
pop
mov
std
and
out
ret
xchg
leave
int
push
mov
lds
addr16
enter
pop
fadd
dec
out
lret
arpl
jle
in
mov
add
adc
leave
sarb
sbb
cld
stos
loop
sbbl
cli
enter
lcall
pop
inc
cli
dec
inc
sbb
fwait
dec
sti
stc
inc
mov
mov
push
sub
jmp
xchg
cmp
xor
dec
jecxz
add
fstps
and
push
xor
push
cmc
mov
popa
fcompl
cmp
adc
andb
fcoms
std
add
aad
jb
gs
cwtl
jl
cli
push
lahf
fs
je
adc
fwait
cmpsl
orb
roll
sub
repnz
gs
lret
in
inc
jae
xor
movsl
sbb
xchg
cmp
loop
decb
lods
cmc
lock
loop
lahf
aas
aad
sbb
fildl
jmp
xchg
adc
js
rorl
sbb
jb
jg
aam
sub
pushf
jle
lds
decb
out
push
rorb
sbb
test
pushf
sub
sub
or
jmp
lahf
fsubs
add
sub
out
add
xor
mov
ljmp
insb
cmp
xchg
pop
out
pushf
cmp
loopne
cmp
addr16
dec
hlt
in
in
push
jmp
xor
inc
out
cld
cmp
xchg
aam
incl
and
inc
sbb
mov
xor
sbb
sahf
adc
das
or
mov
cmp
adc
pop
fs
loope
enter
into
leave
mov
loop
outsl
rorb
leave
pusha
add
out
add
fbstp
je
push
addb
in
loope
mov
pushf
cld
outsl
fiaddl
fildl
sub
push
mov
add
ss
scas
lcall
je
in
mov
aam
test
inc
and
adcb
lods
sub
push
aad
xlat
outsl
ss
insb
loop
cwtl
das
mov
sbb
insb
addr16
mov
xchg
and
int3
js
push
out
cmp
or
fimull
push
cmpl
test
xor
rorl
inc
fldenv
gs
mov
lds
sbb
js
das
mov
les
fstps
into
addb
or
pop
shll
rcl
cmc
lret
imulb
push
mov
pusha
xor
shrb
dec
jno
int3
and
xchg
sub
lcall
dec
sub
mov
imul
pop
lret
aad
inc
ss
xor
mov
dec
scas
push
adc
jge
sti
jle
or
jge
jmp
xor
loope
fwait
arpl
add
flds
pop
add
mov
push
sbb
test
sbb
shlb
lock
jns
cwtl
loop
lcall
push
xor
int
jb
lret
and
inc
xchg
rcl
orl
sbb
add
adc
cmc
xor
pop
orb
cld
mov
jmp
dec
aam
mov
jo
pop
dec
jnp
cmp
push
fisubl
ret
jge
sub
mov
insl
add
pop
rcr
add
mov
mov
imul
out
mov
pop
xor
mov
int3
and
test
adc
push
test
int3
mov
out
mov
or
xchg
pop
rcll
in
cmp
fdivrl
pop
hlt
int3
arpl
mov
ss
pop
test
mov
xchg
inc
insb
into
fsts
push
in
add
mov
adc
add
mov
cmc
pop
and
ja
bound
nopl
xor
adc
aas
hlt
pop
addl
dec
popf
mov
dec
push
out
movsb
ja
xlat
dec
clc
xchg
sub
jns
iret
mov
pop
sahf
fstps
jecxz
xor
dec
nop
je
mov
sbb
rcr
pop
fsts
pop
mov
imulb
mov
out
dec
in
and
sub
aam
das
inc
push
jne
lds
lret
mov
fnstcw
mov
push
imul
adc
sbb
in
adc
ret
incl
rcrb
test
mov
cmc
xchg
mov
fdivrs
movzbl
dec
mov
pop
shll
lea
repnz
push
roll
sbb
jno
add
add
lods
or
pusha
cld
adc
popa
jo
cli
sub
pop
adc
or
cmp
insl
lret
call
adc
shll
fldenv
xor
outsl
mov
icebp
and
daa
sarl
push
mov
dec
pop
push
ret
xor
jbe
dec
push
aad
out
ss
repz
ficoms
lock
jle
inc
cmp
test
lea
cmp
es
in
xchg
add
in
ret
sti
jb
mov
dec
push
out
push
sub
inc
pop
out
jne
hlt
inc
xchg
xchg
jbe
jb
andb
test
mov
das
mov
das
and
lds
jle
mov
mov
push
push
rcrl
mov
mov
out
rclb
sub
jb
xchg
mov
adc
rolb
inc
cmp
mov
jae
or
sub
mov
sti
iret
testl
push
add
jo
andl
sub
xchg
ds
sarb
fsubrl
pop
or
push
adc
lret
test
or
call
fsts
sub
iret
mov
push
jae
enter
jp
xorl
into
push
push
insb
inc
popf
std
push
movsl
mov
fldenv
test
mov
or
jb
in
add
mov
push
inc
in
arpl
push
and
popa
sub
lods
jbe
rcrb
cmp
sub
divl
daa
xlat
fistps
orl
outsb
xchg
pop
mov
xchg
shrl
xchg
mov
loop
add
mov
call
or
ret
push
sub
cmpsb
lahf
sbb
inc
sbb
jbe
scas
xor
xchg
mov
jbe
loop
je
ljmp
pop
adc
or
lret
loop
scas
cmp
add
cmp
movsb
xor
push
rcrl
shll
aam
sub
and
sub
push
rcrb
add
pushl
jno
test
ret
mov
push
jbe
push
test
push
outsb
stos
xlat
insl
add
fstl
mov
lahf
cwtl
outsb
add
mov
sub
jnp
cmp
mov
jmp
inc
es
push
out
cmp
rcll
gs
cmpb
and
push
adc
inc
cli
or
xor
push
call
stc
jne
mov
jo
pop
pop
outsb
es
mov
fchs
rcrb
imul
jle
jp
clc
mov
cwtl
pop
cmp
or
pop
das
mov
loop
addl
fimull
outsb
clc
int
popa
sbb
das
aad
adc
ds
insl
mov
sbb
add
add
mulb
jo
xor
lret
cltd
repnz
and
bound
dec
jl
push
bnd
mov
mov
iret
addr16
mov
scas
mov
pop
imul
or
push
mov
and
sarl
sub
mov
fadd
cmpsb
call
call
inc
jmp
jmp
sub
sub
aas
hlt
mov
mov
neg
aaa
jne
ret
repnz
imul
mov
test
movsb
dec
xlat
ficoms
test
push
sbb
dec
sbb
dec
ss
cmp
pushf
cmp
scas
das
adc
pop
mov
pop
mov
bound
insl
scas
jb
fdivs
sbb
or
test
inc
add
je
cltd
test
cli
outsb
jmp
jecxz
js
sbb
js
lock
jo
test
sbb
and
jmp
push
inc
scas
pop
shlb
neg
ret
mov
pop
sub
xlat
cmp
mulb
jbe
lds
mov
sub
lods
pop
xor
ret
adcl
movsl
push
mov
xchg
pusha
and
mov
mov
dec
pop
push
adc
push
mov
sbb
fcmovne
fbstp
call
push
xchg
inc
lods
dec
jbe
inc
arpl
fcmovnb
or
sti
xchg
or
mov
or
sbb
outsl
adc
push
mov
fisttpll
xor
add
test
adc
push
std
ret
popf
sbb
xchg
jl,pn
jge
cmp
shlb
repnz
xor
xlat
loopne
pop
les
add
mov
popa
mov
add
daa
inc
lea
mov
mov
sub
test
or
inc
jno
jne
xchg
sbb
aad
movsb
icebp
inc
aad
icebp
sub
test
adc
jl
xor
push
in
inc
in
es
addl
jb
lcall
push
sub
stos
mov
fisubl
mov
lds
push
daa
fisubrs
push
or
push
and
sbb
outsl
xor
icebp
jo
mov
push
jno
adc
jbe
cwtl
cmpsl
or
mov
cmpsl
cmp
mov
pop
out
int
mov
pop
mov
xchg
pop
clc
subl
fisubrl
test
fisttpll
mov
and
adc
sti
and
or
test
movsb
les
jne
lods
xor
xchg
mov
orb
or
fs
fimull
mov
clc
imul
jge
add
orb
insb
mov
add
in
and
pop
jo
mov
inc
sbb
stos
xor
loop
repz
mov
inc
cmp
insb
stos
stc
inc
pusha
test
push
add
out
xchg
and
lock
clc
mov
xor
popf
inc
or
shrl
gs
popf
lcall
test
rcrl
test
cli
adc
ret
xchg
push
inc
adc
iret
push
mov
pcmpgtb
mov
push
adc
incl
xor
lcall
aaa
shrl
test
test
inc
xchg
mov
inc
in
test
push
test
jl
iret
arpl
pop
mov
push
aam
pop
mov
outsl
stc
jnp
pushf
sbbb
jecxz
in
add
pusha
cmc
or
test
inc
sbb
insl
dec
fs
xchg
jge
int3
mov
lret
bound
cwtl
sub
pmaddwd
insl
xchg
outsl
pop
test
iret
repnz
add
lret
mov
mov
pop
and
pop
lods
push
pop
sub
fwait
xor
insl
jle
dec
adc
sbb
sub
inc
add
sbb
or
jge
xchg
js
pop
subl
cltd
dec
in
jae
xchg
sub
sbb
ret
or
or
jge
xchg
scas
cmpsl
push
loopne
ja
push
fs
jg
cmp
ja
mov
pop
int
jmp
iret
pop
ss
push
je
dec
std
xchg
push
xchg
sub
std
gs
out
cmp
inc
into
sbb
jne
aaa
into
mov
out
outsl
push
mov
mov
pushf
pop
mov
int3
inc
movsb
ds
jno
leave
cld
mov
pop
cmp
mov
jg
sarb
test
mov
xor
lods
and
out
push
out
adc
mov
enter
lods
cmp
and
repnz
mov
jg
cmp
mov
pusha
pop
mov
and
into
gs
push
movsl
sahf
cltd
mov
mov
daa
adc
inc
punpckhbw
jno
jmp
push
add
daa
ljmp
add
jge
cmp
insb
in
loopne
into
pop
sahf
push
subb
mov
stos
sub
outsl
push
adc
das
out
jno
push
mov
jae
xor
push
out
lock
sti
cmp
popf
jno
push
xor
into
int
sahf
xor
lret
or
xchg
pop
loope
or
cmp
cpuid
les
pushf
dec
shrl
lds
fnstcw
jecxz
add
das
add
addl
jne
cmpsb
sub
lret
push
mov
fidivrs
dec
push
jae
shll
loop
jae
inc
sub
pop
imul
sbb
adc
aaa
pop
cmc
add
mov
js
loope
xorb
and
xchg
out
cmpsl
pop
addr16
adc
mov
mov
loop,pt
push
cmpsl
cmp
xor
sbb
dec
nop
repz
ret
shll
dec
xchg
les
mov
loop
mov
add
xor
fisubrl
push
test
inc
mov
or
outsb
cmp
jb
push
sti
jb
xchg
and
inc
and
es
mov
mov
inc
mov
cli
test
dec
scas
jecxz
fcomip
fadds
fistps
ret
nop
lcall
pop
mov
insl
xchg
movsl
idivb
popa
nop
test
push
xor
cwtl
rcll
mov
fwait
cmp
mov
scas
xchg
xor
cmp
cmp
shl
jns
sub
inc
sarl
jns
cmpsb
jns
rolb
mov
test
xchg
cmpsl
cmpsb
das
cmp
cltd
add
add
insb
sub
in
arpl
js
popa
pop
mov
imul
cmc
test
ja
sbb
sbbl
stos
dec
sahf
mov
mov
inc
cmp
push
add
cmp
cltd
and
in
notl
mov
leave
insl
jge
and
int
andb
mov
and
xchg
pop
xchg
jle
lds
add
out
pop
cmpsl
adc
dec
cmpsl
push
in
or
data16
cmp
cli
xchg
in
xchg
xlat
pop
ret
dec
sbb
jle
in
adc
in
sahf
fwait
andl
and
nop
pop
push
jg
rcr
repnz
std
inc
pop
adc
adc
inc
sbb
dec
lcall
lods
jg
aad
inc
xchg
mov
shrb
mov
push
sarb
jne
mov
std
es
ficomps
sbb
and
jp
ret
inc
subps
jo
pop
mov
in
ljmp
or
out
pushf
lods
dec
leave
lds
dec
iret
pushf
cmp
mov
xchg
inc
stos
adc
cld
ret
xor
gs
xchg
cltd
mov
adc
outsl
or
adc
adc
hlt
daa
cwtl
addr16
cmp
lods
movb
jg
bound
mov
adc
push
lahf
loopne
push
and
mov
mov
pop
movsb
imul
jno
jp
fcomip
or
ja
dec
dec
pop
loop
xchg
fwait
enter
pushf
cwtl
push
pop
xchg
shll
inc
lahf
mov
xchg
gs
push
adc
push
andl
push
mov
add
add
sbb
push
out
xchg
out
mov
sub
add
push
and
cmpsb
pop
lret
sub
shl
loope
adc
aad
xor
adc
pushf
mov
leave
inc
dec
and
std
std
sti
xor
test
cmp
out
sahf
mov
ret
jmp
cmp
sbb
jb
iret
stos
or
sahf
scas
clc
dec
jne
cmpsl
and
iret
push
hlt
mov
mov
and
xchg
push
test
lret
push
out
push
outsl
outsb
jle
cmp
ret
sub
andb
xchg
shlb
push
leave
mov
mov
fstl
jg
cmpsl
repnz
sub
hlt
cmp
xlat
into
dec
pop
pop
fdivr
sub
push
pop
out
dec
add
sub
jl
adc
imul
xor
jne
daa
push
sbb
xor
dec
lahf
mov
cld
pop
jp
jle
xchg
sub
add
loop
lcall
pop
xchg
int
and
inc
lods
jmp
in
test
iret
test
inc
inc
scas
les
das
add
mov
pushf
fdivrl
xchg
mov
or
shlb
imul
inc
out
mov
movsb
pusha
mov
xor
mov
cmp
add
add
or
cmp
dec
pop
xchg
pop
stc
inc
pop
cli
pop
push
clc
push
xor
pop
vpaddq
add
jmp
add
shr
repnz
fistl
test
imul
not
inc
fcoml
in
incb
jne
mov
add
jbe
int
adc
sub
movsl
and
fidivrl
ljmp
stos
mov
in
popf
icebp
outsl
add
sub
cld
stos
push
mov
adc
movsl
lcall
mov
lahf
outsb
pop
xchg
sub
inc
pop
dec
jmp
loop
shrb
jmp
stos
stos
mov
pop
icebp
inc
xor
xchg
popaw
imul
cmc
lea
cltd
push
xor
sbb
das
jmp
enter
out
or
xchg
sub
inc
xchg
sarl
call
movsl
fs
leave
push
push
repz
shrl
decl
add
movsb
sbb
inc
inc
adc
nop
inc
ss
rol
test
cmc
outsl
dec
pusha
cltd
push
notb
mov
mov
cmpsb
sub
scas
dec
mov
mov
and
push
mov
push
sub
leave
in
jmp
lock
test
mov
ja
xor
loop
xchg
fcomp
addr16
pop
loopne
pop
daa
out
lahf
imul
fsubrs
mov
xchg
movsb
or
cmc
lds
mov
xchg
sbbl
inc
fnstsw
stc
mov
mov
test
push
dec
movnti
jge
cmp
push
mov
inc
mov
in
pcmpgtd
mov
or
dec
mov
xchg
stos
pop
out
mov
and
movsl
lcall
popa
xor
mov
fcoml
ret
mov
mov
jle
inc
fnstcw
jae
sbb
mov
jmp
gs
jecxz
mov
sahf
mov
jno
cmp
clc
push
inc
dec
pop
dec
jb
frstor
mov
and
sbb
mov
scas
jo
or
sbb
jno
shrb
out
ret
nop
cmpb
lret
sbbl
pop
lahf
hlt
xchg
test
inc
and
xor
sub
xchg
outsb
aam
fmull
fmul
push
and
stc
out
jge
pop
jae
adc
or
xchg
sub
mov
fidivl
jp
clc
xchg
movsb
xor
dec
lret
mov
push
lods
cmc
sbb
jae
sbb
dec
movsb
cmp
imul
push
ficompl
je
imul
mov
aad
aad
sbb
add
dec
loop
and
mov
mov
dec
shll
dec
jg
jle
jl
lret
scas
xchg
outsl
mov
popa
sub
xor
adc
pop
mov
and
pop
out
in
sbb
loope
and
fldt
sub
testl
mov
cli
mov
push
push
push
pop
sbb
mov
mov
clc
mov
pop
xchg
xchg
sahf
daa
stos
and
popl
add
lods
mov
inc
in
int
mov
leave
rclb
shrl
sub
xor
inc
and
outsb
and
outsl
mov
mov
lods
fmull
movsb
pop
testl
lcall
sub
xor
pushf
jmp
arpl
add
mov
mov
inc
pop
sub
rolb
add
cmp
ss
out
les
mov
dec
mov
cmp
rorb
and
shlb
ret
test
ficompl
and
aas
sub
fcoml
mov
cmp
pop
icebp
sbb
jp
add
push
stos
adc
fldt
movsb
ret
repz
shl
cld
fstpl
test
into
xlat
aas
mov
xor
rcrb
jl
jg
lret
jecxz
in
mov
push
std
nop
sub
mov
jns
cs
pop
lret
cmpsb
fnstenv
sbb
aad
adc
fcmovnb
pop
dec
pop
nop
in
aaa
test
sbb
leave
cmp
pop
stos
lcall
dec
addr16
xor
or
es
and
cmp
vprotb
pushf
lret
shrb
xchg
rol
icebp
test
pop
mov
sahf
in
outsb
mov
arpl
xor
into
adc
scas
inc
daa
test
and
int
xor
jbe
pop
mov
pop
cmp
mov
pop
xor
xchg
out
daa
int
add
dec
push
loope
xor
push
cltd
jecxz
xchg
add
add
xchg
push
fsubl
adc
mov
bound
imull
sbb
sub
push
add
jmp
add
dec
pop
dec
sbb
lds
hlt
sti
cmpl
xchg
scas
sub
add
sbb
push
fstpt
ja
xor
mov
movsb
mov
ret
jle
xor
inc
mov
decb
dec
mov
inc
jb
cmpsb
cmp
jne
mov
pop
mov
stos
lret
fdiv
mov
and
adc
rcl
jbe
add
stc
xchg
jl
dec
xor
inc
insb
out
das
dec
inc
inc
fidivl
xlat
push
in
pop
push
jmp
pop
push
divl
cmp
je
push
jg
icebp
mov
shld
push
test
pop
sub
inc
je
push
sbb
lea
mov
lcall
xchg
sbb
loope
mov
xchg
mov
call
imul
mov
or
inc
ficompl
jnp
pop
je
mov
add
dec
mov
jl
sbb
sub
xchg
dec
insl
adcb
mov
lret
ljmp
imul
dec
mov
jge
nop
cmp
fstpl
xchg
imul
dec
clc
bound
lds
iret
out
leave
insl
pop
addr16
dec
pop
sbb
cmpsl
ds
or
cmp
push
mov
iret
loop
xor
cmpsb
stos
rorb
mov
mov
dec
mov
nop
aad
jns
shlb
cwtl
sub
xlat
pop
testl
addb
call
lods
mov
sub
xor
xchg
outsb
xchg
push
cmp
cmp
addr16
loop
aaa
push
sbb
movsb
das
imull
frstor
or
mov
ljmp
cmpsl
pushf
repnz
ds
sbb
cmc
lret
sub
rorl
clc
or
push
lahf
lods
jb
jnp
leave
xchg
test
ljmp
mov
mov
jmp
jnp
mov
mov
or
test
ret
outsb
pop
movsl
stc
jle
mov
insl
addl
test
jb
inc
movsb
dec
int
repnz
push
mov
add
xor
pop
push
push
cmp
sub
add
cwtl
mov
push
scas
enter
and
mov
jno
daa
fdivrl
inc
sub
sbb
push
cmp
bound
xor
jmp
and
cwtl
sub
aam
das
inc
jae
ja
repnz
push
popf
ret
xor
lock
xchg
inc
addl
pop
daa
das
push
pop
xor
sbb
lret
into
jp
mov
cmp
lret
out
jo
pop
aas
arpl
lods
imul
arpl
cmp
jae
push
inc
mov
fwait
mov
rcll
push
jmp
repz
lods
fcmovbe
pop
adcb
mov
pop
fdivl
int3
push
mov
repz
fucom
fs
pop
sub
repnz
cmpsl
ds
xchg
jmp
lret
add
xchg
sub
mov
inc
fnstcw
push
xor
inc
arpl
push
in
movsb
cmp
stc
inc
fldpi
mov
cld
scas
or
or
outsb
add
ret
mov
imul
jne
jecxz
cmp
andb
push
inc
add
mov
and
loopne
cltd
pop
mov
push
insl
xor
jle
push
data16
push
mov
inc
xchg
ja
mov
fildll
leave
js
inc
xlat
pop
mov
lcall
dec
dec
popa
lret
fs
sub
adc
dec
dec
loope
pop
in
test
sub
inc
pop
mov
xchg
pop
sub
or
decl
jo
cmp
cmp
cltd
jecxz
xchg
out
mov
je
dec
sarb
add
fists
stos
mov
negb
mov
icebp
nop
cvtps2pi
mov
sbb
pop
clc
aad
out
negl
flds
imul
lock
adc
jne
jnp
or
cmpsb
lock
addr16
jp
push
xor
inc
lods
xchg
jb
shlb
lods
sub
jge
leave
cs
lea
mov
adc
or
stos
std
pop
insl
pop
movsl
mov
das
cmp
add
dec
and
movsl
sbb
cs
aaa
push
cmp
inc
push
mov
dec
mov
lods
test
adc
ds
xchg
xlat
xchg
roll
jg
test
negl
into
mov
jp
outsb
jb
mov
inc
into
ficoml
inc
dec
js
es
push
js
jae
aas
imull
mov
cmp
mov
adc
sbb
outsb
clc
mov
dec
pop
cs
sbb
xor
dec
mov
or
lahf
rclb
jo
data16
insb
dec
daa
sbb
pop
jbe
insl
xor
inc
dec
mov
xchg
test
scas
cmp
mov
mov
cmpsb
das
in
cmpsl
stos
dec
icebp
cmpsb
imul
mov
add
insl
into
pop
scas
mov
xchg
scas
rcr
in
add
out
popf
and
adc
jb
negb
in
inc
sbb
or
addr16
stc
mov
adc
dec
dec
sub
push
cld
xchg
fstpl
inc
cmp
mov
mov
xor
cmpsb
jmp
add
outsb
push
dec
pop
xor
movsl
cmp
pop
fs
adc
movsl
ja
cmp
sub
sbb
jno
pushl
xor
test
movsb
xor
inc
lock
inc
outsl
sahf
aaa
lret
xor
test
or
hlt
xchg
or
in
dec
inc
negb
sub
xchg
dec
and
add
dec
sti
add
pop
rolb
add
jae
mov
mov
out
mov
push
imul
cmpsb
cmp
andl
scas
les
scas
mov
mov
adc
mov
je
call
xchg
jp
mov
or
xchg
xor
in
sbb
and
mov
xorl
fwait
loopne
mov
jle
cli
adc
shll
jg
mov
rcrb
mov
roll
add
in
mull
pop
lret
push
mov
push
push
sbb
or
push
cmp
push
or
xchg
fs
vpsllw
adcb
testl
mov
stos
xchg
jb
addb
sbb
and
adc
stc
jmp
sub
mov
push
popf
sbb
cmp
mov
cmp
pop
imul
sub
adc
mov
imul
push
mov
lds
mov
lcall
sbb
jp
fs
fildll
add
ja
mov
mov
pop
cmpsl
or
call
mov
dec
sahf
or
mov
jmp
fcmovnb
push
lcall
mov
arpl
jmp
and
repnz
dec
add
push
jnp
fs
sbb
nop
outsb
out
xchg
adc
push
lcall
gs
adc
rcrl
sub
rcl
pop
xor
cmp
les
inc
jnp
jo
mov
adc
je
push
stos
mov
pop
mov
or
mov
in
inc
inc
aaa
test
lahf
xor
arpl
inc
pop
sbb
out
hlt
pop
ret
sub
pop
xchg
cld
cwtl
fnsave
js
daa
adc
mov
ret
pop
scas
push
pop
pop
ret
iret
push
ja
inc
test
ret
enter
ds
fisttpll
pop
sub
sub
add
inc
scas
mov
dec
push
xchg
sub
movsb
mov
rep
subb
sti
scas
stos
repnz
and
xor
ss
or
xor
fs
mov
inc
fsubl
decl
and
pop
and
icebp
imul
mov
cmpsl
sub
imul
dec
cmp
mull
pop
and
and
jne
mov
insl
scas
aas
or
subb
mov
inc
add
lret
adc
outsb
xchg
xor
ret
pushl
adc
add
fwait
aaa
loop
mov
push
outsl
lods
adc
pop
jl
es
dec
leave
es
pop
fldl
dec
es
pop
jno
enter
cltd
xchg
dec
je
fs
scas
sbb
ficoml
in
aas
lret
aam
adc
inc
jo
bound
jne
adc
aas
ja
mov
call
insl
jbe
jnp
dec
les
rep
vpmaxsw
mov
dec
sbb
nop
pop
cwtl
xchg
lret
lock
es
cmp
stc
pop
sub
sub
outsb
xchg
mov
pop
icebp
mov
add
sti
adc
js
push
cmp
fcmovnu
rorb
pop
inc
adc
dec
cmpsb
push
pop
notl
cmp
xor
pop
sub
add
cmc
mov
adc
scas
mull
add
ss
cmp
hlt
or
push
inc
push
sub
mov
sbb
pop
cmp
arpl
sub
or
pop
mov
fcoms
fdivs
out
cs
test
push
sub
inc
test
movsb
mov
jo
out
bswap
into
and
jge
ret
mov
loopne
xchg
loope
dec
push
cmpsb
les
outsb
and
mov
and
pop
inc
test
and
test
repz
outsl
push
nop
dec
jne
cmp
cmp
jnp
or
sbb
xor
push
mov
cmpsb
add
out
cmp
outsb
dec
decl
mov
jl
addr16
xchg
mov
into
sti
sub
inc
mov
shl
rorb
jnp
cmpsl
movsl
ret
aam
jns
dec
mov
xor
addl
xchg
sub
add
add
pop
fidivrl
xor
insl
in
push
sbb
mov
ljmp
jo
add
and
idivl
out
mov
inc
xor
sub
dec
cmpsb
cltd
and
fxch
push
jne
xor
cmp
mov
std
mov
pop
fcoms
add
inc
cli
rol
xchg
sbb
out
outsl
fcmove
rcrb
clc
adc
je
js
push
pop
mov
ja
inc
push
or
add
jb
adc
cmp
pop
mov
scas
push
jge
xor
add
nop
stos
push
icebp
xlat
sub
lahf
push
mov
push
mov
mov
mulb
xchg
orb
mov
xchg
xchg
lods
sbb
in
idivl
shlb
sub
sbb
or
jnp
add
xchg
in
adc
fdivrs
pop
mov
adc
sub
jno
mov
fadds
loopne
xor
mov
ss
movsl
cmp
in
sbb
mov
ja
stos
and
shll
dec
mov
or
mov
outsb
and
mov
xchg
and
dec
cltd
sti
dec
imul
mov
aaa
lea
adc
pop
enter
sahf
in
mov
fdivl
mov
mov
xchg
jge
sahf
lods
inc
sbb
fsubrs
insl
add
and
and
xchg
lods
push
incl
lods
js
mov
leave
enter
movsl
pop
mov
and
and
jne
in
fs
pop
in
lea
shr
out
add
xor
inc
and
aaa
arpl
mov
mov
add
enter
int3
in
cmpsl
mov
push
xor
mov
stos
cmpsb
mov
or
testl
push
rorb
jnp
ss
out
cmp
cltd
aas
xchg
push
das
inc
aas
sbb
mov
lds
nop
pop
hlt
xchg
in
mov
imul
lret
push
cli
cmpsb
xor
lea
or
stc
test
sub
stos
les
push
mov
dec
add
push
mov
adc
xchg
loopne
out
mov
repz
jae
adc
inc
sahf
mov
daa
rorl
leave
push
cmp
loope
xlat
sar
or
mov
xchg
xor
xor
in
jmp
mov
popf
or
jae
mov
std
mov
jmp
inc
mov
lock
andl
imul
daa
and
or
xchg
mov
ljmp
push
fwait
jae
movsl
sbb
push
xor
jl
mov
flds
xchg
xchg
add
jecxz
test
in
leave
or
xchg
imul
push
lock
or
sub
push
fistps
mov
inc
lret
cmpsb
ret
xchg
lcall
pushf
test
cmc
aam
repnz
ret
dec
ljmp
lock
push
pop
addr16
std
xchg
pushl
pusha
and
xchg
sbb
dec
add
xchg
inc
rcll
xlat
push
fsubrp
adc
das
jo
push
stos
add
or
in
jg
or
mov
fimuls
scas
loope
in
xor
and
shr
stc
jmp
mov
add
loop
std
dec
add
dec
xor
or
je
insb
imul
repz
pop
sub
push
sbb
inc
mov
mov
cli
inc
cmp
aaa
loop
std
xor
lahf
fildl
daa
pop
mov
std
mulb
jl
insl
sub
jns
jbe
loop
mov
add
shrl
mov
call
mov
outsl
jnp
sub
or
cli
dec
insb
bsf
adc
xchg
or
xchg
push
or
cwtl
jno
pop
aam
xchg
es
out
sub
dec
push
fwait
mov
mov
dec
push
push
push
sbb
cmpsb
and
add
dec
xlat
pusha
loop
push
and
pop
ffreep
dec
mov
jnp
pop
inc
sbb
inc
inc
and
pop
push
or
or
out
mov
xor
idiv
cmp
xchg
daa
push
shll
js
sbb
imul
jae
sub
ret
fisubl
addr16
popa
push
imul
lock
aam
cld
inc
notl
adc
and
lret
add
push
out
pop
xchg
jmp
rcrl
pop
push
int3
lahf
lods
std
pop
in
arpl
jb
push
push
jle
jbe
nop
daa
mov
adc
jns
out
dec
inc
popf
mov
loopne
inc
fs
sbbb
into
in
shl
inc
loope
add
sub
dec
loope
fisubrs
mov
in
push
andl
cltd
pop
bound
test
inc
arpl
mov
lods
stos
int
jns
pop
mov
sub
dec
add
sarb
cmp
inc
push
mov
xchg
sub
stc
jne
mov
xchg
mov
aas
cmp
aaa
xchg
loope
rcll
jl
out
adc
fwait
cmpsl
mov
mov
ds
popf
lock
or
fdivl
mov
js
mov
pop
adc
add
shl
cwtl
and
leave
push
cmp
jecxz
push
inc
or
test
negl
jne
pop
push
rcl
sbb
and
shl
mov
movsl
outsb
mov
adc
inc
loop
sub
sbb
cmp
int
xchg
int
lret
mov
test
scas
cld
jns
pop
pop
int
push
in
xchg
in
xchg
fiaddl
and
aam
jb
iret
xchg
and
xchg
mov
clc
cmp
and
mov
ja
in
mov
lret
movsb
out
and
iret
inc
jle
jne
inc
mov
pop
mov
cs
add
cmp
out
and
inc
push
push
sub
and
mov
adc
mov
test
in
mov
pop
jecxz
mov
test
mov
xor
mov
nop
cmpsb
and
jle
iret
out
cmpsl
popa
inc
dec
dec
aaa
or
mov
xchg
ret
lcall
jne
add
ljmp
sbb
pop
jecxz
push
sbb
and
mov
js
es
inc
rcr
test
lret
insl
cmp
imul
jnp
sbb
insl
jge
jg
mov
into
mov
push
test
sbb
dec
fsubrl
stc
push
push
js
pushf
pop
cmp
xchg
ljmp
pop
out
xor
mov
adc
add
cmp
sbb
cmpsb
sbbb
imul
repz
sbb
sbb
xchg
cmpsl
sub
out
add
jecxz
xor
push
addb
test
outsb
cmpsb
icebp
jmp
mov
outsb
push
inc
ret
daa
mov
dec
cmpsb
push
jbe
rolb
loop
aas
stc
xchg
ds
xchg
sub
mov
or
cs
ret
lea
push
inc
imul
inc
pop
loope
insb
jle
cmp
adc
jne
pop
mov
dec
clc
mov
push
pushf
add
cli
nop
test
stos
mov
loopne
mov
addr16
repz
xor
fwait
aam
inc
pusha
add
sbb
mov
jmp
cmp
out
sub
movl
outsl
sbb
dec
test
mov
xchg
xchg
outsl
jle
lret
ficomps
inc
mov
movl
pop
xchg
mov
cmp
sbb
stos
pop
sbbb
test
shl
pop
push
mov
ds
sub
jp
ret
hlt
push
insb
in
cmp
add
dec
roll
bnd
mov
adc
push
es
adc
jecxz
pop
repz
pop
loop
cmp
bound
popl
add
fstpl
pop
icebp
les
xchg
mov
lods
and
xchg
mov
inc
and
xchg
addb
dec
or
cs
jge
add
scas
cld
imul
inc
cwtl
sub
fsts
test
ljmp
loopne
cmp
mov
fisttpll
inc
mov
push
cwtl
pop
cmpb
imul
aas
ret
repnz
add
and
jne
aam
fbstp
jae
notb
std
xchg
lods
cld
add
sbb
das
fwait
sub
in
test
xor
loop
test
add
dec
repnz
mov
add
mov
push
xchg
sub
mov
inc
sub
int
incb
cwtl
adc
jo
xchg
jns
jo
stos
pop
insl
fldt
add
mov
jne
nop
cs
inc
hlt
int3
pop
lcall
and
stc
je
mov
mov
sub
rcll
cld
push
daa
inc
jno
lods
jg
and
scas
hlt
mov
pop
adc
push
outsl
lret
icebp
cmc
pushf
aad
call
xor
or
push
sbb
jmp
test
mov
dec
mov
xor
push
lret
inc
inc
push
aam
pop
jecxz
pop
mov
or
mov
push
push
xchg
push
les
ret
ljmp
push
shlb
mov
jae
push
and
pop
mov
out
lea
and
xchg
inc
ret
mov
push
mov
dec
xchg
xchg
fcoml
rcr
sbb
cltd
stc
push
call
mov
xor
add
sahf
xor
adc
mov
cmp
pop
jmp
adcb
cmpsl
jb
sub
aaa
rolb
ljmp
xlat
mov
lret
mov
xor
and
or
xchg
lea
cmp
sub
dec
cli
mov
imul
fdivrl
stc
mov
rclb
sub
dec
inc
arpl
dec
loopne
lahf
jg
fsubrs
aaa
adc
out
jg
sub
xor
dec
repz
popf
inc
sub
movsl
stc
sarl
and
mov
test
gs
cmc
xchg
mov
cmp
xor
and
addl
sbb
fucomip
jp
negl
scas
cli
xchg
jns
dec
out
mov
and
push
in
dec
call
fidivrl
add
jp
es
scas
xchg
scas
cmp
push
stos
jmp
imul
sub
fstpt
mov
lret
or
out
fisttpl
scas
ret
addr16
loopne
aam
mov
in
mov
rcrb
testl
in
xor
push
test
sub
lcall
aam
rcrl
loopne
cmp
sub
pop
mov
mulb
cmp
fistpl
push
jno
gs
push
outsl
test
or
or
add
mov
push
repz
mov
mov
mov
sbb
or
pop
aaa
std
scas
out
stc
push
and
push
iret
xchg
add
ss
testl
lahf
and
xchg
insl
icebp
cwtl
push
inc
adc
std
push
dec
xor
adc
xor
mov
pop
sti
hlt
mov
and
clc
nop
push
cmpsl
mov
gs
mov
and
cwtl
dec
jmp
inc
mov
jg
into
lock
pop
call
mov
xor
jmp
rcll
mov
lret
test
add
addr16
inc
lret
pop
lods
rclb
inc
pop
add
mov
jae
repnz
sbb
adc
aad
jecxz
js
das
jne
mov
bswap
adc
add
sbbl
mov
add
inc
negl
jmp
jg
outsb
jp
mov
jle
dec
xchg
cmpsb
rcrl
inc
aam
insl
push
loop
dec
shl
adc
cmp
mov
lret
jge
pop
mov
jbe
fdivrl
xor
cmp
inc
insb
cld
jnp
cmpsl
mov
test
lock
inc
push
imul
insb
push
ja
pushf
add
fimull
jmp
das
jae
ret
sbb
cmp
and
dec
mov
test
sub
pop
add
loopne
xchg
push
push
or
or
adc
nop
arpl
fs
pop
je
in
adc
add
xchg
sub
cmc
cwtl
jbe
jno
in
stos
in
test
pop
arpl
mov
enter
jmp
xchg
lret
sar
adc
sbb
xchg
aaa
aad
inc
sbb
outsb
push
sahf
inc
fs
stos
in
gs
jno
dec
scas
lcall
cld
js
imul
sbb
aas
aam
in
pop
cmp
pop
jecxz
lcall
xor
rcrb
popf
rcrb
movsl
mov
mov
cld
lcall
in
stos
out
std
pop
daa
mov
lods
jo
cmpsl
rol
outsl
scas
cld
adc
rcl
leave
mov
mov
or
out
jbe
rolb
mov
push
jbe
enter
addl
mov
rolb
outsb
lret
lret
ret
mov
and
ja
add
xor
jnp
jle
sahf
clc
inc
mov
cld
or
jo
mov
jbe
loope
repnz
ds
mov
lods
push
out
adc
stc
mov
mov
or
fcomi
pop
mov
push
nop
mov
ss
mov
in
stos
push
mov
cmp
dec
push
dec
sbbl
jmp
lea
addl
icebp
cmp
pop
shl
ljmp
ljmp
mov
cwtl
out
es
push
iret
adc
push
jae
in
mov
mov
leave
xlat
dec
xchg
mov
push
mov
adc
dec
jle
xchg
add
xor
add
rcl
fldcw
jmp
aaa
in
loopne
sti
stos
in
aas
out
fwait
ljmp
stos
dec
and
mov
movsl
in
mov
push
xor
popf
jl
loopne
push
add
out
xchg
add
lea
test
mov
and
loopne
cli
cwtl
jbe
clc
rcr
stos
out
cld
and
cltd
mov
or
cmc
mov
mov
inc
xorb
mov
pop
cld
cmp
lods
iret
leave
ss
dec
lcall
and
scas
les
lret
cld
hlt
add
les
mov
inc
lret
sysexit
xor
sbb
pop
cltd
push
cmp
sbb
adc
push
popa
inc
lret
jmp
push
imull
dec
or
mov
pushaw
cmovge
sub
add
dec
cmp
clc
stos
cmp
imul
mov
xchg
sti
pop
add
pop
inc
jle
and
mov
test
sub
repz
inc
adc
or
or
ror
in
pop
adc
cmp
loop
jns
popf
xor
fmull
cmp
pop
push
push
pop
shll
stos
cmp
adc
aam
mov
jmp
cwtl
insb
push
cwtl
mov
sub
fisubs
out
nop
in
notl
cmp
sahf
scas
xchg
push
pop
hlt
dec
xor
lcall
push
out
mov
inc
icebp
sbb
stos
mov
cmpsb
les
fcompl
pop
test
dec
jne
je
push
cmp
cmp
shrl
dec
pop
push
add
cwtl
xor
gs
xchg
idivl
cli
loop
addb
lret
push
xchg
sbb
ds
insl
in
dec
loopne
mov
sarl
ficompl
or
mov
nop
xchg
in
sub
mov
enter
fsubrp
loopne
out
in
add
in
int3
jge
div
adc
fwait
xor
or
enter
mov
pop
dec
pop
inc
sti
mov
test
enter
add
mov
mov
push
loope
fidivrl
fsubs
inc
jp
icebp
stos
gs
xchg
int3
ja
xchg
enter
mov
les
lea
push
insl
add
mov
mov
pop
jl
inc
mov
xor
push
jl
in
popl
xchg
jae
mov
xor
fisubrs
sub
dec
sbb
add
out
dec
xchg
and
dec
adc
cmp
cmp
pop
sub
sbb
into
ljmp
xor
jmp
out
or
cwtl
subb
jbe
xchg
jns
dec
mov
fdivrs
movsl
dec
mov
das
mov
fldt
mov
daa
sahf
jno
xchg
jae
stc
negb
push
mov
cmp
ret
cmpsb
adc
lea
popa
inc
pop
negb
dec
in
jp
jne
mov
adc
push
and
iret
pop
inc
stos
out
mov
dec
lea
adc
mov
push
jmp
fcomp
jb
inc
in
ja
jp
inc
cwtl
inc
in
push
inc
cwtl
das
jae
mov
mov
fcmovbe
imul
aam
mov
scas
daa
inc
fcomps
jns
aas
es
ljmp
mov
xchg
imul
lods
jg
pop
in
push
popa
jg
sbb
fnstcw
stos
or
nop
xor
lods
xchg
adc
and
xchg
fisubrl
lahf
mov
aas
fwait
arpl
into
jae
xchg
and
mov
jecxz,pn
sbb
fincstp
rolb
sub
movsl
lds
mov
sub
push
add
cld
push
adc
mov
xchg
mov
test
mov
adc
sub
and
shll
xor
rorb
mov
xchg
pop
mov
pusha
or
lds
orb
out
pop
xor
mov
shrb
adc
mov
mov
popa
mov
mov
dec
pop
js
mov
sbb
sbb
test
fildl
out
inc
sub
sbb
xchg
dec
fwait
jnp
fisubrl
jge
mov
mov
mov
inc
dec
sbb
cmp
ljmp
inc
popf
pop
lods
jecxz
mov
call
les
jno
jo
dec
sbb
dec
sarb
mov
add
scas
inc
or
adc
inc
jo
cltd
lock
xchg
adc
leave
filds
and
cmovg
cmc
sub
jne
mov
inc
adc
and
and
fnstsw
or
add
fistl
mov
sbb
xchg
and
adc
pop
push
push
mov
xchg
cmp
in
adc
cmp
jae
pmulhw
movsl
mov
jno
cld
mov
push
mov
or
cmpsl
push
jp
dec
push
popa
mov
scas
stc
mov
nop
mov
xor
call
lds
jg
sbbb
sbb
hlt
pop
sbb
jae
and
imul
out
mov
jnp
mov
and
icebp
push
fidivrs
xchg
mov
dec
orl
outsb
inc
pushf
jmp
mov
mov
vmovhps
sub
ds
in
pushf
pushf
inc
mov
xchg
sti
pop
call
mov
loope
adc
stos
aas
sub
jno
mov
sbbb
scas
inc
xchg
adc
dec
imul
fnstsw
mov
aas
jp
and
or
pop
clc
xchg
fldl2t
scas
xchg
nop
daa
test
xor
mov
pop
movsl
adcb
jmp
jne
xor
jmp
cmp
stc
and
add
test
cltd
mov
insl
jae
iret
pusha
mov
and
int
sub
mov
daa
push
das
sbb
repnz
jo
xor
jne
cmp
cld
inc
fimull
aam
jno
adc
insl
mov
push
jbe
jnp
ljmp
loope
rcr
cmc
and
lret
mov
std
push
lods
adc
dec
pop
es
mov
push
pop
jnp
jae
jnp
dec
sub
dec
js
in
mov
dec
xchg
movsl
add
pop
movb
add
sub
andl
mov
mov
push
in
inc
cmpsl
lcall
push
jle
mov
mov
cmp
mov
add
arpl
sbb
dec
pop
dec
mov
mov
cmpsl
jle
cwtl
xchg
xor
adc
test
add
mov
loope
mov
push
cmpsl
or
cmpsb
lcall
jno
aam
mov
leave
mov
sbb
sbb
mov
mov
jmp
aaa
push
aam
repnz
lea
lcall
pop
xchg
mov
push
into
fwait
push
out
dec
sahf
xchg
cmc
insb
jae
inc
jmp
ljmp
ds
lcall
sahf
push
inc
mov
ss
fmull
mov
incl
test
leave
shr
mov
sti
out
mov
mov
aas
dec
sbb
push
xlat
ret
ret
in
and
loope
loope
cmp
mov
adc
dec
and
mov
dec
fldenv
ret
loop
test
mov
sub
or
xlat
fwait
and
mov
ret
repz
stos
mov
outsb
imul
mov
cmp
push
add
adc
jg
notl
xlat
std
out
das
neg
jno
ret
clc
add
std
adc
aad
scas
or
dec
jecxz
inc
xor
mov
xor
es
cmp
inc
pushf
cmp
shr
testb
push
pop
ds
sub
jecxz
test
mov
or
mov
mov
cmp
pop
jbe
pop
mov
js,pn
lea
in
js
dec
jecxz
shrb
or
inc
mov
in
jne
les
je
xchg
imul
xchg
adc
lret
idiv
jmp
in
les
and
mov
pop
testb
ja
inc
cmp
jb
add
push
push
sbb
mov
dec
fisubrs
imul
or
mov
mov
mov
jne
loopne
imul
mov
xchg
add
xor
minps
fwait
xor
and
mov
mov
inc
inc
xor
or
lcall
into
es
fsubr
sbb
add
mov
jmp
push
test
xlat
adc
lea
movsb
cmp
jecxz
bnd
xor
dec
mov
insl
aas
push
mov
mov
out
push
or
dec
jnp
sbb
cmpsb
aam
jnp
aad
add
aam
dec
lret
enter
scas
out
shrl
mov
mov
daa
inc
xchg
sub
es
mov
lock
push
xchg
sbb
out
xchg
cmp
sti
dec
pop
and
repz
xlat
mov
jb
mov
sti
ret
pop
iret
dec
dec
xlat
push
mov
cs
push
add
out
daa
pop
sti
mov
int3
pusha
mov
ljmp
pushf
xor
xchg
out
pop
rcr
bnd
sub
xor
sbb
ss
mov
xchg
cmpsb
push
cs
add
loop
sbb
adc
cmp
outsl
aad
mov
dec
push
adc
cmp
and
iret
sbb
sahf
ss
test
inc
pop
pop
push
mov
rcrl
and
cltd
sbb
repnz
jnp
fwait
mov
xor
mov
loopne
xlat
or
or
addr16
sahf
jg
shlb
xchg
push
movsb
sub
or
daa
cmp
mov
fistps
lods
add
lret
test
enter
fsubrp
aas
call
and
cmp
sbb
aad
push
movsl
cmpsl
xlat
jb
inc
mov
cmp
jns
inc
stos
icebp
mov
jle
aad
outsl
xchg
xor
in
inc
add
mov
mov
push
pop
mov
fnclex
cmc
ljmp
sahf
jno
pop
bound
rclb
in
cmp
pop
pop
pushf
arpl
icebp
incb
cmpsl
sbb
jb
fdivrl
rorl
out
dec
sbb
pop
aad
push
jecxz
or
lea
sub
inc
loop
lea
bnd
pop
inc
adc
sbb
cmp
and
push
cmpsb
xor
push
in
jns
and
call
sbb
popa
add
testb
sbb
pop
shrl
pop
xchg
jne
ror
or
movsb
inc
idivl
jl
mov
adc
jnp
jmp
lock
sub
subl
arpl
and
movsl
lods
push
das
test
bound
addr16
mov
mov
mov
cmpsb
es
mov
push
adc
xchg
jns
pusha
jae
adc
incb
in
cld
or
xor
daa
ror
inc
and
push
ret
mov
push
outsl
insl
cs
xor
pop
jns
mov
outsl
mov
test
inc
xor
ljmp
or
sub
int
jne
inc
mov
addr16
es
jge
enter
scas
sbb
sub
xchg
pop
xchg
xor
sti
xor
and
les
pop
out
inc
xchg
mov
ret
pop
fnstcw
push
out
popw
es
fdivs
inc
push
ds
bound
pop
inc
mov
sbb
xchg
or
lods
and
sub
enter
les
jb
leave
xchg
xlat
loopne
stc
fsubrs
test
dec
ficompl
add
loopne
adc
dec
mov
or
gs
outsl
imul
pusha
adc
xchg
pop
ja
std
add
and
rcl
xor
scas
gs
mov
dec
lret
fmuls
test
push
lock
pop
ret
out
negl
adc
jnp
loope
or
mov
dec
stos
arpl
ja
in
mov
es
inc
fildll
sbbl
hlt
imul
cmp
orb
shrl
sbb
daa
aad
xor
pop
call
push
into
outsl
jnp
cmp
pop
popa
cmc
jp
imul
incb
push
int3
sub
ljmp
imul
dec
add
push
popl
sub
inc
lods
popa
rcr
movl
pop
mov
lods
inc
add
dec
xlat
jo
lret
je
add
xor
arpl
xchg
mov
xchg
int
or
das
pop
and
fsub
mov
cwtl
fwait
mov
movsb
cmp
test
pop
xor
xlat
xor
sub
xor
decl
lcall
movb
push
bound
into
add
imul
jecxz
jnp
xchg
out
xchg
test
mov
insl
mov
mov
das
push
hlt
sti
mov
ds
leave
fdivr
out
or
adc
stos
aaa
int
pop
out
sbb
stc
sub
mov
popf
cmp
outsb
jle
pop
and
jl
dec
jecxz
mov
sub
insl
push
xchg
test
mov
mov
rcrl
push
mov
mov
lret
je
pop
aad
xchg
cs
jecxz
adc
dec
mov
lods
adc
jne
xor
push
scas
cltd
pop
mov
mov
add
into
jbe
adc
xchg
rcll
mov
pop
test
decb
and
xlat
mov
mov
cmp
lock
cwtl
ret
add
enter
inc
fs
or
das
imul
std
xor
push
ja
adc
dec
jmp
mov
mov
sub
or
insb
mull
xor
std
sub
sbb
js
push
js
mov
cmc
cmc
lods
mov
pop
mov
fs
out
inc
jecxz
cmpl
mov
mov
pop
cltd
sub
mov
pop
daa
fsubs
sbb
stos
xchg
lds
push
mov
les
popa
mov
fwait
sar
sbbb
or
pop
and
jo
pop
into
mov
push
in
or
push
lock
dec
sub
out
shll
ja
pop
loop
xchg
sub
sub
mov
cli
popa
mov
lret
loopne
sub
sbb
or
adc
inc
sbb
movsl
add
ficompl
cltd
or
out
jo
xor
in
mov
inc
sub
ja
gs
out
int
decb
mov
arpl
test
dec
loop
xor
cwtl
push
push
call
or
jl
inc
xor
cld
add
jle
ja
xchg
pop
scas
rorb
mov
repz
in
xchg
push
sub
mov
pushf
and
pushf
es
bound
fidivs
push
pop
ss
jae
ljmp
andl
mov
ja
lcall
jmp
mov
cltd
pop
arpl
and
jle
cpuid
mov
cmp
and
in
addb
cmp
lcall
pop
jne
out
and
jle
mov
cmpsb
mov
and
iret
lcall
mov
push
sub
push
roll
cs
scas
xlat
pop
scas
or
cltd
mov
jmp
iret
inc
out
cmpsb
jg
sbb
mov
loope
mov
jle
xor
push
mov
inc
mov
jmp
lock
repz
scas
xor
push
jp
loop
jnp
jne
lock
pop
xchg
mov
mov
add
es
shrb
mov
lock
aad
or
jo
sub
outsl
test
push
cmp
dec
cli
xchg
xorb
das
mov
pop
stos
les
adc
xorl
mov
sbbb
scas
inc
push
cmp
sbb
cs
sub
cmp
adc
push
sbb
imull
icebp
mov
lock
add
das
cmp
ja
xchg
push
jge
dec
sbb
mov
cwtl
cmp
adc
push
and
bound
icebp
mov
dec
mov
shlb
test
es
mov
pop
xor
dec
ret
stos
or
outsb
loop
push
daa
adc
loope
mov
jle
sar
dec
dec
int3
adcb
or
push
mov
and
hlt
xchg
and
pop
aas
jmp
or
stos
test
lods
jns
mov
sti
imul
jns
sahf
out
loopne
in
fstp
aas
or
sub
xchg
dec
loopne
xor
or
adc
mov
jle
mov
sbb
mov
fsts
xchg
mov
mov
mov
ret
lock
or
dec
clc
inc
addr16
adc
repnz
cld
dec
arpl
es
push
daa
lret
cmp
adc
adc
hlt
aam
scas
ja
jbe
jb
add
add
xor
lock
xor
sar
nop
add
jmp
cwtl
lods
adc
sti
fisttpl
or
stc
sbbb
insl
mov
std
mov
dec
not
xchg
scas
and
jmp
ret
fnstenv
loopne
call
add
mov
sbb
xchg
sub
cli
pop
cmpl
dec
xchg
pushf
or
jl
mov
loop
push
pop
call
pop
outsb
insl
mov
fiaddl
mov
enter
popf
sub
aaa
sub
sub
mov
push
mov
fbld
mov
loop
rorl
in
arpl
mov
or
or
bound
por
loope
or
lret
sti
call
jne
dec
cmp
push
jbe
mov
push
mov
fildll
outsl
xchg
lcall
test
lret
mov
xor
jmp
push
sbb
add
dec
gs
insb
adc
push
dec
test
out
push
loopne
test
fwait
adc
in
adc
fldenv
es
out
aam
mov
nop
roll
or
fs
shlb
icebp
jb
sti
sub
jnp
pop
pop
into
adc
xchg
jns
jge
mov
inc
cs
sbbb
and
sbb
push
cmp
lock
jg
arpl
inc
mov
add
sub
add
dec
inc
adc
adc
pusha
dec
mov
lret
add
shll
out
inc
push
inc
xchg
out
and
mov
push
mov
insb
cltd
or
imulb
js
add
or
mov
inc
outsb
xchg
pop
lock
ret
pop
jne
xlat
jmp
mov
stc
clc
mov
mov
mov
mov
dec
mov
jp
aaa
addr16
nop
add
dec
dec
dec
out
ja
and
les
inc
call
or
outsl
fistl
sub
mov
mov
seta
cmpsl
or
xchg
lea
jnp
pop
sbb
rcrb
out
lcall
inc
cld
push
xchg
cli
jecxz
mov
fs
add
ret
inc
clc
lahf
out
xchg
adc
into
fwait
xor
cmpsl
ret
decb
test
das
adc
sbbb
xchg
sbb
fsts
pushf
mov
pushf
push
call
lret
insl
repnz
hlt
adc
adc
mov
push
and
iret
movsb
pushf
mov
mov
push
mov
pop
es
sbb
dec
jo
mov
mov
aam
in
lret
notb
clc
sarl
add
pop
loop
mov
imul
dec
jp
sbb
icebp
cmp
stos
push
mov
lea
pop
pushf
pop
push
xor
cs
popa
xor
jo
dec
ljmp
and
loopne
rcl
icebp
push
jle
sub
dec
loopne
roll
lcall
inc
mov
pop
movsb
xchg
mov
cld
dec
movsb
pushl
adc
je
xor
pop
ds
lret
testb
orl
sti
pop
fwait
cmp
mov
shrb
push
leave
loope
out
stc
and
out
mov
popa
xchg
sub
imul
push
or
sub
cmp
cwtl
repz
and
lret
fistpll
fisubs
mov
inc
es
mov
xchg
dec
pop
repnz
mov
jge
das
xchg
or
leave
jecxz
sub
imul
or
das
dec
sbb
mov
es
das
dec
mov
jecxz
cmp
or
pushl
pop
jle
adcb
sbb
inc
movsb
loop
cmp
fwait
mov
pop
int
movsl
int3
cli
cmpsb
mov
dec
pop
cwtl
les
roll
pop
jno
jns
push
aaa
loopne
sbb
mov
xor
inc
and
jg
subb
jnp
lahf
sub
int3
lret
cmc
dec
adc
setle
shlb
mov
cs
pop
and
addr16
cli
or
notl
lcall
and
pop
jmp
mov
aam
add
inc
out
xchg
mov
cmp
add
dec
sub
clc
or
test
pop
ss
dec
lock
add
jecxz
mov
mov
inc
or
fsubl
pop
push
aad
cld
jl
inc
adc
sbb
jmp
jg
xor
test
xor
sub
dec
ficomps
push
iret
das
add
sahf
sub
or
mov
or
adc
push
mov
movsb
dec
fisubs
paddusw
cmp
addr16
pop
lock
pop
scas
dec
scas
inc
jp
out
notb
jae
pop
fcompl
arpl
scas
xor
packssdw
inc
mov
mov
je
in
fdiv
push
push
dec
loop
das
call
or
mov
cmpsb
push
es
scas
cmp
lds
daa
xor
ret
pop
adc
es
cmp
imul
or
and
les
iret
cmp
sahf
xchg
mov
and
inc
aam
cmp
mov
out
aad
repnz
xchg
mov
popf
or
sub
cmp
xchg
mov
inc
push
xchg
xchg
lahf
xchg
adc
xor
aaa
lock
rcll
cmp
repz
inc
pushw
xor
insl
sbb
mov
lods
test
push
jnp
inc
push
ret
loop
les
inc
mov
xchg
cmpsl
icebp
adc
jmp
mov
imull
fwait
dec
js
in
xchg
out
rcrl
sbb
jbe
ss
test
sarb
fmull
repnz
or
inc
iret
imul
fisubrs
fs
lods
aas
lret
bound
mov
inc
sbb
and
xchg
test
dec
shlb
pusha
xchg
in
dec
mov
inc
pop
ds
imul
cwtl
adc
lock
mov
fldcw
popf
and
mov
sub
mov
loopne
hlt
daa
inc
adc
leave
ret
jnp
movsl
out
popl
leave
fdivl
aaa
stos
push
cltd
data16
xchg
mov
xchg
mov
sahf
ret
faddl
xchg
jecxz
or
ja
jle
popa
xchg
imul
or
mov
xchg
jns
negl
sti
cmpsl
xchg
jo
inc
push
cmp
mov
test
lret
repz
adc
jo
insl
add
cmp
clc
or
push
loop
mov
mov
in
push
aam
and
sbb
xchg
in
pop
lahf
mov
sahf
jmp
or
inc
cmp
cmp
add
push
out
fisubrl
int
jb
daa
cwtl
lret
arpl
xor
cwtl
jmp
pop
mov
sbb
cmp
fbstp
fdivrl
and
cwtl
js
inc
imull
fstpt
mov
mov
int
xchg
repnz
mov
dec
call
test
push
fidivrl
je
add
mov
sbb
test
jle
xchg
lcall
lods
xchg
sub
pushf
mov
jge
dec
pop
or
out
aas
scas
push
sub
pusha
jbe
mov
push
data16
rorl
imul
inc
sbbb
or
jo
pop
out
in
dec
sbb
push
sub
cli
insl
and
xor
add
sarb
lret
pop
pop
jg
mov
add
scas
in
js
mov
subl
test
cmpsb
mov
gs
pop
in
orl
mov
push
and
xor
adc
lea
mov
jge
inc
flds
jmp
fstps
out
pop
mov
xchg
and
inc
and
das
jl
xor
lret
xchg
jo
daa
aaa
mov
push
scas
or
mov
fstl
sub
jecxz
push
nop
iret
add
lock
xchg
es
shlb
insl
loope
out
cmpsl
insl
add
je
enter
outsl
aam
dec
sbb
jge
mov
scas
mov
roll
dec
pop
dec
mov
jl
jge
out
xorb
mov
dec
outsb
outsl
jne
add
lock
and
inc
or
stc
push
cmp
es
jg
lret
fimull
ds
in
ds
pop
push
mov
aam
inc
setae
inc
mov
bound
push
movsl
mov
add
cmp
lret
fisubrs
jmp
sub
stc
pop
and
cmp
hlt
notl
jmp
out
stc
enter
out
pop
lahf
pop
aaa
call
test
sbb
xchg
popa
stc
pop
sub
mov
xor
imul
int3
mov
mov
outsl
cmp
fwait
cwtl
stos
test
notb
repz
mov
sti
dec
out
scas
pop
clc
xchg
insl
adc
fnstsw
add
ret
and
arpl
dec
fsubrs
xlat
xlat
clc
or
out
lret
lock
xor
lahf
lcall
into
pop
repz
ljmp
jnp
jle
push
jmp
pushf
xor
jno
adc
repz
mov
sub
and
leave
mov
dec
xor
pop
mov
test
mov
xchg
mov
sbb
fucomp
in
mov
js
mov
loopne
xchg
dec
shl
inc
dec
out
ljmp
inc
xor
addl
mov
clc
cmp
add
cmp
daa
es
out
xchg
add
cld
ror
xor
add
dec
icebp
mov
mov
mull
lds
ss
jecxz
cli
out
daa
sub
imul
sti
and
ds
jo
xchg
test
sbb
cmpl
adc
jg
fidivl
push
lods
and
popa
jo
shrb
pusha
imull
mov
xor
das
test
fdivs
push
ss
ja
xchg
cli
nop
push
lcall
stos
jge
imul
imul
cmc
mov
dec
shl
or
insl
xchg
push
push
mov
mov
insb
pop
jbe
fdivrl
or
call
push
fucom
mov
add
gs
xchg
pushf
jns
mov
mov
aad
mov
mov
add
xor
subb
xor
pop
sti
test
sub
mov
mov
imul
pop
adc
cmpsb
or
xlat
mov
loopne
mov
cs
jae
push
xchg
ret
mov
xlat
xchg
or
out
pop
sub
adc
testb
pop
or
jge
dec
scas
jns
mov
negb
jae
sbb
cmp
rol
xor
in
js
and
xchg
lret
push
xlat
inc
ss
repz
adc
mov
andl
xchg
in
adc
and
lock
jne
inc
xchg
leave
lret
aas
iret
pop
out
pop
test
insl
adc
mov
cs
mov
into
pop
orb
lds
dec
sbb
add
add
bound
xchg
mov
mov
sub
fldl
movl
mov
push
jge
pop
sub
dec
add
jae
outsl
and
adc
lret
movsb
stos
xor
popf
push
jecxz
jl
scas
cli
xchg
add
outsl
cs
scas
mov
push
adc
nop
pop
inc
icebp
jbe
inc
ret
jae
cmpsl
ret
andl
dec
pop
mov
and
popa
ja
out
cwtl
dec
jl
cmp
addr16
popa
xchg
aad
aam
adcl
filds
lods
mov
fmull
mov
fxch
sub
pop
and
dec
xor
jp
fucom
jp
lods
add
or
cmc
nop
lods
nop
test
add
cs
enter
fwait
adc
pusha
xorb
pop
hlt
mov
cmpsb
dec
imul
pushf
rcr
jo
subb
adc
xchg
sub
idivb
sbb
or
movsl
xchg
and
inc
mov
rcrl
mov
testb
ret
push
mov
ljmp
outsl
shlb
cmpsb
sti
xchg
inc
pop
mov
imul
xchg
mov
xchg
pop
sbb
xchg
cs
cmp
and
scas
push
sub
es
testl
pusha
int
inc
in
out
repz
mov
add
shrl
xchg
inc
stos
push
inc
mov
psadbw
js
or
mov
and
add
cmp
dec
arpl
jecxz
imul
push
or
js
xchg
lret
cmp
push
popa
enter
jl
and
mov
rorl
xchg
add
lods
xor
dec
xchg
mov
add
pushf
fdiv
mov
sbb
cmp
push
lods
inc
fsubl
les
cmc
adc
les
mov
call
lret
pop
aas
mov
jne
push
sbb
fstps
cmp
clc
add
and
in
fmuls
jns
stc
cmp
xor
adc
mov
lret
cmp
sbb
in
pop
dec
in
bound
lock
dec
je
test
popa
jl
lret
fstp
out
notl
pop
mov
stos
mov
sbb
inc
pop
fcmovnbe
jmp
pop
inc
scas
cmp
mov
fdecstp
mov
dec
data16
xor
gs
fsubr
mov
pop
jbe
ljmp
inc
dec
dec
clc
imul
aas
jbe
mov
in
js
fnstcw
inc
dec
lcall
dec
mov
iret
adc
sti
scas
repz
popf
jbe
imul
clc
xchg
fs
int3
xor
imul
mov
rol
fwait
pusha
push
xchg
or
sub
mov
inc
rorb
xchg
js
lods
inc
mov
repnz
rorl
sahf
and
in
xor
add
int
std
gs
out
int3
xchg
cmp
stc
aas
insb
pop
pop
das
int
ret
rcrl
dec
pop
xor
fistps
xchg
jnp
cmp
mov
sbb
call
dec
out
push
cli
xchg
fidivl
out
xorl
sti
fwait
sub
out
jbe
pusha
pop
sub
mov
loopne
ds
adc
sbb
inc
adc
cmp
sarl
inc
cmp
cmp
xchg
mov
repnz
cmp
adc
add
jle
push
cld
adc
add
sub
inc
sahf
clc
aad
stos
xor
idivl
push
mov
sub
ja
cmp
cwtl
dec
loopne
cld
push
xchg
fwait
out
pop
add
std
sub
jb
fsubs
aam
and
insl
adc
cmpsl
jle
in
or
inc
and
int
popa
adc
xchg
fildl
aad
mov
mov
lcall
inc
outsl
pop
lahf
lea
inc
fsubl
adc
push
or
popa
adc
ja
xlat
add
add
push
bound
enter
scas
sbb
push
mov
pop
lock
lods
fnsave
jo
iret
mov
mov
popf
sub
mov
movsb
loop
mov
lds
sbb
push
in
leave
je
push
xchg
mov
dec
jae
lods
pushf
shll
cmp
scas
pop
fldl
mov
dec
pop
stc
pop
aas
push
mov
jg
cmp
fimuls
orl
mov
stos
inc
ficomps
mov
push
cmpsb
loop
fcoms
mov
push
pop
mov
shr
jb
adc
aad
hlt
sbb
cmp
fdivl
int3
adc
out
dec
mov
fidivs
mov
aam
nop
push
xchg
nop
insb
pop
mov
in
outsb
lahf
ss
push
jmp
cwtl
in
xchg
or
sbb
fisttps
inc
out
pop
mov
jno
pop
outsb
adc
mov
jp
jno
sbb
cmp
fucom
mov
stc
daa
fnsave
xor
jl
jp
pop
call
test
pop
mov
lcall
sbb
lret
sub
cmp
mov
aam
push
not
ret
fcomip
mov
sbb
add
push
in
mov
mov
adc
inc
gs
shlb
loope
sbbl
add
xor
sbb
in
jp
aad
cmp
sub
scas
push
ret
idiv
xchg
sub
ljmp
aaa
xchg
adc
mov
cltd
cmpsl
ror
jl
inc
fsincos
popf
cli
pop
sbb
fldl2t
repnz
mov
and
and
testb
lret
inc
adc
sarb
jns
hlt
push
test
inc
mov
add
iret
jmp
sub
adc
push
and
lret
adc
das
fwait
popa
cmpsb
in
mov
ret
or
insb
sub
mov
decb
je
cmp
js
sbb
aad
test
pushf
testb
push
xor
xor
mov
dec
pop
push
pushf
ja
sbb
pushf
sti
pop
loopne
mov
in
mov
lods
inc
fstpl
or
lret
xor
mov
mov
mov
jg
xchg
cmp
stc
sarb
xor
jne
push
jbe
fprem
nop
daa
and
fwait
jle
mov
pushf
adc
jns
cmc
sub
jmp
add
cltd
lock
gs
filds
cmp
mov
iret
shlb
outsb
mov
sbb
xor
push
cmpsl
fmull
andl
xchg
xor
lcall
dec
add
mov
call
sbb
jo
xchg
es
test
dec
mov
push
pop
cmp
mov
iret
adc
rorl
fistps
data16
out
dec
outsl
push
jnp
xchg
into
arpl
push
and
call
icebp
cmp
xchg
sub
loope
jg
cmpsb
pop
icebp
xlat
sub
xchg
sub
je
pop
lock
or
jg
loop
out
mov
xchg
cs
popa
pop
lock
inc
pop
fwait
lock
xchg
sub
xor
jnp
inc
pop
fsubr
pop
or
adc
scas
push
and
push
in
cwtl
adc
jb
dec
xchg
and
mov
aaa
push
xor
push
pop
mov
aad
or
mov
mov
enter
das
inc
push
xchg
in
mov
pop
pminsw
std
psubd
scas
gs
loope
jl
or
icebp
xchg
adc
xor
daa
inc
mov
test
push
dec
movsb
sbb
adc
mov
enter
mov
stos
scas
jns
mov
and
sub
test
and
test
stos
pop
call
scas
inc
es
inc
pop
push
dec
int
sahf
mov
xorb
and
ficoml
cmp
sbb
mov
insl
push
sbb
jmp
push
call
movaps
imul
jns
call
push
xorb
jae
and
jle
shr
jae
bound
cmpsb
or
jle
aaa
dec
adcl
push
adc
je
lahf
xor
push
xchg
ss
pop
notb
pop
andb
in
or
add
imul
repnz
and
test
or
jg
sbb
int
push
push
pop
popf
test
bound
add
cmc
clc
xor
mov
scas
orl
adc
lahf
or
call
pop
jle
mov
stos
jbe
outsl
adc
jno
or
fdivrp
movl
mov
ret
xchg
jle
imull
dec
shl
adc
push
pop
dec
lea
cmc
popa
dec
das
xchg
push
cmp
cld
push
push
popa
int3
loop
ja
fdivrs
iret
adc
and
cmp
mov
or
cmp
add
jne
jbe
gs
xchg
into
aas
lods
cmp
insl
ljmp
cli
scas
pop
inc
or
jns
insb
or
lret
mov
ret
sar
dec
gs
ljmp
xor
popf
in
lods
les
clc
cltd
aas
lret
jmp
mov
jne
mov
ret
pop
stos
ss
adc
xchg
stos
add
sub
fdivrs
mov
jne
and
mov
shrb
jecxz
call
xchg
enter
push
dec
cmp
imul
repz
imul
dec
out
test
je
gs
push
jbe
into
adc
add
jle
lret
scas
scas
push
in
cli
dec
popa
sub
icebp
xchg
adc
cmp
cmp
test
pusha
add
sbb
test
fiadds
mov
and
dec
shr
cmp
sbb
dec
add
add
xchg
xchg
mov
jb
cs
stos
pop
ret
mov
lret
xlat
mov
stc
mov
sbb
movsb
mov
add
push
adc
and
call
jg
mov
push
scas
mov
lods
pushf
add
mov
loope
add
dec
jg
shrb
pop
pop
js
push
jmp
fimull
jnp
add
mov
stc
cs
xor
jb
int
push
xchg
jge
js
adc
outsb
xchg
out
push
insl
test
pop
and
pop
push
incl
or
jno
sub
lods
cmp
or
push
xchg
pop
hlt
push
mov
out
xor
pop
stos
add
cmpsl
push
push
cwtl
sub
sbb
leave
out
jae
pop
movsl
mov
sub
bnd
add
outsb
adc
mov
push
push
mov
cld
lods
cmp
sbb
outsl
idivl
sbb
dec
in
stos
adc
pop
mov
xor
sub
dec
pop
adc
sbb
inc
jb
push
divl
and
adc
in
jmp
pop
mov
mov
out
loop
mov
addr16
lret
pop
or
or
xchg
sbb
add
xor
inc
add
daa
ja
loope
dec
pop
jae
adc
jge
xchg
daa
pop
pop
repnz
sub
sub
loope
fsubrs
lea
sti
mov
movsl
lret
daa
dec
loope
movsb
push
sub
add
icebp
mov
stos
into
aam
dec
xchg
dec
inc
mov
lret
jne
cmc
pop
lahf
push
ljmp
mov
jo
mov
insl
daa
out
daa
mov
repz
mov
stc
push
sub
xchg
pop
je
push
push
mov
mov
cmp
mov
xchg
out
dec
inc
cmp
js
adcl
test
rcr
pop
jae
xor
mov
add
daa
mov
int
sarb
and
movsb
ss
ljmp
fiadds
cld
loope
adc
orl
icebp
ficomps
dec
push
push
inc
data16
cli
push
outsl
hlt
push
ja
xchg
icebp
stos
sbb
sqrtps
sbb
sbbl
enter
stc
mov
sbb
mov
shl
mov
mov
mov
inc
and
imul
add
imul
insl
jle
lahf
dec
mov
jl
xlat
stos
stos
adcl
cmp
in
das
xchg
dec
add
fists
shlb
fadd
mov
mov
pusha
idiv
xor
mov
les
mov
repnz
insb
jmp
dec
and
hlt
test
jno
xor
fcompl
dec
add
xchg
iret
les
jbe
or
inc
push
mov
mov
cmpsl
xlat
inc
jbe
mov
jo
das
lahf
js
push
sub
inc
call
pop
or
hlt
in
lds
inc
push
cmp
xchg
push
in
inc
inc
sub
xchg
cmp
jp
imul
idivl
leave
mov
pop
xchg
cmp
cmp
xchg
das
movsl
push
sub
jb
insb
out
aam
push
pop
push
mov
sub
stos
add
inc
pop
adc
jp
adc
leave
pop
inc
addb
outsb
popf
outsl
jne
pop
xor
je
cmp
push
fsub
push
fnstenv
ret
adc
add
adc
sahf
mov
ffreep
fadds
xor
jae
jecxz
sub
or
data16
sub
adc
jbe
mov
jmp
mov
pop
and
aaa
mov
loopne
aas
dec
and
js
out
dec
cltd
fwait
scas
lcall
repnz
in
push
out
leave
jp
leave
lcall
insl
mov
mov
lea
add
cmp
xchg
cmc
shr
jae
xchg
repz
mov
xchg
nop
mov
push
inc
push
push
ss
enter
sub
int3
scas
push
in
xor
pop
xor
arpl
aad
leave
pop
push
jb
push
lods
movb
adc
cmpsb
sti
mov
pushf
xor
mov
xchg
lods
cmc
mov
das
cli
sub
mov
movsb
push
int
and
arpl
dec
add
add
std
mov
xchg
adc
ljmp
ljmp
cmp
xchg
imul
sbb
xlat
popa
into
pop
jg
stc
pop
add
in
shll
pop
cltd
jae
xlat
sti
push
int
sbb
push
in
add
mov
into
add
inc
xchg
icebp
lods
add
pusha
imull
xor
cmc
ja
and
rcrl
add
test
sbb
movsl
loop
test
mov
mov
sub
or
adc
mov
xor
dec
cltd
out
cltd
out
arpl
add
xchg
adc
and
mov
cmpsl
pop
add
test
mov
xor
add
jns
sti
pop
push
and
loop
daa
jl
inc
in
test
mov
or
movsl
jo
or
imul
jb
outsl
dec
sub
js
add
pop
ja
movsl
add
cld
dec
cmc
loop
sbb
dec
add
or
ficoms
outsb
mov
sbb
dec
and
push
insl
lea
sub
addr16
push
pop
cmp
lret
clc
xlat
sarb
cmpsl
cmp
pop
scas
cltd
es
xchg
lret
push
fwait
inc
sbb
fdivr
sub
pop
cltd
xchg
insl
nop
and
pop
push
mov
andl
out
ds
aaa
fprem1
js
push
push
out
push
in
push
hlt
cwtl
insb
mov
je
repnz
ret
add
pop
mov
push
xchg
cmpsb
fisttpll
xchg
pushf
cmp
pop
cmp
loope
out
adc
aas
cltd
cld
mov
paddw
push
scas
cld
or
jmp
xor
cmp
add
cmp
mov
clc
aas
rorl
loope
iret
jecxz
les
out
jne
int
loop
fsubs
mov
nopl
out
lret
or
es
mov
push
insb
push
pop
sbb
arpl
andl
mov
mov
cmp
pop
sbb
or
mov
or
pushf
lret
dec
sbb
cld
fwait
shlb
sub
jbe
xchg
inc
insl
dec
pop
scas
cmp
pushf
fcmovne
mov
outsb
icebp
inc
dec
mov
dec
sbb
idivl
fsubrs
popf
sbb
mov
sbb
fwait
out
mov
push
sub
pop
inc
loope
mov
jp
loop
mull
iret
js
iret
pusha
ds
cltd
andl
sub
mov
xorb
and
in
dec
cmp
mov
cmp
movsb
push
pop
mov
into
inc
aas
stos
sub
das
arpl
sti
xchg
sub
iret
lret
mov
adc
sub
out
leave
mov
ss
mov
outsb
cs
lods
jbe
les
lret
jb
cmp
pop
inc
add
dec
xchg
hlt
imul
lods
idiv
pop
repz
add
ret
jmp
lock
std
fdivs
mov
fildll
shrl
cmp
aas
sub
lods
test
cltd
daa
jbe
jne
or
ret
sbb
fisttpl
call
aas
push
and
add
mov
jl
mov
scas
dec
pop
cmp
fwait
xor
adc
jmp
push
or
shll
fs
push
adc
add
imul
sub
dec
mov
pop
clc
test
push
fldl
push
push
inc
das
lock
inc
mov
pop
ja
insb
cmp
lcall
jmp
fidivs
test
addr16
sti
rol
xor
xchg
insl
or
imul
mov
mov
mov
mov
adc
inc
pop
rcll
cmp
or
insl
jle
mov
xchg
lahf
mov
shlb
mov
pop
sub
leave
popl
je
std
test
mov
repnz
xchg
lods
inc
shrl
pop
sub
mov
cld
in
scas
inc
lods
push
lods
push
pop
and
test
mov
out
adc
push
je
sub
mov
stc
sarb
dec
mov
cmp
cmp
cmp
movsb
sub
and
imul
inc
leave
pusha
xor
aam
sbb
stos
or
fwait
cld
push
mov
nop
xchg
fstpt
movsb
cmp
or
dec
ret
stc
mov
or
mov
sbb
adc
orl
les
int3
cmp
mov
cmp
lods
xchg
dec
pop
jmp
xchg
movsb
mov
data16
ljmp
lea
mov
cmc
dec
es
pop
and
in
aas
xchg
movsb
cmp
adc
shr
das
xchg
pushl
or
add
fsubs
in
pop
int3
push
and
push
cli
push
push
sub
popa
xor
sbb
sbb
sbb
call
xor
out
xchg
or
mov
jbe
sub
push
sbb
lret
aam
scas
sub
out
inc
mov
inc
in
xchg
cmpsb
ja
mov
out
or
pop
nop
xadd
sub
add
mov
loope
gs
es
jns
mov
jp
cmc
jb
ret
aam
data16
sbb
mov
xor
das
jge
jno
inc
inc
ds
int3
adc
jp
xor
push
lods
cmp
insl
jge
sub
imul
add
insl
test
in
insl
pop
push
notb
dec
cmp
push
dec
enter
fpatan
hlt
scas
ja
ja
mov
popa
dec
sbb
or
ja
inc
in
sti
sbb
ret
adc
leave
xor
mov
outsl
xchg
mov
jae
sarb
xlat
je
cltd
jmp
fmull
add
and
mov
into
sub
cmpsl
inc
lret
in
jns
fwait
int
xchg
cmp
fyl2x
and
popa
and
pop
test
sbbl
pop
mov
cmpsl
ja
mov
cli
rcl
push
getsec
into
ja
pop
push
sub
inc
mov
cli
jb
dec
push
int
sub
and
xchg
shrl
je
aam
insb
sub
and
outsl
cmp
in
jb
shlb
pop
add
xor
and
push
mov
lods
mov
sbb
stc
popa
lahf
inc
push
lret
xchg
fucomip
cli
sti
int
pcmpeqd
ds
add
or
test
mov
push
andl
insb
push
add
mov
je
cmp
out
xchg
cld
fcmovnu
mov
or
and
adc
lahf
mov
push
js
xor
mov
jge
or
pop
jl
aas
dec
push
cld
out
aad
jnp
fisubrl
cmp
jnp
mov
repnz
imul
sub
in
std
testb
arpl
jb
mov
inc
sarl
shlb
jge
xchg
inc
movsl
pop
bound
xchg
shlb
bound
jg
xorl
inc
add
sbb
mov
lahf
push
sub
xor
add
cmpl
in
mov
push
pop
call
jg
and
cs
in
push
xchg
in
xor
cltd
test
cmc
add
mov
fisttpl
and
sbb
nop
and
out
cmp
push
mov
cmp
test
dec
mov
and
test
call
test
stos
dec
frstor
cmp
inc
and
call
jmp
push
scas
in
outsb
mov
call
arpl
outsl
inc
jnp
fs
mov
test
mov
or
lods
out
pusha
ss
ds
or
jecxz
das
sub
jne
pop
inc
cli
aad
adc
xor
xor
movsb
fmull
push
sbb
xchg
jns
xor
jg
sbb
sbb
aam
adcb
jno
xor
push
lods
mov
lea
or
pop
pop
ret
scas
icebp
fcoms
pop
push
lock
pop
out
cli
movsl
cmp
mov
ss
gs
ja
add
aaa
sub
test
in
rcrl
jns
xchg
adc
cmc
cmp
int3
fldt
fsubrs
xchg
sub
lea
fucomp
outsb
std
cltd
lds
jns
shr
push
mov
ja
mov
or
mov
push
adcl
insl
push
add
das
scas
inc
ljmp
pushf
push
movsl
dec
push
mov
jmp
loopne
adc
mov
shlb
fstpl
jno
dec
mov
inc
aam
fnstenv
gs
fidivs
ret
je
jecxz
dec
les
aam
push
cmp
loop
mov
mov
les
movsl
add
cmpsb
les
xchg
loop
aam
pop
stos
fs
mov
outsl
mov
sub
jl
dec
sahf
popa
notl
outsb
inc
cwtl
xor
fwait
cmpsl
hlt
jl
test
dec
out
lret
pop
jno
mov
jne
pop
cmpsl
iret
xchg
mov
cmp
imul
pop
das
adcb
mov
add
pop
ss
loopne
push
jg
in
and
cmp
stc
or
xchg
roll
scas
sub
push
sbb
adc
lret
jmp
pop
xchg
in
lods
sahf
mov
fwait
cmpsl
sbb
and
arpl
add
dec
subl
adc
xor
jne
fwait
imul
sub
cli
cld
les
sub
inc
xchg
inc
and
mov
cmp
outsb
jg
inc
jle
push
ss
stc
popf
es
mov
jmp
or
sbb
dec
jg
shrl
xchg
mov
sbb
test
sbb
cld
cmp
iret
sub
jl
movsl
lods
aas
jb
and
or
inc
xchg
mov
xor
insb
pop
pop
mov
mov
mov
sar
fnsave
shld
cmp
sahf
sub
dec
hlt
mov
push
push
pop
lahf
mov
popa
add
mov
fnstcw
sbbl
test
lahf
stos
push
add
fnstsw
push
mov
or
in
add
xor
nopl
xor
jnp
mov
mov
jns
repz
iret
imul
mov
mov
pop
pop
mov
push
xor
leave
in
xchg
mov
mov
or
rolb
mov
into
pop
xchg
pop
scas
cmp
xchg
inc
xchg
push
std
sbb
jno
xor
cld
cs
clc
push
dec
pop
inc
aaa
fs
mov
pusha
pop
inc
pushf
mov
or
leave
xchg
sub
insl
jp
inc
mov
repz
iret
fneni(8087
mov
mov
scas
mov
sub
adc
or
lret
or
cmp
add
jg
xchg
cmc
adc
mov
sub
out
adc
cmp
inc
enter
sub
cwtl
pusha
push
push
inc
push
lea
push
cmp
sub
outsb
shrl
ja
ret
decl
shl
repnz
mov
lds
jb,pn
ret
cmp
jg
int
dec
sub
popf
adc
incl
mov
js
enter
mov
sahf
inc
bound
imul
push
mov
movsb
fldcw
test
xor
and
xchg
pop
mov
mov
pop
adc
mov
add
lea
cmpsl
out
lret
dec
std
popf
lods
push
loop
insl
sub
push
test
mov
stos
lahf
fmul
pop
outsl
enter
or
add
js
sti
in
adc
cmp
pusha
pop
pop
test
sbb
cld
xchg
loop
std
ret
mov
inc
and
sub
pop
or
loope
jg
push
insl
ret
movsb
inc
insl
cltd
rolb
mov
cld
jbe
push
mov
fstps
imul
fistl
add
push
and
addr16
call
xchg
leave
cld
mov
cmp
cs
arpl
xor
sbb
sbb
mov
leave
rcrl
adc
push
stos
popf
arpl
leave
push
xor
or
adc
xchg
ljmp
jbe
mov
mov
cwtl
ss
xor
mov
stos
xchg
or
jnp
or
mov
dec
lahf
cmp
shll
mull
mull
shll
jl
jl
or
push
iret
and
add
es
cwtl
jecxz
or
mov
stos
xlat
pop
push
xchg
cmp
out
ret
mov
xchg
xchg
dec
add
in
cwtl
movsl
imull
xor
in
std
lret
mov
imul
adc
adc
sub
add
xchg
daa
or
and
lret
xlat
pop
mov
sbb
push
aaa
sarl
jmp
add
push
adc
cld
std
pop
hlt
dec
sub
lock
pop
lods
jb
cwtl
sub
inc
or
mov
imul
ljmp
inc
sti
adc
sub
movl
mov
jmp
into
scas
lods
rorb
andl
fcomps
add
ss
mov
stos
xchg
test
jg
aam
push
jmp
es
jl
stc
mov
xor
loopne
cli
jmp
mov
fmul
xchg
lods
orl
and
frstor
mov
cld
imul
faddl
mov
repz
fldl
mov
outsl
mov
push
or
stos
mov
ja
sbb
lcall
sbb
hlt
push
repz
nop
mov
xor
mov
or
mov
sbb
shlb
or
dec
adc
or
lods
push
cs
pusha
hlt
scas
gs
push
adc
and
fs
out
push
push
and
or
pop
shll
inc
adc
out
pop
aad
repnz
pop
dec
sub
repnz
hlt
lret
loop
sbb
movsl
outsb
jl
stc
jecxz
movsb
jbe
dec
test
mov
mov
shlb
scas
mov
cld
inc
fwait
sub
cli
jl
inc
lock
scas
cld
sbb
stos
lds
mov
xor
aam
xchg
sub
fidivrl
add
sub
mov
ret
in
cli
sbb
sti
dec
mov
clc
negl
rcr
jno
shll
outsb
sub
dec
popa
sub
sub
in
cmp
imul
icebp
je
scas
inc
ds
sbb
sub
popf
imull
arpl
testl
cwtl
pop
out
cmp
je
mov
mov
jle
pop
mov
cmp
in
push
inc
or
cmpsl
xor
mov
cmp
xchg
sub
sbb
loope
or
pop
add
rcrl
pusha
jnp
fs
cltd
push
adc
loop
push
xchg
out
lock
mov
jle
cmpsl
insb
lods
sbbb
lock
pop
add
xor
mov
sbb
mov
ja
cltd
arpl
movl
sbb
dec
lcall
inc
cs
mov
pusha
add
inc
or
dec
mov
push
dec
lock
cltd
push
add
xchg
adc
jp
jae
fdiv
xchg
mov
or
mov
test
ja
pop
insl
adc
imul
ljmp
call
push
lret
mov
cmc
pusha
push
dec
add
mov
and
orl
inc
insb
xor
outsb
add
inc
iret
pushf
out
int
jp
xchg
lahf
ljmp
lods
jmp
cmp
jo
inc
out
mov
or
pusha
jge
mov
aas
mov
test
shlb
lret
pushf
into
gs
and
ljmp
pushf
xor
xor
jmp
push
mov
mov
cmpsb
loop
rcl
loopne,pt
mov
xor
jo
jnp
mov
dec
inc
mov
int
enter
sbb
jnp
add
popa
xchg
add
scas
pop
out
test
pop
sahf
pop
mov
and
inc
test
ja
loop
dec
in
add
cmp
fdivl
mov
jg
mov
pop
sahf
mov
pop
fs
rclb
in
stos
pop
das
dec
out
aam
inc
push
in
jb
pop
cmp
scas
lcall
xchg
lods
inc
enter
lods
pop
inc
nop
daa
aad
movsb
cmp
scas
call
adc
lcall
movsb
push
clc
pop
in
mov
mov
stos
xor
sbb
fists
inc
fadd
jb
xor
cmc
cli
xchg
jmp
or
jge
xchg
stc
pop
outsl
xor
pop
mov
inc
mov
inc
fstl
xsha256
cmpsb
adc
xchg
sub
xor
imul
sbb
data16
hlt
test
mov
adc
aaa
into
add
xor
mov
dec
cmpl
mov
fidivl
insb
add
fisttps
inc
fidivl
loop
dec
sbb
test
shlb
sarb
fimuls
fsubrs
or
pop
dec
xchg
sbbl
insl
cmpsb
cmp
sbb
dec
fistpll
xchg
cs
data16
mov
stc
jp
xor
jmp
adc
fisttpl
out
cld
xor
sub
insb
pop
cwtl
das
mov
mov
fucomp
or
xor
jmp
or
loopne
push
adc
mov
aam
pop
fdivl
push
pop
xacquire
push
call
sub
outsl
push
and
jbe
and
fsubs
mov
das
add
mov
mov
test
push
pushf
and
push
repnz
sub
mov
outsb
testl
icebp
fidivl
sbb
jecxz
pop
sbb
ffreep
pop
adc
loopne
push
popf
shrb
jmp
lock
dec
fistpll
testl
and
test
and
lret
mov
loop
xchg
mov
cmp
jecxz
in
cmp
jo
mov
push
int
ret
add
loop
adc
in
mov
imul
sbb
dec
in
mov
or
and
gs
pop
mov
js
jg
pop
lods
frstor
xor
sub
das
push
test
sti
mov
pop
repnz
push
adc
in
jno
bound
mov
or
adc
mov
inc
arpl
mov
push
cmp
out
mov
and
popf
xor
or
push
cmp
lret
stos
inc
andb
and
cld
and
inc
sub
jp
and
lret
popf
lea
in
add
fcomps
aas
jns
insl
cmp
xchg
cs
fnsave
cld
movsb
or
jle
jp
in
sbb
shrb
scas
inc
cmpsl
ljmp
scas
add
push
test
add
test
je
add
call
pop
hlt
cmpsl
pop
fdivl
jle
es
out
push
popf
push
jbe
pop
cmpsl
push
inc
fdivs
jge
mov
insl
popa
clc
lahf
push
pop
out
ss
xchg
mov
gs
sub
test
mov
fs
negb
test
mov
rcrw
pop
testb
sub
fstpl
mov
pop
fbstp
adc
push
dec
xchg
pop
hlt
rcl
inc
add
mov
mov
xchg
inc
fadd
fmul
or
out
mov
add
enter
or
adc
lret
aaa
into
lret
fs
pop
cmc
mov
xchg
shrl
lods
inc
pop
pop
cmp
aam
cwtl
push
out
int3
fadds
or
push
in
mov
push
mov
or
sub
in
cmpsb
pop
pop
ja
mov
shrb
xchg
ja
in
xchg
sbb
pop
nop
or
cmp
mov
mov
nop
add
xor
fidivl
gs
jle
and
adc
insb
xchg
or
popf
inc
popl
mov
addr16
cld
inc
mov
sahf
adc
int
pushf
or
mov
mov
stc
nop
xchg
add
mov
mov
mov
in
xchg
sbb
jbe
adc
imul
dec
jecxz
dec
iret
data16
repz
fwait
xor
shrb
add
jmp
gs
mov
add
adc
push
call
xor
shrl
inc
insl
add
pcmpgtb
cmp
in
lock
inc
cmp
jbe
push
movsb
sar
inc
xlat
sub
mov
xor
in
xor
inc
inc
fidivl
dec
jecxz
mov
mov
sbb
scas
jno
insl
add
movsl
test
mov
xor
pop
lds
mov
jecxz
imul
mov
lret
testb
push
or
push
mov
xor
jno
ret
mov
ret
dec
loope
push
cli
xchg
sbbb
adc
movsl
ss
outsb
fwait
xor
das
lock
dec
in
push
cli
xchg
inc
cltd
scas
inc
iret
out
cwtl
jmp
pop
and
ds
or
cmp
xchg
stc
enter
out
sub
fistpll
jl
insl
sti
jae
xor
jge
test
sbbb
mov
into
outsb
hlt
cmp
and
lcall
mov
mov
push
addl
sarl
aad
mov
je
and
popa
push
loop
xchg
sbb
lds
ret
ljmp
sbb
fcoms
jb
push
test
mov
imul
adc
int
into
cli
push
add
dec
in
aam
and
enter
and
ja
push
sub
pop
scas
movsl
dec
loop
lds
mov
sbb
dec
push
adc
cwtl
lods
repz
mov
adc
repnz
xor
add
leave
pusha
jns
pop
repz
jmp
pop
cli
adcb
cmp
nop
outsb
pop
xchg
mov
fnsave
int
add
cwtl
pop
push
mov
test
xor
shlb
mov
pop
pop
insb
add
cmpsb
push
insl
fadd
xchg
sub
icebp
data16
es
cmpsl
dec
dec
repnz
stos
adc
fadd
cmp
cmc
cmc
insl
and
push
and
jbe
mov
mov
les
imul
mov
movsb
dec
cmp
leave
imul
jns
mov
call
invd
adcb
sub
pop
pop
out
add
lods
mov
and
ret
clc
add
push
xor
jge
pop
gs
lahf
movsl
xchg
shll
mov
ss
test
in
xchg
imul
mov
int
mov
inc
sub
scas
pusha
pop
testb
popa
clc
in
sub
pop
xor
arpl
loopne
xchg
adc
rorl
cmpsb
or
stc
push
das
cltd
xor
pop
out
lods
jnp
sub
fdivs
popf
lahf
sub
aad
or
cmp
jnp
nop
jl
xor
push
jp
mov
sbb
cmc
xor
and
test
fmull
fs
xor
test
mov
cltd
xchg
jo
imulb
lock
insl
cwtl
aad
cmp
sbbl
and
xor
push
push
rclb
daa
mov
cmc
and
push
mov
and
xchg
sbbb
iret
push
pcmpgtd
mov
xchg
pop
or
shrl
mov
pop
cmp
roll
push
out
xlat
outsl
mov
fmull
push
js
jns
test
cmp
int3
add
adc
jmp
cld
and
cmp
into
pop
xor
addr16
loope
jno
imul
repz
out
sbb
data16
sbb
xor
call
and
vandnps
insl
jmp
xchg
mov
add
cmpsl
lret
ja
dec
cmp
dec
mov
outsb
scas
inc
add
data16
lock
popa
fwait
xor
out
mov
push
sbb
jl
call
mov
scas
pop
fldcw
leave
insb
fnsave
idivl
mov
sbb
xchg
cmp
lahf
lea
divb
sub
aas
jecxz
dec
mov
mov
sub
icebp
xchg
adc
in
test
sub
mov
add
test
jno
test
ss
or
out
and
dec
sbb
push
fucomp
sbb
push
negb
data16
shrl
sub
xor
out
ficoms
mov
orb
xchg
ljmp
add
mov
std
xor
mov
jns
push
mov
sbbl
or
adc
aas
jecxz
or
imull
or
mov
push
popf
xchg
in
leave
cmp
movb
int3
sbb
jmp
mov
mov
push
cmp
subb
js
cs
in
pop
push
xchg
mov
stc
subl
mov
aaa
adc
jl
decb
xor
sbb
cmp
pop
cld
inc
adc
adc
xor
lods
inc
lods
jl
cs
iret
iret
push
fstps
dec
jo
mov
pop
jne
jge
xchg
jo
sbb
dec
cmp
add
pop
shlb
aas
xor
pop
scas
jb
loope
insl
xchg
fsts
dec
testb
mov
rcrl
dec
popl
sub
das
shrl
imul
push
inc
test
mov
mov
dec
xor
mov
aas
popf
mov
fisttpl
mov
imul
xorb
aas
mov
addr16
inc
xchg
outsb
mov
outsl
lea
mov
loopne
sub
test
out
pop
adc
inc
add
pop
mov
sbb
lcall
lcall
xchg
mulb
dec
mov
cmp
jp
push
cmp
lods
gs
arpl
loopne
dec
cwtl
xor
pop
addr16
pop
jno
sub
cmp
mov
push
dec
stc
dec
mov
shr
inc
mov
ret
sar
mov
lds
in
in
fsts
mov
mov
push
add
xchg
push
add
pop
xor
cmp
insb
jl
sahf
cmp
mov
jg
jae
xor
xchg
nop
lea
loope
pop
jg
jp
dec
sub
lcallw
mov
xchg
mov
loope
lods
mov
jecxz
and
jb
loope
movsb
jns
movsl
sub
sub
imul
cwtl
andl
mov
mov
dec
jg
sti
pop
cmp
pop
mov
xchg
pop
jbe
pop
push
jg
orl
jbe
pop
out
adc
inc
mov
lods
xchg
test
in
ljmp
out
jp
ljmp
and
lods
pop
sbb
in
mov
sbb
sbbl
ja
je
xor
jmp
push
xchg
aas
es
push
add
cld
xchg
push
lret
mov
icebp
push
pop
shll
xchg
xchg
sbb
cltd
test
xchg
dec
lds
jg
arpl
adc
inc
xchg
pop
push
jae
xchg
xchg
ja
sub
stos
jns
insl
insl
lret
hlt
sub
mov
out
lea
aam
push
sti
call
enter
mov
sbb
int
mov
popa
ficoms
aad
sbb
pusha
xchg
loope
cs
rorl
add
pop
test
orl
jl
nop
mov
sub
popf
mov
adc
cmp
jle
inc
lds
jmp
jle
ds
jns
and
mov
addb
jmp
mov
fbstp
adc
iret
iret
sti
and
fiadds
out
cmpsl
push
rclb
xchg
add
lret
scas
shrl
shl
push
popf
in
mov
jmp
mov
or
pop
mov
fdivrp
xchg
add
enter
and
ja
mov
pop
add
sub
jo
jo
fcoms
jg
insb
test
add
rorb
add
dec
repnz
mov
push
cmc
mov
mov
test
lea
sub
dec
imul
push
lea
bound
add
imul
outsb
out
inc
dec
sbb
inc
test
out
cs
mov
sbb
adc
jecxz
xchg
in
adc
lcall
outsl
arpl
dec
inc
mov
pop
xchg
add
adc
inc
pop
mov
into
cmp
jns
mov
xlat
push
push
sbb
scas
pop
mov
shr
das
mov
mulb
dec
lcall
test
adc
aad
aad
xor
mov
add
mov
push
inc
pop
cltd
add
cmc
sub
push
int
inc
loop
push
jnp
fmuls
flds
jo
jb
push
scas
fs
test
pop
sub
adc
jl
and
sbb
jne
hlt
mov
mov
mov
xorl
rclb
mov
rolb
and
pop
sbb
out
sub
xchg
sbb
mov
cmc
mov
scas
in
dec
les
xchg
xchg
sbb
and
cmpl
lock
cmp
stos
xor
add
add
in
or
mov
jmp
scas
popf
mov
sub
shll
loop
xchg
imul
pop
aad
loop
inc
xlat
fidivrl
mov
and
jle
and
hlt
jp
int
xlat
sub
int
jnp
jns
bound
iret
loop
fnstenv
leave
inc
loopne
inc
fdivrl
pop
fistl
add
pushl
repz
in
iret
or
iret
inc
lret
adc
insb
hlt
push
std
bound
ljmp
std
movsl
lcall
cltd
out
inc
les
out
mov
push
in
mov
xchg
add
in
std
mov
movb
inc
fcoml
insl
mov
pop
xor
push
mov
cmpsb
push
xchg
cli
xor
cmc
int
out
repz
push
repz
mov
mov
add
insb
xchg
sub
lret
mov
sbb
push
cmpsb
xor
push
mov
mov
jno
lret
mov
jl
dec
loop
popf
jae
and
sub
jb
outsl
lcall
xchg
sbb
outsl
push
sbb
ds
mov
mulb
mov
xabort
enterw
sbb
mov
shrd
cmc
pushf
mov
mov
sbbl
sbb
repz
lds
nop
push
mov
adcb
sub
psubd
adc
xor
xor
mov
push
mov
lcall
outsl
push
les
rcrb
lcall
jge
bound
cwtl
ss
inc
mov
aas
adc
lds
or
mov
and
call
lock
inc
rcl
sub
out
mov
cmp
test
jmp
testb
ds
or
in
push
sbb
push
into
adc
xchg
ss
rcrl
adc
notb
xchg
repz
adc
mov
lods
inc
mov
lds
rcrl
stos
imul
sbbl
repz
mov
sarl
pop
sarl
jmp
idivb
cmpsb
and
repnz
dec
cmp
or
pop
gs
pop
mov
add
ljmp
and
movsb
jo
movsb
xor
jno
mov
pop
push
leave
mov
clc
loop,pn
xchg
add
adc
push
or
pushf
aas
in
lock
xchg
and
add
mov
in
xor
movsl
pop
test
out
imul
popa
clc
cltd
mov
lea
mov
cmpb
aaa
pop
xorb
hlt
mov
icebp
mov
testl
mov
xor
push
scas
jg
xchg
mov
outsb
and
mov
out
test
sarl
xlat
icebp
sbb
sbb
insl
jmp
jmp
scas
or
cmp
add
sarb
push
loope
lcall
orb
jecxz
mov
lcall
sub
jmp
mov
sub
mov
aaa
jne
add
cmc
cmp
daa
jno
filds
and
push
jg
mov
out
cmp
dec
mov
sub
je
and
sbb
sbb
aam
sti
adc
mov
std
add
dec
cmpsb
scas
addl
sbb
push
cmpsl
xchg
and
lock
outsb
jmp
jecxz
aam
mov
push
enter
jg
and
fsubrs
shrb
cmp
shrb
xor
das
jecxz
cmc
stos
inc
daa
add
adc
jmp
pop
andb
mov
mov
jo
mov
mov
jno
sub
mov
mov
and
mov
shl
add
addl
in
mov
cs
das
pusha
rorl
mov
enter
dec
rcl
les
and
cmp
les
imul
int3
and
lds
mov
dec
add
je
jo
inc
dec
pop
scas
jno
dec
mov
xor
test
xor
and
fwait
mov
pop
mov
mov
xor
xchg
cwtl
jbe
bound
adc
imul
mov
add
ficomps
push
mov
in
mov
mov
icebp
sub
jo
lds
arpl
pop
icebp
aad
fistpl
and
cmp
and
ret
xchg
dec
iret
data16
aas
out
popf
clc
daa
sti
inc
or
push
pop
fdivs
daa
lds
mov
add
pop
sti
xchg
sub
fnstenv
shlb
es
mov
ret
jnp
lcall
pop
insl
mov
lock
mov
icebp
xchg
mov
fidivrl
test
ficomps
mov
lock
inc
xchg
mov
lods
sub
out
mov
aad
mov
sbbl
sbb
roll
mov
mov
je
cmp
xchg
push
mov
push
push
pop
add
sti
out
test
add
sub
mov
sbb
cmpsl
xchg
cld
xchg
adc
shlb
xlat
sub
xor
xor
sahf
aas
mov
sbb
imul
test
loopne
scas
jne
mov
pop
add
mov
push
cmc
jns
int
dec
mov
into
insb
dec
mov
leave
push
push
aam
lret
and
aad
sub
shl
je
mov
sbb
shl
bound
xlat
jmp
ror
imulb
mov
shll
dec
les
pop
fistl
add
jmp
les
in
xchg
mov
pop
fisubrl
sbb
add
call
cmp
mov
pusha
in
xchg
and
jbe
fdivs
in
sbb
jle
or
cs
mov
inc
or
mov
repz
mov
mov
call
pop
mov
xlat
pop
jae
cmpb
mov
inc
jno
in
aad
orb
test
fcompl
push
out
sbb
sub
adc
sbb
pause
jb
stos
xchg
fucom
sahf
adc
fnstenv
lds
push
in
mov
mov
fwait
pop
fidivrs
pop
pop
xchg
jp
pop
out
dec
push
add
push
inc
cmc
and
inc
repnz
stos
icebp
cmp
gs
jae
push
mov
push
pop
gs
pusha
js
sbb
xor
je
push
add
inc
flds
sti
xor
dec
neg
aaa
les
scas
inc
cmpsl
xor
mov
fsubrl
mov
lea
pop
imul
movsb
test
dec
xchg
xchg
xchg
outsb
stc
inc
jb
js
popf
mov
out
push
out
bound
fidivrs
mov
adc
cmp
data16
cwtl
js
call
aam
mov
push
mov
repz
cmp
jnp
dec
sbb
popf
mov
sbb
push
xchg
sub
imul
clc
dec
loop
xor
imull
dec
and
and
into
inc
push
in
sbb
mov
insb
inc
sti
xor
mov
notb
inc
push
shlb
xlat
fwait
xchg
mov
repnz
scas
into
test
movsl
or
dec
jecxz
push
and
adc
jae
leave
cmp
xor
neg
sbb
inc
mov
adc
lds
jnp
lahf
xchg
push
sub
jl
fidivl
dec
das
in
pop
mov
push
inc
sbb
mov
push
jae
lea
xchg
loopne
adc
cld
sub
out
jecxz
mov
mov
insb
lods
cmp
push
jle
ret
dec
mov
ficoms
or
push
pop
into
add
in
dec
xchg
mov
out
sbb
adc
jle
sub
data16
int
adc
sbb
popa
push
adc
popf
ja
cltd
cmp
movsb
pop
pop
jbe
push
sbb
xor
xchg
sbb
cmp
xchg
cmp
xchg
dec
mov
outsl
clc
pop
dec
cltd
inc
test
pop
mov
stc
pop
pop
notb
mov
std
pusha
cmc
sahf
xor
xor
sbb
neg
jno
mov
test
or
push
fdivl
push
xchg
lds
shrb
push
hlt
lds
or
mov
and
push
xor
xchg
jbe
mov
imull
mov
loopne
inc
in
test
push
rcrb
dec
int
or
sti
cmc
push
fidivrl
or
jb
xor
insb
add
xor
mov
lock
inc
movsb
jl
sarb
popf
or
cld
popf
push
add
lahf
stc
pop
or
loopne
insl
fsubp
lret
adc
jle
fsubs
jl
and
jmp
dec
int
stc
xor
lret
fildl
xchg
inc
mov
stos
and
jmp
inc
and
jne
push
out
xchg
pop
les
or
mov
inc
mov
adc
xchg
jno
aam
arpl
das
ficompl
or
push
iret
in
jmp
cmpsb
clc
popl
and
movsl
and
fsubs
xchg
push
sbb
test
lret
ljmp
inc
sbb
nop
jg
jle
mov
fdecstp
xor
push
push
cmp
inc
mov
jl
or
jle
ds
pusha
test
push
popa
add
inc
sbb
push
iret
xchg
popf
mov
fstpt
insb
xchg
xchg
popa
pop
sub
rorl
xor
stos
add
xchg
dec
sbb
jmp
cld
sbb
enter
addl
je
mov
in
fidivs
shlb
outsl
mov
cmp
rclb
jp
outsb
dec
xor
mov
add
xor
mov
jmp
js
nop
inc
pop
das
in
push
js
inc
shld
pop
roll
jle
add
fisubl
pusha
clc
mov
std
inc
mov
sub
and
pop
fistpll
adc
pop
xor
loope
into
and
movsl
adc
push
in
fsubrp
test
push
test
mov
xor
sub
lahf
jnp
xchg
lods
or
mov
lahf
jns
stos
sbb
nop
push
mov
out
pop
repnz
cmpl
sbb
dec
jmp
cmp
xlat
call
pop
mov
fists
out
mov
ds
mov
sub
test
out
add
or
push
xchg
mov
push
xor
cltd
test
jae
inc
aas
or
scas
std
fwait
xchg
jmp
push
mov
out
cld
inc
jmp
pusha
lods
scas
iret
mov
movsb
aam
lcall
jne
adc
jne
xchg
push
orb
jle
pop
jbe
or
pop
inc
movl
test
and
inc
or
adc
pop
xor
xchg
cmpsb
iret
test
pop
mov
in
rcrl
push
popa
pushf
fwait
cmpsl
sub
cli
repz
and
inc
enter
and
push
sub
xchg
mov
sbb
inc
andb
push
pop
in
movsb
jge
xlat
scas
jmp
jge
mov
cli
dec
aad
aam
dec
out
add
mov
jae
lcall
xlat
decl
pop
add
test
aaa
or
fbstp
xor
cmp
mov
push
xorb
xor
xchg
xchg
js
leave
inc
cltd
outsb
lahf
nop
push
mov
cmpsl
mov
mov
jo
jnp
into
xlat
push
js
imul
add
fucomp
out
push
lds
sarb
shlb
and
push
fsubrs
push
add
dec
cli
adc
mov
lock
fcmovb
pop
fists
and
sub
jae
xchg
dec
pushf
enter
push
jne
lods
inc
lret
xor
cltd
mov
outsl
push
fincstp
stos
jbe
cli
add
fisubl
sbb
mov
jns
xor
cld
xchg
xchg
push
push
mov
xchg
inc
jae
pop
lcall
xor
mov
push
jge
shrb
ljmp
cmp
dec
mov
call
mov
and
jne
xchg
outsb
icebp
insl
lcall
xchg
sbb
ds
xchg
jle
dec
ret
into
sub
mov
push
out
adc
sahf
xchg
xchg
push
fadds
pop
hlt
mov
inc
lret
inc
out
les
negl
mov
jp
rclb
mov
fnstenv
pop
shlb
cmp
mov
cld
sbb
iret
in
or
iret
fdivrp
xchg
xchg
lock
stos
stos
cld
pop
lret
imul
jmp
push
shr
sarb
shl
add
stos
jmp
sbb
icebp
cmc
pop
rclb
out
mov
cmc
mov
daa
mov
mov
jb
mov
les
cmp
scas
xchg
popf
mov
push
test
test
out
cmpsl
enter
fisubrs
xor
arpl
push
leave
mov
jle
sub
inc
sahf
mov
icebp
mov
push
sub
bound
out
push
mov
sbb
lea
and
into
fdivl
ficoms
icebp
call
sub
sbb
mov
pop
jl
jo
xor
mov
es
aas
jbe
lcall
aad
mov
inc
xlat
jmp
lods
pop
fdivr
adc
cli
xchg
lods
inc
rcll
sbb
clc
inc
loop
sbb
ret
into
xchg
sub
shlb
ljmp
pop
mov
jmp
jnp
xor
popa
loop
mov
xchg
add
lea
out
xchg
repz
inc
out
pop
dec
movsl
outsb
inc
pop
mov
inc
xchg
sub
xor
push
dec
adc
cmp
rol
inc
rcr
inc
ret
mov
fadd
clc
pop
add
int
out
cmc
hlt
mov
or
cmp
gs
pusha
bound
popf
popa
dec
aam
pop
mov
rol
adc
aad
icebp
int
fwait
notb
mov
mov
push
outsb
mov
mov
mov
fisubrl
loopne
cmp
or
or
dec
mov
adc
xchg
cmp
and
lods
inc
xchg
inc
leave
adc
out
xor
enter
repz
jno
push
aaa
cmc
or
in
call
mov
jae
test
cwtl
insl
lcall
test
pusha
jo
cmp
jns
popf
pop
mulb
jnp
mov
xor
lods
outsl
sub
loope
sub
loope
sbb
push
iret
ljmp
out
cmp
pop
jne
nop
jbe
pop
test
xchg
sub
leave
loopne
sti
add
dec
ss
xchg
dec
push
shlb
outsl
sbb
test
sarl
repnz
or
cs
icebp
inc
dec
sub
andb
cwtl
mov
xchg
sub
and
mov
aas
inc
test
ja
shrl
cwtl
mov
mov
jmp
push
sbb
fidivs
pop
lds
stos
dec
jecxz
in
mov
push
xor
cmp
push
mov
mov
clc
les
das
xchg
sub
loop
jge
mov
mov
add
pop
icebp
push
mov
sub
sbbl
shll
mov
into
sub
sbb
inc
ficoms
xchg
sub
movsb
lea
mul
shrb
sbb
xchg
rclb
push
movsl
mov
fidivs
fsubrs
or
std
xchg
inc
sub
pop
sbb
lods
mov
xchg
pop
inc
mov
jle
xchg
mov
sbb
dec
repnz
mov
mov
lahf
mov
shl
adc
add
pop
repnz
push
jl
mov
cltd
mov
lds
es
out
mov
enter
stos
inc
stc
sbb
leave
dec
push
lret
or
pop
sub
xchg
jne
jg
adc
outsl
sbb
stos
roll
lret
xchg
std
adc
movl
movsl
cwtl
adc
pop
inc
mov
jecxz
xchg
inc
dec
loope
mov
pop
out
push
jbe
out
inc
frstor
xchg
std
push
iret
frstor
push
icebp
xor
jo
stos
inc
xor
enter
sbb
lret
psllw
dec
movsl
adc
daa
adc
adc
scas
mov
push
insb
xorl
out
sahf
int
xor
dec
jp
cmp
fldl
xchg
jb
cmp
repnz
jmp
xchg
mov
push
inc
pushf
leave
cmp
in
cli
mov
lcall
call
jnp
out
xor
inc
add
lcall
cmpsl
mov
inc
dec
orl
mov
pop
cmp
ret
aam
fstpl
rcrb
cmp
or
sbb
sbb
fadd
in
mov
xchg
adc
xchg
int3
pavgb
out
cwtl
xchg
add
jne
iret
pop
imul
sub
shlb
aam
lods
and
mov
jae
scas
idivl
mov
dec
es
push
movsl
cmpsb
push
pop
bsr
sub
sbb
loope
shrl
inc
js
cwtl
sarb
add
sub
jmp
cmp
call
mov
dec
sub
cmp
rcr
out
push
xchg
shll
mov
xchg
mov
test
out
in
mov
sub
ljmp
jnp
xor
dec
jbe
cmpsb
decl
adc
out
out
and
imulb
and
adc
test
imulb
push
mov
mov
int3
push
stos
xchg
cltd
inc
push
cltd
push
xor
daa
scas
out
pop
aaa
insb
or
adc
fisubrl
and
mov
lret
pop
sbb
clc
mov
arpl
mov
xchg
inc
xchg
fcom
rorl
imul
dec
sbb
jb
xchg
and
add
sbb
mov
mov
ficomps
and
add
data16
mov
pop
mov
out
dec
jge
lret
mov
cli
add
or
and
outsb
leave
and
movsb
pop
push
inc
shrl
xlat
jge
in
adc
inc
dec
aad
xor
or
jnp
mov
mov
jge
pop
sub
jge
cmp
xchg
pushf
mov
jae
sub
inc
ret
dec
push
mov
push
lahf
pop
mov
lods
inc
lea
mov
mov
ljmp
add
or
and
cmpsl
inc
aam
cmc
mov
addr16
jl
push
sbb
mov
sub
loopne
fimull
dec
jge
shrl
pop
jb
fnstenv
add
je
pop
notb
and
push
jns
aas
cwtl
or
push
fwait
and
xchg
stos
inc
jl
dec
in
and
int3
jge
lock
mov
xchg
adc
orb
int3
andb
adcb
ljmp
jno
adc
dec
pop
mov
dec
xor
aam
xchg
xor
inc
mov
sub
sub
movsl
das
shlb
out
jmp
xor
cmp
rolb
jmp
cmp
mov
mov
ds
out
xor
aam
jl
and
sarl
movsl
dec
or
add
xchg
lret
js
sub
in
lret
push
incb
dec
andl
lret
inc
aad
ret
add
sub
sbbl
fs
mov
pop
mov
pop
push
test
adc
adc
fs
jae
ja
sub
mov
cs
sbb
push
mov
lock
outsl
hlt
mov
mov
aam
int3
xchg
aaa
lcall
cmpsl
ja,pt
xor
sub
jo
sub
inc
lods
xchg
mov
aad
sbb
pushf
ljmp
pop
ret
xchg
icebp
pop
sbb
fcoms
dec
lods
adc
jg
inc
xor
mov
stos
push
testl
in
das
and
xor
mov
mov
outsl
je
popa
std
popa
mov
jmp
daa
mov
pusha
jmp
cmpsl
inc
or
mov
cmp
ja
push
leave
shll
push
mov
mov
dec
dec
push
mov
sti
sub
jle
mov
insb
cmp
rorb
sbb
push
rcl
dec
mov
or
or
or
adc
dec
movsb
and
jae
xchg
mov
xchg
negl
xorl
addr16
jg
jb
mov
mov
xchg
cmp
iret
push
negl
call
shrl
ss
push
bound
cmpl
call
call
inc
fcompl
ret
jns
sub
or
pop
pop
add
hlt
push
out
cwtl
mov
xor
insl
cmp
outsl
inc
mov
mov
call
dec
or
cmp
xor
lods
lock
add
cmp
push
clc
and
dec
xor
subb
inc
fldcw
test
cltd
mov
push
mov
mov
adcl
inc
adc
ds
sub
sub
pop
clc
ljmp
sub
into
lds
inc
push
sub
repnz
test
jmp
mov
aaa
test
in
adc
lea
push
fcom
sub
or
dec
or
mov
xchg
aas
adc
xchg
or
xor
dec
clc
pop
lret
xchg
xchg
xor
mov
mov
mov
mov
into
xor
xor
stc
pop
inc
xor
test
pushf
aas
lcall
and
mov
adc
mov
adc
aam
lret
mov
movsl
mov
and
daa
idivl
or
mov
sub
inc
cmp
and
stos
push
divl
cmpsb
sub
xor
sahf
push
bound
cmpsb
hlt
rclb
fidivrs
test
cmpsb
push
push
mov
add
or
cmpsb
je
xchg
inc
leave
imul
mov
test
sub
fmuls
adc
dec
or
dec
jmp
das
cmpsl
adc
dec
stos
sub
mov
sbb
xor
lret
pop
mov
xor
fistpl
mov
pop
dec
sysexit
cmp
scas
inc
es
dec
xchg
and
hlt
pop
test
in
cmp
xor
mov
lcall
in
jns
popf
inc
in
divb
popf
sub
pop
add
cmp
mov
inc
lcall
notl
fsubrl
dec
int
das
mov
push
push
stc
mov
test
shll
or
incb
xchg
cmp
insl
out
mov
pop
add
mov
mov
or
std
gs
cmpl
pop
mov
fldl
pop
add
push
lret
rcll
jge
xlat
sub
addb
stos
push
pop
push
xlat
jp
imul
lahf
clc
arpl
pop
jnp
mov
scas
xor
jmp
push
cli
mov
mov
movsl
cmc
pop
cmp
jae
fdivs
jae
sub
cmp
sti
fistps
adc
mov
sahf
hlt
pop
aam
jmp
pushf
add
fadd
sarl
push
enter
orb
dec
inc
into
outsl
icebp
mov
mov
and
leave
dec
adc
mov
cwtl
inc
mov
mov
jne
movsb
orb
mov
sub
jl
loopne
inc
imul
addr16
push
dec
icebp
cmp
and
ss
dec
adc
pop
std
cwtl
inc
adc
jmp
dec
jg
mov
cmp
xchg
imul
insl
out
jge
inc
adc
orb
imul
pop
ds
scas
cwtl
inc
dec
adc
push
hlt
cwtl
aaa
sbb
push
inc
lcall
stos
add
sub
cmpsl
test
ds
jle
leave
mov
mov
sarl
mov
mov
movsl
adc
decl
fldt
test
push
jb
lods
loop
rorl
pop
sti
sub
or
xor
sub
rcll
int
es
les
rcll
adcl
int
lahf
or
and
int
jno
mov
leave
js
into
jnp
push
push
adc
lret
mov
jmp
loopne
sub
mov
scas
or
movb
sbbb
sarl
dec
popf
inc
and
insb
jmp
jae
push
jne
push
add
fwait
mov
das
lods
add
pushf
movsb
pop
inc
rclb
daa
loop
jns
out
lods
arpl
xor
lahf
lret
ljmp
dec
rorb
mov
jnp
lcall
popa
test
movsb
bswap
jge
jno
or
sti
ja
dec
push
stos
imul
mov
cmc
pop
or
sahf
cmp
xchg
nop
sbb
ret
mov
and
jmp
cmc
scas
sub
aas
cltd
cmp
call
fistpl
mov
imul
or
push
xor
sbb
sub
push
mov
fisttpl
mov
adc
rorl
cmp
imul
dec
inc
cmp
xchg
test
mov
enter
int
mov
loopne
and
shl
sub
repnz
stc
aam
sbb
popw
cmp
cwtl
pop
push
int3
js
rorl
dec
xor
scas
pop
add
mov
mov
out
lahf
lods
negb
inc
or
xor
push
cli
push
or
jmp
dec
xchg
jl
sahf
inc
fsubrs
sbbb
jle
outsl
out
fiaddl
cmp
jno
and
loopne
xor
rcll
rorl
add
sarl
dec
dec
or
xchg
testb
mov
jb
cltd
or
mov
add
scas
push
add
pop
ror
mov
shrl
mov
mov
int3
in
cmp
xor
enter
mov
into
xchg
sub
adc
hlt
das
adc
mov
jge
mov
xchg
cmp
das
test
mov
mov
lods
movsb
sub
test
push
ror
dec
adc
pop
mov
jbe
fcom
popf
out
pop
mov
outsl
push
js
fdivrl
jbe
pop
divb
daa
mov
xor
and
and
mov
pop
shrl
jge
enter
cmp
and
pop
sub
pop
jp
push
push
mov
pop
xchg
push
stc
push
inc
or
jge
sti
mov
sarl
mov
into
xchg
loopne
orl
rorl
into
jmp
sbb
jns
push
jnp
jns
pop
movsl
ss
movsb
pop
std
mov
xchg
cmp
jmp
rorb
mov
ret
call
ljmp
cmp
int3
mov
adcl
popf
enter
mov
punpcklbw
inc
je
sahf
movsl
mov
rorl
mov
and
sahf
js
or
iret
add
dec
testl
mov
inc
jmp
mov
cmp
rorl
stos
int3
pop
lock
adc
jp
or
xchg
jnp
fldl
xchg
or
pop
lret
mov
xchg
ljmp
imul
es
xor
lods
mov
ds
jne
xor
or
mov
jnp
aad
rolb
bound
push
mov
pop
scas
adc
dec
cltd
movsl
enter
and
in
jnp
in
icebp
outsl
sbb
jmp
repz
pop
dec
xlat
test
mov
pop
jnp
rolb
sub
add
ret
and
sahf
aaa
popf
jns
ds
les
scas
cmc
insb
lds
mov
iret
filds
loope
jge
push
cmp
not
sahf
inc
addr16
jge
jne
mov
sbb
rorb
out
xchg
add
mov
jns
push
mov
xchg
sbb
aaa
cwtl
insl
dec
lock
test
jmp
add
cmp
rorb
orl
dec
mov
or
addr16
cmpsl
fnstsw
mov
mov
mov
test
jns
add
int
mov
adc
lds
jne
adc
xor
jp
popa
clc
pop
lea
sarb
add
iret
xchg
in
lahf
lcall
mov
jbe
dec
mov
push
adc
mov
pop
mov
sub
aad
jnp
sub
popa
jp
rcrb
pop
add
lret
test
aas
mov
subl
sub
cmc
fistps
mov
int
jbe
out
adcb
sub
stos
push
mov
cmp
daa
xor
pop
add
xchg
pop
mov
push
mov
cmpsl
or
mov
add
test
stos
xchg
sbb
enter
mov
and
test
fidivrs
jbe
sbb
sbbl
rcr
pop
test
push
xor
pop
pop
cld
das
push
rclb
sti
scas
sub
sub
cmpsl
rcrb
xor
fimull
mov
add
jb
xchg
les
mov
movsb
aam
sbb
repnz
roll
mov
data16
jo
jae
pop
sbb
imul
inc
enter
enter
pop
cli
inc
stc
pop
fucom
push
add
cmp
pushf
cmp
mov
mov
push
adc
push
adc
sar
xchg
jo
jmp
ds
lahf
out
adcl
mov
push
dec
shrb
mov
pushf
and
add
lret
xchg
rclb
mov
rclb
sbb
js
xlat
jbe
jno
add
xchg
in
cli
mov
sub
cmp
outsl
aam
jns
mov
push
add
push
xor
call
dec
and
inc
adc
cmp
jb
push
out
sub
out
and
mov
pusha
negb
aam
inc
test
js
lcall
pop
mov
xchg
call
leave
sbb
cli
xlat
cmp
movsl
loopne
and
mov
push
stc
jp
adc
and
jno
adc
ss
adc
lahf
inc
xchg
inc
jmp
inc
fstpl
mov
adc
push
cmp
mov
cmp
out
rorb
adc
and
cltd
xchg
movsl
sub
int
or
fsubs
int
in
pop
sbb
mov
loop
jecxz
xchg
sti
inc
push
jne
mov
int3
insl
nop
inc
fcoml
sbb
jns
mov
fs
fiaddl
push
push
cs
mov
ljmp
fs
cmp
imul
jmp
xlat
adcb
jmp
pushl
adc
sbb
mov
cld
arpl
and
sbb
push
jne
stos
xor
adc
lahf
mov
push
sbb
xchg
pop
dec
mov
lahf
and
cli
pop
out
cmp
push
cwtl
dec
push
add
inc
pop
clc
test
push
jmp
cmp
or
cmpsb
xchg
cmp
jle
push
lods
cltd
gs
pop
inc
sbb
xor
das
push
add
xchg
inc
out
xchg
jecxz
jno
pop
cld
push
jo
pop
jno
push
add
outsl
ret
jno
mov
inc
icebp
loop
and
xchg
dec
nop
fdivrs
jne
inc
sarb
cmp
mov
push
jns
cltd
mov
stos
or
daa
ret
and
sub
push
cmp
mov
jmp
icebp
cmp
push
aad
and
pop
mov
mov
push
std
jo
jno
dec
or
mov
xchg
inc
mov
leave
fst
jo
or
xor
stos
mov
cmp
addb
xor
jle
popf
push
cld
mov
stos
sbb
jl
sarl
imul
inc
mov
psubw
inc
in
dec
jle
sbb
dec
or
pop
jb
test
nop
daa
add
scas
inc
stc
das
fs
push
sbb
sbbb
in
nop
daa
push
lcall
xchg
aas
mov
jle
cmp
into
stos
mov
shrb
rcll
cmp
and
movsb
fstl
fdivs
or
mov
scas
enter
loopne
push
je
aaa
adc
daa
inc
and
sub
pushf
aas
and
fdivrl
cmp
adc
xor
add
cmp
icebp
pop
and
mov
mov
mov
or
into
popf
aas
push
test
inc
mov
xchg
cmp
cmpsb
add
sbb
dec
or
inc
icebp
and
mov
adc
xchg
cmp
in
jo
outsb
sbb
popf
arpl
lcall
faddl
push
dec
push
mov
xchg
cmp
test
and
ds
ds
adc
pusha
sbb
dec
mov
push
cli
ja
xchg
aaa
in
les
shll
jg
fisttpl
clc
gs
push
notb
sbb
ljmp
xchg
cmp
cmpsl
daa
loope
dec
or
cld
xchg
push
mov
dec
dec
insl
subb
test
in
jae
out
fs
inc
pop
mov
xlat
jge
movsb
jle
mov
dec
adc
cmp
xchg
in
lods
fcmovnb
insb
cmc
in
or
pop
xchg
insl
cmc
lret
dec
jo
bound
xor
loop
enter
sarb
mov
repz
scas
mov
lods
xor
fiadds
mov
enter
cwtl
inc
pop
adc
mov
lods
repz
or
jmp
jmp
orb
adc
scas
sbb
fisttpll
jmp
fwait
jo
pop
enter
dec
fldl
adc
inc
outsl
out
xor
mov
daa
sbb
push
jno
jg
xchg
inc
adc
mov
scas
sub
rol
lods
repnz
pusha
jmp
enter
movsl
xor
out
sti
push
push
std
and
repnz
xor
inc
mov
and
xchg
inc
pop
inc
jne
stos
dec
in
push
mov
mov
cwtl
add
cwtl
les
movsb
or
dec
push
in
outsb
out
cld
bswap
pop
pop
mov
mov
test
mov
leave
out
jae
inc
push
cld
das
or
fsubp
and
leave
cmp
and
jne
fstps
insl
out
stc
pusha
hlt
mov
mov
or
incb
sbb
push
push
jns
js
mov
mov
jge
and
shlb
popf
imul
jae
js
dec
mov
cmp
cmp
xchg
in
inc
or
into
pop
cld
sbbb
push
mov
xchg
inc
rcl
cs
pop
or
sub
mov
xor
sbb
mov
addr16
fiadds
loopne
filds
sub
call
les
stos
push
insl
inc
mov
test
adc
adc
daa
ja
add
cmp
inc
outsl
std
adcb
fnstcw
dec
mulb
jb
cs
mov
nop
inc
push
lret
xchg
inc
mov
jo
scas
dec
or
mov
aad
sahf
xor
movsl
cmp
push
push
ljmp
std
fs
cltd
enter
mov
getsec
jg
pushaw
jo
bound
stc
and
ss
insb
pop
mov
xchg
clc
mov
jecxz
and
scas
xor
cmp
jl
push
xchg
daa
ret
lea
lret
mov
fadd
xchg
mov
test
push
add
sub
ficomps
fimull
in
mov
mov
adc
test
sti
pop
loope
and
pop
or
dec
ljmp
leave
sub
sbb
ljmp
jg
jne
mov
mov
and
bnd
fstpt
negl
adc
lcall
xchg
jo
roll
ret
out
inc
push
lahf
inc
fcoml
sarl
movsl
jb
adc
xchg
push
adc
cmp
rorl
push
lods
das
leave
sbb
test
sbb
in
jo
xor
popa
mov
pop
dec
pop
dec
pushf
repz
mov
and
cmp
mov
rclb
adc
add
pop
enter
out
push
adc
push
cmc
sti
pop
incl
in
imul
add
mov
pop
mov
aam
cltd
push
or
xorb
scas
rclb
addr16
lahf
inc
mov
repnz
mov
stos
pop
add
mov
xchg
ljmpw
rolb
jl
nop
push
adc
inc
stos
mov
xchg
cmp
mov
sbb
loop
movsb
aaa
out
jo
mov
ret
jnp
cmp
pop
insl
popa
in
pop
mov
jge
jge
gs
pop
push
jae
ret
xlat
loope
jp
adc
cld
add
cltd
out
lock
sarl
sahf
jae
out
pop
lds
shrl
mov
dec
or
rolb
aam
repz
in
addr16
in
enter
mov
push
cmpsl
lock
dec
xor
jge
xor
insl
mov
shlb
imul
std
xor
iret
data16
mov
cmp
pop
shll
push
pop
add
xor
stos
pop
repnz
roll
mov
fstl
inc
icebp
add
mov
aam
das
test
or
adc
pop
divl
pop
pop
fmulp
xchg
test
test
ficompl
stos
add
gs
push
insl
not
stos
insl
idivb
mov
mov
adc
fnstsw
int3
xchg
bound
popa
dec
add
fcomps
lahf
inc
or
dec
mov
mov
xchg
cmp
fimuls
cmp
cmp
xchg
in
cs
mov
and
xlat
ja
xor
and
jae
sub
xchg
inc
cmc
repz
add
fsubrl
fnsave
lods
xchg
pop
fnstcw
int3
push
ljmp
inc
fldcw
jb
and
ret
in
std
sbb
std
fs
sti
dec
in
xor
mov
dec
adc
fildl
push
jp
adc
cmpsl
sub
test
mov
scas
xor
js
lret
repz
mov
mov
lret
xchg
fists
xor
pop
test
xor
cmp
es
and
jle
cld
inc
sbb
sbb
ss
cmp
dec
jne
std
and
ret
ljmp
sbb
call
ficomps
mov
sub
dec
ud1
lock
sahf
lods
mov
int3
js
add
enter
cmp
push
pop
xchg
aas
push
mov
imul
jg,pn
leave
jle
mov
adc
sub
loopne
loopne
adc
in
stos
sbb
repz
lods
or
inc
loop
outsl
cs
dec
or
in
das
adc
out
jg
sti
data16
push
js
je
xchg
pusha
and
leave
xchg
push
xor
and
test
add
hlt
rorb
add
jno
orb
data16
cld
xchg
xchg
out
sub
inc
inc
cmp
cltd
cmp
jmp
mov
cmpsb
xchg
stc
mov
mov
lds
shlb
pop
mov
scas
jb
push
jae
xchg
xchg
ja
cmp
mov
push
xchg
cmp
sub
sbb
dec
shrd
btc
leave
push
pop
cmp
adc
inc
cmp
call
clc
push
add
mov
pop
mov
and
mov
xchg
fwait
push
in
sahf
adc
xchg
jg
pop
fsubl
pop
mov
mov
mov
test
push
rcll
sub
gs
imul
ret
push
or
arpl
clc
pop
int3
fwait
lods
sub
adc
call
mov
mov
dec
jnp
cli
or
iret
xchg
test
jnp
aad
ret
adc
jbe
dec
loopne
xchg
mov
ret
out
mov
mov
jp
sti
dec
adc
into
sbb
lret
daa
mov
or
xor
push
cli
mov
mov
je
add
lods
cltd
add
test
inc
sbb
je
incl
dec
subl
cmp
shlb
imul
pusha
js
cmp
jle
sbb
std
lods
cltd
cmp
rorl
gs
push
sbbl
cmp
pop
inc
or
mov
push
cld
cld
iret
add
inc
out
mov
inc
xchg
pushf
inc
mov
orl
das
mov
movl
pop
test
repnz
loop
enter
fs
cwtl
sahf
jno
shlb
or
mov
xchg
cmp
mov
outsl
jmp
inc
aad
dec
arpl
inc
js
jmp
gs
inc
out
or
push
hlt
addb
adc
sub
fs
xor
rorl
out
xchg
cmp
mov
sbb
aaa
mov
mov
in
jmp
insb
jo
mov
mov
jg
sarl
inc
or
shrb
adc
inc
xor
int
lahf
xchg
inc
and
sbb
xchg
lahf
ss
nop
insb
hlt
xor
repz
add
sarb
pop
sbb
mov
stos
fwait
aas
jl
add
je
popa
jmp
ret
mov
push
cld
dec
add
jecxz
xchg
xchg
cmp
mov
lahf
inc
cmc
mov
popa
aad
fiaddl
test
dec
adc
rolb
int3
in
xlat
jp
icebp
xor
hlt
cmpsb
jne
pop
loope
mov
iret
mov
fwait
jns
imul
adc
mov
or
lods
xor
sub
cmpsb
adc
jge
add
pop
pop
push
inc
or
mov
sub
cmpsl
jecxz
jno
idiv
pop
sti
call
repz
xlat
mov
in
loopne
sbb
fstpt
leave
mov
mov
jb
xchg
insl
sbb
or
fs
pop
dec
or
leave
mov
std
sub
gs
ret
jbe
mov
imul
fdivrs
aas
movsl
pop
imul
es
and
pop
fcos
gs
inc
rorb
xor
mov
mov
xor
inc
in
jne
sarb
xor
cld
add
sahf
inc
movsb
jb
stos
xor
pop
add
sub
ds
imul
das
aas
lcall
test
bound
push
andb
ss
leave
in
sub
xchg
jge
lods
sub
push
movsl
seta
jae
sbb
pop
loop
jno
push
rep
test
mov
leave
jbe
cld
data16
daa
stos
or
outsl
repz
scas
popf
inc
fsubrl
sarl
pop
sub
lods
jns
mov
mov
jmp
mov
cs
fldl
or
pop
movsl
sub
std
stos
xor
loop
repz
or
jg
int
outsb
psubb
pop
mov
pushf
cmp
aas
popf
xchg
sbb
ljmp
daa
mov
movsl
adc
mov
test
or
imul
xchg
dec
xchg
stos
sub
lock
mov
scas
out
lahf
aaa
push
mov
push
add
insb
lret
pop
push
call
mov
and
out
ret
mulb
test
es
imul
xor
cmc
pop
ljmp
jbe
mov
pushf
inc
and
xor
nop
jo
lret
data16
out
jmp
lods
xor
adc
repz
mov
pop
fnstenv
cmp
in
inc
adc
pop
std
or
push
adc
mov
test
and
outsl
adcb
or
arpl
addr16
jns
pop
faddl
or
mov
mov
mov
jmp
jne
push
pop
rolb
xlat
nop
sbb
rorl
xor
cmp
adc
mov
pop
add
fst
mov
pushf
in
pop
scas
xor
add
movsl
xlat
jecxz
mov
jnp
dec
sub
mov
pop
lret
sub
mov
cmp
popa
push
and
outsl
lahf
jbe
jmp
std
sbb
push
or
jle
xchg
iret
pop
mov
dec
adc
jb
flds
cmp
push
es
arpl
push
in
jne
and
cld
xchg
inc
ret
xor
sbb
sub
xor
adc
sub
cmp
add
dec
das
pop
aaa
lahf
call
clc
icebp
mov
dec
fwait
inc
xchg
push
ss
pop
cld
arpl
loopne
dec
jle
jnp
or
in
pop
iret
xchg
out
iret
xchg
shl
ss
push
or
mov
mov
ja
inc
push
cmp
lods
and
jno
daa
cmp
pop
stc
ss
aad
or
pop
pop
std
insb
mov
test
ja
mov
movsl
and
nop
pop
sarb
xchg
test
cld
push
adc
fwait
ds
push
outsb
ljmp
xor
xchg
or
es
ja
cmp
pop
imul
jl
pop
icebp
or
fdivrs
pop
test
pop
add
sbb
stos
sbb
jno
scas
dec
adc
sbb
dec
jecxz
mov
mov
sub
and
jo
jnp
std
pop
fildll
xor
add
fwait
cmp
data16
xchg
dec
ret
pop
jl
dec
adc
add
push
inc
or
cmpsb
cs
jo
mov
out
sbb
das
rcl
stc
je
xor
lahf
insl
lock
dec
push
inc
bound
xchg
adcl
iret
aam
inc
or
into
xchg
sub
xchg
dec
clc
insw
ret
movsl
fidivrs
mov
or
xchg
inc
fdivrs
lret
jae
movsl
xor
addr16
rolb
pop
repnz
ljmp
cmp
iret
mov
xchg
jb
loop
xchg
xlat
mov
mov
stos
add
fstpt
movsl
mov
mov
sbb
leave
mov
lahf
cmp
and
out
cmp
bound
mov
mov
pusha
fnstenv
fsts
stos
or
test
cmp
ret
les
out
mov
in
outsl
push
lea
scas
cltd
fisttpl
aad
into
int
imul
mov
xchg
aaa
aam
jno
sbb
inc
push
sbb
push
daa
push
xchg
cmp
xor
shlb
test
arpl
jbe
std
lret
mov
adc
push
pusha
jmp
jae
mov
fistpll
fcoms
sarl
pusha
push
roll
cmp
outsl
ljmp
hlt
pop
or
mov
inc
test
dec
or
mov
jnp
in
sub
scas
loopne
inc
jno
mov
sahf
pop
stc
nop
in
xchg
inc
outsb
into
mov
mov
jge
fcompl
leave
jp
les
mov
inc
setae
movb
ljmp
les
inc
lret
inc
cltd
lods
sub
popa
cmc
out
into
dec
pop
push
bnd
push
push
movsb
xor
cmp
jge
out
and
inc
fidivs
ljmp
or
push
ficoms
mov
add
jecxz
movsl
xor
out
outsl
arpl
fdivl
lods
rolb
inc
sbb
call
jl
sbb
ret
aaa
sahf
stos
sbb
mov
cltd
inc
cmp
orb
fldl
and
sbb
adc
add
mov
clc
cmc
aam
mov
testl
lcall
xchg
add
inc
loope
sub
sbb
insl
ss
clc
pusha
sar
orl
movsb
jp
xchg
and
push
lret
repz
in
xor
sbb
add
mov
or
fwait
cmpsb
sub
pop
jmp
imul
aas
popa
jb
push
sub
aam
or
rorb
add
ss
cmp
fs
ljmp
into
sub
inc
add
aad
cltd
xchg
dec
insl
out
aad
fidivs
xchg
jne
enter
xor
das
hlt
pusha
cmpsl
sbb
int
mov
mov
mov
and
mov
adc
inc
cwtl
les
mov
popf
inc
push
leave
faddl
xchg
xor
mov
fnstcw
mov
inc
fstpt
stos
inc
sbbl
xchg
pop
adc
push
jbe
pop
inc
inc
out
push
xchg
in
push
nop
popf
cmp
fstpt
sbb
and
cmp
ds
enter
lea
xchg
js
fdivrs
push
pop
stc
cmp
in
fsubl
jae
pop
jns
pop
mov
cli
popa
fisttpl
and
movsb
sbb
bound
bswap
push
nop
les
sti
lahf
cmp
xor
adc
test
fdivrl
mov
push
stc
aad
dec
adc
add
inc
cmp
in
jno
sub
fadds
jo
das
dec
or
test
mov
ret
fnstsw
cli
pop
scas
cltd
xor
jbe
out
insl
pop
jno
test
pop
std
pop
popf
rorl
imul
push
add
jmp
repz
jecxz
mov
jmp
push
shrl
dec
or
mov
pop
fs
arpl
fstpt
cwtl
push
xor
sub
jg
mov
inc
adc
mov
js
dec
ficoml
les
xchg
arpl
mov
cmpsb
pop
repnz
mov
jns
sbb
push
mov
test
cltd
inc
jmp
sti
lods
ss
scas
leave
xchg
popa
and
pushf
inc
adc
inc
pop
add
sbb
aad
dec
sub
sub
add
jno
mov
arpl
frstor
xor
test
out
sub
pop
testb
daa
mov
pusha
mov
jle
fwait
cmp
pushf
arpl
pop
repnz
test
mov
jno
inc
fmuls
xchg
xchg
lds
pop
negb
mov
sbb
scas
cmp
push
iret
fwait
xor
icebp
mov
loopne
cmpsb
adc
outsb
test
sub
mov
test
mov
adc
dec
imul
mov
rcll
jl
cmp
adc
inc
iret
ret
pop
add
and
and
js
mov
call
aas
enter
pusha
call
rorl
push
popf
in
pop
icebp
popf
add
js
lock
inc
fimull
test
mov
xchg
sti
jg
sub
dec
popf
xor
or
mov
pop
adc
es
testl
lret
push
imul
in
xor
sbb
ds
call
cs
outsl
push
ret
dec
lds
lea
mov
stos
inc
imul
leave
pusha
mov
fsubp
jle
fwait
cmp
pushf
in
pop
repnz
test
mov
jno
inc
fadds
xchg
xchg
lds
pop
negb
mov
sbb
adc
cmp
push
into
fwait
xor
icebp
mov
loopne
cmpsb
adc
outsb
cmpsl
xor
mov
test
mov
adc
dec
imul
lahf
sub
out
jl
cmp
adc
inc
iret
ret
pop
add
and
and
js
mov
call
ds
pop
call
rorl
push
popf
jecxz
pop
icebp
popf
add
mov
lock
inc
fiaddl
test
clc
fldenv
xchg
cli
jg
sub
shrl
dec
popf
xor
or
mov
pop
adc
and
inc
testl
lret
add
test
push
call
cs
outsl
push
ret
pop
and
jecxz
aad
stos
inc
push
mov
pusha
mov
fucom
jle
fwait
cmp
pushf
popa
in
pop
repnz
andl
mov
jns
jno
inc
fadds
xchg
xchg
lds
pop
negb
mov
sbb
adc
cmp
push
int
xor
mov
mov
fisttps
cmpsb
adc
cmpsb
xor
stc
orl
sbb
add
insl
xor
sahf
sub
call
lods
adc
inc
into
ret
pop
add
and
push
mov
call
cmp
pop
jmp
rorl
pop
sahf
loop
pop
icebp
pushf
add
mov
out
push
inc
fildl
cmpsl
stc
fsubs
dec
xchg
stc
adcb
mov
push
dec
sahf
xor
cmp
mov
cmpsl
mov
fidivl
mov
clc
ja
dec
in
cwtl
push
lods
leave
push
imul
ljmp
fidivrl
jmp
sub
dec
lds
mov
aam
lods
inc
addr16
add
mov
fsubr
jg
lcall
pusha
in
pop
repnz
jns,pt
jo
inc
flds
es
notl
mov
pop
jns
adc
push
pushf
xor
mov
mov
fimuls
cmpsb
fnstenv
xor
mov
orb
sbb
lods
dec
aam
add
insb
xor
popf
daa
xchg
pop
mov
movsl
cmp
adc
inc
int
pop
jmp
es
and
jns
mov
inc
call
or
arpl
lds
mov
pop
ljmp
scas
or
lcall
adc
push
inc
faddl
arpl
popa
mov
xchg
testl
ss
repz
popf
mov
test
lock
scas
das
filds
nop
jne
dec
in
xchg
pop
scas
push
insb
add
mov
fdivrs
push
ljmp
jno
mov
loopne
adc
lods
inc
repz
mov
fucompp
orb
aad
sub
pop
repz
jp
outsb
rolb
add
popa
clc
push
jecxz
dec
adc
ss
push
mov
mov
fcoml
cmpsl
or
cs
clc
testb
scas
dec
shrb
add
xor
pop
push
mov
cmpsb
cmp
inc
lret
les
popa
nop
daa
xchg
push
jecxz
push
mov
inc
out
add
cmp
pop
mov
pop
jmp
mov
or
cwtl
jmp
mov
in
push
inc
faddl
mov
mov
xchg
cmc
sbbl
out
lahf
ss
hlt
mov
fwait
mov
test
and
stc
nop
jae
dec
in
xchg
pop
scas
push
insb
add
movsl
mov
xlat
cmp
push
test
sub
pop
jge
adc
lods
inc
repnz
mov
fldl2t
orb
ds
sub
sahf
pop
jmp
and
adc
inc
fiaddl
cwtl
das
shll
clc
push
loop
dec
adc
jg
test
aam
addr16
popf
xor
mov
mov
fistl
cmpsl
or
fidivl
sub
clc
cmc
jg
jecxz
push
pop
scas
inc
shrl
add
int3
lcall
ljmp
jb
aas
lret
cld
pusha
nop
daa
xchg
sbb
scas
inc
in
add
cmp
pop
mov
pop
jmp
mov
aad
lods
or
xchg
daa
mov
jmp
inc
faddl
mov
mov
xchg
hlt
sbbl
in
lahf
ss
hlt
mov
lcall
mov
lods
xor
fldl
nop
jb
dec
in
xchg
pop
scas
lds
add
movsb
mov
cmp
imul
jno
mov
fimuls
jnp
xor
cltd
and
and
or
pop
sahf
pop
call
and
adc
fiaddl
mov
clc
push
loope
dec
adc
push
cmpsl
xor
imul
xor
xchg
mov
ficoml
cmpsl
or
jno
sub
lds
clc
hlt
jle
jecxz
adc
push
add
int3
cltd
and
ljmp
jb
ds
les
pop
nop
daa
xchg
sbb
jp
mov
inc
in
add
aaa
rcrl
repnz
jmp
mov
ds
stos
or
xchg
std
daa
mov
ljmp
xor
pop
mov
nop
repz
in
lahf
ss
hlt
mov
cltd
mov
test
push
stos
xor
fdivrl
stc
nop
jno
dec
in
xchg
pop
scas
les
add
mov
push
ljmp
jno
mov
fisttpll
jnp
xor
cltd
and
mov
xlat
jmp
aad
sub
sahf
pop
out
repz
mov
imul
fiaddl
lea
clc
push
loopne
dec
adc
cmpsb
xor
imul
xor
xchg
mov
fsts
cmpsl
or
jno
sub
lds
repz
jecxz
adc
scas
inc
iret
push
add
int3
cwtl
and
ljmp
jb
cmp
pop
nop
daa
nop
sbb
jp
mov
inc
jecxz
add
rcrb
icebp
push
jmp
mov
ds
stos
or
xchg
cld
daa
mov
jmp
or
cli
rcrl
dec
repnz
jecxz
lahf
ss
hlt
mov
cwtl
mov
test
sbb
ds
nop
jo
dec
in
xchg
pop
scas
ret
dec
insb
add
mov
push
ljmp
jno
mov
fmull
jnp
das
lods
inc
popa
out
add
mov
and
or
sahf
pop
out
repz
jl
mov
push
inc
mov
stc
push
fidivs
pop
movsl
xor
imul
xor
mov
mov
cmpsl
or
jb
sub
lds
stc
nop
bnd
jecxz
adc
scas
inc
int
add
gs
and
jmp
jae
movsl
or
cmp
lds
xchg
sub
scas
scas
inc
loope
add
xor
and
xchg
aas
inc
test
mov
xchg
cli
sub
out
inc
fnstsw
lcall
pop
mov
sbb
scas
insl
loope
mov
mov
mov
stos
xchg
fdivl
test
enter
xchg
outsb
cli
dec
out
nop
sbb
jle
ss
mov
push
jmp
repz
or
ficoml
jl
sub
add
mov
and
push
xchg
aas
ret
daa
or
adc
ss
push
mov
cli
dec
fdivl
sbb
les
mov
adc
popf
daa
das
pop
mov
dec
in
adc
mov
lret
imul
arpl
into
xchg
push
mov
push
mov
in
out
test
mov
pop
negb
sub
mov
fildll
lcall
and
test
inc
xlat
aas
cmpsb
or
xchg
clc
sub
sub
inc
fidivrs
fwait
xor
pushf
gs
int
mov
sbb
lods
xlat
outsb
filds
cmp
testb
push
adc
test
fnsave
xor
xlat
cmp
xchg
insb
clc
push
out
mov
mov
dec
outsb
add
adc
push
in
arpl
stos
inc
and
enter
xchg
sub
cwtl
out
lret
inc
pop
jmp
fwait
sbb
int
mov
and
add
inc
xlat
shll
cmc
adc
mov
lretw
sti
xchg
sti
dec
fidivrl
sbb
ret
hlt
xor
mov
mov
test
fwait
and
sti
xchg
out
ja
in
bndldx
sti
popa
cmp
xchg
sbb
and
push
in
in
test
or
ret
hlt
pop
xchg
sub
stos
mov
fwait
cltd
dec
data16
in
test
movsb
or
nop
imulb
shlb
jge
in
inc
fidivrs
pushf
xor
lcall
mov
sbbl
lods
fsubrs
aas
mov
lea
xchg
mov
stos
and
je
movsl
xor
cmp
xchg
imul
out
lea
mov
dec
outsb
add
adc
push
in
lock
inc
and
pop
jne
xchg
sub
xchg
out
leave
sub
fwait
sbb
fs
and
add
or
adc
mov
gs
inc
fdivr
xchg
sti
dec
fnstcw
sbb
shll
mov
mov
test
lcall
xchg
in
jbe
in
push
sbb
cli
pusha
cmp
xchg
sbb
in
jecxz
test
or
rol
repz
xchg
sub
stos
mov
fsubl
fwait
cwtl
std
iret
data16
mov
in
test
mov
pop
testb
jge
jecxz
inc
fidivrs
pushf
xor
cltd
gs
lret
push
mov
sbbl
stos
fsubrs
mov
lea
xchg
mov
stos
and
je
movsb
xor
aad
sti
xchg
push
push
out
mov
mov
dec
outsb
add
setl
popa
out
stos
inc
and
enter
xchg
sub
xchg
out
enter
pop
jmp
int
scas
cmp
mov
add
or
adc
mov
fs
test
sti
dec
fdivrs
sbb
shlb
mov
mov
test
cltd
and
push
mov
dec
in
or
insb
add
pop
cmp
nop
sbb
in
loop
test
or
rol
repnz
xchg
sub
test
add
xchg
cld
iret
cs
ljmp
fdivrs
or
mov
sub
and
inc
inc
fidivs
pushf
xor
push
mov
sbb
fsubrs
cmp
testb
push
adc
and
xor
aam
sti
xchg
imul
sbb
jns
aaa
into
push
fwait
mov
int
push
in
pusha
out
stos
inc
and
enter
xchg
sub
xchg
out
sub
fwait
sbb
scas
cmp
mov
add
or
adc
mov
arpl
inc
fdivr
test
sti
dec
xlat
mov
sbb
mov
hlt
mov
rclb
test
cwtl
and
push
mov
dec
in
or
mov
insb
add
pop
cmp
sbb
in
loope
test
or
mov
xchg
sub
test
dec
fisubl
fwait
xchg
sti
iret
sub
mov
orb
fdivrs
mov
pop
testb
jge
loope
inc
fidivs
pushf
xor
gs
enter
xchg
sbbl
test
mov
lea
nop
mov
stos
and
je
mov
sti
xchg
push
mov
mov
inc
outsb
add
or
cs
in
pop
in
stos
inc
pop
xorl
jb
xchg
sub
xchg
out
daa
scas
inc
pop
out
fwait
sbb
lods
cmp
mov
add
mov
pcmpeqb
mov
movb
sbbl
dec
mov
sbb
mov
hlt
mov
iret
adc
xchg
and
push
mov
dec
in
or
mov
lds
pop
cmp
mov
mov
dec
scas
push
in
loopne
test
or
mov
xchg
sub
cmpsl
mov
fldenv
xchg
cli
iret
data16
and
jg
inc
fdivrs
mov
pop
testb
adc
inc
inc
fidivs
pushf
xor
xchg
gs
push
mov
sbb
test
outsl
fidivrl
mov
lea
dec
adc
jg
fnsave
xor
shlb
push
out
mov
mov
inc
outsb
add
or
mov
lret
sub
stos
inc
push
xorb
aas
enter
xchg
sub
es
inc
pop
out
fwait
pop
jp
lods
cmp
mov
decl
or
or
jl,pn
pusha
lds
testb
cld
dec
aam
dec
push
push
sbb
mov
mov
adc
xchg
pop
xor
push
mov
xchg
call
or
mov
ret
insl
add
pop
cmp
mov
mov
dec
lods
push
out
fisubrs
inc
fwait
pushl
xor
xchg
sub
mov
xlat
arpl
data16
in
test
inc
fnstcw
sahf
or
mov
sub
and
inc
fidivs
popf
xor
xchg
gs
lds
push
test
sbbl
cmpsl
fnstenv
cmp
mov
adc
je
mov
sti
xchg
gs
call
mov
fnstenv
into
or
push
in
pop
jmp
inc
sbb
ds
pusha
jo
xchg
sub
xchg
out
les
inc
push
in
pushf
push
js
fs
aaa
and
std
mov
mov
fistpl
or
sub
pop
ret
inc
sbbb
inc
sarl
sbb
mov
cmc
mov
int3
adc
xchg
push
xor
dec
mov
xchg
out
push
out
pop
sbb
hlt
pop
cmp
mov
push
out
fsubrl
inc
lcall
pusha
out
push
xchg
sub
mov
push
popf
xchg
test
sub
in
test
inc
fidivrl
pushf
or
mov
sub
pop
lods
jg
fiadds
fidivs
popf
xor
xchg
gs
les
push
test
sbbl
cmpsb
fnstenv
cmp
mov
mov
lods
jge
fnsave
xor
shlb
sti
xchg
fs
push
call
mov
outsl
push
jne
aaa
into
or
push
in
pop
ljmp
scas
cmp
xchg
sub
xchg
out
ret
and
pushf
adc
and
cld
mov
mov
ficompl
or
mov
pop
ret
repz
xor
sarb
sbb
mov
cmc
mov
lret
adc
xchg
sbb
cld
xchg
in
push
out
push
sbb
repz
cmp
mov
out
inc
cltd
cld
jne
cs
xchg
sub
mov
push
popf
xchg
cmc
iret
data16
mov
mov
jp
inc
fidivl
fwait
or
mov
sub
push
stos
jg
fnstsw
inc
fidivs
popf
xor
xchg
gs
ret
push
mov
sbb
movsl
fnstenv
aaa
mov
mov
mov
lods
jl
fnsave
xor
iret
xor
xchg
arpl
push
call
mov
outsl
push
je
aaa
into
or
push
in
pop
jmp
jae
scas
cmp
pusha
outsb
iret
xchg
sub
nop
out
ret
inc
push
jecxz
pushf
adc
int
test
and
sti
xchg
mov
fstps
or
mov
pop
roll
jle
xor
sarl
sbb
mov
cmc
mov
lret
sti
pop
fidivs
sbb
leave
dec
mov
xchg
in
push
out
add
outsb
add
mov
lea
stos
inc
cwtl
sti
jne
sub
dec
xchg
sub
mov
push
popf
xchg
hlt
iret
data16
mov
jns
inc
fidivl
lcall
mov
sub
sbb
ds
fisubrs
popf
xor
xchg
gs
ret
push
and
sbb
mov
mov
mov
lods
jnp
fnsave
xor
into
xor
xchg
out
push
call
mov
outsl
push
jae
aaa
into
pop
xchg
lea
sub
pop
call
jae
lods
cmp
pusha
insl
into
xchg
sub
out
shll
inc
push
loop
pushf
adc
cmpsl
xor
mov
cli
xchg
mov
or
or
mov
pop
rolb
jge
xor
sarb
sbb
lods
in
loopne
fwait
add
pop
mov
xor
lea
sti
out
cmc
or
xchg
shl
in
sbb
test
sbb
sbb
mov
push
jecxz
stos
mov
and
dec
sar
mov
out
lahf
xorb
ljmp
repnz
movsl
mov
xlat
mov
push
adc
dec
or
iret
push
mov
xor
adc
push
mov
repz
adc
out
popf
xor
lret
cli
stos
add
cmp
fsubp
int3
int3
nop
fs
cltd
stos
aam
dec
lahf
inc
jg
stc
push
mov
cs
fdivr
jg
mov
cli
jns
xor
xor
test
daa
shll
icebp
sahf
mov
pop
mov
push
cld
fwait
cli
jns
and
sub
or
call
xor
add
stos
into
out
pusha
dec
mov
ret
jo
dec
ret
ficoms
test
aam
dec
jo
adcl
add
push
jnp
sbb
push
faddl
das
dec
add
push
xor
sbb
xor
xor
adc
out
stc
pop
mov
movsb
push
jb
jne
or
test
sub
inc
jl
cmp
xorb
jbe
clc
stos
pop
cmp
mov
bound
push
mov
add
test
js
xlat
dec
jle
mov
nop
out
xor
dec
adcb
fistps
push
dec
test
lods
xchg
bound
es
push
xchg
or
je
rol
repnz
push
pop
pop
out
cld
push
sbb
sti
mov
inc
arpl
aam
cwtl
shrl
mov
sub
andb
mull
fidivl
xchg
mov
mov
adc
jmp
data16
adc
mov
xchg
mov
xor
push
in
int3
push
adc
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
sti
push
call
sbb
xor
push
cltd
cmp
ret
lcall
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
lds
int3
shll
push
dec
xchg
xor
aad
pushf
aas
and
push
sbb
or
clc
jl
je
div
mov
les
je
jmp
jb
leave
test
aas
mov
out
and
pop
rcrb
xchg
mov
inc
pop
cmp
sbb
inc
add
sub
cmp
in
stos
lods
out
bswap
mov
mov
push
lea
mov
ss
ficompl
rclb
jecxz
negl
push
mov
dec
dec
mov
cwtl
add
test
test
adc
sbb
pop
popa
mov
lret
push
out
xchg
mov
cmpsb
testl
daa
popf
ss
loop
.byte
