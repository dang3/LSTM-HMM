push
xchg
std
lcall
insl
push
aas
aad
rcll
dec
fdivs
loopne
and
pushl
pop
movsl
push
inc
iret
inc
push
lcall
mov
clc
stos
adc
adc
pop
xor
lods
ljmp
or
and
mov
in
popa
cmc
aad
arpl
xchg
loop
gs
aaa
fidivrl
jmp
or
cli
inc
push
cld
mov
loopne
dec
and
sahf
xchg
arpl
xor
ljmp
popa
fld
mov
lods
add
out
mov
iret
sti
adc
lods
and
fs
xor
mov
or
lret
mov
pop
adc
jl
enter
std
cs
sub
incl
xor
dec
adc
xchg
cli
outsl
jge
adc
jge
jbe
ja
nop
sub
jle
call
mov
insl
xchg
mov
sub
mov
jb
sub
stos
cmpsb
dec
iret
add
mov
call
push
popf
push
mov
sub
movsb
into
cld
jecxz
xchg
mov
outsl
push
mov
add
call
sub
pop
inc
xor
lret
sub
in
pop
pop
and
sbb
pusha
cmp
cmp
sub
jle
xchg
lahf
add
xor
mov
test
jns
xchg
call
ja
sbb
cmp
mov
mov
jle
dec
lahf
cmc
jg
mov
lcall
aad
loope
pop
cmc
cmpsb
sbb
ret
ss
sub
fnstenv
inc
fwait
cli
xchg
jg
pop
mov
push
and
fcompl
hlt
sub
mov
bound
or
fcomip
pop
cs
add
jno
imul
pop
dec
and
pop
push
fcos
fisubrs
adcl
cmp
pushf
add
adc
add
xor
xor
pushl
jns
sahf
loop
mov
fwait
cmp
add
jg
lret
gs
xchg
call
jne
xchg
sar
cmpsl
mov
cmp
dec
xor
jnp
mov
fdivrs
mov
inc
cwtl
test
call
pop
mov
lds
leave
jae
push
jbe
adc
dec
or
sbb
stos
xor
jmp
mov
xchg
std
and
lahf
mov
dec
push
lds
sbb
xlat
pop
or
jle
inc
enter
cmove
sub
mov
xchg
jge
bound
push
pop
gs
jb
faddl
ljmp
jmp
enter
inc
mov
sbb
dec
jno
aad
pushf
sti
sbb
pushl
cld
in
icebp
push
cmp
sbbb
loopne
popf
rorl
sarb
imul
incl
lods
jp
adcb
cld
or
xchg
lods
mov
pop
ret
push
jnp
inc
mov
xchg
mov
decl
inc
lods
or
dec
jecxz
add
cmpsl
rcl
jecxz
pop
or
popf
adc
cs
pushl
dec
xor
xor
jge
jl
divl
or
cmpl
aas
out
sub
aaa
dec
rol
jg
push
popl
cmp
pushl
loope
jne
adc
outsb
cwtl
rcll
ret
add
mov
jmp
mov
ret
imul
cmpsb
movsl
mov
mov
inc
in
lods
ret
es
sbb
sub
loop
movsl
and
dec
xchg
movd
fistpl
push
push
ljmp
sti
sbb
cmp
sub
mov
inc
dec
cmp
enter
es
fcomip
pop
loopne
ret
mov
jnp
push
and
ficomps
or
or
dec
mov
fmuls
xor
cld
lds
jnp
push
jle
xchg
and
fdivrl
jg
mov
mov
out
push
sbb
mov
push
push
jl
sbb
outsb
stos
add
rcrl
mov
and
ss
repz
ja
idiv
sbb
loopne
sbbl
push
dec
jecxz
pop
lock
xchg
flds
mov
push
decl
lret
mov
cmpsl
cltd
test
out
test
imul
sahf
push
enter
jp
aam
cmp
or
xor
popf
and
or
jg
lcall
cmp
jle
stc
xchg
and
andb
call
xchg
mov
mov
popa
insb
jle
push
cs
dec
popf
dec
fwait
push
ds
sbb
cmp
mov
lock
mov
ja
std
out
push
stos
sbb
pushf
inc
jnp
push
inc
push
jno
movsb
pop
call
sti
int3
bound
cwtl
fldenv
out
fists
lock
pop
mov
repnz
adc
mov
jmp
sub
clc
push
jge
int3
cmp
out
test
pop
cs
mov
dec
push
sbb
cmp
jl
mov
loop
ret
adc
testl
mov
sub
call
mov
pop
call
out
push
xor
mov
mov
push
bnd
int
jne
ja
test
fs
inc
bnd
sbb
inc
iret
push
sub
cli
ljmp
mov
popa
pop
xor
add
mov
mov
inc
xor
adc
jg
in
jle
push
mov
icebp
shr
push
jae
pushf
out
ljmp
pop
mov
incl
in
loop
cmp
clc
cli
push
bound
es
roll
adc
pushl
xchg
nop
into
pop
daa
xlat
in
pop
cmp
or
call
or
jmp
icebp
call
into
mov
loop
adc
and
add
fcomip
jmp
push
mov
aaa
mov
outsb
loope
loop
mov
pusha
inc
lret
incl
cmp
cmpb
fsubl
jae
cmp
in
adc
scas
fwait
mov
push
mov
inc
adc
into
ljmp
dec
or
and
cli
push
mov
mov
outsl
or
fistl
int
jbe
pop
mov
inc
decl
add
sub
rcr
cs
xchg
mov
stos
adc
sbb
sar
aaa
pop
cmc
xor
push
push
cs
imul
xchg
movsl
jmp
jge
inc
jne
xor
adc
mov
and
sbb
dec
cmp
adc
mov
jae
ret
ljmp
fwait
inc
cmp
mov
outsb
nop
sbb
aaa
rol
lcall
mov
xor
aas
add
or
pop
cmp
inc
dec
mov
sub
decl
cli
mov
jge
hlt
mov
hlt
inc
xchg
leave
sub
idiv
ljmp
or
mov
int
inc
rcrb
jge
stos
xlat
push
mov
in
cld
jmp
cltd
cmp
out
jns
ficoms
hlt
mov
xor
gs
fbld
inc
ficomps
ret
mov
dec
mov
mov
call
cld
dec
adcb
mov
call
test
decl
sti
cmp
icebp
insb
add
jle
rcl
movsl
bound
or
pushl
fidivs
push
cmp
and
scas
stc
inc
nop
cmp
xlat
push
jg
and
fwait
mov
add
inc
fistpl
aad
fsubrl
aad
pusha
ljmp
jmp
adc
mov
lret
hlt
lcall
fs
mov
mov
dec
lock
cmp
cmpsl
repnz
repnz
cld
int3
mov
cmp
jnp
xor
jmp
mov
mov
subl
lret
mov
xlat
mov
xchg
shrb
or
inc
inc
inc
loop
sbb
mov
or
je
cmp
or
add
mov
sbb
in
incl
out
inc
sub
push
mov
push
mov
bound
sub
adc
add
add
pop
pop
test
mov
outsb
je
or
sar
call
cwtl
and
jbe
imul
mov
shrb
inc
es
in
xor
js
ret
ljmp
incl
ss
dec
gs
xor
cmp
mov
mov
lret
mov
js
mov
arpl
lret
cmp
xchg
aas
jmp
add
shlb
roll
or
xor
add
sub
int
mov
testl
fidivrl
and
mov
sub
or
xor
popl
movsl
out
andl
popa
dec
push
in
clc
lock
mov
popa
popf
and
jecxz
repz
jo
clc
dec
lock
lea
dec
sbb
cmp
fildll
xchg
dec
pop
lock
xor
sub
mov
mov
sti
adc
and
add
loopne
or
call
sbb
ja
add
mov
cmp
sub
mov
inc
and
cmp
pusha
outsl
push
add
mov
out
out
lahf
cmp
sti
mov
adc
sub
lahf
xchg
lret
ljmp
imul
jmp
in
cmp
sbb
mov
ja
insb
addr16
sbb
les
xchg
mov
std
neg
dec
cmpsb
jl
and
mov
pop
test
je
mov
add
sbb
sbbb
xor
cmpsb
mov
sbb
std
jne
into
jl
sub
adcb
fbstp
sahf
mov
cmp
jg
mov
inc
loopne
ret
push
push
sub
out
xchg
cmp
add
mov
andb
ja
loopne
jmp
icebp
fdivrl
loop
gs
jmp
push
rolb
rcr
daa
sub
mov
aas
jb
jle
and
sarb
add
push
pop
add
cmpsl
mov
xchg
movsl
xor
flds
adc
mov
test
imul
rcl
leave
jbe
push
insb
cmp
jne
adc
and
and
ret
jmp
mov
xor
adc
add
and
and
add
sub
sub
and
adc
adc
jmp
cld
cmpb
push
sub
nop
inc
adc
inc
shr
push
les
pop
xchg
cmp
push
mov
lahf
js
mov
pop
adc
stc
dec
push
jg
mov
sub
hlt
imul
push
dec
mov
mov
add
leave
jmp
addb
pusha
cwtl
or
adc
xor
js
aas
movsl
decl
in
pop
out
xor
or
inc
mov
mov
xlat
mov
push
dec
push
rorb
inc
jb
popf
loope,pt
push
push
mov
lods
call
inc
cmp
dec
push
sbb
decl
addr16
pop
int3
mov
or
add
popf
sub
fmuls
in
adc
inc
lcall
aam
pop
stos
in
jle
sahf
mov
cld
shll
ror
movsl
in
test
lcall
call
icebp
dec
xchg
sub
les
mov
cmp
out
loopne
or
aad
loope
test
push
pop
add
sub
jge
and
out
or
and
cmp
leave
add
stc
mov
aaa
pop
in
or
jg
gs
sub
lea
xchg
notb
add
pop
sub
cmp
sub
cmp
imul
insl
sti
mov
add
add
cmc
add
mov
or
and
xchg
pusha
pop
adc
xor
cmpsb
loope
add
push
insl
ret
pop
dec
pop
push
cmc
in
and
xchg
imul
lcall
mov
push
idiv
adc
add
call
aas
sahf
nop
nop
js
sub
xor
cmc
sbb
cmp
push
rcr
adc
int
mov
adc
sbb
test
inc
add
subl
inc
add
fs
add
and
adc
xchg
pushf
mov
in
push
add
cmp
loopne
jb
add
loope
stos
inc
dec
add
stos
in
push
xor
add
push
test
or
and
push
and
mov
popa
inc
push
and
push
dec
and
push
leave
sar
sub
add
and
and
sub
add
add
xorl
leave
pop
adc
mov
pop
lods
and
and
call
in
bnd
out
add
push
sub
pop
out
sahf
out
adcb
sahf
mov
push
or
out
xor
push
out
lods
mov
ja
cld
adc
pop
out
sahf
out
jp
test
int
jns
enter
or
sbb
repz
cmp
outsb
repz
repz
cmpsb
mov
cmpsl
stc
cmp
out
adc
sub
out
sahf
inc
push
push
sahf
out
test
enter
cmp
repz
adc
cmp
repz
pop
jo
cwtl
test
ds
repz
fsubr
push
ret
jns
out
es
pop
jb
jns
out
lcall
sahf
loopne
add
outsb
push
es
sahf
out
pop
jb
xchg
lahf
out
sahf
mov
adc
cmp
repz
inc
pop
push
repz
mov
fsubr
sahf
out
xchg
push
adc
ss
jns
out
push
insb
test
out
in
add
sbb
repz
xor
data16
cmp
repz
scas
fdiv
jns
cmpsl
stc
add
sbb
dec
pop
out
sahf
out
sbbb
lahf
fsubrp
enter
xor
jns
out
push
mov
mov
fsubrp
adc
cmp
repz
cmp
pop
jb
cmp
repz
jns
iret
lock
adc
ss
out
sahf
dec
fs
mov
jns
out
push
int3
push
repz
repz
pop
jbe
iret
repz
sahf
mov
or
cmp
mov
inc
pop
jb
repz
mov
sahf
out
ds
into
push
cs
pop
jns
out
outsb
jle
cmpsb
mov
int3
in
or
sbb
repz
sub
jo
xchg
cmp
repz
mov
loop
jns
cmpsl
stc
or
sbb
cmp
jns
out
push
out
sahf
mov
rcrl
cmp
repz
dec
pop
jbe
repz
repz
scas
fdivp
out
sahf
out
rcrb
inc
push
sahf
out
sahf
bound
xchg
test
xor
out
enter
rcrl
repz
repz
fs
repz
test
cmpsl
stc
cmp
adc
sub
jns
out
jo
nop
mov
out
fsubr
clc
adc
iret
repz
es
pop
jbe
cmp
repz
lods
ret
jns
cmpsl
stc
or
push
cs
pop
out
sahf
out
xchg
jl
in
add
sbb
inc
cmp
repz
insb
jl
stos
loopne
iret
repz
out
lcall
insb
jns
out
jl
movsb
mov
out
hlt
or
sbb
iret
repz
dec
pop
push
xchg
test
iret
repz
into
fsubrp
dec
repz
push
ss
fs
iret
repz
pushf
lods
aam
lcall
and
out
sahf
out
push
outsb
xchg
add
adc
repz
cmp
js
cmp
repz
imul
fstpl
cs
out
sahf
inc
push
insb
test
jns
cli
adc
repz
shll
cmp
jo
repz
adcb
out
repz
lock
jbe
sub
repz
inc
push
pusha
jo
xchg
cmp
repz
mov
sahf
cmpsl
stc
add
sbb
ds
out
sahf
out
sbbb
sahf
fsubr
add
sbb
inc
cmp
repz
bound
lcall
in
cld
out
sahf
out
loop
cmp
fs
out
sahf
je
lcall
jns
lock
push
es
repz
push
mov
repz
lcall
out
lcall
jns
out
js
mov
sahf
out
out
decb
in
iret
repz
cs
pop
outsb
jle
cmp
repz
mov
fsubr
jns
cmpsl
stc
add
sbb
inc
pop
out
sahf
out
sbbb
sahf
shl
lock
out
cs
repz
push
data16
sti
cmp
repz
mov
fdivp
out
cmp
repz
call
jb
cmp
repz
cmp
shr
cli
or
sbb
inc
push
data16
jns
out
movsb
mov
cmp
repz
ljmp
cmp
jb
xchg
mov
repz
repnz
adc
jns
out
cmp
outsb
test
jns
out
mov
iret
repz
or
and
inc
push
ds
repz
mov
cmp
repz
in
in
in
push
and
cmp
repz
pop
outsb
xchg
lods
ret
repnz
sahf
out
out
sbb
cmp
out
sahf
data16
sahf
scas
mov
aam
out
out
push
and
dec
pusha
jo
sahf
jl
out
mov
in
or
repz
rcrl
cmp
fs
repz
je
pushf
lods
fcompl
cld
adc
sub
sahf
out
push
bound
mov
mov
icebp
push
icebp
icebp
repnz
repz
push
sub
push
insb
test
repz
stos
rcr
jns
out
decb
repz
dec
out
sahf
out
jl
pushf
mov
out
lahf
fdiv
repz
push
xor
jns
out
pop
jb
cwtl
lahf
out
sahf
test
enter
cmc
cmp
repz
cs
push
cmp
repz
lcall
add
adc
sahf
out
sahf
xor
js
sahf
jl
out
mov
fdivp
push
div
cmp
rcll
es
outsb
iret
repz
jle
cmpsb
mov
fcompl
add
adc
xor
sahf
out
dec
pop
jo
sahf
out
sahf
out
mov
repz
or
and
dec
pusha
jo
iret
repz
xchg
cmpsb
mov
jns
iret
repz
or
sbb
out
sahf
out
push
bound
lahf
out
sahf
mov
or
cmp
repz
xor
je
cmp
repz
ds
in
adc
and
sahf
out
sahf
dec
pop
outsb
jle
movsb
jns
out
mov
into
std
sahf
out
fiadds
sub
push
pusha
jo
sahf
out
adcb
lahf
out
testb
sbb
iret
repz
cmp
bound
xchg
ds
repz
ret
add
jns
out
push
cs
pop
insb
out
sahf
out
xchg
lods
mov
sahf
loop
add
push
xor
repz
push
data16
repz
repz
mov
shl
out
lcall
inc
sahf
out
sahf
pop
push
ja
out
int3
in
or
pushw
sahf
out
sahf
cmp
push
out
test
into
in
repz
repz
sbb
dec
pop
iret
repz
push
lcall
ds
push
xor
out
inc
push
data16
out
sahf
out
mov
repz
push
add
insb
cmp
repz
mov
repz
cld
or
and
jns
out
dec
pusha
js
sahf
out
sahf
cwtl
test
into
fdivp
cmp
sarl
sbb
cmp
repz
repz
xchg
stos
lcall
test
adc
out
es
pop
outsb
out
sahf
out
xchg
movsb
mov
sahf
call
ss
cmp
repz
jbe
xchg
lods
stc
cmp
repz
clc
push
or
jns
cmpsl
and
push
data16
out
sahf
xchg
lcall
or
xor
jns
out
push
data16
lahf
out
sahf
pushf
mov
fdiv
or
iret
repz
xor
jbe
cmp
repz
lcall
ss
out
sahf
inc
push
insb
jl
lods
jns
out
mov
repz
repz
and
dec
pop
iret
repz
push
mov
repz
out
push
nopl
sahf
out
dec
pop
jb
mov
mov
out
pcmpgtd
out
adc
cs
out
sahf
out
mov
jns
shr
cli
adc
and
cmp
repz
pop
jb
xchg
repz
repz
out
sahf
out
adc
sub
dec
sahf
out
sahf
data16
sahf
scas
mov
aam
cli
adc
and
cmp
repz
pop
jbe
int3
repz
sahf
mov
jns
ja
inc
adc
cs
out
sahf
out
je
xchg
stos
int
jns
mov
adc
cmp
ds
insb
jl
cmp
repz
ds
in
cld
or
and
sahf
out
sahf
dec
pop
jb
xchg
mov
mov
fdiv
add
repz
rcll
sub
pop
insb
iret
repz
jl
movsb
mov
stc
cmp
or
sbb
cmp
sahf
out
dec
bound
cwtl
out
fsubp
mov
sbb
sbb
jns
out
sbb
sub
pop
jb
jns
out
xchg
mov
jl
loopne
push
sbb
cs
cmp
repz
jo
cwtl
test
cmp
repz
decb
sbb
jns
cmpsl
and
inc
push
push
out
sahf
jp
mov
dec
repz
push
sbb
ss
repz
repz
pushf
lods
out
cmp
aam
cld
or
sahf
out
sahf
sbb
inc
push
insb
jl
sahf
out
mov
cmp
out
add
adc
xor
repz
inc
push
bound
mov
mov
loopne
push
pop
iret
repz
push
xor
bound
iret
repz
mov
lcall
es
jns
out
bound
cwtl
int
jns
test
in
add
adc
iret
repz
cmp
push
cmp
repz
mov
ds
fsubrp
push
and
sahf
out
sahf
inc
pop
jb
cwtl
scas
xor
out
add
push
repz
repz
fs
xor
iret
mov
push
out
cmp
aam
lock
sahf
out
sahf
sbb
ss
push
pusha
jns
out
outsb
jl
cwtl
cmpsb
out
sahf
out
ret
in
iret
repz
cli
or
cmp
repz
pop
push
xchg
cmp
repz
mov
fistps
fimull
hlt
push
add
push
adc
jns
out
xor
push
fs
out
sahf
je
xchg
movsb
mov
add
hlt
sub
add
test
and
add
adc
fsubs
orb
ljmp
add
push
movsb
daa
sub
incl
pop
xor
lock
cmp
lods
adc
pop
aas
int
pop
jbe
xor
pop
and
pushl
jge
jmp
aam
mov
inc
pop
and
dec
cmp
dec
mov
jge
cmc
sub
cmp
pop
jge
lds
loop
int
mov
inc
cld
inc
adc
mov
cmp
sub
mov
jl
jnp
out
jle
dec
xbegin
lret
out
icebp
clc
mov
decl
insl
inc
test
loopne
sub
shlb
cmp
push
inc
or
mov
jmp
mov
lret
pop
loope
and
and
add
sub
ljmp
cli
sbb
fdivl
push
loope
lock
or
arpl
and
push
inc
adc
mov
idivb
jmp
push
and
xchg
leave
mov
loope
ret
out
rclb
mov
mov
xchg
sbb
incl
rorb
and
cld
xchg
dec
jle
pop
jnp
lret
inc
icebp
push
mov
decl
inc
fadd
filds
and
mov
mov
dec
mov
xchg
xchg
sbb
movl
into
mov
dec
or
cwtl
jb
mov
bnd
xor
xor
out
fisubrl
idivl
ljmp
and
sub
mov
sbb
and
loopne
out
loopne
mov
jmp
in
fsub
imull
sbb
call
sbb
dec
cwtl
xchg
jp
sub
jmp
pop
stc
or
jne
mov
stos
stc
in
inc
xchg
in
dec
sbb
pushl
aaa
push
iret
push
mov
jecxz
rcrb
bound
dec
mov
jmp
cmc
pop
sbb
lret
pop
loop
mov
jge
push
out
sub
loope
call
dec
push
lret
call
lock
or
jne
mov
push
fimuls
jge
dec
out
mov
gs
sti
test
dec
data16
ljmp
stos
out
jns
lods
es
imul
cld
mov
aam
testb
pushl
movb
movsl
popa
inc
addl
xor
int
shlb
fucomi
push
push
dec
mov
jne
sbb
pop
mov
mov
mov
push
push
inc
cmp
mov
insb
and
push
hlt
cld
cli
sarl
jmp
cmc
adc
dec
jecxz
inc
ja
mov
test
fists
inc
inc
jmp
or
pop
inc
push
add
mov
pop
stos
cmpsl
pop
cld
jmp
shll
popa
test
mov
cli
or
inc
and
aad
fimuls
mov
mov
adc
mov
pop
int
in
test
cmc
mov
or
mov
pushl
lret
mov
shrl
jbe
push
and
push
stos
decl
mov
cmpsb
loopne
mov
push
xor
dec
shll
shll
add
mov
jmp
mov
mov
mov
in
cmp
lret
push
ds
iret
adcb
fbld
out
cmpsb
dec
mov
xlat
mov
mov
std
mov
fst
test
lcall
xchg
mov
mov
insb
mov
cli
cwtl
insb
movsl
rorl
pop
jbe
icebp
mov
pushl
popa
movsb
ljmp
fisttpll
fsts
mov
add
push
push
jb
inc
in
mov
jnp
idivb
mov
jl
mov
xchg
lock
leave
fdivrp
adc
cmpb
or
test
stos
push
mov
aaa
cld
outsl
fmul
movsb
push
sar
adcl
mov
pop
lock
sbbl
push
mov
xchg
scas
orb
in
in
pop
addr16
jg
incl
out
adc
sbb
ss
pusha
pop
cld
cmpb
outsl
mov
mov
pop
stos
outsl
mov
mov
push
aaa
mov
movsl
xor
mov
pop
pop
xor
push
fbld
ds
decl
outsb
dec
mov
lods
add
pusha
mov
and
jmp
sti
outsl
jbe
stos
pop
mov
mov
test
into
aad
sbb
push
addl
mov
lock
push
xchg
mov
f2xm1
decl
push
mov
jb
bound
inc
push
mov
out
fcoml
movsb
dec
mov
push
mov
push
into
cs
adcb
mov
pushf
incl
nop
pop
stos
jnp
push
dec
mov
mov
xchg
inc
mov
testb
pop
pop
and
inc
lahf
fistpll
roll
push
popf
dec
mov
pop
int
stc
out
pop
insb
shlb
ja
rcrl
mov
loopne
or
out
dec
mov
mov
mov
std
fsubrs
push
xlat
in
adc
mov
pop
in
dec
in
push
imul
mov
cs
fbld
jl
push
cmc
imul
and
dec
jne
mull
pop
cs
stos
stc
xchg
movsl
cli
insb
call
cld
mov
add
mov
test
mov
enter
lea
push
add
add
ds
fistpll
iret
or
dec
mov
mov
fimuls
shrb
or
ljmp
icebp
stc
shl
fidivs
push
pop
jno
or
in
fidivs
decl
or
push
leave
in
dec
lods
pop
jecxz
imul
out
pop
aas
push
addr16
sub
sub
push
rorl
xchg
std
ljmp
xchg
and
jg
mov
push
and
adcb
std
mov
xchg
es
fcomps
sub
fstps
aam
ljmp
outsb
pop
xchg
sub
orl
cmp
mov
lret
pop
iret
aad
add
jl
inc
fwait
add
data16
mov
ds
sbb
cmp
inc
in
inc
xchg
pop
and
ljmp
push
pop
iret
sub
ficoms
sarl
sbb
decl
call
lret
enter
aaa
xchg
sbb
rolb
and
jmp
mov
movsl
ljmp
mov
mov
jg
inc
shlb
dec
aad
push
jge
and
jb
mov
sbb
cmp
int3
pop
jmp
cmpsb
fnstsw
sarb
xchg
into
loop
in
stos
add
adc
sar
call
mov
cltd
xlat
fmull
out
jmp
mov
push
inc
and
enter
cltd
incl
out
jle
je
lcall
xchg
xchg
push
dec
fstpl
sbb
orl
out
mov
pop
cld
xchg
in
sbbb
sahf
pop
mov
pop
aad
add
std
cmp
push
or
inc
push
xchg
pop
jbe
push
pop
stos
gs
repz
and
popf
add
jg
stos
imul
xchg
int
mov
movsb
adcl
jle
sbbb
xor
pop
ss
add
into
pop
xor
add
or
sti
sbbb
pop
jge
hlt
cmp
lock
loop
jb
dec
xchg
and
pop
cmp
fwait
or
lcall
ds
leave
aad
adc
mov
fstpt
shrl
jbe
push
incl
loope
cltd
mov
xor
outsb
orl
pop
cs
push
loop
insl
push
mov
pop
mov
jbe
aam
mov
pop
fimuls
cmpsl
or
insl
push
pop
mov
add
mov
decl
cli
adc
aam
fwait
mov
push
pop
into
lds
pop
insl
lods
and
scas
mov
out
mov
arpl
mov
xchg
jmp
mov
xchg
sub
add
xchg
mov
loop
enter
mov
mov
dec
hlt
mov
pop
incb
scas
pop
and
pop
pop
cs
and
fwait
std
pop
je
push
pop
mov
fbstp
sbb
push
shl
push
roll
or
jmp
push
push
xor
xchg
popf
fiadds
shlb
sbb
lret
push
mov
roll
pop
fs
jae
xor
inc
fs
fs
gs
push
push
jno
aaa
ljmp
arpl
xor
inc
dec
inc
push
arpl
jae
dec
dec
dec
pop
pop
gs
push
jne
bound
xor
pushl
js
jb
push
cmp
xor
aaa
jae
jbe
dec
gs
popa
bound
jno
imul
js
xor
push
ss
inc
arpl
inc
dec
jns
dec
dec
imul
mov
push
push
inc
inc
ss
jp
js
imul
jae
pushl
push
ss
aaa
jp
insb
mov
inc
inc
outsl
js
ss
sti
addr16
jae
dec
stos
jns
insb
push
jb
ss
xor
push
gs
push
push
inc
jbe
push
push
inc
aaa
xor
jp
push
jno
js
imul
lcall
jnp
arpl
sub
xor
pop
dec
pop
bound
inc
dec
xor
pushl
js
gs
xor
push
inc
inc
xor
pop
jno
jo
insl
outsb
imul
incl
dec
dec
ja
outsl
inc
jb
js
xor
dec
push
popa
gs
jbe
imul
ja
fldt
pushf
jno
jp
js
imul
imul
addr16
decl
mov
sbb
addr16
push
push
push
push
ss
jo
inc
xor
pop
pop
jne
imul
push
cmp
popa
push
ss
ja
aaa
imul
ljmp
dec
imul
fs
xor
push
dec
arpl
inc
outsb
dec
cmp
add
jo
xor
xor
jae
cmp
push
addr16
xor
adc
push
mov
add
xchg
push
popf
add
push
or
fwait
add
shll
cmp
cmp
xchg
xor
add
cltd
and
fcomps
sbb
add
lock
inc
lcall
repnz
mov
lcall
fnstcw
shll
push
or
test
mov
mov
dec
repz
ss
pop
imul
repz
cmc
inc
mov
jo
mov
mov
sub
outsb
sbb
jbe
push
data16
fisttpl
push
and
adc
adc
jle
jge
sbb
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
dec
mov
mov
jle
xor
loop
loopne
jge
mov
inc
xor
std
jbe
xchg
dec
dec
mov
push
mov
ds
pop
subl
lcall
pushf
mulb
les
and
or
push
std
fucomip
ja
adc
jp
daa
out
dec
fdivl
dec
push
popf
inc
faddl
pop
fbstp
ds
ja
js
rolb
aas
sti
jbe
adc
das
addr16
adc
cvtps2pi
add
sub
aas
pusha
sbbl
push
inc
push
sbb
shrb
ja
dec
jo
jmp
sbb
cs
pop
jbe
sbbb
xlat
inc
out
jge
lock
inc
add
ss
pop
sbb
pushf
pop
test
outsl
outsb
add
cmp
outsl
and
inc
adc
sbb
jb
push
pop
xor
jg
sub
aas
add
scas
leave
les
push
push
push
int
imul
jo
out
fldcw
icebp
sarl
add
mov
fwait
int
mov
jmp
lds
jns
pop
cwtl
dec
std
test
ja
je
int
lds
sti
fiaddl
das
jge
insb
les
out
lret
adc
out
dec
or
jns
into
loope
ja
push
jae
loop
pop
mov
icebp
dec
push
scas
ds
mov
vcvtpd2dq
insb
push
in
imul
fldl
push
pop
imul
gs
xor
cs
insb
jg
pop
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
push
sti
dec
gs
jbe
add
pop
jb
notb
out
dec
outsb
and
imul
jne
mov
fwait
testb
sbb
outsl
arpl
or
mov
imul
inc
xor
inc
outsl
std
push
jne
jns
push
outsw
jb
popa
outsb
arpl
scas
int
xor
push
adc
sbb
jb
rcr
mov
popa
fs
fs
push
jbe
mov
call
das
outsl
rcrl
pop
lock
ja
push
imul
dec
jne
mov
jns
mov
pop
sub
sub
add
mov
pop
arpl
sbb
sbb
jb
jns
js
push
loopne
jnp
dec
cmc
and
popa
divb
fistpl
sbb
inc
and
cmp
fs
jae
lods
xor
outsl
fs
gs
push
or
xchg
fstpl
inc
imul
mov
or
sbb
popa
es
inc
mov
loopne
sbb
insl
mov
mov
sbb
fs
jb
loope
bound
inc
bound
loopne
rcrb
cmp
push
mov
mov
push
outsb
push
cmp
xor
out
outsl
fwait
push
outsl
xchg
and
dec
data16
push
push
out
fidivl
ja
pop
cmp
popa
ret
xor
imul
adc
pop
push
adc
push
jns
rorb
jo
shl
xchg
dec
push
mov
adc
push
mov
clc
dec
gs
pop
jb
jae
int3
loop
mov
jae
fsubl
gs
outsl
in
int
loop
jmp
push
inc
jbe
jo
cwtl
loop
xorl
push
add
mov
dec
movsb
outsb
mov
clc
push
adc
add
popa
jne
jg
xchg
gs
lds
sbb
pop
pop
aas
pop
sub
fldenv
addl
rorb
lcall
test
lds
cmp
push
lcall
push
insb
push
dec
bound
ds
fs
jb
sub
sub
sbb
ret
in
jno
mov
ljmp
mov
mov
repz
fildll
adc
sub
and
xchg
pop
or
xor
aas
xrelease
mov
adc
jmp
or
push
mov
inc
inc
insb
push
sbb
sbb
sub
xor
lds
jo
jae
inc
mov
cmpsl
add
outsb
push
pop
sub
sub
fcmove
add
inc
sbb
pop
cmc
push
add
frstor
add
movsl
mov
pop
sub
sbb
add
inc
mov
insl
pop
rclb
jo
loop
mov
es
sbb
or
test
and
mov
sti
inc
outsl
adc
push
jecxz
mov
cmp
hlt
add
addb
inc
xor
lods
jo
pop
in
cltd
add
sbb
fistl
push
xor
inc
imul
pop
inc
insb
js
ss
arpl
stos
rcrb
movsl
jecxz
lods
adc
cmpsb
int3
idivl
subl
imul
rorb
insl
xorl
xchg
ret
gs
jno
pusha
jo
popa
jo
addr16
push
cmpsl
xor
jecxz
outsl
popa
shll
pop
inc
inc
cmpsl
push
data16
scas
inc
xchg
adc
daa
sbbl
fiaddl
incl
pop
jle
jb
jae
ja
push
cmp
ja
in
or
push
adc
andl
sub
sbb
fcomps
popa
ret
nop
sbb
fstl
inc
lret
xlat
outsb
decl
adc
mov
xchg
or
dec
les
adcb
incl
sub
mov
adc
dec
inc
adc
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
push
xchg
test
pop
add
add
adc
enter
nop
inc
add
add
test
andb
dec
mov
sub
sub
test
pop
add
adcl
push
and
mov
adc
subl
inc
add
adc
and
adc
mov
add
mov
inc
push
and
add
subl
inc
add
fs
add
nop
push
add
mov
inc
push
and
test
pop
add
xorl
add
push
add
adc
enter
addb
adc
inc
push
adc
nop
inc
add
add
subl
call
dec
mov
sub
mov
test
push
add
subl
inc
add
fs
and
andb
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
push
lcall
add
pop
add
incl
xor
pop
lcall
xor
inc
mov
add
add
fnstenv
pop
add
add
add
fcmovnu
cld
or
inc
call
add
mov
mov
addb
mulb
add
incb
pop
push
add
cmp
sub
outsl
fistpl
std
sub
sbb
cwtl
add
orl
incl
adcl
test
mov
and
jnp
cwtl
mov
scas
push
xchg
sbb
je
gs
js
sbbb
imul
cmp
sub
pusha
rcll
rorb
lods
loopne
jmp
ds
add
roll
add
sarb
gs
rclb
shrb
and
loop
or
push
add
add
pop
les
call
add
stc
and
xor
mov
pusha
add
outsl
push
push
pop
add
sbb
or
ds
push
jle
insl
roll
adc
fildl
push
add
lods
jns
push
aad
ret
stos
xchg
test
popf
idivb
sbb
mov
outsl
fld
or
loope
pavgb
stos
xor
dec
jg
fwait
cmpsb
add
ja
popl
mov
mul
jecxz
pop
push
fcomip
out
lods
xor
add
add
jnp
add
pop
inc
lds
sbb
pop
pop
loopne
aaa
dec
shr
fildl
into
add
test
arpl
pop
lock
push
sub
sbb
test
rcrl
add
dec
test
cmpsb
loopne
pop
stos
pop
push
out
cmp
mov
fucom
imul
shrl
out
insl
pop
movsl
pusha
or
int3
mov
clc
mov
add
stc
rcrl
in
or
cmp
arpl
or
outsb
shld
call
add
shl
xor
popf
bound
fldl
stc
lods
jecxz
dec
xadd
jmp
mov
fimuls
pop
insl
mov
fwait
mov
loop
ror
in
dec
sbb
cmp
out
sub
jge
xchg
test
mov
loopne
pop
lret
mov
aaa
insl
stos
push
pop
xchg
mov
aaa
clc
loopne
mov
add
push
das
fimuls
pop
sbb
xorl
add
jns
push
or
in
clc
cmpsl
sub
pop
pop
cmp
clc
and
sub
stc
sbbb
divb
out
dec
pusha
mov
inc
add
loopne
negb
pop
loopne
icebp
push
fidivrl
fwait
cmpsl
cmp
xlat
sbb
cmc
or
mov
sbb
cmp
push
jne
hlt
shll
roll
xor
call
sub
lods
pop
clc
mov
mov
push
stos
jge
cmpsb
xchg
or
loope
enter
and
cmp
lcall
dec
std
xlat
jmp
sahf
fisubrl
cmpsl
sbb
mov
dec
addr16
mov
or
or
add
fadds
dec
or
pop
cmp
mov
xchg
mov
out
popf
mov
push
jo
inc
xor
pop
or
shl
mov
je
stos
sbb
ja
jl
inc
loopne
outsl
sbb
cmpsb
sbb
jmp
jl
jo
stos
pop
cmp
imul
or
lahf
cmpsb
inc
push
mov
popf
xchg
loopne
ja
iret
pop
fsubl
and
imul
pop
xor
pop
push
jae
imul
ror
pop
lock
sbb
xor
inc
jns
xchg
in
mov
sti
lahf
stos
add
mov
nop
test
lock
ljmp
repnz
fsts
sti
and
mov
mov
loope
xor
jo
jmp
xor
mov
cld
fbstp
push
in
sar
out
aaa
xor
in
fwait
jo
jmp
mov
mov
jno,pt
test
or
cmpsl
xor
sbb
outsl
sbb
fcmovnb
sub
inc
xor
imul
jge
aas
adc
pop
mov
jle
xor
leave
jnp
add
pop
cmp
dec
push
add
mov
ds
push
add
popl
cmc
scas
push
rcll
jbe
cld
ljmp
mov
xchg
and
push
lods
dec
add
dec
inc
jno
cld
or
std
pushl
mov
and
fnsave
add
inc
lock
push
enter
sub
inc
jns
push
adc
sub
pop
cmp
sbb
decl
ja
das
adc
testl
add
xor
in
fiaddl
sbb
jg
fucomip
sbb
cmp
or
mov
lahf
jbe
add
jle
mov
cli
mov
movb
fadds
cmp
aam
outsb
jbe
xchg
jo
and
call
je
lea
jo
mov
gs
mov
jmp
jb
xchg
je
insl
lcall
outsb
or
or
js
inc
mov
addb
popf
add
pop
mov
xchg
inc
mov
jp
add
std
fistl
push
or
sub
add
scas
push
adc
fisubs
xor
push
push
mov
jo
and
adc
push
push
outsw
testb
js
cld
xor
jo
bound
add
sub
rolb
cmp
xlat
add
movl
out
test
std
imulb
in
cmpsl
repnz
add
gs
add
jne
lea
or
add
insb
add
fistps
loop
movsb
dec
add
ja
icebp
or
inc
test
fwait
or
xor
add
imul
jp
pusha
add
inc
jo
mulb
xor
je
cs
in
adc
add
adc
subb
mov
push
sub
mov
es
fsubrs
sti
loopne
add
and
dec
pop
loopne
fs
addr16
bound
pop
dec
or
sbb
inc
xchg
or
add
pop
or
lods
movsb
add
xor
mov
lock
mov
mov
jne
mov
incb
add
mov
xor
lret
add
jno
add
add
add
add
les
xor
sti
add
xor
xor
add
inc
fbstp
cld
add
xor
sbb
add
incb
cli
icebp
outsl
jg
push
add
xlat
lock
pop
xor
and
and
testb
sub
ljmp
xor
lret
xor
cmp
mov
cmp
or
imul
jno
jae
jne
jbe
outsb
incl
pop
pop
lahf
incl
testb
jge
incl
cld
pop
aas
mov
aas
add
cmp
sbb
aas
sbb
xor
add
add
xor
rorb
or
push
add
add
or
negl
or
lock
sub
fwait
loopne
fidivs
sub
mov
pop
xchg
mov
xor
add
sub
loopne
sub
mov
and
adc
mov
mov
lret
sbb
xor
dec
inc
in
and
inc
sahf
mov
rcrb
lock
dec
jp
stos
cmp
lret
add
testb
lds
inc
xchg
in
jns
icebp
lcall
sbb
js
push
mov
call
push
int
pop
inc
outsl
mov
pop
sbb
dec
ss
mov
lods
mov
in
scas
fistpl
mov
or
out
lods
mov
adc
repz
out
lret
add
mov
or
push
cmpsb
into
add
adc
fcomip
pop
jl
mov
fld
pop
and
pop
nop
mov
decl
or
mov
lret
jno
cltd
sti
repz
test
lcall
inc
pop
int
mov
sbb
int
lds
mov
pop
xchg
fcomip
fbstp
es
mov
neg
out
mov
mov
out
std
sub
ret
pop
inc
shlb
std
xchg
or
arpl
decb
mov
aaa
cld
popa
out
adc
popa
or
cltd
cmp
loopne
mov
clc
adc
ficompl
addb
pop
jae
pop
mov
mov
xor
push
imul
or
add
lods
insl
push
outsl
inc
sub
sbb
push
push
or
aaa
sarl
and
adc
rolb
shr
mov
out
add
add
add
mov
cmpsb
cmp
adc
add
repz
mov
pusha
push
outsb
add
les
push
inc
scas
ss
sbb
adc
sub
test
push
mov
push
xor
ficoms
push
xchg
rorb
or
push
imul
inc
push
cmp
add
add
jae
mov
lods
cld
add
sbb
mov
rorb
inc
out
dec
jae
push
add
pop
mov
data16
arpl
rorb
xor
jmp
add
testl
jg
andb
sbb
add
add
add
out
mov
pushf
imul
divb
iret
add
mov
cmpsb
adc
push
sti
imul
add
inc
dec
shlb
push
mov
imul
aaa
fadds
adc
aas
mov
pop
dec
jo
add
or
cs
sub
out
pop
outsl
cmp
pop
ret
mov
mov
mov
lahf
pop
je
sbb
mov
stc
or
ret
lods
mov
jecxz
sarb
add
xorl
sets
pop
adc
adc
jns
imul
add
inc
fcmovnb
inc
dec
fistpl
loopne
push
loopne
cmp
lahf
add
movl
push
jbe
and
outsb
mov
loopne
das
sbb
add
push
test
in
loopne
dec
sbbl
ja
sahf
lock
aad
cmc
mov
push
shl
or
sub
fs
imul
dec
mov
mov
fldcw
daa
or
add
ret
loopne
loop
push
pop
out
sti
std
jbe
loopne
lods
iret
add
mov
mov
mov
dec
add
lods
shlb
sub
push
and
and
rorl
mov
negb
nop
sbb
and
in
mov
cmp
push
into
mov
cmpsb
cmp
cli
add
fisttps
and
inc
loopne
lcall
pop
fistpl
outsl
add
fneni(8087
sbb
add
mov
fwait
lods
xchg
test
cmp
loopne
outsb
popa
cs
xor
mov
add
adc
js
or
sub
mov
inc
and
loopne
pop
fistpll
push
pop
ret
dec
mov
adc
shl
imul
roll
push
outsb
add
fdivs
sbb
sti
jp
cmovp
stos
mov
mov
loopne
or
push
push
ljmp
mov
xchg
ror
loopne
stos
pop
loopne
fisubl
cmp
or
add
jo
fnstsw
inc
cmpsl
or
loopne
stos
mov
es
sarl
xor
loopne
stos
lret
adc
adc
or
mov
loopne
jmp
jp
pop
stos
repz
lcall
or
mov
xchg
add
insb
dec
add
ret
inc
sbb
insl
roll
push
shll
addr16
loopne
jae
loopne
add
stos
or
pop
fwait
sbb
mov
or
add
sbb
cmp
cwtl
cmp
push
popf
sbb
dec
push
ficompl
jmp
pop
push
mov
jo
loop
or
mov
pusha
pop
jnp
pop
dec
push
aam
jge
adc
int
sbb
pop
dec
and
jns
js
adc
or
cmp
loopne
sbb
and
mov
add
dec
icebp
xlat
mov
sbb
mov
sub
fstpt
push
jb
dec
lods
loope
fsub
pop
fmuls
and
sahf
adc
jb
mov
pop
pop
addr16
xchg
or
mov
sbb
sbb
dec
out
loopne
or
loopne
xchg
push
adc
jecxz
adc
cmp
cmp
int
and
scas
loopne
mov
add
jo
lret
jo
mov
sub
lods
push
roll
or
or
jo
and
rcl
loope
mov
jno
jbe
pop
xor
lock
jo
jb
outsl
outsl
mov
push
lock
or
shlb
out
pop
scas
sbb
mov
lock
shl
mov
fists
lock
push
mov
es
mov
mov
dec
cmp
jo
inc
sbb
lock
cmp
xor
out
jnp
cwtl
lock
insb
out
rcrl
stos
and
mov
dec
jo
stos
mov
jecxz
sar
notl
fdiv
inc
loopne
pop
inc
inc
shlb
push
movsb
add
push
push
nop
inc
imul
imul
cmpsb
ds
jo
mov
jns
jbe
lahf
mov
sub
pusha
and
out
jne
jo
cmovae
adc
xchg
xor
rorb
jo
dec
push
adc
pop
cvtps2pd
add
adc
mov
stos
jecxz
jle
sarl
or
xor
pusha
or
inc
or
sarl
jbe
and
dec
imul
cmpsb
shl
sbb
outsl
push
pop
xor
pop
jnp
add
add
sbb
lock
jns
lock
jne
add
cmpsb
test
jl
and
mov
das
cmp
fdivrl
test
xchg
lock
cmp
mov
or
xchg
cmc
cwtl
fistpll
outsb
adc
cmpsl
push
sahf
cmpsb
incb
repz
std
adc
mov
cmc
mov
xor
test
loope
mov
mov
add
jns
rol
roll
stos
or
pop
xor
add
pop
int3
pop
add
add
outsl
add
add
push
and
add
pop
add
out
fildl
push
insb
add
jge
push
add
dec
add
add
out
inc
add
add
add
movl
inc
add
mov
add
jp
add
bound
jle
push
jl
inc
or
add
add
add
adc
adc
aaa
fs
fadds
fcompl
add
or
sbb
cmp
add
fstpt
ss
add
fadds
daa
add
add
and
jg
decl
inc
add
nop
or
add
add
sbb
pop
add
add
adc
nop
add
cmp
add
mov
pop
inc
push
dec
adc
or
lret
or
sub
push
add
add
mov
int
inc
push
push
mov
cmpsb
add
fidivl
and
jp
pop
js
es
add
push
adc
sbb
movd
add
add
adc
and
insb
adc
insb
mov
mov
add
mov
add
enter
push
ret
aas
xchg
add
add
xchg
add
add
cmp
mov
adc
and
push
add
dec
add
xor
add
add
pop
add
add
mov
adc
add
add
inc
add
mov
add
xor
add
add
add
add
sub
add
add
add
add
mov
adc
add
add
mov
jbe
adc
adc
sub
outsb
push
inc
or
push
add
add
cmp
add
imul
add
add
pop
add
pop
add
fwait
mov
add
xor
adc
sti
xor
repnz
add
fwait
mov
add
push
add
xor
cmpsl
push
add
xor
jecxz
aaa
cwtl
mov
push
add
ret
dec
add
adc
mov
xor
movsb
pop
cmpsb
xor
test
dec
add
xor
fwait
mov
add
xor
scas
inc
add
xor
mov
add
fwait
mov
add
inc
add
xor
mov
aas
add
xchg
fwait
mov
cmp
xor
add
inc
stc
fwait
mov
add
adc
add
xor
add
ss
xor
fwait
mov
xor
xor
xor
xor
add
mov
add
xor
loop
sub
sub
out
clc
out
sub
shrb
add
xor
add
es
xor
out
and
in
xor
add
and
xor
add
and
imulb
add
sbb
inc
add
and
cmp
out
cmp
and
cmp
push
cmp
push
out
out
add
push
xor
sub
xor
xor
xor
adc
add
out
add
push
sub
push
sub
call
add
cmp
and
inc
push
out
out
add
push
sbb
inc
sbb
inc
out
sbb
inc
pop
add
dec
adc
add
outsl
adc
dec
adc
cld
fildll
adc
add
adc
push
push
add
push
nop
pop
push
and
push
stos
pop
push
push
adc
insb
push
insb
push
into
pop
push
push
adc
repnz
push
pop
adc
pop
jae
ja
push
push
pop
adc
cmp
adc
lods
mov
js
xchg
pop
adc
and
ficompl
movsb
add
add
dec
push
add
incb
mov
mov
and
adc
or
or
inc
push
or
or
inc
push
or
mov
adc
movups
push
jo
push
adc
adc
sbb
add
mov
add
cmp
rorl
sub
enter
xor
dec
push
xor
adc
push
je
jo
xor
adc
xor
mov
jbe
push
dec
adc
xchg
sub
inc
adc
test
mov
inc
adc
mov
adc
dec
ss
dec
adc
sbb
push
dec
adc
and
dec
adc
ss
mov
ds
data16
jo
sub
adc
adc
sbb
xchg
adc
ss
push
push
xor
adc
add
pop
rcll
sub
adc
adc
push
add
lds
je
push
loopne
or
cmp
mov
cmpsb
fdivs
or
adc
add
push
mov
add
sub
add
sbb
cli
adc
xor
adc
inc
xor
pop
pop
xchg
pop
pop
int
mov
add
add
mov
stos
add
mov
mov
int
jbe
pop
stos
adc
add
test
adc
out
fisttps
lods
add
aas
dec
pop
scas
jle
scas
nop
pop
lret
mov
nop
add
int3
add
int
pop
lret
addb
add
pop
sbbb
ds
xchg
add
xchg
cmp
xchg
add
pop
xlat
scas
add
pop
xchg
insb
pop
xchg
pop
pop
cwtl
shr
jg
cltd
add
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
fdiv
or
pop
mov
rolb
movsb
add
pop
movsl
xchg
pop
cmpsb
rolb
jmp
add
pop
test
add
pop
mov
sbb
mov
sbb
mov
sbb
pop
addb
mov
pop
mov
adc
clc
mov
cli
pop
mov
add
pop
mov
add
pop
inc
add
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
movb
pop
movl
incl
add
mov
pop
or
pop
or
and
and
pop
decl
add
push
or
and
cmpsb
and
and
popf
and
sahf
and
decl
mov
and
lods
and
and
pusha
and
and
sub
aas
or
ds
ljmp
or
and
shlb
aaa
or
or
xor
aam
xor
shlb
xor
popa
std
jmp
sub
sbb
and
or
and
or
and
or
and
or
and
fildl
or
xchg
add
nop
and
and
push
and
jg
or
pop
or
and
sbb
or
sbb
or
push
sbb
push
or
and
or
and
adc
and
adc
cmp
jg
jmp
wbinvd
mov
or
or
and
and
or
sub
pop
or
pop
or
and
outsl
cli
pop
or
and
pop
or
pop
or
call
and
and
or
push
or
push
or
and
and
or
and
and
and
push
mov
push
and
push
and
and
push
and
pop
and
add
pop
and
pop
and
and
and
sub
inc
or
inc
or
and
pop
and
or
or
cmp
pop
and
or
xor
scas
xor
shll
or
and
das
or
and
or
and
ljmp
decl
sbb
and
or
and
or
and
push
daa
and
lods
and
and
mov
xchg
and
or
or
ljmp
and
sbb
and
or
cld
pushl
mov
adc
adc
arpl
adc
adc
gs
push
les
push
push
and
daa
or
mov
in
outsl
es
inc
sbb
inc
mov
or
es
ss
and
or
mov
mov
cmp
nop
icebp
mov
jle
or
cmp
or
pop
loopne
mov
nop
and
or
xor
or
rcll
loopne
xor
sub
or
sub
out
rolb
push
or
mov
clc
pop
jmp
pop
or
add
sbb
or
add
sbb
add
incl
push
or
add
adc
fildl
adc
add
lock
incl
push
or
add
or
jecxz
or
insb
or
add
sub
add
or
push
jmp
cli
jg
add
pop
or
pop
pop
or
outsl
fcmovbe
je
out
push
pop
jo
push
or
fldt
popa
push
push
sub
push
or
push
push
or
push
push
decl
adc
dec
or
adc
dec
or
adc
dec
or
push
push
dec
decl
sbb
inc
or
sbb
inc
or
sbb
inc
or
push
push
inc
mov
pop
push
aas
or
and
cmp
or
mov
or
es
cmp
push
ss
sub
xor
ljmp
push
xor
sub
push
xor
xor
cs
xor
sub
scas
clc
pushl
push
sub
xor
push
sub
cmp
cmp
lcall
mov
cmp
and
push
pop
or
inc
push
sbb
decl
sbb
inc
push
sbb
inc
push
sbb
inc
push
pop
or
dec
push
adc
decl
adc
dec
push
adc
dec
push
prefetchwt1
or
outsl
sbb
push
pop
or
push
or
cmpb
push
aam
pop
push
push
or
xor
sub
pusha
xor
pop
push
pop
jp
sub
mov
xor
aaa
xor
xor
xor
xor
ret
insl
lcall
aas
xor
fdivs
cmp
fiaddl
ljmp
or
sub
inc
xor
inc
xor
inc
xor
dec
mov
roll
dec
xor
xor
push
sub
jp
xor
xor
addb
xor
sub
pop
pop
xor
push
repnz
xor
push
xor
xchg
and
xor
inc
push
xor
xor
xor
insb
fcoms
pusha
push
xchg
pop
xor
sbb
mov
xor
bound
shlb
loop
mov
ret
test
repnz
adc
lods
and
scas
adc
mov
lds
jb
adc
lods
pop
xchg
mov
mov
adc
mov
arpl
mov
mov
jbe
fdivs
mov
xor
cmp
adc
adc
adc
fdivs
ret
insl
xor
sub
push
js
push
jg
rolb
call
xchg
add
orb
xor
adc
adc
cs
fbstp
mov
push
add
push
add
js
pop
and
fwait
add
and
mov
fldcw
and
rorb
lock
outsb
push
and
xchg
and
jns
inc
add
push
mul
jns
out
repz
int
jns
in
in
add
add
fldt
cmp
rep
fsubrs
cmp
fisubrs
repz
cmp
rcrl
ficomps
xchg
cld
fmulp
jae
jg
fbstp
cs
iret
jnp
push
insl
push
mov
jns
lea
push
imul
fldenv
loope
sahf
out
xlat
arpl
cmp
out
fisubs
popa
push
iret
repz
shlb
push
xchg
push
cmp
repz
push
xchg
push
xchg
imul
push
nop
add
repz
sahf
dec
popf
dec
cmp
repz
dec
fwait
dec
lcall
dec
cwtl
inc
pop
lock
xchg
inc
xchg
inc
out
inc
out
pushf
pushf
aas
ds
jns
cmp
cmp
out
cmp
jns
out
test
sahf
xor
xor
out
xor
jle
out
sahf
out
jl,pn
jnp
out
sahf
sub
sub
js
sahf
out
push
pop
sbb
lahf
out
sbb
pop
fdivp
cmp
adc
push
mov
cwtl
push
mov
aas
mul
pop
jae
push
cmp
inc
mov
ds
cmp
insl
jle
cmp
mov
and
push
cmp
sbb
xor
lcall
jmp
jno
lahf
pop
jle
fs
imul
and
pushl
outsb
jp
pop
add
or
std
nop
inc
std
daa
mov
in
inc
stos
je
fldl
dec
adc
scas
aaa
imul
mov
cmp
bound
cmpsl
ficoms
push
xchg
ljmp
dec
add
mov
mov
or
cmp
jmp
and
sub
orb
mov
aas
popw
sbb
mov
test
or
push
ret
movsb
mov
push
out
jns
sub
adc
cmpsb
add
leave
sub
push
dec
add
lcall
outsl
mov
stc
mov
sbb
subb
mov
adcb
pop
adc
pop
outsl
dec
data16
outsb
dec
xorb
jg
lret
xchg
ss
and
xchg
mov
mov
push
mov
mov
mov
sbb
mov
add
xchg
dec
mov
cmp
mov
bound
mov
xor
xor
xor
and
jbe
imulb
sub
in
mov
test
dec
and
rorl
adc
mov
push
gs
inc
jge
push
xchg
movsl
jg
xor
mov
sub
mov
jl
sbb
mov
insb
xor
jnp
mov
imul
xor
lods
push
push
push
fisubrs
imul
jg
fistpll
lds
xor
xor
xor
xor
xor
xor
xor
xor
xor
imull
ljmp
cs
jbe
or
outsl
and
push
int3
pop
or
int3
xor
xor
xor
xor
pushl
xor
xor
xor
jne
rolb
in
pop
insb
jno
fs
div
ret
outsl
out
pop
jb
jmp
jnp
mov
pop
xor
mov
jo
dec
jo
ljmp
pop
mov
xor
and
pop
fldt
dec
pop
pop
adc
lret
ss
mov
ss
ss
ss
cld
pushl
inc
rcrb
jl
in
sahf
sub
lods
xor
sub
vmovaps
shl
push
jmp
xor
xor
call
inc
ja
mov
xor
push
arpl
out
adc
jnp
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
shrb
test
lcall
add
cltd
lret
jo
dec
cmp
aas
aas
sarl
lcall
aas
in
jg
int3
mov
pusha
mov
and
cmp
imul
mov
xor
mov
xor
xor
xor
jg
push
es
xor
mov
cwtd
clc
jae
xor
xchg
xlat
xor
call
dec
scas
inc
scas
pushl
and
lahf
xor
jl
jge
incl
xor
outsb
int3
std
push
cmpsl
or
or
dec
ret
loop
incl
repnz
out
pop
shll
mov
mov
mov
mov
jecxz
data16
inc
adc
ret
mov
fwait
push
sub
mov
inc
aaa
shlb
ljmp
cmp
xorb
cmc
insb
push
sbb
clc
filds
incl
sbb
cmp
cmp
cmp
cmp
xor
mov
stos
inc
adc
dec
stc
and
icebp
cli
add
add
sti
push
cmp
cmp
cmp
ljmp
fidivrl
inc
push
cmp
jge
cs
loop
inc
jb
mov
cltd
add
ljmp
pusha
or
loope
test
jb
xchg
ds
ds
ds
or
fisubrs
lret
push
mov
add
js
nop
data16
call
xor
xor
xor
pushl
xor
xor
xor
aas
inc
cmp
push
sub
cmpsb
outsb
ja
or
ljmp
hlt
add
cmp
enter
icebp
cmp
cmp
cmp
pushl
mov
es
mov
std
pushw
sbb
arpl
cmp
cmp
cmp
cmp
int
sbb
cmp
out
pop
jle
repz
lahf
les
pop
fs
add
fldcw
sahf
out
pop
adc
fdivrs
sub
sahf
add
jg
xorl
or
sub
sbb
js
sbb
bound
and
pop
je
lahf
xor
cli
cmpsb
dec
mov
xor
xor
xor
scas
or
push
mov
xchg
cs
call
push
pxor
adc
jmp
push
pop
out
sbb
jecxz
push
pop
push
loope
adc
xlat
sub
sub
ss
ja
xor
ret
cmp
fsubs
js
cmp
xchg
pop
pop
pop
lahf
aas
mov
jg
addl
mov
decl
xchg
xchg
imul
fwait
arpl
mov
cmpsl
push
test
ljmp
mov
dec
mov
mov
mov
mov
ret
cmp
mov
leave
lret
dec
into
iret
das
rcl
shrl
aad
xlat
daa
fstp
fistps
loope
jecxz
in
out
jmp
loopne
in
out
out
psllw
repz
div
pop
stc
cli
sti
add
incl
add
mov
add
aas
or
add
inc
inc
inc
add
dec
dec
dec
add
call
stos
push
push
push
add
adc
sbb
pop
add
popa
sbb
sbb
xchg
add
add
add
xchg
and
popa
sbb
sub
xchg
add
xor
jge
aas
inc
out
inc
loop
sbb
incl
andl
mov
sbb
mov
sbb
cmp
fisttps
rcrb
add
xor
add
addb
lea
jg
icebp
incl
lea
jg
fwait
pusha
add
add
push
rclb
jg
add
jb
sbb
ret
add
or
outsl
fistpl
in
adc
adc
jg
fildl
bswap
sbb
daa
sar
inc
cld
neg
sbb
dec
out
add
dec
rolb
add
popa
add
cmp
je
fwait
insb
insb
sub
gs
je
lcall
inc
fwait
fs
imul
add
or
mov
mov
incl
inc
lcall
rclb
inc
add
orl
lret
push
xlat
inc
xchg
cmp
or
mov
cmpsl
rolb
rclb
outsb
push
pushf
je
mov
push
push
shlb
cs
test
mov
lock
push
roll
add
dec
jae
adc
xchg
jb
lret
add
add
or
adc
fucomi
or
or
add
data16
add
and
sbb
ret
sub
or
cld
xchg
fiaddl
jo
push
ficompl
rorl
rolb
fs
add
mov
sti
pop
ret
add
xchg
lret
inc
inc
xor
pushl
les
sub
add
add
aad
add
ficoml
test
inc
xchg
les
dec
into
arpl
pop
push
outsl
loopne
je
push
add
pop
sub
and
paddsb
stos
add
add
outsb
add
adcl
add
sbb
fisttps
add
pusha
push
gs
mov
mov
fcos
adc
data16
insb
inc
jl
pusha
xor
pop
std
and
sbb
je
jo
aaa
sub
lds
das
ja
jo
bound
pushf
sbb
das
loope
call
hlt
insb
lcall
gs
push
out
inc
jbe
lods
pusha
or
or
stos
loopne
mov
mov
setae
popa
or
or
stos
or
adc
ja
scas
jl
and
iret
xor
cs
xor
jl
add
adc
subb
outsb
inc
add
mov
lret
insl
xor
jg
mov
push
dec
xchg
xorl
xchg
xchg
jle
mov
mov
mov
mov
pop
mov
fs
mov
out
sbb
stos
or
add
inc
push
pop
test
jg
incl
addl
lods
sub
repnz
xor
adc
push
add
jg
outsb
cs
notl
std
jmp
sti
xor
jmp
clc
incl
in
call
lods
lods
inc
hlt
popa
adc
and
enter
mov
adc
cli
cmp
and
xor
mov
ljmp
cmp
sub
sbb
sub
add
jmp
jg
sti
sbb
sbb
pop
shlb
in
std
push
out
and
jmp
loop
call
out
shrb
sbb
rep
pop
movsb
xor
inc
mov
movsl
add
popa
or
testb
scas
imulb
sbb
hlt
stc
add
jg
mov
jo
mov
mov
dec
stos
mov
sub
cmp
jecxz
mov
pop
add
mov
fdivrs
mov
mov
mov
jo
cmpsl
mov
mov
jmp
in
lds
pusha
push
in
jns
add
insb
test
inc
fmuls
cmpsl
dec
and
push
pop
jg
out
clc
push
mov
outsl
jae
jo
arpl
cld
jg
loop
outsb
imul
es
adc
rcr
loopne
push
pop
add
sti
movsb
push
in
mov
or
repnz
add
das
rolb
push
je
add
gs
xchg
ja
scas
mov
sbbb
xorb
cmp
jp
arpl
loope
into
and
js
sub
add
incl
xlat
orb
test
test
adc
mov
xchg
jl
stos
mov
andl
mov
mov
mov
mov
xor
pop
out
dec
and
mov
outsl
incl
add
add
push
out
xor
push
pop
outsl
in
sbb
mov
add
stc
add
shrb
mov
jbe
and
jne
xchg
fcmovnu
incb
jp
xor
je
jne
jg
inc
mov
dec
sbb
call
or
mov
dec
mov
in
clc
cmp
nop
pop
pop
pop
cmpsl
inc
pop
mov
adc
stos
pop
popa
mov
push
xor
inc
or
or
scas
adc
sbb
push
test
scas
inc
movsl
or
push
push
mov
shrb
add
loop
fstps
out
fistpll
out
adc
loope
sbb
push
inc
or
mov
inc
mov
inc
dec
jp
movsl
add
push
out
add
inc
fdivr
pushl
mov
xor
mov
leave
add
cmp
or
std
popf
shr
add
clc
dec
push
mov
dec
add
adc
pop
jo
outsl
aaa
sbb
sbb
mov
push
icebp
add
push
shrb
insb
cld
jg
out
pop
imul
or
inc
std
jmp
mull
loopne
div
mov
jno
add
popf
and
xlat
int3
filds
ffreep
add
movsb
mov
mov
dec
inc
dec
stos
cli
push
dec
mov
mov
pop
lcall
icebp
out
cmc
cld
lock
in
icebp
add
dec
es
mov
mov
cmpsl
pop
dec
pop
mov
dec
mov
inc
dec
mov
orb
arpl
loope
std
pop
mov
or
cmc
fistpl
sbb
loop
add
testb
jbe
fwait
cmpb
mov
mov
scas
adcl
lock
lock
inc
xchg
cmpsb
add
pop
mov
incl
je
dec
dec
mov
cmpsb
jae
mov
push
add
jg
pushl
add
rol
adc
add
ss
loopne
and
aam
scas
mov
ret
js
fs
mov
mov
mov
dec
pop
sbb
decl
push
mov
xchg
push
push
inc
mov
aaa
insb
clc
mov
out
lock
sbb
add
loopne
in
adc
sbb
pop
decl
or
popa
mov
jae
xchg
or
das
js
mov
pop
mov
xchg
pop
mov
test
lods
xor
jbe
mov
inc
loop
add
jo
test
xor
xchg
mov
pop
mov
mov
add
pop
add
call
add
push
sbb
push
or
mov
das
fmull
out
and
rol
aad
add
and
jecxz
xor
roll
xor
mov
inc
xchg
imul
add
out
lds
sar
hlt
or
sbb
jecxz
sub
xchg
or
mov
jae
mov
mov
or
add
int3
loope
or
out
rcr
push
add
and
and
add
adc
lret
adcb
mov
into
mov
hlt
data16
xchg
xor
add
inc
or
dec
jg
or
in
push
or
adc
sub
icebp
or
xlat
jg
pushl
sahf
mov
xchg
mov
and
sbb
push
clc
xor
and
jg
jg
sbb
sbb
jmp
cltd
mov
jno
mov
pop
movsb
mov
inc
nop
lods
sti
sbb
hlt
mov
sbb
jmp
mov
xchg
xchg
cltd
mov
movsb
cltd
fwait
imul
lock
btr
sbb
sbb
pop
out
push
es
out
dec
mov
call
mov
jns
je
addr16
adcl
data16
xor
xchg
xor
mov
push
add
addr16
pop
cmpsl
push
test
mov
inc
jg
cmpsb
pop
andb
and
jno
leave
adc
adc
mov
insl
jb
or
pusha
pop
mov
out
cli
decl
test
aas
jo
pop
inc
push
arpl
jg
mov
push
mov
xor
jb
and
dec
mov
add
rolb
fldenv
lret
and
or
repnz
fs
add
in
jmp
inc
or
mov
imul
data16
outsl
xorb
mov
dec
dec
dec
mov
dec
dec
add
fisubl
sbb
add
and
add
scas
sbb
in
adc
cmp
das
cmp
push
shrb
ss
pop
jo
cld
fwait
mov
movb
push
or
fidivs
add
std
adc
jo
out
sbb
icebp
add
add
push
lcall
je
mov
mov
jns
lahf
and
jno
jg
decb
test
xchg
push
mov
cld
dec
xor
mov
mov
mov
in
jnp
lcall
jo
lea
mov
pop
dec
xchg
call
aad
push
mov
xor
xor
fcmovu
call
rclb
cmpsb
pop
inc
inc
mov
ja
lahf
add
xchg
stos
mov
jg
inc
lods
mov
stos
mov
scas
dec
mov
add
mov
mov
cld
jg
pop
mov
stos
xchg
lea
mov
inc
test
add
pusha
inc
pop
pusha
and
ds
jmp
xor
jle
xchg
movsl
mov
inc
mov
and
jg
lods
lods
mov
sub
test
repz
pop
or
dec
xchg
repnz
pop
or
into
repz
cld
call
fildll
ja
add
jo
fldl
and
xor
stc
ja
sbb
push
in
cld
out
jmp
cld
in
cli
adc
fadd
sarb
aam
xor
fmuls
fcmovu
xor
jp
or
or
xchg
je
insl
mov
arpl
mov
or
roll
mov
subb
pushf
lds
add
loope
mov
decl
push
repnz
ja
jle
rolb
or
inc
data16
mov
add
ja
jns
jp
add
xor
sbb
mov
stos
mov
push
test
aas
add
pop
in
out
adc
mov
out
push
jmp
popf
popa
adcb
aas
les
sub
adc
decl
or
or
adc
psrad
pop
cmp
sbbb
loop
add
ja
mov
mov
xor
mov
movsb
testb
dec
inc
adc
hlt
repnz
mov
jl
incb
lea
cmc
pop
pop
and
jg
scas
adc
mov
incb
jecxz
ror
out
clc
inc
les
push
mov
cmpsb
pop
add
inc
xor
jmp
jmp
mov
xchg
mov
dec
mov
add
jb
mov
mov
inc
push
and
adc
mov
pop
add
decl
mov
adcb
adc
ltr
ja,pt
add
dec
lret
jns
jl
jae
add
and
aaa
jle
ljmp
cmp
xor
push
adc
fs
cli
out
call
into
push
add
ret
rorl
xchg
shr
add
mov
mov
or
push
ljmp
jmp
mov
aam
fcmovnu
test
loope
xchg
lods
inc
mov
add
sub
mov
ret
imul
mov
outsl
sar
adc
sub
rol
in
dec
sub
mov
iret
add
out
movl
ss
fistpll
mulb
sbb
adc
add
adc
cli
sub
push
std
or
les
jecxz
mul
sub
mov
repnz
jmp
in
out
clc
pushl
dec
jecxz
out
fwait
les
or
ljmp
mov
or
rolb
shll
rcr
outsb
mov
scas
push
aaa
adc
in
fbld
adc
ljmp
insb
and
call
dec
mov
push
xor
enter
fdivp
clc
add
lret
aam
cld
incl
clc
mul
hlt
add
mov
dec
inc
cmpsl
inc
pop
jno
or
inc
ljmp
xor
ret
cmp
jo,pn
pop
mov
push
cltd
push
mov
sarb
fiadds
clc
nop
sub
mov
push
push
push
mov
sahf
dec
inc
inc
inc
incl
js
jmp
xor
clc
imul
add
xor
cld
daa
pushf
in
shll
les
movsb
das
cli
or
das
inc
add
into
or
clc
enter
fucom
push
cld
incl
loope
mov
sbb
rol
data16
cmp
jbe
ss
push
jno
mov
das
xor
aaa
sbb
push
shrb
and
ret
add
es
fists
xor
add
fnstsw
and
mov
ja
aaa
lds
ds
shll
das
add
pushl
aaa
dec
lea
dec
mov
std
mov
inc
mov
pushf
pop
push
push
mov
xchg
pop
adc
pusha
pop
push
mov
out
les
and
aaa
cmp
cli
testb
cmp
ljmp
mov
mov
jg
jns
mov
scas
adc
stos
mov
mov
lahf
inc
mov
call
std
mov
mov
xor
add
add
leave
jge
out
add
ja
jmp
mov
data16
daa
and
cmp
mov
add
inc
dec
pop
sahf
dec
pop
and
mov
insl
jb
xchg
lock
jg
add
pop
movsb
pop
inc
jne
jl
inc
inc
dec
or
pop
pop
or
adcb
push
push
sbbl
arpl
ljmp
xor
lret
ss
hlt
add
mov
pop
push
push
scas
pop
xchg
push
dec
push
jg
mov
dec
inc
mov
add
xor
loope
inc
mov
mov
add
sbbb
jo
xchg
jb
sbbb
add
mov
xchg
xorl
imul
std
int3
sbb
lret
arpl
aaa
cltd
lret
cli
jg
adc
bound
rolb
lock
cmp
scas
test
add
orb
inc
add
xchg
mov
jl
stos
insb
xchg
pushf
xchg
jle
test
sahf
push
cld
push
jg
lcall
fwait
lea
sbb
push
inc
scas
lods
mov
mov
mov
mov
mov
rcll
inc
dec
dec
pop
push
incl
dec
inc
push
add
adc
mov
enter
sbbb
imul
add
mov
pushf
sahf
push
xor
cmp
jae
jg
add
push
mov
dec
pop
xchg
jge
cmp
mov
inc
pop
mov
arpl
add
lahf
pop
push
dec
mov
sbb
subb
mov
js
jl
push
jle
push
std
pop
addb
sbb
add
rorb
int
in
fisttps
das
int3
ror
daa
pusha
hlt
sub
daa
rol
int3
or
mov
jmp
jmp
add
dec
cmpb
pushf
dec
dec
pop
test
mov
pop
add
cmpsl
dec
pop
pop
stos
push
sarl
mov
push
inc
jle
cmp
cmp
shl
jle
sub
pop
arpl
push
jnp
push
outsl
mov
jbe
jne
or
sbb
or
unpcklps
adc
push
pop
add
idiv
push
cmpsb
adc
cwtd
rclb
xchg
nop
xchg
inc
incl
jns
fadds
xchg
pusha
sahf
cltd
lcall
xchg
xchg
sahf
jns
scas
add
fcomip
call
loope
add
push
repnz
movsl
jo
mov
scas
push
mov
mov
cmp
mov
les
ret
std
add
and
into
les
add
and
jg
es
xor
or
scas
add
call
ljmp
clc
adc
dec
out
cli
sbb
sti
out
mov
add
adc
add
push
cmp
add
mov
fwait
decl
ljmp
jg
testb
add
and
and
xor
cmp
add
cmp
fdivrs
cmp
cld
xor
fcomip
outsl
and
ret
sub
dec
inc
inc
icebp
add
add
mov
mov
loop
cmp
cmp
popa
and
sahf
data16
xchg
mov
jnp
test
test
jg
xchg
xchg
jbe
push
insb
jp
cmpb
jp
xchg
xorb
add
jmp
dec
cltd
shrl
aam
push
subl
aad
jg
xchg
fs
movsl
push
test
mov
pop
mov
add
mov
push
jg
mov
pop
call
pushf
push
stos
lods
inc
aad
jle
adc
loope
jle
je
mov
push
dec
pop
dec
insl
clc
dec
loop
xchg
fwait
insb
adc
sub
test
push
mov
push
xchg
loope
pusha
sbb
test
and
inc
jg
mov
mov
mov
cltd
pusha
dec
sbb
lcall
add
pop
cmc
div
je
roll
mov
outsb
arpl
mov
add
inc
mov
sbb
or
mov
mov
jbe
in
cwtl
test
push
std
jg
dec
mov
mov
xchg
arpl
push
cwtl
lock
ja
jae
ficoml
dec
add
pushf
mov
mov
mov
inc
add
mov
add
push
stc
sbb
sbb
inc
loope
inc
test
ret
push
sbb
insb
cmpsb
movsb
mov
scas
mov
jg
add
pop
loopne
mov
imul
cmp
add
aas
es
and
cmp
loope
leave
incl
cli
sub
xor
sub
sub
sub
xor
jnp
jg
outsl
les
inc
dec
mov
lcall
mov
scas
pusha
or
les
jne
test
dec
adc
pop
shl
add
aaa
and
les
jbe
xor
cmp
aaa
or
fidivrl
add
or
xor
pusha
add
lcall
adc
lea
iret
add
and
inc
xor
lock
clc
inc
add
xor
add
jnp
leave
cmp
aas
lret
gs
sub
push
sub
xor
inc
inc
push
push
add
decl
in
or
cli
bnd
adc
call
out
loop
out
adc
jmp
jmp
sbb
mov
cmp
cld
push
clc
imul
jl
adcb
lret
hlt
aaa
cld
adc
lea
outsb
enter
mov
push
sbb
lcall
jp
test
pop
inc
push
notb
pop
adc
sbb
addl
pusha
xchg
xchg
subl
mov
imul
inc
incl
dec
pusha
push
test
packsswb
adc
jae
sarl
add
mov
aaa
mov
mov
mov
in
sub
sbb
scas
mov
add
jl
pop
pop
or
or
sbb
incl
mov
and
and
and
fcom
iret
xor
mov
stos
jg
mov
push
add
out
sbb
outsl
ljmp
enter
add
adc
in
inc
or
nop
sbb
sbb
jecxz
cld
mov
add
ss
subb
lods
fimull
loope
hlt
mov
xor
ffreep
inc
xor
or
stos
call
xor
xchg
sub
loope
mov
aam
subb
test
lock
and
or
xchg
ljmp
jg
pop
pop
push
scas
pop
outsl
pop
sbb
sbb
mov
inc
xlat
or
and
sbb
pop
loop
inc
je
jo
push
out
sbb
jmp
setle
std
or
scas
pop
dec
inc
hlt
pusha
add
stos
mov
pop
mov
in
mov
adcl
test
jg
pop
into
pusha
js
enter
add
imul
lock
mov
pop
ljmp
inc
inc
inc
mov
adc
pop
mov
mov
scas
cli
pop
call
sbb
pop
loopne
dec
pop
inc
cmp
inc
fsubl
push
ja
mov
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
cld
ljmp
pop
in
sti
cli
push
mov
mov
dec
mov
mov
out
incb
pop
stos
mov
test
lcall
mov
jbe
lret
aaa
std
fistps
jnp
sbb
or
mov
dec
add
sbb
mov
dec
push
scas
push
push
ss
push
push
pop
cmpsb
pop
out
bound
imul
push
insb
insl
outsb
nop
jo
add
je
jbe
js
add
and
and
das
xor
loopne
dec
push
mov
nop
jae
mov
js
sbbb
mov
lock
and
inc
inc
add
call
add
or
or
fldcw
add
push
pop
pop
pop
mov
arpl
repz
imul
lcall
and
nop
dec
aam
or
mov
scas
xchg
scas
mov
push
push
mov
xor
scas
and
lds
loope
add
mov
loopne
nop
popa
subb
test
add
fadds
into
xchg
adc
mov
add
fbstp
dec
insb
inc
mov
add
mov
loop
add
lock
jae
pop
fdivl
aaa
test
mov
xchg
add
hlt
jbe
dec
pop
add
mov
mov
nop
adc
push
mov
mov
gs
push
jo
incl
gs
es
popa
fs
bound
jl
outsl
pushl
jb
inc
mov
mov
inc
jb
popa
je
stos
push
mov
hlt
push
das
adc
lcall
adc
and
fildll
push
jne
mov
dec
xchg
outsw
jb
push
data16
decl
nop
arpl
lods
je
push
or
mov
ss
push
je
lea
fiaddl
pop
lock
dec
nop
rolb
xor
out
lcall
xor
outsb
fwait
insb
cli
adc
fs
mov
div
or
or
pushl
decb
ret
js
push
in
and
mov
decb
push
mov
inc
inc
push
inc
push
adc
pop
or
mov
and
push
inc
dec
mov
decl
mov
add
inc
mov
mov
or
push
xor
dec
inc
inc
stos
adc
dec
stos
icebp
mov
inc
push
lods
or
dec
dec
dec
mov
push
push
fists
mov
adc
xor
dec
push
inc
mov
inc
dec
mov
loop
xchg
lock
inc
dec
icebp
add
stos
push
nop
add
push
add
and
sub
dec
mov
sbb
scas
lret
inc
xor
cld
ja
in
inc
pushf
outsl
outsb
outsb
lcall
or
xor
sub
arpl
clc
outsl
push
outsb
mov
bnd
outsb
je
and
lock
push
push
mov
shlb
outsb
arpl
pushl
push
cmp
addr16
cmp
outsb
xchg
decl
add
jo
popa
insb
imul
xor
sbb
clc
or
bound
xor
lock
cmp
sub
add
shll
mov
jp
gs
mov
add
inc
add
das
sar
incl
cmp
push
pushf
jno
or
and
mov
lock
lret
xchg
outsb
push
jae
push
pop
lock
or
xchg
jae
dec
xor
add
add
xor
dec
fcoml
mov
pushf
jno
xchg
imul
lods
pusha
xor
rclb
inc
int
rcrb
orb
cli
sbb
nop
mov
xchg
xor
xchg
js
cmc
adc
orb
mov
imul
mov
adc
enter
imul
cwtl
add
fs
dec
scas
pop
pusha
jnp
add
test
jo
xor
mov
je
adc
outsb
repnz
lcall
jle
mov
jo
out
add
inc
dec
push
mov
push
add
or
jae
loopne
pop
xor
icebp
add
xor
repnz
incl
lods
imul
add
call
inc
push
outsl
xor
orb
sbb
std
adc
mov
sub
mov
add
pop
dec
rorl
jp
mov
pushf
imul
fidivs
repnz
xor
push
popa
ljmp
push
lea
cli
stos
pop
add
aas
mov
xor
inc
mov
sub
jg
cs
addr16
jle
dec
into
adc
adc
jle
fdiv
pop
and
fcomps
and
inc
std
jnp
push
mov
xchg
rorl
and
test
jns
inc
jge
mov
scas
sbbl
add
xchg
push
xchg
or
xchg
sar
inc
jmp
xchg
lock
xchg
jo
xchg
mov
lea
lcall
add
jb
xchg
sub
shlb
mov
xor
pop
sub
jno
xor
frstor
and
and
add
call
adc
jb
xor
or
fdiv
inc
outsb
mov
adcb
or
or
mov
lea
xor
xchg
fnstcw
inc
add
je
imul
xchg
jecxz
lds
insb
and
and
mov
fbld
imul
lcall
fbstp
pusha
fcmovnu
and
or
and
add
pop
inc
lcall
mov
sbb
shlb
cs
shlb
mov
fbstp
push
pushf
push
sbb
xchg
inc
repnz
decl
mov
stos
push
add
dec
pop
jge
add
mov
call
inc
adc
call
inc
sahf
test
lock
test
add
adc
adc
and
mov
inc
nop
ja
stos
xor
test
inc
add
sub
add
jmp
pop
cmp
call
xor
cmp
mov
add
movsb
push
call
or
pop
ret
push
nop
in
jle
test
add
lock
add
add
pop
stc
dec
fimull
jne
outsl
mov
jmp
sub
incl
add
jae
or
call
dec
pop
sti
and
mov
push
fadds
std
ds
leave
call
mov
push
addl
cld
call
cmp
adc
jo
mov
inc
mov
lret
je
push
lea
jne
mov
scas
add
flds
lretw
mov
pop
push
clc
dec
enter
mov
cmp
ss
mov
inc
inc
add
and
mov
jp
std
repnz
jo
test
mov
inc
call
mov
sbb
jg
js
add
outsb
je
add
jne
call
orb
pop
ljmp
add
jle
test
cmp
ljmp
pop
mov
mov
pop
pushf
add
int
pcmpeqw
call
das
call
pop
nop
pop
push
mov
xor
add
inc
cmp
in
xchg
aam
xchg
xchg
and
mov
mull
cwtl
call
push
test
mov
inc
cld
sub
fstpt
xor
jl
jg
pop
mov
faddl
push
lock
adc
scas
nop
lcall
jge
add
add
inc
dec
or
jne
das
lea
or
push
loopne
add
mov
mov
ret
jg
divb
xor
inc
ds
ret
dec
add
mull
jo
push
lods
push
lea
push
sbbb
ljmp
and
mov
mov
dec
sbb
sahf
xchg
or
mov
or
jl
je
test
mov
cmpl
je
and
add
out
jg
decl
shr
lea
inc
cmpb
inc
adc
leave
cmp
or
je
cmp
jbe
addl
push
outsb
inc
call
jne
adc
mov
mov
add
fbld
rcrb
push
mov
inc
sub
push
push
sbbl
lea
push
cmp
or
std
pop
je
rorb
test
mov
xor
decl
shlb
pop
pop
ret
clc
add
mov
andl
incb
or
adc
rcrb
jl
mov
push
inc
or
leave
push
add
stos
mov
sbb
leave
add
mov
out
clc
mulb
adc
xor
out
jb
cld
outsl
movsb
sbb
push
rorb
addb
data16
ret
xchg
add
out
rolb
mov
mov
icebp
incl
mov
inc
inc
add
ss
adc
adcl
loopne
and
rcr
adc
xor
lock
dec
push
mov
mov
push
shll
sarb
outsl
fcomip
mov
mov
ret
mov
aas
cmpl
add
mov
call
mov
mov
hlt
rolb
shll
cli
mov
pushl
add
dec
mov
mov
jbe
add
cmp
stos
cmp
mov
ds
lds
rcr
pop
pop
leave
add
push
mov
or
je
data16
shll
sbb
mull
frstpm(287
fildl
insb
js
or
fcoml
push
mov
mov
int3
add
xchg
add
sbbb
dec
dec
je
or
dec
add
mov
push
mov
hlt
or
adc
cmp
hlt
push
loopne
clc
pusha
mov
loopne
cld
loopne
test
mov
pusha
outsl
sbbb
neg
lock
sub
push
jne
and
and
inc
jl
movsb
inc
mov
or
add
or
cmp
add
je
jmp
mov
or
pusha
inc
sub
lods
add
pop
xor
call
mov
sub
loopne
pop
pusha
jge
cmp
jmp
popa
inc
loope
clc
mov
insb
cmp
pop
loopne
in
sbb
inc
pop
push
push
or
cs
or
sbb
daa
loop
clc
fs
filds
adc
pop
push
test
pusha
adc
jb
push
xchg
pusha
inc
pop
jl
andb
test
pusha
add
decl
pusha
and
call
and
sub
outsl
inc
sbb
push
add
add
or
pop
out
sbb
divb
pusha
je
push
ds
push
shl
or
cli
inc
pusha
daa
dec
lock
jl
push
out
xchg
xor
jle
jbe
icebp
mov
call
or
enter
pop
or
clc
jbe
pop
in
loopne
adcl
jecxz
dec
dec
mov
or
insb
cmp
lcall
or
cmpsb
and
cli
add
repz
or
and
dec
xor
sarl
and
adc
rolb
aas
xor
cmp
testb
inc
int3
mov
add
push
xchg
add
add
adc
xchg
sub
sub
or
cwtl
decl
add
sub
cmp
push
loopne
and
rclb
push
push
popa
push
ljmp
addl
xchg
inc
call
pop
push
push
incl
das
test
inc
movsb
pusha
pusha
add
mov
add
push
push
pop
or
adc
loopne
loopne
pop
xchg
and
push
fcoms
idivl
in
aam
cmp
add
push
push
mov
pop
mov
shl
add
pop
or
call
sahf
or
decb
push
mov
into
pop
add
push
push
cmc
cmp
inc
ss
sbb
push
fildl
inc
jae
jmp
pusha
mov
call
inc
jecxz
cs
xchg
add
ja
movb
push
or
jl
sbb
add
verr
jne
pusha
inc
add
nop
call
push
jb
movsb
test
push
inc
pusha
pop
loope
pusha
dec
jg
in
mov
in
or
lea
mov
mov
add
out
and
int3
call
fsubl
add
in
inc
jg
jo
loop
push
cmp
push
xchg
push
loopne
sbb
push
pusha
test
jo
outsb
outsl
mov
lret
pusha
and
inc
cli
push
call
add
mov
loop
je
test
je
add
mov
std
add
scas
test
call
rorl
or
or
pusha
mov
fninit
loop
je
and
mov
les
roll
add
or
in
scas
call
sub
pop
outsl
cmp
adc
mov
rolb
pusha
mov
push
ds
mov
cld
mov
mov
orb
mov
dec
jne
adc
pop
jle
mov
sti
decl
cltd
push
test
sarb
popa
add
dec
pusha
add
pusha
das
push
loopne
mov
mov
in
divl
mov
mov
nop
adc
jp
jno
dec
inc
std
jns
or
or
mov
add
ljmp
les
icebp
pop
notb
push
push
mov
mov
sub
push
jb
push
cmp
incl
push
je
jge
aas
std
push
hlt
add
inc
sub
inc
mov
inc
incb
mov
add
pop
push
fs
divb
add
mov
sbb
out
xor
mov
icebp
push
xlat
das
fmull
push
fs
add
lock
aam
inc
and
jl
adc
test
arpl
cs
xchg
push
les
mov
sbb
clc
scas
push
fsubrs
add
push
pop
or
shrl
inc
dec
jmp
es
mov
idivb
jle
inc
xor
mov
repnz
jbe
aam
repnz
jne
push
call
cmpl
xor
or
xor
cmp
enter
add
test
adcl
lock
cmp
cmpb
add
clc
and
add
fbld
scas
decl
xor
mov
push
lock
adc
icebp
inc
cmp
xor
mov
cmp
push
inc
sub
ret
and
mov
add
cmp
cmp
idiv
fisttps
or
push
pop
inc
lock
pop
jno
cmp
and
jmp
icebp
add
rolb
adc
xchg
add
pop
ret
push
enter
jno
cmc
ja
lret
adc
dec
add
add
xor
jno
push
jg
fcom
push
xor
xor
xorb
pop
jg
lock
adc
lea
or
add
out
dec
push
fs
adc
jb
inc
jo
mov
push
mov
sub
je
outsl
mov
xor
xchg
add
dec
inc
mov
insb
mov
int3
leave
inc
push
mov
and
push
popf
clc
lock
mov
loop
loop
sbbb
clc
shll
enter
daa
push
call
scas
push
adc
fwait
xor
dec
arpl
fidivs
and
arpl
push
pushf
mov
or
bound
inc
fdivl
insb
pushl
sti
push
mov
xor
les
jbe
lock
adc
or
dec
pop
cltd
es
push
pop
ljmp
mov
mov
dec
push
or
mov
mov
ret
mov
push
lahf
mov
xor
mov
cmp
mov
jo
jge
add
mov
call
fdiv
fistpll
bndstx
inc
into
xor
pop
lret
cltd
push
adc
xchg
sub
cmc
orb
test
jmp
mov
call
outsl
adc
pop
enter
jb
ss
call
push
decl
or
fs
mov
push
add
add
push
or
inc
xorb
and
arpl
cs
xor
int3
adc
faddp
dec
jb
pop
je
jne
mov
adc
mov
push
push
lea
std
call
mov
call
add
or
lcall
lea
clc
xor
cmc
lock
cld
sar
add
stos
jmp
jne
adc
adc
and
push
cmp
pop
roll
adc
add
adc
or
test
jmp
addl
pop
mov
xor
push
outsb
mov
lock
add
fbstp
mov
call
jne
hlt
jbe
mov
sub
xchg
scas
negl
iret
jmp
xor
inc
adc
sbb
loopne
in
pushl
mov
adc
test
arpl
jle
add
mov
xor
sub
mov
pop
test
mov
shr
lret
cmpl
add
or
out
mov
lock
stc
add
push
pop
cld
lcall
jb
dec
add
ret
add
jne
xchg
adc
xor
fisubl
int
decb
mov
ret
rolb
dec
dec
je
andl
adc
mov
fdivrs
mov
push
mov
nop
addb
ret
xor
pop
pop
jp
data16
andl
and
shlb
ret
xor
fdivrl
ret
mov
roll
mov
sbb
jge
push
loop
mov
cmp
pop
mov
jp
je
xchg
mov
call
jno
xchg
push
add
mov
aad
add
jle
add
shr
jb
cmc
incl
and
pop
jne
mov
aam
je
mov
adc
adc
fistpll
inc
cld
add
push
icebp
scas
add
ss
pop
jmp
xor
incl
mov
add
inc
jmp
je
xor
add
cmp
jbe
mov
jmp
xor
add
loop
cs
xor
xchg
decl
std
decl
jo
mov
add
mov
dec
add
hlt
and
mov
jb
call
push
dec
test
add
mov
or
sahf
lcall
pushl
adc
push
jne
jae
loope
mov
push
push
lods
adc
push
push
add
or
xor
sbb
xor
jmp
or
or
testl
sar
ja
je
or
mov
jb
je
pop
icebp
xor
sbb
cmpsb
pop
cmc
test
or
or
add
jo
jg
xor
js
call
mov
adc
imul
add
outsb
xor
jp
mov
je
or
xorb
or
cmp
add
jo
ret
push
push
je
and
or
test
pop
outsl
xor
clc
les
jmp
jnp
cmp
pop
adc
jle
cmp
lret
jo
fs
or
xlat
mov
icebp
pop
cli
shll
or
add
sub
repnz
mov
and
pushl
std
inc
imul
mov
inc
jecxz
outsb
inc
je
jno
incl
je
ret
jg
ljmp
xlat
add
xor
push
mov
mov
popa
push
cmpl
dec
sbb
jbe
loopne
xor
or
pop
out
xor
adc
pop
sbb
sub
fildl
cld
pushl
pop
mov
out
lock
xor
ljmp
shlb
movsb
xor
cmp
push
in
loopne
fcomip
inc
mov
push
xor
adc
jbe
call
jbe
ljmp
or
xor
mov
xor
mov
enter
lea
add
mov
xchg
mov
jmp
mov
je
jp
jne
lods
call
sbb
adc
iret
adc
jp
sub
jae
in
inc
pop
in
paddusb
unpcklps
mov
std
incl
clc
call
dec
icebp
std
or
add
call
mov
or
je
jl
outsb
push
cwtl
inc
mov
adc
xchg
cmp
call
push
add
or
jbe
lret
or
rclb
jl
sbb
jecxz
aaa
test
mov
paddd
pop
test
insb
les
nop
call
jp
inc
jp
jge
sbb
imul
push
lahf
popa
xchg
test
fisubl
adc
fisubrl
mov
test
addl
shlb
push
xchg
mov
sbb
repz
pop
push
pop
fcmovu
ficomps
add
xor
cmp
cmp
xor
jmp
js
int3
cli
andb
mov
ret
sub
stos
push
push
loopne
clc
jg
mov
or
cmp
out
subl
xchg
mov
int
adc
cmpsb
add
sbb
jo
mov
cmp
stos
rorl
call
daa
je
mov
aam
arpl
adc
call
push
sahf
sbb
cli
push
push
incl
jg
push
cmc
cs
rclb
orl
add
enter
cld
adcb
cmp
fcoml
stc
mov
mov
fcomip
push
leave
insb
add
inc
or
pop
push
add
add
inc
and
in
add
and
push
cli
jmp
push
xchg
add
push
lock
cs
dec
call
sub
or
mov
mov
and
push
jne
repnz
inc
aaa
xor
in
out
or
push
inc
hlt
aaa
xchg
fcomps
shrl
xchg
add
lock
cmp
cmp
jp
je
adc
test
pop
test
stos
mov
inc
shlb
pop
ret
call
dec
aad
in
js
jge
mov
mov
mov
nop
loopne
pop
lock
lea
popa
and
adc
add
roll
xchg
ljmp
sub
decb
ret
lcall
push
inc
in
push
push
notl
jl
cld
mov
lods
or
sbbb
add
jbe
xor
xor
je
push
sti
and
sbb
mov
call
lea
push
xchg
sub
inc
sub
clc
add
mov
push
sbb
scas
push
mov
test
outsb
outsb
scas
call
aas
inc
les
add
insb
sbb
mov
add
or
mov
fwait
mov
mov
pushw
subl
inc
je
shlb
mov
mov
xor
push
mov
je
call
push
loop
cmp
sbbl
jmp
inc
pop
fidivrs
pop
js
cmp
xor
inc
adc
aam
shlb
pop
inc
sahf
mov
pop
lods
push
push
mov
add
fildl
push
test
je
call
cs
mov
cmp
xchg
mov
je
mov
aam
mov
jne
out
rcr
xchg
xchg
add
inc
mov
dec
rcr
call
rcll
or
rolb
inc
sbbb
rcrb
insl
shrl
mov
or
push
inc
hlt
pop
sti
aaa
roll
les
inc
mov
mov
lods
jmp
sahf
mov
pop
insb
mov
movsb
or
dec
pop
jb
add
call
loope
fildll
push
out
pop
mov
add
and
and
mov
ljmp
lock
sbb
insb
bound
insb
inc
push
test
push
call
add
add
mov
leave
mov
mov
add
lds
aas
mov
idiv
sbb
pop
out
cmp
mov
and
inc
or
mov
inc
xor
lock
xchg
push
hlt
test
je
call
cmc
mov
push
fst
push
add
sbb
loopne
pop
push
cld
pop
lock
rclb
jp
jne
inc
lea
lods
rolb
stos
push
push
fadds
jecxz
data16
adc
dec
add
or
or
jge
cltd
pushf
and
mov
mov
xor
jbe
lock
or
add
mov
adc
cmp
jbe
jge
lock
add
outsb
ds
mov
jp
test
lcall
aad
cmp
add
push
push
mov
lret
pop
or
bound
lods
jg
add
dec
cmp
lea
mov
pop
sub
or
pop
jl
andb
push
mov
fiaddl
mov
sub
lods
pop
and
cmp
add
or
inc
or
pop
addl
sub
adc
mov
arpl
int3
push
sbb
mov
mov
fdivr
jmp
or
mov
es
sbb
mov
clc
mov
or
pop
or
mov
push
loopne
orl
test
push
lea
jbe
clc
mov
call
rorl
or
imulb
je
jb
xchg
mov
call
mov
pusha
pop
ss
scas
jl
pusha
mov
mov
add
jb
cmp
xorb
or
xor
adc
or
ret
jbe
and
or
pusha
add
int3
push
xor
mov
or
inc
add
int
sub
aas
add
loopne
and
adc
xor
loopne
call
dec
lea
mov
xlat
push
xchg
inc
pusha
insb
mov
inc
fistl
scas
xor
js
inc
add
aam
push
adc
jl
sub
add
mov
add
lods
clc
dec
lea
loopne
mov
add
sbb
and
in
inc
sbb
loopne
push
fs
out
cli
fwait
js
fistl
push
add
pusha
add
push
pusha
or
pop
andb
xchg
pop
sbb
loopne
nop
out
js
add
or
xsave
imul
clc
pop
xor
and
or
add
sbb
filds
popa
xchg
je
pop
add
repz
in
lods
push
push
pop
movsl
cli
pop
jmp
push
and
push
call
popa
shl
pop
cld
push
cmovne
cmp
mov
incb
dec
jb
hlt
mov
syscall
test
pusha
xchg
add
pusha
scas
js
scas
push
add
lret
and
out
les
adc
call
push
dec
mov
in
push
les
ret
add
push
sbb
loopne
mov
jbe
lock
and
pop
pop
test
stos
bound
cmp
sub
xor
hlt
scas
movb
ret
cmpsb
mov
mov
repz
inc
adc
add
xchg
or
dec
add
push
push
xchg
push
sbb
decl
adc
out
cltd
push
pushf
int3
aam
out
sub
insb
ljmp
test
mov
cmp
add
js
repnz
jno
jmp
mov
in
add
cmpsb
scas
inc
sub
pop
gs
jo
jge
mov
andb
sti
or
decl
mov
xor
scas
cli
mov
mov
cmp
mov
pop
mov
jl
and
adc
sbb
inc
cld
addr16
dec
mov
fistpll
testb
clc
rolb
sub
jg
xor
xor
inc
cmp
lock
pop
hlt
xchg
jo
in
jle
add
je
push
cmp
lods
cli
mov
clc
jmp
xchg
test
std
ret
mov
mov
adc
push
inc
add
inc
icebp
gs
push
lock
dec
lock
roll
insb
xchg
mov
pop
cli
je,pn
jne
mov
sub
aaa
dec
scas
push
es
lock
push
add
les
cld
mov
pop
andl
test
xchg
jo
or
cli
pop
jmp
jo
and
lock
xchg
arpl
sahf
loopne
inc
sahf
je
push
inc
scas
call
pop
js
fisttpl
sub
push
adc
jg
outsl
or
pop
pusha
ljmp
mov
daa
mov
sarb
pop
fcoms
and
idivb
sti
je
add
pop
mov
jo
outsb
add
dec
movsl
mov
push
adc
andb
and
dec
sub
xor
les
push
movb
mov
jecxz
fdivrp
call
test
sbb
lock
and
pop
scas
inc
fildll
jge,pn
sbb
stos
mov
mov
lods
xor
testb
cld
filds
sbb
in
lock
xor
and
sbb
inc
rolb
and
pop
push
ljmp
push
mov
jo
xor
jbe
sbb
mov
or
mov
and
sub
jb
add
mov
mov
push
sbb
jge
movq
js
inc
push
cmpl
add
push
jno
push
cli
mulb
call
andl
cmp
mov
jo
ds
cmp
mov
mov
mov
jo
xorb
mov
mov
add
mov
cmp
add
pop
push
andl
in
rorl
mov
jmp
xor
xchg
loope
std
add
push
push
test
rcll
xchg
movl
sbb
data16
ret
push
loopne
sti
lods
jp
std
add
sbb
adc
jmp
and
fdivs
jl
sbb
call
sbb
push
and
xor
and
adc
shrb
xor
push
dec
jg
sbb
jbe
xchg
sub
push
jb
cmc
jo
std
insl
mov
push
test
mov
call
jno
inc
push
adc
inc
cmp
shlb
push
dec
cmp
cmpsb
jl
inc
mov
add
adc
cmp
jbe
addb
neg
and
sti
jne
mov
jle
jae
mov
outsb
adc
mov
jle
lock
ja
or
or
cwtl
push
mov
mov
icebp
push
sbb
mov
incl
adcl
mov
loop
push
pop
add
mov
ret
and
ljmp
push
lock
or
add
xor
mov
inc
inc
add
add
mov
or
and
add
das
clc
adc
jo
cmp
jo
lret
lock
and
decl
roll
pusha
sbbb
cs
cmpb
jo
icebp
push
sbb
inc
xorl
cmpl
inc
repz
test
mov
lea
mov
push
insl
mov
mov
push
and
xor
imul
addb
icebp
cltd
das
lcall
push
add
xor
orb
js
xor
jmp
jbe
test
cld
add
mov
add
inc
mov
push
pop
cmpb
add
jl
add
dec
fstpt
jns
cld
push
fldcw
inc
jb
push
in
sub
xor
mov
pop
push
jp
popa
inc
push
sub
jb
inc
ljmp
mov
adc
pusha
addr16
fs
jbe
rorb
add
add
stos
clc
stos
jle
cmpsl
call
mov
loopne
pop
fisubl
jo
in
test
add
cmp
ret
lock
mov
adcb
mov
and
push
mov
push
mov
subl
lods
jno
push
sub
test
jne
xorl
pop
cmp
clc
fistl
rclb
icebp
test
cmp
incl
xchg
rcrb
xor
mov
mov
es
jno
or
aam
dec
push
lods
add
push
pusha
xchg
lock
repnz
cmpsb
stos
mov
add
ljmp
push
adc
push
fs
pop
adc
mov
mov
sbb
sbb
lock
jo
jne
test
out
push
lock
mov
jo
adc
cmp
mov
mov
rcrb
add
test
inc
fwait
dec
adc
movsl
clc
xchg
dec
push
jle
test
dec
mov
and
inc
push
call
outsl
pop
lcall
or
sub
mov
ret
xor
push
repz
mov
in
out
stos
cli
adc
pop
fnstenv
xor
or
icebp
js
add
outsl
add
incb
xor
cmp
out
pop
or
je
add
mov
or
or
add
mov
lock
and
push
test
pushl
mov
scas
push
jo
xor
add
scas
xchg
mov
pop
adcb
fisubl
aaa
add
adc
hlt
pop
xorb
add
add
xchg
je
mov
test
push
jmp
sbb
mov
insb
push
xor
inc
imul
jb
sbb
mov
push
test
push
sub
add
mov
outsb
fwait
shlb
mov
add
shl
pushf
jne
lcall
push
add
arpl
mov
ss
mov
or
pop
fcoml
scas
call
je
adc
or
jg
push
xchg
mov
and
mov
sbb
push
das
add
aad
push
cmc
and
sbb
nop
pop
imul
lds
sbb
fisttpl
jmp
inc
sub
push
ficompl
pushf
jmp
jle
mov
ljmp
aaa
cmp
add
jl
clc
sbb
loopne
sub
lret
testb
mov
addb
ljmp
stos
in
pusha
or
sub
cmp
dec
mov
add
cli
sub
adc
cmp
icebp
cmpb
je
mov
add
mov
inc
ljmp
rclb
lea
fisttpl
cli
or
sub
sti
mov
pushf
inc
xchg
sbb
mov
je
or
mov
bound
jle
js
mov
lcall
jb
mov
or
sub
adc
mov
imul
push
mov
clc
out
cli
call
mov
mov
call
cmp
ret
out
add
sub
add
sarb
or
dec
call
jbe
cmp
mov
sbb
pop
push
mov
add
cmp
test
inc
push
inc
mov
popa
sbb
sbbl
add
jne
repz
inc
ret
add
or
mov
outsl
add
shll
xchg
add
lods
cmp
pop
push
test
adc
mov
add
adc
call
sbb
xor
push
aam
pusha
pop
push
hlt
call
test
in
lahf
ljmp
pop
push
pop
inc
push
inc
test
subb
push
or
or
sbb
fisubs
into
push
addl
xor
jns
or
push
inc
fisttpl
or
xchg
add
inc
cli
clc
stos
push
jg
sbb
ret
inc
call
call
and
mov
mov
ljmp
cmp
cmpl
jne
aas
hlt
push
mov
mov
adc
fs
inc
gs
jle
test
stc
dec
xchg
push
test
or
xchg
or
je
mov
add
mov
ss
add
mov
pop
ret
jp
rolb
or
insl
rclb
push
xor
push
sub
push
rclb
xchg
out
fsubrs
test
push
xor
clc
xchg
jp
jo
inc
fdivr
xor
ret
jbe
cmp
mov
add
dec
fdivs
add
int3
sarb
add
push
and
loopne
loopne
inc
push
xor
ret
ret
int3
push
enter
clc
in
dec
mov
test
or
dec
add
call
jo
push
fs
cld
mov
or
mov
rorl
jbe
mov
repz
pop
idivb
push
bound
jb
or
rcr
decl
jmp
mov
mov
and
push
shlb
push
add
cwtl
add
adc
add
push
add
fidivl
negl
pop
mov
push
into
out
push
out
clc
mov
mov
cld
aaa
add
push
mov
loope
movsb
repnz
repz
mov
and
add
sarb
jbe
or
scas
mov
mov
push
mov
or
jne
jl
jb
mov
mov
movzbl
add
jmp
decl
push
xor
add
loopne
jae
cmp
ja
mov
adc
ds
loope
out
dec
add
std
ljmp
repnz
jle
in
xor
jmp
test
mov
js
inc
add
mov
lock
jmp
ja
xor
mov
dec
mov
js
ret
test
mov
mov
in
add
or
mov
loopne
sbb
mov
push
push
lea
xchg
xor
sahf
inc
dec
mov
pop
cli
pusha
sub
pusha
inc
jl
mov
jmp
jne
pop
pop
inc
adc
movb
movl
sbb
mov
loopne
dec
clc
and
mov
sarb
pop
hlt
lods
mov
push
xchg
push
or
mov
lea
paddw
je
lea
sti
fldt
popf
clc
mov
call
cmp
ret
pusha
add
push
push
push
popa
fwait
shlb
fsubs
add
inc
and
and
push
cmp
pusha
pop
push
scas
jne
mov
adc
insb
les
sub
add
scas
xchg
bound
cmp
ljmp
call
or
cld
je
mov
sub
or
pusha
cmp
mov
adc
mov
daa
pushl
clc
call
mov
pusha
sub
sub
scas
push
add
lea
ss
pop
cmc
pushl
je
and
les
inc
mov
cmp
int
loopne
movl
adc
cmpsb
mov
pop
fcoms
loope
incl
ds
jge
and
testl
movsl
add
int3
fdivrp
mov
lea
cs
mov
mov
out
mov
jb
jecxz
add
loopne
gs
notb
adc
loop
or
pop
sub
arpl
push
xor
rclb
sbbb
push
inc
mov
push
subb
inc
loopne
or
pop
adc
loop
inc
or
mov
push
inc
ud2
mov
cmp
sti
ja
lea
addl
lea
push
mov
call
fdivrs
je
fiaddl
push
push
push
je
push
mov
xor
fbstp
cmp
loopne
iret
jne
push
andb
xchg
cld
adc
es
add
loopne
or
jno
decl
adc
es
testl
ljmp
icebp
sub
adc
andb
negl
fists
hlt
sarb
pusha
mov
insb
fnsave
jo
loopne
orb
decb
mov
popf
jb
mov
cmp
aam
push
xlat
inc
sbb
loopne
push
jmp
push
add
popf
pusha
sub
pop
lea
loopne
mov
pop
loopne
rcrb
aaa
cld
or
fdivr
mov
ja
movl
adc
test
inc
imul
imul
pusha
test
and
and
aas
jne
hlt
cmp
pusha
ja
xor
mov
xchg
out
jo
in
pop
int3
loopne
fdivrs
sbb
pop
and
push
lea
or
cmp
pop
and
cltd
mov
inc
lock
and
shl
fcomip
loope
cltd
or
mov
mov
cmp
je
xchg
lret
push
lods
aam
add
add
data16
mov
dec
mov
xor
data16
push
or
rolb
cmpl
pusha
mov
mov
xor
adc
or
push
push
xor
push
push
lock
xor
clc
pop
push
dec
pop
mov
adc
sbb
jne
mov
mov
jno
inc
decl
ljmp
cmp
inc
leave
xor
fstpt
mov
das
mov
pop
jecxz
inc
jle
mov
cs
lock
lock
ljmp
bound
sbb
mov
or
mov
inc
cmp
push
aas
or
inc
add
or
mov
push
jg
jge
push
push
call
clc
ljmp
ret
xor
inc
movl
or
subb
aaa
cmpsb
testb
pop
mov
pop
adc
jb
repz
xor
sub
push
sbb
out
add
jae
jecxz
dec
jecxz
lret
jne
and
jp
std
jmp
pop
lea
mov
jae
mov
lods
pop
lock
add
movzbl
xchg
add
adc
mov
mov
incl
mov
aas
sub
mov
repnz
jo
mov
cmpl
xor
push
nop
lock
lea
call
ljmp
xor
lock
mov
mov
call
inc
lock
lea
push
push
dec
outsb
outsl
js
fs
ret
sub
add
mov
inc
filds
dec
push
mov
fs
sbb
out
push
push
ljmp
mov
jo
pop
push
popa
or
out
out
or
cld
pop
add
int3
jle
mov
in
inc
inc
mov
mov
cs
jnp
or
push
push
push
je
pop
mov
cli
xchg
jp
and
xor
pop
call
or
pop
xchg
inc
pop
or
xor
pop
cmc
pop
bound
add
mov
lock
xor
jb
mov
and
add
add
call
nop
jo
jecxz
jg
xchg
dec
sbb
pop
lea
fidivs
xor
adc
nop
and
mov
out
or
jp
les
push
jp
pop
div
jne
jbe
adc
jbe
ret
sbb
add
lock
call
mov
cli
inc
sub
rorb
ljmp
and
call
call
insl
hlt
rol
lock
shr
adc
xor
dec
push
sbb
pop
add
call
inc
aam
mov
pop
cmp
mov
add
aad
in
sub
and
lods
aad
sub
mov
add
pop
sbb
adc
pop
stos
sub
push
fcoms
lock
xchg
mov
rcl
jo
cmpb
cmp
test
push
or
aam
call
std
or
je
add
sbb
xor
xor
jp
adc
lea
push
mov
pushl
cli
mov
adc
dec
lea
ret
rorb
int3
test
mov
aad
clc
aad
xchg
xor
pop
dec
cmp
clc
cli
pop
je
lea
pop
test
add
js
outsl
jo
push
cwtl
mov
jns
xchg
dec
inc
in
pop
enter
sub
jne
or
push
pop
pushl
push
call
jne
decl
call
xor
jmp
jle
jp
and
pop
addb
or
fcomi
mov
cmp
addb
outsl
dec
sar
fidivl
inc
call
sbb
mov
cmp
and
in
xchg
fldt
aam
push
aad
clc
das
cmp
jne
and
add
orb
sti
pop
test
repz
jno
jge
cld
jge
cwtl
mov
mov
cmp
inc
cld
fbstp
into
daa
mov
push
lea
mov
or
mov
xor
inc
clc
je
add
adc
inc
adc
fbstp
mov
and
jp
lock
adc
add
jge
jle
jo,pt
jb
jb
inc
fsubr
rorl
mov
and
mov
call
push
fdivr
push
push
hlt
xchg
add
cmp
ret
xchg
pop
sub
jne
mov
call
scas
jp
orb
lock
cld
lods
call
lock
push
lock
jg
int3
je
call
sub
xor
decl
jl
mov
call
mov
mov
icebp
add
rol
inc
clc
add
mov
js
add
jg
inc
inc
mov
js
jmp
xchg
incb
mov
inc
arpl
push
inc
mov
shrl
and
xor
mov
cwtl
cmp
dec
pop
rolb
les
pusha
clc
aaa
movsb
pop
add
je
call
loope
and
jmp
and
mov
rcll
loopne
notb
lea
call
es
jo
ret
xor
loope
stos
jp
shlb
jl
les
enter
xchg
add
dec
xor
outsb
and
loope
pop
sarb
add
fs
cltd
pop
mov
loope
mov
add
scas
jg
cld
out
pop
je
mov
lock
outsb
or
or
ror
mov
lcall
ficoml
call
or
and
call
lea
inc
jne
mov
mov
std
sbb
aas
add
push
loopne
sbb
jae
mov
gs
aam
adc
ja
fistl
xor
jl
rol
cmp
inc
push
jae
mov
or
inc
or
test
les
ss
dec
cmp
lods
push
jl
scas
jo
stos
test
bsf
jbe
xor
xchg
addb
call
ss
adc
test
stos
jo
jne
jo
test
adc
psubsb
jle
mov
pop
and
scas
daa
orb
shlb
lock
add
adc
je
cmp
cmpsl
mov
mov
pusha
lock
jnp
sbb
pushl
test
mov
call
jb
mov
push
push
xor
divb
cmp
test
push
jo
mov
and
pusha
add
xorb
pop
sub
push
lock
add
adc
push
jl
lock
xorb
jle
aad
shll
and
repnz
mov
fildll
mov
adc
mov
pop
jbe
and
sbb
lock
adc
lods
jecxz
push
push
add
sbb
sub
push
mov
or
and
cmpsb
push
mov
push
mov
lcall
js
clc
mov
inc
cmp
nop
add
std
lock
aas
xchg
call
fcmovnu
movsl
sbb
jg
add
pop
repz
outsb
adc
in
add
in
jmp
adc
mov
jl
adc
xchg
and
cmp
outsl
shrb
in
mov
cmpl
roll
jl
subb
incl
adc
xor
pop
and
je
lock
mov
leave
mov
jmp
clc
xor
push
pusha
xchg
hlt
sbb
ret
call
pushl
push
stos
push
pop
pop
nop
cli
test
push
xor
insb
mov
cmp
sbb
orb
shll
jle
shl
sub
cli
insb
inc
repnz
cmp
cmp
mov
and
push
adc
jb
test
movsl
aad
push
jmp
mov
rclb
push
fidivrs
xor
icebp
in
adc
stc
mov
pop
xchg
loopne
or
jle
sub
jbe
loopne
cmpsb
std
data16
or
call
mov
dec
fsubl
inc
fsubl
aad
rclb
push
enter
mov
and
sbb
or
xchg
lock
jge
cmp
andl
or
jg
je
dec
or
add
cmp
std
das
rolb
jb
adc
hlt
addl
mov
inc
push
add
repz
xchg
mov
push
sarl
mov
dec
add
mov
test
or
cmp
cmp
sti
adc
bound
rcll
test
cmp
mov
sahf
dec
push
scas
mov
add
push
xor
fildl
mov
mov
outsl
faddp
inc
mov
and
or
test
xor
adc
jmp
push
jbe
mov
mov
loop
jmp
push
out
mov
mov
jnp
pop
pop
push
mov
inc
push
cld
push
or
inc
lods
mov
mov
jl
jmp
fiaddl
or
push
adc
jg
push
push
jb
or
int3
call
lock
testl
mov
sub
cld
lock
addl
or
test
sbb
lock
and
jnp
mov
rclb
mov
sub
inc
adc
pop
int
jmp
jne
cld
adc
dec
cld
stos
push
loopne
popa
fiadds
out
push
mov
rcr
notl
lock
dec
ss
testb
push
es
dec
pop
mov
jle
aas
or
push
sub
xchg
and
cmc
scas
add
loopne
mov
push
les
mov
mov
xchg
mov
pop
or
outsb
push
test
sbb
dec
sbb
in
pop
push
jb
add
lahf
inc
push
outsb
add
std
pop
mov
or
ja
push
mov
add
jnp
test
sbbb
sti
mov
mov
jl
adc
add
add
jecxz
addl
mov
js
daa
mov
add
sahf
ret
pop
fbld
inc
jns
cs
test
add
movsb
imul
inc
out
div
dec
out
je
cmp
cmp
pop
push
filds
in
aas
jge
das
hlt
dec
mov
sub
dec
aaa
fisubrs
jl
pop
call
or
out
cmpsl
paddd
cli
clc
add
sar
fs
sbb
jge
aaa
imul
xchg
add
mov
jecxz
dec
pop
mov
add
call
jb
orl
pop
pop
mov
sbb
mov
lea
scas
decl
ljmp
aam
outsb
subb
in
notb
das
out
lea
push
push
das
or
mov
decb
popf
push
ds
mov
and
sub
divl
test
sbb
test
ja
ret
pop
out
aaa
or
dec
sarb
aaa
inc
mov
push
and
fdivs
add
push
hlt
scas
subl
ja
movzwl
in
stos
movswl
inc
lea
mov
mov
dec
hlt
out
dec
out
fadds
adc
mov
std
lcall
push
jb
cmp
ja
testb
jne
sub
push
jae
adc
lea
fstpt
inc
cli
ss
dec
sti
punpckhdq
mov
inc
insl
xor
jmp
push
cmp
in
dec
xor
sub
scas
cmpsb
and
decl
xchg
jne
cmp
ret
jne
jb
mov
loopne
cmp
push
lret
or
mov
mov
call
gs
mov
imul
mov
aas
sbb
push
mov
ss
pop
xchg
mov
imul
and
nop
pop
add
jl
mov
push
es
sub
jmp
mov
call
or
pop
cmp
imul
inc
cmp
add
fmull
pop
sbb
mov
push
decl
cmpsb
or
vmread
data16
int3
call
cs
mull
lret
and
test
in
cmc
add
adc
fbstp
out
sub
jae
dec
addl
cwtl
adc
mov
inc
push
cmpsb
call
mov
cmp
fsubl
cli
jmp
inc
enter
int3
mov
test
or
mov
mov
add
pop
push
inc
data16
cmpb
icebp
and
ja
add
inc
scas
fldz
jne
inc
and
outsb
xor
jle
cmpsl
leave
push
pop
in
push
lods
repz
xor
clc
push
fsubrs
pop
nop
je
call
adc
lock
jnp
lock
mov
pop
push
xchg
add
mov
push
outsb
fcomi
sub
jecxz
inc
xor
test
inc
loopne
mov
xor
push
and
or
call
ret
sbb
push
icebp
insl
dec
inc
push
cmp
mov
or
fs
int3
adc
cmp
outsl
frstor
inc
add
and
push
loopne
xchg
outsb
lock
push
or
cmp
add
gs
push
ss
mov
lcall
or
addb
jne
mov
cld
mov
xchg
daa
lea
jl
test
jl
push
add
je
scas
cwtl
jecxz
push
test
aas
lods
cbtw
ret
ret
es
push
mov
pop
mov
cmpb
and
ljmp
push
ss
mov
push
ret
cmp
hlt
cmp
es
cwtl
es
pusha
daa
add
jle
fs
xor
pop
adc
mov
inc
xorl
loope
xchg
cmp
xlat
test
xchg
cld
push
call
cmpsb
hlt
ljmp
jle
and
lcall
lock
dec
insb
in
mov
imul
inc
lock
and
orb
rclb
pop
push
pusha
xor
push
push
stos
inc
rorb
push
int
fmul
xchg
cmpb
gs
adc
add
mov
test
cs
xchg
adc
outsb
mov
push
push
cmpsl
sbb
jmp
mov
mov
or
or
aaa
dec
emms
xor
mov
in
mov
add
mov
ficoml
or
pop
ss
add
jns
mov
sub
add
push
lahf
jbe
or
in
jae
push
xchg
jo
aas
pop
xchg
mov
dec
ja
mov
lea
ja
push
loop
xchg
movsl
into
push
in
cmpsb
sub
mov
out
jmp
fdivr
stos
fdivl
test
push
inc
bound
mov
or
xchg
lret
pop
fdivrp
dec
add
dec
pop
lock
dec
ljmp
or
out
gs
sbb
fcom
sub
lea
nop
ss
add
testb
pop
fs
mov
data16
call
mov
in
push
sbb
add
jo
mov
or
jo
pop
lock
mov
jmp
push
dec
clc
cmp
push
cmp
je
cmp
je
cmp
je
clc
sti
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
inc
je
imul
scas
into
mov
xor
in
pop
sub
mov
sbb
push
xor
fimuls
mov
mov
add
test
cs
push
cwtl
incb
cmp
jne
into
pop
repz
pop
test
adcb
jns
xchg
testb
pop
je
or
pop
push
adc
stos
lcall
and
add
shrl
lea
or
jg
es
push
mov
mov
call
pop
fmuls
cmp
jle
mov
clc
out
mov
int3
leave
mov
cmp
cs
ficoms
cmp
mov
inc
iret
daa
xchg
lcall
jb
in
mov
mov
jae
mov
push
sub
clc
inc
ljmp
out
jmp
loopne
lods
xorb
mov
sub
je
cli
icebp
cs
sahf
jbe
xchg
push
jg
add
int3
test
dec
cmp
clc
decb
test
mov
pop
test
vmwrite
pop
loope
pop
cmp
push
push
stos
adc
notb
cmp
dec
shll
mov
cmp
inc
and
or
fsubrs
mov
push
into
pop
inc
mov
lock
rorb
es
jb
es
scas
sub
cmpsb
or
add
xor
inc
xor
push
out
dec
pop
mov
jl
and
addl
mov
dec
xchg
loopne
jnp
lret
mov
xor
jmp
testb
test
push
xchg
int3
xor
sub
hlt
out
adc
jge
pop
pop
xchg
mov
mov
jmp
or
aam
adc
fsubl
popa
dec
push
xchg
test
add
mov
jbe
push
lea
jg
es
lock
xchg
cmp
jne
std
and
jb,pt
adc
xchg
add
or
add
sub
cmpsl
call
ret
cmp
lcall
jmp
test
shll
adc
mov
inc
inc
push
out
mov
hlt
push
std
push
dec
xchg
sub
adc
lcall
inc
test
je
cmpw
jae
xchg
and
outsl
cld
cmpb
push
jg
pop
sbb
pusha
es
adc
lods
hlt
pop
test
mov
ds
pushl
aad
push
push
push
jbe
sbb
adc
jne
push
lea
ss
xchg
lea
mov
push
aaa
sahf
call
out
test
mov
inc
jo
jo
inc
cmove
or
pop
xor
xor
adc
push
push
clc
sbb
sub
out
daa
testb
fcom
push
es
or
mov
inc
or
sub
and
push
pop
sbb
or
lcall
call
fisttps
mov
mov
movl
mov
jne
out
cmpl
scas
adc
push
iret
add
shrb
addl
ret
aas
clc
sbb
adcl
cli
aaa
test
sbb
add
mov
and
sbb
out
jp
mov
orb
cmp
xchg
cmp
xor
lea
cmp
push
inc
dec
cmp
jbe
testb
cli
lods
mov
fsubrp
fisubl
mov
jg
ja
cld
mov
outsb
clc
add
or
dec
jae
js
adc
sbb
fbstp
push
add
je
pop
sti
sub
add
sbb
mov
pusha
movsl
mov
or
ss
test
push
xchg
inc
and
pop
jb
inc
sahf
push
cmpsb
or
sub
mov
sub
mov
mov
sbb
add
lahf
jecxz
imul
cld
jne
add
nop
jne
mov
add
sbb
ds
jbe
in
orb
daa
jmp
call
or
mov
push
pop
xlat
cmp
sub
sbb
jbe
or
in
mov
decl
insb
inc
enter
int3
clc
je
aaa
mov
pushl
fimuls
pop
arpl
repnz
push
ds
je
pop
mov
decl
pop
je
cmp
lea
cmp
ja
data16
adc
outsl
adc
lock
sub
inc
cmp
jae
push
push
mov
sub
sbb
jbe
hlt
dec
push
add
inc
cmpsl
push
push
insb
jae
dec
mov
mov
sbb
lcall
not
add
es
test
adc
inc
adc
outsb
lock
mov
fiadds
clc
push
jno
int3
xchg
dec
or
cwtl
test
mov
jle
add
pop
sub
jne
adc
scas
or
cmp
xchg
xchg
jb
cmp
mov
ja
mov
aaa
add
adc
call
push
test
push
cld
enter
add
shlb
xchg
cmp
add
mov
mov
add
je
test
push
pop
push
out
add
mov
add
enter
pop
div
push
jae
mov
add
inc
xchg
or
inc
adc
jmp
add
mov
jo
jle
mov
add
mov
sub
test
hlt
adcb
or
test
xchg
sbb
clc
dec
fcompl
or
jl
cmp
call
sbb
cld
add
mov
repz
cmp
cmpb
pop
or
inc
jo
push
mov
push
movsl
cwtl
andb
inc
orb
push
call
cmp
lock
ret
roll
jle
cld
jge
xor
ja
je
inc
arpl
scas
jp
notl
push
inc
iret
out
xorl
push
orb
ja
push
adc
loopne
filds
xorl
add
mov
pop
add
outsl
call
addl
cmp
or
idiv
lcall
loopne
cld
rorb
cmpsl
xchg
dec
add
rcll
jnp
jg
mov
and
leave
addl
call
dec
fisttps
mov
fimuls
orb
jns
sar
inc
fiaddl
push
mov
jbe
test
mov
js
add
in
mov
push
xor
mov
mov
add
jp
jge
xchg
lahf
test
incl
inc
mov
pop
mov
cld
push
test
cmpl
sub
mov
add
imul
ficoml
out
sbb
scas
call
jge
jmp
call
xchg
push
test
mov
sub
mov
cmp
sar
push
cmpb
js
loopne
push
jbe
orb
inc
or
push
or
inc
in
push
push
loope
sarb
bound
jbe
dec
ret
call
cld
rolb
pop
adc
and
shlb
test
and
mov
jmp
push
add
jg
inc
pop
cmp
mov
mov
test
add
test
jg
pop
inc
add
mov
mov
mov
mov
inc
jg
ja
ret
fidivrs
sub
mov
loopne
rclb
shlb
add
pop
mov
add
daa
add
fwait
xchg
jo
or
pusha
cmpl
in
sbb
inc
call
orb
push
mov
sbb
ja
in
pop
mull
mov
inc
pop
mov
push
jbe
mov
push
sahf
and
add
js
xor
imul
or
add
mov
inc
test
or
scas
dec
bound
hlt
inc
fdivl
sbb
je
ret
fiaddl
cmp
bound
adc
sub
ret
or
or
push
xor
or
repz
sbb
into
mov
cwtl
mov
push
add
pop
std
in
cmpsb
subb
push
or
push
sbb
or
jo
jb
and
addb
hlt
add
fcmovnb
mov
js
mov
mov
movsb
add
test
movsbl
push
pop
adc
or
push
push
shlb
sbb
xor
mov
and
cli
dec
faddp
pop
and
xchg
je
adc
mov
addb
lahf
xor
pusha
xchg
dec
push
push
inc
pusha
and
test
inc
pushf
lods
inc
outsb
dec
push
jo
xchg
insl
xchg
mov
add
cmpb
add
add
dec
add
leave
ret
add
test
test
add
sahf
mov
adc
cmp
clc
xor
adc
ret
sub
pusha
bound
inc
xor
call
xchg
xor
pusha
mov
ds
adc
fwait
hlt
outsl
xchg
dec
cmpsl
call
popf
rolb
add
jo
sub
pop
sbb
dec
push
bound
sbb
mov
out
mov
push
inc
repz
mov
push
and
pop
sub
das
push
int3
andb
lds
loop
jo
ret
orl
inc
jl
outsl
inc
inc
cmp
je
mov
or
addb
std
call
or
das
mov
out
push
mov
add
outsb
ret
push
mov
mov
test
jp
jle
movsb
ja
bound
jo
std
incl
dec
pusha
pop
pusha
addr16
or
or
push
jg
mov
push
sti
pusha
jge
jbe
pop
adc
or
cld
xchg
or
in
out
jb
loopne
loopne
sbb
xor
loopne
pusha
push
sbb
inc
cld
cs
add
cmpsb
adc
and
subb
icebp
decl
sahf
gs
sbb
pop
fsubl
popa
aas
out
fcompl
incb
mov
in
mov
sbb
or
add
sub
pop
sbb
sub
push
sub
jp
mov
sbb
pop
push
push
daa
and
and
lret
call
mov
outsl
cmp
inc
and
push
pop
loopne
jp
js
std
push
sbb
xor
cmp
sub
cmp
orb
mull
xchg
loopne
add
dec
mov
and
inc
clc
jb
std
das
adc
jl
jbe
pusha
pavgb
fisttps
popa
sub
clc
sbb
inc
or
push
test
clc
sti
jne
add
or
scas
movsb
push
push
mov
int3
adc
idiv
jno
jo
sbb
dec
sbb
mov
inc
add
and
push
push
mov
push
in
fwait
cmpb
mov
add
shlb
scas
sbb
rclb
dec
add
mov
mov
orb
mov
dec
repnz
or
lret
push
adc
into
pop
jae
in
mov
inc
pusha
incl
sar
test
out
jne
dec
dec
add
push
xchg
mov
inc
cld
out
incb
add
je
adc
sub
mov
mov
pop
mov
cmp
jge
cmp
push
mov
or
pcmpeqb
cli
ja
std
sub
push
xchg
rolb
jb
fndisi(8087
negb
inc
ret
je
gs
or
or
mov
scas
lock
fldt
sub
push
xchg
pop
pop
je
icebp
cld
test
push
push
push
call
call
cmp
std
inc
stos
mov
mov
add
add
pusha
dec
ljmp
orl
mov
rcl
or
icebp
jns
repnz
add
fdivrl
lods
pushf
push
ljmp
jl
adc
mov
mov
add
add
or
je
movsb
mov
xor
xor
jge
negb
ljmp
test
pop
adc
test
mov
movl
roll
subb
lock
out
cmc
sbb
shlb
cmp
iret
vmwrite
cmp
or
sti
incl
ss
cmp
push
xor
repz
call
out
push
cld
mov
or
cmp
adc
xor
dec
xor
test
dec
ret
xor
dec
xor
aam
jo
jae
xor
cld
push
pop
pop
jecxz
imul
add
add
cli
outsl
clc
jne
lock
cmp
xor
jne
incl
aaa
mov
loopne
insb
int
xor
in
jne
scas
push
add
cld
inc
adc
inc
ficoml
mov
in
inc
orb
push
inc
out
xor
lea
cmp
mov
ljmp
loopne
mov
pop
incl
pushl
outsb
inc
in
mov
xchg
incl
xor
pop
dec
jb
sti
add
and
adc
mov
stos
nop
decb
xor
fs
adc
mov
mov
push
aaa
push
and
and
jo
xor
hlt
call
pop
add
outsl
clc
and
push
jb
pop
and
sbb
cmpsb
mov
nop
mov
jne
cmpsb
xchg
xor
or
inc
add
adc
and
lea
clc
mov
inc
xor
mov
add
pop
dec
dec
hlt
and
cmp
clc
mov
and
cmp
out
cmp
push
sbb
mov
dec
add
add
leave
mov
test
adc
push
outsb
or
push
call
divb
jg
mov
pushf
clc
sub
cmpb
mov
pop
fists
jmp
lea
jnp
jg
rolb
jg
jne
mov
adc
cli
orb
mov
dec
mov
shlb
je
xor
jmp
outsl
scas
in
int3
leave
or
jo
cmpb
jl
adc
jl
push
push
mov
ljmp
or
add
jb
in
clc
adcl
mov
testl
dec
push
adc
mov
mov
je
push
jg
out
data16
ss
xchg
add
pop
data16
mov
mov
dec
add
hlt
inc
dec
cltd
sarl
or
mov
sbb
sbb
push
mov
addb
out
out
pop
or
cmp
rolb
mov
mov
cld
sbb
sbb
scas
call
xchg
push
shrb
lock
subb
jle
pusha
adc
aas
fs
or
incl
je
jl
add
subb
or
lods
lea
dec
add
mov
ror
adc
insb
add
mov
add
mov
jo
dec
add
stos
adc
pop
fistl
call
mov
dec
jmp
call
fcomip
lock
pop
scas
mov
call
sbb
push
mov
rorb
jp
lock
mov
cmpb
adc
add
and
mov
loopne
jmp
test
jl
inc
clc
mov
insb
call
pop
std
aad
test
jo
push
xchg
pop
dec
aaa
call
or
nop
mov
addl
add
lea
pop
jmp
and
add
or
data16
fcmovnb
pop
lock
mov
sub
call
mov
mov
cld
incl
push
lods
add
xor
jne
lea
mov
icebp
adc
push
jb
jo
pop
in
jp
add
pop
test
stos
push
pop
dec
push
push
mov
es
mov
lcall
mov
mov
push
jbe
and
lcall
add
mov
fldcw
xor
adc
dec
and
sbb
xor
icebp
inc
call
and
mov
xchg
cmpsb
sub
xchg
add
ljmp
pop
and
xor
mov
fistpl
push
test
cli
decl
add
mov
xor
and
dec
xchg
inc
in
scas
and
sbb
inc
and
or
cwtl
jb
dec
stos
sub
adc
push
push
icebp
add
pop
sub
paddb
adc
xchg
adc
stos
rcrb
mov
jnp
sbb
mov
or
test
pop
mov
push
cmc
negb
repz
jl
sub
or
rclb
jecxz
clc
sbb
mov
adc
xorb
cmp
add
movaps
mov
sbb
pop
mov
ljmp
mov
out
addl
testb
scas
jb
jo
push
mov
ja
push
push
mov
lock
cmpsb
dec
test
ficoml
sub
popa
add
loope
outsb
push
popa
push
clc
inc
cmp
popf
sub
push
push
mov
pop
into
lods
shr
ja
mov
je
push
add
out
pop
push
add
sbb
lock
push
inc
inc
pop
fs
sub
ss
ja
loop
pop
lock
in
cmp
mov
add
mov
sub
pop
int
adc
sbb
push
adc
adc
sarb
stos
or
jp
mov
daa
mov
xchg
jne
mov
cld
ljmp
lock
call
add
jb
add
and
add
and
or
fbld
movb
add
sbb
add
add
xchg
fs
jge
mov
xor
inc
push
cltd
and
icebp
mov
jne
mov
pop
stos
cltd
push
adc
sar
xor
cmp
xor
icebp
test
jbe
push
add
cmpsb
je
out
lods
std
add
mov
sti
call
shlb
not
pusha
xor
stos
mov
pusha
or
fisttps
ss
mov
je
aas
lods
mov
xor
mov
xor
jne
or
push
add
cmp
aaa
pop
mov
loopne
pushl
xchg
ds
call
cmc
rcll
divl
pop
test
pop
add
in
add
out
xchg
jle
hlt
lea
cmpsl
mov
gs
aam
mov
jne
push
add
add
test
jne
jp
jo
mov
pushf
lea
test
xor
and
ret
call
jb
dec
add
sub
call
aad
cmc
jg
test
orb
movsb
call
sbb
xor
mov
sub
pusha
js
ljmp
add
shrb
xorl
test
loopne
mov
hlt
xor
loope
and
sbbl
pop
dec
test
mov
mov
add
sub
loop
push
inc
add
jle
xor
push
push
mov
pop
cmp
push
ret
jmp
add
push
inc
or
mov
jg
add
push
je
inc
cmpb
pop
push
jecxz
push
or
sbb
xchg
push
mov
and
mov
adc
rcrb
xor
loop
ret
cmp
sbb
jg
scas
cmpsb
jp
push
push
sub
push
pop
xor
push
shlb
sti
inc
sub
es
add
stc
inc
jmp
push
pushf
push
or
call
dec
jecxz
lock
ficomps
add
fsubrs
xorb
pop
push
pop
aam
and
fs
sub
lret
push
pop
xor
fs
filds
jg
loope
sub
or
jne
dec
icebp
inc
call
mov
and
je
andb
jne
adc
enter
cli
or
cmpsb
ret
shl
sbb
cli
add
or
pusha
cmp
test
pop
testl
pop
rcrb
mov
push
adc
ds
pop
sub
xlat
inc
mov
lock
dec
pushl
lea
mov
pop
sbb
xor
leave
mov
lock
mov
aam
shlb
outsb
test
es
test
lock
inc
je
sbb
fstpt
je
and
gs
cmp
andb
push
orb
or
add
mov
cmp
add
lods
or
sbb
iret
push
or
adcl
mov
mov
adc
inc
mov
sbb
pop
sbb
shll
ja
fldl
in
mov
lea
rol
nop
inc
call
incl
adc
rclb
mov
inc
sub
fisttps
xchg
jae
mov
pop
jg
push
movb
imul
jl
mov
jp
je
jb
fmuls
rclb
arpl
cmpsb
adc
bnd
adc
inc
std
cmp
je
adc
cmp
movsb
imulb
and
imul
int3
mov
inc
pusha
dec
mov
and
mov
adc
xor
enter
push
mov
add
shl
jg
inc
test
fcoms
jae
mov
xadd
test
dec
pop
mov
jmp
call
adc
push
arpl
mov
jp
or
addb
jbe
stos
rorl
mov
out
mov
adc
adc
add
insb
mov
xor
cmpsb
pop
push
push
lea
cmp
add
dec
adc
inc
rolb
shl
add
fbld
and
xchg
sti
add
pushl
rorb
lret
lock
inc
adc
mov
test
adc
mov
xchg
cmc
scas
xor
or
add
add
mov
test
leave
mov
dec
xor
sub
into
ja
aaa
add
inc
test
insl
pop
mov
stc
cmp
mov
stos
imul
inc
je
iret
jge
test
loopne
jl
rclb
test
stc
imul
nop
aaa
pusha
divps
int3
rclb
mov
mov
subl
add
inc
mov
inc
mov
jo
mov
subb
loop
ret
sub
loopne
add
call
mov
pusha
or
jb
mov
aam
sar
fcmove
aaa
es
xchg
push
cwtl
xlat
jae
add
cli
loopne
mov
mov
sbb
mov
aam
push
pop
aas
lods
add
filds
out
cmp
and
xchg
shlb
cmp
movsl
icebp
mov
dec
enter
call
push
jle
add
aas
cmp
nop
fildl
lret
fsubrs
movsb
loope
jb
mov
into
call
dec
test
and
sti
decb
je
and
rcrl
or
add
sbb
jecxz
inc
mov
testb
jne
adc
mov
dec
adc
cld
add
loopne
loope,pt
data16
enter
mov
fs
push
mov
xchg
lea
pusha
jb
or
pop
push
or
sti
lea
movsb
push
adc
adc
fcomps
xor
jmp
hlt
es
fisubrs
call
dec
shlb
imul
std
fwait
mov
or
cld
loopne
or
or
std
loope
rcrl
orb
add
outsl
adc
and
pusha
push
add
pusha
add
sti
aaa
jl
xorb
mov
les
jb,pt
xorl
ret
mov
repnz
push
push
add
xor
cld
mov
add
aam
mov
rolb
loopne
mov
add
jg
pushl
or
mov
hlt
jmp
mov
lock
mov
sti
jne
inc
xchg
leave
sbb
add
shl
mov
inc
int3
dec
bound
sbb
icebp
mov
jbe
inc
divb
sub
xor
es
call
add
dec
adc
mov
dec
js
pusha
ljmp
and
push
push
mov
call
call
pop
and
mov
pop
pusha
jle
mov
adc
sub
fdivl
es
or
sub
cmp
inc
incl
lret
cli
jne
inc
jmp
leave
iret
lea
aaa
int3
add
mov
cmp
dec
add
aam
mov
dec
add
jg
mov
cld
sub
pop
mov
sub
jno
rclb
sbb
add
mov
mov
movb
add
imul
or
out
mov
add
testb
int3
je
inc
fiaddl
xor
sub
jg
mov
inc
out
call
xchg
jbe
call
pop
mov
es
fucomip
push
or
xlat
call
xchg
push
test
push
std
jg
ret
dec
cli
test
loope
add
cmp
pushl
mov
das
call
pusha
popa
ja
call
and
call
subb
bound
mov
ja
adc
call
xor
pusha
cmp
jb
outsb
lock
hlt
mov
or
push
je
loope
mov
jecxz
adc
imul
cmp
or
jne
js
je
mov
sub
mov
and
stos
cmp
cmp
in
push
mov
imul
pop
call
ret
shrb
movsb
ret
push
fadds
ffree
int
lods
push
xchg
xor
cmpsl
call
push
cld
push
rcrb
pushl
push
scas
push
loopne
mov
adc
dec
pusha
pop
add
jp
call
arpl
and
push
call
jb
mov
enter
in
jne
nop
xor
xor
stc
xor
ds
push
jle
xor
test
jg
cmp
sub
xorl
push
jb
enter
mov
sbb
cmp
call
adc
adc
xor
pop
or
or
sbb
subb
enter
jo
fsubr
jle
or
sbbb
mov
das
adc
pop
jmp
or
jb
inc
mov
je
sub
ljmp
lock
addl
mov
push
insb
std
jo
xor
push
xchg
lock
dec
inc
iret
xor
push
pop
cs
data16
dec
insb
jo
je
data16
or
incb
das
mov
pop
pop
rorb
aas
add
iret
sbb
adc
and
push
adc
stos
outsl
adc
outsb
shlb
in
inc
xor
cmpsb
insl
mov
mov
push
je
sbb
sub
or
into
push
cmp
ret
stos
jle
jo
test
rclb
inc
add
dec
jb
and
pop
lock
sbb
push
fiadds
in
mov
hlt
mov
pop
add
add
and
cwtl
xchg
jae
mov
fdivp
outsl
inc
xorb
push
push
push
pop
nop
add
ljmp
mov
push
mov
mov
pop
push
push
mov
inc
pop
int
call
cli
ljmp
clc
push
je
les
cmp
inc
pop
push
mov
jb
test
rcrl
fdiv
xor
jge
rolb
xchg
inc
je
test
push
add
jo
xchg
jl
add
push
test
scas
add
loopne
ljmp
movsb
lcall
mov
dec
xor
ljmp
lret
cmp
lock
mov
xor
call
adc
add
cltd
es
cld
sub
ret
or
inc
cltd
mov
aas
xchg
loopne
xor
push
jo
lret
xor
push
scas
mov
xor
cmp
jle
cmpl
js
xchg
pushl
in
mov
lea
scas
call
test
push
xlat
ret
mov
test
mov
jle
mov
jge
add
mov
fcoms
ja
mov
cmp
andb
add
int3
addb
lock
hlt
jg
shl
push
call
and
clc
outsl
xchg
add
and
xor
adc
call
mov
int3
pop
f2xm1
or
or
xor
or
mov
dec
push
jbe
mov
xor
aam
mulb
or
mov
inc
mov
fisttps
jmp
fmull
out
mov
jg
mov
pop
jbe
lods
inc
xor
call
pop
cld
mov
lods
icebp
adc
push
mov
jge
das
jno
fidivrs
lret
xor
add
dec
int
sub
dec
push
addl
ljmp
mov
mov
incl
loopne
push
add
add
cmp
mov
in
mov
pop
cmp
cwtl
or
movb
adc
push
ja
adc
mov
add
mov
mov
or
and
mov
lret
sub
inc
jge
adc
xor
hlt
ret
call
push
test
inc
jmp
xorb
faddl
and
lcall
mov
roll
test
popf
in
xor
sub
inc
pushf
xchg
jo
mov
pop
sub
inc
aam
test
xor
loopne
push
mov
add
std
test
mov
inc
stos
sbb
xor
cmpsb
test
stos
xor
sti
lods
add
ret
scas
add
icebp
lcall
enter
data16
lods
xchg
mov
outsb
imul
inc
lea
dec
enter
jmp
aad
add
cmp
add
mov
ret
or
push
jecxz
scas
lea
inc
add
mov
ljmp
aam
icebp
xor
jge
in
fmull
mov
sbbl
adc
sub
je
clc
cld
test
pop
sub
adc
pop
movl
pop
push
loop
sbb
lock
out
sbb
pop
insb
sub
sti
mov
fisubrl
mov
xchg
mov
cld
pop
icebp
dec
fsubrl
jb
call
jne
xchg
or
mov
loop
int3
jnp
cltd
lea
and
cli
pop
loop
cli
call
inc
testl
push
sbb
xor
mov
cld
xchg
add
daa
add
push
jbe
lret
lds
jle
inc
incb
push
mov
cmpb
mov
inc
test
imul
cld
dec
or
xor
xchg
and
push
push
cmp
xor
pop
pop
fbld
xchg
jmp
mov
and
adc
mov
push
inc
call
pop
loopne
xor
jae
inc
int3
mov
cmp
sub
mov
jo
out
xchg
sarb
push
icebp
imul
setbe
push
xor
movsb
hlt
in
scas
xchg
in
shlb
dec
mov
test
jno
add
aam
lcall
mov
inc
xchg
mov
jb
incl
push
add
mov
mov
xchg
inc
cld
xchg
xor
lock
push
inc
incl
add
jno
lock
sub
jbe
mov
mov
sub
sub
xchg
shrb
fs
out
lock
aas
adcb
call
les
call
test
add
push
jmp
xchg
mov
dec
and
xor
fistl
fsubrs
pop
lret
cmp
je
sbb
int3
ret
mov
fs
mov
aas
jmp
mov
xor
loopne
push
mov
mov
lock
add
jg
xchg
xor
push
mov
sub
mov
push
and
add
cwtl
add
fadds
clc
aam
or
lock
cmp
push
lea
adc
or
push
call
faddp
lods
leave
sub
sub
imulb
or
loopne
test
rcr
cld
add
push
test
push
or
pop
add
adc
jo
jno
or
loope
outsl
lock
adc
iret
movsb
sub
lds
fidivrs
out
jno
fidivl
adcl
adcl
mov
dec
mov
std
sbb
add
cmpsb
xor
mov
je
or
movsb
and
inc
push
cltd
jo
or
lret
shrl
pop
test
add
sbb
aas
bound
les
or
push
mov
dec
les
test
aam
mov
mov
je
inc
pop
mov
lods
push
mov
or
movsb
add
cli
mov
jp
xorb
fisttps
mov
shr
mov
movsb
mov
push
add
call
adc
or
jo
add
jae
test
fistps
sahf
xchg
push
cmp
add
or
divb
dec
inc
pop
add
xchg
les
fwait
ret
jp
fstpt
testb
mov
push
cmpb
or
push
cmp
outsl
add
xchg
xor
mov
adc
add
mov
ret
pop
jbe
in
lea
ss
cmp
out
mov
or
dec
pop
mov
shlb
or
pop
pusha
inc
xor
add
mov
push
fiaddl
mov
add
jne
das
fsts
sbb
dec
jmp
cmp
mov
test
adc
call
mov
faddp
sub
out
push
inc
mov
mov
push
aaa
add
inc
and
addb
lea
scas
lcall
aad
xchg
out
xor
mov
sub
rorb
test
call
adc
lcall
insb
add
or
cs
jbe
xor
aam
push
divb
sbb
push
filds
and
dec
shrb
lret
add
int3
mov
stc
outsl
sbb
aam
pop
push
test
jbe
call
and
xor
xor
adc
flds
dec
ret
out
cmp
and
push
call
insl
cmpsl
mov
inc
push
je
jb
pusha
pusha
scas
mov
aaa
add
call
testl
pushf
ss
adc
or
into
xor
int3
add
jp
push
fwait
mov
xchg
sub
sub
sarb
cmp
inc
pop
push
and
mov
add
call
repz
int
mov
into
mov
add
aaa
add
ds
movsb
push
sbb
and
add
sub
adc
decl
or
add
pop
add
add
sarb
rolb
mov
scas
push
subl
cmp
cmpl
decl
adc
push
sub
mov
sarb
outsl
clc
cmp
sbb
mov
pop
push
jmp
adc
scas
inc
mov
sbb
shlb
pop
or
jg
out
addl
shlb
ja
fcoms
test
cmp
lcall
sub
je
adc
sub
add
sarb
and
inc
dec
mov
fisttps
ljmp
aas
shrb
mov
push
jb
aam
xchg
jae
mov
lock
pop
pop
inc
add
xchg
ret
rorb
aam
cld
insb
test
push
add
cmp
scas
sbb
sub
mov
push
outsb
mov
popa
cltd
mov
cmp
jge
cmp
fisubrl
test
adc
es
into
rol
in
and
jne
call
cld
adc
dec
xchg
mov
mov
mov
clc
call
dec
cmp
aas
inc
mov
pop
roll
add
add
xchg
dec
jo
sar
cmpsb
add
xor
jbe
add
or
incl
movb
jmp
pop
mov
clc
jmp
andb
popf
clc
jg
mov
test
test
push
push
jo
les
fdivl
mov
fisttps
push
repz
pop
xchg
add
fs
xchg
dec
cld
pusha
sbb
mov
call
ud0
jmp
movsl
subb
xchg
lods
loopne
or
mov
sarl
jg
xor
sub
test
dec
mov
xchg
ret
sbb
into
dec
push
test
scas
lea
scas
pop
scas
mov
imul
or
dec
or
push
add
or
popa
add
lret
mov
add
sub
mov
inc
and
pushaw
cmp
ret
inc
add
loopne
push
js
cmpl
hlt
xor
call
daa
fisttps
xor
loope
in
xor
fs
and
push
stos
mov
sbb
pop
inc
cld
jp
push
loopne
jo
call
mov
push
in
adc
sarl
out
inc
fmull
mov
mov
pop
punpcklbw
loopne
add
je
fdivs
ret
add
cmp
decl
push
fs
call
sbb
sbb
push
shl
push
outsb
mov
jmp
fneni(8087
add
mov
adcb
sbb
loopne
or
mov
or
test
loop
ror
adc
pop
cld
push
push
push
je
jno
mov
jb
jg
sbb
loopne
clc
pop
jne
push
lea
push
push
shlb
add
je
add
inc
movsb
popf
inc
ret
add
ss
adc
add
lahf
hlt
idiv
subl
test
pop
mov
inc
cmpl
and
mov
js
or
cmp
call
pop
popa
sub
dec
xchg
enter
ja
sub
push
adc
inc
sbb
push
inc
enter
pop
mov
cmp
mov
fs
incl
fisubrl
mov
andb
shl
mov
mov
aam
mov
push
adc
cmp
mov
outsb
add
repnz
imul
jge
add
in
mov
mov
pop
sbb
pop
dec
stc
popa
es
push
add
cmp
dec
loope
call
call
call
inc
clc
loop
aad
pop
mov
mov
add
js
push
adc
loop
mov
push
stos
xorb
mov
in
loope
fsub
lahf
pop
in
call
pop
lock
inc
or
in
jbe
push
repnz
cmp
xchg
incb
push
pusha
das
clc
std
cld
popa
adc
add
inc
mov
jp
es
test
xor
mov
pop
out
insb
mov
or
mov
inc
out
jecxz
jg
sub
pusha
inc
sub
and
mov
bound
leave
mov
arpl
mov
jl,pn
andb
jmp
pop
push
mov
lcall
scas
call
std
fildl
push
popa
sbb
call
lock
sbb
js
mov
outsl
mov
add
loopne
loopne
inc
or
and
jbe
popa
insb
fsubs
pusha
mov
movsb
enter
popa
in
sbb
leave
xorb
cld
into
call
xchg
in
jg
pusha
sbb
fldenv
mov
fs
jbe
push
loopne
lea
adc
in
rolb
sahf
pop
cltd
and
jge
mov
or
cwtl
sub
movsl
ja
in
mov
sbb
add
mov
je
mov
and
jnp
add
pop
imul
das
mov
mov
cmovle
mov
icebp
adc
stos
outsb
mov
sbbb
je
call
pop
dec
add
add
push
je
jecxz
add
adc
mov
mov
cmp
sbb
xchg
sarb
icebp
pop
cmp
or
xor
aaa
sbbb
sbb
jns
mov
nop
add
icebp
arpl
mov
jne
dec
fistl
add
clc
subl
dec
in
mov
add
mov
hlt
jo
mov
mov
adc
mov
adc
in
cmp
pop
mov
mov
inc
hlt
push
inc
pushl
pushf
addw
ja
cmp
and
aam
gs
sub
jo
and
mov
mov
call
push
fs
jo
outsb
jg
dec
xchg
lret
sbb
incl
loop
popa
push
xchg
xchg
adc
mov
adc
cmpsb
stos
adc
lcall
dec
fldt
jbe
sub
movb
push
cld
fbstp
adc
jo
jbe
js
adc
out
adc
packssdw
xor
mov
sar
pop
adc
mov
xchg
std
mov
clc
sbb
loope
outsl
fcoms
xchg
mov
cmp
cmp
push
cli
mov
pop
mov
sbb
nop
es
sub
mov
sahf
and
xor
push
ret
je
stos
mov
stos
push
stos
push
shlb
mov
add
movsb
pop
cld
adc
add
lock
sahf
push
mov
push
inc
pop
stos
dec
shrb
leave
jmp
clc
fwait
push
adc
sbb
fcoms
adc
cmpsb
pop
jmp
stc
cmp
test
arpl
push
mov
inc
and
push
add
cwtl
mov
pusha
decl
xor
leave
fiadds
jecxz
add
lahf
lock
shr
push
mov
push
push
fists
adc
mov
adc
sub
fdivrs
add
adc
xchg
call
incl
fwait
mov
cmp
add
mov
lock
idiv
sbb
or
test
or
or
stc
or
pop
push
dec
cmp
pop
pop
je
pop
ret
xor
mov
daa
aam
mov
loop
xchg
xor
sub
mov
es
dec
add
icebp
inc
jge
nop
mov
scas
sti
je
push
xor
cmp
repz
dec
push
scas
clc
dec
mov
pop
loope
incb
mov
adc
sbbb
mov
jb
xor
inc
jbe
pop
pop
jbe
lock
mov
inc
in
and
sub
jmp
add
jno
iret
inc
mov
popa
jo
mov
in
lock
add
mov
dec
add
icebp
test
xor
pop
icebp
pop
loopne
mov
xlat
adc
mov
jae
shrb
mov
cmp
inc
and
jo
dec
in
popf
js
xor
inc
and
test
je
pushf
hlt
lods
jo
loop
and
mov
mov
add
mov
xchg
shr
test
add
mov
fsubrp
cmp
jmp
dec
fsubr
pop
mov
jl
je
inc
ljmp
popl
jge
ljmp
pushf
fimull
xchg
rol
and
ja
pop
xorl
aas
add
cmpsb
jl
in
ljmp
and
repz
add
adc
xor
pop
dec
mov
lods
push
mov
mov
fwait
add
dec
loope
push
mov
or
add
cmp
sarb
loopne
outsl
cli
das
xor
cld
add
iret
jbe
push
jmp
insl
test
aam
in
jg
adcb
xor
sub
js
call
cltd
jbe
cmp
cmpb
hlt
ja
js
lret
mov
jo
or
push
inc
push
adc
pop
je
ds
and
fs
loopne
mov
pop
dec
incb
jo
loop
push
fnsave
xor
call
mov
push
fmuls
pop
call
movl
add
arpl
mov
and
mov
cmpsl
call
inc
jo
jmp
call
add
and
jmp
fistpl
and
mov
jl
add
push
pop
ljmp
lods
test
sub
or
jl
sbb
inc
clc
fildll
scas
adc
add
jno
add
push
mov
mov
xor
adc
call
jl
les
inc
cmp
adc
outsl
adc
adc
or
pop
repz
sbb
xchg
mov
sub
mov
adc
mov
push
cli
and
xchg
mov
aaa
addl
shrb
test
dec
add
repnz
pop
mov
sbb
xor
loopne
std
xor
cltd
cmp
add
jl
mov
cld
stos
add
in
mov
mov
cmc
mov
jmp
imul
cltd
call
cs
jo
cmp
or
inc
testb
sar
sbb
mov
pop
xchg
out
pusha
xchg
imul
jb
mov
inc
pushl
jg
loop
ss
pop
mov
out
xor
cli
divb
ljmp
push
mov
inc
cmp
clc
inc
xor
cmp
push
mov
add
clc
push
inc
data16
sti
push
mov
in
sub
leave
je
cmp
push
sub
cmc
outsl
stos
test
adc
mov
jmp
jg
add
fildll
or
add
inc
jne
aaa
mov
fwait
jmp
xorl
test
push
fidivs
scas
adc
aaa
pop
ret
xor
push
pop
ret
idivb
data16
mov
stc
mov
push
pop
imul
or
hlt
mov
add
or
loop
call
jp
shr
jg
dec
jmp
inc
push
push
pop
sbb
and
adc
mov
mov
je
xorb
or
adc
sub
incl
mov
ficomps
jo
push
xchg
or
lcall
pop
mov
lcall
dec
pop
ret
push
push
lcall
js
add
adc
adc
mov
data16
inc
jnp
sub
fdivl
pop
cmp
push
rolb
cmp
test
sbb
or
bound
inc
pusha
loopne
ret
popf
jb
pop
loope
mov
mov
scas
je
and
fdivrs
jp
ss
inc
out
xor
rolb
es
call
inc
jmp
pop
mov
add
std
pop
sub
dec
fldcw
test
and
fmull
jnp
dec
add
stos
mov
mov
loop
pusha
mov
mov
dec
in
pop
or
jmp
call
out
push
decl
xor
ja
or
push
xor
pusha
sbb
lret
lea
fidivl
mov
or
orb
inc
jmp
movb
push
andb
aaa
inc
dec
out
mov
xchg
add
subl
cmp
push
dec
add
out
icebp
mov
sbb
add
cmp
ljmp
jo
and
popa
lods
xor
loope
ror
sbb
incl
pop
cwtl
cld
test
jo
push
clc
cmp
lret
lock
inc
cmp
cmc
outsl
or
movsb
sti
push
je
mov
call
fstp
or
pop
add
mov
loopne
dec
inc
cmp
scas
fs
sub
rorb
arpl
ljmp
enter
or
pushf
add
cmp
jne
loope
sub
mov
inc
mov
mov
adc
push
mov
test
fistps
shlb
push
shll
sbb
jmp
jp
test
cld
mov
rcr
mov
ja
mov
sbb
dec
add
cmp
les
inc
cmp
testb
mov
inc
mov
mov
cld
das
and
rolb
sub
rorb
dec
orb
add
pop
adc
lods
clc
ja
call
rorb
mov
jge
or
jp
rol
jge
or
inc
jae
push
dec
mov
mov
add
mov
andps
cld
rclb
pop
cmpsb
repnz
jecxz
xchg
or
add
adc
cmpsb
cmp
add
loopne
push
pop
fists
imulb
adc
mov
ret
push
loop
daa
testb
cmpb
push
jp
or
shll
or
incl
out
adc
inc
mov
rclb
add
mov
push
push
and
mov
cli
outsl
clc
decl
add
loop
inc
sbb
add
hlt
add
cmp
add
filds
cmp
or
addr16
out
push
sbb
sub
xor
dec
fadd
or
pusha
testl
cli
frstor
pop
loopne
jbe
sbb
iret
ret
xchg
dec
push
xlat
push
mov
rol
push
int3
aas
push
xor
jmp
mov
add
mov
fcmovne
mov
scas
loopne
push
mov
mov
shrl
out
fdivrs
call
in
test
enter
hlt
or
decb
notl
push
leave
dec
sar
sbb
inc
std
rorb
sub
push
mov
xor
jbe
sbb
pusha
or
pusha
add
pushf
mov
mov
das
mov
dec
pusha
sub
pop
pop
loopne
rorl
daa
pusha
pop
pop
and
adc
xor
outsb
sti
mov
mov
inc
sub
pusha
cmp
int3
jg
and
loopne,pn
or
bound
popf
xor
jae
push
sub
decb
add
jp
gs
adc
or
xchg
push
or
rolb
inc
popa
inc
fisttpl
add
loope
add
lahf
loopne
xchg
mov
add
or
cmp
jo
pusha
cmp
jp
ljmp
in
and
jl
and
loopne
add
sarb
add
cmp
loopne
scas
xor
add
push
mov
test
jmp
mov
mov
loopne
pusha
add
flds
popa
push
out
push
jl
pop
movsl
js
bound
push
or
pusha
sbb
add
sub
xor
popa
xchg
call
fidivrs
hlt
dec
mov
and
pop
adc
push
fsub
pop
mov
aam
repz
stc
jb
jmp
jns
or
add
jp
jle
push
pop
popa
incl
jne
mov
jp
xor
and
sbb
pop
adc
push
and
jne
popa
fs
jle
jl
lret
jecxz
scas
dec
popa
das
fmuls
jg
jg
in
xor
stos
pusha
adc
add
mov
jne
ss
loope
loopne
cmpsl
addl
cmpb
jo
mov
popf
lods
std
ret
ret
sbb
addr16
test
std
imul
ss
push
push
inc
ret
pusha
mov
cld
aaa
vmovntps
hlt
inc
dec
xorb
js
pop
icebp
incl
jmp
je
push
pop
fs
pusha
adc
fwait
mov
adc
pusha
and
subb
add
pusha
push
push
in
lock
add
popa
mov
inc
pop
cmp
cli
scas
es
hlt
xor
mov
push
lea
mov
mov
push
in
add
lea
mov
scas
push
xor
fs
in
sub
xchg
ror
testb
cmp
push
push
in
popa
jb
data16
inc
pop
pusha
pop
orl
lock
sbb
clc
jg
call
and
loope
mov
xor
fbld
dec
xor
das
addl
roll
outsb
add
jp
and
xor
ss
inc
dec
fdiv
fbstp
mov
call
negl
add
ret
add
orl
ret
or
and
push
shrl
push
in
mov
push
adc
aas
daa
shl
outsl
or
pusha
add
loopne
data16
mov
or
mov
add
faddl
xchg
inc
push
ret
divb
sbb
and
ficoms
xchg
aas
dec
and
movsb
or
sarb
xorb
in
aam
sub
push
and
mov
cmp
movsb
sub
mov
and
add
cwtl
addl
fdivrl
push
out
adc
cld
test
lods
outsl
mov
mov
in
inc
loopne
ljmp
mov
jb
aaa
and
in
mov
loop
repz
js
aad
mov
icebp
adc
dec
mov
das
mov
dec
std
jo
add
add
push
roll
mov
cld
inc
idiv
ljmp
fcoml
mov
or
inc
adc
xor
jne
jo
lea
outsl
call
scas
lea
scas
call
add
add
mov
push
pop
add
stos
mov
es
mov
mov
push
push
cld
xor
mov
repnz
sbb
xor
and
leave
pushl
in
add
jno
add
mov
adc
and
jp
jle
hlt
call
push
add
push
mov
lods
dec
cli
das
mov
and
call
sub
jmp
fidivs
ljmp
add
call
inc
cli
adcb
or
pop
pop
push
add
xor
mov
jl
pop
inc
loop
bnd
mov
add
push
jo
adc
rcrb
cmpsb
mov
push
lock
data16
lock
jle
aam
inc
js
lock
or
cmc
dec
push
and
mov
push
pop
inc
jo
dec
dec
in
subb
sub
je
es
fists
cmp
loopne
enter
lods
push
xor
daa
dec
cmpb
and
call
fbstp
int
add
lock
pop
inc
sbb
mov
ljmp
jmp
je
call
mov
jo
repnz
call
icebp
adc
call
add
pop
outsb
jne
lock
pop
inc
data16
jle
sub
jo
jne
imul
fbld
daa
call
inc
decl
mov
mov
loopne
scas
clc
in
das
clc
push
mov
mov
or
push
icebp
add
xorb
or
xchg
mov
lahf
jl
je
sub
pop
inc
jb
testb
add
bound
in
mov
cmp
adc
xor
fdivs
or
or
aas
insb
add
jmp
cli
mov
add
jo
out
push
mov
jle
mov
cmc
xor
mov
testl
mov
jo
lods
lret
jg
test
das
mov
or
push
push
jb
push
je
sti
xor
xchg
call
mov
xor
push
cmpsb
lock
add
adc
rclb
repz
pop
sti
mov
pusha
jne
test
icebp
pop
jmp
fbstp
mov
xor
dec
add
call
or
je
roll
loope,pt
add
and
std
decl
loop,pt
dec
or
cmp
test
add
lods
test
mov
scas
pop
call
mov
je
jne
mov
jnp
int3
and
lock
or
add
scas
xor
push
jb
icebp
add
adcb
adc
jb
je
pop
mov
adc
mov
addl
les
scas
nop
sbb
adc
mov
repnz
jg
out
push
push
pop
inc
mov
aas
repz
cmp
je
sar
xorb
mov
jne
loopne
rclb
pop
es
in
jb
test
movsb
in
aam
mov
jl
das
movsb
jmp
call
jbe
inc
fdivp
neg
js
in
push
movsl
push
pop
fidivs
jb
call
jne
les
inc
mov
lock
test
push
xchg
or
pop
or
pop
popf
adc
insb
xor
jbe
adc
negl
mov
mov
cltd
xor
int3
test
shl
aaa
jbe
std
push
push
test
not
test
sub
push
and
mov
fwait
cli
pop
and
pop
mov
dec
inc
lods
ret
je
cmp
shl
cli
add
xor
sti
xor
sbb
and
xlat
xor
les
test
cmp
add
stc
xor
out
inc
xchg
pop
sbb
in
add
push
test
lods
xchg
mulb
pop
std
pushl
inc
jne
and
lock
jb
and
add
cld
pop
inc
jg
pop
mov
notl
test
xor
jne
xchg
aas
jmp
jo
sub
mov
sti
xor
add
mov
push
test
cltd
data16
adc
jg
cwtl
mov
pop
lea
add
jmp
js
loopne
jbe
xor
sbb
out
das
push
shlb
movsb
cmpsb
test
push
clc
push
jl
mov
add
clc
mov
inc
sti
in
adc
push
incb
shll
sbb
push
jp
sub
or
lock
cltd
dec
or
lea
xor
add
or
push
decl
dec
lret
inc
ja
adc
xor
mov
cwtl
lods
push
jmp
cmp
or
sbb
push
jle
add
movzbl
add
test
push
and
xchg
call
ret
add
cmp
bound
jo
add
imulb
insl
jnp
imul
adc
push
int3
rorb
add
int
movl
jmp
dec
cld
mov
jbe
lcall
adc
insl
xor
sbb
sti
xor
pop
dec
mov
into
jp
push
sar
decl
dec
add
je
inc
fildl
inc
pop
jae
jno
mov
ljmp
adc
xorb
loop
pusha
je
xchg
push
inc
adc
sbb
and
jo
mov
and
insb
cmp
xchg
pop
push
ror
cld
sub
push
cwtl
jmp
push
pop
pop
mov
jl
inc
pop
je
incb
xor
imul
mov
or
adc
aam
call
push
add
add
notb
aaa
adcl
scas
push
dec
icebp
das
xor
push
xchg
sub
sarl
add
cmpsl
pop
add
notb
add
ret
mov
lock
pop
rclb
aam
push
mov
add
sbb
lock
scas
adc
test
jg
rolb
dec
shll
or
fidivl
cmp
add
ret
jmp
xor
in
fsubrp
xor
or
je
jmp
incl
pop
mov
jae
mov
int
push
movsb
scas
je
mov
stos
add
mov
jbe
int3
and
sub
mov
test
and
lock
cld
cmp
ja
loopne
jg
dec
lods
mov
add
push
add
testb
add
roll
mov
xchg
xor
add
adc
xor
insl
inc
add
movsb
dec
insb
nop
pushf
push
stos
sbb
repz
xchg
sub
inc
mov
dec
test
dec
repnz
sub
pop
adc
shll
pop
jle
mov
jbe
push
mov
or
es
sbb
mov
sar
cs
bound
nop
les
out
cltd
sub
jnp,pn
jmp
adc
xchg
push
dec
pop
dec
cwtl
mov
rcrb
mov
inc
mov
hlt
ja
sub
dec
pushl
movl
dec
or
es
data16
xchg
aam
lcall
pushl
add
fs
jl
hlt
inc
incl
push
adc
mov
add
pop
jmp
mov
inc
push
incb
mov
mov
stos
inc
test
mov
nop
add
mov
inc
pop
sbb
stos
and
or
adc
add
adc
adc
loop
inc
sbbl
add
shl
xchg
cmp
jge
test
pop
lea
cmp
inc
adc
inc
hlt
dec
xor
or
popa
sahf
dec
sub
push
hlt
or
lock
and
aaa
imul
push
push
adc
ret
je
add
or
jmp
or
add
jle
and
adc
push
loop
add
test
addb
lock
jbe
mov
sub
adc
fcoms
jl
add
or
add
sbb
mov
pop
mov
sub
mov
add
jge
sbb
or
jl
add
or
sahf
xchg
or
mov
scas
cmpb
andb
xor
mov
jge
or
sub
sar
add
leave
fmuls
int
sbbb
cld
dec
add
mov
cmp
notb
add
out
mov
rorb
dec
add
or
mov
mov
or
push
invd
jp
add
jb
call
push
in
aad
push
ret
gs
ret
xlat
cs
insl
inc
out
mov
xor
jmp
imul
and
shlb
rcrb
cld
sbb
outsb
add
les
icebp
test
add
gs
ljmp
push
cmpb
and
add
arpl
jle
dec
or
pusha
sbb
sub
cmp
pop
sub
inc
insb
js
fcmovb
dec
jb
decl
les
and
jb
adcb
push
xor
dec
push
in
jbe
and
mov
mov
aam
arpl
scas
xor
imulb
negb
mulb
dec
mov
sbb
add
mov
outsb
movsb
jle
ret
sub
sbb
add
mov
sub
bound
int3
popa
xchg
xor
jmp
loopne
cmp
andb
inc
add
push
fdivp
jg
adc
je
xchg
ror
inc
sti
data16
aas
inc
gs
cltd
and
outsb
or
jmp
pushf
mov
mov
jmp
clc
mov
loopne
jmp
push
stos
ret
test
das
jle
cmp
shlb
dec
or
sbb
idivb
cmpsb
push
adc
rorb
sar
sbb
outsb
shrl
lret
aam
push
add
mov
ror
shlb
add
xchg
mov
leave
cmp
lock
pop
lock
pusha
cmp
mov
mov
add
mov
lock
or
add
mov
jg
jbe
add
inc
inc
cli
aas
jle
push
xor
loop
incb
add
loope
push
and
push
xchg
dec
das
mov
pusha
adcb
pop
lahf
add
incl
adc
pusha
inc
je
call
pusha
mov
jmp
add
fwait
or
js
or
mov
orb
inc
sbb
jge
in
mov
pop
faddl
mov
je
jg
sbb
add
adc
jmp
xchg
add
xor
ror
mov
add
pop
lret
fs
loopne
bound
add
loope
test
jp
test
lock
xor
or
insl
adc
add
adc
test
loopne
bound
add
pusha
fists
imulb
adc
in
ljmp
and
mov
mov
outsl
aam
inc
cmp
jb
mov
js
js
or
cmpl
inc
add
idiv
loope
mov
mov
or
popl
inc
inc
decb
mov
popa
add
jbe
je
xchg
lea
pop
add
mov
mov
sbbb
sti
pusha
lods
add
rcrl
dec
add
loop
push
push
insl
sbb
push
pop
lods
pop
sar
faddl
sub
pusha
jns
or
jl
lea
jp
add
xchg
dec
mov
xchg
aad
mov
mov
sar
decl
mov
and
mov
add
jmp
mov
negb
test
ds
cltd
in
mov
push
sub
jb
add
je
xor
xchg
add
mov
adc
xchg
and
pop
mov
pop
lock
or
loopne
cmp
pop
pcmpgtd
test
mov
out
and
xor
cmpsb
sti
and
add
pusha
xchg
out
and
addb
push
je
mov
mov
sbb
pop
add
cmp
mov
ss
sbb
adc
xchg
loopne
ljmp
int
inc
call
aad
loop
inc
inc
mov
loope
sbb
je
lret
popa
dec
adc
divb
or
adc
lret
inc
daa
xchg
lret
repz
loope
adc
and
inc
push
sbb
scas
fldl
mov
lret
mov
push
fs
and
and
or
jg
mov
adc
fs
testl
push
pop
jno
jbe
or
sub
adc
adc
pusha
dec
popa
aas
lret
mov
push
push
cmp
je
pusha
or
add
push
push
cli
adc
adc
mov
push
add
or
dec
sbb
add
jmp
lock
push
or
stc
pop
adc
jo
cmp
xor
xorl
sbb
xchg
push
push
pop
adc
fimull
sti
and
stc
pop
dec
movsb
xor
mov
push
popf
cli
jg
cmp
orb
inc
add
icebp
dec
enter
ljmp
icebp
and
testb
mov
adc
call
test
mov
nop
jbe
mov
jno
ret
aam
mov
xor
fisubrl
add
cmp
sub
push
sbb
jle
outsl
mov
je
cmp
cmp
pop
outsl
mov
mov
and
inc
cs
adc
mov
cmp
push
das
shrb
je
movsb
orb
dec
jmp
inc
loopne
les
mov
subb
push
lcall
dec
sbb
outsb
lock
lock
sbbl
mov
pop
mov
push
jo
mulb
lock
adc
sbb
lcall
xchg
cmpb
dec
icebp
add
adc
and
or
jle
les
mov
shlb
outsl
cli
dec
dec
sbb
add
fnstenv
insb
lock
sbb
fildll
vmwrite
mov
ret
jb
sbbb
das
and
test
icebp
dec
fistpll
les
out
shlb
cld
enter
add
pop
movb
enter
lds
sub
jo
mov
mov
inc
cmp
inc
sub
mov
popa
sub
or
pop
push
mov
add
mov
pop
pop
mov
jmp
testb
sbb
add
fnstenv
sub
push
aas
je
inc
adc
repnz
cmc
add
data16
push
fsub
sub
and
pop
int3
hlt
cmp
push
dec
inc
ds
mov
andb
cmp
xchg
fdivrl
xor
loope
fstpt
lock
mov
jle
sbb
pop
pop
and
jae
push
sub
sbb
lods
mov
fcomip
and
sub
xor
or
sub
add
fiaddl
or
rcrl
je
jge
decl
mov
je
inc
insb
sub
adc
mov
adc
push
add
add
into
ret
add
dec
jb
and
or
sarl
jne
int3
rorb
repz
pushf
jo
decb
dec
and
cli
ja
fdivr
fistpl
mov
mov
sub
loopne
push
lds
lcall
ljmp
lock
adc
xor
mov
push
faddl
js
rorb
inc
jo
push
xor
inc
test
xorb
mov
mov
lea
into
add
incl
add
push
pop
cmp
icebp
dec
lock
adc
add
push
call
ja
xchg
inc
addb
cmp
inc
mov
outsb
cmp
setne
inc
je
mov
pushl
xor
dec
xor
sbb
dec
ret
jle
push
outsl
cli
or
fs
inc
lock
stos
mov
jmp
mov
or
repz
adc
xor
pop
jnp
icebp
mov
inc
les
and
test
jl
test
icebp
or
cmp
fildl
dec
pop
xor
add
int
fnsave
decb
adc
or
mov
xor
sbb
adc
push
or
dec
mov
lock
mov
dec
add
adc
lcall
jbe
clc
dec
repnz
inc
testb
and
jmp
sbb
add
adc
mov
mov
sbb
jl
or
mov
sub
add
and
jg
je
cmp
je
ret
push
xchg
fmull
mov
cli
jo
fcomip
mov
icebp
mov
fdivl
adc
aas
cmp
xchg
sbb
cwtl
inc
push
lds
or
ljmp
add
cld
mov
cmp
ja
push
outsl
or
and
or
stos
mov
push
movsl
lods
cmp
pushf
xor
subb
aam
jg
incl
xorb
and
cmc
adc
mov
jnp
jo
pop
and
pop
or
jg
sub
push
mov
xor
mov
shrb
rol
shl
shlb
or
sbb
mov
sub
sbb
outsl
filds
jns
adc
push
sub
xor
add
repz
or
xor
repz
mov
jne
add
xchg
or
incl
pop
push
cmp
pop
mov
add
mov
mov
mov
lock
pop
dec
jo
jb
clc
jg
adc
xchg
popf
ret
add
jmp
test
insb
test
fldt
in
jo
mov
or
jbe
jb
adc
add
jns
icebp
add
xchg
cld
in
push
dec
xor
ret
std
jae
shl
ret
fcoml
mov
pushf
add
or
scas
xor
clc
incl
rcll
push
dec
jne
push
ljmp
rclb
hlt
ret
inc
sbb
mov
ret
add
inc
ret
dec
ja
mov
add
std
pop
mov
nop
stos
rorl
xor
mov
fisttps
ret
cmp
jne
inc
lock
add
xor
cmp
rcrb
or
mov
mov
stos
mov
adcb
inc
pop
and
xor
jo
xor
mov
iret
sub
dec
dec
add
jbe
adc
cmp
xor
mov
push
or
into
lret
out
cli
call
push
out
mov
jnp
jo
add
data16
jle
mov
stos
jecxz
insb
inc
pop
cmp
sbb
xchg
adc
insb
mov
mov
xor
out
add
adc
sarb
out
jbe
orb
call
addr16
outsl
aaa
xor
hlt
jmp
add
add
and
lds
add
mov
cmp
gs
xor
cli
cmp
lock
add
ret
imul
ret
lods
push
sub
shl
or
mov
pop
mov
test
cmpsb
repnz
mov
aaa
add
xchg
or
orl
pop
add
mov
push
hlt
jmp
mov
aad
das
adc
jbe
sub
cmp
jl
or
shl
cmp
orl
mov
lcall
roll
cld
mov
jbe
push
mov
mov
adc
cmpb
adc
add
jl
and
int
jp
in
jle
sbb
lret
ss
mov
xor
jbe
cs
mov
push
xchg
and
adc
sub
mov
adc
add
out
or
jbe
add
mov
xor
cmp
scas
mov
inc
loope
adcb
insb
xor
dec
add
add
xchg
fimuls
test
loop
add
addb
xor
add
pusha
dec
mov
push
orl
adcl
jb
adc
dec
test
jne
cmp
stos
lds
jle
xchg
and
lock
repnz
adc
lock
jmp
add
int3
incw
movsbl
es
pop
push
addb
or
mov
pop
inc
inc
mov
inc
stos
fiaddl
jne
xor
orb
mov
orb
mov
loopne
mov
pop
subb
pop
pusha
pop
or
adcb
inc
dec
lock
stc
mov
aad
enter
stos
mov
js
rorb
ficomps
inc
cld
fisttpl
cwtl
adc
rclb
in
pmaxub
or
add
mov
sbb
sbb
mov
cmp
jbe
adcb
pop
jo
popl
dec
jmp
pop
add
adc
mov
aam
or
adc
gs
pop
xlat
dec
mov
inc
fistl
mov
call
notb
dec
mov
and
stos
add
add
xchg
rorl
xor
push
cmp
jl
sub
insl
sahf
stc
mov
inc
mov
ret
xor
test
or
xor
in
sbb
loopne
xlat
adc
pusha
cld
adc
add
rolb
inc
aaa
sbb
cmp
sub
pusha
adc
test
jl
inc
mov
or
cmpsl
mov
fisubs
inc
movups
inc
cltd
movsb
int
adc
test
incl
cmpsl
and
push
and
mov
push
xchg
sbb
test
push
addb
add
cmp
or
ljmp
xchg
aas
jp
lahf
rol
std
decl
clc
add
inc
out
sbb
outsl
out
mov
or
cmp
or
lock
ret
push
jmp
mov
cmp
cld
adc
rcr
fcomip
mov
rol
xorl
cld
jmp
test
xchg
or
cmp
xor
add
add
fcmovb
cwtl
cmp
in
and
lock
adc
scas
shrb
sbb
or
sbb
lds
les
das
pop
fs
outsb
rclb
adc
sbbl
popa
addb
and
push
subb
jbe
dec
jp
daa
popa
leave
adcb
jg,pn
loopne
loopne
xor
call
mov
add
mov
repz
hlt
cmp
lret
loope
cmc
subl
aaa
cmp
in
ret
pop
jae
jecxz
ret
push
mul
and
jg
or
aad
jnp
push
mov
enter
cltd
xor
inc
mov
jb
cmp
jae
sbb
pop
or
sbb
cmp
jl
ret
xchg
sbb
mov
leave
add
adc
mull
lock
pop
test
sub
push
into
loopne
mov
inc
vmovapd
jo
adc
pop
xlat
push
inc
or
dec
lahf
dec
or
add
incl
in
cmp
mov
cld
mov
jmp
push
nop
push
jmp
ret
loope
loop
and
loopne
sbb
test
jmp
in
lods
add
or
or
and
xor
adc
pop
loopne
or
adc
sbb
imul
in
mov
sub
or
and
jb
loopne
test
xor
mov
add
das
cli
add
or
mov
rcrl
push
mov
cli
or
lahf
push
std
loope
lret
pop
ret
cmpb
pusha
cltd
scas
adc
outsl
pop
imul
push
pusha
mov
fs
int3
mov
pop
dec
sub
fwait
dec
loopne
xor
aas
jb
lock
es
dec
loop
mov
push
push
call
fiadds
mov
insb
cmp
roll
subl
mov
leave
mov
or
sbb
loope
pusha
add
or
add
ret
cli
and
vmread
adc
push
leave
clc
shlb
dec
cmp
xchg
push
push
pusha
int3
dec
in
sbb
ljmp
andb
jle
add
nop
jbe
lea
icebp
int
lret
es
jne
or
inc
fadds
and
mov
sub
dec
sub
mov
cli
dec
jnp
repz
add
dec
sub
fisubrl
cs
cwtl
pusha
jmp
add
sarb
and
add
lret
gs
pusha
outsb
loop
xor
mov
mov
adc
add
lock
fucomip
push
repz
and
cli
bound
jle
pusha
cli
scas
js
or
arpl
std
pusha
mov
sbb
icebp
out
nop
or
inc
jmp
cmp
popa
jl
pushl
push
mov
cmpsl
add
inc
fsts
mov
and
test
loop
ret
sbb
add
imul
or
mov
jmp
or
in
jo
lock
add
add
fildl
cld
cli
fbstp
hlt
add
lock
xor
add
sarb
testb
mov
in
or
inc
mov
xor
sti
out
fucompp
arpl
jae
add
and
mov
inc
in
jmp
add
inc
cmp
xor
ret
mov
icebp
inc
ret
jo
aaa
inc
add
or
movb
out
inc
and
je
mov
mov
fldl2t
out
add
add
jmp
push
testb
and
push
ja
fistpl
cmc
in
shlb
mov
mov
xchg
cli
ljmp
popa
dec
push
mov
jo
xor
jl
aaa
jg
add
dec
mov
imul
mov
adc
loope
filds
icebp
mov
lock
jle
adc
outsb
mov
cltd
ljmp
add
add
add
pop
outsl
clc
in
xor
jnp
lock
mov
jle
fdiv
pushl
dec
xchg
in
push
jno
xchg
or
or
stos
or
adc
add
mov
mov
xchg
cmp
jae
test
jle
sbb
fstl
mov
sbb
push
jecxz
add
mov
lret
jno
loop
cmp
rcrb
push
mov
add
add
repnz
fistps
movsb
add
mov
cmp
mov
inc
xor
scas
jl
hlt
decl
enter
mov
add
sarl
pushf
mov
or
xor
icebp
lock
jnp
in
inc
sub
fildll
and
es
push
adc
xor
push
icebp
xor
sbb
dec
fdivrp
mov
je
rcrb
daa
jae
jo
jo
or
adc
jle
decl
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
cmp
outsb
or
mov
and
and
iret
clc
incl
pusha
sbb
adc
dec
mov
mov
pop
hlt
data16
mov
mov
es
leave
fs
adc
sub
lock
bound
and
adc
adc
lods
and
adcl
inc
mov
mov
call
lahf
mov
and
or
scas
sbb
jmp
fwait
pop
fs
repz
xlat
add
ret
incl
test
pop
mov
pop
imul
xor
push
sbb
inc
add
jmp
repnz
xor
mov
out
add
cmpb
xor
fcompp
jo
jb
sub
jne
mov
push
push
mov
adc
inc
pop
and
testb
sbb
jbe
dec
call
lea
mov
testb
pushl
xor
dec
lock
adc
das
cld
ret
sbb
xor
or
cmp
push
nop
adc
aaa
filds
xor
xor
mov
fwait
adc
out
sub
test
pop
lock
ss
push
jbe
push
mov
fildl
adc
popf
movsl
sub
repnz
add
adc
mov
add
dec
sub
xor
outsl
add
sahf
lock
cmp
jae
add
mov
les
adc
jae
xor
popa
orl
movl
adc
mov
lcall
push
add
popa
loopne
insl
mov
or
rclb
cld
fildll
lea
xlat
mov
mov
lea
clc
pop
jmp
push
xorb
xchg
addb
or
sub
mov
or
add
add
pop
sub
dec
shlb
cmpsb
aaa
mov
inc
pushl
test
add
mov
lcall
cmp
incl
and
mov
scas
hlt
xchg
pop
clc
xchg
xor
or
xchg
xorb
js
or
stc
cmp
add
lcall
cmp
jmp
push
jmp
dec
loope
das
pop
push
incb
decl
std
lock
inc
outsl
clc
inc
inc
push
mov
pmulhuw
addb
pop
sub
incl
mov
cld
shr
insb
pop
orl
pop
clc
add
sahf
loop
cli
xor
fistl
push
pop
xor
or
inc
jmp
mov
mov
or
xchg
pushl
je
jmp
mov
mov
push
into
insl
cld
outsl
out
dec
xor
add
jno
jno
mov
adc
xchg
add
mov
pop
hlt
gs
rclb
cmp
cwtl
mov
jo
test
lock
rclb
mov
xor
or
notb
les
xor
mov
in
mov
sub
pop
add
loopne
inc
and
push
add
mov
jno
sar
dec
das
inc
jo
xor
jo
or
pop
cmp
lcall
lock
lock
outsb
or
and
out
and
mov
adc
pop
shr
out
jo
add
ret
shr
inc
push
flds
add
xchg
mov
push
pop
jbe
push
and
out
loope
adc
add
xchg
mov
cmc
or
rcrb
inc
sbb
sbb
in
push
dec
mov
mov
jecxz
xchg
loop
cwtl
adc
push
mov
add
repz
fisubrs
cmp
dec
ficompl
xor
adc
cmpb
andb
fwait
mov
mov
testl
add
dec
mov
lret
add
nop
fiadds
add
add
add
cmp
shl
je
jl
mov
and
dec
pop
lcall
mov
lock
mov
mov
out
push
cs
dec
push
out
add
or
clc
mov
sti
andl
xchg
inc
mov
addb
nop
add
je
lret
popa
ja
andb
fldl
andl
shr
xchg
jno
incl
sub
cmp
add
push
out
inc
cmp
ljmp
inc
cli
mov
addl
mov
sub
call
or
dec
or
mov
cmp
fnsave
clc
add
inc
rclb
lock
mov
push
mov
nop
test
xlat
adc
or
orl
xor
icebp
call
cli
jg
dec
add
pop
je
or
rclb
xchg
jg
add
out
mov
add
add
jg
hlt
inc
add
adc
loopne
cmpsb
or
and
mov
pop
and
xor
adc
stc
movsb
add
add
add
fiadds
in
add
call
adc
xor
add
add
enter
ret
mov
inc
rorb
mov
sbb
scas
mov
lea
notb
je
jo
pushf
or
ret
movb
and
pop
push
imul
test
sarl
adc
pusha
pop
shrb
add
rolb
fcompl
je
das
add
add
aaa
xlat
xchg
shl
xchg
inc
and
pop
rclb
ret
outsl
cld
push
and
mov
dec
adc
shll
sbb
sbb
test
xchg
ret
add
mov
dec
xchg
lcall
jne
pushf
fsub
xor
aaa
cmc
outsl
lahf
cmp
sar
incl
pusha
add
mov
inc
jg
jbe
or
mov
shll
std
xchg
jl
inc
cmp
es
mov
and
std
ja
rcll
jp
lock
fs
out
loope
incb
in
cmp
mov
out
dec
fadd
push
je
ret
add
xor
mov
pushf
adc
pextrw
or
cld
shll
iret
pop
push
jmp
ffreep
into
jl
ror
call
adc
add
adc
push
inc
je
inc
add
xor
stos
aaa
dec
pushl
out
pavgb
sub
scas
nop
nop
shr
cmp
add
mov
in
and
mov
and
loopne
jecxz
push
xlat
loopne
std
decl
add
adc
loopne
pop
cld
pusha
outsb
adc
enter
xchg
mov
ja
pushf
fisubl
je
adc
in
adc
pop
and
or
adc
sbbl
dec
jl
add
mov
dec
adc
ja
or
mov
pop
pop
push
popl
jo
sbb
lcall
lret
and
and
loope
xor
xlat
jecxz
lret
loopne
call
loope
push
mov
outsl
inc
mov
fsubs
xor
cli
in
add
pop
jp
addl
in
sub
loop
aam
add
sbb
shll
cmp
enter
or
ss
shlb
xchg
cmp
lcall
loopne
cmp
add
pop
push
fnsave
or
call
or
and
arpl
add
pusha
dec
push
xchg
and
pop
hlt
das
fisubrs
rcr
popa
adc
roll
enter
leave
push
enter
add
vmread
icebp
xchg
loope
mov
icebp
jnp
sub
mov
mov
cmp
inc
pop
inc
xorb
rcll
stos
xor
aaa
test
xchg
sbb
sbb
sti
ljmp
addr16
push
jne
lods
sbb
mov
movsb
loope
dec
sub
jecxz
inc
sti
jg
adc
sub
dec
push
jecxz
pusha
mov
test
adc
ror
lock
push
push
stos
add
mov
push
push
push
xlat
cmpsb
outsl
add
jmp
loope
je
mov
std
jmp
xor
shl
inc
xchg
popa
add
push
pop
or
jge
mov
xor
mov
cs
inc
lods
daa
popa
dec
loopne
cmp
add
cmp
adc
fldenv
arpl
lea
cmp
stos
cmpsb
or
ret
ljmp
orl
add
push
mov
push
fsubs
inc
jmp
pop
ror
fistl
das
je
inc
arpl
jecxz
cmp
pusha
adc
pop
cmc
pop
popa
cmp
shl
cmp
add
loopne
mov
fwait
sbb
call
je
popa
pop
lret
push
sub
test
mov
loop
xlat
in
and
loopne
ret
push
fildl
mov
and
fs
xor
cld
jmp
into
es
ftst
repnz
xlat
bound
add
call
or
cld
mov
fildl
pop
add
pusha
loop
clc
subb
and
sub
xor
cmpsb
and
or
inc
push
xchg
and
sahf
pop
pop
loopne
xor
js
ret
call
data16
loop
and
mov
ja
mov
add
testb
sbb
inc
shlb
and
xor
ljmp
fadd
cli
mov
add
jae
adc
and
ja
addb
ljmp
xchg
ss
pop
xor
mov
cmp
mov
das
inc
ret
xchg
mov
push
lods
or
outsl
jb
mov
inc
test
xchg
cmpsb
inc
inc
mov
andb
addb
pop
mov
add
add
ret
add
test
mov
lea
ss
adc
mov
jp
push
dec
sbb
adc
or
adc
stos
pop
pop
bound
add
lds
enter
add
or
mov
jg
pop
or
add
adc
jmp
xor
or
jmp
or
dec
js
or
loope
ret
adc
test
fs
add
xlat
das
addb
nop
or
pop
inc
mov
or
inc
out
sbb
xchg
mov
inc
rcr
jo
push
addb
dec
cmc
sbb
je
pusha
imul
outsl
clc
adc
leave
sbb
sub
imul
mov
adc
adc
out
add
push
imul
insb
or
and
pop
int3
push
dec
mov
data16
mov
repz
xor
push
xchg
push
dec
imul
xor
adc
add
fsubr
inc
inc
rcll
cltd
dec
push
insb
test
ss
sbb
xor
repz
fldt
sbb
xchg
lods
int
ret
aam
sahf
add
add
mov
loope
and
or
mov
mov
hlt
inc
mov
cmpsb
mov
mov
cs
push
inc
cli
xor
add
into
clc
icebp
fbld
dec
dec
repnz
push
out
dec
test
sbb
jecxz
pushl
sbb
loope
and
add
and
and
and
std
pop
jmp
in
add
or
sub
sub
les
add
das
add
xor
sbb
pop
push
xor
fwait
sarb
mov
sbb
aas
mov
shrl
dec
nop
mov
pop
sbb
insb
or
or
mov
add
lock
or
and
cld
inc
add
js
stos
push
test
mul
dec
fs
xor
mov
cmp
jo
or
fcomp
add
xor
cmp
xchg
xchg
loop
add
or
clc
mov
ret
xor
out
inc
out
shl
in
jns
push
pop
or
adc
cmp
push
cmp
or
aas
sbb
inc
push
or
outsb
add
or
or
push
mov
pusha
and
sbb
fisttps
leave
cld
ret
dec
mov
dec
add
mov
in
ss
cmp
pop
nopl
jne
inc
push
roll
pushf
stc
add
jno
shll
cmp
clc
jg
dec
out
or
mov
sbb
dec
cmpsb
movb
sbb
clc
push
jmp
pop
add
inc
sbb
mov
jbe
jbe
jmp
mov
sbb
inc
jle
fisubrs
and
lea
add
mov
dec
push
mov
mov
sub
inc
lods
inc
push
pop
fisttpl
sbb
psubusb
mov
add
jg
js
popf
cld
push
and
pop
pusha
jp
ds
call
in
add
lret
jp
es
shlb
sbb
lret
cmovs
lods
push
daa
imul
add
mov
scas
aaa
cld
pop
rclb
dec
adc
fiaddl
stos
inc
ja
xorb
add
mov
adc
pusha
mov
add
or
call
sbb
inc
rcr
sbb
je
rcll
ret
fidivs
testl
test
fistpll
jp
mov
or
pusha
add
ret
mov
or
add
cmp
xor
testb
ret
lret
pusha
cmp
mov
jmp
and
add
pushf
mov
sbb
rcl
mov
inc
stos
xor
push
add
add
loope
scas
cli
rorl
mov
mov
sbb
incl
cs
jo
add
ljmp
push
sbb
scas
mov
add
or
xchg
mov
lock
inc
jg
pusha
andb
ret
dec
ret
es
mov
jmp
je
push
rorl
insb
inc
adc
cmp
dec
test
push
and
repnz
js
sahf
dec
push
aad
sahf
cmp
lds
jmp
mov
push
jle
ja
fwait
jo
shrb
aaa
sarl
test
sarl
sub
lea
mov
ja
lock
loopne
subb
push
or
mov
adc
dec
add
jp
xor
rorb
je
pop
xchg
repz
mov
mov
cmpsb
add
lock
adc
add
or
jo
adc
cli
mov
jbe
mov
es
add
and
mov
shll
pop
testb
jbe
mov
aaa
cmpsb
test
fidivl
ficompl
and
add
cmpsb
push
mov
sub
add
mov
xor
cmpsl
lock
dec
movsb
shrb
loop
insl
mov
xor
add
mov
out
aaa
jecxz
xchg
call
cld
mov
jge
jl
mov
je
inc
xor
mov
repz
incl
add
mov
xchg
jmp
jl
xchg
xchg
hlt
mov
mov
mov
cmpl
mov
or
add
enter
das
adc
and
dec
jbe
in
fsubs
je
je
push
push
adc
sar
lret
jbe
mov
push
cmp
es
inc
push
xor
push
push
loope
cs
mov
dec
push
scas
jl
in
cmp
and
jle
in
lock
mov
add
or
jbe
clc
mov
xchg
stc
jae
sub
dec
add
jmp
add
repz
mov
pop
push
mov
sub
jae
mov
sbb
pop
pop
xor
int
jo
lea
add
stos
jo
aas
mov
or
sbb
xor
sub
sub
lahf
mov
ja
inc
cmp
jne
jg
sub
addl
adc
add
dec
je
inc
clc
add
mov
mov
jp
subb
push
out
inc
or
je
jmp
fidivl
test
mov
cmp
cmpl
cld
rcr
mov
cmp
cmpb
push
lret
push
scas
popl
sub
jge
inc
mov
pop
cmp
cli
stos
adc
xchg
push
cmp
jae
shrb
rolb
mov
mov
lret
cmp
mov
pop
jbe
sub
fcomp
aaa
pop
push
jle
cmpsb
xor
imull
mov
enter
xchg
mov
shrl
mov
clc
mov
je
and
outsb
cmp
adc
pop
dec
or
cmpb
jne
cmp
jmp
or
cmp
cmp
add
pop
ret
mov
clc
sub
jne
push
pushf
jne
cmp
sbbl
call
jl
lods
inc
ss
popf
aas
inc
jmp
fmulp
jbe
inc
les
aaa
inc
fndisi(8087
jl
add
inc
or
je
xchg
pop
sar
cmp
jb
jmp
aaa
dec
push
and
jno
lds
int3
je
pop
imul
pusha
adc
dec
sbb
sbb
mov
and
mov
jb
add
jbe
loopne
add
hlt
call
lock
call
or
add
in
andb
jb
pop
sbb
pop
xchg
mov
mov
test
std
jle
out
mov
lock
nop
cmp
mov
lea
cmpsb
cmpsl
inc
lea
clc
das
je
cmp
jbe
mov
hlt
mov
push
gs
add
divb
ja
icebp
into
adc
jae
test
mov
push
test
adc
cmp
jne
pushf
xchg
add
mov
loopne
lcall
mov
mov
jge
ja
outsl
clc
jbe
mov
jne
adc
mov
cmpb
and
cmp
in
and
outsb
cmp
pop
std
dec
lock
mov
add
ret
push
pusha
mov
adc
or
repnz
mov
ret
push
ss
sbb
or
mov
add
or
stos
lock
push
pop
mov
sub
or
push
sub
and
mov
add
mov
dec
ss
sbb
add
sti
jmp
inc
mov
mov
loopne
ja
jne
cmp
add
fisttpll
mov
push
adc
cmc
mov
inc
push
cmc
mov
adc
xchg
cmp
hlt
xchg
loop
jecxz
jp
rcrl
idivb
movsl
outsb
cmpsl
add
adc
inc
pop
add
cmp
jge
sbb
nop
jg
mov
sbb
cmp
adc
jbe
add
cld
push
ljmp
lock
lcall
inc
mov
nop
push
ss
clc
mov
es
push
mov
mov
xchg
add
and
sbb
pop
pop
sbb
faddl
cmpsb
xor
or
dec
popw
icebp
pop
jcxz
push
add
cmpsb
and
inc
lock
add
rcll
cli
movsb
jp
cmc
cmpsb
dec
ss
insl
adc
push
movl
std
es
mov
mov
mov
adc
divb
or
jle
outsb
es
xor
lock
and
add
fcmovb
push
push
pop
rorb
cmp
add
mov
jno
addb
jle
mov
pop
lock
dec
mov
add
add
jne
push
adc
int3
pmaddwd
add
and
xor
repnz
mov
mov
je
shr
outsb
sbb
call
or
push
push
lods
mov
es
cltd
push
mov
or
push
push
sub
ds
mov
test
pop
lret
and
int
iret
lret
nop
fisttpl
arpl
pop
jecxz
or
in
add
leave
sahf
aam
bound
pop
daa
jle
mov
mov
xchg
cmp
sub
cmp
add
ror
js
flds
add
call
or
mov
xchg
push
insb
outsb
jl
inc
es
push
sahf
push
loopne
jge
jge
fiaddl
xchg
xchg
add
loopne
add
imul
inc
xchg
lcall
mov
add
jge
test
xchg
outsl
jmp
popa
or
xchg
mov
mov
push
int3
sub
sbbb
or
ja
xchg
lret
cmc
dec
inc
sbb
dec
ret
mov
mov
push
jne
jbe
in
loopne
or
outsb
dec
pop
jne
jmp
xor
jg
lcall
sbb
push
cld
loope
ljmp
ret
imul
sbbl
adc
fnstsw
cs
popf
fs
mov
ljmp
jmp
adc
push
loopne
sahf
popa
xchg
arpl
push
loopne
lods
das
gs
ljmp
decl
push
outsl
fcoms
jecxz
pop
cmp
jle
scas
sbb
les
fisubrs
add
out
pusha
popa
inc
out
jle
std
les
xor
in
in
sub
jmp
fbstp
mov
mov
addr16
les
dec
or
out
cmc
xchg
lahf
adc
into
pop
insb
mov
lock
fsub
cmpb
push
or
xchg
movsb
dec
jg
or
testb
out
pop
loopne
sbb
fwait
and
jbe
mov
mov
imul
test
fcomp
mov
pop
push
and
pop
divl
push
xchg
or
add
xor
or
and
cmp
mov
inc
es
dec
test
push
push
push
inc
mov
sarl
jp
dec
cmp
fcoms
and
or
xchg
stos
and
adc
add
sbb
push
test
adc
popf
sbb
adc
mov
rclb
cld
cld
jle
ret
es
sti
insb
dec
push
add
orl
ret
cmp
mov
push
cmp
push
movsb
sub
mov
addr16
jle
xchg
inc
push
aaa
mov
fdivrl
xlat
jmp
inc
add
stos
stos
stos
loopne
and
push
aas
push
or
jp
jo
ficoms
lea
hlt
fisubrl
adc
adc
inc
adc
add
mov
push
enter
inc
push
sbb
xchg
cmp
dec
add
cs
mov
add
xor
jno
cmc
push
fcomip
jmp
xchg
int3
jp
lret
push
xchg
or
int3
rolb
call
add
divb
mov
notb
xchg
adc
ljmp
nop
add
icebp
jbe
mov
or
dec
and
repz
lcall
or
ds
mov
lods
sti
sti
mov
call
add
pop
cmpb
dec
push
dec
pop
sub
or
push
in
add
xor
stos
mulb
fisttpl
push
mov
cmpsl
psubsb
add
daa
dec
lret
and
add
or
lea
push
mov
ds
je
daa
dec
push
jmp
sbb
or
add
repnz
mov
push
sbb
mov
push
lea
push
cmp
shl
dec
mov
push
dec
add
mov
les
stos
cld
ret
pop
call
icebp
cmpsb
test
out
jbe
push
push
adc
outsb
jb
mov
push
pop
jo
outsb
jns
icebp
rcll
sub
fidivrs
ja
ljmp
sbb
test
into
pop
or
sub
xor
xor
and
push
je
das
push
jp
push
push
ja
popw
inc
pusha
xor
mov
mov
call
in
rcrw
mov
int3
jne
cs
lods
lea
mov
pop
nop
xchg
pop
mov
sahf
cmp
je
movzwl
sub
enter
jl
push
insb
push
aam
push
dec
std
cld
js
add
cmpsb
fisttps
lods
inc
jb
shlb
sti
or
add
inc
mulb
sti
push
shr
fisttps
sti
add
icebp
leave
adc
and
mov
cli
ja
add
lea
ret
pop
data16
and
incl
jl
add
divl
jge
std
push
scas
push
mov
pop
test
push
adc
or
outsl
add
mov
xchg
sub
ss
decl
data16
push
je
fiadds
push
adc
stc
pop
test
dec
add
push
mov
add
or
sarb
pusha
and
or
in
mov
xor
enter
adc
adc
dec
or
scas
in
xor
in
frstor
adc
jne
arpl
insl
addl
jmp
mov
into
sbb
adc
in
lret
xchg
add
mov
nop
out
xchg
and
iret
test
out
incl
cmpsl
add
imulb
mov
ja
outsl
or
clc
or
push
lods
lock
jl
imul
cmp
xor
out
fistl
lea
xor
cmp
divl
mov
js
push
lahf
frstor
dec
pusha
scas
sub
push
rcll
ss
enter
sub
mov
mov
push
pop
adc
arpl
and
cld
or
ffreep
add
mov
outsl
mov
jo
ds
lock
xor
pushf
mov
and
lods
push
pushf
testb
cmova
pop
mov
jne
sbb
add
ficomps
fs
jl
loopne
push
push
inc
xchg
js
jno
in
out
ficompl
mov
cs
dec
fsubrl
lods
lods
or
scas
or
les
dec
dec
and
jmp
jg
lds
call
cmp
jmp
xor
subl
adc
or
pop
push
inc
dec
scas
invd
lods
ficoms
js
adcb
loopne
push
push
faddp
call
cmc
filds
mov
xor
popl
sub
inc
bound
ljmp
call
loope
cmc
push
mov
cmp
je
mov
icebp
dec
lea
push
sub
jle
shrb
inc
rcll
pop
pop
mov
lock
roll
aaa
push
mov
out
or
sbb
add
cmp
inc
push
repnz
or
push
aaa
mov
cld
jg
cmpsl
xorb
jne
push
faddl
mov
inc
inc
dec
mov
fstl
push
mov
dec
dec
inc
jp
pop
jg
add
cmpsl
pop
add
add
js
inc
inc
xor
nop
add
es
mov
adc
aaa
mov
cmp
adc
dec
mov
mov
enter
mov
loopne
and
pusha
sub
sahf
pop
loop
sbb
cmpsb
sbb
push
or
pop
sub
gs
subb
sti
testl
orb
repnz
xchg
add
jne
and
mov
neg
in
and
lea
out
push
int
dec
pop
mov
fsubl
adcb
or
js
je
xchg
addr16
mov
cmpsb
daa
add
arpl
xchg
push
rol
cmp
sbb
xchg
push
push
sub
add
push
sahf
mov
add
and
cltd
mov
pop
mov
and
pop
fs
sbb
mov
js
push
fcoml
push
push
lahf
add
cmpsb
les
xor
cmp
xchg
sti
je
int3
cs
pop
aam
les
or
push
push
push
fstpt
mov
ret
test
fsubrs
sbb
pop
dec
outsl
and
jno
dec
mov
lret
push
xchg
je
fiadds
dec
imul
push
or
lcall
hlt
out
xor
mov
jmp
push
sti
push
repnz
cmp
add
ret
mov
xchg
inc
test
or
mov
jmp
push
push
testb
jns
roll
dec
push
movsb
cli
jle
adc
sbb
adcb
lock
push
cmp
push
pop
pop
pusha
xor
orl
adc
call
push
ja
or
test
lret
xchg
mov
mov
mov
add
lcall
push
ret
in
or
add
clc
pop
lods
das
lcall
jne
add
add
or
mov
pop
adc
aam
sub
sub
into
inc
jne
inc
jo
outsl
dec
adc
push
addb
push
add
adc
xor
pop
rcr
ja
cmpb
push
add
add
dec
xorb
lea
dec
test
lock
pop
lcall
mov
jno
ret
addb
or
movsl
cmpb
dec
push
cs
ret
or
js
imul
ret
mov
arpl
das
dec
pop
adc
push
scas
push
decl
cmp
pushf
inc
in
out
orb
push
addb
sub
cmp
mov
xorb
sbb
mov
cli
enter
addr16
cld
add
stos
andb
orb
rclb
jle
sarb
and
or
mov
aad
pop
orb
sub
cld
iret
push
fidivs
lar
rolb
inc
clc
sub
lock
pop
jne
mov
cmp
scas
int3
add
ds
in
sub
cmc
out
push
and
cmp
jne
mov
data16
or
stc
rol
sub
and
jbe
pop
xor
retw
lods
xchg
shrb
xor
std
push
inc
add
adc
pop
and
fisttps
and
gs
out
pop
adc
sar
pop
rol
add
inc
mov
loope
out
scas
stos
test
testb
sti
call
aas
add
cld
fstl
xchg
push
jb
aam
adc
add
xor
adc
cwtl
fidivrl
es
outsb
push
scas
fsubs
pop
fcoml
cwtl
adc
add
dec
inc
loope
fadd
push
push
inc
pop
movsb
rolb
mov
xchg
mov
inc
call
add
adc
mov
les
sbb
or
call
int
dec
mov
inc
sub
in
sar
inc
loop
push
adc
rcl
ret
ret
adc
dec
push
roll
mov
ret
shlb
out
pop
insl
out
xchg
out
insb
shlb
fsub
sub
push
push
cld
mov
adc
adc
push
or
xchg
ret
ret
loopne
inc
cmp
dec
inc
aaa
fidivs
cmp
insb
fildl
jbe
stos
xor
mov
jo
loopne
lock
hlt
mov
sbb
inc
mov
ljmp
mov
jl
pop
and
cwtl
push
push
or
sub
or
or
in
jg
hlt
bound
test
pop
pcmpgtd
add
add
out
xchg
jmp
dec
push
xchg
addl
pop
rolb
sti
cmp
pusha
call
notl
dec
flds
pusha
dec
call
push
cmp
lret
decl
in
or
push
push
je
imul
std
xor
in
loopne
xor
ja
or
aaa
pop
mov
gs
loopne
or
loopne
rcl
incb
out
je
lea
mov
call
or
add
aad
or
add
outsl
sar
loopne
pop
pusha
arpl
sbb
cmp
inc
loop
xchg
mov
pusha
nop
inc
or
loop
pop
and
add
rorb
sbb
mov
loopne
ret
incl
call
add
mov
mov
lahf
push
mov
outsb
decb
mov
pop
rcrb
push
xchg
aad
ljmp
testb
out
jp
push
std
loopne
or
lock
daa
xor
outsl
push
idivb
mov
sbb
mov
cmp
std
decl
jp
loopne
and
mov
xor
ljmp
movsb
xchg
push
idivb
adc
cmc
ret
testb
fsubrp
add
je
test
jbe
adcb
decl
or
inc
push
cmp
sbb
adc
mov
push
push
cs
ljmp
fistps
xor
cwtl
add
imul
or
sub
mov
das
push
add
adc
xor
adc
push
cli
addb
fisttps
jb
and
pusha
scas
mov
std
outsl
push
push
loopne
call
bound
pop
loopne
loop
sub
xchg
out
push
pop
pusha
mov
andb
cmp
cwtl
sbb
mov
mov
les
jmp
jl
clc
nop
add
sbbb
fldl
and
xlat
xor
mov
xor
push
orb
clc
mov
nop
outsb
sti
loopne
mov
testl
fs
cmp
and
lock
loopne
push
icebp
call
lret
push
jp
jle
adc
mov
sbb
pop
cmc
outsb
sbb
cmp
clc
bound
sar
inc
iret
jge
je
lods
nop
sbbb
fmull
addb
mov
pop
mov
pushl
add
inc
cmpsb
clc
adc
popa
mov
aaa
mov
rcrb
and
dec
push
add
or
adc
scas
mov
jp
add
xchg
enter
pop
ret
mov
mov
test
cmp
cld
jg
int3
cmp
cmpl
out
cmp
shrl
addb
jmp
cmp
add
or
jp
add
mov
jmp
push
pop
mov
mov
jne
xchg
and
dec
lea
inc
rolb
aas
movl
fdivr
add
jne
arpl
test
add
mov
push
call
loop
push
add
cld
push
pop
mov
outsl
push
jl
cmp
leave
popa
pop
xchg
insb
vmaxss
push
pop
cld
pop
mov
cmp
add
xor
repz
xor
decl
inc
fdivl
or
cmpl
or
cmp
dec
aam
sbb
cmp
aam
clc
pushl
test
mov
test
xor
or
and
and
push
cltd
mov
jbe
clc
mov
add
mov
and
or
lock
mov
aad
lcall
xor
or
push
xor
pushw
inc
adc
lahf
and
and
push
push
jp
sarb
lods
push
add
cmp
call
inc
sti
aaa
adc
sub
je
faddl
lock
push
lock
mov
jg
or
xor
add
mov
cmp
in
and
shlb
sub
lock
xor
jno
pop
mov
leave
adc
mov
or
adc
or
adc
cli
xlat
adc
cmp
outsb
or
push
jne
cwtl
sbbb
or
std
add
scas
call
xor
imul
jmp
je
inc
sub
xchg
push
sbb
mov
pop
sbbb
ret
inc
add
jb
add
shrb
xor
or
add
push
das
add
ss
loopne
push
mov
adc
xchg
cld
push
imul
jbe
cli
mov
add
enter
inc
inc
or
pop
mov
je
xor
mov
jle
ror
leave
es
add
in
or
stos
add
or
in
iret
repz
push
mov
pushl
call
cmp
pop
cmp
subb
lock
mov
dec
xlat
mov
sub
test
fmul
rcrb
adc
incl
stos
ret
xor
lods
jno
lret
mov
adc
in
push
push
std
lock
mov
idivb
incl
lea
jo
or
jmp
lea
add
mov
xor
sbb
adc
inc
mov
mov
enter
adc
lock
adc
push
orb
fiaddl
ret
out
loop
les
shll
shll
mov
push
add
push
xchg
pushf
push
movsl
cmpsl
pop
or
scas
adc
jle
jl
xchg
pop
mov
add
jmp
pop
dec
std
adc
add
call
call
test
loope
pop
imull
pop
pusha
adc
pop
mov
mov
sub
jo
mov
pop
cmpsb
out
lcall
pusha
sbb
or
lret
dec
iret
xor
adc
add
push
sbb
xor
xchg
xor
mov
or
jl
mov
imul
mov
loope
cli
std
add
jbe
xor
push
out
pop
lock
mov
jle
bound
mov
outsl
pop
cwtl
or
mov
lock
sbb
orl
std
aaa
adc
lcall
xchg
sbb
adc
jb
or
movsb
xor
mov
das
mov
fsubs
in
push
orl
push
adc
aam
jno
jle
pop
pop
dec
xorl
xor
or
jecxz
inc
mov
mov
aaa
and
fimuls
add
jo
inc
mov
mov
sbb
jno
cmpb
add
add
sbb
mov
and
ss
inc
push
xor
sbb
add
mov
and
cmp
jl
jb
jbe
mov
clc
je
inc
add
push
lock
add
and
add
xchg
sbb
add
mov
or
lock
add
call
pop
adc
lock
sbb
leave
clc
mov
pop
pop
lock
mov
adc
sub
and
dec
sahf
test
sbb
jo
sbb
out
out
xor
add
push
loop
nop
ljmp
popa
scas
cs
call
pop
cwtl
les
cmp
xor
mov
dec
and
filds
mov
mov
pop
add
mov
or
inc
call
sub
add
jnp
push
lcall
sbb
mov
fistpll
xor
clc
xor
inc
les
add
sbb
mov
jmp
xchg
clc
mov
cmp
push
pop
lock
xchg
adc
push
xor
loope
add
cmp
mov
and
clc
jno
sbb
add
adc
icebp
cmpsl
filds
push
hlt
jbe
clc
mov
dec
das
shl
or
xor
pop
lock
and
and
fwait
test
xchg
mov
dec
sub
addb
pop
or
fcomps
pop
es
mov
mov
leave
ret
sbbb
jb
mov
andb
inc
pushf
in
add
mov
pop
or
js
out
mov
lret
inc
adc
add
cmp
rclb
push
mov
mov
lahf
or
and
rcrl
js
insb
ficomps
pushl
push
cmp
mov
add
ficomps
jo
call
dec
mov
sub
jo
inc
xor
pop
sbb
mov
pop
push
lar
push
cltd
pop
cmpsl
outsb
pushl
pop
mov
test
call
iret
stc
push
hlt
mov
lock
cwtl
push
mov
jae
pushl
pop
add
ss
pop
jo
hlt
mov
jo
sahf
cmp
pop
adc
decl
xor
cwtl
or
add
pop
pop
lods
jb
lock
into
repnz
sbb
and
push
push
mov
incl
loopne
aas
cwtl
push
mov
jo
je
jo
adc
dec
aad
or
pop
mov
xor
jno
push
or
push
nop
lock
fidivs
pop
adc
jl
sbb
andb
cmpsb
je
xor
jmp
mov
outsl
pop
cmp
and
push
and
lock
jb
pop
jle
jmp
ja
outsb
push
and
push
pop
addr16
adc
push
clc
sub
jae
push
xchg
and
jne
mov
inc
mov
lds
push
cli
jmp
jnp
sub
mov
pop
push
test
mov
ss
sub
loop
add
js
orl
push
cmp
and
xchg
call
and
push
add
mov
xor
aaa
mov
or
xor
cmp
jl
mov
mov
je
and
jb
push
cmp
outsl
pop
add
push
movsl
pop
jne
mov
cli
or
aad
pop
js
gs
hlt
inc
sub
shll
cmp
push
and
clc
mov
mov
inc
lea
push
xchg
adc
jae
outsb
sub
je
cwtl
pop
mov
div
mov
pop
mov
call
push
or
adcb
mov
das
xchg
out
dec
sub
add
add
jae
out
jne
loope
mov
mov
jle
add
add
or
out
add
pop
sub
fcomi
lret
es
add
ljmp
clc
xchg
pushl
add
xchg
lahf
push
mov
orb
xchg
mov
outsl
incl
dec
ficomps
loopne
mov
pop
loopne
and
xchg
outsb
fdivr
push
cltd
fimull
sbb
into
and
data16
call
lock
out
test
pushf
xor
or
into
add
in
add
cmp
cltd
dec
inc
add
jnp
mov
jge
or
les
and
cmpsb
inc
sarb
iret
fwait
std
addr16
in
out
add
call
push
pop
xchg
ds
inc
cmp
push
andb
sub
push
fisubrl
pusha
mov
sahf
jg
loop
sub
adc
xchg
sahf
pop
jmp
mov
xchg
inc
call
mov
sbb
in
cmp
decl
cmpsb
ds
mov
sub
lcall
and
inc
or
mov
adc
sub
into
inc
outsb
sahf
sbb
lock
call
or
arpl
sarl
xchg
dec
testb
cmc
je
pop
pop
or
jmp
mov
pop
xor
xchg
test
lock
xor
std
mov
push
ljmp
lcall
iret
iret
cmp
inc
subl
push
add
push
pop
add
push
cli
test
jnp
fs
jp
pop
stos
decl
pop
lea
test
pop
push
inc
fcomi
les
ret
adc
pop
test
mov
jg
xchg
lock
xor
ret
add
nop
jp
adc
pusha
cli
adc
fcmovnb
or
add
pop
mov
dec
add
ljmp
dec
add
adc
push
pushf
ljmp
adc
sub
arpl
cmp
test
das
call
in
aad
cmpl
sti
outsl
ljmp
incl
push
adc
loope
dec
loop
imul
cmp
mov
add
xchg
sbb
push
in
pop
mov
out
mov
aaa
insb
shl
xchg
ret
pop
adcb
add
rolb
add
insb
popa
mov
sbb
in
iret
xchg
out
adcb
xchg
out
and
or
into
in
rcrl
aam
sub
mov
bound
mov
xchg
out
add
sub
lret
sbb
dec
cwtl
ret
pmulhuw
fdivs
pop
loopne
daa
imul
xchg
pop
mov
or
cmpb
cmp
push
dec
sbb
add
in
leave
imul
jl
add
sbb
out
lods
out
pop
dec
repnz
pop
mov
push
mov
ret
add
insb
push
adc
push
fistl
int3
mov
pop
mov
aaa
lods
shl
add
mov
loop
cmp
mov
push
mov
mov
sbb
inc
rcl
xchg
je
outsb
mov
mov
push
lea
popa
add
or
jp
add
mov
xchg
inc
call
loope
js
xchg
movsb
and
loopne
adc
scas
jl
hlt
outsb
mov
test
push
out
fwait
and
pushf
dec
mov
sbb
inc
add
jb
arpl
pop
sbbl
sub
loop
shl
psubb
inc
fsubrp
insl
pusha
enter
sbbb
inc
and
mov
sarb
xor
je
jg
popa
mov
mov
loopne
test
mov
or
and
aaa
add
movsb
add
aam
lock
or
push
jbe
out
xor
pop
push
dec
mov
js
adc
xchg
fs
and
inc
sti
adc
jb
movsb
notb
sub
arpl
xchg
es
ljmp
lea
loope
or
ds
mov
jmp
int3
ficoml
mov
push
push
fsubrs
push
mov
ret
push
nop
adc
test
xchg
sub
push
test
aaa
jl
jnp
add
dec
or
stc
loopne
pusha
sahf
pushl
cmp
mov
pop
cmp
out
adc
div
mov
call
incl
loopne
orl
std
adc
add
sub
ljmp
or
fsubl
xor
out
int3
add
fsts
cmp
cmpsb
push
fistps
mov
push
push
or
orl
popa
pcmpeqw
shlb
pusha
int3
clc
add
adcl
and
in
cld
or
sarb
mov
xchg
mov
pop
xchg
jmp
popa
ret
and
inc
pop
and
sub
mov
call
cltd
or
add
xor
cmp
push
push
sbb
dec
adc
setp
sbb
sub
out
jo
mov
adcb
jmp
or
mulb
add
in
addb
push
mov
pop
sub
adc
jb
adc
mov
int3
js
mov
test
aaa
loopne
add
pop
loopne
lcall
push
sub
mov
jge
mov
cld
pusha
es
jecxz
push
pushw
test
pusha
add
es
enter
sbb
inc
repnz
adc
add
push
loopne
add
and
enter
jp
pop
lcall
loopne
push
ljmp
pop
or
comiss
adc
call
mov
popa
mov
outsb
ret
test
stos
enter
adc
mov
mov
push
inc
push
adc
decl
jb
mov
or
loopw
cmp
xor
pop
hlt
cltd
mov
or
push
ljmp
mov
jo
sbb
cmp
je
jne
sbb
rclb
clc
jmp
pop
cmp
loopne
adc
push
je
sub
mov
lods
jbe
daa
mov
inc
hlt
das
clc
fistpll
mov
and
movzwl
cwtl
pushl
adc
test
movsb
jbe
loopne
loope
inc
jecxz
cmp
dec
push
outsl
pop
mov
pusha
pusha
jnp
push
data16
cmp
sub
adc
adc
sahf
add
cmp
call
ret
pop
adc
pop
hlt
jmp
xchg
or
mov
andb
arpl
jbe
push
hlt
jbe
push
sbb
mov
es
sub
insb
call
add
hlt
dec
jne
jbe
inc
std
lds
hlt
mov
cli
jmp
jo
jmp
mov
mov
les
ljmp
ret
push
jl
adc
cmp
std
jno
mov
jg
movsb
adc
push
rclb
push
pop
ljmp
adc
arpl
xor
inc
pop
jo
dec
dec
jecxz
adc
bnd
mov
shrb
cmc
sub
sub
pop
add
add
cs
xchg
add
je,pt
aad
ljmp
mov
sub
mov
sub
rcr
adc
js
xor
out
or
fadds
inc
jl
rclb
ss
mov
adc
xor
add
adc
test
xor
xor
clc
sbb
dec
add
jno
lock
icebp
push
clc
dec
cmp
mov
mov
mov
cmp
iret
or
mov
clc
sub
fwait
mov
jle
call
clc
notb
scas
or
bswap
add
or
add
mov
mov
insb
in
adc
sbb
call
jo
mov
xorb
pop
mov
mov
pop
push
xchg
and
sti
outsb
outsl
or
push
pop
jno
or
hlt
jne
js
push
mov
xor
sbb
mov
les
xchg
lock
mov
adc
lods
es
jmp
mov
push
mov
or
inc
scas
push
push
movb
jno
stos
rcrl
loopne
lock
jmp
cld
add
mov
or
pshufw
sahf
xorb
mov
cmp
ljmp
adc
cmp
mov
xchg
add
jo
call
data16
adc
add
and
jge
test
fists
jp
sbb
shlb
and
xor
push
lret
mov
mov
pop
call
pop
dec
loop
add
and
mov
lock
mov
insb
pop
hlt
push
cmp
es
sub
std
decl
stos
lea
cmpb
mov
cmp
mov
cmp
jg
cmp
cmp
jne
push
pop
jno
pop
orb
clc
scas
pop
mov
xor
push
call
ss
mov
loop
and
jne
push
mov
inc
loopne
jo
jne
add
into
adc
and
mov
out
inc
mov
mov
mov
or
xor
pushf
or
adcb
mov
add
cmp
out
add
add
jmp
cmp
movsl
test
iret
rolb
mov
mov
aam
xor
add
pop
cmp
add
jo
jmp
cmp
sub
mov
testl
push
mov
jmp
ljmp
jle
mov
dec
and
push
rorb
jne
and
xor
mov
orb
inc
lods
jo
mov
sub
mov
jmp
push
mov
inc
jne
sub
xor
sub
scas
mov
sbb
add
and
in
and
rolb
iret
inc
lock
adc
repnz
or
sbb
cli
add
cld
into
or
push
pushfw
inc
test
xor
sub
xor
jo
sbb
loopne
jl
jne
jmp
outsb
dec
push
xor
hlt
cltd
cmp
aad
je
jg
in
push
repz
call
jl
es
or
test
mov
push
mov
mov
jg
push
mov
js
jecxz
sar
jne
jbe
jge
jmp
push
xor
into
call
push
rcrb
pusha
mov
add
pushl
or
adc
les
xlat
cmp
sub
adc
add
outsb
ret
in
fldt
or
decb
push
jo
cmp
stos
and
sti
insl
sbb
mov
and
sbb
aaa
cmp
and
jo
decl
xorl
lods
fisttps
arpl
jo
cmpsb
call
mov
sub
aas
mulb
mov
mov
adc
dec
test
adc
fwait
cld
das
and
sarl
je,pn
sbb
pop
call
and
mov
je
pop
mov
stos
pop
stos
push
inc
je
aaa
and
cwtl
hlt
je
push
cld
push
xorb
xchg
add
inc
inc
std
lret
sahf
ss
clc
push
push
dec
jmp
mov
cmp
out
add
repz
adcb
cmp
pop
jmp
clc
je
mov
jmp
cmpl
mov
mov
mov
mov
push
lock
mov
jg
pop
mov
lea
inc
test
mov
push
add
and
jb
sub
xor
jg
pop
out
xor
repz
hlt
fdiv
popa
fisubs
test
rolb
pop
add
pop
loopne
iret
xor
lods
sbb
sub
outsl
outsb
test
inc
clc
and
inc
roll
mov
or
decl
xchg
push
dec
lods
push
push
icebp
push
adc
add
or
mull
mov
stos
mov
movsb
clc
icebp
pop
or
test
mov
cmp
pop
push
test
cmpsl
mov
push
testl
and
push
mov
ret
cmpsb
xor
lock
jo
jge
jle
push
xchg
movsb
stos
movsl
lea
mov
js
jo
jb
and
cmp
jne
test
scas
or
ret
mov
idiv
jbe
je
push
aaa
xchg
xor
xor
clc
jb
or
jno
mov
xor
testl
lods
push
xor
call
xor
call
push
shl
out
or
push
xchg
or
or
loopne
push
jb
insb
lock
adc
lock
add
dec
mov
lret
lahf
sbb
repnz
inc
insb
sbb
mov
inc
mov
mov
cmp
jmp
push
or
add
cmp
cwtl
insl
jp
mov
rolb
shlb
faddl
xchg
pusha
pushl
sarl
or
mov
jns
mov
and
cmp
inc
es
jo
add
lidtl
nop
cs
and
into
sti
faddl
and
pusha
or
mov
loopne
dec
aas
call
sbb
ljmp
insb
adc
out
insl
pop
cmp
push
fisttps
int3
idivb
fimuls
pop
and
pop
maskmovq
idivl
ret
cmp
cmpsb
or
testb
pop
cli
ljmp
xlat
adc
mov
sbb
inc
testl
fstpt
outsl
fwait
cmp
or
sbb
loope
in
dec
or
enter
call
jg
out
inc
pop
ret
xchg
add
arpl
imul
je
call
int
dec
inc
sub
mov
andl
je
or
sbb
stos
test
sub
add
inc
or
ljmp
pop
adc
inc
sti
mov
movb
push
rcrb
push
es
shlb
aaa
push
imul
je
aam
das
je
stos
pop
icebp
and
jecxz
xchg
cmp
andb
inc
adc
out
icebp
test
inc
out
fcomps
call
pop
pushf
mov
mov
push
pop
pushf
mov
cmpsb
es
lcall
push
arpl
lea
test
popf
les
test
sbbl
and
mov
adc
cmp
sub
scas
test
pop
or
adc
mov
cmp
jo
or
sbb
cs
and
jl
stos
pop
mov
mov
dec
adc
mov
add
sbb
push
fmull
jae
mov
cld
repnz
es
jno
imulb
lret
inc
mov
and
adc
or
cmc
gs
inc
dec
sub
push
call
inc
insl
ljmp
jle
pop
mov
or
xor
pushf
or
mov
add
or
fistpl
ret
add
push
or
mov
stos
or
or
or
out
loopne
and
fildl
lods
add
cli
divl
mov
out
jbe
lock
fbstp
cmp
mov
stos
push
or
int
mov
and
add
cld
sarl
push
push
pop
sub
inc
push
jbe
cmp
ja
jp
cmp
xor
outsl
clc
jbe
mov
inc
in
lds
pop
sti
jmp
xchg
dec
je
mov
inc
icebp
rclb
arpl
xchg
xchg
adc
cwtl
mov
out
sbb
pop
gs
jbe
mov
push
mov
push
push
inc
push
push
rorl
dec
testb
orl
sbb
hlt
fmull
or
push
loopne
fidivrl
cmpsb
in
js
pop
dec
cmp
sub
xor
cmc
fldl
ja
out
call
out
adc
call
inc
dec
cmp
psubsb
xor
mov
push
cmpsb
adc
push
shlb
pop
adc
push
bound
push
push
mov
jecxz
cmp
movl
jmp
xchg
jbe
add
mov
psadbw
mov
push
or
dec
push
shrl
mov
add
adc
push
sub
daa
xchg
and
mov
cli
sub
das
or
inc
push
lcall
fisttpll
add
sbbl
sbb
push
cmp
cmpsl
aas
dec
add
sbb
xchg
push
ds
pop
cs
out
xchg
or
push
addl
hlt
pop
pushf
test
lea
jbe
fdivs
mov
lea
int3
int3
sub
jl
inc
fsub
loopne
loopne
sbb
cmp
inc
rcll
insb
push
mov
mov
divl
fmulp
imull
add
add
call
push
lea
mov
and
std
xorl
mov
or
int3
xor
ficompl
cmp
push
push
ret
in
pop
adc
icebp
jmp
sub
jg
fwait
jle
adc
and
mov
shlb
iret
cmp
gs
sub
sub
lea
or
ret
aas
inc
cld
adc
add
add
outsl
push
call
sub
mov
into
dec
sbb
out
outsl
imul
or
push
cmovs
mov
data16
data16
daa
push
xor
pop
adc
icebp
rolb
push
fiadds
cli
xor
repz
add
xor
and
je
mov
mov
insl
nop
push
mov
mov
pop
rorl
je
sbb
int3
aas
in
pop
fsubl
xor
fiadds
das
loop
addl
pop
dec
cmp
pushf
inc
push
xchg
mov
out
bound
add
ljmp
scas
call
sarl
push
and
xchg
sarb
nop
call
ja
adc
inc
mov
aaa
xor
ss
push
fimuls
adc
jbe
push
push
inc
inc
xor
xor
arpl
add
adc
or
pusha
das
mov
or
xchg
dec
clc
inc
ret
jno
jne
int
into
jne
cmpl
je
js
test
sbb
sub
push
push
or
and
pusha
or
pop
popa
dec
push
inc
inc
push
and
inc
jp
dec
mov
sub
or
jne
push
mov
es
push
bound
mov
stos
dec
inc
lods
pop
sub
push
or
sahf
push
outsb
movsb
iret
adc
cmp
cmp
mov
scas
xchg
lods
adc
cmc
or
out
call
pop
int3
and
inc
lea
pop
xorb
add
decb
pop
mov
sahf
xor
out
dec
loope
fs
dec
je
imulb
nop
call
stc
jne
add
pop
cmp
into
mov
and
add
daa
and
fiaddl
movsl
shrb
cmp
nop
adc
xchg
jp
call
sub
stc
push
call
movl
movsb
mov
pop
or
cmp
jbe
mov
shll
or
pop
movsb
inc
cmp
out
and
pusha
lahf
insb
sahf
cmp
ret
out
xor
cmp
jbe
push
push
sti
mov
popa
subl
js
or
lretw
mov
add
pop
pop
xchg
ljmp
jmp
cwtl
movsl
decl
cwtl
inc
mov
pop
mov
je
inc
bound
imul
adc
insb
pop
cmp
and
outsb
mov
ret
or
add
scas
mov
cmpsl
push
call
out
lcall
or
adc
inc
incl
or
or
push
add
or
adc
or
lcall
sbb
sub
jl
inc
jb
push
pop
je
jecxz
outsl
push
mov
cwtl
adc
or
cmp
jb
ds
std
adc
mov
je
addb
data16
leave
mov
jmp
sbb
fistpl
and
xor
jae
mov
loopne
sbb
notb
mov
adc
decl
notl
pop
iret
push
adc
fdivs
add
fisubrs
out
shlb
xchg
add
sarl
adc
repnz
jl
adc
mov
cwtl
notb
cli
sbb
mov
andl
aam
xchg
mov
dec
mov
or
fcomi
cmpb
pop
sbb
or
iret
sub
cmpsb
cmp
sbb
cs
sar
int
pop
jmp
jne
mov
mov
imul
sub
add
fwait
int
sub
mov
sbb
mov
aam
adc
mulb
mov
add
mov
mov
das
jecxz
mov
or
iret
bound
add
cmc
shlb
mov
dec
adc
push
fcom
in
stos
adc
mov
cmp
pop
or
fcoml
adc
cmp
xchg
loopne
mov
or
ja
cmp
clc
rcll
xor
cli
pop
xchg
lock
jge
lods
in
xchg
hlt
sarb
adc
cmp
les
jge
clc
mov
sbb
stc
ss
jl
dec
fwait
push
lods
xchg
fiaddl
dec
call
jg
hlt
mov
pop
add
clc
cld
inc
jmp
jl
loopne
test
add
jbe
xor
adc
pusha
pop
mov
scas
push
in
call
inc
scas
fdivrs
lock
ss
flds
adc
sbb
in
or
cs
jmp
push
aam
loopne
andb
mov
jb
add
sub
mov
incl
cmpb
das
fadds
xor
test
add
clc
aas
cld
outsl
mov
loope
or
push
jne
rcrb
push
decl
xor
aaa
or
add
xchg
fcmovu
bnd
sarb
cmp
inc
sahf
loopne
pop
add
push
push
jno
xchg
and
push
sbbl
jmp
sahf
mov
push
xor
dec
aam
sbb
outsb
lock
or
dec
rolb
in
sahf
and
add
faddl
out
movsb
push
es
lods
mov
lcall
mov
outsb
imul
ror
sbb
jmp
shll
jo
dec
sbb
push
shl
outsl
add
adc
loopne
add
add
insb
sub
test
jo
dec
mov
jbe
lea
aam
push
es
scas
ss
fwait
call
adc
shl
nop
cs
test
pop
sti
inc
shrb
pop
sahf
or
data16
call
mov
add
xor
popf
loop
push
in
add
sbb
lds
ret
mov
or
push
xchg
andb
call
lea
mov
mov
push
movb
pop
aam
cld
and
cmpsb
clc
incb
push
jne
mov
mov
and
push
sbb
scas
push
and
add
js
mov
dec
add
jo
pop
mov
inc
pop
mov
add
inc
fsubs
mov
cmp
aam
in
ss
cmp
adc
es
fisttpl
jmp
jl
add
sub
es
std
inc
mov
sbb
imul
rorb
ret
in
jle
pusha
stos
sti
je
repz
pop
ja
push
jle
mov
inc
mov
testl
add
push
rol
mov
or
mov
inc
jb
adc
ss
call
sub
or
idivb
aaa
adc
out
std
ja
call
xor
mov
sti
adc
lret
addl
mov
fucompp
push
adc
push
jnp
call
call
aad
pop
ret
push
leave
ret
jl
mov
data16
xor
xchg
stos
scas
sub
push
pop
sub
push
jmp
cmpsl
or
enter
cltd
test
fimuls
adc
shlb
push
inc
or
data16
fisubrl
and
pop
mov
aam
jns
in
pop
lock
xchg
inc
mov
cmp
dec
mov
lock
out
frstor
mov
cwtl
adcb
icebp
mov
stc
mov
or
outsb
push
adc
mov
push
add
sbb
cwtl
sti
das
into
divb
pop
pushf
jne
jl
xchg
call
aam
data16
sbb
data16
lods
pushf
call
daa
repnz
je
dec
mov
jbe
stos
in
jecxz
dec
std
addb
inc
out
shrb
testl
sub
mov
or
mov
add
jne
push
insl
int3
rcrb
enter
dec
aas
aaa
jne
pop
lods
lea
jo
inc
add
stos
in
xor
inc
scas
sbb
push
daa
xchg
clc
jecxz
adc
or
or
test
je
sbbb
mov
xor
push
sbb
in
scas
clc
decb
clc
mov
or
and
cld
cmp
mov
sar
aas
cmp
add
add
lods
inc
inc
lock
bound
fdivl
pop
mov
cmc
inc
scas
add
sbb
test
inc
push
jl
cwtl
adc
lret
jp
cli
int3
nop
push
add
dec
dec
mov
gs
mov
aaa
push
es
jmp
inc
rorb
scas
inc
js
shl
mov
xor
pop
inc
pop
popa
cmp
cmpsb
inc
clc
push
sbb
cwtl
shlb
jbe
lcall
fdivrs
test
dec
in
push
insb
xor
fmull
call
dec
test
lods
clc
cs
stos
loop
dec
mov
jb
test
enter
mov
xlat
les
jp
push
pop
add
pop
push
xchg
mov
int3
out
push
push
lock
mov
jne
inc
call
add
mov
or
inc
mov
push
inc
dec
data16
or
sbb
add
sbb
mov
mov
in
cmp
test
inc
mov
dec
jecxz
jmp
push
loopne
scas
jg
dec
xor
xchg
ljmp
lea
roll
call
ljmp
std
ljmp
das
xor
or
std
jbe
cltd
mov
mov
mov
or
ja
sahf
arpl
xchg
fneni(8087
xor
or
mov
rorb
push
cmp
fcoms
dec
mov
aam
add
push
repnz
fmuls
shlb
sbb
and
push
mov
call
fistl
hlt
cmp
mov
ljmp
out
pop
cmp
adc
and
in
stos
lahf
dec
rorb
loopne
pop
loopne
sub
add
mov
push
cs
lea
pushf
xor
inc
dec
sbbb
fucomi
outsl
or
cmp
jne
push
cld
je
pop
out
jge
lret
mov
jne
cld
or
sub
sbb
in
push
hlt
dec
xor
orl
xor
mov
out
sbb
fistps
lock
scas
push
cld
add
push
sub
sub
fdivrs
call
push
cltd
sub
lods
pshufw
test
and
es
clc
rcll
add
lret
jb
pop
pop
add
aaa
cld
sbb
dec
jae
add
inc
pop
mov
push
jmp
sbb
addl
or
cmp
xchg
inc
cmp
test
clc
ljmp
cmp
pop
push
sub
sub
inc
scas
adc
int3
and
pop
subb
adc
push
cmp
adc
movl
je
mov
inc
mulb
cli
out
data16
add
or
add
jbe
push
call
push
adc
sub
push
test
add
xchg
movsl
ret
cs
push
or
mov
push
fdivrp
hlt
dec
enter
or
mov
pop
cmpsl
sub
loope
adc
inc
repz
daa
add
and
xchg
inc
pop
popa
xchg
enter
fistpl
adcb
cwtl
sub
ror
adc
push
mov
dec
loopne
mov
out
sbb
daa
lret
jae
xchg
in
mov
fmull
aad
sbb
ret
aaa
ret
jbe
sarb
push
fmuls
sub
push
push
orb
aad
inc
je
jg
call
ljmp
add
mov
shll
inc
loope
pop
add
sti
adc
aaa
add
adc
cli
stos
hlt
mov
mov
je
push
insb
jge
mov
decb
shr
ja
dec
push
mov
push
push
xor
dec
in
pop
and
shlb
push
pop
lds
ss
aad
leave
mov
repz
mov
pop
mov
or
push
call
nop
sub
int3
dec
push
loopne
imul
pop
mov
fldl
rcrl
mov
add
int3
fstpt
pop
jmp
and
adcb
int3
push
mov
loop
add
mov
add
xor
cmp
jb
mov
mov
cld
xchg
sub
mov
jae
jne
mov
mov
jg
int
mov
call
mov
inc
xor
mov
cmp
mov
mov
ja
lret
shl
xchg
icebp
ret
sub
je
pop
pop
sub
xor
cli
mov
dec
or
dec
push
add
mov
cmp
xlat
mov
loope
hlt
dec
mov
push
add
cmp
add
and
cmc
stos
imulb
enter
add
sbb
fcoml
jne
pop
cs
mov
in
enter
mov
pop
lock
mov
jbe
inc
ret
push
or
push
push
aaa
nop
jg
data16
popa
or
out
cli
int3
sub
stos
lock
pusha
add
fs
add
mov
pop
cltd
pop
jae
xchg
icebp
mov
push
ss
jne
lock
xchg
ret
dec
test
les
imul
lret
pop
push
into
mov
jb
clc
jmp
scas
push
mov
iret
jmp
pop
pop
je
pop
clc
push
movb
inc
fsubrp
add
xchg
call
cmp
mov
fcmovb
adc
imul
cmp
ret
push
sub
aas
jae
mov
aam
add
jne
add
pop
add
dec
jb
mov
jb
add
repz
push
test
xchg
mov
sar
cmp
mov
push
and
mov
add
xor
xor
loopne
call
jb
cmp
lret
mov
jmp
jb
inc
ror
enter
testb
incl
mov
je
adc
lsl
mov
ds
mov
add
pop
pop
jns
shr
idiv
inc
inc
imul
add
hlt
dec
push
sahf
mov
inc
or
sub
cmc
xor
js
data16
add
or
mov
dec
add
jecxz
fcoml
xchg
sbb
pop
fldlg2
push
fmull
loopne
ds
inc
loope
data16
stos
in
sarl
ja
sahf
xchg
lock
and
scas
mov
shr
or
jb
fdiv
ss
call
into
inc
mov
lods
inc
ret
xchg
dec
push
push
stos
test
outsb
jle
bound
data16
test
imul
sbb
mov
xor
out
push
push
pop
jbe
stos
sub
push
push
push
sub
fsubrl
test
xchg
call
add
repnz
inc
int3
jmp
fdivr
or
adc
mov
mov
cld
ja
fbstp
add
jmp
mov
cmp
sbb
dec
rcrl
mov
mov
push
call
es
jnp
or
lea
xor
xor
inc
adc
cmp
mov
or
icebp
or
add
jnp
pushl
mov
jecxz
leave
jmp
shr
ds
je
cmp
add
sub
insb
pop
or
iret
in
or
inc
dec
xchg
add
and
push
cmpps
shlb
xchg
clc
jbe
mov
lock
xchg
push
cmc
push
inc
decb
push
scas
cli
dec
sub
cmp
push
inc
mov
pop
add
or
dec
mov
mov
loopne
and
sub
bound
jne
shrb
repz
je
and
outsb
jecxz
sti
mov
or
inc
lea
ja
push
inc
and
inc
and
cltd
int
mov
xchg
shlb
add
mov
dec
insb
incb
cmp
pop
cmp
xchg
mov
mov
push
sbb
and
loopne
jnp
push
loopne
lea
and
pop
aam
aas
dec
xor
sub
clc
pop
les
icebp
stc
jns
hlt
pop
mov
adc
add
out
sbb
push
pop
scas
daa
sub
incb
jle
xor
or
or
mov
mov
add
fidivl
jbe
push
xchg
rorb
add
xor
sbb
sti
push
outsl
adc
xor
push
and
jle
adc
in
push
call
pop
push
cwtl
or
dec
call
out
ljmp
stc
call
push
pop
jecxz
cmp
mov
lcall
dec
cmc
shlb
mov
shr
hlt
rorl
loop,pt
or
jb
add
cld
in
loope
add
add
push
or
push
icebp
enter
sub
mov
rorl
lahf
popa
jl
dec
hlt
xor
xchg
push
mov
push
addb
mov
xchg
outsb
push
ret
clc
ja
ljmp
fs
call
adc
jbe
pop
push
jb
enter
pop
push
insl
ret
das
int
dec
inc
xor
mov
inc
int3
call
xor
test
mov
mov
enter
call
lea
push
jb
std
add
dec
jle
into
data16
fiadds
call
inc
push
in
jl
mov
sti
mov
sub
adc
mov
mov
cmpsb
and
das
iret
loopne
negl
daa
rol
loop
cmpsb
hlt
lret
push
out
mov
fcoms
sub
push
push
inc
mov
push
int3
and
lds
outsb
dec
vunpckhps
scas
or
test
or
hlt
stc
das
rclb
inc
pop
orb
loop
add
push
xor
or
call
call
push
outsl
pop
inc
in
imul
or
mov
mov
rcll
push
dec
insb
dec
dec
or
cltd
and
mov
mov
mov
or
pusha
ss
adc
push
add
shlb
adc
or
aad
inc
mov
out
lea
push
mov
scas
fildll
mov
inc
cmpsb
xchg
inc
test
push
loopne
xchg
pushf
call
mov
adc
out
and
sbb
inc
fsubr
xchg
loopne
push
push
aaa
push
adc
ja
rcrl
sbb
pushf
rcrb
mov
jo
aas
mov
push
add
fimuls
test
xchg
dec
pop
jnp
fcomps
shr
adc
shll
cld
pop
in
lret
test
test
clc
inc
js
dec
cmp
mov
dec
iret
je
push
adc
sub
push
sbb
adc
or
movsb
mov
ljmp
or
sub
cmpw
dec
cltd
add
fwait
or
jbe
cwtl
inc
enter
lahf
scas
paddq
bound
cli
clc
push
adc
sbb
bound
fadds
jne
sarb
xor
cmp
and
inc
negb
in
orl
sbb
rcll
mov
and
scas
ljmp
sub
inc
push
ljmp
add
shl
pop
mov
xor
dec
mov
xchg
and
xchg
rcll
mov
insl
cmp
sbb
jp
pop
adc
sub
xor
js
sti
pusha
add
xor
test
mov
and
ljmp
ret
mov
sub
popa
sub
inc
pop
sub
fucom
lock
bound
mov
loop
into
es
sbbl
scas
or
imul
pop
idivl
mov
xor
add
inc
push
or
repz
call
mov
decl
call
cmp
mov
les
insb
call
add
fdivs
lock
xchg
icebp
decl
jg
add
xor
xor
cmp
aad
push
sbb
dec
jl
push
cmpl
jmp
jbe
aaa
fcmovne
leave
and
movzbl
or
mov
mov
int
sar
and
leave
inc
aaa
fwait
in
int
or
lock
mov
ds
or
fistl
hlt
cli
dec
pcmpgtb
fildl
cmp
xor
data16
call
and
add
hlt
lock
xor
js
into
incl
mov
sbb
out
push
mulb
and
lock
dec
jmp
repz
ljmp
xor
adc
shlb
sbb
lret
jecxz
adc
notb
xchg
or
xchg
pop
mov
jmp
mov
mov
aaa
ljmp
outsb
adc
jmp
int
testl
add
push
das
xor
lret
shl
adcb
sarl
fsubs
sbb
push
jmp
aad
mov
sbb
aas
push
addb
inc
lock
inc
fisubl
in
xorb
jno
sub
mov
aaa
sbb
inc
xchg
enter
push
stos
mov
test
mov
fmuls
add
adc
das
pop
rcl
dec
add
sbb
push
sbbb
arpl
sarl
rcll
roll
cltd
jg
loopne
jb
dec
clc
ds
lea
mov
sbbl
jns
popf
scas
or
leave
mov
popa
insl
add
xchg
mov
mov
push
inc
loop
mov
add
push
je
mov
ds
pop
and
or
fucomi
cmp
or
push
and
or
mov
mov
jne
pushf
pop
or
jne
mov
push
stos
add
sub
dec
dec
jb
jmp
scas
je
dec
mov
scas
mov
loope
je
and
hlt
into
sahf
out
jp
mov
push
mov
into
or
out
xchg
aad
shlb
jl
sbb
mov
sti
pop
add
push
lods
or
inc
sbb
popa
daa
scas
lret
push
test
push
push
sbb
fsqrt
pop
pop
and
out
shlb
sbb
lahf
adc
pop
je
xchg
mov
mov
dec
sub
mov
or
idivb
jl
inc
mov
cmpsb
out
jp
scas
rcr
mov
lea
and
insb
cmp
push
inc
mov
pop
add
mov
aas
add
call
pop
pop
neg
lcall
adc
call
or
call
lahf
jp
push
or
push
jb
push
cmp
pusha
loope
daa
inc
pop
adc
cmp
mov
inc
mov
xor
dec
and
mov
inc
adc
rcl
sub
push
xor
xorl
test
mov
inc
repnz
xchg
jle
mov
xchg
push
fistpll
je
inc
divl
addl
je
jl
or
mov
cmpb
ret
add
or
xchg
ljmp
mov
bound
ss
adc
fstps
cmp
fsubs
or
dec
mov
sbb
adcb
lcall
adc
or
mov
sub
add
dec
mov
add
adc
mov
bnd
std
xor
out
jmp
daa
aas
cmpl
test
movsl
jge
int
and
sub
push
add
xor
aam
es
jg
pop
cmp
and
mov
or
pop
cld
mov
subb
ds
test
push
push
loop
jl
je
add
or
or
xor
fistpl
mov
and
inc
jnp
pop
add
push
lahf
das
sub
dec
inc
aaa
test
add
icebp
daa
stos
loop
mov
call
and
cwtl
stos
pop
mov
push
xor
adc
mov
jb
adc
lea
in
jne
pop
dec
test
mov
push
enter
cmp
dec
or
incl
lea
xchg
inc
mov
xchg
or
or
cmp
add
sub
sub
pop
push
mov
das
mov
mov
or
push
cltd
sarb
enter
es
mov
mov
pushaw
pop
jmp
jmp
shl
aas
mov
xor
lock
ljmp
pop
push
pop
pop
mov
add
push
aam
add
pop
sub
mov
push
test
push
xor
sbb
push
fdivrl
dec
pop
jg
je
cs
fcomps
dec
jp
add
sbb
loop
xchg
jb
mov
ja
push
lea
leave
mov
mov
sub
pop
jle
push
pop
push
jp
hlt
or
icebp
add
popf
or
and
or
movsb
int3
jne
mov
mov
adc
movsl
mov
dec
call
jbe
mov
xor
add
and
cmpsl
push
insb
test
scas
inc
or
incb
push
or
decb
push
inc
push
pop
or
test
fdivr
lahf
les
mov
push
adc
ss
dec
je
mov
dec
push
jbe
imul
out
xchg
push
push
aam
add
jne
call
push
cmpb
add
pop
xchg
enter
xchg
loope
sbb
lea
cld
int3
scas
call
sub
mov
fdivs
mov
sbb
std
push
hlt
imull
jp
mov
in
sti
jb
or
stos
push
or
ljmp
jbe
mov
xor
adc
ret
pop
fsubr
xor
mov
fidivs
push
pop
je
jbe
insl
inc
add
mov
inc
sti
mov
stos
pusha
inc
dec
mov
xchg
push
adc
sub
push
pop
decb
sbb
cltd
mov
sti
xchg
test
jne
test
add
cmpl
cmp
outsl
and
xchg
jp
cmp
add
jecxz
push
je
fcoms
mov
clc
pop
xor
lea
loope
jno
push
push
data16
in
adc
imul
jae
vmwrite
inc
push
into
lret
mov
dec
sbb
jp
inc
divl
dec
arpl
mov
aas
rclb
cli
jb
shl
mov
lods
add
mov
fimull
mov
cmovs
pop
jne
lea
mov
push
push
inc
add
inc
lcall
decb
mov
adc
push
adc
iret
push
add
clc
je
xor
in
or
jbe
aaa
mov
das
clc
cmp
cmpb
mov
sub
sub
test
in
popl
je
je
cmovns
mov
mov
push
push
call
sub
in
jae
jle
in
cmp
mov
inc
loop
icebp
cmp
push
daa
xor
xchg
sub
fbstp
add
add
push
inc
jecxz
lock
add
adc
ljmp
mov
sub
out
jle
addr16
dec
fs
mov
sbb
xchg
xor
or
and
mov
sbb
pop
cmp
insb
cmp
and
sub
push
out
xor
and
sub
lock
addl
out
xchg
loope
pop
jne
sbb
add
dec
stos
aaa
test
inc
cmp
icebp
pop
and
or
in
mov
pop
rolb
fmull
mov
pusha
shlb
into
ds
adc
and
idivb
dec
sub
jge
and
xchg
adc
mov
or
ds
sarb
cmp
mov
inc
add
push
jb
jmp
mov
dec
out
call
or
popa
adc
xchg
rorb
stos
subb
inc
loopne
mov
adc
jl
push
sub
or
and
pop
call
out
cmp
lea
lods
insb
ret
nop
and
ljmp
sbbb
sbb
inc
mov
jmp
test
adc
fisttpl
mov
leave
mov
inc
push
xor
cmp
push
push
cli
sub
push
adc
pop
mov
call
push
imul
xchg
sbb
ljmp
pop
nop
fucomp
pop
sub
and
push
mov
xor
mov
jne
add
stos
pop
add
cmp
pop
push
daa
ret
xchg
mov
cmp
ss
push
inc
or
pusha
es
fs
xchg
or
ss
mov
pop
sub
push
clc
lea
js
icebp
add
mov
decb
call
add
and
push
outsb
dec
jne
mov
pop
stos
cmp
lea
andl
pop
pop
adc
inc
cmp
jb
lret
jle
or
fsubs
decl
add
scas
movsb
push
lea
pop
ljmp
push
inc
icebp
cmpsl
mov
lea
pop
pop
pop
clc
jle
mov
test
push
lock
mov
lret
push
mov
xchg
je
ja
pop
adc
and
add
inc
mov
push
mov
in
decl
iret
dec
shll
clc
pop
pop
cltd
mov
decl
adc
in
and
mov
clc
jl
add
hlt
inc
inc
nop
and
push
es
cld
mov
mov
cmp
je
xlat
test
push
shrl
rclb
repz
fldl
mov
jmp
dec
pop
idivb
jmp
je
inc
jmp
jae
stos
pop
pop
in
es
dec
std
sbb
pushf
dec
mov
ret
cli
or
and
jno
mov
imul
outsb
or
movsb
ret
dec
push
and
xchg
add
inc
mov
inc
xlat
mov
rolb
xor
sub
fcmove
cmpxchg
xlat
cmp
adc
xchg
jmp
mov
loope
jne
lock
or
fisubl
sbb
or
adc
xchg
or
sbb
sbb
lea
fadd
push
outsb
sbb
add
push
sub
xchg
ss
gs
mov
mov
mov
sbb
push
or
loopne
fcomps
je
mov
cmp
push
int
add
jb
data16
rolb
mov
push
stc
mov
pop
add
inc
adc
lds
pop
xchg
jmp
jp
aas
mov
imul
cld
push
cmpb
ret
jge,pn
pop
push
push
call
adc
sbbb
or
outsb
mov
push
mov
negl
push
out
outsl
je
jl
add
sub
jecxz
and
pop
push
sahf
lods
pop
iret
push
in
lock
je
call
movsl
and
cmc
addr16
ss
pop
repz
add
test
sub
or
mov
mov
add
mov
push
fs
stc
push
test
cmc
jmp
adcb
add
or
sbb
enter
push
nop
icebp
outsl
pusha
pusha
push
push
mov
es
xchg
idivb
add
push
push
jb
shr
js
or
adc
sahf
add
call
inc
aas
decb
aas
lock
add
adc
sbbl
hlt
cli
jle
es
fwait
cld
xor
xor
xor
inc
cmp
push
add
mov
push
lea
dec
mov
xor
jmp
dec
and
inc
lahf
jle
dec
out
pop
mov
add
xchg
lea
xchg
add
add
xchg
sbb
mov
cli
push
bound
xchg
cmp
ret
add
add
xor
mov
stos
add
add
hlt
jno
jmp
xchg
push
and
subb
adc
andl
test
dec
test
mov
push
decl
xchg
shlb
sub
pop
adc
imul
scas
call
popa
push
adc
cli
loopne
sti
cmp
pop
add
add
incb
flds
push
inc
mov
lea
dec
inc
mov
ljmp
lock
dec
cmp
idivl
push
testb
ss
pop
sub
aas
push
clc
mov
sarb
cmp
jb
shrb
cmp
xchg
call
push
mov
mov
sarb
addb
push
add
sbb
add
scas
clc
outsb
jl
iret
lea
push
push
mov
es
je
fmuls
cmc
push
rorb
lock
or
xchg
leave
bound
push
daa
je
clc
jg
in
fcoms
xlat
test
rorl
rorb
rorl
pop
outsl
rorl
add
js
ret
jl
loop
in
mov
pop
popf
add
lret
adc
push
js
in
add
icebp
js
mov
push
rclb
mov
pop
popl
ds
jne
lret
je,pt
inc
inc
and
sbb
and
out
inc
test
mov
cmpsl
or
fwait
jb
rcrb
xlat
push
fs
or
cmp
bound
mov
pop
out
adc
mov
push
aad
add
jmp
int3
dec
xchg
shrb
icebp
cmp
push
pop
les
enter
and
xchg
adc
sbb
pop
add
rclb
mov
lods
bound
xchg
add
adc
outsl
or
movsl
jp
mov
nop
or
push
fs
adc
cmp
xor
sarb
and
testb
fdivs
push
adcb
fs
xchg
add
jl
loop
inc
fcomp
xor
cmp
cltd
incl
or
adc
jo
push
ja
rolb
inc
fcoms
fwait
and
jbe
sub
test
cld
mov
and
add
add
xchg
inc
loopne
jg
mov
push
inc
rorb
push
addb
xchg
sub
and
roll
cmpsl
mov
adc
sub
xor
into
jle
mov
repz
or
idivb
or
xchg
aas
cmp
or
out
or
or
mov
imul
mov
add
loopne
push
lods
or
movsb
ss
and
loope
sub
sub
lock
fs
cld
jp
pusha
sub
mov
push
loopne
jp
call
outsb
xor
push
cmp
mov
hlt
outsl
mov
and
and
das
mov
ds
icebp
sub
adcb
push
adc
loop
pop
out
dec
pusha
sbb
cmp
jbe
inc
popa
pop
scas
push
lcall
add
or
ret
ds
or
cmp
and
jmp
push
cld
out
push
add
das
call
mov
pusha
mov
pop
inc
or
adc
pop
or
sbb
inc
es
fs
mov
or
mov
xor
lcall
in
add
adc
inc
lds
enter
and
and
pop
mov
test
mov
mov
add
divb
push
pop
data16
push
jmp
push
dec
and
or
xchg
jo
xor
xor
cmc
pop
mov
scas
call
cmp
inc
cwtl
xor
adc
in
or
mov
cltd
add
pop
inc
and
add
jecxz
add
jbe
loopne
shlb
cli
clc
mov
shr
loopne
lods
xor
push
lods
loopne
jae
sub
test
pop
inc
cmpsb
jo
or
jle
add
pop
loope
inc
mov
mov
pop
pop
add
repz
test
jg
dec
fs
pop
push
loopne
jne
xor
and
lods
mov
imul
pop
pusha
xor
repz
push
and
movsl
outsb
scas
mov
and
js
add
jmp
or
sbb
dec
shl
mov
adc
insb
ljmp
rorb
lock
orl
push
xor
inc
pop
jecxz
repnz
xchg
or
pop
lock
add
and
xor
mov
mov
pop
lods
andl
fisubrs
pusha
aaa
sbb
int
mov
add
cld
push
push
js
add
and
xorb
cld
jle
add
ret
mov
pop
jle
sbb
in
outsl
or
je
jl
mov
add
push
pusha
adc
lods
mov
lahf
adc
pop
or
or
js
jb
dec
push
roll
add
push
push
dec
add
into
movl
popa
dec
ret
cmp
mov
repz
cmpl
loopne
add
rorb
pop
pavgw
fildl
mov
or
popa
out
mov
sub
xor
xor
add
in
enter
push
mov
sarb
ljmp
push
or
repnz
idivb
cmp
mov
rclb
mov
sbb
jl
pop
add
cmp
mov
mov
mov
loopne
adc
jg
leave
hlt
sbb
shlb
call
lea
add
mov
fisttps
xor
or
add
std
mov
push
lock
push
test
sbb
movb
lock
pop
lock
lcall
push
lea
and
inc
xor
mov
dec
mov
add
lea
fiaddl
or
or
push
lcall
les
jne
add
or
aaa
nop
adc
push
cld
inc
push
add
in
pusha
or
pop
or
push
call
sub
pop
inc
icebp
scas
test
loopne
sbb
addl
xchg
cmpb
lea
inc
or
sub
cwtl
movsb
mov
stc
cs
rcrb
push
jo
mov
push
enter
push
pop
fstpl
stos
or
out
rcll
clc
push
cmp
jo
inc
popf
xchg
scas
js
pushf
call
xlat
fbld
xor
mov
lods
icebp
add
sbb
add
xor
xchg
sub
and
jle
outsb
shrb
jle
cmp
sbb
xor
push
push
or
sti
ja
sar
or
sub
jmp
lods
dec
stos
imul
mov
xchg
mov
incl
add
mov
ljmp
mov
or
xchg
push
lods
jne
lcall
add
lock
inc
clc
es
shlb
ja
and
sub
sbb
loope
push
aad
std
pop
fdivr
add
adc
jmp
pusha
push
lahf
repnz
mov
test
js
incb
jg
dec
pop
shl
mov
mov
fs
stos
nop
ret
test
lock
nop
in
jne
mov
push
sbb
add
xchg
or
aam
xor
mov
cmp
orl
xor
mov
cmp
sbbl
fsubr
add
ds
jl
inc
add
je
ret
clc
je
cmp
mov
xchg
and
jb
xor
sarb
xor
jge
and
mov
clc
lock
pop
add
xor
sbb
add
test
or
or
inc
into
sbb
mov
into
je
dec
mov
xor
lea
and
loopne
or
add
pop
mov
test
loop
and
xor
jb
add
mov
aaa
add
stc
adc
jo
inc
mov
sbb
ret
xor
js
mov
push
sbb
je
sub
adc
in
decl
and
cmp
jbe
jo
testl
sub
add
icebp
lahf
cmp
pop
jb
lock
add
inc
xor
sub
pop
sbb
es
or
xchg
in
sbbb
clc
xor
call
pusha
adc
and
ret
cmp
insb
xor
or
or
or
add
add
sbb
jl,pt
xchg
test
shrb
xchg
lea
add
and
jbe
lret
mov
andb
push
push
pcmpgtb
cli
adc
fnsave
add
ljmp
add
cmp
jne
push
loop
insb
test
lock
pop
add
and
cli
jb
push
jne
or
fildll
in
stos
outsl
jo
mov
call
test
xor
int3
shrb
mov
sub
add
xchg
adc
xor
cld
push
push
mov
pop
or
inc
mov
fmull
adc
push
cmp
push
aaa
call
xchg
cmc
dec
add
mov
call
xorl
sbb
and
cmp
cmp
dec
test
pop
inc
mov
jg
adc
jo
cmovs
mov
or
and
mov
lcall
cmp
cmp
in
add
and
shlb
fnsave
mov
lcall
nop
lock
dec
lret
and
adc
divb
orb
adc
cmp
add
out
adc
inc
fldl
inc
xchg
les
sbb
sub
inc
jo
push
divb
je
fidivrs
mov
cld
add
add
add
je
sar
out
add
es
add
pop
ret
xchg
cmc
xor
inc
aam
and
mov
cld
psubq
push
dec
mov
pop
repnz
clc
repnz
je
add
xchg
adc
sahf
push
or
mov
mov
clc
jmp
jo
je
add
push
push
sub
es
push
fcmovbe
das
xchg
icebp
jns
jmp
push
dec
sbb
adc
or
xchg
sub
in
cmc
sbb
add
dec
mov
mov
push
push
ljmp
movsl
push
ss
stc
or
jbe
dec
pop
sbbl
pop
mov
fdiv
jecxz
xor
je
lods
cmpsb
xor
pop
dec
sbb
pop
add
xor
adc
rclb
lock
lret
and
or
push
clc
push
and
push
or
sub
cmpsl
dec
mov
add
and
xchg
jmp
inc
push
inc
iret
push
push
mov
xor
call
jge
sbb
lock
inc
cltd
shlb
jno
repz
sub
adcb
mov
outsl
loop
mov
push
fldcw
mov
and
mov
inc
aam
pop
pop
push
mov
mov
xor
mov
jp
jo
and
arpl
das
adc
lea
jmp
shr
jo
add
push
add
out
clc
pusha
mov
mov
inc
xor
add
das
sub
jne
sub
add
mov
push
roll
push
push
sarl
dec
add
shll
fsubrs
or
push
repz
test
add
xchg
pop
adc
add
sub
and
inc
inc
jmp
in
sahf
xor
lods
mov
div
lahf
rorl
aas
pop
xor
and
mov
xchg
dec
call
push
repnz
push
or
adc
test
ficoms
cltd
xor
inc
ljmp
mov
cmp
push
adc
cmc
push
mov
sbb
rolb
and
cwtl
into
lock
test
andb
lock
ljmp
adc
cmp
mov
jmp
push
scas
xor
adc
mov
sub
cld
orb
jb
and
mov
mov
sbb
mov
dec
add
adc
adc
js
les
mov
sub
xchg
bound
xorb
push
inc
pushf
sub
mov
cmpb
jecxz
movsb
or
xchg
cli
cmp
repnz
mov
jnp
and
mov
push
xchg
insb
mull
adc
inc
or
sbb
adc
aas
mov
loopne
and
mov
sbb
sbb
test
add
xor
inc
sub
push
cld
in
mov
das
dec
pop
lods
jp
or
addr16
cmp
test
mov
push
lods
mov
mov
insb
shlb
pop
movsb
ret
dec
test
and
inc
data16
jle
jbe
push
les
mov
ret
notb
dec
popf
add
es
ret
mov
cmp
cli
push
test
sub
sub
or
pop
clc
xchg
dec
sub
call
stos
in
repnz
scas
add
lea
call
inc
jo
pop
ss
add
loope
jbe
call
fsubrl
ljmp
adc
push
add
sarb
out
movsb
and
push
dec
xor
sti
sub
mov
xchg
and
fimull
jmp
or
cmp
mov
xchg
and
call
adc
scas
jb
sbb
fs
ficomps
jle
pop
mov
push
subb
fmuls
add
push
mov
imul
bound
inc
and
cltd
inc
clc
adc
push
pop
je
fsubl
lods
out
pop
dec
add
inc
pop
and
sahf
sbb
lret
aam
ret
lea
fadds
or
or
or
aad
loope
jb
lcall
lea
mov
cmp
add
jne
je
inc
mov
out
loopne
pop
xor
testb
mov
test
mov
mov
xchg
nop
inc
or
mov
lds
movl
adc
lea
dec
cmc
lcall
adcl
adc
mov
rorl
cmp
adc
jo
push
test
jo
out
mov
mov
pop
mov
mov
mov
cmp
jne
cmp
inc
xor
fmul
jo
movsb
mov
lds
cli
fwait
decb
ss
mov
adc
je
sbb
stos
pop
cmpsb
pop
adc
repz
notb
jb
hlt
idiv
dec
mov
add
and
ja
add
out
mov
push
fldt
adc
daa
push
sbbb
inc
cmp
outsl
adc
movsb
cmp
je
in
sbb
fisubs
je
addb
cli
or
mov
mov
jne
dec
or
pop
cmp
push
insl
jmp
inc
or
jp
ss
cs
scas
adc
adc
dec
inc
inc
pop
cs
cmp
aaa
jl
cmp
outsb
rolb
inc
pop
psubsw
inc
lods
cwtl
test
js,pn
mov
mov
mov
lods
push
movsb
push
push
xlat
pop
or
sub
std
inc
cmp
pop
cmp
test
adc
push
xchg
mov
ja
sbb
inc
aam
mov
dec
shr
sub
sahf
sub
xor
decb
jo
outsb
loopne
jbe
sbb
or
push
inc
les
das
out
data16
jmp
inc
or
or
pop
ret
dec
mov
xor
pop
call
cld
data16
sti
push
cmpl
pusha
in
adcb
push
scas
call
popa
xlat
daa
cltd
sub
lods
xchg
xlat
jl
adc
lods
adc
jl
push
push
and
lret
cmp
arpl
pop
fsubl
add
ror
cmp
mov
sub
call
inc
pop
inc
push
sahf
pop
test
xlat
fxch
clc
call
cmpsl
add
or
xorl
mov
in
sbb
xorl
pop
popa
sbb
xor
add
sbb
cmpsb
shll
outsb
pop
sar
jl
ret
int3
std
or
inc
outsb
jo
mov
pop
and
xor
mov
js
add
add
sub
xor
cmp
insb
idivb
push
mov
push
int3
loope
rolb
sub
daa
imul
nop
mov
hlt
jp
mov
or
mov
add
pop
pushf
fisubs
add
mov
jle
xor
neg
je
lea
insb
ds
jle
into
test
test
std
pop
sbb
sbb
ret
sbb
testb
mov
xor
jbe
orb
xor
sbb
mov
std
pop
push
cmp
cli
int
push
sbb
and
mov
cli
adc
and
insb
sub
out
shl
mov
add
push
xor
popa
pop
mov
mov
imulb
xchg
cmp
test
inc
or
inc
int3
dec
add
cli
cmp
xor
and
and
or
clc
lret
xor
or
sub
jo
mov
sbb
pop
or
push
mov
lds
decb
shlb
cmp
mov
ljmp
fildll
icebp
mov
xor
adc
roll
jmp
mov
jb
mov
movb
testb
ret
add
nop
or
dec
add
fidivrl
data16
xor
cli
stos
neg
pop
add
mov
mov
jb
pop
movsb
loope
in
and
pop
scas
popa
pop
mov
jne
cmp
or
dec
dec
adc
add
jle
iret
push
into
mov
ficoms
xor
movsb
lock
jmp
sbb
mov
push
mov
sub
stc
push
sar
lret
xlat
add
loope
mov
add
or
mov
pminsw
aad
dec
sub
pop
pop
mov
dec
and
mov
insb
mov
ds
add
and
or
add
inc
jns
add
movb
lret
push
lock
ret
push
mov
ud0
dec
lock
cmp
cmp
ret
outsl
and
ljmp
or
and
mov
rcrl
shr
or
test
movl
cmc
jbe
inc
pop
loope
decl
and
loop,pt
rcll
or
jne
outsl
dec
dec
cmp
in
jbe
scas
cli
jl
aas
mov
sub
test
int3
mov
test
into
pop
cmp
mov
into
jne
inc
jbe
pusha
push
fdivs
push
dec
push
dec
push
mov
sbb
jmp
in
or
mov
lahf
int3
shlb
cmp
inc
dec
jecxz
xor
lock
cmp
xchg
xor
pop
and
mov
lock
je
sub
xor
test
jne
sbbb
hlt
je
std
dec
pop
push
cmp
jmp
lea
ret
dec
ja
out
rorl
pop
das
xor
pop
repnz
jb
das
mov
push
shrb
dec
js
lds
addb
mov
xchg
inc
cmp
jl
outsb
dec
idiv
mov
mov
aas
pop
icebp
inc
dec
mov
add
roll
mov
in
mov
push
push
or
call
add
shll
sarb
mov
jne
or
mov
xor
cmp
loopne
jmp
lock
lcall
dec
mov
xchg
fdivrp
nop
pop
xchg
jbe
lea
in
add
mov
inc
mov
pop
cmp
add
aam
adc
and
or
jne
lods
iret
or
dec
mov
adcb
pop
and
fsubl
sbb
push
push
test
cltd
xchg
push
insb
into
adc
mov
data16
incl
mov
mov
push
push
mov
mov
jg
and
add
push
ja
add
lret
jb
push
add
add
test
mov
or
xchg
adc
add
mov
fildl
rcll
jmp
mov
pop
cwtl
callw
push
andl
push
push
mov
orl
lds
in
je
mov
sbb
add
push
push
push
push
and
and
ret
jle
sub
xchg
jl
rcll
fdivs
cmp
mov
jb
add
icebp
shl
faddp
data16
ficomps
scas
and
adcb
push
je
jl
nop
jg
push
dec
loope
dec
es
inc
daa
stos
or
mov
imulb
pop
div
int3
rcrb
call
sbb
dec
fdivrs
call
or
imul
add
int
sar
mov
cmp
adc
inc
shll
mov
call
inc
jecxz,pn
nop
push
push
loopne
add
ret
scas
cmp
iret
pop
ret
sti
xor
lds
push
pop
dec
cld
dec
mov
add
push
ficoml
dec
shrb
loop
add
decl
push
sbbl
cltd
insb
adc
push
call
shl
pop
pop
push
mov
push
or
sbb
pop
cmp
xchg
aam
shl
scas
rorb
push
ret
sub
jbe
mov
push
test
adc
add
add
add
lods
mov
inc
loop
fmuls
mov
aam
hlt
inc
arpl
outsb
pop
xor
es
pop
mov
xchg
push
in
adc
rolb
push
ret
push
or
mov
add
add
add
or
push
push
rorb
pop
add
mov
loope
or
xchg
in
jl
add
pop
jmp
les
push
fists
cmp
mov
mov
movsb
sbb
xorb
or
add
ss
cld
pop
add
loope
sbb
add
je
call
sub
cmp
fldt
pop
adc
adc
mov
cmp
mov
push
add
fxsave
and
or
inc
cmp
std
add
call
jp
mov
cld
adc
movsb
push
or
daa
mov
xchg
and
or
xchg
loopne
cli
cmp
mov
xor
add
sti
mov
sub
push
and
cmp
and
push
fisubl
aam
into
enter
mov
mov
and
push
inc
cli
pop
adc
push
pop
out
push
fmull
ret
icebp
xchg
mov
push
push
add
xchg
sti
int
lods
dec
push
cmp
cmc
sub
push
pop
or
jge
cli
jne
xchg
clc
jle
sbb
cmp
lock
mov
push
jp
mov
aam
je
and
adcb
inc
jecxz,pt
pop
cmp
aam
adc
push
loope
sbb
test
data16
pop
mov
sbb
mov
movsb
mov
cmpsb
imul
inc
mov
jecxz
and
push
and
mov
lods
out
fs
mov
mov
shlb
je
clc
mov
aaa
imul
es
dec
aam
xchg
mov
adc
or
loop
mov
lea
pop
sbb
nop
sub
ja
pushf
ljmp
cmp
mov
ds
dec
or
cwtl
dec
jns
aaa
xchg
sub
call
push
adc
in
test
jo
sub
jne
testb
pop
push
push
sbb
adc
push
cmp
lods
add
xor
adc
enter
jne
loopne
fadds
notl
call
jecxz
notb
mov
inc
adc
pop
or
sub
loopne
jns
xchg
or
pop
sahf
daa
pop
mov
ret
add
jbe
jle
xlat
jne
push
push
xchg
jg
rclb
lret
cwtl
adc
mov
call
cmc
andb
mov
inc
mulb
dec
pop
inc
in
imul
mov
loopne
daa
mov
loope
icebp
push
add
dec
nop
add
xchg
mov
cmp
push
or
sti
rclb
js
sub
mov
and
ret
or
or
inc
hlt
mov
add
xchg
sti
std
add
add
xchg
add
xchg
adc
mov
jmp
sub
jmp
test
adc
adc
dec
pop
les
sbb
mov
mov
mov
pusha
fistpl
das
cmp
xor
addb
repz
adc
xorb
dec
shlb
pop
das
and
cmp
repnz
test
add
gs
test
les
fdivl
int
inc
jmp
or
outsl
dec
ljmp
pop
jecxz
pop
pop
std
stos
inc
or
mov
add
add
pop
sub
add
mov
or
push
stos
outsb
in
aad
mov
cmp
inc
popa
and
sub
les
insl
sbb
cld
lock
sbb
add
mov
xchg
and
adc
fld
loop
push
sbbb
stc
inc
cld
add
cmp
sbb
mov
addb
sbb
inc
xor
sub
or
xor
mov
inc
jmp
inc
mov
addb
dec
xor
repz
fldt
es
andb
loop
lahf
mov
insb
add
xchg
shll
mov
xor
imul
je
mov
inc
sti
sbb
dec
rorl
les
jne
cli
and
icebp
sub
or
incb
hlt
lcall
add
jb
or
outsl
call
xchg
xor
push
leavew
sbb
add
adc
bound
adc
sub
jo
mov
out
jbe
add
mov
push
repnz
imul
clc
push
dec
fadd
hlt
xor
push
push
push
cmpsb
ss
in
js
pop
lods
es
add
mov
clc
mov
loopne
inc
mov
push
pushf
test
mov
sub
imul
push
addr16
push
stos
or
add
sbb
adc
jbe
xchg
mov
mov
test
shlb
mov
xchg
rcrb
pop
cmpsl
fwait
adc
rcrb
into
pop
push
add
push
jg
mov
mov
and
add
and
xchg
inc
addb
in
mov
jl
shlb
xor
dec
add
add
shll
jl
rolb
arpl
jb
enter
add
ret
inc
pusha
xchg
xor
leave
call
xchg
ret
pop
js
mov
inc
mov
outsl
adc
jp
inc
pop
pop
xor
sarb
push
or
cld
pushl
dec
sub
mov
add
add
or
adc
sbb
push
xchg
jb
ds
aad
cli
test
pop
icebp
xchg
dec
leave
push
js
jl
sub
add
sbb
adc
jae
sub
pusha
aas
addb
or
pop
call
daa
icebp
xchg
mov
add
sbb
add
sbb
int
xchg
lcall
jp
ret
add
mov
add
push
push
icebp
stos
lods
cmp
cmp
pop
pusha
jno
xor
xchg
cld
mov
mov
and
and
call
push
push
call
pusha
and
mov
scas
dec
mov
xlat
adc
xchg
add
test
jb
sahf
pop
push
jb
jl
popa
adc
popa
xchg
or
bound
mov
js
sahf
pushf
mov
test
add
or
xchg
sub
xchg
je
pop
mov
mov
dec
push
pop
sbb
cmp
decb
lea
lea
add
call
add
push
push
movsb
add
or
add
std
jg
xor
lret
sbb
mov
xor
mov
rol
add
insb
out
inc
add
dec
movmskps
pop
js
adc
pop
jae
lock
call
loopne
loopne
in
push
call
mov
test
adc
mov
adc
adc
mov
aas
lret
clc
fwait
inc
push
add
scas
cwtl
jmp
cmp
xchg
push
jae
cmp
mov
dec
mov
xor
and
xor
jg
add
sbb
jne
test
adc
sahf
or
test
data16
add
loope
inc
fneni(8087
push
mov
mov
pusha
push
xchg
call
add
adc
shld
ljmp
imul
dec
add
rolb
sarl
inc
adc
xchg
cmp
rcrb
mov
adc
adc
push
sbb
addb
add
idivl
ds
je
lea
das
je
add
testl
cwtl
mov
push
clc
push
je
adc
or
sbb
sub
mov
mov
add
or
adc
adc
and
es
jbe
movsb
push
addb
push
xchg
sbb
cmp
pop
adc
or
ljmp
cltd
stos
aam
mov
shrb
adc
popf
or
pop
jmp
and
mov
push
and
loopne
subl
dec
xchg
ret
ja
das
test
cld
je
bound
add
into
and
sub
xor
decl
sbb
call
cld
pusha
or
add
mov
cmp
or
fnstenv
into
subb
js
jne
mov
loopne
pop
pop
mov
push
pop
sub
adc
push
idivb
mov
fs
push
xor
mov
mov
test
movsb
or
mov
shrb
add
xchg
faddl
push
fsubrl
mov
adc
mov
add
adc
int3
and
pushl
or
inc
mov
add
and
js
call
loopne
sub
sbb
jnp
mov
cmp
ljmp
lock
cwtl
pop
or
adc
xchg
das
add
push
outsl
mov
gs
das
mov
cmp
or
push
shrb
sbb
push
xor
inc
dec
xor
adc
cmp
sbb
xor
lcall
and
inc
clc
inc
push
mov
je
cmp
scas
mov
jae
lods
cli
sub
sub
sarl
add
mov
inc
push
lock
lock
push
aam
add
mov
hlt
and
push
mov
std
xor
shlb
jecxz
jnp
lock
mov
push
or
pop
hlt
rcrb
outsb
add
cltd
inc
ja
cmp
setp
lret
lock
push
adc
cs
mov
add
shr
xor
fildll
sub
lea
mov
push
push
push
jno
pop
cmp
fbld
out
mov
jo
call
add
into
lock
fsubrs
add
pushl
std
mov
scas
icebp
inc
call
mov
mov
out
call
add
push
or
ja
decl
pusha
jo
lock
or
mov
in
lods
cmp
cmp
mov
shlb
adc
adc
xor
dec
push
or
in
jo
mov
xor
je
mov
mov
aaa
incl
pop
call
add
xor
jne
push
clc
orb
and
adc
sbb
lock
add
shr
es
es
or
movsb
mov
repz
in
push
add
call
inc
push
ljmp
andl
xchg
outsb
sub
adc
push
push
hlt
add
in
inc
shlb
jge
sbb
xor
or
inc
pop
jp
mov
je
enter
std
outsl
or
adc
inc
fdiv
or
lahf
pop
or
push
add
xor
sti
jb
test
push
subb
mov
test
or
std
call
lahf
and
adc
movsl
jo
ds
aaa
and
dec
std
and
push
dec
and
and
mov
mov
mov
adc
mov
test
in
add
jno
push
in
mov
sub
ja
adc
lret
and
mov
push
mov
xor
stos
std
mov
lcall
sbb
mov
or
mov
pushaw
mov
add
test
scas
add
mov
push
mov
idivb
mov
inc
out
or
and
adc
test
stos
and
out
stos
pop
out
js
adc
cld
repz
gs
shl
mov
lea
push
xchg
add
lods
lock
lock
cmpsb
out
adc
mov
inc
jmp
fdivrp
stos
nop
xor
call
inc
mov
mov
xor
and
pop
fidivl
and
dec
loope
push
inc
push
adc
jne
popf
sti
add
mov
or
inc
or
cld
xor
add
add
stos
pop
dec
add
or
push
fisttpl
jns
xor
mov
je
or
jbe
xor
jo
pop
sbb
in
adc
xchg
scas
fmuls
in
pop
hlt
aad
add
inc
mov
jmp
mov
push
mov
add
or
push
out
and
cld
mov
les
push
rcrl
icebp
cmp
jbe
clc
pop
movsb
fs
or
pop
call
or
nop
jle
scas
or
mov
adc
lcall
stos
xchg
xchg
shll
movsb
sbb
es
xor
and
push
add
pop
inc
mov
and
jbe
cmp
arpl
xchg
js
jae
popa
push
outsb
cmp
jo
fs
pop
mov
dec
fistl
dec
add
outsb
xor
ljmp
jle
loopne
inc
inc
mov
jle
push
push
add
push
xor
add
rolb
add
pop
bound
fcmovnbe
in
mov
sti
mov
les
out
push
push
xor
add
xor
fdivrs
sar
mov
jo
pop
xor
add
faddl
mov
push
les
add
pop
jb
mov
push
testb
dec
cld
jp
xor
xor
hlt
or
add
xlat
jno
ja
or
js
sub
or
dec
mov
xchg
stos
mov
mov
inc
adc
lock
inc
inc
jecxz
nop
and
xchg
idivl
pusha
filds
hlt
or
push
xor
mov
xchg
add
inc
or
xor
mov
das
inc
add
adc
sarl
or
add
adc
adc
mov
rorb
push
shrb
test
stos
adc
xchg
inc
pusha
sbb
jle
pusha
mov
inc
adc
pop
mov
xchg
and
pop
jb
cwtl
testl
mov
push
xor
push
xchg
sbb
repnz
clc
mov
loopne
pushf
xor
mov
jmp
pop
sbb
cs
in
sbb
leave
and
pushl
push
jne
je
call
int3
push
pop
jmp
and
jnp
fisttpl
test
jb
mov
cmp
xchg
jo
push
push
call
loopne
ret
pop
jmp
adc
ficoml
jge
cwtl
xor
decl
xor
not
xorb
icebp
mov
sbb
cmp
imull
adc
mov
mov
cli
push
jmp
and
outsl
xor
adc
pop
xor
mov
mov
sub
clc
leave
push
mov
int3
or
sub
fisttps
jge
mov
xchg
and
mov
aaa
insb
push
mov
bound
inc
and
roll
popf
in
mov
push
mov
adc
fcmovnbe
cmpsl
sub
lea
and
cmp
add
fsubrp
testl
pusha
rolb
cmpsl
mov
es
xchg
call
add
pop
mov
call
push
imul
xlat
add
scas
out
outsb
mov
pop
adc
sbb
add
mov
xchg
icebp
or
adc
insb
mov
sbb
pop
stos
std
add
sti
ljmp
sub
add
bound
jbe
cmp
ficomps
pop
push
call
push
test
std
mov
mov
and
mov
loopne
arpl
aaa
push
scas
push
jg
addb
xorb
repz
xchg
inc
ds
add
xor
fwait
fiaddl
fsubrp
add
push
sbb
xor
sub
cmp
mov
sbbb
pop
lods
sti
push
adc
push
sub
imul
imul
mov
incl
ret
cmp
mov
mov
cmp
outsb
outsb
push
xorb
or
sub
or
and
adc
xchg
je
add
sbbl
rolb
or
pop
arpl
and
dec
ds
jb
dec
jge
push
call
call
inc
mov
jmp
dec
push
rclb
inc
sbb
or
ret
jnp
sub
pop
or
mov
sub
enter
loopne
push
insl
jnp
stos
mov
mov
str
fadd
mov
cltd
adc
stos
rclb
pop
jo
loopne
aaa
push
or
mov
ret
sub
outsb
bound
iret
mov
add
add
fsts
pop
sub
push
pop
inc
rol
add
es
adc
jg
mov
jg
xor
xor
lcall
es
xor
sub
adc
inc
sub
adc
adc
loopne
dec
clc
imul
sub
mov
sub
hlt
shll
sbb
pop
push
jo
call
adc
add
jmp
mov
add
add
das
mov
jb
or
push
add
into
adc
sub
or
dec
cld
scas
push
mov
lea
in
shrb
mov
sbb
pop
loopne
test
or
add
hlt
add
pop
fs
adc
ss
out
hlt
push
movsl
ljmp
rcll
cld
je
add
outsl
cmp
leave
cmp
fistpll
sbb
jo
adc
loope
les
jg
mov
inc
sahf
push
lds
add
pop
rclb
enter
rcrb
sbb
or
add
hlt
push
jl
adc
cld
int
lret
movsl
add
adc
add
push
adc
int3
add
dec
and
push
loopne
jg
xor
or
test
push
push
pop
jecxz
cmp
add
mov
popa
sbb
loopne
sti
fcomps
and
push
xor
sbb
push
push
xlat
xchg
push
je
xchg
test
cmp
and
add
add
enter
inc
push
xchg
or
mov
iret
fisubs
push
or
nop
outsb
dec
lea
fsubrl
pop
loopne
insb
jbe
push
sbbb
pop
push
mov
cmp
inc
add
xor
pop
sub
fiadds
add
or
push
push
int3
nop
or
test
push
je
inc
out
push
popa
addr16
or
dec
sub
fildl
or
sub
bound
push
mov
mov
data16
push
loopne
loope
negb
dec
aas
dec
pop
pop
pop
adc
ljmp
aaa
push
je
push
jp
sub
jle
adc
inc
lods
ret
add
add
and
iret
repnz
loop
cmp
pop
bound
mov
fstps
jecxz
dec
mov
imul
jbe
push
pushf
push
mov
pop
or
xor
push
add
shll
jmp
push
pop
add
sarl
add
stos
dec
add
into
inc
and
lret
gs
sahf
cmpsb
orb
data16
aad
push
push
mov
shl
or
imul
xor
lcall
push
loope
ss
pusha
or
andb
sbbb
cmp
mov
or
add
nop
push
hlt
shl
mov
ja
pop
adc
push
pusha
add
mov
add
arpl
or
clc
pushl
bound
and
or
add
out
loopne
lock
mov
mov
data16
or
fmuls
lahf
es
das
xchg
push
loopne
sbb
stos
ja
addr16
jae
pop
jl
loope
mov
mov
mov
push
es
mov
loopne
movb
outsl
js
aas
pop
ret
les
or
adc
fdivrs
push
and
addl
mov
shll
fists
xchg
out
mov
pusha
rorb
lret
andb
jle
cmp
mov
cld
add
add
pushf
loopne
sub
movzbl
es
hlt
add
into
loopne
fdivp
das
pop
and
out
and
mov
js
xor
cld
pusha
add
push
mov
add
jo
lea
mov
cmp
in
or
fldenv
cmp
stc
sbb
add
in
or
pusha
and
popa
popa
lods
mov
rcrl
ss
insb
mov
pop
cmpsb
pusha
stos
stos
cmp
test
add
test
add
clc
out
mov
ret
shlb
mov
or
shll
es
faddl
xlat
fs
les
das
or
inc
ficompl
add
xchg
lds
data16
nop
sbb
aam
adcb
bound
lods
add
inc
mov
dec
mov
mov
push
gs
jne
add
clc
add
mov
in
cmpsb
push
dec
loope
sti
fwait
hlt
cmp
aas
add
xor
or
or
outsb
clc
stos
jb
jmp
cmc
mov
jg
sbb
pop
xor
loopne
xor
inc
cmpsb
pop
adc
orl
push
mov
jg
outsb
adc
add
sub
nop
xor
xor
jmp
xorb
xchg
rol
pop
pushf
mov
out
push
mov
cltd
mov
dec
jbe
or
jb
loope
sub
mov
mov
fistps
call
rorl
call
das
inc
andl
mov
call
mov
jo
add
cmp
inc
lock
cmc
push
addb
inc
ret
lock
xor
jo
push
cwtl
or
sub
je
leave
mov
push
test
pushw
orb
cmp
mov
repnz
inc
inc
push
xor
push
cli
inc
ja
sbb
mov
or
mov
jb
push
ss
nop
cmpb
iret
data16
sti
xor
mov
rcll
push
nop
jbe
insb
push
jp
insb
mov
pop
js
leave
and
and
push
xor
xor
sbbb
rcll
jmp
aam
sarb
cmp
or
mov
cli
arpl
push
lock
xor
shlb
adc
rorb
add
mov
inc
mov
scas
scas
xchg
addl
adc
xor
push
lock
pop
out
adc
outsl
pop
mov
stc
pop
sbb
push
mov
adc
xor
push
fmulp
dec
mov
push
stos
test
and
inc
mov
out
jo
mov
stos
loopne
ljmp
mov
mov
adc
outsb
push
ja
cli
pop
cli
ss
add
push
inc
lcall
call
out
inc
dec
mov
mov
push
pop
mov
inc
iret
icebp
sbb
or
mov
sub
es
or
dec
lock
inc
cmp
hlt
adc
mov
lock
and
push
decb
xor
and
sub
inc
adc
aas
sbb
xchg
or
pop
mov
adc
test
lock
lock
fildl
push
dec
nop
adc
pusha
xorl
ljmp
jb
sbb
dec
ss
push
sti
bound
push
add
rol
rcrb
out
add
mov
into
xor
push
dec
jo
lock
clc
lcall
push
mov
call
jge
pop
hlt
pop
mov
xor
divb
aaa
inc
cli
frstor
inc
mov
stos
pop
sub
and
ret
jge
mov
xor
cmpsb
mov
sub
cmpsl
inc
sub
jp
pop
lea
push
mov
or
pop
loopne
add
cmp
call
sbb
call
sub
push
push
push
fildl
xor
jo
push
adc
xor
ret
inc
scas
sub
sbb
adc
icebp
ja
xor
xor
adcl
cld
fildl
psubd
incb
add
loope
test
sbb
lock
xor
push
jae
xor
inc
cli
fstpt
xor
repz
insb
popa
mov
jb
icebp
push
mov
imul
js
add
inc
loopne
loopne
sbb
push
sub
mov
inc
shl
sub
cli
in
sbb
mov
ficoml
mov
and
imul
pop
adc
aad
loope
jo
mov
movsl
das
test
dec
lock
mov
sub
push
xchg
pop
ret
mov
or
push
andl
jnp
mov
push
bound
push
sub
cld
sbb
clc
repnz
cli
es
and
es
loope
xchg
scas
or
icebp
dec
jne
sbb
push
xchg
xor
xor
fsubr
imul
adcl
xchg
cmc
push
push
mov
cli
lret
sub
mov
or
aaa
mov
xor
mov
cltd
jo
or
hlt
test
orb
mov
mov
pop
rolb
pushf
adc
lock
ljmp
add
inc
lock
or
fbstp
call
xor
push
inc
sbb
sub
cmp
pop
dec
jb
jo
rcrb
adc
jo
xchg
jp
jbe
push
jbe
cwtl
adc
jmp
jae
jmp
test
js
sub
cmp
sub
incl
mov
mov
inc
mov
push
jle
cmc
xor
mov
jo
jg
outsl
fisubrl
add
mov
mov
icebp
add
add
jo
dec
mov
out
stos
dec
aaa
adc
jne
mov
jne
jnp
mov
ljmp
xor
jo
mov
jge
call
add
pushf
add
sbb
mov
or
push
mov
loop
cld
or
mov
lahf
and
sbb
jo
test
fadds
cmp
mov
xchg
cmpsb
add
and
add
rcrb
orl
call
lcall
add
fmull
or
call
and
das
mov
inc
fs
inc
and
pop
gs
pop
push
pop
pop
jl
and
clc
pushl
push
inc
or
xor
inc
test
mov
adc
fdivr
mov
mov
jo
test
xor
sub
mov
pop
mov
xor
ret
or
addb
mov
xlat
loope
decb
cmp
xor
inc
jo
bound
inc
dec
shlb
pop
in
loope
or
js
ss
aaa
or
xchg
addb
add
lock
mov
jmp
push
dec
lock
push
sub
dec
aam
adc
inc
xchg
or
ss
data16
divl
push
sbb
call
shrb
clc
lea
sub
cmpsb
call
add
fisubl
in
jle
je
in
filds
push
cwtl
xor
xor
push
mov
add
add
cli
ljmp
mov
call
push
mov
cmp
pop
icebp
lcall
add
xchg
mov
bound
xchg
clc
add
je
jge
xor
adc
and
inc
orb
aam
dec
cmp
dec
lea
enter
adc
sub
in
or
mov
das
sbb
push
ds
inc
movsb
push
out
test
test
mov
cwtl
test
loopne
add
dec
mov
dec
call
dec
mov
hlt
mov
cmp
js
or
fmull
push
loopne
mov
cmp
fs
add
add
loop
add
cmpsb
adc
stos
lret
pop
sbb
adc
in
cmp
test
loop
push
add
push
adc
xor
sub
mov
or
repnz
cld
aaa
adc
orb
xor
test
inc
add
test
xor
adc
gs
push
fsubrs
push
bound
adc
inc
inc
adc
and
je
add
jno
sbb
cmp
mov
clc
int
ljmp
adcb
dec
int
mov
insb
push
xor
bound
pop
dec
or
push
add
shrl
sub
lods
dec
int3
adc
or
add
sahf
pushf
push
rcll
adc
or
push
cli
sbb
je
inc
mov
pop
add
adcb
inc
and
dec
and
dec
mov
xor
or
adc
negl
aam
rorb
add
adc
mov
sub
incl
cmpb
mov
into
inc
clc
decl
or
push
mov
lea
cs
sbb
testl
jg
je
in
mov
mov
jg
data16
inc
je
add
fwait
push
test
push
mov
mov
or
dec
and
call
lret
sub
or
daa
add
rolb
push
add
or
xchg
out
push
inc
mov
xor
clc
fbld
call
add
call
rcll
rorl
subb
sub
test
push
push
repz
adc
or
es
mov
push
repnz
mov
je
inc
pop
adc
dec
dec
jl
addr16
mov
adc
shlb
call
adc
jne
dec
inc
adc
scas
and
cwtl
xor
pushl
pop
idivl
jne
mov
and
add
lock
rolb
dec
add
add
lcall
xor
rol
mov
lods
outsl
rol
aaa
pop
ss
outsb
xor
lock
push
pushf
pop
js
ljmp
ja
inc
sub
cmp
push
test
jb
or
scas
jne
js
xchg
fsubrs
clc
stos
dec
cmpb
cs
and
add
add
inc
fnsave
nop
test
inc
or
shll
movb
pop
rolb
mov
shrb
loop
add
sbb
jge
jbe
push
call
pusha
fcom
ja
jne
and
insb
das
lods
push
or
jge
adc
test
xchg
outsb
ret
dec
pusha
push
add
sub
and
out
call
pop
cmc
xor
outsl
cmp
or
mov
inc
mov
imul
push
idiv
adcb
call
sbb
dec
inc
xor
sar
cmpsb
push
sbbl
dec
shl
jbe
mov
ss
pop
icebp
test
and
inc
mov
pop
and
cs
lea
jl
dec
fildl
out
push
out
adc
mov
repz
fs
adc
or
in
mov
lock
push
pusha
push
fs
adcb
cmp
xlat
jecxz
jge
aam
add
jae
adc
xchg
or
xchg
loopne
fisubs
stos
push
adc
leave
add
adc
mov
mov
test
cmpl
fcomps
loopne
push
push
xchg
sub
in
loop
and
push
add
cmc
loopne
lock
jne
loopne
xor
dec
adc
das
nop
push
inc
and
ret
mov
push
ljmp
daa
je
push
and
decl
call
call
mov
loopne
fs
leave
sbb
xchg
and
arpl
call
aas
xor
xchg
ret
sbb
mov
outsb
xor
loopne
stc
cmpb
push
je
push
mov
jmp
in
add
sti
add
loopne
stos
sub
loop
mov
jo
imul
cmp
pusha
pop
pop
mov
jbe
add
scas
or
jmp
fisubrl
jb
cmc
inc
jnp
subb
add
nop
les
push
xchg
or
cmp
dec
push
jg
jge
jmp
icebp
pop
cli
mov
js
mov
push
cmpb
dec
inc
xchg
testb
je
jmp
or
mov
loopne
stos
xor
adc
dec
push
mov
push
pusha
dec
push
lret
xor
and
je
sbb
mov
loopne
sbb
adc
hlt
cld
cmpl
lahf
std
incl
dec
les
add
dec
xor
push
push
sub
or
cmpb
inc
imul
dec
clc
add
push
push
test
pop
in
dec
std
loopne
call
xor
inc
outsl
pop
call
je
popa
sbb
push
pop
das
loopne
loope
push
nop
mov
loope
adc
ljmp
fwait
mov
push
sub
mov
loopne
lcall
ret
mov
xor
pop
fwait
je
push
cmpb
push
mov
inc
dec
adc
xor
jg
loop
jl
mov
pop
ja
rolb
pop
daa
inc
mov
xor
pop
js
pusha
cmp
popa
jle
xchg
int3
xor
scas
mov
les
loop
inc
test
adc
push
push
clc
push
push
js
dec
rorl
pop
xor
fistl
inc
mov
sub
jl
clc
cmp
test
lret
ret
adc
dec
je
mov
inc
push
inc
cli
mov
add
push
adc
adcl
inc
mov
adc
add
and
insb
adc
clc
pusha
inc
je
loopne
icebp
and
ffreep
ret
cmpsb
mov
or
lock
dec
push
add
sub
jnp
xchg
sub
mov
sbb
add
jg
movsb
fists
jecxz
mov
andb
inc
je
cmp
sub
mov
mov
ret
push
mov
ds
das
and
pushf
dec
add
rorl
addl
scas
call
xor
jnp
je
arpl
enter
and
loope
cmpsb
xchg
xor
subw
je
or
xor
lret
call
push
pop
mov
push
lcall
lock
fidivl
and
xchg
orb
andl
mov
loope
xor
push
rolw
ljmp
shll
and
ds
push
cmp
outsl
push
scas
mov
les
sub
push
cmpsb
les
in
filds
push
clc
scas
push
jo
pop
add
jle
add
push
repnz
inc
clc
sarb
xor
cltd
and
add
mov
pop
add
outsb
or
jmp
cmp
je
or
add
mov
call
jg
or
or
mov
sub
pop
xchg
or
mov
mov
mov
ja
mov
push
in
mov
push
imul
jo
jl
pop
icebp
lea
or
mov
ret
add
ja
mov
mov
add
pop
dec
test
shlb
fsubrs
sub
jp
inc
rcll
or
adcb
in
add
mov
mov
cmpsl
lock
inc
and
call
inc
mov
pop
adc
or
and
mov
gs
js
enter
jo
or
jmp
mov
xor
sub
pop
ds
jo
sub
sbb
dec
push
mov
xchg
pop
push
cmc
aaa
sbb
addr16
sub
lock
mov
mov
mov
add
jne
outsb
dec
outsl
nop
or
cld
loopne
mov
xor
adc
cmp
dec
pusha
aas
mov
mov
sub
pushl
ret
xor
dec
jo
addb
jg
xorl
adc
xor
pop
mov
or
xchg
xchg
jge
adc
mov
push
cmp
addb
cld
incb
lock
movsl
push
inc
aad
jmp
data16
je
mov
jb
ss
cmp
pop
xchg
pop
adc
adc
inc
adc
inc
nop
push
stc
mov
loope
stos
ret
outsb
add
dec
adc
dec
insl
and
insb
push
cld
ljmp
dec
sub
scas
xor
lock
repnz
shrl
push
in
sbb
call
ja
add
pop
and
mov
jo
add
repz
mov
inc
push
pop
jno
stc
push
data16
divb
mov
push
pop
in
mov
sub
divb
icebp
cmp
add
cmp
cld
ret
daa
pop
jg
mov
pop
jb
cmpsb
lcall
mov
add
dec
jl
stc
jg
sbb
icebp
xor
push
push
int3
mov
and
icebp
fcmovnb
xchg
mov
pop
jmp
test
fmull
or
popf
clc
and
lret
cmp
jbe
lcall
ja
ret
and
mov
cmp
jb
imul
add
add
or
ds
stos
movsl
mov
mov
sub
iret
enter
sarb
sbb
aas
inc
mov
les
jo
insb
adc
pop
cmp
stos
or
fisttpll
mov
and
lea
add
xor
stc
cmp
jb
cmp
lret
outsl
adc
aam
cmp
jb
call
add
js
movl
jo
adc
cmp
cld
jmp
adcb
add
sbb
andb
shrb
push
xor
call
out
rcrb
mov
into
gs
fs
cld
inc
add
mov
jne
ror
push
push
jecxz
mov
clc
sarb
pop
jne
hlt
cmp
lea
rcrb
mov
pop
xor
mov
cli
decl
ret
xor
xchg
jo
or
mov
jo
loope
mov
loopne
jle
jo
sub
subb
and
jbe
mov
jne
adc
mov
jo
sarb
or
cli
lock
test
cmp
rcr
in
xchg
push
lods
inc
push
xor
orb
jae
lock
add
pop
xor
fadds
cld
mov
jmp
add
sarl
inc
aam
sbb
ret
and
pop
adc
shl
or
rcll
fildll
xor
shlb
inc
add
pop
xor
add
xchg
fidivrl
test
or
pop
decl
mov
call
xchg
incb
mov
dec
or
lahf
lock
adc
pop
add
and
stos
cmp
lods
or
dec
jmp
add
or
mov
mov
or
imul
pop
jp
cmp
add
push
stos
in
cmp
in
or
or
rcrl
sbb
or
out
out
in
es
cmpsb
or
push
dec
pusha
cld
rcrl
rorb
and
aaa
xchg
adc
pop
mov
or
adc
fbstp
mov
stos
sbb
dec
sti
call
or
xchg
add
push
sub
mov
xor
adc
dec
mov
rorb
or
movl
in
inc
push
push
call
out
je
popa
ds
xor
icebp
dec
hlt
pushl
lock
push
clc
adc
cs
jge
mov
push
add
and
push
cmp
or
dec
or
sbb
and
out
and
mov
adc
call
mov
xchg
mov
insb
sti
outsb
mov
pop
test
mov
mov
sub
sub
nop
mov
add
sub
sbb
cmp
mov
call
stos
xor
xor
mov
sarb
in
pop
es
test
dec
mov
mov
xor
jl
add
sub
cld
scas
push
lods
loop
inc
jno
movsb
div
jp
into
push
add
push
and
jne
cmp
arpl
pusha
dec
mov
les
xor
pop
cld
xor
xor
sahf
cmp
xorl
pop
pop
sbb
ret
sbb
jo
inc
pop
cli
mov
mov
sbb
push
jbe
mov
ret
in
jle
xorb
aad
arpl
mov
adc
pushf
aaa
ret
es
das
clc
add
icebp
lret
mov
inc
mov
fwait
les
pop
push
mov
cmpw
inc
mov
xchg
jne
xchg
sar
mov
add
orl
inc
add
cmp
pop
inc
shll
jg
filds
jo
jg
jno
lret
add
xorl
push
jg
cmc
data16
xor
clc
add
popa
add
sub
stos
xor
cld
jge
push
and
fnstenv
inc
rcrb
shl
adc
bound
jge
adc
xchg
scas
out
inc
xchg
addb
lcall
dec
adc
cmp
jne
pop
ret
orb
in
pop
inc
xor
sbbl
xchg
dec
and
or
testb
or
outsl
or
je
mov
sbb
not
push
fcom
icebp
xchg
lret
in
adc
push
addb
add
fisubs
sub
scas
mov
jle
loope
or
pop
mov
neg
add
and
mov
int3
pushf
add
dec
cmp
cmp
repz
sahf
mov
add
xchg
or
xchg
pop
xchg
stos
and
sub
cmp
andl
cld
ret
mov
jb
cmp
sub
idivb
pop
adc
inc
cmp
ret
je
add
inc
or
cwtl
inc
lock
jb
decl
jne
cmpb
rcll
cmp
inc
test
mov
dec
negb
push
sub
fcoms
aam
cmpsb
cmp
mov
lock
or
ss
add
and
pushf
rclb
sti
loop
cmc
popa
sub
test
and
and
pop
mov
pop
or
popf
cmp
or
xchg
and
incl
andb
popa
dec
cmp
sub
xorb
pusha
fcomip
outsl
sub
je
imul
add
inc
inc
push
push
jbe
adc
add
add
sub
or
dec
mov
es
push
add
inc
push
call
jnp
leave
orb
push
call
mov
mov
cmpsb
sub
and
push
cmp
xchg
hlt
rclb
push
rcrw
jg
clc
mov
add
push
pop
aaa
adc
adc
ja
mov
mov
sarb
jl
cld
shlb
imul
adc
scas
aam
popf
sub
adc
mov
movl
rorb
pop
add
sub
ret
fmulp
mov
and
cmpb
pusha
mov
mov
roll
xor
lods
ja
jb
and
add
adc
das
enter
pushf
mov
sub
mov
mov
cs
pop
inc
and
and
ret
and
int
mov
mov
orb
adc
xor
dec
stos
sub
push
aaa
movsb
icebp
cmp
mov
adc
rclb
dec
hlt
lea
lods
add
insb
and
cmp
dec
mov
sub
shlb
subb
mov
shlb
es
mov
add
mov
jno
fwait
dec
or
add
mov
out
cmp
adc
cmp
sti
jl
xorl
call
mov
ret
jmp
shlb
cli
adc
add
aam
rcll
add
adc
stos
shr
leave
pop
out
mov
mov
mov
pop
mov
adc
divl
rcrb
add
fdivrs
push
test
icebp
fbstp
data16
xor
in
leave
push
inc
xor
and
mov
sarl
stc
and
adc
cwtl
add
test
xor
repnz
enter
mov
xor
mov
add
inc
dec
fwait
orb
hlt
jle
fisttps
ljmp
mov
icebp
cmpsb
andb
cmp
xchg
jp
mov
rcl
loop
rcrb
xor
and
in
in
pop
test
insl
lret
push
pop
bound
aam
mov
or
cmp
adc
mov
pop
movsb
ds
pusha
add
inc
mov
dec
pop
push
call
subb
inc
sbb
add
sbb
shlb
mov
call
jne
icebp
test
out
hlt
pop
leave
test
pop
or
push
inc
sbb
je
pop
jecxz
lcall
mov
dec
or
inc
or
sbbb
popf
sub
addl
and
call
jp
sbb
test
rorb
push
mov
daa
xchg
mov
clc
sub
fcomip
call
into
or
test
or
pusha
jns
mov
lock
jb
inc
push
in
push
subb
pop
cmc
jbe
mov
shll
out
cmp
mov
stos
mov
or
cmp
pusha
add
adc
clc
out
dec
jecxz
loopne
or
jne
arpl
mov
adc
and
testb
je
dec
outsl
or
je
loopne
mov
and
filds
loopne
aam
xchg
inc
adc
pusha
pop
inc
and
mov
lea
inc
xor
test
ss
cmp
push
test
pop
xor
loope
pusha
inc
loopne
and
aad
ret
cmp
es
andw
fistps
adc
loopne
add
lock
inc
adc
rorl
mov
xor
lcall
sbb
in
cltd
or
jg
inc
xor
xor
jmp
jb
inc
dec
mov
sbb
faddl
pop
loopne
sub
push
insb
inc
xor
xchg
clc
fadds
popa
adc
add
loope
dec
push
jb
or
jle
rcrb
lods
sub
dec
xorb
ljmp
mulb
lock
je
adcl
jne
adc
adc
push
loope
rcrl
ds
mov
add
data16
shll
mov
mov
sbb
lods
dec
adc
loope
jb
and
add
push
subb
pop
loopne
sub
mov
les
pusha
add
jg
movsl
push
push
or
stos
and
xor
pop
ds
jl
pusha
mov
mov
inc
dec
adc
fcmovb
push
hlt
push
pop
fs
jl
add
das
adc
mov
out
xchg
addl
jne
xor
loopne
cmp
je
test
cld
mov
ljmp
shr
jp
adc
jmp
pop
adc
add
je
inc
jbe
stos
sub
jmp
sub
or
mov
pop
mov
adc
xor
loopne
test
mov
jbe
cmp
loopne
andl
xor
loopne
cmp
jl
adc
sbbl
sub
push
lea
data16
jmp
mov
sub
mov
add
cli
negb
lret
pop
dec
fisttpl
sbb
jo
rcr
add
adc
add
scas
stos
xor
add
mov
stc
mov
inc
mov
into
pop
icebp
cltd
inc
add
jmp
mov
push
push
or
stos
rclb
pop
inc
orb
pop
mov
push
test
loope
cld
mov
and
sahf
decl
ret
or
xor
inc
push
add
and
out
push
mov
jl
lret
jg
idivb
dec
dec
sub
xor
xor
mov
and
inc
adc
js
mov
push
or
mov
stos
dec
ja
mov
lea
add
xchg
adc
pushl
add
jne
adc
add
pop
aam
add
ja
lock
data16
xor
jo
mov
push
mov
add
jne
xor
add
and
jle
cmp
lock
cltd
imul
or
mov
cmc
add
xchg
cmp
add
lea
aam
jmp
data16
and
jmp
push
or
pop
mov
outsl
decl
xchg
mov
and
rdtsc
adc
mov
add
push
lock
lea
ret
or
sbb
or
cltd
orl
cmp
add
xor
and
ljmp
dec
jmp
hlt
aaa
mov
sbb
mov
aas
or
fucomi
mov
add
data16
iret
mov
jmp
pop
fdivl
cmc
je
insb
or
mov
pusha
jp
mov
or
jmp
movsl
push
cld
jne
jno
mov
sub
xlat
jb
repnz
xchg
sub
cmp
mov
adc
fdivrp
fdivr
xor
pop
xorb
incb
icebp
or
test
mov
cwtl
int3
xchg
pop
repnz
idiv
push
xchg
mov
adcl
add
jg
lock
dec
push
or
pop
lock
fwait
jle
push
dec
jg
cmpsl
je
clc
inc
je
or
adc
je
and
pop
add
je
mov
lea
add
mov
addr16
add
push
mov
xor
xchg
adc
sbb
jge
add
mov
add
imul
pop
pusha
adc
dec
mov
lret
lds
sbb
adc
cli
pop
inc
inc
and
xor
push
jmp
fbstp
and
jae
lock
or
jmp
fsubs
es
nop
add
jo
xchg
dec
dec
add
nop
mov
adc
testb
and
pop
mov
in
sbb
icebp
cmp
sbb
dec
incl
insb
add
jb
add
jne
mov
xorl
sti
mov
adc
repz
pop
xchg
outsb
adc
jl
out
or
pop
cwtl
test
xor
notb
out
mov
adc
imul
out
and
xor
cmp
mov
pusha
jno
xor
mov
jle
jne
add
jmp
adc
mov
in
jmp
sti
add
js
jo
lock
insb
jmp
lahf
lock
jge
cli
imul
add
push
push
out
jmp
mov
repz
in
fmuls
inc
adc
or
pushf
and
notb
popa
pop
push
xor
adc
dec
pusha
jmp
mov
loopne
loopne
jb
jne
ret
push
sub
mov
push
ljmp
add
outsl
push
dec
adc
ds
lcall
cwtl
test
mov
mov
les
icebp
dec
inc
sbb
xchg
popf
repz
xor
and
pusha
push
cmp
sbb
adc
dec
clc
xor
pop
lods
adc
fildll
arpl
dec
decl
push
mov
adc
or
lock
mov
ret
repz
jg
dec
cmpb
lock
mov
mov
jg
push
repnz
inc
pop
xor
add
and
iret
sub
jge
mov
outsb
push
jo
jmp
mov
test
xchg
rcrb
or
xor
push
shr
sub
sub
cmc
jle
cmp
jl
mov
cmp
psllw
jno
add
orl
jle
add
xor
inc
inc
jle
pop
xchg
outsb
push
shl
add
sbb
rorb
ljmp
cmp
xor
and
jo
push
mov
stos
decl
mov
cmpsb
or
push
and
aaa
mov
mov
test
and
bound
cmpb
or
inc
cmp
sbb
unpcklps
push
ret
cmpb
imul
int3
or
fnstenv
cmpsl
insb
fdivl
push
in
pop
inc
inc
ret
xor
stos
in
pop
aas
or
or
xor
nop
lock
lods
xor
jnp
pop
xor
adc
lock
mov
dec
gs
ss
xor
fcoms
push
mov
jo
test
dec
mov
mov
add
adc
or
ljmp
cmc
fs
stos
and
jno
div
dec
out
pop
sub
aaa
and
mov
je
inc
mov
dec
icebp
pop
adc
jno
jo
jno
dec
sbb
rolb
loop
inc
and
lret
jae
push
xchg
jae
cmpsb
lock
enter
fs
sub
cmp
xor
jae
or
adc
das
xor
sbb
lods
mov
lcall
inc
sub
repz
pop
shl
add
push
pushf
jmp
adc
push
pop
mov
push
divl
stc
mov
cld
add
sbb
xchg
pop
sbb
fwait
lcall
add
mov
and
divb
ror
pop
mov
mov
pop
loopne
lock
xor
jg
mov
cs
hlt
add
icebp
add
mov
repnz
shrd
icebp
sbb
inc
stos
ja
pop
and
in
decl
add
mov
nop
or
dec
clc
inc
fstpl
jbe
repz
icebp
add
jg
pop
xor
mov
sbb
mov
sub
stc
add
mov
das
adc
or
pushf
mov
fcmovnbe
sub
rorb
push
rcrb
jb
jnp
ljmp
scas
jmp
scas
jnp
lea
sbb
pop
or
push
jmp
jbe
mov
mov
repz
sbb
jmp
gs
sbb
insb
mov
cmp
jno
lret
mov
pushl
push
pusha
mov
add
dec
loopne
dec
push
hlt
push
mov
movsl
sbb
xchg
test
add
sbbl
sbb
addl
hlt
int3
rorb
jne
nop
nop
mov
loopne
pop
mov
add
jbe
outsl
push
jg
imul
filds
pop
rcll
push
aas
inc
outsb
call
dec
and
jmp
pop
pop
addb
outsb
je
stc
je
push
lahf
add
add
insl
clc
fwait
push
add
or
jp
and
push
pop
adc
and
add
ja
xor
add
or
add
push
pop
xchg
clc
or
sub
loop
adcl
mov
dec
cmp
jle
or
push
js
cmp
mov
rorb
andl
test
daa
xchg
subb
outsl
push
cli
lock
test
push
movsb
or
fcmovnbe
pop
or
sbb
cmp
mov
cmpsb
mov
inc
outsb
test
or
ret
incb
inc
adc
mov
and
cmpsb
mov
xchg
sbb
sub
sub
adc
lock
xchg
pop
ret
add
xor
loopne
filds
stc
rolb
movb
ret
dec
or
adc
sarb
push
dec
shlb
mov
cmpsb
rolb
jne
xor
adc
mov
mov
sub
xchg
lods
mov
sub
insl
push
sarb
stc
jbe
sarb
adc
rclb
rorb
jne
shl
std
mov
imull
jns
sbb
movl
add
lret
and
sarb
dec
test
jle
adc
jg
mov
cmc
push
push
and
and
sbb
lds
jmp
xchg
push
and
jnp
mov
insl
loop
xor
mov
sbb
and
outsb
push
mov
adc
rolb
outsb
fisubrl
pop
mov
int3
lret
out
in
inc
popl
repnz
mov
or
enter
jg
push
lods
inc
pop
sub
jne
rorl
adc
fistps
ret
sub
adc
inc
je
dec
mov
dec
rcrb
add
clc
scas
out
imul
orb
push
inc
arpl
clc
outsb
loopne
arpl
shl
add
mov
das
add
and
jp
cmc
sub
mov
pop
xorl
hlt
test
nop
cmp
adc
das
or
push
test
mov
or
push
adc
adc
repz
or
adc
fwait
movsl
cmp
sbb
dec
je
loop
lock
pop
jle
das
hlt
loop
sbb
sbb
push
movsb
jne
cs
sbb
ret
sbb
sbb
inc
scas
mov
je
add
or
loop
pop
dec
ltr
repnz
test
push
mov
mov
les
test
je
xor
xchg
sub
xchg
mov
jbe
rep
or
dec
push
rorb
sbb
and
data16
rorb
sbb
adcl
les
sarb
jp
iret
jmp
enter
mov
inc
call
test
push
xchg
lea
or
sbb
sti
mov
loopne
fcomip
test
dec
sub
mov
or
add
std
das
shlb
testl
sub
popa
or
icebp
je
lock
mov
push
outsb
orl
sbb
add
jmp
add
popf
sbb
nop
add
dec
call
cmpsl
test
cli
or
push
loope
cmp
jne
xor
or
adc
lods
roll
xor
adc
xor
mov
cli
inc
gs
insb
leave
add
or
addr16
sub
filds
int3
pusha
shl
call
and
xor
adc
loopne
or
push
mov
das
or
fiaddl
mov
test
jmp
jmp
clc
or
insl
sbb
movb
repnz
push
mov
data16
je
push
mov
pusha
xlat
popa
jo
repnz
push
test
loopne
inc
push
inc
das
ljmp
inc
xchg
xchg
xor
les
pusha
mov
ret
mov
adc
mov
loopne
fldt
shl
inc
sub
pop
push
jle
add
and
add
or
mov
and
mov
test
add
orb
adc
testl
ss
ficoml
push
fbstp
adc
into
loope
adc
lret
dec
addb
test
cmp
int3
shll
sti
mov
ss
push
popa
or
mov
mov
cmp
jg
jl
mov
inc
nop
leave
add
aad
inc
or
out
add
cld
xor
pop
sub
rorl
push
loopne
adc
mov
adc
decl
loopne
adc
jle
hlt
ds
cmpsl
pusha
push
push
call
loopne
pusha
stos
and
pop
mov
jmp
in
cltd
lret
jae
pusha
lds
into
pcmpgtb
sbb
std
jg
push
sub
jb
lods
loopne
das
loopne
movsb
inc
add
enter
xor
mov
mov
sbb
in
cmp
and
add
mov
mov
cs
movsl
mov
repnz
or
add
dec
sbb
jg
js
outsb
cmp
incl
bound
mov
mov
das
jno
adc
rolb
mov
or
js
lea
movsb
xor
adc
ret
shrl
fisttpl
lret
mov
or
mov
jp
mov
jno
scas
clc
mov
fildl
test
mov
jo
or
and
subb
daa
lcall
sbb
sub
or
jl
loope
les
rclb
cmp
mov
rcr
je
scas
xor
and
mov
cmc
push
je
push
pop
ljmp
out
cmp
arpl
xor
fdivr
mov
stc
mov
xor
aam
sbb
xor
or
je
fiaddl
mov
jg
mov
jmp
mov
movaps
rclb
or
les
xor
xchg
nop
add
test
xor
adc
cmp
por
add
lds
jo
decl
jbe
mov
pop
icebp
add
sahf
icebp
shlb
push
test
lods
push
mov
mov
and
inc
incb
jo
int
fisttps
jne
aas
ja
inc
add
and
adc
xchg
xor
inc
add
les
stos
ret
test
in
fisubl
sbbb
jl
mov
roll
mov
lds
sub
push
leave
shr
insl
fisubrl
sub
outsl
enter
call
decb
leave
sbb
in
imul
inc
mov
lcall
add
pop
push
jno
xchg
dec
loopne
add
mov
pop
xchg
add
inc
rclb
in
rcr
fisubl
add
rcll
out
inc
adc
call
sub
inc
push
jge
sti
ficoms
and
or
fcmovnu
cmpsb
mov
sbb
pop
int
add
adc
push
into
inc
jp
mov
test
add
jbe
adc
push
movsl
mov
shlb
pusha
mov
cld
or
pop
push
sahf
add
xor
dec
sbb
add
or
adc
push
xor
icebp
fimull
xchg
pop
jb
push
clc
push
adc
ja
push
sub
js
xor
mov
pop
outsl
and
mov
push
hlt
outsl
adc
adc
or
jno
icebp
xchg
stos
dec
adc
push
cli
pop
dec
and
push
mov
test
cmp
mov
cld
mov
in
inc
stos
pop
pop
jg
pop
push
lcall
and
pop
jne
movsl
loopne
les
test
xchg
pop
js
int3
mov
ds
add
add
push
mov
xor
mov
mov
xchg
push
call
ret
pop
sti
push
xor
imulb
add
push
enter
test
jnp
hlt
sbb
xor
div
mov
pop
sub
data16
or
pop
jp
add
test
cmp
push
dec
cmpsb
in
ja
aas
mov
push
jge
cmpsl
call
fbld
ss
call
mov
push
repnz
pop
das
mov
adcb
call
jno
out
mov
mov
jl
push
and
add
cmp
call
je
jo
aam
jp
jo
push
cmpb
pop
addr16
jns
pop
jmp
das
add
clc
out
lock
xchg
add
mov
lret
push
add
adc
or
jno
inc
dec
inc
ret
xchg
xchg
adc
adc
mov
add
sbb
insb
outsb
sbb
cmp
adcb
push
jo
xor
cli
clc
rorb
fisttpl
fldl
and
jo
add
fwait
inc
and
xor
mull
shl
adc
lock
subl
push
cli
lcall
add
and
jo
mov
mov
inc
dec
xchg
subb
popa
pop
jbe
adc
push
inc
adc
test
insl
inc
sub
int3
repnz
and
dec
inc
call
lods
pop
les
aas
insb
scas
lea
arpl
fldenv
movb
push
adc
fdivp
call
in
jb
inc
dec
rcrb
mov
ret
jmp
clc
in
das
jb
or
mov
cs
xor
and
add
outsb
sbb
jb
movsb
add
mov
adc
adc
iret
adc
push
dec
and
jno
or
pop
mov
xchg
lcall
jl
lea
movsb
xor
adc
mov
test
mov
ljmp
jnp
sbb
push
movsb
lock
push
pop
inc
loopne
cli
lods
push
cmc
add
sub
jnp
outsb
test
jl
aas
push
xor
xchg
xchg
dec
mov
icebp
adc
mov
push
and
or
cmp
insl
fmuls
push
sbb
push
cmp
pusha
lds
roll
sbb
xor
scas
xor
or
dec
cwtl
push
call
adc
push
into
add
xor
mov
add
jno
icebp
inc
ljmp
repz
jg
dec
outsb
mov
stc
divl
addl
je
xor
push
shrb
gs
int3
push
lock
out
xor
aam
and
incl
add
mov
je
dec
out
adc
mov
loope
lcall
pop
mov
dec
std
incl
xor
xor
push
lock
jo
inc
push
push
mov
icebp
lods
jno
scas
and
push
and
str
inc
movsb
adc
and
repz
or
divb
xchg
push
sub
movl
xor
mov
inc
mov
pop
icebp
add
xchg
mov
jle
push
ss
in
add
sub
dec
out
xor
push
inc
nop
xor
test
push
clc
inc
push
or
dec
mov
jl
add
fdiv
and
sub
pop
adc
mov
mov
dec
cmovle
nop
mov
inc
add
cltd
dec
sbb
clc
bound
xchg
hlt
enter
pop
lods
pop
jmp
adc
sti
je
pusha
jbe
pop
dec
ret
in
push
adc
fiaddl
adc
or
je
xor
fstpt
je
xor
cwtl
cli
mov
add
adc
xor
xchg
mov
mov
push
inc
jb
or
int3
jl
cmc
push
imul
insb
cld
icebp
mov
add
cmp
bound
jbe
aam
js
fcmovbe
sub
fs
pop
ja
sub
add
inc
incb
lods
sti
faddl
xor
add
fcoms
sub
xor
fdivrs
cs
pushf
xor
out
jbe
mov
inc
jbe
fdivr
aaa
rcrl
jmp
jl
adc
add
out
cli
jge
repz
add
inc
add
cmp
mov
sahf
nop
mov
inc
cld
pop
jmp
add
call
cmpl
cmp
adc
adc
xchg
add
pop
or
jae
dec
in
rorl
aaa
rcll
ljmp
or
add
add
mov
xor
aaa
jne
and
ja
pop
aam
jmp
or
enter
subb
pop
add
sub
or
add
in
push
cld
into
xchg
cwtl
push
or
outsl
adc
mov
pushf
addr16
pop
add
clc
cmpsl
orb
add
or
sbb
pop
out
in
cld
pusha
rorb
cmpb
adc
xorb
movsl
push
in
xor
jnp
jb
cs
mov
pcmpeqw
call
and
cmp
mov
mov
imul
mov
in
adc
pop
mov
sub
cmp
add
call
orl
cmp
sub
xchg
jbe
sub
add
loopne
bound
mov
pushf
sbb
jbe
push
jo
push
inc
mov
adc
or
inc
cmp
sbb
add
sbb
ret
nop
adc
aas
pop
pop
inc
ljmp
lods
das
fisubrl
adcb
sub
movl
js
jno
clc
test
icebp
adc
mov
mov
fistl
mov
xchg
or
add
adc
mov
hlt
inc
out
add
pop
loope
xor
mov
rcr
shr
or
mov
das
rcll
dec
or
xchg
lods
into
addr16
mov
ret
sub
ss
sub
mov
mov
add
mov
add
mov
push
filds
sti
pop
rcrb
jge
and
push
push
push
imul
or
inc
pop
xor
mov
out
sbbb
sbb
negb
mov
add
sahf
or
ror
dec
adc
add
jmp
mov
aam
sbb
mov
add
sarl
stos
adc
js
decl
icebp
add
add
jo
mov
outsb
clc
jne
push
push
xor
fldt
or
mov
jbe
or
dec
push
lods
cs
xchg
icebp
sbb
pop
cltd
call
xchg
sarb
fsubp
xor
mov
rcr
std
push
adc
mov
ret
sbb
add
and
ljmp
loop
add
jmp
and
sbb
rclb
repnz
mov
movzwl
popa
jo,pt
inc
xor
and
xchg
adc
adc
test
test
cli
scas
or
dec
cmp
jae
push
test
inc
pop
or
or
or
or
dec
loop
stos
add
xchg
inc
sti
out
shlb
aaa
pop
pop
leave
jmp
xchg
add
push
pop
ja
pop
sub
mov
mov
outsl
pusha
jg
rolb
pusha
movsl
cld
adc
or
fwait
push
pusha
dec
xchg
loopne
push
andl
dec
xchg
arpl
lcall
cmpsb
add
adc
pusha
add
fstl
add
test
mov
adc
nop
add
push
xchg
pusha
adc
loopne
out
adc
cmp
aam
fsubrs
push
or
dec
jbe
sar
adc
mulb
scas
push
mov
loopne
loop
cmp
pusha
and
aaa
mov
dec
clc
ret
adc
fmull
lea
bound
inc
add
cmp
incl
add
push
xchg
cmp
sub
mov
ret
cmc
jmp
rcrl
ret
and
dec
push
lea
loopne
push
or
sbb
shlb
nop
popa
add
mov
inc
sbb
scas
fidivl
mov
adc
pop
sahf
nop
jl
int
fsubrl
jl
jle
pop
sub
add
ret
pop
and
test
subb
push
arpl
repnz
rorb
insb
outsl
or
mov
or
sub
add
and
add
cmpsb
loopne
mov
add
loope
and
mov
je
std
adc
sub
loop
cmp
or
mov
cmp
cmp
loopne
mov
scas
xchg
add
arpl
cmp
adc
movsb
pusha
push
in
popf
sbbb
push
xor
jg
ljmp
cld
mov
xor
or
push
adc
lock
sbb
jne
popa
sbb
cli
decl
sbb
lea
jne
mov
pop
add
jno
push
jg
and
push
addl
adc
mov
loopne
pop
inc
pusha
or
jbe
and
inc
mov
push
cmpsl
push
loop
inc
cwtl
das
addb
push
pop
jnp
shlb
push
stc
subb
inc
mov
enter
dec
jno
cmp
jp
add
and
mov
bound
mov
fsubl
or
dec
mov
mov
or
sub
pop
xlat
jl
bound
sub
pusha
adc
push
hlt
sub
popa
inc
cli
cmpl
and
ss
loope
push
inc
test
cmp
sub
cmp
jg
outsl
adc
popa
mov
loope
jecxz
push
push
mov
subb
popa
and
popa
mulb
sbb
add
add
popa
ss
pop
pop
pop
cmp
ds
adc
fwait
add
inc
pop
addb
ljmp
mov
insl
sbbb
call
pusha
sub
push
call
jmp
adc
pusha
add
and
push
push
mov
add
or
push
loop
fwait
sub
and
movsl
add
cmp
jbe
pop
add
add
test
sub
adc
repz
mov
push
xor
ss
movl
ret
add
jbe
add
inc
xchg
andb
jp
mov
add
adc
les
stos
xor
adc
outsb
lock
add
cmp
add
inc
dec
loop
lret
jo
inc
fldl
ss
cmpl
xor
sub
jl
call
or
cmp
cmp
inc
jmp
and
ret
jg
inc
dec
out
rcl
shll
inc
in
out
adc
sub
in
jle
pop
call
add
clc
loopne
mov
adc
and
and
lods
xor
mov
aad
aaa
notb
or
rolb
aam
test
mov
add
or
jle
jl
add
ljmpw
push
mov
sub
mov
and
test
mov
sbb
or
shlb
xchg
mov
repz
sbb
hlt
mov
ss
xchg
jge
lret
sbb
lahf
call
push
mov
mov
add
popf
jbe
stc
mov
add
adc
es
mov
add
sbb
add
or
outsb
xchg
mov
mov
adc
call
and
jg
inc
cmpl
push
jb
idivl
push
cmp
push
and
push
test
adc
and
stos
jo
jo
add
and
pop
xor
clc
mov
cli
in
and
sbb
lock
outsl
cs
loopne
in
jmp
mov
xchg
pusha
iret
add
and
data16
mov
shlb
fcos
adc
jmp
dec
adc
adc
addl
inc
loop
sbb
lock
cmp
pop
inc
adc
add
add
push
push
ds
mov
or
lods
xor
ss
add
pushl
test
pusha
adc
lahf
mov
scas
xor
xor
loope
enter
or
inc
push
inc
mov
mov
or
and
cmpsl
call
jecxz
add
and
push
lods
data16
pop
testb
dec
inc
in
adc
inc
or
lods
int
sub
test
scas
lods
push
xorb
repz
test
mov
xchg
add
cmp
loop
or
or
xchg
cwtl
add
sub
push
add
outsl
push
loop
sbb
pop
mov
sbb
ret
aaa
add
cmpsb
push
adc
xchg
mov
xchg
add
inc
cmpsb
lahf
add
cld
dec
popa
ja
addl
out
add
call
push
lock
dec
pop
test
js
jl
xor
call
stc
movsb
xorb
mov
mov
cwtl
push
xchg
sub
mov
inc
mul
inc
clc
decl
je
icebp
jb
in
mov
xchg
add
clc
clc
sbb
pop
sub
jle
clc
rolb
loope
or
cmpsb
adc
or
and
lock
test
jno
call
push
add
jno
adc
jbe
lock
mov
dec
adc
subb
mov
mov
sub
cld
and
lods
mov
xor
aas
cltd
pop
inc
cmp
ljmp
mov
mov
pusha
mov
repz
cmpsb
mov
fs
pushf
push
xchg
mov
or
pusha
cld
push
ljmp
or
mov
adc
jmp
jb
fbstp
scas
jne
lock
push
push
cmp
pop
mov
mov
add
ret
lret
sahf
call
dec
ret
icebp
adc
daa
test
adc
xor
or
dec
lods
inc
jle
cmpsb
push
je
sbb
lods
push
push
addb
inc
lods
jge
inc
ret
push
cli
or
out
loopne
xor
inc
fimuls
ja
fistpl
mull
add
add
jmp
cmp
jmp
int
push
les
bound
ficoml
adc
ret
and
or
add
std
je
ljmp
icebp
mov
inc
add
icebp
jmp
or
or
lock
push
jmp
xor
pusha
inc
or
jmp
mov
test
jmp
xchg
dec
out
enter
and
lcall
or
das
jmp
xor
rcll
xchg
push
or
add
mov
xchg
add
out
pop
mov
std
xchg
inc
pop
leave
cmp
data16
jnp
rorl
xchg
movsb
add
dec
xor
xchg
xor
lret
int
data16
sbb
pushl
insl
add
and
mov
call
jo
mov
push
add
xor
lret
in
adc
mov
xchg
aaa
aad
sub
mov
js,pn
inc
loopne
sub
movl
adcl
jp
add
mov
cmpsb
xchg
mov
mov
push
repz
add
and
pusha
in
push
inc
or
or
mov
cwtl
pop
pop
mov
and
jno
pop
and
cmpb
int3
add
xor
mov
mov
push
jo
mov
mov
mov
push
jno
sbb
arpl
scas
hlt
imul
faddl
ljmp
add
push
add
sti
in
jle
cmp
cli
add
test
arpl
dec
push
cld
jg
call
push
push
mov
mov
adc
iret
and
jno
jno
dec
add
shrb
stos
std
outsl
mov
fs
push
jo
add
adc
and
ljmp
insl
mov
jne
loopne
xchg
adc
pop
inc
xor
sbb
pop
sub
dec
push
mov
data16
adc
icebp
add
aas
jo
inc
test
cli
pop
mov
adc
mov
push
es
lahf
and
adc
movsb
fiadds
repnz
inc
enter
or
jo
jo
mov
mov
add
xchg
movsl
mov
adc
jno
adc
lock
bound
pop
cld
add
dec
jge
xchg
stos
outsb
adc
cld
insl
mov
pop
pop
sbb
in
jle
enter
dec
orl
enter
mov
and
movsb
loopne
cld
push
push
jo
jno
adc
sbb
out
sbb
mov
call
lods
call
test
pushf
dec
pop
jp
test
xorb
pop
sbb
fistpll
jge
cmp
dec
mov
sbb
push
lods
jle
push
jo
mov
std
pop
xor
pop
je
adc
mov
inc
jbe
push
call
data16
jne
cmp
rolb
das
adc
movsl
shrb
addb
push
mov
stos
stos
jo
jae
xchg
xor
das
mov
je
xchg
mov
cmpl
and
inc
add
sbb
in
les
repnz
fstl
mov
jbe
pop
outsl
aad
sub
insl
testb
test
add
es
cli
cmp
rolb
pop
push
xor
jo
push
or
push
push
ja
pop
sbb
add
or
mov
les
xchg
dec
mov
inc
lgs
test
xchg
push
fs
add
int
adc
cwtl
xchg
push
mov
fdivr
add
jne
lods
scas
lods
mov
mov
jbe
jb
xchg
mov
add
xor
mov
jb
les
add
icebp
mov
add
and
sbbb
add
nop
addb
ret
cmpsb
push
xchg
xor
xor
scas
and
lods
andb
andb
cmp
in
test
xor
test
push
aam
cwtl
addl
es
fidivs
or
sahf
bound
mov
dec
sti
shrb
add
add
in
rolb
adc
test
add
adc
sbb
add
add
and
cmpsb
fiadds
sub
inc
sbb
movb
je
out
data16
out
ret
push
pusha
inc
mov
call
cmp
or
pop
in
pop
sub
les
int3
cli
test
dec
into
test
jno
fistl
dec
mov
test
cmp
sub
jnp
push
in
mov
je
xor
imul
lods
je
sbb
outsb
orb
shrb
push
xchg
int3
pop
pusha
jle
dec
jno
mov
outsl
xchg
ret
add
shrb
add
rolb
or
mov
push
ret
rorb
xchg
cld
add
push
adc
push
mov
sbb
mov
adc
add
notl
sbb
sbb
ret
inc
je
call
lea
shlb
shlb
movsl
mov
call
imul
push
sub
adc
das
rclb
adc
out
aas
sbb
or
scas
add
and
pop
cld
adcb
pop
and
mov
inc
or
lds
clc
add
pop
shrl
testb
mov
rorb
icebp
arpl
adc
push
rol
dec
adc
lods
clc
push
or
push
push
pop
inc
enter
js
test
and
xchg
popl
sbb
fsubrs
shl
xchg
jecxz
push
or
je
xor
insl
push
xchg
xchg
push
pop
adc
mov
mov
push
ljmp
pop
jl
jmp
xor
cmpps
cmp
mov
xor
xchg
je
cmpb
leave
pop
adc
push
rcr
lock
cmp
push
fs
inc
rorb
sti
adc
test
mov
sbb
lock
pop
inc
in
push
push
pop
pop
jp
fcoms
lret
and
and
clc
daa
lods
adc
xchg
stos
in
push
mov
jne
hlt
loop
add
mov
insb
cld
add
loopne
std
icebp
mov
mov
test
ljmp
or
mul
sbb
push
xchg
mov
fprem
sbb
popa
xchg
pop
push
sub
icebp
mov
call
xor
push
mov
incl
aam
push
xchg
loopne
dec
add
movlps
or
mov
test
aam
inc
and
xchg
push
mov
push
vmread
scas
cmp
cmpsb
or
jne
es
fcmovb
aam
add
sub
aaa
adc
xor
incl
or
sbb
adc
loop
lea
incl
inc
xor
loopne
movb
sub
loopne
loopne
add
je
add
fistl
sbb
cmp
or
jbe
aad
jb
lret
add
or
cli
loopne
sbb
fcompl
add
orb
add
movb
bound
mov
add
bound
jns
push
scas
adc
sbb
test
cmp
xchg
mov
fidivrs
int3
jl
mov
ljmp
inc
lock
test
je
test
add
mov
push
rorb
popa
push
ljmp
sbb
lea
add
sub
enter
xor
push
aam
push
jl
je
or
add
push
mov
ss
add
add
popa
cmp
loope
adc
push
ss
jnp
cmp
or
popa
pusha
jbe
incl
or
jne
mov
fiaddl
pop
adc
push
lock
dec
sbb
ret
adc
cmp
insl
scas
add
add
cmp
ja
or
add
insb
add
ss
dec
adc
sub
mov
add
dec
push
cmp
mov
pushf
push
sbb
mov
shll
push
mov
test
ds
loopne
push
test
bound
add
dec
mov
push
sub
scas
sti
jmp
loope
insb
inc
add
test
dec
cwtl
or
inc
into
sub
pop
lret
pusha
pop
movsl
inc
jbe
loop
jmp
xchg
push
pop
mov
pusha
dec
push
add
movsb
loopne
je
jae
nop
pop
insl
std
xchg
clc
pusha
pop
loopne
push
inc
add
xchg
das
adc
ds
leave
call
and
xchg
test
dec
sbb
and
cltd
mov
mov
add
sahf
push
lods
and
mov
or
sub
or
rclb
loop
pop
and
je
popa
inc
lock
test
or
push
xor
test
xchg
das
xchg
shlb
mov
loope
bound
pusha
adc
loopne
fdivs
or
and
sub
loopne
or
mov
xlat
loopne
add
loopne
cmp
mov
add
add
push
dec
jbe
push
cld
jmp
pusha
push
in
loope
push
in
pop
and
das
inc
fnclex
ret
push
loopne
sub
loop
icebp
push
xchg
xor
push
push
and
pusha
and
aam
and
cmp
adcb
adc
pusha
dec
and
add
cmp
testb
cmc
dec
cmp
imul
add
adc
mov
adc
lcall
vmovaps
mov
mov
int3
sub
push
lock
sbb
dec
push
mov
inc
add
decl
in
ss
and
xor
mov
cmp
jl
mov
mov
and
adc
hlt
jl
push
add
pushl
aam
dec
and
pop
dec
sbb
pop
loopne
adc
add
jbe
adc
xor
movsl
lods
dec
dec
inc
jbe
jle
sub
outsb
dec
inc
out
pop
cmpsb
fisubs
mov
ljmp
push
jb
rclb
add
xor
or
mov
cmc
ljmp
sbb
or
sub
and
repnz
pop
sarb
insb
incl
and
fdivr
rorb
cmp
add
xor
dec
repz
adc
sahf
and
decl
scas
daa
jb
sub
sub
jo
jb
push
mov
mov
or
add
adc
lock
and
xchg
outsb
data16
cmp
sub
aaa
and
test
inc
add
inc
or
or
js
mov
sbbl
or
add
push
or
dec
mov
push
ljmp
test
mov
cmp
cmpsb
ss
jo
add
add
sti
mov
movsl
and
inc
cld
insl
ljmp
arpl
pop
lock
fists
jnp
cld
mov
movb
inc
xor
or
nop
add
jo
repnz
jmp
sub
inc
sahf
out
inc
sub
add
jbe
and
adc
cli
adc
test
or
sub
jbe
jg
call
or
inc
call
es
jo
insb
test
call
dec
nop
icebp
test
sbb
lea
mov
sub
orl
sarl
in
mov
push
push
inc
mov
mov
mov
xchg
inc
add
aad
or
mov
daa
jg
xchg
ljmp
add
loope
call
push
pop
fnstcw
dec
adc
pop
shll
pop
sub
xchg
clc
mov
cmpl
scas
les
mov
xchg
bound
mov
pop
mov
fcomp
push
adc
repz
lods
xchg
xor
jge
add
xchg
add
loop
clc
or
lods
std
cltd
js
add
and
xchg
xchg
pushf
cmp
je
mov
pop
and
cmp
sbbb
dec
pusha
data16
push
mov
ja
jle
add
enter
adc
in
sub
push
jp
or
xchg
insb
add
dec
pusha
inc
mov
cmp
nop
aam
cs
push
and
and
and
jo
mov
pop
push
lock
cmp
adcb
shll
repnz
js
out
ss
sbb
inc
sub
xor
and
std
mov
shlb
nop
dec
cmpsb
lock
pop
adc
add
outsl
adc
pop
lock
scas
and
pop
test
icebp
or
pop
add
mov
popa
das
inc
pop
pop
call
or
decl
insb
push
das
enter
cmp
sub
jmp
mov
call
or
idivb
stos
jg
dec
jb
push
aas
pop
aaa
adc
and
add
sbb
add
cmp
ja
xchg
jbe
movsb
adc
ljmp
inc
add
ja
idivb
mov
push
bound
scas
xor
mov
sbb
jg
call
pop
test
idivl
pop
jmp
cmp
add
decl
popf
inc
pop
incl
push
mov
mov
ja
cmpsb
fildl
xor
add
push
insl
addb
mov
pop
pop
adcb
mov
push
lock
ss
ljmp
jb
sbb
mov
mov
lods
inc
loop
mov
out
or
and
mov
mov
in
add
stos
inc
std
mov
jno
inc
adc
or
test
loope
and
add
pop
sub
ja
mov
inc
sbb
adc
pop
adc
testb
lock
xorl
std
fstpt
sbb
lock
je
call
xchg
fadds
stos
xor
sbb
jge
adc
ret
repnz
xor
hlt
adc
lock
xchg
mov
push
jo
decl
fmuls
test
mov
jo
movsb
icebp
pushf
xor
dec
jg
mov
dec
es
pop
jae
push
sub
cld
or
mov
lock
xchg
aaa
pop
pusha
sbb
outsb
rolb
xor
add
xchg
push
rorl
xor
jp
jno
daa
aas
sbb
test
and
jne
mov
add
push
adcl
inc
out
or
test
je
mov
ret
adcb
testb
push
mov
dec
mov
mov
int
push
cld
sbb
insb
push
mov
shl
or
sbb
push
jb
sbb
insb
shlb
push
add
jp
pop
jmp
push
in
fcomps
sbb
sbb
and
or
test
inc
rorb
jge
adc
mov
movsb
jne
and
call
push
scas
sbb
or
sub
mov
inc
xor
push
jne
call
add
shlb
out
hlt
imul
fldl
fs
or
fbld
or
jo
test
pop
and
sub
mov
or
or
push
pop
mov
sub
jo
push
mov
bound
call
out
jg
cmp
xchg
call
test
inc
jne
xor
fwait
mov
adc
adc
call
pop
push
and
fiaddl
loope
add
bnd
xchg
test
mov
xor
jecxz
ds
lock
mov
or
mov
xchg
sub
add
fs
mov
pushl
adc
inc
mov
call
jo
jl
nop
pusha
jg
ljmp
adc
cld
wrmsr
or
pop
push
cwtl
and
icebp
ret
add
cmp
adc
add
add
mov
fadds
and
jae
mov
inc
or
repz
lods
dec
cld
add
or
or
push
es
xor
std
outsl
clc
cli
adc
rolb
lock
mov
adc
pusha
inc
es
push
test
movsb
add
aam
cld
mov
push
add
xor
ficompl
mov
push
push
pop
dec
idivb
add
sti
push
cwtl
xor
je
loop
pop
mov
js
inc
fwait
dec
loop
mov
push
jp
mov
les
out
loope
stos
pop
xchg
stc
sbb
jle
xchg
in
ljmp
sbb
mov
push
add
cli
or
mov
push
fsubl
add
pusha
movb
dec
xor
mov
ljmp
pushl
outsl
sbb
sub
mov
ret
adc
pop
insb
adc
jo
lods
or
mov
jbe
pop
aas
add
test
inc
jnp
das
ljmp
push
adc
andb
or
add
cmp
jmp
js
ljmp
decl
mov
mov
push
xlat
aaa
jne
add
push
push
dec
add
mov
mov
add
aas
gs
cld
push
or
xchg
andb
adc
dec
dec
dec
lahf
pop
inc
xchg
push
aam
call
and
test
or
and
xorb
fbld
out
dec
pusha
add
cmc
mov
incb
mov
and
inc
push
cld
inc
push
into
adc
mov
insb
xchg
dec
push
sbbb
lock
jns
insb
adcl
sub
adcl
inc
xor
sbbb
sbb
pop
sub
push
cmp
inc
inc
clc
xchg
andl
stc
sub
push
sarb
ret
pop
sbb
outsb
mov
dec
sbbb
loopne
lods
or
or
hlt
ret
and
rolb
mov
orb
jg
call
jne
aas
rolb
adcb
mov
je
mov
repz
rolb
shlb
test
outsb
push
or
mov
int3
and
push
enter
dec
std
add
ja
jmp
mov
test
mov
push
and
jg
mov
add
sub
je
push
icebp
add
pop
arpl
mov
cmp
adc
mov
push
mov
jl,pt
icebp
fimuls
pop
adc
pop
pop
inc
or
cwtl
call
sub
enter
add
mov
std
jge
ret
outsb
cmp
mov
outsb
and
adc
mov
mov
clc
push
xor
lods
xchg
ljmp
ret
cmpsb
xchg
sbbb
idivb
adc
pop
push
sbb
cli
adc
pop
pop
push
lods
mov
out
add
push
xchg
rcll
pusha
add
sarb
fs
test
inc
mov
cli
jae
pop
mov
loope
pop
xchg
cmp
dec
cmp
test
loop
scas
sbb
jo
mov
pop
xor
cld
pop
lcall
les
or
or
lock
or
das
inc
pop
mov
add
push
call
add
inc
or
cmp
int3
adc
or
sub
scas
roll
jecxz
stc
sub
rclb
fistpl
add
mov
add
or
add
inc
sbb
outsb
mov
icebp
pop
lea
test
and
cmp
dec
xchg
shl
sbb
popf
cli
jmp
jmp
imul
push
jmp
aam
inc
mov
or
xor
call
dec
jl
dec
push
enter
push
in
ja
push
pop
hlt
cmpsb
sub
fisttpll
hlt
loopne
loope
xchg
loopne
dec
cld
not
add
lock
addr16
inc
je
sbb
loopne
add
ja
imul
data16
xchg
pop
out
dec
cli
and
cmpsb
jmp
jmp
into
or
loopne
mov
jp
dec
jo
test
mov
jb
inc
js
dec
out
mov
aaa
xorl
call
bound
mov
loopne
outsb
leave
add
ss
jle
jle
jle
decb
jl
add
fdivs
pop
fiadds
pusha
push
inc
pop
movsl
cmpb
call
adc
jge
bound
shr
mov
add
call
cmp
push
sbb
addl
add
addr16
fsts
add
jg
dec
push
ret
push
or
pop
cmp
test
adc
or
xorb
pushf
addl
xor
fmuls
xchg
pusha
jb
mov
or
dec
jne
push
mov
mov
jge
pop
pop
icebp
mov
mov
ret
loopne
inc
or
insl
lods
jmp
add
test
mov
push
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
jmp
bound
and
mov
mov
or
push
and
loope
sbb
clc
mov
sbb
fmuls
cmp
aaa
add
fcomps
pusha
pop
cmpsl
add
std
scas
ror
push
call
bound
out
push
add
adc
or
add
xchg
pop
xchg
es
movsl
clc
popa
push
outsb
adcb
fstpl
shlb
or
mov
and
es
adc
mov
xchg
push
sub
ja
loopne
lods
or
push
push
scas
mov
je
loop
aas
pop
push
lods
or
lock
adc
loopne
pusha
scas
hlt
notb
outsl
jl
dec
test
repnz
jg
adc
jb
lret
fidivrl
sub
or
dec
test
insb
push
test
dec
andl
into
inc
dec
add
dec
jge
mov
sbb
push
dec
push
add
insl
or
xor
scas
xor
pop
pop
test
dec
cmp
pop
mov
xchg
xor
and
or
fsubs
popa
pop
mov
je
sub
loopne
add
repz
clc
test
pop
sub
enter
xor
jbe
in
push
jmp
jnp
add
or
adc
push
hlt
adc
call
je
add
loopne
loope
mov
in
cld
mov
lcall
fisttpl
lock
adc
push
std
jl
pop
mov
adc
mov
pusha
dec
hlt
adc
fnclex
inc
aam
push
orb
loopne
testb
outsl
fldl
pop
adc
inc
ret
ja
add
jne
or
std
inc
inc
ds
push
pop
loopne
jecxz
lea
mov
stos
loopne
outsl
idivb
loopne
test
fmull
xor
add
ss
incl
arpl
dec
xchg
add
lock
loope
rcl
call
je
add
add
rclb
jb
mov
lock
ret
add
mov
and
push
pop
ja
call
add
mov
pop
iret
mov
and
push
aas
push
nop
lock
lea
lods
or
fistps
fcmove
adc
dec
and
lock
cmp
in
mov
pusha
mov
lcall
pop
addb
inc
cmpb
sbb
lock
jg
dec
out
or
add
sti
inc
add
mov
add
shlb
pop
insb
clc
mov
in
loop
ljmp
mov
ja
or
mov
sbb
xor
test
ss
push
mov
jl
push
fisttpl
push
cmp
mov
ret
outsb
outsl
mov
aaa
js
and
mov
je
cmp
adc
loopne
pushf
ljmp
adc
add
mov
pushl
addl
sbb
negb
adc
mov
adc
push
enter
cmp
hlt
imul
add
mov
aam
dec
adc
adc
sub
dec
jo
pop
mov
mov
adc
add
lock
sbb
fwait
or
lock
mov
xchg
popa
push
inc
jbe
popa
shrb
insb
add
dec
es
ficomps
adc
adc
xor
int3
popa
stos
dec
into
clc
mov
cmpsb
fimuls
aaa
movsl
mov
repz
cmp
sbb
test
jo
add
and
mov
mov
insl
jae
sub
adc
test
rolb
cltd
outsb
mov
sub
sbb
cli
lcall
mov
cli
incl
lock
or
pmaddwd
mov
mov
xchg
sub
mov
jo
inc
xor
cmp
add
jo
push
sbb
adc
fs
jmp
mov
xor
mov
add
ja
xchg
je
lock
int3
add
add
add
and
dec
push
or
incb
add
xchg
adc
fdivl
mov
mov
sub
cli
mov
jecxz
out
pop
test
ja
adc
xchg
inc
les
push
movsb
push
push
pop
hlt
lea
mov
inc
clc
fnstsw
xor
add
or
push
and
inc
mov
dec
loopne
inc
jg
lret
int3
outsb
ret
xor
push
lock
ficompl
pop
xor
imul
movsb
sub
sbb
jne
jo
jmp
jno
test
or
inc
dec
clc
xlat
fisubrl
push
lods
inc
mov
sbb
mov
daa
icebp
mov
push
ljmp
inc
mov
lods
fwait
jb
jo
icebp
movsb
call
test
or
xchg
cwtl
clc
lds
mov
mov
add
test
dec
sbb
and
push
aas
jle
dec
dec
cmp
shlb
mov
pop
xchg
shll
out
lea
mov
lods
decl
dec
call
or
or
out
insl
incl
dec
or
jo
jmp
out
clc
push
in
call
cmp
adc
push
dec
push
xchg
jle
mov
push
jg
cmpsb
xchg
out
mov
adc
and
mov
mov
pusha
sar
mov
mov
xor
xor
add
push
inc
add
loopne
je
mov
dec
xor
rcrb
adc
js
add
lea
pusha
bound
inc
sar
lds
cmp
ficoms
sub
jo
jbe
pushf
out
mov
insb
or
mov
cmp
lea
adc
push
sub
orb
push
and
into
shr
ds
fsubl
icebp
lret
xor
push
fcompl
inc
inc
outsb
mov
xor
push
add
add
scas
les
adc
movsb
lock
mov
movsb
jmp
ljmp
push
mov
add
je
push
pop
or
xchg
cli
push
clc
cld
loope
je
mov
into
push
pop
jge
pop
dec
notb
inc
shlb
xchg
pushf
aam
and
mov
stos
add
jnp
inc
mov
ljmp
inc
mov
jb
shll
je
decl
jmp
adcb
leave
push
dec
add
push
cld
fadds
clc
adc
je
xor
xor
xor
lret
xchg
mov
add
push
int3
data16
and
xchg
hlt
cmp
fmuls
inc
cld
aaa
insl
out
mov
xchg
mov
lock
adc
add
fwait
cmp
pop
pop
xor
sub
jno
xor
aad
enter
pop
push
test
adc
jl
mov
cmp
sbb
fmull
icebp
sub
fidivs
adc
sub
sub
pop
cmp
out
lock
pushf
and
add
out
jp
and
pop
add
pop
shrb
cwtl
repz
test
rorb
adc
popf
and
ror
jmp
clc
mov
push
inc
mov
mov
je
rol
adc
push
adc
call
pop
push
cmpb
or
xor
jo
mov
fisubl
sbb
out
sub
pop
loopne
mov
adc
loope
dec
sbb
jo
jmp
mov
xor
push
jne
xchg
jl
xor
jno
cmp
jo
mov
js
adc
and
xor
pop
or
xchg
nop
sub
add
aaa
cld
cld
mov
sbb
cmp
push
movsb
or
ret
pop
or
add
and
xchg
clc
mov
or
in
mov
add
add
mov
jo
push
push
into
and
imul
outsb
push
mov
sar
inc
lcall
les
push
mov
fsubrs
mov
test
pop
incl
mov
mov
inc
mov
loop
pop
cbtw
pop
out
pop
cmp
pop
into
pusha
mov
push
ljmp
loope
inc
xchg
and
xchg
cli
cld
xchg
fdivr
push
push
mov
push
mov
push
push
push
sbbb
pusha
xchg
push
cmpsb
aas
add
stos
sub
add
fistl
add
xor
andb
add
jmp
jo
inc
mov
push
jg
loopne
fucomi
test
fstl
mov
adc
lret
push
add
insb
add
sbb
test
add
test
mov
adc
pop
and
dec
adcl
aad
sbb
rclb
je
pop
orl
lods
stc
mov
cmpsb
mov
inc
push
mov
ret
inc
fsubrs
mov
add
inc
push
scas
cmp
fisubrs
cs
cli
push
sub
inc
pop
fdivs
cmp
add
and
gs
lods
lcall
pop
or
jno
clc
or
orl
stos
add
int3
add
push
sub
fdivr
push
inc
dec
xor
adc
ja
cli
sub
push
cmp
ljmp
lret
lcall
rcrb
cmp
adc
adc
lock
hlt
add
in
or
cmp
syscall
mov
sub
lcall
inc
sbbb
mov
rolb
mulb
inc
pop
pop
jns
and
or
inc
adcl
in
and
push
xchg
cmp
lods
add
xor
lret
dec
or
mov
or
rcrb
cmp
inc
xchg
shlb
mov
sub
adc
nop
jbe
insl
lods
and
adc
xchg
mov
jae
lds
push
push
testb
mov
jg
fdivr
daa
loop
rcrl
shlb
mov
das
xchg
sub
mov
xorb
pop
lea
pop
add
mov
nop
rorb
rorb
adc
and
lock
or
repnz
pop
sbb
jge
xchg
mov
outsb
mov
out
push
loopne
sbb
test
sbb
mov
or
sbb
inc
popf
roll
jg
jp
fwait
dec
and
test
lods
das
lret
add
mov
rcrl
mov
roll
xchg
adc
xor
and
cmp
lock
add
insb
push
fldl
pop
dec
lea
ret
add
call
fldenv
push
and
loope
scas
popa
inc
adc
or
jmp
outsb
shlb
add
jne
add
adc
push
ljmp
adc
dec
cs
add
cltd
or
aad
out
sub
aaa
aaa
inc
adc
jbe
ds
arpl
or
push
add
adc
inc
ja
pop
loopne
jge
add
or
out
rorl
or
pop
and
rcl
incl
inc
inc
mov
jle
movsb
pop
loop
push
test
clc
mov
outsl
adc
andb
pop
push
and
out
roll
lcall
addl
add
and
mov
xor
xor
daa
lahf
insl
adc
lret
std
ljmp
mov
pop
pusha
inc
scas
loopne
pusha
sub
inc
pop
add
fwait
rcl
mov
and
add
das
xor
fdivl
jge
cmp
or
xor
fimuls
mov
lea
sub
call
xchg
and
add
shrb
pusha
orb
and
dec
pop
mov
test
pusha
out
dec
dec
aas
lret
clc
xor
push
dec
xchg
loope
pusha
shl
insb
fsubl
sub
in
add
and
pop
std
pusha
sub
xchg
xor
add
roll
loopne
hlt
bound
mov
dec
cmpsb
shlb
sbb
xor
popa
insl
stos
outsl
or
mov
call
lods
mov
int
or
pop
or
jle
sbb
aas
hlt
cltd
add
pop
push
cmp
inc
aaa
mov
dec
loopne
cmp
loopne
movb
cld
pusha
bound
adc
and
dec
dec
dec
add
or
pop
push
cli
cs
xorb
lret
inc
push
push
cwtl
clc
ja
ret
gs
mov
test
mov
adc
and
fcmovnu
andb
pop
push
es
loopne
out
mov
inc
fisttpl
xchg
lods
out
inc
cmp
pusha
pop
insb
nop
js
push
sub
int
push
inc
adc
test
inc
cld
into
cvttps2pi
ljmp
bound
fwait
popa
cmp
jae
hlt
aad
cmpsb
fistpl
cmp
cmp
or
enter
dec
adc
adc
xor
scas
adc
pusha
push
pusha
or
pop
mov
xor
outsb
es
scas
xor
daa
cmp
pop
mov
ret
or
popa
inc
loope
pushf
ss
ljmp
pop
or
adc
test
ss
lock
outsl
clc
xchg
add
loopne
pushf
aam
call
add
pop
pushf
repz
adc
mov
vpmacsdqh
jb
sbb
loop
outsb
sub
loopne
fadds
subb
sbb
insb
push
jbe
in
pop
lock
add
inc
adc
vmwrite
pusha
lahf
ret
shl
pop
fsubl
loope
pop
mov
mov
adc
loopne
inc
and
arpl
push
stos
sbb
mov
fdiv
inc
and
in
add
inc
jp
cmp
xchg
loopne
ret
shr
ret
rolb
push
loope
mov
cli
xchg
loopne
add
jmp
and
call
mov
and
and
cmp
push
enter
or
push
test
mov
js
mov
cmpb
adc
ret
add
xor
pop
pop
xchg
dec
enter
testb
or
subb
inc
scas
lret
js
stc
cmp
jge
push
cmp
push
lods
call
js
or
push
mov
cmp
jp
shlb
test
lret
loop
adc
cwtl
xor
inc
pop
cli
add
clc
push
je
inc
add
mov
add
mov
notl
cmp
adcb
pop
mov
add
adc
pusha
sub
push
xor
aaa
or
rolb
inc
mov
mov
jo
mov
xor
dec
test
ja
mov
xchg
cmc
add
stos
sub
test
push
aad
pushl
addb
jo
dec
and
lods
call
sti
ss
push
mov
call
jno
push
add
push
jb
pop
testb
cmp
add
rolb
jle
xorb
pop
out
inc
add
int3
xor
jns
mov
xor
sub
xor
ja
leave
and
add
dec
dec
sarb
sub
fdivrp
sub
call
mov
jne
addr16
out
int3
mov
ret
insb
call
outsb
sub
and
or
jbe
push
js
jno
shrb
adc
xor
loop
jno
rolb
push
jmp
adc
sbb
pop
mov
jb
cmpsl
lret
mov
jo
jno
in
test
subl
sbb
mov
jmp
shl
mov
push
jo
add
or
jo
dec
pop
mov
inc
inc
jo
cmc
sub
push
into
enter
add
clc
es
dec
adc
aaa
dec
adc
sbb
aaa
or
repnz
lldt
scas
fbld
enter
imul
or
fwait
btr
or
std
mov
inc
adcl
rcll
adc
decl
or
jne
xor
adc
mov
aas
add
and
mov
jne
mov
jne
xor
lock
arpl
cld
or
divb
lock
sbb
cld
pop
push
pushf
push
inc
or
cmp
pop
out
shl
jg
icebp
inc
sub
repz
icebp
jo
aam
decl
jno
cmp
jl
and
inc
pop
fs
xor
mov
pushw
outsl
xor
dec
adcb
xchg
and
jno
nop
and
or
mov
add
das
pop
jecxz
pop
fadds
cmp
push
repnz
orb
decl
test
lahf
jo
adc
dec
inc
xor
das
xor
movsb
cmc
and
ss
je
xor
jl
daa
mov
cmp
lock
adc
mov
pop
subb
out
jo
inc
mov
orl
pop
add
xchg
lock
test
mov
cli
push
dec
add
movsb
xor
lret
call
repz
mov
test
sarb
sub
push
jecxz
push
cwtl
mov
dec
add
out
add
addl
fs
inc
mov
add
pop
sbb
mov
or
sub
ret
push
cmpsl
push
xor
push
dec
fisttps
xor
xchg
orb
loope
jmp
mov
jnp
lock
fldl
or
mov
addr16
or
add
or
mov
aaa
cmp
test
mov
insl
arpl
mov
xor
lock
mov
adc
or
or
lock
mov
and
test
pushl
add
mov
out
jo
sbb
adc
ja
add
lock
cmpb
add
jle
inc
test
ss
push
test
jg
push
lea
jg
cmc
jl
xchg
insb
icebp
push
imul
push
xor
xor
ljmp
push
ljmp
adc
fiadds
enter
out
or
ret
roll
test
xor
or
push
xchg
decl
push
cwtl
mov
mov
or
xor
aaa
xor
out
call
sub
sub
dec
ljmp
clc
shl
lock
shl
daa
jo
sub
popa
jo
gs
jmp
lock
cmp
inc
icebp
inc
mov
cmc
es
push
pop
adc
in
push
jbe
push
adc
pop
push
js
sub
pop
and
sub
fbstp
fwait
or
pusha
inc
and
xchg
pop
adc
adc
and
xorb
mov
pushl
jns
ss
add
sub
and
jmp
add
xor
pop
cmpsl
stos
or
lea
pushf
lock
jo
cltd
cli
decl
inc
mov
mov
insb
mov
ret
sbb
and
jo
cli
adcb
jo
jmp
jle
out
mov
divb
pop
fucomip
push
push
gs
or
loop,pn
mov
hlt
push
stc
and
subb
outsb
inc
loope
dec
pop
outsb
jne
add
or
mov
test
mov
pop
sbb
inc
cmp
in
loopne
push
sub
xor
push
mov
sbb
mov
mov
sub
hlt
pop
add
or
icebp
loopne
or
or
fldt
pop
sbb
pop
pmuludq
or
xor
cld
pop
test
mov
sub
jae
inc
or
xor
sub
pop
das
fs
pop
inc
fdivs
loop
pop
adcb
xchg
add
inc
mov
and
scas
js
mov
adc
sub
mov
cmp
fdivs
adc
icebp
push
popa
jnp
lock
in
adc
test
adc
xor
inc
icebp
scas
adc
jb
je,pn
lods
lea
std
mov
mov
push
sub
mov
add
cwtl
adc
add
cmp
inc
je
push
fcomps
mov
arpl
mov
xchg
jecxz
je
in
jmp
cltd
stos
repnz
fisttps
sbb
fdivs
shll
push
fcomip
rol
add
cmp
or
jo
lea
jbe
ljmp
push
sub
movsb
outsl
fdiv
test
mov
arpl
arpl
lea
cmc
inc
jo
cmp
movsb
xor
mov
cmpsb
mov
inc
dec
mov
sarb
pushf
mull
ret
or
or
push
xor
pop
pop
cmc
push
xor
add
sbb
ret
stos
mov
add
pop
sub
arpl
repnz
gs
loopne
rclb
enter
test
fwait
sub
dec
jp
adc
mov
add
pushf
hlt
push
lcall
jne
or
xor
outsl
push
add
inc
mov
xchg
add
sbb
test
addb
jns
or
test
mov
dec
ret
call
pop
enter
movsb
je
jo
aad
lcall
sbb
push
loop
lahf
hlt
add
push
jmp
push
push
nop
orb
enter
loope
adc
add
or
cwtl
in
pop
aas
add
add
adcb
jne
add
mov
add
mov
test
mov
add
jle
imul
in
fstpl
inc
pop
nop
cmpl
fstps
sarb
mov
mov
scas
add
clc
push
int3
rorb
adc
xor
jecxz
lods
popa
xor
inc
repz
adc
xor
adc
bound
jg
out
cmp
jb
lock
xchg
popa
or
dec
clc
lea
add
xorb
call
cmp
test
addr16
push
xor
push
pusha
arpl
mov
dec
jb
mov
jbe
xor
call
gs
add
sbbl
mov
sar
je
mov
xor
jle
out
repnz
push
add
cmp
add
pop
mov
inc
xor
push
inc
xchg
add
and
movsb
inc
je
push
loopne
xor
shlb
lgdtl
idiv
jg
add
push
lea
out
push
and
or
push
pop
mov
ret
xchg
adc
jne
jbe
add
pop
fs
sbb
add
ret
ret
bswap
into
dec
add
into
into
ret
js
inc
or
or
pop
cmp
mov
adc
add
add
add
rolb
incl
shlb
rcrl
add
jno
lcall
mov
test
pop
add
xor
add
pop
lock
or
push
push
push
push
jle
ret
add
das
and
es
pop
addl
jne
adc
add
fs
sbb
call
jg
inc
jl
pop
ret
pop
or
rcl
push
jp
adc
sub
inc
xchg
or
jno
out
cmp
fs
faddl
adc
sbb
inc
in
ljmp
add
xchg
test
sbb
enter
xor
fwait
jbe
pop
rclb
ret
add
mov
stos
andb
or
cmp
cmp
cmp
or
cmpsl
pop
popf
clc
push
imul
rcl
or
pop
add
inc
fcompl
adc
call
arpl
test
mov
cmpsl
xor
in
ret
or
add
inc
repz
sub
jl
dec
dec
add
ljmp
pop
lret
rclb
dec
add
loop
pop
pop
sub
incl
add
add
jbe
je
fmuls
and
pop
outsl
mov
gs
outsl
mov
sbb
lods
loopne
sbb
lock
push
jecxz
add
sbbb
cmp
lar
mov
dec
cltd
je
in
arpl
cld
add
jl
mov
sub
jne
and
sub
and
cmp
dec
fcmovnu
push
lods
add
or
loop
mov
pop
loope
cmp
in
sub
ja
adc
sahf
lret
sar
call
nop
flds
xchg
xchg
xchg
adc
popa
sub
mov
pop
adc
cmpb
subl
mov
sbb
ret
cs
cmp
push
aam
orb
pop
pushf
sub
lods
daa
cmp
insb
mov
mov
push
or
mov
adc
sub
push
jo
and
loopne
or
adc
xchg
sbb
add
shrl
ss
fcoms
loop
aaa
js
push
test
loopne
push
int3
mov
add
mov
jg
pusha
or
movsb
sti
jmp
loope
and
mov
xchg
fsubr
cwtl
fs
repz
jg
aam
cmpsb
test
adc
adc
cmp
lcall
and
test
lods
add
jle
sub
lods
add
vmwrite
sahf
pusha
dec
scas
mov
outsb
mov
dec
enter
popa
xor
movsb
in
bound
jb
loopne
inc
daa
jl
jg
loopne
mov
outsl
dec
loopne
jne
mov
xorb
test
lcall
cmc
cmp
loop
jg
cs
push
loopne
call
dec
loope
adc
aam
adc
sbb
jmp
inc
pop
aaa
inc
pusha
push
pusha
inc
jmp
xchg
mov
popa
adc
addb
es
out
jbe
pusha
inc
add
adc
mov
or
and
jbe
pushf
cmp
push
lcall
and
inc
mov
or
or
mov
pusha
xorb
pop
or
push
loopne
adc
fs
and
cmp
dec
dec
add
inc
mov
pusha
sub
xchg
push
sbb
push
std
xchg
call
nop
mov
inc
jbe
jp
fwait
fwait
push
stos
fwait
or
scas
loopne
test
roll
call
xor
test
scas
adcl
test
call
cld
jecxz
addr16
pusha
xor
loop
in
inc
ljmp
or
xor
ret
pusha
xor
push
clc
ljmp
loope
mov
shl
loopne
push
adc
in
inc
loopne
add
inc
inc
mov
push
adc
push
add
sar
lss
scas
call
loopne
test
and
fbld
pop
cmpsl
inc
dec
ljmp
pop
clc
clc
mov
lock
outsl
pop
or
in
add
sbb
xchg
inc
adcb
and
push
loopne
jmp
lock
je
cmp
or
addl
dec
mov
adc
insb
in
inc
xor
js
mov
and
fwait
add
hlt
je
shrb
xchg
add
push
test
adc
push
push
or
jo
aam
jb
in
shlb
dec
call
push
faddl
mov
push
mov
adc
push
xor
clc
or
jmp
mov
int3
shrl
xor
rclb
add
aam
mov
pop
or
dec
mov
loopne
jo
les
and
or
icebp
add
inc
or
or
clc
add
push
cmpsb
fsubrl
ret
adc
cmp
adc
jne
push
es
lods
adc
cli
or
add
push
adc
icebp
loopne
adc
jo
call
push
sbb
lea
mov
imul
dec
shrb
lods
jo
ljmp
rolb
mov
jecxz
fwait
push
fadds
clc
mov
sub
lret
inc
cmpsb
pop
and
sub
push
popa
or
lcall
je
scas
lods
test
xchg
cli
jo
sub
add
out
shrb
xor
pop
adc
sbb
jno
push
inc
test
pushl
lock
xor
sub
adc
add
stos
hlt
adc
add
or
imulb
rcl
jmp
cs
mov
test
mov
movsb
ret
sub
sub
mov
popa
jo
push
mov
lock
aam
push
int3
add
and
cli
jo
xor
adc
or
xchg
pop
pop
std
mov
mov
sbb
jbe
add
stos
xor
faddl
mov
andb
cmp
adc
fsubrs
inc
sub
dec
cmpsl
inc
stos
sub
xchg
int
xor
lock
and
cmp
push
stos
sbb
or
test
push
jl
ret
out
add
inc
mov
aaa
cld
push
and
pusha
nop
sbb
outsl
outsl
adc
add
pusha
je
and
pusha
shll
fs
push
jb
jo
icebp
or
cmp
jb
or
or
fs
lods
daa
or
fs
scas
xor
jl
sbb
icebp
xor
mov
adc
les
in
push
leave
repz
push
and
lret
test
jae
push
std
outsb
loope
mov
je
je
jne
mov
divl
or
or
pop
mov
cmp
push
in
add
mov
mov
jne
inc
push
pushf
push
cmpb
sbb
mov
out
pop
mov
clc
jp
jg
jne
sahf
xor
add
dec
jge
mov
jns
es
push
fbstp
mov
je
call
add
push
or
dec
push
inc
xchg
xor
mov
mov
fs
xchg
lret
ret
pop
ja
pop
call
divl
shl
xchg
inc
jo
mov
loopne
pop
lock
jge
cmp
cmp
inc
hlt
adc
add
arpl
std
pop
dec
fsubr
sbb
pushl
jo
pop
jmp
test
push
lock
adc
push
sbb
loopne
push
mov
lock
ljmp
int3
add
subl
mov
push
push
dec
or
push
sbb
cmp
mov
lret
lock
add
clc
push
jo
jne
cld
je
mov
add
or
xchg
mov
in
add
arpl
mov
sbb
fdiv
sub
addr16
data16
data16
fcmovb
mov
push
dec
adc
mov
test
mov
cmp
in
dec
jg
adc
ss
adc
rolb
out
xor
mov
xor
mov
cmp
shlb
mov
fiadds
mov
inc
loopne
cwtl
das
jne
jg
add
je
shl
inc
andb
addb
xor
mov
jg
repz
je
and
lock
adc
inc
adc
cmp
xor
mov
aam
pop
mov
push
inc
or
mov
lock
ljmp
call
jo
xchg
rolb
mov
pop
enter
xchg
add
sarb
rolb
mov
loop
inc
adc
jg,pt
pop
adc
adc
or
int
adc
je
add
inc
mov
hlt
xchg
in
or
int3
leave
mov
dec
ja
add
add
mov
inc
xchg
inc
push
mov
leave
push
shlb
pop
cwtl
push
jg
pop
fcoml
dec
or
or
dec
xor
orb
test
pcmpgtb
lock
repnz
sbb
pusha
sub
inc
or
add
incb
into
fisubl
ljmp
test
mov
push
stc
adc
call
in
cli
cs
lock
inc
pushw
mov
sbb
divl
xchg
adc
cmp
ljmp
pop
lods
pusha
inc
xchg
jmp
into
dec
inc
jo
popf
nop
test
mov
incl
mov
pop
pushl
push
add
inc
call
in
sbb
adc
jne
mov
ljmp
pop
add
sbb
jmp
cmpsb
test
pop
jne
lock
icebp
or
cmp
repnz
inc
cmp
std
decl
cmp
fnstenv
cmp
sub
jl
add
add
icebp
pop
add
pop
add
jo
inc
in
mov
mov
hlt
gs
subl
movb
mov
mov
add
clc
mov
adc
adc
jge
lock
or
add
lock
or
inc
mov
aam
dec
je
rclb
sbb
pop
jo
push
xchg
inc
ja
add
cld
and
mov
clc
add
and
push
add
jne,pn
and
jle
ja
pushl
add
sbb
add
jne
add
mov
mov
and
and
cs
sahf
ret
xor
jecxz
sarl
subl
and
push
xor
mov
pop
jo
add
push
pop
xor
mov
shlb
mov
inc
inc
pop
and
or
jo
pop
pop
hlt
add
dec
push
movsb
jle
pop
mov
aas
add
sbb
int3
inc
lods
or
lahf
je
icebp
pop
xor
cmp
enter
cld
or
mov
adc
out
add
push
ds
cwtl
repnz
or
mov
inc
xchg
testb
add
fwait
and
push
cmpsb
pop
cmp
jae
push
lea
loop
xorb
mov
movsb
hlt
loopne
jne
or
test
movsl
jg
and
add
jge
jbe
sbb
or
cld
adc
inc
nop
mov
add
mov
cmpb
je
xor
fimuls
sub
push
sub
sub
sub
push
inc
clc
pushf
adc
add
jmp
push
repz
mov
mov
vucomisd
pop
imul
bnd
idiv
mov
mov
add
loopne
cli
or
jb
add
fs
mov
push
dec
or
jle
cli
in
mov
mov
and
inc
jmp
xorl
stos
jbe
pop
jb
pop
lea
add
cmp
cwtl
call
or
dec
adc
icebp
rolb
jmp
sbb
lahf
and
js
add
lcall
loop
xor
add
mov
call
insl
or
fadds
cmp
call
push
cmpb
jns
add
les
add
cmc
mov
push
cld
lret
add
sbb
dec
adc
cwtl
mov
pop
cld
fidivs
pop
or
negl
or
and
test
sbbb
jo
andb
xor
jg
mov
pop
or
mov
pop
pusha
repnz
mov
add
and
icebp
mov
push
adc
ljmp
add
xchg
nop
loope
and
sub
je
xor
aaa
dec
das
cmpsb
inc
call
or
sbb
and
rorb
push
push
cld
ret
jb
dec
inc
or
decl
cmpsb
add
pop
and
bound
inc
inc
rcrb
les
add
shll
not
jge
sbbb
cld
lock
loopne
ficoml
mov
inc
add
out
adcb
xor
daa
adc
xchg
mov
pushl
pop
push
lcall
aaa
mov
aas
pop
jb
incl
inc
iret
pop
arpl
je
sarb
cmp
call
cs
xchg
jo
lea
das
jbe
pushf
addb
addl
cmp
rcrb
jg
cmpsb
neg
in
and
std
or
mov
rcrb
outsb
add
ja
fdivr
jmp
adc
popf
jp
mov
cmp
push
dec
mov
jge
add
insb
add
mov
lods
add
push
mov
dec
shll
test
dec
push
mov
cltd
add
mov
movsb
push
add
inc
jmp
fsubrs
ds
scas
inc
popf
rol
add
aam
jg
fldenv
into
pop
or
cmp
call
mov
subb
mov
sub
cmp
mov
inc
push
jl
ficomps
inc
push
cmp
add
fiadds
xchg
call
inc
fmuls
in
add
in
add
mov
add
or
fcoms
add
cmp
inc
shr
add
add
out
sbbl
push
fcoml
insl
jnp
sbb
and
adc
ficoms
ffree
aaa
sbb
arpl
mov
popf
int3
inc
stos
inc
jmp
lret
pop
or
popl
mov
ljmp
add
jo
push
and
mov
and
roll
loop
repz
or
jl
ljmp
aam
pop
and
ds
add
xchg
les
jbe
mov
adc
ss
js
mov
incl
sbb
mov
sbb
std
rcrl
add
mov
sbb
or
arpl
lock
mov
shlb
pusha
push
cwtl
aam
jle
add
loopne
rolb
pusha
and
cld
push
mov
insb
push
xchg
jo
add
cld
add
adc
addb
das
scas
iret
sub
or
loop
adc
rorl
sti
loopne
jl
sub
loopne
or
add
add
jo
jl
orb
cmp
leave
neg
or
icebp
aaa
mov
sub
mov
mov
jbe
sbb
mov
std
adc
add
jb
push
aas
xchg
inc
lods
or
and
loop
pusha
jne
and
cmpsb
mov
loopne
mov
cmp
or
jbe
dec
sbb
xchg
aas
pusha
jl
and
or
lret
pop
sbb
sbb
test
mov
mov
loopne
or
fidivrl
mov
incb
nop
loop
xchg
orl
dec
outsb
adc
sbb
mov
inc
add
mov
add
cmpb
int3
testb
aaa
dec
pop
ret
sbb
loopne
or
xor
je
ret
jg
push
push
mov
aas
ret
add
fdiv
push
xchg
test
adc
xor
loop
lret
popf
push
fwait
push
loopne
jo
push
mov
test
push
lock
pushf
jp
xchg
push
mov
lahf
sub
mov
push
call
adc
add
repz
push
test
lods
sbb
sub
sub
lock
xor
lock
test
mov
fs
movzwl
mov
out
cmp
mov
add
outsl
mov
jecxz
add
push
je
popa
jge
dec
lcall
push
sahf
clc
jl,pt
or
pushl
pop
lea
cmp
jb
push
call
cmp
call
pop
pusha
data16
shlb
das
sub
or
dec
fdivp
call
add
outsl
sbb
xor
adc
adc
mov
xor
fs
and
push
mov
push
pop
mov
push
aam
adcl
das
ss
pop
add
in
loopne
mul
movsb
dec
dec
jl
or
shll
xchg
and
mov
xchg
add
lret
and
popf
shrb
pop
pop
dec
loopne
and
sub
and
and
data16
jmp
adc
push
inc
adc
pop
dec
push
int
add
je
aad
mov
xor
mov
push
push
and
push
add
push
add
sbb
jmp
adc
shlb
loopne
push
std
pop
xor
push
ret
orl
inc
jmp
sub
and
mov
sbb
andl
adc
mov
ss
lods
mov
pop
xor
popa
mov
or
dec
loope
lods
add
jmp
xor
or
push
loope
or
push
add
mov
mov
mov
sbb
push
inc
cli
xor
cmp
test
jo
jo
test
jo
call
xor
jne
jo
xor
ljmp
test
add
les
bound
mov
fwait
lods
lret
adc
lock
fwait
dec
add
or
and
xor
and
jae
and
ljmp
add
lea
add
sbb
adc
mov
sub
inc
enter
xchg
testb
es
add
cltd
or
les
lock
sbb
push
pop
ja
cmpsl
mov
mov
push
xchg
rcrb
mov
sahf
dec
repnz
mov
jne
adc
mov
cmp
xchg
jl
or
sub
icebp
ljmp
inc
add
ret
clc
mov
aas
sbb
jl
cli
int3
mov
fisttpl
mov
push
mov
mov
daa
xor
pop
xor
lods
mov
aam
mov
stos
add
shrb
icebp
xor
push
xor
adc
pop
xor
ja
icebp
sub
pop
and
and
push
rolb
xchg
fs
shrb
jmp
mov
leave
lock
jmp
inc
shlb
inc
subb
push
and
std
fistpll
daa
lock
call
orl
les
mov
rorb
mov
adc
ret
mov
rcll
add
sub
incl
xchg
add
inc
and
add
roll
and
add
inc
aam
inc
and
adc
push
out
or
lods
or
dec
lods
adc
xchg
push
fiadds
inc
or
or
sti
add
icebp
jp
lock
dec
divl
mov
fisubs
gs
dec
jo
xor
push
repz
inc
push
je
scas
and
push
xor
adc
pshufw
dec
neg
mov
rcrl
add
mov
push
mov
aaa
push
push
les
cmp
inc
sub
xor
lea
pop
xor
mov
addb
mov
push
popa
xchg
cmp
mov
xor
mov
xorb
sub
and
cmpsb
pop
ljmp
pushf
inc
push
mov
mov
or
push
test
dec
je
je
add
mov
fildl
adc
inc
sbb
jp
add
shlb
push
cli
or
inc
mov
insb
adc
or
mov
test
jo
push
data16
push
jo
call
jo
push
mov
and
sbb
test
sbb
xor
mov
and
shlb
inc
add
lcall
fcom
push
call
mov
dec
shlb
mov
dec
inc
or
cld
jo
pop
add
dec
lret
stos
rcrb
and
cmpsl
mov
push
shlb
jns
mov
clc
xor
xor
cld
cld
jbe
ret
pusha
pop
mov
call
movb
in
ss
push
das
aam
and
outsl
iret
adc
inc
jo
repz
adc
ficoms
xor
add
mov
push
aam
sub
add
movsb
pop
insl
ret
es
pop
call
push
push
daa
hlt
outsl
push
sbb
mov
in
sub
adc
test
sbb
xor
mov
cmp
sbb
inc
mov
clc
loope
test
pop
jo
xor
outsl
adc
add
xlat
call
or
add
lock
push
pop
repnz
mov
mov
and
ret
icebp
fcmovnu
push
inc
insb
lea
test
cmp
ja
fwait
xchg
stos
push
inc
in
add
fwait
clc
xchg
or
adcl
ret
fsubs
push
mov
scas
sbb
in
mov
mov
lret
xor
pop
or
clc
push
ljmp
xchg
xchg
dec
and
mov
pop
add
pop
nop
test
adc
mov
mov
fisttps
cli
lock
dec
cmp
jae
inc
call
xchg
mov
add
inc
faddl
mov
cmp
pop
testl
jmp
add
jae
sbb
cld
shrl
adc
sbb
enter
stos
fsubl
idivb
inc
adc
movsb
aaa
js
lods
jo
mov
add
adc
loope
cmpb
out
and
and
push
or
sbb
inc
adc
mov
orb
pop
std
das
inc
or
lock
mov
inc
or
test
data16
jmp
hlt
add
cmp
and
ds
adc
lds
test
imul
mov
jo
jno
inc
insl
dec
add
scas
pop
mov
test
mov
jo
aas
or
js
push
pushf
inc
out
mov
mov
mov
dec
push
push
pushl
loope
enter
or
decl
mov
adc
mov
jo
add
lods
add
push
xor
repz
or
mov
jb
hlt
sbb
push
inc
jb
fistpll
cmp
adc
mov
mov
lea
xor
pop
mov
dec
or
dec
jne
dec
pop
nop
rorb
shlb
sub
divl
sti
inc
incl
out
mov
mov
sub
cld
lods
adc
shr
adc
add
testl
pop
mov
jmp
mov
and
or
mov
sub
add
adc
dec
inc
or
adc
push
push
xchg
ljmp
test
push
sbb
ret
sub
fdivp
testb
jl
out
je
mov
add
aam
jmp
jg
hlt
xor
or
push
sbb
mov
test
pop
inc
jecxz
ds
mov
inc
popa
fadds
push
and
ljmp
inc
add
loopne
pop
cmpsb
ret
push
inc
inc
sub
sahf
jo
hlt
sbb
sbb
mov
cwtl
and
sbb
std
or
or
jae
sub
jbe
lods
idiv
cli
xor
jbe
pushl
std
movsl
xchg
ret
mov
movsb
or
jb
inc
add
add
ss
jmp
push
rcrb
cld
ja
xor
mov
inc
xor
xor
and
and
jecxz
sbb
mov
or
push
lock
add
xor
inc
clc
decl
testl
addb
mov
add
es
inc
pusha
dec
dec
and
push
xchg
stos
jmp
sbb
adc
mov
fidivs
cltd
jge
jno
cld
mov
add
cmp
cmpl
lret
inc
add
loopne
xor
or
rorb
ret
add
or
adc
stc
out
and
mov
dec
add
add
sbb
mov
lds
aam
jmp
les
mov
icebp
adc
xor
rorb
xrelease
addr16
or
pop
movsl
add
inc
push
insb
sahf
dec
mov
push
push
add
mov
mov
and
jmp
xor
add
je
scas
bound
xchg
les
add
pop
lods
gs
ret
nop
or
adc
sbb
inc
cmp
dec
shlb
and
add
shlb
and
push
xor
push
push
push
mov
movsb
call
test
inc
push
mov
nop
ljmp
lea
les
inc
sub
stos
mov
fsubr
mov
sbb
or
mov
rcll
notl
adc
push
mov
inc
and
push
ret
das
or
jl
pusha
xchg
bound
xor
or
push
addb
mov
push
movl
aaa
push
ret
mov
lock
outsb
mov
sub
adc
jne
sub
mov
mov
orl
sar
dec
mov
scas
fcomp
jecxz
mov
jmp
scas
push
cmc
inc
subb
mov
dec
js
jl
aaa
adc
or
and
xor
notl
orb
sbb
outsb
data16
idivb
mov
andb
adc
cwtl
inc
adc
push
mov
mov
or
mov
xor
dec
bound
lods
and
and
sub
sub
or
inc
aam
outsb
fcos
jne
sarb
inc
ret
push
shlb
iret
jmp
test
rorb
out
inc
cmp
andl
xchg
fisubrl
inc
xchg
pop
imull
adc
popl
pop
imul
pop
cmp
inc
mov
xor
lcall
je
add
sbb
or
jecxz
add
aad
pushf
out
mov
pushf
sub
rol
adc
add
jmp
sub
rorb
push
sub
jbe
mov
xchg
into
cmp
les
shlb
inc
clc
sub
mov
push
mov
fwait
adc
in
out
mov
les
jns
xchg
popa
pop
mov
shlb
pusha
cmc
or
clc
movzbl
inc
clc
pop
pop
loopne
nop
clc
push
and
movsb
mov
jp
add
rorb
bound
imul
test
add
rcrl
mov
cli
lea
xchg
enter
divb
rcrb
mov
add
push
leave
cmp
fdivs
add
inc
and
xor
ret
out
xor
in
mov
push
pop
and
fs
add
sbb
fstps
addl
jb
call
shrb
orb
sub
and
push
call
loopne
aas
mov
inc
mov
add
add
jb
push
imul
and
xchg
insb
add
add
add
sub
fwait
adc
bound
lahf
pop
cmpl
pop
jl
aaa
ljmp
and
xor
jp
cmpb
adc
mov
or
cld
jl
push
fs
xorl
loopne
adc
push
call
xchg
push
test
inc
adc
mov
orb
xor
add
sbb
adc
test
cli
adc
mov
cwtl
adc
pop
mov
mov
push
incl
mov
pop
pusha
in
xor
inc
dec
dec
imul
mov
push
push
add
lahf
imul
dec
repz
nop
pop
pop
sbb
aas
negb
add
pop
adc
mov
add
push
inc
dec
adc
adc
hlt
loopne
lock
fistpll
filds
loope
jp
pusha
push
dec
cwtl
jnp
xor
hlt
adc
and
pushf
push
test
jnp
in
pusha
pop
fsubl
popa
pop
stos
lock
out
in
sub
test
lret
out
adc
or
or
stos
hlt
loope
fcmovu
pop
mov
mov
or
in
xlat
stos
in
rcl
stos
fidivrs
mov
mov
cmpsb
mov
adc
mov
rcl
dec
rcr
in
iret
rolb
loop
test
sub
push
mov
out
cs
sbb
rclb
shll
or
rcrb
adc
push
pop
mov
jp
and
pusha
pop
inc
sar
push
pusha
push
sub
add
scas
rorb
loop
lods
cmpsb
pop
push
pop
mov
add
ss
mov
xchg
mov
add
js
shl
mov
sub
mov
jmp
subb
mov
fsubs
inc
std
ljmp
push
xor
test
bound
addr16
add
jmp
inc
lcall
mov
add
inc
cli
push
jne
jb
lea
call
xchg
cltd
subl
test
xchg
nop
fs
jo
cs
xor
dec
dec
inc
stos
js
sub
arpl
imul
sarl
sub
cmp
enter
xor
fcmove
sub
loopne
or
pop
sbb
sbb
xor
fs
lds
inc
and
add
ss
orl
and
ret
cmp
pushf
and
inc
dec
inc
or
repz
es
adc
incb
adcb
add
loopne
jbe
in
in
out
movsb
mov
add
add
loopne
sub
add
or
push
stos
sbb
loopne
mov
or
ljmp
test
shrb
sbb
clc
int3
jo
in
outsb
mov
je
lret
push
and
cmpsb
push
ret
fdivs
testb
jo
push
jbe
xor
pop
jbe
mov
or
and
sbb
cmp
adc
xor
mov
mov
add
movsl
inc
sbb
out
xor
cmp
test
add
xor
popa
pusha
sti
sbb
mov
add
jl
pushf
push
add
push
fsubrs
out
jp
ljmp
jnp
or
dec
or
inc
adc
pushl
sub
xor
cmp
xor
dec
mov
or
sub
mov
jo
adc
sarb
cmpsb
cmp
push
and
aaa
sbb
xchg
and
add
xor
je
testl
sub
mov
negb
les
jo
push
fs
and
push
adc
repz
cmp
mov
sti
mov
and
outsb
leave
mov
mov
sbb
adc
and
mov
or
fwait
sub
or
or
fcompl
inc
fsubrl
bound
pop
je
lock
xchg
pop
sbb
add
cmp
pusha
pop
add
or
lock
shlb
pop
sbb
pop
jl
daa
xor
jae
in
rcll
popa
lcall
lock
mov
or
xor
mov
rorb
cli
sahf
add
mov
dec
incb
inc
mov
sbb
push
cmp
push
test
test
ret
jl
inc
pop
mov
icebp
sub
add
notb
sarl
mov
ja
cmp
mov
sbb
loopne
mov
adc
sbb
inc
mov
call
mov
or
out
and
add
fistpl
sub
jno
dec
and
jo
or
jo
loopne
cli
and
sub
pop
sbb
sbb
mov
aam
cli
pop
cmp
add
daa
xor
pop
add
pusha
xchg
in
pop
push
decl
mov
fs
dec
int3
call
pop
add
jmp
mov
ror
pop
scas
or
or
lea
adc
inc
mov
fistl
cmp
pop
xchg
push
rcr
mov
and
jmp
push
add
push
push
or
pop
mov
mov
sub
add
jle
pop
fisubl
cs
mov
sub
mulb
ja
rorb
nop
xor
cmp
xchg
push
pop
lret
nop
in
mov
ljmp
clc
fisttps
pusha
daa
inc
sub
add
lods
mov
or
add
js
cli
nop
inc
inc
cwtl
shlb
outsb
aaa
outsb
mov
pusha
ret
call
add
subb
sub
loop
rorb
cmp
mov
add
test
pop
and
subb
add
cwtl
mov
xorb
xchg
cld
adc
aaa
mov
das
pop
jo
add
sahf
aad
jne
test
sti
scas
push
mov
or
or
push
pop
cmp
push
pop
jo
lods
mov
jo
decl
xchg
test
dec
cmp
addb
cmpsb
test
add
or
sbb
sbb
mov
mov
leave
lea
call
adc
imul
or
ret
pop
rorb
jbe
mov
cmpsl
shlb
jo
in
in
lret
ljmp
mov
mov
cmpb
xor
stc
mov
mov
add
adc
clc
push
push
xor
mov
ljmp
ret
jmp
icebp
add
add
call
sar
adc
cmp
call
inc
xor
pop
jmp
mov
or
mov
adc
call
pop
aam
lods
test
sub
cmp
mov
psubq
fucomi
lods
jns
or
add
jno
sub
call
pop
cmp
push
jmp
jmp
test
je
push
mov
adc
add
inc
sbb
pop
push
loop
adc
scas
push
repz
mov
sbbb
add
cmp
inc
jg
add
xor
pop
push
lcall
outsb
push
pop
add
jae
movsb
mov
or
mov
scas
mov
insl
imul
cmp
inc
rcrb
call
lock
jne
mov
sbb
sti
lret
icebp
jmp
push
mov
xor
lea
outsb
mov
cmp
inc
scas
cmp
mov
dec
mov
xlat
ja
jg
jne
pop
pop
mov
sub
aaa
push
shrb
out
jb
inc
and
filds
cltd
ss
add
push
sub
imulb
adc
xor
sub
xchg
push
xor
cld
decl
add
push
mov
xchg
cli
sub
call
loopne
xor
mov
push
mov
add
dec
adc
insb
add
and
mov
dec
scas
and
shl
fisubrl
push
push
scas
mov
push
mov
and
incb
adc
add
dec
lods
mov
jmp
inc
std
es
xor
adc
and
popf
push
or
adc
mov
out
xor
and
xor
pop
aad
inc
inc
mov
or
scas
sbb
xor
loopne
stos
add
adc
add
scas
lds
js
mov
movsb
mov
or
mov
sahf
add
scas
push
or
xor
movsb
andb
out
jg
add
sbb
push
xor
imul
test
lret
push
test
xor
mov
jp
jae
xchg
adc
lea
cmpb
or
pop
mov
inc
jo
mov
or
shl
inc
add
outsb
dec
xlat
mov
jl
add
jbe
adc
xchg
les
add
enter
mov
xor
cmpb
mov
lock
and
outsb
adc
sbb
pop
adc
cltd
idiv
nop
xchg
rcrb
xor
test
cmpsl
sub
subb
sub
pop
or
sbb
call
lret
jns
gs
mov
sub
scas
je
ss
pop
lock
icebp
pmaxsw
xor
mov
fs
bound
cmpb
test
xchg
add
push
push
add
adc
lret
pusha
and
mov
ss
jecxz
gs
add
mov
decw
xor
sbb
pop
adc
and
or
push
push
nop
pop
call
ret
mov
dec
fistl
lret
vcmpps
dec
inc
push
inc
adc
popa
je
sub
lahf
les
sbb
sbb
testl
pop
xchg
jo
gs
call
add
push
je
test
test
xchg
push
jge
nop
insl
push
stc
and
jle
add
jmp
adc
out
pop
dec
dec
fsubrs
insb
xchg
push
add
lock
ja
jne
mov
add
sbb
dec
cmp
in
push
popa
dec
xchg
mov
sbb
test
mov
test
insb
adc
sbb
mov
or
call
adc
mov
add
dec
nop
arpl
xchg
fcoms
xchg
jbe
int3
outsl
add
push
mov
xchg
arpl
push
mov
pusha
dec
shrl
lcall
out
xchg
mov
mov
shr
hlt
add
pop
iret
cld
adc
inc
and
adc
dec
in
adc
pusha
callw
adc
adc
mov
pop
inc
test
and
jbe
add
or
xorl
js
nop
xchg
lock
mov
inc
inc
jl
push
or
or
es
cs
adc
sbb
std
cmp
jae
mov
bnd
jl
inc
or
push
std
cwtl
adcb
add
or
sti
sbbb
fisttpl
mov
in
iret
add
shlb
and
call
daa
sub
hlt
je
sub
mov
orb
xor
or
inc
add
je
jb
xor
sbb
pusha
addb
mov
cli
cmpsb
les
sub
push
pop
push
push
add
outsb
call
clc
jb
sahf
xor
mov
pop
push
adc
lods
jge
sbbb
cmpsl
mov
jbe
push
inc
mov
cmp
cmp
push
add
cmp
pop
das
xor
fwait
shll
adc
xchg
je
pusha
mov
xor
jb
call
fwait
and
mov
inc
inc
inc
pop
inc
loope
pop
data16
std
adc
aam
sbb
js
pop
dec
nop
xor
loope
mov
out
fcmovnb
mov
sbb
or
mov
jns
mov
aad
push
adc
pop
mov
std
push
sarb
mov
shrb
and
or
xchg
mov
sbb
idivb
pop
fdivrs
pop
jl
xor
push
jne
add
mov
xor
and
cmp
dec
je
cld
ljmp
mov
pop
mov
xor
dec
loop
cltd
ret
add
add
sbb
cmc
nop
in
dec
bound
push
mov
call
icebp
mov
xchg
out
mov
call
push
inc
push
aas
rorl
add
cld
dec
inc
and
clc
mov
jbe
insl
shlb
add
sub
loope
adc
and
aaa
xchg
push
jbe
shlb
mov
pop
adc
and
or
add
iret
ss
mov
int
pop
addb
mov
data16
cli
ljmp
pop
or
push
adcl
push
call
aas
and
add
adc
test
xchg
insb
rclb
jp
push
dec
dec
sub
mov
scas
cmp
icebp
es
mov
lret
jne
xchg
out
push
nop
cmp
ss
mov
mov
and
imul
and
sub
jo
pop
or
sbb
ret
cmp
cmp
fmull
add
fdivp
and
push
push
fs
cmp
pop
mov
jecxz
push
es
adc
dec
clc
push
push
and
ljmp
add
dec
insb
or
add
test
jp
push
in
call
pop
and
in
imul
iret
xor
enter
add
call
inc
popa
xor
xchg
mov
repnz
sbb
lea
es
ljmp
sub
add
sbb
dec
pusha
add
xor
pop
movsb
jle
lahf
ss
and
mov
fiaddl
adc
imulb
fs
mov
stos
lock
test
pusha
xor
push
add
mov
xor
ret
adc
test
into
call
lret
adc
std
stos
jno
xchg
xor
add
cmp
and
jo
pop
lcall
inc
mov
sub
repnz
adc
xorl
cmc
add
sub
and
loope
stos
jmp
and
cmp
jne
pusha
enter
pusha
pop
gs
add
mov
jne
es
fisttpl
pushf
loope
movsl
xor
testl
lcall
cmp
add
dec
je
push
cwtl
push
sub
popl
in
or
jbe
call
mov
fists
pmaddwd
cmp
and
mov
add
pusha
jb
sub
clc
enter
jo
sub
xchg
movsb
sub
popa
and
add
into
lea
js
movsl
jl
push
loopne
sbb
and
adc
shr
dec
add
das
je
loop
add
fs
outsl
mov
push
xchg
dec
add
jg
repnz
pusha
sub
cmp
loopne
sbb
pop
inc
aam
cli
mov
enter
mov
adc
inc
in
adcb
shlb
mov
mov
and
icebp
fbstp
test
callw
loopne
pusha
fwait
or
lds
int
mov
fbstp
ret
loope
adc
or
push
movsb
xor
mov
loopne
mov
ljmp
testb
loope
fldl
into
xchg
lcall
ffree
xchg
xor
cmpsb
jno
test
clc
pop
mov
outsl
je
shlb
mov
leave
mov
bound
ja
sarb
ret
jp
int3
lods
add
es
push
cwtl
push
push
mov
imulb
outsl
outsl
ss
popw
pusha
lods
clc
loopne
mov
mov
push
cmpsb
sub
jmp
mov
faddl
inc
sub
xchg
inc
push
inc
nop
nop
push
fiaddl
jecxz
pop
mov
mov
pop
jb
push
add
loope
cmp
call
dec
inc
scas
dec
ljmp
adc
lahf
test
hlt
loope
push
push
push
nop
push
push
xchg
lcall
pusha
and
mov
loopne
nop
pop
mov
inc
mov
cmp
mov
movb
or
cs
insb
shll
rcrl
ds
adc
and
push
cmp
pusha
cmp
or
test
loope
roll
pusha
adc
xor
or
adc
jne
push
icebp
dec
arpl
add
stos
xor
dec
pop
inc
repz
insl
loopne
xor
push
mov
loopne
shl
dec
xchg
lock
test
lock
lcall
test
or
sbb
pop
add
or
and
js
inc
push
mov
mov
cli
adc
lock
pop
mov
cmp
cmp
mov
jp
adc
sbb
dec
idivb
or
call
or
mov
push
inc
enter
add
mov
fisttps
sbb
adc
daa
push
shrb
add
jl
xor
sub
push
add
rcrl
sub
repnz
adc
mov
lock
jb
add
dec
add
icebp
or
test
adc
mov
pushl
add
sbbb
adc
and
pop
lock
push
icebp
dec
mov
movsl
fwait
sbb
xchg
sbb
add
sub
adc
sti
es
push
xchg
jb
faddl
adc
aad
stos
test
mov
xor
adc
add
sbb
add
add
inc
movsl
movsb
bound
clc
inc
lods
cmpb
rcrb
nop
push
call
pop
sub
mov
cmp
inc
adc
movmskps
add
sarb
adcb
loopne
dec
pop
pop
aaa
fdivs
push
or
xor
jne
add
add
cld
jno
lods
jnp
mov
add
fsubs
shlb
test
repz
call
clc
xchg
ljmp
lcall
inc
or
orl
push
clc
and
jo
decl
push
mov
fstpt
mov
pop
repz
shlb
es
incb
xor
adcb
movlps
fidivl
cld
mov
push
jo
and
xor
jmp
ss
lcall
aad
jle
push
cmp
push
add
inc
test
sbb
idivl
jb
xor
xorb
cld
xor
pushl
push
mov
add
xor
sbb
lock
push
xchg
adc
push
sub
xor
bound
jmp
sub
jle
in
and
jno
lods
jno
sahf
sbb
or
outsb
push
outsl
push
or
ss
add
push
das
cmp
sti
xor
or
stos
loope
xor
cmp
insb
enter
std
das
dec
cmp
je
add
outsb
lea
mov
xchg
sub
dec
std
clc
call
push
test
lock
enter
daa
add
dec
rcr
adc
sbb
xchg
lock
add
inc
add
sub
inc
sbb
add
xor
mov
add
add
inc
sbb
sarl
pop
inc
lock
divb
jb
lea
push
fs
push
push
idiv
outsl
jb
adc
lsl
adc
in
push
add
nop
adc
shrb
sbb
adc
inc
dec
or
sbb
mov
sub
lock
ret
add
xor
sub
push
cld
sub
mov
sub
mov
add
pop
nop
mov
jb
loopne
xor
mov
shlb
add
ljmp
sub
icebp
push
xor
dec
ss
clc
xchg
int3
clc
lcall
lock
push
stos
ds
jge
xchg
xor
xor
or
test
mov
mov
lea
ret
je
cwtl
mov
pop
inc
enter
sarb
stos
xchg
add
xchg
add
lock
or
sbb
adc
or
rcrb
mov
or
sub
inc
and
lea
cmp
push
push
push
in
in
push
pop
test
adc
xchg
xchg
imul
je
jo
pop
push
inc
add
cmpsl
mov
in
cltd
xor
inc
push
inc
loop
imul
pop
add
insb
mov
enter
fsubl
pop
dec
adc
mov
push
mov
mov
xor
or
push
call
sbb
inc
mov
je
xchg
pop
repnz
xlat
push
mov
lock
or
and
cmpsb
outsb
push
andl
push
pop
and
incl
inc
in
mov
ljmp
cmp
imul
mov
jle
mov
addl
or
inc
cli
dec
or
add
popa
sub
roll
sub
or
mov
cli
rorb
mov
jo
mov
adc
and
sbb
xor
cmpsb
or
jo
lods
mov
enter
push
push
xor
sub
mov
nop
sub
sbb
mov
js
mov
sub
es
sub
xor
dec
cmp
adc
xchg
hlt
outsl
clc
or
inc
and
cmp
pusha
mov
lock
das
mov
fcmove
lock
enter
adc
call
adc
inc
add
add
jbe
push
mov
aad
push
pop
jle
les
hlt
sarl
mov
call
pop
mov
enter
mov
call
mov
clc
mov
loope
jb
jae
mov
inc
sub
push
call
std
or
dec
xor
test
call
jb
loopne
adc
inc
mov
mov
xor
sti
inc
mov
clc
adc
aad
loopne
xor
subb
push
adc
call
push
cmc
inc
hlt
adc
lods
adc
inc
mov
xchg
bound
sub
xchg
ljmp
mov
or
xchg
mov
push
pop
or
and
dec
inc
mov
cmp
test
add
push
xor
mov
repz
repnz
jb
pop
cld
call
push
je
jo
xchg
pusha
jecxz
xchg
or
in
or
es
mov
lret
aas
lock
rclb
jo
mov
xor
daa
push
and
in
or
mov
filds
push
sbb
cld
xchg
lea
and
xor
mov
lock
ret
ljmp
idivl
mov
cmp
push
adc
cmove
xor
cltd
loope
loopne
hlt
add
add
push
add
pusha
mov
cli
outsl
jo
addl
xor
adc
sub
call
test
xchg
jg
and
cmp
lcall
loopne
sbb
call
and
add
push
push
lock
jno
test
fnstsw
decb
push
jl
cld
es
xor
psrad
cmp
adc
add
push
dec
pop
sub
add
push
push
lods
movaps
xor
cmp
je
xor
or
mov
mov
xchg
xor
jo
int
lahf
jmp
or
stos
add
add
mov
or
jo
add
fwait
or
sub
pop
add
push
into
pop
push
adc
jb
push
icebp
gs
ja
sub
das
xor
ret
push
hlt
pop
std
dec
ret
or
repnz
sbb
push
or
stos
fsubr
aam
inc
in
jo
test
or
andb
fsub
out
add
pusha
mov
or
sub
sbb
lret
and
test
lret
inc
jbe
sti
add
in
or
mov
and
test
pop
lock
or
subb
insb
sahf
enter
mov
cmp
and
sbb
cli
ret
and
cmpb
lods
jg
add
orb
or
je
cmp
push
and
mov
push
jg
mov
dec
adc
add
add
jge
xchg
call
fwait
testb
mov
add
lret
adc
orl
push
mov
popa
inc
les
and
stos
cwtl
inc
sub
add
enter
fs
inc
or
push
fmuls
adc
push
test
xchg
lods
or
fidivl
mov
or
fcoms
int3
push
mov
scas
xchg
add
jmp
jns
push
add
rolb
push
push
push
shlb
jl
pop
pusha
lcall
mov
addr16
cld
cmp
ret
rcll
inc
push
clc
pop
sub
jp
or
add
jo
call
push
enter
dec
and
push
andb
jp
pop
mov
fiaddl
mov
push
dec
test
add
out
jo
lods
cmpxchg
mov
jo
push
lea
adc
cmp
jbe
add
push
add
dec
clc
in
inc
push
jle
push
push
cld
xor
jne
or
push
push
xchg
push
movsl
cld
and
inc
mov
push
inc
and
jg
mov
mov
mov
pop
adc
and
shrl
pop
cs
lea
dec
filds
cmp
jecxz
pop
inc
pop
add
mov
xchg
nop
sbb
adc
icebp
fldl
fiadds
push
rcl
pusha
xchg
pop
add
rorb
push
faddl
add
movb
xor
sti
push
xchg
push
out
cmp
ret
or
dec
dec
sarb
insl
sub
add
and
bound
or
mov
push
mov
shll
dec
jl
shlb
ret
leave
cmp
pop
and
shrb
mov
rolb
and
roll
dec
add
call
cld
mov
nop
add
and
imul
xor
loope
sbb
jne
clc
fwait
sub
cmp
pusha
daa
push
test
push
and
cmp
shr
dec
cmp
mov
loop
and
xchg
nop
push
ds
ds
add
push
xchg
sbb
loope
lock
push
push
pop
outsb
out
mov
xchg
push
dec
ljmp
add
inc
jle
lock
in
cmpsb
loopne
jno
xchg
and
push
enter
fs
test
xchg
or
decb
push
pop
loopne
pusha
and
mov
mull
xchg
mov
or
sub
mov
inc
dec
add
xchg
test
in
movsb
dec
jp
jmp
fmulp
arpl
jecxz
push
call
lcall
adc
inc
add
rolb
dec
dec
mov
mov
imul
add
add
or
in
clc
loop
out
push
pop
and
mov
adc
inc
mov
loopne
or
push
sub
add
out
call
cmp
cmpl
orl
add
pop
xor
add
jl
cmc
push
jne
pusha
add
cwtl
daa
or
incl
call
adc
ja
lock
loopne
mov
xchg
pop
mov
psubsb
cld
pushl
cmp
lcall
xchg
orb
pop
mov
mov
call
addps
mov
sbb
sub
or
add
outsb
xchg
mov
ljmp
loop
clc
sarl
xorb
jle
xchg
into
pusha
adc
jp
adc
ret
mov
dec
xor
int3
idivb
xorl
add
dec
cmp
jne
js
mov
mov
repnz
add
ret
dec
sub
or
add
mov
adc
enter
add
pop
adc
ret
inc
loopne
sub
push
je
jl
or
lods
jno
pusha
sbb
xor
cmp
jecxz
sbb
mov
test
pop
dec
pusha
lods
loopne
into
xchg
pop
decl
pusha
dec
shlb
push
nop
xor
push
inc
shrb
pop
inc
outsb
pop
sbb
cmpsl
sbbl
inc
jnp
mov
outsb
inc
repnz
xchg
and
loopne
pop
xor
push
inc
sub
clc
xchg
loopne
test
icebp
add
idiv
cmpsb
adc
fs
and
pusha
mov
add
inc
push
add
rorb
int3
or
pop
pop
and
xchg
rorb
xchg
andb
inc
enter
nop
adc
fisubrs
inc
std
data16
loopne
push
inc
lcall
enter
and
xor
iret
fisubl
aam
xor
clc
lds
pop
shlb
push
adc
popa
cs
add
mov
adc
nop
cld
mov
addr16
add
inc
add
aaa
xchg
mov
mov
fistps
dec
dec
lods
arpl
or
and
and
imul
mov
adc
adc
popa
jge
and
loope
jo
mov
and
push
ljmp
data16
pusha
stos
test
je
pop
mov
popa
pop
push
dec
mov
add
jg
xor
pop
dec
cmp
nop
jo
lea
xor
jno
add
add
jb
outsl
fisttpl
fs
sbb
bound
cs
xor
stos
aam
jo
cmpsb
xor
or
jo
fs
ficompl
gs
inc
es
and
mov
imul
out
mov
scas
call
jmp
inc
push
stos
in
mov
add
adc
inc
add
int3
cmpsb
sbb
inc
and
or
call
add
sbb
ljmp
pop
xor
dec
sbb
cmp
or
jne
mov
sub
mov
xor
lock
add
or
or
or
lock
lock
out
xor
cmpsb
jecxz
shrb
int3
nop
std
testb
push
xchg
jl
call
sub
test
sbb
fadds
mov
adcb
mov
stos
or
std
jg
cmp
ret
mov
push
lea
sti
mov
mov
adc
insb
lods
sbb
stos
cmp
jge
fstp
xor
lahf
sbbl
pop
add
sbb
mov
xchg
stos
xor
lea
mov
pop
adc
or
call
bsf
jne
test
cltd
push
test
lock
test
jno
hlt
fidivs
pop
pop
mov
aam
and
jo
jbe
and
push
aam
jle
rcrb
mov
inc
incl
aaa
popa
pushl
daa
out
icebp
inc
add
jle
or
daa
inc
jge
jb
dec
adc
add
pushl
sbb
xor
inc
jl
add
push
idivb
inc
cmp
fcmove
and
out
ljmp
add
jbe
pusha
test
or
inc
les
sti
lods
sub
and
adcb
add
cmpsl
push
xorb
inc
dec
and
out
xchg
add
cld
push
scas
test
std
inc
shlb
jp
jb
imul
in
shlb
add
adc
inc
and
jmp
movb
arpl
push
into
leave
add
clc
dec
push
lcall
jg
jns
repnz
pushf
xor
cmp
int3
mov
push
push
sbb
mov
clc
xor
je
loop
pusha
inc
mov
push
mov
adc
ja
fcmovbe
bound
movsb
adc
mov
sub
adc
push
shrb
push
in
sub
cmp
rorb
or
pop
add
aas
add
int3
sbb
mov
cmp
jne
cmp
mov
lea
mov
mov
dec
sbb
filds
jb
mov
jl
sbb
lods
clc
mov
jne
inc
test
jmp
lcall
mov
sub
xor
mov
sub
mov
xchg
mov
mov
xchg
xchg
mov
mov
dec
sub
xchg
inc
adc
aaa
jp
mov
inc
inc
into
sbb
xor
fistpll
pop
mov
pushf
test
lock
cli
lock
jno
dec
adc
mov
or
or
cmpsb
ret
call
inc
pop
add
jno
mov
push
or
jo
pop
or
je
cmp
xor
insb
scas
es
xor
or
leave
mov
cmc
mov
cmp
scas
add
push
xor
pop
or
mov
icebp
aaa
call
xor
push
fdiv
sbb
xchg
and
call
lds
icebp
lcall
testb
mov
divl
pushf
sbb
call
or
pop
adc
adc
pop
mov
cmp
mov
mov
lea
adc
cmpl
mov
ss
add
pusha
cs
jno
test
cli
cmp
mov
dec
nop
pop
xchg
xor
xor
inc
ja
cli
aas
cmp
scas
or
outsb
adc
or
xchg
loop
and
push
les
std
pop
push
sbb
or
push
adc
jle
mov
jne
cltd
add
jno
cmc
lahf
fimuls
rol
or
or
or
pusha
push
loopne
push
xor
adc
dec
rclb
push
pusha
repnz
mov
mov
popa
or
stos
jmp
jo
iret
test
lret
aas
jl
and
jne
push
pusha
lea
xor
loopne
xor
jno
test
out
add
mov
cmpsb
mov
loop
add
sbbb
fmuls
add
add
lock
jne
rclb
or
or
outsl
and
fcomi
or
xchg
or
sbb
ja
mov
test
or
add
sbb
cmpb
or
and
add
std
je
xor
in
dec
mov
hlt
adc
add
jecxz
mov
jmp
mov
lret
lock
mov
mov
test
sub
jae
sbb
push
inc
mov
in
sbb
push
rol
es
decl
push
andb
imul
xor
xor
pop
cmpl
aas
adc
or
aaa
sti
cmp
or
ja
xor
cwtl
jo
sbb
jbe
loopne
data16
mov
jg
add
pop
mov
pop
pop
inc
fcomip
popf
mov
jle
mov
dec
call
inc
outsl
in
mov
inc
mov
ret
mov
sub
outsb
adc
sbb
xchg
add
repz
pop
push
mov
or
xor
dec
xchg
or
inc
dec
stc
push
rcll
pop
add
shrb
mov
push
movsb
and
push
mov
pop
dec
test
dec
jbe
sub
aaa
cmc
sub
add
dec
mov
add
add
cmpsb
rorb
cmp
mov
add
je
add
jo
hlt
in
cs
ffreep
daa
out
adc
sbb
mov
xor
push
enter
pop
imul
xor
mov
sub
sub
mov
loope
lret
inc
push
shll
sub
out
add
pusha
cltd
and
ror
lea
and
pusha
add
mov
or
sbb
add
js
inc
bound
sub
repz
je
imul
xor
jae
fwait
orb
xchg
jl
popa
cmpsb
and
adc
mov
sbb
and
cmp
xchg
xchg
jns
or
inc
cmp
mov
imul
or
fcomp
pop
add
lock
and
cmp
add
pop
xchg
adcb
pop
out
push
test
call
push
mov
imul
pop
gs
mov
mov
cmpb
fsubr
or
inc
mov
xorl
or
and
mov
stos
add
dec
std
sbb
cmp
dec
pop
mov
sbb
push
add
push
and
dec
loop
jb
cmp
push
pop
clc
fisttps
jge
push
xchg
sarb
loop
das
test
lcall
add
add
mov
movsb
loopne
subb
jb
and
shl
pop
xchg
ret
pop
in
mov
outsl
jg
rolb
cs
je
shrb
mov
mov
or
aad
push
xor
jbe
add
fsubrs
xchg
add
or
add
mov
push
inc
xor
into
mov
lret
adc
or
jbe
xor
mov
mov
lcall
and
inc
and
adc
push
pop
jb
add
ss
cli
push
cli
nop
nop
shrb
rcrb
push
popf
pop
ficoms
jo
xchg
fisubs
mov
sbb
test
adc
cmp
das
sub
or
inc
adc
mov
add
add
adc
fdivrl
mov
call
or
movsb
iret
or
lods
cs
push
out
mov
xor
lret
and
fdivrp
bound
enter
sub
inc
lcall
mov
cs
jg
lods
cmp
ret
std
xchg
push
lcall
and
inc
mov
fistpl
mov
xchg
adc
sub
lret
and
shrb
call
add
xor
xor
or
outsb
sbb
inc
dec
adc
fadds
cmp
push
out
ss
or
je
xchg
add
cmp
je
mov
out
add
pop
mov
out
cmpl
shlb
sbb
std
add
mov
mov
jg
hlt
cmpsl
adc
fcoml
adc
inc
loopne
sbb
aad
xorl
sbb
enter
inc
adc
push
cmpsl
jle
pop
pusha
inc
xor
bound
ja
sti
loopne
fucomip
stos
add
inc
outsb
push
xor
aam
add
aad
call
sarb
sarl
pusha
add
mov
or
loopne
lock
dec
jbe
nop
cmp
or
ss
sbb
out
scas
mov
clc
push
fs
add
negl
out
push
cmp
out
lods
adc
push
dec
data16
mov
adc
ja
push
jecxz
fsubrl
and
in
in
loop
and
jbe
fsubr
or
adc
outsb
mov
add
mov
inc
mov
mov
cmp
push
aad
and
shrb
loopne
loopne
pop
daa
outsb
jp
xchg
add
add
jnp
js
xor
sub
les
fwait
ss
push
je
pop
cmp
or
jge
decl
mov
sbb
adc
push
test
bound
mov
or
xchg
add
dec
mov
xchg
inc
push
mov
rclb
test
adc
pop
idivb
leave
int3
sub
shlb
push
mov
sbb
xor
cld
rcrb
aam
mov
jnp
jne
mov
push
cwtl
inc
leave
lret
loopne
xchg
or
and
inc
add
mov
mov
add
mov
out
cmpb
xlat
scas
ljmp
loopne
dec
lea
push
mov
add
jmp
mov
mov
adc
pop
cwtl
jp
add
cwtl
loop
jmp
fsubrl
cwtl
mov
pop
enter
mov
sti
mov
add
mov
push
es
pop
loope
mov
test
loopne
loopne
hlt
or
lock
aam
mov
clc
xchg
orb
test
push
hlt
and
popa
mov
inc
jbe
push
cld
fbld
pop
jo
cld
loopne
mov
pop
in
lods
jmp
or
in
inc
popa
sub
inc
loopne
loop
addr16
sub
ljmp
fistpll
pusha
adc
loopne
pop
call
ret
je
or
pusha
lock
in
push
push
cld
call
sbb
and
push
ja
loopne
shr
fwait
out
mov
les
movsb
out
je
pusha
aad
lcall
loope
cld
data16
inc
loope
adc
adc
xor
adc
add
test
sar
adc
and
jmp
mov
cmp
pushl
mov
jge
pop
pusha
or
jle
push
xor
jno
mov
es
mov
jne
dec
cmp
mov
push
jmp
mov
cli
mov
or
out
pusha
add
add
and
stc
sbbb
mov
sub
jo
pop
ds
or
enter
jb
es
xchg
or
clc
add
pusha
sub
adc
int
cmp
es
incb
sub
xorl
jb
add
xor
and
mov
adc
fbstp
rolb
fsubrl
lock
push
call
and
sbb
jno
stos
pop
mov
add
jmp
add
push
mov
in
xor
lock
test
cmp
inc
sub
and
sub
test
pop
dec
jle
or
mov
or
xor
popf
mov
call
sub
icebp
sub
ret
or
sub
add
je
cld
add
ljmp
in
cmp
ja
jg
jecxz
push
je
cmpb
or
pop
xlat
sub
mov
rolb
outsb
aas
or
mov
push
inc
pop
das
jl
movb
std
ja
test
mov
jecxz
xorl
js
push
lods
cmp
push
push
pop
push
in
insb
add
add
lock
mov
add
out
inc
mov
movsl
xor
movb
inc
mov
jg
or
mov
pop
test
andb
xor
inc
jp,pn
mulb
jne
pop
mov
xor
xchg
mov
test
adc
or
inc
cmp
xor
mov
call
xor
push
xor
pop
jbe
pop
inc
push
or
pop
add
frstor
js
jae
jo
repnz
in
shl
mov
push
aam
xor
iret
jo
adc
jo
loopne
out
test
jne
xchg
ss
rorb
lock
das
arpl
jge
repz
and
mov
sbb
scas
sub
cmp
mov
or
add
or
frstor
imul
mov
jns
orb
adc
in
ss
repnz
dec
orb
ficompl
insl
mov
shl
push
xchg
fmuls
jbe
inc
adc
xor
add
add
adc
push
adc
sbb
lock
rolb
inc
loopne
xchg
mov
add
adc
inc
test
incb
adc
xor
sbb
aam
or
out
add
callw
push
cmp
pop
cmpb
outsl
cvtpi2ps
fsubp
and
lret
mov
mov
ret
inc
hlt
mov
pop
add
inc
aad
lds
ljmp
add
cmp
pop
loope
jo
mov
loop
jmp
outsb
add
adc
sub
lock
dec
imul
mov
outsl
clc
xchg
cli
add
mov
incl
xor
jp
jo
idiv
mov
adc
inc
inc
stos
adc
add
js
pop
xchg
push
clc
idivb
jb
xchg
pop
mov
pushf
add
xor
fists
test
pop
push
jmp
xchg
test
add
lcall
dec
inc
pop
cli
mov
mov
xor
mov
subb
dec
outsb
or
jns
add
sub
jg
adc
mov
repnz
jp
sbb
mov
lock
jl
in
call
icebp
or
jl
mov
pop
jl
call
mov
xchg
mov
push
mov
xchg
or
sub
clc
push
sub
gs
loop
cmp
enter
xor
test
jo
sbb
inc
xor
or
mov
push
xor
mov
or
inc
push
pop
sub
mov
push
andb
xor
xchg
call
mov
sub
xchg
rclb
add
xchg
aaa
xor
and
add
cmp
jnp
sbb
add
or
cmp
fistps
mov
cmp
lock
inc
and
sbb
add
pusha
xor
or
mov
sub
xor
sub
cld
out
and
je
add
push
pop
push
adc
das
mov
ja
adc
stc
push
cmp
and
inc
fmuls
jmp
ret
js
ret
pop
adc
or
call
data16
sbb
pop
xchg
xor
shrb
lods
xor
sbb
xchg
adc
xchg
xor
or
xor
aad
cltd
cld
jne
cli
sbb
je
mov
shrb
cmp
pushf
cmp
push
addb
cmpsl
ds
je
or
sbb
cmp
mov
and
mov
inc
push
lock
or
xchg
mov
and
mov
mov
lods
xor
jg
aaa
inc
push
adc
jo
nop
xor
mov
cmp
mov
push
flds
out
pop
test
mov
or
call
mov
sbb
add
shll
mov
les
xor
test
es
inc
push
clc
mov
dec
xor
leave
add
icebp
mov
add
ds
lock
test
push
or
sbb
and
data16
mov
outsb
inc
testb
lock
stos
test
fwait
xchg
xor
pop
mov
push
push
add
mov
sub
push
xor
jp
incl
bound
lea
jae
sar
ja
add
mov
mov
clc
mov
mov
inc
or
mulb
mov
call
cmp
adcl
or
add
push
ljmp
or
and
adc
daa
lock
decl
and
pop
xor
cli
push
lock
inc
int
in
add
lret
fbld
add
in
dec
inc
repnz
decl
pop
icebp
pop
enter
or
inc
mov
scas
clc
icebp
pop
aam
push
cmp
mov
add
push
dec
ret
loopne
aam
test
or
jg
sar
add
or
cmp
dec
and
lock
inc
sub
lock
add
ljmp
daa
inc
out
hlt
add
lock
mov
add
xor
movsb
lock
stos
icebp
pop
inc
push
fisubrs
mov
pop
mov
push
xchg
cli
and
push
cmc
pop
cmp
cltd
xor
xor
xchg
out
mov
pop
fcoml
aam
mov
push
xor
sbb
pop
jbe
dec
aam
test
sub
xor
outsb
push
adc
je
adcl
out
ficoms
call
movsb
xorb
jbe
pop
cmp
add
pop
outsb
clc
mov
lods
push
and
cwtl
push
add
mov
lock
xor
add
nop
popa
and
sbb
shlb
lea
cmpl
out
add
inc
lcall
cmp
int
rolb
into
pop
push
loop
dec
add
adc
adc
pop
add
outsl
pop
loopne
rorb
insb
dec
fnstsw
in
jbe
es
push
mov
call
add
add
jmp
cmpb
sub
outsl
or
mov
sbb
mov
fs
inc
xchg
lds
mov
cmp
jne
fisttpl
and
inc
or
or
inc
inc
loopne
int
outsl
or
insl
mov
mov
mov
in
jg
in
inc
or
or
mov
mov
mov
mov
inc
in
or
mov
mov
cmpsb
mov
outsl
mov
sub
in
lods
mov
imul
rcrl
outsl
ss
scas
add
mov
jo
push
mov
aas
mov
or
or
cmp
pop
cmp
les
mov
mov
or
push
mov
int3
mov
mov
ds
pop
rolb
xor
mov
repz
sub
mov
or
and
push
or
fsub
orb
fidivrs
loopne
aaa
outsl
ss
outsl
sbb
std
mov
out
aas
outsl
ss
mov
pop
xchg
adc
mov
fwait
out
mov
inc
popl
or
fwait
imul
mov
call
push
cld
mov
fiaddl
clc
mov
std
ret
aam
imul
mov
push
and
dec
or
imul
rcl
or
lock
je
dec
sbb
ret
jge
push
mov
sahf
inc
push
xchg
shlb
inc
or
lret
imul
mov
mov
or
dec
and
push
dec
and
rol
das
cmpsb
andb
mov
mov
sub
sub
inc
ret
or
sarl
xor
sbb
andb
mov
inc
inc
lock
sarl
js
cwtl
fadd
loop
dec
dec
xor
mov
mov
inc
shlb
mov
add
call
sbb
mov
dec
inc
inc
inc
mov
pop
popa
or
decl
fldl2t
bound
dec
sub
bound
push
inc
mov
lods
mov
push
or
or
push
push
cmpsb
push
pop
inc
cmp
mov
loop
movsl
mov
or
inc
dec
pusha
or
pushl
inc
push
hlt
or
fs
adc
jnp
out
cmp
aaa
or
mov
stos
mov
add
mov
mov
sbb
clc
adc
jecxz
je
sub
movl
fcmovb
enter
clc
pop
out
fwait
loopne
jbe
mov
mov
addl
jnp
dec
jb
mov
push
add
pop
pop
gs
pop
hlt
filds
stos
stos
or
adc
jle
sub
pop
scas
fdiv
popaw
sbb
fldt
mov
push
inc
jnp
rol
xorb
sbb
cltd
sahf
mov
add
jo
loope
call
cmp
sbb
ja
inc
add
push
dec
push
nop
adc
sti
push
test
test
imul
jle
pop
lret
xor
sub
xor
cmp
lahf
inc
add
mov
outsl
dec
xchg
cmp
and
scas
xor
out
mov
adc
call
je
push
fdiv
xor
inc
sub
fistps
lea
pusha
shr
addb
imulb
adc
xchg
sbb
xchg
pop
aam
and
push
xor
test
mov
negb
mov
jp
mov
loopne
pusha
ret
adc
les
mov
push
jecxz
mov
cmpsb
mov
addb
mov
jb
add
push
outsl
push
inc
clc
incb
inc
test
mov
and
cmp
rcrl
and
push
push
add
outsb
roll
repnz
test
jp
sbb
mov
adc
out
push
jne
mov
gs
testb
push
outsb
push
pop
cs
in
sbb
mov
sahf
mov
imul
mov
mov
xchg
pop
test
lea
call
cli
popf
xchg
in
fsubrl
aam
xor
inc
dec
or
jecxz
hlt
lcall
in
jo
je
xor
cmp
fisubs
loopne
cmp
insb
cmp
shlb
xor
sub
out
jo
je
insb
stc
sbb
jle
aam
adc
push
jb
call
sub
mov
int3
and
arpl
xchg
add
fidivl
push
aam
adc
or
jmp
sahf
scas
cmpl
pop
add
sbb
aaa
push
cli
xor
pusha
loop
sub
lock
cld
mov
icebp
or
sti
loopne
fs
inc
lods
xor
std
jg
test
add
je
call
mov
mov
hlt
lods
jo
inc
fwait
add
stos
mov
or
add
mov
cmp
mov
xchg
mov
scas
jo
inc
dec
xchg
test
jl
mov
nop
sbb
sub
or
das
inc
sbbl
call
popl
inc
and
adc
or
xchg
hlt
pop
or
and
lea
bound
scas
xor
or
jbe
cmc
ja
idivb
add
aaa
je
and
jne
lods
test
push
push
ret
ljmp
or
in
sbb
mov
mov
loope
lea
enter
add
sbb
xchg
cld
jne
push
mov
lret
hlt
add
add
xchg
lret
or
jo
call
mov
icebp
rcrb
push
je
and
sub
cmp
inc
dec
call
adcl
inc
adc
add
inc
sub
or
cs
adc
pop
cmp
dec
nop
sub
push
mov
mov
or
inc
or
sbb
sbb
jbe
pusha
cmp
jmp
pop
sbb
or
std
add
data16
mov
addb
adc
mov
insb
xor
mov
repz
or
sbb
repz
mov
xchg
mov
add
xchg
adc
std
jle
or
pusha
cmp
cmp
mov
adc
aaa
ret
inc
add
shrb
das
insb
add
inc
or
add
xchg
sbb
mov
aam
dec
subl
rcl
sbb
clc
in
sub
dec
clc
inc
push
and
pusha
and
or
subb
mov
jle
pop
mov
lock
pop
sbb
pop
ret
jl
jo
and
adc
cmpsb
in
xor
sub
cmp
ds
test
jmp
mov
addl
test
sub
adc
push
jmp
sub
leave
inc
daa
cmc
add
ret
or
add
or
sbb
and
lret
test
clc
neg
jmp
xorl
jp
lret
test
xchg
shlb
imulb
mov
adc
xchg
or
clc
cmp
push
pusha
test
lods
adc
lods
lret
add
sti
divb
mov
leave
pushf
rclb
mov
rolb
add
subb
out
sub
sub
lock
leave
cld
mulb
push
test
incb
push
iret
inc
fs
jno
mov
cld
jl
icebp
pop
ljmp
loopne
push
add
ds
jmp
mov
push
add
nop
add
je
setp
add
sbb
xchg
push
fcmovb
inc
clc
sub
scas
repz
dec
imul
or
pop
push
call
lret
rcll
add
xchg
mov
ljmp
push
mov
lret
or
std
mov
mov
test
xchg
hlt
bndldx
adc
inc
or
loopne
mov
dec
cld
pop
mov
xor
aam
lock
faddl
inc
jmp
or
push
inc
add
lds
int3
inc
or
clc
in
das
pop
and
imul
sbb
lock
dec
jmp
loop
add
lods
sub
push
cmp
ret
jb
pop
cld
mov
push
xor
sbb
adc
add
inc
or
lods
or
outsb
insb
insb
jb
enter
mov
pop
ds
aam
sbb
mov
and
inc
mov
add
lock
push
adc
testb
sub
add
cmovns
and
xchg
adc
sbb
sub
stos
pushl
ljmp
faddl
cmp
cmpsb
xor
push
add
adc
lcall
das
clc
dec
or
fcoms
decl
adc
addb
push
aas
lcall
mov
je
loop
mov
pop
inc
mov
jo
or
je,pt
or
mov
adc
adc
cltd
mov
inc
dec
inc
or
cmpsb
inc
push
add
pusha
mov
jno
dec
jg
add
mov
sub
movl
adc
loopne
dec
adc
outsb
xor
mov
mov
decb
sahf
or
inc
mov
cmc
push
scas
push
push
xchg
push
lds
sahf
mull
ljmp
pusha
subl
xor
or
jno
push
je
icebp
mov
xor
push
xchg
divb
and
jb
mov
or
addr16
push
lahf
add
push
or
sbb
xchg
mov
push
lock
sub
cmp
mov
xchg
or
pop
and
ret
mov
jo
test
ficomps
xchg
or
mov
cmp
add
ret
inc
pop
dec
add
push
mov
sbb
and
xchg
mov
test
mov
pop
xor
xchg
adcl
pop
or
adc
or
popl
pop
hlt
inc
icebp
pop
lods
pop
adc
sbb
loope
xor
leave
ret
mov
lcall
push
xor
ss
mov
pop
add
sbb
mov
jno
and
mov
and
outsl
outsl
adc
test
xor
add
sub
or
test
fs
sub
push
ljmp
or
push
jo
adc
mov
jo
aad
adc
xor
adc
dec
hlt
aas
in
add
pop
stos
xor
xchg
mov
mov
pop
imul
mov
add
mov
sahf
or
and
pushf
xor
mov
dec
or
scas
cmpsb
mov
ret
jmp
cli
add
push
add
add
es
fadds
adc
add
lcall
incl
or
call
xor
adc
jl
push
lcall
or
pushf
adc
jle
add
mov
outsl
adc
jno
les
xor
push
xchg
jo
add
aaa
push
decl
and
outsb
xchg
lock
xorb
sub
sub
mov
roll
adc
add
addb
xor
lea
or
loopne
add
mov
sub
and
push
or
stc
call
and
pop
push
push
inc
sub
fcomip
xorl
insb
adc
push
push
test
mov
or
sub
pop
inc
or
je
adc
out
inc
in
int
and
sbb
je
bound
dec
test
push
adc
adc
data16
mov
add
pop
pop
cmp
pop
add
mov
sbb
xor
movsb
rcl
add
or
jecxz
push
adc
loopne
repz
pop
lds
movsl
adc
pop
arpl
push
or
inc
or
inc
and
adc
mov
cli
lret
xchg
cli
mov
cmpl
in
and
adc
aaa
lods
fwait
mov
push
push
es
adc
or
aad
das
pop
push
add
xor
push
lcall
mov
pop
push
add
hlt
cs
inc
adc
or
xchg
add
push
insb
dec
push
dec
cli
mov
jle
outsb
inc
mov
je
mov
cld
call
add
sbb
mov
xchg
adc
cmp
adc
das
push
dec
inc
mov
xlat
stos
xorb
out
xchg
mov
sbbb
xorb
out
push
pusha
pusha
cmp
cli
cld
addb
dec
or
xor
pop
mov
or
mov
add
clc
das
mov
sar
xchg
xor
adc
inc
cmpb
add
dec
or
cmp
aad
add
push
pusha
and
push
add
push
mov
add
mov
inc
mov
sub
testl
push
add
shlb
add
mov
or
add
push
xchg
add
push
adc
std
pop
gs
add
inc
addb
mov
push
dec
loopne
stos
or
orb
std
hlt
int
shlb
je
inc
add
shlb
mov
and
testl
js
dec
push
mov
or
fadd
push
int
xor
daa
test
lret
xlat
add
inc
clc
shlb
inc
cmpsl
mov
sub
sub
push
push
mov
test
sub
add
xor
adc
adc
sete
add
rolb
and
pusha
jmp
rclb
or
idivb
test
jp
shlb
jne
mov
push
pusha
mov
pop
lds
rcrb
rcrl
in
inc
xor
fcmovnb
adc
adc
push
xchg
push
push
add
adc
dec
sbb
push
jge
adc
xor
sub
cs
insb
adc
add
in
es
cmp
sbb
mov
inc
mov
shl
aam
inc
into
xchg
cltd
push
jno
add
cltd
rol
fbstp
mov
jge
add
loopne
or
popa
pusha
andl
push
incl
cs
add
add
jbe
dec
xchg
sahf
adcb
adc
and
mov
add
lock
clc
pusha
shll
sbb
testl
shrl
rcrb
adc
push
sub
lret
fiadds
pop
add
mov
cld
dec
sub
fdivs
das
mov
loopne
inc
jbe
xor
xchg
sub
mov
out
loope
jne
pop
aad
dec
sub
jle
lret
andl
insl
push
adc
ret
mov
and
xchg
stc
add
mov
add
aaa
or
loope
loopne
int3
or
add
adc
xor
mov
adc
lcall
or
das
push
scas
out
mov
and
jle
nop
adc
pusha
or
decb
jo
ret
cmp
movsl
jo
clc
stos
lock
je
test
out
das
orb
jl
dec
xchg
jmp
jp
lock
insb
push
hlt
xor
cld
and
fs
push
push
loopne
loope
data16
push
mov
and
push
pushf
loope
cmp
test
insb
in
loopne
and
ret
pushf
xchg
xor
cmp
loopne
jb
stos
in
sbb
jl
push
jbe
inc
js
lea
push
loop
add
bound
xor
orb
test
repz
jmp
push
decl
lea
adcl
inc
mov
cmp
xor
add
call
xor
xor
xor
add
add
mov
lea
adc
orb
adc
inc
add
xor
mov
pusha
cli
add
cld
adc
mov
xorb
inc
mov
shrb
and
ljmp
fs
sbb
sbb
sub
adc
dec
daa
mov
jecxz
aaa
dec
out
cmp
xorb
cli
mov
mov
mov
adc
pusha
lea
cmp
sub
or
inc
dec
jb
jmp
sub
adc
adc
xor
mov
pop
sub
and
adc
xor
lock
repnz
jg
xchg
loopne
pop
ret
add
rcr
xchg
pusha
cmp
mov
mov
ret
or
push
xchg
adc
pop
jecxz
pop
sbbl
loop
ds
add
pop
loope
loopne
push
iret
cmpsb
inc
cmp
test
mov
sub
adc
into
test
pop
and
inc
popa
mov
or
stc
push
loopne
pusha
dec
cmc
push
vcmpneq_uspd
xor
add
aaa
lret
push
xorl
fsubl
mov
add
jmp
pop
in
pop
mov
mov
pusha
sub
stc
test
sbb
scas
add
fld1
push
jecxz
jne
pop
inc
inc
jnp
sbb
push
mov
sbb
ss
and
and
push
inc
mov
and
lret
je
push
fdiv
ret
push
adc
cmp
and
les
or
mov
nop
cli
and
pusha
push
cli
push
leave
nop
ret
test
push
sbb
mov
push
sahf
loope
pusha
loopne
xorb
mov
lods
pusha
flds
adc
inc
iret
xchg
xor
xchg
bound
mov
push
test
add
out
xor
in
xor
cmp
sbb
fdivr
sbb
inc
loopne
or
pusha
add
test
dec
mov
call
cli
std
cmp
add
add
ljmp
adc
xor
adc
cmc
sub
adc
sbb
adc
push
sbb
pusha
and
int3
in
test
pop
cmpb
test
and
or
pusha
inc
pop
daa
add
jne
imulb
loope
xorb
or
pop
testb
xor
sub
fisttps
test
ret
mov
mov
cmp
ljmp
mov
mov
jb
in
dec
cli
iret
rorb
or
cld
neg
in
push
mov
push
mov
push
dec
pop
stc
in
jle
pushf
loopne
add
jg
cmpsb
mov
sub
mov
adc
mov
add
push
push
adcl
and
xor
push
nop
dec
sub
adc
jmp
out
xchg
adc
clc
shufps
ljmp
and
adc
push
jo
push
clc
pop
adc
mov
out
std
lock
test
xor
int
and
out
add
or
jmp
mov
and
leave
jno
or
rolb
lcall
cld
fnsave
add
lock
mov
je
and
adc
add
jmp
and
into
addl
jb
push
aad
in
pop
add
and
adc
mov
cmp
jo
hlt
and
mull
add
leave
lods
jb
jg
mov
call
adc
pop
pop
add
movsl
jno
xor
call
xor
jmp
ret
mov
jmp
outsb
sub
inc
nop
xor
pop
sbb
push
push
dec
test
pushf
jge
hlt
sbb
xor
shlb
mov
add
in
sti
jle
adc
inc
push
mov
test
add
sub
lock
cmc
add
push
xor
movb
stos
push
mov
fisubrs
clc
and
shlb
and
sub
pushf
sarb
mov
add
lret
push
pop
mov
add
jg
gs
dec
pushf
addl
xor
les
jl
ss
dec
sbb
mov
nop
popa
mov
enter
jo
mov
insl
je
addb
adc
xchg
inc
jb
push
sub
add
addb
mov
jne
das
xor
push
xchg
xor
inc
jmp
imul
rcl
or
jne
jge
jo
add
mov
and
add
mov
add
imul
sub
push
sahf
push
xor
push
enter
sbb
jo
jne
adc
or
std
mov
mov
dec
xor
neg
fildll
cld
cwtl
and
rcl
adc
pop
lret
outsl
sub
es
add
negb
mov
or
mov
add
les
aas
test
push
sub
or
pop
pop
fwait
xorb
decl
ret
cs
add
jb
xor
cmp
ljmp
xor
adc
add
jg
inc
call
cmp
push
pop
sub
movzbl
add
lock
push
add
or
pusha
mov
lea
mov
add
pop
add
fwait
add
call
mov
adc
jo
enter
cltd
and
nop
aaa
dec
ret
mov
aaa
lock
scas
lock
xchg
sbb
or
add
jo
icebp
dec
sub
lods
lods
pop
and
jmp
cli
in
add
xor
je
out
andb
pop
aaa
call
test
xchg
mov
jo
lret
or
pop
xchg
xchg
xchg
nop
insl
pop
pushf
jmp
adc
or
sar
add
jnp
lods
dec
or
sahf
call
and
popa
shlb
xor
pusha
adc
inc
or
rcrb
xchg
stos
push
mov
sbb
mov
mov
mov
mov
fdivs
mov
rorb
mov
mov
jg
ret
data16
or
xor
dec
mov
movsl
shlb
mov
jp
and
xchg
mov
inc
add
pop
cwtl
inc
sti
movl
mov
sti
push
xchg
les
test
jo
xchg
xor
int
adc
pop
sbb
mov
jo
xor
add
add
xor
ret
and
hlt
dec
inc
and
adcb
scas
test
movsb
in
push
mov
out
es
ja
dec
mov
inc
ret
dec
pop
or
pop
mov
add
je
push
roll
dec
add
dec
cmp
jbe
xor
or
push
jmp
leave
push
cld
or
mov
lea
and
loop
test
push
lods
adc
push
rol
jle
fisubrs
insl
outsl
adc
inc
jbe
outsl
add
add
push
pusha
mov
hlt
add
mov
dec
arpl
scas
sbb
sbb
sub
sub
rclb
out
lock
sub
out
movsb
mov
pop
aam
ret
jb
cli
or
xor
enter
mov
or
addr16
mov
insl
loope
test
call
push
call
les
xor
pop
enter
push
shrb
lret
or
adcb
inc
sub
add
mov
adc
ja
fists
call
or
pop
xor
ret
popf
ret
push
jb
dec
lock
incb
add
hlt
pusha
std
inc
loop
push
jbe
adc
movsl
lock
sub
idivb
jo
mov
pop
and
sar
loope
push
push
push
shll
shr
sahf
mov
je
stos
jo
add
shr
xchg
add
push
lods
push
sbb
xor
jmp
repz
xor
orb
sbb
mov
add
mov
add
jno
inc
jns
icebp
xchg
gs
and
pop
jbe
cld
pop
lods
pop
add
push
mov
add
add
scas
mov
sbb
pop
bound
dec
add
mov
call
sub
in
mov
xorb
es
scas
add
ja
mov
adc
pop
aad
pop
jmp
mov
aam
add
jmp
xor
hlt
adc
fs
or
sbbb
mov
call
testl
repz
cld
xor
add
push
mov
je
inc
inc
std
sub
pop
cmc
add
push
add
rclb
adc
cs
cltd
ljmp
cmc
sub
not
lret
sub
pop
sub
jae
and
lea
lods
inc
test
push
bound
clc
inc
js
cmp
jae
fiadds
sbb
lock
add
mov
push
pushf
inc
jb
or
test
ret
push
fimuls
inc
cli
jmp
or
icebp
push
jne
jl
add
cmpsb
mov
and
pushl
test
xchg
pusha
lret
jl
shlb
adc
mov
jo
push
or
cmpsl
roll
js
mov
and
das
clc
sbb
push
push
je
xchg
pushf
inc
jmp
pusha
xor
push
dec
xchg
inc
ret
add
les
fs
and
mov
and
pusha
mov
or
or
xor
ret
pop
xchg
adcb
jbe
jb
pop
lea
aam
jecxz
or
xchg
mov
add
mov
cmp
inc
ret
inc
test
lock
icebp
or
repz
adc
fs
cli
push
xchg
sbb
stos
jbe
push
dec
inc
and
inc
add
jnp
or
daa
mov
pop
mov
and
enter
fimull
test
nop
push
andl
fbld
mov
repz
add
push
push
add
mov
cli
dec
mov
pushl
add
mov
xor
xor
mov
ljmp
mov
addb
rcll
mov
rolb
in
aaa
adc
cmp
xor
leave
orb
out
sbb
add
ret
sbb
xchg
cmpb
push
push
call
adc
mov
cmp
pop
ret
push
push
and
xchg
mov
xlat
pop
dec
adc
xor
enter
test
push
mov
je
adc
iret
pusha
or
push
inc
inc
cmp
jne
pop
adc
movsl
and
add
int3
or
xor
sahf
or
cld
iret
xor
fistps
loop
data16
mov
nop
jb
testb
stos
fimull
add
outsb
popa
stos
out
cmpsb
sub
je
adc
dec
test
cmc
stos
pop
insb
jb
pop
mov
xchg
adc
add
or
adc
jp
fisttps
loopne
dec
int3
cmpl
mov
mov
push
cwtl
cmp
je
frstor
hlt
sarb
push
push
fdivr
adc
xchg
negb
cli
cmpl
dec
pop
fsubrl
sbb
adc
or
and
pop
add
andl
lret
or
roll
hlt
adc
scas
add
add
stos
inc
adc
pop
repz
mov
and
sbb
pop
mov
adcb
mov
inc
dec
mov
add
inc
scas
test
add
and
or
roll
loop
mov
xchg
or
rclb
movsb
gs
rol
add
and
cwtl
lret
pop
adc
jo
cmp
adc
sarb
pop
push
and
xor
rorb
sub
mov
popf
test
cs
mov
add
mov
xor
cltd
mov
or
data16
pushf
ror
add
js
decl
add
sub
in
push
and
rolb
pushf
pop
mov
sub
inc
pop
xchg
ret
cwtl
jle
or
movsb
roll
loopne
insb
aas
xor
cli
loopne
insb
inc
add
cmp
sbbb
jg
add
movl
lock
and
mov
jp
cld
push
sahf
mov
add
mov
pop
int3
test
push
test
rorl
jo
push
call
adcb
jbe
shl
js
mov
push
stos
fadd
testb
lock
mull
mov
mov
xor
shr
mov
jg
in
or
add
push
rcr
test
das
loop
rcr
or
jne
inc
test
addb
ss
mul
add
push
add
divl
cmp
testb
fwait
push
inc
xchg
add
jo
testb
fcmovb
fdivrs
cmc
das
nop
xor
roll
add
ljmp
popa
mov
push
mov
hlt
push
push
or
out
scas
test
ficompl
mov
icebp
push
push
push
adcb
pop
pop
movsb
ret
or
ret
data16
loopne
adc
sbb
shrb
ret
mov
enter
test
push
shl
rcr
out
xor
push
mov
sete
push
cmpb
out
fmulp
adc
icebp
add
aaa
pushf
stos
shrb
push
cmovs
push
push
test
inc
add
add
mov
push
xchg
xor
sub
mov
or
es
cmc
inc
xlat
cmp
adc
jl
cli
push
add
imul
inc
jg
mov
scas
push
cmp
mov
pop
cmp
add
sub
push
sbb
lcall
out
shr
or
inc
lea
pushf
adc
dec
loope
add
ljmp
xor
rcrb
sarb
ds
push
push
iret
lods
in
call
pop
xor
add
and
hlt
or
jne
mov
mov
sar
push
mul
je
pushf
dec
sub
jl
scas
add
add
sub
shll
xor
sbb
aam
mov
jbe
insb
and
jb
add
loopne
and
les
pop
leave
and
lds
gs
push
pusha
pop
loopne
call
mov
dec
lock
mov
add
add
cltd
add
and
jbe
orb
push
sti
push
call
mov
ret
nop
xchg
cwtl
loope
inc
dec
std
adc
jb
xorb
cld
loopne
or
or
lcall
mov
loope
pop
add
inc
cvtps2pi
and
popa
in
inc
pop
mov
add
mov
or
or
mov
out
pop
rcll
cld
inc
sub
sahf
adc
pop
mov
jmp
hlt
leave
or
lods
call
or
mov
push
adc
cld
rcrl
add
mov
jb
les
clc
outsl
push
lds
dec
enter
sub
loope
daa
pusha
cmp
or
add
popf
clc
dec
add
pusha
cmp
sbbl
add
inc
jg
imul
xchg
push
xchg
call
or
add
xor
mov
push
mov
cmpsb
sbb
mov
imul
pop
xor
pop
scas
insb
sub
pop
mov
out
cltd
pusha
adc
in
add
stos
sub
jbe
mov
push
test
push
adc
pop
inc
pop
add
push
rcr
push
push
push
fs
mov
inc
dec
jnp
add
sbb
xor
add
push
mov
push
fisttpl
fistpl
sbb
icebp
add
and
rep
fcmovnu
add
or
jo
clc
and
insl
cs
sub
mov
sub
addb
fadds
in
mov
xchg
pop
cmpsb
lock
in
push
aad
mov
add
les
lock
jnp
xchg
movsb
data16
xor
jl
lods
jmp
dec
js
mov
sub
cli
or
pushl
push
std
or
add
or
sbb
sbb
add
dec
stos
sub
out
add
imul
es
int
add
dec
out
cld
pop
mulb
lock
push
lock
aam
insl
pop
fcmovnu
or
pop
cmp
movsb
mov
int
lods
and
push
das
jo
cmpb
xor
mov
sbb
movsb
pushf
cmp
mov
xor
mov
imul
fcmovnbe
pop
jbe
icebp
add
dec
xor
dec
shl
dec
inc
test
in
rorl
stos
xor
stc
mov
and
mov
ret
mov
add
cld
push
stos
jl
loopne
lock
cmp
loopne
or
add
push
icebp
add
loop
test
out
sarb
sbb
jg
jbe
add
rcl
mov
int3
cmc
add
push
fs
xchg
push
out
mov
insb
mov
add
xchg
jo
jp
push
xchg
in
dec
aad
jo
daa
mov
mov
sbb
push
sbb
arpl
jle
push
or
push
xor
xor
or
ds
rcll
pusha
add
or
lock
mov
lds
add
push
pushl
xor
pop
push
lock
push
mov
loop
cwtl
mov
lds
sub
pop
push
mov
xor
push
ss
mov
jb
inc
das
push
in
mov
xchg
mov
loope
mov
adc
cld
or
ljmp
jns
lods
lock
add
ds
xchg
data16
jmp
pop
mov
in
add
dec
cmp
xor
adc
add
add
fidivrl
cmpsl
pusha
mov
pop
sbb
mov
push
ja
cmp
jne
ja
push
sti
adcl
mov
stc
push
cmpl
int3
enter
pop
push
add
or
sbb
nop
lock
xchg
stos
out
sbb
movsb
jo
sarb
insb
or
stos
mov
mov
addl
faddl
lock
je
mov
adc
xchg
orl
pop
or
adcb
lods
orl
cmpsb
pusha
aam
dec
lock
xor
ss
cld
rclb
mov
inc
jo
sub
lods
stos
adc
movsb
jo
sbb
inc
arpl
sub
mov
xor
cmp
mov
push
mov
roll
in
dec
es
pushf
stc
test
loopne
lods
cld
or
stos
in
xchg
pusha
leave
dec
stos
fmull
jl
lock
jo
push
dec
shl
mov
cmp
shlb
mov
jl
lea
pop
adc
fwait
or
stos
dec
adc
je
dec
xor
cmp
insl
inc
push
sahf
or
lcall
insl
inc
imul
mov
stos
xchg
addb
sar
repnz
add
sbb
xchg
cmp
rcr
pushw
bound
fistpl
enter
stc
xor
cmc
inc
jl
imul
add
jmp
push
insb
mov
sbb
or
mov
hlt
stos
aad
roll
stos
sbb
dec
imul
add
test
andb
add
stos
cltd
adc
add
imul
outsl
lcall
das
ret
outsb
rcr
mov
mov
scas
push
sbb
mov
mov
shll
xchg
dec
shll
outsb
push
dec
shll
bound
push
push
dec
xor
shll
inc
inc
ds
xor
shll
xor
sub
dec
shll
and
sbb
adc
out
shll
push
add
cmpb
div
out
push
ljmp
out
fcmovbe
ror
sbb
imul
lcall
cmpsb
cmpsl
imul
imul
cmpsl
imul
imul
imul
cmpsl
imul
cmpsl
imul
imul
xor
cmp
push
ljmp
repz
ror
add
xor
lret
mov
add
subl
je
mov
inc
stos
mov
xor
andb
xor
add
mov
imul
daa
lcall
push
sbb
mov
adc
sbb
xchg
cmp
aaa
jns
sarl
das
outsb
push
data16
jns
cmpsb
bound
push
push
pop
jnp
lcall
add
or
sbb
cmpsb
jns
imul
sbb
and
push
adc
or
test
faddl
push
decl
lods
jns
cmpsb
div
out
ljmp
xor
fiaddl
add
mov
mov
fiaddl
call
add
sbb
mov
imul
mov
lcall
jbe
pusha
andb
pushf
dec
repz
push
pop
add
add
adc
cmpsl
sbb
push
sbb
and
pusha
loopne
mov
shll
ror
mov
cmp
lret
mov
or
mov
inc
xor
stos
mov
shl
mov
cmpsb
imul
push
dec
dec
push
and
pusha
sahf
add
sbb
andb
mov
push
stos
xor
ss
insb
sub
sbb
inc
inc
cmp
cmp
fisttpl
inc
stos
in
push
jmp
imul
cmpsl
sbb
mov
dec
mov
inc
test
ja
pop
cmpsb
das
popl
movb
pop
cmpl
fiadds
mov
push
and
xorb
jne
sub
cltd
jp
add
fisubrl
add
aas
aam
adc
dec
sbb
cs
inc
das
pop
movsl
pop
adc
pop
pop
sbb
jle
add
and
xor
testl
mov
testb
decb
aam
cmpsb
shl
add
in
mov
or
mov
into
out
or
and
popa
or
das
ret
add
mov
loopne
pop
add
out
mov
push
ret
ret
push
cltd
inc
addl
mov
loopne
fiaddl
std
xor
push
data16
loop
jae
test
sbb
jae
mov
sahf
fst
or
aam
pusha
ret
call
and
and
inc
aaa
jnp
call
cmp
add
dec
add
and
stc
call
mov
mov
ret
add
dec
or
xor
int
inc
and
ret
pop
das
add
push
pop
and
mov
jl
jl
add
cmp
fistps
std
adc
push
add
inc
mov
add
call
fisttpl
stos
inc
xor
pushl
jb
jo
lock
add
mov
add
dec
bound
icebp
push
and
pop
mov
fisttpll
mov
cmpsl
add
cmp
add
sub
add
jp
jg
add
push
ljmp
mov
pop
clc
or
in
or
lock
mov
xor
call
mov
repnz
or
js
push
int3
or
ret
call
dec
adcb
mov
filds
push
adc
add
adc
adc
cli
xor
stc
sub
xor
xor
push
cmp
fildll
xor
cltd
xor
cmp
call
fxch
jle
addb
xor
sub
jl
jg
xchg
repnz
call
cmc
or
sub
pop
mov
not
cli
aas
and
sbb
je
pop
je
fidivs
mov
jo
mov
stc
add
and
push
jo
inc
incl
sbb
and
and
mov
add
jg
fadds
fs
cmp
call
xor
mov
jno
std
jo
or
and
sbb
cltd
movsb
adc
sub
mov
cwtl
inc
pop
mov
adc
and
jo
and
jo
mov
fadds
or
movsb
popa
pushf
pop
pop
call
adcl
pop
loopne
loop
mov
in
and
and
or
adc
pop
jo
das
cli
das
push
jbe
add
xchg
jnp
push
mov
or
sbb
cld
nop
call
cli
cld
mov
jge
lret
sbb
pushl
int3
imul
cmp
xor
outsb
or
xor
cltd
xor
addl
adc
lock
jbe
add
mov
ss
testb
lock
sti
cmp
es
loopne
xchg
subb
clc
and
pop
add
and
ss
add
mov
mov
inc
lcall
cmp
xor
addl
add
jno
mov
adc
das
fimull
hlt
add
xor
sbbb
cmp
fs
repz
xchg
jno
xor
inc
jne
decl
movsl
call
test
jno
dec
adc
add
cli
jo
ret
mov
jg
pop
push
hlt
add
call
jne
repnz
repnz
pop
mov
pop
call
push
xor
or
int
sti
jb
icebp
lock
add
adc
xor
pop
adc
lods
cmp
mov
outsl
fcmovbe
adc
pop
sti
or
jno
imul
jo
push
mov
mov
push
mov
push
mov
lahf
inc
xor
jne
ljmp
mov
mov
orb
mov
dec
mov
adc
sti
daa
add
ds
xchg
div
sarb
pop
es
push
jo
sbb
mov
out
call
add
fists
jp
xor
sbb
push
shll
push
xor
jmp
jne
aad
add
sbbb
push
xor
aam
jno
inc
mov
and
jecxz
add
or
pop
cmpsb
fwait
lock
xor
andb
inc
mov
pop
jl
xor
or
xchg
sub
jb
shll
pop
mov
pop
test
mov
and
push
cs
mov
xchg
clc
scas
xor
call
or
inc
mov
imul
or
add
cmp
mov
out
or
push
push
icebp
sbb
pop
bound
sti
jbe
and
push
push
push
clc
jno
or
push
sbb
call
cmp
pop
mov
jo
adc
adc
pop
les
clc
jbe
test
add
sti
xor
or
jecxz
jmp
inc
add
xchg
clc
and
arpl
fcoms
pop
cmp
popa
add
adc
lcall
cs
mov
cmpsl
sti
js
jbe
cmp
sahf
cmp
jl
mov
test
cmp
adc
cld
outsl
fcomip
and
add
call
xor
lods
call
add
add
mov
push
push
outsb
loop
jg
or
cmpsb
jae
xor
sbbb
outsl
pop
or
pop
or
sub
call
push
fstpt
mov
negl
cmc
add
sbb
ja
stos
inc
out
leave
test
jae
or
fildl
iret
or
fbld
ret
adc
mov
cmp
mov
and
jg
add
jne
or
pop
cli
subl
xchg
adc
dec
mov
sbbl
push
cwtl
scas
mov
roll
aam
push
test
or
sbb
xchg
out
inc
call
xor
outsl
fadds
pop
and
add
xorb
push
mov
pop
push
je
mov
sbb
sub
push
mov
xorl
dec
cmc
mov
sbbb
into
mov
or
je
cmp
je
adc
or
outsl
add
pcmpeqb
jb
maskmovq
notl
lock
sbb
nop
ret
rolb
add
sub
nop
je
ret
movsb
push
cmp
movsl
je
ret
cmpsb
adc
ret
xchg
mov
ret
stos
adc
ret
stos
je
ret
lods
inc
lods
je
ret
scas
outsb
jbe
adc
ret
mov
adc
insl
je
ret
outsb
or
outsl
inc
add
hlt
ret
movups
dec
jne
and
incb
add
cmp
jo
mov
mov
lret
and
mov
cs
lret
call
or
in
or
push
add
lret
push
ret
inc
test
push
pop
stos
jno
pop
les
inc
cli
xchg
mov
xchg
xor
scas
rolb
mov
or
les
mov
add
inc
mov
cli
cmp
hlt
or
rol
jle
aam
adc
mov
or
mov
daa
xchg
or
inc
ret
testb
shrb
call
push
call
bound
pusha
sti
jmp
adc
rclb
mov
or
loope
add
xchg
out
lock
outsl
fisttps
call
inc
push
jne
push
add
imul
add
outsl
pop
jo
test
cmp
lcall
pop
inc
rolb
rol
inc
shll
adc
cmpsb
add
push
test
and
cli
mov
and
cmp
clc
sbb
xor
xadd
in
pop
pop
jl
jbe
ljmp
mov
inc
cli
js
addl
je
mov
and
pusha
pop
pop
xor
cmp
sbb
ljmp
add
es
sbbb
fisttpl
loop
mov
inc
ljmp
addr16
inc
jg
inc
call
inc
mov
push
mov
xchg
or
add
test
add
xorb
or
mov
push
call
cli
mov
inc
pushl
pop
or
inc
loope
pop
cmp
inc
sbb
adcb
cmp
or
add
xor
bound
and
sub
lock
push
ret
test
ljmp
pop
xchg
or
fdivrl
jle
ret
adc
add
loop
mov
mov
pusha
dec
ret
sub
mov
sbb
loope
or
int3
idivl
decl
imul
popa
cmp
add
das
mov
pop
push
push
loope
adc
adc
inc
out
add
xor
push
sbb
lcall
jle
dec
pusha
idiv
push
std
punpcklbw
clc
jle
in
add
fs
imul
pop
popa
add
adc
pusha
pop
add
das
xor
mov
pop
add
push
mov
cs
pop
or
call
inc
push
mov
add
pusha
dec
add
arpl
add
and
adc
jle
add
arpl
jbe
jbe
insb
ret
pop
sbb
ja
and
repz
adc
push
xlat
pusha
add
shll
outsl
add
leave
out
inc
or
lret
jbe
push
inc
or
decl
or
enter
js
mov
jae
cs
inc
xor
loope
outsl
add
ficoml
inc
sahf
loope
adc
fwait
push
call
xchg
add
stos
lcall
imul
jbe
mov
nop
gs
add
xor
adc
jb
add
je
repz
out
add
in
inc
inc
sub
mov
add
add
mov
sbb
xchg
xor
mov
negl
sbb
fldln2
mov
mov
popa
adc
loopne
jg
and
popa
add
push
xchg
mov
dec
mov
or
jnp
xchg
popf
and
roll
mov
pop
xor
fs
xchg
into
test
bnd
cmc
cmc
arpl
add
lea
or
dec
iret
fcmovnu
jbe
push
mov
stos
xchg
lods
push
arpl
cmp
pop
add
repz
popa
add
lods
dec
mov
pushl
movsl
mov
out
push
sub
icebp
mov
cli
mov
lcall
or
cmp
repz
out
sarl
sub
call
in
and
stos
stc
lods
insb
mov
mov
add
stos
jmp
pop
iret
sbb
adc
cmp
dec
pop
shll
fwait
mov
ja
dec
mov
sbb
mov
stos
pop
xchg
pop
xchg
sbb
jo
mov
pop
lret
add
aaa
cs
pop
push
pop
and
out
shrl
out
lock
mov
cs
xor
dec
shll
dec
pop
imul
cs
icebp
add
mov
mov
and
scas
xchg
pop
sub
mov
jno
or
adc
push
add
add
mov
and
xor
cmp
dec
addr16
cmpsl
lahf
cmpsb
imul
jecxz
or
icebp
xor
sbb
cmp
jne
mov
ss
push
mov
shll
lock
xchg
addr16
sysret
jmp
pop
aad
xor
popa
imul
sahf
cmpsb
lahf
stos
mov
test
test
dec
xchg
and
xchg
cld
in
and
stos
lock
push
loop
sub
test
lods
es
mov
push
adc
pop
ljmp
divb
inc
adc
mov
testl
push
cli
popf
es
incb
push
imul
sub
or
les
or
jb
int3
and
add
xchg
je
push
roll
lods
inc
popl
dec
add
jb
gs
negb
cltd
add
cmpb
fwait
push
jb
nop
add
je
mov
mov
fs
mov
pop
push
or
les
jae
adc
dec
or
push
sahf
mov
insl
add
fadds
mov
arpl
inc
test
adc
mov
mov
fwait
pop
push
outsl
inc
outsl
mov
inc
popa
je
push
sbb
bound
add
jo
adcb
pop
add
ds
mov
gs
bound
xor
stos
xor
lcall
outsl
or
add
lcall
je
gs
or
gs
je
push
int
mov
shlb
jo
mov
add
adc
sub
lods
pop
fadds
mov
stos
std
sbb
test
je
fiadds
push
rcll
imul
hlt
inc
jae
add
add
jb
jb
inc
mov
lods
je
nop
xor
dec
sahf
outsb
fs
mov
inc
jo
mov
pushf
popa
mov
push
inc
cmp
loope
sbb
and
stos
notb
outsb
mov
scas
clc
inc
sbb
inc
dec
xor
push
add
in
or
push
mov
imul
ljmp
gs
mov
imul
roll
cmp
jbe
mov
pop
imul
in
mov
cmp
out
add
mov
add
add
lods
gs
inc
jbe
sub
lcall
sbb
or
sahf
or
adc
imul
push
cld
gs
dec
mov
jb
adc
add
jbe
sub
clc
or
mov
dec
ret
div
inc
or
add
push
jl
clc
add
pushf
xchg
jb
lea
pop
cmp
jne
xchg
testb
roll
cltd
gs
sub
adc
adc
cs
xchg
jae
ss
add
mov
js
and
shll
push
inc
nop
jne
inc
inc
cwtl
or
mov
sbb
mov
push
loop
mov
pop
or
in
add
jmp
pusha
add
dec
xchg
ss
roll
cmp
add
dec
jo
js
add
lock
mov
mov
sbb
mov
push
xchg
outsl
xor
jae
int
or
or
mov
je
add
sub
xor
lcall
loop
add
push
subb
loopne
outsl
orb
adcl
push
fldcw
dec
xorb
or
lea
xor
and
nop
or
add
adcb
jle
inc
add
mov
ret
insl
outsb
add
push
and
mov
call
or
jae
lds
pop
adc
mov
arpl
jg
sbb
int3
js
sbbb
outsl
insl
adcb
mov
outsb
rolb
sbb
xchg
push
rorl
andl
xchg
fwait
push
fcos
push
imul
cmp
cs
outsb
mov
jo
add
insl
aaa
mov
and
mov
insb
stos
mov
push
ljmp
inc
jne
xchg
xchg
fmulp
jb
pushf
insl
pop
mov
cmp
lret
ret
sbb
inc
js
sbb
sbb
mov
adc
jns
sbb
pusha
mov
mov
and
icebp
lds
xchg
or
push
xchg
add
adc
add
and
mov
gs
adc
lds
dec
sub
loope
cmp
mov
lds
push
dec
pop
and
sub
jbe
push
xchg
movsb
dec
and
jb
aaa
dec
add
outsb
hlt
hlt
push
fwait
inc
test
push
jns
fisubl
les
rorb
ficoml
inc
mov
sbb
les
and
push
jmp
rcrb
sahf
mov
imul
cmp
imul
lea
std
mov
shrb
adc
call
add
sub
cmpsb
pop
rorb
sbb
ljmp
mov
rol
add
mov
data16
add
clc
dec
adc
jb
adcb
enter
cmp
inc
in
push
rorl
mulb
clc
bound
ss
add
test
loop
sahf
fwait
negb
lods
shrb
outsb
into
out
imul
push
outsl
mov
sarb
pop
lds
sbb
and
fs
add
add
jns
subb
dec
add
add
dec
push
imul
scas
mov
xchg
lcall
ljmp
or
xor
aaa
lods
jge
loopne
fwait
inc
bound
jg
loope
insb
add
add
sbb
loope
push
in
mov
add
xchg
jne
aaa
add
insb
mov
sub
jne
stos
gs
mov
popa
and
jb
sahf
loopne
sbb
dec
mov
dec
jno
cmp
fwait
loope
in
popa
add
cmpsl
loope
mov
outsb
jb
jb
outsl
fwait
adc
imul
jne
mov
loopne
jmp
sbb
mov
lcall
adc
ret
arpl
loope
out
push
out
addb
jg
pusha
push
jne
mov
xor
inc
cli
push
add
jb
aam
add
dec
dec
insl
sub
xorb
testb
pop
sbb
inc
push
scas
mov
loope
mov
rclb
fs
js
or
dec
mov
imul
push
push
mov
or
int3
add
pushf
loopne
mov
hlt
call
loop
mov
pop
xchg
or
je
inc
sbb
and
cmp
arpl
outsb
scas
repnz
push
mov
cmp
or
loopne
ret
int3
loopne
add
insb
or
pusha
lods
bound
insb
mov
loope
sub
fldt
push
popa
push
push
jae
adc
sahf
mov
sbb
xchg
cmpsb
cwtl
loopne
add
sahf
insl
loope
jecxz
pop
xchg
sbb
cld
inc
loopne
mov
sbb
ds
fs
push
outsb
sahf
and
jb
rorl
sub
fidivs
pusha
ds
popa
bound
cwtl
cmp
arpl
outsl
xchg
loop
add
out
dec
gs
mov
dec
pop
mov
sub
je
cld
adc
scas
outsl
pop
mov
loopne
sahf
lock
loop
jb
shrl
adc
roll
icebp
push
add
stos
lcall
or
loopne
sub
dec
jae
lods
loopne
mov
or
movsb
popa
adc
xchg
adcb
push
dec
andl
mov
mov
js
add
bound
inc
js
inc
movl
fimull
add
inc
rorl
jae
inc
xor
stos
gs
dec
jg
add
mov
push
loopne
outsl
ja
aaa
xlat
sub
jnp
je
in
and
mov
in
add
les
jp
pusha
or
add
mov
gs
jmp
mov
inc
subb
je
add
bound
add
sub
in
test
mov
adc
add
jae
mov
test
cmp
lock
and
je
mov
pop
mov
mov
mov
push
mov
ja
pusha
loop
push
mov
popa
xchg
imul
ja
insl
lret
repnz
insb
add
bound
fs
xchg
mov
mov
cmp
jb
push
add
add
frstor
sahf
outsb
jae
lock
ret
jl
dec
lcall
aam
push
mov
or
inc
xor
ficoml
lds
cli
jp
shll
push
or
cmp
jmp
pop
aaa
sbb
xor
add
icebp
push
or
test
cmp
jg
sub
xor
add
mov
push
jb
push
push
imul
cmp
jl
ss
xor
push
dec
je
jo
insb
pop
hlt
sub
cmp
insl
jno
or
push
xor
cmp
outsb
cmpsb
jg
add
cli
push
sahf
sub
jns
add
gs
loope
lcall
nop
ja
xor
or
inc
insb
sahf
mov
test
seta
cmovbe
andb
push
push
popa
cmc
add
jno
mov
or
cmp
inc
cld
outsb
mov
sbb
xor
xor
cmp
push
mov
push
mov
stos
add
dec
xchg
jne
aaa
ljmp
popa
mov
cltd
dec
inc
rorb
fwait
jno
loope
fcomip
xor
and
inc
insb
addr16
push
mov
add
clc
lods
push
outsb
push
jo
add
call
test
and
imul
mov
xchg
insb
xor
mov
fwait
jo
and
jg
sbb
add
jno
xor
in
icebp
enter
jg
mov
xchg
jo
adc
jae
scas
cs
sub
sbb
jae
dec
outsb
cltd
outsl
sub
mov
arpl
push
cmp
jo
jo
test
into
icebp
dec
stos
mov
dec
mov
xor
ja
loopne
sbb
mov
mov
dec
mov
adc
data16
xor
subb
fwait
dec
add
dec
xor
outsb
fildll
mov
lcall
push
inc
icebp
mov
adc
add
fwait
lcall
jl
lods
jns
dec
inc
call
xor
jge
mov
ss
pushf
jbe
mov
int
push
dec
cmp
add
push
pop
lock
sub
mov
ljmp
add
sahf
cli
push
jg
add
imul
jo
mov
xor
or
pushf
mov
and
cs
shrb
shl
rdpmc
or
mov
cwtl
inc
add
pusha
jb
xchg
jo
xor
negb
out
ret
notb
cli
add
or
sahf
ret
jno
cld
mov
add
ja
mov
push
hlt
mov
push
jg
lock
mov
imul
jo
cli
adc
ss
les
or
add
dec
in
add
add
mov
es
mov
jp
jb
push
xchg
loopne
pusha
jae
cwtl
cmp
int3
cmp
or
shl
sbb
lret
lcall
dec
lcall
sbb
jns
lea
add
xor
xor
or
outsl
mov
pop
add
in
pushl
icebp
or
imul
outsb
xor
mov
ljmp
xchg
or
gs
jbe
inc
jns
push
arpl
stos
fisubs
jo
mov
push
js
lock
xchg
push
pushf
jb
jbe
jb
sahf
arpl
dec
outsl
push
mov
add
jne
jns
repz
das
rcrb
scas
jbe
mov
arpl
stos
jns
scas
push
cld
es
arpl
jo
loopne
add
adc
lcall
push
inc
jg
mov
mov
cmp
mov
insb
ljmp
push
jo
mov
lock
sbb
xchg
fimull
add
xchg
gs
gs
jmp
jo
or
xor
dec
mov
push
push
jle
xor
test
mov
adc
call
je
leave
int3
dec
lods
cwtl
loop
cmp
push
xchg
mov
jg
inc
cmpl
push
mov
pop
add
jb
adc
imul
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
clc
imul
popa
xor
cmp
in
cs
aad
or
lock
xor
clc
rorl
test
mov
incl
mov
or
sub
and
sbb
push
orb
out
nop
movsb
mov
and
and
fcomip
or
xor
mov
add
imul
das
call
jne
inc
mov
dec
outsl
xor
or
mov
loop
outsb
ds
jb
add
pop
xlat
and
ss
fisubl
mov
push
push
sbb
add
inc
jae
shlb
dec
iret
inc
xchg
cmp
lea
xor
jbe
addr16
add
fwait
push
fcompl
adc
mov
mov
sub
inc
inc
dec
push
outsl
lods
test
and
and
movsb
lret
jne
adc
mov
popa
arpl
dec
push
dec
inc
gs
cmp
shr
arpl
add
mov
outsb
jb
pop
sub
sbb
lret
mov
xchg
outsl
adc
cs
scas
adc
mov
jo
lcall
push
inc
insl
jo
test
add
or
movsb
fimuls
out
fdivrs
add
imul
and
add
mov
push
sbb
popa
sub
mov
jnp
sub
xchg
and
add
sbb
fiadds
ja
jbe
jmp
jb
data16
add
jb
sbb
movl
fisubrs
mov
adc
jp
or
mov
das
shrb
adc
xchg
subb
orb
fs
add
xchg
jae
sbb
mov
test
inc
dec
lcall
adcb
mov
inc
mov
arpl
movsb
and
xchg
mov
add
dec
sbbb
das
adc
dec
xor
test
mov
xorb
insb
xchg
add
add
add
fwait
inc
jl
sahf
jo
clts
in
outsb
push
sub
add
push
push
mov
jb
addr16
daa
rclb
insb
inc
inc
xchg
jne
shlb
inc
dec
mov
bound
and
push
push
loop
gs
add
int
sbb
pushf
dec
push
dec
mov
loop
add
jo
dec
addr16
shrl
push
sar
sub
int
rcrb
sbb
shll
add
dec
or
cli
insb
rolb
or
add
xchg
and
in
pop
ret
mov
movb
scas
add
movsl
sarb
mov
mov
mov
movsl
fwait
sbb
add
mov
mov
push
clc
add
pushf
ret
xchg
lds
xchg
add
mov
xor
cmpsb
js
lcall
adc
mov
cmpsb
adc
les
add
or
pop
dec
adc
and
es
jne
mov
dec
or
cwtl
lods
rorl
call
adc
nop
jb
sub
addr16
movsb
inc
std
shrl
into
adc
add
dec
xchg
xchg
mov
and
jne
jg
ret
inc
inc
xchg
movsb
lret
mov
popa
add
adc
ss
add
or
into
xchg
inc
insb
rcl
icebp
fwait
or
inc
mov
cmp
popa
mov
mov
call
mov
fs
add
push
inc
mov
lock
sbb
push
mov
and
cwtl
cmp
aaa
movsl
jle
inc
jbe
inc
mov
shr
pusha
arpl
lods
daa
popa
cmp
xchg
jne
dec
lcall
xchg
imul
adc
loope
dec
mov
cmpsb
sbb
adc
push
insb
inc
push
or
sahf
mov
push
int
fldl
inc
xchg
inc
mov
and
xorb
loopne
arpl
dec
roll
cmpsb
jl
pop
call
jns
mov
popa
xor
dec
in
add
add
adc
data16
inc
pop
add
cmc
lcall
pop
idiv
call
loop
inc
mov
insl
call
loop
les
and
insb
loop
loope
add
xchg
pop
adc
xor
inc
ljmp
jmp
cmpsl
repnz
ss
lcall
mov
and
jo
xchg
jo
mov
mov
movsb
incl
mov
cmpsb
push
push
in
add
push
test
jo
mov
jne
shll
aam
je
loopne
cmpsb
dec
aad
sbb
push
dec
push
lret
pop
out
add
sbb
jb
lcall
add
mov
or
mov
push
popa
outsl
push
sbb
test
mov
xchg
add
bound
pop
push
or
mov
sbb
inc
popa
movsb
inc
add
pusha
push
dec
dec
mov
test
adc
bound
xchg
fs
loop
ja
mov
mov
insb
mov
mov
mov
das
movsb
dec
notl
jge
sbb
jle
imul
pop
lock
lods
bound
lcall
mov
adc
rcr
jb
pusha
sbb
and
add
adc
and
jg
lcall
psrad
cld
sub
and
outsb
cld
adc
adc
sub
adc
in
loopne
push
and
clc
in
jmp
add
xor
outsl
outsl
xchg
imul
loop
mov
inc
outsl
jbe
adcb
dec
dec
inc
stos
loop
dec
dec
mov
xchg
mov
xor
pop
ds
fsubl
mov
push
mov
mov
sti
pop
sub
std
popa
add
popa
push
inc
push
or
dec
rclb
add
xchg
pusha
ja
add
xchg
arpl
or
mov
test
jae
pop
aaa
arpl
add
outsb
jg
nop
popa
cld
inc
pop
jo
lcall
sbb
insl
outsl
mov
add
sub
arpl
ja
outsl
or
stos
sub
mov
sahf
pop
ja
xchg
jae
arpl
or
jbe
dec
jne
jne
pusha
jl
sub
pushl
jecxz
lock
xchg
ja
add
add
outsb
mov
je
add
cmp
fsubs
test
rcrb
dec
jo
sub
pop
test
movsl
add
or
xor
mov
les
daa
call
pop
lods
test
gs
jo
add
add
and
aas
add
and
aas
insl
mov
add
inc
inc
mov
sub
lock
add
lcall
lret
mov
aaa
sbb
inc
xor
add
push
push
add
pusha
push
loopne
jmp
mov
inc
mov
enter
movsl
mov
pushf
and
scas
ret
lock
fwait
jp
hlt
inc
adc
or
or
sbb
pop
mov
xor
add
add
lock
cmp
sub
jmp
popf
imul
add
jmp
inc
mov
sarb
xor
mov
adc
or
cmpsb
xor
dec
pop
xchg
shll
adc
loopne
push
or
xchg
test
inc
test
add
lcall
loopne
inc
cwtl
fisttpll
jmp
subl
mov
movsb
repnz
jnp
es
scas
pop
stos
pop
scas
adc
cmp
cli
incb
cld
incl
aam
add
jmp
dec
test
xchg
icebp
cmpsb
scas
mov
or
mov
enter
mov
mov
loope
dec
dec
loopne
in
insb
cmp
inc
mov
push
push
mov
or
lds
sub
bound
lock
and
push
add
aaa
popa
cs
mov
loope
jg
fsubs
add
clc
repz
fldl
xchg
dec
cli
or
push
lahf
les
int3
int
jmp
dec
test
cld
sti
aas
mov
or
jg
mov
fs
mov
xchg
outsb
in
add
sub
out
loop
pop
dec
shl
aas
or
add
and
and
aas
mov
ljmp
enter
int3
scas
mov
xchg
xor
out
cmp
dec
sahf
add
aas
rolb
dec
pop
loope
les
aas
insl
les
jg
cmp
lcall
xchg
movb
dec
add
xchg
aas
das
clc
loop
add
jp
jl
pop
roll
pop
aas
sub
cmp
out
das
stc
add
inc
dec
shlb
ljmp
sub
subb
das
fstl
pushf
add
int3
fcoml
scas
mov
add
cmp
test
arpl
cmp
add
sarl
jge
xchg
mov
and
call
add
inc
inc
clc
mov
jne
push
outsl
push
fldt
cmp
jno
rcr
adc
out
mov
pop
cmp
xchg
subb
xor
add
and
dec
decl
sub
push
add
imul
faddp
jge
call
hlt
push
mov
mov
xchg
cmp
push
and
mov
icebp
mov
stos
gs
stc
xchg
jge
add
enter
adc
fmuls
imulb
jns
outsb
andb
rcrb
jp
ljmp
test
inc
jl
add
push
push
adc
data16
jge
add
test
dec
mov
xchg
daa
sti
or
push
add
sub
outsl
in
mov
lret
popa
movsl
adc
std
fwait
sti
add
or
jno
lods
std
push
sub
pushf
sti
add
or
in
imul
sahf
les
scas
mov
mov
add
sub
dec
mov
fwait
lods
push
dec
scas
cmp
xor
add
aaa
sub
icebp
add
mov
or
scas
cmp
or
pop
or
xor
lds
out
push
decb
jle
pop
inc
or
jbe
mov
mov
pop
daa
jle
or
mov
ret
movl
cmpsl
fisubrs
sbb
aas
or
subl
fildl
push
push
mov
iret
add
push
push
filds
fidivl
dec
out
sti
inc
push
pop
push
lods
jns
adc
pop
and
dec
aaa
inc
aad
fwait
cmpsb
imul
and
orl
int
add
jae
ja
imul
mov
aas
test
cmpsb
xchg
test
rolb
aaa
add
aaa
jmp
sbb
dec
sub
lret
cmp
mov
adc
cmp
insb
cmp
mov
imul
or
cld
int
pop
lods
cmp
mov
jae
call
mov
sbb
fstpt
add
ret
ds
ds
push
mov
jl
adc
cld
in
push
loopne
test
jae
xchg
arpl
movsb
ds
mov
inc
ds
int
xor
and
in
adc
add
add
xrelease
outsl
jg
aas
jecxz
and
rcll
xor
ret
aas
fidivl
aas
and
push
fs
xchg
jle
arpl
jae
pop
arpl
fcoml
mov
adc
cld
aas
inc
aas
les
xor
enter
fwait
adc
or
aas
add
and
cmp
sbb
add
or
add
inc
je
xor
xor
lret
jg
cs
mov
pop
xor
subl
imul
and
xor
mov
data16
rcr
xor
xor
inc
mov
or
sti
xor
cld
in
mov
mov
sbb
sub
lret
xor
mov
pop
xor
xor
jl
jnp
mov
pushf
xor
aad
sub
xor
int3
fdivl
sbb
in
xor
cld
xor
xor
stc
pop
xchg
orb
lret
xor
mov
fwait
mov
fwait
xor
jl
jnp
mov
pushf
xor
mov
dec
xor
xor
xor
xor
xor
xor
xor
xor
aaa
jg
jbe
adc
xor
mov
pop
xor
mov
outsl
sub
loop
adc
mov
cmpb
adc
xor
xor
xor
or
cld
xor
adc
popa
inc
pusha
xor
insl
adc
les
outsl
add
fwait
xor
adc
mov
mov
adc
pushf
xor
xor
dec
xor
popa
or
xor
adc
les
repz
mov
sub
lret
xor
dec
stos
xor
insb
mov
xor
push
push
inc
or
jnp
adc
fdivl
xor
ss
mov
sbb
sub
inc
pop
inc
adc
add
jno
cmp
pop
ds
dec
adc
cmp
loopne
mov
add
loopne
incb
pusha
add
icebp
pop
je
test
dec
das
pop
push
cmp
lea
insb
cmp
push
les
mov
push
xchg
add
and
cmp
or
ds
adc
std
lahf
and
ds
ss
aas
adc
xchg
mov
push
push
xchg
popa
inc
adc
mov
jp
and
push
jge
inc
lahf
or
lds
xchg
inc
mov
mov
add
jae
xchg
incl
xor
xor
add
sub
xor
inc
xor
xor
lret
andb
and
and
int3
xchg
xor
pop
add
es
xor
leave
and
xor
icebp
mov
dec
cltd
add
adc
divb
ss
shlb
sub
fidivl
and
in
push
ss
or
fdivs
cmpsb
aaa
push
add
add
cmp
insb
out
cmp
add
cmp
mov
bound
xchg
cmp
sub
or
mov
cmp
cmp
adc
cmp
cmp
cmp
cmp
mov
lahf
cmp
cmp
add
mov
cmp
push
sarb
pop
cmp
or
sti
cmp
pop
push
mov
rcll
icebp
jns
pusha
ja
es
incl
dec
jp
push
add
xor
mov
xor
xor
add
and
dec
xor
shll
ss
sbb
ret
cmp
or
ss
cmp
add
inc
pop
movl
icebp
pop
cld
cmp
out
bnd
cmp
inc
adc
or
cmp
cmp
jbe
sub
loop
iret
add
sbb
idivl
cwtl
ds
push
jg
ds
xor
xchg
inc
loopne
xor
aad
adc
mov
adc
aad
ret
mov
adc
xor
mov
add
lods
xor
std
fcmovnu
or
xchg
xor
xor
adc
fnsave
fdivs
dec
xor
sub
fstpl
aaa
mov
add
cmp
adc
sub
out
fsubrs
cmp
cmp
cmp
pop
cmp
lret
inc
insl
and
lret
mov
lods
xor
add
or
dec
xor
mov
repz
xor
push
aaa
test
lock
testb
cmp
cmp
cmp
mov
jl
cmp
cmp
sub
aas
std
aaa
inc
rcr
aas
xor
je
mov
pop
aas
pushf
and
mov
mov
loopne
movsl
hlt
pop
xor
clc
sub
or
lea
dec
push
fidivl
rdtsc
cli
dec
das
cli
jg
add
xor
jecxz
adc
shlb
ds
xor
inc
pushl
or
xor
xor
cmp
dec
aaa
sub
and
cmp
or
das
sbbb
cmp
lret
pusha
dec
or
fsubs
cmp
pop
cmp
or
outsl
decl
sub
fdivrl
mov
je
nop
cmp
cmp
cmp
ds
jg
or
mov
pop
mov
push
outsb
jo
sbb
out
mov
shll
je
cltd
add
dec
rclb
xor
xor
rcrb
popf
xor
xor
xor
icebp
ret
xor
xor
xor
adc
aam
mov
ss
mov
insl
ss
mov
divl
push
aaa
jmp
aaa
cs
aaa
inc
scas
aaa
pop
aaa
xchg
aaa
lcall
aaa
pop
aaa
test
mov
inc
nop
add
cmp
aaa
jg
cmp
or
cmp
cmp
cmp
cmp
cmp
adc
pop
fs
jbe
jae
lret
cmp
scas
cmc
cmp
loop,pt
test
and
and
adc
jg
push
jle
mov
insb
xor
push
inc
nop
push
cwtl
xor
jl
push
jg
pop
and
cmp
xor
ret
xor
sti
push
xor
push
push
cmp
cmpsl
adcl
mov
inc
orb
dec
mov
testl
sub
adcl
pushl
cli
adc
cmp
rclb
cmp
les
fstpt
inc
cmp
pop
adc
sar
pop
and
adc
pop
cmp
cmp
ljmp
call
call
aas
dec
aas
jb
sbb
es
inc
xor
xchg
push
cld
sub
xor
nop
sbb
xor
adc
xor
sbb
pushf
mov
jb
jg
and
jo
cmp
cmp
mov
mov
xchg
cmp
push
aas
and
inc
add
subb
lock
xor
cld
les
cmp
cmp
outsl
nop
pop
xor
xor
adc
xorl
jo
ljmp
shlb
add
sub
cmp
sarl
imul
cwtl
loope
pop
jg
cmp
cmp
cmp
daa
mov
mov
sbb
std
aad
outsb
shl
jo
add
push
mov
ljmp
or
xchg
lock
mov
xor
xor
nop
pop
xchg
xor
pusha
mov
cmpsl
xor
popa
mov
inc
xor
xor
xlat
xor
pushl
out
dec
out
adc
dec
mov
ss
ss
rcrl
pushl
or
ss
rorb
fsubrl
daa
ss
das
ss
push
mov
sti
add
ss
ss
dec
lods
ss
movsb
ss
inc
repz
ss
adc
mov
ja
adc
sbb
ss
cld
aaa
pop
aaa
hlt
aaa
getsec
add
in
inc
mov
adc
aaa
daa
aaa
aam
das
int3
aaa
add
jg
aaa
aas
aaa
add
aaa
lods
aaa
or
movsb
push
sbb
aaa
outsl
aaa
mov
loope
fcomip
ja
sbb
sarb
je
aaa
insb
aaa
xchg
aaa
fs
fstpt
aaa
cmpsl
mov
scas
dec
dec
aaa
insl
cmp
or
sbb
testb
clc
xchg
or
jo
sti
xor
ljmp
adc
xor
push
nop
push
push
inc
stc
xor
xor
cmpsl
xor
scas
xor
xor
xor
add
lods
push
ss
or
xor
xor
push
sbb
and
dec
mov
add
xor
mov
pop
nop
or
imul
xchg
pusha
xchg
es
cmp
in
aaa
leave
clc
xor
cmp
fidivrl
jne
lods
cmp
std
cld
call
cmp
cmp
cmp
push
mov
cmp
mov
sub
aas
decl
js
mov
cmp
rclb
ljmp
xchg
jl
inc
shll
adc
nop
and
divb
pop
add
add
xor
xor
adc
xor
xor
mov
xor
rorb
inc
jo
sbb
jle
or
fwait
loop
jns
xchg
xor
jo
enter
and
ss
out
cli
pop
std
adc
aaa
mov
aaa
orb
loop
cmp
mov
cmp
xchg
adc
cmp
jnp
lods
loopne
scas
cmp
xor
adc
cmp
cmp
or
incl
cmc
cmp
cmp
push
cmp
cmp
imul
insb
add
mov
daa
incl
clc
cmp
cmp
cmp
add
pop
adc
or
mov
adc
add
ljmp
clc
xchg
aas
bound
fadd
xor
jae
std
xor
xor
jp
xor
jp
pushl
xor
mov
push
inc
xor
mov
dec
add
and
adc
pop
mov
dec
jg
sarb
xor
call
xor
xor
adc
pop
rclb
xor
xchg
jo
loope
jle
test
xchg
cmp
or
das
cmpsb
scas
mov
cmp
jp
push
cmp
cmp
cmp
and
cmp
cmp
cmp
into
ret
mov
aad
add
xor
cmp
cmp
and
cmp
cmp
cmp
inc
cmp
push
sti
ja
inc
cmp
cmp
dec
cmp
add
mov
stos
xchg
aas
inc
aas
loop
mov
jo
jg
movsb
xor
jbe
xor
inc
add
mov
test
or
and
inc
cmp
jecxz
push
xor
xor
xor
stos
pop
jecxz
and
jle
adc
cli
jge
outsl
xor
xor
pop
lods
mov
push
xor
xor
cmp
and
xor
xor
xor
imul
arpl
xor
lock
xchg
xor
hlt
aaa
std
xchg
adc
into
adc
aaa
or
in
cmp
dec
cmp
cmp
ret
sbb
dec
stc
cmp
cmp
and
loope
and
add
fs
xor
shll
sbb
sbb
call
mov
push
adc
sub
lock
jo
pusha
test
cmp
ljmp
pop
in
mov
push
cmp
sti
cmp
call
mov
jp
xor
cmpsl
nop
cwtl
or
dec
mov
test
cmp
jmp
inc
ds
outsb
aas
and
lock
mov
mov
xor
mov
mov
xor
dec
ljmp
sbb
cld
dec
mov
test
xor
inc
out
clc
in
fisubl
cmp
mov
mov
cs
cmp
cmp
cmp
insl
cmp
cmp
push
adc
jecxz
scas
cli
fcomip
xor
lret
adc
or
pop
xchg
clc
xor
fidivs
sbb
push
ret
jg
pop
fisubrl
xor
icebp
mov
sarb
xchg
xor
fnsave
movsl
xchg
divb
test
cmp
sbb
fnstcw
cmp
addl
cmp
mov
cmp
or
cmp
cmp
test
pop
in
jne
call
add
cmp
cmp
jo
mov
inc
cmp
inc
aam
mov
loope
cmp
mov
or
nop
xchg
jno
cwtl
and
cmp
xlat
adc
ds
jmp
cwtl
ja,pt
jbe
mov
xor
add
jo
xlat
push
fidivrl
test
aas
aad
nop
add
push
pop
and
leave
xor
call
xor
scas
xor
xchg
xor
xor
and
out
mov
jb
and
mov
lds
in
mov
ror
and
xorb
shll
enter
mov
popf
xor
cs
xor
xor
dec
ss
xchg
icebp
mov
cld
mov
add
insb
test
jle
aaa
shlb
orl
sbb
cmp
in
loope
clc
pop
cli
adc
cmp
cmp
cmp
cmp
cmp
jnp
sub
sarb
xor
cmp
adc
cmp
cmpsb
cmp
cmp
sbb
jl
adc
sbb
mov
lods
dec
test
cmp
cmp
fnstsw
lret
pop
xor
jle
mov
cmp
cmp
fwait
clc
cmp
xchg
cmp
mov
mov
movsb
incl
adc
ds
loop
js
repnz
pop
movsb
outsl
push
aas
mov
lret
js
add
sbb
or
dec
loopne
inc
push
std
push
and
xor
or
push
divb
adc
xor
into
sbb
out
fidivl
pop
adc
xor
jl
adc
xor
mov
xor
xor
sbb
nop
and
xlat
insl
push
xor
xor
xchg
adc
xor
push
xor
jl
or
inc
lods
loope
sbb
repnz
std
mov
xor
adc
mov
xor
xor
imul
add
fdivs
adc
shrb
push
dec
push
adc
xor
inc
add
xor
mov
add
sbb
and
sti
out
pushf
or
mov
orb
push
inc
add
add
divb
adc
fildll
or
jbe,pt
pop
nop
imul
fcoms
lcall
shll
bound
push
jge
mov
imul
aaa
sub
jp
mov
rcrb
jb
sbb
cmp
cmp
test
repz
cmp
repz
cmp
lea
loop
out
cmp
lret
cmp
popf
cmp
cmp
cmp
push
mov
pop
cmp
cmp
jo
adc
stos
cmp
pop
xchg
mov
xchg
ds
and
mov
sbb
cmc
aas
and
and
das
andb
mov
add
popf
ret
jg
pop
jb
fidivl
pop
orb
dec
xor
jg
xor
adc
xor
xor
xor
jbe
cltd
mov
xor
movsl
xor
mov
xor
jmp
add
data16
outsb
inc
push
dec
xor
adc
inc
mov
xor
push
or
testb
xor
add
pop
cmp
movl
cmp
dec
insb
ds
adcb
pop
lcall
cmpsl
shlb
inc
test
pusha
mov
xor
shll
mov
in
sbb
xor
inc
jp
mov
xor
ret
xor
or
repnz
lahf
xor
pop
push
cmp
cmp
mov
xchg
cmp
dec
mov
cmp
fstpt
gs
ret
xchg
ljmp
mov
xor
inc
xor
hlt
ret
xor
xor
push
xor
mov
xor
inc
mov
xor
push
sbb
xor
or
xor
or
add
sarb
sbb
loop
fildl
in
and
rclb
xor
lret
ss
fwait
mov
dec
ss
ss
ss
mov
and
ss
mov
jns
xorb
adc
cld
fistl
jb
xchg
adc
bound
mov
push
ss
jge
inc
repz
mov
dec
cmp
cmp
or
mov
test
add
xchg
push
std
in
push
cmp
cmp
adc
cmp
cmp
imul
int3
cmp
cmp
mov
mov
cmp
adc
nop
cmp
lods
add
pop
ret
lods
cmp
mov
pop
and
sub
push
repz
cmp
sbb
cmp
bound
mov
ds
pop
lods
sahf
pop
ds
pushl
fwait
test
aas
xchg
aas
leave
test
cmp
xor
outsb
jo
loop
xor
pop
loopne
push
or
stos
adc
cmc
xor
xor
pusha
divb
mov
arpl
xor
push
shlb
xor
pop
loopne
push
fmull
ret
sub
cld
cmp
cmp
cmp
lcall
cmc
and
fstl
test
xchg
es
cmp
cmp
cmp
mov
jg
or
or
es
fdivrs
mov
adc
bound
mov
loope
cmp
cld
cmp
call
inc
mov
fbstp
cmp
jo
or
cmp
sbb
xchg
fcmovu
cmpb
int
outsl
or
aas
fnstcw
jne
outsb
aas
hlt
lock
cli
aas
xchg
mov
popa
xor
pop
cmp
xor
dec
mov
xor
xor
pop
aam
inc
ljmp
or
pop
ss
cmp
xchg
loopne
ss
jo
ss
call
subl
cmp
add
loope
sub
xchg
loopne
mov
cmp
in
push
dec
cmovb
mov
cmpb
mov
arpl
mov
push
fmuls
push
jecxz
xchg
add
mov
mov
push
xchg
xor
hlt
jmp
xor
adc
xor
mov
add
xor
adc
into
xor
decl
adc
fildl
mov
lret
aaa
xchg
decl
std
aaa
pusha
aaa
mov
stos
cmp
mov
cmp
cmp
cmp
cmp
clc
cmp
add
in
cmp
cmp
push
pusha
inc
adc
or
push
int
ret
movsb
xchg
and
hlt
cmp
cmp
adc
cmp
mov
adc
inc
test
inc
cmp
cmp
cmp
and
push
add
cmp
pusha
fwait
cmp
mov
fdivrl
push
inc
push
mov
sbb
sarb
ds
adc
xchg
outsl
mov
call
faddl
add
sub
xor
andl
lods
icebp
fnstsw
xor
xor
xor
inc
inc
jp
xchg
loopne
mov
aad
cwtl
xor
push
mov
cmc
outsl
push
lea
pusha
mov
movsb
adc
add
out
pusha
iret
inc
mov
cwtl
gs
aaa
jg
cmp
cmp
cmp
push
cmpl
fsubp
add
cld
jg
ds
aas
cmpsl
aas
test
aas
pop
loope
and
dec
inc
hlt
xor
xor
xor
rclb
adc
aam
test
and
stos
in
jg
mov
inc
xor
pop
xor
loopne
cmpb
outsb
pusha
adc
in
cld
or
xor
mov
shlb
add
frstor
and
cmpsb
ss
les
xor
mov
add
aaa
out
sub
test
and
jecxz
cld
cmp
stos
aad
in
pop
cmp
cmp
inc
and
push
loopne
mov
push
inc
and
mov
xchg
or
pop
cld
xor
xor
xor
xchg
xor
test
lret
bound
ja
cmpsb
jno
dec
xor
cmp
xor
adcb
pushf
pop
or
pushl
jge
test
les
sbb
jmp
cmp
ljmp
lock
and
dec
scas
jg
aas
cmp
loop
or
inc
loopne
pusha
fwait
aad
xor
aas
xor
pop
lods
mov
push
push
pop
loopne
pop
mov
les
xor
jnp
test
aaa
mov
lock
mov
ficompl
dec
xor
cmp
push
inc
push
loopne
inc
and
sbb
push
adc
repz
out
add
ja
std
xor
xor
xor
xor
and
decl
das
xor
xor
xor
mov
xor
push
cld
mov
xor
cltd
xor
xor
jg
jnp
mov
mov
pop
addr16
xor
cmpsl
xor
or
mov
push
mov
sub
in
push
xor
xor
xor
xor
xor
adc
sub
or
xor
jo
fcomip
jnp
xor
xor
test
lahf
xor
jl
jo
in
outsl
in
jnp
jbe
mov
imul
xor
adc
fistpll
sbb
inc
xor
xor
xor
adc
aaa
jg
xor
shll
xor
xor
adc
fwait
pop
orb
cmpsb
outsb
xchg
insl
xchg
cmpsb
aaa
add
add
cmp
movb
adc
cmp
loop
fsts
mov
add
cmp
cmp
cmp
push
dec
cmp
add
adc
inc
shl
push
stos
lock
add
dec
xor
or
mov
push
jno
add
cli
cmp
push
nop
xor
inc
xor
xor
pusha
cwtl
aaa
sub
leave
std
out
pop
cmc
aaa
pop
cmp
shll
add
jo
push
cmp
dec
xchg
ret
add
into
lock
mov
pop
add
add
fdivs
dec
xchg
daa
movsl
das
adc
inc
xor
lock
jg
xor
xor
xor
add
xchg
xor
add
int
inc
out
pop
mov
push
aaa
lds
dec
sbb
jmp
nop
lcall
cmp
test
add
cmp
cmp
jl
pop
sarl
lret
fdivs
cmp
or
adc
add
int
xor
xor
popa
nop
push
xor
xor
xor
loop
xor
jl
addl
aaa
icebp
sbb
in
aas
add
shrb
xchg
cmp
sti
cmp
mov
aam
call
cwtl
imul
adc
pop
jp
aaa
fs
mov
inc
aaa
sbb
mov
nop
adc
mov
or
cmp
pop
cmp
fidivrs
sub
pop
push
cmp
fwait
jbe
loop
dec
mov
cmp
add
in
pop
cmp
stos
shrb
cmp
cmp
cmp
cld
push
push
mov
push
dec
das
out
cmp
cmp
cmp
add
push
nop
sbb
cwtl
out
adc
push
pop
outsl
cmp
das
xchg
push
ds
ds
faddl
aas
icebp
aas
cmp
js
aas
loopne
pop
or
or
mov
loop
xor
nop
addl
mov
sub
xor
xor
or
xor
cmpb
add
clc
xor
jo
stos
test
lock
popf
idiv
mov
lock
xor
lock
in
adc
mov
push
xor
aas
out
aas
pop
lock
mov
decb
scas
aas
pop
aas
sahf
adc
mov
jnp
jle
imul
popf
shr
aas
push
adc
and
cmp
scas
lock
cmp
push
shrb
xor
mov
sbb
and
addr16
xor
scas
xor
insb
es
xor
imul
pushf
xor
dec
adc
and
xor
lock
pusha
xor
and
ds
push
xchg
adc
or
xorb
aaa
add
jo
cmpb
aam
hlt
lock
adcb
int
sahf
add
sbbb
ret
push
xchg
dec
mov
xor
sbb
pop
adc
adc
or
xor
push
adc
fidivrl
pop
xor
mov
xor
or
addr16
stos
push
in
inc
loopne
clc
add
ss
mov
ljmp
pop
in
lcall
mov
aaa
push
test
outsl
divb
adc
out
sbb
fbstp
and
xlat
sub
iret
aaa
xor
cmc
decl
or
mov
pop
aaa
add
mov
add
mov
xorl
xorb
pusha
out
sub
jno
cli
jg
ud0
add
mov
adc
jg
incl
xor
xchg
cmp
xchg
adc
inc
ljmp
sbb
xor
sbb
imul
lock
mov
xorl
sub
popa
jg
pusha
fimull
and
repz
out
orl
mov
mov
xchg
data16
daa
daa
out
add
lds
mov
out
pop
sarl
sarb
cmpsb
orb
xor
cmp
adc
sbb
das
sub
and
and
xchg
inc
ficompl
mov
add
mov
push
ds
mov
dec
mov
cld
call
add
es
add
push
inc
add
jge
cmp
arpl
cli
push
cmc
cwtl
xchg
pop
add
scas
push
push
pop
sub
push
mov
push
pop
shlb
add
xchg
push
pop
icebp
ja
cmp
movsl
sub
inc
hlt
hlt
loop
hlt
incl
fcompl
shr
jp
cmp
push
push
mov
incl
mov
add
cmp
xorb
and
and
cmc
ljmp
shlb
dec
xchg
cmp
movsl
mov
add
mov
loope
push
jae
cs
clc
xor
dec
dec
xor
jg
sub
mov
leave
jno
xchg
sub
sub
imul
incl
xchg
mov
in
gs
bound
movsb
andl
add
pop
stos
and
rorl
inc
incb
rcr
ljmp
daa
inc
cmpsb
cmp
or
mov
sbb
mov
or
push
shr
mov
incl
cld
mov
and
sub
cmc
mov
xchg
leave
pop
rcrl
mov
add
xchg
out
pop
add
cmpb
fwait
jbe
mov
inc
dec
stos
sti
pop
cld
add
xchg
xor
mov
pushl
jg
dec
test
adc
mov
repnz
cmpsl
or
cmpsl
xor
negl
aam
daa
add
decl
push
test
sbb
add
jg
ds
jg
pop
add
icebp
or
ljmp
sub
fadds
sub
shr
push
rorb
filds
mov
sbb
and
sub
or
test
mov
stos
add
adc
add
jg
sub
xsave
mov
pop
std
push
std
or
lods
or
testl
inc
cld
pushf
add
pop
ret
jne
movsb
pop
sti
js
cmc
xchg
std
lcall
call
insl
push
aas
aad
rcll
dec
fdivs
loopne
and
movsl
push
inc
iret
inc
pop
cmp
push
lcall
mov
clc
stos
adc
adc
pop
inc
fisubrl
outsl
loope
popf
mov
insb
into
hlt
add
aas
in
popa
cmc
aad
arpl
xchg
loop
gs
aaa
fidivrl
jmp
or
cli
inc
push
cld
mov
loopne
dec
and
sahf
xchg
arpl
xor
ljmp
popa
fld
mov
lods
add
out
mov
iret
sti
adc
lods
and
fs
xor
es
clc
mov
lretw
mov
pop
call
jl
enter
std
cs
sub
sub
dec
adc
xchg
cli
outsl
jge
call
jp
jge
jbe
ja
nop
sub
jle
call
sbb
xchg
mov
sub
mov
jb
ljmp
lods
xor
jl
cmpsb
dec
iret
add
mov
pop
fs
popf
push
mov
sub
movsb
dec
cld
jecxz
xchg
mov
outsl
push
mov
add
sub
pop
inc
xor
lret
sub
ljmp
in
pop
pop
and
sbb
pusha
cmp
call
lahf
add
xor
mov
push
sbb
pop
fisttpl
cmp
push
ja
sbb
cmp
mov
fcomip
jmp
jle
dec
lahf
cmc
jg
pop
jecxz
pop
hlt
aad
loope
pop
cmc
cmpsb
sbb
cmp
lock
ss
sub
fnstenv
inc
fwait
cli
xchg
xchg
pop
mov
push
and
faddl
jbe
nop
ljmp
xchg
push
mov
and
pop
cs
add
jmp
dec
jno
imul
pop
dec
and
pop
push
imul
fisubs
add
adc
add
xor
xor
cmp
fistpl
fisubl
dec
fwait
cmp
add
jg
lret
gs
xchg
jne
xchg
sar
cmpsl
mov
cmp
jmp
dec
xor
jnp
mov
fdivrs
mov
inc
cwtl
test
call
hlt
push
lds
leave
jae
ljmp
pop
test
or
sbb
stos
xor
mov
xchg
std
and
lcall
ljmp
sbb
xlat
pop
or
jle
enter
cmove
sub
jmp
mov
xchg
jge
bound
push
pop
gs
lcall
adc
stos
jmp
enter
inc
mov
sbb
dec
jno
aad
pushf
sti
mov
fwait
loop
in
icebp
push
cmp
sbbb
loopne
popf
rorl
sarb
imul
jne
sbb
lods
adcb
cld
or
xchg
lods
mov
pop
ret
push
jnp
fcomip
pushl
mov
xchg
mov
or
dec
jecxz
add
cmpsl
rcl
jecxz
lcall
and
popf
adc
cs
lods
dec
cs
xor
xor
scas
push
andl
shl
fmuls
cmpl
sbb
jmp
inc
sub
aaa
dec
rol
jg
push
popl
cmp
mov
lcall
push
pop
loope
jne
adc
outsb
cwtl
rcll
ret
add
mov
jmp
ljmp
mov
ret
imul
cmpsb
movsl
mov
mov
inc
in
lods
ret
es
sbb
call
or
and
dec
xchg
movd
fistpl
push
push
test
push
cs
cmp
sub
mov
inc
dec
cmp
enter
es
pop
mov
mov
jnp
push
and
ficomps
or
or
mov
fmuls
xor
cld
lds
jnp
push
jle
xchg
and
fdivrl
mov
pop
add
mov
out
push
sbb
mov
push
push
jl
jmp
mov
stos
add
rcrl
mov
and
ss
repz
ja
negb
ljmp
mov
sbbl
push
dec
jecxz
pop
lock
xchg
flds
mov
push
or
lret
mov
cmpsl
cltd
test
out
test
jmp
jbe
pop
aaa
push
rcr
setle
jp
aam
cmp
or
ljmp
js
popf
and
or
sbb
cmp
jle
stc
xchg
and
andb
pushl
aam
xchg
mov
dec
sbb
pusha
push
cs
dec
popf
dec
fwait
push
ds
lcall
loopne
mov
sar
jne
repnz
sbb
pushf
inc
jnp
push
inc
push
lcall
movsb
pop
fists
sti
int3
bound
cwtl
fldenv
out
fists
lock
lcall
inc
in
es
adc
mov
push
adc
clc
push
jge
int3
cmp
out
test
push
inc
cmp
mov
cmp
jl
mov
loop
ret
adc
testl
insb
mov
xchg
mov
sub
mov
fldenv
gs
push
lcall
mov
mov
repz
int
jne
ja
test
fs
inc
bnd
pushl
jl
cmp
iret
push
sub
cli
stos
sarl
lret
popa
pop
xor
add
mov
pushl
std
inc
push
std
hlt
testb
adc
adc
mov
icebp
shr
push
jae
pushf
ljmp
clc
out
ljmp
sub
test
loop
cmp
clc
cli
push
bound
es
roll
adc
nop
dec
pop
daa
xlat
in
pop
cmp
or
call
or
mov
call
icebp
call
into
mov
loop
adc
and
add
in
mov
inc
aaa
mov
outsb
loope
loop
mov
fdivr
dec
in
movl
or
cmpb
fsubl
jae
cmp
in
adc
scas
fwait
mov
das
cli
call
push
out
inc
adc
into
ljmp
dec
or
and
mov
jmp
in
mov
mov
fistl
int
jbe
pop
mov
call
loop
inc
dec
addl
repz
sub
rcr
cs
xchg
mov
stos
adc
push
ds
shll
fists
push
cs
imul
cli
inc
jp
movsl
je
mov
inc
jne
xor
adc
mov
and
call
jl
pop
adc
mov
jae
ret
lcall
add
cmp
mov
outsb
nop
sbb
aaa
rol
lcall
ljmp
xor
aas
add
or
pop
cmp
inc
incl
decl
adc
dec
pusha
cli
mov
cmp
xchg
jge
hlt
mov
mov
sbb
sub
imul
xor
sbb
incl
fidivrs
stos
xlat
push
mov
in
out
cmp
out
jns
ficoms
jg
push
mov
xor
gs
fbld
inc
ficomps
in
mov
incl
and
adcb
mov
call
mov
fiadds
lock
cmp
icebp
insb
cmp
cli
in
jmp
xlat
shlb
push
aaa
fidivs
push
cmp
and
scas
stc
inc
nop
xchg
test
add
xchg
pop
xlat
push
jg
and
push
add
inc
fistpl
aad
fsubrl
aad
pusha
ljmp
mov
adc
mov
lret
hlt
lcall
fs
push
in
orl
cmp
cmpsl
repnz
repnz
cld
int3
mov
cmp
jnp
xor
decl
mov
mov
mov
subl
lret
mov
xlat
mov
xchg
shrb
decl
inc
inc
loop
sbb
mov
or
je
cmp
or
add
mov
sbb
in
ljmp
inc
sub
push
mov
push
mov
bound
sub
adc
add
incb
pop
test
mov
outsb
je
or
lcall
cwtl
xchg
and
jmp
inc
es
ljmp
es
js
ret
ljmp
fs
pop
dec
gs
xor
jg
sub
mov
mov
lret
js
mov
arpl
lret
cmp
xchg
aas
jmp
xor
psubd
ds
fs
mov
and
mov
adc
pop
test
cltd
arpl
ljmp
jmp
test
cmc
aad
jl
add
fldl
mov
outsl
push
mov
decl
out
rcrb
xchg
pop
hlt
push
dec
out
mov
xchg
sahf
int3
dec
xor
dec
mov
jo
sub
fnstenv
jecxz
sar
add
test
inc
dec
xor
ljmp
xchg
pop
xor
push
out
rcll
mov
and
imul
out
cmp
jmp
hlt
arpl
sbb
xchg
mov
jg
mov
leave
pop
ljmp
sbb
cmc
push
cld
call
inc
enter
mov
pop
inc
xlat
sbb
xor
test
xor
pop
and
fs
xor
movsb
xchg
movsl
inc
mov
and
lock
push
push
mov
addl
mov
pop
cmp
ljmp
dec
mov
in
xchg
push
push
jge
mov
jg
dec
dec
xchg
or
jp
icebp
cli
das
mov
cli
cmpsl
cmpsl
dec
cmp
mov
test
stos
adc
test
movd
add
aaa
pushf
or
sar
cld
fcoml
xor
mov
repnz
rcr
int3
sbb
stos
mull
repnz
scas
mov
ret
fcompl
loope
clc
jne
call
or
push
push
mov
test
test
sbb
pop
cmp
adc
adcb
decl
pop
push
ds
xor
add
cmp
mov
sti
sbbb
rcll
dec
popa
ja
jmp
idivl
mov
les
and
call
incl
xchg
aaa
push
pop
push
into
and
push
xchg
test
mov
ljmp
push
aam
test
lret
dec
aaa
jecxz
add
scas
repz
xchg
xchg
cs
dec
sub
into
daa
sbb
aam
inc
sub
sahf
jecxz
mov
xchg
and
jbe
dec
jecxz
aad
or
movsb
fcomip
loop
xor
aas
jl
xchg
mov
sti
mov
shr
xor
aam
fdivrp
cmc
jno
incl
sub
call
push
sub
mov
faddl
jbe
call
fsubs
jmp
outsb
or
into
jnp
or
mov
in
sbb
mov
push
std
push
aaa
mov
mov
ljmp
adc
xlat
dec
or
loop
jbe
jae
dec
jle
push
into
lcall
ljmp
clc
addr16
mov
pop
add
dec
lret
cmp
roll
cmp
add
sar
decl
aad
jmp
sti
lcall
jns
push
fsubrp
cmpsl
stc
push
mov
lcall
jl
xor
mov
inc
xor
push
lods
xchg
insl
pop
adc
sbb
inc
aas
leave
adc
cwtl
movsl
pop
push
xchg
inc
jns
xchg
adc
aad
sbbl
add
pop
or
aas
lds
lods
pop
rorl
or
lods
jl
adcl
ljmp
sbb
fistpl
test
inc
sbb
iret
jg
sarl
push
ljmp
mov
lret
push
fadds
and
sub
xlat
mov
jmp
int3
jle
pop
pshufw
dec
pop
xor
les
xorl
int3
les
and
adc
fwait
pusha
jnp
lods
push
pop
push
insb
repnz
pop
jp
sub
mov
push
cld
jo
in
or
mov
sbb
int
std
mov
ljmp
sbb
sub
outsb
sbb
mov
mov
je
into
outsl
insl
push
pop
add
add
lock
mov
ljmp
jecxz
mov
sub
test
push
jnp
std
mov
push
or
ljmp
cwtl
mov
inc
or
lock
addl
decl
and
pop
dec
mov
in
mov
add
stos
mov
and
sub
lcall
inc
lret
fnsave
fwait
or
mov
push
mov
sahf
nop
cmp
cmp
ficoms
mov
sub
mov
fists
hlt
adc
out
in
mov
dec
int
dec
sub
jmp
in
xchg
enter
dec
lret
incl
out
lea
xchg
pop
mov
add
jmp
inc
dec
jns
pop
lods
js
movsl
ljmp
pop
mov
test
sub
stc
mov
push
push
xor
lcall
adc
xchg
jns
imul
inc
inc
icebp
xor
cmpsl
pop
and
fisubrs
jecxz
cwtl
pop
frstor
int3
push
les
xchg
nop
inc
adc
mov
cmp
lcall
in
or
jns
push
sub
mov
loope
fcmovnu
sbb
adc
loop
ljmp
add
shrb
ljmp
les
pop
call
sbb
popa
jns
daa
push
popf
dec
pop
push
dec
cmp
adc
decl
and
or
stos
pusha
into
aad
sub
popf
fisubrl
outsb
xor
mov
mov
sbb
ss
insl
lea
loop
adc
ljmp
pop
in
iret
xchg
call
mov
xchg
orb
cmc
jbe
leave
push
adc
enter
sti
int
mov
insl
insl
cmpsl
lods
outsb
fwait
jmp
dec
fstpl
pop
aam
int3
int
lock
dec
cmp
and
out
pop
stos
jne
je
pop
sbb
iret
mov
push
stos
inc
aad
jmp
pushl
cld
dec
mov
or
jo
dec
fistpll
lods
mov
and
decl
inc
arpl
and
in
test
pop
cmp
rcll
cmc
mov
cmp
xchg
pop
jb
and
mov
jg
mov
xor
repnz
mov
mov
test
jp
push
pushf
ret
pop
cld
orb
lret
jno
add
out
orb
rol
adc
jg
ljmp
mov
push
xchg
mov
mov
mov
lods
inc
ret
mov
cmp
pushl
enter
inc
mov
inc
rclb
fs
lods
sub
iret
push
imul
push
ss
fsub
dec
mov
dec
ja
fisubs
outsb
dec
add
incl
inc
mov
sbb
jne
push
mov
and
sub
std
pop
nop
push
add
cmp
daa
daa
incl
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
rolb
inc
xchg
adc
adc
subl
push
adc
mov
lock
xchg
add
add
push
gs
fcoms
mov
sbb
fmuls
jne
arpl
dec
imul
jns
js
push
push
gs
sbb
inc
imul
fcmovnu
jae
sub
push
jae
mov
popa
jne
je
inc
dec
inc
es
mov
jp
arpl
outsb
lods
sbb
push
xchg
jae
lret
lcall
insb
push
xlat
in
or
arpl
cmpsb
arpl
insb
shlb
insl
lock
pop
adc
mov
fs
xorb
orl
fs
insl
or
inc
inc
out
pop
add
lods
pop
mov
add
jns
imul
aam
mov
rcr
je
divb
sbb
add
push
mov
je
popa
repnz
popa
lock
pop
add
xor
push
inc
cmpsb
fs
ret
dec
in
and
bound
out
inc
mov
ljmp
mov
jb
inc
mull
sub
jb
cmp
pusha
test
arpl
lahf
dec
mov
adc
xchg
add
popa
ja
or
adc
xchg
or
and
adc
and
xchg
insl
leave
push
or
cmovne
xchg
repz
adc
lods
sbb
sti
sbb
test
jns
mov
dec
imul
push
gs
add
jecxz
sub
mov
push
xorb
jmp
push
fs
pop
enter
adc
jns
popf
and
or
push
jnp
adc
mov
push
adc
mov
mov
add
push
mov
rcll
and
sbb
sbbl
sub
or
jne
mov
dec
mov
addps
aad
test
xor
or
mov
inc
adc
cmp
pop
rol
jns
push
inc
mov
adc
inc
adc
sub
scas
inc
sbbl
sub
jo
inc
inc
rorl
inc
add
add
xchg
mov
cmpsl
mov
or
sub
and
or
add
add
and
scas
ret
adc
xor
dec
mov
and
mov
aaa
fbstp
sub
andl
inc
sub
test
or
test
stos
rcll
xchg
inc
adc
inc
xor
adc
mov
push
jo
add
mov
adc
add
pop
popa
inc
mov
incl
mov
mov
adc
push
repz
insb
popa
jae
xchg
shll
xor
test
rclb
movsl
inc
or
mov
inc
adc
sub
stos
data16
sbb
cmp
sar
shlb
add
and
jge
addl
push
lea
push
or
aam
cmp
xchg
aam
test
inc
sbb
mov
adc
inc
rcll
dec
cmp
ret
xchg
out
or
adcb
xchg
push
push
or
dec
sub
test
add
push
xor
jg
mov
push
repz
iret
xor
push
and
repz
and
jg
xor
nop
sub
pop
dec
pusha
add
lds
xor
inc
popa
push
mov
inc
int3
xchg
push
das
pop
sub
movsb
dec
scas
or
push
adc
pop
mov
pop
add
mov
sub
out
and
pop
shll
cmp
cltd
pop
add
xchg
push
xor
int
sbb
mov
movsb
jmp
test
sub
and
inc
stos
or
lds
push
mov
stos
pop
or
add
mov
push
add
mov
pop
mov
imul
mov
or
jge
mov
loope
inc
stos
sub
mov
orb
and
test
push
movsl
add
pop
adc
orb
imul
xchg
pop
inc
pop
mov
std
sbb
jne
lahf
add
cmp
jns
and
push
shrl
inc
pop
xchg
jnp
xchg
or
lahf
add
mov
and
push
inc
xor
push
sbb
mov
mov
inc
je
and
movswl
inc
or
aad
adc
sub
orb
adc
movsl
add
lods
jne
push
push
xlat
cmc
push
pop
mov
xlat
int
mov
imul
adc
lods
jmp
insl
stos
xor
jne
popa
dec
inc
and
mov
ljmp
subb
or
add
inc
or
adc
push
and
imul
movsb
add
dec
and
xor
xor
sbb
and
arpl
stos
mov
sbb
inc
xchg
xchg
or
in
or
mov
and
push
testl
adc
jno
jnp
and
sub
inc
cmp
inc
or
test
inc
fldenv
or
adc
rorb
imul
or
push
dec
and
addl
or
and
inc
pop
add
rcrl
push
and
and
orb
push
mov
xchg
push
aad
push
aad
push
stos
or
mov
pusha
adc
push
lods
adc
loopne
push
inc
mov
stos
pop
jae
inc
xor
inc
dec
push
add
xor
orb
test
pop
adc
add
adc
out
test
or
add
pop
push
add
push
sub
jne
inc
mov
ret
mov
push
adc
jge
test
movsb
inc
fildl
or
push
sub
sub
jno
sub
adc
ret
mov
mov
sbb
xlat
adc
and
push
add
mov
fwait
aam
sbb
sti
and
sub
mov
rorb
mov
inc
cmc
and
mov
sub
xor
inc
inc
daa
push
add
add
add
add
orb
inc
test
cmpsl
addb
push
lret
pop
add
jae
add
adcb
and
repz
ret
insl
adc
mov
mov
sub
adc
mov
add
stos
adcl
xlat
inc
add
inc
pusha
sbb
addl
notl
mov
and
mov
add
pushl
push
dec
add
add
add
add
or
or
add
in
daa
incb
inc
in
insl
xchg
xchg
pop
and
ucomiss
lods
lods
int
cmp
lea
nop
movb
adc
cmp
dec
loop
adc
out
rolb
fiadds
mov
add
and
sbb
and
add
cld
jb
popa
je
cmpsb
mov
pop
in
jle
inc
outsb
dec
push
xor
mov
in
psllw
dec
orb
jb
dec
dec
xor
repz
or
mov
rcll
xchg
scas
test
aas
dec
clc
testl
add
xchg
and
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
movsl
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
or
add
shrb
add
in
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
mov
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
mov
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
and
add
in
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
add
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
loopne
cmp
loop
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
shrb
add
in
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
mov
in
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
xorb
add
in
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
pusha
xor
add
in
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
inc
cmp
loop
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
and
cmp
loop
lock
cmp
xchg
in
test
jl
adc
sbb
xchg
xchg
xor
stc
ret
jl
cmp
xor
or
cmp
shlb
out
mov
adc
mov
sub
mov
fsubr
add
fs
mov
inc
out
pop
cmp
cmpsb
xorb
adc
fsubl
mov
mov
addb
xchg
ds
jae
pop
dec
dec
test
cwtl
dec
stos
gs
in
sbb
rolb
and
cmp
arpl
cmc
addr16
pop
mov
push
push
mov
pop
jne
repz
xchg
jo
out
sbb
pop
stc
xchg
aaa
les
movsl
sbb
inc
hlt
xor
shr
test
cmp
aas
loope
inc
jnp
incl
jbe
out
out
jbe
cmp
ficomps
xchg
mov
push
sarb
loope
mov
mov
or
dec
xlat
leave
mov
addb
and
imul
insl
bound
in
leave
das
call
rorl
and
xor
pop
cmpsl
repnz
data16
inc
cmpsb
xor
mov
sbb
mov
hlt
clc
push
rcll
in
pop
inc
xchg
jbe
dec
and
mov
sahf
mov
pop
cs
dec
fisubrs
sub
popf
push
and
mov
fwait
jbe
dec
ret
push
cmp
xchg
loope
inc
xor
mov
repz
test
jmp
mov
mov
cmpsl
dec
xor
negl
sub
push
test
sbb
mov
andb
adcb
jle
sub
fsubl
test
imul
int
adc
sbb
mov
sbb
inc
xor
sub
lcall
adc
in
pusha
fimull
sub
mov
cmc
jecxz
xor
jae
jg
xchg
xchg
xchg
insb
and
jno
data16
idiv
mov
cwtl
mov
je
xorl
ret
push
jle
rclb
or
lret
push
fcmovbe
jae
fimull
mov
out
mov
popf
mov
add
fcoml
inc
arpl
lahf
or
lahf
push
push
jl
adc
call
out
jmp
xchg
hlt
ret
mov
addl
shl
shll
movsl
sbb
out
mov
adc
cli
sti
sbb
jb
aam
cmp
push
sbb
mov
movsl
lock
push
inc
and
push
movsb
mov
and
ret
sbb
mov
mov
add
leave
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
add
add
mov
add
dec
mov
add
pop
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
