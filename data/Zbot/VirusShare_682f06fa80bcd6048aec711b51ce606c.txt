inc
cmp
dec
push
pop
xor
xor
dec
push
add
add
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
ret
nop
push
mov
add
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
lea
movl
mov
lea
movl
call
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
call
call
call
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movl
lea
movl
mov
lea
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
movl
lea
movl
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
movl
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
movl
lea
movl
mov
lea
movl
mov
mov
mov
mov
movl
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
mov
mov
mov
mov
movl
call
movl
lea
movl
mov
lea
movl
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
aaa
add
add
add
add
xor
cmp
xor
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
xor
aaa
add
add
add
add
add
in
add
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
mov
mov
mov
mov
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
lea
movl
mov
lea
movl
call
mov
pop
ret
add
add
aaa
add
add
add
add
xor
cmp
xor
add
xor
cmp
xor
cmp
xor
xor
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
in
add
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
mov
mov
mov
add
mov
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
call
mov
mov
mov
mov
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
movl
lea
movl
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
lea
movl
mov
lea
movl
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
mov
mov
mov
mov
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
call
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
lea
movl
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
mov
mov
mov
mov
movl
call
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
mov
push
mov
push
lea
push
mov
push
call
movw
movl
mov
movl
push
push
call
test
jne
call
movl
call
mov
movb
jmp
mov
mov
call
movl
movl
mov
jmp
cmp
and
jae
fs
cs
insb
add
xor
adc
add
lock
add
mov
mov
movl
test
jne
mov
jmp
mov
movw
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
call
mov
mov
mov
mov
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
movl
lea
movl
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
lea
movl
mov
lea
movl
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
mov
mov
mov
mov
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
call
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
lea
movl
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
mov
mov
mov
mov
movl
call
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
jmp
mov
test
je
mov
call
mov
movl
and
cmpb
jne
mov
mov
mov
mov
pop
ret
xor
add
add
add
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
xor
cmp
xor
add
add
xor
xor
xor
xor
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
cmp
xor
add
add
add
add
add
cmp
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
xor
add
add
push
mov
push
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movb
mov
pop
pop
ret
lea
push
mov
add
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movl
lea
movl
mov
lea
movl
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
call
ret
nop
adc
aas
jbe
gs
push
dec
sbb
xchg
out
imul
test
in
sbb
xorl
cltd
or
fwait
pop
repnz
repnz
popf
push
xchg
aad
sub
mov
inc
add
jo
add
ret
aad
ds
daa
jo
add
stos
je
inc
add
or
nop
inc
add
sbb
jo
add
mov
add
cmp
inc
add
add
pop
movb
adc
push
into
adc
loop
mov
xor
scas
jb
mov
push
cmp
movb
lea
or
sbb
jmp
mov
fcmovne
sub
addr16
cmp
lret
xchg
int
testl
mov
pop
mov
and
mov
sbb
mov
add
pop
sbb
movsb
pop
in
cld
outsl
mov
mov
mov
scas
jg
inc
jbe
mov
lds
imul
insl
mov
clc
ss
popl
add
lret
dec
mov
loop
es
adc
fidivs
in
mov
pop
cs
dec
cld
push
inc
ret
dec
push
cwtl
inc
push
xchg
adc
xor
test
ds
stos
sub
outsb
mov
jp
or
jmp
pop
sbb
sbb
in
lock
xor
pmaxub
ficoml
enter
rorb
jo
add
loop
and
inc
add
inc
or
imul
out
fs
sub
dec
adc
jp
jo
add
dec
pshufw
inc
xchg
adc
loop
xchg
xchg
adc
and
aam
xor
fnstenv
and
inc
add
jo
add
sub
add
lret
int
ret
rclb
rclb
fdivr
adc
inc
add
fwait
pop
ljmp
and
push
or
inc
add
push
ds
adc
bound
add
inc
add
neg
adc
pop
nop
lock
sbb
cs
jo
add
and
jo
add
cmp
pop
ret
test
into
int3
ficoms
orb
inc
add
adc
inc
add
adc
stos
call
pop
add
add
inc
or
inc
pop
mov
inc
add
cmc
xchg
xchg
jno
jb
jb
test
jo
add
add
push
enter
jo
add
and
inc
add
jno
push
mov
es
add
mov
or
enter
call
push
xor
pop
loop
and
or
inc
adc
push
sub
add
push
push
sub
inc
add
cmpsb
data16
mov
icebp
xchg
insb
lret
mov
add
add
aam
xor
imul
jne
enter
or
movl
movsb
push
jo
add
nop
and
inc
add
dec
jbe
pop
cmpsb
es
add
mov
or
out
mov
push
jo
add
nop
inc
add
dec
cmp
adc
add
or
add
inc
add
mov
dec
and
or
inc
add
loopne
jo
add
add
add
jo
add
inc
add
stc
rcll
dec
cmpsb
data16
push
sahf
outsb
in
xor
test
outsb
aad
das
mov
adc
bound
jo
add
push
and
inc
add
sub
inc
add
pop
and
add
pusha
leave
out
arpl
cmp
sub
add
xchg
xor
cli
xor
out
or
pop
jo
add
xchg
adc
add
or
add
jge
lods
cmp
cltd
dec
dec
enter
jo
add
mov
sbb
inc
add
push
rcll
xchg
rcr
fstpl
add
decb
jo
add
jo
add
inc
add
es
add
push
or
inc
sbb
add
or
jo
add
and
jo
add
sub
jo
add
xor
shll
mov
mov
int3
sub
cmp
mov
fs
push
ljmp
jo
add
mov
add
push
addl
jo
add
add
popf
jnp
cmpsb
test
pop
add
mov
hlt
inc
push
loope
xchg
leave
mov
fisubs
inc
add
push
loopne
pop
jo
add
jo
add
out
icebp
repz
in
xor
adc
add
adc
inc
add
mov
inc
add
aad
add
mov
jo
add
jb
repnz
add
das
xor
ret
mov
rcrb
leave
int3
arpl
xlat
fistpl
popa
repz
mov
inc
or
andb
adc
xchg
xchg
jle
in
and
jns
movsl
insb
flds
xor
imul
out
jo
add
orl
mov
push
fimull
jo
add
mov
clc
or
hlt
add
and
mov
push
jo
add
jo
add
aas
faddl
fcomps
es
add
sbb
inc
add
js
sub
add
stc
cld
enter
jbe
add
lahf
mov
stc
sbb
pushf
lcall
sbb
sbb
adc
jns
es
sbb
ljmp
cltd
roll
in
testb
fst
fcmovne
aam
mov
icebp
in
int
in
add
leave
stos
mov
scas
mov
mov
in
out
icebp
mov
cmpsb
mov
movsb
jl
movups
imul
das
inc
mov
sub
push
cmp
gs
inc
pop
dec
jl
adcl
pop
inc
popa
arpl
imul
adc
or
aas
sub
inc
repnz
int3
icebp
or
add
push
icebp
loopne
or
add
fisubrl
int
cmpsl
frstpm(287
ffreep
leave
sahf
push
xor
cmp
pop
cmpsb
cs
dec
repz
negl
filds
int3
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
nop
inc
add
stos
pushf
nop
inc
add
mov
pop
cmc
or
nop
inc
add
test
inc
add
lcall
push
cmpsb
mov
inc
add
push
lds
inc
add
adc
les
mov
lods
rclb
nop
inc
add
sub
nop
inc
add
ds
test
push
adcl
mov
push
pop
sub
mov
outsl
test
hlt
addr16
popa
inc
add
push
push
inc
hlt
aas
repnz
std
dec
test
dec
sahf
cmp
and
jmp
mov
jo
pop
cmpb
add
inc
rorl
fnstcw
pop
add
sahf
outsb
fnstenv
rol
and
orl
push
pushf
mov
xchg
aas
push
rcrb
xchg
pushf
sbb
imul
dec
out
movsl
sbb
mov
ret
or
mov
push
int
push
pop
mov
jne
mov
sahf
cmp
das
xlat
cmp
mov
je
adc
stc
divb
enter
jmp
mov
pop
loopne
in
sub
shrl
inc
les
mov
ja
cmp
sbb
sbb
mov
out
imul
mov
sbb
test
fists
lea
int
fsubrl
outsb
xlat
in
cs
mov
add
imul
add
std
mov
popf
xlat
xchg
pop
test
sub
jns
idiv
std
mov
push
jmp
push
rcll
scas
lcall
subl
out
rolb
push
add
sbb
call
popa
cmp
sub
mov
xchg
cmpsl
addb
rorl
loopne
es
xlat
push
out
sub
icebp
mov
in
dec
cld
cmovle
rcll
pop
xchg
inc
mov
fsubrp
jecxz
lcall
push
in
test
add
dec
and
push
cmp
data16
mov
adc
imul
sub
addr16
push
lods
scas
js
mov
out
mov
outsl
clc
ss
stos
cli
pop
jge
jle
mov
lea
cltd
pushf
loopne
sub
popa
jle
stos
lods
scas
xlat
mov
mov
decb
add
push
mov
inc
movsl
mov
mov
fsubl
in
out
icebp
insb
mov
mov
jl
cmp
or
mov
mov
test
adc
bound
dec
stos
jb
les
ds
mov
xchg
int3
adc
out
mov
popf
xor
jge
inc
mov
subl
mov
out
fidivrs
je
lret
sbb
push
xor
push
cs
jns
mov
mov
push
xchg
cmp
xchg
xchg
je
inc
js
jb
inc
jp
xor
mov
jl
xchg
push
int
mov
sbb
cmp
mov
jecxz
jg
inc
mov
rorb
fmuls
aad
imul
out
test
aas
test
cmp
out
cmp
shll
cltd
adc
inc
push
rcl
push
aam
and
xor
out
gs
pop
sub
mov
sub
inc
leave
mov
pop
mov
xchg
or
xchg
mov
jmp
out
icebp
cmc
jo
add
mov
xchg
jo
xchg
or
daa
pushf
js
sahf
push
fnstenv
jne
mov
push
iret
int3
mov
mov
adc
imul
inc
ljmp
push
orl
in
fwait
popf
lahf
out
jns
pop
or
shll
ret
shrb
loope
mov
int
scas
cmp
pop
mov
cmc
not
xor
pop
or
xor
dec
sub
add
nop
pop
in
and
xor
aas
dec
cmp
dec
ror
inc
inc
pop
sbb
shl
leave
hlt
fs
sahf
xlat
aas
nop
jmp
stos
or
inc
jns
dec
mov
jp
jbe
push
push
add
mov
dec
addb
pop
inc
mov
xor
cs
and
xor
aas
adc
ret
adc
mov
push
or
push
hlt
sbb
lock
jle
mov
or
inc
add
js
mov
fiaddl
or
rorb
lds
and
sub
jae
ja
ds
jg
ret
sti
inc
adc
adcl
xchg
enter
js
daa
cwtl
outsb
imul
in
pop
sub
pop
xchg
add
movl
inc
fldcw
in
movsb
and
loopne
insl
mov
stos
push
add
hlt
add
add
adc
dec
out
push
clc
and
add
out
out
xor
lods
jb
or
leave
jl
mov
add
push
les
iret
push
mov
rorl
inc
add
mov
xchg
cmp
or
xorl
rolb
inc
add
mov
popf
lahf
mov
add
inc
add
inc
add
inc
add
ret
lds
or
insl
or
or
inc
add
cmp
sbb
mov
or
inc
add
adc
or
or
inc
add
xor
mov
sbb
insl
or
inc
add
inc
arpl
mov
mov
inc
add
cltd
sbb
mov
test
push
fldl
and
and
out
mov
loopne
mov
or
iret
roll
stos
lahf
lods
out
mov
adc
jbe
jo
add
js
or
jo
add
mov
sub
add
add
add
sahf
fwait
popf
lahf
sti
inc
je
inc
add
mov
jo
inc
add
mov
int3
pop
pop
pop
ss
les
lods
or
and
nop
inc
add
ror
iret
outsb
les
and
add
mov
lahf
or
adc
sbb
inc
add
sub
add
mov
inc
add
push
or
mov
jo
add
mov
dec
cmpsb
data16
push
sahf
outsb
in
mov
loope
dec
fcom
sub
nop
inc
add
xchg
rolb
push
pop
adc
ss
cmp
pop
sbb
ss
mov
call
icebp
ret
nop
inc
add
xchg
insb
cmp
mov
jo
add
cwtl
sbb
add
mov
jo
add
push
jo
add
jo
add
mov
add
fmuls
add
pop
in
into
sub
add
or
or
add
inc
add
inc
add
mov
pusha
sub
inc
add
sbb
inc
add
add
add
add
jo
add
loope
mov
add
rolb
jo
add
adc
fisttps
cmpsl
out
in
ljmp
jo
add
mov
sub
inc
add
push
loope
dec
xor
inc
imul
add
je
jo
add
inc
add
mov
inc
add
mov
pop
jo
add
add
inc
xchg
cli
inc
mov
data16
adcb
jo
add
clc
pushf
lahf
pop
cmpsb
adc
add
xchg
test
ljmp
mov
jo
add
test
fimuls
jo
add
lret
inc
add
mov
xlat
push
into
add
ficompl
notb
jo
add
jo
add
jo
add
lock
repz
testl
or
mov
pop
jmp
xor
add
inc
mov
ds
inc
add
xchg
insb
inc
inc
inc
rcrb
inc
add
jo
add
add
sub
in
es
add
add
pop
sub
add
imul
jno
adc
sbb
add
mov
jo
add
es
and
data16
xchg
imul
add
adcb
jae
mov
mov
aad
ret
inc
add
out
jo
add
inc
add
mov
jo
add
imulb
ljmp
call
xchg
xor
sbb
add
nop
inc
add
or
add
clc
jg
pop
sbb
sahf
sub
jo
add
add
add
hlt
xor
jo
add
das
ds
mov
leave
aaa
negb
add
xchg
lods
xor
lcall
mov
inc
add
lods
insb
and
add
clc
pop
or
sbb
jbe
jo
add
jp
jo
add
mov
lods
lcall
mov
jo
add
pop
jo
add
out
and
cmpsl
stos
ljmp
dec
les
add
adc
aam
dec
xchg
inc
bound
cmp
jbe
adc
sbb
push
adc
mov
jle
aas
xchg
dec
or
xchg
push
and
out
subl
cmp
cmp
dec
int
fcomps
int3
sbb
inc
add
pop
fcompl
out
mov
mov
js
jo
add
insb
sub
add
mov
jo
add
scas
or
add
pop
jo
add
out
sub
fwait
lods
mov
popf
mov
mov
repz
cmp
popf
sub
inc
cmp
fs
shll
push
sub
dec
mov
lea
xchg
dec
jecxz
push
cmc
sbb
add
mov
imull
cmp
jecxz
dec
int
sbb
lret
dec
jb
lea
imul
dec
mov
aas
mov
mov
shlb
push
adc
jae
fbstp
mov
pop
fs
pop
cs
push
dec
add
nop
and
xor
inc
bound
jecxz
jo
repnz
std
idiv
sti
mov
ret
or
repz
popf
test
sti
mov
pop
cmp
enter
xor
pop
movsb
dec
rcrb
cltd
pushf
pop
and
xor
divb
jo
add
add
jo
add
insb
add
add
xorl
lea
int3
ja
xchg
sbb
xchg
out
arpl
mov
mov
hlt
pop
dec
mov
ds
or
push
xchg
cmp
pop
bound
aad
shl
mov
pmulhuw
adc
sub
mov
fsts
movsb
push
sti
movsb
pop
xchg
mov
add
pop
scas
jle
enter
and
push
iret
push
lods
rclb
shrl
sub
mov
lea
xor
inc
movsl
push
xchg
movlhps
insl
adc
pop
movsl
xchg
subl
in
jg
mov
icebp
mov
add
rorl
mov
inc
push
inc
cs
scas
dec
jbe
aas
push
mov
sbb
das
add
jae
ja
lds
icebp
sub
repnz
lcall
jbe
pop
sub
mov
add
sub
push
push
jo
add
xchg
pop
and
add
pusha
arpl
push
jo
add
jbe
jo
add
jo
add
pop
and
add
jo
add
ds
or
inc
add
xor
sbb
in
jno
popf
lahf
mov
xor
jmp
mov
pop
pop
xchg
mov
mov
rcl
aad
shlb
fwait
add
mov
nop
inc
add
out
test
inc
add
leave
test
jle
add
loop
and
loope
add
inc
add
mov
and
sub
add
xor
jo
add
cmp
jo
add
inc
es
add
dec
and
add
add
xchg
push
lret
arpl
mov
dec
movsb
sbb
add
push
jo
add
loope
jge
or
jo
add
les
xchg
add
add
pushf
push
inc
add
fmull
add
popa
fwait
sbb
jne
mov
jo
add
mov
les
jo
add
cmp
ror
les
jo
add
cmp
sbb
sbb
add
out
push
jo
add
inc
add
push
inc
add
mov
jo
mov
pop
add
push
push
imul
inc
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
test
je
mov
call
mov
movl
and
cmpb
jne
mov
mov
mov
mov
push
mov
push
call
mov
push
push
call
test
jne
call
movl
call
mov
movb
jmp
mov
mov
call
movl
movl
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
mov
mov
sub
jb
inc
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
call
mov
mov
mov
mov
movl
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
mov
mov
mov
mov
movl
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
movl
lea
movl
mov
lea
movl
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
mov
mov
mov
mov
movl
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
je
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
mov
mov
mov
mov
movl
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
lea
movl
mov
lea
movl
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
mov
mov
mov
mov
movl
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
mov
mov
mov
mov
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
mov
pop
ret
xor
xor
add
aaa
add
add
add
add
add
add
add
aaa
add
add
add
add
xor
add
xor
xor
xor
add
add
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
aaa
add
cmp
xor
xor
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
mov
movw
add
mov
cmp
jle
movb
add
jmp
dec
mov
call
mov
call
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
mov
test
jne
mov
movw
mov
call
jmp
mov
add
mov
mov
call
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
mov
mov
dec
cmp
jae
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
lea
push
mov
push
call
movw
movl
mov
movl
mov
push
mov
push
call
mov
mov
mov
movl
test
jne
mov
jmp
mov
movw
mov
mov
pop
ret
nop
push
mov
add
mov
movb
mov
mov
cmpl
je
mov
mov
mov
cmp
jb
mov
mov
cmpl
je
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
cmp
jne
movb
mov
mov
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
add
mov
push
call
mov
lea
mov
subl
movb
movb
movb
movb
movb
movb
sub
mov
test
je
mov
call
mov
movl
and
cmpb
jne
mov
mov
mov
mov
mov
call
mov
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
mov
mov
call
mov
lea
mov
subl
mov
mov
add
mov
call
mov
cmpl
je
push
push
call
test
jne
call
movl
call
mov
movb
jmp
mov
mov
call
movl
movl
mov
mov
mov
add
mov
call
mov
cmpl
je
mov
push
mov
push
lea
push
mov
push
call
movw
movl
mov
movl
lea
push
push
mov
sub
push
mov
push
call
movl
xor
mov
movw
add
mov
cmp
jle
movb
add
jmp
dec
mov
call
mov
call
addl
mov
cmp
je
call
mov
call
test
je
addl
addl
jmp
movl
lea
movl
mov
lea
movl
mov
addb
mov
mov
mov
mov
movl
mov
and
test
jne
incl
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
mov
dec
mov
inc
xor
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
incl
incl
incl
mov
cmp
jne
mov
push
mov
push
lea
push
mov
push
call
movw
movl
mov
movl
mov
call
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
mov
push
mov
push
call
cmpl
je
mov
mov
mov
test
jne
mov
movw
mov
call
jmp
mov
add
movw
add
mov
cmp
jle
movb
add
jmp
dec
mov
call
mov
call
push
push
call
test
jne
call
movl
call
mov
movb
jmp
mov
mov
call
movl
movl
mov
pushl
mov
pushl
add
push
jmp
mov
mov
mov
add
mov
mov
pop
ret
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
mov
add
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
movl
lea
movl
mov
lea
movl
call
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
call
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
call
call
mov
test
je
mov
movb
mov
mov
add
movl
mov
sub
mov
mov
mov
cmp
jl
movl
sub
mov
mov
movw
xchg
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
cmpb
jge
mov
mov
sub
jmp
mov
mov
sub
mov
movl
xchg
mov
call
movl
lea
movl
mov
lea
movl
call
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
lea
movl
mov
lea
movl
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
call
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
call
movl
mov
cmpw
jge
mov
mov
jmp
movb
and
movw
call
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
xor
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movl
lea
movl
mov
lea
movl
mov
mov
xchg
cmpw
jle
mov
movl
mov
jmp
mov
mov
mov
movw
xor
mov
movl
mov
mov
mov
push
mov
push
mov
push
call
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
mov
pop
ret
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
xor
add
add
add
xor
xor
cmp
add
push
mov
add
mov
mov
mov
test
jne
mov
movw
mov
call
jmp
mov
add
movw
add
mov
cmp
jle
movb
add
jmp
dec
mov
call
mov
call
movb
mov
and
mov
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
mov
test
je
mov
call
mov
movl
and
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
inc
xor
mov
dec
cmp
jne
mov
pop
ret
sub
sub
mov
inc
cmp
jne
mov
test
je
mov
call
mov
movl
and
cmpb
jne
mov
mov
mov
cmpb
jne
cmp
jl
mov
mov
jmp
mov
mov
movl
mov
mov
and
mov
sub
movb
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
test
jne
mov
movw
mov
call
jmp
mov
add
jmp
mov
mov
movl
test
jne
mov
jmp
mov
movw
movb
push
push
call
test
jne
call
movl
call
mov
movb
jmp
mov
mov
call
movl
movl
mov
mov
mov
pop
ret
add
add
insb
add
add
add
add
add
add
add
in
add
cmp
jg
sub
mov
dec
mov
movl
add
movl
movl
mov
movw
mov
movw
cmpl
jge
mov
xchg
mov
and
mov
mov
mov
call
test
jne
call
jmp
push
push
call
test
jne
call
movl
call
mov
movb
jmp
mov
mov
call
movl
movl
mov
movw
mov
test
je
mov
call
mov
movl
and
cmpb
jne
mov
mov
mov
call
mov
pop
ret
lea
cmpl
jne
movl
lea
movl
mov
lea
movl
mov
movl
movl
inc
cmp
jle
lea
movl
sub
movl
mov
mov
mov
mov
lea
movl
mov
lea
mov
call
mov
mov
mov
mov
movl
ret
nop
add
pop
xor
adc
cli
sahf
ja
lcall
daa
mov
cmp
jnp
push
out
stc
xor
mov
and
stc
push
xchg
pop
add
fstp
mov
fs
fnstsw
nop
test
add
sahf
insb
add
inc
add
jge
ja
outsb
dec
inc
add
and
cmp
in
cmp
xor
movsb
cltd
iret
mov
push
xor
add
inc
xchg
fucomip
daa
movsl
rcrb
out
add
pop
sbb
jbe
call
fcoms
les
repnz
std
push
add
xor
in
popl
and
add
loope
fdivl
xchg
cmpsl
jl
inc
push
xor
cmp
push
or
sub
jmp
gs
ja
and
out
das
out
xchg
adc
xor
sub
and
mov
add
aam
add
sub
sbb
es
adc
cmpsb
push
cmp
xchg
dec
mov
adc
pop
jne
xor
pop
popa
dec
adc
movsb
and
push
sub
cltd
add
ss
popf
inc
mov
add
mov
mov
pop
cmp
addr16
movsl
les
mov
enter
add
cmp
push
dec
dec
push
sub
ret
jecxz
mov
xchg
js
dec
ljmp
test
lods
add
pop
add
shrl
aaa
pop
mov
xchg
rolb
xchg
mov
push
mov
in
xor
aam
clc
out
xchg
push
sti
add
sub
pop
cmp
add
in
add
test
mov
dec
sub
push
push
add
xchg
dec
sub
inc
add
pusha
pop
inc
mov
jecxz
cmp
sub
sbb
ret
and
xchg
mov
xlat
adc
rolb
fst
stos
inc
inc
add
jns
outsl
dec
imul
xor
out
idiv
push
mov
add
scas
xor
insb
jg
insl
push
rol
jp
cmp
js
loope
sub
stc
repnz
dec
insl
jne
mov
add
out
jo
mov
lods
ret
mov
out
popa
rcll
pop
cmp
cmp
adc
xchg
insl
inc
add
fs
dec
clc
add
lret
xchg
lahf
jae
out
fildl
add
sti
cmpl
mov
stos
sub
cmp
pop
inc
lcall
jl
or
pop
cmp
scas
add
or
mov
jb
pusha
pop
pop
test
hlt
pop
std
mov
pop
mov
movsl
and
jmp
xchg
mov
cltd
add
pop
xor
push
add
cmc
scas
dec
push
add
cmp
lret
sbb
add
sbb
inc
lret
add
leave
lods
add
or
int3
add
test
add
add
in
paddq
lds
add
mov
cmp
add
mov
or
mov
es
imul
pusha
inc
add
fadd
sub
dec
cli
sub
mov
bound
add
add
addb
das
sub
dec
insl
lea
mov
cwtl
or
inc
ja
pop
mov
add
add
jbe
pusha
aas
dec
add
ljmp
imul
adc
pop
roll
aad
push
and
outsl
dec
aam
add
or
sbb
roll
push
mov
pusha
adc
mov
and
add
outsb
add
stos
sub
mov
stos
add
std
aam
daa
add
mov
pop
add
mov
sbb
fstpt
mov
add
mov
incb
je
imul
jns
and
out
lret
loopne
das
test
push
dec
je
add
pop
mov
xor
stos
aas
pop
cmp
pop
lds
outsl
dec
movsl
gs
sub
iret
jmp
jmp
cmpsl
popa
out
mov
push
pop
add
mov
cvtpi2ps
out
cmp
add
pop
cs
clc
pop
and
sub
push
or
movups
mov
jecxz
dec
dec
add
test
jns
aas
scas
mov
lods
fs
or
and
lock
lret
cmpsl
add
idivl
inc
adc
dec
sub
add
lock
daa
jae
push
dec
and
push
lods
jg
cmp
dec
pop
add
xlat
jae
out
mov
xor
mov
fs
add
repz
push
rolb
add
pop
jo
xchg
pop
jo
cwtl
add
subl
push
xor
add
movsb
sub
jb
and
push
iret
add
mov
push
push
sub
add
xchg
add
js
push
xchg
add
loop
divb
jle
sti
pop
mov
out
pop
sub
jle
add
dec
sbb
push
dec
or
imul
pusha
add
stos
pop
jge
add
jae
add
push
xchg
add
je
add
sahf
fdivl
mov
and
xchg
inc
cmp
inc
push
jbe
and
cld
in
js
out
inc
popa
fildl
sahf
add
add
in
pushf
add
aas
mov
movsb
mov
into
outsl
repnz
cmpsl
sub
add
dec
xchg
sahf
repnz
enter
and
add
add
mov
fiaddl
cmc
adc
add
mov
sub
cmp
out
pop
scas
pop
add
rolb
add
pusha
sbb
movl
adc
push
ss
cmp
fst
fiaddl
fdivs
add
gs
jl
add
mov
xor
js
sahf
roll
inc
and
xchg
adcb
gs
add
pop
adcb
sub
mov
pop
cmp
and
xor
aad
repz
add
cmp
push
cli
cwtl
add
inc
je
cmp
and
test
add
fs
mov
dec
gs
test
das
xor
jp
es
scas
sub
mov
add
xchg
decl
xor
jecxz
jbe
adc
scas
lods
push
mov
repz
mov
repz
mov
pop
data16
dec
and
outsl
clc
roll
loope
fiadds
push
and
aaa
pop
xor
jns
or
xchg
xchg
je
scas
cmp
add
fdivrs
sbb
test
adc
and
fwait
enter
xor
jnp
mov
aad
jnp
bound
add
out
dec
outsl
mov
inc
aas
inc
and
add
xchg
roll
test
xor
add
movsl
or
inc
inc
cmp
mov
div
adc
pop
repnz
fsubs
sbb
pop
inc
fdivp
or
push
flds
hlt
mov
shrl
sbb
cmp
loopne
pop
ja
sub
rcll
pop
add
xchg
cwtl
mov
sub
mov
dec
add
mov
jle
push
adc
jp
sti
adc
jno
or
inc
jno
jo
fwait
inc
in
cwtl
pop
or
pop
add
cmpsl
pop
add
fistl
clc
stc
jne
loop
test
pop
mov
pushf
jecxz
cmpsl
add
faddl
mov
xor
xlat
add
add
add
xlat
ret
add
add
addl
out
rcl
lods
inc
pusha
jo
iret
add
in
xchg
xchg
aas
in
jle
jp
test
nop
and
lds
pop
and
xor
pop
add
xchg
add
mov
and
lea
cli
pop
add
jae
inc
pop
sahf
dec
pop
popf
adc
rcll
icebp
bound
jmp
pusha
shrl
add
daa
sbb
movsl
sub
mov
in
jb
add
fdiv
lds
inc
add
mov
popf
dec
inc
push
add
lahf
std
sbb
and
insb
stos
mov
sbb
sbb
xchg
adc
mov
inc
add
jge,pt
mov
jo
clc
pop
and
pop
das
loope
push
adc
add
add
xor
add
js
test
inc
add
or
hlt
shll
adc
and
insb
addl
stos
xchg
add
sbb
hlt
into
cmpsb
mov
sahf
inc
push
mov
sub
xor
jmp
mov
sub
add
add
aad
add
sub
mov
push
mov
cwtl
jl
cmpsl
cli
xchg
add
cmc
xchg
add
add
inc
mov
and
pop
movsl
mov
cmpsb
adc
rolb
sti
das
inc
rcr
add
and
int3
sbb
mov
scas
movb
inc
add
js
stc
outsb
push
add
and
mov
pop
js
push
fnstcw
mov
inc
push
lahf
inc
mov
cmpsl
add
inc
pop
sbb
adc
jmp
add
es
ffree
in
dec
sbb
ret
pop
int3
sarl
insb
movsl
outsl
int3
add
cmc
sbb
les
cmp
xor
xor
fsubs
lock
testb
lods
add
out
div
push
add
mov
pop
dec
inc
pop
flds
out
jb
in
rolb
mov
add
ret
xchg
lret
dec
shlb
repnz
movsb
add
pop
or
or
add
lea
sbb
lods
popf
js
jne
xor
cmp
ss
ss
shl
mov
mov
sti
xchg
add
xorl
jle
inc
lods
call
leave
and
add
cmp
sbb
mov
add
in
roll
and
xlat
ja
dec
roll
fstp
bswap
mov
mov
add
shlb
adc
mov
push
or
fscale
pop
in
test
mov
ret
mov
add
insb
add
stos
mov
mov
leave
dec
add
cmc
dec
out
adc
xchg
in
xorl
xchg
mov
scas
push
std
add
out
iret
jns
rorb
xchg
dec
imul
add
xlat
nop
movsb
or
sub
mov
out
jo
adc
fnstsw
pushf
push
sub
or
jmp
testb
repnz
dec
cmp
gs
orb
pusha
out
ljmp
inc
lret
icebp
lods
imul
popa
mov
add
cmp
xchg
pushf
push
xchg
jne
cwtl
aad
hlt
inc
add
shrb
inc
ret
sbb
cmp
and
fnstsw
jno
cmp
addl
mov
add
data16
int3
xor
jns
xor
negb
dec
jno
add
add
push
pop
or
push
jmp
xor
insl
es
movsb
push
mov
bound
pop
sub
lock
mov
sbb
enter
add
dec
fnstsw
jecxz
cmp
xchg
and
js
inc
xor
es
add
dec
dec
add
scas
add
xchg
add
adcl
repz
add
lcall
push
je
xor
call
test
add
jge
inc
adc
movsb
dec
lea
jge
dec
ljmp
mov
imull
push
add
add
xchg
push
jnp
pushf
jmp
adc
adc
aaa
adc
mov
add
js
and
enter
mov
addb
out
add
and
sbbl
dec
cmp
addb
mov
mov
ficoms
insb
mov
add
out
xchg
scas
add
jmp
sub
pushf
lock
xchg
data16
cltd
push
add
mov
lds
jno
pop
sbb
push
faddl
dec
insl
xchg
call
push
push
add
hlt
popa
adc
stos
rcrl
mov
push
and
cmp
mov
jnp
xchg
popa
xchg
imul
pop
testb
rclb
cmp
mov
cmp
testb
push
dec
xchg
mov
mov
insl
mov
push
imul
xor
ja
sbb
mov
lea
lea
cmp
or
addb
clc
enter
mov
jmp
cli
xor
xlat
and
add
mov
adc
pop
shrb
sub
clc
inc
std
scas
out
lret
int
add
sub
push
add
mov
xor
add
sbb
popa
mov
lret
xchg
movsb
add
adc
add
add
pop
xchg
push
mov
cmpsl
add
mov
in
outsb
in
insl
mov
lret
inc
repz
test
add
pop
insl
xchg
pop
add
lahf
sti
xchg
dec
add
and
jmp
mov
add
popa
call
movsb
enter
or
jle
add
sub
add
pushf
xchg
lods
in
stc
out
in
xorl
repnz
xchg
dec
nop
add
shrb
out
mov
movsb
fistpll
cmp
push
sub
incl
mov
adc
adc
add
xlat
ficompl
shl
sti
dec
adc
or
add
pop
and
aam
mov
outsl
stc
movsb
lods
outsb
je
xchg
aad
adc
add
pop
add
lcall
dec
push
inc
test
pop
cmp
ja
std
jbe
dec
and
sub
aaa
jecxz
lahf
add
ret
mov
mov
loopw
clc
sarl
cs
into
stos
adc
ljmp
sbb
add
and
pop
aas
lret
or
popf
add
dec
lahf
jmp
mov
insb
cmp
aad
add
das
mov
sarb
hlt
xor
push
xchg
aaa
mov
rorl
add
sbb
jl
and
aad
jo
and
faddp
stc
dec
or
dec
clc
lea
ret
mov
fidivrs
and
dec
in
mov
in
add
xchg
add
fisubrl
and
mov
add
inc
cmp
jbe
dec
rcl
cmp
outsl
bound
sbb
int
int
mov
out
insb
or
push
pushl
test
sbb
and
xchg
push
and
stos
and
inc
insl
movsl
cmp
pop
mov
inc
addr16
cmc
and
mov
cmp
xor
mov
in
incb
pop
dec
cltd
mov
add
inc
test
loope
jle
dec
and
add
xor
jbe
cmp
dec
push
xchg
bsr
dec
in
jp
add
lahf
stos
cmpl
push
add
imul
add
add
ja
aaa
jne
sub
inc
jmp
cwtl
xchg
jo
xor
arpl
cmp
jp
in
mov
add
mov
movsl
adc
mov
jecxz
mov
int
stos
or
add
push
add
xchg
pusha
lret
test
test
lret
add
stos
add
aaa
mov
icebp
lret
sti
add
xor
cmp
mov
hlt
jae
jae
dec
sti
ret
pop
stos
inc
mov
rcl
pop
aad
dec
add
shrb
into
push
in
mov
fcmovnbe
add
repz
xchg
xor
mov
rorb
sti
je
inc
cmpsb
std
xor
dec
xor
lret
movb
cli
add
inc
fs
add
shlb
mov
add
jae
ja
faddl
xchg
mov
mov
mov
out
xlat
inc
pop
jecxz
shrl
push
sbb
negb
imul
cmp
lcall
or
outsb
push
push
pop
mov
lcall
mov
mov
add
in
int3
mov
push
incl
mov
fcmovnbe
xchg
out
shl
sbb
lock
ljmp
jne
jp
clc
repz
add
mov
mov
xor
jl
xchg
mov
add
test
pavgw
add
add
mov
ret
call
loop
add
aad
leave
dec
rolb
dec
in
pop
xchg
test
dec
je,pt
lret
mov
add
mov
cmp
add
add
mov
mov
mov
cmp
cmp
dec
and
movsb
jecxz
xchg
or
mov
add
lret
xchg
hlt
testb
sub
test
mov
dec
mov
div
call
add
sub
jl
dec
add
cli
repz
or
push
lds
pushf
push
inc
aaa
and
xor
cmp
cmp
add
lret
xchg
pushl
sub
sub
add
push
pop
cli
test
add
aam
or
jecxz
test
sub
xlat
xchg
mov
mov
ret
stos
xlat
xor
jno
int
pop
dec
pop
lods
jnp
add
adc
shlb
add
and
faddl
inc
adc
add
add
cvtpi2ps
xchg
mov
inc
pop
test
pop
mov
push
mov
push
or
pushf
les
add
dec
mov
das
lret
popf
lret
push
out
std
pop
sbb
fistpl
adc
xor
dec
mov
int3
ss
mov
push
adc
adc
fsubl
mov
add
add
les
add
mov
cmp
mov
cmpl
add
inc
cmp
fistl
cltd
in
adc
add
repnz
and
add
pop
hlt
xchg
mov
int
add
push
cli
sti
leave
sbb
rolb
mov
push
cmp
cmp
add
popl
push
push
add
and
lock
in
mov
negb
adc
add
add
cmpl
loop
mov
incb
mov
mov
or
or
rorl
sbb
int3
test
xchg
xor
inc
int
test
das
repz
sub
aad
pop
ds
leave
xchg
adc
xchg
test
fistpll
fldl
add
add
nop
xchg
hlt
mov
cmpsb
add
or
data16
mov
dec
cltd
imul
inc
inc
or
add
enter
ficompl
mov
pop
test
add
add
aam
adc
add
adc
insl
push
das
add
iret
and
testl
int3
push
loopne
stc
push
add
add
jp
cmp
jbe
pop
pop
icebp
jecxz
sbb
jb
ficompl
push
add
inc
xchg
add
js
mov
enterw
stos
shll
lret
push
add
push
popa
and
cmp
pop
dec
and
sbb
arpl
popa
add
test
lods
mov
daa
mov
jae
and
add
imul
enter
add
add
cmp
pop
mov
sbb
xlat
dec
mov
adc
sbb
jmp
fsubr
push
inc
fwait
adc
fidivl
cmovp
cmpsl
inc
enter
mov
dec
sbb
mov
les
adc
mov
fadds
lea
add
icebp
cmp
ret
outsl
jae
xchg
lods
xchg
xchg
bound
sbb
dec
adc
and
xor
out
dec
rolb
aad
jl
pushw
or
sub
add
mov
xor
cmp
pop
rcl
push
fstpl
scas
test
mov
ret
push
popa
fisubs
test
and
xor
mov
jo
sub
cltd
ss
mulb
inc
mov
add
push
xor
xchg
icebp
xchg
add
add
rolb
clc
out
inc
xor
fstpt
xor
shlb
or
sbb
ljmp
popf
in
in
in
test
je
or
inc
test
xor
inc
into
fcoms
subl
stos
iret
dec
xor
push
cmc
mov
add
pop
inc
decb
shll
mov
addl
sahf
mov
call
add
in
jo
cmp
add
push
add
jp
xchg
jl
les
ljmp
jp
dec
fs
or
inc
pop
setno
dec
jae
add
mov
unpckhps
shrl
into
mov
xor
popl
lret
sub
cltd
mov
ja
pop
add
add
cmp
mov
pop
mov
scas
adc
loopne
aad
sub
imul
sbb
stos
mov
sbb
mov
lcall
sub
pop
inc
push
inc
jge
jmp
sahf
mov
adc
fisttps
fnstenv
sbb
mov
dec
addr16
or
dec
add
aam
mov
mov
clc
add
push
dec
mov
or
ss
add
insb
adc
je
roll
or
dec
aam
xchg
jge
movsb
jae
pop
loopne
sub
jl
adc
aas
adc
jp
inc
inc
aad
xor
data16
outsl
add
imul
imul
inc
push
mov
mov
or
xchg
push
mov
add
mov
push
lods
add
inc
fadds
dec
dec
adc
push
add
int
std
xor
add
push
or
cwtl
push
ja
lods
xchg
sbb
hlt
lods
and
lock
int3
insl
cs
sbb
xchg
jmp
mov
add
add
jle
jl
lea
and
cs
jnp
inc
xor
jl
insb
and
push
jb
inc
and
lock
add
mov
mov
dec
lret
or
dec
push
jnp
mov
shll
mov
sti
inc
add
sahf
cltd
ljmp
pop
mov
mov
inc
into
jg
add
out
sbb
test
mov
fadds
ret
jmp
and
xchg
adc
sarl
sub
mov
mov
repz
push
cmc
jl
add
outsb
or
int3
loope
cmc
add
jae
jbe
inc
cmpl
outsb
mov
sub
lret
rcrb
add
pop
arpl
add
aam
or
or
imul
mov
stc
jmp
aam
lret
stos
add
pop
and
inc
add
out
add
in
add
pop
adc
dec
testb
inc
mov
or
pop
inc
add
out
adc
les
dec
std
out
add
push
adc
add
sub
outsb
mov
mov
mov
add
test
shrl
cli
add
in
sbb
rolb
cmp
and
incb
adc
sub
lret
inc
add
jge
roll
inc
mov
add
gs
adc
aad
push
imul
lods
and
inc
add
lcall
push
loope
add
pop
ja
gs
pusha
jne
add
movb
dec
lret
push
mov
in
dec
daa
mov
jb
add
stc
add
shrb
aaa
sub
loope
int
add
popf
dec
jl
outsb
dec
ljmp
in
pop
mov
into
jp
add
les
push
cmc
jnp
add
test
enter
leave
test
pop
add
rorl
loopne
pop
sbb
aam
xchg
add
aam
fstps
xchg
xchg
xlat
hlt
xor
sbb
xchg
dec
pop
and
sub
cltd
xor
dec
loope
sti
roll
pop
es
inc
movsb
add
pushf
xor
xor
cltd
xchg
xor
icebp
jecxz
add
movq
jle
cmpsb
push
and
cmp
mov
loopne,pt
ss
adcb
lock
mov
outsb
mov
cs
out
mov
fisttps
add
mov
hlt
sub
dec
popf
xchg
or
testb
cmp
push
mov
pop
jle
xor
out
insl
loopne
ljmp
and
rorl
jmp
mov
int
sbb
add
insb
enter
inc
js
outsb
sbbl
push
xor
insl
bound
cwtl
or
jmp
xor
adc
sub
xchg
add
add
mov
mov
add
iret
pop
xchg
add
or
add
mov
outsl
cmp
outsl
dec
mov
pop
cmp
add
jg
ss
add
rcr
pop
fidivs
or
in
add
std
mov
shll
inc
push
das
test
and
and
scas
sub
jnp
mov
add
add
sbb
push
outsl
add
add
xchg
cmc
lahf
sub
jae
push
shll
lret
int
inc
add
add
dec
lcall
pop
pop
std
lea
push
scas
int
adc
fiadds
out
push
sub
out
rclb
push
fsubrs
xchg
gs
push
mov
add
add
cwtl
int
dec
inc
push
addr16
sbb
ss
dec
nop
add
data16
push
enter
fsubrs
sahf
add
sbb
dec
or
and
inc
xlat
and
je
mov
jecxz
add
xor
adc
xor
xchg
or
add
lods
stc
lret
sbb
dec
push
adc
rcrl
add
or
jno
add
and
mov
into
inc
scas
pop
imul
cmpsl
sbb
push
xorb
je
into
cli
js
rorl
pop
ja
or
dec
or
add
add
jle
inc
mov
shll
dec
add
addl
sbb
test
pushf
in
sarb
cltd
add
rcr
out
subl
ret
and
and
and
push
sbb
sti
sub
xor
pop
xchg
add
std
pop
imul
mov
pop
push
mov
sbb
or
ds
pop
popf
add
sub
pop
stc
add
fidivs
sbb
data16
xor
dec
jmp
sbb
and
jg
shlb
jge
ljmp
add
adc
adc
jbe
xchg
into
add
movsl
add
add
jecxz
out
mov
or
lods
and
ret
mov
std
xor
mov
insb
fimull
mov
sub
mov
int
inc
outsb
xchg
ljmp
cmp
sar
in
add
jae
pop
imul
jl
push
int3
pushf
add
add
dec
in
cmc
mov
test
sbb
inc
or
or
adc
je
xlat
dec
jne
ljmp
jns
imul
mov
sbb
adc
scas
bound
test
hlt
pop
mov
fnstenv
test
and
cld
add
cmp
dec
mov
push
inc
mov
fmuls
push
hlt
mov
call
adc
int3
or
add
test
mov
add
insl
sbb
and
mov
xchg
lock
sbb
add
adcl
lods
dec
out
pop
add
add
dec
mov
mov
lcall
cmp
cmp
push
je
out
push
jnp
shl
adc
stc
mov
xor
add
out
mov
add
add
std
popa
out
pop
add
cwtl
cmp
or
pop
mov
mov
shll
jnp
push
xchg
call
test
push
mov
add
add
lods
xchg
dec
add
add
mov
rorb
int3
mov
fidivl
cmpsl
mov
fwait
adc
fcmovu
cmpsb
jne
mov
add
fsubs
cld
repz
lods
add
inc
jae
les
cmp
loope
push
or
add
lock
inc
in
cmovge
lahf
ret
add
xchg
add
cltd
loop
in
mov
je
int
out
inc
push
add
aaa
dec
pushf
js
shr
mov
popf
aad
add
or
cmp
mov
pop
adc
push
push
fsubrs
mov
fildl
add
fbld
add
mov
xor
addr16
mov
add
cs
add
inc
inc
sbb
mov
data16
xor
sub
jl
aad
ret
pmaxub
jge
push
jmp
inc
flds
push
add
cmpsl
ss
les
cwtl
pop
in
bound
or
fmull
add
sbb
roll
pop
addr16
mov
cmpsl
xchg
sub
xchg
jne
dec
mov
test
cs
push
lahf
addr16
pop
xor
loop
add
loope
lock
call
add
jg
cmp
add
add
pop
ret
add
xchg
fstpt
mov
aas
ljmp
sbb
mov
add
iret
leave
lea
adc
mov
data16
mov
sub
add
jl
mov
orl
popa
imul
push
mov
in
aas
dec
add
sbb
fwait
add
fdivrs
lret
sub
cmp
das
popa
add
lock
and
jns
cld
int
enter
mov
cmpsl
push
adc
lea
add
test
mov
hlt
add
jp
js
les
test
loope
stc
add
add
or
jl
cli
xor
mov
rolb
sub
in
sbb
jae
or
jb
fistpll
add
sub
mov
shrb
filds
imul
popf
cwtl
xchg
or
pop
mov
cli
add
in
stos
ret
add
add
je
jl
es
leave
and
sbb
jmp
cmp
ret
lods
add
imulb
clc
fsubr
dec
mov
add
pop
jb
pop
clc
ds
and
stos
push
and
js
pop
mov
test
or
pushf
in
add
stos
hlt
add
mov
nop
dec
and
lods
daa
jl
fsubl
xchg
xchg
add
xor
jg
inc
xlat
fwait
pop
add
rorb
nop
or
adc
jb
sbbb
in
adc
sbbb
inc
adcb
leave
inc
push
push
icebp
add
cmp
test
mov
flds
je
std
mov
xor
inc
mov
repz
add
clc
dec
add
test
jne
xor
pop
and
js
ja
outsl
jge
call
bswap
std
add
xor
and
jecxz
andl
in
sub
add
fmul
imul
adc
in
int3
mov
das
or
add
scas
fwait
or
xchg
cltd
add
test
movsb
adc
add
push
xor
jecxz
xchg
ds
add
jge
pop
mov
hlt
cli
mov
inc
call
cmp
ja
call
add
sbb
cmp
mov
cmc
and
cmp
loopne
fadds
cld
es
mov
repz
orb
sbb
cld
jecxz
cmp
inc
pop
add
call
mov
push
dec
or
les
je
pop
push
nop
pop
add
pop
push
out
mov
je
push
xor
xchg
lahf
pop
sub
loop
pop
pop
loopne
pop
out
popa
icebp
pop
fiaddl
lds
in
pushf
sbb
xor
cltd
insl
lahf
and
jge
and
leave
xchg
sbb
in
incb
mov
mov
cmp
cli
jp
add
scas
push
add
fwait
shll
dec
clc
push
inc
fildll
notb
add
pusha
ljmp
mov
mov
aas
push
sldt
xor
push
add
pop
add
add
shrb
das
sub
jle
mov
push
xlat
pop
rcll
test
icebp
pop
rolb
jecxz
mov
ss
xchg
in
out
mov
daa
incl
lea
stc
stos
and
flds
mov
test
hlt
add
jnp
cwtl
call
lods
outsb
add
loop
cltd
inc
add
push
roll
leave
mov
cmp
ss
mov
idivb
add
movsb
cmpb
and
gs
add
add
push
xor
jo
fistl
mov
imul
inc
test
js
fisttps
pop
adc
add
add
and
loopne
rolb
pop
push
aam
das
lods
hlt
je
imul
add
mov
sbb
dec
add
or
ljmp
xor
add
cmpsl
stc
push
pop
cmp
add
jae
mov
add
or
add
inc
mov
inc
fidivl
rolb
mov
cmc
nop
fsubrl
out
add
xchg
sbb
cmp
dec
add
add
ds
pop
cli
sbb
and
dec
hlt
jbe
lock
push
or
push
push
xlat
lds
flds
imul
movsl
mov
lods
outsl
push
cmp
sub
add
pushl
js
pop
sub
pusha
repnz
add
mov
jge
out
lahf
xchg
add
push
je
mov
jmp
xor
movsb
inc
mov
faddl
cwtl
push
pop
arpl
push
add
mov
or
dec
add
aaa
mov
add
pop
dec
push
dec
dec
sarl
rorl
push
pop
inc
dec
sti
mov
cli
popf
outsl
push
add
in
aaa
xchg
mov
sbb
orb
lods
jl
add
jbe
stc
xchg
or
or
nop
xchg
jo
add
inc
pop
filds
xchg
and
push
dec
sbb
scas
and
jns
add
loopne
push
out
push
mov
xor
add
inc
add
mov
jnp
mov
cmp
add
add
fidivrs
add
cmp
ret
add
add
popa
add
cmp
daa
int
in
add
pop
int3
push
xchg
xlat
push
and
pop
cmp
add
adc
fistps
mov
sbb
das
add
xchg
mov
xchg
in
js
pop
lcall
add
add
fidivrs
xor
outsb
inc
push
sbb
dec
mov
nop
mov
das
inc
out
mov
jmp
mov
out
test
xchg
pop
pop
fs
mov
sbb
imul
add
orl
inc
test
pop
leave
or
and
call
dec
mov
es
pop
imul
add
and
cmp
cmp
stc
mov
sub
push
mov
xchg
mov
xchg
js
shr
mov
loope
add
xor
sub
ja
adc
nop
add
jp
sub
push
pop
insb
xlat
repz
add
dec
lret
fs
ljmp
mov
mull
out
les
mov
pop
inc
ljmp
jge
in
mov
xchg
or
add
fidivrs
popf
movsl
add
sub
inc
or
popa
jle
cmp
add
mov
add
add
and
test
fsubrp
into
mov
jno
add
stc
add
add
push
nop
mov
mov
xor
xchg
mov
lea
xor
sbb
cmpsb
mov
add
mov
stos
jg
xchg
mov
shlb
add
add
add
mov
push
dec
sub
testb
add
test
push
ret
jns
mov
add
fcoms
pop
rolb
jge
aaa
loopne
loopne
add
or
sub
add
ja
dec
shr
adc
mov
jle
sub
out
xor
popa
push
ret
ret
or
add
mov
ret
add
xor
add
mov
inc
imul
les
push
cmp
ret
fstp
scas
sbb
pop
and
jae
aas
pop
add
popf
js
test
icebp
adc
out
or
sahf
jecxz
sbbl
int
cmp
add
sbb
cmp
adc
mov
xor
int3
cld
push
push
inc
in
cld
cmpsb
out
or
cli
mov
insl
jmp
outsb
mov
test
cmpb
push
scas
stos
mov
mov
push
iret
scas
popf
jbe
add
aad
jo
icebp
in
lds
gs
cmp
and
adc
es
add
add
shll
add
xchg
and
daa
imul
xchg
or
pop
cmp
xchg
aas
pop
cmp
ss
and
pop
add
loopne
imul
sbb
dec
pushl
push
inc
jge
test
cs
mov
sarl
sbb
pop
insl
mov
str
pop
std
arpl
je
mov
pushf
pop
push
mov
cmp
ret
add
fidivl
and
add
fstl
jmp
jno
imul
jl
mov
add
test
daa
lret
add
sbb
mov
adc
xor
iret
or
test
jae
mov
push
adc
xchg
push
jecxz
shll
pusha
xchg
into
add
shl
decb
pop
and
push
mov
ret
rcl
scas
movl
fstl
mov
dec
sbb
pop
mov
test
xor
pop
jmp
aas
or
cmp
xchg
gs
adc
push
in
add
add
out
repnz
add
pop
fcoml
mov
dec
les
mov
push
pop
sbb
fdivrs
sbb
push
lods
pop
dec
dec
or
push
sub
add
pop
ret
lds
rolb
das
cli
fs
jp
jecxz
add
push
inc
push
sub
push
push
jae
pop
jbe
add
sub
jb
sbb
adc
jbe
lret
mov
sub
add
psllw
jge
icebp
and
movb
nop
jae
dec
add
cwtl
dec
jb
add
jae
mov
inc
jno
mov
fnstsw
icebp
fwait
scas
dec
push
xor
add
add
mov
cs
jmp
mov
aam
and
or
or
dec
sahf
pop
out
mov
mov
dec
push
add
xchg
test
das
mov
fldl
dec
jb
lcall
inc
sbb
dec
adc
inc
mov
frstor
js
mov
fsubs
jecxz
jne
add
sub
jb
lcall
pop
out
push
cmp
and
insb
adc
mov
or
mov
jns
sub
test
push
jb
xor
jns
cmp
rolb
mov
movsb
test
je
movsl
jne
pause
add
rcr
push
mov
iret
xchg
add
push
jns
xchg
inc
add
movl
push
add
mov
fistps
iret
movsl
in
add
mov
add
fidivl
pop
push
adc
add
popf
mov
jmp
dec
jno
cmp
je
mov
dec
and
lods
xchg
and
scas
sub
dec
jmp
mov
add
mov
dec
bound
add
cmp
hlt
mov
add
and
gs
or
movsl
xchg
lcall
dec
inc
fdivrl
les
jbe
add
das
fwait
setp
add
aam
cltd
add
rorl
out
test
clc
adc
and
xchg
cltd
les
add
mov
mov
xchg
jnp
add
cmpsl
cmp
add
add
add
out
out
mov
enter
cmp
xchg
js
lods
add
push
jg
ds
daa
cmc
subl
pop
add
mov
xchg
dec
add
add
in
lahf
scas
lods
xor
mov
xor
or
adc
jnp
sbb
dec
loop
add
add
loop
xchg
jp
inc
add
mov
cmp
pop
xor
push
sar
out
adc
cli
pop
insb
aam
jno
insb
add
jns
mov
mov
lret
add
inc
or
sar
or
test
push
push
dec
and
test
mov
daa
xlat
rcrl
out
cmpsl
imul
clc
add
fiaddl
shlb
add
xor
stc
jnp
xchg
jne
and
sti
fsubp
cmpsl
stc
add
sbb
add
add
movsl
pop
push
add
orb
and
cmpsb
cmp
push
icebp
inc
js
or
push
mov
jns
cld
jnp
sbb
xor
imul
fidivrs
mov
addr16
je
mov
ss
dec
add
cs
les
mov
inc
int3
popf
cmpsb
add
mov
scas
in
out
dec
and
add
sub
fnsave
loope
cmp
leave
add
jp
lods
add
mov
add
add
movsl
test
mov
jecxz
pop
add
data16
mov
fsubl
lcall
mov
mov
xor
jge
cwtl
push
pop
ljmp
cmc
pop
stos
in
xor
add
imul
addr16
pop
mov
sub
mov
push
adc
adc
or
insb
jmp
out
mov
cld
sbb
sbb
ja
popa
lock
sbb
pop
add
inc
xlat
add
add
push
dec
popa
lahf
mov
add
cli
sbb
xor
pop
icebp
dec
inc
mov
mov
ja
dec
jb
xchg
or
push
xchg
out
jns
add
add
add
daa
push
cmp
mov
fwait
push
decb
push
out
mov
add
push
sbb
decb
shl
aaa
imull
mov
xchg
nop
js
pop
pop
loopne
jge
fdivl
inc
sub
and
ja
jmp
mov
test
lcall
cmp
iret
lret
pop
and
pop
sub
jg
or
cmp
cmp
mov
add
call
inc
int
movsl
and
cmpsb
lods
clc
push
and
pusha
aad
mov
mov
insl
dec
out
pop
daa
ja
in
cmp
pop
add
stc
xor
int3
sub
loopne
mov
loop
ja
clc
insl
les
rorb
arpl
add
jge
add
and
in
pop
jae
sub
cmp
pop
clc
gs
push
adc
xor
enter
cmp
orb
add
xchg
jmp
push
mov
je
dec
jp
inc
fidivs
mov
xchg
mov
jbe
add
subb
push
and
add
mov
jge
add
xor
jg
je
push
xchg
add
mov
add
ss
jmp
inc
sub
loop
add
add
pop
push
int3
fcmovu
inc
push
sub
addr16
xchg
clc
sbb
xchg
or
push
psubw
jge
mov
add
jge
push
pop
cmc
dec
mov
das
pop
stc
pop
pop
lea
jbe
out
rol
lea
iret
or
adcb
inc
das
lea
push
jns
jg
shrb
pop
mov
jbe
out
add
cwtl
outsb
sti
out
sub
xor
dec
mov
jp
lcall
add
call
dec
push
add
ja
scas
jmp
and
sbb
inc
lret
cmp
es
sbb
fdivl
fs
add
pop
add
insb
jo
jno
cmpsl
add
mov
push
add
lods
add
int
inc
inc
pushf
cmp
add
dec
sub
bound
out
int3
gs
nop
cmp
add
push
mov
shrb
add
jge
add
jge
loope
in
add
into
or
add
mov
fs
add
adc
add
roll
xor
in
cmpsl
pop
mov
adc
mov
in
sbb
int
nop
add
mov
pop
xor
cmp
dec
sub
sbb
lret
add
cmp
add
mov
add
xchg
cwtl
aam
sti
stc
aas
aam
adc
hlt
and
add
add
mov
addr16
add
inc
mov
adc
xchg
idivb
ss
pop
je
cmpsl
add
push
testb
xchg
push
add
jmp
cwtl
add
addb
movsl
cmp
fildll
push
leave
sti
filds
pop
push
cmp
push
inc
outsb
sub
jbe
push
loop
xchg
mov
xchg
fcmovbe
push
jno
test
lret
aam
dec
jb
pusha
mov
movsl
sub
or
cld
in
or
stos
bound
cltd
iret
cs
inc
add
sub
sti
add
lret
add
mov
outsl
imul
lea
and
mov
inc
add
loopne
jg
cmp
push
mov
add
xchg
pop
and
inc
and
test
pop
dec
or
cmp
xchg
dec
adc
sbb
cmpsb
iret
sbb
std
xor
aad
les
mov
aam
mov
adc
mov
call
or
add
sbb
testb
and
add
pop
dec
sbb
mov
push
push
inc
pop
dec
jle
ljmp
std
inc
mov
add
add
hlt
je
cwtl
aad
mov
dec
lock
inc
lock
sbb
popf
cwtl
cmp
add
xor
cmp
jno
dec
xor
pop
or
ljmp
lock
jae
add
test
stos
cmp
mov
sarl
enter
sahf
mov
or
xchg
mov
cli
pop
jbe
or
ljmp
inc
sbb
shrb
sub
rol
inc
add
arpl
push
mov
add
sbb
xor
pop
dec
jb
ljmpw
push
cmp
sbb
add
fucomp
lds
lahf
add
add
add
mov
out
mov
popl
jbe
inc
pop
je
roll
stos
cs
mov
sarb
iret
add
fs
xor
movsl
scas
push
stos
adc
pop
and
push
add
mov
lcall
hlt
ret
xchg
jg
xchg
sub
ljmp
xor
xlat
xor
mov
js
bound
je
mov
stos
aam
vandnpd
lods
and
iret
ret
out
mov
inc
mov
nop
std
jae
cli
aaa
pop
bound
jecxz,pt
out
xchg
jmp
rcrb
pushf
pop
sub
das
add
jmp
aad
int3
jmp
dec
adc
mov
out
lret
ss
call
cmc
mov
int
mov
lods
sahf
jl
aam
out
fdivrl
outsb
or
std
out
mov
push
pop
xchg
pop
pop
push
xor
jb
cltd
mov
scas
push
add
jbe
adc
and
add
inc
shrb
adc
jle
insl
js
test
add
or
add
or
jp
test
cmp
test
or
popa
popf
add
add
sarl
insb
pop
inc
jmp
ret
addr16
fisubrs
mulb
outsb
add
pop
sub
imul
xchg
inc
ja
adc
add
sbb
add
adc
lds
rorl
adc
jmp
pusha
add
movsb
add
dec
xlat
adc
into
fs
out
vmovq
sub
add
jl
mov
lock
xor
pop
xor
jmp
gs
je
testl
sbb
ja
test
pop
or
pop
mov
rolb
add
push
clc
add
inc
cmp
adcb
add
inc
mov
call
cmpsb
in
mov
lret
subb
add
das
add
sub
lods
addl
xor
cltd
add
push
test
dec
mov
stos
fcomps
outsb
add
jp
arpl
add
adc
aam
jle
and
lahf
add
jl
pop
fs
and
fimull
ds
loop
jbe
cmpsb
lds
ja
pop
insb
mov
adc
std
dec
fistl
cmpsb
cmc
lock
adc
leave
bound
and
in
mov
cmpl
cld
jge
sbb
lret
add
xor
lods
xchg
jae
push
int3
add
add
add
pop
jae
inc
sub
and
mov
sub
cmp
mov
dec
add
add
add
out
inc
sbb
repz
push
sbb
mov
out
or
push
repz
sbb
lcall
jge
psllq
dec
insl
xchg
push
mov
add
std
lea
daa
aas
jns
add
fisubl
bound
pusha
imul
int3
adc
push
lcall
or
pop
mov
je
mov
push
xchg
les
bound
inc
cltd
sub
add
add
dec
mov
loope
mov
xchg
lret
dec
call
dec
inc
add
or
fwait
lds
add
popa
shrl
cmpsb
sub
sti
call
jae
adc
sub
xor
in
int3
add
mull
lock
push
mov
or
les
xlat
jne
jae
shlb
icebp
xor
in
xor
add
push
add
into
pop
lret
and
sub
push
cwtl
or
dec
nop
mov
pop
add
pop
pusha
add
fwait
nop
idivb
test
inc
add
hlt
add
xor
addr16
ret
add
mov
and
outsl
add
lock
xor
xor
add
inc
add
stc
sahf
mov
push
sub
inc
test
ffree
mov
add
xlat
sub
or
mov
mov
add
aad
mov
flds
enter
push
add
adc
sbb
xlat
push
mov
icebp
and
fdivrl
insl
adc
mov
std
dec
cmpl
js
pop
fisttpl
adc
imul
xor
imul
cmp
hlt
dec
stos
daa
dec
pop
sti
pusha
arpl
pop
sub
add
add
and
negl
lock
and
push
mov
add
add
add
notl
loope
dec
cmp
mov
mov
mov
adc
xorb
add
repnz
pop
addr16
pop
add
sub
sbb
inc
add
and
jmp
cmpsb
xchg
das
scas
push
dec
and
ret
push
data16
jne
cmp
insl
imul
add
add
add
add
inc
cmp
add
lret
fs
cli
aas
ljmp
orl
lcall
adc
repnz
and
pop
jbe
xor
add
xor
xor
push
pusha
pushl
movsl
out
mov
add
pop
aaa
add
jl
fsubrs
repz
xorl
and
dec
data16
dec
cltd
fchs
loopne
or
in
push
add
fistpl
out
add
add
mov
or
mov
dec
jle
xchg
roll
lret
sti
shlb
xchg
add
enter
or
movsb
decb
add
jmp
adcl
add
push
add
sbb
xchg
in
inc
and
cmp
jo
test
bound
jb
bound
loopne
je
xchg
scas
dec
pop
sti
mov
in
add
lahf
test
xchg
add
jle
add
pushf
cmp
pop
in
stos
mov
cs
dec
ret
xchg
notl
addl
fcmovnb
daa
pop
mov
hlt
enter
fidivs
jne
add
lret
add
sbb
jge
mov
xor
mov
mov
sub
add
std
pop
out
pop
xor
push
mov
add
out
popf
jnp
jl
add
sbb
push
push
lret
shll
add
jne
jl
dec
jmp
movsl
sbb
jb
mov
push
mov
aad
fdivrs
add
mov
add
jb
test
out
mov
cmp
pushf
fbstp
add
add
hlt
movsl
add
cmp
aad
push
in
ret
sub
or
loope
nopl
sbb
loope
dec
movsl
not
and
fadd
jns
dec
inc
lcall
add
mov
std
sti
adcl
andb
out
and
pop
cli
mov
adc
pop
mov
and
leave
enter
bound
add
lret
sbb
mov
xor
loope
add
rcrl
xor
add
push
and
lods
jp
and
xchg
loop
add
sub
cwtl
add
adc
std
ss
xlat
ret
and
shlb
call
mov
pop
xchg
int
cmp
mov
jae
dec
add
add
add
xor
scas
ror
add
orl
les
adc
dec
adc
or
jo
adc
add
xchg
jbe
jle
sbb
lea
add
cmp
push
mov
add
push
cmp
les
add
xor
sbb
cmp
testb
js
cmpsb
xchg
mov
js,pt
loopne
jge
xchg
push
and
xchg
pusha
add
mov
ud2
push
xor
add
stos
dec
ficoms
cltd
cltd
push
add
jge
add
pop
push
std
mov
or
adc
ret
ds
xchg
insb
aaa
cmp
add
pop
hlt
mov
mov
sub
inc
fnstcw
fwait
pushf
ret
or
and
outsb
xchg
pop
int3
ret
add
add
dec
stc
push
or
loop
jno
xor
add
pop
cmp
add
test
and
cmp
add
adc
lahf
adc
inc
add
adc
out
lret
iret
lret
adc
ret
fisttpl
out
out
xorl
add
adc
in
dec
add
add
pop
adc
or
dec
dec
cwtl
xor
cmpsb
or
in
icebp
mov
rcrl
xchg
cmp
popf
jmp
jge
jns
cmp
sub
adc
mov
cltd
fsubr
mov
add
add
jnp
inc
add
pusha
push
orl
xchg
push
cltd
xchg
mov
lret
xor
add
testb
mov
jno
add
cld
or
add
inc
mov
push
cmp
js
xor
aad
pop
les
sbb
pop
dec
jmp
mov
lcall
loope
mov
mov
or
loopne
add
cs
mov
and
in
xor
and
add
mov
adc
inc
add
sub
sbb
cwtl
mov
add
mov
mov
cmp
add
pop
test
cli
push
add
xchg
insb
mov
gs
inc
nop
and
fwait
mov
or
sbb
cli
sbb
sarl
iret
add
mov
add
mov
mov
shrl
popf
sbb
mov
pop
pop
dec
les
shl
stos
cmp
movsb
stos
les
fldcw
es
sbb
loopne
in
add
xchg
sti
add
mov
jne
cwtl
mov
and
arpl
fsts
mov
xchg
mov
add
pop
jae
aaa
mov
cltd
jl
add
push
add
addl
shlb
mov
movsb
rclb
fidivl
imul
mov
add
mov
rolw
movsl
das
fcompl
sub
fwait
mov
cmp
dec
mov
jge
adc
test
adc
jo
int
vpsubq
cld
ss
pusha
out
sbb
cvtps2pd
jl
jecxz
pop
lret
adcl
pop
iret
ret
push
jmp
pop
mov
mov
and
add
add
cmp
or
jo
xchg
in
pop
scas
add
lods
pop
and
pop
out
lcall
add
dec
roll
push
fstps
dec
adc
mov
add
hlt
shlb
mov
xchg
sbb
xchg
sahf
xchg
pop
fstps
sub
push
mov
lcall
jge
addr16
add
jmp
inc
mov
mov
add
cmp
popf
les
std
push
sbbl
add
and
cmovnp
lds
int3
andps
cmp
sub
adc
and
push
cld
mov
or
adc
notl
ret
jge
push
dec
fildl
jnp
daa
add
jp
push
mov
inc
inc
fldcw
push
icebp
popa
jl
cs
mov
push
add
add
xchg
pusha
test
pop
dec
es
aas
cmc
push
movsl
jp
add
adc
xchg
dec
cmp
testb
pop
or
adcl
inc
ljmp
add
idivl
add
outsl
xor
adc
movl
in
pusha
jb
mov
clc
add
add
roll
shl
or
jecxz
jle
or
mov
nop
and
mov
lds
insb
adcb
cmp
add
lret
xor
add
dec
sub
push
add
add
fs
cmpsl
mov
std
or
add
mov
sub
fcom
xor
ljmp
push
sbb
push
addr16
addr16
ficompl
and
cmpsb
xor
lret
adc
imul
push
jno
push
cmp
mov
add
aaa
nop
mov
inc
jns
push
sub
lds
add
sti
daa
jecxz
dec
add
cmp
jge
pop
add
insb
gs
add
mov
cmp
mov
clc
add
or
dec
xchg
arpl
add
aaa
dec
xchg
pop
pop
rcrb
cmp
or
into
add
jecxz
pop
repnz
fbld
pop
paddsb
sahf
inc
test
in
cwtl
sbb
insl
push
add
xchg
sbb
dec
add
sarb
outsb
addr16
loopne
fwait
adc
pop
inc
inc
sahf
add
add
adc
add
dec
testb
idivl
add
add
lret
inc
dec
lods
int3
in
add
jle
jmp
stc
mov
or
iret
push
cmpsb
xchg
fisubs
sbb
call
mov
dec
xor
jp
pop
icebp
jmp
sub
xchg
push
cmp
pop
sub
fmuls
cmpsl
outsb
add
add
mov
add
es
mov
adc
rolb
addr16
add
ret
xorl
pop
imul
mov
jg
fcomip
adc
mov
dec
cmpsb
andl
xlat
mov
cltd
jg
push
adc
or
testl
sar
xchg
add
cmp
rcl
add
add
je
add
add
add
inc
xor
rcr
pop
jle
add
xchg
adcl
and
xor
fidivs
cmp
cli
scas
daa
jno
add
xor
add
mov
ret
mov
imul
add
xchg
xor
mov
push
fbstp
popf
test
cld
insb
jl
stc
or
aam
jno
add
jo
pushf
pop
add
add
test
add
mov
add
add
sbb
test
adc
fs
data16
and
add
mov
out
sbb
add
inc
inc
jne
scas
jo
add
insl
and
jmp
add
mov
fninit
out
sbb
or
add
and
std
sbb
inc
cmp
stc
mov
inc
add
cmp
lods
int3
and
cs
testb
out
addb
cmpsb
arpl
xor
jo
adc
jb
inc
sub
sti
mov
xor
aam
jno
add
add
sbb
test
fxch
add
mov
inc
or
add
jo
add
imul
add
add
sbb
in
in
stos
add
add
mov
nop
addr16
add
add
cmpsb
mov
les
lea
cmp
or
cmc
out
add
mov
mul
add
sbb
or
jbe
mov
bound
xchg
scas
add
add
rcr
jno
mov
cltd
push
add
sub
sub
fnstsw
push
add
xchg
add
lea
sub
fs
sub
cmpsl
inc
add
mov
dec
mov
je
mov
imul
flds
inc
jl
iret
sub
add
adc
dec
add
push
push
pop
mov
add
test
sbb
out
outsl
out
lock
imul
pop
inc
stos
jo
pop
fisubs
add
add
je
xor
cwtl
test
add
add
add
data16
in
xchg
add
sbb
call
sti
sub
in
push
xchg
dec
add
dec
add
pop
add
mov
test
or
cmp
jbe
movsb
push
popa
jp
insl
dec
lret
push
sub
add
inc
rorb
sbb
fiadds
shl
add
sub
stc
mov
fcmove
or
ret
and
sub
add
mov
add
or
xor
ret
push
push
and
dec
and
mov
out
repz
test
fcom
dec
daa
dec
es
insb
lcall
jbe
popf
dec
out
out
push
jns
movsb
jno
and
int
dec
mov
add
rolb
add
sbb
es
pop
sbb
out
add
es
inc
test
xchg
add
ss
mov
imul
and
loop
cs
fisttpl
push
scas
fiaddl
jg
adc
fnstcw
add
aaa
mov
gs
add
inc
scas
std
jns
xchg
add
or
push
addl
iret
nop
call
icebp
add
push
inc
sub
jg
mov
sbb
pop
cs
mov
add
out
add
test
cmp
mov
fildll
mov
jae
inc
push
sbb
sbb
std
paddsw
xor
bound
xor
shr
lock
mov
add
call
add
out
mov
add
cmp
fisubrl
pop
setne
call
nop
shl
fwait
lds
pop
das
fwait
push
enter
jp
data16
test
mov
daa
mov
scas
out
add
inc
xchg
lcall
mov
adc
mov
jp
dec
loop
fwait
add
enter
and
xlat
lds
ja
or
and
add
add
push
mov
add
dec
add
mov
pop
jecxz
add
add
sbb
cli
push
add
cmp
inc
xor
jo
add
pop
addr16
daa
shlb
and
add
add
setp
je
inc
loopne
add
subl
jb
pop
push
mulb
sbb
repnz
and
push
add
inc
into
test
test
int
cmp
popa
cmpsb
aam
iret
adc
cmp
stos
int
inc
jns
add
insl
sahf
push
sbb
aaa
dec
xchg
loopne
cmp
mov
inc
add
add
cmpsl
ds
test
in
enter
in
add
xor
add
push
insl
mov
lds
jle
add
inc
ss
jnp
xchg
xor
xchg
adc
mov
mov
data16
pop
pop
inc
lret
sub
test
xchg
hlt
ss
add
or
mov
lock
xchg
jne
pop
xor
mov
je
mov
sbbl
dec
arpl
dec
add
ja
add
clc
cmpsl
dec
cli
fimull
push
test
jp
leave
movsl
add
sub
push
add
out
sub
mov
push
ret
add
movl
cmp
enter
push
push
push
dec
insl
push
loope
unpckhps
popa
addb
in
fimuls
push
out
add
cltd
cmp
arpl
push
je
push
stos
adc
pop
rdmsr
hlt
stos
add
shl
push
dec
into
test
push
mov
cmc
out
dec
scas
sbb
push
cmc
in
jno
jae
jg
lret
add
out
add
cmp
pop
pop
cmp
jno
jg
les
and
faddl
cld
ret
movsb
add
or
movsl
fldcw
add
loopne
push
sbb
push
scas
push
xor
mov
insb
push
sub
sub
mov
or
sti
daa
and
add
dec
stos
push
and
pushf
popa
and
push
subb
sub
xchg
movsb
push
pop
mov
xchg
loopne
add
add
repz
ja
nop
add
add
add
add
into
sbb
addl
in
sbb
push
aad
jmp
inc
imul
or
orb
add
or
jbe
out
stos
jns
insb
sub
jne
or
sbb
mov
gs
pop
pop
aam
xchg
pushw
jns
test
pop
mov
insl
dec
add
loopne
add
add
pop
adc
push
jg
mov
mov
aad
iret
cmpsl
sbb
add
and
aas
xchg
xchg
lret
add
std
es
and
mov
xor
push
shrb
pop
cld
add
xchg
add
push
mov
push
loopne
daa
xor
xor
outsl
in
adc
repnz
mov
adc
fsubrs
pop
or
sub
outsl
ret
xor
xchg
rorb
jl
into
sub
jns
cmp
aam
add
icebp
shll
add
mov
add
add
add
out
xorb
jbe
jbe
lahf
pop
icebp
dec
add
sub
dec
in
adc
dec
jp
pop
testl
or
mov
and
in
mov
pop
js
jg
adc
inc
push
incl
lods
lret
add
add
cltd
add
jo
xchg
add
or
in
lea
data16
pop
out
push
mov
arpl
fnsave
pop
loop
mov
push
adc
and
pop
sbb
scas
shlb
sub
in
sbb
xchg
ja
jmp
push
aas
sub
dec
push
mov
xchg
out
xor
pop
push
into
cmp
xchg
xchg
sub
popf
pop
sbb
jno
rcr
add
push
push
dec
lret
inc
mov
stc
in
add
in
xchg
jecxz
push
push
add
ljmp
xlat
adc
outsb
mov
pop
add
inc
jae
addr16
iret
jnp
jo
mov
add
jo
add
mov
ret
add
dec
arpl
sub
imul
xor
lret
pop
ja
in
mov
dec
push
jns
sub
cld
pusha
add
icebp
rclb
mov
jno
fistl
add
push
adc
xlat
xchg
cmpsb
sbb
pop
mov
test
or
hlt
cmpsl
mov
add
pop
adc
or
and
and
mov
jno
fsubrl
xchg
add
add
push
push
adc
outsb
inc
mov
mov
add
inc
dec
lock
lcall
mov
cli
add
jb
scas
stos
push
cmp
mov
jns
add
cmp
adc
xchg
inc
and
dec
cmp
mov
sub
add
add
test
repz
scas
xor
add
xchg
lods
push
andl
add
push
add
fsts
js
mov
gs
mov
jae
push
sbb
in
pushf
add
add
add
mov
push
push
jno
movsl
sbbl
xor
insb
and
sub
xor
xchg
lret
bound
aad
or
pop
bound
pop
add
add
sbbl
fcmovnb
or
enter
push
outsb
mov
mov
int3
mov
jge
xor
leave
or
adc
mov
stc
mov
mov
adc
push
mov
test
adcb
gs
pop
icebp
sbb
ja
mov
adcl
dec
add
ret
sub
add
call
fwait
add
adc
idivl
add
jmp
inc
pusha
mov
xchg
pusha
xchg
add
into
and
rolb
xor
lock
xor
repz
xchg
daa
stos
push
dec
adc
cmp
jecxz
xor
stos
sahf
pop
and
inc
dec
add
test
or
cmpsl
xor
add
mov
repz
add
std
ret
pop
and
mov
imul
lret
jmp
dec
sbbl
loopne
and
xchg
cmp
xor
push
imul
jmp
jne
xchg
add
aaa
mov
aas
pusha
pushf
out
lret
jmp
dec
fnstsw
mov
in
mov
add
movsb
aam
je
add
mov
adc
ja
adc
ja
popa
stos
mov
outsl
add
adc
adc
mov
add
test
add
and
dec
test
outsl
add
mov
mov
push
dec
out
jecxz
adcb
in
add
and
mov
outsb
nop
test
and
gs
xchg
add
push
add
clc
filds
push
jl
adc
shrl
push
out
add
push
mov
rolb
pushf
add
into
roll
aaa
inc
js
mov
shrb
fldl
sarb
sti
jo
or
add
add
mov
scas
jo
xor
movsb
mov
repz
push
rorl
jecxz
mov
das
cmp
add
lret
add
sbb
stos
dec
lods
mov
cld
jb
sub
dec
push
push
test
dec
dec
insb
dec
lret
sub
add
fadds
in
ss
inc
test
cmp
push
jns
push
stc
out
enter
sbb
add
mov
mov
lods
aaa
repz
rolb
xchg
xor
mov
into
lcall
aad
xchg
pop
ffreep
xorb
pop
add
test
jbe
cmp
add
in
test
jecxz
push
pop
mov
add
mov
mov
add
sub
testb
add
xchg
imul
stc
sub
add
inc
stos
adc
dec
aas
pop
es
pop
popa
mov
std
sti
xchg
push
data16
mov
or
inc
lret
sti
jp
add
add
and
xchg
aas
push
jbe
push
add
cli
add
xchg
jo
push
mov
rorb
into
push
call
in
jne
cmpb
mov
bound
fcom
cld
repnz
dec
inc
add
mov
movsb
inc
mov
mov
and
aaa
sahf
inc
jns
mov
fistl
push
popa
clc
inc
mov
add
rorb
dec
or
outsb
in
mov
mov
xchg
cmc
nop
or
cmc
inc
jno
in
sub
jl
imul
xor
ret
pusha
pop
jg
sub
scas
mov
xchg
sbb
pop
cld
jne
out
add
mov
xor
shl
pmaddwd
jae
icebp
les
in
add
cltd
shrl
xor
and
ret
push
add
push
out
sub
xor
sbbb
sbb
jmp
scas
jne
add
loop
add
sub
push
popa
xlat
add
pop
dec
add
js
mov
loop
or
roll
packssdw
sbb
hlt
xor
jbe
sbb
cs
jo
bound
in
aaa
add
add
shll
ret
jno
in
iret
add
jecxz
add
das
popa
add
and
jp
xchg
sbb
int3
fs
js
movsb
mov
std
mov
add
pushl
aam
add
ljmp
xchg
jle
add
shr
mov
dec
in
push
add
rolb
add
mov
mov
in
add
add
imul
std
push
add
add
jmp
add
cmp
out
cmp
mov
ds
in
mov
cmp
imul
mov
mov
fucomp
and
add
sub
les
lret
test
dec
mov
sbb
adc
std
push
push
jp
add
mov
or
sub
add
fisttps
inc
push
pop
or
out
ds
mov
dec
movsb
clc
pushl
stos
imul
imul
add
repnz
push
push
add
add
loopne
add
dec
push
enter
shll
push
lahf
dec
out
je
enter
mov
jl
insl
mov
fnstenv
aas
mov
add
jl
lea
mov
ret
jp
out
shrl
add
and
and
mov
lret
add
push
aam
insl
jge
push
cs
repz
dec
repnz
lea
add
mov
add
mov
add
add
pop
shl
add
fwait
test
mov
mov
out
lea
push
xchg
adcl
inc
mov
std
ss
out
xchg
ljmp
movsb
cmc
dec
pop
and
roll
sub
and
jbe
gs
pop
sbb
pop
pop
fs
pusha
in
scas
add
lods
in
add
push
hlt
add
xor
ljmp
or
sahf
bnd
add
adc
cli
inc
mov
sbb
test
dec
add
les
xchg
and
jbe
and
add
jl
rolb
pop
sbb
das
sarb
repz
xchg
mov
sbb
cmpb
test
inc
cmp
add
add
inc
jnp
add
cmpsl
inc
arpl
nop
jle
dec
or
and
add
out
pop
add
xchg
add
push
in
add
lods
inc
int3
popa
in
je
push
xchg
call
hlt
movsl
add
adc
mov
jmp
adc
mulb
mov
cmp
nop
movsb
sub
fcoml
lahf
mov
pop
movb
inc
iret
scas
cmp
std
into
stc
push
add
es
push
mov
dec
dec
mov
into
in
add
inc
jle
mov
or
jp
or
push
xor
jnp
sbb
add
or
and
cmp
lret
dec
mov
inc
and
and
pusha
sub
and
clc
xchg
add
mov
xor
dec
add
or
jecxz
repnz
out
inc
adc
insb
add
jp
push
in
pop
push
xchg
mov
push
addr16
adc
xchg
add
add
fld
fcomp
push
negl
pop
cmpsb
mov
pop
add
pusha
pop
mov
mov
adc
or
mov
emms
and
fidivrs
int3
scas
or
ret
js
cmp
das
add
cmp
xchg
cmp
adc
cwtd
mov
lcall
test
add
mov
jno
rorb
dec
inc
out
pusha
mov
inc
je
pusha
out
mov
ret
adc
faddl
mov
rcrl
mov
out
xor
jmp
add
pop
xor
jg
push
add
push
cmpsb
or
dec
not
int
pushf
mov
xor
sbb
adc
inc
or
pop
add
jb
loope
push
cmp
fisubl
sbb
mov
jp
and
dec
add
aas
and
mov
xor
test
fwait
shll
fisttpl
sub
inc
push
push
cmp
mov
pusha
jmp
subb
mov
add
add
fistpl
cmp
mov
fwait
outsl
sub
mov
xor
cli
jbe
pop
sbb
arpl
push
lret
ljmp
testb
sub
sarl
add
lcall
loope
ja
lods
jl
dec
ret
sarl
stos
and
add
lret
dec
divl
pop
push
xchg
inc
and
sahf
leave
stos
mov
loop
loop
loope
addr16
xlat
movsb
sub
movsb
xchg
sub
fwait
mov
dec
loope
sbb
push
inc
sbb
imul
dec
mov
jbe
jmp
hlt
dec
mov
jmp
outsb
mov
or
mov
dec
adc
mov
mov
add
mov
push
jmp
ficoml
cltd
xchg
jo
aad
push
add
push
jmp
ja
add
popf
stos
push
xchg
ss
cmc
and
rolb
add
loopne
mov
mov
or
add
mov
sbb
shl
je
movsl
repz
lock
xchg
ja
insb
rolb
xchg
std
fdivp
loop
add
push
movsl
push
push
adc
adc
cmc
xor
mov
mov
mov
add
pusha
xchg
push
gs
in
stos
jp
lret
fwait
add
push
xchg
add
clc
dec
pop
jns
ficompl
imul
adc
fwait
xchg
mov
imul
jae
mov
rcll
dec
pop
adc
jg
je
int3
fs
inc
pusha
lds
jl
pop
incb
out
jl
repz
fs
xchg
outsl
jae
hlt
sbb
imul
adc
xchg
xor
jae
dec
in
pop
add
test
add
xchg
fiaddl
sub
mov
call
add
mov
loope
repnz
fs
ds
jno
dec
add
test
adc
add
mov
cli
xor
aam
test
ds
or
pop
pop
hlt
repnz
mov
mov
cmp
push
jg
lret
pop
xchg
push
xor
pop
dec
add
add
cli
scas
insb
and
fadds
add
add
mov
setne
mov
call
mov
sarl
dec
aad
ret
mov
sbb
add
add
int3
lcall
shll
xchg
outsl
xor
repz
add
js
scas
cmpl
popa
add
sbb
mov
push
jmp
mov
repnz
loopne
cmp
pusha
dec
and
xor
jns
add
jo
jo
mov
aaa
xchg
xor
enter
sar
mov
xor
sub
in
ret
jns
add
cmp
adc
enter
iret
add
ret
ja
push
cld
pop
lds
out
sbb
sbb
inc
imul
mov
push
push
and
lahf
or
add
in
or
jnp
add
xor
push
push
popa
insb
adc
add
ja
addl
xchg
xchg
nopl
or
fisubs
ret
test
repz
xor
inc
jp
out
add
jb
pop
incb
pop
js
add
lret
add
fimull
mov
test
pop
fsubl
dec
add
loop
cmp
and
pop
add
cli
lea
cwtl
fsubr
imul
xchg
daa
mov
hlt
stos
fiaddl
jg
add
push
rol
pushf
loopne
push
fsubrs
sub
test
ror
add
add
sbb
inc
cmp
adc
add
xchg
pop
mov
pushf
inc
jns
movsl
out
sub
imul
jp
fstpl
push
pusha
mov
cmc
add
add
fucom
sub
mov
pop
insb
frstor
add
dec
hlt
lea
clc
sub
push
add
xchg
jne
push
cmp
jb
add
lock
sub
adc
xor
das
inc
add
popa
dec
jbe
xchg
inc
jo
jae
xchg
stos
sbb
into
stc
into
add
loop
cltd
movsl
adc
sbb
jle
cmc
inc
inc
fadds
mov
rorl
add
or
add
shrl
pop
push
add
xchg
fs
dec
push
cmc
inc
pusha
add
mov
add
call
inc
add
or
jp
repnz
add
push
jns
or
popf
or
add
movl
fs
sbb
push
adc
pusha
lea
jmp
lahf
jns
shr
mov
out
lock
jp
rcrl
adc
int
outsb
cs
mov
inc
push
adc
xchg
push
shrl
imul
add
and
add
mov
lods
mov
in
push
cmp
call
fsubrl
out
divl
mov
mov
sti
add
inc
push
data16
push
add
mov
xor
fisttpl
das
and
mov
xchg
inc
push
add
pop
mov
movl
mov
sbb
fldcw
sbb
addl
ja
add
xchg
fldt
ret
adc
icebp
xlat
mov
dec
fsts
jbe
fcmovnu
jno
imul
adcl
mov
call
add
lret
jo
pop
sbb
mov
mov
add
fsts
sar
add
sbb
cwtl
add
stos
loop
add
addr16
insl
int3
test
add
add
sub
inc
add
inc
sbb
push
and
or
push
mov
push
mov
jecxz
mov
mov
dec
outsl
inc
add
add
inc
loope
out
addr16
or
sbbl
add
faddl
aas
cmp
ds
mov
shll
jbe
jne
mov
loop
xchg
lods
sbbl
or
or
xchg
lock
inc
lahf
and
clc
push
add
push
inc
fs
push
add
push
int3
add
fcomip
lea
lods
jne
jns
add
cli
inc
shll
shll
jb
add
testb
add
lock
cmp
lret
sbb
orl
arpl
jmp
inc
movsbl
mov
data16
or
js
or
mov
ficoms
test
fildll
lret
ja
dec
and
xlat
arpl
sbb
sub
dec
int3
add
insb
sbb
pop
filds
sarb
out
add
sbb
xor
imul
xor
add
sub
xor
mov
int
imul
jno
jne
daa
lret
xchg
mov
mov
bound
enter
es
jb
sbb
ficoms
jmp
jno
cmpsl
test
push
xchg
mov
idivl
mov
ja
xchg
and
mov
jb
lret
hlt
fidivl
add
test
mov
adc
mov
push
mov
push
add
bound
or
aaa
adc
out
or
push
into
cmp
lcall
decb
or
ret
add
push
jle
mov
stc
cld
cmpsl
add
jmp
dec
or
xchg
addr16
push
xor
jmp
pop
aad
aam
popf
gs
arpl
out
lret
scas
and
xor
fadd
add
add
inc
add
cmp
pop
roll
jne
mov
add
push
ja
sbb
in
adc
lea
es
jae
ret
in
xor
add
loop
push
lock
push
inc
es
inc
out
xchg
xchg
sub
xor
add
jo
cmp
xchg
jmp
gs
mov
inc
js
add
push
cmpsl
add
shl
out
inc
xchg
xchg
enter
inc
lea
pushf
cli
aas
ror
fimull
sbb
xchg
hlt
test
sub
aad
push
dec
xor
adc
pop
add
sbb
mov
fistps
mov
cmpsb
popa
movsb
stc
fs
std
lret
insb
adc
jnp
movsb
pop
gs
sub
ret
mov
add
lock
ret
cltd
sbb
and
or
mov
cmp
int
adc
shrl
std
xchg
lds
inc
mov
sbb
xchg
mov
mov
lods
xor
cmp
loop
push
add
mov
lock
push
leave
inc
and
cmpsb
add
xlat
jmp
int
and
dec
out
adc
pop
andb
mov
stos
mov
test
and
movb
out
add
mov
lds
popf
add
es
jge
jl
and
add
aas
add
jnp
inc
inc
js
add
shlb
stos
fidivrl
xor
pop
in
movl
mov
inc
adc
into
loopne
jae
push
loop
add
push
add
sbb
insl
nop
shlb
cmc
mov
mov
sbb
sbb
mov
xchg
add
mov
jecxz
jbe
sbb
cwtl
jne
fsts
adc
add
lods
jmp
add
jecxz
mov
call
test
add
push
jmp
pop
mov
in
xlat
cmp
add
xchg
add
or
clc
jnp
push
or
add
sub
inc
add
pusha
data16
fdivl
imul
or
lret
add
incb
mov
xchg
sub
sub
push
fcmovb
movsb
lcall
ss
testb
daa
jno
add
add
push
cmp
je
sbb
add
push
adc
dec
cmp
mov
jne
inc
js
mov
push
mov
pusha
stos
add
xchg
sbb
push
and
and
sub
aaa
add
mov
hlt
adc
movsb
lea
jae
lahf
add
dec
inc
dec
mov
gs
mov
inc
mov
enter
sbb
jbe
xchg
jbe
lds
incb
mull
int3
add
adc
mov
adc
inc
add
pop
add
add
jmp
xchg
pop
add
test
pop
test
int
xchg
inc
add
xchg
jp
movsb
inc
mov
add
mov
pop
cmp
mov
test
mov
sbb
out
xchg
mov
jno
int3
push
loope
ret
lahf
rcr
push
stc
lahf
pop
cmp
sub
dec
mov
jl
fisttpll
add
and
sub
add
sti
dec
pop
add
das
mov
mov
enter
stc
mov
sub
xor
add
push
add
fiaddl
xchg
insl
pop
icebp
jg
ja
mov
xor
pushf
pop
rcll
inc
cld
jnp
add
mov
adc
add
arpl
xor
popl
push
fisttps
pop
repnz
fisubl
or
das
sti
sbb
mov
mov
add
pop
adc
iret
cmc
mov
mov
fucomip
push
push
xchg
arpl
mov
dec
or
fiadds
les
adc
test
fiadds
dec
repnz
cmp
cs
enter
scas
add
daa
adc
inc
adc
sbb
mov
xchg
jp
jne
aas
add
xchg
lret
add
push
xchg
jne
push
jbe
iret
cmp
sub
inc
sbb
imul
divb
xor
add
sub
mov
loope
scas
push
nop
cmp
loop
fincstp
dec
lahf
dec
xchg
or
aam
movsb
bound
add
add
mul
rorb
jmp
decb
mov
rcl
ficoml
ljmp
inc
sbb
push
mov
scas
out
jl
daa
add
xor
je
add
sub
aas
jns
mov
scas
sub
jl
stos
jbe
adc
mov
add
push
aad
jge,pn
sbb
add
mov
lcall
out
add
add
add
xor
addl
or
mov
nop
cmc
push
adc
xchg
sti
jo
in
std
orb
lahf
lds
add
pop
push
push
mov
push
call
add
or
add
aaa
call
popl
jae
sarb
xor
or
out
incb
jge
movl
sub
sarl
xor
into
xchg
push
mov
mov
xor
int3
movb
test
daa
and
sbb
outsl
add
jle
fimuls
mov
cmpsb
inc
mov
leave
fiaddl
add
data16
add
add
js
adc
out
fs
sub
popl
or
lock
cmp
xchg
hlt
add
push
pop
decl
sbb
sub
jge
into
icebp
incl
mov
fnstsw
mov
dec
idivb
rolb
inc
or
xchg
mov
add
shlb
jae
cmp
sbb
mov
sub
lret
rorb
sti
test
jmp
add
call
add
loope
sbb
adc
aam
scas
mov
aas
sbb
jnp
pop
in
cmp
lea
push
ret
dec
pop
add
mov
les
inc
inc
loope
add
lcall
inc
add
test
ret
jbe
adcb
shrl
mov
leave
pop
or
jno
sub
call
incb
xchg
sbb
inc
insl
pop
xlat
dec
add
xor
sbb
hlt
mov
jb
rcrl
das
add
lds
sbb
pop
add
loop
cmpsb
int
flds
stos
xchg
inc
into
add
xchg
ja
cmp
add
inc
ss
or
adc
inc
test
or
dec
add
add
cmpsb
lods
jp
jge
mov
jns
and
fildl
push
sbb
fdivs
inc
add
icebp
xor
fadds
jmp
lods
push
mov
fwait
outsl
in
push
inc
add
stos
inc
add
add
cmp
add
aam
call
pop
inc
xor
cmc
imul
out
mov
sub
add
sahf
sahf
dec
push
insl
add
int
dec
mov
add
fcmovnu
or
xlat
pusha
add
sbb
test
out
mov
mov
fmull
test
pop
inc
aaa
faddl
push
pop
sbb
add
sbb
imul
add
dec
xchg
add
es
mov
push
jnp
ds
xchg
out
cmpsl
add
cmp
sbb
jl
mov
add
or
movsl
dec
add
gs
and
xor
inc
pop
add
mov
shlb
add
mov
mov
leave
cwtl
add
adc
cwtl
notl
add
xor
pop
sub
jns
es
add
push
fnstsw
int
jbe
js
shll
sbb
add
out
mov
inc
in
pop
out
and
pop
je
lret
and
cli
pop
add
cmp
mov
dec
fisubrl
xchg
imul
adc
add
loope
sub
scas
mov
inc
and
add
mov
jb
sub
mov
dec
jbe
fidivl
add
inc
push
dec
xor
cld
movl
cmpb
and
push
addl
add
jle
xor
mov
and
add
add
int
mov
sub
ds
cld
add
les
add
pop
adc
mov
sbb
xchg
sbb
pop
sbb
sub
lock
adc
in
add
pop
repz
out
cs
sub
add
pop
mov
gs
scas
out
test
paddusw
xchg
das
inc
lcall
or
sub
mov
test
xchg
pop
push
sub
fmul
stc
sbb
jmp
dec
add
dec
mov
js
mov
xor
mov
inc
data16
jae
sbb
and
xchg
jmp
xchg
push
add
int3
iret
aaa
stos
dec
cmp
ja
adc
jmp
rcrb
out
sbb
pop
subl
dec
lods
xchg
add
popf
cwtl
imul
orb
rolb
lret
fs
mov
inc
or
imul
in
fimull
cmp
dec
sub
lock
inc
add
sti
pop
add
std
add
orl
xchg
sub
cwtl
stos
xor
mov
fcomp
lcall
xchg
repz
pop
jge
dec
inc
add
pop
data16
cld
mov
cmpsb
jl
rcrl
sahf
mov
aas
push
popf
scas
mov
cmp
jl
arpl
push
add
push
ja
and
pusha
inc
add
or
add
add
sub
dec
add
test
xor
hlt
sldt
push
mov
adc
pop
dec
fs
xchg
pop
into
add
pop
insb
push
mov
aas
mov
repnz
arpl
cwtl
jae
js
lods
addb
popf
dec
and
add
aaa
adc
add
loopne
add
push
jmp
out
xor
outsb
push
dec
fs
mov
shl
test
scas
roll
lret
jno
adc
call
testl
add
jbe
leave
sti
add
inc
out
std
and
notb
dec
dec
dec
shrb
push
cwtl
ss
xchg
popf
sbb
adc
pop
xchg
jns
add
jecxz
out
insb
or
push
ja
hlt
dec
mov
inc
add
sub
dec
push
lock
iret
in
dec
push
fs
cmp
adc
das
les
add
inc
dec
scas
xorb
jmp
mov
pop
andl
jo
adc
in
sub
out
test
in
mov
dec
jno
in
push
cmpl
ret
mov
out
xchg
dec
mull
std
pop
cmp
push
mov
sbb
sub
repz
add
hlt
repz
inc
xlat
and
in
dec
jne
dec
dec
ss
mov
add
rol
jb
mov
mov
sbbb
mov
add
fildl
jp
hlt
scas
add
push
adc
cli
add
mov
push
inc
mov
fcoml
add
rcl
xor
lock
rolb
lahf
sbb
out
pop
dec
sbb
imul
mov
jge
add
jne
dec
lcall
mov
mov
pushf
and
sbb
push
fmul
ds
nop
clc
add
in
push
add
add
inc
bound
mov
das
jecxz
sbb
loope
mov
xor
insl
add
add
inc
jp
in
mov
mov
add
dec
int
inc
or
mov
jb
cmp
insb
fdivr
pop
shr
stos
mov
adc
inc
fmuls
mov
jl
push
add
adc
mov
xchg
push
fstpt
xchg
jmp
push
mov
aad
add
je
andb
add
xchg
pop
add
out
pop
jecxz
mov
pop
lret
xor
roll
cmp
stos
aad
lahf
jno
out
shrl
aaa
mov
add
sub
add
adc
icebp
mov
sub
lcall
sub
sti
or
stos
iret
aam
lahf
aaa
mov
in
int3
add
popa
push
nop
adc
sbb
rolb
ret
jb
das
dec
cld
add
lret
std
iret
ljmp
aaa
add
lret
inc
xor
vrsqrtss
add
insl
fildl
rcrl
sub
mov
cli
sub
sub
inc
sub
hlt
sarb
pop
repz
xchg
adc
lds
push
lds
mov
jecxz
pop
cmp
lcall
dec
jl
xchg
mov
lea
dec
add
test
add
in
push
jbe
add
arpl
sub
imul
fld
sbb
mov
sbbl
testb
or
add
sub
mov
cmpsl
xchg
pop
cmp
mov
cwtl
bound
repz
push
jg
insl
js
dec
xchg
pop
popa
push
fstcw
lods
outsb
sbb
lcall
shrl
in
fucomp
cltd
add
and
ss
jb
lea
inc
lahf
popf
ss
mov
cmp
pop
lds
push
mov
xor
addl
test
dec
lret
sub
test
fs
stos
mov
sbb
ret
inc
pop
gs
gs
pop
divb
jne
stos
add
mov
xchg
fcompl
sub
loop
scas
iret
add
xchg
sub
xor
fld
jo
mov
inc
xor
ret
push
test
out
push
pop
aas
add
xchg
mov
movsb
cmp
or
and
and
push
xorb
sub
add
and
add
cmp
stos
fucomi
jg
enter
rclb
pop
cltd
sbb
mov
inc
jmp
add
inc
jne
and
jl
aas
sbb
xchg
push
mov
arpl
mov
inc
jmp
aam
xor
lahf
sbb
test
xor
bound
js
add
or
inc
test
mov
leave
daa
arpl
add
fld
mov
ret
sbb
loop
mov
sbb
xchg
add
test
mov
ljmp
loop
dec
cli
call
movb
jo
add
mov
add
cmp
cmpl
test
add
mov
dec
sbb
lcall
add
mov
mov
sbb
sbb
das
mov
int
add
mov
add
add
rolb
add
es
loopne
or
arpl
ljmp
add
fs
dec
dec
dec
add
rcrb
in
stos
xchg
call
mov
mov
add
lock
adc
add
es
pushf
add
push
fsubrl
addw
mov
add
in
cwtl
in
movsb
fpatan
roll
lcall
cmp
pusha
std
mov
cmc
popf
data16
add
add
xchg
pusha
push
rolb
jge
jg
inc
jne
mov
lret
mov
or
add
sbb
je
add
push
into
adc
add
lock
es
movsb
add
push
mov
fwait
xchg
xor
aam
or
add
push
dec
add
std
das
movsl
add
pop
into
je
and
shll
jp
mov
popf
lcall
mov
leave
and
adc
jbe
fprem1
test
into
bound
add
inc
xor
dec
in
and
imul
and
inc
jge
dec
stc
and
lahf
inc
jne
and
les
pop
dec
aas
jbe
xchg
mov
subb
mov
fnstsw
movsb
xchg
loopne
inc
sub
pop
inc
sub
aam
dec
xor
sahf
add
into
jg
pop
add
xchg
add
cmpsl
outsl
mov
cltd
negl
aaa
out
push
cmp
jmp
icebp
rorb
mov
sub
orb
test
sub
add
sub
push
cmp
and
xor
scas
jbe
push
das
loopne
and
sbbb
xchg
int
into
bound
clc
rcll
add
jo
dec
clc
cmp
inc
es
pusha
cmpsl
fucom
out
aaa
mov
pop
mov
pushf
sbb
in
movsb
and
aad
mov
xchg
sahf
andl
movsl
sti
pop
xor
jl
mov
dec
add
pushf
mov
bnd
jge
aam
xlat
dec
out
lret
out
popa
sbb
or
into
sub
cmp
inc
rol
pop
repnz
mov
mov
push
add
push
xchg
popf
push
push
push
imul
push
mov
sbb
cmpsl
mov
xchg
inc
test
cmp
imul
mov
sbb
add
test
movl
push
loope
mov
pop
lods
out
shll
push
or
dec
fidivl
out
dec
cmpsl
sub
mov
dec
add
add
cmpl
mov
jp
add
in
jl
roll
pop
add
call
repnz
pop
and
cmp
xchg
inc
jl
mov
xor
sbb
push
cmp
push
or
xor
push
popf
shll
push
and
je
push
push
mov
add
xor
fildll
les
add
add
and
dec
popl
and
stos
out
pushf
add
movsl
jo
test
mov
test
add
add
out
lods
cs
addb
out
jae
jne
jno
in
add
sub
aad
add
push
jno
cmp
stc
mov
in
pop
jmp
dec
xor
dec
leave
add
inc
sbb
dec
bound
inc
aas
add
cmp
adc
in
mov
push
cmp
add
cltd
inc
mov
push
add
cwtl
add
pop
and
mov
dec
xorl
jo
out
pop
push
add
fiadds
mov
adc
mov
lret
sbb
or
jecxz
rorb
sub
scas
mov
inc
add
or
sub
xchg
add
adc
xchg
cld
add
add
cmc
nop
add
xor
ss
add
xor
mov
cmp
or
xchg
add
orb
popf
arpl
or
push
lds
popf
insl
test
ljmp
lds
dec
push
xor
mov
js
ljmp
ficoms
stc
shrl
add
cli
xchg
add
add
mov
add
in
and
dec
push
mov
data16
negl
add
aam
add
fisttps
xchg
loop
fucomi
push
imul
add
insl
icebp
mov
fildl
ja
sub
call
ret
add
pop
add
xor
sub
aas
fs
add
and
push
lea
iret
xlat
xor
mov
pop
cli
adc
dec
fsubl
add
add
rorl
fwait
xor
adc
cmc
sti
add
scas
aad
scas
xor
inc
imulb
pop
cltd
mov
arpl
iret
add
mov
xor
add
push
add
rcrl
pop
loop
add
xchg
cwtl
pusha
add
add
adc
dec
add
inc
or
div
add
std
test
push
inc
jp
stos
outsb
sub
imulb
out
push
sub
cmpsb
movsb
or
and
ja
cmp
jb
or
cmp
int
cmp
in
sub
mov
int3
mov
adc
add
xacquire
insl
add
or
fidivrs
sti
and
cmp
ds
mov
inc
clc
mov
int3
aad
add
mov
push
adc
add
fdivs
or
xchg
add
stos
sarl
add
fimuls
cs
xchg
xchg
dec
add
jnp
add
orb
cmpb
ja
add
lods
sub
push
xchg
scas
push
add
bound
inc
push
fstpl
add
ljmp
mov
mov
das
or
andl
mov
push
add
int
inc
pop
clc
add
out
sbb
les
add
pop
xorl
mov
mov
daa
insb
test
aaa
pop
std
mov
inc
add
js
lock
cmpsl
stos
mov
lock
fwait
out
shlb
adcl
add
pop
pop
pop
and
xor
xchg
dec
jns
in
aad
push
sub
stos
jne
add
fmuls
test
inc
cmp
pop
scas
sbb
mov
xor
bound
jne
sbb
xchg
arpl
stos
sti
xor
push
shrb
add
xchg
movsb
sub
lods
arpl
xor
add
sbb
es
arpl
xor
xchg
pop
mov
jb
or
add
in
pop
add
pusha
and
and
push
xchg
mov
pop
lock
test
jmp
incb
loop
fisttpl
and
dec
inc
fistpl
sbb
xchg
add
push
cmpsl
push
and
je
outsb
imul
add
stos
mov
outsl
push
add
sub
test
jns
sub
cmpsb
mov
sub
jle
sub
xor
int
add
mov
xchg
pushf
loop
je
pusha
orb
in
lret
int
mov
pop
mov
cmp
push
and
mov
xor
ret
lret
mov
fwait
or
add
fsubr
jbe
pop
repz
adc
out
adc
push
int
add
pop
dec
imul
add
daa
inc
xchg
loop
das
cwtl
add
cld
jno
adc
add
add
dec
fidivrs
pop
push
stos
cmp
mov
add
movsl
fldl
inc
cltd
xchg
cld
stos
xor
add
push
push
add
mov
jmp
dec
add
cmp
fisubrs
fidivrs
rclb
fldenv
or
mov
loope
ja
jp
add
pop
add
jecxz
sub
test
push
shll
add
adc
add
add
lcall
jne
icebp
gs
adc
jg
stc
add
inc
out
outsl
loope
lret
xchg
add
push
call
or
pop
bound
add
add
pop
sbb
mov
xchg
pop
sbb
add
push
je
add
mov
sub
adc
add
dec
ss
xor
push
xchg
test
add
mov
repnz
add
xor
cmc
sbb
mov
xchg
xchg
std
jle
sbb
pop
push
xor
xor
adc
cmpsl
cmpsb
lcall
adc
cmp
cmp
clc
push
push
sbb
inc
aas
add
sbb
xchg
jp
rclb
xchg
jno
mov
in
stos
lret
sbb
add
push
jns
ds
lods
pop
add
daa
fisubs
mov
push
or
pop
das
push
add
rorl
xchg
mov
test
add
mov
add
dec
adc
inc
pop
scas
in
les
add
pop
imul
outsl
pop
js
adc
and
mov
mov
outsl
pop
cmc
add
int
aam
xchg
repnz
adc
jecxz
loope
shrb
and
jb
xor
cli
daa
jbe
add
cmp
jp
push
sub
dec
call
inc
dec
mov
fsubrs
shrl
add
inc
add
das
sub
add
aad
jne
lock
sbb
popf
dec
xchg
fcmovu
adc
bound
jno
and
lret
bound
mov
stos
ds
fidivrl
inc
jle
xchg
add
add
jo
xchg
adc
mov
mov
out
dec
in
addr16
mov
mov
lret
shl
inc
faddl
lcall
adc
jge
xor
adc
mov
fnstsw
out
dec
mov
dec
lea
js
dec
lret
cmp
pop
cmp
dec
lods
or
mov
mov
popa
mov
aas
fstpl
mov
aas
ja
add
mov
movsl
xchg
mov
inc
fwait
push
or
adc
or
cmp
popa
shr
loope
and
xchg
addb
mov
dec
aaa
xchg
pop
add
jnp
mov
add
in
add
and
mov
filds
ret
mov
lret
leave
arpl
pop
mov
outsl
addr16
add
out
xor
pushf
shlb
add
notl
add
insl
xchg
lds
inc
jne
dec
stc
xorb
outsb
push
and
test
lret
push
or
cmp
ja
mov
js
dec
xor
lahf
add
pushf
mov
enter
dec
adc
jl
out
mov
pusha
xor
lods
mov
add
jg
xlat
aaa
xchg
push
lds
sbb
lret
mov
jmp
xchg
je
xor
popa
jb
xchg
mov
pop
or
in
inc
cli
push
pop
cmp
add
andb
jnp
popl
inc
mov
pop
push
cltd
jne
test
sbb
xor
rolb
sbb
stc
cwtl
fldenv
or
and
jo
iret
mov
mov
push
clc
add
sbb
add
cmp
addr16
pop
mov
jne
scas
sub
or
dec
lret
add
and
mov
cs
adc
mov
rorl
or
dec
cs
jne
add
xchg
mov
inc
add
add
sbb
add
add
mov
movsl
arpl
lret
stos
popl
into
adc
sub
pop
mov
inc
iret
push
test
fcmovnu
or
sbb
add
push
mov
sbb
ficoml
xor
lret
add
cli
xor
cltd
mov
repz
xor
dec
nop
add
xor
push
into
adc
inc
xchg
frstor
dec
add
add
cmp
int
insb
add
add
jnp
ficomps
lret
ret
je
stos
jl
in
ficoms
in
imul
add
cs
mov
jns
filds
aad
dec
xor
loop
fsts
sub
mov
mov
pop
push
xor
cwtl
mov
xchg
loope
jae
inc
popa
enter
sub
and
add
mov
jge
mov
mov
pop
jg
incl
adc
addb
imul
sub
jns
pop
ss
testl
addr16
and
jl
adc
in
dec
dec
aaa
and
test
add
out
fnstenv
sub
test
sti
inc
cltd
dec
insb
add
mov
fwait
cwtl
repz
mov
jbe
dec
xor
gs
cmpsl
cmp
cmpsb
add
add
imul
into
jae
dec
ret
scas
cltd
cmp
fisttpl
mov
add
xchg
xchg
ret
or
jne
shll
push
xchg
jp
addr16
push
xchg
or
or
clc
pushf
test
dec
loopne
dec
repz
mov
shl
das
jmp
add
fs
push
test
pop
mov
xor
and
test
sub
cwtl
xchg
mov
or
icebp
push
scas
mov
and
lea
and
mov
mov
cmp
jne
add
sbb
outsb
pop
sbb
xchg
add
xor
xchg
int
loop
push
add
sub
adc
inc
push
cmp
and
inc
mov
xchg
adc
fists
addb
mov
test
lahf
ss
ret
jno
sbb
mov
aas
mov
jne
sub
sbb
and
add
icebp
loopne
cmp
scas
sbb
or
aam
add
es
cs
test
push
jle
imul
mov
scas
xor
add
mov
inc
cmp
fidivrs
or
cmp
imul
fmull
aaa
xchg
adc
mov
data16
es
dec
add
lods
call
mov
add
add
lahf
ret
xor
inc
mov
add
add
leave
imul
add
icebp
push
lret
iret
mov
cmpsl
mov
mov
fpatan
mov
add
or
add
fmull
push
sbb
push
push
lods
add
into
scas
pop
jl
add
add
xchg
jmp
add
sbb
lea
sbb
or
xor
andb
test
dec
call
pop
push
push
and
mov
mov
mov
enter
rcll
lret
adc
mov
divl
mov
add
push
sub
iret
add
pop
sbb
fimuls
mov
cmpsb
or
fimuls
add
lds
scas
js
cli
scas
push
fisttpll
pop
out
jp
mov
xlat
push
mov
daa
mov
aad
clc
test
andb
rolb
rol
fisubs
mov
mov
fs
mov
call
fiaddl
mov
lods
ss
add
enter
xor
cltd
and
adc
pop
out
add
andb
mov
sbb
sbb
divb
test
xchg
loop
add
mov
adc
loopne
xchg
xchg
jp
sbb
push
hlt
add
out
mov
mov
pushf
mov
into
rcrl
sbb
ds
add
clc
pop
add
pop
out
dec
add
dec
add
movsb
cmc
test
out
scas
push
jae
jne
inc
lds
ret
iret
push
add
push
inc
ret
xchg
adc
daa
add
xchg
add
jb
mov
pop
jge
clc
xor
mov
mov
add
cmpsl
les
mov
mov
fs
test
mov
and
xor
jmp
and
push
mov
dec
popa
gs
mov
imul
movsb
lds
pop
xor
sti
cmpsb
push
cmp
imull
add
dec
addl
xchg
fisubl
mov
sbb
loop
push
insb
mov
cli
add
pop
repz
cmp
mov
adc
add
daa
add
add
inc
inc
xchg
mov
xlat
jne
mov
mov
loope
or
stc
pushf
inc
int3
andb
int
mov
xor
movsb
jno
add
test
addr16
gs
mov
inc
stos
pop
out
add
add
push
and
inc
and
xor
int
das
xchg
dec
fcoml
push
add
stc
adc
sub
pop
int3
enter
je
dec
jp
mov
out
add
test
xchg
into
mov
push
or
mov
cmp
jle
and
je
in
sub
add
test
mov
and
jge
das
mov
loope
mov
loope
fildll
int3
cmp
inc
out
add
sbb
ja
stc
mov
test
add
and
roll
sub
cmp
shr
add
add
mov
mov
pop
imull
scas
lods
add
dec
andl
add
insl
add
cltd
pusha
cld
js
aam
mov
add
lldt
je
mov
enter
in
pop
jg
adc
sub
rcrl
add
fstl
mov
enter
das
je
js
mov
xchg
and
jp
incl
add
cmp
lds
dec
imul
and
adc
imul
jle
sub
mov
bound
arpl
sub
mov
or
add
xchg
add
jnp
lods
add
aas
inc
enter
sub
add
adc
je
dec
cmc
lcall
lods
jne
jmp
data16
incb
add
shll
xchg
popf
aam
mov
sbb
das
add
rcrl
push
mov
xchg
dec
aaa
in
mov
inc
ret
mov
movsb
add
bnd
and
addb
jp
fmuls
fcoml
popa
cmpsb
mov
movsb
fisttpll
lahf
cmp
sub
mov
pop
mov
loope
add
out
xchg
add
shlb
add
leave
iret
out
jl
add
add
scas
inc
aaa
mov
rcrl
shrb
jecxz
or
outsl
add
jns
scas
incb
add
decl
addr16
adc
mov
js
loopne
mov
pop
or
mov
adc
into
test
xchg
ret
nop
fstl
mov
mov
add
daa
test
imul
sti
xchg
add
mov
test
and
inc
mov
push
rorb
push
sub
sbb
cwtl
xor
mov
outsb
add
cmp
inc
mov
mov
repz
sub
sbb
stc
jge
push
push
mov
insb
ss
mov
xor
xor
sti
add
incb
xchg
lahf
and
imul
inc
pop
scas
add
cwtl
sbb
and
push
imul
js
add
xorb
ja
clc
mov
xor
adc
or
jbe
addr16
loop
and
sti
inc
add
sbb
xchg
ret
push
push
fcoml
stos
adc
add
inc
roll
xlat
sbb
dec
scas
inc
add
mov
mov
or
and
jb
outsl
sahf
and
je
idivb
pop
adc
mov
icebp
int3
mul
add
xchg
rolb
or
mov
cmp
mov
add
xor
nop
jmp
add
push
pop
out
add
inc
add
in
inc
dec
repnz
mov
inc
out
xor
lret
inc
das
cmpsl
testl
cmpb
add
dec
aad
stc
cltd
mov
enter
fcmovnb
add
xchg
iret
call
xchg
fwait
mov
popf
cmp
fucom
mov
pop
popf
addb
add
pop
inc
test
jmp
pop
loop
jmp
xchg
test
daa
cltd
lahf
bound
and
cmpsb
sahf
dec
sub
xchg
and
inc
scas
fstpl
add
pop
cmc
in
or
test
lds
mov
push
add
jg
mov
add
sbb
mov
xor
mov
pop
add
push
mov
nop
pop
add
sub
shrb
data16
pop
jp
inc
and
dec
mov
out
push
add
add
adc
push
xchg
add
mov
push
in
push
adc
cwtl
pop
inc
test
je
cmc
xor
inc
cmp
xor
lea
mov
add
push
pop
add
add
jg
add
testl
aas
in
dec
fwait
push
add
jnp
dec
and
push
movl
dec
clc
leave
sbb
test
mov
push
shlb
dec
dec
sub
dec
add
dec
or
xchg
loope
lahf
sub
add
fs
mov
cmpsb
testb
int3
jb
and
push
and
and
scas
mov
lea
jmp
sub
das
fcoml
jb
sbb
xchg
ljmp
and
sahf
aas
stos
filds
jbe
pop
fdivr
stos
test
cmp
sub
fld
push
jae
jle
insb
xchg
cmc
inc
stos
mov
insl
loop
fnstsw
leave
setnp
in
sti
stc
pop
xchg
test
cld
mov
mov
sti
lret
lahf
push
mov
add
and
scas
ja
mov
imul
and
mov
jnp
repnz
add
or
xchg
xchg
sar
mov
dec
aad
in
lret
fadds
adc
insl
add
and
add
nop
xchg
jmp
sbb
mov
rorl
test
sub
add
xchg
cwtl
enter
or
in
mov
stos
jnp
add
test
xchg
movsb
add
push
add
test
lahf
inc
call
mov
and
add
xor
out
stc
sbbl
add
outsl
mov
faddl
or
and
pop
es
mov
jne
mov
ret
out
adc
enter
xchg
cmp
push
pop
daa
sub
add
mov
adc
ret
frstor
add
fwait
in
pop
ja
dec
enter
or
add
das
fildl
dec
ret
xchg
aas
add
rorb
pop
push
xchg
xor
adc
sahf
icebp
pop
add
ret
pop
adcb
ljmp
jns
add
lea
jp
add
add
pop
gs
out
xchg
roll
dec
ljmp
jl
add
rolb
mov
push
push
xchg
mov
or
sub
dec
add
inc
mov
xor
sbb
fildl
mov
jae
ljmp
scas
jge
mov
ret
mov
nop
xlat
cmpsl
sbb
mov
add
add
mov
stc
mov
adc
fbld
push
cmpsl
push
mov
rorl
or
lret
add
in
xor
add
out
into
add
aaa
out
add
cltd
popa
mov
fyl2x
int
push
xchg
mov
xor
in
gs
add
jmp
lahf
mov
loop
jnp
add
popa
or
inc
faddl
arpl
mov
dec
loope
cmpsl
lret
or
mov
lock
popa
add
add
sbb
lods
cmp
aaa
repnz
stc
or
or
adc
jae
cld
insl
aas
xchg
and
cmpsl
add
pop
inc
cli
jae
ljmp
add
sub
imul
fimuls
divb
adc
outsl
orl
int3
test
sbb
mov
pop
add
cltd
and
test
add
adc
mov
cmc
lahf
push
cmp
aad
push
ret
dec
or
lods
add
into
orb
rorl
fwait
in
pop
mov
in
idivb
inc
mov
dec
jns
inc
pop
aas
imul
add
push
add
mov
add
push
adc
and
or
cltd
add
cmp
sbb
add
loopne
movsl
mov
les
xchg
mov
pop
mov
push
cli
xorb
clc
jnp
dec
fnstenv
js
and
xor
jl
repnz
add
xchg
mov
iret
add
test
mov
addl
pop
mov
or
push
imul
xor
aaa
push
es
imul
xchg
pop
mov
xchg
enter
shr
inc
pop
loope
ljmp
jno
sbb
add
aaa
ljmp
jmp
pop
add
add
add
roll
adc
arpl
jo
incb
loopne
mov
sbb
or
and
movb
imul
jecxz
sub
aad
or
addl
inc
xchg
add
fucomip
xchg
out
xorb
xchg
cmp
shlb
jo
push
pop
js
or
dec
insl
hlt
mov
xor
loope
incl
xchg
jg
scas
ds
loopne
sbb
repz
inc
fildl
cmp
scas
adc
dec
push
hlt
and
add
jae
ljmp
js
adc
or
clc
loop
mov
mov
cmp
movb
jno
sub
stos
mov
cmp
adc
add
dec
add
add
mov
xchg
cld
cld
fiadds
jg
mov
push
add
and
imul
fiaddl
mov
popa
jns
fsubrl
leave
sbb
cmp
iret
lret
test
movsl
mov
jns
adcl
mov
pop
add
fninit
add
add
hlt
cmp
ret
add
ss
fldt
pusha
mov
add
cmp
mov
xor
or
nop
dec
xor
shlb
gs
add
mov
xorb
add
mov
imul
lock
hlt
mov
cmpsb
pop
or
pop
mov
jecxz
push
sbb
add
or
mov
out
stos
sub
dec
icebp
fistpll
push
mov
jbe
in
push
mov
orb
mov
mov
enter
std
push
and
scas
inc
push
paddb
lds
and
pusha
add
scas
out
pop
fsubrs
and
push
add
icebp
and
rcll
hlt
ss
out
push
add
xchg
test
cmp
add
int
mov
dec
neg
aas
cs
push
mov
in
lods
add
mov
sahf
xchg
add
and
mov
cmp
cmp
jno
lret
mov
mov
adc
pop
addl
sbb
jl
add
test
pop
data16
mov
faddl
inc
push
fists
jecxz
adc
add
sbb
jno
jbe
insl
add
fldenv
add
add
adc
inc
add
stos
pop
jg
add
add
add
shl
jmp
mov
shll
sbb
mov
jg
inc
insl
mov
add
ficompl
mov
aad
xor
ja
sub
in
add
out
adc
repz
cli
rcl
pop
inc
loop
flds
pop
sub
sbb
pop
xor
add
add
jbe
scas
mov
or
dec
push
lea
inc
add
add
pop
xor
add
sti
fcmovbe
orb
mov
push
rorb
pop
add
pop
mov
js
dec
sub
jae
insl
push
mov
loope
add
cmc
imul
outsb
insl
sahf
sbb
mov
js
sbb
adc
lahf
aas
jnp
mov
add
pop
pop
add
sub
jns
dec
add
jmp
push
stos
xchg
sub
insb
mov
xchg
mov
pop
jb
mov
imul
sub
sti
ljmp
arpl
push
sub
loope
ror
daa
js
add
adc
ljmp
add
filds
and
rorb
sahf
mov
and
or
fisttps
mov
sub
int
xor
dec
xchg
rorl
push
stc
in
sahf
jge
add
or
xchg
sub
stc
push
ret
pop
add
loope
test
mov
leave
jo
sub
cmc
daa
lods
addb
scas
push
fs
push
aad
pop
sub
cmp
insb
addb
xchg
mov
popf
fisubs
lahf
push
hlt
int3
push
xchg
rcll
fcoms
sbb
fdivl
jo
ljmp
add
sub
add
add
gs
bound
flds
fldl
push
ds
hlt
add
loopne
popa
shll
insl
mov
out
xor
es
mov
and
pop
add
js
push
jb
push
add
imul
roll
icebp
add
push
aad
cwtl
sbb
and
mov
fwait
rolb
jmp
les
test
mov
add
sbb
mov
xor
lds
adc
xor
push
dec
andnps
das
subl
outsb
stc
popf
and
push
inc
out
push
lods
inc
sbb
dec
cmovnp
rolb
out
push
add
ds
popa
fstpl
jne
lods
lret
jne
add
pop
gs
or
aad
lea
inc
in
lret
inc
xor
mov
dec
lds
mov
pop
cmpsl
testb
cs
pusha
sub
mov
orb
scas
jmp
add
out
movb
cltd
jnp
cmpsb
mov
push
imul
popf
jbe
mull
lods
test
push
es
pusha
popf
add
inc
flds
xchg
add
dec
aam
dec
int3
loopne
mov
sub
loope
mov
popa
repnz
and
and
addr16
cmp
and
pop
ljmp
add
mov
fwait
in
popl
adc
mov
repz
popf
add
jne
mov
xchg
dec
imul
or
dec
mov
cmp
add
ret
jo
notl
add
dec
pop
into
dec
rcr
or
jp
add
test
fsubrs
pusha
sbb
add
add
add
cld
insb
push
imul
insb
push
mov
std
mov
add
outsl
testb
add
in
xchg
testl
mov
push
pop
fimuls
cli
std
xor
movsl
loope
sarl
cli
iret
xor
mov
add
add
add
adc
adc
pop
push
sub
mov
test
in
jne
mov
sbb
push
push
add
into
adc
add
inc
loope
in
addr16
mov
mov
popa
add
mov
es
lea
inc
loope
or
add
jge
stos
pop
add
and
pop
ret
adc
pop
mov
pop
sub
jne
dec
into
jl
int
xlat
cmp
pop
out
bound
rclb
sbb
add
out
int3
cmp
loope
and
in
add
test
add
stc
jecxz
jle
inc
rclb
jno
jbe
ret
add
add
add
add
cmp
add
std
jmp
test
jl
ja
sbb
lahf
and
cwtl
jecxz
nop
push
fwait
repnz
lock
fnstsw
cmpsb
xor
add
mov
bound
jb
add
mov
test
lods
sbb
insb
mov
jle
outsb
aam
les
lods
inc
pop
mov
arpl
add
add
pop
ja
or
or
cmc
mov
push
xorl
inc
sub
mov
cli
pop
add
mov
add
fwait
jge
xchg
insb
jmp
mov
cmp
ret
cmp
loop
xchg
es
mov
add
je
popf
pop
push
inc
lcall
inc
mov
ficoml
add
dec
nop
rolb
add
mov
int3
add
out
and
cmpsb
add
sbb
pop
cmp
cmp
xchg
stos
call
jo
or
add
add
loope
scas
aam
lcall
xchg
lahf
add
mov
shlb
and
cmpl
test
ret
and
sub
cmp
sbb
lea
xlat
mov
xor
push
lret
cmp
data16
rolb
aaa
stos
mov
int3
decb
cmpb
inc
fwait
movsb
orl
nop
add
xchg
shlb
sub
mov
xchg
push
scas
cli
and
aas
cli
sti
imul
add
faddl
int
int3
ret
xchg
sbb
add
pop
mov
xchg
cmp
scas
xchg
sbb
mov
sti
repz
fnstsw
adc
or
inc
jmp
sbb
pop
push
gs
mov
add
dec
cli
insl
mov
and
andl
add
add
aad
dec
and
repnz
ja
add
stos
jle
test
test
add
mov
mov
xchg
jnp
or
sub
imul
lods
iret
mov
std
xchg
add
sub
or
add
dec
fwait
sbb
xchg
add
stc
aas
add
mov
daa
fidivs
repnz
pop
ljmp
lock
loopne
rcl
roll
cmp
jae
xor
addr16
sbb
xchg
ror
cltd
xchg
add
punpckhwd
adc
pop
inc
mov
sub
add
cmp
mov
in
xchg
mov
sbbb
xchg
ljmp
push
add
pop
adc
js
out
jns
addb
adc
cmova
jg
sub
jmp
add
addb
add
sub
lret
fistl
cmp
cmpsl
loopne
in
out
inc
add
scas
add
jmp
mov
pop
sbb
pop
ss
lods
push
add
adc
cmp
sbb
loope
clc
sbb
dec
pop
or
inc
aas
pop
xchg
adc
movsl
jp
pop
jle
xchg
and
repz
push
add
jp
lods
in
addr16
sbb
imul
xor
push
sar
mov
or
ja
jmp
sbb
cmp
mov
push
add
pop
jmp
insb
out
ss
pop
add
add
addb
inc
pop
inc
add
inc
loop
std
mov
lods
imul
cmp
aad
adc
or
movsl
add
cmp
popl
jg
mov
dec
sbb
mov
sub
and
call
mov
sete
pop
inc
mov
xchg
jle
out
arpl
and
mov
jae
mov
sbb
or
rclb
aas
add
aaa
add
cwtl
and
dec
mov
mov
in
scas
aad
pop
popa
arpl
push
icebp
cmp
rcrb
pop
mov
and
inc
pop
add
mov
das
js
in
adc
mov
subl
and
aas
cmp
cli
or
add
in
dec
and
mov
outsl
jo
mov
and
call
popf
dec
inc
push
jns
jbe
sub
mov
div
loope
je
fsubrs
sbb
rcl
leave
mov
mov
cmc
je
sahf
popl
push
mov
movl
fldl
imul
sub
add
iret
mov
dec
xchg
ret
adc
lea
jo
and
test
add
mov
aad
push
scas
cmp
ds
flds
pop
out
or
push
adc
lock
int
add
mov
mov
scas
pushl
nop
add
push
and
inc
add
xor
xor
ss
add
add
sti
push
xchg
lods
mov
jecxz
add
outsl
repnz
add
or
mov
mov
add
xchg
int
jo
sbb
mov
pop
sbb
add
nop
push
mov
mov
jmp
aam
imul
add
mov
add
xchg
add
ds
icebp
dec
roll
outsb
je
add
or
in
add
sarb
mov
add
imul
xlat
test
mov
mov
and
push
aas
mov
lret
push
xor
mov
push
sbb
push
pusha
rolb
jecxz
aad
push
mov
out
add
jg
fcomp
sub
mov
loope
icebp
xor
lahf
add
add
mov
stos
mov
sti
add
add
repnz
add
add
invd
rorb
dec
out
or
std
jno
sbb
push
push
mov
rcrl
xor
add
mov
fnstenv
inc
push
inc
sub
add
and
xor
xor
mov
fcmovb
xchg
adc
pop
dec
popa
pop
jp
out
shrl
add
push
cmp
adc
in
push
imul
xchg
xchg
cli
add
push
lds
jl
repnz
loopne
fildl
inc
and
sbb
outsl
or
cmc
lods
imul
stos
add
add
cmp
add
stos
add
lods
popa
mov
repnz
xor
sub
gs
and
mov
sbb
mov
cli
adc
add
loopne
aad
mov
call
mov
adc
outsb
push
cwtl
xchg
add
ret
jne
dec
inc
inc
repnz
xor
aad
push
ret
push
jp
je
pop
add
mov
mov
inc
jge
fsubs
iret
adc
das
addr16
movsb
add
and
pop
mov
mov
add
or
xchg
pop
jo
xor
add
add
add
pop
loop
xor
cmp
into
adcb
add
push
or
push
push
push
cld
pop
fs
sbb
add
mov
js
add
add
in
add
jbe
test
add
lea
cli
enter
add
lods
add
xchg
scas
mov
pop
fwait
jg
imul
or
sub
dec
arpl
push
inc
pop
sbb
orb
mov
sub
divl
sub
or
and
cmc
lret
cs
add
adc
clc
inc
leave
xchg
add
inc
insl
cli
inc
jne
xchg
lods
cmc
sub
inc
mov
je
jp
mov
dec
rcrl
cs
outsb
sub
ret
add
push
jge
add
int
fiaddl
jbe
loopne
add
mov
gs
fwait
insb
clc
mov
jmp
pop
mov
cmp
test
inc
mov
ret
hlt
add
ficompl
cmc
out
cmpsb
add
mov
cmpsl
pop
push
mov
fsubrs
pop
into
std
das
les
mov
jnp
imul
lock
mov
das
fists
movl
xor
add
add
xchg
dec
and
add
pop
sbb
fs
pop
js
add
mov
add
mov
dec
pusha
andb
add
sbb
mov
pop
mov
xchg
addl
or
push
pop
pushf
mov
imul
push
les
scas
cmp
flds
adc
rolb
add
and
loop
gs
add
imull
sub
add
movsl
dec
sub
out
jno
adcl
pop
icebp
pop
imul
cmp
pop
mull
cld
add
sbb
test
pop
dec
pusha
lcall
sub
sub
dec
movsb
add
fs
test
bound
call
std
arpl
mov
mov
push
pop
mov
xlat
out
stc
scas
imul
cmp
push
sbb
xlat
push
dec
cmp
popa
into
or
and
add
add
test
xchg
add
inc
push
scas
arpl
lods
call
add
test
add
jb,pt
pop
jns
jno
dec
sub
dec
jge
lock
add
ss
shl
rol
std
pop
hlt
dec
dec
mov
js
daa
dec
pop
add
fs
xor
adc
add
push
outsl
and
ss
push
popa
out
pop
mov
lahf
loopne
dec
cmp
mov
add
push
push
pop
paddsw
js
add
xchg
pop
bswap
add
loope
ret
add
jne
in
or
mov
push
ret
mov
add
add
aaa
ljmp
push
shr
add
lret
add
push
add
mov
cli
rcrb
cmp
sbb
mov
sarl
pop
and
sub
lahf
aad
fadds
inc
mov
fiaddl
cli
add
add
add
adc
jo
inc
pop
add
inc
sti
ret
push
mov
add
bound
sbb
lcall
insb
mov
mov
fnsave
adc
ljmp
xchg
xor
shlb
shll
cmp
in
test
and
movsl
add
add
jno
push
cs
data16
movsl
add
sbb
pushf
pushf
xchg
xor
aaa
mov
sti
scas
mov
lods
jge
lahf
add
lds
aad
loop
dec
inc
ja
dec
insl
add
out
cmp
es
cmp
rcr
mov
mov
sbb
jo
pop
jb
test
pop
ficomps
jno
mov
aam
jnp
inc
sarb
xor
out
std
sti
mov
adc
fldl
out
push
cmp
mov
mov
dec
out
aam
xor
adc
pushl
mov
mov
aas
and
xchg
push
ret
aaa
sbb
pop
pop
les
repz
ljmp
enter
add
fistpl
mov
mov
movsb
test
and
jno
fnstsw
add
jo
repnz
dec
fnstsw
push
add
cltd
add
sbb
mov
ljmp
aad
or
mov
shlb
and
mov
movsl
inc
imul
mov
mov
ljmp
clc
mov
out
add
enter
add
sbb
push
mov
add
mov
sbb
xor
adcb
mov
push
out
jge
adc
test
jae
dec
ja
xorl
fstpl
iret
sti
lret
mov
xor
cmp
lock
je
outsb
inc
or
lods
outsl
add
shr
cli
das
mov
fisubs
inc
aam
je
dec
sahf
into
sub
push
minps
icebp
rcll
add
leave
push
adc
je
fwait
aam
gs
push
pop
add
pop
data16
stc
popa
scas
out
push
or
add
or
mov
jg
add
jle
push
mov
mov
or
dec
test
and
adc
add
mov
xchg
push
xor
addr16
cmpsb
out
frstor
and
sbb
arpl
dec
mov
outsl
and
pop
icebp
jmp
out
mov
dec
bound
add
adc
cmpsb
cltd
imul
cmpl
cmp
fcoml
adc
pushf
add
jns
jae
mov
cmp
cmp
pop
call
xor
sub
dec
into
add
inc
lods
inc
sbb
mov
lock
loope
rcr
push
add
sub
mov
loopne
sub
int
outsb
fisubrs
push
test
add
scas
loopne
mov
dec
push
stc
add
add
arpl
out
lcall
clc
aas
dec
inc
push
pop
push
aam
adc
hlt
in
add
fwait
pop
fists
mov
mov
lds
add
sbb
lea
sbb
mov
xchg
add
xor
test
cmpsl
mov
mov
shll
xchg
inc
push
popf
stc
mov
loope
add
add
add
call
sbb
pop
mov
mov
mov
or
inc
mov
mov
add
mov
test
inc
stc
lret
lea
mulb
sar
push
popa
mov
add
in
loopne
adc
jns
lea
cltd
fwait
sub
pushf
sub
fwait
push
mov
add
mov
jle
xor
pop
dec
mov
jle
ret
jp
loopne
jnp
stos
xor
sbb
insl
stos
adc
imul
mov
or
push
xlat
jne
in
jo
inc
in
fwait
test
daa
in
divl
js
pop
jb
jnp
lret
loopne
inc
xchg
lock
outsl
jecxz
sbb
pusha
push
add
testb
jge
mov
mov
jle
pusha
cs
or
mov
inc
mov
aam
add
cs
add
jl
pop
mov
cmp
movsb
mov
adc
data16
mov
bnd
pop
dec
cmpb
je
adc
cltd
jbe
pushf
push
out
sarl
stos
xchg
add
pushf
add
adc
sub
insb
sub
add
shrb
dec
aam
push
cmp
ja
add
sub
inc
cltd
nop
cmp
arpl
xchg
dec
mov
mov
pop
in
cmp
mov
pop
jge
pop
add
mov
in
xchg
inc
aaa
fucomi
add
sbb
shlb
mov
imul
cwtl
jp
outsl
add
arpl
and
or
sub
in
roll
int3
mov
adc
loop
cltd
or
adc
xchg
sbbl
mov
ljmp
push
cwtl
cltd
and
ljmp
jae
xchg
das
pop
lcall
mov
adc
fisubs
jp
loop
mov
push
add
dec
sbb
push
mov
scas
outsl
lods
insb
aas
test
aam
ret
pop
adc
pop
cmp
xchg
cld
xor
das
stos
test
cltd
sbb
jp
stos
push
xor
sbb
inc
aam
mov
sbb
add
mov
insl
jp
add
clc
sub
xchg
movsb
repz
stos
pusha
addl
push
jge
mov
dec
scas
mov
cwtl
inc
add
push
es
faddl
inc
lret
lea
pop
addl
sub
movsl
add
mov
addr16
orb
lcall
mov
mov
imul
test
add
inc
pop
in
into
lods
pop
in
mov
pop
pop
mov
push
adc
flds
loopne
adc
inc
jle
xchg
bound
cmpsl
push
ret
pusha
cvttps2pi
movsb
pop
jmp
dec
dec
jecxz
add
add
add
into
push
add
das
dec
add
xor
ret
inc
in
jl
cwtl
add
fiaddl
xor
xchg
std
cs
bound
xor
adc
adc
test
add
sub
pop
mov
inc
data16
xor
movsl
clc
stos
jg
add
push
rcrb
in
fmuls
aam
add
xchg
int
mov
add
sarb
repz
aam
aam
out
jge
outsb
xor
push
push
and
mov
add
add
lock
stos
add
popf
xchg
sbb
insb
lock
sub
icebp
lds
icebp
lds
pop
test
mov
addl
and
lret
out
xchg
sar
mov
iret
loop
lahf
inc
cmp
sub
addr16
fwait
pop
leave
xlat
jecxz
mov
je
arpl
dec
push
or
xchg
pop
add
sub
add
shl
inc
sub
adc
xchg
outsb
leave
stos
cmp
out
xchg
jnp
ja
decb
pop
imul
icebp
or
push
sbb
cmp
push
pushf
jnp
push
add
stos
enter
mov
call
fs
xchg
addb
add
into
and
add
ret
jns
sarl
rcl
jp
dec
push
test
imul
mov
xor
cmp
scas
adc
aad
add
mov
add
pop
add
xchg
add
and
mov
add
mov
mov
ss
adc
in
mov
pushf
mov
cmp
add
mov
imul
gs
js
push
add
push
ret
lcall
inc
leave
pop
dec
fsts
mov
add
aas
mov
clc
sub
add
test
pop
dec
popa
out
add
imul
arpl
push
add
jle
cmp
scas
mov
pushf
cmp
lods
enter
fisttpll
movl
mov
out
add
ficoms
movsl
addr16
sub
add
clc
inc
add
cmp
imul
lahf
mov
sub
add
cmc
inc
int
or
aam
jno
push
shll
and
aam
rcll
out
mov
and
xchg
jns
xchg
xchg
rorl
and
jo
lea
add
mov
and
lea
jae
mov
add
out
mov
add
or
cmp
and
xchg
add
xlat
and
cmp
fdivl
mov
and
add
inc
sbb
xchg
push
addb
cmc
pop
push
pushf
imul
push
jne
ss
sbb
test
nop
loopne
add
pop
es
push
test
add
pop
xchg
insb
mov
xor
push
push
ja
and
mov
out
shlb
aas
ret
inc
jbe
leave
add
jns
adc
mov
pop
add
mov
adc
test
aaa
inc
stos
add
fcoms
pop
fsubrp
mov
or
cmp
data16
insl
ret
add
out
cld
fmull
imul
add
fidivrs
cmovl
dec
xor
xchg
flds
jb
inc
fs
add
jmp
dec
pop
dec
push
adc
adc
aam
mov
rcrb
dec
shlb
ret
jo
sub
ret
fnstsw
push
mov
xchg
sub
add
push
or
and
pop
outsl
lcall
ss
in
inc
ja
add
js
jmp
lods
xor
mov
inc
pop
ljmp
mul
push
mov
mov
insl
xchg
jecxz
fiaddl
add
adc
sub
ret
and
inc
and
fisttpll
push
add
dec
mov
add
or
popa
jns
push
pop
push
mov
cmpl
insb
cwtl
add
mov
jns
add
xchg
mov
push
popl
in
inc
push
mov
inc
add
mov
add
jmp
sub
pop
repnz
popf
inc
mov
add
fmull
xor
scas
in
dec
xlat
repnz
add
pop
bound
fsubrs
push
pop
gs
xchg
and
xor
jg
ljmp
je
mov
mov
jg
add
cmp
push
mov
xchg
xlat
adc
sub
dec
and
push
and
add
int3
subl
mov
add
xor
out
out
cmp
aam
movsl
adc
fisubs
and
into
or
icebp
lods
pop
add
mov
ds
andl
mov
push
in
stos
dec
mov
movsb
or
mov
push
mov
push
mov
dec
jecxz
js
nop
push
add
ficompl
dec
jge
mov
jb
loopne
dec
add
jecxz
ds
add
and
xchg
fmulp
jle
ljmp
sbb
push
jge
sahf
aas
xchg
add
push
lahf
jns
mov
call
ja
sahf
mov
xchg
lret
stos
std
out
aas
and
add
push
loope
rolb
inc
mov
out
enter
mov
jno
mov
sub
fwait
mov
lret
clc
mov
or
mov
xor
mov
mov
adc
aaa
shl
cmpsl
leave
inc
into
imul
push
mov
jmp
mov
xchg
outsb
xor
mov
dec
fiaddl
les
add
push
mov
mov
add
cmpsl
add
aas
mov
sbb
fldl
es
icebp
push
push
inc
insb
mov
fwait
add
push
gs
jnp
dec
mov
cmpsl
mov
je
mov
aas
out
add
jp
ja
mov
or
adc
pushf
test
mov
sbb
pusha
fcompl
out
push
lea
out
fstpl
lock
popf
out
out
sbb
addr16
sbb
shlb
dec
add
add
mov
dec
sbb
add
repz
in
lea
sarb
add
push
gs
in
cs
scas
mov
xchg
and
and
clc
xchg
imul
pop
sahf
xchg
lea
pop
xor
add
outsl
jno
std
mov
cmp
push
faddl
jno
addb
inc
adc
rorl
scas
out
sub
aaa
pushf
and
es
adc
and
insl
jne
push
mov
gs
jmp
and
jae
and
mov
mov
adc
or
push
repz
dec
pusha
iret
add
adc
or
arpl
mov
and
cmp
xchg
dec
xchg
pop
dec
add
mov
fwait
test
rolb
and
lock
clc
dec
add
out
push
and
sub
xor
cltd
test
sbb
jb
pop
jp
mov
dec
stos
fdivl
xor
cmp
fwait
and
cs
lret
cmp
jnp
sub
daa
add
add
ja
mov
pushf
push
add
and
fldenv
or
xor
int3
stos
fwait
jmp
pop
dec
dec
scas
lods
test
and
jecxz
cmpsb
arpl
nop
sbb
or
call
mov
shlb
jae
add
and
sub
add
pop
insl
jns
mov
movsb
repnz
xchg
mov
cmp
cltd
dec
dec
add
add
iret
add
sbb
jecxz
inc
mov
ds
pusha
xchg
movsl
and
aam
push
xor
fcoml
inc
xor
or
inc
dec
inc
mov
push
shlb
jno
addr16
fld
mov
ss
jmp
sub
es
mov
inc
adc
mov
ret
insb
les
fcompl
dec
add
lea
or
arpl
or
add
test
rcll
cmovae
cs
mov
pop
jne
es
lock
xor
roll
lret
mov
push
sbb
clc
push
jno
les
lea
jnp
add
aad
fwait
xor
jmp
std
aaa
rcrl
push
les
add
sbb
pop
and
fidivl
mov
cmp
inc
lahf
jecxz
inc
cs
adc
cld
popl
push
dec
cmpsl
add
mov
js
push
out
dec
ret
pop
mov
jbe
stos
aad
roll
pop
cli
add
mov
jp
insl
add
movsl
xchg
and
out
dec
xor
sub
push
decl
cwtl
or
mov
add
cmp
popa
repnz
pop
adc
cmc
xchg
cmpsl
pop
inc
add
add
add
xor
mov
inc
sub
mov
inc
add
push
adc
es
jmp
pushf
or
addr16
aaa
inc
incl
jge
xchg
addb
add
mov
mov
lahf
or
stc
outsb
nop
sub
fdivs
add
add
std
pop
out
jae
insl
add
ljmp
cmp
jo
mov
xor
dec
add
jg
dec
test
inc
pop
xor
or
repz
lods
movsl
add
mov
stos
dec
jge
jmp
repz
add
or
add
ret
into
mov
add
rcrb
loope
dec
movsl
jns
or
shlb
cvttps2pi
add
call
js
mov
ficomps
mov
sub
add
add
out
add
testl
out
add
test
cmpsb
sbb
dec
fldl
jp
xchg
jno
sbb
out
add
loop
xorl
inc
dec
leave
xor
aam
jne
inc
mov
pop
ret
push
mov
jmp
mov
cmp
cmp
sub
insl
mov
fmul
popa
add
loopne
fidivl
in
fcos
jns
inc
mov
scas
pop
das
into
jge
in
xchg
add
push
or
add
test
int3
test
test
add
add
fwait
add
pop
add
add
pop
aam
lcall
push
lcall
ficomps
jo
in
in
lods
and
cltd
dec
incl
scas
mov
test
popa
pop
mov
mov
mov
mov
add
mov
add
testl
lock
lcall
mov
adc
pop
and
add
into
xor
push
movl
push
sub
xor
dec
pop
rorb
pop
hlt
loopne
push
notl
sub
fs
xchg
lods
ljmp
add
aas
pop
add
jmp
fidivs
ds
je
sub
pop
repz
push
pop
sbb
push
cwtl
jp
jnp
cmp
add
add
add
outsl
sti
add
rcrb
fwait
cmp
xchg
push
cmp
cmp
ret
add
sbb
lods
inc
adc
cmp
enter
add
jae
dec
mov
lea
push
xchg
mov
in
or
ja
std
daa
and
add
or
add
out
nop
pop
sub
shll
lahf
push
incb
loope
xor
add
scas
aam
cmp
add
ss
shll
imul
in
loope
ret
cmp
cmp
loope
je
stos
nop
dec
dec
sbb
add
add
scas
push
js
add
imul
cmp
xor
add
lret
dec
test
test
add
arpl
add
xor
dec
push
imulb
outsb
inc
jl
push
pop
mov
mov
mov
add
shl
sub
xchg
rcr
jne
add
ret
mov
pop
pushf
jle
mov
jl
mov
add
pop
imul
or
xor
rcl
push
and
mov
jecxz
cli
jns
dec
jmp
or
add
inc
lock
bswap
pop
icebp
mov
push
push
add
mov
jno
add
cmc
xchg
xor
rorl
lahf
jns
or
call
fildll
and
lret
rol
jp
cmp
xor
dec
cmp
mov
rcrl
es
add
cmc
cli
cltd
sbb
lret
lahf
mov
mov
push
add
imul
xchg
cmp
mov
xchg
xchg
scas
pop
jg
loopne
popf
out
add
mov
mov
rolb
jmp
add
shll
shl
mov
jo
add
add
call
jno
pop
int
push
xchg
push
push
add
out
call
icebp
hlt
loope
and
add
add
add
add
pop
adc
fcomi
xlat
add
pushf
jbe
imul
push
ret
cmpsb
add
mov
ror
int3
xor
outsb
out
add
add
jg
in
out
lds
iret
jecxz
mov
popf
mov
add
test
outsl
xchg
inc
pop
loope
sub
push
inc
push
adc
xchg
jmp
movb
add
mov
jmp
xor
push
jnp
mull
or
xor
sti
sub
outsl
jbe
jg
add
aad
in
adc
nop
add
mov
ja
rcll
int3
nop
loopne
in
outsl
add
jg
push
lret
loopne
mov
jbe
mov
stc
jns
ffree
aas
fs
cli
pusha
or
lret
int3
mov
or
inc
inc
cltd
pop
add
loopne
movb
lcall
insl
add
push
mov
mov
add
push
rolb
add
mull
ljmp
inc
or
adc
adc
ja
sub
pop
lds
xlat
in
jge
popa
andl
add
outsl
mov
fwait
and
dec
ljmp
icebp
pop
sbb
add
aas
imul
aaa
mov
add
sub
incl
ja
mov
jne
inc
jmp
movsl
add
test
pop
and
outsb
data16
add
jne
outsl
arpl
pushf
dec
and
xor
cmpsl
daa
xchg
mov
fsubr
mov
add
test
sub
add
cmp
adc
movsb
repz
add
aaa
mov
xor
enter
lret
jo
imul
iret
movsl
les
loope
pusha
cmp
mov
and
scas
xorl
cli
add
imul
jno
mov
inc
add
lds
daa
pop
add
mov
aad
xchg
pushf
mov
fiadds
imul
test
lods
daa
xchg
add
push
lahf
leave
add
add
add
stos
test
in
pop
jmp
test
ja
les
test
sub
adc
add
out
xlat
hlt
sbb
arpl
and
jnp
mov
push
mov
sbb
je
dec
js
inc
inc
jp
jne
jg
pop
lock
jl
jmp
jnp
stos
jno
popa
repz
int3
xchg
rcrl
out
push
pop
hlt
popa
xchg
cmpsb
dec
inc
stos
jae
lods
lahf
mov
lea
and
rorb
pop
aad
sub
stos
add
ltr
pop
fs
js
fiaddl
add
add
enter
insl
mov
add
xchg
dec
dec
mov
add
out
push
cmp
ja
sub
mov
add
cs
les
hlt
shr
add
adc
add
lds
test
push
pop
sti
pop
cmpsl
push
hlt
mov
shll
cmp
mov
shr
lret
cld
cli
rcl
inc
orl
lret
and
cld
xor
jle
push
bound
call
loopne
ror
cmpsb
mov
xor
jne
or
pop
aam
push
in
push
hlt
pusha
add
sbbb
lods
pop
add
cmp
in
pop
cld
mov
arpl
sbb
imul
xor
cmpb
jge
cmp
loope
cmpsb
dec
and
push
add
leave
mov
arpl
pop
roll
frstor
outsb
cmc
or
pusha
mov
jg
jne
out
add
ds
je
inc
stos
test
out
dec
andl
xlat
in
addl
cli
outsl
mul
mov
adc
clc
add
stos
inc
in
loop
add
mov
subl
aam
stos
inc
loope
fucomip
push
aad
dec
add
and
inc
cmp
mov
pcmpeqb
jo
add
sub
xchg
add
xor
add
push
inc
push
add
adc
sub
lock
jl
ret
fisttpll
mov
fcmovu
sub
shlb
je
jnp
fstps
mov
lret
je
add
xchg
test
lods
xlat
mov
add
adc
jno
add
out
clc
inc
test
and
in
leave
add
sub
dec
or
outsb
dec
faddl
repz
outsl
cmp
dec
or
lds
mov
mov
nop
leave
add
out
popf
inc
lret
vpsrad
fsubs
in
icebp
imul
add
call
jmp
fwait
roll
div
pop
xor
pushl
adc
scas
push
lahf
lea
dec
adc
add
xchg
mov
and
imul
or
popf
divl
mov
scas
dec
xor
xor
fildl
xor
ljmp
lret
jl
outsb
loope
ret
nop
cwtl
fcompl
add
mov
out
add
mov
add
add
mov
test
jae
and
adc
test
clc
mov
add
js
pop
clc
dec
pop
push
xor
cltd
insl
aad
mov
stos
or
int3
sbb
out
nop
sbb
add
stos
int3
add
cmp
int
stos
push
test
pop
cltd
pop
loop
xor
add
rcll
sahf
dec
xor
xchg
xchg
ljmp
lods
add
or
arpl
ficompl
add
push
inc
in
push
sarl
mov
mov
lcall
add
rcl
adc
jns
pop
popf
push
loope
add
mov
mov
add
cmpsb
lret
mov
rolb
inc
pusha
pop
test
inc
mov
int3
mov
in
adc
jp
aam
imul
dec
inc
fstps
add
and
sbb
scas
push
dec
jg
pop
add
je
orb
cmp
nop
adc
pop
loop
lods
sarb
js
inc
cs
inc
add
fs
jle
add
add
movsl
cld
jle
xchg
bound
cmp
sbb
cli
xlat
jl
test
add
lea
test
dec
int
mov
inc
cmpsl
stos
pop
sub
into
mov
sarl
rolb
inc
sub
loop
dec
dec
push
nop
insl
out
add
pop
xor
add
sbb
lods
pop
xor
inc
movl
movsb
jg
pop
out
lret
data16
add
push
out
fwait
movsb
jg
mov
scas
filds
sbb
xchg
mov
and
pop
add
jb
shll
add
aad
add
xor
jne
fdivl
movsl
inc
iret
nop
pop
jns
repnz
mov
mov
nop
xchg
sub
adc
in
jge
fsubrl
shlb
add
add
lock
or
js
cmp
inc
out
sbb
imul
mov
adc
xchg
in
adc
stc
sbb
mov
add
jb
cmpsb
sahf
dec
addr16
dec
cld
js
pop
hlt
je
sbb
and
add
popa
mov
mov
clc
cmc
cmc
xchg
mov
and
adc
shr
add
stos
add
pop
xor
cwtl
mov
pop
dec
inc
add
xchg
sbb
ja
mov
or
in
adc
add
pop
mov
and
cmp
push
fiadds
jbe
imul
test
out
adc
fs
inc
and
lods
loop
cwtl
mov
and
xchg
add
cmp
nop
aad
push
mov
add
push
or
adc
jl
adc
dec
arpl
fwait
popf
call
lcall
xor
mov
sub
icebp
js
cmp
addr16
mov
xchg
fistpll
in
mov
and
xor
pushf
add
mov
add
mov
or
or
or
add
xor
mov
adc
or
pop
mov
and
lcall
push
mov
dec
add
or
xlat
in
jp
dec
cli
sub
aaa
sub
js
sbb
adc
add
ds
cmp
sbb
iret
scas
dec
mov
add
stos
out
sbb
jno
aam
mov
lods
outsl
mov
mov
add
daa
outsl
xor
add
add
sbb
dec
sub
add
and
fldcw
lea
orb
lret
andb
pop
inc
insb
fwait
dec
arpl
cltd
rcll
add
add
add
jnp
cmp
pop
pusha
or
stos
sub
divl
adc
cwtl
lea
or
jmp
add
and
push
sub
pushf
add
sahf
cmpsb
jg
jnp
sbbb
je
repz
dec
mov
mov
cmp
mov
mov
add
mov
cmpsl
add
and
icebp
add
fildl
mov
pop
es
add
nop
mov
add
xlat
scas
movsl
mov
cld
movsb
adc
hlt
add
pusha
mov
adc
pop
fadd
push
or
sahf
popl
pop
or
shl
pop
add
push
add
xchg
add
int3
add
pop
pop
add
inc
ret
mov
stos
data16
pop
icebp
test
das
test
adc
pop
pusha
or
push
fisttpl
and
add
push
xchg
out
mov
inc
icebp
jmp
std
or
js
xor
and
jb
dec
xchg
inc
stos
push
push
mov
imul
add
negb
adc
and
add
inc
lods
pop
sbb
sub
lods
ja
pushf
movsb
sti
test
enter
in
shrl
xor
pop
lds
flds
cmp
in
loope
test
outsl
push
pop
add
add
mov
add
and
dec
sub
testb
xor
dec
call
std
add
in
int3
dec
push
pop
lea
add
aaa
pop
adc
cmp
test
add
dec
ror
cmpsb
add
dec
add
arpl
mov
cmpsl
and
jp
mov
aaa
jne
add
mov
nop
sbb
mov
and
cmp
outsl
sub
mov
outsl
imul
aam
in
xchg
test
cmc
or
add
jge
mov
mov
sbb
mov
pop
imul
loopne
cmpb
loopne
sub
push
add
push
jmp
fucomip
dec
inc
sbb
sbb
or
iret
clc
xchg
addl
add
pop
xchg
inc
and
sbb
aad
in
mov
js
jge
outsb
popa
ljmp
jge
push
hlt
roll
dec
mov
imul
push
cmpsb
ret
dec
add
jbe
adc
xor
stos
add
dec
cmp
jmp
cmp
aam
jp
pusha
add
dec
pusha
adc
add
jns
lahf
jge
es
or
push
jp
pop
add
add
mov
mov
bound
add
mov
inc
sbb
fcoms
push
inc
imul
shrl
mov
lock
int
or
popf
cwtl
mov
sbb
or
xor
lret
insb
jle
aad
mov
mov
fwait
pop
sahf
out
dec
jl
cmpsl
addr16
adc
dec
test
add
lcall
popa
lods
push
xchg
and
leave
or
add
xchg
add
mov
out
inc
add
add
sbbb
or
dec
add
xor
sahf
roll
into
pop
add
push
ds
pushf
les
std
je
mov
mov
jl
fsubrs
stos
or
aad
clc
adc
xchg
pop
inc
xchg
mov
pop
add
std
outsl
data16
dec
and
mov
sub
or
pop
les
les
add
incb
scas
das
call
xchg
adc
lcall
test
jbe
pop
in
push
add
pop
pop
jbe
pushf
fst
lret
add
pop
mov
jecxz
inc
push
add
pop
pop
jno
sub
cmp
mov
jmp
pop
leave
lods
jge
dec
mov
inc
add
in
pop
imul
xchg
add
std
add
ficomps
mov
add
jmp
and
push
sub
mov
mov
lret
xor
scas
nop
sarl
fs
xchg
call
xor
lret
add
insb
jecxz
xlat
pop
mov
gs
mov
mov
repz
add
or
push
add
or
push
jl
icebp
add
mov
int3
mov
adc
and
and
xchg
jno
cmp
loope
and
rorl
andl
inc
pop
push
movsb
mov
add
add
lock
scas
call
add
or
into
jbe
dec
andl
add
and
dec
add
cmc
lret
or
add
mov
dec
cltd
add
imul
jge
lods
les
add
add
in
in
or
pop
pop
mov
seta
ljmp
test
jmp
in
in
mov
push
orb
js
negl
jo
jl
mov
xor
add
or
add
or
mov
mov
sub
jb
jle
mov
in
sub
push
nop
lret
add
add
scas
cwtl
movsb
clc
pop
cmp
mov
cmp
insb
add
stos
cmpsb
insb
and
imul
xor
adc
push
cmpsl
aaa
jl
push
and
bound
add
mov
outsb
andb
jg
push
add
add
or
jmp
and
loop
and
and
xchg
test
xor
or
iret
push
or
int3
in
push
add
mov
add
mov
mov
int
mov
mov
push
mov
mov
enter
lcall
xor
sub
stos
cmp
movb
es
out
loopne
mov
lods
push
fimull
xor
test
nop
mull
dec
out
pop
add
outsl
dec
cltd
mov
sbb
les
mov
mov
push
outsl
inc
pop
cmp
push
lahf
push
pop
add
cmp
inc
mov
dec
data16
lcall
repnz
data16
lahf
jp
add
pop
cld
adc
adc
cld
xor
adc
mov
dec
pop
ja
jae
cmp
or
insl
add
lret
push
add
icebp
sti
cmp
mov
add
pushf
roll
out
mov
push
cmp
inc
and
inc
push
add
sbb
ret
nop
jnp
mov
pop
fs
repnz
aad
push
pop
inc
fstpl
and
inc
not
cmp
js
in
pop
adc
mov
push
jno
icebp
sbb
sahf
mov
lds
add
jnp
or
xor
push
push
inc
movsl
xor
inc
jno
add
addr16
pop
jno
into
scas
xchg
pop
push
or
add
mov
mov
add
lcall
mov
rcr
jg
imul
repz
add
jg
data16
call
data16
out
outsb
dec
adc
fs
xor
aas
mov
fstpt
ret
les
fistpll
popa
mov
ja
pop
xor
mov
movsl
lds
and
inc
ljmp
xchg
outsl
jne
test
popf
add
xor
fisubrl
xor
cmp
pusha
lahf
inc
add
call
leave
int3
lret
add
ljmp
pop
dec
ss
ljmp
add
xchg
popa
outsl
mov
xchg
sbb
or
mov
jl
mov
cmp
mov
jge
in
pusha
push
mov
int3
sti
or
and
add
hlt
sbb
mov
mov
fsubrs
add
cmpsl
mov
mov
add
xchg
out
xor
cmp
fst
inc
aad
inc
dec
lcall
add
sbb
and
lret
das
sub
outsb
cmp
add
daa
scas
cwtl
mov
das
push
and
jb
or
aam
add
sbb
push
xchg
nop
imul
adc
dec
inc
out
and
shrb
sbb
and
mov
add
add
add
test
paddusb
aaa
dec
cli
xchg
xor
sub
sbbl
add
cmp
mull
xchg
pop
add
pusha
roll
cmp
dec
mov
mov
pusha
adc
imul
add
or
add
movsl
test
shrl
dec
sub
lods
jnp
mov
mov
jne
xchg
leave
pop
inc
stos
lods
and
xor
popl
lds
sub
add
mov
push
inc
mov
cmp
add
jbe
push
popa
mov
push
sbb
in
rorw
movsl
psubq
add
pop
in
shlb
imul
push
jae
ds
decl
dec
or
stc
dec
dec
ret
fwait
ud1
add
jp
add
mov
and
daa
dec
jne
fistpll
in
push
push
adc
jne
add
or
mov
cmp
add
pop
pop
dec
popl
add
push
notb
jno
sbb
sbb
in
jo
in
add
cltd
fdivl
mov
sub
add
add
lods
sti
add
mov
dec
mov
add
xor
jbe
dec
imul
jo
icebp
iret
ret
xchg
add
and
data16
pop
pop
add
int
sbb
jmp
test
push
add
clc
out
lea
mov
or
pop
jb
cwtl
pop
add
sub
sbb
add
cmpsb
stc
test
and
cld
mov
pop
add
add
push
cmp
pop
stc
not
sub
iret
or
enter
add
int3
ljmp
divl
add
add
jne
add
ss
movb
sbb
cmp
or
add
mov
xor
push
fwait
out
aaa
add
into
add
mov
lret
mov
mov
cmp
mov
sub
fdivrl
leave
outsb
idiv
aaa
push
repz
or
aaa
push
movsl
dec
fldl
fwait
pop
xor
cli
loop
sar
cld
iret
popf
adc
stc
notb
push
insl
mov
push
fidivs
add
sub
pushf
jo
add
jns
fnsave
loop
das
inc
inc
sub
fwait
mov
mov
mov
mov
mov
imul
add
insl
pop
ret
and
mov
push
add
shll
jne
cmpsb
add
lret
cmp
dec
jns
mov
push
xchg
je
movsb
push
mov
fdivp
popf
add
jmp
cld
xor
xchg
les
out
pusha
sbb
push
sahf
and
popa
stos
popa
adc
insl
jo
add
dec
add
pusha
xor
cmp
xchg
mov
mov
out
mov
aas
push
pushf
testl
insl
add
add
sub
test
or
test
mov
pop
xor
cmp
lret
lock
add
ret
out
cli
mov
add
fwait
cmp
stos
jmp
cmc
sar
add
add
add
xchg
sub
mov
mov
aam
je
mov
cmp
fsubs
add
mov
in
sub
add
fdivrs
lods
xchg
and
jl
mov
sbb
pop
xchg
bound
in
cltd
in
dec
inc
ret
add
mov
pop
mov
xchg
arpl
mov
sbb
inc
mov
mov
jo
loop
int
mov
sub
pop
add
push
mov
jmp
cld
xor
add
push
adc
xor
adc
and
jle
imul
nop
js
xchg
outsl
insb
mov
push
or
add
out
dec
int
out
aaa
jbe
and
ljmp
or
fistpl
sbb
jae
icebp
rorl
es
inc
mov
add
mov
in
in
imul
and
ret
out
jns
pop
sbbb
xorb
push
scas
push
cmp
mov
add
test
shl
loopne
add
imul
mov
push
cmpsl
mov
testb
sub
aaa
push
push
xchg
add
sbb
mov
add
lods
jne
rol
push
cmp
imul
dec
push
xor
add
mov
sbb
movsl
xchg
add
sbbb
sub
push
lahf
shll
jnp
push
xchg
cltd
aaa
pop
call
or
push
xchg
push
inc
stos
into
lahf
and
xlat
pop
add
sbb
pop
add
mov
inc
add
bound
dec
out
or
outsb
ror
scas
inc
jno
in
in
mov
outsl
dec
xchg
mov
xchg
testb
jae
adc
das
xor
or
lahf
mov
pop
out
dec
movsb
add
in
add
addl
stos
jmp
inc
fwait
testl
sub
popf
and
sarl
int3
subl
mov
xchg
xor
pop
inc
xchg
aam
scas
clc
add
push
int
push
xchg
orl
ljmp
mov
int3
xchg
faddl
outsb
jnp
adc
push
leave
aaa
or
jb
add
mov
push
xor
add
pop
push
movsb
or
sarb
jg
shlb
call
cmp
add
nop
and
add
cmpsl
or
add
ret
lret
add
pop
dec
lods
popa
popa
and
cs
dec
add
or
enter
xlat
adc
pusha
in
es
jae
mov
mov
pop
pop
add
cwtl
add
add
add
jl
dec
adc
xchg
xor
call
je
subb
aaa
int3
adc
push
pop
add
dec
add
hlt
or
push
les
loop
pop
sub
mov
xchg
mov
loope
add
pop
mull
xchg
aad
shlb
rolb
jno
mov
add
jmp
lret
nop
and
das
ja
es
int
int3
fdivrl
rorl
mov
inc
popl
push
mov
test
xchg
push
fwait
add
leave
xchg
push
add
imul
cvtpi2ps
adc
and
sarb
repnz
fiaddl
add
popa
add
es
mov
mov
sbb
dec
mov
arpl
lds
xor
pop
popf
and
cmp
movsb
dec
xchg
lahf
das
fstpl
movl
stc
pop
jmp
ds
xor
imul
or
cmp
ret
test
adc
jg
push
xor
sbb
mov
cmpsl
dec
stos
add
aas
inc
fadd
xchg
stc
fnstsw
add
add
sub
fists
or
add
fcmove
inc
pop
filds
xor
add
das
dec
jmp
mov
in
push
sarl
inc
addr16
and
add
push
je
cmpsb
jnp
ret
xor
mov
jmp
lds
js
incb
pusha
add
and
ret
jg
push
dec
pop
adc
push
out
mov
jge
ja
and
lock
mov
sub
push
test
loope
sub
sub
add
insl
stos
or
pop
push
leave
movsb
xor
gs
adc
arpl
pushf
sub
repz
call
xchg
push
adc
clc
repnz
cwtl
shll
sbb
xchg
fildl
fsubrl
mov
add
imul
aaa
sti
add
cmp
dec
fiadds
mov
add
fwait
sbb
mov
add
iret
test
aam
rolb
inc
mov
xor
mov
addr16
dec
push
inc
jnp
adc
cli
das
sbb
std
pop
cmp
sbb
mov
mov
incl
rorb
sbb
cmpsb
push
pop
sbb
test
jg
mov
inc
add
jo
gs
jns
xor
dec
xor
xlat
xor
add
cmp
add
mov
outsb
testl
out
out
ljmp
cwtl
int
ss
push
fisttpll
hlt
jg
adc
lahf
fwait
je
sbb
mov
loope
cmc
pop
cmc
mov
call
leave
cmp
in
cmp
sbb
mov
outsl
xor
repz
push
insl
sbb
add
mov
pop
pop
cmp
pop
data16
add
fxch
xor
and
mov
out
test
sahf
push
mov
div
add
mov
cmpsb
mov
sbb
mov
test
jl
add
and
push
add
addl
pusha
pop
and
jns
pop
xchg
ljmp
add
std
add
xchg
and
push
mov
fwait
shl
xchg
cltd
pop
add
ja
jb
int3
sub
jmp
repz
sbb
adc
xchg
xchg
arpl
pop
push
lret
pop
mov
into
flds
pshufw
sub
test
lods
and
xchg
mov
and
insb
gs
imul
shll
or
inc
inc
add
icebp
or
rolb
xor
and
add
stos
lods
std
fucom
ss
pop
fwait
sbb
xor
and
cmpsl
jge
jne
sub
jmp
jecxz
and
dec
les
push
in
cmc
sub
sub
shll
jp
mov
add
add
add
in
mov
and
cli
inc
add
add
dec
mov
enter
adc
push
sbb
into
inc
in
decb
lcall
stos
sub
rolb
test
lds
aaa
cmp
jp
pop
jo
ret
out
pushf
popf
xorb
sarl
dec
imul
mov
jne
inc
lock
mov
cmpsb
mov
stos
push
sub
inc
jl
lret
jge
jae
xor
pop
add
dec
sahf
adc
jne
out
test
xchg
into
xor
sub
sub
push
push
and
scas
insb
daa
mov
sub
add
filds
outsl
dec
rolb
push
shrl
push
pop
cmpsb
mov
popl
inc
add
in
popf
adc
add
call
lock
pop
xor
lahf
aam
call
push
add
and
add
pop
adc
and
or
and
adc
or
pushf
add
in
insl
in
enter
mov
outsl
fs
std
add
add
in
repnz
mov
sub
sub
and
xor
enter
es
add
sub
push
xor
add
sbb
addr16
mov
push
or
dec
shll
dec
test
mov
stos
add
or
pop
scas
adc
xchg
and
lret
enter
fwait
cmp
mov
xchg
call
mov
int3
add
jecxz
mov
adc
add
mov
add
add
cld
inc
and
mov
sbb
or
lea
mov
mov
push
int
adc
cli
and
lods
data16
popa
and
add
fs
enter
les
lahf
fists
movsl
jp
rclb
add
mov
xchg
shrl
add
or
pusha
call
gs
mov
jns
mov
xchg
mov
popa
or
add
sahf
jle
mov
fisttps
mov
incb
cmc
in
adc
outsl
popf
jo
in
stc
pop
dec
stc
add
jb
outsb
jmp
and
adc
repz
jns
add
les
or
jo
push
xchg
ss
arpl
xchg
popl
push
pop
fldl
loop
mov
arpl
mov
popf
mov
mov
stc
adc
dec
add
fs
mov
das
add
inc
in
cmp
pop
add
icebp
mov
mov
aad
dec
mov
mov
ja
hlt
cmp
push
sar
and
sbb
add
push
shlb
out
hlt
add
movsb
cmpsb
xchg
cld
pushf
movsl
sbb
dec
dec
sub
inc
int
xor
xchg
dec
adc
data16
mov
loop
fiaddl
jno
sbb
loop
lea
popl
es
add
add
pusha
or
pop
testb
add
xchg
outsb
push
jp
cmp
and
push
pusha
fprem
inc
jg
jno
js
mov
push
cmpsl
lcall
mov
stos
and
mov
sbb
int3
cmp
push
frndint
fcmove
adc
stos
imul
jg
insb
mov
fs
sbb
xchg
add
push
rorb
add
sbb
inc
cwtl
add
xchg
inc
pushf
aad
pop
add
stc
inc
pop
inc
cld
add
sub
psrad
adc
or
mov
xchg
ds
xor
xchg
xor
jmp
in
stos
imul
push
add
iret
add
icebp
clc
clc
into
pusha
popa
sub
add
pop
popf
jmp
inc
mov
data16
cmpsl
je
sbb
test
lret
or
sahf
jecxz
sbb
je
mov
cmp
int
xor
sub
inc
jae
inc
hlt
cli
dec
test
enter
test
lcall
rolb
shrb
out
mov
lock
jg
loopne
cmp
inc
xorb
fstpt
jge
add
jnp
stc
push
push
jecxz
add
orl
or
mov
repnz
fsub
mov
jecxz
mov
fldenv
mov
mov
adcl
fidivs
xchg
bound
add
adc
fiaddl
mov
xchg
or
test
lods
mov
adc
jae
push
push
sub
and
stc
movsl
lds
lods
jbe,pt
mov
imul
or
pusha
add
add
rcrb
ljmp
dec
mov
mov
rcll
xchg
out
dec
imul
jnp
loopne
add
sub
push
jbe
mov
lods
or
and
test
add
mov
add
stos
out
lahf
lret
insb
pop
cmpsb
jne
jnp
add
jno
add
in
imul
mov
out
lods
mov
mov
in
sbb
movswl
mov
add
add
adc
fwait
add
cmp
testl
imul
loopne
add
shll
sbb
inc
mov
repz
imul
popf
ja
xchg
ucomiss
out
and
sbb
add
daa
lods
add
mov
push
es
decb
loope
add
inc
add
pop
add
into
movsb
add
add
xor
jnp
popa
adc
push
je
add
adc
xchg
cmp
lods
inc
add
dec
icebp
jge
pushf
push
es
shlb
xchg
stos
insl
add
cmp
in
and
int3
out
scas
cmpsb
mov
in
add
xor
inc
js
add
add
lea
jecxz
dec
add
adc
pop
add
add
shl
ret
pusha
es
inc
add
test
add
js
cmp
fs
xchg
lret
add
je
pop
outsl
cmp
pushf
ss
add
int
lahf
pop
sbb
adc
inc
cmpsl
sahf
push
enter
cli
xor
jne
rcll
add
add
in
lods
sbb
dec
add
out
mov
ret
push
lret
add
mov
lret
mov
stos
dec
int
adcl
mov
fsubrl
mov
cmpl
and
add
add
push
jecxz
into
adc
ret
add
mov
fisubrs
dec
jl
xchg
add
xor
lea
pop
add
into
jl
cmp
xchg
out
xor
adc
push
add
aad
mov
mov
outsl
add
sub
add
test
xchg
push
mov
lea
sbb
fdivrs
dec
cli
mov
loope
lds
enter
pop
jae
or
add
js
xor
jge
add
push
test
pop
jae
xor
adc
xor
jnp
or
mov
add
xor
jl
icebp
and
and
lret
sub
adc
adc
inc
add
sahf
add
adc
jle
mov
push
inc
out
adcb
cli
mov
inc
test
mov
int3
push
scas
sub
add
test
sti
aam
les
xor
push
add
xor
adc
adc
in
jmp
jb
out
dec
cs
pop
jno
insb
outsb
hlt
add
divb
mov
add
data16
push
inc
add
repz
lds
rorl
jne
gs
mov
push
and
xor
add
and
xor
das
std
mov
in
xchg
shlb
sti
mov
lods
pusha
pop
repnz
adc
repz
jmp
mov
push
sub
sub
inc
pop
mov
out
sbb
dec
jo
ret
add
inc
add
or
jmp
orb
mov
mov
pop
andl
add
pop
data16
add
add
adc
mov
ja
popa
dec
outsl
sbb
add
scas
jmp
pushf
fucom
jae
xor
cmp
sarb
test
cmpsb
pop
cmc
jle
les
mov
push
in
sub
leave
inc
xor
push
push
nop
pop
loope
popf
pop
outsb
cltd
and
and
add
sub
cmp
add
popa
repnz
fists
mov
sbb
int3
push
les
cmp
adc
and
stos
mov
stc
sbb
repz
push
mov
addb
adc
cmp
mov
mov
add
ljmp
add
test
jp
sbb
sub
dec
add
or
int3
push
cmp
mov
lret
daa
inc
jb
shlb
lock
mov
inc
in
stc
mov
cmp
pop
mov
dec
cmpsb
cmp
add
nop
shlb
adc
and
xchg
add
add
jo
std
push
xor
in
pop
lds
pop
ss
ljmp
add
push
lret
or
xchg
jb
sub
add
in
dec
jg
aas
daa
add
cmp
and
stos
sbb
inc
add
frstor
add
xor
incl
mov
pop
xchg
push
pop
xor
mov
mov
decl
add
add
mov
shll
out
sbb
lds
dec
enter
and
mov
sub
dec
sti
shrl
cmp
jbe
and
push
add
ljmp
inc
jge
jns
add
dec
lods
jecxz
xor
imul
adcb
lcall
shll
in
cld
push
lock
mov
mov
sbb
adc
and
rclb
add
shrb
aas
or
jp
subl
add
add
xchg
roll
movl
xchg
adc
sbb
negl
je
fildl
lldt
cmpsl
movsl
add
mov
cli
sbb
dec
xlat
jp
daa
push
testb
sbb
jo
fldl
dec
decl
xor
jge
pop
in
andb
inc
pushf
add
movsl
ret
gs
ffreep
adc
addl
pop
add
in
imul
pop
mov
push
shlb
ret
and
xor
test
in
adc
sarl
mov
xchg
leave
xchg
test
xor
scas
scas
orl
int
jbe
push
inc
xchg
fwait
lock
faddl
or
xor
shr
fs
repnz
cmp
cmpsl
js
lret
les
ja
and
mov
addr16
jmp
hlt
inc
mov
mov
and
enter
dec
hlt
mov
push
incl
push
mov
add
push
fbstp
js
ret
cmp
pop
jb
sub
and
fildll
mov
ja
add
add
loop
mov
sub
inc
push
lret
add
xor
mov
pop
fmull
addb
jp
out
fwait
jbe
pop
gs
mov
fnsave
test
add
or
fistpll
or
or
xor
add
cmp
sbb
add
push
add
add
leave
cli
mov
fucomip
in
cltd
leave
imul
insl
cmp
aam
les
push
adc
pop
mov
add
inc
popf
mov
orl
cmpsl
sbb
fstcw
fcmovne
dec
lods
fptan
xchg
xlat
imul
mov
push
add
pop
mov
call
flds
cmp
xlat
add
rcrl
mov
lock
addb
jge
add
jl
lock
enter
xor
dec
cmp
mov
mov
pop
cmpsb
cwtl
add
mov
inc
in
sbb
inc
loope
leave
insl
jge
push
mov
adc
imul
cmp
insb
es
add
xor
imul
inc
imul
movsb
add
in
movsw
in
fwait
mov
mov
ret
clc
mov
pop
insb
int
iret
xor
push
out
add
add
add
xchg
fistl
ja
mov
fbld
out
filds
fiaddl
pop
add
mov
sub
xchg
add
add
std
imul
stos
push
push
adc
leave
dec
fs
mov
mov
add
ss
aaa
jb
fmuls
shl
movl
and
mov
repnz
pop
popf
fcmovb
inc
lock
jns
xor
movsl
add
xchg
add
add
adc
stos
hlt
jl
push
adc
call
ror
cmpsl
dec
ret
add
mov
add
imul
add
idivb
in
jl
xlat
and
mov
or
jne
dec
mov
cmpsb
mov
nop
lock
movsl
sub
mov
pop
xor
sbb
mov
push
mov
mov
daa
add
pop
add
or
add
add
movsb
addr16
fimuls
cs
movb
mov
inc
push
test
rolb
sbb
scas
lret
sbb
sbb
fwait
test
test
jbe
pop
pop
mov
inc
pop
addr16
jae
insl
jmp
cmpsb
push
mov
add
cmp
add
ljmp
rolb
mov
xlat
in
in
stc
test
jmp
add
cli
add
aaa
leave
mov
and
movsb
jge
ds
aaa
pop
add
fstpt
add
inc
add
mov
add
inc
shll
mov
imul
movb
add
jbe
inc
sub
inc
and
adc
fmull
sti
jb
leave
jp
stos
pop
jp
mov
add
or
scas
icebp
xchg
and
repnz
es
lahf
adc
mov
add
jl
cmp
jecxz
inc
das
adcl
vcvttsd2si
jno
shll
out
mov
fiaddl
cld
add
push
sarl
push
mov
mov
mov
mov
data16
cs
add
xor
mov
mov
add
fwait
out
iret
out
push
in
sub
fwait
add
test
je,pn
or
add
add
aas
or
aam
jns
loope
fnstcw
rcrb
and
cmc
aad
loope
add
hlt
movsl
adc
cltd
out
mov
jo
jns
xorb
mov
pop
test
xor
mov
sbb
outsl
sarl
xchg
adc
cmp
clc
loope
add
push
inc
rcr
mov
sbb
cmpsb
add
add
mov
pop
call
adc
insb
cmp
jnp
into
xchg
sbb
jle
mov
add
cli
repz
cvtps2pi
or
add
cmp
push
add
int3
and
mov
mov
xchg
adc
add
lds
cmp
in
xor
das
add
cmp
shlb
arpl
jp
js
dec
fildl
lds
mov
dec
dec
or
je
add
lcall
loop
icebp
sub
outsl
sti
add
add
add
xor
add
jns
sub
ss
loop
add
or
out
cli
es
or
mov
inc
mov
popa
je
fadds
dec
mov
getsec
pushf
xchg
xchg
cwtl
add
mov
push
jg
ljmp
js
scas
or
or
aaa
ret
and
add
lods
sbb
dec
call
and
add
dec
dec
imul
add
jnp
iret
xor
and
add
test
jno
sahf
test
sub
xchg
leave
or
lcall
push
and
lea
test
daa
lock
imul
or
dec
and
mov
jo
sbb
lods
imul
inc
push
jle
aaa
mov
jg
fwait
es
inc
push
xchg
aad
pop
mov
loopne
mov
cmpsb
jp
cmp
dec
lret
call
leave
jb
mov
popf
dec
and
add
out
fistl
jmp
pop
pop
sbb
lcall
jmp
mov
sahf
shr
adc
xlat
into
data16
sbb
jg
mov
xchg
add
call
ljmp
mov
inc
xchg
ss
xlat
mov
in
sub
pop
jle
fucomip
movsb
in
addr16
sbb
jne
sub
xchg
jle
add
pop
add
and
out
or
lods
je
jnp
adc
adc
cmp
fwait
hlt
loop
test
cltd
sub
add
or
ja
das
repnz
pop
push
stos
repnz
loop
lcall
lock
push
data16
xchg
mov
fwait
push
add
sub
movsl
cmpsb
mov
inc
dec
into
and
add
in
adc
inc
jecxz
xor
inc
inc
inc
mov
mov
incl
add
adc
sub
adc
add
pusha
dec
mov
push
pop
jne
cmpsl
inc
sbb
add
insb
xchg
add
jbe
add
mov
lock
mov
add
inc
push
add
setbe
mov
inc
mov
mov
shll
inc
cmpb
cmpsl
mov
lret
pop
xchg
scas
mov
sbb
add
push
pusha
xchg
jg
outsb
push
xchg
jle
out
xchg
scas
int
jnp
add
xchg
dec
je
inc
pop
cmp
mov
lahf
stos
jno
or
adc
add
inc
sbb
mov
js
in
xlat
flds
jb
add
dec
mov
in
js
into
add
add
and
sbb
add
ror
stos
add
jbe
testb
sbb
sarb
aas
popf
jnp
add
adc
bound
sub
add
adc
jmp
sub
adcb
or
rol
mov
sbb
and
add
filds
mov
jecxz
mov
add
dec
inc
es
popa
fcom
clc
add
mov
inc
adc
add
outsb
or
add
ja
test
mov
ret
movsl
lcall
insl
mov
jmp
dec
jno
cli
add
stos
push
outsl
addr16
and
fcompl
mov
push
xor
add
imul
into
add
std
js
xchg
rcrl
sub
sub
cmp
add
add
mov
js
dec
lcall
push
pop
in
popf
mov
lea
lea
inc
cmpsl
add
add
stos
push
fisttpl
and
arpl
mov
out
stc
xchg
cmp
pop
xchg
push
jge
insl
and
test
dec
xor
sub
jae
imul
addb
ljmp
inc
add
add
mov
mov
incl
adc
mov
add
add
or
dec
inc
fnstcw
lret
orb
or
jno
xor
and
jle
sbb
mov
in
xchg
add
clc
fisttps
jbe
in
add
mov
xchg
jg
iret
add
xchg
sahf
add
mov
outsb
jmp
mov
adc
mov
add
mov
test
add
add
push
fnstcw
scas
add
lods
into
xor
sub
lcall
add
and
arpl
aad
testl
loope
aad
sub
hlt
inc
scas
and
add
fnstcw
add
mov
and
adc
add
dec
dec
das
xchg
push
ret
push
pushf
outsl
cmp
fcmovbe
jo
cmpsb
push
xchg
cli
cmpsl
sub
neg
movl
movsb
add
sar
pop
push
sbb
pop
cmpsb
mov
popa
xlat
jge
scas
xchg
add
mov
popf
cs
mov
stos
add
jb
cmc
inc
add
ljmp
arpl
out
adc
lret
ljmp
mov
push
xlat
mov
ja
lret
jp
add
int
loop
lret
inc
pop
inc
xor
cmp
jecxz
jb
cmc
cmp
and
xor
sbb
inc
mov
fcompl
rcrb
add
inc
and
pop
jg
xchg
add
outsl
pop
es
jae
ret
fidivs
lret
xchg
lock
jp
add
dec
dec
outsl
imul
xor
fldt
movsb
mov
xchg
ret
sbb
add
xchg
nop
cli
jge
inc
lret
mov
sub
add
iret
add
das
adc
icebp
stos
shl
sub
jle
sbb
xlat
lret
xor
add
mov
test
add
jmp
popa
pop
push
or
push
mov
call
add
data16
aam
ljmp
mov
leave
cli
dec
test
push
negb
mov
je
pusha
iret
mov
out
sar
std
push
and
add
inc
pop
sahf
mov
lock
es
mov
cmpl
jno
rcll
push
push
mov
push
add
fisttpl
lock
ficoms
cmpsb
ds
js
dec
add
sbb
ret
pop
xchg
add
jge
push
test
sarb
mov
int3
cwtl
add
in
push
inc
add
add
mov
push
dec
jle
xchg
cmpsl
xchg
xchg
add
add
xchg
pop
div
stc
repnz
sbb
push
daa
and
and
insl
loope
gs
aad
stos
adc
scas
add
mov
daa
xchg
add
inc
call
loop
xchg
imul
xchg
mov
fsubl
jbe
mov
inc
es
nop
aas
mov
xchg
jge
cmp
adc
add
mov
cltd
scas
add
add
mov
add
ss
outsb
aaa
and
jne
add
out
inc
rolb
mov
insb
xor
dec
shlb
test
lock
xor
xchg
popa
add
and
stc
in
dec
sbb
cmp
mov
add
loop
sbb
mov
test
popa
inc
fcompl
js
shlb
test
pop
gs
frstor
push
cmc
mov
push
fadds
fldl
jb
imul
and
add
lcall
hlt
xchg
loope
int3
add
test
add
or
test
shrb
pop
mov
aaa
mov
out
add
xchg
imul
push
lds
fsubl
jmp
add
das
xor
iret
add
cmp
cwtl
shl
ljmp
jne
add
cmc
gs
mov
sar
mov
ficomps
in
sub
and
and
loope
xchg
popa
cmpsl
test
or
inc
clc
subl
jbe
iret
dec
pusha
mov
cld
add
mov
movb
push
in
add
xor
addl
mov
mov
jp
xorb
push
push
cld
sub
push
mov
sbb
add
inc
add
sti
scas
aaa
and
movsl
mov
push
insl
add
push
push
inc
cmp
ljmp
mov
loop
mov
neg
push
ljmp
scas
arpl
push
xor
popf
add
jbe
fwait
cmp
xchg
push
add
js
jo
add
mov
lea
fmull
jno
ret
mov
and
lret
sub
and
add
mov
cmp
addr16
or
std
add
add
or
fadds
cmp
push
mov
addr16
je
rclb
out
fisttpll
pop
jp
jo
fwait
push
scas
pop
xchg
add
dec
add
insb
mov
add
mov
fsubrs
and
xchg
mov
jecxz
jo
add
xchg
rcrl
mov
fwait
xlat
xor
add
cmp
jle
lahf
sbb
cwtl
cli
inc
add
dec
clc
cli
jo
add
add
add
cmp
aad
push
mov
xor
sbb
mov
push
jge
add
pop
add
fcmovne
sub
add
das
dec
loope
out
mov
add
xorb
add
lods
aaa
int
xorb
cld
data16
stc
es
ds
add
adc
outsl
sbb
pop
push
push
mov
add
add
aaa
or
sbb
enter
add
inc
fxam
mov
mov
xlat
les
cltd
add
push
sub
aam
in
mov
adc
jmp
jne
in
xchg
add
add
add
fwait
adc
clc
mov
stos
faddl
inc
cwtl
add
cli
and
les
or
jp
sub
push
cli
orb
mov
lret
fists
shrl
add
adc
sub
sti
cmp
aam
imulb
push
inc
sbb
lods
sub
jno
push
adc
mov
roll
push
pop
push
and
add
add
jl
inc
scas
xchg
sub
add
out
inc
inc
xchg
or
hlt
mulb
sbbb
sbb
outsl
and
cltd
sub
cwtl
ret
xor
iret
pop
scas
iret
add
movsl
push
or
add
mov
mov
int
sbb
push
or
jp
mov
mov
adc
add
daa
es
js
xchg
jo
and
add
fistps
and
pop
add
add
cmp
inc
movb
idivb
sbb
and
add
adc
lods
and
or
jo
push
xor
out
xor
jae
sub
dec
dec
js
push
add
or
sub
sbb
loope
je
add
inc
or
add
movsb
adc
leave
repnz
dec
out
stos
imul
sbb
pop
add
mov
add
dec
jecxz
pop
cwtl
int
add
shll
pop
pop
insb
dec
aaa
push
lret
mov
out
jo
add
inc
orl
inc
in
scas
push
das
out
data16
xor
xchg
dec
divl
daa
sub
or
mov
adc
mov
adc
add
into
aaa
dec
fadd
lds
icebp
into
sub
mov
fbld
or
aad
fidivs
in
jb
mov
dec
jp
cmp
add
pop
lods
and
pusha
lahf
mov
lods
outsl
or
xchg
test
jne
imul
pop
xor
fs
cmp
adc
in
aaa
add
fcmovne
xor
push
add
jbe
add
jecxz
push
leave
imul
add
mov
xchg
xor
pop
mov
shr
add
add
add
sbb
scas
inc
sub
mov
inc
add
adc
xor
pop
daa
pop
or
or
jns
push
xor
mov
or
adc
dec
jae
push
out
mov
cs
cmp
or
mov
nop
xor
imul
dec
and
push
inc
push
jbe
sbb
jae
cmp
and
jnp
add
xor
push
cmp
and
inc
xor
adc
leave
mov
jg
lret
add
and
xchg
adc
shlb
add
cmp
addr16
sbb
dec
movsl
or
out
add
inc
or
fs
scas
add
mov
jl
pop
arpl
push
inc
roll
pop
jl
add
and
jo
dec
lahf
cmc
cmp
xchg
daa
pop
add
inc
add
shl
jp
add
xchg
mov
pusha
mov
ja
xchg
xchg
and
add
pushf
enter
mov
sbb
adc
jmp
jmp
shr
mov
add
push
sub
stos
add
icebp
pushf
lret
adc
cmp
sahf
insb
test
leave
adc
call
loope
jae
mov
fnstsw
xchg
mov
adc
out
push
mov
frstor
xchg
cmp
ffreep
scas
mov
dec
fnstcw
inc
add
cmpb
inc
cli
add
cmpsl
imul
lret
xor
jecxz
add
inc
jge
cmpsl
aam
push
aam
addr16
jo
push
das
jge
shlb
add
fldl
push
inc
add
ret
xchg
dec
push
incl
sti
lret
add
into
repz
mov
push
push
xor
add
or
dec
mov
and
in
ds
addr16
gs
and
adc
ficoml
jno,pt
pushf
inc
dec
aas
and
test
sbb
lods
mov
add
add
test
bound
jbe
cmpsl
cmp
xchg
mov
into
pusha
add
mov
es
movsl
fcoml
sti
push
addr16
dec
stos
jno
cs
ficoms
jg
outsb
ja
lods
or
add
fwait
add
add
push
dec
stos
aas
in
add
jnp
add
clc
out
outsb
stos
add
ret
dec
add
andb
add
ss
mov
push
dec
cmp
mov
push
sbb
mov
ds
fstps
add
add
sbb
mov
fisttpll
sub
pushf
push
aam
push
inc
xor
add
xor
push
lock
cmp
call
xchg
loope
pop
lcall
sbb
xchg
dec
jl
xchg
push
xchg
push
mov
stos
out
add
sti
lahf
sbb
mov
test
out
int
cmp
loopne
or
lods
mov
or
add
loop
mov
bound
std
paddd
clc
push
daa
fiaddl
add
les
les
xlat
add
cmp
cmc
push
push
mov
pop
mov
cmp
jns
push
add
stos
enter
or
ds
pop
sti
mov
aam
push
xchg
in
jl
lds
add
cltd
sbb
repz
in
nop
and
movl
pop
xor
or
jecxz
repz
sbb
xchg
xchg
add
sbb
scas
pop
mov
inc
flds
xchg
push
incl
call
hlt
cltd
out
add
std
and
pop
xor
lahf
push
cld
sbb
push
sbb
adc
insb
add
add
jno
jecxz
leave
cmc
add
imul
and
add
mov
inc
xor
ret
xchg
cmpsb
dec
xchg
test
cmp
sub
jo
les
leave
fdivs
jb
hlt
mov
adc
dec
cmp
fildll
enter
rcll
filds
shrb
push
testb
adc
push
enter
jg
inc
scas
jl
enter
add
jle
xor
loope
sub
pop
out
mov
sbb
mov
jl
add
lahf
and
scas
jb
xchg
sub
pop
sub
out
sti
cli
aas
dec
jp
out
mov
add
add
sbb
and
add
cmp
movl
mov
loope
nop
popa
fldl
pusha
cmp
xchg
sti
add
jne
mov
mov
popl
shll
adc
dec
push
hlt
inc
cmpsl
add
ret
cmp
inc
daa
add
add
pop
ret
mov
pop
xchg
add
adc
and
data16
sbb
pushf
add
lods
add
sub
jo
mov
lcall
roll
pop
pop
sbb
dec
dec
sub
mov
insl
xlat
and
add
sbb
mov
pop
add
push
fs
add
pop
or
clc
jmp
dec
mov
mov
xchg
push
test
lds
addr16
xchg
add
out
andb
add
scas
es
or
fistpl
add
add
fidivrs
aad
orps
jae
or
clc
out
jmp
cmp
push
adc
dec
mov
cmp
pop
pop
sub
mov
mov
popa
cld
insb
push
dec
out
xchg
xchg
ss
pop
push
cli
sub
sub
mov
add
ror
fidivl
inc
or
cmp
add
int3
es
add
jno
xor
scas
xor
push
stos
idivl
int3
add
jl
add
add
imul
scas
jbe
xor
cwtl
popf
rorl
sahf
out
mov
out
mov
jnp
add
mov
add
inc
dec
add
xchg
inc
sbb
dec
xor
js
add
fdivrl
clc
cmp
loop
add
subl
jl
add
jnp
and
add
insl
add
movsl
pop
outsl
sti
stos
test
add
aam
add
test
inc
pop
dec
cld
add
add
roll
push
call
jle
cmc
lret
sbb
cmpsl
es
jb
push
sub
ljmp
lods
cwtl
stos
rcl
inc
pop
sbb
arpl
mov
pop
ret
rolb
gs
inc
cmp
jl
or
mov
pop
decb
push
xor
fcomp
gs
or
or
mov
mov
push
inc
adc
cmp
jnp
popa
test
enter
mov
or
mov
dec
jbe
lods
inc
in
xor
add
xor
push
push
hlt
addr16
enter
ljmp
test
loopne
adc
cmpsb
xor
lea
sub
mov
push
and
fldl
call
lods
lock
es
int3
add
cmp
and
pop
mov
adc
pop
xchg
sub
push
add
mov
int
cltd
loope
addr16
sbb
xor
lret
out
lods
loope
leave
lret
pushf
sahf
gs
test
inc
xchg
subl
cmp
mov
push
roll
add
pop
push
and
jno
fnstcw
push
add
add
popf
and
lds
add
add
add
divb
pop
int3
sub
sbbl
xor
lods
test
leave
outsl
int
xorb
xor
dec
push
mov
jbe
and
in
pop
js
je
push
ret
lods
inc
mov
cmp
and
cmpsl
mov
push
jae
add
add
add
sbb
jne
mov
sti
sbb
xor
insb
add
xchg
mov
inc
xorb
orb
push
cwtl
jnp
test
std
cmp
sbb
jns
jne
push
and
add
mov
jo
fildll
mov
sarb
in
push
xchg
and
jg
push
add
push
or
aad
sub
add
daa
cmpsl
add
insl
xchg
ret
and
ja
gs
lahf
jo
sarb
jmp
das
incl
repnz
ljmp
dec
aad
push
popf
dec
add
inc
pop
adc
push
xor
push
mov
imul
shr
pop
pop
int
scas
ret
jnp
mul
xor
push
add
sbb
imul
test
fmuls
add
cmpsl
cli
int3
pop
inc
insl
push
push
jns
insb
sbb
mov
inc
dec
mov
js
cmp
jne
add
sbb
mov
pushf
idivl
mov
fs
jae
push
bound
add
sub
popf
in
leave
lret
in
sbb
push
push
pop
and
mov
scas
test
aaa
cmp
xchg
daa
or
mov
adc
outsl
jnp
adc
out
and
dec
sbb
ret
inc
add
lds
jl
sahf
jae
fwait
pop
popf
fimuls
mov
imul
add
push
les
adc
movsl
fs
data16
cmpsb
add
cwtl
add
lock
les
mov
movsl
jmp
fsub
imul
xchg
aad
xor
xchg
out
fbstp
cmc
mov
jo
pop
cmp
jne
add
adcb
lret
xchg
aas
xor
add
out
or
and
add
ret
push
push
cmp
adc
popa
bound
pushf
adc
xchg
xor
repnz
pop
pop
push
mov
mov
jne
dec
daa
push
and
lret
sbb
cwtl
les
addr16
cli
dec
add
dec
jp
and
pop
addr16
pop
push
cmp
mov
aaa
dec
leave
lret
dec
add
inc
xor
add
inc
stos
out
cld
add
xchg
pop
int3
popf
jbe
mov
sbb
push
jl
jg
add
jns
fsubs
push
or
mov
out
sub
inc
aaa
daa
add
jecxz
cmp
int
add
shlb
test
movzwl
inc
popf
stos
dec
add
daa
pop
and
das
dec
xchg
data16
mov
inc
lea
in
es
mov
xor
sbb
es
inc
ret
fs
int3
dec
in
push
roll
push
leave
pusha
in
or
push
inc
popa
aaa
leave
cmp
lret
pop
testl
mov
xchg
xchg
fcomps
sbb
pop
jmp
push
push
add
rcll
lock
div
xor
sbb
add
testl
add
iret
mov
movsl
cwtl
sub
xorb
jnp
or
push
dec
arpl
mov
lods
lods
jl
xor
push
loop
push
xabort
cmpsb
scas
decb
xor
push
rcl
in
and
loopne
aad
je
cmp
xchg
fxch
add
sub
adc
lret
adc
pop
pusha
mov
add
sti
xor
dec
sub
out
inc
add
das
sbb
add
add
out
jmp
loop
nop
out
add
xchg
out
pop
add
jp
fsts
add
decb
add
incb
add
push
or
pusha
xchg
adc
popf
or
shll
or
add
or
rclb
lods
cmc
lods
and
imul
loopne
push
add
mov
xchg
int
in
push
ret
fs
test
insb
inc
sub
mov
mov
loopne
add
pusha
add
xchg
shl
sbb
add
cmc
or
rorb
add
xor
aaa
jmp
and
xor
push
add
add
sbb
flds
fisubl
jp
pop
add
xor
sbb
nop
gs
mov
fcmovb
fidivs
mov
js
mov
and
mov
jno
scas
or
imul
mov
decb
das
ss
inc
mov
xor
popa
or
mov
lret
sti
insb
pop
cmp
add
xchg
push
mov
sbb
add
arpl
add
jmp
mov
out
inc
add
leave
rclb
ret
subl
cltd
mov
insl
push
cmp
jae
mov
fisttpll
fwait
bound
add
lock
movsl
lods
insb
cmp
xchg
adc
jge
adc
push
ljmp
sub
cmp
addl
xchg
or
mov
outsb
pop
mov
in
test
aas
adc
adc
out
jle
xor
mov
test
shlb
jnp
inc
negb
cmp
and
ret
add
test
fisubs
ret
shrb
sub
outsl
mov
out
pop
jl
frstor
stos
mov
movsl
adc
lds
lds
inc
xchg
add
in
scas
inc
add
inc
fidivs
std
fs
cld
inc
cmc
ljmp
add
add
and
mov
fiadds
sbb
dec
push
cmpsl
repnz
push
add
xchg
add
das
movsb
out
sbb
adc
andb
out
outsb
jmp
dec
jmp
mov
pop
dec
xor
popa
lcall
inc
clc
shrl
mov
inc
subb
add
push
jb
and
push
jmp
push
lea
dec
xchg
mov
in
mov
ds
dec
add
mov
cltd
stc
sub
add
and
and
add
rol
jp
jns
fsubrs
dec
ds
repz
and
dec
aam
and
lcall
out
pop
add
mov
cs
in
aas
lods
cwtl
jne
aad
daa
mov
add
ret
inc
sub
mov
dec
shl
cmp
movsb
add
nop
add
add
test
fiaddl
lods
mov
xor
jl
fwait
insb
jno
test
cli
call
sarb
fabs
push
cwtl
add
ja
shll
jns
in
mov
sbb
lock
movsl
subl
pop
jae
add
aam
push
ljmp
bound
xchg
xchg
nop
jns
ds
jbe
push
mov
sbb
cmpsb
xchg
arpl
dec
add
fldenv
jnp
jecxz
add
push
jle
int3
aam
dec
or
cmc
dec
hlt
jge
inc
sti
add
mov
je
add
lret
ss
cmp
fwait
test
xor
and
add
or
sarb
push
push
mov
push
out
scas
nop
add
xchg
cmp
dec
pop
and
lahf
cmp
repz
mov
les
pop
icebp
push
add
push
inc
dec
mov
sub
test
cmc
add
scas
cwtl
add
push
pop
jno
insl
lea
lret
stos
hlt
leave
das
es
add
test
iret
jno
mov
and
jnp
pop
mov
shll
inc
ljmp
xor
in
aaa
add
jnp
add
add
mov
jecxz
fsts
mov
xchg
xor
inc
out
dec
jecxz,pt
loope
or
add
sub
in
dec
xchg
enter
sub
push
pop
cli
outsb
mov
add
jmp
and
and
mov
push
add
inc
dec
dec
mov
imul
das
sub
lahf
jbe
into
adc
inc
xor
decb
jbe
mov
icebp
stc
adc
mov
add
cltd
sub
lods
adc
inc
test
and
daa
adc
mov
out
and
adc
inc
add
lock
std
add
inc
lret
roll
xor
outsl
mov
out
pop
dec
jle
rolb
add
movsb
test
xchg
incl
lahf
popa
int
std
mov
mov
fildl
iret
or
xor
incl
mov
cmp
and
clc
mov
add
scas
sbb
jbe
cmc
and
add
ja
into
lock
dec
and
cmp
hlt
xchg
fildl
fldl
sbb
jae
dec
add
add
das
add
push
ret
rorl
xchg
push
fs
inc
add
add
in
sub
mov
sgdtl
cmp
sub
flds
mov
imul
add
and
inc
cmp
add
insb
jg
adc
test
add
fsub
jnp
add
adc
rorb
lds
jmp
js
inc
add
lock
dec
mov
add
adc
mov
inc
jae
popa
add
xorb
xchg
add
hlt
int3
rolb
add
jno
sarb
mov
mov
jle
add
aaa
rcl
fadds
inc
jg
clc
mov
cli
jge
shll
cltd
loopne
add
addr16
add
loop
popf
lret
aas
int3
repnz
xchg
les
inc
nop
iret
sub
xorb
inc
push
add
pop
add
js
push
push
loop
fcomps
lock
sbb
inc
ficomps
adc
dec
jge
fcoml
test
adc
xchg
stos
enter
arpl
mov
loop
sub
ret
arpl
xor
and
movsl
add
jnp
das
xor
mov
sub
scas
push
addb
int
dec
or
and
dec
cli
pushf
xor
add
xor
mov
cli
pop
in
dec
mov
mov
push
add
mov
add
outsb
data16
nop
xchg
dec
jno
icebp
add
push
aas
jmp
out
jg
add
imul
xchg
outsb
decb
pop
lds
add
adc
add
das
push
adc
push
inc
adc
jecxz
and
in
pop
nop
std
ficomps
das
jne
inc
data16
or
xor
dec
loope
add
cmp
int3
jne
scas
insl
xor
xchg
sbb
test
add
mov
out
ret
inc
jge
cmp
or
add
cmpsb
jb
jge
xchg
jns
add
and
mov
aaa
pop
movsb
mov
or
dec
into
popf
add
ffree
ja
pop
sub
dec
pop
mov
imul
stc
dec
xchg
jo
push
adc
xor
in
movsb
ret
add
adc
xchg
daa
pextrw
adc
add
jo
dec
sub
repnz
sub
dec
ja
mov
fstp
jnp
test
or
adc
and
fdivrl
push
fmull
popl
sub
push
add
popf
xchg
sti
cmp
ljmp
out
jns
sahf
ret
jne
fidivl
xor
lahf
fistpl
xor
lds
ltr
push
hlt
daa
push
movsl
sbb
cmp
add
shll
in
add
push
add
sahf
testb
or
shl
aaa
sbb
and
and
push
lds
jge
add
push
mov
push
icebp
daa
cmpsb
push
cmc
mov
jbe
add
add
push
add
or
out
mov
cmp
lods
xchg
mov
pop
negb
mov
add
mov
out
sahf
mov
je
pop
sub
sbb
loopne
addl
ja
sbb
std
or
sub
jnp
xchg
popa
pusha
shll
repz
sbb
mov
addr16
call
std
clc
out
add
jg
jmp
loop
into
cmp
add
xchg
xchg
bound
int3
pop
mov
arpl
dec
cmp
mov
shlb
idivl
cmpsb
jo
push
add
das
bnd
cltd
call
add
rolb
fucomp
inc
and
inc
jge
mov
sub
mov
add
push
mov
jno
insb
dec
or
popa
jmp
pushf
add
cmp
ret
test
lahf
test
xchg
jge
sti
into
adc
out
mov
in
dec
incb
in
add
pop
mov
and
add
add
add
mov
add
into
outsb
add
stc
jo
cld
mov
mov
out
add
pop
add
ds
add
ja
lcall
xor
cmp
push
shrb
add
pop
lret
mov
add
jnp
xchg
and
pop
dec
adc
in
add
add
lods
inc
imul
inc
lea
xchg
faddp
xchg
mov
lds
aas
jno
push
arpl
mov
add
inc
or
fsts
mov
in
add
xor
add
test
sbb
xor
xchg
adc
jmp
in
out
clc
out
sbb
jge
mov
test
faddl
pop
dec
nop
push
jg
adc
incl
sub
add
pop
mov
test
pop
add
clc
sbb
add
add
arpl
push
mov
xchg
hlt
out
adc
imul
inc
rcr
add
add
into
mov
jmp
icebp
add
and
sbb
stos
popa
lahf
adc
jl
pop
adc
je
mov
dec
mov
adc
pushf
mov
mov
fadds
roll
rcrl
push
scas
and
or
ret
add
push
xor
xlat
mov
or
jmp
push
nop
add
or
sub
push
mov
flds
push
popf
dec
sahf
inc
xor
adc
mov
jmp
scas
lock
mov
add
xchg
stc
lldt
incb
pop
add
adc
sti
fsts
push
shlb
or
mov
pop
sub
iret
mov
aas
push
leave
sub
jno
mov
shrb
shlb
insl
add
dec
mov
insl
inc
inc
cmp
popa
shrb
in
add
adc
jae
out
sbbl
jl
xchg
adc
sub
pop
lods
push
mov
cmpsb
out
inc
inc
mov
inc
jnp
es
and
xor
rcl
sbb
faddl
andb
divb
cltd
cmpsl
add
cmpxchg
add
add
jge
adc
rclb
into
push
or
ja
xchg
mov
lods
cmp
test
pop
adc
lea
or
insb
hlt
cmp
ds
inc
pusha
jg
pop
daa
faddp
mov
push
and
cmp
or
jge
xchg
stos
mov
or
incl
movsl
jecxz
add
add
sbb
xchg
mov
fsubp
add
cld
add
xchg
fimuls
mov
mov
jmp
mov
jno
sbb
dec
sahf
nop
repnz
sahf
xor
sub
lea
rolb
or
push
aas
pop
addl
add
sub
pop
cmpsl
mov
out
add
divb
pushf
ret
cmpsb
mov
push
out
dec
lods
jbe
add
mov
mov
aam
xor
out
mov
stos
push
test
xor
insl
inc
pop
add
cmp
sbbl
add
aam
lret
cmp
add
jg
pop
cld
sub
loope
mov
loope
int3
add
cmpsl
xor
xor
lea
or
nop
lock
mov
sti
stos
add
push
sub
fprem
mov
int
add
lods
pop
adc
mov
fiadds
lcall
mov
mov
and
push
dec
lcall
inc
and
test
mov
iret
sub
add
lret
int
sahf
in
out
lahf
pop
and
cmc
push
in
sti
popf
cmc
ror
dec
je
add
stos
add
xor
add
cltd
mov
out
or
pusha
add
lds
aas
and
add
mov
mov
mov
adc
mov
mov
inc
or
scas
add
insb
cld
out
ja
xor
repz
aas
cld
lcall
test
cmpsb
ja
adc
insl
movsl
dec
movsl
and
mov
mov
inc
mov
add
hlt
dec
in
repnz
lret
adc
scas
add
fwait
mov
mov
add
out
lea
sbb
cltd
mov
add
push
iret
daa
add
fists
mov
inc
sbb
popf
lds
lret
in
inc
push
mov
rcr
test
mov
pop
sub
add
push
mov
cmp
and
adc
mov
lock
scas
sub
bound
fstps
push
xor
cltd
push
test
imul
dec
pop
xchg
aaa
hlt
shl
xor
sbb
add
shl
ds
pop
mov
pop
mov
sbb
popa
sbb
pop
mov
mov
inc
add
add
add
jne
inc
inc
sbb
jnp
ret
cmp
scas
dec
mov
adc
ds
stos
sar
add
add
inc
sub
jmp
and
dec
fdivr
gs
jae
imull
push
dec
xchg
jo
xchg
loopne
pop
adc
cmp
rclb
cmp
mov
cmpsb
push
cli
cmp
dec
cmp
jo
add
push
dec
adc
imul
add
test
pushf
or
push
adc
ret
cltd
cmp
cmp
mov
test
out
out
test
test
out
push
and
test
dec
sbb
fxch
fnstenv
stos
push
int
sub
add
ljmp
in
sub
into
pop
pop
std
lahf
stos
dec
inc
pop
daa
push
adc
xchg
out
insb
push
fsubs
dec
mov
popf
scas
add
icebp
jg
sbb
sub
and
cmp
add
loop
lods
dec
lret
jmp
inc
iret
add
pop
jae
scas
pop
aad
add
sbb
shll
sub
jge
push
add
or
xor
add
xchg
ljmp
imul
cmp
in
pop
dec
inc
lcall
icebp
pop
add
add
push
pop
and
cmp
insl
ljmp
add
lods
add
push
add
inc
icebp
sub
add
sub
push
cmc
and
data16
cmp
push
mov
repnz
ljmp
add
cwtl
aas
lret
out
lods
add
cmp
rclb
add
add
lods
add
adc
lea
xor
inc
xchg
sub
inc
roll
pop
in
fcmovnu
lods
cwtl
addr16
push
ret
inc
add
add
xor
iret
fcmovnbe
inc
scas
add
xchg
cmp
push
dec
inc
bound
xchg
mov
lret
aad
out
cmc
jb
add
mov
aam
jnp
lock
fsubrl
add
add
jno
add
in
fildl
iret
xchg
jno
and
jnp
mov
sahf
int3
pop
add
xchg
add
sub
stc
add
jle
and
xchg
add
or
outsb
sub
adc
xchg
shl
mov
clc
test
xor
push
xchg
cmpb
add
fstpt
rolb
adc
and
out
lahf
sbb
mov
add
jp
insl
movsl
push
add
xor
push
add
add
add
xor
jp
stc
addb
sbb
cmc
dec
and
dec
out
xlat
sub
lds
sbb
add
xchg
add
ret
jbe
inc
adc
clc
cld
push
arpl
fisubrs
cld
pop
xorl
mov
or
andb
jge
add
add
mov
movsb
pushl
inc
out
loopne
popa
movb
xlat
out
jnp
add
jnp
repz
mov
icebp
popf
add
xor
or
jl
push
add
std
xor
add
jge
or
push
cmp
std
add
mov
outsl
add
cmc
cmpsb
xlat
add
outsb
dec
aas
mov
jnp
adc
mov
gs
push
sbb
dec
mov
pop
das
mov
jns
int3
cltd
add
or
fwait
lret
sub
sahf
xor
push
or
dec
push
addb
cltd
out
rclb
orb
sahf
rcl
add
cwtl
add
test
add
add
add
roll
pop
std
mov
add
stos
andb
cmp
xchg
popf
inc
add
jns
pushf
pop
push
dec
cmc
or
and
loop
loope
add
outsb
bound
push
add
cld
stos
and
lock
or
inc
subb
and
pop
dec
out
add
sarl
push
divl
repz
ds
mov
loope
mov
outsl
cmp
add
pop
add
xchg
bound
and
fcomps
xchg
jge
add
cld
dec
jl
mov
adc
sbb
fildl
push
sbb
cs
mov
adc
mov
cmpsb
and
add
fsubrp
xor
dec
pop
cmp
adc
add
add
outsb
jb
jmp
in
mov
add
enter
add
mov
jmp
add
scas
or
or
adc
data16
mov
xchg
mov
mov
jnp
call
dec
sbb
out
pop
add
mov
fidivl
sbb
add
mov
jmp
rcll
jae
outsb
pop
xor
jmp
lock
add
jmp
xor
test
mov
hlt
sbb
mov
sbb
in
mov
pushf
mov
push
cld
lahf
scas
jmp
jne
push
cmpsb
add
xchg
lods
mov
add
cmp
es
fiadds
ret
dec
xchg
pop
ja
xchg
push
jl
cmp
add
fdivr
jecxz
cmp
add
ss
ret
mov
add
cld
insl
add
add
addb
sbb
dec
jmp
jg
dec
subb
pop
mov
icebp
xor
add
clc
pop
lods
add
addl
inc
fmuls
frstor
vpsllq
ds
aad
movsb
ret
cmp
sub
ds
sub
test
add
daa
in
add
mov
lock
add
mov
dec
idiv
cmp
out
and
inc
adc
add
cltd
scas
add
rcrl
add
arpl
ret
xor
adc
ret
and
inc
add
fcompl
je
lahf
nop
mov
testb
mov
fs
loop
inc
add
cmp
ja
les
popa
sti
cmp
add
mov
stos
cmc
push
call
mov
pop
mov
mov
icebp
fisttpll
add
repz
dec
mov
adc
xchg
mov
fdivl
mov
stos
loop
jb
add
mov
xlat
stc
add
and
scas
add
negb
ja
add
test
shrl
xchg
dec
add
test
or
dec
add
add
movsb
mov
xor
roll
add
imul
jmp
inc
mov
mov
mov
ror
and
mov
dec
add
insb
mov
mov
test
mov
xchg
pop
jmp
cmpsl
in
dec
jae
jne
lock
sahf
cmp
dec
into
aad
pushf
fidivrs
sub
jge
cmpb
add
sti
pushf
les
and
dec
xchg
imulb
jle
mov
cmc
enter
dec
mov
mov
adc
push
lds
repnz
sub
mov
or
jnp
inc
andl
push
push
or
outsl
sbb
dec
ljmp
out
add
add
and
or
xchg
jae
and
sub
bound
je
leave
loope
add
fs
add
outsl
add
mov
in
and
icebp
pop
mov
movb
dec
dec
outsb
in
rolb
push
es
add
push
lea
pop
pushf
inc
xlat
add
xchg
outsl
or
and
fadds
arpl
pop
jns
add
sub
shll
loope
push
aad
mov
stc
aam
adc
jbe
adcb
add
shll
add
dec
or
add
lods
mov
rcrb
adc
mov
sub
push
or
lcall
add
or
mul
push
icebp
cmc
inc
incl
pop
cmp
inc
push
scas
repz
mov
fwait
xchg
scas
inc
add
push
shlb
pop
jne
dec
repnz
rolb
xchg
adc
push
add
sti
cmc
jmp
movl
js
shll
scas
adc
mov
test
fmull
mov
inc
push
jp
mov
cmp
sahf
inc
cmc
leave
and
aaa
stos
movlhps
inc
jae
call
jl
pop
jp
bound
fs
xchg
mov
fsts
xchg
or
fimull
imul
push
adc
into
test
mov
xlat
test
push
fcmovbe
cmpsb
lret
xchg
xchg
jbe
inc
stos
cmp
adc
mov
insb
adc
pop
test
in
int3
imul
ja
out
inc
jle
add
mov
xchg
jb
add
sub
mov
fadd
add
bound
and
fistl
jle
iret
dec
add
dec
add
test
imul
push
rcr
jo
or
mov
pop
out
mov
mov
movsl
mov
in
push
lods
sub
testb
outsl
or
cmp
push
ds
test
ljmp
shrl
pop
scas
fldenv
add
mov
cli
push
sbb
pop
stos
cmp
cmp
nop
add
pop
mov
cmp
or
not
imul
mov
test
inc
and
sub
dec
jecxz
inc
add
jg
mov
adc
lock
movsb
fcmovne
dec
aad
lock
xchg
roll
add
es
aam
cmpsb
sub
ret
add
add
clc
jge
ds
stc
icebp
ret
add
cmp
xor
loope
fldz
add
rcrl
mov
ficomps
pop
adc
hlt
out
rcll
aad
add
mov
xchg
das
mov
mov
inc
dec
and
add
data16
jmp
sbb
dec
cmpsl
pop
enter
add
add
fwait
push
mov
pusha
aad
mov
mov
iret
call
xor
mov
icebp
out
add
call
hlt
push
and
inc
or
pop
data16
stc
add
push
inc
hlt
ret
or
or
pop
dec
cmp
adc
cwtl
lret
int
rorb
rcll
add
pop
cmpb
sbb
shr
jnp
pop
add
imul
add
xor
dec
mov
jp
insl
xlat
or
int3
xchg
lret
dec
enter
add
add
pop
xor
inc
fcmovnb
cmpsl
stos
adc
jne
ja
add
dec
mov
test
inc
push
lcall
das
dec
icebp
stos
and
ret
clc
add
jg
xlat
scas
and
xor
jo
cmp
jmp
xchg
add
pop
jecxz,pt
push
adc
jb
rorb
push
mov
ja
ss
stc
sub
into
pmullw
movsb
scas
ficoms
lods
enter
add
aam
xor
cmpsb
add
jne
stos
into
cmp
push
scas
sub
daa
xchg
adc
int3
xchg
inc
mov
xchg
push
movsb
dec
add
push
shlb
or
mov
sahf
incb
push
sbb
push
mov
mov
rorb
sub
mov
push
xorl
imul
scas
daa
jg
mov
mov
or
nop
sub
jl
push
add
mov
fnstcw
add
add
mov
fwait
sbbb
and
inc
loope
rcrb
push
mov
lahf
pop
fcoml
push
ljmp
pop
lock
fistpl
popf
bnd
jp
dec
jne
mov
fs
add
inc
sarb
inc
cltd
add
icebp
mov
or
add
push
and
inc
ds
dec
add
clc
addr16
push
inc
sbbl
loope
jmp
add
push
test
dec
add
add
cmpsl
inc
mov
inc
fistpll
enter
xor
insl
xchg
mov
add
add
jmp
stos
hlt
add
mov
dec
sub
jne
add
es
mov
test
pusha
les
cwtl
add
pop
xchg
add
or
mov
leave
popa
das
out
mov
stc
mov
rcrb
adc
in
popa
aaa
fsub
lds
mov
sqrtps
push
dec
or
inc
add
hlt
add
add
in
xchg
lret
int3
ja
push
shll
ret
repz
insl
stc
add
cmp
push
add
test
aad
cmp
add
push
test
push
shrl
mov
mov
pop
cmpsb
fldl
idivl
iret
xor
inc
jae
inc
add
mov
lret
pop
xor
xorl
xchg
lock
lods
push
add
cld
leave
xchg
cwtl
pop
add
and
pop
cwtl
lret
outsl
and
inc
or
aaa
in
leave
adc
mov
sub
dec
inc
sbb
sbbb
pop
push
loop
ret
xchg
sbb
dec
les
int
xor
mov
jo
add
out
stos
add
adc
and
add
mov
ss
inc
mov
rorl
mov
inc
push
fsubrl
or
jbe
jmp
add
push
inc
add
incb
cmp
add
aaa
and
adc
fistpl
inc
or
fs
scas
add
iret
ja
push
xchg
mov
mov
js
hlt
pusha
pop
add
loop
movsl
dec
je
push
or
dec
add
enter
add
mov
pop
mov
add
inc
outsl
xchg
add
xlat
gs
xchg
push
add
cmp
ljmp
pushf
push
fsubrl
imul
int
adc
cmp
lds
jns
mov
ficompl
add
adc
xchg
sub
push
sbb
icebp
hlt
sbb
add
mov
jnp
sahf
fstpl
and
in
inc
outsb
pop
js
cli
adc
lods
adcb
sbb
pop
scas
xchg
add
jl
arpl
cmp
sbb
add
push
sbb
add
or
xor
ss
inc
repnz
add
mov
dec
dec
cmp
aad
cmp
orb
sahf
pop
push
repnz
adc
js
add
insb
negb
fmul
test
arpl
nop
fidivs
adc
or
ljmp
jbe
ljmp
lock
dec
add
sbb
add
je
add
or
cmp
sbb
jg
push
jnp
shrb
add
sti
mov
push
lods
xchg
adc
xchg
xchg
mov
sbb
pop
inc
pop
out
imul
push
repz
xchg
ja
icebp
lahf
imul
aas
push
lahf
popa
sub
adc
xchg
xchg
xor
push
pop
xorl
jae
fildl
jmp
cld
mov
out
repnz
scas
push
adc
add
and
out
xchg
ja
push
push
add
add
ljmp
add
sets
add
inc
cmp
fucomip
sbb
leave
mov
add
jp
xchg
add
je
add
je
aaa
xor
add
add
xchg
mov
add
in
in
add
or
int3
push
jmp
mov
push
xchg
xor
sub
xor
test
mov
add
mov
add
add
sbb
leave
cltd
ljmp
fsts
sub
ret
sti
adc
mov
sub
das
push
cmc
dec
inc
xchg
mov
dec
dec
add
fcmovnb
je
mov
mov
dec
inc
or
rorb
pushf
sbb
cmp
fistps
sub
out
lret
in
lahf
pushf
fimuls
mov
cmp
dec
into
dec
sub
add
cmp
cmpsb
push
ret
add
pop
xchg
addb
add
fisttpll
dec
cmc
and
scas
in
push
aad
push
testb
roll
pop
pop
les
lahf
and
addl
fsubr
loop
sbbb
out
adc
add
lret
ret
jl
and
test
sub
cmc
dec
push
adc
std
mov
fwait
pop
clc
je
dec
loopne
pushf
fwait
mov
sbb
dec
sbb
add
das
mov
push
leave
adcb
cmp
mov
lods
and
xor
add
sbb
std
popf
inc
adc
lods
add
fidivrs
bound
sub
cltd
inc
shlb
ret
jno
pop
xchg
and
xor
aaa
cmc
lahf
and
adc
cmp
ss
lea
loope
or
push
jl
lahf
hlt
add
mov
fnstcw
sarl
mov
aaa
dec
add
into
jb
lds
sub
jl
xor
setp
aad
cmpsl
popa
rcrl
push
pop
repnz
leave
imul
std
repz
dec
jle
int
add
addl
fdivs
test
inc
add
dec
into
fildll
int3
cmp
call
xchg
stos
rcrb
mov
jae
or
lret
or
mov
test
jno
pop
dec
test
pop
sub
aad
xlat
mov
movsb
xor
mov
sahf
add
mov
xor
jno
ficoms
or
add
jecxz
lock
iret
aam
outsl
aam
push
jge
mov
sbb
cwtl
dec
add
add
mov
clc
rorb
incb
mov
into
popa
add
call
push
and
outsl
pop
pushf
shll
movsb
mov
push
inc
add
lret
push
in
testb
jmp
test
pop
roll
hlt
sahf
cmp
mov
xor
mov
clc
and
mov
popf
fildl
add
enter
jmp
or
cmc
outsl
mov
xchg
adc
or
or
ss
enter
push
pop
add
jns
enter
mov
xchg
adc
xchg
leave
notb
pop
push
mov
mov
add
mov
add
call
ficoml
shlb
and
or
lds
adc
add
xchg
mov
add
fdivrl
std
icebp
movsl
inc
xchg
les
sub
mov
iret
xchg
xchg
jmp
push
aad
imulb
xchg
jle
in
loop
stc
xorl
inc
rorl
ja
push
add
dec
fnstsw
xlat
test
push
cmc
scas
fnstenv
mov
add
dec
xchg
aaa
ret
ja
jno
cmpsb
inc
addr16
xchg
sub
add
add
mov
cmpsl
dec
stc
lods
mov
dec
inc
cmc
sbb
xchg
mov
pop
inc
add
and
xor
lods
loope
int
out
inc
add
aaa
add
sub
mov
mov
arpl
push
add
aam
imul
jo
or
sbb
mov
int
jl
xor
xchg
jg
push
sbb
add
mov
cmpl
ds
add
add
sub
decl
stos
jae
inc
dec
mov
aaa
fmuls
add
test
jmp
pop
xchg
repnz
pop
mov
arpl
push
sbb
add
add
ficompl
cli
clc
sbb
inc
in
add
add
or
inc
popw
mov
pop
or
add
inc
cli
or
ss
dec
inc
push
push
add
repz
roll
jb
scas
loope
mov
push
pop
addb
in
ja
sbb
movsl
push
jmp
add
add
sbb
add
roll
fmuls
inc
jmp
add
je
add
add
mov
mov
jp
sub
lods
sub
insb
pusha
mov
mov
mov
out
jecxz
movsl
aam
pop
rclb
test
mov
inc
fdivl
inc
pushl
push
hlt
flds
aam
pop
or
jmp
mov
xchg
shlb
add
mov
and
js
out
in
cmp
add
sbb
lods
js
cli
or
test
popf
out
outsb
js
jns
mov
in
mov
or
add
mov
add
cmp
add
cmp
jae
cmp
or
pop
test
inc
mov
xchg
and
jbe
adc
cmp
outsl
push
add
nop
xchg
jmp
stos
add
mov
cmc
mov
leave
add
push
fiadds
mov
scas
inc
push
pop
add
add
fisttps
rol
mov
push
pop
adc
xor
add
cltd
lock
pop
stos
outsb
push
push
arpl
add
addr16
mov
repz
movsb
push
pop
test
aas
scas
mov
cld
clc
fidivs
into
add
outsb
fiaddl
sub
push
sbb
jb
lods
adc
lret
xor
call
push
add
rcll
mov
add
aad
add
mov
imul
inc
jo
jmp
mov
jg
sub
movsb
jae
loope
in
lods
daa
add
add
xchg
add
stos
lahf
mov
cmp
fsts
xchg
stc
mov
into
shlb
in
jo
add
inc
add
aad
xor
into
mov
lcall
ret
bnd
sahf
ljmp
mov
movsb
pop
add
clc
dec
mov
jnp
pop
add
cltd
jl,pn
ds
imul
add
imul
scas
add
scas
push
push
subb
movsb
cmp
out
fadd
pop
sub
jge
inc
push
inc
dec
mov
or
mov
nop
add
pop
add
add
add
xchg
push
pop
adc
xor
xor
fwait
add
test
es
cmp
pusha
sbb
add
pop
ss
jns
cwtl
push
add
sarb
adc
cwtl
in
inc
mov
stos
scas
cwtl
push
sub
inc
push
cmc
rep
daa
add
dec
adc
subl
mov
jno
cld
adc
clc
aaa
sbbl
data16
fidivrs
addb
pop
push
cmp
std
insl
adc
jge
dec
adc
xchg
repz
xor
pusha
push
enter
cmp
dec
iret
sbb
dec
mov
dec
movsl
aaa
leave
inc
lahf
cmp
jge
or
mov
mov
mov
sub
fnsave
sti
sarb
add
stos
stos
mov
xor
add
add
fidivs
fwait
cmpsb
stc
out
out
cmp
stos
xchg
add
add
lcall
aam
mov
pause
loopne
xchg
ja
jns
shll
xchg
fmull
push
fiaddl
mov
cmpsb
xchg
push
mov
ljmp
addr16
imul
mov
fs
pop
fsubl
dec
cmpb
and
sarb
mov
out
add
sub
or
lock
mov
outsb
call
jl
ret
add
cmp
imul
in
xor
pop
loope
mov
aam
add
add
mov
adc
jo
aaa
and
jl
jp
push
xlat
lds
add
mov
daa
or
pushf
add
test
xor
and
mov
sub
repnz
repz
xchg
inc
mov
jp
arpl
mov
sbb
add
inc
aaa
inc
add
imul
popf
push
add
mov
pop
out
push
xor
cmpsl
pop
divb
insb
in
jmp
jle
stc
cmc
dec
mov
and
xor
clc
popl
push
lret
arpl
orb
pop
arpl
xlat
xchg
pushf
out
test
jo
les
inc
sub
jl
int3
mov
push
jnp
nop
add
iret
cmc
add
dec
xor
and
xchg
dec
mov
push
aam
fdiv
add
jbe
repnz
jne
add
mov
fidivl
sbb
ljmp
and
mov
div
lret
push
es
loop
xor
fiadds
cwtl
add
add
pushf
mov
jne
rolb
scas
std
sbb
mov
scas
cmp
xchg
outsl
into
dec
push
add
adc
jbe
cmp
or
out
mov
xchg
sbb
daa
pop
pop
push
pop
je
adc
xchg
mov
jmp
add
push
cs
cmp
jno
mov
adc
add
add
jbe
add
adc
mov
addl
and
cli
fsubrs
cmc
lock
mov
cmp
je
pop
or
mov
test
fstps
xor
cmp
inc
idivl
and
aad
mov
push
andl
xchg
jb
add
pop
mov
bound
ja
push
xor
fmull
mov
jmp
test
or
addb
sahf
imul
push
daa
push
dec
mov
cmp
adc
lods
mov
movsb
cmp
sbb
push
inc
sbb
jbe
push
xor
iret
jbe
ja
mov
in
imul
mov
add
xor
int
fstl
push
push
lret
or
pop
mov
jb
add
sub
add
jl
add
sahf
xchg
xlat
fiadds
cmpb
call
es
mov
mov
adc
aam
push
xchg
cmp
mov
xor
out
into
leave
out
add
addr16
xor
add
jbe,pn
mov
add
add
mov
cli
daa
cmc
les
lahf
xchg
repz
push
add
je
add
dec
addl
out
and
pop
inc
add
push
or
aad
add
or
adc
mov
in
pop
inc
add
in
bound
rorb
jno
jo
sub
cltd
arpl
cwtl
sbb
int3
cmpsl
jmp
mov
push
lret
ja
jle
jmp
cmp
add
sub
and
mov
int
cmp
lret
add
cmp
add
outsl
sbb
sub
jle
lcall
cmp
jmp
mov
scas
mov
ret
or
add
js
xor
pop
mov
add
test
clc
and
imull
cmp
push
mov
rorl
add
insl
gs
mov
pop
add
aaa
stos
sbb
add
jge
je
mov
mov
inc
cli
jge
add
jecxz
and
add
mov
push
xor
lds
xchg
xchg
movsl
add
jne
jg
push
add
cmp
jecxz
cmp
and
add
add
ret
xchg
stos
push
add
out
ret
sbb
add
js
add
jg
out
add
std
dec
adc
les
push
add
pushf
inc
data16
add
pop
jmp
mov
test
mov
xchg
pop
add
adc
add
negl
lahf
add
add
push
add
add
pushf
inc
jbe
add
cmp
jno
add
sbb
dec
imul
mov
inc
xor
add
cmp
inc
add
pushf
jnp
add
adc
mov
adc
cmc
push
mov
jae
cmpsl
add
rol
inc
in
in
add
gs
ss
insb
adc
mov
jo
adc
dec
sub
jo
shll
push
mov
je
aas
nop
jl
les
divb
adc
sub
jbe
pushf
add
push
xor
jne
int
sarl
push
dec
add
cmp
scas
mov
testb
adc
movsb
test
inc
fisttpll
jl
int3
pop
xor
loopne
xchg
xor
int
cwtl
in
lods
int
cmp
movsb
jno
pop
les
mov
popf
jp
mov
or
repnz
lret
adc
jae
daa
cmpsb
push
mov
loop
imul
push
jne
mov
cmc
or
out
jge
stos
pop
add
cmp
cwtl
add
and
fnstsw
add
test
xlat
popa
pop
mov
dec
mov
push
sub
cli
repz
std
dec
mov
mov
xchg
verr
mov
add
add
inc
aaa
outsl
insl
sub
enter
add
xor
add
add
test
outsb
pop
shll
sahf
add
mov
cmp
add
aas
add
push
imull
leave
and
push
iret
aas
nop
xlat
jne
add
add
or
roll
adc
inc
pop
sub
dec
mov
aam
comiss
insb
add
add
aaa
test
add
add
cld
and
dec
lds
ficompl
jecxz
add
fimuls
mov
mov
mov
xchg
ja
lods
call
push
add
add
shrb
or
data16
jp
scas
sbb
add
inc
mov
not
in
add
in
dec
pop
repnz
add
or
xor
int3
jle
jae
bound
or
add
cs
add
add
mov
xor
dec
std
in
outsl
pop
ret
inc
push
xchg
sbb
inc
pop
dec
add
sub
add
fs
pop
fsubr
adc
aaa
ds
inc
mov
pushw
add
mov
or
add
add
fstl
sub
movsb
pop
or
pop
add
ljmp
inc
pop
mov
cmp
add
dec
outsl
sbb
ret
cli
jbe
adc
stos
add
sarl
hlt
cmp
loopne
mov
sbb
aas
adc
leave
subb
data16
cltd
or
xchg
adc
and
push
inc
push
sbb
jno
or
pop
add
les
and
test
pop
ret
xor
loopne
out
add
adcl
pop
jl
push
xchg
subb
jg
add
xor
jns
pop
loopnew
xchg
and
add
les
faddl
mov
addl
mov
xchg
daa
sti
insl
je
std
add
push
pop
push
popf
push
aas
sbb
ret
les
cmpl
jecxz
pop
dec
fistpl
scas
push
inc
popf
jns
xor
fiadds
add
pushf
cmp
push
stos
mov
inc
les
ret
dec
adc
test
aas
pop
mov
pminub
mov
lcall
add
jle
mov
ja
std
push
test
pop
scas
xor
add
and
shlb
mov
jmp
push
outsl
cli
xor
cs
pop
push
mov
sub
int
sahf
add
push
add
add
dec
aas
ret
add
movsl
lds
ljmp
pop
xor
add
aam
mull
adc
cwtl
add
imul
loop
and
add
push
outsl
add
mull
pop
pop
inc
sub
movsb
and
push
lret
test
pop
outsb
pop
test
mov
lahf
inc
and
out
add
mov
mov
adc
imulb
xchg
hlt
mov
push
ljmp
dec
pop
mov
mov
add
add
jle
cmp
add
add
shlb
shl
mov
cmp
mov
sbb
add
or
mov
std
stos
cmp
sti
out
jbe
and
add
pop
movsl
in
pop
or
dec
push
pop
test
outsl
push
ss
add
das
add
andl
add
insb
adc
loope
loopne
push
fwait
pop
dec
xor
scas
inc
xchg
test
je
in
mov
inc
mov
push
add
cmpsb
out
data16
popa
pop
cltd
sti
xchg
pop
out
inc
add
xor
add
int
test
add
adc
cmpsb
pop
inc
add
add
sbb
dec
cmp
inc
ds
loope
add
add
inc
out
mov
ljmp
imul
push
push
es
js
mov
adc
xchg
xchg
jb
dec
inc
inc
and
xchg
dec
fcomps
inc
add
mov
or
jo
add
add
xchg
mov
xchg
cmc
leave
scas
cmp
add
sub
add
bound
lock
mov
test
xor
sub
adc
push
insl
cmp
roll
imul
sub
movl
jmp
es
sub
stos
adc
out
mov
pop
add
add
xchg
and
lahf
push
cli
fwait
jne
pushf
dec
std
popf
mov
mov
adc
add
mov
jb
inc
insb
loop
ds
push
pop
fildl
add
sbb
sub
clc
pop
add
bsf
sbb
in
jb
or
dec
add
shll
add
int3
inc
add
adc
add
dec
ljmp
rol
add
push
xchg
clc
in
xchg
mov
inc
push
xchg
fsubrl
mov
fwait
dec
pop
pop
add
mov
xor
xchg
cmp
inc
dec
push
fdivl
cmp
jne
das
jbe
jnp
add
dec
rorb
or
mov
add
push
rcrl
add
mov
push
repnz
pushf
cmp
dec
push
jnp
mov
cmp
cwtl
add
arpl
add
xchg
mov
sub
and
lods
adc
into
adc
js
les
fbstp
sbb
sbb
mov
sbb
add
pushf
pop
lods
incb
add
in
adc
pop
icebp
mov
addl
mov
and
lret
out
xor
mov
fidivrs
jnp
push
cld
cmp
lahf
roll
ficoml
scas
fdivl
aam
sub
sub
test
testb
imul
pop
lcall
fstps
jbe
movl
add
sub
xchg
repnz
or
push
add
jg
aad
xor
jmp
cmp
nop
xor
jo
js
fmuls
sub
xchg
ss
sbb
push
ja
out
sub
xor
cmp
cmp
loopne
mov
popa
sbb
add
xor
mov
mov
jnp
or
mov
mov
fidivrl
shrb
pop
mov
mov
mov
add
adc
dec
in
bound
clc
dec
adc
mov
or
repnz
pop
jl
sbb
jne
or
add
and
add
loopne
pushf
jb
add
add
popf
and
jg
mov
cld
out
xor
push
add
inc
das
jno
add
sbb
nop
or
test
lret
add
xor
mov
add
add
popf
pop
add
mov
out
filds
dec
adc
cmp
les
dec
mov
push
jge
inc
outsl
add
lea
add
daa
mov
add
xor
add
ss
rcll
iret
add
inc
and
push
add
fiadds
pop
mov
xor
cmpsl
dec
jecxz
mov
add
sbb
add
mov
bound
flds
ret
cmc
adc
sahf
add
xchg
and
pop
add
jne
pop
cmp
ds
xchg
add
pop
gs
mov
in
outsb
mov
ja
add
call
add
lods
mov
adc
push
pop
scas
mov
roll
out
xor
add
sub
in
dec
stos
ficoms
xchg
in
add
mov
add
out
jg
inc
repz
add
and
dec
add
aas
mov
adc
xchg
ss
mov
xor
cmp
sub
xchg
rorb
dec
jecxz
mov
mov
int3
testl
push
add
add
jp
test
in
shl
testb
incl
sub
dec
stos
add
rep
mov
pop
call
xor
mov
sub
pop
add
into
mov
add
sub
add
movsl
loope
add
add
add
inc
dec
adc
add
jbe
add
call
jo
add
inc
mov
sbbb
push
mov
mov
addl
aaa
outsl
pop
test
push
sbb
or
test
sarb
lcall
ds
xlat
sub
add
lea
test
adc
lock
mov
rorl
add
xor
mov
cmc
sub
fwait
add
pop
xchg
orl
push
pop
popa
push
das
pop
jmp
cmpsl
cld
popf
leave
pop
add
xchg
lock
add
fdivr
mov
jno
adc
add
add
rorl
roll
add
xchg
mov
cmpsl
add
add
jge
pop
out
jno
xor
mov
adc
sbbb
repz
icebp
add
enter
jb
push
jge
ljmp
xchg
xchg
push
aad
jb
pushw
jp
cmp
lods
xor
ss
dec
add
or
cmpsb
mov
call
xchg
add
sarl
repz
fildl
arpl
sbb
or
sbb
add
dec
subl
int
push
mov
in
data16
aas
mov
xor
nop
fldenv
icebp
cmpsl
xchg
repz
push
or
inc
das
add
movsl
dec
jns
add
andb
ja
add
push
rorl
jle
jecxz
dec
mov
dec
push
cwtl
push
cmp
jmp
sub
adc
out
outsb
test
add
clc
cmp
icebp
xchg
push
push
add
xor
str
or
outsl
push
mov
das
mov
mov
cli
verw
cmp
jge
add
into
or
in
mov
fistpll
inc
cmp
les
mov
push
mov
mov
sub
dec
sbb
push
add
inc
clc
push
fisttps
or
add
mov
add
lock
adcb
sahf
xor
cmpsl
dec
xchg
aam
movb
mov
sbb
mov
imul
push
inc
jl
ret
adc
popa
xor
xchg
orb
sub
jne
test
jecxz
push
pop
aaa
test
xchg
aas
popl
fiadds
xor
or
fdivrs
mov
jne
add
pop
inc
mov
leave
dec
cmp
dec
pop
add
jo
shlb
ficoms
add
xchg
push
movsb
stc
mov
vmovlpd
test
add
push
cmp
mov
es
add
pop
out
add
cltd
test
mov
lcall
sub
xchg
add
mov
pop
cli
and
xorb
into
add
adc
inc
push
add
nop
js
mov
mov
pop
loopne
add
rcrl
push
sub
sub
daa
test
iret
ja
ret
jl
adc
into
sbb
mov
lds
sbb
repz
add
and
cmpsl
add
in
test
cltd
lods
and
fcmovbe
stos
or
lcall
lock
add
mov
adc
jbe
filds
jb
mov
xchg
iret
mov
out
push
hlt
sub
icebp
mov
sbb
jb
pop
jecxz
cmp
push
pop
cmp
and
andl
lds
testl
xor
repnz
add
inc
sbb
push
cmp
cmpsb
push
sbb
jp
jne
out
fisubrl
adc
shlb
jge
ljmp
cld
add
out
add
cmp
mov
cli
xchg
add
imul
mov
and
push
pop
jp
xor
loop
mov
jo
pushf
and
mov
fldl
sti
add
jmp
lock
out
cli
add
in
scas
mov
mov
xor
and
add
mov
inc
push
nop
xor
jge
xor
jns
inc
jecxz
and
out
inc
cmp
rcl
outsb
xchg
js
in
add
aam
lret
and
pop
xchg
sbb
mov
rdmsr
inc
or
sbb
pop
out
add
ret
loop
or
lret
add
inc
ljmp
imul
add
cs
push
add
mov
notb
aas
sub
or
rcr
add
add
movb
add
aam
or
xor
mov
xchg
aaa
mov
fmull
pop
cld
decb
push
stos
aas
ja
xor
mov
in
sub
jle
js
pop
xor
inc
iret
mov
dec
add
push
push
inc
and
mov
jae
and
push
add
dec
add
push
cmp
sbb
sbb
adc
loope
mov
add
addr16
aad
and
shrb
dec
jp
fwait
sub
fcmovne
cmp
dec
arpl
dec
enter
insl
add
mov
sbb
out
mov
lock
jnp
int
icebp
popf
mov
mov
fdivl
jmp
add
ja
cli
rorl
les
mov
jge
popa
imul
cld
add
popa
push
mov
loop
fwait
in
or
mov
arpl
jp
and
pop
or
add
add
out
push
loopne
stos
cli
je
sbb
cmc
sbb
lods
pop
fists
loop
adc
cmp
push
sub
push
mov
mov
add
lods
push
jmp
and
push
pushf
cwtl
push
pushf
mov
insb
imul
add
xor
lods
loope
clc
xor
or
shlb
mov
inc
jp
mov
lcall
sub
pushf
add
or
xchg
jnp
mov
arpl
scas
add
sub
popa
push
insl
shlb
insb
in
jbe
andl
ret
gs
pusha
cmp
adc
add
dec
add
in
xlat
int3
and
ret
ret
push
mov
dec
punpckldq
in
jb
fdivs
sbb
sbb
and
inc
fiaddl
lret
cmp
cmp
xchg
int3
fdivrl
xor
dec
push
add
aaa
adc
bnd
gs
js
subl
pop
mov
insl
mov
lcall
sub
insb
pop
add
and
or
pop
add
inc
sbb
or
lds
negb
mov
lcall
popa
aas
idivb
mov
add
aaa
push
outsl
loop
bound
cld
das
sti
push
add
sahf
in
jns
inc
inc
pop
sbb
add
add
aas
mov
gs
and
sbb
fidivrs
add
shll
lock
add
pushf
mov
jl
shl
ret
add
out
add
fs
sahf
dec
mov
daa
pusha
push
cmp
lock
or
shrb
dec
aad
add
out
cmp
inc
inc
and
rcl
add
test
mov
pop
mov
bound
bound
or
push
add
xchg
jp
popa
orb
aad
pushf
xchg
imul
pop
push
nop
jg
xchg
daa
mov
mov
or
add
adc
cli
rcrl
pop
cwtl
xor
add
dec
jb
cs
out
dec
sub
inc
jbe
and
mov
insb
mov
aam
repz
pop
jg
add
cmpsb
fs
mov
rolb
push
mov
xlat
mov
ljmp
jmp
and
push
jmp
fwait
orb
out
dec
add
out
add
lret
and
movsb
sbb
push
cmpsb
cmc
out
xor
mov
movsl
pop
mov
xchg
cltd
jge
rolb
jl
inc
arpl
imul
push
mov
daa
pop
scas
mov
add
cmpsb
xchg
inc
cmp
ret
fsubrp
dec
cwtl
pop
xorl
in
movsl
outsl
aam
enter
int
xor
inc
jmp
cmc
aam
test
jns
or
cld
arpl
jmp
mov
add
and
fstps
add
push
sub
add
imul
fldl
stos
testb
in
sbb
fmuls
stos
rcrb
add
enter
imul
jle
add
sbb
and
mov
inc
rcr
mov
cmp
test
add
pop
ss
sub
cmpsb
mov
add
inc
dec
test
rorb
sbb
jmp
mov
mov
jmp
pop
dec
mov
push
push
divl
add
shll
mov
xchg
add
jg
cmp
out
mov
push
fs
xor
jle
les
mov
aas
push
data16
sbb
nop
cmpsl
arpl
mov
mov
add
stc
sbb
add
pop
mov
addr16
sbbl
fsubrs
insb
add
and
add
fldenv
pop
rcrb
in
adc
xor
push
add
outsb
in
sub
or
aaa
int
arpl
dec
push
std
cmp
mov
loop
cmp
mov
fists
rdtsc
in
xor
xchg
xchg
scas
mov
mov
js
add
orb
lock
jge
mov
data16
xchg
mov
dec
jne
mov
push
decl
cmp
cmpsl
scas
mov
test
jmp
sub
xchg
test
cmp
mov
out
fwait
inc
add
xchg
ret
lret
jns
movsl
inc
enter
adc
mov
lods
mov
inc
jo
cmp
xchg
mov
sbb
mov
movsl
out
loopne
imul
add
push
clc
and
daa
add
data16
sub
and
inc
pop
ds
rol
and
cli
add
test
cmp
push
add
cmp
ret
mov
and
imul
call
in
mov
leave
inc
inc
arpl
mov
out
int3
add
loopne
pop
add
outsb
add
push
scas
fucomi
repz
in
add
or
push
cmp
pop
cmp
jle
add
cs
jo
sahf
add
sbb
iret
pop
pop
cmp
js
sbb
ss
rcrw
dec
add
mov
mov
lret
or
mov
add
adc
fsts
add
xor
add
jne
aam
adc
dec
cmp
inc
int
ljmp
cmp
xor
cmp
roll
sbb
jns
dec
aam
pop
daa
mov
add
lret
and
out
stos
mov
cmp
xchg
pushf
mov
inc
sbb
add
cmpsl
fs
ss
scas
add
mov
sti
movsb
outsl
push
pop
popa
lret
xor
movsb
aaa
roll
xchg
add
add
sbb
or
mov
js
add
cwtl
aad
push
pop
call
filds
sbb
testl
xchg
inc
xor
adc
add
cs
add
dec
cmp
ds
inc
lret
popf
jne
lods
mov
or
adc
add
sub
test
inc
push
and
add
ret
std
add
mov
cmp
mov
in
add
jg
lods
inc
add
mov
enter
dec
lcall
out
xchg
cmp
lds
dec
jmp
cmp
outsl
xchg
idivl
aaa
add
sbb
xchg
ja
pop
mov
ja
mov
lods
in
decl
shlb
nop
lret
add
sarl
xor
add
loope
add
and
mov
xchg
jle
mov
jno
mov
rcrl
xor
lret
add
jo
test
or
add
into
mov
movsl
sub
je
scas
hlt
mov
incb
jnp
out
add
mov
cs
stos
add
add
add
sub
sbb
addr16
ljmp
mov
xchg
stc
push
stos
adc
sbb
push
add
cmp
addl
dec
push
shrl
mov
daa
lret
cld
daa
insb
js
xor
xchg
inc
adc
add
mov
jno
mov
sub
lds
jle
xchg
sbb
faddl
int3
push
das
jbe
lcall
jae
aam
roll
ds
je
test
out
in
sti
adc
adc
add
mov
lcall
faddl
jle
jns
cmpsb
mov
mov
dec
push
inc
loop
bnd
xchg
add
add
jg
inc
adc
push
dec
jnp
add
cmpsl
add
dec
stc
xor
test
aaa
aas
mov
add
sub
add
sub
push
shll
pushf
add
clc
push
sbb
push
pop
imul
jp
or
sub
int
mov
add
in
fists
push
add
cmp
or
inc
pop
add
xor
popa
shrl
add
push
popa
aad
pop
cmc
nop
movsb
call
add
add
cld
out
add
mov
xor
sahf
pop
js
aaa
addb
and
add
cmpsl
xchg
ret
jae
or
jle
int
mov
push
xchg
sub
fisttpl
arpl
lods
cmpsb
add
jbe
insl
out
pusha
adc
and
push
fdiv
add
dec
mov
xor
addb
stc
fidivs
popa
adc
stos
adc
jne
add
xchg
cmp
jle
aaa
arpl
es
xor
add
sbb
adc
test
add
pop
push
add
and
xor
imul
sub
incb
fsubrp
jae
add
add
loopne
xchg
ret
add
add
cmp
or
mov
les
int3
jb
jmp
loopne
add
sar
add
outsl
cmp
out
cmp
pop
out
sub
jnp
add
mov
cmpl
mov
cltd
shr
mov
loope
int3
mov
add
aaa
push
xor
ljmp
xlat
pop
xchg
ljmp
sahf
inc
lret
int
loopne
fists
mov
stc
filds
or
bound
add
xor
icebp
pop
jae
daa
stc
loopne
lods
pop
sub
int
dec
rclb
ja
mov
sbb
call
idivb
jmp
xor
cld
jmp
add
mov
xor
es
add
orl
mov
pop
sub
jbe
lods
add
jg
outsl
roll
mov
add
jb
int3
cmpb
mov
xorl
add
cltd
push
fcoms
dec
das
and
in
lret
cs
cmp
pop
add
jbe
dec
adc
add
add
cmpsb
dec
sub
and
dec
lret
pop
add
or
in
jl
arpl
mov
jge
inc
add
xchg
insl
inc
jge
mov
popf
enter
mov
cmp
ffreep
mov
add
mov
and
add
jg
and
sbb
popf
repz
sub
ja
mov
jns
and
dec
leave
test
xchg
movl
addb
adc
test
ds
jns
jns
test
call
mov
push
cmp
stos
sbb
add
add
mov
xorb
or
inc
add
ret
and
out
js
xlat
in
nop
pop
clc
call
add
push
add
lea
call
jp
ja
dec
outsl
add
repnz
pop
xor
xor
lcall
mov
push
or
je
mov
add
mov
adc
insl
xchg
insb
sbb
add
addr16
add
aad
jno
mov
and
cld
cwtl
dec
jb
sbb
add
push
add
shlb
popf
idivb
add
mov
lahf
push
push
jmp
add
mov
add
outsl
jmp
mov
scas
add
add
pop
mov
lret
pop
pop
ret
xchg
xchg
sahf
sub
adc
or
rolb
xchg
jecxz
sahf
add
dec
jbe
or
add
add
mov
push
mov
andl
enter
push
mov
stc
or
mov
jno
xor
add
imul
add
fisttps
mov
data16
push
pop
mov
adc
xor
fcomp
into
pop
cmp
pop
mov
and
popa
test
adc
mov
sar
sub
sub
or
scas
mov
jle
add
cmp
sub
iret
ffreep
cld
mov
xchg
stos
cwtl
or
in
mov
test
mov
stos
lret
leave
addb
fadds
jbe
mov
in
loopne
repnz
pop
add
gs
aam
imul
cltd
movsl
popf
sarb
fwait
or
lock
mov
push
outsb
pop
jo
pop
jmp
in
fisttps
fsubrl
mov
xchg
popa
inc
mov
xchg
sahf
js
or
bound
pop
add
inc
add
hlt
scas
outsb
push
mov
out
add
mov
call
mov
sbb
movb
jns
and
enter
pop
clc
add
test
stc
push
dec
faddl
in
mov
pushf
mov
aas
in
lods
mov
mov
add
xchg
or
andb
jge
adc
mov
and
pop
jns
push
add
ficoms
mov
jo
or
xlat
sub
add
jb
cs
pop
cli
adc
cmp
fwait
mov
jle
mov
pop
imul
dec
add
cmp
dec
xchg
inc
xor
cmpsl
std
xchg
add
push
repnz
clc
add
mov
aaa
dec
add
xor
add
push
fdivr
subl
add
pop
stos
gs
stos
ret
add
xchg
jg
mull
mov
dec
stc
push
xchg
add
fs
sub
movsl
mov
fwait
add
xchg
loop
lahf
jp
rcl
cmpsl
xchg
repnz
add
xor
fiaddl
imull
orl
mov
and
pop
sub
hlt
push
scas
push
add
inc
rorb
stc
add
test
lods
jle
mov
sub
mov
add
fldl2e
add
jle
sbb
mov
and
adc
jb
outsb
add
loopne
add
je
daa
add
inc
inc
test
aam
cmp
divps
pop
or
mov
mov
dec
icebp
pusha
mov
popa
test
leave
movsb
cltd
mov
add
ret
xchg
es
cmp
ret
mov
and
andl
add
jno
pop
add
lods
into
or
sub
add
pop
in
lret
push
subb
pop
loop
mov
pop
pop
add
sbb
mov
cli
dec
lock
insb
inc
stos
clc
adc
dec
mov
cmc
out
add
sti
pop
inc
and
dec
sbb
aas
fadd
push
jo
add
arpl
dec
rolb
iret
xor
add
add
cmpsl
add
test
push
jne
push
mov
das
add
add
jbe
and
jne
dec
add
inc
sub
cmpsl
lahf
jns
pop
pop
adc
add
dec
sti
mov
fsts
out
daa
mov
jp
lret
roll
test
add
cld
ljmp
add
mov
rdpmc
push
fnstenv
in
dec
in
xchg
add
lcall
in
icebp
xchg
stos
incl
enter
sbb
jmp
jno
sbb
and
push
clc
into
xchg
sarb
icebp
xor
xchg
movsl
ja
xchg
add
lahf
es
mov
scas
pusha
xchg
pop
ljmp
sub
mov
fsubrl
lock
add
and
mov
ss
cmpsl
fdiv
push
loop
ret
sbb
leave
add
inc
lahf
mov
cs
into
pop
stos
in
add
out
daa
mov
enter
loop
xchg
xchg
mov
mov
jnp
jl
cld
cmpb
jge
dec
add
and
add
push
cmp
or
loop
sti
pop
adc
fimuls
loope
pushf
sub
adc
dec
lea
add
dec
in
jb
stc
nop
mov
xor
into
or
jns
push
jg
push
add
je
es
sub
scas
cmp
ret
xor
fwait
cwtl
stc
in
sbb
and
loopne
push
or
xor
add
lock
add
popa
add
mov
cmp
mov
shlb
pop
add
or
mov
mov
inc
aad
andl
add
jne
jb
shll
lret
mov
cli
mov
push
int
lcall
adc
push
cmpsl
enter
push
jp
arpl
cmp
test
in
mov
or
add
clc
loopne
mov
sbb
out
out
and
int3
jmp
adc
mov
aad
lahf
jge
jecxz
frstor
push
add
shll
fincstp
inc
cli
stos
shrb
jb
aam
nop
mov
add
in
mov
sarl
mov
incl
mov
jns
adc
divb
and
adc
push
add
dec
sub
jp
xlat
add
adc
add
incb
pop
add
add
fsubrs
inc
out
imul
ret
mov
mov
rcrl
push
xor
sarl
jmp
imul
and
xchg
add
jbe
xlat
pop
mov
add
jmp
pop
int
test
mov
push
jle
jne
xchg
fldt
add
add
in
lret
mov
incb
movsl
xchg
sti
add
cltd
add
jl
xor
rdpmc
aam
cmpsb
addr16
fwait
lcall
add
cmpsb
jg
xor
pop
cltd
loop
and
cltd
push
add
insb
or
cmpsl
xchg
add
add
scas
add
mov
cmp
out
mov
mov
rorb
push
push
jmp
iret
pushf
cltd
popf
add
dec
add
jg
xchg
mov
sbb
int3
mov
or
imul
sahf
fadd
das
add
dec
mov
test
or
outsb
icebp
add
sahf
ret
cmp
add
push
dec
xor
add
add
lcall
and
movsl
mov
pop
xor
cwtl
push
add
jge
add
enter
out
outsl
shll
add
movsl
mov
clc
xlat
push
mov
cmc
mov
jnp
push
les
hlt
sbb
jecxz
inc
daa
fwait
pop
pop
inc
cs
mov
outsb
jbe
cmp
xchg
mov
inc
push
add
push
sub
add
push
push
mov
dec
test
jno
push
out
cltd
mov
arpl
movsb
mov
dec
sbb
sbbl
or
add
push
cmp
std
mov
dec
aad
popa
push
dec
adc
mov
push
dec
and
insb
xchg
leave
lahf
outsb
adc
mov
add
mov
pop
rcll
movsb
mov
dec
sub
arpl
add
mov
mov
xor
rol
add
adc
jnp
add
loopne
sahf
cmpsb
mov
mov
shll
jmp
dec
mov
insb
and
stos
add
mov
sbb
lea
cmpl
xor
pop
pop
jecxz
inc
add
test
cmpsb
lock
cmp
dec
and
outsl
enter
mov
push
clc
xchg
adc
mov
pop
loop
lock
and
and
cmp
xor
push
andl
xchg
in
push
out
push
push
scas
lea
xor
outsl
mov
popf
imul
sbb
cmp
dec
inc
add
stc
out
rcll
pop
adc
movsl
sahf
push
mov
sbb
or
ret
daa
xor
movsl
in
test
iret
mov
dec
add
cltd
sub
and
sbb
add
push
test
pop
pop
xor
mov
sbbb
jne
add
sub
mov
out
pop
jno
ss
out
sbb
mov
add
test
leave
adc
xor
mov
cmp
push
inc
out
add
test
daa
mov
push
fcoml
or
pop
push
enter
rorl
push
jbe
in
xor
add
outsl
cld
push
sub
add
mov
sub
inc
add
repnz
mov
sub
out
je
jns
sbb
jmp
jmp
push
hlt
cmpsl
add
shrb
jl
dec
xchg
add
xchg
add
add
mov
jnp
out
bound
mov
mov
scas
sbb
sbb
in
movsl
add
rclb
hlt
call
js
icebp
shl
add
add
fisubrl
xchg
faddl
xchg
jg
mov
iret
mov
push
inc
mov
sahf
ficoms
push
leave
pop
add
push
dec
inc
int
mov
lds
cs
lock
and
mov
inc
daa
clc
mov
or
stos
mov
lods
lret
adc
mov
xchg
addr16
mov
or
test
add
add
mov
jmp
inc
pop
ds
add
mov
push
test
in
add
cmp
adc
mov
adc
add
insb
pushf
test
sahf
je
mov
add
sbb
ss
xchg
rcll
cld
sbbb
jg
jp
dec
in
add
mov
stos
es
jne
test
bound
xor
stc
add
ja
ljmp
mov
jb
xor
push
add
jp
outsb
sbb
dec
subb
or
rcll
popa
add
jge
out
or
sub
add
ljmp
add
mov
lea
cs
mov
mov
adc
mov
inc
add
sbb
and
xor
pop
psubsb
pop
cli
je
inc
shlb
test
jae
add
adc
fmuls
push
cmp
hlt
int3
mov
cmp
dec
lret
sub
push
and
shrl
and
fsts
add
sahf
in
jnp
andl
or
add
add
mov
sub
addl
pop
sub
idivb
into
push
in
stos
add
and
mov
mov
sub
add
inc
add
xchg
mov
cmovg
scas
push
xor
or
iret
mov
add
mov
mov
mov
add
xchg
jg
or
mov
xlat
add
add
jg
lahf
xor
push
pop
test
mov
rorb
mov
add
jl
in
aam
adc
das
pop
movsl
xchg
test
icebp
lds
shll
out
out
js
in
movsl
fistps
out
add
cmp
cmpsl
push
ljmp
sub
cwtl
scas
xor
iret
and
jge
int
out
les
pop
ret
daa
jle
cmp
adc
dec
cltd
orb
in
data16
add
adc
ja
push
mov
inc
add
shrl
or
jae
arpl
and
dec
andl
insb
add
mov
add
add
scas
inc
addr16
add
add
and
andb
ss
lret
xchg
test
std
movsb
mov
movsb
push
clc
pop
or
inc
subb
out
inc
mov
add
test
pop
lea
and
insl
call
jmp
cmp
addr16
sbb
fucomip
loope
mov
push
cmp
enter
es
mov
adc
pusha
push
shrb
or
int3
push
stc
loopne
push
cmpsl
leave
ja
jmp
add
jge
or
cld
std
dec
jge
or
sbbb
in
xor
imul
iret
cwtl
aaa
clc
cmp
jno
mov
xchg
add
push
or
out
xor
mov
push
inc
ljmp
je
rcll
fsubl
inc
sahf
out
jo
mov
mov
cmpsl
and
sbb
jmp
sub
jecxz
sti
sbb
mov
stos
gs
push
int3
cs
aad
mov
clc
mov
push
stos
add
into
xchg
roll
pusha
jmp
dec
add
loope
mov
jbe
je
iret
add
jp
aaa
add
add
xchg
stc
stos
scas
add
push
repz
idivb
push
add
mov
mov
push
daa
jg
mov
test
inc
add
dec
mov
add
jle
mov
mov
push
xchg
push
sahf
push
sbb
icebp
jb
rcll
xor
fcomp
pop
adc
xchg
cld
sahf
add
ret
sub
mov
sarb
sbbl
sbb
inc
inc
insb
adc
cmp
mov
cmp
test
cld
stos
jl
pop
adc
iret
fdivs
xor
mov
frstor
push
fsubrs
cltd
daa
adc
ds
pop
out
jae
dec
scas
lea
jmp
mov
sbb
lcall
mov
aas
xor
xchg
sub
cmp
std
ss
stos
leave
mov
iret
in
leave
inc
jbe
add
icebp
mov
mov
and
xchg
dec
test
cwtl
mov
in
movb
and
addr16
aaa
xchg
in
notb
or
add
ss
gs
negb
inc
lock
pop
xlat
cmp
iret
jne
add
xor
stos
and
add
lret
add
out
cli
sub
mov
sub
fnstsw
mov
out
testb
sub
popa
mov
pop
and
and
dec
outsl
mov
pop
xchg
adc
add
nop
adcb
test
push
add
in
cmp
loop
fwait
mov
add
push
add
jno
jae
shlb
jbe
push
loop
lea
lret
xchg
add
pop
int3
xchg
sub
xor
mov
xchg
sub
push
stos
outsl
jne
jb
adc
fimuls
mov
shr
mov
xor
out
outsl
das
add
clc
orl
xor
push
add
stos
or
lahf
mov
les
jo
jns
movsl
dec
fcomp
sbb
dec
adc
into
push
mov
add
fisubrl
push
dec
adc
subb
jp
inc
add
loope
mov
inc
scas
add
push
and
add
xlat
iret
mov
jg
dec
add
adc
mov
scas
das
xor
cmp
stos
jle
out
sub
add
mov
pop
lds
out
add
and
fstpl
aaa
sub
mov
out
pushf
and
cmp
sahf
mov
push
lret
stc
dec
sub
add
int
adc
out
jo
push
add
sub
dec
fldl
pop
out
sbb
stos
add
mov
push
stos
adc
jns
xchg
stos
adc
loopne
and
add
in
pop
add
xchg
mov
lahf
adc
mov
aaa
xchg
xor
push
sbb
lods
adc
test
aas
xor
mov
rol
pop
popa
dec
adc
lret
add
mov
sub
push
lock
add
ftst
sbb
add
add
aaa
icebp
xchg
xor
push
movsl
in
ds
popf
jge
les
shlb
mov
adc
sbb
repz
add
mov
mov
add
out
push
fadds
jns
dec
add
into
add
pop
push
add
mov
fdivrp
push
loop
popl
cmp
add
mov
leave
add
add
lock
mov
add
add
adc
pop
pop
add
push
dec
jmp
pop
dec
mov
pop
dec
add
push
add
repnz
pop
in
push
jns
xor
rolb
es
scas
add
ret
cltd
add
fcos
call
in
dec
js
aam
arpl
lods
and
mov
push
je
in
or
enter
cwtl
sub
imul
add
fadds
out
jnp
fnstenv
loope
mov
inc
cltd
add
add
inc
mov
xchg
add
add
xchg
add
and
pop
into
add
pushf
xchg
cmp
fcomps
add
insl
adc
out
jge
cwtl
aaa
fcomip
pop
flds
test
andb
jg
dec
cmpsb
add
add
push
mov
subb
test
add
xchg
mov
dec
pop
xchg
push
stos
in
cld
mov
xor
pop
mov
dec
jecxz
dec
aam
sbb
pop
in
daa
add
add
add
sbb
xchg
dec
dec
mov
aad
nop
sahf
and
mov
insl
add
sub
or
shlb
add
adc
arpl
movsb
add
push
subl
or
test
add
xchg
add
pop
push
jb
imul
push
fisubrl
cmpsb
add
arpl
dec
adcl
mov
push
add
pop
loopne
mov
inc
cwtl
daa
std
repz
cmp
sub
adc
push
lods
push
in
cli
lods
bound
add
add
and
scas
mov
in
ja
rolb
out
mov
add
in
xchg
dec
pop
lea
sbb
xor
ljmp
bound
jo
dec
add
popa
push
ljmp
test
mov
bound
and
popa
or
popf
inc
adc
jae
popaw
sub
add
stos
push
mov
adcb
add
les
cmpsb
out
sub
inc
adc
sbb
add
pop
mov
add
xchg
add
mov
insl
outsb
aas
cmp
inc
loop
mov
add
popf
pop
inc
aas
insb
mov
adc
lret
testl
fs
pop
pop
sbb
push
test
add
push
xchg
pop
mov
pop
sub
jecxz
add
pop
xchg
cmp
add
in
jge
add
inc
or
lahf
add
dec
sub
add
cli
and
inc
int
jnp
jo
sahf
dec
add
outsl
add
test
insb
sti
add
jle
jle
and
mov
push
inc
add
jns
mov
and
imul
popa
lods
pop
shlb
add
outsl
call
nop
cld
add
in
add
punpckhwd
push
mov
rcr
mov
inc
rcll
xchg
xor
add
add
imul
push
das
pop
roll
mov
push
cmp
xor
jp
pushf
out
add
pop
pop
ljmp
adc
shrb
mov
pop
add
enter
pop
ja
jmp
sub
in
in
das
js
cmp
push
mov
pop
add
jns
xor
add
adc
cwtl
sub
adc
add
or
xchg
add
subb
ss
test
add
push
es
jae
dec
add
dec
dec
inc
mov
fwait
add
ljmp
cmp
test
add
popf
test
into
pop
jp
lahf
rol
lea
pop
fwait
int3
mov
add
jp
mov
or
pop
xchg
add
add
mov
dec
sti
add
inc
add
pop
lret
ret
jg
jl
lock
xchg
addr16
or
cli
mov
mov
addl
sub
mov
xor
xlat
add
push
outsl
add
sub
cltd
popa
add
pop
arpl
dec
jbe
add
xor
jb
add
jno
add
sbb
lret
sbb
adc
rcll
mov
mov
out
add
xchg
pop
xchg
xor
pop
or
adc
movsb
push
lret
mov
dec
out
js
outsl
xchg
sahf
test
add
jb
add
fstpl
pop
inc
mov
pop
ja
gs
leave
addl
xchg
add
out
sub
mov
inc
xor
lret
add
mov
clc
in
mov
add
int
pop
test
test
sbb
cmp
sub
je
lret
jl
sti
add
jo
xchg
cmp
and
jno
rorb
jo
add
add
ret
lds
fwait
xchg
test
fdivr
insl
int
repnz
xchg
lret
dec
insb
mov
test
or
shrl
fists
mov
sub
add
decl
xor
arpl
frstor
sti
add
jecxz
inc
add
sbb
xchg
addb
int
jo
in
imul
pop
add
xchg
mov
sbb
imul
push
jmp
movsl
lret
and
orl
lods
and
loope
add
jb
or
mov
add
add
adc
loop
mov
ljmp
rcrl
inc
cltd
out
cli
fs
jl
cli
sbb
into
popf
lods
loopne
mov
xchg
mov
ds
cmpsb
dec
push
pop
rclb
mov
nop
adc
sub
movsl
cmp
sub
push
inc
negb
pop
mov
xchg
popf
add
repz
aas
fwait
in
jb
mov
in
sub
addr16
mov
mov
xchg
xor
mov
das
mov
jno
add
push
shlb
add
sub
push
jb
adc
ret
add
sti
addr16
inc
mov
dec
mov
adc
pop
mov
add
cmp
add
pop
pop
cli
mov
fs
rdtsc
add
loopne
xchg
addr16
push
add
push
test
xchg
push
out
mov
rcrb
jb
sub
outsl
and
add
mov
lret
adc
clc
xor
add
dec
sbb
adc
fnsave
repz
pushf
mov
rolb
cmp
std
dec
jl
aad
adc
rcrl
insl
or
push
and
cmp
or
push
mov
xor
mov
mov
sub
mov
lock
shrl
add
jecxz
imul
adc
lods
add
test
sbb
movb
add
enter
xlat
psubw
in
pop
push
jne
test
pop
mov
jb
cmpsb
and
shrl
aad
in
xor
inc
pop
popf
pop
sti
mov
enter
pop
cmp
sub
clc
cmp
add
repz
cmpsl
push
mov
inc
mov
fcoml
add
add
mov
daa
add
add
cmp
add
les
xchg
pop
data16
add
sbb
add
popl
jecxz
outsl
std
lods
add
add
sbb
xchg
add
add
and
pop
popf
outsl
adc
roll
dec
mov
add
add
jg
inc
jle
add
add
js
addl
add
add
inc
push
or
mov
pop
mov
cli
push
mov
or
cli
ss
aas
pop
add
cli
bound
jle
mov
pop
add
xor
mov
jnp
add
movsl
push
add
adc
sbb
mov
xchg
fwait
popf
sbb
add
mov
mov
dec
mov
jmp
ja
rcrl
xchg
jge
fs
sahf
mov
push
pop
je
jg
mov
mov
add
sti
in
add
std
and
sub
sub
xchg
sbbl
lea
cmp
cmpsb
rorb
jbe
cmp
sti
sub
push
push
cmc
dec
push
loop
addl
int3
ljmp
clc
xorl
leave
or
je
jnp
test
xchg
xchg
add
xor
fcomps
mov
add
add
jo
add
add
insb
cmp
nop
imul
movsb
cltd
jmp
imul
add
mov
push
jp
xchg
xor
add
lds
sub
in
add
mov
out
mov
mov
stos
add
adc
mov
xchg
dec
int
sub
xor
add
dec
push
in
pop
fadd
xor
jl
fstps
test
xchg
lcall
mov
leave
xchg
jae
mov
add
in
add
or
inc
add
push
inc
or
xlat
test
sub
iret
xchg
loop
sbb
xchg
shll
mov
add
inc
add
call
adcb
xchg
add
push
ds
dec
fisubrs
push
jge
add
pusha
jg
daa
pop
xchg
add
xchg
xchg
std
cmp
add
ja
and
add
dec
push
js
js
inc
or
cmc
mov
daa
sarl
dec
and
repnz
cmpsb
testl
dec
lods
inc
add
pushf
das
mov
pop
add
push
add
adc
sbb
mov
push
dec
sbb
fstps
adc
sbb
stos
add
rcr
ss
dec
insb
cmpsb
xor
sbb
and
stos
mov
sub
add
add
ret
mov
mov
out
stos
ret
test
dec
repnz
insl
add
add
sub
add
and
insl
arpl
xor
js
cmp
popf
add
out
mov
lock
repz
or
movsb
push
and
jmp
scas
add
add
movsl
mov
sbb
icebp
xchg
add
lret
fmull
add
push
imul
jl
ja
or
test
fcmovnbe
push
push
fldt
bound
add
sahf
mov
jb
inc
push
cmp
pop
mov
repz
xor
lahf
add
add
add
aas
inc
add
enter
ds
xchg
mov
sub
cmp
or
arpl
lret
add
out
xlat
add
add
cmp
sahf
or
stc
jbe
orb
xor
add
add
inc
or
add
push
jo
add
lock
rolb
push
pop
xchg
ret
scas
add
dec
mov
or
xchg
jne
mov
or
add
add
add
mov
notl
mov
sahf
lret
rorl
add
xchg
sub
cmp
addb
cmp
xchg
lcall
dec
sub
mov
mov
add
daa
push
lret
ret
pop
in
cwtl
jle
nop
add
and
daa
pop
lds
aad
repz
pop
mov
mov
insb
adc
mov
mov
call
sub
add
sub
nop
scas
ret
mov
dec
add
add
jae
cli
testb
and
int
ret
mov
mov
jnp
movsl
divb
add
cmpb
imul
add
add
sub
add
xor
xchg
movsl
outsb
hlt
pop
sub
aaa
add
or
iret
popf
jo
rcll
inc
mov
jno
pop
sbb
adc
scas
jbe
cltd
int
test
push
int
mov
and
inc
add
scas
mov
add
sub
out
in
aad
imul
mov
mov
jl
cmc
addb
fcom
lock
pop
adc
je
inc
lcall
mov
add
mov
jp
in
orb
mov
pop
add
add
xor
xchg
stos
hlt
bound
jno
mov
out
mov
js
sahf
and
clc
mov
imul
add
push
cwtl
cwtl
mov
loop
aas
dec
add
mov
pop
jp
in
call
pop
int
popf
add
les
jg
jb
lret
into
jbe
or
lcall
push
pop
dec
or
sub
leave
mov
xchg
hlt
cmpxchg
mov
stos
xlat
inc
jmp
mov
add
js
fists
sbb
and
mov
xor
fs
out
les
out
adc
lds
push
daa
pop
out
imulb
jp
pop
dec
add
and
sbb
in
add
xor
xor
sar
jge
xchg
scas
cmp
adc
les
cmp
add
jl
jge
outsb
clc
add
mov
or
sbbb
mov
mov
es
mov
fsubl
sub
cli
add
cld
or
inc
sti
inc
inc
jbe
test
xchg
call
jb
clc
out
add
fsubrl
cmp
mov
out
mov
test
lods
xchg
popf
xor
leave
xorl
jnp
add
xor
add
jno
std
or
aaa
dec
ss
dec
add
es
loope
addb
add
or
add
pop
pop
pop
and
add
stos
xorb
clc
and
jb
mov
dec
addr16
fldcw
push
mov
sbb
test
add
jns
xchg
aas
and
jno
das
xor
cltd
add
pop
mov
jne
inc
pop
mov
jg
movsl
testl
mov
out
jp
mov
cmp
cmp
sbb
inc
xor
add
andl
lds
add
dec
into
sbb
mov
hlt
and
addr16
xchg
addl
clc
ret
hlt
add
pop
add
add
test
test
call
lret
cltd
add
fsubrs
adc
ja
insl
adc
addr16
add
add
addr16
mov
jo
add
les
ds
xchg
outsl
out
incl
std
add
inc
pop
aaa
cmp
add
xchg
jo
jle
mov
lcall
aas
aad
inc
mov
mov
ret
add
mov
cltd
mov
call
insl
repnz
add
xor
sbb
pusha
xchg
repz
out
int
adc
mov
insb
andl
mov
add
cmp
xchg
nop
add
loopne
leave
add
mov
pop
add
cmpsl
pxor
mov
outsl
add
add
or
add
add
enter
lods
xor
add
dec
imul
ljmp
ljmp
add
jno
jge
testb
dec
pop
push
add
jno
push
notl
fnstenv
movsl
add
ret
mov
add
xchg
sarb
push
or
icebp
inc
add
or
scas
mov
add
adc
add
scas
add
aad
and
lret
jo
in
inc
xchg
aaa
movsl
fcoms
mov
add
dec
push
inc
inc
cmp
out
orb
mov
imul
xchg
js
sub
lret
and
stos
mov
shlb
pop
mov
dec
ficoms
fiadds
cli
add
add
in
stos
jns
mov
add
add
cmc
std
mov
ljmp
jge
add
js
addb
adc
add
call
inc
adc
je
scas
addl
cld
xor
add
add
push
push
fnsetpm(287
dec
add
fildl
movsb
xchg
add
outsl
mov
inc
adc
dec
lret
inc
mov
pop
sbb
bound
imul
imull
pop
xor
stc
mov
sbb
xchg
mov
roll
fucomp
pop
push
add
pop
test
lea
cmpsb
aad
add
repnz
jnp
ficoml
adc
sub
or
jl,pt
pop
adc
mov
mov
sub
adc
clc
mov
add
insb
ljmp
mov
popa
enter
aad
add
lret
rcll
pop
sbb
push
ss
add
add
xlat
mov
dec
mov
out
test
and
add
ficompl
xor
add
dec
add
add
cmp
std
pop
and
push
lods
and
mov
aam
adc
mov
mov
filds
std
pop
mov
shr
mov
mov
add
and
jne
jbe
and
dec
rolb
lods
add
xchg
or
mov
add
lods
movsl
lods
cmp
add
and
aas
inc
add
mov
add
sub
lods
add
mov
add
xchg
push
pop
mov
stos
xchg
mov
ss
fdivl
and
sarb
jmp
pop
mov
test
push
mov
enter
add
imul
and
call
cmpsb
dec
adc
mov
sbb
mov
fwait
xor
add
out
adc
movsb
pushw
ljmp
mov
add
xchg
xorl
xor
cmpsl
xor
dec
or
repz
pop
fisubrl
add
dec
and
shr
add
add
cltd
mov
mov
add
and
mov
lods
pop
push
cwtl
or
pop
ret
hlt
enter
and
push
adc
sahf
loopne
mov
add
add
xor
pop
cmp
fcomip
test
jp
insl
push
or
int
lods
pop
ret
add
cwtl
xor
mov
push
cltd
inc
add
dec
std
push
insl
add
sahf
scas
out
or
dec
mov
fwait
add
lret
negb
add
push
je
mov
lret
push
in
adc
popa
andl
mov
pop
js
aad
fmuls
mov
xor
pop
mov
in
das
cmp
xorl
or
lcall
dec
add
movsl
nop
cltd
into
stc
repnz
sub
and
je
adc
imul
adc
flds
xorb
cmc
sbbb
inc
add
rorl
cmpsl
push
xor
xor
test
xchg
lret
dec
sbb
add
jl
inc
repnz
lea
mov
clc
and
mov
pop
pop
push
mov
cli
and
popa
mov
and
or
sub
mov
testl
mov
pop
xor
add
fldenv
imul
shll
mov
ss
pop
add
test
and
into
xchg
popa
ja
mov
mov
fidivs
orl
dec
and
adc
std
and
mov
push
mov
call
leave
movsb
adc
lods
add
cmp
xchg
dec
icebp
inc
fstpt
test
mov
int3
or
add
mov
fstl
push
sub
mov
push
add
push
cs
pop
movb
add
push
lock
mov
xorl
decl
add
add
add
cmpsb
shrb
mov
push
dec
add
pop
fs
nop
fstpt
xor
mov
xor
pop
enter
rol
andl
je
fcomi
dec
xchg
mov
ret
push
loopne
sub
lds
push
push
or
cmp
inc
sbb
cld
popw
dec
fldenv
dec
xchg
sub
xchg
rcl
sbb
pop
and
movsl
subl
lock
add
xor
repnz
adc
sti
jbe
xchg
ret
stos
and
std
mov
and
pop
cmp
xor
add
stos
add
lret
adc
cltd
fldcw
xor
jge
add
adc
cmp
xor
arpl
orl
cmp
add
call
fdivrp
leave
in
jnp
mov
jg
add
pop
add
imul
sar
cmc
add
xchg
jle
sub
push
les
int3
insl
xchg
test
pop
into
test
xor
push
leave
add
cli
mov
xchg
shr
js
mov
hlt
mov
out
outsb
sti
lcall
jge
lds
xor
orl
jns
loopne
imul
mov
cmp
scas
dec
sub
insb
filds
jge
jne
mov
int
sbb
scas
jo
xchg
add
cmp
ficomps
js
lcall
inc
add
loopne
adc
xchg
adc
sbb
stos
sbb
add
sub
push
popf
ds
inc
add
add
add
add
push
sub
lret
add
ds
cltd
or
push
pop
mov
xor
imul
push
imul
xchg
arpl
out
mov
movsb
decl
addl
and
push
xchg
add
pop
rol
push
add
subl
fld
fisttpll
test
in
cwtl
inc
sub
fwait
aad
mov
mov
add
in
scas
push
and
mov
sub
mov
lret
sbb
notb
mov
mov
cmp
adc
add
cmc
sbb
add
shll
outsl
adc
mov
xor
xor
fs
pop
and
and
add
call
jge
xchg
or
and
cs
subb
pop
movsb
shl
data16
adc
mov
lods
out
add
imul
jae
xor
int3
sub
mov
push
or
fimull
adc
xchg
xor
leave
xchg
xchg
add
popa
ret
xor
out
add
in
sub
jp
add
xor
test
dec
sub
fdivr
lcall
dec
dec
ret
push
ljmp
lock
jne
lahf
ja
icebp
stc
xor
cli
push
add
sub
aam
mov
dec
andl
call
mov
add
xchg
addr16
sub
mov
loop
adc
and
add
pop
pop
mov
mov
push
fcoml
negb
test
xor
rolb
ficompl
dec
sbb
fst
out
dec
xchg
cld
mov
pop
adc
popf
int3
pop
aas
fistpl
in
jbe
xchg
push
add
pop
dec
lret
inc
daa
or
push
xor
push
sbb
insl
mov
cmpsb
nop
adc
jp
inc
out
or
jp
or
sahf
push
in
push
add
repz
dec
lods
xchg
sub
orb
jne
pop
xchg
jecxz
jb
add
dec
lds
xor
cwtl
sbb
xchg
mov
inc
gs
inc
jge
mov
jmp
int3
popa
push
xlat
in
push
and
out
fldt
and
insb
data16
add
add
push
rol
inc
aam
outsl
xchg
test
pushf
rclb
pusha
test
dec
loope
outsl
sbb
pop
mov
jmp
push
iret
mov
sbb
pop
gs
lods
es
stos
mov
add
js
push
add
add
mov
cmp
int
push
repz
rorl
scas
pop
pop
rorl
xor
lcall
ret
cmp
cwtl
aaa
inc
les
add
jo
jbe
jnp
inc
lret
jl
mov
outsb
lcall
cli
add
mov
nop
add
push
jnp
xor
inc
movsb
movsl
mov
lock
adc
push
push
les
ret
add
out
popf
jle
xor
dec
ljmp
or
subb
dec
out
adc
lahf
cli
add
mov
movl
mov
rclb
ja
jb
cli
add
scas
push
filds
pop
jbe
aam
imul
aad
mov
js
dec
pop
movsb
xchg
imul
mov
clc
add
push
jl
insb
pushf
mov
scas
sub
sub
movsl
inc
imul
add
sub
sub
add
repnz
lods
or
std
add
or
mov
aam
fstpl
jnp
insb
addb
mov
mov
stc
iret
fdivrs
cmpsb
pusha
jo
push
cli
or
in
mov
sbb
push
push
fisttpl
jno
add
rclb
ret
push
sub
fldl
pusha
in
add
add
aam
decb
icebp
xchg
mov
add
jbe
add
push
push
xor
mov
push
es
sbb
mov
daa
dec
jne,pn
scas
cwtl
sbb
jl
add
add
in
add
push
xor
pusha
test
sbb
addl
movsb
add
mov
pop
jo
mov
dec
add
pop
stos
add
roll
and
xor
dec
test
jl
inc
sbb
pop
jmp
lahf
xchg
out
pop
roll
jmp
enter
xchg
push
cmc
ret
inc
add
add
sub
lds
add
shlb
stos
add
aaa
mov
mov
subl
ds
cmp
fs
jecxz,pt
clc
leave
pop
xchg
aas
xchg
icebp
leave
pop
movsb
add
xchg
pop
add
mov
ss
and
add
xor
adc
or
xchg
mov
idivb
pop
jae
insb
push
cmp
sub
sahf
add
nop
frstor
arpl
int3
cmp
xor
insb
jns
lods
jnp
mov
test
pop
mov
int
arpl
outsl
pop
push
and
aaa
add
mov
cmp
mov
mov
leave
fcomps
jmp
and
mov
mov
add
stos
movsl
fdivl
mov
mov
inc
ss
pop
sahf
int
ss
sub
jle
cmp
mulb
add
enter
and
fisubrl
adc
xor
jbe
cmp
xor
stos
scas
lcall
nop
cmp
jno
mov
pop
sub
xchg
add
cld
out
adc
add
mov
stc
pop
cmp
jo
incl
jnp
pop
out
cmp
pop
sub
pop
addr16
sub
pop
add
push
and
testb
mov
or
mov
sbb
add
add
in
mov
add
lcall
pop
stc
rolb
inc
int3
stc
imul
inc
aam
imul
dec
xor
dec
test
movsl
mov
mov
adc
mov
xchg
dec
push
outsb
out
add
dec
add
fdivrs
aas
add
sub
outsl
inc
xchg
neg
cvtps2pd
gs
je
add
imul
sbb
mov
ljmp
xchg
movsb
sub
cmp
fistl
cs
or
mov
imul
adc
inc
push
add
or
stos
and
xorl
shll
pcmpgtd
jge
add
popa
or
add
dec
or
cmp
loopne
pop
notl
adc
js
pushf
or
test
or
mov
dec
jl
sbb
ret
xchg
mov
mov
dec
enter
cmpsb
add
sbbl
js
add
add
xchg
sub
mov
adc
mov
add
dec
push
adcb
cld
inc
imul
add
in
mov
add
or
add
add
add
cmc
pop
push
cmp
iret
lock
repnz
and
sbb
pop
addr16
ret
mov
and
add
inc
lret
xchg
mov
andb
lret
add
add
mov
sbb
scas
mov
add
add
mov
mov
add
or
test
stos
fwait
pop
sub
mov
enter
xorl
inc
xchg
add
xor
outsb
and
test
mov
mov
lods
in
push
ret
test
lcall
and
ror
fisubs
ljmp
cmp
jns
data16
jl
inc
and
movl
jmp
push
rolb
repz
stos
mov
and
mov
adcb
fs
repnz
and
inc
pop
xchg
pop
pop
popa
in
aaa
add
adcl
sub
sarb
fld
push
xchg
popf
addr16
adc
push
dec
sbb
fstpl
cltd
adc
aam
cmp
inc
add
stc
cmp
add
xchg
rolb
cmpsb
shrb
dec
out
add
adc
add
das
sub
subb
sbbl
mov
mov
fadds
push
shlb
and
mov
addr16
cmp
pop
ja
sub
aaa
mov
test
daa
jle
xchg
ss
add
mov
call
fsubr
lret
xor
lods
push
or
sbb
or
add
imul
movl
adc
fwait
ljmp
add
pop
xlat
cld
and
dec
inc
fs
add
call
arpl
stc
lahf
cs
gs
mov
lods
sahf
add
mov
sar
mov
add
aam
in
add
add
dec
cmp
push
add
mov
push
cmp
inc
push
cwtl
mov
imull
add
add
cmp
cmp
and
and
or
lahf
outsb
inc
cmp
xor
add
or
pushl
fs
ja
hlt
int3
xchg
add
mov
call
add
dec
or
push
iret
clc
xchg
jmp
jnp
sar
dec
and
insl
sbb
sbb
scas
mov
movsb
pop
test
push
inc
push
xchg
and
mov
scas
jns
in
sub
add
dec
xor
push
jns
frstor
push
outsb
in
scas
cmp
inc
pop
out
out
inc
add
or
push
out
cmp
fildl
in
jne
mov
dec
cli
add
add
out
add
dec
add
fs
add
sbb
mov
stos
cli
rdmsr
mov
sub
jle
push
add
xor
pop
sub
mov
bound
and
mov
addr16
nop
push
mov
mov
add
imul
out
sub
pop
sub
enter
mov
dec
add
mov
jecxz
test
sbb
pop
repnz
and
in
fwait
or
mov
pop
adcl
xor
sub
push
ret
add
add
leave
xor
xor
pop
pushf
adc
mov
ljmp
rcrb
and
adc
xchg
xchg
test
push
rorl
add
lea
lods
imul
mov
or
repz
add
lahf
out
sub
imul
jnp
sahf
xor
icebp
stc
das
adc
mov
and
andb
jns
lahf
pop
add
stos
outsl
add
push
nop
std
push
jnp
mov
dec
push
pop
test
int
sub
push
add
dec
and
add
inc
in
mov
ds
repnz
add
insb
dec
imul
mov
xchg
mov
fidivl
test
mov
rorl
pop
mov
jecxz
push
push
rclb
adc
fwait
xor
push
push
aam
sbb
call
roll
pop
pop
clc
or
repz
pop
es
sub
mov
mov
add
aaa
xor
icebp
mov
mov
or
aad
cwtl
andl
mov
in
outsl
cmp
mov
dec
int3
int3
pop
push
inc
ss
xor
xor
push
cmp
xchg
cmp
aaa
cmp
lret
and
test
shl
das
add
sbb
int3
dec
sbb
add
pusha
mull
rolb
push
inc
add
xor
jno
mov
add
jmp
fnstsw
add
and
cmp
add
fs
add
aaa
xchg
add
mov
arpl
mov
fisttpl
jmp
inc
sub
xlat
add
add
enter
out
add
xchg
mov
xchg
mov
push
pusha
mov
add
mov
xchg
add
les
xor
push
lahf
les
add
cmovs
addl
add
sbb
lcall
push
sbb
xor
leave
mov
mov
add
or
jmp
xchg
sbb
add
loopne
popa
gs
xchg
mov
or
lock
imul
imul
add
jecxz
mov
adc
xor
pop
xchg
inc
xor
incb
add
into
sub
add
or
add
movsb
cmpsb
loopne
pop
adc
movsb
mov
hlt
pop
out
dec
xchg
scas
insl
pop
lahf
push
lret
arpl
xchg
shlb
jge
ficoml
jl
ret
hlt
cli
jae
pop
dec
jb
and
push
mov
jle
xor
add
adc
repz
imul
inc
add
lahf
and
mov
xor
mov
rcrl
rcll
xor
popl
push
add
jl
pusha
jmp
add
add
add
add
loop
pop
std
or
dec
jg
jae
add
std
and
insl
xchg
sub
cmpsl
mov
pop
xchg
add
scas
jp
ficompl
pop
and
ja
addl
push
inc
add
mov
pop
roll
rcrl
pusha
imul
sarb
mov
jle
pop
or
mov
add
sub
xchg
jecxz
jge
aad
jae
push
and
lcall
aaa
imul
leave
pop
mov
or
inc
imul
add
push
dec
pop
es
popf
jle
ja
add
fcoml
jo
sti
out
ret
cld
or
mov
call
adc
imul
dec
xor
in
test
mov
xchg
mov
pusha
push
push
mov
xchg
or
lods
nop
lret
cmpb
sub
mov
sahf
pop
add
jbe
mov
ss
lcall
loope
fidivrs
adc
std
es
push
fxch
mov
add
cmp
rorb
add
mov
adc
push
movsl
add
add
mov
jl
add
jg
in
add
push
andl
or
xor
es
lds
cmp
outsl
jns
ret
sub
pop
add
add
jns
and
adc
mov
jp
mov
push
subl
push
add
add
sub
out
popf
out
and
dec
test
call
or
pop
mov
repz
cli
add
std
jno
mov
push
add
fs
mov
movsl
add
jnp
cmp
xchg
add
add
pop
add
mov
fldcw
movl
pop
stc
lahf
or
cli
in
pop
jo
pop
icebp
pop
jg
add
add
pop
imul
mov
adc
mov
push
lret
inc
cmp
insb
sbb
add
test
movsb
add
outsl
dec
xor
push
lahf
divb
in
add
cmpsl
mov
and
repz
add
scas
or
in
mov
or
add
sbb
push
sbbb
jmp
push
inc
jns
lock
add
cwtl
adcb
mov
aaa
fcoms
pop
mov
pusha
loope
push
dec
add
add
jge
jno
imul
add
loopne
inc
mov
fsubl
dec
addr16
mov
add
pop
mov
fcmove
xor
call
mov
not
aaa
jns
ss
stos
and
mov
xchg
pop
jo
push
mov
adc
jg
mov
ljmp
sbb
add
ret
xchg
dec
push
cli
xchg
mov
inc
add
das
add
fisttps
mov
orb
movsl
stos
add
outsl
adc
xchg
lret
push
js
cld
inc
ror
ljmp
loop
add
sbb
add
aam
add
stos
xchg
test
jno
push
push
jl
movsl
mov
mov
stos
sbb
jecxz
es
add
std
cltd
mov
or
pop
add
fstpt
insb
add
and
add
jbe
sub
jecxz
push
in
jbe
adc
scas
icebp
shrb
bound
sahf
cmp
add
xchg
xchg
pop
mov
dec
cwtl
add
push
stc
iret
cmp
push
dec
add
sub
pop
jae
add
in
xor
bound
es
sub
add
pop
aaa
adc
and
pop
and
shr
out
jmp
cmpsb
push
xchg
scas
add
push
jnp
idivb
sub
aam
dec
arpl
mov
dec
fisttps
add
daa
scas
add
add
add
mov
out
add
add
or
mov
repnz
add
or
dec
adc
add
sbb
fsub
add
dec
pop
pop
scas
push
popf
mov
sub
les
add
jnp
pop
test
cmpsb
mov
push
fldenv
clc
jmp
push
xchg
add
les
add
addr16
jno
push
push
pop
add
xchg
pushf
and
mov
xlat
adc
add
pop
mov
bound
mov
add
jns
add
sbb
add
mov
dec
popf
stos
movsl
add
xor
add
xor
cmc
and
call
xchg
outsl
add
jns
cmp
repz
and
ljmp
lds
add
and
js
dec
pop
inc
lods
scas
push
pop
add
add
or
inc
add
pop
pusha
mov
inc
loop
mov
daa
lcall
ss
arpl
push
and
int
adcl
jle
inc
loop
jbe
and
ljmp
add
into
xor
xchg
sti
scas
cmp
push
sub
scas
pop
push
mov
add
or
test
push
sahf
leave
stos
mull
or
insl
jno
inc
sbb
add
inc
xor
testb
add
sahf
str
and
cltd
mov
xor
mov
add
fwait
outsb
repz
add
pop
mov
adc
sub
mov
add
cmp
or
push
pop
xchg
rcrl
add
cmp
pop
insb
iret
cmp
add
add
out
fsubr
push
fadds
adc
insb
lods
add
add
movb
jnp
inc
dec
add
aad
rolb
into
add
stos
inc
lret
int3
mov
sub
out
cmp
lock
and
or
cli
js
dec
sarb
arpl
mov
pop
jno
or
jno
add
push
add
push
jo
push
xor
call
enter
fldt
add
add
mov
adc
ss
mov
jp
pusha
jne
jmp
or
and
pop
add
outsb
out
mov
addr16
fistpl
push
ljmp
push
clc
je
jecxz
lock
and
jge
push
lock
fiaddl
add
mov
mov
jge
sbb
xor
es
add
orl
add
pop
lds
add
cltd
mov
pop
dec
in
dec
jmp
ficoml
pop
dec
roll
push
incl
and
xchg
or
mov
mov
inc
into
add
or
pop
call
aam
leave
mov
mov
fistpl
sar
test
in
dec
add
pop
dec
ljmp
add
hlt
add
dec
cld
cltd
push
ja
test
js
sub
mov
add
movsl
add
pusha
add
push
dec
repnz
adc
add
push
fsubrl
ret
sub
popa
mov
cmp
inc
mov
mov
aam
enter
in
jns
outsl
inc
sahf
add
xchg
lock
mov
jmp
insl
dec
add
call
and
out
rorb
mov
std
add
push
push
sub
movsl
add
or
add
mov
mov
add
or
mov
jb
push
mov
jbe
movsb
add
inc
pop
addl
enter
aas
std
enter
xchg
push
add
add
mov
ficoml
add
hlt
dec
add
add
in
xor
outsl
pusha
icebp
xchg
mov
add
xor
hlt
mov
mov
jo
repnz
pop
mov
pop
adc
xchg
mov
inc
rolb
push
imul
and
jbe
std
add
test
jle
xor
sbb
sub
pop
xor
cli
pop
xchg
fisubs
aas
mov
lret
add
add
push
adc
inc
xor
cmp
and
mov
stc
add
or
fxch
daa
jb
out
mov
push
es
add
jmp
sbb
jle
mov
or
dec
in
loopne
shlb
pushf
add
int
and
movsl
fstpt
dec
xor
add
mov
jl
imul
xlat
lods
lock
jle
and
add
iret
jne
pop
add
pushw
repz
sbb
mov
mov
add
enter
xchg
psrlw
or
cmpsb
inc
rclb
adc
add
pop
add
cwtl
add
mov
add
mov
add
push
mov
pop
aas
push
and
mov
mov
and
mov
in
ds
ds
insl
fmull
jo
cmp
cmp
cmp
flds
or
cmp
and
sbb
jo
pop
in
fadds
pop
test
inc
jns
add
or
int
inc
add
jle
cmp
push
push
cmp
scas
fcmovu
sub
jnp
lods
mull
add
arpl
mov
add
and
sbb
lret
je
adc
add
adc
sub
cmp
mov
daa
lahf
add
cmp
fists
add
stos
js
js
or
xor
mov
lds
add
enter
scas
add
loop
add
fmuls
das
movsl
dec
imul
fucomp
add
js
jecxz
add
test
add
andb
fnstsw
or
add
cltd
insb
push
aad
dec
pop
or
xor
mov
movl
mov
cmp
xchg
enter
mov
popa
push
add
fdivrl
shl
jl
je
push
test
insl
mov
xchg
rolb
jnp
int
popf
movsb
add
add
mov
dec
add
cmpsb
test
sbb
xchg
or
add
push
in
pushl
jmp
mov
test
dec
push
lcall
mov
test
push
cmp
loope
inc
test
lds
push
add
mov
push
add
mov
push
and
aam
int3
or
in
add
pop
push
ror
mov
add
cmp
fisttpl
xchg
ret
jb
push
and
hlt
and
dec
mov
fisubs
sub
xchg
add
mov
sbb
add
add
idiv
dec
sbb
jo
lahf
cmc
imul
jns
sti
cs
pop
sahf
cmp
add
addl
cld
les
roll
and
dec
push
add
adc
jl
inc
mov
add
ficoml
pushf
add
cmp
popa
xchg
ficoml
mov
add
add
fldenv
fs
and
sbb
mov
loope
add
add
jne
or
fwait
nopl
add
dec
or
sub
xor
or
lret
add
push
add
add
add
push
cmp
adc
adcb
outsl
add
add
dec
arpl
roll
fsubrp
push
add
nop
push
fiaddl
cmpsb
jo
imul
mov
cmpsl
mov
pmuludq
cmc
clc
mov
mov
add
inc
xlat
shlb
sbb
inc
dec
adc
or
and
dec
add
dec
cltd
mov
je
cmp
dec
clc
xor
movsl
xor
jo
xor
fucomi
xor
lcall
in
xchg
add
push
push
mov
add
sbb
add
aam
cmp
imul
iret
or
xchg
sub
test
arpl
out
sbb
dec
hlt
mov
mov
clc
add
add
add
and
lret
std
fwait
pop
popf
add
add
xchg
adc
jb
fiaddl
mov
cmc
inc
xor
clc
add
sahf
add
add
cltd
xchg
lahf
sub
icebp
pop
mov
dec
pop
faddl
mov
aas
add
xor
push
les
ljmp
popa
loope
add
in
shr
xor
xor
jb
push
jno
test
xchg
xor
mov
inc
cmp
add
sub
sbb
inc
cmpsl
aam
xor
rcrl
rcl
rcll
add
mov
dec
pop
pop
roll
imul
mov
xor
inc
add
lds
inc
test
pushf
jge
sub
mov
maxps
subl
jo
jo
pop
cmp
add
xlat
mov
mov
add
pop
xchg
add
addr16
push
call
xchg
adc
add
lret
mov
add
cmp
xchg
popf
add
out
pop
mov
sbb
in
div
call
out
sub
lock
rcrl
xchg
add
add
add
xor
inc
and
dec
ja
and
jne
mov
push
jge
scas
leave
and
add
dec
add
mov
jb
add
repz
add
or
push
adc
add
add
adc
dec
mov
jne
pop
add
fidivs
aam
add
dec
int
loop
push
incb
mov
mov
std
leave
das
xchg
cs
shlb
cmpsb
nop
sbb
xor
sti
ss
and
imul
repz
pop
or
dec
mov
adc
add
loopne
mov
add
arpl
sbb
add
ljmp
inc
add
push
pop
cli
js
pusha
xchg
movl
lds
jmp
aaa
or
add
cmp
push
pushf
adcb
and
outsb
out
insl
jmp
mov
xchg
push
push
lcall
repnz
sbb
inc
add
data16
aaa
addl
or
pop
mov
ret
data16
std
xchg
mov
ja
and
add
jmp
and
push
xchg
je
sub
flds
hlt
xchg
fistl
fmul
js
dec
add
and
scas
pmullw
test
sarb
dec
fistl
add
jp
rol
and
add
add
add
add
mov
dec
gs
jae
cmpsb
pop
insl
cmp
movsl
lods
push
add
xor
aam
and
mov
dec
jmp
outsb
imul
enter
in
outsl
push
push
xor
pop
jmp
push
add
mov
fstpl
lea
xchg
adc
cld
sub
mov
jg
cli
xchg
push
test
testb
int
add
xchg
pop
fstl
add
jb
cmp
add
fldlg2
xorl
jle
cmpsb
imulb
sbb
sbb
movl
gs
loopne
sarl
daa
mov
dec
xor
shrd
aaa
push
pop
xor
sbb
add
sub
add
mov
add
sub
fs
pop
mov
cmp
pop
push
in
add
jecxz
ret
daa
fs
and
adc
std
sbb
cmpsb
and
push
ret
arpl
test
pushf
xor
add
add
add
fiaddl
mov
mov
add
pusha
or
push
add
rclb
lcall
xchg
cmp
add
fadd
stos
mov
xchg
sahf
cmp
push
cli
add
add
add
sbb
sbb
or
inc
inc
adc
jbe
add
fbld
jnp
cmp
ficoml
aam
jno
mov
pop
cli
mov
out
icebp
imul
adc
add
xor
shll
popf
xlat
imul
sub
ss
insl
mov
fisttps
or
add
cltd
scas
in
test
mov
cmp
out
jle
std
shrl
stc
add
add
cmpsl
aas
jne
jb
mov
repz
add
ds
sub
lods
fwait
test
icebp
add
cmpsl
in
mov
or
mov
daa
adc
mov
xor
add
jo
xor
add
xchg
or
clc
mov
dec
stc
push
add
jecxz
and
mov
sti
stc
je
sbb
or
pop
std
xor
popf
lea
filds
push
sbb
cmp
sub
in
cmpsb
fmull
xor
pop
jo
jmp
add
mov
dec
hlt
dec
out
arpl
in
or
inc
call
add
dec
inc
mov
mov
and
and
inc
mov
loopne
mov
int3
stc
mov
adc
stos
imul
adc
add
add
rcrb
mov
lods
je
mov
dec
pop
adc
cmp
data16
popa
sbb
cmp
sub
scas
add
add
jecxz
inc
and
mov
add
frstor
imul
pop
into
insb
adc
inc
push
add
aas
outsl
movntps
add
adc
rorl
adc
mov
loop
pop
xchg
in
in
sti
jp
inc
jmp
and
jl
xor
add
push
add
mov
and
lcall
push
xchg
jnp
push
add
add
or
lret
aas
add
push
cmp
xlat
push
cs
or
adc
icebp
lcall
mov
cmp
pop
mov
inc
jmp
test
add
jle
lds
xchg
push
cmp
add
div
sarl
mov
add
enter
push
jecxz
imul
and
repnz
jne
out
stos
push
add
inc
lahf
mov
sbb
bound
shll
imul
add
test
dec
je
mov
xlat
pop
sub
add
das
xchg
aad
add
push
and
cmp
dec
push
xchg
xchg
lret
mov
xor
push
add
lcall
and
in
xchg
shl
push
add
test
push
mov
out
pop
xchg
roll
pushf
dec
je
pop
adc
dec
mov
lods
inc
pop
mov
mov
in
lea
hlt
add
xor
add
cwtl
in
popf
popf
add
sub
je
push
insb
addr16
and
add
jmp
mov
push
adc
scas
std
sbb
pop
xor
dec
jb
cmp
sub
ja
xchg
add
or
adc
add
js
add
imul
mov
add
xchg
add
push
add
xor
xchg
sbb
out
pop
hlt
add
mov
mov
clc
test
mov
fwait
addr16
nop
jne
addb
in
dec
jecxz
add
jmp
enter
insb
xchg
sub
inc
insb
cmp
mov
outsl
push
add
test
pop
xchg
popa
orl
insl
add
mov
mov
jmp
fdivrs
dec
out
mov
cld
add
cmp
xchg
add
add
mov
adc
add
xor
add
cltd
add
push
andl
stos
cmc
and
rcll
add
es
add
mov
add
add
jno
rorl
sbb
js
add
nop
adc
fistl
pop
pop
test
insl
ret
mov
add
jno
mov
outsb
and
popa
adc
xchg
push
add
add
int
cmp
sub
inc
add
cmp
mov
xchg
xor
enter
dec
pushf
add
mov
cld
imul
adc
pop
arpl
movsl
mov
lods
int3
subb
testb
dec
test
call
enter
dec
xchg
cwtl
xor
inc
pop
aaa
mov
movsl
push
pop
sbb
orl
mov
addb
xchg
in
cmp
sbb
and
jb
add
push
mov
in
stc
dec
add
fnsave
fdiv
cmpsb
imul
sahf
call
imul
sti
mov
mov
xor
mov
or
adc
rcr
mov
movsl
cld
ja
xlat
fmul
movsb
loop
scas
addl
xchg
add
lret
ficompl
lock
add
jbe
jne
add
add
cmp
inc
xchg
sbb
imul
hlt
add
mov
jb
adc
mov
xchg
mov
mov
add
xlat
repz
adc
mov
or
test
js
das
test
test
int3
jbe
bound
rcrl
fists
xorl
and
rolb
xchg
sbb
cld
add
shll
out
call
lahf
cwtl
add
add
add
test
fldcw
jns
xchg
adc
jns
or
mov
add
enter
pop
add
clc
xor
aad
pusha
and
pop
fldl
ss
in
jmp
mov
rcrl
stos
aaa
add
dec
xlat
xchg
sbb
addl
imul
nop
in
add
add
mov
jecxz
add
leave
aad
ja
orl
ljmp
adc
in
add
pop
mov
dec
ja
sarl
or
xchg
dec
add
or
add
pop
loop
lcall
mov
call
cmc
insb
stos
sarb
mov
ja
jne
inc
pop
pop
and
lods
xchg
cli
push
decb
add
inc
mov
add
enter
arpl
icebp
lock
dec
popa
out
push
out
rolb
and
movsb
or
add
and
test
sarl
or
sbb
xchg
add
add
sbbl
imul
mov
jp
fstpl
mov
add
loopne
push
add
mov
sbb
je
dec
add
std
add
pop
add
mov
fidivl
imul
add
push
add
cmp
loopne
adc
or
nop
mov
and
ficoml
daa
add
add
and
push
pop
andb
inc
add
add
add
sbb
addb
out
sbb
ja
jb
mov
push
test
repz
repnz
test
addl
inc
js
jbe
icebp
imul
sahf
jne
stc
loop
in
imul
mov
scas
nop
add
lcall
push
add
gs
arpl
push
addl
repnz
lea
pop
test
sti
mov
xchg
jle
gs
jno
js
add
inc
mov
lock
inc
inc
or
add
pop
dec
ja
xchg
add
fisttpl
in
rolb
mov
add
add
lahf
fucomi
xchg
gs
mov
mov
sbb
popf
cmp
pop
orl
pop
test
sbb
inc
call
xchg
inc
or
jle
subb
ret
cwtl
push
or
add
xchg
add
ljmp
ja
mov
pop
mov
daa
add
xchg
add
add
xor
push
outsb
mov
jne
xchg
mov
mov
mov
addr16
jbe
sub
mov
cmp
fisubrs
jne
jo
jecxz
cmp
cmp
sbb
xor
std
fiaddl
stos
idivl
adc
fnstenv
repz
cmp
roll
mov
add
mov
add
loopne
hlt
mov
add
sbb
idiv
add
int
add
leave
or
xor
cltd
clc
pop
dec
jnp
sbb
dec
outsb
add
testb
add
xchg
add
inc
loope
inc
add
mov
inc
ja
test
call
std
xor
jle
nop
and
pop
pop
dec
add
cmp
pushl
mov
test
fiaddl
dec
or
stos
inc
xlat
add
mov
pusha
or
ljmp
ret
sub
inc
shlb
mov
add
mov
pop
pusha
lock
insl
sub
mov
les
and
cmp
sbb
add
enter
mov
in
mov
or
cmp
dec
pop
sahf
xor
jns
or
jae
hlt
cmp
pusha
int3
sbb
mov
aad
sub
outsb
test
data16
add
pop
inc
mov
mov
jg
fdiv
push
add
jae
add
rcrb
test
mov
dec
mov
add
add
cmp
jp
dec
add
add
jo
push
or
pop
aas
add
add
inc
fiaddl
mov
scas
icebp
sub
xor
mov
dec
and
mov
xor
mov
add
dec
add
and
push
inc
dec
imul
lret
ficomps
bound
xchg
adc
add
sbb
add
sahf
in
bound
xchg
fsubs
jle
clc
dec
fidivrl
add
and
into
mov
add
iret
sahf
add
lock
std
add
and
test
lds
jge
imul
adc
dec
add
mov
push
movsl
arpl
dec
sldt
inc
or
add
add
mov
lds
add
call
cltd
cmp
fildl
nop
sub
jl
add
out
pop
sahf
mov
add
push
js
jl
cmpsb
ficoms
aas
xchg
rorl
xchg
cs
bnd
roll
pop
pushf
out
sbb
outsl
or
add
outsb
push
std
jle
int
js
leave
xor
add
es
jae
ds
aaa
roll
adc
inc
pop
adc
pusha
imul
pop
shlb
mov
add
mov
pop
js
sub
xlat
loop
or
out
inc
movsb
xchg
arpl
in
xchg
add
decb
add
hlt
shlb
add
fs
leave
jnp
lahf
add
mov
jp
popa
sbb
hlt
ds
adc
inc
add
xor
mov
push
mov
orb
out
dec
mov
movsl
cmp
dec
sbbl
rcrl
add
movsl
add
sahf
mov
in
ficomps
add
push
mov
ficompl
jmp
mov
mov
add
jecxz
daa
add
cmpsl
stos
hlt
lret
and
push
call
mov
lods
pop
ljmp
add
push
and
in
or
push
pop
xor
jb
add
add
jge
test
cmpsb
sub
daa
sbb
dec
sub
cmp
mov
pushf
add
mov
add
xchg
add
out
push
insb
loop
add
sti
dec
sub
add
rol
pop
sti
and
out
enter
fidivs
packssdw
ficoml
add
sbb
xchg
add
fwait
add
mov
xchg
jecxz
stc
roll
inc
pop
sub
mov
xor
push
pop
repz
inc
arpl
test
cmovl
sub
lcall
loope
mov
mov
add
xor
xor
aad
mov
inc
dec
add
ljmp
push
add
jbe
lret
pop
mov
push
fistl
pushf
cli
out
out
and
sti
ds
add
imul
jg
orl
add
mov
out
repz
insl
mov
sbb
int
push
xor
mov
stc
js
add
add
sbb
and
and
sti
jecxz
jnp
pop
stc
add
jne
repnz
xor
xchg
and
jecxz
mov
add
dec
outsb
add
ljmp
scas
mov
shlb
out
and
jo
mov
aas
xchg
lret
jno
jmp
add
repz
add
add
aas
adc
mov
jno
mov
inc
or
outsl
jl
out
ds
sub
mov
pusha
dec
fcmovnbe
lods
aas
push
xor
add
cli
stos
je
fisubrs
add
jno
js
idivl
mov
in
add
in
popf
add
xor
fldcw
daa
or
mov
fs
xchg
jmp
and
dec
pop
add
lret
jnp
xchg
int
movsb
jns
xor
andb
and
stos
mov
outsb
out
aas
cmp
sub
push
test
xchg
insl
out
filds
repz
adc
das
insb
xchg
add
popa
dec
push
xchg
imul
add
add
nop
test
xor
sub
addb
mov
lret
mov
in
or
mov
xor
add
lods
and
xchg
or
jl
sub
and
je
push
dec
jmp
test
mov
addr16
loop
mov
js
test
lcall
repz
scas
xor
xor
add
jl
push
ret
mov
xchg
jno
jp
mov
in
icebp
arpl
mov
add
xor
cmp
loop
insb
inc
push
mov
pop
rorl
lret
das
xor
dec
adc
add
mov
scas
dec
mov
mov
inc
mov
incb
pop
std
xor
stos
push
lods
pop
daa
leave
inc
scas
test
mov
push
mov
sti
notl
mov
mov
je
and
pop
inc
je
pop
dec
xor
xchg
pop
pop
movb
mulb
loope
pop
mov
scas
xor
jne
jbe
jo
fsubl
js
imul
lds
push
imul
into
out
das
fwait
aas
xor
mov
lods
dec
jmp
add
mov
lahf
popa
push
jno
add
hlt
icebp
add
movsl
jp
stos
lds
ljmp
add
add
out
in
test
adc
mov
aad
pop
iret
inc
out
popa
shrb
mov
in
out
aad
push
cwtl
clc
sbb
mov
add
std
push
outsb
pop
test
in
les
jmp
and
jecxz
adc
arpl
aas
dec
or
cmpsb
pop
sub
cmp
add
add
fnstsw
aas
add
mov
in
insl
or
add
ja
daa
xchg
mov
lods
dec
inc
in
pop
mov
mov
push
pop
add
adc
popa
test
sub
cmc
add
jae
jmp
imulb
xchg
and
les
inc
fcmovne
out
lahf
insl
mov
ss
aaa
into
add
iret
and
dec
iret
cmp
pop
sti
push
into
and
insb
movl
xor
cmc
outsb
jne
sub
mov
sbb
push
sbb
xorl
lods
loop
and
lods
sub
shl
outsb
mov
mov
pusha
in
cs
or
dec
imul
out
leave
xchg
sub
bound
imul
push
add
les
xchg
dec
push
shlb
add
scas
add
cmpsb
idivb
ja
or
lds
mov
fsub
in
cld
popa
add
ret
je
loope
xchg
inc
dec
ljmp
pusha
add
add
gs
or
inc
dec
subl
ja
or
mov
dec
mov
add
rolb
dec
mov
sbb
lea
data16
fdivrl
lahf
leave
push
cmp
dec
pop
inc
dec
sub
hlt
push
aam
pop
ror
daa
pop
add
jmp
ss
sarb
inc
jl
mov
scas
nop
or
xor
jo
fwait
stc
pop
add
cmp
sub
dec
sbb
jmp
push
outsb
sbb
push
xor
fcmovne
add
add
imul
adc
add
add
dec
and
pushf
add
mov
add
xchg
inc
and
add
loope
mov
sub
jmp
mov
int
mov
dec
add
add
imul
add
add
cli
add
push
mov
fsubl
add
jne
pop
jg
cmp
mov
push
pushf
add
xchg
ljmp
pop
imul
mov
jns
mov
iret
leave
push
aas
call
test
das
fnstsw
adc
xchg
xor
mov
fimull
dec
mov
shrl
add
std
dec
cs
or
lret
cmp
add
les
mov
sub
in
pop
add
sbb
add
mov
pop
cmc
ja
imul
dec
push
add
cltd
add
add
lret
dec
add
sub
packsswb
and
bound
stos
cmp
jnp
cmp
add
addl
xlat
mov
xchg
add
movsb
xor
rorb
and
mov
push
mov
fcoms
add
add
or
or
jno
xchg
xchg
pop
sbb
sarl
add
adc
test
test
jmp
in
sub
out
or
push
pop
jecxz
inc
not
nop
mov
test
roll
push
fcomp
mov
sbb
sub
mov
lret
jle
std
outsl
cmpb
jne
js
push
das
loop
add
sub
add
rol
xor
push
ds
mov
add
xor
test
push
filds
mov
add
add
mov
or
dec
xchg
jecxz
fs
add
lret
cmp
add
and
filds
loop
scas
call
jns
scas
push
shll
push
leave
add
jno
dec
fs
push
mov
add
outsl
or
mov
and
inc
or
fs
repnz
arpl
dec
out
or
add
pop
inc
dec
repz
xor
cmp
out
inc
filds
lret
out
xorl
push
xchg
in
push
mov
rcrb
int3
mov
sub
cltd
aas
add
add
out
inc
mov
cmpsb
orb
cmp
push
scas
add
mov
fstl
aas
xchg
js
insl
sub
lret
out
add
sahf
std
or
je
sub
lahf
sbb
sub
dec
ss
adc
imul
sbb
loop
jae
test
mov
shrl
iret
ds
mov
add
nop
loopne
push
hlt
add
jp
ja
xor
fstps
test
stos
std
xor
xor
cmp
int
aam
push
or
adc
xor
xor
jno
add
outsb
scas
enter
fucomip
mov
inc
xor
stc
or
xor
mov
lahf
jg
loopne
insl
out
mov
xor
cmp
faddl
inc
daa
sbb
jmp
sub
scas
loope
fwait
mov
fbstp
dec
add
add
add
loopne
mov
cld
jo,pt
pop
mov
sbb
stc
add
cli
push
add
fnsetpm(287
inc
add
shll
jns
ret
cmpsb
cs
cmpsb
nop
add
cltd
fdivrs
cmp
and
mov
shlb
xchg
movsl
aas
xchg
sbb
add
mov
add
xor
lock
out
fwait
sbb
leave
stos
rcl
mov
or
icebp
test
lods
rclb
xor
inc
lods
add
mov
xchg
jmp
mov
or
out
ret
and
enter
jbe
and
inc
sbb
adc
mov
test
data16
add
push
add
in
add
popl
xchg
add
or
leave
xor
xchg
shlb
pushf
add
insb
or
call
aas
push
push
in
add
cli
fmulp
mov
cmp
imul
dec
pop
cmp
mov
mov
lea
inc
inc
cwtl
add
imul
push
sbb
mov
popa
ffreep
std
mov
cltd
dec
pop
ret
pop
sub
insb
les
loopne
cwtl
jno
xor
stc
cmpsb
enter
jo
out
sbb
aam
call
cmp
shlb
sub
sbb
xchg
cmp
cmp
ficompl
in
add
add
jl
insl
fadds
pop
in
pop
lods
push
inc
xchg
xor
mov
fstpl
pop
test
push
xchg
imul
cmpb
add
rcll
jo
add
add
add
sbb
out
xor
cmp
js
add
jmp
push
jecxz
dec
jg
addr16
inc
mov
hlt
cmc
imul
xor
scas
xor
xor
sbb
in
sbb
xor
cmpsl
add
mov
xchg
add
adc
mov
jns
in
and
mov
push
xchg
add
mov
add
cmp
jle
mov
shrb
cmp
gs
lods
push
stos
pop
inc
cmp
xor
mov
adcb
adc
xchg
cwtl
mov
loopne
cmp
dec
xchg
and
aaa
pop
cltd
decb
add
addr16
fsub
movsl
mov
mov
add
pop
mov
dec
fdivrl
pop
int3
jecxz
add
orb
bound
imul
aam
aaa
inc
repz
jnp
mov
and
xor
pusha
xchg
inc
out
add
int
shl
data16
xchg
sub
cli
mov
pop
mov
add
lock
sahf
add
jle
sarb
cmp
out
inc
pop
cmp
add
push
addl
mov
add
je
out
add
add
add
add
add
mov
add
sub
pushf
fdivl
pop
push
adc
movsl
jns
mov
mov
mov
pop
lahf
pop
add
fisubrl
in
sbb
and
pop
repz
dec
mov
popa
pop
pusha
dec
lock
fildl
subb
mov
clc
jecxz
sub
int
inc
inc
aad
scas
add
mov
cmpl
js
ret
stos
ja
mov
shll
jecxz
add
popf
pop
lahf
icebp
push
xor
mov
mov
add
aad
rorb
testb
xchg
dec
leave
add
dec
mov
and
sub
push
add
lds
pusha
cmp
lods
mov
mov
xchg
add
movl
add
inc
addr16
add
popl
hlt
pushf
push
mov
pop
pop
add
cmp
out
push
mov
shl
push
inc
push
popa
xchg
mov
xor
sbb
xchg
add
sbb
add
dec
aam
popf
paddusw
roll
mov
scas
cmp
add
test
add
add
xchg
mov
rcll
jnp
flds
faddp
inc
addl
add
jae
pusha
xchg
dec
xchg
and
jne
stos
adc
sarl
adc
jmp
cmp
arpl
adcb
jb
lock
cmp
insb
mov
addr16
cli
mov
xchg
in
push
pusha
add
sub
into
add
xchg
fbld
lods
lret
fadds
sbb
imul
add
cwtl
jp
ds
adc
push
das
dec
addr16
jle
mov
jge
fucomip
addl
push
stos
mov
lret
push
and
out
cmp
inc
mov
int
fists
adc
xchg
jne
movsb
xor
jo
add
jb
add
add
repz
adc
push
lods
and
dec
flds
or
mov
push
push
xlat
mov
test
sbb
aad
adc
cmp
fildl
sbb
popl
jns
fldt
push
jmp
jl
sbb
push
stos
pop
inc
xor
xchg
ds
addr16
add
pop
clc
cmp
and
sbb
aaa
sub
inc
test
pop
cli
insb
pop
push
xchg
and
loope
popa
popf
movsl
pop
adc
cmpl
or
pop
movsb
insl
inc
push
mov
inc
and
dec
mov
cmp
inc
ds
fucomip
mov
mov
xor
dec
add
shlb
mov
cltd
cmp
add
movsl
fnstcw
mov
fadds
add
fistps
push
and
fsubrs
jmp
mov
sub
test
daa
popf
icebp
lret
inc
add
aas
pop
xchg
jp
pop
sarl
stos
test
add
add
ftst
enter
add
add
dec
add
jb
xchg
inc
out
xor
dec
movsl
mov
daa
xor
jne
add
lea
leave
pushf
adc
dec
xor
nop
or
xchg
lahf
movsb
pushf
inc
call
pop
nop
mov
fdiv
dec
push
in
add
cmp
mov
pop
cmp
test
in
sub
cmp
fwait
mov
pop
cmp
lret
int
stos
push
mov
or
push
push
fldt
add
scas
mov
add
out
lods
xchg
mov
cltd
lret
hlt
xchg
popa
inc
dec
pop
testb
jge
rorb
inc
xchg
inc
das
ret
fsubr
test
lock
sti
jmp
mov
fidivrl
add
mov
hlt
dec
pop
mov
jo
jbe
pop
lods
xchg
leave
dec
dec
inc
testl
fimull
mov
icebp
insb
out
loope
pop
daa
push
dec
pop
out
imull
push
add
jge
add
mov
add
add
pop
insb
flds
mov
xor
or
inc
add
push
adc
jl
dec
xor
and
mov
cmp
call
inc
add
fbld
mov
pop
pop
fcmovne
aam
push
sub
or
rolb
push
test
and
jb
xor
fiaddl
dec
sbb
bound
or
jecxz
cmpsl
imul
add
mov
add
add
mov
pop
imul
inc
sbbl
mov
call
cmpsb
sbb
mov
push
mov
add
imul
add
add
bound
mov
pop
add
add
out
xchg
add
and
add
enter
fistl
and
mov
push
mov
or
gs
pop
inc
mov
push
mov
mov
mov
pop
xorl
xor
imul
incl
shl
repnz
dec
mov
js
mov
add
xchg
lcall
add
cs
mov
mov
cmp
or
add
ljmp
pop
add
jecxz
xor
adc
jb
push
jo
in
inc
fwait
bound
test
add
leave
mov
cmp
dec
push
fadds
rclb
in
push
scas
add
mov
in
pushf
sub
pop
inc
and
adc
sbb
and
add
and
dec
mov
add
add
pop
push
je
add
add
add
test
shlb
sub
fistpl
insl
stos
jbe
pop
out
or
mov
dec
xor
dec
mov
nop
dec
roll
mov
std
mov
jle
stc
add
loopne
enter
sub
jno
sbb
add
es
jb
arpl
or
pop
mov
adc
dec
mov
sahf
pop
popa
sbb
add
pop
pop
or
adc
xchg
cmp
sbbb
pop
inc
pop
jns
and
ss
inc
jns
cmc
into
inc
cmpsl
sub
push
inc
aad
fwait
mov
jecxz
int3
add
lahf
fldl
cmpsb
aaa
es
push
xchg
xor
les
add
or
cmp
sbb
pop
add
mov
int
mov
fwait
icebp
int
sbb
inc
cmpsb
or
push
jno
add
arpl
mov
inc
mov
fs
test
pop
push
dec
rcr
ret
sub
test
test
lods
or
pop
cltd
fbstp
mov
pop
push
pop
mov
lock
add
mov
aam
les
and
xor
jmp
add
loopne
push
stc
cld
add
add
sub
jbe
in
cli
pop
pusha
cmpsl
lcall
lods
add
xor
mov
add
add
inc
add
sub
insb
aas
add
push
fwait
mov
mov
into
add
cld
ret
jno
jmp
add
xlat
popf
add
orl
jns
test
imul
adc
jo
xor
int3
arpl
push
arpl
mov
add
addr16
in
jne
jbe
jmp
jne
add
scas
fidivrl
mov
cwtl
sbb
mov
fdivl
das
xlat
inc
adc
ret
adc
shl
xor
add
cmc
loop
aas
jae
sub
push
call
sbb
std
addr16
out
push
imul
xor
pop
mov
jle
jg
loop
push
cmpsb
mov
and
add
addl
xchg
adc
fstpl
cmp
add
jns
pop
and
in
mov
subb
out
and
inc
repnz
hlt
sub
fisubrs
dec
push
or
pop
lret
adc
adc
add
lea
fcompl
add
jle
adc
add
cmp
mov
mov
enter
add
insl
adc
and
add
xchg
mov
and
add
ds
add
lret
jns
rolb
sub
repnz
inc
imul
arpl
push
lods
ret
xor
rcll
push
ljmp
xor
push
or
pop
mov
mov
jae
sti
sub
and
xchg
outsl
popf
test
call
inc
sub
cmpl
dec
cmp
sahf
pop
add
cmpsb
je
lods
add
pop
push
lea
aas
lods
or
sub
dec
inc
xchg
add
jae
cli
ljmp
dec
imul
ljmp
int
and
orl
sbb
les
pop
clc
mov
ds
pop
test
mov
data16
fadds
jno
aad
loop
push
and
xchg
fmul
xor
movsb
addr16
pop
adc
lea
nop
mulb
dec
and
push
add
and
cmp
push
push
cmp
adc
lret
jle
add
add
fcmovnb
inc
out
and
jmp
mov
mov
orl
push
mov
add
jae
pop
in
jne
mov
dec
lea
loope
popf
push
push
lock
add
daa
jne
mov
aas
push
xlat
add
add
scas
add
and
or
cli
jnp
or
daa
push
xlat
vmwrite
sahf
test
ja
mov
test
test
int
pop
stos
add
jno
pop
testl
sbb
js
out
dec
popf
lret
adc
mov
popf
jmp
jno
add
push
xchg
mov
pop
sarl
rcrl
adc
add
add
push
out
push
add
sub
fisubs
out
push
ds
xchg
add
fisttps
es
aas
add
xlat
scas
push
add
jne
pushf
push
xor
adc
jmp
into
jle
push
add
push
add
xlat
xor
add
aaa
clc
insb
lret
mov
andb
xchg
sarb
gs
pop
ja
ja
add
adc
mov
repz
push
add
fsubr
fisubrl
mov
dec
xchg
cmc
inc
fldl
enter
mov
repz
xor
mov
inc
mov
dec
hlt
jmp
movb
ret
add
loope
fiaddl
stos
xchg
icebp
adc
mov
add
xchg
mov
movhps
es
add
inc
xchg
adc
jg
inc
add
push
mov
jle
ret
roll
jp
popl
dec
add
pop
ljmp
pop
add
or
xor
inc
and
popf
daa
cmc
mov
movsl
lock
or
daa
add
mov
outsl
test
loopne
mov
ret
sub
jp
stc
inc
and
fucomi
orb
addr16
dec
stos
outsb
mov
push
popf
lcall
or
or
push
and
cmc
ret
mov
inc
adc
sahf
sbb
loopne
add
push
mov
cmp
test
inc
lock
mov
cmp
adc
jmp
arpl
inc
mov
add
push
jo
mov
scas
sub
xor
jmp
jecxz
pop
add
push
mov
adc
fists
add
or
or
push
sbb
inc
dec
rol
xor
and
mov
pop
dec
and
nop
hlt
add
flds
leave
shrl
lods
xchg
xchg
add
aaa
pushf
fists
pop
push
mov
push
pop
push
inc
cs
xchg
add
leave
mov
xchg
dec
push
fistps
insl
mov
pop
das
push
pop
int3
loop
add
mov
or
imul
icebp
xchg
sbb
sub
into
lods
sbb
cmp
xchg
dec
add
int3
sbb
hlt
jle
call
ret
xor
and
lock
push
and
insl
pop
dec
daa
xchg
add
lret
cli
int
out
add
adc
mov
lock
rcrb
movsl
das
add
mov
xor
xor
cs
pop
data16
stos
add
jae
add
mov
add
add
add
add
in
or
sbb
add
movsb
lea
imul
int
fldlg2
push
jo
sub
repnz
shll
inc
lcall
sub
push
imul
add
enter
and
in
lcall
aaa
aaa
imulb
shll
add
pushf
mov
fiadds
rolb
aam
mov
mov
stos
out
mov
and
test
out
pop
lock
push
mov
add
mov
jae
scas
dec
sbb
add
sbb
mov
add
xchg
les
movl
mov
call
pop
add
jb
rorb
mov
push
inc
in
fnstsw
add
scas
das
ds
add
mov
lret
pop
mov
insl
daa
add
adc
push
xchg
cmp
add
push
sar
mov
pxor
cmp
cwtl
stos
adc
cmp
popf
adc
lea
mov
fwait
mov
shrb
add
cwtl
xchg
push
adcl
pop
adc
sub
and
les
sub
add
fst
repz
dec
add
adc
inc
cltd
mov
add
stos
arpl
clc
and
add
repnz
movsb
add
test
pop
pop
outsb
mov
sub
jb
xor
add
or
out
adcb
add
stc
notb
mov
mov
roll
xchg
les
dec
loope
sub
sahf
fnstcw
push
popf
pop
cs
idivl
mov
add
pop
stc
or
pop
dec
mov
lcall
xlat
add
add
push
cli
inc
out
xchg
addr16
cltd
xor
orl
xchg
pop
addr16
sarl
scas
inc
inc
adc
push
mov
les
cmp
push
add
add
mov
andl
jg
addb
inc
and
inc
add
es
sbb
sub
add
sub
sub
sbb
bound
adc
push
push
jnp
ret
add
add
xchg
add
and
xor
dec
or
or
jne
arpl
sub
je
ss
stos
lahf
cmpb
or
or
nop
push
es
bound
cmpsl
add
mov
xor
mov
pushf
out
inc
jp
andl
jae
add
pop
add
mov
and
subl
add
cmp
and
add
mov
and
jl
loope
subb
or
aas
add
and
in
inc
xchg
jo
and
add
neg
mov
add
or
push
cmp
xor
fistl
inc
inc
inc
dec
dec
imul
inc
adc
dec
pop
pop
xchg
or
push
jmp
push
push
jecxz
add
adc
and
jne
xor
lret
bound
mov
movhps
xor
out
sbb
popa
fldcw
cmpsb
add
aaa
add
out
shrb
adc
push
add
gs
ret
incb
jo
bound
mov
aad
jp
sub
cld
and
mov
lcall
test
jb
xor
pop
add
xchg
sbb
incl
shll
fs
mov
repnz
cwtl
rcrb
add
jecxz
mov
and
sbb
jo
insb
xchg
pop
popf
gs
jb
addr16
add
add
sub
mov
sbb
lret
and
popa
out
add
out
mov
das
dec
cmpsl
mov
or
cmpsb
xlat
mov
lahf
push
ret
add
mov
cli
addr16
cmp
je
sub
mov
xchg
inc
mov
outsb
jnp
jmp
subl
push
add
cmp
enter
inc
inc
je
adc
stc
mov
or
sub
jg
cmp
adc
cwtl
rclb
push
fcmovnu
fcoms
outsb
jmp
cmp
cmpsb
cmp
sub
add
fs
lahf
add
xchg
cltd
ja
mov
sbb
push
mov
add
add
pop
popl
daa
lock
ja
fildl
insb
out
inc
add
faddl
push
mov
jb
frstor
jg
cli
std
test
dec
sub
jno
loope
aam
bound
and
fcomps
mov
sahf
add
mov
jnp
lds
cmp
push
adc
stos
aad
add
inc
add
mov
xchg
pop
test
add
fdivrl
orl
add
stc
xchg
imul
sbb
aad
push
popa
mov
repnz
mov
cmp
jl
cmp
arpl
addr16
in
sub
addb
inc
cld
inc
stos
mov
out
mov
iret
adc
movsb
push
jp
jbe
dec
stc
adc
arpl
xor
jmp
add
testb
mov
add
add
sbb
mov
or
cltd
fiaddl
ret
mov
or
roll
cmp
pop
jle
call
push
inc
adc
movsb
leave
xchg
dec
jecxz
aad
es
hlt
popf
fs
icebp
sub
insl
loope
mov
push
sub
mov
ja
push
add
bound
or
or
int3
mov
xlat
mov
mov
sbb
adc
inc
clc
mov
repnz
dec
arpl
into
adc
xor
xchg
sahf
insb
cmp
ds
js
cltd
xor
add
outsl
loope
ja
lods
mov
or
jne
rolb
inc
std
rorl
out
push
add
scas
fldcw
mov
add
xchg
lock
je,pn
pusha
add
inc
aaa
jae
add
aas
adc
enter
mov
push
popf
sbb
pop
lods
cmp
inc
cmp
and
mov
add
out
add
lcall
jbe
shll
mov
add
out
add
pop
ret
xor
data16
clc
and
and
pop
adc
pop
pushf
add
jo
adc
add
or
int3
repnz
bound
mov
enter
dec
rorb
mov
xchg
out
mov
mov
push
cmpsb
and
test
mov
mov
aam
jnp
push
insl
sbb
push
daa
or
jp
addr16
and
stos
xchg
shlb
add
add
lds
sbb
and
outsb
xor
mov
roll
or
das
repnz
add
xor
jge
jle
dec
sti
lea
add
sub
les
cwtl
outsl
imul
add
ret
push
mov
out
fwait
xor
mov
and
fsubrs
pop
add
push
ds
pop
xchg
sub
sbb
dec
shll
add
cmp
mov
cli
movl
sub
lods
cmpsb
xchg
inc
mov
add
add
inc
xorb
add
add
xor
cli
adc
out
xchg
stos
push
nop
test
incb
pop
add
mov
inc
rorl
lcall
xchg
jo
and
test
aam
test
add
das
dec
loopne
movsl
data16
xlat
enter
movsb
inc
aaa
add
pusha
and
mov
leave
push
mov
ficomps
add
mov
aam
es
les
sbb
mov
add
mov
inc
push
int3
in
mov
dec
insb
subb
out
and
fwait
jge
add
into
loope
add
lods
jmp
xor
faddl
ds
in
pop
loopne
ljmp
jmp
dec
lods
mov
add
roll
clc
pop
stos
jo
sub
daa
sub
mov
xchg
jg
fiaddl
lcall
jp
ret
dec
cld
mov
inc
subb
call
insl
mov
add
sbb
sbb
push
pop
cmp
lods
sub
sbb
push
add
push
leave
add
mov
in
add
jle
jecxz
divb
sub
das
and
pop
mul
jmp
pop
rorl
add
daa
dec
cli
je
lock
add
mov
push
add
cmp
ja
dec
mov
inc
add
dec
ret
mov
add
js
shll
or
mov
inc
imul
sbbb
iret
mov
call
pop
add
add
sub
cmp
cmp
inc
jns
adc
add
popf
sub
lods
pop
mov
mov
cli
jbe
cmc
and
jbe
cmpsb
add
pop
mov
subb
jle
fstps
jecxz
add
lea
xchg
or
test
outsb
mov
or
add
inc
add
add
in
pop
sub
mov
repz
fwait
inc
sbb
lahf
fucomip
xchg
add
scas
sbb
pcmpeqw
pusha
sub
ljmp
mov
ds
mov
xchg
lock
sti
add
inc
cmpsl
sub
mov
mov
jmp
add
cmp
test
not
aaa
out
mov
xor
aam
out
add
hlt
loope
shrl
fiadds
mov
loope
inc
inc
sbb
fldenv
mov
in
pushf
mov
dec
ret
in
mov
add
sbb
add
arpl
add
ja
ja
mov
ja
int
repnz
rcll
roll
add
add
xor
and
add
push
mov
test
ret
or
imul
incl
push
jne
repnz
jo
out
idiv
mov
test
inc
add
pop
jbe
cmp
fdiv
ja
add
in
inc
mov
int3
decl
ret
cwtl
cmp
push
dec
push
add
mov
cltd
test
add
loope
pop
pop
push
cmc
mov
mov
push
sbb
lock
fs
mov
std
adc
leave
mov
stos
pop
stos
add
add
dec
lods
cs
idivl
jmp
cmpsb
add
cmp
xchg
dec
add
hlt
lods
cwtl
push
add
xorb
sbb
clc
pop
dec
push
fwait
add
stos
xlat
mov
add
int3
inc
xor
mov
adc
or
add
sbb
xchg
mov
test
adc
movsl
ja
subl
adc
fbstp
mov
in
jo
fisubs
shrb
add
jne
testb
mov
popl
pop
mov
aaa
xchg
sbb
pop
dec
sub
sbb
or
jge
enter
add
cltd
cmc
fs
mov
push
daa
add
jle
nop
mov
sub
jmp
add
fstpl
or
cmp
adc
int
inc
xor
pop
pop
iret
inc
mov
bound
pop
jp
fbstp
push
mov
shl
add
mov
fiadds
icebp
in
outsl
and
mov
add
movsl
lds
add
and
adc
jg
roll
mov
cmp
pop
add
data16
and
add
std
outsl
xchg
adc
jecxz
cld
int3
je
test
int3
imul
mov
out
pop
roll
lahf
mov
das
xor
cmc
pop
daa
fwait
and
sti
int3
add
lahf
xchg
int3
dec
cmp
imul
push
fisttpll
add
out
add
sbb
add
add
cmp
jb
push
bound
add
cmp
scas
sbb
inc
sub
mov
sbb
inc
mov
cmpsb
scas
mull
cmc
add
add
cli
adc
jecxz
adc
mov
add
inc
xor
ljmp
and
inc
xlat
add
push
stos
jmp
fxch
pop
add
mov
arpl
jnp
jnp
mov
cmpsl
push
add
add
out
jle
jmp
mov
ss
adc
std
mov
xchg
push
or
push
push
xchg
ret
inc
repz
pop
adc
pop
xchg
movl
add
rcr
imul
xchg
outsb
pop
out
out
add
pop
dec
std
je
or
fstp
add
mov
jmp
pop
cli
xor
inc
pop
data16
jge
add
inc
js
stos
and
rolb
dec
dec
iret
add
jmp
aad
mulb
mov
test
test
stos
cwtl
insb
dec
jbe
cmp
add
outsb
lret
cmp
add
fbstp
jno
insl
and
inc
repnz
inc
jg
jns
mov
adc
jnp,pn
cmp
adc
xor
sti
mull
xor
ja
cmp
fcompl
add
gs
mov
bound
inc
add
out
add
jbe
scas
mov
sahf
add
mov
adc
and
jl
add
jo
dec
add
mov
lret
cltd
add
or
mov
and
mov
cmp
jg
in
mov
mov
xchg
inc
sub
into
adc
test
add
xor
incb
mov
inc
add
add
add
cmp
adc
jmp
cltd
add
cmp
jp
mov
pop
add
add
sti
repnz
and
mov
loop
cmp
std
call
push
aas
xlat
adc
inc
xchg
pop
or
in
cli
xor
sub
and
push
push
lcall
and
jl
pop
data16
cli
scas
add
mov
lahf
movb
jns
or
pop
pop
arpl
lea
shlb
add
add
push
add
add
add
cs
add
sbb
mov
cwtl
mov
add
in
mov
adc
xlat
mov
mov
enter
sub
sbbl
aaa
jnp
in
mov
pop
shrb
cwtl
dec
mov
dec
xor
adc
das
sahf
lcall
es
mov
enter
shl
jns
or
sahf
add
xchg
cltd
add
pop
fmuls
sub
mov
xbegin
add
xor
pop
jb
andl
or
pusha
sti
inc
cmc
mov
sbb
push
movsb
fsubrs
jle
mov
outsl
jne
and
add
jnp
dec
pop
add
add
mov
imul
lcall
shlb
incl
popa
add
enter
add
dec
test
xchg
mov
and
adc
inc
std
xor
fsubl
mov
mov
lods
push
leave
adc
cmp
push
lcall
jle
add
add
cmp
push
out
xor
add
sbb
flds
dec
data16
add
in
xchg
adc
bound
push
mov
loop
int
jns
add
inc
mov
push
add
add
inc
jae
xor
and
loop
and
in
pop
stos
push
add
hlt
fcomp
cmp
fldl
xchg
insl
inc
mov
mov
sbbb
hlt
jl
je
and
incl
add
and
popa
mov
loope
addr16
rcrl
xadd
call
mov
jb
bound
inc
mulb
push
add
jle
stos
repnz
repz
aad
cmc
inc
int3
and
pop
cmp
dec
scas
jae
pop
ljmp
or
pop
add
popf
pop
add
add
mov
popf
mov
dec
ljmp
test
outsb
sbb
push
mov
outsb
int3
sub
out
inc
int
movsb
sub
lods
mov
icebp
aad
mov
sahf
push
dec
cmp
lret
or
icebp
and
or
sbb
or
ret
stos
pop
aas
mov
push
sahf
xor
cltd
mulb
mov
mov
dec
daa
add
or
js
add
add
mov
add
push
ret
push
outsb
and
daa
sub
callw
push
lret
mov
incl
test
or
jecxz
adc
add
hlt
jns
mov
out
lahf
cmpsl
rorb
jmp
cmp
add
pop
jne
jo
imul
cmp
xor
add
or
pushf
jno
add
sbb
out
incl
mov
cmp
mov
xchg
ss
fildll
dec
and
add
hlt
stos
out
es
mov
mov
or
imul
mov
lea
push
fcomps
pop
jae
xor
add
std
jmp
push
insb
mov
sub
add
pop
add
lret
mov
js
out
dec
add
movb
add
sub
fidivl
and
lds
lcall
add
xchg
cmp
repz
lcall
and
sbb
arpl
and
and
inc
add
add
insl
cmp
dec
pushf
loopne
mov
imul
fucomip
adc
setnp
jg
outsb
mov
jmp
push
or
add
sub
pop
into
repnz
int
jl
jl
jo
push
sar
dec
into
add
daa
gs
add
push
cmpb
daa
test
mov
mov
add
mov
shlb
mov
outsl
add
imul
sub
je
int
add
push
arpl
test
push
push
sbb
push
mov
shlb
push
dec
fists
sbb
pop
icebp
add
test
fstpl
push
icebp
add
nop
jbe
shll
add
add
lods
jg
inc
lcall
sahf
xchg
les
mov
repz
cmp
inc
cmp
xor
add
cmp
mov
std
rolb
mov
dec
inc
push
mov
rorb
sbb
add
enter
pop
cli
dec
and
enter
xchg
sub
addr16
add
add
das
add
and
pop
mov
js
lahf
inc
push
add
popa
add
mov
popf
mov
stos
xchg
push
fcoml
xchg
pop
or
add
sahf
lods
mov
aam
out
cld
lret
scas
inc
cmpsl
mov
pop
daa
mov
dec
or
test
add
out
sub
push
shlb
pop
subb
and
lock
adc
push
jns
add
cltd
inc
cmp
sub
fs
xchg
add
add
icebp
popl
pop
test
and
inc
cltd
mov
xchg
sub
test
mov
bound
insb
add
insl
jb
ret
add
cld
fcomi
in
pop
mov
add
popf
mov
and
mov
rcl
mov
scas
in
and
shr
repz
rorl
clc
pop
xchg
add
or
jmp
cmc
mov
adc
push
cmp
add
inc
add
mov
mov
mov
cli
ret
ja
adc
push
aam
sahf
rcll
mov
pop
push
rorl
test
add
xor
lds
pop
rolb
add
int3
loopne
test
mov
dec
add
xchg
inc
cs
adc
add
scas
push
lret
jne
jp
add
and
mov
lret
inc
add
cmc
aam
xchg
mov
test
lret
add
cli
xor
cmp
dec
mov
mov
sbb
pop
pop
fistpll
mov
rcrb
sbb
jns
sbb
iret
push
cmp
push
test
mov
dec
push
sbb
mov
cmp
mov
add
push
js
add
idivb
mov
add
sub
stos
xchg
add
sub
imul
aad
add
out
pushf
lock
dec
sub
add
subl
movsl
xorl
pop
cmp
push
ja
sbb
push
data16
loopne
push
add
add
xor
or
in
gs
jbe
adc
insb
pop
add
add
mov
add
mov
lret
cmp
mov
cmpsb
add
rcrl
mov
pop
aaa
sbb
jp
jle
sahf
or
xchg
icebp
icebp
jns
or
daa
mov
mov
ss
pop
add
sbb
sahf
add
jae
mov
idivl
adc
push
ss
mov
cs
test
data16
ss
add
mov
test
jae
xchg
add
ret
imul
or
xchg
fmulp
inc
add
add
jae
stc
jae
outsl
mov
mov
jb
mov
mov
xchg
xor
stos
testb
adc
add
add
inc
nop
cmp
sti
bnd
mov
push
push
ficoml
add
and
sbb
popa
jle
jp
or
cwtl
repz
aad
nop
jp
add
call
dec
adc
mov
scas
cmp
sbb
popf
mov
or
cmp
call
mov
add
mov
cltd
jbe
insb
jecxz
sub
cmp
adc
lret
or
ret
aaa
jge
jge
sbb
lea
add
mov
pop
and
in
add
jecxz
xor
add
mov
adc
lahf
add
or
sbb
add
popa
int3
inc
ss
decb
scas
jne
inc
mov
test
and
out
xchg
mov
flds
pushl
out
dec
cwtl
loopne
xchg
add
cmp
add
ds
mull
ret
xorl
inc
shr
add
dec
incb
pop
cs
add
je
mov
jecxz
add
adc
add
aaa
push
hlt
lret
test
cs
out
addr16
add
les
bound
jnp
and
add
dec
pop
or
out
rorl
jg
sbbl
add
push
int3
cmp
mov
cmp
pop
ja
nop
mov
xor
dec
xchg
icebp
jo
nop
in
ds
mov
mov
inc
scas
rolb
incl
mov
push
adc
xchg
in
jne
cmp
inc
pusha
cli
movsl
mov
loop
xor
jo
and
add
ljmp
pop
mov
mov
movsb
aad
inc
add
add
test
push
lock
pop
add
iret
cltd
ja
add
xchg
inc
call
add
add
mov
mov
adc
ficompl
pop
add
and
sub
jp
add
out
sbb
adc
xchg
xchg
js
out
into
xor
xor
xchg
add
aam
sub
push
xor
aam
add
mov
loop
mov
mov
jmp
add
pop
add
roll
loope
imul
faddl
dec
insb
out
shrl
jge
jbe
mov
jle
fildl
push
inc
call
repnz
push
dec
sub
lods
aas
call
dec
subb
xchg
loopne
lods
sub
jo
pop
cmp
adc
adc
ret
negl
mov
add
mul
xchg
push
movsb
bound
bound
pop
add
add
es
sub
scas
lock
fisubrs
add
cld
rolb
or
jb
adc
add
xchg
jmp
cltd
or
in
dec
mov
ret
fidivrs
in
dec
stos
add
xor
int3
push
and
mov
sub
inc
lahf
enter
mov
add
clc
into
mov
sub
aam
add
mov
push
movsl
mov
pusha
adc
jmp
pushf
xor
sbb
cmp
cmp
adc
lcall
push
shlb
imul
fidivs
mov
add
jle
ljmp
adc
lcall
and
sbb
fadds
fldt
and
adc
les
lock
push
adc
mov
mov
dec
dec
movsb
push
add
movsb
lcall
mov
add
mov
mov
xor
mov
repnz
movsl
cmpsb
mov
push
pop
xchg
dec
add
mov
add
out
sub
out
dec
fisubl
subl
mov
int
push
sub
clc
loop
loop
lcall
mov
jae
mov
mov
shrb
cwtl
add
xlat
outsl
jp
repnz
pop
jg
jo
jmp
out
bound
add
mov
mov
push
sub
daa
xor
add
add
add
scas
sbb
test
pusha
sub
pop
iret
mov
dec
pop
loop
and
sbb
xor
sbb
mov
sbb
lds
dec
mov
add
mov
push
add
fistpl
ljmp
mov
pop
into
popa
sahf
xchg
insb
add
xor
jae
sbb
pusha
and
add
add
jge
xchg
scas
dec
icebp
add
add
cmp
cwtl
push
call
xlat
dec
and
out
adc
test
clc
call
sbb
add
add
rorb
out
cmp
inc
xchg
push
shrl
or
add
jmp
sbb
test
dec
jg
out
addl
ljmp
sub
add
fstpt
xlat
lcall
add
sbb
sbb
in
sbb
xchg
pop
add
insb
add
add
imul
and
add
lcall
int
xchg
mov
pop
and
lret
or
or
ljmp
cmp
imul
mov
adc
jnp
imul
fwait
mov
pop
lods
lret
lahf
push
add
stc
je
push
or
mov
or
cmovnp
pop
out
add
add
cmp
dec
sub
in
and
mov
cld
dec
pop
bound
rcrb
pop
notl
add
jl
dec
insl
clc
sub
add
fstpl
inc
mov
cmp
pop
stos
sub
pop
std
adc
adc
cld
cld
lods
sub
outsl
loop
rolb
add
sbb
iret
test
cli
cmc
add
out
cmp
sbb
dec
out
lds
sub
int3
dec
repnz
fdivrl
or
mov
or
jae
shll
inc
dec
xchg
aas
push
insb
gs
scas
cmpsb
inc
sub
les
rcrl
cmp
push
roll
inc
mov
jnp
jg
xchg
sub
xor
xor
cld
mov
add
aaa
fcmovnb
test
add
mov
sub
dec
je
mov
sbb
jns
pop
sahf
sbbb
das
rolb
push
pop
pushf
jl
xchg
cld
add
sarb
sbb
nop
push
data16
je
push
cmp
dec
lea
add
inc
mov
cmpsb
jne
mov
mov
rcr
insb
rolb
ss
repz
cmpsb
test
add
add
mov
cwtl
loopne
and
mov
xor
sub
cwtl
out
fwait
in
ds
mov
xchg
add
adc
mov
sbb
jle
sti
bound
imul
mov
push
xchg
mov
adc
push
cmp
add
cwtl
pop
sub
int3
adc
add
addb
inc
sub
push
mov
rcrb
in
shlb
jnp
add
mov
mov
inc
jo
cltd
in
jbe
es
pop
ds
and
je
mov
or
add
in
inc
or
out
out
sub
int
loope
adc
loope
cmp
sbb
nop
aad
mov
push
add
xor
in
div
fcmovu
jns
xor
mov
jns
mov
aaa
add
aaa
loopne
ss
sub
mov
lds
idiv
mov
add
lret
shlb
push
lcall
fnsave
mov
add
mov
add
mov
mov
dec
movl
jle
sub
shrb
pop
add
add
cltd
cmc
sbb
mov
push
push
xchg
mov
fidivrl
push
stos
mov
pop
leave
adc
jg
lcall
mov
xor
pop
fdivrs
mov
fucom
fisubrl
add
es
and
scas
imul
clc
mov
xchg
testb
push
loopne
xchg
dec
pop
leave
cmpsb
cli
aam
imul
add
mov
shlb
dec
jge
dec
cmp
mov
out
les
addb
jae
mulb
or
dec
push
xor
xorb
cmpsb
xchg
cmp
add
mov
es
jns
push
insl
add
xchg
xchg
sti
add
jnp
jo
dec
mov
out
int3
add
jp
out
add
and
fsubr
add
je
aam
call
sub
adc
mov
insb
mov
add
test
add
sbb
xor
cltd
mov
js
inc
add
add
xor
push
sti
or
add
add
xor
loope
add
aaa
add
mov
push
add
pop
enter
ds
and
push
adc
test
adc
mov
js
pop
popa
jg
xor
dec
fwait
stos
add
cmp
push
andb
mov
adc
lock
add
xchg
test
cs
mov
mov
hlt
scas
inc
cld
dec
add
out
add
lds
push
push
add
imul
lcall
add
pop
pop
jmp
xchg
inc
inc
ret
out
fwait
adc
add
inc
push
sahf
repz
repz
leave
inc
mov
fwait
insb
jge
call
bound
mul
int3
loopne
stos
ss
inc
outsl
and
jne
inc
shrl
in
jns
add
sti
fistps
js
mov
push
mov
insl
inc
xchg
mov
add
inc
jns
mov
xchg
jns
jge
cmp
ret
push
push
popa
add
aas
and
test
push
push
hlt
lods
inc
pop
dec
sub
push
sbb
mov
add
add
fldl
pusha
add
add
sbb
jecxz
jb
add
dec
bnd
push
sti
dec
unpckhps
add
mov
orl
lret
rcrb
aad
ds
jne
ds
add
ret
aad
add
imul
add
mov
ja
sbb
bound
add
stos
mov
dec
outsb
rolb
out
mov
xchg
sub
pop
mov
xor
jb
add
les
sbb
daa
loop
lods
sub
jb
add
ss
shlb
push
add
sbb
rolb
inc
push
push
push
xor
and
sahf
into
rolb
leave
orb
fucomip
das
xlat
dec
xchg
mov
jp
test
dec
xchg
call
cmp
add
aam
mov
push
adc
scas
dec
loope
shlb
pop
add
push
cmc
mov
shlb
iret
sarb
add
arpl
add
sub
addr16
xor
pop
mov
fwait
adc
adc
push
cmp
lcall
cmpsl
add
add
hlt
sar
cltd
mov
cmp
in
inc
jecxz
xchg
adc
add
inc
test
fistpl
dec
ret
stos
fldl
insl
cmp
cmp
mov
jne
addl
jle
add
jmp
mov
sbb
add
push
add
test
mull
ret
inc
or
push
mov
and
fistpll
ja
daa
pop
pop
orl
test
push
or
faddl
sbb
add
subb
aad
add
sbb
aad
push
cmp
xor
add
ss
js
push
mov
sub
mov
out
pop
add
cld
pop
ret
mov
jo
insl
xchg
and
cmp
mov
cmp
mov
push
adcb
inc
sub
lods
and
inc
add
sub
out
popf
add
dec
stos
roll
out
cmp
inc
ja
pop
test
out
adc
testb
mov
push
add
adc
divl
or
adc
outsb
cli
add
push
xor
std
inc
mov
sti
add
je
pop
in
add
fisubrs
mov
add
xor
mov
mov
lods
jge
mov
xchg
push
mov
mov
jecxz
setl
movsl
or
rclb
loope
fwait
xchg
addb
and
sbb
add
popa
push
cmc
sbb
push
dec
cmp
loope
insb
out
adc
jle
popf
dec
pop
xor
mov
enter
xor
xor
cmp
cmp
adc
dec
lcall
je
add
bound
lea
add
mov
add
pop
sub
add
ret
nop
ret
ret
mov
scas
pop
add
add
add
pop
add
add
adc
imul
add
add
add
add
add
add
add
add
repnz
add
push
add
fimuls
add
ss
add
add
add
and
add
fists
add
add
add
std
adc
add
add
mov
add
aaa
adc
add
push
add
mov
add
add
pop
add
test
add
push
sbb
add
add
add
sbb
add
add
fcomps
add
add
add
add
add
add
cmpsl
and
add
add
add
and
add
add
add
add
add
and
add
add
add
sub
add
add
add
add
xor
add
add
es
add
xor
add
add
cmp
add
and
add
stc
cmp
add
add
add
add
jge
add
jmp
add
mov
add
add
add
jp
add
icebp
inc
add
add
add
inc
inc
add
scas
inc
add
add
add
cwtl
inc
add
int
add
xchg
inc
add
add
add
xchg
dec
add
std
dec
add
add
add
icebp
dec
add
das
dec
add
imul
or
add
add
add
add
add
inc
dec
add
add
add
fimuls
add
add
cwtl
dec
add
into
dec
add
jo
add
js
add
add
add
pop
push
add
or
add
add
add
add
add
add
push
add
pusha
pop
add
mov
add
add
pop
add
mov
add
add
add
add
add
jmp
pop
add
adc
add
add
add
add
push
data16
mov
imul
add
imul
add
add
add
xchg
insl
add
lock
add
add
add
add
add
add
add
je
add
add
add
add
inc
jne
add
add
add
add
jl
add
add
jge
add
add
add
add
mov
add
addb
add
add
mov
test
add
add
add
add
in
test
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
lea
add
add
add
mov
add
add
add
add
add
add
add
add
xchg
xchg
add
add
add
inc
xchg
add
cmp
add
stos
cltd
add
mov
add
add
add
add
pushf
add
xor
add
xchg
add
mov
movsb
add
push
movsb
add
dec
movsl
add
pushf
movsl
add
add
add
mov
add
sbb
add
dec
test
add
add
add
add
push
add
add
add
add
test
add
pop
stos
add
push
stos
add
mov
add
lods
add
dec
mov
add
mov
add
mov
add
add
add
add
lret
mov
add
mov
add
mov
add
lods
mov
add
sbb
add
add
add
mov
add
add
add
inc
mov
add
dec
mov
add
add
add
loop
add
mov
add
pushf
mov
add
add
add
mov
mov
add
add
add
test
add
sbb
add
or
add
jbe
add
add
add
mov
add
add
enter
add
add
lret
mov
add
mov
lret
loope
add
add
add
insb
lret
add
and
add
cwtl
rolb
add
rolb
add
rolb
add
add
aas
add
jg
add
mov
add
xchg
add
loope
add
dec
fildl
add
add
xchg
fldl
add
add
add
fiadds
add
add
add
loopne
add
add
add
add
add
add
add
jecxz
add
add
xor
add
cmp
add
add
in
add
in
add
add
add
add
in
add
in
add
out
add
add
add
out
add
add
add
add
add
call
add
aad
add
add
add
inc
jmp
add
add
add
shr
add
out
add
xchg
out
add
add
add
shl
add
add
add
repz
pop
repz
cmpsb
repz
cli
repz
inc
testb
push
testb
in
testb
div
add
mov
add
add
cld
add
sub
add
push
std
add
add
add
xchg
std
add
incb
add
add
mov
add
pop
incl
add
add
add
add
add
add
addl
add
or
add
loope
add
jne
add
add
add
faddl
add
add
sub
add
xchg
add
xchg
pop
add
add
add
lcall
add
add
add
add
add
or
add
or
add
add
add
or
add
add
out
or
add
or
add
add
add
cmp
add
add
add
loopne
add
add
add
lods
adc
add
add
add
add
add
adc
add
adc
add
add
add
sub
add
add
add
mov
add
in
add
add
add
pop
add
add
add
lret
sbb
add
sbb
add
add
add
and
add
add
andb
jmp
add
add
add
scas
add
mov
add
add
add
shrb
add
adc
add
mov
add
add
sub
add
sub
add
sub
add
das
add
add
add
dec
das
add
push
das
add
fildll
add
add
add
and
add
add
add
add
xor
add
add
add
add
inc
xor
add
add
add
xor
add
add
dec
aaa
add
add
add
pop
cmp
add
add
cmpb
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
aas
add
dec
inc
add
loop
add
clc
inc
add
xor
add
add
fs
add
fadds
add
add
add
inc
add
mov
dec
add
cltd
dec
add
and
add
add
dec
add
mov
add
add
add
add
push
add
add
add
cli
push
add
in
push
add
push
push
add
add
add
xchg
pop
add
rcrl
cmpsb
pop
add
xor
sbb
add
add
add
add
and
add
add
add
and
add
and
add
add
mov
add
xchg
and
add
and
add
add
add
jg
add
pop
sub
add
add
add
add
fldt
add
add
add
test
add
jo
add
xor
add
add
add
xor
add
xor
add
pop
cmp
add
add
leave
cmp
add
cmp
add
add
add
add
lcall
add
add
sbb
add
push
inc
add
gs
add
lods
inc
add
cmp
add
push
inc
add
insb
inc
add
rolb
sbb
add
add
pushf
dec
add
fmull
cld
dec
add
add
add
dec
dec
add
and
add
dec
push
add
adcl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
xchg
pop
add
add
add
mov
pop
add
fistpl
aaa
pop
add
bound
add
pop
add
sub
add
add
add
pop
pop
add
sbb
add
add
add
add
add
add
add
popa
add
dec
bound
add
add
xor
add
add
shlb
add
add
sbb
add
add
cmp
add
add
add
test
insb
add
mov
add
add
add
outsb
add
stos
outsb
add
sbb
add
add
add
push
outsl
add
add
add
inc
jo
add
jno
add
jno
add
jb
add
je
add
jbe
add
add
jbe
add
jbe
add
add
add
jbe
add
add
lea
add
ja
add
add
add
add
jl
add
add
add
add
add
jl
add
jle
add
add
add
add
add
add
loop
add
push
addl
add
add
addl
add
add
xchg
test
add
xchg
add
xchg
add
mov
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
lea
add
add
add
add
nop
add
add
add
cld
xchg
add
xor
add
add
add
ret
add
add
cwtl
add
fstps
add
jmp
add
xchg
lcall
sub
add
mov
add
inc
mov
add
add
add
outsb
mov
add
les
add
push
mov
add
push
mov
add
movsl
cmpsb
add
push
stos
add
cmp
add
je
add
shrl
add
add
add
lods
add
imul
es
add
mov
add
and
add
pop
mov
add
add
and
add
movsl
mov
add
dec
mov
add
add
add
xor
add
xchg
mov
add
add
add
add
add
push
rolb
jno
add
push
ret
add
add
push
ret
add
add
add
ffreep
add
add
add
mov
add
mov
add
add
movb
movl
add
add
add
add
jno
add
cli
lret
lods
lret
add
cmp
add
add
add
in
int
add
into
add
add
add
mov
add
add
aam
add
add
add
xlat
add
mov
add
cli
fadds
add
add
add
add
mov
add
add
add
add
add
dec
add
add
add
add
add
add
add
jae
add
jns
add
mov
add
xchg
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
ja
add
mov
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
imul
add
add
jp
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
outsb
add
add
add
add
test
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
sub
add
cmp
add
fwait
add
add
mov
add
add
roll
add
call
add
add
loop
add
out
add
ljmp
add
push
add
testb
add
push
add
incb
add
add
add
push
pop
add
or
add
push
pop
add
adc
add
sbb
pop
add
xor
add
cmp
add
inc
pop
add
dec
pop
add
pop
pop
add
arpl
add
insl
pop
add
ja
add
or
add
or
add
or
add
add
jae
add
test
add
or
add
add
ret
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
adc
add
and
add
cmp
add
pop
or
add
jae
add
jns
add
test
add
cltd
or
add
cmpsb
or
add
mov
add
lret
add
or
add
in
add
jmp
add
add
add
sub
add
xor
add
inc
push
add
inc
push
add
dec
push
add
push
push
add
pop
push
add
popa
push
add
addr16
add
jno
add
jns
add
orb
add
push
add
xchg
push
add
popf
push
add
mov
push
add
mov
add
int
add
rorl
add
add
ljmp
add
push
add
add
add
or
add
adc
add
and
add
sub
sldt
dec
sldt
dec
sldt
pop
sldt
pop
sldt
sldt
imul
add
add
xchg
sldt
mov
sldt
mov
add
mov
sldt
leave
sldt
iret
sldt
jecxz
add
in
sldt
clc
sldt
decl
add
pop
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
adc
add
add
jle
add
test
add
mov
add
nop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
add
adcl
add
insb
adc
add
add
adcb
add
adc
add
add
adcl
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
gs
add
add
add
add
adcb
mov
add
adc
add
adc
add
adc
add
adc
add
cli
mov
add
mov
add
add
push
mov
add
add
add
je
movq
fs
jae
add
lea
pop
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
add
add
add
add
add
add
add
push
imul
jb
je
arpl
add
adc
or
insb
adc
add
add
add
lea
dec
add
add
repz
add
add
repz
mov
jns
clc
out
add
add
add
add
add
add
fcmovbe
addl
add
das
mov
add
add
add
add
filds
add
add
icebp
add
jg
add
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
add
arpl
add
add
sbb
add
movsl
add
add
add
add
add
add
add
add
add
idivb
add
add
add
mov
fcmovbe
add
leave
test
mov
jo
add
jl
xchg
fildl
add
add
add
mov
add
enter
add
add
add
add
in
sbb
xor
mov
push
test
add
add
add
add
les
add
cmp
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
mov
out
mov
add
add
add
add
add
stos
enter
jb
lock
add
mov
add
add
and
add
scas
mov
jb
add
mov
add
add
add
add
add
outsb
add
add
add
add
add
add
add
enter
lahf
add
add
add
add
add
add
add
add
scas
adc
add
mov
add
add
add
add
add
push
add
add
xor
add
add
add
add
add
pop
pop
dec
inc
inc
add
add
mov
add
add
add
rol
aad
add
mov
add
add
add
loope
mov
add
add
jl
fcoms
add
add
add
aas
mov
cmp
add
fiadds
add
add
add
push
lods
mov
add
add
sbb
add
sbb
jle
add
add
add
add
cmp
add
add
add
adc
add
add
jg
add
add
add
insl
sbb
add
add
repnz
add
push
push
add
add
movsl
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
lahf
pop
sub
add
add
add
add
xchg
add
aaa
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
outsb
pop
mov
dec
add
jl
sbb
test
les
add
or
add
jbe
add
add
add
add
add
add
add
add
add
add
bound
adc
add
add
add
shl
aas
add
add
add
outsl
data16
mov
cmp
add
ljmp
add
add
add
add
add
xor
add
add
mov
add
arpl
add
add
add
add
push
add
add
add
test
add
add
add
add
add
rolb
add
add
add
dec
add
add
add
add
into
add
add
add
add
xor
pop
push
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
lods
insl
xlat
sbb
add
add
pop
add
add
add
add
add
mov
lcall
shrb
add
dec
cmpb
add
ljmp
add
add
add
add
add
add
add
add
add
iret
add
sbb
js
in
push
add
add
adc
add
mov
mov
insl
add
add
add
add
add
add
std
add
pusha
pop
add
add
add
add
add
add
add
add
add
add
add
or
std
add
add
add
mov
add
add
movsl
add
add
add
dec
add
add
pop
fwait
and
add
repz
add
add
add
add
add
add
scas
add
movl
add
add
add
rolb
add
add
add
xchg
add
add
sysret
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
out
push
adc
add
arpl
add
add
add
add
rorl
add
add
add
add
enter
add
sahf
add
push
add
mov
outsl
add
add
add
add
add
add
aas
mov
add
add
sbb
add
add
add
add
add
add
add
fucomi
xor
add
add
dec
add
int
add
add
add
add
jns
add
add
add
add
shrl
add
add
add
sbb
incb
add
add
add
add
ja
add
adc
add
stc
add
add
cld
add
or
add
add
add
add
sub
push
and
loopne
cli
add
add
add
add
add
imul
xorb
mov
add
mov
mov
mov
add
mov
add
jp
add
mov
add
add
add
loopne
add
out
mov
add
mov
add
add
pusha
mov
add
add
add
in
add
mov
add
add
and
add
dec
mov
add
add
push
add
add
add
test
add
lods
mov
add
add
lock
add
mov
add
mov
add
mov
add
add
add
add
pusha
mov
add
add
jl
add
xchg
add
mov
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
add
ss
add
add
data16
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
add
cmp
add
push
mov
add
add
add
add
jp
add
mov
add
mov
add
les
add
in
mov
add
mov
add
add
sub
add
pop
mov
add
add
jle
add
mov
add
scas
mov
add
mov
add
add
add
gs
xor
fs
insb
add
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
insb
insb
push
imul
outsl
arpl
add
push
gs
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
add
inc
insb
addr16
jb
arpl
add
dec
outsl
popa
fs
arpl
insb
gs
je
jb
inc
add
add
inc
imul
add
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
push
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
imul
outsb
addr16
add
add
dec
gs
popa
addr16
outsl
js
js
add
xor
cs
insb
add
add
je
insb
popa
jae
inc
imul
insb
gs
jb
popa
je
dec
imul
insb
gs
js
add
dec
dec
inc
inc
jb
insl
push
je
imul
push
inc
dec
inc
push
push
inc
pop
push
jae
jb
jb
add
add
inc
jb
popa
je
inc
jb
gs
push
gs
popa
jb
push
add
add
gs
gs
outsl
outsb
je
imul
arpl
add
inc
dec
inc
push
push
inc
pop
push
jae
jb
popa
jb
push
add
inc
jb
popa
je
inc
jb
outsl
jb
outsb
outsw
add
add
je
outsl
outsb
jbe
jb
push
je
add
gs
jne
xor
cs
insb
add
add
push
popa
jb
xor
outsl
insl
push
dec
xor
add
add
jb
arpl
outsl
insl
inc
jns
add
add
jb
arpl
add
add
jb
outsl
add
add
push
popa
jb
dec
xor
outsl
insl
dec
xor
add
add
jb
fs
add
push
popa
jb
arpl
outsl
insl
push
xor
add
add
jb
cmp
outsl
insl
push
dec
xor
add
add
jb
jae
jb
jb
insl
push
xor
add
push
popa
jb
xor
jb
insl
push
xor
add
push
popa
jb
outsl
outsl
insb
inc
jb
insl
dec
xor
popa
fs
jo
xor
cs
insb
add
add
push
jne
jb
push
gs
imul
imul
jo
outsb
push
push
push
outsl
imul
add
dec
jae
dec
outsl
outsl
imul
popa
insl
gs
add
add
dec
jo
outsb
push
outsl
insb
imul
add
add
imul
insb
insb
inc
popa
je
dec
jne
je
jo
gs
add
add
dec
pop
push
arpl
je
jne
jb
outsb
je
jb
jne
push
je
je
push
add
add
imul
data16
add
inc
gs
imul
push
jns
add
add
gs
inc
arpl
jbe
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
push
add
add
push
gs
imul
push
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
add
jb
popa
outsb
addr16
addr16
popa
insl
gs
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
add
push
gs
imul
inc
add
imul
gs
xor
cs
insb
add
add
push
gs
fs
imul
gs
je
imul
inc
js
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
jb
popa
je
inc
imul
jb
popa
je
push
push
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsl
popa
fs
gs
jne
arpl
add
add
outsl
bound
inc
gs
gs
inc
je
insl
add
add
push
outsb
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
jb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
jo
imul
push
popa
imul
insb
gs
bound
arpl
add
je
gs
imul
add
inc
jb
popa
je
dec
jne
gs
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
insb
outsl
bound
inc
jb
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
add
inc
gs
jb
arpl
fs
jae
add
inc
add
inc
add
mov
inc
add
add
aam
add
push
xor
xor
xor
inc
xor
xor
jo
jnp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
push
xor
xor
dec
xor
xor
jae
jge
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
jae
jge
test
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
jbe
xorb
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
jne
jl
test
mov
xor
loope
out
xor
or
pop
cmp
aas
ss
ss
ss
ss
test
mov
lcall
loope
out
in
ss
aaa
xor
cmp
inc
aaa
dec
aaa
push
aaa
push
aaa
pusha
aaa
data16
jp
xorb
aaa
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
aam
fidivs
in
in
aaa
stc
aaa
pushl
add
cmp
cmp
cmp
cmp
insl
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jge
test
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
inc
cmp
pop
cmp
je
jle
mov
stos
cmp
int
xlat
cmp
jmp
ds
outsb
aas
jle
mov
nop
aas
lcall
aas
mov
mov
aas
fdivrs
loop
jmp
and
add
add
add
and
sub
xor
cmp
inc
xor
xor
test
lea
xchg
xor
mov
mov
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
jo
jnp
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
jb
js
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
xorb
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
mov
nop
ss
movsl
ss
shll
ss
adc
das
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
fs
jne
xchg
aaa
cmpsl
aaa
lods
aaa
mov
aaa
into
aaa
fdivs
call
aaa
add
or
adc
push
cmp
xor
dec
cmp
push
cmp
arpl
jb
jl
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
or
sbb
and
sub
xor
cmp
inc
cmp
pop
cmp
cmp
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
popa
cmp
insl
cmp
mov
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
pop
cmp
jb
jl
cmpb
cmp
sarb
cmp
repnz
or
push
sbb
pop
ds
ds
ds
ds
ds
jne,pt
cmpb
ds
ds
ds
mov
jecxz,pt
jmp
or
sbb
aas
cmp
ds
dec
aas
push
aas
pop
aas
popa
aas
push
jo
jbe
jl
xchg
mov
mov
aas
mov
aas
iret
aas
aad
loopne
ljmp
add
xor
add
add
add
xor
xor
cmp
inc
xor
data16
jns
xorl
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
xor
dec
xor
pop
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
cmp
bound
insb
xor
jl
xchg
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
xor
xor
xor
arpl
insb
xor
js
jle
mov
mov
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xorb
xor
les
fdivl
cld
xor
pop
ss
ss
ss
ss
jg
test
mov
xchg
cmpsb
les
fdivs
fidivs
jmp
or
sub
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
arpl
insl
aaa
jge
mov
aaa
cltd
aaa
lahf
aaa
movsl
aaa
stos
aaa
mov
aaa
loopne
out
in
aaa
repnz
clc
aaa
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
push
cmp
cmp
cmp
cmp
cmp
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
ja
jge
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
push
cmp
jo
js
cmpl
mov
cmp
aad
fnstsw
add
or
adc
sub
xor
aaa
ds
jb,pt
js
jle
test
mov
sahf
ds
mov
sarl
fistpll
out
out
idivb
ds
aas
sbb
and
xor
aas
push
aas
pop
aas
pop
aas
fs
push
jne
jg
mov
xchg
aas
mov
aas
mov
aas
fnstcw
loopne
sti
aas
add
add
add
xor
xor
xor
xor
sub
xor
cmp
dec
xor
pusha
xor
jo
test
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
xor
dec
xor
imul
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
jle
test
xchg
xor
xor
shll
loope
jmp
xor
xor
xor
xor
xor
xor
jge
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
ss
jl
xchg
lea
xchg
ss
mov
ss
ljmp
add
push
aaa
sbb
pop
aaa
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
arpl
imul
mov
xchg
aaa
fwait
aaa
mov
aaa
mov
mov
aaa
fidivs
out
out
aaa
pushl
pop
cmp
cmp
and
sub
cmp
jns
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
jle
lea
xchg
cmp
mov
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
pop
cmp
jne
jl
test
sti
cmp
sbb
pop
sub
xor
ds
cs
xor
ss
cmp
ds
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
imul
xchg
xchg
aas
fwait
aas
movsl
aas
scas
aas
mov
add
push
add
clc
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
jae
mov
mov
xor
in
xor
add
push
ss
daa
xor
aaa
ss
ss
jg
mov
xchg
ss
ss
movsb
lods
ss
mov
ss
fnsave
jecxz
jmp
pushl
sbb
pop
aaa
and
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
outsl
aaa
jns
mov
xchg
aaa
fwait
aaa
movsl
aaa
stos
aaa
mov
mov
mov
aaa
stc
aaa
pushl
add
cmp
cmp
cmp
cmp
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
bound
jp
cmpb
cmp
mov
mov
cmp
loop
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
bound
push
jb
jp
cmpb
ds
ds
ds
sarb
fidivrl
loop
ljmp
aas
or
adc
sbb
and
sub
xor
dec
aas
pop
aas
pusha
aas
push
jo
jns
jg
test
fwait
aas
scas
aas
mov
aas
sarl
fidivrs
call
pusha
add
sbb
add
or
adc
and
sub
cmp
dec
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
xor
xchg
mov
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
adc
sbb
push
xor
xor
xor
xor
push
xor
xor
jne
jnp
xorl
cmpsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
dec
xor
imul
xor
mov
mov
xor
or
adc
sbb
and
sub
xor
cmp
ds
ss
ss
bound
imul
xorb
mov
xchg
ss
mov
ss
ss
add
or
adc
sbb
push
aaa
and
cs
xor
cmp
dec
aaa
push
aaa
pop
aaa
imul
cwtl
aaa
cmpsb
aaa
mov
mov
aaa
into
aaa
aam
call
aaa
add
or
pop
cmp
cmp
cmp
jo
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
arpl
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
popa
cmp
jbe
jge
test
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
inc
cmp
pop
cmp
mov
movsl
cmp
mov
mov
cmp
hlt
cmp
or
push
sub
xor
cmp
inc
ds
ds
ds
ds
ds
jge
test
mov
xchg
ds
mov
ds
ds
fnstcw
jecxz
jmp
ds
adc
cmp
ds
inc
aas
push
aas
pop
aas
addr16
outsl
aas
jbe
mov
pushf
aas
mov
aas
mov
aas
iret
aas
aad
fstpt
idivb
add
add
add
add
xor
jo
ja
xorb
xor
xor
fidivs
in
jmp
xor
or
adc
push
xor
js
jle
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
arpl
jae
xorl
mov
aam
fidivl
loopne
out
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
jne
scas
xor
lock
or
adc
sbb
daa
ss
ss
jbe
jl
mov
xchg
ss
shll
xlat
ss
in
ss
or
push
aaa
pop
aaa
sub
xor
cmp
inc
aaa
jne
jge
mov
movsb
aaa
stos
aaa
mov
mov
shll
aaa
shll
cli
aaa
add
or
adc
and
sub
das
cmp
cmp
cmp
data16
test
xchg
cmp
cmp
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
je
jle
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
dec
cmp
je
jge
xchg
lods
cmp
int3
cmp
loop
call
adc
sbb
and
sub
aas
ds
ds
ds
ds
imul
test
nop
ds
sarl
fdivrs
fidivrs
in
cmc
ds
ds
aas
push
aas
sub
inc
aas
dec
aas
dec
aas
push
aas
pop
aas
gs
outsl
aas
jnp
cmpl
scas
aas
mov
aas
lret
aas
jmp
aas
add
add
add
push
xor
adc
sbb
push
xor
xor
xor
xor
dec
xor
xor
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jle
mov
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
cmp
dec
xor
jno
js
xorb
xor
xor
xor
bound
imul
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
cmp
push
xor
imul
xor
sahf
xor
mov
xor
icebp
xor
and
es
ss
ss
mov
xchg
ss
ss
ss
scas
ss
shll
fdivs
loopne
jmp
ss
ss
aaa
xor
inc
aaa
dec
aaa
push
aaa
push
aaa
bound
insb
aaa
jbe
jge
mov
cltd
aaa
lahf
aaa
test
aaa
mov
aaa
fbstp
jmp
aaa
pop
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
imul
cmpb
cmp
add
cwtl
add
add
xor
ljmp
xor
push
ss
sbb
and
es
xor
cmp
ds
ss
ss
ss
ss
bound
push
ss
xorb
mov
xchg
ss
ss
movsb
ss
ss
mov
mov
ss
ss
fidivl
loopne
out
in
ss
ss
ss
or
adc
push
aaa
sbb
and
sub
cs
xor
cmp
inc
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
fs
push
jo
add
add
add
add
mov
add
add
add
cwtl
xor
test
lods
xor
xor
pop
cmp
cmp
insb
cmp
add
rolb
add
add
add
add
or
or
add
add
add
and
add
add
add
add
add
addb
add
cwtl
add
addb
add
and
add
or
add
sbb
add
lock
xor
add
add
andb
add
cmp
add
push
add
cmpb
subb
adcb
addb
add
jle
add
xchg
add
or
add
loopne
add
clc
add
addb
add
and
add
add
push
add
or
add
add
add
add
sub
add
inc
add
or
add
pop
add
or
add
jo
add
mov
add
and
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
fs
add
cmp
add
pushf
pop
add
mov
add
add
add
add
add
add
add
add
cmp
add
js
add
adc
add
mov
add
movb
add
add
add
mov
add
add
lsl
xor
add
sub
add
outsb
add
add
add
dec
adc
add
les
add
cmp
add
add
add
mov
add
add
add
add
add
fcomps
add
mov
add
add
add
add
add
mov
add
add
add
dec
add
push
add
add
or
inc
add
dec
add
push
add
add
pop
add
dec
add
dec
add
inc
add
add
dec
add
dec
add
inc
add
add
add
push
add
push
add
inc
add
dec
add
or
inc
add
inc
add
inc
add
add
add
add
inc
add
dec
add
inc
add
push
add
add
dec
add
push
add
push
add
or
add
inc
add
push
add
dec
add
dec
add
dec
add
add
push
add
inc
add
add
push
add
add
add
dec
add
or
push
add
dec
add
push
add
dec
add
pop
add
inc
add
dec
add
dec
add
rolb
addb
add
push
add
add
add
add
add
add
outsl
add
data16
add
jb
add
add
outsl
add
je
and
dec
add
add
imul
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
incl
add
push
add
add
mov
add
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
str
add
add
incl
add
and
add
bound
jne
add
add
jne
je
jo
jne
je
and
add
jb
imul
and
outsb
add
js
je
and
bound
outsl
add
je
cmp
add
add
add
or
add
add
add
add
add
add
add
add
incl
add
add
add
outsl
add
jns
add
add
or
add
add
add
add
add
add
add
add
incl
add
add
imul
add
add
or
add
add
add
add
add
or
or
incl
add
arpl
push
add
outsl
add
jae
insb
add
and
je
outsl
add
add
imul
add
add
rolb
addb
add
add
add
add
add
outsb
add
add
and
push
add
insl
add
je
add
add
outsl
add
jo
jne
je
add
and
dec
add
insl
add
and
outsl
add
and
dec
add
and
inc
add
add
add
jae
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
inc
add
push
add
add
xor
adc
mov
inc
add
add
incl
add
add
add
push
add
add
mov
add
incl
add
add
add
add
add
push
add
add
iret
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
add
push
add
add
push
add
add
add
add
incl
add
jo
jne
je
add
cmp
add
add
rolb
nop
add
add
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
flds
adc
in
add
incl
add
add
outsb
add
and
jne
jo
and
jb
add
outsl
add
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
flds
adc
in
add
incl
add
add
outsb
add
and
jne
jo
and
jb
add
outsl
add
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
push
add
add
pusha
add
add
add
incl
add
add
add
rolb
addb
add
add
add
add
add
add
add
jb
outsl
add
add
jae
imul
and
inc
add
popa
add
push
add
insl
add
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
add
add
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
push
add
outsl
add
jb
add
jae
xor
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
mov
add
add
incl
add
add
add
add
add
push
add
add
pop
add
push
add
add
incl
add
add
add
incl
add
add
add
add
or
addb
add
add
lret
add
add
add
add
push
add
dec
add
push
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
insb
add
add
je
and
jbe
xor
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
xor
push
add
add
add
incl
add
imul
add
add
add
add
add
add
incl
add
je
imul
add
add
add
add
add
adc
incl
add
dec
add
dec
add
add
add
add
rolb
nop
add
add
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
flds
adc
in
add
incl
add
add
outsb
add
and
jne
jo
and
jb
add
outsl
add
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
addb
add
add
add
add
add
add
add
jne
add
imul
and
dec
add
jae
je
outsl
add
jns
and
inc
add
jo
je
push
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
andb
push
inc
add
add
add
in
add
add
incl
add
add
add
add
incb
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
xor
push
add
add
add
incl
add
jo
insb
add
add
add
add
add
add
add
incl
add
jae
add
add
push
popl
add
add
add
add
add
incl
add
outsb
add
add
add
add
push
push
add
add
incl
add
je
outsl
add
jns
and
inc
add
jo
je
push
add
push
pop
add
add
add
incl
add
imul
outsl
add
jns
and
inc
add
jo
je
push
add
and
xor
and
jae
imul
imul
add
and
outsb
add
and
add
jo
je
push
add
insl
add
je
and
sub
popa
add
add
add
jne
je
jo
jne
je
and
imul
jb
add
add
outsb
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
jne
add
imul
and
inc
add
jo
add
add
add
outsl
add
insl
add
outsb
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
addb
push
add
add
or
adc
rolb
or
or
add
add
add
add
add
pop
add
add
jb
add
add
add
add
incl
add
jo
add
add
add
add
add
push
add
add
stos
add
add
add
add
add
incl
add
outsb
add
add
add
add
add
push
add
add
or
pop
add
incl
add
add
and
je
add
je
and
je
outsl
add
add
jo
jo
add
add
add
add
add
add
and
arpl
jne
jb
jb
add
je
and
arpl
outsl
add
jo
jne
je
add
and
outsl
add
je
jo
jne
je
cmp
add
add
add
rorb
addb
add
add
add
add
add
add
add
add
jne
add
imul
and
inc
add
add
outsb
add
add
add
insb
add
arpl
je
and
popa
add
and
dec
add
and
inc
add
add
add
jae
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
push
add
add
mov
and
xor
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
incl
add
jne
add
imul
and
push
add
add
add
add
je
add
add
jne
insb
add
add
insb
add
and
dec
add
and
popa
add
add
add
jae
add
and
outsl
add
and
jns
outsl
add
jb
and
jae
jns
jae
je
add
add
add
insb
add
popa
add
add
add
add
add
je
and
je
push
add
outsb
add
and
jns
outsl
add
and
ja
popa
add
je
and
je
push
add
add
jne
add
imul
and
arpl
insb
add
add
je
and
je
outsl
add
add
jae
add
add
push
add
add
push
add
add
add
add
incl
add
add
je
and
dec
add
and
inc
add
add
add
jae
cmp
add
add
add
add
and
add
add
and
add
add
incl
add
add
add
addb
add
pop
add
and
aam
push
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
add
imul
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
addb
push
add
add
xor
sub
dec
add
out
add
incl
add
add
add
add
cmp
dec
add
out
add
incl
add
add
add
push
add
add
xchg
add
add
add
add
add
incl
add
push
add
add
xchg
add
add
add
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
adc
sub
push
add
add
incl
add
outsl
add
outsb
add
add
push
add
add
or
cmp
and
or
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
or
pop
add
incl
add
jb
and
popa
add
arpl
outsl
add
outsb
add
add
add
jae
and
outsb
add
je
and
push
add
and
popa
add
jo
jb
outsl
add
jb
imul
add
add
jb
imul
insb
add
add
jae
and
je
outsl
add
add
arpl
arpl
add
jae
and
je
push
add
add
outsl
add
add
add
outsl
add
jo
jne
je
add
add
add
insb
add
popa
add
add
add
outsb
add
add
and
je
push
add
popa
add
add
add
outsb
add
add
popa
add
jae
ja
outsl
add
add
add
data16
add
outsb
add
add
arpl
arpl
outsl
add
outsb
add
add
add
je
and
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
imul
imul
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
popa
add
add
add
incl
add
je
imul
add
add
add
add
add
add
or
add
add
add
incl
add
outsb
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
jb
outsb
add
outsb
add
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
sbb
sbb
push
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
xor
pop
add
incl
add
je
add
and
insl
add
insl
add
jb
jns
and
jne
jae
popa
add
add
add
popa
add
and
add
arpl
add
add
add
add
add
add
add
add
jne
add
imul
and
ja
imul
and
arpl
add
jae
add
add
add
add
add
outsl
add
add
arpl
je
imul
and
jne
outsb
add
add
add
add
outsl
add
jns
and
jne
jae
popa
add
add
add
add
jo
jae
add
add
add
add
add
add
add
je
jb
insb
add
add
sub
add
adc
inc
add
jo
je
jne
jb
add
add
add
je
jb
insb
add
add
sub
adc
inc
add
je
outsl
add
arpl
jb
outsl
add
add
add
add
je
jb
insb
add
add
sub
push
add
insb
add
popa
add
and
sub
inc
add
add
add
sub
add
add
sldt
imul
add
and
sub
inc
add
add
add
add
add
add
add
add
je
jb
insb
add
add
sub
add
dec
add
add
sbb
push
add
outsl
add
and
inc
add
insb
add
and
push
add
jae
je
add
and
inc
add
je
imul
je
jns
push
add
push
add
add
add
imul
jb
jns
and
inc
add
je
imul
je
jns
add
and
push
add
outsl
add
and
push
add
outsl
add
add
jae
and
popa
add
add
add
add
add
add
add
arpl
je
imul
je
jns
adc
dec
add
add
insb
add
add
je
and
sub
inc
add
add
add
sub
sbb
inc
add
outsb
add
jb
popa
add
add
add
jb
outsl
add
imul
outsb
add
and
inc
add
add
je
jae
pop
add
jne
insl
add
and
je
outsl
add
add
bound
push
add
je
and
sub
inc
add
add
add
sub
or
inc
add
je
add
add
add
add
add
add
push
add
outsl
add
add
jae
and
dec
add
insl
add
add
push
add
inc
add
add
jo
add
popa
add
add
outsb
add
add
add
jne
insb
add
add
add
add
insb
add
add
add
jne
add
arpl
add
add
add
outsl
add
jo
popa
add
jns
or
inc
add
jae
arpl
jb
imul
imul
or
inc
add
insl
add
popa
add
add
add
add
add
push
add
add
or
dec
add
popa
add
add
add
popa
add
add
add
add
jae
imul
push
add
jbe
add
je
and
inc
add
insl
add
insb
add
je
add
push
add
je
push
add
inc
add
add
insl
add
add
and
dec
add
popa
add
add
jb
popa
add
add
add
add
add
jae
jae
or
add
add
add
add
add
add
add
add
add
popa
add
add
outsb
add
add
add
add
add
data16
add
add
push
add
outsl
add
add
add
add
add
popa
add
add
outsb
add
add
add
jae
imul
or
inc
add
add
je
and
inc
add
add
jae
adc
inc
add
je
push
add
add
popa
add
add
outsb
add
add
inc
add
add
imul
jne
popa
add
add
add
add
outsb
add
add
jb
imul
