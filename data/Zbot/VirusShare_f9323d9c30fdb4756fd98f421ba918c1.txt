psubw
call
mov
xchg
fidivrs
adc
cmp
ss
repnz
xchg
lods
in
dec
add
sbb
xchg
int
test
or
popa
mov
cmp
add
pop
pop
leave
or
dec
push
movsb
pop
pop
pop
pop
or
ret
outsb
pusha
addr16
pop
pop
add
leave
xchg
mov
and
insb
outsb
fdivs
rclb
and
inc
pop
das
add
pop
jg
stc
jmp
test
rolb
mov
or
add
dec
pushl
xchg
mov
add
adc
and
add
idiv
decl
aaa
dec
add
adcl
and
or
testb
imul
jmp
mov
into
dec
mov
out
add
sti
pop
cmp
ja
mov
dec
movsl
add
scas
mov
pop
xchg
add
add
pop
js
ja
popa
repnz
call
pop
les
inc
add
mov
push
add
mov
fimull
add
dec
arpl
pop
leave
rolb
sub
mov
fwait
test
nop
enter
popa
xor
gs
push
add
movsb
pushl
lods
outsl
add
add
and
pop
call
xchg
and
mov
enter
shr
push
cmc
stc
add
ret
fldt
mov
test
sbb
in
fs
ret
push
xchg
jecxz
in
cmp
je
outsl
jg
and
dec
loope
nop
loop
dec
ret
mov
xchg
and
js
in
fucomip
decl
shl
push
add
ja
dec
movsb
pop
or
pop
call
out
in
sub
sbb
xor
sub
imul
jb
pusha
xchg
sti
test
jmp
mov
or
push
fldenv
or
add
aam
or
xchg
lock
fistpll
sahf
cli
add
fwait
out
mov
fdivl
xlat
adc
sbb
test
fistps
jo
pushf
xchg
and
xchg
add
ja
xor
xchg
cmp
jne
or
fnstcw
mov
sub
mov
add
aas
or
sbb
idiv
add
add
or
popa
ret
scas
jmp
add
inc
test
pushl
xchg
pop
push
adc
add
fistl
fldenv
or
and
add
push
outsl
pop
adc
jbe
mov
cwtl
repz
lods
lods
and
mov
xchg
pop
inc
outsb
fs
pop
and
mov
inc
add
jp
pop
adc
add
or
movsl
and
dec
mov
neg
add
inc
push
lods
jg
ja
add
movb
sbb
data16
xor
jmp
mov
shrb
cmp
push
inc
mov
cmp
fcmovnu
incl
rolb
test
mov
sti
das
mov
mov
les
jb
addr16
xchg
sets
orb
std
mov
pop
int3
add
test
xchg
cmpsb
shl
jecxz
xchg
dec
cwtl
and
stc
or
movq
push
mov
rclb
out
jle
test
mov
outsl
sub
rcll
sub
mov
and
in
je
mov
jl
and
out
sbb
sbb
lret
lds
cld
outsl
lcall
inc
or
sub
jl
add
andl
add
cmpsb
or
mov
and
push
fs
add
fcmovnb
xchg
sub
lea
add
pop
inc
jmp
or
jle
add
and
pop
outsl
jg
aam
clc
jb
jecxz
rorb
inc
daa
add
loope
jno
push
ret
cmpb
das
rorl
or
je
xor
rcll
into
jecxz
pop
pushl
andb
mov
je
je
aad
add
cmp
fisubrl
push
push
outsb
fildll
inc
rolb
mov
pop
or
push
scas
cmpsl
xchg
lcall
outsl
aam
lods
or
add
jg
mov
loope
shl
aaa
pop
inc
mov
push
mov
leave
inc
in
and
aas
add
repnz
in
mov
and
and
in
mov
add
mov
leave
popa
mov
stc
cmp
ret
lcall
addb
adc
mov
das
insl
test
mov
fstpt
cmp
mov
mov
adc
shrl
pop
clc
outsl
fildl
mov
sub
enter
sbb
out
push
addl
cld
mov
jbe
push
and
dec
sbb
pop
sub
lret
mov
out
inc
or
pop
pop
andb
add
add
sbb
cmp
into
pop
mov
test
insl
add
incl
lcall
mov
or
insb
rcr
roll
fwait
loopne
mov
ret
push
add
std
sub
sub
mov
and
shrl
jo
dec
dec
sub
sbb
and
or
addl
test
sti
sbb
pushf
out
fidivrl
adc
cmp
add
jbe
or
dec
pop
xor
jmp
in
fidivrs
pop
mov
xor
sub
in
outsl
fistpll
inc
lcall
dec
sub
pusha
mov
dec
fadds
shll
pushfw
ret
pop
jge
dec
fcmovnb
outsl
mov
les
adc
loop
cmp
sub
mov
and
sub
sarl
xchg
dec
mov
mov
jbe
jbe
dec
adc
mov
adc
add
pop
mov
or
xchg
int
std
int3
jmp
lds
dec
fiaddl
pop
aad
jmp
mov
sub
cli
inc
jmp
push
dec
push
jbe
pop
das
mov
ffreep
mov
jns
inc
ds
movsb
lcall
xor
js
mov
loope
push
xchg
xchg
mov
pop
pop
mov
xor
loop
inc
fcmovu
lcall
jecxz
pop
add
ss
sbb
mov
ficoms
jl
sbb
int
pop
les
rcrb
xchg
lahf
dec
push
pop
fdivs
div
inc
imul
dec
iret
mov
mov
pop
adc
sbb
xchg
mov
inc
xchg
xor
fwait
clc
addr16
mov
test
loopne
and
test
sbb
fiaddl
jnp
adc
jge
cld
push
add
jg
dec
andl
pop
loop
pop
pusha
loop
xor
loopne
pop
cli
cmp
mov
mov
arpl
outsl
pop
cs
sbb
mov
pushf
ret
mov
or
add
movsb
js
dec
loope
push
lcall
mov
test
push
add
stos
ret
or
fistl
pop
add
jmp
xchg
arpl
jbe
inc
rcrl
sub
dec
fstpl
faddl
leave
dec
add
cmpsl
ret
mov
push
insl
clc
outsl
das
gs
sbbb
es
js
scas
sub
in
fbstp
inc
and
hlt
rcl
inc
iret
inc
rcrl
pop
clc
lcall
icebp
fistpl
adc
pop
mov
mov
fwait
test
and
ret
lock
lcall
sti
or
mov
mov
or
jg
mov
dec
mov
subl
pusha
ret
mov
sub
xchg
or
loope
pusha
adc
add
fnstsw
mov
adc
cltd
mov
mov
xorl
out
mov
insb
pop
lret
xchg
add
add
or
aad
sbb
out
jle
fst
negb
dec
xchg
and
add
icebp
pop
test
icebp
inc
mov
cmpsb
sbb
popf
loope
sbb
xor
push
dec
stc
icebp
flds
fwait
push
sub
incl
out
mov
push
xor
call
and
rclb
data16
and
movsl
and
xor
frstor
jl
jae
insb
xor
sub
jb
and
paddsw
mov
add
jp
test
ret
cld
and
das
loope
pop
outsb
icebp
roll
movsl
fsts
xor
push
lock
mov
stc
int
dec
out
decb
push
shll
in
out
sub
pop
cld
or
mov
insb
sbb
clc
inc
je
pop
arpl
and
inc
dec
push
cli
fbstp
mov
or
mov
addr16
cs
arpl
int
sbbb
out
adc
dec
sub
cld
imulb
xchg
inc
push
mov
xlat
dec
ret
mov
sub
jle
movzbl
mov
xlat
jo
mov
pusha
add
movswl
sbb
mov
outsl
mov
adc
fsubl
outsb
sbb
lea
bound
test
jg
pushf
icebp
pushf
mov
push
negl
aaa
adc
cmp
mov
mov
out
and
leave
int3
xchg
xor
jl
pusha
jl
fsubrl
ss
pop
rcrl
iret
sub
sbbl
lcall
imul
jae
cs
bound
pop
clc
pop
js
jg
addl
mov
mov
sbb
iret
and
arpl
cmp
mov
and
adc
mov
loopne
mov
cltd
adc
xchg
lahf
lds
mov
mov
sahf
and
insb
pushl
subl
sbb
sti
mov
adc
jp
fcomip
dec
jecxz
and
leave
out
sub
lcall
cmp
and
jecxz
fdiv
mov
fldcw
adc
sbb
sti
mov
add
mov
lret
ret
outsl
hlt
je
pushf
and
xchg
mov
sbb
pop
fildll
xchg
outsl
je
add
jnp
push
dec
mov
popa
mov
jns
nop
dec
xorb
push
in
mov
filds
add
xchg
outsb
mov
cmc
adc
pop
push
clc
repz
inc
or
xor
add
add
mov
std
cli
adc
or
dec
mov
int3
adc
or
stos
push
orb
das
xor
fiaddl
cmpsl
cmp
mov
mov
outsl
aaa
inc
sbb
pop
test
and
decl
mov
lea
inc
or
inc
cltd
mov
inc
inc
lcall
je
sub
sbb
jbe
lahf
fildl
push
inc
imul
rcrw
fwait
clc
mulb
adc
rolb
cli
lret
or
pop
mov
movsb
xchg
into
jmp
or
cltd
and
add
lock
insl
or
pop
js
lock
push
shll
scas
xchg
mov
push
mov
mov
push
push
sub
les
cmp
repnz
aad
adc
push
pop
xchg
inc
test
inc
or
jbe
outsl
fmull
mov
aaa
lods
push
push
add
pop
mov
sub
mov
bound
and
and
das
push
mov
inc
cmpsl
inc
pop
add
sbb
dec
xchg
jl
push
test
loopne
xorl
sbb
ja
pop
jne
adc
pop
push
sbb
in
into
push
push
xchg
or
repnz
loope
xor
cs
and
xlat
out
lea
movsl
xor
imul
movsb
cwtl
or
xchg
push
add
and
mov
mov
dec
xor
adcb
pop
mov
jb
pop
push
pop
add
add
lock
negb
push
dec
outsl
loop
popa
ds
jne
push
cmp
pop
xchg
pushf
cmc
test
out
lods
inc
test
jge
dec
int3
or
test
add
inc
mov
inc
add
in
fs
enter
out
xor
loope
xchg
jg
add
mov
fwait
jge
ja
fistpll
mov
push
dec
insl
arpl
outsb
cmpsb
sub
arpl
or
test
in
adc
mov
outsl
jno
xchg
pop
sbb
clc
outsb
push
xchg
xchg
push
pop
mov
sub
sbb
inc
sub
std
mov
insl
stos
jno
mov
out
cmpsb
rcl
pop
mov
adc
mov
pop
xchg
push
jg
lcall
ret
dec
adc
jne
test
add
aam
stos
fs
lret
add
outsb
rcr
in
jg
mov
mov
shlb
mov
pop
insb
scas
jle
or
pop
clc
xchg
fcmovnu
out
icebp
push
push
lock
fimull
leave
sbb
cmpsl
int3
or
dec
push
cltd
dec
add
outsb
loope
test
inc
fistpl
hlt
sbb
sarb
fisttpll
sub
jge
pop
ret
fistl
cmp
pop
fistl
fs
decb
icebp
es
je
aad
ds
adc
mov
jle
fs
ds
mov
movb
shll
dec
push
fimuls
lahf
mov
xchg
mov
lcall
cs
lods
sbb
fcompl
mov
mov
push
fisttpll
dec
decb
arpl
jmp
icebp
cmpsl
adc
jb
test
xchg
stc
fucomi
ds
idivl
mov
adc
mov
imul
jg
jg
repz
xchg
fildl
adc
testl
mov
stc
jb
imul
cltd
roll
loope
mov
decl
ljmp
pushf
adc
adc
push
cli
inc
xor
mov
stos
jmp
in
ret
mov
push
cwtl
or
popa
lcall
gs
push
jns
or
out
pop
mov
outsb
fnstcw
xor
in
pushl
insb
rolb
xchg
inc
dec
mov
jne
mov
enter
lds
jg
and
clc
adc
inc
sub
inc
fchs
add
sbb
fsubl
adc
repnz
push
push
or
loopne
cmc
mov
out
movsb
int3
popa
movsl
sbb
pop
sbb
push
repz
xchg
push
mov
sub
mov
repnz
xor
insl
fstpt
xor
stos
fadds
mov
clc
jg
mov
xorl
pop
mov
mov
lret
sbb
mov
xchg
mov
in
dec
mov
notl
push
pop
fsubrs
shll
sbb
mov
xor
adcb
fcomp
cvtps2pi
sbb
inc
fldt
inc
push
xor
aaa
cmc
mov
push
dec
dec
mov
paddq
cltd
add
pop
mov
addr16
cmp
mov
jg
pop
mov
mov
cmp
cmp
mov
in
xchg
scas
inc
fucomi
jp
jno
or
orl
in
in
scas
ret
cs
xor
arpl
xchg
out
adc
and
xor
mov
cmp
loop
sub
and
pop
add
nop
mov
outsb
or
sbb
and
push
mov
jmp
inc
add
or
cli
mov
cld
lcall
adc
adcl
sbb
adc
pop
movsl
sub
add
inc
and
and
push
fsub
push
xchg
test
jecxz
not
jbe
mov
xor
or
add
xchg
mov
add
add
add
push
pop
push
mov
clc
push
daa
das
insl
mov
xchg
das
fnsave
shrb
add
adc
xlat
aam
or
dec
sti
roll
inc
call
cmp
xor
add
and
popf
add
xor
subl
and
mov
add
jno
ljmp
push
loop
mov
dec
mov
andb
fldt
rcrb
insb
dec
pop
xor
ss
sub
mov
ja
ja
inc
dec
aam
sub
fistl
fwait
jge
movsl
ljmp
fdivrl
jb
adc
ret
dec
insb
mov
test
decl
ret
leave
push
mov
mov
es
add
jle
cmp
lock
imul
decl
xchg
imul
xor
mov
rcr
aaa
clc
sub
jl
mov
sub
sbb
fwait
movsb
mov
cmp
aad
jmp
lock
mov
jl
test
sbb
fistpll
into
cmc
ret
xchg
jb
and
cltd
jg
lods
mov
lods
js
fstpt
icebp
adc
scas
mov
fwait
cs
cmpl
add
addr16
fbstp
pop
add
dec
push
push
and
mov
push
cs
cmp
in
ja
ja
ss
inc
test
add
push
pop
mov
gs
les
insl
mov
xor
popa
shlb
and
hlt
or
xchg
add
mov
push
or
mov
sbb
push
roll
ljmp
lret
mov
sub
fs
in
push
js
jge
xor
sti
in
popa
jmp
fwait
inc
mov
ja
cs
test
popa
les
out
ds
jmp
dec
lea
mov
daa
ljmp
shll
mov
dec
or
jge
mov
loop
adc
and
aad
test
xchg
and
shll
jae
ljmp
add
test
pop
inc
mov
add
add
or
xchg
out
clc
xor
movsl
adc
test
inc
xor
neg
mov
sbb
incl
fincstp
rolb
das
add
push
js
and
sbb
stc
jo
mov
fadd
inc
cld
cmp
into
and
mov
outsl
lea
mov
shlb
dec
lods
push
loope
inc
mov
add
sbb
fmulp
es
mov
mov
mov
shrl
mov
and
outsb
mov
not
mov
or
outsl
outsl
fbstp
inc
or
popl
pusha
adc
jge
ds
xor
sbb
testb
or
add
push
add
dec
sbb
add
fstpl
cmp
clc
push
xor
sahf
insb
clc
sub
mov
int
jl
lahf
fcmovnu
jbe
aaa
leave
in
and
in
icebp
or
and
add
mov
in
jne
dec
clc
and
or
scas
jnp
ja
clc
or
pop
adc
xor
rorb
pop
mov
clc
dec
mov
dec
xor
mov
shrb
neg
push
aaa
sbb
sub
roll
push
addr16
stos
dec
cmpsb
cmp
jmp
scas
fisttpll
xchg
adc
mov
cmp
xchg
mov
int3
xlat
std
stos
sub
repnz
loope
push
ja
fsubrs
lea
push
push
aaa
pushl
lea
push
push
lock
imul
sahf
insl
and
cmp
mov
mov
ss
xor
inc
mov
pushf
jmp
mov
jmp
fwait
popf
sbb
add
mov
inc
adc
adc
mov
leave
ret
push
inc
pop
push
jg
add
testl
pop
push
inc
dec
incb
sahf
int
rorl
rorb
lods
aad
sti
inc
stos
sub
xlat
mov
ficompl
pusha
cmp
rclb
out
hlt
sbb
aas
pop
clc
mov
adc
bound
shrb
mov
in
rcl
cmp
pop
pop
sbb
sub
xchg
test
movsb
jns
jne
cld
lods
and
sbb
inc
add
add
das
shll
sbb
sub
xchg
data16
sub
mov
xchg
xor
cli
pop
sub
mov
xchg
inc
pop
add
pop
or
adc
pop
loop
es
mov
add
pop
jnp
mov
mov
cmc
and
mov
add
mov
or
xor
pop
lea
fiadds
push
js
popf
mov
xor
fidivrl
and
or
negl
ret
in
sti
subb
mov
test
dec
in
call
shrb
mov
ja
mov
adc
sub
xor
xchg
mov
sbb
ja
mov
jp
into
adc
add
sub
aas
xlat
frstor
adc
cmpsl
jg
ja
fucomip
inc
pusha
jge
jl
mov
xlat
das
mov
lahf
push
and
mov
popf
stos
push
out
mov
xlat
pop
js
mov
xchg
cmpsl
xor
push
scas
sbb
dec
mov
decb
inc
lret
rdpmc
sub
push
lock
or
push
dec
cld
ret
std
call
rclb
or
pop
popf
push
enter
add
jb
jmp
out
cmp
or
sbb
push
dec
outsl
rcl
fbld
xor
adc
sbb
popa
mov
xchg
xchg
mov
into
or
cltd
js
mov
push
pop
xor
pushf
sbb
movsl
ja
and
adc
inc
jmp
pop
mov
add
sti
cwtl
aas
jg
int
pop
sub
fwait
js
movsl
lock
mov
sub
cwtl
dec
pop
js
rcll
jns
and
xchg
insl
aaa
stos
stos
popf
in
xor
push
or
sbb
add
xor
mov
insl
or
call
clc
aaa
jl
sbb
sbb
push
mov
pop
fimull
or
lods
and
or
mov
sbb
or
rorl
loope
loope
mov
divb
loope
clc
stos
aam
xchg
cli
or
sti
in
and
adc
and
add
push
leave
mov
das
test
ss
inc
xchg
into
dec
jmp
les
cld
dec
xchg
lcall
je
sub
add
pop
fildll
cld
scas
cld
aam
pop
in
fisubs
pushf
cmp
sbb
insb
mov
popa
push
lods
pop
inc
je
sbb
loopne
pop
adc
mov
push
add
sbb
pop
inc
or
into
gs
and
loope
cmp
dec
xor
pop
pop
xchg
and
in
xchg
jecxz
xorl
add
fildll
fisttps
pop
and
xor
xor
das
sbb
push
movsb
pop
sbb
cwtd
and
pop
and
lcall
mov
fmuls
jge
lock
cld
jg
sub
mov
push
push
jp
dec
dec
cmpsl
inc
roll
nop
mov
adc
ljmp
lock
gs
outsl
push
popf
sbb
std
mov
lods
mov
xor
invd
or
loope
movsl
rolb
lcall
pop
lea
sbb
inc
cli
pop
push
or
nop
pop
cmpsb
jle
sbb
push
outsl
hlt
jb
lcall
imul
xchg
sub
mov
sub
or
mov
loopne
mov
jl
dec
movsl
jg
or
push
xchg
lods
mov
and
inc
mov
ficomps
in
adc
mov
adcb
add
stos
int3
inc
aas
enter
mov
dec
std
sbb
push
inc
jne
pop
dec
jo
adc
int3
or
data16
je
mov
ss
cmpsb
xor
je
inc
inc
mov
cltd
in
cmpsb
dec
adc
pop
fisttps
xlat
jae
jp
cmp
dec
and
pop
js
cmp
push
jns
aad
pop
jecxz
cmpsb
push
mov
flds
or
jo
fidivl
mov
sub
xlat
sbb
sbb
inc
lea
lahf
aaa
adc
sub
loop
fwait
pop
add
data16
sbb
fcompl
jnp
icebp
jbe
jmp
scas
mov
sub
insb
mov
test
lock
roll
jno
adc
subps
mov
ret
and
xchg
fsubrl
insb
xor
nopl
out
pop
pop
adc
sarl
sub
rcrl
in
add
daa
xor
lods
jmp
imul
sbb
int
xlat
outsb
inc
pop
aam
pop
adc
xchg
dec
cmp
pop
sub
scas
or
ja
mov
xor
pop
imul
out
adc
cmc
sbb
xor
sahf
mov
mov
iret
in
cmp
jmp
fdivl
pop
jb
out
nop
loop
les
mov
jo
repnz
pop
mov
repz
aaa
mov
sbbl
rcrb
cmp
sub
aaa
mov
xchg
andb
and
mov
adc
mov
or
test
insl
jne
adc
cmc
out
cmp
cmp
lea
fdivl
je
mov
xor
mov
pop
jb
mov
mov
sbb
out
andb
fisubs
imul
xchg
add
inc
mov
lcall
jge
push
popa
pusha
mov
out
add
push
sahf
shl
sahf
cmp
jnp
lds
mov
popf
mov
cmp
dec
or
pop
or
enter
inc
mov
inc
adcl
hlt
dec
xor
or
add
dec
enter
mov
mov
push
fistps
movsb
sbb
mov
cmp
mov
or
and
sub
sbb
inc
inc
push
mov
popa
stc
inc
or
cwtl
enter
mov
sbb
or
mov
xchg
push
shlb
shrl
mov
das
hlt
pusha
and
adc
and
inc
add
adc
push
cmp
sub
repnz
fiaddl
xchg
je
adc
xor
and
rol
push
xor
push
push
mov
icebp
xchg
sub
xor
push
out
add
sahf
fisubrl
rcrb
dec
sub
add
roll
inc
dec
push
fisubl
pop
pop
push
jge
fadds
or
pop
in
cltd
fistpl
or
sbb
mov
fistpll
repz
sbb
xor
aas
aaa
add
jb
insb
jmp
pop
add
add
jo
add
adc
popf
mov
out
loope
add
mov
inc
jbe
sub
mov
pop
cli
and
lods
mov
movsb
insb
mov
jecxz
sub
xlat
hlt
push
jg
jb
roll
iret
cld
test
repz
cmpb
fisttpl
adc
and
cltd
dec
cwtl
shlb
jns
mov
adc
call
gs
adc
imul
or
mov
idiv
adc
mov
outsl
dec
fists
pop
xor
adc
sub
mov
push
shlb
mov
sub
popl
dec
cld
lahf
pop
in
add
mov
push
bnd
push
sbb
loope
clc
inc
dec
rorb
insl
sbb
jbe
std
xchg
cld
jp
addr16
sub
push
xor
aad
jnp
fbld
mov
adc
movsbl
and
inc
addr16
stc
cmpsb
and
mov
cmpsl
jae
orl
jecxz
jg
scas
jae
and
push
je
das
in
rclb
mov
inc
mov
decb
rcrl
test
cmpsl
rorb
jecxz
or
dec
sub
push
gs
push
fs
adc
sub
sti
lods
fiaddl
lret
enter
cltd
subl
jne
out
push
mov
lds
mov
loopne
dec
xchg
sbb
movsb
and
mov
mov
push
add
shrb
ss
test
pop
addl
hlt
inc
test
dec
jl
aaa
clc
ret
mov
push
mov
and
les
fildll
push
inc
pusha
repz
mov
mov
in
dec
fstl
insl
sub
das
ss
mov
push
sub
outsb
pop
andb
gs
in
or
neg
adc
mov
push
inc
rcl
sub
pop
mov
je
outsl
cmpl
and
mov
es
in
lock
mov
add
pop
sub
jno
scas
cmp
xor
decb
or
xchg
dec
jp
push
fldl
dec
out
push
dec
std
lock
arpl
add
ljmp
push
xchg
dec
mov
dec
jbe
jmp
pop
adc
les
xlat
mov
lods
aam
sub
out
cld
push
inc
jmp
in
lock
sub
movsb
push
pushf
sbb
push
or
scas
mov
push
call
hlt
not
and
push
add
dec
cmp
rorb
dec
lcall
add
mov
cmp
rcll
pop
pop
jb
lds
enter
fstl
jno
out
loope
jne
loopne
xchg
jmp
xor
and
dec
int
loopne
fmuls
xor
fsubs
or
outsb
or
jge
rclb
cmp
aaa
clc
add
xchg
sub
test
inc
xlat
pop
mov
call
push
mov
pop
xor
dec
jge
add
call
cld
push
fisubrs
pop
dec
loopne
cld
and
push
lock
xor
or
adc
loopne
sbb
add
or
push
jmp
xchg
loopne
mov
fldenv
or
fmull
pop
jne
mov
and
fildll
das
mov
imul
adc
add
dec
hlt
pop
mov
lods
xor
xchg
fisttpl
jns
sahf
sbb
jl
dec
idiv
inc
mov
add
sar
insb
popa
mov
mov
lock
orl
addb
cmp
adc
dec
or
cmp
aas
shrl
mov
mov
xchg
fwait
mov
rorb
push
dec
lock
andl
outsb
lock
ds
loopne
and
stos
xor
movsl
fisubrl
lcall
push
lods
movsl
or
push
xchg
adc
aam
pop
xor
std
adc
inc
add
js
pop
je
pop
cmp
nop
aas
mov
push
sbb
mov
cwtl
sub
push
test
xchg
cltd
pop
sbb
inc
filds
push
fcmovb
repz
outsb
stos
adc
jns
pop
sbb
and
pop
jne
and
dec
dec
dec
roll
pop
xor
daa
shrb
je
xchg
or
outsb
push
outsl
outsl
pop
out
push
mov
lock
cltd
add
inc
popa
cld
test
lea
outsl
arpl
pop
daa
into
sbb
add
mov
jns
lock
mov
ja
stos
jae
push
xchg
sbb
pop
xor
pushf
pop
inc
adc
sarb
mov
push
push
dec
adc
jg
js
add
xchg
je
mov
bound
in
xchg
and
lds
insl
jnp
jns
jecxz
test
pop
and
mov
cmp
clc
pop
int3
cmpsl
and
decl
add
enter
mov
shl
aam
ja
adc
cld
jg
jg
xor
or
stos
sbb
int
cmp
out
mov
push
repnz
cmp
das
scas
js
sbb
cmp
scas
mov
mov
push
or
jmp
mov
mov
mov
jne
mov
pop
jno
jl
xlat
pop
add
out
pop
jo
push
xchg
pop
outsl
ffreep
fwait
or
lods
aaa
rclb
jbe
orb
pop
jp
mov
mov
scas
sbb
push
add
dec
pop
std
push
adc
sahf
movsl
pusha
ja
pop
inc
inc
aaa
es
mov
or
xchg
inc
adc
popa
lret
cmp
out
out
mov
test
push
stos
scas
outsb
xchg
stos
aad
outsl
cmp
fdivs
jo
shll
ss
out
lock
test
push
ret
push
out
mov
jg
rcll
pop
or
mov
iret
add
cmpsb
pop
push
mov
mov
inc
cmp
xchg
aaa
mov
mov
push
add
or
mov
je
int3
lret
or
and
mov
outsl
inc
ret
jg
shlb
ja
mov
movsb
dec
mov
jl
jg
leave
lds
mov
test
out
clc
popa
shrb
mov
jmp
daa
mov
mov
out
sbb
jp
push
mov
stc
mov
mov
cmp
xor
sbb
nop
pop
push
cmp
loopne
dec
cmp
dec
xchg
imul
cmp
test
outsl
sub
and
mov
out
ret
or
cmp
xor
sub
mov
dec
sub
mov
adc
push
loope
mov
xor
mov
push
loopne
arpl
cmp
and
adc
dec
mov
lods
dec
mov
repnz
mov
xor
call
test
ljmp
js
mov
and
xchg
pop
pop
inc
in
push
sub
clc
dec
decb
cmc
scas
xlat
adc
push
filds
xor
xor
xorl
or
faddl
rcrb
xor
sti
pushf
or
shrl
or
push
dec
cli
mov
inc
mov
xor
stos
mov
decb
loope
push
lea
jl
js
push
outsl
dec
insb
cmp
mov
sub
arpl
inc
int3
and
or
push
xor
mov
sbb
sbb
mov
inc
rclb
ljmp
mov
andl
xor
inc
jnp
or
push
mov
add
xor
jg
or
ret
loopne
pop
pop
into
add
mov
ret
or
and
sub
adc
stos
test
icebp
dec
mov
arpl
lret
push
and
and
sub
cmp
movsl
pushl
jge
dec
add
xor
xchg
push
fistpll
jbe
jns
sbb
das
push
push
xchg
iret
sbb
jmp
pop
cltd
sub
xor
call
pop
andb
pop
xchg
adc
cmp
insb
aad
add
mov
adc
cmpb
sbb
inc
fsubrl
cmpsl
sub
outsl
push
jp
mov
movsb
lret
mov
jecxz
add
inc
mov
cmp
out
out
jmp
pop
movsl
cld
fcomi
shrl
mov
cmp
jmp
jae
add
add
fadd
ud2
je
shll
add
call
adc
adc
mov
or
in
arpl
mov
fwait
aas
cwtl
xor
aam
pop
pop
js
inc
cli
xor
mov
or
jge
xchg
dec
or
in
or
inc
outsl
in
push
jb
add
shlb
or
cli
push
and
mov
add
dec
adc
cmp
push
mov
push
sbb
lods
loope
jge
pop
mov
enter
inc
fsubrl
test
jnp
fs
push
fisubl
pop
dec
mov
das
adc
js
in
cmp
repnz
dec
in
les
ret
mov
inc
pop
inc
add
das
outsl
or
cli
ja
mov
fldt
lock
adc
and
cld
mov
ret
lret
jg
test
pusha
xchg
cwtl
cmp
dec
out
decl
or
loop
test
xor
or
mov
and
shr
and
pop
mov
inc
ljmp
mov
sbb
sti
sbb
cmp
aaa
lock
aas
xor
add
xor
daa
imul
add
or
fidivrl
movl
inc
outsb
hlt
sbb
leave
sbb
filds
scas
dec
adc
sbb
sbb
inc
je
mov
sar
shlb
jnp
stos
mov
mov
push
push
outsl
in
jne
push
cmc
xchg
adc
aam
scas
and
js
lock
mov
mov
mov
add
stc
mov
add
les
fstps
dec
sbb
adc
mov
fcompl
repz
push
sub
data16
mov
xor
lock
mov
xor
push
mov
add
pop
or
out
test
pop
pop
pop
sti
fucom
dec
or
jo
push
adcb
inc
sbb
jnp,pt
xchg
dec
add
add
fldenv
jge
arpl
adc
in
adc
decl
or
xchg
loopne
out
test
pop
dec
out
lods
sub
fsubs
out
sub
sub
add
mov
fcom
rcrl
in
and
movsb
rolb
xor
ret
insl
sbb
into
xor
or
xchg
adcb
inc
popa
inc
xor
xchg
mov
loopne
xchg
sub
pop
mull
add
add
aad
mov
call
repnz
xchg
xor
js
cmp
jae
and
lock
fstpt
mov
and
je
mov
sbb
in
pop
pop
ja
insb
aas
and
jp
cld
cmp
fidivs
pusha
test
hlt
sbb
mov
adc
xor
pop
push
xor
shrl
add
jle
fcomps
repz
sbb
mov
pop
mov
leave
push
cmp
fbstp
mov
cmp
lcall
jbe
mov
xchg
or
sub
test
js
shlb
dec
cmp
add
insl
cli
pop
je
icebp
push
cmp
jbe
shrl
fisttpll
and
sub
inc
push
rcl
insl
xchg
adc
adc
mov
inc
add
push
cmp
jnp
loop
adc
ret
xchg
xor
sbb
fisttps
js
fadds
inc
in
push
out
clc
xchg
sbb
dec
dec
lock
xchg
dec
sbb
and
loopne
sub
cmp
sbb
imul
xchg
ss
fs
call
data16
adc
adc
pop
mov
pop
mov
arpl
fstpl
dec
mov
mov
xchg
sbb
xlat
xchg
scas
xorb
mov
push
mov
sbb
cmp
sbb
cltd
mov
xchg
push
xchg
movl
and
out
sub
cmpsb
or
mov
cmp
xor
lea
dec
lods
enter
inc
dec
push
sarb
aas
repz
sti
push
decl
dec
flds
stc
jb
mov
xchg
xchg
aaa
add
mov
cmp
loope
mov
movsl
inc
pop
adc
mov
test
sbbl
sarl
or
push
lea
lcall
adc
div
das
xor
aad
add
cmc
jp
or
mov
sbb
addr16
push
fwait
inc
dec
inc
ret
push
add
add
ds
mov
or
jge,pt
stos
mov
ret
push
add
aad
or
mov
mov
fisttpll
xor
pop
inc
pop
push
jbe
jp
push
push
out
sub
daa
shlb
int
insl
daa
mov
and
into
add
ss
cli
imul
lret
sahf
out
adc
aad
inc
mov
in
jne
fstpt
testb
jge
or
fsubrl
pop
xor
push
sbb
push
sbb
aam
popf
or
inc
xor
cmpsb
icebp
movsb
lcall
mov
pop
and
dec
lretw
int3
enter
in
cli
js
dec
fbstp
ret
mov
jo
int
pop
call
jb
jecxz
push
stos
sbb
jmp
mov
sbb
and
jb
fidivrl
sar
pop
push
cmp
jg
jecxz
inc
rorb
scas
push
xor
mov
inc
lret
nop
mov
lock
xor
test
in
pushf
jno
mov
mov
inc
sub
loopne
cwtl
add
gs
lock
inc
pushf
dec
xor
lods
subl
add
dec
jne
std
add
xlat
mov
mov
cli
mov
dec
rcrb
pop
dec
dec
pop
add
in
fistl
add
int3
pop
int3
sbb
push
testl
clc
jge
sub
add
pop
mov
dec
pop
inc
pop
ret
or
mov
cmc
push
add
les
mov
push
mov
xor
sub
movsb
inc
test
popa
cwtl
rorb
inc
test
rclb
ret
adc
jae
aaa
popa
leave
sbb
ss
test
lods
jl
or
or
jne
sub
push
repnz
pop
dec
cmp
dec
add
sahf
aad
out
in
clc
out
aad
gs
adc
int
adc
stos
test
data16
pop
lods
pushf
adc
mov
cmp
mov
pop
insb
xchg
rol
scas
push
adc
int
popf
push
rclb
push
in
sbb
jno
push
lahf
popl
shr
jl
mov
icebp
mov
inc
inc
in
xor
aaa
mov
push
aad
push
clc
aaa
pop
in
cwtl
mov
pop
faddl
mov
loop
push
xchg
xchg
inc
aam
pop
sub
or
es
mov
pop
jge
sbb
inc
fisubl
inc
dec
int3
and
imul
sbb
push
mov
jnp
xlat
push
pop
dec
sub
mov
sbb
adc
add
jnp
jl,pn
loop
adcl
mov
push
jno
cmp
jg
pop
cli
outsb
into
insb
in
sbb
or
inc
mov
std
mov
push
fwait
ret
in
lods
cmp
and
cmpl
in
test
sbb
lods
sbb
test
aad
lds
pop
mov
mov
shrb
jno
add
bound
push
aas
test
lcall
loopne
mov
je
iret
cmp
arpl
or
adc
ja
mov
pop
inc
loopne
push
mov
pop
pop
mov
stos
mov
jl
mov
sbb
pop
clc
cs
xchg
pop
push
mov
loopne
sub
mov
js
ja
jg
and
sub
addl
adc
push
out
roll
imul
cli
das
fidivrl
inc
je
or
std
add
pushl
sar
adc
nop
and
sbb
cmp
jmp
fistpll
fbld
inc
outsb
fs
adc
jmp
movhps
roll
push
arpl
in
fistps
xchg
jmp
add
mov
mov
mov
inc
and
roll
clc
mov
into
addr16
sbb
sbb
adc
es
stos
call
push
mov
adc
and
mov
decl
adc
and
ja
test
jno
pop
add
cltd
pop
pop
adc
push
mov
dec
inc
sahf
outsl
aad
das
insl
cmpsl
sbb
mov
sbb
sbb
push
repz
test
enter
push
in
adc
fildl
decb
lods
cmpsl
js
xchg
xor
xchg
clc
sub
mov
and
shrl
std
bound
loopne
cmpsl
in
mov
push
incl
fnstsw
push
cmpsb
gs
aad
xchg
fcompl
xlat
mov
sbb
pop
jae
cmpsl
or
inc
or
sbb
shl
lods
and
jne
mov
hlt
fildll
adc
or
mov
pushf
xchg
lods
outsl
jp
fisttps
xchg
adc
mov
or
popf
xchg
jle
jg
mov
adc
ss
or
cld
call
daa
rcr
or
shlb
jmp
pop
xchg
cmp
gs
mov
dec
adc
setb
clc
decl
mov
insl
inc
bound
pop
ds
mov
add
mov
and
and
loopne
mov
into
sub
cmc
inc
fnsave
add
cld
sub
arpl
xchg
adc
mov
xor
mov
mov
lea
push
popa
fstp
mov
add
lock
push
dec
cmp
hlt
or
xor
test
nop
cli
sbbl
clc
jmp
mov
push
mov
push
orb
mov
inc
cmc
mov
and
pusha
xchg
add
lods
mov
mov
push
mov
out
add
sbb
subb
int3
push
rolb
cs
pop
push
aaa
rolb
test
jo
cmp
mov
rcl
or
inc
mov
sar
call
cmp
push
cmpsl
and
jl
ljmp
inc
pushf
cmpsl
jo
test
es
lea
cs
jge
and
leave
loopne
outsl
jno
sbb
ret
ss
lret
daa
push
es
lret
mov
push
lock
pop
outsb
sbb
inc
sbb
ret
xchg
and
roll
aaa
and
test
insb
push
push
pop
xchg
add
pop
inc
outsl
sbb
subb
adc
cltd
popa
icebp
sbb
aas
inc
popf
jae
fistpll
loopne
jo
inc
and
push
fstpl
pop
mov
fidivl
sbb
jg
outsl
inc
clc
mov
adc
adc
fists
pusha
mov
cwtl
insl
sbbl
adc
sarl
popa
pop
and
mov
dec
add
add
sub
inc
sbb
xorb
mov
ds
xor
dec
jl
dec
xlat
adc
mov
nop
shll
push
or
mov
decl
movl
leave
xchg
dec
xor
insb
cmpsl
pusha
daa
bound
pop
inc
insl
mov
scas
ret
test
test
lret
inc
xor
loop
jg
filds
lods
idivl
push
add
addr16
or
mov
cmc
movsl
pop
es
in
inc
outsl
dec
mov
stos
addr16
fldl
mov
lcall
dec
lcall
cmc
adc
imul
mov
mov
das
cmp
adc
ret
movsb
fildl
mov
stos
lock
jnp
mov
add
push
sbb
dec
fstps
and
xor
mov
iret
adc
and
movsb
arpl
sbb
or
mov
add
pop
inc
sbb
sbb
adc
mov
testl
or
fsubs
loopne
or
je
adc
xor
fldenv
les
sub
inc
jnp
dec
push
mov
mov
sub
aam
call
aam
repz
add
and
sahf
in
and
add
push
lea
sti
jae
add
xchg
sbb
ss
cmp
or
rcll
xchg
add
mov
out
loopne
fcomi
mov
xor
mov
insl
mov
in
xor
int
and
dec
mov
pop
jne
pop
lods
and
cmp
divl
pop
shrb
shrl
xor
jne
push
jb
jno
xor
lahf
inc
mov
mov
mov
or
repnz
lock
fs
add
sub
ficompl
out
and
xor
mov
jg
test
xchg
nop
dec
movsl
pop
mov
pop
andl
in
in
call
adc
pop
jge
popf
and
or
or
dec
pushf
jns
or
sbb
adc
subl
xchg
xchg
sub
and
mov
scas
sub
lock
sub
cmp
rorb
dec
push
jge
pop
add
cwtl
jp
xor
adc
dec
iret
xchg
addb
leave
or
stc
adc
sbb
add
push
mov
add
add
xchg
xchg
adc
inc
dec
in
dec
ret
scas
lods
fwait
jecxz
push
cmp
mov
push
lea
push
cmp
push
push
test
jge
enter
dec
sub
fstpl
pop
pop
sub
outsb
jmp
or
ret
jae
aam
out
fstl
push
adc
fdivs
ljmp
pop
push
sbb
aam
sbb
add
lcall
sbb
cmp
ret
mov
rorl
test
or
xchg
cmp
in
dec
lahf
cmp
push
mov
fisubl
in
cwtl
fsubs
xor
rclb
in
dec
xor
call
pop
subl
nop
shll
cltd
ljmp
ljmp
push
and
rolb
fptan
adc
pop
add
rcll
mov
cmp
ret
int3
add
call
mov
aam
pop
adcl
mov
add
iret
mov
insb
popa
sbbb
fs
push
mov
mov
and
neg
pop
pop
sbb
ret
or
loopne
mov
adc
fisttpll
out
add
mov
pop
nop
or
add
cwtl
fbld
pop
or
ret
scas
loope
or
test
stos
lea
aam
push
add
and
mov
add
xor
jnp
jo
jae
lret
dec
ljmp
push
jnp
mov
mov
or
push
pop
adc
cld
add
dec
adc
adc
mov
mov
pusha
aas
dec
lds
scas
xchg
push
xchg
add
lods
pusha
popa
adcl
mov
mov
mov
fsubrl
mov
in
into
dec
andb
scas
xor
sub
sub
xor
fwait
mov
xchg
loopne
loopne
loop
insl
pop
pop
adc
dec
mov
pop
sub
sbb
lret
jo
arpl
jecxz
loopne
push
sub
inc
dec
inc
loope
insb
lock
aam
push
fcom
fistpll
xchg
lock
adc
mov
stos
leave
mov
jmp
divl
add
push
cmp
xor
test
push
xchg
lock
dec
push
loopne
or
cmp
scas
pop
mov
sub
je
push
jmp
test
je
sub
lods
mov
ds
call
fisubrl
jle
test
push
int
inc
icebp
movsl
adc
or
fadd
pop
jbe
push
mov
pop
cmp
aas
or
clc
subl
pop
xor
sbb
pop
xchg
in
daa
test
pop
dec
testl
xor
mov
xchg
dec
ret
dec
stos
inc
mov
lret
push
pop
pusha
dec
lret
lock
loopne
sbb
mov
andb
push
push
push
push
lea
sbb
test
fwait
push
inc
int3
dec
out
xchg
or
movsl
sbb
push
mov
pop
inc
fsub
ror
or
and
nop
or
ds
jne
inc
ja
xchg
fmull
stc
std
fsubs
movsb
xchg
xor
mov
sub
mov
loop
sbb
int
adc
lret
xlat
add
out
ret
xchg
or
cld
dec
dec
popf
xchg
pop
std
pop
jecxz
adc
pop
add
cmp
aas
mov
add
and
and
addr16
test
xchg
lcall
cmpl
xchg
cmpb
add
inc
fisubl
insl
jp
addr16
jge
mov
loopne
ret
jae
mov
jo
mov
jo
or
stos
xlat
cmp
insb
movsb
mov
std
pop
sub
add
lcall
mov
adc
dec
jge
bound
idivb
nop
gs
int3
call
mov
outsl
ss
jl
mov
jb
and
jns
jecxz
aam
pop
jno
and
add
out
push
sbb
mov
and
xchg
je
mov
or
jl
xchg
fldt
fnstcw
adc
add
mov
dec
std
std
mov
sarb
xchg
and
xor
mov
sbb
das
mov
jge
fbstp
jo
bound
xor
in
add
test
jle
cmp
cmpsb
jbe
xlat
shl
les
add
cmp
lods
mov
mov
add
push
sbb
cmpsl
pop
xchg
mov
inc
call
mov
jg
and
inc
jg
and
enter
push
rcrb
addb
sub
out
inc
sub
mov
inc
xchg
xchg
orps
cmp
fadds
in
clc
fdivp
cmp
mov
mov
jb
lods
mov
ljmp
ror
push
pop
in
mov
add
cmp
inc
mov
inc
pop
pop
insl
sub
jl
or
lods
je
les
mov
jecxz
cmp
push
adcb
xchg
icebp
dec
in
scas
add
add
adc
cmp
test
ja
aaa
clc
push
iret
mov
xor
sahf
jae
add
dec
nop
xor
imul
pop
jecxz
xor
dec
cld
push
cmp
jno
fmull
cwtl
aam
mov
cmp
loopne
inc
lret
lock
cmp
pop
lock
scas
inc
or
daa
push
lock
sbb
and
fwait
xor
or
and
and
sbb
dec
dec
das
or
add
or
adc
push
sub
outsl
and
sub
jae
movsb
push
daa
sbb
xor
and
scas
ficompl
jb
mov
mov
push
add
test
cmp
xor
out
aam
jmp
pop
cld
add
fwait
inc
insb
push
xor
adc
add
adc
cld
pop
or
loopne
inc
jo
orb
mov
add
cmp
lds
add
or
sbb
dec
icebp
les
pop
jg
orb
adc
jmp
inc
loope
push
xor
pop
push
adc
pop
call
dec
jbe
jb
ss
int
aas
lock
or
sbb
jo
loop
and
xor
sbb
push
test
or
inc
test
xor
icebp
out
cmp
pop
cmp
ljmp
and
sbb
dec
xor
add
sub
in
fwait
mov
mov
cmp
cld
frstor
jae
add
test
inc
sarl
push
lock
inc
lods
js
std
lret
xchg
dec
mov
adc
fisttpl
ret
data16
mov
cmc
lock
sbb
push
or
mov
out
push
mov
inc
adc
hlt
jle
dec
pop
mov
dec
jnp
fwait
adc
fld1
jns
push
sub
jg
inc
outsl
das
cmp
outsl
pop
bound
inc
insl
mov
mov
mov
or
jle
filds
jns
add
cltd
inc
int3
mov
imul
sti
cmc
call
sbb
mov
xor
decb
cmc
out
cli
mov
xor
and
inc
orb
pop
loopne
mov
iret
cmp
clc
mov
hlt
sbb
call
pop
or
cld
mov
push
mov
or
cli
or
adc
movsl
mov
fwait
adc
ljmp
enter
jle
or
xchg
sub
idiv
lcall
jnp
aad
xchg
subb
push
add
inc
addl
in
lret
les
mov
aam
and
fsubrs
inc
mov
mov
test
cli
imul
aam
and
pop
pusha
sub
xor
arpl
mov
leave
mov
jge
sbb
xor
xchg
test
dec
rcrl
mov
or
fdivr
fmuls
sbb
incb
xor
test
cmp
dec
jbe
jg
ss
es
into
das
push
hlt
jno
cmp
out
stos
inc
jg
insl
cld
call
dec
andb
out
pop
mov
out
jecxz
fisubrs
ds
ror
push
mov
daa
out
dec
mov
xchg
outsl
push
mov
xchg
fdivl
movsb
outsb
leave
outsl
rclb
imul
inc
xor
xlat
pop
mov
add
pop
lods
pop
mov
cmp
mov
ja
int
ret
add
dec
cmc
mov
push
pop
jb
push
daa
mov
imul
test
cmp
mov
pop
sbb
push
movsl
and
out
mov
inc
lcall
icebp
mov
pop
sub
mov
lock
ljmp
lock
add
mov
fstps
xchg
test
xchg
jmp
fists
outsb
outsl
rclb
sub
cmp
xchg
cmp
cld
pop
cmpb
adc
pop
rcrl
xchg
je
decb
dec
or
std
mov
mov
popf
xchg
push
pushf
xor
adc
je
xor
or
andb
xchg
or
xor
cmp
testl
addr16
xor
add
call
inc
and
cltd
mov
aam
jbe
xor
lock
imul
sub
aaa
dec
add
das
mov
add
sbbl
dec
outsl
insb
lock
and
ljmp
cld
jbe
movsb
jl
xlat
pop
movb
dec
jge
adc
pop
scas
movsb
mov
mov
jae
inc
xor
lock
or
enter
jge
ja
pushl
test
adc
adc
jg
andb
dec
shll
dec
push
jns
xor
cli
es
repz
popa
push
ret
xor
xor
outsl
clc
push
or
pop
sbb
push
ficoms
pop
imul
sahf
or
int3
and
cmp
outsb
rolb
aam
es
inc
adcb
roll
in
push
mov
dec
enter
jne
jle
xor
aam
and
mov
lret
dec
sbb
outsb
mov
mov
jl
and
mov
mov
mov
aaa
add
pop
fiadds
pop
or
xchg
cli
fldt
fsubl
lret
fs
push
aad
js
mov
xchg
or
test
sarl
pop
pop
out
adc
dec
add
outsl
jl
mov
cmpsb
mov
into
pop
mov
adc
jbe
repnz
push
popa
mov
dec
or
imul
sub
jo
pop
rol
int3
adc
test
es
sub
inc
pop
pop
mov
and
adc
sbb
jne
cmp
lret
adc
int3
adc
loopne
gs
les
incl
push
xchg
add
outsl
ds
gs
subl
scas
test
in
dec
xor
mov
cmp
addb
xadd
ficomps
aad
or
jnp
ljmp
mov
out
repz
mov
in
inc
mul
inc
je
jne
ret
or
adc
inc
xor
push
inc
xchg
sub
dec
push
adc
imul
push
inc
push
inc
adc
jl
add
and
push
mov
pop
pop
in
popa
xor
aad
cmp
jnp
jmp
test
fisubrl
dec
sbb
inc
pop
lea
call
sbb
stos
rolb
xor
cmp
and
and
mov
or
jno
icebp
dec
inc
es
cmp
inc
daa
and
ret
jmp
sub
dec
push
popa
clc
push
jae
fimull
add
cmp
fnstsw
mov
call
es
cmp
mov
xor
jp
scas
cld
fstpl
int
scas
cmp
ds
dec
mov
dec
inc
xchg
cmp
mov
xchg
shlb
cli
stos
adc
testl
outsl
add
imul
add
outsb
sub
fldenv
adc
sub
sbb
xor
mov
call
add
pop
pop
lods
insb
ficompl
mov
inc
psrlq
inc
sub
test
vmovntps
mov
cli
repnz
dec
lret
das
mov
mulb
lock
pop
sub
in
xchg
stos
cwtl
inc
adc
lret
dec
inc
or
lret
cld
and
add
push
xchg
imul
out
push
cmpsb
pop
cmp
and
iret
sub
bnd
loop
mov
add
inc
das
add
push
xor
ljmp
pop
jo
popa
sub
test
jnp
out
sbb
adc
lret
ss
mov
aad
test
outsb
fnsave
loopne
push
aad
mov
fstpl
or
cmpsl
mov
mov
sbbb
cmp
and
cmpsb
mov
xchg
xchg
out
add
mov
jno
dec
addps
pusha
mov
mov
inc
lock
and
dec
enter
stos
dec
aas
stos
add
lock
sbb
ds
shll
pop
and
pop
jmp
sahf
clc
xor
bswap
jnp
out
imul
inc
xor
xchg
adc
push
loop
push
ror
xchg
cmp
push
mov
adc
rcrb
outsl
hlt
mov
ss
pusha
mov
mov
push
jns
push
push
dec
mov
jecxz
jnp
add
mov
or
mov
cmp
and
leave
aas
inc
push
subl
in
shll
shll
test
adc
push
mov
fisttps
mov
fldt
push
inc
arpl
ficompl
adc
bound
mov
and
or
nopl
test
mov
jg
movsb
push
sti
push
or
sbb
mov
push
or
push
inc
push
enter
out
lds
jecxz
adcb
dec
add
ja
sub
sbb
push
cmpsb
mov
sub
mov
fsubrl
adc
push
sti
stos
in
ljmp
inc
scas
adc
lea
out
cmp
xor
lds
cmpsb
fisubrl
mov
mov
adc
nop
adc
push
mov
int3
sub
mov
loop
xor
out
lock
sub
jbe
push
or
lcall
add
je
outsl
mov
je
addl
cmp
push
ja
sbb
inc
mov
loopne
pop
test
pop
fmuls
sar
ljmp
int
lods
aas
fisubrl
push
mov
shl
fadds
xchg
cld
sbb
flds
out
inc
inc
cmpb
stos
or
call
add
hlt
fs
sahf
or
lcall
loopne
dec
add
push
stc
loopne
sbb
add
mov
movaps
cmc
ret
or
sub
pop
inc
lds
xor
aaa
adc
imul
mov
or
push
pop
nop
pop
lcall
xlat
stos
or
or
ljmp
ljmp
and
ljmp
lds
mov
mov
adc
mov
outsl
hlt
cmpl
push
xor
dec
mov
pushf
push
fmuls
loope
outsb
insl
shll
pop
fcmovbe
sub
cmp
incb
xchg
mov
ss
icebp
pop
shll
sbbb
and
sub
mov
icebp
mov
mov
imul
into
lock
xchg
ret
call
push
cmp
pushf
xchg
sahf
xchg
mov
sub
aaa
rcrl
and
cmp
or
adc
das
adc
std
aad
dec
push
and
sahf
fdivl
outsl
mov
dec
into
pop
jp
pop
jl
sub
push
or
test
sbb
push
js
mov
je
mov
jb
fisubl
sbb
jecxz
dec
ret
jmp
inc
push
pop
pop
dec
sub
scas
decb
push
mov
pop
orb
mov
pop
inc
jb
inc
insl
push
mov
adc
jecxz
pop
lret
test
and
lea
aam
fwait
add
gs
icebp
jne
js
es
lea
cli
insb
pushl
add
jl
lahf
insb
test
and
sub
inc
imul
xchg
add
jecxz
xchg
scas
push
inc
fdivrs
sbb
test
stos
icebp
fcoms
pop
pusha
cmpsb
ja
cli
jmp
sbb
pop
xor
lock
sbb
test
insl
jmp
pushf
sub
push
leave
fnsave
lods
out
cli
das
movsl
sbb
and
int3
push
ljmp
lret
jno
dec
fs
incb
stc
pushf
cmp
lods
pop
fdivs
push
pop
negl
dec
add
dec
hlt
jo
cmc
jge
repnz
push
sbb
ljmp
mov
fbstp
xchg
pop
pop
test
push
jecxz
out
movsb
popf
outsb
imul
dec
mov
push
pop
fidivrs
imul
fucomip
idivb
sbb
lahf
push
and
pop
shrl
inc
xor
xlat
movsl
sub
insl
ja
sbb
xor
das
jl
mov
lods
cmp
ret
xor
jg
jl
fwait
xor
orb
pop
adc
mov
test
add
je
cmp
lcall
sbb
xor
pop
jge
cmp
addl
rcll
jne
and
fildl
shr
rcl
dec
mov
pop
xor
push
hlt
xor
inc
mov
sub
inc
adc
mov
hlt
adc
and
dec
xchg
inc
loop
loope
bound
dec
negb
psraw
mov
dec
fimull
shll
pop
inc
dec
cmpsl
dec
cli
and
adc
rorl
aam
push
add
mov
mov
addl
mov
adc
mov
pop
movsl
repz
rclb
and
les
mov
data16
mov
cmp
test
sbb
xor
aad
xor
inc
mov
dec
and
inc
push
cmp
mov
enter
mov
xor
lods
shrl
add
mov
xor
clc
cmp
dec
and
into
add
push
mov
ficomps
nop
sbb
inc
xchg
shrl
adc
es
lea
adcb
add
add
clc
xchg
add
xor
dec
sub
leave
and
xchg
push
orb
or
loope
mov
andl
or
stos
hlt
in
fucom
daa
push
cmp
rcr
pop
or
dec
jo
clc
sbb
aaa
lds
mov
stos
movsl
sub
pop
stos
sbb
fprem1
push
nop
sbb
add
leave
jg
mov
or
or
ret
lods
sbb
sbb
cwtl
andl
xchg
dec
pop
movsb
pop
cmp
push
push
gs
call
das
js
or
pop
jecxz
push
push
outsl
adc
in
dec
or
in
jns
xor
daa
stos
pop
mov
cmp
lcall
adc
inc
inc
mov
dec
cld
cld
push
xchg
mov
jle
jecxz
xor
push
or
inc
pop
mov
xor
cmp
mov
mov
xchg
int3
jns
setns
sbb
inc
cmp
jg
fldenv
mov
xchg
outsl
popa
cmp
les
add
iret
cmp
fisubrl
cs
mov
or
lea
xchg
mov
mov
jbe
xchg
cmpb
xor
mov
add
stc
cs
loop
mov
scas
add
or
mov
mov
mov
into
hlt
shr
sub
sti
add
das
mov
lcall
aam
mov
fmull
xchg
stos
rcrl
push
jle
xchg
bound
cmpsl
pushf
insl
ret
scas
loop
mov
mov
xchg
jb
mov
xor
sub
cs
movsb
mov
imul
addr16
push
xlat
cmpb
clc
das
adc
sub
jo
sbb
repz
lods
push
sub
and
mov
insb
cmpsl
adc
cmp
xor
jl
pop
dec
int
jmp
outsl
test
test
add
xor
dec
insl
pop
and
ja
dec
aaa
sbb
loopne
pop
out
call
sti
mov
ljmp
daa
mov
mov
movb
push
mov
rolw
xchg
mov
scas
push
addb
aad
loopne
cmp
or
decl
mov
scas
and
inc
ret
xchg
test
fmull
ficoms
adc
push
incb
xchg
clc
fistl
dec
into
push
inc
pop
lods
xchg
rorl
jnp
adc
inc
call
stos
dec
adc
fcomps
test
out
adc
in
jg
fcmovnb
lds
push
jmp
pop
pusha
add
or
les
cwtl
hlt
sub
outsb
insb
js
test
popf
and
mov
sbb
lret
pop
dec
or
sub
pop
jb
loope
imulb
push
je
es
cmpsb
cmp
sub
loope
jg
lods
arpl
inc
stc
dec
pusha
xor
cmc
xor
cli
cmp
jecxz
movsl
mov
mov
or
jecxz
pop
cltd
test
jbe
pop
inc
popa
pop
mov
repz
fcompl
cltd
push
pop
roll
pop
aam
jecxz
inc
mov
push
paddsw
cmp
cmp
push
mov
mov
dec
sub
fwait
popa
inc
xchg
insb
or
lods
loopne
adc
leave
add
lods
cmpsl
mov
loope
xor
inc
ja
shlb
daa
dec
lods
add
mov
lock
sar
ret
repnz
cwtl
and
pop
mov
inc
cmpsb
outsb
xor
repz
sbb
jecxz
adc
rcrb
outsl
or
xsha256
cmpsb
push
xor
pop
enter
lods
fwait
test
in
adc
push
popa
mov
jle
test
add
jbe
push
sub
out
sub
arpl
cmp
or
fcomp
mov
in
enter
xor
sub
das
das
js
mov
dec
mov
mov
nop
adc
pop
loop
mov
push
push
inc
sahf
add
call
dec
pop
push
stos
add
inc
subb
xchg
inc
mov
leave
or
xor
bound
adc
xor
push
mov
inc
stos
inc
ret
push
jle
add
pop
sub
or
pop
cmpl
subb
orb
cmpsb
fildl
pop
add
push
jmp
jno
les
mov
ds
inc
pop
js
popa
imul
xchg
ds
mov
mov
rolb
enter
sbb
mov
stos
scas
dec
mov
imul
jb
orl
inc
out
lahf
xor
or
insb
pop
sub
rcll
inc
ds
pop
add
scas
sbb
or
jae
sub
fisttps
aas
imul
iret
aaa
enter
mov
popf
testb
mov
push
cmp
outsl
inc
jbe
loopne
adc
jb
cmc
sbb
mov
frstor
mov
stos
cmp
mov
cmp
dec
sub
mov
into
jno
sbb
ficoml
inc
adc
int3
lds
mov
out
rolb
inc
sbb
push
add
addr16
in
jbe
cmpl
lock
push
ret
sub
or
pop
mov
popa
shrb
jbe
jmp
xchg
or
mov
xor
rcll
mov
mov
or
push
sub
mov
rorl
and
and
int3
mov
sub
mov
mov
iret
sub
pop
js
dec
inc
push
in
xchg
and
fcoms
inc
dec
fistpll
outsl
lods
adc
pop
iret
int3
dec
cli
loop
daa
cmp
and
and
jle
fnstsw
sub
pop
cmp
push
loopne
mov
mov
es
out
or
push
jo
and
fwait
aas
shrb
push
int
push
mov
dec
xchg
xchg
pusha
lea
push
sbb
inc
and
or
jp
es
shrl
cmp
push
pop
orl
jne
xlat
dec
sbb
clc
call
call
dec
and
xchg
lods
add
nop
xor
add
clc
sarl
jno
inc
add
jp
mov
cmpb
mov
and
sbbb
lea
pop
enter
cmp
es
pop
xor
mov
jne
fwait
cmp
sub
cmp
sbb
repnz
dec
mov
sbb
and
je
xor
loop
subb
xchg
cmp
ljmp
gs
aam
jae
aaa
enter
mov
fs
sub
fcompl
and
insb
imul
and
xlat
shll
outsb
fucomip
outsb
jge
mov
pop
leave
add
jge
xor
ret
add
les
or
inc
loope
cmp
jle
add
movsb
aam
add
sbb
stos
adc
xchg
daa
add
jo
lods
rcrl
sbb
jge
cwtl
jl
call
push
loope
inc
pusha
mov
loope
popa
add
push
testl
sahf
pusha
mov
test
sbb
or
enter
cmp
and
cmc
mov
loop
popf
ret
mov
or
decl
sbb
jne
mulb
sbb
out
fbld
icebp
rorb
test
outsb
in
push
gs
ret
or
sub
inc
pop
shlb
sahf
ret
dec
cwtl
lods
add
xchg
imul
xor
inc
rolb
sub
adc
xor
mov
push
cwtl
les
cmpsl
aam
shl
ret
add
push
test
push
andl
pushf
sbb
inc
insb
push
cmp
and
mov
fimull
je
out
jl
test
push
aaa
test
rolb
push
sbb
and
shr
aas
jmp
int3
sarb
jbe
arpl
sti
sbb
jge
iret
inc
or
push
mov
adc
mov
add
test
sbb
add
lods
xor
insb
inc
insb
inc
rorl
sbb
test
popa
cmp
add
inc
dec
lret
call
cs
test
add
fidivrl
or
add
adc
sub
mov
fcoms
scas
inc
cmp
rcll
mov
add
lcall
rcrl
sbb
pop
mov
sbb
js
pop
jl
lea
adc
incb
jne
stc
enter
push
mov
push
push
cmp
push
mov
pusha
sub
adc
dec
dec
xchg
lcall
mov
cwtl
sbb
pusha
pop
lock
ret
in
cs
push
iret
pop
add
xor
icebp
outsl
aaa
jbe
sbb
add
adc
ljmp
fld
and
dec
mov
push
sbb
out
push
push
movsb
inc
xchg
imul
xchg
adc
fsubp
adc
cmp
or
packssdw
daa
inc
push
nop
andl
mov
fisttpl
mov
mov
or
push
xchg
inc
add
push
outsl
outsb
loop
inc
inc
aad
add
testl
cmpsb
iret
subb
rcrl
in
mov
xchg
cmp
mov
cmp
sub
dec
add
in
cmp
cmc
das
std
push
push
aas
lahf
cmpsl
pop
push
jmp
adc
pushl
shll
dec
rep
mov
dec
sub
push
mov
shl
sbb
outsl
decl
sbbb
lret
dec
test
add
inc
loope
add
js
inc
lea
fs
fnstsw
divb
xor
adc
frstor
add
repz
incl
je
add
ja
addr16
xchg
push
mov
sahf
shl
inc
mov
je
call
call
jo
mov
inc
xor
mov
movsb
lds
movsl
pop
and
add
mov
sbb
xchg
mov
mov
and
leave
sbbb
test
sub
push
mov
sbb
and
fcmovnu
lds
fistpl
or
out
sbb
dec
add
idivl
jbe
mov
pop
fcompl
add
mov
cmp
mov
out
inc
fisubl
xlat
fnstenv
icebp
adc
xchg
je
outsl
mov
lock
test
push
add
push
mov
cmpsb
sub
push
lock
mov
scas
cmp
aaa
xchg
xorb
andl
mov
fldenv
adc
pop
xchg
or
adc
lret
pop
xchg
mov
add
push
fldl
rorl
or
push
std
adc
jg
mov
pop
add
sbb
sbb
dec
lahf
std
or
cmp
test
mov
jecxz
mov
mov
mov
call
repz
or
add
mov
add
lods
andb
mov
pop
cmp
rcr
icebp
fists
jnp
shl
inc
cs
lcall
lods
test
das
xchg
or
movsb
adc
or
hlt
cmp
or
add
pop
popa
inc
adc
loope
push
insl
mov
sbb
incb
add
cmpsb
or
or
push
mov
inc
xor
inc
lds
cmc
and
xor
mov
jns
inc
dec
pop
pusha
cmp
mov
shll
ds
inc
sbb
push
xchg
pop
cmp
popl
inc
add
rcrl
dec
xor
push
das
loopne
in
cmp
cs
je
sub
pop
xchg
call
xor
inc
cmp
xchg
imul
mov
pop
test
push
ret
fldl
loop
jl
shrl
aaa
shrb
pop
insl
mov
insl
ds
lea
mov
pop
xor
mov
outsl
ffreep
inc
insl
cmp
mov
and
ss
outsl
xchg
repz
cmp
add
adc
sub
aaa
mov
imul
enter
adc
dec
mov
mov
mov
jmp
add
or
cmovl
jg
jnp
sub
mov
loopne
inc
jmp
xchg
sbb
xchg
ss
pop
idiv
inc
lods
mov
ljmp
cmp
or
sti
lods
mov
mov
ret
cli
mov
cmp
mov
xchg
adcb
mov
add
out
sbbb
clc
out
pop
adc
mov
pop
inc
push
fcomi
dec
mov
jge
xrelease
outsb
xchg
sbb
hlt
mov
sub
jns
dec
lea
rcll
adc
mov
inc
xchg
adc
and
or
mov
loope
jnp
jl
xor
sbb
push
cmpl
fadds
xchg
loope
and
add
xlat
or
scas
hlt
inc
add
outsl
test
loope
out
cld
push
lods
testl
push
mov
lret
dec
pop
sbb
mov
call
xor
dec
mov
jecxz
insl
and
jno
lods
and
xor
and
js
sbb
filds
inc
sbb
js
or
mov
cmp
jl
pop
mov
std
sti
int
cwtl
aam
out
push
jecxz
clc
das
sub
inc
add
call
xchg
adc
incb
sub
in
mov
loopne
adc
ljmp
xor
xchg
je
push
cwtl
or
std
inc
sub
jmp
mov
nop
push
add
cmp
ret
imul
je
pop
and
cmp
pushf
clc
xchg
fucomi
fisttps
pusha
pop
movsb
filds
mov
cwtl
mov
daa
inc
mov
cmp
pushf
or
shll
stos
out
shl
push
dec
jge
pmulhw
into
mov
mov
ret
pop
andb
or
push
sub
pop
ja
xchg
sub
or
inc
sub
cmp
mov
add
sub
inc
add
aam
pop
loope
outsb
sub
aam
hlt
lods
jle
or
loop
rcl
sub
rorb
mov
inc
mov
test
aad
sub
mov
rcrl
nop
call
or
or
leave
xchg
mov
adc
dec
arpl
or
jg
test
inc
xchg
jg
xchg
or
test
nop
mov
js
cmpb
filds
or
fucomi
sub
lods
ret
adc
popf
leave
and
jecxz
and
mov
inc
jle
xor
mov
mov
bound
fiaddl
sub
or
xor
push
push
add
ret
add
cwtl
insl
sbb
hlt
in
cwtl
std
and
sub
imul
push
nop
cmpsl
lea
pop
subl
out
add
lock
xchg
stos
sbb
push
fxch
sbb
jl
mov
cmpsl
add
es
adc
rep
repnz
xchg
orl
call
xor
das
xor
fst
lods
and
mov
lods
pop
cmp
cltd
pusha
rorb
pop
jnp
stos
leave
out
nop
or
scas
inc
sbb
fwait
fwait
in
insb
leave
mov
mov
cmpsl
imul
mov
dec
mov
aas
mov
pop
imul
cmp
sbb
out
ss
mov
in
add
push
mov
xchg
addr16
outsb
clc
pop
add
les
call
pop
loope
cmp
ljmp
pop
inc
and
mov
push
ljmp
adc
call
cmp
mov
icebp
jo
sub
push
pop
mov
pushf
add
pop
sub
push
ficompl
repnz
sbb
xchg
nop
stos
dec
mov
sarl
loopne
sbb
inc
push
xor
and
dec
shrb
and
sti
daa
and
push
ret
lret
or
sbb
or
pop
jnp
push
pop
adc
push
aam
outsl
in
xchg
mov
ljmp
and
add
sub
inc
andb
mov
sbb
cmpsl
cmpsb
add
push
and
fbld
lea
insb
jns
das
bound
fs
out
int
push
mov
jp
in
ljmp
loopne
sbb
dec
das
mov
ror
push
mov
lcall
add
mov
sub
ja
or
push
jno
cli
jmp
push
les
xchg
push
je
inc
inc
inc
movsb
and
pop
xor
inc
idiv
mov
and
adc
xchg
pop
enter
dec
inc
mov
xchg
xchg
mov
or
xchg
dec
add
or
lock
dec
and
mov
add
add
ja
ss
nop
add
pop
dec
jle
clc
aad
add
sub
icebp
inc
adc
inc
arpl
and
testb
movl
pusha
xorl
popf
xchg
sub
mov
pop
xor
sub
nop
and
mov
adc
push
les
pushf
sbb
dec
adc
add
sub
xor
push
call
add
std
mov
pop
xchg
aam
stos
dec
adc
aam
aam
inc
fmuls
mov
adc
and
sbb
dec
mov
push
shrl
sbb
mov
and
shrl
dec
add
test
in
pop
popf
fiadds
cmp
jp
rcr
and
adc
sbb
push
xor
mov
mov
lock
adc
in
loopne
and
insl
ds
sbb
fsubrs
loope
rcll
cmp
mov
lods
fsubs
js
or
inc
scas
cmp
outsw
iret
inc
xor
outsl
mov
adc
sub
add
fadds
mov
xchg
add
mov
rcrb
adc
fdivl
loopne
fs
sarb
dec
adc
mov
out
xlat
jb
addb
dec
inc
add
sub
nop
cwtl
rclb
sbb
enter
push
sub
xchg
nop
out
cld
sub
fwait
sbb
es
sbb
xor
xchg
ds
add
adc
mov
stc
add
jno
sar
movsl
icebp
and
aaa
cmp
pop
inc
and
sbb
clc
pop
lods
inc
insl
cld
add
cld
sbb
pop
or
adc
mov
sub
and
insl
popf
mov
rcrb
add
mov
push
and
sub
test
add
pop
mov
cld
push
lock
sbb
pusha
add
push
sub
stos
mov
fcomps
xor
fisubrs
jo
or
cli
das
out
jbe
sub
adc
daa
in
pop
dec
fdivrs
sbb
rcll
icebp
mov
cmp
setne
inc
mov
mov
jecxz
cmp
hlt
push
mov
sbb
pop
test
mov
add
mov
adc
fstps
mov
mul
mov
cwtl
push
enter
inc
mov
adc
jnp
test
ja
and
pop
fmull
adc
inc
add
js
sbb
inc
int3
xorl
fnstcw
lret
mov
sub
sub
sbb
xor
fcoms
out
test
mov
cmpb
aaa
xlat
sub
push
pop
adc
mov
push
add
jo
xor
loopne
test
aaa
push
mov
mov
inc
fnstenv
les
ja
daa
pop
cmp
les
pop
loopne
adc
xrelease
cli
jg
aad
clc
insb
add
pushf
loopne
adc
fs
loop
dec
inc
sbb
out
arpl
sbbb
sbb
xchg
jnp
add
cmp
aaa
jle
int3
es
adc
loope
out
dec
sub
outsl
add
pop
mov
or
push
sbb
cs
add
xor
push
xor
mov
mov
in
and
pop
add
sbbb
inc
int3
and
aaa
cmp
lret
add
mov
nop
dec
aad
roll
push
add
dec
fadds
and
jg
jo
aaa
and
and
adc
adc
adc
or
mov
jne
scas
jg
inc
frstor
andb
lret
fcomps
mov
jmp
nop
ret
rclb
sub
push
cmovs
xchg
stos
jmp
xchg
test
push
jle,pn
xchg
jne
jl
mov
mov
cs
in
jl
sti
andl
fsubrs
dec
jmp
pop
int
ficomps
sbb
scas
add
lock
call
cmp
pop
call
jne
mov
sub
arpl
xchg
adc
mov
fldcw
jae
and
xor
lea
mov
fildl
mov
enter
hlt
dec
mov
push
fcoml
loopne
lds
pop
pop
xchg
pusha
ret
mov
pop
ljmp
xorl
jbe
test
mov
or
or
test
or
sbb
jo
cmpl
pop
out
mov
or
push
test
pop
add
movsl
xchg
out
cltd
mov
mov
pop
loope
or
ljmp
jmp
and
mov
arpl
lahf
sub
fsubrl
add
xchg
faddp
add
adc
imul
addl
add
jne
pop
movsl
or
test
add
dec
or
rcl
or
jb
lock
mov
mov
ss
push
in
and
add
adc
and
add
xor
outsb
jl
fs
ja
adc
cli
push
outsl
push
pop
cmpsb
lea
fisttps
out
pop
notl
xor
into
pusha
icebp
inc
std
in
shrb
inc
out
xchg
or
or
adc
or
lods
xchg
mov
cmp
cmpsb
shrb
jl
clc
add
inc
jb
insb
inc
pop
aam
mov
pop
hlt
xor
xor
flds
jecxz
loopne
adc
movsw
jg
enter
jb
test
ja
arpl
lret
xor
cltd
adc
sarl
out
push
mov
pop
popf
jmp
cs
xchg
hlt
call
test
jbe
xchg
sbb
cmp
cmp
cmpsb
fs
jle
adc
inc
hlt
adc
loopne
hlt
clc
xchg
pop
inc
dec
and
andb
sti
adc
cmp
arpl
aam
test
jae
jbe
add
in
xor
in
or
data16
in
adc
scas
sbb
mov
pop
pop
js
int3
ja
outsl
adc
fisttpll
mov
loope
stos
xor
out
adc
xor
inc
neg
push
push
mov
cmpsl
push
hlt
stos
adc
mov
les
jae
sbb
xor
lods
cmpb
xor
in
or
sub
cmpsl
gs
mov
ljmp
mov
daa
imul
sarb
cwtl
or
cmp
mov
out
in
add
popa
inc
mov
call
jo
adc
icebp
sub
adc
add
or
mov
rcrl
xchg
fs
sbbw
sub
xchg
mov
push
xor
mov
test
mov
push
inc
dec
insl
test
sub
lret
add
or
aaa
test
mov
or
loop
jmp
push
out
aad
or
push
sub
add
dec
and
push
int
pop
push
ja
sub
inc
sar
test
pop
push
adc
and
push
adc
xor
cmp
test
addl
loope
test
fisttps
sbb
add
jns
xchg
jns
add
sub
pop
or
out
adc
and
lock
clc
test
mov
xchg
movsb
jns
test
in
pop
jg
push
mov
mov
mov
mov
femms
mov
mov
mov
out
mov
adc
data16
inc
inc
cmp
je
aaa
out
pushf
test
aaa
xchg
dec
push
mov
fstps
addr16
pop
mov
push
xor
rol
mov
in
jo
cwtl
out
jg
jl
lods
ja
call
and
jmp
xchg
mov
or
dec
sub
mov
mov
je
loopne
jo
arpl
pop
dec
sub
add
adc
pop
cmp
sbb
into
test
xchg
jmp
jl
xchg
mov
and
xor
lock
movsb
in
add
fs
xor
aas
mov
mul
jae
mov
add
dec
icebp
je
jp
dec
jge
hlt
cmc
rorl
fcomps
ret
dec
inc
add
sub
push
push
add
psrlw
jecxz
xchg
add
xor
adc
adc
roll
or
testl
adcl
outsl
out
xor
sub
add
pop
push
inc
mov
dec
int
add
mov
popf
or
test
in
sahf
les
hlt
cmp
cmp
fcoml
hlt
add
or
js
rclb
jno
xor
mov
lds
test
lock
mov
gs
and
sbb
incl
fdivrs
rorb
sbb
lret
jmp
mov
fbld
xor
push
lods
adc
in
xor
shrb
insb
aas
fdivrs
ss
push
fadds
cmp
out
xor
or
ljmp
or
aas
dec
outsl
mov
test
jbe
lea
sbb
test
movsl
add
loop
push
mov
daa
ljmp
xor
mov
cwtl
popf
or
and
pop
pop
test
push
add
jae
jmp
jge
push
cmpl
cmp
sahf
mov
stos
mov
cmpsl
xchg
sti
push
cmp
hlt
bound
call
arpl
xchg
jae
mov
fucomp
hlt
sub
mov
cmp
mov
loopne
mov
add
inc
inc
push
ret
data16
add
and
shlb
hlt
cltd
push
push
mov
add
call
sub
mov
cli
and
test
cwtl
arpl
add
and
addps
mov
test
movsb
adc
icebp
or
loop
icebp
ljmp
lock
enter
mov
je
xor
imul
flds
sbb
mov
test
je
and
ret
fnstenv
lea
pop
jmp
xchg
inc
or
ret
mov
nop
and
sahf
aaa
repz
inc
fninit
mov
add
push
sbb
daa
pop
xor
stos
sub
mov
xchg
je
jl
mov
sbb
gs
testb
jae
sub
push
loop
aam
xor
cli
pusha
xchg
jo
inc
in
jne
pop
jp
fstps
test
jle
cmp
call
push
fwait
cmp
jge
xchg
repz
sub
push
and
sbb
xor
call
out
or
popa
ss
hlt
or
in
pop
loope
adc
hlt
mov
and
daa
sahf
aam
mull
scas
lds
or
test
les
or
cmp
and
adc
cltd
cmp
je
pop
add
pop
fdivr
add
pushf
rclb
in
dec
sbb
loopne
cmp
lea
mov
or
xchg
or
faddp
out
sub
jnp
loop
dec
daa
lahf
incb
iret
adc
and
mov
adc
sbbb
test
add
adc
mov
push
ljmp
add
and
rol
or
fisubrl
testb
mov
dec
dec
insb
ret
push
loope
adc
jne
repz
popa
xor
test
dec
dec
sub
in
and
call
mov
jnp
push
xor
dec
flds
xor
push
call
in
bound
inc
push
mov
cltd
or
subl
sahf
or
mov
inc
sbb
sbbl
cmc
adc
test
fstps
sbb
or
mov
push
jae
outsl
mov
or
xor
sub
jmp
jl
cmp
add
mov
jb
mov
movsl
push
wrmsr
inc
pop
and
inc
and
lcall
int3
jns
xor
push
mov
test
popa
cmp
jmp
aas
mov
shlb
adc
clc
pop
roll
pushf
adc
add
out
mov
fisubrl
dec
rcrl
jmp
test
je
fdivrp
roll
aad
hlt
xchg
and
xchg
sbb
daa
fidivl
and
imul
daa
add
xchg
movsb
ss
sahf
or
adc
rorb
inc
cmp
test
jb
cmp
repnz
and
dec
rolb
jbe
dec
lcall
lods
test
sub
movsb
shll
xorb
dec
fucom
sbb
loopne
pop
ret
xor
push
cs
cmc
and
sub
inc
adc
test
inc
iret
inc
xchg
mov
mov
cmpsl
push
daa
fdiv
pop
add
cmp
adc
leave
fistpl
loop
sahf
mov
addb
inc
data16
push
loop
mov
mov
or
sbb
and
or
dec
pop
and
and
loopne
js
je
mov
adc
cmp
push
cmc
mov
popa
and
mov
jecxz
xchg
jl
mov
adc
xor
add
jo
js
xor
gs
push
cmp
mov
mov
adc
sub
lahf
add
hlt
and
xor
shlb
adc
lock
subb
lods
sbb
dec
cmp
das
mov
pop
es
into
testl
or
aaa
lods
dec
adc
and
sub
mov
lcall
add
inc
fcoml
shrb
clc
outsb
xchg
inc
fists
jg
adc
sub
fcomps
or
and
mov
mov
mov
push
sbb
push
in
xor
jno
nop
mov
mov
loope
push
ret
jae
test
cwtl
mov
repz
adc
mov
add
fdivl
loop
push
push
dec
mov
pop
add
pop
int
pop
mov
dec
lock
add
and
push
dec
lods
addl
sbb
js
aam
push
xchg
or
adc
rcr
mov
or
pop
mov
and
movsl
jg
lcall
iret
std
fiaddl
xor
pop
jae
add
jg
pushf
mov
adc
sbb
push
and
das
jne
in
pop
mov
and
lret
and
aaa
cltd
sub
jns
test
lock
je
cli
push
insb
ss
inc
mov
shrl
hlt
jge
push
aas
jle,pt
or
cli
lcall
loopne
cmp
inc
sarb
push
xchg
jge
add
lods
aaa
xor
mov
outsl
cmc
cmp
dec
push
mov
in
xchg
add
or
andps
push
inc
pushf
sbb
call
sbb
fisttpll
test
add
int3
sbb
hlt
outsl
in
outsb
lea
xor
sbb
push
cld
sub
scas
add
or
outsl
push
push
inc
inc
adc
xchg
pop
dec
adc
mov
dec
shrb
mov
inc
rcr
cmp
ja
add
push
cmc
pop
aad
das
push
jp
mov
mov
mov
jo
or
mov
sbb
movsb
cmpsl
js
rorl
xor
cmp
jne
fldcw
push
test
sahf
mov
cmp
popl
push
fdivr
fcmovne
pushf
sbb
pop
repnz
xchg
sarl
dec
ljmp
fs
xor
fs
clc
adc
lds
cmpl
pop
mov
repnz
sbb
stc
test
imul
mov
push
ud0
push
jg
test
adc
push
xchg
sub
outsb
outsl
subb
stos
pop
xor
add
sbbb
ja
fdivrs
inc
lock
jg
sbb
movsl
mov
mov
fsubl
sbb
pop
jmp
test
and
inc
jg
fidivrl
mov
push
sbb
inc
ljmp
ja
daa
add
dec
add
andb
stc
jnp
aad
jg
mov
sub
inc
rclb
in
sbb
aas
pop
inc
sub
dec
stc
mov
andb
clc
fildll
adc
testl
hlt
pop
adc
push
mov
les
xchg
cld
add
loopne
xchg
or
mov
in
test
dec
dec
push
jecxz
sti
adc
mov
mov
ljmp
outsl
test
push
or
and
loopne
or
mov
inc
and
add
or
push
mov
sub
adc
lods
inc
or
repz
das
test
ljmp
pop
flds
add
xchg
xchg
and
mov
repnz
push
add
mov
scas
push
pop
cmp
and
or
xor
push
add
cmp
in
dec
pop
pop
adc
lods
addr16
pushf
xchg
icebp
sbb
movsl
push
js
dec
arpl
push
out
inc
aaa
add
in
add
lcall
mov
xlat
xchg
in
adc
and
mov
mov
sbb
mov
test
inc
sbb
aam
add
clc
shll
neg
jb
sete
lret
sub
pop
mov
lahf
fiaddl
adc
js
pop
stc
add
fwait
cmp
das
movsl
cmpsb
jg
lods
dec
in
dec
pop
dec
lret
sbb
adc
cld
jecxz
fisubs
stos
lea
shrb
ret
test
lret
movsl
xchg
ret
insb
pushf
bound
and
mov
or
sahf
daa
mov
push
pop
mov
dec
fnstcw
ret
lcall
mov
inc
adc
outsl
add
inc
inc
insb
pop
and
jl
scas
jbe
dec
xchg
imulb
das
add
mov
mov
leave
mov
jg
xchg
out
stc
aam
lcall
fists
fstpt
add
sub
pop
lods
sub
je
outsl
jge
xchg
cmpsl
sbbl
adc
aad
xchg
sub
daa
xchg
dec
fwait
xor
push
aaa
mov
js
add
movsb
sarl
movsl
ljmp
sbb
clc
outsl
into
mov
jno
popa
and
cmp
ds
movzbl
les
or
inc
aam
fnstenv
add
inc
xchg
mov
pop
jb
xor
nop
jae
sub
pop
outsl
xor
adc
and
ljmp
jg
pusha
push
cld
jg
clc
xchg
push
push
into
lock
dec
mov
mov
push
mov
mov
mov
or
mov
mov
or
lret
stos
sbb
ljmp
iret
cmpsl
rorb
lock
add
in
push
jne
jo
or
mov
xor
xlat
loopne
cmp
icebp
outsb
push
inc
push
or
mov
rorl
jo
jle
sbb
mov
push
fcmovne
in
push
mov
mov
addr16
adc
jb
mov
fwait
sub
adc
rorb
xlat
adc
xchg
test
and
int
jle
sub
xchg
rclb
cmpb
icebp
sbbl
lds
imul
ret
add
and
test
push
mov
fsubl
orb
add
sub
xor
icebp
test
mov
xor
fbstp
mov
sbb
movsb
je
sub
add
fdiv
into
rclb
aad
hlt
jmp
mov
stc
rorl
push
pop
and
xorl
push
add
push
inc
and
sub
pop
and
and
pop
shll
loopne
add
xor
push
sbb
movsl
inc
retw
adc
mov
pop
dec
dec
add
adc
cmp
mov
subb
mov
xchg
inc
int3
aam
add
mov
lock
push
push
lea
push
push
cld
call
into
lahf
dec
rolb
xchg
enter
adc
inc
incl
lret
pop
cmp
fidivrl
ja
jb
add
sub
adc
or
ret
ficoms
fistps
mov
mov
sub
and
pop
cs
fistl
roll
and
mov
icebp
cld
or
inc
popf
pop
or
in
jmp
into
xchg
jp
frstor
pop
push
inc
add
and
imulb
mov
stos
popf
adc
dec
mov
and
jbe
sbb
xor
sub
fists
loope
insl
lret
add
fldenv
pop
out
bound
add
cmp
mov
aam
inc
pop
mov
push
xorl
test
or
and
inc
mov
jnp
xchg
xor
cmp
shll
ret
or
mov
fwait
loopne
clc
push
cmpxchg
push
das
xchg
fcmovnbe
cmp
fsubs
pop
dec
inc
sarl
xor
cmp
mov
and
orl
out
mov
mov
add
inc
fs
jp
test
jl
lea
mov
pop
push
mov
sub
cmp
ss
xor
insl
jecxz
sub
loope
dec
call
mov
loope
ret
test
mov
shlb
mov
mov
sub
stos
scas
xor
shl
gs
call
call
test
xor
inc
subl
pop
les
mov
fdivrl
jnp
pop
sahf
pushf
push
and
push
add
les
mov
les
aas
push
dec
sahf
push
clc
sbb
pop
mov
sbb
fisttpl
sub
cmp
out
sub
jecxz
and
mov
push
je
or
pop
xor
mov
popa
and
out
push
popw
adc
cmp
inc
adc
lea
push
sbb
loopne
inc
pop
and
cmpsb
lods
addr16
pop
mov
stc
jecxz
mov
mov
js
inc
pushl
cld
pop
rorb
adc
push
mov
jo
mov
adc
jnp
sub
mov
jmp
cs
std
jg
inc
outsl
notl
xchg
call
and
cmp
push
xchg
mov
xlat
lock
subb
push
out
aad
cmpsb
push
sub
sbb
mov
insb
cmp
data16
push
mov
mov
ja
dec
and
ret
add
jne
sahf
or
mov
sbb
mov
jp
add
xchg
lock
in
cmp
out
sbb
idiv
pushf
pop
add
cwtl
jb
push
cmp
scas
dec
in
and
mov
inc
jbe
outsb
xor
jne
sub
mov
push
dec
out
out
out
loop
lea
movsb
frstor
jp
xor
mov
jge
ss
mov
cmp
xor
mov
cmp
inc
cltd
push
cwtl
lret
and
aas
pop
ss
sub
shrb
inc
sbb
mov
and
nop
mov
cmp
jle
loope
aam
js
mov
lea
out
xchg
fisttpl
enter
pop
fbstp
js
jmp
andb
cs
push
cmp
cmp
cmpsl
fldenv
mov
std
aad
sub
stos
xor
add
or
jge
out
call
test
rcrb
add
dec
mov
mov
andb
or
arpl
bound
push
jp
inc
out
push
mov
xchg
es
jne
inc
hlt
sbb
cmp
test
into
xor
push
lea
add
int3
bound
mov
mov
xor
sbb
push
test
loop
adc
dec
adc
adc
adc
loop
jno
push
loopne
icebp
xor
lahf
mov
outsb
fisubrs
stos
ss
adc
stos
push
pusha
js
lods
bound
movsl
sub
mov
int3
and
push
mov
fildl
test
sti
in
mov
pop
and
shrl
sub
add
mov
mov
jmp
push
xchg
and
add
push
rcrb
call
daa
addl
fsubrp
fcmovnu
or
dec
pusha
sub
fucomp
add
xor
repz
xor
pusha
stos
and
int3
lcall
lods
test
xor
xor
pop
pop
imul
rcrb
aam
inc
rcrb
ficoms
mov
push
mov
testl
loope
cltd
in
mov
fiadds
mov
mov
mov
addl
adc
add
push
mov
add
xlat
daa
fwait
popa
mov
lret
push
adc
int
dec
inc
sub
out
mov
and
inc
inc
mov
loope
pop
jecxz
imul
fwait
jge
fisttps
xchg
mov
dec
stos
xor
mov
jno
xchg
adc
push
mov
jae
or
inc
sub
add
mov
pop
pop
insb
push
xchg
cli
jne
inc
nop
adc
das
mov
mov
cwtl
mov
mov
inc
adcl
adc
cmpsl
mov
or
out
sub
rcrl
movsb
inc
sub
or
inc
adc
sbb
mov
arpl
cmpsb
divl
cld
push
aad
inc
aad
inc
push
fwait
inc
jo
loope
loopne
stos
scas
and
rcll
mov
inc
ja,pt
add
rcrb
sbb
inc
pinsrw
nop
or
push
loop
pop
jle
or
popf
add
or
push
inc
push
in
xor
add
mov
clc
movsb
and
adc
roll
xor
imul
movsb
add
sbb
or
cwtl
xchg
cltd
mov
pusha
mov
adc
and
cmc
cmp
dec
enter
enter
ret
movsb
jg
and
jo
test
jb
cmp
dec
mov
ss
mov
xor
push
dec
dec
aad
dec
add
mov
fildl
push
add
insl
enter
loopne
repnz
cmp
inc
push
scas
add
push
dec
out
pop
xchg
lock
clc
push
cltd
and
push
cmpsb
mov
and
dec
adc
lret
push
std
dec
mov
pop
cmp
inc
leave
inc
jnp
push
sub
add
add
cmp
mov
push
mov
or
test
imul
lret
mov
mov
pusha
add
lret
dec
stc
daa
std
adc
mov
arpl
sbb
adcl
rcl
jp
add
mov
and
inc
mov
mov
jo
int
aaa
insb
add
gs
pop
aas
mov
data16
jno
push
jl
cli
push
push
adc
lret
or
or
roll
icebp
pop
sbb
xor
xchg
stos
add
xchg
iret
loop
and
shll
notb
xor
push
push
lret
push
sub
inc
mov
inc
mov
xchg
vpunpckldq
push
mov
filds
sub
loop
loope
test
inc
inc
cmp
gs
addl
push
sub
inc
jns
sbbb
jg
xchg
jns
adc
xchg
dec
add
jmp
nop
or
jns
push
or
ret
inc
sbb
jo
les
mov
xor
xchg
sbb
lock
out
pop
or
push
ret
dec
adc
sbb
xchg
xor
mov
jo
mov
jnp
mov
and
add
sbb
sub
adc
call
aam
mov
hlt
sub
adc
pop
adc
add
in
push
xor
lcall
shlb
push
inc
insb
add
jno
mov
or
insw
and
gs
and
adc
fisubl
adc
and
pop
mov
push
in
add
aad
pop
xor
out
fidivrl
add
stc
or
outsb
das
mull
sbb
pop
add
pop
lret
fdivl
sbbb
sar
cmpps
jle
imul
test
jo
call
test
and
jmp
push
les
cltd
fadd
jno
clc
rcrl
dec
push
sbb
into
mov
or
adc
or
fsubl
adc
cmp
sti
push
stos
leave
loop
and
call
in
rorl
in
xchg
fbstp
mov
inc
push
dec
mov
mov
insl
add
or
add
aad
icebp
sub
adc
lock
jae
inc
inc
or
push
cmp
or
sub
inc
inc
add
ss
cmp
jns
lret
pop
adc
mov
cmp
jne
adc
cwtl
rcr
sub
je
es
mov
and
in
pop
mov
push
pop
rclb
jp
jp
sub
push
sbb
cmp
in
jmp
std
cmp
jae
repnz
subb
test
add
add
pop
dec
cld
or
mov
cld
sub
call
and
push
jl
sbb
jmp
inc
add
cltd
pop
add
mov
je
and
rclb
or
inc
pop
push
or
jp
cld
rcl
pop
stos
sbb
xchg
inc
das
mov
mov
adcb
out
std
inc
mov
popa
mov
mov
push
fisubs
cmp
push
icebp
push
inc
jge
xlat
sahf
xor
push
sbb
jo
js
push
add
out
addb
les
and
sbb
sarl
pop
mov
and
jecxz
ds
dec
jne
pop
or
sbb
cmp
adc
mov
jg
cli
sbb
inc
mov
mov
addr16
add
push
mov
pop
sbb
nop
cmpsb
jns
adc
out
xchg
sahf
xchg
arpl
clc
and
loopne
decl
in
sub
mov
or
iret
or
pop
xchg
aam
lahf
pop
mov
xor
addr16
mov
mov
and
jno
orl
push
frstor
cmp
inc
cmc
mov
out
repnz
add
call
add
push
in
sbb
into
sbb
or
push
lods
xor
mov
insb
add
mov
jb
mov
lock
mov
jno
add
lcall
xor
bound
dec
movsl
pop
add
test
sbbl
xlat
cwtl
ret
xchg
cmpb
in
add
pusha
popf
les
mov
cltd
cltd
mov
dec
sar
pop
xchg
pop
stos
add
repz
ss
mov
adc
pop
mov
dec
sti
fists
ret
out
pop
loope
or
insl
pop
pusha
mov
and
ret
push
sbb
lcall
inc
test
mov
ja
lret
and
add
fsubr
aaa
dec
out
add
mov
sbb
insl
pop
rolb
fucomi
xchg
sbb
cmp
push
loope
pusha
pop
inc
mov
insb
fistps
clc
jno
ljmp
inc
and
mov
addr16
mov
add
jno
or
pop
jo
mov
xor
sbb
imul
inc
add
stc
popa
add
add
jno
int
jbe
outsl
mov
enter
sub
pop
mov
jge
test
mov
pop
test
xchg
pusha
jl
sub
pop
insb
movsl
sub
push
pop
sbb
or
outsl
clc
call
jl,pn
jo
add
push
lds
mov
sub
flds
xlat
inc
add
insl
xchg
mov
sbb
stos
pushl
and
pop
add
lods
add
lret
lock
ljmp
pop
int3
push
xor
jae
dec
add
out
adc
lahf
icebp
xor
pop
mov
push
sub
jae
jb
pushw
addb
lock
and
call
add
add
dec
add
push
mov
xor
popf
cli
sbb
pushf
sub
or
pop
and
or
cmpsb
add
jbe
and
out
pop
in
ret
ss
out
add
dec
sbb
push
jge
push
mov
dec
pop
sub
lds
add
popf
sbb
cmp
testl
scas
or
inc
adc
lcall
pop
pop
pop
negl
iret
push
mov
dec
cmp
mov
je
scas
adc
adc
xchg
mov
jg
rcl
stos
and
test
lods
pop
movsl
inc
sub
and
dec
loopne
sbb
ljmp
jecxz
jmp
mov
addr16
lods
aas
jl
cs
xchg
add
mov
sub
mov
jo
cmp
in
dec
cli
xchg
push
outsl
mov
cmpl
mov
out
mov
aam
xchg
stc
std
dec
dec
decl
add
incb
mov
nop
in
addr16
and
jae
cld
or
cmc
sti
lret
decb
jno
lock
push
add
cmc
adc
call
sub
xor
into
and
cmp
cmp
push
jmp
fisubrs
inc
and
add
xchg
std
xor
rcrl
mov
rcrb
mov
fmul
xchg
jnp
fcmovnu
data16
cwtl
fidivs
lcall
mov
jecxz
adc
cld
pop
jg
mov
cmpsl
mov
jle
lret
mov
clc
mov
add
es
cwtl
icebp
xlat
mov
add
lret
lods
xorl
loop
rolb
sahf
std
incl
jle
xchg
ret
sbb
push
jl
lret
dec
verr
add
cmp
cmpsb
sti
jg
xchg
xchg
jbe
xlat
or
mov
fistpl
mov
pop
push
nop
add
lcall
sub
sbb
outsl
roll
adc
lret
adc
mov
push
and
shlb
push
xchg
inc
fcmovnbe
pop
adc
loop
lcall
cwtl
inc
add
test
mov
cmp
cli
aaa
sti
add
in
data16
rorl
fisubrl
mov
stos
push
add
xchg
and
xchg
bound
loope
mov
dec
fsubs
push
inc
dec
or
das
add
dec
sub
icebp
dec
mov
xchg
lods
pop
dec
idivw
arpl
les
adc
das
insb
mov
and
or
mov
jle
std
push
insb
push
or
pusha
or
xchg
roll
dec
fdivl
mov
adc
mov
sti
or
cvtpi2ps
mov
mov
dec
fldt
or
int
jns
aaa
clc
cmpsb
sbb
dec
push
jo
inc
sti
ja
mov
movsl
clc
mov
jb
cmp
adc
adc
rclb
lods
cmp
mov
scas
jb
mov
xor
fwait
mov
clc
pop
sbb
inc
and
push
pop
cmp
popl
cwtl
jbe
jl
adc
fcmovnu
notb
lock
or
les
and
adc
and
lods
stos
loopne
inc
int
inc
mov
or
jmp
sarw
lcall
push
das
std
fcmovnu
jo
outsb
lcall
mov
jecxz
rol
ljmp
jecxz
sbb
push
rolb
loope
pop
sub
mov
lock
inc
int3
enter
aas
lahf
fisttps
insb
and
push
clc
lcall
add
daa
aam
add
sub
or
sbb
test
out
js
incl
xor
lock
jp,pt
jg
call
inc
jmp
jnp
cwtl
jb
and
mov
adc
js
pop
inc
jae
mov
ds
movsb
sarb
mov
pop
mov
stos
inc
jnp
jnp
lcall
inc
fs
mov
dec
aaa
and
orb
int3
lods
pop
add
js
mov
loope
xchg
insl
adc
sbb
mov
and
mov
fiadds
cli
dec
xor
add
dec
pop
cmp
mulb
mov
dec
clc
iret
sbb
adc
and
imul
mov
nop
mov
push
inc
lret
or
mov
iret
cmpsb
loope
xchg
ljmp
mov
cmc
in
cld
mov
pop
cmp
pop
mov
lcall
andb
pop
sti
jnp
dec
inc
adc
inc
mov
dec
or
dec
or
and
push
jp
xor
inc
mov
clc
xor
enter
movsl
sub
xor
aaa
out
repnz
dec
fld1
outsl
pusha
mov
pushf
xor
daa
mov
testb
xor
scas
jbe
adcb
jg
cmp
into
bound
xor
mov
push
hlt
push
sar
jle
and
cmpsl
sbbb
lods
push
jne
ss
std
xchg
xor
lahf
add
jg
ljmp
fsubrl
int
jle
inc
pop
xchg
push
ret
mov
mov
fdivr
ljmp
adc
cs
add
aas
inc
shll
test
call
cld
fsubl
add
stos
aas
add
sub
pop
movsb
test
mov
dec
and
das
push
sub
xor
filds
push
add
mov
and
mov
push
cmc
cmpsb
aam
cmp
pop
clc
int3
inc
iret
adc
outsb
push
lahf
and
sub
test
mov
add
push
add
fisttpl
push
adc
xor
cmpsb
insl
gs
fildll
jae
stc
xchg
xchg
stc
testl
cmp
or
test
push
pop
sub
fcompl
lods
adc
cmp
add
daa
lds
sbb
daa
ret
and
sbb
cwtl
and
xor
std
cld
sbb
jnp
dec
ljmp
pop
ret
add
inc
arpl
fwait
pop
and
and
adcb
test
cmp
xchg
mov
jecxz
xor
and
test
push
inc
dec
add
xor
aad
push
ljmp
push
mov
push
push
adc
jne
mov
fcoms
pop
and
xchg
adc
push
rcll
nop
or
and
push
dec
stos
mov
or
lods
loope
sahf
pop
sbb
je
push
enter
push
subb
mov
outsl
push
loopne
push
inc
add
push
test
jp
xor
stos
adc
and
adc
pop
aas
int3
xchg
adc
or
push
and
add
add
aaa
sahf
jmp
shlb
add
aas
sub
inc
jg
shlb
mov
mov
push
fadd
mov
mov
jo
pop
lcall
xchg
mov
pop
jmp
pop
mov
xchg
adc
mov
adc
ja
stc
ds
mov
aam
mov
push
jmp
sbb
jbe
add
loope
subb
jnp
outsl
inc
add
add
sbb
push
jmp
test
or
cmp
xlat
pop
adc
xor
fs
mov
cmpsl
jae
pusha
adc
mov
arpl
clc
aaa
es
out
movsl
in
inc
lods
fstps
pop
pop
adc
mov
push
sarb
in
mov
mov
adc
je
js
bound
mov
mov
mov
gs
add
in
nop
loop
in
push
or
shrb
pop
mov
jge
jno
shlb
cmp
mov
jae
pop
cs
rol
push
pop
outsl
icebp
iret
stc
mov
popa
test
pop
or
adc
pop
sub
lock
sbb
outsl
je
lret
fstpt
xchg
pop
jg
xor
push
pusha
jb
sbb
je
sub
loope
sub
jp
ja
sbb
sub
mov
xor
inc
les
cmp
cltd
and
mov
or
das
and
in
loopne
aaa
decb
outsb
and
aad
jnp
arpl
push
mov
push
add
loop
pop
pop
clc
test
mov
pop
push
lcall
loop
imul
cld
cmp
fwait
negl
leave
cltd
fidivrl
stos
les
mov
mov
mov
lods
inc
jns
sub
pop
test
in
jo
cld
xchg
add
fildll
and
and
mov
and
stos
xchg
ficoml
xchg
fistps
repz
lea
sub
ficomps
or
loopne
nop
push
sbb
lcall
outsl
adc
mov
add
fisttps
imul
jnp
aad
xchg
outsb
inc
pop
jb
mov
pop
pop
roll
cmp
adc
push
insb
ret
lock
and
adc
filds
inc
std
or
rcr
lret
lods
inc
push
bound
loopne
sub
add
xor
jg
inc
sbb
cwtl
add
add
sbb
cmp
sbb
rorl
jo
add
mov
aam
mov
pop
push
scas
mov
sub
and
lret
add
dec
adc
or
shl
sbb
rclb
mov
and
cmp
add
loopne
adc
xchg
sub
int3
mov
inc
lock
fmul
mov
int
pusha
movsl
cltd
rolb
inc
inc
test
aad
shr
or
icebp
iret
jle
push
leave
cmp
mov
loopne
add
cmp
shl
mov
adc
mov
sahf
inc
adc
lcall
or
pusha
rcll
push
out
and
lods
aas
jb
sub
inc
mov
push
mov
add
sbb
pop
xchg
inc
pop
inc
xor
inc
loopne
push
push
jg
imulb
fists
jge
pusha
loopne
pushf
enter
cmp
push
in
xchg
mov
addr16
je
push
sahf
push
lock
test
push
mov
and
xor
mov
pop
push
pusha
out
pop
sub
and
xor
mov
or
and
lret
stos
cli
fs
enter
pop
iret
fs
sub
and
jbe
fcoml
xorb
pop
lret
sti
lret
mov
stc
pop
enter
adc
and
loopne
negl
test
pusha
push
addl
popa
int3
dec
pop
jp
daa
inc
rorb
ss
insb
dec
add
roll
es
push
xor
add
in
in
outsb
add
push
add
fs
or
daa
or
out
clc
xor
pop
scas
adc
scas
jo
add
mov
jge
clc
xor
or
sub
inc
mov
push
push
cmp
mov
fwait
add
add
xor
adc
out
mov
js
sahf
xchg
shlb
cld
mov
xorb
inc
lock
aad
mov
and
cld
cmc
test
pop
test
pop
inc
add
cmp
cld
mov
bound
and
vmptrst
aaa
push
add
push
rcrl
xor
in
adc
xchg
test
jge
sti
ret
pop
dec
mov
mov
mov
mov
inc
orb
iret
jbe
cltd
stos
and
incl
test
pop
cmp
int3
in
sbb
cmp
mov
test
js
inc
mov
mov
jns
xchg
bound
dec
lcall
dec
addr16
into
jl
add
inc
ror
and
insl
cmp
dec
mov
jae
lds
cwtl
rorb
xlat
int3
inc
pop
jmp
gs
imul
push
add
push
mov
sbb
rcrb
shl
mov
push
or
xor
inc
scas
pop
jp
and
je
pusha
push
aad
sub
andl
sbb
inc
and
sub
xor
mov
in
pop
add
jnp
outsb
shrl
mov
pop
cltd
and
mov
fimull
clc
dec
pop
add
clc
pop
shrl
xor
or
mov
adc
xchg
xor
push
test
mov
fldcw
aad
inc
fldenv
and
popf
rcr
ret
sbb
or
in
ss
xchg
call
hlt
mov
hlt
xor
mov
fs
add
cmpsl
push
cmc
xchg
ja
sbb
or
stos
jp
sub
xchg
push
pop
xor
adc
mov
jo
aam
in
out
cmpsb
or
inc
lret
cmp
sbb
fildll
mov
in
push
xor
adc
push
sbb
dec
hlt
pop
pop
ljmp
ljmp
push
lahf
lock
mov
sbb
dec
and
ret
or
fidivs
sub
test
sbb
mov
adc
aad
sar
push
mov
pop
sbb
inc
push
inc
aaa
mov
sar
call
xor
cmpsl
adc
and
stos
loopne
aaa
lea
clc
outsl
outsl
xor
and
js
add
iret
into
adc
add
outsl
push
dec
jmp
into
pop
shr
loopne
mov
addr16
clc
and
sub
repnz
clc
inc
mov
or
jg
call
mov
rorl
pop
fcomp
outsl
mov
adc
xor
aaa
adc
mov
iret
outsl
push
hlt
dec
jl
fwait
mov
inc
lahf
loope
and
jg
std
inc
mov
int
dec
lods
aad
xor
pop
mov
cmp
movb
decl
add
cmc
ljmp
cmc
insb
in
insl
orl
mov
push
mov
cmp
sub
mov
je
fnclex
ret
ss
loopne
xchg
je
mov
sti
test
mov
out
inc
mov
sub
pop
sbb
fdivrs
imul
bound
mov
jecxz
addr16
gs
or
dec
loop
fst
add
add
fcmovnbe
ret
push
pop
xchg
call
push
cltd
inc
mov
push
pop
fidivrs
sbb
outsb
and
popf
imul
pop
incb
nop
adc
call
aaa
adc
loopne
and
jg
mov
sub
sub
add
mov
incl
cld
pop
dec
ja
movsb
subb
pop
dec
daa
dec
jb
sbb
pusha
or
fbstp
or
int3
or
in
aaa
pop
jb
es
les
sbb
hlt
xlat
test
test
mov
stc
xlat
test
pop
movsb
daa
test
ss
pop
and
je
test
std
xchg
lods
sbb
jge
in
jle
jbe
mov
bound
add
mov
cli
ja
cli
sbb
xlat
int3
inc
xchg
push
daa
mov
xchg
add
and
and
aam
ret
call
cld
mov
and
pushl
pushf
jae
xchg
mov
jg
fildl
dec
and
mov
fs
repnz
stos
fwait
dec
and
sbb
lea
lock
ja
dec
notb
outsl
mov
test
xchg
adc
pusha
or
sbb
outsl
adc
dec
scas
push
in
in
push
cmpl
xchg
sub
pop
js
rcrl
movsl
test
or
pop
adc
pop
test
inc
and
nop
and
adc
in
sbb
mov
shlb
icebp
push
int3
sbb
pop
jecxz
sarb
lods
add
call
push
push
xchg
sbb
pop
adc
sbb
jmp
mov
mov
dec
je
loop
pop
ljmp
ficompl
cmpsb
inc
mov
and
imul
sbb
add
fidivl
lret
cs
jge
stos
add
xchg
pop
movsl
push
mov
adc
cmpb
shr
jl
mov
in
inc
out
out
std
int
in
movsl
lea
shrb
dec
cmp
adc
push
jae
sbb
loopne
mov
push
je
iret
dec
scas
fsub
inc
and
xor
jecxz
cmc
or
jmp
mov
push
test
in
push
daa
push
or
sbb
inc
mov
flds
jb
sbb
pop
adc
icebp
mov
pop
inc
loopne
and
movsb
inc
aam
out
sub
inc
icebp
rolb
inc
xchg
or
popf
sub
push
sbb
xchg
movsl
and
or
ficomps
mov
and
and
mov
sbb
inc
les
sbb
cmp
cmc
pop
pop
adc
aam
mov
push
shll
xor
push
fldenv
cmp
jne
sbb
xor
push
cltd
cmpsb
sbb
lods
loop
push
sarl
add
out
pop
movsl
push
insb
mov
fldl2e
jne
les
pop
dec
mov
icebp
push
pop
insb
ljmp
pop
push
or
incl
invd
sbb
in
inc
lods
into
add
push
sub
fbstp
out
jbe
xlat
hlt
shll
scas
jb
jle
aas
sub
xlat
out
sarl
scas
rorb
mov
stc
fsubrs
mov
adc
shrb
shlb
jae
shl
clc
aas
pop
xchg
mov
jnp
rcrb
imul
pop
sub
push
dec
in
jno
jo
shll
jmp
dec
add
in
lahf
addb
lods
in
jns
mov
pop
test
add
roll
inc
fcoml
stos
mov
jle
mov
or
or
pop
fwait
mov
dec
xchg
data16
push
adc
out
inc
pop
sub
inc
nop
insb
pop
push
mov
push
arpl
adc
test
add
loopne
cmp
xor
sub
scas
jecxz
test
loop
cmp
sarl
mov
push
xchg
pusha
rcrl
les
jb
mov
insl
sub
push
push
test
jb,pt
fabs
punpckldq
cmp
shll
inc
sub
icebp
stos
jl
sarb
nop
xor
mov
add
insb
fsubs
aaa
cmp
jbe
mov
das
sti
ret
mov
sub
cmovg
in
inc
dec
inc
adc
mov
call
in
imulb
lret
shll
sahf
cmpsl
outsl
jno
pop
ds
xchg
mov
hlt
pushf
enter
insl
pop
das
mov
or
inc
jne
and
lds
add
out
xchg
lock
xor
or
push
fisubs
pop
cmp
fisttpl
mov
or
mov
ret
pop
mov
push
xor
sub
add
xchg
lcall
stos
mov
shll
sbb
xchg
out
xchg
jns
sub
imull
in
push
mov
lret
pushf
push
mov
adc
pop
dec
das
inc
mov
fists
les
xorb
cs
push
subb
cmp
aaa
jno
sub
out
stos
int
push
push
mov
and
add
loop
mov
fdivrl
inc
es
lock
or
ret
es
fcomp
nop
push
addl
sub
pop
inc
sub
test
mov
aaa
sbb
and
mov
outsl
inc
xor
lock
lods
pusha
mov
nop
sub
jne
pop
and
inc
cld
pusha
idivb
mov
pop
sbb
jmp
clc
pop
enter
pop
sbb
popa
lahf
push
inc
push
mov
and
cltd
lock
or
aaa
add
lahf
test
into
cmp
push
push
arpl
sub
bound
push
xor
mov
xchg
stc
dec
sub
shlb
inc
nop
jp
mov
jo
sbb
sub
and
sbb
fistl
cmp
dec
xchg
std
or
ret
pushl
adc
sti
fs
rorb
push
mov
lods
jne
stos
aam
fwait
imul
xchg
icebp
fistpll
xchg
add
jl
and
stos
add
push
aaa
aaa
xchg
jge
or
rcr
insl
loope
scas
or
mov
push
push
imul
mov
ja
sti
mov
pushl
sbb
into
popa
sub
pop
jl
add
pop
gs
or
outsl
mull
push
outsl
lcall
pusha
mov
sbb
fsubrs
roll
out
fimull
sub
addl
test
push
ret
cmp
push
data16
aas
lret
cmp
inc
sub
in
or
add
pusha
enter
jns
pop
outsl
jge
pop
out
dec
call
test
das
cmc
lea
cmpsb
xchg
and
jb
pop
dec
mov
and
mov
test
mov
arpl
fnsave
jg
inc
adc
and
jg
bound
inc
pop
mov
cmpl
daa
push
jl
aaa
outsb
lcall
add
mov
div
int
dec
sub
xchg
push
mov
push
fmull
push
pusha
mov
or
lods
jno
push
cmp
and
mov
push
add
sbb
inc
mov
dec
adc
popa
adc
int3
aad
andb
insl
testl
push
mov
movsb
stc
mov
jmp
out
mov
adc
negb
xor
ret
addb
and
adc
ljmp
fldcw
mov
inc
cwtl
das
cmc
jecxz
mov
add
xchg
or
loope
mov
mov
call
roll
imulb
sub
dec
fmul
jl
xor
xor
xchg
pushl
add
in
clc
or
and
push
xor
xchg
lods
sub
lock
add
mov
inc
lock
adc
and
inc
js
push
or
jns
clc
mov
adc
shlb
rolb
mov
in
mov
sub
xchg
leave
test
rcrl
adc
add
popfw
mov
aad
out
dec
or
mov
test
mov
imul
cltd
insl
add
or
dec
test
xchg
sub
bound
add
push
or
or
enter
cwtl
push
les
inc
movsb
addl
inc
mov
adc
inc
call
mov
dec
or
ja
sbb
roll
pop
inc
lcall
sub
add
sub
ud0
inc
sbb
clc
lahf
or
shrl
add
mov
push
ret
adc
jbe
mov
dec
es
adc
push
iret
jge
aas
xor
pop
roll
cmp
sub
iret
mov
mov
sub
inc
test
pop
xor
das
test
jne
inc
xor
dec
add
jmp
mov
add
push
sub
leave
sbb
rclb
mov
pop
push
clc
mov
bound
or
add
outsb
scas
xor
sbb
add
lock
loope
sub
addl
dec
jge
adc
cmp
mov
loop
and
inc
loopne
fld
insb
ret
iret
aam
or
push
xor
xchg
fwait
xorl
lret
xchg
sbb
push
or
sub
sahf
subl
mov
cmp
int3
mov
lods
adc
jl
and
push
loopne
icebp
inc
outsl
shll
out
mov
pop
pop
mov
sbb
cmp
cmp
add
mov
cli
cltd
and
mov
push
cmp
push
push
xor
data16
sub
addb
ret
test
ret
pop
jo
loop
mov
mov
sub
xabort
or
inc
addb
add
push
mov
sbb
xor
jo
ss
add
loopne
decb
rcrb
outsl
mov
dec
and
sbb
inc
cmp
jmp
pop
shrl
mov
mov
insb
mov
fisubl
mov
fwait
andb
dec
push
test
fisubrs
inc
mul
jb
and
testl
cs
mov
movsb
in
and
sub
ljmp
mov
add
dec
addr16
bound
js
adc
arpl
or
insb
mov
cmc
in
jg
js
pop
mov
into
cwtl
dec
adc
xlat
jp
pushf
mov
mov
add
jno
pop
fsubr
inc
dec
push
mov
xlat
hlt
mov
imul
cltd
push
out
pop
pop
jge
aad
xchg
or
push
mov
rcrl
xor
icebp
cmpsb
aaa
pop
xor
loope
lret
or
or
test
mov
sbb
or
mov
clc
sub
mov
add
add
jne
fldl
push
push
mov
bound
push
aaa
or
popa
les
inc
adc
sub
mov
addb
mov
popl
pop
dec
in
adc
out
push
cld
repz
sub
inc
add
pusha
or
push
icebp
das
mov
addl
scas
jle
stos
cli
rcr
dec
in
mov
mov
adc
dec
test
pop
mov
push
shlb
jbe
mov
cmpb
jecxz
fmuls
repz
push
sahf
sbb
xchg
jg
je
stc
shlb
jbe
jne
sbb
inc
cwtl
pop
iret
jbe
icebp
cmpsb
or
mov
hlt
dec
or
test
push
sbb
dec
cwtl
lret
or
pop
testl
popf
data16
sub
fstp
inc
mov
pop
jge
orb
ja
or
inc
jmp
cs
fldenv
sti
xchg
roll
push
pop
cmp
push
sub
xor
push
jnp
aad
stc
sbb
pop
add
mov
out
jecxz
lods
and
dec
ljmp
jg
cld
shll
into
mov
push
or
mov
sbb
mov
leave
xchg
inc
inc
mov
xchg
in
lods
mov
iret
and
push
cmp
stos
pop
inc
in
and
jo
pop
fwait
bound
mov
ror
outsb
fdivrs
and
pop
mov
aad
push
inc
jg
cmpsl
cmp
push
mov
push
jle
ret
sub
cmp
jmp
push
mov
push
nop
push
mov
push
xorl
cwtl
sbb
ss
lahf
lds
outsl
pop
and
rorl
sub
and
scas
or
insb
mov
mov
out
jecxz
cmp
sbb
cs
outsl
cld
push
sub
notb
mov
pop
sbb
lds
orl
and
or
mov
fldl
cltd
in
adc
pop
lcall
sbb
test
xor
daa
sub
fsts
sbb
push
pop
adc
stos
arpl
repz
movsb
sbb
mov
push
push
push
out
in
sbb
lret
xor
push
mov
cld
add
add
mov
dec
ja
das
add
je
dec
pop
fcompl
add
push
mov
das
or
test
sbb
imul
lods
jne
pop
cmpsb
movsl
data16
bound
sub
cmp
and
mov
iret
das
push
xchg
jnp
dec
jne
shlb
lcall
sbbb
roll
jp
cmp
movsl
outsl
pop
jae
fs
or
icebp
stos
xor
jmp
leave
inc
sbb
inc
fwait
or
lea
fistpll
xchg
in
and
les
push
mov
pop
out
imul
mov
xchg
add
pop
xchg
adc
push
arpl
ss
adc
popf
inc
xchg
addr16
clc
adc
adc
cmpsb
cwtl
jae
les
loopne
movsl
sbb
sbb
das
mov
outsl
cmp
shlb
fwait
pop
loopne
and
jns
xor
push
cltd
jmp
jo
test
pop
mov
or
popa
sbb
and
push
incl
mov
push
outsl
inc
xchg
add
add
dec
in
test
push
or
sub
inc
or
cmp
pop
int3
jbe
aaa
shrb
aaa
push
or
add
sub
push
sahf
movsl
es
arpl
and
jecxz
das
fdivrl
cmp
cmp
js
mov
push
dec
cmp
and
iret
incl
stos
mov
out
and
addr16
lcall
xor
sub
aaa
clc
pop
xor
jge
cmpsl
xor
cmp
incb
loop
sarb
dec
sbb
pop
lds
jo
cmp
add
xchg
mov
inc
mov
popa
mov
js
movzwl
pop
lods
lea
aaa
cmp
mov
loopne
jo
leave
xchg
mov
or
pusha
add
xlat
out
cld
outsb
xor
hlt
in
movsl
cmp
jmp
xchg
dec
imul
mov
je
mov
or
push
mov
jmp
andb
cli
sbb
shll
xor
mov
pop
insl
ret
ds
arpl
enter
push
inc
and
adc
lea
shlb
jns
sbb
sbb
lods
xor
and
push
loopne
mov
in
push
inc
dec
rcrb
stos
test
stos
loope
cwtl
sub
movsb
mov
nop
mov
and
iret
or
adc
daa
dec
pop
dec
xchg
xchg
testb
jge
pop
push
adc
mov
loope
aaa
pop
push
inc
mov
pop
mov
adc
dec
in
inc
fwait
mov
in
mov
cmc
addr16
fadd
nop
sbbb
add
sbb
sbb
dec
hlt
xor
and
push
jae
repnz
or
xor
inc
shrl
inc
fiaddl
inc
hlt
lock
movsl
push
push
popa
pop
and
cmp
cli
xchg
xchg
or
add
sbb
sub
dec
pop
hlt
shll
into
outsb
mov
je
sub
dec
and
into
push
and
repz
daa
push
icebp
jno
test
add
mov
inc
lock
inc
add
xchg
jge
pushf
aam
dec
inc
movb
movlps
rolb
pop
fcoms
test
push
fadds
cmp
test
pop
fdivs
jge
inc
mov
cs
popa
add
sub
jmp
push
loopne
mov
into
cmp
sbb
jb
rcll
pop
inc
adc
xor
jo
or
minps
testl
inc
adc
mov
sbb
or
pushf
test
rcr
jne
or
les
movl
movsb
je
jg
mov
shl
sti
sub
cmpsl
rclb
add
add
fld
sahf
sub
push
out
int3
pusha
push
add
bound
or
cwtl
push
mov
cmpsb
cli
rcr
xchg
adc
inc
xor
jmp
stos
into
lock
ffreep
mov
mov
adc
push
xchg
stc
push
popa
cmp
cmp
xor
push
mov
std
fwait
mov
sbb
jecxz
gs
dec
in
inc
es
inc
outsb
inc
sub
mov
and
cmp
jg
movsl
jbe
addb
movb
mov
adc
push
push
pop
dec
xchg
mov
cmp
and
stos
js
je
lods
loop
sub
ret
jp
add
test
sub
inc
inc
pushf
pop
cmc
or
aaa
xor
adc
call
inc
mov
jmp
mov
sub
inc
inc
sahf
les
adc
push
shrb
push
add
sub
xor
jmp
sbb
setge
add
cmp
add
aad
add
xchg
push
sti
dec
sub
jecxz
lcall
bound
adc
xchg
jp
mov
cwtl
mov
jb
pop
pop
sar
into
mov
jmp
jb
push
sbb
fsts
inc
add
mov
and
adc
adc
fcmovnb
inc
xchg
jne
and
ret
dec
xchg
ds
mov
gs
adc
add
pop
xor
inc
fidivs
mov
fwait
inc
mov
sub
cmp
adc
xor
mov
sbb
adc
pop
push
push
push
aam
inc
stos
adc
ja
dec
add
lds
shrl
repnz
lods
xchg
mov
dec
int3
inc
inc
in
hlt
sahf
insl
mov
shll
add
dec
imul
sub
mov
mov
mov
jmp
adcb
xchg
pop
mov
sbb
shll
xchg
mov
push
sar
inc
mov
xchg
adc
pop
call
xor
loopne
in
jbe
or
lds
pop
cld
fld
aaa
int3
in
out
mov
mov
pop
dec
or
movsl
mov
jbe,pt
mov
mov
jns
sbb
test
cwtl
add
pop
inc
insb
das
js
repnz
decl
xchg
loop
popa
xchg
std
mov
fs
xor
jg
cmp
fstps
cmpsl
sub
and
ret
push
jae
int
add
mov
pop
xchg
sbb
sti
sub
xchg
cmp
inc
out
or
dec
mov
movsb
ljmp
mov
jecxz
sbb
xlat
jbe
xchg
orl
inc
push
adc
xor
scas
add
mov
sahf
pop
cmp
mov
jg
sub
test
cld
jle
pmulhw
mov
sub
pop
pop
or
hlt
and
imulb
push
mov
aaa
hlt
out
mov
jmp
jbe
push
mov
dec
push
pop
cmp
jns
push
aam
rorl
sbb
jo
or
call
adc
inc
mov
lea
xchg
out
inc
xchg
inc
push
push
lahf
mov
cmpl
das
or
pop
mov
jmp
push
push
push
enter
sbb
inc
imul
push
xor
dec
sbb
aas
and
xor
pusha
mov
sbb
mov
cmp
mov
arpl
dec
sbb
pop
movsl
add
push
and
repnz
icebp
mov
push
xchg
das
ljmp
hlt
test
or
loop
insb
jge
dec
xchg
pusha
inc
mov
or
adc
mov
ret
adc
adc
outsb
icebp
incl
cs
adc
add
testl
cmp
clc
cmp
push
push
incb
mov
bound
mov
arpl
ljmp
clc
inc
mov
jl
inc
mov
fs
pop
mov
mov
es
icebp
pop
jne
xchg
int
jmp
mov
xchg
push
leave
sbb
jbe
outsl
in
mov
lret
rcll
sbb
dec
mov
dec
jl
add
push
mov
sub
mov
fsubrs
cltd
insb
shlb
adc
call
lret
nop
test
cmpsb
aam
mov
pop
cli
lock
shrl
push
jge
test
adc
xchg
lcall
and
inc
notl
test
push
pop
mov
mov
push
push
sbb
jp
push
insl
out
xor
and
inc
or
cmp
xor
jae
dec
nop
repnz
or
icebp
jb
adc
hlt
dec
insl
in
mov
jns
leave
push
sbb
cmpsl
call
sbb
ljmp
fs
mov
rorl
test
and
adc
jge,pn
orb
movsb
xchg
shll
jle
mov
fwait
std
les
outsl
mov
inc
pop
ret
ja
mov
push
js
inc
incl
frstor
sub
mov
add
push
xor
or
lods
clc
lea
aam
xchg
sub
mov
shrb
lea
arpl
cmpl
iret
fists
mov
imul
in
lds
int3
das
sub
xchg
pop
or
inc
or
or
add
inc
jmp
dec
push
movsb
push
mov
sub
lock
xor
cs
shll
add
into
mov
aam
xchg
testb
ret
adc
mov
fs
mov
je
xlat
int3
lcall
jo
inc
sbb
xchg
mov
push
popf
jnp
das
lea
inc
push
and
ja
mov
rclb
fsub
jecxz,pn
add
sub
pusha
jecxz
call
or
rorb
shrl
dec
imul
iret
and
ret
insb
popf
cmp
outsl
cmc
cltd
or
mov
cmp
loope
sub
and
mov
cld
push
jmp
adc
inc
aas
adc
and
inc
data16
pushl
mov
lahf
test
jg
sbb
jae
jno
gs
or
loope
ljmp
xchg
fcomp
dec
pop
push
mov
mov
call
adc
jmp
or
mov
lea
outsb
outsb
cmp
fcoms
outsl
mov
stos
in
sti
mov
rorl
into
dec
aaa
inc
in
inc
stc
fsts
lods
in
xor
jb
mov
pushf
xchg
jmp
cmp
jns
adc
mov
adc
aam
mov
mov
jae
addr16
and
repz
jp
mov
pop
fildl
xchg
lcall
aaa
ljmp
xor
lds
add
cmpsb
aas
push
jns
add
ffree
pop
popl
mov
pop
ljmp
push
inc
pop
adc
push
icebp
test
js
in
pop
lock
pop
mov
sahf
push
inc
mov
adc
test
in
fwait
jbe
sub
and
xor
stos
cli
imulb
ss
into
or
outsl
sbb
pop
scas
cmp
cmp
pusha
jecxz
je
xchg
fildl
lret
in
rcll
outsl
xchg
fs
fwait
and
jg
ret
loop
shlb
pop
dec
jp
lcall
decb
xchg
jno
jns
and
es
add
dec
daa
loopne
ret
lret
and
pop
cmp
xor
add
add
out
push
cmpl
jg
push
mov
pop
cli
adc
or
adc
fistl
clc
es
sbb
ds
clc
out
pop
mov
not
push
pop
lret
mov
outsl
pushf
pop
test
lds
fisubrl
lock
or
xchg
das
xchg
cmp
aaa
push
push
ja
dec
add
adc
hlt
inc
or
icebp
add
sub
xor
inc
mov
fadds
pusha
incb
test
cmp
insb
test
stc
inc
add
inc
shll
idivl
dec
cmp
in
imul
pop
daa
dec
sbb
mov
ljmp
dec
push
lods
idiv
aas
add
enter
add
and
add
mov
rcr
loop
pop
jo
and
outsl
pop
pop
xor
and
loopne
add
lea
jl
sub
add
mov
cmp
arpl
insb
ljmp
xor
loopne
icebp
inc
pop
stos
add
repz
pop
ret
pop
inc
outsb
mov
repnz
push
mov
sub
insl
sbb
imul
sbb
pop
out
aaa
push
fdiv
andb
mov
push
stos
pop
stos
jg
test
pop
out
int3
out
jl
loope
js
outsl
ret
push
and
fildl
negl
xor
sti
mov
jo
mov
mov
lods
mov
aas
movsb
int3
outsl
xchg
pop
insl
mov
pop
adc
pop
lahf
adc
mov
sbb
xor
push
repnz
add
lods
popf
and
push
cld
in
mov
mov
stc
sbb
shl
mov
push
cwtl
int3
inc
mov
jmp
or
aaa
paddsb
mov
adc
push
or
pop
pop
cli
mov
int
fisttpl
out
mov
mov
or
mov
xor
add
mov
xchg
popf
fwait
pop
jo
fistpl
aas
mov
ret
dec
fisttpl
push
inc
pop
dec
out
sbbb
test
push
movsl
push
cli
add
out
dec
shlb
lea
sbb
mov
pop
insl
out
xchg
cmp
out
xor
xchg
sahf
jmp
jo
add
mov
scas
xor
in
loopne
mov
jnp
xor
cltd
dec
cmp
mov
dec
sbb
jbe
inc
inc
out
lret
and
mov
mov
adc
push
pushl
hlt
and
sub
mov
pop
dec
fldl
or
out
mov
push
loopne
or
xrstor
loope
loopne
and
lcall
test
mov
mov
push
add
pop
jo
mov
jmp
mov
mov
jmp
dec
adc
rorb
dec
test
mov
sbb
add
cs
xor
mov
test
mov
gs
dec
and
decb
pop
in
adc
scas
inc
ljmp
pop
loope
adc
pop
jb
inc
fisttps
repz
loopne
jl
sar
mov
jg
xchg
fwait
xor
sbb
rclb
adcb
inc
ret
cld
push
outsb
mov
stc
daa
and
pop
push
or
mov
cli
push
mov
push
incl
cmp
dec
pushf
int3
in
fdivs
je
call
pop
cs
sarl
out
or
sbb
or
jmp
out
dec
or
mov
mov
subl
pusha
sub
ret
mov
pop
ficoml
cmpsb
out
jecxz
mov
sarb
aaa
xchg
out
push
aas
xor
push
lahf
ds
icebp
lahf
pop
std
mov
push
das
es
push
lea
movsb
aad
loopne
push
bound
clc
mov
add
jbe
sub
pushf
push
add
test
xlat
mov
adc
rorb
lods
jno
outsl
jg
mov
lock
push
inc
xchg
mov
dec
ret
or
test
decb
sbb
inc
sar
adc
btc
and
sar
nop
mov
aas
jns
in
sbb
adc
test
fiadds
mov
stc
outsl
cmpsl
pop
mov
jae
ljmp
lds
sub
ret
stc
bound
shrl
push
hlt
rorb
dec
or
inc
pusha
push
insb
lock
cli
aas
push
cld
cmpsb
or
test
add
sbb
dec
sahf
push
loope
les
mov
adc
fwait
xor
fadd
push
insb
test
sbb
hlt
testl
add
jno
ljmp
xlat
hlt
test
lds
mov
ret
xchg
scas
sbb
push
mov
xchg
filds
sbb
inc
cmp
or
cli
daa
dec
pop
mov
dec
pop
cmc
cmp
into
xchg
lock
icebp
pop
dec
ljmp
movsb
bound
mov
sbb
mov
stos
ja
adc
or
sbb
les
mov
pop
adc
sbb
out
int3
in
mov
jmp
mov
cmpsb
sub
aam
and
sub
inc
xchg
orb
adc
add
push
pushf
lret
jnp
stos
imul
orb
pop
push
adc
mov
iret
test
add
ret
add
mov
int3
inc
orb
jg
mov
and
add
iret
or
insl
add
scas
push
sbb
in
xor
adc
or
fwait
les
negb
and
sbb
cvtdq2ps
fdivrs
pop
test
mov
enter
sbbb
push
mov
jns
sub
lcall
push
ret
imul
fwait
mov
push
icebp
mov
jge
cmp
and
rcrb
cmp
sbb
mov
daa
mov
xchg
add
outsb
stc
dec
add
push
dec
subb
mov
dec
hlt
mov
or
loopne
mov
call
hlt
pusha
add
pop
test
inc
add
pop
xchg
popa
or
mov
inc
je
add
inc
es
jp
js
lret
out
pop
cmp
and
dec
push
leave
or
add
mov
adc
or
push
stos
jbe
sub
cmc
call
lds
gs
or
loopne
inc
daa
cmp
xchg
loop
and
loopne
add
sbb
lcall
sbb
jmp
adc
sti
inc
dec
pop
inc
cli
mov
sbb
imulb
push
in
sub
std
mov
sub
push
jecxz
adc
jp
or
stos
cwtl
add
mov
nop
ficomps
add
inc
sub
add
cmp
fbld
repz
cmp
cmp
push
pop
icebp
rcrb
lock
and
je
jbe
add
loopne
inc
xor
and
fimull
dec
sub
aam
sbb
das
or
ficoms
in
push
push
cmp
mov
nop
test
nop
push
sub
fwait
inc
or
mov
and
inc
cli
ficoms
cs
jecxz
inc
and
push
andl
push
movsb
fdivr
repnz
test
adc
push
aam
movb
jp
adc
cld
mov
rcl
je
xchg
call
xor
std
lods
jg
push
mov
lcall
int3
test
add
inc
insl
or
or
mov
xor
sub
mov
xorl
out
scas
stos
ljmp
aam
xchg
insb
inc
jge
mov
adcl
push
enter
push
enter
dec
cmp
push
mov
dec
mov
add
jns
fldcw
xor
mov
stc
shrl
call
xchg
jns
pop
mov
pop
int3
mov
adc
daa
mov
adc
sub
rclb
mov
push
and
icebp
outsl
mov
jl
add
add
pop
int
xor
incb
clc
aaa
and
xchg
shll
std
dec
popa
jae
daa
scas
out
xchg
fildll
fsubrs
stos
dec
pop
incb
inc
lods
lock
rcl
jmp
iret
push
jnp
stc
bound
lods
jne
icebp
aaa
inc
mov
aad
lret
inc
jg
cmp
cmp
insl
mov
std
call
sub
pop
and
cmp
call
addr16
popa
cmp
sub
mov
stc
or
mov
loope
aaa
or
jne
ss
push
push
push
fbld
fwait
pop
push
bound
insl
fdivrs
add
insl
hlt
lods
fnsave
push
sub
xchg
sbbl
imul
mov
lahf
xor
add
push
mov
incl
inc
jl
shrb
xor
jnp
or
add
clc
pop
mov
call
pop
les
in
shufps
adc
incl
jns
loop
fs
pop
fisttps
mov
mov
push
dec
jp
jle
das
movsl
sbb
das
mov
fistpll
or
and
inc
mov
mov
push
mov
push
std
mov
sbbl
ret
hlt
rorl
clc
ret
and
mov
pop
clc
or
mov
icebp
sub
roll
pop
insl
call
dec
loope
pop
add
and
add
nopl
xlat
sub
into
insl
test
xchg
mov
in
dec
xor
and
jo
in
ret
jae
dec
adcl
xor
mov
cmp
fcmovnbe
inc
xor
adc
dec
fimuls
and
arpl
push
pusha
or
les
and
hlt
test
jno
popf
mov
in
pushl
or
shr
lods
cmp
hlt
dec
fiadds
lea
enter
jg
jo
mov
rcl
and
es
cmpsb
ljmp
mov
push
mov
sbb
mov
lds
mov
jecxz
push
xchg
dec
lret
dec
pop
xchg
xchg
bound
mov
mov
subb
add
test
decb
cwtl
mov
mov
or
pop
ds
pop
clc
pop
shll
jo
mov
fimuls
mov
mov
std
fistl
xor
inc
dec
mov
xchg
aaa
insl
pop
aaa
cmpsb
cmp
push
arpl
cli
fwait
aam
fildll
jno
lock
mov
out
xor
mov
pop
clc
stos
fs
pop
add
lods
or
cs
sti
jg
loopne
cmp
xchg
dec
sub
sbb
call
jo
mov
mov
adc
std
lea
std
lcall
rcll
clc
decl
add
inc
aas
hlt
outsb
mov
xchg
rol
insb
arpl
cmp
mov
popa
outsb
xchg
cltd
test
popa
inc
add
xor
in
mov
pusha
sti
test
mov
ss
popa
stc
adc
push
into
xbegin
cli
ret
pop
jge
daa
nop
xlat
push
fcmovnu
pop
sub
and
cmpsl
out
xchg
fcomps
add
push
mov
lods
xor
cmp
lods
xchg
push
mov
cmc
movsl
movsl
push
cs
dec
icebp
es
xor
in
call
loopne
adc
pop
shrb
cmpsb
pusha
clc
mov
fimuls
adc
push
mov
push
fistps
adc
or
lods
call
dec
add
out
mov
mov
or
push
ficoml
fisubrl
aaa
inc
fldt
ljmp
movsl
ret
adc
inc
mov
loopne
mov
sub
and
cld
pop
stos
jl
daa
jecxz
jecxz
cld
pusha
nop
pusha
and
gs
xor
jo
sar
call
jo
mov
dec
or
jae
or
push
adc
into
push
pushf
mov
and
js
ret
sub
add
andb
add
or
repz
inc
test
frstor
pop
ficoml
es
in
outsb
push
add
mov
mov
and
paddd
sub
pop
mov
scas
push
cltd
pop
jne
lods
mov
pop
jmp
popa
sub
xor
xchg
mov
and
and
icebp
mov
push
ret
stos
jb
sbb
or
loop
cli
out
cmp
int3
out
ret
mov
js
xor
sub
push
xor
or
mov
xor
negb
inc
call
jge
ja
cmp
mov
mov
adc
add
and
mov
pop
inc
mov
shlb
hlt
and
cmp
inc
nop
mov
push
push
xor
js
fmulp
rolb
repnz
cli
es
scas
mov
ror
inc
addr16
mov
inc
xor
ss
xchg
es
xchg
or
lds
lods
dec
sbb
clc
clc
push
push
sbb
enter
pop
ja
adc
dec
jnp
sub
add
popa
add
xorl
and
mov
loopne
dec
adc
inc
mov
sbb
bound
jbe
add
cwtl
in
enter
xorl
sub
jg
add
adc
lahf
lea
mov
inc
and
sub
mov
shlb
pop
filds
pop
push
cld
loope,pn
ror
sbb
mov
pop
lods
test
push
cmpsb
mov
cmpl
xorb
loope
std
lea
int
in
sub
mov
adcb
pusha
aas
js
jle
mov
and
or
pop
jl
or
sbb
fists
mov
repnz
dec
mov
inc
pop
lock
mov
push
roll
and
scas
mov
mov
pop
and
rcr
jbe
fdivrl
popa
jl
sti
dec
dec
push
je
fcmovnb
ds
add
add
outsl
in
sbb
popa
or
cmp
add
frstor
dec
jno
fcomps
adc
dec
clc
sub
sbb
or
mov
cmp
xchg
cmpsb
ljmp
pop
jne
or
or
mov
negb
es
cs
add
jo
add
mov
mov
xchg
loopne
jmp
adc
ficoml
popa
jle
mov
in
call
xchg
push
loopne
xor
inc
push
dec
jne
aam
and
adc
add
gs
or
fidivl
out
xchg
es
xchg
sbb
jl
pop
xor
ss
push
inc
scas
incb
cs
jo
addb
adc
sahf
test
sub
add
std
add
dec
add
stos
js
jmp
sbb
dec
fimull
aad
rcll
push
or
cmp
in
push
sub
or
inc
mov
fiadds
ds
mov
fidivrs
lret
push
pop
cmp
sbb
hlt
loope
icebp
in
pop
jg
into
xchg
in
and
or
mov
adc
adc
xlat
hlt
js
dec
jbe
cli
in
mov
test
lods
mov
jg
fldcw
mov
pop
mov
outsl
cmp
aas
adc
sbb
decl
fisttps
cmp
cmp
pop
sahf
scas
cld
mov
adc
and
xor
sarl
jne
mov
movsb
add
jg
mov
xor
jo
sub
mov
add
mulb
inc
dec
xor
in
pop
rclb
mov
pop
popf
ja
or
sbb
outsb
insb
jp
add
sub
xor
fs
dec
pop
pop
mov
jne
adc
mov
pop
mov
leave
jae
mov
sti
ljmp
mov
xor
inc
cld
sub
test
inc
movsl
rcrl
fnstsw
aaa
lahf
aam
jne
lcall
xchg
icebp
rcl
ret
subb
xchg
pop
push
and
mov
mov
popa
incb
test
sbb
insl
mov
inc
dec
in
push
ficoml
shrb
pop
sub
ja
pop
clc
fisttpl
fisttpll
nop
cwtl
push
push
cltd
and
lcall
add
push
pusha
jge
add
xchg
popa
pop
inc
push
pop
pusha
pop
pop
add
sar
sti
mov
pop
popa
ds
mov
inc
pop
loop
and
xchg
test
mov
xor
test
jae
jge
movsb
dec
call
out
imul
leave
cmp
daa
add
push
lcall
lea
and
lods
call
dec
dec
mov
sti
mov
fistpl
insl
mov
lods
push
rcr
leave
push
pop
pop
mov
pusha
in
dec
inc
movsb
sbb
icebp
sbb
stos
mov
lea
ja
subb
jg
int3
mov
inc
dec
inc
jl
inc
out
jmp
sub
fs
mov
mov
inc
dec
mov
insb
je
cmc
stos
mov
push
fmull
ret
jecxz
or
icebp
inc
cmc
in
sbb
insb
mov
cmp
mov
or
pop
push
leave
sub
jge
test
loop
call
mov
jnp
mov
in
mov
mov
nop
sahf
inc
stos
testb
mov
mov
shl
push
sti
leave
cmp
gs
es
pusha
sbb
lret
dec
in
out
imul
in
jecxz
pushf
add
out
jecxz
add
mov
imul
xchg
dec
aaa
shlb
and
adc
sbb
adc
mov
popa
lock
fbstp
addr16
test
mov
mulb
rorb
loop
mov
and
push
dec
lods
sub
stos
mov
ds
or
add
dec
mov
inc
xor
mov
dec
sbb
xor
into
popa
adc
jns
shrb
orl
mov
adc
or
sub
xchg
push
cmp
push
sbbb
jbe
cmc
icebp
mov
mov
cmp
div
add
out
out
mov
rolb
pop
data16
js
adc
iret
rcll
insb
xchg
callw
shlb
inc
add
sbb
adc
mov
push
mov
push
rcl
mov
or
test
ficoml
pop
loopne
sub
inc
sbb
xchg
mov
push
adcl
int3
aad
pop
mov
rolb
cwtl
cwtl
dec
add
inc
push
xor
inc
cmpsl
loope
outsb
push
jno
xchg
mov
enter
test
rcrl
fcompl
scas
mov
sbb
xor
ret
ret
push
dec
dec
or
adc
inc
js
push
test
fisttps
sbb
pop
add
scas
enter
adc
fstpl
fsubrp
repz
shll
fildl
or
or
sub
in
int3
insb
cmp
inc
pushf
sbb
adcw
sbb
xor
outsl
mov
cld
or
call
pop
push
jl
sub
loope
das
andb
xor
xor
and
xor
test
adc
addb
sub
pusha
inc
dec
mov
cmpsb
ja
or
fs
fcoms
sahf
push
icebp
or
sbb
out
dec
repnz
cmpsl
pushf
jge
inc
pop
idivl
dec
int3
pop
or
pusha
sbb
inc
add
fwait
mov
cmp
loopne
mov
mov
xchg
inc
xor
mov
ret
inc
jmp
sub
sub
fimuls
mov
ljmp
inc
jge
out
xchg
inc
mov
cmpsb
orb
add
and
adc
lods
cmp
mov
push
xlat
rol
or
int
mov
adc
inc
mov
into
cs
fcom
mov
cwtl
je
and
jne
mov
dec
add
imul
fstpt
cmpsb
lock
and
adc
jl
call
sbb
xor
pusha
iret
xchg
add
cld
jbe
sub
mov
repz
lcall
hlt
cltd
add
dec
outsl
pop
mov
cmp
in
stos
insl
inc
add
jb
and
lcall
repz
push
mov
or
cli
add
adc
jb
lods
outsl
mov
cmpsb
jne
cmp
lock
jmp
jo
es
mov
vpmaxsw
jecxz
pushf
aad
adc
movsb
and
insb
cmp
add
dec
inc
xchg
adcb
mov
xor
fstps
lcall
out
and
or
mov
rcrl
pusha
popf
aam
mov
cli
into
fcomp
decb
add
movsl
test
es
test
daa
mov
inc
inc
lahf
dec
add
test
sub
lock
jnp
push
or
mov
nop
sahf
add
sub
inc
mov
mov
es
jb
sahf
cmp
adc
adc
lret
fcmovu
cmp
fcompl
or
stos
enter
xchg
lahf
lahf
mov
fimuls
xchg
shll
lods
lcall
out
scas
mov
ljmp
mov
in
jbe
or
sub
or
lahf
fwait
and
or
push
add
and
push
mov
popa
mov
movsb
outsl
xor
and
dec
jge
adc
sbb
sub
add
sub
push
jge
shlb
in
mov
jbe
and
add
xor
sub
inc
data16
ret
rcrl
daa
lods
adc
or
jbe
hlt
push
gs
inc
dec
pop
in
out
add
inc
roll
xchg
fs
cld
and
xor
leave
ret
sbb
inc
inc
sbb
adc
pop
adc
scas
xlat
sbb
jo
ret
push
sbb
stos
cwtl
fdivr
out
aad
mov
xlat
pop
add
aad
cwtl
push
faddl
cwtl
sarb
mov
add
push
nop
js
cltd
xchg
mov
mov
std
cmp
div
push
dec
outsl
xor
int
dec
push
jecxz
mov
add
ret
lock
sbb
or
int
iret
cmp
jp
sbbb
fistpll
jns
or
std
adc
xchg
fucomi
rorb
sbb
jl
imul
cli
xchg
xchg
fists
add
scas
bound
and
das
or
dec
aam
aam
stos
sbb
ljmp
loopne
pop
and
or
xor
fiaddl
or
lahf
lea
inc
int3
fisubs
lods
cmp
daa
push
aas
in
negb
mov
ljmp
sub
and
or
test
mov
push
loopne
stos
in
into
int
pusha
mov
lock
push
lods
xor
dec
testb
pop
outsl
adc
cmp
aaa
lock
rcrl
inc
dec
xlat
sub
lock
mov
testb
jo
insb
push
mov
jp
lock
sbb
adc
adc
or
pusha
or
in
lock
add
fdiv
sti
lcall
sub
adc
ljmp
jnp
pop
inc
adc
in
push
mov
adc
push
icebp
sbb
mov
dec
loopne
gs
dec
arpl
and
decl
push
shlb
add
and
addl
rcrb
and
in
dec
mov
add
test
shl
ret
aaa
sbb
xlat
mov
mov
shrb
and
imul
rcll
jl
lock
xchg
ret
sbb
dec
fiadds
add
pop
gs
pushf
lahf
cwtl
mov
aas
jmp
cwtl
push
dec
test
andl
icebp
movsl
pop
cli
dec
mov
fmull
ret
imul
push
and
enter
jl
add
lcall
mov
mov
sti
add
lea
outsl
inc
adc
push
lahf
daa
lea
fcmovnu
icebp
bound
mov
nop
test
xor
aaa
mov
mov
call
add
test
cld
jle
mov
mov
add
sub
xor
cmp
out
or
jno
mov
mov
mov
sbb
pop
les
rorb
lret
fucomp
jg
fsubrs
jae,pt
bound
addr16
xor
jne
cs
inc
cmp
sbbb
mov
jae
cmp
add
dec
xchg
jae
notb
sub
jo
jns
push
hlt
fistpl
xor
adc
popa
dec
mov
add
mov
xchg
add
icebp
imul
or
bound
cli
negb
jl
scas
xchg
clc
pop
pop
cwtl
pop
jg
int
in
stos
and
fldt
addl
cmpsl
or
aas
push
dec
clc
pushl
xor
add
negl
push
xchg
pop
add
mov
add
push
mov
aaa
std
sub
es
pop
cmp
dec
add
push
inc
and
scas
imul
push
je
test
xchg
xchg
sbb
out
push
ljmp
xchg
xor
push
push
je
nop
call
insl
call
mov
sahf
sbb
mov
jmp
shll
sub
mov
adc
sarb
incb
jmp
and
in
pop
or
stos
push
cmp
jae
popf
fisttpll
mov
stos
add
push
jge
das
mov
lods
aas
mov
cmpsb
mov
aad
int3
std
in
test
fmuls
inc
adc
lods
fcomi
or
out
xchg
mov
xchg
mov
fisttpl
sbb
in
call
jge
lods
or
add
inc
mov
rorl
mov
pop
sti
cmp
mov
in
add
mov
adc
sub
jo
lods
popf
xchg
incb
add
or
push
nop
mov
jno
pop
cmc
dec
xchg
xor
inc
mov
mov
inc
das
mov
dec
mov
mov
xor
or
xchg
gs
idivl
jle
sbb
jbe
add
adc
push
sub
or
subl
sar
xlat
scas
or
mov
push
aaa
popa
inc
jg
push
push
lods
stos
clc
jl
aaa
xor
dec
adc
add
rcrb
push
push
mov
inc
insb
das
add
sbb
and
jne
push
sbbl
xlat
fdiv
insb
mov
cmp
and
mov
fcomps
subl
frstor
inc
or
adc
inc
xor
inc
xchg
out
add
adc
cmp
add
test
xchg
loopne
jmp
lcall
sbb
scas
je
xchg
and
cmc
sahf
or
pushf
adc
cmp
aas
popa
sub
push
sbb
out
sub
cmp
roll
inc
mov
sbb
aad
inc
popf
mov
pop
fcoms
push
lret
dec
push
push
sub
xchg
mov
lock
ret
mov
dec
daa
inc
adc
mov
inc
lret
sbb
and
dec
mov
icebp
mov
filds
test
rorl
xor
add
mov
fcomp
dec
cmp
mov
add
xchg
shrb
in
data16
int
lods
xchg
xchg
ja
sub
dec
add
rcr
xchg
sbb
insl
add
out
push
daa
pushf
enter
mov
call
inc
and
adc
pop
pusha
inc
xor
dec
adc
outsl
icebp
js
xchg
call
fldt
add
cmp
add
xlat
fnsave
add
adc
mov
sbb
orb
ret
add
or
xor
xor
test
push
xor
or
and
std
call
loopne
arpl
repnz
cmp
push
movsb
insl
mov
dec
clc
sub
out
mov
push
xor
jo
or
mov
adcl
dec
push
pop
aas
test
or
jp
push
cltd
add
test
xchg
test
cli
test
pop
shl
cmc
iret
or
mov
dec
lods
fcoms
xchg
sar
adc
adc
test
xor
iret
clc
sub
mov
in
adc
outsl
in
push
adc
and
aaa
push
cltd
inc
inc
mov
dec
jecxz
mov
out
mov
test
cmp
xor
int
loopne
or
sbb
gs
xchg
add
add
stos
mov
adc
push
push
les
cmp
pop
mov
adcb
xlat
sub
cld
das
and
sbb
sahf
add
mov
pushf
sub
mov
xor
xlat
mov
lahf
icebp
push
push
inc
mov
test
mov
push
aam
push
repnz
pop
cmp
sub
dec
xor
mov
sub
in
mov
push
test
adc
and
cmp
push
outsl
inc
inc
in
push
adc
push
inc
sbb
xchg
add
es
inc
add
lods
or
jns
es
push
call
decl
ret
xorb
mov
and
icebp
xchg
adc
inc
adc
daa
pop
xchg
cmp
mov
clc
lods
loop
xchg
or
icebp
mov
std
xor
shr
or
xchg
or
fildl
sub
sub
incb
jno
cmpsb
mov
hlt
add
fadd
xor
add
ss
lods
dec
and
ljmp
gs
or
xor
cwtl
push
addl
add
lahf
sbb
lods
scas
cmp
fsubp
pop
jnp
adc
mov
push
and
das
jl
and
mov
mov
test
adc
mov
call
push
xchg
fs
jo
clc
push
sub
pop
xor
sbb
cmp
adc
iret
mov
cld
outsb
or
push
mov
jp
fldl
sahf
les
push
ds
adc
pop
cli
and
mov
mov
adc
test
mov
aaa
in
testb
orb
sarl
loope
ss
jg
fidivrs
add
xchg
in
popf
std
inc
push
popa
movsb
imul
mov
mov
stc
xchg
xchg
insl
pop
and
fldl
fidivrs
lds
push
aaa
or
or
add
into
sub
or
ret
mov
xor
je
pop
mov
jecxz
ret
sub
xchg
movsb
add
int
sbb
adc
mov
dec
loope
test
aam
clc
pop
fcmovbe
xchg
aam
and
jl
or
add
and
mov
inc
aam
movsl
pop
add
stos
push
mov
or
lahf
ffreep
lea
mov
les
addl
shr
not
ss
mov
or
xchg
sub
add
mov
iret
out
insb
sub
sbb
les
hlt
out
insl
jecxz
in
insl
mov
jne
push
dec
jns
inc
pop
dec
rcll
aam
std
adc
popf
pop
inc
inc
int3
adc
idiv
push
mov
jp
fucom
mov
iret
clc
xor
mov
orb
adc
push
mov
pop
push
lahf
ret
jge
or
lods
jge
inc
dec
xorb
pop
decl
cmp
inc
dec
xchg
jo
jmp
mov
stos
clc
ret
jg
mov
pop
loope
adc
mov
add
sub
outsl
cltd
rclb
std
fisttpl
lea
push
loopne
idivl
mov
movsb
pop
scas
mov
push
dec
mov
pop
inc
popa
popa
out
shrb
sar
dec
push
pushf
mov
das
inc
dec
clc
aas
into
test
sub
and
les
add
pop
and
stc
fldl
sahf
fidivrl
pop
pop
xchg
xchg
ja
xchg
mov
cmp
pop
xorl
xchg
shll
mov
push
bound
lahf
sbb
and
sbb
jo
std
push
add
rcll
push
imull
icebp
imul
dec
scas
aaa
cmp
dec
je
sub
push
adc
adc
in
or
pushl
sub
push
nop
inc
in
clc
pop
rorb
xchg
cli
imulb
and
xor
pop
cli
insl
sub
cmp
xchg
std
bound
add
pop
push
dec
test
sub
xchg
mov
push
enter
mov
jo
push
stc
push
addl
xor
js
mov
push
push
enter
mov
fldt
lcall
popa
push
push
xchg
and
mov
fistpl
mov
mov
cmc
mov
clc
iret
jp
sbb
cltd
lds
cmp
add
js
pop
mov
call
inc
sub
pop
mov
xchg
mov
out
hlt
dec
cmp
push
dec
adc
pop
sub
jge
push
shrb
je
mov
dec
xor
mov
xor
ds
add
push
int3
lods
das
pop
mov
cs
sbb
orb
jo
cmc
aaa
adc
in
add
xor
mov
lret
shrb
sbb
cmpb
test
jl
das
add
sub
outsl
sub
hlt
mov
mov
addl
or
les
adc
fstps
push
mov
adc
ljmp
cmp
insl
iret
pop
mov
mov
mov
add
sbb
or
dec
lock
sahf
inc
imul
std
clc
fistl
push
in
add
jne
sbb
mov
push
fnstcw
adc
or
je
adc
inc
mov
add
inc
cltd
cmpl
sarl
adc
xchg
push
pop
int3
and
cmp
push
mov
add
jl
loopne
add
xlat
inc
jg
loopne
inc
outsl
inc
dec
fildl
and
andb
push
mov
fs
cmp
in
leave
push
push
cmpsb
lahf
adc
int3
push
sub
xchg
loope
pushf
mov
in
adc
adc
add
and
aam
jbe
sbbl
clc
ficompl
imul
aaa
fisttpl
pop
int3
add
divb
mov
add
fwait
roll
fcoms
cmp
ficomps
fs
add
sbb
sbb
in
jp
lcall
xchg
test
cmp
add
or
prefetch
or
add
cwtl
jo
adc
cmp
add
inc
inc
rolb
ljmp
addb
data16
mov
out
pop
or
mov
inc
mov
pop
daa
adc
jle
insb
imul
pop
fimuls
mov
jbe
xchg
sbb
push
out
dec
cltd
mov
movsl
cmp
adc
es
jbe
in
adc
jno
cmp
movsl
or
or
mov
outsb
cld
pop
cmpsl
mov
push
sahf
push
adc
mov
cmp
imul
mov
inc
pushf
add
outsb
xchg
fidivrs
and
pop
add
xchg
in
mov
aad
adc
data16
adc
fildl
outsb
lods
add
mov
jae
orb
pop
cmp
outsb
repz
pop
adc
xchg
cmc
lea
add
aam
adc
pop
cmp
inc
jo
lods
mov
adc
call
dec
out
mov
pop
in
ss
or
adc
sqrtps
jle
sbb
adc
push
sbb
test
push
fldt
add
subb
lods
jne
push
mov
mov
xor
sbb
sbb
faddp
pop
sarl
add
hlt
jmp
ljmp
or
aaa
pop
stos
ljmp
je
jecxz
pop
pop
das
inc
gs
and
imul
es
test
push
insl
cmp
add
pop
push
pop
mov
sub
lods
sbb
lods
loope
pop
dec
sub
nop
sbb
xor
push
add
popf
jmp
clc
lret
int
cmpsl
faddl
dec
and
cs
add
sbb
jp
js
cwtl
mov
mov
out
sbb
xor
xbegin
xchg
mov
add
or
shl
pop
scas
add
and
pushl
mov
dec
test
aad
out
xor
jae
pusha
dec
out
mov
testl
pop
or
cli
in
push
or
insl
test
scas
inc
mov
popa
xlat
les
push
negl
cwtl
xchg
es
mov
sbb
lcall
cltd
cli
or
push
pop
js
mov
repz
pop
push
sbb
xchg
daa
into
lods
mov
push
fnsave
movsb
lods
aad
inc
das
mov
out
outsl
inc
lret
aaa
clc
jne
cmp
xor
add
ds
push
mov
into
xchg
jle
inc
inc
xor
push
testl
adc
dec
cmp
sti
cmc
ret
and
jle
add
pop
es
stos
lea
clc
pop
shlb
or
dec
outsl
lahf
or
push
mov
cmp
rcrb
inc
mov
loopne
jl
or
sbb
loope
mov
push
push
push
jns
enter
adc
daa
outsl
xor
pop
fucomip
adc
sbb
test
mov
subb
push
aad
mov
adcl
stos
decb
pop
jle
call
or
stos
adc
out
test
jge
repz
or
add
or
cld
pop
jle
movsl
inc
push
adc
cli
or
rcr
mov
hlt
movsb
add
jg
in
lret
pop
adc
cltd
push
in
ret
or
adc
sbb
push
or
call
xlat
mov
test
insl
push
jne
call
mov
push
jne
xchg
xor
dec
and
inc
int3
lcall
ss
decl
adc
aaa
pop
repnz
movsl
pusha
hlt
xchg
ficoml
jecxz
fneni(8087
push
add
mov
inc
or
mov
call
dec
js
ret
and
stos
add
mov
jo
lds
lcall
ds
add
sbb
movsb
movl
nop
shr
ficompl
loop
leave
mov
addr16
fidivrl
xchg
loop
out
push
and
popa
sub
loope
and
enter
imul
inc
mov
xchg
incl
lds
dec
mov
stc
test
push
arpl
iret
sub
mov
pop
shlb
mov
sub
jmp
das
sub
clc
daa
jb
in
add
sub
mov
jmp
dec
and
stos
mov
jne
outsl
mov
js
and
arpl
or
inc
sub
ljmp
lods
fadds
gs
mov
or
jo
dec
inc
sbbb
add
mov
je
mov
push
sub
clc
insb
cltd
loopne
pop
or
jno
gs
es
sub
add
test
mov
push
test
jnp
test
lods
data16
das
and
mov
andl
aaa
adcb
stc
hlt
or
pop
popa
sub
int3
inc
cli
addr16
xor
fstpt
or
push
orl
lods
inc
shl
jne
fwait
pushl
imul
ficompl
js
enter
pop
xchg
test
cltd
and
mov
push
jbe
fidivs
adc
cmp
out
cs
mov
jbe
mov
repnz
sahf
imul
or
add
das
je
lret
jl
inc
mov
xor
sar
mov
push
xchg
sub
xchg
sub
mov
fcmovnu
ss
fs
loop
loopne
jb
xchg
mov
test
lock
movb
inc
jg
mov
lock
push
shrb
in
sbb
jns
jne
pop
clc
pushf
xor
sub
test
push
rclb
incl
cmc
mov
stos
scas
inc
mov
add
das
mov
jne
jg
into
xchg
mov
or
aaa
out
ffreep
cltd
push
jmp
sbb
mov
shlb
sbb
mov
sbb
inc
or
push
sbb
mov
mov
ljmp
xor
xchg
sarl
push
insb
icebp
fistpll
mov
mov
inc
lcall
mov
popa
jno
rcrl
mov
dec
sub
lods
les
push
enter
or
in
or
and
sti
cmp
add
adc
jb
sbb
or
push
cld
or
sbb
add
movb
push
push
push
lret
aas
add
sbb
pop
push
push
adc
pop
add
aad
mov
hlt
sub
cmp
pusha
push
mov
mov
jae
pop
add
inc
or
pop
cmpsb
movsl
loop
jae
sbb
push
cwtl
sbb
sub
lock
dec
add
and
xchg
add
enter
or
fistpl
shrl
pop
mov
xchg
push
movsb
push
push
popa
add
imul
xchg
mov
adc
or
inc
rorl
sub
mov
call
lds
or
loop
loopne
sbb
inc
and
orl
imul
adc
icebp
int
in
test
ljmp
or
cmp
test
jb
imul
and
adc
mov
cmp
setae
mov
dec
popf
adc
push
test
rol
cmpsb
pop
orb
mov
lods
sbb
out
mov
sub
adc
fcomip
inc
xchg
xchg
popa
inc
test
sbb
add
test
outsb
adc
mov
xchg
adc
jmp
fucomip
roll
push
cmp
inc
xor
and
push
xor
sbb
pop
mov
cli
das
and
mov
scas
shlb
mov
adc
push
inc
out
and
push
das
movsb
mov
sub
cmpsb
and
inc
gs
shlb
xchg
sub
xchg
adc
sbb
add
int
mov
das
pop
inc
mov
stos
mov
push
inc
jne
ret
repnz
sub
dec
pop
lea
push
mov
mov
xor
xchg
sbb
sub
aam
cmp
rcl
repnz
stc
inc
addr16
pop
popf
inc
divl
dec
test
adc
shrb
push
pop
and
or
cmpsb
data16
cmpl
lods
out
mov
ds
imul
jb
add
sbb
stos
cmp
std
es
int
xor
dec
sub
and
outsl
loope
adc
add
xor
push
js
dec
jnp
xor
inc
inc
dec
mov
add
inc
movsb
int3
add
int
inc
mov
test
inc
dec
fidivl
jae
jnp
lods
mov
pshufw
je
lcall
adc
mov
inc
mov
or
or
outsb
scas
mov
movsb
arpl
jbe
scas
pop
push
add
inc
in
lea
mov
sbb
mov
or
sti
in
ss
fsubp
add
stos
nop
and
push
or
cltd
sub
cmp
cmp
push
adc
sahf
and
pop
xor
shrl
mov
mov
ds
push
xor
xor
adc
mov
push
xchg
fcoml
subl
push
adc
imul
cwtl
lret
add
dec
push
mov
call
mov
negb
out
and
bound
insl
addr16
out
xor
mov
xor
xor
adc
jbe
clc
ljmp
dec
sbb
ds
mov
ss
incl
pusha
stos
cmpb
adc
jno
sub
rorl
mov
lock
fwait
andb
push
test
loop
adc
inc
lret
mov
rorb
xchg
add
inc
pop
cmp
idivb
and
adc
mov
sbb
pusha
jno
cmp
or
je
rorl
push
mov
mov
mov
xor
mov
aaa
mov
xchg
fdivr
pop
aaa
aad
pop
test
xor
and
popf
shr
mov
into
push
je
mov
or
mov
mov
mov
aam
adc
movsl
clc
mov
add
push
int3
and
test
sub
or
in
lods
mov
stos
decl
cs
sub
push
or
add
adcb
loopne
mov
push
cmpsl
push
inc
cmpsb
jbe
scas
inc
xor
outsl
icebp
pop
pusha
push
jge
test
lret
xor
cmc
mov
mov
push
add
ret
aaa
mov
enter
sub
adc
pop
or
mov
mov
fs
lea
jge
and
push
in
test
sub
out
mov
das
jg
scas
push
subb
out
testl
mov
shll
pop
mov
jo
push
ret
ljmp
test
inc
dec
sbb
loop
mov
or
adc
sub
mov
loop
mov
xor
jp
mov
lcall
sbb
push
dec
sub
xor
add
loopne
push
inc
add
mov
divb
nop
pop
push
add
dec
cmp
pop
inc
and
inc
mov
sbb
jg
js
inc
pop
mov
arpl
in
sub
in
mov
sub
test
in
xlat
mov
add
cs
arpl
mov
movsl
mov
adc
bswap
xchg
add
js
test
mov
xor
addr16
loopne
adc
adc
outsb
lea
adc
addb
mov
dec
mov
mov
ficoms
mov
jo
adc
or
std
sahf
imul
or
and
jnp
add
lret
and
in
adc
xor
sbb
jo
mov
xor
mov
lret
pushf
mov
stos
lods
pop
xchg
mov
adc
jne
and
jg
mov
loopne
adc
or
mov
add
bound
xor
xor
cmc
mov
lds
cwtl
rcl
push
add
aam
test
sub
rorl
add
cmc
sub
mov
add
cwtl
enter
dec
out
dec
mov
rclb
out
nop
imul
je
fs
fwait
sbb
cmpsb
add
push
outsb
xor
outsb
and
inc
mov
xchg
or
or
das
daa
in
and
repnz
sub
sbb
push
shr
dec
or
inc
out
pop
into
clc
cld
add
adc
lds
testb
xlat
ret
or
add
add
loope
into
out
cltd
int3
mov
fcmovu
stos
andl
ljmp
mov
or
mov
test
dec
add
or
loop
adcb
pop
jge
pusha
sbb
aam
xor
mov
scas
push
or
add
imul
sub
scas
stc
jne
orl
jmp
test
and
xchg
mov
bound
xor
mov
divb
add
dec
pop
jo
sub
sub
jno
call
and
js
push
dec
es
jbe
sub
rcrb
fisubs
insl
fwait
pop
adcb
call
sbb
aas
filds
push
dec
inc
mov
and
hlt
cld
pop
cwtl
push
repnz
aam
sbb
mov
imul
add
push
sub
test
icebp
dec
mov
push
jecxz
in
jnp
adc
dec
add
enter
dec
cmp
lods
insl
insl
aam
das
pop
and
int
dec
testl
or
jg
jg
fnsave
add
orb
xchg
addr16
add
std
pop
fcmovu
pushf
enter
mov
outsl
pop
add
test
cltd
adc
pop
loop
or
ret
mov
ljmp
push
ret
shrl
fists
adc
add
add
dec
add
cs
and
pusha
lahf
dec
insl
imul
mov
or
sti
pop
add
cmp
sub
push
mov
and
adc
fidivrl
mov
and
xchg
orb
lods
sbb
scas
hlt
jp
sbb
sbb
xchg
adc
cwtl
imul
out
push
lods
rorb
jnp
dec
xor
add
ja
dec
int3
in
mov
loope
xor
sbb
insb
adc
insb
fildl
fistl
mov
movsl
jno
mov
mulb
cld
enter
sub
cmc
push
loopne
testb
cmp
inc
or
fistpl
mov
shl
loop
icebp
pop
pop
clc
or
mov
xchg
push
mov
ljmp
push
and
mov
pop
daa
jb
gs
pop
pop
sbb
and
lea
pop
and
jns
pushl
mov
xchg
mov
push
fnstenv
inc
out
hlt
fmul
inc
shrb
pop
push
xor
and
call
mov
push
call
imul
xchg
push
adc
xchg
out
add
in
cmpsb
adc
addb
adc
cmp
add
dec
mov
add
mov
jge
lods
inc
daa
inc
outsb
sub
aaa
xor
inc
test
mov
lret
or
mov
test
je
xchg
loopne
inc
xor
add
addl
dec
movsl
push
mov
in
imull
mov
push
xor
ret
pop
sbb
shll
clc
adc
push
adc
push
push
xor
and
or
jl
pop
in
inc
movsb
mov
inc
add
and
loop
fcoml
jmp
xorl
pop
jmp
aas
sub
shll
hlt
xor
lods
adc
jb
adc
add
into
jp
jmp
das
sub
cltd
jmp
push
add
ja
loopne
jbe
sub
lahf
or
mov
cltd
jle
test
and
dec
movsl
mov
xchg
pop
adc
or
aad
insl
push
cltd
mov
ficomps
sub
push
adc
mov
call
sbb
push
adc
and
lods
stos
addr16
add
pop
inc
in
or
sbb
push
ret
call
lods
es
sbb
imul
into
lods
jns
aam
cmpb
test
xor
add
or
xchg
ja
sti
adc
mov
push
imul
aas
add
pusha
test
sub
adcl
mov
mov
jle
xchg
scas
stos
mov
jle
inc
mov
into
mov
inc
dec
jb
shr
sub
jb
rcrl
lods
cli
sbb
fdivrs
decl
inc
outsl
add
fcompl
or
std
xchg
test
roll
inc
inc
mov
push
jmp
jbe
and
adc
jns
jle
outsb
cmp
sbb
sbb
cld
das
aam
stc
push
adc
int
add
js
lods
add
and
pushf
imul
lock
dec
in
inc
cmp
stos
fbld
pusha
test
add
mov
push
cmp
mov
push
movsb
add
xchg
add
ret
or
jg
adc
adc
enter
outsl
hlt
mov
sbb
hlt
fcmovnb
movsl
js
sbbb
mov
adc
outsl
std
push
pop
dec
dec
xchg
dec
add
es
imul
mov
fwait
lock
int3
data16
and
adcb
sbb
sub
xor
lods
aad
add
lods
divb
stos
mov
fistpl
and
loop
rol
das
gs
insl
xor
mov
mov
or
cmp
add
mov
cmp
adc
push
jnp
xchg
pusha
and
pop
cmpl
je
jle
add
cmp
mov
and
jo
fidivrl
sub
cmp
dec
mov
test
mov
add
dec
pop
inc
or
push
or
clc
lcall
sub
mov
cmp
ljmp
mov
lods
and
cmpsb
or
sbb
pop
dec
adc
pop
fcoml
sbb
and
mov
dec
and
call
scas
fidivs
xchg
notb
test
lock
xchg
les
cmp
sbb
shll
pop
add
rorl
pop
aad
lea
xor
jb
mov
outsl
push
test
jp
sar
stos
out
flds
in
sub
leave
and
mov
dec
add
jle
jmp
jne
pusha
mov
and
mov
jle
lods
bound
in
maskmovq
dec
stos
fisttpll
data16
xchg
xchg
lahf
rolb
pop
and
or
fwait
and
icebp
add
pop
dec
add
and
pusha
lds
and
push
aam
inc
imul
dec
sub
pop
cmp
jmp
cltd
rcr
imul
in
scas
out
sbb
and
mov
xor
sub
sbb
pop
je
add
lea
rcrl
add
or
add
jb
cmpsb
mov
les
push
roll
or
and
or
loop
aas
mov
out
clc
rcrl
push
or
xor
mov
cmp
les
enter
push
push
pop
fisubl
inc
xor
sub
adc
test
mov
repz
outsl
push
add
adc
push
decl
test
push
push
stos
pop
jle
call
mov
dec
and
stc
adc
inc
add
and
add
or
push
or
cmpsb
sbb
push
inc
shr
inc
push
popa
adc
test
js
jne
mov
mov
fsub
pop
jno
mov
fildl
lret
lret
loope
xchg
adc
fwait
gs
addb
fnstenv
stos
xchg
pop
ljmp
inc
popf
lds
push
scas
add
xor
add
ficoml
mov
lods
cmp
mov
aad
shr
lahf
stos
jo
sbb
cmp
adc
or
cltd
lret
jbe
push
roll
add
mov
dec
dec
add
mov
jp
icebp
mov
movsb
aad
adc
jnp
imul
lock
push
mov
aam
sarb
push
std
inc
lock
push
fdivrl
cs
test
popa
mov
cmpsb
add
mov
adc
cltd
inc
dec
or
mov
decl
es
mov
mov
jbe
outsl
inc
jg
orb
pusha
pushl
mov
stos
shrl
pop
fnstcw
sub
mov
and
roll
mov
or
add
fbstp
jno
inc
ss
ljmp
test
in
mov
push
and
add
ljmp
cvtps2pd
shr
inc
cmc
ja
popf
and
push
pop
xor
and
ljmp
mov
mov
adc
sbb
mov
mov
sub
ljmp
pop
loopne
in
jge
test
mov
aas
rorb
and
test
xchg
test
mov
cmp
push
decl
insb
sbb
fldcw
icebp
das
cmc
adc
add
adc
fmulp
or
ret
add
xorb
cmp
mov
pop
adc
cmp
daa
push
mov
jle
push
inc
fcom
sbb
outsl
scas
rcll
adcb
je
outsl
lahf
xor
dec
pop
inc
test
push
sbb
push
std
pusha
jbe
shlb
sbb
rorb
stc
cmp
lds
mov
outsb
pushw
jge
add
mov
fistpll
outsb
mov
add
lahf
shll
adc
mov
sbb
in
mov
fwait
jge
adc
shrl
dec
test
pop
jae,pt
fisttpll
jns
jl
pushl
add
std
inc
pop
lock
movsl
mov
mov
out
test
fisubl
adc
scas
mov
cmp
in
mov
stos
sub
int
shll
inc
mov
ja
xor
loopne
insb
cmpsb
ljmp
xor
mov
push
jo
sbb
add
pushf
test
mov
loope
sbb
cmp
mov
les
imul
mov
dec
lds
fiaddl
int
sahf
fmuls
daa
aaa
xchg
fmull
jge
sbb
std
inc
repz
outsl
outsl
mov
mov
mov
arpl
inc
and
stos
push
push
insl
in
pop
sbb
cld
cli
pushl
adc
pop
mov
imul
mov
mov
or
imul
mov
xor
imul
mov
ds
repnz
cmp
insb
mov
mov
aas
icebp
fists
aad
loopne
adcl
test
xchg
or
jle
push
loope
pop
add
cmp
add
insb
test
pop
mov
pop
inc
mov
lock
lods
fwait
and
lods
into
dec
out
fs
sbb
cmpsb
cmc
std
clc
dec
es
jns
cmp
shrb
pop
aas
aam
stos
clc
shlb
add
sub
adc
iret
mov
cwtl
in
add
mov
sub
xchg
mov
hlt
adc
xor
loop
cli
outsl
test
repz
pusha
or
movsl
sbb
fildl
aaa
orb
dec
es
es
fidivs
or
or
sub
das
int3
mov
shll
cld
test
xchg
mov
movsb
scas
popf
rcrl
or
xchg
scas
or
aas
nop
add
popf
inc
fs
popf
xchg
mov
adc
stos
fadds
sub
mov
loope
mov
test
sub
or
ljmp
and
adc
inc
cld
jmp
mov
fcom
ret
les
insb
stc
mov
xor
inc
outsl
pop
inc
xchg
dec
or
ja
je
call
stc
lret
sub
xor
xchg
mov
loope
insl
cmc
bound
dec
jne
sub
pop
cmp
pop
push
call
cld
pop
loop
fcoms
adc
adc
out
add
outsl
dec
inc
pop
jge
sbb
cs
push
outsb
stos
das
jecxz
pop
cmp
out
insl
jnp
ffreep
push
or
pop
and
les
mov
inc
jo
mov
push
cmp
test
mov
call
sbbb
dec
jno
mov
pop
ja
imul
ret
insl
cltd
xor
adc
mov
mov
jmp
xor
mov
cmpsb
test
jnp
aad
jb
popa
mov
mov
add
mov
adc
lahf
xchg
test
rcll
jmp
mov
jg
clc
or
enter
repnz
ds
adc
cltd
sub
lahf
out
mov
dec
cli
les
or
lret
and
push
andb
repz
lods
les
sbb
sbb
pop
xorl
les
lret
lds
notl
cmpl
fwait
pop
push
shl
fistpll
test
fldt
aaa
jp
roll
les
push
and
add
movsb
mov
push
xor
pop
inc
and
xchg
jge
inc
test
pusha
or
sarb
aas
jp
addb
push
inc
js
or
push
jnp
xchg
add
cmp
mov
sub
idiv
mov
orl
adc
mov
mov
jns
cmp
dec
repz
les
add
mov
mov
and
pusha
mov
les
orb
mov
inc
inc
jne
mov
mov
cld
xor
es
jnp
inc
outsb
sahf
loop
in
push
clc
xorl
pop
xor
xor
sbbl
je
jbe
push
pop
mov
add
scas
insb
clc
push
jno
icebp
add
dec
add
fcom
pop
int
or
pop
jns
and
pop
mov
sbb
sbb
pop
add
std
dec
stos
xor
push
ja
mov
xor
call
add
adc
cli
inc
jg
mov
pop
pop
inc
out
dec
inc
or
sub
inc
or
and
adc
sbb
dec
mov
arpl
inc
rclb
inc
mov
dec
pop
adc
sub
mov
in
or
adc
into
cmp
jne
pop
dec
or
inc
dec
fiadds
xor
inc
test
addb
mov
add
rorl
sub
test
inc
testb
std
lea
bound
ja
ss
add
and
xchg
in
lock
lods
iret
and
scas
mov
arpl
pop
and
mov
cmp
inc
popa
mov
sub
adc
pop
roll
and
mov
loope
roll
cmp
test
inc
test
outsl
mov
and
push
or
and
jle
push
jl
sub
and
fs
pop
cmc
mulb
add
fdivr
cs
aas
aam
shl
cltd
mov
outsb
bound
mov
add
loopne
ss
daa
pop
add
push
lcall
ficompl
pop
aas
and
dec
cwtl
inc
dec
jno
mov
and
fisubrl
xchg
mov
shll
test
in
adc
jmp
cmp
sub
pop
mov
sarl
mov
or
push
int3
push
mov
lods
sub
push
jo
and
outsb
das
cld
push
cwtl
xchg
out
or
jnp
nop
pop
lahf
sub
add
add
orl
or
ror
add
or
inc
inc
test
cs
xchg
xchg
sub
lods
adc
jecxz
xchg
xor
push
jns
push
scas
adc
icebp
add
add
ficompl
jmp
cs
jmp
and
outsl
in
inc
aad
push
dec
repz
xchg
ss
inc
lcall
scas
add
push
cmpsl
lods
clc
mov
jmp
aad
outsb
out
fildl
pop
jnp
mov
xchg
dec
push
cmp
sub
sbb
sahf
js
insb
or
out
or
add
sti
push
std
mov
outsl
jo
xchg
repnz
enter
jecxz
push
adc
cmp
push
mov
je
pop
add
add
out
or
insl
scas
les
cltd
insb
sub
adc
xchg
adc
push
cmpsl
sbb
cs
imul
inc
aad
jnp
lods
mov
popl
out
xor
mov
and
jge
loop
rclb
psraw
push
sbb
adc
mov
jne
pusha
adcl
mov
test
and
lds
inc
loope
mov
mov
xchg
cmc
sbb
sti
mov
jge
outsl
mov
pop
and
pushf
pop
lods
jno
xchg
add
jg
jns
insl
test
inc
or
repz
mov
or
push
jb
icebp
lock
push
lods
inc
mov
push
sti
sbb
movsb
inc
pop
or
cli
in
fisttpll
and
insb
pop
ljmp
push
dec
push
pop
test
dec
in
loopne
lock
xchg
mov
push
fldcw
jne
adc
pop
jb
or
mov
mov
cmp
dec
push
jnp
xchg
add
inc
ja
mov
mov
scas
mov
pop
and
xchg
shll
and
loope
es
lock
test
push
dec
std
pop
push
and
pop
cwtl
mov
shll
inc
icebp
stos
in
fisubrl
int3
and
sbb
lods
cmp
ljmp
inc
pop
loopne
jae
ss
ds
pusha
push
daa
js
cmpb
mov
dec
adc
adc
rorb
adc
test
daa
sbb
and
pop
sub
mov
xlat
std
aaa
incl
daa
mov
sti
cmp
xchg
dec
cmp
enter
daa
das
xchg
add
mov
fadds
add
ljmp
mov
mov
pop
adc
mov
sbb
add
jl
ret
mov
dec
xchg
mov
sbb
inc
inc
xor
fs
mov
das
inc
cmpsb
push
adc
adc
cmova
push
inc
sbb
sub
cmp
test
aam
imul
push
lods
addb
adc
hlt
stos
sbb
loop
pop
inc
pop
sarb
mov
adc
cld
test
rcrl
mov
clc
scas
pusha
add
shr
jne
ret
es
mulb
adc
lods
mov
and
add
pushf
in
add
jb
icebp
into
add
and
lcall
loop
jp
pop
mov
mov
adc
fiadds
xor
fldl
adc
sub
xchg
add
int3
mov
enter
jo
ret
adc
lea
and
in
fisubrs
aad
adc
loopne
stos
adcb
movsb
mov
data16
xchg
subb
mov
inc
mov
pop
js
jne
push
adc
mov
psubsw
xchg
js
pop
lock
sbb
mov
call
adc
sbb
enter
jle
jnp
mov
sbb
and
pop
and
xchg
dec
repz
adc
push
cmpsb
xor
bound
pop
int3
cld
pop
shrl
out
dec
and
js
adc
push
push
push
faddl
out
push
cltd
jmp
inc
push
jo
loopne
push
adc
pop
js
icebp
pop
ror
and
add
jge
dec
push
js
orl
loope
xchg
jp
cld
lods
aaa
pushl
pop
cltd
mov
push
jae
adc
xchg
out
or
sub
adc
iret
movsb
scas
icebp
rol
sub
jnp
and
or
push
popf
cmpsb
or
mov
mov
out
add
bound
xor
or
mov
popf
dec
jle
inc
not
mov
test
popf
ds
mov
mov
les
dec
pop
out
pop
xchg
and
lods
movntq
shll
fmuls
es
in
ss
sub
addr16
shlb
xor
push
lods
add
pop
filds
mov
inc
pop
sar
add
or
add
add
mov
xchg
mov
push
pusha
adc
xchg
loop
out
sbb
add
sbb
loopne
clc
xchg
pop
shlb
and
cld
sbb
inc
sar
and
mov
or
ret
scas
jb
mov
shll
test
pop
hlt
fistl
outsb
xchg
push
lcall
pusha
mov
in
xor
in
pop
out
add
loopne
mov
into
inc
inc
stos
hlt
les
sbb
mov
add
sub
or
sahf
jae
imul
aad
outsb
outsl
fsubs
push
andb
sub
arpl
fstp
inc
imul
push
xor
adc
push
js
outsb
cmpl
push
clc
jg
ja
and
loopne
jne
or
in
adc
add
push
shrb
push
inc
xor
cld
or
stc
ds
push
sbb
sbb
mov
and
loop
pop
mov
jo
mov
sbb
sar
test
fadds
mov
nop
rorb
sbb
or
mov
into
dec
daa
stos
lock
adc
cmc
sbb
pop
xor
lret
xorl
and
jbe
fdivr
clc
jne
adc
push
in
push
and
js
push
ret
leave
sbb
lret
popf
imul
inc
mov
dec
test
pop
call
iret
inc
jmp
lahf
cmp
lock
das
hlt
pop
incb
pop
xlat
nop
lock
loopne
adc
xchg
adc
jle
icebp
cltd
fs
jl
stos
stos
roll
inc
outsl
mov
jge
cmp
add
jbe
ljmp
cmp
outsb
and
adc
add
mov
mov
mov
lret
inc
pushf
and
popa
push
les
loopne
je
dec
adc
notl
cld
jge
and
or
mov
inc
mov
pop
test
add
clc
nop
icebp
outsl
cmp
loope
jb
fbld
jg
lock
mov
gs
ret
popf
adc
in
arpl
in
cli
or
adc
xchg
outsl
test
cmp
bnd
lcall
sub
push
push
ljmp
add
iret
sub
sbb
and
mov
clc
or
dec
add
xor
movsl
xchg
mov
sbb
and
pop
xchg
movsl
adc
in
mov
ljmp
fwait
xlat
insb
outsl
mov
pusha
sbb
or
and
decl
cs
jne
imul
sbb
hlt
mov
mov
nop
repz
sbb
fistps
mov
mov
pop
fisttpll
repz
ret
dec
scas
mov
sarl
pushl
test
mov
xchg
aam
je
and
xchg
or
dec
outsl
mov
lds
pcmpeqb
lods
pop
imull
lods
sub
push
or
and
dec
xchg
fildl
.byte
mov
psubw
call
mov
xchg
fidivrs
adc
cmp
ss
repnz
xchg
lods
in
dec
add
sbb
xchg
int
test
or
popa
mov
cmp
add
pop
pop
leave
or
dec
push
movsb
pop
pop
pop
pop
or
ret
outsb
pusha
addr16
pop
pop
add
leave
xchg
mov
and
insb
outsb
fdivs
rclb
and
inc
pop
das
add
pop
jg
stc
jmp
test
rolb
mov
or
add
dec
pushl
xchg
mov
add
adc
and
add
idiv
decl
aaa
dec
add
adcl
and
or
testb
imul
jmp
mov
into
dec
mov
out
add
sti
pop
cmp
ja
mov
dec
movsl
add
scas
mov
pop
xchg
add
add
pop
js
ja
popa
repnz
call
pop
les
inc
add
mov
push
add
mov
fimull
add
dec
arpl
pop
leave
rolb
sub
mov
fwait
test
nop
enter
popa
xor
gs
push
add
movsb
pushl
lods
outsl
add
add
and
pop
call
xchg
and
mov
enter
shr
push
cmc
stc
add
ret
fldt
mov
test
sbb
in
fs
ret
push
xchg
jecxz
in
cmp
je
outsl
jg
and
dec
loope
nop
loop
dec
ret
mov
xchg
and
js
in
fucomip
decl
shl
push
add
ja
dec
movsb
pop
or
pop
call
out
in
sub
sbb
xor
sub
imul
jb
pusha
xchg
sti
test
jmp
mov
or
push
fldenv
or
add
aam
or
xchg
lock
fistpll
sahf
cli
add
fwait
out
mov
fdivl
xlat
adc
sbb
test
fistps
jo
pushf
xchg
and
xchg
add
ja
xor
xchg
cmp
jne
or
fnstcw
mov
sub
mov
add
aas
or
sbb
idiv
add
add
or
popa
ret
scas
jmp
add
inc
test
pushl
xchg
pop
push
adc
add
fistl
fldenv
or
and
add
push
outsl
pop
adc
jbe
mov
cwtl
repz
lods
lods
and
mov
xchg
pop
inc
outsb
fs
pop
and
mov
inc
add
jp
pop
adc
add
or
movsl
and
dec
mov
neg
add
inc
push
lods
jg
ja
add
movb
sbb
data16
xor
jmp
mov
shrb
cmp
push
inc
mov
cmp
fcmovnu
incl
rolb
test
mov
sti
das
mov
mov
les
jb
addr16
xchg
sets
orb
std
mov
pop
int3
add
test
xchg
cmpsb
shl
jecxz
xchg
dec
cwtl
and
stc
or
movq
push
mov
rclb
out
jle
test
mov
outsl
sub
rcll
sub
mov
and
in
je
mov
jl
and
out
sbb
sbb
lret
lds
cld
outsl
lcall
inc
or
sub
jl
add
andl
add
cmpsb
or
mov
and
push
fs
add
fcmovnb
xchg
sub
lea
add
pop
inc
jmp
or
jle
add
and
pop
outsl
jg
aam
clc
jb
jecxz
rorb
inc
daa
add
loope
jno
push
ret
cmpb
das
rorl
or
je
xor
rcll
into
jecxz
pop
pushl
andb
mov
je
je
aad
add
cmp
fisubrl
push
push
outsb
fildll
inc
rolb
mov
pop
or
push
scas
cmpsl
xchg
lcall
outsl
aam
lods
or
add
jg
mov
loope
shl
aaa
pop
inc
mov
push
mov
leave
inc
in
and
aas
add
repnz
in
mov
and
and
in
mov
add
mov
leave
popa
mov
stc
cmp
ret
lcall
addb
adc
mov
das
insl
test
mov
fstpt
cmp
mov
mov
adc
shrl
pop
clc
outsl
fildl
mov
sub
enter
sbb
out
push
addl
cld
mov
jbe
push
and
dec
sbb
pop
sub
lret
mov
out
inc
or
pop
pop
andb
add
add
sbb
cmp
into
pop
mov
test
insl
add
incl
lcall
mov
or
insb
rcr
roll
fwait
loopne
mov
ret
push
add
std
sub
sub
mov
and
shrl
jo
dec
dec
sub
sbb
and
or
addl
test
sti
sbb
pushf
out
fidivrl
adc
cmp
add
jbe
or
dec
pop
xor
jmp
in
fidivrs
pop
mov
xor
sub
in
outsl
fistpll
inc
lcall
dec
sub
pusha
mov
dec
fadds
shll
pushfw
ret
pop
jge
dec
fcmovnb
outsl
mov
les
adc
loop
cmp
sub
mov
and
sub
sarl
xchg
dec
mov
mov
jbe
jbe
dec
adc
mov
adc
add
pop
mov
or
xchg
int
std
int3
jmp
lds
dec
fiaddl
pop
aad
jmp
mov
sub
cli
inc
jmp
push
dec
push
jbe
pop
das
mov
ffreep
mov
jns
inc
ds
movsb
lcall
xor
js
mov
loope
push
xchg
xchg
mov
pop
pop
mov
xor
loop
inc
fcmovu
lcall
jecxz
pop
add
ss
sbb
mov
ficoms
jl
sbb
int
pop
les
rcrb
xchg
lahf
dec
push
pop
fdivs
div
inc
imul
dec
iret
mov
mov
pop
adc
sbb
xchg
mov
inc
xchg
xor
fwait
clc
addr16
mov
test
loopne
and
test
sbb
fiaddl
jnp
adc
jge
cld
push
add
jg
dec
andl
pop
loop
pop
pusha
loop
xor
loopne
pop
cli
cmp
mov
mov
arpl
outsl
pop
cs
sbb
mov
pushf
ret
mov
or
add
movsb
js
dec
loope
push
lcall
mov
test
push
add
stos
ret
or
fistl
pop
add
jmp
xchg
arpl
jbe
inc
rcrl
sub
dec
fstpl
faddl
leave
dec
add
cmpsl
ret
mov
push
insl
clc
outsl
das
gs
sbbb
es
js
scas
sub
in
fbstp
inc
and
hlt
rcl
inc
iret
inc
rcrl
pop
clc
lcall
icebp
fistpl
adc
pop
mov
mov
fwait
test
and
ret
lock
lcall
sti
or
mov
mov
or
jg
mov
dec
mov
subl
pusha
ret
mov
sub
xchg
or
loope
pusha
adc
add
fnstsw
mov
adc
cltd
mov
mov
xorl
out
mov
insb
pop
lret
xchg
add
add
or
aad
sbb
out
jle
fst
negb
dec
xchg
and
add
icebp
pop
test
icebp
inc
mov
cmpsb
sbb
popf
loope
sbb
xor
push
dec
stc
icebp
flds
fwait
push
sub
incl
out
mov
push
xor
call
and
rclb
data16
and
movsl
and
xor
frstor
jl
jae
insb
xor
sub
jb
and
paddsw
mov
add
jp
test
ret
cld
and
das
loope
pop
outsb
icebp
roll
movsl
fsts
xor
push
lock
mov
stc
int
dec
out
decb
push
shll
in
out
sub
pop
cld
or
mov
insb
sbb
clc
inc
je
pop
arpl
and
inc
dec
push
cli
fbstp
mov
or
mov
addr16
cs
arpl
int
sbbb
out
adc
dec
sub
cld
imulb
xchg
inc
push
mov
xlat
dec
ret
mov
sub
jle
movzbl
mov
xlat
jo
mov
pusha
add
movswl
sbb
mov
outsl
mov
adc
fsubl
outsb
sbb
lea
bound
test
jg
pushf
icebp
pushf
mov
push
negl
aaa
adc
cmp
mov
mov
out
and
leave
int3
xchg
xor
jl
pusha
jl
fsubrl
ss
pop
rcrl
iret
sub
sbbl
lcall
imul
jae
cs
bound
pop
clc
pop
js
jg
addl
mov
mov
sbb
iret
and
arpl
cmp
mov
and
adc
mov
loopne
mov
cltd
adc
xchg
lahf
lds
mov
mov
sahf
and
insb
pushl
subl
sbb
sti
mov
adc
jp
fcomip
dec
jecxz
and
leave
out
sub
lcall
cmp
and
jecxz
fdiv
mov
fldcw
adc
sbb
sti
mov
add
mov
lret
ret
outsl
hlt
je
pushf
and
xchg
mov
sbb
pop
fildll
xchg
outsl
je
add
jnp
push
dec
mov
popa
mov
jns
nop
dec
xorb
push
in
mov
filds
add
xchg
outsb
mov
cmc
adc
pop
push
clc
repz
inc
or
xor
add
add
mov
std
cli
adc
or
dec
mov
int3
adc
or
stos
push
orb
das
xor
fiaddl
cmpsl
cmp
mov
mov
outsl
aaa
inc
sbb
pop
test
and
decl
mov
lea
inc
or
inc
cltd
mov
inc
inc
lcall
je
sub
sbb
jbe
lahf
fildl
push
inc
imul
rcrw
fwait
clc
mulb
adc
rolb
cli
lret
or
pop
mov
movsb
xchg
into
jmp
or
cltd
and
add
lock
insl
or
pop
js
lock
push
shll
scas
xchg
mov
push
mov
mov
push
push
sub
les
cmp
repnz
aad
adc
push
pop
xchg
inc
test
inc
or
jbe
outsl
fmull
mov
aaa
lods
push
push
add
pop
mov
sub
mov
bound
and
and
das
push
mov
inc
cmpsl
inc
pop
add
sbb
dec
xchg
jl
push
test
loopne
xorl
sbb
ja
pop
jne
adc
pop
push
sbb
in
into
push
push
xchg
or
repnz
loope
xor
cs
and
xlat
out
lea
movsl
xor
imul
movsb
cwtl
or
xchg
push
add
and
mov
mov
dec
xor
adcb
pop
mov
jb
pop
push
pop
add
add
lock
negb
push
dec
outsl
loop
popa
ds
jne
push
cmp
pop
xchg
pushf
cmc
test
out
lods
inc
test
jge
dec
int3
or
test
add
inc
mov
inc
add
in
fs
enter
out
xor
loope
xchg
jg
add
mov
fwait
jge
ja
fistpll
mov
push
dec
insl
arpl
outsb
cmpsb
sub
arpl
or
test
in
adc
mov
outsl
jno
xchg
pop
sbb
clc
outsb
push
xchg
xchg
push
pop
mov
sub
sbb
inc
sub
std
mov
insl
stos
jno
mov
out
cmpsb
rcl
pop
mov
adc
mov
pop
xchg
push
jg
lcall
ret
dec
adc
jne
test
add
aam
stos
fs
lret
add
outsb
rcr
in
jg
mov
mov
shlb
mov
pop
insb
scas
jle
or
pop
clc
xchg
fcmovnu
out
icebp
push
push
lock
fimull
leave
sbb
cmpsl
int3
or
dec
push
cltd
dec
add
outsb
loope
test
inc
fistpl
hlt
sbb
sarb
fisttpll
sub
jge
pop
ret
fistl
cmp
pop
fistl
fs
decb
icebp
es
je
aad
ds
adc
mov
jle
fs
ds
mov
movb
shll
dec
push
fimuls
lahf
mov
xchg
mov
lcall
cs
lods
sbb
fcompl
mov
mov
push
fisttpll
dec
decb
arpl
jmp
icebp
cmpsl
adc
jb
test
xchg
stc
fucomi
ds
idivl
mov
adc
mov
imul
jg
jg
repz
xchg
fildl
adc
testl
mov
stc
jb
imul
cltd
roll
loope
mov
decl
ljmp
pushf
adc
adc
push
cli
inc
xor
mov
stos
jmp
in
ret
mov
push
cwtl
or
popa
lcall
gs
push
jns
or
out
pop
mov
outsb
fnstcw
xor
in
pushl
insb
rolb
xchg
inc
dec
mov
jne
mov
enter
lds
jg
and
clc
adc
inc
sub
inc
fchs
add
sbb
fsubl
adc
repnz
push
push
or
loopne
cmc
mov
out
movsb
int3
popa
movsl
sbb
pop
sbb
push
repz
xchg
push
mov
sub
mov
repnz
xor
insl
fstpt
xor
stos
fadds
mov
clc
jg
mov
xorl
pop
mov
mov
lret
sbb
mov
xchg
mov
in
dec
mov
notl
push
pop
fsubrs
shll
sbb
mov
xor
adcb
fcomp
cvtps2pi
sbb
inc
fldt
inc
push
xor
aaa
cmc
mov
push
dec
dec
mov
paddq
cltd
add
pop
mov
addr16
cmp
mov
jg
pop
mov
mov
cmp
cmp
mov
in
xchg
scas
inc
fucomi
jp
jno
or
orl
in
in
scas
ret
cs
xor
arpl
xchg
out
adc
and
xor
mov
cmp
loop
sub
and
pop
add
nop
mov
outsb
or
sbb
and
push
mov
jmp
inc
add
or
cli
mov
cld
lcall
adc
adcl
sbb
adc
pop
movsl
sub
add
inc
and
and
push
fsub
push
xchg
test
jecxz
not
jbe
mov
xor
or
add
xchg
mov
add
add
add
push
pop
push
mov
clc
push
daa
das
insl
mov
xchg
das
fnsave
shrb
add
adc
xlat
aam
or
dec
sti
roll
inc
call
cmp
xor
add
and
popf
add
xor
subl
and
mov
add
jno
ljmp
push
loop
mov
dec
mov
andb
fldt
rcrb
insb
dec
pop
xor
ss
sub
mov
ja
ja
inc
dec
aam
sub
fistl
fwait
jge
movsl
ljmp
fdivrl
jb
adc
ret
dec
insb
mov
test
decl
ret
leave
push
mov
mov
es
add
jle
cmp
lock
imul
decl
xchg
imul
xor
mov
rcr
aaa
clc
sub
jl
mov
sub
sbb
fwait
movsb
mov
cmp
aad
jmp
lock
mov
jl
test
sbb
fistpll
into
cmc
ret
xchg
jb
and
cltd
jg
lods
mov
lods
js
fstpt
icebp
adc
scas
mov
fwait
cs
cmpl
add
addr16
fbstp
pop
add
dec
push
push
and
mov
push
cs
cmp
in
ja
ja
ss
inc
test
add
push
pop
mov
gs
les
insl
mov
xor
popa
shlb
and
hlt
or
xchg
add
mov
push
or
mov
sbb
push
roll
ljmp
lret
mov
sub
fs
in
push
js
jge
xor
sti
in
popa
jmp
fwait
inc
mov
ja
cs
test
popa
les
out
ds
jmp
dec
lea
mov
daa
ljmp
shll
mov
dec
or
jge
mov
loop
adc
and
aad
test
xchg
and
shll
jae
ljmp
add
test
pop
inc
mov
add
add
or
xchg
out
clc
xor
movsl
adc
test
inc
xor
neg
mov
sbb
incl
fincstp
rolb
das
add
push
js
and
sbb
stc
jo
mov
fadd
inc
cld
cmp
into
and
mov
outsl
lea
mov
shlb
dec
lods
push
loope
inc
mov
add
sbb
fmulp
es
mov
mov
mov
shrl
mov
and
outsb
mov
not
mov
or
outsl
outsl
fbstp
inc
or
popl
pusha
adc
jge
ds
xor
sbb
testb
or
add
push
add
dec
sbb
add
fstpl
cmp
clc
push
xor
sahf
insb
clc
sub
mov
int
jl
lahf
fcmovnu
jbe
aaa
leave
in
and
in
icebp
or
and
add
mov
in
jne
dec
clc
and
or
scas
jnp
ja
clc
or
pop
adc
xor
rorb
pop
mov
clc
dec
mov
dec
xor
mov
shrb
neg
push
aaa
sbb
sub
roll
push
addr16
stos
dec
cmpsb
cmp
jmp
scas
fisttpll
xchg
adc
mov
cmp
xchg
mov
int3
xlat
std
stos
sub
repnz
loope
push
ja
fsubrs
lea
push
push
aaa
pushl
lea
push
push
lock
imul
sahf
insl
and
cmp
mov
mov
ss
xor
inc
mov
pushf
jmp
mov
jmp
fwait
popf
sbb
add
mov
inc
adc
adc
mov
leave
ret
push
inc
pop
push
jg
add
testl
pop
push
inc
dec
incb
sahf
int
rorl
rorb
lods
aad
sti
inc
stos
sub
xlat
mov
ficompl
pusha
cmp
rclb
out
hlt
sbb
aas
pop
clc
mov
adc
bound
shrb
mov
in
rcl
cmp
pop
pop
sbb
sub
xchg
test
movsb
jns
jne
cld
lods
and
sbb
inc
add
add
das
shll
sbb
sub
xchg
data16
sub
mov
xchg
xor
cli
pop
sub
mov
xchg
inc
pop
add
pop
or
adc
pop
loop
es
mov
add
pop
jnp
mov
mov
cmc
and
mov
add
mov
or
xor
pop
lea
fiadds
push
js
popf
mov
xor
fidivrl
and
or
negl
ret
in
sti
subb
mov
test
dec
in
call
shrb
mov
ja
mov
adc
sub
xor
xchg
mov
sbb
ja
mov
jp
into
adc
add
sub
aas
xlat
frstor
adc
cmpsl
jg
ja
fucomip
inc
pusha
jge
jl
mov
xlat
das
mov
lahf
push
and
mov
popf
stos
push
out
mov
xlat
pop
js
mov
xchg
cmpsl
xor
push
scas
sbb
dec
mov
decb
inc
lret
rdpmc
sub
push
lock
or
push
dec
cld
ret
std
call
rclb
or
pop
popf
push
enter
add
jb
jmp
out
cmp
or
sbb
push
dec
outsl
rcl
fbld
xor
adc
sbb
popa
mov
xchg
xchg
mov
into
or
cltd
js
mov
push
pop
xor
pushf
sbb
movsl
ja
and
adc
inc
jmp
pop
mov
add
sti
cwtl
aas
jg
int
pop
sub
fwait
js
movsl
lock
mov
sub
cwtl
dec
pop
js
rcll
jns
and
xchg
insl
aaa
stos
stos
popf
in
xor
push
or
sbb
add
xor
mov
insl
or
call
clc
aaa
jl
sbb
sbb
push
mov
pop
fimull
or
lods
and
or
mov
sbb
or
rorl
loope
loope
mov
divb
loope
clc
stos
aam
xchg
cli
or
sti
in
and
adc
and
add
push
leave
mov
das
test
ss
inc
xchg
into
dec
jmp
les
cld
dec
xchg
lcall
je
sub
add
pop
fildll
cld
scas
cld
aam
pop
in
fisubs
pushf
cmp
sbb
insb
mov
popa
push
lods
pop
inc
je
sbb
loopne
pop
adc
mov
push
add
sbb
pop
inc
or
into
gs
and
loope
cmp
dec
xor
pop
pop
xchg
and
in
xchg
jecxz
xorl
add
fildll
fisttps
pop
and
xor
xor
das
sbb
push
movsb
pop
sbb
cwtd
and
pop
and
lcall
mov
fmuls
jge
lock
cld
jg
sub
mov
push
push
jp
dec
dec
cmpsl
inc
roll
nop
mov
adc
ljmp
lock
gs
outsl
push
popf
sbb
std
mov
lods
mov
xor
invd
or
loope
movsl
rolb
lcall
pop
lea
sbb
inc
cli
pop
push
or
nop
pop
cmpsb
jle
sbb
push
outsl
hlt
jb
lcall
imul
xchg
sub
mov
sub
or
mov
loopne
mov
jl
dec
movsl
jg
or
push
xchg
lods
mov
and
inc
mov
ficomps
in
adc
mov
adcb
add
stos
int3
inc
aas
enter
mov
dec
std
sbb
push
inc
jne
pop
dec
jo
adc
int3
or
data16
je
mov
ss
cmpsb
xor
je
inc
inc
mov
cltd
in
cmpsb
dec
adc
pop
fisttps
xlat
jae
jp
cmp
dec
and
pop
js
cmp
push
jns
aad
pop
jecxz
cmpsb
push
mov
flds
or
jo
fidivl
mov
sub
xlat
sbb
sbb
inc
lea
lahf
aaa
adc
sub
loop
fwait
pop
add
data16
sbb
fcompl
jnp
icebp
jbe
jmp
scas
mov
sub
insb
mov
test
lock
roll
jno
adc
subps
mov
ret
and
xchg
fsubrl
insb
xor
nopl
out
pop
pop
adc
sarl
sub
rcrl
in
add
daa
xor
lods
jmp
imul
sbb
int
xlat
outsb
inc
pop
aam
pop
adc
xchg
dec
cmp
pop
sub
scas
or
ja
mov
xor
pop
imul
out
adc
cmc
sbb
xor
sahf
mov
mov
iret
in
cmp
jmp
fdivl
pop
jb
out
nop
loop
les
mov
jo
repnz
pop
mov
repz
aaa
mov
sbbl
rcrb
cmp
sub
aaa
mov
xchg
andb
and
mov
adc
mov
or
test
insl
jne
adc
cmc
out
cmp
cmp
lea
fdivl
je
mov
xor
mov
pop
jb
mov
mov
sbb
out
andb
fisubs
imul
xchg
add
inc
mov
lcall
jge
push
popa
pusha
mov
out
add
push
sahf
shl
sahf
cmp
jnp
lds
mov
popf
mov
cmp
dec
or
pop
or
enter
inc
mov
inc
adcl
hlt
dec
xor
or
add
dec
enter
mov
mov
push
fistps
movsb
sbb
mov
cmp
mov
or
and
sub
sbb
inc
inc
push
mov
popa
stc
inc
or
cwtl
enter
mov
sbb
or
mov
xchg
push
shlb
shrl
mov
das
hlt
pusha
and
adc
and
inc
add
adc
push
cmp
sub
repnz
fiaddl
xchg
je
adc
xor
and
rol
push
xor
push
push
mov
icebp
xchg
sub
xor
push
out
add
sahf
fisubrl
rcrb
dec
sub
add
roll
inc
dec
push
fisubl
pop
pop
push
jge
fadds
or
pop
in
cltd
fistpl
or
sbb
mov
fistpll
repz
sbb
xor
aas
aaa
add
jb
insb
jmp
pop
add
add
jo
add
adc
popf
mov
out
loope
add
mov
inc
jbe
sub
mov
pop
cli
and
lods
mov
movsb
insb
mov
jecxz
sub
xlat
hlt
push
jg
jb
roll
iret
cld
test
repz
cmpb
fisttpl
adc
and
cltd
dec
cwtl
shlb
jns
mov
adc
call
gs
adc
imul
or
mov
idiv
adc
mov
outsl
dec
fists
pop
xor
adc
sub
mov
push
shlb
mov
sub
popl
dec
cld
lahf
pop
in
add
mov
push
bnd
push
sbb
loope
clc
inc
dec
rorb
insl
sbb
jbe
std
xchg
cld
jp
addr16
sub
push
xor
aad
jnp
fbld
mov
adc
movsbl
and
inc
addr16
stc
cmpsb
and
mov
cmpsl
jae
orl
jecxz
jg
scas
jae
and
push
je
das
in
rclb
mov
inc
mov
decb
rcrl
test
cmpsl
rorb
jecxz
or
dec
sub
push
gs
push
fs
adc
sub
sti
lods
fiaddl
lret
enter
cltd
subl
jne
out
push
mov
lds
mov
loopne
dec
xchg
sbb
movsb
and
mov
mov
push
add
shrb
ss
test
pop
addl
hlt
inc
test
dec
jl
aaa
clc
ret
mov
push
mov
and
les
fildll
push
inc
pusha
repz
mov
mov
in
dec
fstl
insl
sub
das
ss
mov
push
sub
outsb
pop
andb
gs
in
or
neg
adc
mov
push
inc
rcl
sub
pop
mov
je
outsl
cmpl
and
mov
es
in
lock
mov
add
pop
sub
jno
scas
cmp
xor
decb
or
xchg
dec
jp
push
fldl
dec
out
push
dec
std
lock
arpl
add
ljmp
push
xchg
dec
mov
dec
jbe
jmp
pop
adc
les
xlat
mov
lods
aam
sub
out
cld
push
inc
jmp
in
lock
sub
movsb
push
pushf
sbb
push
or
scas
mov
push
call
hlt
not
and
push
add
dec
cmp
rorb
dec
lcall
add
mov
cmp
rcll
pop
pop
jb
lds
enter
fstl
jno
out
loope
jne
loopne
xchg
jmp
xor
and
dec
int
loopne
fmuls
xor
fsubs
or
outsb
or
jge
rclb
cmp
aaa
clc
add
xchg
sub
test
inc
xlat
pop
mov
call
push
mov
pop
xor
dec
jge
add
call
cld
push
fisubrs
pop
dec
loopne
cld
and
push
lock
xor
or
adc
loopne
sbb
add
or
push
jmp
xchg
loopne
mov
fldenv
or
fmull
pop
jne
mov
and
fildll
das
mov
imul
adc
add
dec
hlt
pop
mov
lods
xor
xchg
fisttpl
jns
sahf
sbb
jl
dec
idiv
inc
mov
add
sar
insb
popa
mov
mov
lock
orl
addb
cmp
adc
dec
or
cmp
aas
shrl
mov
mov
xchg
fwait
mov
rorb
push
dec
lock
andl
outsb
lock
ds
loopne
and
stos
xor
movsl
fisubrl
lcall
push
lods
movsl
or
push
xchg
adc
aam
pop
xor
std
adc
inc
add
js
pop
je
pop
cmp
nop
aas
mov
push
sbb
mov
cwtl
sub
push
test
xchg
cltd
pop
sbb
inc
filds
push
fcmovb
repz
outsb
stos
adc
jns
pop
sbb
and
pop
jne
and
dec
dec
dec
roll
pop
xor
daa
shrb
je
xchg
or
outsb
push
outsl
outsl
pop
out
push
mov
lock
cltd
add
inc
popa
cld
test
lea
outsl
arpl
pop
daa
into
sbb
add
mov
jns
lock
mov
ja
stos
jae
push
xchg
sbb
pop
xor
pushf
pop
inc
adc
sarb
mov
push
push
dec
adc
jg
js
add
xchg
je
mov
bound
in
xchg
and
lds
insl
jnp
jns
jecxz
test
pop
and
mov
cmp
clc
pop
int3
cmpsl
and
decl
add
enter
mov
shl
aam
ja
adc
cld
jg
jg
xor
or
stos
sbb
int
cmp
out
mov
push
repnz
cmp
das
scas
js
sbb
cmp
scas
mov
mov
push
or
jmp
mov
mov
mov
jne
mov
pop
jno
jl
xlat
pop
add
out
pop
jo
push
xchg
pop
outsl
ffreep
fwait
or
lods
aaa
rclb
jbe
orb
pop
jp
mov
mov
scas
sbb
push
add
dec
pop
std
push
adc
sahf
movsl
pusha
ja
pop
inc
inc
aaa
es
mov
or
xchg
inc
adc
popa
lret
cmp
out
out
mov
test
push
stos
scas
outsb
xchg
stos
aad
outsl
cmp
fdivs
jo
shll
ss
out
lock
test
push
ret
push
out
mov
jg
rcll
pop
or
mov
iret
add
cmpsb
pop
push
mov
mov
inc
cmp
xchg
aaa
mov
mov
push
add
or
mov
je
int3
lret
or
and
mov
outsl
inc
ret
jg
shlb
ja
mov
movsb
dec
mov
jl
jg
leave
lds
mov
test
out
clc
popa
shrb
mov
jmp
daa
mov
mov
out
sbb
jp
push
mov
stc
mov
mov
cmp
xor
sbb
nop
pop
push
cmp
loopne
dec
cmp
dec
xchg
imul
cmp
test
outsl
sub
and
mov
out
ret
or
cmp
xor
sub
mov
dec
sub
mov
adc
push
loope
mov
xor
mov
push
loopne
arpl
cmp
and
adc
dec
mov
lods
dec
mov
repnz
mov
xor
call
test
ljmp
js
mov
and
xchg
pop
pop
inc
in
push
sub
clc
dec
decb
cmc
scas
xlat
adc
push
filds
xor
xor
xorl
or
faddl
rcrb
xor
sti
pushf
or
shrl
or
push
dec
cli
mov
inc
mov
xor
stos
mov
decb
loope
push
lea
jl
js
push
outsl
dec
insb
cmp
mov
sub
arpl
inc
int3
and
or
push
xor
mov
sbb
sbb
mov
inc
rclb
ljmp
mov
andl
xor
inc
jnp
or
push
mov
add
xor
jg
or
ret
loopne
pop
pop
into
add
mov
ret
or
and
sub
adc
stos
test
icebp
dec
mov
arpl
lret
push
and
and
sub
cmp
movsl
pushl
jge
dec
add
xor
xchg
push
fistpll
jbe
jns
sbb
das
push
push
xchg
iret
sbb
jmp
pop
cltd
sub
xor
call
pop
andb
pop
xchg
adc
cmp
insb
aad
add
mov
adc
cmpb
sbb
inc
fsubrl
cmpsl
sub
outsl
push
jp
mov
movsb
lret
mov
jecxz
add
inc
mov
cmp
out
out
jmp
pop
movsl
cld
fcomi
shrl
mov
cmp
jmp
jae
add
add
fadd
ud2
je
shll
add
call
adc
adc
mov
or
in
arpl
mov
fwait
aas
cwtl
xor
aam
pop
pop
js
inc
cli
xor
mov
or
jge
xchg
dec
or
in
or
inc
outsl
in
push
jb
add
shlb
or
cli
push
and
mov
add
dec
adc
cmp
push
mov
push
sbb
lods
loope
jge
pop
mov
enter
inc
fsubrl
test
jnp
fs
push
fisubl
pop
dec
mov
das
adc
js
in
cmp
repnz
dec
in
les
ret
mov
inc
pop
inc
add
das
outsl
or
cli
ja
mov
fldt
lock
adc
and
cld
mov
ret
lret
jg
test
pusha
xchg
cwtl
cmp
dec
out
decl
or
loop
test
xor
or
mov
and
shr
and
pop
mov
inc
ljmp
mov
sbb
sti
sbb
cmp
aaa
lock
aas
xor
add
xor
daa
imul
add
or
fidivrl
movl
inc
outsb
hlt
sbb
leave
sbb
filds
scas
dec
adc
sbb
sbb
inc
je
mov
sar
shlb
jnp
stos
mov
mov
push
push
outsl
in
jne
push
cmc
xchg
adc
aam
scas
and
js
lock
mov
mov
mov
add
stc
mov
add
les
fstps
dec
sbb
adc
mov
fcompl
repz
push
sub
data16
mov
xor
lock
mov
xor
push
mov
add
pop
or
out
test
pop
pop
pop
sti
fucom
dec
or
jo
push
adcb
inc
sbb
jnp,pt
xchg
dec
add
add
fldenv
jge
arpl
adc
in
adc
decl
or
xchg
loopne
out
test
pop
dec
out
lods
sub
fsubs
out
sub
sub
add
mov
fcom
rcrl
in
and
movsb
rolb
xor
ret
insl
sbb
into
xor
or
xchg
adcb
inc
popa
inc
xor
xchg
mov
loopne
xchg
sub
pop
mull
add
add
aad
mov
call
repnz
xchg
xor
js
cmp
jae
and
lock
fstpt
mov
and
je
mov
sbb
in
pop
pop
ja
insb
aas
and
jp
cld
cmp
fidivs
pusha
test
hlt
sbb
mov
adc
xor
pop
push
xor
shrl
add
jle
fcomps
repz
sbb
mov
pop
mov
leave
push
cmp
fbstp
mov
cmp
lcall
jbe
mov
xchg
or
sub
test
js
shlb
dec
cmp
add
insl
cli
pop
je
icebp
push
cmp
jbe
shrl
fisttpll
and
sub
inc
push
rcl
insl
xchg
adc
adc
mov
inc
add
push
cmp
jnp
loop
adc
ret
xchg
xor
sbb
fisttps
js
fadds
inc
in
push
out
clc
xchg
sbb
dec
dec
lock
xchg
dec
sbb
and
loopne
sub
cmp
sbb
imul
xchg
ss
fs
call
data16
adc
adc
pop
mov
pop
mov
arpl
fstpl
dec
mov
mov
xchg
sbb
xlat
xchg
scas
xorb
mov
push
mov
sbb
cmp
sbb
cltd
mov
xchg
push
xchg
movl
and
out
sub
cmpsb
or
mov
cmp
xor
lea
dec
lods
enter
inc
dec
push
sarb
aas
repz
sti
push
decl
dec
flds
stc
jb
mov
xchg
xchg
aaa
add
mov
cmp
loope
mov
movsl
inc
pop
adc
mov
test
sbbl
sarl
or
push
lea
lcall
adc
div
das
xor
aad
add
cmc
jp
or
mov
sbb
addr16
push
fwait
inc
dec
inc
ret
push
add
add
ds
mov
or
jge,pt
stos
mov
ret
push
add
aad
or
mov
mov
fisttpll
xor
pop
inc
pop
push
jbe
jp
push
push
out
sub
daa
shlb
int
insl
daa
mov
and
into
add
ss
cli
imul
lret
sahf
out
adc
aad
inc
mov
in
jne
fstpt
testb
jge
or
fsubrl
pop
xor
push
sbb
push
sbb
aam
popf
or
inc
xor
cmpsb
icebp
movsb
lcall
mov
pop
and
dec
lretw
int3
enter
in
cli
js
dec
fbstp
ret
mov
jo
int
pop
call
jb
jecxz
push
stos
sbb
jmp
mov
sbb
and
jb
fidivrl
sar
pop
push
cmp
jg
jecxz
inc
rorb
scas
push
xor
mov
inc
lret
nop
mov
lock
xor
test
in
pushf
jno
mov
mov
inc
sub
loopne
cwtl
add
gs
lock
inc
pushf
dec
xor
lods
subl
add
dec
jne
std
add
xlat
mov
mov
cli
mov
dec
rcrb
pop
dec
dec
pop
add
in
fistl
add
int3
pop
int3
sbb
push
testl
clc
jge
sub
add
pop
mov
dec
pop
inc
pop
ret
or
mov
cmc
push
add
les
mov
push
mov
xor
sub
movsb
inc
test
popa
cwtl
rorb
inc
test
rclb
ret
adc
jae
aaa
popa
leave
sbb
ss
test
lods
jl
or
or
jne
sub
push
repnz
pop
dec
cmp
dec
add
sahf
aad
out
in
clc
out
aad
gs
adc
int
adc
stos
test
data16
pop
lods
pushf
adc
mov
cmp
mov
pop
insb
xchg
rol
scas
push
adc
int
popf
push
rclb
push
in
sbb
jno
push
lahf
popl
shr
jl
mov
icebp
mov
inc
inc
in
xor
aaa
mov
push
aad
push
clc
aaa
pop
in
cwtl
mov
pop
faddl
mov
loop
push
xchg
xchg
inc
aam
pop
sub
or
es
mov
pop
jge
sbb
inc
fisubl
inc
dec
int3
and
imul
sbb
push
mov
jnp
xlat
push
pop
dec
sub
mov
sbb
adc
add
jnp
jl,pn
loop
adcl
mov
push
jno
cmp
jg
pop
cli
outsb
into
insb
in
sbb
or
inc
mov
std
mov
push
fwait
ret
in
lods
cmp
and
cmpl
in
test
sbb
lods
sbb
test
aad
lds
pop
mov
mov
shrb
jno
add
bound
push
aas
test
lcall
loopne
mov
je
iret
cmp
arpl
or
adc
ja
mov
pop
inc
loopne
push
mov
pop
pop
mov
stos
mov
jl
mov
sbb
pop
clc
cs
xchg
pop
push
mov
loopne
sub
mov
js
ja
jg
and
sub
addl
adc
push
out
roll
imul
cli
das
fidivrl
inc
je
or
std
add
pushl
sar
adc
nop
and
sbb
cmp
jmp
fistpll
fbld
inc
outsb
fs
adc
jmp
movhps
roll
push
arpl
in
fistps
xchg
jmp
add
mov
mov
mov
inc
and
roll
clc
mov
into
addr16
sbb
sbb
adc
es
stos
call
push
mov
adc
and
mov
decl
adc
and
ja
test
jno
pop
add
cltd
pop
pop
adc
push
mov
dec
inc
sahf
outsl
aad
das
insl
cmpsl
sbb
mov
sbb
sbb
push
repz
test
enter
push
in
adc
fildl
decb
lods
cmpsl
js
xchg
xor
xchg
clc
sub
mov
and
shrl
std
bound
loopne
cmpsl
in
mov
push
incl
fnstsw
push
cmpsb
gs
aad
xchg
fcompl
xlat
mov
sbb
pop
jae
cmpsl
or
inc
or
sbb
shl
lods
and
jne
mov
hlt
fildll
adc
or
mov
pushf
xchg
lods
outsl
jp
fisttps
xchg
adc
mov
or
popf
xchg
jle
jg
mov
adc
ss
or
cld
call
daa
rcr
or
shlb
jmp
pop
xchg
cmp
gs
mov
dec
adc
setb
clc
decl
mov
insl
inc
bound
pop
ds
mov
add
mov
and
and
loopne
mov
into
sub
cmc
inc
fnsave
add
cld
sub
arpl
xchg
adc
mov
xor
mov
mov
lea
push
popa
fstp
mov
add
lock
push
dec
cmp
hlt
or
xor
test
nop
cli
sbbl
clc
jmp
mov
push
mov
push
orb
mov
inc
cmc
mov
and
pusha
xchg
add
lods
mov
mov
push
mov
out
add
sbb
subb
int3
push
rolb
cs
pop
push
aaa
rolb
test
jo
cmp
mov
rcl
or
inc
mov
sar
call
cmp
push
cmpsl
and
jl
ljmp
inc
pushf
cmpsl
jo
test
es
lea
cs
jge
and
leave
loopne
outsl
jno
sbb
ret
ss
lret
daa
push
es
lret
mov
push
lock
pop
outsb
sbb
inc
sbb
ret
xchg
and
roll
aaa
and
test
insb
push
push
pop
xchg
add
pop
inc
outsl
sbb
subb
adc
cltd
popa
icebp
sbb
aas
inc
popf
jae
fistpll
loopne
jo
inc
and
push
fstpl
pop
mov
fidivl
sbb
jg
outsl
inc
clc
mov
adc
adc
fists
pusha
mov
cwtl
insl
sbbl
adc
sarl
popa
pop
and
mov
dec
add
add
sub
inc
sbb
xorb
mov
ds
xor
dec
jl
dec
xlat
adc
mov
nop
shll
push
or
mov
decl
movl
leave
xchg
dec
xor
insb
cmpsl
pusha
daa
bound
pop
inc
insl
mov
scas
ret
test
test
lret
inc
xor
loop
jg
filds
lods
idivl
push
add
addr16
or
mov
cmc
movsl
pop
es
in
inc
outsl
dec
mov
stos
addr16
fldl
mov
lcall
dec
lcall
cmc
adc
imul
mov
mov
das
cmp
adc
ret
movsb
fildl
mov
stos
lock
jnp
mov
add
push
sbb
dec
fstps
and
xor
mov
iret
adc
and
movsb
arpl
sbb
or
mov
add
pop
inc
sbb
sbb
adc
mov
testl
or
fsubs
loopne
or
je
adc
xor
fldenv
les
sub
inc
jnp
dec
push
mov
mov
sub
aam
call
aam
repz
add
and
sahf
in
and
add
push
lea
sti
jae
add
xchg
sbb
ss
cmp
or
rcll
xchg
add
mov
out
loopne
fcomi
mov
xor
mov
insl
mov
in
xor
int
and
dec
mov
pop
jne
pop
lods
and
cmp
divl
pop
shrb
shrl
xor
jne
push
jb
jno
xor
lahf
inc
mov
mov
mov
or
repnz
lock
fs
add
sub
ficompl
out
and
xor
mov
jg
test
xchg
nop
dec
movsl
pop
mov
pop
andl
in
in
call
adc
pop
jge
popf
and
or
or
dec
pushf
jns
or
sbb
adc
subl
xchg
xchg
sub
and
mov
scas
sub
lock
sub
cmp
rorb
dec
push
jge
pop
add
cwtl
jp
xor
adc
dec
iret
xchg
addb
leave
or
stc
adc
sbb
add
push
mov
add
add
xchg
xchg
adc
inc
dec
in
dec
ret
scas
lods
fwait
jecxz
push
cmp
mov
push
lea
push
cmp
push
push
test
jge
enter
dec
sub
fstpl
pop
pop
sub
outsb
jmp
or
ret
jae
aam
out
fstl
push
adc
fdivs
ljmp
pop
push
sbb
aam
sbb
add
lcall
sbb
cmp
ret
mov
rorl
test
or
xchg
cmp
in
dec
lahf
cmp
push
mov
fisubl
in
cwtl
fsubs
xor
rclb
in
dec
xor
call
pop
subl
nop
shll
cltd
ljmp
ljmp
push
and
rolb
fptan
adc
pop
add
rcll
mov
cmp
ret
int3
add
call
mov
aam
pop
adcl
mov
add
iret
mov
insb
popa
sbbb
fs
push
mov
mov
and
neg
pop
pop
sbb
ret
or
loopne
mov
adc
fisttpll
out
add
mov
pop
nop
or
add
cwtl
fbld
pop
or
ret
scas
loope
or
test
stos
lea
aam
push
add
and
mov
add
xor
jnp
jo
jae
lret
dec
ljmp
push
jnp
mov
mov
or
push
pop
adc
cld
add
dec
adc
adc
mov
mov
pusha
aas
dec
lds
scas
xchg
push
xchg
add
lods
pusha
popa
adcl
mov
mov
mov
fsubrl
mov
in
into
dec
andb
scas
xor
sub
sub
xor
fwait
mov
xchg
loopne
loopne
loop
insl
pop
pop
adc
dec
mov
pop
sub
sbb
lret
jo
arpl
jecxz
loopne
push
sub
inc
dec
inc
loope
insb
lock
aam
push
fcom
fistpll
xchg
lock
adc
mov
stos
leave
mov
jmp
divl
add
push
cmp
xor
test
push
xchg
lock
dec
push
loopne
or
cmp
scas
pop
mov
sub
je
push
jmp
test
je
sub
lods
mov
ds
call
fisubrl
jle
test
push
int
inc
icebp
movsl
adc
or
fadd
pop
jbe
push
mov
pop
cmp
aas
or
clc
subl
pop
xor
sbb
pop
xchg
in
daa
test
pop
dec
testl
xor
mov
xchg
dec
ret
dec
stos
inc
mov
lret
push
pop
pusha
dec
lret
lock
loopne
sbb
mov
andb
push
push
push
push
lea
sbb
test
fwait
push
inc
int3
dec
out
xchg
or
movsl
sbb
push
mov
pop
inc
fsub
ror
or
and
nop
or
ds
jne
inc
ja
xchg
fmull
stc
std
fsubs
movsb
xchg
xor
mov
sub
mov
loop
sbb
int
adc
lret
xlat
add
out
ret
xchg
or
cld
dec
dec
popf
xchg
pop
std
pop
jecxz
adc
pop
add
cmp
aas
mov
add
and
and
addr16
test
xchg
lcall
cmpl
xchg
cmpb
add
inc
fisubl
insl
jp
addr16
jge
mov
loopne
ret
jae
mov
jo
mov
jo
or
stos
xlat
cmp
insb
movsb
mov
std
pop
sub
add
lcall
mov
adc
dec
jge
bound
idivb
nop
gs
int3
call
mov
outsl
ss
jl
mov
jb
and
jns
jecxz
aam
pop
jno
and
add
out
push
sbb
mov
and
xchg
je
mov
or
jl
xchg
fldt
fnstcw
adc
add
mov
dec
std
std
mov
sarb
xchg
and
xor
mov
sbb
das
mov
jge
fbstp
jo
bound
xor
in
add
test
jle
cmp
cmpsb
jbe
xlat
shl
les
add
cmp
lods
mov
mov
add
push
sbb
cmpsl
pop
xchg
mov
inc
call
mov
jg
and
inc
jg
and
enter
push
rcrb
addb
sub
out
inc
sub
mov
inc
xchg
xchg
orps
cmp
fadds
in
clc
fdivp
cmp
mov
mov
jb
lods
mov
ljmp
ror
push
pop
in
mov
add
cmp
inc
mov
inc
pop
pop
insl
sub
jl
or
lods
je
les
mov
jecxz
cmp
push
adcb
xchg
icebp
dec
in
scas
add
add
adc
cmp
test
ja
aaa
clc
push
iret
mov
xor
sahf
jae
add
dec
nop
xor
imul
pop
jecxz
xor
dec
cld
push
cmp
jno
fmull
cwtl
aam
mov
cmp
loopne
inc
lret
lock
cmp
pop
lock
scas
inc
or
daa
push
lock
sbb
and
fwait
xor
or
and
and
sbb
dec
dec
das
or
add
or
adc
push
sub
outsl
and
sub
jae
movsb
push
daa
sbb
xor
and
scas
ficompl
jb
mov
mov
push
add
test
cmp
xor
out
aam
jmp
pop
cld
add
fwait
inc
insb
push
xor
adc
add
adc
cld
pop
or
loopne
inc
jo
orb
mov
add
cmp
lds
add
or
sbb
dec
icebp
les
pop
jg
orb
adc
jmp
inc
loope
push
xor
pop
push
adc
pop
call
dec
jbe
jb
ss
int
aas
lock
or
sbb
jo
loop
and
xor
sbb
push
test
or
inc
test
xor
icebp
out
cmp
pop
cmp
ljmp
and
sbb
dec
xor
add
sub
in
fwait
mov
mov
cmp
cld
frstor
jae
add
test
inc
sarl
push
lock
inc
lods
js
std
lret
xchg
dec
mov
adc
fisttpl
ret
data16
mov
cmc
lock
sbb
push
or
mov
out
push
mov
inc
adc
hlt
jle
dec
pop
mov
dec
jnp
fwait
adc
fld1
jns
push
sub
jg
inc
outsl
das
cmp
outsl
pop
bound
inc
insl
mov
mov
mov
or
jle
filds
jns
add
cltd
inc
int3
mov
imul
sti
cmc
call
sbb
mov
xor
decb
cmc
out
cli
mov
xor
and
inc
orb
pop
loopne
mov
iret
cmp
clc
mov
hlt
sbb
call
pop
or
cld
mov
push
mov
or
cli
or
adc
movsl
mov
fwait
adc
ljmp
enter
jle
or
xchg
sub
idiv
lcall
jnp
aad
xchg
subb
push
add
inc
addl
in
lret
les
mov
aam
and
fsubrs
inc
mov
mov
test
cli
imul
aam
and
pop
pusha
sub
xor
arpl
mov
leave
mov
jge
sbb
xor
xchg
test
dec
rcrl
mov
or
fdivr
fmuls
sbb
incb
xor
test
cmp
dec
jbe
jg
ss
es
into
das
push
hlt
jno
cmp
out
stos
inc
jg
insl
cld
call
dec
andb
out
pop
mov
out
jecxz
fisubrs
ds
ror
push
mov
daa
out
dec
mov
xchg
outsl
push
mov
xchg
fdivl
movsb
outsb
leave
outsl
rclb
imul
inc
xor
xlat
pop
mov
add
pop
lods
pop
mov
cmp
mov
ja
int
ret
add
dec
cmc
mov
push
pop
jb
push
daa
mov
imul
test
cmp
mov
pop
sbb
push
movsl
and
out
mov
inc
lcall
icebp
mov
pop
sub
mov
lock
ljmp
lock
add
mov
fstps
xchg
test
xchg
jmp
fists
outsb
outsl
rclb
sub
cmp
xchg
cmp
cld
pop
cmpb
adc
pop
rcrl
xchg
je
decb
dec
or
std
mov
mov
popf
xchg
push
pushf
xor
adc
je
xor
or
andb
xchg
or
xor
cmp
testl
addr16
xor
add
call
inc
and
cltd
mov
aam
jbe
xor
lock
imul
sub
aaa
dec
add
das
mov
add
sbbl
dec
outsl
insb
lock
and
ljmp
cld
jbe
movsb
jl
xlat
pop
movb
dec
jge
adc
pop
scas
movsb
mov
mov
jae
inc
xor
lock
or
enter
jge
ja
pushl
test
adc
adc
jg
andb
dec
shll
dec
push
jns
xor
cli
es
repz
popa
push
ret
xor
xor
outsl
clc
push
or
pop
sbb
push
ficoms
pop
imul
sahf
or
int3
and
cmp
outsb
rolb
aam
es
inc
adcb
roll
in
push
mov
dec
enter
jne
jle
xor
aam
and
mov
lret
dec
sbb
outsb
mov
mov
jl
and
mov
mov
mov
aaa
add
pop
fiadds
pop
or
xchg
cli
fldt
fsubl
lret
fs
push
aad
js
mov
xchg
or
test
sarl
pop
pop
out
adc
dec
add
outsl
jl
mov
cmpsb
mov
into
pop
mov
adc
jbe
repnz
push
popa
mov
dec
or
imul
sub
jo
pop
rol
int3
adc
test
es
sub
inc
pop
pop
mov
and
adc
sbb
jne
cmp
lret
adc
int3
adc
loopne
gs
les
incl
push
xchg
add
outsl
ds
gs
subl
scas
test
in
dec
xor
mov
cmp
addb
xadd
ficomps
aad
or
jnp
ljmp
mov
out
repz
mov
in
inc
mul
inc
je
jne
ret
or
adc
inc
xor
push
inc
xchg
sub
dec
push
adc
imul
push
inc
push
inc
adc
jl
add
and
push
mov
pop
pop
in
popa
xor
aad
cmp
jnp
jmp
test
fisubrl
dec
sbb
inc
pop
lea
call
sbb
stos
rolb
xor
cmp
and
and
mov
or
jno
icebp
dec
inc
es
cmp
inc
daa
and
ret
jmp
sub
dec
push
popa
clc
push
jae
fimull
add
cmp
fnstsw
mov
call
es
cmp
mov
xor
jp
scas
cld
fstpl
int
scas
cmp
ds
dec
mov
dec
inc
xchg
cmp
mov
xchg
shlb
cli
stos
adc
testl
outsl
add
imul
add
outsb
sub
fldenv
adc
sub
sbb
xor
mov
call
add
pop
pop
lods
insb
ficompl
mov
inc
psrlq
inc
sub
test
vmovntps
mov
cli
repnz
dec
lret
das
mov
mulb
lock
pop
sub
in
xchg
stos
cwtl
inc
adc
lret
dec
inc
or
lret
cld
and
add
push
xchg
imul
out
push
cmpsb
pop
cmp
and
iret
sub
bnd
loop
mov
add
inc
das
add
push
xor
ljmp
pop
jo
popa
sub
test
jnp
out
sbb
adc
lret
ss
mov
aad
test
outsb
fnsave
loopne
push
aad
mov
fstpl
or
cmpsl
mov
mov
sbbb
cmp
and
cmpsb
mov
xchg
xchg
out
add
mov
jno
dec
addps
pusha
mov
mov
inc
lock
and
dec
enter
stos
dec
aas
stos
add
lock
sbb
ds
shll
pop
and
pop
jmp
sahf
clc
xor
bswap
jnp
out
imul
inc
xor
xchg
adc
push
loop
push
ror
xchg
cmp
push
mov
adc
rcrb
outsl
hlt
mov
ss
pusha
mov
mov
push
jns
push
push
dec
mov
jecxz
jnp
add
mov
or
mov
cmp
and
leave
aas
inc
push
subl
in
shll
shll
test
adc
push
mov
fisttps
mov
fldt
push
inc
arpl
ficompl
adc
bound
mov
and
or
nopl
test
mov
jg
movsb
push
sti
push
or
sbb
mov
push
or
push
inc
push
enter
out
lds
jecxz
adcb
dec
add
ja
sub
sbb
push
cmpsb
mov
sub
mov
fsubrl
adc
push
sti
stos
in
ljmp
inc
scas
adc
lea
out
cmp
xor
lds
cmpsb
fisubrl
mov
mov
adc
nop
adc
push
mov
int3
sub
mov
loop
xor
out
lock
sub
jbe
push
or
lcall
add
je
outsl
mov
je
addl
cmp
push
ja
sbb
inc
mov
loopne
pop
test
pop
fmuls
sar
ljmp
int
lods
aas
fisubrl
push
mov
shl
fadds
xchg
cld
sbb
flds
out
inc
inc
cmpb
stos
or
call
add
hlt
fs
sahf
or
lcall
loopne
dec
add
push
stc
loopne
sbb
add
mov
movaps
cmc
ret
or
sub
pop
inc
lds
xor
aaa
adc
imul
mov
or
push
pop
nop
pop
lcall
xlat
stos
or
or
ljmp
ljmp
and
ljmp
lds
mov
mov
adc
mov
outsl
hlt
cmpl
push
xor
dec
mov
pushf
push
fmuls
loope
outsb
insl
shll
pop
fcmovbe
sub
cmp
incb
xchg
mov
ss
icebp
pop
shll
sbbb
and
sub
mov
icebp
mov
mov
imul
into
lock
xchg
ret
call
push
cmp
pushf
xchg
sahf
xchg
mov
sub
aaa
rcrl
and
cmp
or
adc
das
adc
std
aad
dec
push
and
sahf
fdivl
outsl
mov
dec
into
pop
jp
pop
jl
sub
push
or
test
sbb
push
js
mov
je
mov
jb
fisubl
sbb
jecxz
dec
ret
jmp
inc
push
pop
pop
dec
sub
scas
decb
push
mov
pop
orb
mov
pop
inc
jb
inc
insl
push
mov
adc
jecxz
pop
lret
test
and
lea
aam
fwait
add
gs
icebp
jne
js
es
lea
cli
insb
pushl
add
jl
lahf
insb
test
and
sub
inc
imul
xchg
add
jecxz
xchg
scas
push
inc
fdivrs
sbb
test
stos
icebp
fcoms
pop
pusha
cmpsb
ja
cli
jmp
sbb
pop
xor
lock
sbb
test
insl
jmp
pushf
sub
push
leave
fnsave
lods
out
cli
das
movsl
sbb
and
int3
push
ljmp
lret
jno
dec
fs
incb
stc
pushf
cmp
lods
pop
fdivs
push
pop
negl
dec
add
dec
hlt
jo
cmc
jge
repnz
push
sbb
ljmp
mov
fbstp
xchg
pop
pop
test
push
jecxz
out
movsb
popf
outsb
imul
dec
mov
push
pop
fidivrs
imul
fucomip
idivb
sbb
lahf
push
and
pop
shrl
inc
xor
xlat
movsl
sub
insl
ja
sbb
xor
das
jl
mov
lods
cmp
ret
xor
jg
jl
fwait
xor
orb
pop
adc
mov
test
add
je
cmp
lcall
sbb
xor
pop
jge
cmp
addl
rcll
jne
and
fildl
shr
rcl
dec
mov
pop
xor
push
hlt
xor
inc
mov
sub
inc
adc
mov
hlt
adc
and
dec
xchg
inc
loop
loope
bound
dec
negb
psraw
mov
dec
fimull
shll
pop
inc
dec
cmpsl
dec
cli
and
adc
rorl
aam
push
add
mov
mov
addl
mov
adc
mov
pop
movsl
repz
rclb
and
les
mov
data16
mov
cmp
test
sbb
xor
aad
xor
inc
mov
dec
and
inc
push
cmp
mov
enter
mov
xor
lods
shrl
add
mov
xor
clc
cmp
dec
and
into
add
push
mov
ficomps
nop
sbb
inc
xchg
shrl
adc
es
lea
adcb
add
add
clc
xchg
add
xor
dec
sub
leave
and
xchg
push
orb
or
loope
mov
andl
or
stos
hlt
in
fucom
daa
push
cmp
rcr
pop
or
dec
jo
clc
sbb
aaa
lds
mov
stos
movsl
sub
pop
stos
sbb
fprem1
push
nop
sbb
add
leave
jg
mov
or
or
ret
lods
sbb
sbb
cwtl
andl
xchg
dec
pop
movsb
pop
cmp
push
push
gs
call
das
js
or
pop
jecxz
push
push
outsl
adc
in
dec
or
in
jns
xor
daa
stos
pop
mov
cmp
lcall
adc
inc
inc
mov
dec
cld
cld
push
xchg
mov
jle
jecxz
xor
push
or
inc
pop
mov
xor
cmp
mov
mov
xchg
int3
jns
setns
sbb
inc
cmp
jg
fldenv
mov
xchg
outsl
popa
cmp
les
add
iret
cmp
fisubrl
cs
mov
or
lea
xchg
mov
mov
jbe
xchg
cmpb
xor
mov
add
stc
cs
loop
mov
scas
add
or
mov
mov
mov
into
hlt
shr
sub
sti
add
das
mov
lcall
aam
mov
fmull
xchg
stos
rcrl
push
jle
xchg
bound
cmpsl
pushf
insl
ret
scas
loop
mov
mov
xchg
jb
mov
xor
sub
cs
movsb
mov
imul
addr16
push
xlat
cmpb
clc
das
adc
sub
jo
sbb
repz
lods
push
sub
and
mov
insb
cmpsl
adc
cmp
xor
jl
pop
dec
int
jmp
outsl
test
test
add
xor
dec
insl
pop
and
ja
dec
aaa
sbb
loopne
pop
out
call
sti
mov
ljmp
daa
mov
mov
movb
push
mov
rolw
xchg
mov
scas
push
addb
aad
loopne
cmp
or
decl
mov
scas
and
inc
ret
xchg
test
fmull
ficoms
adc
push
incb
xchg
clc
fistl
dec
into
push
inc
pop
lods
xchg
rorl
jnp
adc
inc
call
stos
dec
adc
fcomps
test
out
adc
in
jg
fcmovnb
lds
push
jmp
pop
pusha
add
or
les
cwtl
hlt
sub
outsb
insb
js
test
popf
and
mov
sbb
lret
pop
dec
or
sub
pop
jb
loope
imulb
push
je
es
cmpsb
cmp
sub
loope
jg
lods
arpl
inc
stc
dec
pusha
xor
cmc
xor
cli
cmp
jecxz
movsl
mov
mov
or
jecxz
pop
cltd
test
jbe
pop
inc
popa
pop
mov
repz
fcompl
cltd
push
pop
roll
pop
aam
jecxz
inc
mov
push
paddsw
cmp
cmp
push
mov
mov
dec
sub
fwait
popa
inc
xchg
insb
or
lods
loopne
adc
leave
add
lods
cmpsl
mov
loope
xor
inc
ja
shlb
daa
dec
lods
add
mov
lock
sar
ret
repnz
cwtl
and
pop
mov
inc
cmpsb
outsb
xor
repz
sbb
jecxz
adc
rcrb
outsl
or
xsha256
cmpsb
push
xor
pop
enter
lods
fwait
test
in
adc
push
popa
mov
jle
test
add
jbe
push
sub
out
sub
arpl
cmp
or
fcomp
mov
in
enter
xor
sub
das
das
js
mov
dec
mov
mov
nop
adc
pop
loop
mov
push
push
inc
sahf
add
call
dec
pop
push
stos
add
inc
subb
xchg
inc
mov
leave
or
xor
bound
adc
xor
push
mov
inc
stos
inc
ret
push
jle
add
pop
sub
or
pop
cmpl
subb
orb
cmpsb
fildl
pop
add
push
jmp
jno
les
mov
ds
inc
pop
js
popa
imul
xchg
ds
mov
mov
rolb
enter
sbb
mov
stos
scas
dec
mov
imul
jb
orl
inc
out
lahf
xor
or
insb
pop
sub
rcll
inc
ds
pop
add
scas
sbb
or
jae
sub
fisttps
aas
imul
iret
aaa
enter
mov
popf
testb
mov
push
cmp
outsl
inc
jbe
loopne
adc
jb
cmc
sbb
mov
frstor
mov
stos
cmp
mov
cmp
dec
sub
mov
into
jno
sbb
ficoml
inc
adc
int3
lds
mov
out
rolb
inc
sbb
push
add
addr16
in
jbe
cmpl
lock
push
ret
sub
or
pop
mov
popa
shrb
jbe
jmp
xchg
or
mov
xor
rcll
mov
mov
or
push
sub
mov
rorl
and
and
int3
mov
sub
mov
mov
iret
sub
pop
js
dec
inc
push
in
xchg
and
fcoms
inc
dec
fistpll
outsl
lods
adc
pop
iret
int3
dec
cli
loop
daa
cmp
and
and
jle
fnstsw
sub
pop
cmp
push
loopne
mov
mov
es
out
or
push
jo
and
fwait
aas
shrb
push
int
push
mov
dec
xchg
xchg
pusha
lea
push
sbb
inc
and
or
jp
es
shrl
cmp
push
pop
orl
jne
xlat
dec
sbb
clc
call
call
dec
and
xchg
lods
add
nop
xor
add
clc
sarl
jno
inc
add
jp
mov
cmpb
mov
and
sbbb
lea
pop
enter
cmp
es
pop
xor
mov
jne
fwait
cmp
sub
cmp
sbb
repnz
dec
mov
sbb
and
je
xor
loop
subb
xchg
cmp
ljmp
gs
aam
jae
aaa
enter
mov
fs
sub
fcompl
and
insb
imul
and
xlat
shll
outsb
fucomip
outsb
jge
mov
pop
leave
add
jge
xor
ret
add
les
or
inc
loope
cmp
jle
add
movsb
aam
add
sbb
stos
adc
xchg
daa
add
jo
lods
rcrl
sbb
jge
cwtl
jl
call
push
loope
inc
pusha
mov
loope
popa
add
push
testl
sahf
pusha
mov
test
sbb
or
enter
cmp
and
cmc
mov
loop
popf
ret
mov
or
decl
sbb
jne
mulb
sbb
out
fbld
icebp
rorb
test
outsb
in
push
gs
ret
or
sub
inc
pop
shlb
sahf
ret
dec
cwtl
lods
add
xchg
imul
xor
inc
rolb
sub
adc
xor
mov
push
cwtl
les
cmpsl
aam
shl
ret
add
push
test
push
andl
pushf
sbb
inc
insb
push
cmp
and
mov
fimull
je
out
jl
test
push
aaa
test
rolb
push
sbb
and
shr
aas
jmp
int3
sarb
jbe
arpl
sti
sbb
jge
iret
inc
or
push
mov
adc
mov
add
test
sbb
add
lods
xor
insb
inc
insb
inc
rorl
sbb
test
popa
cmp
add
inc
dec
lret
call
cs
test
add
fidivrl
or
add
adc
sub
mov
fcoms
scas
inc
cmp
rcll
mov
add
lcall
rcrl
sbb
pop
mov
sbb
js
pop
jl
lea
adc
incb
jne
stc
enter
push
mov
push
push
cmp
push
mov
pusha
sub
adc
dec
dec
xchg
lcall
mov
cwtl
sbb
pusha
pop
lock
ret
in
cs
push
iret
pop
add
xor
icebp
outsl
aaa
jbe
sbb
add
adc
ljmp
fld
and
dec
mov
push
sbb
out
push
push
movsb
inc
xchg
imul
xchg
adc
fsubp
adc
cmp
or
packssdw
daa
inc
push
nop
andl
mov
fisttpl
mov
mov
or
push
xchg
inc
add
push
outsl
outsb
loop
inc
inc
aad
add
testl
cmpsb
iret
subb
rcrl
in
mov
xchg
cmp
mov
cmp
sub
dec
add
in
cmp
cmc
das
std
push
push
aas
lahf
cmpsl
pop
push
jmp
adc
pushl
shll
dec
rep
mov
dec
sub
push
mov
shl
sbb
outsl
decl
sbbb
lret
dec
test
add
inc
loope
add
js
inc
lea
fs
fnstsw
divb
xor
adc
frstor
add
repz
incl
je
add
ja
addr16
xchg
push
mov
sahf
shl
inc
mov
je
call
call
jo
mov
inc
xor
mov
movsb
lds
movsl
pop
and
add
mov
sbb
xchg
mov
mov
and
leave
sbbb
test
sub
push
mov
sbb
and
fcmovnu
lds
fistpl
or
out
sbb
dec
add
idivl
jbe
mov
pop
fcompl
add
mov
cmp
mov
out
inc
fisubl
xlat
fnstenv
icebp
adc
xchg
je
outsl
mov
lock
test
push
add
push
mov
cmpsb
sub
push
lock
mov
scas
cmp
aaa
xchg
xorb
andl
mov
fldenv
adc
pop
xchg
or
adc
lret
pop
xchg
mov
add
push
fldl
rorl
or
push
std
adc
jg
mov
pop
add
sbb
sbb
dec
lahf
std
or
cmp
test
mov
jecxz
mov
mov
mov
call
repz
or
add
mov
add
lods
andb
mov
pop
cmp
rcr
icebp
fists
jnp
shl
inc
cs
lcall
lods
test
das
xchg
or
movsb
adc
or
hlt
cmp
or
add
pop
popa
inc
adc
loope
push
insl
mov
sbb
incb
add
cmpsb
or
or
push
mov
inc
xor
inc
lds
cmc
and
xor
mov
jns
inc
dec
pop
pusha
cmp
mov
shll
ds
inc
sbb
push
xchg
pop
cmp
popl
inc
add
rcrl
dec
xor
push
das
loopne
in
cmp
cs
je
sub
pop
xchg
call
xor
inc
cmp
xchg
imul
mov
pop
test
push
ret
fldl
loop
jl
shrl
aaa
shrb
pop
insl
mov
insl
ds
lea
mov
pop
xor
mov
outsl
ffreep
inc
insl
cmp
mov
and
ss
outsl
xchg
repz
cmp
add
adc
sub
aaa
mov
imul
enter
adc
dec
mov
mov
mov
jmp
add
or
cmovl
jg
jnp
sub
mov
loopne
inc
jmp
xchg
sbb
xchg
ss
pop
idiv
inc
lods
mov
ljmp
cmp
or
sti
lods
mov
mov
ret
cli
mov
cmp
mov
xchg
adcb
mov
add
out
sbbb
clc
out
pop
adc
mov
pop
inc
push
fcomi
dec
mov
jge
xrelease
outsb
xchg
sbb
hlt
mov
sub
jns
dec
lea
rcll
adc
mov
inc
xchg
adc
and
or
mov
loope
jnp
jl
xor
sbb
push
cmpl
fadds
xchg
loope
and
add
xlat
or
scas
hlt
inc
add
outsl
test
loope
out
cld
push
lods
testl
push
mov
lret
dec
pop
sbb
mov
call
xor
dec
mov
jecxz
insl
and
jno
lods
and
xor
and
js
sbb
filds
inc
sbb
js
or
mov
cmp
jl
pop
mov
std
sti
int
cwtl
aam
out
push
jecxz
clc
das
sub
inc
add
call
xchg
adc
incb
sub
in
mov
loopne
adc
ljmp
xor
xchg
je
push
cwtl
or
std
inc
sub
jmp
mov
nop
push
add
cmp
ret
imul
je
pop
and
cmp
pushf
clc
xchg
fucomi
fisttps
pusha
pop
movsb
filds
mov
cwtl
mov
daa
inc
mov
cmp
pushf
or
shll
stos
out
shl
push
dec
jge
pmulhw
into
mov
mov
ret
pop
andb
or
push
sub
pop
ja
xchg
sub
or
inc
sub
cmp
mov
add
sub
inc
add
aam
pop
loope
outsb
sub
aam
hlt
lods
jle
or
loop
rcl
sub
rorb
mov
inc
mov
test
aad
sub
mov
rcrl
nop
call
or
or
leave
xchg
mov
adc
dec
arpl
or
jg
test
inc
xchg
jg
xchg
or
test
nop
mov
js
cmpb
filds
or
fucomi
sub
lods
ret
adc
popf
leave
and
jecxz
and
mov
inc
jle
xor
mov
mov
bound
fiaddl
sub
or
xor
push
push
add
ret
add
cwtl
insl
sbb
hlt
in
cwtl
std
and
sub
imul
push
nop
cmpsl
lea
pop
subl
out
add
lock
xchg
stos
sbb
push
fxch
sbb
jl
mov
cmpsl
add
es
adc
rep
repnz
xchg
orl
call
xor
das
xor
fst
lods
and
mov
lods
pop
cmp
cltd
pusha
rorb
pop
jnp
stos
leave
out
nop
or
scas
inc
sbb
fwait
fwait
in
insb
leave
mov
mov
cmpsl
imul
mov
dec
mov
aas
mov
pop
imul
cmp
sbb
out
ss
mov
in
add
push
mov
xchg
addr16
outsb
clc
pop
add
les
call
pop
loope
cmp
ljmp
pop
inc
and
mov
push
ljmp
adc
call
cmp
mov
icebp
jo
sub
push
pop
mov
pushf
add
pop
sub
push
ficompl
repnz
sbb
xchg
nop
stos
dec
mov
sarl
loopne
sbb
inc
push
xor
and
dec
shrb
and
sti
daa
and
push
ret
lret
or
sbb
or
pop
jnp
push
pop
adc
push
aam
outsl
in
xchg
mov
ljmp
and
add
sub
inc
andb
mov
sbb
cmpsl
cmpsb
add
push
and
fbld
lea
insb
jns
das
bound
fs
out
int
push
mov
jp
in
ljmp
loopne
sbb
dec
das
mov
ror
push
mov
lcall
add
mov
sub
ja
or
push
jno
cli
jmp
push
les
xchg
push
je
inc
inc
inc
movsb
and
pop
xor
inc
idiv
mov
and
adc
xchg
pop
enter
dec
inc
mov
xchg
xchg
mov
or
xchg
dec
add
or
lock
dec
and
mov
add
add
ja
ss
nop
add
pop
dec
jle
clc
aad
add
sub
icebp
inc
adc
inc
arpl
and
testb
movl
pusha
xorl
popf
xchg
sub
mov
pop
xor
sub
nop
and
mov
adc
push
les
pushf
sbb
dec
adc
add
sub
xor
push
call
add
std
mov
pop
xchg
aam
stos
dec
adc
aam
aam
inc
fmuls
mov
adc
and
sbb
dec
mov
push
shrl
sbb
mov
and
shrl
dec
add
test
in
pop
popf
fiadds
cmp
jp
rcr
and
adc
sbb
push
xor
mov
mov
lock
adc
in
loopne
and
insl
ds
sbb
fsubrs
loope
rcll
cmp
mov
lods
fsubs
js
or
inc
scas
cmp
outsw
iret
inc
xor
outsl
mov
adc
sub
add
fadds
mov
xchg
add
mov
rcrb
adc
fdivl
loopne
fs
sarb
dec
adc
mov
out
xlat
jb
addb
dec
inc
add
sub
nop
cwtl
rclb
sbb
enter
push
sub
xchg
nop
out
cld
sub
fwait
sbb
es
sbb
xor
xchg
ds
add
adc
mov
stc
add
jno
sar
movsl
icebp
and
aaa
cmp
pop
inc
and
sbb
clc
pop
lods
inc
insl
cld
add
cld
sbb
pop
or
adc
mov
sub
and
insl
popf
mov
rcrb
add
mov
push
and
sub
test
add
pop
mov
cld
push
lock
sbb
pusha
add
push
sub
stos
mov
fcomps
xor
fisubrs
jo
or
cli
das
out
jbe
sub
adc
daa
in
pop
dec
fdivrs
sbb
rcll
icebp
mov
cmp
setne
inc
mov
mov
jecxz
cmp
hlt
push
mov
sbb
pop
test
mov
add
mov
adc
fstps
mov
mul
mov
cwtl
push
enter
inc
mov
adc
jnp
test
ja
and
pop
fmull
adc
inc
add
js
sbb
inc
int3
xorl
fnstcw
lret
mov
sub
sub
sbb
xor
fcoms
out
test
mov
cmpb
aaa
xlat
sub
push
pop
adc
mov
push
add
jo
xor
loopne
test
aaa
push
mov
mov
inc
fnstenv
les
ja
daa
pop
cmp
les
pop
loopne
adc
xrelease
cli
jg
aad
clc
insb
add
pushf
loopne
adc
fs
loop
dec
inc
sbb
out
arpl
sbbb
sbb
xchg
jnp
add
cmp
aaa
jle
int3
es
adc
loope
out
dec
sub
outsl
add
pop
mov
or
push
sbb
cs
add
xor
push
xor
mov
mov
in
and
pop
add
sbbb
inc
int3
and
aaa
cmp
lret
add
mov
nop
dec
aad
roll
push
add
dec
fadds
and
jg
jo
aaa
and
and
adc
adc
adc
or
mov
jne
scas
jg
inc
frstor
andb
lret
fcomps
mov
jmp
nop
ret
rclb
sub
push
cmovs
xchg
stos
jmp
xchg
test
push
jle,pn
xchg
jne
jl
mov
mov
cs
in
jl
sti
andl
fsubrs
dec
jmp
pop
int
ficomps
sbb
scas
add
lock
call
cmp
pop
call
jne
mov
sub
arpl
xchg
adc
mov
fldcw
jae
and
xor
lea
mov
fildl
mov
enter
hlt
dec
mov
push
fcoml
loopne
lds
pop
pop
xchg
pusha
ret
mov
pop
ljmp
xorl
jbe
test
mov
or
or
test
or
sbb
jo
cmpl
pop
out
mov
or
push
test
pop
add
movsl
xchg
out
cltd
mov
mov
pop
loope
or
ljmp
jmp
and
mov
arpl
lahf
sub
fsubrl
add
xchg
faddp
add
adc
imul
addl
add
jne
pop
movsl
or
test
add
dec
or
rcl
or
jb
lock
mov
mov
ss
push
in
and
add
adc
and
add
xor
outsb
jl
fs
ja
adc
cli
push
outsl
push
pop
cmpsb
lea
fisttps
out
pop
notl
xor
into
pusha
icebp
inc
std
in
shrb
inc
out
xchg
or
or
adc
or
lods
xchg
mov
cmp
cmpsb
shrb
jl
clc
add
inc
jb
insb
inc
pop
aam
mov
pop
hlt
xor
xor
flds
jecxz
loopne
adc
movsw
jg
enter
jb
test
ja
arpl
lret
xor
cltd
adc
sarl
out
push
mov
pop
popf
jmp
cs
xchg
hlt
call
test
jbe
xchg
sbb
cmp
cmp
cmpsb
fs
jle
adc
inc
hlt
adc
loopne
hlt
clc
xchg
pop
inc
dec
and
andb
sti
adc
cmp
arpl
aam
test
jae
jbe
add
in
xor
in
or
data16
in
adc
scas
sbb
mov
pop
pop
js
int3
ja
outsl
adc
fisttpll
mov
loope
stos
xor
out
adc
xor
inc
neg
push
push
mov
cmpsl
push
hlt
stos
adc
mov
les
jae
sbb
xor
lods
cmpb
xor
in
or
sub
cmpsl
gs
mov
ljmp
mov
daa
imul
sarb
cwtl
or
cmp
mov
out
in
add
popa
inc
mov
call
jo
adc
icebp
sub
adc
add
or
mov
rcrl
xchg
fs
sbbw
sub
xchg
mov
push
xor
mov
test
mov
push
inc
dec
insl
test
sub
lret
add
or
aaa
test
mov
or
loop
jmp
push
out
aad
or
push
sub
add
dec
and
push
int
pop
push
ja
sub
inc
sar
test
pop
push
adc
and
push
adc
xor
cmp
test
addl
loope
test
fisttps
sbb
add
jns
xchg
jns
add
sub
pop
or
out
adc
and
lock
clc
test
mov
xchg
movsb
jns
test
in
pop
jg
push
mov
mov
mov
mov
femms
mov
mov
mov
out
mov
adc
data16
inc
inc
cmp
je
aaa
out
pushf
test
aaa
xchg
dec
push
mov
fstps
addr16
pop
mov
push
xor
rol
mov
in
jo
cwtl
out
jg
jl
lods
ja
call
and
jmp
xchg
mov
or
dec
sub
mov
mov
je
loopne
jo
arpl
pop
dec
sub
add
adc
pop
cmp
sbb
into
test
xchg
jmp
jl
xchg
mov
and
xor
lock
movsb
in
add
fs
xor
aas
mov
mul
jae
mov
add
dec
icebp
je
jp
dec
jge
hlt
cmc
rorl
fcomps
ret
dec
inc
add
sub
push
push
add
psrlw
jecxz
xchg
add
xor
adc
adc
roll
or
testl
adcl
outsl
out
xor
sub
add
pop
push
inc
mov
dec
int
add
mov
popf
or
test
in
sahf
les
hlt
cmp
cmp
fcoml
hlt
add
or
js
rclb
jno
xor
mov
lds
test
lock
mov
gs
and
sbb
incl
fdivrs
rorb
sbb
lret
jmp
mov
fbld
xor
push
lods
adc
in
xor
shrb
insb
aas
fdivrs
ss
push
fadds
cmp
out
xor
or
ljmp
or
aas
dec
outsl
mov
test
jbe
lea
sbb
test
movsl
add
loop
push
mov
daa
ljmp
xor
mov
cwtl
popf
or
and
pop
pop
test
push
add
jae
jmp
jge
push
cmpl
cmp
sahf
mov
stos
mov
cmpsl
xchg
sti
push
cmp
hlt
bound
call
arpl
xchg
jae
mov
fucomp
hlt
sub
mov
cmp
mov
loopne
mov
add
inc
inc
push
ret
data16
add
and
shlb
hlt
cltd
push
push
mov
add
call
sub
mov
cli
and
test
cwtl
arpl
add
and
addps
mov
test
movsb
adc
icebp
or
loop
icebp
ljmp
lock
enter
mov
je
xor
imul
flds
sbb
mov
test
je
and
ret
fnstenv
lea
pop
jmp
xchg
inc
or
ret
mov
nop
and
sahf
aaa
repz
inc
fninit
mov
add
push
sbb
daa
pop
xor
stos
sub
mov
xchg
je
jl
mov
sbb
gs
testb
jae
sub
push
loop
aam
xor
cli
pusha
xchg
jo
inc
in
jne
pop
jp
fstps
test
jle
cmp
call
push
fwait
cmp
jge
xchg
repz
sub
push
and
sbb
xor
call
out
or
popa
ss
hlt
or
in
pop
loope
adc
hlt
mov
and
daa
sahf
aam
mull
scas
lds
or
test
les
or
cmp
and
adc
cltd
cmp
je
pop
add
pop
fdivr
add
pushf
rclb
in
dec
sbb
loopne
cmp
lea
mov
or
xchg
or
faddp
out
sub
jnp
loop
dec
daa
lahf
incb
iret
adc
and
mov
adc
sbbb
test
add
adc
mov
push
ljmp
add
and
rol
or
fisubrl
testb
mov
dec
dec
insb
ret
push
loope
adc
jne
repz
popa
xor
test
dec
dec
sub
in
and
call
mov
jnp
push
xor
dec
flds
xor
push
call
in
bound
inc
push
mov
cltd
or
subl
sahf
or
mov
inc
sbb
sbbl
cmc
adc
test
fstps
sbb
or
mov
push
jae
outsl
mov
or
xor
sub
jmp
jl
cmp
add
mov
jb
mov
movsl
push
wrmsr
inc
pop
and
inc
and
lcall
int3
jns
xor
push
mov
test
popa
cmp
jmp
aas
mov
shlb
adc
clc
pop
roll
pushf
adc
add
out
mov
fisubrl
dec
rcrl
jmp
test
je
fdivrp
roll
aad
hlt
xchg
and
xchg
sbb
daa
fidivl
and
imul
daa
add
xchg
movsb
ss
sahf
or
adc
rorb
inc
cmp
test
jb
cmp
repnz
and
dec
rolb
jbe
dec
lcall
lods
test
sub
movsb
shll
xorb
dec
fucom
sbb
loopne
pop
ret
xor
push
cs
cmc
and
sub
inc
adc
test
inc
iret
inc
xchg
mov
mov
cmpsl
push
daa
fdiv
pop
add
cmp
adc
leave
fistpl
loop
sahf
mov
addb
inc
data16
push
loop
mov
mov
or
sbb
and
or
dec
pop
and
and
loopne
js
je
mov
adc
cmp
push
cmc
mov
popa
and
mov
jecxz
xchg
jl
mov
adc
xor
add
jo
js
xor
gs
push
cmp
mov
mov
adc
sub
lahf
add
hlt
and
xor
shlb
adc
lock
subb
lods
sbb
dec
cmp
das
mov
pop
es
into
testl
or
aaa
lods
dec
adc
and
sub
mov
lcall
add
inc
fcoml
shrb
clc
outsb
xchg
inc
fists
jg
adc
sub
fcomps
or
and
mov
mov
mov
push
sbb
push
in
xor
jno
nop
mov
mov
loope
push
ret
jae
test
cwtl
mov
repz
adc
mov
add
fdivl
loop
push
push
dec
mov
pop
add
pop
int
pop
mov
dec
lock
add
and
push
dec
lods
addl
sbb
js
aam
push
xchg
or
adc
rcr
mov
or
pop
mov
and
movsl
jg
lcall
iret
std
fiaddl
xor
pop
jae
add
jg
pushf
mov
adc
sbb
push
and
das
jne
in
pop
mov
and
lret
and
aaa
cltd
sub
jns
test
lock
je
cli
push
insb
ss
inc
mov
shrl
hlt
jge
push
aas
jle,pt
or
cli
lcall
loopne
cmp
inc
sarb
push
xchg
jge
add
lods
aaa
xor
mov
outsl
cmc
cmp
dec
push
mov
in
xchg
add
or
andps
push
inc
pushf
sbb
call
sbb
fisttpll
test
add
int3
sbb
hlt
outsl
in
outsb
lea
xor
sbb
push
cld
sub
scas
add
or
outsl
push
push
inc
inc
adc
xchg
pop
dec
adc
mov
dec
shrb
mov
inc
rcr
cmp
ja
add
push
cmc
pop
aad
das
push
jp
mov
mov
mov
jo
or
mov
sbb
movsb
cmpsl
js
rorl
xor
cmp
jne
fldcw
push
test
sahf
mov
cmp
popl
push
fdivr
fcmovne
pushf
sbb
pop
repnz
xchg
sarl
dec
ljmp
fs
xor
fs
clc
adc
lds
cmpl
pop
mov
repnz
sbb
stc
test
imul
mov
push
ud0
push
jg
test
adc
push
xchg
sub
outsb
outsl
subb
stos
pop
xor
add
sbbb
ja
fdivrs
inc
lock
jg
sbb
movsl
mov
mov
fsubl
sbb
pop
jmp
test
and
inc
jg
fidivrl
mov
push
sbb
inc
ljmp
ja
daa
add
dec
add
andb
stc
jnp
aad
jg
mov
sub
inc
rclb
in
sbb
aas
pop
inc
sub
dec
stc
mov
andb
clc
fildll
adc
testl
hlt
pop
adc
push
mov
les
xchg
cld
add
loopne
xchg
or
mov
in
test
dec
dec
push
jecxz
sti
adc
mov
mov
ljmp
outsl
test
push
or
and
loopne
or
mov
inc
and
add
or
push
mov
sub
adc
lods
inc
or
repz
das
test
ljmp
pop
flds
add
xchg
xchg
and
mov
repnz
push
add
mov
scas
push
pop
cmp
and
or
xor
push
add
cmp
in
dec
pop
pop
adc
lods
addr16
pushf
xchg
icebp
sbb
movsl
push
js
dec
arpl
push
out
inc
aaa
add
in
add
lcall
mov
xlat
xchg
in
adc
and
mov
mov
sbb
mov
test
inc
sbb
aam
add
clc
shll
neg
jb
sete
lret
sub
pop
mov
lahf
fiaddl
adc
js
pop
stc
add
fwait
cmp
das
movsl
cmpsb
jg
lods
dec
in
dec
pop
dec
lret
sbb
adc
cld
jecxz
fisubs
stos
lea
shrb
ret
test
lret
movsl
xchg
ret
insb
pushf
bound
and
mov
or
sahf
daa
mov
push
pop
mov
dec
fnstcw
ret
lcall
mov
inc
adc
outsl
add
inc
inc
insb
pop
and
jl
scas
jbe
dec
xchg
imulb
das
add
mov
mov
leave
mov
jg
xchg
out
stc
aam
lcall
fists
fstpt
add
sub
pop
lods
sub
je
outsl
jge
xchg
cmpsl
sbbl
adc
aad
xchg
sub
daa
xchg
dec
fwait
xor
push
aaa
mov
js
add
movsb
sarl
movsl
ljmp
sbb
clc
outsl
into
mov
jno
popa
and
cmp
ds
movzbl
les
or
inc
aam
fnstenv
add
inc
xchg
mov
pop
jb
xor
nop
jae
sub
pop
outsl
xor
adc
and
ljmp
jg
pusha
push
cld
jg
clc
xchg
push
push
into
lock
dec
mov
mov
push
mov
mov
mov
or
mov
mov
or
lret
stos
sbb
ljmp
iret
cmpsl
rorb
lock
add
in
push
jne
jo
or
mov
xor
xlat
loopne
cmp
icebp
outsb
push
inc
push
or
mov
rorl
jo
jle
sbb
mov
push
fcmovne
in
push
mov
mov
addr16
adc
jb
mov
fwait
sub
adc
rorb
xlat
adc
xchg
test
and
int
jle
sub
xchg
rclb
cmpb
icebp
sbbl
lds
imul
ret
add
and
test
push
mov
fsubl
orb
add
sub
xor
icebp
test
mov
xor
fbstp
mov
sbb
movsb
je
sub
add
fdiv
into
rclb
aad
hlt
jmp
mov
stc
rorl
push
pop
and
xorl
push
add
push
inc
and
sub
pop
and
and
pop
shll
loopne
add
xor
push
sbb
movsl
inc
retw
adc
mov
pop
dec
dec
add
adc
cmp
mov
subb
mov
xchg
inc
int3
aam
add
mov
lock
push
push
lea
push
push
cld
call
into
lahf
dec
rolb
xchg
enter
adc
inc
incl
lret
pop
cmp
fidivrl
ja
jb
add
sub
adc
or
ret
ficoms
fistps
mov
mov
sub
and
pop
cs
fistl
roll
and
mov
icebp
cld
or
inc
popf
pop
or
in
jmp
into
xchg
jp
frstor
pop
push
inc
add
and
imulb
mov
stos
popf
adc
dec
mov
and
jbe
sbb
xor
sub
fists
loope
insl
lret
add
fldenv
pop
out
bound
add
cmp
mov
aam
inc
pop
mov
push
xorl
test
or
and
inc
mov
jnp
xchg
xor
cmp
shll
ret
or
mov
fwait
loopne
clc
push
cmpxchg
push
das
xchg
fcmovnbe
cmp
fsubs
pop
dec
inc
sarl
xor
cmp
mov
and
orl
out
mov
mov
add
inc
fs
jp
test
jl
lea
mov
pop
push
mov
sub
cmp
ss
xor
insl
jecxz
sub
loope
dec
call
mov
loope
ret
test
mov
shlb
mov
mov
sub
stos
scas
xor
shl
gs
call
call
test
xor
inc
subl
pop
les
mov
fdivrl
jnp
pop
sahf
pushf
push
and
push
add
les
mov
les
aas
push
dec
sahf
push
clc
sbb
pop
mov
sbb
fisttpl
sub
cmp
out
sub
jecxz
and
mov
push
je
or
pop
xor
mov
popa
and
out
push
popw
adc
cmp
inc
adc
lea
push
sbb
loopne
inc
pop
and
cmpsb
lods
addr16
pop
mov
stc
jecxz
mov
mov
js
inc
pushl
cld
pop
rorb
adc
push
mov
jo
mov
adc
jnp
sub
mov
jmp
cs
std
jg
inc
outsl
notl
xchg
call
and
cmp
push
xchg
mov
xlat
lock
subb
push
out
aad
cmpsb
push
sub
sbb
mov
insb
cmp
data16
push
mov
mov
ja
dec
and
ret
add
jne
sahf
or
mov
sbb
mov
jp
add
xchg
lock
in
cmp
out
sbb
idiv
pushf
pop
add
cwtl
jb
push
cmp
scas
dec
in
and
mov
inc
jbe
outsb
xor
jne
sub
mov
push
dec
out
out
out
loop
lea
movsb
frstor
jp
xor
mov
jge
ss
mov
cmp
xor
mov
cmp
inc
cltd
push
cwtl
lret
and
aas
pop
ss
sub
shrb
inc
sbb
mov
and
nop
mov
cmp
jle
loope
aam
js
mov
lea
out
xchg
fisttpl
enter
pop
fbstp
js
jmp
andb
cs
push
cmp
cmp
cmpsl
fldenv
mov
std
aad
sub
stos
xor
add
or
jge
out
call
test
rcrb
add
dec
mov
mov
andb
or
arpl
bound
push
jp
inc
out
push
mov
xchg
es
jne
inc
hlt
sbb
cmp
test
into
xor
push
lea
add
int3
bound
mov
mov
xor
sbb
push
test
loop
adc
dec
adc
adc
adc
loop
jno
push
loopne
icebp
xor
lahf
mov
outsb
fisubrs
stos
ss
adc
stos
push
pusha
js
lods
bound
movsl
sub
mov
int3
and
push
mov
fildl
test
sti
in
mov
pop
and
shrl
sub
add
mov
mov
jmp
push
xchg
and
add
push
rcrb
call
daa
addl
fsubrp
fcmovnu
or
dec
pusha
sub
fucomp
add
xor
repz
xor
pusha
stos
and
int3
lcall
lods
test
xor
xor
pop
pop
imul
rcrb
aam
inc
rcrb
ficoms
mov
push
mov
testl
loope
cltd
in
mov
fiadds
mov
mov
mov
addl
adc
add
push
mov
add
xlat
daa
fwait
popa
mov
lret
push
adc
int
dec
inc
sub
out
mov
and
inc
inc
mov
loope
pop
jecxz
imul
fwait
jge
fisttps
xchg
mov
dec
stos
xor
mov
jno
xchg
adc
push
mov
jae
or
inc
sub
add
mov
pop
pop
insb
push
xchg
cli
jne
inc
nop
adc
das
mov
mov
cwtl
mov
mov
inc
adcl
adc
cmpsl
mov
or
out
sub
rcrl
movsb
inc
sub
or
inc
adc
sbb
mov
arpl
cmpsb
divl
cld
push
aad
inc
aad
inc
push
fwait
inc
jo
loope
loopne
stos
scas
and
rcll
mov
inc
ja,pt
add
rcrb
sbb
inc
pinsrw
nop
or
push
loop
pop
jle
or
popf
add
or
push
inc
push
in
xor
add
mov
clc
movsb
and
adc
roll
xor
imul
movsb
add
sbb
or
cwtl
xchg
cltd
mov
pusha
mov
adc
and
cmc
cmp
dec
enter
enter
ret
movsb
jg
and
jo
test
jb
cmp
dec
mov
ss
mov
xor
push
dec
dec
aad
dec
add
mov
fildl
push
add
insl
enter
loopne
repnz
cmp
inc
push
scas
add
push
dec
out
pop
xchg
lock
clc
push
cltd
and
push
cmpsb
mov
and
dec
adc
lret
push
std
dec
mov
pop
cmp
inc
leave
inc
jnp
push
sub
add
add
cmp
mov
push
mov
or
test
imul
lret
mov
mov
pusha
add
lret
dec
stc
daa
std
adc
mov
arpl
sbb
adcl
rcl
jp
add
mov
and
inc
mov
mov
jo
int
aaa
insb
add
gs
pop
aas
mov
data16
jno
push
jl
cli
push
push
adc
lret
or
or
roll
icebp
pop
sbb
xor
xchg
stos
add
xchg
iret
loop
and
shll
notb
xor
push
push
lret
push
sub
inc
mov
inc
mov
xchg
vpunpckldq
push
mov
filds
sub
loop
loope
test
inc
inc
cmp
gs
addl
push
sub
inc
jns
sbbb
jg
xchg
jns
adc
xchg
dec
add
jmp
nop
or
jns
push
or
ret
inc
sbb
jo
les
mov
xor
xchg
sbb
lock
out
pop
or
push
ret
dec
adc
sbb
xchg
xor
mov
jo
mov
jnp
mov
and
add
sbb
sub
adc
call
aam
mov
hlt
sub
adc
pop
adc
add
in
push
xor
lcall
shlb
push
inc
insb
add
jno
mov
or
insw
and
gs
and
adc
fisubl
adc
and
pop
mov
push
in
add
aad
pop
xor
out
fidivrl
add
stc
or
outsb
das
mull
sbb
pop
add
pop
lret
fdivl
sbbb
sar
cmpps
jle
imul
test
jo
call
test
and
jmp
push
les
cltd
fadd
jno
clc
rcrl
dec
push
sbb
into
mov
or
adc
or
fsubl
adc
cmp
sti
push
stos
leave
loop
and
call
in
rorl
in
xchg
fbstp
mov
inc
push
dec
mov
mov
insl
add
or
add
aad
icebp
sub
adc
lock
jae
inc
inc
or
push
cmp
or
sub
inc
inc
add
ss
cmp
jns
lret
pop
adc
mov
cmp
jne
adc
cwtl
rcr
sub
je
es
mov
and
in
pop
mov
push
pop
rclb
jp
jp
sub
push
sbb
cmp
in
jmp
std
cmp
jae
repnz
subb
test
add
add
pop
dec
cld
or
mov
cld
sub
call
and
push
jl
sbb
jmp
inc
add
cltd
pop
add
mov
je
and
rclb
or
inc
pop
push
or
jp
cld
rcl
pop
stos
sbb
xchg
inc
das
mov
mov
adcb
out
std
inc
mov
popa
mov
mov
push
fisubs
cmp
push
icebp
push
inc
jge
xlat
sahf
xor
push
sbb
jo
js
push
add
out
addb
les
and
sbb
sarl
pop
mov
and
jecxz
ds
dec
jne
pop
or
sbb
cmp
adc
mov
jg
cli
sbb
inc
mov
mov
addr16
add
push
mov
pop
sbb
nop
cmpsb
jns
adc
out
xchg
sahf
xchg
arpl
clc
and
loopne
decl
in
sub
mov
or
iret
or
pop
xchg
aam
lahf
pop
mov
xor
addr16
mov
mov
and
jno
orl
push
frstor
cmp
inc
cmc
mov
out
repnz
add
call
add
push
in
sbb
into
sbb
or
push
lods
xor
mov
insb
add
mov
jb
mov
lock
mov
jno
add
lcall
xor
bound
dec
movsl
pop
add
test
sbbl
xlat
cwtl
ret
xchg
cmpb
in
add
pusha
popf
les
mov
cltd
cltd
mov
dec
sar
pop
xchg
pop
stos
add
repz
ss
mov
adc
pop
mov
dec
sti
fists
ret
out
pop
loope
or
insl
pop
pusha
mov
and
ret
push
sbb
lcall
inc
test
mov
ja
lret
and
add
fsubr
aaa
dec
out
add
mov
sbb
insl
pop
rolb
fucomi
xchg
sbb
cmp
push
loope
pusha
pop
inc
mov
insb
fistps
clc
jno
ljmp
inc
and
mov
addr16
mov
add
jno
or
pop
jo
mov
xor
sbb
imul
inc
add
stc
popa
add
add
jno
int
jbe
outsl
mov
enter
sub
pop
mov
jge
test
mov
pop
test
xchg
pusha
jl
sub
pop
insb
movsl
sub
push
pop
sbb
or
outsl
clc
call
jl,pn
jo
add
push
lds
mov
sub
flds
xlat
inc
add
insl
xchg
mov
sbb
stos
pushl
and
pop
add
lods
add
lret
lock
ljmp
pop
int3
push
xor
jae
dec
add
out
adc
lahf
icebp
xor
pop
mov
push
sub
jae
jb
pushw
addb
lock
and
call
add
add
dec
add
push
mov
xor
popf
cli
sbb
pushf
sub
or
pop
and
or
cmpsb
add
jbe
and
out
pop
in
ret
ss
out
add
dec
sbb
push
jge
push
mov
dec
pop
sub
lds
add
popf
sbb
cmp
testl
scas
or
inc
adc
lcall
pop
pop
pop
negl
iret
push
mov
dec
cmp
mov
je
scas
adc
adc
xchg
mov
jg
rcl
stos
and
test
lods
pop
movsl
inc
sub
and
dec
loopne
sbb
ljmp
jecxz
jmp
mov
addr16
lods
aas
jl
cs
xchg
add
mov
sub
mov
jo
cmp
in
dec
cli
xchg
push
outsl
mov
cmpl
mov
out
mov
aam
xchg
stc
std
dec
dec
decl
add
incb
mov
nop
in
addr16
and
jae
cld
or
cmc
sti
lret
decb
jno
lock
push
add
cmc
adc
call
sub
xor
into
and
cmp
cmp
push
jmp
fisubrs
inc
and
add
xchg
std
xor
rcrl
mov
rcrb
mov
fmul
xchg
jnp
fcmovnu
data16
cwtl
fidivs
lcall
mov
jecxz
adc
cld
pop
jg
mov
cmpsl
mov
jle
lret
mov
clc
mov
add
es
cwtl
icebp
xlat
mov
add
lret
lods
xorl
loop
rolb
sahf
std
incl
jle
xchg
ret
sbb
push
jl
lret
dec
verr
add
cmp
cmpsb
sti
jg
xchg
xchg
jbe
xlat
or
mov
fistpl
mov
pop
push
nop
add
lcall
sub
sbb
outsl
roll
adc
lret
adc
mov
push
and
shlb
push
xchg
inc
fcmovnbe
pop
adc
loop
lcall
cwtl
inc
add
test
mov
cmp
cli
aaa
sti
add
in
data16
rorl
fisubrl
mov
stos
push
add
xchg
and
xchg
bound
loope
mov
dec
fsubs
push
inc
dec
or
das
add
dec
sub
icebp
dec
mov
xchg
lods
pop
dec
idivw
arpl
les
adc
das
insb
mov
and
or
mov
jle
std
push
insb
push
or
pusha
or
xchg
roll
dec
fdivl
mov
adc
mov
sti
or
cvtpi2ps
mov
mov
dec
fldt
or
int
jns
aaa
clc
cmpsb
sbb
dec
push
jo
inc
sti
ja
mov
movsl
clc
mov
jb
cmp
adc
adc
rclb
lods
cmp
mov
scas
jb
mov
xor
fwait
mov
clc
pop
sbb
inc
and
push
pop
cmp
popl
cwtl
jbe
jl
adc
fcmovnu
notb
lock
or
les
and
adc
and
lods
stos
loopne
inc
int
inc
mov
or
jmp
sarw
lcall
push
das
std
fcmovnu
jo
outsb
lcall
mov
jecxz
rol
ljmp
jecxz
sbb
push
rolb
loope
pop
sub
mov
lock
inc
int3
enter
aas
lahf
fisttps
insb
and
push
clc
lcall
add
daa
aam
add
sub
or
sbb
test
out
js
incl
xor
lock
jp,pt
jg
call
inc
jmp
jnp
cwtl
jb
and
mov
adc
js
pop
inc
jae
mov
ds
movsb
sarb
mov
pop
mov
stos
inc
jnp
jnp
lcall
inc
fs
mov
dec
aaa
and
orb
int3
lods
pop
add
js
mov
loope
xchg
insl
adc
sbb
mov
and
mov
fiadds
cli
dec
xor
add
dec
pop
cmp
mulb
mov
dec
clc
iret
sbb
adc
and
imul
mov
nop
mov
push
inc
lret
or
mov
iret
cmpsb
loope
xchg
ljmp
mov
cmc
in
cld
mov
pop
cmp
pop
mov
lcall
andb
pop
sti
jnp
dec
inc
adc
inc
mov
dec
or
dec
or
and
push
jp
xor
inc
mov
clc
xor
enter
movsl
sub
xor
aaa
out
repnz
dec
fld1
outsl
pusha
mov
pushf
xor
daa
mov
testb
xor
scas
jbe
adcb
jg
cmp
into
bound
xor
mov
push
hlt
push
sar
jle
and
cmpsl
sbbb
lods
push
jne
ss
std
xchg
xor
lahf
add
jg
ljmp
fsubrl
int
jle
inc
pop
xchg
push
ret
mov
mov
fdivr
ljmp
adc
cs
add
aas
inc
shll
test
call
cld
fsubl
add
stos
aas
add
sub
pop
movsb
test
mov
dec
and
das
push
sub
xor
filds
push
add
mov
and
mov
push
cmc
cmpsb
aam
cmp
pop
clc
int3
inc
iret
adc
outsb
push
lahf
and
sub
test
mov
add
push
add
fisttpl
push
adc
xor
cmpsb
insl
gs
fildll
jae
stc
xchg
xchg
stc
testl
cmp
or
test
push
pop
sub
fcompl
lods
adc
cmp
add
daa
lds
sbb
daa
ret
and
sbb
cwtl
and
xor
std
cld
sbb
jnp
dec
ljmp
pop
ret
add
inc
arpl
fwait
pop
and
and
adcb
test
cmp
xchg
mov
jecxz
xor
and
test
push
inc
dec
add
xor
aad
push
ljmp
push
mov
push
push
adc
jne
mov
fcoms
pop
and
xchg
adc
push
rcll
nop
or
and
push
dec
stos
mov
or
lods
loope
sahf
pop
sbb
je
push
enter
push
subb
mov
outsl
push
loopne
push
inc
add
push
test
jp
xor
stos
adc
and
adc
pop
aas
int3
xchg
adc
or
push
and
add
add
aaa
sahf
jmp
shlb
add
aas
sub
inc
jg
shlb
mov
mov
push
fadd
mov
mov
jo
pop
lcall
xchg
mov
pop
jmp
pop
mov
xchg
adc
mov
adc
ja
stc
ds
mov
aam
mov
push
jmp
sbb
jbe
add
loope
subb
jnp
outsl
inc
add
add
sbb
push
jmp
test
or
cmp
xlat
pop
adc
xor
fs
mov
cmpsl
jae
pusha
adc
mov
arpl
clc
aaa
es
out
movsl
in
inc
lods
fstps
pop
pop
adc
mov
push
sarb
in
mov
mov
adc
je
js
bound
mov
mov
mov
gs
add
in
nop
loop
in
push
or
shrb
pop
mov
jge
jno
shlb
cmp
mov
jae
pop
cs
rol
push
pop
outsl
icebp
iret
stc
mov
popa
test
pop
or
adc
pop
sub
lock
sbb
outsl
je
lret
fstpt
xchg
pop
jg
xor
push
pusha
jb
sbb
je
sub
loope
sub
jp
ja
sbb
sub
mov
xor
inc
les
cmp
cltd
and
mov
or
das
and
in
loopne
aaa
decb
outsb
and
aad
jnp
arpl
push
mov
push
add
loop
pop
pop
clc
test
mov
pop
push
lcall
loop
imul
cld
cmp
fwait
negl
leave
cltd
fidivrl
stos
les
mov
mov
mov
lods
inc
jns
sub
pop
test
in
jo
cld
xchg
add
fildll
and
and
mov
and
stos
xchg
ficoml
xchg
fistps
repz
lea
sub
ficomps
or
loopne
nop
push
sbb
lcall
outsl
adc
mov
add
fisttps
imul
jnp
aad
xchg
outsb
inc
pop
jb
mov
pop
pop
roll
cmp
adc
push
insb
ret
lock
and
adc
filds
inc
std
or
rcr
lret
lods
inc
push
bound
loopne
sub
add
xor
jg
inc
sbb
cwtl
add
add
sbb
cmp
sbb
rorl
jo
add
mov
aam
mov
pop
push
scas
mov
sub
and
lret
add
dec
adc
or
shl
sbb
rclb
mov
and
cmp
add
loopne
adc
xchg
sub
int3
mov
inc
lock
fmul
mov
int
pusha
movsl
cltd
rolb
inc
inc
test
aad
shr
or
icebp
iret
jle
push
leave
cmp
mov
loopne
add
cmp
shl
mov
adc
mov
sahf
inc
adc
lcall
or
pusha
rcll
push
out
and
lods
aas
jb
sub
inc
mov
push
mov
add
sbb
pop
xchg
inc
pop
inc
xor
inc
loopne
push
push
jg
imulb
fists
jge
pusha
loopne
pushf
enter
cmp
push
in
xchg
mov
addr16
je
push
sahf
push
lock
test
push
mov
and
xor
mov
pop
push
pusha
out
pop
sub
and
xor
mov
or
and
lret
stos
cli
fs
enter
pop
iret
fs
sub
and
jbe
fcoml
xorb
pop
lret
sti
lret
mov
stc
pop
enter
adc
and
loopne
negl
test
pusha
push
addl
popa
int3
dec
pop
jp
daa
inc
rorb
ss
insb
dec
add
roll
es
push
xor
add
in
in
outsb
add
push
add
fs
or
daa
or
out
clc
xor
pop
scas
adc
scas
jo
add
mov
jge
clc
xor
or
sub
inc
mov
push
push
cmp
mov
fwait
add
add
xor
adc
out
mov
js
sahf
xchg
shlb
cld
mov
xorb
inc
lock
aad
mov
and
cld
cmc
test
pop
test
pop
inc
add
cmp
cld
mov
bound
and
vmptrst
aaa
push
add
push
rcrl
xor
in
adc
xchg
test
jge
sti
ret
pop
dec
mov
mov
mov
mov
inc
orb
iret
jbe
cltd
stos
and
incl
test
pop
cmp
int3
in
sbb
cmp
mov
test
js
inc
mov
mov
jns
xchg
bound
dec
lcall
dec
addr16
into
jl
add
inc
ror
and
insl
cmp
dec
mov
jae
lds
cwtl
rorb
xlat
int3
inc
pop
jmp
gs
imul
push
add
push
mov
sbb
rcrb
shl
mov
push
or
xor
inc
scas
pop
jp
and
je
pusha
push
aad
sub
andl
sbb
inc
and
sub
xor
mov
in
pop
add
jnp
outsb
shrl
mov
pop
cltd
and
mov
fimull
clc
dec
pop
add
clc
pop
shrl
xor
or
mov
adc
xchg
xor
push
test
mov
fldcw
aad
inc
fldenv
and
popf
rcr
ret
sbb
or
in
ss
xchg
call
hlt
mov
hlt
xor
mov
fs
add
cmpsl
push
cmc
xchg
ja
sbb
or
stos
jp
sub
xchg
push
pop
xor
adc
mov
jo
aam
in
out
cmpsb
or
inc
lret
cmp
sbb
fildll
mov
in
push
xor
adc
push
sbb
dec
hlt
pop
pop
ljmp
ljmp
push
lahf
lock
mov
sbb
dec
and
ret
or
fidivs
sub
test
sbb
mov
adc
aad
sar
push
mov
pop
sbb
inc
push
inc
aaa
mov
sar
call
xor
cmpsl
adc
and
stos
loopne
aaa
lea
clc
outsl
outsl
xor
and
js
add
iret
into
adc
add
outsl
push
dec
jmp
into
pop
shr
loopne
mov
addr16
clc
and
sub
repnz
clc
inc
mov
or
jg
call
mov
rorl
pop
fcomp
outsl
mov
adc
xor
aaa
adc
mov
iret
outsl
push
hlt
dec
jl
fwait
mov
inc
lahf
loope
and
jg
std
inc
mov
int
dec
lods
aad
xor
pop
mov
cmp
movb
decl
add
cmc
ljmp
cmc
insb
in
insl
orl
mov
push
mov
cmp
sub
mov
je
fnclex
ret
ss
loopne
xchg
je
mov
sti
test
mov
out
inc
mov
sub
pop
sbb
fdivrs
imul
bound
mov
jecxz
addr16
gs
or
dec
loop
fst
add
add
fcmovnbe
ret
push
pop
xchg
call
push
cltd
inc
mov
push
pop
fidivrs
sbb
outsb
and
popf
imul
pop
incb
nop
adc
call
aaa
adc
loopne
and
jg
mov
sub
sub
add
mov
incl
cld
pop
dec
ja
movsb
subb
pop
dec
daa
dec
jb
sbb
pusha
or
fbstp
or
int3
or
in
aaa
pop
jb
es
les
sbb
hlt
xlat
test
test
mov
stc
xlat
test
pop
movsb
daa
test
ss
pop
and
je
test
std
xchg
lods
sbb
jge
in
jle
jbe
mov
bound
add
mov
cli
ja
cli
sbb
xlat
int3
inc
xchg
push
daa
mov
xchg
add
and
and
aam
ret
call
cld
mov
and
pushl
pushf
jae
xchg
mov
jg
fildl
dec
and
mov
fs
repnz
stos
fwait
dec
and
sbb
lea
lock
ja
dec
notb
outsl
mov
test
xchg
adc
pusha
or
sbb
outsl
adc
dec
scas
push
in
in
push
cmpl
xchg
sub
pop
js
rcrl
movsl
test
or
pop
adc
pop
test
inc
and
nop
and
adc
in
sbb
mov
shlb
icebp
push
int3
sbb
pop
jecxz
sarb
lods
add
call
push
push
xchg
sbb
pop
adc
sbb
jmp
mov
mov
dec
je
loop
pop
ljmp
ficompl
cmpsb
inc
mov
and
imul
sbb
add
fidivl
lret
cs
jge
stos
add
xchg
pop
movsl
push
mov
adc
cmpb
shr
jl
mov
in
inc
out
out
std
int
in
movsl
lea
shrb
dec
cmp
adc
push
jae
sbb
loopne
mov
push
je
iret
dec
scas
fsub
inc
and
xor
jecxz
cmc
or
jmp
mov
push
test
in
push
daa
push
or
sbb
inc
mov
flds
jb
sbb
pop
adc
icebp
mov
pop
inc
loopne
and
movsb
inc
aam
out
sub
inc
icebp
rolb
inc
xchg
or
popf
sub
push
sbb
xchg
movsl
and
or
ficomps
mov
and
and
mov
sbb
inc
les
sbb
cmp
cmc
pop
pop
adc
aam
mov
push
shll
xor
push
fldenv
cmp
jne
sbb
xor
push
cltd
cmpsb
sbb
lods
loop
push
sarl
add
out
pop
movsl
push
insb
mov
fldl2e
jne
les
pop
dec
mov
icebp
push
pop
insb
ljmp
pop
push
or
incl
invd
sbb
in
inc
lods
into
add
push
sub
fbstp
out
jbe
xlat
hlt
shll
scas
jb
jle
aas
sub
xlat
out
sarl
scas
rorb
mov
stc
fsubrs
mov
adc
shrb
shlb
jae
shl
clc
aas
pop
xchg
mov
jnp
rcrb
imul
pop
sub
push
dec
in
jno
jo
shll
jmp
dec
add
in
lahf
addb
lods
in
jns
mov
pop
test
add
roll
inc
fcoml
stos
mov
jle
mov
or
or
pop
fwait
mov
dec
xchg
data16
push
adc
out
inc
pop
sub
inc
nop
insb
pop
push
mov
push
arpl
adc
test
add
loopne
cmp
xor
sub
scas
jecxz
test
loop
cmp
sarl
mov
push
xchg
pusha
rcrl
les
jb
mov
insl
sub
push
push
test
jb,pt
fabs
punpckldq
cmp
shll
inc
sub
icebp
stos
jl
sarb
nop
xor
mov
add
insb
fsubs
aaa
cmp
jbe
mov
das
sti
ret
mov
sub
cmovg
in
inc
dec
inc
adc
mov
call
in
imulb
lret
shll
sahf
cmpsl
outsl
jno
pop
ds
xchg
mov
hlt
pushf
enter
insl
pop
das
mov
or
inc
jne
and
lds
add
out
xchg
lock
xor
or
push
fisubs
pop
cmp
fisttpl
mov
or
mov
ret
pop
mov
push
xor
sub
add
xchg
lcall
stos
mov
shll
sbb
xchg
out
xchg
jns
sub
imull
in
push
mov
lret
pushf
push
mov
adc
pop
dec
das
inc
mov
fists
les
xorb
cs
push
subb
cmp
aaa
jno
sub
out
stos
int
push
push
mov
and
add
loop
mov
fdivrl
inc
es
lock
or
ret
es
fcomp
nop
push
addl
sub
pop
inc
sub
test
mov
aaa
sbb
and
mov
outsl
inc
xor
lock
lods
pusha
mov
nop
sub
jne
pop
and
inc
cld
pusha
idivb
mov
pop
sbb
jmp
clc
pop
enter
pop
sbb
popa
lahf
push
inc
push
mov
and
cltd
lock
or
aaa
add
lahf
test
into
cmp
push
push
arpl
sub
bound
push
xor
mov
xchg
stc
dec
sub
shlb
inc
nop
jp
mov
jo
sbb
sub
and
sbb
fistl
cmp
dec
xchg
std
or
ret
pushl
adc
sti
fs
rorb
push
mov
lods
jne
stos
aam
fwait
imul
xchg
icebp
fistpll
xchg
add
jl
and
stos
add
push
aaa
aaa
xchg
jge
or
rcr
insl
loope
scas
or
mov
push
push
imul
mov
ja
sti
mov
pushl
sbb
into
popa
sub
pop
jl
add
pop
gs
or
outsl
mull
push
outsl
lcall
pusha
mov
sbb
fsubrs
roll
out
fimull
sub
addl
test
push
ret
cmp
push
data16
aas
lret
cmp
inc
sub
in
or
add
pusha
enter
jns
pop
outsl
jge
pop
out
dec
call
test
das
cmc
lea
cmpsb
xchg
and
jb
pop
dec
mov
and
mov
test
mov
arpl
fnsave
jg
inc
adc
and
jg
bound
inc
pop
mov
cmpl
daa
push
jl
aaa
outsb
lcall
add
mov
div
int
dec
sub
xchg
push
mov
push
fmull
push
pusha
mov
or
lods
jno
push
cmp
and
mov
push
add
sbb
inc
mov
dec
adc
popa
adc
int3
aad
andb
insl
testl
push
mov
movsb
stc
mov
jmp
out
mov
adc
negb
xor
ret
addb
and
adc
ljmp
fldcw
mov
inc
cwtl
das
cmc
jecxz
mov
add
xchg
or
loope
mov
mov
call
roll
imulb
sub
dec
fmul
jl
xor
xor
xchg
pushl
add
in
clc
or
and
push
xor
xchg
lods
sub
lock
add
mov
inc
lock
adc
and
inc
js
push
or
jns
clc
mov
adc
shlb
rolb
mov
in
mov
sub
xchg
leave
test
rcrl
adc
add
popfw
mov
aad
out
dec
or
mov
test
mov
imul
cltd
insl
add
or
dec
test
xchg
sub
bound
add
push
or
or
enter
cwtl
push
les
inc
movsb
addl
inc
mov
adc
inc
call
mov
dec
or
ja
sbb
roll
pop
inc
lcall
sub
add
sub
ud0
inc
sbb
clc
lahf
or
shrl
add
mov
push
ret
adc
jbe
mov
dec
es
adc
push
iret
jge
aas
xor
pop
roll
cmp
sub
iret
mov
mov
sub
inc
test
pop
xor
das
test
jne
inc
xor
dec
add
jmp
mov
add
push
sub
leave
sbb
rclb
mov
pop
push
clc
mov
bound
or
add
outsb
scas
xor
sbb
add
lock
loope
sub
addl
dec
jge
adc
cmp
mov
loop
and
inc
loopne
fld
insb
ret
iret
aam
or
push
xor
xchg
fwait
xorl
lret
xchg
sbb
push
or
sub
sahf
subl
mov
cmp
int3
mov
lods
adc
jl
and
push
loopne
icebp
inc
outsl
shll
out
mov
pop
pop
mov
sbb
cmp
cmp
add
mov
cli
cltd
and
mov
push
cmp
push
push
xor
data16
sub
addb
ret
test
ret
pop
jo
loop
mov
mov
sub
xabort
or
inc
addb
add
push
mov
sbb
xor
jo
ss
add
loopne
decb
rcrb
outsl
mov
dec
and
sbb
inc
cmp
jmp
pop
shrl
mov
mov
insb
mov
fisubl
mov
fwait
andb
dec
push
test
fisubrs
inc
mul
jb
and
testl
cs
mov
movsb
in
and
sub
ljmp
mov
add
dec
addr16
bound
js
adc
arpl
or
insb
mov
cmc
in
jg
js
pop
mov
into
cwtl
dec
adc
xlat
jp
pushf
mov
mov
add
jno
pop
fsubr
inc
dec
push
mov
xlat
hlt
mov
imul
cltd
push
out
pop
pop
jge
aad
xchg
or
push
mov
rcrl
xor
icebp
cmpsb
aaa
pop
xor
loope
lret
or
or
test
mov
sbb
or
mov
clc
sub
mov
add
add
jne
fldl
push
push
mov
bound
push
aaa
or
popa
les
inc
adc
sub
mov
addb
mov
popl
pop
dec
in
adc
out
push
cld
repz
sub
inc
add
pusha
or
push
icebp
das
mov
addl
scas
jle
stos
cli
rcr
dec
in
mov
mov
adc
dec
test
pop
mov
push
shlb
jbe
mov
cmpb
jecxz
fmuls
repz
push
sahf
sbb
xchg
jg
je
stc
shlb
jbe
jne
sbb
inc
cwtl
pop
iret
jbe
icebp
cmpsb
or
mov
hlt
dec
or
test
push
sbb
dec
cwtl
lret
or
pop
testl
popf
data16
sub
fstp
inc
mov
pop
jge
orb
ja
or
inc
jmp
cs
fldenv
sti
xchg
roll
push
pop
cmp
push
sub
xor
push
jnp
aad
stc
sbb
pop
add
mov
out
jecxz
lods
and
dec
ljmp
jg
cld
shll
into
mov
push
or
mov
sbb
mov
leave
xchg
inc
inc
mov
xchg
in
lods
mov
iret
and
push
cmp
stos
pop
inc
in
and
jo
pop
fwait
bound
mov
ror
outsb
fdivrs
and
pop
mov
aad
push
inc
jg
cmpsl
cmp
push
mov
push
jle
ret
sub
cmp
jmp
push
mov
push
nop
push
mov
push
xorl
cwtl
sbb
ss
lahf
lds
outsl
pop
and
rorl
sub
and
scas
or
insb
mov
mov
out
jecxz
cmp
sbb
cs
outsl
cld
push
sub
notb
mov
pop
sbb
lds
orl
and
or
mov
fldl
cltd
in
adc
pop
lcall
sbb
test
xor
daa
sub
fsts
sbb
push
pop
adc
stos
arpl
repz
movsb
sbb
mov
push
push
push
out
in
sbb
lret
xor
push
mov
cld
add
add
mov
dec
ja
das
add
je
dec
pop
fcompl
add
push
mov
das
or
test
sbb
imul
lods
jne
pop
cmpsb
movsl
data16
bound
sub
cmp
and
mov
iret
das
push
xchg
jnp
dec
jne
shlb
lcall
sbbb
roll
jp
cmp
movsl
outsl
pop
jae
fs
or
icebp
stos
xor
jmp
leave
inc
sbb
inc
fwait
or
lea
fistpll
xchg
in
and
les
push
mov
pop
out
imul
mov
xchg
add
pop
xchg
adc
push
arpl
ss
adc
popf
inc
xchg
addr16
clc
adc
adc
cmpsb
cwtl
jae
les
loopne
movsl
sbb
sbb
das
mov
outsl
cmp
shlb
fwait
pop
loopne
and
jns
xor
push
cltd
jmp
jo
test
pop
mov
or
popa
sbb
and
push
incl
mov
push
outsl
inc
xchg
add
add
dec
in
test
push
or
sub
inc
or
cmp
pop
int3
jbe
aaa
shrb
aaa
push
or
add
sub
push
sahf
movsl
es
arpl
and
jecxz
das
fdivrl
cmp
cmp
js
mov
push
dec
cmp
and
iret
incl
stos
mov
out
and
addr16
lcall
xor
sub
aaa
clc
pop
xor
jge
cmpsl
xor
cmp
incb
loop
sarb
dec
sbb
pop
lds
jo
cmp
add
xchg
mov
inc
mov
popa
mov
js
movzwl
pop
lods
lea
aaa
cmp
mov
loopne
jo
leave
xchg
mov
or
pusha
add
xlat
out
cld
outsb
xor
hlt
in
movsl
cmp
jmp
xchg
dec
imul
mov
je
mov
or
push
mov
jmp
andb
cli
sbb
shll
xor
mov
pop
insl
ret
ds
arpl
enter
push
inc
and
adc
lea
shlb
jns
sbb
sbb
lods
xor
and
push
loopne
mov
in
push
inc
dec
rcrb
stos
test
stos
loope
cwtl
sub
movsb
mov
nop
mov
and
iret
or
adc
daa
dec
pop
dec
xchg
xchg
testb
jge
pop
push
adc
mov
loope
aaa
pop
push
inc
mov
pop
mov
adc
dec
in
inc
fwait
mov
in
mov
cmc
addr16
fadd
nop
sbbb
add
sbb
sbb
dec
hlt
xor
and
push
jae
repnz
or
xor
inc
shrl
inc
fiaddl
inc
hlt
lock
movsl
push
push
popa
pop
and
cmp
cli
xchg
xchg
or
add
sbb
sub
dec
pop
hlt
shll
into
outsb
mov
je
sub
dec
and
into
push
and
repz
daa
push
icebp
jno
test
add
mov
inc
lock
inc
add
xchg
jge
pushf
aam
dec
inc
movb
movlps
rolb
pop
fcoms
test
push
fadds
cmp
test
pop
fdivs
jge
inc
mov
cs
popa
add
sub
jmp
push
loopne
mov
into
cmp
sbb
jb
rcll
pop
inc
adc
xor
jo
or
minps
testl
inc
adc
mov
sbb
or
pushf
test
rcr
jne
or
les
movl
movsb
je
jg
mov
shl
sti
sub
cmpsl
rclb
add
add
fld
sahf
sub
push
out
int3
pusha
push
add
bound
or
cwtl
push
mov
cmpsb
cli
rcr
xchg
adc
inc
xor
jmp
stos
into
lock
ffreep
mov
mov
adc
push
xchg
stc
push
popa
cmp
cmp
xor
push
mov
std
fwait
mov
sbb
jecxz
gs
dec
in
inc
es
inc
outsb
inc
sub
mov
and
cmp
jg
movsl
jbe
addb
movb
mov
adc
push
push
pop
dec
xchg
mov
cmp
and
stos
js
je
lods
loop
sub
ret
jp
add
test
sub
inc
inc
pushf
pop
cmc
or
aaa
xor
adc
call
inc
mov
jmp
mov
sub
inc
inc
sahf
les
adc
push
shrb
push
add
sub
xor
jmp
sbb
setge
add
cmp
add
aad
add
xchg
push
sti
dec
sub
jecxz
lcall
bound
adc
xchg
jp
mov
cwtl
mov
jb
pop
pop
sar
into
mov
jmp
jb
push
sbb
fsts
inc
add
mov
and
adc
adc
fcmovnb
inc
xchg
jne
and
ret
dec
xchg
ds
mov
gs
adc
add
pop
xor
inc
fidivs
mov
fwait
inc
mov
sub
cmp
adc
xor
mov
sbb
adc
pop
push
push
push
aam
inc
stos
adc
ja
dec
add
lds
shrl
repnz
lods
xchg
mov
dec
int3
inc
inc
in
hlt
sahf
insl
mov
shll
add
dec
imul
sub
mov
mov
mov
jmp
adcb
xchg
pop
mov
sbb
shll
xchg
mov
push
sar
inc
mov
xchg
adc
pop
call
xor
loopne
in
jbe
or
lds
pop
cld
fld
aaa
int3
in
out
mov
mov
pop
dec
or
movsl
mov
jbe,pt
mov
mov
jns
sbb
test
cwtl
add
pop
inc
insb
das
js
repnz
decl
xchg
loop
popa
xchg
std
mov
fs
xor
jg
cmp
fstps
cmpsl
sub
and
ret
push
jae
int
add
mov
pop
xchg
sbb
sti
sub
xchg
cmp
inc
out
or
dec
mov
movsb
ljmp
mov
jecxz
sbb
xlat
jbe
xchg
orl
inc
push
adc
xor
scas
add
mov
sahf
pop
cmp
mov
jg
sub
test
cld
jle
pmulhw
mov
sub
pop
pop
or
hlt
and
imulb
push
mov
aaa
hlt
out
mov
jmp
jbe
push
mov
dec
push
pop
cmp
jns
push
aam
rorl
sbb
jo
or
call
adc
inc
mov
lea
xchg
out
inc
xchg
inc
push
push
lahf
mov
cmpl
das
or
pop
mov
jmp
push
push
push
enter
sbb
inc
imul
push
xor
dec
sbb
aas
and
xor
pusha
mov
sbb
mov
cmp
mov
arpl
dec
sbb
pop
movsl
add
push
and
repnz
icebp
mov
push
xchg
das
ljmp
hlt
test
or
loop
insb
jge
dec
xchg
pusha
inc
mov
or
adc
mov
ret
adc
adc
outsb
icebp
incl
cs
adc
add
testl
cmp
clc
cmp
push
push
incb
mov
bound
mov
arpl
ljmp
clc
inc
mov
jl
inc
mov
fs
pop
mov
mov
es
icebp
pop
jne
xchg
int
jmp
mov
xchg
push
leave
sbb
jbe
outsl
in
mov
lret
rcll
sbb
dec
mov
dec
jl
add
push
mov
sub
mov
fsubrs
cltd
insb
shlb
adc
call
lret
nop
test
cmpsb
aam
mov
pop
cli
lock
shrl
push
jge
test
adc
xchg
lcall
and
inc
notl
test
push
pop
mov
mov
push
push
sbb
jp
push
insl
out
xor
and
inc
or
cmp
xor
jae
dec
nop
repnz
or
icebp
jb
adc
hlt
dec
insl
in
mov
jns
leave
push
sbb
cmpsl
call
sbb
ljmp
fs
mov
rorl
test
and
adc
jge,pn
orb
movsb
xchg
shll
jle
mov
fwait
std
les
outsl
mov
inc
pop
ret
ja
mov
push
js
inc
incl
frstor
sub
mov
add
push
xor
or
lods
clc
lea
aam
xchg
sub
mov
shrb
lea
arpl
cmpl
iret
fists
mov
imul
in
lds
int3
das
sub
xchg
pop
or
inc
or
or
add
inc
jmp
dec
push
movsb
push
mov
sub
lock
xor
cs
shll
add
into
mov
aam
xchg
testb
ret
adc
mov
fs
mov
je
xlat
int3
lcall
jo
inc
sbb
xchg
mov
push
popf
jnp
das
lea
inc
push
and
ja
mov
rclb
fsub
jecxz,pn
add
sub
pusha
jecxz
call
or
rorb
shrl
dec
imul
iret
and
ret
insb
popf
cmp
outsl
cmc
cltd
or
mov
cmp
loope
sub
and
mov
cld
push
jmp
adc
inc
aas
adc
and
inc
data16
pushl
mov
lahf
test
jg
sbb
jae
jno
gs
or
loope
ljmp
xchg
fcomp
dec
pop
push
mov
mov
call
adc
jmp
or
mov
lea
outsb
outsb
cmp
fcoms
outsl
mov
stos
in
sti
mov
rorl
into
dec
aaa
inc
in
inc
stc
fsts
lods
in
xor
jb
mov
pushf
xchg
jmp
cmp
jns
adc
mov
adc
aam
mov
mov
jae
addr16
and
repz
jp
mov
pop
fildl
xchg
lcall
aaa
ljmp
xor
lds
add
cmpsb
aas
push
jns
add
ffree
pop
popl
mov
pop
ljmp
push
inc
pop
adc
push
icebp
test
js
in
pop
lock
pop
mov
sahf
push
inc
mov
adc
test
in
fwait
jbe
sub
and
xor
stos
cli
imulb
ss
into
or
outsl
sbb
pop
scas
cmp
cmp
pusha
jecxz
je
xchg
fildl
lret
in
rcll
outsl
xchg
fs
fwait
and
jg
ret
loop
shlb
pop
dec
jp
lcall
decb
xchg
jno
jns
and
es
add
dec
daa
loopne
ret
lret
and
pop
cmp
xor
add
add
out
push
cmpl
jg
push
mov
pop
cli
adc
or
adc
fistl
clc
es
sbb
ds
clc
out
pop
mov
not
push
pop
lret
mov
outsl
pushf
pop
test
lds
fisubrl
lock
or
xchg
das
xchg
cmp
aaa
push
push
ja
dec
add
adc
hlt
inc
or
icebp
add
sub
xor
inc
mov
fadds
pusha
incb
test
cmp
insb
test
stc
inc
add
inc
shll
idivl
dec
cmp
in
imul
pop
daa
dec
sbb
mov
ljmp
dec
push
lods
idiv
aas
add
enter
add
and
add
mov
rcr
loop
pop
jo
and
outsl
pop
pop
xor
and
loopne
add
lea
jl
sub
add
mov
cmp
arpl
insb
ljmp
xor
loopne
icebp
inc
pop
stos
add
repz
pop
ret
pop
inc
outsb
mov
repnz
push
mov
sub
insl
sbb
imul
sbb
pop
out
aaa
push
fdiv
andb
mov
push
stos
pop
stos
jg
test
pop
out
int3
out
jl
loope
js
outsl
ret
push
and
fildl
negl
xor
sti
mov
jo
mov
mov
lods
mov
aas
movsb
int3
outsl
xchg
pop
insl
mov
pop
adc
pop
lahf
adc
mov
sbb
xor
push
repnz
add
lods
popf
and
push
cld
in
mov
mov
stc
sbb
shl
mov
push
cwtl
int3
inc
mov
jmp
or
aaa
paddsb
mov
adc
push
or
pop
pop
cli
mov
int
fisttpl
out
mov
mov
or
mov
xor
add
mov
xchg
popf
fwait
pop
jo
fistpl
aas
mov
ret
dec
fisttpl
push
inc
pop
dec
out
sbbb
test
push
movsl
push
cli
add
out
dec
shlb
lea
sbb
mov
pop
insl
out
xchg
cmp
out
xor
xchg
sahf
jmp
jo
add
mov
scas
xor
in
loopne
mov
jnp
xor
cltd
dec
cmp
mov
dec
sbb
jbe
inc
inc
out
lret
and
mov
mov
adc
push
pushl
hlt
and
sub
mov
pop
dec
fldl
or
out
mov
push
loopne
or
xrstor
loope
loopne
and
lcall
test
mov
mov
push
add
pop
jo
mov
jmp
mov
mov
jmp
dec
adc
rorb
dec
test
mov
sbb
add
cs
xor
mov
test
mov
gs
dec
and
decb
pop
in
adc
scas
inc
ljmp
pop
loope
adc
pop
jb
inc
fisttps
repz
loopne
jl
sar
mov
jg
xchg
fwait
xor
sbb
rclb
adcb
inc
ret
cld
push
outsb
mov
stc
daa
and
pop
push
or
mov
cli
push
mov
push
incl
cmp
dec
pushf
int3
in
fdivs
je
call
pop
cs
sarl
out
or
sbb
or
jmp
out
dec
or
mov
mov
subl
pusha
sub
ret
mov
pop
ficoml
cmpsb
out
jecxz
mov
sarb
aaa
xchg
out
push
aas
xor
push
lahf
ds
icebp
lahf
pop
std
mov
push
das
es
push
lea
movsb
aad
loopne
push
bound
clc
mov
add
jbe
sub
pushf
push
add
test
xlat
mov
adc
rorb
lods
jno
outsl
jg
mov
lock
push
inc
xchg
mov
dec
ret
or
test
decb
sbb
inc
sar
adc
btc
and
sar
nop
mov
aas
jns
in
sbb
adc
test
fiadds
mov
stc
outsl
cmpsl
pop
mov
jae
ljmp
lds
sub
ret
stc
bound
shrl
push
hlt
rorb
dec
or
inc
pusha
push
insb
lock
cli
aas
push
cld
cmpsb
or
test
add
sbb
dec
sahf
push
loope
les
mov
adc
fwait
xor
fadd
push
insb
test
sbb
hlt
testl
add
jno
ljmp
xlat
hlt
test
lds
mov
ret
xchg
scas
sbb
push
mov
xchg
filds
sbb
inc
cmp
or
cli
daa
dec
pop
mov
dec
pop
cmc
cmp
into
xchg
lock
icebp
pop
dec
ljmp
movsb
bound
mov
sbb
mov
stos
ja
adc
or
sbb
les
mov
pop
adc
sbb
out
int3
in
mov
jmp
mov
cmpsb
sub
aam
and
sub
inc
xchg
orb
adc
add
push
pushf
lret
jnp
stos
imul
orb
pop
push
adc
mov
iret
test
add
ret
add
mov
int3
inc
orb
jg
mov
and
add
iret
or
insl
add
scas
push
sbb
in
xor
adc
or
fwait
les
negb
and
sbb
cvtdq2ps
fdivrs
pop
test
mov
enter
sbbb
push
mov
jns
sub
lcall
push
ret
imul
fwait
mov
push
icebp
mov
jge
cmp
and
rcrb
cmp
sbb
mov
daa
mov
xchg
add
outsb
stc
dec
add
push
dec
subb
mov
dec
hlt
mov
or
loopne
mov
call
hlt
pusha
add
pop
test
inc
add
pop
xchg
popa
or
mov
inc
je
add
inc
es
jp
js
lret
out
pop
cmp
and
dec
push
leave
or
add
mov
adc
or
push
stos
jbe
sub
cmc
call
lds
gs
or
loopne
inc
daa
cmp
xchg
loop
and
loopne
add
sbb
lcall
sbb
jmp
adc
sti
inc
dec
pop
inc
cli
mov
sbb
imulb
push
in
sub
std
mov
sub
push
jecxz
adc
jp
or
stos
cwtl
add
mov
nop
ficomps
add
inc
sub
add
cmp
fbld
repz
cmp
cmp
push
pop
icebp
rcrb
lock
and
je
jbe
add
loopne
inc
xor
and
fimull
dec
sub
aam
sbb
das
or
ficoms
in
push
push
cmp
mov
nop
test
nop
push
sub
fwait
inc
or
mov
and
inc
cli
ficoms
cs
jecxz
inc
and
push
andl
push
movsb
fdivr
repnz
test
adc
push
aam
movb
jp
adc
cld
mov
rcl
je
xchg
call
xor
std
lods
jg
push
mov
lcall
int3
test
add
inc
insl
or
or
mov
xor
sub
mov
xorl
out
scas
stos
ljmp
aam
xchg
insb
inc
jge
mov
adcl
push
enter
push
enter
dec
cmp
push
mov
dec
mov
add
jns
fldcw
xor
mov
stc
shrl
call
xchg
jns
pop
mov
pop
int3
mov
adc
daa
mov
adc
sub
rclb
mov
push
and
icebp
outsl
mov
jl
add
add
pop
int
xor
incb
clc
aaa
and
xchg
shll
std
dec
popa
jae
daa
scas
out
xchg
fildll
fsubrs
stos
dec
pop
incb
inc
lods
lock
rcl
jmp
iret
push
jnp
stc
bound
lods
jne
icebp
aaa
inc
mov
aad
lret
inc
jg
cmp
cmp
insl
mov
std
call
sub
pop
and
cmp
call
addr16
popa
cmp
sub
mov
stc
or
mov
loope
aaa
or
jne
ss
push
push
push
fbld
fwait
pop
push
bound
insl
fdivrs
add
insl
hlt
lods
fnsave
push
sub
xchg
sbbl
imul
mov
lahf
xor
add
push
mov
incl
inc
jl
shrb
xor
jnp
or
add
clc
pop
mov
call
pop
les
in
shufps
adc
incl
jns
loop
fs
pop
fisttps
mov
mov
push
dec
jp
jle
das
movsl
sbb
das
mov
fistpll
or
and
inc
mov
mov
push
mov
push
std
mov
sbbl
ret
hlt
rorl
clc
ret
and
mov
pop
clc
or
mov
icebp
sub
roll
pop
insl
call
dec
loope
pop
add
and
add
nopl
xlat
sub
into
insl
test
xchg
mov
in
dec
xor
and
jo
in
ret
jae
dec
adcl
xor
mov
cmp
fcmovnbe
inc
xor
adc
dec
fimuls
and
arpl
push
pusha
or
les
and
hlt
test
jno
popf
mov
in
pushl
or
shr
lods
cmp
hlt
dec
fiadds
lea
enter
jg
jo
mov
rcl
and
es
cmpsb
ljmp
mov
push
mov
sbb
mov
lds
mov
jecxz
push
xchg
dec
lret
dec
pop
xchg
xchg
bound
mov
mov
subb
add
test
decb
cwtl
mov
mov
or
pop
ds
pop
clc
pop
shll
jo
mov
fimuls
mov
mov
std
fistl
xor
inc
dec
mov
xchg
aaa
insl
pop
aaa
cmpsb
cmp
push
arpl
cli
fwait
aam
fildll
jno
lock
mov
out
xor
mov
pop
clc
stos
fs
pop
add
lods
or
cs
sti
jg
loopne
cmp
xchg
dec
sub
sbb
call
jo
mov
mov
adc
std
lea
std
lcall
rcll
clc
decl
add
inc
aas
hlt
outsb
mov
xchg
rol
insb
arpl
cmp
mov
popa
outsb
xchg
cltd
test
popa
inc
add
xor
in
mov
pusha
sti
test
mov
ss
popa
stc
adc
push
into
xbegin
cli
ret
pop
jge
daa
nop
xlat
push
fcmovnu
pop
sub
and
cmpsl
out
xchg
fcomps
add
push
mov
lods
xor
cmp
lods
xchg
push
mov
cmc
movsl
movsl
push
cs
dec
icebp
es
xor
in
call
loopne
adc
pop
shrb
cmpsb
pusha
clc
mov
fimuls
adc
push
mov
push
fistps
adc
or
lods
call
dec
add
out
mov
mov
or
push
ficoml
fisubrl
aaa
inc
fldt
ljmp
movsl
ret
adc
inc
mov
loopne
mov
sub
and
cld
pop
stos
jl
daa
jecxz
jecxz
cld
pusha
nop
pusha
and
gs
xor
jo
sar
call
jo
mov
dec
or
jae
or
push
adc
into
push
pushf
mov
and
js
ret
sub
add
andb
add
or
repz
inc
test
frstor
pop
ficoml
es
in
outsb
push
add
mov
mov
and
paddd
sub
pop
mov
scas
push
cltd
pop
jne
lods
mov
pop
jmp
popa
sub
xor
xchg
mov
and
and
icebp
mov
push
ret
stos
jb
sbb
or
loop
cli
out
cmp
int3
out
ret
mov
js
xor
sub
push
xor
or
mov
xor
negb
inc
call
jge
ja
cmp
mov
mov
adc
add
and
mov
pop
inc
mov
shlb
hlt
and
cmp
inc
nop
mov
push
push
xor
js
fmulp
rolb
repnz
cli
es
scas
mov
ror
inc
addr16
mov
inc
xor
ss
xchg
es
xchg
or
lds
lods
dec
sbb
clc
clc
push
push
sbb
enter
pop
ja
adc
dec
jnp
sub
add
popa
add
xorl
and
mov
loopne
dec
adc
inc
mov
sbb
bound
jbe
add
cwtl
in
enter
xorl
sub
jg
add
adc
lahf
lea
mov
inc
and
sub
mov
shlb
pop
filds
pop
push
cld
loope,pn
ror
sbb
mov
pop
lods
test
push
cmpsb
mov
cmpl
xorb
loope
std
lea
int
in
sub
mov
adcb
pusha
aas
js
jle
mov
and
or
pop
jl
or
sbb
fists
mov
repnz
dec
mov
inc
pop
lock
mov
push
roll
and
scas
mov
mov
pop
and
rcr
jbe
fdivrl
popa
jl
sti
dec
dec
push
je
fcmovnb
ds
add
add
outsl
in
sbb
popa
or
cmp
add
frstor
dec
jno
fcomps
adc
dec
clc
sub
sbb
or
mov
cmp
xchg
cmpsb
ljmp
pop
jne
or
or
mov
negb
es
cs
add
jo
add
mov
mov
xchg
loopne
jmp
adc
ficoml
popa
jle
mov
in
call
xchg
push
loopne
xor
inc
push
dec
jne
aam
and
adc
add
gs
or
fidivl
out
xchg
es
xchg
sbb
jl
pop
xor
ss
push
inc
scas
incb
cs
jo
addb
adc
sahf
test
sub
add
std
add
dec
add
stos
js
jmp
sbb
dec
fimull
aad
rcll
push
or
cmp
in
push
sub
or
inc
mov
fiadds
ds
mov
fidivrs
lret
push
pop
cmp
sbb
hlt
loope
icebp
in
pop
jg
into
xchg
in
and
or
mov
adc
adc
xlat
hlt
js
dec
jbe
cli
in
mov
test
lods
mov
jg
fldcw
mov
pop
mov
outsl
cmp
aas
adc
sbb
decl
fisttps
cmp
cmp
pop
sahf
scas
cld
mov
adc
and
xor
sarl
jne
mov
movsb
add
jg
mov
xor
jo
sub
mov
add
mulb
inc
dec
xor
in
pop
rclb
mov
pop
popf
ja
or
sbb
outsb
insb
jp
add
sub
xor
fs
dec
pop
pop
mov
jne
adc
mov
pop
mov
leave
jae
mov
sti
ljmp
mov
xor
inc
cld
sub
test
inc
movsl
rcrl
fnstsw
aaa
lahf
aam
jne
lcall
xchg
icebp
rcl
ret
subb
xchg
pop
push
and
mov
mov
popa
incb
test
sbb
insl
mov
inc
dec
in
push
ficoml
shrb
pop
sub
ja
pop
clc
fisttpl
fisttpll
nop
cwtl
push
push
cltd
and
lcall
add
push
pusha
jge
add
xchg
popa
pop
inc
push
pop
pusha
pop
pop
add
sar
sti
mov
pop
popa
ds
mov
inc
pop
loop
and
xchg
test
mov
xor
test
jae
jge
movsb
dec
call
out
imul
leave
cmp
daa
add
push
lcall
lea
and
lods
call
dec
dec
mov
sti
mov
fistpl
insl
mov
lods
push
rcr
leave
push
pop
pop
mov
pusha
in
dec
inc
movsb
sbb
icebp
sbb
stos
mov
lea
ja
subb
jg
int3
mov
inc
dec
inc
jl
inc
out
jmp
sub
fs
mov
mov
inc
dec
mov
insb
je
cmc
stos
mov
push
fmull
ret
jecxz
or
icebp
inc
cmc
in
sbb
insb
mov
cmp
mov
or
pop
push
leave
sub
jge
test
loop
call
mov
jnp
mov
in
mov
mov
nop
sahf
inc
stos
testb
mov
mov
shl
push
sti
leave
cmp
gs
es
pusha
sbb
lret
dec
in
out
imul
in
jecxz
pushf
add
out
jecxz
add
mov
imul
xchg
dec
aaa
shlb
and
adc
sbb
adc
mov
popa
lock
fbstp
addr16
test
mov
mulb
rorb
loop
mov
and
push
dec
lods
sub
stos
mov
ds
or
add
dec
mov
inc
xor
mov
dec
sbb
xor
into
popa
adc
jns
shrb
orl
mov
adc
or
sub
xchg
push
cmp
push
sbbb
jbe
cmc
icebp
mov
mov
cmp
div
add
out
out
mov
rolb
pop
data16
js
adc
iret
rcll
insb
xchg
callw
shlb
inc
add
sbb
adc
mov
push
mov
push
rcl
mov
or
test
ficoml
pop
loopne
sub
inc
sbb
xchg
mov
push
adcl
int3
aad
pop
mov
rolb
cwtl
cwtl
dec
add
inc
push
xor
inc
cmpsl
loope
outsb
push
jno
xchg
mov
enter
test
rcrl
fcompl
scas
mov
sbb
xor
ret
ret
push
dec
dec
or
adc
inc
js
push
test
fisttps
sbb
pop
add
scas
enter
adc
fstpl
fsubrp
repz
shll
fildl
or
or
sub
in
int3
insb
cmp
inc
pushf
sbb
adcw
sbb
xor
outsl
mov
cld
or
call
pop
push
jl
sub
loope
das
andb
xor
xor
and
xor
test
adc
addb
sub
pusha
inc
dec
mov
cmpsb
ja
or
fs
fcoms
sahf
push
icebp
or
sbb
out
dec
repnz
cmpsl
pushf
jge
inc
pop
idivl
dec
int3
pop
or
pusha
sbb
inc
add
fwait
mov
cmp
loopne
mov
mov
xchg
inc
xor
mov
ret
inc
jmp
sub
sub
fimuls
mov
ljmp
inc
jge
out
xchg
inc
mov
cmpsb
orb
add
and
adc
lods
cmp
mov
push
xlat
rol
or
int
mov
adc
inc
mov
into
cs
fcom
mov
cwtl
je
and
jne
mov
dec
add
imul
fstpt
cmpsb
lock
and
adc
jl
call
sbb
xor
pusha
iret
xchg
add
cld
jbe
sub
mov
repz
lcall
hlt
cltd
add
dec
outsl
pop
mov
cmp
in
stos
insl
inc
add
jb
and
lcall
repz
push
mov
or
cli
add
adc
jb
lods
outsl
mov
cmpsb
jne
cmp
lock
jmp
jo
es
mov
vpmaxsw
jecxz
pushf
aad
adc
movsb
and
insb
cmp
add
dec
inc
xchg
adcb
mov
xor
fstps
lcall
out
and
or
mov
rcrl
pusha
popf
aam
mov
cli
into
fcomp
decb
add
movsl
test
es
test
daa
mov
inc
inc
lahf
dec
add
test
sub
lock
jnp
push
or
mov
nop
sahf
add
sub
inc
mov
mov
es
jb
sahf
cmp
adc
adc
lret
fcmovu
cmp
fcompl
or
stos
enter
xchg
lahf
lahf
mov
fimuls
xchg
shll
lods
lcall
out
scas
mov
ljmp
mov
in
jbe
or
sub
or
lahf
fwait
and
or
push
add
and
push
mov
popa
mov
movsb
outsl
xor
and
dec
jge
adc
sbb
sub
add
sub
push
jge
shlb
in
mov
jbe
and
add
xor
sub
inc
data16
ret
rcrl
daa
lods
adc
or
jbe
hlt
push
gs
inc
dec
pop
in
out
add
inc
roll
xchg
fs
cld
and
xor
leave
ret
sbb
inc
inc
sbb
adc
pop
adc
scas
xlat
sbb
jo
ret
push
sbb
stos
cwtl
fdivr
out
aad
mov
xlat
pop
add
aad
cwtl
push
faddl
cwtl
sarb
mov
add
push
nop
js
cltd
xchg
mov
mov
std
cmp
div
push
dec
outsl
xor
int
dec
push
jecxz
mov
add
ret
lock
sbb
or
int
iret
cmp
jp
sbbb
fistpll
jns
or
std
adc
xchg
fucomi
rorb
sbb
jl
imul
cli
xchg
xchg
fists
add
scas
bound
and
das
or
dec
aam
aam
stos
sbb
ljmp
loopne
pop
and
or
xor
fiaddl
or
lahf
lea
inc
int3
fisubs
lods
cmp
daa
push
aas
in
negb
mov
ljmp
sub
and
or
test
mov
push
loopne
stos
in
into
int
pusha
mov
lock
push
lods
xor
dec
testb
pop
outsl
adc
cmp
aaa
lock
rcrl
inc
dec
xlat
sub
lock
mov
testb
jo
insb
push
mov
jp
lock
sbb
adc
adc
or
pusha
or
in
lock
add
fdiv
sti
lcall
sub
adc
ljmp
jnp
pop
inc
adc
in
push
mov
adc
push
icebp
sbb
mov
dec
loopne
gs
dec
arpl
and
decl
push
shlb
add
and
addl
rcrb
and
in
dec
mov
add
test
shl
ret
aaa
sbb
xlat
mov
mov
shrb
and
imul
rcll
jl
lock
xchg
ret
sbb
dec
fiadds
add
pop
gs
pushf
lahf
cwtl
mov
aas
jmp
cwtl
push
dec
test
andl
icebp
movsl
pop
cli
dec
mov
fmull
ret
imul
push
and
enter
jl
add
lcall
mov
mov
sti
add
lea
outsl
inc
adc
push
lahf
daa
lea
fcmovnu
icebp
bound
mov
nop
test
xor
aaa
mov
mov
call
add
test
cld
jle
mov
mov
add
sub
xor
cmp
out
or
jno
mov
mov
mov
sbb
pop
les
rorb
lret
fucomp
jg
fsubrs
jae,pt
bound
addr16
xor
jne
cs
inc
cmp
sbbb
mov
jae
cmp
add
dec
xchg
jae
notb
sub
jo
jns
push
hlt
fistpl
xor
adc
popa
dec
mov
add
mov
xchg
add
icebp
imul
or
bound
cli
negb
jl
scas
xchg
clc
pop
pop
cwtl
pop
jg
int
in
stos
and
fldt
addl
cmpsl
or
aas
push
dec
clc
pushl
xor
add
negl
push
xchg
pop
add
mov
add
push
mov
aaa
std
sub
es
pop
cmp
dec
add
push
inc
and
scas
imul
push
je
test
xchg
xchg
sbb
out
push
ljmp
xchg
xor
push
push
je
nop
call
insl
call
mov
sahf
sbb
mov
jmp
shll
sub
mov
adc
sarb
incb
jmp
and
in
pop
or
stos
push
cmp
jae
popf
fisttpll
mov
stos
add
push
jge
das
mov
lods
aas
mov
cmpsb
mov
aad
int3
std
in
test
fmuls
inc
adc
lods
fcomi
or
out
xchg
mov
xchg
mov
fisttpl
sbb
in
call
jge
lods
or
add
inc
mov
rorl
mov
pop
sti
cmp
mov
in
add
mov
adc
sub
jo
lods
popf
xchg
incb
add
or
push
nop
mov
jno
pop
cmc
dec
xchg
xor
inc
mov
mov
inc
das
mov
dec
mov
mov
xor
or
xchg
gs
idivl
jle
sbb
jbe
add
adc
push
sub
or
subl
sar
xlat
scas
or
mov
push
aaa
popa
inc
jg
push
push
lods
stos
clc
jl
aaa
xor
dec
adc
add
rcrb
push
push
mov
inc
insb
das
add
sbb
and
jne
push
sbbl
xlat
fdiv
insb
mov
cmp
and
mov
fcomps
subl
frstor
inc
or
adc
inc
xor
inc
xchg
out
add
adc
cmp
add
test
xchg
loopne
jmp
lcall
sbb
scas
je
xchg
and
cmc
sahf
or
pushf
adc
cmp
aas
popa
sub
push
sbb
out
sub
cmp
roll
inc
mov
sbb
aad
inc
popf
mov
pop
fcoms
push
lret
dec
push
push
sub
xchg
mov
lock
ret
mov
dec
daa
inc
adc
mov
inc
lret
sbb
and
dec
mov
icebp
mov
filds
test
rorl
xor
add
mov
fcomp
dec
cmp
mov
add
xchg
shrb
in
data16
int
lods
xchg
xchg
ja
sub
dec
add
rcr
xchg
sbb
insl
add
out
push
daa
pushf
enter
mov
call
inc
and
adc
pop
pusha
inc
xor
dec
adc
outsl
icebp
js
xchg
call
fldt
add
cmp
add
xlat
fnsave
add
adc
mov
sbb
orb
ret
add
or
xor
xor
test
push
xor
or
and
std
call
loopne
arpl
repnz
cmp
push
movsb
insl
mov
dec
clc
sub
out
mov
push
xor
jo
or
mov
adcl
dec
push
pop
aas
test
or
jp
push
cltd
add
test
xchg
test
cli
test
pop
shl
cmc
iret
or
mov
dec
lods
fcoms
xchg
sar
adc
adc
test
xor
iret
clc
sub
mov
in
adc
outsl
in
push
adc
and
aaa
push
cltd
inc
inc
mov
dec
jecxz
mov
out
mov
test
cmp
xor
int
loopne
or
sbb
gs
xchg
add
add
stos
mov
adc
push
push
les
cmp
pop
mov
adcb
xlat
sub
cld
das
and
sbb
sahf
add
mov
pushf
sub
mov
xor
xlat
mov
lahf
icebp
push
push
inc
mov
test
mov
push
aam
push
repnz
pop
cmp
sub
dec
xor
mov
sub
in
mov
push
test
adc
and
cmp
push
outsl
inc
inc
in
push
adc
push
inc
sbb
xchg
add
es
inc
add
lods
or
jns
es
push
call
decl
ret
xorb
mov
and
icebp
xchg
adc
inc
adc
daa
pop
xchg
cmp
mov
clc
lods
loop
xchg
or
icebp
mov
std
xor
shr
or
xchg
or
fildl
sub
sub
incb
jno
cmpsb
mov
hlt
add
fadd
xor
add
ss
lods
dec
and
ljmp
gs
or
xor
cwtl
push
addl
add
lahf
sbb
lods
scas
cmp
fsubp
pop
jnp
adc
mov
push
and
das
jl
and
mov
mov
test
adc
mov
call
push
xchg
fs
jo
clc
push
sub
pop
xor
sbb
cmp
adc
iret
mov
cld
outsb
or
push
mov
jp
fldl
sahf
les
push
ds
adc
pop
cli
and
mov
mov
adc
test
mov
aaa
in
testb
orb
sarl
loope
ss
jg
fidivrs
add
xchg
in
popf
std
inc
push
popa
movsb
imul
mov
mov
stc
xchg
xchg
insl
pop
and
fldl
fidivrs
lds
push
aaa
or
or
add
into
sub
or
ret
mov
xor
je
pop
mov
jecxz
ret
sub
xchg
movsb
add
int
sbb
adc
mov
dec
loope
test
aam
clc
pop
fcmovbe
xchg
aam
and
jl
or
add
and
mov
inc
aam
movsl
pop
add
stos
push
mov
or
lahf
ffreep
lea
mov
les
addl
shr
not
ss
mov
or
xchg
sub
add
mov
iret
out
insb
sub
sbb
les
hlt
out
insl
jecxz
in
insl
mov
jne
push
dec
jns
inc
pop
dec
rcll
aam
std
adc
popf
pop
inc
inc
int3
adc
idiv
push
mov
jp
fucom
mov
iret
clc
xor
mov
orb
adc
push
mov
pop
push
lahf
ret
jge
or
lods
jge
inc
dec
xorb
pop
decl
cmp
inc
dec
xchg
jo
jmp
mov
stos
clc
ret
jg
mov
pop
loope
adc
mov
add
sub
outsl
cltd
rclb
std
fisttpl
lea
push
loopne
idivl
mov
movsb
pop
scas
mov
push
dec
mov
pop
inc
popa
popa
out
shrb
sar
dec
push
pushf
mov
das
inc
dec
clc
aas
into
test
sub
and
les
add
pop
and
stc
fldl
sahf
fidivrl
pop
pop
xchg
xchg
ja
xchg
mov
cmp
pop
xorl
xchg
shll
mov
push
bound
lahf
sbb
and
sbb
jo
std
push
add
rcll
push
imull
icebp
imul
dec
scas
aaa
cmp
dec
je
sub
push
adc
adc
in
or
pushl
sub
push
nop
inc
in
clc
pop
rorb
xchg
cli
imulb
and
xor
pop
cli
insl
sub
cmp
xchg
std
bound
add
pop
push
dec
test
sub
xchg
mov
push
enter
mov
jo
push
stc
push
addl
xor
js
mov
push
push
enter
mov
fldt
lcall
popa
push
push
xchg
and
mov
fistpl
mov
mov
cmc
mov
clc
iret
jp
sbb
cltd
lds
cmp
add
js
pop
mov
call
inc
sub
pop
mov
xchg
mov
out
hlt
dec
cmp
push
dec
adc
pop
sub
jge
push
shrb
je
mov
dec
xor
mov
xor
ds
add
push
int3
lods
das
pop
mov
cs
sbb
orb
jo
cmc
aaa
adc
in
add
xor
mov
lret
shrb
sbb
cmpb
test
jl
das
add
sub
outsl
sub
hlt
mov
mov
addl
or
les
adc
fstps
push
mov
adc
ljmp
cmp
insl
iret
pop
mov
mov
mov
add
sbb
or
dec
lock
sahf
inc
imul
std
clc
fistl
push
in
add
jne
sbb
mov
push
fnstcw
adc
or
je
adc
inc
mov
add
inc
cltd
cmpl
sarl
adc
xchg
push
pop
int3
and
cmp
push
mov
add
jl
loopne
add
xlat
inc
jg
loopne
inc
outsl
inc
dec
fildl
and
andb
push
mov
fs
cmp
in
leave
push
push
cmpsb
lahf
adc
int3
push
sub
xchg
loope
pushf
mov
in
adc
adc
add
and
aam
jbe
sbbl
clc
ficompl
imul
aaa
fisttpl
pop
int3
add
divb
mov
add
fwait
roll
fcoms
cmp
ficomps
fs
add
sbb
sbb
in
jp
lcall
xchg
test
cmp
add
or
prefetch
or
add
cwtl
jo
adc
cmp
add
inc
inc
rolb
ljmp
addb
data16
mov
out
pop
or
mov
inc
mov
pop
daa
adc
jle
insb
imul
pop
fimuls
mov
jbe
xchg
sbb
push
out
dec
cltd
mov
movsl
cmp
adc
es
jbe
in
adc
jno
cmp
movsl
or
or
mov
outsb
cld
pop
cmpsl
mov
push
sahf
push
adc
mov
cmp
imul
mov
inc
pushf
add
outsb
xchg
fidivrs
and
pop
add
xchg
in
mov
aad
adc
data16
adc
fildl
outsb
lods
add
mov
jae
orb
pop
cmp
outsb
repz
pop
adc
xchg
cmc
lea
add
aam
adc
pop
cmp
inc
jo
lods
mov
adc
call
dec
out
mov
pop
in
ss
or
adc
sqrtps
jle
sbb
adc
push
sbb
test
push
fldt
add
subb
lods
jne
push
mov
mov
xor
sbb
sbb
faddp
pop
sarl
add
hlt
jmp
ljmp
or
aaa
pop
stos
ljmp
je
jecxz
pop
pop
das
inc
gs
and
imul
es
test
push
insl
cmp
add
pop
push
pop
mov
sub
lods
sbb
lods
loope
pop
dec
sub
nop
sbb
xor
push
add
popf
jmp
clc
lret
int
cmpsl
faddl
dec
and
cs
add
sbb
jp
js
cwtl
mov
mov
out
sbb
xor
xbegin
xchg
mov
add
or
shl
pop
scas
add
and
pushl
mov
dec
test
aad
out
xor
jae
pusha
dec
out
mov
testl
pop
or
cli
in
push
or
insl
test
scas
inc
mov
popa
xlat
les
push
negl
cwtl
xchg
es
mov
sbb
lcall
cltd
cli
or
push
pop
js
mov
repz
pop
push
sbb
xchg
daa
into
lods
mov
push
fnsave
movsb
lods
aad
inc
das
mov
out
outsl
inc
lret
aaa
clc
jne
cmp
xor
add
ds
push
mov
into
xchg
jle
inc
inc
xor
push
testl
adc
dec
cmp
sti
cmc
ret
and
jle
add
pop
es
stos
lea
clc
pop
shlb
or
dec
outsl
lahf
or
push
mov
cmp
rcrb
inc
mov
loopne
jl
or
sbb
loope
mov
push
push
push
jns
enter
adc
daa
outsl
xor
pop
fucomip
adc
sbb
test
mov
subb
push
aad
mov
adcl
stos
decb
pop
jle
call
or
stos
adc
out
test
jge
repz
or
add
or
cld
pop
jle
movsl
inc
push
adc
cli
or
rcr
mov
hlt
movsb
add
jg
in
lret
pop
adc
cltd
push
in
ret
or
adc
sbb
push
or
call
xlat
mov
test
insl
push
jne
call
mov
push
jne
xchg
xor
dec
and
inc
int3
lcall
ss
decl
adc
aaa
pop
repnz
movsl
pusha
hlt
xchg
ficoml
jecxz
fneni(8087
push
add
mov
inc
or
mov
call
dec
js
ret
and
stos
add
mov
jo
lds
lcall
ds
add
sbb
movsb
movl
nop
shr
ficompl
loop
leave
mov
addr16
fidivrl
xchg
loop
out
push
and
popa
sub
loope
and
enter
imul
inc
mov
xchg
incl
lds
dec
mov
stc
test
push
arpl
iret
sub
mov
pop
shlb
mov
sub
jmp
das
sub
clc
daa
jb
in
add
sub
mov
jmp
dec
and
stos
mov
jne
outsl
mov
js
and
arpl
or
inc
sub
ljmp
lods
fadds
gs
mov
or
jo
dec
inc
sbbb
add
mov
je
mov
push
sub
clc
insb
cltd
loopne
pop
or
jno
gs
es
sub
add
test
mov
push
test
jnp
test
lods
data16
das
and
mov
andl
aaa
adcb
stc
hlt
or
pop
popa
sub
int3
inc
cli
addr16
xor
fstpt
or
push
orl
lods
inc
shl
jne
fwait
pushl
imul
ficompl
js
enter
pop
xchg
test
cltd
and
mov
push
jbe
fidivs
adc
cmp
out
cs
mov
jbe
mov
repnz
sahf
imul
or
add
das
je
lret
jl
inc
mov
xor
sar
mov
push
xchg
sub
xchg
sub
mov
fcmovnu
ss
fs
loop
loopne
jb
xchg
mov
test
lock
movb
inc
jg
mov
lock
push
shrb
in
sbb
jns
jne
pop
clc
pushf
xor
sub
test
push
rclb
incl
cmc
mov
stos
scas
inc
mov
add
das
mov
jne
jg
into
xchg
mov
or
aaa
out
ffreep
cltd
push
jmp
sbb
mov
shlb
sbb
mov
sbb
inc
or
push
sbb
mov
mov
ljmp
xor
xchg
sarl
push
insb
icebp
fistpll
mov
mov
inc
lcall
mov
popa
jno
rcrl
mov
dec
sub
lods
les
push
enter
or
in
or
and
sti
cmp
add
adc
jb
sbb
or
push
cld
or
sbb
add
movb
push
push
push
lret
aas
add
sbb
pop
push
push
adc
pop
add
aad
mov
hlt
sub
cmp
pusha
push
mov
mov
jae
pop
add
inc
or
pop
cmpsb
movsl
loop
jae
sbb
push
cwtl
sbb
sub
lock
dec
add
and
xchg
add
enter
or
fistpl
shrl
pop
mov
xchg
push
movsb
push
push
popa
add
imul
xchg
mov
adc
or
inc
rorl
sub
mov
call
lds
or
loop
loopne
sbb
inc
and
orl
imul
adc
icebp
int
in
test
ljmp
or
cmp
test
jb
imul
and
adc
mov
cmp
setae
mov
dec
popf
adc
push
test
rol
cmpsb
pop
orb
mov
lods
sbb
out
mov
sub
adc
fcomip
inc
xchg
xchg
popa
inc
test
sbb
add
test
outsb
adc
mov
xchg
adc
jmp
fucomip
roll
push
cmp
inc
xor
and
push
xor
sbb
pop
mov
cli
das
and
mov
scas
shlb
mov
adc
push
inc
out
and
push
das
movsb
mov
sub
cmpsb
and
inc
gs
shlb
xchg
sub
xchg
adc
sbb
add
int
mov
das
pop
inc
mov
stos
mov
push
inc
jne
ret
repnz
sub
dec
pop
lea
push
mov
mov
xor
xchg
sbb
sub
aam
cmp
rcl
repnz
stc
inc
addr16
pop
popf
inc
divl
dec
test
adc
shrb
push
pop
and
or
cmpsb
data16
cmpl
lods
out
mov
ds
imul
jb
add
sbb
stos
cmp
std
es
int
xor
dec
sub
and
outsl
loope
adc
add
xor
push
js
dec
jnp
xor
inc
inc
dec
mov
add
inc
movsb
int3
add
int
inc
mov
test
inc
dec
fidivl
jae
jnp
lods
mov
pshufw
je
lcall
adc
mov
inc
mov
or
or
outsb
scas
mov
movsb
arpl
jbe
scas
pop
push
add
inc
in
lea
mov
sbb
mov
or
sti
in
ss
fsubp
add
stos
nop
and
push
or
cltd
sub
cmp
cmp
push
adc
sahf
and
pop
xor
shrl
mov
mov
ds
push
xor
xor
adc
mov
push
xchg
fcoml
subl
push
adc
imul
cwtl
lret
add
dec
push
mov
call
mov
negb
out
and
bound
insl
addr16
out
xor
mov
xor
xor
adc
jbe
clc
ljmp
dec
sbb
ds
mov
ss
incl
pusha
stos
cmpb
adc
jno
sub
rorl
mov
lock
fwait
andb
push
test
loop
adc
inc
lret
mov
rorb
xchg
add
inc
pop
cmp
idivb
and
adc
mov
sbb
pusha
jno
cmp
or
je
rorl
push
mov
mov
mov
xor
mov
aaa
mov
xchg
fdivr
pop
aaa
aad
pop
test
xor
and
popf
shr
mov
into
push
je
mov
or
mov
mov
mov
aam
adc
movsl
clc
mov
add
push
int3
and
test
sub
or
in
lods
mov
stos
decl
cs
sub
push
or
add
adcb
loopne
mov
push
cmpsl
push
inc
cmpsb
jbe
scas
inc
xor
outsl
icebp
pop
pusha
push
jge
test
lret
xor
cmc
mov
mov
push
add
ret
aaa
mov
enter
sub
adc
pop
or
mov
mov
fs
lea
jge
and
push
in
test
sub
out
mov
das
jg
scas
push
subb
out
testl
mov
shll
pop
mov
jo
push
ret
ljmp
test
inc
dec
sbb
loop
mov
or
adc
sub
mov
loop
mov
xor
jp
mov
lcall
sbb
push
dec
sub
xor
add
loopne
push
inc
add
mov
divb
nop
pop
push
add
dec
cmp
pop
inc
and
inc
mov
sbb
jg
js
inc
pop
mov
arpl
in
sub
in
mov
sub
test
in
xlat
mov
add
cs
arpl
mov
movsl
mov
adc
bswap
xchg
add
js
test
mov
xor
addr16
loopne
adc
adc
outsb
lea
adc
addb
mov
dec
mov
mov
ficoms
mov
jo
adc
or
std
sahf
imul
or
and
jnp
add
lret
and
in
adc
xor
sbb
jo
mov
xor
mov
lret
pushf
mov
stos
lods
pop
xchg
mov
adc
jne
and
jg
mov
loopne
adc
or
mov
add
bound
xor
xor
cmc
mov
lds
cwtl
rcl
push
add
aam
test
sub
rorl
add
cmc
sub
mov
add
cwtl
enter
dec
out
dec
mov
rclb
out
nop
imul
je
fs
fwait
sbb
cmpsb
add
push
outsb
xor
outsb
and
inc
mov
xchg
or
or
das
daa
in
and
repnz
sub
sbb
push
shr
dec
or
inc
out
pop
into
clc
cld
add
adc
lds
testb
xlat
ret
or
add
add
loope
into
out
cltd
int3
mov
fcmovu
stos
andl
ljmp
mov
or
mov
test
dec
add
or
loop
adcb
pop
jge
pusha
sbb
aam
xor
mov
scas
push
or
add
imul
sub
scas
stc
jne
orl
jmp
test
and
xchg
mov
bound
xor
mov
divb
add
dec
pop
jo
sub
sub
jno
call
and
js
push
dec
es
jbe
sub
rcrb
fisubs
insl
fwait
pop
adcb
call
sbb
aas
filds
push
dec
inc
mov
and
hlt
cld
pop
cwtl
push
repnz
aam
sbb
mov
imul
add
push
sub
test
icebp
dec
mov
push
jecxz
in
jnp
adc
dec
add
enter
dec
cmp
lods
insl
insl
aam
das
pop
and
int
dec
testl
or
jg
jg
fnsave
add
orb
xchg
addr16
add
std
pop
fcmovu
pushf
enter
mov
outsl
pop
add
test
cltd
adc
pop
loop
or
ret
mov
ljmp
push
ret
shrl
fists
adc
add
add
dec
add
cs
and
pusha
lahf
dec
insl
imul
mov
or
sti
pop
add
cmp
sub
push
mov
and
adc
fidivrl
mov
and
xchg
orb
lods
sbb
scas
hlt
jp
sbb
sbb
xchg
adc
cwtl
imul
out
push
lods
rorb
jnp
dec
xor
add
ja
dec
int3
in
mov
loope
xor
sbb
insb
adc
insb
fildl
fistl
mov
movsl
jno
mov
mulb
cld
enter
sub
cmc
push
loopne
testb
cmp
inc
or
fistpl
mov
shl
loop
icebp
pop
pop
clc
or
mov
xchg
push
mov
ljmp
push
and
mov
pop
daa
jb
gs
pop
pop
sbb
and
lea
pop
and
jns
pushl
mov
xchg
mov
push
fnstenv
inc
out
hlt
fmul
inc
shrb
pop
push
xor
and
call
mov
push
call
imul
xchg
push
adc
xchg
out
add
in
cmpsb
adc
addb
adc
cmp
add
dec
mov
add
mov
jge
lods
inc
daa
inc
outsb
sub
aaa
xor
inc
test
mov
lret
or
mov
test
je
xchg
loopne
inc
xor
add
addl
dec
movsl
push
mov
in
imull
mov
push
xor
ret
pop
sbb
shll
clc
adc
push
adc
push
push
xor
and
or
jl
pop
in
inc
movsb
mov
inc
add
and
loop
fcoml
jmp
xorl
pop
jmp
aas
sub
shll
hlt
xor
lods
adc
jb
adc
add
into
jp
jmp
das
sub
cltd
jmp
push
add
ja
loopne
jbe
sub
lahf
or
mov
cltd
jle
test
and
dec
movsl
mov
xchg
pop
adc
or
aad
insl
push
cltd
mov
ficomps
sub
push
adc
mov
call
sbb
push
adc
and
lods
stos
addr16
add
pop
inc
in
or
sbb
push
ret
call
lods
es
sbb
imul
into
lods
jns
aam
cmpb
test
xor
add
or
xchg
ja
sti
adc
mov
push
imul
aas
add
pusha
test
sub
adcl
mov
mov
jle
xchg
scas
stos
mov
jle
inc
mov
into
mov
inc
dec
jb
shr
sub
jb
rcrl
lods
cli
sbb
fdivrs
decl
inc
outsl
add
fcompl
or
std
xchg
test
roll
inc
inc
mov
push
jmp
jbe
and
adc
jns
jle
outsb
cmp
sbb
sbb
cld
das
aam
stc
push
adc
int
add
js
lods
add
and
pushf
imul
lock
dec
in
inc
cmp
stos
fbld
pusha
test
add
mov
push
cmp
mov
push
movsb
add
xchg
add
ret
or
jg
adc
adc
enter
outsl
hlt
mov
sbb
hlt
fcmovnb
movsl
js
sbbb
mov
adc
outsl
std
push
pop
dec
dec
xchg
dec
add
es
imul
mov
fwait
lock
int3
data16
and
adcb
sbb
sub
xor
lods
aad
add
lods
divb
stos
mov
fistpl
and
loop
rol
das
gs
insl
xor
mov
mov
or
cmp
add
mov
cmp
adc
push
jnp
xchg
pusha
and
pop
cmpl
je
jle
add
cmp
mov
and
jo
fidivrl
sub
cmp
dec
mov
test
mov
add
dec
pop
inc
or
push
or
clc
lcall
sub
mov
cmp
ljmp
mov
lods
and
cmpsb
or
sbb
pop
dec
adc
pop
fcoml
sbb
and
mov
dec
and
call
scas
fidivs
xchg
notb
test
lock
xchg
les
cmp
sbb
shll
pop
add
rorl
pop
aad
lea
xor
jb
mov
outsl
push
test
jp
sar
stos
out
flds
in
sub
leave
and
mov
dec
add
jle
jmp
jne
pusha
mov
and
mov
jle
lods
bound
in
maskmovq
dec
stos
fisttpll
data16
xchg
xchg
lahf
rolb
pop
and
or
fwait
and
icebp
add
pop
dec
add
and
pusha
lds
and
push
aam
inc
imul
dec
sub
pop
cmp
jmp
cltd
rcr
imul
in
scas
out
sbb
and
mov
xor
sub
sbb
pop
je
add
lea
rcrl
add
or
add
jb
cmpsb
mov
les
push
roll
or
and
or
loop
aas
mov
out
clc
rcrl
push
or
xor
mov
cmp
les
enter
push
push
pop
fisubl
inc
xor
sub
adc
test
mov
repz
outsl
push
add
adc
push
decl
test
push
push
stos
pop
jle
call
mov
dec
and
stc
adc
inc
add
and
add
or
push
or
cmpsb
sbb
push
inc
shr
inc
push
popa
adc
test
js
jne
mov
mov
fsub
pop
jno
mov
fildl
lret
lret
loope
xchg
adc
fwait
gs
addb
fnstenv
stos
xchg
pop
ljmp
inc
popf
lds
push
scas
add
xor
add
ficoml
mov
lods
cmp
mov
aad
shr
lahf
stos
jo
sbb
cmp
adc
or
cltd
lret
jbe
push
roll
add
mov
dec
dec
add
mov
jp
icebp
mov
movsb
aad
adc
jnp
imul
lock
push
mov
aam
sarb
push
std
inc
lock
push
fdivrl
cs
test
popa
mov
cmpsb
add
mov
adc
cltd
inc
dec
or
mov
decl
es
mov
mov
jbe
outsl
inc
jg
orb
pusha
pushl
mov
stos
shrl
pop
fnstcw
sub
mov
and
roll
mov
or
add
fbstp
jno
inc
ss
ljmp
test
in
mov
push
and
add
ljmp
cvtps2pd
shr
inc
cmc
ja
popf
and
push
pop
xor
and
ljmp
mov
mov
adc
sbb
mov
mov
sub
ljmp
pop
loopne
in
jge
test
mov
aas
rorb
and
test
xchg
test
mov
cmp
push
decl
insb
sbb
fldcw
icebp
das
cmc
adc
add
adc
fmulp
or
ret
add
xorb
cmp
mov
pop
adc
cmp
daa
push
mov
jle
push
inc
fcom
sbb
outsl
scas
rcll
adcb
je
outsl
lahf
xor
dec
pop
inc
test
push
sbb
push
std
pusha
jbe
shlb
sbb
rorb
stc
cmp
lds
mov
outsb
pushw
jge
add
mov
fistpll
outsb
mov
add
lahf
shll
adc
mov
sbb
in
mov
fwait
jge
adc
shrl
dec
test
pop
jae,pt
fisttpll
jns
jl
pushl
add
std
inc
pop
lock
movsl
mov
mov
out
test
fisubl
adc
scas
mov
cmp
in
mov
stos
sub
int
shll
inc
mov
ja
xor
loopne
insb
cmpsb
ljmp
xor
mov
push
jo
sbb
add
pushf
test
mov
loope
sbb
cmp
mov
les
imul
mov
dec
lds
fiaddl
int
sahf
fmuls
daa
aaa
xchg
fmull
jge
sbb
std
inc
repz
outsl
outsl
mov
mov
mov
arpl
inc
and
stos
push
push
insl
in
pop
sbb
cld
cli
pushl
adc
pop
mov
imul
mov
mov
or
imul
mov
xor
imul
mov
ds
repnz
cmp
insb
mov
mov
aas
icebp
fists
aad
loopne
adcl
test
xchg
or
jle
push
loope
pop
add
cmp
add
insb
test
pop
mov
pop
inc
mov
lock
lods
fwait
and
lods
into
dec
out
fs
sbb
cmpsb
cmc
std
clc
dec
es
jns
cmp
shrb
pop
aas
aam
stos
clc
shlb
add
sub
adc
iret
mov
cwtl
in
add
mov
sub
xchg
mov
hlt
adc
xor
loop
cli
outsl
test
repz
pusha
or
movsl
sbb
fildl
aaa
orb
dec
es
es
fidivs
or
or
sub
das
int3
mov
shll
cld
test
xchg
mov
movsb
scas
popf
rcrl
or
xchg
scas
or
aas
nop
add
popf
inc
fs
popf
xchg
mov
adc
stos
fadds
sub
mov
loope
mov
test
sub
or
ljmp
and
adc
inc
cld
jmp
mov
fcom
ret
les
insb
stc
mov
xor
inc
outsl
pop
inc
xchg
dec
or
ja
je
call
stc
lret
sub
xor
xchg
mov
loope
insl
cmc
bound
dec
jne
sub
pop
cmp
pop
push
call
cld
pop
loop
fcoms
adc
adc
out
add
outsl
dec
inc
pop
jge
sbb
cs
push
outsb
stos
das
jecxz
pop
cmp
out
insl
jnp
ffreep
push
or
pop
and
les
mov
inc
jo
mov
push
cmp
test
mov
call
sbbb
dec
jno
mov
pop
ja
imul
ret
insl
cltd
xor
adc
mov
mov
jmp
xor
mov
cmpsb
test
jnp
aad
jb
popa
mov
mov
add
mov
adc
lahf
xchg
test
rcll
jmp
mov
jg
clc
or
enter
repnz
ds
adc
cltd
sub
lahf
out
mov
dec
cli
les
or
lret
and
push
andb
repz
lods
les
sbb
sbb
pop
xorl
les
lret
lds
notl
cmpl
fwait
pop
push
shl
fistpll
test
fldt
aaa
jp
roll
les
push
and
add
movsb
mov
push
xor
pop
inc
and
xchg
jge
inc
test
pusha
or
sarb
aas
jp
addb
push
inc
js
or
push
jnp
xchg
add
cmp
mov
sub
idiv
mov
orl
adc
mov
mov
jns
cmp
dec
repz
les
add
mov
mov
and
pusha
mov
les
orb
mov
inc
inc
jne
mov
mov
cld
xor
es
jnp
inc
outsb
sahf
loop
in
push
clc
xorl
pop
xor
xor
sbbl
je
jbe
push
pop
mov
add
scas
insb
clc
push
jno
icebp
add
dec
add
fcom
pop
int
or
pop
jns
and
pop
mov
sbb
sbb
pop
add
std
dec
stos
xor
push
ja
mov
xor
call
add
adc
cli
inc
jg
mov
pop
pop
inc
out
dec
inc
or
sub
inc
or
and
adc
sbb
dec
mov
arpl
inc
rclb
inc
mov
dec
pop
adc
sub
mov
in
or
adc
into
cmp
jne
pop
dec
or
inc
dec
fiadds
xor
inc
test
addb
mov
add
rorl
sub
test
inc
testb
std
lea
bound
ja
ss
add
and
xchg
in
lock
lods
iret
and
scas
mov
arpl
pop
and
mov
cmp
inc
popa
mov
sub
adc
pop
roll
and
mov
loope
roll
cmp
test
inc
test
outsl
mov
and
push
or
and
jle
push
jl
sub
and
fs
pop
cmc
mulb
add
fdivr
cs
aas
aam
shl
cltd
mov
outsb
bound
mov
add
loopne
ss
daa
pop
add
push
lcall
ficompl
pop
aas
and
dec
cwtl
inc
dec
jno
mov
and
fisubrl
xchg
mov
shll
test
in
adc
jmp
cmp
sub
pop
mov
sarl
mov
or
push
int3
push
mov
lods
sub
push
jo
and
outsb
das
cld
push
cwtl
xchg
out
or
jnp
nop
pop
lahf
sub
add
add
orl
or
ror
add
or
inc
inc
test
cs
xchg
xchg
sub
lods
adc
jecxz
xchg
xor
push
jns
push
scas
adc
icebp
add
add
ficompl
jmp
cs
jmp
and
outsl
in
inc
aad
push
dec
repz
xchg
ss
inc
lcall
scas
add
push
cmpsl
lods
clc
mov
jmp
aad
outsb
out
fildl
pop
jnp
mov
xchg
dec
push
cmp
sub
sbb
sahf
js
insb
or
out
or
add
sti
push
std
mov
outsl
jo
xchg
repnz
enter
jecxz
push
adc
cmp
push
mov
je
pop
add
add
out
or
insl
scas
les
cltd
insb
sub
adc
xchg
adc
push
cmpsl
sbb
cs
imul
inc
aad
jnp
lods
mov
popl
out
xor
mov
and
jge
loop
rclb
psraw
push
sbb
adc
mov
jne
pusha
adcl
mov
test
and
lds
inc
loope
mov
mov
xchg
cmc
sbb
sti
mov
jge
outsl
mov
pop
and
pushf
pop
lods
jno
xchg
add
jg
jns
insl
test
inc
or
repz
mov
or
push
jb
icebp
lock
push
lods
inc
mov
push
sti
sbb
movsb
inc
pop
or
cli
in
fisttpll
and
insb
pop
ljmp
push
dec
push
pop
test
dec
in
loopne
lock
xchg
mov
push
fldcw
jne
adc
pop
jb
or
mov
mov
cmp
dec
push
jnp
xchg
add
inc
ja
mov
mov
scas
mov
pop
and
xchg
shll
and
loope
es
lock
test
push
dec
std
pop
push
and
pop
cwtl
mov
shll
inc
icebp
stos
in
fisubrl
int3
and
sbb
lods
cmp
ljmp
inc
pop
loopne
jae
ss
ds
pusha
push
daa
js
cmpb
mov
dec
adc
adc
rorb
adc
test
daa
sbb
and
pop
sub
mov
xlat
std
aaa
incl
daa
mov
sti
cmp
xchg
dec
cmp
enter
daa
das
xchg
add
mov
fadds
add
ljmp
mov
mov
pop
adc
mov
sbb
add
jl
ret
mov
dec
xchg
mov
sbb
inc
inc
xor
fs
mov
das
inc
cmpsb
push
adc
adc
cmova
push
inc
sbb
sub
cmp
test
aam
imul
push
lods
addb
adc
hlt
stos
sbb
loop
pop
inc
pop
sarb
mov
adc
cld
test
rcrl
mov
clc
scas
pusha
add
shr
jne
ret
es
mulb
adc
lods
mov
and
add
pushf
in
add
jb
icebp
into
add
and
lcall
loop
jp
pop
mov
mov
adc
fiadds
xor
fldl
adc
sub
xchg
add
int3
mov
enter
jo
ret
adc
lea
and
in
fisubrs
aad
adc
loopne
stos
adcb
movsb
mov
data16
xchg
subb
mov
inc
mov
pop
js
jne
push
adc
mov
psubsw
xchg
js
pop
lock
sbb
mov
call
adc
sbb
enter
jle
jnp
mov
sbb
and
pop
and
xchg
dec
repz
adc
push
cmpsb
xor
bound
pop
int3
cld
pop
shrl
out
dec
and
js
adc
push
push
push
faddl
out
push
cltd
jmp
inc
push
jo
loopne
push
adc
pop
js
icebp
pop
ror
and
add
jge
dec
push
js
orl
loope
xchg
jp
cld
lods
aaa
pushl
pop
cltd
mov
push
jae
adc
xchg
out
or
sub
adc
iret
movsb
scas
icebp
rol
sub
jnp
and
or
push
popf
cmpsb
or
mov
mov
out
add
bound
xor
or
mov
popf
dec
jle
inc
not
mov
test
popf
ds
mov
mov
les
dec
pop
out
pop
xchg
and
lods
movntq
shll
fmuls
es
in
ss
sub
addr16
shlb
xor
push
lods
add
pop
filds
mov
inc
pop
sar
add
or
add
add
mov
xchg
mov
push
pusha
adc
xchg
loop
out
sbb
add
sbb
loopne
clc
xchg
pop
shlb
and
cld
sbb
inc
sar
and
mov
or
ret
scas
jb
mov
shll
test
pop
hlt
fistl
outsb
xchg
push
lcall
pusha
mov
in
xor
in
pop
out
add
loopne
mov
into
inc
inc
stos
hlt
les
sbb
mov
add
sub
or
sahf
jae
imul
aad
outsb
outsl
fsubs
push
andb
sub
arpl
fstp
inc
imul
push
xor
adc
push
js
outsb
cmpl
push
clc
jg
ja
and
loopne
jne
or
in
adc
add
push
shrb
push
inc
xor
cld
or
stc
ds
push
sbb
sbb
mov
and
loop
pop
mov
jo
mov
sbb
sar
test
fadds
mov
nop
rorb
sbb
or
mov
into
dec
daa
stos
lock
adc
cmc
sbb
pop
xor
lret
xorl
and
jbe
fdivr
clc
jne
adc
push
in
push
and
js
push
ret
leave
sbb
lret
popf
imul
inc
mov
dec
test
pop
call
iret
inc
jmp
lahf
cmp
lock
das
hlt
pop
incb
pop
xlat
nop
lock
loopne
adc
xchg
adc
jle
icebp
cltd
fs
jl
stos
stos
roll
inc
outsl
mov
jge
cmp
add
jbe
ljmp
cmp
outsb
and
adc
add
mov
mov
mov
lret
inc
pushf
and
popa
push
les
loopne
je
dec
adc
notl
cld
jge
and
or
mov
inc
mov
pop
test
add
clc
nop
icebp
outsl
cmp
loope
jb
fbld
jg
lock
mov
gs
ret
popf
adc
in
arpl
in
cli
or
adc
xchg
outsl
test
cmp
bnd
lcall
sub
push
push
ljmp
add
iret
sub
sbb
and
mov
clc
or
dec
add
xor
movsl
xchg
mov
sbb
and
pop
xchg
movsl
adc
in
mov
ljmp
fwait
xlat
insb
outsl
mov
pusha
sbb
or
and
decl
cs
jne
imul
sbb
hlt
mov
mov
nop
repz
sbb
fistps
mov
mov
pop
fisttpll
repz
ret
dec
scas
mov
sarl
pushl
test
mov
xchg
aam
je
and
xchg
or
dec
outsl
mov
lds
pcmpeqb
lods
pop
imull
lods
sub
push
or
and
dec
xchg
fildl
mov
ret
lock
std
daa
outsl
xor
pushf
add
sub
clc
fwait
xchg
cltd
mov
je
or
pop
or
icebp
test
and
cmp
movsl
sbb
add
test
test
mov
test
das
cmc
call
nop
xchg
xchg
mov
movq
jge
scas
push
clc
mov
stc
movsl
and
add
or
scas
bswap
jecxz
movsb
pop
sti
in
fbld
insb
mov
mov
cmc
fcoms
stos
imul
les
mov
jg
jae
push
jecxz
js
adc
jle
sbb
lds
test
lcall
push
jle
mov
add
aad
mov
cmp
and
add
lahf
lret
cwtl
lods
sub
ror
test
or
lcall
dec
mov
pop
cld
decl
imul
cmp
dec
int3
inc
adc
ret
fcomps
or
push
jle
push
lods
hlt
inc
jne
xchg
jl
mov
popa
pop
call
fiaddl
jb
cltd
cmp
xor
push
mov
popa
lock
jo
jg
push
insb
and
sub
fisubrs
adc
dec
inc
nop
push
mov
inc
or
inc
jle
test
imul
cmp
or
pusha
mov
xchg
popf
lock
push
ret
fwait
sub
and
aad
testl
pop
pop
lahf
adc
sbb
inc
jecxz
sbb
es
std
xchg
lret
test
shl
cld
or
filds
xchg
in
adc
add
push
lods
int
mov
adc
aam
outsb
xchg
imul
stc
xor
adc
addl
or
xor
mov
int
jne
imul
xchg
or
add
cld
or
fnstsw
sbb
outsl
adc
aad
and
ljmp
mov
lea
stc
out
push
cwtl
in
imul
pop
std
shll
frstor
into
cli
sbb
fistpll
sbb
and
jno
adc
fnstenv
bound
stos
jmp
testb
xchg
mov
cmp
rclb
and
add
or
push
fldl2e
fisttpl
jbe
daa
dec
addr16
xor
gs
faddp
adc
mov
hlt
js
adc
jo
test
sti
jg
fdivrs
push
lahf
lret
push
jno
loop
cmp
shrb
adc
jp
enter
cmpsb
inc
jno
cld
fildll
mov
jecxz
jle
adc
rclb
or
outsl
cld
in
into
popa
in
inc
es
push
xchg
stc
mov
push
xor
cmp
std
pop
shrl
std
je
pop
orl
jb
mov
das
xor
or
loopne
clc
fistpll
adc
test
in
sti
mov
add
xchg
mov
xorl
nop
dec
ret
cld
mov
int
addr16
pop
sti
int3
xor
push
lods
or
jle
ds
jno
xor
ftst
sbb
call
int
out
and
fisubs
fidivrs
fmull
add
mov
pop
xorb
jb
mov
loop
adc
jle
lock
cs
add
insl
arpl
or
scas
xchg
test
stos
bound
je
decl
adc
sarb
adcb
test
hlt
call
pop
or
lcall
xchg
lret
sbb
push
ror
in
movsl
jg
and
jbe
loope
clc
enter
dec
jmp
mov
pop
and
mov
jl
push
push
mov
push
xchg
sbb
call
adc
xlat
in
out
or
out
aam
subl
xlat
enter
test
sbbb
push
mov
fstl
push
pop
jge
idivl
cmp
adc
mov
and
inc
into
push
test
mov
sti
mov
jp
sub
dec
cltd
cmpsb
dec
cmc
pop
xlat
inc
stos
mov
push
lret
push
loopne
or
fidivl
adc
fdiv
add
and
mov
sub
mov
add
mov
pop
xchg
pop
pop
ja
aaa
add
push
pushl
jg
std
inc
push
insl
frstor
or
fdivs
test
rorl
scas
and
icebp
in
cli
nop
cmp
pop
mov
outsl
jle
push
sahf
xchg
loopne
cmp
movsl
push
xchg
int3
add
mov
ja
sbb
shll
call
xor
inc
push
sub
loopne
sub
or
xor
cmp
icebp
xchg
pop
sahf
sub
cs
mov
cld
xlat
test
xchg
push
hlt
xchg
call
add
jmpw
push
sub
and
inc
sbb
outsb
sbb
xchg
jnp
mov
daa
mov
jle
loopne
lods
cmp
push
xor
inc
xchg
adc
pop
fadds
subb
arpl
inc
fstl
dec
out
outsb
out
jl
sarb
sub
sbb
popa
outsl
mov
jne
add
sbb
mov
xchg
add
std
lcall
imul
fwait
daa
and
cld
aam
data16
mov
lds
es
je
loope
rcll
sub
popa
or
out
std
leave
mov
or
adc
fsubs
jne
enter
dec
adc
adc
leave
pusha
mov
xchg
mov
loopne
jl
insl
mov
xor
cmp
mov
sbb
pop
adc
lahf
or
in
clc
js
out
jo
push
xchg
dec
mov
or
aam
ja
pusha
call
mov
add
push
mov
add
bound
mov
rolb
scas
fwait
test
push
aam
jne
push
addb
mov
push
dec
into
add
iret
int
push
push
sub
ret
in
dec
hlt
and
cmc
ss
mov
sbb
aam
mov
pmullw
sub
jns
and
lock
pop
adc
movsl
sbb
rcrl
and
add
add
or
jp
movsl
pusha
fcmovbe
pop
aaa
sub
push
and
xchg
sbb
pop
jmp
jmp
js
pop
shlb
xchg
adc
jbe
push
scas
mov
sub
aad
mov
mov
xchg
dec
mov
mov
shrb
ret
dec
jno
icebp
call
sub
inc
xchg
xor
cmc
shlb
inc
pop
std
jle
cs
out
add
push
pop
aad
jb
movsb
mov
leave
or
aad
cmpsl
push
data16
jbe
sub
cmp
clc
pop
pusha
iret
fsts
jbe
push
mov
mov
jbe
lret
push
xchg
dec
scas
cltd
mov
outsb
lods
stos
and
push
mov
push
sub
sti
lea
loopne
mov
clc
jns
add
or
outsb
and
ret
nop
outsb
or
mov
bound
mov
sub
test
mov
lods
cmpb
sbb
out
sbb
adc
flds
mov
fadds
jno
int3
mov
sti
mov
or
add
sbb
sub
add
popl
iret
aad
into
mov
rol
jecxz
and
aaa
mov
jecxz
push
or
lcall
subb
sub
scas
dec
loope
arpl
sub
adc
loopne
push
fcmovbe
push
insb
int3
lds
xchg
mov
loop
leave
cmp
add
enter
fcmovnb
xchg
xor
fisttpl
leave
pop
mov
xchg
lahf
adc
jle
inc
jl
mov
jo
adc
lock
or
sahf
out
push
pop
mov
mov
add
inc
inc
call
outsb
dec
inc
insl
imul
xchg
mov
hlt
adc
pop
or
jo
mov
mov
outsb
je
shrb
lahf
pop
mull
dec
das
jge
lock
adcb
add
cmp
sti
add
dec
stc
mov
push
mov
ljmp
pop
push
lods
or
lcall
sub
movsl
add
xor
flds
cli
cmp
jns
loop
subl
adc
dec
mov
or
pop
ljmp
push
nop
ds
addr16
hlt
mov
inc
or
or
lods
mov
push
test
ret
rcrl
pop
fcompl
ds
sub
test
lahf
gs
pop
sub
pop
dec
mov
sahf
dec
imul
arpl
pop
and
mov
push
mov
fimuls
push
mov
adc
sub
pop
jbe
mov
fdivl
and
mov
es
xchg
hlt
out
jg
mull
xchg
pop
out
fcom
cmp
push
push
les
push
movsl
jo
or
or
cli
test
scas
pop
add
lods
adc
stos
sbb
negb
je
nop
orb
call
fucom
lcall
mov
popf
dec
popf
sub
mov
adc
call
inc
out
dec
sub
mov
mov
int
add
lea
clc
aad
xchg
sub
mov
lock
ret
ljmp
ss
mov
push
fisttpll
fimuls
xchg
add
imul
xchg
lea
rcrl
adc
xor
sbb
dec
fisttpll
mov
push
cwtl
int
movsl
aam
jmp
popa
and
addr16
mov
xchg
jp
rorb
es
mov
mov
fmuls
outsb
mov
pop
daa
and
and
loop
jbe
xchg
sub
rcl
add
and
cmpsb
loope
add
mov
outsl
and
mov
mov
push
mov
sbb
and
adc
inc
mov
pop
mov
ret
stos
adc
adc
daa
stos
jle
out
arpl
imul
cltd
sbb
and
jmp
add
loop
inc
xchg
pop
sub
pop
popa
inc
insl
repz
repnz
int
lea
mov
call
dec
adc
or
jbe
jnp
push
mov
pop
mov
int
or
mov
and
jne
or
bound
insl
bound
fsubrl
testb
dec
outsb
mov
loopne
leave
or
int
cmp
loopne
mov
test
jecxz
int
push
cmpsl
mov
mov
les
sbb
hlt
test
jl
fbstp
xor
sbb
imul
repnz
clc
stos
inc
out
imul
sbb
mov
xor
or
adc
idivb
push
jo
push
push
add
fldl
shrd
sbb
inc
mov
aam
sbb
cli
mov
xchg
movsb
add
push
popa
inc
xchg
mov
clc
inc
adc
popa
adc
ret
fwait
dec
fldcw
add
insl
stc
push
pop
fmuls
xchg
push
pusha
ds
jge
ljmp
stos
jae
and
xchg
jle
rorb
xor
in
or
xor
sbb
dec
jmp
test
sub
and
dec
push
ja
pop
cli
inc
cld
and
lcall
outsl
cld
fldl
lret
cmp
cmpsb
push
imul
cmp
inc
push
push
pop
loopne
mov
loopne
sarl
and
xor
adc
push
hlt
fldt
add
push
sbb
adc
mov
movsl
out
xchg
pop
cli
add
sub
fs
or
in
push
decl
inc
mov
dec
pop
xchg
adc
push
sbb
adc
test
addr16
add
add
dec
mov
add
cmpsl
sti
or
loopne
in
push
xchg
mov
test
cmp
scas
jo
xor
add
jl
jmp
mov
adc
cmp
outsl
jge
adc
push
xchg
fsubl
mov
movsl
add
les
xchg
daa
push
rcll
fistpl
js
movsl
pop
jp
ljmp
rolb
xchg
in
gs
and
dec
mov
psrad
mov
sub
rol
sbb
mov
inc
pushf
clc
insb
push
fwait
mov
in
fistpll
or
xorl
je
xor
pop
jae
or
outsl
sub
xchg
sub
adc
imul
jmp
dec
push
loope
mov
or
sub
pop
dec
inc
loop
adc
lea
and
js
mov
mov
arpl
or
ret
aas
arpl
xchg
insw
mov
imul
loopne
scas
bound
mov
pop
cmp
and
and
movsl
pop
mov
cmp
mov
adc
or
rcll
dec
mov
lcall
frstor
cmp
adc
ret
pop
rorl
push
fs
ljmp
inc
and
pop
inc
in
not
dec
neg
inc
or
sbbb
or
cmp
inc
adc
call
mov
pop
aam
and
loop
inc
or
call
out
pop
or
clc
je
mov
andb
ljmp
adc
popa
jne
push
cmp
and
lods
and
cmp
add
mov
mov
dec
jb
mov
enter
and
stos
add
lahf
cwtl
add
popa
cltd
insb
sub
dec
aam
repz
mov
push
adc
repnz
hlt
into
mov
iret
mov
std
fdivs
je
xchg
fcompl
jp
xor
push
xor
dec
xchg
mov
mov
cld
cmp
cmc
add
bound
sahf
add
cmp
jl
sbb
cmc
fimull
mov
les
imul
adc
sti
xor
mov
into
pop
or
nop
test
out
sbbb
enter
lods
cmc
lea
push
daa
clc
adc
sbb
nop
fwait
adc
mov
verr
ja
dec
inc
ret
in
push
or
loop
outsb
js
bound
mov
adc
sbb
mov
ds
mov
jge
or
inc
lahf
sbbb
add
cmp
mov
sahf
call
fistpl
mov
jb
mov
sbb
mov
mov
fldcw
std
cmp
pop
adc
cmc
sub
popa
jnp
pop
add
loope
loop
mov
xchg
mov
mov
aas
shlb
out
mov
pushl
ja
cmp
aam
fldl
pop
fadds
arpl
dec
rorl
inc
dec
mov
dec
pop
xor
cmpl
aaa
clc
cs
stos
ficompl
pop
loopne
or
cld
sub
sub
ficoml
jae
sbb
pop
ja
inc
jp
dec
je
icebp
mov
in
adcb
inc
push
movsb
sti
dec
xchg
dec
icebp
sbb
sub
inc
sbb
pop
push
les
mov
inc
hlt
shl
add
push
dec
xor
fstpt
aad
sub
testb
sbb
stos
mov
jbe
push
pop
clc
push
xorb
mov
xchg
stc
or
int3
dec
lods
lret
test
adc
or
dec
jge
rcrb
xor
sbb
jae
add
cmpsl
pushf
cs
or
outsl
dec
xchg
jp
add
mov
pop
mov
cmp
cld
fdivs
add
loopne
jae
enter
imul
cmpsl
fwait
je
jo
mov
lods
mov
cmp
jge
filds
faddl
sbb
inc
jmp
lahf
icebp
rorb
xchg
fwait
in
divl
call
sbb
xor
xchg
movl
pop
cmp
and
mov
sub
lahf
or
cmp
ret
or
add
movsl
adc
out
test
testb
inc
enter
cltd
sbb
inc
xchg
cmpl
push
lds
jecxz
mov
mov
add
mov
sub
mov
push
and
sbb
adc
movsb
in
adc
mov
in
cmp
pop
aas
out
out
mov
je
sbb
push
inc
popf
add
adc
mov
sti
xor
push
inc
in
sbb
imul
xchg
cmc
addb
in
jno
sbb
inc
popf
sub
pop
push
insl
ljmp
jge
pop
sbb
xor
in
in
inc
sbb
popl
cmp
sub
stos
hlt
xchg
dec
lods
add
jmp
pop
loopne
cmpb
call
add
inc
mov
mov
fwait
mov
les
out
ret
inc
inc
pop
xorl
fsubr
inc
ds
adc
dec
sub
sub
pop
and
aad
fnstsw
test
outsb
unpckhps
cmp
lds
inc
fdivrl
inc
or
bound
js
popa
pop
mov
sbb
dec
xchg
in
aad
enter
incl
pop
cld
cwtl
add
push
add
jecxz
adcl
mov
push
push
xchg
mov
push
jecxz
inc
loope
inc
pop
in
mov
pop
adc
lahf
jmp
test
adcl
cli
mov
mov
cltd
mov
push
out
adc
movnti
pop
mov
insb
hlt
sub
mov
test
adc
or
xchg
mov
xchg
inc
cmpsb
dec
push
in
popf
or
sti
jge
and
pop
xor
test
loope
xchg
mov
add
jg,pt
fwait
adc
mov
jmp
pop
gs
lock
pop
data16
cmp
jl
shrb
hlt
pop
cwtl
jo
repnz
inc
and
dec
inc
sub
mov
sub
jo
mov
xchg
sarl
fcmovnb
ret
repnz
mov
xchg
test
jp
sbb
pop
clc
call
movsl
sar
loope
das
adc
cld
ds
jo
lret
push
mov
jae
fwait
jo
xor
into
mov
xor
jg
mov
xchg
stos
cltd
sti
inc
aad
pop
rorb
loop
sti
aaa
cli
inc
push
xchg
adc
cmpl
mov
fsubp
pop
add
es
push
fsubrl
mov
outsb
ljmp
pusha
push
std
jmp
bound
pusha
add
icebp
pop
loopne
jmp
fwait
xor
or
aad
lods
jae
std
dec
std
call
push
xor
sub
enter
jno
or
add
gs
xchg
nop
leave
je
inc
xchg
adcl
rcrb
sar
ljmp
ljmp
add
mov
adc
call
int3
in
sub
sub
jp
xchg
mov
jmp
out
cld
sbb
xor
test
aad
fucomip
jmp
mov
adc
mov
adc
call
mov
mov
mov
add
loopne
dec
movsl
mov
or
stos
inc
xor
mov
xchg
jp
jg
mov
or
and
push
bound
mov
out
mov
inc
mov
mov
mov
stos
pop
sub
push
call
pop
jp
scas
sub
ss
xchg
call
rcrb
stos
rclb
add
mov
add
fucomi
mov
lds
mov
jnp
dec
movsb
and
fdivrp
in
mov
aaa
sbb
adc
push
add
and
out
mov
push
ja
mov
pusha
sub
xlat
jle
rorb
jmp
mov
inc
inc
cld
or
sbb
and
pop
xchg
outsl
orl
jle
mov
pop
shll
rcll
icebp
test
jl
jmp
mov
adc
push
daa
xchg
xchg
loope
cmp
push
hlt
call
in
scas
xor
mov
mov
out
sub
sbb
shlb
jp
aam
in
or
inc
fldt
add
gs
jo
cmpl
aaa
das
fwait
movsl
xchg
icebp
push
add
cmc
push
jl
mov
mov
xchg
mov
ss
inc
push
lret
int3
bound
cmpl
pushf
call
jg
stc
mov
insb
or
sbb
push
pop
das
fadds
fldt
dec
xor
cmp
sbb
movsl
sub
cmp
mov
fildll
xor
fs
test
dec
pop
inc
hlt
push
repnz
aam
xor
hlt
out
test
cmp
scas
mov
pop
push
or
insb
pop
pusha
shll
stos
or
mov
sub
xor
push
and
ffreep
and
xorb
in
mov
lahf
xor
and
and
movsl
inc
xchg
mov
jl
push
bound
fadd
push
inc
std
fcmovne
mov
sbb
pop
adc
aaa
jg
dec
gs
inc
dec
enter
push
addb
add
jg
mov
nop
into
inc
data16
sub
xor
inc
in
push
ljmp
pop
inc
fisubrl
or
jecxz
aaa
fmuls
ja
fnstenv
mov
xor
add
rorb
in
movb
mov
fmull
mov
and
inc
ret
push
adc
cmp
lock
lea
gs
or
mov
filds
fs
dec
loopne
enter
jg
xchg
iret
xchg
movsl
sti
in
inc
jno
push
in
mov
mov
or
pop
push
cmp
pop
push
call
loopne
pop
jle
imull
fnstenv
or
or
arpl
pop
mov
mov
jge
mov
sbb
pop
orl
pop
repnz
das
push
roll
pop
add
pushf
jl
sbb
rdtsc
pop
filds
in
xchg
sbb
inc
fmuls
sub
out
jg
xchg
push
test
incb
fdivr
test
sub
dec
cmpsb
lret
mov
lods
js
fisubrl
jecxz
test
cld
xor
pushf
insb
or
outsl
das
push
pop
or
pop
pop
jge
ljmp
rorb
aad
repz
or
adc
jg
js
rorb
or
out
dec
mov
add
lea
sbb
sarb
loop
adc
nop
jb
xor
sbb
push
insl
add
and
addr16
cmp
fadd
rcrb
push
into
inc
adc
lret
mov
or
fwait
cli
jle
mov
pop
je
call
add
imul
pop
pop
lea
xor
popa
mov
xchg
mov
xchg
scas
cltd
scas
push
mov
ja
and
dec
ss
das
sub
shll
xchg
into
sbb
jl
jno
dec
rclb
sub
mov
ficomps
shr
push
cld
sub
lds
aas
dec
fwait
inc
inc
pushl
cmp
fsubl
mov
xor
stos
sbb
and
sub
inc
sahf
popa
lods
xor
jecxz
fisubrl
add
add
test
lcall
enter
push
and
cli
dec
xchg
lods
jl
push
sbb
test
pop
repz
xchg
popa
lret
add
negl
mov
inc
jns
fldenv
inc
std
ja
imul
jle
cmp
cli
add
sti
outsl
adc
andl
push
lcall
add
push
inc
mov
lahf
sti
or
push
or
call
pusha
sahf
out
mov
push
adc
pop
insl
mov
and
and
fiaddl
movsl
nop
sbb
test
push
ret
mov
mov
xchg
fiadds
jbe
and
popa
popf
rcrl
sti
and
xor
stc
sbb
mov
mov
pop
push
mov
loop
jne,pt
fcomps
jbe
push
test
mov
scas
in
or
rolb
mov
push
xchg
add
test
icebp
lret
outsb
mov
xor
mov
pop
add
enter
fbstp
sbb
stos
pop
jne
stos
mov
sbb
in
add
mov
adc
iret
mov
jmp
xchg
mov
insb
in
xor
add
push
mov
pop
push
mov
fisubrl
pushf
out
mov
mov
pop
push
mov
inc
sarl
mov
hlt
xor
loope
ljmp
adc
mov
mov
jg
xor
xchg
cmp
aad
orb
mov
sub
out
das
les
mov
jbe
das
xor
pop
fdivp
xchg
sub
jmp
leave
rclb
loope
sahf
movsl
add
xchg
lds
popf
stos
xor
jle
xchg
subb
push
int
mov
hlt
test
add
jnp
flds
aaa
mov
mov
sbb
push
adc
jle
adcl
or
decl
lods
and
popf
shrl
arpl
rcll
cmp
xor
popl
shrl
and
aam
mov
out
in
call
adc
sbb
mov
inc
dec
add
cmp
aam
fstp
fcomps
xor
and
push
roll
stc
sar
mov
pop
pop
sbb
add
sub
push
and
mov
lock
addl
xorb
fisttps
clc
inc
jmp
push
pop
ljmp
sbb
dec
mov
jne
or
or
dec
push
pusha
addr16
add
stos
pushf
call
pop
xchg
imul
and
adc
enter
out
dec
call
sbb
sbb
mov
fiadds
ljmp
popf
xchg
sbb
test
dec
xlat
sahf
add
divb
cmp
jns
cmp
scas
jp
mov
adc
add
inc
mov
and
loope
mov
and
inc
cmp
inc
push
sbb
pushf
sbb
xchg
pop
add
pop
add
mov
das
cwtl
arpl
sbb
in
out
outsl
lock
in
mov
xlat
and
xor
jp
testl
sub
push
ds
in
hlt
sbb
ffree
cld
aas
add
mov
add
or
jmp
das
rcl
push
push
mov
sub
loopne
hlt
pop
faddl
push
sbb
mov
pop
adc
push
or
test
xor
mov
add
cmp
push
cmp
pop
mov
add
or
lcall
mov
jge
inc
je
and
call
popa
xor
or
xchg
add
stos
add
js
mov
pop
fidivrs
xorb
or
test
daa
inc
xchg
adc
add
aad
cmp
adc
and
pop
insb
pop
pop
shrb
sub
jl
negl
aaa
rorl
dec
or
mov
js
nop
insl
bound
pop
popa
xor
shrb
mov
in
dec
cmp
cwtl
or
mov
fistl
xchg
ss
push
mov
pop
fmull
in
mov
in
xor
push
mov
clc
das
insl
hlt
lods
ret
test
inc
inc
fistpll
mov
push
fildl
aas
inc
xchg
int
push
enter
and
outsl
rcrb
pop
shl
scas
stos
jg
sub
movsl
testl
sbb
xor
bound
outsl
hlt
mov
mov
dec
mov
xchg
push
pop
out
dec
pop
inc
push
pop
outsl
mov
or
jg
in
add
ljmp
testb
add
aas
int3
das
outsb
insb
lock
add
data16
cmpsb
and
lock
ret
shlb
push
pop
xchg
add
test
mov
popf
mov
jbe
mov
xor
in
inc
leave
outsb
jle
in
push
movsl
adc
pusha
arpl
fwait
mov
mov
mov
jge
filds
idiv
push
push
mov
std
add
ret
int3
dec
movsb
inc
addr16
insb
add
nop
iret
loope
pop
sub
cmpsl
mov
mov
das
roll
les
das
dec
rcrb
jae
pop
push
mov
jbe
and
mov
push
sub
movsb
arpl
push
add
lods
xor
aaa
jecxz
test
pop
lret
xor
sbb
pop
push
cmp
sub
pop
lock
flds
and
and
pop
push
testl
or
jbe
mov
dec
lods
loope
jno
daa
cmp
in
test
xchg
inc
mov
xor
pusha
ret
pop
rolb
ja
lods
call
xchg
mov
mov
in
iret
jbe
mov
mov
inc
fwait
mov
imul
out
loopne
and
and
sti
inc
xor
lock
rorb
mov
shlb
mov
push
les
out
incl
filds
cli
sbb
dec
ret
pop
out
iret
ljmp
rclb
cmpsl
and
popa
call
das
xchg
add
mov
mov
inc
ret
add
mov
xchg
sub
push
imulb
push
inc
ret
pusha
jae
mov
jp
mov
adc
enter
or
lea
scas
mov
test
jnp
out
lret
lods
jbe
jmp
pusha
jnp
nop
mov
test
inc
fdiv
sbb
xchg
scas
scas
xchg
xchg
pop
and
inc
add
jmp
cmpsb
mov
sti
push
test
adc
mov
xor
fs
or
call
xor
xchg
loope
add
fstpt
out
aad
cli
cmp
mov
std
std
pop
test
loopne
jne
pusha
cmc
and
lret
or
ja
xor
daa
notb
inc
sub
in
ljmp
or
rorb
dec
mov
pop
ficompl
repz
dec
fadds
orl
dec
js
pop
ljmp
daa
lcall
pop
ret
jno
int
inc
and
fistps
not
mov
adc
popa
out
pop
add
fistpl
mov
mov
adc
mov
clc
rcrb
lock
sbb
incl
mov
lods
arpl
pop
jl
idivb
js
mov
xchg
or
icebp
xchg
sub
repnz
push
cmp
das
insl
lods
aam
lock
fistps
test
push
js
add
inc
push
mov
cmpsl
mov
lods
dec
push
les
iret
jb
mov
ljmp
and
push
loope
loopne
and
sbbb
inc
push
mov
or
jge
mov
pop
jo
inc
test
mov
ret
rolb
push
sub
popa
mov
das
dec
fists
ljmp
nop
sbb
fst
xchg
jmp
mov
adc
loop
fisubs
je
add
sub
jmp
jne
jne
cmp
adc
sub
shlb
lahf
adc
outsb
add
add
and
adc
push
call
cli
xchg
cmpsl
aaa
sbb
or
pandn
rorl
mov
mov
call
das
ljmp
adc
cmp
sub
rclb
jp
or
jl
out
fisttps
cltd
add
xor
dec
adc
lret
pop
sub
adc
daa
ds
push
cltd
scas
add
andb
and
daa
or
dec
sbb
mull
in
es
sub
dec
mov
imulb
icebp
pusha
test
mov
mov
adc
aaa
mov
lods
aad
jne
push
jo
cmp
mov
sarl
and
stos
pop
insl
int3
xor
cmc
ds
jmp
jo
out
dec
sbb
rorb
pop
enter
arpl
inc
dec
cmp
out
adc
pop
pop
inc
lahf
push
add
add
xchg
add
mov
in
pop
push
mov
int3
clc
arpl
popa
pop
call
cmp
add
sbb
inc
mov
daa
push
xchg
or
cmp
adc
push
ja
inc
notb
push
cs
jge
cs
cmp
rcll
dec
mov
push
mov
shlb
call
xor
xchg
mov
das
loope
lock
dec
fsubr
adc
lret
or
add
call
or
adc
add
pop
push
les
add
xor
dec
inc
movsb
mov
sub
xor
jle
xor
sub
push
mov
xor
je
enter
push
inc
movsl
gs
stos
dec
adc
pop
test
js
push
pop
scas
adc
push
lock
or
orl
lds
outsb
sub
push
inc
outsb
mov
lahf
push
addr16
mov
out
loopne
and
inc
jg
push
test
fwait
rcrl
shll
loopne
mov
lock
cmp
cs
jg
pop
sbb
mov
pop
cmp
mov
clc
out
push
test
shrb
inc
jmp
or
cmp
mov
inc
inc
out
mov
adc
mov
ss
xchg
rcr
in
and
push
jle
in
in
or
or
ljmp
in
fwait
push
movb
jns
hlt
mov
add
mov
cmp
das
mov
mov
adc
dec
jne
or
test
jg
pop
or
mov
cmp
or
jg
sbb
sahf
and
jns
xchg
dec
xor
xor
jno
sub
pushl
adc
sbb
in
shll
mov
sub
testb
aam
ret
loopne
sbb
and
imul
pop
dec
and
mov
ja
test
out
fcmove
mov
fistpl
push
dec
adc
cld
jg
or
ret
gs
mov
pop
lds
pop
je
xor
xlat
in
and
mov
outsb
fistl
ficomps
and
or
sti
cs
repz
sub
mov
nop
call
bound
outsb
inc
sbb
mov
push
or
lods
mov
jbe
ss
jecxz
mov
icebp
icebp
or
call
lcall
add
ja
fmull
inc
sub
jmp
fwait
cltd
push
pop
push
mov
jns
lret
mov
test
loopne
icebp
xchg
loopne
in
or
aad
movsl
mov
ffreep
xor
arpl
cli
cmp
pop
mov
pushf
mov
inc
dec
aas
inc
rorb
mov
in
inc
nop
dec
mov
lods
mov
loop
les
or
sub
inc
xor
mov
lcall
cwtl
dec
add
sti
enter
jmp
push
cltd
or
lret
push
adc
aas
add
jo
pop
adc
out
ss
in
push
push
jg
inc
add
inc
into
adc
aad
add
sub
test
or
xchg
push
xor
mov
adc
push
pushf
scas
xchg
roll
fdivs
and
hlt
pop
or
shrb
js
loopne
jo
and
lcall
sbb
mov
cmp
push
test
mov
adc
bound
push
vmovhps
push
sub
pop
xor
and
shrb
adc
inc
xchg
sbb
imul
pop
nop
mov
andl
jp
and
in
lods
inc
or
pusha
dec
loopne
loopne
push
enter
pop
test
call
xor
and
xchg
insb
mov
mov
adcb
adc
pop
push
sbb
inc
xor
in
or
sbb
cld
fidivrs
xchg
in
pxor
adc
sahf
sub
inc
andb
fists
xchg
test
sarb
pop
jae
jmp
testb
addb
xor
sub
sbb
sbb
mov
pop
mov
push
out
shlb
lods
sbb
xchg
and
mov
in
shrb
push
xor
or
pop
inc
jne
push
lds
adcb
test
and
lods
mov
inc
mov
adc
stos
insl
pop
fldl
ror
mov
add
jle
out
out
insl
decl
lahf
iret
jbe
xor
notl
mov
mov
add
sub
cmp
stos
out
sbb
enter
jne
push
add
lea
push
pcmpeqw
xor
or
inc
sbbb
lea
cmp
adc
mov
inc
sub
pop
push
mov
pop
add
dec
dec
cmp
sub
dec
push
daa
cmp
cmp
aaa
jne
vaddps
out
jne
inc
xchg
daa
and
rolb
mov
insl
stc
loope
mov
lods
sub
js
das
ss
test
lcall
dec
dec
movsb
cld
jp
andb
mov
jmp
push
cmpb
cli
dec
jge
js
and
int
inc
in
mov
xchg
mov
mov
fsubrp
and
imul
fldenv
stos
sub
stc
dec
inc
inc
in
les
test
jae
dec
xor
pop
ja
retw
cmp
lret
mov
icebp
or
jg
mov
clc
push
mov
cmp
pop
pop
and
sbb
loope
pushl
mov
and
cmp
and
adc
mov
pop
cmc
fsubp
jl
jmp
xchg
lcall
mov
sub
adc
fisttpll
hlt
adc
dec
rclb
movsb
out
xchg
pusha
sti
inc
daa
stos
jecxz
sbb
shlb
mov
pushf
fcomps
push
std
lods
push
push
and
sub
lret
fistpl
je
push
mov
xchg
dec
movl
imul
xchg
adcl
dec
mov
xor
aas
push
out
sub
and
jmp
sbb
mov
add
lds
mov
data16
gs
outsl
xchg
jmp
and
fwait
jbe
les
push
push
dec
stos
adc
xor
aad
js
cmp
xor
scas
jp
rcr
sbb
or
test
aas
ja
faddl
inc
or
decb
sarl
add
pop
ss
stos
je
test
pop
lcall
xor
les
inc
xor
nop
mov
xchg
xchg
out
fsub
mov
push
xor
add
xchg
fcompl
push
mov
dec
mov
mov
sub
pop
fmul
inc
jl
pushf
dec
mov
insl
jg
sti
aam
aam
test
lock
dec
or
cmp
cld
orb
pop
cmp
fsubl
jno
and
adc
add
push
les
rep
adc
outsl
jl
sar
mov
sbb
lock
loope
inc
mov
outsl
jne
inc
jne
xor
rolb
stos
adc
push
sub
arpl
imul
ror
jno
sub
cmpl
pop
or
cmp
ds
mov
sub
loope
notb
popa
ds
lea
pop
add
daa
push
add
aam
pop
push
daa
mov
mov
fldt
jno
mov
dec
pop
leave
add
inc
rcr
aaa
fiaddl
pop
fdivs
dec
add
cmp
sbb
js
pushl
iret
sarl
aad
adcb
adc
fcoms
pop
push
and
jmp
mov
xor
pop
pop
adc
sub
push
pop
cwtl
pop
jg
lods
pusha
ficomps
and
inc
mov
lods
enter
jg
inc
inc
sbb
adc
mov
mov
adc
cmp
jbe
mov
pop
roll
rcll
test
or
push
pop
xchg
mov
inc
jg
mov
jo
adc
adc
call
mov
xchg
add
and
in
push
lods
std
jg
push
xchg
jb
adc
adc
add
jae
lcall
lret
mov
fistl
adc
int3
arpl
jno
hlt
aaa
mov
cmp
or
jno
push
or
dec
mov
rolb
sub
test
mov
repz
testb
int
adc
mov
or
pushl
test
les
xchg
add
fiadds
inc
fisttpll
push
inc
inc
or
hlt
jbe
gs
mov
sbb
pop
icebp
arpl
outsl
add
adc
adc
inc
jp
enter
call
leave
push
into
sahf
cld
mov
xchg
dec
clc
fbld
xchg
mov
test
fs
pop
push
out
xchg
fnstsw
cld
pusha
dec
push
inc
cmp
pop
pop
js
pop
daa
add
lock
inc
test
imull
or
xchg
jg
daa
add
cmp
adc
lock
or
push
inc
or
and
sbb
pop
aam
and
bswap
inc
mov
sub
ror
add
push
mov
sub
stos
xchg
add
add
jmp
loopne
cld
mov
mov
in
insb
add
dec
push
add
adc
stos
std
inc
and
jmp
and
push
pop
sub
push
xchg
mov
rorl
mov
or
push
or
aad
fstpl
insb
and
xchg
into
jbe
adc
stos
ljmp
adc
scas
popa
and
add
mov
in
loopne
popa
lods
imul
mov
push
dec
push
dec
xor
pusha
lds
int3
and
cmpsl
clc
sub
mov
sbb
mov
loop
fs
or
data16
iretw
hlt
xchg
incl
nop
test
sbbl
add
mov
and
fstl
je
or
add
add
mov
cli
adcb
fstp
or
clc
add
das
or
push
inc
bound
mov
xor
loopne
in
push
mulb
pop
imul
xchg
int3
cld
icebp
add
andl
dec
pop
call
sahf
xlat
xor
dec
ret
mov
adc
cmp
data16
movb
test
inc
shlb
push
xor
in
aas
and
fdiv
adc
std
adcb
mov
lret
lods
and
loope
pop
clc
popf
rorb
mov
jno
fsubl
sub
pop
inc
lods
mov
xor
pop
mov
ret
or
popa
adc
and
mov
ds
xchg
addl
jbe
add
add
cmpb
hlt
xlat
inc
pop
pop
das
adc
jns
cmp
pop
sbb
add
cmc
lds
mov
enter
push
frstor
rorl
loopne
cs
add
push
xor
pop
and
ret
or
fadd
jl
inc
cwtl
jmp
test
add
and
sub
jg
orb
xlat
nop
mov
add
mov
or
cwtl
cmpsb
sub
rcl
movsl
gs
call
fcoms
xchg
call
sub
add
or
jns
mov
dec
and
loopne
cs
pop
call
xor
movsl
push
inc
sub
cmp
pop
clc
rclb
sub
mov
push
outsl
rcl
dec
jg
add
inc
lcall
loopne
insl
xchg
sbb
xor
push
mov
jb
dec
arpl
xchg
cld
add
icebp
inc
scas
jge
in
je
add
adc
jb
xor
cmc
add
sub
dec
sbb
mov
sahf
inc
jg
test
call
rcll
movsl
inc
or
xlat
inc
hlt
arpl
or
aaa
inc
lcall
cmp
xchg
cmc
stos
fldt
inc
xchg
pushf
sbb
xor
inc
into
fnstsw
jbe
cmpsl
pop
in
mov
sarb
outsl
and
sbb
sub
outsb
sub
div
add
clc
pop
inc
loop
or
pop
pop
inc
dec
js
out
outsl
jo
jbe
pop
add
and
incl
in
pop
cwtl
sub
jl
out
mov
lret
cmp
jb
lret
call
add
je
fistpll
cltd
add
sub
ret
cld
pop
adc
inc
popa
aas
xor
subl
pusha
adc
sbb
ficoml
nop
add
inc
outsl
out
loop
mov
pop
add
xchg
add
jl
test
dec
xorb
cmpsl
sub
jo
rcll
mov
inc
test
cmpsl
pop
dec
aas
inc
call
add
in
idivb
push
insl
push
lahf
mov
cmp
jmp
sbb
xchg
dec
push
and
mov
adc
pusha
out
nop
mov
aam
mov
sub
jae
sbb
mov
jge
mov
mov
jo
outsl
cli
or
out
fisttpll
jecxz
test
in
fldt
nop
cmpl
std
jg
jle
mov
test
xor
mov
push
call
dec
outsb
pop
push
ret
push
cwtl
lcall
push
xchg
sar
jl
or
icebp
cli
or
inc
cmp
or
mov
daa
adc
fwait
shl
loopne
imul
movsb
mov
jmp
add
adc
cmp
mov
sbb
push
mov
jne
addr16
mov
pusha
adc
sbb
or
aas
andb
js
adc
xchg
add
push
cmpsl
add
incl
ret
js
lock
add
push
adc
ret
adc
push
jl
push
pop
jmp
pushf
pushf
leave
push
nop
loopne
and
push
xor
push
xor
mov
mov
or
add
mov
stos
mov
jbe
pop
shlb
and
add
sarb
shll
icebp
sbb
imul
mov
sahf
xchg
cmp
mov
repnz
inc
sbb
mov
add
test
ret
inc
enter
rorb
inc
push
aaa
loope
cmp
adc
or
ljmp
jge
mov
sbb
sbb
sbb
adc
rolb
lret
cld
js
xor
xor
addl
das
mov
daa
sub
push
or
adc
push
xchg
cltd
cmp
cld
jmp
pusha
push
cld
and
inc
pop
push
out
add
aam
aam
inc
add
popa
fadds
mov
and
xor
loopne
inc
jne
lock
sbb
shlb
add
cli
adc
mov
push
call
aam
js
stc
inc
add
add
pop
addb
jns
sbb
xchg
push
stos
add
push
sbb
mov
push
shrl
pusha
add
rcrb
push
xor
xchg
iret
adc
adc
adc
or
sarb
push
cmp
jecxz
inc
jne
add
fistps
in
add
mov
in
xchg
outsb
hlt
xor
shr
and
or
pushl
decl
xchg
and
rcrl
jg
sub
fcoms
fwait
xor
cmc
dec
xor
push
aad
add
test
das
sarb
inc
imul
dec
jge
jno
jno
lods
cwtl
xlat
and
test
inc
pushl
mov
mov
rolb
add
mov
outsl
into
xchg
xchg
mov
out
es
sbb
mov
sahf
jecxz
cmp
mov
or
dec
pop
push
int
aaa
pop
inc
add
or
mov
pop
cmc
mov
pop
in
shll
add
jne
jb
cmp
dec
jbe
in
fistps
xor
pop
icebp
xchg
and
mov
sbb
insl
adc
push
cs
mov
or
das
clc
mov
loopne
aam
lods
sbb
xchg
leave
jbe
shll
andl
jle
mov
and
enter
or
push
and
push
ror
dec
add
jg
std
push
aaa
adc
add
add
loop
dec
enter
push
and
sub
cs
inc
mov
mov
pop
das
rcrb
sub
popa
mov
hlt
out
test
dec
push
sbb
dec
adc
jo
cs
cmp
ret
outsl
imul
imul
xor
cwtl
mov
push
jge
enter
aaa
inc
xor
call
or
mov
std
test
mov
jo
icebp
dec
pop
xor
adc
pop
loop
mov
mov
mov
inc
lods
fisubrs
and
roll
jb
inc
lret
incl
fldlg2
lcall
faddl
aaa
in
ffreep
outsl
lods
mov
adc
cwtl
adc
mov
pop
popa
pop
mov
lret
or
testl
cmpsb
shl
sbb
mov
adc
test
or
aad
clc
inc
pop
pop
dec
pop
inc
enter
and
jo
insl
dec
push
cmp
hlt
mov
popw
lret
cwtl
mov
and
cmp
push
or
or
ret
jo
sti
repz
push
xchg
cmpb
and
in
lea
or
daa
mov
call
popf
mov
xor
mov
jbe
fstpt
push
insl
xchg
adc
jg
test
fxch
mov
data16
sub
notb
int3
scas
clc
nop
fistl
inc
jge
inc
fisttpl
mov
push
aad
clc
vmaxsd
outsb
das
mov
mov
push
mov
insl
dec
in
leave
testl
aaa
insb
adc
jecxz
pop
xchg
pop
dec
ret
push
xchg
xor
popf
scas
add
and
insb
out
test
mov
leave
xor
sub
enter
daa
imul
aaa
mov
ss
cli
orl
or
call
cmp
and
sbb
xor
add
fsubrp
fidivrl
daa
fldcw
inc
pusha
imul
or
and
xchg
leave
push
inc
imul
clc
fldt
xor
or
movzbl
sti
push
call
mov
cmpsb
mov
loope
std
testb
ss
mov
and
lods
lds
jne
inc
sbb
ss
cmp
addr16
js
mov
nop
mov
or
lods
scas
movsl
push
cli
loope
inc
push
adc
call
pop
mov
mov
test
adc
mov
push
xchg
xor
cmpsl
jnp
stos
mov
decl
add
icebp
jno
sbb
sub
add
adc
adc
je
cmpsb
mov
das
mov
gs
xchg
push
mov
addr16
mov
add
lock
cld
or
fwait
mov
data16
in
test
cmp
das
inc
call
sbb
cmc
or
rcrb
mov
fisubl
xor
mov
repz
mov
shlb
pop
jp
pop
fisubrs
mov
jmp
xor
mov
insb
add
ja
inc
nop
stos
mov
pop
xor
out
mov
cld
dec
adc
pushf
insb
mov
pop
fs
out
or
jecxz
aaa
lea
mov
pop
and
inc
mov
arpl
int3
adc
fisttpl
adc
xchg
in
adc
and
and
outsl
cmp
jp,pt
inc
outsl
push
and
ja
xchg
lods
jae
arpl
cs
inc
xor
mov
les
ja
adc
ja
loopne
adc
mov
dec
push
xor
inc
add
mov
clc
inc
sbb
sbb
clc
adc
sbbb
push
je
inc
and
inc
sbb
roll
les
xchg
push
je
mov
adc
adc
loopne
mov
pop
mov
inc
inc
outsb
mov
push
inc
or
test
add
and
lock
or
or
mov
push
cltd
aam
pop
mov
jo
fs
mov
adc
adc
fsubl
adc
inc
mov
pop
add
fldcw
add
sbb
jno
cmp
aaa
faddl
adc
stos
loope
sub
xor
adc
cmp
ficoml
inc
mov
aam
mov
stc
or
adc
pushf
ss
xlat
xchg
shrl
mov
xchg
stos
into
push
sahf
cld
fisubs
mov
bound
push
pop
sub
jae
pop
and
js
insb
ss
and
xchg
enter
scas
jne
jecxz
or
sbb
les
jbe
sub
sub
pop
add
aaa
leave
popa
adc
and
xchg
add
sbbl
xor
mov
hlt
pop
cmp
dec
adc
repz
mov
fildl
mov
int3
push
loopne
inc
cltd
loopne
movb
and
hlt
pop
xor
cmpsl
aaa
sbb
cmp
xchg
sbb
xor
xor
push
hlt
push
fldl
mov
enter
xchg
fdivs
shlb
sub
sub
test
mov
adc
dec
hlt
out
mov
fbld
cmp
sub
mov
sbb
dec
insl
addb
mov
mov
popa
pushf
movl
pusha
fidivl
ret
mov
sub
xchg
loopne
inc
xor
in
dec
sar
fildl
fwait
adc
mov
test
pop
rcrb
mov
or
fisttps
adc
outsb
sbb
mov
inc
mov
dec
or
mov
sbb
cwtl
ror
int
ljmp
or
adc
adc
icebp
pushf
cld
add
cmp
jl
mov
mov
adc
cltd
adc
cld
fs
or
sbb
xor
daa
add
sbb
leave
adc
stos
cmc
outsl
in
das
xchg
adc
and
aam
jns
mov
jg
test
scas
call
inc
pop
call
mov
outsb
add
push
mov
push
call
loopne
mov
fwait
jbe
in
pop
pushf
cltd
push
jo
out
fucomip
lods
mov
push
cltd
mov
loop
mov
mov
pop
or
xchg
arpl
or
lahf
enter
inc
adc
dec
rorl
push
push
outsl
mov
mov
sbb
sbb
sub
cmp
les
mov
in
mov
jg
or
cwtl
pop
push
int3
ss
mov
jg
inc
aad
dec
cwtl
loope
lods
mov
push
add
xor
incb
scas
and
pop
cmc
dec
mov
in
push
inc
dec
negl
xor
fstps
into
movsl
mov
subb
or
lret
push
loopne
mov
das
int
mov
sbbb
jo
js
test
sbb
fs
push
fwait
push
cmp
mov
pop
cwtl
mov
shrl
jl
fs
out
and
insl
dec
fwait
out
dec
or
sbb
and
sarb
or
jno
mov
dec
xor
insb
hlt
xchg
aaa
inc
sbbl
mov
xor
pop
ljmp
imul
pop
dec
outsl
sub
xchg
and
sbb
sbb
loop
adc
jg
pop
fwait
js
sarb
enter
cmp
pop
or
cld
int
add
aaa
pop
lahf
imul
or
hlt
or
adc
push
ss
ljmp
loop
aas
ret
dec
and
dec
sbb
jbe
das
fdivrl
jbe
je
xchg
pushf
push
int
es
mov
call
push
or
jl
mov
test
fnsave
push
push
xchg
push
movsl
add
xor
lds
idivb
bound
cmp
or
sbb
inc
loope
cmp
mov
outsl
push
fs
int
xchg
mov
ret
jg
mov
in
lds
and
stc
mov
sub
lds
xchg
inc
ss
cmp
xchg
js
sbb
clc
jle
adc
pop
mov
loop
imul
jg
jg
inc
flds
inc
repz
stc
mov
rorl
jbe
rorl
in
cli
xchg
mov
daa
fcom
mov
or
adcb
ljmp
pop
gs
pop
inc
cld
adc
pop
and
lods
cwtl
sub
aam
dec
sbb
imul
mov
les
pushf
ja
or
xlat
out
or
add
lea
or
lds
sub
pop
xchg
scas
xor
cld
in
sbb
rolb
fnsave
lock
movsl
or
adc
cmpsl
xchg
xchg
out
xchg
cmp
mov
data16
xor
xor
cli
orb
or
adc
pop
sbb
mov
outsl
not
add
mov
fldcw
and
cmc
pop
cmp
jmp
data16
movsb
test
cwtl
ret
stos
data16
dec
aad
mov
add
mov
pop
or
test
mov
movsb
push
insl
stos
hlt
imulb
sub
xor
or
or
jmp
push
stos
int3
dec
cmp
fnstcw
push
lahf
adc
add
and
xchg
sub
mov
pop
add
and
cmp
adc
or
sbb
and
nop
icebp
lret
lods
push
sub
idivl
fdivs
push
mov
inc
cld
xor
outsl
jge
and
jbe
sub
xor
bound
loop
xchg
rcrl
scas
and
scas
in
das
cvtps2pi
or
mov
or
out
jle
pop
push
cmp
and
cwtl
xchg
lds
xchg
mov
addl
cld
mov
lret
and
sbb
xchg
xor
dec
test
add
mov
and
and
inc
adcl
inc
ja
or
test
mov
pusha
mov
jbe
xor
push
fldcw
inc
mov
cmpl
push
fcmovb
shlb
pop
add
xchg
dec
lret
push
es
jecxz
mov
jnp
and
into
jnp
outsb
cmp
repz
pop
jae
lcallw
push
cmp
jl
jecxz
sub
xor
lods
outsl
dec
sbb
gs
push
outsb
pop
cmpsb
addr16
test
insb
xor
and
ljmp
loopne
pop
mov
jmp
dec
stos
inc
mov
mov
call
in
flds
add
and
data16
pop
ja
push
rol
repz
or
fdivs
aas
pop
xor
pushl
in
mov
imul
mov
adc
or
clc
sbb
mov
clc
mov
push
mov
mov
aas
inc
push
jmp
xor
mov
jle
insl
xor
pushw
xchg
jne
add
lds
cld
fists
sub
or
and
jle
xchg
sbb
daa
mov
leave
mov
push
adc
mov
cmpl
inc
popa
mov
pusha
ss
mov
hlt
ljmp
push
dec
loope
inc
and
pop
inc
dec
mov
push
incl
pushf
popa
mov
xchg
push
pusha
pop
and
enter
fidivs
cli
cmp
and
ret
mov
repnz
mov
cmp
icebp
sub
cmp
pop
push
jle
repz
rol
decl
enter
mov
jbe
hlt
pop
aaa
clc
test
cwtl
sbb
or
aas
orl
ds
pop
push
pop
add
and
xchg
outsb
jg
shrb
dec
push
cmp
sub
call
sub
pop
xchg
jo
rolb
loopne
mov
mov
lcall
mov
add
sar
jbe
fildll
jg
mov
out
rol
mov
pop
sbb
fsubrl
frstor
popa
movsb
arpl
adc
xchg
fdivrs
aam
cmp
je
adc
sub
lcall
add
mov
adcl
ljmp
in
mov
sti
add
xchg
dec
and
ret
sub
fistpll
in
test
sbb
out
arpl
xchg
ficoms
rclb
into
enter
sbb
mov
pop
pop
pop
sbb
fiadds
cld
jecxz
adc
mov
lcall
dec
jno
int
pop
cmp
sub
iret
xchg
dec
inc
pop
cltd
and
add
add
decl
je
add
lds
cmc
jge
aas
inc
cmc
add
cld
dec
gs
xor
or
test
mov
fistpll
dec
out
dec
adc
sub
sar
sbb
or
in
lods
inc
fidivrl
push
repnz
daa
inc
dec
and
jg
imul
jl
xchg
mov
or
inc
std
mov
mov
jns
and
mov
hlt
lods
imul
or
loope
xor
adc
or
dec
push
add
cwtl
clc
fldl
imul
into
je
or
cltd
test
insb
mov
fwait
cmp
movsl
or
mov
insl
lahf
clc
add
sbb
inc
subl
popa
outsb
push
push
into
pop
fucomi
test
mov
xchg
stos
and
inc
pop
testl
outsl
rcrl
or
xchg
pop
sub
jge
out
or
pop
outsl
xlat
adc
pop
or
or
hlt
or
xchg
fdivrs
outsl
sub
and
dec
adc
or
dec
insb
mov
jbe
mov
dec
int
jp
fs
sbb
insl
fcmovnu
call
movsb
pop
loopne
mov
adc
and
or
rclb
icebp
inc
push
xor
in
sbb
and
and
push
sbb
ljmp
pop
dec
fiadds
rcrb
pusha
aad
cltd
pushf
jmp
sbb
scas
and
les
icebp
xchg
lahf
dec
mov
hlt
mov
in
push
add
add
add
xor
xor
hlt
adc
mov
stos
std
sbb
ja
pop
and
push
push
push
fsubl
aas
mov
pop
aad
inc
std
push
push
das
outsb
or
dec
es
or
adc
jmp
jo
mov
pusha
aad
adc
out
shrb
add
ljmp
inc
pop
adc
ret
push
sbb
xchg
inc
add
pop
xchg
jge
sub
dec
sub
adc
or
or
mov
test
into
aad
adc
ds
xor
adc
mov
xor
hlt
sub
inc
adc
inc
daa
and
insl
mov
or
inc
push
rclb
clc
fucom
sbb
adc
jge
lahf
add
adc
push
inc
lock
jne
sbb
xor
and
adc
rsm
mov
push
decb
adc
out
mov
or
add
push
add
dec
ljmp
ret
xor
sbb
fdivrs
or
rorb
jbe
jg
mov
cli
scas
push
lcall
inc
jo
dec
inc
push
cmpsl
push
and
js
bound
jge
adc
cmpsb
paddusb
push
mov
add
mov
insl
jns
mov
pop
push
pop
clc
xchg
adc
push
adc
sbb
dec
inc
movsl
hlt
dec
ljmp
es
adc
jo
add
repz
stc
push
mov
outsl
xchg
jbe
mov
enter
repz
mov
cmp
mov
adc
mov
lock
jle
push
insl
jae
add
dec
push
xchg
aam
imul
out
push
xchg
mov
pop
std
jl
jne
mov
and
xor
cmpsl
and
mov
addr16
jmp
dec
lods
flds
rorb
fldt
ffree
add
push
test
and
push
lods
cmpsb
popa
cmp
pop
mov
mov
push
or
inc
lds
repnz
lock
sbb
jl
mov
fwait
pop
or
xor
sub
sub
mov
in
pop
out
sub
xorb
lcall
push
jb
shlb
xchg
pop
mov
mov
fstpl
mov
pushf
jno
mov
les
addr16
lods
into
fstpl
adc
sub
adc
xchg
jmp
out
inc
sbb
mov
mov
test
sub
xor
fmul
adc
aaa
adc
sbb
lock
movsl
add
jmp
out
pop
inc
inc
or
cmp
leave
sbb
les
cmp
jl
mov
inc
jmp
adc
sahf
lahf
mov
frstor
fsubrp
and
add
test
call
adc
or
mov
mov
in
in
or
mov
mov
pop
jo
lcall
mov
outsl
add
xor
loop
cs
jmp
pop
iret
dec
sub
movsb
jo
push
cmc
mov
pop
jns
cmp
adc
jecxz
sub
pushf
push
mov
pop
mov
adc
add
mov
mov
jge
ja
push
jecxz
insb
lea
pop
dec
inc
add
dec
call
rorb
add
mov
fdivrs
ljmp
cwtl
outsl
dec
std
mov
mov
popf
nop
xor
pop
jmp
xchg
lahf
sbb
jne
pop
lds
push
inc
clc
jg
int
and
mov
dec
add
jmp
rclb
cmpsb
add
in
and
push
inc
inc
test
push
adc
lock
fbld
cmp
leave
and
icebp
negl
push
ljmp
or
je
mov
or
testb
hlt
pop
test
xchg
data16
jb
testb
cmpsl
inc
jmp
or
decl
or
roll
popa
jecxz
mov
int3
aas
lods
adc
cmp
dec
mov
fs
jle
test
fucomip
incb
aas
xor
adc
insb
out
in
xchg
repnz
mov
cwtl
lock
rolb
sahf
test
mov
out
xor
add
cwtl
push
fistpll
lods
rcrb
into
pop
pop
mov
outsl
inc
loope
loop
xor
or
dec
int3
jne
xor
push
out
lods
and
push
outsl
sbb
mov
push
inc
pop
adc
push
jg
ret
lds
mov
icebp
ds
daa
insl
faddl
lret
mov
shlb
call
or
dec
out
dec
jp
dec
adc
xlat
or
jmp
insl
push
cmp
push
insb
pop
clc
fdivrl
mov
pop
incl
push
or
mov
or
push
pop
insl
or
add
jle
data16
sahf
sub
gs
fadds
pop
inc
push
and
xchg
mov
cmp
xchg
sar
add
jp
aas
cmp
jmp
inc
dec
cmpb
scas
mov
or
push
icebp
sub
inc
or
pop
pusha
ljmp
adc
aas
cmp
xor
gs
mov
xchg
adcl
js
dec
aam
outsl
pop
gs
dec
flds
and
adc
inc
sbb
jmp
sbb
fdivrp
aaa
xchg
mov
and
push
iret
or
scas
inc
add
mov
push
sub
inc
xchg
cmp
outsl
and
aaa
pop
loopne
fbstp
arpl
jns
insb
mov
xlat
idivl
outsl
incl
mov
mov
lret
testl
fs
aaa
mov
sbb
sub
clc
fists
sti
ret
sahf
xor
inc
movsl
mov
adc
or
jg
xlat
inc
mov
inc
andb
data16
movsb
adc
mov
pop
jle
push
clc
ret
lock
int3
jmp
cmp
pop
add
icebp
add
dec
fimull
cld
lret
outsl
in
rcrl
jnp
mov
mov
iret
cli
or
mov
push
jle
pop
push
xorb
mov
xor
jg
incl
jno
mov
push
daa
add
mov
call
inc
ljmp
fildl
mov
loopne
dec
sub
mov
lea
clc
jg
inc
lea
loope
pop
cwtl
fwait
adc
je
sub
paddusb
cltd
lock
fstpt
dec
adcb
push
shll
mov
pop
push
jp
call
ss
stc
xor
cwtl
addl
fbld
lock
cmc
aam
je
mov
pushf
cmp
sahf
xchg
lea
popf
lret
popa
fildll
jg
outsl
repnz
fcmovnb
aaa
inc
or
sbb
bound
mov
subb
add
ficompl
aaa
loopne
push
add
jg
sbb
mov
call
addl
arpl
xchg
pushf
push
mov
outsl
testb
pop
fidivrl
sbb
mov
dec
aaa
fdivrp
jg
add
subl
movsb
pop
cltd
mov
movsb
stos
test
xchg
mov
mov
test
jp
out
jb
dec
inc
sahf
scas
jg
movsl
xchg
sbb
cmp
test
int3
xchg
mov
std
pushl
push
xor
pop
cmc
add
sbb
jmp
inc
out
mov
repnz
out
cmp
mov
xchg
out
mov
ror
pop
ret
stos
cmp
jae
mov
pushl
sbb
pusha
out
push
loopne
add
jae
subb
js
pop
mov
jmp
call
cmp
push
ljmp
movsl
mov
mov
mov
loopne
pop
clc
xchg
xor
pop
pop
xchg
in
js
fwait
and
mov
sti
pop
cmp
inc
aaa
adc
xor
scas
push
pop
push
push
cli
push
cmc
inc
aaa
jo
push
mov
and
fmull
aaa
sub
ud2
sub
aaa
call
sbb
and
sbb
xor
dec
das
jnp
or
and
jg
push
imul
adcl
filds
shlb
pop
les
outsb
adc
add
stos
rcr
pop
mov
or
pop
lock
mov
or
dec
sbb
and
xor
movsb
inc
std
mov
jbe
es
cmpb
sbb
pushf
pop
pop
inc
cld
dec
mov
inc
mov
les
daa
jle
faddl
iret
ja
in
sub
push
mov
scas
adc
and
push
test
jnp
loopne
or
scas
adc
xor
mov
pusha
lods
mov
xchg
shrb
test
insl
jg
push
dec
sub
mov
aaa
pop
jg
xchg
lcall
mov
mov
dec
test
mov
mov
cmp
test
jmp
out
and
sub
sbb
inc
mov
sub
pop
bound
jg
out
bound
xor
xor
int3
pop
popf
add
int
ret
push
outsl
call
mov
xchg
inc
test
sub
test
xlat
pop
mov
cmp
mov
add
fiadds
loop
inc
ret
out
and
adc
rclb
insb
jae
add
add
sbbl
hlt
icebp
or
call
shrl
xor
xchg
add
sub
pop
inc
test
ret
sub
js
or
test
add
add
into
insb
adc
mov
mov
push
or
loop
into
sbb
push
sysret
and
mov
pop
in
aam
inc
cmc
sbb
push
dec
dec
mov
sbbb
mov
test
ljmp
cmp
xchg
push
loopne
enter
and
lea
mov
adc
sub
call
in
lcall
test
mov
mov
mov
sub
sbb
adc
push
out
nop
andb
or
shll
loopne
mov
aaa
mov
xor
stos
aad
adc
loopne
adc
lret
aam
call
js
imul
mov
mov
hlt
fisubs
pop
sub
sti
or
add
idiv
andl
mov
sbb
loopne
xorb
out
sahf
and
cmp
adc
popa
test
movsb
sub
popa
adc
fsub
adc
pusha
lds
out
dec
or
push
out
sub
in
add
lret
sub
loopne
inc
hlt
pop
sub
icebp
mov
loope
cmp
fucomip
imul
dec
or
pop
adc
cmpb
dec
push
pop
sub
and
fiadds
loop
test
rclb
daa
leave
inc
adc
xor
sbb
jle
adc
mov
int3
or
int3
adc
sbb
cmp
or
dec
or
testl
andb
jg
dec
sub
sub
jge
jl
icebp
add
lret
popa
outsl
adc
or
add
add
sub
fidivrs
inc
test
mov
and
mov
or
add
sub
adc
add
jmp
adc
cmc
jnp
test
dec
and
sub
pop
rcl
scas
fbstp
pusha
jbe
add
and
inc
add
dec
adc
inc
or
mov
mov
push
out
sub
mov
xchg
mov
rol
add
sahf
jge
push
add
sbb
andb
sub
cmp
jns
sub
xor
jmp
sub
outsb
mov
stos
ljmp
lds
jl
jmp
mov
mov
loope
clc
push
xor
and
mov
test
gs
rcrl
xor
rolb
inc
decl
sbbb
out
sbb
mov
popa
mov
xor
cwtl
mov
push
mov
push
mov
inc
and
les
inc
cmp
add
xor
push
or
jno
inc
xchg
imul
pop
test
and
lcall
fisubs
mov
cmp
cmp
adc
push
push
sub
test
ss
mov
add
pop
xchg
and
dec
addr16
and
lock
shll
test
jb
orl
adc
mov
add
movl
lea
xchg
jle
testb
add
mov
pusha
mov
mov
gs
or
pop
mov
stos
jo
pop
nop
xlat
lret
insl
fbld
movsl
out
xor
inc
cmpsl
mov
adc
mov
or
popf
fs
adc
push
das
ljmp
enter
mov
add
mov
cld
cmp
mov
sub
lds
arpl
fs
and
jb
loopne
iret
mov
out
fs
or
jbe
aas
add
push
je
fimull
in
jb
out
mov
icebp
mov
jbe
in
je
dec
out
pop
inc
inc
scas
test
push
loope
xor
sbb
inc
scas
test
call
jne
adc
add
push
pusha
icebp
adc
rcrl
mov
vmwrite
pop
mov
cmp
stc
test
stc
mov
fistps
rcl
mov
mov
fucomip
jl
pusha
mov
push
cmp
pop
mov
push
cmpl
in
mov
rclb
inc
cltd
js
or
push
or
popa
sbb
push
pop
cmc
stos
add
xchg
mov
int3
xchg
cs
ret
negb
fbstp
int
dec
add
add
dec
insb
cld
push
rolb
fwait
mov
or
xor
mov
mov
push
push
sbb
nop
jnp
add
or
mov
es
insb
das
mov
pop
mov
jg
sbb
xor
mov
sub
incl
in
mov
fsubs
add
cli
fcmovnbe
ss
xor
cmp
add
jp
pop
rcl
mov
pop
mov
push
mov
in
push
rcr
sbb
outsb
out
dec
xor
dec
mov
pop
add
or
ret
icebp
inc
repz
js
addl
adc
cs
mov
aaa
or
divl
rcrl
loop
insb
add
mov
sti
xchg
fcmovnu
pop
dec
mov
sub
jb
mov
mov
dec
insl
adc
add
xchg
movsl
in
ja
pop
fwait
shlb
push
rol
xchg
loop
jge
jb
popa
mov
cwtl
clc
mov
fdivrs
rep
push
or
mov
xor
mov
repz
and
loopne
xchg
test
push
dec
add
jle
loope
ss
mov
mov
or
loope
push
andb
out
fmuls
loop
jno
jbe
mov
sub
push
jns
cmp
call
into
sbb
test
mov
xor
mov
imul
fdivrs
sbb
and
and
js
push
fcoml
xlat
cmc
jg
mov
push
dec
dec
js
xchg
or
call
fxch
inc
cmp
ljmp
fldt
cmp
int
sub
inc
sub
or
sub
js
jp
popa
ficomps
push
jg
imul
jmp
dec
int3
dec
dec
popa
xor
inc
pop
mov
shrl
mov
push
aaa
sub
lcall
xchg
mov
cld
popfw
dec
or
cli
mov
cmp
xor
xchg
dec
icebp
das
repnz
loopne
add
arpl
mov
dec
mov
mov
sbb
lock
ret
add
inc
xorb
push
movsl
pop
push
dec
pop
fs
adc
inc
add
fisttps
pushf
and
inc
je
data16
xchg
aad
or
xor
adc
or
test
and
popf
inc
rol
dec
pusha
dec
dec
mov
out
xchg
adc
adc
mov
clc
mov
xlat
jl
or
xor
add
in
inc
inc
pop
adc
call
add
test
jl
loopne
and
xor
adc
inc
and
and
roll
mov
pop
push
hlt
add
jmp
cs
mov
push
rcrl
or
insl
movsb
orb
scas
push
adc
jne
xchg
and
scas
repz
xchg
out
into
pop
inc
ljmp
insb
into
jne
mov
adc
scas
push
lock
fdivrs
add
pop
and
xor
xor
mov
sti
cmpl
in
shlb
dec
adc
sti
push
shrb
imul
rcl
or
sbb
pop
cmp
aas
sub
xchg
pop
outsl
dec
sub
dec
shrd
inc
je
call
and
test
inc
ret
xchg
mov
jp
xorl
mov
fsubs
mov
loopne
mov
xor
data16
sub
in
sahf
aaa
pop
hlt
push
inc
mov
es
dec
repnz
xor
fisubs
push
pushf
dec
clc
mov
and
add
data16
ja
lcall
jmp
adcl
test
sbb
mov
add
push
xor
or
cmpl
addr16
jo
jle
pop
dec
ja
and
push
and
stc
mov
movsb
call
in
ss
inc
sahf
add
push
push
mov
js
or
lret
sub
jg
scas
fldcw
xor
cmp
icebp
jne
pushf
push
and
push
out
xor
fwait
xor
xchg
inc
inc
push
aas
bnd
aaa
jbe
test
cltd
xchg
adc
stos
pop
inc
mov
lods
shlb
and
inc
movsb
outsb
inc
inc
and
sub
adc
test
xor
xor
sbb
andl
test
imull
push
insb
test
test
pushf
mov
call
movsb
lea
jnp
je
lock
jl
pushf
out
mov
dec
add
sbb
ds
jmp
inc
adc
push
add
xchg
es
dec
popf
push
jae
pop
fsubs
mov
ret
inc
mov
rcl
jo
jle
sub
cmp
push
add
sub
jmp
xchg
mov
sbb
fdivs
mov
inc
adc
in
push
jge
sub
mov
icebp
icebp
adc
aam
loopne
loopne
push
cmp
clc
xchg
pop
or
adc
sub
jno
push
cmp
stos
insl
adc
iret
jge
adc
pop
enter
addr16
sub
add
jae
xchg
sub
cmp
dec
push
mov
fwait
push
out
lea
test
shlb
xor
jecxz
push
pop
inc
jge
push
inc
mov
and
xchg
scas
jp
lods
test
lock
add
lea
mov
add
hlt
push
lock
and
cwtl
stos
xchg
and
ja
cmc
mov
cli
rep
cmp
outsl
sti
mov
subl
les
aam
jmp
push
jnp
mov
lahf
es
notb
sbb
push
mov
fildll
in
or
add
xchg
out
sub
out
sbb
xlat
pop
jb,pn
shlb
mov
jns
pop
pop
jle
adc
movsl
jp
sub
add
cmp
incb
cltd
add
xchg
inc
addr16
jo
test
push
frstor
push
add
rcl
pop
pushf
test
mov
cmp
sbb
dec
std
cs
lods
les
das
fmuls
icebp
outsl
adc
pop
stos
mov
icebp
lods
and
clc
mov
sti
and
test
sysenter
adc
loopne
sbb
imul
or
mov
test
pop
add
lcall
or
shll
fisubl
cmp
pop
fs
add
mov
icebp
out
mov
sbb
std
enter
mov
push
in
xlat
xchg
loopne
shll
mov
xor
adc
hlt
int
sbb
cmpsb
ljmp
adc
or
cmc
or
push
ljmp
jge
sahf
out
pusha
jns
fisttpl
jne
add
int3
mov
and
inc
mov
adc
xor
xchg
cmp
push
repz
pop
mov
cs
push
mov
mov
in
fcmovnu
outsl
sub
loop
adc
mov
mov
test
fs
jmp
mov
adc
push
or
test
fbstp
inc
scas
icebp
xor
jp
andl
es
mov
mov
ljmp
gs
insl
aaa
icebp
pop
jg
sbb
push
test
clc
stos
adc
cli
lock
in
mov
jne
push
pop
jmp
fdivl
aas
je
mov
and
dec
push
shl
lds
mov
icebp
or
push
clc
stos
pop
push
xchg
dec
std
mov
push
ret
inc
clc
sbb
jo
mov
inc
push
lahf
xchg
arpl
ljmp
cld
jg
jl
xor
push
mov
out
lods
arpl
cmpsb
out
inc
mov
add
dec
fstp
and
bsf
cld
push
inc
or
push
clc
push
cvtps2pi
testl
decl
cmpsb
adc
pop
repnz
sub
pop
mov
pop
out
call
call
mov
mov
ljmp
mov
push
push
pop
xchg
fs
and
sub
pop
xor
mov
shlb
xor
mov
xchg
scas
adc
ss
inc
std
or
push
add
loopne
mov
or
in
stos
mov
push
dec
mov
mov
call
pop
sbb
test
cmpsb
xchg
and
push
push
inc
add
jge
xor
fcomi
cwtl
ds
in
sbb
stos
scas
sbb
cmp
adc
jle
add
xchg
push
and
xchg
scas
push
hlt
lret
jb
dec
cmp
cli
je
mov
and
dec
cmp
gs
push
lock
push
test
inc
mov
aam
imul
lcall
push
add
fsubrl
mov
fwait
mov
cmpsl
outsb
out
pop
jb
xor
cmpsb
popa
and
call
sub
in
jnp
shll
dec
les
mov
cld
pusha
outsl
test
enter
cmp
ljmp
jp
jl
xchg
jnp
lret
mov
pop
aam
dec
je
pop
mov
pushf
sahf
mov
or
and
test
jl
dec
bound
lcall
cmp
and
iret
in
fs
lock
mov
cmp
and
imul
outsb
mov
mov
bound
jmp
aam
dec
push
outsl
outsb
mov
cmpsl
cmp
pop
add
addr16
ja
xchg
xchg
repnz
mov
pop
push
cmpb
adc
adc
ret
adc
cmp
xchg
add
push
fs
push
or
pop
sbb
adc
pushf
adc
fstpt
pushl
shrb
sbb
push
repnz
and
push
out
call
in
push
cwtl
push
test
js
and
xchg
lea
movsb
cltd
and
cmp
pushl
inc
cmpsl
iret
ljmp
jg
dec
je
daa
fcoml
fldt
and
rolb
lcall
and
jbe
mov
ljmp
movb
jnp
mov
adc
mov
mov
das
pop
mov
fadds
sahf
cmp
sti
out
out
adc
xchg
inc
stc
test
loop
add
mov
pop
mov
pop
rcrl
sarb
lret
mov
lahf
add
dec
jmp
fistl
shll
js
ds
hlt
cmp
mov
rcrb
fisttpl
mov
push
icebp
fisttps
inc
dec
outsb
jecxz
push
jmp
dec
jne
test
clc
xchg
push
addr16
loope
dec
mov
xchg
sbb
cs
pop
cli
repz
dec
pop
inc
js
xchg
lret
test
outsl
mov
mov
inc
xor
dec
jecxz
or
pop
pop
ret
xor
xlat
sti
mov
push
and
hlt
in
mov
adc
jbe
aam
lea
inc
imul
and
lret
cmp
fcmovu
hlt
lret
sbb
pop
leave
or
and
les
mov
xchg
add
pusha
adc
aaa
adc
mov
popa
xchg
dec
xor
ret
jns
rcrl
pop
adc
mov
loop
and
inc
lock
xchg
jo
xchg
mov
sub
inc
mov
scas
lock
cwtl
loopne
inc
js
mov
popf
incl
leave
je
jb
sahf
xor
popa
pop
call
jle
or
dec
and
fsubrp
mov
dec
add
daa
mov
insl
mov
ret
cltd
add
push
cmp
mov
cli
sub
fstps
inc
sti
in
add
ja
ljmp
xchg
shlb
test
hlt
movsl
je
ret
pop
leave
mov
mov
jmp
push
jno
test
or
popf
and
xchg
jp
jns
je
ja
xor
add
je
loopne
les
cmc
fnstsw
xor
in
push
sub
les
push
and
cmpsb
dec
insb
fsubl
loop
in
adc
and
ficoms
outsb
push
and
sahf
stc
push
push
je
sar
fs
daa
push
lret
jae
xor
adc
xchg
dec
sub
jbe
pop
outsb
test
mov
notl
fwait
pop
icebp
inc
and
cld
fadd
push
dec
cmpsb
pusha
std
adc
inc
mov
sti
mov
mov
adc
es
arpl
xchg
aaa
in
push
mov
jno
xchg
mov
lods
mov
mov
mov
jle
xchg
movsl
jne
icebp
hlt
stos
xchg
push
mov
dec
test
jns
jbe
pop
jns
sbb
pusha
outsl
add
cmp
dec
mov
and
stc
mov
scas
fdivr
xchg
jo
pop
push
cmp
cmp
aaa
xor
addr16
rorl
shlb
pop
mov
mov
jo
sub
jp
xor
pop
shlb
push
mov
xor
cmpsb
mov
add
push
daa
mov
aad
mov
out
test
aad
sub
adc
and
lahf
les
mov
lods
xchg
jmp
cmp
ja
adc
adc
rcrb
mov
test
adc
mov
rorb
push
mov
call
imull
arpl
jo
sti
jns
repnz
mov
mov
push
jmp
jg
cmp
mov
call
xchg
mov
les
inc
insl
push
fisttpll
push
int
mov
jno
rorl
int3
mov
sbb
xor
gs
push
pushl
orl
outsl
pop
ss
ds
sbb
lcall
mov
or
cwtl
xor
lret
push
lock
lret
cmp
add
inc
mov
pop
mov
xor
cwtl
inc
mov
push
pushf
cmpsl
out
push
cmp
add
and
gs
js
jne
dec
in
xor
in
jb
mov
fmuls
inc
jp
test
shrb
xor
sub
pop
fdivs
dec
pop
push
lock
xchg
icebp
mov
sub
jb
mov
and
cmp
or
out
pusha
icebp
push
addr16
xorl
in
test
rol
push
lret
insb
fs
sbb
inc
push
pop
fwait
sbb
cltd
dec
rol
cld
jno
jno
repnz
cwtl
sub
into
out
js
das
dec
or
mov
mov
pop
sbb
cmova
loop
xchg
sub
cmp
pop
push
nop
and
fisttpl
je
or
les
xchg
mov
inc
jge
stos
call
outsl
sub
pop
mov
pop
arpl
inc
inc
shll
call
daa
dec
movsl
mov
pop
lret
bound
lods
fwait
pushf
push
mov
mov
lods
pop
addr16
xchg
sbb
lods
fxch
add
mov
inc
pusha
add
sbb
jle
sbb
iret
add
pop
mov
xchg
adc
out
mov
sbb
mov
imul
push
pop
das
mov
and
cli
packsswb
outsl
jg
in
popa
icebp
dec
pop
adc
inc
insb
cltd
fdivs
mov
lcall
mov
push
push
adc
sti
aaa
jb
cmp
adc
and
rol
xor
pop
inc
or
adc
adc
adc
push
lea
inc
mov
adc
das
fmull
lock
repz
adc
lock
jl
frstor
xor
pop
lock
or
test
call
xor
jno
and
sub
fmull
push
inc
add
cwtl
inc
or
adc
frstor
mov
pop
out
and
loope
and
inc
adc
daa
dec
adc
xorl
mov
lods
add
daa
jo
push
push
loope
loop
call
add
ret
sub
loope
push
push
jmp
sbb
xchg
sub
fisubrl
cmp
movl
iret
pop
add
push
sbb
xor
mov
dec
inc
pop
sar
push
cli
adc
divl
and
adc
rolb
popa
and
mov
and
mov
and
xchg
jg
test
sub
scas
push
mov
loopne
pop
in
sub
stos
decl
xor
dec
fcomi
repnz
testl
pop
push
xor
lcall
out
jae
out
loope
out
add
in
push
sub
xchg
fdivrs
add
negl
aaa
div
fisttps
xor
sub
sub
popa
adc
and
sbb
stc
jae
xlat
shrl
or
pop
add
add
stos
mov
mov
xorb
aam
subb
pop
inc
add
sbbb
xor
fdiv
insl
cmpl
dec
lock
adc
add
test
mov
xor
mov
pop
fdivs
jg
dec
push
cmp
mov
ret
testb
push
adc
lods
pusha
and
adc
cmp
and
adc
sub
fidivs
jnp
insl
and
mov
push
sbb
or
add
push
fistps
pop
das
add
mov
add
and
inc
dec
mov
sub
jnp
je
cmpsb
cmpb
push
lahf
adc
iret
pop
cmp
sti
adc
or
les
xor
sbb
movl
shll
cmpsl
mov
sub
test
in
pop
inc
mov
xor
mov
pop
xchg
inc
ljmp
mov
adc
mov
sbbb
jge
dec
cmp
push
add
or
out
pusha
loopne
sbb
mov
sbb
pop
test
enter
xchg
mov
xchg
inc
mov
cmc
je
test
push
mov
cli
pop
jo
push
les
add
outsb
inc
lods
or
aaa
js
test
inc
adc
imulb
nop
mov
push
movsl
lds
iret
mov
pop
xor
sbb
jo
sahf
mov
outsl
mov
dec
mov
sub
push
inc
mov
dec
adc
aaa
subl
popf
adc
add
mov
std
or
or
in
test
nop
fsubl
int3
mov
pop
test
ss
enter
or
jge
mov
push
inc
lahf
sbbl
cli
test
js
lock
xchg
push
pop
insl
clc
push
cmp
imul
hlt
sbb
or
push
popf
mov
and
mov
pop
loopne
mov
shr
bound
push
aad
mov
les
jge
add
int
lock
subb
test
add
sbb
enter
outsl
clc
add
adc
inc
and
mov
sbb
add
push
xchg
lret
mov
and
adc
dec
nop
pop
sahf
pusha
in
decl
stos
test
insb
pop
or
popf
add
jge
mov
pop
jo
cmp
loopne
mov
loop
mov
lock
call
fistps
shrb
jno
sub
repz
pop
loop
mov
pop
add
insl
jns
outsb
popf
pushf
ret
stos
in
das
hlt
xchg
jo
jo
popa
gs
fdivs
das
adc
sub
mov
push
mov
jo
inc
andb
psubw
jecxz
stos
and
pop
sub
and
outsb
repnz
jg
imul
cmp
adc
out
test
int
loope
xor
sub
inc
cmc
test
jbe
daa
jns
out
or
jno
add
popl
mov
sub
fcomps
out
inc
cwtl
in
and
hlt
inc
xchg
fisubs
jge
test
insb
or
sbb
push
xor
dec
xor
sbb
fbld
push
lret
add
cmc
ret
lret
sar
fildll
clc
repz
dec
jmp
in
rcl
outsl
ljmp
adc
sbb
rorb
mov
pop
test
sub
mov
sbb
adcl
loop
or
mov
push
cli
pop
movsl
ljmp
xchg
aaa
dec
lods
sbb
pushl
leave
push
ljmp
inc
cs
xchg
cmp
dec
scas
sub
or
cmp
or
and
sub
push
mov
sbb
inc
test
dec
loop
roll
mov
shll
fcmovu
mov
mov
fwait
push
add
fstl
or
cmpsl
arpl
out
mov
andnps
inc
cmp
imulb
add
mov
add
imul
cmp
aas
inc
rorb
test
cld
orb
mov
push
push
or
outsl
std
adc
xchg
or
fadds
call
push
add
sbb
inc
andb
add
inc
loope
xchg
pusha
mov
mov
xchg
xor
sti
fisttpl
stos
decb
xlat
add
cld
or
in
addl
pop
xor
fstpt
stos
mov
push
or
cli
push
insl
dec
mov
push
in
lea
lea
xchg
xor
mov
pushf
dec
test
add
mov
or
or
mov
dec
mov
cmp
in
add
div
mov
xchg
mov
in
inc
dec
test
add
call
ds
insb
adc
lods
std
push
gs
cmp
lret
outsl
in
inc
mov
cmp
xor
fisttpl
mov
add
push
imul
insl
jmp
sbb
pop
fadds
rcrl
mov
mov
movb
and
movsb
jmp
rolb
jl
dec
mov
or
loopne
sbbb
sub
js
les
jl
aaa
sbb
sbb
adc
jo
inc
dec
jecxz
sbb
xchg
or
mov
outsb
pop
call
scas
js
xor
fsubrp
xchg
jmp
fiadds
xchg
mov
mov
inc
dec
or
outsl
insb
fistl
mov
cltd
test
lods
mov
sbb
xchg
adc
dec
lret
push
inc
push
mov
std
aam
cli
inc
fs
outsl
xor
or
out
mov
sahf
xchg
test
lock
jp
orl
push
adc
mov
ficoms
or
pop
dec
pusha
or
outsb
pop
cs
int
pop
inc
sub
pop
cmp
aas
jp
pushl
sbb
bound
sbb
xchg
push
sbb
jecxz
mov
je
sahf
clc
mov
inc
les
repnz
ret
movsl
cmp
sbb
push
pusha
jecxz
out
in
test
push
lock
scas
xchg
cmpsb
call
xchg
fnstenv
add
mov
add
lock
out
sbb
dec
adc
push
inc
cld
pop
cs
fcoml
pop
mov
test
fcomp
adc
pop
pop
ja
add
das
pop
jg
test
push
lods
mov
mov
sahf
fldl
jno
adc
xchg
lret
ficomps
inc
pop
adc
sahf
sbb
cwtl
bound
fdivrs
fwait
and
dec
ss
filds
add
and
insl
mov
mov
mov
inc
cltd
out
or
push
cmpsb
pop
sahf
pop
mov
bound
in
push
aam
rcrl
pop
shr
push
ljmp
movsb
mov
sbbb
mov
filds
sti
dec
mov
adc
mov
or
adc
test
outsl
scas
out
sbb
ret
lcall
in
repnz
jno
pop
inc
filds
out
sbb
mov
pop
sbb
or
cld
inc
pop
mov
pusha
xor
lock
cld
sahf
enter
push
dec
stos
mov
mov
cmp
enter
pop
sbb
mov
lods
xchg
and
inc
outsl
imul
enter
push
and
rorl
iret
jge
mov
jb
orb
mov
xchg
dec
adc
inc
push
paddb
jp
out
out
mov
dec
add
sbb
add
es
dec
negl
addb
mov
out
movsl
stos
inc
cmp
push
fs
xchg
or
in
mov
mov
or
or
in
mov
and
jae
cmp
xchg
loope
stos
inc
pop
sub
add
push
mov
call
pop
lods
pop
inc
add
jecxz
loopne
loope
ret
sub
push
jo
jo
push
push
call
mov
cmpsb
loop
cmpsl
push
mov
dec
xor
ret
ljmp
movsl
ja
imul
stos
cmp
jge
jne
push
nop
cmp
or
push
pop
add
lret
mov
test
pop
push
imul
sub
sub
or
sbb
insb
cmpsb
mov
loop
ficoms
out
ss
jle
out
xlat
outsb
fmuls
pop
push
jmp
icebp
stos
pop
ljmp
in
mov
psubd
xorb
cmc
add
mov
out
shlb
lcall
movsb
cs
fnstenv
pop
cltd
test
mov
lcall
popa
ficoml
repnz
jne
daa
push
adc
test
outsl
fisttpll
pop
mov
sbb
adc
mov
push
loop
lret
sbb
mov
pushf
lcall
mov
dec
cld
jae
repnz
outsl
decb
pop
jnp
shl
std
add
push
cli
push
dec
sbb
inc
mov
cli
mov
push
test
hlt
movsl
pop
rcrl
jae
rcll
icebp
and
inc
fsubl
fwait
cmp
mov
sbb
test
sub
insb
mov
ret
sub
sub
xchg
jbe
mov
pop
clc
mov
add
add
dec
dec
or
add
clc
add
into
les
jbe
es
test
jp
shll
sub
mov
mov
xchg
cmp
xchg
sarl
mov
cld
test
mov
jge
fisubs
repz
inc
aaa
clc
rcr
loope
sub
in
lock
jle
inc
je
cltd
jecxz
ja
sub
sub
paddw
mov
test
jae
xchg
mov
xchg
xchg
pop
test
das
inc
orl
leave
xchg
mov
mov
and
filds
sbb
pop
mov
jne
add
ja
lret
outsb
insl
and
fdivs
xchg
leave
push
call
sbb
in
sub
imul
cmp
bound
dec
jp
cmp
dec
mulb
push
inc
aaa
rcll
push
jg
adc
push
push
mov
sbb
jle
data16
push
push
lret
dec
jmp
mov
mov
outsl
pop
subb
lock
std
pop
mov
inc
mov
std
dec
xor
mov
xor
dec
mov
sbb
idivb
jecxz
sub
mov
xor
fwait
inc
or
or
inc
stos
cmp
mov
or
or
arpl
or
test
popf
mov
and
loope
jp
jecxz
imul
mov
filds
jnp
mov
add
adc
lock
jge
cmp
loope
stc
inc
das
push
push
ss
or
or
xchg
adc
out
mov
mov
xchg
in
push
ljmp
inc
lret
int3
arpl
push
scas
loope
pop
sbb
xbegin
pop
cmc
or
mov
ljmp
mov
pop
push
and
inc
push
add
clc
cmp
in
or
add
sub
mov
sti
push
lea
and
mov
sbb
in
jnp
int3
inc
xchg
ds
fdivr
jmp
pop
test
xchg
mov
dec
push
inc
push
sub
lret
add
inc
jns
lods
mov
xor
mov
or
into
cmc
idivb
xor
shl
adc
mov
lret
sbb
inc
mov
test
lds
push
mov
lods
and
arpl
std
and
scas
imul
mov
sbb
lcall
adc
mov
pop
dec
pop
mov
jecxz
sub
sbb
cmpsb
inc
adc
mov
xchg
cmp
loop
addr16
scas
cli
xor
mov
pop
or
pop
adc
aam
ficomps
sub
or
iret
mov
or
mov
mov
adcl
cmp
out
sbb
adc
adc
and
or
mov
fistpl
inc
and
sarb
stc
rolb
sub
fsubs
fidivrs
inc
imul
enter
fiadds
pop
and
addr16
loop
and
add
add
push
hlt
jmp
mov
cmp
fldcw
lcall
or
xchg
fildll
ficompl
xor
sub
fsts
test
and
dec
sub
xchg
add
hlt
flds
int
sub
cmp
mov
dec
dec
mov
lcall
mov
jns
jbe
outsb
dec
sub
in
push
sti
mov
mov
jp
fdivr
mov
std
jmp
jg
sub
jb
inc
xchg
dec
xor
push
call
jmp
das
jne
inc
or
inc
mov
pop
mov
cs
dec
xor
xlat
and
add
add
pop
clc
mov
adcl
cwtl
std
jg
pop
pusha
xor
scas
inc
push
xor
cmpsl
jmp
iret
jp
jg
neg
mov
dec
sbb
add
cmp
lock
dec
mov
lods
jb
sbb
pop
pop
in
jns
adc
cmpsb
fadd
sub
fisubrl
cld
call
sti
clc
out
test
pop
data16
jns
dec
lahf
outsb
cmpsb
pop
inc
pop
pop
imul
push
push
loope
or
push
addb
dec
pop
mov
mov
mov
xchg
cs
dec
cmp
test
popa
xor
shr
clc
mov
imul
pop
fwait
or
xor
inc
xchg
lret
pop
jnp
pop
xor
hlt
and
mov
imul
loope
or
stos
flds
aad
fists
mov
fwait
push
push
dec
lods
mov
outsl
inc
mov
es
and
pusha
pop
pop
mov
push
xchg
dec
scas
cwtl
jg
xlat
mov
sbb
test
and
inc
dec
orb
icebp
cld
adc
das
and
mov
loope
push
fs
lods
call
hlt
pop
movl
lahf
mov
mov
cli
push
sbb
push
add
aaa
pop
aam
inc
out
and
idiv
pushl
das
stc
sub
sbb
cmp
sub
xor
push
pop
xor
out
scas
sub
rclb
adc
pop
outsl
loop
call
rorb
jmp
adc
add
mov
out
lods
testl
fidivs
shr
inc
decl
sbb
ret
jne
push
xor
add
cmp
or
mov
and
jecxz
sbb
and
iret
mov
imul
pop
adc
insb
add
sub
rcrb
scas
js
cld
shrl
add
dec
mov
leave
mov
inc
loop
lods
mov
outsb
int3
push
fstpl
xor
jl
and
push
jb
add
out
pusha
orl
dec
fs
lcall
adc
adc
add
in
cmpsb
pop
mov
and
pop
dec
jno
or
mov
pusha
jns
push
cmp
loopne
xor
and
iret
or
mov
jno
inc
mov
fwait
push
xchg
mov
push
xor
aaa
pop
mov
outsl
addl
or
inc
lret
add
in
paddq
mov
std
cltd
dec
push
or
pop
adc
das
cld
aaa
dec
push
hlt
xchg
jecxz
dec
cld
mov
pop
push
scas
mov
loop
mov
push
add
add
js
push
outsb
jge
xchg
sbb
mov
call
or
inc
jns
mov
scas
xor
jo
add
lea
cmp
cmc
test
xchg
and
ds
push
mov
mov
shrl
jg
ja
mov
adc
pop
testb
pop
scas
pop
cwtl
testb
ficoms
cwtl
cltd
stos
sub
mov
sub
jbe
std
popa
xchg
push
test
and
loopne
mov
icebp
dec
push
inc
movl
or
cmp
mov
fsubrl
add
fwait
push
jo
sbb
sub
pop
enter
fmuls
push
std
imul
mov
cmp
and
adc
scas
movsb
test
psubw
sub
ficomps
or
push
jno
dec
and
lock
cli
mov
jbe
jecxz
xor
shlb
inc
jecxz
and
test
push
daa
xchg
test
loope
add
sub
outsl
ljmp
stos
out
adc
xorl
add
clc
test
mov
negb
pop
lock
les
xchg
addb
lds
sbb
loopne
loopne
fdivrl
clc
imul
push
and
sub
dec
lret
mov
mov
hlt
in
lock
dec
insl
lahf
fnstenv
mov
dec
fsts
inc
gs
ficomps
pop
in
lcall
iret
adc
jecxz
call
sbb
xchg
adc
push
dec
add
jmp
inc
pop
xor
cs
inc
ljmp
faddl
cmp
sub
adc
das
pop
fmuls
push
sbb
mov
shlb
inc
inc
pop
lea
sub
pop
adc
outsl
test
lock
insb
sbb
ret
xlat
xchg
ljmp
mov
shl
sbb
mov
dec
push
loop
test
add
lock
pusha
dec
mov
call
cmp
push
outsl
ret
ds
jae
ret
dec
cmp
pop
in
pushl
mov
aam
mov
and
test
or
sbb
adc
shl
fwait
jp
mov
daa
aaa
in
mov
mov
jns
dec
and
and
sub
jbe
xchg
adc
sbbl
xor
mov
sbb
shll
mov
pop
rcll
pop
mov
jg
push
pcmpeqd
mov
push
dec
sbb
loope
into
mov
jp
mov
clc
repnz
fisubrl
aaa
popf
mov
dec
xchg
ljmp
sub
sub
nop
fdivrp
test
pop
test
or
add
jb
cmc
daa
push
movsl
outsl
hlt
inc
jns
pop
jne
imul
daa
or
push
inc
pop
repz
cmp
rclb
or
movsl
cmpsb
and
inc
fcompl
push
pop
ljmp
push
clc
sub
jmp
aam
jb
lahf
cli
sarb
jne
bound
xor
add
lret
je
add
sub
xor
ja
fcmovnb
dec
gs
pop
clc
pop
andl
sub
mul
or
fisttpl
mov
xchg
sbb
cmc
sbb
ss
sbb
fstpt
sbbb
cli
inc
in
xor
ja
push
jmp
shlb
in
and
cmc
loope
jmp
insl
fistps
pop
inc
sub
addr16
sbb
sti
lods
pop
mov
lahf
or
js
subb
das
inc
cld
insl
sahf
ret
orb
sub
or
lea
fs
lea
pushf
cmp
add
dec
or
ret
in
push
movsb
mov
inc
mov
cs
rcrl
sbb
rol
adc
movsl
movsb
add
mov
and
sbb
dec
out
imul
xor
loope
mov
pop
push
mov
add
fdivrl
add
jle
mov
incl
jg
jecxz
xchg
inc
xor
sbb
outsl
push
clc
aaa
lret
inc
aad
fimuls
cmpb
mov
inc
pushf
mov
inc
insb
mov
stos
push
js
in
push
fistpll
sub
sti
inc
icebp
jns
fildl
aas
sub
sub
push
ljmp
out
shr
mov
repz
aas
dec
xchg
cmp
lds
dec
push
ror
notb
or
mov
pop
pop
mov
or
adc
test
pusha
std
jmp
mov
das
iret
jnp
adcb
mov
pop
fisubrs
outsb
cmpsl
jne
xor
lock
inc
adc
out
xchg
mov
lock
inc
aam
sub
js
lock
mov
or
sbb
and
xchg
fcoms
mov
jmp
jb
inc
pop
mov
rorb
imulb
pop
push
mov
cmp
jnp
lock
mov
daa
dec
inc
mov
push
push
push
add
ljmp
xor
push
rorl
aaa
into
jl
sbb
push
cmpsl
mov
pop
jae
scas
mov
fisubl
ret
pop
ret
aaa
sbb
outsl
cmpsl
lcall
cmp
mov
insl
xchg
mov
shlb
rcrb
fwait
inc
push
lcall
or
dec
or
addr16
lock
call
inc
xlat
subl
lret
or
mov
push
push
addl
les
add
out
test
xor
out
mov
mov
xchg
jae
loopne
loope
adc
leave
add
out
sub
cld
out
test
mov
jno
sahf
adc
xchg
cmp
pop
add
test
adc
pushf
rorl
cs
icebp
incl
cld
or
adc
adc
test
je
idivb
clc
inc
xlat
xchg
mov
mov
stos
push
and
in
or
sub
cmpsl
aaa
dec
lea
int
das
std
daa
jle
dec
jmp
inc
adc
int3
adc
fcomip
xchg
in
movsb
mov
inc
sbb
or
stos
sub
pop
loopne
clc
les
cmp
push
test
into
sahf
dec
jg
pop
lcall
aam
scas
mov
rcl
or
adc
out
shr
ds
sub
cwtl
cmp
test
ret
xchg
popf
jl
enter
jg
ljmp
aam
js
mov
subb
fadds
jne
and
mov
cli
mov
sub
sbb
push
mov
aaa
imul
adc
inc
int3
cmp
inc
xchg
mov
addr16
and
bound
inc
mov
cld
fstpt
adc
cmp
addr16
pop
xchg
or
xorb
outsb
lods
adc
out
push
aam
in
aaa
cld
test
dec
xchg
shrl
es
js
cmc
outsl
movsb
cmpsb
lret
fmuls
add
xor
mov
and
pop
loopne
mov
sbb
out
xor
enter
xchg
iret
xchg
aaa
in
call
sbbl
lods
mov
or
xlat
jbe
xor
xchg
push
push
rcrb
push
add
test
mov
push
ret
mov
fs
clc
mov
shrl
cld
cmp
jb
sub
inc
nop
inc
add
sti
mov
fsub
dec
dec
sbb
mov
cmp
into
mov
pop
aad
add
and
loope
hlt
dec
sbb
clc
mov
inc
lret
dec
es
jg
fs
iret
xor
pop
inc
ret
popa
scas
arpl
imul
push
and
rorb
push
sub
xorb
jg
and
test
ljmp
push
jecxz
push
mov
sub
or
in
mov
jle
in
sbb
int3
xlat
call
inc
push
sbb
movsl
cld
lds
mov
xchg
shlb
mov
or
loopne
and
arpl
and
lcall
or
and
jo
and
push
xchg
adc
and
mov
inc
add
leave
stos
add
adc
or
notb
jmp
or
push
cmp
pop
lds
xorb
add
testb
and
hlt
fsubl
jg
jne
lea
aad
or
sub
xor
dec
les
jl
push
dec
mov
mov
add
inc
jge
adc
aam
xor
jp
push
xchg
cmp
add
jmp
cmc
mov
add
loopne
hlt
mov
or
fs
insb
fmull
loop
movsl
iret
add
or
sbb
arpl
xchg
sbb
outsb
adc
fadd
push
rcrb
int
ljmp
fidivs
or
sbb
rcl
dec
add
mov
and
push
mov
cmp
js
add
fadds
pop
cmp
and
cs
fadds
icebp
sbb
fdivrs
outsb
jmp
add
cmp
sub
mov
and
lods
sub
fisubl
push
mov
les
movzbl
mov
xchg
pop
mov
popf
lahf
or
adc
ss
adc
ja
icebp
adc
ljmp
dec
sub
ja
lret
cmpsb
and
sbb
out
cmpl
ja
add
sbb
cli
dec
stos
cli
jp
pop
hlt
loopne
test
sub
push
repnz
push
sbb
sub
push
jo
push
in
les
adc
pop
sahf
add
push
cwtl
and
xor
decl
shll
push
les
dec
add
outsl
ret
rcrb
inc
sbb
in
lret
ret
sub
outsl
dec
inc
jno
inc
inc
cli
call
pushf
adc
test
ljmp
push
rorb
push
push
xor
sub
push
ret
and
ja
and
sbbl
mov
inc
push
and
sub
cmc
mov
ret
push
iret
jge
inc
cltd
adcl
or
int3
mov
push
rcrb
mov
sbb
xchg
sub
and
pop
lods
ljmp
addb
in
cmpb
pop
push
loopne
fistpl
aas
inc
jl
test
add
jmp
add
pop
push
add
and
test
inc
and
lods
jge
or
or
and
and
or
sti
neg
mov
adc
adc
inc
add
adc
add
outsb
mov
sbb
dec
or
inc
inc
nop
or
outsb
inc
cmp
inc
and
adc
add
adc
and
add
and
dec
mov
mov
test
es
and
and
in
mov
mov
and
and
orb
jne
and
inc
and
js
adc
jnp
mov
test
nop
add
nop
inc
ds
sti
mulb
and
mov
and
lods
frstor
jl
sub
pop
imul
mov
and
jne
fstpl
in
mov
movsb
dec
insl
lcall
or
or
adc
pop
mov
add
and
imul
mov
mov
add
and
mov
out
sub
and
and
scas
and
test
push
adc
pop
xor
das
or
scas
mov
imul
imul
adc
pusha
or
pop
imul
adc
jae
dec
mov
sbb
pop
fistpl
adc
inc
sub
fcmovnu
jl
scas
aas
inc
or
jle
test
mov
xor
jno
or
pop
xor
mov
pushl
nop
or
data16
pop
imul
mov
jp
push
xchg
test
xor
outsb
int
xlat
push
xchg
inc
sti
mov
out
cmp
and
inc
push
or
loope
lcall
add
insb
test
aaa
add
push
loopne
imul
ljmp
or
add
les
xor
pop
sub
and
jns
or
sbb
jae
mov
mov
mov
adc
jle
dec
push
pop
imul
movsb
and
jmp
cli
adc
inc
stos
inc
pop
ret
xor
and
insl
pop
sub
xor
ss
fwait
jae
sarl
pop
arpl
xchg
push
add
mov
mov
push
nop
mov
cmp
sbb
xor
nop
fisubl
roll
fwait
pusha
sub
fildl
lahf
test
test
pop
sub
jge
rorb
imulb
sub
or
imul
xor
rorl
jbe
mov
ret
dec
cmp
sub
lods
cmp
pushf
ret
and
cwtl
push
mov
mov
xor
outsb
and
arpl
shl
lods
adc
sarl
arpl
push
cmp
fldcw
pop
test
xchg
push
call
pop
jecxz
cmp
jae
sub
fistpl
inc
rcrl
inc
push
aaa
addr16
sub
add
int
sub
lea
pop
pop
jae
or
push
pop
xor
xor
or
mov
insl
incb
mov
adc
jne
or
push
sub
inc
jns
jo
push
shl
mov
sbb
xchg
xor
nop
mov
adc
sbb
scas
jp
sbb
imul
and
push
int
fcmovu
test
inc
and
xchg
rclb
adc
dec
cs
fwait
jae
insl
scas
adc
adc
pop
xchg
push
cmpsb
push
jb
xchg
and
mov
pushw
and
jmp
adc
jne
nop
mov
popf
push
inc
push
add
ficompl
inc
jp
fwait
ret
mov
nop
inc
xchg
xchg
and
pop
lods
mov
and
aad
rorb
mov
push
or
out
aam
loope
push
and
and
sbb
mov
or
jb
push
mov
push
xlat
pop
imul
adc
pop
sarl
sahf
dec
dec
in
nop
sbb
rcrl
stc
and
test
in
push
dec
lods
rorl
test
cmp
xor
xchg
mov
pushl
jns
adc
into
aad
sbb
in
push
cmp
and
dec
int
stos
out
cs
mov
int
inc
lods
jge
aam
scas
pop
and
mov
jb
lods
jne
test
or
push
dec
dec
xchg
jecxz
push
jb
push
in
inc
mov
push
popa
data16
ljmp
test
and
in
ficompl
xor
sbb
fs
stos
insl
scas
mov
insb
mov
and
sbb
xor
test
test
test
outsl
pop
sbbb
xchg
jl
fcoms
pushw
xlat
and
pop
sti
xor
cmpsb
scas
pop
inc
bound
insb
add
imulb
sub
pusha
jb
ret
aam
or
pop
out
jg
sar
sbb
inc
xor
mov
dec
popf
push
adc
inc
shll
cs
mov
add
lahf
and
adc
dec
test
adc
rcll
inc
pop
imul
inc
dec
dec
adc
jae
mov
push
imul
dec
lcall
test
adc
adc
movsl
lahf
mov
cmp
xchg
fisttpl
out
and
pop
pop
fnstenv
test
das
mov
lea
stos
xchg
out
fcomps
sbb
add
cmp
xor
arpl
data16
add
ljmp
arpl
xchg
mov
push
push
and
adc
mov
pop
push
sahf
jo
leave
rcrl
add
loopne
scas
or
sbb
sub
jb
mov
imul
xchg
cmpsl
jno
insb
scas
sbb
xchg
cmp
imul
xor
mov
cmp
arpl
das
pop
and
das
fs
addb
mov
inc
shll
movsb
pushf
and
icebp
ret
xchg
sbb
add
int
push
jb
pop
pop
jae
sbb
adc
test
mov
cmp
mulb
dec
pop
mov
roll
ret
addl
cltd
jle
popf
inc
jo
mov
sbb
cmp
add
or
daa
aas
stos
int
pop
imul
mov
add
or
mov
xchg
push
jae
mov
testb
inc
jno
xor
mov
fsubrs
inc
mov
test
subl
xor
sub
mov
roll
inc
push
xchg
pop
pop
je
xchg
fldt
out
mov
push
je
rol
pop
dec
imul
add
imul
rorb
dec
icebp
dec
inc
jae
rorb
jecxz
jl
adc
cli
inc
or
add
mov
lcall
je
andl
push
adc
gs
jecxz
sub
rorb
xor
test
add
call
mov
test
data16
cmp
clc
xchg
ljmp
mov
mov
pusha
or
fsubs
jnp
rorb
pushf
lahf
out
push
dec
xor
aam
ss
push
nop
pop
adc
scas
xchg
imul
lock
cs
inc
shll
movsl
dec
sarl
adc
movsb
jp
mov
cs
jo
orl
fwait
stos
test
pop
xor
dec
add
cmpsl
call
or
lcall
aam
enter
add
inc
into
mov
inc
cmp
mov
push
nop
pop
pop
push
out
movsb
repnz
add
icebp
imul
inc
mov
int
pop
addr16
sub
jo
pop
mov
dec
inc
xchg
mov
adc
sbb
imul
aas
mov
sbb
push
jne
push
cmp
cmp
and
test
imul
cmp
cmpsb
pop
and
jmp
add
xchg
loop
cmpsb
or
dec
pop
pop
push
xchg
and
mov
pop
cs
jp
inc
xor
lcall
in
leave
mov
cmp
and
testl
and
cmp
or
adc
int
insl
lods
dec
gs
and
pop
lods
or
pop
add
dec
popa
mov
and
out
push
jae
mov
cmp
dec
cmpsb
fiaddl
test
sub
adc
and
subb
imul
xchg
stos
in
rorl
xchg
mov
orl
gs
dec
js
add
adc
push
or
cs
adc
add
sub
adc
dec
pusha
mov
dec
and
jo
dec
xlat
pop
lods
add
insb
lret
jne
ss
jnp
cs
int
imul
add
mov
mov
push
and
in
js
or
xor
push
xchg
jb
pop
into
mov
adc
cmpsl
xlat
pop
xor
pusha
xor
inc
push
in
inc
adc
pop
fwait
inc
xor
push
sarb
and
pop
popa
adc
into
nop
imul
daa
inc
insb
add
ja
incb
loope
insl
dec
loop
push
inc
xor
in
lock
jp
xchg
and
add
or
xor
pusha
push
stos
cmp
push
inc
notl
lret
sbb
mov
sub
dec
movsl
into
inc
add
cs
sub
mov
fs
lods
add
dec
adc
jne
xor
xchg
inc
and
pop
test
sub
lcall
cmp
inc
addr16
int
lods
pop
and
push
push
rorb
push
sub
and
lcall
inc
and
test
sub
inc
jg
out
cs
icebp
enter
or
sbb
push
lds
inc
cmp
mov
ss
or
subb
add
cmp
add
lods
adc
dec
aaa
mov
add
or
lret
jmp
loope
add
xor
decl
shlb
jp
test
sub
push
xor
push
jo
jo
pusha
fs
jo
ret
cmp
jmp
ret
jmp
inc
and
dec
rcrb
mov
jle
insl
int
push
mov
pop
mov
inc
dec
flds
inc
xor
xchg
mov
test
outsb
arpl
insl
xor
cmp
cs
push
or
test
push
out
loopne
adc
rcl
jmp
icebp
adc
inc
and
mov
pop
or
aam
jnp
mov
pop
and
scas
adc
jb
dec
push
fldt
sbb
mov
and
pop
xor
jbe
inc
jae
fidivrs
adc
lods
xor
aaa
inc
xlat
sbb
daa
lcall
xchg
jne
scas
xor
cmp
mov
or
cmpsb
sbb
cmpsb
inc
jae
dec
mov
push
or
andb
or
into
mov
push
into
xchg
xchg
shll
stos
lea
in
push
sti
cwtl
xchg
mov
es
adc
cmpsl
lcall
into
add
test
cmpsl
stos
xor
push
in
cltd
pop
add
jecxz
bound
call
cmp
inc
daa
bound
test
push
or
mov
dec
aad
aad
pop
inc
fdivr
add
cmc
sub
outsl
pop
sbb
scas
stos
adc
inc
mov
add
dec
or
inc
fwait
imul
mov
mov
test
imull
sub
pop
lods
cmp
dec
mov
sbb
xor
push
mov
das
aad
xchg
mov
dec
and
push
pushf
xor
enter
adc
inc
scas
sbb
pop
xchg
pop
cmp
push
int
push
xchg
and
pop
shl
or
push
and
mov
xchg
cmp
or
push
add
cmp
push
xor
or
and
inc
icebp
jne
cwtl
lea
and
and
push
push
shll
lcall
fs
pop
sbb
adc
scas
stos
add
adc
sarl
out
scas
inc
xchg
adc
add
wbinvd
test
sub
loopne
movsb
imul
pop
test
shll
push
add
and
xor
fdivrs
dec
jb
push
xchg
leave
fisttps
push
adc
pop
pop
cmp
cs
addb
loopne
dec
add
pop
rcrl
sub
scas
mov
or
push
sub
add
jo
cmp
push
sarl
add
push
dec
mov
adc
or
xchg
or
fsubs
fistpll
pop
cmp
fs
jns
cmp
sub
inc
movsb
nop
jmp
xchg
mov
ficompl
rcrl
jle
rolb
push
lea
add
je
mov
xor
mov
lret
adc
sub
cmc
test
lcall
mov
push
or
test
xor
repz
bound
rorb
mov
popa
ret
vprotb
push
mov
and
arpl
imul
xor
jno
dec
mov
push
xlat
sbb
stos
add
mov
lcall
nop
mov
rcl
enter
or
inc
in
and
andl
rolb
push
insl
and
data16
pop
sbbl
pop
pop
adc
test
xchg
push
fadd
inc
push
ficoml
shll
inc
xor
in
pop
cwtl
pop
rcrl
in
test
cs
and
pop
sub
sbb
or
in
xchg
pop
add
dec
add
xchg
or
nop
or
xor
pop
and
pop
cmp
aam
add
jb
in
add
sbb
mov
xor
pop
inc
es
sbb
or
adc
add
sbb
into
mov
dec
out
aam
pop
bound
add
scas
es
nop
cli
arpl
ret
xchg
out
sub
xorl
outsl
jbe
sbbl
rcrb
inc
sub
enter
lcall
mov
and
mov
xchg
push
cmp
in
and
or
ret
push
movups
cmp
pop
cmp
or
xor
dec
lret
in
push
xchg
xchg
adc
lahf
add
or
mov
ljmp
test
mov
clc
subl
fisubl
or
test
je
subl
sbb
aad
loopne
mulb
into
xor
jle
pop
push
or
mov
xchg
cmpsl
out
inc
pusha
adc
sbb
ss
rol
mov
xchg
sub
mov
sbb
ret
sub
push
dec
mov
popf
push
mov
int
scas
add
push
sbb
jb
pop
adc
and
dec
sub
jo
lock
ja
pop
xor
fwait
push
dec
xor
push
popa
cs
rolb
mov
inc
daa
or
daa
mov
dec
ret
add
sbb
in
jge
dec
ret
enter
and
call
arpl
outsb
adc
xchg
mov
out
aaa
push
xchg
iret
sahf
mov
imul
out
inc
cmp
add
mov
testl
inc
call
rcl
inc
cmp
fstps
mov
inc
jl
psrad
cmp
iret
add
push
add
push
mov
or
fsubs
push
cmp
inc
and
xor
aad
adc
inc
pop
movsl
push
pop
or
or
lcall
sarb
and
dec
add
cmc
and
popa
mov
inc
push
sub
inc
cmp
jecxz
cmp
push
cltd
and
sub
pop
ret
xchg
clc
pop
jns
mov
and
mov
jne
mov
daa
cmp
or
inc
fdiv
aad
xor
xchg
xor
xor
shll
sbb
jo
add
jae
mov
ljmp
push
loopne
pushf
adc
inc
jne
fmuls
data16
ja
pushf
loope
scas
stos
fwait
dec
xor
push
xor
dec
push
dec
fsub
xchg
xchg
insl
and
mov
and
js
xchg
pushf
mov
enter
mov
mov
mov
je
js
cmp
es
imul
jb
dec
movsl
fisubl
outsl
test
enter
or
es
and
jg
push
pop
fistpl
cltd
dec
in
cmpsb
fistpl
xor
sbb
adc
lock
call
pop
data16
jo
pop
jmp
test
mov
xlat
arpl
es
add
sbb
rorl
pop
add
iret
or
push
in
mov
mov
stos
jl
xor
arpl
mov
cwtl
cltd
push
sub
js
ljmp
flds
mov
popa
loope
test
xor
xor
dec
jbe
and
mov
sbb
test
pop
gs
sub
xlat
int
je
fsubl
and
inc
xchg
jae
mov
sub
add
push
pop
push
sub
jmp
in
add
out
mov
loopne
mov
push
xchg
xchg
out
lock
scas
sti
or
loop
inc
push
push
mov
dec
xchg
jg
or
lahf
jmp
mov
loope
pop
adc
ljmp
push
pushf
cltd
outsb
xor
and
mov
leave
adc
add
jl
inc
jae
mov
loope
xor
add
push
sub
adc
add
test
out
mov
xor
push
push
int
push
pop
xchg
les
xlat
popa
fimull
add
or
jp
loope
imul
andb
pop
in
loope
push
pusha
int
scas
sbb
pop
test
mov
adc
adc
dec
mov
and
xlat
and
cmp
scas
and
in
inc
out
rolb
test
push
pushf
or
mov
inc
add
lock
and
push
lock
test
sub
mov
or
shr
lea
scas
push
push
jb
cwtl
movsb
jae
das
mov
test
addr16
sub
mov
push
adc
and
adc
cmp
mov
mov
mov
loope
inc
and
rolb
add
and
mov
cmp
test
call
push
stos
inc
pop
xchg
roll
cmpl
inc
sbb
sahf
mov
ret
mov
lret
stos
xchg
popf
stos
pusha
lret
mov
sub
inc
push
notl
aam
inc
and
lods
mov
or
sbb
fisubrl
or
sbb
lret
pop
dec
jnp
jnp
fbld
sbb
enter
xor
sbb
pop
pop
cmp
jnp
shrl
xor
addb
sbb
jb
aaa
inc
or
and
das
lea
leave
push
roll
push
icebp
rcl
ja
pop
out
pop
in
sbb
adc
sbb
cmp
inc
pop
mov
pop
jp
mov
loopne
jno
cmp
int
mov
and
and
jne
out
nop
fsincos
and
sub
mov
and
addb
shl
fcomps
rol
jbe
adc
mov
jnp
mov
and
xchg
icebp
inc
or
mov
in
cld
fs
sub
sub
test
or
inc
jmp
loopne
pop
test
movl
jo
lea
aaa
inc
inc
add
test
xor
or
test
fists
inc
mov
add
hlt
mov
pop
add
jg
adc
adc
add
push
cmpsb
call
or
cmpb
pop
xor
dec
pop
or
mov
cmp
clc
repnz
jno
mov
inc
mov
push
mov
and
add
mov
inc
lods
push
es
mov
mov
enter
xor
inc
xchg
push
std
push
push
cmpsl
mov
data16
lret
sub
push
or
push
sbb
inc
cmp
test
fdivr
jmp
sub
cmp
jnp
shrb
push
push
lods
mov
stos
aaa
dec
test
adc
and
sbb
sbb
push
inc
pop
andl
out
add
push
scas
bound
sbbl
or
adc
ss
mov
aaa
and
add
xchg
ret
and
icebp
lcall
mov
add
out
or
push
and
xor
mov
or
and
jne
loop
or
into
add
sub
jecxz
or
inc
add
mov
pusha
cwtl
std
sbb
add
adc
loop
andb
aam
cmp
or
dec
gs
or
adc
dec
adc
sbb
cmp
rorb
and
sub
data16
movsl
add
pop
mov
dec
mov
push
sbb
stos
ss
subb
inc
jle
jg
inc
dec
cmc
mov
inc
lods
mov
enter
pop
add
fdivrs
mov
sub
inc
scas
xchg
mov
mov
ret
scas
mov
and
lcall
pusha
out
jge
mov
aaa
inc
xor
shrl
addb
sbb
inc
xor
js
push
pop
xor
add
mov
imul
adc
jne
cmp
gs
and
ret
mov
add
jb
enter
shrb
push
xor
lods
sbbl
nop
inc
cmp
xchg
xchg
dec
inc
or
dec
fwait
mul
test
cwtl
jp
xchg
enter
mov
stc
stos
lcall
std
mov
cmp
popa
dec
pusha
jb
cmp
xchg
in
push
sbb
xor
adc
and
sbb
sahf
mov
push
imul
add
aaa
fdivrl
addr16
or
sbb
fwait
mov
push
jp
add
push
test
xor
call
fimull
sbb
mov
mov
rcl
inc
jle
add
push
sbb
push
jmp
push
popa
or
lods
cmp
dec
mov
push
push
lret
mov
pop
mov
push
cltd
lcall
xchg
mov
dec
add
xor
mov
movsb
adc
dec
lods
xchg
pop
pop
rolb
stos
pop
popl
sahf
or
repz
aam
pop
cs
aad
add
pop
xor
lods
add
dec
xor
mov
lods
xor
cmp
pop
push
push
push
insl
into
outsl
push
xor
mull
ret
stos
fcmove
pusha
xor
or
pop
and
cs
dec
lods
es
test
pushw
pushl
add
pop
xlat
outsl
in
inc
xor
aas
push
sub
cli
outsl
imul
push
loopne
push
cmpsb
sub
add
int
movsl
mov
sahf
push
inc
insl
shlb
xor
sub
sub
test
inc
add
data16
stc
push
mov
push
jecxz
test
gs
inc
stos
inc
mov
mov
pop
pop
adc
cs
mov
sub
pop
aad
inc
jae
add
addr16
mov
fsubrs
call
pop
loope
inc
sbb
xor
adc
cmp
sahf
jns
nop
pop
push
push
jae
mov
fcom
inc
jae
testb
outsl
icebp
add
lods
and
and
push
imul
nop
orl
inc
xor
stos
inc
dec
mov
ret
rcr
sbb
lcall
and
ljmp
jg
cmp
test
xchg
lods
xor
add
push
xor
sub
cmpsl
dec
mov
lock
push
pop
jb
inc
imul
dec
adc
inc
sub
jbe
aam
or
pusha
push
out
pop
push
xor
mulb
dec
lods
les
orl
lret
lods
test
add
and
add
cmp
cld
cmp
xchg
lods
test
xor
gs
add
cmp
inc
xor
out
pusha
ret
push
add
xchg
or
int
and
xchg
pop
push
pusha
ret
je
arpl
xchg
push
adc
pusha
push
inc
lods
add
pop
stos
movsl
sub
cmc
mov
xor
shl
jbe
dec
imul
daa
repnz
mov
or
add
mov
add
xchg
rolb
adc
adc
push
push
mov
nop
mov
xor
sbb
mov
imul
loope
and
ja
cmp
ja
mov
js
inc
push
aaa
add
inc
movsb
in
scas
adc
pop
push
testb
mov
xor
popa
mov
sbb
inc
push
or
testl
jo
add
push
mov
in
push
pop
mov
dec
pop
outsl
adcl
jo
leave
sbb
loope
addl
mov
jb
jae
repz
cld
xor
fiaddl
fisubrs
dec
lahf
outsb
xor
pop
and
pop
add
mov
subb
dec
xchg
dec
inc
adc
push
sub
ficompl
pusha
and
andb
enter
imul
and
mov
std
mov
sbbb
aas
rolb
ja
add
inc
sub
or
leave
push
les
jns
adc
and
xor
adc
and
test
push
int
xor
in
xchg
lret
push
scas
out
in
sbb
aad
std
je
hlt
jl
test
pop
les
sub
inc
sbb
or
xchg
adcl
pop
sti
iret
jae
jo
adc
cmp
scas
inc
cmp
in
nop
ret
test
adcb
jb
inc
mov
or
or
gs
sbb
sub
inc
iret
xchg
in
cwtl
or
sub
ficompl
into
fs
clc
mov
nop
sbb
and
fdiv
mov
inc
or
push
inc
cltd
xchg
into
in
cmpsb
testb
mov
js
or
xor
fsubrl
pop
jno
dec
stos
mov
js
mov
add
mov
or
or
jne
sbb
pop
dec
pop
rclb
scas
adc
xchg
sub
cmp
pop
fs
loopne
xorb
pushf
and
xor
sub
icebp
and
dec
push
addr16
sbb
add
ret
mov
mov
xchg
test
mov
cmp
xchg
test
addb
add
dec
add
cwtl
push
add
aad
inc
mov
fbld
rorl
xchg
sbb
ficoms
icebp
or
adc
sub
jne
outsl
jae
lcall
jmp
inc
or
push
inc
adc
enter
mov
inc
and
sbb
ret
test
cwtl
jp
xor
cs
jae
rclb
mov
push
xor
and
testl
jp
sarl
cmp
adc
dec
mov
in
add
push
mov
push
sbb
dec
fldcw
add
rcll
cmp
scas
jg
cltd
xor
mov
push
addr16
add
sub
push
imul
cmpl
and
sbb
push
cmpsb
mov
push
movsl
push
add
loope
aam
mov
lret
les
xor
cmpsl
push
add
dec
inc
mov
aam
enter
inc
outsb
addr16
ror
out
fdivrl
lret
or
and
rorb
add
cmp
sub
push
cltd
stos
push
jp
subb
adc
xorl
cmpsl
xor
stos
retw
push
sbb
arpl
push
cltd
fcmove
addb
enter
jne
sub
or
sub
out
gs
xchg
mov
popf
gs
cmpsb
pop
cs
out
in
dec
jo
jae
push
push
and
jae
cmpsb
out
sub
popa
test
ficoml
loopne
in
xchg
mov
hlt
test
pusha
stos
sti
xor
or
jmp
inc
inc
jae
stos
shll
sahf
sub
stos
data16
inc
fiaddl
int
or
scas
xchg
sbb
push
loopne
push
insl
lret
mov
insb
cmpsl
out
and
scas
push
pusha
jbe
iret
in
mov
pop
ja
jge
jmp
arpl
xchg
leave
addr16
inc
ret
adc
inc
test
pusha
jo
daa
enter
cmpsl
sbb
sti
stos
jae
mov
leave
add
or
push
cltd
lcall
lock
sahf
lcall
and
push
shrb
pop
aad
ror
xor
push
xor
lcall
lock
cwtl
loopne
push
or
and
or
add
jb
mov
mov
shrb
sbb
lret
notl
push
xchg
data16
and
in
and
inc
stos
pop
movsb
dec
dec
int3
jo
xchg
ret
inc
jns
mov
sbb
sbb
popa
push
and
push
enter
mov
xchg
dec
cmp
divl
in
xchg
shlb
dec
inc
mov
call
lds
cld
call
andb
test
cwtl
xor
enter
adc
adc
das
or
out
test
or
inc
push
jb
sub
push
sub
sahf
adc
mov
push
stos
inc
cwtl
cmp
mov
add
inc
add
dec
add
pop
rcr
mov
push
add
sub
sti
xchg
inc
add
scas
add
or
sub
add
mov
loopne
data16
xor
sub
dec
mov
mov
cmp
mov
jbe
add
cltd
dec
xchg
jbe
inc
xor
movsb
add
push
sti
out
pop
add
or
or
jmp
sti
mov
jmp
or
pop
inc
loopne
or
cmp
out
roll
dec
jno
and
inc
icebp
fidivs
xor
mov
cli
xchg
out
insl
mov
mov
mov
mov
and
mov
push
mov
push
aad
sbb
imul
mov
popa
lods
repnz
or
divb
or
add
dec
addl
sbb
add
xor
scas
mov
add
and
sbb
add
cs
xor
test
mov
inc
mov
or
sti
add
jne
scas
add
adc
test
push
mov
xor
les
repnz
add
int
dec
add
mov
add
jg
es
add
gs
out
inc
in
pop
rclb
add
dec
pop
add
out
mov
and
cmc
testb
ljmp
aam
xchg
fucomp
sbb
test
gs
jp
mov
stos
flds
outsb
mov
outsb
pop
ret
pop
sbb
in
or
out
add
pop
repnz
mov
cli
pop
mov
push
xlat
cmp
cltd
out
xor
xlat
mov
fbld
loope,pt
add
notl
jge
loop
adc
jmp
mov
call
das
insl
push
es
aaa
cmpsl
and
xchg
icebp
repnz
mov
ja
test
int3
clc
add
adc
mov
arpl
stos
push
mov
clc
lea
add
inc
mov
mov
insl
in
test
fbld
dec
lea
cmp
notb
sub
lods
bound
nop
insl
push
faddl
rolb
das
sub
fstpl
mov
push
cmp
pop
clc
adc
out
test
cltd
pushf
aaa
loope
aaa
pop
pop
mov
mov
sbb
mov
inc
loopne
dec
xor
mov
xor
arpl
mov
add
pop
fsubrs
mov
ds
jnp
jmp
aaa
pop
cmp
xor
in
fisttpl
fbstp
jge
sub
inc
mov
stos
dec
sub
outsl
or
xchg
inc
fwait
jecxz
pop
fs
and
or
bound
and
mov
es
testb
cmp
adc
xor
xchg
cs
or
ret
je
sub
cmp
mov
mov
xor
iret
inc
les
incl
repnz
mov
div
insl
mov
outsl
xchg
cmc
lahf
inc
outsl
or
into
pop
movsb
mov
call
ljmp
loop
iret
loopne
mov
sub
shll
xor
sbb
inc
mov
outsb
mov
test
add
jno
xchg
ljmp
daa
pop
adc
add
stos
xor
mov
jecxz
inc
repz
out
aaa
xlat
jg
and
push
push
inc
clc
add
or
aam
lret
inc
sbb
ljmp
pop
dec
inc
xchg
xchg
mov
std
repnz
add
inc
xchg
jle
gs
repz
xchg
and
add
mov
adc
das
in
dec
jmp
test
pop
cmp
insl
daa
and
push
push
jmp
and
repnz
pushl
mov
ja
mov
int3
cmp
xchg
neg
mov
rcrb
aam
jecxz
push
cmp
lods
test
cltd
xor
sbb
js
mov
sub
mov
or
sbb
je
cmpb
push
dec
imul
push
call
mov
mov
jg
push
cmc
out
enter
jbe
jmpw
push
mov
fidivl
sub
jb
jecxz
xchg
in
xor
filds
cmp
iret
inc
popa
lahf
daa
dec
xchg
xor
push
shll
and
cmpsl
outsb
fisubrl
adc
mov
or
jge
inc
mov
xlat
dec
int3
shlb
or
push
or
mov
sub
and
jecxz
neg
notb
je
adc
inc
jp
xor
cmp
sbb
xchg
mov
pushf
mov
gs
lods
cmc
movsl
push
and
clc
icebp
enter
jp
rol
negb
insl
in
or
ds
in
cmp
pop
lret
scas
lods
aaa
lock
stos
or
cmpsb
pop
sarb
into
inc
cmpsl
lock
adc
push
ja
inc
mov
nop
pop
sub
sub
and
ja
xchg
cltd
je
mov
jmp
add
loopne
movsb
inc
pop
jmp
push
adc
sbb
push
gs
das
insl
push
ss
mov
add
and
push
cmc
aaa
xor
inc
pop
push
or
xlat
cmp
push
movsb
add
mov
out
fs
jg
jg
mov
nop
xchg
fdivrl
cs
addr16
fs
clc
inc
jnp
jmp
xchg
mov
and
mov
inc
jne
push
jle
std
inc
bound
adc
push
cld
inc
xchg
mov
adc
xlat
test
add
mov
push
and
out
or
jmp
test
push
stos
mov
mov
cmc
pop
lods
addl
lods
xchg
outsb
das
xchg
cmp
and
cld
fistpl
xor
int
xchg
inc
add
push
js
outsb
ja
out
test
mov
mov
xlat
clc
das
das
lock
sub
cwtl
in
int3
loop
inc
icebp
fistps
loop
and
es
movl
data16
xor
pop
xlat
scas
imul
mov
pop
sbb
and
cmp
aad
inc
and
cltd
adc
push
in
push
mov
in
mov
or
sbb
shr
xchg
cltd
lock
icebp
movsl
pop
mov
or
or
jbe
xchg
push
xchg
mov
dec
ret
std
hlt
or
outsl
fcmovb
sub
adc
nop
jno
mov
test
mov
sti
or
inc
or
sbb
lea
mov
jmp
popa
cltd
testb
sbb
jp
in
or
sbb
push
inc
xor
xor
out
es
test
mov
inc
cmp
incl
lahf
js
jle
aaa
icebp
out
dec
sarl
rorb
popf
nop
cs
lea
xchg
cli
out
cwtl
out
mov
jle
ficomps
aas
mov
jecxz
and
adc
fcmove
cltd
test
pop
loop
dec
cltd
xor
pushf
mov
jbe
jg
add
xor
lock
push
repz
add
mov
faddl
int3
and
das
mov
cmp
andb
sbb
lock
mov
inc
stos
dec
dec
outsl
decl
movsb
adc
mov
pop
jecxz
imul
push
outsl
outsl
pop
clc
or
jnp
push
or
fsubrs
shrl
shrb
sub
jnp
mov
cld
fwait
les
mov
xor
fisubrl
imul
xchg
mov
divb
pop
js
push
jl
mov
lea
sahf
push
xor
push
movsb
and
std
cmp
mov
cmp
mov
inc
leave
adc
pop
sub
pop
std
xchg
xor
cltd
cmpb
ljmp
cmp
scas
xor
dec
movaps
sub
das
push
ret
popa
or
adc
int3
push
ret
incl
pushf
es
loope
movsl
adc
cwtl
addb
xchg
jno
fildl
decb
fwait
jmp
inc
mov
mov
out
cmp
pop
and
sub
xchg
sbb
andl
sub
xchg
aad
outsb
aaa
sub
fs
mov
rcr
fdivl
dec
or
rcl
lret
outsl
dec
dec
jg
add
scas
lds
inc
xlat
mov
jae
sbb
cmp
mov
fucomip
sbb
push
add
insl
mov
sub
test
cmp
fs
ret
clc
fucomp
mov
and
hlt
test
and
mov
mov
aaa
mov
dec
daa
dec
in
cmp
imul
mov
and
mov
xchg
inc
push
insl
mov
mov
enter
pushf
test
scas
fstl
sub
jecxz
push
mov
lock
or
push
sub
push
adc
pop
or
push
add
das
das
fs
dec
sub
xor
or
or
adc
inc
add
add
lock
push
add
fildl
jb
inc
ret
mov
sahf
and
andl
sbb
scas
inc
rcr
cmpsl
jg
push
and
fidivl
xchg
cld
jl
out
clc
inc
mov
cld
iret
xchg
xor
lods
xchg
bound
push
jl
hlt
repnz
mov
jb
int
add
dec
lret
dec
in
pusha
rcll
sbb
in
mov
push
mov
fsts
pop
mov
push
push
xchg
pop
mov
jne
dec
and
push
loope
les
call
cs
jge
sbb
icebp
jae
inc
mov
mov
clc
sub
cmp
push
jle
and
mov
jno
jne
imulb
cs
jle
xor
mov
adc
lock
mov
and
sub
mov
pop
sbb
xor
fsubrp
mov
nop
mov
mov
jno
or
jns
or
test
inc
icebp
insl
push
inc
inc
nop
aad
and
outsb
imul
nop
xchg
xchg
repnz
int
outsb
popa
and
scas
rorl
sub
popa
hlt
jb
xchg
dec
sbb
loop
add
movsl
sub
jo
das
outsl
jecxz
mov
lea
rclb
fistpl
pop
adc
test
in
mov
mov
imul
mov
adc
jne
lret
lock
shll
and
insl
mov
outsb
or
mov
clc
adc
ljmp
cmp
cmp
mov
add
lds
or
lret
cs
cmpsb
cmpsl
mov
pop
int
mov
cmpsb
ficoml
lea
xchg
out
and
mov
and
inc
mov
jae
mov
int
mov
or
xor
scas
mov
jno
das
xlat
push
pushf
ret
push
add
jge
jg
bound
xchg
xor
aam
jno
dec
jg
addb
push
xchg
and
jo
cmpsb
call
jl
push
jne
fprem1
test
daa
les
mov
loope
and
pop
ljmp
sbb
lret
scas
push
and
repnz
stos
mov
rcrl
test
ficoml
sahf
cmp
mov
or
adc
dec
es
dec
mov
cwtl
adc
test
and
mov
mov
and
mov
test
bnd
faddl
gs
mov
hlt
aas
xor
jbe
mov
ds
out
cmp
xor
mov
das
or
xchg
lods
add
xchg
mov
xchg
insb
mov
sbbb
pop
jo
mov
sub
rorl
mov
sbb
push
in
aaa
lds
jp
jp
imul
insb
aaa
loope
push
xlat
fnstsw
imul
jp
not
jne
push
mov
xchg
dec
nop
fmull
jge
shl
clc
mov
mov
xor
hlt
adc
mov
push
es
and
lahf
jle
jne
cmp
xchg
in
mov
lea
cmp
xorl
push
and
pop
mov
xor
data16
aad
sbb
cmp
pop
mov
dec
imul
addr16
js
repz
insl
fisttpl
faddl
or
sarl
lods
mov
jne
xor
pop
shll
xchg
adc
push
pop
cwtl
lret
cli
xchg
xchg
loopne
dec
inc
rcrb
mov
aaa
outsb
in
push
pop
dec
sub
xchg
mov
mov
push
adc
shlb
lcall
aaa
add
lea
sbb
add
pushf
dec
push
sub
sti
mov
jns
sub
sub
leave
int
insl
jnp
subb
test
inc
data16
cs
push
mov
sti
mov
data16
and
push
cld
in
ja
jne
ret
popa
ljmp
mov
xor
add
stc
xor
xchg
addr16
lea
mov
addr16
mov
pmullw
rcrb
call
push
xchg
int3
fsubl
lret
inc
pusha
ds
mov
and
je
add
cli
pop
movq
daa
gs
ror
cli
mov
jb
mov
test
jg
jp
add
or
add
clc
mov
inc
in
aaa
and
jg
dec
jmp
pop
scas
add
imulb
aas
ss
push
or
mov
mov
mov
mov
adc
mov
push
call
xor
test
mov
inc
inc
cmpsl
mov
outsl
sub
jecxz
adc
lds
out
in
add
pop
mov
push
sub
adcb
add
xor
mov
and
test
es
xchg
lcall
pop
inc
add
or
outsl
push
dec
outsl
add
xchg
arpl
jb
mov
test
sbb
add
lods
lcall
fdivr
push
dec
adc
fisttpll
mov
loopne
xor
sub
xorl
mov
and
pop
pop
add
loop
xchg
dec
push
lods
cld
test
mov
jmp
adc
mov
outsb
sbb
bound
add
pusha
xchg
push
xchg
enter
int3
outsl
inc
insb
mov
fdivs
data16
imul
loop
and
mov
enter
fcmovnb
scas
lock
enter
ss
gs
imul
mov
pop
xchg
mov
cmp
mov
mov
adc
xorl
mov
mov
mov
sbb
mov
mov
scas
sbb
lock
shl
idiv
adc
add
in
adc
mov
ja
scas
fwait
dec
xchg
sbb
jle
loop
mov
outsl
mov
or
add
push
loopne
int3
ds
pop
loope
push
into
xchg
mov
cmp
popa
sbb
pop
orb
repz
push
mov
adc
subb
push
das
ljmp
push
lods
mov
jns,pn
dec
int3
sub
ljmp
dec
fiadds
inc
push
stc
mov
dec
stc
out
ljmp
pop
es
add
inc
rcr
scas
xchg
cmp
cwtl
sbb
mov
bound
or
inc
stos
aam
sbb
into
pop
mov
jge
call
ror
nop
sti
dec
push
or
fstpt
repz
xchg
pop
bound
mov
add
das
rclb
in
es
mov
rcl
ret
loop
rcr
dec
mov
mov
leave
gs
js
xchg
loopne
std
mov
pop
into
out
leave
cmp
nop
pushf
adc
call
xor
jae
in
inc
xchg
mov
mov
arpl
outsl
mov
inc
pop
insb
cwtl
int3
lret
out
xchg
cmc
mov
jno
jp
fcomps
mov
in
sbb
adc
dec
outsl
lock
sbb
and
mov
jmp
jno
lcall
fdivrp
in
rorb
int
inc
sti
sbb
imul
scas
push
scas
xor
dec
xor
lods
jg
sbbb
out
mov
mov
push
std
incl
adc
int
or
pusha
push
inc
nop
aam
std
sbb
fcomps
mov
jb
pushf
loopne
mov
cltd
std
and
mov
push
mov
repz
mov
into
sbb
pushl
gs
mov
push
lods
lret
je
push
leave
adc
test
add
mov
or
icebp
leave
rep
out
jg
mov
xchg
push
jg
pushf
mov
push
sbb
cmp
push
sbb
pushf
or
inc
call
jle
out
push
xor
jp
or
fidivrs
outsb
xor
adc
adcb
adc
repnz
jne
mov
clc
sbb
arpl
dec
mov
fs
sub
mov
dec
push
jno
sub
lea
enter
xorb
test
xor
inc
insl
mov
jge
sub
mov
mov
sub
sub
add
or
jo
push
ret
shlb
stos
outsl
mov
mov
inc
mov
mov
mov
idivb
or
sub
adc
ljmp
and
cmp
hlt
jg
cli
or
iret
sub
lods
mov
cmpsb
movsb
mov
push
mov
push
mov
js
les
call
jae
mov
jnp
in
add
out
mov
mov
sub
incl
inc
mov
cmp
shr
dec
rorb
stos
inc
jmp
pop
or
push
dec
pop
aam
mov
ljmp
or
or
dec
dec
or
jne
mov
mov
mov
daa
xor
push
das
mov
mov
es
out
mov
mov
es
pop
clc
and
je
test
mov
pop
dec
lock
jp
dec
pop
or
sub
cmpl
repz
push
out
sub
or
aaa
jno
out
roll
lcall
cmp
clc
xchg
sahf
cli
and
hlt
nop
push
mov
xlat
cmp
jo
adc
mov
inc
pop
sub
mov
pop
call
add
push
sbb
pop
jp
cltd
jmp
or
outsl
add
pop
ljmp
mov
loop
inc
push
adc
xor
out
xchg
fcomps
shlb
push
fwait
cmpsb
cmp
jmp
mov
leave
inc
or
enter
int
jno
clc
mov
mov
cmp
push
or
xchg
mov
ret
sbb
mov
insl
data16
add
cmpsl
mov
shrb
jle,pn
test
xor
ss
mov
popf
and
test
cs
sbb
and
push
test
mov
lock
js
popa
pmulhw
push
movl
mov
dec
push
out
add
push
adc
and
std
insl
pop
sbb
pop
cmp
cmp
mov
and
add
andl
mov
xchg
mov
addb
xchg
inc
pop
adc
jl
cs
adcb
xor
pusha
inc
mov
sarb
cmp
xor
ret
xchg
xchg
jmp
shl
inc
xor
or
dec
fwait
les
pop
dec
out
popf
sbb
add
shlb
adc
movsl
push
lahf
outsl
insb
std
rolb
sbb
sub
push
mov
pop
test
add
inc
fildll
hlt
add
jns
mov
test
filds
and
je
sbb
loope
imul
dec
das
cmp
rclb
gs
mov
movsl
outsb
shlb
sub
inc
pusha
push
mov
push
dec
ljmp
mov
cmp
inc
jbe
push
outsl
add
ret
test
icebp
cli
dec
sbb
andl
pop
or
add
inc
orl
aas
mov
cmp
lcall
jl
xchg
std
movsl
jg
loop
pop
test
js
inc
mov
shll
jmp
xchg
sub
or
bound
fwait
push
or
add
mov
cmp
dec
adc
stc
popa
nop
pop
pop
pop
jecxz
adc
sarb
lea
aaa
fiadds
loope
sbb
mov
nop
xor
aaa
inc
or
insb
mov
in
fs
jno
xchg
adc
add
or
push
push
cmp
sub
je
xchg
pusha
xchg
pop
inc
mov
and
xor
push
jmp
rclb
mov
add
xor
pop
sarb
shlb
inc
adc
test
call
outsl
add
dec
dec
sub
xor
aas
lods
lds
insb
insl
std
in
outsl
imul
inc
cmp
push
mov
dec
and
or
call
sub
or
dec
popf
scas
sub
leave
decl
mov
mov
push
les
fimull
pop
push
fadds
ljmp
in
adc
sbb
jg
shll
add
rcrb
mov
jecxz
add
popf
mov
cld
lahf
sahf
dec
mov
stc
mov
jmp
cmc
movsl
push
inc
in
test
xor
cmpsb
dec
insl
and
sbb
test
sti
jle
das
fcompl
fildll
xor
sub
out
mov
pop
repnz
mov
ja
mov
sub
pop
fs
and
adc
call
inc
aas
js
or
popl
pop
mov
push
pop
mov
xchg
pop
xor
mov
sbb
cmp
push
mov
inc
jp
mov
mov
test
loopne
xchg
jo
pop
test
xchg
ss
cli
or
lds
pop
sbb
pop
addl
push
lods
pop
push
or
jg
test
jg
or
loopne
test
insl
shlb
push
xchg
mov
rcrb
outsl
mov
test
sbb
fwait
push
mull
pop
push
push
adcb
mov
into
jne
push
loopne
jecxz
loope
bound
lret
jge
jecxz
frstor
dec
cmpsl
cmpsb
or
mov
hlt
push
jns
cmp
or
pop
xchg
int
fsubs
loope
loopne
jecxz
test
mov
sub
cmp
addb
lods
lods
movsl
pop
jne
outsw
or
xor
mov
mov
adc
shrb
mov
test
stos
lea
dec
into
pop
pop
dec
jg
adc
adcl
lods
pop
and
loopne
lock
cli
mov
sub
and
sub
or
or
sub
xor
and
outsl
clc
jge
mov
clc
std
or
pop
loop
movsb
jno
cli
pop
fdivr
cmp
jo
inc
pop
and
ja
movsb
imul
mov
std
ja
mov
in
push
gs
outsl
into
xor
add
push
or
push
pop
inc
ljmp
inc
mov
push
pop
add
ljmp
jecxz
adc
mov
mov
out
sahf
xchg
mov
mov
fldt
movsl
inc
stos
fmulp
pushf
leave
cwtl
add
test
stos
dec
test
gs
mov
les
mov
jmp
ret
adc
xchg
add
add
mov
jp
andl
sahf
mov
scas
test
out
sbb
jmp
hlt
in
jmp
inc
or
inc
or
mov
mov
jne
mov
popf
sbb
lock
mov
incl
lcall
inc
mov
push
mov
push
test
pop
incl
push
movsb
nop
sbb
arpl
rcrl
les
test
mov
inc
nop
mov
cmp
adc
pop
jg
pop
cltd
int
mov
jno
lcall
add
in
adc
mov
jae
and
and
mov
add
fidivl
es
mov
scas
pop
hlt
jle
and
divl
mov
mov
test
jg
mov
sbb
mov
cmp
pushf
add
jo
fnstsw
shll
mov
push
inc
mov
xchg
and
lret
jmp
mulb
add
jge
jg
aaa
orl
adc
pop
test
cs
lcall
rorb
dec
fdivr
xchg
stos
jp
mov
cltd
test
adc
decl
sar
jo
or
out
or
mull
mov
in
or
xchg
push
and
rorb
add
dec
adc
outsb
clc
adc
lods
sbb
das
outsb
adc
ds
lods
outsl
fisttpl
enter
adc
loop
imul
mov
fstpl
mov
push
ljmp
inc
jge
jbe
push
mov
xor
ss
mov
cltd
push
loope
pop
andb
loopne
fs
sbb
loope
xor
sbb
addr16
jmp
jns
pop
popf
lock
jp
stos
pop
das
hlt
repnz
adc
sbb
sarb
mov
xor
lcall
out
inc
xchg
mov
rclb
std
outsl
jmp
dec
mov
iret
push
push
inc
mov
jns
orl
push
test
fsubrs
outsl
xchg
insb
shld
xchg
pop
pop
imul
sbb
and
pushf
cli
loopne
mov
fadd
les
mov
jmp
jo
test
push
jo
mov
adc
pop
addb
xchg
or
jp
push
and
fwait
xor
inc
xor
mov
pushf
repz
fwait
xchg
cltd
sub
js
lea
push
test
mov
mov
mov
push
mov
rolb
add
in
lahf
xor
nop
sub
adc
jmp
das
push
xor
sub
outsb
pop
adc
add
icebp
lret
mov
int
and
mov
sbb
jmp
pop
jbe
pop
xchg
or
sub
cli
ficompl
jl
and
and
aam
inc
sarb
and
pop
call
dec
mov
jg
rol
shl
push
push
inc
gs
push
ret
lret
jl
fadds
notb
push
out
cs
clc
jbe
aam
scas
aaa
push
fwait
pusha
push
pop
cli
sti
xchg
test
mov
rcrb
scas
test
mov
pusha
inc
mov
cmc
push
nop
test
js
ret
add
xor
inc
push
lret
xchg
mov
outsl
in
mov
adc
cltd
xor
imul
pop
mov
add
cli
icebp
fucomi
loopne
in
xor
hlt
dec
mov
ss
mov
push
jl
mov
insl
loop
xor
jle
push
es
xchg
sahf
push
adc
lods
jo
mov
pushf
pop
adc
je
sbb
xchg
fiadds
je
fs
out
int
mov
sarl
ljmp
adc
fldt
hlt
movsl
pop
mov
les
pop
fwait
shlb
fwait
jbe
inc
sti
sbb
mov
je
xchg
adc
das
fdivl
mov
fsts
dec
and
call
dec
cmp
inc
test
sbb
mov
sbb
mov
or
inc
ret
fwait
pop
push
adc
mov
fisttps
sub
aaa
repnz
pop
sahf
je
outsb
insl
jmp
repnz
mov
pop
jle
cwtl
mov
leave
adc
or
stos
aad
setae
mov
shll
ret
push
inc
xlat
mov
add
lea
call
push
lods
cmc
mov
pop
out
mov
in
jg
xchg
cmp
mov
fists
mov
ret
sbbb
testl
scas
sbb
mov
and
insb
lock
out
ret
xor
mov
inc
inc
aaa
sbb
ljmp
mov
insl
mov
cltd
push
push
insb
jno
or
jl
jb
mov
mov
xchg
in
cmpsb
push
adc
pop
mov
xchg
mov
movsb
insb
repnz
sti
and
cmpsl
mov
es
sbb
and
insb
cmc
add
fs
decb
push
insl
dec
sub
push
pop
movsb
dec
rclb
lds
nop
imul
push
mov
lds
push
rorb
shlb
push
cs
sub
mov
outsl
aaa
push
jle
sub
sbb
mov
inc
mov
push
sbb
std
popf
icebp
int
fbstp
fcmovnu
sub
push
rep
mov
jge
aaa
les
push
mov
sbb
jbe
pop
clc
in
inc
sarb
mov
std
fsubl
pop
pop
add
mov
cli
addl
scas
lds
and
aam
jmp
cld
xor
xchg
subb
ret
cmp
and
pop
cmpsl
dec
push
loope
lret
ljmp
cmc
ret
jo
pushf
add
xchg
imul
adc
sub
xor
jecxz
rcrl
or
fs
and
pusha
adc
jmp
rorb
jge
push
in
push
shl
push
xor
sbb
shrb
test
pop
push
inc
rol
fs
and
lret
fbstp
test
lds
pop
das
dec
test
daa
pusha
cmp
repz
jg
in
fs
adc
xchg
pusha
sbb
cmp
scas
outsb
and
inc
push
fwait
sub
sbb
mov
jnp
mov
mov
pop
fisubrs
rolb
xor
popf
dec
mov
xlat
sub
adc
lret
or
rorl
cltd
pop
sbb
lret
dec
push
adc
pop
mov
enter
add
out
ljmp
or
outsl
pushf
stc
push
ss
add
enter
mov
add
mov
rorl
cmpsl
loope
push
xchg
mov
xchg
mov
ficompl
test
cmp
sub
mov
inc
icebp
in
lods
push
mov
mov
das
out
cli
or
stc
xchg
lods
add
repz
dec
jne
ffreep
inc
adcb
fsubl
add
fisttpl
aad
and
imulb
insb
jns
xor
adc
push
add
adcb
mov
jle
mov
add
ds
popa
adc
ret
pushf
inc
adc
xchg
out
div
lods
data16
inc
cmpsb
int3
xorb
std
jl
pop
fsubp
cmpsl
push
insl
pop
sub
imul
rcr
test
adc
icebp
pop
sbb
fst
and
adc
jns
insl
test
filds
or
ret
aaa
pop
sub
addr16
and
jp
push
push
mov
sub
jno
inc
cmc
adc
inc
sub
movsl
js
pop
js
push
dec
lahf
out
imul
xor
cli
int
xor
jecxz
sub
fdivl
sub
or
pushf
cmpl
ss
mov
and
xchg
cli
sbb
lahf
hlt
test
test
gs
hlt
xor
mov
adc
hlt
in
hlt
std
dec
das
mov
mov
mov
mov
push
sub
in
jne
outsl
fisttpll
sbb
mov
shrb
movsl
and
imul
test
adcb
xchg
mov
out
mov
hlt
adc
popa
adc
mov
pop
mov
jmp
mov
mov
jecxz
fsubr
and
jg
mov
mov
xchg
mov
adc
push
insb
cmp
mov
hlt
adc
sar
pop
bound
ss
mov
ja
out
test
popa
or
jle
jmp
xchg
cmp
sbb
mov
mov
jo
cmpsb
rcl
cmp
nop
add
inc
push
subb
dec
xchg
jp
incl
sti
out
test
int
jns
cmp
mov
inc
sti
daa
xor
inc
out
mov
mov
jb
test
adc
test
jl
std
inc
pop
test
jo
movsl
repnz
lret
or
daa
enter
xor
lahf
and
mov
push
adc
in
aad
pop
sub
or
cmp
pop
push
jbe
sbb
inc
insl
dec
fildll
daa
mov
jo
dec
jge
lds
movsb
test
ja
dec
outsb
ficoms
lcall
fcomi
mov
mov
and
push
lods
mov
pushl
push
bound
out
mov
or
mov
cs
or
inc
adc
inc
jae
xchg
insl
inc
jl
ror
mov
lahf
or
imul
repz
fsubr
iret
aam
mov
inc
push
mov
mov
sbb
into
sahf
jg
xor
hlt
pop
dec
scas
adc
cmp
mov
push
clc
xor
fdivrl
out
lods
jge
mov
add
fsubrs
ror
cmp
in
add
xor
cs
inc
pop
or
in
stc
popf
or
pop
jge
cmp
mov
bound
ret
stos
mov
lock
stc
mov
mov
in
aaa
jl
fisubs
pop
out
inc
cmp
xchg
pop
orb
fidivl
ret
lods
fcomps
mov
ss
arpl
inc
push
sbb
and
mov
mov
cmp
xchg
clc
adc
pop
mov
insb
mov
data16
mov
js
pusha
push
push
pushl
addr16
sbb
dec
adc
or
cs
fsubrp
ljmp
jbe
mov
out
dec
mov
leave
xchg
pop
mov
js
push
leave
jno
jmp
push
mov
stc
sub
bsf
add
dec
mov
jno
hlt
jb
jg
std
nop
test
fcmovb
or
add
js
cmp
cmpsl
movb
push
pop
adc
loope
cli
aad
inc
jb
mov
cmpsl
adc
push
loopne
repz
insb
std
mov
cmp
ljmp
push
sub
orb
sbb
cmpsb
pushl
mov
xor
flds
pusha
lret
loope
mov
lds
jmp
hlt
mov
hlt
sbb
mov
sub
or
rcrl
push
jmp
pushf
dec
or
jbe
fmuls
jl
cld
mov
movb
arpl
mov
mov
insb
nop
push
adc
outsl
fwait
outsb
add
icebp
jae
add
jecxz
pop
cltd
mov
inc
sarb
fadd
pop
push
repz
and
stc
adc
lods
test
movsb
les
inc
mov
fsubp
pushf
jmp
sti
ljmp
pop
inc
icebp
jge
sub
mov
andb
jge
idivb
mov
mov
jmp
ja
icebp
jg
or
mov
test
aas
cmp
aad
incl
push
xorb
pop
enter
xchg
dec
jge
outsb
mov
jmp
mov
pop
cli
mov
dec
jb
imul
dec
xor
pop
sar
xor
and
and
jnp
sbb
xchg
jl
push
xchg
add
cmp
mov
cmpsb
popf
imul
repnz
imulb
sub
and
fistpl
or
jl
cmp
popa
lahf
aam
xor
daa
lret
cli
mov
mov
xor
loope
fidivrs
add
out
jmp
sub
loopne
cmpsl
aaa
sub
pusha
aam
sbb
add
add
lea
test
std
out
imul
push
cmp
stos
pop
stos
mov
jl
xchg
movsb
arpl
xchg
shl
inc
mov
xchg
shrb
subb
add
iret
lods
mov
jle
sbb
xchg
or
mov
lock
lret
add
jns
test
push
push
add
jno
lea
push
and
iret
loopne
jnp
mov
sub
mov
lcall
or
adc
sahf
test
movd
adc
push
pop
xor
cmc
push
mov
pop
sub
and
mov
inc
lahf
jb
mov
shlb
sti
in
dec
shrl
mov
pop
stos
mov
xor
hlt
rolb
cmp
cmc
jmp
and
sbb
sbb
or
push
mov
aaa
aam
imul
imul
inc
pop
sar
adc
cld
jecxz
or
sbb
adc
push
aaa
jecxz
outsl
mov
subl
mov
xchg
pop
fdivrp
jg
ret
js
jp
mov
mov
push
aam
and
add
popf
jmp
jnp
add
aad
int3
pop
insl
mov
mov
mov
jns
test
movsl
loop
push
adc
push
shrl
cld
or
mov
jecxz
fdivl
outsb
dec
aas
and
das
mov
loop
push
std
cwtl
test
mov
dec
jbe
lock
pop
cltd
incb
jl
mov
jno
call
jns
fmull
adc
pusha
jmp
inc
mov
add
stc
das
sar
mov
sbb
cwtl
sub
xchg
cmp
mov
adc
inc
cmc
imul
cli
mov
add
lahf
xor
jmp
fisubl
imul
adc
fiadds
fiaddl
mov
lock
hlt
daa
pop
jle
je
sbb
fbld
test
or
fcom
rcrb
cmc
mov
fs
or
push
loopne
add
aas
xchg
popa
sub
ret
jbe
xor
in
notb
iret
push
fmull
inc
test
aad
xchg
dec
lret
and
mov
jmp
mov
pop
sub
stos
sub
pop
mov
int
jbe
pusha
jecxz
pop
inc
pop
and
test
inc
push
fisubrl
push
pushl
cmc
lods
mov
pop
dec
ret
mov
sub
cli
call
sarl
int3
out
mov
subb
arpl
adcb
push
loope
cmc
scas
sbb
adc
nopl
hlt
subb
or
in
test
ss
cli
insb
dec
std
je
testb
inc
jl
and
xlat
sti
push
ds
pop
hlt
mov
out
les
inc
arpl
mov
lds
mov
out
aam
xor
cmp
out
sub
add
sub
pop
push
xchg
cmp
cmpsb
lret
jl
and
push
sbb
or
lcall
gs
mov
mov
sbb
and
rorb
sbb
mov
cmc
sbb
leave
mov
push
inc
mov
andb
cltd
add
testl
pop
mov
pop
adc
jo
push
ja
outsl
pop
cmp
dec
adc
test
mov
std
imulb
mov
int
outsl
mov
hlt
add
jno
outsb
dec
xchg
cli
cmp
lcall
push
adc
cltd
gs
sbb
hlt
das
sbb
xchg
mov
or
xchg
jecxz
lcall
icebp
call
outsl
jl
roll
adc
dec
pop
andb
cli
add
lcall
pop
addb
fldenv
into
scas
mov
icebp
ret
pop
sub
or
pop
in
or
fistl
pop
andl
das
fcompl
ret
fisubrl
add
pusha
inc
jle
aas
outsl
cld
push
iret
dec
hlt
cmp
dec
outsl
dec
popf
mov
push
jb
icebp
sbb
mov
ret
test
sub
repnz
jns
mov
lods
int
cmp
aam
insb
inc
testb
mull
jb
mov
daa
scas
incl
repz
cmp
and
sbb
into
repz
dec
fildl
pop
or
mov
lea
or
fcompl
fdivs
inc
aam
fdivrl
test
fstl
jge
cli
aaa
mov
adc
repnz
sbbb
or
pop
insl
fildll
adc
arpl
test
inc
addr16
add
cmp
mov
fwait
add
jbe
int
repz
addr16
or
or
sbb
in
pop
les
or
add
ljmp
cmp
cmp
or
jo
fstpt
mov
shl
mov
test
pop
vpmullw
mov
mov
push
movsb
faddp
rol
sbb
sti
cltd
push
and
dec
popf
push
mov
push
pop
repnz
ss
mov
and
aaa
bound
std
adc
daa
adc
lods
movsl
cmp
sub
pop
xor
insb
test
rclb
shll
mov
test
das
and
out
adc
cmpsb
lahf
pop
mov
xchg
bound
push
cltd
es
or
sbb
push
or
es
cmp
out
ss
pop
push
xchg
or
add
dec
loope
adc
mulb
add
sbb
jl
pop
int
push
add
add
add
xchg
orl
xor
jnp
cmp
mov
mov
loopne
inc
dec
xorb
leave
xchg
inc
dec
fstl
inc
jg
xor
push
dec
cli
mov
pop
ja
add
inc
insl
rclb
aam
rolb
and
add
xor
inc
mov
outsb
scas
out
sbb
fwait
stc
sbbb
add
inc
movsb
pop
mov
pop
dec
and
lods
add
xchg
mov
mov
jno
in
fbld
push
push
jecxz
cs
and
xor
sahf
mov
and
jno
insl
mov
and
or
movsl
and
inc
xlat
cld
jno
adc
adc
icebp
mov
addl
push
mov
inc
add
std
lods
fsubs
or
jl
movsb
or
dec
cmpsb
mov
and
das
cwtl
jo
test
inc
out
fnstsw
and
mov
mov
inc
cwtl
ja
add
andl
jg
dec
sbb
out
add
out
and
ss
test
gs
mov
xor
jecxz
fs
rclb
jge
xor
std
or
into
mov
push
lret
loop
ljmp
or
inc
icebp
pop
pop
clc
pop
xchg
shr
cmp
inc
hlt
cmp
jmp
in
adc
jle
lods
into
xchg
sub
jecxz
aam
adc
pop
adc
add
or
and
sub
add
sbb
mov
add
sbb
roll
test
mov
add
mov
jne
aad
lret
test
lret
cld
mov
add
inc
mov
rcll
je
lret
dec
call
movsl
das
add
sbb
loopne
sahf
leave
negl
jne
sbb
sbb
mov
pusha
dec
mov
dec
sti
dec
xor
xchg
sub
pusha
adc
loopne
and
jmp
das
dec
rorb
xor
sub
cmpsl
mov
fstpt
loop
pop
jg
mov
test
cld
fidivs
mov
dec
dec
xor
lock
pushl
cmp
ljmp
or
jle
pop
sub
aaa
push
mov
and
sbb
fwait
dec
dec
orl
lcall
mov
sbb
inc
pushf
cli
imul
push
in
pop
jp
mov
cmpb
clc
outsl
das
xor
jmp
or
mov
fcmovb
lea
pop
into
test
stc
icebp
xor
cmp
in
idivb
jo
xor
mov
out
dec
xlat
fcoms
xor
adc
add
sahf
cs
in
push
clc
scas
incl
pusha
popa
inc
xor
unpcklps
adc
and
mov
pop
add
aad
mov
sarb
sarl
jg
mov
mov
push
mov
stc
or
jb
imul
jg
clc
outsb
xchg
in
incl
in
insb
dec
insb
loopne
ljmp
lret
jmp
sub
xorl
bound
jb
dec
mov
sub
push
dec
dec
and
and
in
mul
xsavec
push
andl
adc
insl
pop
pop
cmp
push
cwtl
inc
dec
movsl
sbb
fsincos
xor
pop
push
iret
pop
or
loope
pop
adc
aam
adc
mov
aas
xor
fstpt
das
jnp
scas
test
pop
and
and
idivb
dec
push
mov
sub
in
cmpb
out
adc
mov
scas
lock
ja
gs
je
cmp
rol
pop
add
lods
inc
lar
fstl
push
repnz
cs
and
shrb
mov
mov
add
icebp
rcr
and
or
ljmp
sarl
and
fisubrs
sub
repz
add
mov
ret
push
popf
jbe
push
jge
pop
cld
lods
decl
dec
mov
mov
das
sqrtps
shl
nop
leave
mov
mov
mov
sbb
mov
mov
arpl
or
jbe
push
je
mov
pop
xchg
pop
lret
int
jbe
loop
stos
and
in
lds
addl
xlat
xchg
pop
enter
filds
adc
insl
call
aaa
cltd
adc
std
dec
inc
imul
lods
rcrl
mov
cmp
cmp
mov
test
lods
out
lcall
mov
dec
rol
aam
data16
adc
pusha
aaa
call
xchg
jg
push
stos
mov
mov
push
fdivl
push
pop
cld
rclb
and
pop
cwtl
and
jge
dec
aad
outsl
insl
leave
data16
dec
mov
out
push
mov
jbe
shrb
insb
cmp
int3
into
out
pop
lods
push
adc
aas
sub
and
xor
scas
loopew
fsubl
dec
mov
js
mov
inc
mov
jns
lea
add
and
cmc
xorl
test
rorl
cltd
sarb
inc
mov
aas
jp
push
cmp
cld
or
pushf
mov
inc
jecxz
inc
imul
xor
or
pop
iret
call
es
jmp
mov
jae
sub
add
ljmp
push
mov
pop
imul
cmp
repz
loope
pop
cmc
push
jne,pn
ss
jbe
xor
cltd
clc
int
mov
stos
cmpsb
loopne
arpl
mov
and
cmp
and
pop
pop
js
add
add
and
cmp
lret
push
adc
add
push
xor
add
inc
mov
insl
and
sbb
adc
stos
sbb
lea
adc
out
ficompl
add
jbe
out
or
sbb
lret
in
testl
push
add
out
cwtl
sarb
lcall
data16
dec
jle
mov
and
inc
lea
in
adc
lret
notb
pop
lods
shr
repz
xchg
inc
shrl
imul
cmpsl
idivl
daa
test
mov
mov
cmp
inc
leave
xchg
add
cld
cmpsl
movsl
jo
das
ss
xchg
in
mov
dec
add
inc
ss
and
aaa
outsb
in
lret
pop
cmp
dec
mov
or
or
fcomps
sub
push
out
out
loop
inc
adc
mov
scas
xchg
push
mov
std
and
out
xchg
push
sub
orl
bt
inc
push
jbe
xchg
aas
enter
stos
insl
jno
in
pmulhw
ror
push
jle
add
dec
mulb
fcmovnb
fs
jbe
pop
sbb
pop
pop
sbb
rolb
loop
lods
mov
push
mov
and
add
imul
jbe
xchg
fistpl
mov
xchg
rorl
push
mov
push
out
push
adc
call
push
cld
fldt
dec
push
and
mov
cltd
mov
ret
lahf
das
fcompl
sti
cld
arpl
jecxz
mov
mov
mov
in
jle
test
daa
popa
pop
ficoms
aas
jb
add
sbbl
shl
pop
cmpsb
cld
lods
lret
xchg
xchg
dec
lods
int
and
or
mov
or
push
mov
pushf
ret
movsl
lods
sub
xchg
iret
sbb
sbb
movl
outsl
fcoml
test
dec
cs
lahf
aad
sbb
and
in
and
in
nopl
jmp
adc
outsl
lret
aaa
push
jns
cmpsl
sub
sbb
mov
or
sbb
ret
movsl
xchg
fimuls
xchg
outsl
addr16
imul
cmp
adc
outsl
cmpsl
push
mov
test
cs
xchg
rorl
imul
push
mov
add
in
fcomp
mov
std
jp
ss
or
adc
mov
push
mov
out
xor
inc
aad
inc
sarb
push
mov
es
sbb
jecxz
push
icebp
call
jnp
inc
fcompl
aam
adc
dec
xor
and
fidivrl
mov
cmp
jo
ret
iret
mov
mov
mov
jp
inc
out
aam
sbbb
add
jg
shld
addl
rorb
scas
fcmovnbe
mov
call
jae
pop
jmp
notb
outsl
sub
ret
or
xlat
mov
subl
movsl
fildl
cld
outsl
fdivr
mov
insb
cli
lret
adc
gs
cld
pop
sti
loopne
fbstp
inc
xorl
xor
outsl
lea
pop
mov
loopne
mov
roll
jecxz
mov
mov
mov
jbe
and
mov
mov
lcall
mov
fists
leave
jle
mov
mov
inc
or
sarl
xchg
mov
ljmp
sub
in
jge
cs
sub
sbb
clc
push
mov
mov
sub
nop
inc
gs
inc
pop
fwait
pop
aaa
arpl
addl
movsl
push
xor
loopne,pt
mov
frstor
mov
mov
or
push
jmp
loop
decl
mov
inc
sub
sub
movsb
clc
push
mov
adcb
mov
ljmp
popa
adc
in
popa
pop
jmp
jecxz
inc
xchg
ficomps
and
push
cli
imul
outsl
jns
cwtl
jmp
stc
push
cld
inc
mov
cli
mov
repnz
lea
lahf
ret
std
pop
js
pop
gs
jbe
pop
lock
or
mulb
ss
push
mov
inc
je
sbb
xchg
jbe
mov
or
pop
jl
jno
adc
sbb
fcoms
loope
imul
das
xor
inc
dec
les
shll
rcrb
std
in
lea
add
mov
out
aam
cltd
shrl
dec
aaa
mov
jg
cmpl
mov
nop
ja
ror
inc
out
or
dec
mov
call
addb
rclb
push
and
negl
in
fldt
cld
sub
lcall
add
or
rcr
adc
cmpsb
hlt
lret
push
cmp
adc
jbe
sbb
je
aam
lret
inc
adc
add
cmc
push
dec
push
aad
sub
testb
sahf
stos
pop
scas
clts
je
mov
lahf
sti
popf
cmp
cmc
aam
cld
dec
std
stos
pop
jp
lahf
ds
mov
in
addr16
pushl
flds
js
shl
lea
cmp
fildll
ss
adcb
les
icebp
movb
adc
lods
or
xlat
pop
xchg
ds
fsts
mov
jbe
aam
mov
cltd
cmpl
inc
lods
int3
mov
fildll
rclb
arpl
push
mov
xchg
fistpl
ss
or
lock
sti
or
cmp
je
mov
pop
sti
sub
scas
adc
and
bound
mov
and
xchg
dec
outsl
adc
decl
clc
std
push
aas
jns
aad
mov
loop
aas
or
scas
push
rolb
fildll
clc
sbb
xchg
push
inc
mov
mov
popa
into
shl
xchg
pusha
cmpb
lret
imul
push
sbb
pusha
stos
push
cmc
xor
mov
pushf
insl
xchg
cmpsb
out
or
pop
mov
insb
adc
jg
sbb
test
mov
sbb
add
stc
js
jmp
loop
mov
xchg
pop
push
cmp
mov
mov
mov
ss
and
mov
es
sub
mov
mov
jbe
sbb
lods
adc
add
call
fldt
pop
dec
push
mov
or
sub
frstor
xchg
mov
and
pop
add
mov
lods
sub
push
hlt
call
fnstsw
addb
pop
fucomip
xor
test
and
pop
jecxz
sbb
jmp
xchg
mov
cs
sbb
xlat
jmp
je
negl
pop
into
xchg
xor
adc
scas
pop
xchg
inc
lahf
xchg
pop
in
xor
es
jmp
xchg
mov
mov
idivb
lock
call
xchg
out
call
lea
subb
xchg
add
pop
fsubs
lods
pushf
shr
roll
adc
push
inc
mov
jp
xchg
push
rcrl
cmpsl
jb
loope
cld
or
and
jno
pop
ss
push
loopne
ss
cmp
pop
test
outsb
pop
push
sub
cmc
cwtl
or
mov
fisttpll
xchg
jg
stc
mov
mov
add
push
andb
cli
mov
ficoml
mov
sbb
ss
xchg
sub
push
mov
mov
add
enter
mov
js
jle
aaa
pop
movsl
xlat
jb
arpl
push
cmc
mov
filds
inc
xchg
xorl
leave
ficoml
shrb
xchg
mov
xchg
insl
bound
or
sarl
daa
je
push
push
adc
mov
pop
mov
orb
xchg
clc
adc
jecxz
mov
fisubrs
icebp
add
mov
or
mov
js
lea
sbb
cmpsb
testb
fcom
ss
sub
pop
dec
mov
dec
mov
or
into
lret
icebp
test
push
sub
int3
lods
jns
cli
movsl
inc
loopne
loop
out
outsl
sarl
jmp
xorb
inc
imul
xlat
arpl
gs
mov
in
decb
adc
jg
popa
fsubrl
adc
mov
loop
je
jno
in
xchg
dec
mov
or
adc
stc
sbb
in
dec
mov
sub
and
mov
gs
or
mov
outsb
add
mov
mov
mov
loopne
stos
movsl
lret
xchg
sbb
les
mov
icebp
jl
mov
push
test
sub
sub
test
pop
subps
incl
pop
push
mov
sub
inc
pop
cmp
mov
jg
push
cwtl
pmaddwd
rcl
lea
dec
loopne
push
adc
pop
or
mov
mov
xchg
cmp
push
inc
xor
mov
pop
and
into
xor
jae
inc
mov
hlt
faddl
push
fildl
mov
xchg
movsl
sub
fdivr
pop
push
sub
mov
fnstcw
inc
pushf
mov
wbinvd
mov
or
pop
lods
cld
insl
cli
push
call
std
inc
mov
adc
add
sub
sti
jbe
cmp
in
outsl
mov
cmc
add
and
jg
push
mov
test
cmpsb
xchg
add
push
decb
mov
or
mov
jecxz
outsl
insb
jbe
pop
loopne
dec
dec
in
movsl
inc
mov
adc
mov
inc
rorl
mov
ljmp
test
xchg
sub
lret
cmc
mov
mov
or
xchg
insb
scas
sbb
pop
call
push
stos
or
pop
push
cmc
aam
cld
cmp
decl
xchg
inc
mov
pop
fsubrp
shll
push
jge
cmpsl
mov
mov
in
popf
lret
sbb
cmpl
or
adc
add
daa
add
fisubl
add
mov
cmp
popa
lods
or
outsb
fisttps
lret
xchg
cmp
dec
dec
adc
rcl
out
cs
add
sbb
call
inc
sbb
jmp
jl
fwait
jmp
lods
mov
repnz
jl
sub
inc
mov
jns
dec
enter
lret
cs
sahf
xor
cmc
inc
loopne
mov
or
mov
ljmp
outsb
add
aam
xchg
and
test
rcll
dec
add
inc
lock
loopne
jecxz
jae
fadds
sbb
cmc
aad
and
iret
mov
push
dec
test
fs
xchg
pop
mov
into
ljmp
push
mov
insb
lret
mov
stos
mov
icebp
or
lahf
mov
mull
mov
mov
fidivrl
icebp
lcall
push
popf
stos
jb
inc
add
fisubrs
push
loopne
outsl
xor
outsb
mov
int3
or
push
out
jne
mov
inc
jno
sti
daa
mov
and
jmp
dec
and
call
mov
jae
xor
sbb
xor
test
and
mov
mov
push
cmpsb
movb
dec
or
lods
cli
test
fadds
sbb
pop
js
lock
lcall
cmp
push
lods
pop
pusha
stos
pop
ja
inc
jl
aas
mov
std
inc
mov
loopne
jbe
mov
mov
or
ret
sub
sub
add
mov
pop
mov
add
cwtl
xor
sub
insb
pop
add
into
push
adc
outsl
xor
rcl
je
mov
rclb
sar
mov
pushf
pop
lret
fistpl
or
ja
fistps
and
ficoms
sub
mov
add
xor
or
sbb
fbld
sub
lcall
scas
fmuls
adc
jg
les
bound
sbbb
mov
std
fstp
sbb
inc
rolb
or
inc
cs
add
test
ret
cmp
pop
and
or
push
mov
lcall
pop
andl
shll
push
xlat
add
push
ja
bound
lock
xchg
push
add
sub
test
out
inc
xchg
xor
movsb
cmovl
lea
fisttps
add
cltd
dec
pop
outsl
mov
sub
movsl
fistps
loopne
cwtl
sub
jo
or
les
push
sbb
ljmp
xchg
sub
sub
das
pop
clc
fisttpl
arpl
scas
sub
sub
add
push
ja
loope
mov
push
mov
dec
xchg
push
dec
in
dec
lret
mov
cmp
shlb
daa
cs
aaa
and
push
xor
pop
sub
push
mov
repz
push
dec
pop
mov
addr16
bound
mov
add
aaa
sar
outsl
jecxz
mov
stc
or
mov
inc
test
outsl
icebp
pop
js
inc
mov
add
mov
mov
dec
lcall
inc
add
push
sub
mov
mov
cmc
dec
and
into
or
push
mov
int3
adc
shrb
lock
sbb
icebp
or
inc
ror
call
adc
insl
jl
jle
aad
lahf
xor
iret
cmp
ja
js
inc
lret
or
dec
lret
loop
pop
scas
mov
hlt
lahf
pop
mov
cmp
adc
fmuls
fistpl
pop
mov
pop
imul
inc
mov
jecxz
dec
inc
rorl
pushf
jp
call
and
divb
jno
mov
movsl
inc
daa
mov
sub
mov
mov
into
jne
jg
xor
cmp
aad
iret
add
lods
rol
outsl
sbb
add
into
les
mov
shl
testl
push
loope
and
ret
add
loopne
mov
pop
imul
sub
mov
and
inc
aaa
cmpsb
test
icebp
adc
outsb
push
pop
loopne
xorb
mov
fdivrs
and
xchg
add
dec
dec
mov
outsb
cwtl
push
and
sarb
fstp
addb
sbb
aam
pop
imul
add
push
adc
mov
push
or
sub
push
dec
out
ss
fdivs
fiaddl
add
jnp
fistps
and
shll
cmp
xchg
movsl
rcr
add
test
mov
out
into
adc
ret
fnsave
das
mov
icebp
add
xchg
jne
rorl
cmpsl
xchg
and
xchg
and
icebp
mov
ss
outsl
xchg
lods
push
cmc
sub
shl
in
sbb
add
jle
push
push
jne
hlt
out
imul
test
push
add
outsl
mov
mov
inc
xor
rcrl
xor
inc
outsl
xchg
adc
in
push
ret
fbld
cwtl
loop
pop
dec
and
ljmp
dec
xchg
mov
fstpt
xchg
ret
daa
xchg
mov
pop
xor
loop
scas
dec
jns
insl
cs
sar
push
fsubr
flds
cld
test
mov
inc
cmp
add
test
or
mov
test
sbb
cmp
dec
std
mov
loop
pop
sti
push
push
jb
cwtl
lret
mov
sbb
cmpsb
inc
or
mov
arpl
inc
lock
leave
loope
push
pop
mov
or
pop
xchg
add
fdivs
in
loopne
rorl
xor
inc
adc
and
and
jg
cs
jecxz
sbb
cmp
mov
addr16
mov
decl
mov
cmp
mov
and
imul
mov
mov
lods
pop
into
mov
push
sbb
jl
adc
xlat
pop
std
stos
lds
mov
je
lods
pop
mov
mov
mov
lds
shl
pop
mov
xchg
dec
out
push
pop
push
addr16
adcb
call
int3
add
adc
hlt
pop
mov
call
jle
bound
and
jbe
fcoms
mov
jmp
adc
in
ret
insl
push
sub
es
stos
inc
lahf
lahf
inc
sbb
push
sub
inc
aad
dec
fdivl
jne
and
inc
mov
jle
arpl
bound
decb
jne
jle
inc
enter
add
cmp
inc
inc
shl
xchg
clc
imul
pushl
icebp
cmpsb
fs
xchg
mov
call
std
adc
and
les
lds
aaa
cli
test
jb
stos
inc
movsl
jle
aad
mov
mov
jmp
leave
mov
mov
es
clc
mov
outsb
xor
adc
rclb
cltd
sbb
pop
dec
xchg
mov
jg
sbb
jne
jecxz
rcl
cmp
xor
outsl
sbb
loope
or
dec
es
les
les
mov
fs
sbb
dec
loop
fistpll
inc
cmc
cmp
xchg
or
push
in
aam
cmpl
jae
mov
repnz
dec
stc
ret
ss
pop
adc
div
pop
adc
inc
loop
loope
or
leave
out
jge
mov
cmp
dec
negb
bndldx
mov
cli
test
push
mov
andb
iret
jb
push
cmp
mov
fsubrs
aad
sbb
mov
pop
insl
adc
jmp
enter
jns
fcomps
inc
rcll
pop
mov
out
and
enter
decl
dec
push
loopne
mov
lret
pop
mov
mov
jae
bound
idivb
mov
std
movsb
add
pop
cmp
and
mov
mov
add
sbb
sbb
mov
or
xlat
inc
negl
cltd
out
add
mov
inc
pusha
arpl
outsb
fstpt
or
imul
jp
and
pop
sbbl
fildl
lods
sub
inc
sbb
pop
adc
mov
push
push
or
cmpsl
mov
outsb
pusha
jae
pushf
inc
inc
rorb
xchg
jmp
add
mov
push
in
jmp
insb
scas
and
jp
mov
nop
mov
mov
mov
cld
inc
or
or
xchg
xchg
in
push
push
insl
stos
push
cmpsl
pop
enter
push
lea
add
push
xor
inc
jo
rorl
lea
jle
fistps
test
add
out
and
shl
inc
inc
arpl
stc
add
enter
mov
mov
xchg
xchg
mov
test
or
and
pop
push
adc
add
jle
rcll
fnsave
in
inc
aas
icebp
jmp
mov
stos
pop
or
cmp
xchg
es
pop
jo
imul
hlt
imul
mov
sti
jmp
dec
xor
scas
test
imul
sub
or
xchg
cltd
ja
popa
out
jnp
loope
pop
push
aad
lods
arpl
mov
fstpt
out
adc
mov
mov
sub
pop
fistl
filds
lret
std
subb
mov
jecxz
cwtl
popf
ficomps
or
push
mov
inc
iret
jne
adc
in
jge
push
fildll
mov
xchg
xor
and
jne
imul
movsb
mov
and
xor
out
sbb
cmp
dec
pop
pusha
in
hlt
outsl
rcrl
dec
cs
mov
dec
cwtl
pmuludq
add
call
loopne
xlat
and
push
test
movsb
or
pop
test
jb
enter
add
sbb
cmp
in
mov
sub
sbb
xchg
sar
imul
repnz
mov
rcll
adc
filds
out
adc
mov
inc
dec
cmc
cmpb
pop
rdtsc
push
add
out
sub
pushf
xchg
pop
je
call
jle
add
rolb
stos
cmpsb
or
mov
sahf
mov
loop
in
inc
loop
add
test
ret
je
add
mov
sbb
je
jecxz
ret
dec
int3
inc
dec
mov
mov
adc
das
mov
aam
push
test
add
or
dec
js
adc
add
lcall
test
mov
add
pop
jp
xor
xor
cmc
je
fdivs
jb
decl
sbb
mov
jg
fcmovnu
sar
cwtl
dec
dec
and
bound
add
xchg
ss
push
jg
push
std
xchg
inc
fidivrs
sub
faddp
cmp
out
sar
push
xchg
ljmp
enter
jnp
test
jne
adc
sub
pop
or
enter
cmp
push
dec
adc
xchg
push
in
fucomip
aaa
lods
nopl
out
pop
mov
sbb
cmpsl
or
xchg
mov
gs
or
out
out
push
or
or
in
dec
jg
clc
pushl
repnz
les
mov
add
sub
popa
scas
sub
mov
jb
sub
push
cmp
mov
in
psrlq
pop
jecxz
test
jb
pop
sbb
push
ret
imul
pop
jge
mov
les
cs
js
test
rorl
in
fisubrl
imul
mov
push
pop
aas
inc
in
pushf
cmp
sub
call
xor
mov
nop
mov
bound
jbe
pusha
out
leave
faddl
fildl
cmp
or
cmc
mov
jae
mov
or
mov
sbb
mov
jecxz
cltd
lret
sbb
mov
clc
lods
adc
adc
leave
sub
mov
adc
inc
dec
fldln2
ljmp
and
lret
test
push
cmp
adc
test
lea
inc
mov
and
outsl
pusha
stc
decl
xor
adc
sahf
cmpsl
xchg
inc
sbb
pop
or
negb
push
aad
pop
popf
ds
insb
pop
jns
xchg
andps
insl
xor
test
dec
int3
mov
xlat
mov
sub
jge
mov
ljmp
fwait
movzbl
adc
enter
and
stos
adc
fcmovb
push
inc
sbb
lods
notb
jg
dec
mov
sbb
adc
rcll
and
test
fstpl
xchg
mov
ret
xor
pushf
mov
xorb
out
repnz
pop
in
jg
xchg
push
xchg
jb
je
and
in
push
outsl
incl
je
movsl
je
cmp
fiadds
loopne
ljmp
and
les
adc
leave
xchg
andb
mov
loop
stos
popa
push
lea
adc
enter
cmp
mov
sarb
lea
push
out
mov
aad
add
aaa
pusha
mov
push
or
insl
sbb
test
jle
or
repz
adc
js
sbb
cs
pop
lcall
test
dec
dec
push
xchg
jns
mov
call
sub
or
fisttps
and
cmpsb
push
mov
xor
and
stos
ret
lea
test
call
out
aas
gs
fstps
aaa
mov
push
jle
push
push
arpl
mov
inc
inc
insl
insb
or
jmp
lods
and
inc
and
or
lods
adc
jbe
test
jo
mov
pusha
mov
sub
mov
icebp
pop
lods
xlat
movsb
stc
jnp
cmpsb
cld
ja
insb
adc
ss
inc
and
popf
or
jg
lcall
shrl
fcoms
xchg
sbb
aas
shlb
fcmovu
cmp
out
mov
adc
aas
es
rolb
clc
imul
push
sahf
ljmp
add
aaa
pop
leave
inc
inc
add
mov
faddl
pop
pop
adc
out
pushf
add
cmp
xchg
test
mov
ja
pop
pusha
movsl
pop
lcall
sub
push
adc
dec
mov
sub
sahf
sub
test
mov
sbb
inc
mov
xor
adc
add
je
clc
aaa
stc
adc
sbb
aas
xor
test
ja
insl
cmp
xor
out
dec
gs
jecxz
sub
je
insb
and
jle
outsl
jecxz
in
push
fists
adc
and
out
cli
mov
jecxz
out
adc
push
aas
gs
mov
loope
xor
mov
sahf
pop
fwait
inc
cmp
sub
mov
fnstsw
bound
js
dec
xor
lds
decb
idivl
and
mov
xchg
pop
cmp
mov
pop
insl
jg
pop
add
bound
pop
sub
fsub
push
rclw
push
mov
xchg
dec
icebp
icebp
ljmp
leave
pop
mov
nop
pushf
scas
mov
mov
mov
or
cmp
idiv
xchg
sbb
pop
and
loop
or
and
adc
cmpsb
sbb
stos
loope
mov
jp
mov
out
stos
mov
sub
sbb
fwait
dec
idivb
test
jecxz
and
mov
fs
inc
xor
popa
jns
mov
aaa
ja
std
data16
movsb
xchg
push
mov
mov
int
in
or
mov
adc
fcomps
and
pop
int
inc
pop
inc
adc
add
clc
orl
cmpsb
pop
adc
lea
cli
cltd
es
in
subb
sub
mov
gs
nop
pop
xorl
std
mov
cld
mov
loop
pop
cltd
outsb
rcr
in
data16
or
fucomp
adc
sub
es
lahf
dec
xchg
pop
jp
xorb
xor
je
adc
mov
shr
iret
in
push
cmp
pop
jmp
loopne
aaa
mov
jg
lock
fisubs
notb
dec
sub
decl
push
inc
in
cltd
stos
mov
aaa
push
rol
insb
cmp
sbb
xchg
push
mov
in
out
sbb
push
mov
dec
jne
sub
xor
mov
add
into
out
mov
and
shr
xchg
ret
or
sub
ja
xchg
mov
iret
inc
stc
aam
or
cs
fisubl
mov
push
outsb
fcmovnu
aas
and
and
cmp
loope
mov
jo
dec
cmp
into
inc
ljmp
mov
lock
mov
outsl
pop
mov
push
lret
jo
lret
sub
jg
jmp
rcll
sub
sub
data16
and
lods
xchg
and
fs
jmp
add
imulb
pop
rorb
movsb
scas
cmpsb
loop
negb
fstl
dec
decl
sti
test
cld
lods
add
je
stc
ror
sahf
push
push
xor
or
arpl
pop
in
repnz
je
rcrl
test
in
lcall
inc
sbb
push
push
loopne
insb
insl
mov
sbbb
ljmp
fmul
xor
jp
shlb
pop
add
xchg
add
sub
xchg
fcmovnb
test
sbb
push
push
lea
hlt
adc
add
aaa
stc
pop
mov
and
jns,pt
inc
cmp
std
iret
mov
inc
and
je
cs
adc
jg
les
enter
inc
xor
rcrl
sar
mov
inc
fstpt
movsb
lock
add
sub
push
loopne
fisubrs
cmp
jbe
sbb
adc
xchg
push
mov
lret
xor
jmp
jae
and
dec
adc
pop
xorb
mov
fwait
mov
ret
jp
je
pop
fsub
popf
add
dec
push
fistpl
push
in
pop
ljmp
push
mov
stos
scas
and
clc
subl
nop
test
out
mov
mov
std
dec
xchg
inc
xor
jg
test
test
ljmp
or
mov
mov
lret
jmp
sbb
filds
insb
and
sbb
and
das
insl
jnp
adc
mov
out
loope
inc
test
mov
push
mull
cltd
pop
insl
mov
lods
nop
dec
or
xlat
mov
sbb
cmp
scas
test
lock
jns
sbb
ja
lahf
push
mov
filds
outsb
lock
popf
jnp
mov
mov
outsl
inc
xchg
cli
and
addb
call
aam
add
lcall
hlt
ret
fmull
cmc
decl
xsave
stos
push
popf
xchg
enter
jle
icebp
add
mov
jle
mov
hlt
in
fnstenv
ljmp
icebp
pop
clc
rol
inc
in
dec
adc
mov
jecxz
cmpsl
and
push
dec
jbe
leave
mov
push
jo
bound
fs
jp
mov
xchg
lcall
inc
jge
fcomip
aaa
iret
jnp
lret
aad
lret
stos
or
movsl
mov
je
mov
mov
sarb
push
or
out
xorb
pop
shl
add
test
daa
add
or
pushl
arpl
xor
insl
sahf
lcall
movsl
incl
sub
arpl
daa
lea
add
pop
les
and
or
ss
insl
push
cmp
sbb
or
jb
cld
xchg
test
dec
inc
out
sbb
fidivrs
rcll
and
adc
jmp
xor
push
sahf
int3
jle
outsl
in
loop
and
push
inc
cmpsl
sbb
out
or
mov
in
das
jae
push
outsb
lock
lcall
pop
std
pushf
push
push
pushf
xor
cmp
push
nop
inc
xchg
ret
sbb
or
pmaddwd
push
adc
aad
mov
push
js
push
pop
testb
inc
in
ret
hlt
dec
cld
or
ss
pushl
test
push
push
dec
sbb
add
pop
test
push
mov
push
inc
add
and
mov
push
ficoml
cmpsb
jmp
stos
cmp
insl
push
ljmp
je
lods
imul
and
stc
leave
mov
push
sbb
mov
imul
cmpsb
push
pop
ds
jg
imull
push
cmp
arpl
mov
push
push
out
addr16
inc
lock
pop
ret
or
stc
add
ljmp
js
pop
push
pop
and
adcb
mov
roll
pop
in
or
add
adc
xchg
outsl
insl
sub
or
ds
and
js
inc
mov
ror
and
sub
bound
jecxz
lods
push
repz
ret
lcall
out
or
sbb
subb
in
pop
ljmp
jnp
std
push
jg
in
mov
ja
gs
scas
leave
in
pop
fisubrl
pop
sbb
add
add
sbb
testl
jecxz
xlat
push
fidivrl
in
out
dec
fmull
pop
add
mov
mov
lods
pop
fucomi
jl
add
push
ficoml
add
hlt
inc
in
pop
incb
divb
sar
hlt
out
std
mov
adc
pushf
xchg
enter
fistpl
mov
inc
sub
pusha
outsb
ja
mov
mov
mov
out
cld
out
cmp
sbb
cmp
rcll
rclb
push
adc
jmp
repnz
stos
or
sbb
push
sub
push
add
sub
inc
pushf
pop
enter
sbb
fistl
push
mov
hlt
add
sbb
insl
fistl
inc
test
test
push
inc
aaa
outsl
das
jl
mov
dec
jle
out
into
push
jl
fwait
cmp
pop
std
aam
nop
fwait
les
sbb
lahf
mov
push
sbb
sub
sub
out
cli
pop
mov
out
div
shll
mov
xor
rorl
ror
ss
inc
sbb
mov
mull
pop
adc
pop
fcomp
clc
pop
test
test
xlat
fs
fildll
xchg
push
iret
aad
fldenv
leave
and
mov
mov
fldt
das
rolb
loope
mov
sbb
mov
mov
xor
nop
jbe
adcb
mov
xor
sub
jmp
nop
orb
leave
out
das
xor
mov
push
mov
push
pop
cmp
fwait
add
ret
lock
stos
js
add
loope
adc
rorb
inc
aaa
pop
rcll
int
sbb
nop
cli
scas
lods
jb
call
add
js
cwtl
or
dec
dec
rcl
ficomps
sub
sarb
mov
pop
andb
test
cmp
and
movsb
in
dec
lods
cmc
mov
ret
mov
sub
loope
adc
filds
push
mov
fmuls
xchg
jl
mov
push
inc
pop
loopne
and
and
mov
and
movsl
pop
xorb
dec
push
jb
ret
dec
xchg
mov
and
ja
mov
jo
dec
jmp
dec
mov
adc
push
lret
fisttpl
sbb
call
cmp
test
push
adc
lds
cmp
ds
jmp
cmp
mov
loop
or
jb
fistl
js
xor
loope
adc
xchg
hlt
lcall
sub
cs
mov
sbb
call
add
cmp
andb
inc
stc
mov
mov
andl
push
icebp
jnp
cmpsl
mov
popf
out
clc
ror
cmp
cmp
pusha
xlat
fisubl
adc
jo
es
cmp
lds
es
push
test
fwait
les
in
push
lods
jb
arpl
cwtl
mov
bound
outsb
pop
movsl
cmp
mov
xlat
xor
sub
dec
mov
in
lea
pop
lret
push
lock
gs
mov
pop
pop
outsl
mov
lds
inc
push
dec
sbb
lea
idiv
jl
mov
jmp
push
and
test
and
cmp
lea
jae
cmp
loope
ret
and
and
sbb
jecxz
enter
fwait
popa
add
jnp
rcrl
pop
push
cmc
into
aas
outsl
mov
fidivs
cmpl
mov
lcall
fadds
pop
test
add
fidivrl
dec
adc
icebp
jmp
stos
dec
adc
adc
mov
pop
pop
mov
cs
xorl
xor
mov
xor
out
add
jnp
in
js
lea
stos
daa
out
jnp
in
clc
cltd
inc
mov
bound
xchg
cmp
jne
in
pop
inc
pop
mov
movsl
lods
jns
push
adc
cmp
popa
inc
repz
mov
loopne
mov
lcall
and
inc
add
repnz
enter
push
mov
fisubs
leave
aam
mov
jecxz
ss
pusha
push
std
hlt
sub
test
aam
dec
sti
mov
or
cmc
or
mov
fstpt
jne
icebp
lret
nop
lahf
adc
std
xchg
ljmp
inc
and
lods
fiadds
adc
sbbb
mov
inc
sbb
int
mov
sbb
sahf
sahf
clc
aaa
pop
stc
lds
sub
or
aam
out
and
aaa
xchg
mov
xor
cmpsl
sbb
popf
push
mov
imul
loope
rolb
jo
lea
and
popa
push
mov
cmp
or
iret
clc
stos
push
insb
or
xor
push
int
mov
inc
popa
and
sbbl
cmc
xchg
inc
icebp
jae
xchg
out
cld
loop
in
std
mov
dec
loopne
push
clc
mov
lret
jp
sbb
test
xor
rolb
push
jg
aas
mov
add
cmp
fildll
icebp
adcb
cld
fcomi
loopne
ret
mov
enter
dec
das
std
outsl
xchg
cmp
movsl
push
cmpsl
pushf
sub
jo
push
jo
out
stos
mov
cmpl
test
call
add
adc
xlat
mov
cmp
push
stos
pop
jns
mov
and
dec
push
mov
icebp
adc
sarl
pop
je
pop
popf
sbb
repnz
iret
xchg
shrl
fistl
sbb
dec
push
les
jmp
mov
int3
lcall
adc
stos
pop
xor
mov
mov
lock
pop
adcb
xchg
cmc
movsl
push
test
push
jae
cmp
mov
clc
pop
cmp
gs
lret
adc
outsl
ljmp
call
int
adc
add
in
call
lock
arpl
call
push
scas
add
push
insb
ss
xor
loopne
add
ret
mov
dec
icebp
xchg
xor
pop
mov
jle
pop
stos
repnz
dec
push
dec
outsb
mov
frstor
xor
lock
adc
xchg
cmc
insl
arpl
and
add
inc
ret
and
or
jns
pop
add
movl
adc
cmp
add
inc
add
add
out
add
aad
jle
pop
cli
pop
dec
out
jmp
icebp
pop
mov
sahf
mov
bound
cmpsb
push
fsubl
bound
sub
mov
incl
outsb
pop
repz
loopne
dec
jmp
ds
imul
outsb
xor
imul
inc
xor
dec
fwait
imul
fstpt
sbb
pop
mov
cmp
dec
xchg
mov
add
outsl
cld
fistpl
sbb
pop
rclb
popf
fldl
fdivr
jecxz
mov
dec
and
push
fwait
mov
fistpll
addr16
nop
outsl
xor
aaa
fdivs
inc
jb
aas
or
fbld
jb
jns
iret
sub
push
repnz
jmp
sbb
dec
mov
or
lahf
roll
dec
sub
adc
add
push
mov
mov
shl
shrb
mov
mov
outsl
mov
xchg
mov
insb
push
shlb
or
adc
cmpsb
or
adcb
daa
je
aaa
js
xor
test
stos
mov
dec
mov
mov
out
fcmovbe
mov
pop
inc
mov
push
inc
adcb
lret
loope
xor
adc
rol
jne
call
adc
push
sub
nop
sar
push
rcll
mov
rcr
cmp
mull
xor
adc
mov
or
or
in
mov
sub
xchg
inc
pushf
loop
and
or
pop
sbb
add
xlat
cmp
sar
ret
ds
cmc
pop
and
les
mov
cld
or
jmp
daa
mov
in
fstpt
or
repnz
into
das
jg
test
sub
cld
mov
push
adc
sbb
dec
pop
ja
ret
pusha
mov
mov
out
stc
lcall
out
xchg
push
and
mov
jo
test
leave
and
aaa
jo
dec
outsl
ror
sub
pop
mov
test
mov
fisubl
xchg
cmp
and
lcall
es
out
cmpsl
orb
outsb
std
outsl
sub
inc
scas
js
cmp
movsb
pop
cmp
lods
add
adc
test
jle
inc
lahf
fcos
pop
xchg
test
loope
jle
mov
mov
lret
cmp
or
sbb
lock
mov
push
cmc
stc
enter
mov
shrl
push
inc
aad
loope
movsl
stos
mov
pop
pop
out
xor
mov
xor
and
pop
fisubrl
cmp
sub
add
mov
loop
and
sbb
icebp
out
fdivs
and
nop
cwtl
add
insl
pop
sbb
jbe
mov
mov
mov
pusha
dec
and
cwtl
loopne
pusha
movsb
mov
addl
adc
adc
dec
js
or
std
or
xchg
push
ljmp
push
loop
hlt
dec
vphsubdq
repz
in
jmp
pushf
cld
add
pop
stc
cmp
dec
cmp
push
jl
cmp
bound
cmc
inc
fwait
or
cmp
outsl
popa
jno
stos
cli
daa
xor
xchg
jnp
xor
xorl
ret
andb
push
or
pushf
scas
sbb
std
or
jbe
lcall
sub
aad
fdiv
std
inc
scas
or
fisubrs
aad
mov
and
xor
mov
das
jl
mov
jns
rorl
jge
jp
imulb
push
lods
and
push
push
xor
pop
iret
divb
outsl
adc
and
fld
call
push
pop
jns
cmp
dec
insb
jg
xchg
mov
hlt
lret
enter
ljmp
nop
inc
imul
dec
pop
cli
or
outsb
jmp
pushf
push
jmp
fnstenv
sti
or
sub
cmp
sub
mov
lods
push
mov
push
subb
sbb
lods
inc
popf
nop
inc
jns
repnz
xlat
ja
fimuls
adc
into
add
and
fistps
gs
jae
sbb
pop
fsubrl
call
pushf
pop
js
stc
jl
rcrb
js
stos
std
stos
push
jmp
cmp
popa
add
imul
pop
ljmp
fidivrs
fisubs
mov
mov
shlb
mov
fldt
sub
outsl
xchg
adc
stos
mov
add
in
mov
scas
jnp
call
je
cmp
ljmp
outsl
pusha
jmp
popf
jae
cmp
loop
sahf
jb
incb
and
adc
cwtl
push
ds
jno
mov
sub
push
jl
sub
loope
shll
ja
bound
pop
mov
jbe
add
hlt
test
xchg
loope
adc
fwait
inc
cpuid
fidivl
sub
fidivl
fidivl
outsb
je
movsl
dec
cmp
pop
ss
xlat
imul
ljmp
dec
ds
and
xchg
adc
push
hlt
xor
std
sbb
out
and
pextrw
xor
pop
fsubp
subl
jae
dec
mov
fsubs
rorb
arpl
pop
insl
or
cmc
push
mov
sti
rorb
cld
fnop
add
outsb
pushf
inc
mov
push
fldt
adc
fst
mov
outsb
mov
cltd
aaa
insb
xorl
dec
inc
ffreep
rolb
jp
in
push
xorb
ljmp
int3
and
and
ret
push
pop
sub
adcb
lods
add
loop
add
fisttpl
cmp
mov
jno
mov
cmpsl
cmp
pop
aaa
lds
dec
movsl
xchg
insl
xchg
lods
ljmp
fcmovnu
mov
iret
sbb
inc
ja
bound
sbbl
bound
sub
pushf
xor
adc
dec
add
xchg
insb
ret
sbb
pop
push
andb
bound
call
stos
pop
fadd
lret
clc
and
jb
jge
loopne
fstp
loope
or
pop
add
imulb
jl
mov
fistpl
push
dec
stc
sub
xchg
jg
and
sbbb
adc
pushf
mov
pop
fdivs
lock
outsb
and
shll
xor
xlat
addl
loopne
cmp
jnp
and
pushf
ds
and
sbb
add
inc
mov
mov
adc
mov
sbb
sub
adc
call
sbb
jbe
jb
jbe
mov
sbbb
fwait
stos
dec
mov
cli
add
sub
imulb
sub
dec
icebp
inc
or
divb
mov
lcall
pop
xchg
aad
pop
xor
add
inc
in
incl
std
push
xorl
cs
les
push
movsb
int3
outsl
dec
loope
cmp
ja
pop
loopne
fwait
rcrl
ret
add
clc
ja
jecxz
andl
xor
int
sbb
out
inc
adcl
pushf
cmpsb
test
dec
dec
mov
mov
cli
xchg
shl
int3
mov
xor
inc
inc
lods
fdivl
outsl
cmpsl
mov
pop
outsb
rdpmc
and
jge
icebp
mov
jno
sub
adc
jg
mov
dec
dec
mov
add
mov
mov
js
xlat
test
jle
repnz
mov
inc
push
push
pop
sub
add
cmpsl
cmp
or
mov
inc
pop
mov
add
add
xchg
fbld
out
subb
enter
lds
cld
lahf
int3
xchg
xor
mov
mov
xchg
jg
push
push
imul
cmpps
pop
or
mov
decl
xlat
xor
cmp
das
inc
or
lcall
xor
movsb
mov
push
push
insl
push
xlat
lods
dec
pop
lds
and
pop
out
mov
cwtl
out
fdivs
xor
mov
sbb
jno
jmp
call
mov
push
das
data16
fldt
insb
or
ss
data16
cltd
lahf
xlat
xor
pop
mov
dec
icebp
movsb
into
sub
mov
inc
rcr
adc
test
aam
cld
or
sahf
dec
stos
push
outsb
sbb
pop
scas
add
ss
mov
or
jb
pop
icebp
adc
ret
pop
fcoms
adc
scas
jno
xor
cmp
jg
cld
sbb
push
cmpsb
push
push
test
adc
fs
aaa
inc
hlt
decl
sahf
addr16
fisttpl
arpl
inc
dec
sahf
jmp
jle
in
lea
and
pop
out
je
adc
sbb
mov
xor
lahf
mov
js
jmp
jne
mov
ds
push
mov
or
xor
aaa
clc
mov
inc
lret
daa
pop
movsb
js
mov
pushf
jo
outsw
jg
outsb
scas
lods
xchg
jl
jmp
xchg
addr16
mov
mov
jnp
out
sub
sub
loope
add
fnsave
cwtl
bound
and
ljmp
mov
sbb
jg
or
scas
fstl
movsb
dec
add
push
dec
sbb
int
arpl
divb
das
leave
mov
in
and
bound
lds
mov
cmp
jb
adc
and
or
in
mov
pop
incb
pusha
sbb
js
sub
add
jbe
push
push
ja
movsb
test
adc
movsl
push
les
and
pop
pop
out
mov
fstl
mov
clc
dec
lock
fisttpll
inc
add
imul
mov
push
and
inc
fists
pusha
ret
rcr
in
shl
xor
inc
lcall
inc
lahf
lods
in
mov
mov
or
adc
lret
fwait
cmp
jo
sti
sbb
sbb
adc
or
aaa
mov
mov
xchg
pop
nop
fbstp
sub
fildl
and
mov
jnp
popa
popa
addr16
inc
sub
ss
mov
pop
repz
mov
sub
cmpsl
stos
fwait
cmpb
mov
mov
add
push
add
add
popf
sub
cmp
rolb
imul
or
fidivl
aad
loopne
sub
xchg
ljmp
test
inc
dec
sub
and
lret
es
es
sahf
mov
lods
pusha
arpl
call
adcb
aas
outsb
xor
ds
mov
jbe
in
dec
jp
xor
mov
cwtl
mov
rolb
adc
pushf
jl
cli
or
enter
xchg
lods
lods
test
xchg
ljmp
mov
pop
in
std
add
das
cwtl
dec
lea
insb
clc
ja
hlt
adcl
xor
fidivs
pop
mov
add
jns
mov
mov
std
push
addr16
adc
jns
or
enter
cmc
mov
cmp
hlt
mov
in
stos
daa
imul
inc
lods
enter
fldt
test
cltd
mov
push
xchg
adcb
std
jne
push
jmp
pop
test
cld
int3
jl
fmull
and
ret
movsb
stos
into
rorb
inc
xchg
dec
fisubs
push
icebp
out
or
and
lahf
sbb
stos
aam
pop
cmp
xlat
jmp
mov
and
inc
cmp
jb
sbb
and
push
rclb
mov
add
adc
add
sbb
pop
rcrb
sub
xchg
xor
push
ret
sub
inc
mov
fmull
sahf
mov
loop
js
stos
and
lds
cmp
popf
push
pushf
pushf
lret
jno
lcall
dec
xor
rol
clc
mov
andb
and
ret
pop
pop
call
jae
mov
mov
push
mov
xor
cld
xor
imul
lret
pusha
mov
jg
adcl
inc
mov
mov
or
subb
out
add
cmp
inc
repnz
pusha
enter
xor
adc
push
jnp
inc
jnp
sahf
pop
add
mov
jae
scas
sub
enter
add
jae
or
jo
rorl
push
mov
sti
adc
sub
orl
cmc
mov
out
movsl
fdivs
sbbl
inc
jae
fiadds
pop
or
in
ljmp
mov
call
sbb
loopnew
icebp
les
jg
mov
adc
jae
lods
xor
push
cs
mov
imul
pop
inc
test
iret
movsb
jb
cld
loop
cs
pop
stos
xor
sbb
mov
adc
mov
cwtl
lods
inc
fwait
xor
insl
and
ret
push
and
pop
shll
std
mov
inc
ljmp
sbb
xor
cmc
pushl
sbb
dec
or
push
gs
or
pop
push
outsl
mov
add
cmp
call
inc
cmpsl
jg
adc
into
in
inc
jmp
decb
xor
and
mov
jns
fs
iret
std
fcomps
push
out
cs
fsubrs
pop
push
scas
test
mov
scas
aaa
xchg
loopne
jb
dec
or
push
clc
dec
mov
inc
cmpsb
fsubl
xchg
fmuls
sub
pop
ss
mov
push
bound
sarb
jecxz
cwtl
mov
mov
inc
add
ret
js
mov
jecxz
xor
into
adc
mov
or
ret
or
fwait
push
xchg
mov
inc
add
fidivrs
pop
into
or
aad
adc
jp
add
lahf
mov
mov
push
dec
mov
ror
sub
xchg
ret
dec
xchg
pop
xor
mov
push
orb
xchg
int
fxch
shlb
sub
jecxz
xchg
in
and
fs
imul
test
fcmovbe
mov
das
cli
jmp
push
outsl
int3
jmp
stos
fists
and
adc
leave
js
cld
outsl
test
add
shll
and
gs
fbld
test
mov
popf
cmp
push
or
test
ret
push
addb
fisttpl
stc
repz
xor
test
sub
and
and
je
and
outsl
cld
pop
pop
and
adc
addb
idivb
pop
mov
inc
mov
fs
orl
ret
fdiv
das
cmc
fdivrs
and
push
mov
inc
loop
rcrb
daa
and
ret
jl
dec
adc
lahf
xchg
jle,pt
push
shl
cmp
xchg
jg
pop
call
add
and
rolb
sbb
cmc
push
push
rorb
mov
jbe
jns
aad
incb
enter
adc
xor
push
stos
cmp
test
push
push
je
and
loopne
sar
mov
inc
loop
xchg
es
mov
iret
mov
negb
aad
aad
aaa
sarb
mov
rcll
ds
mov
add
xchg
mov
fmuls
jle
ja
ffree
cmp
and
jg
outsl
mov
add
mov
mov
mov
inc
insl
cli
sbb
push
cmp
pop
shl
mov
test
add
inc
fsubrl
add
aam
xor
lea
and
stos
lock
fldenv
stc
lods
cli
fcomip
mov
sti
push
scas
dec
sbb
mov
orb
pop
loop
lods
lcall
das
cmpsl
inc
cmpsb
jl
loope
dec
jns
lods
outsl
sub
sbb
mov
cmpsl
outsl
adc
js
jo
pop
mov
stos
fcoms
push
outsb
sti
xchg
or
mov
leave
mov
repz
in
xor
or
pop
sub
out
dec
cmp
jmp
mov
lret
xor
jns
dec
icebp
cmc
aaa
inc
les
fidivrs
scas
mov
pop
mov
or
fidivs
push
lret
mov
jl
ja
or
bound
xchg
jne
pop
loopne
mov
mov
cmp
repnz
adc
adc
sub
sbb
xchg
aam
imul
jmp
and
fidivs
xor
sti
and
or
decl
int3
pop
adc
sbb
imul
ret
push
shlb
das
js
sbb
lret
fdivrl
icebp
mov
lcall
push
div
xor
test
mov
add
sub
jmp
add
or
pop
mov
inc
out
or
xlat
lcall
repnz
or
scas
push
push
push
push
adc
push
les
or
pop
mov
pop
jg
testb
pop
or
sbb
in
adc
fistps
xor
mov
lods
insl
add
and
xorb
iret
add
and
pop
loope
daa
or
imul
add
inc
stos
test
inc
bound
shlb
and
dec
lret
push
jg
xchg
test
stc
test
fprem
push
js
mov
pop
jp
mov
sub
add
pop
lea
push
push
sub
je
push
jno
mov
fcmovnu
clc
adc
movsl
push
cwtl
imul
outsl
popf
fs
je
add
sbb
enter
xchg
aad
inc
mov
test
orb
mov
or
fstpl
mov
sbb
pusha
xor
es
jge
pop
insb
mov
cmp
pop
js
xorl
lds
push
sub
or
sbb
xchg
mov
xor
mov
insb
fbld
jl
push
cwtl
arpl
ljmp
jg
push
sbb
xorb
faddl
cmp
fsubl
xchg
jns
popa
jbe
cwtl
mov
and
or
xor
aad
push
xor
xchg
xor
sub
filds
sub
cs
repz
xor
jp
cld
in
pop
jge
jb
adc
scas
loop
dec
or
shrl
movsl
lahf
push
sub
cld
lds
or
pop
cs
enter
fistpll
push
dec
xor
dec
inc
nop
std
mov
push
clc
fwait
pop
test
int
ss
ss
les
mov
insl
mov
cmpsl
sbb
test
adc
and
pop
mov
repnz
push
inc
paddusb
sub
cmpl
lea
dec
inc
outsb
arpl
in
or
f2xm1
lea
roll
add
jbe
aam
movsl
test
xor
mov
pop
rcrl
rcrb
pop
fstpt
out
sub
and
nop
add
jge
add
ficompl
xchg
hlt
das
xor
test
divb
pop
xchg
fs
dec
rolb
lret
lret
sarl
push
or
mov
mov
and
cld
test
sub
pop
xor
sbb
test
lock
inc
push
popf
fwait
sarb
aas
dec
std
or
push
mov
push
inc
clc
dec
xor
daa
pop
ljmp
add
fisubs
inc
addl
into
sbb
push
je
or
sub
mov
shll
aam
cld
push
and
pop
xor
xchg
incl
and
lods
in
cld
mov
lock
or
mov
jnp
inc
or
pop
pop
faddp
or
inc
inc
jmp
mov
push
arpl
jmp
sub
fs
out
loop
pusha
lea
fsubrs
cmc
and
hlt
jge
lods
sbb
cmp
cli
and
stos
or
mov
adc
in
sbb
adc
ss
cmp
outsb
stos
adc
mov
lea
adc
test
rolb
fnstcw
cld
xchg
jl
push
stos
mov
xor
sbb
pushf
xchg
sbb
loop
ret
test
push
sub
pop
pop
mov
sbb
xor
lret
in
pushl
mov
in
cmp
xchg
in
gs
sub
fcmovbe
pusha
push
jo
clc
fldl
in
jno
adc
xor
jge
mov
lahf
pusha
inc
dec
out
cmp
imul
pop
call
cmpsl
adc
pop
bound
divb
rcrl
movsl
mov
cmp
stc
out
mov
jle
push
xchg
mov
mov
iret
in
add
sti
or
imul
imul
out
inc
outsl
test
loopne
sbb
mov
outsl
pop
or
movsl
addb
cs
sbb
mov
pop
out
ret
loopne
mov
push
xchg
cwtl
and
sub
adc
mov
out
call
aad
and
cmp
lcall
sbb
pusha
fs
inc
inc
jb
sbb
fcoms
mov
mov
pushf
leave
nop
push
mov
ficoms
adc
sub
mov
stos
mov
sbb
cltd
mov
pop
jbe
rclb
sti
mov
cld
or
cmp
rcrl
loope
bound
jae
pop
mov
stc
mov
insl
or
xchg
mov
mov
cmp
lds
nop
into
int
sub
cld
fwait
jp
call
popa
iret
inc
fdivp
incl
add
cltd
jmp
push
fs
push
mov
inc
and
sbb
pop
fwait
and
movsl
sarl
shlb
push
mov
push
sub
out
adcb
leave
adc
sub
call
add
and
jmp
int
lret
add
push
leave
mov
push
and
ficompl
lahf
bound
popa
sbb
xchg
inc
add
movsl
sahf
or
xor
cld
das
je
decl
inc
add
mov
outsb
mov
xchg
mov
xchg
add
mov
out
push
int
push
sbb
xor
cld
scas
dec
push
sub
mov
negb
push
adcb
ljmp
mov
add
jecxz
fcomps
push
pusha
mov
icebp
adcb
cmpsb
sub
xlat
aaa
push
dec
in
sbbb
lods
jg
test
aaa
fnsave
mov
iret
call
push
jl
jne
test
call
pop
and
into
push
sbb
mov
push
sbb
fadds
adc
test
std
mov
add
mov
fildll
add
jl
lock
leave
adc
inc
inc
add
ljmp
lock
aam
pushl
adc
push
inc
jg
jbe
popa
bnd
mov
mov
leave
hlt
add
pinsrw
aad
out
lret
adc
out
inc
mov
call
sbb
pop
and
mov
ja
mov
rcrb
xchg
jo
inc
sbb
ds
outsb
mov
das
sub
gs
cmpsl
sarl
mov
push
pop
jne
push
cs
pop
cmpsl
out
sub
push
pushf
fnstenv
mov
loope
loopne
dec
cmp
lret
daa
arpl
mov
lcall
sbb
mov
mov
stos
sbb
fstpt
stc
std
inc
fstpt
adc
xchg
jecxz
sbb
call
pop
fistps
xchg
testb
and
call
pop
add
inc
outsb
out
add
in
cwtl
push
mov
sbb
outsb
test
add
jnp
movl
dec
push
int3
adc
mov
out
push
pop
fcmovnbe
ja
or
dec
inc
int
add
push
pusha
int
subb
leave
push
sbb
mov
setns
mov
adc
fcompl
dec
or
sar
mov
or
je
loop
sub
jne
add
fsts
enter
xor
leave
cmp
scas
cmpsb
aas
xlat
dec
mov
xor
aaa
pop
out
mov
and
mov
ss
cmc
outsl
add
jge
cwtl
add
bound
lds
mov
inc
push
nop
je
xor
push
pop
test
fists
jmp
or
fstl
aas
add
cmp
xorb
adc
jecxz
into
pushf
movsb
mov
jg
cmpsl
xor
mov
push
xchg
pushl
iret
xchg
fs
jmp
insb
cmp
ret
test
jno
pushl
subb
cmp
je
push
cmc
pop
sbb
loop
loope
sbb
cli
push
mov
mov
mov
mov
pop
fstl
dec
or
and
add
add
or
add
or
js
dec
rclb
pop
sub
adc
stos
faddp
orl
lods
aam
adc
mov
enter
clc
imul
in
push
mov
ds
insl
les
or
and
ret
sub
call
jb
inc
mov
or
add
push
daa
test
xchg
js
adcl
cmp
in
add
test
jb
testl
sub
and
push
outsb
mov
cmp
pop
xchg
jb
pop
inc
xor
sbb
data16
add
jne
pop
dec
pop
loope
add
js
or
sub
call
mov
jae
and
and
xchg
in
aas
and
mov
mov
gs
outsb
mov
insl
or
mov
and
out
dec
rorb
pop
dec
addb
rcll
jecxz
dec
cmova
stos
loop
or
ljmp
xor
or
dec
inc
outsl
jo
cld
and
dec
jne
and
add
mov
popf
pop
sub
out
dec
imul
inc
sbbl
cld
in
jmp
push
inc
and
jno
aas
mov
dec
add
pop
inc
mov
cmp
dec
inc
jne
dec
aaa
jmp
mov
push
cmc
fwait
add
jo
cmpsl
xor
into
fidivrl
bound
fs
subl
push
in
sub
add
xchg
ds
adc
push
fstpl
jno
lcall
lcall
sbb
ret
cmc
jle
icebp
mov
sbb
lock
daa
out
xorl
or
sbb
js
icebp
adc
sti
adc
cli
add
jp
fdivs
les
outsb
push
jl
daa
in
mov
push
push
or
repz
pop
jmp
jo
jle
cmp
jmp
rcrl
inc
sbb
jl
or
std
mov
insl
inc
jne
mov
call
arpl
xchg
sub
neg
lods
das
mov
out
and
inc
sbb
mov
inc
je
and
std
xor
add
sbb
test
sub
iret
mov
cmp
sbb
push
pop
mov
cmp
mov
jae
repnz
mov
icebp
inc
dec
sahf
hlt
push
ffree
xor
pop
hlt
cmp
popl
push
rclb
sub
fsubr
xor
outsl
mov
js
lds
push
sub
subl
mov
cmpsl
iret
aaa
fisubrs
fdivrl
mov
popa
dec
mov
ss
movsb
or
or
xor
pop
fisubrs
and
in
int3
in
mov
jnp
add
stos
or
pop
jp
push
push
sub
hlt
cmp
testb
rorb
mov
or
pop
fcoms
add
movb
mov
push
push
push
cmc
aam
fnsave
xlat
push
inc
xorl
dec
fs
inc
popa
js
mov
fisttpll
mov
push
mov
jp
sub
push
pusha
sti
jge
mov
aas
inc
sti
fildl
mov
push
je
loop
rol
lea
xor
ss
imul
std
sub
nop
add
xchg
inc
push
cmp
inc
add
ds
push
sbb
mov
mov
out
mov
es
call
jb,pt
sub
pusha
std
frstor
das
std
pop
ds
mov
add
add
repz
sbb
mov
xchg
mov
divb
mov
sbb
jmp
and
icebp
aaa
ljmp
shrl
inc
jg
cltd
aam
xor
mov
movsl
or
pop
movsb
and
or
jne
cmp
xchg
packsswb
insl
cwtl
idivb
jno
xchg
mov
jne
push
cld
insl
loope
jg
xchg
jo
pop
or
jle
jb
fistps
mov
das
mov
sbb
push
rol
test
push
jnp
test
or
jo
sub
jge
cmp
push
dec
mov
out
jl
push
dec
sub
mov
dec
jmp
jg
int3
inc
xor
dec
push
scas
fists
or
or
out
xor
jb
dec
sqrtps
out
add
sbb
js
add
mov
gs
loopne
sub
push
popf
pusha
jbe
lea
jb
sub
aaa
jl
hlt
dec
mov
xor
and
push
xchg
lea
pop
or
sub
mov
dec
mov
std
mov
stc
std
ficompl
dec
stos
imul
cwtl
cmpb
or
jl
jae
xor
pop
and
shll
mov
mov
ljmp
mov
sar
mov
sbb
or
test
icebp
nop
push
cmp
or
adc
ljmp
fdivrl
movsb
and
or
clc
popa
cmp
jg
rcrb
xor
xchg
dec
aad
in
xchg
iret
lods
sub
xor
loope
les
lret
adc
fwait
rcrl
std
das
jnp
push
outsl
fisttps
adc
sub
shl
repnz
mov
push
imul
push
cld
idiv
scas
movsl
pop
cli
sbb
out
cmp
mov
pop
or
jle
push
shlb
xor
hlt
test
mov
dec
int
push
inc
sar
adc
insb
adc
push
clc
in
andl
shrb
ret
mov
mov
mov
cmpl
push
push
or
jg
ja
inc
in
jo
and
sub
pop
call
push
and
pushf
out
inc
ja
xchg
ficoms
dec
sub
pushf
mov
dec
in
inc
aad
iret
int
push
test
dec
pop
fdivr
loope
in
test
mov
daa
mov
pop
sub
mov
add
mov
adc
add
lods
ljmp
dec
es
adc
repnz
pop
inc
push
pushl
fwait
inc
loopne
jmp
les
inc
pop
dec
sbbl
scas
mov
xchg
rcrl
pop
jbe
and
mov
iret
push
push
adc
inc
cltd
adc
imulb
cmp
jmp
sahf
mov
xor
jle
mov
push
cmp
sub
push
stos
or
jp
inc
dec
pop
outsb
nop
mov
pop
out
pop
pop
popa
cmc
das
movsl
or
dec
fildll
mov
add
mov
xchg
mov
ret
lret
and
aaa
add
mov
shlb
push
sbb
adc
and
pop
pop
cmp
cltd
into
js
inc
mov
lock
cld
sub
inc
stos
push
push
sbb
xchg
cmc
fs
dec
fmull
mov
incl
xchg
lcall
std
pop
sub
add
add
test
dec
dec
roll
mov
out
dec
andb
sub
shrl
add
and
xor
cwtl
dec
std
aaa
pop
ja
out
or
xchg
test
test
inc
xchg
mov
push
or
nop
stos
xor
mov
adc
test
std
inc
shl
es
add
cmc
in
cmp
jecxz
es
mov
mov
add
mov
lods
mov
push
in
mov
xchg
and
fs
aaa
je
incb
icebp
jno
lret
push
pop
inc
inc
dec
ss
lock
xchg
out
faddl
lods
sub
loopne
mov
cmp
cmpl
sbb
cmpsb
leave
inc
aam
pop
clc
sbb
mov
adc
ljmp
inc
or
add
lods
pop
sub
lods
insb
or
mov
mov
data16
imul
mov
cmp
adc
loop
adc
cwtl
ss
cmp
push
mov
adcl
loope
or
and
mov
scas
sahf
adc
shl
fnstsw
pop
repnz
and
adc
push
inc
fildl
mov
in
xchg
cwtl
mov
pop
pushf
xchg
sub
xor
mov
fsts
push
pop
pop
sub
sub
cmp
scas
push
loope,pt
push
or
jmp
mov
mov
jp
dec
cmp
outsb
pop
loope
push
push
cmp
int3
mov
mov
mov
out
in
cli
adc
cmp
aaa
or
es
frstor
scas
pop
mov
das
jl
test
call
in
push
ret
push
push
dec
test
cmp
fbld
dec
xchg
ljmp
cs
xor
or
jp
jl
cmp
imul
add
mov
sbb
sbb
mov
bound
pop
test
mov
or
mov
mov
dec
ds
inc
gs
sbbl
mov
test
or
jnp
cli
jae
push
pmulhw
std
pop
push
pusha
sbb
push
sbb
out
cmpsb
jmp
and
push
test
and
cmp
bound
inc
jecxz
push
outsl
cltd
sbb
loop
pop
test
inc
syscall
dec
push
sarl
xor
dec
pcmpgtw
call
pop
jne
inc
cltd
pop
xchg
sub
test
jns
dec
adc
shlb
jp
mov
fimull
jle
cltd
into
jbe
lods
adc
mov
add
mov
shll
vmovmskps
shrb
adc
ja
xor
mov
shr
add
ret
sarl
cmpl
mov
sahf
fisubl
test
fmuls
pop
stos
in
test
daa
cmp
sbb
pop
mov
jo
sub
dec
mov
fidivl
cld
out
xchg
pusha
test
movq
adc
dec
jge
jne
aas
sbb
add
push
xchg
call
sbb
mov
dec
mov
repnz
mov
shlb
push
inc
fwait
mov
jl
jge
test
add
test
and
pop
inc
mov
loopne
fisubl
and
dec
xchg
out
or
or
aaa
ret
test
into
or
xor
rcrb
mov
mov
add
mov
mov
sbb
push
out
into
loop
dec
add
or
jne
inc
lret
adc
cmp
popa
inc
adcb
mov
mov
cmp
cmpb
clc
scas
mov
xchg
and
adc
pop
movsb
sub
mov
in
cmp
out
jl,pt
repz
arpl
xchg
adc
outsb
pusha
add
push
test
sub
push
adc
pop
xor
sbb
lock
mov
pop
or
loope
add
dec
pusha
sahf
outsb
cmp
cmp
aam
or
jg
add
jg
mov
pop
sti
fisttpl
jg
bound
add
inc
cmp
test
aam
pop
mov
mov
xor
std
pop
arpl
sahf
imul
repz
les
stos
pop
out
sbb
aam
xchg
cmp
inc
xchg
bound
lret
add
sbb
ds
cld
lods
add
jge
leave
out
xorl
add
iret
subb
aam
mov
inc
mov
xor
cli
js
push
gs
cmp
jle
insb
insl
ljmp
fadd
aas
in
mov
test
jne
outsb
dec
mov
ja
add
int3
movsb
lea
bound
pop
xchg
dec
jp
pusha
lret
test
adc
negb
push
js
or
ret
sub
or
mov
loop
cmpsb
loop
stos
xor
cmp
gs
fcmovnb
scas
or
sub
adc
les
mov
xchg
gs
std
mov
outsb
roll
adc
sub
das
pop
xor
repnz
iret
fnsave
jecxz
mov
fndisi(8087
mov
fisubrl
inc
hlt
fistpll
aas
or
add
jmp
mov
cmp
dec
mov
sbb
push
popa
dec
mov
or
test
dec
sbb
push
mov
das
xor
aas
shl
pop
mov
push
outsb
inc
mov
das
test
btsl
xor
das
or
xchg
movl
pop
pop
xchg
mov
pop
mov
stos
cmp
clc
shlb
adc
mov
sbbl
adc
pop
adc
xor
xchg
xor
lds
hlt
aad
or
loope
fwait
notb
xlat
push
stos
dec
std
pushl
or
rorb
sbb
mov
fiaddl
mov
pusha
xchg
sub
jmp
inc
cli
jmp
idiv
popa
rolb
clc
inc
push
jbe
aas
shll
testl
xchg
or
fdivs
in
inc
lds
aam
aad
adc
mov
push
adc
int3
xor
jne
jmp
fmul
sbb
sbb
jo
test
cmc
xchg
and
mov
push
sbb
aas
pop
add
call
jle
xchg
in
cmpsl
aaa
in
loope
xchg
rolb
pop
fildl
sahf
es
in
fidivrl
test
lcall
int3
mov
movb
and
aaa
cmpsb
pop
pushl
in
xorb
aas
in
pop
icebp
push
push
daa
lcall
cld
addb
mov
int3
or
in
or
mov
mul
mov
push
decb
jae
cmp
repnz
add
shll
fbstp
push
out
adc
inc
and
je
ret
adcb
xor
movsl
mov
fcomi
dec
jnp
stc
iret
and
das
mov
icebp
imul
icebp
mov
mov
mov
mov
popf
insl
imul
xchg
jge
pop
ss
ret
jae,pt
outsl
mov
sub
andl
das
push
loopne
push
lods
repz
xor
rclb
loope
dec
mov
cli
fcomps
xchg
js
dec
icebp
test
push
jl
jo
dec
int3
rorb
fdivs
mov
sub
mov
dec
test
mov
lea
es
mov
shll
test
sbb
pop
xchg
rorb
pop
out
inc
fldcw
dec
lock
es
adc
adc
push
jno
mov
mov
and
push
dec
adc
dec
adc
les
pop
pop
add
mov
mov
mov
cmp
mov
jno
rcll
orb
jmp
cld
push
push
in
fistpl
and
push
stos
insb
pop
sarb
loope
adc
je
adc
push
daa
and
lret
aaa
jp
das
xor
dec
mov
mov
out
lcall
adc
mov
jl
sbb
jo
sub
sahf
mov
or
ds
pop
scas
mov
xchg
xor
push
sub
shll
das
push
shlb
cmp
pop
sub
cmp
jp
dec
rcl
test
sub
lock
or
cmp
ljmp
pop
mov
movsl
lcall
push
sahf
fcoml
ja
and
mov
jne
xorb
xor
pop
pusha
test
cmpsb
loopne
ret
fcomps
popf
mov
xchg
jle
stos
cltd
test
xchg
or
push
mov
sbb
inc
in
out
cmp
mov
xor
cmp
shll
cltd
cmp
push
cmp
in
jmp
pop
push
aad
adc
and
jbe
xor
cltd
push
adc
movsb
mov
enter
sarb
or
mov
ret
xchg
je
jl
xor
insb
ja
outsb
push
mov
jae
daa
cli
dec
lahf
das
punpckhwd
add
idiv
in
pop
cld
out
cmp
shrl
inc
jne
loopne
cmp
fmuls
insl
addb
mov
sbb
push
adc
outsb
ljmp
insb
std
mov
adc
and
sub
pop
leave
pop
push
pushf
mov
fistpl
jne
vmulpd
dec
sub
inc
mov
loope
mov
mov
in
pop
jmp
enter
insb
dec
pop
sbb
fldt
test
or
and
les
jne
mov
xor
adc
aaa
in
add
jnp
mov
shll
adc
ds
stos
lods
lea
clc
or
pop
cli
lcall
xchg
ret
test
cmpsb
pop
sub
sub
mov
in
shll
outsl
pop
sub
xor
nop
mov
push
ja
dec
and
incb
mov
mov
push
lods
mov
and
in
movsb
scas
inc
mov
repnz
mov
jg
add
xor
mov
shlb
das
sbb
xchg
outsl
pop
xor
add
push
aad
sahf
push
push
rcr
pop
mov
cmc
adc
jmp
fsub
popa
out
sub
xor
jp
mov
sti
outsl
outsl
dec
xchg
dec
aam
cld
mov
lret
or
dec
sub
ljmp
adc
loop
pop
inc
jl
data16
inc
lahf
and
shrb
addr16
call
jnp
les
sbb
sbb
test
dec
gs
mov
shrb
aaa
ljmp
inc
cmp
roll
data16
jne
add
iret
push
inc
adcl
fs
pop
push
inc
inc
and
sub
dec
pop
shlb
dec
add
rorl
pop
cmpsl
inc
or
imulb
xorl
add
div
pusha
ds
xor
xor
iretw
cwtl
int
jl
outsl
aaa
ss
xor
lods
fisubl
pushf
jns
adc
movsl
mov
fildll
adc
jo
lret
icebp
mov
inc
push
pop
loopne
or
lret
pop
add
push
movsl
cmp
cwtl
xor
and
in
cmp
movsb
mov
xor
sbb
stc
mov
clc
pop
xchg
sub
cmp
or
jge
push
filds
dec
pop
cwtl
inc
jmp
mov
adc
or
adc
fidivl
adc
mov
imul
inc
aad
jns
dec
inc
mov
pop
or
cmp
cld
mov
lods
or
insl
roll
cmp
int3
inc
imul
fs
dec
mov
jmp
mov
ret
rorb
fstl
mov
lock
gs
pop
orb
jecxz
mov
inc
and
imul
xchg
dec
jg
repz
dec
les
adc
rorl
sarl
xor
aad
fbld
jecxz
xor
neg
cmp
xchg
cwtl
cmovge
mov
pop
fsubrl
call
aaa
lock
jle
and
inc
fcomi
sbb
movsl
adc
mov
inc
daa
sbb
ficomps
sahf
hlt
push
popa
addr16
std
in
push
insl
xor
mov
frstor
lea
ret
icebp
or
xchg
lea
lea
scas
pushf
adc
pop
pop
lods
mov
cmp
mov
aas
jo
adcl
loopne
cld
jmp
cli
shrl
fisttps
inc
push
push
add
dec
mov
and
jo
dec
popf
hlt
cs
arpl
dec
pop
arpl
pusha
loope
push
ret
gs
imul
or
movsb
insl
imul
popf
jo
prefetch
std
hlt
mov
sbbb
and
or
fwait
pushw
lret
xchg
mov
mov
call
rcll
push
pushf
xchg
outsb
mov
and
ljmp
test
hlt
call
ret
out
mov
xor
mov
dec
mov
es
mov
inc
cmpsb
int3
or
mov
add
mov
dec
adc
mov
adc
xor
cli
in
pop
loopne
mov
imul
lods
nop
and
pusha
stos
into
add
out
push
mov
js
xchg
ds
cltd
scas
mov
int
testl
outsb
shrb
in
lods
mov
imul
ret
scas
sbb
shrb
adc
sbb
and
or
clc
mov
sbb
push
addl
add
inc
jp
pop
sti
mov
or
cwtl
jge
or
and
sahf
cltd
adc
sbb
dec
cld
aam
not
in
cs
aas
mov
mov
lahf
mov
mov
movsb
mov
dec
jae
movsb
sarl
fdivr
mov
cmp
in
movsl
and
mov
sti
mov
xchg
es
lods
add
daa
dec
jge
lret
push
mov
iret
arpl
in
aaa
jl,pn
hlt
cmp
test
fldenv
fldcw
sbb
jns
and
mov
dec
negb
lds
mov
lret
adc
cltd
divb
and
mov
incb
cwtl
test
jo
or
jge
mov
ror
mov
mull
adcb
jmp
cmp
pop
jecxz
adc
mov
je
inc
push
push
mov
subl
repnz
and
in
ljmp
and
dec
movsb
leave
dec
popa
mov
cmc
ds
sbb
or
inc
ljmp
lret
cmp
push
loopne
or
push
adc
mov
movb
jo
or
dec
mov
add
pop
call
rolb
scas
es
sarl
ficomps
xchg
pusha
cmp
xlat
xlat
icebp
xor
fildll
or
and
mov
je
mov
repnz
dec
test
ret
or
add
repz
shlb
pop
movsl
mov
out
adc
mov
cmpsl
incb
shlb
xchg
daa
xchg
fcoms
xchg
out
mov
cld
mov
add
insl
push
jno
adc
shlb
fcmovu
stc
clc
lds
or
ja
cmp
mov
shld
loope
and
xor
push
push
mov
xor
notb
sbb
adc
mov
cs
lods
mov
push
mov
and
mov
jle
dec
mov
outsb
dec
add
push
out
push
push
jnp
sbb
jl
adcb
aad
add
scas
movl
subb
xor
std
and
xchg
jecxz
mov
sbb
adcb
pop
cld
xchg
ja
jmp
cmp
push
pop
insb
mov
icebp
fsts
sbb
and
xor
sbb
or
sub
mov
jl
xor
jo
in
fstpl
and
mov
cs
cli
jmp
cmp
mov
shl
sbb
int
push
xor
call
mov
inc
mov
jle
mov
and
lds
test
lcall
out
sbb
cmp
push
push
cs
das
gs
test
inc
jno
adc
fsubrp
in
popf
movsl
push
pop
push
jecxz
fildll
stos
inc
shlb
pop
mov
aaa
mov
jb
sahf
movl
inc
jnp
test
dec
decl
daa
inc
inc
push
cmp
cmp
or
add
outsl
mov
cmp
out
jp
test
bound
inc
sbb
loopne
xlat
pop
mov
mov
pop
push
pop
andb
addb
jns
fcompl
or
outsl
xchg
arpl
cmpsb
cwtl
jns
mov
sub
fdivrl
ljmp
push
and
mov
sahf
xchg
insl
aas
pop
std
icebp
test
cmp
outsb
jecxz
aad
outsl
or
cmpb
mov
aad
or
cmp
mov
xor
add
mov
notl
sub
jmp
xchg
sbb
scas
insl
add
and
sbb
stos
jno
loope
ja
cmp
imull
ss
push
shll
pushf
outsl
inc
jg
xor
in
ja
jae
pop
pop
jecxz
icebp
fcmovnu
mov
nop
out
sub
pop
je
sub
and
xchg
out
out
xchg
out
xchg
bound
push
add
das
cwtl
or
inc
pop
out
push
lods
pop
cli
mov
adc
mov
mov
test
push
push
jbe
jecxz
inc
mov
gs
mov
push
cld
mov
push
mov
sbb
inc
imul
hlt
jge
dec
mov
stc
sub
jg
les
jae
xchg
sbb
aam
or
mov
push
cmp
inc
loope
mov
pushf
lods
add
cmp
dec
mov
push
adc
outsl
pop
push
dec
repnz
lret
inc
xor
test
out
aad
fiaddl
push
or
jbe
in
adc
cs
leave
lcall
mov
sbb
lds
pop
inc
sahf
hlt
or
cld
aaa
mov
fisttpll
imul
lods
or
ljmp
adc
aam
push
rorl
fdivr
aam
mov
out
ljmp
cmp
jmp
movsl
mov
andb
lock
push
mov
sub
ss
inc
and
clc
cmp
pusha
xchg
mov
mov
mov
cmp
sub
movsb
loop
incb
add
mov
sbb
mov
adc
test
aas
fistps
or
lods
or
jae
shll
xor
lock
movsl
test
or
cmp
rolb
adc
xchg
xchg
scas
or
mov
mov
pushf
pop
fiaddl
push
pop
sbb
cmpl
jl
push
pop
pop
addb
jle
fildll
in
mov
lock
push
adc
mov
lret
sbb
or
jg
push
icebp
mov
and
inc
arpl
push
push
pop
imul
and
fistpll
push
sbb
jmp
inc
xchg
ss
aaa
cli
movsl
mov
pop
lret
divl
xchg
movsb
outsl
outsl
mov
lcall
dec
ss
clc
lds
aas
adc
pop
inc
pop
pop
jge
shl
jp
jg
dec
pop
xor
mov
and
das
std
add
sarb
lcall
sbb
xor
sbb
ljmp
dec
rolb
bound
mov
mov
jg
mov
fs
mov
inc
ret
stos
jae
shlb
outsl
das
aam
clc
xchg
leave
enter
adc
insb
les
ficompl
inc
jl
dec
iret
mov
mull
dec
repnz
jne
dec
sub
jmp
xchg
xor
mov
add
cmp
or
push
aad
fstpl
notb
sbb
xor
daa
shll
cltd
jle
mov
jge
dec
dec
and
lods
push
dec
sbb
fs
dec
inc
imul
cs
dec
out
fildll
xor
or
sub
dec
or
cld
fwait
repnz
ds
cmp
add
lock
or
or
push
push
stos
add
lcall
jge
adc
jnp
popa
popa
loopne
call
loopne
pop
push
pushf
sti
repnz
popa
lahf
insb
dec
inc
mov
outsl
mov
ret
rcll
adc
mov
fists
outsb
aaa
inc
loopne
inc
add
dec
pop
jne
addr16
push
push
cld
push
aad
push
rolb
test
cld
or
mov
repnz
jne
add
mov
dec
inc
rcll
and
mov
and
shll
push
mov
ret
xlat
out
loop
adc
xchg
mull
pop
inc
pop
jne
lods
fcmovnb
jg
fwait
and
fists
ljmp
sub
push
dec
dec
jns
in
fnstsw
mov
jbe
gs
ret
fimull
sub
add
or
xchg
cld
pop
mov
shll
sbb
outsl
outsl
outsb
mov
orb
shl
pop
fdivrs
pop
cs
mov
aam
mov
push
jl
mov
dec
mov
cs
lods
mov
adc
cli
icebp
repz
popa
pop
jne
in
lods
in
inc
or
jno
mov
xchg
cli
shr
loope
js
leave
cmp
jno
push
adc
fsub
lret
scas
or
cmp
in
divb
ficoml
mov
test
add
nop
ljmp
pop
dec
mov
xchg
cmp
ret
mull
in
push
mov
and
xchg
insb
or
lods
pop
mov
push
xlat
dec
push
inc
adc
mov
cwtl
leave
out
dec
jp
mov
cmp
hlt
xchg
or
or
pop
pop
fimull
mov
pop
push
sub
cmp
inc
sbb
inc
in
lock
lahf
leave
lret
cli
sbb
jne
fstpt
or
mov
pop
test
insb
lods
cmpsl
pop
mov
outsb
xchg
mov
aad
cltd
into
rolb
dec
adc
hlt
inc
sub
lds
iret
lret
mov
aas
push
mov
lahf
xchg
jae
mov
mov
insl
jge
jo
xchg
call
test
insb
mov
mov
data16
pop
inc
test
fisttpl
movsl
jle
mov
lret
movsb
mov
xor
cmp
push
fdivrs
ja
pushf
cmpsb
out
adc
inc
loope
and
mov
push
xchg
jl
test
out
out
test
pop
xchg
mov
push
or
test
roll
sbb
mov
pop
fbld
inc
or
mov
xchg
adc
out
notb
out
inc
icebp
enter
mov
clc
movsl
pusha
fldt
sbb
jb
cmpl
inc
imul
addr16
mov
mov
pushf
xchg
or
pop
insl
ljmp
push
shr
push
loopne
gs
mov
fadds
inc
push
test
std
sbb
fwait
mov
xor
cmp
imul
ljmp
cmp
and
aas
pop
aad
insb
js
xchg
imul
cmp
or
jecxz
lock
push
mov
iret
push
insl
or
add
mov
icebp
pop
pop
push
ret
fmull
jmp
pop
dec
mov
negb
add
cld
test
jecxz
call
cmp
or
or
sbb
std
fiaddl
jae
cmp
js
call
mov
and
mov
rcrb
clc
lods
fidivs
loope
push
cmp
mov
pop
ret
xor
push
repnz
mov
sbb
jbe
mov
sub
or
into
loope
pop
or
jbe
inc
push
js
imul
mov
add
repnz
sub
jg
ret
test
push
loopne
sbb
xchg
loop
int
add
push
shll
jns
mov
sbb
xorl
fcomi
jbe
cmp
mov
pop
add
bound
in
jmp
call
out
jecxz
lret
push
mov
fistpll
mov
lcall
testl
fsub
fwait
xchg
and
ret
pop
push
and
in
mov
xor
movsl
dec
pop
pushf
cli
fcomps
add
push
rorl
sahf
jo
add
fildl
pop
mov
adc
fwait
push
out
sub
mov
cmp
notb
je
and
mov
cmp
or
sahf
lret
divps
cwtl
lahf
lea
dec
or
push
int3
dec
outsl
fdivr
int
xchg
add
push
pop
lahf
lret
jle
sub
and
adc
outsb
dec
sub
dec
sub
ret
mov
mov
dec
aad
xchg
cwtl
test
inc
clc
ret
pushf
inc
cmpsl
dec
xchg
popf
xorb
clc
mov
rclb
jno
in
jecxz
or
out
push
sub
or
aad
xchg
xor
add
divb
jp
das
je
pop
cwtl
sub
lahf
cs
pushl
mov
fnstsw
inc
sahf
inc
jno
rol
mov
push
dec
mov
and
add
dec
inc
push
cld
clc
inc
dec
sbb
loope
rcr
outsl
fnsave
sti
xchg
loope
testb
sub
repnz
repnz
pop
js
into
out
sahf
add
or
cld
pop
jg
adc
les
adcb
or
pop
call
mov
fidivrl
mov
xchg
sub
outsb
lock
decl
das
lret
aad
jecxz
inc
pop
adc
xchg
mov
push
add
sub
aaa
movsl
xchg
cmp
sub
mov
mov
add
insl
pop
add
or
jmp
mov
ss
inc
pop
das
jge
mov
adc
cmc
mov
sbb
dec
jecxz
scas
lea
aaa
pop
pop
mov
cmpsb
add
addb
jno
mov
pop
sub
fbld
mov
inc
ljmp
in
sub
inc
push
mov
imul
arpl
pop
inc
cmp
mov
mov
cmc
mov
addr16
mov
out
movsb
jg
cli
movsl
fistl
cmp
mov
shr
push
xchg
divl
jb
cmp
push
sub
sbb
fcomip
jmp
push
dec
loopne
and
scas
shll
loop
dec
push
jns
inc
dec
push
cmp
jl
sti
jmp
jne
add
and
pop
jecxz
add
hlt
or
stos
mov
push
and
and
adc
sti
ja
outsl
and
jg
sbb
cld
push
inc
scas
xchg
cmp
pop
pusha
jnp
incb
jne
push
ret
nop
jo
push
mov
movsb
jecxz
mov
sbb
cmp
loopne
cmp
inc
mov
mov
in
push
mov
inc
testb
in
addl
clc
dec
or
jbe
and
and
mov
dec
or
idiv
std
mov
pop
fdivr
xchg
test
dec
or
imul
push
loop
jmp
jnp
iret
sbb
int3
jle
adc
test
lock
push
mov
sahf
mov
std
push
cmp
push
or
fxch
inc
insl
hlt
push
xchg
pop
filds
das
insb
push
rorb
push
add
fists
xchg
xchg
dec
aaa
je
rcrl
mov
adc
xor
pop
aam
mov
add
xchg
icebp
mov
xchg
push
lret
xor
into
and
pop
mov
ja
dec
mov
adc
aam
cmp
clc
fbstp
inc
das
jp
pop
mov
cmp
inc
mov
add
pop
mov
test
jmp
sbb
jge
sbb
fidivs
cmpsb
adc
rol
adc
mov
ljmp
and
js
call
sbb
xchg
sub
mov
les
stos
mov
adc
cmc
add
xchg
and
inc
adc
js
xor
pop
mov
ss
outsl
inc
in
testl
mov
stos
xor
adc
push
pop
ret
mov
sub
mov
inc
push
jg
nop
icebp
mov
sbb
or
push
jge
rcr
add
dec
pop
add
in
mov
pushf
mov
or
leave
pop
sbb
xchg
arpl
cld
punpckhdq
dec
push
mov
push
sub
aam
outsb
push
fldl
stc
and
int
xchg
sbb
lahf
adc
in
sub
xor
push
or
addl
dec
popa
pop
lock
sub
loop
push
stos
adc
jmp
pop
mov
mov
inc
fiaddl
xchg
aaa
mov
mov
icebp
test
ja
mov
sbb
mov
ss
enter
push
or
aad
or
pop
dec
popf
mov
test
mov
push
mov
jns,pt
lcall
and
xor
shl
sub
es
mov
or
sub
adc
pop
push
adc
push
mov
cmp
jle
push
rolb
movl
fsubl
xor
hlt
mov
or
sahf
mov
and
sub
mov
int3
popa
push
out
fldl
stc
pusha
test
pop
fildl
pop
cs
lods
push
data16
fldcw
out
loop
cmc
cmp
push
mov
out
jg
add
icebp
xor
inc
push
mov
sbb
pop
fmull
mov
lret
rolb
ret
cmpsl
sbb
xor
inc
or
sbb
lea
mov
lods
and
inc
dec
sahf
dec
movsl
jge
fisttps
rcll
cmp
inc
sub
pop
adc
mov
mov
scas
and
lds
and
inc
jb
pop
and
mov
icebp
int3
and
aad
adcl
add
mov
dec
mov
dec
mov
mov
push
lea
sbb
push
push
xchg
in
in
fistps
jmp
jmp
ret
mov
clc
jbe
test
lea
and
mov
pop
out
sarb
aaa
add
jge
ss
or
loopne
push
dec
dec
sbb
mov
js
jl,pt
mov
ljmp
orl
sub
sub
push
out
inc
add
jecxz
xor
inc
mov
into
mov
dec
jecxz
sbb
outsl
inc
mov
hlt
xchg
decl
jg
outsl
lock
lret
jbe
push
inc
sahf
jae
adc
add
jnp
push
lock
inc
lea
mov
jg
mov
fidivrs
sahf
pop
jmp
mov
incl
sub
push
out
pushw
icebp
sbb
inc
sub
add
push
movsb
mov
cmp
pop
mov
ret
mov
xorl
cmp
and
repz
cmp
dec
mov
jno
adc
fisubs
div
cmp
lods
or
std
scas
mov
mov
or
mov
int
icebp
pushl
mov
mov
and
xlat
inc
icebp
inc
mov
mov
popa
in
sub
fcomp
mov
pop
shl
add
cmp
pop
xor
dec
fsubp
popf
lahf
mov
arpl
jg
cmc
cmp
sti
fistpll
insl
push
hlt
leave
add
push
add
fmuls
movsl
add
out
add
insl
mov
pop
lock
xchg
out
sub
pop
pop
jmp
xchg
jo
insb
mov
gs
into
lahf
inc
loope
in
mov
test
xchg
jg
push
mov
ret
add
lret
mov
ljmp
sbb
lds
mov
inc
jg
mov
adc
insl
fildll
int3
scas
test
push
stc
jb
ja
negb
fcmovnu
insb
mov
outsl
xchg
dec
inc
push
xor
cmp
sub
or
jge
pop
dec
or
push
lret
pop
fmull
add
sub
push
inc
sti
imulb
sub
pop
xchg
adc
outsl
xchg
and
or
or
test
push
mov
xchg
rcll
sahf
mov
mov
push
add
jo
mov
fimull
jp
jl
mov
or
add
adc
mov
ljmp
nop
and
dec
sub
adcb
push
outsb
int
sub
in
cld
pop
push
rol
dec
and
icebp
jae
cli
fildl
vmwrite
pop
int
xor
pop
mov
cmc
fistl
adc
and
jnp
mov
push
push
loopne,pn
daa
cmovae
rcrl
popa
in
jg
sub
push
in
add
aad
ljmp
sahf
add
stc
push
mov
rcrl
xor
lds
cmp
mov
mov
cmp
pushl
mov
xor
jns
js
sub
mov
xchg
loop
mov
fisttps
scas
jb
arpl
push
mov
cmp
xchg
and
inc
sbb
insl
mov
fwait
shlb
push
nop
cmpsl
pause
outsl
aaa
mov
stos
je
pop
sub
inc
xchg
or
push
loopne
cmc
jo
add
fildl
jg
outsb
repnz
dec
add
outsb
loopne
xchg
mov
sahf
popf
xchg
inc
fs
outsl
rol
mov
mov
mov
push
enter
loope
rcrl
jg
insl
icebp
mov
mov
and
jo
mov
pop
popf
adc
add
std
scas
mov
dec
mov
fs
mov
lds
pushf
es
push
sub
fcoms
mov
ss
cwtl
xor
and
xchg
cmp
mov
cld
movb
mov
js
sahf
mov
and
lret
stos
and
popf
cs
dec
mov
aaa
and
xchg
jb
jno
push
jne
sbbl
jmp
push
lods
add
xchg
pop
pop
jp
pop
dec
stos
enterw
sbb
or
or
in
mov
call
dec
mov
xor
push
jle
dec
add
or
push
jg
sbb
mov
in
xchg
or
loopne
mov
xchg
in
rorb
jmp
ret
std
fsts
loopne
xchg
cs
lcall
mov
push
dec
in
mov
shlb
jbe
lock
in
xchg
loop
mov
lahf
leave
adc
orb
movsb
addr16
push
ja
push
push
adc
xchg
test
sub
cs
lds
test
jne
fsubrl
jo
jecxz
xlat
ljmp
lock
jo
rol
stc
arpl
jo
icebp
mov
nop
jb
aaa
es
cmpsb
out
pop
test
outsl
xchg
cmpsl
dec
dec
inc
cwtl
inc
xor
dec
mov
jl
push
xlat
repnz
cli
stos
lds
cmp
arpl
cmp
rcr
rolb
dec
imul
sbb
insb
insb
jmp
test
filds
adc
stos
cwtl
lea
insl
imul
sbb
add
and
pop
mov
sub
mov
xor
cmpsl
rcll
rcll
clc
fstpl
xor
pop
shlb
add
adc
test
mov
push
mov
dec
aaa
cmp
pop
or
es
inc
inc
inc
adc
sub
xor
pushf
scas
outsb
daa
xor
loopne
inc
in
jp
and
or
adc
scas
xor
jecxz
add
mov
inc
ret
mov
test
lahf
rclb
dec
fcomps
outsl
jno
stos
popa
mov
daa
cld
jl
sub
repz
pusha
out
mov
fsubp
nop
xor
push
mov
lea
dec
jo
test
aam
mov
fsubrp
ret
or
mov
lahf
cmpsl
mov
ret
adc
adc
cmp
add
xchg
inc
jecxz
sub
into
and
pop
mov
sbb
push
std
and
adc
jns
bound
lret
push
xchg
and
cmc
les
movsl
mov
or
cmp
cs
sahf
dec
mov
sbb
setg
cld
test
mov
insb
mov
pop
inc
xchg
xchg
fwait
cs
pop
imul
clc
dec
cmp
mov
fmul
in
iret
test
icebp
stc
mov
push
adc
add
inc
je
cmpl
adc
mov
inc
xchg
cwtl
xchg
lahf
and
orl
jle
mov
dec
adc
pop
jl
jne
loope
mov
mov
inc
decl
adc
push
nop
std
xor
jno
xchg
mov
fs
jb
adc
nop
add
add
popa
jecxz
bound
jmp
xor
sti
push
fsts
lock
in
adc
minps
bound
adc
xchg
das
xchg
xlat
jecxz
mov
sbb
push
cltd
and
out
add
push
mov
pop
adc
push
jg
mov
sub
cmp
mov
push
je
icebp
cmpsb
mov
cs
loope
xchg
dec
cmpl
mov
xchg
mov
sbb
mov
jge
dec
lcall
fimull
test
aad
push
int3
xlat
movsb
and
cmp
mov
and
rclb
rolb
add
or
outsb
lods
aam
pop
push
hlt
pop
cmpsb
push
or
inc
push
mov
leave
mov
cmc
mov
in
mov
mov
jg
nop
gs
push
mov
push
daa
and
mov
adc
cmp
stos
mov
add
rol
jbe
fwait
in
mov
out
daa
rolb
mov
fiaddl
mov
stc
add
stos
mov
dec
hlt
xchg
subb
jbe
shrb
iret
jbe
in
xchg
outsb
je
faddl
mov
test
pop
fsubrl
orl
sub
pop
enter
add
push
push
jo
arpl
pop
out
push
add
test
inc
jg
mov
in
sbb
ja
jg
pop
aaa
das
xor
mov
push
mov
push
mov
cmp
call
loop
or
inc
and
scas
cld
push
pusha
lock
cmpl
push
lds
xchg
lcall
push
loopne
mov
test
mov
rcrb
add
mov
push
test
movsl
andl
xchg
fstpl
mov
movsl
rolb
std
outsl
mov
adc
jl
idiv
jo
popa
push
jbe
or
fcompl
and
arpl
add
mov
loope
aaa
push
push
push
js
add
xor
pop
inc
lds
shlb
fists
leave
inc
popa
scas
mov
je
adc
mov
add
iret
lds
push
sti
in
xlat
int
sub
xor
mov
mov
sbb
push
sub
or
leave
insl
std
mov
jns
mov
jo
sub
push
test
dec
lods
adc
sub
data16
and
pop
jb
push
or
outsl
inc
and
cmp
jne
jo
jae
ds
ret
adc
adc
sbb
dec
test
sbb
pop
pop
icebp
dec
mov
mov
popa
stos
xor
call
push
dec
filds
mov
aam
enter
jg
cmpsl
adc
in
push
in
repz
pop
sahf
xor
sbb
mov
daa
subb
icebp
ss
clc
xchg
imul
cmp
clc
xchg
fmuls
mov
jns
js
push
mov
in
aas
and
scas
outsl
jp
pop
addr16
sbb
stc
mov
mov
add
and
xchg
jecxz
cmp
jg
aas
mov
cmp
enter
adc
dec
imul
inc
cwtl
ljmp
inc
adc
or
push
mov
das
aad
and
leave
jecxz
xchg
lods
mov
call
jno
pop
stos
std
lea
sbb
cmp
mov
cmpsb
out
adc
inc
fstps
push
out
mov
mov
xor
inc
clc
pop
clc
jmp
pushf
and
sub
or
xor
push
mov
arpl
jp
lea
mov
mov
add
or
pop
outsl
push
out
loopne
inc
or
pop
jmp
mov
xchg
or
cld
xlat
sbb
lret
lods
loopne
push
cmp
mov
cmp
cltd
dec
test
adc
inc
cmp
out
cmp
mov
add
cltd
mov
push
pop
or
test
les
push
jecxz
int3
mov
fisubs
and
sar
movsl
into
mov
cmp
cmp
xor
std
incb
jg
ffreep
and
inc
nop
add
mov
je
hlt
inc
icebp
push
cmp
incl
add
push
jecxz
fwait
stc
push
sbb
cld
aaa
xchg
or
sbb
sub
sub
adc
jge
icebp
pop
or
shr
ret
dec
mov
adc
mov
push
rcll
call
mov
ficomps
mov
lea
xchg
push
mov
jmp
pop
jmp
cmp
lock
rcll
popf
adc
push
mov
push
jge
cwtl
mov
jecxz
fists
mov
mov
jle
movsl
jp
inc
scas
jb
arpl
fmuls
das
imul
dec
jl
jg
inc
shll
inc
push
inc
clc
sbb
cmp
sub
aam
rcll
pop
pop
xor
push
es
jecxz
lods
or
adc
stos
lea
hlt
pushl
fldcw
call
xchg
inc
cmp
mov
push
xor
dec
outsb
scas
push
or
arpl
aad
pandn
adc
or
loopne
jmp
sbb
mov
fldl
mov
adc
aad
push
mov
pop
shrl
adc
hlt
pop
pop
xchg
sbb
push
push
inc
mov
fwait
out
mov
loop
dec
mov
js
push
or
or
push
adc
mov
jge
push
in
cmpsb
stos
mov
mov
xlat
mov
sti
aas
fsts
hlt
hlt
std
push
mov
nop
adc
jne
add
dec
adc
sub
dec
mov
ja
mov
push
add
dec
clc
pushf
test
xlat
fimuls
mov
ficoml
dec
xchg
mov
mov
xor
cmpsl
ds
lds
dec
repnz
push
jge
adc
shlb
mov
inc
repz
dec
mov
aaa
inc
adcl
dec
pushf
movl
mov
dec
pop
jbe
jb
push
aaa
add
mov
jmp
sbb
inc
leave
inc
imul
ds
jge
cwtl
lea
add
pusha
les
pushf
ss
push
lcall
scas
mov
into
inc
movsb
or
cmp
inc
cmpsl
inc
fldl
imul
sbb
push
ss
mov
outsl
and
test
sbb
aad
mov
scas
ljmp
in
jl
inc
xor
add
scas
add
cmp
or
mov
incb
adc
or
lods
mov
xchg
pop
clc
push
sub
rcl
test
hlt
je
mov
inc
nop
mov
enter
rol
push
xor
add
xchg
loop
xor
jb
xchg
fsubl
mov
mov
and
arpl
loope
loope
outsb
in
sarl
xlat
rcll
cs
icebp
cs
test
xor
mov
sub
and
cmp
mov
push
or
out
addb
sub
outsl
or
jmp
cmpsb
ret
in
sub
mov
mov
js
mov
jnp
and
imul
inc
sub
inc
ss
mov
mov
outsl
mov
in
push
fstl
pushf
add
dec
ljmp
jb
mov
pop
xor
hlt
arpl
std
pop
ljmp
jmp
pop
ljmp
mov
loopne
add
and
pop
mov
mov
mov
adc
and
jnp
ja
push
test
mov
mov
pop
loopne
mov
lds
inc
cmp
mov
cmpsb
test
and
in
adc
xchg
loop
mov
std
xchg
popf
pop
mov
testb
pop
fildll
andb
xor
sbb
out
stc
aaa
std
mov
test
dec
inc
and
cmc
xor
cld
loopne
pop
mov
adc
in
mov
faddl
pop
mov
cli
xlat
cmp
ret
aaa
or
fcom
push
pop
mov
mov
push
mov
lock
inc
jne
test
movsl
gs
nop
imul
adc
jmp
clc
cmovbe
test
cmpsb
mov
repnz
xchg
div
fwait
jbe
scas
aas
out
nop
push
ficoml
lahf
repnz
outsl
in
ljmp
outsl
popa
in
mov
mov
sarb
das
mov
xchg
ja
arpl
fwait
jecxz
in
xor
data16
jle
subb
test
sbb
gs
xchg
icebp
js
jae
stos
outsb
sbb
loopne
dec
add
sarb
add
inc
or
sbb
xchg
in
cmp
or
adc
pop
ss
ret
lock
sbb
pop
xchg
lcall
push
lcall
jnp
cld
mov
push
loopne
jns
cmp
loop
add
loopne
xor
stc
cld
outsl
jp
fcomps
enter
push
aad
stos
insl
ret
test
cmp
xchg
and
int
icebp
lea
fistpl
push
xor
pusha
mov
popf
or
pop
das
xor
add
pop
inc
int3
test
outsl
insl
jge
add
fs
clc
scas
pop
aaa
rclb
pop
xor
stos
aaa
dec
pop
lcall
dec
dec
cmpsl
sbb
or
xorb
mov
notl
jae
xchg
pusha
fisubrl
in
popa
jecxz
outsl
out
out
test
xchg
lcall
pop
mov
cwtl
cmpsb
andl
or
cmp
jge
rolb
mov
push
loopne
repz
jbe
aad
pop
negl
inc
xor
in
fs
outsb
lret
rol
xchg
jo
mov
lds
pop
cmpsl
fldl
std
mov
aaa
pop
scas
sahf
je
mov
sub
mov
pop
lea
adc
push
jle
sbb
rcl
and
mov
cmc
and
imul
inc
pushf
aad
test
xor
dec
arpl
test
push
out
notl
add
adc
mov
xchg
ret
push
jl
lea
je
and
xchg
ds
fdivrl
sbb
sub
and
loop
scas
lcall
test
daa
icebp
into
stos
cli
push
xor
xor
test
adcb
popf
cltd
or
sbb
push
xchg
ret
in
and
movsb
xorl
jl
scas
dec
cmpb
insl
insl
sub
dec
dec
stos
pushf
dec
xor
rorb
sar
xor
xorl
lock
cs
sbb
fsubl
pushf
ss
pop
clc
add
cmp
mov
fidivs
test
cld
mov
mov
sub
push
push
mov
leave
inc
pop
xchg
dec
and
adc
dec
call
mov
inc
repz
xor
iret
in
fstps
ljmp
aas
or
mov
arpl
jg
imul
filds
dec
aaa
mov
inc
sub
add
xor
rcr
add
test
push
mov
push
xor
sbb
sbb
sub
scas
cwtl
dec
inc
hlt
lea
dec
clc
lea
add
pushf
and
ret
xchg
mov
xor
add
stos
mov
mov
push
sbb
loope
cli
lea
pop
mov
in
ljmp
inc
push
jbe
add
popf
xor
adc
or
int3
sbb
inc
std
mov
test
dec
lret
and
xchg
push
sbb
pop
mov
decl
movsl
pop
fisubrl
pushf
cmc
js
roll
insl
push
mov
testl
fwait
pushf
pop
pop
xor
shlb
xor
push
rcll
ret
sti
xchg
lcall
sti
pop
xor
aaa
mov
mov
dec
and
push
push
cmovnp
cli
in
jle,pn
subb
and
ss
mov
fwait
xchg
cmp
sarl
and
repnz
push
jle
adc
test
jo
xor
rorl
cli
jge
ret
insb
es
add
jg
in
insb
outsb
fistpl
mov
scas
inc
adc
insl
pop
xor
pop
jb
inc
mov
cmp
jno
jg
outsl
and
pop
lea
jp
mov
leave
xor
aaa
hlt
adc
pusha
inc
xlat
sub
mov
pusha
imul
fdivrs
loope
shl
std
xchg
orb
inc
in
mov
mov
loope
je
dec
clc
cmp
cld
dec
xchg
xor
leave
cli
mov
mov
sub
loop
pusha
jle
pop
loopne
cmp
rorb
ds
push
push
fadds
insb
repz
cmpl
mov
mov
mov
movsb
iret
outsl
hlt
in
mov
loope
testl
jno
mov
mov
jl
jle
icebp
dec
pop
dec
stos
jo
pop
sbb
mov
pop
xchg
lret
rol
call
push
test
dec
arpl
jl
mov
push
push
inc
hlt
aaa
cmp
add
sub
decb
inc
aam
aas
fisubrl
inc
pop
mov
xor
in
decl
rol
inc
pop
outsb
dec
pusha
lcall
add
loop
dec
movsb
xchg
cltd
cli
sbb
push
fistpl
inc
xchg
mull
aad
movsb
push
fsubr
test
jno
mov
sbb
mov
xchg
lcall
cmp
push
mov
xlat
add
cmp
or
mov
mov
mov
mov
pop
adc
ficomps
je
inc
sub
add
add
ret
icebp
adc
jb
bound
stos
xorb
call
out
ret
xor
sbb
jns
les
jg
sbb
cmpsl
ja
ljmp
mov
rcr
mov
int
pop
inc
add
outsb
pop
and
adc
movsl
pop
ja
inc
mov
fidivl
or
inc
pushf
and
push
aad
mov
cltd
xor
jl
mov
cmp
imul
ljmp
pusha
inc
mov
data16
clc
mov
sbb
jnp
inc
ljmp
insb
testb
adc
pop
ss
test
sub
sbb
rcr
cmp
pop
imul
hlt
jmp
push
add
jmp
xchg
sbb
inc
outsl
in
inc
or
bound
adc
lcall
aad
in
fdivrl
and
mov
dec
add
loope
andb
inc
loope
das
pusha
xchg
or
cmp
inc
into
lret
inc
push
inc
stos
push
test
dec
std
fidivrl
loop
loopne
mov
and
pop
loopne
decb
cwtl
adc
push
outsl
pushl
xchg
mov
sub
jp
mov
nop
outsl
cmp
jb
pop
xchg
inc
sarl
jle
mov
mov
add
cli
mov
in
mov
insb
ljmp
and
xor
or
cmp
arpl
fabs
sbb
sbb
jp
inc
bound
xchg
add
call
jg
xchg
or
testb
negb
aad
popa
pop
mov
push
icebp
dec
inc
shlb
fs
mov
xor
test
movsl
cwtl
das
lds
dec
adc
push
fisttpll
dec
push
inc
dec
jp
mov
enter
adc
pop
xchg
pop
test
jecxz
pop
js
cmpsl
mov
inc
call
popf
in
xor
js
and
and
mov
mov
mov
inc
cmpsb
dec
lret
mov
clc
fldl
push
cmp
fst
and
sbb
mov
movsb
stc
fcmovnb
xorb
xchg
roll
adc
xchg
and
push
out
dec
xchg
xor
add
cmpsl
enter
adcb
cs
ret
xchg
cs
lock
xor
xchg
adc
xchg
pop
xchg
mov
les
pop
sub
and
push
ljmp
xchg
loopne
rcr
pop
mov
add
mov
rcrb
pop
sbb
adc
test
or
fadd
arpl
pop
je
dec
in
mov
pusha
jno
stos
sti
outsl
sbb
or
in
jp
dec
inc
shlb
fs
subl
cli
xchg
push
out
fmuls
cld
xchg
pop
call
dec
dec
mov
and
test
sub
jnp
test
lods
and
cmp
xor
push
pushf
arpl
sti
and
sahf
pop
lods
test
inc
divb
imul
cmp
dec
std
and
cwtl
jge
mov
out
jmp
dec
rorl
push
jo
iret
addr16
fxch
hlt
sub
sbb
xlat
hlt
mov
repnz
jl
popa
jecxz
push
pop
adc
pop
sub
outsb
lea
cmc
movsb
inc
inc
adc
adc
divb
mov
out
scas
inc
add
jae
clc
push
popa
sub
stos
sbb
pop
js
sbb
popa
dec
insb
loopne
imul
arpl
add
and
inc
sahf
sub
cli
push
xor
movsl
jmp
lock
or
push
pusha
or
dec
sub
adc
outsl
aaa
or
rclb
clc
push
call
pop
andl
adc
cld
sub
hlt
inc
popa
push
fadd
insl
fcompl
clc
aaa
fcmove
ret
test
in
fldl
xchg
or
add
pop
add
pop
mov
jns
sbbb
sarl
sahf
dec
das
into
fnsave
inc
test
dec
sub
sub
push
jge
enter
adc
cmc
insb
aad
cltd
jp
leave
adc
push
push
sahf
mov
push
fistpl
int
mov
ficompl
mov
imul
fnstsw
jmp
push
outsb
pop
fmuls
lahf
mov
jb
stos
daa
sbb
mov
ja
inc
mov
mov
mov
hlt
pop
outsb
jo
mov
mov
xchg
sub
sbb
xchg
push
add
or
jge
sub
lahf
call
iret
adc
fisttpll
scas
mov
cs
in
push
ja
aam
das
mov
push
add
inc
pop
in
xor
cmp
push
popa
sub
mov
in
jecxz
gs
or
cmp
aam
dec
push
or
inc
orb
push
sarl
ret
mov
lods
add
movsl
sub
mov
cmp
call
cld
sub
mov
cli
adc
mov
outsl
int3
mov
mov
aaa
jp
mov
stc
fimull
sbb
ret
lret
pop
jp
mov
jl
or
repz
mov
push
cmp
inc
jl
dec
xlat
lret
andb
scas
scas
and
mov
in
adc
pop
lahf
or
rorb
xchg
mov
daa
adc
lret
dec
testb
sub
int3
mov
add
pop
or
adc
pop
add
pop
add
cltd
jne
test
mov
out
or
mov
mov
pop
mov
cmp
fwait
or
mov
sarb
test
and
fistps
and
pusha
cmp
insb
pop
pop
adc
call
sbb
dec
icebp
dec
in
xor
ror
pop
mov
pop
orb
push
mov
and
mov
fcoms
mov
into
push
pop
lods
fstpt
ss
jecxz
push
adc
cltd
or
test
inc
and
repz
push
sarb
icebp
mov
test
jbe
imul
xchg
mov
call
aas
sub
popa
mov
out
xor
dec
jo
xchg
jne
aaa
in
or
aaa
or
stos
lods
xchg
or
push
rcrb
cs
push
pusha
xchg
stc
and
loope
pop
push
testb
mov
cli
push
insb
lret
cmp
mov
mov
cltd
sbbb
bsf
pop
push
add
dec
loopne
push
call
xlat
pop
adc
cltd
mov
and
lods
jg
lea
icebp
fnsave
dec
fcoms
das
or
or
dec
sub
jns
jl
or
incb
pop
rclb
std
adc
pop
stos
jmp
mov
push
pop
or
mov
pop
mov
sbb
adcb
or
pop
loopne
mov
push
loope
or
inc
dec
daa
into
in
mov
and
test
lods
pop
insb
loope
std
mov
out
out
inc
je
loope
icebp
fwait
mov
sbb
rolb
orb
lock
cld
and
or
dec
inc
lcall
repz
lods
in
xchg
in
push
out
imul
insl
pop
cmp
aaa
adcl
pushf
jae
movsl
sbb
scas
shl
and
imul
mov
in
dec
lahf
dec
xor
or
lret
cltd
test
add
dec
lock
mov
pop
cmp
cmp
cmc
jecxz
aaa
sti
cs
jno
cli
sub
es
mov
sbbb
stc
mov
mov
dec
jo
icebp
mov
mov
jns
xor
dec
cli
mov
mov
adc
mov
insb
out
mov
xor
testb
push
lock
cli
sbb
and
mov
sarl
push
sbb
or
push
test
jno
aaa
jle
nop
lret
inc
cmpsl
or
adc
inc
mov
in
into
inc
xchg
out
addr16
jmp
out
outsb
dec
fildll
adc
adc
xchg
push
mov
std
pushf
xchg
mov
call
aad
and
sti
int3
cld
outsb
lods
jns
fldt
mov
in
and
outsb
xchg
xchg
mov
orb
bound
les
popf
jecxz
push
xor
lock
ds
pop
sbbb
pop
mov
les
push
mov
add
dec
jns
jg
jmp
pusha
push
sbb
pop
mov
scas
add
push
or
and
loope
aaa
lods
orl
not
mov
fwait
xor
jbe
jbe
ss
inc
inc
shl
jmp
jge
xor
stos
std
out
jae
xchg
xor
int3
mov
hlt
cmp
mov
jbe
cltd
jnp
mov
inc
lret
mov
out
das
pushl
test
sub
addr16
outsb
push
imul
mov
call
sti
sub
jg
rol
jo
bound
cli
pop
inc
fisubrs
mov
mov
or
mov
add
fildl
mov
inc
imul
and
jae
mov
jmp
mov
mov
sub
mov
mov
push
ret
mov
mov
outsb
ja
add
pop
mov
daa
xchg
lea
mov
ljmp
add
mov
scas
ljmp
mov
mov
dec
xchg
mov
adc
repz
shll
or
adc
dec
mov
ret
ret
outsb
stos
shrb
and
mov
clc
mov
or
repz
out
push
sbb
cmp
push
lea
add
xchg
push
dec
test
ss
icebp
gs
scas
clc
xor
fidivrl
sbb
mov
inc
inc
xor
aad
and
scas
js
mov
pushf
into
les
ja
clc
xor
enter
scas
aas
push
push
sahf
pop
mov
fmuls
and
call
repz
scas
fidivl
ja
add
mov
fisttpl
gs
inc
mov
ja
cltd
fisttps
jno
inc
mov
test
dec
mov
mov
sbb
sbb
adc
xor
ljmp
gs
xchg
cmpb
fwait
in
pop
mov
cwtl
push
lds
ret
mov
sbbl
add
popa
and
mov
scas
mov
jne
loop
push
mov
mov
imulb
or
mov
rcrb
notl
xor
pushf
xchg
adc
adc
pop
inc
add
jmp
push
les
aaa
cmp
repnz
icebp
jbe
mov
popa
mov
mov
fs
and
insl
mov
fcmovbe
paddd
pop
mov
inc
pop
aam
emms
shrb
mulb
fisubrs
adc
scas
inc
inc
movsl
shrb
scas
adc
jp
cmp
in
xchg
rol
jmp
clc
nop
leave
sahf
insb
pop
fildl
std
or
orl
cmp
push
push
fwait
xchg
mov
pop
and
inc
scas
sti
ljmp
add
insl
repnz
scas
imul
mov
lock
sbb
je
xchg
jns
sbb
outsl
pop
sub
fwait
stos
fcmovu
xchg
rorb
and
xor
add
rcrl
push
push
ds
je
and
dec
sub
loope
js
xor
push
add
mov
pop
mov
cld
div
add
jle
sbb
adc
jg
inc
sub
out
fcoml
and
icebp
mov
int
imul
arpl
loopne
xchg
mov
in
mov
stos
cwtl
mov
push
mov
push
xchg
cmp
cmp
fimuls
lods
sbb
lock
cmp
test
mov
mov
fadd
jle
push
inc
sub
aam
test
jg
addr16
cmp
jno
in
fsubrs
xor
incl
rcl
mov
or
pop
js
ret
fldenv
cmp
fsubs
jns
mov
add
jb
inc
cmp
or
mov
mov
loopne
je
out
jmp
fsubr
inc
movsl
pand
negb
hlt
lcall
add
xor
lock
and
inc
inc
decl
push
add
add
lods
sbb
pop
in
add
in
outsl
mov
or
sahf
xor
mov
mov
mov
mov
shrb
fwait
mov
jo
dec
aaa
mov
repnz
pushf
xlat
mov
mov
andb
jne
adc
or
sbb
lds
cli
adcb
push
xchg
fxch
pop
js
inc
inc
dec
push
bound
jg
mov
and
mov
dec
mov
mov
sbb
cltd
cmpsl
inc
jmp
scas
cs
lcall
pop
mov
pusha
jecxz
lfs
imul
mov
and
idivb
and
stos
cmp
clc
cwtl
add
pop
decb
shll
or
mov
call
pop
cli
punpcklwd
dec
testl
pop
in
outsl
mov
leave
or
adc
dec
jecxz
dec
dec
pushl
xor
and
fildll
jnp
mov
mov
or
repnz
xor
mov
into
push
xchg
jmp
repnz
jg
stos
cmp
adc
xor
fs
mov
cmpsb
dec
mov
cmpb
inc
pop
add
in
dec
arpl
out
xchg
mov
pushf
add
or
inc
fwait
pop
imul
lods
loope
shrb
je
scas
jb
inc
sbb
add
pop
sbb
lods
insl
in
adc
ficompl
xchg
adcb
sub
sub
enter
xchg
cmpsb
lea
sarl
push
scas
out
push
lock
cmpsl
xor
pop
lea
cmpsl
call
adc
mov
inc
cmp
mov
inc
iret
pop
fldcw
mov
ss
cli
mov
insb
dec
mov
or
sbb
jbe
pop
sub
dec
sbb
test
xor
add
adc
jb
std
push
arpl
mov
lret
and
dec
and
sbb
psubsb
xlat
mov
push
scas
cmpsb
push
divl
add
lret
push
rcrb
or
xor
push
jmp
nop
jle
loopne
or
mov
mov
inc
enter
in
loop
std
aam
cmp
cld
sub
rcrl
in
mov
lea
je
or
push
fldt
push
jnp
rcrl
int
int
fisubl
fists
inc
js
das
xor
mov
dec
inc
mov
add
movsb
cmp
pop
mov
or
adcb
inc
out
fsubrs
xor
lahf
xor
inc
lods
sub
and
jno
cmpb
gs
mov
aad
add
adc
xchg
add
dec
fucom
lea
ds
lret
or
in
fcmovu
sub
scas
lret
mov
clc
movsl
cmp
mov
out
cmpsb
in
lods
jg
or
fdiv
jg
loop
push
inc
sbb
mov
or
in
subl
and
inc
aad
inc
jg
scas
sahf
mov
or
cwtl
or
test
mov
stc
or
mov
pop
js
loopne
and
das
mov
pop
cltd
pushl
insl
and
in
addr16
xchg
jg
mov
cs
popw
push
das
movsl
andb
push
push
push
jg
subl
loope
sub
xor
lds
pop
in
xor
jbe
stos
pop
pusha
test
push
icebp
fstp
cld
inc
sbb
divl
mov
nop
idivb
push
test
or
jmp
add
jmp
mov
mov
sbb
mov
push
push
lret
lock
mov
clc
mov
out
shr
push
fistps
jne
pop
and
outsl
or
repnz
mov
dec
cmpsl
xchg
outsl
inc
xchg
pop
mov
sub
jae
xlat
add
test
pusha
nop
xchg
fwait
nop
ds
mov
rol
mov
add
jne
jne
push
mov
sti
mov
test
adc
mov
xchg
pop
adc
insb
stos
sarl
ja
hlt
jp
or
xchg
adc
sbb
ret
pop
cwtl
cmp
adcl
lret
xchg
push
jp
sub
imul
lret
lret
and
mov
hlt
test
leave
scas
jecxz
rcl
enter
lods
push
test
sub
shlb
mov
cmp
dec
dec
or
xchg
sbb
ds
mov
fucom
movsl
movsl
ss
aam
mov
fs
sub
inc
adc
push
mov
fstl
cmp
insb
pop
popa
mov
mov
into
push
aam
in
mov
push
clc
push
sub
jb
push
and
add
iret
cld
dec
mov
in
add
in
pusha
add
sti
sub
lock
pop
aad
jno
jp
mov
push
imul
pop
dec
sub
cld
ficomps
dec
inc
push
lds
test
lds
test
stc
cld
cmp
mov
inc
or
hlt
cmpsl
test
mov
repz
mov
loop
iret
pop
adc
decl
adc
mov
cmpsb
stos
xchg
mov
cs
mov
add
adc
adc
cmpsl
xlat
xchg
imul
dec
cmp
call
mov
sub
xor
cltd
nop
sub
fldl
incl
push
push
icebp
sti
sahf
mov
clc
cmp
inc
pop
jo
sbb
dec
in
cmp
add
push
pop
push
cwtl
nop
and
adc
add
cli
dec
jno
cmp
into
pop
in
out
jmp
jge
mov
aad
loope
jecxz
push
mov
push
sahf
mov
lret
xor
out
fs
gs
xchg
out
ficoml
adc
adc
sbb
movl
cmp
les
icebp
js
mov
jecxz
mov
cmpsb
dec
xor
paddusb
xchg
js
pop
mov
cmp
inc
cmp
je
lcall
adc
add
adc
mov
lods
inc
shl
pusha
sbb
xor
test
and
sbb
xchg
pusha
cmp
jecxz
test
push
pop
xchg
test
into
pop
and
sbb
mov
ds
int
sub
or
pop
mov
inc
int
or
mov
jo
out
sar
xchg
xchg
jl
push
lcall
lock
cmp
and
lods
shll
pop
fnstcw
or
adc
sub
daa
sub
outsb
das
lcall
xor
call
cmp
and
or
inc
xor
sub
inc
sbb
les
jle
jo
cmpsl
popf
fadd
cld
bound
push
decl
sub
inc
ljmp
out
jae
enter
flds
xchg
add
push
cld
pop
sub
enter
xchg
and
pextrw
add
movsb
add
xchg
mov
pop
scas
push
fldcw
test
fnstsw
pop
mov
inc
xor
pop
jne
loopne
loopne
idiv
push
outsl
sub
out
je
leave
rcrb
or
mov
xchg
mov
std
mov
push
sbb
sbb
or
jbe
jns
jge
test
push
mov
out
add
stc
shll
js
fsubrs
and
mov
push
push
or
in
std
sbb
pop
popf
lea
dec
push
pop
fists
outsb
lea
int3
and
popf
in
jg
cmp
outsl
sbb
scas
mov
pop
mov
push
in
mov
or
mov
dec
mov
mov
sti
push
ds
adc
ret
fcmovnu
adc
and
jno,pn
push
jl
out
mov
cmp
cmp
dec
pop
mov
push
and
int
cmpsl
xor
xchg
sub
data16
mov
xlat
or
adc
sub
mov
push
je
cmp
sbb
mov
data16
jl
xchg
lea
adc
nop
sub
sub
mov
mov
cs
push
xor
out
sbb
cld
ds
sbb
iret
cmpb
cmc
shl
faddp
test
inc
pop
dec
les
adc
cmpsl
add
dec
cld
and
mov
shrb
or
jae
mov
ljmp
lods
push
adc
pop
roll
stos
mov
push
fists
or
stc
clc
adc
sbbb
mov
jg
pusha
add
or
cmpsb
adcb
push
dec
or
ret
movsb
lds
stc
leave
cmp
pop
and
jnp
jle
mov
adc
icebp
imul
dec
adc
mov
fbld
mov
lock
mov
pop
xchg
cltd
lock
aas
push
cmp
fists
fistpll
repnz
mov
cmp
or
add
push
cli
negb
jge
inc
and
mov
push
lret
aad
push
and
sub
add
popa
add
idiv
push
std
pop
cmpb
mov
fwait
mov
insb
int3
jl
call
ja
xchg
xchg
dec
push
ret
or
stc
add
ljmp
std
incl
ret
iret
push
add
mov
out
sbb
push
call
push
xchg
ds
ja
jl
test
ljmp
xchg
movsl
cmpsl
jb
push
inc
add
adc
inc
sub
mov
fdivr
test
dec
inc
dec
push
out
leave
lcall
mov
mov
adc
bound
or
mov
dec
aad
pop
xchg
int
fdivr
sbb
inc
sub
daa
std
xorl
lea
mov
mov
lock
lock
movsb
test
repnz
xor
leave
jp
inc
push
xor
push
fldln2
fisttpl
cli
ret
adc
sbb
sbb
ret
push
sub
or
xor
or
lcall
out
mov
subl
pop
insl
arpl
xchg
and
out
sbb
jle
shlb
dec
and
cmp
rclb
add
xchg
dec
shlb
cs
shrl
pop
cli
ja
or
shlb
mov
xchg
cwtl
sub
outsl
outsl
or
and
mov
push
mov
loop
sub
rol
rcrl
clc
mov
cmp
add
cmp
das
push
in
inc
hlt
adc
imul
mov
cmc
in
mov
lods
ret
jo
xchg
push
inc
push
out
mov
sbb
mov
fcmovnb
jge
nop
stc
mov
jb
fs
cmp
test
fsubr
inc
xchg
mov
scas
or
mov
dec
arpl
mov
fistpl
dec
mov
jg
cmc
outsl
aaa
pop
sbb
lahf
cmp
call
dec
std
ret
xchg
aam
and
mov
jmp
outsl
mov
xchg
daa
xchg
mov
call
or
cmp
and
push
jp
mov
dec
pop
test
ljmp
inc
scas
call
test
adc
loope
imul
test
mov
daa
aad
movsl
stos
xor
mov
pop
in
push
sbb
nop
xchg
loopne
pop
push
jmp
jno
push
dec
mov
jb
push
and
xor
push
pop
pushf
fcom
xor
adc
cmp
pop
cmp
xor
mov
test
ja
in
or
add
mov
lcall
xchg
outsb
mov
mov
mov
push
mov
inc
aas
sbb
mov
pop
push
dec
pop
mov
inc
inc
int
add
loopne
sbb
mov
sbb
mov
jae
mov
push
rclb
mov
jo
outsb
push
and
out
pop
in
add
insb
mov
and
dec
icebp
dec
or
dec
decb
inc
stc
shrl
js
jbe
fwait
sbb
mov
addr16
or
lds
jp
pop
pop
andl
aaa
popa
es
call
inc
lds
popa
leave
ljmp
lahf
dec
sub
aaa
popf
pusha
mov
outsl
rcl
xchg
mov
cmp
push
adc
divl
adc
pop
adc
inc
xor
rclb
or
inc
and
adc
inc
mov
sbb
jo
out
mov
jo
test
pop
inc
je
xor
lahf
stos
loop
imulb
stos
jo
xor
ss
orb
push
or
mov
dec
adc
lcallw
or
inc
test
mov
mov
insl
sub
test
inc
cmp
and
jae
cli
cmp
dec
xchg
mov
xchg
pop
jbe
pusha
inc
xor
sbb
loope
jge
or
fimuls
int
rcl
push
inc
loope
mov
dec
loopne
push
and
imul
mov
sub
dec
movsl
les
mov
or
add
bound
push
pusha
hlt
in
sbb
loop
pop
sti
push
cmpb
test
pushf
adcl
adcb
sub
aas
imul
fwait
xchg
clc
jecxz
mov
mov
and
mul
fimull
pop
mov
sbb
xor
inc
out
jo
mov
pusha
add
inc
gs
sub
and
into
stos
aam
lea
sub
adcl
jecxz
cwtl
clc
imul
sti
push
jl
jne
stc
jmp
push
aas
add
pop
mov
inc
insl
in
push
nop
add
stos
cmpsb
outsl
cs
adc
insl
imul
fwait
inc
xchg
push
mov
push
mov
outsl
mov
in
push
or
mov
fwait
xor
jbe
ret
push
je
popf
not
mov
fcmovnb
adc
and
dec
mov
add
lods
cmp
push
push
xchg
sahf
cld
sub
mov
push
aaa
cwtl
loope
jb
daa
jno
sbb
inc
jbe
dec
fucomp
push
mov
xchg
out
jecxz
flds
or
xchg
fildl
add
mov
adc
jno
mov
int
push
into
and
lcall
mov
ss
xchg
in
cmpsl
dec
ret
cmp
fmulp
cmp
mov
pop
sbb
pop
pusha
cmpsl
add
bound
fistl
rclb
lret
push
xchg
mov
pusha
jmp
fdivs
mov
popf
ljmp
mov
cmc
xchg
push
pop
clc
pop
push
stos
mov
test
add
pop
sbb
jne
mov
xchg
jle
insb
dec
popa
loope
rolb
leave
push
or
filds
jnp
mov
sbb
mov
inc
ja
inc
stos
fnstsw
jne
int3
sbb
test
pop
add
lock
test
push
out
xlat
and
les
jae
imul
pop
jle
test
jle
outsb
fldt
add
ljmp
out
out
xlat
lea
idivb
sahf
mov
push
test
or
or
jne
push
adc
adc
out
in
or
or
adc
loopne
jo
fsubs
jmp
mov
dec
aaa
clc
inc
or
jecxz
mov
ja
jecxz
xchg
push
mov
lret
pushf
cmp
loop
rclb
fstl
xchg
add
sub
shlb
xchg
jb
les
les
jg
clc
mov
imul
ret
mov
aas
xor
fmull
adc
sub
push
cli
outsl
rcll
lods
pop
jnp
rol
cld
lea
fstl
ss
rorb
jno
mov
lea
cld
das
mov
add
rorl
cmp
mov
insl
sarl
std
in
push
jge
push
mov
das
xchg
sar
in
mov
and
inc
inc
adc
adc
push
mov
or
dec
jns
test
push
mul
addr16
movsl
sub
jl
enter
fwait
mov
mov
pop
mov
inc
lods
and
adc
idiv
ret
push
and
mov
popa
int3
arpl
addr16
sub
add
test
mov
popa
mov
bound
gs
fadds
mov
out
test
pop
ss
dec
adc
ljmp
push
adc
push
mov
cmp
mov
jg
mov
adc
mov
adc
pop
sbb
push
inc
or
data16
mov
pop
sub
fsubrs
push
inc
add
int
daa
mov
imul
cmpsb
mov
jb
outsl
dec
dec
repnz
mov
incb
movsl
mov
faddl
add
push
mov
lds
sub
addl
and
adc
sbb
repz
test
mov
xor
fistpl
mov
jle
xor
push
pop
mov
xchg
lahf
repz
pop
adc
jecxz
push
mov
pop
repz
call
lea
jns
idivl
out
inc
xchg
das
aam
pop
sbb
or
in
rol
shlb
lock
cs
mov
jbe
mov
cmpl
or
push
inc
dec
mov
pushl
push
lock
or
cmp
push
imul
test
loope
xchg
lea
pop
call
decl
push
out
in
adc
nop
and
push
mov
cmp
in
jp
or
subl
mov
sub
cmc
cli
out
sub
sub
jmp
push
ljmp
push
mov
outsl
movsl
imul
js
pop
add
jns
sbb
icebp
and
and
popa
stc
pop
out
aad
fmuls
push
fidivs
incb
in
mov
push
or
or
std
cmp
sbb
fdivrp
jg
fimuls
shl
add
stos
icebp
sub
push
fs
into
ret
dec
les
xchg
cld
mov
outsl
inc
mov
jle
lods
iret
es
mov
call
mov
inc
das
mov
push
mov
ss
mov
aaa
lods
daa
jmp
mov
mov
je
sbb
loopne
inc
ljmp
js
mov
mov
icebp
push
jle
insl
lds
pop
inc
sbb
push
popf
sub
sbb
pop
pop
jmp
mov
pop
stc
in
ret
pushf
dec
xor
popa
std
insl
jno
adcb
shlb
jl
dec
in
inc
inc
and
adc
imul
mov
aad
into
mov
mov
nop
add
add
mov
hlt
xor
imul
inc
inc
pushf
mov
andb
out
dec
push
push
test
outsb
lods
sub
pusha
sbb
std
out
push
out
sbb
lret
mov
adc
out
add
pop
add
cli
cmpsl
mov
inc
mov
xor
frstor
decl
ret
push
xorb
jo
dec
push
ffree
mov
jmp
lcall
sti
and
adc
call
ficomps
jo
call
inc
add
sub
test
movsl
pop
test
mov
mov
imul
fisttpll
pop
aam
mov
into
xor
rolb
orb
gs
adc
outsl
sbb
mov
push
shll
fadd
sar
xchg
add
ficompl
mov
gs
fistpl
jo
rcrb
xchg
cltd
xor
cmp
and
mov
stos
loopne
jae
lds
lret
add
lret
xchg
aaa
ds
push
jg
mov
loopne
push
hlt
xchg
ret
and
test
incl
adc
sub
sarl
aaa
mov
cmpsl
sarl
jbe
cli
jg
mov
out
in
out
out
and
call
inc
fwait
es
mov
outsl
jmp
cmp
cmp
xor
sub
ret
inc
xorb
andb
stos
stc
ljmp
mov
push
jno
add
pop
enter
outsl
test
stos
inc
insl
add
push
mov
jnp
dec
sbb
mov
add
inc
push
clc
pop
aaa
cmc
push
add
sarl
fwait
shll
pop
bound
gs
adc
jo
pop
or
sbb
pop
jle
pop
mov
pop
dec
js
lcall
lea
sub
dec
push
sbb
aam
mov
xchg
mov
outsl
loope
add
xchg
jmp
lock
imulb
adc
icebp
pop
arpl
fucomi
cli
rclb
adc
or
cmp
or
jmp
test
jge
lds
aad
xor
mov
xor
lock
aam
or
pop
fildl
xchg
fbld
mov
call
pop
dec
ds
add
ja
das
inc
xor
jle
andl
pushf
or
inc
hlt
sub
sub
ror
shr
call
xchg
mov
xor
dec
push
test
stos
shll
pop
jmp
and
jg
add
pop
push
out
pop
push
and
test
dec
js
pop
icebp
cwtl
mov
sub
icebp
test
daa
xlat
inc
lahf
aad
xor
or
loopne
fists
ret
push
mov
adc
ficoml
jbe
pop
and
sub
adc
in
pusha
ja
sub
repnz
add
xlat
jmp
cwtl
inc
or
or
imul
fsubrp
repnz
mov
rolb
loope
xor
repnz
daa
inc
cmp
add
cmc
dec
rolb
icebp
cmp
movsl
pop
shrl
les
xchg
sti
aaa
fidivrl
xorb
sbb
sub
jbe
arpl
mov
cmc
xchg
imul
and
inc
gs
stos
fwait
push
dec
clc
mov
dec
stos
jo
rorl
jp
sbb
cwtl
cwtl
mov
stos
push
lret
call
pop
rcll
stos
gs
push
pop
fdivr
jmp
orb
outsl
cld
cld
xchg
cmp
icebp
adc
or
or
test
inc
mov
push
aam
cs
and
add
or
fbstp
sti
ljmp
mov
and
fisubrl
sub
dec
pop
push
stos
stos
jle
jmp
scas
xchg
or
shll
mov
das
add
es
and
scas
sbb
mov
inc
call
pop
pop
cmp
adc
aas
inc
jae
cmp
fisubl
dec
scas
sub
in
decl
sbb
pusha
or
sbb
cld
sbb
adc
call
ljmp
push
mov
mov
inc
popa
sub
ljmp
iret
pop
pop
push
arpl
push
push
add
adc
call
es
cmp
cmovns
mov
cld
out
mov
xchg
mov
or
outsb
dec
mov
push
add
cltd
push
dec
or
xchg
fdivrp
inc
cmp
pop
jne
rcl
testl
in
dec
mov
into
fisttpll
dec
shrb
orb
pop
push
fidivl
push
push
cmpb
faddl
fidivs
mov
pop
lret
ss
jmp
push
call
aam
mov
in
cmp
add
inc
cmpsb
or
test
push
inc
fisubl
outsb
mov
pop
jp
insb
cmp
mov
scas
daa
adc
mov
out
mov
jno
inc
fwait
sub
add
sbb
ret
std
and
insb
dec
lea
loop
pop
inc
mov
inc
inc
ret
mov
incl
lds
es
adc
movsl
pop
dec
sub
scas
pop
jmp
enter
xchg
call
inc
jno
out
repnz
push
aam
and
insb
xchg
mov
insl
lcall
mov
outsb
add
sub
fwait
jle
xchg
inc
fisubl
lret
dec
mov
and
mov
adc
mov
pusha
push
mov
or
jmp
sbb
mov
scas
add
js
pop
add
movsl
das
and
and
adc
and
stos
out
jge
clc
mulb
stos
push
mov
dec
pop
sub
mov
repz
lods
test
aaa
fidivrs
pusha
mov
nop
push
test
cmpsl
pop
mov
pushf
test
testb
jle
sbb
adc
add
stc
xchg
push
mov
loope
mov
int
inc
inc
jbe
std
filds
out
loop
enter
or
adc
clc
sti
pop
daa
sub
cwtl
jecxz
inc
shl
cwtl
in
fsts
outsl
rcrb
push
jnp
mov
data16
out
inc
std
mov
dec
mov
out
loop
les
dec
ds
fistpll
rol
adc
mov
cld
push
rcrb
jp
popf
push
ja
inc
lock
outsl
or
xor
arpl
cmp
pop
xchg
mov
fwait
ret
cmp
es
ret
rcrl
fsubrs
mov
mov
xchg
popa
and
jle
xchg
pop
outsl
rcl
outsb
rclb
outsl
dec
fisubrl
push
push
pop
add
test
shll
sti
out
and
shl
mov
xchg
mov
cli
icebp
repz
test
mov
orb
jg
std
push
mov
adc
cltd
mov
sub
shrl
cs
pop
enter
cld
sbb
bound
aam
lock
lods
rcrl
adc
loope
push
lahf
add
add
pop
and
mov
pusha
fisttpll
or
adc
clc
imul
mov
push
add
mov
mov
mov
sub
push
repz
pop
pusha
test
imul
mov
bound
and
cmp
icebp
outsl
rolb
jl
cmp
xor
dec
xchg
push
xor
rorb
shrl
lods
ljmp
push
xchg
push
dec
or
cltd
popa
and
ret
pop
js
inc
push
xchg
inc
add
cmc
adcl
je
loope
and
add
outsb
mov
and
dec
push
or
xchg
pop
loop
lcall
jmp
clc
incl
and
add
inc
adcb
adc
jo
cli
or
cmpsb
test
cmp
sbb
push
lcall
mov
popa
adc
push
jnp
mov
in
xor
outsl
icebp
ret
pushf
lds
push
pusha
pushf
jo
rolb
add
arpl
lahf
rcll
imul
inc
cmpsb
pusha
cmpl
mov
std
les
xor
add
imul
cmp
cld
push
lahf
out
and
out
xchg
insl
leave
sbb
adc
inc
mov
rcr
orb
pop
lret
push
mov
movsl
push
rcrl
xor
xbegin
pop
add
fiaddl
or
inc
les
sti
dec
sbb
ss
xor
adc
test
call
add
outsl
mov
mov
lock
mov
sbb
dec
call
and
pop
out
xor
jnp
or
call
popa
mov
jmp
mov
inc
loope
pop
and
ja
jecxz
cmp
shrl
cmp
adc
add
fnstsw
outsb
pop
femms
adcl
sub
int
scas
mov
mov
add
xor
fildl
loop
adc
sbb
adcb
jnp
sub
xchg
pop
movsl
cmc
lock
xor
cmp
fidivrl
ljmp
or
imul
pop
push
cmc
cmp
jge
sub
sub
jg
fidivrs
xor
mov
adc
cltd
es
loop
add
aad
sbb
sub
xlat
scas
adc
add
and
xchg
sbb
sub
mov
sbb
sub
mov
clc
mov
scas
pop
jae
sbb
fiadds
or
jo
loope,pn
test
or
scas
and
cli
std
push
out
out
and
pop
popa
fimull
or
and
aaa
neg
and
js
mov
in
loopne
xchg
push
or
fldt
mov
mov
push
xchg
aaa
jo
ds
shlb
loop
aaa
mov
push
mov
mov
insl
aad
lods
lods
jbe
test
add
push
call
jg
test
mov
pushl
rcrl
jge
mov
lods
shll
sub
out
inc
add
mov
sub
push
lds
sub
inc
mov
xchg
sbb
fbstp
outsl
jbe
cmpsb
sbb
fisttps
loop
shrb
mov
jmp
insl
lods
outsl
pop
and
rclb
roll
mov
pusha
sti
xchg
inc
jb
scas
shr
pop
lea
cld
sbb
loopne
or
jp
push
add
pop
mov
les
jns
sbb
aas
into
adc
call
leave
cwtl
daa
jbe
rcrb
pop
dec
test
xchg
fisubrl
xor
push
dec
mov
enter
fdivrs
mov
sub
pop
mov
mov
lret
adcb
sbb
pop
ficompl
xchg
les
dec
and
insl
or
push
sbb
inc
mov
je
sub
sub
aaa
testl
lds
leave
push
xchg
and
push
dec
inc
push
sbb
addr16
dec
lahf
sbb
mov
mov
subl
pusha
inc
popf
mov
negb
or
pop
jl
sub
mov
jecxz
or
and
inc
cmp
int3
mov
mov
insb
xchg
jle
jo
scas
je
lret
sbb
fmull
in
mov
cmpsl
xor
inc
sub
jl
push
push
mov
dec
hlt
xchg
or
dec
fildll
std
test
jl
mov
push
mov
jle
gs
adc
inc
cld
mov
mov
push
cmp
std
rcrb
fisubs
hlt
data16
sub
fidivs
mov
into
out
daa
in
jle
scas
movsl
adc
mov
cmp
scas
mov
jle
movsl
xor
xor
xchg
jnp
pop
lcallw
adc
adcb
lret
out
subb
sbb
mov
daa
cltd
bnd
sbb
mov
cmp
clc
adc
sti
inc
icebp
adc
das
push
je
pop
into
xor
or
insl
jl
sbb
cwtl
sbb
sbb
mov
and
mov
or
mov
jge
idiv
ljmp
pop
mov
hlt
je
lds
pop
out
mov
pusha
xchg
in
jecxz
repnz
xor
mov
ja
neg
push
mov
jne
sbb
test
test
jo
ret
mov
test
inc
mov
pop
sbb
or
and
ss
outsl
les
sti
sbb
mov
inc
pop
fwait
adc
rcrb
cmpsb
pop
mov
and
and
popa
adc
shll
ss
mov
mov
jne
pop
jno
dec
mov
movsb
scas
jp
push
rol
push
das
xchg
jp
loop
cld
pop
and
rolb
pop
popa
stos
mov
bound
lods
or
pusha
push
adc
mov
pop
stos
scas
pop
lea
sbb
xor
aam
mov
outsb
adc
mov
in
sub
inc
and
outsl
mov
adc
adc
sbb
push
jo
mov
cmp
mov
test
mov
jnp
sub
pusha
out
add
push
xlat
in
pop
imul
cmp
inc
std
adc
lock
fdivrl
sub
mov
add
xor
fcomps
and
fnsave
add
push
lods
lahf
int
mov
ret
sbb
and
push
in
xchg
mov
adc
scas
fwait
jmp
xchg
mov
sub
negb
xchg
cmpsb
nop
lcall
add
test
fldcw
es
add
cltd
jbe
divl
add
and
mov
int
push
or
cmp
imul
cmpsb
enter
lret
subl
mov
push
aad
mov
adcl
jbe
in
xchg
mov
sub
jg
push
inc
jo
sbb
mov
xor
out
xor
sbb
nop
lods
push
in
sbb
inc
push
cmpb
popf
fstps
mov
add
xchg
push
shrb
loop
push
fnstcw
sub
fcomi
orl
arpl
sbbb
mov
adc
cwtl
pop
call
ss
test
fnstsw
xchg
shlb
loopne
in
jge
jecxz
or
rorl
lock
and
cmp
mov
add
and
in
push
rorl
andl
in
out
mov
xchg
push
cmc
lock
cmp
and
js
sub
in
xchg
cld
lods
dec
xor
mov
or
aad
jne
xor
mov
lock
lods
mov
mov
inc
subl
inc
pop
jb
enter
aaa
pop
cld
push
enter
inc
xlat
lea
xor
mov
in
mov
push
shl
or
and
cltd
add
or
mov
cltd
sarl
mov
lea
enter
fsub
pop
xor
sbb
sub
sbb
xor
mov
mov
mov
into
addr16
jl
idivl
orb
mov
mov
mov
test
mov
mov
fnstsw
xor
rcrl
sub
imulb
inc
out
rcr
les
xchg
jno
fwait
out
mov
jmp
xor
xchg
xchg
out
sahf
sub
rolb
repz
mov
orl
jnp
cmp
out
jnp
push
test
faddl
push
xchg
push
mov
add
dec
jmp
inc
sbb
pop
lock
mov
bound
js
xchg
sub
incl
sub
test
mov
arpl
lcall
rcrl
mov
and
jnp
aas
icebp
xchg
outsb
call
lcall
out
add
adc
inc
mov
xchg
fadds
pop
and
lea
rolb
mov
lds
mov
jmp
bound
in
mov
rclb
mov
xchg
insb
lcall
enter
adc
mov
leave
pop
inc
filds
mov
out
cltd
jle
sbb
loopne
nop
mov
sub
in
jnp
mov
test
inc
mov
inc
adcl
jle
dec
cmp
loopne
cmp
test
mov
loop
cwtl
iret
bound
xchg
mov
rcrl
cmp
push
imul
mov
test
mov
cmpsb
enter
imul
add
pusha
stos
jecxz
mov
xchg
lret
xchg
xchg
and
cwtl
or
xchg
pop
adc
sbb
rcr
or
push
push
jl
insb
inc
sub
rorb
fiaddl
shr
pop
outsl
shl
sbb
pushf
lret
je,pt
push
dec
inc
negb
mov
enter
loope
cmp
je
xchg
push
cmp
xlat
sarb
push
orb
lret
cmc
cmp
ss
lock
pop
mov
dec
jne
jne
loopne
jle
mov
in
sbb
sub
mov
mov
cwtl
or
jae
into
push
mov
cmp
add
pop
mov
xchg
mov
inc
mov
dec
inc
das
fisubs
or
loop
cmpsl
in
in
call
stc
pop
jne
add
jle
adc
mov
js
ss
inc
into
mov
sub
dec
push
dec
push
mov
shll
cmp
or
mov
push
cld
scas
sti
ret
fistpl
adc
adc
sbb
and
or
cli
mov
jno
xor
inc
stos
icebp
inc
sub
shlb
inc
int3
jp
leave
out
ja
push
ja
ss
insl
sub
aad
fwait
mov
mov
hlt
xor
sbb
sbb
gs
and
pop
push
mov
xchg
push
icebp
fadds
push
shld
rcr
mov
mov
push
gs
inc
or
fmull
mov
rolb
in
xor
add
aas
xorl
rcrl
push
xlat
mov
std
and
rcl
adc
jbe
add
and
adc
add
scas
cmp
jecxz
and
loopne
sub
cli
push
mov
push
js
in
jle,pn
je
jp
cli
adc
pushf
pop
xor
or
ss
pop
sub
and
cmovbe
jp
clc
sbb
xor
adc
loop
popa
ja
pop
add
int3
roll
xorb
pop
pop
ret
loope
pop
arpl
mov
mov
or
enter
addr16
mov
mov
out
xor
and
ljmp
xchg
mov
gs
test
lahf
push
dec
repz
add
inc
stc
sub
nop
loope
adc
lret
das
fdivr
xor
jns
mov
mov
filds
incl
roll
fwait
push
jbe
imulb
add
and
push
sub
mov
ret
jo
jl
aad
jecxz
sbb
inc
adc
adc
aad
push
inc
pushf
cmp
inc
fistps
push
xchg
pop
inc
ja
mov
pushf
out
dec
dec
dec
lock
insl
dec
adc
mov
push
dec
fldenv
and
cli
rolb
sub
cltd
arpl
cmc
and
mov
adc
jbe
xchg
stos
cld
mov
mov
les
lock
jmp
enter
mov
scas
pop
ljmp
out
aam
loopne
stc
pop
sbb
mov
pop
outsl
movsl
test
mov
cs
and
add
pop
sbb
add
mov
aas
dec
jno
dec
adc
and
push
movsb
fstp
rorb
cli
mov
mov
loopne
inc
pop
fadd
outsb
pop
cmpsb
fmuls
adc
inc
vpslld
adc
stos
fldt
mov
jl
cwtl
push
and
mov
clc
xor
icebp
sbb
jge
loope
rcrl
mov
cmp
sub
adc
loopne
cmp
addr16
push
cmpsb
loope
sub
xchg
xchg
adc
jmp
sbb
ljmp
mov
sbb
mov
mov
cli
pop
jne
bound
shll
iret
test
fisttpll
jbe
jg
testl
and
ret
clc
pop
lret
push
jl
inc
xor
mov
fistpl
nop
aam
enter
mov
dec
movsl
scas
adc
in
sti
in
cmp
divb
add
cmp
sbb
cmp
mov
xor
or
dec
sahf
mov
add
push
cwtl
ret
int3
fsubl
mov
lock
rcll
jb
jp
inc
dec
add
cltd
jecxz
je
dec
lds
push
sbb
add
cmp
clc
mov
xchg
xor
inc
rolb
jns
push
inc
cmpb
xchg
fimull
insb
inc
inc
sbb
pop
inc
push
dec
xchg
sub
add
or
in
test
sbb
sbb
push
insb
or
sbbl
mov
xchg
jl
mov
or
mov
subl
or
enter
data16
mov
push
push
or
maxps
inc
in
stos
and
in
mov
xchg
inc
mov
lock
rcl
push
mov
or
in
jmp
pop
ljmp
jg
aas
mov
push
adc
or
mov
in
jge
xor
es
and
outsl
fwait
cmp
xchg
push
mov
mov
mov
pop
lcall
jle
std
pop
sbb
clc
pop
sub
fldt
imul
subb
pop
jb
test
adc
xor
ljmp
nop
push
mov
nop
mov
push
js
repz
arpl
inc
inc
mov
cmpb
mov
int
clc
aaa
jle
add
rcrb
mov
pop
addr16
and
mov
nop
dec
dec
int3
cmpsb
push
sar
cmpsl
add
mov
cltd
jb
out
push
das
mov
outsl
add
inc
jne
call
ds
adc
fs
jno
es
lods
xlat
cltd
loopne
sar
jg
push
xchg
popa
outsb
lret
mov
out
dec
popf
push
enter
fnstcw
dec
pop
xor
fwait
test
sbb
mov
aaa
mov
pop
test
and
adc
pushl
adc
mov
cmp
clc
jge
stos
mov
pop
test
out
loopne
jg
test
push
cmp
adc
ljmp
inc
ja
cmp
imul
push
cmp
popa
pop
pop
loope
test
mov
sub
inc
jne
scas
int3
js
std
int
sti
fmull
outsl
mov
flds
adc
xor
cmp
pushl
lock
mov
dec
push
xor
stc
test
adc
push
scas
ds
lea
and
inc
xchg
cmpsl
cmc
add
insb
nop
mov
dec
jnp
jge
sar
decl
aad
mov
mov
xchg
mov
in
sbb
int
sbb
jecxz
ljmp
sbb
inc
inc
inc
lret
adc
jp
std
push
adc
xchg
stc
xor
popf
add
and
imul
mov
cmpsl
outsb
inc
pop
ds
lcall
lcall
mov
out
and
mov
rclb
jp
jns
jmp
call
xor
sub
jecxz
add
sbb
pop
sub
xchg
inc
inc
mov
loop
incl
jg
pushf
hlt
and
mov
in
add
iret
mov
inc
jg
ljmp
xchg
push
and
dec
test
test
xor
cmc
mov
sbb
decl
fsub
push
bound
mov
add
sbb
out
addr16
gs
mov
cmp
fidivrs
inc
lret
xor
in
or
pop
ret
push
xor
incl
cmpsl
outsl
push
je
enter
aaa
jmp
mov
int
xchg
pop
sub
outsl
std
jns
insl
out
cltd
insl
dec
xchg
imull
sbb
xlat
xlat
mov
lods
cmc
filds
cs
fdivr
pop
adc
mov
jne
pop
std
lcall
or
loop
jne
decl
std
sub
lods
pushf
adc
mov
sub
push
mov
icebp
pop
add
adc
push
or
popa
hlt
pop
add
jmp
inc
test
mov
aam
xchg
jmp
test
xchg
clc
test
mov
mov
cmp
jno
inc
cmp
outsl
jge
out
adc
or
and
bound
push
repz
dec
std
decl
push
outsb
and
insl
xor
sbb
jg
dec
cmc
and
lcall
cmpsl
in
test
mov
mov
xchg
mull
jo
idiv
fldt
mov
and
orl
cmc
inc
in
subb
mov
adc
ud0
cs
scas
cmp
fwait
pop
pop
insl
jno
pushl
popa
inc
xchg
fldenv
mov
call
add
lret
lods
stos
push
mov
or
bound
fsubrs
addr16
add
clc
outsl
cmc
jmp
loope
loope
lds
jo
push
xor
mov
in
jb
lcall
test
int3
imul
jle
sbb
push
arpl
pop
arpl
decl
xor
rcrl
jp
fwait
aam
cs
xor
inc
aaa
das
aam
jl
and
outsl
mov
mov
pop
sbb
int3
jno
inc
sarl
pop
or
call
sub
push
dec
aas
das
scas
out
lods
inc
je
fbld
or
ljmp
scas
push
clc
xor
pop
call
sub
pushl
mov
xchg
mov
pop
inc
add
xchg
push
mov
mov
rcrl
or
mov
leave
ss
jle
jg
mov
fcomps
movsb
xchg
pushf
pop
insl
rcl
cli
shl
std
testl
in
push
movsl
enter
push
mov
loopne
xchg
rcrb
aaa
ficompl
adc
loopne
in
stos
aaa
scas
shlb
adc
jmp
sbb
ljmp
lahf
jo
mov
lods
in
adc
and
aas
lods
enter
aad
jae
inc
adc
sti
clc
jmp
lods
std
mov
sbb
in
mov
sahf
loop
push
xor
call
ret
mov
dec
arpl
out
mov
jne
sub
call
adc
add
add
out
into
pop
mov
out
call
or
inc
and
inc
dec
movsl
fs
sar
in
or
lcall
mov
fiaddl
call
je
call
out
stos
push
push
pop
sub
jg
testl
sarl
test
xchg
popa
mov
pop
movsb
pop
fisubrs
cmp
hlt
mov
addb
push
daa
aad
clc
call
bound
xchg
sbb
je
xor
xor
jl
push
int
lcall
and
int3
xor
sub
repz
lcall
fucomip
in
sub
cmpsl
js
sub
cmp
add
xor
xor
pop
jmp
fnstcw
jno
test
ss
filds
fsubl
es
jne
push
sub
decb
lods
popf
test
roll
ljmp
xlat
or
int3
stc
std
cmpsl
aam
movsl
fdivs
inc
jnp
dec
jo
and
mov
outsl
stos
inc
shr
xchg
call
jae
loopne
or
decl
inc
mov
shl
mov
std
cmc
sub
mov
sbb
mov
lods
ret
push
inc
test
incl
bound
and
sahf
lcall
shll
test
mov
lahf
jg
mov
cwtl
mov
mov
dec
dec
popf
pop
mov
pop
or
jle
inc
jnp
inc
pop
pushl
xchg
mov
rclb
mov
cli
mov
or
and
sub
fs
decl
mov
inc
or
sarb
popf
inc
aaa
mov
dec
inc
mov
bound
push
pop
and
incb
pop
mov
stc
mov
enter
mov
out
jle
fs
mov
call
sbb
sub
into
fninit
ds
lret
sub
pusha
inc
call
dec
out
rol
es
or
aaa
inc
arpl
add
pop
lahf
dec
aad
imul
test
lods
and
sub
fs
fildll
ss
lcall
and
je
addr16
cltd
aad
push
jo
push
in
ror
ljmp
icebp
or
mov
test
inc
ficoms
pusha
or
or
ljmp
adc
dec
fldt
out
js
hlt
rcrl
repnz
mov
test
xchg
or
pop
and
movsl
lock
mov
decl
scas
mov
sub
std
jg
scas
sahf
add
xchg
mov
cmp
loop
fucom
xchg
fwait
mov
cwtl
mov
and
add
gs
fucomip
aas
subl
sbb
jle
lds
imul
inc
pop
cli
decl
pop
xorl
jno
ljmp
cmpsl
pusha
hlt
xchg
scas
mov
decl
adc
lret
stc
xor
int3
sbb
in
lret
mov
jg
lock
in
add
mov
dec
test
push
lock
sbb
mov
incl
push
aas
js
xchg
rorb
mov
lock
pop
fdivrl
ret
sbb
jmp
adc
imul
loopne
lret
stos
jno
clc
xor
out
pusha
push
mov
push
jge
sbb
decb
stos
mov
aaa
push
jb
insb
cmp
inc
iret
jne
pop
mov
mov
jmp
cs
inc
add
dec
jl
jb
lcall
loopne
repnz
jne
movsb
lods
insb
pop
test
ljmp
pushl
pop
xor
cwtl
cmp
mov
or
jge
dec
mov
lahf
lods
mov
dec
cmp
push
xlat
pop
xor
int
push
inc
test
pop
or
lods
ljmp
xorl
popa
lahf
cmp
fiaddl
inc
mov
fs
fbld
mov
lret
lret
sar
jecxz
ja
les
lcall
cld
mov
test
jle
popa
xorl
pop
lock
fcoms
jg
mov
mov
jmp
mov
jmp
xchg
xchg
mov
out
inc
inc
xor
call
sbb
jnp
scas
fistl
inc
sbb
arpl
loopne
dec
cmc
cmpl
mov
mov
inc
jns
fsubl
sbb
xchg
push
sub
negb
pop
cld
lea
testl
jl
pushf
xchg
lods
hlt
and
shll
mov
repz
test
scas
je
bound
dec
adc
add
call
jo
aam
adc
adc
mov
js
mov
sar
loopne
call
aas
cmc
sbb
or
frstor
sub
je
jmp
cwtl
xor
inc
xchg
das
lock
fbstp
cmp
in
fisttpll
xchg
sub
xchg
hlt
jmp
imul
inc
stos
jae
sbb
dec
jle
rcr
and
out
pop
std
test
mov
sti
bnd
inc
sahf
loope
stc
sbb
pushl
xor
les
dec
fsubl
shr
sbb
or
jecxz
cmp
fs
call
ret
les
cmp
xchg
xchg
adc
popa
mov
and
stos
adc
cmp
out
mov
fiaddl
jg
pop
jg
pop
sbb
pop
fstp
push
fxch
rclb
jmp
or
mov
sbb
jb
mov
sub
popl
test
fistpl
inc
loopne
push
stos
cld
lcall
cld
pop
mov
inc
xchg
jae
sbb
cmp
lock
jmp
sub
mov
out
rclb
pop
dec
cmpsb
mov
std
insl
xchg
lods
xchg
out
jne
out
jl
inc
pop
hlt
cmp
lret
xchg
xchg
arpl
add
dec
movsb
inc
clc
rorb
xorb
negb
faddp
in
pop
hlt
das
hlt
pushl
push
rolb
fsts
inc
lock
mov
xchg
jb
cwtl
stc
lcall
loopne
push
mov
ja
inc
jp
jbe
roll
jle
push
jne
push
mov
aam
fidivrl
jbe
mov
test
sbbb
push
mov
jno
xchg
lea
mov
and
mov
in
incl
pop
outsl
mov
sbb
mov
fdivrl
and
lock
hlt
pop
dec
cmpsb
xchg
mov
aaa
xchg
mov
decl
mov
fnstenv
and
sub
pushf
mov
sahf
test
push
test
in
sub
nop
loop
push
addr16
test
incl
jmp
subl
ffree
sub
shrl
incl
mov
cltd
mov
jb
mov
cltd
ja
aad
mov
mov
ds
cmp
cld
stos
out
pop
insb
jl
mov
orb
pop
popa
cmpl
in
ljmp
sahf
push
arpl
arpl
in
lods
sbb
bound
push
std
nop
mov
xchg
adcl
inc
arpl
cwtl
and
leave
fs
stos
lds
mov
jmp
xchg
sar
test
cmpb
ret
addr16
iret
push
mov
sub
stos
int
lret
jg
iret
jns
repnz
push
inc
jle
push
cmp
stc
sbb
pop
pop
in
pop
rcrb
call
std
mull
into
data16
inc
arpl
out
jg
aaa
in
es
in
call
mov
stc
rorb
or
jge
sbb
data16
xor
jmp
jbe
mov
mov
lods
push
cmc
cmc
lret
xchg
jle
bndldx
mov
lcall
lcall
cli
pop
jmp
pop
push
mov
adc
shrb
cmpsl
cld
ret
incl
out
xor
or
push
or
inc
sub
adc
pop
ret
cmpsl
jbe
icebp
mov
and
inc
mov
and
pusha
push
je
addl
das
jnp
jns
pusha
pop
decb
aaa
dec
das
shl
je
push
test
mov
mov
xchg
push
shll
imul
lcall
loop
fimuls
jg
std
dec
sub
mov
es
adc
or
in
dec
adc
mov
pop
repz
inc
outsl
jp
or
jg
lock
adc
mov
fcoms
je
push
mov
std
mov
lock
in
imul
jge
sub
decl
std
sti
aas
adc
nop
cmp
fnstcw
mov
test
dec
mov
pop
cmp
cmpsl
pushl
sbb
push
idivl
out
int
cmp
dec
leave
mov
in
jae
addr16
decl
pushw
gs
repnz
xlat
fnstsw
xorl
mulb
sti
mov
lcall
pop
adc
aaa
inc
into
repnz
clc
and
lret
shll
push
call
push
xchg
cmp
pushf
clc
sar
add
mov
and
adc
dec
mov
dec
sub
jge
jl
add
pop
call
sub
push
mov
sbb
lahf
js
out
rclb
incl
push
pop
fsts
jno
cwtl
adc
mov
scas
fwait
xor
jmp
ret
mov
lret
pop
pushf
repnz
imul
mov
fcos
ljmp
insl
ret
aad
push
and
loop
repnz
sub
cltd
clc
popl
and
xchg
pop
cmp
add
ss
inc
fistps
mov
lods
ficoms
jns
cmp
add
or
inc
cs
shlb
adc
mov
popa
ret
pusha
pop
je
fisttpl
das
dec
cmp
aaa
xchg
lods
sbb
imul
add
mov
dec
dec
xchg
push
pop
movsb
sub
in
ret
icebp
cli
sbb
mov
pop
int
mov
add
and
jmp
adc
out
jmp
sub
inc
mov
add
jg
add
mov
mov
test
sub
mov
lcall
ljmp
cld
xlat
and
loop
inc
shlb
jl
mov
xchg
lods
fstpl
cli
xlat
push
mov
xor
xchg
mov
cmc
rol
jb
imul
jmp
pop
adc
xor
enter
mov
out
and
pop
aam
sti
idiv
lcall
inc
sub
ljmp
push
push
xchg
hlt
call
mov
adc
orl
mov
cld
movsl
out
lods
pop
ds
ret
xchg
ljmp
dec
dec
push
xchg
pop
shl
lea
test
or
push
in
cmp
ljmp
sbb
xor
pop
mov
sub
dec
mov
aam
ret
jp
pop
ljmp
mov
cmp
mov
sbb
mov
rcrb
mov
inc
iret
mov
ljmp
pop
inc
pushl
jns
fnstenv
xchg
mov
xchg
mov
std
fucomi
loopne
nop
pop
lcall
mov
pop
jp
lcall
leave
fldt
push
aaa
jnp
lods
mov
ja
mov
decl
scas
in
into
xchg
push
subl
xchg
jmp
jmp
repz
jmp
insb
push
lret
jl
sbb
pop
cmp
adc
iret
repz
sub
pop
xor
mov
add
mov
data16
ja
xchg
movsb
fstpt
adc
ljmp
mov
out
test
push
enter
std
call
cli
push
dec
shrb
andl
faddp
and
ja
push
call
inc
push
mov
into
push
sbb
cmp
jmp
jl
xchg
fnsave
cs
cltd
gs
sub
mov
or
or
lock
loope
sub
mov
or
mov
inc
and
dec
mov
mov
or
cmc
jg
into
out
cmpb
adc
cmpb
icebp
pop
popf
fs
pushl
clc
rcll
into
and
push
cmp
jmp
dec
js
daa
mov
shrl
fs
jg
jmp
cmc
adc
inc
fidivs
sbb
cmc
push
outsb
call
andps
jle
jmp
ja
mov
repnz
sbb
jg
hlt
incl
cld
daa
cld
mov
mov
ret
fs
pcmpeqd
out
mov
mov
jmp
leave
adc
sub
adc
inc
jnp
scas
cmpsb
sarl
sub
clc
sub
cmp
inc
loop
decl
divb
inc
aad
rcrb
mov
cld
or
aaa
outsl
add
fcomip
add
xchg
sub
dec
sub
out
in
cli
xor
rclb
fldl
shrl
xor
xor
mov
icebp
xor
out
stc
rclb
xchg
cmp
movsb
jg
jmp
dec
sbb
icebp
rcr
fistpll
jl
outsb
cmp
cmpsb
pop
jo
lahf
add
pop
in
movlps
adc
outsb
hlt
pushl
sarb
insl
lret
xlat
add
aaa
std
push
bound
sbb
fistpll
ret
pop
jg
lods
fucomip
dec
std
mov
push
leave
jmp
into
cmp
leave
add
or
ljmp
mov
jb
push
mov
xchg
jle
pop
xor
pop
fucomi
mov
outsl
cmc
xchg
mov
mov
mov
jo
ds
jmp
in
arpl
add
loope
lods
sbb
xchg
jbe
jo
ljmp
cmp
or
dec
lcall
adc
jno
mov
leave
jbe
xlat
loope
push
xor
mov
push
jp
stos
sbb
xchg
shr
inc
ja
mulb
inc
inc
mov
push
mov
pushl
mov
mov
dec
dec
test
por
pop
mov
clc
lret
mov
jl
popl
mov
push
add
pushl
shlb
jnp
aad
jbe
fnstcw
fs
jg
int3
outsb
jmp
test
pusha
sub
dec
push
call
hlt
sar
js
mov
push
dec
lcall
int3
pop
and
mov
dec
jmp
sub
sub
add
xor
cmp
enter
push
dec
pushf
mov
and
addr16
ljmp
sub
push
sbb
ret
pop
incl
cmpsl
xor
dec
xchg
xlat
mov
jo
repz
shll
pop
jbe
test
jbe
cmc
add
aaa
cmpsb
push
fidivrl
xchg
pusha
add
xor
sub
outsl
icebp
mov
fidivrs
mov
xor
aaa
ljmp
nop
xor
ljmp
loop
jge
lcall
dec
jg
enter
and
sarb
adc
in
fiaddl
aas
and
and
cmp
imul
jnp
mov
sub
out
xor
mov
movsl
decl
and
dec
cwtl
fisubrs
inc
dec
shrb
popf
loop
lcall
mov
iret
sub
aas
lds
xlat
sbb
sti
mov
int
test
ljmp
jmp
xor
cmp
dec
push
sahf
fisubrl
sti
lea
pop
jnp
push
xor
push
add
xchg
mov
icebp
dec
sbb
hlt
push
mov
or
sbb
and
loop
and
sbb
js
jle
inc
cli
or
mov
mov
das
icebp
into
aas
or
dec
xchg
mov
pushf
int3
jecxz
or
pop
jnp
or
cli
loop
movsb
jle
call
lods
lcall
adc
pop
clc
push
mov
cmp
jmp
mov
outsb
pop
das
push
hlt
lcall
pop
sub
push
pop
cld
and
inc
jb
ljmp
sbb
xchg
gs
push
xor
bound
lds
inc
push
ljmp
dec
jo
dec
mov
call
push
in
mov
insl
inc
stc
xor
jnp
xchg
dec
mov
jno
ljmp
test
cmp
xlat
xor
adc
sub
sbbb
flds
int
jbe
movsl
mov
je
leave
cmpsl
dec
sti
push
cld
inc
out
mov
inc
push
or
pushl
clc
stos
mov
push
rcrl
call
mov
push
in
lock
lcall
ficoml
fstpt
sbbb
pushf
daa
fs
jg
mov
xor
rcll
sub
lcall
dec
jns
push
fcoms
ss
mov
pushl
lods
sti
jmp
inc
push
jno
and
adc
sbb
in
jge
mov
mov
inc
jg
and
inc
add
in
clc
xchg
push
movsb
sar
mov
ss
xor
lcall
pop
aaa
or
mov
stos
jge
dec
mov
xchg
xchg
ds
lods
icebp
mov
xor
out
pop
cs
call
inc
in
mov
push
pop
lcall
cld
lods
mov
ds
addr16
adc
dec
mov
and
dec
repnz
sub
repz
jne
cmpsb
into
sarb
mov
je
push
lcall
cld
call
sahf
adc
cmp
fimull
enter
push
imul
xchg
fscale
mov
in
repz
pop
xor
cmp
jg
decl
ret
cmp
dec
push
mov
pushf
leave
sub
jae
mov
jne
mov
repnz
lock
jbe
and
pop
pop
lea
inc
fldlg2
ret
stc
mov
loope
filds
popa
fincstp
sub
rcl
cld
jae
decl
cmp
mov
jg
push
mov
test
stc
cmc
int
ret
lds
jl
mov
pop
loop
inc
aaa
out
mov
imul
fsubr
push
scas
xchg
jae
int
sub
lock
ljmp
xor
mov
lret
xorb
push
movsb
mov
aaa
lcall
call
mov
xchg
enter
lcall
push
ret
ljmp
lds
sbb
gs
ljmp
jmp
and
add
inc
ss
ret
or
push
sub
shr
out
dec
insb
cmp
jb
add
decb
mov
jecxz
sbb
rclb
sarl
call
es
loop
mov
mov
mov
cltd
sbb
es
arpl
push
outsl
sub
aaa
decb
jl
ds
inc
mov
scas
xchg
cli
or
pop
pop
xchg
outsl
cld
decl
mov
loopne
inc
pop
adc
adc
lahf
fsubrs
jns
pop
rcl
ljmp
adc
mov
fisttpl
lret
mov
decl
jp
outsb
shl
mov
daa
fsubrl
xchg
fistps
push
inc
bound
sub
xor
xor
xor
fsubr
js
out
int
cmp
sub
les
push
jl
fbld
and
fisubl
fnstsw
pop
ljmp
data16
cmp
int
hlt
mov
inc
xchg
mov
mov
pop
in
jl
xor
sti
ret
arpl
push
fstpt
gs
es
pusha
jg
adc
xchg
cmp
jne
lcall
ret
mov
push
popa
push
mov
pop
lock
pushf
mov
and
shlb
call
mov
not
out
outsl
inc
mov
sahf
arpl
mov
or
sbb
jno
fucomip
mov
xor
out
div
jbe
adc
les
or
push
incl
add
sbb
arpl
and
or
jg
lods
xorl
scas
mov
insb
cmp
mov
sbb
decl
xchg
jl
gs
lret
fs
in
arpl
lea
bound
movsb
lcall
inc
dec
in
bound
dec
jg
cmp
inc
jb
imul
inc
jae
movsl
ljmp
cld
xchg
add
mov
and
jno
roll
call
mov
mov
int3
mov
das
push
adc
fcmovbe
mov
pop
and
pushl
cltd
mov
or
shl
add
cs
fnstenv
cs
addb
pop
add
mov
out
mov
xchg
push
xor
out
add
xchg
sub
sbb
inc
addb
mov
lret
cmp
push
adc
dec
sahf
sbb
push
incl
push
gs
cmpsl
or
lds
lcall
push
pop
or
loope
js
stos
sti
int
fiadds
and
movsb
cwtl
aaa
popa
jb
jg
sub
inc
ffree
hlt
lods
xchg
or
popf
sbb
arpl
mov
xor
dec
lcall
add
sub
jb
add
ret
jmp
aam
jg
jg
call
cmp
shlb
std
call
scas
mov
test
pop
inc
lock
addr16
cli
lea
mov
bound
pop
push
stos
xchg
lahf
movsb
fdivrp
push
aaa
nop
dec
push
stos
lret
cwtl
les
xlat
add
hlt
aas
jmp
decl
iret
cmp
out
out
sbbl
mov
decl
push
inc
adc
rcrl
sub
push
mov
pusha
mov
arpl
push
decl
daa
decl
adc
imul
xchg
imul
mov
repz
pushf
movsl
inc
mov
push
je
dec
add
imul
std
das
leave
pop
test
mov
pop
rorl
adc
into
dec
jmp
dec
in
lcall
mov
mov
test
lds
nop
cmc
and
inc
pushl
in
add
add
mov
or
add
pop
loop
adc
stos
fwait
cmpb
sti
and
or
popa
inc
xor
mov
ljmp
cld
incl
js
daa
cwtl
in
pop
inc
fldenv
xor
icebp
in
xchg
lcall
push
ret
popf
popl
pushf
and
cwtl
addr16
repnz
loopne
cli
pushl
repnz
cs
jno,pn
inc
fs
pop
mov
clc
das
lock
or
outsb
jge
cmc
ret
lock
jg
call
inc
out
xchg
mov
mov
ss
aam
sbb
outsb
sub
std
mov
and
loopne
dec
lea
sub
jle
xor
pop
or
sub
outsl
lock
sub
mov
xor
idiv
ljmp
and
ljmp
mov
int3
subb
dec
push
mov
mov
jp
in
pop
and
mov
mov
mov
out
add
jg
add
andb
adc
lcall
inc
mov
adc
add
insb
xor
mov
cmpsb
js
jb
ljmp
icebp
mov
sub
xor
mov
sub
repz
sarl
outsl
jg
push
std
pop
xor
or
inc
loopew
jno
xchg
ljmp
enter
push
ret
mov
jecxz
inc
test
sbb
dec
sub
ljmp
call
fprem1
cmp
bound
aad
lods
das
adcb
or
mov
outsl
cmc
fdivs
push
pop
aaa
jmp
arpl
mov
mov
pop
mov
loopne
inc
lcall
fdivrp
cltd
dec
sub
jae
adc
mov
xchg
neg
mov
or
in
decl
adc
lods
cmp
loopne
pushf
xor
out
sub
fdivrp
aad
call
xchg
std
xor
call
mov
pop
mov
call
mov
js
inc
jl
hlt
fsub
cltd
jo
add
jb
mov
ljmp
mov
andb
sarl
pop
push
pop
mov
dec
lcall
push
mov
filds
push
ss
mov
fwait
sbb
cmc
jmp
mov
mov
imul
shrb
ret
dec
std
decl
pop
aas
mov
pop
shrl
mov
lret
cwtl
repz
das
jmp
ljmp
pop
add
call
movsb
cmpb
add
xlat
nop
call
js
push
inc
in
pop
cmp
aam
lods
xor
scas
inc
mov
add
jne
push
cmp
and
add
fistl
outsl
lock
and
cmp
ljmp
push
je
cmp
cltd
adc
decl
mov
sub
pop
push
mov
shr
push
pop
subl
sbb
jg
outsl
or
std
pcmpgtd
fwait
and
xor
dec
in
gs
loope
dec
pushf
popa
dec
repz
stos
inc
mov
int3
xchg
cltd
daa
jnp
adcb
incl
mov
int
mov
inc
mov
rolb
test
call
ja
sub
and
mov
call
div
lar
mov
or
subl
sub
lcall
fstpt
push
out
mov
leave
xlat
pop
xor
orb
sbb
xchg
insl
inc
out
xor
jg
add
mul
dec
rcll
push
loope
sub
jo
cwtl
push
fidivrl
aad
fbld
js
mov
in
xor
mov
cmp
mov
push
ss
pop
mov
cmpsl
ljmp
inc
push
cmp
adc
adc
mov
mov
js
das
es
jg
cmp
cmpsl
mov
jle
je
and
clc
cld
sbb
test
mov
aam
nop
jb
cld
sub
cmp
lds
lret
or
jmp
fadd
movsb
mov
or
ror
mov
inc
movsl
ret
mov
loopne
fs
mov
jbe
jge
fmuls
adc
decl
cmp
or
or
dec
es
and
test
cmp
out
popa
shrl
call
sub
insb
aaa
neg
fmull
popa
or
pop
dec
fimuls
jbe
call
xor
xor
pop
cmpsl
mov
or
inc
pop
pop
and
aad
mov
jno
arpl
sub
xchg
jo
std
sbb
sbb
adc
cli
mov
cltd
jne
push
push
mov
dec
jbe
xor
sub
fnstsw
lcall
push
iret
or
sub
clc
xor
xchg
xlat
pop
or
mov
jg
incl
dec
inc
mov
push
pusha
lods
sbb
int
sbb
ljmp
hlt
and
or
jno
ret
inc
fmull
jle
ret
call
shl
stos
ja
push
cmp
sahf
movswl
mov
add
adc
xchg
scas
cs
dec
insl
or
xor
mov
sub
xor
popf
lds
rclb
sarl
sub
xchg
inc
int
lcall
inc
push
cmpsl
cwtl
xchg
sbb
or
fcompl
mov
inc
mov
push
push
add
test
and
adc
lds
dec
xor
cli
sbb
mov
enter
das
xor
jmp
fadds
mov
fnstsw
sub
pop
out
xor
mov
ret
scas
dec
push
cwtl
adc
dec
push
jmp
inc
sub
mov
fcomps
js
jmp
jmp
xchg
and
loop
fsubs
sbb
mov
mov
ljmp
imul
pop
test
pushl
lahf
pop
pusha
mov
pop
fbstp
insl
insb
out
out
xlat
adc
mov
ret
lods
ret
fcompl
dec
in
call
push
mov
or
les
mov
mov
mov
jb
movsl
xchg
mov
test
fldenv
and
mov
cmp
mov
pushf
hlt
cmp
sbb
cwtl
sbb
sub
arpl
mov
repnz
push
movsb
icebp
jg
out
push
mov
fisttpl
push
jns
cs
stos
gs
mov
xchg
xchg
add
ljmp
in
clc
push
push
hlt
lock
cmp
sub
inc
arpl
jg
cwtl
xor
iret
clc
pop
outsl
enter
aam
dec
sti
cmp
or
mov
jmp
test
decl
sub
cltd
repz
add
dec
hlt
cld
ss
ss
add
aaa
lds
jnp
nop
das
stos
lahf
cli
xchg
or
jecxz
sti
out
jg
jmp
bound
xchg
scas
mov
dec
sbb
and
mov
sub
stos
mov
mov
dec
sar
bound
in
fmulp
adc
mov
ja
mov
rorb
pop
clc
push
cwtl
sub
mov
pop
push
adc
push
jp
cmp
adcl
pop
mov
cmp
daa
pop
mov
jb
shrb
lret
ljmp
push
or
push
add
cmp
cmp
mov
inc
jns
or
idivb
pop
imul
scas
push
xchg
pop
mov
mov
int
mov
test
stos
and
push
ljmp
xor
jns
dec
add
scas
jg
lcall
inc
adc
dec
pop
and
out
sti
inc
jmp
cli
call
sarb
or
xor
rcll
pop
dec
pusha
lahf
test
incl
pusha
movsl
xchg
pop
pop
sub
dec
cmp
movsl
xor
std
clc
shrb
lods
cld
push
xchg
call
mov
pop
jnp
int3
int3
mov
test
jns
mov
or
fwait
test
fbld
add
adc
aam
mov
jae
ljmp
cltd
sub
loop
ljmp
scas
adc
push
ret
test
jg
loopne
sarl
arpl
lea
xchg
jae
loopne
cmp
sti
add
mov
hlt
jmp
out
test
sbb
jge
popf
sahf
sub
ljmp
add
rol
rcrb
adc
pop
int3
push
daa
pop
call
cmpsb
cmc
cli
dec
or
dec
jb
mov
sbb
add
mov
outsl
add
fistl
xchg
cmp
test
push
xor
mov
fcomi
leave
add
xor
ljmp
dec
mov
add
and
push
incb
das
into
xlat
or
sub
sbb
inc
add
mov
imul
jnp
adc
dec
scas
imul
adc
inc
aaa
out
roll
or
ffree
or
sub
xchg
ljmp
insl
bound
pop
cmc
orl
and
cli
fidivs
call
push
dec
fidivl
mov
subb
add
and
inc
arpl
in
and
das
hlt
mov
shr
adc
push
pop
fs
icebp
shll
nop
rcrb
fs
cltd
repnz
jnp
xor
lcall
or
dec
aas
and
in
inc
pop
pusha
push
lcall
mov
sub
call
ret
mov
or
enter
in
adc
stos
xchg
mov
pop
xor
les
adc
mov
hlt
pushl
shll
jmp
ret
or
inc
mov
mov
mov
xchg
cmp
jl
lea
cmp
xor
sub
mov
xchg
push
inc
test
adc
call
lods
icebp
shll
sbb
mov
insb
mov
sbb
cltd
pop
pushf
or
mov
movsl
pushl
lret
or
mov
mov
in
repnz
and
daa
sub
jne
fcmovu
xor
decl
js
push
mov
std
or
dec
mov
pop
push
stos
push
inc
ljmp
dec
xchg
add
jg
xlat
loope
mov
popf
call
or
sarl
les
pop
or
aad
rolb
inc
cld
add
popa
pop
iret
jge,pt
movsb
aad
call
push
pand
cli
add
xlat
fstpl
shlb
in
fwait
in
mov
add
or
subb
fists
pop
cmpsl
sub
mov
mov
fimuls
lea
out
call
push
cmp
pop
xchg
inc
fwait
mov
dec
xchg
cld
popf
test
shrb
decb
incl
or
popa
pushf
xor
xor
js
rcrl
or
pushl
cli
mov
lcall
mov
fists
jg
icebp
stos
push
push
jb
pop
test
imul
data16
cmp
and
imul
cmpl
jge
jae
mov
xor
out
adc
and
call
xor
shr
cmc
insb
add
fnstcw
lods
push
inc
adc
sarb
stos
add
cmp
jmp
je
xor
das
lret
sbb
jle
and
ljmp
icebp
incl
imul
jno
adc
mov
mov
and
push
sub
leave
jmp
xchg
sbb
push
in
jno
xor
pop
call
xchg
push
pop
mov
dec
xchg
enter
pop
insl
sbb
pushl
cli
daa
add
fcmovu
or
mov
mov
cmp
test
and
mov
leave
fcmovu
movl
jge
gs
jns
xlat
mov
ret
das
mov
cs
sbb
mov
adc
insb
movsl
dec
cmpsb
test
daa
lret
ljmp
xor
lcall
jmp
clc
xchg
cmp
clc
pop
add
rcl
mov
shlb
imul
pop
aaa
mov
aam
ss
pop
mov
in
or
movsl
adc
xchg
fiadds
xchg
add
cmpsb
aaa
mov
fiaddl
lcall
adc
fdiv
stc
push
lock
sub
fidivrs
fldt
je
int3
push
outsb
out
pop
lock
imul
sub
pop
or
mov
bound
outsl
out
dec
cmpsb
icebp
dec
repnz
lcall
pop
lret
cmp
in
jecxz
lock
pushl
push
mov
push
adc
int3
mov
pop
mov
pop
mov
jg
mov
dec
leave
pop
and
cs
jnp
arpl
inc
fsts
cmc
lcall
push
sbb
outsb
sub
cli
cltd
inc
xchg
fwait
xor
jbe
push
and
loopne
jge
push
pop
dec
adc
mov
mov
pop
scas
pop
ret
xchg
xchg
or
repz
incl
push
call
mov
xchg
lret
popf
cli
cmp
push
adc
in
cmp
mov
rclb
pop
pop
xor
out
dec
out
icebp
push
dec
add
repz
push
dec
cli
aam
jbe
ret
add
mov
inc
pop
mov
sbb
outsl
aaa
arpl
cld
ljmp
xchg
jns
lret
and
xor
imul
sbb
or
insb
ret
mov
inc
fisttpl
mov
in
test
push
sub
adc
or
ljmp
hlt
sti
rol
leave
push
dec
mov
scas
ljmp
repz
into
or
es
add
test
or
mov
mov
push
adc
ljmp
cmp
jp
fisttps
push
into
gs
call
in
push
int3
mov
push
sbb
and
pushf
out
imul
les
scas
inc
loope
cli
decl
fld
fimuls
sbb
inc
das
cmp
jbe
iret
jnp
adc
jb
push
add
xor
adc
cmpl
sahf
inc
xlat
imull
das
dec
cmp
shrb
lret
iret
mov
lcall
aad
loopne
sti
mov
in
inc
mov
repz
cmp
or
stos
idiv
jnp
nop
mov
loopne
pop
aaa
sub
fists
push
and
jg
xchg
call
jmp
repz
outsl
stos
add
stos
pop
std
ljmp
imul
dec
sbb
mov
sub
xor
ds
sub
adc
sar
xor
mov
out
sbb
jo
and
or
sub
fnstsw
push
dec
fildll
and
incl
sbb
and
out
xorb
or
cmp
repnz
loopne
das
sub
idiv
incl
clc
sub
jge
jno
ss
repnz
fldl
or
cmc
jb
loop
inc
jnp
mov
aad
in
jmp
orl
adcl
test
xchg
aad
fisubs
leave
test
lcall
pop
mov
sbb
cli
and
push
pusha
jl
insl
repz
mov
jmp
insl
cld
xchg
pop
adc
jle
sbb
ljmp
outsl
iret
lahf
xchg
ljmp
cs
es
repnz
push
push
aas
mov
nop
adc
decl
add
int3
xchg
mov
add
outsb
mov
inc
mov
xlat
mov
btsl
aam
sbb
lcall
push
cmc
fcmovb
test
into
xchg
rol
cs
xchg
das
sar
xchg
fnsave
inc
sbb
addb
ret
data16
incl
ljmp
test
pop
add
xchg
mov
insb
pop
adc
pushl
xor
movsl
sub
lock
ret
push
andl
adc
outsl
mov
icebp
inc
cmp
and
mov
mov
decl
xor
push
adc
xor
jae
mov
shl
mov
shll
cmp
push
mov
dec
xor
adc
jb
out
sbb
lcall
jmp
fstpl
aas
aam
scas
lret
pop
xchg
push
je
or
popa
push
lcall
pop
sbb
xor
push
hlt
jmp
pop
fbld
pop
out
test
jg
movsl
xor
jb
loope
test
shrb
fisubl
fistps
outsl
push
leave
xchg
mov
jae
ret
xlat
add
pushl
and
jp
dec
xchg
mov
mov
addr16
sti
cld
sub
sbb
hlt
das
cld
pushl
cmp
mov
outsb
shll
std
push
xchg
mov
pop
mov
popf
xor
pop
stc
sbb
add
mov
movsl
shl
cmc
inc
mov
lea
lea
xor
jg
ljmp
scas
inc
sbbl
loope
bound
pop
je
mov
cli
cmpsb
fidivrl
fstpt
mov
roll
inc
jns
push
push
cmp
incl
addr16
push
imul
cwtl
sub
mov
xor
and
imul
jmp
jnp
mov
dec
leave
xor
sbb
stos
mov
incl
icebp
lret
fcmovb
popf
mov
aaa
mov
fistps
aam
xor
mov
dec
push
pop
fisttps
aam
filds
dec
xchg
cs
cmpsl
and
jb
imul
or
adc
lret
ret
popa
inc
jne
jb
movb
out
jecxz
mov
or
sbb
mov
fdivl
test
shll
jge
push
adc
ljmp
insl
lods
mov
add
aad
hlt
add
call
pop
cs
xor
movsb
push
pop
outsl
adc
sbb
ds
jg
fsubrl
mov
sbb
fwait
xchg
xchg
add
dec
mov
lcall
int3
mov
lahf
sub
inc
lret
clc
jg
lock
mov
daa
mov
aad
lret
xor
call
mov
jg
sti
repnz
pusha
cld
mov
das
subl
and
fistps
rcll
lcall
mov
pop
inc
inc
insl
xor
jl
xor
mov
mov
pop
jecxz
jl
or
xlat
xor
dec
outsb
negl
stc
clc
fbstp
aam
add
ss
insb
ss
and
repz
sub
lcall
pop
push
push
push
shl
pop
and
test
mov
gs
ljmp
jne
pop
fcoms
mov
pop
lahf
pushf
lods
jecxz
xor
or
adc
mov
xchg
shr
fbld
lret
adc
decl
adc
push
sub
cs
call
push
decl
fs
test
aas
jb
sti
aas
out
stos
add
mov
lret
or
test
push
dec
in
pop
lret
mov
testb
mov
push
std
pop
or
jmp
ljmp
or
in
dec
push
out
lahf
or
popa
lock
vmaxsd
add
aaa
push
mov
jnp
pop
jg
sbb
out
or
test
and
or
orb
pushf
adc
test
bound
mov
in
inc
std
push
and
stos
mov
mov
pop
loopne
lock
mov
iret
ficoms
cmp
mov
das
mov
mov
and
sti
imul
fwait
pop
cli
incl
xchg
inc
lods
push
dec
fwait
push
add
jmp
xor
mov
pushl
loope
xor
lcall
push
lret
jp
insb
xchg
push
jg
andb
and
inc
sti
inc
mov
xchg
out
dec
fwait
dec
pop
out
das
mov
decl
scas
mov
and
add
pop
fst
mov
jmp
movsb
std
mov
scas
addb
sbb
fucomip
fbstp
pushf
daa
sbbb
aam
jb
sub
xchg
call
push
push
push
jl
mov
fstps
mov
jecxz
mov
inc
fcos
jg
xor
frstor
push
subb
mov
jmp
pop
loop
lret
les
adc
int
dec
dec
jge
movsb
gs
jg
call
movsb
inc
fstps
movsb
sub
faddp
out
or
lods
incl
je
std
lcall
jns
inc
pusha
inc
fimull
pop
push
call
insb
push
enter
popf
repnz
loop
dec
mov
push
add
ljmp
rcll
jmp
or
int
dec
and
sbb
mov
xchg
mov
cmp
fisttps
inc
cmp
mov
cmp
or
popf
popl
incl
mov
movsl
rorb
add
sti
std
test
xor
fldpi
mov
repz
repnz
outsl
push
gs
push
in
cmpsl
arpl
idiv
jg
lods
ljmp
test
gs
mov
pop
cmp
sbb
test
push
pop
xchg
jge
sar
call
imul
in
push
loope
mov
data16
sti
mov
push
arpl
sbb
int3
xchg
je
or
pop
test
std
outsl
call
cmp
imul
xlat
xchg
xchg
and
ljmp
repnz
xchg
pop
lahf
fimull
cs
int
adc
xchg
xor
xchg
lods
pushl
fwait
mov
loope
and
lods
sub
imul
stos
fsubp
mov
mov
inc
mov
mov
mov
inc
xchg
inc
push
push
xlat
cs
push
jl
jg
ss
push
push
add
test
je
popl
lcall
jae
pop
push
xchg
es
es
jbe,pn
clc
test
mov
jns
cld
std
mov
push
in
mov
nop
push
or
int
inc
rcr
daa
sub
push
loop
xchg
lcall
pop
sbb
loopne
cli
cmp
lret
sub
sub
mov
stos
outsb
mov
mov
adc
popf
in
fdivrl
inc
loopne
pop
sub
icebp
outsl
lock
call
jg
dec
ret
fidivrs
xchg
shll
push
jle
mov
jae
movsl
push
adc
iret
out
dec
inc
jle
in
adc
stc
add
jmp
inc
and
fmuls
xor
inc
mov
or
cld
jae
and
les
jg
jge
sub
sbb
xor
jle
or
test
inc
jno
incl
aad
dec
test
mov
sub
jo
push
out
sbb
int3
gs
and
test
cmc
xchg
inc
lret
enter
fists
sub
cltd
dec
jg
adcl
sub
pop
dec
call
fwait
das
clc
cmc
fucomip
jg
pushf
notl
xchg
lds
fs
mov
lock
inc
mov
dec
call
sbb
mov
lret
aad
xchg
xchg
cs
popf
or
in
int
fs
jg
lcall
aaa
ficoms
add
fwait
lds
out
and
call
xchg
xchg
loope
jp
test
pop
push
inc
std
ret
push
push
pop
ds
lcall
jle
dec
notb
adc
out
adc
inc
in
cmpsb
mov
inc
mov
cli
and
bound
rolb
push
mov
jge
data16
xchg
inc
popw
incb
out
cmp
in
test
lret
je
push
jae,pt
mov
sbb
sbb
imul
and
sub
jmp
imul
out
mov
adc
cmp
or
xchg
or
pop
ss
add
adc
push
stos
or
pop
movsb
and
or
outsl
push
xchg
sbb
call
or
out
pushf
push
mov
pop
mov
ljmp
outsl
lock
jb
int
dec
popf
je
int
js
mov
push
push
in
test
ds
mov
push
mov
cwtl
cmpsl
mov
inc
sar
jns
add
shlb
aaa
inc
jno
mov
sti
cld
push
orb
mov
jge
push
and
clc
mov
sub
sub
and
xor
add
add
and
dec
jecxz
aaa
or
push
lcall
nop
sahf
out
mov
pop
add
icebp
jmp
jge
add
add
mov
mov
mov
push
dec
hlt
loop
mov
iret
inc
mov
mov
mov
aad
mov
push
sbb
repnz
add
inc
mov
les
xor
mov
jle
mov
outsl
adc
push
cmpl
fwait
notb
cs
popa
rcl
sbb
lds
pop
push
fistl
xor
movsl
jns
test
clc
jg
sti
or
fidivs
mov
ds
mov
ljmp
inc
andl
add
fistpl
push
xorl
inc
int3
faddl
add
add
and
cmp
in
ret
fs
icebp
cld
decl
fistps
cs
adc
xor
call
add
sub
jo
mov
cmp
clc
scas
or
gs
mov
and
pop
inc
fstl
mov
pop
add
push
adc
adc
shl
in
sbb
loope
data16
fldt
pop
movsl
jnp
subb
adc
adc
adc
inc
push
add
xchg
jle
icebp
sbb
add
sbb
arpl
xchg
xor
jle
adc
pop
test
or
push
jg
aaa
add
fidivrs
add
xchg
andl
sub
das
push
decl
cwtl
xchg
mov
lcall
std
or
mov
or
lahf
fcmove
push
out
xchg
faddl
lods
jl
out
cmp
sbb
mov
insb
aaa
filds
mov
or
push
popa
loope
mov
cwtl
mov
mov
imul
jl
mov
in
push
lcall
das
adc
xlat
and
in
mov
mov
or
push
fwait
inc
pop
sbb
mov
cmpsb
pop
add
iret
je
lcall
ja
ret
call
fldt
dec
insb
and
mov
loopne
jbe
inc
xor
iret
scas
repz
test
insl
jecxz
addr16
push
jl
jl
and
cwtl
sahf
addr16
add
outsl
lret
jg
rorl
mov
pushl
push
test
in
iret
xor
fcmovu
mov
sbbb
lock
addb
add
in
in
ljmp
pop
jne
pop
icebp
push
addb
jp
subl
pushf
fbld
stos
xor
add
add
sbb
test
in
mov
add
std
xchg
adc
adc
lods
and
mov
into
test
mov
jae
das
test
fiadds
daa
mov
xchg
js
push
jo
adc
cmpsb
pop
jg
add
outsl
push
xchg
fcmovu
js
pop
mov
call
xor
sti
push
mov
mov
clc
test
add
jno
sbb
sub
mov
mov
sub
fimuls
sbb
outsb
fucomip
ds
jne
push
adc
sbb
mov
pushf
add
mov
popa
fstpt
sub
adc
sbb
setl
out
notb
loope
lret
out
mov
leave
adc
hlt
mov
sub
rcr
mov
icebp
add
jp
sbb
sbb
and
cmpsb
ret
mov
push
in
js
arpl
xchg
mov
inc
push
dec
pop
pusha
aad
cwtl
insb
adc
pushl
mov
mov
jle
mov
dec
clc
and
addb
stos
inc
jne
inc
fmuls
mov
jo
je
xor
inc
ljmp
mov
imul
in
dec
std
std
sub
xchg
push
fimuls
pop
mov
cmc
mov
call
lock
adcb
jp
fists
or
push
test
loope
pop
add
push
fs
js
mov
aaa
mov
rclb
and
mov
xlat
in
incl
adc
mov
rorb
leave
push
mov
lock
dec
push
add
and
dec
nop
data16
or
mov
iret
cmp
fdivrp
das
pop
cli
enter
cmpsb
cwtl
mov
mov
xchg
and
out
add
add
and
cmp
lock
pop
out
mov
popl
std
pop
mov
lcall
arpl
dec
add
add
je
js
daa
push
fmull
jl
mov
call
or
add
mov
sbb
ret
fildll
sbb
xor
std
mov
cmp
and
sahf
or
xchg
sub
fdivrp
inc
mov
int
or
sti
mov
push
pop
fs
and
adc
out
jbe
mul
pop
dec
cmpsb
pop
rcll
bnd
or
mov
mov
pop
mov
xor
scas
mov
mov
outsl
arpl
pushf
inc
mov
cmp
push
xor
dec
sbb
lcall
jno
rcl
pushl
repnz
pop
inc
xor
outsl
aaa
or
inc
dec
imul
je
push
daa
cmpsb
cmp
in
cwtl
sub
inc
or
ja
insl
sarb
fs
sub
jle
xor
ljmp
fxtract
aam
xchg
mov
xor
insb
add
lea
ja
int3
jae
jg
add
mov
push
decb
cmpsl
push
popl
mov
sbb
dec
std
inc
sub
xchg
mov
test
call
dec
aas
jns
lods
clc
or
mov
iret
movsl
or
adc
xchg
xlat
sbb
sbb
imulb
xchg
jmp
and
push
or
and
mov
mov
call
mov
outsl
call
enter
mov
fldenv
add
jbe
ljmp
push
sar
aas
movsl
stos
jl
cmpsb
in
add
test
mov
mov
aas
popf
xchg
push
bound
and
pop
cmp
outsb
loope
sub
out
fwait
lahf
scas
mov
and
into
add
fsub
in
pushf
xchg
ss
mov
fistpll
movb
inc
fimuls
xor
fisttpl
push
mov
and
ljmp
in
push
testl
mov
sbb
and
lods
xchg
mov
ja
ss
js
add
and
movsl
dec
movsl
loopne
adc
js
add
fcmovne
xchg
or
sub
fadd
out
daa
adc
js
push
cmp
jg
or
and
outsl
das
jecxz
inc
dec
dec
mov
xor
mov
pop
or
stos
cmp
ret
push
cmp
add
sbb
sbb
pusha
xorl
jp
lret
andb
aam
andb
fcmovu
push
sbb
rolb
pop
cmpsl
cmp
jmp
mov
dec
mov
cmp
lock
mov
or
popa
stos
repz
push
jbe
sahf
mov
mov
lcall
outsb
pop
mov
dec
sub
test
fiadds
outsb
sub
test
mov
movsb
loope
and
add
test
push
add
sub
arpl
mov
jo
cmp
test
xchg
push
adc
scas
mov
cmpsb
xchg
test
je
std
dec
cmp
mov
das
scas
mov
fisttps
dec
and
in
sbb
mov
add
xor
adc
adc
stos
cmp
or
or
nop
add
fcomps
in
and
and
mov
imul
mov
ljmp
mov
ret
sbb
jge
mov
test
lock
xchg
push
jmp
in
jbe
repnz
jnp
push
imull
dec
lods
sbb
cld
mov
repz
daa
lahf
incl
and
inc
mov
push
and
mov
mov
mov
les
and
add
mov
fwait
jecxz
adc
cli
arpl
mov
jb
ret
jo
stos
dec
push
fucomp
lods
test
out
xor
repz
out
jne,pn
std
adc
jne
movsb
sub
mov
sbb
outsb
std
call
push
sbb
std
jbe
mov
sub
add
cmp
mov
popa
dec
dec
popa
hlt
js
pop
sub
xor
jne
push
pushf
mov
lods
pop
and
mov
and
call
ja
xchg
cmp
pop
test
mov
repnz
jg
js
and
jmp
xchg
lcall
hlt
cmpsl
jl
rol
stos
pop
test
adc
or
xchg
mov
cmp
cmp
or
aam
into
or
ds
jl
mov
xor
aad
xchg
add
imul
and
in
pop
add
inc
leave
xor
jg
ss
add
fsubp
mov
sbb
call
mov
sbb
and
nop
xchg
inc
into
ljmp
fidivrl
sbb
jo
or
or
adc
ss
mov
in
sub
scas
xchg
mov
decl
das
arpl
shll
inc
movsl
inc
movsl
test
inc
lcall
pop
fstpl
adc
out
popfw
mov
andb
dec
sbb
fnstsw
ljmp
sub
mov
mov
fcmovnu
mov
dec
sahf
pop
iret
cmpsb
lcall
lds
dec
test
mov
sub
or
push
push
sahf
dec
dec
pop
rcrb
sub
bound
outsb
jb
jmp
ret
or
aam
inc
aaa
cmp
inc
int3
mov
fs
addr16
dec
aas
xchg
mov
aam
loop
push
pop
addr16
mov
push
sub
jle
mov
add
lahf
mov
addr16
jns
jecxz
nop
cwtl
cmpsb
fildll
jl
int3
jo
push
iret
cmp
or
xchg
add
stos
je
sbb
outsl
sbb
inc
cmovnp
lods
jecxz
lret
stc
mov
xor
jg
xor
xchg
addr16
mov
data16
ja
cmc
lods
in
bound
sar
dec
outsb
mov
pop
mov
and
lahf
mov
mov
stc
push
sub
ds
adc
xchg
dec
cld
jnp
push
push
xlat
loop
lods
mov
ja
outsl
imul
jle
sub
sub
cmp
jge
inc
imul
jbe
hlt
jg
test
repnz
dec
xor
and
lods
jbe
mov
leave
and
aad
fcom
negb
jo
inc
daa
dec
jnp
sub
mov
sbb
pop
mov
dec
rcl
fdivrs
dec
xchg
dec
jl
mov
pop
clc
rolb
imul
mov
in
pushl
sbbb
insl
call
or
int3
aas
dec
adc
mov
adc
test
flds
cwtl
stos
in
lods
add
scas
push
rcrl
fstl
popa
pop
add
mov
andl
arpl
adc
pop
add
add
push
inc
imul
adc
inc
inc
icebp
imull
outsb
std
out
and
into
test
sub
out
xchg
or
sbb
aaa
sbb
or
cmpsb
scas
cmpsb
loope
pop
push
std
das
dec
cmp
or
scas
and
fistl
sbbb
ja
mov
mov
aaa
sub
xchg
test
inc
xchg
leave
filds
popa
and
test
idivb
dec
mov
imul
and
lret
dec
adc
fidivs
push
lods
das
cs
fcmovu
adc
ja
mov
fistpll
cmp
pop
das
add
test
clc
jmp
mov
xor
hlt
adc
outsb
adc
ljmp
jmp
push
xchg
xchg
inc
test
fimuls
sti
dec
pop
add
test
loop
mov
mov
js
inc
or
sub
out
mov
push
and
leave
js
not
push
dec
ja
jns
cli
leave
sahf
jne
incl
clc
in
dec
jle
aaa
dec
les
adcl
push
iret
cmp
xor
xor
testb
adc
inc
inc
add
pusha
adc
add
roll
jnp
push
and
or
dec
add
xor
and
adc
fisubrs
mov
xor
add
xlat
push
cmp
adc
adcb
or
pop
addb
and
in
in
testb
inc
mov
adc
addb
mov
jmp
sbb
dec
push
orb
addb
mov
addb
sbb
out
lods
adc
mov
push
adcb
inc
fs
in
add
pusha
pusha
adc
or
add
adc
push
addb
and
pcmpgtb
add
fidivs
adc
rcrb
fcomi
inc
pusha
xorb
or
or
adcb
adc
and
mov
add
add
xor
mov
in
adc
inc
add
adcb
fcmovnu
jno
add
or
test
xchg
cmpb
xor
inc
adc
or
mov
push
adc
mulb
adc
or
adc
adcb
test
pop
inc
stc
mov
add
mov
pop
jo
jno
or
jmp
adc
mov
rolb
add
xchg
and
mov
jnp
das
adc
push
or
and
and
fiaddl
adc
adc
dec
adc
cmp
mov
mov
dec
jg
insb
fildl
push
sahf
adc
mov
popa
fistl
pusha
or
adc
xor
mov
and
andb
xor
inc
add
cmp
popa
loope
push
add
inc
adc
dec
and
mov
mov
and
adc
dec
dec
xor
mov
jae
mov
add
or
imul
sbb
or
adc
xchg
js
jge
insl
imul
ljmp
jmp
add
mov
arpl
and
inc
in
or
adc
add
add
fbstp
inc
inc
test
push
xorb
pusha
inc
inc
push
inc
or
inc
test
mov
ss
add
subl
fiaddl
push
and
lcall
add
sbbb
punpckhwd
and
pop
ds
test
lods
push
or
pop
lret
popa
add
mov
add
xorb
jmp
or
cmp
and
add
pop
loopne
mov
sbb
mov
or
or
addb
test
pop
and
nop
xor
aam
addl
ret
pop
mov
add
cmp
pop
or
cmpsb
adc
and
lods
scas
push
sbb
inc
divb
push
jge
adc
fs
pusha
jmp
jmp
orb
adc
popa
pop
jbe
imul
fs
inc
push
ret
cs
mov
adc
frstor
cmpb
adc
fidivl
add
insl
jbe
cs
jne
mov
sbb
and
jp
sbbl
and
push
mov
add
sub
imul
shrl
and
add
or
and
fiaddl
mov
or
jns
cmp
xor
adc
mov
jbe
popa
imul
add
adc
xchg
adc
stos
scas
loopne
or
data16
pop
mov
sbb
mov
adc
lods
subb
push
sti
lods
mov
add
int
mov
add
xchg
dec
adc
out
and
push
pop
xchg
xlat
jae
sbb
dec
fimuls
fldcw
pop
lcall
sub
mov
ljmp
add
pusha
nop
adc
shlb
icebp
fs
mov
mov
cvtps2pd
pop
lret
pop
sub
pop
adc
in
mov
arpl
adc
mov
push
mov
xor
or
andl
ret
call
mov
mov
ss
or
inc
stos
pop
fs
imul
iret
dec
push
mov
scas
aas
inc
clc
test
mov
popa
mov
call
jno
test
or
lahf
inc
clc
mov
inc
inc
and
dec
push
push
pop
push
lods
xor
add
mov
ds
and
push
mov
inc
sbb
add
add
sbb
inc
mov
and
or
adc
adc
mov
push
xor
push
and
or
adc
test
push
pusha
xor
mov
and
sub
subb
dec
mov
inc
inc
and
or
and
int
inc
lea
or
xor
sbb
nop
xor
addb
push
cmc
scas
xor
insb
pop
mov
xor
hlt
push
add
fsubrs
cwtl
pop
or
andb
outsb
xchg
push
orb
cmp
or
push
xor
pusha
test
insl
pop
sub
dec
mov
cmp
mov
push
dec
dec
movsb
add
or
loopne
mov
iret
nop
stos
xor
fldenv
mov
add
lea
dec
and
dec
inc
dec
xor
orl
andb
xor
mov
sbbl
adc
xor
inc
lea
int
cmp
mov
add
movb
fbstp
inc
fwait
and
and
push
jbe
adc
inc
inc
and
dec
and
aam
pop
bound
xchg
sysenter
and
push
push
lcall
shr
inc
data16
pop
insl
add
mov
mov
fisttpll
push
test
lods
dec
inc
subb
sbb
sbb
sub
imul
sbb
jle
sub
sbb
mov
pop
pop
les
push
push
pop
imul
flds
mov
ficoml
push
mov
push
sub
aad
push
test
jmp
jae
int
movsl
dec
jne
data16
mov
lods
xchg
cmp
insl
adc
adc
pop
lods
inc
sbb
sub
push
pusha
add
cmpsl
fistpl
ficompl
cmpsb
sub
xor
fldcw
test
decl
mov
rcrb
or
jb
push
dec
sub
push
sub
popf
loop
mov
adc
pop
mov
pop
shl
dec
pop
mov
int
xlat
jge
ret
push
and
or
faddl
xchg
and
notl
pop
test
dec
test
adc
imul
dec
cmpsb
movsl
inc
movsl
and
mov
lods
xchg
mov
and
insl
xlat
push
lcall
movsl
ret
loopne
or
add
mov
jnp
sbb
out
adc
add
inc
inc
jb
push
sub
pop
jno
jp
fisttpl
lods
mov
jbe,pt
xchg
add
sub
pop
imul
add
lahf
stos
xchg
mov
mov
push
sub
fs
out
jbe
imul
inc
pop
pop
aas
or
ficoml
adc
inc
loopne
mov
rclb
mov
xor
das
ss
rorl
test
and
xlat
test
shlb
aas
adc
mov
test
popa
push
test
lods
shlb
and
push
add
rclb
lock
add
je
outsl
fs
gs
popa
outsb
fs
adc
insl
bound
inc
outsl
jb
popa
je
jae
bound
lods
cld
adc
gs
outsb
je
insb
popa
jns
outsl
popa
fs
sti
push
stc
mulb
insb
jne
dec
outsl
outsl
imul
xchg
jg
jne
jne
inc
js
adc
pop
idiv
jae
data16
dec
popa
jae
dec
jae
imul
ljmp
imul
push
dec
imul
sub
jo
insb
insb
cmp
push
push
frstor
sti
jae
outsl
outsb
push
sbb
inc
fs
jae
outsl
jns
aaa
or
inc
lods
inc
inc
push
jb
xchg
jne
addr16
je
inc
jle
psadbw
mov
imul
inc
push
push
fdivp
insb
aas
insb
jae
arpl
or
jmp
in
or
push
je
je
jo
outsb
outsw
adc
popf
loopne
outsb
popa
pusha
inc
cvtpi2ps
or
or
addr16
add
jne
and
sti
sub
insb
pop
jo
push
sbb
fldt
fs
jo
sub
arpl
aas
dec
push
sbb
mov
sub
inc
jbe
and
mov
push
fs
inc
pop
mov
fcoms
ret
mov
jns
gs
xchg
inc
jae
lods
ret
push
inc
test
gs
jo
push
push
gs
int
aas
arpl
inc
fmuls
or
gs
pop
js
adc
and
lods
dec
sbb
ret
mov
inc
sub
je
inc
movsl
jb
dec
jo
outsb
adc
outsb
inc
ret
outsb
das
outsb
dec
fldt
mov
inc
js
push
mov
push
xchg
jb
sub
mov
cmpsl
jb
popa
insl
dec
mov
mov
out
push
jo
xorl
outsb
sbb
outsb
mov
jae
push
or
push
je
rcrl
cmp
nop
pop
adc
fcoms
insb
clc
or
inc
pop
in
stc
adc
push
clc
std
cwtl
out
ret
dec
sbb
outsl
push
pop
xor
and
jecxz
mov
xchg
popf
outsb
push
pop
mov
mov
bound
pop
or
sbb
mov
add
mov
es
ret
push
imul
aas
mov
shl
add
jnp
adc
inc
adc
dec
gs
push
jbe
mov
adcb
inc
inc
mov
dec
dec
imul
lods
push
sbb
sbb
or
jae
sub
sub
mov
mov
jne
and
insb
jae
ds
cmp
ss
mov
ljmp
bound
outsb
pop
mov
xor
xlat
test
sub
mov
xchg
xchg
lock
shlb
xor
mov
bound
inc
inc
adc
mov
and
insl
stos
mov
mov
dec
addr16
mov
cmp
clc
inc
jb
push
loopne
imul
and
int
xchg
inc
dec
pop
jne
lcall
insb
or
sahf
je
adc
pusha
fiadds
dec
outsl
jbe
add
fs
stos
inc
jmp
mov
daa
fs
xchg
data16
hlt
sbb
sbb
shlb
sub
mov
push
ja
divl
and
sbb
xchg
mov
pop
ja
push
ret
fs
js
xor
mov
mov
jns
dec
es
es
jbe
fadds
jo
mull
inc
sti
push
sub
dec
xchg
push
mov
lcall
incb
inc
fsubrl
xor
add
popf
gs
mov
data16
inc
jmp
mov
dec
push
insb
addr16
cmp
arpl
xchg
jnp
repnz
arpl
xchg
sub
andl
dec
jmp
xor
decl
jo
scas
inc
mov
jb
mov
outsb
inc
imul
or
push
addps
bound
jb
aam
sub
jns
adc
push
inc
std
sbb
add
or
dec
sub
lea
add
add
inc
outsb
popa
add
mov
fwait
fwait
xor
or
add
add
or
jbe
push
xlat
sbb
xor
pop
hlt
fistpl
push
add
and
xchg
and
mov
push
adc
add
test
ret
cs
cmp
out
add
jmp
mov
and
das
enter
insl
popa
push
outsl
or
lcall
sub
jbe
mov
or
add
mov
js,pn
je
and
jnp
mov
ja
xchg
xor
push
scas
rclb
adc
movsb
jmp
adc
jne
mov
push
add
push
pop
cmp
popf
nop
daa
dec
mov
and
and
add
clc
or
xchg
pusha
or
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
sub
add
clc
or
sbbb
add
or
add
add
or
or
add
cwtl
add
subb
add
rolb
xorb
add
add
sbbb
add
add
cmpb
add
pusha
add
cmpb
add
mov
add
mov
add
fadds
add
add
add
add
add
or
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
js
add
or
add
or
add
add
test
add
or
add
or
add
rolb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
and
roll
add
addb
addb
add
test
add
rolb
add
clc
add
addb
add
add
cmpb
add
add
jo
add
cwtl
add
adcb
add
call
add
add
cmp
add
pusha
add
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
push
add
js
add
mov
add
add
lock
add
sbb
add
inc
pop
add
push
push
add
nop
pop
add
mov
push
add
loopne
add
or
add
xor
add
pop
or
cmpb
sbb
add
test
add
rorb
add
add
add
or
add
add
rcl
add
add
add
add
add
rolb
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
adc
add
or
add
add
add
roll
add
add
add
add
add
add
sub
add
or
add
or
add
roll
add
add
add
add
add
roll
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
adc
add
or
add
add
mov
add
sldt
add
add
add
add
add
add
cwtl
roll
add
add
add
add
add
roll
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
or
add
push
add
add
or
add
or
add
add
call
add
add
add
add
add
hlt
roll
add
add
add
add
add
rolb
add
add
add
add
add
rolb
add
add
or
add
push
add
and
add
adc
add
or
add
pop
add
xor
add
or
add
or
add
pop
add
cmp
add
sldt
add
add
add
add
add
add
dec
rolb
add
add
add
add
add
rolb
add
add
add
add
add
rolb
add
add
add
add
add
pop
add
jl
add
adc
add
or
add
pop
add
nop
rolb
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
adc
add
or
add
add
rolb
add
add
add
add
add
rolb
add
add
or
add
or
add
rolb
add
add
add
add
add
or
add
rolb
add
add
add
add
add
or
addb
add
or
add
or
add
add
and
xchg
pop
add
push
add
add
add
add
loopne
add
or
add
xor
add
pop
or
addb
add
add
add
rorb
add
clc
or
addb
add
and
cmpb
add
add
jo
add
cwtl
or
orb
add
rorb
inc
pop
add
call
push
add
adc
add
cmp
add
pusha
or
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
push
add
js
add
mov
add
add
push
add
lock
add
sbb
add
inc
sldt
push
pop
add
nop
sldt
mov
pop
add
loopne
add
add
add
or
add
add
push
add
add
add
add
add
adc
add
or
add
or
add
add
adc
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
jo
add
adc
add
or
add
add
test
add
adc
add
or
add
add
adc
add
or
add
or
add
add
add
add
add
or
add
add
or
add
or
add
add
adc
add
or
add
or
add
add
adc
add
or
add
add
in
add
adc
add
or
add
xlat
add
adc
add
or
add
xlat
add
adc
add
or
add
or
add
xlat
add
sldt
add
add
add
add
add
or
add
adc
add
or
add
or
add
or
add
or
add
add
pop
xlat
add
adc
add
or
add
add
insb
xlat
add
adc
add
or
add
xlat
add
sldt
add
add
add
add
add
or
add
or
add
or
add
or
add
adc
add
or
add
push
add
mov
add
sldt
add
add
add
add
add
add
rcl
add
add
or
add
add
int3
xlat
add
or
add
or
add
xlat
add
or
add
or
add
xlat
add
or
add
add
add
add
push
add
hlt
xlat
add
adc
add
or
add
sldt
or
add
adc
add
or
add
sldt
sbb
add
or
add
add
add
add
add
sub
add
sldt
add
add
add
add
add
fadds
add
add
add
add
add
fadds
add
add
add
add
add
sldt
pop
fadds
add
add
add
add
add
sldt
fadds
add
add
add
add
and
add
add
add
or
add
adc
add
add
ljmp
add
add
add
add
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jae
je
jb
outsl
add
and
inc
add
jb
jo
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
arpl
imul
add
outsl
add
jb
and
push
add
outsl
add
add
add
insb
add
and
push
add
bound
and
inc
add
imul
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
adc
add
je
add
outsb
add
insb
add
popa
add
add
add
jne
jae
jae
and
dec
add
add
add
insb
add
push
add
jb
popa
add
push
add
sbb
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
insb
add
and
test
add
insl
add
add
add
jb
jns
and
xor
cmp
cmp
aaa
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsb
add
add
add
js
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jb
outsb
add
add
add
add
add
imul
and
dec
add
popa
add
je
and
dec
add
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
and
add
and
xor
and
add
add
or
add
add
and
add
add
sbb
add
add
and
add
add
add
mov
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
imul
insb
add
fs
insb
cs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jae
popa
insb
imul
imul
je
inc
jb
gs
imul
je
dec
push
add
inc
gs
gs
je
je
