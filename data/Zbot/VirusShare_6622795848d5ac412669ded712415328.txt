ljmp
pop
pop
push
xor
adcl
std
dec
sbb
or
popf
mov
pop
inc
sbb
xor
cmp
jmp
leave
inc
push
jne
add
stc
push
xchg
insl
push
sbb
insl
ret
pushl
scas
insl
addr16
shl
inc
xchg
idiv
inc
mov
dec
ds
cmpl
jge
sbbl
incl
pop
mov
loop
sbb
cltd
add
imul
loopne
jno
loopne
lcall
lret
loope
mov
sbb
rorl
mov
mov
jns
lret
flds
fnstenv
dec
jmp
outsl
sub
xor
add
mov
mov
andl
call
lock
mov
cmc
out
dec
jp
test
or
jle
add
cmp
and
sub
add
lret
shl
jecxz
push
cmp
cltd
mov
or
test
repnz
daa
call
stos
mov
add
loopne
mov
push
cmp
push
data16
aam
sbb
cmp
pop
fwait
test
push
data16
dec
ds
mov
js
test
push
out
jp
loop
adc
pop
lea
add
das
push
mov
mov
clc
sub
popa
pop
lds
mov
cmp
mov
push
lea
xor
cmp
call
push
out
mov
mov
push
and
mov
aas
push
xor
lods
jnp
lods
add
add
xchg
jmp
xor
push
inc
jp
ljmp
fldt
ret
mov
mov
decl
jg
add
xorl
add
xor
out
lcall
xor
pop
jnp
xor
mov
in
mov
mov
and
repnz
mov
ret
and
lods
repnz
sbb
addr16
call
cmp
test
out
pop
mov
mov
dec
cmp
cvttps2pi
dec
lods
mov
pop
test
je
outsb
lahf
frstor
sub
in
jbe
paddusw
out
xor
ret
into
dec
fiaddl
push
in
sub
pmaxub
add
je
dec
xor
test
ja
cmp
pusha
mov
mov
xor
push
push
jne
std
mov
lods
pop
loope
ss
mov
xor
and
dec
testl
and
push
or
mov
mov
in
jle
and
cmp
bound
mov
mov
xor
add
rcr
scas
adcl
push
sti
and
into
lods
cld
test
mov
pushl
fidivs
andb
sbb
mov
mov
push
jnp
bound
pop
mov
in
and
push
pop
shrl
leave
inc
inc
push
decl
pop
enter
imul
cwtl
xchg
outsb
out
sti
xor
push
xlat
aas
xchg
fs
lcall
popa
jp
sahf
out
sub
lcall
idivb
iret
lret
insl
mov
mov
jo
jae
repnz
mov
rorl
dec
adc
mov
incl
cmc
stos
and
in
push
sahf
pop
lods
and
ficompl
adc
aam
sub
xor
aad
lcall
test
stc
mov
in
sti
xor
es
pop
mov
cli
insl
fisttpl
push
cmpsb
decl
sub
pop
insl
fcmove
insb
idivb
shl
or
jno
pushf
mov
mov
mov
pushl
mov
mov
inc
pop
ss
mov
cmpsb
test
push
cmp
clc
ljmp
ja
xchg
add
mov
xchg
sbb
jg
aam
mov
decl
sub
in
adc
or
jp
inc
cmp
movsb
in
pop
shl
movsl
sub
data16
lcall
gs
test
cmp
mov
cmp
test
cltd
cwtl
loopne
pusha
stos
lahf
pushl
inc
adc
adc
cmp
mov
mov
add
fs
out
lahf
cmp
roll
sub
call
xor
inc
jo
push
testl
sub
inc
xor
inc
or
test
push
adc
subl
inc
add
adc
adc
nop
inc
add
add
xchg
sub
decl
pop
icebp
lods
outsb
mov
nop
mov
jp
dec
xchg
test
js
sbb
mov
movsb
clc
loopne
incl
test
push
add
ficoms
jle
jae
rcll
int
gs
decl
xchg
jnp
or
std
or
mov
cmp
lods
push
push
dec
sub
xor
lcall
subb
mov
in
jmp
mov
dec
inc
dec
pop
in
test
decl
movsb
lock
jbe
mov
push
imul
stos
es
in
movsb
inc
imul
mov
sbb
xchg
mov
popf
in
mov
loop
cli
stc
shll
dec
jbe
or
sbb
lcall
fisubrs
dec
scas
loop,pn
test
pop
xchg
dec
push
push
xorl
mov
cld
mov
jg
sub
movsb
ror
cltd
ljmp
mov
jne
repnz
or
cwtl
sbb
ljmp
mov
call
mov
inc
dec
cmp
int3
mov
sbb
aam
orps
incl
inc
in
push
sub
push
scas
fisubrs
int3
movsl
shlb
mov
push
jbe
incl
ret
rcr
mov
iret
add
jb
or
jecxz
scas
pushf
dec
push
lock
lcall
inc
outsl
inc
lea
pushf
stos
lret
int
setle
xchg
mov
cli
xchg
aam
xchg
call
loope
sub
mov
push
cltd
push
cmpsb
fwait
lret
adc
inc
cmp
inc
and
xor
pushl
mov
adc
push
sbb
sbb
adc
xor
ja
inc
insb
pop
mov
lcall
aam
aad
mov
jl
xchg
inc
aad
sbb
popw
push
and
decl
hlt
mov
movsl
sub
dec
cmc
pop
push
loopne
dec
idivl
cmp
cmp
cmp
mov
cltd
test
jmp
addl
xor
sti
mov
data16
mov
scas
mov
ljmp
test
cmpl
inc
bnd
dec
repnz
sub
addl
dec
and
cmp
lcall
addl
test
js
test
cmp
inc
cmp
jmp
call
mov
in
inc
mov
lahf
sbb
push
mov
mov
popf
or
jg
mov
and
loope
dec
pusha
xor
sub
mov
or
pop
pop
aas
push
hlt
xchg
adc
divb
lret
push
mov
xor
push
add
mov
push
xor
test
icebp
fidivrl
stos
mov
movsb
lods
push
out
test
pop
mov
dec
lock
xor
popa
pop
adc
inc
jno
mov
idivl
sub
lcall
and
xor
xchg
sub
sub
movsl
inc
push
cmc
out
cmpsb
jecxz
and
pushf
mov
jae
lret
mov
mov
lds
push
ror
mov
addr16
dec
shrl
rcl
jle
sarl
pop
mov
ja
lret
rcl
aad
cld
ljmp
mov
enter
loope
jne
aam
data16
sub
ljmp
ss
into
int3
mov
pop
xchg
sub
int
and
idivb
inc
repnz
and
ss
lods
push
mov
mov
dec
aaa
dec
repz
mov
jmp
mov
in
mov
add
aas
sti
cmpsb
mov
ss
inc
ret
int3
out
hlt
leave
lock
div
ds
pop
fs
mov
ja
and
mov
jg
fisttps
lret
lock
cld
push
ret
enter
sar
cmpsl
or
jns
sub
out
idivl
mov
into
rclb
hlt
pop
addr16
gs
sarl
pop
rcr
inc
enter
shl
push
ror
pop
cld
outsl
xor
lock
jbe
lock
pusha
cltd
mov
movsb
xchg
xor
mov
dec
outsb
loopne
ss
ret
stc
inc
lret
iret
pop
int
neg
shl
push
lret
pop
jbe
inc
icebp
pop
cmc
xchg
incl
push
daa
fdivl
pop
mov
sbbb
pop
pop
jnp
push
push
loope
pop
sbb
lods
push
int3
jmp
pop
leave
lds
out
out
inc
addr16
mov
adc
aad
push
fldt
clc
sub
iret
adc
adc
pop
and
sub
add
fstps
push
loope
inc
rol
adc
lcall
hlt
cmp
imull
int
gs
mov
mov
mov
or
hlt
xor
jnp
stc
ljmp
ret
aaa
adc
adc
lret
pusha
or
lds
mov
retw
idivb
and
enter
ja
in
xor
cmpsl
lods
and
imul
inc
push
mov
mov
stc
dec
es
idivl
dec
mov
pop
xor
int
loopne
xor
std
inc
pop
mov
push
aaa
xchg
cmpsb
loopne
int
shl
sti
xlat
mov
push
ret
sub
pop
adc
mov
mov
mov
ret
mov
mov
pop
int
cld
and
xor
test
xor
mov
leave
movsb
test
fsubs
sahf
sub
and
and
mov
cmc
cmp
dec
mov
jp
cmp
int
xchg
fidivs
pop
hlt
in
call
pushf
dec
or
push
mov
scas
pop
xchg
jge
sub
sbb
sub
xchg
hlt
push
pop
sub
call
ds
outsl
dec
sbb
and
mov
movsb
xchg
jmp
stos
pushl
scas
dec
xor
test
hlt
sub
xor
pushf
cmpb
scas
insb
mov
jg
pop
or
sub
mov
loopne
mov
lock
std
outsl
ljmp
push
es
jb
es
sub
mov
sub
xor
outsl
ljmp
mov
pop
aam
mov
mov
add
mov
mov
aaa
mov
loope
jns
jno
mov
movsl
repnz
mov
std
in
scas
cmp
xor
in
mov
dec
or
pushl
les
fisubl
mov
inc
insb
loopne
cmpsb
dec
pop
mov
pop
fdiv
adc
add
mov
sbb
inc
mov
jae
jmp
xlat
mov
sub
rorl
adc
mov
dec
cmc
sbb
xor
nop
sub
pop
sub
iret
dec
jg
jns
dec
or
dec
add
ss
mov
ljmp
pop
inc
ret
and
dec
jl
sub
mov
aad
mov
sub
push
inc
sar
add
push
lock
je
pop
outsl
mov
cmp
es
gs
icebp
sub
dec
repz
test
rorl
dec
movsb
mov
call
out
mov
into
jb
jl
xor
xor
xchg
loopne
mov
arpl
xor
mov
ret
das
test
cli
lods
and
cmp
sbb
cmp
jg
int
lock
repz
and
movsb
push
sub
pushf
sub
lock
cli
daa
pop
aam
mov
fwait
push
jmp
mov
mov
shlb
popf
mov
mov
out
enter
pop
push
repnz
sub
orb
popa
sahf
outsb
test
jbe
mov
jno
cs
add
inc
stos
mov
andl
push
add
into
jp
xor
filds
jl
imull
or
xor
into
sub
push
pushl
xor
cld
jmp
clc
pusha
lods
jp
out
jns
mov
std
jmp
pop
mov
sahf
jne
gs
xor
jae
jl
icebp
popa
sub
repnz
loopne
push
fidivl
gs
mov
mov
dec
xor
decl
jge
pop
out
mov
subb
cmpsl
jl
mov
ljmp
add
arpl
cs
insb
add
outsl
pop
arpl
jb
jo
dec
xor
dec
insb
dec
xor
push
popa
jae
data16
je
dec
ss
inc
push
dec
jp
jae
and
dec
jb
inc
dec
push
insb
outsb
outsl
adc
xor
jo
dec
push
xor
inc
inc
inc
jp
pushl
inc
insl
jne
xchg
dec
inc
xor
je
inc
dec
inc
push
inc
push
outsb
xor
std
pushl
xor
push
ja
ja
push
xor
push
jno
inc
xor
insb
push
outsl
imul
mov
cli
fbstp
popa
inc
inc
push
jo
push
outsb
ja
dec
xor
testb
mov
jns,pn
pop
push
insb
jae
jae
insb
push
jbe
call
sbb
pop
push
pop
jb
xor
insb
bound
xor
push
push
jb
push
je
dec
push
pushl
std
jmp
jno
push
xor
xor
fs
inc
jp
xor
push
push
js
in
orb
push
jne
insl
ja
push
jno
pop
insl
inc
lret
outsl
jg
jne
xor
fs
imul
push
inc
cmp
push
incl
dec
dec
inc
inc
dec
js
inc
jb
push
inc
xor
imul
dec
jo
bound
popa
outsl
push
aas
clc
fisttpl
stos
xor
js
push
shlb
dec
ss
pop
jo
push
fcomip
pushl
gs
push
ja
push
push
ss
insl
jns
inc
push
jne
xor
dec
div
dec
dec
push
inc
inc
push
inc
je
ret
jo
jbe
inc
js
cmp
pop
outsl
or
push
arpl
inc
jo
ret
icebp
aaa
sub
pop
jbe
arpl
push
push
push
pop
push
push
aad
testl
and
adc
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
fsubs
subb
aas
test
mov
ss
aaa
call
push
add
pop
adc
fwait
call
add
or
cmpsb
pop
add
adc
sbb
sbb
adc
add
pop
orl
mov
and
lret
add
push
addl
adc
jle
add
add
cli
nop
add
addl
add
addl
xchg
pop
mov
xor
or
jg
decl
xor
aas
gs
imul
orl
inc
or
fbld
aas
jne
jo
jo
add
xor
add
jp,pt
rolb
rolb
add
filds
inc
inc
roll
aas
arpl
dec
dec
xor
shrb
int
mov
or
mov
addl
arpl
repz
stos
xchg
push
addl
lcall
push
jno
cmp
int
shl
mov
cmp
sarl
popf
push
xor
fcmovnu
nop
fldl
repz
pop
int
add
das
pop
imul
pop
pusha
or
icebp
and
sbb
cmpsb
std
dec
roll
pop
sbb
into
ss
orb
xchg
pusha
add
xor
lcall
loopne
sbb
leave
sahf
cmpsb
jne
or
fists
push
sti
lahf
test
mov
roll
idiv
inc
nop
adc
popa
fwait
cmpsb
cmp
imul
mov
out
out
lcall
inc
addr16
xchg
cmpl
mov
or
fstl
mov
int
pop
xchg
fbstp
loope
rclb
add
aas
loopne
sbb
stos
sbb
cmpsl
imul
add
push
add
cmp
lcall
push
test
popw
jle
sahf
add
repnz
das
lods
pop
ja
jge
sbb
fsubrl
decl
int
cs
aam
gs
inc
fsubrp
imul
pusha
sbb
cmpsl
lcall
add
dec
pop
xor
das
sbb
loopne
jmp
sarl
mov
mov
jno
insb
int
or
fndisi(8087
cs
pop
xor
arpl
mov
insl
and
pop
push
adc
inc
push
out
pop
jecxz
fdivs
sub
pusha
add
aad
arpl
dec
mov
loopne
inc
ljmp
pushl
add
cmpsl
adcb
xchg
and
xchg
popa
add
insb
mov
push
inc
jmp
jo
idivl
fnstsw
out
push
iret
mov
daa
popa
sbb
daa
inc
jmp
xor
in
pop
cmc
push
push
xchg
xorb
fwait
xor
popa
dec
shrl
stos
cmp
in
mov
jmp
loopne
mov
xchg
fwait
cs
imul
xchg
dec
repz
add
mov
lods
pusha
fucomi
aad
addb
push
adc
bound
or
mov
and
jns
add
mov
lcall
xor
add
leave
test
repz
pop
jecxz
icebp
xlat
mov
fidivl
outsl
adc
mov
or
fisubrs
add
stc
out
ret
or
jbe
idivl
loopne
xor
dec
sbb
and
xor
xor
pop
out
add
addr16
stc
push
xor
sub
pop
jmp
or
cmpsl
jge
xor
mov
sbb
notl
sub
xlat
mov
pop
call
push
lock
mov
icebp
cmp
insl
setp
aad
sbb
iret
jmp
lcall
inc
xor
out
jg
fildl
mov
jle
es
mov
cmpsb
pusha
adcl
das
xor
add
lock
aaa
mov
sbb
neg
fidivl
xor
jo
jp
or
xor
sub
xchg
stos
add
fistps
xor
add
xor
xchg
test
cmpsb
pusha
push
jno
imul
xchg
sahf
lahf
test
pop
mov
pop
mov
cpuid
pushl
inc
xor
test
sub
icebp
js
cs
mov
add
push
adc
mov
das
jno
cld
add
sahf
push
in
inc
aam
adc
pop
jmp
sub
mov
push
lahf
push
in
sbb
int3
ss
jmp
add
xor
sahf
mov
lods
push
xchg
in
inc
inc
decl
adc
out
push
lea
push
data16
test
in
cwtl
out
push
mov
lret
pop
add
adc
jecxz
push
mov
decl
pop
scas
orl
push
clc
pop
and
sub
push
test
test
incl
lds
addr16
popa
jo
jo
jl
gs
nop
add
in
push
bound
je
gs
push
xor
arpl
js
adc
mov
pop
jb
jle
add
shlb
in
pop
mov
push
or
xchg
add
push
xchg
xchg
or
in
cmp
add
and
pushl
sub
inc
adc
add
sub
inc
inc
cltd
jo
xor
xchg
cltd
add
es
sub
jns
mov
sbb
imul
mov
push
sbb
sbb
add
jo
inc
add
jbe
pop
adc
dec
add
or
inc
push
inc
mov
repnz
adc
add
je
mov
je
jle
lcall
js
add
inc
push
xchg
jg
or
mov
jbe
sbb
add
add
pop
scas
clc
cmpsb
dec
mov
pop
add
lock
add
adcb
rorb
mov
fisubl
push
push
push
push
mov
jo
divb
faddp
rcl
fisubl
sbb
add
or
add
adc
les
push
push
das
dec
add
out
dec
dec
leave
sbb
mov
lret
lods
lret
int
pop
push
pop
cmpsb
imul
add
into
sbb
ja
lods
stc
jo
rclb
adc
lock
sar
loopne
sbb
add
add
mov
jo
and
lods
loopne
pop
aam
or
add
adc
push
adc
icebp
xchg
adc
sub
popa
mov
add
sub
fists
mov
pop
adc
lret
push
bound
adc
rorb
add
and
cmpsb
mov
mov
xor
ss
ljmp
and
and
sub
push
add
enter
jbe
js
jp
jge
jg
mov
pusha
arpl
gs
dec
jno
add
add
outsl
incl
std
mov
outsl
adc
add
add
out
nopl
sti
fwait
mov
adc
adc
push
sbb
inc
sub
sbb
add
jge
or
decl
popa
add
add
add
lock
and
mov
pop
push
inc
out
mov
sti
sbb
or
add
pop
icebp
jl
push
stos
adc
mov
jne
xchg
je
jae
lods
pop
xchg
ss
push
xor
push
clc
sub
jo
scas
out
ds
rcl
imul
in
and
pop
hlt
scas
ljmp
xchg
sbb
pushf
cmc
mov
mov
jg
aaa
jae
lods
icebp
imul
stc
repz
push
push
pop
add
cmp
push
out
dec
jb
add
sub
rcrl
mov
dec
in
mov
loop
loope
or
std
add
cmp
add
sbb
mov
mov
adc
push
sub
lcall
cmpsb
add
cmp
sbb
inc
imul
scas
call
sahf
icebp
fisubl
adc
incl
jns
ljmp
or
push
jb
and
aam
or
cmp
add
xchg
enter
imul
out
and
lcall
incb
in
cmp
fsts
jmp
xchg
cwtl
lea
jae
cmpsl
mov
testb
adc
lods
rol
push
mov
ja
insb
icebp
pop
mov
mov
call
add
fimuls
push
addl
test
loopne
jecxz
imul
loop
sbbl
add
add
push
mov
insl
stos
pop
es
xchg
rolb
rolb
or
dec
adc
add
stos
rorl
add
add
add
cld
notb
test
adc
add
add
mov
sub
add
in
inc
lods
dec
mov
cmp
cmp
mov
sar
cs
pop
rcl
push
jg
dec
push
in
rorb
or
and
xor
push
scas
xor
add
sbb
out
notl
or
leave
les
cmpsl
add
cmp
push
sub
fisubl
pusha
mov
adc
adc
shll
out
divl
rorb
push
jecxz
mov
or
popa
hlt
xchg
xor
cwtl
sbb
addr16
xchg
mov
test
shrb
cmpsb
inc
rcrl
loope
cli
out
mov
imul
mov
add
in
add
rcll
jo
lock
dec
inc
sbb
mov
rol
add
sbb
xchg
jmp
pop
gs
loopne
dec
jg
mov
jno
push
pop
cmpsb
jns
faddl
sbb
repz
ret
int
or
mov
dec
in
inc
ljmp
loope
ret
into
icebp
adc
adc
stos
out
out
cmp
out
inc
mov
add
add
adc
push
add
loop
add
mov
pop
in
in
mov
test
sub
and
lea
add
or
mul
or
dec
or
inc
loopne
pop
loop
push
mov
push
mov
in
push
add
std
pop
add
stc
out
or
pop
adc
cmp
hlt
add
add
mov
lcall
mov
push
mov
xchg
pop
mov
sbb
in
adc
inc
xor
pop
xchg
lods
push
and
cmp
shrd
notw
sbb
fsub
push
int
push
lcall
or
ljmp
scas
imul
add
test
lcall
xor
add
sbb
out
fwait
aas
outsl
jl,pn
jmp
stc
cmp
add
loopne
push
or
aad
adc
xchg
mov
and
or
jne
push
out
shlb
push
cld
fcom
push
daa
mov
jl
pop
sub
xor
add
pop
add
stos
addb
mov
xchg
cmp
fiaddl
pop
sub
mov
jns
mov
int3
or
cmp
pop
add
or
aaa
jg
out
das
xchg
sbb
loopne
cltd
mov
push
xchg
mov
sbb
add
jge
xor
inc
imull
fwait
dec
into
loopne
pop
enter
loopne
and
xchg
cli
mov
xlat
loopne
rcll
clc
or
pusha
add
pop
cmp
pop
pop
or
insb
push
or
jp
ret
mov
mov
int
addb
sbb
loopne
popa
dec
jnp
mov
pop
jne
or
sub
loopne
cmp
aas
xchg
mov
inc
push
add
jae
add
dec
pop
or
pop
xor
loop
push
or
or
inc
mov
pop
add
adc
nop
xchg
add
int
icebp
fdivrp
jns
lret
loopne
lds
loopne
mov
mov
es
dec
adc
push
cmpsb
mov
adc
adc
xor
scas
and
adc
loope
arpl
in
push
cld
ja
std
jo
mov
cltd
dec
int
sub
ja
fnstsw
cmp
test
adc
xchg
stos
lahf
loopne
imul
outsb
mov
add
shl
ds
and
and
mov
push
xor
jo
and
jo
add
push
icebp
or
hlt
pop
push
lock
or
add
rclb
stos
jno
mov
sbb
lock
data16
mov
push
call
int
stos
imul
cs
push
lahf
fstpt
pop
pusha
lock
jo
repnz
testb
or
ss
lods
loop
lock
add
int
addr16
or
jo
test
stos
mov
xor
sahf
add
lahf
lock
mov
sub
jo
sub
jo
and
sti
adc
stos
or
jnp
xor
mov
mov
rcll
test
mov
lock
cltd
scas
jo
test
adc
xchg
dec
mov
sar
or
adc
xchg
arpl
push
test
scas
mov
jecxz
xchg
fucomp
sbb
cmp
and
movsl
push
orps
cmp
std
xor
or
scas
sub
or
xchg
loop
add
jno
in
incb
push
sbb
xor
mov
icebp
sbb
jnp
imul
insl
jmp
popa
sbb
cmpsb
loope
pop
jne
enter
xchg
lock
lret
adc
sub
std
push
int3
outsb
aaa
ja
xchg
jo
icebp
mov
fcmovb
test
or
sbb
aaa
test
js
loop
xor
sbb
idivb
ss
and
insl
addl
mov
jno
adc
jp
hlt
adc
mov
mov
push
call
push
and
jnp
ss
adc
adc
adc
int
cld
in
mov
dec
and
adc
adc
mov
adc
adc
adc
mov
mov
adc
out
cmpsl
adc
cmpsb
adc
test
jo
stos
adc
adc
adc
cld
int
adc
outsl
scas
adc
rcll
inc
rclb
adc
aam
int
sub
adc
adc
adc
fstl
or
ror
cld
adc
adc
adc
rclb
adc
adc
adc
dec
xchg
push
mov
or
cld
int
adc
adc
icebp
adc
adc
hlt
adc
notl
push
adc
int
cld
int
sbb
adc
adc
adc
adc
adc
adc
loopne
int
cld
adc
jecxz
pop
in
inc
adc
adc
adc
ljmp
out
adc
out
adc
mov
aaa
in
xor
neg
adc
adc
inc
andb
xor
test
and
adc
aam
sbb
xlat
adc
push
adc
sar
js,pn
push
or
adc
adc
sbb
sbb
insb
clc
cld
insl
adc
enter
adc
adc
mov
sub
repz
scas
mov
inc
adc
adc
iret
xchg
ja
adc
adc
adc
fwait
iret
xchg
xor
jbe
pop
adc
xchg
out
adc
adc
adc
inc
fstl
pop
adc
adc
out
fdivrs
adc
ret
adc
adc
out
dec
adc
iret
adc
adc
adc
adc
std
adc
adc
adc
aaa
jg
jl
push
adc
adc
adc
adc
adc
jg
adc
adc
adc
adc
and
adc
fwait
mov
adc
and
mov
mov
fwait
mov
mov
repnz
and
fwait
shlb
adc
and
stc
fwait
mov
adc
and
mov
mov
adc
movsb
lods
adc
test
adc
fwait
mov
adc
rcl
adc
xlat
aad
stc
fwait
mov
adc
and
adc
and
adc
mov
ficoml
and
adc
and
adc
iret
rcll
ret
adc
repz
cmc
and
adc
stc
and
adc
and
adc
outsl
lret
adc
cld
int
and
adc
and
out
clc
out
adc
stos
adc
pop
scas
adc
pop
rclb
adc
out
rcll
pop
rclb
aad
xor
xlat
adc
pop
adc
outsl
out
fsts
pop
fcoms
fistl
pop
ficoml
fstl
out
adc
fists
pop
ficoms
rcll
rclb
out
inc
adc
pop
ret
lds
adc
pop
adc
outsl
out
leave
adc
pop
enter
adc
pop
icebp
adc
lock
pop
out
out
adc
repnz
pop
cmc
adc
hlt
adc
pop
notl
out
notb
pop
stc
adc
clc
adc
pop
sti
adc
cli
adc
pop
std
adc
outsl
out
cld
adc
pop
call
adc
pop
loope
inc
loopne
inc
pop
lods
mov
inc
mov
inc
pop
pop
inc
add
push
bound
cs
inc
int
and
pop
dec
mov
pop
dec
mov
int
dec
mov
pop
dec
mov
pop
pop
add
mov
imulb
mov
adc
adc
out
cmpsb
pop
push
adc
pop
sbb
pop
sbb
lods
pop
sbb
scas
pop
pop
scas
pop
push
adc
out
rclb
and
pop
push
adc
pop
and
xlat
pop
push
icebp
push
outsb
pop
and
adc
mov
sub
pop
sub
sub
pop
sub
pop
sub
ficoms
das
adc
pop
pop
adc
cld
int
cld
pop
push
adc
pop
push
adc
pop
and
cld
int
enter
lret
pop
es
adc
pop
pop
insb
outsb
ss
pop
push
add
pop
pop
aas
add
add
mov
aad
test
pop
aaa
jo
inc
scas
mov
jp
dec
loop
aaa
jg
mov
adcb
je
pop
or
pop
or
aaa
jg
adc
pop
or
pop
unpckhps
pop
push
jl
aaa
jg
pop
ds
pop
xor
pop
xor
int
out
add
pop
cmp
dec
pop
cmp
pop
cmp
pop
cmp
adc
in
outsl
mov
cltd
adc
fwait
adc
popf
adc
int
mov
push
sahf
mov
push
add
xor
push
mov
aas
mov
push
mov
adc
push
test
push
fcoml
test
ficoml
stos
push
mov
adc
push
adcb
push
adcl
push
adcb
push
test
aam
call
test
xlat
push
xchg
push
xchg
fsts
mov
fcoms
mov
fistl
mov
ficoml
mov
fstl
lea
faddl
mov
fists
adc
push
mov
rcll
adc
push
mov
ret
push
lds
add
les
int3
push
lret
mov
leave
pop
cmp
push
mov
adc
push
mov
adc
push
cmc
push
movsl
adc
incl
notl
fdiv
push
cmpsb
adc
push
test
add
sti
push
hlt
cli
push
repnz
push
pop
subb
cld
push
lods
jb
scas
adc
push
clc
loope
incl
adc
push
rclb
loop
rcll
in
aad
in
aam
out
xlat
adc
fcomip
call
adc
push
fsts
call
sbb
xor
fidivs
pushl
adc
sbb
xor
sbb
xor
mov
sbb
xor
sbb
lods
sbb
scas
sbb
sbb
xor
call
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
ficomps
jo
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
in
pushl
sbb
xor
sbb
out
sbb
xor
icebp
sbb
xor
sbb
xor
cmc
sbb
stc
sbb
clc
sbb
in
lcall
xor
cli
sbb
xor
ss
sbb
xor
sbb
xor
sbb
loop
lods
xor
sbb
out
and
das
clc
sbb
mov
adc
mov
adc
mov
adc
xor
jg
mov
and
sbb
xor
sbb
xor
sbb
call
xor
sbb
sbb
mov
sbb
movsl
sbb
movsb
sbb
in
decl
cmpsl
sbb
cmpsb
sbb
test
add
lods
sbb
xor
jg
sbb
xor
sbb
aad
dec
xor
sbb
sbb
fcomps
xor
fldt
lcall
shlb
sbb
xor
sbb
xor
sbb
xor
sbb
xor
push
lcall
wrmsr
sbb
xor
sbb
xor
push
ss
xor
sbb
xor
sbb
lcall
sbb
sbb
sbb
sti
ljmp
push
test
xor
sbb
xor
cmpsb
sub
cli
sahf
aaa
std
sbb
cld
sbb
lcall
je
loope
ss
incl
sbb
xor
push
ss
push
ss
jle
out
jl
out
push
aaa
decl
sti
jmp
sbb
aaa
jmp
add
ljmp
sbb
xor
pop
icebp
fbld
data16
add
sbb
scas
mov
sbb
xor
sbb
sbb
add
fistpl
or
fstpl
test
fistps
mov
ficomps
mov
sbb
sbb
outsl
cmp
push
sbb
sbb
mov
icebp
sbb
rclb
ret
adc
sbb
lds
sbb
call
sbb
leave
adc
sbb
lret
adc
sbb
int
cld
sbb
iret
call
sbb
icebp
adc
sbb
repz
sbb
cmc
adc
sbb
idiv
call
sbb
stc
adc
sbb
sti
adc
sbb
pop
mov
adc
mov
adc
mov
adc
pop
mov
adc
mov
pop
pop
mov
push
pop
mov
sbb
pop
mov
in
lcall
pop
mov
sbb
pop
mov
push
pop
mov
sbb
pop
mov
jmp
sbb
pop
movsb
sbb
pop
cmpsl
sbb
pop
cmpsb
sbb
pop
test
sbb
pop
stos
sbb
pop
ljmp
sbb
pop
lods
sbb
pop
scas
sbb
pop
scas
sbb
pop
rcrl
pop
rcrb
pop
rcrl
pop
ljmp
cli
rcrb
pop
aad
pop
aam
xor
xlat
sbb
pop
sbb
pop
fstps
pop
fcomps
lcall
fistpl
pop
ficompl
pop
fstpl
pop
fistps
pop
ficomps
pop
rcrl
rcrb
lcall
ret
sbb
pop
ret
pop
lds
pop
sbb
pop
sbb
pop
leave
sbb
pop
enter
lcall
lret
sbb
pop
iret
sbb
pop
into
sbb
pop
icebp
sbb
pop
lock
pop
repz
pop
repnz
pop
cmc
sbb
lcall
hlt
sbb
pop
negl
pop
negb
pop
stc
sbb
pop
clc
sbb
pop
sti
sbb
pop
cli
sbb
pop
std
sbb
lcall
cld
sbb
pop
loope
inc
pop
loopne
inc
pop
jecxz
inc
pop
loop
inc
pop
in
inc
pop
in
inc
pop
out
inc
lcall
out
inc
pop
jmp
sbb
pop
mov
and
mov
and
mov
and
mov
and
jmp
mov
daa
and
pop
sub
mov
pop
sub
mov
pop
sub
jmp
mov
pop
and
pop
push
and
pop
push
and
pop
push
jmp
cmpsl
pop
push
and
pop
pop
and
pop
pop
and
pop
pop
and
jmp
scas
pop
pop
and
pop
inc
and
pop
inc
and
pop
inc
and
pop
inc
and
pop
inc
and
pop
inc
jmp
xlat
pop
inc
and
pop
inc
and
pop
dec
and
pop
dec
and
pop
dec
and
pop
dec
and
pop
dec
and
pop
dec
jmp
fistps
dec
and
pop
dec
and
pop
jno
rcrb
and
pop
jae
ret
and
add
fwait
int
adc
adc
adc
adc
adc
data16
insb
adc
adc
adc
adc
insb
ss
int
iret
adc
adc
adc
adc
int
mov
adc
adc
adc
adc
adc
insb
ss
notb
stc
adc
adc
adc
dec
data16
std
adc
adc
adc
pop
jl
loope
pusha
and
jmp
pop
imul
loop
nop
and
pop
xchg
and
pop
xchg
and
pop
pushf
and
pop
lahf
and
add
push
lods
and
call
adc
cs
mov
mov
lods
add
scas
add
mov
repz
roll
mov
mov
mov
repz
mov
mov
and
cmp
sbb
add
repz
sbb
sbb
iret
repz
or
out
aas
adc
out
inc
xor
jns
out
inc
ss
cmp
xor
inc
xor
jns
jnp
sahf
cmp
cmp
sahf
cmp
cmp
push
jp,pt
sahf
and
xchg
dec
xor
repz
push
popa
orl
cmpb
cmp
test
xor
xchg
aaa
mov
repz
mov
lea
mov
repz
push
xor
jns
push
cmp
aas
mov
jns
jp
jge
repz
out
mov
sahf
out
dec
mov
mov
jns
jb
jne
out
sahf
out
cmpsl
ja
jbe
out
sahf
test
out
out
in
in
rcl
rcrl
gs
repz
fs
aam
cmp
repz
imul
iret
fldcw
push
insl
cmp
repz
insb
repz
rep
fists
cmp
rcll
iret
repz
xchg
lds
repz
lock
mov
stc
cmp
repnz
mov
clc
sahf
out
sahf
mov
mov
dec
std
dec
repz
dec
jbe
dec
lods
dec
dec
sbb
out
mov
jmp
jns
push
sbb
xor
call
sub
sub
mov
cwtl
aas
int3
into
push
inc
sub
decl
and
jns
rcrl
or
xchg
xchg
push
cmc
outsl
sub
movb
jmp
jg
jo
adc
sbb
subl
das
lret
gs
int3
lods
ljmp
jp
fcompl
xor
push
xchg
out
jae
fildl
mov
ljmp
xchg
insl
xchg
cld
mov
test
ror
lcall
rolb
jo
and
sub
mov
loope
dec
shlb
cmpsb
pop
mov
cmpsl
shll
or
sbb
sbb
lcall
pop
ljmp
cmp
add
lea
xchg
rcr
sub
cmp
adc
pushl
lods
adc
pop
push
call
jo
jns
insl
fs
add
ljmp
ljmp
outsb
push
sbbl
mov
jg
jns
in
add
data16
incl
mov
pop
popf
and
lcall
sbbb
sub
mov
or
scas
and
insl
and
and
and
and
call
and
les
push
pop
andb
or
shr
ret
add
lret
inc
je
xchg
push
insb
movl
and
push
mov
scas
xchg
inc
arpl
aad
push
into
lds
addr16
jge
and
xchg
and
clc
jmp
lea
mov
mov
adc
ss
iret
scas
xor
sbb
push
xorb
idiv
jo
dec
leave
pop
and
cmp
push
and
dec
and
fimuls
mov
push
cmp
addr16
aaa
lahf
clc
or
enter
frstor
cmc
and
in
and
add
scas
icebp
jae
mulb
leave
push
outsb
sub
loopne
push
jbe
into
add
call
xchg
and
and
and
and
and
and
and
and
and
inc
hlt
test
aas
mov
call
pusha
ret
pushf
repnz
daa
push
daa
pop
daa
inc
daa
dec
daa
jne
movsl
daa
test
call
cmp
push
sub
inc
movsb
xor
mov
adc
shrl
add
add
pop
arpl
jmp
inc
and
add
lret
mov
mov
dec
mov
in
mov
movsl
sub
sub
sub
sub
pop
int3
inc
dec
scas
call
or
mov
sub
or
mov
cmpsl
xlat
cs
lcall
cs
cs
lret
daa
lock
scas
mov
inc
mov
incl
push
xchg
ljmp
and
and
dec
and
and
pop
and
sbb
std
ljmp
or
stc
xlat
jl
stos
adc
popa
sbb
sub
dec
and
and
and
and
mov
xchg
and
and
xor
sbb
mov
fisubs
in
mov
flds
xor
scas
les
daa
sbb
add
or
push
daa
das
sub
jmp
mov
mov
sarb
sahf
mov
ljmp
out
xor
mov
shll
inc
sub
subb
sub
jb
fldl
fs
cmpsb
std
adc
sub
imul
add
addr16
sub
sub
repz
sub
sub
sub
dec
sub
jmp
out
dec
shll
gs
pop
sahf
jle
xchg
sub
and
icebp
sarl
cmp
sub
adc
lcall
sub
sub
sub
sub
sub
sub
fwait
mov
pop
jecxz
cmp
jge
sbb
sahf
aas
cmp
movsb
jge
sbb
comiss
mov
mov
mov
mov
js
xor
mov
inc
iret
push
mov
lds
mov
jge
push
and
lcall
jmp
and
push
push
mov
jnp
cmc
lret
mov
stos
gs
inc
sti
push
sub
sub
sub
sub
sub
sub
ja
xchg
sub
push
out
or
insb
lcall
jg
adc
push
jae
imul
dec
jb
xor
outsl
sub
sub
mov
repnz
push
jno
lret
call
out
les
cmp
pushf
and
jmp
cs
mov
fcmovnbe
xchg
call
mov
movsl
fistps
in
mov
mov
cmp
aaa
popa
mov
call
jno
mov
out
cmp
scas
in
inc
or
loope
incb
inc
pushl
cmp
adc
add
or
loope
inc
clc
or
aaa
cmp
cmp
cmp
push
inc
sub
sub
ret
and
out
test
dec
mov
push
outsb
xchg
nop
xchg
xchg
xchg
call
lcall
addl
mov
mov
pushl
mov
mov
movsb
cmpsl
cmpsb
test
lods
scas
scas
rcl
rcl
aad
ljmp
fcomp
fcmovu
faddp
rol
cmp
lret
iret
into
push
lock
hlt
div
stc
clc
sti
cli
std
cld
loope
jecxz
in
out
jmp
in
out
out
adc
add
pusha
mov
or
add
add
adc
call
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
add
inc
inc
inc
inc
inc
inc
add
dec
or
xor
adc
adc
xor
add
add
ret
xor
add
or
xor
and
and
xor
add
add
ret
xor
add
jg
push
cmovo
das
cmp
add
add
fcmovnu
incl
adc
out
adc
pop
and
mov
sbb
and
decl
add
jo
jmp
lea
sbbl
clts
or
mov
pop
ret
or
fisttps
or
xchg
adc
or
add
cmp
fildl
mov
aas
notb
add
adc
pop
subb
rolb
or
jb
loop
das
jae
or
je
aas
jne
jo
push
pop
mov
arpl
gs
add
jne
push
js
add
jge
sbb
mov
call
or
or
bound
arpl
rclb
loopne
xchg
or
mov
xchg
push
cmpb
or
lcall
add
cmpsl
shlb
inc
inc
inc
adc
and
and
push
inc
pop
inc
add
and
push
add
mov
and
lcall
add
add
and
inc
xor
jns
add
jo
or
xor
ret
mov
orl
pop
xor
ja
add
add
adc
rclb
rolb
add
mov
add
add
loopne
mov
inc
add
xor
sub
push
imul
push
cmp
adc
mov
or
das
clc
sub
pop
add
daa
push
mov
pop
cld
in
mov
or
add
and
jne
add
add
sbbb
mov
dec
push
add
mov
pusha
add
inc
shrl
push
arpl
mov
inc
and
pop
js
push
fsubrl
add
jg
mov
or
stos
add
cmp
cmp
cmp
pusha
jns
adc
popa
sub
data16
ljmp
incb
jb
or
ds
call
jbe
jge
and
adc
cld
add
jae
popa
push
int
push
push
inc
and
clc
or
sbb
or
loopne
jge
popa
or
or
sbb
add
popa
add
sub
inc
push
push
xor
and
push
adc
xor
and
loope
fidivrl
mov
jg
or
ja
jo
outsb
mov
jo
xchg
mov
incl
mov
sbbb
mov
add
cltd
sahf
mov
nop
mov
jecxz
adc
mov
adc
movsb
or
ljmp
push
pop
dec
push
pop
dec
outsl
push
push
add
dec
loopne
cmp
lcall
or
and
push
movlps
add
add
rcl
ret
out
add
in
cli
ljmp
cli
clc
in
loopne
incl
std
stc
ljmp
in
out
rolb
lret
and
lods
mov
loopne
clc
mov
xor
xor
outsb
or
sub
or
cmp
jg
fisttps
cmp
pop
xor
adc
mov
in
add
out
stc
iret
sarl
add
stc
out
in
incb
loope
xchg
mov
mov
mov
adc
cld
es
stos
cmp
jne
in
mov
clc
es
mul
stos
in
in
scas
cmc
out
aas
cli
fucomip
in
mov
mov
cmp
adc
das
and
jecxz
cmc
and
into
cltd
or
mov
rcr
mov
lcall
sub
xchg
lahf
sahf
mov
fdivrp
out
bnd
aam
cmp
ljmp
push
imul
inc
pop
inc
pop
dec
pop
add
incl
dec
inc
push
push
add
push
or
cmp
jb
dec
jl
fs
jp
popa
pop
fcmovbe
int3
enter
test
ror
pushl
std
nop
lock
out
mov
cmc
jmp
jecxz
add
in
scas
in
mov
mov
gs
addr16
add
add
adcb
orl
cmp
jbe
je
insl
adc
jb
mov
and
sub
and
xchg
cltd
add
test
mov
sbbb
xchg
test
xchg
xchg
xchg
stos
stos
in
das
es
mov
mov
xor
sbb
popa
cld
mov
push
adc
pop
add
add
or
dec
mov
push
push
mov
cli
mov
push
jp
je
xor
fs
mov
clc
jg
and
outsb
ja
pop
pop
pop
insb
pop
pop
sbb
push
sbb
adc
xchg
ljmp
test
mov
stos
push
dec
dec
add
push
dec
xor
lock
adc
pop
sbb
and
insl
fcomip
and
push
push
cwtl
cmp
pop
sbb
sbb
or
mov
pushl
push
fisubrl
pop
dec
add
add
repz
add
or
jle
adc
inc
or
add
add
dec
adc
push
sbb
push
aaa
cld
lcall
add
mov
divb
movsb
stos
data16
out
scas
mov
cmpsb
mov
scas
subb
aad
add
das
clc
push
adc
push
add
pop
pop
adc
add
add
push
inc
pop
or
xchg
jge
jle
or
pop
or
pop
std
pop
clc
cmc
out
add
out
icebp
repz
mov
in
pushl
in
icebp
mul
add
scas
jno
loope
into
test
movb
mov
rol
or
mov
fs
push
pop
inc
pop
rcrb
jg
jg
dec
push
inc
jo
inc
inc
pop
dec
add
cmc
jb
fsub
in
loope
out
cld
mov
mov
add
dec
addr16
pop
pop
pop
lods
lcall
pop
pop
push
pop
inc
inc
pop
jb
dec
pop
rolb
sbb
das
sub
or
or
ds
inc
cwtl
lahf
mov
addb
adc
add
inc
aaa
test
jg
test
mov
lahf
or
dec
pop
dec
mov
dec
dec
push
push
mov
pop
mov
pushl
cld
adc
mov
mov
rcl
ret
aad
ret
inc
add
fcomp
icebp
enter
mov
stos
movsb
bound
clc
mov
push
mov
fs
pop
test
dec
inc
inc
lcall
inc
and
inc
push
mov
ljmp
hlt
jecxz
loope
dec
outsl
mov
cmp
sub
sbb
sti
mov
mov
jo
test
clc
fs
push
xchg
jg
mov
mov
subb
mov
mov
mov
xchg
rorl
icebp
add
xchg
xchg
lods
lcall
push
adc
adc
pushl
or
sbb
add
int
out
rcl
ret
rorl
dec
add
enter
rolb
fcmovnbe
fs
jns
push
sub
jg
push
jp
imul
xchg
ljmp
shr
in
cmp
or
or
repnz
adcb
sbb
add
xchg
shrb
mov
add
lock
lock
out
and
or
in
sub
xor
aaa
add
cmp
cmp
cli
in
loope
in
nop
dec
dec
pop
pop
pop
ja
or
outsl
ss
adc
adc
or
dec
push
sbb
inc
push
dec
mov
cmp
cmp
mov
cltd
test
xchg
xchg
or
nop
loopne
sbb
mov
adc
addb
orb
lahf
mov
loopne
movsb
mov
cmpl
scas
hlt
out
out
mov
addb
fwait
mov
mov
clc
xchg
add
push
push
repnz
pop
jle
push
xchg
or
or
push
adc
inc
add
pop
dec
push
in
cli
cmp
jno
subb
jo
jg
neg
lock
aaa
and
and
popa
je
pop
inc
add
jbe
xor
and
inc
sub
dec
jle
inc
dec
xchg
push
dec
pop
add
xchg
movsb
adc
stos
scas
mov
jno
daa
adc
cld
ljmp
cltd
mov
pop
inc
jl
ret
inc
push
rolb
adc
pop
dec
jb
std
incl
mov
sub
add
push
inc
popa
and
mov
mov
das
clc
call
xor
push
push
dec
add
int3
rcr
enter
lret
lock
cld
mov
xchg
cmc
shr
loop
out
in
cmp
fcomi
shl
adc
lock
inc
xor
inc
xor
ja
jle
lahf
push
inc
je
pop
push
sub
pop
pop
pop
pop
push
pop
add
dec
rcrb
or
pop
xor
pop
adc
push
push
incl
lock
inc
or
or
inc
mov
sub
sub
fdiv
jno
cs
popa
xor
lods
ja
fwait
jge
pop
sbb
xor
adc
adc
add
sub
call
inc
push
dec
add
dec
push
add
sbb
lcall
mov
mov
and
mov
xchg
cmpsb
test
mov
movsb
jg
inc
pop
mov
lods
outsb
stos
mov
mov
mov
clc
xchg
push
dec
call
pop
add
stc
inc
call
stos
mov
cli
repnz
into
fdivr
lcall
ret
xor
dec
dec
push
push
mov
cltd
add
mov
hlt
loop
mov
mov
lods
cmpl
mov
pushl
mov
mov
movsb
mov
test
test
dec
jo
scas
xchg
test
push
ret
clc
add
enter
dec
lods
mov
jecxz
pop
mov
lods
mov
loope
loop
ljmp
insb
push
push
dec
dec
or
sbbl
test
xlat
loop
add
in
stc
std
mov
aaa
or
dec
pop
inc
xor
imul
int3
into
int
sbbb
push
adc
int
incb
cli
out
cli
in
jmp
leave
rcl
ror
mov
shl
outsl
clc
dec
leave
loop
lret
add
xor
push
adc
sbb
or
jb
insl
fucomp
clc
ljmp
add
rcr
or
fucom
mov
xchg
mov
lea
add
lock
mov
aad
aad
jecxz
cli
mov
outsl
jns
mov
addb
ja
jne
imul
data16
imul
inc
xor
lods
rolb
pop
xor
add
mov
adc
cmc
idiv
std
out
std
out
push
add
orb
cmp
cmp
icebp
sbb
push
sbb
xor
adc
sub
or
add
adc
or
das
clc
dec
lods
push
ficoml
stos
lods
mov
and
inc
cld
cli
ret
xchg
in
sub
ljmp
jl
xchg
fwait
pushf
mov
popf
add
push
push
xor
sbb
scas
mov
arpl
out
loope
or
rcr
mov
mov
cld
test
mov
jne
pushf
mov
lods
mov
pushl
std
jne
bound
jne
inc
jle
pop
dec
add
jno
adc
pushf
or
insl
scas
clc
inc
inc
push
inc
mov
int3
or
jo
push
push
aad
mov
sbb
inc
inc
push
push
sbb
inc
dec
and
adc
push
jne
rolb
xorb
das
xchg
js
and
sub
and
outsl
lods
xor
es
clc
decl
insb
push
sub
and
adc
adc
jne
add
add
cld
scas
pushl
mov
mov
jo
movsb
adc
dec
dec
inc
pop
add
sub
sti
cld
adc
push
shll
test
icebp
mov
movsl
fstp
add
leave
int3
adc
pop
loopne
rclb
clc
out
cwtl
icebp
add
or
dec
xchg
pop
ret
into
cmc
ljmp
enter
fidivrs
jno
mov
repnz
daa
sub
fistpll
in
or
ja
add
add
xor
or
or
mov
aad
repnz
add
mov
mov
scas
lahf
fwait
sarb
cli
out
cmpsl
mov
mov
mov
repnz
in
cld
decl
xchg
les
ret
ret
into
flds
lods
add
icebp
mov
jo
adc
movhps
dec
pushf
incb
mov
push
pop
jge
ret
sbb
inc
pop
pop
lcall
sbb
data16
add
iret
in
out
ljmp
add
out
in
pusha
fcompl
push
mov
dec
pusha
adc
pop
push
xor
or
aaa
and
and
adc
and
jo
adcb
test
enter
xchg
add
lds
add
pop
pop
push
es
inc
adc
push
push
pushl
mov
cmpsb
outsb
cmp
or
out
add
ffree
arpl
cld
ror
push
lds
arpl
add
and
call
loopne
jecxz
hlt
icebp
mov
movsb
adc
fcmovnbe
aam
data16
daa
aaa
and
jg
pop
pop
dec
sub
es
xor
mov
and
add
sub
ds
decl
lock
ss
sub
das
pushf
es
pushf
test
pop
addb
nop
xchg
adcl
mov
cld
jg
dec
push
push
push
add
jb
inc
inc
push
dec
inc
adc
adc
add
dec
loop
inc
push
pushf
push
sub
sub
xor
add
call
es
push
sub
cmp
and
mov
aaa
outsl
jg
mov
cwtl
mov
movsb
xchg
mov
lock
mov
movsl
cmpsb
mov
add
movsb
fisttpll
test
fdiv
add
adc
notb
pusha
mov
pop
cmp
and
and
das
pop
subb
sub
dec
mov
xchg
dec
push
pop
jmp
sar
dec
dec
add
pop
dec
pop
jge
fs
jnp
jmp
loopne
dec
add
dec
dec
dec
push
fs
imul
add
fdivr
in
lcall
jne
push
inc
push
addb
outsb
push
inc
sbbl
jb
add
xchg
push
mov
dec
mov
add
dec
inc
inc
inc
dec
add
dec
pop
inc
std
aaa
cmp
push
inc
add
in
repnz
lock
test
cmpb
repnz
cli
subb
pushf
cwtl
sahf
sahf
xchg
pop
movsl
mov
jb
xchg
mov
sahf
xchg
mov
nop
es
into
mov
cmpsb
in
call
and
shlb
ja
push
sbb
xchg
loope
mov
fdivp
mov
lods
xchg
fwait
mov
xchg
test
lock
mov
ljmp
jg
cmp
test
mov
mov
fisubrl
mov
mov
mov
cltd
lods
scas
movsl
adc
loop
leave
rcll
push
pop
add
jns
push
in
pop
hlt
lcall
add
adc
lcall
xchg
mov
icebp
ljmp
mov
rorl
lea
mov
insl
add
arpl
and
dec
or
ret
incl
add
push
dec
push
dec
pop
hlt
data16
dec
pop
dec
pop
out
call
adc
inc
pop
addr16
outsl
jns
pop
data16
insl
arpl
imul
out
add
lock
cmc
not
jecxz
jmp
shr
roll
dec
lret
fucomp
sbb
rcr
fisttps
hlt
decl
fcmove
ret
add
test
data16
pop
add
incl
clc
icebp
stc
rcrb
pop
jb
pop
pop
or
sub
push
dec
fadds
adc
cli
mov
add
pop
notb
outsl
outsb
sub
sub
pop
mov
jb
sub
or
jl,pt
inc
push
jns
add
ljmp
xor
jge
addr16
jl
pop
or
sbb
push
add
add
and
outsl
clc
add
ja
rclb
addb
nop
pushf
hlt
lcall
mov
mov
add
xchg
mov
fdiv
pop
xchg
mov
mov
add
jecxz
shr
mov
scas
cli
mov
cmpsl
stos
in
mov
int
aad
aad
shl
mov
pop
mov
int3
int3
fists
push
into
iret
enter
inc
lock
lret
icebp
add
loope
add
and
mov
mov
jmp
hlt
repnz
sti
out
cld
sbb
pop
pop
pop
sub
lock
sbb
sbb
pop
sbb
or
adc
dec
pop
outsb
push
test
push
sbb
sbb
scas
jne
xor
jg
shll
mov
jl
cmp
xor
xor
std
sub
ss
cmp
mov
pop
push
push
pop
divb
std
aaa
xchg
pop
pop
pop
push
dec
pop
or
inc
jle
push
inc
push
popa
and
decl
pop
jo
bound
fs
push
insl
jo
imul
insl
jae
stos
mov
jo
outsb
jns
imul
xchg
and
dec
clc
mov
mov
xchg
test
test
xchg
rcrb
adc
or
pushl
lods
test
test
lods
scas
test
mov
rcrl
and
adc
pop
test
inc
gs
pop
es
dec
pop
lods
lret
icebp
fistpll
addb
xchg
adc
stos
cmp
sbb
pusha
sbb
imul
mov
mov
cwtl
lea
ja
cmpsb
mov
mov
popa
add
in
loop
add
jo
mov
lahf
icebp
ljmp
loopne
imul
repnz
jle
scas
mov
addb
inc
shll
in
movsb
cli
push
mov
xchg
inc
dec
inc
jbe
outsl
in
outsl
das
sahf
bound
outsl
lcall
mov
movsl
mov
cld
ljmp
cmpsb
lods
pusha
or
dec
dec
adc
pop
add
or
or
or
call
add
mov
popa
add
jg
test
mov
mov
cmpsl
push
add
mov
adc
js
popa
jmp
add
add
sub
and
aaa
outsl
sbb
xor
adc
cmp
add
cmp
jge
cmp
cmp
pusha
add
push
outsb
adc
mov
pop
push
push
inc
adc
pop
jg
scas
jmp
push
pop
push
push
inc
addb
xchg
fwait
fwait
xchg
adcb
sahf
lcall
outsb
cvtpi2ps
add
sub
jmp
and
push
pop
shlb
int
push
push
xor
incl
mov
add
add
fstp
fxch
into
xchg
add
fcmovbe
adcb
out
and
daa
xor
sub
pop
clc
jmp
sub
je
cmp
pusha
lods
and
jl
mov
jecxz
hlt
out
jecxz
loop
cld
stc
sti
mov
add
push
cmc
out
cli
push
cli
clc
clc
mov
mov
and
add
insl
jp
imul
jbe
addr16
into
and
cmp
std
or
xor
xchg
cli
scas
pop
movsl
test
push
add
pusha
sbb
clc
fisttpl
mov
test
xchg
ret
lcall
fists
sbbl
cltd
cmpsl
lds
pop
mov
jb
adc
popf
cwtl
ret
sbb
decl
jb
sbb
lahf
add
lcall
xchg
cli
cld
lock
cs
or
push
sbb
push
dec
dec
sbb
idiv
test
xchg
clc
div
add
cmc
cli
hlt
fwait
sbb
sub
sub
lds
xor
cmpsl
leave
ret
shll
pop
push
std
push
inc
adc
xor
sub
push
jg
int3
pusha
cmp
add
add
pop
or
jno
decl
lock
or
adc
cmp
jne
fiadds
sbb
or
enter
iret
pushl
icebp
mov
aad
add
mov
and
lcall
hlt
lahf
lret
vpshufd
push
scas
mov
mov
pushf
mov
add
lock
sti
lock
clc
mov
jle
push
sbb
jbe
sbb
add
and
sub
sub
in
loop
or
push
pop
add
repnz
ljmp
dec
loope
xchg
dec
pop
adcb
dec
pop
push
sbb
mov
cld
pushl
shll
sbbl
ljmp
add
cmp
shrb
out
mov
inc
or
dec
dec
popf
lahf
movsb
mov
dec
push
push
push
push
jmp
or
add
add
push
add
push
push
sbb
push
push
pop
or
push
push
icebp
pop
mov
sub
bound
jo
inc
outsw
pusha
pusha
andb
sar
les
jp
add
stos
mov
mov
cld
ljmp
stos
mov
add
movsl
cmpsb
sti
incb
lret
mov
hlt
test
mov
add
movl
add
mov
lds
add
pop
add
dec
and
push
sbbb
ljmp
jle
mov
ret
mov
addl
insl
xor
dec
clc
push
add
push
mov
shr
push
add
add
mov
add
add
add
mov
adc
push
je
in
rolb
and
add
pop
mov
push
add
cmp
add
and
and
inc
inc
adc
push
cld
aaa
ret
push
lock
push
jl
add
add
add
inc
mov
add
mov
sbb
add
add
nop
push
andb
add
jb
xor
in
ja
add
popa
add
xor
outsl
filds
push
mov
push
mov
push
call
sbb
gs
or
mov
jo
push
jne
jne
lock
in
je
pusha
cwtl
mov
arpl
push
pop
fsubl
gs
pop
jne
sbbl
ja
xor
arpl
andb
aas
and
xchg
jle
cmp
rcll
inc
gs
add
add
inc
mov
pop
lock
mov
push
jge
ss
or
jne
or
fisttps
aas
nop
or
pop
gs
or
adc
rol
cmp
imul
push
inc
rclb
aas
icebp
inc
pop
push
push
pop
or
pop
ss
subb
cmp
adc
pop
cli
push
inc
push
nop
pusha
dec
or
mov
push
pop
push
push
adc
inc
inc
icebp
or
outsb
jle
pop
pop
push
inc
push
dec
inc
pop
inc
mov
inc
inc
pop
inc
push
clc
pushl
hlt
pop
push
pop
repnz
pop
xor
push
inc
ret
jmp
es
nop
movsb
jo
pop
inc
xchg
mov
pop
push
pop
pop
inc
add
loop
cmovle
adc
inc
add
fsubrs
add
repnz
pop
lret
insl
push
push
mov
pop
fcoml
add
mov
add
inc
jmp
je
lret
fdivs
cmp
shlb
idivb
cmp
or
lock
jg
ja
fwait
xor
or
jg
mov
jo
sub
out
jns
jp
jne
je
inc
jns
loop
cmp
jge
addr16
add
jle
jp
push
daa
jle
loopne
mov
dec
xor
shlb
stc
sahf
xor
mov
loop
shlb
shlb
imul
fs
clc
sub
out
repnz
push
mov
or
icebp
or
xor
sbb
sbb
shrl
jne
sbb
and
vunpcklps
popa
push
push
jbe
mov
inc
arpl
aas
idivb
das
test
repnz
pop
push
adc
jo
inc
adc
insb
mov
inc
int
adc
daa
sub
mov
and
dec
fs
pop
daa
lods
subb
add
cmpsl
inc
xchg
movsb
fbstp
and
adc
lret
and
mov
aaa
cld
jmp
popa
sub
push
jo
or
mov
and
sti
data16
mov
outsl
test
bound
or
add
sub
aam
fs
pushw
icebp
add
push
das
push
js
test
push
fisttpl
jl
push
cmpsb
pop
test
add
lcall
lock
xor
push
xor
inc
sub
add
mov
bound
imul
add
inc
jg
bound
jle
adc
pop
decl
dec
or
jmp
cwtl
int3
dec
mov
push
dec
decl
push
inc
adcb
jle
clc
adc
sbb
dec
push
fs
sub
mov
xor
dec
inc
jle
inc
sbb
jbe
adc
pop
hlt
pop
mov
pop
inc
rolb
fdivl
pop
data16
inc
js
dec
and
and
mov
pushf
xchg
adc
nop
test
stos
leave
dec
movsl
and
je
lods
in
lock
into
rcrb
sub
outsb
inc
xchg
inc
mov
aam
add
jg
cld
ss
pop
rclb
fwait
test
add
add
push
and
mov
pop
arpl
or
or
push
or
mov
pop
bound
pop
jnp
decb
inc
xor
dec
sub
mov
mov
bound
addr16
xor
push
orb
or
dec
mov
sub
ljmp
push
gs
mov
sub
sbb
je
xor
xor
xor
fisttpl
xor
add
mov
mov
pop
mov
adc
pop
push
movsb
jns
and
ja
pop
mov
pushl
push
pop
arpl
ds
xchg
add
xor
or
cs
jo
cmc
mov
push
shrl
sbb
adcl
out
inc
jnp
add
dec
stc
insb
pop
adc
or
xchg
cld
adc
inc
stc
mov
inc
xchg
rcll
inc
inc
jnp
out
testb
mov
add
add
stc
pusha
dec
pop
test
and
lret
sbb
jmp
aad
pop
js
scas
adc
cli
sbb
stc
nop
mov
mov
decl
dec
inc
stc
sbb
add
dec
rcll
ret
nop
std
mov
cmpb
push
stc
call
push
jmp
jl
mov
in
clc
popa
xlat
ficompl
mov
out
add
jns
sbb
out
stc
mov
ja
pushf
movsb
dec
ljmp
push
lods
and
push
jg
pop
adc
fdivr
xchg
xchg
adc
xlat
inc
stc
je
sbb
aas
lock
lock
add
add
std
pop
scas
in
add
int
data16
sbb
inc
pushf
lea
rcrl
aaa
add
or
ds
flds
push
test
pop
lahf
outsb
pop
mov
jb
and
xor
out
lods
loop
mov
adc
xchg
add
dec
lea
imul
gs
dec
cmp
rorb
mov
loopne
dec
ret
fadd
pop
cld
sub
fstpt
or
jno
push
push
lcall
sub
bound
paddusb
setnp
pop
jecxz
add
add
addl
dec
fs
xor
cmp
add
sar
jg
ret
inc
and
and
orb
add
mov
ret
scas
mov
mov
adc
inc
mov
cltd
addb
jl
push
jns
orb
pushf
loop
andb
cmpsb
lock
call
add
pop
mov
and
subb
and
pop
out
jo
ljmp
mov
dec
fcom
mov
nop
add
pop
addb
mov
fs
sbb
orb
sbb
xor
mov
sbb
sbb
add
add
leave
cli
mov
xchg
ljmp
outsb
push
es
out
jl
xchg
insb
adc
adc
addb
add
rclb
lcall
loopne
incl
push
cli
pop
sar
push
xchg
ja
sub
mov
push
sub
mov
fistpl
jmp
or
inc
or
xor
shrb
out
push
jg
add
inc
xchg
cmc
sbbb
sbb
into
xor
jmp
sbb
out
shrb
sbb
ja
push
jmp
sbb
adc
div
outsl
push
stc
or
adc
ficompl
gs
rolb
adc
cmp
jbe
xchg
mov
out
daa
movb
rclb
push
and
jmp
add
add
inc
and
add
dec
inc
jnp
inc
jg
dec
mov
test
or
shlb
loopne
xorb
add
mov
rolb
lahf
jb
sbb
push
sbb
fwait
rorb
and
adc
inc
out
mov
lcall
inc
xorl
cwtl
dec
in
inc
sbb
sub
cmp
sub
xor
jmp
adc
icebp
sbb
push
adc
in
add
mov
mov
push
mov
sbb
push
pusha
cli
sbb
dec
in
sbb
fisubs
adc
sbb
pop
inc
or
inc
lcall
or
xchg
out
or
out
push
rolb
es
les
icebp
fwait
add
or
sub
xor
ficomps
sub
add
add
inc
shll
popf
push
xchg
add
enter
mov
aam
adc
loopne
sub
xor
pusha
jecxz
xlat
mov
loopne
loope
or
in
fs
and
xchg
pop
add
mov
adc
cmp
dec
and
adc
pop
or
jns
sub
stc
pop
sub
fs
idivb
loopne
push
gs
aad
comiss
paddsw
sbb
fildl
sarb
add
sbb
add
inc
adc
xor
aad
fildl
dec
rolb
push
cld
outsl
pushl
addl
push
jmp
cs
and
or
pop
jbe
ljmp
and
or
adc
sbb
inc
push
pusha
je
mov
adc
mov
add
call
sbb
xor
add
dec
push
push
hlt
and
pusha
pop
ret
icebp
pushf
jbe
mov
dec
inc
xor
xchg
int3
clc
mov
mov
roll
cli
adc
add
roll
test
push
repz
ljmp
rclb
outsb
cmp
mov
and
pop
je
addb
fadds
adc
pop
sub
adc
dec
cli
add
adc
les
std
push
pop
mov
pop
rclb
pushf
and
or
sub
data16
popa
or
movsl
loopne
lcall
hlt
add
stc
aas
call
sub
scas
cli
ja
and
inc
mov
add
jo
sbb
mov
pop
mov
add
loop
adc
lcall
int
sbb
and
add
loopne
loopne
std
jmp
xchg
sbb
jle
mov
cmc
inc
jge
and
add
lcall
adc
fildll
xchg
adc
cs
or
push
and
adc
sarb
movsb
in
rolb
mov
sub
mov
and
stc
mov
in
aaa
repnz
fmuls
loop
loope
pop
std
sbb
sbb
out
or
or
mov
pusha
pop
shrb
ja
add
inc
dec
incb
and
fdivrs
dec
cmc
add
addl
cmp
xor
lcall
jle
pusha
test
out
pusha
popa
adc
xor
adc
mov
dec
loope
add
pusha
stos
add
imul
out
rcrb
call
cmp
faddl
cmp
addr16
loope
and
inc
or
or
or
jecxz
dec
rorb
inc
sbb
pop
jne
mov
mov
stc
jle
movsl
rolb
sbb
filds
add
dec
push
inc
dec
gs
scas
mov
inc
pop
inc
cmp
inc
mov
mov
icebp
ljmp
mov
inc
repz
cmc
pusha
add
adcl
adc
clc
mov
adc
sbb
or
inc
and
rol
fcomip
call
jecxz
inc
and
mov
inc
test
sbb
mov
mov
lds
push
push
inc
in
add
and
daa
andb
insb
mov
in
inc
movsb
fcompl
adc
xchg
add
stc
mov
aaa
jp,pn
add
add
out
push
adc
dec
je
stos
lcall
stos
sub
incl
adc
adc
aad
inc
shrb
add
cs
xchg
aad
out
data16
lea
pop
mov
push
loopne
mov
adc
mov
add
add
add
clc
ss
ja
adc
add
mov
ja
mov
cli
push
push
xor
testb
xchg
aad
xor
decl
lock
rolb
insb
inc
sub
add
xchg
mov
ss
into
mov
incl
jle
mov
rcll
xchg
outsl
mov
dec
adc
xor
xchg
jns
sub
push
cld
popa
add
add
and
add
push
or
dec
sub
icebp
fists
jle
cmp
add
sub
sub
add
push
xchg
pop
inc
jns
idiv
adcb
jno
mov
xchg
add
addb
xchg
add
lock
out
adc
or
dec
js
sbb
jg
in
xor
mov
rcll
rolb
loope
stc
or
jno
jns
sbb
insl
mulb
sub
inc
pusha
rolb
add
insb
mov
lods
xor
daa
and
push
sar
pop
ret
jns
sarb
jl
inc
nop
sub
stos
or
loopne
outsb
cwtl
add
pushf
push
add
adc
pop
xor
mov
push
add
stc
mov
push
pop
cmp
inc
and
mov
or
cmp
push
jns
sub
loope
push
dec
add
push
push
test
jo
add
movsb
jae
push
jo
and
adc
jns
adcl
pop
pusha
push
ret
xor
and
out
cli
sbb
adc
rcrb
xor
cmp
std
or
push
scas
inc
pusha
and
out
cmp
scas
out
push
and
sub
and
mov
in
pop
hlt
sbb
sbb
pushf
popf
and
jmp
or
fbld
sub
or
push
cltd
xchg
inc
and
pop
cmpsb
dec
adc
xchg
jmp
mov
stc
add
add
in
mov
inc
sbb
sar
jns
adc
mov
adc
ljmp
pop
xchg
test
xor
adc
xchg
stos
adc
jg
mov
sub
and
jp
pop
fs
xlat
pushl
xchg
inc
cmp
adc
pushf
test
inc
lcall
inc
xor
dec
lcall
lcall
test
push
in
adc
add
dec
pop
jo
xchg
jb
jo
inc
icebp
push
add
sub
mov
lock
gs
cwtl
fs
fcomip
out
push
add
xor
xlat
addr16
push
out
dec
gs
enter
sbb
mov
jbe
mov
jnp
adc
inc
sub
xor
sbb
sbb
and
push
cs
sarl
or
inc
icebp
sbb
lcall
mov
dec
mov
sub
sbbb
clc
mov
add
inc
rorb
cli
sbb
sar
pushl
cli
add
adc
lcall
mov
push
nop
call
enter
or
xchg
das
add
jns
loope
mov
sbb
ljmp
and
imul
adc
shl
mov
pop
add
xchg
aaa
add
ljmp
pop
pop
sub
addl
shrb
shrb
push
stc
imul
xor
loope
rcrl
dec
cmp
rcrb
inc
push
or
jb
orb
subb
sub
rcrb
or
pop
mov
inc
gs
add
pop
mov
add
outsl
pushf
outsl
adc
add
and
shrb
aas
shlb
add
push
in
adc
xchg
adc
lcall
loope
scas
in
cmp
sub
or
shrb
loopne
xor
loopne
cmpsb
push
je
out
leave
push
sub
aas
lcall
fbld
sub
push
inc
mov
and
nop
repz
std
das
adc
sub
lock
inc
inc
add
repnz
scas
adc
das
mov
pushf
pop
add
pop
inc
gs
xchg
sti
loop
pop
jb
mov
in
add
lcallw
sti
mov
inc
ret
inc
inc
mov
adc
pop
xchg
jmp
push
xor
jle
or
and
hlt
pop
mov
rcrl
js
mov
mov
mov
push
std
filds
xlat
shlb
stc
cmc
rcll
sarb
ret
push
adc
aad
sbb
stc
outsb
dec
mov
fstpt
jg
adc
lcall
xchg
fsubs
or
and
add
add
cmp
shlb
or
rolb
lcall
sbb
lcall
mov
je
inc
sub
add
addb
jecxz
pcmpgtw
or
add
dec
add
cmp
jecxz
sarb
push
jp
mov
scas
rcll
je
addb
icebp
add
pop
out
push
adc
out
call
mov
cmp
inc
cwtl
aas
cltd
dec
and
insl
adc
xchg
pop
or
cmc
push
xchg
dec
add
add
xor
xor
dec
dec
adc
loop
mov
mov
addr16
sub
push
sbb
sbb
jge
ss
xchg
lcall
rorb
pop
push
or
cld
mov
or
xor
push
adc
ret
fchs
or
sub
mov
mov
pop
lods
sar
popf
push
jmp
fs
add
adc
xor
out
push
clc
push
xor
jg
push
lock
sub
bound
in
sub
add
cmp
inc
inc
sti
sub
inc
inc
inc
test
out
hlt
push
fcoms
pop
outsb
iret
sub
roll
mov
and
lods
mov
or
and
push
cmp
mov
popa
add
xchg
sbb
add
add
or
ficompl
xchg
dec
adcb
mov
mov
add
loope
lret
xchg
mov
orb
stc
nop
aam
lret
xor
ret
jbe
mov
cmp
sub
adc
jb
and
sbb
and
rolb
add
xchg
lret
or
add
pushf
pop
and
ss
add
sbb
aam
mov
mov
int3
pushl
ljmp
lock
jmp
arpl
xor
push
sub
inc
jns
jle
inc
adc
sub
aam
fiaddl
in
out
clc
xchg
ss
addr16
add
lcall
push
jle
sub
xor
mov
inc
mov
or
orl
inc
cmpb
or
cs
decl
inc
out
and
xor
jbe
sub
inc
inc
jg
cmp
or
and
in
cmp
mov
pushf
inc
xlat
pop
stos
pop
and
sbb
push
adc
add
jge
xor
sbb
sar
inc
xchg
sub
push
and
loope
adc
jp
or
sub
inc
pop
add
lea
adc
dec
fwait
add
or
test
fsubs
lock
mov
dec
ror
dec
shrl
in
inc
addl
repnz
adc
xchg
rorl
pop
and
sbb
mov
xchg
fwait
arpl
ret
lcall
scas
mov
fsub
lods
jge
movsb
fimull
cli
adc
ds
mov
mov
pop
cltd
nop
std
push
cmp
sbb
jns
add
cwtl
add
ret
lcall
xorb
decl
rcrb
xchg
aad
inc
es
dec
adc
add
mov
std
adc
sub
mov
daa
add
leave
push
cmp
sub
faddl
std
negb
adc
jo
inc
shlb
test
cs
aad
jl
outsl
das
mov
adc
or
jmp
rorb
js
or
xchg
or
int3
pop
jbe
fists
jge
sarb
adc
jo
orb
mov
add
fsubrs
stc
out
call
mov
loopne
push
stos
popa
inc
or
xchg
add
sbb
adc
int
mulb
push
aam
mov
pop
push
pop
dec
xchg
stc
sahf
ret
ja
push
adcb
add
inc
inc
xchg
rclb
sub
inc
cmp
pop
xchg
movsb
loope
pop
add
pop
call
pop
adc
push
or
fwait
add
test
mov
cwtl
dec
popa
stc
in
push
pusha
jnp
pop
mov
sbb
sub
mov
push
adc
add
loopne
lock
push
inc
ss
cwtl
inc
dec
andb
sbb
subb
push
gs
mov
add
lods
inc
push
insb
fsubs
repz
dec
xchg
mov
sub
adc
lret
add
or
pop
stc
adc
adc
mov
jge
and
pusha
add
adc
shrb
std
mov
mov
aas
xchg
aam
imul
shrb
rcll
inc
pusha
pop
mov
cmc
stos
sbb
push
pop
mov
or
in
cmc
inc
lock
sar
stc
stc
imul
fs
add
int3
mov
jnp
and
xlat
dec
and
xchg
ret
push
xchg
ljmp
mov
call
pop
adc
inc
incl
pop
hlt
int
mov
sub
sbb
inc
add
sbb
xor
xchg
adc
xchg
or
das
mov
addl
test
icebp
xchg
add
loope
loopne,pn
addb
dec
cltd
sbb
sub
add
decl
or
inc
inc
lcall
inc
and
inc
enter
ljmp
mov
inc
sub
sbb
mov
filds
stc
or
adc
loopne
gs
pushf
loope
scas
inc
pop
lock
jge
leave
sub
test
cmp
jb
push
or
or
lcall
xchg
aaa
std
xchg
cli
daa
inc
xor
sbb
sbb
shrb
or
outsl
jp
stc
dec
rolb
lcall
icebp
mov
or
sbb
mov
jmp
sub
mov
gs
pop
shrl
out
adc
pop
inc
inc
stc
dec
loopne
mov
sbb
daa
inc
sub
mov
leave
pushf
inc
adc
ret
fcoml
adc
push
or
push
sbb
aaa
inc
inc
mov
add
aad
add
sbb
sbb
cmc
mov
xor
adc
and
lock
push
pop
pushf
gs
xor
cmp
xor
push
and
add
subb
jp
inc
mov
jg
pusha
add
and
and
and
jnp
pop
cs
pushl
inc
add
pusha
and
jl
jnp
xor
inc
stc
sub
or
jmp
add
sub
loopne
or
aaa
push
mov
xchg
insb
enter
into
or
pop
testb
adc
cwtl
inc
popa
xchg
lcall
xchg
and
jne
cs
adc
fdiv
cmpsb
push
sarb
push
push
dec
in
mov
cmp
mov
add
pop
nop
in
bound
jmp
pop
pusha
xchg
or
lcall
cld
filds
stc
ficompl
inc
inc
stc
andl
mov
dec
jns
mov
or
mov
out
and
out
call
aam
mov
mov
mov
outsl
shlb
fs
add
dec
inc
dec
frstor
push
ljmp
and
aaa
std
pop
cmp
scas
add
and
mov
inc
adc
push
and
stos
xor
pop
cli
ds
scas
xor
push
sbb
sub
jge
adc
nop
pusha
sub
lods
sub
xchg
lods
xor
sbb
call
cli
mov
cmc
and
push
or
je
or
add
fdivs
scas
sbb
adc
pusha
sbb
clc
fbld
mov
push
add
sub
inc
and
and
inc
lcall
or
jmp
stc
push
mov
mov
icebp
filds
andb
ss
and
add
push
sub
mov
fs
add
pop
add
out
add
xor
ror
sub
adc
cwtl
sbb
ljmp
and
push
sbb
push
adc
gs
lock
dec
popf
and
pop
push
and
gs
jg
in
mov
loopne
shrb
inc
cltd
sub
xchg
or
in
lcall
or
cmp
mov
mov
jmp
xor
mov
xor
rolb
imul
or
daa
cmp
push
jnp
adc
in
test
shrb
push
cmp
cmp
lods
and
lret
sub
push
or
lock
sub
inc
and
jno
mov
adc
inc
or
pushl
ljmp
gs
and
and
or
push
sub
sbb
xor
cmp
sub
loopne
subb
mov
inc
test
stc
adc
add
add
inc
or
in
add
inc
push
xchg
inc
dec
and
adc
lcall
aaa
push
call
mov
jmp
pusha
dec
adc
add
stc
cld
andl
stc
cmp
lock
cwtl
push
mov
shrl
dec
inc
cmp
lcall
cli
adc
mov
test
test
jbe
out
sub
push
push
insb
sbb
lods
test
adc
daa
stc
aam
add
sbb
inc
rclb
sub
xchg
jo
pusha
aaa
popa
sbb
and
add
push
and
cmp
mov
gs
or
pop
mov
adc
filds
lock
repnz
add
mov
jns
fcoms
add
mov
movsl
mov
std
add
dec
out
cli
inc
jnp
and
stc
sbb
adc
add
pop
rcrb
push
stos
inc
mov
incl
insb
ljmp
add
call
pushf
push
test
pop
jmp
inc
out
stc
shr
test
mov
pop
sbb
in
sbb
stc
cs
xlat
out
fcoms
push
jb
in
push
pushf
dec
out
fildll
xchg
adcb
xor
ss
stc
data16
fidivrs
repz
loope
bound
xchg
push
lret
hlt
jo
insl
mov
inc
jg
sub
addr16
mov
add
in
adc
loope
cltd
inc
push
pushf
xor
add
aaa
frstor
out
push
add
out
nop
call
push
add
sbb
dec
adc
cwtl
addb
jnp
jno
push
or
leave
mov
inc
pop
or
add
jge
pop
outsb
aam
push
sub
cwtl
dec
cmp
mov
xchg
add
add
add
ret
lods
aam
push
insb
xchg
pop
mov
lock
inc
or
cwtl
adc
bound
clc
pusha
das
clc
push
push
mov
gs
ret
rorb
dec
call
pop
push
push
cmc
sub
insl
lcall
stos
xor
insb
inc
dec
push
fimull
lcall
pop
pop
cwtl
sar
jl
ss
mov
popa
ds
aad
xchg
in
icebp
cltd
ds
out
jb
and
xor
clc
cld
and
mov
inc
clc
add
scas
push
push
shr
xor
sub
fcmovbe
cmp
pop
lcall
lcall
das
push
loopne
sub
std
cmp
daa
add
and
stc
pop
shr
clc
imul
xor
add
and
mov
mov
call
cmp
rclb
xor
cli
jne
inc
es
mov
mov
outsl
sub
ds
sbb
test
dec
dec
stc
and
jg
ljmp
inc
loopne
jns
nop
push
mov
adc
stos
xor
stc
outsl
cmp
popa
cmp
out
mov
xor
add
add
into
lock
pop
loopne
add
sarl
sub
repnz
testb
xchg
xor
mov
or
and
lcall
ja
lods
add
inc
add
pop
ljmp
mov
push
ret
enter
jle
pop
or
cwtl
pop
pop
add
add
inc
jmp
add
repnz
or
adc
cs
cmpsb
aad
mov
add
out
inc
push
jne
jae
jns
add
jg
incl
mov
or
shrb
jmp
das
cli
sbb
xchg
push
shl
jb
cwtl
push
pop
sarb
enter
push
mov
and
add
js
jb
rclb
aaa
add
in
gs
loopne
sbb
sbb
sub
stos
or
mov
sub
es
xchg
fcomip
call
jo
shlb
rclb
dec
out
xor
push
add
stc
push
sbb
outsl
add
data16
in
incl
add
and
or
out
dec
hlt
jnp
mov
daa
rcll
cmp
cli
and
fs
lret
fdivp
inc
ja
lock
gs
lcall
or
or
push
push
int3
add
add
cld
jg
pushf
inc
add
sub
or
push
or
sbbl
adc
nop
cmp
mov
sarb
and
xchg
push
loopne
loopnew
push
add
inc
lods
push
std
or
in
test
sbbl
jle
imul
jl
pop
push
cli
cmp
data16
rcrb
add
andl
xor
or
add
add
push
or
push
add
fmul
loope
mov
cwtl
push
add
add
inc
add
lock
ljmp
add
cli
aaa
test
push
dec
sbb
add
pop
movsb
mov
adc
cld
jmp
add
decb
add
decl
add
add
adc
test
popf
cmp
rolb
mov
dec
dec
rcll
add
cmp
sub
mov
dec
test
inc
cmpb
je
cmp
out
stos
stc
pop
out
dec
push
dec
inc
xor
sub
sbbl
sbb
dec
or
popf
rclb
add
xlat
mov
sbb
nop
adc
mov
and
pop
test
inc
bound
jp
jge
es
fisttps
es
mov
xor
call
subb
cmpb
xchg
fucom
xchg
popa
add
jnp
pop
inc
cli
sub
add
inc
mov
fcoml
add
adc
fmull
or
mov
adc
xchg
push
stos
add
push
das
adc
dec
xchg
or
sbb
mov
push
xor
shrl
dec
add
faddl
jp
xchg
fisttps
adc
addl
inc
or
adcb
adc
pop
pop
cs
mov
mov
lcall
sbb
dec
xor
xchg
add
lcall
je
insb
filds
cmp
dec
add
cmpsb
daa
ja
popf
cli
add
jl
or
cli
jl
xchg
rol
sbb
xchg
roll
mov
jmp
jecxz
fldl
cli
push
inc
pop
add
popa
push
rcl
cwtl
adcb
addl
out
fs
adc
cmpsl
adc
adc
pop
gs
push
fldcw
rolb
loope
js
pushf
sub
test
add
and
out
in
loop
mov
mov
not
inc
add
inc
inc
inc
inc
jb
lcall
ljmp
loopne
add
lods
sbb
cmp
jecxz
pop
fwait
add
fs
inc
inc
shlb
stc
jns
xor
clc
incl
inc
mov
orl
adc
stc
idivl
jp
adc
adc
or
adc
lcall
addb
ljmp
sbb
loopne
loope
sbb
push
sub
mov
arpl
dec
shlb
push
cmpsl
sarb
sar
cmp
and
mov
and
inc
imul
sbb
cld
aaa
bound
sub
popaw
mov
cld
addb
adc
rcrb
add
adc
or
push
jb
addb
and
int3
and
movsb
icebp
in
subb
scas
fsub
sub
inc
cmp
lcall
and
adc
call
in
rcrb
dec
pushf
add
popa
pusha
ret
and
xchg
leave
in
add
add
inc
and
mov
stc
xchg
add
adc
pushf
lods
roll
dec
orb
or
clc
fwait
fs
outsb
pusha
inc
insl
push
push
push
pushf
fs
dec
stc
push
jg
jg
push
push
sbb
or
inc
cli
or
lret
testb
xchg
mov
fadd
jecxz
mov
push
icebp
sar
aaa
cs
stc
adc
movb
cltd
loopne
push
xchg
lea
and
push
lock
cmp
inc
inc
pushf
mov
mov
mov
scas
xchg
ficoml
and
inc
jns
jle
mov
fwait
rcll
add
xor
xchg
mov
outsb
inc
test
cmpb
xchg
out
mov
in
stc
mov
cli
push
lcall
pushf
sahf
inc
das
lods
sub
add
and
rclb
sub
dec
sbb
add
jns
inc
lods
fldl
rolb
add
sbb
mov
jg
shrl
hlt
je
sub
pusha
sub
mov
and
lds
cs
out
add
xlat
dec
add
aad
xor
fsubl
xor
rcrb
in
add
sbb
test
nop
out
xor
add
mov
dec
mov
pushl
cld
dec
and
jne
sub
and
stc
push
mov
and
add
mov
mov
ss
sbbb
add
insl
std
loop
sbb
inc
mov
sarb
sub
hlt
sub
test
push
test
or
orb
or
nop
stos
decl
ljmp
out
add
data16
adcb
mov
adc
dec
leave
js
push
push
xchg
and
stc
test
fdivl
shrb
cmp
add
fwait
jbe
xchg
nop
add
sub
fs
cld
jne
and
mov
adc
popl
push
adc
dec
dec
pop
cwtl
and
xlat
hlt
push
call
testl
and
xor
inc
insb
in
pusha
bound
mov
and
idiv
and
xchg
out
orb
add
jno
add
xor
sar
pop
andb
in
pop
inc
stc
rorb
add
add
or
shrb
mov
inc
push
add
pushf
add
stc
jmp
add
stc
jp
pop
pusha
test
cmc
stos
dec
dec
add
loopne
mov
and
mov
xchg
xor
or
daa
adc
subb
lcall
and
pushf
sub
inc
pusha
sbb
ss
ja
ljmp
cwtl
sbb
lcall
sbb
shlb
add
push
std
sbb
fistl
or
and
or
push
push
add
inc
divb
push
add
xchg
xor
inc
cwtl
dec
dec
jbe
mov
jge
loopne
dec
dec
xor
sub
push
cmpsb
outsl
jp
mov
mov
jbe
inc
add
dec
ss
sbb
pop
adcb
pop
in
inc
repz
adc
push
ret
jmp
stc
adc
xor
add
aas
jl
stos
roll
add
dec
or
gs
aas
adc
loope
out
inc
sub
sub
xchg
mov
adc
mov
sub
and
push
or
out
inc
pop
inc
clc
xor
ljmp
gs
jns
adc
xor
push
add
loope
mov
adc
cwtl
mov
loopne
push
nop
pop
add
push
sbb
mov
adc
inc
push
cmpb
out
add
mov
fiaddl
xor
data16
cli
push
jb
push
nop
shll
sbb
mov
enter
ror
push
push
je
mov
push
ja
aaa
jl
and
pushf
inc
push
add
sbb
adc
jp,pn
pop
and
roll
loope
and
adc
inc
or
xchg
repnz
push
bound
xor
push
and
mov
xor
push
lock
sub
inc
inc
les
xchg
xchg
sarb
popa
pop
adc
xchg
aam
mov
aad
pusha
mov
shlb
or
mov
sub
push
popa
mov
roll
add
inc
daa
mov
clc
shrb
and
shlb
inc
lcall
push
or
add
inc
ret
gs
jne
adc
loopne
clc
iret
push
add
mov
imul
dec
or
push
dec
pushf
gs
xor
adc
cmp
cmp
add
cmp
out
in
add
mov
add
sbb
sti
je
test
or
out
add
outsl
clc
and
sbb
stc
xor
subb
stos
push
aam
nop
or
out
js
xchg
movsb
sub
add
jle
or
xor
dec
out
fwait
jecxz
adc
fs
rolb
cs
xchg
sar
stos
push
bound
mov
jg
fbld
in
ret
pop
fs
jno
and
out
mov
mov
jae
push
shl
stos
mov
add
add
icebp
dec
test
dec
out
clc
add
test
adc
push
push
mov
adc
in
fwait
lret
cwtl
and
leave
mov
lahf
test
or
outsl
pop
aaa
imul
or
jo
or
and
imul
mov
lcall
xlat
xchg
ss
push
mov
inc
mov
shr
outsb
mov
mov
mov
pushf
cli
cmpsb
lods
xor
call
mov
add
test
lock
movsb
jge
sbb
stc
pop
sub
sub
pushf
mov
pop
mov
push
out
pop
sub
sbb
mov
push
loopne
jns
cmp
inc
pop
dec
clc
or
push
lock
pop
adc
adc
stc
out
xor
dec
loop
add
lcall
fucomip
clc
mov
int
inc
fs
stc
xchg
sub
mov
inc
inc
cmc
adc
adc
add
fdivr
aam
dec
cwtl
push
ljmp
add
mov
lahf
sub
add
pusha
imul
add
sarl
jp
and
pop
push
in
hlt
repz
add
mov
in
adc
add
insb
fldl
add
jnp
sar
mov
sbb
sbb
pop
out
cwtl
roll
add
iret
push
mov
std
sub
xchg
test
inc
inc
sub
jo
push
xchg
shlb
push
add
js
shl
lea
setb
push
int
shlb
call
push
mov
addb
sbb
stc
popa
shlb
add
cmp
lock
stos
lock
incl
push
and
adc
push
xchg
dec
pop
test
pop
lock
insl
xor
stc
lret
mov
cltd
sbb
push
cmp
adc
lods
fchs
sar
incl
push
cltd
adc
xchg
pop
rclb
push
lea
stc
sub
sbb
shlb
sub
jmp
xor
adc
jns
sub
jg
stc
repz
push
pop
xor
pop
or
insb
sbb
add
pop
bnd
pop
popa
or
mov
and
pushf
pushf
mov
dec
sarl
and
sub
fs
mov
fldenv
clc
test
or
and
mov
subl
and
add
jmp
out
and
inc
push
jbe
add
dec
xchg
or
adc
jecxz
inc
push
sbb
jo
test
push
insl
fists
icebp
stc
or
add
cld
pushf
dec
adc
cmp
shl
fbstp
pusha
and
add
mov
xchg
shrl
out
push
dec
call
icebp
push
stc
in
lock
add
leave
add
add
push
adc
sbb
out
adc
xchg
push
shrl
jo
popf
mov
xchg
push
inc
lods
dec
subl
or
inc
mov
and
xor
add
insb
or
xor
aad
movsl
jl
pop
pop
mov
pop
adc
pushf
add
xchg
sub
nop
outsl
shlb
and
push
and
add
out
push
add
push
mov
scas
dec
and
in
ffreep
dec
add
rorb
add
xor
adc
ficoml
and
lock
lea
add
jb
fs
inc
inc
cmp
out
cmp
incl
mov
stc
roll
or
add
call
sbb
sub
or
mov
stc
inc
add
sbb
cmpsb
sub
or
shlb
xlat
stc
mov
add
adc
xor
add
add
outsl
jmp
pop
rolb
or
pop
inc
repz
mov
out
mov
dec
rcrb
sub
adc
add
add
or
cltd
add
pop
loop
sbb
xchg
or
sbb
sub
mov
cli
push
mov
gs
add
aas
insl
clc
adc
test
sbb
loop
repnz
adc
add
pusha
shlb
or
mov
xor
pop
push
idivb
sub
jl
shrl
xchg
push
xchg
sub
xchg
jno
add
adc
mov
adc
ja
add
dec
mov
jo
sarb
test
push
stc
clc
addb
fmull
and
or
dec
add
outsl
inc
test
cmp
xchg
fidivl
inc
xchg
fsubrl
or
test
inc
sahf
add
add
adc
pop
xchg
push
pop
xor
add
mov
int3
push
push
push
faddl
shlb
orb
adc
dec
pop
sbb
jnp
add
or
mov
jns
aad
adc
data16
adc
xchg
add
dec
cli
rorb
lods
mov
sub
add
dec
dec
aaa
push
and
je
and
loopne
dec
fdivs
jbe
mov
mov
add
rcrb
mov
pusha
andb
cmc
or
push
rolb
pop
stc
pop
in
ret
xor
pushf
int
ja
push
int
cmp
mov
movb
pop
mov
mov
int3
insb
add
pop
mov
add
push
lcall
add
mov
cli
xchg
sub
push
add
out
mov
inc
in
jmp
push
add
mov
call
or
and
leave
jle
pop
adc
xchg
ret
out
fiaddl
push
push
add
push
sbb
dec
dec
jg
and
add
mov
adc
in
push
dec
adc
gs
inc
add
sar
lcall
addl
cli
gs
ss
ja
and
cmp
cmp
xor
inc
decb
push
or
sbb
sbb
push
rcrb
inc
inc
sbb
pop
xor
gs
add
loop
push
shl
sub
fs
add
mov
sbb
test
jg
or
and
out
or
dec
adc
aaa
mov
adc
jle
sbb
inc
shll
mov
adc
push
dec
or
add
out
cmp
nop
std
cltd
rorb
add
push
mov
out
nop
inc
clc
jg
adcb
jns
sub
or
rcrb
fwait
and
mov
xchg
daa
orb
outsl
jg
xchg
rolb
xchg
call
add
rcrb
or
mov
loopne
lcall
bound
lcall
cs
and
sbbb
sahf
test
std
xor
xor
or
xchg
inc
add
in
inc
mov
jg
pop
imul
dec
or
or
sbb
adc
inc
out
es
dec
jbe
ljmp
cmpsl
push
addb
add
or
sbb
push
roll
pop
pusha
mov
lds
lcall
fistpll
push
or
fwait
push
or
sub
dec
cmp
inc
pop
and
mov
and
pushf
movsb
xchg
add
adc
lea
adc
sbb
mov
dec
xor
push
sub
decb
jecxz
mov
mov
je
lret
arpl
or
mov
cmpl
stc
pop
repnz
sbbl
rclb
adc
fwait
mov
shr
jnp
or
data16
push
push
icebp
incl
es
pushf
add
push
xchg
stos
cwtl
aam
pusha
clc
xor
add
arpl
mov
nop
or
inc
inc
xchg
rorl
mov
add
lcall
clc
negb
inc
add
push
push
push
inc
xchg
push
sbb
fisttpl
andb
adc
fsts
mov
inc
and
mov
ljmp
dec
xchg
push
cmpsb
push
sbb
add
call
xor
mov
mov
jle
fadds
je
and
cwtl
lock
mov
adc
pop
arpl
sub
or
push
adc
lret
add
fistl
cli
adc
pushf
push
pop
pusha
fadd
aaa
add
fsubrs
pop
ljmp
ror
movsl
stc
out
add
inc
adc
push
movsl
or
aad
pop
mov
push
or
lods
hlt
sahf
pop
fldcw
dec
test
in
or
fs
add
fs
and
mov
adc
and
push
or
std
shrl
inc
scas
lcall
push
cmp
ss
outsb
stc
jge
or
pop
or
orl
xchg
adc
and
adcl
or
sub
mov
int3
or
adc
lods
rcr
sbb
addb
push
sub
call
dec
xor
std
jmp
add
or
add
push
mov
nop
dec
sub
clc
in
loope
lock
aad
adc
sub
shl
leave
dec
mov
push
rcll
jno
xchg
pop
rcrb
cmp
jbe
fucomi
xor
cs
mov
stc
ja
mov
lcall
or
pop
fld
lret
lock
mov
mov
mov
insb
add
mov
dec
adc
adc
or
lcall
add
nop
lock
inc
push
fsubr
push
mov
enter
enter
mov
xorb
mov
sbb
mov
rolb
pop
inc
test
ficoml
loope
out
and
adc
js
mov
insb
push
cmpb
sbb
jle
and
xor
inc
cmp
icebp
adc
roll
sbb
filds
bound
mov
add
xchg
pop
or
cmp
or
mov
stc
jne
push
pusha
inc
mov
and
cld
push
rorb
frstor
dec
inc
mov
adc
mov
add
pushl
frstor
mov
add
add
sbb
sbb
add
adc
sub
loop
push
int
or
addr16
mov
mov
shrb
and
pop
stos
xorl
inc
xchg
sarb
push
imul
push
mov
add
mov
aad
dec
nop
add
adc
and
and
fs
adc
push
ds
arpl
xor
adc
push
jo
sbb
and
add
lcall
mov
stc
adcb
or
xor
repnz
add
mov
add
inc
icebp
lcall
clc
push
xor
stc
mov
lock
xor
or
adc
xor
and
and
add
xor
cmpsb
aaa
dec
mov
lcall
icebp
loope
stc
add
rcrb
xchg
icebp
sbb
and
mov
les
inc
mov
nop
std
loop
cmpb
xlat
and
mov
es
shrb
out
out
in
clc
lcall
jl
push
mov
jnp
pop
xor
pop
push
push
nop
insb
cmp
jg
lock
and
pop
and
lcall
cli
inc
out
bound
sbb
or
arpl
icebp
daa
pop
adc
xor
push
pop
icebp
stos
mov
shll
push
nop
xchg
push
pop
xor
mov
fisubrl
add
mov
inc
lcall
andb
sar
lock
mov
add
in
sbb
push
out
pop
repz
adc
icebp
push
push
and
inc
in
adc
nop
sbb
xchg
rcrl
push
test
push
push
pop
jno
mov
lods
and
hlt
int3
lock
je
sbb
jo
add
sbbb
or
xchg
loope
mov
inc
push
add
scas
fldcw
clc
cmp
fwait
push
sub
gs
mov
aam
dec
gs
adc
adc
mov
push
enter
push
std
mov
mov
stc
cmc
out
or
adc
pop
fdiv
shll
add
pop
push
add
jg
pop
jmp
xchg
ljmp
sbb
add
jmp
leave
push
push
icebp
stc
push
stc
xor
lcall
cld
cmp
sbb
jno
push
inc
add
push
xor
cmp
pop
jmp
insb
mov
add
or
push
std
mov
nop
jg
sbbb
lock
adc
add
scas
mov
sbb
add
ja
adc
adc
push
jp
adc
add
movsb
cmc
loopne
mov
std
shlb
andb
pushf
cmp
aaa
jmp
ss
hlt
jo
add
xorl
jl
mov
movsl
rclb
mov
nop
sbb
push
mov
add
push
mov
insb
and
push
jp,pt
sub
fwait
stos
jle
nop
ja
push
xchg
shrb
cld
xor
mov
cmpsb
mov
cmpsb
inc
rorb
and
jo
pop
clc
ret
out
push
gs
sub
gs
jnp
or
push
or
pop
jb
xchg
and
test
inc
or
sbb
xchg
shrl
adc
jo
hlt
sbb
mov
push
sbb
adc
stos
xchg
inc
stc
stc
or
sbb
or
idiv
sbb
in
mov
pop
inc
push
xchg
push
push
stos
addl
rclb
movsb
cmp
or
adc
sbb
adc
adc
mov
sarb
jno
add
inc
mov
inc
and
push
cli
dec
inc
mov
sub
fcomip
jmp
adcl
fwait
push
cmp
push
aam
add
leave
ss
shr
aaa
mov
adc
cmpsb
adc
fs
lock
adc
stos
xor
inc
arpl
test
xor
and
mov
add
int
inc
aam
sbb
lret
xchg
adc
shl
push
cmp
add
or
add
push
inc
mov
xorb
jge
mov
sbb
inc
cwtl
es
pusha
cmpsb
shrl
mov
mov
push
cmpsb
sbb
and
push
mov
mov
call
pusha
pop
xor
bound
jnp
dec
ja
add
push
sub
arpl
dec
icebp
dec
clc
decl
daa
inc
sub
jno
mov
fs
sbb
push
inc
xor
fistpl
adc
jno
bound
movsb
mov
add
mov
pushl
pop
fs
jnp
or
ja
pushf
fs
rcl
lcall
xchg
inc
mov
add
push
push
loope
or
in
jmp
adc
test
mov
inc
mov
test
inc
xor
pop
subb
adc
xchg
lods
push
jno
or
or
inc
xchg
inc
rcrl
call
aad
cmp
cmp
mov
divb
jb
loope
inc
icebp
mov
push
sbb
pop
sub
lcall
sbb
add
add
stc
cmpsb
in
cmp
pop
adc
add
or
jecxz
js
mov
imul
cmp
jmp
fs
mov
in
pop
je
adcb
pushf
add
icebp
inc
pop
sbb
adc
add
inc
adc
inc
push
jecxz
mov
xchg
sbbb
xchg
mov
cli
or
shll
xchg
push
out
cli
push
xchg
sub
fcomps
addb
out
rol
xor
and
adc
fs
shlb
clc
xor
stos
inc
in
mov
in
add
dec
cltd
dec
loopne
adc
sub
add
xchg
repnz
pop
lock
mov
lcall
stos
mov
cmp
jno
jmp
sarl
inc
lcall
imul
test
or
and
lcall
fistpll
cmp
cwtl
mov
sbb
cli
mov
cmc
mov
mov
adc
js
inc
and
sub
andb
insl
pushf
push
ss
add
incl
add
adc
push
mov
xor
add
add
rclb
inc
stc
outsl
xor
sar
xorb
mov
add
jb
pushf
fsubrl
out
push
incl
out
movl
add
jb
pop
loopne
incl
cli
adc
inc
shl
and
lcall
jecxz
hlt
outsl
js
arpl
pushf
push
add
sub
insb
add
jp
push
imul
bound
loopne
lock
rolb
jns
push
xchg
rclb
lcall
mov
aam
mov
or
pop
dec
bound
outsl
sub
inc
mov
adc
subb
or
sbb
push
add
lds
lods
in
push
in
xchg
out
inc
push
add
push
dec
ja
jl
icebp
outsb
add
pushf
mov
and
mov
mov
jg
xchg
xor
cltd
leave
addl
and
or
pushf
sub
add
mov
adc
test
cwtl
subb
out
repz
mov
jbe
pop
push
push
stos
dec
mov
mov
lds
fnstenv
sahf
push
inc
inc
cmp
adc
mov
or
push
pusha
push
cwtl
xor
mov
inc
or
sub
insl
inc
sar
ds
and
cwtl
push
add
addb
cli
dec
es
je
mov
jmp
adcb
jle
adc
inc
lock
sbb
jge
in
lcall
mov
adc
sbbl
push
repnz
inc
and
push
sbb
jg
xlat
adc
sub
add
js
add
push
inc
and
dec
sub
push
and
orb
incl
push
or
lcall
decl
adc
add
out
data16
sbb
sbb
fdivrp
or
adc
add
add
or
loope
xor
cli
dec
or
cmp
inc
fisubrs
orl
mov
outsl
and
add
mov
adc
xchg
mov
push
xchg
mov
cmpsl
fsub
enter
outsl
sbb
push
xor
fadds
leave
js
add
adc
push
sbb
and
inc
mov
cld
jmp
mov
pushf
add
dec
and
push
sbb
insb
out
in
inc
cmp
in
addb
or
es
icebp
test
shl
push
adc
nop
jbe
in
clc
mov
inc
dec
lds
stc
cmpsl
icebp
sub
mov
pushf
push
enter
adc
pop
hlt
add
adcl
mov
je
or
push
fadd
or
xchg
adc
mov
leave
cltd
frstor
jb
stos
push
sub
stos
sbb
cmp
inc
jecxz
insb
add
mov
lods
sbbb
std
inc
inc
jns
xor
and
fnsave
mov
ret
fs
mov
xor
out
xchg
cltd
sarb
popa
lods
int
outsb
mov
pop
sbb
jno
mov
jmp
sub
dec
add
xor
rolb
push
call
sub
push
test
icebp
cmp
into
ret
clc
ficompl
fdivr
add
adc
inc
inc
cmpsb
adc
aad
adc
push
in
les
mov
xchg
push
ljmp
mov
popf
add
into
add
push
pop
mov
stc
and
sub
jge
sbb
cli
lock
or
dec
inc
xor
pop
add
mov
sbb
rcrb
dec
stc
push
ret
fildll
stc
jp
and
jb
stc
dec
rorb
into
sbb
orl
dec
shlb
push
inc
cmp
lods
inc
adc
pop
fs
add
sarb
hlt
pop
xchg
mov
out
clc
ljmp
stc
filds
pop
fs
in
dec
clc
sbb
and
ret
sbb
out
popa
ret
add
xchg
xchg
sbbb
addb
les
ja
sahf
call
dec
or
stc
sar
push
and
push
scas
mov
adc
dec
mov
test
js
jle
adc
rorb
add
mov
fiadds
repnz
cmp
mov
pop
mov
pop
push
pusha
add
inc
jns
add
andb
scas
insl
loopne
iret
jb
outsb
in
scas
xchg
push
sbb
mov
inc
add
pop
nop
orb
mov
adc
clc
cmp
push
mov
inc
outsb
sub
add
and
add
call
or
pop
adc
cmc
push
pop
lcall
mov
jnp
fbld
jmp
adc
out
adc
push
and
and
push
push
sub
addr16
mov
xchg
inc
or
cmp
mov
or
les
mov
pop
mov
sbb
scas
shlb
pusha
push
push
push
stc
sarl
pop
add
add
or
fdivr
outsl
sbb
and
jo
testb
or
shrl
mov
mov
popa
scas
out
inc
add
add
fistps
or
out
and
loopne
pop
pusha
pop
sbb
inc
cld
or
inc
loope
shl
add
xor
xor
mov
dec
clc
ljmp
insl
in
inc
sbb
sbb
pop
pop
mov
mov
add
and
out
mov
adc
out
xor
push
inc
mov
pusha
inc
popa
aas
dec
dec
popf
les
inc
stos
adc
addb
test
ret
aam
cwtl
add
mov
inc
xchg
icebp
je
ja
jmp
xchg
cli
dec
jnp
add
adc
xor
push
and
cli
call
shlb
cmp
or
mov
push
pusha
add
or
sub
cmp
sarb
sub
gs
out
adc
sarb
test
adcb
arpl
xchg
test
sahf
mov
and
stos
pop
sbb
icebp
and
inc
and
xchg
and
lcall
loopne
inc
mov
out
inc
pusha
adc
andl
lcall
inc
inc
sbb
pop
stos
jns
mov
adc
adc
cli
pop
mov
xor
dec
inc
adc
rorl
in
mov
add
mov
mov
cwtl
adc
aam
cmpsl
icebp
push
sbb
or
das
mov
jecxz
rorb
add
xchg
add
jg
out
adc
add
sbb
imulb
ret
push
sti
push
xor
outsl
and
inc
in
inc
dec
mov
andb
sub
sbb
adc
mov
shlb
cli
add
aas
les
add
stc
lock
subb
jae
decl
inc
loopne
sbb
imul
cltd
dec
out
inc
aaa
loopne
lcall
push
gs
inc
inc
repnz
jnp
adc
pop
cmp
push
add
mov
add
pop
add
mov
mov
jns
ss
jge
jo
jl
and
out
pusha
lret
mov
aad
sub
loope
xchg
aas
add
xor
mov
insb
jo
sbb
insb
jl
push
pop
jno
or
js
xchg
add
add
imul
adc
aaa
jo
cwtl
push
jo
std
pop
cmp
lock
pushf
xchg
test
nop
pop
xchg
inc
add
or
aas
addb
clc
out
mov
lcall
ficomps
xchg
shlb
xor
lods
pop
clc
or
adc
nop
add
add
add
sbb
sub
cli
outsl
add
jmp
jge
outsb
shlb
nop
mov
mov
add
inc
jns
rclb
adc
sub
ficompl
push
sbb
and
mov
repnz
or
cmpb
lock
sub
xor
fs
out
lods
push
add
cltd
rclb
clc
pop
sub
and
nop
mov
test
add
fnsave
jp
push
lcall
test
stos
out
xor
in
ja
add
ljmp
pop
cli
in
fs
and
cld
stos
cld
cwtl
mov
or
inc
pop
in
incl
adc
stc
mov
jo
ret
aad
xor
pop
sub
xchg
call
loope
sub
lcall
movsl
xchg
test
dec
add
pop
mov
rcr
aad
fbstp
or
shlb
dec
subb
fwait
push
or
push
test
xor
test
push
add
add
add
dec
and
stos
cmp
dec
fcoms
and
rcrb
insb
inc
push
dec
shrb
adc
insb
pushl
stos
les
mov
or
gs
cmp
outsl
repnz
and
ds
push
daa
cli
adc
pushf
or
push
negb
cmp
fwait
pop
adc
std
mov
inc
adc
dec
sbb
sbb
add
mov
adc
std
or
sbb
jo
push
xchg
sub
xor
push
adc
add
push
cli
mov
aam
jo
inc
cli
ljmp
push
adc
cmpsb
pop
pop
inc
adc
push
inc
cwtl
gs
outsl
xchg
loopne
lcall
dec
call
cs
dec
stos
pop
add
ja
pop
ljmp
icebp
dec
fnstenv
add
xor
dec
std
cs
add
adc
lret
je
rcrl
lds
xlat
aam
shrb
test
pushf
push
fisttpl
pop
inc
stc
ljmp
sbb
fwait
add
loopne
add
add
lcall
enter
shrb
decl
mov
dec
stc
pop
fildl
and
jb
or
cmp
pop
gs
or
loopne
push
in
hlt
stc
inc
and
pop
clc
fiadds
pop
adc
icebp
pop
hlt
rorb
fsubrp
stc
jne
mov
cmpsb
push
adc
push
sub
mov
loope
fs
pop
mov
rclb
xchg
pop
xor
add
jnp
jmp
andb
stc
push
and
mov
inc
aam
pop
es
xlat
jo
lds
add
incl
xchg
jl
inc
jb
pushf
lea
test
dec
cli
and
and
add
add
push
and
adc
in
push
mov
push
add
insl
cmp
xor
add
push
cltd
xchg
adc
jge
inc
enter
das
js
add
bound
adc
xlat
adc
call
fbstp
imul
add
dec
inc
and
mov
pop
inc
orb
daa
lock
jecxz
je
or
inc
add
or
dec
stc
das
shrb
repz
aaa
pop
xor
adc
or
incl
gs
inc
test
push
or
lods
cmpsb
xchg
or
lret
push
sbb
loopne
adc
xor
xorb
out
movsl
xor
mov
add
pop
and
or
add
and
push
divl
pusha
mov
push
pop
and
mov
pop
inc
adc
test
inc
icebp
rcr
mov
xor
and
sub
sbb
push
sbb
pop
sbb
add
out
lock
sbb
cmpb
or
shll
push
or
rcrl
push
mov
sbb
push
or
xchg
xchg
and
stc
jae
jo
jmp
scas
and
xchg
rolb
adc
add
adc
push
sub
rdtsc
adc
sar
cltd
add
stc
fbstp
add
mov
xor
mov
mov
add
int3
sarb
or
pop
and
loopne
aas
lcall
xor
adc
cmpsl
rcll
out
or
lock
ja
loopne
inc
cmp
sbbb
fs
push
adc
pusha
xor
call
ret
pop
faddl
lock
sub
out
or
sbb
adc
cld
std
xchg
mov
jl
jns
inc
jnp
adc
add
pusha
addr16
pop
push
pop
or
jo
int3
add
fildl
push
pop
inc
pushf
xor
dec
mov
ljmp
fistpll
sbb
fs
loopne
pop
or
cli
inc
push
add
sbb
outsl
and
pushl
out
lock
and
add
mov
xor
incl
add
test
and
mov
push
xchg
adc
add
mov
cmp
stc
ret
or
xor
mov
ljmp
mov
out
nop
and
rorb
bound
push
stc
mov
xor
adc
xchg
subb
mov
cmp
add
bound
or
push
enter
out
mov
nop
dec
pop
xchg
rcrl
gs
add
xor
sbb
test
orb
add
out
xor
dec
cmpsb
lcall
push
add
nop
rcr
fisubrl
ljmp
mov
shl
shll
cli
scas
inc
cld
inc
xor
lods
add
lea
inc
adc
inc
arpl
push
popf
xchg
ja
inc
jnp
xor
shll
lods
and
push
mov
dec
jl
cmpsl
add
inc
mov
jns
subb
adc
fldcw
insb
movl
clc
or
or
fs
roll
xchg
or
push
dec
inc
and
fwait
mov
push
frstor
gs
mov
lods
or
pop
pushf
add
fildll
pop
jnp
cwtl
push
xchg
inc
xlat
pop
xor
jp
inc
mov
jb
outsb
pop
lods
push
inc
gs
outsb
adc
cmpsb
nop
mov
push
pop
inc
or
push
je
sbb
pop
push
dec
pushf
enter
add
cltd
ret
pop
int3
push
and
test
sub
push
inc
add
bound
std
jge
jge
mov
add
js
ljmp
push
es
mov
inc
jmp
sub
add
add
in
and
andl
pop
xchg
jp
add
jns
add
cmp
sbb
stc
pop
xor
out
scas
push
cmp
jb
loopne
popa
subb
sub
dec
js
andb
add
in
fwait
loope
lcall
fwait
pop
adc
xchg
jmp
adc
pushl
pushf
inc
scas
sbb
adc
adc
add
mov
xchg
lret
dec
or
cmpsb
pop
cli
add
shl
adc
ret
loope
cli
mov
xchg
or
cld
nop
loopne
sbb
orb
sbb
or
sub
inc
mov
fadds
mov
daa
add
dec
sbb
add
add
sbb
ret
and
sahf
and
add
or
xorl
xchg
out
sub
in
loope
shl
outsl
rolb
sbbb
es
enter
xor
mov
add
xlat
sub
adc
mov
addb
jmp
adc
add
mov
shlb
addb
mov
std
lds
shll
addr16
push
andb
mov
std
pushf
dec
add
mov
out
jbe
add
ljmp
add
jno
or
push
pusha
stc
andl
add
inc
fwait
leave
pushf
adc
andb
rol
jp
jge
lods
mov
mov
or
outsb
mov
xchg
fisttps
add
mov
or
add
push
jecxz
sbb
add
sbb
sbb
sub
outsb
mov
sub
adc
rol
xchg
cwtl
xchg
outsb
fadds
rorl
pop
lcall
jg
ret
adc
loop
cwtl
add
push
push
add
pop
fwait
dec
push
clc
adc
outsb
cmp
pop
fisubrs
clc
adc
movsb
or
pop
std
inc
push
inc
mov
insl
inc
and
and
in
jb
ret
mov
gs
test
adc
dec
xor
in
ljmp
scas
ret
shl
fs
fildl
clc
and
aad
test
xor
cmp
add
dec
stos
mov
add
sbbb
fdiv
mov
ret
ficoms
mov
sbb
pusha
pop
inc
xchg
shr
add
rolb
sbb
pop
jo
repz
outsb
cmp
adc
adc
cli
adc
push
arpl
cmp
push
sub
outsb
or
sbb
shlb
loopne
jmp
xchg
out
jo
xor
inc
mov
jo
or
lahf
xor
mov
fsubr
mov
ficompl
and
add
or
dec
rclb
or
sbb
add
je
out
ja
ret
enter
pusha
and
and
jmp
test
call
pushf
adc
shr
mov
xchg
flds
aaa
nop
sub
bound
adc
adc
pop
pop
out
sub
das
adc
iret
pusha
jle
nop
lcall
inc
idivb
mov
sbb
sub
test
pop
orl
sbb
mov
sub
xchg
out
shrl
adc
data16
add
test
loope
mov
mov
testl
aaa
push
dec
popa
add
push
rcl
icebp
add
or
and
jle
fists
cmp
xchg
xor
add
sbb
or
dec
fmuls
adc
jle
inc
sub
mov
adc
pop
addb
add
pop
cli
sbb
fiaddl
adc
mov
movsb
jge
aam
ret
mov
and
ss
in
out
scas
shll
cwtl
or
mov
mov
and
mov
addr16
shlb
and
lcall
cmpsb
roll
add
push
cld
xchg
mov
cltd
enter
fwait
push
and
cwtl
add
andl
ljmp
scas
popa
add
call
lcall
lcall
adc
loopne
in
pop
adc
out
add
in
inc
leave
and
addl
pop
imul
gs
lcall
decl
les
aaa
inc
adc
adc
mov
sbb
ficoms
in
lock
call
adc
das
sar
mov
lcall
xor
into
adc
bound
adc
sbb
pop
and
loop
sbb
and
xlat
pop
and
xor
xchg
and
add
adcl
push
mov
jp
mov
mov
cmp
adc
and
cwtl
push
adc
ret
aam
fistl
mulb
dec
push
shlb
imul
call
sbb
loop
xlat
addb
inc
or
les
fwait
pop
mov
call
pop
and
shrb
cmp
cli
or
sbb
cld
and
push
jne
sbb
or
inc
stc
aaa
mov
insl
subl
or
add
pop
into
jnp
cli
pushl
pop
in
sbb
xlat
pop
adc
add
dec
pusha
push
js
loope
adc
mov
dec
cwtl
ds
std
inc
fisubl
or
stc
cmc
loope
cmpsb
adc
cli
xor
stos
adc
add
mov
stc
add
add
xchg
aam
sub
add
push
cmpsb
and
xchg
and
jmp
pop
lock
xor
pushf
popf
adc
sub
stos
push
inc
jo
nop
int3
push
pop
fs
cli
aas
push
je
sub
push
pop
xor
pop
add
fimuls
clc
fistl
mov
dec
and
std
mov
pop
sub
jmp
stc
and
adc
shrb
or
adc
loopne
and
mov
pusha
pop
inc
pushf
cmpl
clc
call
pushf
mov
add
ja
repz
rolb
test
ffreep
fisttps
xor
stc
push
and
push
mov
mov
push
jno
je
lock
pushf
and
test
das
nop
ss
sub
stc
mov
mov
adc
mov
mov
adc
and
mov
sbb
add
stc
nop
fsubrl
sarb
popf
movsl
adc
add
jl
mov
jle
pusha
or
xor
xchg
repnz
pop
add
jb
dec
imul
aad
sbb
inc
add
loopne
mov
dec
inc
sub
ja
sub
pop
sub
adc
mov
dec
dec
push
push
nop
adc
cld
mov
std
in
mov
shrb
jecxz
or
adc
sarl
pushf
pushf
and
pop
or
lcall
enter
shlb
out
lret
xor
push
xchg
cmp
loopne
dec
dec
dec
test
push
inc
daa
mov
add
lcall
jmp
test
arpl
mov
xchg
mov
jo
jns
and
adc
jnp
lock
decl
dec
xor
jb
mov
push
xor
mov
lods
lea
lret
adc
or
aad
add
cli
push
dec
push
cmp
dec
lock
sub
ds
adc
stos
xor
inc
in
mov
dec
jg
adc
inc
adc
add
addl
rol
es
push
pusha
add
dec
add
nop
mov
xchg
hlt
jg
repnz
mov
shlb
cltd
std
jns
jg
dec
push
add
out
lcall
xchg
mov
or
ficoml
andl
or
in
scas
xor
sar
addb
adc
out
es
fldenv
inc
jmp
lcall
inc
mov
adc
call
dec
stc
xlat
xlat
adc
data16
inc
xchg
push
jnp
pushf
insb
and
jg
mov
loop
pusha
and
orb
loope
adc
mov
rclb
xor
cli
push
cli
sbb
loope
orl
or
or
jns
nop
push
out
cwtl
or
clc
stos
jmp
push
add
add
push
or
mov
dec
push
sbb
outsl
fistl
jb
mov
or
or
mov
enter
icebp
pushf
inc
insb
stc
push
and
mov
pushf
ficoml
sub
inc
cmp
sbb
rolb
jnp
mov
adc
das
sbb
dec
xchg
add
jp
mov
xchg
mov
mov
xorl
or
add
outsl
push
pop
adcb
or
or
clc
xlat
adc
add
push
adc
shlb
cmpsb
or
mov
jb,pn
jge
mov
jge
sub
push
inc
stc
xor
fdivrs
insb
movsl
icebp
and
insl
push
les
mov
outsl
xor
adc
bound
sub
mov
xchg
rcrl
int
xor
icebp
add
jnp
sub
mov
xor
add
push
sub
aam
std
in
and
ss
push
lds
add
xor
mov
dec
aaa
in
mov
add
adc
roll
cmpsb
mov
and
add
xor
sub
loope
dec
cmc
inc
cmp
pop
adc
cmpsb
fstps
push
push
jg
das
xor
jnp
pushf
jp
inc
add
or
sub
cmp
stc
or
arpl
and
or
sub
mov
push
sbb
xchg
push
push
js
or
stos
cmpb
cmp
mov
push
add
roll
lods
push
in
and
cmp
mov
sbb
or
adc
add
sub
bound
mov
add
pusha
dec
mov
dec
or
cs
xor
and
inc
xchg
fcomps
add
jnp
bound
adc
clc
mov
xor
cmp
mov
xor
sbb
sub
in
push
call
aam
pop
push
adc
lcall
jmp
and
faddl
pop
cmpsl
lcall
mov
filds
loopne
rolb
cmpsb
sbb
inc
ljmp
inc
sbb
xor
std
ds
inc
add
sbb
and
lock
xlat
adc
out
test
mov
jno
out
and
adc
cmp
cmp
inc
adc
stos
adc
inc
bound
ficomps
mov
shrb
popf
rorb
push
pop
pusha
sub
in
dec
sbb
add
sbb
push
xchg
sbbb
xor
and
or
xor
mov
add
or
aam
incl
jp
pushw
add
fstps
push
cmp
ret
clc
jg
cmc
into
add
adc
jno
add
pushf
push
and
cmp
orb
lock
shlb
or
ja
inc
stc
mov
and
je
decl
mov
xchg
add
xor
sub
mov
or
ljmp
fst
mov
adc
mov
es
jg
and
cs
mov
adcb
and
jmp
add
jnp
popa
xor
adc
add
icebp
adc
mov
inc
dec
loopne
jmp
adc
inc
add
mov
inc
and
xchg
rcl
add
adc
popa
adc
fucompp
inc
loopne
mov
or
test
jl
adc
ljmp
push
cld
pop
cmp
xorb
and
cli
jo
jno
mov
xor
push
cmp
incl
test
add
insl
xchg
je
push
fmuls
adcb
sbb
pushl
dec
xor
sub
popf
gs
imul
sbb
ret
or
sub
mov
push
or
inc
push
mov
xchg
sub
xor
sbb
or
stos
or
inc
scas
movsl
add
and
dec
sti
mov
dec
push
adc
lods
sahf
popf
add
repnz
rcl
push
out
gs
sbb
dec
dec
dec
cli
in
ja
shrb
or
add
adc
nop
mov
add
push
add
in
mov
roll
nop
movsb
adc
ret
mov
mov
xchg
xor
imul
xchg
icebp
or
pop
popa
push
pop
call
adc
les
fdivrs
sub
xor
inc
das
push
sbb
add
add
push
insl
insl
jnp
sub
add
stc
push
cmp
add
add
push
popa
popa
fimuls
cli
cmpl
rorb
shrl
dec
movl
lock
rclb
aad
test
sbb
shlb
clc
adc
aam
insb
mov
inc
inc
sbb
sbb
push
mov
xor
push
lret
push
jle
incl
aam
adc
inc
pushf
dec
or
and
aad
push
sbb
or
and
inc
insl
jo
or
pop
dec
fidivl
cmp
sbbb
cmp
sub
push
add
or
sub
cli
pop
and
insl
sti
pop
ret
sub
orb
jl
sub
adc
jno
fwait
aam
pop
outsb
lcall
and
push
sbb
and
jb
sub
sbb
aad
js
test
mov
push
mov
hlt
decl
xchg
aas
sub
inc
xor
fsts
mov
gs
sbb
loop
cld
fiaddl
add
add
sbb
enter
lcall
jnp
adcb
cmp
push
push
and
sub
dec
pushf
movsl
test
popf
shlb
lods
add
outsl
or
inc
pop
int3
inc
dec
or
inc
test
jns
add
pop
adc
jmp
and
adc
pop
gs
dec
mov
push
jns
inc
mov
jo
add
adc
mov
nop
inc
add
mov
cmp
sub
call
add
cmp
insb
cwtl
adc
stc
xor
add
add
add
jnp
addl
ja
push
and
add
jne
je
xchg
subb
pop
stos
mov
sub
addr16
das
shlb
cmp
add
inc
and
mov
lea
dec
addl
pop
in
mov
stc
fldcw
stos
aam
inc
xchg
sub
inc
outsb
shrb
add
mov
pop
insb
lds
rorb
imul
icebp
out
inc
lret
inc
pop
lcall
or
add
cwtl
mov
add
push
jb
xor
xchg
sbb
pop
and
jo
or
xor
stc
adc
push
movsb
add
lods
inc
dec
addb
shl
mov
or
sbb
mov
or
jg
roll
add
xor
adc
in
or
and
cwtl
add
ja
fisttps
adcb
sbb
or
sbb
pop
mov
loopne,pn
jns
inc
jle
sbb
scas
mov
shrl
add
adc
pop
pusha
jne
mov
sub
and
jg
shll
mov
dec
inc
inc
jns
and
xor
call
push
sbb
or
outsl
or
push
adc
loop
mov
cmp
sub
loopne
lret
inc
ja
loopne
fcmovb
adc
mov
add
pop
pop
sub
sub
cmpb
sbb
and
add
and
ficompl
jno
cwtl
add
popa
rcr
push
mov
jbe
pop
sub
js
add
outsl
aam
mov
xchg
add
cltd
adc
lds
ss
dec
stos
cmpb
inc
cmpb
fs
inc
push
xchg
push
scas
pusha
push
jnp
and
mov
push
add
fildll
inc
jo
push
pusha
sbb
subb
adc
pop
or
shlb
push
mov
scas
cli
sub
or
push
sbb
clc
pusha
adc
or
add
daa
add
lret
push
add
pusha
fcoms
int3
or
push
mov
pop
sub
xchg
ret
add
loopne
ficompl
lcall
or
xchg
mov
mov
and
add
push
dec
xchg
pop
clc
fistl
addl
cmp
push
out
loopne
ret
movsb
hlt
mov
push
or
test
xor
inc
mov
outsl
pop
enter
xor
mov
or
add
cli
pop
mov
ja
dec
bound
jmp
bound
aam
mov
adc
add
loop
add
sti
outsl
adc
add
and
adc
dec
aam
inc
mov
pusha
inc
fs
inc
push
jp
add
adc
lahf
jo
mov
lods
pop
call
add
sub
mov
mov
stc
push
pop
cld
fcomip
jmp
js
cltd
inc
push
or
adc
inc
int
add
cld
pushl
jmp
stc
sar
or
lahf
dec
std
stc
mov
loope
bound
adc
add
mov
cwtl
push
sub
loope
or
loop
pop
push
pop
and
inc
adc
ret
adc
insb
mov
cli
mov
jo
mov
add
push
push
inc
mov
mov
ja
and
or
cmp
cltd
bound
push
pusha
aad
arpl
scas
stos
sbb
scas
cmp
xchg
rcrl
dec
sar
iret
addl
gs
xchg
popf
loopne
decl
xchg
sub
dec
clc
cltd
inc
inc
adc
and
push
rclb
cld
orb
inc
adcl
call
push
lcall
jb
fdivs
and
cmpsl
inc
es
aam
sbbb
mov
es
mov
ja
lcall
out
or
loop
add
sub
loopne
in
inc
or
adc
or
lods
sub
ljmp
cmp
gs
or
das
es
stos
lfs
ret
adc
add
sub
mov
add
rorb
lcall
mov
je
mov
cli
adc
mov
and
nop
sbb
inc
gs
add
fcomp
mov
imul
inc
push
push
mov
sbb
push
push
xchg
rorl
sub
mov
add
jbe
xor
add
jae
push
mov
notb
push
push
or
jo
adc
cwtl
jo
add
inc
incl
rcll
negb
add
test
ja
jb
push
xchg
aaa
lods
add
add
ss
xor
adc
arpl
outsl
mov
adc
and
test
add
mov
inc
mov
pop
lock
fs
or
or
cmc
mov
jns
xor
sarb
add
add
dec
add
cli
mov
inc
sub
addr16
or
call
fs
or
clc
jge
push
rcrb
rolb
mov
add
fcomip
jnp
sbb
pop
mov
or
nop
add
inc
repz
dec
mov
shll
inc
adc
cmp
xor
lock
adc
popf
mov
sub
dec
rolb
daa
cli
sbbb
leave
out
dec
inc
push
cmc
inc
psubd
inc
cmp
nop
add
add
pushf
jl
mov
xchg
add
mov
jno
mov
push
xor
dec
pop
rorl
fnsave
add
xchg
outsl
jge
enter
push
jns
leave
pushw
fwait
add
idivb
add
cwtl
adc
pop
cmp
nop
xchg
ja
aam
jnp
incl
jecxz
add
sub
iret
push
push
loop
add
lock
std
or
arpl
cmpsb
mov
stc
addr16
decl
inc
sbb
loop
stc
or
dec
jns
add
or
or
sbb
clc
stos
cmc
add
popf
pop
inc
in
and
or
and
mov
mov
push
stc
enter
aaa
icebp
mov
fwait
pop
movsl
mov
or
mov
sub
add
add
test
or
pop
test
or
mov
out
nop
dec
jo
ja
out
cmp
cmp
sub
addr16
lock
mov
push
rclb
push
clc
les
std
pusha
aaa
xchg
xlat
mov
addl
imul
inc
add
inc
push
fildll
push
je
inc
xchg
cmp
loopne
inc
xchg
or
add
push
sbb
or
shrb
xor
sub
mov
and
stos
fidivrs
adc
pop
or
inc
xchg
fwait
add
mov
daa
clc
sub
jne
call
cli
lcall
hlt
bound
cmp
push
and
and
mov
gs
xchg
inc
decl
adc
sub
popa
xchg
push
add
ljmpw
mov
je
mov
cs
pop
mov
aaa
pop
add
mov
pusha
push
sub
loop
dec
cmp
rcll
stc
insb
pop
cmpsl
fdivrl
mov
lock
and
nop
xchg
adc
xor
fisubl
loopne
pop
xor
sbb
pop
push
jbe
sbb
xchg
adc
cwtl
pop
jns
push
xor
mov
call
clc
cmpsb
mov
popa
adc
pusha
stos
jo
add
push
popa
ret
rcl
add
mov
or
mov
stc
das
mov
lods
int3
ss
or
bound
pop
push
jnp
fimuls
pushf
lods
xor
lcall
push
shlb
outsl
inc
sub
andb
or
ds
jb
add
enter
cld
fwait
outsb
cmp
inc
add
add
mov
add
jg
xchg
fiaddl
adc
pop
add
add
push
or
out
sbb
push
pop
mov
mov
es
or
add
rcr
outsl
pushl
add
jne
adc
loopne
nop
or
sbb
inc
dec
popa
xor
int3
fs
test
fisttps
pusha
mov
dec
pushf
mulb
xchg
and
adc
and
dec
aam
add
push
xchg
mov
sar
inc
jl
dec
cwtl
outsl
jne
pop
loopne
xor
adc
jo
jg
or
xor
clc
xor
dec
ss
pop
jo
fidivrl
mov
rorl
mov
loope
mov
rclb
subb
jg
les
outsl
ja
jle
xchg
ss
dec
or
push
out
pushl
rcll
and
and
and
testl
adc
jg
incl
stc
popf
not
movb
mov
insb
sbb
add
pusha
dec
pusha
ret
call
sbb
jle
ja
push
pop
adc
xchg
ret
loopne
das
pop
fimuls
sub
add
dec
add
mov
xchg
add
sub
push
add
xor
stc
dec
rcrb
adc
out
cmpsb
decb
adc
add
cwtl
es
shl
adc
dec
sarl
sbb
adc
pushf
test
nop
aam
mov
jg
mov
and
inc
or
aad
add
adc
pop
ja
jg
mov
or
add
int3
adc
std
fistl
push
inc
and
andl
pop
mov
iret
or
int3
pop
xor
out
sarb
testb
and
nop
pop
or
adc
mov
jns
loop
jg
or
sbb
cmpsb
imul
ss
sbb
adc
push
stos
xchg
sahf
sbb
inc
xchg
lret
add
sub
lock
dec
mov
jmp
mov
js
mov
adc
push
add
stos
mov
dec
dec
iret
insl
xchg
xchg
adc
int3
xchg
clc
xor
sbb
add
cld
gs
xor
pop
add
adc
es
std
ja
xchg
lods
je
or
add
jo
add
loopne
mov
adc
mov
cs
enter
adc
loop
fmuls
push
dec
mov
call
stc
or
loope
je
xor
add
adc
sbb
xor
dec
add
inc
call
pop
addl
mov
add
int
test
std
testb
aam
add
or
and
in
outsb
dec
pusha
or
rcrb
add
add
xchg
pushf
rcrb
pop
xorb
test
insl
inc
mov
mov
add
adcl
cli
test
inc
ljmp
shlb
mov
sbb
push
sahf
sub
in
mov
fdivs
ljmp
cmc
mov
incb
add
push
test
pop
sub
sub
dec
cmp
mov
enter
adc
out
scas
adc
ljmp
addl
test
push
adc
and
inc
lds
and
inc
sarl
inc
mov
dec
out
cmc
scas
inc
andb
or
std
aad
push
add
mov
cmp
es
dec
mov
out
test
lods
shrb
testb
rolb
add
add
pop
inc
xchg
mov
cli
add
or
or
xchg
inc
jb
cmpb
add
sub
les
sbb
push
jnp
add
popf
add
fildll
jl
xor
sbbb
push
je
sbb
jg
orl
inc
add
out
sub
les
adc
idivb
rclb
out
or
add
ljmp
es
clc
push
inc
push
cltd
lea
add
pop
ja
flds
and
inc
push
inc
cmpsb
sbb
mov
clc
mov
and
cld
fcos
or
fistpl
pop
inc
decl
lock
lcall
rcll
dec
hlt
aaa
loop
or
pmulhw
mov
out
popa
repnz
xor
jg
sbb
mov
xor
mov
and
add
push
fs
cwtl
dec
inc
call
dec
adc
adc
push
in
mov
int3
aas
inc
push
sahf
inc
adc
call
pushf
ror
shrb
fcoms
rol
adc
xor
cli
dec
stc
pop
addb
lock
dec
add
shl
loopne
les
ret
out
cmp
in
les
aam
inc
fsubrs
rcll
xor
jg
add
gs
push
push
clc
or
pusha
add
clc
add
mov
push
cmp
outsl
shr
inc
xorl
pusha
fidivrl
mov
or
cmpsb
push
scas
sub
dec
fistps
inc
push
mov
pop
mov
pop
xor
or
cld
movsb
popa
add
pop
mov
pusha
gs
pusha
push
jns
outsb
and
addb
jmp
cmp
and
icebp
subb
sbb
mov
xchg
xchg
sbb
out
clc
ja
mov
pop
std
out
xchg
pushf
xor
mov
dec
sar
fistpll
push
int
xor
xchg
add
movsb
and
pop
pusha
mov
jl
or
mov
jne
ds
cmc
ljmp
push
enter
das
or
out
and
stos
clc
ja
dec
loope
inc
push
lahf
faddl
add
loope
and
and
mov
mov
or
out
stc
dec
int
insl
push
dec
mov
xchg
test
or
or
push
lock
sbbl
es
test
cmp
cmp
sub
cld
pop
mov
and
or
push
xchg
or
and
loop
or
xor
das
ss
clc
mov
xchg
outsb
ljmp
inc
or
xor
and
pushf
js
in
incl
or
adc
mov
or
add
mov
les
subl
xlat
jns
push
arpl
inc
cmp
adc
lods
loopne
in
pop
push
sub
inc
imul
sarb
pushf
push
dec
mov
decl
adc
mov
cmpsb
pusha
and
and
stc
adc
dec
inc
push
adc
add
popa
mov
dec
pushf
push
push
incl
fisubrl
loopne
je
stos
pop
adc
pushf
pushf
test
sbb
shrb
nop
shlb
rorb
add
add
inc
inc
inc
and
or
pushf
push
fadds
adc
jb
xchg
xchg
imulb
mov
or
xlat
fs
cmp
add
jb
jno
aam
inc
std
pushl
or
and
xor
fists
lods
push
add
ds
scas
rclb
adc
ljmp
pushf
add
add
sbb
dec
call
rclb
lret
sbb
cld
inc
pop
lret
sub
insb
loopne
scas
js
lds
pushf
out
add
add
or
testb
stc
jns
js
or
and
mov
ret
int
mov
outsl
fwait
adc
sbb
sub
lds
je
cmp
adc
pop
fs
out
jo
ds
push
out
rcrb
popa
inc
in
xor
mov
shlb
adc
jecxz
fwait
sbb
pop
in
push
ljmp
adc
push
xor
xlat
push
add
es
add
inc
outsb
sbb
push
cmpsb
pushf
loope
sub
in
push
cltd
pop
ja
fwait
mov
adc
out
fcoms
rolb
or
or
fbld
fs
sbb
pushf
and
mov
decb
gs
xchg
adc
pop
mov
cmpb
add
fcmovnu
sbb
es
fidivs
inc
cli
cmc
mov
inc
test
inc
mov
mov
push
or
adc
aaa
test
enter
mov
rcr
adc
add
pushf
add
in
pushf
inc
icebp
cmp
cmc
aaa
and
inc
addl
shrb
jecxz
ret
adc
push
xor
push
cmpsb
or
jmp
std
lock
jmp
cltd
mov
inc
stc
xchg
cs
stc
clc
in
adc
and
xchg
hlt
lods
popa
xchg
das
push
push
scas
fs
or
loopne
lock
cli
adc
stc
mov
or
rcll
cld
dec
jg
mov
loope
mov
or
and
rolb
shll
lcall
adc
dec
test
sub
inc
add
daa
inc
add
icebp
and
pop
pop
sub
mov
lds
test
sbb
push
add
dec
xor
xchg
mov
mov
es
pop
mov
add
call
jo
inc
or
adc
cmc
and
pusha
dec
icebp
cli
mov
jle
dec
stc
dec
inc
push
fs
add
mov
idivb
add
add
stc
sbb
sub
add
mov
add
loop
push
test
mov
out
icebp
add
ret
insb
dec
mov
test
mov
xchg
std
add
scas
lahf
adc
xor
push
lahf
sbb
lahf
cs
ret
clc
fs
mov
idiv
pop
add
adc
pop
push
out
xchg
in
sbb
test
sub
push
sub
std
aaa
stos
test
sub
inc
inc
stc
mov
out
or
aaa
push
and
or
add
aad
or
inc
and
es
ljmp
loop
loopne
add
lcall
lock
dec
addr16
loopne
rcl
add
rcrl
mov
and
incl
sbb
adc
dec
sub
add
push
adc
mov
stc
mov
xchg
adc
xchg
and
add
sub
stos
jle
ljmp
outsb
outsl
xbegin
arpl
adc
inc
enter
inc
loope
out
adc
inc
xchg
dec
cli
and
loope
sbb
xchg
sub
loop
add
push
adc
sbb
or
icebp
dec
add
lds
dec
mov
imulb
movsb
out
adc
and
shrb
js
inc
push
inc
jb
push
sti
mov
lock
mov
dec
clc
icebp
xchg
loopne
stc
fnsave
adc
sub
aaa
pop
addb
dec
inc
sub
adc
adc
mov
mov
es
mov
xchg
stos
push
sbb
pusha
adc
mov
in
jg
and
std
inc
add
sub
cmpb
jmp
icebp
pop
bound
add
push
std
sbb
adc
or
lock
mov
push
xor
sub
sbb
in
push
ret
sub
mov
xchg
jg
hlt
push
push
xchg
xchg
push
dec
cli
push
xor
xor
lock
mov
inc
std
jo
adc
lea
adc
xchg
addb
sub
sub
sar
or
mov
mov
add
les
loopne
out
fcom
and
or
clc
cltd
push
jecxz
add
push
push
pop
sbb
cmp
outsb
testb
faddl
lret
push
jno
xor
mov
das
hlt
jmp
rcl
js
test
jb
jbe
shlb
lock
xchg
sub
imul
push
out
cmpsl
loopne
cwtl
inc
mov
out
pushf
push
and
ret
cli
mov
fwait
inc
out
push
movsb
cmpsl
fisubl
call
add
out
xor
sub
adc
jnp
and
jp
test
fistpll
and
adc
sbb
adc
cmp
mov
cli
inc
or
addb
sub
fcomip
jae
js
fsubrl
push
add
js
ja
inc
adc
or
add
inc
cli
adc
loope
add
add
mov
push
adc
jl
add
pop
mov
adc
test
pop
add
adc
inc
adc
test
push
stc
bound
sbb
xor
test
xchg
ds
scas
add
lock
lcall
add
sbb
xchg
rolb
cli
add
inc
inc
js
sub
push
mov
loopne
inc
das
adc
and
test
lods
out
aad
loope
push
add
mov
dec
sbb
inc
sbb
loopne
js
ljmp
decl
insb
jmp
mov
mov
or
cli
out
stos
inc
sub
or
inc
bound
popa
jns
mov
cmp
sub
fcompl
cmp
fisubs
js
lock
cmp
orb
aam
or
pop
fwait
or
push
ljmp
add
and
ljmp
or
adc
shll
add
jg
mov
cli
test
add
add
roll
clc
cmp
or
xchg
add
pop
nop
stos
inc
mov
mov
cwtl
fcmovnu
or
xor
cwtl
dec
fstpl
inc
or
rclb
jle
cwtl
dec
clc
or
push
xchg
or
adc
scas
xor
xor
push
push
dec
js
mov
cli
rclb
rclb
mov
or
mov
push
jbe
aam
loopne
xchg
xchg
mov
lcall
orl
test
test
jo
imul
pop
mov
mov
pusha
add
push
mov
scas
das
sbb
in
or
test
jo
rolb
insl
mov
lret
rcrb
aad
mov
add
mov
inc
imul
mov
mov
add
cmp
add
sahf
mov
xchg
out
and
pop
pushf
inc
adc
sbb
call
pop
adc
mov
add
jne
dec
push
add
sbb
lds
pop
jle
add
jmp
and
jle,pt
mov
push
or
in
mov
sbb
dec
pop
cld
sbbb
data16
rorb
paddsw
xchg
sub
add
push
add
orb
push
andb
or
nop
insb
sbb
loope
scas
es
sbb
mov
inc
icebp
fwait
addb
xchg
adc
xor
mov
xchg
outsl
xor
loope
outsl
xor
add
rcll
fiaddl
adc
or
mov
lss
insl
int
inc
jecxz
and
mov
add
xchg
clc
or
les
sbbb
add
or
push
xor
inc
orb
add
dec
sub
or
outsl
ljmp
lea
roll
pop
cmpb
andb
outsb
jmp
inc
xorb
xchg
adc
mov
and
xor
pop
rorb
pop
cmpb
cmpl
xorw
inc
loope
or
in
sbb
or
pop
in
mov
mov
rol
test
pop
or
add
icebp
test
js
data16
clc
aaa
xchg
mov
jbe
inc
imul
jg
mov
xchg
jmp
add
shlb
insl
adc
xor
add
mov
lcall
jl
inc
fs
arpl
jle
cmpsl
es
jb
sbb
sub
arpl
movsb
pop
or
or
inc
unpckhps
arpl
subb
dec
adc
dec
pop
rol
sub
andb
pop
test
insl
shll
popa
movsb
fiaddl
jmp
add
inc
jl
xchg
sbb
xor
lcall
pop
sbb
xchg
mov
or
rolb
dec
mov
addr16
inc
cld
cwtl
inc
add
call
addb
sbb
or
mov
rcrb
loopne
adc
inc
inc
add
les
mov
pop
cmpb
add
adc
inc
sub
dec
push
xchg
xor
cmpsb
cwtl
adc
addb
lock
scas
mov
call
movsl
jno
cmp
pop
adc
push
adc
adc
cwtl
add
add
sbb
xor
in
fs
and
sub
outsb
addb
aad
adc
clc
and
pusha
jno
sub
adc
xor
push
mov
subb
shr
cmpb
mov
or
gs
jns
jns
ds
and
or
and
mov
rcl
mov
mov
cmpb
insb
inc
adc
roll
loopne
roll
mov
add
adc
ret
adc
or
icebp
decl
adc
addl
mov
mov
dec
fildll
pop
or
imul
add
fisttpll
sbb
out
std
call
cmp
sub
dec
jns
xchg
or
add
dec
push
lret
imul
and
popa
lods
dec
mov
adcl
gs
jns
pushf
xchg
imul
push
add
add
mov
mov
push
xchg
xchg
add
orb
xorl
xchg
pop
mov
add
add
jns
xchg
mov
popf
mov
ljmp
xor
pop
enter
cwtl
push
incl
iret
inc
sub
in
mov
jmp
or
adc
pop
test
outsl
xchg
inc
and
cmpsb
add
mov
sbb
or
sar
inc
and
lcall
mov
sub
adcb
movsb
pop
sub
pushf
push
adc
xchg
sub
mov
sub
pop
xchg
lock
adc
mov
or
pop
inc
std
xor
push
ss
push
loopne
xchg
add
jg
lcall
adc
mov
push
inc
fadds
or
inc
fadds
stos
fcoms
or
xor
sbb
clc
lock
mov
dec
mov
adc
loopne
loop
clc
in
inc
gs
fimull
adc
pusha
add
mov
cmp
clc
mov
into
pop
adc
rcl
pusha
or
add
mov
jbe
rolb
add
movsb
fisubrs
jno
adc
adc
mov
dec
dec
fnstenv
adc
test
sbb
or
dec
or
jae
push
lods
dec
mov
out
call
push
jle
add
pop
mov
ficoml
fstps
hlt
sub
addb
cli
aas
jbe
mov
fistl
subl
jno
rcrb
push
adc
ljmp
insb
push
pushf
adc
pop
add
inc
data16
pop
adc
rcr
lcall
or
jo
push
nop
cmc
pusha
cli
lcall
cwtl
shlb
xchg
jg
cmp
lret
sbb
pop
lcall
jo
or
jmp
add
xchg
bound
dec
ljmp
jmp
in
sbb
push
adc
push
or
add
xor
xchg
outsl
or
mov
cmp
mov
push
mov
jnp
add
sub
gs
push
adc
ja
dec
mov
add
addl
xchg
cld
movsb
aam
dec
sbb
fcomi
aaa
push
adc
stc
call
pop
add
cmp
sarl
aad
fnstcw
xchg
out
sub
mov
push
pop
cmp
mov
cmc
ja
sub
push
les
jo
addb
cli
incb
cltd
mov
adc
xor
repz
jle
test
repnz
push
sub
pop
push
lock
mov
sbb
cli
cwtl
rolb
roll
inc
fwait
rolb
sub
push
outsb
add
das
xor
push
mov
push
adc
test
mov
addl
je
add
fs
inc
add
in
xchg
pop
push
mov
insl
sti
fwait
inc
add
and
inc
push
xor
scas
push
or
in
or
push
push
mov
jge
xor
sub
in
mov
rolb
loop
mov
decl
push
adc
and
push
mov
ljmp
inc
lahf
lea
clc
pop
pavgb
push
xchg
or
inc
push
lock
add
sbb
adc
push
movsb
adc
add
sub
fdivr
sbb
and
or
add
cwtl
push
faddl
push
test
into
and
mov
lock
and
clc
cmp
add
test
addr16
and
push
cwtl
addb
rcrl
sahf
mov
add
add
add
add
cmp
aas
cmp
adc
adc
pop
lcall
test
sar
push
adc
rcrl
xchg
icebp
loop
xchg
push
jmp
inc
push
xchg
jo
or
jne
adcb
xor
add
xor
adc
or
call
mov
ljmp
hlt
adc
xchg
and
or
cmc
icebp
or
mov
push
cwtl
pop
dec
js
sbb
jnp
push
add
in
clc
pushf
or
jecxz
pop
nop
push
out
adc
inc
add
imul
aaa
mov
add
dec
movsb
hlt
add
mov
add
xchg
adc
push
add
fwait
mov
mov
out
push
add
xchg
jmp
mov
xchg
xchg
cmpsb
push
adc
outsl
cmp
xor
sbb
cmp
sub
rclb
gs
sub
add
mov
adc
push
cmp
xchg
add
mov
or
cmp
jno
movsb
loopne
pusha
pop
je
inc
aas
inc
add
lds
aas
sub
lock
cld
dec
gs
push
adc
mov
pop
mov
data16
cmpsb
bnd
xlat
aam
adcb
sub
adc
lock
xchg
mov
data16
popa
sub
and
data16
sbb
and
imul
or
jle
or
add
adc
mov
stos
push
add
icebp
mov
ss
cmpsb
mov
xor
pushf
sub
pop
ret
add
addl
mov
lcall
int3
or
pop
mov
cmc
fwait
movsb
fbld
xchg
lods
lock
xchg
mov
cmp
aas
movsl
adc
adc
adcb
aaa
cwtl
cld
inc
add
mov
add
dec
adc
cld
ss
loope
inc
add
or
jbe
add
sbb
ljmp
dec
imul
fwait
loope
xchg
faddl
and
aam
sbb
imul
mov
mov
sub
lcall
ret
push
sbb
push
incl
adc
lock
nop
pop
push
xchg
fbstp
test
stos
add
mov
pop
std
add
imul
jb
test
in
sbb
daa
outsb
or
pushl
xchg
ljmp
stos
lock
pop
aaa
push
mov
push
scas
xchg
adcb
xchg
clc
inc
add
cmp
sub
insl
aas
inc
jp
pop
xor
inc
add
loop
fimull
jnp
or
jg
bound
dec
in
mov
lcall
test
add
pusha
mov
decl
pusha
or
xor
and
sub
data16
fildll
into
clc
mov
mov
xor
push
xchg
push
arpl
jmp
pop
data16
icebp
fmuls
hlt
adc
movsb
add
fprem
push
adc
xor
adc
andb
add
es
or
add
push
pop
movsl
inc
push
add
and
pop
xchg
sbb
cmp
add
cli
sbb
push
push
mov
mov
push
mov
xor
lea
into
push
fldcw
mov
push
ret
in
jmp
jp
adc
shrl
outsl
inc
adc
sub
add
loope
inc
inc
or
loop
movsl
je
fcoms
xlat
add
imul
add
push
test
fcomps
inc
push
nop
adc
hlt
sbbb
dec
clc
loopw
xor
and
jp
push
dec
and
adc
cwtl
and
negb
rolb
adc
mov
adc
call
in
insb
adc
arpl
call
add
or
orl
in
add
popl
mov
fs
test
mov
std
cli
movl
dec
xor
lods
jg
mov
cli
jecxz
add
and
inc
lock
pop
add
add
adc
push
or
addb
add
mov
daa
fcomps
mov
subb
jmp
imul
mov
xchg
dec
in
cld
add
dec
in
adc
sub
lods
call
bound
jo
or
loopne
sub
inc
push
clc
add
push
add
dec
xorb
stc
es
pop
sahf
test
mov
adcb
addb
inc
sub
fs
ficoml
jge
jb
insl
add
sar
std
bound
cmpb
mov
orb
or
jg
test
pop
xchg
call
xorb
ret
xor
mov
add
test
shll
adcb
test
fiaddl
push
push
adc
or
sti
adc
addr16
adc
outsl
fwait
incl
xor
out
xor
inc
or
sbb
rorb
inc
or
jno
or
sbb
jbe
rcl
in
push
clc
pusha
pop
inc
xchg
sub
decl
mov
pop
or
lahf
and
lret
or
push
vxorps
inc
or
mov
stos
sbb
mov
vrsqrtss
mov
sahf
jge
add
jp
push
cmp
inc
addr16
add
std
lcall
push
ret
push
xchg
insl
out
push
sti
addr16
ja
lds
sub
cmp
or
inc
pop
subb
mov
cmp
push
xchg
xlat
push
lock
jg
sub
and
rolb
push
shl
inc
sbb
outsl
incl
sarb
push
ds
or
loop
and
js
add
push
sbb
sbb
adc
sbb
clc
out
mov
or
sbb
add
jbe
clc
int
arpl
popa
add
sbb
push
popa
popf
adc
ret
rol
std
popa
insl
jecxz
subb
pushf
push
mov
dec
pop
loopne
xor
mov
ret
cltd
in
js
nop
dec
andb
js
inc
sub
in
aaa
cmp
mov
lods
gs
add
sbb
ss
loopne
dec
xchg
and
shll
ljmp
stos
cmp
mov
sub
mov
lock
and
push
loopne
test
add
add
cmpsb
jg
pop
add
and
jge
push
sbbb
jmp
test
cli
fwait
pop
gs
rcrl
add
int3
ret
roll
pop
cmpb
pop
mov
and
or
adc
lret
sub
mov
mov
add
cli
add
sub
fistpl
mov
loop
or
xor
adc
int
fwait
pop
adcb
add
and
fisubs
add
pusha
cli
mov
fsubl
shrl
icebp
fisttps
mov
shll
adc
clc
push
inc
xchg
jg
jmp
add
mov
sbb
push
lahf
xchg
clc
fisttpl
sbb
gs
xor
xchg
mov
jno
test
and
subb
orl
call
clc
push
cli
imull
or
and
or
mov
fsubrs
and
and
add
sbb
xchg
sbb
test
fdivr
xor
mov
scas
xor
or
in
jmp
sbb
movb
add
inc
or
clc
icebp
and
stc
add
jg
decl
test
push
adc
sbb
test
and
xchg
cwtl
push
aaa
add
clc
lea
mov
xor
jp
pusha
adc
or
outsl
add
arpl
push
cmp
add
popf
loopne
pop
rolb
mov
lcall
sbb
sbb
rclb
cmp
je
in
xchg
lock
enter
data16
fildl
pop
add
mov
loopne
bswap
clc
int3
and
insb
or
dec
mov
lret
sbb
adcb
dec
xchg
sbb
incl
cli
jns
pop
insl
jo
pop
inc
js
add
xor
and
std
add
inc
cli
loope
test
mov
call
xorl
cmp
aaa
in
adc
adc
loopne
fisubs
add
mov
imul
ss
ss
aaa
int
mov
divb
or
roll
loope
scas
clc
fwait
adc
sub
sbb
ss
inc
mov
into
ss
add
lcall
fnstenv
ret
mov
jbe
leave
iret
xchg
xchg
push
jmp
scas
cli
push
les
jo
pop
pop
int3
xchg
inc
shl
jnp
pop
lds
cmp
cli
pushl
mulb
cwtl
mov
clc
push
mov
dec
xor
in
or
cmp
xchg
mov
fs
jmp
xorl
jg
push
or
clc
jno
sub
cld
mov
add
pop
mov
add
push
push
sbb
push
sub
outsl
push
call
insl
sar
mov
sub
fdivrl
sbb
inc
add
insb
out
out
jo
loope
push
fstpt
and
pop
mov
addb
or
aaa
fists
nop
cmp
bound
insb
clc
cmpsb
mov
ljmp
fiaddl
test
arpl
mov
daa
push
lcall
fdivl
cmp
adc
fs
adc
jno
inc
shlb
out
add
dec
push
adc
iret
clc
pop
push
adc
push
mov
add
add
sbb
xor
add
xchg
into
inc
sub
ret
mov
outsb
xlat
xor
das
jbe
xor
pop
xlat
fldt
lods
cld
ja
test
addb
add
test
shrb
push
mov
inc
rolb
fcomip
data16
js
shll
adc
push
sarb
in
and
jmp
clc
xor
jo
dec
pop
hlt
idivb
call
js
sbb
pop
add
outsb
xchg
lret
lock
add
add
pop
xchg
fwait
test
pop
cmp
cli
pop
xor
jbe,pn
cmpsl
sar
in
push
shlb
loop
jo
or
movb
mov
mov
dec
lock
stos
pop
mov
adc
inc
sbb
dec
xor
pop
mov
push
or
or
xchg
insb
cli
imul
xchg
mov
lcall
push
fcompl
loop
mov
jbe
sbb
dec
and
cmp
push
std
add
xor
pop
push
sar
or
les
fisubl
cmp
rolb
test
and
xor
mov
jnp
test
mov
pop
add
fldl
nop
add
adc
insb
ficomps
dec
lods
inc
lods
pusha
or
xlat
or
incl
call
adc
stc
cmpb
nop
out
or
push
and
fistps
out
addr16
popa
pop
add
and
push
ljmp
out
clc
rorb
or
jle
bound
mov
clc
mov
or
lahf
adc
adc
movsl
ljmp
xor
lock
cmp
mov
jecxz
iret
add
add
into
xorl
cmp
test
dec
ret
add
push
outsb
ret
outsb
add
sbb
sldt
or
nop
sub
loopne
nop
and
xor
jmp
cli
and
mov
popa
dec
stc
ds
xor
test
lahf
es
in
push
push
pop
jl
adc
push
and
push
adc
adc
inc
mov
aam
lcall
mov
sbb
mov
outsl
xchg
mov
and
retw
mov
movb
pop
hlt
pop
xor
mov
push
test
cmc
push
pop
sub
or
inc
clc
out
add
push
sbb
fwait
adc
cwtl
lock
insl
adc
bound
add
test
mov
inc
jg
stc
inc
xor
jae
seta
arpl
mov
adc
or
mov
inc
lock
lock
mov
les
enter
mov
data16
inc
test
addb
into
push
lcall
cwtl
push
pop
lods
mov
ret
xchg
adc
into
jl
test
pusha
add
cwtl
dec
std
or
or
sub
std
cwtl
insl
adc
add
jmp
es
push
adc
jge
decl
clc
push
xchg
add
and
xor
cld
inc
add
clc
loopne
fmuls
sub
sub
enter
gs
lcall
push
jns
out
ss
or
pushf
cmpb
add
pop
dec
push
popa
add
sbb
jg
sub
xor
xor
shlb
cmpsb
es
push
clc
add
pop
and
jecxz
and
inc
xor
adc
mov
hlt
dec
push
add
inc
pop
and
pop
ljmp
pop
lds
jbe
or
ret
mov
cwtl
insb
leave
aaa
pop
test
sbb
loope
jo
int
or
push
fnstenv
jo
cmpsb
int
adc
clc
jge
xor
pop
inc
in
inc
xchg
int
push
decb
subb
xor
addr16
fwait
add
jo
scas
xchg
adc
xchg
imul
inc
cmpsb
push
sahf
adc
adc
icebp
pushl
push
inc
shlb
xor
test
push
test
xchg
subl
cwtl
and
scas
xchg
rclb
bound
inc
cs
fs
and
orb
sbb
jp
inc
inc
and
test
inc
fadd
pop
int
cmp
fiaddl
incl
addb
inc
or
push
gs
out
ret
clc
pushl
clc
popf
adc
xchg
push
iret
pextrw
or
sysenter
lcall
push
add
adc
mov
cmp
fists
sub
cld
mov
loopne
pop
incl
adc
inc
stc
movsl
adc
andb
scas
sbbb
dec
in
or
or
ljmp
pop
std
bound
or
imul
loop
pop
imul
pop
or
add
xorl
stos
insl
stos
subl
decw
rclb
mov
mov
dec
jbe
mov
and
lcall
aaa
ja
or
fistl
ja
adc
cmp
add
clc
jmp
hlt
inc
and
inc
fists
inc
add
add
pop
push
icebp
sub
int3
pushf
movsl
mov
bound
and
inc
xchg
enter
fstl
mov
xchg
das
aas
stc
xchg
lock
rolb
xchg
or
push
std
fisttps
and
enter
mov
adc
and
and
adc
cmp
or
or
dec
add
lret
xchg
in
sub
pop
enter
add
out
insb
pusha
sarl
cmc
xchg
push
mov
fdivr
mov
lods
clc
jecxz
or
add
aad
stos
mov
mov
enter
mov
ds
inc
sar
incl
mov
add
sbb
push
add
decb
cmpsb
addb
and
leave
mov
push
mulb
scas
les
pop
cmp
das
orl
mov
inc
mov
or
pop
addb
icebp
repnz
dec
divb
in
push
xchg
shlb
and
movb
jb
push
imul
inc
int
lods
mov
jb
jo
cmp
mov
std
mov
mov
clc
mov
and
jno
ret
push
or
aaa
mov
out
pop
inc
or
fildll
hlt
add
inc
push
jnp
mov
lods
add
sbbb
or
popa
std
or
mov
mov
or
inc
dec
xor
sbb
add
dec
les
or
and
sbb
fadds
sbb
shr
adcb
add
inc
push
sub
data16
sbb
or
pop
add
adc
fmull
sbb
sub
push
xchg
mov
test
outsl
mov
xchg
add
stc
mov
mov
mov
in
sub
or
push
inc
cli
es
andb
or
mov
jne
pop
arpl
clc
mov
data16
sub
cli
pop
add
int3
xchg
add
push
add
or
add
sbb
in
pop
icebp
test
xor
and
adc
dec
and
push
outsl
dec
xor
adc
pop
and
sub
dec
gs
and
scas
rcll
push
jnp
js
sub
cld
xor
jmp
cmp
fwait
cmpsb
xor
add
mov
mov
and
or
cmp
clc
or
ljmp
insl
push
sti
or
inc
push
fdiv
stos
inc
inc
lock
jo
out
mov
int
xor
aam
testl
xor
sarb
and
nop
fwait
loop
push
cs
add
dec
fcmovne
xor
jg
push
pop
and
fiaddl
fwait
test
jo
pop
xor
inc
jl
or
and
inc
out
push
mov
jge
jl
in
jne
or
loop
xor
dec
repz
lods
or
dec
lock
js
dec
ljmp
jnp
loopne
fidivl
mov
mov
pop
repnz
pop
adc
nop
inc
dec
adc
adc
mov
pop
add
or
inc
pop
movb
or
add
add
out
push
add
cmp
nop
inc
cmp
cmp
pop
add
nop
les
insb
add
pop
xor
mov
add
push
push
add
shrl
add
andl
shl
fistps
mov
inc
lods
lock
pop
mov
test
push
or
cmp
mov
mov
add
sti
and
jmp
popl
adc
adc
mov
and
xor
cmc
add
out
xchg
and
inc
mov
add
adc
call
sbb
push
push
cmpsb
imul
cmpsb
decb
adc
xchg
sub
add
out
rolb
mov
adc
rcr
fildll
xchg
cwtl
pop
add
push
aad
cmc
sub
mov
jle
xor
gs
jnp
pop
or
inc
push
dec
fwait
and
fisubrl
fcompl
sub
or
mov
dec
loopne
mov
mov
cmpsb
push
and
jg
sub
adc
add
cwtl
add
push
nop
add
rcrl
or
inc
lcall
fisubrl
lahf
adc
test
pop
mov
push
inc
and
aad
xor
lock
mov
sub
mov
das
cmpsb
push
xor
jle
addb
icebp
sbb
sahf
stc
cwtl
sbb
xchg
mov
dec
in
int
std
or
add
andb
mov
or
lock
push
mov
ficoms
mov
pop
rcl
sub
stos
push
add
inc
mov
outsl
in
popf
mov
sbb
adc
add
fwait
in
xor
adc
mov
add
mov
out
add
jge
add
roll
jns
rcl
push
stc
push
rcl
mov
les
sbb
jno
or
or
rcrl
mov
push
lcall
subb
fisttps
mov
scas
xchg
inc
xchg
sbb
aaa
mov
jle
adc
rcrb
in
push
cwtl
insb
lods
add
mov
sub
cwtl
pop
cld
jg
pusha
jge
or
clc
clc
or
scas
cwtl
inc
xchg
cli
add
shlb
std
or
pop
sub
push
add
mov
jp
xchg
enter
fstl
js
mov
mov
idivb
jle
or
and
bound
or
push
out
pop
rolb
aad
jmp
mov
pop
jo
pop
test
and
out
lock
pusha
sbb
sbb
mov
cmp
and
cltd
pushf
pop
push
or
cmp
loopne
sarb
call
add
sub
stos
add
fists
lea
out
push
sbb
clc
jno
stos
add
insb
or
inc
xor
mov
xchg
bound
cmp
ja
push
fsin
jmp
mov
dec
out
sub
insl
aas
pushf
subb
out
adc
xchg
cmp
add
mov
or
add
dec
dec
rclb
add
and
pushf
adc
xchg
mov
adc
or
fdivs
lods
and
mov
lcall
push
mov
rclb
or
xchg
lods
mov
lock
nop
add
add
test
sub
cmp
jmp
jo
outsl
xchg
cmp
xchg
sbb
mov
shlb
xchg
and
rorb
rolb
frstor
fsts
lds
cld
add
cwtl
pusha
push
leave
enter
rorl
add
add
dec
mov
roll
dec
sub
inc
inc
and
adc
fdivs
mov
je
mov
aaa
dec
fcoml
subb
pop
push
xor
inc
mov
pop
mov
bound
cmp
flds
loop
cmpsb
mov
mov
in
push
lcall
popf
bound
xor
lcall
movsb
loope
pushf
adc
sbb
cmp
mov
or
and
xchg
cld
pop
or
out
sub
data16
sub
adc
dec
jb
fwait
push
adc
mov
mov
popf
add
lcall
sbb
adc
in
push
sub
les
or
lods
inc
xchg
inc
pop
aad
test
lds
cmpsl
outsb
repz
clc
cmpsb
mov
xor
std
std
inc
clc
mov
or
mov
fisubrs
andl
sub
addl
inc
jl
pusha
fsubs
jns
js
lods
sub
and
adc
adc
ss
addr16
mov
mov
test
lods
addl
adc
add
adc
cmp
sub
inc
fwait
loopne
fldenv
cmp
lcall
add
outsl
add
insb
sub
adc
add
ret
sub
sbb
xor
xor
add
mov
sub
sbb
add
xchg
xchg
hlt
es
sbb
mov
sub
add
loope
dec
add
sub
insb
add
adc
addr16
sbb
aad
add
xchg
jns
or
repnz
jmp
fldenv
xor
cli
or
mov
and
cli
adc
orl
mov
and
sbb
ljmp
sahf
jb
mov
cmp
push
inc
into
lcall
addl
jne
push
mov
sub
add
aaa
mov
repnz
in
out
nop
pop
outsl
negb
testl
xor
ljmp
lahf
les
jo
rcrb
rcr
insb
cmpl
fiadds
int3
pusha
shll
add
mov
xor
enter
or
pushl
inc
mov
insb
xchg
sahf
adcl
cltd
ret
adc
sub
std
adc
jl
adcb
push
jae
ret
mov
jo
mov
mov
inc
adc
outsb
inc
arpl
add
cmp
clc
scas
fisubrl
xchg
fs
inc
add
or
stos
adc
or
sbb
adc
je
not
inc
xor
ja
or
add
add
add
stos
fisubl
movsb
int
gs
sub
push
mov
ss
popa
cmp
jle
out
gs
add
adc
or
add
dec
xor
lods
dec
sub
inc
cld
sbb
mov
or
pop
adc
add
inc
xchg
fisubs
inc
fs
pusha
mov
adc
movsb
jmp
inc
inc
lcall
inc
xchg
pop
add
jo
cmp
outsl
sbb
dec
dec
adc
ja
or
shl
cmpsl
push
adcb
andb
inc
subb
xor
xchg
dec
or
sub
push
sbb
cli
xchg
test
movsl
fmull
fsubr
dec
add
mov
adc
movsl
nop
movsb
data16
pop
pop
fcomps
add
subb
test
jns
add
xchg
sbbl
add
jp
pop
sbb
lcall
outsl
mov
pusha
cmp
add
add
inc
add
subl
incl
rolb
rolb
loope
pop
add
adc
push
add
xchg
jne
fucomi
and
rolb
in
adc
and
pop
shl
fs
adc
cmp
xor
loop
movsb
sbb
inc
in
xchg
add
or
rolb
mov
es
or
loopne
and
scas
xchg
mov
pop
xor
cmpl
ss
cwtl
ret
add
jnp
std
fistl
sub
inc
bound
and
xchg
or
and
push
mov
and
roll
add
test
or
out
lcall
jle
push
push
lods
in
inc
movsb
lcall
jns
mov
sbb
pusha
sub
or
adc
loopne
aaa
sub
dec
fdivrs
mov
sub
andl
shlb
and
push
or
xchg
sbb
jecxz
cmp
push
sub
sub
push
cli
rorl
rcrb
out
inc
out
or
imul
inc
inc
loope
pushf
inc
es
stc
in
adc
fwait
ljmp
add
push
mov
xchg
cld
ficompl
repnz
dec
sub
ret
adc
gs
loope
inc
adc
add
dec
xor
mov
or
push
testb
lret
sbb
push
test
xchg
frstor
inc
scas
ficomps
xchg
es
sbb
es
int
dec
ret
and
add
push
rcrb
mov
mov
clc
mov
sbb
mov
push
mov
mov
iret
xchg
xor
inc
in
lcall
push
adc
fwait
sbb
add
fs
sbb
jle
and
pop
fs
popf
in
jo
push
fistps
outsl
and
lahf
sar
push
jge
dec
sbb
or
gs
pop
fnstsw
pop
outsb
add
out
in
insb
mov
add
lret
and
mov
xlat
add
jnp
lea
in
out
cmpl
lock
repnz
clc
fwait
dec
in
mov
add
cmp
dec
or
mov
jge
mul
pushf
scas
call
xor
loop
punpckhdq
pop
xor
xchg
mov
or
mov
out
outsl
push
mov
adc
pop
sarb
pop
pop
popa
or
sbb
fisttpl
adc
ficoms
dec
clc
fsubrp
pusha
pop
cld
clc
dec
sub
stos
in
sar
cmpsb
imul
push
mov
mov
pop
inc
mov
orl
or
push
cli
enter
add
jns
adc
ss
inc
xor
sub
cmpsb
jg
inc
inc
ret
and
sbb
pop
sub
push
pusha
ljmp
pop
sub
gs
inc
or
pop
loopne
xchg
shlb
cmp
or
mov
inc
adc
push
add
jmp
or
push
cwtl
and
out
cmpsb
inc
adc
sbb
and
jns
enter
dec
push
in
add
jo
aad
rcll
jnp
and
jg
lcall
inc
inc
sub
stos
fwait
push
sub
push
or
pushf
nop
out
mov
mov
add
adc
inc
push
xchg
xor
stos
add
inc
add
fcmovnb
push
mov
push
aam
shrb
rorb
jge
or
sub
pop
repnz
jl
dec
js
shrb
stc
imul
shll
xchg
lock
xorb
ss
and
ffree
mov
ret
cli
test
cmp
rcl
cmp
mov
push
and
stc
jg
add
dec
stos
clc
cmp
ss
xor
xchg
or
fwait
add
call
mov
ljmp
pop
adc
add
pop
push
add
and
movsb
ds
imul
add
jecxz
int
inc
ret
outsl
sbb
xchg
adc
push
add
mov
ret
and
andb
pop
or
xor
push
add
cs
push
adc
cmp
or
inc
test
lock
mov
add
scas
cwtl
xor
xchg
pop
inc
roll
add
pop
mov
ficoml
mov
pusha
add
mov
repnz
loop
jb
cmpsl
add
cmc
inc
inc
stos
cmc
mov
adc
daa
add
aad
jecxz
call
cwtl
dec
adc
sbb
aaa
icebp
jg
push
sbb
inc
sbb
ds
stos
icebp
sbb
inc
pushf
inc
in
inc
cmp
dec
stc
scas
nop
cmovle
sbb
insl
in
das
dec
add
sub
mov
movsl
pop
inc
call
or
clc
xchg
and
fbld
jno
inc
out
enter
push
or
jg
add
add
insl
mov
clc
ret
les
stos
adc
push
sti
rcrb
xchg
push
jo
lret
or
and
or
push
addb
sti
lods
adc
push
hlt
nop
push
adc
mov
xchg
icebp
nop
adc
in
sub
aad
sub
lock
adc
loopne
add
cmpsb
sbb
jnp
adc
xchg
lret
add
mov
mov
pop
adc
and
dec
mov
inc
mov
roll
dec
shll
pop
push
push
out
mov
cli
xor
pushf
dec
scas
outsb
xchg
fdivr
push
push
jmp
das
push
mov
adc
mov
cli
dec
ja
or
imul
das
push
and
loopne
xor
sub
xchg
test
or
adc
adc
insb
add
rcrb
and
loope
ja
clc
push
lcall
xor
ja
sub
adc
dec
fs
jnp
dec
sbb
shll
outsl
xchg
icebp
fbld
cmc
cli
sbb
xchg
mov
rolb
rolb
cmp
adc
lret
lock
addb
push
test
cli
incl
aas
nop
bound
pop
or
jmp
xchg
dec
or
dec
push
inc
jo
add
mov
sbb
das
sar
lcall
adc
aaa
or
inc
push
cmp
dec
stc
add
push
lcall
dec
cs
inc
add
mov
xor
add
push
jl
jg
int3
mov
inc
xor
xchg
test
andb
mov
mov
cmp
jge
lea
and
rclb
add
dec
jo
xlat
or
rcrl
scas
adc
cmp
push
sub
icebp
rolb
stc
cltd
stos
and
imul
mov
dec
or
pop
inc
dec
aas
imul
xchg
and
adcl
jnp
inc
dec
push
rolb
jb,pn
call
decl
inc
dec
xor
setp
mov
push
adc
mov
adc
cmp
adc
mov
mov
inc
scas
loope
es
mov
setnp
xor
push
js
ja
dec
in
inc
call
insl
lcall
ja
pusha
cmp
incl
jo
jns
loope
out
insl
lock
or
pusha
lahf
sbb
lods
add
mov
push
xchg
stos
lock
jecxz
loope
enter
dec
jo
pusha
pop
lock
inc
and
pcmpgtb
rclb
mov
ss
outsl
mov
xchg
imul
aam
das
mov
adc
add
add
pop
or
add
stc
push
jae
repnz
mov
in
and
push
incl
shld
cmovne
imul
pop
push
inc
das
gs
push
and
std
sbb
cmp
in
and
jl
mov
pop
je
sub
sbb
cmpl
or
fs
add
sub
and
stos
stos
or
dec
dec
lret
xchg
and
jge
rcrl
mov
lcall
cwtl
mov
int
out
outsb
ss
add
inc
jg
cltd
add
push
push
pop
fs
push
daa
cmp
imul
inc
xchg
xlat
adc
cmp
or
pop
rolb
inc
add
xor
add
jne
jmpw
xor
add
ja
sbb
aad
push
mov
adc
nop
mov
clc
decl
and
sbb
cmp
xor
rorb
loop
cwtl
or
outsb
sub
xchg
mov
fsubs
nop
mov
fwait
inc
push
addr16
inc
inc
or
loope
xchg
or
add
push
pusha
fs
add
in
into
xchg
lock
pushf
nop
inc
or
cli
add
test
imul
and
orb
imul
bound
mov
pop
out
nop
cmpsb
add
mov
jmp
mov
lock
in
stc
or
andb
movsb
rolb
xchg
shlb
imul
or
push
rolb
movsl
add
add
fwait
movsl
int
ljmp
add
icebp
inc
arpl
addb
sub
push
std
notb
jl
push
mov
xchg
ljmp
js
xor
mov
loopne
mov
sbb
imul
sarb
or
loopne,pn
jl
sub
mov
and
mov
nop
pop
push
push
dec
mov
adc
push
add
popa
adc
jnp
insb
in
add
pushw
lret
adc
xchg
xor
add
loop
add
in
mov
sbb
inc
outsl
xchg
test
inc
call
add
fisttps
bnd
pop
out
push
sbb
xor
add
mov
or
popa
inc
rorb
push
loope
insl
push
sbb
inc
cli
add
pop
add
and
xor
inc
add
pushf
add
repnz
xor
add
add
test
roll
insb
dec
std
sbb
jo
in
int3
sub
add
inc
add
pusha
and
pop
ret
xchg
fucomi
and
pop
inc
inc
pop
cld
sbb
adc
dec
jmp
or
sub
cmp
mov
add
insb
add
movb
mov
push
mov
out
scas
cmp
jecxz
lcall
in
add
adc
add
add
aam
push
sub
xorb
je
push
addb
sub
shlb
sub
jb
sub
mov
mov
imul
push
lret
add
fisttps
or
push
nop
and
flds
stos
dec
cld
add
subl
push
inc
push
in
call
pop
sub
sub
add
shlb
sub
sub
rcrw
inc
fs
inc
push
xchg
jne
test
scas
clc
mov
inc
and
sarb
test
or
or
outsb
nop
push
sbbb
ja
mov
cmp
cli
push
roll
out
or
inc
mov
mov
inc
inc
cmp
jl
mov
clc
jle
cmpl
inc
push
add
lds
jmp
std
ret
mov
add
or
inc
xchg
adc
inc
push
fwait
adc
inc
shr
stc
add
test
mov
sbbl
inc
sub
outsl
fcoms
rolb
mov
jge
xlat
push
inc
scas
es
dec
xlat
sub
arpl
and
sbb
add
sub
xor
fcoms
mov
xchg
adc
rolb
pushf
fisubrl
lds
call
add
jne
inc
mov
pushf
or
gs
pop
popf
and
jbe,pn
shr
inc
mov
rclb
mov
inc
inc
adc
mov
fdivrp
or
call
cli
adc
dec
inc
roll
push
addl
mov
sub
inc
add
in
adc
ljmp
insb
add
sbb
jle
fsubr
push
jo
mov
lcall
out
dec
sbb
aad
ds
orb
add
inc
push
adc
rclb
sarb
add
ret
mov
outsb
stos
push
rcrb
das
add
cli
lods
push
dec
or
dec
popa
sub
std
dec
mov
dec
lds
xor
ss
and
and
cmp
jne
data16
or
add
and
incl
add
ret
loopne
and
lock
out
jne
test
rcrb
bound
and
inc
fmuls
sbb
sarb
or
and
push
sbb
xchg
add
addr16
out
lods
pop
add
lret
and
addb
jb
roll
pop
inc
shlb
mov
incl
xor
data16
lcall
push
add
addl
pop
adc
lods
or
shll
rorb
cmp
sub
inc
push
adc
lret
fildll
daa
add
sub
pusha
pop
push
mov
push
stc
clc
and
rol
lods
and
rorb
mov
mov
subl
and
add
jl
sub
xor
or
andb
jns
inc
sbb
arpl
push
push
fs
cli
or
pushf
lock
dec
inc
add
notb
xchg
lcall
out
or
bound
mov
or
test
mov
pop
fadds
orb
sub
mov
pushf
popf
xor
pop
fs
aaa
or
sub
out
inc
sub
or
dec
push
insb
and
and
add
sub
mov
dec
or
and
rorl
enter
sbbb
xor
sub
add
add
inc
sub
cld
inc
nop
loopne
pop
push
push
scas
loope
lcall
subb
adc
inc
clc
scas
add
add
jne
cmp
sub
decb
loope
cmpb
add
mov
movsb
outsl
push
pusha
incb
mov
add
push
mov
pop
out
ss
push
mov
fisubrs
add
inc
push
add
cmp
xor
push
jecxz
das
xor
cmp
dec
ja
cwtl
pop
and
push
adc
add
push
or
fildll
sub
lcall
adc
push
mov
mov
add
icebp
add
or
xchg
jge
and
add
jg
pop
inc
addr16
xchg
lods
jno
scas
sub
fs
pop
cli
pop
jo
lock
bound
je
cli
and
add
xchg
add
pop
push
mov
cli
add
sub
incl
lds
xor
adc
or
imul
add
sbb
jge
scas
js
jnp
dec
adc
dec
xchg
aam
fsubs
cld
push
xor
je
in
xchg
dec
nop
sbb
lock
bound
mov
gs
enter
or
stc
xor
cltd
pop
test
add
sub
jle
xor
xor
push
aaa
and
mov
insb
push
std
and
xchg
add
lcall
lock
add
cli
sub
stos
inc
pop
and
gs
inc
mov
jns
nop
inc
gs
add
stc
and
mov
mov
jns
pop
cs
jle
test
aam
insb
incl
cmp
push
inc
mov
sub
inc
and
sub
outsb
mov
mov
add
ljmp
jno
sbb
mov
pop
aam
inc
and
xor
push
movb
cmpsl
andb
cwtl
add
clc
mov
mov
popa
arpl
dec
dec
adc
cmpl
rolb
adc
cli
and
add
add
add
push
xchg
das
fsubs
icebp
adc
test
add
sbb
sahf
add
ds
adc
mov
stc
adc
mov
pop
xchg
or
xchg
add
dec
adc
add
rorb
fildl
sbb
mov
mov
inc
sub
push
loopne
jecxz
add
add
jmp
dec
fucomp
or
popa
add
sub
mov
aam
add
inc
addl
sub
les
cmp
inc
inc
pshufw
mov
mov
xchg
ficomps
dec
rolb
adc
fcmovnb
sbb
inc
scas
daa
lock
mov
add
lcall
test
outsl
mov
sbb
push
mov
out
push
std
pop
add
add
add
rcrb
sub
bound
scas
push
mov
push
cmpsb
lret
adc
shrb
xchg
adc
ja
pop
es
addb
push
pop
test
loopne
dec
push
mov
add
stc
xchg
adc
pop
cli
add
add
push
int
call
fs
dec
sbb
dec
xchg
mov
ret
aad
dec
mov
jo
aad
ss
inc
pop
and
or
pushl
popa
add
and
add
or
inc
add
push
scas
subb
rcll
mov
adc
les
loopne
mov
mov
dec
xor
jno
dec
inc
dec
lock
cmpsl
fisubrs
sbb
icebp
push
push
inc
inc
ljmp
lcall
fbld
jl
add
jg
adcl
in
mov
out
xor
add
push
loope
mov
lds
mov
stc
pop
roll
pop
jnp
adc
sbb
push
mov
aas
xor
test
add
jo
nop
fisubrl
pop
jmp
addb
lods
mov
loope
add
sbb
sub
popa
and
negb
sub
xor
push
mov
mov
sub
stos
test
push
mov
lods
fs
jg
mov
or
add
mov
push
imul
cli
mov
int3
pop
sbb
or
ljmp
mov
or
adc
jo
bound
add
or
push
xchg
add
mov
call
pop
fwait
or
fwait
xor
xchg
or
lock
or
dec
and
xchg
xor
inc
fs
or
sbb
fs
out
cli
ljmp
hlt
in
adc
xor
push
mov
xchg
insl
add
dec
inc
pop
call
inc
sub
xorb
scas
jp
xor
and
adc
out
mov
pop
mov
rolb
jmp
xor
sbb
sub
loop
jg
sub
lcall
mov
jl
clc
stos
mov
fs
add
push
imul
int3
pop
mov
nop
add
ret
aaa
fcomi
xchg
std
add
or
mov
push
std
add
or
or
jl
sub
orb
xchg
rcll
les
fs
sar
or
in
stos
mov
lds
scas
inc
add
fcomip
out
push
ror
sbb
stc
and
xor
sbb
nop
inc
push
push
loope
loop
or
sahf
mov
ja
orb
pop
or
inc
and
aaa
mov
mov
outsl
clc
fistps
adc
sbb
bound
ret
gs
dec
or
gs
stos
mov
and
sbb
jnp
mov
stc
dec
and
or
mov
ret
movsb
add
push
inc
lcall
mov
in
gs
mov
ret
aam
movsl
pop
adc
or
je
lods
cmpsb
inc
push
inc
inc
dec
adc
sbb
popa
shlb
faddl
pop
test
aas
sbb
pusha
jo
jns
dec
push
jmp
adc
cs
outsb
adc
and
jbe
dec
ret
jg
adc
mov
stos
xchg
xor
jno
dec
inc
cmp
jge
xor
mov
test
jb
mov
nop
mov
pop
icebp
mov
or
push
aam
mov
or
stc
repz
in
and
push
mov
sbb
xor
pop
in
outsl
cmp
int
adc
jp
cmpb
out
add
dec
loope
fldcw
mov
sbb
insl
sub
data16
out
bound
sbb
push
test
data16
jb
or
add
mov
push
xchg
sbb
add
sbb
xor
out
imul
js
dec
mov
in
inc
out
ret
push
je
push
sub
push
test
rcrb
repnz
jbe
push
adc
nop
push
add
xlat
sbb
movsb
in
mov
insb
jbe
loope
roll
dec
add
inc
ljmp
subb
ss
sbb
mov
xchg
add
push
sub
pop
inc
shl
fldl
sbb
pop
sbb
add
cmp
adcb
sub
sub
mov
sbb
mov
sbb
or
sub
sahf
add
push
fstpl
lods
dec
in
in
mov
and
xchg
and
sti
loope
adc
pmaxub
call
aaa
dec
cli
decl
and
pop
lret
add
subb
inc
ret
dec
imul
sti
cs
pop
mov
pop
push
sbb
mov
icebp
mov
pop
in
add
imul
clc
cmp
test
pop
push
fcoms
mov
mov
clc
add
scas
xchg
xorb
sbb
fisubl
xor
push
push
and
int3
xchg
into
rorl
sbb
push
jl
or
xorl
call
sub
imul
xchg
sub
outsl
mov
cmp
jmp
adcl
jmp
lcall
orl
fistpl
or
call
lret
and
imul
xorb
psubb
loopne
clc
shll
repnz
xor
addb
push
xchg
inc
jge
icebp
adc
jns
addb
adc
and
pushf
movsb
xchg
jg
xchg
movsb
mov
dec
pushf
xchg
mov
pop
add
imul
pushf
add
roll
xor
cltd
inc
inc
or
lods
xor
mov
aaa
add
test
mov
inc
sahf
add
rclb
lret
pusha
jmp
das
loop
xlat
mov
add
mov
in
mov
in
jb
hlt
lea
jg
inc
xchg
in
fimull
jecxz
outsl
mov
mov
fwait
insl
add
insb
loop
mov
adc
or
arpl
fst
add
scas
pop
sub
out
xchg
fimuls
les
shrb
pop
outsb
and
dec
or
out
hlt
push
cltd
sub
stos
push
mov
and
aam
out
iret
xchg
bound
hlt
or
jmp
in
shll
mov
add
insl
inc
adc
sub
mov
dec
mov
cli
dec
or
outsb
and
add
lcall
lea
sarb
pop
fsubp
lea
or
aam
pop
fs
stos
dec
dec
cli
mov
pop
pusha
mov
mov
retw
inc
inc
shl
and
clc
ret
loop
or
add
mov
xor
lcall
in
mov
and
pushf
pushf
mov
inc
xchg
addb
dec
rol
lods
push
ret
lds
les
sub
inc
push
xor
mov
pusha
or
mov
sahf
cli
stos
inc
jl
out
jne
or
inc
add
sub
in
push
lock
sbb
testb
js
dec
mov
icebp
jl
sbb
xor
and
xchg
bound
xchg
jo
mov
je
mov
push
ljmp
add
sbb
bound
mov
fldl
add
adc
cmp
xchg
mov
add
push
sub
and
sbb
rorb
cmp
popl
add
pop
out
popa
ja
rorb
or
out
pusha
loopne
jge
and
pushf
cmp
add
stc
das
loopne
pop
lock
call
push
jnp
pop
sahf
test
shlb
sub
xchg
push
hlt
mov
adc
in
pop
cwtl
cmp
add
insb
xchg
bound
xor
add
clc
pushl
and
sub
jmp
pusha
lret
sbb
push
sub
out
scas
push
popa
rclb
add
insb
std
and
in
test
jns
ss
mov
out
or
add
stc
adc
mov
push
inc
in
cli
or
movq
scas
inc
dec
rcrl
aaa
pop
mov
fs
inc
jb
outsl
mov
xor
jae
inc
movsb
xchg
mov
adc
loopne
push
pop
test
add
push
in
add
cmp
sub
pusha
inc
loop
jo
mov
pop
mov
js
inc
add
clc
mov
pushf
xor
inc
outsb
or
les
in
out
mov
lods
flds
and
and
sbb
or
inc
xchg
jbe
fdivrs
adc
xor
or
pop
aaa
pop
rolb
repnz
loope
rcr
add
mov
scas
loop
addb
add
decl
movsl
add
sbb
sbb
mov
push
mov
push
or
mov
and
and
push
adc
dec
mov
or
xor
inc
jnp
addr16
clc
xorl
pop
mov
jb
cltd
and
outsl
and
add
add
and
add
sub
and
pop
add
push
mov
jns
bound
dec
fmuls
cmpb
and
xor
push
push
rcrl
or
adc
jecxz
call
or
cltd
adc
and
in
mov
clc
stos
mov
out
pusha
adc
xchg
fbld
ja
jmp
mov
std
das
push
cmp
popa
inc
adc
stc
jle
adc
or
cli
pop
test
and
or
fwait
pop
call
pop
gs
push
or
add
aad
cli
cmp
pop
push
xor
pop
add
sbb
rolb
test
je
xor
and
sbb
jg
sbb
mov
add
xor
fs
jnp
mov
ret
add
mov
or
and
orb
push
sarl
xor
dec
cmp
add
ret
pop
hlt
aad
add
cmp
add
mov
xor
cmc
sub
shrb
mov
add
pop
mov
inc
adc
and
dec
and
gs
sbb
shlb
add
add
cs
inc
sbb
dec
insb
pop
cmp
pop
test
addl
cld
into
push
or
add
xor
push
xchg
push
add
dec
mov
sub
mov
pusha
add
xchg
sub
jne
sub
sbb
lahf
push
mov
nop
call
enter
jno
jnp
aam
cmpb
negb
roll
push
popa
inc
adc
mov
jbe
cli
or
or
xor
mov
sub
dec
mov
lock
inc
rcrl
insb
add
xorb
int
in
add
push
nop
sbb
adc
jp
inc
jl
sub
fsubs
icebp
popa
adc
sub
add
jne
dec
lods
adc
add
xor
sbb
add
int
push
lea
mov
ja
xor
outsb
pop
inc
mov
adc
push
or
add
adc
mov
add
jo
sub
mov
or
adc
inc
nop
and
call
jnp
jge
inc
cld
adc
stos
or
push
or
add
ljmp
clc
stos
sub
js
cmp
push
inc
cli
sub
pushf
ljmp
pusha
and
mov
rolb
ljmp
push
data16
inc
pushf
pop
jmp
mov
test
adc
lret
daa
sub
sbb
sub
xor
aaa
cld
insl
adc
sub
jl
jne
and
add
loop
rorb
lock
xchg
gs
mov
dec
push
or
in
push
dec
cmc
fbstp
loopne
ret
into
sub
cli
adc
xchg
jnp
out
cli
pushl
lret
or
lds
fadds
lcall
jg
push
dec
xchg
pushl
mov
cli
nop
adc
mov
fcmovu
add
mov
incl
sbb
add
mov
hlt
testb
lock
push
xor
test
add
das
cltd
inc
pop
sub
pop
shlb
ljmp
add
xchg
daa
and
mov
adc
inc
xchg
add
aaa
adc
decl
mov
hlt
negb
push
add
push
lcall
jmp
cmp
cmp
adc
adc
cld
sub
loopne
cwtl
add
nop
push
cli
sbb
or
xchg
negb
push
repnz
jmp
xor
andb
push
mov
push
push
push
shrb
pushf
dec
adc
and
hlt
dec
or
mov
ja
test
cmp
or
add
mov
and
cmp
sbb
pusha
mov
or
outsl
push
enter
inc
scas
loopne
cli
xor
add
or
adc
inc
cmc
sbb
inc
and
and
lods
or
push
sub
loop
or
mov
push
rorl
jle
adc
shlb
push
imul
push
sbb
fisttpll
int3
jo
fisttpl
xor
add
in
mov
mov
stc
sbb
mov
imul
test
push
out
mov
inc
jmp
push
xchg
pop
fs
and
sbb
mov
and
shl
cs
loop
cs
xor
jnp
jo
addr16
xor
adc
shll
adc
rclb
adc
add
dec
jo
inc
call
test
add
push
push
and
scas
mov
loop
icebp
mov
addl
sub
into
stc
nop
test
les
add
push
lcall
and
adc
and
clc
imulb
mov
pop
sarb
gs
sarb
mov
mov
insb
add
pop
xor
rclb
inc
rolb
pop
js
rol
loopne
test
inc
xchg
mov
cli
mov
xor
xchg
ds
inc
push
mov
leave
lock
adc
cs
add
push
or
adc
mov
add
testb
sbb
mov
sbb
sarl
loope
cli
jmp
fisttps
add
sbb
icebp
pop
push
pop
lock
subb
incl
add
bound
lret
idiv
popa
add
jno
jns
insl
add
mov
arpl
mov
or
ss
in
insl
add
push
and
adc
lods
pusha
add
or
and
roll
aaa
mov
or
mov
out
add
and
ss
xchg
dec
mov
pop
jmp
sub
flds
jns
mov
push
inc
call
adc
mov
jl
xchg
or
sbb
push
lds
nop
popa
and
jle
add
push
xor
out
xor
push
push
adc
orb
xor
ret
xor
mov
aad
popa
add
cwtl
pop
push
push
cld
push
fdivr
push
aam
rcl
call
xor
aas
stc
inc
arpl
mov
adc
fidivl
enter
and
insb
xor
mov
pop
test
idivl
out
pop
pop
shll
aam
inc
gs
stc
adc
loop
pop
lcall
mov
iret
fs
inc
orl
scas
jb
jbe
loope
push
lret
adc
out
xor
ss
xor
pop
xchg
jmp
int3
inc
sar
push
pop
outsb
push
and
rorl
and
sbb
inc
add
sub
adc
add
cmp
inc
push
add
push
stc
xchg
mov
inc
pusha
dec
push
scas
sarb
cltd
add
call
sbb
out
cmp
stc
js
push
push
and
sbb
lcall
xor
adcb
dec
push
aaa
xchg
push
roll
or
add
push
ja
add
test
dec
lock
roll
fbstp
aas
inc
test
jp
pop
or
mov
cwtl
push
sub
push
or
mov
inc
jl
adc
inc
pop
cmp
add
aas
lods
orb
fimuls
mov
decl
xchg
adc
adc
movsb
pop
mov
subb
add
inc
cld
mov
push
or
test
pusha
adc
inc
xchg
aas
jl
fcomps
jp
jne
test
scas
mov
dec
lcall
add
push
adc
inc
ja
xor
dec
ja
bound
lcall
out
pusha
dec
rcrb
inc
jge
pop
adc
fistl
js
add
push
push
test
stos
test
mov
subb
adc
fistpll
jns
add
hlt
jp
inc
loop
push
jecxz
adc
push
or
inc
sub
push
movsl
mov
mov
clc
lea
mov
enter
ljmp
sbb
sbb
and
outsl
mov
sbb
jmp
lcall
les
icebp
mov
rcl
outsl
ficoms
pushf
imul
sar
add
add
shrl
add
ljmp
pop
push
js
inc
sbb
xor
repz
idiv
mov
shrb
sbb
pop
shrb
sub
popw
push
add
cmp
lcall
jle
push
or
lock
aam
dec
adc
xor
mov
sbb
outsb
sub
inc
xor
jb
pop
push
pop
subb
insl
lock
pop
idivb
inc
cmpb
add
rcr
loopne
xchg
icebp
sub
andb
or
jle
fadds
push
xchg
int
and
push
jl
adc
inc
icebp
stc
lret
or
push
mov
or
mov
or
inc
or
rolb
pusha
sub
mov
xorl
push
inc
cmc
or
icebp
dec
pusha
mov
jno
mov
subl
inc
pop
push
xor
ljmp
sahf
xchg
stc
xchg
add
and
mov
mov
cld
addr16
adc
jle
xchg
aam
aam
push
inc
mov
pusha
rcrb
enter
inc
add
sbb
and
or
lcall
xor
stos
sub
xchg
mov
add
inc
add
xor
push
adc
stos
xchg
mov
std
cmp
xchg
cli
mov
xchg
sub
adc
data16
jg
shlb
push
lret
mov
lcall
and
lcall
loopne
addr16
push
pushf
and
pop
shrb
sub
adcl
int
mov
out
insb
test
dec
cwtl
sub
rolb
fcompl
inc
jbe
fcom
aam
sub
popa
adc
fs
loopne
add
adc
popf
and
cld
inc
insb
pop
push
outsb
cwtl
inc
jne
cmpsb
sub
lods
jmp
decl
sub
mov
and
pop
xchg
rolb
out
and
subb
dec
inc
sub
xchg
xor
pusha
xchg
inc
ja
addb
xor
ljmp
and
jns
sbb
rorb
out
sbb
sbb
popa
inc
gs
rcl
scas
xor
stc
and
sarb
das
add
cmp
pushf
or
pushf
sbb
outsb
loopne
pop
nop
shll
adc
add
adc
call
inc
popa
mov
mov
cwtl
cmp
push
cli
and
call
add
stc
imulb
bound
lods
in
cmpsb
loope
loopne
push
insb
push
add
popa
and
inc
dec
popa
xchg
leave
sbb
add
push
call
and
mov
adc
sbb
sub
mov
mov
xor
jbe
nop
std
gs
es
cmpb
jecxz
or
pop
pusha
stc
shll
push
addb
repnz
hlt
sub
adc
fcoml
and
xchg
sub
push
inc
cld
push
lods
mov
pushf
sahf
test
adc
add
loope
fsub
xor
or
loope
outsl
sub
pop
ret
jmp
sub
mov
xor
push
mov
add
test
add
and
fs
addr16
pusha
xor
aaa
push
or
shll
cltd
popa
adc
sub
lcall
loope
nop
ss
scas
out
out
mov
push
jmp
es
es
pusha
sub
or
outsb
sbb
gs
push
adc
imul
inc
inc
sbb
ljmp
or
loope
inc
push
scas
push
test
xor
arpl
inc
and
add
xchg
rcrb
in
add
or
xorb
ja
fidivs
arpl
lea
push
test
pop
push
and
push
adc
insl
in
jp
ljmp
icebp
mov
shll
pushf
pop
add
lock
fs
shll
dec
outsl
clc
inc
das
add
sbb
mov
push
adc
mov
mov
gs
int3
cs
mov
sbb
clc
sbb
add
aas
rorb
es
push
or
dec
sbb
xchg
shrl
fdivp
dec
and
xchg
stc
fucomip
xchg
flds
push
dec
jg
jno
icebp
and
pop
inc
pop
stc
shrb
add
nop
push
dec
jne
jno
mov
push
mov
push
adc
adc
outsl
or
add
push
sub
arpl
and
cmp
loopne
and
fiaddl
ret
filds
cld
sub
addr16
adc
fisttpll
cmp
add
adc
outsl
mov
test
add
add
js
loop
sbb
js
sbb
les
sub
arpl
dec
cwtl
shl
adc
xchg
faddp
ficompl
inc
loope
and
rcl
adc
lcall
inc
rcrb
stc
mov
call
sub
add
rolb
lcall
sbb
out
dec
push
xor
inc
add
and
add
dec
rcrb
sub
scas
test
cmp
adc
inc
pop
icebp
push
dec
lcall
dec
mov
adc
addb
sub
push
xor
loope
ss
lcall
lock
popa
rolb
adc
sbb
inc
mov
mov
and
insl
and
bound
fwait
rorb
mov
sbb
cmpsb
add
ss
outsw
adc
jl
push
fwait
dec
and
pop
push
pop
or
xchg
mov
roll
pushf
ret
pop
mov
cmp
push
push
sbb
adc
add
push
add
push
sbb
pusha
sub
push
xchg
mov
js
add
mov
js
add
push
push
adc
fmull
sbb
push
adc
test
adc
add
adc
mov
arpl
into
or
mov
inc
pop
adc
pusha
cli
pop
ja
dec
adc
mov
leave
arpl
out
cmp
or
add
nop
fisubrs
pop
xor
adc
or
xchg
jg
fadd
dec
mov
roll
inc
and
neg
orb
inc
pop
add
sub
mov
mov
pop
sbb
int
std
sbb
and
sub
dec
imul
cmpsb
aad
imul
mov
add
push
test
sbb
push
add
and
inc
mov
or
fs
or
insb
pop
adc
loope
adc
insl
jecxz
pop
cltd
or
or
pop
movsb
and
insb
adc
jo
outsl
ss
aaa
xor
insl
adc
or
mov
push
rolb
mov
stos
fdivs
cmp
cmp
mov
add
es
lcall
cmp
and
mov
lds
inc
mov
and
or
out
dec
cmp
adc
insb
or
mov
adc
adc
adc
bound
jg
pop
loop
or
cmpsl
adc
pop
rcl
cmp
fwait
pop
out
cltd
sbb
ss
mov
adc
out
mov
fcomps
inc
out
sbb
adc
cltd
add
es
adc
lcall
dec
dec
shrl
insb
push
push
nop
test
shlb
lcall
mov
ss
sbb
out
mov
fwait
dec
or
rcrb
pop
jnp
mov
lds
lock
call
and
pop
cmc
jbe
insl
rcrl
xor
inc
and
xor
out
int
std
push
xor
je
call
pop
negb
shrl
xor
add
inc
sbb
push
lcall
inc
rclb
jmp
pusha
rorl
test
mov
nop
ds
jg
mov
ss
stos
add
sbb
flds
xchg
push
mov
pop
std
sub
push
test
sub
pusha
dec
adc
movsb
outsb
adcb
fs
xchg
rolb
inc
inc
fldl
sub
inc
add
mov
xchg
sar
test
orb
inc
test
aam
aam
incl
push
add
jp
mov
or
xlat
mov
or
jbe
shll
xor
xor
mov
int
jge
cmp
add
xor
add
mov
push
int
fdivrs
sub
push
fs
inc
adc
aam
imul
pop
leave
push
data16
and
aad
xlat
jge
insb
fildll
mov
cmc
sub
xorb
push
mov
fcomps
or
jl
push
add
sub
aad
xchg
push
adc
mov
cmpsb
aad
xchg
adc
in
lock
shrb
jbe
aad
lds
gs
xor
push
lock
add
add
add
sbb
add
rolb
out
bound
push
mov
sbb
adc
xor
ljmp
xchg
aad
and
rorb
adc
loope
dec
daa
inc
call
rcll
mov
add
nop
adc
and
bound
out
stc
and
ljmp
mov
adc
enter
and
loop
decb
mov
xchg
jl
roll
mov
popf
push
pop
cld
ljmp
es
fisttpll
and
or
dec
rcl
ror
xchg
outsl
fimull
pop
cmp
mov
cmp
rcrb
and
in
loope
outsl
add
xor
lcall
or
push
mov
inc
test
fs
scas
add
rolb
je
jo
rolb
jno
shrl
jo
ja
or
in
lcall
cwtl
cmp
pusha
cwtl
push
xchg
cmp
loopne
cmp
aas
in
sarl
push
ficomps
xlat
rol
push
adc
fsubs
jmp
and
loopne
aad
test
movsb
in
stos
or
test
cmp
out
jle
cmp
sti
call
cmp
in
adc
add
int
cmp
inc
cmp
jge
or
je
cmp
pusha
cmp
test
pusha
ret
adc
leave
xor
jo
stos
fmull
jmp
add
xor
sbb
mov
cmp
jo
jmp
xchg
ds
aam
sbb
cmp
shlb
mov
sub
dec
arpl
mov
sbb
insl
inc
push
cmp
mov
and
cwtl
adc
jne
jge
in
cwtl
dec
mov
popf
fwait
xchg
mov
mov
dec
pop
dec
pushf
sub
sbbb
dec
lahf
test
sbb
ret
mov
add
rcll
mov
or
cld
adc
mov
add
leave
pop
inc
pop
sbbb
fdivr
xor
lock
stc
sti
jmp
adc
sbb
sub
fdivrp
add
out
insb
shrl
cwtl
pop
movsl
rcrb
sarl
mov
xchg
add
mov
sub
dec
inc
vpminub
in
jmp
inc
faddp
cmpb
lods
cld
or
icebp
orb
push
call
dec
and
fwait
lret
shrb
addb
outsb
lods
rolb
ss
sbb
cli
sbb
and
hlt
lahf
insb
andb
add
adc
es
dec
cmp
mov
dec
rcl
adc
or
push
pop
add
hlt
rcll
cli
inc
jae
push
push
dec
mov
lcall
add
repnz
xor
or
aam
inc
inc
test
hlt
cmp
mov
out
mov
add
lret
stos
mov
loop
add
mov
push
leave
addb
jbe
push
adc
lea
adc
test
das
push
movsb
push
push
xchg
xor
and
mov
cmc
or
stos
add
stc
xchg
ret
add
pop
in
add
add
rorb
add
stos
fdivp
ljmp
pop
addb
insl
fistps
push
add
xor
dec
loop
je
inc
cld
xor
mov
adcl
jl
sbbb
rolb
adc
mov
xor
mov
inc
in
jp
addb
inc
icebp
addb
jb
jg
push
inc
rolb
fwait
lock
popf
pop
loope
test
jo
sub
add
fs
cmp
pop
js
stc
adc
cmp
stos
fs
add
fimuls
js
and
in
xchg
stos
movsl
adc
loopne
jg
sbb
in
shl
add
push
adc
ja
scas
testb
lods
in
cmp
shrl
sbb
add
jg
loope
add
push
cmp
pop
sub
adc
or
pushf
pop
and
mov
jl
repz
xor
mov
test
jbe
cltd
push
out
mov
and
adc
ljmp
fdiv
and
stos
adc
out
add
test
ret
adc
push
or
mov
lock
leave
inc
lcall
lret
icebp
or
add
repnz
add
mov
fs
xchg
or
insl
test
pop
out
adc
rorb
mov
sub
pop
cs
inc
cmp
sbb
fbstp
cmc
subb
addl
pop
cmp
in
inc
push
cld
pop
std
sbbl
and
shlb
cld
subl
pusha
cmp
sub
jg
imul
loopne
cli
pop
stc
and
std
mov
in
cmp
jmp
leave
mov
mov
sub
add
pop
mov
cmp
xchg
aam
xor
insb
lcall
icebp
mov
push
pop
icebp
call
add
int
addl
and
shll
jg
add
push
loopne
lock
sub
pop
pop
mov
fwait
adc
push
cli
jg
adc
aad
add
jle
jbe
sti
shrb
shld
fwait
sbb
rolb
cltd
push
movhlps
movsl
adcb
push
cmc
fwait
adc
mov
mov
xor
mov
and
jo
pop
and
fwait
jmp
insb
cwtl
pop
lods
rolb
mov
out
ret
push
sub
ret
das
ret
mov
jge
and
je
ljmp
pop
dec
or
fs
subl
jo
in
and
pushf
mov
stc
cmp
pusha
dec
out
popa
je
pop
outsl
and
mov
and
stc
xorw
push
ret
stos
rolb
mov
or
addl
adc
ret
add
dec
add
lds
and
repz
mov
mov
filds
arpl
or
adc
mov
lcall
jecxz
and
mov
rorb
xor
cli
push
cmp
fstpt
push
mov
add
and
adc
push
pop
stos
ss
sbb
push
jl
mov
pusha
cmp
and
fmull
push
xchg
dec
inc
xchg
xchg
inc
bnd
mov
push
pusha
push
sbb
dec
mov
inc
mov
adcb
stos
xchg
ret
sahf
flds
adc
or
pop
adc
aad
and
orb
clc
dec
js
push
cmp
jnp
dec
loop
xchg
bound
pop
cmp
inc
into
inc
popa
add
mov
adc
and
pop
or
mov
and
data16
xchg
push
fsubrl
mov
scas
push
dec
data16
cmp
mov
sub
in
mov
sub
adc
adc
and
mov
or
icebp
pushf
dec
adc
and
cmp
loop
sbb
adc
adc
clc
ljmp
loopne
and
sub
push
cwtl
rcrb
xchg
fwait
pop
and
call
sbb
cmpsl
outsb
nop
lock
sbbl
push
mov
sub
inc
pop
decl
fists
adc
fwait
add
mov
add
inc
shll
push
inc
adc
push
roll
add
push
sub
addr16
cmp
sarb
ret
aad
jmp
and
xchg
addb
sti
outsl
push
and
fs
xor
arpl
cmpsb
pop
test
lock
mov
addr16
cs
push
add
daa
icebp
add
xchg
cli
stos
filds
and
pushf
sub
mov
ss
mov
add
sar
lock
adc
push
push
jo
ds
sbb
jmp
xchg
in
mov
pop
andb
push
adc
or
cs
cwtl
mov
in
stos
shl
xor
lods
xchg
cmp
inc
jge
rorl
rclb
and
and
mov
shll
add
in
ljmp
mov
loope
add
pop
lcall
add
loope
pushf
pop
sbb
fs
xorb
stc
testb
add
add
pop
sub
xor
inc
mov
add
and
lds
test
clc
mov
stc
xchg
jmp
cmp
dec
add
inc
test
addr16
add
add
push
adc
mov
cld
push
shrb
rclb
adcl
push
xchg
clc
mov
icebp
adc
inc
mov
clc
dec
sub
sub
adc
call
mov
lock
and
mov
sbb
push
pop
stc
mov
nop
and
add
push
int
sbb
pushf
adc
adc
aas
insl
mov
fcoml
adc
out
pusha
pop
cmp
xlat
rclb
xchg
mov
inc
add
mov
lcall
cld
adc
sbb
mov
aaa
xor
clc
xchg
jle
push
fldl
adcb
push
jge
fcoms
cwtl
jl
fisttps
jo
push
loopne
out
jle
ret
mov
jb
sbb
clc
sbb
pop
and
or
push
cmp
cmpsb
sub
stc
notl
mov
insb
sbb
mov
pushf
push
jo
pop
enter
cmpsb
out
cltd
push
and
inc
cli
mov
sbb
sbb
in
jo
sarb
pushf
dec
xor
xor
push
xor
mov
std
and
shlb
add
or
push
adc
aad
or
mov
mov
cli
or
jb
mov
push
push
mov
aam
ret
adc
dec
in
mov
fisubrs
mov
sub
cmp
add
mov
dec
filds
stc
sub
bnd
add
stc
add
jnp
inc
cmp
xor
ss
movsl
jbe
push
push
xchg
sbb
pop
push
and
ret
stc
xor
xor
xor
nop
adc
lea
push
adc
sbb
stc
and
gs
mov
inc
stc
xor
rcr
loopne,pn
push
sbb
add
jb
stc
test
aaa
dec
cmp
stc
loopne
add
pushf
mov
sahf
inc
inc
mov
and
mov
sbb
dec
and
sar
add
aam
out
adcb
repz
and
fists
popa
es
add
icebp
fnsave
xor
mov
cmpl
or
es
jnp
jno
loopne
adc
in
stos
mov
ljmp
push
sbb
or
pop
and
je
mov
adc
cmp
bound
pop
sbb
data16
xor
adc
lret
je
divb
add
jecxz
cwtl
pop
flds
push
and
in
xor
adc
js
nop
popa
xchg
rcrb
sbb
xorl
stc
rol
insb
hlt
sub
hlt
pop
push
sbb
and
push
ret
call
loopne
adc
cmp
test
inc
ror
xchg
popf
data16
mov
add
inc
std
xchg
rcrb
cld
scas
clc
jle
and
adc
fistpl
xorb
icebp
adc
inc
fcmovnb
add
icebp
or
cld
push
popa
adc
inc
mov
and
xchg
sarb
add
stc
rcrl
cmp
xor
or
inc
lock
out
pop
and
cs
cmp
dec
in
jno
icebp
push
inc
cltd
inc
push
mov
ds
fmul
xchg
push
les
sub
lcall
insl
xor
rcl
icebp
and
cmp
std
lcall
jo
lcall
pusha
inc
lea
add
xchg
adc
lcall
sub
ljmp
mov
clc
push
xor
or
xor
out
jo
push
mov
add
decl
stos
lea
mov
cmp
push
inc
mov
xchg
inc
xor
add
sub
scas
cli
dec
mov
scas
push
dec
mov
pusha
or
lret
cltd
and
xor
sbb
rolb
push
push
add
movsl
mov
outsl
cmp
sub
jmp
jnp
dec
loope
or
adc
stc
std
addl
xor
sub
fistpll
add
cwtl
adc
bound
push
js
add
xor
add
lcall
dec
or
lock
rorb
pusha
icebp
pop
jp
sbb
and
jp
xlat
pop
pop
clc
and
adc
addr16
mov
addr16
inc
sub
add
popa
push
xchg
or
rorl
movsb
mov
xor
inc
fdivrs
movsb
mov
add
jbe
sbb
mov
stc
push
xor
pop
push
sbb
stc
arpl
fildll
add
xchg
and
addb
xchg
xor
jo
lock
xor
add
je
xor
push
adc
fisubrs
mov
fmuls
repnz
or
pop
pop
pop
xor
mov
or
pop
xor
and
ficomps
xchg
adcl
and
mov
push
pop
adc
dec
aad
pop
jno
ret
xchg
inc
aad
cli
and
roll
adc
in
popa
ret
sbb
sbb
mov
push
loopne
sarb
jo
jmp
xchg
xor
sbb
push
test
pusha
cmp
mov
out
addb
inc
jg
and
or
and
add
insb
jge
xchg
icebp
sbb
sahf
adc
loope
cs
enter
dec
pushw
loopne
pop
loop
ljmp
clc
andl
pusha
mov
inc
enter
xor
cs
adc
jmp
sbb
or
loop
adc
orl
clc
pop
rcrl
repz
fildl
jo
add
pop
mov
rcrb
xor
adc
push
mov
jne
cmp
add
adc
fnstsw
sbb
or
in
add
sbb
sub
dec
out
pop
push
add
repnz
lods
icebp
xchg
rcll
mov
xor
cld
imul
add
je
sub
addb
cmpb
mov
mov
nop
push
loop
cmp
sti
orb
xchg
push
out
or
add
in
pop
and
dec
test
adc
roll
das
repnz
test
push
or
rclb
push
or
add
insl
pop
arpl
flds
add
outsl
xchg
adc
push
sbb
push
dec
rcl
hlt
ja
push
sbbb
pop
ficomps
add
adc
clc
fsubrs
and
sub
add
aad
pushl
pop
out
fs
add
push
sub
arpl
std
fimuls
add
fcomps
lods
nop
stos
dec
jo
mov
popf
or
aam
pop
aaa
cld
pop
add
ret
stc
mov
push
clc
cmp
fiadds
adc
in
pop
pop
aad
add
roll
mov
sbb
cmc
std
scas
xor
or
pop
cmc
xchg
jb
add
stos
addb
and
mov
pusha
push
mov
xchg
add
test
mov
bound
xchg
sbb
add
push
add
pusha
push
adcb
aas
pop
lret
ret
jo,pt
add
add
inc
insb
add
inc
inc
loope
jb
nop
add
add
lcall
testl
and
sbb
rol
add
rcrl
xor
mov
dec
push
movsl
mov
adc
xchg
pop
push
jg
mov
pop
arpl
add
pop
inc
addr16
xor
sbb
ffreep
adc
pop
mov
lcall
adc
sbb
sbb
cwtl
add
xchg
fs
push
xchg
sbb
out
pop
mov
xor
and
mov
xchg
adc
sarb
bound
or
inc
aaa
adc
clc
enter
shll
cld
sub
push
nop
hlt
sub
adcb
clc
push
clc
fnstsw
pop
gs
movsl
xor
add
add
ljmp
dec
and
inc
test
bound
mov
dec
mov
pushf
push
dec
test
cmpsb
adc
int
xor
movsl
push
aam
test
xchg
push
push
add
dec
loopne
pushf
cmp
fdivl
cmp
add
add
inc
dec
adc
jecxz
imul
dec
xchg
dec
out
addb
mov
pop
inc
push
cli
push
xor
mov
add
pop
mov
mov
fwait
pop
clc
pop
and
sub
bound
adc
and
fwait
pop
and
jl
jg
mulb
insl
push
inc
or
outsb
push
sbb
cli
adc
cmp
test
lcall
insb
cli
dec
loopne
adc
xchg
fistl
shlb
adc
pop
js
popa
inc
movsl
xorb
insb
sbb
sub
dec
adc
cwtl
fdivrl
mov
sbb
xchg
call
sub
bound
add
sbb
sbb
or
push
cwtl
jg
adc
loopne
adc
pusha
add
call
push
gs
xchg
icebp
ficoms
sub
nop
call
add
cmp
repnz
sbbb
test
and
sbb
pop
inc
psraw
add
jg
and
and
je
or
jo
movsb
outsl
sub
cli
add
mov
xor
push
aas
mov
xor
pop
or
cli
or
jg
or
out
sbb
sbb
adcl
jb
xchg
add
fwait
clc
adc
ret
stc
lret
push
mov
xchg
jne
pusha
sbb
test
add
jecxz
test
in
jmp
jbe
jg
push
test
movsl
mov
add
scas
add
jmp
add
inc
and
mov
loopne
not
add
mov
clc
dec
ljmp
inc
push
test
add
lcall
sbb
inc
shrb
sbb
gs
popa
jnp
rorl
loopne
ss
aam
fwait
mov
pop
loopne
lea
mov
scas
mov
gs
mov
out
inc
cmp
dec
cmp
dec
inc
or
inc
int
add
fmul
ja
cs
mov
xor
movsb
add
push
jge
jl
loop
lcall
bound
mov
dec
mov
and
push
jle
xor
mov
adc
dec
cwtl
push
jno
lcall
push
mov
xor
push
fmuls
jbe
or
sub
int
sarb
ja
inc
out
jbe
out
add
lret
or
cli
add
test
or
add
jnp
mov
adcb
es
cs
and
aad
sbb
cmc
test
sbb
xchg
test
or
test
jp
or
inc
mov
mov
mov
add
sub
dec
mov
cmp
sbb
movsl
or
stc
push
pusha
cmp
test
dec
loope
fs
adc
sbb
rcl
stos
mov
pop
add
cwtl
and
test
adc
push
xor
add
mov
stos
leave
push
cmp
inc
adc
xchg
js
outsb
repnz
add
add
mov
pop
adc
pop
inc
sbb
pusha
add
sbb
sbb
daa
frstor
pushf
stc
mov
mov
pop
xchg
add
dec
pushf
jbe
adc
ljmp
pop
sahf
inc
adc
cmp
inc
ret
sbb
subl
adc
add
in
cmp
sar
adc
ljmp
insl
cmp
sbb
std
adc
outsl
cld
popf
cmpb
lcall
xchg
mov
cli
mov
loop
dec
rcl
and
fcomps
or
sbb
and
xchg
or
fldenv
adc
add
mov
cmp
mov
fdivp
adc
mul
rolb
out
test
sub
fwait
pop
add
inc
adc
dec
outsb
adc
paddq
pushf
insl
inc
push
push
dec
mov
ret
sbb
sbb
add
mov
mov
inc
inc
shrb
jle
adcl
fs
adc
and
mov
std
jl
loope
fs
push
xchg
jle
and
xor
adc
jo
loopne
idivb
inc
out
add
nop
mov
or
pop
out
jl
sub
add
cld
outsl
cmpsb
shl
adc
insl
adc
mov
sbb
add
inc
or
cli
push
add
outsl
inc
push
nop
mov
jecxz
cli
pop
mov
push
or
pop
push
es
icebp
add
and
push
adcb
sub
call
rcl
and
sub
je
xor
cli
addr16
jg
or
xor
sub
shrb
hlt
fisubrl
data16
nop
clc
fisubl
pop
xchg
clc
pop
jl
mov
xchg
sbb
fsubs
popa
mov
shl
or
imull
push
fldenv
pusha
or
jnp
test
aas
sub
xor
insl
lret
test
outsl
pop
sub
or
aaa
mov
sub
or
aam
and
pusha
movlps
out
stos
push
test
adc
xor
dec
pusha
xchg
push
push
pop
sbbb
cs
cmp
mov
xchg
popa
shlb
ljmp
loopne
repnz
arpl
add
cmp
cwtl
pop
sbb
xchg
mov
push
inc
mov
stc
or
clc
pushl
mov
or
and
repz
inc
push
loop
cmp
lods
sub
fmulp
and
addb
mul
push
or
adc
nop
add
jecxz
sbb
push
sub
dec
push
pop
mov
sbb
call
xchg
add
cltd
xchg
pop
lret
adc
lock
xor
shrb
inc
jbe
add
or
adc
iret
or
rolb
pop
xor
mov
push
adc
adc
sbb
pop
pop
push
aas
and
adc
sub
push
lock
gs
or
inc
add
cli
and
in
pop
shlb
and
push
sbb
sbb
jae
mov
adc
orps
adc
cmpsb
outsb
sub
mov
jl
mov
insl
stc
mov
sbb
add
loopne
in
add
stos
mov
inc
stos
add
sub
jbe
lcall
das
insb
push
push
sub
arpl
sbb
and
fsubs
push
push
dec
inc
xchg
test
mov
sbbb
orl
dec
jno
jbe
lock
jnp
cwtl
or
adc
fidivl
aad
rclb
cltd
dec
and
fst
pushl
add
add
and
add
jno
xchg
xor
cmp
push
clc
push
addb
call
es
dec
shlb
call
mov
sbb
push
sub
dec
mov
in
mov
push
icebp
pop
inc
pushf
dec
adc
insb
mov
call
mov
add
loopne
nop
fs
jmp
call
sbb
pushf
adc
push
and
add
out
out
push
sub
pusha
arpl
push
mov
or
push
ss
xor
aaa
add
nop
je
dec
rcrb
push
mov
jne
lcall
xchg
mov
add
movsl
das
cmpsb
mov
push
clc
dec
inc
and
cld
inc
adc
add
in
and
mov
push
inc
out
mov
shlb
dec
and
mov
pop
add
push
stc
jmp
xor
jb
push
imul
inc
lcall
decl
inc
sub
cmp
add
and
xor
sahf
and
push
pop
shlb
das
cli
out
or
xor
dec
nop
jns
scas
nop
dec
pop
sbb
and
cwtl
add
jae
inc
sbb
repnz
cmp
xor
test
jb
push
add
rcrb
pop
scas
cmp
mov
out
jp
or
and
inc
es
loopne
inc
add
sub
sarb
stc
mov
fs
pop
inc
or
fadds
icebp
sbb
push
sbb
cli
fbld
xchg
inc
push
mov
push
xor
or
shlb
push
adc
loop
filds
jnp
arpl
adc
adc
push
push
das
call
cli
sbb
add
add
adc
jecxz
icebp
sarb
test
add
adc
mov
loop
mov
push
loope
push
in
dec
adc
std
push
and
loope
lcall
pop
sub
clc
push
popf
sub
xchg
ret
andb
jp
in
ret
or
dec
rorb
repnz
mov
jnp
xchg
jnp
sbb
shl
icebp
push
leave
int3
icebp
retw
ja
in
jg
data16
in
aam
and
data16
xor
nop
pushl
sbb
call
test
stc
sub
fidivl
test
pop
xchg
mov
es
fsubr
imul
leave
jp
sub
cmovbe
gs
jnp
cwtl
push
addb
ljmp
into
pop
add
adc
mov
jle
cli
sbb
jo
fidivrs
and
outsb
call
jno
ja
pop
fdivrl
cld
and
cld
add
xchg
cmp
test
cmp
sarb
daa
inc
lcall
add
test
ljmp
sbb
sbb
ljmp
add
cmp
cmp
hlt
or
sbb
mov
push
les
push
jne
shll
pop
inc
orb
andb
push
dec
lock
cmp
aaa
lcall
inc
ret
inc
pusha
sar
xchg
inc
xchg
push
sub
add
lods
sar
mov
cli
xor
xor
stc
call
pop
sub
imul
jo
sbb
addl
and
add
pushf
les
rolb
inc
add
jl
js
inc
inc
xlat
inc
mov
mov
sub
sub
mov
incb
lods
cwtl
mov
add
sbb
or
in
test
push
cwtl
add
push
mov
push
loopne
stos
ljmp
pop
orb
gs
jnp
sbb
xchg
mov
push
jle
or
stc
mov
inc
notb
lea
jg
adc
aas
cmp
cmpb
andl
ss
addb
sbb
cld
mov
sbb
pop
inc
lcall
push
cmp
fbld
dec
push
sbb
xchg
and
stc
push
jo
sbb
incl
sub
adc
add
add
aaa
push
test
sub
insb
in
add
les
das
mov
add
mov
push
mov
fwait
leave
adc
call
rolb
sar
cmpsb
and
pop
shrb
mov
add
das
xchg
pop
add
in
shrl
test
jno
lcall
xor
scas
test
cs
push
mov
add
inc
data16
stc
popa
mov
imul
inc
leave
stc
in
push
rorb
inc
pop
inc
push
in
push
in
inc
pop
adc
pop
sub
push
addb
adcb
rolb
inc
sbb
push
insl
lcall
cmpsb
rclb
jnp
mov
sbb
mov
add
or
rcl
subl
dec
jmp
fcoms
mov
or
ret
fistps
xor
mov
repnz
jp
mov
jl
stos
lea
out
sub
xchg
or
add
sbb
and
out
mov
mov
dec
les
or
cmp
dec
inc
add
push
dec
mov
fld1
adc
in
add
rorb
xlat
sbb
dec
fadds
sub
adc
pop
adc
insl
mov
adc
repnz
xchg
inc
or
cwtl
mov
cs
ss
pushfw
sub
push
mov
loop
xor
test
pushf
inc
sbb
add
loopne
jne
pusha
fs
rorb
or
lcall
inc
cmp
and
cwtl
push
fstps
stos
bound
orb
fiaddl
push
test
ror
push
inc
and
in
and
add
lcall
jl
adc
cmp
and
pop
pusha
sbb
test
jg
stc
decb
and
inc
jbe
int3
js
or
mov
and
and
and
mov
xor
in
ja
ljmp
int
stos
and
hlt
sbb
mov
loopne
or
inc
les
js
out
imul
push
loope
adc
loopne
imul
lret
insb
adc
fimull
and
lret
outsb
mov
test
dec
loopne
or
clc
add
add
test
jmp
and
add
popa
push
out
or
out
pusha
pop
bound
rcr
decl
inc
mov
adc
daa
in
pushf
dec
test
xor
ds
xor
dec
fsubl
jns
adc
mov
pushf
adc
or
inc
mov
add
xor
arpl
jmp
sub
fwait
add
and
xchg
outsb
test
out
fnstenv
shlb
xchg
or
mov
je
or
sbb
rcl
and
jnp
jnp
ficoms
push
dec
shll
shll
inc
or
mov
fbld
pushf
addb
adc
or
loopne
and
ja
mov
adc
mov
jecxz
adc
clc
scas
xor
pop
rcr
test
sbb
adc
std
rcrb
jae
outsb
hlt
push
loopne
mov
loopne
sbb
cli
aaa
adc
insb
sub
rcrb
dec
outsb
aaa
cltd
popa
dec
mov
xchg
nop
ljmp
or
mov
out
add
icebp
incl
xor
push
pusha
xor
pusha
dec
and
mov
imul
mov
mull
mov
xchg
in
inc
or
inc
pop
test
pop
push
aam
sbb
and
sub
mov
insl
mov
cltd
clc
out
mov
xchg
adc
pop
xchg
adc
mov
ret
pusha
aaa
or
adc
fs
inc
rcrb
push
mov
pop
jecxz
cli
xor
add
xor
add
outsl
dec
in
lahf
clc
nop
rolb
loopne
or
xchg
call
add
jle
orl
fcmovnb
pop
bound
or
mov
inc
jbe
fstps
clc
mov
rclb
sahf
add
and
imul
adc
fldenv
add
mov
shlb
in
loop
out
add
lcall
push
jecxz
xor
popa
stos
mov
rolb
jmp
lcall
or
roll
sti
cld
stos
mov
sbb
clc
ja
jecxz
out
add
lods
imul
jecxz
xor
dec
sub
rorl
mov
xchg
repz
push
stos
and
dec
adc
and
movsb
nop
jo
adc
inc
enter
fidivrs
imulb
inc
or
and
sub
or
inc
or
add
movsb
lods
sbb
and
sub
add
add
or
pushf
and
and
out
stc
push
adc
inc
loope
xor
mov
xchg
cs
xor
cmp
loope
add
cmp
xor
add
das
mov
and
cmc
stc
sub
add
jecxz
mov
pop
sub
nop
gs
lcall
test
lcall
test
pop
sbb
push
jo
test
cmp
push
add
das
add
inc
jecxz
add
cmp
and
aad
xchg
outsb
or
lds
inc
or
xor
push
add
pop
push
or
push
mov
and
js
icebp
add
rclb
in
add
mov
pop
subb
ret
inc
mov
xor
hlt
pop
sub
dec
add
decl
lcall
out
cmp
pushf
add
out
outsl
mov
add
pop
cmp
cmp
push
decl
movl
pushf
addb
test
add
sbbb
dec
push
sbb
pushf
inc
push
jno
pop
cmpsb
jmp
xor
sar
paddw
adc
scas
jo
push
adc
inc
push
es
pop
test
repnz
push
sub
pop
rolb
aad
shl
add
add
stos
ja
das
icebp
outsl
js
xchg
dec
lret
adc
bound
addb
cltd
lock
xchg
test
cwtl
mov
dec
shl
imul
and
mov
fcmovu
pushf
push
or
test
sahf
xlat
inc
mov
fwait
add
inc
add
jne
or
aaa
cmp
out
add
cli
pop
lock
mov
dec
dec
push
push
pop
add
lock
je
mov
pop
mov
sbb
jbe
sub
cmpsb
nop
or
mov
or
or
fistps
fwait
or
lods
loop
pushf
rcrb
out
adc
roll
xlat
jg
push
mov
dec
lcall
adc
inc
mov
outsl
pop
fwait
sbb
mov
or
adc
push
add
insl
sti
cmp
pushf
sub
incl
enter
fwait
sbb
pop
push
addr16
adc
loop
xor
inc
inc
cmpsb
aaa
je
lahf
out
cmp
aam
cmp
xchg
loopne
adc
incl
mov
and
stc
int
out
mov
pusha
aas
cli
sti
add
adc
pusha
mov
add
pusha
add
dec
inc
in
pop
push
inc
js
adc
outsb
mov
pop
sbb
insl
mov
or
mov
notb
mov
lock
xchg
add
dec
shr
ss
xor
in
cli
and
pushl
add
adc
add
push
add
jmp
sti
lcall
adc
add
call
xchg
cmpsb
gs
push
add
cmc
dec
fs
pop
lea
or
mov
pop
mov
push
add
pop
ret
ficompl
push
adc
inc
jns
inc
xchg
scas
dec
pop
push
insb
add
inc
pop
dec
scas
pop
pop
mov
mov
gs
push
cmpsb
or
pusha
or
sarb
and
cmpsl
cmpsb
loopne
lcall
jo
in
and
mov
aaa
inc
mov
push
xchg
xchg
lock
mov
sbb
data16
rcll
and
arpl
cmc
xor
mov
xor
lods
adc
inc
or
and
sub
add
mov
adc
addr16
and
sub
mov
mov
ja
sub
fs
inc
adc
cli
adc
xor
adc
add
je
iret
inc
and
lods
or
shr
lcall
adc
adc
ljmp
lock
mov
cmpsl
sbb
nop
add
adc
jecxz
sahf
add
jg
mov
icebp
sub
sub
jbe
lret
std
jb
cli
add
jmp
push
into
arpl
mov
fisubl
stos
cli
cmp
jo
sub
cmp
cli
loop
lock
outsl
or
das
xor
xor
mov
stc
add
fwait
clc
xor
repnz
sub
adc
xchg
push
insl
loope
add
mov
mov
dec
add
and
out
push
out
adc
mov
fnsave
add
and
and
sub
rcrl
add
call
and
out
out
cld
rorb
jo
add
cmp
and
mov
mov
and
scas
mov
or
inc
add
lea
xchg
push
stos
gs
lock
xorl
mov
and
xchg
lcall
push
push
scas
and
push
sarl
fs
cmp
push
and
and
es
pop
insb
cli
push
inc
pusha
pop
xchg
shl
add
clc
add
jp
pusha
and
es
ficoms
xor
sub
lock
cmp
sbb
incl
insl
rclb
lcall
xlat
inc
ja
clc
dec
dec
xor
xor
xchg
mov
or
mov
lock
cmpb
or
push
ljmp
xchg
push
add
inc
cmp
fs
cmp
adc
mov
push
inc
inc
and
push
and
cld
cli
push
iret
or
or
fisttpl
xor
ret
js
mov
rorl
inc
adc
test
add
or
shlb
push
in
add
xchg
add
cli
sbb
sub
or
ljmp
sbb
ja
add
mov
shl
andb
test
mov
or
mov
mov
add
sub
sub
pushf
in
inc
in
jno
pop
push
sub
pop
das
sub
xchg
xorb
dec
ljmp
mov
push
sbb
add
mov
push
hlt
inc
jp
inc
dec
jge
mov
das
sub
add
and
insb
add
stos
loope
or
add
pop
add
stc
push
fs
inc
inc
lcall
test
xor
sbb
lods
add
xchg
adc
sbb
adc
add
sub
das
xchg
rorb
or
lock
mov
inc
xchg
je
in
dec
mov
lret
xor
nop
xchg
out
sbb
call
and
add
hlt
mov
das
or
adc
dec
add
inc
or
test
addb
bound
sbb
mov
rcrl
orb
sbb
sahf
or
inc
cli
and
mov
pop
lock
and
scas
push
push
outsl
addl
xchg
in
data16
adc
outsl
or
sub
in
add
dec
cmp
pop
ret
xchg
xor
adc
mov
or
leave
xchg
jp
sub
push
xlat
scas
adc
mov
popa
cmp
mov
cmp
push
sbb
adc
add
sbb
ja
lea
arpl
lcall
pop
add
xor
sub
bound
xchg
sub
shlb
out
dec
xor
push
cwtl
dec
addb
mov
push
add
mov
xor
push
sarl
xorb
decb
inc
and
jb
sbb
add
addb
add
cwtl
shl
pop
lods
stc
scas
add
pop
push
sub
and
pusha
jbe
xchg
dec
inc
or
jo
or
mov
add
and
sbb
mov
push
mov
movsb
into
pop
das
adc
xor
xor
ja
clc
pcmpgtb
adc
fadd
orb
dec
dec
inc
sbb
sub
pop
sbb
mov
pop
cmc
lcall
fwait
in
out
xor
add
out
out
sbb
sbb
xchg
clc
gs
pop
scas
mov
data16
xor
fdiv
incl
pop
addb
xchg
shll
cli
add
cli
or
rolb
je
inc
and
jbe
leave
nop
sbb
cltd
push
rorb
sub
gs
sarb
ljmp
fcmovnu
xor
sub
xorb
sbb
sub
rorl
jns
add
scas
ds
pusha
inc
in
and
sbb
dec
addb
sbb
mov
pusha
in
sbb
add
adc
sub
add
pop
push
mov
jb
sbb
fidivrl
sub
dec
mov
ljmp
add
add
stos
or
push
shlb
sub
sbb
adc
call
clc
movsl
fisubs
sar
mov
nop
lds
push
leave
jo
adc
pop
xor
mov
incl
lret
or
imul
ret
clc
mov
stos
lret
insl
cwtl
movsb
inc
shl
ds
and
and
sub
mov
or
adc
addl
xor
mov
jp
cmp
mov
xchg
outsl
filds
jae
inc
and
pop
xor
loop
xchg
or
sahf
push
mov
cmp
insb
add
and
jmp
inc
add
xchg
adc
ljmp
mov
mov
xor
sbb
arpl
xor
fsts
adc
jecxz
inc
add
addb
aaa
pusha
or
testb
inc
xor
push
inc
sbb
adc
fistpll
mov
pop
and
mov
cs
add
notb
push
out
or
pop
icebp
mov
add
push
inc
sarb
cmp
add
dec
cmpb
mov
and
and
bound
add
cmp
outsb
add
lea
mov
loopne
pusha
ljmp
push
out
xor
sub
loopne
and
jle
cmp
xchg
inc
push
subb
adc
adc
mov
cmp
sbb
or
xchg
add
lock
inc
aad
lock
push
inc
cld
das
mov
xor
outsl
cmp
sbb
xor
es
xlat
and
test
ret
push
inc
mov
or
adc
in
mov
jmp
adc
ret
and
and
push
cwtl
dec
jecxz
adc
pop
dec
add
mov
mov
add
pusha
adc
or
daa
and
sub
inc
fldt
lock
idivl
push
stos
add
xor
xor
loopne
lret
push
mov
sbbb
sbb
add
push
lock
out
inc
push
sbb
sbbl
gs
mov
push
scas
and
es
call
fcoms
loop
add
pop
fs
push
pusha
sbb
add
enter
sub
mov
sbb
sub
aaa
jmp
addb
add
adc
roll
and
clc
aad
pusha
shrl
ljmp
icebp
inc
adc
lcall
add
rclb
jl
int
add
adc
add
adc
inc
inc
add
test
test
clc
push
mov
int3
imul
mov
ret
outsl
mov
test
and
add
stos
add
loopne
ja
ljmp
sub
arpl
dec
dec
inc
loope
orb
fsubs
int
jb
fwait
mov
adc
je
cmp
push
out
inc
jg
sub
fiadds
pushf
cwtl
pop
sbb
outsb
push
cmpb
cmp
add
pop
and
pop
cltd
adc
sbb
fistpl
add
outsl
ss
cltd
push
add
pop
sbb
pushl
and
out
xor
fsubs
cmpsb
stc
sub
sbb
mov
adc
inc
cmp
inc
adc
xlat
adc
mov
cmp
rclb
sbb
sub
ficompl
imull
jmp
mov
mov
xchg
lock
movsl
jo
sar
fcompl
mov
shrb
mov
jb
xchg
repz
ljmp
inc
clc
pop
sbb
fwait
dec
add
mov
mov
addr16
loop
lea
into
cs
cwtl
arpl
outsl
sub
inc
add
xor
lar
xor
push
fsubs
or
mov
adc
jle
push
jnp
je
adc
dec
mov
adc
pop
adc
sub
out
cmp
fcoms
push
mov
or
lock
adc
lcall
fwait
ds
mov
inc
movsb
call
into
bound
fsubs
mov
fwait
sbb
dec
data16
adc
adc
push
les
loopne
shlb
mov
push
xor
stos
xchg
jb
xor
pop
sub
pop
shr
xor
sub
into
arpl
in
push
push
add
cltd
pop
add
push
xchg
adc
adc
pop
enter
scas
mov
adc
sub
pusha
sar
adc
push
in
fwait
shlb
pop
sbb
repz
sbb
cltd
nop
pushf
inc
xor
or
dec
test
out
add
cld
pop
or
or
in
xor
pop
xchg
fdivr
fisttps
ds
cli
sub
and
aaa
or
xor
jo
fwait
clc
sub
sub
cld
js
orb
pop
inc
and
lds
push
pop
mov
sub
pop
and
pop
push
push
cmpsb
xchg
call
pop
hlt
cmp
xorb
add
out
and
or
daa
push
pushf
scas
cmpb
jae
add
and
sbb
std
fcomip
jo
loopne
fisubs
and
add
stos
mov
pop
push
push
incb
daa
and
jmp
lods
pop
mov
jo
or
cmc
sub
and
fisttps
push
sbb
push
or
fiadds
insb
dec
xor
loop
syscall
pop
push
cmp
dec
adc
loop
lcall
sar
cmp
dec
roll
sbb
mov
adc
lock
adc
pusha
mov
or
push
pop
pop
fs
lcall
pop
clc
inc
imul
lcall
fdivrp
xor
dec
shl
add
out
mov
outsb
adc
decb
cli
enter
pop
adc
jmp
dec
inc
out
or
mov
dec
push
adc
cmpsl
ret
mov
fnsave
xor
sub
add
jmp
movsl
out
pop
dec
add
or
lcall
lcall
stc
push
or
or
add
aad
sti
or
mov
push
inc
and
or
in
pop
mov
add
adc
push
inc
shr
inc
cmpsb
xlat
rolb
mov
adc
mov
fbld
sar
pop
mov
gs
popf
add
cmp
mov
mov
js
add
in
mov
mov
push
xor
xorb
push
xor
or
das
or
pusha
sub
hlt
push
inc
or
cwtl
and
es
xor
loope
data16
xchg
rorb
inc
jne
lock
xor
in
outsl
int3
or
pop
cwtl
nop
xchg
dec
or
dec
dec
fbld
or
icebp
add
fs
fildll
push
push
xchg
pushf
sub
pop
push
call
arpl
adc
lock
cmc
cli
inc
sub
popa
add
add
flds
mov
es
jg
jno
push
sub
add
loope
add
cli
cmp
sub
std
mov
or
xchg
add
ja
xchg
add
push
es
adc
dec
inc
adc
nop
popa
xor
xor
adc
pop
cmp
sbb
push
xor
dec
inc
ja
xchg
sbb
push
add
mov
ret
popa
xor
mov
icebp
or
add
xor
pop
push
xchg
fsts
subl
ret
loope
cwtl
pop
and
int
stc
cmc
push
add
and
f2xm1
mov
pop
add
and
and
dec
lret
mov
xor
ds
pushl
rolb
inc
jmp
ret
lcall
xor
bound
xor
rclb
ret
hlt
or
outsl
xchg
icebp
lods
adc
push
xchg
inc
push
xor
mov
mov
add
lds
fdivp
mov
push
fidivrl
inc
add
cmc
inc
add
inc
mov
push
push
stc
cli
adc
fs
cld
pop
sbbb
push
xchg
jmp
mov
mov
leave
hlt
fisttps
rolb
nop
xchg
roll
inc
mov
lret
lods
cltd
jo
sub
int3
xor
mov
out
or
stc
loopne
xor
lock
jo
sbb
clc
lock
ffree
xchg
lock
dec
xor
pusha
jo
push
insb
push
xor
jo
or
cmp
dec
mov
sbb
mov
sbb
jo
cmp
movsl
fimuls
outsb
pop
ret
cmpb
adc
adc
das
sub
nop
shrb
jo
fs
adcl
testb
movsb
lock
aad
pop
in
push
pop
outsl
std
fs
adc
cwtl
loope
insl
add
leave
add
and
pop
std
ja
pushf
pop
aad
or
jns
icebp
sbb
or
adc
cld
fbld
jns
nop
pop
xor
add
movsb
cs
and
sub
sbb
lock
aam
loopne
mov
fistl
mov
push
cmc
rolb
add
pop
add
cmc
push
loopne
pop
or
lcall
mov
cmp
cs
sub
or
add
out
xchg
mov
or
mov
roll
adc
push
out
nop
in
dec
outsl
adc
cmpb
or
xor
adc
jo
pop
pop
add
add
sbb
mul
add
or
mov
out
int
and
xor
adc
add
xchg
jl
sub
out
gs
push
add
and
inc
adc
ret
popa
and
inc
push
shrb
cltd
lods
cs
mov
stos
movsl
inc
inc
inc
filds
xchg
xchg
mov
cli
mov
bnd
push
jp
push
xchg
and
inc
test
loopne
lahf
push
mov
movsl
js
push
out
sarb
loopne
dec
data16
pop
mov
jnp
or
dec
insb
outsb
add
pusha
cmp
xchg
mov
jecxz
sbb
pop
adc
loopne
pusha
adc
mov
sub
add
add
dec
add
add
gs
sbb
popa
stos
push
test
test
add
es
inc
nop
jl
cwtl
add
mov
lea
mov
aas
push
pop
mov
nop
scas
sub
fs
sahf
call
insl
std
xchg
adcb
adc
pushl
leave
add
ds
add
andl
aaa
stc
push
scas
mov
sbb
dec
clc
xlat
mov
clc
int
push
sbb
push
adc
adc
aad
and
push
pop
rorl
loop
push
add
adc
ljmp
test
inc
jae
or
inc
gs
stc
out
or
xor
xchg
inc
jo
pop
out
push
add
popa
test
xchg
adc
loope
sub
dec
sub
pop
leave
or
add
loope
lcall
inc
sbb
mov
inc
pop
push
cwtl
mov
inc
imul
loopne
add
pop
mov
push
push
and
stc
jp
dec
loopne
or
mov
andl
add
sbb
add
mov
incl
in
sarb
enter
and
xchg
xchg
insb
mov
and
nop
std
mov
inc
add
fwait
add
cs
outsb
sub
pushf
mov
scas
int3
stc
lea
push
daa
rcll
imulb
shlb
test
xchg
enter
arpl
cld
inc
add
jge
test
rol
hlt
mov
bound
inc
or
or
adc
notb
sbb
dec
inc
loopne
xchg
or
adc
lods
mov
inc
mov
lods
int3
jmp
jg
or
call
add
or
mov
mov
int3
add
data16
cmp
cwtl
incb
mov
mov
mov
push
push
call
shrb
icebp
sahf
xor
gs
or
adc
repnz
pusha
jp
inc
test
lcall
and
cli
xor
or
jecxz
mov
dec
mov
addb
jno
adc
inc
jle
or
jns
call
ljmp
sbb
add
add
sbb
or
pop
sub
mov
dec
loopne
cs
stos
lcall
shlb
add
popa
push
push
andl
ret
in
dec
xchg
lock
pop
mov
test
insb
loopne
xchg
mov
rcl
pop
pop
adc
lcall
lods
lcall
pusha
sub
xor
stc
filds
fcmovb
mov
in
or
mov
mov
andl
or
cwtl
jp
adc
pop
ss
and
adc
push
or
adc
jnp
enter
mov
mov
insb
inc
inc
pusha
mov
push
add
and
push
cld
dec
int3
fwait
shlb
cld
orb
pop
jnp
out
mov
lcall
stos
or
adc
loopne
xchg
test
or
jnp
dec
sbb
aas
outsb
out
loopne
pop
test
movsb
push
adc
pushf
dec
call
pop
push
aaa
loopne
jnp
bound
mov
lds
add
jnp
imul
dec
add
jne
mov
xor
add
outsl
xchg
shrb
data16
sbb
ret
push
or
lcall
mov
adc
jp
cli
adc
setb
and
mov
shrb
inc
xchg
or
test
lds
push
sbb
inc
sarb
add
inc
sbb
dec
js
mov
loopne
testb
push
daa
mov
pop
outsb
xchg
pusha
add
sub
sbb
movb
das
dec
fistpll
ret
or
add
in
xor
add
lock
xchg
loop
jns
inc
push
mov
inc
in
mov
shlb
and
inc
outsl
cmp
mov
cmpsl
std
or
lahf
stc
push
movsb
add
mov
imul
add
dec
or
push
add
push
xchg
inc
out
pop
arpl
inc
jmp
adc
or
sbb
inc
daa
cmp
push
or
or
stc
cmp
jne
mov
xchg
mov
sbbl
rclb
cmpb
jns
mov
ja
clc
cltd
xchg
dec
stc
sbb
push
push
movsb
xor
dec
sbb
lock
mov
dec
dec
fs
add
fisttpl
jbe
add
sbb
cmp
push
andb
push
rorl
add
cmp
stc
shll
xchg
add
add
imul
lret
insb
inc
add
add
mov
and
lcall
and
pop
xor
inc
test
xor
xor
dec
adc
add
data16
sub
aam
sbb
add
fwait
outsb
push
jmp
add
adc
out
inc
ficompl
je
loopne
lods
ret
sbb
add
outsl
adc
out
add
inc
push
inc
xor
in
cmp
pop
push
jo
adc
add
popa
push
bound
push
add
add
cmp
sub
sub
mov
sahf
movsb
and
ret
icebp
in
lock
cmp
pop
fs
pop
hlt
add
mov
push
sub
add
stc
stos
cmpsb
push
sbb
mov
jns
cmpsb
jno
call
mov
movsb
mov
adc
pop
xchg
filds
movb
mov
insb
mov
lock
inc
stc
sbb
xchg
adc
inc
add
and
hlt
push
adcl
jo
push
mov
jg
adc
loope
push
out
xor
in
jg
or
cwtl
xchg
xchg
cmp
gs
and
add
sub
je
and
xchg
dec
mov
adc
cmp
arpl
inc
loopne
pop
aam
and
inc
lock
mov
or
adc
ret
incl
sub
mov
sbb
sub
add
sbb
adc
add
xor
xchg
add
add
add
push
xor
cwtl
and
outsl
fbstp
mov
adc
sbb
or
mov
loopne
loope
shlb
shl
xchg
jno
pushl
jb
add
add
xchg
cmpsl
mov
nop
xlat
shlb
in
cmp
pop
lock
xchg
adc
or
add
fisubrl
loope
lret
cltd
pop
pop
dec
dec
sub
mov
das
sub
mov
push
subb
mov
fs
hlt
pop
movb
sahf
adc
cli
and
jge
movsb
add
or
mov
add
pop
lcall
adc
or
or
adc
fcoms
adc
push
mov
int
rorb
nop
cmp
pcmpeqb
add
pushf
pushf
fwait
lods
pop
jne
inc
push
pushf
mov
pop
inc
pop
and
lds
pop
push
andl
fcomip
aaa
adc
add
xor
inc
stos
adc
subb
cmpsb
insb
sbb
sub
jnp
dec
call
or
dec
fsubs
rclb
sarb
add
fstl
sub
inc
cmp
adc
rolb
lcall
and
rolb
mov
fists
aam
leave
in
push
jl
testb
out
mov
cli
in
mov
mov
sbb
shrb
scas
and
mov
or
cmp
lcall
cmpb
and
lcall
sbb
add
push
out
cwtl
adc
pop
dec
or
mov
nop
xorl
cs
daa
cwtl
xchg
insb
or
inc
inc
adc
std
outsl
pop
sbb
xchg
sub
xchg
and
sbb
add
mov
mov
mov
sbb
push
les
dec
and
in
nop
or
rolb
je
insl
scas
add
lcall
testb
shrl
mov
cmpb
xchg
pop
push
shrb
cmpsl
sbbb
int
mov
or
and
xor
add
incl
leave
je
ljmp
add
add
or
jmp
dec
movsl
nop
add
push
xchg
mov
pusha
push
xchg
add
les
js
add
pusha
xchg
in
fnstsw
and
cmp
xchg
icebp
mov
dec
mov
xor
push
mov
jg
adc
ljmp
xor
aam
fs
add
jg
pusha
add
cmp
shrl
imulb
xor
push
xchg
and
jne
shll
xchg
fsubs
nop
add
rolb
push
inc
and
lcall
cwtl
inc
xor
stc
test
inc
add
cmp
or
dec
sbb
mov
adc
xorb
aad
aas
stc
pop
jmp
xor
mov
sub
cmpsl
xchg
dec
xchg
popa
inc
push
xor
pushl
filds
push
push
or
adc
stc
insb
xchg
add
adc
lock
cld
ret
and
bound
and
stc
dec
inc
add
sub
flds
mov
or
movsb
mov
push
fildll
ds
in
push
lea
idiv
add
push
add
pop
add
mov
or
pusha
push
and
or
fdivr
mov
xor
xchg
sub
or
xor
sbb
add
scas
push
pop
adc
add
mov
add
push
ret
add
add
movsb
inc
add
add
jecxz
sbb
cmp
mov
out
iret
fwait
mov
push
and
xor
add
xorl
lcall
sbb
inc
adc
inc
nop
mov
mov
mov
cmpb
sbb
pop
mov
dec
cli
fistpll
loope
mov
or
aam
add
or
adc
add
xor
incl
push
stc
outsb
fwait
andl
and
mov
sbb
adc
pop
fdiv
sub
clc
xchg
fs
test
add
sbb
add
push
leave
push
adc
addb
jg
ja
push
cmp
outsl
imul
or
std
cmp
inc
addl
xchg
sbb
and
xor
push
sarl
cmp
adc
lock
or
add
leave
inc
add
mov
or
jo
adc
push
push
add
or
push
call
and
push
and
cmpsb
sbb
cmp
aaa
add
lds
lods
daa
lcall
test
and
rcll
leave
pushf
js
jg
daa
sbb
daa
dec
adc
push
adc
or
push
in
adc
and
add
jns
or
xchg
mov
mov
push
mov
iret
imul
aaa
lods
add
add
adc
add
cwtl
ret
subl
push
imul
subb
push
std
push
dec
push
add
push
mov
or
mov
cli
in
rcrb
mov
mov
jns
sbb
pusha
xor
stos
mov
push
inc
adc
push
clc
lea
ja
jb
fcomps
pop
lahf
jo
cmc
adc
push
sbb
cmc
addl
jp
rolb
or
inc
sbb
sbb
sahf
cmp
sbb
test
adc
or
or
sbb
in
roll
ljmp
ret
incl
push
mov
inc
lcall
movsl
jne
in
or
fwait
dec
lods
mov
push
sub
inc
les
imul
dec
or
pushf
adc
and
xor
nop
push
icebp
push
loopne
or
faddp
out
stc
std
enter
adc
aam
hlt
sub
int
add
push
js
fucom
xor
xchg
loop
adc
or
js
add
cmc
rcrb
mov
mov
hlt
aas
xchg
jnp
adc
lcall
sbb
je
mov
sbb
mov
xor
add
adc
sbbb
adc
add
inc
add
pop
adc
and
clc
dec
das
test
jle
inc
inc
in
jne
dec
mov
inc
inc
inc
lock
scas
arpl
add
or
xor
adc
sbb
jmp
mov
dec
add
lcall
ss
test
push
stc
stos
pop
mov
and
les
add
sbb
inc
xlat
scas
add
or
mov
mov
sbb
cmp
loope
pop
jne
mov
cmpb
adc
add
stc
inc
mov
stos
pusha
adc
call
test
js
insb
cmpsb
mov
pop
pop
pop
and
and
into
mov
loop
sbb
jns
hlt
out
xor
and
add
repnz
in
jg
add
daa
add
or
or
or
fwait
jge
and
mov
in
sub
or
xlat
dec
scas
or
inc
or
or
or
or
sbb
jbe,pn
or
dec
test
xchg
repnz
mulb
jle
mov
pop
jp
loope
aam
and
sbb
fisubrl
jecxz
mov
lret
lock
dec
rcl
jns
add
stc
daa
loop
cltd
xchg
xorb
shrb
stc
test
sbb
add
pop
mov
adc
add
adc
fs
pop
adc
mov
hlt
ss
or
ss
orb
loopne
mov
jo
loope
mov
and
cmp
push
popf
adc
rolb
sub
loope
add
adc
adc
mov
adc
inc
sbb
jo
add
cmp
add
dec
adc
jg
mov
movsb
add
test
inc
push
movsb
pop
insb
add
jns
cmp
clc
scas
sub
incb
roll
mov
mov
mov
adc
lds
or
cmpsb
loopne
add
jo
push
or
push
xchg
rclb
adc
orl
jns
lret
into
mov
loopne
popl
out
pushf
cmpsb
mov
mov
sub
jmp
stc
insl
outsl
and
dec
loop
jecxz
cmc
out
and
jle
xor
sbb
jl
sbb
xchg
out
inc
test
std
stos
add
sbb
shr
xchg
test
add
adc
sbb
pop
pop
aaa
sbb
ret
pop
adcb
mov
or
adc
sub
push
add
sub
jnp
fadds
xorb
inc
xor
push
mov
add
aaa
or
pop
mov
push
xchg
aad
cs
outsl
xchg
je
xor
push
insl
mov
ret
cmpsl
outsl
scas
add
cpuid
add
sub
data16
sbb
fdivs
jo
and
pop
bnd
insl
lock
add
xchg
mov
out
pusha
bound
jns
dec
enter
ljmp
or
or
mov
inc
dec
ss
and
addb
pop
push
mov
sbb
dec
cwtl
adc
mov
add
or
popa
xchg
cmp
adc
test
into
stc
sub
mov
addl
xor
sbb
stc
leave
dec
jns
cmc
mov
popa
leave
icebp
or
and
jmp
loopne
add
inc
es
or
inc
jmp
cs
mov
xor
rclb
fwait
mov
in
addb
mov
and
adc
xor
mulb
adc
rcll
cwtl
pop
cwtl
data16
sbb
stc
dec
stos
add
lds
cmovb
hlt
cs
and
or
add
cmpsb
push
inc
add
cltd
or
loop
lcall
jno
lret
cmp
dec
dec
cltd
or
es
fs
push
in
rclb
adc
sbb
sbb
enter
xor
add
fs
out
adcb
loopne
stc
push
pusha
sbb
stos
test
xchg
mov
inc
inc
adc
adc
fwait
mov
push
fstl
nop
or
jg
pusha
fsts
and
dec
and
repnz
subl
insb
jbe
subb
mov
jno
ds
lcall
stc
push
xchg
add
or
add
pop
aad
add
jmp
stos
push
mov
enter
sub
sub
pop
fcomip
out
xor
cmp
push
inc
test
filds
adc
push
lcall
jno
mov
mov
fimuls
jmp
ja
dec
add
dec
mov
jg
pop
test
and
and
shlb
mov
jno
or
inc
fdivs
out
mov
xor
mov
push
xor
inc
add
push
sub
shll
jle
push
jo
sub
lcall
mov
loopne
mov
rclb
jge
push
fldt
test
ljmp
loopne
dec
inc
addl
mov
mov
das
jmp
pop
push
out
sbbb
outsb
repnz
fistpll
or
pop
xor
lock
pop
and
pop
dec
jbe
pusha
outsl
ret
inc
mov
mov
hlt
push
adc
or
xchg
sbb
jp
out
nop
pop
in
or
xor
rorl
lock
sub
ror
sahf
loope
lds
cli
out
jle
add
insb
cld
push
shll
lock
xor
push
push
xchg
fisubrs
add
jg
cmc
or
sbb
xor
mov
cmpb
add
icebp
push
adc
add
push
ljmp
test
adc
xor
add
xor
andl
add
add
add
jge
jle
cmp
fdivrl
movsb
sub
adc
add
enter
jne
ja
pusha
test
ds
push
push
and
aas
inc
mov
lcall
sub
sarb
cld
adc
sbb
data16
push
cmp
cmp
pshufw
sbb
nop
fs
test
nop
test
add
les
jecxz
mov
popa
shlb
inc
or
mov
cld
shll
add
inc
jae
cli
sbb
loopne
lods
adc
xor
popf
test
mov
pushf
fs
sbb
mov
nop
push
and
rorb
popf
inc
scas
mov
add
outsl
push
cmp
dec
cmp
sub
icebp
rclb
mov
popf
aaa
xchg
decb
jge
insb
popa
cwtl
fs
cmpsb
jb
or
dec
pop
lods
add
jns
jo
pushf
ljmp
jecxz
add
pushf
xchg
and
or
decl
jns
sub
shlb
mov
add
push
jge
leave
mov
jno
or
xchg
push
mov
or
xor
jl
leave
push
sub
movsb
dec
mov
add
jge
stc
add
add
andb
adc
out
and
inc
jnp
dec
inc
int
test
add
cmp
cmp
insb
add
insb
sub
out
adc
sbb
dec
xchg
inc
aam
and
inc
scas
sbb
pushl
inc
mov
and
mov
sbb
inc
pop
dec
clc
adc
fiadds
mov
sbb
out
pushf
jecxz
add
add
mov
incl
out
xor
and
insl
mov
popa
popa
stc
stos
and
test
jle
test
add
cmp
fisubrs
mov
call
addb
pop
push
lahf
mov
push
test
or
movsl
fwait
gs
insb
push
inc
std
inc
sarb
xchg
lods
gs
ja
sbb
sub
icebp
mov
pop
stos
lock
pushf
ljmp
inc
stc
adc
daa
and
xor
push
stc
lods
cs
or
gs
vandnps
pop
push
adc
ret
or
subb
hlt
ret
jo
push
adc
sub
shlb
pop
inc
mov
adc
mov
js
or
es
inc
mov
fdivrl
xor
sub
sub
inc
popf
loop
push
dec
subb
ss
out
sbb
sub
pop
js
ret
lods
add
xor
rcrl
or
push
pop
add
push
das
test
add
test
pop
subb
sbb
pop
push
mov
xor
inc
inc
add
lret
stc
mov
repnz
cs
xor
inc
pop
adc
xor
push
push
sub
sub
mov
movsb
xor
movsb
movsb
mov
pusha
mov
sub
and
stos
add
jns
or
lcall
push
mov
call
mov
mov
and
fcmovnbe
and
add
sub
loop
push
dec
inc
xor
fdivr
sub
insb
xchg
je
in
add
jge
addb
movsb
cli
or
rorb
mov
mov
and
out
outsb
rolb
sbbb
xchg
inc
sets
bound
cmp
and
sbb
pop
and
lock
jg
cli
sbb
out
or
xor
xchg
hlt
rcrb
incl
into
sbbb
inc
jnp
push
sbb
negb
cli
fadd
cwtl
adc
cmpl
add
stos
mov
add
inc
mov
mov
daa
xor
lea
adc
sbbb
sbb
stc
stos
xor
std
mov
out
mov
aam
or
dec
jp
adc
ljmp
lods
jmp
lret
dec
fidivrl
jl
out
or
push
mov
inc
adc
and
or
ret
xchg
sbb
jo
xchg
dec
xchg
adc
test
out
movsb
mov
stc
jmp
sub
dec
aas
jo
out
sub
and
add
sub
fildl
mov
roll
add
call
mov
push
incl
lock
dec
add
pop
ds
jo
xchg
cld
xchg
pop
inc
sbb
push
push
xor
outsb
sbb
sub
and
aaa
xchg
jnp
shr
push
rcrb
mov
movsb
ja
or
rolb
push
out
stos
dec
gs
pop
shlb
mov
adc
bound
inc
scas
dec
scas
subb
andb
dec
jg
icebp
fs
fs
pop
sub
push
cmp
pop
adc
mov
lock
adc
data16
mov
lock
aaa
sarb
mov
mov
daa
stc
xchg
mov
dec
mov
daa
inc
xor
cmc
mov
push
add
mov
arpl
mov
add
push
and
int3
inc
mov
and
movsb
and
sub
push
jle
push
adc
push
cwtl
xorb
sbb
add
pusha
jns
xchg
clc
stc
add
imulb
or
hlt
adc
orb
cmp
inc
outsl
xchg
jecxz
dec
pop
jno
jbe
outsl
sarl
mov
and
js
and
subl
xor
add
jb
mov
add
jge
das
cld
add
in
fldt
push
shl
mov
add
cmpsb
movsb
sbb
push
sbb
insl
push
insl
and
fwait
out
clc
add
mov
and
lods
stc
jmp
jno
pop
pop
cmp
pusha
dec
pushf
xchg
imul
and
incl
inc
cmp
repz
fs
add
cmp
adc
inc
push
or
pusha
outsb
add
rol
adc
popf
pusha
adc
sub
mov
test
adc
loopne
jp
inc
and
mov
and
adc
ret
loopne
inc
jns
add
push
cwtl
xchg
stc
cmp
or
sbb
sbb
adc
add
in
adcl
jno
pusha
bound
and
sub
mov
jecxz
or
jnp
inc
or
fists
or
inc
stc
cmpsl
pusha
sub
aam
pop
mov
aam
test
daa
sbb
rorb
sbb
and
pushf
roll
ret
or
add
add
loopne
lea
clc
jo
mov
pop
ret
rolb
loope
sbb
scas
leave
es
pop
test
sbb
inc
adc
mov
inc
xor
jns
and
push
jo
pusha
inc
imul
movsl
fisubrl
and
js
pushf
pushf
in
int3
jne
cli
jmp
xor
js
inc
or
jmp
xor
jb
imul
xchg
sbbb
es
decl
jmp
sbb
or
or
fdivs
dec
push
stc
adc
loopne
mov
je
add
inc
and
inc
das
outsl
jg
add
mov
and
cmp
add
pop
pushf
test
aam
cli
mov
out
imul
push
or
shlb
lock
sbb
mov
fdiv
dec
add
add
ljmp
dec
movsb
sub
inc
add
mov
insl
subb
insb
pop
mov
jne
sub
adc
jl
loopne
inc
in
sub
call
jne
sub
sbb
and
push
sub
inc
pop
jne
mov
insb
movl
and
jle
loop
subb
enter
ss
sub
notb
mov
xchg
xchg
aam
cwtl
out
or
popf
add
and
push
inc
jns
jg
loopne
insb
add
and
int3
sahf
or
cmp
lock
jmp
dec
outsl
pop
out
xchg
cmc
lcall
cmp
sub
add
clc
ja
jp
insl
movsl
sarb
mov
clc
outsl
fwait
lock
cli
xor
add
mov
inc
or
loopne
dec
mov
jae
sub
cmp
add
and
fidivl
sbb
inc
or
out
adc
xor
repnz
int
add
cmp
mov
test
xchg
and
and
inc
add
test
insb
mov
inc
xchg
pop
add
ljmp
pusha
xchg
lret
add
xor
add
ss
inc
jbe
push
fsubl
roll
sbb
popf
mov
add
push
hlt
xorb
xlat
clc
and
out
out
inc
shlb
add
mov
lcall
dec
or
and
inc
mov
out
gs
sbb
dec
pop
xor
cmp
nop
fisubl
and
test
sahf
mov
inc
xor
cmpsl
jl
sub
sbb
dec
xor
stos
or
outsl
pop
adcb
mov
xchg
repz
push
test
dec
xor
adc
pop
leave
mov
lock
sub
adc
mov
sbb
sub
fwait
fwait
mov
push
pushf
push
pmaxsw
daa
subb
sub
call
push
sbbb
or
int3
or
add
dec
out
out
mov
and
sbb
add
rorb
mov
or
adc
call
adc
xor
sbb
push
cli
and
fisubs
xor
mov
jbe
inc
xchg
lock
push
stos
adc
mov
stc
xchg
je
pop
push
adc
add
and
push
sti
mov
test
jbe
xchg
inc
das
inc
and
xchg
inc
sar
mov
push
add
rolb
xor
or
test
loope
les
stc
xchg
pusha
adc
adc
mov
movsl
loopne
adc
xor
dec
or
xchg
mov
stos
mov
loope
dec
incl
adc
dec
cli
dec
popa
xchg
sbb
add
adc
clc
sbbb
fnclex
js
rcrb
sub
ljmp
out
sub
add
rolb
jmp
cs
or
push
cli
ja
inc
add
or
sub
push
ret
mov
sub
dec
cli
mov
lock
pop
mov
ret
out
test
aam
adc
inc
xor
ds
lret
push
push
add
and
pop
add
lods
into
fsts
or
adc
inc
xchg
call
jg
in
and
push
out
cli
aas
jl
add
sub
pusha
xor
adc
adc
stos
push
scas
shll
je
jae
dec
out
adc
shll
insb
pop
push
adc
pop
xor
outsb
fsubl
ret
ss
sub
mov
lret
pusha
clc
lahf
lods
and
mov
fsubs
rolb
jb
cmpsb
add
cmp
hlt
sub
shlb
add
pushl
fwait
pop
sub
sub
loopne
loopne
rclb
inc
mov
nop
repnz
fimuls
add
push
sbb
push
inc
jge
mov
add
out
inc
add
mov
sbb
pop
arpl
cs
decl
cmp
shrb
and
std
and
push
inc
inc
xorb
push
mov
jmp
mov
cwtl
shlb
jle
pop
xchg
push
loope
mov
data16
dec
push
adc
shlb
call
push
xchg
loope
add
testl
pushf
and
cmpsb
sub
adc
mulb
addl
movsb
xchg
xchg
rcrb
sub
xchg
cwtl
push
insb
push
push
xor
sbb
mov
inc
xor
pop
bound
jmpw
rorb
adc
jp
pushl
fildl
ret
test
lods
jmp
fisubrs
inc
cld
inc
push
mov
mov
mov
aam
and
incl
popf
xlat
adc
and
cmp
mov
shrb
clc
push
rorl
adc
lods
sarb
dec
dec
loop
rolb
stos
xchg
sbb
pop
add
inc
cld
pop
xchg
cwtl
adc
inc
sbb
xor
out
sub
add
cmc
xchg
or
sbb
add
dec
sbb
ljmp
test
loop
mov
pop
adc
add
xchg
sbb
mov
mov
and
sbbb
mov
rolb
sub
inc
sbb
pusha
addb
sbb
add
adc
add
stos
add
pop
rorl
or
or
mov
or
bound
or
cld
mov
cli
xor
cmpsl
pop
or
add
sbb
or
dec
mov
sub
jo
lcall
shr
jb
sub
jo
cmp
cld
fildll
xchg
sbb
dec
shll
inc
std
add
adc
out
mov
sbb
push
and
cmp
dec
mov
cld
pop
outsb
data16
lcall
cmp
pop
pop
inc
aam
jle
xor
pop
in
loope
mov
cmpsb
pop
cmp
cmp
lcall
mov
insb
sub
push
insb
cld
and
or
mov
push
sti
dec
cmpb
and
pusha
and
andb
inc
inc
mov
adc
adc
adc
xlat
out
or
push
test
pop
pushf
loopne
jmp
rcrb
pop
xor
dec
fcom
mov
stc
add
or
pushf
loopne
jmp
inc
add
outsl
and
add
mov
push
std
decl
xchg
adc
push
and
jl
and
xchg
and
fucompp
or
jp
and
and
pop
jnp
pushf
and
sub
xor
sarl
sbb
rclb
hlt
xor
mov
and
dec
pop
cmc
pop
sbb
jo
lret
test
xlat
push
fidivl
mov
loop
add
cwtl
das
jg
hlt
popf
jle
cmpsl
addl
push
inc
xor
inc
pushf
stc
fldln2
push
aam
adc
orl
and
lcall
adc
xchg
xor
push
jnp
shll
pop
lock
and
mov
push
adc
inc
sub
mov
fdivs
pop
sahf
inc
inc
jg
xchg
add
jge
hlt
imul
push
jge
xor
jmp
fimuls
andb
insb
add
insb
data16
and
sub
rclb
push
mov
add
mov
hlt
or
sbb
shlb
in
mov
jb
out
push
shlb
movsb
add
imulb
in
out
popa
insb
into
das
int3
dec
outsl
jecxz
repnz
repnz
adcl
adc
and
add
das
fcompl
push
or
add
std
add
imul
mov
hlt
cmp
sbb
sbb
add
and
leave
fadds
dec
mov
cli
add
adc
pop
adc
pop
stc
loop
and
adc
push
outsb
test
push
in
xor
inc
mov
data16
jns
cs
jmp
clc
test
add
ss
jle
mov
add
fs
jo
add
sbb
push
inc
and
mov
cmpb
pop
mov
hlt
sub
push
xchg
or
add
or
inc
rorb
push
and
aad
mov
pusha
sub
sahf
add
orl
adc
int3
dec
dec
mov
mov
jnp
xchg
sbb
mov
cli
push
les
loopne
push
jbe
xor
lcall
lret
and
xorb
addb
inc
xor
push
sarl
sub
out
outsl
xchg
aad
inc
add
sahf
and
inc
add
test
or
push
hlt
data16
jp
xchg
sub
xchg
dec
jmp
hlt
adc
pop
inc
addb
or
xor
lock
orl
push
or
inc
jp
push
or
mov
inc
adc
andb
cli
orb
lahf
xchg
fsubrp
pusha
inc
rorb
inc
dec
rclb
push
cmp
sub
test
cmc
add
fs
xchg
rcrb
and
pusha
mov
fistps
je
sbb
sub
in
mov
sbb
inc
add
mov
aam
push
aaa
pop
lcall
push
xchg
inc
cmp
sub
sbb
push
insb
sub
pushf
inc
xor
sbb
call
call
scas
out
pushf
jb
inc
inc
inc
shlb
inc
jbe
push
int3
adc
repnz
and
mov
push
pushf
les
inc
mov
lods
clc
mov
shlb
cs
mov
fdivp
dec
inc
and
mov
cli
out
mov
leave
and
jbe
xor
push
inc
push
mov
inc
dec
imul
push
int3
orb
cltd
shlb
add
inc
cs
mov
or
aam
call
or
fadds
add
out
shl
inc
pop
sbb
rolb
into
rorl
inc
inc
adc
rorb
xchg
cmp
lcall
dec
add
add
pop
fs
jle
dec
nop
std
mov
incl
pushf
movsb
or
insb
js
mov
shl
stc
jmp
push
xor
add
inc
pusha
sub
inc
in
aam
or
int
mov
sub
out
daa
jo
cmpb
add
add
jl
add
les
or
orb
or
push
cmp
jl
mov
jb
mov
sarb
insb
push
or
loopne
addl
fadds
andb
push
push
or
das
add
pusha
fs
scas
dec
pop
cld
fistps
adc
cmpb
pop
dec
xchg
xor
loope
xlat
adc
ljmp
add
add
test
add
mov
inc
cs
imul
incl
add
xor
mov
push
cld
ds
cwtl
jg
hlt
imul
out
jle
cmpsb
push
je
gs
inc
sub
lock
ljmp
and
inc
dec
sub
add
mov
inc
jne
jl
mov
loop
jle
xor
gs
sbb
out
push
xchg
rclb
or
dec
cmp
inc
adc
xor
clc
push
xchg
sbb
dec
rolb
dec
rolb
sarb
adc
cmp
cwtl
les
loopne
mov
orl
dec
xor
cli
mov
xchg
adc
cwtl
test
add
gs
and
imulb
push
or
mov
pop
sarb
mov
push
or
mov
inc
lods
es
sbb
inc
mov
cmp
aam
or
add
loope
pushf
or
rorl
in
add
cmp
mov
and
xor
mov
lods
sub
cmp
jo
add
push
and
pop
and
add
push
push
adc
adc
mov
and
ja
ret
pop
jge
and
and
out
adc
loope
adc
fnsaves
xor
shll
jno
roll
ret
test
pusha
dec
mov
dec
sbb
mov
xor
inc
add
cwtl
pop
adc
mov
cmp
sub
outsl
cmp
fistl
mov
adc
lahf
add
fisubl
or
xor
mov
hlt
add
or
ljmp
shll
sar
xchg
add
enter
and
dec
cmp
outsb
adc
mov
adc
cli
fadd
push
adcl
dec
nop
sbb
scas
xor
inc
or
fwait
or
and
outsb
int3
lods
loopne
or
cmp
mov
sub
data16
nop
xchg
inc
notb
ret
xchg
jbe
xchg
and
mov
sbbb
cmp
sub
xchg
ljmp
mov
adc
inc
fiadds
aaa
adc
cli
jg
add
fwait
pop
sub
mov
inc
mull
or
jle
outsl
lret
in
cltd
pop
clc
inc
adc
inc
sbb
in
dec
mov
ja
push
push
ljmp
in
mov
insb
hlt
push
add
mov
push
pop
fwait
and
hlt
adc
add
sarb
push
insb
push
incl
lret
test
ret
addb
bound
add
mov
call
push
push
xchg
mov
add
push
add
mov
aam
push
fbstp
adc
outsl
adc
ds
adc
add
adc
fiadds
sub
shlb
rcl
stc
and
mov
in
add
push
push
pop
adc
aas
arpl
sbb
add
xor
sarl
xor
sbb
rcrl
mov
fidivl
shl
add
insb
mov
ja
rorl
lock
add
sahf
test
int3
dec
mov
lock
sub
mov
sbb
push
jno
xor
mov
mov
test
movsl
mov
mov
inc
insb
lods
xor
add
pop
add
outsb
sbb
out
mov
loope
out
push
fmull
add
xor
push
clc
push
jo
nop
sbb
shlb
ljmp
sub
faddl
jnp
cwtl
insb
xchg
test
cmp
pop
cmp
stos
add
addl
sbb
call
and
xlat
decl
push
push
in
add
mov
jle
sub
and
lock
lea
std
jmp
pop
sbb
push
gs
mov
adc
gs
mov
adc
add
xor
clc
mov
sbb
and
sar
push
add
cmpsb
adc
adc
bound
xchg
stc
pop
gs
pop
add
and
inc
cmp
das
out
in
jmp
add
clc
pop
mov
push
insb
add
es
inc
clc
aas
push
and
xor
add
or
lods
add
fwait
clc
icebp
mov
repnz
out
inc
xor
test
lcall
jg
js
lcall
popa
inc
or
int3
add
xchg
adc
push
xchg
jmp
adc
je
dec
jb
jl
xorb
jbe
dec
out
adc
adc
sbb
jmp
push
adc
insl
shlb
lods
mov
inc
adc
xor
sbb
jno
or
aaa
cld
add
and
add
xor
sbb
add
clc
fnstenv
lods
xor
loopne
stos
or
mov
adc
incb
clc
andl
mov
adc
add
xchg
or
fcmovnu
pop
out
and
add
sbbb
inc
fs
adc
sub
lret
add
rclb
decl
div
mov
add
push
sub
add
dec
jmp
and
pop
cli
ss
push
cmp
lods
divb
mov
lret
fdivs
fisubl
add
sbb
xor
dec
mov
xorb
xchg
test
adc
ds
xor
sarb
cmp
jg
adc
fidivl
xchg
cli
jo
or
xchg
jb
mov
decl
ja
add
jo
insl
sbb
in
cmp
add
sbb
add
je
push
add
data16
and
or
rolb
mov
call
add
add
push
add
test
aad
sub
loop
inc
xchg
test
cmp
imul
aas
lock
int
cmp
or
call
mov
push
lods
xchg
mov
or
mov
roll
add
ret
add
fs
hlt
xchg
xor
add
imul
add
or
into
xchg
test
mov
scas
cltd
and
rorb
outsb
lds
gs
and
pop
push
add
aam
or
sub
and
pusha
sahf
testb
outsl
lret
loope
dec
inc
fs
adc
add
fildl
or
mov
mov
js
fisubrs
mov
aad
or
addl
jno
add
or
inc
sti
decl
inc
mov
add
addb
mov
fildll
arpl
jmp
sbb
stc
push
stos
pusha
movsl
add
outsl
pop
mov
movsb
add
adc
clc
inc
mov
xor
push
rolb
mov
dec
jecxz
inc
cmp
stos
add
cmp
jbe
sub
push
add
sbb
data16
mov
test
shl
push
push
stc
pop
xor
pusha
add
shl
jb
ret
push
xor
in
mov
mov
pop
jle
dec
jmp
xchg
add
add
mov
inc
data16
shrb
data16
cmp
and
sub
mov
shlb
cmp
incl
bound
pop
cwtl
push
hlt
add
adc
xchg
imul
or
mov
add
xorl
push
jb
push
hlt
popf
cmpsb
jp
xor
insb
popf
sub
lods
sub
sbb
xor
in
add
sahf
inc
jo
sbb
fbld
clc
cli
add
add
stos
push
push
iret
add
adc
push
rorl
sar
aad
xor
ljmp
into
mov
fsubrl
rorb
jbe
sbb
dec
and
sub
scas
sub
xchg
push
into
lods
insb
mov
xor
call
imulb
es
clc
outsb
add
adc
add
pop
pop
cmp
pop
loopne
jg
pusha
call
add
push
stos
mov
adc
and
adc
xor
arpl
and
or
jp
xor
lcallw
dec
inc
pop
std
mov
push
cld
push
sbb
adcl
jmp
je
jo
in
andl
push
mov
and
in
outsl
negb
jo
arpl
andl
andb
and
mov
loopne
cli
mov
or
sub
adc
or
ljmp
xchg
push
jg
mov
inc
sbb
push
jo
or
sahf
mov
sbb
dec
sar
cmpsl
sub
lcall
in
pop
sbbl
pop
mov
jle
or
jp
insb
pop
push
jae
adc
jmp
jmp
pop
rolb
adc
pop
insb
fildl
add
add
xchg
mov
mov
mov
add
and
adc
mov
pop
add
in
sbbb
fs
fucomip
aas
xor
out
aas
dec
pop
ljmp
int
or
and
pop
hlt
pop
sbb
sub
clc
sub
xor
pop
inc
push
inc
add
out
shlb
repnz
test
cmp
or
mov
and
cld
mov
ds
cmp
adc
lcall
orb
orb
push
dec
incl
clc
mov
mov
mov
andb
sub
adc
adc
shl
pop
jp
adc
push
xchg
push
add
jmp
push
sbb
clc
pop
add
cmpb
or
es
pop
xchg
push
lcall
sbb
imul
es
and
or
pop
add
adc
inc
jecxz
push
js
add
pop
pusha
mov
sbb
dec
fcomp
xchg
fdivs
popa
sbb
adcb
ljmp
incl
or
rol
mov
loopne
inc
sbb
push
mov
cltd
js
cltd
clc
loopne
lcall
mov
add
inc
dec
sub
sahf
jbe
cltd
lock
and
pop
inc
ret
cmpsl
test
adc
sbb
cmp
sbb
stc
rol
mov
pop
int3
clc
je
xchg
iret
outsb
mov
lds
pop
scas
addb
sarb
enter
or
pusha
or
int
in
pop
out
and
add
sti
popa
or
pop
gs
pusha
push
add
outsl
sbb
fwait
loopne
cmp
mov
popa
inc
dec
js
push
cmp
or
push
xchg
inc
sbb
push
sbb
decl
inc
xchg
mov
mov
inc
add
xor
gs
push
jae
jmp
mov
xchg
lods
xchg
fcomps
cld
bound
test
insl
mov
and
sub
sbb
ficoms
or
lods
or
jl
loop
shl
xor
outsl
add
inc
or
xor
in
inc
inc
fistpl
shlb
add
inc
clc
std
or
es
add
pop
add
and
clc
call
adcb
sbb
js
popa
adc
rolb
or
or
add
mov
xchg
shl
adc
sbb
mov
or
es
cld
lahf
add
mov
xchg
ror
pop
adc
sbb
push
push
adc
insb
call
push
loopne
add
subl
scas
pop
pushf
std
mov
mov
sbb
loopne
shrl
outsb
adc
or
add
fisubs
mov
shl
xchg
dec
loopne
insl
mov
adcl
movsb
loope
daa
testb
or
add
lods
and
mov
mov
shrb
mov
lods
popf
movsb
lcall
xchg
pop
in
popf
hlt
add
adc
adc
loopne
inc
cli
xchg
sub
inc
adc
shrb
inc
rcrb
loope
jmp
cmp
push
das
add
fs
sbb
outsl
sbb
pusha
push
sub
inc
rcrl
pop
shrl
inc
out
addl
inc
pop
test
outsl
pop
xchg
and
add
subb
and
inc
adc
rcll
lods
cli
fwait
xchg
imul
pushf
sub
and
sbb
xchg
push
adc
jnp
and
out
test
sub
sar
pushl
xchg
aam
loope
sub
inc
add
push
add
push
mov
adc
cwtl
das
clc
add
mov
mov
cmp
adc
xchg
mov
add
sbb
ds
add
sbb
jl
sub
xor
insb
add
inc
and
clc
sahf
xchg
lock
pop
add
loop
dec
add
cli
sbb
sub
push
std
decl
leave
ljmp
push
and
add
and
or
testb
cli
rcrl
sbb
or
jne
adc
push
add
cmp
fdivl
push
or
xor
push
sbb
push
and
xor
xor
clc
lret
xchg
and
xor
adc
clc
aam
inc
pop
gs
outsl
pushl
mov
lock
push
add
add
add
pop
push
mov
outsb
adc
rep
mov
push
inc
push
sbb
xor
movsl
and
xchg
addb
insl
in
call
in
aad
add
ljmp
outsb
or
add
lahf
data16
add
push
push
xorb
out
aam
cmp
inc
insb
int
jmp
sub
in
jle
jmp
lcall
sbb
push
jge
jo
jnp
int
or
push
lcall
imul
aad
dec
pusha
mov
pop
imul
fsubrl
push
adc
push
std
rolb
fdivl
pop
cmp
test
jo
adc
push
ljmp
jg
add
mov
movb
jbe
lret
fs
lods
push
mov
add
bound
jne
jo
adc
adc
jg
add
in
fwait
or
out
mov
ficompl
pushf
pushl
mov
xor
adc
sbb
es
sbbb
and
push
icebp
adc
cli
and
push
fdivrs
pushf
inc
add
cltd
inc
adc
sbb
push
sbb
or
xor
adc
dec
add
pop
mov
and
inc
mov
loope
or
pop
push
add
mov
xchg
inc
xchg
add
inc
cli
popa
add
xor
add
orb
fs
jae
inc
stos
xchg
js
movsb
push
pushf
add
mov
mov
nop
in
inc
adc
adc
sbb
fdivr
insb
lcall
loope
inc
xchg
std
outsl
loop
mov
loopne
or
mov
cli
shll
loopne
addr16
pop
mov
inc
stos
add
rorl
stc
sbb
lods
and
xor
in
jno
ret
or
add
repnz
inc
pop
inc
loope
movsb
int3
sub
dec
test
or
jb
inc
addr16
or
sub
addr16
or
and
dec
cmp
out
jno
push
add
outsb
push
inc
fcoml
xchg
test
sub
push
and
push
add
mov
clc
movsl
sar
push
in
pop
push
dec
sbb
rclb
jo
push
dec
jo
fs
es
mov
fsubs
mov
push
jl
subb
push
sbb
rorb
mov
dec
sbb
out
rorl
push
mov
ret
fcoml
pop
add
pop
or
ret
lock
test
jmp
adc
jne
and
xorb
dec
dec
in
sbb
dec
mov
cltd
mov
or
sub
inc
add
and
mov
add
fcmovu
or
or
xchg
out
mov
jns
insb
movlps
jnp
mov
aaa
adc
push
rcr
loope
sbb
ljmp
add
jmp
and
mov
xor
sbb
mov
adc
in
xchg
sbb
or
and
dec
sub
xor
shll
mov
mov
scas
jnp
inc
and
adcl
js
or
test
cmp
or
mov
xor
adc
cli
ss
mov
xor
das
out
shlb
clc
push
mov
cwtl
xlat
xchg
push
sub
shrl
or
pop
nop
lret
mov
es
pop
icebp
incl
mov
sbb
adc
dec
inc
dec
loopne
xchg
aam
jp
cld
fadds
xor
clc
push
pop
aaa
into
and
add
pushf
and
mov
xor
rorb
negb
add
pop
pushf
scas
fwait
inc
adc
and
lock
sbb
add
frstor
push
push
arpl
inc
int
outsl
addr16
nop
sbb
xor
jle
out
mov
lock
adc
pop
sub
popa
lahf
sbb
rcrl
xor
stc
inc
mov
sub
inc
stos
push
or
or
icebp
lods
add
push
inc
xor
cmp
clc
fisubs
out
push
pusha
push
lcall
fnsave
lcall
push
pop
popf
mov
mov
in
push
mov
mov
ja
mov
mov
pop
cld
and
cmpsb
stos
mov
lods
leave
sahf
xor
mov
jg
mov
pop
out
pop
adc
pop
dec
jge
pop
outsl
sbb
jnp
cli
sbb
enter
adc
adc
rolb
rol
xchg
xchg
aam
inc
dec
add
dec
inc
adc
mov
lds
sub
add
push
mov
rcrb
adc
shlb
jl
stos
sub
into
dec
adc
loop
rcll
into
mov
inc
leave
mov
push
test
cmp
xchg
dec
xchg
pusha
add
je
push
jge
add
adc
mov
test
lds
cmp
popa
and
popa
adc
jbe
push
dec
insb
mov
jl
mov
ret
push
outsb
lcall
jecxz
mov
xor
xlat
add
jmp
add
and
push
out
je
pop
lock
xor
push
cwtl
add
add
repnz
rcll
pop
adc
and
push
inc
fcom
mov
jo
jcxz
subb
stos
or
jmp
call
and
insl
mov
jbe
mov
add
and
rcrb
lock
insl
cmpsb
outsb
lcall
sbb
adc
add
mov
mov
add
insl
xchg
mov
cmpb
fcoml
add
sub
add
xor
add
jns
mov
jo
mov
aad
xchg
mov
mov
shlb
test
pop
cli
insb
leave
daa
sahf
mov
decb
inc
or
icebp
daa
imul
push
add
popf
add
push
push
subb
pop
push
add
test
or
mov
sub
std
adc
add
adc
sbb
jl
ret
aas
bound
xor
adcl
mov
push
ja
sub
scas
cmp
push
dec
adc
out
lcall
jbe
adc
add
xchg
add
add
xor
jecxz
stos
mov
inc
test
mov
adc
cmp
ret
add
push
pop
ret
mov
shlb
movb
inc
xchg
pusha
lcall
or
mov
aam
adcb
mov
inc
std
cmc
inc
add
outsb
and
dec
cli
push
dec
addl
or
roll
mov
or
dec
dec
mov
in
inc
insl
rorb
stc
lock
xchg
add
inc
mov
sahf
pop
movsb
rolb
test
fldcw
fnstenv
mov
or
nop
insl
insl
sub
pusha
lds
sub
xchg
xor
lret
jecxz
cmp
xchg
gs
jle
rorb
loop
and
inc
jnp
sbb
rcll
test
and
or
xlat
mov
gs
std
in
pushf
sub
aaa
pop
nop
out
add
xor
jnp
pop
xchg
xor
sbbl
dec
adc
inc
or
mov
sub
jmp
xor
rcl
fidivrs
cwtl
or
or
push
loopne
leave
push
mov
rorb
daa
mov
icebp
rcrb
popf
subb
out
enter
jp
aad
loope
dec
sub
dec
and
gs
sbb
dec
out
subb
andb
pop
push
clc
adc
in
xchg
push
mov
dec
lods
decb
pop
cmp
add
aas
mov
call
call
sbb
jb
loopne
adc
or
inc
or
into
push
add
outsb
inc
nop
mov
lcall
mov
aam
add
mov
incb
sbb
or
insl
mov
or
and
sub
insb
ret
jo
xchg
test
stc
or
pushf
fidivrs
mov
mov
inc
xor
cmp
ret
xorl
add
in
pushf
cmpsb
and
inc
push
mov
aaa
mov
insb
adc
mov
add
stos
adc
lea
and
and
outsl
data16
or
add
xor
je
lcall
rcrl
rcrb
inc
add
adc
adc
dec
sbb
andl
sub
push
xor
mov
in
and
cmp
xchg
scas
pusha
push
pushf
xchg
test
xchg
add
inc
push
xchg
fsubr
dec
pushf
jo
or
inc
push
inc
ret
aam
mov
test
subl
rolb
and
adc
inc
jge
jbe
push
ret
mov
shlb
push
les
dec
and
mov
popl
incl
lret
shll
add
add
push
push
mov
xchg
push
loopne
push
shr
dec
add
rolb
add
or
outsl
pop
mov
and
in
push
sbb
and
cmp
cli
test
cmp
jle
jns
pop
movsl
sub
xchg
ljmp
xchg
sub
inc
adc
mov
push
or
adc
rcrb
aad
or
adc
cli
sbb
adc
inc
push
sub
inc
inc
adc
popa
sbb
pusha
ljmp
sbb
test
incl
push
inc
es
cli
inc
xadd
jo
loopne
test
add
or
adc
push
push
adcb
daa
mov
stc
mov
jp
cmp
lods
or
and
xchg
stos
movsb
pop
lcall
sub
lcall
sar
dec
fld
push
or
sub
inc
fwait
sar
sbb
stc
mov
mov
dec
cli
mov
and
push
mov
push
or
scas
clc
jg
bound
lds
es
pop
push
insl
inc
jecxz
jo
popa
inc
mov
cmp
cmpsb
cmp
cmp
cmp
pusha
adc
and
cmp
cmp
xor
imul
sahf
and
add
add
shrl
mov
or
adc
orb
loope
enter
sahf
loopne
mov
mov
add
add
xor
cmp
add
pusha
call
mov
fs
xchg
inc
out
es
mov
cli
add
jnp
sbb
pop
mov
mov
xor
mov
imul
push
jp
adc
shlb
inc
incl
test
push
mov
jnp
dec
cli
sbb
out
sub
adc
add
pop
pop
jnp
and
add
push
or
pop
and
push
subl
xchg
pop
push
add
inc
stc
add
mov
add
gs
aam
cli
pop
cwtl
adc
pushaw
xor
push
mov
jo
mov
outsb
dec
stc
repz
and
or
mov
push
shlb
mov
mov
mov
add
insl
js
add
rorb
inc
lock
adc
dec
into
shrb
pop
xor
push
pop
pusha
lds
push
bound
or
sub
xchg
sahf
sub
aaa
inc
xor
mov
in
jns
test
mov
xor
stc
sbb
out
stc
lock
mov
mov
rcrb
add
add
adc
push
pop
mov
jbe
xor
lods
push
inc
sbb
push
sub
mov
inc
mov
loopne
mov
adc
add
add
inc
lcall
or
jnp
test
jno
push
shlb
adc
pop
fwait
inc
sub
adc
scas
pop
add
add
push
mov
adc
adc
mov
int3
mov
mov
cli
adc
stc
add
pushl
xchg
pop
xlat
or
jo
idivl
and
sub
or
dec
out
out
pop
fisubl
jp
xchg
jp
icebp
loopne
sbb
xchg
xchg
add
cmc
add
gs
jmp
inc
sub
mov
pop
inc
add
inc
loop
outsl
nop
jbe
nop
pop
cli
add
bound
rolb
xor
sbb
lock
mov
enter
mov
popa
add
sbb
xor
add
lock
lret
inc
imul
sub
add
addb
add
inc
movsb
aad
loop
popa
inc
jbe
mov
mov
insl
clc
out
dec
gs
xor
mov
sub
lcall
das
push
push
inc
push
adc
jmp
mov
es
push
and
sbb
sub
adc
sub
ljmp
mov
data16
aam
out
mov
adc
inc
inc
mov
fmull
add
rorb
arpl
inc
scas
and
lea
mov
inc
inc
push
sbb
xchg
or
jb
adc
pop
xchg
cmp
popa
mov
or
pop
push
or
mov
and
or
fldl
repz
test
or
jne
push
notb
loope
fwait
popa
pop
nop
call
popf
mov
adc
cld
in
cvtps2pd
lcall
sahf
gs
cmp
pushf
xor
std
loope
and
daa
pop
jmp
out
add
mov
adc
inc
mov
xor
mov
push
push
orl
pop
push
inc
insb
in
mov
mov
mov
adc
adc
and
sub
and
push
cmp
cmpb
add
clc
fidivl
xor
mov
adc
pop
cmpsb
cmp
das
mov
xchg
les
sub
xor
ss
and
mov
arpl
pusha
xor
lret
dec
dec
jb
add
jmp
sbb
mov
lret
push
push
inc
incb
cmc
jne
mov
fldl
and
sbb
pop
push
sub
inc
dec
and
jo
add
std
push
jecxz
rorl
jnp
clc
fs
sub
xchg
cwtl
out
stc
dec
aaa
adc
notb
xor
imul
and
fs
push
mov
addr16
add
jg
int
inc
mov
and
and
dec
adc
push
adc
cli
dec
add
mov
and
pop
out
sbb
test
or
das
add
or
sub
mov
push
std
xor
adcb
sub
push
fiaddl
cli
outsb
sar
or
push
movsb
movsb
movsb
popa
lret
aas
lods
mov
jnp
mov
dec
adc
pop
test
cwtl
mov
rcrl
push
fs
movsb
pop
stos
push
shrb
sub
fcmovb
dec
lret
jg
mov
mov
push
stc
stos
push
and
cwtl
inc
adc
clc
pusha
inc
and
xchg
stc
mov
pcmpgtb
sub
scas
icebp
push
or
mov
or
add
pop
pop
push
cmpsb
push
xorb
in
and
mov
pop
add
popa
inc
jg
mov
push
add
or
push
push
add
sar
inc
sub
mov
sbb
mov
sub
mov
inc
loope
xor
pop
nop
add
jecxz
push
loopne
lods
in
lcall
pop
inc
add
movsb
push
rclb
pop
lock
mov
mov
shlb
imul
stos
push
sub
sub
scas
adc
loopne
mov
sbb
mov
sub
fs
xchg
fcomip
mov
lcall
pop
jo
jo
inc
sub
nop
or
xor
ljmp
mov
sbb
pusha
add
sbb
loopne
loope
and
stos
cmpsb
mov
inc
push
push
nop
cmp
pusha
add
gs
adc
sub
jno
mov
inc
xchg
mov
out
popf
jne
or
xorl
sahf
add
xor
push
std
ljmp
push
stc
jp
xor
and
or
dec
ret
or
cmp
addb
pop
lcall
add
mov
xorb
jns
subb
mov
jne
pop
pop
mov
shlb
xor
jne
pusha
push
push
loopne
fs
mov
fstpl
popa
sbb
jns
inc
add
pop
pusha
js
loope
mov
or
fs
ss
sbb
sarb
mov
fcom
inc
imul
test
adc
push
out
scas
mov
mov
or
inc
stc
popf
push
mov
add
xchg
nop
sbb
push
xor
mov
lods
or
and
jns
mov
outsl
adc
xor
rorb
inc
cltd
dec
xor
movsl
orb
testb
push
mov
inc
scas
mov
or
inc
sub
add
dec
std
xor
orb
pop
jno
inc
and
xor
js
pop
inc
lahf
js
push
mov
mov
out
xor
das
cmpl
mov
add
inc
lock
add
aaa
lods
out
cld
aad
add
push
std
gs
and
xchg
pop
inc
jbe
decb
movsb
adc
test
dec
loope
test
insb
xor
and
lods
and
cmp
pop
inc
lcall
mov
les
sub
and
add
sbb
adc
adc
inc
fimull
outsb
push
push
out
and
xchg
or
dec
in
mov
mov
std
in
or
outsb
jo
inc
xchg
ss
mov
adc
push
and
mov
push
xchg
push
adc
cli
les
mov
stos
les
or
pushf
inc
or
ja
call
sbb
addl
xor
xchg
xchg
sbb
push
add
pop
or
dec
pusha
sub
and
jge
stos
pop
or
gs
jns
add
mov
and
or
cld
fnstcw
fidivrs
cld
inc
adc
addl
nop
cmp
dec
pop
add
mov
push
cwtl
push
xlat
add
xchg
ds
inc
sbb
dec
xlat
int
push
xchg
sbbl
test
addb
in
mov
jnp
xor
or
shlb
xor
mov
sub
push
gs
bswap
cmpl
shrb
cmp
sbb
jb
sbb
mov
mov
aas
inc
mov
cmp
inc
sbb
inc
sbb
sub
ds
sbb
shlb
stc
mov
pushf
ret
xlat
push
lds
out
sbb
jg
sbb
xorb
jns
scas
fs
inc
pusha
rcll
rcll
adcb
incl
scas
in
sbbl
dec
sbb
cli
in
add
sub
stc
ds
in
sub
fisubs
or
jb
adcl
inc
movsl
or
stos
and
jl
fisttps
popa
aas
dec
cli
sbb
cmpb
sbbl
cli
lahf
sbb
inc
adc
test
inc
cmp
addb
pop
subb
lret
lcall
xchg
ror
adc
pusha
add
popa
test
add
xchg
add
fs
inc
xchg
mov
mov
jno
inc
jge
sbb
sbbl
mov
shl
rorb
cmp
incl
fadd
fs
push
sahf
inc
pop
sbbl
cmp
or
cmp
jmp
push
or
notb
sub
dec
xchg
shll
inc
jmp
cmc
mov
jnp
fidivl
xor
cs
inc
mov
push
hlt
or
in
xchg
ss
cmp
xlat
addr16
scas
push
xor
inc
rcll
pop
push
sub
and
mov
pop
xchg
nopl
and
inc
arpl
add
movsl
adc
push
int3
add
jnp
mov
lds
pusha
xor
add
ljmp
inc
and
sub
add
add
in
into
lds
cli
and
push
pop
fmuls
popf
adc
shr
clc
gs
or
fs
adc
test
les
ss
cmp
dec
and
dec
adc
add
pushf
insl
and
loop,pn
cmp
mov
xlat
add
dec
loop
pushf
outsl
adc
stc
mov
les
scas
fcomp
push
adc
clc
loop
daa
loopne
mov
mov
pushf
cmp
scas
cmp
lds
clc
cld
les
imul
insl
adc
movsl
adc
lock
test
pop
dec
popa
sbb
movsb
mov
sbb
ret
sub
or
pop
jnp
stc
or
loop
decl
nop
jno
cwtl
pop
or
lcall
mov
in
je
xchg
add
push
loopne
rolb
sub
cmp
out
nop
dec
pusha
sbb
and
movl
fistl
xor
cli
call
cmp
sarl
lret
sub
adc
add
rolb
daa
adc
je
cmp
pusha
lds
test
mov
xor
inc
add
and
lea
pop
add
push
icebp
daa
adc
inc
and
cwtl
clc
dec
sub
adc
sbb
js
inc
cwtl
xchg
rclb
jmp
adc
fnstsw
pop
arpl
sub
cli
push
hlt
lret
cltd
loop
add
dec
or
or
push
sub
push
dec
adc
out
in
decl
clc
mov
inc
and
mov
mov
inc
addb
cld
fistpll
mov
loopne
inc
inc
sub
mov
or
mov
and
sbb
rcl
pop
lcall
lret
inc
roll
leave
inc
lahf
xchg
stc
dec
popf
and
add
push
pusha
dec
out
inc
xor
jge
mov
and
out
pop
jnp
mov
addb
les
loopne
sbb
inc
mov
add
add
stos
mov
add
stc
fsubp
add
jmp
add
data16
inc
pop
lcall
inc
nop
faddp
pop
jo
xchg
stos
scas
loope
bound
out
or
add
sarb
fisubs
fs
inc
cmp
clc
pop
mov
sub
cli
pop
inc
js
xor
mov
in
xchg
outsb
sbb
insl
int
fadd
icebp
or
in
mov
in
add
inc
xadd
add
mov
add
int3
lret
and
sbb
inc
push
lcall
push
ret
xchg
sub
xchg
xor
jmp
rorb
sub
sbbb
cmpsb
stos
cmp
sub
pop
fisttpll
daa
icebp
out
mov
or
jno
mov
cli
inc
repnz
call
pop
cli
lock
fwait
push
dec
push
hlt
and
jo
and
pop
fs
add
pop
xchg
xor
cmpb
push
push
incl
dec
test
mov
or
hlt
inc
or
sub
dec
cmpl
jb
inc
or
in
xor
pop
sbb
mov
sbb
or
movsl
stos
or
add
or
fcmovbe
sub
dec
mov
nop
add
and
add
divl
cltd
add
mov
gs
repz
xchg
pop
mov
jmp
xor
mov
add
pop
rcrb
sbb
inc
in
xlat
pusha
push
mov
subl
fwait
inc
add
ss
xchg
or
sub
mov
aad
lock
in
dec
stc
mov
adc
cmp
xchg
outsl
dec
push
cmp
or
lods
cs
cltd
mov
inc
pop
inc
push
push
sbb
clc
cmp
xchg
adc
sub
call
leave
shr
fdivl
push
push
mov
sbbb
adc
rorl
mov
fdivr
push
jmp
push
or
mov
jnp
js
mov
dec
xor
sub
pop
adc
lock
sar
cli
nop
std
int
pop
jp
mov
push
sub
add
mov
ffree
testl
cmp
stc
insb
cmp
or
push
ljmp
inc
dec
push
xlat
inc
jl
add
pop
lcall
out
nop
xchg
insl
and
add
add
in
inc
mov
loop
loopne
jnp
adc
xor
sbb
cli
out
call
lods
xor
ss
inc
jp
inc
stc
push
enter
jmp
add
adc
cmp
inc
adc
mov
mov
test
mov
push
cmp
sbb
xchg
inc
andb
mov
add
pop
sbbl
sub
loope
ficoml
pop
ret
sub
outsl
rcrl
lods
in
lcall
or
sub
mov
xor
cli
stos
add
or
stos
dec
adc
adc
ja
sub
insl
flds
cmpsb
push
adc
ss
or
xchg
loope
sar
sar
stc
sub
rolb
xor
and
or
add
dec
cmp
cmpsb
inc
loop
or
adc
mov
push
mov
xchg
call
jl
push
shll
insl
push
mov
and
dec
insl
stos
adc
test
adc
or
mov
fwait
leave
lcall
mov
and
or
dec
xor
es
adc
jbe
call
gs
jns
rolb
pusha
and
dec
pop
clc
sarl
fwait
inc
leave
fbld
adcl
mov
pushf
mov
mov
lods
or
pop
call
stos
mov
sbb
mov
rolb
lcall
mov
lret
ret
adc
xor
adc
jns
push
push
jo
pusha
rorb
add
inc
mov
ret
rcl
jb
aam
test
add
push
push
push
xor
add
incl
push
add
pop
add
nop
orb
push
pushf
mov
std
stc
push
mov
push
or
ja
mov
add
nop
mov
or
test
xor
xchg
mov
enter
xchg
test
adc
sbb
and
cmp
and
cs
mov
jg
incl
jns
adc
mov
push
adc
mov
xor
test
test
incl
jg
cld
dec
push
jae
sub
or
push
xor
gs
shlb
sahf
rolb
inc
andl
ret
xor
cmp
dec
pop
lcall
dec
stc
cmp
mov
ss
je
call
xchg
sub
or
add
sbb
push
mov
and
loopne
in
add
cld
ljmp
aas
sub
pop
push
push
orb
adc
in
inc
mov
pop
lock
mov
pop
popa
add
incb
arpl
adc
inc
cmp
repnz
or
fcoms
stc
xor
or
and
stos
push
dec
lea
mov
decl
xor
adc
and
or
sbb
push
and
or
push
fstp
add
test
addl
call
stc
iret
mull
inc
adc
int3
push
test
aaa
in
push
nop
faddl
dec
adc
mov
push
cmp
clc
or
ffreep
push
stc
test
nop
add
jo
pusha
enter
imul
sbb
pop
xchg
popa
mov
adc
mov
lods
inc
fstpl
adc
hlt
decb
les
add
xor
or
add
lcall
data16
fistpll
mov
lods
repnz
push
outsb
aas
adc
stc
movb
fsubrl
inc
add
paddsb
stos
lahf
mov
push
addr16
add
hlt
dec
lret
stc
movsl
adcl
mov
lock
mov
or
ljmp
push
xor
sub
jmp
adc
or
inc
cmp
ss
lock
pop
pop
inc
pusha
or
sub
inc
adcb
add
inc
rcrl
subl
add
inc
adc
inc
sbb
movsb
outsl
add
mov
subl
or
xor
movb
enter
adc
cmp
call
sub
or
pop
xchg
fiaddl
mov
imul
mov
sub
or
add
jbe
add
pop
jp
mov
add
inc
fs
mov
jle
js
add
pop
imul
inc
fadds
and
pop
jp
lock
sarl
mov
xchg
loop
sub
lock
add
les
add
or
dec
sbb
jge
jge
sbb
addl
xchg
das
clc
or
orl
popa
xor
pop
adc
jno
dec
cli
jb
call
subb
cs
xchg
sbb
and
xor
dec
sub
add
or
jns
push
sbb
adc
stos
mov
add
je
push
ljmp
push
push
jns
arpl
mov
or
orb
outsl
mov
into
lods
push
adc
popa
sub
shlb
cmp
bound
rolb
xchg
add
ficoml
stos
or
push
xchg
mov
bound
in
cmp
loope
mov
mov
xchg
jmp
adcb
push
mov
adc
stc
subb
cmp
out
push
adc
ljmp
add
push
jl
and
and
push
andb
and
out
ficoml
sbb
ss
and
and
or
inc
add
and
xchg
mov
and
pop
jmp
push
cmp
sbb
jle
dec
je
cmovb
test
mov
inc
or
jge
cmp
pusha
and
ljmp
hlt
or
dec
out
clc
lcall
ficoms
filds
fisubs
ljmp
add
add
je
push
test
add
add
sub
inc
or
cwtl
lods
add
lods
shlb
outsb
xlat
pop
mov
add
or
sub
xchg
cs
lret
adc
mov
movsl
lods
sub
std
or
rclb
mov
clc
je
add
push
pushf
sbb
bound
je
mov
mov
stc
aaa
mov
in
add
std
and
inc
push
push
push
xchg
push
push
inc
xchg
cmpsb
add
and
jmp
pop
lds
sar
jmp
mov
xchg
mov
mov
mov
mov
movsb
rolb
xor
add
dec
add
add
aas
lods
stc
inc
cli
shll
loope
jns
push
stc
aad
test
dec
cli
fwait
dec
outsl
xor
mov
sahf
jg
add
cld
jns
rcr
xor
cmp
rclb
dec
mov
jbe
jb
mov
insb
mov
sub
fdivrl
or
pop
push
inc
or
sahf
aam
mov
mov
sub
or
mov
call
add
sbb
add
fistpll
pusha
cmp
jns
loopne
pusha
bound
cmp
and
xchg
clc
sbbb
add
dec
insb
sbb
popa
push
xlat
or
add
adc
sbb
add
cmp
rol
sub
xchg
lock
mov
push
loope
add
add
outsb
stc
mov
sub
and
pusha
xchg
and
fdivrl
inc
out
js
test
stc
ja
outsl
inc
loopne
adc
sub
add
scas
adc
mov
pop
mov
rcrl
rcrl
popa
push
add
pusha
rclb
dec
sub
mov
push
push
test
lcall
es
pop
loopne
lcall
es
stc
daa
and
sub
inc
loop
inc
mov
fsub
addb
xor
clc
popa
sub
pop
ljmp
stc
test
adc
out
mov
ret
and
stc
les
inc
pop
in
mov
push
loopne
push
or
shlb
dec
andl
stos
sbb
inc
pop
and
dec
mov
mov
add
es
cmpsb
addb
dec
mov
loopne
je
sub
scas
mov
inc
xor
call
mov
pop
pop
clc
and
or
push
pop
jo
or
xor
push
in
or
adc
loopne
inc
nop
insb
or
sub
xchg
mov
mov
and
or
mov
inc
add
xchg
insb
jb
add
mov
jmp
test
es
aas
ret
inc
xor
outsb
push
shlb
jge
jmp
and
test
std
cmp
dec
xchg
jns
push
sub
add
nop
aad
addl
sbb
pop
mov
scas
inc
inc
xchg
mov
inc
andb
js
mov
jg
int3
out
inc
out
jnp
nop
stc
lcall
sti
pusha
adc
sub
aad
call
inc
es
xchg
add
or
xchg
rcrl
cmc
insb
aaa
loope
pop
pusha
scas
js
stc
jle
mov
stc
in
cwtl
stc
xor
repnz
sahf
icebp
loopne
or
out
les
loopne
pop
mov
mov
and
roll
subb
inc
test
add
add
bound
out
test
je
adc
mov
clc
in
sub
fs
sub
pop
and
xchg
add
cmp
andb
jmp
sbb
push
pop
mov
sub
loopne
cld
incl
rolb
ret
outsb
add
mov
in
mov
lahf
mov
je
in
and
fwait
cmc
gs
push
lcall
fisttps
add
rolb
or
shrb
sub
shlb
sub
xchg
popa
xchg
mov
stos
ss
pusha
popa
inc
faddl
imul
cmp
or
jecxz
add
push
cmp
mulb
mov
loopne
jns
inc
dec
loopne
jecxz
mov
sarb
les
stc
or
inc
clc
cmp
jo
pushf
mov
xchg
adc
inc
add
int3
xorb
add
mov
adc
orb
inc
xor
pop
push
push
mov
pusha
push
or
sbb
inc
test
push
loopne
inc
sbb
aad
mov
xor
adc
pushf
adc
movsl
add
pop
dec
jmp
push
xor
fldenv
ds
jg
pop
sub
sub
or
push
xchg
rorb
add
or
mov
aam
and
lock
dec
fistpl
add
mov
jecxz
add
cltd
lock
ljmp
mov
sbb
mov
imul
fs
aas
push
xchg
pushf
fcmovu
cmpsb
mov
cmp
jl
fwait
movsl
pop
xchg
cltd
loopne
jns
lods
fsubrs
or
aas
ss
call
push
and
nop
or
pop
add
arpl
xchg
jmp
or
pop
dec
or
xchg
xchg
add
mov
loop
or
out
fnstenv
inc
rclb
lcall
pop
pop
mov
xchg
stc
mov
mov
mov
xor
mov
xchg
hlt
xchg
pop
adcb
das
mov
sub
push
pop
dec
push
out
and
inc
es
loope
insb
mov
inc
dec
dec
pop
and
popa
pop
mov
sbbb
push
or
pusha
sub
adc
or
sbb
shrb
add
add
push
inc
data16
sbb
ret
mov
in
adc
mov
lock
sub
lock
add
shl
fisttps
and
add
add
adc
adc
jbe
adc
cwtl
js
movsl
adc
cmp
adc
mov
jno
addl
and
push
dec
xor
outsb
or
or
les
xor
and
pusha
rclb
add
xchg
fs
mov
dec
jo
mov
aad
push
mov
push
decl
and
ljmp
or
adcb
pushf
into
or
and
mov
add
add
dec
sti
sbb
nop
fadd
adc
pop
std
and
pusha
jae
sbb
sub
adc
stc
add
testb
and
add
dec
cli
pop
jno
mov
inc
push
test
push
push
icebp
lock
add
or
cltd
nop
dec
sbb
cmp
stos
and
dec
pop
stc
push
or
mov
and
aaa
std
mov
add
jo
sbb
mov
stc
loopne
add
add
add
ljmp
orl
add
adc
push
ret
mov
xchg
adc
inc
adc
pushf
imul
notb
outsb
adc
mov
cmp
or
roll
ljmp
mov
fstl
and
mov
fs
jnp
add
pop
das
inc
xchg
inc
push
mov
sbb
xlat
mov
cmp
xchg
or
or
xchg
shrb
test
subb
test
push
ja
cwtl
xchg
gs
jns
xor
mov
pusha
pop
ret
jns
shlb
mov
add
mov
mov
add
or
adc
pop
sub
add
mov
add
sub
add
fisubrl
ja
adc
loope
inc
push
add
rcr
out
sbb
mov
call
loopne
and
mov
push
lods
xor
rol
insl
loope
sub
inc
jo
mov
dec
xchg
xchg
add
mov
xor
mov
jecxz
and
sub
jnp
and
fmuls
and
cmp
add
inc
cmc
push
adc
pop
or
inc
mov
sbb
push
loopne
add
mov
inc
fwait
mov
mov
push
ljmp
in
push
outsl
pop
pop
cmp
cli
sbb
inc
and
les
and
stc
fstl
pop
mov
adc
sbb
fisubl
out
outsb
stos
test
pop
sub
fildll
jns
inc
outsb
movsl
and
sti
push
nop
cli
loopne
movsb
aas
pop
fisubl
fisttps
adc
sub
pop
cmp
dec
xor
or
adc
pusha
mov
cmp
inc
dec
in
jnp
movsl
push
and
jecxz
jg
lods
mov
loop
pop
sub
adc
sbb
xor
add
sbb
adc
push
bound
sub
sbb
ja
xor
push
or
sub
adc
or
pop
add
push
inc
push
xchg
test
mov
int
dec
loope
and
jo
dec
jns
sub
jno
push
cltd
mov
aad
dec
xchg
subb
add
adc
pop
fs
pop
pusha
rolb
ud0
outsb
je
repnz
cli
add
bound
popa
cs
adc
or
scas
call
adc
add
inc
push
push
mov
gs
push
inc
cld
ljmp
in
orl
nop
or
leave
xor
pop
jle
lock
xchg
xor
mov
andb
bound
dec
mov
inc
jnp
into
fcoms
mov
add
rclb
jge
xchg
loop
push
xchg
mov
xchg
ret
je
ljmp
mov
lock
ja
cltd
pop
mov
mov
adc
enter
jb
clc
or
add
dec
cvttps2pi
lcall
add
pop
xor
cmp
xor
movl
test
cmp
mov
push
mov
inc
xor
addb
outsb
inc
mov
stos
mov
adc
mov
adc
sub
mov
sbb
cs
ret
incl
or
int3
dec
out
mov
pop
mov
adc
mov
or
dec
mov
xchg
adc
mov
lods
add
mov
sub
mov
mov
inc
scas
retw
pop
rcrb
or
adc
loop
add
sub
add
add
daa
out
shlb
stc
leave
pusha
cld
adc
add
xor
and
pusha
add
imul
cwtl
mov
mov
orb
add
jp
push
xorl
and
gs
or
pop
mov
add
fsubs
cli
daa
add
clc
int
and
xor
add
and
push
loop
cmp
mov
xor
xorb
cmp
sub
push
jmp
inc
adcb
decb
mov
dec
push
xchg
add
push
cmp
popf
add
cld
xchg
xchg
xchg
loope
testb
push
in
lret
popa
lcall
or
push
mov
add
push
or
cwtl
scas
xchg
adc
inc
jae
lds
cmp
and
shr
adc
cmpsb
mov
add
addl
dec
orb
push
add
popa
add
loop
or
cs
pusha
bound
dec
add
sub
addr16
ret
sbbl
inc
xor
lcall
out
ljmp
cmp
adc
mov
sbbb
jne
or
dec
add
adc
clc
cli
lret
loopne
dec
out
push
inc
lods
test
add
insb
lret
shrb
inc
push
rorb
inc
inc
sbb
or
les
stos
les
or
pop
shrl
jnp
or
adc
fwait
test
ss
lock
or
dec
aam
loope
imul
xchg
mov
rcrb
andl
dec
stc
pop
inc
cmpb
shlb
pop
add
add
lcall
cwtl
and
or
inc
frstor
cmpsb
shlb
sbb
pusha
loope
addb
mov
push
sbb
sarl
pushf
subb
push
loope
pop
lods
mov
xor
and
push
add
push
adc
jo
adc
cwtl
lcall
add
push
es
outsb
aad
sbb
dec
data16
xor
jg
test
or
loop
inc
mov
add
add
adc
test
adc
inc
movsb
add
mov
mov
adc
xchg
push
cmpb
push
dec
mov
aam
cwtl
lea
push
out
sahf
adc
int3
stc
sub
pop
faddl
jg
aaa
add
xor
es
sbbb
sbb
sar
add
inc
inc
inc
and
add
add
add
xchg
pop
cli
outsl
adc
rolb
in
add
and
cmp
mov
pop
fsubl
rclb
cs
cld
adc
jmp
or
bound
add
xchg
dec
sarb
andb
push
or
jl
pusha
pop
adc
sbb
sbb
popa
bound
xchg
adc
jge
pop
add
and
mov
loopne
xchg
mov
xchg
add
or
aaa
sti
mov
bound
mov
and
sbb
jl
jns
faddl
push
inc
xor
sbb
fdivl
lcall
je
mov
aaa
faddp
mov
loopne
mov
std
shll
cli
or
adc
out
call
cmpl
push
fiaddl
popa
aaa
push
push
adc
ja
mov
xchg
sub
and
frstor
and
or
inc
and
mov
flds
lock
jnp
dec
cwtl
insl
sbbb
sbbb
push
subb
xor
add
or
cs
mov
testb
lock
mov
mov
adc
jle
jle
cmp
stc
sbb
cmpsb
inc
inc
inc
lea
cmpsb
sub
inc
dec
sub
dec
subb
addl
jmp
lcall
or
and
add
insb
jp
add
ds
adcl
pop
andb
xchg
fucom
push
out
ljmp
les
dec
jns
push
aaa
cld
ljmp
leave
add
lret
or
inc
out
rcrb
xchg
lcall
shll
inc
push
xor
sbb
sbb
mov
in
add
and
pop
cmp
sbb
dec
push
pop
adc
mov
mov
jp
inc
mov
add
inc
sub
adc
nop
cs
or
sub
mov
dec
add
inc
fidivrl
je
inc
cmpsl
icebp
push
fs
dec
xchg
pusha
incl
inc
xor
lcall
dec
out
cli
incl
mov
cmp
dec
add
add
cltd
sub
movsb
sbbl
add
nop
add
ljmp
inc
mov
aaa
aaa
jo
loop
lret
adc
add
push
adc
adc
dec
push
pop
cli
dec
call
xor
daa
inc
push
cmp
cmpsb
sbb
subb
pop
loopne
adc
orl
push
cmp
cli
mov
jnp
cmp
sbb
mov
cmp
and
and
xchg
sbb
lods
xor
pop
sub
int
inc
mov
xchg
xchg
pop
jo
gs
bound
clc
or
clc
mov
inc
jo
adc
xor
dec
ret
and
push
jns
push
adc
jbe
adcb
mov
pop
lcall
jecxz
mov
mov
pop
push
pop
popa
and
pop
mov
or
ljmp
cmp
lock
adc
aaa
sbb
repnz
push
shlb
push
sbb
adc
dec
dec
xchg
dec
adcl
aaa
andb
sub
jecxz
sbb
xchg
adc
inc
in
in
mov
or
lret
and
in
jb
clc
idiv
in
bound
pop
adc
mov
adc
push
adc
inc
fdivs
out
push
adc
call
fdivr
stos
int3
lcall
push
pop
adc
jns
xchg
imul
xlat
or
adc
xor
pop
adc
adc
push
incl
mov
dec
orb
mov
and
jg
sbbb
cmp
sub
and
rorb
js
adc
xlat
dec
inc
add
and
sub
shl
add
mov
ljmp
mov
adc
push
pop
shll
pop
subb
jl
enter
dec
or
dec
push
sub
jne
sub
call
inc
lcall
adc
pusha
push
rolb
stc
xchg
out
sarb
xor
movsl
xchg
push
pop
sarb
xchg
xor
stc
mov
sarb
sub
dec
pop
lcall
repnz
ja
rolb
xchg
pop
outsb
jl
adc
pop
mov
mov
cmpsb
lcall
popf
xchg
push
push
je
cli
push
jg
movsb
and
pop
stc
sub
xchg
mov
push
jp
add
ss
subb
call
outsb
aad
mov
and
dec
cltd
and
cli
rclb
shlb
push
jl
push
xor
pop
rolb
pop
pusha
cmp
inc
int
pusha
xlat
push
add
sub
test
cmp
push
mov
inc
or
xor
addb
popa
out
cmp
inc
cli
jne
cmp
rorb
jb
push
add
mov
inc
adc
push
inc
stc
add
inc
cmpl
inc
sar
movsl
dec
and
sub
daa
jl
sbb
out
mov
sub
adc
lret
cld
loop
push
sub
ja
loopne
and
cmp
add
orb
push
or
mov
mov
cmp
out
push
or
push
inc
or
xchg
rolb
mov
sar
mov
aas
clc
mov
cmp
adc
rorl
lock
stc
fwait
loop
mov
jmp
incl
daa
xor
mov
mov
andl
clc
idiv
fs
mov
cs
push
aam
or
aas
push
mov
or
icebp
jne
push
xor
add
ds
fwait
or
or
add
push
or
jecxz
or
leave
or
sbb
add
nop
movsb
push
leave
cli
push
shlb
jmp
pop
aam
movsl
cmp
cmp
sub
or
stc
adc
jne
and
es
mov
andb
mov
or
dec
out
movl
ss
add
dec
roll
and
in
cwtl
inc
loopne
or
add
arpl
gs
imul
pushl
nop
cs
adc
add
mov
add
inc
cli
incl
cmp
mov
or
mov
pop
nop
lds
push
stc
xchg
iret
pusha
push
cli
jae
sub
cmp
pusha
sub
xchg
xor
mov
xchg
push
push
inc
pusha
sub
sub
pusha
movsl
cmp
push
xchg
call
ja
mov
sbb
or
pushf
mov
and
outsl
aam
and
xchg
faddl
xor
dec
add
jae
push
clc
movsl
add
add
pushf
jo
push
test
mov
rolb
dec
push
lahf
repnz
xor
xchg
sahf
add
lcall
add
jbe
fwait
add
adc
and
jge
test
fdivl
and
dec
jmp
add
mov
and
outsl
clc
inc
push
add
or
lcall
movl
inc
outsl
add
fsts
lret
jp
sbb
add
push
adc
sbb
and
std
pop
add
loope
je
add
add
cli
pop
and
cmp
xor
mov
push
lcall
popa
orl
sbb
fs
sbb
and
sub
pop
iret
push
gs
adc
or
testb
mov
add
add
xor
cmp
and
cmp
mov
clc
xor
and
pushf
xchg
adc
inc
add
add
lods
inc
mov
add
add
subb
add
repnz
adc
call
xorb
or
inc
xor
add
fwait
inc
sub
and
and
dec
out
jecxz
mov
fs
arpl
es
lods
shl
adc
cli
mov
mov
xor
sbb
mulb
shll
subb
push
inc
mov
sub
sbb
pop
push
daa
and
dec
pop
das
cmp
push
cli
push
hlt
add
cs
or
pop
xor
pop
jno
push
add
pusha
or
lcall
dec
das
adc
xor
or
add
pop
xorb
mov
adc
adc
inc
ss
dec
stos
aas
cwtl
sbb
adc
bound
push
out
inc
or
add
lret
mov
adc
or
les
or
ficomps
sub
sbb
out
push
lret
mov
inc
addb
add
mov
jno
cmovo
add
pop
inc
dec
leave
jbe
test
jle
add
pop
add
cmp
popa
subb
pop
dec
fistpl
or
sbb
or
sbb
rcrb
test
or
push
es
test
cmp
and
mov
sbb
add
add
lds
hlt
and
sbb
jnp
sbb
pop
mov
test
mov
or
xchg
mov
pusha
lds
or
rcr
xlat
or
push
jg
xor
incl
addb
mov
sub
dec
loop
int3
dec
mov
stc
stos
push
jle
push
sub
outsb
repnz
inc
pushf
insl
inc
ljmp
dec
jg
dec
fs
mov
dec
inc
fists
jecxz
adc
out
or
scas
mov
dec
test
shl
xorb
addr16
xchg
add
bound
xor
fisubrl
out
add
or
adc
incl
dec
lods
cli
push
xchg
ret
pop
movsb
das
pusha
pop
inc
pop
fs
or
out
cld
into
or
js
jp
xchg
xchg
add
inc
das
rolb
movaps
jg
pusha
add
push
lcall
sbb
pop
mov
mov
mov
leave
xorb
cld
dec
pusha
sbb
or
sbb
sub
clc
xchg
daa
test
adc
addb
lock
test
insb
stos
cmpsb
pusha
sbb
adc
adc
and
shrl
mov
les
adc
add
dec
push
je
ljmp
push
pusha
es
in
and
or
add
daa
lahf
mov
sarb
sbb
and
or
mov
andl
movsb
add
mov
aas
inc
andl
ljmp
mov
cwtl
popf
xor
decl
rcrb
add
fsubrp
and
inc
and
orb
xor
dec
std
test
shrb
or
sar
or
cmp
aas
shrb
xor
add
insl
and
pop
push
es
cmc
stos
fldt
repnz
dec
add
stos
lds
add
xor
cwtl
fwait
std
outsl
mov
xor
jb
xor
pop
push
lds
fists
sub
xor
mov
mov
inc
pop
push
fs
mov
xor
loopne
frstor
aaa
xchg
dec
sbb
xor
out
or
mov
cmp
mov
and
stc
ljmp
js
or
in
add
push
xchg
js
js
mov
nop
and
outsl
adc
pushaw
xor
or
clc
inc
loopne
mov
cmpsb
jne
cwtl
push
flds
pop
and
add
addb
in
pushl
out
shll
and
jns
add
lods
add
cmp
inc
icebp
mov
adc
mov
shll
add
jmp
add
notb
adc
xchg
enter
test
clc
and
outsb
cmp
js
jne
push
xor
popf
cmpb
push
pusha
mov
rorb
cmp
mov
dec
in
rolb
add
fildll
add
sarb
jo
outsl
andb
jb
std
popa
jo
imul
pop
jmp
dec
xor
and
xor
scas
aam
inc
push
adc
cmc
adc
inc
push
inc
adc
movsl
push
push
sub
mov
mov
cmp
rcll
pop
ficompl
mov
cld
test
mov
addb
sahf
popa
xchg
lock
pop
insb
lds
std
stc
jl
ss
cmp
push
jle
add
fcoms
add
add
andb
lds
jns
popa
rcll
adcl
mov
mov
incl
or
dec
adc
jp
xchg
cmp
movsl
adc
gs
inc
mov
mov
and
mov
lock
jo
mov
cmp
pop
xor
dec
dec
add
or
fwait
mov
nop
xchg
add
out
and
dec
pop
and
lea
push
push
adc
mov
rolb
cmp
cmp
sbb
sub
pushl
inc
dec
gs
adc
inc
xor
aas
cwtl
mov
xor
dec
into
xorl
jns
adcb
enter
lds
dec
push
ss
ss
xor
decl
adc
test
cmp
ljmp
and
das
push
mov
scas
mov
inc
inc
xor
push
and
mov
and
dec
pop
xchg
mov
add
ret
push
mov
adc
push
in
and
xchg
add
mov
dec
and
and
test
mov
cld
test
popa
push
inc
xchg
push
imulb
add
mov
add
pop
roll
mov
mov
mov
ret
sarl
stc
lret
icebp
or
cmpb
adc
or
xchg
jne,pt
dec
fcos
bswap
sbb
and
add
sub
add
sbb
jmp
push
cmpsl
fs
bound
das
adc
lcall
gs
fiadds
add
or
fwait
or
test
adc
or
cmp
dec
pop
inc
sahf
add
adc
add
xchg
fwait
mov
push
and
jg
add
xor
xchg
das
sub
cmpsl
sub
mov
mov
pushf
adc
mov
stc
pop
dec
lock
js
sbb
je
cli
adc
sbb
lock
ficomps
imul
add
inc
inc
and
cwtl
cmp
pusha
nopl
rcrb
jo
ds
xchg
nop
or
mov
adc
cs
cmp
je
adc
inc
jnp
adc
paddq
decl
addr16
out
add
jo
cli
pusha
xor
sub
lods
and
pop
in
out
sbb
adc
push
or
pushf
insl
sbb
pushf
push
or
push
pop
or
mov
sahf
push
adc
xchg
fbstp
cld
inc
push
push
cli
mov
aaa
push
sarb
cwtl
ljmp
or
pop
add
adc
or
or
xor
cmp
push
rclb
add
rcl
insb
adc
ja
dec
cmp
or
pop
cli
and
cld
inc
cld
pop
adc
dec
rorb
mov
xchg
xor
ss
nop
mov
add
lcall
xor
xorb
dec
nop
rclb
lock
push
call
gs
or
inc
add
out
clc
aaa
jle
inc
and
xchg
imul
jg
push
outsl
icebp
pop
cmp
jnp
pop
pop
loopne
push
pop
mov
and
in
mov
jmp
mov
adc
loope
repz
js
fmul
pop
scas
adc
mov
test
push
subb
cmp
dec
nop
xchg
add
ret
add
fwait
add
das
pusha
mov
add
or
sbb
sub
das
gs
push
fisubs
adc
xchg
mov
add
inc
into
sub
cmp
outsb
add
sbb
pop
push
push
add
pop
inc
push
and
shlb
pop
mov
cwtl
enter
jo
and
mov
xchg
push
mov
in
pop
jecxz
fildl
xchg
cmp
push
outsb
sbb
push
clc
adc
push
inc
mov
mov
rclb
jle
jg
and
pop
push
dec
dec
fbld
ret
adc
stos
divb
add
andb
jg
call
dec
sub
addr16
push
push
add
incb
gs
add
adc
test
in
decl
rcrb
cmpsl
xor
test
sbb
push
push
sbb
jo
clc
adc
hlt
repnz
pop
inc
cmp
sbb
xchg
add
fwait
xchg
mov
inc
pop
rorb
or
pop
sub
repnz
rclb
add
pop
xchg
inc
cmp
adc
lcall
jnp
jns
lods
rolb
adc
cs
push
xor
add
insb
or
cli
mov
sbb
jle
xchg
adc
mov
jmp
pusha
adcb
push
or
mov
xchg
stos
inc
dec
sub
sub
fwait
leave
shrl
jnp
lcall
push
and
or
imulb
and
or
add
mov
cmp
rclb
sub
addr16
rcl
inc
ret
jae
dec
sub
mov
ffreep
xchg
adc
push
xchg
shlb
adc
add
movsb
shr
pop
aaa
adc
and
adc
ja
clc
dec
and
cltd
inc
cmp
push
sbb
sub
sub
pusha
adc
dec
pusha
or
lods
pop
ficoml
push
mov
inc
inc
gs
popa
loope
out
loope
xor
rolb
inc
rorb
add
mov
adc
pusha
addr16
jbe
into
sarb
push
adc
inc
sbb
loopne
inc
mov
mov
xchg
xor
pop
mov
pop
mov
sub
pop
push
in
jmp
push
out
rorb
inc
adc
pop
inc
cmp
xchg
outsb
cld
push
outsb
pushf
addl
in
or
mov
push
pop
add
sbb
lods
fdivs
inc
insb
lcall
dec
clc
or
adc
shll
sbb
ja
and
add
xchg
lcall
int
pop
ret
sbb
sbb
sbb
sbb
jle
mov
test
push
push
sub
add
add
arpl
jo
insb
ljmp
add
add
cli
sbb
adc
and
add
adc
lds
add
cli
dec
adc
fwait
adc
sub
outsb
mov
dec
out
mov
loopne
loopne
sar
ja
xor
lods
or
loopne
adc
adc
andb
cwtl
add
into
adc
cmp
out
inc
jecxz
xchg
inc
bound
das
cli
jg
mov
sub
inc
cmpb
jns
xchg
sbb
sub
add
testb
rcrb
inc
or
inc
out
out
mov
sub
jbe
fwait
mov
cmp
addb
add
pop
and
sbb
sbb
out
stos
sbb
push
push
cli
adc
sbb
int
add
sbb
xchg
adc
mov
mov
or
addb
inc
add
and
lcall
decl
add
ret
jge
dec
rcl
adc
push
cmp
loopne
xor
adc
loopne
dec
cmp
adc
dec
shll
sbb
add
inc
xchg
inc
into
sbb
add
add
adc
addr16
add
into
push
dec
int
dec
and
loopne
aaa
lcall
add
and
insb
jmp
mov
loope
insb
in
pusha
bound
ret
dec
mov
out
cmpl
dec
inc
cmp
xorl
subl
dec
inc
les
cs
arpl
pop
adcb
and
mov
adc
add
pop
sub
ficompl
cmpb
inc
subl
push
pusha
clc
add
fs
stc
sub
jmp
aas
cmpsb
xor
cltd
pop
rcrb
add
cli
enter
sbb
xorl
pop
ss
add
xchg
jp
add
dec
mov
ds
adc
push
mov
aad
push
inc
jbe
rcrl
push
pushf
pop
pop
fwait
adc
mov
daa
xor
sbb
or
inc
loope
insb
inc
add
push
stc
jg
push
inc
xor
das
pop
test
adc
pop
add
mov
mov
int3
inc
scas
rolb
sub
icebp
inc
or
rolb
inc
test
clc
sub
ret
push
call
clc
addb
sub
xor
inc
test
xchg
add
pop
jbe
pop
shrb
sbb
xchg
subb
loopne
fisubs
and
push
jmp
sbb
or
and
cltd
or
je
cli
fdivrs
jmp
rcrb
add
ss
shrl
sbb
out
ss
mov
cli
or
mov
xchg
xlat
mov
sbb
fists
or
inc
incb
add
arpl
push
pop
push
cs
adc
pusha
mov
fldenv
push
loop
clc
and
dec
ss
fwait
sbb
out
lcall
pop
hlt
fs
mov
add
sbb
add
xchg
shl
and
test
fwait
push
out
sbb
lcall
sbb
fwait
cmpxchg
lcall
loope
push
out
mov
movl
outsb
and
sbb
mov
mov
pop
addb
pop
in
add
add
roll
jbe
test
pop
frstor
ds
xor
js
mov
dec
pshufw
out
adc
mov
fcomps
adc
add
fwait
push
inc
add
pusha
pusha
adc
sbb
add
scas
lock
xchg
pop
adc
jmp
add
add
sub
adc
pop
adc
mov
xchg
rcrl
dec
rolb
pop
out
sbb
or
lods
push
jl
inc
or
outsl
and
shlb
stos
test
add
jge
adc
or
xor
push
and
ja
add
dec
pop
rorl
stc
xor
arpl
hlt
xor
mov
subb
test
and
push
sahf
cltd
pusha
add
add
jne
inc
cld
adc
inc
pop
mov
xor
cmp
movsb
adc
push
adc
enter
aam
add
stc
xlat
inc
adc
and
add
lds
fsts
arpl
stos
out
xchg
add
add
xchg
inc
add
adc
mov
sbb
pop
je
and
add
stc
into
pusha
add
outsb
push
or
adc
adcb
loopne
int3
dec
loope
rorl
inc
push
popf
aam
add
adc
and
and
sub
cmp
enter
cltd
clc
mov
ljmp
xchg
or
mov
adc
scas
push
icebp
or
inc
push
push
add
jbe
mov
or
and
add
in
pushf
dec
pop
js
mov
bound
or
adc
and
add
inc
and
in
xor
pop
adc
and
loopne
pop
add
dec
adc
adc
add
sar
insl
es
and
dec
cmp
pop
aam
add
shrl
pusha
pop
mov
adc
or
outsb
test
add
enter
les
mov
int3
push
pop
loope
andl
or
fwait
test
clc
bswap
cwtl
xor
or
jne
pusha
inc
and
iret
mov
out
add
pminub
subb
jo
xchg
add
sbb
mov
or
cmp
jo
xor
orb
push
mov
insb
js
add
rcl
in
std
mov
aam
pop
loopne
leave
loope
into
hlt
mov
mov
inc
loope
or
outsl
fmuls
push
xor
and
in
adc
in
push
xchg
loopne
sbb
push
sub
std
pop
data16
pop
jnp
adc
inc
rclb
pop
pop
andb
data16
add
cmc
cmp
cwtl
push
add
xor
xor
in
addr16
adc
ljmp
jnp
add
lock
mov
pop
dec
rclb
rol
or
adc
mov
mov
insl
adc
xchg
ljmp
adc
cmp
push
mov
leave
xor
jmp
rclb
into
shl
xchg
sbb
inc
cmpsb
mov
fs
lcall
hlt
xchg
inc
inc
js
inc
add
push
ljmp
inc
mov
hlt
sub
push
dec
adcb
mov
jns
mov
cli
sbb
jns
fldt
jo
xor
fs
or
andl
outsl
pop
out
daa
stos
xorl
dec
testb
adc
lods
popf
shl
push
sub
jle
jo
mov
lcall
lcall
add
loop
incb
inc
pop
mov
out
cli
push
adc
fcomps
ss
aam
inc
pop
mov
xor
cli
scas
mov
shll
popf
xor
mov
pop
sbb
pop
add
push
and
inc
xor
in
repnz
outsb
inc
cmp
mov
popa
pop
mov
sarl
into
pop
sub
stc
pop
pop
push
ror
add
dec
mov
sub
sub
ja
mov
inc
lods
call
mov
xchg
jno
dec
inc
fbld
jne
sbbb
mov
xchg
dec
pop
sbb
xor
fwait
sub
push
popa
bound
rolb
cmp
sbb
add
dec
lcall
and
xchg
add
cmp
add
fidivs
cmp
xor
mov
pop
mov
push
sbb
nop
nop
or
xchg
add
and
js
mov
push
inc
fs
mov
outsl
jb
insb
movsb
inc
push
lea
stc
cld
push
out
loope
call
shll
jb
fdivl
mov
inc
lret
loopne
out
ret
add
adc
sub
or
insl
inc
cmp
enter
ret
push
fdivrl
ror
clc
or
push
mov
jecxz
lock
lods
xor
or
add
mov
or
jnp
dec
pop
push
aas
pop
cs
outsb
push
and
test
cmpsb
dec
cltd
lock
cwtl
sbb
sub
sbb
scas
push
add
cs
cld
add
sbb
add
outsl
fdiv
outsl
or
addl
push
pop
inc
inc
and
sub
movsl
nop
sbb
cmp
dec
daa
shlb
push
les
adc
andl
xchg
dec
nop
mov
addb
imul
cmp
cmc
push
nop
cmp
inc
mov
dec
fisttps
in
daa
lock
stc
push
add
add
loop
add
push
pop
sbb
inc
test
and
mov
lods
leave
sbb
xorl
ljmp
push
sbb
and
add
or
add
cmp
push
push
ljmp
sti
mov
fisttps
leave
aam
imul
loopne
nop
dec
bound
sub
aas
ljmp
add
nop
sub
sbb
nop
add
incl
addb
push
int
jb
sub
cwtl
nop
lcall
sar
xor
bound
std
stc
mov
or
add
int3
loop
sbb
gs
loope
je
or
push
out
popf
mov
sbb
pushf
mov
dec
cld
ljmp
push
loope
xor
test
sbb
jo
divl
ds
add
adc
call
movsb
in
mov
push
frstor
add
xchg
push
inc
lret
std
jne
push
add
rolb
mov
cmp
shlb
sar
inc
mov
test
push
cli
add
shr
pop
dec
add
mov
es
or
push
stc
shlb
call
adc
adc
in
mov
add
pop
add
lret
jl
incb
mov
scas
inc
sbb
mulb
fdivp
jo
adc
pusha
andb
out
es
mov
into
inc
push
add
dec
in
out
or
in
push
sarl
ret
jnp
pop
or
bound
pusha
dec
jnp
outsl
push
sbb
xchg
dec
xorb
imul
add
fsub
fisttpl
and
sub
data16
adc
sub
or
xor
cli
push
mov
sub
call
nop
push
popa
sub
int
test
mov
mov
push
add
scas
push
leave
adc
nop
push
push
inc
mov
xor
xchg
sub
add
inc
adc
inc
stos
pop
cmpsb
or
mov
add
fbld
rcl
mov
in
push
sbb
cmovo
popa
insb
mov
sbb
outsl
pop
cwtl
cli
cmp
inc
mov
adc
pop
fadds
xlat
push
push
xor
mov
rclb
mov
mov
inc
jg
cmp
sbb
bound
aam
inc
out
les
sbb
add
or
dec
adc
adc
insb
call
mov
pushf
mov
xchg
push
xchg
or
mov
mov
dec
int3
loope
cwtl
cld
xor
inc
or
movsb
cwtl
push
mov
loop
inc
or
pop
fs
adcb
fiaddl
cs
sbb
pushl
push
cltd
push
rclb
enter
aaa
xor
rclb
icebp
fnstsw
jbe
rolb
adc
add
lock
pop
fs
jg
xchg
aam
and
adc
sbb
jle
in
mov
mov
aaa
sbb
sbb
sbb
lods
pop
adc
or
adc
cli
je
xchg
add
test
andps
add
flds
sbb
insb
pop
lea
dec
inc
sbb
or
push
adcb
jp
fcmovnu
fcompl
jle
or
sbb
push
pop
dec
inc
and
adc
mov
add
mov
pop
pusha
popa
or
in
adc
mov
cmc
mov
mov
sbbl
jns
roll
push
add
mov
push
xor
das
lret
sub
out
mov
cld
pop
inc
mov
inc
xchg
in
popa
call
xchg
gs
mov
mov
add
lea
ret
loopne
ljmp
add
dec
movsb
xchg
push
pusha
jecxz
outsb
xlat
inc
lods
adc
call
xchg
loop
mov
call
mov
xchg
adc
out
rolb
cwtl
xor
xorb
lret
mov
pusha
dec
xlat
sahf
je
mov
jo
movsl
mov
sub
xchg
and
mov
jl
lret
mov
aas
andb
outsb
in
cvtps2pd
push
lahf
orb
imul
xor
cltd
xor
lret
add
cmpb
fsubs
add
jg
hlt
fbstp
adcb
addl
push
add
push
sbbb
sbb
add
adc
ret
add
jecxz
ljmp
push
rorb
sarb
inc
cmp
rol
ss
int
inc
ret
ror
into
incb
pop
inc
dec
and
cmp
in
xor
push
or
int3
push
test
sbb
mov
roll
loopne
jo
lcall
cmp
jbe
orb
int3
scas
fwait
pop
es
jl
push
or
or
ret
rclb
or
in
and
push
push
ret
sub
pop
xor
clc
and
or
inc
mov
cs
es
or
sar
daa
push
pop
rclb
dec
daa
sub
cmp
inc
push
pop
fiaddl
cmp
mov
orb
mov
push
and
adc
je
jae
bound
mov
loope
ret
js
rclb
packsswb
push
and
test
adc
sbb
pusha
rorb
and
test
xchg
ljmp
aad
add
add
orl
jecxz
enter
test
adc
mov
pop
insb
in
push
movups
pushf
rclb
lock
es
sbb
ret
adc
mov
jo
or
cwtl
test
push
cmp
adc
arpl
dec
add
pop
mov
loop
addr16
shl
decl
gs
dec
in
or
jg
inc
and
push
jnp
movsb
mov
push
pop
out
inc
inc
shrl
dec
cld
mov
add
rorb
gs
jbe
pusha
dec
jmp
sbbb
and
add
das
adc
out
push
adc
cltd
addr16
test
dec
add
sbb
pusha
push
rorl
and
pop
sub
stc
mov
add
push
or
js
push
jbe
sbb
dec
jb
dec
jb,pt
push
push
mov
mov
sbb
push
mov
and
mov
mov
fidivl
dec
rep
insl
xchg
push
push
and
xchg
inc
imul
pop
add
jns
sbb
dec
sarl
mov
cmpsb
cmp
icebp
push
adc
fnstenv
mov
jle
stos
loope
out
mov
or
jnp
xchg
mov
in
mov
jns
imul
stos
fsubrs
imul
fsub
rcrl
stos
fsubrs
add
loopne
adc
jge
mov
xlat
int
rcr
push
stos
out
out
mov
rorb
pop
cmp
popa
add
mov
sti
dec
mov
and
xchg
dec
xor
mov
rolb
sub
cmp
stos
iret
xchg
iret
xchg
movsl
or
add
add
clc
pop
adc
jnp
jns
inc
mov
xchg
lock
push
sub
push
inc
mov
pop
ljmp
push
dec
push
pusha
push
jns
loope
mov
fidivs
add
mov
mov
cltd
lods
lret
loope
mov
pop
cld
fisubl
insb
adc
adc
leave
pushf
mov
push
or
or
xor
add
jl
andb
or
cld
xchg
xor
pop
clc
jb
mov
sub
xor
and
xor
iret
pop
inc
add
mov
repnz
fwait
push
mov
scas
aas
inc
xlat
and
shlb
xchg
adc
sbb
add
clc
push
loope
mov
push
sub
mov
clc
pop
sbb
sbb
or
add
inc
stos
data16
adc
sub
adc
xchg
loop
lea
adc
std
ja
jae
lret
mov
adc
inc
bound
adc
daa
loopne
pop
fiaddl
loop
aaa
adc
mov
add
or
adc
std
and
jo
shlb
add
int3
pop
push
pop
jo
loop
rolb
sub
cmp
mov
push
adc
push
daa
push
loope
or
xchg
addr16
imul
adc
adc
or
mov
gs
xor
pusha
or
insb
into
into
aaa
sub
sub
or
pop
sub
out
test
sbb
rorb
add
hlt
xchg
xor
ja
inc
jg
mov
and
xor
add
adc
pop
or
sub
inc
ja
subb
cmp
pop
mov
orb
shlb
test
and
inc
and
and
push
xor
aas
sub
sbb
sub
mov
sbb
xor
mov
adc
cmp
movsb
dec
and
ljmp
push
inc
rorb
or
pusha
add
add
loop
sub
mov
pop
push
test
sbb
add
or
add
test
lret
sub
pop
sub
addb
cld
aas
fidivrs
mov
mov
mov
stc
data16
sbb
xor
jecxz
jno
add
clc
add
jmp
arpl
pop
sar
mov
lock
rolb
adc
shr
loopne
cmp
outsb
or
inc
inc
xor
add
xor
jb
inc
movsl
mov
sub
and
inc
pusha
push
nop
std
cmp
mov
xor
mov
loope
or
sahf
and
inc
sbb
test
or
mov
inc
rolb
popl
and
and
sbb
cmp
inc
adc
push
fucomip
mov
mov
ds
dec
repz
loope
aaa
pop
test
inc
inc
aam
pushf
mov
int
mov
sub
hlt
adc
jns
dec
aaa
les
call
subl
inc
push
insb
sbb
aaa
xchg
or
stc
push
xorb
jbe
rclb
add
test
xor
inc
or
adc
push
adc
cmp
ficoms
ja
jp
cmpsb
rolb
sahf
dec
movsb
out
loopne
jmp
addr16
inc
xchg
aaa
insb
rcr
mov
or
cli
sub
inc
inc
aam
sub
inc
or
xchg
sysenter
mov
add
jbe
add
loopne
push
and
inc
lret
mov
jg
lock
mov
out
xor
loopne
aaa
test
test
add
aas
add
inc
or
push
lcall
and
mov
mov
cmp
add
or
das
mov
nop
pop
mov
sub
lcall
sub
add
dec
popa
dec
push
pop
stos
test
outsb
pop
fcmovbe
mov
insb
stc
push
cmp
sbb
inc
ds
ds
cld
mov
mov
mov
adc
lods
mov
adc
orb
scas
mov
mov
adc
test
into
or
orb
loopne
or
js
adc
or
cmc
sbb
call
mov
sub
mov
sbb
cli
and
icebp
add
mov
adc
sub
sbb
adc
or
ror
mov
jg
dec
xchg
add
pusha
add
sbb
pusha
xor
push
push
jecxz
pop
cwtl
rclb
stc
stos
jae
mov
push
mov
push
bound
xchg
dec
rolb
sti
push
stc
aaa
or
loop
add
cmp
fldenv
pusha
mov
add
xchg
mov
jnp
sub
loopne
cmpsb
es
push
jne
cld
adc
hlt
ja
mov
dec
and
sbb
xorl
bound
fwait
adc
add
mov
and
ds
sub
adc
push
and
in
movsb
and
dec
fs
test
fwait
fs
pop
add
loope
mov
mov
aaa
jo
dec
nop
adc
hlt
aaa
faddl
push
scas
or
sub
and
cmpsl
adc
xor
ss
xchg
rolb
mov
cmp
dec
sub
lret
adc
inc
adc
mov
add
xchg
int3
mov
add
loopne
mov
clc
mov
jmp
dec
mov
loop
shlb
xchg
sbb
sbb
mov
lret
cwtl
movsl
jg
jecxz
inc
pop
inc
cmpsb
shrb
bound
push
je
inc
xchg
mov
rcr
dec
add
dec
stc
jns
dec
push
fs
pop
xor
pop
inc
test
pop
enter
adc
add
ret
xor
or
fnsave
cmp
add
add
and
fwait
inc
sarb
add
xor
adc
cld
add
mov
jle
jle
cld
adc
add
test
mov
cmc
adcb
aad
daa
cwtl
imul
push
xchg
dec
add
ret
push
mov
andb
rolb
mov
add
lcall
mov
inc
push
in
mov
ja
cli
adc
not
sbb
pusha
cmp
ljmp
inc
test
add
inc
push
cmp
fnstenv
jne
xchg
and
pusha
mov
xchg
add
insb
mov
in
aas
int3
dec
mov
call
nop
pop
or
int3
pop
pop
push
dec
or
mov
and
loope
repnz
outsb
loopne
sub
xlat
or
loopne
push
xchg
push
lret
mov
push
or
icebp
sar
pushl
pop
adc
or
fldenv
add
jae
out
shr
clc
out
jno
inc
les
jg
add
add
or
clc
mov
xchg
jbe
lock
pushw
adc
xor
stc
mov
xor
push
mov
fistpll
roll
ljmp
outsb
popa
dec
in
jg
push
dec
mov
lret
rorl
mov
clc
test
push
ds
mov
push
lods
stc
xchg
sub
adcb
call
sbb
mov
cli
dec
rclb
repz
addb
movl
cmpl
out
jge
or
sub
push
sarb
test
push
adc
testb
addb
sub
inc
push
jno
add
ror
or
jmp
cmp
and
or
push
xor
fidivrl
or
add
hlt
add
pusha
hlt
sub
std
push
mov
add
test
sbb
and
push
cmp
mov
sub
orb
add
xchg
sbb
jl
adc
push
mov
xor
xchg
movsb
andb
pop
push
dec
bound
push
mov
call
push
adc
shlb
cmpsb
cmp
insb
mov
or
and
ljmp
or
inc
pop
pop
rorb
lcall
adc
mov
and
pop
loopne
or
jo
or
fiaddl
out
clc
add
cmp
xorb
push
enter
lock
ss
sub
pop
push
push
adc
fidivl
xchg
and
mov
stos
cwtl
add
jb
dec
outsb
xchg
mov
stc
xor
mov
cli
testb
mov
shlb
je
std
test
sub
fidivrl
adc
or
sub
sbb
ds
pop
push
cld
push
sub
stc
in
cmp
loop
rcrb
dec
inc
ja
in
add
xor
dec
mov
stc
andl
mov
lea
sbb
or
sub
mov
test
ret
in
out
and
and
rclb
js
cmp
sub
aam
lret
push
add
add
add
popa
mov
dec
dec
std
pusha
in
gs
loopne
std
adc
lret
mulps
jb
inc
sti
push
clc
aas
cli
push
inc
rorl
ds
add
js
andl
js
add
or
xchg
inc
stc
scas
fcmovnbe
mov
inc
cltd
xchg
inc
lock
dec
dec
cmpb
lods
mov
clc
sti
inc
xor
push
insl
inc
iret
cmpb
sbb
in
inc
sahf
lcall
test
loopne
or
movl
sub
push
add
cli
orb
mov
shrb
push
xchg
cmpsb
mov
dec
cli
daa
or
insb
pop
add
jns
clc
inc
adc
rcll
sub
in
mov
push
add
jg
shl
bound
adc
xchg
sbbb
pop
shlb
dec
mov
mov
inc
mov
or
jb
rorb
mov
sarl
sub
pusha
xor
icebp
scas
mov
push
or
dec
push
loopne
add
sbb
pop
push
or
push
push
cmp
addl
sar
mov
mulb
sbb
rcrb
clc
and
clc
xchg
mov
sbb
aaa
mov
shlb
jo
jmp
add
xor
xchg
imul
sub
mov
sub
in
pushf
movsb
jno
inc
jg
push
testb
pop
or
inc
roll
xor
outsb
sbb
nop
and
mov
pop
insb
dec
outsl
add
fistpl
adc
xchg
push
push
and
xor
add
and
stc
cmpsb
lods
and
mov
add
test
mov
push
scas
shrb
dec
add
adc
arpl
add
xor
add
inc
xor
xchg
fidivrl
xor
jne
xlat
subb
mov
jl
sub
and
jge
lods
add
cs
cli
push
sub
add
sub
es
mov
pushf
push
and
pop
enter
xor
ljmp
cmp
push
rcrb
fs
loop
shl
add
outsl
or
pushf
pop
loopne
push
add
outsl
xor
add
adc
cmp
jmp
cli
scas
in
xchg
pop
push
test
push
sbb
adc
aam
mov
push
ret
orb
xor
jns
pusha
pop
fdivrs
push
sub
pusha
add
subb
roll
and
add
pop
sahf
fs
sbb
and
mov
loopne
or
push
sarb
pop
add
push
lea
movsl
movsl
popf
mov
pop
roll
imul
ljmp
pusha
sub
jnp
loopne
ret
jno
js
add
fldenv
loop
rcll
movsb
add
sub
mov
call
dec
sbb
adc
pusha
fwait
sbb
and
pop
ret
fdivrl
push
loope
sahf
mov
pop
add
call
add
jnp
cmp
push
add
or
sti
pop
mov
or
inc
loope
and
inc
lods
dec
push
ja
jns
dec
call
mov
addl
sbb
cmc
xor
mov
ffree
fiadds
and
addps
mov
cmp
or
push
mov
cmp
sub
inc
movsb
adc
stos
mov
push
pop
jmp
ja
add
xor
sbb
push
or
jne
in
add
push
mov
arpl
stc
arpl
push
mov
cmp
lret
mov
fwait
jle
sbb
sbb
mov
decl
adc
mov
push
xchg
mov
outsl
nop
lock
dec
outsb
pusha
and
cmp
sbb
inc
xor
outsl
dec
ret
and
inc
dec
fs
fcoml
pop
push
cmp
ss
push
or
cli
fwait
or
add
or
movsb
sti
add
adc
insb
decl
sub
and
mov
push
adc
scas
data16
add
rep
and
addb
lock
dec
jo
int3
nop
adc
xchg
lock
add
sub
loopne
movsl
or
sbb
jno
or
mov
adc
and
mov
sarb
pop
dec
push
mov
outsb
or
and
lcall
sbb
inc
notb
sbb
xchg
xor
addr16
jns
pushf
scas
mov
xor
and
insl
push
mov
mov
loopne
mov
adc
and
xchg
ss
cli
add
fcmove
push
pop
gs
imul
mov
mov
mov
and
and
jo
or
add
add
inc
fbld
add
hlt
or
hlt
loop
add
incb
xor
aam
jmp
std
ljmp
add
push
cmp
adc
mov
add
xchg
inc
rcll
imul
cmpsb
or
dec
lock
add
jle
add
adc
push
sub
cmp
shll
fldenv
sub
loopne
push
and
pusha
loope
rorb
xor
pusha
push
in
jno
xchg
xchg
jbe
mov
jmp
outsb
xlat
stc
mov
adcl
stc
pop
cmp
aad
mov
pop
pushl
xor
pop
xchg
xor
add
rcrb
nop
lock
lret
das
add
es
nop
mov
lock
adc
pop
cwtl
cli
sarb
jmp
rclb
popa
push
std
inc
mov
mov
push
push
xlat
in
clc
mov
scas
inc
jns
xor
inc
lock
adc
jo
xchg
xchg
in
pop
lock
adc
adc
add
test
fmuls
inc
mov
add
sbb
aas
mov
push
shrl
shlb
add
mov
and
gs
inc
dec
push
jo
add
mov
sahf
jmp
sbb
ss
adc
push
or
add
mulb
inc
nop
call
push
adc
sub
mov
cmc
stos
add
adc
popf
inc
or
stc
dec
xor
pusha
adc
loope
insl
aam
or
out
adc
push
shrl
mov
sbb
push
jo
outsb
and
test
mov
sahf
mov
pop
cwtl
clc
das
out
adc
adc
in
mov
clc
adc
mov
push
nop
or
add
adc
jne
add
add
add
add
jp
add
fcomps
aad
push
enter
sbb
jge
hlt
cmp
idivb
sbb
push
aas
dec
or
cmp
jmp
adc
jo
xorb
lcall
sbb
and
rcrl
pop
sbbb
push
inc
xor
dec
bnd
divb
jnp
dec
mov
rolb
mov
xor
stc
mov
pop
imul
cmp
and
add
stc
lcall
xor
lock
scas
popa
push
nop
sbb
test
cmp
sbb
les
inc
jecxz
or
sbb
std
jecxz
mov
inc
jnp
loop
lock
sti
or
std
sbb
adc
bound
pusha
adc
and
adc
or
xor
std
sbbb
dec
nop
sub
add
nop
daa
xchg
push
pusha
sbb
dec
stc
movsb
es
stc
add
mov
dec
loope
xor
je
dec
ret
mov
or
jb
insb
mov
lods
mov
jne
dec
inc
mov
in
dec
add
and
lcall
and
in
mov
inc
push
sbb
sbb
push
xchg
pop
and
fsubrs
fs
inc
pop
push
cs
out
jno
stc
push
cld
push
rolb
xchg
push
xchg
mov
aaa
jp
add
cld
ret
ljmp
pushf
pop
and
lock
add
push
or
repnz
loopne
xor
jp
ret
fs
in
shl
dec
lret
cwtl
vmovq
mov
movsb
sub
xor
or
inc
test
mov
mov
loopne
int
ret
das
mov
ret
pop
inc
push
jl
das
adc
ds
mov
mov
sbb
inc
stos
sub
jnp
rorb
in
leave
xor
fimull
stc
jae
push
stc
dec
pop
pusha
outsl
ja
stc
stc
inc
or
stc
pop
xchg
or
fidivrl
push
sub
test
add
incl
cmp
xor
inc
and
mov
mov
mov
les
add
push
jo
lock
sbb
pop
sbb
push
ds
xor
movsl
test
jg
andb
mov
or
mov
mov
loopne
cmp
jl
outsl
jnp
nop
cs
insb
pop
add
das
mov
xor
or
add
and
adc
and
mov
test
jb
fbstp
mov
stc
push
loop
sarl
mov
subl
hlt
jo
or
es
adc
fistpll
dec
pop
orl
jmp
push
add
push
stc
mov
add
inc
movsb
mov
stos
decl
fildl
pop
cmp
sub
inc
mov
movsb
rclb
adc
nop
imul
and
push
dec
test
inc
inc
inc
sbb
push
dec
jmp
xchg
ss
aad
adcl
into
les
push
or
outsb
and
lret
adc
inc
adc
sbb
sbb
test
popa
roll
mov
adc
inc
mov
and
mov
add
nop
insb
in
aaa
and
add
hlt
stc
cltd
in
stos
out
out
sbb
or
jbe
ret
jecxz
pop
lds
test
outsl
and
ds
stc
movsb
push
and
dec
xor
lcall
dec
push
sbb
ds
inc
loope
sbb
mov
xchg
inc
cli
and
push
adc
sbb
dec
addl
fldenv
or
adc
adc
stos
ficoms
xchg
add
or
pusha
fsub
adc
mov
ret
mov
or
add
or
add
xchg
mov
loop
ds
loopne
scas
repz
xchg
into
pop
and
insb
nop
adcb
adc
js
or
andb
push
lahf
mov
adc
or
dec
add
mov
add
shrb
lret
push
loop
inc
test
bound
mov
add
push
fldl
push
mov
loop
xchg
loopne
pop
inc
xchg
xchg
sub
add
jns
pop
cmp
mov
loopne
imul
xchg
stc
push
mov
mov
push
sbb
dec
mov
add
or
loop
nop
cs
dec
sbb
pushl
dec
pcmpgtb
out
mov
pminub
lahf
adc
sbb
inc
loopne
xchg
call
dec
jo
fdivl
add
adc
fldl
dec
xor
push
push
push
daa
add
and
popf
pop
push
leave
push
ffree
jne
stos
sub
pop
adc
add
adc
ljmp
inc
sbb
or
inc
push
stc
inc
push
fsts
mov
inc
jp
inc
push
out
rcrb
jmp
flds
push
pop
add
push
int
sub
aaa
push
sub
filds
xchg
mov
jecxz
stos
adc
shlb
fcoml
mov
push
sbb
es
pop
mov
xor
and
repnz
inc
push
cwtl
loopne
or
adc
scas
push
mov
cli
and
mov
or
sub
pop
das
sub
stc
insl
add
or
add
pusha
aad
inc
call
push
push
dec
das
mov
adc
or
arpl
loop
adc
addr16
add
xchg
dec
inc
mov
jg
shlb
sub
or
int
loope
mov
sbb
sub
inc
cmp
or
and
int
clc
inc
or
mov
clc
pop
or
push
add
xchg
gs
inc
add
sbb
insl
jmp
sarb
test
shll
aad
in
inc
jbe
xchg
rolb
aad
pop
orb
mov
flds
outsl
xor
inc
rolb
cwtl
in
rcl
call
add
lahf
inc
mov
inc
add
xchg
and
decl
fbld
inc
roll
jne
inc
xor
hlt
negb
and
xor
add
inc
cmpb
pop
roll
pop
inc
push
test
clc
in
xorb
test
std
inc
pusha
push
add
mov
sub
loope
loope
adcl
jle
add
fildl
add
adc
pop
or
or
and
push
mov
stc
jae
pushf
and
mov
mov
add
stos
or
mov
xor
and
test
sbb
sub
call
pushf
and
rclb
mov
lods
and
add
and
add
xchg
fisubl
sarl
sbb
ja
xchg
sub
cli
arpl
push
addb
arpl
fisubs
mov
push
mov
clc
mov
inc
jnp
or
xor
sbb
push
loopne
test
and
sbb
in
adc
dec
push
adcb
xchg
sbb
sbb
adc
jp
andl
pusha
inc
loopne
and
and
cwtl
sbb
ret
adc
cmp
mov
cld
loopne
arpl
jnp
xchg
and
test
cmpb
in
add
ljmp
adc
sbb
dec
or
cmp
mov
xchg
dec
out
mov
or
cmp
inc
add
loopne
fdivr
push
xor
jnp
cwtl
shlb
fdivrl
loopne
stc
sbb
sub
or
fiadds
ljmp
push
add
inc
mov
movsb
outsl
out
add
clc
and
fs
fwait
adc
clc
and
test
add
adc
fstps
roll
rcrb
sub
insl
shll
add
in
out
adc
sbb
lcall
inc
jnp
or
xor
fs
and
add
imul
adc
or
lcall
sbb
fwait
mov
outsb
jns
jae
lods
mov
dec
add
cwtl
add
sbb
leave
incb
jmp
inc
pushf
or
or
adc
cmp
jbe
popf
ret
push
pop
ret
scas
xchg
dec
sahf
es
and
shrb
xchg
xchg
xor
lcall
insl
jo
cld
int
cwtl
mov
pop
mov
orl
cmp
rolb
ret
cs
cwtl
fwait
adc
sub
adc
aad
xor
or
cmc
push
mov
add
sub
add
pop
add
insb
adc
sub
or
or
cmpsb
sub
jbe
shlb
push
adc
dec
popa
add
pop
fistps
imul
xchg
clc
int3
loope
inc
sub
push
inc
scas
inc
cmp
jg
test
mov
adc
imul
jnp
cmp
cmp
or
xor
pop
sub
mov
orb
add
or
imulb
inc
js
arpl
lds
ds
add
add
imul
clc
or
imul
outsl
push
jnp
orb
rolb
mov
shr
lcall
clc
add
test
pop
xor
add
bound
call
es
cli
xchg
pusha
push
add
lcall
jle
and
inc
xor
sub
adc
xchg
sbbb
xor
add
mov
and
xchg
stc
mov
add
and
mov
fs
push
add
mov
add
jl
adc
aaa
mov
out
faddl
scas
mov
inc
cli
in
add
lods
cltd
cmpsb
ja
add
ja
xor
xor
mov
jg
xchg
xchg
push
cmp
cmc
daa
adc
xchg
push
xor
and
jnp
mov
adc
dec
mov
mov
test
xor
add
aaa
pop
mov
push
stos
nop
cs
js
push
addb
movsb
stc
inc
jg
incl
sbb
pusha
es
adc
or
repnz
mov
ret
cmp
arpl
jo
adc
add
popa
fcmovbe
aam
dec
decl
xorl
cwtl
sbb
or
inc
xchg
sub
pop
mov
and
es
add
mov
aas
loope
out
add
jg
mov
mov
xchg
incl
adc
adc
sub
or
xchg
enter
add
jl
inc
lcall
roll
popa
cmpb
hlt
mov
jne
xor
inc
outsb
jb
xchg
jbe
or
cmp
pop
inc
cld
pop
nop
test
mov
jns
and
adc
scas
push
pushf
test
push
xchg
mov
sarb
mov
jg
bound
xchg
add
push
cmp
mov
add
cmc
inc
loop
lods
dec
paddd
inc
adc
fstpt
push
jp
sarl
inc
in
add
dec
je
jmp
sbb
loopne
and
stc
fucom
imul
add
xchg
push
mov
xchg
pop
or
mov
xchg
test
nop
add
out
movsb
xchg
sub
push
enter
movl
pmulhw
outsl
nop
or
cmp
or
pop
pop
jmp
sbb
imul
imul
add
inc
mov
push
cs
aas
gs
shlb
add
ljmp
and
cmp
pusha
pushf
inc
mov
add
rorb
xor
lock
xlat
inc
mov
inc
stos
push
pop
fs
cli
sbbb
imul
inc
fistpl
jns
aam
sbb
adc
fadds
adc
in
push
daa
stc
add
or
into
pop
mov
movsb
pop
add
inc
out
fcmovbe
pop
incb
adc
dec
fsubs
pop
mov
repnz
sbbb
sbb
or
jg
inc
idiv
sbb
cmp
sbb
xor
movsl
movsl
mov
pushf
xchg
movsb
xchg
jle
xchg
pusha
adc
and
pop
mov
xchg
fdivl
push
cmp
xor
pop
out
mov
xchg
in
cmp
aas
je
clc
out
xchg
shlb
cmp
hlt
lea
insb
fsubrs
sbb
in
ret
lcall
xchg
xor
and
popa
stc
cmpsl
or
movsb
push
jge
adc
icebp
pusha
dec
orl
test
mov
loopne
mov
add
lds
int
adc
push
jo
inc
inc
cmc
or
xchg
inc
cwtl
dec
lods
and
movsb
int
icebp
sbb
jp
pop
es
or
xor
cs
xor
mov
jmp
repz
lret
mov
add
lock
add
into
xor
je
mov
cltd
xorb
mov
add
es
arpl
xchg
jns
pushf
movsb
inc
and
loop
loop
fcomi
or
xchg
adc
mov
adc
adc
call
ss
adc
sahf
mov
in
hlt
adc
out
push
xchg
push
addr16
test
test
hlt
movsl
dec
xchg
add
add
cld
inc
add
js
cli
pop
testb
in
jns
mov
cmpsl
push
test
mov
sarb
xor
push
jns
push
and
mov
lds
aam
loopne
clc
out
nop
sbb
sbbb
mov
push
or
aad
les
pop
xchg
sbb
subb
jg
shlb
jns
xorb
pushf
xchg
adc
loopne
sar
imulb
outsb
into
test
roll
push
test
add
outsl
mov
int
and
add
cmp
inc
ss
or
loopne
testb
into
add
cmp
mov
scas
out
insb
inc
in
addb
add
popf
clc
testb
xchg
xor
addl
push
jg
pop
add
je
adc
mov
adc
xchg
subl
dec
add
mov
imul
jg
add
push
or
add
cmp
jae
pop
jnp
mov
cwtl
js
pusha
repz
xor
add
lods
add
or
dec
dec
pop
mov
inc
xor
xchg
xchg
push
int3
movsb
aas
mov
outsb
ret
dec
lock
jmp
dec
add
popa
sbbb
cmp
pop
inc
add
adc
add
cmp
push
push
jp
out
popf
add
adc
push
jbe
cmp
test
dec
loop
test
loop
int
scas
dec
inc
add
and
or
inc
mov
sbb
or
add
loope
pop
add
sbb
add
push
subb
rcrb
inc
cmc
and
enter
in
adc
mov
ljmp
add
test
addl
add
mov
xorb
inc
icebp
add
xorl
lods
pop
sbb
popa
in
mov
nop
jnp
bound
and
jne
cs
xor
inc
sbb
dec
cld
or
jns
inc
adc
add
nop
out
dec
stos
add
add
rolb
decl
dec
or
mov
addl
mov
out
inc
pop
jle
pop
sub
shrb
xor
sub
add
scas
inc
cmp
ljmp
push
hlt
push
xor
cs
popf
add
aad
or
mov
xadd
jl
aad
mov
pop
and
or
test
or
test
mov
xchg
ret
andl
sub
int3
pop
lcall
adc
sbb
xor
add
mov
mov
stc
pop
inc
push
add
adc
and
addb
cmpsb
push
pop
mov
adc
jo
push
subb
push
cmpsb
test
orb
push
push
mov
add
idivb
inc
lcall
subb
cmpl
bound
xor
inc
sbb
rorl
cmp
add
fwait
push
test
call
or
dec
push
jmp
add
cmp
dec
add
xor
lcall
mov
xchg
cmp
and
loop
dec
push
jo
adc
gs
inc
add
pop
dec
mov
adc
or
ror
addr16
les
add
push
popa
adc
mov
hlt
push
dec
rcl
xchg
xchg
out
add
popf
push
pop
sub
mov
inc
jo
sub
add
filds
imul
and
pop
inc
outsl
cmp
and
subb
push
add
add
stc
xor
arpl
pop
pusha
xor
cmp
cmp
call
or
mov
andb
inc
jg
loop
sub
lea
add
shrl
mov
jbe
and
test
jecxz
jmp
inc
inc
shrb
std
mov
and
cld
call
ficoms
xchg
loopne
lods
stc
inc
xchg
inc
loopne
cmp
testb
push
test
test
and
imul
in
and
into
xor
mov
add
push
mov
ret
adc
inc
and
mov
add
pushf
adc
fwait
test
pusha
mov
inc
loopne
jp
shll
inc
add
sarb
lods
divb
push
push
push
add
cld
pop
add
decb
mov
jmp
cmp
xchg
jns
testb
add
ffree
cmp
mov
shlb
stos
or
test
inc
insl
std
sbb
cltd
movsb
icebp
dec
and
mov
add
add
dec
mov
mov
clc
push
mov
push
int3
fwait
idivb
stos
addb
adc
mov
mov
icebp
mov
clc
sub
mov
je
xchg
dec
add
sbb
std
mov
cwtl
xchg
fnstsw
add
nop
repnz
rclb
cltd
call
addb
pop
std
inc
clc
or
sub
cmc
out
lret
or
jle
out
push
push
mov
test
add
mov
icebp
shrl
shrb
xchg
inc
jo
xchg
xor
std
outsl
fstpt
dec
add
gs
cli
shr
add
or
leave
ss
imul
out
cli
mov
push
pusha
pushf
sbbb
das
or
mov
add
push
xor
leave
stc
cmp
in
and
adc
inc
inc
rcrl
pusha
cmp
mov
bound
jne
mov
bound
inc
mov
insb
lds
sbb
fisubrs
add
stc
xchg
lods
push
ret
cmp
fstl
mov
xor
adc
sbb
push
shlb
sub
xchg
add
into
pop
lds
inc
insb
in
outsl
sti
fcomip
push
add
push
push
out
mov
icebp
inc
sub
inc
adc
lock
inc
int
push
add
cmc
sbb
push
sub
es
mov
rorl
add
sub
test
fcmovb
das
dec
loopne
push
dec
jo
test
pop
or
ret
mov
adc
adc
dec
pop
insl
loop
add
mov
mov
sub
mov
loop
push
ljmp
adc
and
add
push
mov
test
call
add
mov
pop
sbb
dec
adc
adc
and
sbb
and
sarl
push
shll
mov
cmc
js
jns
push
jne
jle
enter
cld
shlb
sub
icebp
je
leave
or
add
xchg
mov
bound
sub
or
xor
xchg
stc
mov
lock
rcll
gs
test
ret
mov
mov
outsl
stc
outsb
ret
test
dec
jg
inc
lock
jo
loope
icebp
xor
gs
subb
nop
push
addr16
stc
jbe
sbb
xor
mov
jg
mov
jno
xchg
push
lds
push
shrl
sti
in
outsl
decl
icebp
jo
mov
cmpsb
add
add
popl
mov
push
cs
outsl
fwait
arpl
mov
and
ss
nop
sub
push
mov
add
mov
ret
loopne
inc
sbb
phaddsw
mov
xor
sbb
outsl
adc
adc
add
nop
lahf
movsb
pop
push
dec
dec
sbb
fdivrp
jle
dec
loope
int
jl
fs
stos
sbbl
xorl
cwtl
stc
loope
add
mov
push
bound
xor
int
das
in
mov
shr
insl
xchg
mov
add
cmc
xorl
dec
pop
enter
mov
inc
mov
or
gs
cli
adc
pushf
pop
or
outsl
incl
xchg
test
inc
xchg
mov
xchg
jecxz
pushl
push
xchg
push
test
sbb
incl
dec
xchg
and
dec
pop
movsl
popa
add
inc
xchg
dec
push
inc
ja
sub
jo
fsubl
mov
inc
nop
inc
cmc
stc
jmp
xchg
test
push
inc
aas
adc
rolb
adcb
inc
shlb
stc
cmp
jg
rorl
xor
jns
pop
mov
xor
loopne
test
inc
sub
xor
fisttpl
add
adc
test
mov
shrb
sbbl
xchg
fistpll
cmpl
xor
lods
xchg
xchg
cmp
and
out
mov
test
sbb
mov
nop
in
inc
out
push
and
pop
push
test
stos
fwait
dec
loopne
push
add
adc
add
aaa
and
add
cmp
xchg
outsb
adc
dec
inc
xchg
or
and
loop
loope
into
sbb
jo
sub
add
clc
pop
xchg
rcrb
mov
int3
pop
push
das
adc
addl
mov
xchg
mov
mov
xlat
ds
sub
inc
push
push
sbb
inc
sub
push
adc
sub
movsb
jbe
cli
sbb
inc
or
rolb
or
int
cli
adc
mov
inc
out
fcomps
mov
xor
mov
sub
or
inc
xchg
rolb
lret
jge
adc
add
and
pusha
pop
push
add
gs
mov
fucomip
xchg
and
xchg
xchg
fs
xor
dec
fbld
lock
lock
pusha
scas
mov
lock
push
and
pushl
fidivl
push
sbb
shlb
push
and
adc
or
in
push
rcrb
cmp
rorb
jp
fbld
add
xor
icebp
mov
or
negb
stc
gs
pop
pop
loop
outsb
outsb
cld
incl
xchg
fldcw
fsubs
imul
sti
mov
push
test
adc
add
xor
mov
aaa
or
sbb
push
test
les
cmp
stc
pop
push
adc
sub
fs
aad
iret
divps
dec
xchg
mov
andb
pop
or
mov
icebp
pop
sub
pop
test
std
adc
lock
add
cmp
dec
jb
outsb
outsl
out
add
lods
push
lods
test
int
pop
repnz
xor
pop
mov
add
pop
cmpsl
pop
push
adcl
ja
lods
stos
adc
shlb
push
sbb
pop
push
and
pop
lods
add
jbe
pop
push
xchg
xchg
lods
sbb
int3
popf
push
les
scas
lret
shrb
inc
stc
add
stos
ds
push
ss
add
jg
xor
shlb
jb
or
xor
push
mov
nop
ror
pop
lea
jnp
pushf
fs
stc
mov
popf
es
mov
icebp
sub
fmull
nop
fwait
pop
or
pop
pusha
xor
add
mov
and
pusha
dec
add
and
js
orl
lods
add
push
push
rorb
inc
es
imul
add
andb
enter
add
or
jns
icebp
orb
mov
ret
inc
es
push
sar
add
xchg
add
test
jp
xchg
out
aaa
add
or
test
test
popf
test
out
movsb
ss
test
test
test
test
add
test
xchg
stos
xor
ss
out
lahf
cmc
lea
mov
mov
aaa
outsl
outsl
mov
mov
jo
mov
arpl
int
fidivs
mov
mov
test
push
repz
rolb
lcall
movsl
test
in
fldt
cmpsl
test
test
stos
test
outsb
mov
cwtl
movl
or
test
test
add
test
test
addb
pusha
jns
fldt
mov
jnp
mov
outsb
and
and
test
int
and
test
test
sbb
mov
test
pop
icebp
test
fwait
dec
repz
cmc
test
mov
fwait
stc
push
xchg
test
or
jns
test
test
js
fwait
dec
repz
out
outsb
out
repz
dec
repz
iret
cwtl
pusha
in
test
test
shr
jns
imul
jmp
pop
pop
sbbb
sbb
fiadds
sbb
inc
cmp
pop
or
call
adcl
mov
test
test
inc
mov
sub
test
pushl
pop
aam
add
flds
test
stc
roll
xor
fbstp
xor
fiaddl
add
adc
test
xchg
out
push
test
mov
test
adc
filds
mov
sub
and
mov
push
push
loope
das
test
xchg
xor
incl
add
or
sub
push
shr
incl
imul
inc
dec
loopne
push
test
pop
push
mov
xchg
pop
movb
or
test
test
subb
jg
test
push
inc
inc
test
in
or
mov
inc
and
test
adc
dec
ret
bound
inc
arpl
mov
pusha
jno
and
mov
or
repz
fstpt
add
outsl
call
sub
or
test
ficomps
or
mov
popa
adc
or
fsubrs
arpl
repnz
rcrb
pusha
sub
xchg
mov
adc
xchg
add
adc
shr
adc
push
pop
pushf
pushf
popf
inc
pusha
xchg
testb
mov
dec
ss
cli
add
pushf
loopne
pushf
out
xchg
xor
hlt
sbb
repz
shlb
mov
out
or
add
xlat
insl
adc
enter
adc
cld
xor
movsb
rclb
cmp
push
jbe
mov
cs
je
pop
dec
xlat
adc
add
clc
nop
push
adc
or
mov
cmp
sahf
sahf
lcall
add
inc
shlb
pushf
push
fldl
rolb
shl
pop
cmpsb
dec
adc
sub
jmp
or
xchg
inc
lods
clc
pop
jb
xchg
or
out
inc
xchg
add
adc
fwait
loop
lds
clc
inc
test
xchg
shrl
icebp
and
movsl
rclb
xchg
filds
movsl
mov
fcoml
or
add
push
dec
mov
add
mov
mov
mov
mov
pusha
stos
add
sbb
inc
out
fs
shll
push
addb
lret
cmp
adc
xchg
test
push
push
pushl
fistps
sub
leave
outsb
push
sub
stc
aas
imulb
xchg
fs
loope
sbb
pop
ja
cli
cmc
add
sbb
gs
jb
xor
sub
and
movl
and
and
pop
or
or
mov
push
movsb
add
sbb
adc
into
ljmp
or
inc
gs
fdivr
jge
call
shl
jbe
std
and
xchg
adc
sbb
ljmp
jmp
bound
xor
inc
adcb
jmp
std
lret
adc
stos
adc
sub
or
mov
loope
cmp
jmp
adc
mov
nop
push
or
mov
test
inc
stc
mov
mov
int3
rcrb
mov
jb
mov
add
test
divb
call
add
jnp
pop
out
mov
adc
js
pushf
movsb
mov
push
hlt
leave
push
cs
out
mov
and
pop
pop
test
adc
mov
sahf
ret
mov
enter
adc
xchg
add
cmc
scas
adc
sub
pop
lods
mov
or
pop
test
daa
jl
adc
add
and
incb
mov
enter
mov
and
xchg
stc
ror
in
aaa
mov
push
lock
outsb
jmp
inc
push
cmp
mov
mov
xorb
pop
pushf
add
addl
cmpsb
mov
hlt
adc
adc
or
or
cmp
outsl
mov
out
in
icebp
xor
rolb
ljmp
stc
mov
into
or
ja
cmpsb
jg
inc
outsb
jno
fnstenv
push
insb
std
and
decb
ret
cmp
clc
or
add
add
addb
aad
idiv
adc
add
pop
sbb
cmp
adc
sar
daa
or
add
es
adc
sbb
fld1
and
loop
sbb
jecxz
adc
repz
lahf
mov
daa
add
icebp
or
xlat
js
and
negb
subb
adc
aaa
pusha
add
cli
or
push
adc
add
test
and
lds
inc
or
ljmp
add
sbb
pop
add
add
into
xchg
jmp
sbb
adc
dec
mov
inc
inc
sar
sbb
test
ss
adc
es
sub
gs
test
fbld
jge
inc
test
xchg
std
imul
pusha
push
push
adc
xchg
loopne
adc
inc
sbb
add
rolb
sub
rolb
mov
aaa
adc
push
out
iret
lcall
mov
or
pop
push
or
enter
sbb
call
mov
add
cmp
add
inc
dec
pushf
dec
pusha
pop
cwtl
cli
andl
xor
inc
sub
cli
adc
add
test
mov
push
lock
and
ljmp
xor
or
sbb
andb
push
add
add
lods
jb
negb
ficomps
out
popa
stos
sbb
ja
push
adc
notl
roll
sub
loop
adc
les
jecxz
push
xor
push
pusha
sub
stos
rcrb
lcall
pop
jo
sbb
inc
std
xchg
xchg
add
inc
lods
sub
xchg
mov
inc
nop
xor
add
scas
lock
push
rcll
inc
add
fs
adc
jle
mov
inc
out
sub
shlb
fadds
sbb
add
jno
adc
pop
xchg
lcall
push
push
add
dec
nop
loop
je
inc
jbe
inc
lock
ja
clc
inc
adc
dec
shlb
inc
push
mov
add
inc
rcrb
mov
xchg
jl
mov
and
lret
xor
add
mov
xor
dec
or
lock
sbb
mov
mov
mov
aad
in
out
rolb
rolb
mov
inc
aaa
jne
lcall
hlt
adc
or
inc
pusha
add
xchg
add
es
sub
cld
testb
add
inc
inc
or
daa
sarb
sub
push
sbb
das
dec
adc
mov
sar
fdivr
inc
out
push
add
dec
ret
ljmp
mov
push
ret
pusha
jnp
cmp
nop
add
repz
movsb
test
rorl
out
aad
xchg
jo
lods
pop
scas
rolb
adc
dec
cs
inc
hlt
push
jno
push
or
xchg
and
inc
inc
outsl
and
outsb
sbb
inc
outsl
xchg
inc
add
adc
stos
mov
or
mov
or
mov
xchg
jmp
cmc
push
inc
inc
subl
les
imul
push
aaa
or
adc
addl
inc
adc
icebp
jbe
fs
jno
inc
in
mov
push
dec
rolb
or
jno
push
in
add
fsubrl
mov
outsl
mov
rolb
das
movsb
inc
popa
add
popa
arpl
test
sub
pop
push
sbb
mov
or
xchg
mov
addb
orl
outsl
lcall
push
mov
adc
pop
cmc
add
mov
and
adc
rcr
or
xor
pop
cmp
std
dec
fmuls
add
xchg
in
nop
lock
inc
rolb
sbb
or
jb
adc
sub
sbb
popa
or
insl
pop
sarb
push
test
dec
inc
add
sbb
cmp
add
add
sbb
stc
mov
and
mov
add
jl
and
std
shrb
loop
fcoms
push
aaa
rolb
pop
dec
pop
icebp
jg
push
js
xor
loopne
out
mov
or
icebp
xor
push
add
rorb
clc
mov
add
add
xor
xor
stc
adc
adc
pusha
sub
bound
jns
mov
cmpb
call
push
sbb
aam
orb
jns
roll
incl
xor
nop
imul
insl
rol
loope
mov
inc
ljmp
jecxz
or
sub
adc
mov
jnp
incl
movsl
mov
in
movsb
in
pushf
mov
movsb
add
pop
sbb
mov
cwtl
insb
mov
fisubs
push
jle
lock
pusha
add
stos
inc
inc
pop
pusha
xor
pop
ljmp
add
push
inc
mov
insl
andb
cmp
popa
clc
lcall
int
adc
rclb
push
and
push
dec
movb
mov
push
dec
push
dec
add
dec
sub
subl
mov
andb
or
sbb
loop
dec
nop
mov
sbb
sbb
cli
lahf
push
add
inc
add
mov
hlt
fs
mov
jecxz
jecxz
aam
add
add
nop
std
popa
sbb
lret
test
addb
dec
bound
or
add
mov
pop
or
fcmovb
scas
jge
movsb
sub
lock
test
adc
orl
shlb
add
mov
jge
sti
inc
aam
dec
xchg
pop
movsl
in
push
jns
test
out
sub
xor
les
adc
add
xchg
add
add
mov
cmp
loopne
mov
mov
mov
aam
movsb
stc
int3
add
mov
testb
in
xchg
fcomps
lcall
cmp
adc
or
xchg
mov
ja
dec
cli
pop
or
or
cmp
jl
and
imul
push
inc
inc
jb
fimuls
cmpsb
inc
les
add
sahf
test
js
push
xchg
enter
scas
jp
inc
add
daa
test
mov
inc
lret
sbb
inc
das
inc
xor
push
lcall
out
dec
mov
lea
pop
adc
sub
adc
sbb
pop
push
mov
push
mov
sahf
add
mov
subb
add
addr16
shrb
stc
inc
insb
out
cltd
xor
lock
add
pop
xor
pop
sbb
push
add
mov
sub
xor
jae
and
pop
sahf
and
add
cmc
sub
sbb
sub
cmp
cmp
loope
add
add
cmp
mov
xchg
mov
dec
sbb
das
pop
es
arpl
sbb
cli
out
and
cli
or
xchg
pop
mov
jne
jb
aam
test
add
jl
sbb
sbb
or
paddusb
lret
sarl
nop
mov
add
rcrl
add
push
inc
pop
adc
gs
pop
je
jmp
dec
sbb
ss
xchg
adc
call
add
inc
mulb
sbb
add
push
bound
pop
add
mov
sahf
or
or
inc
push
mov
clc
lea
mov
shrb
icebp
orl
cmpsb
shlb
test
adc
rcrb
dec
push
cmp
jo
cli
add
jg
cmp
pop
out
add
lcall
sbb
adc
in
dec
xor
mov
cmc
scas
sub
adc
sub
add
es
add
in
stos
sbb
adcb
in
or
rolb
push
pop
sarb
ret
jle
sub
es
aas
push
aas
push
adc
frstor
rcrb
orb
out
and
out
in
cltd
scas
pop
mov
sbb
and
cmp
mov
add
mov
or
outsl
pusha
or
fdivl
or
add
or
pop
pop
adc
and
xchg
inc
push
xchg
lock
dec
pop
insl
cwtl
pop
jge
add
jge
sub
loopne
gs
mov
xor
std
outsb
popa
adc
push
jns
insl
pushf
inc
inc
pusha
pop
or
divb
inc
outsl
jge
mov
sub
pusha
or
sti
xchg
and
arpl
xlat
fstpt
jp
add
rolb
mov
and
or
pushf
push
js
add
test
ja
push
nop
bound
inc
lcall
adc
xchg
call
or
fs
stos
and
loop
add
nop
ret
pop
inc
or
rcrl
rclb
inc
js
fiaddl
adc
test
loopne
sub
out
adc
pop
mov
addl
dec
bound
xor
cld
lret
sub
cmc
pop
test
jecxz
and
stc
sub
xchg
push
aad
inc
in
lock
call
rol
adc
arpl
imul
cmp
inc
mov
mov
pusha
ret
ljmp
sahf
sbb
xor
test
dec
mov
adc
insl
sbb
sarb
rolb
or
pusha
icebp
jg
cs
push
loop
pushf
in
das
jmp
ds
inc
add
pop
xchg
xor
mov
call
add
add
pusha
mov
shrl
ljmp
popl
add
lret
adc
push
loope
arpl
adc
sahf
popa
mov
push
rolb
push
xorl
ss
dec
jp
add
pusha
sub
lcall
test
or
arpl
or
scas
nop
or
incb
loop
daa
add
mov
mov
pusha
add
sub
pusha
gs
mov
sub
cld
cli
mov
loope
xor
jge
add
pop
inc
or
rcr
mov
xchg
jo
mov
mov
jl
push
mov
add
cli
mov
pushf
and
cmp
pusha
sahf
outsb
push
push
adcl
inc
and
nop
add
mov
cmp
aad
loop
adcl
inc
push
jl
or
addb
inc
xchg
inc
stc
dec
and
adc
mov
push
xor
push
and
pop
rolb
add
shr
jg
mov
inc
and
in
rcll
pusha
pop
xor
or
in
stc
ss
cwtl
loopne
fs
cmc
sub
jl
jecxz
mov
add
cli
loopne
or
xor
mov
lock
ficomps
rorb
and
adc
add
jne
arpl
and
adc
iret
add
out
lcall
mov
shr
sar
adc
mov
cmp
add
jg
add
adcb
imul
sub
mov
aad
xor
pop
sub
outsl
push
or
pop
pushf
shrb
inc
insb
clc
pop
ss
xchg
rolb
xchg
gs
xor
sub
inc
jo
sahf
and
ljmp
mov
popa
dec
add
and
add
adc
jl
js
clc
in
xor
add
in
addr16
cmp
loopne
leave
inc
xor
inc
pushf
push
sahf
mov
xor
inc
cmp
xchg
les
add
adc
cmp
mov
outsl
adc
or
aam
andl
jb
js,pn
and
sbb
sbb
out
enter
inc
push
or
ficoml
push
cld
push
or
adcb
or
or
rolb
xchg
or
out
cmp
inc
jmp
add
shlb
out
jns
out
xor
add
pop
push
mov
xor
add
sub
push
adc
or
sahf
pushf
mov
inc
lock
dec
cmp
outsl
xor
jg
fs
bound
xor
inc
xlat
adc
stc
mov
adc
xor
push
add
fwait
mov
dec
cmp
or
xchg
inc
fsubrs
sub
call
testb
fidivl
sbb
xor
push
adcl
add
pop
adc
inc
stc
loopne
jle
add
sbb
outsl
jo
lahf
adc
xor
rorb
add
aam
adc
mov
inc
in
xchg
xlat
cli
stc
xchg
lock
push
cwtl
dec
sub
add
adc
call
pop
adc
xor
xor
popa
test
movsl
sub
int3
push
loopne
push
clc
loopne
xor
aaa
std
les
or
inc
mov
int
adc
loopne
fdivrs
cmp
sub
xchg
push
sbb
push
or
ljmp
pop
clc
pop
xor
push
push
and
ret
mov
outsl
stos
add
add
inc
dec
dec
jo
loopne
mov
xchg
sbb
and
adc
add
pop
pusha
add
inc
push
hlt
scas
pop
insb
rcrl
mov
mov
or
jl
stc
mov
dec
inc
je
scas
mov
pop
test
xor
mov
fs
add
test
push
xor
mov
sbb
sbb
loopne
jne
gs
and
dec
adc
xor
negb
aaa
mov
or
pushf
stc
jmp
push
rolb
sbb
bound
adc
mov
in
push
sbb
push
sahf
or
rolb
aas
test
call
adc
and
stc
adc
xchg
leave
mov
sbb
ss
adc
mov
dec
in
stc
xor
aam
sub
add
es
ret
sbb
shrb
sub
cmp
clc
outsl
cli
ja
pop
mov
lcall
adc
daa
out
data16
pop
dec
loopne
dec
mov
ss
aaa
test
into
and
pop
loope
mov
push
jae
inc
mov
mov
aam
cli
xchg
icebp
pusha
push
pushf
int
push
aam
leave
or
lods
sbb
or
ja
test
bound
cmpb
out
insl
lea
sar
aad
mov
mov
mov
sahf
xchg
jo
cmp
loopne
jg
adc
mov
add
adc
dec
add
addb
fdivr
push
in
jns
nop
push
mov
cmc
rclb
shlb
subb
mov
data16
sub
clc
mov
sub
incb
mov
fs
cli
fsub
mov
pop
and
push
fsts
and
pusha
adc
or
sarb
cltd
mov
and
aaa
add
loopne
dec
rclb
std
push
into
cmp
sub
addr16
es
fnsave
add
cld
fld
pop
add
lcall
add
xor
pop
add
inc
pusha
and
push
add
inc
add
loopne
test
mov
ds
testb
sub
into
gs
mov
or
cmp
mov
xchg
cltd
inc
or
push
stos
fs
add
call
xchg
sub
dec
pushf
mov
and
lret
adc
add
nop
mov
shlb
sarb
loope
addr16
mov
add
pop
adc
stc
divb
xor
dec
scas
push
adc
cmpsl
add
addr16
jg
or
push
xor
add
add
jg
addl
pop
push
mov
scas
insl
std
ja
xor
mov
pushf
mov
cmp
xor
rorb
data16
scas
sbb
inc
and
mov
push
xor
ret
xlat
adc
add
add
adc
add
push
pop
cmp
add
add
incl
mov
pop
mov
pop
or
inc
jno
jns
fsubp
dec
dec
idivb
adc
cli
pop
iret
bound
clc
out
data16
add
pop
gs
call
pop
mov
inc
cmp
addr16
inc
inc
pusha
sbb
add
outsb
clc
sub
inc
data16
pop
or
adc
inc
sbb
push
cltd
mov
or
add
ret
sbb
lock
push
xchg
sarw
loop
popa
jl
shrb
out
ss
add
jbe
jp
clc
xor
arpl
cmc
mov
jmp
sbb
xchg
pop
nop
out
test
and
and
loopne
cmp
std
jg
adc
ss
xchg
pushf
imul
scas
push
and
sub
bound
pusha
mov
call
clc
js
adc
mov
test
ja
retw
xchg
popa
add
clc
das
mov
mov
fyl2xp1
js
push
cltd
push
adc
test
fwait
adc
faddl
ds
lds
sub
or
xchg
add
xchg
into
inc
inc
dec
js
dec
cmpb
xchg
and
mov
lahf
add
cwtl
loopne
cwtl
xor
add
test
fwait
test
lcall
sbbl
out
add
xchg
jg
out
gs
jecxz
aas
pushf
and
imul
or
mov
sub
test
stc
pusha
jmp
test
xchg
movsb
fsubl
rolb
push
lods
mov
add
lock
xor
push
adc
das
adc
test
repnz
sbb
lret
stos
aam
stc
in
mov
jns
add
fs
test
and
sbbb
mov
or
adc
popf
push
or
add
mov
fdivrl
gs
ret
subl
clc
inc
sar
cmpsb
jp
cld
sub
jnp
sub
inc
andb
rcrb
testb
orb
adc
dec
cmpl
imul
push
push
push
adcb
dec
xorb
xor
xchg
loopne
std
stc
movsl
out
addl
add
cld
xchg
rorb
sbb
ret
push
add
inc
ret
andl
inc
cld
add
push
pop
mov
es
incl
sbb
addl
xor
adc
test
add
pop
loopne
pop
fmuls
or
lods
ja
xchg
jl
out
inc
gs
mov
mov
popa
fiaddl
pop
xchg
loope
sub
clc
sbb
jbe
dec
je
and
outsb
push
into
lcall
or
mov
sub
sub
mov
popa
add
mov
or
inc
sub
outsl
mov
inc
xchg
jb
jl
cmpb
sub
sub
xchg
xchg
adc
jns
add
fisubl
jo
push
inc
inc
xchg
mov
rorl
or
mov
mov
sub
adc
inc
in
lcall
mov
lods
pop
and
mov
xor
add
dec
mov
sbb
test
clc
inc
inc
ljmp
and
push
xor
rorb
pop
pusha
inc
arpl
cmp
push
mov
sbb
inc
add
push
and
xchg
or
dec
je
popf
add
sbb
dec
or
push
adc
xor
push
xor
popa
or
lea
xorb
les
push
xchg
mov
mov
add
sub
inc
adc
out
test
cld
push
adc
add
cltd
add
sbb
repz
mov
and
addl
or
adc
addb
push
or
dec
leave
add
xor
mov
addl
push
aad
push
and
rolb
mov
sbb
hlt
sbb
or
leave
addl
cld
inc
std
push
add
shl
jne
cli
or
cmp
adc
adc
and
sub
popa
mov
lret
inc
leave
sbb
fs
loop
or
mov
mov
addl
arpl
dec
add
neg
inc
jecxz
sbb
andl
add
jb
subl
pushf
dec
add
sbb
mov
xchg
enter
and
adc
dec
roll
push
and
add
cli
sbb
mov
or
add
fcomps
push
sbb
dec
dec
dec
dec
dec
icebp
and
rcl
addr16
mov
push
ss
cmpsb
test
adc
sub
jl
or
or
xchg
test
loopne
cmp
add
mov
or
sar
or
pop
push
mov
push
lods
push
js
cmpsb
or
dec
les
or
or
test
pop
cmp
sbb
lcall
ljmp
sub
mov
jo
xor
out
jns
pop
pop
adcb
cmpsb
loopne
or
fcoms
stc
jo
dec
dec
add
jnp
xlat
inc
cs
subb
addl
push
adc
xchg
push
out
loopne
jl
mov
ret
out
cli
xor
mov
and
sub
xchg
pusha
push
test
shlb
cld
mov
in
imul
shlb
sbb
jb
sbb
and
add
lock
fisttps
or
inc
lock
adc
cmp
mov
sarl
add
mov
mov
loopne
lcall
xchg
or
icebp
adcb
mov
rcl
inc
cwtl
sahf
loopne
dec
pop
add
xor
adcl
xchg
jne
mov
dec
dec
and
add
aas
xchg
pop
fbld
nop
mov
nop
sar
movsb
js
imul
andl
pusha
subb
mov
adc
inc
mov
cmovno
jne
sbb
scas
push
inc
mov
jne
shll
or
add
fcomip
pushl
push
lods
orb
add
sbb
sub
push
pop
inc
sub
add
adcb
add
cli
jmp
cmp
add
leave
inc
adc
add
push
pusha
or
in
adc
out
and
push
ret
sub
ret
push
lods
lcall
xchg
jge
cs
add
xor
pop
xor
push
add
or
adc
imul
mov
pusha
pop
fucomip
pop
pusha
cs
xchg
out
push
sbb
adc
ja
adc
jnp
adc
ss
mov
xchg
std
ss
inc
mov
xchg
scas
dec
adc
inc
mov
pop
imul
cltd
push
xchg
add
xchg
sub
sub
push
sub
bound
jo
or
cmpsb
add
xor
and
add
or
jo
mov
jmp
add
stos
das
icebp
xor
ret
adc
lds
cmc
xor
lock
roll
test
sub
mov
das
xchg
mov
stos
push
mov
lods
adc
ja,pn
push
xor
nop
imul
aad
ljmp
sub
les
std
or
add
or
xor
push
sbb
xor
add
imul
add
push
or
push
jae
aaa
outsl
fists
pop
lds
adc
std
push
adc
test
mov
es
xor
mov
sbb
gs
test
int3
pusha
fiadds
xchg
imul
fidivs
add
jl
repnz
push
cld
pusha
addb
add
pop
loope
fiaddl
xor
push
popl
mov
adc
lock
push
push
fcoms
push
add
stos
ftst
aad
roll
jg
stos
jg
sti
loopne
jge
jle
add
je
insb
fcmovb
fwait
testb
push
jne
xchg
push
xchg
cmpsb
imul
jge
pop
xchg
sbb
jns
fisttps
mov
add
mov
fwait
xor
inc
adc
mov
iret
outsb
xchg
shlb
in
add
stc
push
cmp
add
add
xlat
or
cmp
xor
shlb
add
data16
mov
je
xor
stos
dec
lock
loopne
ret
xorl
dec
adc
mov
repz
dec
mov
pusha
roll
fsubrs
inc
mov
cmpsl
jns
xchg
pop
mov
add
cmp
mov
add
jne
aaa
xor
cli
xchg
add
sbb
mov
or
lock
jne
das
out
rcrb
push
out
lods
push
jo
or
mov
pop
lods
rol
std
ljmp
jo
scas
imul
lret
iret
mov
movl
jnp
xchg
subb
xor
jae
sbb
jae
stc
push
subb
lods
in
sbb
xor
jno
imul
call
stos
add
sbb
pop
sbbb
icebp
out
lahf
lock
jno
or
jbe
in
push
std
test
mov
cltd
mov
repz
hlt
pop
imul
cwtl
jo
xchg
cwtl
inc
sub
jo
xor
insb
fldl
icebp
fiaddl
out
imul
shll
stos
insb
push
addb
lock
mov
xchg
fiadds
fnsave
mov
shrl
adc
jo
cmp
add
addr16
test
inc
cmc
loope
popa
pop
aad
add
sub
push
jge
shll
cmp
sbb
dec
movsl
mov
enter
push
mov
loope
xor
jo
sbb
rorl
movsl
std
sbb
sbb
dec
scas
cmpl
aad
xchg
push
shlb
xorb
popf
repz
nop
jmp
in
xchg
popa
lcall
push
jno
sub
or
sbb
lods
stos
push
push
push
imulb
mov
sub
mov
or
xchg
fistps
sub
dec
fwait
add
adc
xor
pop
fistpl
add
or
push
jg
sbb
ja
jae
loope
xorl
stc
add
add
mov
stos
in
loopne
cld
clc
hlt
fidivrs
sbb
or
add
stos
les
rolb
fsubl
add
stos
or
add
movsb
mov
mov
out
pop
sti
or
pop
pop
stos
mov
add
imul
insb
jns
mov
das
rcrl
scas
rcr
cmpsb
mov
add
stos
mov
dec
shll
mov
mov
shll
xchg
xchg
outsl
imul
dec
shll
jg
ja
shll
jae
dec
inc
inc
pop
xor
shll
push
push
das
sub
xor
shll
and
cmp
dec
shll
xor
or
add
out
shll
pop
adc
cmpb
out
incl
int
xor
iret
lret
mov
shll
shrl
pop
cmpsl
add
sahf
push
mov
lcall
lcall
xchg
outsl
imul
imul
imul
imul
cmpsl
imul
cmpsl
imul
imul
imul
div
out
lcall
add
imul
add
add
mov
add
add
stos
mov
adc
mov
mov
mov
inc
mov
push
jp
jbe
jb
aaa
int
pop
dec
add
inc
sbb
lahf
pusha
add
mov
xchg
sub
and
jg
data16
dec
imul
sbb
sbb
loopne
das
or
sbb
and
aas
shll
ud2
fisubl
add
sbb
pop
push
adc
cmpsb
fldl
pop
add
out
incl
xor
iret
imul
cmp
ret
lcall
sbb
pusha
xor
je
cmpsl
call
shll
xchg
movsb
add
imul
or
sbb
pop
jo
int
push
adc
adc
out
or
cmpsl
aaa
sbb
pop
sbb
dec
nop
pusha
subb
stos
movsl
mov
adc
fstpt
add
xor
shll
xor
sbb
loopne
mov
add
and
lcall
inc
pop
pop
push
push
xchg
sbb
push
pusha
sahf
add
addr16
pusha
dec
aas
orb
or
stos
imul
adc
adc
mov
add
push
push
in
sahf
cmpsb
mov
inc
stos
cld
push
clc
sbb
lock
and
ret
fsubrl
push
sarl
test
xor
mov
mov
mov
pushf
cli
pop
adc
xlat
push
xor
push
dec
xchg
outsb
xchg
add
mov
mov
add
xchg
pushf
pop
push
push
adc
jle
jl
test
pop
add
outsl
nop
jo
dec
dec
dec
xchg
mov
ss
mov
jo
mov
xorb
fwait
push
test
and
cwtl
push
sbb
insb
pop
dec
rcll
std
push
in
addb
shl
adc
loope
adc
jae
mov
les
pop
or
icebp
sub
pop
pop
shlb
pop
xor
mov
outsl
inc
dec
mov
and
adc
loopne
or
add
jg
add
or
ds
jae
mov
or
cmp
xor
out
or
rclb
test
jb
push
and
fsubl
push
add
sbb
fisttpl
mov
sti
dec
je
ds
add
push
mov
shll
and
adc
ret
ret
in
addb
icebp
add
mov
add
xchg
xchg
add
adc
or
or
adc
jb
sbb
mov
mov
je
call
and
mov
and
cmp
roll
adc
add
add
das
add
sbb
stc
xchg
push
or
xchg
test
or
incl
mov
push
xor
or
push
push
or
push
or
lods
sbb
fimull
fidivrl
bound
pop
ss
add
adcb
add
adc
rclb
test
jp
ja
add
push
and
dec
subb
xchg
mov
jbe
xchg
repz
adc
stos
lock
jae
xchg
adcl
movb
in
fcomps
pop
lret
nop
andl
ljmp
mov
or
aaa
xlat
mov
add
add
mov
sub
or
les
ret
sub
test
adc
push
mov
adc
nop
and
stc
or
sbb
jo
xor
cld
push
pop
lods
scas
mov
mov
pop
sbb
sub
adc
ljmp
aaa
pushw
mov
add
sub
adc
and
mov
inc
add
ja
adc
add
rolb
jb
jge
add
add
pop
lods
fdivr
adc
add
sbb
adc
adc
or
mov
dec
xchg
in
ret
ljmp
stc
push
icebp
sub
add
push
and
enter
add
insb
add
test
cmp
inc
imul
test
adc
clc
sbb
lods
stc
mov
int
ljmp
mov
fdivp
icebp
add
add
repnz
add
mov
sbb
dec
adc
xchg
adc
call
es
adc
pop
mov
es
push
pop
aam
cmp
cmp
add
fs
or
loop
ret
sub
and
sbb
pop
aam
pop
rcll
or
and
mov
clc
mov
mov
dec
adc
add
xor
pop
xor
es
rolb
fcmovnu
call
xor
test
ss
mov
aad
or
loop
adc
pop
flds
outsb
test
add
das
cmpb
xor
inc
xor
stc
pop
mov
clc
pop
and
sbb
stc
pop
xor
idiv
je
add
and
stos
and
push
mov
adc
xor
push
jbe
adc
and
fucomip
mov
repz
or
call
mov
xchg
sub
xlat
outsb
sbb
and
or
adc
inc
mov
imul
push
outsl
outsb
adc
mov
adc
mov
loopne
xor
and
es
add
push
and
lock
clc
xchg
and
dec
dec
pop
add
gs
fs
add
sbb
cmp
push
sti
mov
or
jmp
stc
int3
int3
xchg
inc
adc
aad
add
clc
push
mov
mov
xor
add
push
cli
jmp
lret
xchg
push
add
cmpsb
sbb
fbstp
lods
xchg
sahf
add
push
push
gs
jge
fisubrl
xor
jnp
dec
adc
test
inc
stc
push
add
push
lock
add
add
mov
and
push
add
pop
scas
in
cmpsb
or
sbb
push
outsb
cmpsb
scas
outsl
outsb
loopne
in
mov
jmp
les
aaa
add
in
adc
mov
es
inc
stc
stos
insb
sub
cmpsb
pushf
adc
xorb
add
push
add
pushf
adc
aaa
mov
xchg
adc
mov
cld
push
fwait
icebp
pop
add
js
shlb
xor
imul
xor
add
rcl
adcb
add
add
xchg
adcb
clc
push
pop
lcall
mov
or
shl
and
sbb
push
clc
test
jg
mov
add
sub
mov
adc
pop
push
or
jnp
push
test
stos
push
call
push
andl
mov
daa
sub
incl
sub
mov
xor
mov
cmpsb
stc
pop
or
push
sub
jg
push
xchg
nop
call
clc
fisttps
sbbb
dec
xor
or
xchg
or
inc
jp
scas
mov
xchg
int3
add
add
add
ret
adc
pop
outsb
fsubrs
out
mov
pop
scas
xchg
mov
dec
mov
jg
or
or
mov
outsl
push
inc
rorl
add
insl
inc
cwtl
rcl
sti
push
rclb
call
call
mov
or
pop
fs
addl
call
push
addl
or
rorl
add
push
es
fildll
sub
es
push
stc
loope
test
andl
loop
jnp
adc
and
gs
xchg
mov
inc
sbb
mov
js
sub
sahf
sbb
lret
sbbb
or
adc
sbb
inc
or
mov
push
stc
xchg
popa
or
mov
andl
or
or
sbb
xor
sbb
add
or
inc
push
mov
mov
fisttps
lcall
ret
punpcklbw
xor
push
mov
or
sbb
daa
loop
cmp
fcomip
add
push
sbb
inc
sbb
into
movsb
mov
daa
sbb
outsb
and
daa
cwtl
mov
insl
aas
or
es
popa
shll
or
subl
and
stos
fcmovnu
shlb
ret
xor
or
lds
out
in
sarb
ds
leave
outsb
sbb
fisttpl
sbb
add
push
inc
push
shll
inc
push
mov
xor
jbe
add
inc
and
arpl
mov
clc
add
jecxz
sub
rcrb
ret
pusha
test
fists
std
xlat
add
inc
lea
push
fisubl
inc
rcrb
inc
dec
mov
cltd
call
inc
sub
cmp
adc
push
cmp
cmc
adc
in
fisttpl
test
push
xchg
fsub
or
insb
adc
in
adc
inc
add
icebp
adc
imul
movmskps
xor
pop
sbbl
fnstenv
push
inc
lcall
sbb
outsl
or
pusha
adc
arpl
dec
cmp
test
mov
pop
sarl
test
xchg
test
jno
scas
push
adc
inc
sub
push
or
iret
xor
cs
xchg
rcll
loopne
popa
or
push
test
sarb
loopne
popa
add
jo
out
ficoml
adc
add
add
mov
aas
push
mov
mov
cwtl
imul
push
mov
mov
sbb
mov
adc
push
push
inc
xlat
lcall
mov
xor
lret
call
das
imul
popa
inc
inc
mov
or
cmp
cmp
pop
or
jp
or
add
add
and
add
sub
sub
test
lods
aad
mov
xor
mov
sbb
or
pop
adc
fdivrl
adc
int
es
gs
jp
jne
cmp
lahf
jecxz
rolb
in
mov
xchg
sbb
dec
pop
mov
mov
das
xor
jo
jmp
jmp
icebp
popf
test
mov
mov
mov
add
pop
xchg
adc
ljmp
int
inc
or
inc
imul
push
aaa
jecxz
xor
ret
fldt
lods
pop
incl
es
shll
icebp
and
adc
sub
loop
push
jnp
push
sbb
pop
mov
add
inc
divl
fbld
rcll
movsl
sub
sbb
dec
xchg
std
xchg
daa
sbb
cs
cmc
mov
pop
outsl
inc
xor
setbe
cmp
lock
aaa
add
std
jmp
push
out
adc
xchg
xor
pop
push
into
icebp
negl
cld
aaa
movq
jo
cmp
aam
andl
popa
bound
test
adc
or
lds
or
adc
or
or
push
pop
inc
pop
xor
or
mov
or
test
jecxz
lock
jge
inc
inc
pop
or
or
and
test
pop
punpcklwd
dec
or
or
dec
or
lret
ret
sub
adc
or
lock
add
sbb
pop
pop
fucomip
sub
mov
stos
stos
inc
xchg
inc
pop
ret
push
push
or
or
icebp
notb
inc
pop
xor
test
shlb
sub
mov
popa
xchg
gs
and
test
loopne
xchg
adc
push
ret
pop
psrlq
pusha
gs
test
cvttps2pi
pusha
cmpsb
mov
pop
shrl
or
popa
rorl
push
std
jo
adc
dec
xor
mov
xor
js
push
jle
inc
add
mov
jge
pop
jae
add
ljmp
gs
arpl
jg
inc
jns
jo
mov
mov
popa
adc
lcall
mov
mov
inc
xor
inc
arpl
cwtl
add
insb
outsl
and
push
imul
outsl
mov
jl
add
pop
rolb
mov
dec
adc
bound
fwait
std
aas
test
adc
jb
jge
add
sahf
xor
push
js
scas
inc
xchg
mov
fstpt
push
jle
push
jle
push
gs
fstpt
xchg
addb
popa
loope
pop
dec
jo
jo
jae
and
mov
pop
add
ficoml
pop
es
push
jge
xor
imulb
xchg
adc
adc
je
add
jb
test
mov
fcmovnu
xor
orb
movb
bound
subb
or
xchg
mov
inc
fdivrs
mov
test
cwtl
xchg
push
mov
sbbb
adc
xchg
xchg
cmpsb
mov
inc
push
jge
je
pushf
jge
mov
and
and
decl
add
add
push
inc
push
or
arpl
add
push
push
push
push
adc
dec
xor
push
addr16
repz
or
fidivrl
je
xor
adc
push
xchg
push
mov
addr16
mov
outsb
loop
icebp
add
pop
incl
jbe
add
or
in
xor
adc
xchg
or
mov
push
xchg
je
push
paddd
nop
pop
jae
inc
adc
add
xorl
cmp
jbe
ret
adc
pop
mov
pop
push
lods
adcl
mov
dec
cmp
push
pavgb
ss
arpl
mov
fadds
inc
jge
inc
xchg
lock
dec
adc
out
aas
add
pop
je
add
icebp
pusha
addb
xor
jp
add
mov
out
push
push
or
bnd
inc
pop
jb
add
push
xor
xor
and
push
mov
add
xor
jle
adc
mov
add
add
adc
inc
ds
clc
pop
shlb
push
adc
and
jno
mov
pop
subb
mov
adc
xchg
into
scas
add
jns
xlat
pop
mov
jbe
inc
jg
bound
jle
dec
or
mov
jle
fs
cld
pop
jo
xorb
orl
mov
xor
and
andb
lock
mov
pop
or
fs
or
push
and
jle
orw
or
loope
push
jb
popa
push
call
jle
jl
pop
nop
add
pop
pusha
negb
or
mov
fbstp
jl
or
cmpb
sbbb
adcl
cld
pop
sub
fs
jge
mov
test
inc
jge
jl
mov
std
xchg
cmpb
sub
jbe
jo
jg
xorb
jle
arpl
sbb
cli
sbb
xchg
push
sbb
or
inc
add
push
sbbl
mov
je
adc
fwait
rolb
inc
or
adc
inc
mov
mov
inc
call
lret
rcll
add
inc
pop
cmp
push
subb
and
cmp
imul
mov
movsl
push
adc
inc
inc
xor
push
adc
add
movsb
or
bound
pushl
loop
push
inc
add
addps
pop
inc
inc
decl
jle
fidivrl
inc
sub
mov
lods
inc
or
adc
mov
mov
push
xchg
je
fdivs
out
xor
push
dec
inc
push
inc
gs
test
mov
ds
push
aas
push
adc
aad
pop
jge
jo
sarb
lods
jae
cmc
jbe
jge,pt
jp
aam
inc
add
daa
sbb
or
cs
push
pusha
cmp
mov
loope
adc
inc
push
xlat
adc
shll
jns
inc
orb
rcrb
sbb
add
xchg
jle
cs
sub
dec
enter
sub
out
ja
add
adc
pusha
cmpsb
faddl
and
inc
and
jp
std
and
fs
lret
cs
sarb
cmpsb
fldenv
mov
cmp
je
js
jg
outsb
xor
mov
dec
ret
loopne
aam
push
in
xlat
popa
add
mov
dec
and
pushf
add
adc
shr
mov
mov
pop
mov
mov
and
sbb
add
and
xorb
mov
dec
inc
dec
add
in
ljmp
bound
jecxz
pop
sbb
ja
and
pop
lcall
sbb
jg
outsb
loope
add
addl
add
mov
adc
sti
scas
mov
push
push
shrb
jb
dec
shlb
xor
and
rolb
cwtl
pop
movsl
push
cli
jecxz
movsl
add
loopne
rolb
dec
inc
mov
insb
or
aaa
insb
mov
push
lea
popa
push
cltd
jg
pushf
push
or
rorb
jo
insb
call
adcb
loopne
push
dec
jecxz
stos
inc
push
and
adc
add
adc
jbe
and
mov
pop
and
jo
inc
lods
ror
jb
mov
aad
sub
fildl
inc
or
pop
fiaddl
push
pop
pusha
adc
xorl
cmp
adc
jle
add
adcb
xor
adc
popf
inc
inc
cmp
rcrb
jae
out
pop
adc
pop
push
mov
loopne
pop
mov
mov
ja
in
sbb
push
bnd
mov
adc
jle
inc
adc
add
les
xor
add
jmp
adc
adc
pop
stos
push
dec
cmpsb
arpl
and
inc
pop
and
out
sahf
push
add
mov
mov
add
andl
cmpsb
shlb
cli
jp
fs
addb
adc
insb
push
add
or
std
pop
jo
mov
fwait
loope
call
add
call
push
dec
fidivrs
bound
add
add
add
call
decl
mov
cmp
shll
adc
and
pop
sub
loop
mov
sub
jb
cmp
jecxz
and
es
push
add
add
xor
mov
sarl
insb
sub
adc
lods
mov
push
push
cwtl
stc
mov
mov
jbe
jb
adc
mov
rclb
lea
or
mov
xor
pusha
pop
sti
pop
lock
xorb
sub
jb
arpl
xchg
je
sbb
push
and
xor
push
or
frstor
or
pusha
andb
add
xchg
mov
dec
pop
mov
push
or
addl
and
adc
cmpl
mulb
jne
xor
out
sub
aaa
fldl
inc
add
roll
push
or
cltd
cmpsb
xor
shll
jbe
push
inc
stos
jne
push
mov
push
mov
add
mov
test
popa
sbb
or
xor
push
arpl
and
rsm
push
rcrl
mov
adc
fbld
popa
or
and
pop
jo
xor
jg
clc
cmp
push
pop
mov
adc
mov
push
add
pusha
mov
outsl
stos
mov
add
shrb
jne
loope
adc
test
adc
jge
jecxz
push
inc
adc
add
ljmp
jb
mov
add
pop
add
push
mov
in
xchg
add
and
pop
mov
adc
pop
std
adc
and
sarl
or
xor
inc
push
js
and
push
jg
popa
orl
mov
popa
sbb
pop
fisttpl
mov
pop
push
add
fiadds
adcb
ljmp
adc
cmp
cmp
xchg
test
mov
push
adcb
ss
add
xchg
ss
ss
inc
adc
push
ljmp
inc
inc
sub
push
jb
rclb
xlat
sub
cmp
sar
sbb
add
nop
push
bound
mov
andb
jge
das
rcrb
and
loopne
bound
fs
incl
sbb
setae
mov
push
adc
or
mov
push
or
xor
pop
cli
decl
or
pop
jae
add
add
mov
sub
sbb
and
and
or
jne
addr16
mov
push
cmp
cld
ja
push
adc
mov
xchg
mov
ljmp
js
jb
inc
push
jp
push
push
pop
ret
int3
rcrb
and
fisttpll
hlt
stos
adcb
jle
lea
popf
inc
or
mov
cmp
lret
mov
repnz
pop
jp
adcb
xchg
data16
dec
jo
pop
and
aam
test
movsb
push
sub
scas
add
jb
insb
add
bound
repz
ficomps
inc
jecxz
inc
xlat
push
fs
adc
lahf
inc
cmc
jg
stos
jle
and
adc
mov
adc
jns
cmp
outsb
mov
movsb
xor
fidivl
test
cmp
cmpsb
mov
inc
add
push
call
mov
es
add
fstps
add
pop
je
enter
sarl
jge
jbe
js
xchg
or
sub
adc
xchg
lock
add
inc
jge
jg
adc
sbb
add
ret
push
rol
sub
aam
aam
or
cli
fldt
jo
jle
jbe
cld
ficoms
ds
xor
movsb
int3
inc
jns
gs
jne
push
popa
and
mov
dec
fs
pushl
cltd
mov
and
das
inc
jle,pt
and
cli
and
nop
or
pop
mov
sbb
and
jne
add
dec
repnz
into
mov
sbb
fidivrl
call
shrl
ja
and
inc
and
sub
inc
addl
dec
je
jle
jp
xor
addr16
jbe
inc
add
push
cmp
jnp
in
adc
or
push
cmp
push
xchg
sahf
adc
inc
pop
jne,pn
outsb
jae
inc
imul
inc
sbb
insl
dec
cld
sub
cmpsb
add
and
clc
mov
push
adc
push
and
xor
jb
push
mov
mov
mov
je
adc
push
xor
mov
sbb
ljmp
add
xor
push
mov
arpl
mov
adc
mov
pop
inc
jp
inc
pop
xor
stos
fists
add
inc
jg
add
or
or
jno
jo
test
mov
sub
js
ja
jle
push
push
daa
push
mov
sbb
xor
int3
mov
imul
push
movsb
jp
jge
loope
loopne
xor
dec
and
or
and
dec
or
sub
arpl
add
pusha
fsubrl
jbe
mov
xchg
shll
xchg
andb
jg
incb
pop
subb
and
push
test
shlb
pop
push
inc
roll
lods
jle
jle
add
daa
pushf
pop
jl
movb
loope
int3
or
arpl
addr16
xor
jge
and
pop
fidivl
addb
or
push
pop
adc
sldt
adc
test
add
jo
mov
insl
sbbb
push
or
test
push
addl
sbbl
inc
cwtl
enter
aam
int3
outsb
dec
and
icebp
cbtw
js
ret
dec
add
icebp
movb
xor
xchg
les
and
jg
test
xor
jb
nop
mov
add
fcoml
mov
testl
fs
rolb
push
push
inc
int3
inc
jo
int3
mov
sub
mov
jae
jge
add
adc
xor
leave
lret
sub
outsb
fbstp
sbb
repnz
push
out
jg
ljmp
test
arpl
ds
fistpll
inc
mov
notb
rorb
adc
lock
loope
sub
pop
push
mov
adc
stos
mov
call
add
sar
sbb
ja
or
xchg
push
add
aad
add
or
cmpsb
clc
jo
jne
movsb
jb
movzbl
dec
push
ret
idiv
or
add
push
inc
add
xor
xor
pop
enter
js,pn
sti
add
out
add
arpl
add
and
pop
push
dec
aas
rolb
add
or
jns
sbb
or
adc
je
add
das
lds
xor
cld
and
js
outsl
mov
adc
jo
cmp
clc
jg
push
ss
push
rolb
dec
add
add
inc
shll
adc
icebp
incl
push
movsb
add
inc
adc
or
stos
rcrl
ret
add
xor
push
cld
loop
dec
add
icebp
bound
mov
or
add
aad
stos
inc
aaa
lret
sbbb
mov
sti
push
test
dec
inc
inc
test
dec
push
pop
rcr
insb
enter
pusha
push
orb
outsb
dec
mov
dec
jle
and
dec
out
add
call
mov
add
xor
popa
je
xchg
pop
xlat
jge
cmp
pusha
push
mov
adc
jo
xchg
push
inc
push
pop
and
and
loope
inc
jle
or
int3
add
ret
mov
adc
adc
xchg
inc
push
sbbb
jno
pop
push
inc
ljmp
mov
data16
inc
xchg
movsl
incl
and
call
jp
or
ds
mov
fcompl
mov
cmpsl
add
out
jg
jb
or
arpl
andb
jmp
or
loopne
xchg
add
and
push
jne
fidivrl
cli
idivb
stos
jb
push
sbb
pop
add
rcr
pop
outsl
call
push
inc
test
movsb
inc
sahf
mov
pop
xchg
adc
and
js
jle
loopne
mov
push
mov
add
add
or
aaa
sbb
je
adc
cs
ja
adc
jl
jl
popa
loop
jg
lcall
bound
clc
bound
jl
xchg
in
mov
dec
pop
test
andb
std
pop
shrl
loope
shll
add
jb
add
js
dec
data16
jle
scas
ret
jae
dec
jecxz
data16
adc
and
sbb
lcall
pusha
je
xchg
mov
adc
adc
inc
push
mov
sahf
rcll
mov
bound
jns
sbb
icebp
dec
mov
and
and
xchg
mov
loopne
call
add
add
push
adc
dec
repz
arpl
sub
sbb
pop
push
call
and
mov
notl
mov
movsl
add
adc
or
stos
inc
js
cmpsb
adc
add
add
or
adc
jo
or
subl
adc
add
adc
add
and
mov
lea
push
sub
in
mov
xchg
scas
or
sbb
and
fisttps
rol
pop
push
xor
movsb
popa
cmp
add
aam
xor
dec
in
xor
or
jle
ljmp
pusha
xchg
test
adc
add
mov
mov
push
add
sti
das
xchg
adc
pop
push
add
push
jle
icebp
popf
add
add
fcoms
cmpb
sub
ljmp
lods
int3
lahf
iret
add
mov
cli
outsl
mov
addr16
cmp
add
in
incl
push
mov
repnz
jmp
cli
mov
loop
cli
lock
add
ficoms
lcall
out
mov
mov
repnz
add
push
sbb
add
pop
pop
dec
push
cmc
decl
mov
sub
and
mov
mov
dec
sub
dec
sub
lcall
loope
mov
inc
mov
es
shr
dec
lcall
pop
jg
lret
test
loop
scas
mov
dec
int3
xchg
jg
pop
fmuls
inc
adc
xchg
sar
aad
rcll
faddl
jl
cs
mov
sbb
add
sahf
sub
dec
jne
into
pop
pushf
xchg
sbb
in
rol
cmp
cmpsb
push
pop
cld
shl
rcrl
jle
or
aam
pushl
mov
js
mov
ljmp
sub
add
hlt
les
in
in
fbstp
adc
add
out
cli
fnstsw
les
lcall
neg
xor
aad
sub
scas
mov
add
jle
hlt
test
push
mov
xor
stos
cli
and
imul
push
pushl
dec
add
outsl
mov
dec
xor
ds
pop
scas
addl
add
push
dec
ljmp
ret
cs
sub
xor
mov
insl
add
int3
inc
out
mov
push
add
xor
fs
add
or
scas
clc
jmp
or
lods
push
and
mov
jg
sub
push
xchg
int
dec
sbb
mov
dec
xchg
mov
mov
push
push
cmpsl
mov
inc
sub
pusha
or
jle
lret
pop
orl
dec
mov
mov
movsb
add
repz
adc
dec
cmpsb
add
cmp
and
out
cli
jp
xor
dec
adc
add
xlat
jg
sbb
adc
pop
lret
sahf
add
fcomip
insb
adc
cmp
mov
ret
fsts
sbb
sub
xchg
mov
add
mov
mov
push
adc
add
sub
cmpsb
imul
xchg
xor
cmpb
dec
rorl
jmp
jge
sub
imul
mov
jp
mov
add
insb
ss
pop
lds
or
sti
add
mov
fdivrp
fcmove
jo
sub
popf
lods
insb
in
xlat
insb
lcall
dec
xchg
add
mov
fiaddl
dec
xchg
and
push
sub
in
pushl
push
add
xor
sub
jl
or
mov
push
xchg
fiaddl
sub
jle
pushl
pop
or
movups
dec
or
mov
or
pop
shll
aas
adc
push
xchg
cmovo
xchg
mov
add
insl
add
scas
insl
shll
and
xor
or
add
jmp
stc
add
shll
movsl
mov
mov
into
mov
dec
cmpl
addb
dec
sbbl
cltd
xchg
sbb
sbb
push
int3
or
jl
test
push
add
es
cmp
sub
sub
inc
dec
sub
out
out
sub
sub
lea
mov
mov
push
sti
lods
sub
sub
es
in
add
sbb
das
and
das
sub
das
inc
das
dec
jne
jge
gs
insl
xchg
das
stc
fwait
mov
das
lea
das
lods
aad
lds
int
cli
fwait
mov
in
in
adc
cs
and
mov
push
cs
cs
cs
jge
gs
cs
jg
popf
test
cs
mov
aad
lds
adc
push
cs
cs
in
add
adc
and
xchg
inc
mov
test
and
and
outsl
repnz
pop
and
dec
jne
jge
and
out
xchg
and
mov
mov
aad
frstor
lds
int
shl
outsl
cmc
and
and
and
adc
lods
and
and
pop
and
and
int
cld
jne
jge
and
xchg
and
mov
mov
cld
int
and
and
and
and
cmc
and
and
and
adc
int
and
xor
and
push
and
inc
and
cld
int
cld
jne
jge
and
xchg
and
mov
mov
cld
int
and
and
and
and
cmc
and
and
and
adc
int
and
xor
and
push
and
inc
and
sub
insb
or
add
cmpsb
jo
iret
add
and
and
and
and
cmc
and
and
and
adc
and
flds
jg
insb
or
adc
jge
gs
aaa
xchg
and
lea
and
rcr
adc
add
fwait
ret
add
and
cld
int
mov
and
push
and
and
and
jne
jge
mov
and
add
icebp
adc
and
and
and
out
and
and
and
and
adc
daa
daa
xor
daa
ret
pusha
sti
add
or
aad
pusha
lcall
push
lcall
cmp
push
pusha
je
jg
cmp
in
shlb
add
xor
xor
loopne
shrl
add
add
dec
rcll
sub
insb
or
repz
adc
incl
shrb
sub
sub
inc
das
jno
mov
pop
ljmp
xchg
add
inc
xlat
loopne
dec
mov
cli
loopne
adc
push
and
push
and
insb
adc
and
cmpsb
jo
sub
add
ret
or
and
and
imul
sub
fwait
ret
sar
ljmp
inc
ja
test
loop
and
and
mov
add
and
and
test
shlb
and
cli
and
and
and
stos
dec
loope
daa
add
add
mov
fwait
and
daa
fisubl
shll
adc
daa
into
daa
cmc
daa
clc
jmp
out
ficoml
daa
in
daa
ss
push
or
scas
push
cmpsb
sub
adc
sub
sub
pop
sub
jae
jnp
sub
sub
sub
pop
call
cmpsb
jo
sbb
jno
jp
insl
sub
shlb
sub
sub
xor
mov
test
sub
mov
mov
and
mov
jmp
and
data16
sub
sub
and
sub
mov
mov
jns
ljmp
fwait
ret
add
hlt
das
subl
jo
xor
pusha
pop
add
and
mov
xlat
cmpsb
sub
dec
add
idiv
pop
fwait
sub
daa
mov
sbb
pop
lcall
sub
sub
aad
lock
add
add
outsl
pop
fwait
xor
mov
imulb
sbb
das
sub
addb
loope
pop
sub
sub
js
or
cmp
lock
pop
cmp
dec
xor
sub
dec
das
and
das
scas
loopne
fidivs
add
das
cld
das
loop
sbb
lcall
loopne
scas
push
fsubs
stos
and
mov
sahf
and
and
ror
and
cwtl
push
out
out
push
mov
add
es
loopne
jp
mov
sub
or
outsb
sub
imulb
subl
push
icebp
add
cmp
sub
sub
xchg
add
loope
fistpll
adc
jmp
sub
mov
and
loop
loop
mov
and
daa
inc
and
loope
sbb
push
ret
sub
sub
sub
das
cli
fwait
or
sub
jg
lea
sub
icebp
pusha
sub
loopne
pop
push
pop
xor
cs
pop
cs
jb,pn
push
mov
xchg
add
xchg
and
outsl
jmp
mov
fsubs
leave
and
adc
loope
and
loopne
xchg
out
out
adc
inc
insb
std
dec
jmp
scas
pusha
cs
adc
das
and
inc
outsl
and
out
adc
and
and
and
add
or
clc
lcall
es
es
adc
pop
sub
mov
sub
add
sbb
data16
xor
and
leave
add
sub
sub
sub
jg
stc
sub
sub
sub
adc
pop
gs
ss
jg
sbb
out
xor
pop
shlb
addb
and
mov
and
and
sti
rclb
stos
add
or
mov
dec
inc
clc
adc
test
sti
sbb
and
stos
hlt
outsl
cli
fwait
stc
and
daa
or
sub
pop
mov
jl
jmp
adc
sbb
pop
es
movups
es
sub
push
inc
es
es
clc
decl
andl
mov
es
mov
aaa
jg
outsl
mov
inc
sub
cli
xor
sub
aas
sub
ljmp
or
popf
adc
shrb
sub
pop
and
jl
xor
mov
popa
or
and
jge
scas
mov
and
sar
add
insl
and
pop
and
and
inc
xlat
jmp
and
and
push
mov
daa
ds
mov
xchg
daa
mov
add
iret
daa
daa
sbb
or
xor
push
sub
jg
outsl
es
mov
out
es
sub
cs
adc
sub
add
fbld
mov
scas
sub
sub
adc
sub
outsl
fadds
sub
xchg
sub
push
das
cli
xchg
sub
pop
test
pushf
icebp
sbb
enter
aad
sbb
and
mov
mov
pop
and
and
adc
int
mov
and
jb
arpl
xchg
test
enter
xor
pop
mov
mov
ljmp
inc
loope
mov
or
mov
and
add
and
sub
cmp
sub
or
cmp
les
xchg
jo
es
loopne
push
sarb
fisubrl
cld
sub
cmp
jecxz
sahf
push
lods
clc
inc
aaa
cld
sub
or
mov
add
lret
movsb
movsl
nop
pusha
jo
or
fcomip
dec
dec
and
xchg
jbe
jp
dec
bound
dec
push
outsb
and
xor
ljmp
lods
dec
sbb
and
and
mov
and
nop
dec
mov
adcb
and
and
and
pusha
and
push
adc
and
and
std
pushl
and
and
and
mov
and
and
and
lock
out
adc
push
daa
sbb
add
icebp
lcall
push
dec
or
daa
or
xor
ss
cld
in
ja
sub
daa
pop
adc
inc
daa
inc
daa
dec
fdivr
int
dec
daa
jb
jbe
jp
daa
bound
data16
push
daa
ljmp
push
push
sbb
push
add
out
adc
or
push
xor
cmp
ds
out
fsubs
es
mov
pop
es
jmp
outsl
incb
dec
es
es
es
jle
bound
push
outsb
es
adc
mov
es
andb
and
mov
mov
mov
push
add
decb
jl
mov
mov
hlt
cs
test
add
js
repnz
loope
jne
cmp
and
adc
mov
mov
loopne
pop
outsl
incl
mov
and
pushf
and
and
cmpsb
lcall
and
lahf
cmp
and
add
pop
in
push
daa
sbb
cltd
decb
mov
mov
mov
stos
push
sub
xchg
enter
pop
arpl
in
xor
adc
pop
sub
sub
sub
lods
clc
xchg
xchg
sub
cmpsb
sub
fisttps
lock
jle
xchg
sub
ret
sub
das
cmp
xor
ljmp
icebp
nop
insl
insl
adc
mov
rorb
or
adc
xchg
and
test
pop
mov
mov
jmp
pop
and
daa
and
jl
outsl
lcall
and
and
mov
and
and
inc
testl
pop
and
and
inc
nop
or
rcrb
out
jg
pop
daa
add
cli
daa
jecxz
shrb
sarb
je
dec
nop
movsl
inc
lods
lock
sub
das
xor
mov
sub
je
jp
bound
imul
sub
mov
sub
sti
sub
sub
sub
pop
sub
sub
sub
inc
sub
incb
sub
imul
and
ljmp
push
das
clc
ljmp
jo
push
sub
sub
add
jmp
das
sahf
das
dec
das
lcall
nop
das
xchg
mov
jmp
jae
or
and
nop
jp
and
test
mov
sub
and
adc
inc
rclb
jo
jle
push
aas
lock
js
xchg
and
and
aaa
shl
push
and
subb
sbb
imul
jl
pusha
xchg
xchg
test
sbb
pushl
rclb
je
outsb
sub
xlat
pop
add
sub
and
sub
mov
addb
jb
xor
xchg
shrb
shrb
lock
sub
sub
cmp
in
pushf
sub
adc
sub
sub
das
dec
das
inc
cs
subl
cs
lock
incl
sub
push
nop
and
and
xor
add
stos
xor
inc
and
lcallw
nop
add
repnz
and
and
fcoms
call
inc
inc
and
popa
and
and
andl
and
and
jg
pop
xor
arpl
xchg
push
repz
ss
js
pushf
mov
and
push
mov
add
out
imul
pop
jmp
sbb
add
xor
xlat
call
add
sub
sub
popa
imul
jno
mov
ljmp
insb
imul
adcb
and
and
dec
add
add
decl
incb
lock
iret
mov
sub
cld
sub
xchg
mov
sub
adc
movsl
sub
mov
sub
mov
sub
nop
sbb
jo
or
das
fwait
adc
adcb
lret
jo
gs
and
decb
lock
cli
and
add
and
pop
adc
cmp
or
and
xchg
cmpb
sub
add
push
add
sub
and
icebp
push
xchg
adc
loopne
push
cmp
js
sbb
mull
adc
sub
rcrb
and
lcall
sbb
mov
and
dec
and
pusha
nop
jle
repnz
and
adc
adc
fisubl
iret
and
inc
les
pusha
mov
jo
add
mov
xor
or
aaa
sub
adc
hlt
mov
mov
jmp
or
cli
fists
jge
lahf
sub
and
sub
decl
add
adc
sub
sub
adc
or
sub
sub
rclb
addr16
cs
mov
mov
shll
cmp
es
jbe
data16
cwtl
das
mov
fldt
sti
jo
add
jo
mov
pop
sub
inc
cs
or
clc
jg
push
pushf
pop
and
movsb
sub
push
and
insb
jo
add
pop
cld
fcomps
and
test
movsb
adc
jmp
sbb
and
rol
or
fcmovnu
cmp
add
outsb
mov
frstor
ret
xor
ja
mov
mov
and
jns
insb
and
nop
pop
cmpsl
push
mov
sbb
cli
outsl
ja
add
cld
cwtl
mov
jle
shlb
shll
es
fistpl
sub
adc
sub
sub
sub
add
dec
fdivr
sub
cltd
sub
add
cmp
and
sub
cs
sub
sub
sub
faddl
lock
push
sub
sub
mov
cwtl
mov
mov
sub
xor
aas
faddl
xor
nop
sub
hlt
pop
adc
sub
fwait
inc
sub
sub
adc
repz
sub
mov
sub
adc
das
jae
cmp
in
pop
sbb
pop
mov
in
imulb
dec
cs
adc
and
rorl
add
mov
dec
andb
xchg
and
sbb
dec
ret
icebp
and
addb
jo
adc
and
je
jbe
pop
mov
bound
xor
cmp
and
sub
int
push
jnp
arpl
and
mov
rcr
cld
and
and
and
out
ljmp
and
jg
imul
mov
cmpsl
and
enter
shlb
ljmp
aaa
jg
lret
adc
jnp
popa
and
and
hlt
scas
inc
shll
cmp
mov
mov
fcoml
addr16
mov
adc
out
ljmp
lcall
das
adc
dec
jbe
cld
lods
loop
jb
daa
mov
daa
shlb
icebp
daa
hlt
les
aad
pusha
pop
es
xchg
es
test
pop
icebp
outsl
faddl
lds
int
push
sub
or
jmp
mov
adc
subl
sbb
or
leave
adc
sub
sub
sub
and
test
sub
cwtl
add
ret
sub
lds
push
or
mov
les
or
xor
push
sub
jg
aaa
jg
sub
sub
sub
sub
sub
sub
sbb
push
das
cmp
and
je
aaa
xchg
das
subb
das
xor
iret
push
in
rcll
xchg
pop
call
fildll
and
adc
inc
adc
cli
and
int3
jo
js
jg
or
and
adc
and
and
and
lods
push
pop
lea
mov
mov
stos
ss
sbb
icebp
adc
and
hlt
call
fisttpl
mov
dec
ds
inc
pop
mov
and
in
adc
mov
add
sbb
in
and
pop
call
sub
sub
sub
xor
sub
dec
inc
and
js
jae
xor
and
adc
push
lock
lods
clc
fsubl
ret
jmp
jmp
sbb
and
and
jg
cwtl
xchg
sbb
sbb
dec
int3
pop
and
lret
pop
sub
or
out
jnp
jmp
sub
sub
inc
add
push
into
cs
lds
ss
pop
and
and
push
mov
and
jle
loopne
and
in
and
bound
and
and
adc
fsubl
and
push
out
and
int3
and
and
and
cld
ds
ljmp
in
shlb
js
sarb
and
daa
or
inc
jp
in
lods
cmp
daa
and
sub
sub
push
daa
push
daa
pop
daa
sbbb
inc
daa
dec
aad
decb
js
jo
je
jg
daa
pusha
cmp
daa
insb
daa
nop
loopne
jg
dec
xchg
daa
pushf
inc
adc
mov
add
mov
xchg
mov
sub
sbb
xchg
aaa
mov
mov
mov
decb
test
faddl
stc
xor
sub
in
daa
or
pop
sti
sub
adc
sub
sub
or
ret
sub
xchg
sub
popf
sub
mov
sub
psubd
adc
sub
sub
nop
push
sub
ret
repz
sub
jns
pusha
sub
das
push
or
push
das
inc
in
xchg
in
outsb
das
jnp
loope
xchg
mov
fmuls
mov
int
test
aad
xor
mov
cmp
sbb
and
in
push
and
push
xchg
jle
mov
and
cmpsb
test
xchg
or
and
loopne
shrb
pop
pusha
xchg
cmc
fsubrl
out
sub
sub
or
inc
incl
sub
and
cmp
aas
sub
sub
cmp
add
add
or
mov
fildll
out
aaa
aam
sub
adc
or
mov
mov
pushl
sbb
sub
ja
sbb
into
sub
sbb
dec
mov
sub
sub
sub
mov
das
outsb
das
mov
aam
sbb
fidivrs
into
cs
in
loope
pusha
sbb
int
jo
cmc
and
and
fwait
mov
fsubl
xchg
lahf
and
and
and
cld
push
inc
and
mov
pusha
cmp
xor
std
jg
sub
popf
sub
and
loopne
pop
sub
sub
or
ds
sub
pusha
rcpps
pop
or
cmpb
pop
loope
stc
loopne
or
mov
call
or
call
and
mov
stc
shlb
fsubl
and
add
outsl
aaa
cwtl
mov
push
bound
add
mov
pop
pusha
adc
xchg
test
mov
push
inc
sub
sub
jbe
adc
sub
pushl
sub
sub
inc
sub
xchg
sub
sub
sub
movsl
shrb
jge
sub
sub
inc
cwtl
or
cmp
idivb
jbe
sub
sub
mov
sub
insb
decl
lods
sub
pop
dec
sub
jg
bound
sub
sub
sub
sub
decb
std
adc
jecxz
jmp
das
inc
das
inc
das
jns
negb
lods
das
adc
or
sub
or
mov
add
bound
shll
jmp
call
and
and
add
aaa
loopne
ljmp
jbe
daa
inc
ret
clc
mov
cld
pop
icebp
daa
aaa
es
sub
pusha
iret
stos
incl
sub
sub
sub
and
sub
pusha
cmp
call
pop
cs
adc
mov
xor
xor
repnz
and
mov
or
push
xchg
mov
mulb
repz
adc
imul
hlt
add
inc
and
mov
and
mov
push
and
and
stos
and
adc
cld
sub
add
and
xor
or
add
and
mov
sbb
jb
stos
std
daa
mov
stos
daa
xlat
adc
dec
loopne
add
notb
xchg
aad
hlt
adc
sub
sub
push
sub
push
mov
add
cmp
jbe
mov
add
and
cli
outsl
nop
push
or
pop
and
xchg
and
fwait
loope
jmp
shlb
and
and
pusha
and
and
inc
xor
push
call
es
sub
or
add
clc
pusha
jmp
ds
sub
sub
loop
cmpb
cs
lcall
dec
cmp
or
fwait
cmp
sub
push
cmpsl
push
cli
jmp
inc
and
dec
add
mov
addr16
and
mov
and
and
mov
and
push
lock
mov
repnz
clc
and
jl
and
and
jg
add
and
xchg
and
adc
and
and
cmp
roll
xor
xchg
sub
and
scas
shlb
pop
es
adc
inc
and
bound
jp
popa
and
xlat
jg
jmp
outsb
inc
and
xor
mov
mov
mov
mov
orb
insb
add
mov
daa
mov
push
sbb
jnp
and
adc
pop
and
xor
and
xchg
fldl
je
push
into
cmp
aas
push
push
xor
pop
add
loope
add
inc
and
dec
push
and
jle
lcall
lods
jle
cmp
adc
and
mov
and
enter
sti
push
mov
adc
in
and
sub
jg
and
repz
lahf
daa
frstor
add
lods
dec
ja
jne
jg
xchg
adc
es
sub
add
sub
sub
sub
jecxz
xchg
enter
mov
cvtps2pi
sub
pop
mov
sub
inc
jo
cltd
das
mov
das
icebp
es
or
cmp
clc
mov
lods
mov
or
xchg
ds
stos
mov
cmp
outsl
jnp
jle
shlb
jo
adc
inc
daa
xchg
dec
sub
ds
mov
cmp
mov
sub
inc
pop
sub
clc
inc
loop
pop
movsb
jge
add
andl
addl
movsl
divb
and
and
jmp
pop
mov
std
pop
xchg
andb
daa
shlb
testl
push
add
scas
fisubs
aam
push
cs
inc
clc
inc
sub
xor
out
or
sti
pop
adc
je
xchg
lock
aas
sub
in
sub
sub
icebp
sub
sub
andl
mov
sbb
xor
xor
and
and
cmc
addb
dec
push
or
adc
aam
xor
jl
lock
cmp
pop
sub
jnp
subb
sarb
imul
nop
sub
mov
mov
rclb
mov
divl
cmp
call
test
mov
push
sub
dec
sub
sub
jg
fisubrs
rclb
sub
jo
inc
sub
fcomip
ja
mov
sub
sbb
add
adc
stc
mov
sub
sub
dec
int3
pushl
movsl
shrl
addb
push
sub
insb
and
sub
cli
mov
sub
jle
movsb
inc
das
push
fistpl
repnz
adc
pop
fidivs
loopne
xchg
xchg
cs
pushf
addl
mov
es
or
and
mov
jns
aaa
ret
scas
and
aam
and
mov
outsb
and
cmc
mov
dec
and
or
mov
fisubrs
sar
in
fistps
xchg
and
adc
shl
sti
das
jmp
add
xchg
sarb
add
or
add
lock
sub
outsl
adc
pop
mov
jo
jl
addr16
mov
loopne
cs
cs
and
mov
mov
pop
aam
push
shlb
insb
xchg
pop
and
fidivl
and
or
push
inc
and
or
fbstp
jge
popa
and
cmpsl
popf
mov
mov
add
lods
and
roll
add
jecxz
imul
mov
mov
xchg
sar
outsl
jbe
jo
aad
dec
cmc
and
lock
add
addl
gs
outsl
add
test
mov
in
add
or
and
inc
and
xor
jp
add
aad
ljmp
add
cmc
push
jo
adc
and
add
setb
xchg
daa
test
mov
aad
lds
sti
mov
sub
xor
daa
loope
in
jmp
ljmp
lahf
jb
es
or
or
fistl
ret
adc
es
es
lds
push
es
es
sbb
dec
es
sbb
lock
gs
es
or
add
and
ljmp
add
cld
add
cmc
mov
int3
inc
shll
aas
hlt
dec
add
lock
sub
js
sbb
int3
pmaxsw
fldl
xor
xchg
icebp
divb
movsb
fists
ljmp
xor
dec
or
fsubrs
add
pusha
incl
jno
mov
mov
or
pop
sbb
fcomip
ljmp
fwait
sbb
sarl
mov
or
xor
lock
mov
fstl
mov
fcomip
cmp
push
repnz
daa
mov
inc
dec
jne
push
sbb
testb
jle
or
adc
dec
cmp
clc
call
outsb
xor
outsb
bound
mov
xchg
stc
cs
push
sub
lods
mov
sub
shlb
test
cmp
add
adc
lea
fcomip
incl
jg
std
pop
push
and
add
popf
inc
add
add
mov
jg
jmp
xor
push
mov
pop
xchg
push
call
ret
stos
incl
sahf
mov
add
or
movsb
push
adcl
cmp
and
fidivs
xor
mov
cli
adcb
push
inc
and
add
jne
inc
xchg
add
std
lea
orl
test
mov
outsl
nop
push
lahf
aaa
into
test
int
cld
xlat
nop
mov
pop
mov
ds
sub
mov
out
sub
data16
ljmp
dec
sbb
pop
enter
popa
dec
shll
pusha
aaa
xchg
cmp
pop
cmp
shrb
mov
pop
xor
dec
or
loop
add
pop
sbb
mov
cmp
mov
and
mov
pop
imul
cld
xchg
add
adc
ss
mov
xchg
pop
insb
ds
das
clc
cs
ret
aaa
js
into
lods
loope
xor
jb
xchg
loopne
loopne
pushf
fadds
iret
loop
test
mov
ret
arpl
sub
fildll
aad
xchg
pop
mov
add
xor
aas
mov
xor
jg
aaa
roll
mov
mov
xchg
push
fwait
dec
hlt
cmpsb
jae
pop
xchg
add
jg
repz
push
inc
mov
pop
add
movb
dec
push
push
cmp
das
push
inc
inc
bound
lcall
stos
add
add
imul
insb
imul
push
arpl
outsl
outsb
xor
sub
je
popa
jae
inc
jb
outsl
jb
push
inc
jne
std
in
out
pop
push
sbb
push
jne
add
insl
jo
gs
cs
frstor
je
inc
jae
gs
imul
gs
arpl
and
out
imulb
push
imul
dec
jne
and
jns
outsl
pop
mov
inc
jo
insb
imul
insb
shrb
imul
shrb
jbe
jns
dec
outsl
stos
je
push
jo
rcr
adc
and
popa
and
push
push
mov
ds
bound
inc
js
push
adc
arpl
add
push
outsl
jo
sbb
xor
fsubs
nop
push
jns
gs
xor
dec
jo
popf
imul
and
or
daa
scas
fdivl
das
push
jae
jo
popa
ds
add
mov
xor
adc
sbb
push
jbe
jne
sbb
gs
imul
add
outsl
jbe
dec
outsl
test
insb
jae
jbe
cmp
jp
nop
mov
in
sub
pop
sahf
outsb
imul
js
mov
js
push
outsb
mov
sbb
xchg
outsw
push
and
sbb
cmp
ret
push
gs
outsb
aas
imul
shlb
and
ss
test
jns
lods
or
push
jb
arpl
push
gs
cmp
sub
mov
ret
push
sbb
sub
inc
xchg
rol
and
jge
jae
out
aas
push
or
adc
fwait
lods
inc
push
mov
aas
pop
add
mov
mov
test
in
iret
mov
add
cmp
mov
mov
push
insl
add
push
andb
xor
xor
out
inc
push
shll
inc
xor
mov
bound
or
fucomp
mov
inc
ffree
lds
mov
ja
les
push
jle
sbb
xor
sbb
sbb
testl
aas
es
fstps
scas
dec
dec
fs
push
outsb
ja
sbb
pop
and
rcr
or
mov
jmp
lahf
sti
jo
jae
pusha
push
movsb
mov
adc
lds
adc
stos
add
adc
shlb
cmp
inc
inc
pop
push
mov
js
loope
sbb
jmp
xor
inc
imul
daa
sbb
pop
push
mov
dec
inc
push
pminub
lds
pop
mov
xchg
leave
push
xchg
je
pop
push
push
add
push
dec
popa
xor
aam
popf
or
dec
cmp
mov
mov
push
out
imull
mov
aad
aaa
mov
xor
or
jne
aad
or
mov
push
xor
mov
fisubrl
inc
sub
ds
push
inc
mov
lcall
and
xlat
mov
inc
stos
pop
adc
pop
outsl
sub
out
sbb
jl
jb
mov
dec
ret
pop
xchg
loop
inc
imul
mov
loope
cmp
adc
fimull
in
mov
lods
les
mov
sub
inc
sbb
mov
push
outsb
pushl
xor
gs
gs
mov
gs
inc
pusha
sub
test
fldcw
fisubrs
outsl
pop
gs
pop
fidivs
rcll
das
andb
jg
sub
pop
mov
insl
aas
xor
mov
std
pop
mov
add
mov
and
push
insl
push
inc
loope
mov
add
pop
and
adc
mov
fidivrl
mov
adc
push
inc
push
dec
fs
mov
and
ret
popa
fnsave
add
imul
divb
and
mov
aaa
mov
cmp
jle
mov
add
xorb
xor
add
fcmovb
jbe
add
add
and
jb
popa
je
push
push
add
notb
inc
outsb
dec
fistpll
outsl
repnz
dec
shrb
inc
xor
leave
out
add
cmp
jb
jb
cmp
arpl
ss
insl
mov
dec
inc
add
mov
cmp
xchg
and
adc
add
push
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
in
add
add
add
add
add
add
add
addb
add
cmp
pop
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
jae
add
add
add
add
add
xorb
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
and
mov
mov
mov
and
inc
sbb
sub
cmc
cwtl
stos
dec
sbb
jmp
push
xchg
popf
push
test
cmp
xor
mov
movsb
aam
mov
xchg
push
and
push
int
mov
ja
mov
lahf
push
insl
push
aam
int
movsl
icebp
lds
sbb
lods
and
iret
aaa
sbb
mov
in
lcall
adc
jl
pusha
out
ljmp
mov
std
xchg
pop
test
bound
rcrb
insl
das
lret
mov
mov
cmpsl
ds
aad
jmp
pushf
xchg
inc
adc
and
jge
inc
sbb
cs
push
out
lret
cltd
test
sub
mov
jns
cmp
aaa
or
fs
fucomip
mov
mov
sbb
push
push
pop
outsl
lods
scas
icebp
xchg
push
mov
hlt
push
fistpll
inc
je
or
xchg
rcrb
push
xchg
pop
lea
dec
mov
loop
fsubp
inc
hlt
mov
pop
and
inc
lock
ja
scas
outsl
jns
xor
mov
cld
push
rol
sub
ret
mov
das
out
cwtl
sub
cmp
clc
push
push
add
repnz
in
mov
call
rorl
push
jae
xor
repnz
xor
xlat
pop
mov
lock
or
arpl
cmp
mov
push
and
mov
cmp
sub
orl
jns
pop
movsb
xchg
icebp
fdivs
int
movsb
rcrl
out
std
mov
lcall
pop
jp
cmpsl
jle
mov
out
data16
into
sub
sahf
cmp
push
call
adc
popa
orl
clc
push
mov
negl
shlb
sbb
xchg
pop
fs
imul
pop
shl
lret
inc
repz
and
push
cltd
jbe
pmulhuw
jge
sbb
push
in
cld
scas
setb
add
push
aas
loope
lods
fcomps
cli
mov
fidivl
ret
call
mov
cmpsl
jp
dec
push
jbe
pop
xchg
test
sbb
pushf
lahf
call
xor
jae
orb
repz
sbb
sbb
imul
rorl
sub
jns
dec
shrl
lds
test
into
int
adc
shll
scas
test
jecxz
ljmp
or
fwait
adc
int3
jmp
cld
push
imul
push
in
lock
add
in
sub
fs
lds
or
push
pop
jb
push
int
cmp
test
push
xchg
xchg
jmp
cltd
add
mov
jo
jnp
jecxz
addr16
mov
fstps
stos
jle
mov
pop
int
test
jg
out
mov
mov
inc
add
lods
mov
icebp
sahf
in
push
scas
mov
adc
adc
pop
test
repz
xlat
imul
pushf
shl
popf
xor
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
test
cmovbe
mov
aad
xchg
scas
mov
loopne
int3
scas
jge
add
ljmp
loopne
mov
cli
and
cld
pushf
outsl
add
stc
daa
lret
into
inc
pop
out
repnz
stc
pop
mov
sbb
pop
lcall
movq
sub
imul
pop
notl
mov
mov
out
mov
inc
je
sbb
add
flds
pop
jecxz
inc
lock
rorb
cmp
insl
adc
fiaddl
add
sub
rorl
pop
leave
mov
sarl
lock
pop
mov
jg
aad
enter
insb
inc
mov
repz
push
dec
cli
push
cwtl
loop
into
mov
out
sahf
or
out
loopne
test
in
or
jns
outsb
lock
jns
in
into
out
and
movsb
rcr
fmull
inc
add
movsb
pop
jb
mov
fcoms
mov
movsl
in
mov
fstl
cmp
popa
pop
mov
adc
cmp
loope
lods
push
inc
cli
hlt
jo
in
lock
repnz
inc
imul
popa
lcall
and
inc
pop
jae
mov
inc
test
push
pop
int
js
ret
sub
movsl
lret
repnz
rorb
pop
test
xchg
pop
cld
cwtl
mov
lcall
jl
scas
or
jmp
insb
mov
mov
push
aad
push
jne
roll
ds
sbb
pop
into
in
xchg
xchg
mov
fsubr
push
jne
lcall
or
or
dec
sub
push
dec
inc
call
lods
xchg
cmp
sarb
mov
out
adc
or
imul
lods
in
push
test
lcall
cmp
enter
pop
mov
icebp
enter
in
in
lods
lds
es
lcall
rorl
test
push
pop
out
pop
pop
inc
ret
ljmp
inc
fs
cs
fs
outsb
pusha
pop
test
btr
cltd
cmpb
mov
and
jg
mov
push
decb
lret
dec
outsb
sub
or
xor
cld
aas
subb
inc
adc
sbb
pop
pop
into
mov
and
mov
js
clc
and
test
fs
jo
push
dec
lret
jno
push
idivl
nop
sbb
in
sub
in
dec
cld
push
mov
jns
mov
jg
and
and
jle
push
movsb
inc
mov
xor
in
adc
leave
xchg
imul
into
mov
cwtl
pop
push
lock
mov
sub
popa
in
mov
popa
in
subl
push
push
pop
insl
xor
es
xchg
lods
dec
lret
cltd
add
xchg
mov
nop
mov
pusha
call
je
jmp
mov
cwtl
and
arpl
aas
push
mov
aas
xchg
loop
js
outsb
out
cmp
pop
out
jg
cwtl
mov
cmp
and
mov
sub
mov
jbe
inc
cmpsb
test
sbb
inc
sarl
xlat
stos
int3
push
pop
lcall
enter
cli
jo
pop
das
push
ret
rolb
cmc
sub
cmp
mov
jp
cmp
push
lret
jb
lock
push
ret
ret
fmulp
popa
mov
mov
pop
imul
pop
mov
cli
sar
jne
sub
and
and
and
xor
push
in
cmc
aam
sahf
jo
aam
push
mov
push
hlt
jnp
imul
loop,pn
sbb
in
mov
in
testb
cmp
push
loop
push
fisubl
cmp
shll
xorl
aad
out
or
ret
inc
cmp
mov
xor
cmp
jge
es
jbe
mov
xor
lock
fcomps
jge
jmp
sahf
out
lods
cmpsb
aas
out
push
ljmp
mov
mov
loopne
sub
mov
lds
jno
mov
test
shrb
cmc
repnz
sbbb
andb
inc
xor
movsb
mov
pop
sbb
mov
dec
mov
imul
and
mov
sbbb
cmp
or
cld
xlat
pop
mov
cmp
arpl
jmp
mov
scas
js
in
iret
out
mov
xchg
or
sbb
mov
shrb
stc
iret
test
out
loope
cmpsl
clc
filds
cmp
ds
lret
out
or
jae
in
sbb
repz
or
xchg
aaa
dec
pusha
hlt
out
push
mov
push
outsl
lods
inc
cltd
and
loop
ror
sub
pop
mov
mov
mov
nop
jb
pop
in
orb
xor
stos
leave
xlat
mov
outsb
mov
pop
inc
icebp
sbb
pushf
adc
xlat
int
mov
sub
pop
sbb
imul
stos
bnd
adc
call
or
push
push
hlt
loopne
and
sub
aam
add
test
xor
gs
aaa
aam
mov
in
fwait
mov
add
in
push
mov
sub
seta
jbe
inc
xchg
sbb
hlt
ja
out
lea
sub
bnd
outsl
popa
cmpb
sti
sbb
in
jno
fiaddl
insl
jno
lea
and
sbb
sub
add
out
push
adc
jl
cmp
movsb
and
dec
dec
imul
inc
shl
scas
xchg
mov
mov
jae
mov
clc
mov
xor
xor
rol
fwait
or
cmp
pop
cmc
rolb
repnz
testb
inc
add
cltd
dec
dec
mov
sahf
push
cwtl
pop
mov
movhps
adc
dec
xchg
pop
imul
scas
jns
jnp
and
shll
repnz
popa
mov
addr16
jg
adc
das
jne
dec
loope
lds
repnz
cmp
aas
xor
cmp
adc
andb
sub
adc
xchg
mov
dec
dec
and
xchg
ds
jl,pt
hlt
repz
cmp
ficoms
mov
das
insb
pop
aaa
or
wrmsr
sbb
sub
std
pop
xchg
movsb
dec
pusha
jmp
leave
lahf
les
mov
xor
xchg
push
lret
lahf
inc
shlb
adc
test
push
sbb
mov
push
loop
cs
arpl
cwtl
je
imul
xchg
aaa
cltd
jb
sub
ds
es
mov
cmovs
mov
les
pop
popa
xor
scas
and
jmp
fs
in
cmpb
and
xchg
mov
push
lcall
add
lahf
push
nop
or
lods
das
into
sub
mov
mov
stos
into
test
xchg
call
lods
mov
lock
dec
test
jecxz
int
dec
popa
pop
popf
sub
sete
std
and
xchg
aam
pop
dec
pop
lds
jle
mov
push
mov
or
inc
and
idivb
push
xor
loop
aam
das
pushf
add
outsb
cmp
sub
pop
pop
loop
mov
xchg
test
cmp
cwtl
in
les
ja
lcall
pop
fimull
inc
jecxz
das
inc
sbb
xor
pop
rorl
out
lcall
jge
lea
arpl
das
sbb
xor
fmull
or
stc
jle
cmp
fs
push
rolb
aaa
test
cmp
mov
fsubp
mov
push
add
push
in
icebp
loopne
iret
fistps
mov
js
inc
insl
daa
call
out
adc
pop
sbb
movsl
mov
jnp
xor
dec
or
stos
sub
in
aad
pushf
pop
mov
cld
int
testl
cmc
lods
in
add
adc
ret
inc
aam
push
bound
mov
mov
out
lret
imul
lea
scas
lret
insl
shlb
sti
xchg
cmovl
jecxz
sub
cltd
in
push
jp
push
movlps
or
adc
push
andb
out
push
push
dec
xchg
pop
into
aas
and
cmp
mov
inc
jo
jb
sahf
or
loopne
hlt
outsl
pop
movsb
and
movsb
or
xlat
dec
fcom
aaa
pop
pop
ficompl
and
jge
inc
xor
ss
inc
sub
pop
cld
inc
jl
inc
xor
push
xchg
and
push
mov
mov
push
repnz
jg
das
fs
inc
ds
mov
xchg
sub
and
xchg
cmp
ljmp
sub
das
popf
mov
cmp
xor
jno
in
lea
dec
adc
popf
and
int3
movsl
or
adc
mov
in
push
imul
in
cmpb
imulb
aad
jns
adc
in
notb
push
sbb
bound
cmp
mov
lahf
cmp
mov
xchg
adc
test
cmp
mov
and
sahf
xchg
dec
gs
je
sub
stos
push
int
push
dec
sbb
ja
popf
inc
jne
test
mov
fwait
scas
and
inc
dec
cs
vpsubsw
ss
sbb
sub
push
pop
add
push
insb
mov
sub
pop
pop
aas
xor
cmp
xorb
pop
adc
mov
cltd
out
cmp
enter
sarb
or
je
mov
into
in
and
xchg
imul
pop
ret
cmpsl
and
mov
push
movsb
mov
jbe
mov
inc
lret
push
sbb
loop
iret
stos
js
sbbb
add
shll
sub
pop
dec
outsb
cld
pusha
mov
dec
pop
and
dec
int3
pusha
xchg
mov
inc
sbb
out
in
imul
mov
call
pop
arpl
rcll
sbb
popf
dec
mul
mov
je
or
xor
movsl
mov
cmp
sahf
icebp
pushf
mov
leave
les
jg
push
pushf
in
js
daa
add
cmp
test
stos
jp
test
das
mov
notb
mov
jg
popf
lea
jp
dec
cmp
lock
leave
xor
mov
add
add
mov
fimull
jl
ja
adc
and
insb
sahf
push
adc
mov
xor
fwait
loop
xor
adc
mov
lahf
clc
rep
sbb
add
sub
lret
dec
repnz
push
xchg
cmp
push
leave
bound
xor
jmp
scas
cs
jns
in
out
inc
out
stc
pop
scas
insl
les
push
repnz
es
fs
dec
mov
lahf
fst
jb
scas
pop
mov
sbb
pop
lods
test
jmp
dec
push
push
and
stc
mov
push
jecxz
push
loope
push
sbb
mov
push
xchg
shl
imul
dec
dec
lods
jp
lock
and
xchg
or
cli
andb
mov
push
xor
xor
das
test
pop
clc
ret
imul
sbb
mov
test
or
push
xor
imulb
xchg
mov
ja
cmpl
xchg
and
and
cmp
xchg
jp
or
inc
xor
mov
es
rol
test
cvtdq2ps
dec
cmc
mov
or
dec
inc
leave
iret
jle
popf
sbb
dec
pop
push
mov
sbb
or
out
add
mov
sbb
mov
aas
shrb
hlt
and
repz
repz
mov
mov
fcmovnb
mov
daa
bound
popf
jge
jmp
loopne
sub
push
jbe
sbb
dec
scas
cmc
sahf
mov
jle
mov
jae
das
pop
sbb
stos
pop
pop
shlb
dec
scas
push
jns
jo
mov
insb
mov
stos
insb
rcrl
jns
dec
data16
pop
ljmp
jae
pop
cmp
out
sbb
xchg
popl
lea
fdiv
mov
sar
popa
scas
push
jg
repz
les
addl
cmc
xor
pusha
adc
push
inc
int3
ret
cmp
xchg
ret
push
and
or
push
xchg
test
subb
mov
stos
pop
add
jno
lods
add
sub
jae
psubb
fisubrl
shll
mov
repnz
xchg
data16
adc
sbb
lret
add
jbe
or
xor
les
les
incb
fsts
pop
ljmp
sbbb
rcll
adc
out
dec
sub
cmp
rorb
test
and
and
mov
push
mov
dec
sub
or
ficoml
les
hlt
repz
sub
fsub
xlat
repz
push
jae
sti
sbb
mov
rcrl
xchg
mov
icebp
test
out
out
dec
mov
add
movsl
mov
mov
mov
xchg
mov
xchg
and
jbe
pop
xor
out
mov
dec
cli
or
mov
cmp
pop
jp
dec
xor
push
sarb
enter
mov
scas
aad
lds
xchg
aad
cli
mov
mov
test
ret
out
scas
mov
adc
pop
jnp
ds
stc
push
ja
xchg
inc
mov
shrl
out
xor
mov
enter
faddl
repz
or
dec
cmp
int3
sbb
popf
xchg
sub
out
pop
idivb
mov
test
repnz
add
cmpl
mov
xlat
adcl
add
in
rclb
mov
jmp
cmpsb
dec
push
data16
mov
sub
ret
fstpt
or
lods
and
lcall
test
sbb
leave
xchg
int
into
outsb
outsb
es
sti
lock
push
lret
sbb
and
sub
cmpsl
or
or
sub
mov
mov
mov
js
cmp
aad
push
mov
xlat
mov
fmulp
jmp
leave
pop
pop
mov
mov
test
arpl
mov
cmpsl
jns
add
inc
or
arpl
inc
sub
adc
jmp
gs
sub
ljmp
or
dec
out
es
or
mov
push
mov
xor
es
adc
movsb
or
mov
out
fistl
mulb
mov
pop
xchg
sub
add
daa
push
pop
out
loope
push
xchg
cmp
adc
jmp
cmpsl
es
adc
push
jb
loop
mov
ds
push
ret
lcall
xor
xchg
xlat
lret
pop
mov
loope
pop
xor
mov
mov
push
aad
push
clc
xorb
test
sub
fdivrs
aad
push
psubusb
rcr
je
or
adcb
dec
sbb
pop
push
mov
test
clc
mov
jno
or
popf
jnp
rorb
and
dec
xchg
sub
call
cwtl
add
sahf
inc
cmp
xor
xor
mov
pop
jne
inc
dec
ds
lds
xor
in
lods
cmp
int3
xchg
add
outsb
mov
sub
xchg
cmp
es
jmp
mov
mov
fwait
sbb
pop
out
inc
sbbb
mov
addb
inc
or
ret
pop
inc
lea
xor
in
mov
and
or
mov
movsl
mov
scas
mov
and
cmp
mov
push
fcmove
leave
pusha
or
test
jnp
xor
out
and
pop
dec
movsl
arpl
adc
notb
or
sub
aaa
jecxz
and
popa
insb
or
xor
into
and
int3
sti
dec
hlt
pop
out
sbb
xor
mov
xchg
and
xchg
push
pushf
adc
mov
scas
add
in
mov
cmp
xor
fstps
call
lods
popa
je
pop
hlt
imulb
fistpll
jae
repz
sub
stos
sub
ds
dec
or
fildll
pop
mov
clc
inc
cmpsb
jmp
movsb
sahf
mov
mov
stos
cmp
add
add
mov
imul
jno
test
sbb
test
out
pop
sub
fcomip
sahf
lods
cld
add
pop
inc
pushf
mov
std
pop
sbb
pop
loop
push
dec
test
and
xchg
inc
cmp
push
push
fbld
add
add
mov
iret
mov
jbe,pt
xor
mov
fdiv
es
jle
rcll
out
ret
in
adc
mov
mov
jmp
xor
in
inc
cs
bound
jmp
out
mov
loop
fldcw
popa
sti
fildl
inc
jg
pop
jp
and
sbb
int3
or
repnz
sub
add
dec
cmp
call
js
mov
push
adc
in
add
or
in
aad
mov
ret
push
or
mov
out
pop
jp
dec
and
sbb
rcr
xor
dec
aam
mov
out
and
ds
cmp
jge
adc
xchg
dec
mov
lret
mov
sti
stos
roll
leave
cmpsl
sbb
dec
fs
out
adc
movsb
testl
cmp
pushf
and
pusha
cwtl
and
cmp
lods
fsubr
aaa
cmp
les
adc
stos
pop
out
loop
mov
loope
adc
outsb
in
and
mov
out
addl
loopew
cmp
jns
mov
hlt
repz
pushf
bound
pop
ss
mov
sub
sti
icebp
les
lods
xchg
lcall
loop
mov
daa
das
loop
outsl
loop
ss
nopl
adc
int3
test
inc
mov
int3
push
sub
scas
xor
mov
cltd
pop
pop
enter
mov
sub
xor
testb
xchg
mov
insb
pop
fndisi(8087
inc
lcall
fnstsw
xchg
pushf
out
sub
aas
ds
sub
dec
xchg
push
inc
cmpsb
mov
aad
imull
pop
add
ljmp
mov
xchg
lock
ja
xor
sbb
ds
cwtl
dec
movsb
push
cli
mov
test
mull
cmp
adc
rcrb
mov
mov
dec
mov
sub
add
sbb
fistpll
rcr
jbe
push
cmp
pop
jmp
cmp
dec
xchg
clc
adc
out
mov
add
or
sarb
fmull
mov
ss
ss
xchg
cmc
pop
mov
pushf
and
sbb
ja
stc
push
cmp
mov
mov
std
sbb
or
aas
pop
mov
mov
std
xor
jnp
rclb
mov
jnp
xchg
inc
push
ja
pop
fs
int
push
jle
dec
jle
adc
fimuls
or
outsl
movsl
cli
aaa
sarb
adc
mov
mov
mov
or
push
add
stc
imulb
push
enter
ja
sti
cmpsb
jae
pushf
fwait
cmp
das
mov
popf
push
jle
pop
in
test
aad
cltd
repz
jg
loop
loope
or
scas
adc
pop
sub
data16
mov
add
mov
sbb
pusha
and
bound
xor
int3
pop
pop
or
filds
ds
imul
inc
inc
and
and
ja
mov
jmp
dec
test
push
sbb
inc
sub
or
jecxz
cmp
in
fcmove
ss
sbb
pop
jmp
xchg
push
sub
sub
loop
cld
dec
dec
jo
pushf
xchg
cmp
fcmovnu
stos
add
lea
out
arpl
arpl
inc
mov
stc
into
cmp
les
clc
je
addr16
xor
int
dec
xchg
call
xchg
push
xlat
repz
cmpsl
out
call
ss
clc
test
jbe
jge
cmpsl
jle
xchg
mov
scas
test
out
jle
test
adc
lahf
adc
inc
lcall
imul
sub
shrl
jbe
mov
jo,pt
push
fidivl
sbb
cmp
xchg
aad
xchg
xchg
xchg
fs
bound
insl
inc
add
in
xor
mov
es
mov
loop
push
xchg
dec
cmp
lock
into
sub
movsb
hlt
pop
jae
das
stc
stc
inc
sub
sub
inc
out
cmc
mov
fcmovbe
cmc
lahf
inc
or
adcl
mov
dec
pop
std
cld
repz
and
push
cmpsb
add
sub
loope
pusha
sub
fsubrl
jbe
push
inc
and
xchg
cmpsb
fbstp
leave
sub
daa
sbb
fwait
cmp
in
and
mov
scas
out
push
ja
fcmovnb
fistps
xor
inc
lret
xchg
push
xchg
test
sbb
stos
jno
adc
xchg
repz
icebp
cmc
xchg
and
fimuls
test
pop
and
test
test
aaa
and
out
add
xchg
andb
cltd
fimuls
or
in
loop
loop
pop
lods
xor
lahf
loopne
push
xchg
jo
cmpsb
jnp
push
sbb
rorl
mov
mov
cmp
push
pop
test
dec
mul
inc
sub
test
lods
cmp
lds
push
addr16
sub
jge
data16
xchg
fnstcw
out
es
pop
sarl
clc
mov
and
dec
addr16
mov
rcr
les
mov
sbb
inc
jmp
adc
xor
xchg
and
adc
lret
push
or
lods
out
data16
add
loope
push
pop
scas
jecxz
push
shrb
pushf
repnz
cmpsb
pop
js
adc
and
into
lods
xchg
sbb
mov
jge
jmp
ljmp
or
xchg
and
sub
push
dec
inc
sub
lahf
inc
xchg
ljmp
cmp
int
fwait
adc
mov
repnz
cld
dec
cmp
push
dec
mov
in
mov
inc
jl
adc
or
pop
lahf
mov
cmpsl
fldt
mov
insb
jo
and
icebp
movsl
mov
loope
sub
and
xor
push
dec
pop
sti
mov
cmpl
mov
les
jae
inc
pop
cmp
jmp
or
rcpps
cltd
mov
mov
jecxz
cs
jne
sub
sub
add
out
add
mov
push
mov
pop
push
popl
jo
mov
xor
sbb
xchg
dec
pop
nop
sub
gs
sbb
cmc
jmp
adcb
pop
or
aas
cltd
adc
les
gs
dec
mov
cld
ljmp
mov
out
fcmovnb
pop
mov
push
out
lret
mov
ret
aad
xor
aam
nop
clc
iret
inc
jl
inc
aas
cli
xchg
iret
and
xor
inc
adc
mov
pop
mov
mov
pop
repz
lock
test
mov
and
cmp
mov
xchg
shll
loop
pop
mov
test
rorb
js
movsb
add
inc
xchg
xor
pop
lahf
cmp
add
lahf
lcall
xor
sti
jecxz
int3
fcmovnbe
jno
fiaddl
out
cmp
and
mov
lret
enter
jo
mov
mov
sub
loopne
pop
inc
call
sub
lcall
repnz
jle
inc
lahf
and
mov
das
mov
mov
add
sbb
mov
js
xor
adc
hlt
dec
and
push
mov
jne
cmp
xor
sbb
bound
or
addb
test
cmpsb
pop
mov
dec
and
cltd
mov
les
pop
sahf
bnd
lea
or
fisubl
cmpsb
mov
lret
xlat
xor
mov
mov
mov
rcrb
cmp
sarl
or
mov
jg
cmp
inc
outsl
mov
jmp
cmp
inc
pop
out
pop
mov
daa
repz
ret
inc
cltd
pop
dec
mov
and
in
ljmp
adc
xor
fstl
arpl
mov
stc
nop
or
das
push
pop
lcall
mov
jmp
jo
movsl
pushf
jecxz
clc
xchg
jle
lods
jo
leave
cmp
je
repz
cmp
xor
mov
pop
push
xlat
jmp
lock
mov
sbb
pop
leave
jne
out
imul
push
push
in
out
popf
pop
jae
mov
xchg
movsb
mov
lret
jl
push
fs
xor
and
sub
inc
lahf
stc
push
jge
push
test
test
xor
push
xor
in
pop
xchg
std
adc
imul
fidivrs
daa
cmpsb
stc
push
or
enter
push
pop
aas
mov
dec
stos
call
movsb
test
ret
jae
in
imul
xor
mov
hlt
aam
sahf
inc
fadds
push
test
cmp
aad
pop
or
sbb
mov
lock
mov
loopne
mov
add
xchg
jb
mov
pop
decb
ljmp
jo
pop
fcoml
pop
fisttpll
loopne
gs
sub
inc
addl
imulb
into
push
cld
xchg
adc
push
xor
push
into
dec
xor
shll
jecxz
and
pop
mov
dec
cmpsl
xor
lods
push
mov
dec
fcmovnb
xlat
mov
rcrb
mull
ds
mov
mov
stos
outsb
hlt
mov
dec
pop
pop
into
testl
xchg
inc
stos
dec
outsb
js
aam
inc
adc
mov
inc
jmp
jg
in
cmp
sbb
xor
or
in
mov
mov
or
test
jp
xor
fistl
mov
clc
sub
inc
ret
cwtl
sbb
cli
cmpsl
insl
dec
jmp
stc
mov
leave
ljmp
test
dec
pop
lret
jo
xor
imul
sub
cmpsb
aas
lcall
cmp
jle
xor
movsb
jno
cmp
scas
jno
repnz
jp
out
pop
loop
mov
mov
mov
loopne
cld
aas
out
jb
sti
xor
xor
or
scas
in
mov
cmp
jne
inc
call
xorb
add
xchg
aaa
jmp
inc
cmpsb
mov
sbb
xchg
xor
divl
int
js
insb
lds
inc
push
out
rcl
adc
jmp
dec
push
cmovae
test
adc
pusha
outsl
popf
mov
loop
adc
push
and
je
pop
pop
fnstcw
gs
and
and
dec
push
fistl
adc
cmpsb
jge
test
out
cli
lcall
inc
in
adc
in
mov
jns
inc
adc
repnz
push
popa
lret
mov
cmp
adc
push
dec
test
cltd
arpl
testb
movsb
adc
pusha
mov
cs
and
jg
packsswb
fstl
inc
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
and
mov
mov
mov
and
inc
sbb
sub
cmc
cwtl
stos
dec
sbb
jmp
push
xchg
popf
push
test
cmp
xor
mov
movsb
aam
mov
xchg
push
and
push
int
mov
ja
mov
lahf
push
insl
push
aam
int
movsl
icebp
lds
sbb
lods
and
iret
aaa
sbb
mov
in
lcall
adc
jl
pusha
out
ljmp
mov
std
xchg
pop
test
bound
rcrb
insl
das
lret
mov
mov
cmpsl
ds
aad
jmp
pushf
xchg
inc
adc
and
jge
inc
sbb
cs
push
out
lret
cltd
test
sub
mov
jns
cmp
aaa
or
fs
fucomip
mov
mov
sbb
push
push
pop
outsl
lods
scas
icebp
xchg
push
mov
hlt
push
fistpll
inc
je
or
xchg
rcrb
push
xchg
pop
lea
dec
mov
loop
fsubp
inc
hlt
mov
pop
and
inc
lock
ja
scas
outsl
jns
xor
mov
cld
push
rol
sub
ret
mov
das
out
cwtl
sub
cmp
clc
push
push
add
repnz
in
mov
call
rorl
push
jae
xor
repnz
xor
xlat
pop
mov
lock
or
arpl
cmp
mov
push
and
mov
cmp
sub
orl
jns
pop
movsb
xchg
icebp
fdivs
int
movsb
rcrl
out
std
mov
lcall
pop
jp
cmpsl
jle
mov
out
data16
into
sub
sahf
cmp
push
call
adc
popa
orl
clc
push
mov
negl
shlb
sbb
xchg
pop
fs
imul
pop
shl
lret
inc
repz
and
push
cltd
jbe
pmulhuw
jge
sbb
push
in
cld
scas
setb
add
push
aas
loope
lods
fcomps
cli
mov
fidivl
ret
call
mov
cmpsl
jp
dec
push
jbe
pop
xchg
test
sbb
pushf
lahf
call
xor
jae
orb
repz
sbb
sbb
imul
rorl
sub
jns
dec
shrl
lds
test
into
int
adc
shll
scas
test
jecxz
ljmp
or
fwait
adc
int3
jmp
cld
push
imul
push
in
lock
add
in
sub
fs
lds
or
push
pop
jb
push
int
cmp
test
push
xchg
xchg
jmp
cltd
add
mov
jo
mov
xchg
in
jle
loope
adc
sbb
xchg
xchg
fstpl
decl
in
int3
push
mov
cmpsl
cmpsl
inc
inc
cmp
mov
into
inc
leave
and
cmp
adc
pop
sbb
leave
jp
add
dec
out
jno
inc
jmp
cltd
fwait
jl
mov
and
sbb
push
or
inc
push
ret
stos
in
xchg
mov
sbb
dec
and
jge
xor
xchg
add
cmp
and
jnp
jecxz
daa
and
fnsave
scas
in
push
mov
push
incb
adc
inc
xlat
add
std
cmp
gs
mov
jae
popf
xchg
inc
pop
call
mov
stos
cmp
sbb
jmp
imul
dec
inc
xor
scas
sahf
pop
cmp
mov
mov
adc
lahf
loope
aaa
jnp
movsb
mov
pop
or
and
mov
sti
inc
push
adc
daa
dec
push
mov
nop
test
push
push
jge
int
sti
xchg
xor
mov
xchg
iret
bound
movsl
sbb
xchg
addl
push
adc
add
pushf
sahf
es
rolb
aad
pop
xchg
push
cmpsb
pop
cmp
mov
fistpll
out
movb
das
cmpsb
stos
cmp
movsb
inc
neg
je
iret
ja
fimuls
push
jo
shlb
push
mov
xchg
sub
test
arpl
and
dec
cmpsb
into
repnz
and
push
or
pop
adc
loopne
pslld
sbb
xor
fsubrl
cltd
lret
jne
mov
dec
js
lahf
mov
scas
ds
push
outsb
daa
xchg
jge
and
inc
aas
cmc
adc
es
fistpll
shll
arpl
xchg
in
fiadds
les
enter
pop
jb
xor
cmc
cmp
mov
push
fwait
cmpsl
clc
mov
mov
and
xchg
pop
cld
cwtl
mov
lcall
jl
scas
or
jmp
insb
mov
mov
push
aad
push
jne
roll
ds
sbb
pop
into
in
xchg
xchg
mov
fsubr
push
jne
lcall
or
or
dec
sub
push
dec
inc
call
lods
xchg
cmp
sarb
mov
out
adc
or
imul
lods
in
push
test
lcall
cmp
enter
pop
mov
icebp
enter
in
in
lods
lds
es
lcall
rorl
test
push
pop
out
pop
pop
inc
ret
ljmp
inc
fs
cs
fs
outsb
pusha
pop
test
btr
cltd
cmpb
mov
and
jg
mov
push
decb
lret
dec
outsb
sub
or
xor
cld
aas
subb
inc
adc
sbb
pop
pop
into
mov
and
mov
js
clc
and
test
fs
jo
push
dec
lret
jno
push
idivl
nop
sbb
in
sub
in
dec
cld
push
mov
jns
mov
jg
and
and
jle
push
movsb
inc
mov
xor
in
adc
leave
xchg
imul
into
mov
cwtl
pop
push
lock
mov
sub
popa
in
mov
popa
in
subl
push
push
pop
insl
xor
es
xchg
lods
dec
lret
cltd
add
xchg
mov
nop
mov
pusha
call
je
jmp
mov
cwtl
and
arpl
aas
push
mov
aas
xchg
loop
js
outsb
out
cmp
pop
out
jg
cwtl
mov
cmp
and
mov
sub
mov
jbe
inc
cmpsb
test
sbb
inc
sarl
xlat
stos
int3
push
pop
lcall
enter
cli
jo
pop
das
push
ret
rolb
cmc
sub
cmp
mov
jp
cmp
push
lret
jb
lock
push
ret
ret
fmulp
popa
mov
mov
pop
imul
pop
mov
cli
sar
jne
sub
and
and
and
xor
push
in
cmc
aam
sahf
jo
aam
push
mov
push
hlt
jnp
imul
loop,pn
sbb
in
mov
in
testb
cmp
push
loop
push
fisubl
cmp
shll
xorl
aad
out
or
ret
inc
cmp
mov
xor
cmp
jge
es
jbe
mov
xor
lock
fcomps
jge
jmp
sahf
out
lods
cmpsb
aas
out
push
ljmp
mov
mov
loopne
sub
mov
lds
jno
mov
test
shrb
cmc
repnz
sbbb
andb
inc
xor
movsb
mov
pop
sbb
mov
dec
mov
imul
and
mov
sbbb
cmp
or
cld
xlat
pop
mov
cmp
arpl
jmp
mov
scas
js
in
iret
out
mov
xchg
or
sbb
mov
shrb
stc
iret
test
out
loope
cmpsl
clc
filds
cmp
ds
lret
out
or
jae
in
sbb
repz
or
xchg
aaa
dec
pusha
hlt
out
push
mov
push
outsl
lods
inc
cltd
and
loop
ror
sub
pop
mov
mov
mov
nop
jb
pop
in
orb
xor
stos
leave
xlat
mov
outsb
mov
pop
inc
icebp
sbb
pushf
adc
xlat
int
mov
sub
pop
sbb
imul
stos
bnd
adc
call
or
push
push
hlt
loopne
and
sub
aam
add
test
xor
gs
aaa
aam
mov
in
fwait
mov
add
in
push
mov
sub
seta
jbe
inc
xchg
sbb
hlt
ja
out
lea
sub
bnd
outsl
popa
cmpb
sti
sbb
in
jno
fiaddl
insl
jno
lea
and
sbb
sub
add
out
push
adc
jl
cmp
movsb
and
dec
dec
imul
inc
shl
scas
xchg
mov
mov
jae
mov
clc
mov
xor
xor
rol
fwait
or
cmp
pop
cmc
rolb
repnz
testb
inc
add
cltd
dec
dec
mov
sahf
push
cwtl
pop
mov
movhps
adc
dec
xchg
pop
imul
scas
jns
jnp
and
shll
repnz
popa
mov
addr16
jg
adc
das
jne
dec
loope
lds
repnz
cmp
aas
xor
cmp
adc
andb
sub
adc
xchg
mov
dec
dec
and
xchg
ds
jl,pt
hlt
repz
cmp
ficoms
mov
das
insb
pop
aaa
or
wrmsr
sbb
sub
std
pop
xchg
movsb
dec
pusha
jmp
leave
lahf
les
mov
xor
xchg
push
lret
lahf
inc
shlb
adc
test
push
sbb
mov
push
loop
cs
arpl
cwtl
je
imul
xchg
aaa
cltd
jb
sub
ds
es
mov
cmovs
mov
les
pop
popa
xor
scas
and
jmp
fs
in
cmpb
and
xchg
mov
push
lcall
add
lahf
push
nop
or
lods
das
into
sub
mov
mov
stos
into
test
xchg
call
lods
mov
lock
dec
test
jecxz
int
dec
popa
pop
popf
sub
sete
std
and
xchg
aam
pop
dec
pop
lds
jle
mov
push
mov
or
inc
and
idivb
push
xor
loop
aam
das
pushf
add
outsb
cmp
sub
pop
pop
loop
mov
xchg
test
cmp
cwtl
in
les
ja
lcall
pop
fimull
inc
jecxz
das
inc
sbb
xor
pop
rorl
out
lcall
jge
lea
arpl
das
sbb
xor
fmull
or
stc
jle
cmp
fs
push
rolb
aaa
test
cmp
mov
fsubp
mov
push
add
push
in
icebp
loopne
iret
fistps
mov
js
inc
insl
daa
call
out
adc
pop
sbb
movsl
mov
jnp
xor
dec
or
stos
sub
in
aad
pushf
pop
mov
cld
int
testl
cmc
lods
in
add
adc
ret
inc
aam
push
bound
mov
mov
out
lret
imul
lea
scas
lret
insl
shlb
sti
xchg
cmovl
jecxz
sub
cltd
in
push
jp
push
movlps
or
adc
push
andb
out
push
push
dec
xchg
pop
into
aas
and
cmp
mov
inc
jo
jb
sahf
or
loopne
hlt
outsl
pop
movsb
and
movsb
or
xlat
dec
fcom
aaa
pop
pop
ficompl
and
jge
inc
xor
ss
inc
sub
pop
cld
inc
jl
inc
xor
push
xchg
and
push
mov
mov
push
repnz
jg
das
fs
inc
ds
mov
xchg
sub
and
xchg
cmp
ljmp
sub
das
popf
mov
cmp
xor
jno
in
lea
dec
adc
popf
and
int3
movsl
or
adc
mov
in
push
imul
in
cmpb
imulb
aad
jns
adc
in
notb
push
sbb
bound
cmp
mov
lahf
cmp
mov
xchg
adc
test
cmp
mov
and
sahf
xchg
dec
gs
je
sub
stos
push
int
push
dec
sbb
ja
popf
inc
jne
test
mov
fwait
scas
and
inc
dec
cs
vpsubsw
ss
sbb
sub
push
pop
add
push
insb
mov
sub
pop
pop
aas
xor
cmp
xorb
pop
adc
mov
cltd
out
cmp
enter
sarb
or
je
mov
into
in
and
xchg
imul
pop
ret
cmpsl
and
mov
push
movsb
mov
jbe
mov
inc
lret
push
sbb
loop
iret
stos
js
sbbb
add
shll
sub
pop
dec
outsb
cld
pusha
mov
dec
pop
and
dec
int3
pusha
xchg
mov
inc
sbb
out
in
imul
mov
call
pop
arpl
rcll
sbb
popf
dec
mul
mov
je
or
xor
movsl
mov
cmp
sahf
icebp
pushf
mov
leave
les
jg
push
pushf
in
js
daa
add
cmp
test
stos
jp
test
das
mov
notb
mov
jg
popf
lea
jp
dec
cmp
lock
leave
xor
mov
add
add
mov
fimull
jl
ja
adc
and
insb
sahf
push
adc
mov
xor
fwait
loop
xor
adc
mov
lahf
clc
rep
sbb
add
sub
lret
dec
repnz
push
xchg
cmp
push
leave
bound
xor
jmp
scas
cs
jns
in
out
inc
out
stc
pop
scas
insl
les
push
repnz
es
fs
dec
mov
lahf
fst
jb
scas
pop
mov
sbb
pop
lods
test
jmp
dec
push
push
and
stc
mov
push
jecxz
push
loope
push
sbb
mov
push
xchg
shl
imul
dec
dec
lods
jp
lock
and
xchg
or
cli
andb
mov
push
xor
xor
das
test
pop
clc
ret
imul
sbb
mov
test
or
push
xor
imulb
xchg
mov
ja
cmpl
xchg
and
and
cmp
xchg
jp
or
inc
xor
mov
es
rol
test
cvtdq2ps
dec
cmc
mov
or
dec
inc
leave
iret
jle
popf
sbb
dec
pop
push
mov
sbb
or
out
add
mov
sbb
mov
aas
shrb
hlt
and
repz
repz
mov
mov
fcmovnb
mov
daa
bound
popf
jge
jmp
loopne
sub
push
jbe
sbb
dec
scas
cmc
sahf
mov
jle
mov
jae
das
pop
sbb
stos
pop
pop
shlb
dec
scas
push
jns
jo
mov
insb
mov
stos
insb
rcrl
jns
dec
data16
pop
ljmp
jae
pop
cmp
out
sbb
xchg
popl
lea
fdiv
mov
sar
popa
scas
push
jg
repz
les
addl
cmc
xor
pusha
adc
push
inc
int3
ret
cmp
xchg
ret
push
and
or
push
xchg
test
subb
mov
stos
pop
add
jno
lods
add
sub
jae
psubb
fisubrl
shll
mov
repnz
xchg
data16
adc
sbb
lret
add
jbe
or
xor
les
les
incb
fsts
pop
ljmp
sbbb
rcll
adc
out
dec
sub
cmp
rorb
test
and
and
mov
push
mov
dec
sub
or
ficoml
les
hlt
repz
sub
fsub
xlat
repz
push
jae
sti
sbb
mov
rcrl
xchg
mov
icebp
test
out
out
dec
mov
add
movsl
mov
mov
mov
xchg
mov
xchg
and
jbe
pop
xor
out
mov
dec
cli
or
mov
cmp
pop
jp
dec
xor
push
sarb
enter
mov
scas
aad
lds
xchg
aad
cli
mov
mov
test
ret
out
scas
mov
adc
pop
jnp
ds
stc
push
ja
xchg
inc
mov
shrl
out
xor
mov
enter
faddl
repz
or
dec
cmp
int3
sbb
popf
xchg
sub
out
pop
idivb
mov
test
repnz
add
cmpl
mov
xlat
adcl
add
in
rclb
mov
jmp
cmpsb
dec
push
data16
mov
sub
ret
fstpt
or
lods
and
lcall
test
sbb
leave
xchg
int
into
outsb
outsb
es
sti
lock
push
lret
sbb
and
sub
cmpsl
or
or
sub
mov
mov
mov
js
cmp
aad
push
mov
xlat
mov
fmulp
jmp
leave
pop
pop
mov
mov
test
arpl
mov
cmpsl
jns
add
inc
or
arpl
inc
sub
adc
jmp
gs
sub
ljmp
or
dec
out
es
or
mov
push
mov
xor
es
adc
movsb
or
mov
out
fistl
mulb
mov
pop
xchg
sub
add
daa
push
pop
out
loope
push
xchg
cmp
adc
jmp
cmpsl
es
adc
push
jb
loop
mov
ds
push
ret
lcall
xor
xchg
xlat
lret
pop
mov
loope
pop
xor
mov
mov
push
aad
push
clc
xorb
test
sub
fdivrs
aad
push
psubusb
rcr
je
or
adcb
dec
sbb
pop
push
mov
test
clc
mov
jno
or
popf
jnp
rorb
and
dec
xchg
sub
call
cwtl
add
sahf
inc
cmp
xor
xor
mov
pop
jne
inc
dec
ds
lds
xor
in
lods
cmp
int3
xchg
add
outsb
mov
sub
xchg
cmp
es
jmp
mov
mov
fwait
sbb
pop
out
inc
sbbb
mov
addb
inc
or
ret
pop
inc
lea
xor
in
mov
and
or
mov
movsl
mov
scas
mov
and
cmp
mov
push
fcmove
leave
pusha
or
test
jnp
xor
out
and
pop
dec
movsl
arpl
adc
notb
or
sub
aaa
jecxz
and
popa
insb
or
xor
into
and
int3
sti
dec
hlt
pop
out
sbb
xor
mov
xchg
and
xchg
push
pushf
adc
mov
scas
add
in
mov
cmp
xor
fstps
call
lods
popa
je
pop
hlt
imulb
fistpll
jae
repz
sub
stos
sub
ds
dec
or
fildll
pop
mov
clc
inc
cmpsb
jmp
movsb
sahf
mov
mov
stos
cmp
add
add
mov
imul
jno
test
sbb
test
out
pop
sub
fcomip
sahf
lods
cld
add
pop
inc
pushf
mov
std
pop
sbb
pop
loop
push
dec
test
and
xchg
inc
cmp
push
push
fbld
add
add
mov
iret
mov
jbe,pt
xor
mov
fdiv
es
jle
rcll
out
ret
in
adc
mov
mov
jmp
xor
in
inc
cs
bound
jmp
out
mov
loop
fldcw
popa
sti
fildl
inc
jg
pop
jp
and
sbb
int3
or
repnz
sub
add
dec
cmp
call
js
mov
push
adc
in
add
or
in
aad
mov
ret
push
or
mov
out
pop
jp
dec
and
sbb
rcr
xor
dec
aam
mov
out
and
ds
cmp
jge
adc
xchg
dec
mov
lret
mov
sti
stos
roll
leave
cmpsl
sbb
dec
fs
out
adc
movsb
testl
cmp
pushf
and
pusha
cwtl
and
cmp
lods
fsubr
aaa
cmp
les
adc
stos
pop
out
loop
mov
loope
adc
outsb
in
and
mov
out
addl
loopew
cmp
jns
mov
hlt
repz
pushf
bound
pop
ss
mov
sub
sti
icebp
les
lods
xchg
lcall
loop
mov
daa
das
loop
outsl
loop
ss
nopl
adc
int3
test
inc
mov
int3
push
sub
scas
xor
mov
cltd
pop
pop
enter
mov
sub
xor
testb
xchg
mov
insb
pop
fndisi(8087
inc
lcall
fnstsw
xchg
pushf
out
sub
aas
ds
sub
dec
xchg
push
inc
cmpsb
mov
aad
imull
pop
add
ljmp
mov
xchg
lock
ja
xor
sbb
ds
cwtl
dec
movsb
push
cli
mov
test
mull
cmp
adc
rcrb
mov
mov
dec
mov
sub
add
sbb
fistpll
rcr
jbe
push
cmp
pop
jmp
cmp
dec
xchg
clc
adc
out
mov
add
or
sarb
fmull
mov
ss
ss
xchg
cmc
pop
mov
pushf
and
sbb
ja
stc
push
cmp
mov
mov
std
sbb
or
aas
pop
mov
mov
std
xor
jnp
rclb
mov
jnp
xchg
inc
push
ja
pop
fs
int
push
jle
dec
jle
adc
fimuls
or
outsl
movsl
cli
aaa
sarb
adc
mov
mov
mov
or
push
add
stc
imulb
push
enter
ja
sti
cmpsb
jae
pushf
fwait
cmp
das
mov
popf
push
jle
pop
in
test
aad
cltd
repz
jg
loop
loope
or
scas
adc
pop
sub
data16
mov
add
mov
sbb
pusha
and
bound
xor
int3
pop
pop
or
filds
ds
imul
inc
inc
and
and
ja
mov
jmp
dec
test
push
sbb
inc
sub
or
jecxz
cmp
in
fcmove
ss
sbb
pop
jmp
xchg
push
sub
sub
loop
cld
dec
dec
jo
pushf
xchg
cmp
fcmovnu
stos
add
lea
out
arpl
arpl
inc
mov
stc
into
cmp
les
clc
je
addr16
xor
int
dec
xchg
call
xchg
push
xlat
repz
cmpsl
out
call
ss
clc
test
jbe
jge
cmpsl
jle
xchg
mov
scas
test
out
jle
test
adc
lahf
adc
inc
lcall
imul
sub
shrl
jbe
mov
jo,pt
push
fidivl
sbb
cmp
xchg
aad
xchg
xchg
xchg
fs
bound
insl
inc
add
in
xor
mov
es
mov
loop
push
xchg
dec
cmp
lock
into
sub
movsb
hlt
pop
jae
das
stc
stc
inc
sub
sub
inc
out
cmc
mov
fcmovbe
cmc
lahf
inc
or
adcl
mov
dec
pop
std
cld
repz
and
push
cmpsb
add
sub
loope
pusha
sub
fsubrl
jbe
push
inc
and
xchg
cmpsb
fbstp
leave
sub
daa
sbb
fwait
cmp
in
and
mov
scas
out
push
ja
fcmovnb
fistps
xor
inc
lret
xchg
push
xchg
test
sbb
stos
jno
adc
xchg
repz
icebp
cmc
xchg
and
fimuls
test
pop
and
test
test
aaa
and
out
add
xchg
andb
cltd
fimuls
or
in
loop
loop
pop
lods
xor
lahf
loopne
push
xchg
jo
cmpsb
jnp
push
sbb
rorl
mov
mov
cmp
push
pop
test
dec
mul
inc
sub
test
lods
cmp
lds
push
addr16
sub
jge
data16
xchg
fnstcw
out
es
pop
sarl
clc
mov
and
dec
addr16
mov
rcr
les
mov
sbb
inc
jmp
adc
xor
xchg
and
adc
lret
push
or
lods
out
data16
add
loope
push
pop
scas
jecxz
push
shrb
pushf
repnz
cmpsb
pop
js
adc
and
into
lods
xchg
sbb
mov
jge
jmp
ljmp
or
xchg
and
sub
push
dec
inc
sub
lahf
inc
xchg
ljmp
cmp
int
fwait
adc
mov
repnz
cld
dec
cmp
push
dec
mov
in
mov
inc
jl
adc
or
pop
lahf
mov
cmpsl
fldt
mov
insb
jo
and
icebp
movsl
mov
loope
sub
and
xor
push
dec
pop
sti
mov
cmpl
mov
les
jae
inc
pop
cmp
jmp
or
rcpps
cltd
mov
mov
jecxz
cs
jne
sub
sub
add
out
add
mov
push
mov
pop
push
popl
jo
mov
xor
sbb
xchg
dec
pop
nop
sub
gs
sbb
cmc
jmp
adcb
pop
or
aas
cltd
adc
les
gs
dec
mov
cld
ljmp
mov
out
fcmovnb
pop
mov
push
out
lret
mov
ret
aad
xor
aam
nop
clc
iret
inc
jl
inc
aas
cli
xchg
iret
and
xor
inc
adc
mov
pop
mov
mov
pop
repz
lock
test
mov
and
cmp
mov
xchg
shll
loop
pop
mov
test
rorb
js
movsb
add
inc
xchg
xor
pop
lahf
cmp
add
lahf
lcall
xor
sti
jecxz
int3
fcmovnbe
jno
fiaddl
out
cmp
and
mov
lret
enter
jo
mov
mov
sub
loopne
pop
inc
call
sub
lcall
repnz
jle
inc
lahf
and
mov
das
mov
mov
add
sbb
mov
js
xor
adc
hlt
dec
and
push
mov
jne
cmp
xor
sbb
bound
or
addb
test
cmpsb
pop
mov
dec
and
cltd
mov
les
pop
sahf
bnd
lea
or
fisubl
cmpsb
mov
lret
xlat
xor
mov
mov
mov
rcrb
cmp
sarl
or
mov
jg
cmp
inc
outsl
mov
jmp
cmp
inc
pop
out
pop
mov
daa
repz
ret
inc
cltd
pop
dec
mov
and
in
ljmp
adc
xor
fstl
arpl
mov
stc
nop
or
das
push
pop
lcall
mov
jmp
jo
movsl
pushf
jecxz
clc
xchg
jle
lods
jo
leave
cmp
je
repz
cmp
xor
mov
pop
push
xlat
jmp
lock
mov
sbb
pop
leave
jne
out
imul
push
push
in
out
popf
pop
jae
mov
xchg
movsb
mov
lret
jl
push
fs
xor
and
sub
inc
lahf
stc
push
jge
push
test
test
xor
push
xor
in
pop
xchg
std
adc
imul
fidivrs
daa
cmpsb
stc
push
or
enter
push
pop
aas
mov
dec
stos
call
movsb
test
ret
jae
in
imul
xor
mov
hlt
aam
sahf
inc
fadds
push
test
cmp
aad
pop
or
sbb
mov
lock
mov
loopne
mov
add
xchg
jb
mov
pop
decb
ljmp
jo
pop
fcoml
pop
fisttpll
loopne
gs
sub
inc
addl
imulb
into
push
cld
xchg
adc
push
xor
push
into
dec
xor
shll
jecxz
and
pop
mov
dec
cmpsl
xor
lods
push
mov
dec
fcmovnb
xlat
mov
rcrb
mull
ds
mov
mov
stos
outsb
hlt
mov
dec
pop
pop
into
testl
xchg
inc
stos
dec
outsb
js
aam
inc
adc
mov
inc
jmp
jg
in
cmp
sbb
xor
or
in
mov
mov
or
test
jp
xor
fistl
mov
clc
sub
inc
ret
cwtl
sbb
cli
cmpsl
insl
dec
jmp
stc
mov
leave
ljmp
test
dec
pop
lret
jo
xor
imul
sub
cmpsb
aas
lcall
cmp
jle
xor
movsb
jno
cmp
scas
jno
repnz
jp
out
pop
loop
mov
mov
mov
loopne
cld
aas
out
jb
sti
xor
xor
or
scas
in
mov
cmp
jne
inc
call
xorb
add
xchg
aaa
jmp
inc
cmpsb
mov
sbb
xchg
xor
divl
int
js
insb
lds
inc
push
out
rcl
adc
jmp
dec
push
cmovae
test
adc
pusha
outsl
popf
mov
loop
adc
push
and
je
pop
pop
fnstcw
gs
and
and
dec
push
fistl
adc
cmpsb
jge
test
out
cli
lcall
inc
in
adc
in
mov
jns
inc
adc
repnz
push
popa
lret
mov
cmp
adc
push
dec
test
cltd
arpl
testb
movsb
adc
pusha
mov
cs
and
jg
packsswb
fstl
inc
xor
cmp
cld
in
cmp
cmp
out
cmp
dec
out
cmp
and
cmp
push
out
cmp
sub
cmp
pop
out
cmp
insb
out
cmp
jl
cmp
mov
cmp
lcall
add
add
add
add
add
out
cmp
add
add
fsubr
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
cs
insb
add
insl
jo
fs
insb
add
gs
insb
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
insb
jne
je
jb
gs
outsb
je
jb
popa
arpl
add
arpl
pop
jb
jo
add
push
je
push
je
push
