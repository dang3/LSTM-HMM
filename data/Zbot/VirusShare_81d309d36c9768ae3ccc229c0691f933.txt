xor
lea
mov
mov
xor
not
decl
jne
jmp
shr
xor
adc
lea
lea
lea
xor
xchg
mov
mov
xor
rcr
xchg
xchg
lea
xor
rol
lea
mov
not
mov
push
call
jmp
push
mov
sub
push
push
push
xchg
adc
lea
lea
push
mov
mov
and
neg
add
not
lea
mov
xor
ret
jmp
mov
mov
add
mov
and
push
call
push
jmp
add
xor
mov
xor
and
xchg
mov
jmp
rcr
mov
xor
shl
shl
mov
rol
mov
rcl
not
mov
adc
shrl
xor
jmp
xor
xor
lea
shr
lea
xor
push
mov
mov
xor
add
lea
jmp
ror
mov
mov
mov
mov
xor
cmp
je
lea
mov
jmp
rcl
lea
neg
xor
mov
ror
ror
lea
movl
mov
xor
mov
movl
mov
shl
xor
neg
not
mov
lea
mov
rol
lea
not
mov
mov
mov
lea
push
push
pushl
pushl
call
rcl
adc
jmp
mov
xor
adc
pop
pop
pop
leave
call
call
shl
neg
not
jmp
mov
xor
lea
xor
popl
not
mov
add
mov
lea
jmp
xor
mov
rcl
lea
mov
mov
mov
jmp
shr
lea
lea
xor
pop
add
mov
xor
cmp
je
xchg
mov
xor
jmp
rcr
mov
not
mov
rol
rol
and
and
rol
not
lea
jmp
lea
and
mov
lea
xor
lea
xor
add
xor
not
mov
lea
not
jmp
mov
xor
lea
xchg
xor
rcr
rcl
lea
lea
jmp
in
and
mov
aaa
cwtl
fcmovnbe
jmp
sub
inc
sbb
push
inc
imull
mov
aaa
and
jg
iret
or
and
outsl
cmp
jmp
dec
es
cmpsl
inc
ret
cld
sbb
xor
cmp
jmp
sbb
iret
sbb
adc
test
fmul
movsl
movsl
pop
push
jp
xor
test
aam
pop
add
cmpsb
add
flds
pop
xor
and
mov
icebp
xchg
mov
cmc
lods
hlt
out
adc
ret
cltd
fcoml
lds
fwait
mov
push
lds
mov
fdivrl
mov
pop
pushf
hlt
jmp
xlat
xchg
enter
insl
inc
imull
jg
or
push
sub
xor
aam
pop
xchg
mov
addb
hlt
cld
sub
stos
adc
mov
test
lock
xchg
pusha
push
inc
idiv
pop
test
lods
leave
push
sub
jo
lock
xor
pop
test
and
mov
push
sbb
lods
lcall
lea
int
inc
neg
enter
popl
cmpsl
addr16
stos
xchg
hlt
out
fwait
inc
imull
mov
lods
mov
bound
inc
testl
or
pusha
aas
pop
data16
movsb
incl
aam
not
aam
test
rol
mov
iret
xor
aad
jl
pushl
stos
push
xor
and
add
jnp
ja
call
sub
inc
xor
xor
test
fbld
test
jmp
sbb
iret
sbb
adc
shrb
push
jl
repz
int
mov
aam
fisttpl
std
inc
lods
aam
hlt
and
pop
mov
pop
or
ret
xchg
sub
cltd
aam
cmpsb
ret
aam
mov
pop
sub
jp
hlt
pop
mov
pop
cmp
and
lcall
xchg
inc
or
mull
xchg
inc
or
out
mov
subb
loop
mov
fcmovnb
mov
sbb
pop
mov
mov
clc
mov
mov
add
inc
mull
sub
mov
push
out
int
xchg
inc
clc
sub
inc
imull
sub
out
jmp
inc
mull
orl
xchg
pusha
xchg
and
insb
hlt
sti
call
iret
mov
mov
mov
pop
or
stos
popf
js
test
movsl
adc
sub
rclb
sub
jmp
mov
or
and
sbb
stos
js
push
lahf
inc
clc
push
cmpsl
push
jp
lret
clc
pop
cmp
stos
stos
dec
jl
fmul
mov
pushf
inc
aas
pop
add
aas
push
daa
out
jl
iret
mov
mov
mov
lock
xor
and
mov
daa
pop
jge
mov
imull
dec
imull
pop
aaa
sti
mov
mov
and
cmp
or
dec
aaa
adc
inc
dec
mov
jl
iret
les
and
mov
filds
mov
inc
hlt
in
faddl
sti
test
lahf
push
lret
cmp
inc
mov
out
sbb
push
xchg
inc
ja
mov
stos
js
cli
loopne
cmpsl
iret
xchg
mov
outsl
loopne
test
pop
xor
stos
addr16
test
test
push
mov
jns
xchg
add
in
negl
fildl
sarb
add
stos
push
in
test
aam
notl
pop
xor
aam
test
test
pop
or
sbb
lods
test
mov
in
dec
cmp
or
iret
mov
push
jnp
iret
int
push
mov
test
pop
divl
test
fmul
andl
les
mov
aad
andb
and
aam
mull
xchg
dec
jl
fmul
mov
nop
test
pop
inc
into
loope
xor
and
int
mov
sbb
enter
imul
popf
test
icebp
lods
xchg
push
sub
iret
stos
mov
repz
push
aad
jmp
aad
jmp
pusha
dec
cmp
ficoms
lahf
shlb
nop
data16
stc
lret
leave
mov
fiaddl
in
fwait
pop
or
shrl
xchg
int3
cli
dec
in
lock
repz
std
mov
call
faddl
adc
jg
push
push
notl
mov
into
repnz
fsubl
mov
out
in
dec
idiv
mov
mov
fmull
imulb
xchg
sbb
dec
inc
data16
test
insb
mov
sbb
into
mov
mov
jne
test
adc
test
mov
ja
push
ja
test
stc
int
inc
sbb
test
dec
mov
mov
andb
mov
mov
addl
data16
out
xor
mov
adc
shl
fnstenv
jle
sahf
insb
imul
jl
dec
aam
pop
push
mov
stos
jb
mov
mov
push
xor
sbb
mov
dec
hlt
mov
add
jb
lods
imul
sbbl
loopne
inc
pop
adc
arpl
or
test
popa
xor
scas
into
xor
sbb
sub
cltd
rcll
orl
iret
mov
in
fwait
jp
dec
mov
dec
or
aam
bound
fidivl
fdivs
popl
mov
jg
mov
dec
stos
inc
mov
adc
stos
aam
mov
jae
imulb
cli
fildl
pop
push
xor
inc
scas
mov
leave
xchg
aad
push
add
pop
test
mov
call
adc
ret
das
sbb
adc
push
pop
aam
lods
jnp
in
icebp
inc
sarb
inc
adc
jle
je
rcrl
mov
add
mov
add
cmpsl
push
mov
aad
inc
fsubrl
les
cld
and
mov
shlb
inc
je
fbld
repz
or
xor
mov
mov
fidivl
mov
pop
xchg
mov
inc
and
in
jns
lret
mov
popa
pop
add
inc
xor
or
lret
and
mov
fsubl
repz
insb
pop
inc
xchg
ss
pop
add
fsubl
jns
inc
xor
imul
in
cmp
mov
pop
dec
mov
xor
stos
cs
jbe
arpl
sbb
jbe
jmp
cs
rcl
dec
movsl
cmp
ja
add
out
addr16
push
fs
je
push
popf
xor
enter
lock
mov
fistl
push
mov
in
shll
ja
and
push
sti
mov
mov
leave
jmp
push
scas
adc
add
jle,pn
inc
sbb
filds
mov
js
repnz
adc
sarl
fisttpll
push
mov
mov
mov
lds
add
xor
das
pop
je
int
lret
sbb
dec
jae
xlat
push
rcr
inc
push
add
aaa
test
call
je
in
cli
add
lret
xchg
xchg
pop
adc
cltd
push
dec
xor
mov
sub
and
add
adc
iret
jl
mov
adc
stos
pushf
leave
cltd
inc
rolb
mov
push
sub
lea
mov
mov
outsb
sub
fisttps
sub
sbb
sbb
or
add
movsl
or
lds
lret
shll
lods
dec
cmp
aaa
lods
shld
cmpsb
push
adc
shl
and
popa
pop
mov
push
push
cmpsb
xor
cld
or
cmp
fdiv
mov
sub
adc
jno
xchg
and
cwtl
mov
movl
lds
and
insl
movsb
int3
add
leave
dec
adc
mov
addr16
rolb
aas
daa
js
or
ljmp
mov
cmp
or
mov
insb
orl
bound
hlt
mov
adc
pop
leave
cltd
mov
xchg
jecxz
je
adc
cmp
ds
adc
xchg
popa
mov
test
jle
xchg
int3
cmp
cmp
mov
mov
sbb
fsubrl
xchg
test
in
or
insl
call
pop
cmp
mov
test
in
sub
adc
mov
insb
fidivrs
subl
sub
mov
mov
movhps
test
add
xchg
xlat
add
inc
inc
or
dec
repnz
or
add
pop
stos
push
xor
sbb
das
xor
xchg
dec
test
xchg
or
sahf
in
jns
stos
xchg
lock
and
push
or
pop
mov
pop
mov
pop
adc
xlat
test
cmp
insb
iret
push
and
add
mov
daa
xchg
insl
jmp
ret
in
fwait
movsb
sti
stos
shrb
inc
test
sub
lods
adc
rorb
hlt
fistpll
pushf
test
pop
xlat
mov
push
test
imul
push
cltd
sbb
out
sub
cwtl
cmpsb
test
push
sbb
jp
lods
add
and
inc
cltd
mov
hlt
cmc
or
pop
mov
jbe
cmp
xchg
cmc
pop
test
jne
push
shlb
fistl
pop
fimuls
gs
rolb
popa
add
mov
pushf
dec
mov
fbld
jbe
jge
pop
in
sub
sbb
xor
inc
in
ss
mov
cmc
pop
repnz
inc
rol
or
and
mov
lret
add
sbb
dec
xchg
jne
pop
jne
ror
mov
or
scas
push
or
sub
mov
xor
mov
imul
orb
or
popf
inc
inc
dec
adc
jmp
inc
hlt
addr16
das
and
imulb
mov
xchg
add
jge
add
lds
aam
fsubrs
cmp
insb
dec
xchg
hlt
cmp
in
or
mov
xchg
iret
pop
inc
outsb
cwtl
xchg
stc
jle
cli
test
movsb
adc
mov
add
xchg
lods
loop
das
and
pop
xorl
imull
fstps
add
jge
shr
mov
les
jge
and
test
jae
das
jbe
test
push
mov
push
icebp
push
adc
imul
mov
lods
dec
push
mov
cmp
push
jmp
scas
mov
push
fiadds
inc
sub
xchg
insb
mov
repnz
jle
inc
out
or
xchg
mov
pusha
push
pop
int3
cmpsl
inc
mov
shl
jl
ss
neg
push
aad
adc
dec
pushf
xor
imul
add
fisubs
aad
xor
mov
mov
test
mov
inc
sbb
push
rol
pop
cmp
cld
stos
stos
dec
xor
aad
or
xchg
lock
sahf
lcall
xor
dec
cmp
mov
push
mov
push
fldcw
inc
cmpsl
inc
dec
dec
cmp
mov
pop
ds
aaa
rcrl
je
insb
and
dec
or
adc
pop
scas
xor
and
jg
xorl
add
jbe
rorl
dec
loop
xchg
jae
aam
shll
test
or
test
cmp
dec
xchg
dec
pop
dec
push
push
sub
movsb
fcoms
cmp
add
bnd
xor
cmpsl
sbb
jne
inc
xor
outsl
jno
mov
jo
push
je
into
inc
lret
jbe
inc
scas
fld
lcall
fld
inc
and
mov
int
jae
inc
ja
popl
scas
addr16
mov
inc
test
ja
dec
cmp
xor
lock
push
cmp
aad
xchg
test
icebp
add
stc
sbb
testb
rclb
js
xchg
mov
and
push
fisttps
repnz
aaa
add
or
or
push
ret
mov
jae
testl
jb
lock
xchg
inc
and
je
ds
sbbb
aas
xor
leave
dec
iret
push
sbb
lret
jecxz
ficoms
xchg
mov
sub
dec
pop
mov
fwait
dec
mov
insl
dec
xor
push
adc
out
les
cmp
sbb
xchg
adc
mov
push
enter
mov
gs
lea
fdivrl
insb
in
imul
mov
adc
xor
adc
ja
adc
jbe
push
daa
stc
add
sub
adc
mov
movsl
and
jg
pop
dec
jle
or
inc
xor
repnz
mov
clc
sbb
cmp
or
sbb
cmpsb
jp
fildll
aad
outsb
sarb
mov
ja
inc
mov
fs
xchg
in
pop
and
cmp
cli
xor
inc
push
es
xchg
addr16
nop
sub
or
inc
scas
push
dec
rcrl
cltd
sub
data16
sub
cltd
aad
cld
scas
ja
pop
leave
das
sub
dec
test
push
sub
ret
dec
mov
stc
lret
pop
or
inc
pop
mov
adc
cs
mov
sub
inc
sbb
test
jbe
push
cmc
mov
orl
xor
popf
mov
inc
mov
dec
jmp
das
pusha
idivb
fcmovnbe
xchg
int3
or
add
jmp
aas
adc
or
sub
aam
xor
or
outsl
shrl
enter
icebp
stc
pop
out
fcoml
add
pop
shlb
sbb
aad
inc
cmc
loope
xchg
mov
push
sbb
sbb
jmp
dec
pop
dec
iret
jb
add
aas
les
inc
scas
xor
icebp
and
outsl
mov
ret
push
stos
lds
out
push
jl
daa
adc
mov
push
stos
jne
xchg
int
sub
sub
xchg
adc
std
mov
pop
shlb
jbe
mov
or
jg
insl
inc
xchg
add
pushf
ret
or
mov
insl
repnz
addr16
inc
sub
adc
sbb
dec
jge
inc
loopne
adc
push
or
or
push
test
dec
ss
in
sbb
pop
mov
inc
inc
mov
push
push
jl
or
xor
sahf
ja
or
xor
subl
adc
pusha
and
xor
adc
lock
lods
and
adc
je
pop
aaa
xchg
insb
pop
cmpsl
adc
dec
in
jae
or
addb
jmp
pop
aaa
xchg
lret
lea
sar
push
dec
ret
mov
jns
je
sbb
and
sub
mov
adc
int
jge
inc
and
out
das
xor
jae
mov
aam
mov
jo
negl
add
mov
mov
mov
hlt
shll
ret
jg
jo
push
inc
mov
and
push
aam
je
jg
dec
push
shr
push
dec
rcll
push
fucom
cmc
cmp
mov
or
mov
pop
mov
push
cmc
push
test
iret
push
add
pop
loope
cmp
jne
test
sub
les
xchg
ja
aad
add
aaa
out
add
ds
pop
xlat
aas
cmp
test
fsubrs
dec
js
repz
mov
addr16
rorb
and
sti
cmp
and
jge
stc
push
popa
inc
xor
int3
call
notb
mov
sarl
push
leave
aad
pop
shrl
lahf
loopne
cld
xchg
sahf
xchg
cld
loop
mov
in
sbb
lret
xor
pushf
dec
inc
mov
inc
lods
inc
and
push
mov
jne
and
xchg
jle
and
repnz
xor
inc
test
imul
roll
pop
jo
sbb
sbb
aaa
mov
mov
out
scas
out
lods
inc
adc
adc
dec
fidivs
mov
out
dec
mov
sbb
push
adc
cld
mov
dec
loop
es
inc
inc
xor
xchg
out
add
daa
in
sub
xor
mov
jmp
rcr
outsb
or
push
loop
scas
cmpb
inc
imul
xchg
push
insb
cwtl
dec
in
sbb
mov
lods
sbb
and
in
fbstp
push
leave
mov
icebp
adc
dec
arpl
mov
xchg
dec
icebp
cmp
sbb
movsb
enter
push
sub
addr16
and
sti
test
sbb
rclb
sub
or
bound
jge
xchg
stc
mov
jl
xor
mov
enter
dec
ja
aaa
mov
test
sub
xor
scas
sarb
in
xchg
inc
es
xor
lahf
hlt
dec
adc
aaa
push
mov
cmp
push
popa
inc
sbb
or
xchg
xor
dec
pop
sub
mov
sub
inc
hlt
test
jg
inc
and
pop
repnz
es
dec
jp
push
es
dec
aam
fsubrl
pusha
outsb
jp
pop
adc
gs
mov
mov
mov
cs
xor
jae
mov
push
gs
cmp
inc
cwtl
pop
mov
movsb
imul
aas
int
xor
inc
adc
push
aaa
mov
fprem1
nop
cmpsl
insb
pusha
inc
scas
cmp
add
aam
lret
jle
adc
mov
into
pusha
insl
xor
aam
dec
add
push
test
pop
pop
sbb
adc
cmp
adc
cmp
test
inc
fisttpll
enter
ja
inc
xchg
nop
mov
cmc
orb
inc
das
mov
pop
enter
xchg
adc
jae
push
mov
aad
push
xor
dec
cwtl
jmp
sub
cltd
xchg
adcl
mov
dec
dec
cmpsl
push
add
adc
imul
add
add
sbb
aaa
jge
movsl
adc
lods
js
pop
push
cwtl
and
fildl
jno
cmpsl
and
and
sbb
inc
clc
sub
gs
mov
push
dec
push
es
leave
cmc
mov
stos
lea
ljmp
push
lcall
mov
mov
adc
mov
test
out
cmp
stos
jns
push
cld
xlat
stos
adc
push
sbb
iret
mov
mov
jo
notl
pusha
test
sbb
call
and
repz
pop
jne
and
bound
fwait
xchg
dec
testl
inc
mov
outsb
fs
lds
xor
or
mov
adc
lds
jne
cmp
outsb
adc
mov
addl
stc
pop
lcall
jb
test
ljmp
es
inc
adc
enter
lret
out
lods
mov
loop
bound
jb
mov
test
test
maxps
adc
lods
cmp
dec
cld
mov
leave
pop
dec
sub
mov
mov
jne
pop
sub
mov
es
jo
push
mov
shrl
scas
outsl
xor
pop
or
ret
jne
push
shl
lock
add
out
int3
aad
aas
jl
fmull
or
pop
mov
push
push
push
test
mov
lock
mov
add
inc
sub
push
test
cmc
push
add
cmp
or
lds
hlt
gs
fistps
jno
sbb
dec
xor
bound
mov
idivl
cmp
into
loopne
div
cli
movsl
mov
outsl
sub
sub
aad
rcrl
mov
mov
dec
cmp
fidivl
cmpsb
in
mov
dec
cmp
not
outsl
roll
inc
pop
int3
sub
call
inc
stc
push
in
fldt
sbb
es
aam
dec
push
adcb
stos
sahf
sub
mov
inc
push
xchg
mov
mull
or
iret
sbb
xorb
push
mov
ss
push
rclb
add
lea
xor
xchg
hlt
pop
add
mov
mov
xchg
movsl
pushf
and
test
imul
mov
cwtl
setno
imul
stos
call
mov
sub
daa
mov
push
push
push
sub
fucomip
sbb
stos
inc
in
scas
inc
aaa
push
scas
shlb
test
insb
shll
ja
push
cs
jp
inc
add
sub
insb
pop
sub
dec
xchg
mov
sbb
fiaddl
repnz
mov
lret
dec
jbe
daa
loop
test
push
sub
pop
ret
hlt
mov
sub
popf
stos
dec
pop
dec
cmp
fwait
mov
mov
rcl
test
jb
mull
popa
and
mov
mov
jmp
test
lahf
push
inc
lcall
pop
push
push
iret
pop
pop
int
outsb
sub
mov
cmpsb
lock
les
das
js
adc
fstps
mov
or
xchg
sti
dec
orb
xor
xor
jl
je
in
aam
mov
cmp
js
daa
arpl
inc
push
in
add
shrb
push
xor
xor
aam
push
pusha
xor
inc
fcoms
pusha
dec
and
negb
shlb
pop
pushf
mov
jae
xor
or
push
add
dec
addr16
inc
movsb
int3
mov
sti
test
cmp
jae
inc
cmp
repnz
inc
in
out
jae
and
test
ret
test
lods
fstpl
dec
cmp
stos
xor
pop
test
lods
push
jns
aaa
mov
adc
lods
jge
je
sub
loope
sbb
adc
andb
xor
xor
dec
adc
hlt
cld
mov
hlt
jns
scas
sbb
ljmp
aad
push
outsb
or
add
stc
stos
jmp
xchg
pop
jg
andl
jg
sub
or
scas
sub
lea
ficomps
insl
and
mov
mov
mov
outsb
mov
and
jle
add
dec
sbb
dec
fimull
or
or
add
roll
add
xor
lock
adcl
leave
or
adc
cmpsb
icebp
sti
adc
lods
xor
frstor
push
pop
pop
mov
divl
cmpsb
cwtl
dec
dec
rclb
ret
adc
pop
je
ret
mov
xor
pop
pop
imul
gs
sbb
mov
xor
push
or
cmc
fld
or
in
call
jno
cmpsl
fildl
pop
aam
sub
fisttps
jo
ret
mov
fildll
cmc
mov
mov
xchg
jp
jge
xchg
or
in
iret
std
mov
or
aaa
rclb
lcall
in
cmp
rclb
mov
dec
movsl
mov
push
pop
and
aas
dec
lock
xor
and
negb
mov
add
lret
xor
xchg
mov
jbe
out
outsb
adc
out
aam
test
mov
div
push
cld
pop
dec
inc
les
daa
xor
in
ret
icebp
jnp
mov
ljmp
ja
inc
dec
mov
inc
cmp
enter
cld
cmpl
inc
test
fsubl
adc
call
dec
idiv
mov
test
pop
or
les
test
mov
leave
push
mov
ds
aam
outsb
pop
inc
mov
test
mov
fwait
jbe
ja
mov
adc
xchg
arpl
lock
arpl
and
mov
hlt
iret
dec
adc
push
fildll
movsl
rcrl
insl
pop
cmp
aad
bound
xchg
outsb
jo
cmp
mov
dec
clc
scas
xchg
lods
imul
js
call
aad
mov
int
jne
push
jne
pushf
lea
jg
test
aas
fnstcw
je
mov
adc
push
test
inc
stos
mov
push
cmp
inc
pop
jl
out
scas
test
dec
cmp
adcl
fs
sbb
cmpsl
lods
shrb
push
pop
ja
imul
stos
sub
or
cmp
scas
dec
aaa
xchg
push
xchg
push
leave
lods
sub
cmp
das
fwait
push
dec
pop
cltd
cs
sbb
testl
sti
xor
lods
lods
mov
test
or
out
cmp
movsl
xorw
ljmp
mov
push
cmc
fidivrs
cmp
push
jo
pop
xor
stos
sub
test
pushf
mov
test
adc
push
inc
ds
mov
cmp
nop
out
mov
cmp
sti
push
aam
jae
mov
testb
in
aad
inc
sbb
mov
mov
or
push
mov
adc
jae
mov
mov
rcr
jmp
lods
push
movb
jecxz
imul
sahf
sbb
push
rorl
xor
pop
and
push
arpl
jns
fisttps
mov
sbb
insl
aad
dec
lock
xor
xor
dec
fbld
aam
outsb
inc
sub
push
jp
or
adc
stos
sbb
mov
sbb
mov
dec
test
lret
punpckhdq
aas
jge
cmp
inc
jp
mov
inc
mov
outsb
jl
mov
mov
insl
cld
test
cltd
inc
ficoms
and
lret
add
lret
inc
cld
test
es
mov
jae
jg
sar
data16
push
fisubs
pop
adc
inc
pop
sbb
jge
pop
sarl
shrl
aad
sbb
jns
cmp
push
xor
adc
push
xchg
lods
ficomps
in
add
inc
jns
xchg
xlat
pop
dec
inc
lods
push
out
pop
adc
cltd
test
jns
push
sbb
mov
pop
jg
fs
mov
daa
xchg
idivb
xchg
mov
dec
sub
iret
jo
pop
mov
jb
bound
ret
scas
xlat
xchg
lea
fstps
mov
loopne
mov
push
inc
mov
das
fs
cmpsl
inc
pusha
iret
inc
fmull
and
rolb
divb
dec
mov
rolb
push
cmp
fmull
shll
inc
lcall
fidivs
sub
dec
test
or
xchg
sbb
into
sbb
xchg
inc
popa
ret
adc
push
fidivrs
or
adc
ja
insl
test
push
xor
call
xor
je
xor
inc
icebp
scas
rcrl
leave
xor
mov
mov
and
dec
push
sahf
negl
fisubrl
mov
or
sub
gs
xorl
jnp
mov
jno
mov
inc
jno
addl
mov
mov
inc
cmc
outsb
mov
cld
rorb
mov
or
mov
xchg
adc
icebp
rcr
cltd
lea
jne
inc
shl
loope
cld
jno
adc
sahf
jno
insl
fwait
push
push
pusha
imulb
aad
sbb
hlt
inc
dec
mov
mov
dec
add
mov
dec
cmp
xlat
sub
push
sbb
pop
fs
xchg
repnz
mov
and
int3
stos
out
ja
and
lock
dec
dec
sahf
stos
jmp
sbb
enter
rcrl
shrb
ret
jne
nopl
cmp
mov
add
pop
add
movsl
into
pop
test
loop
dec
mov
mov
aam
test
and
push
stos
fisttpl
mov
pop
outsb
push
sub
jns
inc
scas
inc
mov
or
ja
pusha
and
cmp
add
stos
int3
jne
mov
adc
shl
mov
sub
stc
test
mov
ret
pop
sub
cmp
cmp
stos
cld
in
lock
dec
dec
push
pop
fsubrl
mov
xlat
jge
imul
mov
dec
lret
rolb
fsubrl
mov
int3
mov
popa
aad
ss
fldenv
shll
sub
sub
fistps
mov
stos
fdivs
xchg
adc
mov
mov
insb
xor
test
pop
adc
sub
adc
pop
cmp
inc
push
dec
push
push
loopne
or
fsubl
test
ficompl
outsb
stos
aaa
pop
mov
test
divl
call
test
mov
mov
jg
jl
inc
hlt
dec
mov
frstor
iret
sub
adc
adc
inc
test
mov
sahf
int
mov
sbb
ds
adc
movsl
cmp
adc
xchg
dec
inc
rorl
add
add
fcomip
movsb
stos
push
loopne
xor
popf
lret
sarb
divb
mov
jns
dec
sub
movsb
pop
xchg
pop
mov
xchg
jmp
inc
out
or
dec
adc
loop
add
testb
push
es
imul
mov
adc
ret
test
mov
xchg
pop
iret
push
add
push
adc
mov
mov
push
ret
fdivs
mov
fdivrs
aaa
mov
test
scas
push
push
or
ret
add
pop
in
adc
outsb
in
cmc
dec
loop
sub
xchg
xchg
hlt
icebp
cmp
jnp
fstpl
pop
jle
sbb
mov
add
inc
mov
xlat
stos
cmc
mov
adc
sub
int
pop
and
test
fbld
out
rclb
addr16
jb
cmpl
jno
inc
outsl
shrb
mov
sub
pop
mov
xchg
lea
sub
subl
dec
sti
leave
xchg
sub
xchg
pop
lods
int3
sbb
lret
xorl
insb
xchg
cmc
mov
lahf
jnp
out
push
xor
jae
inc
cmc
add
lret
pop
push
xor
movsb
stos
inc
add
xor
nop
xor
test
test
test
cli
adc
pop
aam
stos
mov
push
pop
sub
xchg
dec
in
repz
in
in
push
aas
je
jne
ss
dec
fstp
pusha
sub
les
push
imul
pushf
hlt
outsl
ret
cmp
popa
dec
dec
and
sub
into
jne
push
aad
repz
int
mov
xchg
sbb
cmp
dec
cwtl
dec
mov
stos
divb
mov
adc
adc
or
sbb
mull
roll
pop
mov
jno
cli
jmp
pop
imul
or
rolb
add
mov
push
pop
fistl
mov
scas
cmp
int
dec
xchg
dec
lret
std
pusha
jmp
xorb
movsb
sub
insl
out
and
sub
mov
nop
stos
or
pop
jb
dec
lods
movsb
dec
repnz
dec
pusha
sub
push
xor
shld
enter
call
ffreep
enter
dec
xchg
cld
mov
pop
inc
aad
les
xor
hlt
jmp
sub
repnz
fidivl
das
lret
stos
push
xchg
outsl
adc
dec
pop
inc
dec
inc
stos
cli
das
loope
lret
jo
xor
cwtl
jmp
mov
pop
jecxz
rorl
testl
jb
and
ljmp
jo
add
enter
cltd
jnp
fwait
xor
jmp
sahf
rolb
ja
inc
icebp
sub
xor
cmc
and
pop
jle
dec
test
lret
adc
data16
push
mov
fsts
cli
into
mov
xor
je
lds
push
xchg
pop
sub
cmp
das
fistpl
aam
loope
mov
inc
and
mov
xor
mov
inc
dec
cmp
mov
push
sub
fcoml
jl
mov
and
out
cs
sbb
xchg
sub
cmpsl
cli
push
outsb
cmc
in
subb
sbb
pop
cmp
test
dec
arpl
test
jmp
in
movsb
jmp
push
jne
xchg
imul
getsec
ret
push
xlat
xchg
and
test
loope
imul
and
shll
pop
add
aaa
imul
test
mov
add
pop
jns
daa
icebp
and
jns
push
add
setno
imul
sbb
fldenv
scas
sub
and
push
sub
pop
mov
or
inc
imul
or
pop
notl
jge
mov
sub
push
popf
jmp
mov
push
or
cmp
loop
stos
rcrl
or
cmpsb
inc
xor
xchg
loopne
cmp
mov
das
leave
mov
add
dec
aam
add
cmc
pop
or
stos
pusha
xor
repz
inc
pop
int
ds
add
dec
inc
or
inc
adc
or
inc
repnz
add
mov
das
dec
and
filds
inc
mov
popa
xchg
testl
dec
add
icebp
cmp
nop
inc
leave
cmp
dec
xchg
jge
out
inc
cltd
and
or
and
xchg
int3
enter
pop
jns
aas
daa
out
mov
inc
mov
idiv
or
sub
mov
jge
inc
cwtl
inc
negl
test
push
push
cmpsl
mov
and
rclb
hlt
xor
hlt
pop
dec
push
add
push
bound
test
inc
aam
inc
outsl
outsb
inc
test
push
jae
inc
mov
lret
es
xchg
sti
mov
jo
mov
push
xchg
xor
notb
sub
nop
cmp
leave
les
frstor
mov
in
fwait
call
push
fistpll
add
dec
filds
inc
or
add
dec
jae
rcll
sub
inc
and
lds
mov
push
cli
lret
test
in
inc
push
adc
call
adc
dec
lret
js
roll
insb
repnz
mov
adc
pop
test
stos
cltd
outsb
addr16
clc
push
lea
xchg
push
outsb
in
das
test
fidivrs
pop
scas
adc
js
js
fbstp
push
pusha
xchg
push
inc
aas
das
pop
cld
add
test
iret
adc
pop
dec
imul
cmpsl
adc
cmc
mov
xlat
jp
cmp
sbbb
xorl
aas
cmpsl
cmp
inc
cmp
inc
mov
push
or
push
dec
or
xor
test
mov
adc
add
adc
xor
dec
mov
sbbb
dec
ds
subb
and
adcb
aad
jg
xor
aaa
xchg
add
inc
push
sbb
and
icebp
mov
xor
cmp
fcmovnu
sub
fs
movsl
adc
stos
jnp
push
cltd
rcrl
inc
add
aaa
and
mov
mov
inc
xchg
xchg
arpl
std
out
ret
mov
adc
imul
sbb
test
jbe
sbb
jo
xor
int3
lods
je
in
push
mov
outsl
sahf
rorl
pop
mov
int3
push
add
sub
cltd
orl
push
mov
inc
xchg
repz
add
dec
sub
sbb
push
movzwl
xor
push
pop
mov
sub
mov
xorl
cmpsl
sub
fs
or
push
cmp
pop
dec
dec
pop
shlb
hlt
inc
fcmovbe
mov
sbb
imul
sub
popa
mov
stc
xor
cmp
sub
inc
arpl
mov
cmpsb
add
push
das
push
cmpb
lcall
mov
cmp
popa
jp
sbb
cmp
push
push
inc
xor
mov
aam
sub
cld
mov
cmp
fmuls
test
jge
aam
mov
sub
and
int3
lock
sub
fldl
jne
or
jae
sub
repz
inc
push
sub
xor
testb
testb
inc
push
insb
lock
repnz
lds
lds
fdivl
jae
dec
xchg
pop
rcrb
lea
xlat
aad
sub
jo
je
repz
pushf
mov
test
jae
hlt
mov
hlt
lret
gs
push
inc
cs
cmpsb
out
imull
scas
inc
push
and
sub
cli
aad
jg
dec
lret
xor
add
aam
stos
xor
sub
xor
test
cmc
sarb
ljmp
add
sbbb
stos
and
xchg
push
mov
mov
and
outsl
mov
aam
push
ja
aas
pop
inc
xchg
movsl
inc
cli
cmpsb
lret
push
aaa
into
mov
fidivrl
mov
jmp
inc
lods
sbb
mov
inc
enter
daa
es
xor
test
jge
inc
jns
jnp
xchg
sub
xchg
add
fsts
push
iret
mov
stc
and
mov
int
notb
push
lock
adc
test
ds
jg
nop
fisubs
adc
xor
mov
lods
jp
jbe
mov
aad
std
push
gs
test
insb
and
lock
inc
jnp
repz
add
test
negb
jmp
les
je
je
mov
in
dec
outsl
push
out
sti
iret
lods
push
aaa
jl
adc
push
xchg
sbb
movsb
xor
scas
int3
ja
mov
push
or
xchg
jae
xor
pop
cmpsb
xlat
dec
negb
xor
mov
inc
inc
and
pop
imul
cmp
fdivs
aad
push
push
adc
dec
ds
push
adc
and
push
jl
cmp
adc
jo
inc
stos
out
ds
lock
mov
faddl
add
test
jbe
xchg
imul
inc
out
gs
or
pop
inc
jg
inc
jmp
fisttps
int
imul
outsb
inc
bound
sub
sahf
cld
adc
daa
xor
sub
les
push
pandn
movsl
dec
jp
repz
adc
lods
repz
or
jg
sub
test
call
in
insb
xchg
in
rcrb
cwtl
shlb
pushf
insl
mov
sub
frstor
add
cmp
dec
pop
hlt
shrb
aaa
cmp
adc
test
cld
jge
les
cmc
aas
inc
test
insb
cmpl
ret
xor
rsm
push
enter
push
sub
and
fcmovnb
das
pop
rolb
shl
mov
pusha
sahf
insl
sub
jl
push
inc
ja
mov
je
jge
push
test
lods
fimuls
sub
in
shlb
mov
stos
lds
stos
mov
cmpsl
sbb
push
das
jo
mov
adc
ss
cmpsl
pop
rorl
jle
imull
mov
jg
xor
cmpl
addl
cmp
inc
subb
push
loope
loope
push
pop
pop
dec
push
mov
jne
cltd
inc
lcall
leave
imull
jmp
cmp
inc
adc
xor
fisubs
imull
test
fwait
cmp
bound
inc
fisttpl
xchg
mov
dec
sbb
add
mov
cmpsl
repnz
icebp
outsl
movsl
aam
pusha
cmc
and
xor
cwtl
jle
pop
adc
xchg
rorl
push
sbb
sahf
pop
aaa
mov
addl
lret
or
mov
in
xlat
rorl
mov
mov
leave
inc
popf
lds
mov
cmp
je
mov
pop
in
xchg
mov
int
cld
inc
clc
xchg
imul
dec
adc
aam
adc
cmp
loop
data16
ljmp
or
mov
ret
pop
fmuls
mov
sbbl
push
insl
push
xor
incl
dec
jp
mov
mov
jmp
int
enter
loopne
repz
idivl
dec
ja
xor
scas
pop
into
mov
push
jg
lcall
inc
aaa
into
or
sub
addb
mov
mov
aas
rcrl
push
sub
cmp
ret
aad
cmp
rorb
pop
push
mov
mov
xlat
aam
lret
pop
adc
sahf
mov
mov
pop
addr16
xlat
movsb
jno
xor
xor
cmp
dec
push
xor
cmp
movsl
hlt
mov
fcom
add
lods
push
fwait
imul
std
lea
push
push
xchg
push
jbe,pn
inc
push
js
repz
pop
pop
add
das
pop
push
adcb
movsl
jns
inc
pop
mov
lahf
gs
mov
ja
cmp
xor
test
inc
ss
iret
test
xchg
ds
and
jecxz
repnz
mov
cmp
jnp
out
push
inc
hlt
je
adc
out
mov
xchg
mov
push
mov
neg
rorl
push
sbb
push
sbb
sti
pop
gs
sar
cltd
rorl
cmc
mov
sbb
mov
ret
inc
adc
mov
clc
cmp
outsb
pusha
add
out
push
ss
mov
les
xor
mov
cmp
push
push
daa
xchg
sbb
cmp
dec
push
adc
adc
sbb
inc
jnp
adc
mov
stos
fmul
cmp
xor
ja
inc
loopne
jne
push
xor
dec
pusha
scas
lea
mov
cmpl
nop
adc
js
test
daa
xor
jle
mov
and
adc
pop
clc
cmp
inc
outsb
mov
sub
jnp
push
mov
adc
fsubrs
sbb
insb
jecxz
cmc
pop
test
push
pop
xchg
popa
dec
adc
lock
js
negl
mov
xchg
sbb
into
dec
push
popa
dec
dec
inc
test
and
jns
cmp
lock
push
je
pop
cmpsb
punpckhwd
mov
mov
cwtl
jo
repnz
icebp
into
cmp
rcr
pop
or
test
pop
sbb
add
ja
fs
std
in
sbb
inc
and
and
mov
in
int
add
and
cltd
xchg
mov
jnp
mov
xchg
xor
aaa
jg
inc
push
into
sub
inc
sub
dec
fstpt
mov
cmp
arpl
xor
pop
das
inc
xchg
fstpl
test
movsb
push
push
inc
bound
add
adc
mov
scas
push
and
dec
lea
lods
mov
sbb
push
mov
xchg
inc
xchg
jmp
test
fidivl
mov
stos
pop
lock
das
xor
sub
or
cmp
xor
adc
lea
jecxz
push
sub
jmp
imul
xlat
test
cmc
jne
or
inc
outsb
fsubrl
movsl
push
shl
xor
adc
inc
mov
mov
sub
ror
or
fisttpl
sbb
xchg
fsubl
arpl
xor
pop
and
movsb
jecxz
int
mov
loope
sub
lcall
fdivl
movsl
ss
or
adc
vmovd
divl
mov
xchg
rclb
push
fsubs
lcall
pop
mov
adc
test
or
add
jae
inc
pop
shrb
dec
clc
pop
testl
push
lret
cmc
hlt
inc
mov
aaa
and
push
mov
xchg
in
or
cmp
test
movsl
mov
pop
inc
dec
fucom
sbb
push
notb
stos
scas
jb
mul
dec
arpl
and
add
mov
inc
mov
pop
lods
test
dec
dec
rcl
mov
jne
pusha
arpl
mov
sub
shl
pop
cwtl
pop
inc
push
inc
ljmp
push
jp
div
mov
lds
movsl
pop
mov
bound
xor
mov
adc
test
imul
pushl
lods
add
cmp
and
jno
xor
mov
add
cmp
push
fwait
xor
in
arpl
pop
sub
ss
dec
adc
inc
push
aaa
adc
scas
pop
decl
stos
and
dec
les
test
icebp
addr16
daa
imulb
mov
insb
cmp
xchg
andnps
test
sub
jg
adc
xor
std
sub
jae
arpl
outsb
mov
stc
pop
stos
icebp
cltd
cmp
enter
mov
stos
stc
mov
sbb
pop
sti
add
test
je
mov
inc
test
inc
insl
pop
dec
std
xchg
test
lock
pop
dec
mov
repnz
clc
pop
mov
pop
jns
push
sub
f2xm1
mov
sbb
xchg
and
imul
push
mov
test
std
jl
jl
mov
adcb
cmp
sbb
filds
push
xor
xadd
int
stos
rclb
add
cmp
adc
arpl
and
mov
in
pop
push
dec
sti
cs
cs
imul
mov
jl
movb
pop
cmp
sub
inc
and
popf
xchg
loop
mov
enter
lods
jne
aaa
and
loope
outsl
xor
out
sbb
adc
dec
js
lds
in
sbb
xor
cmp
inc
ds
mov
mov
jl
xchg
add
mov
test
in
out
inc
xor
pop
dec
inc
aam
mov
sub
imul
shll
lods
sub
arpl
data16
ja
lahf
aaa
imul
cmpsb
lock
data16
les
mov
add
jae
lock
cli
sub
loope
sub
adc
test
dec
sbb
faddp
sbb
aam
popf
and
cmp
fldl
lock
sub
rorl
xor
outsl
ret
fldl
or
scas
jbe
out
cmp
insl
into
xchg
sbb
push
mov
xlat
cmp
mov
or
out
loope
pop
loopne
cmp
movsl
sbb
cmp
mov
add
inc
push
xchg
insb
fists
xor
sbb
push
mull
mov
xchg
dec
test
dec
adc
mov
sub
shl
minps
add
imul
sahf
or
inc
imul
push
mov
aad
cli
push
je
insb
jns
cmc
mov
aam
pop
pop
scas
xor
push
movsb
push
xchg
add
xor
xchg
push
cmp
dec
scas
cmp
hlt
inc
fmuls
ja
push
icebp
adc
ljmp
rolb
mov
adc
inc
iret
int
daa
js
mov
add
mov
nop
arpl
sub
inc
and
sti
lea
out
frstor
std
inc
adc
aam
lds
sahf
ficompl
dec
clc
lods
and
inc
push
xorl
popa
pop
pop
ret
scas
mov
xchg
das
imul
pop
adc
adc
xchg
insb
push
jl
mov
int3
enter
fisttps
push
pop
xor
shll
pop
pop
mov
pop
je
dec
mov
gs
jbe
jge
sbb
pop
mov
ja
mov
in
addr16
inc
jl
mov
jns
xchg
mulb
das
hlt
push
adc
mov
mov
in
jge
pop
cli
push
push
push
adc
aam
insb
lret
mov
xchg
aas
stc
jno
xor
or
data16
aad
and
imul
inc
mov
data16
or
in
fldcw
movsl
xchg
mov
inc
mov
cwtl
iret
fs
fidivrs
inc
rclb
push
mov
xchg
and
sub
cmp
cmp
cmp
call
cmp
or
cmp
mov
or
sub
jl
mov
pop
ret
lea
mov
popa
pop
aam
dec
imul
xchg
fs
pushf
icebp
xchg
in
cmp
sub
mov
repnz
dec
in
iret
adc
or
bound
or
mov
sbb
mov
xor
mov
test
daa
shll
mov
adc
inc
or
and
sbb
insb
inc
icebp
jmp
ljmp
pop
lods
cmpsb
shrl
sub
sbb
les
bound
inc
std
inc
test
push
rolb
icebp
data16
jo
lret
shr
mov
fidivl
movsl
stc
mov
adc
lea
lret
hlt
and
repz
jge
enter
xor
jl
mov
mov
aad
push
popf
mov
sub
pushf
jno
mov
pop
pop
arpl
and
push
xchg
cmc
pop
mov
and
xchg
push
pop
repnz
mov
test
movsb
shl
push
inc
or
mov
and
or
movsl
loope
je
sbb
inc
cwtl
ja
mov
dec
mov
sbb
jp
jb
aad
dec
pop
sub
sub
push
jp
mov
aaa
hlt
jg
push
pop
xchg
test
or
icebp
xor
call
movsb
dec
jbe
xor
mov
ret
idivl
aam
insb
lock
mov
outsb
xchg
mov
mov
dec
mov
cmp
xor
xor
sbb
jne,pt
lds
adc
xor
shll
fcomi
inc
in
mov
sbb
push
aas
ffreep
shrb
lods
std
addr16
pop
xor
jl
dec
or
icebp
and
fidivl
mov
vmread
cmp
or
clc
popa
mov
loope
dec
inc
push
pop
sti
test
xor
das
not
test
pop
jno
in
cld
into
cmp
das
mov
fisubs
in
add
pop
sbb
dec
dec
leave
sti
cmp
loopne
sub
icebp
mov
add
xor
mov
mov
mov
ja
xchg
add
js
push
sub
cli
and
push
and
leave
and
xchg
in
insb
fcmovnbe
xor
jmp
outsb
cs
inc
and
fcmovne
cmpsb
sbb
aad
jne
scas
jl
call
scas
je
jp
or
push
xor
scas
cs
movsb
push
jnp
dec
mov
adc
gs
push
cmp
sahf
push
fidivs
push
inc
out
inc
push
jnp
fwait
test
ret
push
pop
inc
aam
mov
fnstcw
dec
repz
bound
jecxz
jnp
shrl
sub
pop
xchg
cmp
je
sbb
ror
pop
dec
in
jb
inc
fsubrl
mov
adc
dec
cmpsb
das
lods
stc
xchg
fstpt
sahf
push
xchg
xchg
sub
ja
sub
dec
push
sub
ljmp
repnz
add
std
push
inc
adc
jl
lea
lret
xor
rcl
dec
sbb
cmpsl
test
xchg
sub
clc
aaa
lret
xor
xor
shrb
mov
or
mov
int3
xor
xchg
insb
push
repz
ds
sub
pop
test
repnz
xchg
das
iret
push
test
inc
or
push
adc
and
ror
adc
stc
dec
sub
test
test
outsl
stc
mov
psrlq
xor
js
inc
rclb
lret
jne,pt
push
cmp
mov
pop
inc
xor
jmp
xchg
clc
adc
loope
sbb
xor
movsl
cwtl
inc
sub
adc
dec
add
sahf
mov
inc
shl
add
xor
inc
adcl
lcall
cmp
addr16
in
jb
dec
inc
pop
sub
adc
jno
dec
inc
repnz
mov
mov
jae
lods
sarl
outsl
pushf
sub
dec
xor
dec
cmp
test
mov
add
fstl
fstpt
fwait
scas
ret
cmp
xor
cli
dec
inc
sub
sbb
fidivrs
pop
fnsave
aaa
enter
mov
cmp
pop
pop
and
insl
and
and
mov
jnp
lret
in
or
sbb
xchg
js
lock
cs
adc
pop
sbb
test
pop
addb
in
stc
cmp
cmpsb
iret
pop
mov
mov
mov
push
jbe
imul
xchg
ss
sti
aam
cmp
into
scas
push
mov
xor
and
sbb
mov
sar
add
sub
movb
movsl
dec
push
dec
mov
mov
imul
icebp
decb
dec
insl
lret
xor
incl
sbb
loop
pop
lret
stc
xchg
mov
cmc
divl
test
scas
fstl
hlt
cmc
pop
inc
mov
pop
cmc
outsl
xchg
sub
js
mov
jbe
sti
test
sub
sti
inc
sub
lcall
or
mov
aad
and
and
andl
imul
lret
push
mov
cmp
xchg
sub
hlt
es
dec
dec
mov
mov
lock
dec
fnsave
js
dec
dec
in
dec
notb
shrw
jae
mov
lock
mov
int
sub
call
aaa
popa
pushf
and
push
add
pop
or
cli
out
inc
mov
push
out
inc
add
jb
adc
mov
leave
add
jo
push
lock
dec
mov
or
mov
sbb
pop
or
sub
push
in
xor
jno
lahf
hlt
inc
add
data16
movsb
xor
loope
std
cmp
mov
add
jbe
xor
pop
pop
xor
push
mov
dec
scas
fcoms
push
adc
test
adcb
mov
cmpsb
adc
adc
jge
sub
repnz
cmp
jae
xchg
sti
mov
xchg
mov
ja
xchg
pop
mov
or
out
mov
cmp
sub
adc
enter
outsl
jbe
inc
leave
xor
sbb
std
cmp
mov
jge
mov
pop
xor
aad
data16
fdivs
add
notb
push
ret
movsb
mov
vmaxps
sbb
daa
and
popf
xchg
xor
dec
jns
ja
mov
push
loope
ffree
cmpsb
sub
sub
xchg
dec
fnstsw
shl
push
in
fbstp
lods
jle
dec
testb
aas
mov
and
sub
or
nop
pop
or
xor
mov
dec
lock
test
fcomps
add
dec
fisubs
testl
jne
inc
nop
mov
sub
es
fprem
sbb
into
dec
adc
stos
insl
sbb
mov
mov
dec
lret
jo
leave
enter
jmp
sbb
dec
imul
mov
sbb
sub
into
mov
iret
mov
dec
int
pop
dec
sarl
sub
or
inc
sub
xchg
xchg
int
cmp
in
addr16
jae
jl
fildl
es
mov
jp
std
push
mov
imul
pop
jne
jmp
in
out
ror
gs
ss
clc
pop
jns
adc
clc
in
into
mov
sub
cli
or
test
ds
push
cmp
scas
test
or
sub
mov
stos
mov
xchg
outsb
lods
test
mov
out
test
xor
push
dec
ret
imul
dec
adc
mov
dec
loopne
mov
insb
test
mov
movsl
jnp
xchg
and
aam
mov
iret
aaa
adc
sbb
xlat
sbb
icebp
push
or
add
xor
or
cwtl
aaa
push
ret
test
rcr
repnz
fcoms
pop
sub
jecxz
je
adc
leave
pop
inc
out
push
push
and
adc
flds
adc
add
or
fsubs
inc
mov
cld
jge
jne
aam
cmp
pop
or
mov
pop
sahf
shl
dec
test
outsl
push
faddl
push
add
jmp
sub
xlat
popf
outsl
inc
jae
add
xchg
xor
mov
dec
push
arpl
push
roll
jle
inc
add
repnz
cld
rcrb
ret
into
icebp
fs
aaa
test
push
iret
scas
aas
add
test
cmp
ret
sahf
testl
bnd
push
repnz
lahf
pop
sti
in
jno
inc
adc
je
cmc
adc
add
dec
ds
cmp
push
xchg
sub
aad
xchg
add
movsl
sub
movsb
hlt
sbb
arpl
fnop
sub
stc
adc
std
addr16
sub
insb
fprem1
inc
fwait
cmp
mov
xchg
pop
mov
and
inc
xchg
cmp
xchg
mov
int3
stos
std
dec
pop
add
test
push
jnp
lock
push
andb
cmpsb
sbb
push
cmp
mov
lock
xlat
sub
mov
call
mov
stos
xor
jmp
testb
pop
ss
sbb
mov
lahf
repnz
inc
mov
fcoml
std
mov
repnz
mov
pop
jns
stc
and
pmaddwd
cmpsl
sub
or
dec
test
and
adc
mov
lahf
mov
aam
iret
dec
stos
fstps
xchg
jle
testl
xchg
inc
mov
xor
imul
xorb
adcl
xor
enter
sbb
mov
or
mov
inc
cltd
hlt
pop
cmp
punpcklwd
sbb
sbb
gs
pop
pop
mov
mov
lds
dec
xchg
adc
sub
ret
jg
mov
mov
push
or
test
aaa
xchg
stos
icebp
inc
cmp
sbb
inc
inc
inc
mov
mov
xor
mov
jo
dec
inc
cmp
outsb
in
enter
mov
movsb
cmc
jmp
push
cltd
or
je
cmp
aas
shlb
pop
divb
mov
mov
add
mov
fsts
test
adc
lods
pushw
stos
mov
or
lock
inc
lods
ljmp
xchg
ret
addr16
loop
das
in
in
popa
sub
push
push
mov
mov
mov
inc
and
mov
pop
fst
lret
sbb
in
pop
clc
imulb
xchg
cmp
imul
in
mov
sbb
inc
sbb
andb
js
mov
inc
scas
jbe
mov
mov
xchg
test
fucomip
cmp
les
ds
hlt
dec
mov
mov
jbe
inc
cwtl
and
dec
mov
aaa
pop
daa
cmpsb
outsl
stos
sbb
sbbb
or
filds
xchg
cmpsb
pop
popa
ja
or
pop
je
fcmovu
arpl
pop
adc
scas
dec
dec
stos
std
dec
adc
xchg
lds
push
out
xor
fs
in
push
adc
jae
push
sbb
faddl
add
pusha
jne
xlat
out
scas
mov
mov
add
iret
xor
sbb
cld
push
int
push
mov
lret
ds
push
xor
jl
mov
jne
shll
test
dec
sbb
xor
outsb
mov
cli
add
gs
aad
repnz
pop
jo
push
sbb
jle
adc
push
dec
xchg
pop
ss
mov
dec
arpl
sbb
dec
je
lcall
jno
mov
pop
enter
and
push
jle
neg
in
xchg
loope
jge
sbb
xor
repz
test
and
movsb
and
lahf
loopne
enter
dec
xchg
cmp
nop
fmull
inc
bnd
cmp
pusha
sbb
cmp
data16
imul
mov
inc
testb
adcb
repz
in
dec
clc
lds
fidivrs
push
push
add
test
add
mov
clc
popa
lds
mov
sub
lret
xchg
sub
dec
popa
jl
aas
cmc
ret
stos
test
bound
outsb
xlat
pop
movsl
mov
insb
and
adc
mov
mov
iret
push
movsl
jne
xor
push
dec
or
mov
and
scas
mov
pop
xchg
push
aas
adc
popa
cmc
cli
dec
inc
cwtl
movsb
adc
dec
dec
inc
addr16
in
dec
adc
repnz
jmp
xchg
lods
out
pop
scas
xor
icebp
das
shll
repnz
and
xor
imul
and
lcall
mov
lods
mov
adc
inc
je
fs
or
mov
add
in
lods
mov
inc
shrl
mov
mov
dec
idivb
xchg
rcrb
adc
push
push
idiv
sahf
std
cltd
cmp
popf
cmc
cs
pop
jmp
fst
dec
test
and
pop
fistps
push
outsl
inc
mov
cmpsl
fmull
dec
inc
repnz
xor
xchg
cmp
imul
mov
pop
lock
roll
and
fmul
and
test
insb
cltd
mov
lock
lds
out
lock
ja
loopew
ficoml
dec
rcrl
jne
ds
ret
mov
lds
mov
sbb
out
icebp
bound
mov
pop
jbe
mov
enter
cs
daa
push
das
out
aas
pop
cltd
sub
cmp
repz
daa
fsts
rcl
mov
aad
or
and
shrl
hlt
stc
push
roll
loop
mov
add
test
ja
int
mov
jb,pt
sar
rolb
cmp
mov
aas
shlb
sbb
xchg
sti
stos
daa
hlt
imul
sbb
ss
jo
outsb
stos
dec
into
or
mov
mov
push
adc
into
sub
push
lds
daa
sub
scas
lods
mov
and
int3
movsb
mov
stos
cs
sarl
xchg
lcall
lods
das
and
cmp
jbe
mov
sub
int
lret
push
mov
pushf
add
xchg
jp
aas
cwtl
push
sbb
sbb
mov
aam
loopne
inc
jg
dec
call
and
dec
xor
pop
adc
in
stos
cltd
dec
xor
in
je
xor
idivb
imul
scas
ret
sbb
test
xlat
ret
stos
sbb
subl
pop
sub
pop
mov
test
mov
inc
imul
jge
lahf
fpatan
cmp
add
cmc
sbb
insb
stos
aas
int3
dec
pop
xchg
roll
hlt
adc
cmova
push
push
or
push
call
imul
iret
test
push
call
jecxz
mov
out
data16
dec
dec
lods
push
arpl
cmpsb
bnd
fisubrl
add
fldenv
or
lock
inc
loope
xchg
hlt
jbe
inc
popa
xchg
mov
mov
sub
test
sub
lret
add
mov
fwait
leave
movsl
mov
pop
addb
sbb
icebp
scas
adc
inc
mov
mov
lock
outsl
cmp
repz
jbe
sub
xchg
sbb
stos
inc
aaa
adc
inc
inc
push
int3
xor
aad
pop
cmc
sar
add
in
out
sub
inc
pop
xchg
fs
leave
cmp
sbb
stc
rorl
jmp
jmp
inc
jne
call
aam
lock
and
movsb
subb
pop
testb
sbb
add
add
iret
sarb
lods
insb
add
shrb
adc
lahf
mov
shrl
notl
fstpt
push
mov
push
lea
scas
inc
lods
dec
lret
fcompl
sub
lds
xchg
sub
sub
stc
jp
and
cmc
fucomp
dec
test
mov
inc
dec
pop
jns
shlb
rorl
mov
sbb
jge
xor
pusha
or
jbe
pusha
push
cmp
and
jbe
xor
sub
pop
push
lock
movsb
inc
ret
adc
inc
sbb
xor
scas
mov
lock
mov
int3
rolb
sub
nop
mov
push
mov
and
inc
sub
lret
lds
cli
lds
pop
out
lods
xchg
mov
or
rcll
pop
les
mov
adc
push
es
mov
fcmovb
insl
repnz
jbe
and
xchg
ret
inc
shlb
add
test
pop
pop
adc
add
ret
push
les
or
mov
aaa
mov
enter
in
sub
or
sbb
dec
inc
iret
enter
mov
sti
test
insb
adc
xor
fnsave
inc
and
push
femms
je
lock
mov
mov
fdivrp
loopne
aam
dec
jne
cmp
movl
mov
into
stos
jns
imul
inc
dec
idivl
mov
lock
dec
sbb
add
jne
mov
sbb
lret
mov
aaa
dec
xor
movsl
push
loopne
iret
test
imul
cmpsl
pop
fmull
test
xor
ss
cmp
pop
aad
jecxz
cmpsb
xor
or
jge
iret
mov
inc
pushw
and
inc
lods
stos
popl
pop
dec
push
fldt
lock
mov
mov
or
rolb
nop
je
sti
popa
lds
andb
mov
jle
xchg
iret
shrb
xor
daa
push
jl
pop
pop
stc
jb
dec
popf
out
sub
dec
cld
xor
filds
push
xchg
xor
lret
lock
adc
repnz
mov
ds
push
scas
or
fbstp
in
icebp
pop
in
push
test
push
out
outsb
xor
cmpsl
jbe
fsubp
ret
pop
ret
mov
push
mov
scas
and
fmull
adc
adc
je
gs
imul
mov
sbb
xorl
mov
cmp
mov
xor
test
push
fsubs
and
sbb
sbb
aam
lahf
pop
mov
xor
lock
call
outsl
add
loopne
pop
inc
pop
movsl
mov
xor
jb
sahf
sub
shrb
test
fs
mov
push
repz
aas
adc
adc
xor
push
in
mov
cwtl
push
push
das
divl
adc
ljmp
sarb
roll
inc
loopne
lods
incb
movb
lahf
lds
and
push
add
jno
testl
lahf
xchg
cld
adc
mov
cmp
add
adc
fadd
or
mov
movsb
push
push
fstpt
dec
xchg
sbb
inc
addb
xchg
mov
call
cld
lock
cmpsl
and
das
push
xchg
adc
nop
lods
mov
xchg
xchg
pop
aad
mov
mov
pop
mov
dec
aas
sti
mov
xchg
dec
cmpsl
pop
cs
pop
loop
sub
stos
cmpsl
or
mov
jb
aam
pop
cmp
mov
mov
push
add
cld
xor
fs
scas
outsb
push
out
repz
test
ss
add
addr16
outsl
adc
add
shr
push
jns
sar
push
pop
loope
pop
or
idivl
adc
inc
dec
fiaddl
aas
cli
adc
pop
stc
and
movsb
inc
mov
test
pop
adc
push
shrb
cs
aad
push
rorb
into
xor
sub
dec
aas
and
fdivr
pop
loop
outsb
lret
movsb
dec
js
rcrb
push
cmp
inc
mov
cli
push
adc
test
sub
mov
imul
aaa
jp
xlat
dec
jae
aam
mov
xchg
and
shlb
insl
test
inc
jecxz
and
push
jns
in
cmp
shll
jecxz
addb
xchg
lods
scas
std
and
in
lods
mov
in
movl
and
mov
sub
mov
loop
out
lret
cmp
mov
imul
scas
sub
icebp
notl
dec
jp
and
cmpsl
inc
testb
mov
aaa
inc
sbb
mov
xchg
push
jmp
cld
jle
inc
aad
data16
adc
xlat
iret
bound
stos
or
mov
xor
aad
lahf
lods
sbb
dec
mov
add
leave
or
popf
insl
xor
fwait
adc
cmpsb
outsb
rorl
inc
rcll
inc
xor
shrl
mov
pop
jle
cltd
mov
mov
pop
stos
xchg
add
sbb
cltd
sub
adc
int
sub
push
std
mov
jne
or
test
dec
add
mov
ret
mov
call
push
lock
mov
mov
ret
xchg
movsb
inc
aaa
pop
das
ficompl
mulb
sbb
cmp
lcall
lret
clc
pop
sub
stos
rcrb
inc
fwait
mov
test
inc
add
push
cmp
xor
adc
inc
pop
int
insb
sub
pop
lret
dec
movsl
push
pop
cmpsl
fldenv
fcomp
and
imul
loope
cmp
ds
xlat
sub
adc
xchg
scas
xchg
loop
arpl
ljmp
imul
push
sub
push
ja
jp
test
sbb
stos
mov
bound
jecxz
dec
sti
inc
arpl
pop
and
cmp
fsubs
push
insb
mov
pop
stos
jne
or
push
cltd
cmp
loop
mov
add
pop
xor
js
cmp
dec
rorl
out
icebp
jg
sub
jno
mov
movsb
sub
cmp
adc
mov
add
repz
pushf
sbb
dec
push
sbb
test
loopne
pop
pop
aam
add
pop
test
pop
push
cmp
stos
aas
ja
in
cmp
inc
adc
repz
cli
mov
repnz
outsl
imul
fistpl
pop
jb
cmc
and
stos
or
sub
subb
sbb
scas
shlb
scas
push
sub
sbb
lock
mov
ret
mov
testl
ret
mov
ljmp
fildll
cmpsl
adc
add
jle
and
mov
xor
jmp
and
xor
ja
pop
imul
pop
inc
das
sbb
xchg
in
cmp
fimull
stos
dec
aad
pushf
lock
in
lock
mov
out
cmpsb
lock
push
sub
pop
or
movsl
cmp
mov
and
aam
orl
lret
sbb
fcompl
test
pop
xchg
hlt
push
lods
fstl
xchg
andl
not
inc
lods
adc
shll
inc
sub
divb
jge
mov
fcompl
cmp
cmp
fcmove
movsb
dec
dec
sbbb
pop
rcr
jbe
sbb
or
aad
mov
sub
lea
insb
test
adc
cs
mov
test
test
test
dec
mov
jg
adc
add
or
pop
adc
push
inc
dec
mov
dec
pop
or
cmp
sbb
cwtl
pop
movsb
sbb
push
ja
fwait
lods
adc
inc
xor
cld
div
dec
lcall
xor
orb
adc
inc
repnz
js
xor
sub
adc
jg
add
mov
sbb
repnz
fisubl
aas
sub
ds
les
mov
mov
subl
mov
xor
cmp
mov
fcmovnbe
lods
pop
outsl
dec
cld
ret
test
pop
mov
add
sbb
scas
dec
sbb
hlt
xchg
lods
popa
rorb
lods
sub
mov
imulb
insl
sbb
dec
add
addr16
loope
mov
aaa
rcll
adc
enter
xor
test
lods
xor
scas
and
push
es
inc
sub
sbb
int3
in
pop
je
lods
lret
lret
scas
cmp
ret
cmpsb
sbb
jns
rcll
cmc
jle
xor
mov
mov
orb
push
je
mov
and
roll
ja
fdivrs
sbb
xchg
add
xchg
idiv
sbb
adc
imul
addr16
sbb
loope
out
pusha
fs
cmc
stc
push
cltd
xchg
sub
sub
aaa
fisttpl
testl
xor
cmp
int3
xchg
lahf
pop
stos
xor
add
ret
lods
ds
mov
push
dec
addl
insb
hlt
jle
mov
adc
pop
das
jo
inc
dec
mov
or
ret
sbb
cmc
pop
lret
cmp
xor
sub
sti
aam
push
xchg
pop
sbb
and
enter
leave
out
push
ret
push
repz
ficompl
and
out
mov
idivb
movsl
fnstenv
aam
adc
data16
jp
xchg
and
xor
sub
xor
dec
imul
xchg
stos
adc
xor
loopne
aaa
and
decl
dec
roll
imul
xor
mov
shll
add
pop
inc
ret
ret
adc
sub
call
es
rorb
rcrb
aam
rolb
scas
sbb
jbe
mov
jge
inc
pusha
leave
mov
lods
sbb
xlat
jg
push
fistps
out
pushf
movsb
jns
shlb
clc
in
mov
inc
addr16
pop
sbb
in
pop
cld
push
test
sub
mov
lods
cmp
dec
hlt
aad
sub
je
cmp
jp
fldenv
cli
xor
ret
hlt
mov
stos
push
dec
pusha
lcall
mov
add
jge
dec
subb
sahf
inc
aas
push
pop
cmp
dec
aaa
cwtl
push
repnz
push
cmp
sarl
inc
and
sub
inc
push
cmpsb
inc
insb
adc
add
inc
push
inc
push
out
xchg
and
xchg
lcall
mov
fsub
sbb
inc
cltd
leave
and
outsl
push
aad
negb
sub
lea
es
test
test
fstpl
mov
sub
mov
stos
xor
in
hlt
adc
aaa
ror
push
test
mov
lahf
xchg
test
filds
inc
push
jae
jp
or
outsl
cmc
lret
std
push
movsl
test
fildll
xor
push
sbb
sbb
ds
push
sub
loopne
mov
dec
or
test
dec
sti
stc
adc
xchg
inc
lock
fs
mov
aas
icebp
data16
push
icebp
test
jl
sbb
dec
inc
jmp
sub
adcl
inc
bound
inc
push
jp
pushl
sbb
and
loope
movsb
test
test
ds
dec
leave
xchg
bound
xchg
mov
rcrl
das
pusha
dec
sahf
je
stos
push
mov
hlt
inc
cmp
cmp
cmp
or
cmc
cmc
enter
push
scas
movsb
insl
das
dec
cmp
mov
lods
testl
fstps
cmp
leave
jno
sub
sar
gs
push
cmpl
adc
and
add
and
in
adc
test
jg
aaa
test
ret
repnz
push
mov
inc
xor
neg
mov
inc
nop
fidivl
jmp
cmp
sbb
or
sbbb
adc
xchg
inc
arpl
lea
in
adc
stos
shll
pushl
aaa
loope
popa
mov
pop
and
push
outsl
test
fsubrp
jno
in
xor
mov
xchg
add
jno
pop
scas
mov
ja
or
sbb
andl
cmp
push
fsubrl
mov
hlt
xor
jne
xor
cmp
sti
sbb
lods
test
inc
mov
mov
or
cmc
pop
xlat
rorl
imul
test
xor
and
xchg
mov
mov
jl
mov
dec
add
push
lret
and
imul
or
pop
sub
mov
and
jmp
jne
dec
stc
nop
fisttpl
xor
mov
mov
fimull
nop
faddl
push
call
fcomi
test
sub
stos
xor
cmpsb
std
fildll
mov
push
inc
movsb
sub
test
lahf
push
inc
inc
jae
sbbb
icebp
mov
add
inc
inc
dec
repnz
pushf
inc
xor
gs
sti
jns
inc
pop
sub
mov
cmp
push
pop
push
sbb
inc
xchg
fldenv
sub
into
mov
dec
aas
ds
aad
inc
xchg
std
xor
subl
or
sqrtps
je
dec
dec
jns
fdivr
dec
adc
inc
jb
testl
popf
cmpsb
ret
adc
mov
daa
pop
ss
sub
sbb
mov
pop
loope
and
adc
scas
pop
or
xor
push
inc
cmp
push
jnp
dec
sub
cmp
xorb
inc
fcom
fiadds
movsb
xchg
mov
mov
mov
pop
jl
scas
ss
xchg
xor
xor
cwtl
rcrl
xlat
repz
mov
negb
pop
fdiv
push
cmp
not
mov
ja
cmpsb
push
ljmp
sbb
adc
cmp
jmp
jmp
test
ds
lods
inc
xor
xchg
mov
adc
push
insl
pop
push
test
ret
ficoml
adc
sahf
or
aaa
test
fs
xchg
enter
jmp
js
mov
insb
and
addr16
xchg
cmc
push
imul
lret
sbb
pop
and
test
jmp
jp
xchg
jno
mov
lods
mov
pop
dec
add
sub
ret
in
cmp
orb
mov
iret
mov
inc
imul
and
sub
sbb
adc
inc
xchg
rcrl
and
loop
insl
in
xor
decb
stos
jmp
repz
cmc
ss
pop
and
push
sub
stos
icebp
cli
les
test
lea
mov
scas
insb
imul
stos
jmp
jg
aaa
inc
daa
divb
test
jp
mov
bound
in
test
lea
and
inc
jno
xchg
dec
mov
fs
aas
push
mov
sbb
icebp
xchg
lods
mov
dec
mov
pop
fisubrs
sub
jle
mov
or
sbb
jbe
adc
and
push
es
aam
adc
shll
test
add
sbb
cmp
mov
dec
roll
cmp
fwait
mov
xor
sbb
push
repz
fisubrs
cmc
sub
inc
sbb
xchg
sub
dec
push
push
adc
je
and
inc
les
mov
pop
stos
cmpsw
popf
sub
popa
dec
sub
test
cwtl
in
andl
roll
pop
xchg
dec
shll
movl
das
mov
add
sub
rolb
pusha
lahf
push
cmp
jl
cmp
xchg
test
stos
aaa
lods
dec
shrb
push
adc
jbe
mov
cmp
test
lahf
inc
int
xchg
imul
pop
stc
push
cmp
inc
mov
je
mov
or
jmp
sbb
sub
mov
dec
xor
stos
cli
data16
mov
add
aam
and
int
dec
xor
push
inc
jae
data16
xor
jp
add
pop
ret
aam
imul
ljmp
not
movb
stos
xor
pusha
rorl
bndldx
push
jge
movsb
cli
shrb
jl
jbe
or
push
mov
inc
shll
scas
shll
adc
inc
mov
aam
inc
inc
cmp
stc
xor
in
add
lock
cmp
mov
jae
fnsave
in
add
aam
repnz
inc
push
cmpsb
imul
jns
xlat
pushf
mov
ja
push
fs
hlt
aad
xor
jo
movl
jb
mov
or
imul
and
pop
jp
pop
movsl
pop
xlat
imul
jg
enter
cltd
scas
rorl
ret
fists
push
fcmovb
push
xlat
jo
rolb
xlat
jnp
pop
xchg
mov
and
mov
xchg
cmpsb
int3
int3
mov
push
add
repz
dec
les
sahf
lret
sub
daa
insb
xor
aas
test
das
out
lret
sub
dec
inc
imul
mov
pop
jge
push
pop
mov
add
sbb
imul
jmp
movsb
loop
push
shl
fildll
lds
and
lods
scas
mov
cmp
aad
loopne
ss
out
inc
inc
push
push
push
adc
mov
sub
push
leave
push
pusha
dec
dec
and
mov
roll
mov
aad
jnp
push
adcl
imul
xor
mov
ret
je
push
mov
scas
fs
or
daa
out
sub
mov
xchg
call
les
movsl
scas
shrb
test
ffree
jp
mov
repz
add
cmp
mov
bound
xchg
and
fs
lea
loopne
jae
push
xchg
xchg
hlt
jne
mov
ds
adc
mov
push
dec
dec
mov
mov
inc
mov
cmp
pusha
pushf
lods
push
faddl
dec
adc
aam
jno
mov
fs
pop
inc
pushl
mov
cmp
push
icebp
mov
sub
mov
les
pop
or
pop
sub
pop
fisubrl
je
int
stc
sti
xchg
add
inc
mov
dec
es
js
pushf
jmp
inc
lods
mov
sbb
pop
push
sub
movsb
imul
mov
hlt
popa
push
xchg
scas
es
js
and
fcomps
sbb
hlt
cmp
ds
sbb
jno
fcoml
or
shl
testb
es
sub
repnz
jae
sbb
in
xlat
mov
pop
loope
aad
and
aas
popa
mov
fsubl
shll
mov
les
and
jmp
aaa
adc
dec
jns
cmp
fisttpll
dec
clc
jbe
jmp
jg
mov
mov
sub
mov
cmc
or
fldt
std
call
rorl
ret
jecxz
jne
lods
xor
push
test
aad
jp
sarl
inc
xchg
mov
dec
mov
idiv
and
punpckldq
movsl
cmpsb
mov
cmp
xchg
push
mov
icebp
push
push
scas
inc
fcoml
pop
jge
push
imul
mov
mov
scas
push
add
orl
push
mov
out
sbb
dec
sub
jo
push
stos
mov
cmp
cmpsb
sub
jne
and
cmp
xchg
daa
ja
mov
fdivrl
pop
ja
cmp
inc
out
aam
popa
rorb
pop
dec
fistps
fxch
xor
lock
push
pop
sti
cmp
enter
lods
push
mov
dec
imul
or
mov
inc
adc
sbb
inc
data16
scas
cmp
nop
cmp
inc
leave
push
jl
test
push
ret
les
xor
jp
lea
lds
mov
jne
mov
faddl
sub
inc
push
pop
aad
ja
add
pop
stc
adc
lea
lret
out
call
mov
test
mov
and
gs
in
adc
hlt
adc
xlat
add
inc
mov
rorb
movsl
sbb
push
je
repnz
mov
jmp
add
cmp
ret
mov
aad
inc
test
test
and
sti
cmp
inc
jno
add
mov
inc
pop
adc
push
jp
inc
out
fwait
sub
xor
push
pop
aaa
es
es
mov
outsl
push
enter
aam
jl
jnp
inc
mov
nop
jle
xchg
pop
adc
push
ljmp
pop
daa
xor
stos
adc
or
inc
js
inc
test
iret
xor
cmp
jg
test
and
jae
sbb
sbb
or
cmpsb
es
lea
adc
aam
xchg
lods
dec
scas
mov
inc
lahf
outsb
movsb
inc
repnz
addr16
movsb
push
sub
sbb
push
roll
or
in
xor
lahf
cmpl
or
inc
sub
andb
test
dec
pop
adc
sahf
lods
js
roll
dec
cmc
mov
pop
sub
xor
or
mov
cmpl
sub
adc
adc
orb
push
inc
in
fstps
addl
jecxz
xor
shlb
lcall
xchg
xchg
push
jbe
pop
incl
imul
icebp
ss
adc
es
aaa
stos
sub
mov
add
insl
xchg
jle
into
sarb
xchg
sbb
jae
push
in
insl
adc
mov
fdivs
sub
inc
sbb
inc
xor
test
movsl
sbb
pop
test
pop
xchg
insl
sub
ret
mov
imul
sbb
push
test
adc
test
adc
xchg
dec
movsl
icebp
mov
inc
adc
sub
sub
shr
and
xchg
jl
dec
leave
adc
mov
add
jnp
insl
addb
int3
test
mov
cmc
push
mov
test
jge
imul
sbb
adc
adc
xor
movsl
fst
andl
dec
pop
test
pop
cld
and
popa
loopne
les
pushl
shrl
movsb
and
ss
int3
ja
cltd
clc
add
stos
push
fimuls
or
stc
adc
dec
xchg
loope
xchg
push
or
test
outsl
and
adc
test
out
inc
adc
out
decl
das
mov
mov
mull
sub
sbb
inc
mov
addr16
insb
sbb
adc
xchg
js
aas
mov
popa
mov
push
pop
fdivp
pop
cmpsb
and
div
pop
pop
and
add
test
inc
mov
push
jnp
inc
adc
inc
mov
bound
adc
hlt
mov
movsl
xchg
sbb
lods
je
inc
sbb
dec
pop
repnz
mov
push
xchg
push
add
sub
dec
js
xor
ss
int3
xchg
je
cld
shlb
mov
xchg
popa
shrl
add
mov
mov
mov
push
dec
inc
sarl
insl
in
xor
push
shl
ja
test
and
sub
js
mov
cmp
mov
add
pop
jle
in
xchg
cmc
add
movsb
testb
adc
pop
sub
rorl
iret
adc
inc
dec
push
inc
nop
adc
xor
js
stos
jno
mov
add
arpl
fcmovnb
dec
insb
in
adc
inc
cmp
inc
and
imul
subb
xor
cvtdq2ps
cmp
push
push
pusha
fisttpll
and
push
scas
mov
push
sub
xchg
icebp
cmp
movsb
imul
sar
idivl
mov
dec
sbb
mov
mov
or
sub
nop
add
ds
mov
lods
leave
mov
fisubs
mov
mov
mov
pop
push
rcll
daa
pop
fisttps
pop
xchg
adc
lock
mov
fidivrl
and
mov
xchg
outsl
pop
stos
icebp
mull
mov
std
stos
divb
push
mov
stos
fcmovnbe
inc
jb
shrl
ja
aas
mov
cmp
adc
mov
pop
mov
ficoms
imul
js
repnz
fsubl
sub
inc
shlb
mov
scas
xor
jle
lret
aas
dec
mov
and
divb
inc
rorl
xor
mov
and
arpl
jle
jle
fisttps
push
mov
je
orb
stos
fidivrl
mov
les
push
test
outsl
scas
cwtl
daa
sbb
pop
xchg
pop
jle
cmp
push
mulb
or
loope
cmpsb
fistl
push
sbbb
aas
jecxz
adc
inc
mov
push
mov
rclb
pop
lahf
insb
add
cmp
fprem1
std
pop
and
pop
mov
insb
dec
mov
mov
outsl
in
clc
push
test
push
and
test
sbb
loopne
push
cmpsl
xchg
call
xchg
dec
jmp
mov
ja
fdivrs
mov
outsl
cltd
loopne
movsl
aam
mov
stos
xchg
pop
push
fdivr
mov
scas
sub
scas
lds
sub
inc
cli
adc
and
outsl
mov
mov
jnp
and
xlat
aam
cmp
pop
mov
inc
push
inc
sub
mov
sub
test
decl
push
cmp
cwtl
andl
cmpsl
mov
sub
jae
xor
testl
fsubs
imul
in
add
aad
dec
push
aaa
cmp
pop
xlat
inc
jl
inc
adc
stos
mov
dec
stos
jbe
or
cmp
sti
xchg
test
cwtl
repz
movsl
call
mov
push
fcoms
fildl
pop
sub
ret
cld
inc
fs
pop
dec
aam
lods
xchg
cli
clc
mov
sub
mov
hlt
xchg
cmp
push
xchg
dec
inc
jne
jbe
lds
aas
loopne
and
jp
nop
push
mov
lock
jge
icebp
jns
aam
test
dec
adc
sub
add
dec
daa
inc
imul
enter
push
scas
mov
push
mov
aad
rcrb
in
xchg
inc
fwait
and
call
hlt
xor
pop
jo
stos
mov
lods
mov
lods
sbb
ds
outsl
jbe
pop
pop
neg
push
test
daa
xor
popa
lods
adc
addl
inc
pop
xor
pop
pop
nop
inc
inc
cli
out
ja
mov
sub
sbb
mov
or
lea
cli
jb
sub
stc
jbe
sub
cmp
push
out
outsl
pop
movsl
jb
lods
inc
fisubrl
imul
stos
mov
pop
sti
add
inc
test
dec
mov
in
mov
and
andl
pop
shrl
mov
gs
or
pop
and
outsb
sbb
cmp
push
bound
out
xor
hlt
xor
ret
cmp
and
mov
rcl
jmp
int3
test
xor
enter
aam
lcall
fidivl
cltd
iret
cs
aaa
xlat
xor
leave
mov
cltd
lcall
orl
mov
je
sbb
mov
das
or
test
ds
test
fs
xchg
clc
das
adc
in
cmpsb
add
in
lret
gs
push
sub
xchg
pop
ds
dec
leave
mov
stos
aas
cmpsb
test
add
add
mov
stc
int3
push
dec
jbe
hlt
adc
inc
sub
cmp
and
cld
and
sbb
or
adc
mov
and
mov
dec
in
xor
lock
xor
inc
hlt
fsincos
aas
arpl
cmpsb
pminsw
mov
mov
mov
sahf
repnz
aam
mov
sti
xor
mov
push
cs
or
mov
outsb
subb
lock
pop
test
xor
push
jbe
lods
gs
inc
cmp
das
dec
pop
pop
in
out
inc
inc
fisubrs
adc
repz
mov
mov
adc
pop
lods
shlb
adc
es
jg
push
movsb
sbb
cmp
xchg
lods
movsb
ret
fists
sub
push
cmc
lods
push
push
push
inc
xor
pop
or
out
imul
aam
adc
pop
cwtl
add
push
fidivrs
lea
lret
adc
push
dec
repnz
xlat
mov
mov
imul
jmp
icebp
movsb
mov
pop
fidivl
jns
sbb
pop
mov
test
les
test
jo
push
ficoms
out
lea
enter
movsb
pop
stos
jb
pop
outsb
inc
inc
push
cmp
sub
dec
fsubs
cmp
sbb
mov
nop
or
mov
mov
jbe
mov
rcr
sub
ret
push
jle
popa
lret
inc
aad
lods
rcrb
leave
inc
push
push
dec
sub
cwtl
push
pop
sbb
mov
clc
mov
or
dec
insl
clc
sbb
add
dec
dec
cli
cmp
fcmovnbe
cmpsb
cmpsb
iret
cmpsb
dec
inc
add
mov
leave
cmp
xor
jns
xchg
repz
bound
xchg
bound
or
mov
xor
xlat
xchg
scas
movsb
adc
lea
inc
scas
lret
and
test
iret
dec
mov
mov
push
push
insb
lahf
cs
or
insb
inc
lods
xor
stos
cltd
movsl
daa
adc
aaa
cmc
or
sub
insl
push
jmp
jbe
push
aad
test
jae
sub
xchg
cld
xchg
cmp
xchg
fidivl
faddl
arpl
movsl
test
jno
cmp
in
xor
mov
push
jl,pt
mov
or
sti
fs
lds
lds
shll
mov
mov
popa
cmp
dec
cltd
hlt
icebp
cmpsl
pop
pop
icebp
jl
mov
clc
add
test
and
jns
xor
hlt
in
and
inc
arpl
mov
pop
bound
jne
mov
clc
sbb
jne
mov
lods
lods
enter
mov
daa
ss
dec
loope
push
xchg
pop
inc
and
add
ret
mov
outsl
xchg
mov
push
push
dec
xchg
mov
stc
sub
jmp
xchg
clc
jbe
incb
mov
movsb
nop
aaa
inc
mov
arpl
pop
mov
out
adc
dec
mov
inc
adc
arpl
test
adc
clc
inc
scas
push
jecxz
dec
int3
inc
sub
xor
leave
mov
pop
ret
in
mov
mov
outsb
sti
int3
std
xchg
rol
ljmp
in
mov
ret
xor
push
inc
lods
push
jno
add
jmp
mov
fildll
in
pushf
orl
pop
cmp
mov
out
dec
fnstenv
je
push
cmp
sub
push
mov
pop
adc
pop
xchg
ret
sub
lcall
xchg
sti
xor
mov
loop
push
dec
sub
clc
pop
inc
inc
jae
dec
pop
lock
mov
jg
xchg
cmpsl
lods
add
cmp
movl
sti
inc
pusha
leave
jg
rcrl
lds
ret
or
dec
jg
stos
inc
add
jno
test
jns
test
add
in
scas
stc
int
xchg
test
lret
cmp
mov
ljmp
cmp
add
sub
mov
mov
dec
jns
flds
inc
leave
mov
scas
aam
mov
lcall
enter
xchg
mov
movsl
sub
adc
mov
bound
div
inc
fldl
stos
sarb
adc
inc
pop
stos
test
xchg
out
mov
negl
push
push
test
mov
test
cmpsb
add
cwtl
mov
rorl
dec
and
mov
jmp
pop
inc
mov
imul
or
mov
xchg
jl
mov
rcll
xor
and
push
adc
stos
test
push
icebp
not
aam
push
sti
dec
in
mov
mov
loop
test
jmp
aad
and
or
pusha
xor
hlt
push
mov
push
shrl
mov
dec
clc
aaa
lcall
movsl
push
ret
cmp
mov
xlat
adc
pop
xchg
dec
jl
adc
arpl
cmp
cld
sbb
xor
sub
inc
mov
into
les
dec
cld
repnz
add
jne
jb
cmpsl
in
mov
cmp
mov
inc
mov
xor
stos
or
dec
icebp
and
cmp
mov
add
fisttpl
mov
enter
sbb
cmp
adc
mov
subl
out
inc
xchg
inc
inc
ss
xor
rcr
sti
fidivrs
test
push
insb
fcomip
sub
cmp
sub
and
cli
hlt
fdivs
daa
cltd
push
push
outsl
daa
xlat
mov
push
pusha
mov
mov
xchg
jle
mov
rcl
pop
lods
jl
and
sub
and
mov
add
jo
mov
stos
cmp
hlt
or
xor
dec
add
push
adc
mov
mov
adc
test
adc
jb
adc
pop
pop
jp
shlb
test
sub
and
mov
mov
xor
mov
jge
adc
xlat
push
sbb
xchg
mov
pop
mov
and
imul
scas
fidivrl
fsubl
jl
jecxz
repz
jb
mov
sub
inc
push
adc
sti
addr16
je
iret
jp
inc
sub
mov
cmp
cmp
and
lods
mov
add
adc
aaa
sub
addl
add
sbb
mov
and
adc
stos
or
sbb
push
shl
sbb
ret
mov
popf
lods
add
add
sbb
or
movb
xchg
sbb
adc
lret
inc
enter
cmp
inc
add
rolb
data16
in
fmuls
jne
or
or
mov
xchg
push
push
test
repnz
cmp
mov
sub
cmpsb
jo
push
test
xor
dec
push
lea
pop
scas
adc
aas
cmc
lods
dec
or
mov
jne
mov
div
mov
aam
pop
fsubs
movsb
push
adc
sti
out
sub
icebp
cmpsl
shll
faddl
add
dec
ret
mov
call
add
cmpsb
and
les
push
dec
push
jmp
xor
pop
je
and
dec
push
leave
or
jns
jp
hlt
push
sub
jp
es
cmp
sbb
add
sarl
aaa
icebp
jbe
test
jbe
es
cmp
into
pusha
or
or
aaa
cmpsb
cmp
je
inc
inc
adc
mov
add
daa
and
cmp
pop
data16
xor
sub
shlb
test
aaa
stc
stc
push
inc
add
and
adc
cmp
xor
mov
fisubrs
inc
test
cmp
test
imulb
or
inc
pusha
sub
push
dec
mov
mov
pop
inc
mov
inc
sarl
dec
mov
mov
arpl
jbe
lods
inc
leave
push
mov
cmp
inc
dec
popa
ret
mov
add
xor
ror
pop
arpl
sti
ret
les
dec
sbb
rclb
fimull
lods
test
xchg
push
sub
fs
pop
sub
pop
cld
pushf
dec
dec
push
dec
imul
lcall
jo
push
xlat
mov
and
das
ja
enter
fs
icebp
xchg
pop
xchg
push
or
aas
adc
movsb
dec
fcmove
inc
pusha
jp
fimull
insb
xchg
push
mov
fisttps
ss
leave
pop
inc
cmpsb
pop
dec
mov
xchg
xlat
pop
test
mov
mov
dec
fs
or
push
cwtl
xlat
push
sub
xchg
adc
jne
aam
cltd
xchg
sti
inc
mov
test
insb
lahf
mov
cmp
outsb
and
ja
push
in
aad
xchg
stos
rorl
hlt
adc
idivl
dec
in
xchg
sub
add
in
cmp
aas
and
inc
dec
cs
adc
sub
lea
dec
scas
mov
pushf
xor
xor
mov
cmp
add
jnp
and
aad
bound
std
js
mov
mov
push
movsb
adc
in
test
pop
hlt
jnp
les
arpl
xor
inc
mov
jne
popa
push
ja
stos
rol
dec
mov
fldcw
cmp
sub
mov
cmp
mov
push
testb
lea
imulb
test
icebp
adc
sub
mov
mov
mov
mov
in
loope
addr16
jl
testb
test
fs
shll
enter
test
and
inc
dec
pop
filds
pop
gs
cmpsl
jo
repz
scas
pop
sbb
pop
rorb
sti
xlat
xchg
mov
mov
scas
push
lock
adcb
aas
xchg
inc
pop
push
dec
bound
mov
adc
inc
shrl
push
divb
pop
cmc
push
scas
mov
insb
test
jbe
repnz
fstp
js
fs
scas
test
test
adc
push
notb
push
movsb
sahf
or
fistps
leave
and
dec
in
sarl
adc
sbb
cmp
cmp
icebp
nop
inc
in
out
test
push
push
je
jle
xchg
sti
adc
adcb
mov
cmp
hlt
add
dec
inc
sub
add
xlat
jo
adc
aam
sbb
insb
lods
cmp
adc
pop
and
dec
ret
xor
enter
cmp
xchg
add
repz
scas
pop
adc
jbe
xchg
addl
imul
dec
push
ja
pop
and
stc
rolb
pop
lret
shl
push
aam
shll
mov
movsb
jp
cmc
xor
loope
xor
ja
and
dec
push
add
ss
lock
pop
sti
mov
mov
stos
inc
sbb
aad
push
and
ja
mov
jnp
lcall
mov
push
dec
sbb
xchg
repnz
cs
shll
jns
xor
ret
push
sbb
mov
fisttps
aas
pop
inc
xchg
call
adc
jl
lret
pop
test
roll
pushf
push
hlt
push
inc
cmc
inc
imul
ljmp
cld
ss
mov
jne
pop
cwtl
mov
inc
xchg
sbb
movsb
test
mov
cli
push
fst
xor
sti
mov
lods
xchg
pop
pop
test
lods
mov
outsb
fidivrl
test
rolb
xchg
jb
cs
sbb
pushf
inc
rcrl
dec
xlat
movsl
or
dec
or
jmp
xorl
jge
andl
testl
xchg
outsb
mov
dec
lods
pop
aaa
daa
sub
dec
sbb
inc
cmpsl
mov
cmpsb
incb
push
jb
lahf
cld
enter
fmulp
jae
aad
and
pop
mov
shrb
adc
dec
add
outsb
ror
cmp
movsl
rol
push
pusha
testb
aad
loope
sbb
lock
sub
or
or
shll
inc
mov
ds
je
inc
or
divl
push
pushf
pop
adc
arpl
jl
dec
cld
push
and
or
push
inc
arpl
ds
pop
and
je
into
xor
stc
adc
sahf
xor
lock
push
std
mov
test
or
and
test
sub
jns
aam
sub
stos
cmp
pop
fdivr
stc
icebp
ja
testb
xchg
sti
insb
aaa
test
popf
cwtl
aam
ret
testl
insb
imul
bnd
xor
shrl
mov
cmp
ret
stos
lods
mov
shrl
bound
repnz
in
dec
mov
xchg
rcrb
fiaddl
inc
inc
cmp
mov
sbb
ffree
incb
add
fisttps
pop
shll
mov
sub
cmp
decb
pop
pop
inc
push
push
fs
movsb
dec
stc
aas
mov
add
pop
jo
and
aas
sub
mov
arpl
inc
test
or
lock
mov
and
jb
mov
mov
testb
aam
lods
hlt
scas
jecxz
add
dec
xchg
lret
dec
std
jle
aad
add
push
push
in
addl
test
mov
hlt
add
repnz
lock
sbb
scas
mov
dec
sbb
adc
repz
dec
push
mov
or
insb
and
fs
movnti
fwait
hlt
or
aaa
push
mov
or
fcmovnu
mov
cmc
xor
fstpl
adc
adc
xor
xchg
popa
aam
cmpsb
aaa
shlb
pop
insb
imul
add
and
mov
cmp
js
mov
adc
dec
cltd
ja
insb
mov
ret
cmp
cmpsl
xor
lock
loop
lods
out
xchg
lret
sahf
jmp
or
mov
inc
pusha
inc
rorl
sti
loop
xor
repnz
fisubs
add
adcl
subb
pop
outsb
shrb
icebp
subl
repz
icebp
sub
getsec
aam
arpl
sbb
cmc
push
repz
scas
adc
push
cmp
add
or
cmp
inc
in
outsl
pushf
aam
mov
das
ja
xor
push
cmp
adc
adc
dec
push
test
arpl
test
push
loope
jno
ror
adc
sbb
js
call
roll
test
outsb
clc
mov
jp
fcoms
adc
out
int
clc
out
inc
repz
or
sahf
adc
lret
repz
data16
lds
sbb
adc
pop
outsl
call
mov
jae
call
inc
xor
shr
xor
icebp
xchg
pop
jns
orb
js
cmp
lods
fs
popf
pop
dec
mov
das
ret
or
lahf
add
mov
dec
scas
call
je
lods
popf
imulb
push
mov
andb
cmp
sbb
and
inc
addl
xchg
insl
add
into
inc
in
or
mov
push
jae
loopne
decl
push
repnz
mov
push
cmp
mov
adc
es
push
shlb
dec
bound
mull
dec
ljmp
adc
daa
add
out
rorl
and
xor
inc
sbb
xlat
aaa
push
push
scas
repnz
cmp
fistps
lahf
pop
adc
popa
lahf
jae
mov
in
push
xor
enter
aam
sub
inc
jne
ja
xor
inc
aaa
push
jl
sub
sub
xor
js
mov
insb
push
aas
in
arpl
inc
pusha
negl
daa
movsb
sbb
cmc
dec
dec
cmp
push
adc
xor
xchg
enter
ret
sbb
enter
lods
icebp
aad
roll
add
mov
lret
cs
inc
push
adc
in
leave
jns
dec
leave
dec
movsl
ss
dec
jno
adc
shrl
shll
insb
pop
stos
add
inc
arpl
adc
mov
and
add
xchg
cli
testb
and
hlt
push
xor
inc
xchg
sti
data16
mov
mov
cmpsl
mov
es
adc
movsl
pop
fldl2t
jbe
call
lea
xor
push
adc
jl
shll
push
xorb
out
stos
dec
mov
push
dec
int3
xchg
inc
or
mov
popa
xchg
cmpsb
test
dec
xchg
xor
sbb
adc
pop
fdivrs
cltd
jne
arpl
adc
sbb
mov
cmp
test
rcll
hlt
test
test
pop
mov
pop
lcall
cwtl
scas
dec
push
hlt
push
sbb
gs
push
pop
jle
clc
adc
out
pop
push
xlat
subb
push
lods
or
test
decb
or
dec
lahf
test
pop
adc
es
mov
lret
pop
adcb
push
cmp
es
dec
not
test
pop
rorl
cmp
rorl
data16
cmp
in
or
sbb
cmpsb
hlt
add
cmc
inc
jnp
xor
push
push
sub
cld
scas
stos
mov
cmpsb
sbb
ja
adc
dec
pushf
pushf
and
scas
cwtl
in
sbb
xchg
inc
mov
aam
inc
fmuls
arpl
adc
inc
sub
mov
adc
add
sub
ret
scas
inc
cwtl
xor
inc
fisttpll
mov
divl
add
fstl
pop
jns
mov
mov
xchg
mov
pop
repnz
fisttpll
jp
xchg
call
dec
daa
sbb
aam
push
cmp
fs
push
mov
pop
mov
pop
inc
leave
xor
mov
cmpsb
les
jl
test
lods
inc
adc
aas
mov
aam
test
aaa
add
call
das
outsb
and
sub
pop
stc
mov
sub
pop
je
dec
lods
jl
mov
test
xchg
dec
and
fcoms
das
div
mov
nop
add
loope
fbstp
mov
push
cmp
jo
dec
mov
cs
lea
imulb
mov
ja
inc
sbb
je
fldl
enter
push
xor
subl
mov
sub
div
push
mov
sub
outsb
int
aad
sbb
test
into
and
xlat
inc
inc
sbb
adc
push
inc
cmp
scas
repz
mov
pop
push
std
or
push
adc
cwtl
cs
je
out
pop
in
or
jmp
cmp
adc
pop
imul
pop
or
push
inc
sbb
push
test
xchg
push
lods
jl
jle
inc
shll
mov
mov
or
hlt
dec
jg
mov
pop
jl
or
pop
rep
sub
xchg
imul
daa
iret
mov
jecxz
mov
rol
mov
or
mov
cmpsl
fildll
arpl
sahf
cmp
jl
xchg
imul
push
sub
jp
inc
lahf
aam
test
sub
push
jmp
pusha
rorl
mov
popa
pop
sbb
stos
std
aas
push
cmc
fwait
push
out
sub
jbe
jae
xchg
bound
inc
dec
loope
ffree
imul
data16
movsb
stos
jae
push
adc
inc
add
jae
pop
xchg
inc
xor
mov
int3
cmp
fists
jle
and
xor
idivl
sub
sub
fldl
lods
scas
ffree
inc
xor
popa
fcmove
push
xlat
adc
lods
fists
dec
xor
repnz
fnstsw
mov
lahf
test
mov
xor
pop
and
sub
jbe
inc
cld
nop
or
ret
xchg
subb
mov
xchg
test
jb
xchg
adc
divl
je
lods
leave
not
mov
mov
xchg
adcl
mov
add
pop
push
out
jnp
xor
inc
lahf
out
jecxz
sub
inc
and
adc
or
daa
data16
mov
dec
mov
arpl
aas
push
ffree
sub
add
xor
lods
mov
insb
push
mov
push
jnp
popa
jmp
xor
push
jne
int
sti
jl
repnz
and
and
ret
pop
mov
jne
gs
mov
pop
fdiv
lock
mov
sub
jb
sbbl
aas
and
leave
push
lods
push
lahf
jnp
imul
lock
pop
adc
pop
dec
aad
adc
xor
push
es
pop
stos
jle
cld
stc
dec
dec
ja
cmp
inc
fnstenv
fisubrl
push
xchg
les
mov
das
in
mov
or
das
cs
inc
adc
imul
xchg
sub
push
mov
xor
hlt
js
jmp
cmc
stos
mov
mov
movsl
orb
push
dec
cld
lret
and
push
out
in
scas
addl
test
ss
inc
pop
inc
dec
outsb
insb
in
dec
neg
dec
hlt
pusha
sub
lea
imul
or
push
movsb
pusha
int3
push
xchg
pop
outsl
adc
xchg
loope
push
fiaddl
lods
mov
cltd
push
int3
push
sbb
cld
loope
iret
aad
pop
adc
movsb
jl
jo
pop
stos
and
pop
mov
and
jbe
mov
push
outsl
jns
popf
mov
mov
sub
enter
ret
mov
inc
icebp
mov
adc
xor
sbb
movsb
mov
sub
pop
or
mov
dec
xchg
mov
flds
jne
inc
movsl
or
dec
adcl
test
inc
ja
lds
jo
lods
push
aaa
inc
push
aas
and
cld
push
in
jns
sbb
cmpsl
push
cmp
popa
add
inc
repz
roll
sub
or
add
insb
outsb
in
aaa
sub
xchg
xchg
insl
in
mov
xchg
push
pop
shlb
sbb
adc
les
push
jb
bnd
bound
mov
scas
shr
movsb
aam
cld
sbb
in
adc
pop
les
jno
repnz
dec
aam
sub
jae
sub
cmpsl
cmp
mov
sub
mov
mov
repz
in
sub
cli
pop
fldcw
jmp
or
or
sarb
pop
xchg
loop
arpl
into
push
into
adc
sbb
lret
mov
lods
ret
movsl
mov
mov
hlt
jge
mov
adc
mov
mov
inc
jmp
or
icebp
cltd
adc
lret
mov
pop
adc
dec
mov
popf
stos
jp
lods
shld
sub
push
jb
ficomps
sub
push
scas
out
stos
pop
sti
mov
sbb
cmp
aam
in
fdivr
cmpsb
xor
xchg
daa
and
mov
push
inc
jo
and
lods
mov
repnz
dec
mov
dec
cmc
mov
jns
fldenv
xchg
mov
fisttps
pop
or
ja
imul
insl
and
sbb
lret
xlat
or
lcall
jbe
aas
push
int3
dec
or
pop
fcmovbe
jns
insb
xchg
lods
popf
mov
add
xchg
dec
xor
fisttps
cli
inc
or
adc
xchg
repz
std
outsl
pop
aam
scas
inc
add
pop
sbb
or
scas
inc
fnstenv
mov
xchg
not
mov
cltd
in
sbb
push
mov
pop
les
xor
divb
inc
test
repnz
pushf
sub
repz
adc
push
dec
int
stos
pop
mov
mov
mov
inc
dec
inc
mov
fldenv
dec
dec
stc
and
sub
in
shrb
xrelease
ret
jge
pop
pop
lods
adc
jnp
jno
arpl
xchg
xor
push
jmp
push
adc
cmpsl
popa
inc
push
mov
pop
daa
and
js
push
fwait
movsb
pop
adc
lods
cmp
jnp
ja
fidivl
loop
cmc
sbb
fwait
pop
call
push
je
xor
pop
or
frstor
das
insl
adc
sbb
cmp
inc
aaa
movsb
in
inc
xor
xchg
cltd
aad
ja
dec
xor
xchg
lods
inc
cmpsl
push
push
ret
pop
ret
aad
inc
pop
stc
sarl
nop
lods
inc
lret
jnp
dec
jg
adc
lods
in
ja
push
notl
mov
idivb
es
das
mov
mov
cmp
repz
adc
jmp
movsl
inc
xchg
icebp
sbb
or
xor
test
test
es
movsl
mov
adc
adc
roll
push
call
jns
cs
inc
push
jl
xchg
sbb
dec
dec
mov
cld
or
dec
in
mov
mov
xlat
movb
sub
cs
movsb
mov
push
sbb
in
aaa
loope
stos
lock
jle
hlt
push
nop
cs
insb
mov
aaa
add
xchg
sub
sbb
sub
sub
test
cmp
jno
xchg
je
mov
pop
sar
or
sti
mov
push
pop
mov
xlat
xor
cltd
test
dec
lds
int3
and
in
or
xchg
rcr
dec
rol
outsl
mov
or
repnz
push
sbb
pop
ds
cmpsb
ret
mov
aaa
int3
push
xchg
lock
xchg
cmp
outsb
stc
mov
add
cmp
push
adc
xor
xchg
aam
inc
pop
pop
cmpsb
scas
loopne
inc
stc
adc
push
out
xor
push
pusha
pop
pushl
and
jbe
ret
test
fistpll
je
sbb
lret
shrl
mov
testl
gs
addr16
dec
xor
inc
sub
inc
mov
cld
addr16
outsb
sub
add
test
test
in
stos
xor
inc
sub
jbe
inc
sti
int3
and
mov
jmp
push
scas
push
sbb
mov
sub
xor
imul
add
shll
cmpsl
mov
bound
es
leave
insb
dec
add
xor
ja
adc
pop
stc
jne
jge
xorl
scas
mov
pop
xor
fisttpl
lods
sbb
jp
jb
notl
xor
dec
enter
outsb
decl
mov
dec
movsl
inc
mov
sbb
or
xor
or
shl
mov
mov
dec
cmp
into
scas
jmp
lret
jns
dec
subb
hlt
scas
test
lea
cmp
xchg
push
je,pt
arpl
jl
fsts
mov
push
bound
add
sub
pop
pusha
sub
inc
arpl
push
xor
xlat
shlb
mov
push
sti
fists
xor
shl
jl
dec
loopne
int
xchg
add
hlt
ss
call
pop
mov
test
shlb
dec
cmp
daa
inc
outsl
mov
movsl
stos
inc
push
and
and
enter
dec
pusha
test
sbb
inc
scas
sub
rol
sti
cmp
sbb
and
inc
mov
xor
push
mov
push
mov
lahf
dec
sub
xchg
xor
or
rclb
sub
mov
adc
aad
and
jmp
es
cmp
gs
pop
sub
inc
and
subl
xor
sbb
push
xor
das
sub
addb
inc
inc
dec
je
dec
pop
push
pop
and
add
lea
insb
push
xlat
and
adc
jp
scas
jne
pop
sub
mov
testb
fs
test
inc
scas
push
and
push
loope
sti
mov
cld
mov
mov
and
call
sbb
xor
jl
xchg
mov
dec
or
stos
daa
aaa
fsubl
lea
sti
les
mov
push
lret
pushw
xor
jmp
pushf
ljmp
fs
test
jle
pop
add
cwtl
int3
incb
cs
xchg
fs
test
mov
hlt
sub
jmp
shll
pop
push
and
and
test
cmp
mov
inc
jb
negb
adc
sahf
push
pop
sahf
ja
jne
mov
imull
sub
sub
and
adc
jmp
jne
lcall
in
xor
jge
lret
sbb
pop
inc
les
rorl
fwait
or
sbbl
adc
mov
inc
xor
arpl
jge
mov
adc
pop
stos
je
xchg
inc
adc
and
fwait
push
cmp
add
movsl
sub
loope
popa
les
adc
mov
push
dec
cs
mov
dec
dec
dec
push
notl
mov
repz
cmpsb
adc
mov
push
aad
xor
push
test
jg
je
xchg
add
push
jmp
sub
mov
dec
mov
cld
inc
mov
lock
aam
xor
fisttpll
or
js
iret
stos
fldcw
in
aas
outsl
jnp
xchg
ss
outsb
lods
jp
mov
popf
repz
popa
adc
call
dec
lds
mov
aas
stos
lret
jmp
dec
adc
imul
jmp
cld
dec
push
aas
jle
clc
rcl
das
js
lret
jecxz
mov
clc
mov
mov
call
cmp
adc
inc
gs
adc
adcl
jg
dec
es
xor
rolb
sbb
xchg
add
ret
push
xorl
out
sbb
inc
mov
adc
xor
dec
sbb
add
cmp
enter
mov
push
inc
xlat
ja
inc
cmp
fwait
jns
xchg
add
cltd
dec
es
stc
cld
xchg
pop
lret
push
add
fucom
jae
test
pop
xchg
mov
add
push
adc
or
jns
roll
stc
aas
inc
push
mov
mov
dec
mov
call
push
jg
pop
aaa
inc
mov
mov
adc
pop
bnd
xlat
repz
inc
mov
jl
inc
dec
sub
aad
adc
xlat
pop
sub
push
push
push
icebp
fidivrs
imul
adc
inc
inc
jbe
xchg
imul
imul
jmp
hlt
inc
in
les
out
adc
cmpl
mov
xchg
pop
repnz
and
adc
test
in
add
aas
cltd
cmp
idivl
idivb
mov
add
mov
or
aad
rorb
and
adc
mov
out
sbb
test
je
sub
mov
cld
shrb
pop
cmc
sbb
mov
dec
fisubrl
insb
adc
pop
fwait
push
lods
std
sub
pop
pop
test
fldcw
cmp
jmp
pop
xchg
addr16
movsb
pushf
xor
sub
cwtl
lods
fildll
sub
in
call
iret
fdivs
xor
fistl
shlb
lds
sub
inc
fnsave
add
movsb
cmpsb
push
shll
adc
pop
es
mov
push
sbb
dec
adc
ljmp
decb
test
rcrl
sti
test
movsb
lahf
ljmp
outsl
test
adc
and
push
popf
pop
push
and
rep
call
jne
xlat
fildll
jge
jp
add
es
pusha
clc
and
sub
pop
jo
andl
mov
jne
pushf
sub
cmp
pushf
pop
movsb
mov
inc
clc
ret
inc
pop
xor
int3
mov
push
cli
push
sbb
and
push
je
lods
push
xchg
inc
or
cmp
sub
push
xor
pop
adc
sbb
test
and
dec
stos
sub
js
dec
iret
xorl
lds
test
dec
stc
sbb
mov
dec
mov
push
push
pop
mov
idiv
cmpsl
inc
jl
mov
dec
dec
imul
cs
adc
jmp
iret
inc
test
aam
iret
xchg
aas
or
clc
jp
ss
xchg
adc
mov
pop
fsubl
mov
roll
add
xchg
cmc
inc
ja
add
ss
aam
rcll
popf
addl
push
aaa
stos
aad
icebp
push
dec
enter
push
aaa
pop
push
add
mov
mov
icebp
es
push
rcrb
push
cmp
inc
sub
movsl
xchg
mov
xor
pop
cmp
jno
mov
cmp
sbb
add
hlt
inc
out
fldcw
inc
push
and
cmc
insl
js
rorl
and
inc
les
shlb
aad
std
lret
stos
dec
or
xchg
jl
ja
insl
dec
movb
fstps
jae
jb
decb
pop
fs
negb
jl
push
adc
xchg
dec
or
mulb
jp
ja
test
sub
xchg
xchg
dec
jns
inc
and
movsb
mov
lret
xor
add
cmp
scas
lods
popa
jns
clc
lods
cli
cli
lea
xlat
in
cmp
lds
and
mov
sti
lahf
cs
pop
faddl
adc
or
mov
push
cmp
fsubrl
mov
bound
xchg
xchg
test
pushl
lahf
or
movsl
shr
mov
sub
and
lea
pop
mov
pop
mov
adc
and
das
sub
shlb
pop
push
sbb
mov
stos
je
push
stos
imul
push
mov
pop
iret
fmul
or
mov
adc
stos
insl
xchg
xor
and
prefetch
mov
add
and
cmp
adc
cmp
jns
test
pop
jle
sbb
mov
enter
mov
insl
pop
sbb
lock
xor
mov
push
or
inc
fcoms
divb
mov
aaa
rcrl
inc
sub
inc
xor
test
push
mov
push
mov
aas
and
or
sub
ljmp
add
in
inc
lret
xchg
insb
add
arpl
push
addb
js
fdivr
stos
shrb
jo
adc
fldenv
sbb
mov
and
ficoml
xchg
sub
icebp
mov
ja
or
push
dec
and
dec
jg
andl
je
test
leave
jp
jns
mov
pop
outsl
sub
mov
xadd
inc
scas
mov
je
or
sbb
xlat
js
push
push
fisttpll
mov
mov
jnp
subl
push
out
leave
inc
aam
adc
dec
jg
stos
fldcw
scas
push
jb
movlps
mov
lahf
call
dec
leave
mov
test
xor
xor
stos
aam
or
adc
dec
pop
inc
mov
adc
lock
int
loop
dec
int3
dec
test
inc
mov
sbb
or
fs
scas
popa
mov
mov
fildll
sub
fimull
sub
cmp
pop
xor
jge
rorl
gs
pop
xchg
sbb
or
and
cs
push
push
cmp
adc
fdivp
push
xchg
icebp
mov
fisubs
incl
fs
adc
rorb
push
mov
push
jge
pushf
inc
add
mov
xchg
imul
cmp
and
cmp
nop
or
hlt
cmp
xor
jns
push
fcmovbe
dec
inc
movsb
sarl
lret
jne
popa
shl
aaa
loope
pop
in
rolb
jae
mov
loopne
shlb
push
push
mov
psllw
mov
mov
xchg
xor
mov
ficoms
xor
ret
push
dec
out
icebp
scas
outsl
test
iret
xchg
dec
and
rcl
push
cmp
dec
push
jo
test
mov
xchg
xchg
sarl
jbe
stos
or
sub
mov
movsl
mov
and
mov
nop
push
je
aas
xor
cmpsb
gs
sub
pop
mov
stos
mov
popf
sarb
mov
push
or
adc
add
syscall
push
inc
mov
push
mov
hlt
movb
mov
xor
xchg
test
and
pop
add
add
pop
mov
xchg
mov
mov
and
ds
lret
push
movsl
push
je
add
xchg
pop
pop
fldenv
lock
xlat
jns
fs
les
add
mov
jmp
adc
or
and
inc
add
xlat
add
scas
popa
mov
out
loopne
fiaddl
or
rcll
add
inc
push
pop
cmp
jbe
cwtl
sub
add
shl
push
sub
add
mov
imulb
cmp
mov
and
add
sbb
das
jge
push
pop
aad
sub
adc
cwtl
mov
or
xlat
dec
inc
and
stc
push
xlat
fisttpl
insl
mov
xchg
rorl
test
popa
mov
add
push
rcl
xchg
unpcklps
insb
dec
dec
fidivl
cmc
popf
cmp
decb
inc
scas
movsb
cmc
int
jl
xchg
ror
cmp
inc
inc
add
aaa
stc
fildll
addr16
sub
aam
mov
and
dec
pop
push
outsb
cmc
testb
or
fildl
inc
sub
mov
fildll
mov
push
pop
adc
dec
seta
mov
ss
mov
push
xchg
hlt
inc
or
xor
xor
mov
jno
dec
push
cmp
push
addr16
mov
mov
or
inc
or
dec
adc
sbb
dec
sbb
loop
inc
mov
in
dec
xchg
cmp
mov
stc
sbb
jl
js
in
lea
in
aad
xchg
pop
xor
mov
mov
enter
or
addr16
jle
test
cltd
sub
adc
mov
mov
dec
xchg
xchg
shl
or
loop
cltd
mov
nop
lahf
insl
sbb
daa
and
or
pop
leave
hlt
inc
dec
dec
inc
dec
cltd
and
sti
mov
scas
insb
mov
pusha
roll
inc
imul
xchg
jbe
sbbb
imul
xchg
shr
sub
outsb
fs
pop
daa
mov
movl
testb
xchg
mov
sub
and
mov
imul
clc
cmp
addr16
fs
cmc
cmpsb
mov
mov
in
aaa
inc
neg
xor
mov
mov
jbe
mov
push
outsl
cmp
dec
aaa
lea
jns
inc
out
scas
orb
das
jns
inc
sub
pop
hlt
pop
push
ja
mov
and
pop
sub
add
sarl
xor
push
adc
jno
inc
gs
jne
mov
daa
push
sub
rcl
aam
and
xchg
das
stos
sub
jnp
shlb
mov
icebp
test
scas
xchg
dec
rolb
pop
insl
and
push
iret
jl
cs
test
adc
lock
idivl
cmp
mov
fidivl
pop
mov
xchg
sub
add
fwait
pop
ds
cmp
mov
flds
fdivp
fcoms
movsl
sub
inc
cmc
js
cwtl
inc
lods
sbb
adc
sbb
loop
cmp
fldenv
and
aam
xchg
dec
cs
and
iret
dec
push
lock
mov
push
fs
clc
test
shll
test
jae
xchg
adc
xchg
loopne
movsb
iret
mov
movsl
repnz
notl
test
or
add
pop
push
push
dec
add
dec
sub
sar
push
mov
jbe
ja
in
popa
mov
sbb
or
and
mov
hlt
jbe
push
sbb
jl
outsl
mov
mov
xor
lods
outsl
xor
pop
lds
add
add
out
mov
sahf
pushw
inc
dec
sti
add
mov
cmp
xlat
sbb
sbb
xlat
data16
adc
hlt
pop
ficoml
sbb
into
fs
sub
ret
push
inc
xchg
and
hlt
xor
sti
test
sbb
in
jae
mov
rcll
mov
jge
jge
test
flds
iret
push
out
cmc
into
dec
iret
push
jns
ja
jmp
inc
dec
pop
std
adc
sbb
sti
sub
cmc
fsubrl
sub
scas
sub
insl
and
fs
mov
adcl
jp
inc
stos
pop
sahf
mov
jge
jbe
dec
xor
push
ret
add
pop
dec
cmpsl
fs
filds
pop
test
jecxz
cs
xor
into
or
pop
push
fwait
push
aas
mov
shl
xor
scas
test
pop
xor
jb
inc
enter
ja
push
lds
adc
jbe
dec
mov
jg
add
sbb
dec
in
lea
pop
adc
icebp
or
inc
fldcw
pop
mov
xor
adc
jbe
add
int3
push
in
daa
std
movsl
cmp
je
bound
das
decl
test
popf
cs
pop
pop
add
aad
fwait
iret
hlt
enter
sbb
faddl
std
jl
adc
mov
gs
mov
fnsave
test
push
dec
inc
jns
pop
ss
push
xchg
push
and
sbb
stos
pop
xor
test
push
mov
and
ss
pushf
cld
adc
rcll
mov
je,pn
fdivl
xor
fsubr
adc
subl
pop
shl
push
cld
ss
inc
inc
inc
fdivrl
dec
push
mov
add
stos
add
mov
mov
inc
fisttpl
xor
inc
push
sbb
jge
outsl
aam
shrl
inc
jl
fs
mov
inc
scas
aam
sub
arpl
das
lock
mov
push
pop
mov
xchg
mov
iret
xchg
clc
xor
enter
daa
or
int
test
ds
sub
xchg
jb
roll
repnz
imul
sbb
xor
mov
scas
cld
mov
and
jno
mov
cs
fs
and
movsl
push
or
jp
cmp
jbe
inc
push
shr
jo
push
sbb
jnp
cwtl
sub
int3
xchg
mov
dec
notl
subl
loop
mov
cwtl
or
ja
lods
inc
inc
pop
cmp
ljmp
adcb
adc
sub
mov
lods
in
mov
popa
inc
pop
dec
test
gs
jae
and
mov
lock
jns
push
pop
adc
repnz
cli
lret
fisttpll
add
sbb
out
divl
imul
pop
push
testl
mov
or
push
test
ds
or
scas
xchg
test
test
rorl
lock
and
insb
addr16
and
bound
inc
sub
inc
jo
sbb
das
sbb
jno
lods
cltd
ja
push
push
xor
aad
or
enter
mov
push
outsl
jno
pop
ret
cwtl
inc
inc
mov
pop
stos
push
pusha
inc
pop
cmp
cld
pop
and
sbb
push
outsl
push
and
icebp
in
mov
jl
add
jg
adc
push
and
outsb
jo
arpl
addr16
xchg
xchg
inc
in
sub
mov
sub
adc
cld
sahf
mov
pop
into
adc
xor
lods
pop
add
cli
lret
push
push
sar
cs
push
mov
stos
adc
pop
xor
mov
mov
lret
ffreep
pop
neg
dec
cmp
xor
or
stos
dec
dec
aas
mov
imul
pop
or
ja
insl
je
push
sub
repnz
mov
sub
inc
adc
push
adc
xorb
sbb
sub
inc
and
or
rcl
dec
jnp
mov
loopne
push
jb
ss
fs
jp
inc
and
movsl
das
lock
sbb
cmpsl
sub
cmpsl
inc
xor
inc
mov
add
adc
call
outsl
fimuls
cmpsb
cmp
call
les
mov
mov
xlat
sbb
addb
ret
pop
ficomps
jns
cmp
test
or
dec
xor
ss
cmc
in
mov
stos
xor
sub
stos
cmc
and
or
pop
sub
adc
movsb
into
scas
sbb
mov
mov
cmp
daa
addr16
jecxz
cmp
aam
and
adc
test
aaa
repz
lods
hlt
pop
lea
push
pop
sub
in
add
or
xor
or
cmp
bts
mov
outsb
stos
dec
test
push
test
mov
adcl
ret
pop
cmpsb
mov
and
inc
mov
pop
imul
mov
pop
das
pop
mov
mov
aam
clc
jle
pop
lods
fsubl
sbb
jg
jne
xchg
jnp
xchg
in
xlat
fidivs
pop
jge
add
sbb
dec
outsb
shl
push
arpl
mov
insb
aam
iret
dec
movsb
inc
pop
cmp
adc
sbb
ljmp
hlt
sbb
es
lea
fdiv
icebp
add
fidivrl
jge
sub
in
ja
pop
dec
stc
fsts
push
testb
fistps
fs
lds
xchg
lret
lea
xor
or
pop
jle
pusha
mov
pop
mov
loopne
negl
pop
jns
push
int3
jnp
jg
les
cmp
jmp
cmpsb
push
mull
dec
sub
test
cmp
aas
inc
add
sub
adc
sub
rorb
xor
mov
imul
push
sarb
into
testl
push
sub
inc
out
popf
adc
sbb
movsb
out
frstor
cmp
pop
sbb
aam
push
outsb
insl
ljmp
and
adc
mov
xchg
sub
jne
xchg
popa
dec
sub
hlt
mov
push
hlt
addr16
adc
mov
add
popa
int
pop
aam
adc
cli
sub
cmpsb
cmp
sub
movsb
dec
aam
cwtl
jo
sub
sub
es
aam
cli
test
mov
sub
add
imul
sbb
xor
fadds
cwtl
mov
pop
xor
leave
dec
adc
pop
pop
clc
dec
fimuls
into
inc
aam
jbe
addr16
inc
inc
and
mov
stos
cmc
rcll
mov
imul
mov
rcr
aam
jle
lea
lods
or
cmp
and
aad
inc
ror
hlt
jne
rcrl
xchg
sbb
sahf
pop
xor
xchg
xorb
fs
and
dec
mov
add
mov
dec
stc
add
dec
dec
mov
push
sbb
shll
adc
adc
inc
cltd
cs
add
mov
jecxz
inc
or
enter
leave
mov
xchg
je
cmpsb
nop
pop
int3
sub
jmp
es
sbb
in
jge
icebp
push
mov
out
movsb
lret
imull
and
jl
mov
and
es
pop
in
in
and
mov
clc
icebp
jno
lock
lds
xchg
jnp
pop
pop
sub
in
cld
or
ds
or
dec
mov
ffreep
adc
sbb
mov
sbb
arpl
push
shrl
hlt
push
cmp
mov
mov
mov
idivb
jbe
push
xchg
push
sarb
inc
mov
ja
hlt
nop
pop
or
xchg
jae
xor
inc
cmpsl
or
mulb
mov
hlt
lret
push
pop
pop
and
xor
loope
add
dec
sub
aas
jne
mov
pusha
test
sub
in
insl
sbb
clc
clc
pop
lock
insl
inc
jecxz
inc
mov
hlt
or
pop
lods
pop
lods
aam
and
sbb
pop
popa
ffree
jb
aad
int3
push
pop
jp
popa
push
xchg
sbb
and
js
pop
jne,pt
int3
cmp
cmpsl
shr
ja
jbe
xor
pushl
sub
lret
xor
push
div
aas
lock
mul
inc
fcompl
cmp
sahf
ret
pusha
cmp
or
pop
lods
sarb
inc
popf
mov
inc
gs
insb
mov
es
adcb
pushf
ret
movsl
sti
in
dec
adc
jmp
mov
sti
mov
rorb
mov
xchg
dec
push
andb
clc
sub
and
dec
inc
and
hlt
cli
mov
inc
jg
xchg
adc
adc
fwait
sub
cli
inc
cmc
sub
sar
sbb
cmp
loopne
inc
sub
xor
fadds
test
pusha
icebp
call
movsl
cmpl
jle
or
dec
movl
jle
pop
mov
ja
sub
and
jg
inc
pop
jno
push
nop
push
inc
clc
hlt
mov
dec
ss
test
push
test
sub
cmc
addl
push
lahf
pop
and
pop
inc
in
mov
jae
push
xchg
pop
sub
cld
dec
push
mov
pop
mov
ss
cmp
testb
xchg
xchg
cmp
test
push
sbb
aam
jle
jno
mov
adc
lods
pop
push
mov
cwtl
or
negl
js
aas
fildl
and
mov
scas
ret
aam
imul
adc
fwait
insb
xor
cltd
test
ds
cmp
sub
arpl
ja
dec
dec
mov
jmp
push
mov
insb
scas
mov
sub
cmp
popa
mov
jne
sub
jne
xor
stos
mov
push
loopne
scas
jne
sub
or
popf
jae
bsr
movsb
push
mov
push
or
loope
ljmp
popf
popa
and
int
xor
hlt
jg
xchg
stos
sbb
push
mov
mov
jp
or
xchg
mov
xor
xchg
pop
sbb
lahf
xor
mov
stc
xor
mov
in
addr16
pop
push
xlat
push
loope
fistpll
inc
loope
sub
icebp
dec
cwtl
jp
and
and
cmp
cwtl
movsl
aaa
push
mov
and
stos
sbbb
fsubrs
pop
leave
mov
cmc
adc
lea
insb
test
and
jns
or
xchg
neg
add
push
enter
xchg
iret
sub
xor
scas
mov
cmpsb
add
test
addl
mov
pop
test
or
aaa
je
lods
ret
and
jo
aaa
aam
int3
cmp
je
jo
inc
test
mov
xor
movsl
mov
push
mov
stos
inc
adc
inc
mov
sbb
lret
push
ds
inc
mov
sub
jbe
outsl
popa
mov
sbb
pop
dec
sub
shrb
sbbb
jecxz
jp
cmp
std
cmpsb
push
dec
or
cmpsb
lahf
pop
out
and
fildll
test
outsl
adc
mov
adc
adc
push
arpl
addr16
and
push
inc
scas
lods
sahf
and
fisttpll
xor
and
jns
push
jg
mov
cld
aad
in
pop
loopne
jg
pusha
lock
mov
fdivrl
mov
push
enter
les
push
or
shlb
adc
and
xchg
lret
cld
daa
xor
sub
inc
cmp
lret
lods
movsb
test
xchg
sub
mov
arpl
repnz
arpl
pop
movsl
sbb
in
popf
adcl
mov
ds
test
mov
stc
cmc
outsb
dec
notb
sti
push
inc
inc
xchg
push
push
push
test
stos
stc
xchg
or
subb
jmp
pop
scas
es
arpl
cli
xor
mov
push
lcall
jae
sbb
jp
je
xor
mov
cld
je
fadds
fidivs
imul
mov
xchg
cwtl
aad
dec
hlt
sar
add
js
psubq
sti
mov
shlb
xchg
inc
cmp
ss
int3
stos
test
pushf
shl
xor
xor
push
mov
xor
fs
stc
adc
mov
sub
add
mov
stc
fwait
xor
cmpsl
jae
fimull
adcb
and
ja
inc
loop
and
test
mov
dec
jno
ss
lock
cli
mov
push
and
outsb
mul
push
adc
xchg
xor
xchg
outsb
imul
sarl
jmp
fimuls
pop
bound
dec
add
push
ss
push
sbb
int
repnz
adc
or
dec
and
ret
movsl
or
das
pusha
mov
nop
daa
adc
bound
aas
sbb
popa
add
es
adc
jp
or
mov
imull
out
push
sub
add
jl
ja
loopne
imul
outsl
mov
pop
push
rcrb
iret
test
jle
call
outsl
or
jg
and
jnp
sar
push
enter
fdivl
sahf
paddb
mov
adc
movsl
mov
mov
out
dec
cmp
out
and
pop
lods
and
cmp
xor
xorl
lods
ds
roll
xor
pop
push
movsb
mov
mov
sbb
shrl
mov
pusha
lcall
xor
das
inc
mov
xor
push
movd
daa
jno
cmc
dec
adc
lahf
arpl
rcrb
mov
rcr
jns
push
mov
mov
lds
pusha
push
xor
lods
dec
nop
daa
jl
inc
inc
lret
and
mov
test
xor
cmp
xor
push
inc
inc
cmc
arpl
add
or
in
and
push
lds
cmp
xor
inc
and
leavew
cmp
rcpps
outsb
pop
js
cmpsl
imul
push
and
inc
cmc
test
fldenv
mov
push
adc
into
das
shlb
jge
dec
aad
inc
sub
aad
or
repz
push
jp
pushf
push
shrb
push
pusha
lret
leave
cmpsb
mov
fwait
stos
ss
pop
xor
dec
push
dec
or
cltd
aad
inc
dec
jl
jl
mov
mov
stos
xor
jle
xorl
push
repz
cmp
shll
lret
fnstcw
insb
add
adc
mov
dec
shlb
xor
je
xor
dec
pop
sbb
adc
orl
ljmp
mov
pop
jbe
sbb
cmpsl
mov
outsb
inc
sbb
push
pop
dec
in
jmp
out
mov
stos
cmp
addl
in
sti
loopne
int
addr16
push
ffreep
pop
jb
sbb
sarb
add
pop
ja,pt
inc
push
cmc
push
xor
push
push
inc
movsl
fldl
pop
int
std
cmp
add
flds
inc
int
test
xor
test
dec
xchg
xchg
insb
cmc
repz
ds
fcmovb
jge
add
aas
idivl
in
int3
jecxz
lods
adc
nop
dec
dec
jnp
push
cltd
add
adc
mov
filds
adc
cmc
ss
cmp
jns
adc
lahf
and
cmp
fcomps
in
mov
es
sub
mov
push
sbb
push
pop
lods
cmc
inc
hlt
dec
sbb
mov
mov
push
jae
sbb
ret
lret
xor
test
gs
int
sti
mov
fcmovbe
in
int
pop
testb
int
rcr
jno
pop
and
mov
inc
cmp
mov
or
lods
xchg
or
mov
xor
mov
pop
mov
mov
gs
stc
mull
mov
sbb
pop
cltd
and
test
pop
cmp
subl
popl
adc
jl
push
cmp
xor
in
lret
jns
repz
pop
ja
push
xchg
testb
lret
negl
mov
bound
movsb
mov
fcomi
dec
sbb
pop
test
mov
adc
aas
adc
push
inc
sub
aad
jae
push
shll
je
les
or
mul
mov
mov
dec
adc
leave
add
cmp
xchg
shl
test
fdivrl
inc
add
mov
mov
in
dec
aas
cltd
inc
je
rcr
pop
pop
repz
std
call
xor
pop
pop
push
pop
sbb
inc
pop
stos
xor
lds
aam
imul
lods
xor
lea
cld
aam
outsb
xor
adc
mov
in
lods
push
pop
dec
mov
mov
sub
adc
push
rclb
mov
mov
xchg
cld
or
and
push
pop
test
push
push
dec
pop
aad
popa
jle
int
jo
les
mov
shlb
adc
xor
inc
aaa
sbb
xor
mov
fprem1
mov
and
lahf
xchg
add
push
mov
sar
or
popf
loop
push
mov
ja
out
sbb
aam
test
sub
and
cwtl
gs
dec
idiv
push
in
pushf
xchg
xor
test
xor
mov
push
lea
sbb
daa
shl
popf
je
add
mov
lcall
loop
mov
and
call
fildll
aas
lea
sbb
mov
pusha
sbb
bound
lock
mov
inc
xor
cmp
inc
mov
cmpsb
arpl
outsl
insl
cmc
lds
mov
call
push
mov
loop
fptan
cmp
test
orb
aam
xchg
lods
gs
push
aaa
dec
cmp
lret
dec
push
xchg
pop
dec
add
je
and
cmp
fucomip
jl
adc
inc
sbb
pushf
call
xor
sti
mov
movsb
sub
sub
daa
adc
sub
cmc
mov
rorl
into
adc
xchg
mov
mov
mov
enter
cs
xchg
cmpsl
jmp
or
pop
and
push
popa
mov
mov
test
ffree
sbb
xorb
jl
pop
xor
add
jp
mov
inc
or
pop
inc
push
adc
sbb
inc
pop
decl
sti
fstpl
jns
adc
mov
cmp
xchg
jo
jns
mov
int3
addl
int
jns
shrb
std
nop
jo
icebp
lea
push
lret
sbb
mull
jecxz
adc
push
sbb
or
fs
jmp
push
aaa
lahf
xacquire
cld
xchg
call
adc
out
pop
arpl
xor
pop
inc
pop
push
pop
subb
or
divb
mov
push
aas
inc
sahf
xlat
cmpl
push
sbb
adc
mov
cwtl
ja
cmpsl
sbb
dec
inc
movsb
inc
jg
xorl
mov
mov
fisttpll
or
add
aam
pop
daa
shlb
cmc
shlb
cmp
in
jb
test
test
les
rcr
mov
jmp
fcompl
sbb
xchg
inc
cmp
ret
add
ss
mov
xchg
push
clc
sbb
mov
inc
or
xchg
xor
pop
jle
nop
push
cmp
jnp
cmp
in
inc
push
lods
jp
imul
sub
dec
out
enter
mov
adc
and
aam
pop
jns
scas
push
into
push
pop
fcmovbe
push
adc
idivb
dec
xor
lods
stos
rcll
xchg
and
and
mov
and
cmp
pop
add
fdivrs
js
dec
pop
xor
mov
add
test
aam
push
pop
inc
and
cmp
and
out
mov
inc
std
cltd
cmpsl
xor
fcompl
sbb
push
pop
mov
pop
push
push
mov
jp
cld
std
jg
xor
cli
xlat
dec
addr16
mov
mov
sbb
rclb
scas
orl
xor
jae
andb
jne
mov
loope
outsb
dec
mov
aas
stc
orb
icebp
ja
loope
test
xor
jnp
or
mov
push
dec
lods
sub
fidivs
out
stos
cmp
jb
pop
aaa
push
or
hlt
fldenv
xchg
mov
ljmp
sbb
sbb
std
ficompl
pop
push
xor
inc
fld
lds
insl
fidivrs
rclb
push
repz
ja
addl
leave
sbbb
das
mov
pop
shrl
sbb
cld
add
adc
in
mov
faddl
fsubrl
push
aaa
movsb
xchg
cmpsl
pop
dec
arpl
add
push
adc
inc
daa
test
lahf
cmp
cmc
stos
pop
rcll
outsb
test
cmc
test
push
pop
flds
and
cmpl
fwait
inc
aad
aaa
push
jl
ret
mov
sbb
push
cmpsl
movsl
push
jne
clc
inc
dec
jb
cmp
mov
dec
push
cmp
push
inc
and
sub
sti
int3
add
push
test
sbb
cwtl
pop
mov
nop
sbb
outsl
insl
daa
jle
test
inc
dec
es
dec
jmp
dec
mov
mov
test
xchg
mov
push
rcr
jecxz
aaa
lods
aam
sbb
adc
cltd
pop
mov
testb
subb
cmpsb
xor
xlat
mov
ds
cmova
stos
stos
pop
test
shrl
ljmp
addr16
lret
push
popf
iret
cli
movsb
leave
pop
mov
mov
mov
loop
xor
jmp
jl
in
xor
cli
stos
cld
mov
icebp
clc
xor
int
inc
scas
js
js
std
or
mov
mov
vmwrite
jns
xchg
jb
aad
inc
aam
mov
repnz
leave
iret
enter
ret
gs
pop
jne
stos
out
stos
nop
inc
stos
push
lods
in
dec
jb
ss
mov
fcmovnbe
aad
mov
or
pop
push
mov
and
fisubl
push
imul
test
xchg
les
inc
or
lcall
mov
in
pushf
test
push
pop
stos
jne
cwtl
std
push
inc
adc
mov
sub
lock
aam
sbb
in
das
mov
adc
in
call
xor
xchg
clc
rorl
sbb
dec
add
orl
xor
push
or
outsb
sbb
clc
scas
push
out
inc
adc
cli
mov
jle
out
in
pop
add
mov
and
mov
filds
clc
inc
sahf
lret
int3
dec
mull
and
pop
leave
dec
or
test
shr
fldcw
cmp
fisubs
sub
loop
or
sbb
ss
test
scas
clc
sbb
es
jb
jg
iret
inc
or
ret
stc
pop
push
hlt
cmp
mov
lahf
mov
icebp
push
cltd
mov
cmp
sahf
int3
fs
pushf
inc
lret
rcr
aaa
inc
fdivr
pop
call
dec
cmp
pop
jb
hlt
push
push
ficoml
lods
mov
inc
js
fwait
mov
push
jo
mov
xor
jbe
pop
cmpl
and
mov
cli
arpl
inc
jno
pop
cmc
std
inc
and
or
lret
sub
sti
test
adc
mov
imul
stos
inc
call
aas
lcall
and
dec
aaa
ja
xchg
enter
sbb
xchg
jnp
jne
loopne
mov
icebp
mov
incb
xchg
or
inc
sub
xchg
push
jge
movsb
push
fists
ret
cmc
movsl
out
repnz
jno
sbb
add
shlb
or
pop
sub
sub
inc
cmp
inc
or
and
daa
sub
and
imul
cwtl
decl
mov
xor
mov
outsl
subl
push
int3
xor
out
mov
vandnps
mov
enter
add
rcll
add
notl
fidivrs
mov
imul
decb
ds
mov
insb
adc
xchg
push
inc
cld
stos
lea
test
and
xchg
sbb
test
mov
adc
xor
push
pop
inc
dec
adc
sbbl
xor
inc
push
lods
mov
adc
mov
fs
adc
jbe
jp
adc
push
sahf
std
pop
and
int3
and
add
mov
gs
test
incb
out
inc
inc
xor
fimull
xchg
shlb
addb
push
repnz
or
pop
repnz
xlat
pop
test
mov
lret
jle
lcall
xchg
cmc
pop
or
cmp
inc
pop
scas
push
xchg
mov
in
or
jge
fcomps
or
sbb
push
adcl
push
xchg
xchg
lds
rcrl
pop
jecxz
mov
repz
mov
cmpsb
sbb
js
xchg
insl
ja
mov
sbbb
jnp
data16
cmc
sbb
cwtl
stc
mov
adc
push
add
xchg
or
arpl
lock
cmpsl
push
jae
sti
jns
lret
add
aad
test
aas
sub
cmp
icebp
sbb
roll
push
data16
es
imul
or
sahf
movsb
xadd
popf
jae
lret
inc
lret
fucomp
cmp
xor
jo
pop
aam
cmpsb
inc
inc
stos
popa
repz
pop
push
mov
imul
clc
lods
pusha
gs
enter
pop
fbld
push
test
sub
fwait
cmc
push
dec
jle
mov
xor
addr16
les
jne
push
xchg
add
push
outsl
movsb
cmp
rcll
push
mov
fisttpl
notl
popf
jb
and
pop
inc
and
dec
clc
xor
std
sti
int
int3
pop
add
movsb
stos
pusha
lret
or
in
cltd
lods
movsl
dec
addr16
cmpsl
cs
pop
cs
addr16
xlat
cmp
lock
shlb
imul
ja
push
mov
je
pop
pop
or
insb
mov
imul
and
cmc
xor
mov
xchg
pop
lret
jmp
jo
push
sub
scas
ret
mov
mov
dec
lea
addr16
iret
inc
sbb
pop
rcrb
shll
cmp
xchg
push
and
jb
lret
sub
in
popa
scas
or
jno
sbb
dec
and
pop
call
movsl
sub
xchg
insl
xchg
lds
and
dec
xchg
push
js
in
xor
clc
mov
mov
jo
mov
mov
sub
adc
inc
dec
icebp
lods
push
and
dec
sti
push
sub
sti
dec
cmp
push
cmp
pop
ljmp
pop
lret
jne
lods
pop
xchg
insl
mov
aam
out
push
addr16
push
push
jl
push
stos
loope
push
sbb
inc
fcmovbe
fdivr
aam
scas
and
mov
push
pop
add
pushw
mov
lcall
and
push
mov
pop
clc
lret
pop
call
mov
add
ret
jno
ror
dec
xchg
mov
stos
cli
div
push
addr16
lcall
mov
pushf
int3
aam
mov
inc
fwait
cmpl
mov
mov
cmc
ja
jmp
sbb
and
pop
pop
iret
enter
js
push
call
inc
clc
inc
fcmovnu
clc
dec
fnsave
pop
fcmovne
clc
pop
fbld
and
ds
test
xchg
repnz
dec
jg
lret
cmc
cmp
xor
fsub
inc
lret
shrl
lock
push
cmpsb
xchg
mov
and
mov
lods
push
cmc
push
add
sahf
sti
cwtl
enter
mov
imul
iret
shr
lret
jnp
in
stos
jp
lret
imul
mov
mov
out
ss
push
pop
movsl
mov
pop
ss
fildl
mov
es
pop
xchg
cs
sbb
rclb
out
xchg
rcrl
aaa
nop
xchg
mov
test
xchg
in
es
mov
lret
push
ja
xchg
and
sub
in
xor
dec
sbb
jo
push
sbb
outsb
fistpl
cmp
js
scas
aaa
cld
xchg
aam
or
pop
add
inc
cs
gs
mov
or
outsb
lds
xor
dec
leave
ss
xchg
dec
cltd
adc
js
xchg
sub
cltd
pusha
pop
lea
inc
add
popa
mov
pop
das
add
adc
xchg
adcb
ss
jmp
mov
xchg
push
test
cs
sub
push
je
stc
jne
add
rcrb
enter
inc
mul
enter
sub
es
sbb
movsl
cwtl
sub
xor
shlb
mov
push
inc
xor
inc
add
mov
call
stos
inc
pop
mov
or
sbb
mov
jnp
movsb
test
sub
push
imul
leave
and
test
jne
and
mov
pop
shll
adc
fwait
mov
push
arpl
cs
bound
add
js
xchg
outsl
inc
xchg
and
ret
cld
and
faddp
imul
mov
addl
sbb
and
gs
mov
cmp
pop
aad
add
cmp
shll
jo
inc
push
jb
sub
push
jno
shl
sub
repnz
mov
sub
lcall
xchg
push
cmp
hlt
iret
test
xlat
sbb
push
fidivl
jp
daa
imul
jnp
sub
sub
lret
sbb
nop
xchg
stos
aad
inc
stc
push
sub
addl
inc
adc
addr16
stc
fimuls
xor
movsl
imul
cmp
inc
mov
and
imul
mov
test
push
push
mov
xor
bound
inc
cmpsb
les
in
insl
movsb
cmc
in
pop
xor
mov
pop
inc
pop
or
stc
and
mov
int
mov
push
repz
sub
adc
js
js
ror
not
test
jnp
flds
jl
nop
shll
cmp
xchg
dec
adc
push
jecxz
into
in
pop
imul
xor
push
sub
aam
ljmp
pop
ret
dec
sbb
dec
xchg
pop
mov
mov
cmp
push
aaa
xor
fnsave
outsl
pop
pop
test
add
pushf
xor
fistpl
jmp
mov
bound
leave
xor
test
adc
jns
pop
mov
jo
push
mov
sbb
idivb
lods
mov
sbb
ficomps
insb
aaa
scas
ret
pop
or
jo
les
pop
pop
inc
mov
sbb
in
test
movsb
jae
movsl
stc
pushf
sub
sbb
or
xchg
lret
andb
fdivs
popf
xor
or
mov
int3
lret
pop
xor
xchg
sahf
or
dec
jg
sub
mov
stos
lock
sub
mov
cmpsb
or
stos
test
sbb
lcall
test
lret
insb
dec
movl
lods
push
in
imul
push
ja
ds
mov
lahf
inc
xor
inc
test
cmpsb
test
push
dec
data16
dec
pop
sub
mov
jne
int3
cmpsl
push
inc
fwait
jge
imul
lods
inc
lds
add
std
mov
cli
and
inc
dec
jns
sub
scas
jecxz
xorb
test
sbb
and
aaa
push
enter
adc
sub
div
bound
dec
xor
cmp
es
enter
push
jno
jg
dec
mov
xchg
jge
jae
push
xor
pop
xlat
dec
cld
std
repnz
mov
adc
leave
not
inc
out
mov
je
inc
inc
test
xor
and
ja
push
cmpsl
cmpsl
rolb
sbbl
jmp
push
mov
cs
stc
testb
jnp
movsb
jne
pop
sahf
xor
das
popf
jae
sub
jecxz
mov
cmc
repz
inc
and
rclb
or
aaa
ror
lods
xchg
lock
mov
pop
mov
mov
or
mov
adc
daa
xchg
adc
mov
sub
lods
cld
fs
xchg
test
lods
jg
pusha
dec
inc
ret
shll
neg
lock
sbb
mov
xchg
push
mov
ja
mov
in
ljmp
shlb
xchg
inc
mov
or
pop
inc
sub
sub
xor
lods
mov
pop
adc
pushf
icebp
clc
xchg
xchg
bnd
push
andb
in
fbld
sar
mov
and
int
cmp
lahf
xchg
and
je
repnz
jecxz
sbb
sub
pop
inc
inc
cld
mov
std
test
fistpll
faddp
xor
xor
mov
adc
loope
xlat
out
cli
xchg
add
fld
test
push
mov
jo
sbb
pop
fdivr
push
pop
mov
fldl
outsb
ret
inc
mov
mov
cmpl
negl
aas
cmc
pop
push
xor
test
enter
sti
xchg
cwtl
pushf
movsl
push
dec
push
lods
mov
cs
push
leave
inc
mov
clc
cmpsb
adcb
jg
mov
in
repz
mov
lds
fs
pop
jb
pop
call
inc
popa
mov
jg
or
mov
push
jo
and
ds
ret
cmp
pop
adc
sbb
inc
xchg
mov
test
mov
push
fdivs
loop
repz
stos
sbbb
and
jge
mov
das
shlb
and
js
adc
enter
xchg
lahf
and
mov
inc
fbstp
lods
inc
mov
sub
inc
sub
sub
loope
dec
pop
dec
adc
int3
cs
push
les
movsl
data16
pop
push
mov
xor
mov
test
pop
inc
imul
sbb
lds
insl
sub
jecxz
add
sbb
scas
sbb
jle
subl
loopne
add
cld
lahf
test
adc
xchg
aad
push
and
and
mov
mov
in
psrlq
shrb
enter
dec
sub
insb
pop
or
xchg
push
xor
ds
icebp
and
shlb
sbb
imul
add
pop
jae
xchg
lock
mov
cltd
xchg
addl
sbb
arpl
sub
dec
lea
pop
mov
sbb
popa
sbb
push
icebp
mov
and
inc
mov
stos
scas
and
test
sub
push
xor
imull
stos
push
repnz
lret
leave
movsb
xor
mov
sbb
test
mov
xchg
add
sub
cmpsl
int
push
and
shrb
adc
sti
test
jns
lods
sbb
lds
jae
js
adcl
jno
or
mov
iret
testl
mov
cld
and
add
cld
outsb
pop
adc
adc
and
inc
nop
test
jbe
roll
jl
aad
dec
rcrl
outsb
notb
sahf
add
xor
mov
xor
dec
repz
ja
pop
and
mov
cmp
fcoms
shlb
iret
lods
inc
test
out
or
or
dec
clc
jmp
scas
pop
mov
rol
push
dec
cmc
jg
in
xor
lods
fdivp
cltd
fucomp
mov
test
loope
sbbl
push
xor
xor
jge
mov
push
xchg
cmpsl
mov
jle
aam
sbb
mov
sub
adc
cmc
decb
cmp
mov
jl
mov
cmpl
dec
lods
and
and
repz
xlat
pop
cltd
and
hlt
mov
inc
pop
cmp
xchg
xor
pop
stos
scas
and
or
xor
push
mov
sbb
sbb
jns
sti
gs
mov
add
cltd
xor
lahf
out
jmp
je
rol
mov
fs
cmp
sbb
lret
add
ljmp
inc
and
cmp
adc
dec
inc
hlt
mov
lods
sti
push
enter
lret
pop
sbb
inc
jns
add
cmpsl
in
jbe
xorl
int
rorl
dec
adc
push
sub
mov
mov
jl
jg
push
cmc
cmpsl
lds
xor
lea
loop
dec
test
or
inc
hlt
sbb
lods
sub
mov
sub
sub
fcoml
cmp
rorb
scas
nop
mov
pop
and
xor
and
outsl
push
das
inc
aam
pop
lret
push
xor
xor
icebp
iret
add
andl
aaa
int
mov
das
aaa
and
into
stc
lret
icebp
scas
bound
jae
dec
es
aad
xlat
mov
jo
adc
jne
popf
jl
mov
aam
push
ret
imul
sbb
stos
sbb
icebp
std
aaa
aaa
pop
or
roll
inc
sbbl
lods
les
push
icebp
cmpsb
dec
or
scas
enter
xchg
mov
sub
test
pusha
shrw
jo
addr16
lret
sbb
cwtl
mov
stc
fdiv
stos
push
test
stos
add
inc
sbb
inc
pop
sub
mov
adcb
out
inc
jo
stos
mov
insl
ljmp
leave
sbb
cmc
daa
repnz
adc
lcall
out
xor
sbb
or
test
arpl
xchg
push
sbb
gs
addr16
roll
das
push
and
mov
data16
lcall
inc
adc
or
pop
divl
adc
xor
movsl
ffreep
div
je
mov
push
lret
pop
dec
pop
les
jecxz
push
imul
pop
sbb
cmp
pop
je
les
addr16
mov
xor
out
sbb
aad
mov
adc
lea
aam
pop
das
mov
cld
add
les
sti
mov
xchg
sub
ret
jg
lods
adc
and
cmp
inc
sti
dec
frstor
arpl
shlb
and
mov
adc
imul
test
and
mov
fimull
inc
pushf
ljmp
mov
in
je
fnstenv
cmp
into
lds
pop
movsl
mov
add
int3
jne
jmp
jbe
out
mov
pop
pop
sub
mov
jmp
sbb
daa
lock
inc
hlt
pop
imul
aas
sub
fisubrs
sub
sbb
push
pushf
pop
dec
jne
cmpsl
insb
out
cld
fidivl
jge
jb
dec
stos
dec
push
cmp
adcl
sub
imul
wbinvd
push
and
dec
scas
call
pop
add
dec
fldenv
sbb
aas
jne
fcomps
fnsave
mov
sahf
xchg
pop
and
ss
leave
inc
xchg
adc
and
dec
ret
pushf
mov
mov
repz
or
sti
mov
jmp
daa
or
sti
mov
push
push
pop
mov
lcall
inc
idivb
insl
lea
or
loopw
mov
stos
mov
jecxz
outsl
mov
cmpsb
adc
dec
pop
inc
pop
cmp
mov
pop
jmp
fiadds
imul
xorb
xor
inc
dec
dec
dec
push
rcrb
out
cs
movups
dec
fucomi
dec
loopne
out
push
loop
aad
aas
add
mov
js
sbb
pop
cmp
hlt
mov
xor
mov
xlat
jae
xor
das
sub
movsb
stos
inc
inc
lock
sbb
aaa
out
jns
ss
jge
or
sbb
insb
iret
pop
mov
mov
mul
incl
cli
inc
fnstenv
sub
shrl
call
std
shl
and
xchg
or
pop
rol
insb
xor
repnz
sub
pop
stos
aas
rcll
and
mov
push
mov
imul
add
iret
push
inc
inc
sar
mov
in
ljmp
ljmp
mov
cmp
adc
or
cmp
adc
nop
lods
ds
and
adc
int3
cltd
sub
mov
sti
add
lock
fwait
jns
mov
push
enter
mov
lds
mov
xchg
loop
jmp
mov
in
push
mov
movsl
pop
hlt
fwait
icebp
imul
mov
jp
push
pop
or
lahf
call
pop
adc
sahf
gs
subl
rcll
xor
aad
mov
mov
mov
fnstsw
cli
or
cwtl
and
stos
pavgb
push
stc
xor
stc
in
jecxz
mov
insl
mov
mov
or
in
xchg
push
test
cltd
jge
loop
jbe
lahf
imul
xchg
mov
xor
notb
jecxz
mov
sarl
lods
arpl
xchg
jmp
aam
jns
ljmp
push
xchg
and
jb
mov
idivl
leave
pop
aam
xlat
pop
mov
leave
jmp
ja
out
je
mov
pusha
cmc
insb
in
xchg
in
xor
jmp
shlb
rorl
fimuls
mov
arpl
sbb
gs
xchg
inc
mov
mov
callw
jnp
popf
adc
mov
sahf
jle
inc
push
pop
nop
cmc
pop
hlt
mov
jle
in
or
out
in
mov
sub
cmpsl
fmul
int3
inc
in
jmp
call
hlt
aam
fidivrl
mov
xchg
je
sub
mov
mov
pop
lret
stc
fcom
enter
sub
mov
xchg
pop
stc
add
sbb
mov
xor
fmuls
ds
mov
pop
lock
push
les
fdivrs
dec
cmp
jae
or
rcrb
jns
movsb
call
js
xchg
iret
cmpsb
clc
push
leave
out
and
lock
mov
dec
loop
in
ljmp
mov
rcr
jle
mov
sub
shrb
bnd
clc
fisubrl
adc
in
mov
outsl
in
hlt
add
cs
add
mov
fstp
cmpsl
iret
or
add
leave
mov
bnd
popf
loope
lret
pop
loop
adc
vpmulhw
mov
add
mov
shl
out
btc
xchg
pusha
aad
jg
out
movsb
push
mov
pop
lcall
test
add
sbbb
mov
fstpt
mov
cmp
pop
iret
mov
dec
je
in
add
outsb
nop
test
mov
add
rorl
clc
push
clc
outsb
in
shrl
mov
inc
sub
ror
mulb
mov
pop
shl
in
inc
lock
ret
mov
inc
aam
lcall
sub
repnz
or
aam
ljmp
or
mov
or
inc
neg
cmp
or
std
sahf
rcrb
adc
in
fidivrs
lret
mov
fs
or
mov
pop
jmp
push
xlat
push
rclb
ret
inc
pushf
insb
in
es
mov
in
lds
adc
fucomi
xchg
pop
fists
ljmp
xchg
mov
loop
lret
ja
xchg
pop
sarl
ljmp
sbb
mov
push
mov
out
mov
fsts
pop
leave
in
add
mov
insb
in
jmp
rcr
xchg
push
andb
jecxz
push
fisubs
mov
push
ds
xor
jge
pop
in
xchg
cmc
fs
leave
mov
pusha
fsubr
jb
mov
mov
add
loopne
into
adc
adc
mov
xchg
push
pusha
mov
jb
imul
into
jo
daa
ds
dec
or
mov
cwtl
adc
jno
stos
in
rcll
jne
out
int
adc
mov
push
and
icebp
inc
mov
stos
xor
dec
cld
lret
mov
lock
in
out
add
dec
inc
push
leave
ret
cmpsb
ficompl
je
dec
gs
es
push
int3
mov
cmpsb
fwait
jp
mov
lcall
cmpsl
inc
xlat
leave
mov
push
jle
pop
lds
testl
int3
push
jae
call
add
arpl
lret
sahf
xor
in
arpl
jmp
movsb
or
std
data16
pop
and
in
mov
movsb
push
lds
or
es
sub
fucomp
scas
cmp
rolb
fucom
jl
cli
in
lods
aam
loope
fnsave
out
hlt
push
mov
mov
call
sahf
jbe
mov
jo
fildll
in
mov
jmp
mov
movsl
out
adcl
inc
mov
mov
out
ret
and
xchg
cwtl
push
mov
or
cld
push
mov
inc
inc
in
jmp
shrl
jae
mov
jno
xchg
and
fdivs
movsb
xor
pop
lahf
or
in
push
lret
pushf
jne
mov
nop
or
xor
cmp
mov
in
or
cwtl
pop
dec
cmc
push
jo
adc
push
pop
pushf
in
paddusw
cwtl
push
mov
jecxz
fstps
stc
push
test
jnp
loop
in
rol
aaa
loopne
jne
or
ffreep
cmpsb
loop
into
test
cmpsb
xchg
out
xchg
jp
movsb
out
dec
mov
mov
je
mov
xchg
xchg
dec
fists
enter
sahf
hlt
xchg
dec
xlat
jp
and
popf
push
mov
xchg
xchg
cmp
mov
mov
mov
andl
in
ljmp
add
loop
in
cmpsb
enter
enter
inc
or
int
inc
mov
lock
stc
mov
insl
ret
popa
jmp
scas
shl
ljmp
cmpsl
ffreep
out
xchg
or
jo
push
or
loop
cmp
fidivs
add
inc
pop
imul
or
ljmp
stos
out
imul
lret
push
std
jnp
out
mul
sub
jl
add
mov
push
fcom
jecxz
jle
cmpsl
cwtl
push
cmpsl
out
pop
scas
xorb
fisttpl
in
inc
jmp
xchg
or
aas
in
push
gs
js
addl
pop
in
mov
int
mov
aaa
or
aam
pop
cld
mov
mov
rcrb
pushf
dec
mov
lcall
jecxz
add
fwait
inc
inc
scas
dec
fs
or
cltd
xor
addr16
dec
push
in
ret
push
lock
mov
out
inc
fdivl
pushf
add
xchg
ret
mov
mov
shl
mov
repnz
gs
insb
js
out
add
mov
mov
xchg
subb
jl
xchg
or
fnstenv
mov
jne
sti
add
xchg
fistpl
movsb
int3
pop
shrb
test
outsl
inc
push
ss
stc
xchg
sbb
jl
call
cmpsl
xchg
and
mov
push
jmp
sub
mov
test
loop
movsb
jne
mov
int
mov
out
sbb
loop
ds
add
push
inc
and
repz
mov
push
insb
cld
or
jecxz
xchg
gs
loopne
daa
cmpsl
pop
push
mov
xchg
aaa
add
in
pop
ljmp
faddl
xorb
ret
pop
aad
jmp
or
mov
push
cltd
cmc
scas
out
leave
in
enter
into
xor
and
xchg
or
mov
out
loope
jbe
out
call
sti
cmp
mov
cltd
add
lahf
pop
sub
mov
lret
insl
mov
ljmp
lret
fwait
ds
lret
push
es
lret
cli
dec
and
xchg
dec
xor
int3
pop
jbe
fwait
push
cli
add
cltd
cmpl
xchg
inc
stos
jg
mov
xchg
jae
cmp
sbb
test
lret
push
in
icebp
and
mov
inc
sub
imul
jo
jnp
sarb
aas
gs
rol
int
pop
jl
jmp
loopne
mov
rorb
mov
addr16
les
adc
lret
test
pop
int
xchg
ja
xor
sub
pop
ljmp
xchg
lods
sbb
mov
in
pop
ja
cwtl
push
mov
xchg
imul
cltd
add
jmp
les
mov
mov
mov
aam
pusha
jle
inc
xor
cmpsb
xchg
jb
xlat
xchg
iret
loop
add
push
jo
inc
or
mov
cmp
jle
cli
xchg
jo
mov
insb
mov
pushf
jl
int3
bound
rcrl
push
int3
cmpsl
jecxz
loopne
enter
out
jno
test
sbb
jne
jns
test
jbe
call
addr16
push
out
out
ss
lods
mov
mov
ljmp
ret
fisubs
in
mov
mov
cmp
xchg
adc
adc
clc
prefetcht1
adc
jg
imul
mov
imul
popf
lea
pushf
cltd
jae
sub
jnp
in
jns
stc
mov
pop
mov
or
mov
movsb
rorl
jge
shr
stc
loope
lds
xchg
jb
out
int
dec
notb
fiadds
rcrl
out
dec
fnstenv
cmp
cs
mov
in
outsl
mov
out
push
jmp
loopne
pop
cltd
stc
mov
leave
inc
jmp
faddl
fwait
loopne
int3
fsts
mov
and
sbb
ret
call
sbb
fcmovnbe
mov
aam
ljmp
jo
mov
mov
cltd
fwait
jnp
loop
sbb
out
leave
outsl
aad
movsb
out
mov
ret
imul
mov
mov
xchg
insb
xchg
xor
inc
cmp
sbb
insb
shlb
push
loope
cmp
jmp
popf
lret
sub
pop
adc
fistl
nop
pop
dec
dec
xor
pushf
enter
cmp
rcl
in
xchg
pop
dec
popf
jo
fnsave
out
dec
mov
out
push
mov
pop
icebp
mov
daa
repnz
rorb
jb
mov
js
mov
mov
loopne
mov
mov
sarl
jno
mov
xor
arpl
push
fisubrl
fisubl
adcl
pop
out
xchg
jg
mov
loopne
in
rorl
xchg
rorw
add
mov
cld
pop
jns
xor
jle
sbbl
negb
dec
xor
aam
mov
jno
aaa
dec
int
ljmp
cli
mov
daa
lock
xchg
es
leave
inc
bound
push
jmp
loope
sti
pop
jmp
outsb
jbe
mov
pop
ja
xchg
int3
mov
fwait
push
imul
gs
cmp
push
sbb
sbb
pop
int3
mov
in
mov
fmuls
aam
lret
dec
jmp
sub
inc
pop
dec
mov
imul
mov
std
cld
fs
lds
cmpsb
loop
push
dec
fidivrs
xchg
inc
push
lods
in
clc
sahf
xchg
or
push
sahf
xchg
rol
mov
imul
xor
add
lret
repz
jno
inc
xchg
inc
jge
sub
mov
mov
mov
pop
enter
daa
shl
ret
lret
pop
dec
fcoms
adc
aad
xchg
mov
iret
in
jbe
jmp
std
add
mov
loop
fildl
xchg
loopne
jae
test
out
pusha
jp
push
ljmp
add
test
imul
xor
xchg
cmc
add
call
pop
adcl
push
rclb
or
stc
or
push
pop
push
cltd
add
in
stos
push
stc
mov
or
xchg
lret
xor
in
inc
out
jg
mov
popf
out
fidivrl
ret
or
fs
mov
xchg
pop
inc
mov
xlat
roll
leave
fiadds
out
push
xchg
call
jp
dec
subb
push
mov
std
push
ja
into
or
fists
aaa
lret
cmp
push
cli
mov
icebp
adc
xchg
scas
add
cmp
jae
in
jmp
mov
nop
xchg
ja
in
stc
inc
pushl
cs
jae
mov
jmp
clc
or
stos
outsb
push
add
in
xchg
scas
pop
mov
jecxz
mov
xor
frstor
fbld
cwtl
nop
inc
lahf
cltd
add
fxtract
movsl
xlat
xchg
lret
xor
mov
mov
incb
or
add
clc
dec
mov
xchg
aam
mov
icebp
shrb
cltd
outsb
push
jmp
sbb
ja
lret
cmp
pop
jge
in
push
mov
int
jne
call
ret
outsl
add
int3
mul
iret
dec
clc
xchg
mov
loopne
lret
call
cltd
je
xchg
dec
mov
repz
or
leave
je
mov
sbb
mov
or
fsubl
je
out
test
inc
mov
in
movsb
insb
inc
adc
mov
push
mov
ret
jmp
mov
mov
xlat
lods
popf
jge
ljmp
loop
dec
in
ljmp
cwtl
out
clc
sar
arpl
fbld
push
setg
loope
mov
in
or
cli
adcl
mov
ljmp
negl
clc
jns
and
sbb
loope
push
shlb
pop
iret
idiv
sub
pushf
sti
sti
xchg
jb
or
ja
xchg
lret
mov
dec
fcoms
cwtl
pop
out
xor
ljmp
cli
test
mov
cld
imul
out
jge
add
pop
cld
push
out
lahf
out
pop
sbb
dec
sbbb
in
fwait
mov
jb
enter
mov
pop
iret
stc
add
mov
xchg
fwait
mov
imul
or
xchg
loop
adc
out
pop
mov
pushf
mov
loopne
push
and
sahf
push
mov
fwait
inc
into
mov
dec
mov
xchg
jne
dec
data16
arpl
stos
sbb
cmp
imul
push
add
out
test
addl
std
or
ljmp
pop
fwait
insb
ret
pop
fstl
lret
xchg
cwtl
inc
jo
fmuls
xchg
loope
xor
pushf
push
xor
shl
out
xchg
dec
pop
cmp
cltd
fs
push
ja
std
ja
sbb
test
int3
push
mov
dec
out
push
or
xlat
scas
dec
scas
out
sbb
outsl
push
lret
adcb
lret
jo
inc
cltd
fdivrl
mov
jl
xchg
js
cmp
jmp
mov
repz
mov
jbe
cs
inc
leave
adcl
cs
adc
out
out
jbe
popf
testb
test
shll
xor
inc
jmp
lret
cltd
ljmp
subb
or
fidivrl
into
mov
xchg
outsb
pop
fcmovnb
loopne
sahf
jmp
cmpsb
push
lock
sbbb
nop
push
lret
xchg
nop
sbb
jp
add
leave
jno
test
into
cld
mov
inc
jnp
ficompl
xchg
pop
addr16
scas
out
ds
nop
loopne
notl
out
loope
jnp
hlt
xlat
loop
and
pushf
ss
clc
jo
mov
and
mov
cltd
and
or
or
sub
cmp
mov
inc
outsb
xor
dec
aaa
and
test
lcall
pop
or
pop
xor
cwtl
lds
xchg
fcoms
sub
hlt
data16
mov
js
push
shll
pop
cwtl
or
nop
inc
push
jecxz
mov
xchg
stos
sahf
aam
stos
xchg
pop
fcoml
lds
xchg
out
int
fnstsw
inc
mov
add
mov
or
sar
notl
dec
mov
ljmp
jmp
xchg
insl
cmpsb
lods
stc
push
mov
sbbb
cmp
ljmp
enter
push
lods
stos
or
ss
out
xorl
xchg
lock
out
idivl
jle
cld
cmc
stos
enter
out
cmp
lret
sbb
mov
cmpsb
lds
into
add
xor
ja
jecxz
cmp
mov
jnp
jbe
ljmp
in
in
xchg
lock
insb
mov
jo
loop
imul
in
add
icebp
sbb
jmp
cmpsb
fimuls
pop
fiaddl
in
out
ret
pop
xchg
mov
sbb
aam
push
ljmp
out
bnd
xchg
pop
out
lret
lds
sbbl
ljmp
mov
test
leave
into
xchg
add
sub
mov
cmpsb
into
movsl
pop
lret
ret
inc
int3
mov
aaa
fwait
addr16
sarl
or
mov
jg
mov
aam
fnstenv
repz
jge
aaa
out
in
repz
cmpsl
ljmp
pop
shlb
cli
dec
jge
stos
push
fdivrl
ret
xchg
or
loopne
lahf
jnp
xchg
lods
dec
mov
mov
adc
loop
out
or
call
pusha
lds
fcmovnb
xor
imul
jle
fimuls
sbb
lods
ret
and
inc
fstps
in
lret
outsb
in
scas
sub
xchg
enter
lock
jl
in
add
mov
sbb
pop
test
mov
outsl
mov
mov
xchg
dec
test
icebp
jnp
cmpsl
je
int3
xchg
mov
outsl
jo
add
in
repz
imul
fcoml
out
pop
shlb
je
nop
in
mov
in
jae
push
mov
aaa
cmpsl
jmp
push
mov
or
xchg
xlat
popa
lds
dec
jmp
mov
push
dec
shll
test
mov
outsl
adc
mov
enter
jmp
and
fildll
xchg
pop
call
cmpsb
jmp
jmp
push
mov
fnstenv
popf
push
xor
lret
cmp
nop
add
pop
and
rcrl
jo
out
inc
scas
jnp
jecxz
push
in
xchg
pop
mov
mov
cmp
aam
push
lret
mov
pop
jmp
leave
pop
and
fstpl
mov
inc
jnp
stos
jge
mov
data16
repz
mov
hlt
std
sub
cld
cs
out
addr16
lcall
ficoml
mov
dec
add
das
push
roll
mov
mov
out
inc
pop
push
call
aas
dec
inc
in
movnti
dec
mov
pop
jmp
and
push
inc
mov
jno
or
stos
xchg
push
push
filds
adc
into
loope
mov
push
leave
rolb
scas
fisttpl
lret
push
cmpsl
xchg
ss
mov
je
mov
insb
addr16
test
push
stos
ljmp
int
enter
mov
fstpt
mov
xor
jae
mov
aad
popf
pop
mov
cwtl
cmp
xlat
outsl
push
or
ljmp
inc
push
lret
bound
cmpsl
pop
ss
cwtl
pusha
movsb
mov
scas
clc
sbb
pop
jmp
mul
xor
adc
sub
adc
out
or
xchg
ja
mov
push
nop
lds
orl
aam
movsl
lods
mov
mov
push
int3
mov
ljmp
lods
aam
push
ret
sbb
push
jge
out
ficompl
mov
lock
je
clc
or
imul
mov
stc
jg
dec
in
pop
xor
mov
dec
mov
rorb
movd
push
xchg
jmp
test
in
aaa
xor
xchg
or
inc
out
or
cmp
mov
jecxz
inc
push
fsubrl
lds
arpl
aas
xchg
push
add
stos
dec
dec
shll
pop
loope
int3
pop
shl
push
cltd
shll
data16
out
dec
addr16
cwtl
outsb
enter
mov
lcall
mov
out
jecxz
jecxz
cmpb
sarl
cmpsb
les
cmc
push
mov
pop
dec
insb
out
nop
insb
je
add
int3
jecxz
or
aaa
icebp
push
dec
push
pushf
pop
sub
clc
add
and
in
xor
or
add
add
leave
push
pop
mov
into
push
aam
divb
loop
xchg
mov
jb
mov
stos
mov
lret
jmp
sbb
call
loope
jns
fs
gs
popa
add
mov
xchg
movsb
testl
fsubr
xor
or
fisttpl
push
jno
ret
inc
sahf
cld
adc
loop
mov
or
push
sbbb
xor
mov
adc
aam
lods
hlt
mov
lea
ja
xchg
jnp
cmp
int3
mov
dec
shrb
or
loope
xchg
mov
push
rcll
jns
mov
or
jbe
lahf
add
sbb
mov
data16
std
xchg
cmpsl
shl
inc
or
out
push
and
loope
push
xlat
cltd
xlat
mov
loopne
sti
fwait
insl
in
mov
jecxz
push
in
movl
ja
push
cmpsl
loope
ljmp
insb
iret
xchg
gs
pop
pushf
jmp
aam
jb
pop
out
fldenv
icebp
push
leave
leave
inc
push
lret
mov
ja
dec
cwtl
or
inc
sub
sub
jge
jno
mov
aam
loopne
ret
jo
jp
push
sub
lds
xor
icebp
sbb
movsb
popf
imul
lock
in
lret
and
mov
ret
out
jne
mov
add
loope
ljmp
xor
push
ret
push
mov
iret
xchg
jmp
aam
mov
out
stc
call
fldcw
pusha
in
sub
adc
into
xlat
sbb
jle
xchg
das
xchg
outsl
mov
cmpsb
mov
inc
sub
dec
leave
jg
mov
data16
addr16
xor
add
xchg
test
loopne
pusha
in
and
mov
pop
fdivrs
add
dec
pop
cwtl
jne
ret
daa
daa
pop
push
icebp
ljmp
jge
cmp
lcall
mov
jb
mov
adc
loopne
xchg
adc
mov
xchg
js
sahf
repz
mov
xor
adcl
ljmp
mov
insl
dec
leave
imul
fisubrl
scas
jae
add
xchg
out
mov
pop
mov
push
leave
data16
fidivl
cmpsl
scas
push
mov
iret
mov
out
int
mov
pop
inc
fisttpl
fsubrl
or
jmp
dec
js
pop
inc
aas
mov
xchg
jg
sti
cwtl
imul
cltd
dec
in
mov
lock
imul
stos
mov
or
pop
inc
xchg
lret
pop
scas
mov
addr16
mov
shlb
cmpsl
scas
adc
inc
lods
pop
aas
bound
stc
sub
sub
push
mov
xchg
add
shrb
sbb
out
mov
inc
call
jbe
xor
xchg
ret
xor
leave
aas
push
mov
cmp
mov
pop
clc
sbbl
fmuls
jbe
or
aam
out
sbb
daa
mov
xchg
pop
xlat
cmpsl
cmp
mov
hlt
mov
pop
pop
aam
into
inc
fdivs
ljmp
mov
jg
jmp
out
or
dec
cli
xor
sbb
xor
out
ljmp
dec
sbbl
mov
lea
mov
ficoml
mov
push
shrb
adc
push
jo
mov
mov
in
popa
lret
pop
fbstp
clc
jle
scas
xchg
jo
cltd
xor
mov
push
xchg
push
or
ja
xchg
push
push
cmc
pop
xchg
jns
xchg
jecxz
rorb
fsubrs
jl
les
decb
fnstcw
in
pop
lret
in
push
enter
mov
repz
xchg
mov
mov
pop
mov
jl
dec
les
or
xchg
pushf
fdivl
mov
jmp
jl
popf
push
dec
call
xchg
leave
dec
xchg
dec
cli
mov
push
shl
mov
scas
popf
dec
mov
cmpsl
mov
gs
pop
xchg
jp
mov
jge
mov
push
add
fldt
mov
outsb
int
xchg
insl
cli
cwtl
loop
call
cltd
pop
ja
jl
lods
shlb
lock
dec
pop
call
xchg
lret
mov
pop
enter
shll
imul
insl
ss
xor
cmpsl
mov
jo
fstps
stc
xchg
enter
sub
pushf
push
xchg
sub
lods
mov
neg
xor
adc
out
imul
in
or
fs
push
rcrl
mov
lock
into
cmpsl
jecxz
mov
jne
sbb
add
in
in
dec
add
jo
pop
into
outsl
aad
pusha
loop
lret
xor
movl
mov
pop
jae
xchg
sbbl
ret
fsubrs
divl
xchg
sbb
jne
dec
mov
lcall
jo
and
cmp
push
mov
cmpsb
or
xlat
mov
imul
push
test
lods
add
push
out
shl
clc
dec
lret
push
xchg
out
inc
xchg
mov
mov
jae
icebp
sar
stc
std
push
jecxz
cld
jnp
push
fs
or
jbe
ror
xchg
mov
shrb
mov
inc
loopne
popa
stc
dec
adc
inc
pop
lock
nop
push
outsb
shll
insb
rclb
fs
and
fldcw
movsb
dec
mov
out
and
ret
dec
loope
push
mov
fwait
jb
xchg
test
sarb
jmp
je
or
jl
imul
xchg
ljmp
jge
mov
insb
popa
sub
test
or
push
cmpsb
stos
cmp
mov
dec
imul
int3
adc
add
sbb
je
mov
loope
inc
addl
jecxz
in
lds
in
insl
js
jo
es
mov
pop
push
ret
dec
clc
xor
aad
rorb
mov
dec
out
add
cli
out
sub
int
cli
or
adc
sub
cld
jo
sbb
push
fisubrl
je
mov
int
ljmp
fcompl
mov
or
je
or
movsl
mov
fidivs
inc
in
lock
mov
mov
test
shlb
sub
mov
cld
jl
jecxz
jno
popa
mov
fisttpl
enter
into
xlat
ja
sbb
fwait
notb
testl
loop
or
cld
dec
cmpsl
and
into
sar
mov
add
sub
call
aaa
ficompl
or
pop
jae
ljmp
js
dec
xchg
rcl
mov
int
stc
fcmovne
dec
sub
lret
out
xlat
mov
int
inc
fcmovne
pop
out
lods
dec
in
jl
adc
stos
hlt
xor
push
add
out
fcompl
jmp
push
or
gs
out
mulb
orb
sbb
hlt
in
mov
push
mov
push
pop
sub
and
call
push
sbb
out
cmp
pop
sarl
insb
shll
popf
addr16
shr
dec
data16
mov
or
jp
nop
jbe
test
jns
enter
call
mov
pop
call
xor
cwtl
pop
mov
ret
push
ljmp
gs
mov
cmp
sti
jne
ds
sti
push
movsb
mov
imul
mov
call
mov
adc
jb
jne
movb
dec
shll
les
or
pushf
lock
fiaddl
aam
les
fld1
mov
out
pop
mov
xchg
std
fimuls
insb
es
adc
mov
decl
call
clc
lods
imul
fistpll
clc
pop
mov
inc
and
and
out
or
mov
jae
mov
or
mov
jle
mov
push
jle
jecxz
shr
or
mov
or
insl
into
outsl
mov
inc
pop
mov
cmp
fdivl
cld
add
jne
gs
mov
inc
fisttps
jbe
push
cld
xchg
adc
mov
and
test
repnz
addr16
cld
add
mov
sarl
xchg
or
cwtl
popf
fcomi
xor
arpl
out
add
es
jp
and
xor
or
jo
jmp
arpl
fsubs
fs
inc
arpl
out
fstpt
scas
clc
or
rolb
push
add
cltd
push
mov
call
or
shrl
movsl
mov
xchg
lods
int
sub
xchg
repnz
dec
in
sbb
push
jmp
lcall
fadds
dec
or
leave
sub
ret
adc
clc
test
imul
jae
dec
push
mov
lahf
sarb
cvtdq2ps
cmpsl
insb
sbb
push
lds
int
jnp
cmovnp
lret
jb
js
xor
sbbl
dec
leave
clc
push
push
mov
xchg
push
mov
loope
inc
mov
or
push
fcmove
js
in
and
in
adc
mov
lcall
pusha
lret
xchg
cmpl
jecxz
loope
mov
jbe
adcl
mov
sub
in
sahf
in
jl
sahf
push
fistl
and
add
aas
test
adc
dec
es
iret
and
mov
mov
pusha
mov
nop
int
mov
push
aad
mov
inc
imul
dec
lock
stos
and
aad
mov
mov
mov
pop
int
mov
adc
daa
mov
out
and
cld
or
or
and
rcll
gs
adc
daa
mov
add
push
jb
xlat
mov
and
mov
mov
sub
movb
insb
aam
aad
lods
inc
cld
stos
enter
movsl
imul
sub
aaa
imul
or
aam
mov
shrl
pop
movsb
stc
mull
ftst
or
ljmp
sti
cmpsl
faddl
test
lock
popa
cld
in
jo
mov
test
rorl
cmpsl
cmc
xchg
andb
push
xchg
std
fimuls
movsl
test
ds
loop
mov
shlb
jg
and
ret
pop
jno
loop
or
andb
aas
cmpb
push
mov
xorb
repz
xchg
lds
xchg
push
mov
mov
aam
test
mov
mov
pop
mov
add
ss
inc
movsb
int3
sub
addl
xchg
std
mov
negl
mov
push
psubusw
les
mov
je
lods
dec
push
lcall
or
stos
sub
popa
jne
je
xchg
jmp
test
mov
loopne
loope
fldenv
int
cmp
shlb
cltd
into
movsb
push
mov
sub
or
mov
out
lcall
cld
xchg
jmp
or
loope
pop
sub
addb
mov
mov
lahf
xchg
xchg
sbb
xor
stos
cmpl
sbb
arpl
ss
adc
fldt
in
xor
daa
push
dec
xchg
data16
push
test
sahf
or
ret
adc
xchg
xchg
into
cmpsl
pop
cli
mull
mov
pop
xor
and
shlb
stos
inc
dec
cmp
jle
dec
lods
lahf
loopne
out
adc
les
call
ja
fists
mov
lods
into
mov
mov
sbb
sti
xchg
cmpsb
mov
sub
inc
das
stos
mov
dec
aam
sub
pop
mov
dec
jg
sarb
lods
int
fstp
cmpsb
aaa
sbb
push
push
stc
cld
dec
fsts
add
nop
das
xor
xchg
xchg
mov
movsb
xchg
es
ja
pop
mov
inc
push
xchg
inc
out
xchg
jecxz
jecxz
sbb
pop
mov
push
lahf
mov
mulb
lock
loop
je
mov
mov
jmp
jno
loop
xchg
or
mov
testb
call
mov
mov
fwait
jae
loopne
cs
repnz
pop
mov
push
jl
aaa
pop
add
test
cld
mov
cltd
dec
xchg
jg
adc
or
or
imul
add
lahf
pop
test
subb
daa
pop
ret
cmpsb
fcompl
stos
push
add
mov
repnz
lea
pop
push
rclb
data16
repnz
jnp
mov
clc
out
mov
lock
mov
mulb
sahf
je
jb
fmulp
push
sub
sarl
or
push
stos
into
fucom
jge
ret
outsb
rcrl
xchg
mulb
xchg
aad
jmp
jb
lock
pop
cltd
mov
mov
in
pushl
mov
ss
sti
sub
mov
fidivrs
fcmovb
movsb
jp
adc
cmp
notl
mov
les
push
pop
mov
xorb
jl
mov
mov
or
lahf
nop
insl
inc
xor
mov
int3
mov
inc
jmp
das
push
icebp
cmp
out
and
.byte
je
mov
add
sub
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
push
add
add
push
gs
js
gs
imul
gs
add
add
je
imul
bound
gs
js
add
add
inc
js
je
jb
arpl
jae
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
jbe
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
add
push
gs
outsl
outsb
jae
insb
gs
push
add
add
push
imul
jb
je
arpl
add
inc
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
imul
push
add
add
je
outsl
insl
insl
push
je
je
add
add
dec
popa
jo
imul
insb
add
add
gs
add
inc
gs
imul
add
push
gs
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
outsl
insl
insl
inc
jb
popa
imul
add
push
gs
je
dec
popa
outsb
fs
add
add
inc
gs
inc
push
add
add
dec
gs
jo
insb
insb
outsl
arpl
add
push
ja
je
push
bound
