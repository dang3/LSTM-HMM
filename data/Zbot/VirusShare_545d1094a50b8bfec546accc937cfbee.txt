xor
add
add
add
add
adc
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
mov
add
lahf
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
mov
add
lahf
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
je
jb
arpl
fs
jae
add
add
je
jb
arpl
jae
gs
jo
add
dec
gs
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
fs
imul
add
add
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
rolb
loop
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
leave
ret
push
mov
sub
cld
push
push
push
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movl
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
cmpl
je
push
mov
mov
xor
cmp
jb
mov
add
shl
adc
xor
add
sub
je
cmp
jae
mov
sub
sub
mov
jmp
pop
cmp
je
xor
jmp
mov
sub
pop
pop
pop
leave
ret
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
push
mov
push
xor
mov
or
je
cmpw
jne
mov
pop
leave
ret
push
mov
sub
call
pop
lea
push
add
mov
mov
mov
push
push
call
mov
mov
pop
push
mov
add
rep
lea
movzwl
pushl
push
push
call
pushl
pushl
call
push
push
mov
and
push
mov
add
push
mov
mov
jmp
push
mov
pusha
mov
add
push
mov
mov
test
je
test
jne
mov
mov
add
add
mov
add
cmpb
jne
inc
jmp
push
call
mov
lods
test
je
bt
jae
and
jmp
add
add
push
push
push
call
pop
stos
jmp
pop
add
jmp
pop
popa
leave
ret
push
mov
pusha
mov
mov
push
mov
add
mov
mov
add
rep
pop
add
dec
jne
popa
leave
ret
push
mov
pusha
mov
mov
add
push
call
push
push
push
call
push
push
push
push
call
test
je
add
cmp
jl
popa
leave
ret
insl
adc
jno
inc
add
inc
add
inc
add
inc
add
add
add
add
add
fcompl
lds
imul
inc
loopne
dec
sub
aaa
pusha
sub
pusha
movb
pop
push
add
rol
push
pop
inc
adc
shll
or
adc
les
into
or
mov
cwtl
mov
or
test
sahf
popf
insb
outsb
xor
in
ljmp
adc
or
test
adcl
popa
inc
or
sub
add
add
add
mov
xchg
jp
inc
inc
adc
lret
int3
push
mov
in
add
mov
shll
inc
aas
lahf
imul
fwait
jmp
add
orl
notl
xchg
mov
jo
cltd
or
jne
repnz
jl
mov
mov
mov
fldenv
sar
notl
push
and
stc
lcall
adc
sub
add
dec
dec
xor
jg
test
sbb
fnstenv
in
push
or
jge,pt
mov
add
addr16
fidivs
popfw
sbb
mov
dec
not
mov
mov
lea
dec
test
shll
mov
mov
call
pop
cwtl
xor
inc
sahf
xchg
push
cmp
iret
push
mov
cmc
jmp
mov
scas
pop
cmpps
xchg
dec
mov
pop
popa
xchg
das
cmpsb
and
call
in
pop
inc
push
cmp
insb
fsubrs
jbe
cmp
adc
ss
pop
sub
and
mov
sbb
jge
cli
jae
xchg
inc
imull
shl
xchg
fstpl
lahf
dec
push
sbb
jmp
std
and
jnp
insb
dec
data16
xchg
out
pop
les
lret
sub
xchg
xor
insb
mov
scas
insl
scas
popa
inc
push
add
sub
add
popl
xchg
dec
test
movsb
lods
push
mov
std
cmc
sub
mov
fcomps
xchg
bound
mov
mov
mov
add
jecxz
dec
icebp
cmc
popa
fcoml
out
js
enter
jns
les
mov
mov
or
pusha
or
jae
sub
and
mov
movsl
andb
fnsave
fstpl
cwtl
sub
lods
insb
ret
js
cmpsb
and
stos
subl
cmp
push
mov
sub
rorl
test
insl
dec
cwtl
dec
push
push
mov
icebp
mov
and
mov
cltd
push
das
fcmovb
mov
or
push
es
lret
sahf
adc
popa
mov
pop
cmpsl
push
lret
orl
mov
shrb
fsts
jns
adc
and
xor
or
mov
leave
xlat
xchg
add
ficoml
fstps
pop
jg
pusha
and
fisttps
pop
movsb
mov
push
add
lods
xor
ret
xor
push
or
xor
add
mov
loope
subl
in
gs
push
push
subl
mov
jb
dec
or
ret
adc
loop
fdivl
pop
dec
fldlg2
bound
popf
sbb
adc
lret
pop
sbb
add
dec
popa
inc
repnz
mov
add
loope
mov
pop
int3
and
shlb
in
jmp
add
lret
inc
addr16
sbb
lock
push
jo
adc
sub
mov
fs
mov
fadds
cld
clc
in
movsb
and
shl
mov
mov
mov
mov
jne
dec
inc
push
lock
mov
inc
jns
pop
or
les
insb
mov
mov
dec
dec
addr16
loop
xchg
das
gs
outsb
stos
clc
lods
mov
cmp
stos
sub
loope
mov
mov
mov
je
xor
mov
cmpsl
xor
lcall
movsb
xor
sahf
shrb
jmp
iret
xchg
mov
pop
xor
outsl
je
ret
dec
adc
cltd
arpl
cmpsb
xchg
icebp
push
adc
xchg
shll
add
aad
test
hlt
int
imul
mov
push
sbb
dec
jl
and
popa
into
sti
adc
ds
and
rclw
mov
jnp
sub
add
xchg
ljmp
xor
adc
push
sub
xor
fwait
sbb
lock
aam
setbe
and
cwtl
mov
addr16
das
sbb
mov
dec
push
lods
sub
jo
test
inc
subl
cmp
mov
dec
jle
leave
sub
lahf
das
cmpsl
mov
cltd
repnz
xor
int3
jo
push
sbb
mov
xchg
dec
and
mov
hlt
bound
bound
pop
jae
cltd
cmp
cli
xor
jae
orl
cmpsb
mov
mov
xchg
or
jmp
dec
cmp
fnstenv
out
sub
cmpsl
adc
into
xor
nop
push
mov
fwait
adc
push
xchg
dec
inc
add
test
sub
insl
mov
add
test
fs
push
adc
pop
sub
add
xchg
xor
rcll
push
mov
push
mov
pop
mov
mov
or
js
rcrb
aam
xor
bound
mov
sub
mov
sbb
dec
inc
mov
enter
sbb
ret
sbbb
sbb
or
es
pop
mov
rcrb
icebp
lret
test
iret
push
jge
sub
sub
sbb
pop
and
xchg
popf
pop
xor
inc
inc
mov
and
push
shll
fstps
addr16
fstpt
popf
xchg
ror
pop
jg
fst
and
out
push
or
testb
dec
pop
sub
inc
lahf
or
dec
into
xchg
enter
int
icebp
pop
cwtl
sub
ds
xchg
aam
jl
ss
pop
outsl
push
adc
aam
xor
icebp
loopne
sbb
push
inc
adc
int3
orb
test
cmpsb
jmp
or
push
popf
pop
scas
push
add
out
mulb
adc
ficompl
sahf
stos
mov
xchg
push
mov
data16
movsl
inc
and
dec
ljmp
lret
lret
icebp
fs
inc
sub
and
pop
push
xor
inc
pop
and
loope
pop
imul
pushf
jp
and
xchg
loope
xchg
scas
int
adc
mov
xor
int3
sub
movsb
repnz
push
push
repz
sbb
int3
jns
psubq
outsb
loope
bound
cmp
xchg
mov
xchg
bound
fcoml
test
cmp
mov
adc
cmp
addr16
pop
or
rorb
xchg
inc
sub
imul
cmp
mov
ss
sub
dec
sub
pop
and
xchg
es
lds
xchg
sub
mov
xchg
mov
into
sub
push
rcrl
push
int3
sbb
add
dec
call
sahf
inc
scas
jl
hlt
sbb
int
leave
adc
xchg
lods
imul
mov
mov
inc
imul
cmp
in
out
add
sub
cmp
xchg
dec
scas
mov
in
fisubl
push
int3
and
in
mov
jnp
dec
or
ljmp
fwait
aas
scas
inc
adc
push
in
push
dec
dec
xor
push
adc
pop
jbe
aas
mov
mov
int
inc
scas
sub
or
inc
fs
push
or
xchg
lcall
inc
loop
dec
add
pushf
lods
mov
push
repz
adcl
and
jne
cmpsb
inc
jg
mov
shrb
pop
in
or
aaa
mov
xlat
dec
cmpsl
pop
mov
or
xchg
into
insb
test
aad
imul
pusha
scas
imul
xchg
rol
cltd
adc
xchg
imulb
out
jl
cmp
out
mov
shll
xchg
loopne
ss
dec
mov
jo
sbb
int3
xchg
test
jmp
jle
lods
mov
add
sub
test
loope
cwtl
mov
jns
aam
add
fdivs
sbb
push
lods
pop
xchg
add
inc
xchg
cmp
das
inc
cwtl
sbb
inc
pop
cltd
fs
sahf
inc
in
je
pop
lret
and
sbb
mov
jg
fstl
or
mov
loopne
push
test
fisubl
xor
scas
cmp
and
xchg
stc
mov
add
nop
mov
mov
cmp
daa
adc
lea
cmp
in
and
jb
dec
or
repnz
and
adc
cmp
inc
inc
inc
mov
push
mov
fwait
aam
xor
mov
sub
xor
pop
into
enter
pop
mov
lret
or
push
into
inc
xchg
ret
arpl
xchg
xchg
repz
mov
cltd
sub
mov
sub
mulb
cs
and
xor
cmp
xchg
adc
pushf
ljmp
cmp
ljmp
dec
mov
sarb
xor
dec
cmp
jmp
push
dec
hlt
push
push
xchg
jg
popf
jnp
lcall
movsl
mov
dec
adc
xchg
ret
adc
or
jns
mov
test
or
xor
add
les
andb
int3
addb
add
push
push
int3
cmp
xchg
cmp
mov
insl
xor
inc
adc
fsts
fisubrl
sub
xor
les
lcall
pop
rcll
inc
jp
dec
lods
dec
insb
xor
push
addl
mov
adc
movsb
lock
xchg
repnz
enter
mov
imul
test
insl
or
and
adc
ss
push
add
les
out
aaa
or
or
push
push
movsb
add
pop
hlt
xor
mov
sbb
sbb
or
shrb
cmp
push
or
or
push
xchg
fistpl
push
sub
cmp
lcall
mov
push
push
pop
pusha
and
adc
jne
xchg
loope
xchg
mov
dec
add
rcrb
mov
sbb
sahf
lahf
mov
sbb
push
into
push
inc
scas
daa
mov
test
push
leave
jmp
lahf
repnz
add
dec
daa
adc
test
lret
ret
add
jmp
or
test
lret
adc
or
stc
addr16
xchg
roll
mov
into
sbb
insb
jb
les
je
pop
sub
sub
mov
push
lea
mov
stc
movsl
sub
mov
lcall
pusha
and
nop
add
hlt
sub
add
jp
es
dec
and
daa
ret
push
dec
arpl
adc
ja
sbb
mov
xchg
loope
add
sbb
sub
jmp
fmulp
pushf
je
xor
and
sbb
and
pop
inc
sub
add
aad
mov
or
outsl
lret
push
mov
rcrl
push
fcompp
clc
push
insl
sbb
adc
mov
push
arpl
inc
pop
data16
daa
scas
push
push
push
ljmp
adc
adc
pop
sub
mov
mov
push
adc
cmpsl
mov
push
push
shlb
or
xchg
push
xchg
jmp
bound
jns
jmp
or
into
jl
cmc
and
out
sti
pop
and
nop
or
dec
loopne
fwait
pop
data16
dec
daa
mov
test
sbb
lret
jae
lret
inc
xchg
and
test
lret
test
shlb
xorb
pusha
mov
popa
add
push
std
pop
lods
cmp
roll
inc
mov
mov
pushf
adc
inc
xor
iret
xchg
jnp
pop
inc
cmp
cmpsb
jmp
shlb
xchg
mov
es
mov
cmp
addps
mov
sar
pop
pusha
jl
das
data16
cltd
jl
mov
mov
fistpll
pop
sbb
dec
addb
mov
es
jb
fst
xor
rol
mov
lea
popa
mov
adc
push
xchg
push
dec
cmp
lret
andb
gs
fimull
xlat
test
jbe
sahf
lret
ss
bound
jno
or
push
jecxz
pop
xor
in
fs
aad
or
jbe
ss
pop
mov
cmp
push
dec
mov
shll
ror
insb
push
adc
dec
mov
fadds
inc
dec
mov
rcl
ds
ds
ljmp
xlat
push
jecxz
mov
scas
xchg
outsl
inc
xor
stos
xor
xlat
enter
xor
cmp
mov
lock
mov
push
jnp
mov
cwtl
pusha
mov
push
test
lds
sbb
mov
jge
pop
std
in
call
stos
aam
xchg
xor
fisttps
cmpsl
ss
push
push
out
mov
pop
jne
cmp
xor
lret
mov
push
pop
cltd
xor
daa
sahf
sub
pop
and
adc
out
aaa
xor
aam
frstor
ret
gs
mov
xchg
je
mov
mov
xchg
out
imul
jnp,pn
in
push
pushf
sub
inc
jecxz
jle
mov
cmp
cmp
xchg
mov
popa
movsb
jmp
xchg
mov
push
xor
ret
xor
mov
fwait
sub
loope
adc
sbbb
repnz
fldt
mov
cmc
lods
jo
mov
push
dec
jmp
ror
inc
movsl
repz
shlb
mov
stos
int
xor
in
nop
jecxz
and
repnz
sbb
aad
popa
adc
and
movsl
xor
xor
int
jbe
rorl
pop
outsl
and
mov
jns
or
xor
lcall
shll
inc
popa
dec
inc
aad
sbbl
push
and
mov
push
fdivs
mov
push
fst
dec
aaa
arpl
fdivs
ret
mov
jl
cli
mov
add
inc
outsl
adc
testb
jne
repnz
ret
ss
xlat
mov
xor
mov
mov
ret
mov
mov
or
ret
fs
enter
push
adcl
jbe
inc
aam
jnp
dec
roll
jne
mov
jle
outsb
ret
bound
addr16
xor
gs
insb
dec
xlat
push
push
push
inc
imul
cmp
lret
cmp
pop
out
mov
jae
xor
mov
xorl
bound
push
or
test
mov
in
xor
mov
roll
push
dec
hlt
shlb
ds
xchg
loope
mov
mov
daa
xchg
aas
jbe
gs
jge
pusha
nop
cmp
and
daa
mov
iret
sahf
and
sahf
sub
xor
ljmp
pop
mov
push
hlt
loop
inc
aas
jbe
popf
push
ss
lret
cmp
gs
push
xor
cmp
jo
mov
jno
inc
jb
imul
jle
pop
adc
ja
xchg
cmpsb
xchg
sahf
int3
inc
add
xchg
imul
add
ret
or
dec
popf
pusha
push
add
mov
dec
cli
xor
lods
inc
outsl
xchg
push
fadds
adc
test
lahf
xchg
out
push
ret
inc
adc
push
sbb
sbb
dec
xlat
mov
addb
sbb
cmpsb
dec
ja
imul
stos
ja
add
sbb
jae
or
xchg
sub
stos
push
xchg
test
aam
push
fs
and
stos
jne
test
and
popa
xor
inc
dec
lret
mov
pop
pop
int
push
mov
jb
cmp
cld
fidivl
fwait
dec
sbb
arpl
sub
adc
lods
pop
call
repnz
push
fistps
in
dec
insb
lds
xor
xor
outsb
mov
leave
flds
cmc
xchg
lods
inc
xor
insl
xor
gs
jae
inc
and
jp
pop
xchg
mov
and
sbb
pop
mov
adc
sbb
jbe
rol
mov
mov
dec
sub
aam
mov
jmp
xor
pop
nop
push
jecxz,pn
cltd
or
xor
hlt
fnstsw
xchg
scas
shll
shr
lods
addr16
or
push
test
sbb
xor
sub
lods
faddl
xor
jo
sub
xor
mov
inc
jmp
dec
shll
mov
push
sahf
in
imul
mov
imul
dec
or
scas
je
adc
test
sub
sub
and
aas
cmpsb
fcomps
xchg
sarl
imul
lods
sub
cmp
scas
push
lods
pop
push
ret
pusha
jne
push
dec
arpl
sub
sarb
xchg
imul
dec
xchg
add
lods
movsb
push
mov
cmp
mov
dec
sahf
mov
lahf
pop
xchg
xchg
cmp
subb
jge
add
dec
sub
fadds
mov
xorb
outsb
sbb
sbb
xchg
out
and
xor
decb
xchg
cmp
pop
daa
sbb
add
jo
test
test
lret
xchg
or
pop
subb
jo
lods
les
js
les
adc
ljmp
and
or
jo
rorb
pop
bound
andl
cli
adc
push
loop
stos
nop
sti
mov
sub
xchg
or
adc
and
inc
adc
and
inc
movsl
test
adc
pusha
dec
test
mov
cmpsl
les
sahf
adc
lcall
mov
nop
dec
les
sub
inc
or
loopne
pop
and
das
jno
or
adc
pop
dec
push
pop
or
adc
push
mov
mov
adc
add
adc
test
inc
xchg
pop
mov
mov
mov
xchg
inc
dec
test
sub
dec
insb
and
pusha
mov
push
mov
orb
and
xor
mov
adc
sub
dec
fsubl
adc
adc
inc
sub
pop
and
in
dec
clc
inc
pop
loop
in
sar
mov
sub
les
int3
adc
dec
adc
bound
popa
dec
or
cmp
sub
loop
bound
adc
ficoml
inc
mov
adc
xchg
loopne
insb
mov
movsb
and
clc
dec
inc
sub
lock
add
bound
and
movsb
adc
dec
adc
loop
popa
and
stc
dec
sub
pop
bound
or
adc
js
add
mov
or
rcrb
sbb
xchg
xchg
pop
or
adc
jnp
or
and
dec
call
adc
inc
add
fdivr
inc
add
inc
and
add
dec
and
add
ret
adc
and
inc
push
inc
sub
sub
xchg
add
adc
and
jne
or
adc
and
rorb
and
adc
lods
dec
movsb
and
loopne
test
mov
dec
cmp
and
xchg
or
dec
adc
mov
adc
mov
jns
adc
sub
push
or
adc
and
sbb
add
mov
nop
and
rorb
and
adc
dec
fs
ljmp
inc
and
mov
es
mov
arpl
add
xor
mov
nop
dec
int3
and
rorb
xchg
jb
adc
ljmp
and
mov
adc
mov
sub
mov
adc
cmp
pop
bound
dec
movsb
movsl
mov
adc
inc
das
jno
pop
and
mov
mov
adc
call
sub
ja
cmpsl
lock
add
and
add
and
pop
lods
fistpl
and
test
push
add
jo
lret
and
add
ret
mov
xor
scas
mov
insl
imul
shr
mov
or
out
mov
push
jmp
push
cmp
pusha
in
lcall
mov
rolb
mov
dec
je
ret
mov
xchg
adc
fstps
fdivl
ret
push
lds
inc
add
orl
dec
leave
inc
inc
pop
frstor
mov
push
cmpsl
fnstcw
adc
je
mov
test
mov
and
jo
xchg
or
and
mov
xor
mov
xchg
or
mov
jne
mov
mov
pop
fcompl
jne
pop
or
shll
fcomps
mov
inc
mov
out
sbb
rorl
adc
int
adc
push
dec
and
inc
dec
pop
adc
test
xchg
xor
nop
rorl
inc
lods
test
divb
dec
and
mov
or
and
fcomps
mov
add
and
inc
unpckhps
mov
in
loopne
push
adc
mov
dec
xor
nop
cmp
adc
dec
pop
inc
mov
dec
xchg
xchg
lods
bound
mov
mov
pop
jecxz
sbb
andl
in
mov
lock
test
cwtl
xor
decl
loopne
fstpt
xchg
xlat
lds
bound
popa
loopne
mov
pop
xchg
or
inc
or
iret
dec
out
sub
add
jle
test
pop
mov
xchg
enter
lahf
ret
and
sbb
push
cs
add
imul
xchg
mov
mov
scas
sete
sbb
add
jno
add
loop
xor
cmc
leave
fsts
incl
inc
loope
or
add
mov
hlt
push
or
add
aas
stos
inc
shll
in
push
mov
loopne
jb
push
mov
push
pop
sub
xchg
call
ror
dec
sti
xchg
jns
pop
sbb
ds
xchg
adc
stos
addb
dec
adc
out
xorb
sbb
pop
inc
stos
and
cmc
mov
inc
push
lods
sub
call
leave
enter
mov
insl
xchg
mov
jne
lret
jmp
or
pushf
xchg
mov
repnz
push
popf
xchg
jo
fmuls
ret
imul
test
mov
push
es
dec
negl
sub
push
aaa
ss
data16
add
pop
mov
pusha
xchg
in
mov
or
inc
pop
xchg
inc
adc
fisttps
sbb
mov
or
adc
sub
mov
das
cld
mov
mov
push
in
je
negl
je
popa
pop
je
push
popa
inc
push
or
shrl
or
mov
mov
xchg
cs
sbb
push
inc
fmull
aad
mov
les
mov
mov
mov
dec
xchg
jecxz
ja
mov
inc
rorl
scas
iret
lcall
sub
add
sbb
and
pusha
arpl
cmp
mov
dec
pop
adcl
mov
pop
inc
mov
pop
fdivrl
pop
pop
pop
test
jbe
bound
xor
hlt
shl
sub
or
xchg
addr16
push
inc
orb
lods
scas
mov
lock
xchg
aam
sbb
mov
sti
dec
push
mov
shrb
mov
push
xchg
je
mov
adc
pop
pop
pop
mov
xchg
xor
cmp
xor
dec
cmp
pop
xlat
ret
push
xchg
push
jg
rcl
aam
push
insb
push
mov
stos
arpl
add
jb
dec
mov
lret
inc
adc
stc
mov
enter
scas
aad
dec
fwait
sbb
jns
adc
inc
lea
sub
jo
lea
imul
mov
adc
testb
push
or
sbb
sub
inc
movsl
sahf
jnp
gs
nop
push
insl
cmpl
rcl
jb
xchg
sub
lea
bound
jae
aaa
push
mov
lret
test
xor
icebp
add
push
dec
jno
inc
into
cmp
xor
insb
push
rorb
mov
loope
adc
mov
into
pushf
push
sbb
popf
iret
add
jecxz
mov
inc
mov
sbb
adc
mov
sbb
insb
jecxz
movsb
xor
xchg
inc
sub
dec
pop
dec
jp
lods
push
and
xchg
sbb
sbbb
aad
pop
femms
lock
std
nop
xchg
push
push
lret
mov
inc
pop
jns
xor
cmp
sub
rcll
xchg
daa
shll
add
fbld
mov
push
cltd
das
mov
repnz
addl
and
cwtl
or
xor
pop
movsb
mov
dec
jne
cltd
loop
mov
mov
leave
sub
mov
sub
stos
push
sub
or
arpl
js
stc
out
std
lds
out
rorl
xchg
adc
sub
lods
pop
movsl
insb
ficoml
icebp
iret
in
mov
les
inc
jle
loopne
cmc
cmpsb
xchg
ret
xchg
fcmovb
mov
push
or
jl
ljmp
movsl
pushf
or
sbb
mov
xchg
das
mov
xor
push
xchg
and
jmp
lar
or
cmp
test
int
test
jne
setle
mov
outsb
mov
xor
inc
xchg
andb
sub
sub
out
ds
and
leave
mov
hlt
and
lahf
jae
and
mov
flds
xor
bound
outsl
adc
xor
mov
mov
pop
push
test
pop
call
lods
or
ljmp
testl
inc
push
in
and
fnstenv
clc
ljmp
push
dec
mov
call
or
inc
das
imul
dec
xlat
pop
sub
test
shlb
sbb
xchg
loop
lds
movsl
movsb
sbb
adc
jne
inc
inc
sbb
sub
or
fcompl
ss
cmp
imul
or
adc
lods
leavew
xor
xchg
cmp
dec
push
mov
xchg
or
daa
pop
mov
dec
or
and
test
sub
adc
fbstp
pop
fwait
jmp
insb
add
cmp
and
cmpsb
xor
add
cs
inc
fsubl
mov
aad
pop
ja
push
loope
mov
lock
roll
test
xor
cmpsl
out
jmp
cmpsl
jge
sbb
pop
adc
popa
jae
inc
sub
jmp
enter
pop
push
pushf
add
cld
add
and
hlt
dec
inc
cmp
popf
inc
pop
cvtps2pi
les
fisubrl
into
es
rolb
sbb
shll
add
mov
and
and
into
mov
pop
xchg
and
push
mov
aam
xor
les
sbb
jb
stc
xchg
mov
inc
pushf
jae
lcall
dec
add
stos
xlat
xorb
aad
dec
loopne
mov
add
sbb
sahf
sub
outsb
inc
xor
pusha
mov
dec
cmp
mov
mov
push
aas
mov
fcmovbe
push
enter
push
xchg
jle
add
daa
aas
clc
test
and
hlt
lds
das
add
adc
adc
ljmp
vmread
fnstcw
mulb
jb
pop
sbb
xor
mov
push
in
loop
stc
inc
test
xchg
xor
cmp
pop
test
pop
adcl
mov
dec
leave
mov
mov
lret
push
in
fwait
jb
int3
xor
inc
das
sarb
mov
pusha
bound
out
xchg
in
sub
inc
and
in
and
std
mov
mov
pushf
mov
jb
pop
movsb
outsb
in
fdivp
repz
fdivl
dec
popa
out
inc
mov
rol
out
movsb
cmp
fwait
sub
pop
mov
sbb
cmp
mov
cmpl
dec
mov
xor
repz
add
cmp
cmp
mull
ret
adc
sbb
test
or
cmc
mov
repnz
rcrb
mov
fs
test
adc
dec
sbb
pusha
adc
cli
xchg
outsl
shll
fwait
or
inc
loop
lret
in
mov
pop
sbbl
pushf
test
inc
sbb
hlt
mov
or
test
ret
int
push
inc
movsl
dec
xor
mov
stos
in
popf
cmc
cld
mov
repnz
push
nop
lock
pop
jne
jge
fdivs
loope
push
imul
sub
loopne
xlat
aam
jle
mov
jp
fsubs
adc
add
fiaddl
push
and
sbb
inc
roll
and
pop
adc
cltd
add
xor
mov
daa
dec
cmp
fists
xlat
push
ds
stc
push
cmp
das
xchg
test
out
sub
inc
adc
ja
dec
jno
mov
popa
icebp
inc
inc
push
in
cmc
test
rcrb
mov
shll
and
int3
subb
sbb
mov
add
push
xor
mov
ja
sbb
dec
subb
test
xor
pushf
mov
mov
outsb
cmp
mov
sub
pop
mov
shlb
mov
mov
push
adc
cmpsb
outsl
gs
sub
mov
movsl
lods
push
add
fisubl
mov
adc
dec
inc
jns
inc
push
test
ja
mov
outsb
sub
mov
jecxz
or
push
add
add
stos
cs
cmp
das
pop
add
add
or
mov
stos
inc
lahf
stos
rcl
or
in
push
sub
rorb
push
or
or
lret
lret
push
ds
jb
aad
adcl
cmpsb
push
mov
into
push
and
imul
or
sub
sbbb
or
psrlw
xor
test
lcall
adc
sbb
mov
subb
test
mov
push
data16
lcall
add
push
xchg
push
push
dec
ffreep
or
mov
pusha
fs
push
and
adc
or
rolb
stos
inc
bound
jno
out
sti
push
mov
and
inc
lea
xor
xchg
loop
shlb
add
mov
jg
rolb
into
lods
sbb
jp
adc
dec
ret
sbb
pop
cmovb
pop
cmpsl
out
pop
add
int3
dec
sbb
jl
mov
sbb
pop
jno
jg
dec
lret
push
mov
xorb
push
in
rclb
adc
sub
enter
sbb
mov
clc
add
mov
mov
sub
push
mov
adc
fdivs
jo
bound
nop
pop
mov
jmp
add
sub
xor
push
adc
dec
xorb
mov
fwait
rcl
aaa
jne
and
mov
sbb
push
call
push
push
loopne
dec
push
inc
xor
push
cmpb
sub
pop
or
fiaddl
adc
inc
inc
mov
repz
je
rolb
pop
add
shlb
push
call
inc
inc
or
bound
and
js
mov
cli
mov
add
jb
mov
fwait
add
sub
or
cli
adc
add
push
inc
fcomps
cmc
sub
loopne
bound
out
shrl
in
pop
or
shll
lea
inc
sub
add
mov
subl
add
inc
adc
sysret
adc
mov
jno
add
jnp
clc
jbe
sbb
pop
clc
mov
cld
inc
jl
jle
inc
sbb
cmpxchg
insb
clc
leave
xor
scas
cmp
mov
and
out
lret
ficoml
inc
insb
push
pop
xor
jp
and
dec
xchg
xlat
xor
jp
into
mull
lds
mov
xchg
loop
dec
loope
sti
add
pop
orb
test
inc
addr16
int
xchg
cs
icebp
je
ficomps
mov
adc
gs
cs
lock
call
icebp
xchg
or
scas
pop
add
fidivs
xchg
cmp
push
mov
lret
jnp
or
test
push
popa
pop
rcrb
and
insl
inc
lods
pop
mov
sub
jns
mov
out
mov
leave
dec
sbb
mov
pop
xlat
xchg
add
jnp
adc
or
mov
or
push
in
dec
shrl
scas
add
sub
iret
sub
add
add
sbb
mov
add
pop
enterw
cmp
pop
mov
lds
int3
mov
xor
adc
icebp
data16
dec
push
call
dec
mov
std
or
mov
cmp
adc
in
shll
pop
xor
std
ret
push
or
les
xlat
inc
in
add
push
mov
clc
in
inc
mov
mov
stos
bound
cld
cmp
sub
subb
das
stos
inc
repnz
lods
lds
xchg
push
pushf
in
shlb
addl
dec
xchg
int
adc
mov
clc
mov
jns
lock
push
jmp
and
cmp
xor
pop
pop
aam
mov
call
jl
xor
adc
int3
inc
add
ds
int3
pop
push
sbb
icebp
pop
subl
jne
xchg
and
xchg
push
out
repz
lea
mov
adc
les
sbb
xor
push
sbb
and
inc
mov
mov
rcll
add
mov
shlb
cmp
mov
ljmp
push
call
ss
push
xor
mov
push
mov
imul
lea
jecxz
stos
jmp
dec
cmpb
nop
xor
daa
xchg
dec
push
lds
mov
push
mov
xor
push
lds
insb
mov
push
mov
ja
adc
stos
orb
add
jno
cmc
lea
xchg
pop
add
sub
inc
inc
or
shlb
xchg
iret
jmp
sbb
xor
or
and
inc
pop
cmpsl
stc
pop
sub
fwait
xor
sarb
loop
mov
sbb
lds
fimull
cmp
fidivrl
adc
dec
mov
clc
sbb
je
add
filds
test
mov
pop
pop
sbb
jp
add
mov
call
dec
ss
in
mov
add
mov
or
add
jmp
hlt
or
pop
push
cmp
push
enter
and
popa
sbb
cwtl
aas
clc
lea
xor
sbb
pop
adc
and
mov
mov
pop
push
ss
loope
rol
pusha
push
inc
adc
stos
lahf
fstl
pushf
add
cmp
stos
sbb
push
xchg
mov
inc
or
push
in
push
and
aaa
adc
jl
imul
and
mov
loope
aad
jmp
movsb
xchg
jo
arpl
or
scas
shl
push
add
sti
xchg
and
mov
ss
mov
jg
bnd
inc
sub
bound
cmp
hlt
sbb
cmp
dec
mov
inc
xchg
out
pop
aad
mov
inc
mov
insl
cs
or
mov
mov
jecxz
xchg
mov
ss
lods
roll
push
scas
and
data16
cmpsb
mov
pop
fidivrs
and
inc
adc
adc
test
mov
jg
push
adc
mov
movsl
jge
in
stc
jp
adc
popf
jge
inc
fldl2e
mov
fldt
and
adc
in
pop
and
cmpsl
cmpsb
sbb
outsb
cmpsl
add
xor
add
pop
dec
stc
or
test
aam
and
mov
jne
pop
and
push
add
sub
adc
cmc
fstps
and
xor
xor
popa
mov
gs
jle
lods
push
add
mov
xor
iret
pop
ss
add
fwait
lds
cli
test
jno
adc
ds
fsubs
jo
mov
insl
out
and
cmp
ljmp
push
in
dec
jne
out
int
push
cmpsb
cmp
xor
mov
lods
pop
dec
sub
repz
cs
out
outsb
lock
dec
insl
in
xor
stos
xlat
mov
es
adc
and
les
and
arpl
mov
mov
or
and
pop
imul
shrl
lods
sbb
sub
iret
mov
inc
cmpsb
push
adc
xchg
pusha
test
dec
mov
push
ss
mov
xor
mov
nop
mov
iret
int3
loopne
push
icebp
in
cli
stos
std
sti
ret
outsl
out
fsubr
lds
rcl
add
idivl
stc
dec
cmp
push
sub
aas
pop
xor
imul
inc
aam
mov
dec
in
cmp
shrl
inc
pop
jnp
mov
test
adc
scas
adc
std
xchg
mov
loop
dec
mov
hlt
pushf
pusha
pop
fstpt
dec
pop
inc
mov
inc
jne
adc
mov
popa
addr16
mov
jle
aaa
jns
mov
adc
and
test
adc
cmp
popa
cmpsl
or
or
je
or
mov
push
stc
jb
push
dec
insb
and
pop
cmp
out
mov
jns
popf
push
rcr
jbe
push
inc
push
pop
daa
adcl
aam
mov
and
repnz
jge
add
rcll
mov
es
jl
inc
dec
inc
xchg
pusha
inc
cli
push
rcl
or
es
scas
stc
jbe
pop
gs
or
mov
lea
push
icebp
push
je
xlat
mov
bound
iret
pop
scas
sbb
xchg
push
and
dec
je
fabs
xchg
fstl
mov
jbe
mov
mov
sbb
gs
push
push
repnz
leave
cld
sub
aam
out
pop
xor
and
sbb
fwait
imul
mov
mov
mov
add
test
pop
xor
pop
xchg
push
jae
outsl
gs
das
shr
jle
in
and
dec
fnsave
mov
adcl
popf
dec
push
adc
or
imul
iret
cwtl
test
add
jmp
inc
push
jle
sub
add
pop
jge
jns
and
jb
add
repnz
sbb
sbb
in
mov
add
inc
nop
sub
sets
subb
sbb
add
cmp
aaa
mov
subb
test
cmp
ds
insb
xor
fld
idiv
push
jb
add
push
jbe
cmpsl
and
xchg
add
mov
rclb
fs
mov
and
lret
leave
mov
lods
das
stos
int3
int
subl
jmp
nop
das
lret
dec
daa
sbb
and
push
pop
mov
mov
addr16
jb
stc
movsl
xchg
or
adc
pop
adc
and
push
sbbl
mov
add
rcl
dec
pop
loope
cmc
inc
pop
scas
inc
rcrb
or
inc
adc
add
ljmp
add
jae
popa
sub
jnp
sub
xchg
jp
add
imul
scas
adcb
movsb
jge
shl
lods
jb
pop
cwtl
xchg
xor
dec
sarl
sbb
add
sub
push
dec
sti
scas
and
xchg
push
lret
lret
bound
push
pop
mov
ret
adc
or
shrb
cmp
push
jmp
pop
dec
mov
jno
sbb
shl
xchg
cs
imul
push
lods
sub
test
inc
in
xor
push
shl
pop
mov
push
push
stos
xchg
mov
in
test
jecxz
mov
enter
xchg
ss
inc
iret
mov
jp
loope
lret
mov
sub
mov
sub
sub
pop
lcall
mov
jle
push
xchg
sub
ret
xor
outsb
mov
sub
cs
sub
movsb
jb
scas
imul
xchg
mov
xchg
gs
pop
adc
aas
lods
negb
mov
ss
or
xor
xor
jge
or
pop
adc
push
cli
jl
cmp
out
xchg
push
fs
dec
adc
and
scas
bound
mov
cltd
xchg
sub
fldt
xchg
xchg
cmc
shlb
mov
iret
and
dec
mov
jl
aas
cli
xchg
stos
orb
dec
scas
and
dec
ficoms
pop
add
push
fistpl
sub
shlb
push
cmp
std
lods
or
jg
xor
jl
loop
div
loope
hlt
lods
inc
js
jmp
xchg
lock
test
shlb
sub
sub
ja
and
mov
mov
dec
int
lock
push
lods
pushf
subl
pop
xchg
inc
cmpsb
jno
inc
mov
xchg
xchg
sub
sub
jb
mov
push
dec
add
cli
andl
test
push
xchg
add
jmp
xchg
jg
xor
inc
out
inc
in
sub
adc
bound
lods
aam
pop
popa
inc
mov
dec
pop
inc
xchg
hlt
leave
xor
rcr
and
das
fcomps
add
pop
lea
cli
pop
cmp
xchg
add
scas
dec
pop
jo
std
imulb
jp
xor
andb
subb
adc
rol
sub
push
dec
mov
jle
cmp
sub
push
add
jbe
fstps
pop
rolb
hlt
call
xchg
mov
pop
inc
cmp
mov
xor
dec
pusha
clc
pop
add
pop
mov
lcall
mov
cmp
or
push
roll
mov
or
popf
je
out
fidivs
pop
add
lods
or
mov
pop
xor
adc
mov
test
scas
sub
inc
pop
and
pop
or
pop
cmp
xchg
adcb
mov
cs
mov
sub
jo
cmp
mov
dec
mov
xchg
out
add
push
sahf
pop
dec
xor
cmp
les
lret
xchg
mov
loop
sbb
push
movsl
push
or
push
push
lea
inc
lcall
push
jecxz
inc
mov
pop
cmp
scas
xchg
clc
call
lahf
add
xchg
mov
and
push
lret
mov
ss
fisubrl
jecxz
push
rcrl
call
jns
mov
push
decb
shrb
jbe
and
adc
mov
pop
aaa
insl
not
and
test
jbe
in
iret
je
pop
jbe
cmp
subl
lods
sbb
ds
mov
push
lods
push
andb
mov
incb
xchg
cmp
dec
shll
aas
shl
sub
in
push
add
jae
lods
mov
call
push
cmp
stos
adc
jmp
sub
leave
mov
xchg
out
jb
dec
jnp
mov
movsl
shlb
daa
sub
movsb
ss
outsb
mov
lock
push
lds
inc
pop
daa
scas
or
ljmp
sub
fisttpl
xchg
mov
fimuls
push
aam
mov
mov
adc
clc
add
rorb
cld
cmp
cmp
pop
mov
ja
out
xchg
test
xor
and
adc
gs
inc
xchg
adc
xchg
repz
inc
dec
dec
push
push
stc
inc
sbb
je
inc
cwtl
jne
sbb
adc
fmuls
jg
xor
pop
inc
and
pop
push
inc
xchg
mov
and
xor
insb
adc
out
inc
mov
and
pop
xor
push
inc
push
add
cmc
stos
sti
ret
inc
rorl
iret
cmpsl
pop
sub
aas
test
imul
mov
bound
add
rolb
push
jo
push
adc
add
add
outsb
push
aam
bound
jle
shll
fwait
sub
mov
sub
ret
add
mov
dec
pop
sbb
mov
aaa
orl
les
xchg
addr16
push
loop
mov
andl
pop
add
out
test
xor
adc
sahf
dec
lods
jo
rclb
test
aam
ret
and
lcall
fstpl
and
sbb
push
subb
repz
jle
ss
adc
out
std
ret
leave
shrl
adc
imul
out
int
xor
mov
lock
test
lock
nop
pop
cmc
adc
mov
inc
mov
jo
fsubrl
jge
cltd
pop
jns
das
or
mov
jecxz
sbb
mov
aam
lods
cmp
jp
adc
ja
xlat
lods
call
movsb
fcoms
xor
call
lds
nop
test
aam
jl
xchg
in
mov
mov
or
adc
inc
adcb
mov
dec
or
and
sub
push
and
dec
pop
xor
xchg
push
sbb
fimull
jp
add
inc
jb
data16
adc
mov
movsl
sbb
ret
push
xchg
adc
pop
rolb
jno
lea
cld
mov
adc
or
jo
popf
xchg
add
mov
enter
mov
in
push
pop
cwtl
pop
movsl
mov
mov
sub
mov
push
sub
lcall
push
push
rorb
or
ud0
daa
rcll
or
out
mov
inc
xor
ret
push
std
sqrtps
and
push
js
leave
pop
lahf
push
jns
clc
loopne
rolb
sbb
pop
or
mov
mov
mov
jp
std
xchg
mov
scas
stos
adcl
rcl
rorl
jne,pt
pop
add
mov
sahf
and
mov
fstps
mov
adc
bnd
addr16
scas
mov
stos
lock
lahf
lret
or
and
ret
iret
adc
sub
lock
scas
and
cmp
jle
or
jo
or
mov
add
cwtl
cs
and
jl
shll
add
or
ss
mov
sarl
inc
push
mov
scas
xchg
sysenter
mov
push
xorl
pushf
dec
das
cwtl
sbb
sbb
sbb
in
inc
in
sub
pushf
mov
sbb
adc
mov
mov
jbe
jmp
mov
dec
add
movsl
sbb
test
cld
lds
stos
cmpsb
jl
mov
push
lds
cmp
pop
inc
imul
pusha
insb
insl
xchg
jns
in
adc
mov
lods
enter
push
hlt
sbb
fstl
mov
imul
and
mov
xor
mov
jno
jae
sub
test
js
out
sbb
or
js
sub
inc
cmc
int
rcrl
sbb
mov
mov
xchg
pushf
push
leave
mov
jecxz
xchg
pop
jmp
push
out
jp
ds
test
push
dec
xor
in
push
xor
xor
cmp
mov
sub
sbb
scas
mov
push
jp
adc
ss
and
xor
mov
sbb
and
pop
push
sub
mov
sbb
mov
adc
sbbl
rcll
pop
add
das
push
into
jne
dec
jae
cmp
mov
mov
outsl
xchg
dec
sub
adc
cmp
or
je
clc
pop
push
enter
mov
add
inc
inc
cmpsl
pop
mov
addr16
test
adc
adc
xchg
dec
sbb
lret
push
mull
movsb
rcll
stos
push
dec
rol
fs
scas
push
out
test
popf
cmpsb
cs
aam
xlat
sub
test
jo
sub
subl
sub
fmuls
or
sbb
stc
inc
pop
pop
inc
arpl
popf
insl
jmp
aaa
add
fidivl
sub
arpl
xor
test
pop
in
jg
insb
gs
mov
fsubrp
scas
adc
scas
mov
dec
stos
xchg
rclb
shlb
ss
cmc
xor
fsubl
sbb
mov
adc
xor
test
pop
or
cmc
iret
lahf
inc
add
jne
pop
pop
in
je
arpl
jb
sbb
ss
stos
xlat
setae
add
pop
sarl
push
xchg
mov
fnstcw
dec
cmp
test
fsubs
lret
clc
call
movsl
dec
loopne
nop
out
jp
adc
push
in
call
jae
call
xchg
popa
add
inc
ss
sub
mov
jle
xchg
fnsave
cmpsb
lds
loopne
and
int
jbe
scas
cltd
ja
in
pop
stc
push
dec
test
pop
cwtl
jg
dec
ja
icebp
pop
adc
movsb
dec
hlt
aas
push
testb
lret
xchg
lahf
xchg
xchg
cs
adc
sarl
or
test
lret
ljmp
inc
jge
sahf
not
dec
mov
pop
sbb
pop
out
gs
add
pop
mov
and
sub
inc
add
xor
subb
push
sbb
dec
xchg
push
test
jmp
cli
add
jmp
jb
popa
push
aaa
movsl
xlat
push
cld
inc
int3
incb
adc
inc
xchg
inc
push
adc
xlat
inc
mov
ficoml
sub
adc
out
repnz
jmp
mov
les
inc
fidivrl
in
nop
js
gs
loopne
mov
call
clc
imul
call
add
flds
sub
mov
xchg
push
inc
jmp
jne
loop
pop
add
adc
dec
inc
pop
add
jnp
jne
jno
jmp
sub
roll
in
leave
in
in
int3
and
and
rorl
inc
enter
adc
mov
jnp
pop
inc
push
stos
add
cmc
in
inc
sub
and
pop
mov
and
test
push
and
mov
out
inc
in
lock
repnz
rclb
jno
xchg
inc
orb
inc
add
xor
adc
insb
subl
sbb
or
outsl
mov
mov
shr
fwait
sbb
pop
xchg
mov
outsb
xorb
mov
dec
test
xchg
dec
cmp
stc
out
in
add
hlt
fwait
es
test
mov
cld
inc
shr
and
mov
xchg
sub
mov
mov
xchg
mov
push
js
mov
or
push
xchg
inc
aas
cs
aad
push
cmpsl
ja
xchg
hlt
sub
lahf
out
pop
lcall
fwait
mov
inc
shrl
inc
jecxz
pop
ds
test
pop
shrb
pop
xchg
mov
push
in
roll
daa
mov
lea
je
xor
fwait
dec
stos
add
mov
jl
sbb
mov
fcmovnb
scas
loope
daa
sbb
mov
insb
sbb
xchg
test
and
jg
in
test
lret
ficoml
aaa
orl
pop
sub
imul
outsb
jns
and
and
cmc
or
addl
mov
cmp
push
cltd
adc
and
das
mov
or
mov
jg,pn
movzbl
jno
add
add
xor
xchg
push
xor
lods
and
inc
fisttpl
adc
nop
add
dec
xchg
inc
push
sbb
xchg
or
or
test
imul
inc
push
sbb
add
sbb
xchg
xor
mov
jecxz
cmpl
mov
mov
push
nop
sub
movsl
mov
xchg
movsl
mov
push
lcall
lcall
add
shl
add
add
and
inc
pushf
and
inc
mov
xchg
xor
and
cmpsw
xchg
outsl
xlat
fidivl
icebp
mul
mov
xchg
jp
andb
jb
xchg
mov
pop
xchg
push
xor
cmp
push
decl
dec
inc
add
sbb
pusha
leave
inc
in
imul
push
subb
add
push
out
sbb
mov
inc
push
inc
test
mov
loope
add
lahf
and
mov
add
sbb
scas
mov
add
dec
pop
pop
movsl
mov
test
adc
pop
mov
sbbb
inc
and
sub
dec
or
ljmp
addps
imul
lds
xchg
ficoms
sar
or
sbb
rorl
fsubl
ja
sub
sbb
inc
adc
decb
or
xor
mov
popa
adcb
and
adc
push
xchg
and
xor
dec
jecxz
enter
fiaddl
sbb
sub
shrl
popf
mov
push
mov
inc
pop
or
sbb
mov
cs
or
pop
pop
dec
or
xchg
aaa
jbe
pop
sbb
xor
add
test
sbb
mov
mov
daa
lahf
ja
leave
out
mov
cs
add
mov
roll
xchg
mov
push
jb,pt
jae
mov
xor
pop
test
lods
push
sub
xor
push
adc
ds
movsl
mov
inc
adc
out
push
mov
ja
xor
sub
dec
sti
add
add
pushf
adc
cwtl
add
jle
int
in
xchg
stos
pop
inc
mov
mov
test
mov
xchg
aad
mov
jo
sbb
movsb
push
lds
out
bound
stos
add
lcall
jb
aam
in
or
and
insl
push
push
std
dec
mov
or
xlat
cmp
jno
jbe
pushf
dec
mov
and
mov
lret
add
stos
push
mov
add
insl
push
les
out
repz
int
xchg
jbe
test
mov
mov
imul
nop
push
or
mov
or
adc
mov
rol
in
gs
sbb
adc
push
lcall
push
cmp
dec
dec
lods
les
or
outsl
and
lods
dec
xchg
data16
popa
xorb
sbb
push
pop
mov
sub
adc
push
mov
btc
sub
jg
lea
cmp
jge
ds
int
jmp
mov
in
push
push
inc
lahf
addb
push
jl
push
popa
icebp
data16
or
pop
pop
stos
push
inc
incl
mov
add
test
adc
pop
pop
shrl
and
push
adc
aam
mov
jb
push
shlb
aad
sbb
test
lods
and
leave
push
ret
pop
mov
flds
popa
push
mov
out
dec
loopne
add
add
sub
push
decl
sub
inc
xchg
outsb
push
cli
dec
and
mov
popf
mov
inc
ljmp
test
imul
flds
outsl
inc
xor
inc
rol
roll
mov
fidivrs
inc
inc
scas
call
push
shrl
xchg
arpl
test
xchg
adc
sbb
push
mov
in
push
cmp
mov
push
shrb
mov
push
cmp
stc
loopne
push
inc
sbb
test
ret
icebp
xchg
or
int3
or
gs
clc
lock
mov
xor
in
xchg
cmp
cli
sbb
push
sbb
mov
xchg
cmpl
xor
int3
sahf
xor
xorl
std
jp
mov
mov
jne
jmp
xchg
testb
mov
sub
mov
mov
shll
aad
mov
mov
js
jae
lcall
xor
pushf
sbb
and
adc
fimuls
mov
mov
pop
daa
loopne
addr16
ss
adc
xchg
shrb
pop
mov
fcompl
jne
sub
add
or
mov
sub
xchg
daa
movsb
rcrl
sti
push
and
xchg
add
push
xor
pop
sub
paddsw
xor
test
sub
jbe
repnz
or
push
std
repnz
in
dec
push
mov
add
add
jg
jle
imul
push
mov
push
add
ss
pop
cli
fsubs
data16
std
shrb
sub
pop
jns
movsl
push
push
xor
dec
or
dec
mov
pop
out
add
pop
dec
xlat
cmp
adc
xchg
push
pop
xchg
fdivrl
ljmp
int
std
push
clts
mov
lcall
dec
dec
jo
sti
fnsave
mov
fisubrs
stc
inc
mov
outsb
cmpsb
ds
xchg
das
push
dec
adc
mov
in
lods
sahf
sti
scas
pop
pop
adc
and
imul
push
ror
push
movsb
lods
mov
sbb
enter
movsb
mov
push
sub
inc
sub
pop
sub
push
inc
pusha
sarb
jg
leave
or
stc
idiv
sbb
scas
push
jns
and
cmp
add
scas
xlat
leave
and
jae,pn
xchg
sbb
and
mov
mov
pop
sbb
cltd
jae
dec
mov
stc
and
inc
adc
in
and
mov
dec
xor
pop
inc
scas
xchg
sub
mov
add
push
jge
mov
in
or
inc
dec
or
push
cld
add
fisubrl
outsb
je
aad
xchg
and
mov
xor
aas
mov
cwtl
lock
and
xor
xchg
adc
add
jge
jb
negb
iret
and
imul
lods
xor
and
test
and
popl
push
adc
sub
sub
lret
mov
insl
or
cltd
movd
sbb
mov
xchg
pop
mov
fistpl
mov
mov
dec
int3
mov
jg
push
inc
fucomp
cmp
pop
int3
or
push
inc
fidivs
or
fstps
or
stos
push
sub
fcmove
lock
mov
into
add
mov
out
jp
pop
xchg
mov
inc
rcll
scas
movsl
mov
out
mov
lret
jp
jle
mov
or
clc
mov
sti
xor
inc
mov
ret
mov
je
sub
dec
popl
aad
subl
dec
ljmp
push
cmp
mov
jmp
sub
lods
lret
add
mov
and
jge
lahf
mov
movsl
mov
mov
icebp
sbb
in
add
gs
hlt
dec
rcrl
popf
scas
and
test
dec
jne
add
shrb
add
xor
dec
sbb
jecxz
xchg
int3
fldenv
add
pusha
sub
test
out
mov
cs
stos
push
int
inc
push
daa
pop
jle
cmpsb
cs
out
daa
mov
ljmp
inc
mov
cwtl
outsl
push
xchg
fnstcw
out
adc
hlt
adc
or
bound
je
push
jge
jb
adc
loop
jnp
sub
mov
xchg
cwtl
push
js
pextrw
add
adc
outsb
jb
popa
push
pop
pop
movsb
addb
add
add
sub
or
aas
sub
nop
add
test
jb
or
push
add
ljmp
rorl
adc
shl
adc
mov
pop
pop
loopne
push
inc
xchg
cli
imul
repz
ljmp
mov
mov
pop
inc
imul
inc
adc
scas
lods
scas
jae
mov
pop
ret
imul
cmpsb
repnz
xor
scas
ljmp
pop
outsl
shlb
inc
or
pop
repnz
pop
xchg
add
mov
push
inc
lret
mov
mov
push
lds
fs
inc
xor
imul
leave
mov
mov
dec
mov
adc
xchg
fcomps
sbb
cmp
inc
mov
push
add
int3
xor
fsubs
mov
mov
sar
push
out
mov
pusha
sub
repz
movsb
adc
dec
or
add
adc
cmpsb
lea
mov
sbb
out
mov
mov
push
lods
dec
loope
adc
pop
mov
sub
rcll
dec
test
loop
jl
mov
into
cld
xor
mov
mov
add
inc
xor
mov
pop
cmc
dec
nop
ljmp
outsb
fmull
roll
mov
test
insb
and
and
scas
and
rcl
jle
mov
mov
pop
push
js
or
sbb
xchg
cltd
jo
or
add
jbe
rolb
pusha
scas
mov
sub
jg
jp
lds
mov
aad
cld
dec
mov
mov
or
dec
jecxz
ret
push
cs
jb
jle
lret
adc
or
das
cmpsb
adc
mov
mov
add
cmp
mov
cli
shrb
nop
push
cmp
fxch
mov
push
outsb
out
sbb
pop
push
or
ljmp
shl
xor
ja
pop
mov
jmp
iret
add
outsb
add
and
gs
xor
mov
dec
pop
sti
bound
or
je
stos
out
mov
sbb
xlat
loope
inc
je
movsb
mov
int3
dec
jmp
add
and
xchg
aas
xchg
cli
pop
hlt
adc
les
add
add
insb
xor
cwtl
test
mov
jns
or
sbb
movsb
stos
popl
hlt
test
inc
dec
mov
cmp
add
aad
imull
push
loope
push
pop
and
sbb
cmpsb
mov
lods
sti
sub
mov
and
dec
dec
pop
mov
in
lods
scas
xchg
dec
mov
addr16
lret
sahf
fcoml
gs
xlat
cmp
imul
add
mov
and
pop
cmc
jno
iret
cmp
sub
out
mov
mov
rclb
inc
insb
and
mov
je
mov
xchg
mov
push
xor
sbb
movsl
push
test
push
enter
and
mov
popa
xor
lahf
shlb
dec
push
adc
test
add
inc
adc
mov
andl
push
int3
imul
pop
or
mov
bound
outsb
mov
xor
cs
int
movsb
mov
fmuls
lret
mov
sahf
xor
jge
add
sbb
data16
dec
aad
movsb
aad
jae
xchg
test
sbb
lods
sbb
mov
and
mov
cmpsb
push
icebp
adc
das
cmp
mov
loopne
jne
daa
or
adc
adc
xor
cmc
xor
pop
cmp
xor
xlat
rdtsc
movsb
sbb
sub
cmp
adc
mov
leave
push
pop
fistpll
pop
adc
je
jmp
test
jo
hlt
and
lahf
arpl
mov
and
imul
dec
inc
scas
dec
and
lods
mov
insl
fildll
push
cs
push
pop
add
or
or
jg
inc
cmp
sub
ret
adc
add
mul
nop
inc
mov
push
test
xor
jmp
insl
pop
aam
pop
in
jbe
shrb
cmp
mov
push
cmp
add
mov
sbb
inc
lds
pop
pop
mov
mov
pusha
xor
popf
rcrb
lock
mov
mov
and
sbb
adc
pop
cmp
int
aad
add
push
push
jo
or
jle
mov
xchg
sahf
lock
inc
mov
sbb
inc
jecxz
inc
lds
jne
aaa
adc
test
add
je
filds
adc
pusha
sahf
lret
nop
and
adc
or
test
les
dec
jb
push
aas
xor
adc
xchg
mov
subl
test
fbld
and
mov
cmpsl
xchg
cmc
xor
cs
clc
in
nop
cwtl
inc
mov
bound
mov
xchg
nop
sub
cs
fndisi(8087
jo
xor
dec
test
jno
cld
je
les
mov
pusha
jl
inc
mov
inc
add
lods
sub
inc
mov
frstor
pusha
cmp
rorb
call
fmuls
add
repz
popf
cld
pop
xchg
inc
jne
cmpsw
sub
scas
loop
ret
stos
or
sbb
jo
pusha
leave
jge
add
pushl
test
inc
dec
add
push
inc
add
xchg
clc
jb
dec
rclb
and
mov
xchg
sub
jb
sub
push
icebp
push
daa
dec
ret
cmp
mov
out
lods
sub
rolb
rclb
addl
add
dec
nop
cmp
mov
les
pop
fsts
and
add
in
mov
lcall
ret
icebp
fnstcw
es
pop
jno
pushf
add
rcrb
mov
pop
xor
nop
leave
adc
push
adc
shll
mov
fsubr
adc
scas
push
or
lret
and
das
jl
mov
jmp
addl
ljmp
iret
imul
add
adc
mov
and
out
sbb
dec
add
dec
inc
dec
pop
pop
xchg
add
lods
and
xchg
pop
cmp
mov
daa
xchg
adc
das
push
sbb
add
pushf
mov
outsb
daa
pop
sti
jge
ss
mov
cmp
jns
sbb
enter
and
add
imul
and
mov
adc
iret
or
loopne
popf
and
clc
sbb
pop
cs
inc
inc
mov
adc
mov
or
and
movsb
out
jecxz
cmpsb
cmp
scas
pop
inc
cmp
mov
mov
ret
jmp
fildll
out
pop
xor
out
cmpsl
xchg
jecxz
sbbb
sahf
std
cmpsb
incl
mov
orb
mov
movsb
sbb
out
sarl
add
cmp
sar
cmp
hlt
ds
loope
pop
sarb
jnp
data16
adc
push
sbb
mov
insl
mov
nop
and
mov
cli
sub
lahf
loope
call
xchg
sbb
pop
repz
xchg
xor
xchg
mov
addl
and
out
sub
stc
lods
dec
mov
mov
and
push
adc
xchg
adc
mov
sub
mov
loope
lret
adc
fs
pop
xlat
outsb
inc
lea
cmp
push
adc
addr16
dec
sarb
or
clc
mov
daa
ljmp
enter
in
or
or
movl
call
test
add
sbb
mov
jle
fmull
adc
loop
inc
pop
ficoml
les
add
stos
pop
mov
cs
push
inc
jnp
iret
loop
push
loopne
or
xchg
sbb
cs
adc
rorb
iret
lods
push
add
push
jb
rcll
daa
inc
add
testl
sbbb
pop
adc
sti
mov
xor
mov
psllq
sqrtps
cli
lcall
rcl
add
and
in
adc
adc
xorl
bound
cmc
mov
ljmp
mov
mov
jo
mov
push
cmp
mov
push
inc
cmp
dec
mov
add
das
mov
mov
scas
xorl
and
cwtl
inc
jecxz
hlt
ds
hlt
das
jo
pop
repnz
push
and
nop
and
loopne
leave
mov
lods
testl
and
ldmxcsr
jne
xchg
ds
movsb
push
xor
mov
jl
stc
sbb
gs
repz
scas
jns
inc
pusha
leave
xor
xor
rcrb
xor
outsb
cwtl
mov
push
icebp
je
stos
and
bound
mov
pop
xor
dec
lret
push
insb
das
enter
pop
jmp
xorl
mov
push
cld
movsl
push
inc
mov
jge
or
call
add
xchg
add
fadd
push
xchg
lods
dec
cmpsl
iret
and
fiaddl
mov
outsb
pop
pop
push
mov
push
mov
out
pop
test
mov
mov
push
cmp
jl
xor
sub
fcmovu
ljmp
or
rcll
inc
dec
mov
ret
lods
rorb
cmp
scas
fiaddl
sarl
add
out
dec
and
lcall
sbb
mov
xchg
xor
pop
ret
or
clc
arpl
jb
mov
in
clc
add
mov
pop
or
mov
popa
pop
sbb
sahf
test
pop
lahf
inc
xchg
sbb
cltd
push
cli
scas
mov
jbe
sbb
mov
jo
lods
or
adc
mov
in
call
sub
cmp
and
cmpsb
das
push
outsl
cld
test
adc
cltd
cwtl
push
ljmp
test
or
test
je
jnp
xor
lods
inc
cmpb
pop
inc
cmpsb
jle
sti
repnz
lcall
rorl
clc
div
pop
push
dec
push
dec
jno
add
test
enter
in
addr16
xor
jo
aam
push
jp
sub
outsb
jge
test
lock
mov
mov
pop
clc
repnz
pop
cmp
push
mov
pushf
js
pop
mov
inc
inc
ret
mov
jmp
das
push
dec
jno
inc
lcall
pop
and
xchg
cmp
sub
lahf
mov
sub
pop
mov
xor
sbb
xchg
inc
je
aad
dec
add
xchg
das
iret
fstps
call
test
out
pop
lods
add
xor
int3
inc
rclb
cmp
cltd
add
push
cwtl
mov
inc
sbb
icebp
mov
and
psadbw
leave
aaa
pop
xchg
jg
test
inc
pop
dec
out
mov
push
rorb
push
push
mov
xlat
adc
push
mov
xchg
sbb
xchg
push
add
clc
hlt
out
jbe
push
jmp
gs
dec
jp
mov
mov
jnp
cwtl
negl
lcall
add
insb
or
sub
jp
addb
pop
mov
aad
add
push
gs
daa
or
xchg
inc
mov
sbb
insb
mov
push
cmp
jbe
add
in
pop
xchg
mov
pushf
dec
lret
or
adc
loopne
mov
xchg
mov
add
and
mov
mov
jbe
daa
fucomp
xchg
popa
lret
imul
add
lds
mov
out
xor
insb
les
jne
or
mov
data16
cmp
mov
mov
add
mov
ficompl
arpl
addb
push
aaa
sbb
jg
imul
push
push
repz
and
cld
imul
pop
cmp
jb
sbb
and
push
fcmove
ret
mov
inc
popf
insl
mov
mov
sbb
mov
int3
shlb
arpl
jb
adc
adc
out
jae
and
dec
mov
aas
inc
xchg
mov
inc
mov
push
pop
cmpsl
out
stos
xchg
or
enter
dec
mull
or
cmp
push
stc
nopl
mov
hlt
lds
sbb
shll
mov
adc
test
mov
and
push
adc
dec
insl
jl
xchg
int
test
push
dec
aam
pop
insb
std
cmovle
std
into
aaa
mov
sbb
mov
inc
push
test
jecxz
loope
mov
dec
ret
inc
mov
pusha
hlt
and
mov
mov
and
lods
mov
pop
nop
mov
movsb
imul
clc
pop
cli
in
xor
jbe
out
mov
pop
popa
pop
inc
mov
mov
cld
push
inc
push
lcall
jo
repnz
aas
mov
sbbl
lds
outsb
or
adc
mov
in
fcoms
push
xchg
hlt
push
sbb
mov
pop
mov
inc
rcrl
xchg
repnz
out
mov
pushf
mov
pusha
inc
or
add
jne
and
pop
addr16
push
sti
push
aam
mov
ja
clc
cmp
pop
jbe
das
mov
fidivl
ret
pop
cld
pusha
sbb
push
stos
adc
pop
inc
leave
lret
jg
test
lret
and
stos
sbb
test
mov
mov
icebp
daa
jae
pop
mov
ficompl
add
stos
test
clc
xchg
mov
push
push
adc
cmp
xor
push
dec
imul
mov
push
mov
sbb
scas
repnz
lcall
adc
idivb
cmpsb
pop
inc
imull
cmp
out
xchg
jl
test
inc
lods
popf
xor
lea
repnz
in
push
pop
aam
push
xchg
push
sbb
xchg
xor
testl
mov
xor
cmpsb
ss
sbb
cmp
movmskps
cmpsb
mov
jno
enter
pop
xorl
push
mov
pop
es
fmull
test
mov
sbb
mov
push
xchg
shlb
into
xor
add
cli
dec
pushl
xor
push
cmp
int3
xchg
adc
jecxz
clc
out
ds
lret
pop
je
cli
aaa
lret
ljmp
dec
ret
push
lds
mov
sbbb
mov
mov
fmuls
hlt
push
in
fisttpll
or
aam
into
subb
dec
int3
mov
xor
xorb
mov
aad
push
dec
jp
scas
sti
add
cmp
not
rorl
mov
pop
dec
cwtl
mov
xor
mov
jb
mov
xchg
repnz
xchg
lods
mov
int3
cli
fwait
inc
add
push
data16
mov
mov
ljmp
cmpl
or
mov
jg
and
jbe
lahf
jg
testl
jmp
rcl
xchg
or
movsl
imul
mov
cmp
iret
xor
push
in
in
mov
dec
mov
lds
popf
sbb
xchg
inc
mov
mov
nop
adc
pop
jp
js
xor
pop
mov
mov
loopne
xor
stos
mov
pop
cmp
mov
pop
mov
ret
adc
outsb
push
adc
sbb
pop
and
xor
popa
pop
mov
scas
xor
inc
nop
sub
push
mov
dec
push
rol
add
xlat
push
adc
mov
pop
pop
push
jne
out
jl
insl
test
pop
jmp
jmp
lods
or
xchg
cmpsb
mov
and
outsl
mov
ror
dec
jl
xor
int
test
sub
sub
jb
xor
push
aad
addb
and
mov
je
cmp
loope
sbb
insl
in
pop
sarb
incb
aas
test
mov
mov
je
pop
test
ret
mov
aad
inc
das
aaa
pop
cltd
adc
xchg
scas
scas
mov
jns
add
stos
pop
mov
cmpsl
jecxz
scas
sub
das
call
std
add
xchg
test
div
xchg
adc
inc
add
pop
out
pop
sbb
mov
sub
and
aad
int
notb
mov
test
dec
and
aas
sbb
and
jo
sub
shlb
add
mov
xorl
push
inc
sub
and
dec
subl
xchg
push
addl
push
push
pop
xor
lods
xchg
stos
xchg
xchg
adc
push
xor
inc
fdivrs
ljmp
dec
js
mov
dec
sbb
in
inc
mov
mov
adc
test
and
stos
and
push
xchg
sub
inc
aas
aas
push
rcrb
enter
or
les
xlat
std
andl
scas
inc
mov
push
pop
jb
sub
pusha
call
adc
stos
pop
loop
adc
and
lods
sti
gs
pusha
push
xchg
pop
inc
je
mov
and
mov
ja
pop
mulb
aas
ja
fbld
dec
xchg
insl
mov
in
cs
cld
sbb
cs
xchg
repz
jmp
push
pop
sub
jbe
or
or
or
subb
xor
pop
aas
cs
test
aam
lods
push
jno
sub
fcomps
jne
bound
fwait
xchg
fdivs
inc
mov
rcrl
loopnew
mov
mov
inc
mov
jmp
notl
mov
movsb
add
adc
xchg
ds
loope
sub
sbb
in
mov
mov
in
nop
cli
sbb
adc
sub
push
dec
iret
iret
cmc
mov
addb
lods
je
inc
sub
jmp
adc
push
inc
cld
adc
or
add
rcrl
push
adc
bound
and
xor
or
cwtl
inc
inc
inc
jecxz
pop
mov
sub
cwtl
pop
push
adc
das
xor
xchg
sbb
sbb
sbb
scas
jl
mov
xchg
sbbb
xchg
call
jo
sub
divb
out
into
jp
into
pop
loopne
cmp
jne
outsl
jge
ds
or
dec
xchg
mov
jo
je
add
mov
fisttpl
pusha
popf
dec
sub
xchg
lods
cmc
push
adc
aam
pop
push
push
icebp
test
outsb
xchg
mov
fdiv
mov
xchg
add
sub
mov
and
adc
mov
inc
pop
hlt
fldcw
imul
inc
cmp
push
stos
sbbb
mov
cmpsl
sbb
call
out
sub
je
aaa
ds
cli
pop
and
mov
gs
repnz
add
aaa
pop
daa
inc
push
call
add
sbbl
les
inc
scas
sub
mov
int3
testb
xor
cld
adc
inc
push
enter
notb
or
fnstsw
xchg
mov
imul
push
lds
pop
or
orb
push
lahf
lahf
aas
push
mov
push
cli
aad
das
in
and
inc
or
shl
bound
cmc
cmp
hlt
sarb
movsl
call
in
clc
push
pop
xchg
idivb
push
pop
popa
sub
jo
push
inc
pop
pop
push
or
push
and
mov
mov
mov
mov
mov
test
pop
rcrl
dec
and
adc
mov
or
stos
call
popf
push
rorb
or
add
aad
and
cmp
bound
sarl
mov
int3
das
push
dec
mov
sbb
jecxz
or
ja
xchg
and
sbb
pop
popf
inc
dec
adc
sbb
or
or
pop
loopne
outsl
adc
bound
shrl
out
call
dec
sub
fldt
mov
sub
repz
inc
pop
mov
dec
mov
cmp
push
mov
inc
ds
repnz
pusha
xor
push
outsb
movsb
and
ret
flds
pop
xchg
xchg
add
sub
scas
jp
mov
inc
jecxz
cld
xchg
les
pop
fcoms
or
std
enter
pop
fstpl
icebp
mov
lret
mov
jg
and
stos
test
dec
push
inc
push
mov
mov
popf
mov
mov
sub
push
jno,pn
das
mov
int3
stc
popf
inc
and
add
jbe
movsl
dec
cli
cmp
sub
les
push
adc
movsb
adc
push
call
jle
adc
add
adc
or
pop
mov
ret
pusha
dec
pop
shlb
divb
xchg
loop
mov
push
add
ficompl
scas
cmp
jge
loop
dec
sub
loopne
rolb
sub
sub
mov
pop
in
cmpsl
fs
add
jle
mov
addl
or
sti
mov
cmp
loopne
dec
dec
push
sbb
jo
inc
mov
jg
fisubrs
or
movsl
mov
lret
pop
push
pop
pop
dec
push
fsubrp
mov
or
push
mov
xchg
sbb
push
lods
ret
or
jle
sub
popa
inc
jbe
mov
sbb
aam
or
imul
cmp
mulb
cmp
mov
mov
rcrb
stos
js
cmp
test
sbbb
or
xchg
pop
aas
test
aas
mov
sub
mov
jnp
add
mov
pop
iret
mov
mov
mov
mov
cmc
test
mov
adc
push
lea
cmp
push
pop
scas
stc
mov
xchg
pushf
aaa
jmp
xchg
mov
scas
push
outsl
push
push
dec
pop
pop
pop
xorb
loope
jg
icebp
aas
in
sub
lahf
mov
mov
rcrl
ljmp
xchg
inc
ss
icebp
loop
and
fs
jg
out
gs
xor
push
lods
sub
cmp
bsr
rol
sub
mov
sub
stos
push
or
xchg
in
inc
scas
inc
add
push
jb
rcr
inc
ja,pn
pop
and
dec
rcll
frstor
decb
rorl
push
adc
xchg
cmc
int3
repz
movsb
inc
popf
jge
push
and
mov
mov
add
inc
outsb
push
sub
fisubrs
shl
inc
lahf
sub
jl
or
and
ss
lret
mov
jge
jae
xlat
xlat
lods
lret
mov
addr16
pop
jge
or
dec
push
lcall
paddd
les
mov
sbbl
inc
adc
jne
test
cwtl
sub
sub
xlat
xor
jns
jecxz
mov
xchg
or
movsl
and
lock
les
dec
inc
std
iret
stos
mov
push
div
call
cmp
sbb
mov
adc
aaa
lahf
xor
shrb
fs
stos
loop
and
sub
push
dec
das
inc
pop
popa
sub
insb
mov
ds
mov
xchg
cld
loopne
mov
and
pop
stc
mov
daa
gs
test
inc
jne
stc
jnp
cmp
sbb
stos
sbb
jmp
adc
push
fwait
mov
jg
cmp
ret
push
mov
call
out
pushf
or
lret
cmpb
cld
sahf
mov
jge
inc
mov
jle
bound
inc
mov
inc
shl
scas
push
sub
inc
xor
cmc
rcll
sub
push
sub
inc
sub
rolb
icebp
aas
mov
dec
fcmovne
or
inc
cld
cmpl
dec
adc
in
adc
es
sbb
add
adc
adc
cwtl
int3
add
add
out
ss
ja
bound
pop
xlat
inc
movsl
ljmp
ret
notb
icebp
inc
mov
lock
out
test
fcomip
push
in
mov
lahf
insb
xor
cmp
jns
or
and
scas
test
or
sbb
inc
jg
jno
dec
mov
sub
aas
mov
mov
xchg
popa
das
movsb
adc
jmp
shlb
sbb
add
lea
mov
cmp
push
mov
mov
movsb
inc
cmpl
dec
fincstp
fimuls
adc
dec
mov
adc
in
add
and
adc
cld
mov
push
cwtl
push
movsl
sbb
pushl
sub
bound
add
dec
sub
lret
lods
inc
or
push
inc
mov
add
rcll
add
push
mov
rorl
pop
divl
sahf
popa
mov
or
cli
hlt
pop
and
cld
into
icebp
inc
add
add
ljmp
jge
mov
fisttpl
xchg
fstpt
or
fwait
push
andb
inc
shlb
jle
lods
lret
cmp
cmp
rorb
jle
mov
mov
adc
sbb
mov
jb
mov
pushf
jno
ljmp
lret
iret
push
into
enter
sbb
xor
jl
test
cmp
mov
jbe
cld
push
push
stc
cmp
jp
mov
adc
sub
int3
mov
push
cmp
pop
xchg
mov
test
cmp
nop
movb
ret
lods
fidivs
loop
inc
mov
hlt
xor
xchg
and
repz
shlb
inc
out
cmp
xchg
ds
xchg
push
mov
push
add
adc
cld
inc
shrl
push
xor
inc
sbb
xchg
jl
xor
push
add
scas
cmp
mov
lahf
xchg
adc
add
dec
push
pushf
fcoml
repnz
fs
pop
xor
inc
dec
jno
dec
and
pop
cmp
mov
repz
push
je
mov
jae
add
sub
sbb
or
cmp
xchg
fisubrl
in
mov
enter
test
out
push
mov
pop
in
mov
jecxz
lcall
test
inc
cmp
and
sbb
mov
xchg
adc
bound
mov
cli
sub
mov
sub
push
and
xor
jb
movsl
lock
pop
pop
push
jmp
cmp
inc
dec
mov
cmp
mov
jmp
dec
jg
sbb
xor
adc
popf
mov
test
clc
lret
lahf
stc
popa
jno
nop
mov
or
add
cmp
sub
nop
mov
xlat
adc
sub
xchg
test
sub
xchg
mov
movsb
orb
sub
in
clc
into
bound
test
mov
add
mov
add
mov
push
stos
and
gs
das
cmp
add
and
insb
mov
iret
cmp
mov
subl
add
dec
xchg
pusha
sbb
adc
inc
adcl
and
inc
jecxz
das
xor
lods
cli
xor
cmp
popa
pop
xchg
sub
out
out
das
pusha
mov
fistpll
adc
add
sbb
cld
imul
outsb
sbb
mov
data16
jbe
cmp
pop
push
or
dec
adc
icebp
lods
loopne
sbb
popa
cli
and
je
inc
repnz
jle
sbb
mov
and
mov
into
jp
sub
mov
push
cmp
pusha
pop
mov
sbb
sbb
jl
mov
arpl
leave
mov
xchg
daa
sbb
mov
cmp
mov
sub
mov
cmp
icebp
lds
repnz
sbb
dec
and
push
dec
mov
jno
lods
mov
insb
or
mov
je
jb
addb
fidivrl
dec
jb
push
inc
and
pushf
push
mov
iret
dec
sub
stos
andl
cmp
xchg
test
jecxz
push
ret
xchg
into
push
sbb
dec
rcrb
arpl
adc
lods
lods
pop
xor
push
jnp
dec
sub
je
loop
out
std
das
mov
xor
stos
sbb
push
push
push
push
mov
cld
test
or
add
jne
dec
pusha
xchg
call
and
es
jo
or
loope
xor
mov
jmp
pop
out
and
dec
bound
dec
dec
cmp
xchg
add
sbb
mov
nop
xchg
push
lods
inc
or
xor
nop
clc
mov
cmovno
sub
pop
aad
jne
mov
push
add
jno
das
jmp
and
out
mov
fs
lret
in
in
xor
enter
mov
cmpb
rclb
sub
add
fidivl
call
sub
lahf
jp
pop
adc
mov
pop
pop
jns
mov
js
ret
and
fs
imul
aas
fwait
mov
ret
cld
push
jb
push
mov
mov
icebp
outsb
adc
mov
cs
jp,pt
mov
push
les
sbb
hlt
xchg
pop
add
scas
sbb
pop
pop
cli
xchg
mov
mov
push
dec
mov
mov
sti
and
out
repz
mov
pop
gs
shrl
mov
lock
push
or
ds
or
loopne
add
int
movsb
jmp
sar
js
loop
push
fcoms
test
inc
scas
fbstp
inc
jecxz
push
loopne
call
lcall
push
rclb
jmp
orl
lret
xchg
mov
insb
sub
mov
roll
cmpb
imul
sbb
daa
das
scas
or
cmp
mov
mov
add
push
adc
sbb
iret
cld
andb
ret
shrl
add
fildll
lods
push
call
push
aam
call
and
dec
in
cwtl
jp
stc
mov
test
icebp
xchg
jo
lea
jecxz
add
adc
mov
sbb
mov
lods
and
fldenv
pop
aas
pop
stc
testl
les
scas
dec
fwait
push
sbb
dec
outsl
scas
sbb
sub
sub
icebp
call
stos
pop
jns
xor
mov
ja
and
fistps
mov
jb
jge
fnstcw
sbb
sbb
and
adc
jg
pop
mov
sbb
iret
mov
adc
std
pop
scas
cmpsl
outsl
push
mov
mov
dec
mov
cmp
ljmp
push
push
adc
out
mov
lret
filds
jne
cli
gs
lods
push
xchg
scas
and
xchg
adc
mov
ret
jns
dec
test
mov
mov
mov
pop
pusha
daa
mov
stos
adc
add
xorb
xor
ret
scas
ficompl
mov
push
movzbl
jge
push
stos
adcb
jg
fcmovne
clc
jbe
mov
and
mov
dec
push
bound
scas
push
push
add
mov
jecxz
sbb
rcrb
pop
int3
sub
mov
lock
mov
push
shlb
popa
adc
pop
sbb
inc
lods
jno
cld
or
hlt
cwtl
lock
mov
dec
sbb
adc
pusha
mov
clc
push
pop
lock
add
lret
es
mov
xlat
call
test
inc
mov
add
push
push
add
jae
lds
push
jecxz
ss
push
xchg
inc
pop
arpl
xchg
scas
icebp
pop
inc
out
inc
xor
enter
inc
cwtl
pop
scas
mov
mov
mov
mov
sti
pop
cmp
mov
lret
mov
ficoml
cmp
xor
cld
roll
cli
mov
mov
stc
outsl
push
xchg
add
int
ja
sbb
sub
shll
mov
icebp
cmpsl
dec
dec
add
incl
or
cltd
repnz
dec
xchg
jmp
andl
mov
or
loopne
lock
popa
adc
jae
xlat
add
ljmp
push
mov
push
add
sbb
fadds
in
int3
mov
sub
inc
pop
push
xor
mov
push
push
dec
or
add
call
rorl
loope
lods
shlb
cld
scas
jo
push
sub
cwtl
test
mov
stos
dec
pusha
sub
push
mov
test
repnz
sbb
add
shll
dec
insl
jge,pt
movsl
adc
pop
negl
sbb
mov
pop
stc
addb
out
jbe
das
mov
jne
int
rol
mov
movsb
adc
test
xor
fs
xor
xlat
fnsave
jno
cld
inc
es
lret
fmulp
push
nop
rcll
jecxz
movb
dec
shll
dec
test
cmp
pop
insb
jo
jmp
shl
inc
xchg
push
push
hlt
sub
pop
dec
sub
out
dec
cld
jne
jle
movsl
xchg
clc
add
cmpsl
inc
or
mov
add
cli
mov
icebp
ja
or
add
js
sbb
loopne
sahf
mov
stc
bound
repnz
jbe
aas
mov
stos
sub
imul
scas
or
jo
and
daa
xchg
add
mov
and
xor
fwait
push
jnp
dec
or
xchg
lret
dec
aaa
add
loopne
mov
inc
cmp
je
int
mov
mov
jo
inc
adc
pop
cmp
test
xor
adc
cmpsb
loope
out
nop
cmp
cmp
out
jge
or
or
jp
adc
fs
dec
or
or
xchg
dec
jbe
loopne
adc
add
mov
das
notb
jnp
sub
imul
ja
cltd
xchg
or
lahf
sub
xchg
dec
les
add
adc
das
pusha
push
and
push
inc
xor
cs
pop
and
mov
dec
pop
mov
negb
fwait
mov
jbe
add
lea
xchg
notb
sarl
mov
mov
les
enter
ljmp
or
jmp
aas
inc
dec
adc
or
jge
lea
jo
mov
rcrl
test
adc
shrb
push
and
imulb
scas
mov
nop
jbe
mov
sar
lds
push
test
js
adc
fistl
pop
es
add
dec
xor
sbbl
cmp
std
sub
orl
push
je
xchg
mov
sub
cli
pop
call
push
xchg
mov
mov
mov
cmp
rclb
dec
movsl
pop
and
push
rorb
pop
hlt
jmp
inc
adc
inc
add
lods
inc
sub
mov
cli
add
dec
into
or
pusha
mov
xchg
xchg
add
pop
and
enter
or
stos
mov
imul
aas
and
sub
shrb
pop
adc
push
inc
mov
pushf
add
jno
cmpsb
les
popa
mov
popf
ljmp
sbb
js
ds
or
jmp
xchg
into
test
aad
lea
push
fwait
mov
xchg
into
scas
and
lret
mov
add
mov
sbb
and
sbb
cmpsl
mov
and
cmpsl
mov
and
aaa
call
daa
repnz
iret
cmp
ja
or
adc
pop
xchg
ss
inc
fidivrs
mov
adc
iret
xor
test
cmp
add
pushf
jmp
mov
cmp
add
into
in
pop
mov
inc
fildl
push
or
daa
loopne
shll
mov
cltd
xor
push
daa
xor
jnp
and
je
stos
ret
aas
insb
mov
daa
fisubl
push
pop
mov
or
jmp
popf
xor
push
push
jecxz
in
es
or
xchg
adc
movsb
mov
in
jmp
bound
xor
pop
in
ret
jg
mov
push
xor
cmp
mov
divb
and
clc
dec
cmp
and
push
lret
mov
ja
jge
pop
sarl
push
push
dec
jg
cs
adc
lahf
sub
sbb
inc
into
movsl
jmp
je
cmp
out
ja
jne
repz
ret
cltd
into
jo
std
aaa
gs
push
call
jge
imul
ljmp
sub
inc
mov
aad
sti
jne
cmc
out
xor
adc
mov
call
xchg
dec
test
iret
inc
lret
inc
pop
pop
xchg
mov
icebp
mov
popa
sti
dec
loopne
andl
adc
je
add
movb
in
dec
jne
push
jnp,pn
sbb
ret
and
orb
pop
xlat
pop
imul
sbb
push
rclb
push
rol
nop
add
int3
jb
mov
pop
loopne
neg
dec
js
outsb
call
idivb
dec
je
push
nop
dec
cltd
out
loop
push
dec
fistl
inc
and
push
fs
lret
call
mov
mov
jne
push
fdiv
pop
insb
sbb
test
jno
rolb
or
inc
xorb
push
push
push
ret
lds
lea
outsl
xchg
sub
add
sub
xor
test
push
or
inc
mov
mov
or
inc
rolb
dec
xor
and
jl
outsb
call
pop
mov
mov
adcl
jecxz
loopne
inc
test
xchg
rcrb
and
jecxz
je
and
and
test
xor
call
stos
orb
add
clc
repnz
sub
cs
jb
pushf
add
ret
cmp
cmp
dec
or
mov
lea
adc
add
ret
movsl
xchg
stos
fld1
inc
mov
subb
xor
jno
aam
imul
repz
movsb
movsl
and
cmpsb
out
cmp
pop
or
call
or
addr16
sbb
or
inc
hlt
add
sub
mov
mov
lds
test
sarl
shl
neg
ds
std
sub
in
cmpsl
cmp
jb
cmc
add
or
adc
cmp
lea
das
or
mov
add
idiv
jbe
jmp
jns
in
gs
xchg
int
cli
imul
dec
jge
inc
mov
call
into
bound
mov
or
in
mov
push
add
sti
fidivrl
nop
andb
jbe
adc
sbb
fimuls
repnz
push
ret
cs
mov
jl
jl
xor
scas
xchg
loopne,pn
pop
dec
rcrb
push
jp
adcl
punpckhdq
push
and
popf
push
sbb
or
xchg
repnz
fcoml
cmc
mov
mov
shlb
test
das
or
lods
hlt
push
lea
or
pusha
fsubs
mov
orb
mov
dec
mov
ret
or
lea
sbb
push
lea
dec
mov
jge
inc
inc
gs
mov
cli
lea
push
mov
mov
sbb
sub
fwait
dec
outsl
aam
stos
xor
imul
lahf
mov
mov
adc
jns
inc
std
stos
inc
add
andl
hlt
subb
pushf
jp,pn
mov
and
pop
mov
mov
adc
pop
and
in
push
cmpsb
pop
clc
mov
sbbb
lds
inc
mov
mov
test
shl
subb
fstl
mov
dec
call
jnp
adc
and
sar
jo
inc
sub
sbb
and
push
test
addb
subb
inc
scas
dec
sbb
jmp
inc
ss
shr
cmp
xor
dec
adc
aaa
push
mov
bound
jbe
popf
inc
lcall
adc
fsubrs
push
outsb
faddl
pop
sub
mov
fidivrs
xchg
push
mov
outsb
xchg
mov
mov
data16
mov
mov
sub
ja
rorb
or
insb
dec
xlat
push
call
xor
mov
jp
pop
mov
loop
push
dec
insl
cmpb
and
add
iret
adc
xchg
or
loop
cmp
test
add
stos
loopne
in
mov
pop
fwait
loop
lds
mov
inc
scas
xor
stos
mov
imul
es
pop
cltd
or
les
aam
ljmp
xor
cmp
jmp
imul
das
dec
dec
push
in
cmc
push
jns
xchg
shlb
xchg
mov
imul
and
dec
xor
add
sub
ret
or
jp
adc
pop
push
jo
or
and
pop
mov
fsub
and
insl
jle
mov
jmp
cmpsl
jp
adc
jge
pop
sbb
jle
push
negb
daa
ljmp
outsb
test
aam
push
pop
jo
fwait
push
and
sub
push
jb
dec
or
in
jecxz
cmc
mov
push
push
rcrl
xlat
cmc
push
mov
mov
cmpl
jl
xor
lret
or
movsb
add
sarb
movsb
adc
lods
mov
mov
cmp
push
mov
ret
loope
fisttps
lret
aas
xchg
fs
push
aad
mov
test
popf
jno
psraw
mov
sub
mov
hlt
inc
stc
dec
adc
cs
movsb
pusha
rcrb
sbb
loopne
or
or
inc
repnz
ficompl
pop
scas
and
cmp
xchg
inc
ffree
fidivrs
shlb
ret
loopne
cmc
lahf
jle
int3
add
enter
lahf
sti
inc
rclb
rol
insl
fdivr
xor
and
push
sub
push
inc
sub
aam
ret
mov
push
ljmp
outsb
enter
and
jl
push
inc
nop
leave
xchg
xchg
and
add
lock
cwtl
jl
inc
jmp
mov
adc
push
xrelease
call
mov
lods
in
movsb
rcll
out
ret
pop
dec
lds
xor
int3
fdivrs
mov
xor
loopne
add
int3
add
fistl
pop
std
enter
adc
and
pop
inc
leave
cmp
movsl
data16
hlt
pop
leave
or
fs
mov
das
mov
sbb
lods
imul
push
push
pop
rcrb
in
pop
mov
lock
jnp
and
outsl
cmovl
xchg
es
xchg
cwtl
js
sub
push
cmpsl
stos
or
into
jo
imul
gs
lock
sbb
xchg
adcb
pop
push
dec
movsb
rcr
clc
imul
pop
push
test
flds
pop
sahf
xchg
js
sub
loop
lret
jmp
movsb
sbb
push
push
or
call
dec
lea
mov
ja
mov
add
mov
mov
or
inc
pop
jns
push
xor
fisubl
or
add
jp
mov
jmp
inc
lret
xlat
divb
inc
movsb
sub
loopne
cmp
mov
stc
into
push
orps
dec
mov
cltd
inc
in
xor
fs
fdivs
push
lds
jle
fldt
push
push
arpl
int3
repnz
scas
sbb
xchg
xchg
mov
out
dec
jmp
push
pop
push
rcll
xor
fimuls
das
push
addr16
outsb
pusha
mov
leave
inc
sbb
xor
or
or
inc
sbb
orb
stc
and
addl
lahf
loopne
and
dec
sti
mov
cmp
push
imul
gs
es
in
xor
mov
popf
xchg
loope
cs
in
mov
pusha
orb
xchg
adc
orb
aaa
inc
out
adc
dec
stos
shl
clc
sbb
in
stos
in
sub
and
call
imulb
add
cmc
mov
pop
mov
std
lds
sub
icebp
mov
cmp
imul
fdivr
and
dec
ficompl
test
fsub
pop
sbb
xchg
push
jge
adc
je
jns
pop
hlt
add
mov
sahf
mov
push
xchg
adc
test
xor
and
test
xchg
ret
adc
mov
sbb
rcrb
inc
mov
push
dec
or
cmpl
push
sbb
mov
int3
mov
icebp
push
push
add
orb
lret
sub
das
fidivrs
scas
push
ret
stc
add
push
add
xchg
and
xor
arpl
scas
adc
push
mov
hlt
and
push
inc
outsb
fucomi
sub
gs
push
and
pop
inc
jne
inc
or
fchs
mov
out
js
imul
cs
inc
leave
xchg
sub
xor
cli
repz
out
and
mov
ds
fs
jecxz
roll
addl
and
icebp
into
cmp
outsb
popa
rorb
mov
add
dec
jne
cmp
aas
loopne
mov
test
outsl
cltd
push
loopne
sti
cwtl
sub
notb
pop
mov
lods
in
popa
pushl
push
loope
dec
add
sbb
les
shrl
mov
repnz
xor
fsubl
cmpsl
add
mov
stc
mov
test
xchg
js
inc
mov
fimuls
hlt
sbb
ffree
insb
push
jno
jnp
mov
xchg
ret
out
mov
mov
fwait
sub
pop
in
push
sbb
nop
or
push
lock
lock
push
mov
clc
ds
outsl
das
mov
lahf
and
std
xchg
in
sub
lds
sbb
jbe
je
jecxz
pop
mov
xor
je
adc
mov
cli
leave
lock
mov
fisubl
xor
adc
cmp
sub
jp
loope
push
pop
cmp
gs
in
pushl
addl
jae
js
scas
inc
lret
cld
jecxz
inc
inc
cwtl
mov
fucomip
popf
or
xchg
push
lahf
movsb
mov
xchg
popa
les
dec
cwtl
mov
imul
add
test
xchg
repz
inc
pop
push
inc
lds
pusha
movsl
loope
cmp
push
dec
cli
jmp
aad
jbe
mov
pop
cmp
pop
aaa
mov
arpl
lahf
ds
invd
mov
mov
mov
mov
imul
int3
jg
adc
dec
xor
pop
loop
push
cmp
sbb
ljmp
mov
popf
fmull
clc
mov
daa
and
push
mov
mov
xchg
rolb
sub
insb
add
xchg
jl
cmp
leave
out
negb
aad
repnz
daa
gs
push
fmuls
mov
out
icebp
out
mov
add
gs
mov
subl
scas
pop
xor
pop
hlt
into
in
xor
and
cmp
push
fistpll
pusha
xor
pop
mov
ret
jb
dec
xchg
mov
push
lock
sub
loop
rol
cmp
mov
je
jmp
xchg
pop
gs
pop
mov
das
vmread
aam
xchg
repnz
inc
dec
movsb
sbb
shrl
mov
in
and
call
leave
push
fs
push
movsb
add
xchg
pusha
push
loop
and
dec
inc
aas
outsl
addr16
inc
out
call
pop
adc
out
cmc
iret
or
std
add
jbe
int3
xor
in
sbb
int3
push
popa
pop
or
loopne
sub
xor
test
jb
lea
sub
out
ret
lock
idivl
push
jno
xor
mov
mov
and
scas
sbbb
sbb
dec
cld
xor
es
mov
inc
fs
in
aas
test
pop
sbb
mov
mov
push
push
sar
add
add
les
push
push
aaa
fwait
mov
jnp
or
jmp
clc
mov
fisttpll
xor
push
fcomp
fsubs
inc
adcb
in
cmpsb
inc
lds
insl
xchg
in
or
xor
cmc
test
xor
add
loop
cmp
and
cld
lock
pop
mov
mov
and
dec
mov
add
or
sbb
or
fiaddl
dec
pop
out
imull
clc
mov
scas
xor
int
adc
push
nop
shlb
jo
mov
fwait
or
sub
add
test
lahf
out
pop
sub
inc
push
out
fcomps
add
sbb
xchg
in
inc
cmp
inc
jne
aas
call
imul
or
call
sbb
push
add
cmp
sbb
jge
rorb
jl
stos
movsb
and
jg
fsubl
jp
push
subb
sbb
xchg
push
mov
pushaw
out
mov
pop
xchg
adc
fisttpl
or
push
repnz
js
and
es
sbb
ficomps
loop
pop
jno
fwait
mov
fstpl
loop
dec
pop
popf
jbe
popf
jbe
inc
and
ret
xchg
sub
or
push
out
sahf
outsl
sub
pop
sub
mov
push
jne
rorl
add
in
mov
gs
popa
les
pop
cmc
push
fisttps
pushf
mov
and
les
push
push
push
movsb
mov
and
pop
loope
ret
cmc
daa
mov
jbe
xchg
push
push
pop
xchg
addr16
fldl2e
in
adc
int
jne
hlt
iret
ss
or
jecxz
push
or
outsb
or
int
push
into
cwtl
addb
ja
mov
iret
popl
or
cmp
adc
inc
xor
popa
bound
das
ljmp
xchg
sub
adc
mov
or
add
xchg
call
scas
xor
mov
repz
jge
xchg
pop
inc
nop
aaa
ja
xchg
ds
lods
lods
inc
cwtl
stos
ret
sti
or
call
adc
jg
lret
pop
push
lods
jne
ret
pop
pop
pusha
les
insb
or
push
gs
push
mov
popa
int3
xorl
pop
pop
bound
in
insb
push
xchg
les
or
test
jmp
addl
test
popf
push
lret
sahf
fcmovbe
add
daa
dec
popa
mov
sbb
sub
xorb
fwait
add
and
imul
stos
mov
xchg
fsubl
in
jl
or
dec
aas
xchg
jb
aad
fmuls
es
xor
rcll
and
jne
int3
bound
pop
loope
imull
cmpsl
ret
or
xor
je
sbb
pop
test
aad
in
ljmp
push
in
mov
scas
xchg
xorl
lret
cwtl
jp,pt
mov
mov
dec
dec
scas
sub
push
cmp
or
dec
sahf
ds
rorl
cmp
int
add
add
dec
in
insb
adc
aad
cmp
int
xchg
sti
popf
push
mov
bound
add
inc
ficomps
dec
jb
mov
and
dec
push
daa
mov
pusha
pop
mov
nop
test
xchg
dec
sub
cld
mov
add
repnz
mov
fldl
out
jns
jg
je
mov
lahf
xchg
call
pop
gs
repnz
rcll
out
cli
lret
mov
loope
std
xchg
push
sbb
test
push
stc
in
add
movsl
push
lahf
iret
orl
incb
push
add
inc
mov
test
popf
test
fstps
or
xchg
mov
or
sub
inc
pusha
repz
loope
movsl
adcb
mov
out
mov
cmp
inc
lods
lret
adc
push
into
rol
jg
sub
and
cmp
in
gs
orl
out
repnz
mov
aas
popf
in
cmc
aas
scas
add
jns
cmp
ja
jecxz
push
jmp
mov
mov
dec
mov
lcall
cmpsl
mov
stos
and
inc
stos
inc
mov
push
mov
rcll
mov
and
add
testb
ljmp
xor
mov
js
jmp
push
fildll
clc
mov
data16
scas
inc
xor
cmp
and
adc
test
sbb
gs
push
fwait
imul
jbe
mov
mov
dec
inc
lea
mov
ret
scas
gs
xor
lock
leave
sbb
xor
adc
dec
adc
mov
mov
lahf
inc
push
in
xchg
lahf
rcr
lret
or
mov
cmpsb
fmull
and
push
push
mov
cmp
inc
dec
jge
push
cmp
sub
jmp
mov
pop
popa
lds
and
cmp
mov
jae
mov
test
add
cmp
stos
movsb
mov
arpl
lahf
mov
xor
pusha
xchg
out
dec
sub
shrb
push
lea
and
cmp
lret
sbb
inc
or
stos
cmp
scas
inc
mov
stos
mov
cmp
filds
push
pop
push
push
sub
push
sub
ds
imul
or
stc
les
jne
sbb
pop
aam
add
inc
cli
sub
or
dec
lds
scas
mov
fmul
xchg
mov
inc
add
sbb
cmpsl
push
add
cwtl
push
add
mov
loope
or
dec
daa
xor
xor
adc
lock
cld
movsl
mov
inc
aad
cli
std
adc
or
xor
mov
sbb
mov
adcb
xchg
adc
xchg
mov
inc
idivb
and
orl
fstpl
mov
jae
xchg
aam
dec
adc
xchg
xorb
pop
or
push
and
pop
and
or
xchg
aaa
push
fdiv
cmp
jge
or
xchg
xchg
inc
add
rorb
jmp
inc
push
cli
mov
cmp
inc
cltd
call
pop
add
or
add
adc
and
mov
loope
arpl
shll
js
xchg
movsb
mov
or
popa
adc
ret
add
add
jecxz
arpl
or
loope,pt
mov
adc
adc
lods
or
mov
ret
add
or
xchg
cli
shlb
test
xchg
push
adc
lret
test
mov
addb
shll
mov
adc
xchg
cmp
push
and
push
or
mov
stos
add
and
mov
mov
sub
dec
js
ret
xchg
shlb
inc
mov
mov
sub
les
mov
jno
push
sub
adc
add
and
or
dec
adc
sub
adc
dec
aam
repnz
add
inc
xchg
adc
xor
and
dec
cld
push
inc
int3
and
mov
push
ret
inc
mov
loop
and
and
lcall
ret
adc
fildl
inc
push
add
add
cmpsl
inc
daa
clc
daa
hlt
jne
es
daa
or
add
adc
or
sbb
adc
and
sbb
sub
and
xor
sub
cmp
xor
inc
daa
cmp
dec
daa
inc
daa
push
daa
dec
daa
pop
daa
push
daa
pusha
daa
pop
daa
push
daa
insb
daa
js
je
andb
daa
mov
test
nop
daa
mov
cwtl
daa
xchg
daa
mov
daa
movsb
daa
mov
lods
daa
mov
daa
mov
daa
shlb
int3
daa
fsubs
aam
loopne
fsubl
call
daa
in
daa
clc
daa
hlt
ja
es
daa
or
add
adc
or
sbb
adc
and
sbb
sub
and
xor
sub
cmp
xor
inc
daa
cmp
dec
daa
inc
daa
push
daa
dec
daa
pop
daa
push
daa
pusha
daa
pop
daa
push
daa
insb
daa
js
je
andb
daa
mov
test
nop
daa
mov
cwtl
daa
xchg
daa
mov
daa
movsb
daa
mov
lods
daa
mov
daa
mov
daa
shlb
int3
daa
fsubs
aam
loopne
fsubl
call
daa
in
daa
clc
daa
hlt
jns
es
daa
or
add
adc
or
sbb
adc
and
sbb
sub
and
xor
sub
cmp
xor
add
jne
jne
jne
jne
jbe
jbe
jbe
jbe
ja
ja
ja
ja
js
js
js
js
jns
jns
jns
jns
jp
jp
jp
jp
jnp
jnp
jnp
jnp
jl
jl
jl
jl
jge
jge
jge
jge
jle
jle
jle
jle
jg
jg
jg
jg
mov
fs
jo
jno
jno
jno
jno
jb
jb
jb
jb
jae
jae
jae
jae
je
je
je
je
jne
jne
jne
jne
jbe
jbe
jbe
jbe
ja
ja
ja
ja
js
js
js
js
jns
jns
jns
jns
jp
jp
jp
jp
jnp
jnp
jnp
jnp
jl
jl
jl
jl
jge
jge
jge
jge
jle
jle
jle
jle
jg
jg
jg
jg
shlb
ret
jo
jno
jno
jno
jno
jb
jb
jb
jb
jae
jae
jae
jae
je
je
je
je
jne
jne
jne
jne
jbe
jbe
jbe
jbe
ja
ja
ja
ja
js
js
js
js
jns
jns
jns
jns
jp
jp
jp
jp
jnp
jnp
jnp
jnp
jl
jl
jl
jl
jge
jge
jge
jge
jle
jle
jle
jle
jg
jg
jg
jg
lock
jo
jno
jno
jno
jno
jb
jb
jb
jb
jae
jae
jae
jae
je
je
je
je
jne
jne
jne
jne
jbe
jbe
jbe
jbe
ja
ja
ja
ja
js
js
js
js
jns
jns
jns
jns
jp
jp
jp
jp
jnp
jnp
jnp
jnp
jl
jl
jl
jl
jge
jge
jge
jge
jle
jle
jle
jle
jg
jg
jg
jg
add
fs
jmp
pushf
adc
enter
and
pushf
pusha
pushf
nop
pushf
sbbb
dec
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
bnd
sahf
test
mov
pop
lahf
sub
fcomps
sbb
jns
gs
nop
daa
jle
mov
daa
mov
leave
enter
rorl
fimull
in
leave
in
lock
out
dec
cmc
or
leave
clc
dec
testl
rorl
loop
xorb
or
xchg
andb
daa
xchg
daa
lret
leave
fs
jns
std
dec
mulb
mov
push
jae
lock
je
jg
jnp
sbb
mov
jl
jl
jle
jge
jg
jg
into
sbb
sahf
push
sahf
sub
adc
outsl
pop
rcr
ret
xchg
mov
loopne
into
adc
jno
rorl
cmp
cmp
push
ds
in
lahf
xchg
mov
pushf
popf
xchg
fdivrs
lock
dec
xchg
xor
push
jl
jnp
pop
bt
sahf
ss
aas
push
dec
fwait
mov
jmp
sub
xor
add
lods
xor
fs
and
in
in
inc
sbb
dec
ret
dec
push
ret
insb
dec
data16
std
xor
push
cld
dec
out
les
xor
je
jae
ja
je
jp
jns
jge
jl
jno
jg
cltd
fs
bnd
jbe
jns
ja
jnp
jp
test
sub
cmp
aas
leave
cmp
rcr
dec
aam
fdivl
cmp
adc
xchg
mov
aaa
and
xchg
mov
out
or
ret
or
adc
shlb
ja
jbe
jns
js
jge
jl
jno
jle
popf
clc
int3
fstps
rcrb
data16
push
cmp
in
and
inc
gs
sbb
adc
fmul
jo
pushf
movsb
pushf
push
popf
sub
cmp
imul
loope
jbe
jne
ja
ja
add
js
push
and
dec
mov
jae
jae
jbe
jbe
js
ja
jp
jns
ret
stc
cmpsb
mov
faddp
mov
leave
inc
lahf
add
iret
mov
sub
mov
movsb
in
fs
and
fs
cmc
movsb
cld
fs
in
in
push
loopne
cmp
test
inc
mov
popf
push
fidivrl
in
lret
push
or
adc
and
popf
mov
cltd
sahf
sub
pushf
daa
pop
gs
daa
mov
daa
mov
leave
leave
into
mov
dec
out
leave
cli
mov
xchg
xchg
cmpsb
ror
sarb
cmpsl
aad
dec
bound
and
xchg
xchg
adc
cmp
cmp
cmp
jmp
sub
sub
pop
add
mov
aas
sbb
xchg
mov
push
jb
inc
insb
js
ja
in
je
adc
dec
xchg
arpl
xchg
lds
mov
sti
adc
dec
cmpsl
iret
clc
popf
mov
sahf
daa
jg
pushf
les
and
and
in
insl
fmull
repz
push
setae
pushf
dec
insb
dec
into
dec
mov
scas
xor
dec
jecxz
test
jmp
es
and
mov
dec
push
dec
clc
dec
pop
dec
cmp
dec
push
mov
mov
nop
xchg
mov
rcll
dec
xchg
dec
dec
dec
in
into
dec
out
dec
movsb
adc
adc
in
add
xchg
loop
out
imul
loope
mov
fnstcw
jl
dec
ljmp
mov
enter
mov
leave
aas
fnstcw
jno
inc
cwtl
sbb
imul
mov
dec
push
daa
xlat
sbb
enter
cmp
cmp
aad
xchg
lcall
xchg
xchg
xor
lea
or
shll
jo
adc
adc
jnp
sbb
jb
jae
pop
daa
sbb
outsb
push
and
sbb
fmuls
dec
xchg
xor
dec
movsl
adc
xchg
rcll
adc
xchg
les
in
fsts
or
mov
cli
leave
aad
fisubl
int3
dec
add
push
test
popf
lock
sahf
xor
sbb
add
test
mov
xchg
rclb
xchg
fists
out
xchg
xchg
arpl
xchg
add
jns
sbb
inc
inc
push
stc
mov
cmp
push
cmp
dec
in
xor
mov
decl
mov
cmp
rclb
jb
mov
adc
mov
adc
into
xchg
ja
sbbl
and
sub
arpl
insb
popf
inc
popf
movsl
popf
test
jle
sbb
jnp
jbe
daa
in
and
dec
mov
sub
dec
daa
push
mov
popa
push
movl
subb
push
mov
mov
stc
or
or
leave
cli
dec
jae
xor
xchg
jae
scas
test
lahf
enter
push
insb
sbb
nop
jns
loopne
mov
or
or
cmp
sub
fsts
inc
lods
lahf
xchg
test
xchg
lods
adc
adc
xchg
call
faddl
mov
in
jmp
test
jmp
push
fdivs
cli
mov
add
dec
cmp
push
sahf
popa
test
xor
mov
popa
push
xchg
pop
out
xor
jl
xor
jns
imul
sbb
loope
stc
cmp
xchg
xchg
xor
cmp
sti
or
dec
push
sbb
leave
fs
std
movsb
clc
loopne
jmp
imul
mov
fs
and
add
push
sahf
mov
cwtl
dec
clc
leave
je
push
mov
jns
cmpl
jmp
cmp
and
xor
mov
mov
imul
daa
push
ror
daa
fsubs
rcrl
leave
inc
or
dec
cmpl
jecxz
inc
lea
adc
xchg
in
cmc
xchg
repnz
test
and
test
inc
ljmp
stos
out
add
sahf
push
sahf
jl
lock
fsubl
fimull
mov
sahf
cmp
js
xchg
ret
mov
cmp
out
sub
mov
jmp
leave
jmp
movsb
mov
xor
sbb
sarl
push
mov
lretw
sarb
daa
shll
push
ljmp
mov
popf
shrb
push
popf
lods
sub
cmpsb
ja
jno
push
or
mov
inc
add
jmp
fs
xchg
xlat
mov
cmp
or
sbb
mov
mov
lahf
or
and
pop
mov
pop
pop
mov
fs
add
stos
jmp
adc
aad
outsb
dec
add
sbb
in
orb
daa
pop
daa
mov
daa
int
or
clc
or
jno
nop
sahf
rcrb
lcall
xor
xchg
add
inc
dec
outsb
dec
pop
dec
lcall
dec
cld
dec
repnz
daa
push
add
sbb
push
daa
sub
push
daa
outsl
daa
mov
stos
push
lds
mov
test
xchg
mov
jmp
out
or
dec
repz
les
call
cmp
jb
cmpsl
xor
in
loope
push
test
push
daa
jl
outsl
daa
test
daa
mov
adc
in
out
les
jl
js
loope
fstpl
push
dec
ficoms
mov
cmpsb
adc
push
adc
insb
cmpsl
cli
cld
or
loop
dec
fisttpl
dec
out
lahf
add
pop
push
rorb
stos
leave
sahf
mov
jo
ror
jo
and
sbb
jg
jge
sub
addr16
mov
mov
stos
push
fnstcw
test
aas
lahf
push
lahf
or
xor
dec
popa
pop
mov
fs
jl
movsb
or
pushf
test
pop
test
dec
push
shrl
xchg
sbb
bound
and
dec
mov
jmp
jmp
or
sbb
loopne
jmp
cmp
cmp
jae
sahf
daa
andb
daa
popf
daa
test
fsubl
enter
hlt
dec
xlat
dec
lret
or
dec
loop
vpsubw
test
cmp
dec
push
or
and
adc
jmp
jbe
fcompl
cld
lock
pop
rcrb
loopne
bound
dec
movsb
call
pop
lock
sarl
mov
inc
lods
xchg
daa
dec
test
loopne
jae
sbb
jg
testb
daa
dec
scas
and
sbb
in
cmp
pop
or
lahf
shlb
packsswb
outsl
and
sbb
mov
testb
daa
lahf
lcall
dec
fwait
test
ss
inc
pushw
pushf
enter
sbb
xor
mov
daa
lods
mov
push
sti
insl
mov
dec
dec
jno
daa
inc
test
daa
inc
dec
sub
clc
or
adc
adc
mov
daa
lods
mov
sahf
cwtl
in
jns
inc
scas
mov
into
dec
daa
adc
daa
xor
mov
call
dec
push
stos
push
outsb
adc
cmp
sub
adc
mov
lods
out
dec
sbbl
aas
or
fwait
cmp
pop
inc
mov
out
test
xchg
std
xchg
or
xor
js
mov
jge
jnp
aas
aad
mov
lret
fmulp
daa
lods
daa
push
daa
in
daa
in
and
movl
gs
in
cli
movsb
cmp
cltd
repz
push
mov
xor
pop
inc
sti
inc
notb
or
jne
jb
push
arpl
dec
pop
dec
dec
dec
scas
dec
insb
dec
aad
dec
dec
or
or
cld
mov
xor
aas
pop
lret
leave
dec
xchg
aam
sarb
or
gs
clc
inc
icebp
push
test
dec
lea
or
jnp
les
mov
mov
mov
push
push
shlb
aas
and
loopne
aaa
pusha
adc
lock
orl
xchg
and
cmp
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
and
lahf
dec
inc
dec
push
mov
or
outsl
adc
cmp
cmp
mov
lret
and
add
add
test
test
add
add
add
cs
lahf
mov
mov
mov
or
iret
or
sbb
or
out
test
dec
icebp
test
test
sahf
mov
adc
mov
ljmp
scas
inc
push
cmc
mov
fsubs
lcall
xor
les
ret
or
or
or
or
or
or
addb
add
adc
ss
or
or
or
or
or
mov
push
inc
jno
dec
add
mov
in
in
cli
sbb
or
add
test
add
test
add
xchg
or
call
adc
adc
adc
adc
adc
adc
jg
pop
mov
xchg
dec
adc
dec
and
dec
xor
dec
shlb
sbb
cmp
cmp
cmpsb
adc
jbe
jne
jbe
jbe
imul
jmp
out
mov
add
test
and
sub
mov
fnstenv
lds
pop
lret
push
dec
fsubs
test
pop
mov
ret
mov
cmp
mov
outsb
movsb
jmp
sub
in
popf
inc
and
lcall
int3
imul
add
sbb
leave
fistpll
mov
loope
cmp
pop
jl
lahf
cmp
xorl
in
and
inc
dec
add
clc
je
add
sub
bnd
sub
sub
jo
incl
lea
xor
mov
inc
dec
popa
pop
addb
std
adcl
dec
sahf
add
outsl
push
pop
decb
push
sbb
cmp
int3
or
pop
add
xlat
ds
ja
testl
cmpsb
jl
sbb
add
add
lcall
hlt
adc
orl
shrb
xchg
add
cmp
call
adc
pop
mov
xchg
call
xor
pop
popf
lcall
push
aad
jg
jg
add
xchg
sarl
mov
cli
in
mov
cltd
push
jo
sub
lea
pushf
adc
dec
cmp
pop
roll
daa
int
sub
jecxz
or
or
ss
ret
xchg
xchg
ljmp
jmp
pop
pushl
jmp
pop
popw
jmp
pop
pushw
jmp
pop
pop
shr
push
jmp
pop
not
notl
and
jmp
pop
jmp
popw
jmp
pop
mov
sub
push
jmp
pop
add
jmp
mov
push
jmp
pop
movzbw
push
jmp
pop
popw
jmp
pop
popw
jmp
pop
mov
push
jmp
pop
pop
shl
push
jmp
fdecstp
jmp
pop
mov
sub
push
jmp
lods
add
dec
xor
add
ror
add
cbtw
cwtl
push
jmp
pop
pop
pop
shrd
push
pushfw
jmp
pop
mov
jmp
pop
pop
shl
push
pushfw
jmp
fisubs
jmp
fprem1
jmp
lods
add
not
inc
not
ror
add
push
jmp
pop
mov
jmp
fsubl
jmp
mov
push
jmp
mov
push
jmp
pop
mov
jmp
faddl
jmp
pop
mov
jmp
pop
mov
jmp
pop
pop
not
not
and
push
pushfw
jmp
fcos
jmp
pop
popl
jmp
pop
popl
jmp
lods
add
ror
inc
ror
xor
add
popl
jmp
pop
pop
mov
jmp
mov
push
jmp
pop
popl
jmp
pop
pop
pop
div
push
push
jmp
pop
mov
jmp
pop
pop
shr
push
pushfw
jmp
pop
add
pushfw
jmp
fildl
jmp
fmuls
jmp
pop
pushl
jmp
fptan
jmp
pop
add
pushfw
jmp
pop
popw
jmp
pop
mov
jmp
fsubs
jmp
pop
popl
jmp
mov
push
jmp
movzbl
add
dec
lea
xor
add
ror
add
push
jmp
pop
pop
mov
jmp
mov
push
jmp
fldt
jmp
fnstcw
jmp
mov
push
jmp
pop
mov
jmp
fistps
jmp
pushw
jmp
fsqrt
jmp
fnclex
jmp
mov
add
ror
inc
inc
ror
xor
add
pushl
jmp
mov
add
dec
rol
inc
not
sub
rol
add
mov
push
inc
jmp
pop
pop
mul
push
push
pushfw
jmp
pop
pop
shl
push
pushfw
jmp
notl
pop
and
pushfw
jmp
pop
pop
mov
jmp
pop
mov
push
jmp
frndint
jmp
mov
push
jmp
pop
pop
imul
push
push
pushfw
jmp
movzbl
add
dec
rol
inc
not
sub
rol
add
mov
lea
push
jmp
mov
push
jmp
fldl
jmp
fsubrs
jmp
push
jmp
fsubrl
jmp
pushf
pusha
push
mov
cld
mov
mov
add
lods
add
inc
rol
sub
ror
not
ror
inc
rol
xor
add
movzbl
lea
jmp
pop
add
jmp
fldz
jmp
pop
mov
jmp
fchs
jmp
fstps
jmp
pop
popa
popf
ret
fldlg2
jmp
flds
jmp
movzbl
add
dec
rol
inc
not
sub
rol
add
pop
add
mov
jmp
pop
pop
not
not
and
push
jmp
mov
push
jmp
pop
pushl
jmp
pop
popw
jmp
pop
not
notl
and
pushfw
jmp
pop
pop
mov
jmp
pop
mov
jmp
pop
pushw
jmp
mov
push
jmp
fildll
jmp
mov
push
jmp
lods
add
dec
rol
inc
not
sub
rol
add
pop
mov
jmp
fyl2x
jmp
pop
pop
shl
push
jmp
lods
add
not
inc
not
ror
add
cwtl
push
jmp
notl
pop
and
jmp
pop
pop
shl
push
pushfw
jmp
pop
mov
jmp
pop
mov
jmp
pop
pushl
jmp
fisubl
jmp
mov
add
dec
xor
lea
add
rol
add
pushw
jmp
pop
pop
imul
push
pushfw
jmp
pop
jmp
pop
pop
mov
jmp
pop
mov
jmp
pop
pop
mul
push
pushfw
jmp
fadds
jmp
pop
mov
push
jmp
pop
pop
idiv
push
jmp
pop
pop
shl
push
jmp
fsts
jmp
pop
popl
jmp
pop
pop
pop
idiv
push
push
jmp
pop
pop
shr
push
jmp
pop
pop
shr
push
pushfw
jmp
mov
push
jmp
fstpl
jmp
fcompl
jmp
pop
add
jmp
fprem
jmp
pop
jmp
pop
pop
div
push
jmp
fldln2
jmp
pop
pushw
jmp
fdivs
jmp
pop
mov
jmp
mov
add
dec
xor
add
rol
add
popw
lea
jmp
pop
mov
jmp
pop
pushw
jmp
pop
pushl
jmp
popw
jmp
fld1
jmp
pop
pop
pop
shld
push
pushfw
jmp
pushw
jmp
f2xm1
jmp
fcomps
jmp
fstpt
jmp
fdivl
jmp
pop
pop
shr
push
pushfw
jmp
pushw
jmp
fpatan
jmp
fldpi
jmp
ftst
jmp
fnstsw
push
jmp
mov
push
jmp
pushw
jmp
fincstp
jmp
pop
popl
jmp
pop
pushw
jmp
fistpl
jmp
pop
pop
mul
push
push
pushfw
jmp
fldcw
jmp
pop
pop
imul
push
push
pushfw
jmp
pop
mov
jmp
pop
mov
jmp
pop
pop
pop
idiv
push
push
jmp
pop
pushw
jmp
fwait
jmp
pop
mov
jmp
pop
pushl
jmp
fmull
jmp
mov
push
jmp
pop
pop
pop
div
push
push
jmp
fsin
jmp
pop
add
pushfw
jmp
fninit
jmp
pop
popw
jmp
mov
push
jmp
fistpll
jmp
fstl
jmp
lods
add
dec
xor
not
sub
not
add
push
jmp
xor
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
inc
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
mov
add
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
inc
add
inc
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
inc
add
mov
add
mov
add
mov
add
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
popa
popf
lret
fabs
jmp
mov
push
jmp
pop
pop
mov
jmp
pop
pop
shr
push
jmp
pop
mov
jmp
mov
push
jmp
pop
mov
jmp
xor
push
dec
out
xchg
mov
out
and
test
add
in
push
inc
lock
or
rcl
das
adc
movsb
stc
push
push
ss
int
in
cmpsl
push
pop
lahf
in
in
mov
jecxz
push
xor
and
sti
frstor
pop
imul
out
std
mov
icebp
arpl
fsubr
fdivr
xchg
inc
sub
push
nop
cwtl
shlb
push
mov
adc
adc
pop
adc
jb
mov
pop
loope
in
and
scas
into
mov
and
int3
lock
cltd
adc
mov
xchg
sahf
mov
mov
fcmovb
pop
push
sbb
cld
inc
push
add
inc
sti
add
dec
pop
or
mov
test
imul
cltd
cmovl
cmpsb
or
shlb
cs
jecxz
sub
sti
hlt
leave
in
adc
adc
or
and
lahf
mov
aad
daa
in
mov
js
stc
inc
gs
lock
sub
fstps
aam
out
xchg
inc
lock
mov
fdiv
stos
xchg
repnz
out
das
outsl
call
stos
push
scas
sahf
ss
test
scas
adc
adc
adc
insl
push
add
mov
jae
mov
popf
sbb
aam
shll
add
sub
pop
test
mov
dec
cmp
pop
movsb
rcll
mov
mov
sbb
jne
jecxz
mov
push
shlb
xchg
mov
cmpsl
xchg
cs
in
mov
jo
aas
jg
insb
lcall
cmc
jp
pop
mov
out
pop
lret
xchg
add
cmpsb
imul
mov
ljmp
xor
notb
out
pop
mov
out
popf
loop
add
aad
clc
sbb
stos
sub
enter
je
pop
icebp
pop
aas
cmp
mov
inc
enter
int3
add
mov
mov
js
push
outsb
dec
aam
int
or
lret
xor
mov
mov
imulb
test
ss
testl
xor
loop
lods
ljmp
mov
xchg
stos
mov
iret
in
dec
lock
push
in
test
stc
fisubrl
xchg
push
scas
cmp
cmp
and
sbb
xor
dec
in
mov
dec
iret
ret
mov
mov
or
sub
in
mov
mov
sbb
loope
pop
stos
fs
fwait
dec
ljmp
pop
fcomps
cmp
adc
hlt
and
sbb
in
jnp
outsl
adc
loopne
dec
popa
inc
in
xchg
cmpxchg
dec
ljmp
mov
das
inc
cmpsb
lods
xlat
rcrl
in
icebp
dec
mov
cld
or
sub
cld
sub
and
xchg
and
and
insl
mov
cltd
movsb
mov
repz
je
leave
and
dec
pusha
mov
xchg
repz
int3
out
rclb
jns
jb
mov
outsb
adcl
fdiv
xor
cmp
xchg
mov
inc
or
add
push
jno
xor
xor
adc
pop
cmp
lods
outsl
jae
ret
repnz
add
sti
int
adc
sahf
into
out
jns
sbb
add
inc
xor
inc
fimull
and
movsl
inc
push
shlb
mov
and
sub
add
in
lahf
test
test
ja
xchg
imul
popf
shlb
lcall
add
imul
cmp
push
stos
shll
inc
mov
push
cmp
push
rcrb
cmp
inc
push
and
addr16
xor
outsb
jmp
pop
out
and
mov
cwtl
mov
pop
or
mov
in
imul
xor
repnz
sbb
add
push
mov
mov
movsb
sub
or
pushf
jae
addl
lods
rcl
das
out
mov
push
aad
lahf
xchg
jmp
mov
jae
incl
push
ja,pt
lods
test
ja
sbb
or
add
push
cmp
mov
jge
jg
movd
mov
out
cmpsb
imul
daa
aas
mov
xchg
lcall
lea
jmp
xchg
sub
movsb
mov
sub
imul
es
push
jo
or
inc
movsb
lds
std
fidivl
insl
add
xor
int3
fcoms
sbb
aad
loope
add
iret
sbb
adc
popl
pop
incl
xchg
dec
cmp
push
cmpsl
jg
cld
outsl
add
repnz
sahf
pop
dec
rcll
stos
xor
inc
ret
mov
imul
fs
int
lods
fmull
int
push
mov
inc
adc
cltd
mov
inc
dec
cmp
lods
sbb
add
lcall
dec
pop
ds
add
stos
fsin
xchg
dec
adc
xchg
mov
inc
into
imul
shrl
js
in
pop
xchg
cmp
stos
push
dec
in
loop
or
xor
mov
pop
cwtl
mov
adc
jecxz
and
dec
pop
scas
sti
push
loope
mov
stos
inc
pusha
xchg
cwtl
pop
sti
or
cmp
and
or
mov
or
add
lahf
xlat
aas
sub
sub
lock
mov
lods
ret
es
jae
mov
sahf
inc
hlt
mov
sub
jno
mov
mov
out
dec
outsl
icebp
ds
cmpsl
lcall
mov
cmovnp
jle
fistps
and
or
fucom
add
and
mov
mov
or
add
xchg
ret
jae
sub
ret
pushl
fists
ret
or
test
or
mulb
push
or
mov
stos
aam
mov
loop
add
fsubl
sbb
add
int
sbb
lods
sub
dec
insl
mov
xlat
ret
into
cmp
mov
enter
or
sbb
cmp
scas
cmpl
cld
push
jae
push
pop
iret
filds
mov
dec
ret
add
lahf
ja
stc
push
mov
lea
dec
mov
mov
adc
sbb
dec
cmp
xor
inc
adc
mov
in
inc
jo
sbb
daa
xor
incl
inc
xorb
push
dec
jmp
pushf
stos
jl
popf
cwtl
adc
test
in
add
ffreep
cmpl
mov
mull
lock
adc
cmp
jmp
pop
imul
int
mov
xor
inc
xor
mov
push
adc
jb
xchg
loop
cmp
cmc
insl
into
ja
push
sti
ss
add
dec
pop
lods
lret
xor
scas
cmpsl
repz
push
jp
imul
dec
nop
cmpsb
adc
mov
fimuls
shlb
adc
adc
mov
iret
fdivl
sub
or
icebp
dec
dec
out
stc
dec
mov
cmp
repnz
push
push
jmp
jge
jne
shll
rcr
pop
loopne
dec
inc
xchg
cmp
ds
push
fnstcw
out
pop
das
push
hlt
or
ljmp
adc
push
addl
add
cmp
sbb
ss
dec
out
popf
nop
ljmp
pop
repz
xchg
adc
push
mov
mov
pop
je
sub
and
fiadds
ds
fidivs
dec
rorl
mov
ja
push
mov
push
shr
mov
xchg
lea
push
in
das
enter
mov
mov
pop
pop
cmp
sbb
push
dec
mov
push
inc
push
jb
sarl
test
jle
dec
push
mov
dec
inc
sbb
je
adc
push
cmp
inc
jg
xchg
and
test
shll
mov
sub
add
add
movsb
add
push
sub
cld
or
fcompl
jb
mov
jno
sub
jbe
jmp
lcall
adcb
call
mov
push
push
jbe
jne
adc
stos
add
inc
sub
pushf
inc
jge
btc
pusha
mov
mov
mov
fwait
clc
sbb
inc
pusha
loopne
repnz
enter
jne
adc
popf
lods
cmp
jge
shr
ret
dec
mov
notb
push
das
push
sbb
in
and
das
push
ja
sbb
sbb
xchg
adc
mov
jl
dec
movsb
adc
je
leave
loop
test
stos
inc
lods
or
add
ljmp
out
imulb
jmp
gs
mov
movsb
inc
mov
pop
sub
sbb
mov
lahf
jge
inc
push
pop
pop
dec
sti
mov
test
mov
mov
lods
dec
xor
jl
ja
or
aas
mov
push
mov
inc
xchg
std
lock
dec
fiaddl
push
jo
outsb
sahf
mov
add
aam
mov
sbb
sbb
inc
sti
adc
mov
mov
pop
stos
lcall
pop
addb
dec
iret
mov
mov
xchg
cmp
outsb
lret
inc
cmp
jb
cmp
das
lods
jg
push
dec
mov
in
adc
loope
mulb
fdivrl
pop
add
push
imul
ret
repnz
lods
std
iret
sub
push
xchg
mov
arpl
stc
mov
leave
imul
shll
je
mov
out
fimull
lahf
out
lcall
scas
push
add
mov
inc
addb
ficoms
repnz
call
pop
test
sti
loop
lret
in
scas
add
test
cmp
inc
out
cmp
out
pop
cmp
rcll
call
setle
mov
stos
sbb
les
outsl
mov
addr16
popf
fstpt
push
loop
loop
into
fisubs
dec
inc
or
popa
aaa
jns
scas
in
push
cmovl
jb
xchg
adc
mov
stos
pushf
int3
test
and
mov
sub
imul
pusha
bnd
iret
mov
lods
mov
into
adc
aas
xor
dec
mov
dec
or
pop
sahf
je
lret
mov
jns
lods
fcomps
aad
xchg
mov
mov
int3
cld
xor
xchg
shlb
pushf
fmulp
or
scas
rclb
xchg
adc
pusha
mov
inc
jno
dec
pop
ret
mov
out
xor
inc
xchg
xchg
fcoml
rcrb
xchg
data16
pusha
mov
out
jl
icebp
dec
mov
stos
or
mov
popa
push
push
fisttps
pop
icebp
stos
add
js
test
sbb
out
sbb
adc
cmp
mov
or
pop
or
loopne
cli
fsubs
add
sbb
dec
mov
pusha
popa
das
push
cli
pop
out
xchg
dec
pushf
push
adc
outsb
or
pop
outsl
lea
inc
arpl
xchg
iret
movlhps
mov
stos
mov
cmp
sub
mov
push
movsl
in
sub
mov
fidivrs
stc
add
and
mov
addr16
lret
cwtl
dec
or
ljmp
lret
test
xchg
xor
dec
xchg
es
push
xchg
fimuls
call
inc
leave
inc
aas
fstl
mov
jbe
sbb
insl
push
mov
fiadds
push
mov
lret
push
or
das
into
adc
pop
ficoml
out
adc
daa
dec
sub
hlt
daa
in
movsl
mov
test
test
add
cmp
push
mov
and
cmp
and
jb
rolb
cli
fsub
adc
push
test
cmp
icebp
add
sub
inc
ss
lods
push
pop
enter
test
stos
mov
pop
sbb
cli
inc
movb
cmpb
mov
ret
stos
fs
mov
fs
mov
data16
sti
xchg
rorl
push
lea
push
lods
scas
mov
add
insl
stos
lods
cmp
fsubr
adc
mov
lock
or
add
rcrb
lods
leave
or
jmp
cmpsl
in
inc
bound
loop
inc
jno
addr16
test
pop
cmp
test
bswap
push
fcmovb
or
and
or
ret
add
loopne
fidivl
xorl
div
jns
pop
xchg
xor
mov
scas
push
cmp
mulb
fistps
xor
jbe
push
adc
or
mov
and
dec
jmp
cmp
outsb
jmp
divb
out
loop
and
sbb
shll
daa
nop
dec
xchg
sahf
loopne
xchg
mov
adc
sub
mov
dec
inc
pop
mov
mov
jns
fdivrs
sbb
cmpsb
call
xchg
jo
in
pop
pushf
enter
cld
mov
lret
push
popl
dec
add
xchg
pop
pushf
pushf
push
jp
mov
or
addr16
sbb
inc
cli
bnd
out
in
popa
lahf
repnz
orb
jnp
xchg
aad
lea
dec
pop
push
cmpsb
call
and
bound
pop
popf
fstpt
sbb
ficompl
sbb
mov
xchg
stos
jb
dec
xchg
stos
jbe
scas
test
sbb
fnstsw
jg
in
mov
repz
lret
movsb
adc
nop
fnsave
lods
lret
loopne
push
jle
rorl
fistpl
push
cmp
push
lods
or
add
imul
and
test
gs
xor
sub
test
sub
or
sahf
ds
nop
mov
shll
push
insb
jp
stos
arpl
pop
jae
cs
cwtl
mov
cs
cltd
inc
jne
sub
ret
clc
push
pop
dec
xchg
in
add
addr16
xor
inc
cli
in
inc
lcall
sbb
mov
adc
jge
or
sti
sbb
mov
neg
aas
je
xor
out
pop
push
arpl
mov
dec
in
les
sub
ja
mov
add
les
mov
mov
leave
add
in
add
push
test
and
push
mov
loope
cmp
mov
mov
imul
fmull
lahf
scas
in
addr16
xor
sub
xchg
jne
cmp
popa
mov
aaa
arpl
loope
and
mov
adc
mov
dec
dec
jnp
push
mov
or
jno
add
and
mov
insl
mov
pop
xor
or
arpl
and
mov
leave
loop
loope
imul
pop
mov
mov
das
cwtl
adc
int
mov
dec
popa
xchg
test
or
push
pop
adc
xchg
push
inc
xchg
aas
mov
lock
fisttps
xchg
cltd
sbb
ss
mov
jl
dec
jnp
or
push
pop
mov
cs
fildl
xchg
and
inc
rcll
jns
xchg
and
mov
push
mov
imul
or
jle
jnp
jle
adc
inc
jg
cmp
sub
ds
dec
jl
inc
testl
mov
pop
mov
es
lock
sahf
fdivrl
imul
mov
jge
adc
mov
adc
test
cmp
sub
cltd
loopne
fisttpl
inc
xchg
das
cwtl
adc
arpl
cmpsl
aas
mov
es
jle
lcall
xlat
sub
hlt
hlt
mov
inc
test
push
lcall
ljmp
cmpsl
movsl
cmc
cmp
loope
lcall
hlt
xor
xchg
dec
dec
mov
pop
and
fs
jne
cmpsb
adc
push
push
jbe
iret
cmp
inc
mov
xchg
or
xchg
push
dec
ret
adc
cmp
js
xor
out
mov
jg
adc
jmp
xor
pop
mov
mov
test
xor
popa
scas
or
repnz
test
push
stos
mov
adc
adc
cmp
mov
insb
and
data16
lds
call
mov
add
xchg
repnz
xchg
and
and
mov
fdivrl
adc
and
inc
cmp
imul
pusha
sub
jg
out
movsl
mov
push
lret
leave
mov
out
lods
xchg
jp
das
lods
add
pop
jnp
jns
xchg
lds
pop
cmp
das
or
push
sbb
push
pushf
push
xchg
hlt
mov
adc
out
lcall
cmpl
negl
insl
dec
xor
cmp
adc
push
mov
xchg
sub
out
inc
fistps
mov
int3
movsl
sub
or
into
mov
mov
or
xchg
sarl
mov
push
les
outsl
mov
int
repnz
movsb
js
cli
sbb
pop
add
int3
pop
or
jne
pop
or
daa
jno
scas
dec
aaa
mov
dec
outsl
clc
out
mov
hlt
test
pop
and
pusha
jp
sbb
xor
fbld
mov
add
iret
adc
and
shlb
aas
pop
scas
sub
sub
fnstsw
loope
cmpsb
xor
js
std
popa
jp
xchg
jp
imul
cmp
add
and
gs
fwait
je
mov
out
pusha
loop
das
andb
cmp
ja
add
icebp
lret
fcmovnbe
iret
push
jmp
inc
or
jmp
push
mov
fwait
sbb
jae
fdivrl
outsl
xor
sbb
sub
enter
sarb
out
out
scas
test
lret
inc
movl
out
jno
xlat
jle
cld
push
xchg
out
push
push
xchg
js
ljmp
imul
push
test
stos
call
pop
loopne
test
mov
scas
sbb
ja
dec
loope
dec
and
cs
jl
mov
add
inc
dec
push
dec
mov
ss
aad
insb
imul
xchg
dec
dec
push
and
xor
dec
movsl
aad
leave
jnp
bound
push
jmp
outsl
fiadds
mov
mov
popa
or
and
jae
lods
in
or
out
ljmp
add
std
cmovg
in
fld
cmc
insl
outsb
mov
xor
call
or
shlb
inc
xchg
mov
xor
sbb
cmp
fisubrs
scas
adc
dec
fstpl
push
data16
cwtl
enter
movsb
popf
pop
push
pop
inc
test
jns
and
adc
rcrl
es
pop
aas
divb
sahf
jle
mov
out
mov
push
rorl
fidivs
cmpb
out
push
ss
mov
or
push
mov
pop
push
cmp
mov
shlb
arpl
xchg
lahf
fst
xor
test
aad
mov
push
aas
shlb
sub
or
mov
andb
or
mov
xor
jne
repz
int3
dec
or
mov
add
rorl
inc
cmc
jnp
das
and
test
push
arpl
movsb
lahf
xor
aam
mov
call
mov
xchg
mov
iret
add
dec
push
dec
int
and
inc
or
jo
hlt
push
adc
mov
enter
in
mov
ss
aam
xorl
cmp
and
push
or
sbb
jg
js
xchg
lea
aad
xchg
or
outsb
icebp
in
inc
jne
imul
pop
in
stos
popf
idiv
out
mov
scas
inc
inc
inc
ds
rcrl
movsl
xor
lahf
jne
cld
sub
aaa
push
test
adc
inc
and
test
dec
daa
dec
adc
imul
pop
jl
bound
stc
aaa
in
push
outsb
in
cmp
push
mov
jmp
test
xlat
mov
xlat
pusha
ret
lods
pushl
js
push
cs
or
sbb
arpl
jg
popf
shl
daa
mov
mov
adc
mov
popf
mov
fstl
mov
push
bnd
pop
pop
bound
and
stc
cli
pop
or
mov
jmp
test
jle
xor
icebp
sub
lahf
mov
int
cmovg
xchg
or
scas
inc
lds
jno
int3
test
inc
cmp
icebp
ja
out
fbstp
xor
mov
push
pop
xorl
and
sbb
mov
leave
jno
add
in
mov
fidivs
adc
testl
mov
imul
xchg
sub
or
pusha
std
fisttps
or
mov
cmp
push
clc
xchg
mov
sub
mov
mov
and
fisubrs
push
push
mov
ljmp
pop
lea
ja
push
adc
cmp
es
jge
xchg
jmp
rol
mov
jae
loope
mov
mov
mov
add
add
addl
into
dec
push
push
dec
inc
xlat
pop
fdivl
lds
pop
dec
cmp
loope
dec
orb
cmpsb
cmc
jp
in
push
icebp
lods
aas
int
imul
aad
into
sbbl
test
push
mov
in
cli
loopne
shll
iret
jo
fmuls
add
scas
cmp
mov
stc
lods
test
inc
cmp
test
pop
pop
lds
mov
jecxz
push
sar
mov
mov
enter
xor
test
push
adc
jb
dec
xchg
enter
cmpl
jb
loopne
cmp
movsl
mov
and
fdivr
rclb
das
sbb
or
mov
popf
adc
sahf
xor
pop
or
lock
int3
testb
xor
out
jb
push
inc
xor
int3
or
das
jp
ds
push
or
test
mov
out
pop
fcomps
and
rcl
add
dec
xor
call
popa
xchg
in
out
test
mov
or
pusha
xchg
shll
dec
out
pushf
dec
ret
cmpsb
es
dec
xchg
push
shr
dec
sub
jl
das
mov
mov
mov
add
dec
aaa
mov
out
mov
push
or
or
stc
leave
insl
sub
adc
repz
push
inc
mov
shlb
sbb
sahf
jb
xor
in
cmc
inc
lock
arpl
push
add
jmp
popf
hlt
mov
rcl
ljmp
mov
mov
cmpsl
sub
pop
imul
sub
sbb
out
dec
lret
push
dec
sub
push
mov
or
xchg
or
mov
mov
aaa
pop
or
movsl
loopne
lahf
jne
mov
mov
mov
push
fstl
test
cmp
push
lods
out
mov
int
push
or
cwtl
lods
je
sub
mov
in
inc
dec
add
inc
or
and
jle
subb
imul
adc
cmp
jl
mov
add
mov
daa
push
push
dec
frstor
mov
cwtl
insl
bound
imul
pop
sti
sub
es
mov
cli
mov
sub
push
rorb
lret
adc
adc
lock
shrl
test
mov
dec
add
or
jnp
xor
cmpl
inc
inc
imul
and
fs
add
popa
xchg
mov
xor
repz
stos
fcmovnbe
iret
and
push
adc
pop
pop
push
mov
adc
and
bound
lret
rcl
aaa
cmp
xchg
adc
pop
fs
add
mov
inc
add
xchg
outsb
addr16
hlt
ja
lea
loop
or
add
mov
cwtl
or
xor
shrl
jp
cmp
fisttpl
dec
fcompl
mov
test
out
out
jne
flds
sub
repnz
xor
mov
cmp
loop
aad
stc
mov
nop
and
dec
fisttpll
or
imul
add
aas
sub
dec
mov
jmp
mov
push
xchg
inc
enter
clc
inc
mov
mov
iret
sub
mov
sub
dec
pop
fisubs
push
dec
inc
test
cmp
in
out
inc
stc
jnp
xchg
ja
jb
in
jno
idivl
mov
adc
aas
sbb
call
and
jl
sbb
or
mov
js
adc
cltd
lcall
clc
out
movsb
loop
jge
cmpsb
mov
mov
je
test
outsb
daa
dec
arpl
lods
cltd
leave
ret
stos
test
jae
into
mov
or
js
push
xor
out
loop
movsl
sahf
cltd
dec
fcmovbe
fs
mov
repz
leave
cs
fs
out
cmc
into
xor
jnp
out
pop
xchg
mov
mov
add
xchg
pushf
push
aam
push
mov
add
fstps
push
xor
cld
loop
movsl
sahf
cltd
pop
scas
xor
inc
out
push
add
out
dec
dec
add
ss
inc
aas
mov
jnp
add
sahf
mov
es
inc
jae
dec
inc
inc
aam
fldcw
xchg
mov
aaa
sahf
add
sub
xor
aaa
out
lahf
mov
push
lret
push
and
xorl
and
dec
aas
cltd
xlat
sbb
xor
stos
inc
aad
and
cmp
ret
xchg
movsl
daa
movsb
pusha
jnp
xor
outsl
frstor
ret
inc
cld
loope
or
lea
pushf
mov
jns
push
mov
fmul
je
pushw
xor
addr16
mov
out
stc
xor
les
lods
dec
xchg
clc
mov
lock
pop
mov
in
jo
pushf
ds
rolb
and
mov
add
pop
sbb
jne
test
daa
xchg
xchg
stos
addr16
stos
dec
loop
pop
int3
ja
nop
aad
add
push
in
fdiv
xor
adc
adc
xor
out
lock
lret
dec
sbb
in
xor
mov
xorl
insl
shlb
cmp
push
sub
pushf
jmp
popf
leave
lods
mov
test
hlt
push
lods
sbb
incl
out
push
aad
push
jp
and
sti
push
test
fdivrl
push
add
test
add
lret
cmp
int3
es
scas
xchg
scas
mov
mov
mov
dec
popf
stos
xorb
pop
mov
bound
mov
jmp
or
pop
xchg
ja
xchg
push
inc
mov
iret
shufps
cmp
and
cmp
divl
lods
sub
cli
mov
ret
cmpsl
mov
rcll
movnti
add
and
imul
add
cmp
xchg
stc
cmc
pusha
int
outsl
push
lock
dec
jnp
test
js
hlt
cmp
push
dec
test
inc
xor
lds
lock
out
sub
sbb
ss
pop
xchg
xor
nop
call
jae
mov
mov
xor
cltd
stc
push
or
mov
xchg
xchg
jp
ror
outsl
inc
lcall
in
mov
inc
imul
pusha
mov
ret
mov
add
or
dec
jmp
or
and
mov
jbe
loopne
push
in
sarl
aad
or
push
xchg
inc
int
or
test
sub
sete
cli
mov
and
gs
pop
stos
push
cmc
int3
pusha
aas
mov
aaa
scas
mov
or
jmp
sti
out
shl
lds
jmp
pop
cmp
repz
push
adc
sub
jmp
sbb
nop
inc
cltd
cmpsb
pop
fwait
pushf
ret
nop
aas
pusha
inc
js
inc
cmp
mov
inc
jp
movl
js
sub
sarb
mov
and
int3
mov
int
popa
or
addr16
nop
or
paddsw
fwait
push
insl
out
imul
stc
rorb
sysenter
pusha
and
iret
lcall
mov
int3
dec
xor
sbb
int3
xchg
sar
test
iret
sub
cmp
stos
int
lods
shrl
lods
inc
ret
jns
mov
inc
les
jae
rolb
into
jo
mov
dec
int
fsubr
sub
lock
sub
aam
mov
dec
dec
enter
push
push
pop
pop
jecxz
jp
cs
and
add
mov
sbb
mov
cmc
ja
lea
push
hlt
movsl
jns
mov
push
in
dec
out
popf
sahf
and
popf
mov
test
and
xchg
inc
mov
jmp
inc
je
push
adc
jo
inc
ja
mov
ss
mov
js
aaa
sbb
fcmovnu
mov
sbb
imul
cwtl
sub
push
jge
je
ljmp
loope
out
lcall
negb
nop
and
dec
fdivl
aam
lock
cmp
sbb
jne
sbb
adc
daa
test
mov
ja
sbb
hlt
dec
leave
loope
inc
mov
fs
xchg
push
movaps
sahf
arpl
add
push
int
or
aad
inc
cmp
insl
test
push
in
fimull
popf
xchg
inc
shr
cmpsb
cmpsb
ja
sub
test
ljmp
and
cmpsl
adc
mov
idivl
xchg
and
scas
aas
lods
xor
xchg
xor
js
cltd
mov
notl
dec
xchg
lcall
cmp
inc
lods
cmpsb
sbb
imul
js
mov
jge
mov
sbb
int
push
xlat
inc
cmp
popf
andb
mov
push
push
sbb
ds
pop
mov
sub
out
pop
xchg
adc
and
lret
sub
jnp
xchg
sbb
imul
sbb
xlat
inc
imul
std
ds
movq
imul
gs
lds
ret
std
int3
xchg
loopne
sub
mov
insb
aaa
jno
adc
lcall
popf
sbb
je
jecxz
fstpt
imul
xor
cmp
mov
pop
ljmp
pop
xor
test
add
add
or
cmp
mov
jle
sbb
fldl
inc
jns
rcl
sbb
and
jg
xchg
add
call
mov
cmp
add
xchg
sub
mov
enter
movsl
jle
out
add
dec
into
imul
outsb
andl
mov
filds
push
pop
clc
adc
outsl
mov
dec
push
mov
ljmp
dec
push
int
pop
aas
push
leave
test
mov
mov
lds
adc
sub
shll
push
mov
xor
lods
xor
fucomi
in
stos
fdivrl
ret
fistpll
or
inc
jae
adc
loop
jbe
mov
lcall
jg
adc
mov
lods
lock
adcl
clc
mov
jg
or
movsb
loope
jns
loopne
movsb
sbbl
nop
push
mov
loopne
mov
dec
sub
pop
dec
rorl
outsl
out
imul
fwait
jo
loope
cmp
es
push
sahf
jp
in
or
sub
addr16
test
mov
xor
frstor
or
popa
jae
mov
pusha
cmpl
lret
adc
lahf
cld
sub
lods
shrb
and
mov
inc
push
lods
and
add
cmpsl
lea
xor
jnp
cmp
cwtl
ret
dec
test
mov
ja
jno
add
iret
fnstsw
cmp
test
stc
outsb
sbb
hlt
mov
dec
clc
mov
mov
test
pop
adc
je
shrl
cltd
xor
repz
add
ficoms
outsb
das
lods
xchg
shll
mov
sub
pop
mov
pop
out
std
orb
ja
pusha
and
ja,pn
jnp
arpl
jb
inc
mov
push
faddl
or
arpl
push
hlt
sarb
inc
xchg
cltd
jecxz
loopne
into
and
fldenv
push
pop
dec
hlt
mov
jbe
lock
shrl
push
loopne
pushf
add
add
add
pop
push
jno
adc
or
pop
dec
in
cld
inc
mov
je
vcvtsd2si
notb
adc
mov
pop
out
leave
bound
gs
pop
mov
fs
inc
xor
jae
lret
fstl
fidivrs
lds
cld
jb
or
ret
pushf
je
mov
ja
enter
pop
add
rcll
jae
xor
mov
andb
insl
pop
outsb
aaa
loope
jge
cmp
cld
movsb
insl
mov
fdivr
ja
scas
pushl
dec
scas
test
inc
test
push
inc
cmpsl
fwait
andl
fcmovu
fnstcw
push
jmp
fidivl
sbb
xchg
out
xlat
lcall
pop
fldcw
lods
push
sbb
lds
lcall
aaa
jge
das
xchg
inc
cltd
push
aaa
jmp
pop
inc
or
fdivs
push
enter
out
int
arpl
push
dec
fmull
dec
ret
inc
into
xor
rolb
xchg
and
mov
adc
sub
scas
dec
mov
cmc
mov
lret
add
mov
movq
adc
lods
cld
jecxz
add
mov
push
mov
stos
mov
sub
mov
or
les
xchg
gs
add
cmpb
xchg
adc
into
mov
cltd
jg
inc
cmp
mov
cmpsb
jmp
push
mov
cmp
or
lret
push
cmp
dec
sub
int
movzwl
adc
clc
sbb
out
sbb
or
xchg
loopne
mov
cmp
cmc
rcr
xor
mov
cmpsb
pop
mov
outsl
lds
aad
dec
inc
cmp
jmp
and
or
adc
rorb
jo
mov
outsl
fs
ja
fldt
fmul
sti
jl
cmp
pop
pop
or
mov
adc
fidivrl
aam
movsl
dec
push
xor
popa
add
xchg
adc
rcrb
ret
pop
and
push
ret
adc
sahf
movsb
sbb
xchg
mov
and
cli
pop
sub
scas
outsb
lods
enter
in
mov
mov
inc
xor
aas
ljmp
rcl
ja
or
les
add
mov
xchg
das
mov
dec
inc
out
jecxz
call
stos
cld
in
loop
sahf
dec
fstp
ret
sbb
jmp
xor
fisubs
loopne
xchg
xchg
mov
scas
mov
inc
lods
movsb
test
jmp
cmpsl
pushf
js
out
adc
rol
push
cmpb
sbb
popf
xchg
pop
dec
or
pop
and
pop
xchg
jae
lods
fsubrs
outsb
or
sub
subb
mov
ss
dec
cmp
inc
out
adc
shrl
in
outsb
or
jge
pop
push
push
stc
imul
or
mov
scas
out
sbb
jl
movsb
test
mov
loop
aad
mov
pop
push
test
imul
adc
mov
fcmovnb
imul
ret
jbe
jl
clc
ret
cmp
push
pop
fstpl
xor
push
call
test
aas
fcompl
jo
aam
nop
adc
xor
icebp
aaa
sub
pop
mov
lods
jecxz
mov
fs
inc
mov
dec
fistpl
pop
lret
xor
adc
repz
mov
xor
xor
aam
mov
inc
dec
fwait
cmc
idiv
ja
cmpsl
mov
icebp
jae
divl
add
mov
add
inc
sbb
inc
jmp
dec
mov
bound
mov
mov
push
cmpb
mov
icebp
and
repz
clc
mov
xlat
xor
push
push
adc
out
sbb
pop
loopne
jno
adc
ret
outsb
roll
aam
push
mov
pop
or
pusha
mov
adc
sub
sub
pusha
daa
sbb
das
das
adc
adc
xchg
aam
mov
out
adc
and
iret
push
dec
adc
enter
cmp
addr16
ficomps
mov
jnp
ja
adc
int3
mov
jbe
jl
test
adc
mov
shrl
add
mov
int3
rcrl
fcompl
cmpl
jns
gs
sbb
mov
pop
popa
mov
push
sbb
hlt
loop
add
loop
fstpt
insl
clc
out
cmp
cmp
pop
jle
cmp
push
pop
push
and
mov
lea
out
loopne
sub
cmp
daa
push
daa
jno
nop
in
dec
inc
xor
mov
gs
dec
mov
inc
mov
cmp
jg
and
cmp
mov
stos
xor
inc
inc
rol
js
jae
xor
in
and
push
push
mov
jmp
js
stos
mov
aad
add
add
fwait
subl
inc
add
push
dec
iret
inc
cmpl
sbb
repnz
and
adc
lock
cmc
fisubs
gs
adc
aad
cwtl
jnp
scas
cmp
push
push
mov
xchg
insl
xchg
pop
and
lea
jge
dec
dec
mov
mov
inc
data16
inc
jnp
xchg
daa
mov
pop
cmp
pop
or
cwtl
push
xlat
lahf
ljmp
cmpsb
je
pop
stos
inc
jne
fsubs
adc
out
jg
pop
sti
arpl
scas
dec
mov
or
xor
dec
mov
sub
adc
xchg
daa
add
out
out
mov
sti
scas
loop
arpl
jae
mulb
cmpsb
cltd
jo
loopne
xorb
shll
nop
xor
push
ret
add
fdiv
mov
and
sti
int3
lahf
cmp
fidivrl
scas
xchg
xchg
in
mov
mov
lock
pop
stc
ret
in
fistps
push
xchg
inc
sub
loop
mov
lahf
pop
mov
fdivrp
adc
xchg
sub
in
ljmp
mov
or
outsb
loop
and
test
or
nop
movsl
mov
dec
ret
mov
test
cmp
fs
rcll
insl
push
mov
fwait
cld
loop
imul
jno
shl
inc
stos
inc
lahf
push
mov
testl
inc
jno
enterw
push
pop
in
push
add
sbb
jbe
xor
bound
adc
das
sbb
in
scas
or
fs
inc
decb
out
out
notl
fbstp
mov
or
popf
adc
icebp
pop
add
sbb
xorb
or
fdivrs
xchg
das
and
sbb
pop
pop
push
cmp
xor
les
add
test
sarb
shrb
loopne
xchg
arpl
out
mov
and
dec
outsl
mov
and
insl
mov
sub
dec
cmpsb
cmp
rol
xor
cmp
clc
jmp
add
mov
rcrb
push
xor
mov
add
pop
and
lods
loope
jmp
sub
sub
mov
mov
repz
inc
bound
mov
aaa
and
gs
push
jmp
rdtsc
gs
xor
ss
leave
stc
xchg
insb
mov
mov
divb
outsb
outsl
and
out
jb
fidivrs
imul
shll
aad
stc
sbb
sbb
add
mov
rcll
in
in
push
dec
pop
xchg
cltd
into
push
outsl
dec
loopne
fimuls
xchg
outsb
lods
arpl
pushf
xor
imul
sub
in
out
sub
push
sub
fcomps
mov
adc
jp
in
andb
mov
mov
or
xchg
jnp
xlat
xor
je
jmp
push
imul
subl
ljmp
xor
sbb
push
nop
in
sbb
dec
push
inc
and
enter
mov
testl
mov
mov
mov
xchg
sub
add
inc
icebp
dec
dec
inc
loopne
xor
in
mov
push
ljmp
adc
lods
xchg
and
xor
adc
call
fstpt
push
cwtl
jb
or
fcmovu
dec
repnz
sub
test
popf
mov
incb
cmp
add
in
mov
mov
mov
testl
jmp
inc
add
leave
mov
mov
sbb
jo
aaa
cmp
xor
and
insl
movsl
data16
and
xchg
out
test
dec
scas
inc
push
pop
addl
push
add
adc
push
xchg
ja
rolb
ds
rcll
cli
nop
scas
inc
mov
mov
int3
cld
and
pop
pop
mov
sub
andb
mov
outsb
mov
push
lods
imul
insb
stos
inc
pusha
idiv
inc
mov
sarb
mov
mov
outsb
scas
rorl
inc
popa
andl
les
mov
mov
push
pop
popf
mov
movsl
roll
xchg
mov
ret
loope
pop
std
cmp
mov
lock
dec
pop
mov
dec
pop
cmc
mov
addl
fs
mull
push
cmpsl
outsb
nop
scas
inc
mov
inc
mov
cmovp
fdiv
ja
cltd
or
pop
icebp
shr
in
inc
dec
jecxz
push
add
inc
sbb
ljmp
sti
push
jmp
mov
in
lahf
arpl
addr16
out
dec
dec
mov
cmp
push
in
ja
mov
push
lock
sahf
and
jle
sbb
sti
mov
push
outsl
or
fwait
nop
mov
movsl
lods
dec
jp
mov
sbb
xlat
add
aad
call
xor
and
in
push
movsb
loop
outsl
or
shrl
sub
movntps
adc
int
pop
push
aam
aaa
imul
push
in
add
out
jbe
andl
sti
into
js
cmp
pop
lds
cmp
notb
sbb
jge
es
xchg
jmp
hlt
hlt
test
pop
or
xchg
mov
aam
fnsave
sub
fcom
xor
xchg
outsb
mov
mov
aam
mov
xor
fstl
mov
outsb
popa
mov
cmp
inc
mov
icebp
cli
mov
call
push
xor
mov
dec
testb
dec
dec
cmp
push
lret
dec
test
lahf
pop
xor
adc
stos
jo
mov
cli
popf
sub
outsb
sbb
jl
xor
mov
test
imul
ret
aas
mov
cmp
jmp
divl
aas
or
xor
mov
adc
fisttpl
jne
xchg
test
outsl
jg
dec
lds
mov
dec
cs
inc
dec
lods
fistpll
rcrb
dec
jo
adc
inc
mov
loop
mov
or
sbb
sbb
xor
out
orb
and
or
in
stc
mov
sti
sbb
adc
dec
fs
sbb
cltd
sti
mov
sbb
in
nop
rclb
imul
add
push
pusha
xor
insb
xlat
lret
add
cmp
out
rolb
xchg
push
xor
sbb
pushf
test
xrelease
sub
ja
ja
ret
addb
icebp
cmpl
mov
lcall
ja
pop
daa
into
notb
cwtl
test
out
xchg
imul
xor
jno
push
insl
pop
bound
xchg
roll
pop
insb
shl
mov
jp
xchg
fnsave
lahf
stc
dec
cltd
or
cmpsw
shrl
or
daa
mov
orl
pusha
stc
push
pop
insb
mov
arpl
and
cld
xchg
shll
mov
adc
sub
aad
pop
aaa
scas
push
pop
mov
pop
mov
int3
adc
mov
jno
xor
xor
ds
lea
cmp
jp
pop
lock
sub
scas
mov
jge
mov
xchg
std
xchg
jo
in
push
lds
sahf
xor
mov
lcall
sbbb
fstpt
dec
and
lcall
mov
loope
stc
push
push
jnp
inc
push
cmp
jmp
repnz
clc
add
inc
fsubr
sub
aam
das
pusha
fiadds
and
add
and
lds
pop
mov
and
push
inc
mov
ds
mov
pop
push
jbe
xchg
scas
stc
in
inc
inc
mov
fnstcw
fdivs
dec
outsl
xchg
jecxz
test
arpl
adc
xchg
and
filds
negb
das
insl
stos
lods
jb
call
jo
test
shlb
sub
mulb
add
mov
mov
adc
push
add
sub
and
sbb
repnz
adc
add
iret
ja
ja
mov
mov
add
sub
or
in
push
cmp
stos
enter
inc
inc
inc
jge
mov
sub
or
nop
xlat
mov
push
enter
addr16
scas
push
xchg
loope
or
popa
adc
jae
in
inc
in
andl
inc
jle
ljmp
nop
adc
cld
jecxz
fdivrl
add
add
add
pop
cmp
gs
in
xchg
aad
xlat
xor
push
cli
xchg
jne
mull
shrb
push
mov
push
dec
insb
jne
pop
xor
mov
sarl
mov
insb
add
sbb
mov
jae
jecxz
push
insl
std
or
pop
mov
cmp
add
push
add
aad
jle
out
cmp
push
inc
test
xor
or
adc
rcrl
push
in
adc
lret
push
push
out
push
mov
mov
add
aam
loopne
mov
fistl
or
ret
sbb
and
push
sbbb
push
and
jmp
sub
iretw
push
sbb
out
push
or
adc
xor
ds
cmp
jle
pop
pop
pop
mov
pop
cmp
pop
pcmpeqb
push
pushf
stos
iret
cmp
out
std
pop
sub
iret
xchg
in
add
hlt
push
xor
pop
movsb
sbb
push
sarb
fcoml
dec
leave
sahf
aas
adc
int3
arpl
cmpsb
loopne
sbb
repz
sub
jmp
adc
pop
jle
rcll
push
xchg
call
decl
mov
add
mov
sarb
inc
add
jo
pop
fisubl
fdivl
pop
pop
cld
mov
insb
testl
jg
sarb
mov
imul
or
popa
inc
and
lods
fs
pop
das
or
lcall
ret
imul
or
inc
jnp
xlat
in
scas
xchg
sub
mov
ret
test
jmp
andb
or
inc
mov
pop
outsb
cli
movsl
aam
je
aas
sbb
sti
fnstcw
jl
lds
cmpsb
mov
out
es
jne
loope
sub
rorl
sub
fwait
push
xor
mov
out
add
sbb
in
adc
pop
daa
lock
sub
fld
xchg
std
xchg
fcomp
movsl
in
divl
jb
cmp
mov
mov
mov
sbb
xor
add
mov
sbb
out
loopne
cwtl
mov
adc
mov
pusha
jge
out
sbbl
cmp
lea
shrb
test
std
js
out
imul
mov
or
mov
push
rcrb
ss
inc
sub
inc
add
cmp
push
aas
nop
negl
adc
leave
sbb
jmp
pop
cli
mov
rcl
sub
ljmp
aaa
in
sbb
xchg
aas
outsl
mov
rorl
rcll
lds
shl
rcrb
mov
xor
out
push
mov
or
push
ja
fxch
mov
lods
rorl
rolb
jp
stos
cmpb
push
lret
cld
adc
mov
shlb
mov
mov
insl
out
scas
mov
js
std
pop
mov
dec
lea
jno
imul
or
pop
hlt
and
cmp
das
or
sbbb
sub
inc
mov
add
ret
pop
mov
inc
mov
inc
gs
xchg
testb
outsl
mov
stos
add
rorl
mov
push
insl
stos
mov
arpl
ljmp
dec
aam
inc
pushf
xor
insb
push
lods
lods
xor
sub
popa
push
js
in
dec
cmpsb
cmpsl
mov
rcrl
jg
cmc
or
in
psubsw
push
je
sub
test
dec
scas
inc
sbb
inc
jno
fsubrs
pop
push
mov
push
out
cmp
mov
sub
mov
jmp
xrelease
mov
fsubrp
sub
or
je
mov
stos
ret
push
mov
or
jecxz
and
ja
push
jns
scas
jp
cltd
aas
dec
and
ret
sti
pop
xchg
sbbb
loopne
cmp
outsl
fwait
xor
loop
lret
shl
and
and
adc
sbb
cmp
rcll
ljmp
mov
test
daa
leave
mov
jle
scas
popa
adc
mov
out
gs
cmp
insl
enter
dec
sub
popf
dec
mov
fmull
iret
icebp
and
jmp
outsl
outsb
iret
push
daa
insl
add
sti
cmp
mov
push
mov
jns
pop
xor
xchg
imul
cltd
leave
mov
xchg
test
pop
aad
popf
int
dec
dec
notb
sub
push
out
lret
cmc
into
push
outsb
adc
sub
lods
fnsave
jle
cmpsl
add
dec
lea
test
sub
xor
mov
sbb
inc
xchg
pop
mov
andl
rcl
enter
inc
mov
gs
pop
in
sbb
mov
add
cmp
movsl
pop
xchg
mov
call
roll
sbb
shll
das
and
fistpl
xor
jmp
xlat
xor
sub
xchg
hlt
and
into
movsl
xor
mov
xlat
push
or
jbe
add
out
dec
outsl
xor
pop
xchg
in
push
sub
mov
xchg
insb
hlt
or
out
cld
or
adc
lds
fs
sarl
or
sbbb
cs
mov
sub
lahf
or
add
sbb
aad
pop
xorl
add
fisttps
fimull
loop
cmpsl
sbb
xor
lret
stos
dec
mov
inc
mov
lods
push
pop
pop
cmpsb
lahf
mov
pop
rcrl
icebp
rorl
xor
push
cs
out
aad
mov
repz
in
push
mov
shlb
in
jae
jnp
lock
pushf
jno
mov
arpl
cmp
gs
fistps
dec
inc
shl
addl
icebp
in
aas
sbb
pop
cwtl
mov
mov
dec
cmp
sub
nop
gs
and
push
adc
pop
mov
cmp
inc
addr16
jl
cltd
cli
cmc
ljmp
inc
sbb
mov
aam
sarb
nop
imul
in
and
inc
mov
add
js
sub
leave
cmpsl
mov
sub
into
shl
jp
sbb
mov
fnclex
jo
cs
clc
xor
add
dec
and
into
xchg
sub
out
inc
add
xchg
hlt
add
fistps
repz
aas
xchg
aas
adc
xor
adc
dec
and
fwait
pop
stc
push
jbe
and
int
sub
lods
pop
or
jl
mov
fsubs
imul
insl
out
and
add
aad
shlb
call
dec
mov
aaa
fdivs
stos
xlat
mov
inc
movsl
addl
jge
push
sub
lea
sbb
push
mov
push
mov
clc
lcall
popf
sbbl
jne
int3
lret
lods
jmp
bound
rdmsr
xchg
je
das
add
jmp
xchg
sar
aad
lods
fnsave
shll
xchg
adc
and
pushw
out
add
stos
sbb
mov
dec
mov
int
push
or
and
push
mov
pop
xor
pushf
je
das
rorb
pop
in
in
jl
xchg
push
mov
xchg
mov
mov
ss
mov
cmp
push
or
xchg
adc
mov
outsl
xchg
xor
movsl
popa
ret
popf
lret
jle
xchg
aam
cld
mov
jmp
ljmp
scas
adc
jne
mov
sub
mov
mov
je
adc
fs
lock
jmp
sbb
inc
sub
fistpl
sbb
mov
sbb
fld
mov
xchg
pop
out
nop
loope
sbb
mov
into
das
or
rcrl
jmp
mov
jne
cmpsl
adc
popa
xchg
imul
adc
mov
stos
lret
insb
fs
es
xor
iret
call
cli
dec
cmp
imul
pop
dec
jnp
jbe
mov
shll
ss
and
add
or
outsb
inc
jmp
jae
jg
adc
push
push
jne
sbb
rcll
loope
std
data16
std
sarl
mov
xchg
cmc
in
int
aam
pusha
nop
push
mov
push
shlb
sub
mov
mov
arpl
xchg
mov
shlb
movups
addb
inc
cmp
push
outsl
push
sub
pusha
add
push
js
push
mov
cmp
dec
and
outsl
inc
push
lods
cmpl
into
push
push
insl
xor
pop
jl
cmp
lods
xchg
in
sub
and
xlat
lods
mov
lds
mov
sub
shrl
inc
push
cmp
cmp
and
push
jg
dec
sub
dec
test
mov
push
lods
add
adc
dec
sbb
daa
in
and
push
mov
inc
mov
pusha
sahf
mov
test
xor
fdiv
or
push
jo
xchg
lret
pusha
xchg
sahf
clc
mov
loopne
xchg
push
or
or
mov
mov
pop
sub
stos
adcl
in
mov
adc
mov
inc
fcmovb
bnd
jecxz
lds
or
pop
xor
lcall
insb
pop
insl
or
push
es
neg
and
pusha
push
xor
sarl
rol
outsb
pop
push
push
loope
leave
mov
lcall
cmpl
ss
frstor
testb
sbb
jno
jmp
sub
pop
fnstsw
adcb
push
cli
cmp
push
sbb
mov
hlt
jmp
xchg
adc
add
jae
lret
push
jge
add
test
push
neg
jge
cli
or
fists
add
mov
rcrl
push
pop
sub
ret
ror
lcall
xor
jmp
test
or
ds
into
jo
dec
iret
ret
ret
aaa
jmp
inc
mov
ss
jle
and
push
push
ja
and
sub
push
outsb
scas
cs
lret
adc
imul
aad
push
shl
fsubrs
jl
mov
push
loop
pop
ficompl
shlb
pop
mov
std
adc
push
jae
xchg
je
ror
jb
jge
mov
push
loope
pushf
pop
test
sub
dec
adc
aas
es
jecxz
leave
cmp
xchg
popa
pop
xlat
mov
mov
add
aam
jmp
aam
cmpsl
mov
outsl
shrb
sbb
ss
nop
jecxz
xor
mov
sub
add
push
push
jmp
lock
gs
and
push
mov
mov
outsb
jmp
xchg
push
hlt
cmc
cmp
loope
divb
cmp
jno
jne
rcrb
andl
xor
lret
mov
mov
cltd
inc
hlt
cmc
ljmp
repz
mov
xor
sub
decb
mov
inc
mov
xchg
mov
cmp
sub
insl
nop
and
movsb
mov
inc
scas
lock
xchg
fnstcw
bound
repz
dec
repnz
dec
test
add
push
sub
dec
push
jl
iret
mov
shlb
call
movsb
movsl
cmp
xor
dec
fdivrl
lds
loopne
ja
pop
ret
adc
cwtl
std
orl
push
xor
fs
sbbb
lock
stos
jnp
mov
cmp
mov
fmul
mov
xchg
and
xchg
cmc
rcll
adc
or
mov
cmp
pushf
jno
sub
xor
repnz
mov
mov
lock
fcoms
testb
loope
jmp
or
mov
inc
sub
mov
mov
sbb
jo
mov
arpl
or
ret
mov
add
scas
or
scas
lcall
xchg
mov
push
jmp
mov
push
jmp
sbb
cmp
jmp
xchg
add
push
jmp
pop
xor
push
jmp
push
push
cmpb
jo
popf
mov
ljmp
decl
jmp
.byte
add
add
jecxz
in
xor
xor
cmp
data16
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
data16
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
.byte
