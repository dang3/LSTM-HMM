add
add
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
add
add
ret
incl
add
add
nop
add
add
add
add
add
add
add
add
push
mov
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
cmp
je
sub
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
jmp
ret
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
add
stos
add
add
add
add
add
add
in
xor
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
add
add
add
add
add
add
in
pop
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
nop
add
add
in
inc
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
.byte
nop
mov
add
cwtl
and
add
add
ret
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
add
and
add
and
add
add
add
add
dec
and
add
and
add
and
add
and
add
and
add
add
sbb
add
lods
and
add
add
add
add
cs
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
add
ret
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
add
and
add
and
add
add
add
add
dec
and
add
and
add
and
add
and
add
and
add
add
sbb
add
lods
and
add
add
add
add
cs
add
and
add
and
add
and
add
add
add
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
enter
jae
gs
popa
insb
jne
add
insb
outsl
jae
dec
popa
outsb
fs
add
inc
gs
jb
arpl
jae
gs
imul
jae
jb
outsb
inc
add
dec
add
je
jb
arpl
jae
gs
jo
add
inc
gs
je
imul
push
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
fs
imul
add
roll
dec
gs
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
lock
imul
jb
je
arpl
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
adc
push
gs
insl
gs
push
add
das
add
outsb
fs
je
insl
push
add
add
gs
inc
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
push
jns
gs
add
add
je
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jge
add
add
xchg
xchg
add
mov
inc
mov
ret
lret
lret
into
rcl
in
rcl
shl
ror
shl
into
int
hlt
enter
enter
mov
in
mov
mov
stos
lods
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
rcl
cld
std
xlat
xlat
fdivr
fcom
fdivr
aam
aad
ror
sar
int
int
aam
rcl
sar
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
iret
sar
aam
aad
xlat
xlat
fdivr
fcomp
fdivr
aam
dec
into
int
into
int
call
aad
dec
int
mov
mov
mov
std
cmpsb
cmpsb
cmpsl
ljmp
push
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
into
call
rcl
call
xlat
call
fdivr
dec
int3
int3
dec
lret
lret
dec
into
int3
inc
inc
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
imul
pop
pop
pop
fs
sbb
sub
aaa
ss
cmp
sub
and
adc
push
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
leave
call
iret
iret
call
aam
call
aad
iret
rcl
dec
leave
leave
inc
mov
mov
mov
ljmp
movsb
movsl
sahf
pushf
popf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jge
jg
jle
jb
jb
popa
bound
push
dec
dec
xchg
cmp
inc
inc
mov
jo
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
leave
leave
lret
leave
enter
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
fwait
fwait
cltd
in
addl
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jnp
xchg
lea
incb
jl
jl
jnp
outsb
outsl
jo
push
data16
je
jg
jge
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
xchg
nop
incl
test
xchg
xchg
xchg
sahf
mov
mov
mov
js
js
das
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
mov
std
mov
jge
jo
jno
je
jae
jge
jg
addb
push
cmp
ss
es
jg
jg
fwait
fwait
cltd
lea
test
stos
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
stos
test
movsb
movsb
mov
xchg
xchg
xchg
incl
jge
jp
js
jp
jns
mov
xchg
movsb
movsb
movsl
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
lea
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
prefetch
inc
inc
inc
dec
insb
imul
xchg
fwait
lcall
lcall
std
mov
decl
mov
lcall
cmpsb
movsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
cmpsb
stos
add
pop
adc
scas
call
lcall
incl
mov
xchg
xchg
xchg
popf
pushf
popf
std
movsl
movsb
movsl
stc
mov
xchg
xchg
in
xchg
xchg
in
xchg
jne
push
cmovp
add
inc
sub
daa
push
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
std
lea
xchg
call
mov
cmpsb
ljmp
lods
pushl
sahf
scas
mov
mov
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
xchg
fwait
decl
mov
call
xchg
xchg
xchg
xchg
xchg
pushf
sahf
pushf
movsb
movsl
movsl
test
test
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
jb
mov
jg
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
ja
mov
movsb
mov
mov
mov
mov
movsb
mov
add
mov
add
pop
adc
mov
ljmp
popf
decl
nop
xchg
call
xchg
xchg
call
xchg
lcall
sahf
lahf
lahf
movsb
movsb
mov
stc
cltd
lcall
mov
cwtl
aad
cwtl
cltd
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jae
fwait
imul
ljmp
aaa
jnp
mov
jae
mov
insl
ljmp
pcmpgtd
lods
or
ljmp
jge
mov
mov
lods
pushf
movsl
movsb
movsl
and
add
add
pop
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
popf
lcall
sahf
popf
lcall
xchg
xchg
call
cwtl
nop
call
cwtl
cltd
cld
cltd
cltd
sahf
stc
mov
xchg
sahf
cld
popf
mov
xchg
insb
xchg
xchg
push
jge
xchg
dec
jp
fwait
cmp
push
popf
and
mov
adc
ljmp
adc
lods
adc
lods
adc
mov
imul
adc
insl
mov
lcall
scas
lods
lods
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
lahf
jmp
movsl
movsl
jmp
xchg
cwtl
decl
mov
decl
ja
cltd
jo
cltd
fs
xchg
dec
jp
xchg
cmp
decl
pop
pusha
decl
or
call
add
fwait
add
sahf
push
pop
jmp
sbb
pushl
pop
jno
mov
outsl
mov
and
and
mov
inc
test
ret
xchg
lods
mov
scas
scas
mov
lahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsb
mov
jmp
test
jmp
lcall
mov
decl
cmp
xchg
popa
decl
push
pop
incl
push
push
incl
add
mov
pop
decl
add
fwait
add
mov
or
mov
jo
mov
ja
mov
sub
sub
sub
lds
dec
jg,pn
leave
cs
scas
mov
mov
lret
mov
add
add
add
add
add
push
push
adc
test
mov
sahf
fwait
sahf
jmp
test
ljmp
lods
stos
pushl
scas
lods
jmp
mov
mov
push
incl
or
addb
test
push
incl
push
incl
add
nop
add
xchg
add
cltd
add
lahf
add
movsl
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
sarl
xchg
sarl
mov
sarl
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
movsb
test
mov
mov
lahf
fwait
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
decl
add
popf
add
add
cmpsb
add
stos
add
mov
jno
ret
cmp
into
inc
call
inc
mov
rorb
call
dec
xchg
call
dec
xchg
fmull
fistl
call
xchg
std
mov
mov
mov
sahf
lahf
or
add
add
add
add
dec
dec
adc
jl
sahf
mov
lcall
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
call
pop
popa
decl
adc
mov
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
mov
gs
mov
dec
nop
call
push
xchg
fcoms
fsts
fistpl
ficomps
fists
jmp
pop
mov
jmp
pop
lahf
fadds
mov
cmpsb
jne
lahf
mov
add
inc
inc
adc
ja
lahf
fwait
lahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
pop
arpl
xchg
and
xchg
and
xchg
and
xchg
sbb
nop
or
xchg
add
xchg
add
lcall
ljmp
add
mov
fs
mov
xor
fstps
fisubs
fisubs
jecxz
cmpsl
jmp
data16
jmp
addr16
ljmp
jmp
xchg
mov
cmpsb
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
cltd
xchg
cwtl
call
lahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
xor
cltd
xor
cwtl
sub
xchg
pop
call
add
fwait
add
mov
add
lods
add
mov
pushw
adc
roll
fldt
jmp
outsl
lods
jmp
outsl
lods
jmp
jb
call
je
in
jne
out
je
in
jne
out
je
jmp
mov
mov
cmpsl
cmpsl
lcall
lahf
add
jge
ds
adc
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
jo
lahf
cmp
sahf
cmp
xor
fwait
sbb
call
pop
lcall
add
add
mov
pushl
add
sbb
fistl
jmp
jbe
ljmp
in
xorb
repnz
push
test
jmp
mov
mov
test
cmpsl
pushf
pushf
pushf
daa
sahf
lahf
sahf
add
add
add
pusha
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
ret
mov
mov
sahf
outsb
mov
cltd
cmp
inc
jge
movsb
inc
jg
movsb
cmp
fwait
sbb
xchg
add
popf
add
movsl
add
stos
add
lods
add
mov
fs
mov
add
call
daa
cmp
movsb
jmp
mov
push
sar
xchg
ret
push
xchg
sar
xchg
push
xchg
push
xchg
stc
mov
in
mov
inc
ret
lods
lods
stos
mov
popf
sahf
xor
popf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
ret
ret
ret
ret
mov
mov
jge
lcall
dec
cmp
movsl
xor
punpcklbw
lcall
jmp
add
mov
mov
add
movl
mov
out
xchg
ret
push
lcall
hlt
fwait
push
pushf
enter
lret
pushf
lret
cli
popf
int3
cld
sahf
int
sti
lcall
loopne
int3
dec
mov
mov
sahf
sahf
mov
add
add
add
add
cmp
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
mov
mov
mov
ljmp
xchg
mov
or
add
movsb
add
lods
add
mov
mov
add
movl
jbe
fiadds
out
mov
push
movsl
int3
push
movsl
into
clc
cmpsb
iret
sti
test
sti
movsl
into
cli
cmpsl
sar
cld
stos
sar
std
test
sar
negb
int3
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
xor
sub
or
inc
bound
pop
xlat
je
jb
mov
sarl
mov
ret
inc
enter
ret
mov
test
movsb
push
test
scas
push
mov
scas
dec
test
lahf
sbb
pop
jmp
popa
pushl
add
ret
dec
add
add
adc
out
pop
cmpsb
push
sahf
lret
scas
sar
sti
mov
sti
mov
cld
mov
std
mov
mov
cld
mov
cld
mov
mov
std
mov
push
cmpsb
jmp
mov
call
leave
lret
mov
mov
sahf
sahf
mov
or
add
add
xor
sbb
dec
dec
outsl
outsb
jo
cltd
cltd
cwtl
rol
fcom
fcom
jmp
not
rcl
std
int3
int3
int3
dec
lret
lret
dec
lret
leave
enter
scas
jmp
push
mov
lods
jg,pt
sahf
punpckldq
mov
add
mov
fs
mov
add
rolb
outsl
call
add
filds
je
call
jno
cli
lods
aam
std
mov
fcos
mov
std
mov
xlat
cld
mov
fdivr
inc
fcos
std
mov
int
call
lret
into
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
leave
movb
loop
out
out
in
out
jecxz
loop
fstp
fsub
fcmovnu
fcomi
fcomp
fsqrt
aam
fdivr
int
iret
mov
push
test
test
add
cmpsl
add
mov
popa
mov
add
lret
add
add
fldl
ja
in
jbe
out
das
xchg
stc
mov
cli
mov
loope
inc
std
inc
loopne
dec
loopne
dec
std
fdivrp
dec
fdivrp
dec
loopne
cld
mov
leave
call
lret
mov
mov
xchg
adc
add
add
incb
std
incb
std
std
std
add
cmc
hlt
or
in
in
pop
in
out
out
sub
out
out
dec
jmp
ljmp
jecxz
out
fcmovnu
fucomp
ret
stc
stos
outsl
xchg
cmpsl
cmp
movsb
push
jmp
add
mov
mov
add
int
insl
fadds
jb
loopne
ja
jmp
inc
popf
cli
mov
loop
std
lret
jecxz
dec
in
std
into
jecxz
dec
jecxz
std
int
dec
loop
std
iret
in
dec
in
std
shl
shl
cld
out
mov
xlat
inc
ret
out
test
test
xchg
xchg
xchg
sbb
cltd
fwait
add
incl
std
add
idiv
add
repz
hlt
icebp
push
out
repnz
pop
out
repnz
cmp
in
in
pop
fsubp
loope
les
sti
lahf
and
lcall
add
stos
add
mov
gs
add
movl
jno
fiaddl
jbe
jecxz
jp
jmp
jge
cmc
pop
test
sti
mov
dec
in
std
shl
shl
call
out
std
shl
call
out
fsubr
call
out
std
fucomi
fldl2e
std
iret
loop
repz
in
fcos
lret
repz
test
xchg
xchg
xchg
and
xchg
xchg
add
std
cli
add
cld
clc
add
sti
clc
add
cmc
repz
aam
sarl
negb
add
cmpsb
add
scas
add
mov
add
lret
add
rolb
jno
fildl
jbe
call
sbb
stc
je
cli
loopne
fldl2e
fldpi
fucomi
std
fucomi
fucompp
fucomp
std
fucomi
std
fucomp
std
loopne
fucomip
fsubrp
std
shl
push
ret
out
iret
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loope
add
mov
xchg
stos
jnp
repnz
and
sahf
add
test
pusha
pushl
add
les
imul
aad
jb
fiadds
je
call
sub
std
shl
std
loopne
fucomi
std
fldpi
std
fsub
std
in
std
shl
cli
iret
loopne
cld
iret
loop
clc
iret
clc
lret
fdivrp
test
int3
call
xlat
sti
mov
mov
lcall
add
add
add
aad
mov
mov
mov
lcall
add
mov
mov
add
rolb
outsl
fadds
je
loope
js
jmp
aaa
xchg
sti
cwtl
cli
enter
lret
jecxz
cli
fdivrp
stc
rcl
cmc
mov
sar
icebp
mov
into
out
mov
int
jmp
rcl
call
shl
ljmp
in
mov
mov
xchg
add
add
add
int3
int
mov
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
dec
or
rorl
fistl
ja
loopne
cmp
dec
xchg
ljmp
jmp
scas
enter
scas
ret
mov
neg
mov
lret
ret
int3
in
lret
loopne
xlat
shl
fcmovb
call
in
test
in
lock
jmp
lret
lods
lods
lods
adc
cmpsl
cmpsb
cmpsb
add
ret
mov
sahf
stos
aam
dec
jg
popf
sbb
test
imul
es
mov
ja
mov
inc
xchg
ret
stc
lret
gs
mov
sarl
rcl
mov
lret
rcl
lret
mov
iret
shll
fcom
aad
fcmovu
fidivl
gs
jecxz
out
out
call
div
sub
cmc
cmc
and
icebp
repnz
fcmovnu
or
mov
int3
add
add
add
mov
inc
mov
test
stos
jne
ljmp
mov
sarb
mov
ret
cmpsl
leave
mov
enter
lret
jp
int
addr16
rcll
rcl
dec
fcom
inc
rcr
aad
aad
fsubs
fistpl
ficoms
fucom
jecxz
in
call
icebp
in
add
sti
testb
sti
add
std
add
std
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int3
lret
ror
and
aad
sbb
aad
adc
rorb
rcr
aam
aam
fadds
add
in
add
in
ljmp
std
incl
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
enter
movl
lret
add
add
add
add
fadds
fcmovnu
loop
aad
fildl
fsubp
loop
loopne
jecxz
call
add
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
les
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
rcl
jmp
aad
cmc
rcl
aam
into
iret
sar
int
int3
stc
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
sar
aad
call
xlat
xlat
call
ror
dec
int
dec
int3
lret
mov
mov
stos
stos
stos
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
jae
fs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
ret
ret
dec
lret
int3
call
rcl
call
rcl
dec
lret
mov
mov
ljmp
sahf
lahf
xchg
xchg
xchg
jmp
jo
xchg
pop
adc
add
add
add
add
add
cmpb
jl
jnp
test
jp
imul
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
fwait
fwait
out
addl
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
xchg
cwtl
fcoml
addb
jnp
jl
jp
js
jnp
jns
jns
jnp
jae
jae
push
push
push
cmp
jae
popf
pushf
popf
mov
lods
scas
rep
lods
scas
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
cmpsb
movsl
cltd
je
jae
adc
adc
add
add
add
add
insl
insl
outsb
pop
xchg
mov
mov
test
std
mov
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
cltd
cltd
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
scas
mov
mov
mov
movsl
mov
jg
pusha
pop
popa
or
lods
mov
cmpsb
mov
mov
lea
mov
xchg
xchg
cwtl
std
popf
lahf
lahf
sti
sahf
mov
cltd
call
push
push
push
jo
push
pop
outsl
insl
outsb
outsl
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
pushf
popf
popf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jle
popf
dec
jl
movsb
inc
js
scas
xor
je
mov
outsb
ljmp
sbb
pop
mov
scas
mov
movsl
mov
add
add
add
pusha
popa
pusha
or
mov
lcall
sahf
popf
jmp
lahf
mov
decl
addb
xchg
jno
cld
xchg
pop
cmp
dec
js
xchg
cmp
nop
sub
xchg
sbb
adc
lahf
or
push
pushl
sbb
mov
and
mov
stos
mov
lods
scas
lods
xchg
popf
lahf
sahf
adc
add
add
pop
pop
popa
or
mov
test
mov
cmpsb
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
pushf
add
or
pushl
sub
mov
das
jge
xor
dec
pop
xchg
inc
test
mov
cmpsl
cmpsl
cmpsl
sbb
add
add
popa
popa
popa
or
movsl
stos
in
mov
cmpsb
ljmp
mov
pushl
cwtl
lahf
decl
adc
mov
pop
incl
push
push
decl
add
xchg
add
mov
add
mov
insb
inc
aaa
cmp
inc
mov
into
inc
call
inc
mov
aad
xchg
call
popa
lahf
inc
cmpsl
mov
mov
mov
incl
add
add
pop
pusha
pusha
or
mov
ljmp
mov
mov
mov
stos
call
pop
call
adc
push
decl
add
sahf
add
add
scas
add
jne
rorl
fsts
fcompl
ficomps
loop
mov
fildll
int3
cmpsb
mov
ret
cmpsb
xor
add
add
dec
pop
jl
jp
popf
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
add
scas
add
pop
addr16
xor
fisubl
jmp
insb
test
call
jb
in
jno
jmp
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
outsb
outsb
push
mov
cwtl
ljmp
mov
mov
mov
je
lcall
cmp
pushf
sub
xchg
or
lcall
add
lods
add
mov
gs
or
xchg
jmp
js
ljmp
push
test
push
xchg
fisubrl
mov
push
fwait
lcall
sub
sub
push
push
dec
pop
imul
xchg
mov
mov
mov
rol
sarb
jmp
inc
jg
mov
or
add
add
mov
fs
mov
adc
mov
push
xchg
cwtl
push
cwtl
enter
lret
lcall
loope
inc
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
ret
xchg
cmpsl
jmp
dec
cmp
and
sahf
add
cmpsl
add
mov
arpl
mov
add
fisubl
cmp
jl
push
movsb
lret
push
cmpsl
into
clc
stos
iret
cld
test
sar
lods
sar
sti
cmpsb
int
call
rol
stos
test
pushf
or
add
add
dec
dec
push
aaa
je
jae
stos
stos
stos
ror
into
into
out
int
cmc
lret
lret
enter
leave
enter
mov
stos
popa
ljmp
arpl
test
add
roll
dec
add
flds
xchg
clc
xchg
sti
mov
cld
mov
fdivr
mov
mov
sar
ljmp
repz
lods
scas
mov
add
add
add
add
pop
or
aad
dec
loopne
loope
loopne
loopne
fcmovnu
ffree
fcmovu
fcmovu
aad
fsubr
shll
cmpsl
sub
jmp
mov
add
add
loop
jnp
lock
mov
std
std
std
std
leave
dec
fdivrp
dec
loopne
std
lock
leave
divb
pushf
sahf
sbb
add
add
incb
std
incl
jmp
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
arpl
ret
dec
add
fildl
jbe
ljmp
std
fdivrp
std
iret
out
call
out
shl
std
aam
call
out
xlat
out
std
aam
push
xlat
fcmove
sar
mov
mov
and
add
add
std
add
std
std
add
cld
pop
aad
aam
mov
pop
xchg
lahf
or
stos
add
mov
fs
add
rolb
outsl
jmp
add
in
and
std
shl
std
fsubr
cld
fld1
cld
xlat
jmp
cld
fsub
std
aam
push
xlat
jmp
rcl
sti
mov
lahf
sahf
das
add
add
into
into
into
or
fs
mov
add
mov
add
add
loop
ja
in
das
xchg
stc
lcall
clc
lret
test
hlt
repz
out
ret
in
sar
in
aad
ljmp
ljmp
test
std
std
incb
aad
push
mov
jb
push
data16
mov
imul
sbb
int3
and
cs
loopne
fwait
clc
in
mov
out
jecxz
lret
mov
lret
faddp
int3
leave
ffreep
sarl
jecxz
ficompl
in
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
pop
xchg
mov
fidivrl
jg
rol
stos
mov
mov
les
aam
int3
insl
aad
into
pop
ror
rorb
cmp
fsubp
das
in
fisubs
loop
lock
in
in
or
incb
std
std
add
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
leave
enter
aam
mov
rcl
or
loope
or
into
int3
add
incb
std
std
incl
cltd
fwait
lcall
lds
int
int
stos
stos
stos
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
cltd
add
ret
enter
enter
enter
ret
mov
scas
scas
scas
insb
stos
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
aad
rcl
sar
int
into
std
mov
stc
mov
test
sarl
gs
pop
push
add
add
add
add
add
add
add
add
jb
jae
push
inc
inc
das
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
int3
call
aam
dec
into
into
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
je
jne
xchg
adc
jo
ret
arpl
outsl
outsl
insl
jb
popa
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jno
and
add
pop
add
add
jae
je
fwait
xchg
pushf
mov
test
xchg
xchg
test
addb
push
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
mov
xchg
xchg
xchg
cld
sahf
pushf
sahf
cmc
lcall
mov
push
push
imul
jge
xchg
aam
xchg
notl
mov
pushl
imul
call
lods
stos
stos
add
add
add
cmpsl
mov
mov
lods
cld
xchg
xchg
xchg
lcall
cltd
fwait
lcall
lcall
xchg
mov
loope
jbe
out
nop
bound
std
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
sahf
sahf
sahf
jmp
cmpsb
call
push
js
xchg
inc
jb
mov
imul
xchg
adc
xchg
or
mov
sbb
mov
and
inc
sub
les
inc
lcall
stos
test
add
xorb
movsb
popf
mov
cld
test
cmpsb
pushl
mov
jmp
sub
mov
pop
decl
add
decl
add
mov
adc
ret
dec
ds
roll
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsb
movsl
movsl
push
add
add
imul
test
mov
lods
pushl
mov
ljmp
cmp
xchg
push
call
push
pop
call
add
lods
add
mov
push
xchg
fistpl
fistps
jmp
pop
mov
call
fwait
mov
test
test
pop
add
add
bound
adc
sahf
lcall
mov
mov
scas
lcall
xor
cwtl
and
xchg
pop
pop
lcall
add
mov
xor
jmp
outsl
stos
jmp
jp
out
jle
push
jge
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
bound
jmp
add
test
add
or
dec
cwtl
in
lea
push
xchg
xchg
leave
stc
xchg
enter
mov
cmpsb
movsb
sub
aas
aas
inc
adc
push
xchg
mov
mov
inc
mov
xchg
ljmp
sbb
movsb
add
mov
arpl
ret
add
adc
jmp
scas
push
cmpsl
int
clc
lods
sar
cli
lods
sar
sti
scas
sar
scas
sar
in
mov
inc
mov
movsl
ds
incb
xor
outsl
outsl
inc
scas
mov
mov
aad
mov
aam
fnop
aam
out
lret
cli
mov
mov
jmp
inc
add
aam
jae
out
xchg
stc
pop
std
mov
cld
ret
std
ret
std
ret
icebp
mov
shl
cmpsl
test
jg
addb
add
add
in
in
or
call
out
outsb
fisubl
movsb
daa
insl
ljmp
add
lret
add
faddl
out
aaa
xchg
cld
mov
std
into
in
shl
shl
call
in
call
out
test
call
int
lods
scas
lods
popa
jg
jg
incl
std
std
push
int3
int3
shrl
sahf
sbb
lods
add
mov
add
loop
js
repz
cmpsb
inc
loope
cld
xlat
call
cld
shl
std
aad
sti
shl
push
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
add
imul
or
cmp
insl
lods
cld
lock
aam
ljmp
jmp
out
aam
ljmp
scas
lcall
add
pushf
lods
xchg
inc
and
push
mov
ret
int3
lret
jbe
mov
xlat
mov
int3
adc
int
fmul
iret
pop
dec
in
fistpll
out
out
out
out
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
cs
mov
lret
sbb
fstp
bswap
int3
into
or
aad
push
std
incb
jg
jg
incb
stos
incb
rol
add
incb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
or
idiv
inc
jmp
add
dec
insb
cmp
add
mov
fists
mov
jmp
inc
fdivrs
jmp
cwtl
xlat
mov
out
fnstenv
jno
js
and
loop
sbb
xchg
fcomip
arpl
mov
je
shlb
push
inc
int
or
add
popa
in
mov
pop
push
jnp
ficomps
imul
cmp
push
sub
mov
cmp
inc
scas
lret
xchg
int
int
jno
nop
pop
push
fistpl
inc
xchg
mov
mov
adc
outsb
xchg
cmp
push
int
imul
add
outsb
xor
sbb
loop
or
mov
xor
pop
in
mov
aad
filds
cmp
or
cs
dec
xor
mov
sahf
cltd
inc
adc
mov
mov
cmp
jge
lret
jecxz
sbb
mov
mov
add
push
jmp
shll
les
lret
arpl
in
divb
or
outsl
hlt
fwait
jb
aas
pusha
lret
xlat
jae
addr16
push
pusha
in
mov
test
jge
jb
jb
pop
mov
mov
stos
mov
xchg
mov
push
jle
mov
psrlq
lods
into
xchg
mov
jle
movsl
popa
daa
xor
dec
scas
xchg
cmp
arpl
out
sub
mov
pop
aas
mov
jb
sahf
inc
sub
shl
cmp
sahf
dec
in
popf
inc
ljmp
or
xlat
cmp
inc
mov
dec
sub
mov
mov
aad
in
ffreep
scas
icebp
jae
cmc
xlat
dec
push
jno
insl
scas
aad
dec
sub
es
mov
stos
daa
test
or
adc
hlt
pop
or
inc
loop
daa
cmpsb
or
rclb
movd
mov
and
loope
jno
rcll
mov
int3
xchg
stc
cmpsw
sbb
jl
mov
mov
sbb
cmp
popf
aas
or
rcr
push
push
lods
add
mov
stos
push
arpl
mov
inc
mov
pop
sub
sub
out
xor
mov
mov
push
mov
test
or
dec
icebp
test
pop
call
bnd
xlat
aas
inc
adc
xchg
add
test
inc
popa
cmp
mov
in
pop
fnstcw
push
nop
inc
cmp
leave
pop
subl
loop
cmc
inc
xchg
out
test
jmp
pop
shll
aam
ficoml
js
add
pop
stc
es
adc
pop
inc
mov
dec
gs
lds
jmp
inc
push
cmp
lret
in
gs
fidivrs
subb
adc
push
dec
or
stos
pop
or
xlat
das
xchg
jmp
push
or
xchg
adcb
push
pop
ret
xchg
push
sub
sti
push
pop
xor
mov
push
xor
xor
lahf
pop
imulb
daa
cmpsb
cmp
sbb
loope
test
mov
fldt
mov
cmp
mov
push
jns
push
mov
out
lea
shlb
jae
repz
out
cmp
lahf
sti
adcb
jb
subl
xchg
dec
sub
adc
push
movb
repz
add
test
jns
test
adc
loope
mov
mov
sub
stc
mov
sub
or
sub
out
jg
or
add
push
imul
outsb
in
mull
shll
mov
cmpsl
push
lea
cmpsl
popa
cmc
es
not
or
ss
pop
pusha
ffree
test
jmp
lea
xchg
and
mov
cwtl
int
mov
xchg
push
sub
pop
jns
lods
test
dec
xor
push
sbb
xor
inc
mov
movsl
imul
push
mov
fwait
nop
cmp
loop
lahf
dec
push
call
inc
inc
in
mov
test
sbb
je,pn
mov
inc
repz
les
push
pop
push
sub
outsl
cmc
mov
sub
rolb
add
ja
negb
adc
mov
mov
add
inc
mov
mov
mov
arpl
lea
push
lret
sbb
mov
pop
pop
lds
ficoms
imul
inc
jp
sub
sti
dec
aas
aaa
sbb
outsl
ljmp
push
inc
sub
xor
gs
xor
jl
push
bound
cld
test
dec
divl
out
movsl
jae
je
aad
cmp
and
sub
pop
push
mov
pop
cmp
aaa
nop
pop
cmpsb
pushf
sbb
fs
dec
or
fnsave
out
ja
jg
push
and
fildl
aad
int
fisubs
cmp
aaa
pop
outsl
push
imul
loopne
mov
negl
std
fimull
jae
jg
cmp
cli
push
imul
fiaddl
sbb
add
jbe
push
jmp
sbb
shl
jae
arpl
pop
imul
aam
ret
sbb
or
fwait
jne
shrl
xchg
int
fsubrs
out
sbb
sbb
shll
adc
ret
mov
mov
fisttpll
push
cmp
add
mov
outsl
pop
fbstp
nop
jo
int3
jb
xchg
cmpsl
int
icebp
test
movsb
sub
mov
arpl
cltd
mov
jp
sbb
insl
icebp
pusha
dec
pop
mull
mov
int
xchg
mov
out
adc
mov
cmpsb
popf
or
and
mov
inc
fnstenv
mov
cli
sub
int
les
lds
adc
ror
xor
aad
data16
roll
mov
dec
bound
in
xchg
popf
popa
lock
and
mov
jp
mov
inc
or
sbb
add
loope
lcall
gs
jae
sub
cmpsb
mov
adc
push
mov
popa
aad
les
and
icebp
mov
rep
hlt
mov
popf
mov
loopne
jbe
int
imul
inc
mov
in
mov
cld
xor
or
mov
inc
pop
je
data16
iret
push
stos
fdivp
jns
fmul
jo
or
test
lock
and
fcmovnb
inc
add
imul
xchg
jnp
bnd
mov
sub
xor
inc
mov
jmp
mov
xchg
jmp
mov
lods
leave
jo
enter
test
test
js
ss
pop
in
push
aas
arpl
xchg
cmp
mov
sbb
cli
jg
int3
repnz
add
lods
icebp
add
push
out
and
jle
mov
cs
mov
push
insb
jb
popf
adc
lret
push
test
xchg
mov
enter
inc
add
mov
repnz
adc
xor
insb
mov
in
outsl
and
insb
and
int3
dec
cmp
cmp
push
add
push
cmp
sub
inc
jo
adc
loopne
or
insb
add
xor
jge
test
dec
fists
cmpsl
fwait
xor
xor
cli
mov
push
lods
dec
xlat
outsb
jg
out
add
add
dec
es
mov
jns
inc
fldcw
icebp
mov
mov
mov
fidivrs
adc
les
pushf
xor
dec
loop
test
add
fwait
outsb
mov
mov
shrl
inc
adc
pusha
inc
popa
xchg
sub
mov
aas
jge
pop
sahf
mov
fldenv
jnp
sub
ficompl
add
mov
in
cmp
sbb
sub
mov
roll
fisubs
loope
into
xchg
add
mov
push
hlt
xchg
cmpsl
inc
movsb
bnd
aaa
xchg
cmp
or
cltd
sbb
mov
jmp
sub
cmp
jecxz
hlt
adc
fdivs
inc
xor
mov
xor
fstpt
stos
data16
cld
cmpsl
xchg
dec
mov
fcmove
data16
mov
test
rclb
mov
mov
fidivs
aam
inc
push
push
cld
xchg
dec
daa
pop
pop
imul
jl
mov
add
decb
mov
add
outsb
lods
inc
movsb
or
or
outsl
jbe
subb
cld
test
jo
addr16
in
mov
in
push
cmp
pop
pop
cmpsb
rclb
sub
sub
push
dec
lock
ret
test
enter
mov
xchg
sub
dec
movsl
cmp
and
iret
push
mov
push
in
cmpsl
cmc
loope
daa
leave
je
sti
dec
call
dec
fwait
sbb
dec
mov
ret
iret
data16
aas
pop
lock
out
test
ja
ret
imul
push
mov
mov
imul
shrl
pusha
addr16
xchg
fucomp
xchg
mov
sbb
xor
cmp
subb
mov
ret
aam
loopne
lods
loopne
fbld
addr16
push
add
xchg
inc
js
or
xchg
lret
xchg
sub
mov
mov
push
enter
jno
push
mov
les
mov
mov
cmp
pop
pop
mov
arpl
into
gs
cmp
add
imul
jecxz
dec
mov
aas
es
int
test
cmp
test
aas
pop
fsubrs
data16
xchg
jb
xchg
push
jg
dec
jno
push
movsl
jno
xchg
add
mov
or
mov
sub
pop
dec
jge
cmp
pop
imul
sbb
jo
jno
pop
arpl
lret
add
cmc
sbb
rolb
test
mov
dec
cmp
mov
shrl
sub
mov
add
repz
in
ret
pop
push
push
lock
cltd
xor
add
jg
sub
or
xchg
mov
xor
inc
push
pop
repz
pop
pop
mov
push
sbb
inc
jbe
addr16
mov
pop
sti
push
mov
aad
outsl
sbbl
pop
push
fs
xor
das
xor
dec
scas
push
xchg
sub
adc
std
xchg
pop
nop
mov
clc
push
in
push
mov
mov
xchg
repnz
pop
mov
xchg
rcrl
repnz
adc
and
ss
mov
dec
mov
dec
loope
mov
ja
jl
adc
mov
in
pop
pop
add
inc
fstl
mov
lea
mov
out
xlat
inc
jae
cmp
add
dec
stos
mov
lret
pop
lret
sbbb
jg
leave
jo
fs
loopne
push
in
add
push
out
xchg
mov
mov
daa
scas
scas
inc
push
dec
add
fstpt
in
add
popa
jge
addr16
sub
repz
pop
adc
rclb
sbbl
hlt
cmp
fucomip
into
out
shlb
fcom
mov
or
adcb
xchg
push
lods
mov
ret
in
clc
xor
push
popf
scas
cs
mov
rorl
xorl
mov
loope
pop
and
pop
repz
outsl
push
jmp
lods
inc
decl
cmpl
or
fnstenv
aam
mov
lds
xchg
mov
mov
call
int3
arpl
cwtl
enter
pop
icebp
out
iret
shrb
adc
lds
mov
inc
fnstenv
xor
je
test
jmp
andl
jp
rsm
out
stos
inc
loope
push
lods
and
and
xchg
xchg
movsl
cmp
or
ljmp
int
xchg
mov
pop
out
xor
cmp
fidivl
popa
and
je,pn
test
pop
mov
std
xor
sub
pop
testb
imul
in
jne
loop
xor
sti
xchg
push
push
repnz
pop
lret
inc
jp
push
insb
sahf
jns
int3
cmc
mov
insl
cmpsl
mov
inc
lea
mov
mull
mov
mov
and
stc
dec
ret
packssdw
movsl
call
mov
lsl
icebp
fwait
and
mov
cmp
outsl
imul
scas
push
dec
call
and
dec
ret
add
popa
xchg
inc
fmul
addb
insb
ja
xchg
adc
add
cmpsl
pop
sbb
das
xor
enter
ljmp
movsb
pop
repz
mov
leave
call
mov
mov
mov
js
testb
sub
popf
add
mov
mov
add
inc
lods
shrl
gs
push
js
aam
js
pop
push
les
mov
sahf
cld
aad
cmp
sbb
clc
arpl
push
or
xor
add
adcl
add
pop
pop
nopl
insb
faddl
aas
lcall
sbbb
outsl
es
mov
adc
inc
inc
lcall
pop
jno
dec
jne
push
outsb
mov
dec
roll
std
xchg
xchg
adc
xchg
cmpsb
inc
ficoml
cli
sbb
stos
lods
mov
sarl
xchg
mov
jns
jecxz
mov
push
add
jno
repnz
push
adc
mov
dec
in
test
cmp
pop
pop
lock
fsubrs
push
test
xor
mov
ret
ja
mov
out
jns
sti
or
rcrl
lea
lcall
inc
testb
sbb
mov
add
data16
push
mov
loopne
js
push
push
scas
inc
mov
pusha
sbb
add
xor
mov
and
dec
inc
enter
add
inc
mov
push
jmp
adc
into
jp
push
insb
insb
sub
movsl
lea
sti
mov
repz
mov
pop
and
inc
rcrl
xor
cld
pop
mov
dec
lcall
pop
outsl
ret
jg
xlat
jo
and
add
sub
mov
repnz
add
add
pop
arpl
dec
mov
pop
lahf
rcrl
push
jmp
push
addr16
movsb
adc
rolb
movsb
fsubrs
repz
bound
cmp
jge
rclb
pop
mov
fistps
scas
shlb
sub
cmp
scas
gs
loop
add
test
sub
pop
adc
jl
sub
leave
cltd
in
mov
mov
pop
hlt
aas
lea
scas
mov
loope
push
pusha
and
gs
or
inc
sbb
mov
adc
loop
loop
xor
scas
mov
sarl
movsl
loop
mov
xchg
hlt
push
ljmp
jmp
js
test
jge
lock
lahf
ret
int
add
testl
movb
mov
imul
stc
inc
fucomi
xor
imul
jae
add
cmp
es
mov
ret
repz
imul
ja
stos
inc
fistpl
sti
xchg
fs
push
popf
in
push
ret
push
sbb
add
scas
inc
adc
int
add
lcall
es
hlt
in
sub
dec
adc
daa
mov
frndint
dec
out
sub
sub
pushf
lods
js
cld
inc
ss
pop
leave
rcll
hlt
xchg
jno
icebp
addr16
jecxz
lahf
insl
outsb
sarb
roll
jmp
fs
xchg
movsb
pop
push
call
je
sub
sbb
cmpsl
sbb
xor
push
lcall
mov
and
or
insl
push
sbb
je
push
mov
popf
jb
mov
hlt
test
in
addl
mov
push
jge
lods
xor
xor
ret
mov
enter
xchg
sub
std
jp
mov
mov
enter
lods
divb
mov
popa
add
cs
xchg
xor
incb
mov
setge
insb
popa
daa
iret
mov
test
divl
das
imul
aas
cmp
sbb
adc
aam
cmp
enter
xor
sub
sbb
aam
push
adc
push
sub
std
cmc
call
sahf
xchg
xorl
out
fidivrs
mov
push
iret
lret
xchg
and
addr16
or
xor
arpl
sarl
sbb
jp
arpl
fldt
mov
jns
dec
or
xchg
xor
push
sbb
ljmp
cmp
in
sub
test
rorl
ret
sub
adc
rcrb
push
das
inc
std
xchg
jne
lds
sbb
es
sbb
repnz
cli
sub
dec
jecxz
outsb
sbb
sub
or
sbb
cltd
clc
xor
imul
or
jns
jb
cli
add
mov
call
fbstp
jmp
std
xchg
in
cmp
int
or
push
jmp
pop
cmp
nop
fbstp
adc
nop
daa
fs
push
test
sub
fmul
arpl
stos
mov
ljmp
jg
lahf
mov
out
xchg
movsl
or
fistl
ret
stc
cmpsl
dec
dec
loopne
enter
fwait
addr16
sbb
sbb
outsl
mov
cmp
xchg
rcl
sub
addb
add
cmc
mov
xchg
add
ss
adcl
in
fcmovb
rclb
popa
stc
bound
out
mov
push
je
scas
andl
jo
push
inc
shll
inc
push
loop
imul
mov
daa
outsl
inc
fldcw
pop
fsts
jg
enter
enter
mov
dec
jp
negl
xlat
lcall
sub
inc
fistpl
dec
je
jge
stc
jo
xchg
sub
xchg
adcb
icebp
mov
and
sahf
xor
ja
mov
or
fidivl
jmp
mov
adc
sub
arpl
xor
mov
fs
adc
push
jmp
sub
pop
mov
and
or
das
fdivl
and
popa
push
cmp
mov
call
scas
push
lret
addr16
mov
mov
shrb
xchg
daa
mov
sbb
out
insl
add
jns
push
adcb
lock
fiaddl
daa
je
aaa
into
daa
xchg
mov
enter
jp
daa
mov
int
add
data16
lds
jne
xchg
addr16
aaa
ds
jmp
js
mov
sti
cmp
sbb
mull
xchg
jnp
pop
mov
hlt
mov
dec
iret
jns
add
jne
push
cli
dec
or
inc
mov
pop
mov
and
push
mov
outsl
std
adc
push
mov
out
xchg
or
push
pop
mov
adc
xchg
mov
mull
pop
sub
cli
lea
push
orb
or
push
nop
push
outsb
fmuls
in
pop
loop
jo
repz
ret
shrb
sarl
loopne
and
fwait
loop
mov
sti
push
inc
pushf
pop
mov
inc
arpl
stos
and
dec
ds
test
mov
gs
add
lds
pusha
and
mov
or
mov
in
push
or
js
jns
xor
iret
cs
mov
js
roll
mov
lea
cmpb
jnp
jp
daa
gs
lret
lret
pop
sbb
sbb
xchg
leave
add
sub
mov
cli
or
pop
mov
lea
mov
test
push
fsubrl
lds
xor
bound
dec
loope
adcl
into
add
test
add
push
call
push
jp
or
leave
xchg
sub
stc
sbb
push
insl
aam
jle
pop
cwtl
cmpsl
sahf
adc
imul
sub
push
push
inc
xlat
inc
ds
in
push
imul
mov
test
ss
sub
arpl
pop
xchg
mov
imul
pop
push
or
cmp
loope
popa
pop
and
pushf
repz
fsubrs
mov
push
add
and
repz
pushf
stos
inc
into
cmp
mov
sub
mov
adc
daa
mov
insb
test
pop
repz
push
cmp
mov
rorl
leave
mov
pop
sahf
add
into
inc
pushf
jnp
das
dec
adc
insl
imul
dec
je
insb
inc
dec
loop
ss
test
sub
sarb
lods
inc
lods
cmpl
fidivl
movsb
sub
adc
iret
int
shll
push
sahf
jge
push
xchg
das
movb
rclb
lret
fldl
cwtl
into
shrl
or
sbbb
jle
shrb
sub
cmp
mov
cmp
insb
iret
mov
xlat
adc
les
xor
out
xchg
aam
or
mov
das
aad
fwait
xchg
push
fnsetpm(287
jnp
inc
insl
add
loopne,pn
ds
xchg
out
xchg
lods
or
pop
int
add
jge
adc
cmp
and
pop
into
movsl
repnz
clc
lods
pop
out
int
push
icebp
cmpsl
mov
hlt
mov
xchg
or
loope
sbb
xchg
inc
fcoml
push
test
push
dec
jbe
push
aas
mov
test
xchg
test
mov
fsub
jns
push
inc
out
mov
sbbl
pop
sub
sarb
jmp
mov
popa
movsl
inc
ret
cmp
hlt
inc
or
push
adc
pop
int
inc
pop
or
sub
lods
rcll
and
aam
repz
jno
repnz
jge
push
inc
mov
int
mov
jbe
insl
or
out
sbb
movsb
cmp
xchg
gs
add
fwait
xor
int
sar
mov
pop
icebp
nop
stc
cmp
jmp
not
imul
jp
and
cmp
or
ret
mov
mov
movsb
jp
xor
sub
inc
inc
ficoml
lret
shlb
sbb
jp
jp
out
loope
iret
roll
int
shlb
mov
adc
jge
push
xchg
sahf
mov
imul
mov
xchg
or
inc
adc
xchg
fnsave
mov
xchg
out
test
mov
dec
sbb
pusha
divl
and
or
xchg
inc
test
jns
imul
sbb
sti
xchg
mov
push
lods
stos
jl
clc
int
lea
xlat
push
mov
fildll
dec
aaa
cli
out
test
pusha
testl
mov
lahf
push
pop
mov
mov
pop
mov
ret
pop
adc
pop
mov
fldcw
or
or
fs
pop
mov
jns
sub
lcall
pop
cwtl
clc
xchg
fwait
xchg
aas
add
aad
das
dec
inc
fdivrl
xchg
mov
addl
je
push
cmp
mov
mov
sti
jg
rorb
cmp
dec
sarb
out
fsubrs
or
sbb
sbb
xor
aaa
fwait
or
and
iret
imul
xor
push
movsl
pop
ja
testl
push
adc
repz
cli
xchg
push
cmpsb
pop
icebp
xlat
je
fidivrl
sub
out
jns
int
adc
jp
mov
rcrb
movsl
cmp
sub
insl
inc
and
aas
xchg
enter
dec
inc
fnstcw
and
dec
filds
imul
mov
ds
xchg
sub
mov
pop
in
jnp
and
mov
xchg
out
les
int3
addr16
adc
call
pop
jp
push
shll
movsl
sub
imul
dec
inc
sbb
dec
test
out
ja
sbb
test
cmp
or
int3
mov
int3
arpl
icebp
mov
and
and
mov
cli
cmpsb
andb
jb
mov
push
aad
xchg
fstps
mov
outsl
xchg
dec
mov
jo
cmp
xchg
mov
stos
push
fidivl
sub
and
sbb
out
movsb
xor
dec
stc
or
jne
pop
push
imul
push
out
xor
aas
movsl
in
adc
jg
dec
in
pop
mov
mov
lcall
lahf
cld
xchg
rcll
adc
ret
mov
jbe
mov
jb
cmp
xor
aam
inc
inc
xchg
sub
je
mov
push
ret
sub
ljmp
in
xchg
sub
int
popf
je
mov
pop
xor
or
int3
push
dec
xchg
insl
or
cld
push
pop
out
xchg
pop
loop
cwtl
jp
mov
push
mov
jns
js
repz
imul
shrl
jl
in
repnz
jp
into
int
and
nop
mov
xchg
jne
ret
lret
movsb
mov
mov
adc
das
js
ret
mov
call
out
pusha
adc
nop
aaa
pop
repz
dec
insb
add
pusha
js
sbb
xchg
repnz
outsb
xchg
mov
adc
xor
push
scas
xor
push
ret
rorl
loop
xchg
ficoms
mov
subb
icebp
hlt
sbb
cmp
lds
incl
movsb
jmp
jl
jp
jmp
xor
xor
sahf
push
std
dec
add
xchg
sub
ret
dec
lds
call
xor
vpshufhw
sbb
scas
cmp
call
sub
sub
pop
cmc
ss
dec
jae
fdivr
in
insl
push
out
shrl
adc
test
jp
ret
pop
fscale
xchg
mov
mov
std
mov
xchg
push
repz
ret
mov
sarb
je
jno
add
and
push
ljmp
filds
push
test
clc
sahf
push
mul
mov
add
ficompl
and
jns
inc
add
stc
inc
arpl
jmp
imul
es
rep
ja
enter
hlt
dec
popa
sti
ja
out
xchg
cmp
pop
pop
cmc
out
popf
xchg
mov
sub
sub
fs
in
test
push
cld
aad
mov
scas
ret
mov
in
add
jns
js
push
imul
mov
sbb
daa
ret
cli
and
xchg
fs
fwait
aam
popf
ja
aad
lret
xchg
stos
aam
out
add
mov
mov
cmp
mov
cmp
inc
xlat
outsb
jns
pop
in
add
addr16
pop
fnsave
inc
mov
pop
sahf
mov
dec
mov
shll
push
pop
in
insb
cmpsb
in
xchg
and
xchg
xor
jbe
movsb
cmp
in
jmp
les
push
dec
loopne
in
inc
testl
jmp
stos
jnp,pt
jno
dec
cwtl
lods
inc
lret
int3
jo
push
mov
jecxz
jne
lcall
sub
pushf
bound
mov
ja
ds
js
push
mov
dec
ds
jg
das
jle
xchg
add
aaa
ss
mov
push
sub
push
rcrb
out
pop
mov
mov
sub
mov
fiadds
nop
leave
cwtl
adc
jnp
pop
fisttpl
rcll
mov
mov
inc
test
fwait
rdmsr
cmpsb
cmp
pushf
mov
and
fs
out
xchg
js
aaa
jns
adc
mov
repnz
inc
mov
pusha
inc
daa
out
xor
loop
dec
jo
pop
cmp
sahf
insb
jp
in
cltd
mov
shlb
ss
xor
bound
mov
orl
sbb
mov
push
jo
cmc
pop
lret
andb
push
adc
les
adc
push
pop
cld
mov
ljmp
rclb
fldcw
pop
and
nop
popf
outsb
mov
scas
mov
cmp
adc
pop
std
scas
popf
out
scas
pop
pop
xor
pusha
in
mov
push
mov
or
sub
pop
push
test
push
cmp
pop
repnz
sub
pushl
add
mov
test
stos
cs
lods
lahf
xor
aam
xchg
nopl
inc
sbb
test
mov
scas
icebp
das
nop
mov
cli
inc
cmc
lea
or
loop
js
icebp
mov
push
fwait
mov
sahf
mov
inc
mov
xchg
mov
cmp
shrb
fs
mov
pushf
jecxz
outsl
and
in
fdivrl
mov
and
push
imul
int3
pop
or
popa
and
sbb
mov
mov
clc
popl
xchg
lock
xchg
or
mov
jbe
inc
test
jge
fsubs
loop
mov
out
fs
adc
xchg
repz
jle
pop
push
push
call
stos
in
or
adc
jg
hlt
in
dec
rolb
cmpsl
leave
clc
pop
bound
pop
and
imulb
add
shl
stc
ret
ficoms
mov
jecxz
enter
xor
out
ror
push
push
fldcw
or
xlat
pop
addr16
inc
push
cltd
loopne
lret
aaa
push
gs
andl
xchg
stc
out
hlt
sahf
outsl
std
add
retw
sahf
push
jmp
jp
jg
sbb
pop
sbb
jle
inc
lret
bound
push
lret
lods
adc
adc
mov
addr16
hlt
clc
add
jg
pop
loop
jecxz
sbb
add
mov
nop
je
je
ss
mov
cltd
fcmovu
nop
aaa
or
testb
je
stc
out
daa
push
cmp
in
hlt
inc
jp
mov
fs
pop
movsb
sar
ret
inc
mov
mov
mov
dec
enter
and
adcl
mov
add
repz
stos
cmp
ja
ret
orb
mov
fstpl
negl
or
push
in
adcl
adc
push
jg
stos
or
xchg
inc
cmpsl
push
aam
push
jbe
jno
xor
jmp
push
push
iret
jp
pop
and
jp
and
dec
data16
fsub
or
mov
xchg
lods
add
test
stc
xchg
mov
or
mov
ds
inc
ljmp
inc
shrb
or
ja
dec
inc
stos
mov
test
dec
test
movsl
lods
xor
scas
xchg
mov
cmp
sahf
xor
add
sahf
and
ficomps
mov
movsl
mov
or
pop
aaa
negl
lret
lds
mov
and
push
jns
fldcw
push
mov
push
jl
js
xor
mov
cld
sbb
and
dec
or
xor
and
mov
xor
xchg
pop
sahf
lds
rcl
dec
out
cmp
aam
sbb
mov
or
push
aas
and
push
jno
pusha
scas
imul
fadds
mov
ss
adcb
jecxz
sub
cmp
xor
insb
sub
jg
ds
data16
aad
subb
pop
mov
imul
mov
repnz
inc
fsubp
enter
jae
mov
iret
fdivs
inc
iret
shll
pop
pop
push
dec
filds
xchg
insb
xchg
jae
pop
sub
xor
je
sub
jno
scas
xor
imul
daa
call
adc
call
loop
mov
xor
pop
mov
pop
ja
sub
dec
das
mov
rorl
popf
aas
inc
xchg
aas
jmp
inc
out
pop
addr16
push
ss
test
outsb
jns
jle
aaa
stos
in
add
sub
cmpb
out
jl
push
je
inc
push
sub
incl
frstor
push
idiv
pusha
sbb
imul
out
push
cmp
repz
cmp
mov
xchg
mov
jp
cmpsb
shrb
out
mull
enter
aam
mov
out
in
iret
and
sub
ds
push
scas
xorl
fistpll
inc
pushf
xor
data16
mov
fbstp
ljmp
nop
test
in
and
int
jecxz
insl
add
add
pop
clc
bound
jne
pop
pop
icebp
and
aad
ljmp
ror
push
adc
cltd
or
cmp
jl
and
cmp
je
mov
insl
lea
xchg
push
and
jne
shrb
push
fimull
into
adc
cmp
fwait
push
or
mov
xchg
mull
xor
addl
scas
fnstenv
sbb
imul
inc
push
jmp
ret
push
loop
outsl
push
mov
mov
mov
jg
ret
pop
or
mov
inc
pop
in
sbbl
lret
cmp
shll
test
out
fs
or
jge
ret
ret
add
fs
pop
clc
xor
adc
fwait
mov
iret
dec
mov
lcall
mov
push
dec
adc
popa
inc
je
test
shlb
push
mov
dec
cmp
shlb
fldenv
xchg
cli
dec
fildll
mov
xchg
sub
dec
sbb
push
sbb
cltd
lahf
inc
dec
int3
test
jne
lods
hlt
inc
fsubl
xlat
add
xchg
xchg
flds
cmp
xchg
fwait
loop
jge
popl
pop
in
sahf
data16
enter
cld
addl
test
fiaddl
push
jge
das
lock
pop
lock
lods
inc
and
jae
adc
xchg
xor
movsb
dec
push
test
pop
sbb
jmp
sub
jge
xchg
xchg
je
fildll
jge
call
shrl
icebp
push
mov
jecxz
jo
repnz
call
addr16
push
pushf
js
cli
test
nop
or
test
leave
jno
cld
pop
sub
jae
or
inc
and
lret
push
and
cld
mov
cmpsl
je
out
xor
sbb
arpl
inc
inc
lcall
or
sahf
fisubrs
testl
in
xchg
test
das
mov
mov
sub
push
stos
jne
and
fisttpll
dec
mov
jl
movsl
dec
jnp
inc
loop
rcr
insl
imul
jge
lret
bound
adc
mov
jne
xchg
adc
or
jle
out
test
icebp
push
sbb
in
lock
jg
jae
decl
inc
push
ljmp
out
and
adcb
rorb
push
adc
pop
in
enter
mul
or
push
or
jae
lret
mov
test
outsb
push
mov
rcll
or
sub
daa
jae
arpl
lret
lea
jne
js
cmp
or
jo
dec
lock
movsb
cld
pushf
xor
sub
dec
pusha
sub
xchg
xchg
mov
dec
pop
mov
mov
adc
or
add
xor
in
push
xchg
mov
jbe
ret
into
jle
in
inc
mov
cmpsl
fwait
cmp
push
and
ljmp
test
xor
je
jae
xchg
loopne
sub
mov
pop
dec
push
dec
fistpl
mov
mov
es
ffreep
dec
xchg
cld
jmp
jmp
lret
jns
and
in
dec
mov
incb
jns
mov
push
fwait
ret
mulb
pusha
pop
dec
out
adc
js
call
dec
pop
pop
aad
es
pop
or
icebp
iret
stc
sti
ds
jns
out
ret
nop
popf
and
test
inc
mov
push
sbb
stc
rorl
rorb
dec
loop
sub
jl
jmp
adc
dec
xchg
imul
dec
out
out
mov
aaa
fldcw
xor
lea
addr16
test
scas
leave
sbb
adc
inc
fisubs
test
cmp
inc
sub
mov
xor
nop
not
add
ja
mov
pop
div
sbb
jo
cmp
dec
adc
icebp
push
movsl
popa
les
fnstcw
clc
jg
aam
rolb
scas
pushf
mov
into
ja
inc
outsl
mov
das
sub
cwtl
das
cmp
add
sbb
xchg
add
sub
dec
nop
test
mov
fimuls
ret
jns
fidivrl
ss
xchg
mov
int3
and
push
push
popa
mov
mov
jle
cmp
and
stos
push
add
shl
mov
mov
cmp
insb
out
jle
or
adc
push
test
fistl
fdivrl
sub
lret
jne
addr16
push
loop
repz
loopne
xor
lds
dec
loope
out
push
or
or
int
dec
push
jle
mov
pop
mov
bnd
push
sbb
adc
adc
adc
fsubs
cmp
xchg
jg
les
ds
fcomip
pusha
adc
adc
lock
out
cmp
jb
scas
cmpsb
cmp
add
push
sbb
daa
inc
pop
or
movsb
cmp
push
jle
jp
sahf
lods
sub
jb
cmp
jle
xor
mov
add
jne
movsb
ja
push
dec
mov
cmp
mov
xchg
push
mov
pop
movsl
xchg
mov
pop
in
shlb
xlat
push
mov
mov
subb
in
inc
fs
mov
mov
sbb
pusha
cltd
xor
sbb
and
sbb
lret
test
in
iret
push
mov
sub
mov
mov
push
cmp
mov
xchg
mov
pop
xchg
mov
std
and
add
scas
xor
or
add
and
fidivl
cwtl
jge
insl
cmp
pushf
daa
ret
or
test
mov
xor
fmull
loopne
cmp
pop
rolb
fsubl
inc
dec
or
cmp
insb
add
jge
inc
outsb
cmp
stos
test
cmp
and
cmp
cmp
or
cmp
pop
cld
push
insl
add
lds
and
jl
inc
pop
sub
aaa
cwtl
test
popa
cmp
aaa
test
mov
cmp
cmpsb
imul
mov
inc
push
mov
enter
rol
jmp
adc
in
mov
fistps
xchg
or
adcb
mov
filds
mov
sbb
push
lods
xchg
push
imul
pushl
ljmp
lock
ja
push
mov
dec
popa
xchg
outsl
push
add
loope
mov
cltd
pop
push
sub
jg
loope
nop
loop
or
mov
stc
lret
mov
rorb
mov
pop
and
sub
cltd
lret
push
call
sarb
jge
mov
je
aad
aad
pop
mul
jge
adcb
lds
js
out
pop
mov
cmpsb
cmp
in
lcall
in
mov
jo
adc
dec
inc
aaa
testl
hlt
push
in
andl
sbb
dec
in
arpl
mov
cmp
test
push
jb
inc
mov
cmpsb
stc
arpl
cltd
dec
sbb
scas
imul
fcomps
subb
ljmp
pop
mov
ss
lock
movsl
sub
movsl
pop
out
or
jl
ret
outsl
jge
pop
outsl
add
out
in
sti
xlat
pop
jge
push
mov
cmpsl
stc
add
jb
add
mov
push
mov
lret
idiv
shrl
mov
or
rcll
mov
add
push
push
call
pop
outsl
push
out
inc
fsubrs
mov
push
out
fdivl
or
xchg
adc
push
gs
repnz
and
pop
aad
lahf
ss
jbe
sbb
leave
pusha
call
or
shr
int
sub
pshufw
or
xchg
inc
pop
xchg
popf
popa
ds
mov
pop
repz
popa
xor
push
push
and
jbe
and
fsubl
call
movsl
xor
push
out
mov
into
gs
mov
mov
fs
js
lret
fmull
movsl
daa
push
lods
nop
xchg
pop
scas
sub
lcall
ljmp
xor
push
or
out
push
push
shrb
cmp
scas
and
iret
out
test
sbbb
inc
inc
fnsave
adcb
add
jb
rcrl
call
mov
mov
pop
stos
xor
lcall
or
lock
xor
orl
xchg
push
out
add
jno
add
fcoml
scas
iret
movsl
test
sbb
xor
lret
mov
jl
adc
mov
mov
push
xchg
sub
aaa
popf
jo
ss
push
pop
pop
scas
inc
mov
jb
mov
adc
mov
mov
jle
or
data16
data16
cwtl
pop
in
cmp
rcrl
cld
push
imul
push
cmc
por
fstp
jbe
xchg
int
or
lods
test
jmp
mov
push
pop
lock
pop
roll
ret
lret
cs
scas
scas
sbb
mov
imul
and
or
adc
pop
sbb
jle
jnp
adc
pop
pusha
adc
popf
xor
dec
push
cltd
cmp
out
inc
jecxz
popa
clc
mov
adc
mov
lock
adc
shlb
cmp
cmpsl
push
cli
in
jo
leave
mov
data16
mov
push
into
mov
in
inc
fcomps
xchg
inc
push
sbb
or
popf
icebp
mov
sbb
orl
test
loope
xor
inc
lret
movsl
popa
xchg
sub
loop
test
iret
dec
into
and
fmull
xchg
push
fimuls
andps
insb
test
movsl
mov
pop
repnz
jne
cmpsb
dec
xor
ja
mov
sarb
and
mov
xor
sub
test
sbb
push
jmp
popa
fs
push
andl
and
xchg
imul
jns
imul
jb
fistpl
jo
pop
add
test
sub
imul
or
subl
dec
cmpsb
and
sub
push
out
test
and
xor
pop
cmc
rcll
mov
sarl
sbb
stos
es
push
pop
mov
jp
lds
add
imul
cwtl
int3
in
rorb
mov
mov
jae
inc
mov
rolb
stc
nop
pop
and
pop
scas
pop
ja
out
dec
jp
mov
xor
adc
xchg
xor
aam
iret
sbb
fwait
bound
das
fisubs
scas
xchg
mov
xor
fsubr
fisttpll
rol
aas
out
cmc
lods
jne
mov
lea
leave
push
inc
or
rclb
mov
sbb
mov
js
fwait
inc
mov
mov
mov
or
icebp
mov
fwait
sub
adc
lds
sub
adc
psllq
or
pusha
shrb
or
pop
addr16
inc
mov
jg
popa
mov
ja
push
jmp
cwtl
stos
inc
or
cmp
mov
xor
test
ficomps
inc
fwait
lock
inc
out
xlat
rcrl
stos
inc
lock
mov
into
mov
rcrl
mov
dec
xor
pop
nop
and
push
testl
scas
pop
mov
in
mov
ror
mov
sti
repnz
sub
enter
notb
xchg
mov
repz
repnz
and
or
jne
xor
mov
pop
repz
insb
lock
xor
cld
mov
push
fdivr
xchg
orl
lods
or
adc
and
inc
lahf
xchg
push
sbb
inc
push
js
dec
add
sub
ds
dec
in
xor
add
add
sub
mov
lea
mov
imul
xchg
mov
mov
mov
push
adc
cltd
leave
lahf
cwtl
sbbb
jo
add
adc
cmp
imul
pusha
jo
insl
popf
xchg
xchg
and
lcall
stos
push
mov
loop
fildl
sub
adc
fdivr
xchg
in
aas
xchg
inc
lds
rcll
inc
xlat
inc
hlt
push
in
call
or
lods
cmp
cmp
jg
dec
and
inc
orl
jnp
mov
std
mov
stos
add
and
dec
call
inc
fsts
jp
mov
ror
mov
jbe
sti
xlat
mov
andl
ja
in
lods
inc
push
push
fidivl
aas
mov
cmpb
pop
pop
sbb
xor
nop
daa
addr16
clc
adc
jno
xchg
cmp
mov
pushf
fnsave
imul
inc
scas
inc
pop
mov
mov
jle
ds
xor
lea
nop
dec
scas
cli
xchg
mov
fisubrs
fidivrs
testl
adc
cmc
mov
cmpsb
jg
fcomps
sbb
adc
pop
pop
repnz
mov
jle
inc
inc
ljmp
cmp
cld
xchg
lret
push
mov
sbb
fsubl
out
stos
inc
lods
pop
sbb
pop
pop
repnz
testl
je
dec
inc
ficoml
aaa
imul
bound
insl
inc
fstps
mov
jne
adc
ss
ret
jne
push
pusha
xor
xchg
das
xchg
sub
mov
popa
repz
rolb
andb
push
shlb
adc
repz
mov
fisttpll
mov
lar
cwtl
xor
xchg
xchg
decb
or
stos
sub
mov
lret
adc
rcrl
dec
jecxz
jmp
mov
rcl
loopne
loope
loop
or
sahf
in
test
mov
or
mov
adc
stos
jle
cmc
dec
lret
cmp
lock
and
cmpsb
scas
and
stc
sbb
cltd
sbb
scas
mov
ret
xor
js
addl
leave
sahf
xor
push
add
pop
xchg
jbe
sbb
scas
inc
jmp
or
jae
iret
mov
loopne
cmpsb
cmp
xor
pop
insb
push
mov
inc
aad
test
inc
imulb
js
dec
mov
pop
int
in
and
repnz
add
xor
cmpsl
xchg
xchg
push
call
sub
adc
jnp
ret
pop
pusha
pushf
pop
icebp
int
loope
adc
push
mov
xor
out
push
mov
push
xchg
add
addr16
push
add
xchg
mov
add
lds
mov
jecxz
je
mov
or
cmp
cmp
negl
mov
pop
lock
scas
cmpsl
loope,pt
ja
pushf
add
pop
xor
xchg
sub
push
in
xchg
mov
inc
test
cltd
fldenv
imul
lock
into
push
movsl
decl
ja
cmc
loope
stos
xchg
sbb
fimull
pop
fs
ss
add
ja
hlt
push
fwait
call
adc
push
mov
ret
pop
or
and
mov
jl
lods
inc
jns
xchg
xor
adc
pop
dec
xor
arpl
mov
pop
adc
mov
movsb
mov
push
sub
scas
shll
ja
xchg
sbb
loope
lahf
pop
leave
jp
push
cs
les
shlb
add
aad
jp
leave
iret
mov
mul
in
in
or
addr16
jp
lods
mov
jb
fs
rorl
movsb
push
or
in
xlat
dec
dec
pop
push
jecxz
jo
xor
ja
cli
int
dec
ffree
fwait
jl
rorl
jns
add
or
sbb
or
mov
sbb
or
dec
test
fidivl
mov
loop
inc
iret
icebp
in
test
jnp
push
or
xchg
sub
mov
ljmp
icebp
mov
loope
sbb
daa
popf
cmp
xchg
push
mov
jecxz
xor
fprem1
lods
jp
cli
icebp
mov
adc
xchg
adc
push
jmp
insb
repz
inc
loopne
lret
into
mov
nop
int3
sub
sti
adc
shl
and
test
push
jne
clc
clc
mov
xor
cwtl
repnz
clc
and
jl
or
inc
ret
fimull
aam
jns
jo
pop
dec
pcmpgtb
adcl
adc
stos
or
enter
lcall
push
cmp
and
or
test
jns
xor
mov
es
ljmp
sbb
push
ja,pn
pop
xlat
outsb
sbbb
iret
sub
inc
pop
mov
cmpsb
in
aam
jge
lcall
stos
jb
das
enter
push
xchg
inc
pusha
movsb
push
lock
add
lods
push
xor
cs
xchg
fisubl
adc
jp
test
subb
popf
lods
rcr
jmp
cvtdq2ps
inc
adc
int
loope
xchg
pushf
out
dec
xchg
test
mov
shrb
cwtl
stos
mov
push
imul
mov
dec
jns
sub
pop
daa
cmp
xor
test
pop
adc
ror
sbbl
mov
cmpsb
inc
mov
push
mov
in
sbb
pop
lods
decl
and
ljmp
dec
sub
mov
dec
push
push
inc
and
cmp
xchg
fbld
scas
cld
das
mov
mov
inc
add
jle
sub
lahf
test
or
sub
into
out
outsb
inc
inc
ret
inc
aam
jns
dec
or
fidivl
notl
xor
sahf
daa
mov
daa
mov
xchg
jg
int
mov
pop
repz
nop
mov
push
xchg
in
adc
out
sub
inc
push
out
adc
outsl
mov
frstor
inc
jmp
lret
xchg
sub
scas
cmp
nop
mov
push
repz
loop
or
les
push
push
pop
lods
xchg
xor
cmp
aaa
into
dec
add
push
insl
xchg
push
sub
push
xlat
divl
xor
out
push
xchg
ljmp
push
cmp
pusha
movsl
lds
jbe
add
std
and
scas
dec
out
push
dec
sarb
inc
push
gs
mov
jmp
cmp
sbb
bound
dec
sub
scas
inc
xor
push
int3
arpl
daa
ljmp
decl
xchg
repnz
or
jnp
aam
rorl
daa
pop
cmpsl
pop
icebp
mov
out
jbe
jo
arpl
imul
fs
xchg
mov
and
rcrb
add
xchg
out
out
pushf
mov
cmp
out
xchg
cmp
mov
loope
imul
pusha
lock
ret
or
xor
arpl
iret
enter
dec
enter
scas
outsb
lret
fcomps
scas
inc
movsb
jmp
mov
push
int3
cmpsb
mov
les
sbb
scas
mov
push
stos
mov
cwtl
andl
rorb
adc
or
xor
xor
lock
xchg
pop
inc
pop
cltd
test
ret
das
loopne
fwait
push
pop
mov
in
pop
hlt
adc
xchg
lock
incb
and
cmp
mov
fldenv
mov
daa
mov
lcall
movsl
popf
mov
fucomp
xchg
xlat
and
je
ds
movsb
and
shlb
mov
dec
sahf
mov
mov
and
jmp
add
inc
sarl
and
mov
lahf
out
and
pop
fwait
jns
push
ret
hlt
mov
jnp
pop
stc
sbb
pop
or
adc
add
rcrb
shll
rcrl
repz
xor
mov
pop
fdivl
adc
inc
inc
inc
cli
lret
pushl
stos
cmp
add
mov
mov
fucomi
dec
adc
push
push
xchg
popw
pop
mov
int3
cld
dec
out
inc
xchg
dec
pop
mov
cld
inc
cmpsb
mov
idivl
inc
nop
mov
push
ljmp
jno
and
cmpsb
lret
xchg
inc
decl
mov
push
les
addr16
add
notl
mov
lea
lods
inc
insb
stos
adcb
xor
test
sbb
mov
jo
sti
dec
shrl
xchg
xor
xchg
imul
dec
sbb
pop
cli
repz
adcb
fs
lretw
cli
xchg
cld
scas
mov
in
sbb
jmp
fisubl
or
sub
fiaddl
inc
jns
ds
mov
out
cmp
push
ljmp
pop
xchg
sbb
cmpsl
cmp
add
es
pop
scas
cmp
adc
lret
bound
mov
xlat
gs
push
jge
xchg
and
jg
out
xorb
lret
popa
insb
mov
jmp
mov
sub
xor
push
add
pop
int3
faddl
or
jecxz
sub
xlat
adc
mov
push
jne
sbb
lock
cld
xchg
ret
lret
cmp
sbb
sub
cmp
xor
arpl
into
pop
call
inc
mov
jle
xor
das
addb
dec
dec
in
loop
xorl
jmp
add
outsb
jle
repnz
dec
push
ret
outsb
inc
stos
shr
sub
mov
sti
stos
daa
adc
lods
stos
dec
dec
scas
sub
test
adc
jae
into
call
dec
rcrb
stc
inc
mov
mov
push
fwait
jmp
jne,pt
mov
add
and
cmp
lea
mov
gs
xchg
daa
loopne
arpl
ret
sub
inc
dec
push
xor
add
fimull
add
pop
cmpsb
lock
add
sti
adcb
pop
lret
addr16
lods
stos
mov
mov
pop
scas
inc
cmp
jnp
cmp
mov
div
xchg
mov
fidivrl
dec
mov
in
sbb
lock
movsb
movl
rcrl
mov
aad
hlt
mov
rclw
iret
jg
lea
roll
sbb
inc
subl
ljmp
test
loopne
adc
cmpsb
inc
jnp
dec
pop
ljmp
push
out
lods
pop
sbb
push
jb
sbb
jnp
pop
imul
loop
adc
cmpb
sbb
inc
pop
test
fisubs
add
pop
xchg
cmc
mov
push
add
enter
pop
ljmp
aas
mov
cs
mov
mov
mov
mov
mov
sbb
push
or
or
xchg
xchg
lock
sti
iret
dec
rcl
jg
adc
mov
ljmp
inc
gs
mov
xchg
jno
mov
jecxz
push
xlat
xor
sbb
dec
dec
call
sub
mov
inc
sbb
mov
dec
loopne
into
push
mov
into
cld
jl
xchg
mov
xor
push
test
sti
xor
sbb
xor
inc
add
mov
jp
push
out
cmp
dec
sbb
lahf
inc
fcmovbe
sbb
inc
cmc
fsubp
movsb
lock
and
insb
add
xlat
js
icebp
in
std
xchg
cltd
movsl
jecxz
mov
adc
mov
cmp
lret
mov
icebp
ror
push
or
and
sbb
mov
clc
outsl
cmpsl
or
rcrb
mov
jg
or
dec
xor
call
jg
repnz
js
inc
adc
cltd
orl
cmpsb
mov
jb
sbb
sub
je
add
add
adc
dec
xchg
sub
mov
mov
xchg
rcl
sub
adc
in
popf
dec
dec
add
adc
pop
mov
popa
outsb
jne
pop
sub
call
repnz
and
fwait
push
add
push
stos
in
fsubr
out
pop
jp
xorb
gs
jg
dec
xor
mov
aad
inc
jge
pop
pop
or
cmp
loopne
add
push
sbb
jl
lret
scas
sbb
cmp
ret
or
pop
fdivrs
scas
stc
push
pop
scas
mov
idivl
sti
out
or
mov
push
test
jle
xchg
pusha
loopne
xchg
popa
or
dec
and
testb
cwtl
cli
dec
inc
inc
mov
xor
mov
dec
aad
mov
rclb
cmpsl
xor
push
inc
popa
xchg
add
xor
test
add
push
dec
cmc
push
addr16
sub
icebp
int3
mov
sbb
stos
sarb
sti
pop
lret
add
push
sub
mov
sbb
xchg
push
lock
outsl
dec
mov
mov
rcrl
add
cmp
add
mov
push
xor
xor
jecxz
cmp
hlt
cmp
xchg
imul
adc
mov
pop
jmp
in
sarl
mul
pop
add
ds
stc
bnd
jl
imull
xor
add
cmp
push
je
popf
movsb
out
cmpsb
les
sub
pop
mov
nop
mov
push
in
push
mov
xchg
xor
and
xchg
movsb
mov
mov
jns
lock
mov
jo
jg
out
cmp
xor
adc
and
mov
xchg
sub
aas
addr16
rorl
repnz
xor
aaa
dec
mov
or
repnz
push
jmp
jg
cwtl
cmp
inc
gs
dec
jb
clc
xor
gs
mov
movsl
cwtl
shl
sbb
insb
fs
es
push
pushf
ret
out
xchg
data16
add
mov
inc
dec
push
cli
lock
jae
test
inc
shl
orl
daa
adc
mov
mov
ja
jecxz
orb
fwait
push
dec
cmc
xchg
out
outsl
cs
aam
mov
lret
mov
dec
shll
arpl
sub
ficompl
call
test
dec
push
test
xchg
scas
inc
arpl
imulb
mov
xor
jecxz
cmp
out
sti
xchg
daa
or
clc
sub
lods
or
cs
fiadds
les
mov
xor
aam
into
sbbl
dec
fisttpl
loope
pop
pop
loopne
inc
jp
and
in
fsubs
bound
fdivl
add
addr16
xor
inc
and
mov
fildl
mov
xor
cwtl
sbb
inc
leave
mov
cli
aas
addr16
in
adc
daa
int3
push
dec
jnp
cli
cmp
jnp
dec
ret
out
pop
int
and
mov
cmpps
sarb
or
outsb
mov
es
subb
adc
mov
jb
sarb
stc
les
adc
push
mov
push
cmp
hlt
sbb
in
dec
cli
popl
cld
push
out
adc
xchg
adc
inc
pop
xor
and
jno
out
inc
mov
ljmp
call
adc
dec
and
bound
cli
xlat
ljmp
jno
hlt
iret
inc
fiaddl
lcall
arpl
xchg
testl
jb
push
jle
or
lock
fistl
fwait
xlat
cmpsl
mov
les
rol
mov
aam
push
rclb
mov
in
imul
push
js
mov
cld
gs
test
and
aas
lahf
insl
push
int
in
mov
inc
lret
arpl
xchg
outsl
or
repz
int3
pop
jecxz
push
fwait
and
sti
push
push
push
inc
xor
cmpsb
repz
push
aaa
add
mov
pop
leave
push
pop
push
psrad
xchg
mov
inc
scas
sbb
into
or
mov
dec
and
in
call
scas
inc
fildl
lock
int
scas
test
lcall
xor
xor
add
push
mov
sub
lret
shrb
add
pop
cmp
notl
jecxz
fsubrs
xor
out
imul
sbbl
push
dec
loope
cmpsw
xor
xchg
pop
inc
scas
cmp
jmp
xor
dec
cwtl
mov
adc
cli
mov
lods
inc
add
and
test
mov
xchg
sti
or
sbb
pop
iret
mov
sub
sbb
arpl
icebp
sarl
push
xlat
test
lods
sarb
push
bound
xchg
or
outsb
inc
fidivrl
mov
adcb
repz
es
or
lcall
mov
lret
or
cmpsl
sbb
xlat
inc
push
pop
addl
and
movsb
test
adc
daa
clc
cmpsl
inc
inc
scas
inc
je
scas
push
sbb
cmp
ret
push
xchg
mov
shrb
iret
aad
hlt
repz
mov
pushf
xor
mov
mov
and
ficompl
cmpb
and
inc
clc
and
and
test
fs
xchg
push
scas
cwtl
call
push
movsl
test
add
ret
inc
pop
push
push
push
adc
mov
repz
push
fimuls
mov
pop
mov
mov
mov
xor
sbb
dec
inc
jle
xor
shrb
pop
pop
sub
lds
cmp
out
cmp
sbb
leave
test
cmpsl
push
cs
or
and
jecxz
mov
enter
mov
add
scas
and
and
pop
idivb
cli
ret
les
push
fnstcw
dec
dec
stos
pop
and
push
jo
inc
sarl
push
aad
gs
pop
mov
and
ss
mov
es
out
aam
cmpsl
aas
cmp
or
mov
adc
push
sub
js
inc
inc
and
out
lret
es
push
testl
scas
cs
mov
push
ljmp
inc
pop
jle
subb
mov
icebp
pop
shll
repnz
sub
cs
inc
fdivp
jge
test
je
repnz
sbb
stos
imul
outsl
mov
adc
sub
sub
inc
pop
push
sub
inc
pop
xchg
sub
dec
lods
jmp
xchg
enter
fnsave
rcll
pop
loopne
scas
push
popf
je
lds
mov
mov
ficompl
mov
jno
adc
std
pusha
fstpt
addr16
cltd
repnz
ficoms
lea
push
jbe
mov
mov
add
iret
data16
shlb
int
in
sbb
and
fcomps
repz
imul
jl
mov
adc
sti
adc
jle
inc
pusha
lret
inc
mov
adc
ja
push
loope
and
icebp
adc
and
sahf
add
or
push
lcall
stos
jo
sub
mov
shlb
out
mov
jl
and
popa
cli
inc
lret
jne
adcb
stos
mov
and
dec
mov
out
push
or
lcall
jb
stc
dec
xchg
adc
xchg
xchg
aad
loop
sbb
shlb
pop
loope
sub
addb
push
jbe
stc
pop
jg
js
pop
out
rclb
leave
out
out
mov
ss
bswap
fsubrl
sub
push
inc
and
shrl
lcall
in
rcrl
add
push
pop
aas
stos
jne
stos
movsb
and
add
arpl
popa
lock
pop
aam
add
cmpsb
lock
rcl
sti
mov
mov
mov
xchg
pop
in
inc
in
nop
or
scas
and
pop
mov
ss
cmp
into
push
es
data16
xchg
xchg
push
mov
int3
sbb
dec
push
cmp
cmp
lret
push
in
dec
aas
and
ljmp
scas
and
pop
adc
insl
mov
cmp
cmp
dec
and
cmpsb
add
mov
adc
stc
cmp
ja
andl
jp
fldcw
jbe
mov
lds
insb
cld
xor
or
ss
push
xchg
jmp
pop
scas
xor
or
mov
sbbl
xorb
andl
push
pop
mov
into
movsl
mov
je
adc
xor
pop
out
inc
pop
popl
jecxz
mov
sbb
cmpsb
push
in
or
into
push
je
shrb
xchg
jo
orl
fs
ss
cmp
jae
ja
push
pop
shll
add
movsb
cmp
pop
pushf
push
dec
sub
test
aas
mov
sub
push
adc
mov
xchg
jmp
rclb
lahf
add
adc
xorl
icebp
cmpl
outsb
movsl
pop
mov
enterw
sub
mov
ret
cmp
int3
adc
sbb
insl
jb
pop
pop
sbb
fcompl
cmp
push
mov
sbbb
jbe
jp
pop
sahf
xchg
hlt
cmp
add
xor
cwtl
stos
xchg
hlt
inc
add
es
xchg
cmc
outsb
add
orl
sub
mov
nop
ljmp
inc
lret
push
imul
xchg
shr
iret
sub
mov
push
xor
jp
adc
fwait
lret
fistpll
dec
dec
pop
arpl
mov
outsb
pop
jmp
or
es
imul
loop
dec
sub
fs
or
jl
xchg
sub
pop
pop
sahf
mov
sub
popa
test
add
jecxz
dec
add
inc
mov
imul
inc
cmpsb
cmp
mov
push
dec
out
test
in
insb
xchg
pusha
rorl
mov
mov
add
dec
mov
and
repnz
sbb
xor
daa
scas
push
push
xchg
adc
cmpsl
mov
insl
lret
in
test
fbld
ljmp
xor
lods
pop
pop
push
filds
xchg
cmp
jb
cmp
pop
mov
adc
jno
adc
xchg
cmp
test
jo
jmp
cmpl
sbb
xchg
outsb
in
test
mov
dec
pop
mov
jb
shrl
lret
dec
cmp
clc
cmpsl
or
dec
loope
or
pop
xchg
jnp
rcrl
dec
cmpsl
clc
dec
imul
adc
testb
daa
inc
mov
movhps
pop
mov
cmpsb
div
jb
fs
cmp
test
or
pop
test
dec
jp
imul
mov
jmp
add
mov
pop
adc
jg
in
cmpsb
aad
filds
fidivrl
lock
ljmp
add
dec
jmp
lret
pop
jne
push
cmp
cltd
daa
sub
mov
push
sub
aaa
push
decb
out
add
inc
sub
fldl2e
jbe
sbb
mov
sub
sub
outsl
mov
fs
xchg
push
inc
les
push
push
pop
dec
lods
mov
loope
icebp
jns
lods
fildll
fisttpl
mov
mov
push
in
pop
fidivs
dec
adc
pop
imul
xor
in
inc
inc
lret
test
cli
jae
push
aas
ljmp
push
mov
out
sahf
scas
pusha
in
test
xchg
lods
scas
cmp
jecxz
mov
push
js
pushf
pop
ds
cmp
test
sbb
xor
fistl
sbb
fnstsw
sub
sbb
mov
or
xlat
out
lods
shrl
adc
stos
cwtl
fld
pop
pop
sub
jns
incb
je
test
dec
ds
jl
xor
outsl
jns
cmpsb
andb
mov
sub
dec
cmp
inc
mov
shrb
add
test
and
test
add
test
push
lret
add
cli
and
jne
lret
xchg
sub
and
das
cmp
nop
ljmp
inc
or
mov
js
js
lret
inc
push
into
sbb
aad
or
sub
sub
loope
pop
mov
imul
push
or
icebp
lods
pop
movsb
sti
enter
push
std
rdpmc
dec
and
push
data16
stos
push
or
jnp
cmp
mov
mov
mov
fidivs
lea
pop
mov
sub
cmpsb
inc
push
push
xchg
sub
and
add
adc
sahf
mov
add
fucomip
scas
adc
popa
and
push
nop
sbb
stos
add
movsb
sub
mov
lds
movl
fidivrl
mov
cmp
test
jae
push
or
cmp
dec
scas
inc
mov
bound
stos
outsb
nop
sbbb
pop
fnsave
adc
mov
fimull
mov
int3
pushf
lea
mov
test
repz
mov
stos
xlat
inc
push
mov
clc
jb
movsb
cld
sbb
mov
mov
sub
jle
push
jo
cmpb
loop
fistps
sbb
xchg
jp
dec
mov
into
int3
inc
or
pop
data16
lret
call
in
sbb
pop
pop
cmp
jb
loope
add
pop
add
push
movsl
popl
mov
js
leave
cli
jne
movsb
ds
mov
in
stos
mov
sub
sbb
or
cmp
lahf
test
popa
mov
fwait
xchg
cmpsl
ret
clc
sbb
es
fsubrl
cli
and
push
fildl
or
daa
stos
jmp
insb
dec
aam
test
jae
lcall
jae
ss
repz
into
push
movsl
add
sub
adc
data16
insl
gs
sbb
and
cmp
in
push
pop
jecxz
test
es
gs
dec
ret
pop
cmpsb
mov
dec
jl
test
inc
ljmp
adc
jecxz
inc
stos
and
shll
addb
test
jne
inc
add
and
sub
cmp
push
and
cwtl
das
fsubrs
mov
dec
loop
mov
adc
test
mov
pop
cmp
repnz
push
mov
mov
sahf
pop
jo
loopne
loopne
aaa
xchg
mov
cmp
cmc
rcrb
scas
add
fs
inc
bound
adc
mov
in
pushf
fimuls
jle
pop
push
jle
les
ljmp
outsb
repnz
sbb
add
popa
xor
xchg
cmpsl
fisubl
iret
data16
int
cltd
pushw
out
test
bound
jae
add
and
lea
sar
jle
dec
pop
mov
imul
ja
mov
cmp
stc
mov
xor
mov
inc
push
int
testb
jge
outsl
dec
shrb
ja
jne,pn
mov
jecxz
pop
lcall
sub
ss
icebp
das
xor
sbbb
in
mov
outsl
sti
sbb
mul
jnp
push
jae
dec
mov
mov
sub
mov
or
dec
xchg
shl
sub
test
insl
outsb
add
sub
add
ficomps
inc
dec
pop
cld
pop
icebp
and
fwait
push
lds
jg
je
cmpsl
adc
popf
jno
mov
shll
fsubl
jbe
sbb
lret
shrl
push
loop
adc
dec
test
add
xor
mov
nop
push
lcall
adc
xor
out
test
fcomps
ljmp
insl
ja
push
adc
rolb
dec
rolb
int
cmc
and
and
orl
notb
jp
repnz
test
xor
xor
dec
rorl
lahf
jnp
mov
mov
cmp
jbe
movsl
push
dec
aad
sbb
mov
mov
sub
add
pop
xor
in
xchg
xorb
adc
daa
mov
cmp
sub
adc
testl
xchg
arpl
add
cmpsb
or
push
pop
cltd
aad
int
flds
inc
in
fdivl
cs
sbb
cmp
pop
push
cmp
sarb
cmp
mov
sbb
adc
ss
pop
rorl
leave
fcompl
mov
cmp
leave
mov
lahf
cmc
ljmp
push
dec
pop
or
popf
inc
jg
loopne
outsl
fisttpll
seto
dec
fnstenv
inc
aad
sti
dec
test
jle
mov
dec
dec
movsb
inc
mov
push
decb
sbb
pop
pop
cmp
lret
push
lods
pusha
mov
xor
lret
push
idivb
push
call
into
mov
lea
cmp
test
inc
push
call
sti
int3
dec
add
mov
fsubl
hlt
adc
leave
je
movsl
jmp
cltd
mov
cmp
loop
stc
xchg
icebp
add
xchg
pusha
cmp
insb
xchg
scas
in
push
add
lahf
push
mov
pop
rcrl
lods
scas
movsb
test
jae
lds
inc
test
pop
shr
xor
stos
repnz
push
int3
jbe
jno
jne
cmp
ja
lcall
sti
aam
inc
mov
scas
xchg
jnp
xchg
mov
sar
pop
or
fisubrs
scas
or
mov
repnz
pop
hlt
das
dec
stos
inc
jg
sbbl
pop
xor
mov
dec
inc
fidivrl
mov
mov
aam
loope
xorl
jge
and
xchg
jg
or
lret
jno
pop
sub
inc
xlat
cs
aaa
jbe
pop
cmc
clc
repnz
jnp
push
add
adc
xchg
pop
pushf
jmp
out
xchg
sbb
cld
push
push
scas
sub
out
xchg
das
ret
pop
mov
stc
movsl
cmp
call
and
bound
dec
loopne
test
lcall
lock
cmpsl
pop
push
lcall
and
out
repz
negb
dec
ja
insb
test
lret
cmp
scas
nop
sbb
leave
xchg
fnstenv
repz
ja
les
gs
and
call
or
out
adc
push
je
mov
jne
stc
dec
jbe
cli
inc
repnz
ds
inc
sbb
scas
lahf
xor
pop
mov
xchg
mov
push
xchg
xor
xor
leave
data16
sub
add
test
xchg
fnsave
or
lock
push
sub
stos
mov
pop
test
inc
lret
int
push
mov
pop
jmp
pop
jo
lds
dec
jge
dec
mov
mov
inc
pusha
lea
jo
sub
push
adc
daa
cmpsb
popf
movsb
jg
movsl
mov
fdivrp
jne
dec
and
adc
dec
lahf
bound
mull
dec
sbbl
mov
fucomip
lds
inc
arpl
cmp
dec
push
arpl
fldl2t
cmp
add
stc
stos
and
popf
clc
mov
pop
scas
xchg
and
insl
mov
adc
add
xor
pushf
pop
xor
outsl
or
imul
jmp
xor
adcb
stos
push
lods
push
test
pop
int3
fucom
into
ja
mov
aam
loop,pt
pop
leave
out
add
pop
cmpl
loop
jecxz
adc
or
and
pop
and
xchg
sti
ljmp
xor
mov
idiv
mov
xchg
dec
aas
loopne
adc
mov
cmp
bound
mov
or
mov
inc
inc
ljmp
jmp
lods
mov
mov
add
into
gs
and
jo
mov
test
and
imul
push
dec
shlb
cmp
and
pop
fstpl
inc
fsubl
fcomps
mov
std
cli
xchg
cs
jo
enter
lea
aad
mov
pop
pop
jb
in
fiadds
mov
xor
mov
iret
mov
arpl
push
lret
mov
sbb
iret
and
mov
imul
jl
cmp
xor
pop
rorb
add
jno
mov
mov
enter
dec
loop
sbb
mov
imul
xchg
adc
jmp
lea
jne
add
test
inc
dec
idivb
nopl
fdivrs
xchg
mov
xor
cmp
xchg
jle
push
in
fidivs
or
sub
jb
inc
mov
dec
mov
push
sub
adc
fmull
mov
call
shlb
push
xchg
stos
sub
sub
mov
lahf
mov
add
mov
lea
outsl
mov
xor
aam
mov
rcrb
pop
xor
mov
sbb
push
xor
xor
or
inc
sbb
mov
loopne
ss
bound
push
jb
or
mov
and
inc
xchg
add
jecxz
outsb
lcall
sbb
jae
pop
mov
js
cmc
and
xchg
movsl
cmp
insb
sbb
lcall
loopne
scas
ss
adc
push
popf
xchg
dec
jns
icebp
inc
inc
and
push
lods
or
adc
jo
mov
jle
jle
pushf
push
ljmp
mov
pusha
push
pop
mov
jmp
push
mov
addb
lahf
or
xor
out
aaa
loop
in
into
cmpsl
cmp
or
mov
mov
push
das
insb
add
sbb
insl
inc
imul
shll
imul
fldenv
leave
xor
or
or
dec
sub
loop
loop
lods
cwtl
push
jmp
aaa
pop
sub
mov
repz
and
aad
int
dec
int
jge
inc
cltd
push
mov
and
push
inc
xchg
cmp
pop
mov
dec
out
mov
int3
and
push
rcrl
daa
inc
adc
mov
adc
orb
jl
call
cmpsl
std
mov
mov
xlat
xchg
jb
cmpsb
orb
cmp
pop
in
push
fcomps
mov
and
inc
push
mov
push
data16
xchg
addr16
popf
push
pushf
xor
mov
mov
cmc
addl
xor
pop
mov
push
cmp
cmc
mov
push
out
dec
adc
jp
insl
push
ret
nop
stos
add
fnsave
pop
in
addl
xchg
sbb
cwtl
aaa
jne
adc
pop
pop
mov
jmp
mov
cmp
pop
clc
hlt
mov
mov
xchg
inc
ficomps
mov
gs
mov
xor
inc
xchg
in
leave
arpl
ficoml
sahf
jae
lret
pop
bound
mov
and
inc
movsb
add
or
add
sub
jbe
out
pop
inc
inc
in
testb
lret
hlt
dec
jb
and
stc
testb
pop
bound
dec
mov
repnz
leave
arpl
push
xchg
shrl
mov
push
jl
xchg
inc
ja
push
test
cmp
fdivp
mov
int3
incl
xor
out
inc
inc
arpl
dec
int3
cs
pop
lods
mov
andl
sbb
inc
pop
outsb
jae
enter
cmpsl
aas
stc
or
pop
xchg
decb
fwait
cld
xchg
and
sub
pop
jne
hlt
daa
ja
xchg
lods
je
add
cs
scas
xor
in
scas
adc
je
scas
nop
xchg
ds
adc
jns
xchg
cmp
add
sub
adc
mov
mov
fdivrs
out
inc
fistpl
sbb
add
jmp
or
stc
inc
push
mov
lock
outsb
inc
push
pop
jo
andl
bound
lds
and
add
outsb
dec
cltd
push
jns
and
mov
add
repnz
push
push
pop
ret
fldt
jno
push
dec
addl
popf
and
lds
jb
sub
jge
xor
outsb
jg
stc
and
data16
fcmovne
stos
inc
cld
daa
lods
jp
push
push
movsl
test
cs
stc
andb
mov
xor
enter
push
out
sbb
pop
xor
cmp
jecxz
lahf
mov
jle
and
xchg
sub
rorl
or
out
sub
mov
and
push
sarl
xchg
adc
pop
ds
test
sbb
pop
movsl
pushl
cmpsb
arpl
out
jns
fnstsw
testb
scas
adc
popa
and
movsl
out
jp
inc
andb
inc
test
mov
loop
or
insl
add
fisubl
push
push
mov
jo
mov
push
out
std
xor
aas
push
cs
mov
mov
and
lea
jle
mov
mov
inc
mov
push
xchg
push
incb
ja
xchg
in
shrb
inc
lcall
or
mov
aas
push
dec
lcall
sbb
adc
clc
gs
lods
jno
jns
int
nop
dec
arpl
sbb
or
gs
sub
outsl
xchg
arpl
and
mov
rorb
mov
sbb
leave
mov
and
mov
aaa
lods
cwtl
stos
sub
xor
cmp
xchg
mov
jb
insl
stos
and
mov
mov
push
scas
aas
dec
data16
iret
hlt
mov
test
and
bound
push
jns
sub
mov
add
jo
out
cli
dec
jne
mov
mov
incb
xlat
pop
jmp
cld
inc
pop
inc
pusha
test
ret
dec
shrb
inc
sub
fldcw
test
jp
mov
in
sbb
jns
scas
data16
mov
fildll
orb
cmp
int
arpl
jecxz
hlt
push
sbb
popf
push
dec
loope
jns
popa
mov
cmpsb
test
nop
sub
push
inc
pop
ja
sbb
mov
fcoms
pop
in
xchg
lahf
mov
cmc
mov
in
xor
cmp
enter
ss
xchg
lret
fsubl
push
and
jnp
out
push
pushf
adc
data16
fmuls
sub
xchg
lods
cmpsb
pop
mov
add
inc
int
jne
or
and
jno
mov
nop
jb
scas
scas
mov
ret
cld
jb
adc
mov
nop
jg
ret
jmp
addr16
mov
shrl
mov
push
pop
lods
icebp
lahf
push
add
cmp
and
cld
push
cmpsl
dec
push
jbe
push
push
add
mov
lcall
jg
and
push
or
add
nop
xchg
outsb
jge
xor
fcomp
or
imul
js
xchg
addr16
call
mov
mov
adc
mov
int3
xor
insb
sbb
pop
push
loope
test
mov
out
lods
in
mov
mov
mov
push
sbb
dec
mov
lret
mov
push
mov
dec
dec
cmc
sub
jne
push
shrb
and
nop
pop
sbb
sub
movsb
cmp
shll
pusha
sbb
xor
jle
insb
js
lahf
fimull
nop
xor
pop
jecxz
jb
mov
xchg
ljmp
out
cmp
loopne
pop
and
lahf
jle
dec
cmp
in
adc
ss
ja
movsb
dec
fstpl
xchg
out
dec
rclb
aaa
int
into
push
pop
stos
cmpsl
push
sub
cld
mov
jns
fsts
inc
or
sbb
jb
pop
sub
jno
aad
jne
arpl
repz
div
pop
cmp
mov
cmpsl
movsb
or
sub
dec
iret
xor
out
loop
xchg
and
cmp
arpl
xlat
pop
xchg
test
add
add
mov
pop
mov
pusha
neg
out
push
clc
icebp
mov
sbb
in
push
jbe
jbe
cwtl
popa
or
push
jne
inc
loope
sti
std
sti
xchg
push
fs
icebp
hlt
sbb
pop
mov
jne
mov
fnstsw
sub
mov
lret
lods
aam
call
repnz
xor
adc
shl
imul
and
lret
test
rcll
popf
lods
frndint
fs
pop
imul
xorl
cmpsl
shr
mov
pop
add
lea
loopne
push
mov
pop
arpl
andl
cmp
cmpl
jbe
dec
push
in
jns
dec
cltd
test
xchg
mov
stc
arpl
mov
mov
mov
xchg
and
cmc
xor
add
cs
aad
mov
sbb
adc
xor
gs
push
fucomip
shr
mov
push
in
dec
add
dec
sbb
lods
jae
pop
sahf
out
sub
roll
insb
xchg
dec
dec
mov
or
shrl
pop
jecxz
mov
clc
bnd
and
insl
xor
xchg
ret
rorl
fnstsw
cld
sbb
jmp
aad
dec
mov
movsl
add
mov
sub
sub
test
out
push
mov
mov
sub
add
sub
fcomp
add
outsl
cmpsl
and
out
push
outsb
mov
add
in
stos
pop
xor
es
shl
mov
out
mov
lods
xchg
jbe
jl
dec
inc
dec
mov
sub
outsb
lds
and
mov
frstor
mov
add
mov
fs
sbbb
xchg
subb
and
xchg
dec
jns
dec
mov
ret
fmuls
dec
pop
xchg
add
or
and
negl
xchg
jnp
or
sbb
jo
or
imul
cld
mov
daa
outsl
and
sahf
fcomps
call
cmp
outsb
testb
adcb
loopne
sbb
mov
mov
pop
or
shrb
test
lret
inc
push
gs
fwait
fwait
xor
mov
and
rcl
dec
inc
loope
js
fildll
js
movsl
test
into
sub
stos
movsb
stc
cwtl
pusha
int3
sbb
cmc
shlb
cmp
lods
incb
cld
xchg
mov
mov
xorb
inc
hlt
mov
fidivl
mov
or
inc
adc
cld
sub
add
loop
cmc
ja
repz
cli
nop
inc
pop
insb
inc
push
ret
adcb
mov
fimuls
adc
mov
xchg
fnstcw
sbb
pop
jg
push
adc
ret
fisttps
rcll
ja
sub
in
cmp
jns
inc
xor
lock
pop
sbb
sarl
out
cmpsl
movsb
out
outsl
inc
cld
fs
jne
sbb
insb
jg
pop
jecxz,pn
cmp
and
cmc
mov
add
pop
pop
cmp
call
cmp
push
and
and
in
jnp
jg
add
cmp
mov
mov
cld
inc
in
ss
subl
cmp
and
adc
in
inc
xchg
sub
mov
xchg
or
or
sub
mov
lcall
dec
mov
lods
fwait
rorl
ja
xor
cmpsl
adc
scas
pop
enter
push
adc
jmp
xor
cmpsl
dec
jne
loop
scas
push
jbe
lods
add
xchg
popf
xor
insb
xchg
test
fs
mov
jne
inc
cmc
mov
js
out
mov
aaa
dec
or
inc
ret
aad
jbe
dec
daa
ret
inc
vpunpcklbw
xor
jae
jo
jnp
mov
imul
dec
ret
cmp
mov
daa
mov
lods
add
ja
insb
jl
sbb
cmpsl
call
xchg
and
arpl
cwtl
and
leave
sbb
mov
or
popf
and
mov
fs
das
push
mov
divl
xchg
xor
mov
iret
fistps
push
dec
xor
in
jle
add
pop
out
pop
and
mov
mov
in
daa
mov
incb
scas
jb
inc
or
jnp
jo
fcmovu
mov
notl
jl
pop
mov
xor
cmp
jae
mov
movl
ja
mov
test
xchg
or
sahf
mov
and
das
pop
xchg
or
out
aas
inc
cmpsl
sub
loop
out
adc
inc
js
cmp
icebp
cs
in
fwait
inc
inc
cli
jo
cmc
mov
jnp
pop
jnp
push
lods
mov
repnz
outsb
rcr
je
aam
or
push
sbb
imul
jge
adc
push
loopne
mov
push
jbe
sbb
mov
xor
cltd
test
mov
cmp
daa
ja
push
mov
mov
xchg
adcb
addr16
xchg
popa
insb
push
test
cmp
lds
cmpsb
jp
mov
mov
fnstenv
test
fs
aaa
mov
inc
mov
adc
ret
sbb
outsb
inc
sub
loope
cwtl
mov
xchg
aas
inc
aad
arpl
pusha
das
push
mov
fiadds
add
outsb
mov
add
xchg
divl
push
aas
cwtl
rorl
mov
sbb
sti
sbb
lock
imul
dec
cmp
mov
dec
xchg
sub
ret
adc
push
jg
dec
dec
test
jg
jg
repnz
stc
vorps
scas
ljmp
test
jecxz
add
lea
mov
imul
sbb
inc
or
inc
stos
stos
fsts
outsl
inc
mov
and
ljmp
jbe
add
push
push
popf
xchg
test
enter
sbb
pop
js
jns
add
mov
cmp
pop
int3
pop
clc
into
add
shlb
imul
add
pusha
data16
pop
stc
test
loope
lds
push
es
ljmp
ds
adc
mov
push
and
sbb
push
leave
mov
pop
prefetch
or
std
mov
or
push
jne
outsl
in
shrl
and
imul
jbe
int
adc
dec
jecxz
mov
ds
inc
or
mov
hlt
popa
mov
add
mov
or
adc
adc
lods
mov
out
and
insb
in
inc
clc
push
dec
jo
lcall
fistpll
stos
test
push
inc
sbb
mov
dec
je
aaa
push
or
add
xchg
inc
mov
fidivl
cmp
daa
inc
stos
mov
and
fdivrs
je
and
pop
inc
scas
jp
push
and
pop
adc
mov
push
push
mov
dec
cld
inc
popa
es
aas
or
dec
xchg
adc
insb
mov
xchg
mov
dec
movsl
cmp
inc
push
clc
fnstenv
movl
inc
or
xchg
lods
inc
ret
sbb
in
inc
push
xchg
mov
call
jl
xor
jno
rcr
push
jne
aas
ret
stc
in
push
fcoml
test
push
and
cmp
jp
push
loope
test
xchg
clc
iret
dec
jb
cli
push
test
push
rolb
lods
inc
push
int3
pop
mov
dec
stos
and
lcall
daa
cmpsb
subl
js
sbb
pop
pop
sbb
and
xchg
xorl
pop
arpl
int3
add
lods
fcmovnbe
fistpll
int
adc
inc
mov
lret
mov
outsl
mov
mov
cmp
jl
stos
insl
psrlw
xchg
insb
sti
lock
loop
aaa
push
rorb
sbb
stos
cmc
dec
icebp
pop
sub
sbb
sbb
dec
negl
sahf
mov
fisttpll
sub
or
xchg
ja
fcoms
testl
xchg
push
mov
mov
push
xchg
inc
aaa
push
xchg
test
popa
mov
push
lock
lds
ljmp
sub
movsb
cmpsl
mov
in
push
mov
lahf
jno
add
adc
mov
fisttpl
lock
jo
fisubrs
out
mov
mov
popf
cmpb
adc
inc
aad
or
push
pop
fbstp
jmp
xchg
mov
sub
mov
xchg
and
cmpsb
not
pushf
cmc
sahf
xor
xor
xor
sbb
xchg
stos
loopne
jmp
inc
sbb
stos
xlat
stos
xchg
jmp
mov
ss
sahf
cmpsl
daa
scas
mov
cld
push
or
call
lods
dec
inc
pop
jle
sbb
push
sub
movsb
stc
loopne
adc
fildll
push
inc
mov
or
pushf
fiadds
and
lea
push
pushf
les
ljmp
loopne
mov
cwtl
xor
push
test
cli
dec
test
push
in
push
loope
mov
filds
outsb
sub
int
outsl
movzwl
inc
test
sbb
push
and
xchg
mov
fdivp
ja
jge
lock
adc
addr16
add
cmp
inc
jb
subl
pop
movsl
inc
mov
jnp
nop
push
test
mov
cmpsl
jge
push
push
push
in
div
loop
scas
sbb
pop
dec
adc
mov
inc
movsl
jmp
push
or
xorb
jl
das
mov
jge
repz
push
sbb
enter
out
clc
and
mov
dec
into
mov
mov
xchg
insb
mov
xor
sahf
cmc
jnp
std
loop
je
mov
test
push
std
xor
stos
sbb
and
ss
adc
push
sysexit
std
pop
daa
aaa
mov
in
inc
out
mov
add
pop
sub
and
mov
ja
lds
in
inc
and
mov
dec
xlat
xchg
add
add
sbb
insl
dec
imul
cmc
cmp
add
adc
dec
inc
sti
andl
mov
add
push
lcall
loop
fdivr
jmp
subb
inc
or
sub
jb
inc
cmp
xor
fnsave
mov
pop
jbe
ret
mov
fdivr
je
push
popl
je
and
loope
bound
in
sbb
mov
jg
mov
and
cwtl
decl
and
mov
xor
out
je
push
imul
cmp
pop
mov
push
inc
sti
inc
push
addb
test
adcl
int3
movsl
testl
rcll
repz
out
push
cmp
scas
pop
fwait
xor
outsl
cmp
outsl
fsts
lret
insl
add
stc
and
and
sahf
or
and
jne
dec
inc
push
xchg
loopne
lcall
shlb
or
cmp
mov
push
push
inc
pushf
push
adc
nop
cld
and
les
cmp
xchg
mov
and
dec
mov
dec
inc
cmp
aam
js
add
mov
dec
mov
shr
repnz
or
ljmp
test
arpl
jne
test
adc
sbb
jg
je
dec
pop
adcl
mov
sub
ss
pushf
scas
pop
aas
dec
cmp
cmp
cmpsb
and
cmp
jmp
sub
push
inc
stos
adcl
aaa
cmc
andl
xor
and
xchg
in
push
arpl
and
movsb
sub
pop
dec
test
jmp
sbb
lea
xlat
repnz
cmpsl
cmp
testl
hlt
outsb
divb
jg
popa
push
ljmp
call
dec
mov
pop
mov
cld
cs
rcrl
es
aad
outsb
shlb
scas
ss
lret
scas
push
in
dec
in
sbb
pop
outsb
not
filds
jnp
cld
fwait
push
scas
mov
add
repnz
cmp
das
cmp
push
sbb
call
es
dec
popa
inc
fsts
jbe
add
sub
testl
xchg
push
rcl
repnz
shlb
call
sub
jo
push
pop
jne
mov
addr16
dec
fbld
in
and
adc
into
pop
adc
adc
or
lds
aad
add
or
popf
push
cmpsl
mov
cmpsl
xchg
pop
insl
adc
fxch
add
inc
test
cmp
push
xor
movsb
push
push
std
mov
stos
jle
scas
scas
lret
dec
dec
push
pop
ds
mov
cmp
cmp
out
arpl
jne
mov
cs
lahf
xchg
push
or
addb
cmp
icebp
ljmp
push
fwait
daa
push
shrb
pop
sar
hlt
xor
rcl
or
ss
mov
aas
adc
lds
and
cli
clc
sahf
xor
call
inc
movsl
or
lods
cmp
divl
xorb
sbb
inc
lret
dec
ds
out
jp
mov
aaa
add
test
stos
sub
push
popf
sub
jge
push
nop
popf
lods
dec
mov
inc
roll
out
mov
lods
jecxz
int
mov
daa
test
andb
and
sub
pop
jns
jae
or
les
pop
push
dec
int3
pop
rcr
cmpsl
aas
mov
push
add
out
cld
adc
push
divl
dec
scas
inc
pop
mov
adc
mov
or
fwait
mov
mov
and
pop
cwtl
push
fcmovne
lea
xlat
jmp
push
push
call
and
into
and
bound
iret
mov
add
jp
neg
jne
xchg
mov
lahf
incb
out
fwait
fwait
test
jnp
jne
mov
xor
inc
fadds
sub
xchg
ret
xchg
cs
lea
dec
mov
mov
mov
pop
mov
cwtl
fimuls
jno
lret
cwtl
inc
and
subb
xchg
push
hlt
adc
xor
push
and
adc
jl
in
jmp
ficompl
jmp
xor
jp
and
cmp
jp
nop
push
and
cmpsl
adc
jecxz
lcall
adc
adc
outsb
xorb
cmp
test
mov
scas
lret
xchg
mov
cwtl
les
leave
jns
movsb
lcall
mov
jp
mov
out
cmp
call
movsl
stos
ljmp
jo
jbe
call
add
mov
aad
sbb
mov
xlat
mov
lret
mov
dec
notl
mov
add
data16
cwtl
inc
xchg
sub
inc
das
cmp
xor
sbb
movsl
call
clc
movsb
lock
fstpl
iret
mov
xor
rcr
das
mov
pop
mov
mov
mov
ret
nop
ss
pop
xor
cmp
pop
aam
mov
dec
pop
sbb
pop
out
pop
imul
inc
adc
dec
dec
cmp
mov
inc
repnz
js
loopne
gs
mov
test
sub
scas
call
cmp
out
ret
and
xchg
out
incb
paddd
xor
stos
pop
cmp
outsb
ficoml
rcrl
daa
sub
pop
adc
aad
mov
sti
pop
call
xchg
jne
fs
aas
lret
sbb
sub
push
cwtl
xchg
insl
or
sti
mov
fdiv
arpl
adc
push
pop
sub
xchg
cld
pop
or
enter
ljmp
push
dec
fidivrl
xchg
movq
inc
sahf
push
xchg
cwtl
jge
in
sbb
cli
imul
jge
mov
sbbl
cmp
shrb
lea
jbe
pop
popf
sbb
ljmp
test
cmpsb
xchg
clc
outsl
sbb
sahf
push
or
mov
inc
mov
int3
pop
and
or
jae
sbb
push
aaa
push
cmp
shrb
xor
orl
int3
push
cltd
cmpb
std
xor
in
mov
xor
mov
std
rolb
sti
mov
mov
lea
push
mov
int3
frstor
push
jns
push
insb
lds
pop
pusha
call
daa
adc
pop
loope
scas
adc
aaa
nop
ja
cmp
adc
dec
xchg
jnp
fsubl
xor
lret
and
sahf
mov
dec
mov
jge
ds
nop
jno
sahf
xchg
mov
pop
jecxz
ret
adc
fsubrs
dec
add
shr
mov
pop
xchg
xor
mov
ds
lcall
push
rcrb
jp
sahf
sti
push
ja
jecxz
iret
mov
sub
mov
dec
test
jle
cmpsl
aas
dec
dec
mov
orb
gs
je
mull
xchg
pop
lds
jecxz
stc
pop
jns
dec
enter
test
andb
fdivs
sbb
dec
sub
je
addr16
lahf
mov
fdivrl
rolb
push
mov
sub
mov
rcr
inc
cltd
outsb
dec
jp
testb
bound
das
test
fwait
push
push
or
aad
icebp
pusha
iret
ss
shll
mov
pop
xchg
dec
inc
jecxz
xchg
xchg
xorl
stos
mov
add
push
xchg
mov
xchg
stos
cmp
imul
sti
xor
push
lds
cmp
add
sbb
mov
cmpsl
xor
iret
mov
or
rclb
das
icebp
sub
fcmovnbe
cli
xchg
add
test
mov
add
dec
and
sti
mov
lahf
rcrb
mov
in
cmp
ret
xchg
cmp
daa
inc
repz
and
jmp
std
hlt
movsl
mov
xchg
push
mov
movsl
jo
stos
andb
dec
mov
mov
sub
or
dec
jp
cltd
and
fcoml
mov
ss
dec
loope
gs
xchg
push
xchg
cmpsl
fdivrl
dec
pop
pop
xchg
pop
repnz
sti
push
fnsave
insl
jns
jnp
fstpt
mov
sbb
lret
mov
jmp
rcrb
mov
cmpsl
fs
sub
mov
pop
lock
stos
xchg
xor
jg
mov
pop
mov
add
lds
mov
imul
pop
inc
cmp
scas
mov
or
and
out
push
out
lds
in
std
xchg
cld
inc
pop
ljmp
mov
mov
lds
out
dec
mov
cwtl
in
sbb
sbbl
popw
sahf
dec
loope
push
imul
cmpl
mov
pop
sub
fstpt
jb
shrl
sub
pop
subb
xchg
mov
push
cltd
test
sbb
or
or
fnsave
test
cmpsl
scas
add
insl
sbb
cmc
and
cmpps
pop
repnz
or
outsl
adc
pop
ret
int
in
add
pop
lods
inc
push
stos
enter
cwtl
mov
andb
or
aas
pop
out
push
cmpsb
aam
popa
cli
jl
xor
mov
loopne
insb
out
sub
mov
push
rolb
and
sbb
stos
inc
xchg
mov
push
mov
xor
sti
loope
xor
mov
adc
movb
cmp
inc
and
adc
pop
mov
dec
pop
pushf
pusha
jecxz
jle
lea
mov
jnp
loop
push
dec
push
pop
pop
pop
jae,pt
sub
dec
test
mov
and
inc
inc
push
js
loopne
inc
xlat
repz
adc
mov
jle
jns
cmp
rorb
xchg
icebp
inc
mov
js
aaa
stos
adc
cmp
dec
inc
loope
lods
adc
loopne
fisubrs
mov
adc
push
clc
xchg
xchg
aad
adc
test
test
cmp
add
je
scas
gs
repz
mov
xor
pop
sahf
test
cmp
fsub
and
sub
xchg
lock
dec
movsl
dec
lcall
out
mov
inc
push
add
or
mov
shrl
movsl
xchg
push
movsl
hlt
cmpsl
mov
dec
jle
aam
les
into
gs
cld
vmwrite
in
test
mov
int3
inc
or
mov
sub
addr16
push
push
mov
aam
adc
mov
cmp
pop
pop
mov
cmp
jl
xchg
scas
dec
or
imul
pop
movsl
or
out
cmp
stos
in
shlb
and
pop
fisubrs
mov
sbbl
ljmp
fldcw
push
push
fbstp
push
mov
sbb
push
dec
mov
mov
lret
addr16
orl
jl
in
add
sbb
push
mov
cli
push
scas
xchg
mov
cmp
rol
or
mov
jns
and
xchg
adc
sar
nopl
add
outsb
sub
dec
xchg
adc
dec
lds
fstpt
es
aaa
cltd
bound
push
icebp
cmpsl
jmp
dec
push
in
ss
imulb
aaa
and
and
fsubrp
aas
cmp
cmpl
hlt
rclb
push
pop
mov
pop
out
cld
push
xorl
icebp
jno
stos
jle
std
jne
sbb
xor
cld
loope
add
cvttps2pi
clc
clc
mov
mov
mov
les
into
cmc
mov
mov
movsb
lahf
daa
cmp
pop
add
cmpsb
nop
subb
jmp
xchg
aas
inc
fbld
lds
ret
call
sub
push
sahf
adc
mov
adc
inc
shll
jbe
jne
xchg
pop
icebp
mov
or
cmp
jecxz
cs
or
cwtl
cmp
inc
mov
test
cmp
inc
sub
syscall
out
js
stos
dec
out
data16
cmp
insl
loopne
stos
inc
or
das
stc
inc
aad
scas
xchg
outsb
jg
shll
cmpsl
sub
inc
fsubs
test
or
xor
pop
jge
nop
scas
and
shlb
inc
pop
lods
dec
and
stos
movsb
insl
xor
bound
push
ljmp
jb
daa
adc
rolb
int3
sbb
and
mov
popl
ja
test
stos
inc
adc
outsl
mov
xchg
cmp
popa
sub
inc
lock
fs
insl
xchg
lret
lret
clc
hlt
aas
push
mov
lds
add
xchg
sub
jge
mov
es
mov
pop
or
data16
xchg
xchg
inc
pop
inc
lea
ds
cmpsl
aad
mov
dec
in
pop
scas
inc
dec
mov
mov
or
push
pusha
stos
mov
in
call
cmp
imull
int3
les
mov
dec
jne
push
jno
jg
inc
mov
mov
fdivl
test
mov
jg
pop
mov
mov
or
and
mov
seta
mov
sub
cmpsb
cmp
dec
mov
pop
ret
dec
add
jecxz
insb
cmp
cwtl
jno
cwtl
pushf
scas
fiaddl
ret
roll
imul
xchg
arpl
sbb
loopne
cs
mov
mov
out
cmpsl
mov
dec
out
add
mov
xchg
enter
sbbl
aad
xchg
sub
repz
in
cltd
sbb
adc
xchg
rcrl
out
mov
popa
out
mov
dec
jecxz
jp
imul
popf
mov
jae
mov
add
jo
jae
cmp
push
int
and
out
cmp
subb
dec
repnz
in
vminss
lret
ja
stc
or
or
mov
nop
fsubp
outsl
sub
sbb
ja
sahf
push
ficompl
andb
out
cmp
add
scas
push
test
fst
hlt
scas
cmp
hlt
arpl
inc
xlat
inc
mov
aam
js
iret
push
mov
pop
leave
mov
je
enter
jge
inc
scas
mov
loope
fistpl
jbe
jnp
mov
pop
push
inc
aas
loopne
imul
psllw
inc
stos
es
scas
mov
mov
xchg
mov
xor
imul
sahf
sar
mov
mov
sbb
inc
fimull
popa
or
xchg
xchg
xchg
inc
iret
add
aaa
cli
inc
pop
mov
shlb
sbb
xor
das
daa
iret
or
outsl
mov
pop
decb
pop
je
imul
pushf
cld
insb
mov
fdivp
cmpb
cld
arpl
std
outsl
dec
clc
test
lcall
cmp
mov
fidivs
and
sub
out
cmp
and
xchg
or
xchg
gs
std
jp
stos
cmc
inc
pushf
es
and
addr16
cld
or
or
xchg
loop
ja
push
rcll
dec
testb
add
xor
push
and
sub
adc
lret
mov
cltd
jne
out
ret
lock
sub
je
sub
ret
lock
mov
cmp
inc
sti
xchg
insb
insl
cwtl
pop
lds
pusha
aad
shlb
sti
inc
or
shlb
push
cltd
jo
inc
mov
test
push
or
movsl
jecxz
mov
sahf
mov
pop
sbb
add
sbb
cld
test
and
jae
std
das
xchg
andb
cmp
outsb
pop
jmp
or
mov
xchg
movsl
pop
mov
lods
inc
lcall
cmp
cmpsb
xor
inc
and
or
into
addr16
out
mov
out
insb
sbb
xchg
call
cli
pop
int3
xchg
test
xor
bswap
inc
divl
movsl
imul
xor
xchg
cmc
xor
jge
xchg
andl
sbb
stc
cmp
rclb
fmull
sbb
inc
cmp
xchg
jmp
scas
sub
and
push
fs
push
mov
int
inc
scas
subb
xor
neg
and
jecxz
adc
dec
jecxz
jle
jmp
or
adc
aad
das
pop
mov
xchg
push
ret
shrb
mov
aam
mov
pop
cmp
push
push
jnp
cmp
and
pop
pop
dec
push
lds
adc
mov
push
jae
xchg
outsl
iret
pop
push
xchg
stos
popa
cmp
mov
ds
insb
scas
fmul
push
mull
pop
jecxz
cli
lret
sub
inc
add
in
inc
notl
enter
sarb
mov
mov
mov
and
lods
loopne
add
push
add
mov
mov
fwait
mov
lds
mov
push
sub
scas
mov
lds
add
sbb
add
cmp
daa
test
xor
push
mov
repnz
cmp
cwtl
xchg
xlat
jnp
cli
rcrl
test
rcr
iret
pop
testb
push
add
add
popf
or
in
xchg
adc
fidivs
fstp
mov
aaa
jle
xchg
sub
mov
shll
mov
mov
out
jl
mov
out
or
push
fs
dec
pop
inc
in
js
shlb
sbbl
adc
cmp
sbb
cmc
movsb
inc
lock
imul
mov
aas
dec
dec
sbb
jg
add
inc
popf
pop
lods
jecxz
and
add
repnz
scas
sub
in
ljmp
std
xchg
sbb
dec
pop
outsb
add
sub
repz
push
or
adcb
idivl
xchg
cld
stos
in
mov
int
stos
ret
aas
mov
pushf
popa
sub
mov
add
popf
mov
andb
outsl
call
ret
push
xchg
repz
popf
mov
lahf
dec
lock
frstor
out
lea
sub
pop
xor
adc
push
loopne
xchg
insl
aas
pop
push
aas
push
clc
hlt
inc
cmc
adc
ret
int
pop
ret
inc
jge
icebp
sahf
cmp
cmp
push
xor
sub
pop
shlb
xor
icebp
clc
push
stos
sub
push
std
xchg
or
popf
or
jns
loop
and
fisttps
cltd
mov
add
ss
inc
shlb
addb
test
movsb
xor
lret
cld
daa
aaa
rol
nop
inc
mov
jle
fldcw
dec
pop
out
movsb
push
mov
mov
push
in
or
and
dec
push
jae
outsl
and
les
or
in
test
push
clc
ret
push
mov
popf
or
in
mov
gs
adc
mov
aad
adc
mov
shr
jne
pusha
jno
mov
jnp
push
lods
sub
ffreep
fdivrs
stc
nop
jae
adcl
mov
mov
jae
sti
loopne
aad
pop
sub
xchg
in
js
or
mov
add
out
mov
dec
dec
popf
mov
fwait
loop
cmp
scas
sub
bound
iret
sub
pop
lcall
outsl
mov
lahf
sbb
adc
popa
inc
mov
xchg
ror
dec
add
xchg
repz
scas
adc
repz
rclb
add
pop
ret
jne
fwait
hlt
std
mov
aaa
cwtl
pop
fnstenv
xchg
testb
cli
cwtl
fisubrs
out
test
aaa
addr16
lods
ficomps
fidivrl
test
push
mov
dec
bnd
push
pop
rorb
fsubrp
sbb
cwtl
push
sbb
bound
push
or
xchg
adc
mov
pop
jge
sbb
testl
xor
cld
or
iret
mov
xor
ds
fbstp
push
popf
xor
rclb
pop
or
fcoml
push
std
push
add
mov
ljmp
pop
inc
in
test
adc
mov
mov
sbb
nop
xchg
push
adc
jle
add
sbb
addr16
xchg
sub
add
dec
movsb
pop
cmp
xchg
ljmp
push
jbe
add
xor
daa
and
dec
add
xchg
mov
push
mov
dec
and
push
test
lods
or
ds
sbb
aas
dec
sbb
in
decl
adc
shlb
sub
mov
fwait
das
das
cli
aad
xor
adc
data16
cmpb
inc
mov
mov
inc
es
push
mov
stos
mov
pop
cmpsl
jle
pop
add
mov
or
stos
addr16
jns
and
popa
sbb
enter
jbe
push
cs
mov
or
mov
push
xor
sub
lret
push
inc
xlat
test
push
push
ficompl
enter
jno
inc
pop
pop
arpl
dec
imul
mov
nop
sub
js
movsb
inc
vxorps
mov
mov
adc
pushf
data16
iret
sub
dec
popf
push
and
pop
xchg
inc
xchg
and
sbbb
outsb
mov
ljmp
orl
xor
loop
arpl
pop
push
sub
ret
jle
or
les
outsb
cltd
mov
lahf
and
push
sbb
mov
xor
mov
in
mov
sbbl
scas
fnstcw
sbb
xchg
mov
popa
mov
xlat
cmp
int3
add
xchg
jl
pop
xor
ret
repnz
and
push
sub
pop
pop
mov
pop
lods
xchg
das
mov
pop
sub
xor
xchg
dec
in
jbe
or
insb
ret
jle
xor
cwtl
mov
out
fmull
push
add
scas
fnsave
lock
adc
andb
outsb
add
out
push
mov
in
daa
xchg
xor
orb
mov
pop
and
nop
shll
cmp
shl
jmp
iret
das
inc
cmp
out
or
jo
mov
bound
sahf
out
mov
sbb
adc
add
push
inc
out
jmp
std
lds
inc
lcall
clc
stos
xchg
loopne
sti
aad
mov
push
inc
cwtl
or
in
mov
popa
jne
cmp
daa
in
cmc
adc
mov
fistps
into
js
inc
outsl
out
loopne
inc
clc
sbb
sub
sub
dec
f2xm1
outsb
mov
mov
rcl
jp
lret
adcl
imul
jb
and
inc
out
test
popf
lods
sub
orb
push
jmp
dec
fists
fwait
xchg
cs
cmp
insb
imul
adc
cld
push
inc
and
lahf
xchg
adc
rclb
and
add
push
orl
out
pop
in
push
ja
dec
into
je
bound
outsb
cmp
pop
int
lea
jbe
xchg
jecxz
dec
jae
mov
lcall
lock
xlat
addr16
imul
sahf
rolb
lahf
jnp
shlb
pushf
data16
jno
xacquire
jns
xchg
lcall
cmpsb
xchg
and
dec
inc
or
xchg
ficompl
inc
jge
inc
fldt
in
lock
pushf
stc
into
rcrb
cwtl
push
adcb
mov
int
add
out
icebp
insb
mov
daa
mov
sub
mov
push
scas
push
lret
fbstp
iret
shr
add
mov
bound
push
cmp
dec
push
into
sbb
inc
push
mov
jns
jns
ret
mov
or
inc
xchg
into
enter
inc
mov
adcb
mov
and
popf
xor
je
test
ret
or
push
ret
lret
jbe
std
pop
push
jae
loopne
and
adc
mov
mov
xor
or
lock
pop
push
mov
xchg
push
orps
ljmp
mov
mov
pop
cwtl
push
in
in
xchg
pop
push
push
je
push
add
daa
push
cli
leave
test
leave
pop
faddp
xchg
cs
dec
in
cld
push
xor
aas
in
ja
insb
pop
cli
mov
daa
inc
xor
mov
jns
adc
adc
sahf
bswap
inc
rclb
adc
ss
adc
jp
insl
icebp
mov
xor
cwtl
lods
imul
mov
imul
or
daa
outsl
push
mov
xlat
daa
cmp
jnp
mov
push
sbb
fwait
repnz
shll
loop
pop
push
movsb
mov
or
sti
pop
outsl
fucomp
clc
iret
dec
adc
mov
fmull
scas
arpl
rcr
mov
nop
outsb
cmp
sbb
jne
xor
gs
test
and
call
adc
gs
aam
xchg
imul
add
and
mov
xlat
cmp
out
or
xlat
dec
cmp
jne
int3
hlt
sub
and
sbb
hlt
das
xor
dec
ss
mov
mov
imul
into
std
or
in
dec
movsl
inc
mov
or
jle
scas
flds
fcomp
out
in
xor
mov
pop
mov
jl
add
mov
xor
and
test
xchg
stc
jecxz
pop
rorl
mov
sbb
dec
mov
sub
cld
push
testl
shlb
xor
mov
push
or
mov
inc
mov
pop
repnz
rorl
or
cs
push
jp
mov
add
sub
cmpl
and
ljmp
daa
mov
loope
xchg
test
jbe
test
xchg
dec
sub
sbb
call
in
dec
stc
cli
pop
fsts
test
pop
adc
fdiv
pushf
scas
sub
mov
in
ret
cmp
les
cmpsb
cmpsb
popa
sub
loop
aad
cmc
testb
mov
aad
test
sub
pop
mov
in
push
pop
ret
push
adc
outsb
mov
test
dec
mov
jns
pop
pop
into
lods
xchg
les
or
sub
gs
pop
cmp
shlb
sub
shrl
movsl
test
xlat
push
push
leave
adc
xor
sbb
sbb
mov
call
jno
cmp
roll
imul
xchg
xor
repnz
sub
xor
aas
sub
xor
sub
fidivrs
leave
xor
jns
mov
mov
test
iret
inc
rclb
mov
leave
sbb
sti
lret
les
out
lahf
cmp
xorb
mov
mov
jmp
out
pop
aad
jb
or
cmp
xor
in
iret
cli
mov
lret
fwait
xor
cmp
sbb
xor
out
out
pop
clc
and
repz
push
insl
lds
dec
push
mov
sbb
inc
popa
inc
xchg
cmp
mov
lret
dec
push
jl
lret
inc
add
mov
stos
es
fsubrs
mov
mov
cltd
shld
adc
mov
gs
out
rolb
ds
mov
jmp
pop
std
push
jp
and
mov
push
je
push
xor
mov
or
mov
fs
adc
pop
scas
ljmp
test
cmp
mov
push
outsl
dec
sahf
add
bound
ret
or
jp
or
out
test
insb
testb
cmpsb
jle
fistl
sbb
mov
insl
xchg
mov
pop
cli
outsl
jmp
sbb
adc
leave
rorb
or
jecxz
mov
bound
xchg
insb
jae
out
outsb
hlt
inc
push
scas
sub
mov
loop
loop
test
lea
sbb
add
adc
cmp
test
inc
add
gs
cmovae
inc
dec
and
xchg
push
sbb
movsl
clc
cmp
xchg
fucomip
test
push
ljmp
ljmp
push
sub
lret
je
in
es
gs
cmp
jmp
jge
inc
fistpll
xor
mov
xor
xor
aad
mov
mov
mov
ret
inc
cmc
rclb
rorb
mov
mov
nop
mov
out
fs
lcall
in
cmp
mov
aad
aas
ret
dec
jno
daa
sub
dec
add
push
mov
xor
pop
xor
lock
idivl
mov
add
test
push
mov
push
push
out
mov
pop
lcall
sub
dec
cs
xor
lret
mov
push
and
add
arpl
dec
sahf
adc
rolb
stos
in
cli
sub
pusha
int3
push
fwait
sub
jno
mov
push
fmulp
dec
add
andb
loope
sahf
xlat
outsl
shl
sbbb
pop
jno
pop
aas
mov
add
dec
cmpsb
jae
fsubrs
mov
test
dec
mov
mov
lret
jbe
adc
cs
fcmovbe
imul
pop
dec
je
mov
xlat
fld
gs
jne
in
pop
stc
icebp
mov
test
shl
pop
testl
xchg
jecxz
pop
aad
dec
or
adc
leave
or
push
in
ljmp
hlt
nop
movsl
insl
in
shrb
cmpsb
mov
gs
adc
cltd
sarb
ficoms
std
fcomps
aam
xchg
jne
dec
scas
inc
sbb
jl
xor
aaa
jmp
xchg
xchg
dec
cmp
test
int
push
idivl
popf
lcall
jle
scas
ret
sahf
popa
or
out
ret
push
pop
scas
dec
jno,pt
in
xchg
xor
daa
inc
loop
mov
xchg
lahf
xchg
xchg
xchg
mov
and
mov
insl
aaa
cli
sub
fdivrs
test
add
inc
cmp
cld
adc
lcall
cs
jmp
or
sbb
stc
xor
call
loop
fiadds
test
mov
sbb
jmp
adc
push
test
add
ss
push
mov
mov
mov
jg
fdivs
add
and
mov
xchg
jns
push
stos
mov
or
mov
mov
sbb
out
ret
add
and
flds
out
nop
hlt
fistl
leave
mov
insl
rcr
push
fldt
mov
push
scas
jl
push
fidivs
js
add
jo
xlat
cwtl
xor
fnstsw
repz
rorl
leave
arpl
sbb
js
or
psrlq
std
push
xlat
dec
lcall
dec
jne
lods
iret
sbb
mov
mov
popf
sbb
dec
lea
pop
add
inc
cld
sbb
addb
out
and
lock
sub
jp
add
jbe
sbb
push
rcll
pop
mov
gs
nop
pushf
ror
mov
push
push
insl
lea
outsl
adc
lods
mov
xlat
inc
lods
mov
add
imul
jns
dec
sub
cs
clc
movsb
xchg
sub
cmpsb
inc
gs
cmpsl
iret
dec
push
mov
push
lcall
scas
sbb
push
ret
lret
hlt
aaa
xchg
dec
xchg
lock
or
dec
out
jae
mov
jo
fisubrl
enter
loop
or
add
aad
mov
jmp
ljmp
ror
arpl
and
flds
lahf
outsl
mov
adc
test
rorl
testb
pop
stc
fadds
cmpsl
and
sbb
xchg
popa
cli
ficomps
jns
mov
sbb
cmp
scas
mov
push
lds
cmp
cld
inc
xlat
mov
pop
jb
xor
int3
xor
stos
dec
ret
jle
mov
sub
xchg
stos
es
mov
xchg
pop
into
loopne
sbb
hlt
push
cmp
dec
loope
fisttpl
mov
shl
pop
insl
mov
lahf
cmp
test
jbe
lret
in
add
insl
int
sbb
xchg
lahf
mov
dec
negl
sti
mov
mov
xor
inc
dec
cwtl
cmp
push
mov
mov
pop
add
pop
mov
mov
or
fisttpl
sbb
in
mov
loopne
mov
shrl
bound
xlat
leave
pop
add
pop
xor
or
or
js
lret
sub
and
push
and
hlt
fcoms
test
ss
jae
dec
cmc
jb
cli
arpl
jge
sbb
adcb
jg
sub
jae
add
insb
adc
loopne
push
adc
mov
mov
mov
icebp
or
jg
lret
xchg
js
popf
push
iret
data16
cld
or
mov
inc
inc
jecxz
std
fidivrs
data16
jmp
inc
xlat
add
loop
inc
es
jmp
add
adc
loopne
pop
ret
mov
in
std
dec
sarl
cmp
gs
int3
ss
cmp
lock
daa
jl
out
movsb
dec
mov
sahf
test
loop
repz
mov
ret
in
shr
add
ret
arpl
je
push
outsb
in
xchg
outsb
fs
or
shll
mov
push
jecxz
adc
push
shll
cmp
inc
pop
jo
aad
pop
shll
popa
add
jg
mov
inc
xchg
sub
mov
add
mov
cmp
ja
and
fwait
jge
rol
sub
int
ret
int3
out
stos
daa
mov
and
rcll
test
dec
jle
xchg
arpl
xchg
xor
jns
ja
or
cmp
cs
enter
lahf
int
jno
test
pop
lods
mov
repz
clc
and
jg
dec
push
inc
pop
shlb
fdivrl
jp
inc
test
adc
jns
add
cltd
xchg
out
aas
dec
mov
outsl
jmp
pop
testb
mov
pop
stos
and
jmp
sarb
test
popf
inc
xor
dec
jb
push
cmp
mov
imul
mov
mov
mov
fadds
ss
mov
cs
mov
popf
jns
out
das
inc
pusha
xor
bound
mov
aam
mov
jle
adc
dec
jo
mov
push
or
sub
outsl
sbb
cltd
pop
adc
hlt
and
mov
push
cmp
mov
cmc
pop
lods
pop
xchg
sub
notb
ss
insl
or
mov
arpl
movsl
mov
outsl
dec
or
decb
ds
cmove
scas
loopne
adc
sbb
lret
ficompl
inc
test
jle
imul
pushf
dec
loope
xor
xchg
shlb
data16
cwtl
dec
mov
mov
sbb
std
fbld
and
fisubrl
pop
out
nop
sbb
test
mov
sub
in
test
or
mov
jo
cmpsl
sar
mov
mov
jg
and
add
push
add
and
and
and
push
push
inc
or
mov
insl
jo
add
fnclex
sub
jns
add
sbb
dec
mov
iret
cmpb
and
push
aad
mov
cmp
lods
repnz
mov
adc
clc
jbe
imulb
lcall
sub
iret
loope
pop
cmpsl
gs
xchg
mov
add
pop
in
push
adc
jg
aaa
loop
insl
insl
and
sbb
addr16
mov
cmp
inc
mov
mov
push
lods
scas
int3
push
outsl
push
int
push
add
fwait
mov
jge
dec
push
xchg
scas
cli
sub
or
mov
or
aaa
add
data16
loopne
dec
mov
mov
les
imul
inc
add
mov
sub
sub
and
mov
ljmp
xchg
lods
std
mov
sub
push
lods
sub
jl
insb
jle
popf
and
mov
ljmp
hlt
adc
adc
mov
mov
stos
fcmove
xchg
add
lret
add
lret
sub
dec
push
jl
shrb
movb
fists
adc
adc
ffreep
xchg
add
cltd
pop
imul
mov
lcall
fisubrs
xchg
dec
adc
data16
loopne
repz
js
lret
lea
xor
repnz
mov
ds
adc
loopne
bound
xchg
ret
jnp
and
pop
dec
in
aas
sbb
jp
testl
fmul
test
shlb
sbb
ja
or
cltd
jl
lret
jae
push
lcall
cmp
sub
ret
into
xchg
mulb
mov
ret
sbbb
loope
popa
xor
fiaddl
pop
sub
mov
adc
add
pop
xor
aad
or
lret
out
loop
pusha
mov
cmp
mov
cmp
adc
int
jbe
sub
outsb
mov
push
dec
jne
repz
xor
mov
adc
int
mov
negb
or
mov
insl
mov
arpl
dec
xchg
sbb
cmp
pop
popf
and
sub
cmp
jge
arpl
data16
push
push
pop
xor
insl
flds
or
loop
shlb
sbb
or
mov
cs
popa
repz
xchg
mov
sahf
lods
mov
cmpsb
outsl
mul
cmp
add
adc
sar
or
adc
or
push
dec
pop
and
shll
xchg
pop
aam
cmpl
sbb
ja,pt
scas
inc
decl
lret
fs
bswap
cltd
mov
in
pop
fisubrl
in
pushf
cld
mov
dec
lcall
or
lcall
sub
std
jmp
add
or
ret
mov
loop
mov
pop
test
loop
adc
xchg
xchg
lahf
mov
sbb
test
inc
fidivrl
cmp
sti
cmpsb
sub
xchg
ds
xchg
icebp
cltd
jmp
add
mov
scas
inc
adc
mov
lods
in
aas
mov
outsl
test
mov
adc
mov
mov
adc
cmc
dec
jnp
jb
imul
je
cwtl
mov
lods
loop
pop
enter
mov
jne
cltd
inc
xchg
mov
les
clc
mov
cmpsb
jg
sarl
mov
mov
mov
push
out
fidivl
aad
fcompl
mov
mov
pop
lret
jnp
mov
sarl
jg
sub
mov
fimull
ficompl
sub
stos
adcb
lret
dec
loopne
adc
cmp
inc
les
push
pop
mov
inc
mov
ljmp
scas
dec
push
loop
cmpsb
sbb
mov
int
nop
mov
and
daa
xchg
jmp
insl
mov
push
mov
test
mov
adc
mov
incl
inc
pop
ds
imul
cs
jmp
sti
jno
das
mov
hlt
pop
inc
aad
dec
push
cmp
jge
push
loope
mov
imul
xchg
dec
dec
incb
mov
cmp
nop
xor
add
inc
push
pop
scas
cmpl
jmp
xor
mov
outsl
adc
bound
mov
mov
aad
sti
add
sti
xchg
sub
bound
iret
out
in
fwait
shlb
sub
inc
je
or
pop
loopne
sqrtps
inc
lods
sub
push
lods
push
fstps
cmp
push
insb
jge
pop
sti
mov
lahf
in
rol
jge
fwait
xor
loope
mov
or
icebp
xchg
insl
mov
rorl
inc
xchg
aam
mov
and
lcall
gs
sub
sbb
jp
mov
test
mov
mov
pop
mov
hlt
xchg
shrb
push
ljmp
jno
and
xchg
dec
mov
sbb
imul
imul
cmp
dec
adc
out
out
mov
lcall
mov
sti
es
cmp
dec
movsb
push
jne
loopne
mov
mov
js
scas
and
mov
xor
xor
add
sbb
sbb
xchg
mov
ds
mov
inc
stos
push
test
leave
cmp
mov
or
stc
out
les
add
xchg
xchg
sbb
in
ja
jbe
mov
decb
shrl
sahf
sub
jo
popf
mov
xor
lods
mov
dec
test
bound
cmp
jb
sub
int
sbb
out
jl
shrb
add
and
add
scas
iret
clc
popl
rclb
pop
into
xorb
adc
testl
inc
pop
jmp
cwtl
push
insl
sbb
es
pop
lahf
mov
xchg
mov
out
aas
popf
sti
out
sbb
jecxz
les
lea
aas
pushf
sti
xchg
outsb
push
in
in
sbb
mov
out
jns
push
out
cmp
std
fwait
pop
sbb
mov
sub
div
inc
sbbb
xchg
ljmp
data16
and
sbb
cld
outsb
das
cli
out
jl
sbb
mov
mov
outsl
daa
mov
pop
cmc
push
dec
xchg
insl
clc
movsl
cmp
popf
mov
dec
shrb
fistpll
cwtl
mov
decl
add
inc
push
xor
test
jmp
in
push
aas
inc
into
insb
add
adcb
cmp
mov
in
inc
pop
movsb
mov
push
not
sbb
shl
push
dec
loope
push
push
rorl
fisttpl
cwtl
lods
ljmp
call
push
xchg
pop
stos
pusha
ja
xchg
jmp
inc
pusha
xchg
pop
scas
stos
sub
adc
punpckhdq
jmp
cmp
sbb
mov
mov
fcmovb
mov
outsl
and
dec
es
stos
mov
jp
aad
sbb
pop
in
pop
sub
xchg
out
mov
popa
insb
mov
sbb
and
ficoms
popa
filds
adc
mov
movsb
push
pop
addr16
ds
cld
arpl
shll
nop
mov
ret
pop
in
rclb
pushf
int3
call
es
arpl
cmp
mov
xor
pop
push
fisttpl
add
xchg
adcl
sbb
cmp
push
inc
insl
nop
add
jnp
pop
xchg
jle
scas
mov
jge
push
add
cmp
and
bswap
stos
inc
rorb
loope
pop
test
xchg
sub
cmpsl
xor
stos
jmp
xchg
pop
out
lcall
lret
ja
lds
cmp
dec
mov
aam
insb
in
jmp
lods
movsl
cmp
push
xchg
std
push
dec
ret
fdivp
lret
mov
cld
rolb
cmp
ljmp
cmp
stos
rol
push
lods
inc
rcll
jecxz
adc
out
inc
inc
imul
inc
lea
adc
cmp
mov
mov
mov
aad
jg
je
int
cmp
mov
jno
sub
adc
xchg
fcomps
dec
lcall
imul
iret
testl
adc
loopne
xlat
outsb
sbb
testb
jae
mov
mov
cmp
mov
add
movsb
into
xlat
sti
sub
stc
in
sub
lahf
pop
inc
addb
mov
loop
into
pop
lret
mov
or
call
fmulp
ret
loope
xor
clc
outsl
fucomip
stos
push
mov
pushf
xor
mov
mov
ds
fidivl
cmp
ds
mov
cltd
mov
fsubs
mov
mov
arpl
add
cmp
test
lahf
push
imul
js
xchg
adc
adc
imul
jne
xor
or
mov
mov
inc
fcoml
mov
add
dec
test
and
fldcw
nop
cmpsl
lret
inc
jmp
jle
fisubrl
sbb
pop
ljmp
lock
lret
lret
mov
mov
xchg
dec
loope
or
push
fldenv
sub
mov
sbb
test
ds
adc
push
leave
add
imul
and
cmpsl
add
js
mov
cmp
stos
aam
shlb
pop
fisubrs
aam
loop
jae
fwait
pop
cld
movsb
repnz
inc
stc
xchg
cmpsl
mov
and
cmc
jge
lods
pop
test
adc
pushf
mov
ret
jmp
xlat
outsb
test
pop
push
mov
push
sub
mov
add
jp
dec
lret
cmp
addr16
ret
lcall
adc
or
jp
mov
inc
cmp
jg
loop
jns
mov
cld
or
xchg
test
daa
test
adc
jne
xor
pop
and
push
push
pop
push
inc
xlat
jb
lahf
movsb
lods
in
pop
dec
jl
mov
fadds
and
sub
out
scas
call
iret
add
je
roll
mov
sti
fwait
arpl
cmp
or
cmpl
sbbl
cld
mov
fnstenv
or
xchg
lret
in
push
sub
push
push
push
in
push
popf
outsl
push
fiaddl
adc
inc
push
jecxz
cltd
sub
movsl
fisubrs
mov
mov
sbb
stos
repnz
sbb
xor
sub
mov
xor
dec
pop
push
mov
lds
cld
dec
mov
mov
iret
adc
push
dec
dec
jbe
jecxz
jae
leave
movsb
out
data16
push
or
lods
shrb
xlat
shl
or
stos
or
adc
sub
cld
pop
sub
test
or
xor
icebp
mov
inc
in
cmp
daa
lret
push
jmp
sbbb
or
cli
or
rorl
lods
mov
movsl
dec
sub
loope
sub
sbb
loope
pop
xchg
iret
inc
in
cmp
lret
jl
sbb
lock
push
xchg
mov
mov
test
pop
cmp
jp
push
cmp
jbe
fistl
pop
addr16
sar
rorb
repnz
add
leave
dec
adcb
jmp
mov
rorb
inc
mov
test
jge
jg
pop
mov
mov
or
sbb
xor
adc
inc
fnsave
shll
mov
cmpsb
add
ja
jnp
std
pop
xor
push
push
data16
mov
dec
test
dec
inc
fnstenv
stos
lcall
loop
lea
push
rcrb
frstor
push
sbb
idivb
rorl
aaa
shl
movsb
dec
dec
dec
pop
xor
adc
cmp
das
je
fld
imul
test
jnp
test
push
mov
push
int
add
lahf
test
sbb
adc
xor
dec
std
or
popf
stc
and
jge
mov
push
aaa
cmp
pusha
xchg
mov
sub
pop
sbb
mov
popa
cmc
cmp
xchg
scas
pop
rorl
sub
jbe
ret
sbb
in
mov
aaa
or
xlat
dec
mov
cmp
dec
out
add
shrb
jae
out
stos
xlat
or
iret
pushfw
shll
push
aaa
into
add
dec
loop
and
xchg
into
xchg
rclb
mov
jb
cli
xchg
add
test
cmp
cmc
test
outsl
push
stos
sbb
xchg
sub
sub
mov
mov
loope
mov
push
sti
mov
dec
and
pop
imulb
imul
inc
ficoms
iret
aad
mov
or
test
aad
icebp
cmpsb
ss
cmp
push
lods
cmpsw
ds
mov
add
pop
out
lret
pop
jb
xchg
add
pop
xchg
xchg
sub
mov
push
and
and
out
push
scas
inc
mov
out
dec
fwait
mov
aam
jecxz
aam
xor
xor
jle
or
fidivl
scas
mov
xor
decb
movsl
out
xorb
movsb
sub
dec
insl
jo
nop
aad
push
movb
je
fprem
mov
cmp
inc
data16
or
cmc
fs
mov
fistl
icebp
ja
jbe
push
xchg
pusha
mov
mov
add
adc
mov
lret
mov
sbb
in
pop
push
xchg
je
xor
lea
test
xchg
inc
push
aam
clc
pop
loope
mov
ds
idiv
dec
out
les
je
xchg
cltd
mov
jae
outsb
gs
les
test
pop
imulb
pop
scas
mov
xchg
notb
mov
test
mov
add
pop
sbb
imul
sbb
inc
cmp
push
scas
shll
lds
fidivl
mov
add
out
xchg
push
or
aaa
mov
cmpsb
cmp
in
sbb
popf
push
daa
pop
xchg
dec
out
into
mov
rclb
jmp
mov
jno
lds
out
test
movsl
cmp
mov
lcall
movsl
cmp
movsl
lds
ret
sbb
subl
and
mov
jge
pop
loope
ret
fwait
jnp
xor
mov
into
push
push
push
dec
outsb
mov
sub
adc
ret
push
out
mov
cmp
lcall
loopne
pop
adc
mov
xchg
or
cmp
lahf
sbb
adc
stos
inc
pop
xlat
call
inc
mov
xchg
xchg
inc
cmpxchg
sbb
dec
pop
mov
nop
push
push
mov
cmp
add
add
mov
aad
pop
ret
sub
out
in
mov
sbb
mov
push
pushl
shll
rcr
sti
lock
mov
roll
sub
sub
jmp
inc
cwtl
or
insl
aas
movsl
call
lahf
out
jns
call
and
mov
dec
xlat
mov
cmp
mov
push
push
jg
inc
es
imul
dec
xor
fnstenv
sbb
repz
cs
sbb
cli
pushf
js
or
cs
add
and
test
mov
ljmp
sarb
loopne
hlt
cmc
fsubrs
or
jge
jns
jl
clc
lcall
push
sbbl
dec
icebp
insb
notb
fs
mov
pop
imul
loope
enter
aad
jnp
lcall
inc
fcompl
cmp
push
repz
pop
fists
cs
int
andb
fs
lds
stos
and
adc
push
adc
xchg
xorb
insb
jnp
nop
mov
cmp
lahf
add
testl
pop
xor
cmp
mov
cmp
shr
jle
adcb
pop
iret
daa
mov
scas
xchg
ret
aaa
jae
lods
sub
sub
stos
nop
dec
lods
inc
sub
sbbl
or
js
das
mov
pop
xor
ret
repz
jmp
xchg
cmp
data16
or
mov
aaa
jmp
lret
jae
std
loop
pop
repnz
xchg
out
sbb
out
xor
pop
push
jmp
inc
aad
add
sub
pop
sub
dec
xor
mov
lcall
and
popf
xor
cmp
and
push
stos
inc
push
gs
loopne
lret
out
mov
cmp
daa
lds
scas
inc
sbb
jbe
push
mov
cmp
or
xchg
and
mov
mov
lock
loope
push
ret
cs
lea
push
push
popf
dec
inc
adc
stc
outsb
and
pop
scas
push
jle
andl
push
inc
xlat
test
and
push
ljmp
pop
xor
push
xor
std
cmp
pop
test
fneni(8087
push
xlat
lea
mov
cld
sub
test
nop
ja
cltd
outsb
leave
nop
inc
jb
popa
movsl
pop
movsb
add
enter
pop
dec
cmpsb
inc
shr
pop
out
sub
or
pop
inc
jle
add
aad
andl
cmp
inc
mov
ljmp
sub
adc
test
insl
sub
cmp
xchg
cmp
out
or
mov
in
xchg
adc
aaa
mov
in
pop
repz
dec
adc
nopl
xor
push
out
inc
fdivs
jbe
adc
inc
leave
test
and
dec
mov
jl
lret
xlat
data16
andb
imul
add
rcr
jbe
fcomip
frstor
mov
mov
lods
daa
movsl
xor
int3
aas
dec
repnz
fdiv
xchg
mov
ljmp
mov
sbb
sbb
xor
cmp
sub
mov
and
inc
mov
int3
dec
cmpsb
jbe
icebp
mov
mov
es
jle
add
mov
push
sti
xchg
sub
iret
cmp
pop
push
in
popl
movsl
pushl
std
dec
and
pop
dec
pop
dec
add
sub
xchg
jne
out
sbb
loope
xchg
and
jecxz
mov
bound
es
inc
xor
inc
cwtl
int
jmp
and
pusha
test
bound
rcl
hlt
addr16
sbb
push
test
adc
mov
mov
and
dec
outsb
jnp
xchg
adc
fsts
push
mov
push
setb
std
iret
data16
out
cwtl
mov
pop
imul
xor
jne
ds
ja
ja
mov
push
aaa
mov
inc
fdivrl
mov
jg
loopne
or
xor
inc
and
mov
sahf
xor
or
mov
mov
inc
push
jmp
aaa
pop
jle
cmp
or
loope
push
nop
daa
shll
andl
xchg
movsb
js
cs
rcrl
push
xchg
or
mov
loope
repnz
nop
dec
arpl
pop
pop
pop
xor
mov
fcmovnb
mov
and
pop
jge
rol
adc
mov
sbb
pop
and
fwait
push
lods
leave
in
cmp
mov
sbb
cmp
cmpsb
mov
push
inc
int3
lea
mov
js,pt
out
adc
cli
shrl
jne
xor
icebp
movsl
ljmp
shl
mov
sti
addr16
mov
dec
out
push
aaa
dec
jle
sahf
ds
sub
mov
xchg
cmp
dec
loop
clc
lret
mov
cli
xchg
pop
dec
push
clc
inc
inc
sbb
aas
lahf
mov
cltd
fwait
sbb
jmp
jb
scas
and
rcll
shll
ret
shr
insl
and
jmp
divl
jno
cmpsb
xor
sahf
test
fdivs
testb
repnz
jle
jne
mov
aad
int
repnz
pop
mov
pop
add
shrl
adcl
dec
mov
dec
cltd
mull
pop
xchg
push
ficoml
fbstp
roll
xchg
sub
jbe
cwtl
mov
xchg
dec
shrb
pushf
xchg
xor
and
lahf
jb
inc
jae
hlt
fnstsw
or
ds
mov
arpl
insl
or
adc
lods
cmp
mov
cmp
ds
lcall
and
push
bound
call
lods
int3
jo
mov
xchg
jns
out
lds
popf
dec
popf
lcall
loope
nop
cli
jne
ljmp
xorl
popa
mov
into
sub
add
in
test
push
pxor
push
xchg
les
popa
and
mov
cli
push
mov
push
scas
lahf
daa
loopne
aas
cld
pop
sub
dec
xchg
pop
mov
xor
popf
inc
cmpsl
push
shrb
testb
sub
xchg
adc
inc
push
mov
movsl
push
cmp
fwait
sub
loopne
cmp
inc
jmp
mov
test
hlt
pop
or
pop
pop
and
add
xchg
jecxz
clc
sti
rol
xor
in
ja
adc
outsb
mov
dec
in
in
inc
int3
jl
imulb
sbb
push
cmova
jb
cltd
std
test
inc
fs
mov
pop
push
jmp
movsl
dec
leave
push
stos
addr16
xor
xor
shlb
push
cmp
jmp
lahf
push
mov
fmuls
daa
or
push
mov
xor
xchg
in
ja
and
stos
add
mov
sub
arpl
cmp
pop
std
aas
sarb
lahf
loopne
in
popa
mov
aam
sbb
aad
xchg
pop
pop
out
dec
xor
jg
add
inc
mov
dec
pop
sub
ja
mov
mov
dec
popa
enter
rcll
stos
fldl
cmpsl
mov
xor
arpl
aam
imul
repnz
notb
push
jp
in
and
add
out
cmpb
out
lock
xor
aas
lcall
and
and
std
xchg
repz
sub
add
daa
dec
dec
idivb
mov
mov
sub
rorl
les
stos
outsl
mov
pop
outsb
ret
fdiv
movsb
out
mov
jno
mov
sbb
test
mov
adc
push
lods
je
lea
ss
loope
in
jmp
in
dec
in
mov
js
jbe
sbb
adc
daa
daa
insb
scas
or
xchg
and
mov
xchg
div
adc
jae
sub
push
jae
shl
cmp
cmp
mov
loopne
inc
ret
jp
cli
or
test
aam
loopne
cmp
lock
mov
dec
aaa
jns
loopne
pop
pop
mov
jle
fs
jbe
lods
lret
add
xchg
cmp
inc
loop
inc
and
in
aas
mov
xor
fiaddl
or
mov
inc
push
stos
test
sub
push
ja
leave
fwait
mov
orb
loopne
sub
inc
inc
and
cmp
lods
dec
pushf
psubq
mov
mov
add
pop
mov
sub
mov
or
addl
insl
mov
mov
insb
rorb
xor
and
adc
insl
jg
stos
ljmp
xlat
pop
cmp
adc
dec
inc
loope
pop
sub
push
adc
xchg
pop
lods
imull
je
mov
rorl
add
cmp
xchg
addr16
jecxz
dec
inc
cwtl
hlt
mov
lods
push
aas
dec
adc
repnz
and
pusha
mov
popa
cld
insl
pop
ljmp
roll
sbb
call
cld
push
jo
sbb
mov
rcrl
inc
insl
notl
into
jmp
push
frstor
mov
fs
scas
mov
cmpsl
push
and
cmp
pop
lock
cmp
mov
stos
and
pop
adc
jns
mov
sub
xchg
and
sub
pop
jecxz
sbbb
sbbb
xchg
ja
movsb
cld
inc
fidivrl
or
and
dec
dec
sub
push
push
out
cmp
mov
sbb
mov
cmp
shlb
pop
dec
sub
and
scas
inc
add
mov
int
xor
lret
push
pop
imul
push
rep
loop
sub
dec
in
cmp
inc
aaa
xchg
je
xor
push
cltd
fbld
repnz
int
sbb
mov
jl
out
inc
add
int
xchg
lods
xchg
pop
test
stos
inc
aad
jae,pt
in
jmp
inc
clc
nop
add
or
jg
out
sahf
dec
mov
clc
push
cmp
mov
mov
xlat
and
cmc
outsb
push
outsl
imul
outsl
int3
std
or
jae
inc
or
mov
adc
add
pushfw
pop
and
out
sbb
xlat
inc
jmp
sbb
in
std
pop
lcall
xchg
xchg
xchg
inc
or
adc
adcb
je
pop
scas
xchg
jbe
lret
push
mov
cltd
pop
out
out
xchg
jbe
or
cs
or
adc
or
icebp
gs
add
dec
sub
fcoml
inc
sub
xor
into
dec
jbe
or
jmp
andl
in
js
pop
test
aas
add
test
mov
xor
outsb
add
outsl
add
jne
mov
hlt
push
sbb
pop
xor
out
mov
into
mov
in
mov
cld
add
push
cmc
data16
push
inc
jmp
in
popa
xchg
rcr
sti
xchg
int
clc
xchg
adc
mov
xlat
enter
jne
mov
push
adc
xchg
cmpsb
sbb
aas
adc
sahf
lahf
lea
iret
negb
inc
adc
sar
and
mov
loope
call
imul
push
fldl
into
fiadds
loop
loopne
rcll
int3
jle
js
sahf
adc
movsl
add
jns
bnd
jbe
sub
pop
add
mov
je
dec
and
mov
leave
out
das
add
shlb
cmc
pop
xor
fists
lods
adc
sahf
mov
repnz
and
icebp
dec
rorl
push
test
xchg
test
sahf
out
mov
or
mov
or
cmpsl
lds
xchg
pop
mov
fisubrs
pop
mov
pop
jo
stos
ret
xchg
dec
mov
lds
scas
ret
movsb
mov
xchg
dec
icebp
mov
fsubrp
sub
repz
popf
push
mov
rcrl
dec
pushf
sbb
mov
jecxz
and
sbb
jbe
or
pop
cmp
add
loope
cmp
aad
xchg
adc
fbstp
mov
pop
lcall
sti
mov
jge
aad
xchg
inc
fstp
mov
cmp
sub
mov
sti
inc
arpl
mov
pop
cmp
xchg
stos
dec
sbb
mov
push
mov
push
out
and
lea
sub
push
push
enter
jb
into
pushf
xor
and
call
lods
jae
repz
lcall
xor
xchg
hlt
or
sub
sub
fnstenv
ja
xlat
test
cmp
fwait
out
fstps
cli
xlat
outsl
adc
xor
and
push
or
in
jb
call
clc
mov
sub
cmp
sub
jb
mov
mov
fidivl
xor
sbb
in
mov
push
rorb
negw
xor
mov
insb
imul
jbe
ds
pushf
dec
shlb
pop
outsl
loop
jbe
les
inc
pop
lahf
mov
lds
popf
clc
enter
push
jmp
pop
leave
xor
ror
jo
ljmp
ficoms
push
js
mov
icebp
xor
orb
mov
mov
mov
push
pop
imul
jecxz
sahf
xor
sbb
fs
enter
lahf
sbb
out
and
sti
xchg
outsb
insl
insb
sbb
rcrb
andl
mov
lret
jg
frstor
testb
pop
jp
hlt
or
pop
pop
je
add
pop
cltd
xlat
xor
test
imul
movsl
mov
and
mov
jecxz
sbb
sbb
ret
inc
cmpsl
das
clc
clc
sbb
in
xchg
mov
idivb
sbb
sti
xor
jbe
mov
and
mov
lea
mov
out
hlt
leave
cmp
mov
ja
sub
and
mov
in
es
mov
std
sarb
sub
dec
scas
cmp
cwtl
and
popa
aaa
mov
test
dec
daa
adc
add
fs
push
sbb
pop
inc
leave
repz
and
rcrl
or
into
mov
pop
int
rcr
insb
incl
xchg
jae
jne
jl
leave
and
cmp
push
or
data16
cwtl
orl
movsl
aas
movsb
pop
lcall
sahf
xor
or
enter
xchg
push
int3
inc
lret
sub
pushf
push
dec
mov
pop
test
ds
inc
popf
lods
push
scas
into
dec
sbb
js
scas
inc
pushf
cmp
cld
xchg
sub
shrl
ret
inc
push
mov
in
fimuls
inc
shlb
xchg
call
xor
test
or
std
cmp
in
adcb
subb
lahf
mov
lcall
push
stos
inc
xor
ds
mov
push
mov
cmp
scas
jbe
in
js
xor
inc
cmp
push
sub
and
dec
pop
dec
inc
sub
mov
das
stos
add
daa
inc
nop
jae
aaa
fnstsw
mov
inc
and
add
push
inc
es
loope
cmpsl
ret
mov
stos
cmp
and
xchg
lods
popa
gs
add
mov
dec
pop
mov
movsl
loop
jle
jmp
xchg
arpl
push
ror
cmpsb
imul
sub
sub
pop
stos
mov
mov
in
mov
and
stos
pop
jnp
aad
dec
rolb
das
pop
outsb
mov
push
mov
lahf
ljmp
inc
dec
js
out
rcll
rorb
or
fwait
repnz
add
and
hlt
mov
cmp
push
jmp
andb
xor
cmp
dec
xchg
adc
cmpsb
shrb
cmc
sub
add
fldpi
adcb
sbb
mov
and
sti
je
imul
dec
lock
fs
call
je
stos
cs
inc
fstl
fnstsw
push
jae
aas
js
fldt
push
xchg
mov
push
popa
and
daa
ljmp
int
cmp
mov
mov
mov
lock
ja
lret
xor
roll
cmp
mov
dec
in
adc
notl
xchg
cld
push
inc
cli
rcr
dec
pop
sbb
mov
jae
into
mov
add
xor
cmp
in
xor
mov
and
mov
sbb
notb
dec
repnz
fidivrl
or
xor
fisttps
ljmp
imul
scas
sbb
hlt
ss
fmuls
mov
out
rorb
js
inc
pop
mov
mov
cmpsl
into
fsubp
das
adc
jnp
dec
lcall
pop
adc
aas
push
sub
push
outsb
add
movsb
imull
xor
jne
or
pop
jg
xchg
mov
ss
notb
lods
lret
add
loope
adc
fidivrl
mov
jbe
add
imul
les
insl
cmp
scas
test
lcall
add
dec
jmp
jp
jmp
inc
shll
xor
sbb
cmp
out
mov
jmp
popa
in
add
daa
das
and
sbb
xchg
jp
jp
repz
pop
push
les
sbb
lret
cmp
or
or
push
shr
jnp
sub
inc
sub
sbb
inc
jns
das
andl
inc
push
xchg
fdivp
sti
call
cmp
out
sti
and
inc
inc
adc
in
aaa
adc
inc
outsl
repnz
or
pop
push
in
mov
xchg
lods
dec
in
cli
repnz
pop
repnz
lcall
popa
adc
add
icebp
mov
test
das
lds
daa
arpl
int
pop
out
inc
gs
pop
jecxz
leave
loope
xor
mov
push
inc
insb
xchg
sub
aad
inc
fcoml
testl
jmp
mov
inc
xlat
dec
test
int3
lret
lret
mov
test
pop
cmp
pop
insl
push
or
or
push
dec
jmp
xlat
outsb
pusha
cmpsl
and
mov
outsb
repnz
adc
or
rcll
sub
xchg
pushl
mov
mov
inc
call
dec
jnp
lock
or
pop
add
inc
pusha
dec
mov
stos
fsubl
sub
or
in
imul
fdivl
fwait
jne
push
xor
test
xor
sub
xchg
movsb
xor
mov
cld
insb
jle,pn
push
stos
push
sbb
orb
js
adc
xor
daa
scas
mov
pop
inc
push
sub
inc
scas
cmp
out
rolb
inc
aas
mov
fxch
mov
ljmp
cmp
inc
stos
dec
cli
sahf
jle
or
ds
lods
adc
sub
js
mov
sti
es
push
loope
mov
fisttpl
and
push
movsl
inc
pop
inc
std
cltd
out
mov
push
scas
nop
push
mov
pop
mov
xchg
sti
pop
in
sbb
sub
std
jle
dec
nop
frstor
add
aas
push
dec
dec
out
jns
in
or
adc
sub
sbb
or
push
andl
test
xchg
fldt
inc
sbb
das
movb
dec
in
sbb
aaa
ljmp
dec
movsb
dec
aas
scas
mov
push
inc
pop
cmp
dec
idivb
pop
cmp
xchg
xchg
gs
xchg
scas
ds
aam
sub
jbe
imul
ja
mov
cmp
mov
inc
push
lret
popf
test
orl
push
lods
enter
stos
and
movsl
push
mov
jnp
js
stc
je
pop
xor
daa
jl
pop
or
test
ja
in
add
fisubrs
fldt
stos
in
push
fs
cmp
jl
data16
sbb
mov
jl
cwtl
cmp
lcall
movsl
mov
pop
in
sbb
dec
xor
mov
mov
xor
fucomip
jl
lret
test
inc
add
jle
pop
imul
jns
fsubrs
jl
and
cld
mov
adc
push
dec
cmp
ret
popa
xor
mov
inc
push
cmpsb
cmp
fadds
add
fstpt
in
lret
daa
rol
mov
insl
jl
dec
mov
inc
subb
mov
dec
dec
je
jno
shlb
testb
push
mov
cmp
test
push
movsb
shll
fstpl
cmpsb
cmpsb
xchg
popa
pusha
adcb
data16
push
mov
or
js
mov
cmpsl
mov
mov
fsts
aad
cmpsb
cmc
mov
xlat
cmp
add
pop
rcr
xlat
cmp
addr16
mov
inc
jns
mov
jbe
out
popf
stos
test
stos
pop
lods
dec
push
clc
rcl
add
pop
dec
mov
pushf
loop
mov
and
cmc
aad
imul
idivb
sub
call
dec
jle
push
sub
inc
ljmp
jnp
lea
stc
and
roll
repz
mov
jno
rcrb
pop
mov
mov
outsl
xchg
xor
cmp
daa
aam
test
inc
rorb
bound
mov
push
jge
movsb
dec
inc
pop
fsts
pushf
inc
pop
dec
loope
push
dec
les
mov
pop
jo
cli
jg
xor
scas
ljmp
dec
ss
pushf
add
cmp
sub
cmp
mov
and
movsb
iret
fisubrs
test
andl
sbb
sub
imul
fdivs
daa
mov
sub
lahf
and
add
fcomi
and
out
loope
adc
je
adc
movsl
mov
pop
and
add
mov
push
dec
sub
mov
testl
in
lock
pushaw
or
cmp
add
fbld
notb
stos
cmp
cmc
js
mov
sub
and
movsb
xor
cmpsl
xchg
xchg
xchg
ljmp
jb
pop
sub
loop
add
out
mov
cmp
rcll
js
fwait
movsb
ss
in
mov
fbld
setno
mov
stos
push
mov
adc
xor
in
jge
mov
aam
lret
iret
mov
push
ficoms
xchg
arpl
or
mov
inc
or
cltd
sub
adc
sub
pusha
and
jle
testb
in
or
jp
mov
mov
jp
sub
or
mov
cltd
repnz
mov
mov
push
dec
cmc
fiadds
adc
std
jbe
stos
test
outsb
roll
out
push
popf
arpl
or
cmp
dec
int3
push
fisubs
xor
xchg
sub
xchg
repnz
mov
mov
out
cmpsl
loope
insl
add
add
push
jne
cmp
stos
xor
in
inc
add
enter
int
pop
xchg
xchg
cs
and
hlt
rorb
mov
shr
mov
cltd
icebp
ljmp
stos
or
icebp
insl
leave
insl
dec
fnstsw
jg
xor
add
test
sbbl
mov
hlt
sub
clc
mov
and
or
or
adc
inc
fs
pop
push
scas
dec
les
xor
mov
imul
aam
movsl
pop
push
ja
idivl
or
xchg
push
fsubr
cli
mov
push
xchg
adc
xorb
adc
leave
jg
ss
ret
mov
leave
jp
xor
adc
mov
insl
jb
lahf
push
lret
stos
push
sbb
adc
mov
in
mov
std
in
lret
dec
sub
loop
mov
and
scas
vpandn
sbb
lock
popa
pop
movsb
jecxz
or
ds
cmp
bound
mov
mov
arpl
test
ljmp
dec
fyl2xp1
fstpl
pop
and
dec
pop
lods
imul
sbb
pop
add
lods
mov
xor
shrl
push
rolb
out
mov
and
pop
stos
xor
xor
addl
sar
test
push
dec
mov
fmulp
rorl
shll
pop
adc
iret
cmp
lcall
xor
push
push
test
aad
sbb
mov
pop
jp
lock
cmp
xchg
ljmp
jne
rclb
cmpsb
add
out
push
out
and
cmpsb
je
mov
test
push
sarb
xchg
loopne
call
test
or
fistpl
andl
stc
lret
dec
jecxz
std
sti
or
pop
sub
repnz
cmp
pop
fnstsw
and
push
popf
call
stos
loope
out
popf
push
xchg
push
test
insl
aad
push
jns
mov
sbb
pop
mov
repnz
push
dec
mov
or
cmp
xchg
push
movsb
imul
nop
std
pop
cmpsl
xchg
mov
pop
mov
and
out
popf
outsb
in
add
mov
das
and
inc
or
icebp
fists
test
and
pavgw
and
xchg
adc
cmp
adc
cld
lock
int
jge
adc
mov
shll
lret
push
pushf
xchg
cmc
push
clc
mov
xchg
or
inc
and
adc
mov
enter
push
push
call
fcompl
add
or
and
clc
ss
pusha
add
xchg
mov
rcrl
jo
data16
mov
out
pushf
pop
or
and
imul
push
loope
and
dec
jle
push
mov
imulb
adc
pop
test
shl
icebp
dec
mov
lds
mov
mov
leave
cmp
iret
xchg
scas
inc
pop
jmp
mov
lods
jg
push
cmp
js
loop
repnz
xchg
rcrb
imul
stc
or
int3
push
les
xlat
inc
sahf
in
mov
mov
xchg
mov
fwait
push
cmpsl
or
test
mov
jne
pushf
push
and
push
subb
call
daa
sbb
sub
dec
xor
push
xchg
dec
filds
out
rclb
lret
sub
adc
popa
xor
jg
cmp
cmp
cmp
into
repnz
cs
into
jnp
push
inc
and
pop
in
xlat
push
mov
sahf
out
dec
dec
mov
cmc
aas
mov
lcall
lods
pushf
mov
or
mov
aaa
scas
or
push
xor
leave
daa
ret
jb
inc
test
les
add
mov
inc
dec
sbb
cltd
sbb
push
ljmp
jno
cwtl
lcall
jmp
arpl
fs
lret
and
xor
nop
daa
gs
pop
fwait
stos
sub
push
loopne
or
ja
pop
pop
pmaxub
push
sbb
insl
mov
add
hlt
int3
fcomps
xlat
add
add
dec
xchg
les
xchg
cmp
jne
sbb
xor
dec
stos
dec
stos
in
loop
inc
dec
das
xor
inc
icebp
push
mov
push
stc
std
movsl
inc
xor
mov
roll
jg
sub
cs
jnp
inc
adcl
fisubs
xchg
pop
notl
add
mov
mov
andb
sbb
das
lds
es
addr16
mov
pop
ret
inc
sbb
xchg
lret
data16
andl
adc
push
inc
push
fmul
and
cmc
xlat
dec
dec
xor
jl
pusha
jmp
bound
mov
icebp
xchg
out
cmpsl
sahf
sbb
xchg
fildll
adcb
or
inc
adc
insl
sahf
iret
gs
scas
addr16
lods
out
fisubs
adc
mov
jno
in
push
inc
aas
jno
or
ficomps
mov
lods
jle
push
daa
rclb
sahf
mov
sbb
mov
out
jge
jge
fsubl
lcall
pop
sub
rolb
xchg
loope
jmp
cmp
mov
xor
sbb
nop
mov
adc
ljmp
mov
cwtl
int
jns
push
xchg
cmp
in
or
jbe
sahf
es
inc
or
ss
clc
push
ljmp
scas
shrb
lods
mov
into
inc
fs
xchg
fs
jns
xchg
mov
mov
xchg
add
jecxz
popf
cltd
into
orb
mov
or
addr16
daa
data16
or
mov
std
mov
gs
fisttps
jno
cld
inc
repz
pop
adcl
imul
mov
out
test
push
popf
je
jbe
out
sti
jbe
mov
adcb
pop
mov
dec
add
cwtl
fisubrs
mov
negb
je
add
pop
sub
push
mov
mov
jae
scas
mov
xor
sub
mov
xchg
mov
xchg
sub
test
aaa
push
mov
arpl
adc
sbb
xchg
into
pop
shrl
dec
jmp
push
inc
fsubrs
inc
das
xchg
enter
add
leave
push
call
sub
outsl
pushf
mov
divb
js
dec
ljmp
call
mov
mov
movsb
mov
cmpsl
shr
push
sub
aas
pop
jne
add
mov
pop
insb
sbb
add
ja
out
xor
pop
cmp
add
push
mov
add
movl
xor
pop
jp
in
iret
pop
loope
les
call
pop
aad
dec
hlt
test
jl
sti
push
cli
xchg
test
ss
int3
sahf
mov
xchg
jb
mov
adc
negb
dec
mov
push
pop
sub
push
pop
jg
mov
pop
mov
cmpsb
cltd
xor
cmpsl
cmc
test
icebp
repz
fs
xor
mov
pop
fnstcw
xor
xchg
in
scas
lahf
negl
mov
in
xchg
xchg
push
mov
add
and
cwtl
jbe
inc
jae
fsubrl
nop
and
pushf
ret
enter
adc
mov
xchg
dec
mov
adc
std
jle
or
or
popf
mov
repnz
scas
mov
movsl
fstpt
iret
cs
sub
mov
rcrb
add
xlat
cmp
inc
rcr
jne
lds
jg
negb
in
dec
jbe
xchg
call
mov
addr16
jo
arpl
test
scas
and
or
pushf
xchg
mov
cltd
nop
pop
pop
inc
xchg
or
fsubs
sub
testl
out
rclb
sub
imul
repnz
mov
in
add
inc
into
js
mov
aaa
imul
pop
jb
push
js
sbb
stc
lock
and
imul
adc
mov
std
or
loopne
test
jnp
jno
roll
scas
and
out
shll
aaa
ret
jge
outsl
adc
fiadds
shlb
jbe
loopne
xchg
scas
inc
in
xchg
xchg
insl
out
sbb
in
jno
pop
lock
iret
xorl
or
pop
addb
out
mov
in
or
dec
and
mov
inc
xchg
xorb
add
push
mov
mov
jbe
aam
adc
jne
test
inc
or
mov
aam
sub
sbb
or
dec
xchg
add
cmp
mov
fbstp
sub
mov
mov
pop
insb
adc
sub
lds
sbb
mov
gs
out
push
ljmp
jb
outsl
insl
ds
test
xchg
ret
jne
inc
mov
mov
clc
inc
add
lcall
lock
and
arpl
in
mov
leave
arpl
push
scas
sub
mov
popf
inc
push
cmp
aad
lea
mov
adc
orb
je
out
add
and
leave
dec
arpl
inc
and
xrelease
pop
push
movsb
lret
mov
loopne
mov
inc
pop
ds
fmul
imul
loopne
dec
adc
dec
and
mov
mov
out
push
mov
out
xor
xor
ror
xchg
cmpsb
aas
mov
loop
push
rcr
jae
ljmp
test
out
dec
push
imul
test
ds
lods
icebp
pop
idivb
scas
and
addr16
sbb
mov
pop
mov
call
popw
je
or
jb
inc
xchg
xor
fadd
cltd
inc
jbe
mov
push
mov
inc
leave
adc
aad
xchg
mov
cmc
jns
cmp
cs
roll
push
jae
mov
test
push
shr
cwtl
add
mov
mov
cmpsb
inc
arpl
mov
fs
mov
mov
jo
leave
sub
inc
xchg
cmpsb
lcall
bound
sbbl
fldenv
or
jle
pop
pop
adcb
pop
imul
inc
jo
pop
adc
mov
xchg
pop
in
mov
js
xchg
cmp
rcrb
fdivrs
pop
cmc
in
call
in
jl
imul
movsl
dec
jge
call
dec
sbb
sub
ss
push
mov
dec
xor
mov
adc
sub
cli
inc
out
mov
inc
adc
inc
fs
dec
sti
es
sbb
cmpl
jge
xchg
out
adcl
andl
xlat
push
mov
push
mov
sbb
xchg
mov
add
lods
sbb
lods
fcomip
pop
jnp
js
dec
stos
inc
outsb
jns
dec
les
dec
adc
mov
push
push
imul
js
loopne
jg
js
ljmp
es
cmp
mov
push
pop
lock
fcomip
insl
push
ja
test
xchg
pop
dec
mov
xor
xor
mov
dec
or
pop
cwtl
inc
pop
mov
ficoms
clc
add
out
out
daa
and
mov
in
daa
and
les
mov
cs
lahf
xlat
push
or
test
loope
lahf
push
add
push
nop
dec
retw
jbe
xlat
ss
xor
and
push
mov
pop
mov
sub
out
clc
jp
pop
imul
inc
and
je
mov
call
mov
xchg
shlb
les
test
cmp
movsl
pop
mov
push
in
jmp
aaa
clc
fisubrs
fstpl
daa
movups
jl
and
push
loope
nop
xor
mov
dec
in
pop
imul
leave
pop
out
mov
sti
sahf
jae
xchg
jmp
mov
mov
cld
push
fidivl
leave
push
push
je
sbb
pop
inc
xchg
jle
shlb
xchg
flds
dec
cmp
or
mov
adc
stc
leave
mov
inc
repnz
stos
jo
cmpsl
sub
inc
fisubrl
aad
aam
popa
jnp
mov
pop
or
mov
adc
add
jp
cli
pushf
sbb
imul
mov
cld
and
adc
pop
mov
ret
call
fisubs
push
sub
push
mov
and
mov
dec
inc
jl
jb
cmp
pop
mov
sti
jg
sub
iret
mov
arpl
mov
and
int3
jmp
mov
into
fmul
xchg
clc
xchg
dec
lock
cmpsb
test
jnp
outsb
mov
pop
inc
fiaddl
mov
in
adc
leave
cmpl
sub
popl
dec
cmp
stc
inc
mov
or
jp
pop
add
xor
stos
daa
adc
adc
jnp
int3
sbb
cli
jp
mov
jmp
cld
in
sbbl
inc
imul
notl
adc
or
sbb
jbe
xchg
fs
in
push
sbbb
mov
popa
clc
pop
push
jb
push
cli
mov
fcomi
jmp
or
jmp
in
mov
cwtl
test
push
mov
push
rclb
enter
inc
inc
out
bound
rorl
mov
and
xchg
pop
std
xchg
std
shrl
cwtl
xor
outsb
popa
mov
in
movsb
mov
je
jb
loop
sahf
xchg
inc
fildl
daa
enter
xchg
cmp
and
and
icebp
adc
xchg
adc
fstpt
lds
mov
sub
push
mov
std
jmp
out
jge
lret
lcall
psadbw
je
fildl
aad
shr
bound
daa
cmp
mov
insl
xlat
dec
dec
in
lods
loop
pop
popf
rolb
xchg
gs
outsb
in
and
test
lret
shrb
out
in
scas
and
outsb
xor
inc
arpl
mov
scas
out
jg
lods
lahf
adc
add
xor
outsl
dec
adc
insb
mov
push
mov
adcl
jno
pop
xchg
pop
hlt
xor
push
add
ljmp
jb
call
sbb
stc
jge
push
inc
mov
sub
mov
dec
mov
mov
lret
stos
roll
adc
fiadds
jmp
cltd
inc
data16
sbbl
cmpsl
cwtl
enter
stc
cmp
mov
lahf
fimuls
jbe
lock
mov
nop
call
dec
cmc
adc
xchg
sbb
data16
mov
mov
clc
sbb
push
or
inc
jp
hlt
mov
adc
sbb
aas
xchg
mov
xchg
xor
ret
pop
in
cmp
pusha
movsb
es
jno
mov
fbld
negb
inc
mov
addw
out
xchg
je
faddp
sub
jge
sub
mov
in
jo
mov
xchg
sbb
in
idivb
insl
inc
in
pop
jne
aam
out
outsb
cmpsl
mov
mov
xor
sub
gs
pop
xlat
shlb
xchg
enter
bound
loope
hlt
pop
push
mov
pop
pop
notl
sub
cmp
and
push
jge
push
mov
fcoml
mov
adc
out
int3
xchg
mov
enter
adc
aam
pop
sub
ret
andb
outsb
fnsave
xchg
push
inc
mov
lds
mov
loope
popf
mov
sub
das
adc
out
aam
hlt
mov
adc
icebp
cmp
ljmp
mov
add
or
inc
cs
or
push
push
cmp
in
push
addb
xchg
in
fcom
cmp
aaa
in
rcll
repnz
test
flds
insl
loopne
popf
fwait
fwait
cmp
aas
ficoml
lret
shll
iret
movsb
sub
leave
xor
and
inc
ljmp
fisubrl
es
cmp
sub
adc
mov
outsl
push
sbb
loope
dec
add
subb
mov
mov
dec
mov
cmpsb
je
movsb
movsl
enter
mov
lods
fstpl
xchg
mov
xor
das
scas
sahf
sbb
test
fistpl
mov
daa
iret
sub
add
mov
hlt
ret
cmpsb
lcall
cmp
inc
or
mov
decl
std
sti
adc
aaa
push
add
dec
push
popf
outsb
test
mov
cmp
and
xor
adc
or
inc
fidivl
mov
test
ja
adc
icebp
mov
sahf
pop
push
add
cmp
pop
cmc
pop
adc
sbb
pop
mov
rcll
push
cltd
test
insb
fimuls
xor
jg
inc
cs
clc
loop
call
cmpsl
ret
and
in
cltd
xchg
jg
mov
mov
sbb
in
xor
dec
jne
hlt
cmpsb
push
inc
inc
aam
push
sbb
and
xlat
mov
or
int
scas
fs
stos
rcl
ljmp
lret
cmp
mov
adc
test
call
sti
in
pop
xchg
xor
sub
or
data16
out
popa
clc
xchg
subl
pop
sarl
push
and
lahf
aad
push
ljmp
jno
rcr
jmp
sub
out
pop
out
xchg
iret
push
add
push
xor
xchg
and
lods
ja
punpckhwd
mov
xor
leave
mov
pop
int
or
adc
inc
pusha
push
ja
arpl
dec
pop
or
jo
inc
inc
jns
lahf
stos
sbb
aam
push
mov
mov
hlt
adc
test
pop
adc
and
sti
and
sub
sub
mov
scas
push
imul
inc
jo
ja
jle
xchg
outsb
sbb
out
dec
iret
clc
pop
sub
inc
lods
mov
lds
hlt
ret
inc
fdiv
xchg
fdivl
mov
pusha
mov
and
divb
mov
inc
pop
and
or
stos
in
sub
les
push
shl
pextrw
imul
ficompl
sbbb
cld
pop
es
and
movsl
push
lahf
and
cs
inc
mov
fwait
xor
sbb
mov
sbb
dec
lcall
les
out
inc
dec
in
jg
jb
mov
jns
jnp
xchg
push
test
out
mov
shl
or
pop
addr16
push
adc
xor
stos
mov
dec
jnp
dec
fistps
mov
les
mov
loop
mov
fdivs
sbb
inc
sahf
scas
sti
jmp
sbbl
loop
mov
jge
jp
adc
dec
cmpsl
sbb
and
aas
jo
bound
notb
shlb
fdivs
cmp
mov
mov
in
jb
scas
std
push
in
pop
lds
xchg
pop
fwait
cmp
and
int
movsl
push
loopne
popa
jne
repnz
mov
iret
lock
in
push
repnz
out
mov
cmp
lea
sub
aad
lds
sub
and
xor
pop
lock
push
inc
mov
stos
movaps
movsb
fistps
fwait
loop
cmp
lahf
xor
sub
fs
gs
mov
jae
add
lods
adc
mov
test
aaa
into
testb
sbbb
lahf
jae
xchg
popa
jnp
adc
out
cld
xor
xchg
rclb
dec
mov
mov
mov
jg
add
pop
pop
pop
sbb
inc
mov
xchg
mov
test
leave
data16
loopne
cmc
add
push
mov
sub
mov
fimuls
lahf
iret
outsb
shl
sbb
push
ljmp
ljmp
lret
inc
xlat
cld
jecxz
mov
fisubrl
repz
jl
sub
mov
mov
pop
adc
sub
popf
ja
stc
test
sbb
push
or
fnstenv
push
cmpsl
ds
test
out
push
lock
inc
ficompl
pop
pop
mov
clc
mov
lea
xchg
bound
xor
xchg
push
loopne
test
decb
pop
cld
xor
cs
sbb
cwtl
enter
mov
dec
je
test
fnsave
dec
leave
fxch
mov
fadds
mov
mov
adc
dec
imul
adc
xor
ljmp
sbb
xchg
push
call
fcoml
nop
sub
mov
jb
lods
aaa
hlt
fldl
jl
cmp
dec
or
pop
cmp
dec
pop
dec
repz
test
scas
popf
mov
int
cmp
pop
fnstcw
stos
shrl
cmp
cmpsb
xor
sub
add
arpl
xorl
aad
push
mov
mov
nop
cmp
jp
mov
cmp
sbb
neg
cs
lahf
mov
sub
jp
loopne
mov
push
mov
into
mov
insb
insb
lock
push
dec
sbbb
loop
js
pusha
loop
mov
cmc
add
lahf
cmp
rcr
and
jne
cld
out
mov
jne
inc
pop
bound
xchg
call
dec
addr16
in
dec
adc
jnp
in
scas
pushf
push
ficompl
cmp
push
fdiv
cmp
imul
das
add
push
mov
ret
mov
flds
lods
dec
incb
fisubl
aas
decb
stos
xchg
pop
dec
cmpsl
fcmove
pusha
ss
sti
sub
pop
add
dec
and
shlw
sub
ret
aaa
jl
inc
lock
das
loopne
fbstp
loop
mov
test
sahf
inc
sub
mov
sbb
adc
jecxz
icebp
push
rcl
mov
pop
cmc
mov
jecxz
lods
mov
or
es
jg
mov
push
popf
mov
or
std
pop
and
pusha
push
push
fsubs
fidivs
push
add
testb
fwait
scas
push
jne
ficoms
idivb
fs
sbb
xchg
pop
gs
ffreep
lahf
add
xor
sbbl
cltd
dec
cli
call
fdiv
mov
fistpll
pop
mov
mov
test
addr16
cli
nop
int
scas
lcall
lret
iret
xor
pushl
xor
lahf
mov
in
pushf
inc
movsb
pop
mov
addr16
inc
jne
les
mov
add
sbb
pop
aas
call
lret
mov
arpl
insl
loopne
mov
repnz
pop
out
cwtl
out
rol
test
mov
lcall
bound
fucomp
pusha
aaa
jo
pusha
sub
mov
pop
repnz
aam
rcll
in
inc
ljmp
imul
popa
mull
ds
sub
jle
movsl
jp
in
and
pop
push
inc
jae
dec
mov
mov
jmp
sub
mov
jae
mov
insl
movsl
rcrb
ret
data16
inc
pop
mov
push
andl
xchg
fsin
out
bound
lcall
dec
adc
dec
and
inc
add
jne
arpl
decb
pop
jp
adc
imul
mov
cli
inc
mov
xchg
lods
mov
push
jecxz
or
sti
orb
and
mov
popa
dec
push
push
mov
imul
add
dec
repz
xlat
fimuls
ret
je
mov
mov
js
or
cmp
add
icebp
in
jmp
adc
or
inc
push
sub
sub
sub
xor
pop
mov
pop
add
fs
push
xchg
and
dec
jno
cmc
in
lods
sarb
in
in
push
adc
xlat
pop
cs
add
cli
lock
mov
xlat
scas
outsl
sub
mov
into
dec
push
jge
rcrl
lods
mov
out
test
mov
pavgb
dec
aam
pop
push
inc
mov
sub
cltd
adc
mov
and
aam
sub
fstpl
bound
mov
adc
and
bnd
subl
pop
loop
int
add
push
ss
dec
cltd
imul
shlb
mov
xor
push
jp
test
xchg
and
mov
cwtl
sahf
daa
mov
push
test
subl
add
pop
mov
adc
cltd
int
mov
dec
fildll
pop
fisubrl
test
mov
xor
lods
or
xchg
or
pop
dec
or
icebp
in
outsb
in
iret
dec
cmpsb
cmp
mov
dec
insl
repz
inc
add
je
push
sub
and
jbe
and
leave
push
scas
sbb
pushf
push
test
sbb
mov
fwait
cwtl
fidivl
inc
jnp
inc
inc
stc
je
jmp
bndcl
cmp
lods
call
insl
mov
jns
and
hlt
lcall
js
pop
jnp
push
lods
adc
mov
into
sahf
xor
mov
mov
cli
jns
cmc
mov
sub
int
sbb
out
xchg
sub
addl
out
mov
std
andb
into
pushf
xor
jae
cld
and
cmpsl
dec
jl
push
in
xchg
mov
leave
out
sbb
ret
mov
or
imul
or
mov
int
sub
push
cmp
lcall
fiaddl
push
movsl
in
jb
mov
fcoml
xor
int3
lahf
mov
lcall
and
cltd
gs
fnsave
jmp
in
out
jbe
and
or
in
insb
test
sub
aad
mov
cld
sbb
fwait
cmpsl
movsl
cmpsb
arpl
mov
ljmp
xchg
mov
inc
add
dec
jne
into
inc
mov
and
sbb
jmp
xlat
in
and
push
aaa
inc
jp
push
jmp
icebp
lret
push
out
imul
loop
sti
cwtl
and
out
imul
pop
jle
lret
js
mov
mov
add
icebp
js
outsl
movsl
sbb
rorl
mov
loop
xchg
dec
enter
insl
pop
jno
xor
aam
pushf
sbb
mov
mov
stc
call
mov
out
leave
sahf
adc
outsb
repnz
jmp
andb
or
push
stos
sub
fdivrl
lods
pushf
dec
jns
hlt
stos
insl
and
or
sub
idiv
data16
in
xchg
ds
mov
dec
dec
mov
cmpb
jae
mov
mov
pop
call
inc
lea
mov
dec
call
and
pop
push
clc
negb
into
adc
push
and
jo
insl
loopne
sbb
insl
push
lret
pop
outsb
fnsave
cmc
mov
add
cmp
mov
dec
sti
cmp
test
cmpsl
mov
aam
ret
mov
cmc
push
jnp
stos
mov
mov
push
jne
pop
arpl
imul
insb
popf
lcall
inc
sbb
enter
jb
inc
pop
ss
mov
aam
add
sub
xchg
mov
push
sbb
add
test
faddl
aad
adc
stos
mov
mov
shll
test
in
nop
fs
cmpsb
ret
lods
inc
lock
lods
inc
adc
lret
cmpsl
xchg
lret
push
mov
shlb
mov
pusha
pop
fs
out
mov
pop
xor
sub
and
arpl
dec
jecxz
mov
out
push
iret
jecxz
in
das
add
aad
mull
negb
adc
push
sub
fimull
inc
nop
ljmp
xor
inc
mov
dec
sbb
ds
data16
jmp
xchg
imul
fnsave
mov
mov
dec
les
sarb
inc
dec
out
test
xchg
in
xchg
cltd
or
shll
cmpb
pop
mov
out
sub
mov
xlat
dec
fsts
mov
xchg
mov
add
cmp
sub
adc
mov
orl
mov
fsubrp
adc
pop
jmp
and
xlat
aam
daa
mov
pop
outsl
inc
loope
std
int
das
cmp
jmp
push
testb
sub
sub
mov
mov
pop
inc
rcr
mov
push
out
popa
mull
dec
jle
jle
nop
andps
int
dec
jo
js
shll
push
add
inc
in
mov
xchg
push
pop
push
pop
push
out
jne
mov
cmp
out
or
or
adc
sub
xor
sub
sbb
jl
push
out
popf
mov
inc
mov
stos
xchg
xchg
mov
cmpsb
ret
pusha
idivl
xchg
aad
stos
pop
jle
xchg
lret
pop
lds
add
mov
push
int
mov
ret
sbb
ficoms
sbb
mov
mov
cmc
arpl
cmp
mov
mov
sbb
outsb
and
out
fimuls
out
insl
fisubrs
imul
dec
pop
mov
adc
js
jecxz
mov
pop
push
xchg
stos
xor
in
test
cld
fstl
fldenv
xchg
mov
call
dec
dec
in
fwait
jge
mov
jnp
fdivr
repz
add
inc
sub
movsl
mov
pop
movb
pop
and
aam
das
bound
dec
pop
cmp
push
lcall
in
insl
xor
lock
es
sbb
xor
clc
popf
and
or
mov
xlat
xor
insl
add
insb
jp
lds
mov
push
sub
xor
mov
loopne
and
fwait
mov
gs
ss
xchg
or
jle
int3
lret
std
mov
add
lret
jmp
arpl
mov
lcall
push
cmp
into
test
out
bnd
std
mov
xor
in
adc
push
cld
push
pop
pushl
in
inc
in
xor
push
out
cmp
fcompl
andps
pop
sub
gs
fildll
ds
int3
xor
call
js
jecxz
inc
pop
jmp
ja
pop
or
test
cli
arpl
data16
shlb
and
xchg
nop
adc
lret
sbb
push
inc
popa
jnp
xorl
adc
arpl
testb
std
outsl
enter
in
fldt
inc
adc
out
dec
loop
push
mov
add
ja
shrb
pushf
or
shll
jmp
insl
in
test
aaa
mov
clc
sahf
mov
rcll
mov
into
mov
int3
pusha
mov
decl
call
cmp
insl
add
je
pop
bound
cmp
cmp
in
inc
enter
jbe
xlat
pop
aaa
adc
sub
mov
ja
out
stc
inc
jb
repnz
popa
rol
iret
cs
xchg
test
mov
fs
sbb
inc
mov
cmp
inc
shl
push
sub
xchg
cli
or
and
dec
push
test
jmp
add
mov
jmp
ret
jecxz
mov
imul
pushf
clc
rol
and
inc
push
add
ds
and
movsb
jne
pop
xchg
mov
pop
mov
outsl
sub
ret
or
jbe
dec
pushf
pop
popf
or
cld
es
and
pop
pop
adc
ret
xlat
push
pop
mov
jge
stos
scas
adc
leave
int3
int3
jl
ret
out
add
push
mov
shll
movsb
xor
dec
fidivrs
adc
lock
pop
fsubrl
in
jnp
pusha
sub
lods
mov
mov
loopne
fsubrl
test
test
cmp
push
out
mov
jp
out
js
andl
or
hlt
mov
push
xchg
sub
fs
push
sbbb
das
or
enter
xchg
xchg
repz
mov
mov
xchg
lahf
stos
jo
adc
idivl
xchg
sarb
fmuls
test
lret
jae
ss
jl
sub
fcompl
mov
aam
inc
sub
jp
and
in
fwait
les
test
and
pop
mov
adc
push
and
mov
mov
or
cmp
lds
add
imull
pop
fwait
sbb
xor
push
sub
and
sub
pop
jb
fsubl
jb
pop
pcmpeqw
mov
pop
aam
ja
xlat
dec
xchg
data16
xchg
pop
sbb
push
pop
repz
lods
pop
jp
push
into
pop
out
negb
fnstenv
mov
test
xchg
mov
push
es
es
pop
pop
adc
cmpl
bound
xchg
pop
pop
testb
jge
cmp
push
or
pop
shrb
cli
mov
jp
mov
fidivs
adc
cmc
jno
and
cmp
push
pop
mov
dec
cli
cmpsb
dec
out
jecxz
sub
dec
mov
add
fstpt
fldcw
or
pop
jns
sub
pop
add
jnp
push
daa
inc
movsl
repnz
data16
insb
test
xor
add
jne,pn
or
insb
jmp
fnstsw
mov
pop
divb
jecxz
add
mov
cmc
sahf
es
adc
pop
push
add
outsb
out
pop
aas
mov
and
mov
pop
call
mov
aaa
mov
mov
fsubr
push
inc
or
inc
xor
mov
sahf
rcrb
ret
mov
cwtl
inc
out
cli
mov
shll
inc
sbb
xor
adc
aam
xor
mov
and
dec
mov
lds
test
pusha
stc
sub
cmp
in
andb
sbb
jmp
stos
sti
mov
jns
iret
scas
out
xchg
mov
lcall
dec
pop
data16
jecxz
faddp
lds
dec
gs
testl
or
repz
sbb
mov
dec
cmp
jbe
je
rep
inc
and
repz
icebp
push
mov
xor
stos
test
dec
shrl
iret
pop
dec
add
push
cltd
int3
arpl
inc
push
fwait
mov
sbb
fbld
push
cmp
clc
int3
jbe
xchg
sub
jge
mov
mov
ret
or
adc
pushf
out
inc
loope
dec
xchg
je
js
cmpsl
shrl
outsl
into
gs
mov
das
pop
in
stos
enter
std
test
xchg
imul
dec
sbb
or
pop
lods
jge
or
adc
shlb
inc
inc
and
sti
mov
pop
cli
adc
mov
stos
jmp
jae
cmpsl
xor
xchg
das
and
xlat
xchg
jne
rorl
mov
mov
popf
cli
xchg
iret
push
jg
mov
mov
xor
test
cmpsb
inc
jge
mov
loopne
sarb
ljmp
jno
ds
push
pop
push
cmp
push
mov
flds
xlat
lea
pop
inc
int3
arpl
imul
xchg
inc
aam
xor
sbbb
idiv
push
scas
sbb
push
inc
pop
xchg
pop
sub
leave
xor
stos
mov
addb
mov
xorb
sbb
mov
lret
push
xlat
gs
je
add
or
jl
test
lea
ljmp
mov
ja
in
lea
cmpb
jns
cmp
popf
mov
je
mov
mov
mov
mov
fimull
int3
mov
mov
jb
xchg
sub
jle
dec
imul
add
mov
repz
cmp
sbb
push
dec
xchg
shrl
int3
or
ret
stos
jo
mov
lds
pushf
pop
nop
sbb
jmp
fs
jmp
adc
fsubrp
jae
test
jl
add
mov
pop
xor
sarl
sub
jno
mov
cmp
sti
push
mov
jo
aaa
push
lds
push
cmp
inc
shlb
inc
rorb
or
in
inc
out
mov
adc
mov
mov
mov
aad
test
dec
and
pop
mov
movsl
mov
xchg
adc
aad
adc
scas
pop
leave
push
xorl
rcr
or
es
dec
sbb
mov
jp
add
and
add
out
lea
push
popf
adc
inc
sbbb
fwait
push
out
mov
push
sub
pop
mov
hlt
daa
jp
pop
aad
add
jbe
sub
in
jae
dec
xchg
scas
mov
loop
int3
ss
pop
cmc
jno
mov
cld
xchg
inc
xchg
and
daa
out
sarl
pop
adc
testb
ficoml
fbstp
fmull
mov
lahf
pop
mov
inc
sahf
jne
mov
ss
xor
sbb
pop
pop
sub
sti
jo
xchg
popa
dec
push
jo
or
mov
fs
ss
xchg
sbb
bnd
jp
bound
or
mov
mov
loop
xor
imul
dec
mov
mov
insb
jl
popa
clc
and
xchg
ret
inc
dec
data16
mov
mov
stos
das
pop
fstpt
add
jg
add
out
push
push
jbe
mov
cmpsl
sub
fsubr
les
mov
adc
jge
cmc
arpl
ss
or
adc
loop
outsb
xchg
jns
shrl
mov
imul
int3
lods
xchg
movl
pop
fidivs
jecxz
sbb
fnstsw
test
mov
pop
xor
cld
out
ljmp
les
cli
in
pop
pushf
adc
int3
sub
sti
stos
push
adc
ret
fnsave
das
rol
add
shrb
fiaddl
xchg
mov
in
mov
in
mov
pop
and
std
addl
mov
and
and
mov
xchg
add
mov
push
insl
pop
pusha
push
cs
and
cli
and
sbb
jg
sbb
pop
dec
cmp
xchg
jns
loopne
push
gs
imul
inc
cwtl
imul
jns
lock
push
and
fsts
push
sub
sub
out
sub
inc
jmp
je
jno
outsb
cmp
je
adc
arpl
mov
and
adc
inc
adcl
mov
dec
pop
aad
outsl
out
mulb
or
add
cwtl
xchg
shrl
jge
xchg
xchg
lock
movsl
int3
xorb
sub
orb
sbb
jge,pt
dec
fisttpll
outsb
add
push
mov
jno
sub
cld
outsl
outsb
divb
ret
sub
orb
pop
lock
push
push
roll
push
jmp
daa
nop
push
xor
loopne
and
nop
hlt
sub
xor
jp
push
rclb
adc
jne
mov
scas
adcl
sub
adc
ss
add
jnp
loopne
mov
ja
or
sbb
push
jmp
and
mov
cld
adc
test
addl
popf
push
lcall
xor
cmp
mov
cs
mov
adc
cs
jb
jb
or
cmpl
xchg
mov
in
andb
lock
clc
xchg
adc
vpinsrw
xchg
mov
push
gs
nop
or
adcb
sbb
lcall
int3
push
orb
or
cmpsb
cmp
cmp
xorb
std
cli
xchg
mov
les
ljmp
mov
inc
cltd
popa
cltd
push
push
push
and
jns
sbb
pop
mov
and
cli
adc
fcmovnbe
pop
outsb
add
daa
inc
imul
mov
fistpl
cltd
xor
movsb
cmp
add
arpl
pop
addr16
js
in
xor
int
rorl
mov
rclb
xlat
fsts
roll
sahf
add
mov
mov
loope
rorb
jge
push
out
lock
sbb
pop
mov
sub
push
leave
shrl
ljmp
ss
pop
mov
lea
out
jg
sbb
push
cmp
aaa
add
mov
pop
clc
sbb
js
fisubrs
mov
mov
push
rorl
mov
sub
mov
cmp
push
mov
mov
fnstenv
mov
mov
hlt
cmpsb
imul
popa
mov
ja
adc
inc
pop
sbbb
mov
pusha
mull
fisubrl
mov
or
push
mov
in
in
push
jbe
roll
popf
add
sarb
lret
fists
mov
sar
dec
insl
test
jecxz
add
test
in
lock
jnp
in
sahf
scas
push
mov
push
xchg
ljmp
and
movsl
repz
test
push
or
in
mov
mov
fldcw
sbb
insb
cmp
lahf
mov
inc
std
iret
push
ror
lock
sti
test
mov
mov
pop
mul
add
or
movsb
out
xchg
xor
dec
adc
dec
xchg
in
repz
push
xchg
cld
sub
js
ret
sbb
or
jle
shrb
adc
lds
mov
push
jecxz
jg
mov
fsubl
fwait
leave
lea
and
xor
shlb
sti
sub
fwait
xor
or
out
test
adc
divl
or
sub
xor
mov
push
dec
movsb
mov
stc
xchg
pop
sub
ficoml
push
pop
cld
xchg
push
sbb
xchg
popf
sbb
jnp
cmp
clc
insl
call
sub
cmpsb
je
push
dec
cmp
jb
add
sub
stos
push
jecxz
das
cmp
pop
push
out
pop
inc
push
call
xor
popa
jg
push
jns
xchg
sbb
pop
jne
mov
test
stos
or
mov
int3
cwtl
sub
mov
into
or
adc
mov
icebp
xchg
sub
imul
mov
xchg
add
push
xchg
jp
aam
jp
add
and
xor
aam
iret
push
mov
xor
jmp
ljmp
ss
cmc
push
push
sbb
shlb
jg
aaa
into
mov
sahf
sarl
les
add
jp
xor
nop
xor
inc
in
and
xchg
and
gs
or
push
or
addr16
or
mov
aas
xchg
arpl
loop
sub
jmp
pop
nop
loopne
sahf
adc
pop
sub
push
insl
jge
pop
xor
push
testl
inc
inc
xchg
clc
lret
pop
pushf
mov
arpl
test
inc
sub
movsb
cmp
inc
mov
sbb
repnz
jmp
cli
or
pop
mov
sub
sbb
add
adc
adc
repz
mov
out
mov
jg
inc
js
xor
fninit
pop
dec
jg
loope
inc
fsts
sub
xchg
inc
jl
cmp
dec
hlt
pop
repnz
loopne
adc
adc
sub
add
cmpsb
sbb
xchg
fbstp
out
or
rcll
sbb
add
stos
push
in
arpl
adc
mov
or
dec
leave
es
xchg
ret
adc
mov
mov
adc
ja
xlat
and
mov
pop
daa
cmpsl
fadd
pop
push
push
push
add
dec
mov
cmp
mov
mov
sub
inc
jnp
sbb
xlat
cltd
cmp
in
push
lea
jbe
jo
dec
ja
lock
or
mov
mov
daa
xchg
push
adc
daa
cmpsl
ds
lds
aaa
imul
sbbb
ret
add
mov
adc
shlb
push
cmp
fdivrs
or
xchg
pop
fdivl
mov
add
jge
daa
stos
mov
xor
in
cmp
mov
popf
lods
mov
inc
mov
movsb
adc
xor
shr
lea
lock
push
pushf
stc
mov
nop
clc
inc
fistpl
mov
lahf
mov
stos
fmuls
cmpsl
mov
fmuls
sbb
popa
mull
js
push
or
mov
das
cmp
imul
sarb
push
push
lods
jae,pt
pusha
mov
push
mov
sbb
mov
sbb
in
cmc
sbb
push
movsb
xor
rorl
enter
shll
sahf
inc
pop
icebp
sbb
or
fistl
xchg
mov
sub
inc
gs
pop
cs
shlb
jge
push
in
das
mov
mov
shll
push
cld
xor
sbb
fdivs
pop
arpl
pop
jp
xchg
pushf
lcall
add
daa
outsl
sbb
add
lahf
push
jns
aad
cmpsb
divb
mov
movsl
push
fisubs
sarb
cli
lea
or
icebp
sti
and
xor
dec
mov
jnp
mov
jg
push
mov
or
push
out
call
adc
shrl
jo
mov
insl
insl
xchg
mull
int3
push
push
mov
sbb
cwtl
push
xlat
outsb
pop
stos
lea
adc
sbb
ss
jmp
lret
in
mov
test
add
jno
mov
ss
enter
lret
scas
ficoms
outsl
fs
push
or
sub
inc
or
andl
xor
xor
sti
xchg
push
je
xchg
andb
stos
cli
pop
adcb
cld
lods
pop
mov
fcomps
fidivrs
dec
fucom
jns
push
and
pop
data16
jg
mov
shll
rolb
or
add
push
lcall
mov
push
into
adcl
xchg
pop
or
mov
inc
jmp
fcomps
inc
stc
in
mov
adc
idivl
push
push
frstor
add
dec
cmp
mov
imul
or
lds
repz
pop
sbbl
sub
lock
inc
push
lea
scas
out
jp
mov
ss
dec
out
inc
sbb
enter
push
jae
push
jmp
sub
sahf
icebp
rorl
mov
add
pushf
inc
xchg
cmp
jmp
out
lods
inc
inc
sub
fwait
pop
mov
std
cmp
push
cld
sub
sahf
mov
pop
repnz
lcall
cmc
mov
popf
dec
in
mov
xor
jmp
xchg
les
add
mov
pop
dec
inc
mov
movsb
cs
fisubrl
aaa
jnp
ret
xchg
mov
xlat
pop
outsl
es
pop
sub
or
icebp
push
in
test
push
ljmp
mov
push
fistpl
sahf
ljmp
or
mov
jbe
add
add
mov
cltd
cmpsl
ds
lret
and
scas
dec
pop
add
mov
in
sub
pop
add
arpl
inc
xchg
lea
fs
sahf
and
fwait
mov
icebp
shrb
cltd
mov
mov
cmpsl
sub
mov
cmp
dec
xchg
imul
jp
or
mov
cmp
outsb
orb
xor
fstpt
push
add
mov
jle
sbb
loope
sub
push
jge
mov
cmc
inc
out
pusha
push
jno
in
notl
sbb
imul
jbe
mov
mov
cwtl
cmpsl
inc
ss
int3
in
or
mov
fistps
push
mov
mov
in
in
jmp
push
cmc
pop
sti
ja
sub
jnp
repz
push
jne
jo
inc
imul
popa
mov
cmp
jmp
add
iret
es
fwait
or
mov
adc
int3
cmp
add
imul
mov
cld
and
xor
cs
dec
add
stc
mov
in
lcall
push
sbb
dec
out
xor
xor
shlb
inc
imull
pop
repnz
addr16
xchg
and
jo
mov
and
loop
out
inc
fisttpl
stc
mov
dec
sbb
dec
xor
lds
inc
fsubl
inc
arpl
mov
mov
xor
inc
orl
shll
sub
icebp
jbe
lods
dec
adc
mov
sub
and
mov
das
addr16
add
out
xor
adc
outsl
ret
pop
fstpl
push
fisubs
add
push
lods
push
cs
ja
pop
loop,pn
loopne
push
add
shr
mov
jl
mov
enter
mov
aad
lods
inc
jmp
loopne
push
push
mov
cmpl
mov
adc
in
mov
arpl
pop
stos
dec
leave
pop
cmc
cli
push
outsb
sbb
sbb
bound
xchg
and
xchg
push
mov
inc
xor
jbe
mov
stos
push
sahf
xchg
inc
loopne
je
jge
std
lods
add
ss
push
in
testl
div
mov
pop
adc
cmpb
xchg
mov
rcll
jp
clc
mov
icebp
loop
cwtl
xchg
test
push
shlb
mov
adc
adc
pop
out
sbbb
in
stos
jp
fisttpll
mov
insb
add
les
lret
mov
xor
mov
mov
enter
sbb
fsts
pop
loop
insl
test
add
sub
mov
push
popf
sbb
xor
push
cltd
jle
dec
xor
xchg
pop
fsub
push
sbb
adc
mov
jle
xorl
into
xchg
and
jge
in
push
and
das
les
rclb
sub
add
jno
inc
jmp
cmpsb
aam
pop
pop
pop
dec
int
ljmp
cmp
icebp
xor
add
jge
leave
xlat
push
mov
movsl
pop
jg
mov
mov
push
insb
ret
cld
jbe
mov
sub
fildl
cmp
fbstp
mov
das
mov
lret
jnp
adc
int
lods
test
outsl
lods
xchg
imul
cmp
loop
pop
dec
dec
mov
mov
and
movsl
adc
mov
push
inc
call
pop
fcoms
int3
outsl
inc
stc
inc
xchg
dec
dec
out
push
or
out
cmpsb
push
bound
jl
jecxz
in
jecxz
fbld
lahf
shlb
cmp
inc
popf
jle,pn
lahf
push
cltd
and
shll
jbe
fisttpl
rol
add
adc
je
mov
and
popf
jns
dec
stos
add
inc
jne
les
mov
fisubl
cmp
stc
adc
mov
and
mov
shl
in
nop
cs
push
ret
push
cld
popa
add
add
repnz
imulb
popf
xchg
pop
leave
mov
inc
sub
dec
xchg
mov
andl
mov
mov
sbb
xor
fneni(8087
dec
mov
jmp
scas
add
int
lea
cltd
outsb
arpl
fwait
jne
add
aas
mov
jae
pop
jno
icebp
inc
loope
out
es
xchg
sub
sub
test
mov
bound
mov
push
mov
int
sub
call
pop
and
push
dec
mov
loop
out
mov
into
jle
arpl
add
sarl
pop
adc
sbb
xor
or
faddl
or
cmp
int3
adc
outsl
loop
jno
lcall
popa
shr
jecxz
test
push
fxch
add
or
sarl
mov
jg
add
pop
sub
jbe
dec
push
cld
out
mov
jg
test
cmp
in
outsb
ret
int3
scas
ret
call
cmpsb
int
aad
pusha
fstpt
inc
pop
les
adc
sarl
in
lock
out
rcrl
xchg
xor
test
mov
cli
sbb
dec
mov
add
aad
sahf
xor
inc
xchg
mov
sub
pop
add
add
dec
jg
nop
in
hlt
push
repnz
out
cmp
cltd
movd
jl
cltd
mov
popf
fmulp
test
aas
shll
sarl
inc
sti
popf
pop
insl
xchg
xor
push
mov
lds
mov
sbb
cmp
nop
lock
cli
pop
movsl
cmp
cmpsl
addb
cmp
cmp
push
fwait
xor
ret
pop
push
mov
add
add
repz
cmc
xchg
mov
loopne
jae
clc
popf
mov
fldl2t
dec
dec
adc
push
roll
add
popa
lea
push
xchg
fiaddl
push
in
jae
mov
mov
dec
adc
movsl
pop
test
push
xchg
cmp
in
cmpsb
add
js
mov
lods
ret
jle
sti
sbb
jb
lcall
mov
outsb
push
call
sbb
ss
push
call
arpl
rolb
mov
jmp
and
push
iret
test
dec
sti
xor
add
repz
xor
mov
jno
sbb
cltd
xor
jl
inc
nop
inc
filds
shl
cmc
cmc
loop
fcoml
inc
push
stos
xchg
outsb
iret
lods
xor
or
sti
js
cmpl
stos
lcall
lret
jle
int
cli
popf
jle
pop
movsb
mov
jmp
dec
scas
ja
mov
decb
adcl
and
mov
das
shll
mov
lock
jge
xor
cmp
stos
add
mov
jne
pop
mov
iret
add
sbb
add
push
xchg
or
into
mov
sub
add
pop
jb
andb
lret
mov
scas
test
xchg
push
lods
loop
cmp
or
divb
mov
cmp
shrl
or
imul
mov
pop
pop
push
nop
shlb
jg
pop
testb
mov
test
pusha
outsb
test
into
pop
inc
scas
mov
in
lods
sarb
scas
stc
or
imull
push
cmp
je
ret
aaa
das
cli
shll
mov
call
adc
and
mov
stos
mov
fidivl
dec
out
mov
xchg
sub
xor
ljmp
nop
movq
call
cli
fs
clc
jnp
adcl
xor
mov
lods
mov
inc
out
mov
scas
mov
jb
sub
mov
sub
fucomi
les
fmulp
cli
xchg
stc
jle
loop
xchg
sbb
pop
push
inc
ljmp
fnstcw
sahf
cmc
and
outsl
and
pop
lods
push
es
pop
addr16
das
mov
xchg
pop
jmp
pop
add
push
sbb
cmp
lock
mov
cmp
mov
ja
ret
xchg
test
insb
sub
outsb
xchg
fwait
loop
jle
mov
or
loope
fwait
cmpsl
testl
repz
push
lods
lahf
stos
sub
aad
dec
pop
sbb
and
fidivl
aaa
dec
mov
je
pop
and
pop
mov
imul
push
fwait
dec
mov
mov
int
pop
in
popf
cmpsl
and
lahf
jb
pop
pusha
xor
adc
push
mov
add
sbb
mov
daa
or
fdivrs
mov
rcll
outsb
dec
fistps
lret
cmpsl
dec
imul
pop
xchg
in
leave
adc
aaa
out
sbbb
stos
inc
mov
pop
addb
push
xchg
xchg
and
mov
mov
sarb
jae
mov
push
xchg
or
in
sbb
cltd
push
divl
adc
jns
xchg
rcrl
in
daa
mov
pop
test
daa
mov
scas
adc
ds
pushf
aam
mov
imul
dec
in
cld
and
aas
xor
jle
mov
jnp
jno
push
mov
or
jmp
sub
inc
push
push
out
aam
loopne
shl
mov
jecxz
stos
in
cmp
loope
lahf
inc
jb
sub
mov
dec
jl
or
jp
xchg
jo
lea
inc
or
adc
mov
cmp
adc
out
jle
add
cmpsl
mov
cwtl
jge
shl
test
sbb
jno
jle
test
or
and
popf
sub
iret
push
lahf
subb
dec
add
shll
repz
mov
dec
test
lret
cld
cld
dec
sahf
mov
add
pop
sub
jp
mov
call
cmp
scas
inc
pop
loopne
add
ficoml
das
cmp
inc
mov
notb
mov
pop
fs
lcall
or
mov
cmpsl
ljmp
cmp
mov
xlat
sbb
jne
cmp
insl
dec
aam
xchg
push
pop
cmpsl
fwait
mov
sub
arpl
xor
pop
popf
pusha
lret
inc
fxch
rolb
rcrl
lds
jg
or
inc
and
jmp
fistps
daa
xor
inc
pop
mov
sbb
push
xchg
aas
ljmp
jmp
and
xor
inc
dec
test
ss
lods
lods
ret
stos
fwait
call
int
xor
inc
andl
jecxz
cli
lahf
outsb
adc
pop
adc
das
aam
sub
jo
xchg
sub
inc
call
nop
jecxz
icebp
adc
or
pop
lea
pop
imul
fidivs
in
in
jmp
mov
test
mov
ror
xor
or
imulb
jno
mov
in
leave
inc
subl
out
int
sbb
movsl
sub
xchg
jle
sti
outsl
xchg
push
pop
lds
xor
cmp
push
lods
add
and
pop
inc
test
and
rcrb
cmpsb
jns
pop
mov
push
inc
fstpt
mov
bound
pop
repz
cmpsb
or
in
sbb
mov
outsb
inc
fsubrl
loopne
pop
and
push
insb
lds
sub
fcomip
fwait
loop
iret
cmpsl
mov
aas
pop
mov
sbb
mov
mov
mov
mov
lret
and
pop
ds
clc
inc
cli
pop
in
aas
or
push
inc
cmp
test
scas
gs
daa
mov
test
mov
mov
sbb
add
aad
pop
inc
mov
cmp
mov
imul
int3
push
fdivrp
push
inc
cli
inc
mov
test
xlat
mov
sub
rorl
shlb
xchg
cmp
repz
mov
lock
sbb
mov
lds
ds
lret
mov
shrl
xchg
lods
or
jne
mov
loopne
lock
adc
pusha
fstl
push
aas
aaa
lcall
mov
repz
sub
in
xchg
ljmp
aas
mov
aaa
mov
mov
push
pop
fstpt
out
mov
push
and
int
mov
push
mov
sbb
int
inc
orb
shr
mov
loope
inc
aam
lods
xchg
daa
ret
hlt
push
cmpsb
in
sbb
lret
sbb
scas
and
jle
les
loope
int
lahf
jmp
dec
fwait
mov
cmp
adc
inc
clc
repnz
mov
jmp
sbb
jge
pop
aam
cmp
aaa
mov
popa
shll
imul
repz
mov
adc
jecxz
movsb
pop
rorb
out
aas
aam
in
sarl
push
or
test
push
xor
mov
testl
or
mov
mov
fcompl
call
dec
sti
leave
adc
sub
call
jae
push
mov
xchg
xlat
repz
mov
fbstp
pop
imul
nop
lods
pop
fdivrs
push
cmpps
cli
sub
out
inc
xchg
inc
cmp
mov
mov
inc
movzwl
pusha
mov
dec
es
leave
mov
repnz
xlat
cmp
sahf
stc
mov
inc
mov
add
je
jg
test
and
mov
and
bound
fwait
sbb
pop
es
mov
inc
daa
fcomi
lea
bound
fdivrl
mov
in
cmpsl
scas
outsl
jnp
movsb
das
mov
or
cmp
xchg
push
lds
sub
lds
lods
adc
pop
xor
cmpsl
xchg
push
je
icebp
xor
cmp
xlat
inc
ret
mov
cmp
adc
push
psadbw
or
mov
fdivl
jo
imul
leave
sbb
jle
pop
mov
fidivrs
mov
insl
outsl
jge
sbb
jmp
xchg
mov
add
fsubs
cltd
xor
jnp
out
nop
fs
push
cmp
popa
into
out
cli
incl
call
repnz
lret
vsubsd
out
jmp
add
hlt
mov
jl
js
out
add
mov
adc
mov
fwait
stos
fmuls
adc
cmpsb
xor
sti
inc
in
add
into
andl
jle
pop
les
inc
or
and
fdiv
test
nop
add
dec
aad
mov
call
iret
scas
mov
xchg
lods
mov
jp
jl
sub
fcompl
addb
outsl
push
sub
loope
movsl
addr16
insb
add
popf
std
nop
sbb
xor
xchg
adc
cmp
and
in
and
jle
sub
popa
and
xor
loope
mov
jmp
mov
jnp
push
ret
sub
cmp
lahf
and
add
testb
stos
fwait
repz
or
jns
cmpsb
loope
jp
cmpsl
mov
repz
fadd
mov
mov
add
or
dec
push
dec
mov
and
cmpsb
inc
jle
fiaddl
fcmovb
cli
or
in
ss
and
repnz
andb
inc
or
imul
sbb
loope
lds
popa
add
hlt
or
dec
sahf
jo
lahf
repnz
inc
pop
sti
cmp
jecxz
cmp
fxtract
jnp
and
xchg
pop
jl
push
repz
pop
push
call
jbe
inc
dec
push
mov
jl
cld
cmp
mov
loopne
fiadds
cmc
jp
and
pusha
xor
mov
push
sahf
arpl
mov
call
in
pop
or
lods
xor
sti
cmp
add
push
stc
xchg
sbb
cwtl
loopne
test
sti
sbb
into
or
lds
and
sbb
mov
jge
sbb
dec
push
adc
imul
negb
cmpsl
ss
ja
sahf
inc
lahf
add
in
add
aas
push
sub
leave
xor
in
ret
sub
cmc
push
pop
lea
mov
roll
aas
sarl
sahf
jl
fistl
adc
xor
mov
pop
xchg
mov
jo
test
in
repnz
jmp
add
nop
test
push
cltd
shll
jg
icebp
jp
jns
roll
jg
pop
adc
repnz
sarb
cmp
outsb
xor
pop
testb
clc
pop
fldcw
jge
push
movsb
pop
mov
ss
lock
cmp
adc
mov
hlt
fucom
cmp
sub
ret
addr16
popa
cs
lea
cmpsb
scas
dec
xchg
into
negb
cltd
inc
lcall
into
enter
add
mov
repnz
test
add
dec
pop
xchg
inc
outsb
mov
jno
ljmp
pop
xchg
iret
mov
lcall
push
je
cmc
xor
bound
cmp
les
insl
outsb
pop
call
call
or
mov
pop
cmp
outsb
clc
in
xorl
insl
xchg
or
ficomps
mov
arpl
wrmsr
popa
mov
cmpsb
jnp
sub
popa
ret
sub
sbb
gs
mov
or
xchg
aaa
into
ja
jl
xchg
mov
iret
test
lea
xchg
nop
lock
mov
icebp
insb
sarb
aaa
sub
loopne
imul
push
push
cli
jbe
ss
xor
fisttpll
xchg
insl
cmp
xchg
imul
sbb
add
lock
imul
mov
jecxz
push
xchg
adc
xor
add
cmp
cmp
mov
mov
test
dec
xlat
hlt
inc
jno
clc
je,pt
or
sbb
mov
ss
cmp
pushf
mov
into
pop
xor
popa
loope
loop
inc
loopne
ja
adc
outsl
cmpsl
sub
push
push
jbe
es
inc
lret
jmp
xchg
cmp
inc
jecxz
ficompl
vxorps
push
dec
enter
fdivrl
fisubrs
std
pop
js
inc
outsl
clc
and
xor
xchg
fnstcw
pop
test
lods
loope
or
add
xchg
jno
mov
arpl
and
popf
ds
mov
adcl
cmpsl
cld
loop
pop
mov
or
push
xrelease
adc
xchg
mov
xor
mov
addb
mov
insb
sbb
pop
add
std
inc
stos
cmp
loop
ret
xchg
hlt
or
imul
xchg
rcrl
mov
xchg
mov
adcl
popa
leave
cmpsl
mov
sbb
rcrb
dec
movsb
std
sbb
or
mov
test
imul
in
aad
ljmp
mov
test
mov
adc
iret
stc
inc
jno
cltd
and
test
jo
jmp
lock
or
imull
jae
mov
mov
push
xchg
inc
lret
stc
aam
mov
pusha
mov
add
es
xlat
test
inc
pop
jnp
andb
dec
jge
fwait
xchg
mov
aad
sbb
imul
cwtl
jo
pop
and
rclb
negb
and
mov
mov
pop
out
and
xchg
addb
cmp
or
popf
dec
pusha
add
sbb
and
push
rcll
js
xor
push
fwait
cmp
pop
jle
push
cmp
push
cmp
mov
sahf
adc
test
repz
mov
mov
jae
pusha
cmp
mov
add
dec
loope
and
and
inc
lock
xchg
mov
or
or
jnp
sub
out
push
sahf
cmp
mov
inc
rorb
jae
xor
sub
inc
andl
mov
mov
jmp
je
and
pop
aad
movsb
lock
sbb
enter
sbb
mov
jmp
gs
addr16
mov
xchg
rcrl
out
fwait
lods
adc
outsb
sbb
subl
nop
mov
pop
dec
xor
pop
ficompl
ret
test
call
or
mov
into
mov
xchg
loop,pn
js
aam
push
scas
xchg
icebp
add
int
jge
js
mov
divb
inc
inc
adc
nop
js
sbb
arpl
ret
hlt
rcrl
and
bound
cmp
std
mov
in
jnp
subl
into
mov
jbe
scas
pop
insl
mov
cmp
push
je
add
and
mov
stc
adc
call
out
fcmove
int3
or
xchg
sbb
jnp
sbb
cmp
sub
jle
add
xchg
dec
cmp
sub
int3
inc
fdivr
clc
xor
adc
insl
rcr
incl
cmc
test
mov
lock
cmp
loope
pop
sbb
and
dec
jns
pop
shr
inc
push
adc
mov
fstpl
sub
pop
cmpsl
testb
icebp
out
mov
test
stos
lret
cmp
jg
push
fnstcw
test
pop
and
dec
cli
push
jnp
xchg
pop
mov
sub
mov
das
subl
adc
fdivrl
addr16
imulb
pop
mov
insl
cmp
pop
fwait
or
lock
mov
mov
ds
jge
mov
jecxz
insl
add
bound
out
xchg
insl
pop
imul
test
jge
inc
mov
lret
mov
jmp
aam
inc
into
mulb
ret
mov
fisubrs
and
int3
mov
bound
sarl
pop
popf
or
push
mov
call
sub
sbb
mov
xchg
xchg
adc
sbb
int3
cmpsb
push
or
xchg
sbb
gs
cmpsb
mov
fnsave
push
jae
or
scas
mov
mov
nop
mov
vunpckhps
cmp
pusha
pop
sahf
xchg
je
adc
jb
sbb
adc
mov
ds
xor
lcall
lret
sbb
iret
pop
scas
cmp
jbe
loopne
or
ds
cmp
out
xchg
mov
fidivrs
pop
shlb
ret
aad
or
dec
add
sbb
aad
push
push
inc
pusha
inc
stos
mov
adcb
cmp
aas
sub
dec
sbb
push
outsl
push
jne
fucompp
mov
ja
divb
stc
popf
and
int
mov
adc
sub
xor
xchg
adc
adc
sbb
test
jmp
jmp
mov
lods
pop
mov
std
fsts
inc
cmpl
jmp
lcall
add
xor
aas
fwait
insl
sub
push
or
imul
cmpl
mov
xor
push
lret
aaa
mov
xchg
nop
xchg
jae
std
daa
mov
jns
loopne
pop
jb
ss
pop
sbb
leave
and
mov
and
rcl
int
jbe
dec
fs
xchg
sub
dec
adc
pop
mov
jb
les
shlb
gs
sahf
pop
out
mov
data16
xor
daa
test
mov
cli
mov
or
xchg
mov
or
nop
das
adc
rcll
iret
cmp
mov
arpl
xchg
mov
movsl
dec
pop
lret
fwait
xchg
pop
test
cmp
inc
sahf
push
xor
in
repnz
pop
add
mov
test
and
adc
push
mov
push
sub
mov
clc
pop
cmp
jno
lds
gs
xchg
inc
cmp
sti
leave
pop
push
out
pusha
jg
xor
aaa
in
pop
pop
ljmp
xor
cwtl
sub
ds
lods
ds
push
out
lods
adc
adc
or
push
jmp
jbe
int3
mov
repnz
push
inc
imulb
jp
push
in
and
jle
ret
mov
or
dec
add
jp
jecxz
dec
iret
sbb
fists
dec
repz
cmp
sbbb
push
ss
and
and
fwait
mov
push
add
cld
imul
add
shrl
and
into
sub
in
ret
js
and
out
outsb
mov
outsb
cmp
dec
mov
aas
or
gs
jo
mul
lea
movsb
cli
inc
jp
cmc
loopne
or
lock
outsl
lods
pop
neg
imul
ficoml
cmpsl
mov
and
and
lret
cmpsb
sbb
lret
sarb
mov
add
leave
outsl
fbstp
aad
aad
outsb
call
fs
std
ret
out
je
cwtl
inc
add
add
stos
and
data16
adc
add
xor
aam
or
sbb
cld
and
inc
adc
jl
cmpsl
call
mov
mov
jp
mov
andb
pop
xor
loop
in
hlt
ret
pop
insb
and
push
mov
fs
adc
popf
cmp
add
mov
mov
lret
adc
iret
push
jno
dec
cmp
jle
mov
jb
or
xor
jle
cmp
outsl
aaa
dec
leave
mov
dec
lret
fldl
mov
je
inc
cmpsb
xor
add
jecxz
test
filds
mov
push
paddb
lcall
or
fs
iret
mov
mov
cmpsl
ds
xor
das
pop
inc
mov
mov
jb
je
dec
sbb
or
out
cmp
push
fisttpll
sub
jmp
dec
adc
cmp
movsl
jl
rol
sbb
stos
jl
rclb
xor
loopne
cltd
adc
or
and
pop
jg
dec
insl
mov
mov
push
xchg
mov
mov
filds
jmp
cmp
pusha
negl
mov
mov
pop
sahf
ss
addr16
or
mov
pushw
push
insl
mov
mov
sbbb
bound
push
js
add
or
movsl
stos
jo
addb
nop
outsl
stc
inc
xor
test
or
or
and
cmpl
mov
test
xchg
inc
inc
sbb
jnp
ficompl
push
cmc
add
cmpsl
xchg
jge
dec
cmp
stos
add
in
sbbl
mov
lahf
mov
mov
int
js
int3
push
jns
test
clc
jae
sub
cmp
pushf
cmpsl
xor
or
stos
dec
pusha
stos
aad
in
rol
lret
in
inc
in
push
and
jmp
mov
insb
mov
jo
inc
push
jbe
aam
pop
enter
pop
xor
and
push
mov
pop
loope
lds
lret
cmp
int3
xchg
mov
arpl
xchg
dec
jmp
mov
lret
add
stos
pop
dec
add
lret
mov
stos
mov
rorl
cltd
xchg
jp
mov
mov
sbbb
xor
lods
pop
adc
stos
pop
outsl
loope
cmpsb
subl
jecxz
dec
stc
add
mov
dec
add
xchg
xchg
fsubrs
push
mov
xchg
mov
mov
test
icebp
cmc
and
shl
mov
push
xchg
xor
mov
jbe
push
test
data16
insb
pop
xchg
inc
in
and
push
dec
cmpsb
mov
fsubr
mov
sbb
shlb
mov
subb
adc
xchg
mov
fsubs
adc
mov
mov
jbe
imul
push
int
jb
or
fdivs
movsl
xor
mov
xchg
jo
pop
je
sbb
adc
xor
aaa
mov
fstpt
push
imul
xor
sbb
mov
ret
sbb
sub
and
cmp
jge
les
push
fucomp
xchg
mov
pop
outsl
cmp
std
fwait
test
lea
jne
jne
aas
in
out
mov
mov
jb
push
jmp
sbb
popa
test
cmc
arpl
add
aas
mov
mov
dec
add
aam
cs
lods
pop
cs
xchg
or
mov
repnz
sbb
jo
push
push
fcom
rcrl
popf
xor
jnp
fstl
add
push
outsl
out
cmp
insl
dec
mov
mov
adc
adc
es
loopne
mov
adc
ljmp
stos
in
jl
fisttps
loopne
mul
shrl
adc
xchg
add
add
sahf
pop
mov
es
rep
sbbl
mov
mov
sbb
xchg
in
idiv
sti
sarl
repz
ss
pop
and
sbb
and
in
test
xchg
xchg
adc
push
out
repz
fcoml
std
or
or
pop
je
inc
adc
cmc
cmpsl
lods
mov
inc
cli
push
stos
mov
sub
negb
sub
loop
test
ret
dec
and
cmp
pushf
insb
xor
data16
dec
inc
jle
sbb
pop
cwtl
cmpsb
js
sarl
adc
mov
cmp
add
fadds
or
cmp
out
push
int3
pop
aaa
lret
mov
jns
loopne
movsb
cmp
ljmp
mov
aaa
gs
addr16
in
inc
cld
push
sbbl
cmp
clc
stos
xchg
dec
sarb
sbb
aam
jle
sub
cmp
sub
adc
test
pop
lock
xchg
data16
mov
lods
aaa
push
gs
data16
sub
fdivs
or
fstps
pop
dec
in
mov
cltd
clc
cmp
dec
mov
dec
daa
popf
shll
lret
cmc
js
out
mov
pop
rol
fucomi
rclb
push
fcoms
pop
pushf
repnz
sbbl
xchg
mov
mov
lods
inc
leave
int
decl
ds
loop
sbb
adc
and
push
test
mov
shrb
xor
mov
inc
mov
push
pop
test
es
roll
cltd
pop
roll
dec
sbb
fadd
pop
dec
cli
jnp
out
jns
jbe
mov
shll
adc
push
push
add
ja
sbb
fldt
jecxz
iret
add
lcall
and
sub
cld
pop
jge
push
dec
mov
fsubr
prefetch
lea
stos
fdivp
xchg
dec
dec
test
outsl
andb
cmp
loopne
sub
jmp
out
cli
inc
or
lret
and
dec
mov
xor
leave
int
jbe
stc
stc
addb
mov
mov
cmpsl
inc
push
cmp
inc
jge,pn
fdivrl
jo
hlt
cmp
cmp
and
add
cmp
mov
fidivrl
shr
xchg
mov
icebp
divb
add
or
jg
mov
repnz
pop
dec
dec
mov
dec
pop
movsb
sarb
mov
push
mov
leave
xchg
sub
pop
imul
push
mov
xchg
fistpll
push
lods
push
xchg
xor
lds
lret
ficompl
dec
jmp
jp
pop
lds
or
pop
cmp
adc
sub
jp
lret
outsb
xchg
pushf
push
sbb
fnstcw
pop
test
dec
mov
out
shlb
ret
push
adcl
jmp
clc
arpl
adc
mov
push
adc
pop
aas
xor
insb
inc
sbb
and
mov
clc
mov
add
add
insb
adc
in
xlat
rclb
enter
push
mov
sbb
sub
dec
pop
add
pop
push
pop
and
mov
test
pop
add
insb
add
in
sbb
xlat
xchg
imul
cs
cmp
mov
pop
adc
jl
lds
pusha
pop
enter
adcb
inc
adc
add
sti
xor
mov
lcall
rcl
ja
incl
repz
add
in
subl
fcoml
test
rcrl
testb
cmp
mov
xchg
nop
imul
adc
inc
push
jo
xor
sti
xor
push
sbbb
jns
test
mov
mov
and
mov
das
xor
adc
hlt
sbbl
pop
and
xor
xchg
sub
mov
inc
jmp
adc
std
cs
scas
repnz
pop
stos
pushf
mov
iret
or
mov
jae
cmpsl
jle
call
push
inc
cmc
lock
mov
repz
pop
sub
pminsw
inc
movsb
sbb
mov
or
jns
ror
jle
push
push
mov
stos
cmp
cmpb
cmpsb
cli
adc
mov
xor
push
mov
mov
cld
push
imull
fidivrs
or
mov
fiaddl
in
push
mov
push
jo
outsb
imul
je
cld
dec
xchg
xlat
out
inc
dec
inc
mov
gs
fbstp
push
adc
lcall
mov
mov
adc
jg
leave
xor
mov
bound
xor
jle
in
shlb
and
jp
flds
xor
in
fidivrs
mov
push
scas
mov
decl
lods
imul
clc
clc
outsl
sub
xchg
jg
push
repz
and
out
push
outsb
add
push
in
inc
pop
lret
xor
jecxz
jp
push
out
push
ja
xchg
add
popf
cmp
push
arpl
inc
dec
jns
andb
add
jbe
addl
adc
and
neg
pop
scas
jns
jno
adc
lods
jns
sub
enter
aad
in
xchg
sbb
icebp
dec
push
leave
pusha
pop
popf
xchg
aaa
int3
dec
out
test
jle
dec
add
stc
call
and
sbbl
pop
shll
push
sbb
dec
jge
out
rcr
xor
mov
repz
pop
sbb
out
in
aad
mov
xchg
subb
sub
push
out
mov
in
push
js
push
ljmp
add
jno
mov
jb
lock
popa
clc
mov
jo
out
inc
sub
push
jb
xchg
push
inc
leave
mov
cmpsl
in
adc
mov
out
fmuls
mov
xchg
xor
cmp
stos
mov
or
insb
imul
adcb
repz
popa
or
jge
xchg
sub
int3
lods
mov
movsb
cmp
out
pop
mov
js
cs
stos
inc
movsl
inc
pop
inc
clc
ja
fwait
sub
es
insb
sub
fldl
mov
ja
add
or
loopne
ljmp
popf
inc
fmulp
inc
shlb
jbe
in
pop
fidivrs
in
jle
imul
jbe
outsb
test
push
mov
dec
inc
ret
jmp
lret
and
dec
pushf
jno
into
and
fwait
inc
out
mov
cmp
leave
lods
in
mov
jle
fsubrs
push
mov
add
push
adc
enter
jo
jnp
rcrl
jp
mov
js
sub
mov
mov
push
or
inc
pop
jecxz
jns
mov
mov
cld
mov
arpl
inc
mov
push
xor
mov
cmp
call
pop
aam
imull
mov
sbb
mov
jbe
cmp
pop
dec
sub
pop
nop
gs
hlt
jle
mov
push
jnp
loopne
sbb
jb
pop
insb
sbbb
aam
sub
xchg
mov
fstps
cmp
scas
mov
mov
jnp
ret
lods
add
aas
lods
dec
loope
pop
xchg
das
test
ljmp
in
adc
mov
push
push
mov
push
sub
jnp
dec
in
jg
push
xchg
pusha
scas
testb
sbb
scas
insl
jbe
lahf
rcrb
push
or
inc
sub
data16
roll
daa
jno
pop
inc
or
cltd
call
shll
mov
fldt
pop
mov
clc
ret
ss
int
xor
pop
idivl
mov
add
cmp
stc
nop
icebp
cltd
pop
dec
repnz
scas
inc
lret
and
stc
test
in
ret
mov
jg
cwtl
or
cmp
popf
hlt
mov
pop
orb
loope
add
cmpsl
xor
cs
pop
ret
jl
repnz
in
inc
mov
lcall
mov
movsb
sarl
ret
adc
lret
mov
cmp
pop
pop
pop
cli
int
push
rcl
gs
cmpsb
in
jl
adc
call
test
in
pop
and
mov
mov
cmc
nop
daa
cmpsl
insb
xor
outsb
enter
imul
lods
cli
ds
inc
sbb
into
pop
imul
jo
push
jnp
out
ljmp
popw
dec
inc
adc
pop
mov
xchg
adc
sti
pop
mov
subb
ret
addr16
dec
lock
in
rcr
enter
push
data16
pop
mov
sbb
dec
rorb
mov
jbe
mov
sbb
std
dec
dec
stc
jecxz
imul
dec
ret
xor
ds
rcll
push
aad
inc
mov
leave
pusha
les
mov
idiv
pop
orl
aas
nop
inc
dec
idiv
into
in
push
sbb
int3
inc
mov
mov
mov
jle
lods
sbb
test
addr16
mov
roll
adc
jecxz
scas
adc
sbb
fcmovnb
inc
push
lds
cmpsl
rorb
push
sub
movsb
xlat
rcrb
sub
dec
push
ljmp
out
sahf
inc
test
into
inc
push
loopne
scas
stos
stc
xchg
repz
ret
mov
lds
ss
cmpsl
jecxz
flds
xchg
insb
cmp
imul
lret
or
test
pop
jmp
cmc
push
adc
es
std
xor
xor
fucom
sbb
pop
pusha
cmp
addr16
pop
jno
mov
adc
aas
sbb
popf
dec
sbb
call
inc
inc
fdivl
fsubs
cs
mov
mov
lds
repnz
pop
pop
out
xor
adc
mov
pop
lods
movsl
mov
push
ja
test
jmp
jl
jp
incb
inc
lods
pop
clc
stc
inc
es
cmpsl
xchg
push
jmp
xchg
cmc
sbb
lods
ja
jmp
xor
push
inc
xlat
mov
popa
and
mov
popf
inc
adc
inc
ljmp
fs
xchg
xor
pushf
fisttpl
insb
dec
jmp
pop
jo
les
add
ficomps
cs
jne
mov
loopne
movsl
push
mov
dec
in
cmp
stos
adc
pushf
int
loopne
pop
mov
mov
dec
cmp
push
dec
ja
jl
jle
sbb
call
add
push
inc
movsb
test
js
pushf
sub
test
adcb
pop
and
addb
loopne
pushf
cwtl
xor
test
mov
popf
out
push
sbb
jne
stos
push
ret
push
insb
jecxz
orl
cmpsl
ret
add
sti
js
setg
mov
add
dec
pop
and
mov
cli
js
gs
test
fstps
pushf
sub
dec
pop
mov
jns,pn
xlat
imulb
add
mov
pop
mov
push
lods
out
or
aaa
mov
dec
loop
mov
mov
xchg
xchg
mov
push
repz
outsb
sbb
xor
add
push
stos
in
jnp
iret
lea
xchg
sbb
je
stos
dec
adc
insl
inc
insb
xor
sar
aaa
shl
mov
pop
cmpsl
or
jnp
add
sub
test
je
std
std
fsubrp
and
pop
out
or
cmpsl
inc
ficoms
bnd
dec
fs
fsubs
mov
push
aas
data16
inc
add
test
and
push
sub
xor
stos
ret
pop
fnsave
ret
cmp
data16
sbb
mov
inc
mov
xchg
loop
push
out
mov
xchg
add
sub
pop
in
loop
jb
push
popf
fwait
icebp
mov
xlat
aaa
jmp
or
ss
ljmp
mov
dec
and
test
jo
mov
dec
lcall
scas
pop
push
ja
push
xor
aaa
data16
adc
xor
mov
inc
cmp
outsl
xchg
adc
or
dec
dec
push
test
pop
mov
icebp
add
insl
mov
outsl
sbb
xor
pop
xchg
xor
or
mov
sub
loopne
notl
repnz
xor
cld
or
inc
clc
cmpsl
pushf
rcl
outsb
add
fxtract
loope
jno
pop
add
add
cmp
push
sub
xor
rcrb
mov
cmp
mov
hlt
jecxz
mov
mov
jae
test
pop
imul
insb
xor
testb
xchg
adc
jbe
and
shl
sbb
lret
test
dec
loop
aam
cli
nop
jecxz
clc
cltd
loope
pop
stos
xchg
sbbl
out
jg
add
leave
mov
test
sub
jo
out
mov
pop
pop
in
outsb
pop
dec
push
test
fldl
lret
popa
inc
loopne
fsubrl
popl
add
sbb
loope
jno
dec
jne
jno
jge
repnz
cmp
mov
neg
sub
sub
test
aam
int
lret
sbb
jmp
out
dec
ficoml
into
xor
movsl
adc
in
std
pop
mov
inc
pusha
loopne
mov
jo
stos
mov
daa
movsl
ret
xor
jp
inc
xor
push
pop
test
ljmp
pop
sbb
sti
sarb
std
insb
sbb
push
imul
jnp
dec
mov
mov
cmpb
sub
push
mov
add
xchg
rcl
pop
testb
mov
push
pushf
out
movsb
and
call
xor
push
jl
mov
fdivrl
ljmp
out
ret
sbb
adc
inc
and
dec
mov
adc
fnstenv
pop
test
jp
insb
cli
xor
sub
xchg
adc
aas
mov
out
cli
pop
xchg
daa
cmp
mov
repz
mov
jo
sbb
xchg
cmp
jnp
arpl
scas
push
pop
arpl
adc
mov
je
repnz
pop
insl
out
mov
and
cltd
cltd
push
lcall
into
data16
jp
adc
js
cmp
and
movsl
fsubrl
sahf
and
sub
xor
ja
sub
mov
mov
ss
fdivs
fnsave
test
arpl
out
test
test
lods
jns
mov
sahf
pop
mov
out
into
push
fdivrs
jecxz
mov
cmp
sub
fstpl
inc
in
and
scas
pop
sbb
repnz
mov
fildl
mov
mov
loop
repnz
xchg
adc
or
xchg
xor
pop
fistpll
pop
mov
loopne
scas
cmp
push
xchg
adc
push
test
dec
aad
jp
mov
xchg
std
push
mov
ret
xlat
cmpsl
mov
das
cmp
insb
push
insl
cld
xor
sbbl
addl
pushf
subb
xchg
pop
cmc
jae
mov
mov
jge
andl
xchg
movsb
xchg
pop
pusha
xor
xchg
add
aad
out
push
nop
mov
dec
or
push
jge
stos
push
in
inc
mov
sub
pop
or
inc
sub
stos
and
jnp
mov
je
std
adc
cmp
cltd
xor
xchg
pop
sahf
les
push
or
push
cmc
sbb
mov
enter
mov
jb
cmpsb
or
sub
dec
stos
in
outsb
xchg
lret
aam
xor
push
bnd
in
ret
sbb
ss
cld
rcrb
pop
mov
andl
mov
inc
aad
jbe
push
adc
sub
adc
jo
mov
pop
jbe
in
add
xor
shl
mov
popf
frstor
fbld
dec
popf
insb
repnz
outsl
mov
and
ret
lea
in
repz
xor
push
imul
push
pop
jns
xor
insl
movsb
mov
cmpsl
out
fstpl
test
mov
cmc
dec
mov
add
sub
popf
pushl
mov
rcr
stos
mov
loop
lret
lea
lret
mov
pop
nop
test
jp
mov
push
push
in
leave
clc
mov
dec
iret
push
cmp
inc
pop
outsb
jb
addb
js
inc
stos
fsts
xor
push
push
lcall
push
jmp
fwait
adc
inc
xchg
test
add
mov
push
sub
andb
xor
outsb
cmp
xor
xchg
ss
rcr
ss
adc
cmc
fdivrs
jno
mov
adc
cmp
sub
subl
nop
push
lea
and
sub
movsb
pop
mov
leave
cmp
mov
in
test
data16
cmp
repz
pop
adc
decb
and
add
enter
popa
xchg
aam
cmp
fldl2t
subl
adc
lret
mov
mov
push
lock
sbb
daa
mov
stos
dec
sbb
je
test
xchg
mov
or
and
out
in
lea
imul
or
inc
mov
xor
faddl
mov
inc
inc
mov
xor
shlb
repz
add
int
hlt
cmp
jnp
xchg
adc
and
xorb
sub
sub
mov
jle
xor
push
ss
xor
push
mov
sub
pop
orl
test
sbb
pop
in
mov
outsl
test
lahf
nop
and
ret
mov
dec
je
aas
into
cmp
into
insl
lock
push
imul
and
hlt
jbe
pop
mov
pop
mov
push
mov
fcompl
sub
xchg
jl
xlat
es
lcall
sahf
sub
mov
adc
testl
aaa
gs
push
inc
repz
loopne,pt
mov
leave
dec
jmp
mov
scas
cmpsb
popa
stos
inc
mov
fcoml
stos
and
gs
into
insl
xor
pop
jns
mov
push
pop
sbb
jno
add
sub
pop
fwait
or
clc
jne
sub
adc
mov
es
pushf
js
aas
stos
and
fildll
ficoms
ss
int3
xchg
imul
cmp
movsb
pop
dec
mov
push
punpckhwd
pop
and
push
aad
icebp
lock
repnz
lds
out
faddp
and
xchg
insl
loopne
das
sti
lcall
imul
dec
fistpll
mov
jecxz
aaa
arpl
das
cmp
stc
and
fldt
int3
lods
add
xchg
xlat
sub
and
out
stos
outsl
jns
ljmp
jb
imul
xchg
test
push
mov
in
sub
mov
loop
mov
repz
not
cwtl
adc
cli
dec
mov
andl
imul
andb
pusha
mov
jno
test
sti
cmp
mov
inc
call
cmp
inc
mov
jbe
jns
lcall
scas
movsl
arpl
jecxz
nop
mov
or
popa
clc
sbb
cli
inc
push
je
add
and
lcall
and
jecxz
orb
sbb
iret
add
xlat
mov
inc
cltd
ds
mov
push
out
sub
int3
int
mov
push
rclb
gs
icebp
sub
push
inc
cmp
imul
rorb
inc
jge
lahf
cmp
pop
icebp
rolb
xchg
xchg
dec
or
adc
sub
mov
jne
pop
mov
cs
bnd
aas
shll
jo
mov
pop
cmpsb
xchg
lds
cmpsl
dec
and
jge
mov
cs
stos
leave
or
inc
jae
fdivrl
jl
int3
push
aaa
sbb
int
bound
jne
mov
push
daa
push
sub
add
mov
pop
icebp
add
ja
mov
jae
cli
xchg
dec
push
in
iret
mull
jne
xchg
lahf
in
xor
lds
mov
fcompl
loop
iret
subb
mov
jo
jp
js
pop
lods
subl
adc
pminub
out
mov
pop
pop
jle
inc
cltd
cli
or
mov
push
add
push
dec
inc
pop
xor
stos
lods
fildl
addr16
das
or
pop
sbb
lds
push
pop
mov
popa
lahf
cltd
dec
in
mov
adc
push
movsl
jae
mov
xchg
cmp
es
mov
mov
in
xorl
inc
lahf
loopne
push
out
mov
fidivs
add
inc
fldl
and
pop
xor
mov
or
adc
popf
push
ja
jp
jae
ret
pop
test
rcrb
pop
or
int3
aas
or
push
out
or
jne
adc
leave
inc
pop
push
fcmove
mov
fildll
movsb
xor
aad
std
ljmp
pop
dec
bound
xchg
sub
int
mov
fbld
cmp
and
inc
xchg
push
mov
sbb
xchg
jb
pop
lods
cmc
dec
pop
inc
nop
out
xor
push
icebp
jecxz
mov
cmp
push
ret
ljmp
jno
xor
hlt
in
push
sub
adc
and
lods
push
pop
xchg
jne
jbe
pop
das
xchg
xor
adc
mov
insl
sbb
ret
pop
jmp
and
arpl
cmp
mov
bound
enter
pop
ljmp
push
shll
xchg
repnz
addr16
or
ja
arpl
lahf
gs
jnp
inc
xchg
lods
mov
lods
and
pop
xchg
sub
xchg
sub
push
inc
outsl
repz
pop
sti
ja
push
out
push
testl
sub
out
je
mov
pop
mov
adc
cmp
jmp
push
adc
add
pop
adc
mov
cmc
fdivrs
arpl
lret
mov
adc
dec
stc
xor
push
mov
out
bnd
je
repnz
shll
mov
sub
push
mov
push
movsl
icebp
mov
repz
movsb
pop
pop
pop
xchg
fst
popa
sub
insb
xorb
adc
cwtl
rcrb
pop
test
push
push
rcrl
stos
xor
lods
mov
cmp
std
dec
mov
repz
out
movq2dq
or
xchg
lret
bound
jns
and
lods
shrb
jmp
insl
mov
push
mov
sbbb
adc
aad
lea
ds
mov
in
fistl
pop
out
adcl
shr
adc
sbb
mov
xor
cmp
xchg
mov
cltd
push
sub
dec
pop
adc
shll
xor
ljmp
test
add
out
jmp
andl
xor
mov
decl
test
testb
jg
arpl
stc
pop
mov
cmp
jle
mov
out
jbe
xchg
sub
outsb
in
insb
dec
sbb
lcall
es
and
ss
insl
sti
or
or
ljmp
imul
cmp
test
insl
pop
test
pop
int
andb
ljmp
sub
mov
lods
fistps
and
ja
mov
movsb
push
data16
lock
xor
ds
xor
imul
std
mov
leave
push
add
sub
or
lock
fcoml
inc
add
in
xchg
or
sahf
add
outsl
cmp
mov
ljmp
sub
mov
inc
push
mov
xorb
lss
fsubr
or
cli
xchg
lock
push
mov
mov
test
shrl
xor
popf
inc
or
subl
dec
addr16
push
lret
inc
mov
jl
es
xor
imulb
iret
cmpsl
sub
lret
add
cmp
xor
ljmp
add
inc
xor
ljmp
and
pusha
loopne
sbb
stos
pop
jb
add
pop
mov
pushw
xor
jmp
out
bound
outsl
mov
jle
jne
pop
iret
loope,pt
repz
sub
or
mov
add
mov
addl
sbb
test
lret
sbb
push
mov
in
xor
inc
push
insb
push
or
xchg
adc
inc
sti
iret
mov
inc
fstpl
ss
pop
xchg
popa
jns
jbe
or
mov
fdivp
addr16
push
shr
aaa
loope
jg
xor
mov
pop
xchg
add
enter
dec
pop
mov
jo
and
push
dec
ds
ja
mov
mov
fisttpl
xchg
fcoms
movsb
inc
jb
mov
jle
test
lret
adc
bound
xchg
leave
repnz
push
pop
push
inc
pusha
loopne
push
stos
shl
in
ret
push
xor
push
in
jle
cld
es
xor
aas
add
fwait
cmpsl
js
fsubr
fnstcw
mov
xor
inc
in
sbb
sbbl
sbb
outsb
mov
and
fldenv
mov
and
movups
shll
jg
push
filds
mov
push
imul
loope
fsubrp
and
inc
mov
imul
adc
pop
scas
loope
pop
sub
arpl
mov
mov
xor
into
enter
cmp
loope
stos
xor
add
xor
xor
mov
stc
aam
jle
add
into
pop
imul
mov
or
rcrl
sti
push
repnz
jnp
or
adc
sub
scas
sub
in
inc
shl
lods
mov
out
ret
dec
adc
dec
add
mov
mov
andb
popf
adc
shlb
fidivrl
push
lret
xor
mov
or
add
mov
jp
mov
ret
cltd
xor
mov
rcl
repnz
fsubrs
pop
out
inc
mov
jbe
loop
pop
xor
in
add
mov
and
lcall
pop
adc
fs
add
mov
xchg
xchg
jg
xchg
xchg
sarl
inc
inc
and
xchg
mov
xor
sbb
sbb
nop
xsaveopt
mov
mov
xor
mov
sbb
les
lock
cwtl
and
jae
sbb
insl
jmp
dec
inc
sti
cmp
jbe
or
push
jl
popl
lret
cmp
flds
pop
inc
testl
rcrl
mov
fstpt
mov
push
sub
cmp
cli
pop
es
pop
adc
jbe
jmp
mov
je
out
xlat
repz
add
sbb
aaa
into
and
mov
push
add
cs
jo
lea
fsubs
iret
push
clc
and
dec
push
inc
fcmovne
adc
sub
bound
push
in
aam
cltd
jne
mov
cmpsb
xchg
sti
xlat
lock
mov
test
ds
ja
in
loop
push
cld
jmp
shr
adc
lret
mov
cmpsl
push
and
add
icebp
jl
xchg
xor
lahf
ret
dec
mov
xlat
test
movsb
jecxz
call
addl
cmpsl
sub
addr16
xchg
jae
iret
pushf
or
stos
or
ds
xor
pop
pusha
loop
dec
inc
jmp
fisubs
popl
push
lods
popa
dec
imul
push
stc
int
xor
icebp
lds
or
cmpsl
ds
add
rcrb
push
xor
mov
movsb
out
mov
inc
jnp
jl
pop
mov
unpcklps
inc
shlb
dec
jae
push
and
les
pushf
pop
add
sbb
mov
mov
fmulp
cmp
cmpsb
icebp
test
mov
lret
xor
imul
into
mov
fmuls
popf
es
jne
inc
fistpl
adc
xchg
jne
or
ficomps
test
outsb
lods
mov
fimuls
mov
dec
nop
in
lock
lret
and
sbb
popf
sti
shlb
sarl
aad
pop
int
sti
out
sub
mov
mov
mov
in
stos
lret
testl
pop
jb
shl
adcl
dec
add
push
call
popa
dec
and
adc
xchg
bound
sbb
add
jmp
fisttps
enter
inc
inc
or
sbbl
or
mov
adc
movsb
mov
and
jno
mov
or
int3
arpl
jnp
xchg
in
js
jecxz
pop
loope
test
jmp
dec
and
and
movsl
idivl
jns
add
daa
out
shll
popa
add
ret
orl
xor
je
lock
rolb
mov
mov
cmp
pop
jecxz
je
outsl
add
sub
cmp
push
jbe
dec
loop
sbb
adc
inc
leave
jl
and
shrb
or
mov
es
aad
mov
mov
push
das
or
negb
ds
sub
or
fwait
je
int
bndstx
xchg
sbb
mov
push
and
add
inc
dec
xor
repnz
inc
lock
sbb
outsb
sti
or
inc
jne
pop
cmpsb
cmp
pop
push
add
test
data16
xor
add
fs
jp
fcmovne
cmp
loope
and
lods
mov
and
dec
push
sub
cmp
jle
sahf
or
add
mov
pop
or
push
mov
or
lret
cltd
sbb
push
xchg
cmp
jl
ds
mov
adc
pop
jno
xor
daa
pop
add
ja
es
xlat
je
jle
adc
sub
xor
xor
je
mov
sub
addb
mov
lock
and
sbb
or
dec
add
pusha
fistpll
lea
cmpsl
push
dec
bound
inc
rcll
cmpsl
sub
mov
jb
shlb
out
jg
loopne
adc
push
xor
mov
fs
rorb
lods
movb
mov
dec
add
lods
addl
jne
jns
xchg
ljmp
xor
and
dec
cld
mov
mov
jmp
sbbb
sbb
cmp
aad
add
lcall
cmp
insl
mov
cwtl
add
out
inc
mov
cmp
sbb
pop
push
ljmp
es
mov
sahf
inc
pop
xchg
and
cmp
or
sub
data16
fwait
xchg
xchg
jp
pushf
add
nop
sbb
aas
cmc
adc
xchg
pusha
sub
lods
dec
das
jg
push
fcompl
pop
aam
or
fmull
cmp
mul
pop
and
or
insl
adc
mov
xlat
in
gs
aaa
ljmp
or
fistps
test
icebp
loopne
jne
ret
adc
inc
jbe
pushf
scas
sub
or
jae
mov
nop
shrl
mov
decb
mov
clc
in
sub
pop
ret
outsl
js
nop
mov
sahf
lcall
mov
fimull
test
mov
out
out
in
mov
shl
push
movsl
inc
mov
cmp
jbe
or
cltd
out
popa
sbb
ja
mov
and
or
imul
pushf
mov
mov
add
out
loope
and
je
dec
and
ss
pop
add
les
adc
xchg
mov
movl
in
loopne
and
add
mov
fldenv
pop
mov
pop
test
mov
adc
mov
sub
sub
mov
and
es
lret
aaa
pop
rcrw
mov
jb
hlt
push
dec
push
cltd
cmc
or
and
aam
or
jo
je
xchg
repnz
inc
cmp
ficomps
mov
push
sbb
nop
sbb
jae
notl
shl
leave
andb
int
test
xchg
addr16
jb
jp
imul
or
and
or
sbb
fcompl
leave
pusha
and
add
sub
pusha
xchg
or
testl
sarb
mov
sarb
imul
push
mov
pusha
lahf
mov
mov
aad
sub
out
ret
shrb
scas
push
mov
xchg
in
jmp
imul
jmp
aas
xor
cld
jmp
or
jecxz
add
sbb
adc
add
add
push
je
clc
or
aaa
or
arpl
insl
addl
es
xlat
or
ror
ss
or
sbb
xor
loop
ljmp
mov
xchg
mov
mov
mov
sbb
pop
adc
cmc
iret
jnp
imul
xor
inc
or
inc
lahf
sub
out
test
mov
or
push
bound
and
imul
pop
sbbb
ss
lret
dec
pop
loopne
push
jae
or
mov
sbb
mov
fidivrl
push
inc
push
gs
lcall
sahf
cmp
push
mov
mov
push
cmc
push
adc
loope
ljmp
cltd
jle
mov
xchg
stos
cmpsl
xchg
mov
stc
ljmp
push
mov
out
fdiv
mov
adc
xchg
jns
sahf
pop
out
hlt
popf
sub
push
in
dec
push
out
cmc
in
mov
fmull
pop
xchg
flds
and
sbbl
push
jl
add
inc
fldl
mov
jmp
adc
pop
ja
in
dec
rcl
cmp
cmc
adc
jb
out
mov
arpl
mov
fs
mov
imul
insb
and
cmpsl
xchg
imul
daa
mov
daa
andl
mov
push
mov
jbe
loope
cmp
ja
cmp
sbb
mov
mov
add
or
inc
mov
mov
sbb
lods
jmp
push
xchg
hlt
push
scas
xor
pop
aaa
in
mov
mov
rorb
gs
int3
push
fdivl
leave
arpl
pop
cmp
cmp
enter
dec
roll
shrl
pushf
mov
ss
pop
inc
dec
mov
push
pushf
cmp
inc
adc
fwait
divb
pop
cmpsb
jbe
push
inc
or
push
fldt
hlt
sub
mov
daa
cmc
xor
popa
or
push
jo
xor
out
push
dec
mov
dec
or
mov
roll
fnstsw
xchg
mov
aam
xor
adc
stos
pop
mov
jo
cmp
mov
lods
pop
pop
pop
mov
lret
ljmp
push
jp
dec
testl
dec
out
sub
mov
mov
and
divl
aas
clc
loope
jl
incb
les
pop
outsb
xchg
inc
jl
mov
aad
xchg
inc
lods
mov
loopne
or
dec
mov
sub
xchg
pop
lret
repnz
mov
lret
push
sub
lea
jmp
mov
jb
pop
sbb
lods
xor
arpl
ja
cmp
push
mov
popa
xor
pop
test
adc
inc
repnz
push
cmp
jb
mov
scas
mov
mov
or
test
sbb
jne
shrb
clc
inc
mov
mov
sub
push
incl
xchg
pop
jb
ja
jnp
pop
icebp
jne
int
ret
dec
push
and
ret
pop
jno
orl
jmp
and
sub
loopne
les
jbe
shll
ljmp
stos
leave
scas
inc
sti
jae
sub
jne
std
sub
fcomip
or
adcb
sub
adc
cld
xchg
test
push
pop
fcompl
cmp
pop
or
dec
cmp
jns
sub
insl
fldcw
cmp
aad
xor
out
jns
xchg
mov
orb
lret
xchg
pop
iret
cld
shrl
mov
test
mov
push
cmc
cmp
cwtl
pusha
dec
lea
inc
cwtl
clc
idivb
pop
dec
leave
adc
aam
xchg
loopne
int3
mov
out
mov
pop
insb
jle
push
inc
inc
fstp
adc
xlat
sbb
push
and
scas
sub
rcr
in
cmp
aas
mov
js
sbb
int
and
popa
loop
sub
lea
int3
xchg
inc
add
jne
push
or
loop
pop
xor
fmuls
jb
in
sbb
movsl
sbb
int
mov
cmpsb
das
stos
fcmovb
das
fildl
sbb
cli
cs
sbb
adcb
push
sahf
imulb
cmp
pop
pushf
adc
fisubl
scas
lods
cmp
inc
aad
repnz
fisttpl
sbb
scas
jge
jne
fdivl
lods
pop
mov
inc
sbb
lret
pop
xchg
sub
shrl
jnp
xor
jo
adc
lahf
repz
xlat
rorb
add
cltd
mov
jle
idivl
loope
adc
and
fwait
inc
or
push
xor
mov
and
negl
lea
popa
cs
jo
insb
rclb
repnz
stc
mov
mov
scas
rcl
pop
test
popa
mov
outsl
cld
stc
mov
enter
fisttpll
mov
movsl
jg
repz
jne
imul
adc
mov
and
inc
push
roll
mov
and
sbb
xchg
push
jmp
shlb
lds
mov
xchg
test
sub
push
aad
or
xor
push
icebp
ret
inc
xchg
imul
lcall
jg
out
rcrb
imul
add
out
mov
nop
add
test
mov
dec
add
sbb
fistps
ja
lret
inc
leave
insl
int
pop
movsb
std
loopne
daa
clc
jl
loopne
jecxz
mov
push
gs
sar
pop
stc
nop
dec
fisttps
ficompl
mov
pop
push
sub
or
mov
fiadds
add
gs
js
xchg
mov
xchg
rol
mov
js
mov
xchg
enter
pop
dec
push
or
ds
fstps
call
into
sbb
mov
or
push
mov
dec
orb
or
andb
ja
in
daa
push
popf
fsubrs
mov
ss
popa
hlt
ljmp
push
sahf
fs
push
lcall
in
ja
and
stos
adc
out
adcb
sarl
push
jo
xchg
pop
inc
sbb
fstps
and
sbb
push
call
pusha
pop
cmc
jnp
mov
pop
cmc
mov
ja
cmp
outsl
icebp
mov
mov
pop
ss
loopne
fadd
adc
mov
negl
jg
jb
mov
in
push
cmp
insb
push
pop
rclb
repnz
ds
cmp
mov
int3
and
xchg
push
shlb
je
lret
cmp
adc
popa
cmc
cmc
mov
repz
lock
inc
push
data16
mov
out
loopne
jl
jle
fcoml
xchg
pop
inc
jmp
pop
jae
mov
sub
adc
mov
cmp
push
mov
adc
andl
sbb
out
dec
cmp
js
sub
mov
mov
adc
loope
inc
sarb
fldenv
lret
xchg
jmp
adc
add
clc
rcl
cmc
xor
mov
out
pop
in
int3
jbe
roll
sbb
dec
ffree
pusha
popf
shl
dec
loop
adc
ret
shl
xor
sub
mov
sarb
or
outsl
ret
mov
pop
test
lods
jmp
xlat
or
dec
icebp
mov
cltd
adc
dec
mov
jmp
int
sbb
cmpsl
rorl
pop
mov
inc
sub
rcll
mov
arpl
sub
in
ret
lcall
clc
vpcomgew
insb
xor
loop
mov
and
movsb
cmp
test
and
addr16
adc
add
xchg
call
or
cld
lcall
sbb
test
cmp
insb
add
jno
les
jns
iret
loope
add
pop
lock
or
iret
pushf
mov
arpl
mov
xor
cmpl
mov
mov
or
lret
push
dec
loope
in
jmp
test
inc
out
jle
dec
sbb
jge
jle
out
lcall
or
pop
push
out
popf
pop
inc
xor
popf
incb
mov
add
sbb
or
mov
sahf
sub
pusha
outsb
sub
pop
hlt
rol
inc
popf
out
dec
nop
jmp
out
popf
xor
cmpsb
push
adc
mov
cltd
lock
insb
pushf
push
in
int
les
lret
xlat
test
or
sbb
mov
nop
cmp
out
xor
repnz
icebp
notl
aam
mov
fcmovnb
pop
rorl
push
push
dec
negl
fnstsw
int
xor
push
bnd
mov
jl
dec
mov
mov
ss
fstps
sahf
xor
ja
mov
inc
mov
out
popf
in
jno
xchg
or
and
loopne
imul
lcall
xchg
in
rolb
icebp
movsl
push
scas
pop
in
pop
imul
sbb
cmp
push
xlat
inc
insl
call
cli
pusha
sbb
fcmovne
and
addr16
jae
test
sub
and
sub
jbe
lods
cmovae
outsl
pop
test
int
mov
std
push
in
pop
sub
test
xor
pandn
mov
push
mov
xchg
in
stc
jmp
sub
push
mov
pusha
testl
outsl
cmp
mov
andb
loopne,pn
dec
imul
and
cmp
popf
into
jo
add
rcl
movsb
mov
pop
sub
mov
xor
adc
push
test
leave
test
out
sbb
repz
fisttpll
mov
rcl
add
mov
inc
lods
rorb
sub
push
or
lret
mov
adc
adc
ss
ljmp
xchg
xor
stos
arpl
add
into
lea
jnp
shll
xchg
xchg
add
call
jecxz
dec
xchg
xor
pusha
loope
stos
or
int
loop
jbe
mov
imul
ja
inc
cltd
add
xor
lret
pop
xchg
bound
sahf
jne
lret
fidivs
dec
aad
mov
cld
lods
add
sub
out
rclb
imul
cmpsb
xchg
pop
outsb
loope
cmp
and
jb
jg
push
jae
movsb
jmp
jecxz
mov
push
jnp
popf
xchg
cmpsl
mov
jg
sti
push
cmpsl
adc
jne
and
cli
jb
jbe
scas
jle
xor
insl
mov
das
cmp
enter
divl
sbb
and
pop
mov
lahf
cmp
cmc
xchg
aas
push
pop
or
push
push
fwait
mov
pop
sahf
loope
sub
lods
lcall
lret
iret
xorl
insl
inc
push
or
inc
jmp
mov
scas
push
imul
popa
lock
xchg
rcl
dec
mov
push
lods
stos
xor
pop
or
jo
ljmp
rolb
loope
pop
pushf
lods
pop
sbb
leave
cmp
cltd
lret
lret
mov
xlat
inc
inc
or
xchg
or
frstor
jne
jne
xchg
lods
push
int
adc
sub
adc
push
lods
push
scas
iret
data16
or
mov
xchg
cmp
testl
scas
xchg
cltd
jge
inc
mov
shl
aas
aad
shrl
rcr
adc
cld
dec
jle
jle
sbb
cmc
mov
jmp
inc
jnp
dec
mov
test
ja
subb
jp
inc
mov
dec
int3
mov
lahf
sbb
mov
addr16
orb
shlb
repnz
mov
out
pop
xchg
test
aam
xor
in
sbb
clc
cmp
dec
adc
add
and
xchg
mov
cmpsb
cmp
rcr
cmp
jno
les
lods
pushf
dec
sub
in
dec
cmp
scas
sbbb
mov
mov
inc
and
out
mov
fistpll
xchg
leave
enter
and
inc
and
in
sub
mov
addr16
loop
std
cmp
jae
jnp
xlat
inc
inc
fidivs
lock
adcl
mov
jns
pop
xchg
sub
insb
xor
jns
xlat
outsb
ret
jnp
sbb
lahf
mov
add
xchg
out
xor
or
mov
arpl
mov
dec
es
sbb
cmp
lcall
xchg
push
mov
ljmp
enter
leave
pop
jnp
mov
invd
lret
sahf
dec
pop
mov
ja
and
xchg
xchg
sbb
xor
insl
lahf
fisttpl
testl
jg
pop
or
cmc
cmp
adc
xchg
xchg
dec
aaa
cmp
lcall
inc
cmp
cmc
imul
xor
mov
push
outsl
or
stc
lea
addb
adcb
xchg
jmp
cmpsl
ss
push
fmull
or
sub
xor
jmp
int3
xchg
cli
imul
std
inc
sti
or
mov
aas
add
or
pusha
pop
xor
push
dec
enter
xor
std
mov
orl
les
sub
push
sbb
les
pop
add
xchg
sbb
jge
mov
mov
xchg
popa
in
out
sarl
rcrl
mov
loop
and
jo
ja
test
mov
scas
jb
add
push
sbbb
mov
sub
sti
cmp
push
sub
add
fdivs
out
xchg
mov
cld
cwtl
push
mov
inc
repnz
aam
popa
and
mov
repz
leave
push
pop
pop
aaa
push
sbb
loope
mov
xchg
dec
mov
sbb
repz
fdivrs
mov
xchg
rorl
mov
dec
test
insl
jne
xorb
arpl
fimull
movsb
dec
loop
jp
dec
rorl
and
cmp
jns
mov
incb
mov
mov
mov
mov
insl
shrb
das
pop
pop
inc
lea
inc
shrb
inc
clc
leave
pop
sti
rorb
jmp
stos
xchg
inc
sub
cmpl
mov
dec
aad
int
arpl
inc
jo
add
jae
aad
daa
pop
mov
xchg
in
jle
leave
cld
outsl
sub
cmpsl
fcomps
or
clc
mov
push
fcoml
push
or
pop
inc
cs
push
mov
imul
cmpsl
nop
push
mov
mov
aas
pop
pop
ret
ret
pop
sub
pop
jge
push
push
mov
aam
pop
scas
hlt
inc
call
loopne
fistl
test
push
xchg
mov
aas
loop
mov
push
add
push
mov
mov
lods
mov
rorb
and
pop
cmp
in
and
cmpsl
pop
jle
xor
pop
scas
and
adc
dec
sub
mov
je
or
bnd
aas
push
nop
stos
jne
fsubl
fildl
aas
mov
pusha
sub
adc
test
imul
lcall
and
cmp
sahf
lods
mov
sarl
jne
inc
push
and
aad
jmp
push
push
movntq
fadds
notl
mov
fwait
xchg
mov
sarb
jbe
xor
and
sarb
rcrl
scas
out
adc
inc
lcall
sbb
cmp
leave
js
out
in
mov
out
fdivl
and
fidivs
sbb
fadds
or
cli
in
and
jg
aaa
in
sti
mov
ficoml
pop
dec
mov
daa
js
sbb
push
data16
out
insl
dec
fisttps
pop
insb
pop
mov
cmp
pop
sbb
lds
arpl
outsb
sbb
or
jno
lds
imul
dec
dec
movsb
aaa
iret
out
adc
ljmp
cmp
pop
outsl
loop
fs
fildll
sub
sbb
repz
xchg
mov
jnp
movsb
mov
shl
cmp
xchg
stos
repnz
bound
dec
and
lods
fidivs
ret
jae
in
orl
push
push
or
mov
repnz
sub
pop
xchg
call
mov
popf
and
ds
mov
mov
pop
pop
aad
outsl
xchg
sub
cmp
imul
inc
sti
fwait
xchg
or
add
scas
cltd
pusha
mov
mov
addl
cwtl
lods
and
iret
sub
ja
xor
outsl
hlt
adcl
fsts
sbb
dec
cltd
pusha
test
ret
cmpsb
push
cmp
or
jae
int3
test
shll
cmpsb
push
and
cltd
dec
xor
clc
pop
add
arpl
movsb
adc
push
fnstenv
pop
mov
mov
cmp
mov
roll
push
dec
dec
hlt
jecxz
jl
push
inc
xlat
xchg
lret
sbb
add
js
push
scas
pop
loope
call
sbb
lock
arpl
popf
jo
xchg
in
push
xchg
fs
aam
and
out
int3
jbe
rolb
call
mov
in
imul
test
adc
adc
push
mov
inc
mov
mov
sar
jae
xor
mov
sub
jne
xchg
push
mov
pop
dec
dec
dec
ret
mov
outsb
popa
daa
ljmp
orl
call
jnp
cmpsb
cmp
jmp
jno
push
pushf
popa
ss
adcl
repz
cmp
cmc
ja
mov
push
mov
pop
loope
adc
cmp
push
dec
mov
cmpsb
hlt
aad
fistl
fimuls
sti
adcb
lret
lret
subb
inc
push
clc
int
jo
sbb
in
lods
mov
movsb
mov
jmp
xlat
rep
fnstcw
test
mov
adc
roll
cltd
ljmp
jo
mov
shrl
jmp
icebp
adc
cmpsl
cwtl
dec
xor
adc
mov
pop
idivb
lods
jecxz
mov
fcompl
cs
outsb
add
pop
mov
cmp
or
cmp
rclb
pop
sbb
negl
sub
push
aad
int
xor
mov
sub
out
aaa
mov
testb
mov
mov
dec
loop
xor
shll
mov
xchg
ljmp
paddq
pop
push
xor
mov
es
cmp
cwtl
and
std
mov
inc
jle
mov
inc
dec
inc
faddl
push
fs
push
adc
cmp
pusha
imul
call
xchg
sub
leave
mov
push
pop
pop
cmp
inc
cwtl
cmp
mov
shl
pop
fcmovnu
scas
arpl
aam
loope
sub
jg
rcrb
flds
mov
iret
mov
pop
cmp
lods
movsb
xchg
loope
popf
aaa
sahf
mov
mov
dec
xchg
pop
mov
dec
test
mov
adc
mov
es
shrl
stc
or
or
repz
lea
das
push
sub
push
dec
dec
cmp
mov
push
movsl
cs
int3
jg
je
rclb
out
mov
push
sbb
mov
mov
inc
cmp
cmp
jo
cmc
frstor
xchg
nop
cmp
sub
push
jle
aaa
pop
inc
sub
mov
and
mov
mov
sub
pop
jmp
and
mov
pop
ffreep
jge
subb
fcmovnbe
loopne
mov
jno
push
in
and
xchg
fcoms
and
iret
popa
cwtl
icebp
adc
sarb
jecxz
mov
cmpsl
sbb
mov
mov
stos
insl
dec
lahf
stos
xchg
push
fmuls
call
xchg
mov
leave
das
mov
mov
mov
sarl
nop
pop
rclb
mov
or
mov
std
mov
out
test
stos
data16
cwtl
lret
mov
rorl
dec
out
fsubrl
into
ret
dec
jecxz
das
xor
add
out
sub
mov
xchg
or
pop
add
mov
inc
in
xchg
ret
fdiv
push
faddl
andb
jno
jle
cwtl
push
sub
fstpl
jecxz
adc
cmp
stos
adc
stos
lret
sbb
inc
mov
pusha
jl
pop
lret
sahf
movzwl
shr
xor
sub
shll
fld
cmp
pop
dec
push
addr16
jnp
fcoml
das
movb
adc
arpl
popa
sub
cltd
pop
sub
fdivrs
and
add
inc
popf
ljmp
fcoml
ljmp
inc
cld
mov
ret
dec
lcall
inc
pop
mov
and
xchg
out
ja
ror
inc
cmpl
xchg
repz
adc
inc
rorl
out
sub
insl
divb
xchg
outsb
mov
mov
sub
imul
push
cmp
idivl
aad
xor
pop
imul
frstor
adc
inc
movsb
add
xlat
int
mov
lahf
data16
shrb
xchg
pop
sub
loope
fistps
jns
sbb
fwait
sahf
int
fistpl
mov
stc
pop
fdivl
iret
inc
out
sahf
fistpl
or
push
fdivrl
repnz
jl
std
lods
adc
inc
into
int
push
mov
mov
leave
mov
das
push
lods
pop
out
push
push
cmp
int3
je
inc
jecxz
xchg
int3
cmpsb
add
push
jae
xorb
shll
push
movsb
insl
lods
inc
lea
inc
fcoml
int
dec
jge
insb
scas
sub
pop
pop
mov
pop
cmp
std
and
nop
jp,pn
pop
xor
mov
jnp
xor
cwtl
movsl
mov
arpl
shlb
repnz
fnstsw
push
mov
pushf
nop
jae
jns
jno
repz
rcr
mov
movsl
das
jl
and
fsubs
fwait
out
mov
inc
in
ss
inc
cmp
imul
and
clc
inc
push
out
pop
shll
dec
cmp
mov
add
stc
aam
ret
mov
add
arpl
stos
sbb
stos
loop
mov
addb
shlb
or
pop
testb
push
int3
inc
adc
jecxz
pop
adc
mov
es
test
pop
jg
pushf
out
arpl
push
loope
andl
in
pop
rcll
mov
js
add
jp
ds
shr
test
fisubrs
into
lret
xor
cmovle
int3
and
fsubl
sahf
sbb
push
push
mov
mov
dec
pop
dec
dec
into
ficomps
mov
mov
and
mov
push
ret
test
loope
push
inc
xor
jb
fs
xor
bound
dec
arpl
push
out
mov
addl
in
ss
pop
iret
sub
js,pt
adc
cltd
jecxz
rol
inc
iret
mov
dec
cmp
push
lods
faddl
fdivrs
push
jg
dec
leave
test
rcrl
jg
cmc
repnz
mov
mov
sbb
mov
fstpl
fidivs
xchg
mulb
fwait
and
movsb
aas
mov
out
cmpsl
cmp
sbb
xlat
mov
dec
dec
cmp
lods
mov
std
mov
inc
lcall
adc
mov
cld
mov
in
pop
in
cmp
xchg
push
sbb
pop
les
or
adc
in
xor
push
es
jg
push
mov
sbb
into
gs
cmp
cmovg
inc
sub
pop
pop
jno
jge
repz
fisubrs
sbb
into
or
cs
mov
cmp
add
cmp
aaa
rcl
sbb
insb
in
ja
pusha
push
ret
push
xchg
sub
mov
lea
inc
out
movups
scas
in
das
jge
sahf
insl
inc
inc
stc
and
push
scas
xchg
mov
scas
loope
and
lock
and
mov
mov
pop
sub
rcl
jmp
xor
xor
xlat
lea
sub
in
das
cmp
sbb
xlat
repnz
or
lret
xchg
inc
or
out
daa
clc
jl
mov
push
jg
mov
push
pushf
lock
fisubl
adc
fists
outsb
fwait
jo
mov
insl
and
insl
aaa
rcl
in
pop
inc
pop
shrl
fnsave
cmp
cs
pop
stos
mov
cmp
jle
out
stos
fcmovbe
sub
xchg
sbb
fidivl
fwait
in
cmpsb
and
jnp
dec
test
arpl
mov
scas
push
sub
loop
jno
fwait
inc
mov
rol
fcomps
outsb
test
mov
xchg
add
push
sub
mov
fs
shrl
and
push
mov
xchg
aad
cmp
pop
sbb
ja
mov
stos
inc
movl
xor
adc
dec
mov
adc
out
push
insb
add
test
popf
jno
xor
ljmp
insb
mov
out
frstor
std
test
mov
mul
and
sbb
in
mov
ja
push
or
out
ret
pushaw
out
jae
pop
insl
pop
xchg
jb
mov
test
ja
scas
roll
lcall
sub
jl
jne
daa
mov
enter
lcall
adc
call
aaa
aam
sub
inc
jmp
fwait
xor
adc
jmp
push
shlb
out
push
adc
mov
imul
fsubrl
insb
cmp
fdiv
mov
aam
enter
jo
sub
mov
xor
or
popa
aas
xchg
sub
sahf
pop
adc
mov
sbb
dec
pop
std
rorl
jg
fildl
lds
test
xlat
data16
shrb
pop
insb
lea
or
add
inc
pop
icebp
addr16
xor
hlt
mov
sbb
sub
movsb
sub
sahf
andl
cmp
sub
mov
pop
mov
ds
or
ret
xchg
dec
in
lods
adc
mov
sbb
xchg
jp
fidivrs
shll
popf
and
and
daa
scas
push
out
fisttps
cmp
xchg
cmp
in
hlt
jmp
cli
add
out
push
pusha
test
frstor
in
or
xlat
outsb
les
sbb
outsl
icebp
int3
xchg
out
add
fs
push
jnp
or
insl
xchg
or
shrl
mov
insb
dec
mov
insb
lock
out
rcl
inc
sbb
negl
addr16
cmp
mov
cltd
mov
push
push
sub
and
push
pop
rol
push
inc
adc
movsb
loop
lea
in
xor
push
xchg
cmp
stos
inc
add
and
and
rcl
mov
mov
or
leave
shrl
xchg
in
adc
dec
jecxz
and
push
xchg
xchg
xor
out
movsb
push
add
xor
sub
jmp
or
stos
xor
ret
adc
mov
bound
jno
xlat
mov
pop
lods
mov
mov
out
inc
fstps
jmp
fnstenv
subl
sbb
xlat
bound
xor
fsubl
adc
testb
xor
xlat
test
jl
nop
ret
adc
xchg
add
add
data16
pushf
stc
inc
roll
ljmp
rclb
or
negl
pushf
xor
mov
popa
push
sbb
lds
jp
inc
inc
adc
sbb
and
pop
mov
fcompl
mov
fsubr
mov
outsb
or
cmc
adc
xchg
movsb
je
xlat
testb
cmp
es
repnz
sbb
sbb
nop
push
push
inc
fistpl
mov
ficomps
cmp
int
divb
jnp
add
imul
orb
or
inc
ds
lret
ja
inc
adcl
bound
inc
inc
inc
adc
arpl
addr16
or
cmc
shll
testl
and
adc
pushl
leave
mov
ret
mov
pop
mov
pop
loopne
or
pushf
cmc
sub
xchg
sahf
add
inc
fldl
push
jg
je
movsl
pop
cmp
mov
test
lods
loop
ret
test
sub
aas
jmp
out
arpl
insl
adc
xlat
add
adc
sub
loopne
inc
dec
mov
into
push
mov
std
loope
jns
mov
mov
es
fidivs
je
subl
xchg
mov
lret
jns
xchg
xor
lahf
ret
gs
mov
adc
xchg
ret
mov
cmp
or
xchg
or
and
or
inc
xor
test
fistps
push
push
mov
cli
aad
sarb
mov
xor
cmpsl
jae
dec
mov
push
mov
add
pop
mov
or
add
lods
cmp
xchg
popf
popa
jp
idivb
cmpl
aam
or
sub
push
pop
push
jno
jb
sub
cs
outsl
and
out
mov
aam
mov
lods
mov
add
push
push
fistpll
lret
push
clc
xor
loopne
mov
mov
jmp
dec
int
cmp
jbe
in
inc
gs
pop
xchg
adc
and
cli
or
jmp
bound
sub
push
dec
add
nop
sub
sbb
xorl
xchg
popa
out
push
lahf
xlat
pop
push
and
sbb
jmp
or
mov
cmp
adcl
push
ret
lods
push
dec
fidivl
inc
addr16
fisttpl
clc
xchg
add
adc
gs
sbb
mov
cmp
sub
xchg
shrl
fwait
adcb
pop
push
and
mov
pop
xor
int
shll
inc
inc
shrb
jno
arpl
adc
nop
daa
dec
sub
pop
xor
shrb
jnp
xor
add
testb
pop
es
add
jno
andl
loope
ret
pop
xor
adc
sbb
pusha
or
push
adc
arpl
cmp
fwait
cmp
xchg
movsl
push
pop
test
loop
or
pushf
or
cs
negb
andl
mov
cwtl
nop
and
clc
push
movsl
mov
push
les
jle
hlt
imul
xchg
mov
jle
pop
sbb
or
mov
xor
fwait
jo
xchg
pop
add
ljmp
xor
mov
add
filds
loop
out
adc
addr16
sub
ds
jne
jnp
push
mov
and
iret
mov
je
icebp
xor
inc
sbb
jecxz
fwait
xor
push
mov
jp
adc
and
pop
add
dec
push
sbb
test
or
mov
aaa
add
cmp
add
xor
add
mov
inc
sub
dec
mov
mul
xchg
push
add
jb
mov
mov
xchg
lret
lods
ret
push
jl
repnz
stos
mov
popa
lcall
sbb
push
push
lea
xchg
mov
lahf
testl
incb
xchg
sub
jne
xchg
loop
fcmovnbe
adc
dec
ss
cli
rcrb
pop
inc
jmp
rol
gs
mov
push
cmpl
mov
addr16
cmpsl
dec
push
cs
fcmovbe
daa
iret
push
or
add
orl
daa
cltd
mov
dec
in
cltd
sbb
or
mov
inc
cmp
pop
or
dec
fwait
or
mov
jg
dec
pop
gs
repz
jae
xor
adc
cmp
push
jne
lahf
jge
aad
inc
push
lods
stos
xchg
roll
frstor
lea
xor
cmpsl
dec
push
or
jbe
clc
and
cmpl
sbb
not
aad
add
pop
and
cmp
adc
push
hlt
inc
mov
pusha
cs
fstl
stos
nop
insl
popl
inc
lods
add
adc
sbb
pop
inc
rep
xchg
jge
pop
xor
jl
xor
punpckhwd
enter
dec
ficomps
fimull
jp
decb
in
jae
jecxz
sub
xlat
test
lds
testl
lods
cmc
inc
push
xchg
cmpsb
cwtl
lods
mov
ljmp
leave
sahf
insl
pop
push
lods
cmp
mov
sbb
test
push
mov
xchg
ljmp
xchg
test
lcall
xorl
mov
push
lahf
jno
lea
dec
pop
push
ds
imul
aas
scas
push
mov
push
loopne
and
sub
bound
sbb
insl
and
mov
sbbl
pop
jg
dec
inc
dec
pop
lret
jecxz
imul
je
cmpsl
xchg
add
or
inc
cmc
and
rolb
stos
mov
add
aas
xor
xchg
aas
decl
xor
and
imul
sbb
insb
out
jp
test
mov
int
add
dec
cmp
das
sti
push
add
mov
xchg
pop
cmp
dec
fcomps
lock
sub
sarb
or
shlb
adc
inc
popf
xchg
stos
inc
insb
xchg
sub
inc
addb
push
mov
jle
lcall
icebp
jl
rol
add
stos
xchg
bound
lcall
stc
cmp
pusha
sub
das
jecxz
ds
push
pop
out
cmp
ja
cltd
push
add
sbb
js
bound
fwait
push
mov
mov
pop
aam
ret
pop
je
pusha
push
loop
loop
inc
xchg
jnp
jnp
sti
xchg
repz
add
adc
xor
leave
and
stos
test
xchg
mov
cmp
jbe
imull
push
pop
jg
dec
add
repz
mov
loopne
push
dec
add
repnz
imul
cld
adc
add
and
arpl
mov
mov
adc
sbb
push
aaa
or
dec
mov
inc
add
sub
xchg
push
in
popf
jl
xchg
xlat
inc
sbb
jg
and
xchg
pop
or
popa
cmp
fadds
pusha
xor
pop
lret
and
pop
xor
add
out
xlat
aaa
jns
out
dec
push
inc
out
jg
pop
mov
mov
pop
pop
inc
or
mov
sub
jmp
mov
subb
jmp
inc
out
bound
mov
mov
mov
pop
dec
push
into
jae
in
xor
push
dec
aam
aam
mov
and
in
sbb
xchg
jp
add
lock
repz
mov
jp
dec
adc
sub
out
cltd
dec
stc
sub
push
xor
sub
xchg
dec
dec
popf
test
and
jb
out
enter
ret
ret
inc
push
dec
xchg
pop
aad
pop
outsb
fcomps
jmp
add
out
xchg
and
fsubrp
insb
mov
in
dec
test
and
or
jnp
sbb
pop
call
and
aaa
mov
ljmp
mov
lret
sub
dec
in
mov
leave
and
inc
inc
and
movsb
jg
push
fcmove
shlb
sbb
popf
cmp
xor
lds
ret
ret
lock
mov
imul
push
add
mov
sahf
adc
adc
bound
push
psllw
mov
sysexit
push
push
sahf
inc
shrl
lods
fimull
cmp
fisttpl
lds
sub
jno
add
nop
inc
jmp
pop
in
pop
scas
sbb
add
pushf
xor
jmp
sbbb
pop
adc
jne
adcb
test
sub
pop
lds
fs
repz
mov
xlat
jnp
outsl
pop
sub
mov
xchg
add
jne
dec
pop
mov
mov
pop
je
cmpsl
add
into
shl
cmc
mov
push
in
pop
inc
pop
ds
push
cmp
pop
push
and
mov
dec
repz
and
cmp
xor
fimull
push
pop
repz
fistl
sub
test
roll
sub
in
sub
mov
ljmpw
popf
int
das
cmp
adc
popa
and
add
inc
out
outsb
push
js
repz
les
xchg
mov
or
cmp
int3
sbb
decb
sub
imul
or
mov
fidivl
xor
mov
push
push
push
into
ljmp
aas
aaa
xor
icebp
fs
and
iret
sub
mov
repz
lret
aas
mov
pop
bound
jmp
or
xchg
les
loopne
sbb
push
mov
mov
insb
js
lods
pop
and
mov
dec
into
cmpl
aam
cmp
mov
pushl
jb
clc
pop
xchg
fstl
in
popa
cmpps
dec
hlt
mov
call
jb
iret
or
pop
frstor
adc
cmp
push
icebp
outsb
test
cmp
je
mov
rcrl
push
je
mov
mov
rolb
pop
hlt
sbb
mov
cwtl
cwtl
dec
popf
hlt
mov
or
xchg
fsubl
cmp
lea
adc
and
pop
push
aam
inc
fildl
loop
sub
mov
psadbw
jp
lods
imul
popf
or
js
push
fstps
add
cmc
das
adc
cmp
lcall
jnp
add
push
xlat
xor
sub
sub
and
sbb
adc
xchg
inc
leave
cmp
nop
mov
aam
mov
das
xchg
adc
xchg
and
mov
loop
pop
push
int
imul
shrl
mov
imul
xchg
sahf
icebp
or
fsubrs
pop
cli
xor
ret
into
pop
xchg
sub
fisubl
repz
inc
lret
xchg
out
dec
int
push
xchg
fcompl
fcoml
pop
or
jp
ret
int
and
stos
and
inc
cli
cltd
push
fdiv
lea
stos
lods
xor
pop
push
negb
fisubs
xchg
jne
xchg
cmpsl
xor
hlt
sub
xchg
adc
pop
je
pop
int
fisttpl
pop
cld
jno
inc
ss
mov
inc
pop
mov
iret
and
ds
cwtl
xor
out
inc
gs
cmp
cltd
add
out
xchg
cmp
cmp
movsb
movsb
sbb
jl
lds
push
ret
sbb
push
mov
adc
adc
sub
pop
dec
cs
addb
jge
call
pusha
sbb
insl
mov
gs
decb
sub
iret
dec
or
sbb
cwtl
push
push
jne
ljmp
sbb
daa
jle
push
mov
xchg
xchg
shl
pusha
popf
sbb
addl
mov
rcrl
shl
jnp
jp
dec
jl
or
lcall
insb
push
add
or
das
cmp
cmpsl
xchg
sub
adc
sbb
xor
pop
jbe
test
jae
cmp
cmp
mov
pop
mov
and
dec
push
pop
push
loopne
sbb
xor
jmp
fnop
mov
push
mov
sahf
lcall
popf
push
push
in
push
inc
inc
pop
mov
mov
or
sub
rep
fcomip
in
loope
in
dec
int
aad
in
inc
dec
mov
filds
imul
sub
fs
iret
scas
test
outsb
mov
pusha
mov
rol
inc
ja
aas
pop
dec
out
xorb
decl
jge
add
in
dec
push
dec
movsl
in
je
dec
mov
outsl
dec
in
mov
mov
cld
jae
ret
fcomip
fcoml
mov
mov
lods
int
js
dec
sbb
mov
popa
fdivrs
push
ljmp
int
sub
das
scas
dec
hlt
sub
jae
or
pop
std
sub
scas
xlat
lcall
inc
cwtl
mov
mov
jecxz
push
test
lcall
aaa
adc
nop
add
add
lcall
test
lods
xchg
incb
push
cmp
nop
sub
add
mov
dec
ficompl
mov
lods
std
inc
roll
pop
loope
insb
testl
sub
add
cmp
roll
sub
add
repnz
aam
cmp
cld
jg
into
mov
jo
push
jmp
inc
mov
cmpsl
out
pop
xor
inc
mov
aad
xor
fisubl
fsubrs
movsl
pop
pop
mov
jmp
or
mov
add
add
stc
fdivl
jb
xchg
cmpsb
lock
flds
dec
dec
xchg
rcrl
sub
dec
cli
in
dec
pop
cmp
lock
cltd
insl
in
xor
les
push
mov
xchg
mov
fsub
mov
lahf
adc
mov
xor
jecxz
call
lea
xor
dec
dec
scas
ds
dec
scas
xor
mov
jb
loopne
iret
xchg
jmp
jmp
fimull
sbb
femms
in
or
lahf
call
hlt
cmp
push
scas
outsl
sbb
rcll
es
cmp
sbb
sbb
addr16
test
mov
lock
pop
sahf
scas
xor
sbbb
jle
popa
sub
int
lret
mov
jae
push
int
jb
xchg
icebp
adc
std
retw
int3
pop
mov
in
pop
mov
sti
cmp
mov
rorb
push
mov
js
mov
cltd
cmpsb
dec
aam
sub
mov
push
scas
jno
jns
aam
and
arpl
stc
or
call
das
imul
or
adc
mov
fidivrl
xlat
cmp
pop
sub
movsl
jae,pn
lcall
mov
xor
mov
fnsave
fwait
inc
out
cmpsl
dec
push
in
cltd
mov
lds
or
mov
fst
push
clc
rcl
sub
mov
aam
out
pushf
jns
push
pop
mov
adc
in
clc
fdivl
xor
sub
sub
ds
cmpsl
pop
jne
fisttpll
xchg
in
icebp
add
sahf
sub
dec
loop
cmpsb
xor
in
stos
and
cmp
cmp
pop
lods
cmp
mov
scas
push
push
cltd
pop
ret
mov
mov
fsubrs
aad
add
jbe
fidivs
push
push
roll
pop
mov
dec
jbe
call
xlat
push
adc
cltd
jge
inc
pop
mov
cmpsl
leave
cmpsl
std
xchg
fdivrs
sbb
sarb
cmp
add
jecxz
and
lcall
and
mov
dec
lock
stos
dec
fists
mov
jb
mov
adc
scas
cmp
shrl
push
sarl
dec
jl
lret
xchg
jae
ret
cmp
jg
call
out
rcl
adc
mov
sub
sub
xlat
ds
jmp
or
je
xor
mov
push
in
mov
jno
jg
lcall
sarb
aaa
lcall
adc
pop
sbb
cld
cs
ficomps
test
shll
fisubrs
push
in
lret
rclb
shlb
popa
add
sbb
mov
adc
mov
lea
insl
jnp
sbb
inc
inc
xchg
in
test
mov
or
add
loopne
ror
xor
cmp
mull
adc
mov
lret
cmp
pop
xor
mov
repnz
mov
arpl
aaa
jle
movsb
repz
loopne
pop
push
lock
fsubs
mov
mov
loope
lret
dec
and
leave
mov
mov
loope
xor
mov
jg
mov
inc
outsl
cmp
mov
jmp
mov
mov
in
sub
xchg
mov
enter
addl
clc
mov
pop
inc
in
arpl
sub
out
nop
andb
cmp
xlat
mov
push
addr16
mov
and
and
shrb
div
mov
cs
jecxz
arpl
divl
xor
sbb
imul
or
jle
or
fists
adc
push
mov
jnp
and
movl
adcl
push
push
mov
fnstcw
jno
push
stos
movsb
dec
inc
xlat
inc
mov
sti
daa
in
test
aaa
stc
lea
sti
xchg
add
pop
lock
sub
in
jb
cmc
dec
cli
fwait
sub
adc
scas
inc
jge
adc
popa
std
int3
mov
mov
add
push
int
in
fimull
loope
test
sbb
iret
iret
add
push
in
push
leave
xor
or
pop
pusha
add
xchg
call
xchg
jno
xor
in
out
inc
mov
fiaddl
xchg
jae
mov
imul
dec
pop
shl
pop
ficomps
movsb
mov
rorb
mov
mov
push
je
cmpsb
loop
mov
movsb
out
push
arpl
movsb
popa
bnd
scas
fsubrl
inc
popa
mov
cmc
faddp
push
ficomps
insb
add
cmp
lock
bound
dec
nop
sub
mov
sbb
out
mov
lahf
or
jp
ljmp
sbb
fimull
xchg
lock
pop
xor
out
mov
mov
mov
jns
inc
iret
add
fs
xchg
out
testl
lret
rol
sub
push
rcrl
cld
xor
push
ret
cmp
xchg
push
and
mov
xor
pop
mov
daa
mov
outsl
call
mov
shll
push
mov
cmpb
sub
inc
push
insl
ret
adc
add
pop
ds
xor
cmpsl
rclb
int
mov
leave
sarl
cmp
add
mov
mov
jno
lret
lret
dec
jge
popf
xor
adc
scas
fwait
int3
mov
adc
lods
adcl
aaa
jo
xor
fnstcw
pop
push
and
jl
cltd
jge
adc
sahf
pop
mov
push
and
cmpl
xor
fwait
mov
mov
andb
notb
aas
clc
xorb
xor
inc
neg
xchg
fucomp
and
sbb
ljmp
gs
shll
adcb
insl
xchg
bound
mov
out
aas
inc
loopne
fistl
pop
imul
ret
xchg
int
mov
stos
pop
mov
je
add
add
mov
xchg
data16
xchg
ljmp
cltd
jle
or
ficoms
shrl
adc
add
jge
testl
mov
push
pop
hlt
mov
jb
movsl
jecxz
imul
xor
cs
add
jg
xor
pusha
loopne
aas
idivb
stos
fnstcw
rorb
xchg
imul
push
adc
mov
adc
adc
fadd
stos
xchg
xchg
sub
insl
in
loopne
pop
cs
sbb
aas
and
ret
idivb
bound
jg
pop
mov
mov
ret
xor
shrl
call
mov
mov
cmp
cld
ds
adc
xchg
jae
outsl
test
or
push
gs
push
sub
jo
cli
or
ret
int
push
clc
push
cmc
and
out
sub
mov
out
sub
push
push
les
push
cmpb
inc
into
inc
into
call
fidivrl
push
mov
dec
fnstenv
push
and
dec
mov
outsl
sbbl
dec
in
leave
pop
pop
cmp
mov
iret
movsl
movl
lock
in
out
mov
aas
mov
shlb
xchg
xorb
shlb
stos
aad
mov
fistpll
xchg
xchg
rcl
in
mov
imul
rcrb
cmp
sbb
pop
ficomps
ds
shl
imul
xor
ljmp
jbe
push
mov
loope
nop
pop
bnd
lahf
daa
mov
mov
leave
mov
xlat
mov
aad
cs
push
or
mov
inc
sub
pop
pop
push
shll
inc
rcrl
pusha
icebp
or
out
and
mov
xlat
sarb
std
popf
mov
or
bt
mov
dec
mov
jp
push
or
jge
sbb
xchg
daa
loope
aas
dec
xchg
mov
cli
jnp
loope
dec
sbb
fldt
movsb
adc
test
push
mov
xor
shll
jge
inc
lret
fists
stos
adc
shlb
nop
adc
jl
xchg
jns
dec
lret
jge
or
fs
pop
dec
enter
jmp
int3
cmp
dec
sub
pushf
push
cmc
out
sahf
xor
cwtl
das
jo
dec
popa
out
sub
mov
jle
xchg
movsl
mov
in
lcall
xchg
cmpsl
popa
cmp
dec
rolb
test
jno
sbbb
add
xor
rorl
pop
adc
mov
mov
mov
inc
rolb
sub
sahf
xorl
push
inc
decl
scas
or
das
mov
inc
push
ds
imul
push
cmpsl
mov
cmp
adc
out
lret
xlat
cmp
or
push
sbb
mov
rclb
mov
mov
mov
out
dec
sarl
and
inc
loope
or
loopne
repz
aad
cmp
popf
into
xchg
xlat
sbb
and
push
jbe
jecxz
xchg
xchg
cs
cmp
xor
dec
loop
add
pop
mov
pop
adc
rcll
loope
mov
call
enter
jno
push
test
push
cmp
and
xor
jmp
add
lret
rorl
icebp
ret
popf
adc
mov
andl
cld
jnp
inc
sti
test
xor
test
add
xor
bound
sbb
insl
jno
or
gs
ret
cltd
jmp
sub
add
mov
or
xchg
hlt
mov
dec
mov
xor
aas
dec
push
lds
pop
add
mov
mov
or
xchg
mov
lods
scas
xchg
or
stc
ss
sbb
in
fs
add
js
sbb
repz
cmp
xchg
xchg
stos
cmp
xchg
mov
jmp
in
xor
jecxz
add
cs
in
das
cmc
xchg
addr16
minss
mov
movsb
add
xchg
push
js
clc
adc
pop
push
sub
jbe
sbbl
cltd
or
sub
push
push
push
mov
daa
dec
dec
sbb
cmp
lods
jns
cwtl
aad
lret
jp
jge
das
mov
test
jp
dec
push
iret
lods
sarb
sbb
xor
mov
repnz
ja
jne
jmp
inc
mov
outsb
leave
pop
divb
lret
jbe
xor
or
mov
call
jl
cmp
mov
stc
jmp
push
sub
mov
pop
mov
shl
cmp
sbb
sub
test
adc
push
sub
je
daa
lahf
lods
jb
inc
inc
sub
push
movsl
mov
subl
add
fildl
xor
mov
les
mov
mov
sub
cmp
fistl
sbb
sar
aaa
stos
push
dec
jge
cmpb
cs
fsubrs
sub
nop
add
push
inc
shr
jbe
repnz
hlt
mov
cli
xlat
idivl
mov
test
jae
idivl
stos
inc
or
xor
dec
mov
push
sbb
or
inc
mov
stc
test
shr
addl
addr16
jnp
sbb
fbstp
dec
push
pop
cmpsl
stos
std
or
dec
aad
dec
loope
in
pop
out
jl
insb
add
repz
xchg
jmp
into
lret
xlat
fxam
push
adc
sbb
inc
cmp
mov
adc
dec
in
popf
rolb
add
scas
aad
pop
sbb
lret
leave
mov
scas
xchg
pop
dec
js
sbb
cmp
pop
testb
flds
movsb
test
fcoms
lcall
and
popa
pop
cmc
cmpsb
sbb
call
shr
pushw
sahf
jae
in
and
mov
out
add
xchg
xor
xor
and
xchg
push
or
push
add
test
popa
ficompl
xor
sub
orb
enter
pop
insb
mov
call
mov
stos
mov
or
jge
sub
fwait
cmp
lock
cmc
sbb
push
jno
daa
pop
inc
insl
add
ret
pop
movsl
inc
or
sub
jg
call
or
jnp
push
pop
mov
mov
outsl
mov
cmp
cltd
hlt
addr16
mov
or
jne
or
ljmp
dec
xor
jno
lea
lret
sahf
mov
mov
dec
adc
hlt
push
in
inc
enter
mov
ret
push
xchg
push
pop
pushf
aaa
mov
arpl
add
xor
mov
std
inc
out
leave
and
das
rolb
add
roll
mov
stos
adc
mov
data16
ret
mov
add
rolb
cltd
fnstenv
ret
std
and
add
orb
mov
ret
jge
cmp
pop
lret
inc
rorl
bound
fnstcw
adc
dec
ret
pushf
xor
stos
lret
xchg
in
int
dec
call
sub
arpl
add
rcrb
movsl
pop
jb
pop
fs
fs
inc
inc
lret
ds
sub
fcmove
xor
jb
xchg
pop
scas
mov
lcall
dec
scas
cwtl
das
sbb
xor
mov
add
xor
bound
adc
xchg
lret
icebp
in
mov
add
jmp
or
insb
push
add
sarl
scas
mov
inc
xchg
xor
cld
xchg
mov
loopne
push
daa
mov
test
push
pop
mov
sbb
dec
mov
cmp
cmp
cmpsb
rcrl
js
aaa
xchg
mov
imul
add
lods
cmp
lea
sub
jo
sub
fwait
push
jg
or
jno
pop
mov
jecxz
sbb
pop
sbb
dec
daa
pop
jecxz
imul
mov
xor
push
ret
lds
push
jb
mov
and
js
mov
jb
xchg
sub
push
je
adc
gs
lret
or
mov
jecxz
sub
repz
frstor
jl
jmp
dec
fcomip
dec
adc
jne
incb
and
adc
add
xor
inc
add
mov
push
adc
fisubs
iret
out
rorl
das
xor
inc
push
xor
or
pop
mov
inc
adc
jecxz
push
mov
sub
sbb
xchg
sbb
or
ljmp
cs
aaa
pop
bound
mov
mov
lahf
stos
pop
adc
outsb
test
aas
cmp
add
imul
lcall
dec
out
icebp
fwait
xor
call
mov
mov
out
mov
xchg
sbb
mov
jecxz
rolb
insb
jmp
push
xchg
test
stos
and
popa
cmp
sub
xchg
fimull
push
cmpsb
cmp
mov
mov
adc
pushf
das
addr16
inc
stos
mov
lods
sar
cmpsl
mov
dec
in
in
push
mov
out
aam
xlat
cs
inc
push
mov
jle
pop
insl
sti
mov
jle
xchg
jle
test
jp
cwtl
add
adc
aaa
jae
sbb
lds
imul
lret
pop
out
push
imul
xchg
mov
jae
jnp
mov
bound
mov
xchg
test
repz
jg
inc
jae
mov
jbe
jl
lret
mov
cs
sub
mov
cmp
sbb
mov
cmp
insl
loop
dec
mov
mov
mov
sbb
clc
cmp
es
out
push
push
adcl
xor
add
sbb
into
scas
jne
loopne
outsl
daa
inc
cmp
sub
pop
cmpsb
push
ret
andl
mov
ljmp
test
add
mov
xchg
pushf
imulb
push
in
subl
cmc
mov
out
scas
mov
dec
push
pop
insb
imul
ret
mov
pop
sbb
js
sahf
pop
inc
mov
sub
movsb
dec
jecxz
js
dec
imul
scas
inc
ret
rclb
push
imul
pop
cmp
dec
mov
lods
adc
lods
jae
adc
mov
mov
shlb
dec
push
into
add
push
out
dec
movsb
cmp
push
loope
xchg
pop
fstpt
or
sub
adc
cli
adc
aaa
es
pop
pop
cwtl
inc
adc
dec
es
or
push
push
push
loope
inc
leave
cs
mov
popa
ss
inc
test
jne
cmpb
sbb
mov
out
push
sbb
xor
gs
loop
sahf
pop
jecxz
inc
xor
jmp
xchg
out
lods
dec
loope
push
and
sub
dec
icebp
sbb
aas
ds
ss
addr16
push
cmp
je
stc
sarb
mov
out
inc
sub
or
xchg
cmp
or
jp
cwtl
loope
mov
int3
cwtl
dec
pop
out
jg
lcall
and
push
push
adc
jge
pusha
cmp
int
push
std
enter
test
mov
jae
ja
ljmp
push
jne
jl
xchg
ret
xor
xlat
popf
cmpsl
mov
inc
mov
pusha
test
cmpsb
cmp
addr16
int
jmp
cs
push
mov
sub
lods
sbb
movsl
into
inc
leave
pusha
je
and
mov
mov
sub
inc
fisubs
in
fwait
inc
dec
mov
adc
bound
lock
mov
in
ljmp
push
insb
inc
mov
shll
cmp
aad
cli
sti
jbe
minps
inc
rorl
cmp
into
push
lock
icebp
mov
js
fcomps
jns
in
es
cltd
jl
fwait
popa
fmulp
inc
sub
popf
or
pop
mov
mov
push
imul
dec
test
stc
ss
std
mov
and
jmp
fs
pusha
mov
fadd
out
jae
xor
in
xchg
add
sub
dec
and
sti
xor
dec
in
jmp
aaa
xchg
imul
repnz
xor
xchg
xor
popa
sahf
loop
dec
jne
mov
adc
inc
je
adc
xchg
cs
push
xor
fistpll
dec
mov
daa
adc
pop
aaa
mov
and
dec
repz
pop
roll
rol
repz
ds
mov
das
pop
jecxz
mov
sbb
cwtl
sbb
lret
pop
out
sub
mov
adc
fistpll
sub
xchg
fsub
js
mov
push
xchg
repnz
mov
cmpsl
adc
push
mov
or
xor
add
jmp
dec
add
mov
and
jge
fcompl
dec
hlt
sub
mov
add
je
jg
adcb
loop
mov
mov
inc
js
loope
xchg
sbb
movsl
ret
xchg
adc
movsl
pushf
js
push
out
jl
cld
pop
popf
xor
mov
mov
xor
inc
mov
xchg
ja
outsb
add
in
lea
or
dec
ljmp
jne
cmp
fs
sub
jmp
je
and
bound
add
dec
sarb
pop
mov
fs
pop
sbb
stos
mov
adc
jne
movq
pop
xor
jne
arpl
xchg
xchg
divl
pop
loope
fcmovb
pop
int3
scas
clc
sub
pop
cmp
bound
dec
cmp
mov
nop
mov
in
les
sub
fisubrl
adc
inc
mov
jmp
leave
cld
sub
int3
xorb
cmp
push
roll
test
mov
push
sarb
mov
mov
lds
push
loop
lds
dec
pop
mov
test
xor
mov
fs
xor
xor
or
movsl
fsts
dec
dec
imul
mov
mov
orb
xor
out
jne
dec
sbb
outsl
mov
cmp
cmp
lock
cli
test
xchg
cltd
mov
adc
pop
pop
cmp
jg
cs
pushf
arpl
std
sbb
cmp
call
cltd
in
mov
jmp
mov
jnp
mov
mov
add
cld
inc
cmpsb
negl
xor
shr
xor
pop
jge
dec
test
pop
fwait
xlat
je
pop
cmpsl
jg
sub
pusha
test
or
push
jnp
push
or
xlat
push
movsl
in
adcb
lea
cmpsb
in
dec
mov
adc
repz
insb
inc
out
notb
stos
out
add
fld
pop
mov
cli
dec
lahf
sub
clc
adc
out
hlt
into
push
push
pop
js
mov
leave
pop
sub
pop
pop
cmp
addr16
xchg
inc
jg
hlt
repnz
lock
pop
pusha
fcomp
jp
aaa
data16
and
xchg
xchg
inc
mov
int
push
vcvttpd2dqy
inc
stc
gs
mov
mov
idivl
lods
jo
pop
ss
rorl
jg
jbe
adc
test
jecxz
sbb
call
in
loopne
fsubrs
inc
pop
cmp
je
or
lock
out
sarb
lds
enter
add
iret
aam
dec
test
repnz
rol
pop
test
jecxz
xor
jbe
in
push
dec
test
aam
rol
push
cmp
dec
pop
movsl
jne
js
lahf
jbe
mov
arpl
pop
inc
xor
outsl
subl
xchg
hlt
mov
fisubl
shrl
jmp
popa
or
enter
popf
lods
rorb
inc
test
add
pop
xor
es
mov
ljmp
or
jb
stos
jecxz
sbbl
pop
push
fmull
gs
fnsave
test
repz
sbb
xor
pop
mov
inc
mov
dec
ss
icebp
push
adc
lds
pop
mov
clc
push
fwait
push
sti
aaa
mov
pop
mov
inc
sahf
push
xor
pop
pop
int
je
or
xor
lods
pop
subb
aad
mov
repz
cmpsb
ror
push
jnp
nop
lods
and
jae
fwait
int3
push
xchg
into
sub
mov
aam
dec
adc
mov
stos
jo
xor
xchg
outsb
mov
mov
adc
cmp
mov
mov
pop
lods
inc
jns
testl
insl
and
sub
mov
rcl
dec
scas
dec
inc
movsl
pop
push
js
dec
pushf
jge
repnz
mov
dec
cmpsl
notb
xchg
cmpsl
insb
dec
dec
aam
cmp
das
dec
cmp
es
pop
insb
ljmp
xchg
push
or
sbb
pop
or
xchg
imul
adc
out
scas
cld
mov
aaa
out
mov
pop
adc
xor
test
lods
xchg
xchg
sub
loope
add
call
adc
cmpsb
fistpl
ret
mov
pop
lds
stos
pop
pop
mov
adc
in
in
out
cld
inc
int3
fs
sahf
jp
add
xchg
fwait
test
mov
add
mov
and
shl
call
or
push
lret
mov
imul
inc
mov
dec
iret
dec
lods
xchg
fstps
cmp
dec
std
or
popf
test
in
test
ss
jnp
test
sti
je
test
lret
push
rcrb
mov
sti
test
jno
pushf
lret
push
mov
jge
mov
xchg
out
mov
aam
call
icebp
movsl
mov
hlt
push
pop
out
push
push
int3
cmpb
outsl
fcoml
lods
int
mov
enter
scas
mov
xchg
test
cltd
xchg
enter
xchg
push
call
pop
arpl
mov
mov
js
or
add
lcall
fimull
into
outsb
sti
and
sub
dec
fildll
data16
jg
out
mov
into
inc
arpl
mov
test
cmpsl
mov
lods
inc
jae
jl
push
xchg
lret
push
scas
addr16
lret
js
out
fstpl
dec
add
adc
push
lret
jp
or
imulb
enter
cltd
into
lahf
sar
push
jmp
jle
mov
cmpsl
push
out
xlat
mov
mov
cmp
dec
dec
xchg
mov
and
fistpll
lret
push
or
inc
sub
xchg
adc
dec
cld
xor
mov
jnp
movl
js
out
stc
rcrl
xlat
outsl
sub
mov
push
movsl
clc
dec
in
xor
mov
jne
and
sub
add
cwtl
in
mov
jmp
sub
loop
int
cmp
mov
mov
jbe
scas
mov
cmp
dec
jne
fs
xchg
push
mov
sub
test
lds
or
sub
aad
shrb
stos
push
jp
int3
mov
mov
bnd
adc
pusha
test
or
push
ret
cmp
mov
and
cwtl
sbb
xor
mov
mov
daa
sbb
mov
in
lds
pop
loop
insb
adc
popf
push
js
xchg
xchg
sarl
sti
gs
mov
std
push
mov
add
add
jecxz
in
in
dec
dec
movsl
data16
imul
sarl
cmp
dec
push
mov
popf
fstpt
xorl
scas
inc
jne
adc
popf
xchg
mov
arpl
sti
cwtl
lret
pop
adc
or
pop
out
inc
cltd
std
sub
xor
int3
arpl
inc
das
xchg
mov
iret
movsb
mov
mov
pop
and
pop
jo
movsb
sbb
xchg
cmp
xchg
sahf
ss
outsl
dec
adc
sti
push
and
int
fdivrp
clc
jbe
enter
pminub
mov
dec
adc
out
iret
push
and
into
sti
add
sub
test
sahf
inc
jnp
sti
ret
in
sub
pop
sub
dec
loope
int3
xchg
adcb
xor
and
dec
push
movsb
ja
cmp
imul
call
pop
xchg
push
add
cmp
call
adcb
sub
sbbl
imul
lods
add
push
or
and
cwtl
js
sahf
cmp
jecxz
xchg
ret
sbb
int3
bound
repnz
lahf
ss
repnz
pop
bound
lea
cmp
or
imul
lahf
jae
ret
sbb
stc
dec
test
cmc
mov
jnp
out
jl
dec
out
mov
xchg
mov
push
push
shll
inc
int
fbstp
cwtl
mov
inc
xor
fsubl
fildl
dec
sub
loop
repz
xor
shlb
pop
stos
lea
pop
addr16
test
push
jecxz
pop
or
negl
mov
insl
je
mov
std
xchg
xchg
scas
das
aam
movsl
repnz
xchg
repz
xor
inc
ljmp
xor
inc
mov
out
in
sub
jae
mov
jmp
cmp
out
cmpsl
and
outsl
cli
push
in
decb
lcall
lcall
push
sbb
cmpsl
mov
nop
arpl
pop
push
inc
fbstp
into
fsubl
int3
lret
sahf
xor
mov
nop
dec
int
mov
ss
fmull
in
arpl
or
scas
mov
out
push
inc
out
cmp
add
push
xchg
stc
push
shrl
sbb
pcmpgtb
lods
sub
pop
and
push
adc
js
xlat
outsb
mov
sbb
enter
aad
loope
inc
insb
push
pushf
lods
stos
imul
repz
xchg
cltd
popa
les
testb
es
sub
out
mov
js
pop
jg
iret
orb
pop
mov
nop
and
jg
push
mov
cmpsb
lcall
adc
dec
inc
jmp
lea
sub
cmp
stos
shr
mov
mov
daa
hlt
mov
push
out
xchg
outsb
inc
hlt
test
std
push
push
add
inc
dec
push
icebp
testl
cmp
cs
les
xchg
mov
inc
pop
add
or
jnp
cs
sub
fisttpl
sub
mov
test
mulb
inc
dec
or
fdivrl
lods
mov
loopne
push
fisttpl
sub
pushf
push
cmp
pop
movsb
out
pop
cmp
insl
sbb
xchg
pop
pushf
xor
hlt
mov
mov
and
cmpsb
inc
ja
sbb
push
aas
mov
leave
jl
rol
sti
lods
pushf
xor
bound
xchg
sahf
lret
mov
xlat
adc
xchg
and
mov
fldenv
xor
testl
or
mov
adc
lea
sti
xchg
and
push
insl
mov
in
add
daa
mov
repz
ret
cli
xorl
jne
dec
loop
push
nop
gs
lock
adc
sub
lahf
cmp
add
cs
push
fisubs
iret
sar
inc
mov
aas
into
mov
popf
xor
fsubrs
push
mov
jae
mov
sbb
adc
mov
cmc
mov
xor
in
push
fidivl
clc
dec
sbbl
imul
sbb
inc
test
icebp
out
xchg
add
out
int
loope
xor
push
fs
mov
cmp
ss
pop
adc
push
xchg
push
jg
frstor
sbb
inc
stos
add
loopne
sub
test
and
lds
jno
sahf
sbb
arpl
mov
loop
leave
jmp
mov
and
xchg
xchg
cmp
xor
pushf
cli
and
pop
mov
mov
cmp
repnz
mov
hlt
arpl
xor
imull
popl
inc
xor
xor
daa
test
jns
pusha
and
test
push
out
inc
and
bound
mov
jnp
ljmp
fdivrs
mov
fcmove
pop
rorl
mov
xchg
out
and
fucomip
sbb
out
adc
cmp
xchg
ds
test
clc
push
pop
add
sbb
adc
icebp
cld
xchg
push
dec
push
pop
mov
push
sbb
outsb
push
fs
xor
arpl
jmp
inc
and
jno
pop
repz
add
cltd
aad
mov
stc
xchg
lret
push
cmp
add
je
lahf
cs
test
push
pop
inc
jmp
jo
aaa
push
pusha
push
or
out
rolb
or
stc
pop
rol
lahf
cld
push
sbb
pop
repnz
rcr
push
mov
and
mov
mov
scas
jne
add
adc
dec
xorb
out
scas
mov
add
add
xchg
pop
inc
inc
insl
cld
sbb
inc
or
dec
mov
mov
push
scas
cmp
loopne
std
mov
gs
xchg
pop
adc
test
jg
test
in
adc
xchg
arpl
int3
arpl
jge
sub
sti
ret
jmp
fstps
mov
bound
pop
hlt
cmp
lods
xchg
movsb
rorl
jmp
pop
xchg
call
adc
xchg
mov
into
cmp
adc
popf
test
enter
test
movups
or
push
pop
ret
loopne
mov
jbe
ret
mov
ss
dec
inc
xlat
cmp
bound
push
fsubr
dec
pop
or
add
inc
or
or
adcl
ret
inc
addl
addr16
mov
inc
sbb
shlb
ret
into
cld
jae
xlat
mov
mov
fisttps
inc
jmp
ja
xor
sbb
mov
adc
lret
int3
adc
inc
pop
xchg
and
add
sub
xchg
nop
cld
or
jnp,pt
pop
ret
inc
test
ds
sbb
cmpsl
mov
loop
je
or
xchg
sub
sub
scas
jg
out
pop
sbb
das
push
ljmp
mov
test
lret
movsl
cmp
mov
ds
shlb
push
cmpsb
imull
mov
in
add
out
aad
cmp
aad
mov
mov
into
outsl
sub
scas
sub
data16
sbb
jp
pop
pop
movsl
lds
add
push
mov
lahf
icebp
push
std
cmpb
or
roll
dec
aad
mov
xchg
xchg
pop
lock
hlt
push
ljmp
popa
jns
push
int3
loope
adc
inc
ficompl
out
push
dec
jg
and
lds
notb
dec
pop
sahf
xor
out
cmpsb
adc
cmp
ss
movsl
adc
fistps
loope,pt
lahf
add
out
inc
fsubl
ret
jne
ret
loopne
lds
movups
and
loope
cmpsl
movsb
mov
sar
je
mov
push
rcl
or
mov
xlat
or
xchg
test
inc
xor
fcoml
xor
insb
popf
setl
xor
out
aaa
pop
adc
movsb
icebp
shlb
xchg
test
movsb
insb
rcr
out
xor
inc
leave
fxch
and
daa
dec
lahf
xor
sub
inc
out
popf
bound
mov
xor
pop
add
xchg
sub
adc
pop
das
lahf
in
mov
aam
mov
and
or
inc
insl
dec
adc
mov
loope
sbbb
push
lahf
divl
or
imul
pop
adc
test
and
pop
ret
loope
xor
adcl
xchg
cmp
lahf
pop
jnp
ret
aas
pop
je
mov
testl
push
shlb
add
sbb
inc
xchg
mov
mov
repz
cmp
mov
in
das
cmp
lods
ljmp
fldl
push
repz
incl
adc
jl
lahf
inc
fsubl
or
cmpl
fs
fdiv
lock
movsl
mulb
in
inc
popf
mov
mov
mov
sub
inc
fstps
xlat
or
test
adc
loop
or
imul
mov
mov
add
aaa
icebp
jns
jp
add
bound
and
lods
cltd
insb
push
ljmp
lret
shlb
daa
or
xor
inc
pop
lds
lahf
stc
ror
insb
xchg
cmpsl
sbbb
icebp
adc
cmp
test
call
inc
pop
repnz
adcb
adc
frstor
and
into
out
aas
dec
or
pop
jns
xchg
sub
add
addb
mov
mov
pop
hlt
mov
add
pop
push
mov
xchg
push
testl
jno
lcall
cmpsl
push
mov
sbb
pop
popf
push
cmp
jno
cmc
mov
pop
fisubl
xchg
pop
push
jns
sub
mov
mov
test
fcom
mov
loopne
stos
cmc
push
push
jmp
mov
dec
add
and
push
sub
dec
add
enter
ret
fs
fistl
aas
adc
dec
xchg
ss
out
mov
adc
in
xchg
scas
and
shl
outsl
es
xchg
insb
xor
rcrl
pop
xchg
xchg
xor
lea
mov
inc
fcomps
ds
pcmpgtd
out
rcrb
ljmp
fsubs
add
push
jo
andl
pop
sub
jo
pop
rcr
jecxz
adc
cmpsl
hlt
cmp
adc
mov
mov
push
out
cmp
dec
adc
mov
arpl
ss
lcall
addr16
mov
enter
dec
test
jb
push
jb
sbb
popa
dec
xor
inc
dec
lock
and
xchg
mov
outsb
jl
adc
and
xchg
jp
jp
cmpsb
loop
mov
pop
sub
jge
or
jp
cmpsb
stos
lret
in
je
mov
sbb
jae
and
repnz
loop
sbb
adc
addr16
pop
dec
sarl
xchg
lret
pushf
das
push
adc
and
pop
sub
fsubrl
adc
lea
in
or
or
sbb
lock
push
scas
ss
push
mov
and
test
inc
push
sub
mov
jns
dec
jb
aas
pop
fcoml
mov
add
cld
cmpsl
jne
pop
pop
adcl
or
ja
and
cmp
mov
enter
repnz
lea
or
cmpsl
jle
inc
lds
push
push
movsl
fwait
xchg
insb
jae
xchg
mov
lds
lods
sbb
insl
adc
inc
aas
xchg
sub
xchg
inc
mov
cli
out
out
push
xchg
jmp
daa
scas
sahf
lret
mov
xlat
mov
mov
arpl
sbb
iret
gs
hlt
jmp
push
mov
mov
mov
lds
cmc
fistpl
into
xor
cs
xor
data16
into
movsb
inc
inc
cmp
test
push
push
sub
or
cmp
mov
dec
fwait
jl
or
cwtl
xor
mov
pop
mov
packsswb
xchg
push
lods
jbe
add
addl
cltd
or
push
xlat
testb
insl
loopne
loop
ret
pop
and
mov
cli
movsl
add
adc
pop
loop
inc
mov
add
mov
outsl
jne
into
in
add
push
cwtl
lods
out
mov
and
sarb
jo
inc
xchg
sub
xor
aad
cmpsb
lods
inc
push
mov
push
ss
xchg
push
sub
ja
pop
cli
sub
ds
xchg
dec
add
test
test
adc
push
xor
inc
xor
repz
dec
fdivl
or
xchg
push
dec
push
and
jne
pop
adc
jnp
in
pop
negb
mov
inc
mov
push
mov
lahf
or
or
shlb
pop
adc
fwait
test
stos
popa
lods
jecxz
mov
fs
in
xchg
cmpsl
mov
mov
aad
xchg
cmp
mov
adc
xchg
fsubrs
xchg
clc
jnp
inc
xchg
movsl
cmpsb
xor
dec
loop
scas
negl
cmp
lret
lahf
pop
aad
pop
pop
jmp
mov
push
adc
jl
sbbb
call
in
or
sbb
out
jno
xlat
and
mov
or
adc
xor
push
fbld
cmp
mov
icebp
stc
pop
cmp
pop
dec
loop
xchg
popf
mov
repz
in
aad
aad
push
and
movsl
sbb
bnd
xchg
add
imul
dec
hlt
mov
cs
ja
test
adc
add
dec
aad
popa
les
shlb
add
push
sbb
sub
iret
xchg
jmp
push
fwait
and
int
push
xchg
out
inc
or
or
shl
mov
loope
cmc
scas
inc
lahf
call
sbbl
jecxz
add
call
adc
leave
add
adc
repnz
hlt
dec
popa
orl
shrl
jecxz
fidivl
dec
test
pop
in
hlt
xchg
in
mov
ficomps
cs
jns
sbb
repnz
ss
popl
loopne
imul
and
faddl
cltd
loopne
lret
nop
sub
in
test
js
xchg
dec
addr16
test
int
in
cmp
cltd
jl
cltd
adc
jmp
addr16
inc
mov
int3
inc
int
out
popa
push
js
shl
repnz
stos
cmp
push
loop
stc
cmp
xor
cmp
out
sbb
and
and
xor
push
xchg
out
push
sbb
push
mov
nop
call
pop
or
clc
clc
or
sub
adc
daa
or
out
clc
pop
adc
scas
fnstsw
sub
test
jl
xor
mov
lret
ds
push
cmp
imulb
aam
xchg
cmpsb
rcrb
mov
pop
sarl
or
cmp
xchg
xchg
setae
mov
ret
js
mov
ss
aad
arpl
stos
ret
mov
test
enter
sub
loop
sbb
mov
fdivl
push
and
rorl
fnstenv
push
xchg
call
pop
xor
cmp
or
shll
stos
andb
es
je
rolb
insb
rorl
into
jo
sbb
mov
faddp
cmp
inc
es
xor
iret
inc
fcomp
jns
movsb
shlb
mov
and
xor
inc
enter
mov
jecxz
cmpb
mov
inc
stc
cwtl
bswap
or
cmp
push
or
scas
add
inc
mov
or
mul
inc
scas
cmp
imul
mov
mov
sarl
int
rolb
pop
mov
mov
loop
inc
fisubl
cld
outsl
test
dec
or
cmp
ds
cmp
cmpsl
test
sub
lds
js
mov
int
in
fcomps
or
std
aaa
jnp
insl
test
das
insl
push
push
sbb
jmp
rcrl
inc
mov
jne
xor
sbb
ds
lds
repnz
cmp
test
mov
scas
mov
xchg
sub
and
std
loop
push
ss
pop
add
or
mov
adc
or
cmpsl
push
sarb
push
test
xor
std
lcall
xchg
sub
fwait
push
testl
inc
das
adc
dec
push
adc
cs
xor
inc
lods
packsswb
lahf
xchg
sub
push
xchg
aas
es
fwait
cld
dec
dec
adc
pcmpeqd
mov
addr16
mov
cmpsl
push
out
stc
sub
or
xchg
dec
adc
pop
add
dec
add
mov
pusha
fcmovnbe
dec
sbbl
icebp
jp
mov
push
pop
push
arpl
ss
jp
inc
mov
pop
push
add
aas
xor
add
mov
cmpsb
adc
outsl
push
jno
mov
or
xchg
sbb
scas
and
or
fsubrl
loopne
mov
jle
loop
repz
dec
ds
cmp
pop
loop
mov
jl
es
out
cmpxchg
repz
xchg
dec
lock
jbe
dec
aaa
mov
push
flds
fisttpll
aas
jg
mov
xchg
mov
mov
out
mov
xchg
cmp
movsl
cld
daa
out
rcrb
insl
ja
mov
out
arpl
ffreep
dec
cmc
aas
stc
push
or
call
lea
mull
add
mov
xchg
cmpsl
pop
add
in
xor
cs
and
popf
hlt
cltd
repz
or
mov
push
xchg
sub
repz
and
dec
add
mov
cltd
xchg
scas
push
sahf
stos
adc
push
cli
inc
xor
call
or
pushf
jns
xchg
into
cmpl
sarb
int3
cmc
mov
mov
call
clc
pop
outsl
adc
iret
cmp
shl
dec
xchg
loop
inc
mov
push
xor
xor
lret
push
sti
mov
push
out
sbb
subl
outsl
icebp
mov
lods
mov
in
test
pop
pop
repz
pop
ror
out
adc
mov
cltd
outsb
lret
add
fisubrl
ret
icebp
mov
add
sub
sub
data16
mov
loopne
outsl
pop
jbe
ds
repz
pop
ds
push
mov
mov
and
fbld
mov
and
std
pop
mov
in
xlat
add
add
cs
lahf
push
loop
and
hlt
sbb
leave
je
push
or
mov
fistpl
out
ss
test
push
cmp
outsb
mov
in
in
sbb
addb
jmp
inc
ljmp
dec
pop
sbb
ss
ret
pop
sahf
and
jp
in
in
inc
pop
adcb
ljmp
xchg
mov
hlt
ja
inc
adc
rorb
mov
pop
fucomip
jns
jp
adc
cmpsl
gs
mov
test
mov
fisubrs
iret
pop
test
loopne
adc
dec
shlb
comiss
cli
dec
shl
inc
pop
dec
in
lock
outsb
std
inc
cmpsl
mov
stc
dec
sahf
imul
repz
sub
repz
xchg
xchg
in
in
cwtl
hlt
push
cmc
sarl
aad
leave
jp
je
pop
jbe
mov
xchg
divl
in
add
add
xchg
andb
outsl
ljmp
pop
mov
loopne
ret
add
push
mov
pop
fs
bound
inc
adc
je
nop
add
sbb
mov
xlat
es
sbbb
loopne
cwtl
sbb
sbb
pop
dec
and
and
sbb
sbb
jl
mov
lret
in
push
std
in
fsubrl
pop
add
call
push
cmp
push
dec
setb
and
daa
xchg
sub
jmp
pop
insb
testb
es
daa
aaa
sbb
dec
in
adc
mov
lds
mov
ja
daa
push
addr16
je
insb
stos
dec
push
das
les
aad
mov
enter
pop
lret
cld
dec
out
pop
andb
fisubrl
xor
mov
adc
ficoml
jle
lods
insb
or
nop
fnstsw
lea
jo
jbe
mov
dec
dec
adcb
push
shll
mov
lods
pop
ret
push
adcb
lret
mov
aas
inc
add
push
cmc
dec
shrl
je
ja
jnp
je
repnz
sbb
das
mov
imul
sbb
jb
shll
jae
stc
cmp
cmp
and
adcb
and
xchg
mov
pop
hlt
fiaddl
test
cmp
or
fldt
int3
iret
cmp
sahf
fwait
ret
ret
cmpsl
and
dec
inc
cmp
idivl
cli
fdivl
lcall
dec
sbb
push
cmpsb
jge
iret
push
das
fs
je
out
lcall
rorb
cmc
stos
inc
insb
iret
sub
ror
sub
repz
jle
sub
stos
gs
fldcw
iret
gs
mov
sbb
pop
into
leave
pop
mov
mov
and
scas
mov
cmp
lret
je
es
push
pop
dec
cmpsb
sti
jnp
sbb
mov
jnp
adc
jp
and
inc
ret
pop
sub
cs
pop
sub
pop
sarb
rcll
rcr
jmp
clc
enter
pop
sahf
ret
outsb
mov
rcrl
or
sub
sub
or
mov
ds
fsts
xchg
mov
enter
movsb
out
push
scas
xchg
mov
out
adc
pop
dec
xor
jecxz
inc
cmpsb
sub
add
ror
andl
pusha
jg
mov
dec
fbstp
mov
xchg
jnp
xchg
stos
in
jmp
mov
jecxz
inc
pop
test
cmp
xor
pop
mov
add
xchg
adc
sbb
ret
sub
insb
sbb
mov
ljmp
fisttpll
cwtl
inc
je
mov
scas
pop
cmp
out
sbb
dec
mov
jbe
jno
push
push
sahf
jmp
ret
ret
adc
push
xchg
or
add
push
adc
out
out
push
loop
push
movsb
xchg
repz
cmp
pop
and
ss
pop
sbb
cli
and
repz
pop
mov
jbe
dec
push
mov
into
xor
mov
and
pop
and
leave
or
xchg
mov
mov
pop
repz
out
mov
bound
dec
fldt
mov
rcrl
adc
adc
movsl
cmp
cmp
sub
ret
cwtl
xlat
xchg
adc
mov
outsl
dec
adc
repnz
out
pushf
xchg
arpl
mov
arpl
sbb
popa
lret
jae
cmpsb
lock
sbb
pop
insl
xor
loop
ds
mov
pop
loop
imul
xchg
cmpsl
xor
push
cmp
data16
mov
push
enter
shl
inc
adc
inc
pop
or
xchg
mov
data16
fwait
xor
faddl
pop
pusha
sub
jb
jmp
push
sbb
lcall
out
push
sbb
les
mov
bound
mov
ret
xchg
mov
jae
sbbb
pop
enter
inc
mov
adc
fsubrs
clc
bound
mov
mov
lret
das
data16
lock
jae
cmp
inc
pop
dec
pop
or
pop
pop
into
in
fdiv
movsl
push
int
pop
repnz
arpl
fists
shl
ljmp
cltd
inc
sarb
push
dec
dec
insl
leave
testl
mov
rcl
rorb
es
mov
xchg
cmpsl
inc
sbb
pushf
mov
std
scas
data16
and
mov
bswap
cmp
jmp
loopne
cld
adc
push
out
jp
addl
aas
pop
lods
mov
mov
inc
loopne
testb
sbb
into
jns
sbb
out
mov
cmpsb
xchg
xchg
jns
push
test
cmp
out
xchg
sub
inc
dec
xlat
sub
or
push
xchg
pop
in
dec
test
pop
lahf
inc
cld
xchg
sub
dec
inc
xor
mov
into
clc
and
fsubl
ror
in
mov
adc
pop
or
mov
push
or
negl
sub
mov
push
imull
xchg
xor
stc
ss
add
mov
addr16
xchg
push
out
shrl
push
jno
push
mov
xchg
xor
adc
lret
aas
lods
mov
shll
jg
jp
inc
test
popf
call
dec
inc
test
dec
jns
aaa
sti
dec
or
cmp
jp
enter
fnstsw
call
pusha
add
mov
pop
les
mov
inc
mov
mov
std
sub
pushf
push
rol
xchg
lret
push
or
push
movsl
fdivrs
es
add
sub
daa
arpl
fisubrs
pop
mov
cs
fidivs
mov
ja
pushl
aad
subps
xchg
addb
idivb
dec
pop
cmp
mov
in
test
dec
push
push
mov
je
mov
add
into
mov
push
push
shl
dec
js
jl
mov
adc
add
adc
add
push
out
sub
xchg
and
ret
mov
insl
scas
add
bound
subl
or
scas
cmp
out
cli
into
pop
jno
inc
lock
lcall
and
jns
subl
or
rclb
push
mov
imul
cli
inc
js
inc
mov
in
or
push
in
leave
outsl
in
xor
sbb
push
add
dec
adc
xor
dec
fsts
lods
in
rorl
imul
popa
enter
xchg
lret
cmc
repz
add
ret
jae
jo
ljmp
outsb
push
xchg
dec
mov
pushl
mov
or
mov
push
fldl
clc
adc
mov
and
or
push
pushf
pop
outsb
sbb
mov
mov
xchg
popa
xor
pop
dec
fadds
push
inc
enter
shrb
xor
into
es
lods
push
adc
lods
mov
inc
push
repz
insl
dec
mov
dec
out
rcr
cltd
outsb
scas
ss
and
icebp
dec
fidivl
pop
mov
xor
xchg
mov
or
xchg
lock
popf
push
into
stos
or
das
xchg
push
inc
cmpsb
fs
testb
repnz
jle
das
fidivrs
cmovne
movsl
inc
fsubrp
adc
and
pop
in
pop
and
push
xor
adc
cmp
adc
ljmp
inc
mov
jp
subb
xchg
addr16
sbb
xor
jle
pop
cli
xchg
rorb
dec
sbb
mov
bound
imul
pop
incl
pop
in
push
cwtl
sub
in
cwtl
jge
int3
in
cmp
out
fisttpll
jbe
ficomps
pop
cmp
sub
mov
pop
cmp
push
dec
rorl
idivb
call
dec
push
cmp
xchg
dec
in
adc
insl
dec
xor
loope
xchg
sub
xor
sbb
pcmpgtw
stc
mov
xlat
adc
stos
jne
mov
pop
xor
mov
mov
fldenv
sbb
inc
adc
mov
je
and
jle
inc
jl
mov
gs
pop
cmp
andl
sbb
sarb
cmp
fldenv
mov
fdivrs
inc
imulb
dec
add
xchg
cmpsl
sub
fwait
push
mov
sub
je
add
sbb
scas
mov
lock
dec
jge
pop
fbld
cmpsl
sub
out
cmp
jno
mulb
pop
add
or
xorl
xchg
push
out
lods
adc
ss
lahf
rep
add
mov
loop
xchg
mov
xor
adc
cmp
cmpsl
lock
loope
xchg
adc
int3
push
and
xlat
ja
jp
movsl
jb
mov
or
sbb
mov
and
mov
out
sub
popa
xor
lret
cltd
push
mov
push
movsl
mov
or
insb
cmp
test
dec
fbstp
add
out
lcall
mov
lock
push
dec
mov
pop
in
mov
adc
sub
add
jne
out
ja
cmp
push
mov
cmp
sbb
icebp
nop
cmp
sbb
and
or
arpl
adc
mov
dec
jecxz
adcl
push
out
orb
inc
xor
sub
and
clc
dec
sbb
mov
repnz
jp
cmp
sbb
dec
das
adc
mov
mov
roll
aam
sbb
out
dec
bound
jno
lahf
nop
dec
xchg
jecxz
adc
xor
lcall
negb
pop
in
add
xor
loopne
rcrb
cmp
imul
aad
or
add
arpl
xchg
aaa
cmp
ljmp
jne
lcall
xor
pop
push
es
adc
into
xchg
cmpsl
incl
fbld
push
inc
mov
cmp
cli
xchg
icebp
sahf
orl
push
mov
mov
jno
jge
sub
pop
inc
lods
cmp
jmp
out
xlat
cmp
sub
push
in
loopne
dec
pop
pop
mov
out
jle
loop
pop
pushf
adc
and
sahf
jle
mov
out
pop
sbbb
test
aad
or
shll
insl
lret
add
in
clc
mov
pushf
push
cmpsl
inc
add
jb
jno
ds
aaa
xchg
mov
xchg
add
ljmp
les
inc
push
mov
je
lret
mov
inc
pop
mov
cmovae
pusha
and
cmpsb
adc
jno
pop
daa
jg
and
inc
mov
test
sbb
out
add
sbb
jno
push
pop
div
enter
sub
sbb
pop
andl
addr16
dec
imul
cs
push
sub
mov
inc
pop
hlt
aam
sti
xor
ss
das
mov
push
test
mov
sbb
imul
ficoml
loop
sbb
jp
and
dec
jle
rclb
and
dec
aad
fsts
inc
sbb
mov
daa
lds
adc
adc
mov
iret
insb
lock
sbb
sbb
in
sub
inc
fnstcw
andl
pushf
xchg
je
fdivp
mov
sahf
clc
mov
inc
add
inc
mov
stos
addr16
inc
jbe
jae
sahf
or
dec
fidivrs
push
movsb
imul
loope
or
add
test
leave
loope
out
lea
lretw
shll
outsb
add
out
mov
inc
sbb
xchg
outsl
sub
movsl
sub
aaa
jg
es
loopne
xlat
cmp
mov
cmpsb
ret
rcl
outsb
mov
bound
mov
out
push
pusha
out
and
jbe
pop
arpl
sub
movsb
popf
mov
iret
push
or
push
xor
jne
fbld
pop
hlt
and
cmp
es
push
test
or
repnz
pop
mov
mov
sub
push
xchg
lods
inc
stc
lret
dec
popa
add
cli
nop
in
mov
dec
aad
dec
les
stc
lods
add
pop
pop
mov
pop
in
cmp
cmp
fstps
into
cmpsl
inc
adc
into
jne
jns
insl
test
aad
push
leave
cmp
adcb
lcall
jg
pop
test
dec
rorl
mov
or
add
and
bnd
imul
lds
cmp
or
cmp
push
lods
adc
orl
xlat
cmpl
mov
pop
pop
push
cmp
pop
test
sub
lods
ljmp
cmpsl
sub
mov
mov
fidivs
pop
inc
or
fisubl
rcrl
inc
sub
mov
sub
adc
cld
outsl
dec
push
clc
or
xor
cmpsb
test
inc
pusha
insl
pushf
loopne
mov
mov
movsl
cmp
add
into
sub
push
mov
imul
push
out
call
bound
fmul
pop
call
pop
out
bound
mov
or
test
mov
rorl
adc
jns
testl
cmp
test
shrb
stos
lods
adc
xor
iret
cltd
cmp
sub
out
mov
inc
std
mov
cmp
jns
or
mov
fwait
pop
xchg
cs
lods
in
outsb
mov
ljmp
js
xor
rcll
cmp
cs
fs
mov
pop
inc
mov
or
jecxz
dec
push
and
push
sbb
mov
push
sbb
addr16
pop
sub
adc
dec
add
sti
mov
mov
jg
bound
mov
inc
adc
adc
xchg
sub
pop
mov
ret
mov
mov
les
shr
add
int3
int3
femms
test
mov
mov
mov
std
sub
inc
mov
aas
and
sbb
jbe
mov
nop
adc
cld
push
nop
push
mov
pop
jae
pushf
cli
mov
mov
or
mov
push
imul
lret
pop
pushf
ret
xchg
jecxz
xchg
mov
cmp
cmp
mov
iret
mov
shrl
lret
outsl
jmp
pop
sbb
scas
lret
mov
hlt
js
jnp
mov
not
jl
xchg
scas
cmc
xchg
fs
adc
aas
movsb
adc
setnp
dec
hlt
ja
inc
imul
dec
loop
rclb
cmc
push
push
jmp
push
sub
xchg
scas
insb
dec
push
inc
inc
jle
into
call
xor
repnz
lds
xchg
pop
scas
adc
sub
mov
enter
ret
data16
inc
mov
shll
dec
aam
mov
popa
lods
push
jnp
add
dec
jb
imul
out
jo
pop
pop
test
leave
pushf
loop
xchg
cmpsl
mov
xchg
inc
shr
dec
lock
fs
repnz
lods
or
out
das
addb
lods
pop
out
or
dec
push
mov
rcr
jp
add
cld
adc
cmp
adc
lcall
orl
xchg
dec
push
mov
test
es
adc
sbbb
pop
lods
add
fcomip
and
shlb
jmp
xchg
fnstcw
sahf
fldenv
shlb
aam
lods
xor
cwtl
aas
push
adcb
out
icebp
scas
imul
out
lods
loop
inc
popf
inc
repz
jecxz
call
cmc
cmp
push
fsub
dec
sbb
das
add
or
outsb
lds
add
mov
xlat
push
push
cmpsb
push
pop
xor
test
xor
jge
xor
jg
push
aad
adc
mov
montmul
cmpsb
xchg
lods
xchg
stos
sbb
mov
ds
daa
jbe
stos
in
aam
adc
cmp
nop
ljmp
inc
fstl
cmpsl
mov
cmpb
xor
in
dec
hlt
xchg
push
inc
movsl
cmp
push
dec
xchg
or
test
ja
sub
sti
sbb
xor
and
jo
sub
xchg
jl
push
xchg
fmull
in
in
dec
repz
aas
cmp
mov
shl
mov
shrb
cs
shl
or
in
lret
jle
jb
imul
add
add
je
mov
push
icebp
mov
add
and
xor
cmpsl
mov
pushf
pop
push
test
rclw
insb
adc
mov
mov
mov
notl
push
sub
jge
or
jl
mov
test
jnp
sbb
or
mov
popa
xor
outsl
scas
inc
fildl
loope
cld
adc
insl
jbe
dec
mov
jo
insl
push
mov
jmp
mov
movsl
pop
push
test
or
push
sbb
fmull
fwait
and
xor
in
push
xor
popa
xor
sub
push
pop
jae
dec
movsl
xchg
xchg
ds
test
push
in
dec
les
push
subl
or
movsl
out
xchg
jnp
fnsave
je
pop
dec
iret
in
ss
push
aam
dec
mov
push
int3
shrl
mov
jmp
xor
rcl
pop
mov
jp
inc
cli
lret
sbb
pop
inc
inc
popa
jnp
mov
lock
sbb
loopne
cmp
lahf
jns
repnz
popl
aam
daa
jmp
jp
sbbl
lods
add
into
mov
in
dec
add
xor
mov
sbb
pmaxub
repz
jl
add
sbb
out
jecxz
jmp
imul
dec
pop
ret
nop
push
push
ljmp
jno
xchg
ljmp
xor
lods
mov
jecxz
push
ljmp
mov
push
daa
xchg
adc
xchg
ljmp
push
mov
data16
cmp
push
fxch
adcb
pusha
fninit
inc
lahf
jb
aam
fcompl
je
imul
insl
rclb
push
push
push
xor
xchg
add
int
and
lret
ja
idivb
sbb
lcall
xor
xchg
pusha
ss
sub
mov
ss
xchg
add
roll
test
je
aad
mov
insb
iret
push
or
pop
cmp
xor
les
add
cltd
icebp
pop
movsl
test
fimuls
stos
mov
pop
push
sbb
push
mov
lock
aad
in
pop
imul
rcr
and
mov
orl
push
jmp
mov
adc
testb
adc
dec
clc
cwtl
mov
mov
into
or
mov
xchg
dec
xchg
incl
fs
push
xchg
pop
je
dec
sbb
insb
push
or
cmp
sahf
add
mov
mov
cmp
xlat
pusha
test
sbb
daa
mov
jo
rcll
fmul
daa
int
or
jo
andb
aaa
adc
xchg
xor
pushl
fldcw
enter
cmp
jmp
fadds
jl
pop
in
call
fimuls
mov
fs
pusha
xchg
add
es
xor
dec
rcll
mov
mov
pop
cmpsb
mov
sub
sbb
xor
or
add
xor
push
mov
and
lcall
ror
and
jo
inc
cwtl
or
nop
inc
dec
inc
ljmp
xor
xchg
inc
and
andnps
cmp
faddl
imulb
and
leave
enter
mov
jl
shll
incb
enter
into
data16
frstor
outsb
cwtl
xor
cld
mov
faddl
sbb
xchg
aaa
add
fcomi
mov
lcall
movsl
cmp
mov
add
push
arpl
dec
mov
aad
and
repnz
iret
lahf
rclb
arpl
inc
loop
out
leave
lods
jo
outsb
loope
fsin
mov
or
imul
icebp
cmpsb
xchg
das
jno
fsubl
inc
fistpl
rep
jnp
inc
leave
ss
fdivrs
dec
mov
sbb
dec
in
mov
or
fcoms
hlt
fildll
jg
add
jb
push
mov
sub
jmp
fwait
stos
xchg
jecxz
ss
push
jns
mov
sti
cmp
mov
add
std
adc
negl
sbbb
jns
add
jmp
xchg
repz
cli
sub
pop
ret
gs
js
dec
sti
dec
mov
lea
subl
inc
mov
dec
aad
nop
pop
lods
orb
movsb
dec
clc
push
movsl
cmp
or
add
mov
jmp
jbe,pn
dec
inc
push
inc
pop
dec
pushf
add
aas
dec
imull
in
shl
push
push
daa
mov
push
ficoms
lods
adc
lods
mov
lahf
stc
stc
shll
push
test
daa
mov
xor
les
sbb
jmp
push
cs
inc
sbb
add
jmp
mov
push
js
stos
mov
mov
lss
in
mov
test
add
iret
enter
jo
lcall
sub
jno
movsl
call
or
repnz
xchg
rcrl
push
mov
cmp
cwtl
pop
push
lahf
sub
mov
sbb
outsl
sbb
cmp
mov
test
lret
mov
inc
add
jae
fldcw
xchg
adc
cwtl
adcb
jge
add
fldl
call
shlb
cs
lods
mov
js
fwait
pop
xchg
jge
xor
cmp
pop
out
testl
loop
inc
cld
xchg
popf
push
je
imul
inc
iret
xor
subl
jge
sub
xor
in
pop
fldenv
push
out
aas
jl
mov
sub
bound
push
in
mov
jno
xchg
ret
clc
sub
mov
mov
sbb
cmc
push
imul
lahf
mov
scas
inc
cld
arpl
mov
sbb
test
rolb
xor
fisttpll
in
inc
dec
xor
push
jmp
mov
jge
lock
sub
movl
mov
pushf
movsb
cmp
popf
lods
push
shr
mov
fyl2x
dec
sub
cmp
out
ja
pop
pop
push
lods
inc
dec
xchg
lock
xor
add
in
inc
push
addr16
popa
mov
dec
jp
fisubrl
ds
xchg
sbb
mov
sbb
cs
xchg
cmp
xor
daa
lea
test
mov
sbb
sbb
popa
nop
orb
ret
mov
and
imul
xchg
mov
nop
mov
lods
mov
ficoms
xor
cmp
pop
pop
cmp
aaa
frstor
cmp
cmp
mov
inc
test
aad
adc
mov
pop
mov
cmpsl
outsl
or
inc
fucomi
fadds
sub
cmp
dec
cmp
mov
enter
cmc
cmc
xchg
mov
es
inc
fcomp
into
packuswb
add
push
sub
xorl
push
out
pusha
push
mov
xor
popf
ret
bound
test
mov
push
and
mov
ret
add
insl
add
push
std
adc
xchg
dec
sub
add
mov
dec
cmp
push
jmp
jns,pt
xchg
sub
mov
mov
outsb
std
mov
cmpsb
cs
clc
loopne
sub
dec
jecxz
xor
xchg
push
ret
cltd
in
out
out
or
lret
mov
jb
mov
in
pop
test
jns
dec
mov
insb
add
cld
jge
sbb
dec
pop
push
aad
jbe
test
std
addb
test
and
adc
pop
shl
ja
sbb
testb
push
outsb
sarl
test
sahf
dec
fisttps
sbb
pop
aas
cmpsl
cli
in
jge
add
jge
mov
dec
out
fmul
mov
insb
sub
adc
sbb
adc
hlt
dec
loope
iret
push
fwait
int
push
cltd
in
inc
mov
mov
shr
adc
lret
cmp
cwtl
pusha
js
mov
ds
sub
add
rcrl
test
in
add
and
fidivs
and
je
out
dec
dec
xchg
sub
mov
xchg
mov
andb
mov
sbb
cmpb
and
cli
inc
jns
aas
adc
jne
test
lret
jae
push
js
fdivl
popf
popa
push
pop
sbb
push
push
lods
sbb
adc
ret
dec
sbb
jne
adc
fnstcw
aas
push
cmp
outsl
inc
sti
mov
mov
shr
ret
pop
ljmp
push
mov
push
ljmp
jno
pop
jge
sbb
push
dec
push
mov
fcompl
insl
loope
imul
adc
inc
cmp
test
aaa
iret
pop
mov
or
popa
clc
fildll
pop
xor
mov
popa
test
xchg
xor
push
sbb
mov
aaa
or
fcmovnb
fiadds
movsl
shll
cmp
into
lock
push
and
jae
sub
std
xchg
pop
clc
push
mov
mov
stos
inc
mov
sub
xchg
rol
pop
add
scas
xchg
sub
iret
popa
xor
jnp
push
inc
cmp
sbb
push
adc
ds
mov
xor
ja
cmp
cs
stos
je
jne
sub
xchg
sub
push
mov
arpl
aas
xchg
in
xlat
in
icebp
or
loop
pop
fwait
dec
insb
aad
enter
and
into
sahf
sarb
add
data16
arpl
clc
cmpsl
sbb
jl
dec
jg
xor
sbb
lret
xor
scas
call
mov
ret
stos
fdivl
mov
mov
movsb
mov
cmpl
incb
and
imul
and
imul
jge
jbe
clc
mov
pop
push
jecxz
loop
call
jns
xchg
sbb
fistpl
out
sbb
sar
inc
fdivs
sbb
popf
xor
in
ret
popf
std
mov
jle
ret
mov
xchg
pop
dec
jns
leave
mov
adc
push
fsts
or
push
test
aaa
mov
popa
fnsave
pop
push
xchg
mov
sbbb
dec
mov
cmp
icebp
popf
mov
xchg
repz
sbb
or
inc
popa
addl
hlt
mov
mov
sbb
sub
and
jns
jbe
ss
cmp
es
aas
push
xor
xlat
ret
push
xor
pop
out
adc
div
mov
xchg
pop
insl
negl
jb
cmpsl
mov
mov
aas
loop
push
or
movsb
mov
sbb
lock
mov
add
mov
jae
mov
xchg
in
cmp
sub
lods
and
jno
in
push
fwait
popf
clc
sahf
xchg
xchg
int
pop
std
pop
rcll
push
inc
into
jg
cld
mov
inc
lret
adc
jmp
into
pop
ss
insb
pop
cli
test
cld
lods
aas
sbb
jb
cmp
jne
clc
cmpsl
push
xchg
dec
addl
pop
jnp
daa
mov
add
push
and
xchg
jbe
cmp
and
xorl
into
gs
add
jp
mov
mov
out
mov
or
imul
into
mov
cmpsl
fwait
pop
es
subb
push
daa
jle
mov
xchg
pop
push
roll
shrl
sbb
xor
cwtl
das
pop
divl
adc
push
and
je
mov
and
cmp
ret
pop
out
in
mov
inc
gs
fbld
fwait
out
sub
mov
push
mov
ss
mov
sub
lock
mov
xchg
sbb
or
lods
jge
xor
out
pop
sub
sub
mov
mov
push
mov
nop
ja
cmp
out
mov
push
jne
add
dec
andb
lods
adc
shl
and
mov
test
lds
subl
enter
out
int3
call
in
aas
and
push
inc
push
xchg
pop
add
out
int3
outsl
dec
mov
cltd
or
mov
sub
int3
pop
imul
inc
xor
dec
dec
jecxz
in
nop
daa
jno
adc
mov
les
push
sub
xchg
scas
mov
ret
fdivrl
shll
sub
aad
xor
loopne
ja
adc
pusha
movsl
jb
pop
push
cli
sub
or
addr16
jb
icebp
es
icebp
sahf
push
out
xor
mov
lods
rcll
jmp
mov
data16
lods
jmp
imul
push
push
imul
fcomps
jecxz
push
mov
xchg
jle
repnz
inc
push
xlat
mov
jl
mulb
in
sbb
iret
int
pop
addr16
rep
jo
adc
dec
rcrl
jbe
dec
lahf
idiv
adc
sbbb
sbb
popf
adcl
mov
movsb
popf
mov
xor
pop
shll
pop
cmp
lea
rcrl
pop
add
cli
inc
fwait
icebp
add
int
sbb
loope
cmp
movsb
addb
push
sub
stos
insl
mov
jnp
ljmp
popf
inc
data16
pop
loopne
imul
outsb
cmpsb
lods
push
jno
jp
pop
mov
mov
mov
popf
mov
dec
popf
pop
and
xchg
out
or
sub
into
cmpsb
cmpl
mov
pushf
or
ret
mov
fsubrs
and
sub
aam
add
cwtl
push
mov
test
fldl
mov
ja
add
push
jo
mov
inc
push
or
jecxz
mov
xorl
sub
add
idivl
push
mov
in
cwtl
xchg
inc
mov
out
je
sub
and
add
jp
mov
xchg
push
inc
test
jb
cmpsb
mov
push
pop
push
mov
test
and
decb
mov
add
popa
mov
addr16
inc
flds
out
lds
fdivs
int
cmp
repnz
xchg
cmc
add
dec
mov
jg
outsl
ds
fiadds
shlb
push
daa
and
adc
mov
xor
or
or
or
push
inc
pop
mov
in
cmp
and
xor
ss
pop
xchg
inc
bound
sarl
pop
mov
loopne
jge
push
rcll
jl
fwait
xor
pop
lret
mov
adc
mov
fwait
add
xchg
in
fs
push
hlt
fstl
xchg
sub
xor
aam
sbb
or
rorb
and
arpl
fimull
ret
push
xor
xor
aad
push
out
xor
jle
hlt
push
decl
mov
popa
fcomp
xchg
adc
fwait
sti
mov
bound
or
scas
xor
xchg
dec
cmpsl
fbstp
mov
div
jnp
roll
pop
int
dec
and
xor
jno
xor
inc
stos
mov
movb
ret
sbb
rclb
mov
add
ss
sbb
push
cmp
inc
test
cmpsl
fwait
pop
dec
cmp
xor
push
sti
loope
mov
dec
jnp
int3
mov
cli
rcl
daa
mov
scas
or
jbe,pn
pop
pop
repnz
pushf
cli
adc
das
cmpsb
mov
je
ret
xchg
push
jmp
jb
xchg
in
xchg
mov
adc
mov
push
js
adc
loopne
jnp
push
dec
jecxz
cmp
sbb
mov
in
inc
pcmpgtb
ficoms
xchg
call
test
cmp
xchg
ljmp
pop
xchg
outsb
sbb
xchg
test
and
fdivl
mov
xor
std
sbb
test
hlt
or
ss
sub
ljmp
leave
add
dec
cmp
dec
cmp
dec
pop
sbb
popf
pop
movsw
jb
jle
pop
cmp
xchg
sub
lcallw
je
pop
lret
sbb
sbb
cmp
pop
sahf
cmp
fldt
ljmp
inc
popa
jb
adc
xchg
sbb
in
xor
add
jmp
pop
add
ret
fstpt
in
inc
sub
jns
jne
int
movb
inc
insb
cmpsb
cmp
ret
cld
les
inc
clc
pusha
test
ficoml
xlat
pop
aas
inc
arpl
add
xchg
addb
pop
sub
ret
mov
push
in
xor
mov
nop
stos
std
pop
ds
push
rcr
sahf
xlat
outsb
shlb
xor
mov
mov
mov
mov
mov
js
cli
adc
jp,pt
repnz
scas
mov
adc
sbbl
or
dec
and
sub
icebp
sub
jne
push
sbb
jb
pushf
stos
rcl
testb
pop
cmpsl
adc
cmp
arpl
aad
mov
jne
imulb
and
in
xchg
push
pop
inc
mov
lea
or
movsl
iret
daa
sbb
shr
test
jno
cmove
ret
mov
aaa
fistl
insb
jmp
daa
aad
jbe
aam
add
jmp
fcoml
inc
ja
sbb
aaa
pop
in
pusha
mov
ljmp
jae
or
sub
lds
cwtl
xlat
aas
int3
sub
in
cmp
pop
sub
rorb
lret
jle
out
clc
jl
mov
je
push
fists
nop
adc
incb
mov
aam
or
jne
jno
mov
lcall
adc
pop
mov
push
and
sub
push
test
xchg
outsb
movsb
dec
movsb
and
lahf
lock
inc
jae
xchg
nop
push
or
std
push
adc
lock
stos
out
xchg
stos
sti
dec
into
mov
popf
cmc
or
test
pushf
test
push
js
in
aaa
hlt
into
dec
lret
pop
mov
insb
int3
data16
fmull
mov
add
jbe
testb
jb
dec
pushf
lea
test
fisubl
insl
insb
inc
fildl
ret
movsb
push
push
add
int
xchg
test
imul
loope
cld
mov
mov
xchg
xor
xlat
repz
ljmp
xor
orl
jg
dec
hlt
and
insb
div
push
and
sub
push
hlt
pop
mov
stos
cmp
and
jae
cs
int3
xchg
mov
cmp
mov
repz
or
ds
ja
lods
xchg
jmp
ja
mov
jb
fbstp
arpl
sahf
push
sbb
mov
mov
stos
imul
setnp
and
dec
and
test
push
movsb
dec
enter
std
repz
fsubr
pop
orl
add
jae
adcb
jg
fnstenv
outsl
inc
in
enter
aad
mov
call
fwait
repnz
call
xlat
dec
adc
push
cmc
dec
pop
adc
stos
in
xor
mov
and
pop
dec
sahf
jns
adc
xchg
mov
decb
pop
sub
stos
mov
pop
jnp
mov
or
aas
lcall
jns
push
aas
sub
or
hlt
inc
popa
cmpsb
add
add
mov
sbb
cli
rcll
dec
and
call
push
mov
add
shlw
sbb
ds
popf
pop
scas
jg
push
nop
cld
outsl
push
ljmp
xor
imul
push
mov
fsts
mov
jg
out
inc
cld
pop
sbb
xor
out
jmp
push
cmp
xchg
push
cmp
pop
call
or
xor
cmp
cmp
pop
xor
loop
mov
or
add
sbb
adc
daa
push
movsl
subl
enter
loop
pop
je
sbb
adc
jg
mov
aaa
lret
out
pop
pop
out
nop
mov
jbe
rorl
lss
jo
fsts
daa
inc
push
mov
mov
pop
mov
add
lahf
cmp
xchg
int
dec
mov
shl
lods
dec
mov
push
jnp
jae
jnp
jns
sar
repnz
call
jecxz
imul
aam
xor
cmpsb
pop
pop
scas
lret
pop
pop
imul
ficoml
mov
and
and
sbb
jl
add
mov
std
scas
mov
xchg
ficoml
loop
or
rcrb
daa
mov
dec
push
sarl
pop
sar
sbb
sub
rcll
clc
or
fs
adc
fld
arpl
cli
jl
test
loop
bound
repz
icebp
repz
jno
mov
jg
stc
fsubrl
xchg
xor
dec
and
imulb
shlb
or
test
mov
rorl
fistps
xchg
xchg
sub
subb
popf
jmp
pop
push
mov
inc
clc
jbe
std
xchg
movsb
xchg
pop
xchg
lods
mov
inc
mov
clc
or
fsubs
mov
or
loopne
inc
push
idiv
jl
inc
inc
lahf
std
icebp
or
call
in
inc
push
inc
mov
xor
or
cs
inc
add
jne
push
lods
ret
adc
lret
mov
push
enter
xor
ds
push
fldt
cmc
mov
dec
mov
les
mov
mov
sub
out
in
movsb
push
ljmp
insl
cmp
ret
mov
je
add
imul
jo
and
out
int3
mov
call
or
push
sub
cld
add
cs
mov
leave
cmc
xor
outsl
jmp
mov
jmp
test
aas
jmp
pop
mov
mov
cmp
icebp
mov
lods
mov
inc
fs
insl
movsb
adc
jecxz
lret
jnp
js
lds
xchg
xor
add
dec
and
sbb
mov
sahf
fwait
shr
inc
sbb
dec
insb
push
or
in
adc
pop
or
xlat
cmp
add
inc
loop
fabs
mov
in
ljmp
rorb
add
lcall
pop
es
cmp
dec
imul
inc
in
push
or
fcoms
jmp
bndldx
mov
or
data16
jmp
mov
dec
in
mov
insb
add
jl
int3
dec
jl
xlat
sub
sbb
mov
jnp
ds
cmp
es
sti
gs
mov
stos
mov
mov
test
repnz
lock
cmp
xor
xchg
movsl
scas
xor
fsubrs
test
test
loope
cmp
test
loope
adc
mov
dec
mov
lods
nop
ds
notb
in
in
xchg
xchg
push
lret
loope
xchg
lods
sbb
mov
outsl
ret
hlt
adc
insl
add
insl
or
adc
rorl
fildll
xchg
lods
cmp
rep
and
pop
testb
mov
adc
xor
or
aaa
xor
xor
xor
scas
leave
fstl
cmpsl
push
lock
pop
adc
adc
inc
bound
ss
das
cld
inc
insl
sub
mov
mov
frstor
mov
out
inc
pop
mov
insl
push
sbb
pop
lea
aaa
xlat
jmp
stos
inc
xor
leave
pusha
mov
cmp
call
or
push
popf
mov
mov
sub
dec
iret
loop
dec
pusha
jns
lret
fnstsw
ret
popa
jns
push
ret
orb
pop
adc
jo
out
xchg
in
mov
sub
aad
dec
iret
sbb
add
sbb
or
push
dec
xchg
sub
push
sub
and
push
sbb
or
stos
and
aam
cmp
or
addr16
mov
test
jnp
or
dec
cmp
and
mov
ljmp
xor
in
xor
inc
or
fmull
mov
xchg
jecxz
mov
pop
jnp
mov
push
loope
scas
cmp
and
inc
icebp
or
lcall
sub
dec
pop
push
jmp
data16
in
clc
sbb
pop
dec
fcomps
rorb
push
scas
jg
insb
lcall
and
jno
and
mov
mov
xchg
push
add
xor
aam
sbb
push
cmp
jl
pop
outsb
push
ret
pop
movsl
jle
add
loope
sbbl
es
xchg
dec
push
sbb
jno
jo
pop
rorl
or
push
sub
rorb
jp
addr16
fs
fwait
aad
inc
push
mov
loop
cmp
mov
adc
inc
and
stos
cmpsl
xor
and
negl
lcall
mov
cmpsl
leave
dec
repz
jns
dec
mov
rol
lds
dec
add
pusha
jb
xor
fnstsw
and
pop
popa
data16
test
test
lret
repz
sbb
sub
mov
xor
jecxz
fidivrl
popa
clc
mov
fldcw
rcrl
ret
sar
and
hlt
xchg
cmp
lea
pop
lods
cmpsb
sbb
and
dec
pop
pop
jnp
call
push
in
push
mov
shl
cmp
mov
hlt
mov
mov
shl
inc
fldt
sbbb
lcall
cmc
mov
push
xor
mov
cmp
mov
mov
xor
in
cmp
xchg
por
cmp
xchg
out
maskmovq
testl
push
inc
pusha
loopne
cmp
insb
mov
cmp
shrl
sahf
in
gs
mov
fists
cmp
dec
loopne
jb
xlat
test
pop
ds
ds
rorb
jg
xchg
xchg
mov
popf
or
lahf
push
inc
lods
xchg
xor
enter
jo
cltd
xlat
jns
mov
sbb
lret
sub
shrl
add
mov
lock
leave
dec
sub
daa
mov
cmp
pop
mov
ja
mov
pop
mov
cli
lret
sbb
popf
sub
hlt
outsb
sbb
repnz
pop
lret
jb
dec
aam
pop
out
jle
lods
xchg
mov
pop
insb
ret
push
lods
ljmp
ljmp
movsl
fcmovbe
dec
fwait
lods
bnd
fdivrl
rcrl
data16
fcompl
test
out
cli
into
in
sub
in
test
std
out
dec
mov
dec
out
jp
mov
fmul
test
ret
int3
shl
and
les
lock
mov
pop
loope
rorb
mov
pop
jne
iret
and
pand
jl
jne
cmpsb
push
adc
and
lock
sub
iret
scas
int3
xlat
xor
inc
pop
mov
pushf
int
or
cmp
clc
xorl
repnz
test
adc
insl
push
xchg
cmp
out
insl
jge
cmp
add
mov
sub
int3
adc
mov
mov
in
xchg
bound
sahf
add
mov
xchg
lea
xchg
sbb
cmp
stc
mov
outsl
dec
and
aad
sbb
push
and
in
add
lret
xchg
jg
arpl
push
mov
inc
push
inc
adc
cmc
add
xor
push
adc
jbe
push
fwait
leave
push
xchg
jbe
inc
lahf
loop
inc
pop
xchg
loopne
loope
pop
test
mov
sub
push
fiadds
es
test
sub
outsl
lea
jecxz
fisubrs
and
jne
in
aas
adc
int3
out
cmpb
jmp
stos
jp
add
cli
std
stc
popa
xor
sub
clc
jmp
pusha
ss
xlat
cld
lds
leave
cmp
call
out
dec
movsl
or
push
xchg
cmp
ja
cmp
ret
cmc
imull
movsb
inc
iret
cmpsb
cmpsb
lods
cmp
sbb
xor
xchg
mov
int3
xor
flds
lahf
aad
in
inc
xor
push
fs
aaa
dec
add
arpl
ds
add
mov
outsl
lcall
dec
inc
aaa
ficompl
jne
mov
cmp
repnz
sub
sub
mov
lods
pop
push
mov
or
lods
mov
sbb
out
in
mov
insl
sub
push
lods
clc
pop
in
or
cmpsb
pop
push
push
sub
popf
xor
push
outsb
adc
jp
cmp
dec
mov
jo
das
jnp
test
fcoml
or
cmp
in
stos
pop
cwtl
test
cmp
movsl
push
xchg
fidivs
mov
lret
and
int
divl
gs
mov
mov
add
xchg
jbe
cmc
adc
outsb
sub
ficompl
pop
out
jecxz
sbb
jecxz
cmp
mov
or
pop
movsb
es
enter
push
mov
out
mov
jb
std
inc
mov
scas
mov
or
and
cmp
push
ss
pop
cmp
in
pop
fnsave
cli
daa
shl
fnsave
pop
pop
cmp
adc
iret
ret
hlt
lock
mov
ljmp
fcmove
call
sbbb
out
cmpsl
pop
jbe
sub
int3
lods
test
and
mov
mulb
jle
out
fldcw
jp
cmpsl
lcall
lahf
mov
outsl
int3
aam
mov
out
cmc
lea
cmp
ficomps
std
out
fwait
adc
mov
push
sub
jnp
and
movsb
push
fwait
inc
call
lea
into
pop
sbb
jne
cld
arpl
in
cld
leave
pop
add
loope
jnp
pop
insb
push
jl
dec
pop
mov
and
rclb
cmpsl
sub
adc
adc
fstps
addr16
mov
sub
jo
inc
roll
data16
out
push
ret
hlt
jb
jo
movsb
notl
es
cmp
fisubrs
or
stos
mov
imulb
call
das
adc
xchg
mov
arpl
push
lock
test
lret
or
data16
jl
xchg
mov
in
sub
mov
adc
push
mov
out
xchg
aaa
push
xchg
cli
or
es
pop
lods
lea
cmc
mov
adc
adc
xchg
ss
pop
clc
test
lret
js
js
jae
lods
scas
test
and
pop
stos
push
pop
pop
push
jp
sbb
jmp
add
sbb
lea
popa
cmpl
hlt
lods
clc
in
gs
jns
js
jne
or
out
mov
adc
xchg
mov
ret
repz
das
ror
arpl
adc
adc
rol
popa
stc
adc
dec
leave
pusha
jp
adc
or
and
faddl
fsubs
fistl
jmp
js
in
ss
inc
sbb
inc
pop
cmp
push
and
mov
ds
stos
stc
outsb
sub
jne
rol
inc
ljmp
pop
lahf
mov
lods
xchg
into
adc
dec
dec
push
adc
insl
rcrl
pop
movsb
mov
pop
movsl
adcl
mov
inc
add
clc
cmp
pop
pop
mov
jp
stc
cmpsb
cmp
lods
sub
mov
xchg
loopne
sahf
outsb
repz
mov
fldcw
movsb
pop
pushf
int3
arpl
lods
xchg
mov
scas
mov
cmp
and
rolb
test
je
call
sti
xchg
stos
xchg
jns
push
int
mov
bound
shrl
jae
xchg
jge
pop
mov
adc
in
test
xchg
dec
xchg
ret
and
and
fisttpll
xor
arpl
sub
cmp
pop
mov
cmpsb
mov
mov
icebp
insb
mov
adc
movb
mov
xchg
mov
sbb
pop
fdivrs
stos
mov
jge
jbe
scas
or
icebp
insb
mov
or
or
out
lret
shl
iret
pop
test
inc
or
cvtps2pd
mov
pop
pop
in
aas
add
inc
mov
mov
inc
ds
xorl
and
call
push
aaa
into
andl
jmp
ficompl
fstl
add
enter
stos
test
push
pop
xchg
ret
pushf
repnz
clc
xchg
out
negl
add
sbb
inc
push
stc
inc
or
push
jo
aaa
out
rcrb
mov
test
mov
or
aas
cld
movsb
nop
adc
mov
rclb
mov
push
inc
loopne
xchg
imul
sar
xchg
xchg
loope
insb
fistps
adc
push
icebp
lcall
out
mov
shll
adc
scas
movb
pop
arpl
add
jl
shll
and
mov
mov
dec
xchg
xchg
pop
dec
arpl
mov
xor
jmp
call
sbb
ja
mov
push
imul
addr16
push
test
fwait
test
fsubp
push
cmc
lret
stos
push
cmc
add
ss
movq
lcall
jo
push
aam
mov
adc
dec
and
mov
adc
push
scas
xchg
cmc
cmp
xor
xor
and
cmp
stc
ds
gs
pop
inc
pop
dec
or
cmpsl
cmp
adc
push
negb
and
push
push
cmc
cmpsb
loope
fistps
out
or
inc
lret
xlat
ds
push
in
jae
jno
and
je
movsb
outsl
out
mov
mov
lods
push
push
out
adc
aaa
jae
outsb
shr
js
mov
scas
adc
mov
mov
shrl
repz
dec
push
cli
mov
ret
push
add
sub
jae
mov
mov
pop
mov
pop
add
outsb
cmp
dec
dec
and
gs
mov
xor
les
fcomip
xchg
push
cmp
subb
roll
es
sahf
in
pop
xchg
shl
jo
cmp
inc
add
das
mov
push
fnstsw
rorl
jbe
fldcw
pop
mov
xor
ret
pop
leave
fadds
lods
rorb
push
ja
mov
cli
lret
movsl
andb
movsl
movsl
nop
sub
xlat
pop
jae
jnp
adc
jge
insl
jmp
outsb
call
sub
mov
rcrl
andps
sbbb
daa
js
mov
jecxz
push
jbe
mov
shl
mov
push
sbb
popa
mov
pop
daa
mov
movsb
push
shll
popa
imul
xchg
adc
or
sbb
jb
subl
adc
xchg
mov
lcall
cmp
fwait
icebp
rcl
shlb
mov
mov
inc
iret
outsl
sbb
fwait
incl
decb
xchg
cmp
test
or
adc
xor
jmp
push
imul
sub
mov
pop
hlt
push
insl
inc
adcl
fsts
xor
shrl
ret
cmp
pop
ljmp
cmp
cmpsb
ret
in
test
push
test
push
xchg
fnsave
out
inc
popf
xchg
pop
daa
inc
cmp
inc
fld
aas
dec
dec
mov
cmpsl
lds
andb
and
ret
push
int
fiadds
in
scas
aas
ljmp
out
cmpsl
roll
fbstp
icebp
push
aas
push
and
mov
inc
inc
das
jb
mov
icebp
stos
aam
dec
sbb
add
pop
adc
mov
jno
mov
inc
mov
lods
xor
jnp
and
add
jmp
out
sbb
inc
jbe
aas
ja
xchg
add
ds
inc
imul
fsts
ja
cli
scas
xchg
clc
int
dec
sbb
iret
bound
mov
imul
pop
dec
cmpsl
sbb
fnstsw
out
fiaddl
mov
sarl
cwtl
pop
and
cli
inc
pop
xor
es
outsl
cmpsb
jns
add
jns
and
lea
sar
rorb
cmc
adc
ss
inc
fsubs
mov
lcall
push
daa
mov
ja
insl
jp
aaa
popa
add
fucomp
mov
mov
mov
push
mov
ficoml
ror
ret
repnz
jl
sbb
inc
ret
push
cmp
stos
mov
dec
pop
push
sbb
or
gs
xor
and
dec
sub
insb
inc
push
or
xchg
mov
xchg
mov
lret
mov
sbb
add
sbb
cltd
adc
insb
push
int3
and
cmc
and
jae
adc
sarl
jg
dec
and
lahf
test
xchg
test
roll
or
mov
push
repz
cmp
sbb
mulb
pop
hlt
adc
stc
pusha
fidivl
lcall
in
enter
adc
je
cmpsb
inc
popf
sbb
into
mov
xchg
in
std
shl
fstpl
lods
ljmp
sbb
sub
mov
jns
subl
inc
cmc
stc
jecxz
out
push
lcall
add
inc
sub
pop
out
sbb
xchg
push
insl
aam
mov
addl
test
ss
stos
movb
imul
cmp
mov
out
sbb
mull
jle
jl
mov
dec
popf
lcall
daa
xor
ds
inc
into
daa
test
jns
ret
xchg
add
pop
pop
dec
in
add
mov
pop
cmp
push
mov
out
xor
sti
inc
movb
lea
repz
ds
aam
mov
cmpsl
sbb
mov
leave
xor
out
cmp
fldl
movsb
mov
xchg
jo
lea
data16
lret
sti
push
lcall
sahf
cmp
aas
sbb
int
insb
inc
out
push
or
xchg
sahf
mov
jecxz
sub
mov
adc
es
jl
or
aas
mov
dec
cmpsb
fsubrs
mov
loop
sub
scas
cmc
xor
aam
in
test
pop
clc
push
pop
loop
out
js
dec
mov
push
fsubl
mov
xchg
es
cmp
add
aaa
xchg
gs
aas
shl
add
fidivs
mov
and
orb
mov
mov
push
xor
mov
pop
dec
dec
adc
cmp
inc
out
jne
mov
aas
and
add
adc
cmp
xchg
arpl
sub
sbb
push
sbb
add
fstpt
xchg
cmpb
sbb
outsb
mov
sahf
sarl
imul
mov
pop
xchg
loopne
imul
outsl
add
jecxz
in
fwait
inc
mov
movsb
dec
pop
lea
xchg
lahf
lret
testb
imul
ljmp
cmpl
lea
sub
imulb
fcomip
not
mov
popa
push
out
mov
push
insb
mov
push
iret
cmpsb
xchg
xlat
push
jmp
fnstcw
adc
push
cwtl
xlat
push
repnz
mov
xchg
jmp
inc
adc
xchg
xchg
sbb
testb
jae
jbe
push
cmp
mov
add
mov
push
lcall
in
rol
xor
mov
cmc
pushf
arpl
adcl
outsl
xchg
lock
and
ss
imul
movsl
and
mov
dec
loope
insb
xlat
mov
and
fsts
adc
mov
pop
mulb
dec
jge
cld
sahf
inc
fmul
push
jl
lret
arpl
xchg
jmp
pop
xchg
out
sbb
mov
mov
sbb
fldcw
fmul
addr16
frstor
ror
push
mov
sub
sub
scas
pop
push
mov
inc
popf
push
mov
int
mov
jecxz
test
imul
mov
or
add
dec
xchg
loope
int
icebp
jnp
stc
ds
lods
insl
ret
push
iret
or
mov
loope
adc
fs
aas
cmpsl
mov
sub
sbb
xor
sbb
ss
mov
push
shrb
lock
push
xchg
push
out
cmp
ss
xor
cmp
jne
faddp
rorb
sbb
pop
aaa
ss
pop
mov
and
cmpsl
mov
sub
push
scas
inc
leave
or
adc
bound
push
or
imul
xchg
daa
inc
icebp
add
arpl
and
cltd
cmp
mov
mov
pop
loope
shrl
jg
mov
bound
daa
pushf
pushf
adc
icebp
xor
pop
jo
dec
sub
pop
repz
adc
adc
fiadds
jge
pushf
ljmp
stc
add
xchg
xor
test
out
fcompl
rorb
mov
shld
add
or
daa
mov
mov
inc
pop
test
push
add
out
jnp
xor
ret
out
scas
cmp
lahf
stos
jmp
mov
in
xlat
xchg
insl
aad
movsl
ds
mov
leave
jle
orl
stos
cltd
and
mov
push
cli
out
ss
add
lret
decb
xor
mov
cmpsb
fcompl
inc
mov
dec
dec
enter
nop
xchg
and
sbb
ja
inc
sbb
in
int3
xchg
mov
cltd
pushf
xchg
ds
xchg
jecxz
and
sahf
pusha
adc
jno
xorb
mov
in
int3
imul
ficoml
mov
mov
sbb
mov
mov
shll
mov
push
mov
pop
jbe
or
mov
loop
pop
lds
pop
cmpsl
mov
jnp
add
fcmovnu
or
lcall
shlb
mov
mov
int3
xchg
add
stc
inc
cmp
pop
mov
jae
and
clc
aas
insl
jno
scas
inc
enter
push
jmp
mov
stc
jo
and
push
std
mov
mov
pop
stos
sbbl
mov
jae
jnp
fcoml
lea
ja
loopne
xor
dec
lds
add
xchg
sbbl
jno
imul
sub
subb
cmp
sarl
push
sbb
daa
cmpsl
ret
insl
pop
jns
seta
les
add
aam
xor
sbb
pop
jg
xor
call
hlt
outsl
loop
or
repnz
andl
aad
sub
xchg
loope
and
inc
push
icebp
mov
xchg
dec
dec
pop
push
xor
mov
push
mov
enter
pop
movsl
xchg
dec
add
popf
stc
cmp
cwtl
cs
movsl
in
sub
push
pop
rorl
jo
inc
sarb
stos
push
imul
insb
push
addr16
pop
sahf
scas
fisubrl
sub
inc
mov
sarb
daa
jg
popf
nop
and
xchg
pop
popf
movsl
in
lahf
data16
incl
dec
cmp
add
aad
and
insb
adc
push
in
rcr
in
mov
inc
push
jg
mov
and
jae
or
xor
call
xor
aas
xchg
cli
cmp
aam
pushf
pop
cwtl
subl
inc
bound
or
and
cmp
adc
sbb
mov
fldcw
shrl
pop
jle
pop
and
add
cwtl
adc
in
mov
mov
pshufw
subb
xchg
inc
xchg
insb
and
add
xchg
iret
add
sbb
pop
mov
add
aam
inc
jmp
xchg
inc
call
and
cltd
jmp
push
jecxz
pop
mov
cmp
mov
scas
pop
dec
loope
scas
andl
addr16
sahf
mov
clc
adc
sarb
int3
inc
repnz
insb
pop
jecxz
pop
pop
incl
mov
add
xorl
xchg
repnz
sbb
dec
jp
sbb
test
mov
xor
add
fnsave
gs
int
sbb
jp
sbb
ja
ss
push
aad
xchg
pop
inc
inc
repnz
jae
lods
ret
insl
test
cli
xchg
aam
fdivl
xor
fdivs
sbb
pop
leave
ss
xchg
out
stos
inc
fidivrl
stos
loop
ds
jae
push
lock
push
and
cli
pushf
lods
outsl
inc
push
ret
cmp
push
negl
mov
mov
mov
mov
shr
pop
test
mov
xchg
and
sub
xor
adc
cltd
cld
mov
pop
xor
fmuls
jecxz
or
pop
out
pop
adc
dec
push
insb
cwtl
repnz
mov
push
cs
xchg
test
icebp
mov
mov
pop
xchg
test
in
mov
and
or
adc
fwait
mov
shll
cmpsl
stc
push
mov
sbb
or
adc
or
aad
fistps
xchg
sub
sti
push
jge
clc
xor
hlt
or
sbb
jbe
lea
inc
dec
mov
xor
lods
imul
daa
pop
jl
loope
std
scas
xor
xchg
fmuls
movsl
inc
sbb
sub
sbb
and
daa
push
sti
or
mov
cmpsl
je
push
out
push
cmpsb
mov
nop
pop
or
jmp
rolb
jae
in
mov
in
xlat
jnp
lret
shll
xlat
fbstp
add
or
out
test
jne,pn
mov
jg
mov
jge
lret
cmp
clc
in
inc
fcmovnu
or
jns
outsl
in
popa
sub
pop
jne
arpl
lret
addb
xchg
dec
dec
scas
nop
push
mov
loop
incl
das
addr16
jle
test
fwait
mov
add
sbbl
insb
lcall
cmp
cpuid
jle
xor
and
jge
ja
pop
insb
inc
cmc
mov
fsub
aam
outsb
je
loop
pop
setg
cmpsb
push
and
or
cmpsb
mov
sbb
rorl
xor
add
jmp
or
stos
insb
sbb
sbb
pop
jge
cmp
xchg
insb
push
mov
fcomps
sub
gs
icebp
adc
jns
sbb
dec
in
pop
sub
or
jge
jnp
add
stc
pop
stos
push
rol
jecxz
enter
enter
cli
fs
gs
mov
mov
xchg
add
push
xor
push
inc
cmp
pop
out
call
add
inc
push
dec
int3
aad
pop
les
jle
ds
pusha
sbb
jo
mov
dec
fstl
lcall
popf
mov
int3
dec
shrb
stc
cmc
lods
outsl
cmp
xchg
xlat
mov
push
push
movsl
xchg
mov
inc
push
mov
cld
sarl
pop
flds
push
xor
outsb
and
and
xchg
cwtl
mov
add
sti
inc
add
push
jb
mov
vandps
xchg
inc
and
hlt
dec
flds
jns
inc
repnz
inc
rol
je
sub
fisttpl
mov
jmp
enter
shlb
adc
call
sub
lods
pop
std
lods
enter
jp
xorb
mov
out
add
jo
or
push
cs
outsl
dec
dec
ret
addr16
aad
push
push
repz
lret
and
xlat
adc
cmp
and
adc
push
daa
jae
fisubrs
adc
stos
jns
pop
loope
push
das
lcall
movsl
das
rorl
mov
cmc
or
add
outsl
lods
xchg
lods
and
pusha
sub
outsl
clc
popl
sahf
adc
sub
aad
sbb
mov
sub
jmp
mov
cmc
mov
imul
lds
les
sub
imul
xor
es
push
je
jno
xor
mov
pusha
mov
loop
jg
aad
xchg
or
js
xchg
jg
dec
mov
pushl
mov
fldenv
jbe
sti
xchg
outsb
and
jmp
adc
cmc
mov
mov
jle
repnz
and
outsl
mov
push
mov
frstor
stc
lahf
out
sub
cmp
dec
ret
dec
test
lods
fwait
push
sub
in
imull
fimull
jle
mov
out
mov
int3
jge
mov
es
mov
cmc
cmp
sub
outsl
addl
xchg
insb
ret
adc
jl
popf
jmp
and
call
scas
cmpsl
std
pop
lret
stos
imul
cmp
hlt
cmp
and
push
mov
or
and
clc
push
add
push
in
por
clc
adc
or
add
sti
xchg
dec
data16
mov
xchg
sub
and
inc
testb
js
push
js
test
jge
sbb
mov
insl
jl
insb
in
add
hlt
mov
mov
inc
pop
out
mov
rol
add
dec
imul
xchg
pusha
mov
or
adc
lock
xor
sub
sbb
inc
cmp
repnz
mov
fcompl
test
sub
int3
inc
and
aad
mov
ljmp
aaa
bound
mov
ffree
loopne
pop
cs
je
and
dec
adc
pop
xlat
addl
out
xchg
sub
pop
fwait
add
rcrl
movsl
subb
arpl
push
jae
rorl
mov
mov
aad
cmp
es
adc
and
insb
js
jne
dec
call
sub
jb
jne
jnp,pn
fwait
aad
addl
adc
outsl
test
jno
shr
mov
lea
cmp
ljmp
mov
rcrb
xchg
xchg
push
jmp
push
iret
jnp
shll
mov
push
rcrl
mov
mov
sub
inc
sub
gs
jo
xacquire
push
insb
dec
test
loop
mov
test
fnsave
addr16
fdivrs
arpl
jb
mov
ljmp
cmp
and
cmp
inc
mov
mov
in
xor
or
cmc
dec
mov
sub
inc
imull
push
push
popf
push
test
and
data16
into
push
clc
jae
mov
adc
mov
jg
push
mov
daa
andl
sti
into
fs
in
and
lcall
stc
mov
push
aas
lret
sub
shll
xchg
movsl
std
xchg
arpl
sbb
mov
jo
idiv
jmp
jle
adc
nop
mov
push
push
cltd
mov
adc
movsb
cwtl
jle
add
mov
or
adc
lods
addr16
mov
push
dec
notb
movsl
sub
mov
je
xchg
pop
mov
cltd
fldenv
popa
inc
xor
std
fldcw
sti
push
stos
and
pop
adcb
ds
push
lods
sub
add
dec
js
and
and
or
or
sub
lds
xor
inc
xchg
xor
es
stc
stc
sub
xorb
cwtl
stos
inc
les
arpl
loope
icebp
cld
aas
xlat
dec
xchg
push
push
jge
pushf
pop
jle
add
push
xchg
fisttpll
push
addr16
ja
out
cli
loope
outsb
mov
and
lahf
push
or
lret
pop
mov
push
int
jnp
pop
inc
add
pop
js
in
dec
or
or
adc
and
mov
cmpsl
ja
test
inc
int3
arpl
sub
mov
stc
stos
mov
mov
popf
adc
in
xor
adc
mov
ss
dec
aaa
in
shlb
inc
or
fsubr
push
dec
xchg
pop
mov
sub
and
repz
mov
popa
jbe
lret
rol
adc
cmc
icebp
or
repz
jmp
in
ret
jecxz
fadds
outsl
push
ja
add
test
cmp
faddl
fdiv
icebp
pop
mov
call
jp,pt
or
inc
data16
xchg
sub
push
out
and
mov
rclb
push
int3
push
pop
cltd
xor
adc
push
jno
xor
xchg
jo
test
xor
add
cmp
cmpsl
jmp
mov
cwtl
xor
out
scas
iret
sbb
jae
test
pop
nop
std
ss
and
inc
adc
mov
sub
push
cmpsl
inc
cmpsb
mov
pop
repz
mov
push
push
sub
pop
push
fistps
xchg
movb
dec
fcompl
in
arpl
cmpsb
dec
xor
pop
dec
out
out
mov
fwait
sub
or
movsb
cld
pop
sahf
ss
addr16
inc
cmpsb
leave
aam
cltd
ret
sub
loopne
adc
repnz
dec
push
or
ja
out
scas
xor
daa
xchg
push
scas
inc
mov
sbb
loope
jge
jae
fimuls
out
pcmpeqw
movsb
and
out
jecxz
fwait
xchg
rol
das
rclb
out
icebp
sahf
push
xchg
sbb
sbbb
scas
mov
xlat
cmc
enter
int3
in
inc
in
mov
xor
ja
test
xchg
push
stos
mov
pop
jl
push
cli
insb
pop
stos
fst
mov
pop
mov
das
xchg
jo
xor
hlt
orb
mov
ljmp
cwtl
jae
pop
xchg
ret
loope
jae
lock
sub
pop
jp
rclb
adc
das
int
fsubrl
sti
inc
and
sbb
roll
mov
jmp
nop
push
inc
fistpll
fsts
stos
mov
gs
cmp
push
xchg
sub
iret
adc
xchg
mov
cwtl
dec
sub
jp
testl
mov
xchg
sub
inc
fdivl
daa
mov
fdivs
es
ret
sub
mov
mov
or
cmp
mov
adcb
out
mov
leave
and
or
jne
jmp
cmp
rorl
ret
mov
xchg
psrlw
pop
aas
pop
ret
icebp
sub
aad
pushf
push
mov
jnp
data16
subb
sub
stos
sahf
push
xor
jo
fnstsw
adc
push
ds
sbb
fs
fildl
sbb
push
cltd
lret
jne
out
cltd
and
xchg
inc
lret
popf
sub
pop
sbb
inc
fisubrs
cltd
xor
jp
xlat
fwait
sub
mov
sub
xchg
fisttps
repz
inc
out
cmp
fdivl
pop
std
or
inc
clc
pop
outsb
loopne
in
movsb
imul
int
int3
into
pop
jle
mov
mov
iret
pop
mov
push
mov
pop
sub
call
fisubrl
shlb
scas
mov
mov
mov
push
lds
cs
loop
sub
lods
in
cmp
mov
sahf
clc
jb
pop
mov
pop
je
int3
xchg
aaa
mov
imul
int
dec
fsts
outsb
rorl
scas
ljmp
adc
jne
add
dec
in
mov
mov
mov
or
out
xor
ror
sub
mov
push
fmul
add
jg
sti
insb
sub
pop
in
pusha
int
subb
shrl
add
sbb
imul
outsb
mov
add
fisttpll
and
or
mov
test
sarl
and
clc
and
fisubrl
mov
inc
pop
dec
lods
fucomi
aaa
push
inc
cli
xor
mov
mov
sahf
fiadds
cmp
and
fdivrs
or
mov
inc
pop
sbb
jl
mov
and
mov
pop
cmpsl
into
fdivrl
jb
std
and
ss
inc
sahf
jb
push
aas
imul
push
stc
aas
mov
jl
popf
pop
or
into
bound
mov
lods
jns
lret
and
push
and
ds
xor
lcall
cwtl
sti
aaa
ret
pop
push
stc
test
arpl
cs
gs
scas
pop
sub
negb
addr16
cmp
inc
out
pop
insb
inc
pop
mov
dec
xchg
jge
jbe
cmp
ds
fidivrl
xchg
shll
in
xlat
mov
out
cmpsb
add
push
mov
into
das
xchg
in
cld
and
test
push
mov
mov
mov
testb
inc
addr16
fsts
lahf
ja
fbld
aam
or
data16
bound
jecxz
pop
and
inc
pop
push
lret
xchg
push
push
adc
test
and
aas
movsb
adc
sbb
add
mov
lret
fwait
cli
mov
pop
cmp
ds
fisttpl
and
mov
push
out
cmp
cmp
mov
sub
repz
imul
mov
xlat
jnp
mov
or
push
ds
inc
cltd
xchg
push
mov
lret
shl
ljmp
lock
push
push
movsl
outsl
mov
jmp
sbb
popf
stc
stc
mov
sub
cmp
outsb
stos
cltd
push
test
dec
and
inc
pop
mov
lds
rorb
jge
cmpsb
sub
movsl
mov
mov
jbe
bound
clc
push
inc
fwait
cmpsb
pushf
fnsave
or
out
xchg
out
pusha
mov
ficompl
sbb
cmp
mov
pushf
fistpll
fisubl
mov
mov
mov
test
jecxz
xor
andl
xor
dec
movsb
inc
lods
mov
shr
dec
jne
push
jbe
xchg
push
sbb
adc
add
cmp
movsl
insl
jl
mov
stc
or
lea
sub
dec
lods
stos
xchg
or
xchg
scas
add
pop
movsb
inc
push
mov
jle
adc
leave
movsl
int3
cmpsb
sub
daa
shll
test
icebp
pop
addr16
stos
insb
lods
sub
andl
push
mov
pop
arpl
adc
mov
lret
fsubrp
adc
scas
sub
push
xor
cmp
push
cmpsb
xlat
inc
enter
xor
dec
dec
je
mov
jb
push
push
and
mov
into
inc
pop
pop
xchg
fwait
ds
int
mov
mov
and
xor
xchg
daa
mov
inc
ds
mov
add
subl
ficompl
shrb
aam
xor
xchg
xor
and
push
sub
popl
cmc
mov
call
sub
fstp
lcall
adc
jbe
fstps
jecxz
fnstsw
jmp
pop
idivl
icebp
int3
dec
lods
inc
pushf
mov
add
push
out
inc
ficoms
cmpsb
add
pop
xor
xor
sbb
mov
mov
ss
rclb
mov
jbe
jo
jecxz
inc
xchg
xor
cs
sahf
lods
in
xchg
sbb
mov
cli
push
jo
sub
icebp
popf
xor
mov
dec
push
leave
insl
sub
das
aam
insl
xor
outsl
push
mov
ss
mov
cmp
mov
push
push
adc
lea
mov
rcr
inc
int
add
jg
xor
push
lahf
sahf
inc
int3
push
imul
aam
adc
cmp
mov
mov
add
test
dec
bound
cmp
mov
push
cwtl
outsl
mov
jbe
dec
cs
sub
mov
hlt
sub
push
rclb
sbb
add
test
push
xor
leave
xchg
jbe
js
cmp
int3
mov
xchg
daa
nop
lret
lock
lods
jle
cmp
xchg
dec
out
xchg
lock
push
lock
jne
fdivrl
jo
ja
gs
mov
or
xor
stc
nop
inc
xor
jg
loope
fsubr
jo
popf
pop
das
scas
cmp
pop
pop
pop
in
add
in
mov
ds
push
es
mov
sti
repz
mov
popa
adc
mov
add
outsl
shl
iret
pop
shl
mov
mov
add
fs
fldl
sub
scas
mov
pop
idivb
xlat
jge
sbb
add
jno
and
mov
mov
cli
sbb
sub
in
inc
xchg
inc
icebp
js
cmp
test
add
shll
movsb
add
fisubl
mov
jmp
adc
test
out
push
pop
jecxz
mulb
cmc
sbb
mov
cmp
add
shrb
xor
pop
mov
dec
dec
pop
and
mov
les
lods
inc
add
pop
cwtl
test
iret
loope
jle
push
loopne
mov
adc
jmp
imul
cmc
sbb
and
orb
insl
or
lahf
cwtl
out
inc
lret
ret
or
mov
insl
push
nop
fwait
movsb
es
loope
or
lret
push
ja
xchg
nop
push
sbb
aaa
pop
sub
loopne
xchg
jb
xor
mov
cmpsb
mov
pop
in
sbb
hlt
dec
fs
mov
push
mov
mov
mov
pop
lds
lcall
inc
dec
js
cltd
mov
mov
fisubrl
cwtl
push
lret
cmp
or
pop
jo
adc
ss
pushf
stos
sti
fmull
push
and
arpl
rolb
push
enter
adc
fnstenv
es
test
movsb
push
hlt
add
ret
ds
xlat
sbb
jae
and
sbb
mov
sbb
mov
push
or
outsb
aaa
ficoml
adc
test
lldt
ss
imul
movsb
outsb
xor
ja
test
shrb
push
test
daa
std
loopne
xor
mov
filds
in
nop
adc
cmpsl
cli
es
inc
movsl
int3
jge
jmp
cltd
std
mov
jp
fisttpl
pop
sub
push
sahf
sbb
mov
das
mov
cmpl
cs
sahf
jo
or
cmp
jmp
xchg
add
test
mov
cltd
xchg
rorb
xchg
and
mov
pop
sub
or
ja
inc
xchg
pop
xchg
clc
dec
cmc
fnstenv
addr16
mov
add
jmp
rorl
xchg
test
mov
fs
pop
cmpsl
stos
into
bound
daa
arpl
and
mov
pop
fdivrs
and
insl
jg
dec
mov
stos
add
sub
fidivl
fdivrl
sti
sbb
iret
and
xor
xchg
add
add
push
data16
es
pop
adc
imul
jbe
and
dec
push
push
pop
into
jne
cwtl
mov
mov
cmp
fidivs
sarb
lret
cmc
adc
mov
and
aas
popf
popa
fwait
xor
test
dec
adc
adc
adc
jecxz
push
pop
pop
pop
jg
les
and
unpckhps
scas
cmpsl
mov
sub
push
mov
or
lods
jnp
jmp
mov
or
call
jno
lock
aas
mov
int
push
jp
pop
repnz
mov
pushf
pop
jge
push
mov
sti
test
xor
ja
adc
icebp
fadds
fcmove
pop
outsl
push
cmp
in
ret
je
outsb
push
bound
pop
das
imul
cltd
sbbb
mov
cmpb
jb
cltd
jl
xor
push
jb
sub
xlat
push
mov
loopne
mov
cmpsb
loope
mov
in
push
rcr
mov
sbb
mov
push
xchg
sahf
ss
mov
mov
out
sub
fincstp
and
jne
outsb
loope
sbb
js
dec
xchg
inc
mov
pop
insb
add
pop
mov
insb
pusha
sub
bound
jp
popa
lods
mov
inc
pop
mov
jae
cmp
xlat
pop
fdivrp
sbbl
sub
xchg
js
test
test
call
jge
testb
popa
jmp
mov
outsl
fidivrs
lahf
mov
push
push
test
je
bound
jae
hlt
jg
test
pop
cld
inc
push
xor
js
jmp
adc
xorl
add
push
jne
outsb
xor
push
pop
xchg
jno
or
jno
fstps
fidivs
cmp
popf
add
sub
repnz
test
mov
clc
mov
shll
push
fucomp
pop
in
fbld
dec
jo
dec
xor
and
and
sub
push
shl
mov
call
popf
nop
fcomps
mov
aas
test
sbb
cmp
stos
std
enterw
xlat
mov
inc
data16
dec
aam
cmp
out
imul
push
loope
loopne
cmpsl
cmp
int
es
and
adc
test
xor
icebp
and
xchg
sub
dec
cs
in
push
lds
jg
add
push
sahf
lcall
mov
lea
into
add
movsl
push
les
push
sar
xchg
stos
icebp
pop
sbb
xor
pusha
cmp
out
cmpsl
xor
add
add
xchg
xor
cmp
sahf
insb
push
out
ficomps
lods
dec
int
jns
pop
out
xchg
sub
dec
in
in
icebp
pop
push
nop
xchg
mov
or
jecxz
clc
inc
fwait
xor
lods
ljmp
mov
lea
imul
scas
fld
and
repnz
sub
jno
cwtl
neg
cwtl
test
dec
arpl
jle
movsl
cmp
outsb
call
fildll
ja
fisubrs
lods
lret
pop
dec
mov
and
scas
outsb
push
fnsave
lea
fiaddl
sarl
cmp
cwtl
repz
adc
jae
xor
dec
fidivs
or
adc
sub
repz
mov
fisubrs
xor
sub
test
insb
jnp
sbb
xchg
mov
enter
jle
push
mov
ss
rolb
test
sbb
pop
adc
inc
push
in
pop
cltd
test
and
les
aam
mov
mov
mov
icebp
je
lds
mov
stos
jmp
cmp
insb
cmc
xor
out
jne
mov
mov
mov
enter
push
adc
in
dec
mov
std
and
mov
and
sti
sahf
sbb
push
xchg
lods
inc
inc
aam
fcompp
ljmp
and
xchg
push
mov
cmp
push
mov
push
xlat
cmpsb
mov
loop
and
pop
imul
sahf
xor
fsubrs
daa
mov
clc
outsb
lds
sub
xor
inc
ljmp
cmp
pop
jmp
jbe
push
push
ja
sbb
xchg
dec
sub
lcall
jo
jb
imul
out
fldt
loope
xlat
xchg
cmp
add
mov
push
push
mov
xchg
push
xchg
mov
mov
call
arpl
shlb
dec
mov
fdecstp
lea
mov
pushf
xor
mov
push
add
push
js
and
cmc
test
mov
add
rcll
xchg
and
cmpsb
mov
notb
imulb
adc
sub
popa
popf
clc
pop
xor
std
stc
cwtl
scas
cmc
movsl
sub
mov
je
js
dec
hlt
push
sbb
xchg
cmpsl
push
out
xchg
pop
mov
mov
xchg
xlat
das
mov
gs
test
fisubl
xor
loope
int3
in
mov
inc
mov
sbbl
mov
fidivs
lds
mov
or
inc
mov
mov
mov
mov
mov
cltd
add
add
cmpl
or
inc
xor
mov
pop
fnsave
into
push
icebp
inc
pop
xor
xor
int3
cs
push
sbb
xor
jb
js
test
pop
data16
bound
bound
pop
fwait
stos
push
ljmp
xchg
dec
mov
subb
push
dec
movsb
int
mov
ss
sub
stos
shll
stos
jge
je
cwtl
push
je
fcmovnu
add
xor
pop
mov
mov
xchg
cmp
dec
xchg
outsb
jg
xor
out
xor
push
test
call
jne
jns
xor
inc
outsb
pop
push
pop
ss
lahf
xor
sbb
dec
bound
data16
sbb
xorb
rorl
push
xor
dec
xchg
mov
push
push
mov
inc
jne
loope
and
js
insb
movsl
cmp
cmp
pop
lahf
aas
ret
rcll
cli
push
cli
mov
fcoms
dec
or
rclb
popf
push
xchg
jp
cmc
popa
jo
iret
les
lds
xchg
int
ret
in
jns
mov
cmpsl
cmc
or
add
lcall
ja
cmpsb
js
jnp
inc
int
call
or
aaa
dec
imul
mov
js
je
movsb
dec
loope
scas
and
mov
adc
ljmp
and
pop
into
dec
repz
jns
xor
push
push
iret
cmp
lea
xchg
jns
mov
xor
out
lods
test
inc
fwait
sub
push
or
jo
fidivl
imul
add
push
ret
push
add
mov
push
test
mov
adc
fisubl
fs
xchg
inc
data16
cmpsb
mov
in
add
or
clc
dec
mov
mov
jns
or
addr16
mov
dec
jecxz
or
stos
fwait
xorb
mov
lds
rcrb
adc
cmpsb
jl
dec
push
jno
jp
jecxz
call
in
shl
and
push
es
jnp
ret
xchg
jo
inc
in
ffree
push
data16
pop
or
mov
je
and
xor
mov
push
fists
xchg
dec
xchg
ds
adc
dec
into
subl
test
xor
xchg
cmpsl
sbb
daa
scas
mov
push
enter
fsubrp
sbb
inc
pop
insb
add
cmp
mov
and
jnp
inc
push
and
call
das
ret
push
lods
jmp
xchg
cmc
mov
push
mov
and
packssdw
add
idivl
add
pop
cmp
test
sahf
incb
das
add
push
lods
and
adc
push
ds
push
bound
dec
mov
sbb
stos
inc
shrb
inc
jae
bound
fsubl
imul
mov
aas
mov
cwtl
mov
scas
outsl
and
xchg
push
xor
xor
ds
sub
cmp
pop
dec
inc
icebp
stc
cmp
dec
pop
out
jg
pop
pushf
inc
sbb
sbb
scas
sahf
mov
mov
mov
lds
dec
arpl
cltd
inc
jae
mov
stos
or
adc
inc
xchg
add
mov
pop
mov
adc
or
das
lret
push
rcrb
ljmp
jge
lcall
notl
divl
lahf
idiv
xchg
push
inc
in
or
push
xor
es
push
or
int3
mov
xchg
andb
call
or
and
adc
in
xor
test
push
or
mov
adc
or
imul
cltd
jl
fdivs
push
lods
enter
into
jmp
dec
fisttps
jmp
scas
sub
inc
jno
jbe
jecxz
lret
daa
push
mov
add
pop
jmp
sbb
sub
repnz
test
repz
push
in
fsubr
push
lods
psubd
filds
es
outsb
xchg
pop
nop
roll
sub
pop
ja
jle
mov
inc
push
jb
lret
dec
in
add
mov
push
aas
mov
sbb
sbb
fdivl
pop
sub
fsubrl
scas
sti
fnstcw
and
adc
daa
xchg
mov
bound
sti
outsb
sbb
sbb
in
or
incl
fmul
xor
and
clc
pop
fwait
lcall
jno
sbb
jle
daa
mov
mov
arpl
push
ljmp
in
add
xorl
cmp
rcrl
and
push
test
dec
inc
bound
xchg
out
outsb
popf
cs
xchg
xor
aam
xlat
mov
cmc
xor
and
int
or
jbe
dec
in
sbb
dec
push
adc
add
test
push
push
popf
dec
in
pop
inc
jae
push
daa
jge
inc
push
xchg
and
out
in
xchg
insb
mov
lds
into
lret
popf
mov
jmp
jnp
lock
int3
mov
ljmp
add
jb
mov
sbb
jno
imul
hlt
inc
xchg
dec
push
push
in
imul
ss
fwait
cmpsl
jl
arpl
cmp
pop
xchg
add
loopne
ds
inc
fnstsw
les
pop
lods
add
ja
jecxz
and
xchg
iret
dec
pop
add
addr16
dec
and
adc
sub
lret
jecxz
jp
into
fisubrl
jns
aad
es
mov
jmp
mov
cmp
popf
cli
xchg
add
loopne
xchg
pop
int3
xrelease
push
in
aaa
out
pop
jle
sub
mov
jmp
or
andl
pop
mov
loope
daa
sbb
sub
add
test
test
pop
cmpsb
xchg
lcall
sub
movsl
in
enter
call
push
mov
xchg
clc
pop
icebp
cltd
pushf
mov
lods
cwtl
test
mov
rcrb
sbb
cld
lret
ja
cmp
int
sbbb
imul
adc
imul
dec
enter
cmp
inc
pop
ja
ss
push
push
test
xchg
cmpsl
das
adcl
les
cmp
sub
mov
in
push
push
repnz
lcall
pop
out
mov
mov
sbb
pusha
sbb
push
xor
pop
fwait
jbe
dec
rcl
sbb
shrd
mov
shll
ss
movsl
lcall
mov
movsl
cs
movsb
xchg
mov
sub
sahf
xchg
repz
hlt
adc
push
clc
inc
ljmp
xor
pop
lods
push
sub
cmp
xor
dec
cmpsb
push
fcmove
push
push
daa
fldcw
push
repnz
or
sub
mov
xlat
xchg
sub
pusha
movsl
inc
mov
fidivs
jb
lods
cmp
dec
jnp
int3
fbld
xchg
xor
pop
popf
and
xchg
js
shrl
insb
pop
sti
iret
xlat
test
pop
jle
lock
fxch
mov
push
jns
ljmp
lret
inc
inc
mov
xor
jge
fstps
inc
mov
lods
pop
or
lods
icebp
jnp
movsl
ret
daa
outsl
cmc
pop
insb
mov
mov
sbbl
inc
inc
lret
aas
jge
hlt
or
lods
mov
pop
jge
lods
js
subl
nop
loop
dec
xchg
push
and
mov
rol
pop
out
stc
bound
sbb
ret
pop
push
out
push
inc
cld
jae
outsb
clc
sub
push
out
out
and
lret
stos
rclb
mov
xchg
iret
data16
add
jb
push
test
pusha
leave
jmp
rcrl
fmul
into
or
add
cmp
call
fidivrl
add
ljmp
jnp
out
jge
std
push
js
push
ficoml
xchg
ret
les
loopne
sub
sbb
dec
sbb
lgdtl
mov
mov
pop
in
mov
dec
mov
mov
mov
int3
dec
mov
sahf
push
lods
inc
jne
iret
push
sbb
inc
sub
out
lret
or
das
xor
jnp
sbb
or
jg
inc
add
mov
dec
popa
enter
lcall
inc
clc
enter
add
ljmp
repnz
into
rcl
das
or
sbb
stc
mov
lds
xor
cmp
test
outsb
push
test
sbb
jnp
cmp
or
mov
sbb
adc
aad
or
ret
sti
enter
call
imul
add
sarl
loopne
enter
dec
fidivrs
push
dec
sub
negb
shrb
hlt
xorb
cmpsb
adc
adc
arpl
dec
mov
sbb
or
xchg
ds
scas
push
ret
jno
inc
sub
dec
inc
pop
jg
scas
xor
aas
add
sub
xchg
shll
pop
aam
mov
or
cltd
jo
adc
pusha
xor
das
inc
test
push
lahf
xchg
mov
jb
dec
jl
push
cmpsl
leave
push
sbb
repz
lock
xchg
jmp
mov
or
inc
push
sti
cmpsb
rcr
je
jno
sub
push
cmp
cs
ja
fldt
ret
sar
call
jecxz
mov
pop
push
mov
insb
mov
pop
push
dec
fisttps
cld
sbb
mov
in
mov
xchg
mov
fwait
jbe
xchg
lcall
mov
inc
push
mov
mov
fnstsw
mov
leave
cwtl
xor
repz
sub
push
or
pop
xchg
sub
dec
mov
aas
or
mov
out
cmp
pushf
xchg
dec
xor
fld1
mov
out
mov
lock
pop
cmp
and
sarl
pop
cmp
test
mov
fstpt
sbb
imul
lods
out
and
ds
cmp
jmp
mov
xorb
orb
aaa
cmp
mov
jb
andl
jecxz
into
mov
sbb
ss
pop
lds
sub
adc
mov
inc
cmpsl
pop
mov
mov
imul
iret
cmpsb
mov
mov
test
mov
push
pop
adc
lahf
jp
mulb
fdivl
sbb
lcall
repz
popa
ds
add
xchg
divl
scas
mov
pop
aad
out
push
dec
fsubp
mov
fidivs
popa
or
mov
and
push
adc
int3
or
fwait
in
rol
loop
sysexit
xlat
and
dec
dec
data16
addr16
dec
cmp
mov
xchg
sub
ret
popa
xor
sahf
test
fsubrl
and
add
cmp
fwait
adc
movsl
divl
jne
movl
div
loopne
loop
xchg
nop
dec
add
imul
jno
enter
jg
in
insb
xor
pop
mov
inc
clc
daa
pop
dec
fiadds
arpl
cmp
loopne
hlt
inc
pushf
stos
insl
cmpsb
ret
aas
push
in
or
addr16
pushf
dec
sub
cwtl
mov
lds
ljmp
inc
movl
dec
fdivrs
scas
pushf
or
cmpsl
push
jmp
rorl
dec
loope
dec
daa
adc
add
push
xor
sbbl
out
mov
xchg
add
out
inc
out
pop
adc
shlb
enter
adc
out
std
rcll
mov
fsts
jbe
stos
sti
xchg
fdivr
sub
stos
sbb
loop
ret
cmp
mov
and
sub
jp
add
shlb
les
icebp
push
inc
fldenv
shlb
mov
enter
mov
std
mov
in
in
push
ret
ret
sub
into
mov
mov
pop
popf
sbb
in
cwtl
icebp
sub
insb
jle
xorb
dec
or
shlb
push
push
call
mov
push
sbb
xorb
loope
idivl
in
loopne
adc
push
out
test
jnp
push
mov
add
cmp
fsub
mov
xor
out
inc
xchg
cmp
in
mov
or
sbb
outsb
dec
lea
dec
add
call
inc
cld
pop
xchg
mov
std
jmp
push
push
jo
inc
mov
clc
leave
cmp
adc
and
js
mov
sbb
pop
adc
sbbl
mov
lcall
lea
sti
aaa
mov
mov
add
jne
or
movhlps
mov
mov
bound
dec
mov
ret
shl
in
lds
mov
jae
add
scas
xchg
jg
fwait
in
adc
movsl
cmp
sbb
pop
js
imul
repnz
out
sbb
les
cmp
les
fmull
or
xor
add
in
pop
xchg
scas
lret
out
lcall
add
mov
sub
and
fbstp
and
xchg
mov
sbb
and
inc
cmp
push
mov
bnd
inc
movsb
adc
test
cvttps2pi
mov
loope
rcll
pop
jo
jp
xchg
in
push
mov
or
fwait
rolb
cwtl
fwait
pop
repnz
jp
mov
or
mov
rolb
jb
fimuls
je
call
xlat
scas
add
jmp
add
mov
cmpsb
adc
push
xchg
pushf
jg
xor
jg
push
mov
mov
les
mov
movsl
xor
in
clc
test
ja
lods
in
dec
cmp
pop
jp
hlt
outsl
dec
pop
fistps
fidivrs
mov
mov
or
mov
mov
mov
adc
shlb
aad
or
frstor
pop
call
scas
mov
inc
test
cmc
je
cmp
push
mov
mov
xor
xlat
push
lret
jge
sub
and
rcrl
std
push
out
and
mov
std
sub
nop
pop
sub
pop
jb
push
and
hlt
aas
pop
push
mov
jecxz
je
push
mov
jl
test
shll
jle
push
pop
cmp
or
jl
push
pop
adcl
jns
outsb
inc
inc
popf
test
xor
mov
lock
inc
mov
outsb
mov
mov
ret
cmpsl
or
frstor
xchg
sbb
mov
dec
cmc
es
insl
lods
dec
pop
or
jb
jge
lods
mov
rolb
repz
fdivr
pop
cmp
push
movsl
icebp
outsl
dec
rol
popf
insb
or
jle
push
flds
mov
xor
out
es
test
out
inc
or
mov
mov
cltd
lahf
call
insb
jae
push
vmovaps
jns
pop
rorl
fiadds
mov
fiaddl
lret
bound
bound
xchg
pop
fsubrp
stc
shrb
or
repz
xchg
fs
pop
shrl
cmc
mov
cmpsl
mulb
mov
add
js
in
or
test
jns
add
mov
test
outsl
and
dec
sahf
push
push
jno
or
adc
fidivrs
rcrb
fists
mov
or
jl
pop
addr16
stc
test
inc
into
insb
ret
or
jo
je
dec
in
lds
pop
sub
je
cld
sbb
jmp
push
and
shrb
dec
cmp
xor
mov
or
outsl
daa
pop
inc
jnp
lock
jle
mov
in
push
push
leave
sbb
push
cwtl
jmp
inc
sub
out
dec
lea
ficompl
arpl
and
jge
jno
push
dec
mov
inc
ret
call
and
je
std
test
std
mov
mov
mov
leave
cli
sub
mov
movsl
repnz
mov
xchg
mov
xor
loopne
mov
push
mov
lods
inc
in
ljmp
loopne
int3
pop
inc
lds
fcomps
movsl
cmp
and
cmc
dec
cmp
lea
in
and
les
insl
push
and
insl
fnstenv
test
push
pop
lds
fsubrs
pop
cmp
ljmp
test
imul
fisubrs
adc
imul
xchg
pop
cmc
in
xor
out
add
cmp
popa
stos
or
cld
adc
mov
and
loop
cmc
fucomi
push
dec
push
jns
or
xchg
sub
testb
or
aam
add
data16
dec
sbb
xor
cmp
sbb
stos
imul
or
pop
js
insl
add
push
pop
or
ds
notl
ret
push
movsl
ja
adcb
xchg
push
outsb
cmc
mov
pop
mov
add
test
je
mov
ret
sbb
push
out
les
cli
ljmp
stos
sub
inc
dec
imul
iret
ret
inc
add
push
mov
jmp
cmp
int3
sbb
xorb
lock
dec
aas
add
or
addr16
fistl
dec
fnstcw
jnp
shll
dec
subb
imul
lret
mov
and
sbb
insl
inc
insl
call
or
xchg
fisubrs
jecxz
mov
out
add
dec
mov
cmp
jge
mov
mov
shll
fcoml
or
mov
adcb
pop
test
cmpb
mov
and
add
jns
push
xlat
dec
adc
andb
jl
mov
jb
pop
into
in
dec
dec
dec
cld
ss
mov
pop
sub
int
sub
loope
lret
xlat
or
dec
sbb
js
dec
gs
call
add
lock
cwtl
mov
lret
fcmovb
movsb
pop
orb
repz
adc
xor
ficoml
and
push
in
pop
fadds
or
jae
mull
mov
popf
cmp
sbb
mov
loop
push
sti
adc
mov
jbe
inc
in
xlat
adc
inc
out
scas
lods
jmp
hlt
sbb
cmpsb
dec
mov
or
mov
shlb
mov
dec
bnd
sub
mov
inc
cs
jb
subb
lods
and
ds
test
ds
dec
pop
fisubl
and
xor
sub
mov
sbb
dec
xchg
test
xlat
mov
or
dec
xlat
rol
pop
mov
int
daa
arpl
pop
int
out
test
sbb
xchg
mov
fsub
sbb
xor
push
xchg
decl
hlt
dec
cmp
icebp
into
gs
xor
sub
leave
int
faddl
dec
jno,pn
inc
mov
xor
dec
dec
test
push
jns
or
ret
and
rol
mov
ret
mov
push
adc
pop
mov
mov
inc
adc
xor
aas
ljmp
xchg
mov
pop
xchg
jg
sub
or
aad
push
daa
mov
cmp
addr16
jne
ds
cmp
pop
pop
cmp
pusha
les
cmp
divl
and
jae
mov
xchg
popa
pop
and
sub
fnstenv
add
clc
mov
cmpsl
inc
lock
fdivs
div
xchg
outsb
mov
addr16
push
xor
add
arpl
mov
sbb
push
pushf
pusha
jo
popf
cmpsl
push
xchg
xchg
pop
mov
or
sbb
aas
addr16
pop
push
dec
xchg
pop
dec
push
inc
and
fnsave
add
test
sub
sbb
pop
inc
gs
pop
out
loop
push
repnz
cmc
das
adc
pop
enter
into
mov
mov
ja
mov
jns
in
xchg
xor
cs
fwait
sub
lea
fdivs
sub
lods
subl
test
mov
cs
sub
ret
pop
cld
outsl
pop
pop
bound
jp
xor
dec
lcall
mov
fstl
mov
cs
sarb
lret
cmpb
das
cld
outsl
lea
sbb
sbb
fmull
movsl
das
dec
add
rol
xor
pushf
xor
mov
mov
xchg
push
jg
push
mov
jb
test
dec
out
cmp
cli
call
jl
mov
lea
jecxz
test
xchg
xor
sub
cs
cmp
inc
mov
nop
hlt
inc
divl
pop
ds
mov
cmc
out
addr16
lret
add
loopne
add
sub
xchg
outsl
and
or
inc
dec
adcl
or
cmc
dec
dec
popa
xor
adc
cmp
xor
mov
std
pop
xor
shrb
or
lcall
out
dec
ljmp
into
cmp
jnp
pop
insb
arpl
dec
jle
lret
xor
aas
jnp
push
in
rolb
xchg
fwait
repz
mull
cmc
jge
adc
scas
xchg
push
pop
dec
mov
jns
inc
cmp
and
popl
xor
std
sbb
cmc
mov
dec
pop
test
loope
dec
fbld
in
ja
scas
test
insl
ja
lods
addb
outsl
xchg
and
xchg
pop
xor
inc
or
push
outsl
dec
cmp
stos
xchg
xor
pushf
andl
cmp
pop
jne
int
sahf
lahf
ss
lods
outsl
fs
mov
ja
icebp
xchg
sbb
and
xchg
add
xor
mov
js
in
sub
jbe
cmp
gs
adc
and
mov
jecxz
push
xlat
in
add
sbb
sub
push
add
pop
outsb
add
and
mov
sbb
stos
clc
outsb
gs
push
rcll
pop
lret
fmul
pop
mov
mov
stos
clc
xchg
or
mov
mov
mov
rcll
jge
testl
cltd
out
cltd
and
sbb
movsl
pop
iret
jecxz
cmp
scas
sbb
push
pushf
mov
or
mov
mov
test
enter
idivb
scas
inc
sub
dec
mov
addl
in
ret
sbb
dec
mov
ret
test
push
jae
std
outsb
jbe
popf
inc
popf
stos
pop
jg
out
or
sub
xchg
add
test
testl
push
enter
loopne
push
push
push
outsl
loop
int3
fnstsw
sarb
push
mov
mov
sbb
cwtl
ja
mov
xchg
adc
adc
es
push
mov
or
gs
jl
dec
cmp
push
pop
out
mov
dec
mov
mov
dec
jmp
xor
shlb
xchg
jge
mov
loopne
outsl
xchg
cwtl
pop
cmc
pop
dec
dec
aad
xor
pop
out
fsubr
fdivr
pop
test
adc
icebp
mov
int3
jae
pop
xchg
in
adcb
pop
sbb
cmp
sbb
es
pop
cmp
sbb
insl
inc
aaa
mov
jg
adc
out
dec
adc
ss
loop
mov
cwtl
pop
repz
sub
xchg
jge
inc
rcrb
int3
in
ja
mov
xorl
sbb
mov
xchg
je
jne
pop
lret
addr16
clc
hlt
mov
and
push
push
test
clc
dec
push
shr
outsl
shrb
js
push
lahf
pop
ljmp
ja
in
pop
jmp
cmp
fwait
or
pop
jge
aad
aam
bound
lret
filds
cmp
push
mov
jae
xchg
and
scas
outsb
ret
hlt
dec
inc
stos
push
cmp
faddl
test
xchg
jne
into
notl
xchg
adc
xor
std
call
dec
mov
lret
mov
sub
int3
xor
xchg
add
mov
cmp
mov
xor
in
cmp
int
sbb
lret
inc
sbb
pop
loope
push
out
mov
insl
aam
ja
adc
frstpm(287
pop
cmc
loope
stos
test
xor
adc
cmp
adc
lret
clc
aaa
iret
imul
idivb
leave
adc
ret
insb
ds
push
lcall
sbb
mov
mov
or
nop
mov
mov
sub
mov
aaa
outsl
mov
cmp
add
mov
repz
add
nop
push
fwait
pop
ret
call
rcrb
fisubrs
and
hlt
test
mov
lods
lea
xor
rcrl
dec
daa
sub
jl
clc
mov
cmc
push
lahf
add
jle
sub
rcrl
call
icebp
push
in
stos
cmp
and
xlat
fsubl
add
mov
imull
movl
or
fwait
jp
dec
sub
sub
push
lods
mov
shr
jmp
inc
dec
call
xor
inc
gs
into
scas
lods
cmpsl
js
popf
mov
repz
jae
jb
adc
lods
jmp
cld
mov
cmp
shr
inc
dec
sarb
add
add
fwait
movsb
je
adc
push
insb
stc
gs
push
dec
mov
vmread
or
mov
lret
or
xorb
in
ss
jmp
jg
mov
aam
aaa
adcl
cmp
jns
aam
inc
jo
add
pop
sbb
sbb
orb
mov
loope
dec
push
adc
lods
inc
jae
loope
xor
sub
push
jbe
mov
pop
scas
dec
je
cmp
jo
xlat
jg
jo
andb
add
outsb
sub
jno
outsl
xchg
cltd
inc
enter
sub
xchg
lcall
cmpsl
ds
jo
popf
jae
mov
adc
mov
push
pop
mov
lock
xor
pop
xor
and
push
in
dec
inc
lock
push
mov
testb
xchg
adc
push
dec
fnsave
insb
jge
xor
push
xor
mov
loopne
jecxz
inc
jo
fs
loopne
xchg
lods
push
daa
pop
mov
pop
add
addr16
xchg
and
jecxz
loop
test
cmp
in
jnp
jmp
ds
sahf
scas
divl
shr
dec
xchg
jbe
add
loop
pop
fildl
inc
and
xchg
movsb
lret
sub
push
xchg
es
lods
das
add
adc
pusha
adc
jne
push
loope
sbb
adc
fwait
gs
std
je
mov
rcrb
or
jg
out
dec
and
sti
imul
repz
and
pop
cmpb
and
out
gs
xor
movsl
rcrb
pop
lret
shrb
push
push
notl
mov
add
call
cld
xchg
lock
lret
pop
dec
dec
movlps
addb
cmp
adc
in
jnp
adc
sarl
dec
mov
push
add
jp
pop
pop
dec
jecxz
call
push
add
push
or
and
mov
inc
sbb
push
cmpsb
or
xchg
jne
fbld
push
and
shll
cmp
movsb
add
mov
pop
and
push
mov
push
in
xchg
pop
mov
and
fnsave
mov
lcall
in
adc
cmp
subb
jno
fistpl
or
fdivr
stos
add
xchg
lret
and
push
add
les
cmp
jmp
aad
pop
jne
ret
jp
and
pop
mov
popf
xor
out
aaa
xchg
pop
js
aam
in
mov
cmp
aaa
and
xor
mulb
sti
mov
dec
adc
jge
pusha
mov
sti
sub
xlat
jb
adc
aaa
movsb
mov
xchg
icebp
push
in
imul
pop
jnp
add
add
cltd
pusha
and
ss
je
add
sub
sbb
mov
shlb
jmp
dec
sbb
or
pop
mov
mov
cwtl
filds
cmpsb
add
mov
jns
rol
mov
jo
jecxz
ss
and
outsb
cltd
mov
mov
lock
pop
bound
outsb
rol
mov
push
adc
sbb
jne
mov
and
push
add
test
into
in
xor
icebp
ja
mov
sbb
pop
icebp
fmul
bound
push
test
andl
push
jmp
hlt
mov
rclb
loop
xchg
or
jge
adc
adc
outsl
jg
popa
cmpsl
scas
dec
xchg
pop
insb
scas
mov
rorb
mov
rorb
jle
pop
insb
or
push
jmp
movsl
mov
gs
push
enter
sub
sub
jle
jnp
push
lds
add
mov
xchg
pusha
fmul
pop
inc
je
mov
jbe
sub
cld
mov
or
sahf
rcrl
insb
mov
push
nop
adc
lahf
mov
mov
and
push
dec
push
mov
jbe
shrl
sti
movsl
test
pop
jge
push
add
lret
sub
adc
loopne
mov
dec
cli
jg
jns
jmp
mov
andl
das
movsb
repnz
dec
scas
andl
std
imul
outsl
pop
jb
shlb
iret
jno
xchg
dec
in
pop
in
popf
pop
jecxz
inc
lcall
add
shll
add
dec
dec
or
jp
mov
pop
lods
add
daa
xchg
pop
ds
sbb
test
push
daa
fdivs
push
fdiv
out
or
popf
xor
xlat
inc
stos
mov
out
test
dec
leave
xor
fcmovu
arpl
mov
fisttpl
stos
or
repz
in
cltd
lock
mov
mul
jecxz
adc
movsl
sbb
mov
sub
pop
dec
jae
je
sub
outsl
outsb
inc
sbb
mov
ja
dec
push
xchg
dec
sti
lods
lods
pop
rorl
add
pushf
sub
or
pop
xchg
mov
inc
push
xor
or
iret
jne
mov
jae
or
lahf
mov
loopne
mov
gs
cmpsb
das
pop
mov
jne
sub
inc
test
lret
cld
adc
xchg
lret
mov
out
repnz
adc
imul
inc
inc
mov
lret
lret
xor
ror
xor
test
stos
cmp
push
jle
pop
jb
lea
aam
aam
aas
sbb
inc
push
push
inc
test
push
mov
out
int
lods
lcall
imul
add
inc
mov
xchg
cwtl
mov
cmpsb
mov
pop
xor
add
mov
cmp
fucomip
ljmp
adc
inc
inc
fsubrl
sbb
jp
arpl
jg
sbb
push
gs
inc
mov
pushf
orb
jmp
inc
jnp
add
add
mov
dec
cmp
pop
sbb
jno
and
xor
test
push
push
sbb
push
insl
add
pop
sub
jp
mov
and
in
pop
xchg
push
mov
cmp
xchg
cld
pop
cmpb
xchg
dec
loop
cs
in
iret
cmp
cmp
sbb
dec
insl
dec
cmc
xchg
jg
xchg
and
cmp
mov
fcoml
sahf
fsubrl
pop
insl
or
mov
adc
and
jmp
movsl
or
xchg
gs
mov
ret
imul
push
in
fildl
mov
dec
loope
jg
daa
jecxz
cmp
mov
test
xchg
fildl
xor
into
enter
aas
int3
aaa
shrl
pop
add
arpl
js
push
pop
add
insl
cvttps2pi
enter
sbb
dec
in
imul
sbb
jnp
clc
pop
mov
mov
popa
into
push
push
mov
mov
mov
ret
pop
sbb
sbb
jge
cltd
dec
jno
int
sub
and
cmpsb
cwtl
xlat
inc
push
fnstenv
mov
cmovs
dec
jmp
pop
push
mov
xchg
jle
and
xchg
sub
xor
adc
in
mov
inc
xor
dec
movsl
jl
clc
and
pop
cmpl
in
test
xor
sbb
push
das
push
shrl
jmp
leave
sub
push
push
inc
je
mov
addr16
mov
movsb
mov
mov
xor
mov
jmp
mov
adc
push
add
jmp
or
pusha
clc
bound
ret
bound
xor
call
or
and
jne
inc
mov
sbbl
mov
adc
je
push
std
fsubs
pop
dec
pop
inc
lods
mov
in
imul
inc
sub
ss
movsl
jl
sbb
mov
add
mov
les
mov
jmp
or
mov
cwtl
sbbl
hlt
mov
pushl
sub
clc
movsb
loopne
cli
sub
mov
out
js
fcoms
test
cmp
inc
jecxz
rcrb
rorl
dec
pop
outsb
jnp
loopne
cs
das
adc
add
sub
and
cmc
dec
sbb
rclb
dec
add
out
sub
xchg
pop
fwait
sub
adc
push
fidivrl
pop
lock
mov
popf
test
insl
notb
mov
das
sarl
mov
jge
adc
xchg
inc
lods
js
fidivs
lcall
unpcklps
imul
subl
rclb
push
ffree
fistl
mov
fs
cwtl
mov
shlb
sub
test
fsubrs
fidivrs
mov
fists
stos
or
mov
hlt
pushf
adc
enter
cmp
shrl
insb
jle
jns
enter
inc
imull
xor
add
xlat
fisubrl
cmp
dec
gs
xchg
insl
mov
xor
outsl
inc
les
fld
cs
popa
scas
sarb
outsl
aas
or
shl
pop
arpl
stos
test
push
out
clc
cmp
dec
loope
mov
mov
cmp
lods
test
sbb
rcrb
or
sub
rcrb
pop
sub
bound
cmp
insl
sbb
jecxz
and
gs
xchg
jge
sub
mov
mov
inc
inc
mov
mov
pop
in
mov
sub
and
loope
add
cs
arpl
xchg
into
sub
jns
mov
dec
aam
aam
mov
mov
arpl
lods
rolb
je
hlt
and
inc
jnp
mov
ret
xor
addr16
shlb
dec
add
push
fisubl
notb
out
and
dec
add
xchg
push
add
cmp
push
jb
aam
inc
scas
nop
sets
sahf
mov
cli
mov
mov
enter
push
push
nop
add
sbb
mov
mov
cld
setno
fimuls
data16
fstl
sub
in
sub
mov
test
inc
jl
data16
and
loopne
mov
stos
mov
push
test
loope
das
dec
pop
stos
and
cmp
pop
fwait
cs
adc
jbe
mov
pop
xor
lret
jo
inc
pop
enter
mov
popa
mov
push
enter
jno
stos
out
push
sbb
xorb
sbb
sub
dec
push
sub
fisubs
int3
xchg
pop
xchg
ficomps
jb
popf
ficomps
cmpl
dec
in
jp
mov
imul
jb
leave
cmpsl
test
and
cmp
push
std
sbb
inc
dec
loop
xchg
xchg
aam
in
mov
jb
clc
or
inc
out
out
adc
pop
adc
mov
ret
mov
adc
pop
fldcw
sbb
add
inc
push
dec
loop
xor
in
ds
mov
jmp
jle
pop
cmp
inc
in
fsubs
mov
loop
jns
xchg
add
jge
add
push
mov
les
test
jne
sub
adc
stc
push
add
adc
mov
cld
sbb
mov
mov
jbe
lds
lock
mov
jge
sub
ss
pop
and
inc
fwait
lock
mov
jp
mov
mov
mov
and
aam
lcall
fwait
testb
shrb
jns
adcl
pop
push
inc
fxch
or
in
sbb
lods
insl
dec
cmc
pusha
sahf
dec
lods
jmp
xor
shll
into
add
dec
xchg
cmp
shr
push
add
xor
lahf
lods
adc
inc
dec
mov
sahf
push
xlat
stos
cmp
fidivrl
add
sub
adc
add
mov
sti
or
outsl
lret
and
fcoml
mov
inc
ss
dec
int3
dec
in
scas
loope
or
call
arpl
and
outsb
cli
push
xlat
mov
mov
loope
cli
mov
sahf
std
lods
xor
add
mov
cltd
push
cmp
push
mov
cld
mov
push
inc
imul
aad
adc
js
adc
inc
add
jbe
xorl
ret
jns
enter
jns
in
sbb
push
mov
out
imul
or
ja
ss
sbbl
jp
fimull
ret
dec
push
lock
and
cwtl
das
imul
or
lea
inc
mov
je
sbb
rcr
imul
lock
mov
std
cmp
adc
push
dec
fcoml
je
shrb
pop
insl
push
mov
cmp
mov
mov
repnz
xchg
imul
and
es
fcoms
mov
cmp
insb
hlt
lret
movsb
cmp
test
or
mov
mov
push
popl
add
subl
jg
jno
mov
adc
mov
negb
pop
or
in
cmp
rcll
je
cwtl
popf
lods
leave
xlat
out
cli
mov
jg
sub
fidivl
data16
lock
and
rcr
je
jmp
out
mov
cmp
clc
xchg
cli
mov
inc
loop
das
dec
fnsave
jp
mov
fcoml
mov
mov
or
lea
add
pushf
xor
test
cltd
das
repz
cld
xor
sbb
subl
aam
inc
push
imul
adc
shll
fwait
in
add
adc
add
lcall
into
dec
jns
outsl
aas
fdivs
popf
add
sub
mov
or
and
xchg
es
cmp
push
enter
push
stos
imul
negb
push
add
mov
jbe
int3
into
fs
bound
and
mov
std
xchg
push
icebp
sahf
ss
mov
add
pop
adc
inc
loope
aam
hlt
xchg
cmc
or
and
push
cmpsb
insb
xchg
add
imul
and
fucomip
cld
jnp
decl
lods
call
or
cmp
lcall
pushf
push
rolb
test
fidivs
gs
int3
inc
push
inc
je
xchg
adc
mov
pop
and
jno
cmp
push
jge
jg
xor
pop
out
rolb
ja
mov
fisubl
cmp
cltd
mov
shll
push
arpl
ljmp
addr16
xchg
cmpsl
cmp
movsb
and
ret
push
push
lods
add
ljmp
scas
nop
loopne
sahf
lods
inc
aaa
sub
sub
faddl
loope
pop
pushf
scas
inc
fdiv
mov
ds
jns
ret
dec
aam
mov
mov
dec
or
popa
dec
xchg
and
and
stos
and
sub
idivb
pop
push
xchg
pop
xorl
sub
leave
xor
xchg
adc
or
mov
adc
push
dec
out
sub
inc
mov
mov
add
test
aam
mov
stos
jnp
pop
fidivs
mov
mov
inc
inc
and
push
in
mov
cltd
fsubrs
mov
pop
adc
sbbl
aas
mov
insl
cli
mov
es
and
pop
cmp
loope
sbb
nop
push
ret
and
inc
or
inc
lea
sub
sbb
dec
mov
imul
loope
push
push
pop
testb
jge
mov
arpl
and
add
ljmp
push
rol
sub
jg
js
jmp
aaa
fidivl
in
or
scas
xor
addr16
lcall
cwtl
push
in
or
xor
xor
mov
lods
mov
or
cmp
loope
fidivl
inc
push
add
jmp
arpl
sarl
pop
popf
mov
data16
push
push
out
mov
dec
and
int3
fidivrs
jae
out
sub
aad
xorb
dec
out
mov
mov
ds
inc
cmpsl
jbe
call
jl
add
clc
test
call
inc
jns
arpl
fbstp
sbbl
or
and
push
lcall
in
or
xchg
in
push
aaa
sti
inc
es
mov
mov
inc
dec
jbe,pt
cmp
sbb
push
fwait
arpl
dec
cmpl
ljmp
stos
push
jbe
push
xchg
xchg
dec
in
lcall
insl
fsubrs
inc
cmp
and
jo
jmp
pop
std
adc
andb
cwtl
mov
mov
xorl
arpl
data16
popl
daa
and
fiaddl
xchg
sti
mov
arpl
scas
pop
cmp
add
dec
loope
aaa
mov
imul
mov
lds
mov
cmp
sub
inc
aas
mov
jmp
xor
add
xchg
inc
fdivp
push
lock
pop
fdiv
mov
stos
push
mov
jbe
jge
addb
mov
xor
jecxz
xchg
adc
out
shll
sbb
xchg
cmc
pop
mov
mov
cmp
dec
adc
lods
mov
xchg
scas
mov
es
jb
push
cmp
cmp
dec
out
push
clc
daa
mov
adc
scas
test
jae,pn
cmp
test
cmc
filds
sub
mov
or
mov
fs
dec
test
andl
or
clc
sub
insb
xor
stos
sbb
dec
add
and
aas
outsb
jmp
ret
lea
mov
shrl
add
xchg
sub
aas
sbb
cmp
rcl
mov
adc
lds
std
outsl
inc
stos
push
cmc
push
mov
mov
dec
jg
and
mov
nop
xor
cwtl
sbb
clc
pushf
dec
out
iret
das
imul
add
loopne
out
test
xor
or
repz
imul
mov
pop
insl
mov
pop
xchg
shrb
add
mov
jge
ss
das
arpl
sub
stos
dec
je
fstps
push
push
add
adc
jg
cwtl
mov
data16
movsl
mov
idiv
addl
push
xor
mov
ja
push
mov
pop
andl
leave
rorb
lcall
scas
cmp
negb
out
test
lea
or
jl
loopne
and
dec
bndstx
int3
into
or
imul
dec
pop
add
and
aad
cmp
sbb
sub
xchg
imul
add
dec
into
sarl
and
mov
dec
mov
enter
pop
adc
mov
pop
outsl
inc
sub
fmuls
jle
in
stos
pop
sub
aad
and
daa
sbb
mov
repnz
in
enter
dec
xchg
loopne
add
leave
jmp
mov
sub
sub
outsl
xchg
int
call
cmp
stc
test
ret
mov
and
lods
or
daa
fmuls
stos
xchg
push
cmp
add
xor
or
lcall
xor
or
ds
jmp
lds
cmp
dec
test
push
jno
or
or
adc
hlt
dec
pop
sub
outsb
jle
jp
mov
mov
test
inc
fstpt
lcall
adc
shl
jno
pop
mov
fisubrl
and
mov
xchg
jmp
or
and
popa
xor
je
cmpsl
jecxz
push
sbb
outsb
mov
gs
inc
push
push
inc
ja
icebp
movsl
mov
hlt
pop
push
mov
jg
cs
sbb
and
add
scas
test
insb
outsb
adc
mov
scas
cwtl
iret
inc
fstpt
bnd
cltd
jle
and
jbe
mov
adc
or
inc
mov
xchg
icebp
mov
dec
test
mov
xchg
bound
pop
mov
stos
inc
scas
sahf
leave
mov
movsl
ja
jae
loopne
imul
add
mov
xchg
test
dec
mov
les
adc
cmpsl
roll
xchg
or
xchg
inc
push
jae
inc
pop
inc
jae
push
arpl
mov
dec
push
pop
inc
in
mov
xor
jno
cld
pop
into
or
lcall
jbe
hlt
sub
aam
aad
arpl
sub
mov
push
std
out
pop
and
clc
ret
add
jb
xlat
stos
mov
push
cmp
test
xchg
push
push
mov
push
es
xchg
sub
add
add
add
sbb
inc
orb
repz
mov
lods
push
cltd
or
cmp
pop
test
push
or
in
das
fwait
mov
inc
xchg
mov
jno
jg
stos
cmp
dec
iret
out
dec
rol
pop
jae
mov
mulb
lods
popa
or
jae
xor
mov
ret
ret
out
stc
or
in
fistpl
push
ds
das
stc
pusha
jae
adc
sbbb
mov
mov
xor
jge
inc
popf
mov
js
mov
jne
sub
sti
xlat
subb
cltd
pop
mov
pop
add
fsubr
inc
lret
call
sbb
out
push
ljmp
lea
dec
jp
sub
fisttpl
pop
sub
pop
ror
mov
fs
imul
push
adc
sbb
std
inc
stos
mov
inc
push
xor
pop
pop
imulb
dec
int
jnp
std
adc
je
jns
jle
adc
int3
mov
xchg
bound
pop
or
mov
clc
inc
nop
mov
sbb
hlt
ret
lea
enter
xchg
or
and
repz
dec
add
xchg
sub
int3
sub
mov
mov
pop
sub
jg
lcall
and
mov
or
mov
clc
pop
fwait
out
and
rcll
lea
push
cmp
pop
lahf
xchg
push
mov
jbe
call
or
and
or
push
les
push
push
inc
add
cmp
adc
xchg
inc
inc
xor
xchg
cmp
mov
out
call
cmp
in
lods
jb
iret
pop
mov
in
sub
inc
xchg
outsb
aas
ja
sub
jp
inc
mov
mov
fisubs
inc
repnz
mov
or
rolb
add
insl
js
push
lock
mov
hlt
or
xor
xchg
and
popf
insb
jg
cmp
xor
push
mov
mov
fiadds
ljmp
ret
hlt
or
sub
insb
inc
out
push
outsb
mov
sarl
fwait
or
lea
sbb
aas
out
mov
popa
add
loop
repz
dec
mov
shl
hlt
and
and
ja
jg
xor
jmp
push
in
notb
dec
mov
ss
enter
cmp
push
ret
xor
bound
cmpsl
adc
aas
pop
dec
pop
sahf
jg
mov
dec
pop
out
sti
mov
insb
mov
repz
mov
arpl
jge
inc
fsubrs
adc
inc
out
mov
sbb
inc
push
jbe
inc
inc
push
pop
arpl
fmul
pop
imul
jnp
shl
mov
in
movsl
sbb
nop
nop
js
push
fwait
jbe
jo
add
xchg
imul
test
pop
lahf
in
js
sbb
and
pusha
xor
call
lcall
pop
daa
xchg
lods
aaa
xor
cld
rcrb
std
stc
roll
imul
fcmovb
fcompl
jp
stos
scas
adc
pop
pop
dec
sub
mov
mov
test
into
in
leave
pop
lock
in
notb
out
les
xchg
jmp
sbb
repz
mov
pushf
in
arpl
in
xor
xchg
scas
in
pop
rorb
push
stos
decl
stc
test
lods
inc
fcomp
aaa
cmp
pop
sbb
movsb
ja
cmp
add
cmc
incb
lret
sbb
sub
push
pop
js
fwait
test
xchg
adc
cmp
mov
int3
mov
enter
push
xlat
fisubl
nop
mov
negb
push
scas
inc
je
popf
and
inc
sbb
jl
cltd
mov
bound
add
icebp
dec
icebp
sahf
in
aad
mov
push
jno
pop
mov
add
sub
outsl
push
cwtl
loop
sub
mov
and
inc
fistpl
lret
iret
addl
mov
or
sbb
fistps
cmpsl
push
mov
ficoml
imulb
dec
push
out
inc
pop
sub
inc
xor
pop
sbb
fistpll
ljmp
mov
adcb
jg
mov
pop
cmp
pop
mov
dec
rcrb
xlat
cmp
out
fsubrl
ret
aas
xor
inc
data16
bound
jne
jbe
in
xor
or
inc
in
xchg
mov
and
daa
sbb
leave
out
inc
gs
cmp
sub
sbb
lret
and
inc
jmp
push
mov
mov
mov
out
int
or
cmp
cld
stos
or
loope
in
jne
mov
inc
aam
cmp
cwtl
clc
stc
test
push
cmpl
imul
jmp
rcll
out
cld
subl
lea
mov
mov
mov
xchg
cmp
mov
scas
popf
or
mov
lods
xchg
dec
add
packssdw
in
mov
add
je
xor
or
cmp
hlt
mov
mov
loope
xchg
mov
jg
mov
ret
lret
sbb
add
or
and
add
cmp
lea
lock
xchg
mov
or
sub
test
lea
fadds
bound
stos
push
xchg
mov
mov
or
and
mov
inc
in
lds
xor
ljmp
dec
sbb
pop
aaa
push
cmp
dec
movsl
mov
and
adc
mov
imul
mov
xor
into
pop
aam
pop
repz
repz
inc
jp
js
inc
jp
test
leave
fstps
xor
push
inc
enter
and
push
pop
ds
movsb
arpl
pop
xchg
sub
xchg
icebp
inc
inc
es
sub
enter
shl
icebp
mov
xchg
pop
push
test
pop
mov
loop
test
sbb
push
shl
cmpb
add
lret
push
dec
and
mov
adc
xchg
and
test
inc
mov
mov
jmp
cmp
call
jge
sti
scas
xchg
push
lahf
inc
ret
repz
push
movsl
ret
inc
fcomi
stc
popf
mov
bound
pop
rol
add
cmpsb
and
out
mov
insl
add
pop
and
aad
mov
mov
shrl
inc
pusha
inc
arpl
test
outsl
lods
cmp
cmpsl
movsl
cmp
push
inc
int
stos
ret
loope
or
lock
and
notb
outsl
add
sahf
seta
pushf
scas
sbb
movsb
cltd
cmp
jnp
inc
add
addr16
or
adc
leave
insb
cmp
ret
pop
out
xchg
dec
pop
inc
sahf
ss
lock
add
sub
xorb
addr16
mov
outsb
mov
mov
mov
icebp
movsl
dec
xchg
ret
jle
jecxz
mov
jne
lods
xorb
mov
fprem1
int3
lea
sbb
mov
and
cmp
inc
pushf
sbb
and
inc
adc
roll
nop
dec
ret
fisttps
adc
out
clc
lds
sub
lahf
scas
inc
mov
fdivrl
das
sbb
mov
lea
je
iret
mov
arpl
insb
pop
adc
das
fbld
sbb
ds
clc
fnstsw
cmp
test
cmp
push
add
mov
orl
cs
stos
sbb
aam
cld
js
push
push
and
cwtl
pop
imul
mov
js
mov
hlt
popa
adc
pop
ljmp
popa
nop
stos
shlb
push
popl
ljmp
rorl
pop
push
fwait
cmp
into
test
jmp
push
inc
pop
sbb
fnstsw
fcmovu
and
push
adcb
out
or
pop
mov
fbstp
ret
sbb
inc
fsub
fsubs
rcl
or
cmpsb
dec
mov
adc
rol
call
test
jne
xchg
pop
or
or
cmp
adc
cmp
adc
xor
cwtl
cmpsb
xchg
mov
xorl
ja
or
mov
sub
mov
inc
mov
addr16
mov
daa
adc
aam
sub
xlat
sbb
xor
stos
sbb
orl
test
xchg
mov
push
sub
pop
pop
stc
or
inc
jne
gs
fstl
out
mov
call
add
add
push
xchg
push
mov
dec
xchg
scas
nop
iret
xor
cli
gs
fldl
xor
cmpsb
in
adc
xchg
scas
js
or
sbb
jg
adc
pop
or
or
cmpsb
fildl
dec
and
inc
mulb
add
test
loop
out
aas
cmpsb
rcl
push
call
dec
stos
lods
mov
rcll
inc
rol
sub
mov
cld
mov
add
aad
pushf
loop
add
mov
pop
lcall
push
fcomip
cs
ja
popa
xor
mov
ljmp
jmp
test
jae
inc
adc
pop
lods
push
sub
fmull
scas
and
popa
cmpsb
fldcw
shl
pop
scas
xor
sahf
call
cmp
call
xchg
mov
fs
stos
or
adc
nop
mov
xlat
js,pn
pop
popf
aad
mov
out
mov
test
or
je
test
push
mov
mov
xchg
andb
xor
adc
test
add
fs
insb
mov
dec
add
mov
push
lods
aaa
cli
or
nop
pushf
cli
cmp
jns
jecxz
ret
sbb
cmp
test
pop
outsl
cmovne
jge
cs
xchg
mov
js
ja
das
dec
dec
aaa
int3
decl
push
out
clc
ss
aaa
or
push
mov
aad
lret
jae
push
rcrb
out
push
hlt
test
popa
fsubrl
es
int
lahf
ss
xor
popf
push
push
enter
cmp
out
gs
or
add
push
xchg
pop
push
inc
sbb
push
mov
cmc
nop
cld
fs
or
dec
mov
hlt
mov
inc
pop
jb
mulb
cmp
push
addr16
mov
dec
fstps
and
ss
call
movsl
push
mov
pop
mov
shrl
or
pop
dec
xor
jp
xchg
push
test
or
xor
data16
inc
mov
push
cmp
idivl
xchg
test
jo
inc
leave
shrl
xchg
cltd
stos
mov
adc
or
dec
jne
xor
sub
pushf
push
cs
test
lret
or
push
push
adc
int
mov
or
movsl
xchg
dec
sbb
hlt
push
dec
mov
or
inc
sbb
jg
xor
popl
adc
mov
fdivrl
nop
mov
loopne
mov
mov
sarb
in
js
sti
add
lcall
fnstenv
stos
xor
add
bound
repz
adcl
jne
add
lods
dec
push
cmc
mov
sti
pop
cmp
aas
jg
lods
out
test
loopne
sbb
outsb
std
arpl
sbb
dec
adc
aad
pop
and
inc
frstor
inc
push
inc
inc
cmpsb
jge
ror
sbb
lcall
jnp
jo
stos
rcr
fwait
popa
in
push
push
jle
cmp
mov
mov
cmp
adc
or
jle
std
jne
mov
rclb
stos
in
pop
mov
xchg
lahf
orb
sub
xor
rorl
and
lret
cmovp
out
ficoml
pop
repz
fcomip
jne
mov
dec
push
lods
cmp
fwait
cmpsl
jl
mov
inc
rolb
sub
dec
add
pop
mov
andl
scas
mov
sub
push
mov
inc
pop
ja
test
jp
sub
add
mov
inc
rcrl
xchg
xor
mov
scas
sbb
cmp
mov
cmpsb
mov
jmp
add
xchg
xor
ljmp
mov
cmp
mov
sbb
test
push
ret
ret
push
mov
xlat
or
cmp
hlt
stc
popf
cmp
push
inc
cwtl
fcoms
sti
add
das
xchg
pushaw
inc
outsl
xor
or
sub
cmp
xor
pop
outsl
call
cmp
loopne
cmp
aam
jnp
enter
mov
decl
daa
int3
popf
out
inc
out
test
test
cmc
enter
sbb
adc
addr16
xchg
nop
dec
push
sbb
jmp
xchg
ror
xor
cmp
push
mov
pop
sub
push
dec
jecxz
mov
jmp
sbb
iret
sub
pop
mov
sub
pop
aam
dec
sub
mov
cltd
xlat
mov
or
and
inc
mov
lds
fs
dec
hlt
loopne
xor
notl
mov
mov
outsb
add
adc
mov
xchg
jbe
add
inc
loop
cwtl
jge
into
dec
test
jmp
inc
xor
and
xchg
fmul
sti
shlb
out
mov
in
testl
adc
and
cmp
stos
cmpsl
sbb
repnz
mov
jo
sarb
pushf
cmp
das
inc
leave
xor
xlat
insl
iret
cmpb
fcompl
jle
pusha
xor
mov
mov
test
jbe
faddl
adc
std
int3
xor
jle
dec
pop
das
loope
cmp
xlat
adc
dec
js
xchg
mov
aaa
jp
push
add
arpl
adc
into
enter
jo
scas
inc
push
mov
mov
mov
out
inc
scas
pop
mov
dec
jns
push
shr
loop
pushf
pop
idivl
imul
pop
xchg
xchg
movsb
mov
rclb
pop
jecxz
add
dec
into
pop
dec
jge
movsb
cmp
int
leave
xchg
ret
arpl
and
call
call
push
sbb
call
fsts
das
pop
addr16
test
mov
add
lock
and
popa
add
inc
out
pop
xor
mov
pop
jge
repz
pop
pop
mov
cmpsl
loopne
ss
hlt
shl
mov
pusha
clc
or
sar
insb
adc
dec
int
xor
push
arpl
jno
sbb
xor
jle
clc
lods
aas
scas
mov
out
fadds
mov
pop
adc
push
ret
pop
cmp
push
xchg
push
mulb
scas
popa
dec
pop
push
jl
lret
gs
jp
and
xchg
pop
lea
xchg
scas
mov
movsl
mov
int3
test
push
stc
cs
jge
movsb
sahf
repz
fildll
or
mov
mov
cmp
call
fbstp
rorl
mov
fnsave
movsb
push
out
mov
cwtl
addr16
gs
inc
fistl
mov
pushf
sub
cmpsb
in
push
mov
sbb
xchg
xor
cmp
mov
fs
and
cltd
fs
sub
movsl
popa
xchg
mov
pop
movsb
jge
pop
stos
test
lahf
lret
jne
data16
arpl
cltd
sarl
xor
je
cmp
xlat
add
or
out
inc
push
cmpsb
cmp
lahf
sub
inc
shrl
cli
pop
les
sbb
mov
sahf
lods
jo
mov
fucomi
fldcw
xor
ja
enter
adc
jl
adc
jl
lea
sahf
scas
and
rclb
stos
jmp
ret
jle
adc
aad
pushf
scas
fdiv
gs
adc
test
jb
and
es
mov
dec
sub
popf
or
pop
jnp
aad
mov
sbb
repnz
cld
ss
faddl
pop
push
push
in
bswap
pop
out
clc
rcl
sub
fisubrs
paddusw
cmp
loope
xor
ds
and
mov
xor
xor
sub
jb
lret
gs
bound
and
out
inc
push
stc
add
out
fcomps
mov
je
ret
xor
mov
int3
rorl
xlat
mov
dec
and
insb
mov
mov
daa
mov
jns
mov
into
ror
das
add
mov
dec
pop
lahf
jae
repz
out
inc
push
out
lock
adc
incl
loop
cmpl
jmp
sub
test
lds
mov
loopne
ja
or
xchg
frstor
sbb
xchg
xchg
xlat
andb
imul
ds
mov
mov
dec
inc
mov
mov
dec
shll
jae
sub
pop
xchg
pop
insl
mov
test
inc
std
cwtl
xor
scas
and
in
dec
rcrb
mov
repnz
mov
fs
jmp
aas
aam
mov
add
scas
stos
rolb
cltd
add
sahf
shlb
into
outsb
cmpsl
cmp
nop
sub
sahf
sarl
mov
addr16
pop
arpl
push
cmpsb
dec
pushf
and
add
sti
cmp
popa
mov
lahf
jae
jp
inc
dec
jecxz
insb
xchg
jge
dec
in
xor
xor
add
pushf
sub
push
jmp
sub
push
pop
in
jmp
and
inc
pop
push
inc
mov
enter
lret
mov
lahf
pushf
ja
out
xchg
mov
cmp
inc
inc
aad
out
xchg
ret
inc
dec
in
xchg
mov
fucomip
cmp
testl
adc
ret
or
dec
data16
inc
jl
dec
into
ljmp
orl
push
push
push
ficoms
and
adc
fiaddl
push
push
pop
adc
mov
dec
cmc
hlt
push
out
jb
sbb
or
mov
sub
dec
int3
arpl
mov
je
ljmp
mov
adc
movsl
push
inc
mov
adc
testb
hlt
pop
sub
cmpsl
imul
test
cmp
cmp
fs
sub
push
push
dec
in
call
inc
movsl
lcall
cmc
loop
and
dec
cmp
les
jmp
jg
add
mov
sbb
mov
xor
dec
add
xchg
mov
fwait
cwtl
fbstp
mov
andb
sbb
int
dec
fdivl
dec
jecxz
jle
inc
mov
sbb
outsl
xchg
dec
in
nop
and
or
add
push
dec
pop
adc
repz
lods
into
rclb
shlb
pop
adc
pop
pop
sbb
jmp
mov
lds
lods
cmpl
pop
loopne
jae
jns
mov
icebp
lds
lret
out
add
mov
mov
lds
popf
mov
jmp
pop
icebp
data16
xchg
push
push
jns
stos
push
push
cld
pop
mov
mov
adc
dec
and
fwait
cmpsl
add
div
lods
and
jo
inc
pop
push
sbb
decb
loope
mov
cmp
cmc
jb
mov
ret
pop
imul
addr16
pop
sahf
cmp
shrl
repz
jb
mov
jmp
je
mov
pop
xor
test
dec
mov
pop
ja
xchg
out
push
sbb
test
enter
push
jne
inc
jnp
outsl
jnp
movsl
aas
sub
cmp
outsb
mov
outsb
sub
jne
lret
int
pop
outsb
jl
adc
dec
ret
pop
sub
mov
negb
or
xor
lret
rorb
test
inc
push
lahf
cmpsb
xchg
stos
jnp
sbb
push
inc
out
pusha
ret
push
xorl
cmp
pop
push
jle
aad
jo
sbb
inc
push
xor
movd
inc
xor
dec
lods
in
mov
dec
or
pop
sub
shrl
pushl
inc
js
dec
lods
notb
mov
notl
js
mov
sahf
popl
xor
push
or
cmp
sbb
leave
jb
imul
dec
jb
jno
sub
dec
jecxz
dec
cmp
mov
in
and
rorl
loop
test
and
faddl
inc
imul
imul
fstpt
xor
or
in
sub
sbb
jp
sbb
sub
sahf
xor
jle
mov
lret
pushf
cli
sub
addr16
movl
push
jmp
sbb
fmulp
mov
pop
dec
lahf
mov
xlat
ljmp
jecxz
imul
and
xchg
xor
sti
jp
cmp
outsl
das
mov
scas
pop
dec
add
inc
mov
lds
mov
call
inc
and
outsl
aaa
pop
adc
mov
mov
jno
in
mov
cli
push
xchg
pop
out
jmp
lahf
icebp
mov
mov
cmp
gs
in
pop
mov
push
nop
fsts
int3
inc
mov
cmp
sarb
push
xchg
mov
imul
je
or
sti
minps
cmp
ss
in
dec
pop
mov
cmp
mov
dec
movsl
pop
or
aas
fdivp
imul
test
filds
xchg
dec
imul
stos
imul
test
scas
rcrl
scas
dec
ss
mov
aas
push
shlb
outsl
cmp
adc
sub
dec
add
fwait
xor
xorl
xlat
xor
inc
jl
cmpsl
and
movsl
stc
dec
cs
push
cmpsl
or
push
fsubrl
mov
out
gs
enter
adc
es
arpl
addb
ficomps
mov
cmp
in
xchg
pop
popf
scas
mov
jo
dec
xlat
call
test
jns
loop,pt
cwtl
lock
xchg
insb
add
stos
mov
jg
in
fpatan
inc
ja
or
mov
dec
sub
inc
dec
scas
jle
xchg
jg
les
jb
push
xor
je
xor
push
cmp
bound
xchg
mov
push
jp
mov
pushf
mov
xchg
in
repnz
aaa
loop
sub
mov
ljmp
loopne
sbb
bound
or
mov
adc
imul
aaa
aad
out
cmpsl
jno
pop
fcmovb
pop
or
andl
xchg
mov
ja
mov
js
pop
mov
lcall
pop
push
jg
cmp
pop
dec
ds
std
cltd
cmc
dec
push
mov
fsubrl
data16
adc
into
cwtl
sbb
mov
xorb
mov
iret
jbe
rorb
mov
mov
mov
insl
and
sarl
clc
pushf
lea
cmp
xchg
sbb
test
aam
nop
pop
xlat
jno
mov
fistpll
hlt
scas
inc
lods
pop
inc
inc
jnp
cld
ss
test
call
jnp
imul
jmp
gs
push
mov
fcoml
loop
push
scas
push
push
dec
mov
jns
mov
push
push
notb
xor
inc
mov
pop
lahf
divb
fs
xchg
pop
mov
adc
dec
inc
cmp
loope
cmp
sahf
inc
shrl
aaa
ja
data16
cmp
mov
nopl
stos
mov
jne
or
dec
in
cld
sbb
sub
loop
cmpsb
dec
loopne
mov
push
in
adc
fidivrs
jp
shrl
test
cmp
dec
and
fdivl
push
insb
lret
mov
rorb
xchg
shll
stc
dec
push
sub
jp
add
pop
xchg
xchg
pmullw
movsl
jae
xlat
cmp
lods
add
es
fisttps
repz
vcomisd
sbb
jle
movsb
test
into
es
sbb
xor
jl
leave
and
mov
or
mov
aad
fidivl
testb
cmp
and
aaa
xor
loop
test
aaa
sbb
outsl
pop
pop
out
xchg
sarl
sub
xor
mov
sub
insb
push
adc
ret
jbe
add
mov
mov
cs
or
xor
jmp
xlat
aam
fidivs
mulb
dec
jg
mov
inc
adc
mov
xor
nop
inc
arpl
pop
arpl
scas
push
jl
push
popf
int
int
js
push
scas
sbb
js
lret
das
add
sub
fs
ret
loope,pt
push
dec
jecxz
cmp
adc
inc
inc
jecxz
divl
mov
xchg
sub
js
inc
jmp
mov
ret
sbb
push
mov
fwait
xlat
ljmp
sub
mov
inc
inc
inc
test
data16
cld
jge
fs
loopne
sbb
insb
add
in
mov
cmp
xor
cmpl
jns
sub
jl
xchg
mov
pusha
jbe
orl
sub
int3
pop
jmp
xchg
sbb
int
sahf
fcoml
rorb
movsl
push
push
jg
loop
sbb
inc
mov
popf
add
pop
jbe
hlt
movsb
mov
and
ret
pop
push
sub
loope
test
lret
cli
or
add
adc
sbb
dec
jmp
add
cmp
add
rorb
jge
or
add
add
push
jmp
lock
and
lods
mov
jp
inc
mov
cltd
xor
in
test
sub
dec
or
rorl
in
jl
pop
cmp
cmc
jns
cmpsl
cmp
and
and
insb
jbe
sbb
mov
mov
and
test
stos
mov
std
das
cmpsb
or
pop
scas
fwait
cmp
test
push
sub
add
mov
inc
or
jge
lods
sub
in
adc
orl
js
or
ljmp
cmp
call
push
stos
inc
dec
ret
dec
xchg
out
cmpsb
cmp
inc
dec
mov
adc
sbb
and
add
add
xor
bound
pushf
dec
adc
jnp
pushf
dec
xchg
frstor
mov
loopne
push
pop
inc
push
out
or
fidivl
push
ret
outsl
arpl
mov
fs
clc
and
mov
dec
clc
xchg
enter
cmp
dec
pop
data16
mov
aad
pop
sub
scas
adc
ffree
shll
repz
jle
and
push
aas
cs
into
pop
cmp
cltd
divb
mov
fs
push
lods
les
xlat
or
cmp
inc
pushf
pop
jp
push
mov
mov
icebp
imul
mov
test
popf
pop
xor
imul
arpl
loop
repnz
nop
daa
mov
ljmp
out
pop
mov
xchg
jnp
inc
mov
inc
pop
fisubl
ss
pop
mov
mov
xchg
cmc
andb
adc
aam
xchg
shl
push
movsb
or
mov
leave
pop
idiv
dec
pop
jno
test
adc
in
mov
pop
xchg
scas
aaa
push
fisubs
ret
inc
imul
sbb
stos
lods
jo
cmp
and
push
rol
pop
icebp
fdivp
icebp
xchg
insb
xlat
adc
xchg
js
or
nop
sub
imul
imul
and
mov
repz
xor
nop
daa
aas
sbb
int3
es
aam
call
pop
dec
push
lea
popa
mov
pop
sub
fcoms
test
lcall
and
movsl
pusha
not
aad
cltd
pop
mov
jecxz
push
in
test
mov
iret
out
shr
lods
cs
insb
ss
arpl
mov
pop
push
out
stc
dec
dec
stos
jo
rcrb
mov
mov
imul
mov
roll
cmp
push
mov
test
inc
loope
jne
push
mov
pop
xor
xchg
cmpsb
les
add
les
xchg
or
pop
cmp
jp
mov
dec
fwait
imul
pop
mov
push
insb
mov
push
stos
stc
mov
jnp
mov
sub
gs
fwait
xor
sub
cmp
mov
stos
lods
push
jmp
cmp
stos
into
lcall
cs
xchg
cmp
rclb
or
pop
insb
addl
mov
fsubrs
sbbl
inc
mov
lret
cmc
pop
stos
mov
sahf
sbbl
inc
pop
out
mov
sub
push
and
arpl
jbe
push
mov
popf
pop
adc
and
add
cltd
inc
inc
adc
mov
fists
aam
shll
or
jg
loop
test
stc
movsb
mov
dec
pop
fistpl
les
mov
das
jle
aad
cmp
jge
jge
adcl
sahf
xlat
out
mov
and
sahf
stos
or
mov
sbb
mov
push
fmuls
stos
pop
jae
addr16
mov
dec
adc
pop
jl
hlt
lods
inc
ret
fiadds
mov
xor
pop
stc
cmc
lea
push
inc
sub
dec
dec
cmp
adc
push
mov
mov
fcmovbe
add
fwait
mov
ja
cmp
arpl
lahf
xchg
lret
repnz
cmpsb
cmp
pop
and
fucomi
xlat
pop
jne
add
ss
lock
frstor
cmp
aas
pop
xor
pop
xor
push
push
push
dec
pop
xchg
inc
inc
pop
mov
nop
dec
leave
rcrl
inc
arpl
mov
mov
jge
ds
xlat
in
insb
icebp
jge
test
les
jle
in
fcompl
xor
and
push
and
push
lods
cmp
cmc
xor
cmpsl
lcall
sti
jo
test
push
push
sbb
jmp
cmp
xchg
add
mov
sbb
sti
xchg
xor
or
out
lahf
daa
lea
xchg
movsl
test
mov
fcoms
fwait
xlat
push
and
xchg
mov
hlt
adc
sbb
aas
lock
imul
or
sub
mov
pop
jl
addr16
stos
push
mov
add
and
popa
sbb
add
lock
mov
leave
mov
adc
lcall
fstpt
jmp
xor
push
add
leave
int3
xchg
insb
cmc
pusha
imul
les
scas
sub
xor
push
push
adc
inc
xchg
dec
pop
out
fisubrs
mul
dec
scas
dec
jmp
mov
cltd
pop
mov
pop
dec
sub
add
cltd
test
aas
dec
mov
add
mov
outsl
movsl
sbb
push
ret
sahf
cmc
ja
cmpsb
ja
sahf
or
adc
jge
outsl
daa
jl
or
push
sarb
addr16
rolb
loopne
mov
add
lret
fbstp
sbbb
cmp
js
xlat
pop
dec
fiadds
xchg
inc
in
stos
push
call
sub
cmp
pushf
iret
lds
daa
lcall
adc
xor
in
pop
dec
iret
inc
push
lods
in
fldt
cltd
jae
xchg
sub
xchg
bound
sub
jne
les
loopne
int3
cmp
test
cmpl
das
aas
adc
fldenv
xchg
mov
xor
xor
push
pop
popf
fdivrs
jmp
cwtl
pop
ret
jo
jp
shlb
jb
pop
in
movsl
ja
dec
arpl
cmpsl
mov
enter
add
aad
lcall
inc
mov
sbb
std
icebp
push
cmp
jle
repnz
xlat
outsl
les
mov
jcxz
jnp
bound
dec
loope
shlw
inc
icebp
jbe
fisubrs
sub
test
in
dec
fdivs
or
inc
nop
out
outsb
sub
xlat
push
cltd
and
enter
lods
outsb
jo
push
into
jb
ret
dec
mov
lock
jbe
adc
mov
scas
jp
cwtl
das
add
push
mov
test
or
dec
in
pop
pop
shl
test
cmp
sub
outsb
fbld
inc
xor
or
mov
ret
jnp
cmp
or
lock
pop
call
and
cmp
pusha
insl
je
cmp
fwait
clc
adc
pop
cwtl
scas
inc
adc
lds
dec
sbb
movsl
cld
jecxz
jp
push
sub
adc
into
enter
fisttpl
mov
pop
test
sub
mov
add
and
adc
and
ret
dec
adc
idivl
pusha
add
push
xor
icebp
xchg
mov
fstpl
pop
push
mov
adc
rclb
or
or
xchg
cmp
aam
ja
xor
sub
push
repnz
pop
xor
adc
cmpsl
add
ja
push
push
out
push
jl
sub
pop
jle
popf
cmpsl
and
push
cmp
dec
xchg
ss
sbb
mov
adc
sub
pop
test
sub
dec
fnsave
mov
int3
mov
gs
aad
mov
or
inc
mov
xlat
int
pop
xchg
pop
lea
fmull
mov
xor
call
test
dec
jbe
hlt
inc
nop
add
add
mov
adc
leave
cli
stos
or
mov
jno
popa
addb
icebp
or
repz
subb
jns
pop
and
popf
sub
push
push
and
adc
mov
negl
jecxz
out
movl
push
movsl
addb
mov
sub
jns
push
sub
cmpsl
icebp
xchg
cmc
shrb
push
push
scas
adc
xor
mul
xchg
sub
push
sub
sbb
call
andb
aam
popw
stos
sub
lods
in
jns
xor
push
cli
bound
into
call
arpl
xlat
test
cmp
repz
popa
in
cmp
mov
repnz
sub
xchg
push
in
aas
sbb
mov
ror
jecxz
scas
cmp
lcall
pop
scas
sub
dec
repnz
cld
push
cs
fbstp
and
add
std
push
movsb
stos
sbb
lods
adc
fcomip
test
jbe
mov
push
bnd
mov
mov
loop
int
stos
push
push
adc
bound
push
cmpsl
push
adc
inc
push
fs
int3
outsl
sub
and
jg
add
mov
movsb
repnz
inc
mov
nop
or
push
mov
mov
mov
or
cwtl
in
insb
out
sbb
aaa
ds
mov
stos
mov
lcall
adc
inc
add
adc
repnz
fmuls
mov
adc
push
in
jnp
add
or
dec
and
lret
ja
lcall
mov
cli
pop
stos
shll
mov
pop
xor
test
call
sbb
inc
mov
aad
cmp
pop
mov
cmpsb
hlt
arpl
xchg
mov
sub
popa
daa
jne
sub
xchg
out
in
ja
mov
mov
dec
testb
or
sub
xchg
push
popa
adc
or
and
cmpsl
stos
and
push
in
movsb
and
sub
adc
pop
test
jae
push
mov
pop
adcb
in
dec
mov
cmpsb
out
mov
mov
rorb
adc
cmp
sbb
mov
xchg
into
and
xor
xchg
mov
sbb
notl
test
mov
fdivrs
add
popf
sbb
into
adc
je
and
fs
mov
aas
push
out
imul
xchg
push
xor
mov
mov
push
mov
inc
stc
push
mov
xor
push
out
jae
rorl
jp
rcrl
cltd
mov
xchg
sub
and
gs
lods
out
pop
adc
in
shll
pop
sahf
addr16
loopne
cld
xchg
adc
lret
leave
mov
loope
dec
fucomp
test
ljmp
insb
imul
inc
mov
movsb
or
push
scas
sbb
and
dec
and
in
std
xor
lcall
jecxz
popa
jne
stos
or
std
pop
enter
xor
addr16
xor
push
dec
jecxz
mov
movsl
push
dec
in
shll
std
cmpb
or
lods
push
lock
inc
push
popf
jle
cld
cmpl
cmc
adc
push
inc
mov
test
addr16
fdivl
movb
pop
sub
cmc
lahf
adc
mov
mov
and
cs
out
push
fmuls
push
bnd
test
enter
push
shrb
cli
repnz
and
aam
inc
inc
in
mov
push
fst
mov
sub
mov
icebp
dec
mov
xlat
sahf
adc
lea
dec
dec
gs
adc
call
outsl
jmp
mov
adc
push
pushf
clc
add
andb
test
insl
add
inc
int3
fs
mov
jmp
cmc
adc
rcll
jmp
inc
lret
fmuls
mov
das
xchg
mov
gs
add
mov
or
xchg
fs
mov
mov
ret
mov
imul
mov
inc
xchg
imul
out
jge
aad
adc
push
push
xchg
lods
xchg
jo
mov
or
das
and
cli
loope
add
je
sub
lea
rcl
cmpsb
pop
popa
jns
adc
xor
ror
cmp
lods
jo
adc
test
xlat
mov
leave
sbb
mov
fmull
mov
fcomip
push
lods
scas
ret
xchg
sub
sbb
ret
mov
decb
sbb
adc
and
es
ret
dec
pop
lret
gs
lret
pop
jae
ror
ja
imul
push
push
xchg
sbb
adc
mov
mov
divl
aas
mov
shl
scas
push
jl
pop
scas
sub
ss
jbe
push
mov
jbe
test
cmp
cmpsl
push
dec
in
ja
xor
sub
sub
rorl
mov
testb
and
sub
mov
sub
arpl
pop
sub
mov
add
stos
es
js
cmp
das
icebp
sbb
push
cmp
inc
int3
popf
xor
daa
inc
cmp
push
mov
mov
popa
lods
mov
adc
jno
cs
mov
leave
push
call
mov
stc
pop
mov
inc
lds
pop
jg
push
mov
xor
xchg
inc
mov
mulb
mov
pop
cmp
hlt
popf
test
jecxz
ss
add
mov
testl
lock
ds
test
mov
xchg
mov
sub
fisubrs
add
or
xchg
mov
mov
xchg
les
stc
cltd
iret
pop
hlt
mov
loop
dec
adc
push
inc
ret
mov
mov
jg
in
xchg
push
inc
fbld
cld
xchg
scas
bound
loope
adc
push
mov
push
popa
jge
xchg
jb
fwait
and
and
sub
add
push
adc
ljmp
jne
call
fcom
repz
sti
add
sahf
pop
mov
jge
sbb
mov
fnsave
mov
mov
js
mov
dec
fwait
negb
and
pusha
aaa
xchg
push
xchg
cmpsb
jg
out
sahf
add
or
mov
adc
push
popa
mov
fwait
out
and
ss
mov
in
or
sub
fstl
sbb
int
into
inc
imul
or
inc
movsb
cmp
xor
pinsrw
imulb
mov
jbe
sbb
jl,pt
cld
mov
test
push
sbbb
sbb
mov
jb
dec
cltd
std
out
call
or
aam
sub
aaa
pop
das
push
cmpb
mov
insb
push
arpl
cmp
mov
inc
pop
jo
std
or
sbb
lahf
and
into
hlt
hlt
repz
scas
rcrb
sbb
inc
add
and
xor
hlt
fcomip
sbb
cld
ds
pusha
mov
fadd
addr16
notb
mov
cld
outsl
pushf
add
mov
add
imul
xchg
mov
jle
mov
fsubl
mov
push
fucomip
xor
mov
dec
popf
sbb
std
sahf
subl
pop
rcr
ret
outsl
inc
scas
fidivrs
mov
mov
adc
popa
arpl
cltd
nop
movsl
or
in
scas
push
add
aam
leave
xlat
test
out
jecxz
or
sti
js
hlt
xchg
mov
sub
mov
lock
les
ret
xor
aam
xchg
daa
into
pop
xor
or
mov
outsl
in
push
mov
mov
sbb
sub
out
jnp
jecxz
and
add
jb
addr16
jp
and
mov
insl
dec
pushf
imul
ja
adc
rclb
shl
push
pop
xchg
dec
dec
lea
sbb
xchg
cmp
add
inc
cmp
les
cld
lahf
xlat
add
out
ret
mov
cmpb
lret
lods
jg
sti
or
outsb
loop
jge
outsb
sub
lahf
mov
sbb
fsts
repnz
adc
pop
jl
xchg
cmp
enter
mov
adc
cli
es
in
mov
shrl
loopne
icebp
cltd
pop
sub
inc
xor
jl
fldcw
jnp
fbstp
pop
cmpsl
sbb
jge
data16
repz
loop
std
addr16
jb
mov
jp
movsb
out
push
repz
or
lods
add
jp
ficoml
add
out
mov
xchg
mov
push
out
pavgb
js
dec
out
dec
scas
xchg
lret
mov
push
adc
rol
sub
pop
call
shlb
sahf
xor
mov
test
jno
mov
into
or
push
out
lret
mov
jmp
inc
imul
in
adc
fs
je,pt
stos
icebp
in
xchg
dec
dec
test
xor
addr16
popf
add
sahf
mov
xor
pushf
add
cltd
mov
imul
mov
lcall
and
clc
andb
cmp
aad
dec
pop
mov
out
ljmp
rolb
xor
data16
pop
lds
aaa
lret
adc
outsl
rclb
stos
jne
fwait
pop
lods
push
movsb
add
mov
decb
cmpsl
push
imul
inc
pop
jae
cs
lahf
lock
lods
lods
mov
stc
sub
fnsave
or
jmp
aaa
arpl
gs
xor
adcb
mov
inc
into
jb
arpl
cld
ja
dec
or
jp
cmpsl
adc
or
out
pushf
sub
add
hlt
mov
ss
push
movsl
aas
cld
jmp
push
pop
jg
cmp
daa
lea
xchg
sarl
push
lods
xor
or
add
or
scas
mov
and
lea
fiadds
cld
pop
insl
inc
cmp
adc
ss
mov
mov
jae
sbb
xchg
xchg
mov
insl
xorl
xchg
insb
cmc
xchg
xchg
in
pop
cmc
push
rcrb
xchg
mov
std
xchg
push
fsubrs
jg
mov
sbbl
jle
fisubl
mov
mov
push
dec
ret
shr
fcompl
lea
mov
pop
test
test
jl
mov
ret
jno
call
pop
sbb
test
mov
scas
cmp
das
jg
subl
pop
jle
mov
cmp
fcomps
or
add
jno
aad
orl
scas
sub
xchg
mov
sahf
mov
stc
jle
cmp
outsl
stc
cmp
outsb
add
xchg
rorb
into
and
push
adc
aam
and
sub
pop
mov
mov
in
add
ret
jnp
xchg
sbb
fwait
and
mov
pop
enter
scas
and
daa
push
mov
ds
xor
add
pop
xor
sub
cmc
aad
lds
leave
pusha
cmpsb
xchg
xchg
add
mov
aam
sub
insb
pop
dec
les
cmc
repz
iret
aad
add
sbb
rclb
mov
stc
mov
je
out
push
fwait
cltd
xor
mov
lea
lret
sbbl
mov
or
fs
filds
fucomip
jg
loope
push
jmp
pushf
outsl
jno
enter
xor
ss
mov
push
inc
inc
xor
imul
push
imul
push
push
or
xor
xchg
or
mov
lahf
lods
sub
pop
xchg
or
ficompl
push
cmp
xchg
scas
push
fbld
sub
lahf
or
imul
pusha
push
push
outsb
mov
outsb
add
xchg
and
add
inc
leave
pusha
xor
lea
enter
ret
mov
pop
sahf
xchg
sub
lcall
fnstenv
cmpsl
iret
popw
lods
xchg
and
es
xor
int3
arpl
dec
dec
loope
mov
enter
mov
mov
and
mov
and
push
icebp
mov
pop
scas
sub
mov
movsl
and
cmp
adc
sbb
repnz
push
test
inc
mov
arpl
nop
mov
lds
push
mov
inc
mov
sub
cmpsl
mov
xor
les
mov
stc
nop
fcoms
push
lods
lods
in
push
xor
inc
ret
pop
cmp
outsb
sbb
movsl
mov
xchg
pop
xchg
lds
pop
idivb
out
xchg
xlat
cmp
imul
adc
shl
lret
xor
pop
test
mov
cld
push
jecxz
dec
pop
add
call
mov
xor
mov
and
xchg
or
addr16
ja
ds
loopne
jecxz
pop
mov
inc
into
xchg
subb
adc
adc
out
mov
out
or
mov
shrl
mov
movzbl
mov
stc
and
sbb
pop
pop
sub
or
aad
mov
dec
ds
jbe
push
lods
sti
popf
push
shld
mov
add
dec
dec
mov
push
outsb
xor
rclb
popf
in
fcoms
or
cmpsb
xchg
outsb
mov
jge
das
mov
pop
jecxz
mov
dec
rolb
ficomps
inc
xor
in
je
stc
cmp
add
jnp
pop
mov
or
jmp
jp
repnz
scas
add
cmpsb
ds
pop
test
xchg
imul
xor
imul
cmp
and
insb
add
andl
data16
inc
cmp
imul
rcll
loop
outsb
inc
mov
mov
loop
xchg
rcll
iret
mov
adc
inc
push
pushfw
add
xlat
xor
push
sub
adcl
jns
outsl
and
es
push
mov
ljmp
icebp
mov
into
mov
inc
push
sub
mov
push
mov
jbe
mov
mov
or
iret
pushfw
jecxz
add
jbe
ss
mov
call
fiadds
aad
les
cwtl
mov
inc
into
xchg
jo
inc
shr
aas
adc
add
xorb
hlt
test
mov
adc
aas
mov
xor
mov
mov
aad
aam
adcb
cmc
ljmp
adc
xor
iret
sbb
add
jne
or
inc
jg
fsubl
mov
or
addr16
jns
add
test
push
and
jns
imul
mov
jb
sub
shrb
jnp
jne
mov
iret
mov
add
mov
or
lods
jle
aad
scas
out
dec
outsl
jmp
cmpsb
adc
fistpl
inc
push
lcall
lret
lret
aaa
mov
mov
fimull
xchg
pop
out
ret
jmp
js
and
cmpsb
lods
adc
push
adc
sub
pusha
ljmp
stos
mov
pop
jg
push
jle
jl
jge
popa
les
mov
addr16
aam
jmp
add
movsl
fidivrl
xchg
mov
insl
lds
fdiv
cmp
je
pop
in
xor
mov
into
loope
adc
pop
pop
mov
xchg
outsl
jecxz
aaa
pushf
xor
lcall
jns
jno
jg
ja
mov
ja
push
dec
push
shrl
or
inc
xchg
and
or
sbb
or
push
out
mov
xchg
add
jb
je
ds
fwait
xchg
arpl
ret
movsb
into
xor
repnz
sbb
mov
mov
in
sub
out
push
aaa
push
xor
mov
imul
sub
lds
jae
les
ret
fnstenv
sub
cli
sar
xchg
cmp
sbb
rolb
loopne
ds
stos
push
lods
loop
jb
insl
xchg
xor
push
push
pop
insl
scas
int
test
mov
pop
mov
adc
ficompl
or
xchg
add
rorl
aad
or
in
dec
insl
cmp
dec
sub
mov
mov
or
add
push
cmp
ud2
mov
mov
and
enter
lret
jnp
push
adc
dec
add
inc
sbb
pop
mov
mov
push
pop
mov
and
adc
or
sti
inc
cld
sub
push
inc
mov
inc
lcall
and
push
xchg
mov
aam
jbe
add
inc
sbb
xchg
mov
ret
mov
jbe
ss
or
scas
xchg
xchg
scas
dec
cltd
cmpsb
cmp
xchg
inc
les
pop
push
jbe
nop
pop
mov
scas
adc
ds
push
mov
cmp
pop
mov
lret
push
into
cmp
in
int3
test
or
mov
jns
jle
pop
sbb
test
mov
ja
jns
mov
outsl
jp
mov
ret
pop
jg
push
sub
dec
fiadds
test
mov
divb
and
inc
mov
test
testl
into
dec
sub
dec
push
mov
test
push
xor
adc
in
adc
sub
dec
sbb
mov
rcr
insb
push
lea
xor
sbb
scas
push
jnp
loope
outsl
cltd
aad
add
adc
cwtl
in
xlat
mov
pop
out
mov
mov
mov
lret
mov
jmp
pop
mov
lret
mov
sub
repz
into
in
test
outsb
push
add
sbb
clc
dec
scas
xchg
xor
rolb
xchg
mov
dec
or
adc
jle
insl
inc
push
inc
outsl
push
js
lahf
stos
mov
cmpsl
jbe
rcr
sub
gs
lcall
adc
js
xchg
mov
adc
inc
xchg
and
loope
push
mov
out
in
xchg
push
dec
fisubrl
mov
jl
outsl
andl
lds
jge
in
nop
inc
or
sbb
xchg
and
aam
pop
stc
divl
or
jo
es
mov
gs
addl
in
ds
adc
push
xor
out
mov
aam
arpl
cmp
mov
add
pop
mov
lods
push
cli
sahf
ret
mov
sub
and
dec
pop
loopne
mov
lods
fs
bnd
adc
cmpsb
xor
xchg
mov
gs
inc
sub
movsl
push
pop
add
movsb
pop
mov
or
push
xchg
inc
stc
mov
or
aam
aaa
pop
jmp
pop
lock
mov
or
push
inc
add
push
mov
sub
and
push
xchg
lret
mov
dec
xor
cltd
push
pop
ret
pop
lret
enter
and
mov
jo
shlb
mov
icebp
xchg
pop
das
inc
rorl
or
mul
cs
add
cwtl
lahf
push
rcrl
xchg
call
inc
mov
mov
and
pop
outsb
mov
push
jbe
jl
js
adc
sub
inc
jns
cmp
xor
fists
sbb
sbb
iret
cltd
mov
scas
jae
mov
testl
or
scas
jae
sub
and
sub
lock
sub
adc
add
scas
mov
adc
fwait
ret
rolb
and
jne
cmp
fdivrs
and
js
inc
outsl
push
mov
ret
or
mov
sti
fs
jge
cmp
xor
nop
ret
bound
push
cltd
and
jbe
pushf
std
push
cli
xor
in
fsubrs
mov
addr16
ljmp
ficoml
adc
xchg
test
ja
mov
clc
hlt
xor
cmp
adc
rcr
loopne
pop
adc
pop
fwait
in
pop
adc
addr16
xor
pop
pushf
mov
xchg
or
ljmp
hlt
sbbl
xchg
add
mov
daa
and
jl
push
ja
jb
mov
mov
inc
scas
daa
gs
xor
adc
cmpsb
xchg
mov
loope
cmp
fistpll
cwtl
xchg
stos
add
fstl
sbb
insl
pop
pop
or
in
pusha
xchg
cmp
and
notb
sub
pop
outsl
cltd
push
inc
lods
aas
loop
loope
cmp
sub
mov
lods
shrb
add
jno
cmpsl
jge
scas
out
push
pushf
data16
sbb
or
and
cmp
adc
fistpl
nop
decl
repz
adc
in
jae
jnp
xor
add
mov
and
fistps
sub
fstpt
hlt
xorb
add
inc
lea
popf
mov
pop
push
xor
mov
push
cmpsb
pop
test
aam
mov
mov
mov
lcall
mov
pop
out
mov
aam
xchg
les
popf
xchg
mov
pop
sub
aad
and
xor
cmp
cmp
cmp
lds
pop
movsl
sub
arpl
pop
aam
xor
leave
fisttps
testl
mov
aad
in
test
popf
aaa
push
pop
enter
cwtl
scas
xchg
dec
mov
out
hlt
pop
hlt
sarl
out
lret
sub
es
push
sbb
mov
mov
std
dec
pop
imul
dec
sub
hlt
dec
jl
mov
testb
rolb
gs
xchg
imul
lock
movsb
cwtl
ror
testb
xlat
pop
fcmovbe
dec
addb
xor
mov
jo
sbb
push
mov
sub
jecxz
mov
outsb
filds
push
lods
je
jbe
in
popf
mov
lea
scas
mov
push
xor
divl
push
mov
fbstp
push
hlt
xor
dec
mov
dec
pop
mov
movsb
jo
push
pcmpgtd
outsb
mov
imul
cmp
movsb
sahf
les
jg
in
arpl
loop
inc
loopne
sti
pop
out
rol
inc
mov
and
lds
int3
arpl
or
in
push
inc
sahf
sbb
movsl
in
xchg
pop
pop
adc
and
leave
fwait
lods
jle
imul
lahf
xor
out
das
jae
insb
outsl
mov
jne
mov
dec
cmp
mov
pop
movsl
shl
pop
imul
adc
sahf
xchg
jmp
sub
xchg
out
or
sti
ljmp
insb
inc
cli
test
mov
and
cmp
jmp
and
nop
jl
in
aaa
fisubl
rorl
aas
push
ret
loope
xchg
push
sub
pop
push
lcall
mov
roll
lret
sbb
xlat
sub
rorb
adc
stos
outsb
push
add
push
icebp
mov
nop
or
jl
cld
pop
lds
dec
adc
jbe
sub
test
xchg
xor
dec
mov
add
dec
cmp
jecxz
mov
and
cmp
push
andl
pop
push
loopne
addl
xchg
shrb
nop
cmp
repz
dec
sub
stos
xchg
add
mov
mov
push
push
xor
jge
fisttpl
loop
xor
xchg
shr
fstpl
push
lahf
imul
fs
xor
jno
out
inc
lret
in
inc
cli
adc
inc
adc
push
inc
mov
inc
xlat
push
inc
fs
pop
sub
add
jo
inc
cld
rcrb
loop
mov
jg
push
fcoms
jae
or
or
sub
push
sub
sbb
mov
aas
rolb
ja
rorb
in
mov
fs
sbb
nop
push
xor
adc
sbb
imul
push
xor
push
sbb
pop
adc
gs
mov
outsl
addl
push
mov
arpl
xchg
push
xlat
sub
inc
repz
sbb
std
pop
pusha
in
leave
cmc
ficoml
lret
sbb
push
mov
mov
shlb
jbe
cwtl
inc
std
jae
mov
ss
add
xor
sub
sbb
sbb
aas
insl
add
push
xor
cmc
shlb
jge
cli
mov
xchg
dec
lret
sbb
stc
popa
lods
push
fidivs
xor
dec
loopne
cs
adc
loope
js
or
test
cmp
out
or
jae
shll
adc
push
jbe
jge
fimull
sbb
inc
sbbl
add
int3
stos
fwait
cmpsl
lock
sub
adc
or
add
std
cltd
dec
in
scas
push
cli
pop
in
test
movl
jmp
and
push
lahf
sti
dec
inc
scas
push
cmp
dec
pop
lea
scas
mov
scas
and
or
iret
xor
es
gs
mov
fwait
mov
add
out
cld
hlt
inc
push
cli
cmp
notl
test
aaa
fnstcw
hlt
pusha
sti
in
and
sbb
pop
test
addb
or
loopne
mov
movb
test
adc
jne
movsb
mov
inc
dec
out
test
xchg
cmpsl
pop
add
pop
mov
fadds
mov
add
mov
rolb
fmuls
mov
cmpsl
lods
negb
lahf
inc
mov
mov
ret
hlt
xchg
adc
cmp
leave
jecxz
lea
je
inc
add
dec
stos
ljmp
call
es
lret
lret
fsubrs
rorl
mov
in
jbe
aaa
pop
cmp
sarl
inc
test
sub
sahf
stos
jmp
movsl
push
loope
shl
cmp
or
push
jmp
nop
sbb
out
les
jecxz
or
push
jae
jg
aam
int3
imul
push
jb
fcmovu
jb
sbb
add
jg
nop
scas
stos
lods
xchg
mov
fsubrp
scas
mov
jno
sbb
jmp
cld
and
lahf
adc
inc
es
cmpsb
add
fxtract
ja
es
xor
sub
mov
mov
aaa
mov
movsb
jno
or
mov
nop
push
scas
jl
adc
sbbb
fists
ss
xchg
mov
out
je
pop
mov
pop
lcall
adc
popa
inc
push
mov
jns
lret
cwtl
insb
sub
rorb
jno
mov
cmpsl
or
outsb
fbstp
repz
imul
xchg
jo
jmp
daa
inc
popf
bound
jbe
mov
scas
or
out
daa
add
fildll
dec
jbe
xchg
mov
test
cltd
xchg
mov
push
mov
movsb
xchg
cs
push
fadds
enter
sub
rol
test
add
cltd
addr16
jge
or
mov
in
jo
jle
into
enter
out
sub
stos
xor
xor
xchg
xor
mov
loop
rorb
outsl
lret
or
movd
pop
jl
sbb
xchg
mov
data16
outsb
mov
sahf
mov
lahf
and
movsl
lds
jp
in
gs
adc
test
sti
adc
cmpsl
ret
inc
jecxz
mov
dec
push
jno
data16
lret
mov
inc
pop
and
mov
femms
lock
xchg
xor
fmul
fimull
pop
mov
inc
nop
je
jo
jecxz
stos
xchg
arpl
imul
outsb
notb
push
ret
aaa
push
mov
mov
mov
int
add
pop
mov
out
fs
mov
leave
dec
sub
push
pop
inc
bound
jle
xor
dec
mov
dec
shlb
inc
ret
jp
out
sub
lea
and
fmulp
addl
jmp
jbe
mov
xor
js
sbb
mov
or
into
jnp
fldenv
mov
dec
jmp
xchg
movsl
mov
outsb
imul
das
movb
mov
push
das
mov
xor
sbb
and
mov
out
into
call
push
mov
xor
push
cmpb
adc
and
mov
out
and
xchg
pushf
jle
adc
clc
insl
xchg
add
push
test
cmpsb
sub
and
xor
cmpsb
mov
fidivl
mov
dec
test
push
jnp
in
lcall
das
rolb
cs
sub
mov
sub
sbb
cmp
mov
aas
jb
sbb
pop
icebp
das
sub
jno
pop
mov
addl
jo
lret
jne
cwtl
push
inc
sub
fnstsw
test
out
xchg
movsl
in
sti
ds
sub
repnz
out
insl
and
test
shl
cli
nop
and
pop
jecxz
inc
add
ja
adc
std
pop
push
fsub
lret
addr16
mov
fs
xor
iret
inc
std
mov
push
push
dec
dec
xchg
or
int3
mov
inc
adcl
loop
push
jp
push
add
aam
jns
je
or
stos
call
popa
shl
das
sbb
sbb
packsswb
mov
pop
sub
dec
ret
subb
push
mov
inc
test
dec
mov
in
sbb
dec
loope
mov
sahf
xchg
jo
xor
repz
xor
push
xor
and
mov
mov
mov
sub
cmp
sti
scas
push
or
push
dec
js
mov
mov
sub
popa
xchg
mov
dec
rol
push
push
loop
popf
mov
lret
pop
push
sub
jle
lds
and
sbb
and
adc
xor
and
push
dec
mov
xlat
shrl
outsb
imul
mov
outsb
popf
sbb
aaa
and
mov
and
push
inc
psubsb
pop
pop
aaa
pop
pushf
jg
daa
lea
xor
dec
imul
mov
js
pusha
js
cmpl
imul
dec
divb
or
cltd
xor
push
pop
adc
pusha
fildl
fld
sbb
repz
mov
enter
xor
jae
adc
mov
pop
int
and
push
cs
push
push
lea
testb
mov
jmp
nop
jb
sahf
cmp
or
mov
popf
cld
addr16
push
sub
mov
dec
cmp
mov
aam
fiaddl
cli
or
out
sbb
sub
repz
and
repnz
xchg
and
mov
sbb
mov
cmc
mov
loopne
pusha
popf
pop
idivl
mov
sbb
jl
mov
mov
sbb
iret
pop
adc
rcrb
push
jnp
out
mov
in
dec
enter
xchg
push
dec
enter
outsl
push
jl
test
push
cmpsl
push
jno
jmp
ljmp
sub
pushf
mov
mov
call
ljmp
and
push
or
dec
fidivrs
mov
and
xor
rcll
lea
xchg
jb
jecxz
or
es
xchg
bound
cmpsb
dec
mov
rol
jge
xchg
dec
fsubs
loope
jmp
ljmp
ret
push
jne
mov
cmp
and
cs
aad
xchg
xor
dec
push
jl
out
sub
push
adc
xchg
dec
fucom
or
cwtl
mov
adc
mov
fcmovne
pop
dec
stc
sahf
xor
inc
pushf
mov
ljmp
sub
cltd
push
not
jmp
in
jno
repnz
add
loope
sbb
and
mov
add
stos
sbb
fisubl
or
fbstp
sub
lcall
pop
je
leave
pop
push
inc
adc
std
daa
nop
xor
jmp
cmp
dec
adc
mov
push
daa
xchg
inc
push
leave
mov
sbb
or
lea
xchg
cmp
jge
rorb
call
add
mov
mov
testb
or
mov
mov
jnp
out
ljmp
aaa
clc
cmpb
mov
outsb
xchg
mov
push
sub
aad
and
adc
jmp
cli
mov
jmp
mov
cmp
xor
and
outsl
or
scas
lods
xor
and
in
in
leave
dec
xor
les
or
pop
jle
and
in
push
push
sub
inc
or
sub
sbb
fcmovnb
cmp
sub
cmp
adc
pop
lret
subb
xor
fnstsw
subl
int3
xor
and
or
repnz
adc
iret
lods
ljmp
call
gs
jecxz
add
jmp
fnstcw
xchg
lret
and
mov
lds
in
dec
jle
jge
nop
lret
push
cmc
or
push
ja
shll
js
dec
inc
fildl
mov
xor
inc
and
test
pop
pusha
cs
and
sbbb
movsb
movl
inc
push
xlat
adc
aam
mov
pop
dec
fdivrs
lods
bound
pop
mov
mov
test
dec
sub
adcl
xchg
cmpsb
fldcw
mov
fcmovne
in
call
pop
and
int
mov
mov
lods
mov
adc
pop
mov
rcll
rol
sub
daa
loopne
ret
add
jmp
add
outsl
pop
lods
insl
mov
cmc
push
cmp
shr
call
into
mov
push
mov
cmp
outsl
adc
hlt
scas
aaa
cmp
pop
pop
mov
in
mov
add
lea
sahf
add
fdivrp
fucomi
fldcw
das
repnz
cmp
jecxz
insb
mov
and
adc
stos
mov
test
jb
push
cmpsl
xor
loope
out
jae
xchg
push
sub
test
cmpsb
jp
pushf
sahf
std
or
dec
lds
fwait
mov
paddsb
jnp
ljmp
fs
xchg
iret
jb
call
xchg
cmp
jbe
test
mov
nop
sbb
xchg
in
out
push
gs
inc
adc
adc
out
shrb
lea
pop
cmc
aaa
aas
cmp
out
call
sub
test
xor
push
xor
mov
mov
inc
cli
jne
jae
nop
in
and
pop
xor
adc
scas
ret
out
push
enter
jbe
pop
xchg
jmp
adc
rorb
xor
mov
idiv
mov
sbb
adc
rorb
lret
push
sub
push
iret
xchg
pop
mov
addr16
mov
sahf
mov
cmpl
mov
icebp
cmc
daa
push
mov
lds
lods
and
sub
and
test
es
aas
or
shll
mov
jns
iret
jge
mov
push
pop
mov
mov
mov
sbb
sub
adc
lea
inc
pop
out
out
mov
dec
xor
or
cmc
xchg
sub
add
sub
in
inc
pop
push
add
add
pop
fmuls
sahf
add
push
xchg
fnstenv
das
xchg
jbe
fstpt
pop
popf
and
cmp
lret
mov
push
or
aas
push
mov
rcrl
sub
inc
in
test
scas
fisubs
hlt
push
cli
mov
add
pop
jnp
or
cs
bound
leave
fadds
fists
xor
inc
or
shlb
out
mov
add
and
mov
cmp
test
fisubs
inc
mov
fwait
je
mov
and
jmp
aaa
inc
add
call
addr16
push
sbb
adc
lret
pop
mov
dec
add
out
jg
cmpsl
jp
mov
in
ds
aad
dec
lret
inc
xchg
cld
inc
scas
inc
xor
lcall
fldl
sub
ds
dec
fmuls
sarl
push
mov
push
jns
xor
adc
jne
pop
outsl
cmpsb
xchg
mov
call
or
xor
gs
adc
call
add
xchg
inc
shlb
iret
mov
and
inc
enter
push
in
mov
mov
pop
push
loopne
jmp
repnz
jge
psrad
jge
clc
ja
fcoml
and
pop
imul
mov
stc
xchg
fsubl
int
leave
mov
add
mov
push
out
push
mul
cmp
cmp
imull
pop
scas
es
mov
dec
sub
sub
add
pushf
jp
mov
sub
dec
mov
cmp
mov
or
es
pop
mov
test
push
je
fwait
or
xchg
nop
nop
xorb
add
cmp
or
movsl
push
adc
mov
cs
test
push
and
leave
adc
push
mov
xchg
addr16
int
xchg
pop
mov
pop
shlb
aad
ret
cld
add
jnp
sub
in
and
in
ja
add
jp
mov
pop
lea
push
into
ret
cli
bnd
sbb
cltd
jns
popa
cmp
push
jmp
mov
xor
ret
fcmove
and
add
jecxz
adc
ror
pop
popa
inc
addr16
pop
fbstp
mov
arpl
jmp
jmp
jb
in
and
push
xchg
cmp
ss
jne
inc
fucomip
jmp
loope
cmp
add
and
add
repnz
xor
lahf
mov
cwtl
test
lods
fnstsw
pop
nop
movl
push
cs
enter
xor
jmp
fsubr
frstor
mov
sbb
fstl
mov
mov
pop
cmp
and
xchg
or
mov
sub
jecxz
ret
pop
add
das
fsubrl
push
fdivl
push
pop
or
cli
pushf
cmova
dec
jno
cltd
push
stos
jmp
xchg
mov
or
sbb
xlat
mov
in
in
sarb
aas
ja
sbb
call
xor
push
call
out
cmp
add
nop
outsl
jno
leave
and
inc
push
out
ret
add
push
and
sbb
cmp
loope
mov
sbbb
fdivr
add
and
subb
imul
xor
adc
sub
lahf
jp
inc
push
es
test
push
cmpsb
mov
pop
daa
aad
jno
int3
lret
mov
sub
jbe
fidivl
xchg
inc
adc
push
je
mov
mov
clc
stos
cmpl
inc
sbb
daa
out
mov
push
in
pusha
cmpsb
or
sub
je
xchg
adc
je
add
or
and
sub
xchg
daa
pop
mov
jns
jecxz
and
popa
mov
leave
test
mov
cld
jg
or
fldenv
jg
mov
mov
and
daa
inc
or
mov
xor
push
fdivrs
movsl
sbb
pop
lods
and
decl
inc
or
jb
xchg
inc
push
nop
bound
or
cmpsb
push
sti
insl
xchg
sbb
pop
test
sub
lods
fs
pop
pop
subl
sbb
mov
add
cmpsl
push
jmp
cmp
xlat
stos
lea
imul
cmpsb
adc
sub
and
mov
jo
popa
xchg
push
sbb
cmp
mov
int
and
mov
cmp
sbb
in
add
mov
and
in
dec
repnz
push
ret
lahf
popf
sti
sub
popa
int
adc
mov
pop
out
ds
xor
sti
bound
inc
repnz
add
aad
imul
cmp
push
sbb
xchg
adcb
jb
pop
jb
or
aam
es
aam
test
xchg
leave
out
mov
data16
pop
enter
leave
sti
xchg
pop
xchg
xlat
sub
lods
lahf
orl
sbb
cmp
outsl
out
popa
push
push
lods
movb
das
arpl
xor
push
sub
stc
and
in
and
das
mov
pop
mov
int
jge
dec
xchg
in
xchg
fs
aas
jnp
das
pop
mov
dec
add
pusha
ss
push
repnz
jl
jg
add
clc
or
xchg
jp
push
das
mov
in
inc
psrlq
cltd
xor
jg
outsl
pop
lret
bound
aad
fwait
xor
jmp
push
stc
outsl
loop
shl
mov
dec
mov
test
mov
fnstsw
cmp
push
sbb
mov
and
pop
or
sbb
cli
dec
lret
mov
stc
scas
add
in
jns
out
push
hlt
xchg
ret
ffreep
aam
lret
sub
lds
call
das
inc
push
nop
and
jns
imulb
stc
nop
jg
movsl
mov
push
sbb
cmp
jb
mov
loope
mov
fdivrp
inc
or
enter
dec
and
inc
mov
adc
les
xchg
sbb
cwtl
das
arpl
inc
out
cmp
jbe
inc
mov
rorb
inc
test
and
push
cmp
cmp
lahf
mov
xchg
sbb
inc
jle
scas
push
cmp
xchg
cmpsb
lret
into
adc
adc
or
mov
push
inc
or
in
into
mov
sbb
iret
push
in
add
gs
or
jnp
rcrl
push
fidivrl
loopne
ja
adc
pushf
lds
dec
push
cmpsb
cmp
ret
pop
lods
xchg
push
sbb
mov
adc
movsb
enter
repz
jmp
xlat
popa
pop
and
sbbb
ds
outsl
movsb
mov
je
in
mov
aam
ds
fbstp
cli
rolb
sub
jge
insl
int
inc
jmp
jns
aad
xorb
stos
cmc
mov
notrack
mov
add
xor
and
adc
jl
pop
adcb
xlat
cmp
repnz
popf
hlt
icebp
sbb
leave
xchg
adcb
ljmp
and
pop
repnz
dec
pop
add
xchg
es
repz
mov
lret
mov
loop
popa
fwait
adc
int3
arpl
sarb
sbb
sub
jae
inc
gs
js
cli
mov
dec
and
lret
sti
jl
add
in
jno
and
sub
jne
inc
fs
into
faddl
cwtl
xlat
cmp
js
push
in
sbb
dec
mov
rol
iret
movsl
pop
sahf
sub
shrb
idivb
inc
bound
jle
lret
add
call
int
in
add
cmp
inc
xchg
stos
cwtl
stos
xor
cltd
jnp
xchg
push
add
fsts
enter
lds
jne
movsb
sahf
and
fisubrs
stos
shll
idivl
fbld
add
pop
ret
sbbb
push
cwtl
mov
push
jns
jo
gs
push
fldenv
cmc
and
pusha
test
loope
hlt
cmp
imul
inc
xchg
sub
fs
jg
mov
jmp
mov
movsl
std
add
sbb
cmp
jnp
repz
pop
dec
popf
hlt
mov
test
pop
pop
inc
jecxz
testl
jmp
outsb
pop
out
inc
push
lcall
add
push
xor
rorl
pop
mov
incb
inc
js
push
mov
xchg
mov
jns
pop
jbe
sub
mov
sub
or
inc
pop
add
cmp
and
icebp
inc
sbb
pusha
repz
inc
repz
enter
jmp
add
enter
adc
or
lea
dec
scas
fnstenv
popf
outsl
lret
std
add
mov
jno
inc
xchg
fwait
test
mov
pop
fdivrs
repnz
jecxz
clc
mov
scas
cmp
mov
sbb
fisttpll
mov
push
push
mov
mov
sarl
mov
cwtl
jno
or
data16
push
sbb
push
inc
cmp
and
scas
and
clts
fisttpll
jge
cmc
jmp
adc
ret
outsl
lret
xchg
hlt
stc
pop
and
xchg
mov
daa
cli
inc
imul
je
or
in
cmpl
jp
pop
or
jb
scas
and
sbb
cmp
pushf
lds
inc
pop
aad
jecxz
xor
shll
cs
push
fisttps
and
inc
data16
stc
mov
inc
xor
pop
lahf
jns
in
lahf
inc
clc
sbb
sbb
and
addl
jl
push
mov
sbb
mov
cmp
ret
jbe
lahf
out
inc
and
fs
mov
and
flds
mov
mov
push
scas
and
call
push
aaa
pop
mov
push
push
adc
inc
or
sbbb
and
inc
fstps
sub
pop
push
pusha
fildl
repz
movsl
dec
jle
das
int3
cld
mov
push
jecxz
jns
mov
stos
repnz
mov
pusha
ja
repnz
cmp
cmpl
lock
mov
xchg
cmp
mov
pop
and
pmulhw
adc
testl
pop
add
fwait
add
mov
cli
scas
adc
jo
scas
pop
mov
cmpsb
dec
mov
stc
mov
and
add
pop
mov
inc
mov
and
sub
iret
nop
xchg
jmp
enter
icebp
fdivr
pushl
cs
jg
push
nop
daa
stc
lods
mov
xchg
testl
xor
inc
fimull
ljmp
mov
and
jmp
repnz
dec
xchg
jo
cmpsb
std
xchg
lret
mov
fistps
or
sarl
sub
das
adc
repz
jmp
push
or
jg
and
or
sub
bndldx
pop
mov
lret
nop
jae
lods
mov
ljmp
in
mov
lea
fsub
or
fscale
pop
repnz
in
cltd
out
or
pop
mov
and
push
imul
cmc
ss
dec
aaa
les
shll
lcall
pop
mov
ljmp
lea
push
pushf
mov
xor
in
testl
sub
enter
cltd
pushf
rol
xchg
jp
fs
stc
aad
cmpl
pop
xor
std
cmp
les
push
outsb
jle
rcrl
xor
sbb
mov
out
mov
mov
or
nop
cmp
sbb
popa
pusha
push
scas
cmc
or
movd
leave
loop
enter
jne
inc
loopne
inc
dec
lret
outsb
roll
pop
iret
adcb
mov
enter
stc
or
test
daa
mov
inc
pop
in
pushf
lahf
inc
lret
jno
inc
or
push
neg
xor
cmp
fs
insl
lods
pop
sbb
mov
xchg
aad
lret
sti
pop
popf
outsl
lods
xchg
inc
aas
jge
push
push
sbb
or
jge
push
popa
pop
sarb
stc
add
rcll
loopne
pop
sbb
cwtl
fdivr
adc
push
push
jmp
xor
xor
test
test
adc
data16
and
push
test
les
das
call
pop
ljmp
xor
jecxz
xchg
sub
mov
js
sbb
insb
inc
repnz
inc
pop
dec
mov
adc
add
xor
adc
inc
fimull
scas
mov
adc
xchg
fs
xchg
push
sub
and
mov
ss
push
jnp
push
inc
jb
in
and
fildll
imul
mov
lods
sub
xor
subl
xchg
pop
push
cltd
adc
repnz
dec
fs
in
arpl
mov
adc
add
jmp
push
adc
ds
sbb
mov
imul
adc
mov
push
jne
arpl
clc
mov
rcrb
jge
jb
ret
lods
inc
insb
enter
fstpt
or
push
leave
or
jg
mov
jge
sbb
leave
mov
hlt
insl
mov
dec
push
xchg
cmp
mov
pusha
jmp
lret
pushf
ja
jne
daa
ficompl
aam
rclb
pop
rcrb
mov
jne
cmp
je
add
call
rcrb
xchg
and
xchg
sbb
cwtl
pop
sbb
sub
nop
or
daa
or
xor
inc
adc
sahf
and
mov
inc
pop
pop
outsl
shlb
adc
and
jg
sahf
stos
or
out
les
in
jge
dec
ret
lea
jno
push
mov
out
call
jmp
lahf
inc
or
out
cmpsb
repnz
sahf
cmp
adc
icebp
bnd
ja
loop
fisttpl
jns
movl
lahf
sub
mov
mov
test
sub
dec
enter
shl
mov
insb
loopne
out
sub
and
out
or
popa
mov
lahf
hlt
or
daa
jl
pop
jle
lret
aam
pop
xchg
push
pop
jg
jmp
iret
pop
fwait
cmpsl
mov
xchg
in
mov
add
push
cmpsb
or
sbb
pop
xor
jmp
mov
xlat
in
lahf
sar
pusha
mov
das
push
and
jmp
aaa
lock
sbb
testl
pop
aaa
shlb
pop
and
push
jecxz
dec
fdivrs
aad
test
xor
test
pushf
or
adc
rcrb
mov
fadds
into
sti
enter
retw
mov
push
push
dec
dec
fdivs
dec
in
pop
add
cmp
sbb
daa
jo
push
xchg
jns
lret
test
lock
sbb
mov
jo
outsb
jg
lahf
xchg
cld
push
xchg
stos
rclb
mov
outsl
mov
out
outsb
or
mov
adc
mov
rcrb
ret
mov
hlt
xchg
dec
stos
andl
adc
int
sbb
roll
ljmp
add
les
inc
mov
mov
out
push
loope
inc
std
jns
outsb
jecxz
cmpb
mov
lock
cmp
xchg
fwait
pusha
test
in
outsb
add
testb
xchg
push
js
call
add
pop
mov
or
notl
lret
gs
push
xor
add
xlat
shrl
adc
jnp
mov
pushw
sbb
mov
fstpl
daa
lcall
or
lret
dec
mov
inc
sub
mov
sbb
dec
push
fwait
add
mov
lods
sbb
mov
jle
pusha
mov
fstcw
mov
out
dec
push
rorl
inc
std
dec
fwait
cmpsl
cmp
leave
loope
cmp
jnp
mov
push
push
ror
rcl
add
cmpsb
mov
loopne
mov
adc
jle
fsubr
xchg
cs
outsb
jmp
add
out
cs
mov
pop
in
pusha
dec
popf
sub
sti
jp
insl
movsl
dec
mov
jo
es
inc
lods
mov
dec
fwait
mov
add
cwtl
dec
shl
push
push
stc
sbb
mov
sbb
cltd
outsl
sub
test
cs
xor
mov
ds
jae
mov
imull
nop
jle
lods
mov
insl
fdivp
movsl
ljmp
jae
inc
xor
and
jnp
lods
inc
das
insb
pushf
add
cmp
insb
dec
lods
pop
jb
cmovp
rcll
mov
icebp
loope
cmc
mov
sub
ss
mov
jp
in
pop
packsswb
stc
ja
push
add
jns
jb
inc
pop
push
test
xor
cmc
rorl
adc
ret
push
jge
in
mov
cmp
jp
in
sub
dec
pop
aas
faddl
lods
pop
push
xchg
cmp
dec
push
ficoms
fisubrs
sub
xchg
ljmp
and
xchg
jp
cmp
jle
jmp
arpl
pop
cltd
dec
mov
push
std
jnp
jo
xchg
xchg
popa
push
aas
and
in
int3
es
pusha
sbbb
dec
cmp
cwtl
inc
mov
inc
jae
lods
jne,pn
jecxz
push
inc
insl
mov
lahf
cld
push
inc
test
sbb
adc
jo
pop
xor
in
xchg
mov
in
jae
cmpsb
ds
jne
mov
cmp
push
cli
xor
ja
testb
cmp
inc
into
cltd
outsb
std
push
in
push
sub
cltd
jno
sbb
sbb
cld
and
outsl
and
shlb
test
dec
jne
into
inc
out
xor
add
mov
pusha
call
clc
xchg
jp
ja
cmp
or
pop
ret
and
xor
sahf
and
jb
xchg
lods
inc
ss
jge
dec
mov
xchg
scas
mov
cltd
repnz
and
jmp
movsb
loope
aad
repnz
cld
pop
pop
ss
loope
icebp
test
add
xor
nop
push
xchg
xor
jmp
adc
icebp
in
pop
outsb
jmp
pop
cmpsl
push
or
sub
push
jae
mov
mov
xchg
cltd
dec
movsb
push
lahf
push
mov
jae
pusha
outsb
xlat
xchg
cs
push
add
or
inc
int
push
push
mov
aaa
pop
cmp
xor
dec
and
adc
pop
sbb
cmp
pop
loope
dec
iret
mov
fcomps
roll
test
repnz
inc
out
sub
mov
cmovb
imul
mov
inc
lods
daa
sub
shl
inc
push
gs
mov
cmp
insb
js
loope
cmp
arpl
push
cltd
fstpt
mov
int
pop
andb
icebp
mov
fcomps
clc
pop
add
xchg
jp
jg
fwait
loopne
inc
in
sbb
jmp
push
lea
adc
lahf
or
jae
fbstp
xchg
nop
inc
adc
cmc
push
add
pop
lret
mov
lcall
cmp
mov
iret
adc
mov
or
cli
or
cmp
jp
lret
das
dec
insb
add
int
sahf
ja
mov
dec
je
push
mov
outsb
gs
push
rclb
pop
out
mov
dec
inc
add
or
mov
inc
icebp
lock
ret
aam
jmp
push
mov
pushf
scas
aaa
cmp
or
test
js
stos
std
dec
pop
pop
mov
lock
xor
xor
pop
mov
mov
ret
lcall
inc
and
mov
xchg
sti
mov
pop
and
arpl
xor
lea
jl
pop
jmp
sti
test
and
adc
dec
xlat
xor
sub
push
shlb
xor
dec
shlb
out
or
cmp
cwtl
pop
jle
pushf
xlat
mov
ficompl
stos
out
sub
lret
lods
jmp
xlat
popf
mov
push
and
aas
and
dec
adc
dec
push
xor
or
pusha
cmp
test
sbb
xor
rol
int3
or
stc
pop
cli
sbb
jne
flds
je
daa
lahf
cmp
rorb
cli
movsb
mov
shlb
mov
push
pop
icebp
int
inc
mov
loope
fnstenv
sbb
orb
add
enter
jl
sarl
loop
mov
adc
iret
jae
sub
lds
mov
lcall
and
inc
push
push
sub
dec
xor
sarb
dec
pop
adc
fdivrs
popa
scas
add
out
loope
sbb
lods
mov
pop
xor
or
fistpll
pop
dec
push
sub
xchg
mov
lds
cmp
xor
pop
push
xchg
in
sub
mov
push
pop
cmpsb
dec
dec
std
not
cmpsl
mov
fdiv
jns
adc
sbb
mov
rcll
push
push
fsubl
fisubrs
scas
outsl
sub
scas
xchg
push
fwait
movsb
xchg
adc
movb
push
xor
scas
mov
es
inc
mov
mov
lret
jbe,pn
mov
sbb
add
orb
cmp
mov
mov
pop
gs
sbb
mov
add
decl
mov
nop
xchg
pop
outsb
ss
leave
out
pop
fsubrs
pop
test
into
sub
rcl
mov
mov
cmc
jg
jmp
adc
movsl
cmp
cld
mov
adc
mov
sbb
xlat
cmpsl
sbb
jl
pushl
mov
push
push
or
sbb
das
dec
jle
sub
imul
into
movsb
mov
mov
mov
stos
mov
data16
cltd
sbb
std
sti
add
icebp
test
lea
insb
not
scas
xchg
arpl
mov
adcb
pop
repz
inc
fidivs
jmp
add
sbb
xchg
jb
rcrl
sub
mov
push
xor
cltd
out
jno
fbld
imul
pop
mov
inc
cmp
lea
add
mov
add
and
jl
sub
push
or
xor
negb
scas
xchg
aas
sbb
scas
push
jo
enter
dec
xlat
add
lahf
pop
out
inc
push
push
pop
addr16
adc
dec
sub
pop
mov
push
repnz
cmp
sti
cmc
sub
out
jecxz
mul
aas
lock
xchg
cmp
adcl
not
insl
sbb
xchg
mov
xor
mov
fwait
shrl
gs
push
cmpsb
fs
mov
sbb
cmp
sbb
test
loope
jnp
jmp
cmp
pop
shrb
jne
rclb
fucomp
jecxz
push
js
sub
add
call
push
pop
fs
adc
ja
andb
xchg
cwtl
sub
jbe
xor
mov
out
adc
sbb
push
xor
xor
add
mov
pop
aam
dec
xor
fninit
add
call
push
nop
sub
ret
adc
inc
jl
add
jmp
icebp
push
inc
adc
stc
xchg
jmp
pop
aas
sbb
push
scas
pop
push
mov
dec
mov
ds
mov
add
mov
xchg
push
lret
jne
aaa
xchg
push
sbb
sbb
iret
popf
ljmp
mov
aam
lret
inc
int
xchg
add
aam
jae
loop
leave
sbbl
mov
cmp
callw
jns
add
mov
jmp
ficompl
dec
out
scas
pop
stc
cwtl
xor
lahf
pop
jmp
xor
mull
cmp
les
insb
mov
xorb
nop
ret
push
dec
dec
je
cmc
jbe
in
add
das
ja
or
xchg
add
ja
hlt
mov
popa
cmc
or
sbb
push
mov
in
jmp
ficoml
lds
jae
sub
notrack
or
outsl
or
fldt
push
ja
out
mov
add
jne
sbb
pop
push
jp
call
movsl
cli
jae
fimuls
pop
iret
shr
outsl
and
stc
or
scas
insb
leave
mov
jmp
dec
loopne
leave
loope
shl
mov
push
stos
sub
ret
sub
ror
jae
mov
lods
dec
fcoml
xchg
inc
test
aam
test
fimuls
int3
xlat
lret
scas
stc
mov
and
insb
cli
pop
push
inc
push
emms
xchg
es
push
shrl
adc
int3
lret
xchg
outsb
cli
movsb
aas
jo
jno
sbb
jp
push
leave
xchg
mov
shrb
notl
cmp
in
xchg
addr16
jbe
adc
cmp
mov
cld
push
cwtl
sbb
lret
pop
and
lcall
orl
fwait
ljmp
notl
cmp
test
cwtl
scas
and
adc
xchg
add
sbb
arpl
lcall
call
iret
rclb
mov
outsl
stos
arpl
insb
mov
lds
jbe
in
cmp
std
jns
sub
xchg
sahf
push
cltd
or
dec
repz
jp
ljmp
lock
cmp
mov
nop
push
sbb
cmp
clc
push
xor
sti
subl
inc
nop
mov
add
test
hlt
jmp
sti
cld
sarl
mov
and
repnz
and
arpl
divl
out
jns
adc
cwtl
cmp
mov
adc
mov
jge
lods
push
sbb
lods
xor
lock
test
ja
sub
cmc
arpl
inc
xchg
xor
push
lods
inc
lods
mov
lods
mov
mov
shl
cmc
pop
and
addb
sub
lock
push
xor
push
add
adcl
adc
mov
pop
add
and
aam
push
lret
fsubrs
cmc
mov
pop
jp
das
mov
sbb
add
insb
rclb
or
inc
mov
mov
and
bound
lea
les
and
pop
loope
cmp
cmp
imul
inc
out
mov
jnp
lds
jnp
addr16
xor
inc
repnz
loope,pn
aad
pusha
mov
xchg
jmp
jns
lret
adc
sbb
push
inc
shlb
jo
pop
pop
scas
ret
repz
sbb
leave
or
out
rcrl
scas
adc
or
mov
jbe
mov
sub
les
push
mov
repz
add
jmp
jo
jmp
notb
jae
cpuid
cmp
inc
sahf
movsl
pusha
les
sub
push
adc
cmc
cld
pop
xchg
insb
lahf
cs
jle
in
pop
es
xchg
pop
sbb
pop
mov
jnp
cmp
out
scas
xchg
pop
dec
iret
pop
shrl
cmpsl
sti
and
data16
add
sbbl
lahf
xlat
sub
inc
push
rcr
mov
mov
push
cwtl
xor
xchg
mov
ljmp
ljmp
sbb
stc
add
fnsave
mov
shlb
pop
or
jmp
dec
mov
insb
rorl
repz
mov
fbstp
int3
cmp
test
lods
cmc
sbb
out
cli
in
fnstcw
arpl
jae
push
lret
in
xor
cmpsl
jmp
and
push
xor
pop
push
sub
inc
fisubs
pop
lods
sti
outsl
sub
popa
or
punpckhbw
bnd
inc
xchg
testl
mov
int3
call
inc
mov
add
fisttps
lahf
adc
es
mov
and
inc
nop
ss
sub
popf
mov
pop
cwtl
dec
jecxz
mov
imul
fisubs
js
dec
addr16
jp
loopne
fdivs
cmpsb
sbb
sbb
lahf
sbb
dec
add
dec
sub
rol
fwait
adc
sbbl
dec
mov
cmp
jb
xchg
inc
sub
hlt
xlat
jbe
pop
sub
push
jb
stc
dec
pop
sbb
push
aam
mov
jae
cld
imul
out
lahf
mov
mov
imul
pushf
fistpll
jmp
insb
jbe
shlb
ds
inc
push
faddl
and
and
fwait
lods
jnp
repz
add
fnstsw
int3
call
pop
jmp
shrb
sbb
lahf
inc
xchg
mov
mov
outsl
mov
xor
xor
pop
and
test
fs
insl
les
add
test
sbb
in
xor
and
aas
add
dec
cmp
adc
push
out
rep
mov
fs
daa
test
push
clc
jno
cmp
pop
in
push
xchg
out
jge
stos
push
movsl
fsub
jp
mov
push
or
data16
pop
outsb
aaa
testb
into
pop
cmpb
enter
mov
mov
cmp
lcall
push
push
inc
aaa
fs
and
and
xor
jb
add
lods
shll
repnz
xor
pop
dec
push
jns
lcall
and
lahf
fstl
lods
loopne
cmc
mov
bnd
stos
mov
repz
inc
mov
lcall
es
daa
out
pop
jae
add
mov
dec
push
jmp
jo
hlt
movsl
bound
inc
rorb
pop
sub
into
mov
inc
jo
push
sbb
mov
or
inc
dec
fcmovne
mov
out
rcrl
mov
movl
roll
popf
outsb
pop
insb
rep
pop
xchg
dec
imul
adc
arpl
mov
pop
mov
mov
popa
mov
sbb
jno
negb
mov
cmpl
notb
sub
outsb
xlat
imul
or
inc
fildll
add
or
fs
xor
mov
fsubrp
dec
rorl
mov
mov
mov
jb
test
pop
sbb
pop
dec
mov
dec
or
xchg
mov
fwait
cmp
sub
popf
sub
push
xchg
inc
inc
popf
inc
mov
andb
dec
imul
ja
dec
hlt
inc
testl
cli
loop
cwtl
filds
push
xchg
mov
xor
ljmp
dec
call
jg
mov
subl
shrl
mov
out
xor
sub
mov
xor
das
inc
es
addl
xchg
pop
adc
call
fimuls
and
xchg
or
aaa
nop
push
cli
or
ds
pop
or
js
push
jb
jle
inc
pusha
dec
lds
stc
lea
rcrl
push
fwait
test
cwtl
addr16
cmp
loope
outsl
xchg
cmp
pop
movsb
jecxz
clc
mov
rcrl
cld
outsl
mov
xchg
sub
mov
cltd
dec
inc
cwtl
push
pop
notb
dec
ffree
scas
add
mov
fldl
or
adc
push
std
xor
xchg
stos
mov
inc
stos
ja
fucomi
cmp
fsubl
mov
push
mov
and
sbbl
aas
add
inc
push
in
cmp
dec
clc
xor
jle
lods
adc
jecxz
xchg
jnp
sbb
popl
testl
jno
sub
add
ret
loopne
shll
jmp
popa
add
inc
stos
mov
xor
data16
sbb
out
pop
push
out
push
jmp
daa
fwait
push
outsb
xchg
stc
lods
mov
in
divb
lock
jns
dec
pop
mov
dec
mov
loopne
test
cmpsb
mov
jp
inc
jecxz
imul
mov
xor
adc
cld
mov
jns
stos
sub
jo
insb
add
inc
and
push
lods
push
sub
iret
and
mov
je
test
aad
ds
sbb
aaa
adc
jb
pop
icebp
idivl
xchg
repnz
push
cs
fwait
sbb
adcl
lds
cltd
insl
sub
sbb
outsl
fadd
jle
add
test
dec
cmp
xchg
push
jmp
je
xor
jae
stos
xchg
push
jno
dec
push
xchg
das
push
in
xchg
push
out
ret
inc
xchg
sbb
xor
adc
adc
xchg
fnsave
push
and
int3
mov
movsb
push
dec
or
subb
clc
jae
test
pusha
outsl
jle
mov
inc
inc
push
pop
pop
lods
xor
rclb
sbb
jbe
xor
pop
cmc
aaa
mul
lahf
or
xor
mov
aam
sbb
stos
into
cmpsb
ret
arpl
dec
outsb
xor
stc
or
aas
dec
stos
lret
jne
xchg
add
sbb
inc
imul
adc
out
fcmovnb
decl
jbe
scas
mov
inc
incl
xchg
inc
int
inc
mull
lahf
imul
jno
mov
dec
or
out
pushf
mov
add
pop
xlat
mov
pop
mov
xor
aam
jp
cmpsl
xor
add
aam
hlt
sbb
or
jg
aaa
fsubr
dec
mov
push
repnz
dec
push
sbb
pop
sub
sbb
cmp
hlt
call
and
jecxz
hlt
or
fwait
in
mov
es
xchg
aam
cmpsb
mov
mov
repnz
adc
jo
pop
divl
int
out
fcomps
inc
int3
and
add
mov
xchg
in
lret
jmp
add
add
push
and
mov
push
xchg
xor
fwait
iret
xor
add
decb
ljmp
push
pushf
pop
sub
jmp
addl
sub
je
inc
pop
pop
dec
mov
hlt
mov
adc
mov
pushf
inc
mov
mov
jg
xlat
adc
jbe
addr16
xor
mov
daa
jge
lret
cmpsb
jp
add
int
cld
das
jmp
incb
ret
jnp
in
lods
xor
inc
popa
or
inc
mov
cmp
cmp
les
adc
adc
mov
sbb
xor
rcr
out
mov
fstl
cld
xchg
inc
mov
push
jmp
lret
or
les
add
sbb
pop
out
cmp
push
rcrl
scas
and
adc
loope
cmp
push
xchg
lods
dec
mov
sbb
cmp
out
sbb
pop
mov
pop
leave
hlt
addr16
adc
dec
sbb
mov
ret
push
fdivrl
xor
adcb
xchg
mov
jl
pop
dec
mov
outsb
orb
addr16
or
orb
jnp
adc
jp
jae
or
jmp
jp
xchg
inc
mov
daa
in
es
mov
pop
cmp
lahf
stos
xchg
jne
or
xor
jp
inc
mov
push
xchg
add
sbb
mov
push
in
or
dec
jbe
insb
movsb
push
mov
shl
enter
addr16
jecxz
gs
adc
cmp
jl
mov
lret
mov
stc
sub
adc
into
popa
xchg
ret
sbb
xlat
movsl
sti
sti
pop
sbb
jle
xchg
jle
xor
push
sahf
lods
mov
jmp
mov
shll
inc
push
add
xor
or
pop
add
fistpl
dec
xlat
pop
xchg
hlt
adc
jns
dec
mov
sbb
push
add
lds
mov
fxsave
xchg
lock
jae
fcmovne
cmp
add
xchg
adc
sbb
imul
dec
sub
pop
cmp
dec
xchg
insl
xchg
mov
andb
daa
loop
add
mov
pop
sti
test
mov
jle,pt
lret
bound
mov
mov
pop
jp
or
push
nop
popf
jg
fstpl
add
out
lods
pop
test
repnz
fstps
das
lea
mov
pop
not
xor
sarl
jge
sub
out
jnp
sub
pop
shrb
pop
sub
cmpsb
orb
sarb
or
adc
jnp
rcr
pop
mov
lods
fmuls
pushl
cmp
mov
insb
mov
ficompl
lret
cmp
int
jno
xchg
ret
push
push
push
fnsave
loop
mov
cmp
jo
imul
repnz
jae
cmc
data16
jns
jbe
or
push
mov
addr16
flds
cltd
mov
push
out
push
inc
mov
sbb
and
push
push
nop
daa
js
aam
or
out
sbb
cltd
jne
cli
imul
cs
lods
sub
and
mov
or
outsb
push
sub
jecxz
pop
test
movsb
out
jge
rolb
lea
mov
mov
cmpsl
iret
mov
jbe
subl
outsb
notl
xchg
fisttpl
shll
dec
mov
das
insl
into
lea
and
cmpsb
movsb
bnd
scas
ss
and
scas
jle
xchg
in
jg
aad
clc
pop
adc
pop
xor
sub
push
xor
mov
das
loop
sub
jns
xor
ret
and
andl
cmp
mov
push
pop
xchg
fwait
iret
loop
or
jg
sbb
shlb
repz
dec
sti
aad
mov
sarl
es
mov
add
jmp
mov
sti
pop
sbb
nop
adcl
push
cmpsb
adc
sar
data16
test
out
jbe
lea
or
fstl
cmc
mov
jmp
push
pop
pop
and
sub
ret
jbe
int3
jg
push
dec
mov
add
cmpsb
fwait
inc
push
xchg
add
pop
adc
xor
jle
add
fsubs
lods
sbb
xor
stc
sub
decl
dec
adc
lret
inc
pusha
cmpsl
sbb
dec
or
into
mov
ret
inc
ret
dec
neg
ret
dec
loop
jmp
repz
cmp
adc
pop
dec
fs
mov
test
cmp
pop
neg
push
mov
clc
mov
mov
fisubrs
push
push
xor
dec
mov
psrad
adc
dec
in
rclb
push
jns
or
test
adc
fs
testb
test
scas
cmc
push
and
pop
xor
adc
push
lret
pop
push
pop
repz
adc
xchg
ljmp
insl
mov
mov
sbb
cmp
jp
imul
xlat
scas
lock
jge
cld
scas
push
mov
inc
xchg
push
mov
movsl
int3
out
xchg
shll
or
lods
out
mov
je
lock
sub
cmp
pop
sahf
sub
addr16
fstps
add
pop
cmp
fs
jecxz
in
popa
dec
fabs
mov
mov
fiaddl
cli
pusha
dec
loope
scas
es
fwait
in
fsubrp
sub
mov
fisubrl
fldl
inc
lods
shrl
mov
pop
add
or
and
rcr
jns
aas
aad
icebp
mov
sbb
imulb
push
scas
sub
aam
das
sub
scas
rcrl
xor
adc
shrl
lds
nop
pop
xlat
sub
pop
in
enter
mov
and
fmull
dec
dec
fidivrl
push
lcall
das
int3
insb
sub
addr16
jne
pop
adc
push
lret
insl
std
or
rcr
shrl
sarl
add
add
fs
fstpt
fwait
repz
xlat
and
dec
mov
fdivs
fldenv
push
push
xchg
adc
mov
fimull
ds
or
lds
mov
mov
xor
inc
leavew
push
into
xchg
in
subl
sub
sahf
repnz
nop
add
mov
insl
cwtl
lods
popf
jns
addr16
fisubl
push
mov
sub
aas
mov
sahf
jl
inc
fimuls
mov
popa
stc
fs
clc
cwtl
mov
sbbb
jecxz
clc
xor
scas
ror
test
mov
insb
inc
cmp
push
mov
xor
push
mov
stos
aad
xchg
jp
mov
cs
clc
jmp
sub
add
push
mov
std
mov
aaa
inc
xlat
push
push
psadbw
lahf
aaa
mov
xchg
daa
pop
sbb
loope
inc
scas
inc
mov
sbb
pop
daa
xchg
mov
ret
test
mov
gs
call
jmp
in
jp
push
push
mov
test
leave
out
lahf
fmuls
pop
in
sti
or
sbb
mov
stos
jbe
adc
adc
stc
jnp
inc
lods
je,pn
ficoms
inc
aad
mov
fwait
outsb
js
or
cltd
mov
pop
in
inc
cltd
lret
mov
cmp
cwtl
bound
pusha
lds
push
inc
into
mov
add
pop
mov
mov
daa
sub
inc
or
enter
lahf
jl
sbb
fdivl
mov
mov
push
stc
nop
test
xchg
gs
pop
fsubrs
push
sub
xor
and
pop
fisttps
cld
popl
jnp
rclb
inc
cld
inc
adc
pushf
xorl
jecxz,pt
lret
add
enter
push
enter
mov
mov
int3
repnz
pop
mov
shl
inc
mov
dec
add
mov
sub
dec
add
dec
jae
lods
rcrb
push
push
mov
xchg
imul
out
mov
or
iret
cmp
stos
sbb
inc
loopne
aam
test
scas
cmp
inc
cltd
inc
movsl
mov
adc
and
mov
pop
ss
cmp
je
cli
sbbl
mov
pushf
in
iret
icebp
stc
mov
into
inc
adc
sub
setnp
sub
imul
jbe
and
jns
stc
outsb
movsl
mov
ja
ja
call
or
mov
mov
leave
loope
imul
adc
stos
xchg
cvtps2pi
roll
mov
sbb
ret
jl
mov
test
inc
jne
and
add
xor
cltd
xchg
inc
lret
mov
and
mov
dec
xor
call
inc
jge
fmuls
mov
push
or
cmp
sub
test
xchg
mov
push
into
in
out
mov
pop
mov
sbb
sbb
sub
cmp
fnsave
mov
push
in
push
or
mov
push
insb
mov
imul
test
mov
int3
stc
or
bound
in
arpl
mov
pop
test
push
and
pop
jmp
add
jecxz
xchg
xchg
xor
call
mov
pop
in
rcl
out
popa
or
mov
xchg
stos
sub
ret
push
std
sub
out
cli
loope
inc
jbe
pop
icebp
out
rcl
fwait
iret
popf
xchg
mov
out
shl
push
sbb
inc
pop
scas
addr16
dec
lret
sub
icebp
scas
sbb
fwait
sub
loop
aaa
mov
and
jge
push
dec
xor
cwtl
std
shrl
jns
cmp
dec
jns
dec
jo
mov
pop
dec
and
push
sbbl
or
add
or
ret
mov
stos
push
xor
mov
pushf
inc
cmp
jne
stos
lret
inc
or
dec
mov
xor
cli
test
inc
cs
es
jl
enter
xsha1
cmpsb
dec
jmp
push
fildl
xchg
mov
jb
stos
aaa
ret
cmpsb
pop
inc
fs
ret
jl
adc
cmp
pop
lahf
sbb
mov
push
mov
test
icebp
sbb
pop
loope
addr16
fisubrs
jg
lds
lea
mov
ret
aam
jae
cli
lret
xchg
adc
shll
xchg
lods
jmp
xchg
mov
push
cwtl
push
push
scas
and
cld
dec
adc
inc
adc
fiaddl
cs
fs
sub
fwait
imul
idivb
push
adc
push
leave
sbb
les
xlat
add
iret
and
popa
mov
call
push
lret
addr16
add
lcall
and
jnp
dec
xor
mov
pop
dec
sub
pop
lock
and
lods
shl
and
std
jo
sbb
sti
xor
faddl
sbb
outsb
pop
cli
adc
jns
mov
shrb
dec
jge
push
pop
loope
cmp
push
xor
jmp
lods
in
jl
jbe
push
mov
pop
loope
jl
and
and
or
or
mov
lods
cmp
inc
loopne
fptan
movsb
push
inc
sbb
sbb
xorb
out
imul
aaa
add
cmpsb
mov
aas
in
add
or
xor
in
pop
fnstenv
fs
int
mov
icebp
mov
insb
lea
cmpsb
and
popf
xchg
xchg
mov
push
xor
shlb
loop
jg
rorb
test
dec
int3
lret
repnz
rcll
xchg
pop
cld
jle
push
inc
fidivrl
mov
lret
xlat
jecxz,pn
shlb
sub
inc
pusha
mov
push
and
dec
stc
and
mov
mov
cs
test
insb
inc
loope
aas
adc
jbe
out
jl
xor
jns
and
iret
pop
mov
or
in
xor
xor
and
pop
cld
push
jp
ljmp
mov
mov
shr
mov
mov
mov
test
sub
xor
and
mov
jge
cmp
inc
inc
into
xchg
xor
xor
ds
scas
bound
fldt
inc
popf
test
and
jmp
xchg
jp
pop
imul
shrb
push
sub
scas
daa
test
xor
or
cmp
outsb
fildll
add
xor
push
bound
dec
pop
sub
pop
mov
or
popa
ds
dec
bound
and
rcl
movsl
mov
add
fdivl
rorb
dec
push
mov
mov
and
dec
mov
imul
add
loopne
into
cs
in
mov
stos
xchg
mov
fwait
jbe
loopne
loopne
out
and
jbe
and
loop
outsb
dec
add
dec
mov
or
pusha
add
leave
jecxz
xchg
call
das
cmp
cwtl
and
sub
add
fnstenv
adc
fcmovu
and
loope
int
or
fisttpl
xchg
aam
lret
or
and
cmp
addr16
in
in
out
inc
jp
xorb
mov
add
adc
inc
and
je
popa
xor
movsb
into
enter
push
je
lahf
lds
int
xchg
invd
xchg
cmpsl
out
adc
xchg
add
aas
inc
js
out
fdivp
inc
adc
jge
mov
pusha
xchg
pop
xchg
icebp
setne
dec
adc
dec
push
clc
insb
stos
outsb
loop
cld
jle
jecxz
je
sub
jns
pop
push
fmull
dec
addb
test
push
jnp
fxch
adc
push
xchg
inc
inc
dec
fucomi
mov
inc
push
add
ljmp
psrld
dec
out
or
popa
push
ficompl
sbb
inc
sbb
and
ljmp
jg
mov
sub
or
push
int3
inc
int3
mov
sbb
cmp
mov
xchg
mov
int3
test
mov
inc
loopne
jns
andl
dec
repz
aas
inc
mov
std
jo
sbbb
push
jge
inc
aaa
sbb
mov
outsl
jnp
into
mov
xlat
arpl
pop
aad
mov
pop
lods
sti
mov
ds
push
mov
push
jns
xchg
jge
push
dec
fldl
stc
xchg
mov
mov
or
sti
jmp
or
push
mov
pop
mov
cmpsl
loope
jnp
test
repnz
sub
cmpsl
sub
sbb
jo
popa
or
push
adc
das
pop
mov
scas
add
adc
aam
outsb
jmp
pop
mov
out
popa
push
sbb
mov
rclb
es
sbb
pop
les
mov
aad
out
push
rol
lea
ret
stc
pop
jmp
push
sbb
inc
push
pop
fucomi
jno
mov
sahf
add
pop
mov
ljmp
mov
scas
sub
adc
mov
cmp
mov
es
cmpsl
push
sbb
loopne
lahf
in
shl
lahf
clc
out
pop
cltd
nop
testl
stc
jnp
orl
mov
je
xor
pop
sti
loopne
jle
ss
xor
pop
jne
xlat
jns
es
cmp
push
clc
pop
fistpll
mov
orb
aad
insl
mov
jl
sbb
sar
fmuls
jg
jmp
mov
and
fisubrs
out
pusha
ss
fstpt
or
push
out
ljmp
cld
ljmp
push
in
lods
jo
je
clc
js
in
xor
outsl
pusha
negl
sub
fs
push
or
and
test
xchg
mov
bound
mov
mov
push
add
stos
inc
sbb
clc
dec
pop
lret
mov
andl
dec
rclb
mov
adc
jp
jno
mov
mov
ret
enter
adc
add
or
xchg
jbe
xlat
dec
icebp
jo
fldl2t
cmpsb
xchg
jle
cwtl
inc
mov
daa
out
xor
push
mov
mov
je
ja
stc
fdivl
ja
dec
test
das
repnz
push
icebp
xchg
cmpb
adc
rol
jecxz
stos
jne
mov
jge
mov
clc
iret
cmc
inc
dec
adc
jnp
insb
xlat
cld
pusha
fsubrp
popa
into
or
imul
xor
or
adc
dec
and
sahf
sti
aaa
fadds
inc
inc
sub
mov
adc
aaa
and
rol
xchg
sub
cmp
and
loope
addr16
pop
fstpt
mov
fisttpl
jecxz
imul
movsb
lret
jnp
push
jl
mov
xchg
jno
or
push
test
inc
or
out
aaa
daa
jb
xor
mov
hlt
shll
stos
aam
sbb
rcrb
push
mov
mov
jg
mov
inc
sbb
adc
js
cmpsb
arpl
cltd
clc
push
call
sub
test
jmp
orl
fld
dec
jecxz
mov
or
out
mov
adc
inc
sub
pop
mov
push
or
jne
mov
jl
dec
mov
dec
sub
cmc
insl
pop
mov
jmp
lret
lock
or
out
jge
xor
arpl
jb
push
xor
sbb
mov
scas
aaa
rorl
addr16
rcl
test
sarl
xchg
jp
sbb
enter
std
in
adc
arpl
add
lea
inc
push
or
arpl
xchg
mov
inc
or
cmp
dec
adc
fwait
pop
stos
mov
fstpt
adc
inc
xchg
ss
cs
mov
imul
dec
xchg
outsl
jns
icebp
fstpt
imul
mov
cmpsl
push
xor
mov
or
and
in
nop
or
test
std
cmp
jmp
or
daa
mov
inc
fdivr
data16
mov
mov
xor
in
xor
cs
jo
mov
das
ret
push
pop
mov
pop
push
xorb
in
rolb
outsl
pop
ja
jae
idivb
sub
in
xchg
mov
sbbb
push
pop
rol
shll
andl
ror
leave
pop
push
mov
push
mov
gs
adc
ja
adc
in
inc
sbb
hlt
jns
xchg
movsl
lods
lcall
bound
cmc
mov
and
inc
push
pop
pop
fisubl
push
ljmp
lcall
cwtl
dec
lea
shll
jae
addr16
ja
adc
iret
jae
add
jne
clc
insl
or
or
mov
push
sub
push
pop
mov
pop
fidivl
or
adcb
mov
daa
mov
test
rcr
xor
pop
aas
jge
pop
popa
fwait
lret
and
jle
repnz
ret
out
stc
stos
mov
jl
mov
clc
sahf
das
inc
arpl
adc
ret
gs
dec
pause
test
cwtl
dec
jg
imul
push
enter
mov
sbb
add
cmp
mov
andl
cli
cli
int3
mov
std
xchg
enter
enter
int3
gs
jbe
jle
jp
test
cmp
addr16
nop
dec
cmp
daa
jae
or
cmp
ja
aam
movsl
repz
xchg
pop
repnz
jnp
jle
ja
lds
push
loope
mov
pop
repz
push
jp
sbb
aaa
pop
repz
movsb
mov
jns
adc
sbbb
inc
loopne
in
insl
std
pop
mov
decl
roll
push
pop
jno
jo
in
lret
push
repz
jae
sbb
stc
push
in
insl
xor
add
mov
testl
rorb
cmp
sbb
and
es
sub
pop
leave
ja
je
push
call
cmpsl
lret
popf
xchg
outsl
jne
mov
inc
xchg
sub
mov
and
rclb
dec
lret
dec
test
sbb
mov
call
adc
jg
shl
and
outsl
outsb
ds
nop
in
inc
loopne
inc
pop
lock
shlb
pop
jb
pop
lret
bound
adc
dec
out
adc
xchg
jo
and
xor
cmp
mov
icebp
in
pop
mov
stos
ss
jle
fsubr
hlt
mov
rcrl
xchg
mov
xchg
mov
fcoms
fstl
in
aas
xorb
inc
ret
stc
mov
lret
mov
arpl
xchg
in
inc
lods
dec
popa
fbld
cmpl
movsl
mov
lea
and
mov
int
std
rclb
inc
das
jo
add
adc
sarl
loopne
pop
bswap
mov
sub
and
adc
scas
fdiv
mov
roll
shrl
sbb
jb
adc
dec
xor
jns
lock
mov
jmp
insl
icebp
rcrb
leave
int3
fsubs
mov
inc
fwait
mov
xchg
mul
mov
out
out
adc
scas
repz
mov
mov
mov
addr16
cmp
mov
dec
xlat
ror
pop
shll
pusha
dec
sti
dec
mov
pusha
or
fs
stos
cmp
das
adcl
push
mov
mov
add
push
pusha
les
cltd
pop
xor
pop
test
sar
mov
lahf
test
sbbb
mov
out
jle
fistpl
fistps
iret
loope
sbb
mov
aad
push
out
push
pop
ss
pop
fnstenv
test
xor
insb
push
mov
pop
sub
iret
out
inc
les
rclb
mov
cmp
call
push
inc
pushf
imul
stos
pop
fadds
scas
daa
xchg
lea
sub
inc
mov
shrl
jo
dec
inc
jbe
push
ja
dec
xor
std
xchg
sub
jae
or
cmp
add
dec
xor
jecxz
stos
and
sub
cmp
jecxz
ja
and
pop
push
jns
addl
mov
test
push
ljmp
out
in
sub
pop
pop
or
popa
clc
sbb
and
push
jg,pt
and
inc
dec
lret
dec
push
rcll
mov
cld
xchg
cs
sbb
mov
inc
mov
jnp
sbb
xchg
add
push
ficompl
std
inc
fdivrl
mov
arpl
mov
xor
out
push
iret
add
adcb
mov
xchg
jle
lret
fistps
mov
add
dec
mov
sbb
mov
sahf
mov
inc
popa
idiv
pop
push
inc
sbb
lea
and
mov
mov
pop
or
stos
jle
ss
dec
out
psrad
insl
xchg
gs
dec
xlat
pop
cmpb
aad
call
insl
xor
sbb
cli
dec
inc
aas
les
and
divb
loope
mov
push
shr
mov
mov
lea
mov
xor
fsubrl
out
cli
lods
pop
pop
sub
sarb
cmp
and
fbstp
ficompl
pop
mov
imul
xchg
inc
push
cmp
into
mov
jnp
add
ja
jae
jmp
inc
je
xchg
fcompl
push
hlt
jae
loop
imul
test
or
push
mov
mov
cmp
shlb
jae
dec
movsl
mov
push
sbb
xor
mov
daa
cmp
cmp
decb
pop
cmp
cmp
fsubl
jo
and
jae
lock
cmp
lret
fbld
lock
stos
mov
ror
add
jp
in
and
fists
jns
xchg
or
cmp
adc
andb
cli
jbe
out
decb
mov
jmp
push
vxorps
cmp
imul
xchg
mov
pop
push
pusha
cmc
or
pop
enter
cmp
test
jne
pop
cmpb
mov
mov
andb
add
jo
adc
dec
pop
test
jne
mov
gs
jl
dec
xchg
mov
sbb
jns
jns
pusha
xchg
xor
ds
arpl
lahf
push
mov
sahf
fcoms
pusha
movsl
icebp
lahf
test
out
jo
xadd
in
xor
fbstp
fcomp
pushf
scas
adc
std
cltd
mov
fadds
jmp
flds
sbb
rol
lret
xor
test
sbb
mov
dec
add
inc
xchg
pop
out
jae
cwtl
and
aam
repz
test
clc
cmp
cld
sbb
incb
cltd
inc
xchg
xor
add
adc
cmpsb
lahf
inc
in
xchg
js
jae
movsb
and
jne
xchg
xchg
ret
inc
push
pop
fmulp
popa
cmp
xor
sbb
pop
in
xor
dec
mov
fidivs
pop
push
or
mov
sub
leave
lret
test
dec
dec
mov
scas
outsb
outsb
rclb
push
cmpl
arpl
mov
shll
push
xor
mov
cmp
dec
sub
aaa
jae
sarb
out
aad
dec
adc
out
je
mov
dec
adc
js
aam
inc
mov
mov
scas
push
push
or
dec
rcrb
jle
pop
dec
das
add
or
lahf
sub
ret
push
sub
add
outsl
repnz
and
int3
js
rcll
mov
aaa
outsb
ss
push
ljmp
movsb
pop
xchg
cmp
jecxz
adc
int
jb
jns
xchg
jo
pop
ljmp
ljmp
adc
popa
popa
daa
mov
pop
add
testl
mov
xor
inc
inc
rolb
das
jne
aam
popf
sarl
fcoms
jl
push
lock
or
jge
lea
mov
scas
cmpsl
scas
push
dec
sub
orl
dec
mov
je
fiadds
popa
jnp
testl
fnstenv
push
out
jl
gs
cmpsb
cmp
shll
sahf
cmpb
fnstsw
sbb
jp
push
mov
icebp
add
inc
es
and
mov
adc
inc
xor
je
fs
adc
test
and
inc
test
inc
fs
xchg
inc
mov
jecxz
push
sbb
xchg
cmpsb
adc
enter
out
aad
lods
dec
aam
out
mov
mov
rcrl
sbb
mov
xor
fwait
xchg
jb
in
pop
mov
negl
cltd
jne
and
pusha
nop
add
nop
aas
jmp
fldenv
mov
sarl
push
icebp
mov
in
inc
rorb
sahf
lret
out
mov
inc
jle
fnstenv
cmp
in
addr16
shll
mov
xchg
and
adc
dec
out
ja
int
pop
jbe
inc
test
push
ja
dec
std
mov
filds
nop
scas
pop
out
sbb
mov
jle
mov
sarb
test
xchg
mov
sbb
sbb
inc
fwait
xor
jb
adcb
mov
fbstp
add
push
fdivrs
in
pop
pop
repnz
cmp
in
mulb
push
loopne
inc
insb
xlat
outsb
lahf
sbb
push
test
into
inc
cmc
ja
and
mov
push
inc
cmp
xchg
xor
enter
test
je
test
fcoml
xor
out
je
mov
cmp
scas
jb
loopne
xchg
and
das
cmp
pop
loop
push
push
or
sarb
push
ljmp
insb
iret
inc
or
jb
jmp
mov
sti
push
pop
mov
pusha
es
sbb
popf
sub
inc
mov
push
cld
negw
clc
fwait
arpl
jmp
pop
aad
hlt
stos
dec
mov
fnstsw
data16
lcall
xchg
cmc
bound
mov
lea
call
mov
rorl
mov
jb
lret
jno
les
jne
push
or
shlb
mov
or
cs
dec
pop
ficomps
or
std
mov
call
cld
push
mov
fnstenv
push
add
dec
adc
push
pop
rep
dec
mov
call
shrb
addr16
push
movsb
or
inc
cmp
push
push
sbb
jecxz
outsl
adc
call
loop
sahf
cmc
mov
sbb
loopne
cpuid
lea
scas
xor
inc
hlt
enter
in
adc
inc
loop
dec
push
inc
pop
xchg
xchg
dec
add
inc
push
es
movhps
jb
mov
icebp
jo
xchg
lret
popa
dec
xchg
sub
cmp
pop
enter
inc
fs
cmp
dec
aad
popf
stos
ds
mov
pop
cmp
jge
xchg
mov
dec
sbb
inc
mov
ret
pop
push
iret
dec
cmpps
outsl
jp
popa
insb
sahf
nop
fiaddl
flds
xor
movsl
mov
outsb
adc
adc
or
mov
loope
ficoms
cmp
aaa
cwtl
stc
mov
dec
and
mov
cwtl
push
cmp
cmp
cld
pop
and
push
aam
cld
daa
out
inc
ret
and
add
test
pop
mov
mov
sub
mov
subb
or
gs
aad
or
add
dec
rol
cli
mov
popa
lods
stos
in
jo
scas
cmp
pop
fwait
es
xor
push
mov
and
ret
and
lret
mov
mov
enter
adc
inc
cli
lahf
test
push
mov
mov
cmp
lods
xchg
xor
and
faddl
lock
sub
or
sbb
icebp
jno
and
mov
mov
lods
cmp
stos
pop
out
inc
neg
inc
xor
add
pop
and
cld
loop
push
add
mov
loop
js
fwait
xchg
sub
pusha
call
inc
es
pop
sbbl
jecxz
sub
mov
lret
pop
adc
lcall
je
popf
sbb
cmc
dec
test
repz
aad
dec
in
inc
cltd
xorl
push
fisubrl
sbb
mov
shrb
xlat
mov
sbb
les
and
jbe
pop
data16
pop
push
test
fidivl
or
cmpsb
inc
adc
flds
push
std
pop
mov
mov
push
dec
mov
in
gs
scas
pop
out
test
mov
fsubl
inc
sbb
cmp
fldt
scas
pop
and
stos
cmp
push
bsf
lret
cmp
ret
dec
std
mov
rclb
mov
xor
inc
xchg
test
xor
stos
lds
lods
sti
push
scas
call
mov
mov
xchg
jl
jo
inc
loop
push
movsb
loop
sub
das
cmp
outsl
mov
int3
mov
jns
sbb
lret
cmp
leave
andb
outsb
xchg
les
adc
shrb
and
xchg
dec
cmp
lret
and
jge
outsb
jo
lods
pop
xchg
je
inc
cmpsb
aad
loopne
mov
add
sub
mov
mov
into
mov
loopne
fcomip
push
xchg
std
and
fs
cltd
xchg
fidivs
ficoms
jl
mov
stos
jp
jno
xor
xchg
cmp
stos
dec
lods
call
inc
stos
xchg
dec
int
ret
adcb
stos
and
push
push
xchg
mov
in
mov
jnp
scas
lods
jae
xchg
xor
insb
shll
into
mov
fimuls
jne
and
xlat
out
pop
and
pxor
push
jo
sbb
test
inc
jbe
mov
arpl
fnstcw
les
enter
or
outsl
lret
aam
inc
lock
fists
loope
ret
inc
cld
shrb
aam
jno
xchg
out
iret
xor
hlt
lods
ja
fisttpl
js
ds
mov
outsl
popf
in
dec
nop
scas
xor
and
aas
xchg
imul
movsb
fdivrl
cmpsb
inc
popa
jno
cmp
pushl
test
cld
mov
push
push
inc
fidivs
add
push
ljmp
sub
jbe
xchg
shlb
jmp
imul
sub
dec
lret
sar
aaa
xor
jbe
enter
sbb
jb
jecxz
mov
popf
inc
sub
add
pop
stos
out
xchg
dec
popa
cli
sbb
cmp
push
sub
adc
ss
mov
loope
xor
jno
jnp
aam
or
nop
pop
les
and
sbb
pop
int3
fimuls
int
mov
mov
inc
xlat
push
mov
divl
out
add
pop
aaa
xchg
and
cld
jg
and
rclb
xcrypt-cfb
cmpsl
popa
je
stos
jecxz
mov
mov
push
stc
xor
and
pop
jb
inc
rolb
cmp
leave
aad
jle
mov
out
imul
imul
scas
jl
pop
mov
out
jae
push
dec
test
mov
push
leave
aam
je
mov
and
cltd
test
jo
cmpsl
jle
out
dec
push
xor
and
lock
lret
pop
dec
jbe
fldt
int3
mov
and
xor
ljmp
mov
xchg
pushf
inc
jge
mov
push
sahf
pop
inc
cmpsl
ja
inc
test
dec
loope
adc
push
or
mov
push
pusha
fimuls
faddl
push
pop
pop
fcmovbe
lods
push
sbb
ret
mov
jbe
dec
xchg
adc
and
jnp
push
les
or
shll
cmp
pop
jmp
rcrb
outsl
call
daa
popw
lahf
dec
push
xor
dec
pop
dec
std
popa
andb
stos
cs
xlat
daa
pop
leave
inc
adc
xchg
cmovge
cmc
mov
add
movsl
inc
div
test
lret
loop
sub
movsb
ds
push
leave
test
or
mov
xchg
dec
or
mov
pop
mov
or
jbe
jne
loope,pt
xchg
mov
push
mov
mov
repz
inc
lret
cmpsl
or
mov
pop
imul
push
mov
dec
loop
xchg
inc
imul
inc
pop
mov
mov
xor
adc
push
inc
jne
jae
mov
aad
add
les
andl
xor
addl
dec
xor
jp
sti
lods
add
lcall
jp
std
adc
adc
mov
pop
fldcw
sub
bound
push
in
ss
push
cmpsb
cmp
xchg
insb
popa
or
mov
dec
aaa
mov
lods
sbb
popa
inc
cmp
dec
mov
inc
sbb
cwtl
jl
push
iret
xchg
shlb
fistpl
mov
push
sub
shll
add
adc
pop
cwtl
xchg
scas
leave
xchg
iret
data16
pop
mov
lds
movsl
addr16
push
lret
push
cwtl
das
nop
adc
push
xor
cmp
sbb
sbb
mov
mov
sub
ss
cwtl
outsl
nop
xor
mov
or
outsb
stc
mov
xchg
cmp
sub
int3
hlt
dec
shlb
lahf
push
mov
push
outsb
inc
fwait
xchg
mov
dec
and
into
cmp
jmp
outsl
mov
cs
int3
jb
into
in
shl
or
popa
divb
pusha
cmp
xchg
xchg
dec
xchg
mov
or
pushf
xor
out
xor
pop
outsl
push
inc
mov
push
lods
lahf
xchg
mov
call
inc
inc
bound
in
enter
shll
data16
push
or
sbb
or
addr16
dec
test
pop
adc
adc
xor
jne
pop
popf
int
jnp
sub
xor
test
xor
xchg
fisttps
xchg
mov
pop
mov
hlt
push
push
jl
mov
arpl
and
dec
insb
rcrl
sbb
std
in
fdivp
or
adc
out
or
mov
pop
sub
cld
or
or
adc
sbb
mov
mov
test
addb
outsb
test
cwtl
fldl2e
negl
enter
mov
aas
and
push
inc
stos
xchg
inc
and
stos
aam
adc
ljmp
rclb
popa
and
shrb
call
dec
inc
mov
movsb
cmp
arpl
std
mov
jns
adcl
sbb
leave
test
mov
mov
mov
lret
xor
popf
daa
iret
and
stos
addr16
in
daa
lea
jae
pop
fistpll
fbld
mov
scas
sarl
test
imul
adc
mov
xchg
sub
rclb
inc
stc
pop
mov
dec
fcmovu
xor
lcall
jmp
ss
mov
fdiv
cmp
ja
into
and
leave
dec
loopne
ret
repz
loopne
addr16
mov
imul
mov
add
arpl
jns
mov
xorb
out
repz
push
sahf
or
inc
and
push
sub
xor
test
sahf
stos
in
in
cmc
sub
insl
sub
dec
out
mov
xchg
arpl
pop
rclb
stos
cld
jle
sbb
adc
lods
popa
enter
lods
pop
int
push
out
int
xchg
sbb
loop
iret
in
les
xorl
ja
shll
adc
cmpsl
rcrb
or
in
or
jb
out
mov
xchg
xor
mov
repnz
pop
or
xchg
jno
nop
pop
inc
mov
outsl
sarb
adc
mov
dec
xchg
jle
rcl
sub
rcll
int3
mov
cltd
iret
and
fidivl
pushf
lea
iret
lods
call
push
mov
icebp
lret
int3
sbb
ljmp
or
or
push
sub
adc
fildll
loope
sub
rclb
mov
aaa
or
sbb
dec
push
push
lds
aas
shll
fcompl
mov
and
int3
arpl
mov
mov
cs
push
or
push
lea
sahf
leave
jb
xor
fs
fs
jmp
jmp
stos
xor
gs
and
arpl
pusha
mull
adc
in
ds
mov
add
push
js
sbb
cmc
mov
sahf
mov
add
js
jg
sbb
ficoms
jmp
mov
fwait
sbb
int3
jecxz
push
mov
fucomp
iret
xchg
ja
mov
mov
pop
cs
jae
nop
lods
pop
pop
fdivs
cs
or
cld
test
dec
and
dec
sbb
fdivrl
sbb
fs
xor
push
ljmp
inc
enter
sub
cmpsl
int
push
inc
or
jl
pop
mov
or
inc
add
push
mov
or
sub
fxrstor
xchg
xchg
mov
mov
stc
lret
jmp
std
sbb
stos
add
xchg
mov
push
push
int3
inc
cmpsl
sarb
sub
jl
lods
pop
lds
addr16
ret
adc
cmp
inc
outsb
popf
ret
insb
lcall
mov
adc
test
push
jne
mov
cmp
cmp
out
test
jns
adc
inc
imulb
inc
sub
xchg
dec
cmp
jns
aad
and
out
popa
mov
pop
lret
cld
outsl
cwtl
push
pop
mov
ljmp
and
xor
js
push
mov
aaa
xchg
rcr
pop
xchg
out
mov
ret
or
loope
add
xchg
add
dec
dec
add
clc
popf
inc
in
les
mov
idivb
dec
repnz
cwtl
xchg
stc
sub
hlt
lret
mov
inc
leave
push
pop
push
ja
sub
xchg
and
scas
push
iret
aaa
sbb
mov
and
les
rcl
rorb
fidivrs
popf
xor
sti
loop
shl
add
pop
fcom
loopne
pop
stc
hlt
mov
insb
mov
jle
scas
dec
ret
pop
fsubs
push
add
and
mov
lods
add
push
out
cltd
shlb
insl
mov
sbb
cmp
andb
aaa
into
mov
pop
adc
lret
add
out
xor
clc
lods
pop
and
xchg
stos
inc
cmpsb
push
test
sub
shl
inc
mov
cmpsl
shl
jmp
sub
xrelease
jmp
sub
cmp
dec
cltd
lods
mov
negl
data16
sbb
jo
pop
xchg
mov
inc
and
adc
dec
or
mov
sahf
mov
pusha
mov
xor
arpl
test
sahf
inc
mov
jnp
pushf
sbb
int
rorl
push
xor
fs
pop
jb
mov
ja
cli
xchg
mulb
je
cmp
sbb
inc
jl
jle
mov
stos
pop
cmp
sti
pushf
xchg
push
xor
fnstcw
subl
stc
push
or
push
push
call
jp
jo
xor
shll
movsb
lcall
xor
xchg
cli
call
or
out
cmpb
lea
cmp
lcall
and
mov
in
jle
outsl
notb
jle
pop
push
std
xchg
inc
fistl
decb
mov
push
dec
dec
jb
loop
xor
cmp
or
adc
mov
repnz
je
sub
sti
or
mov
nop
sub
cltd
notl
push
daa
popa
xchg
jge
pop
ljmp
xor
jecxz
and
loop
mov
mov
mov
imul
inc
adc
addr16
mov
sub
add
jecxz
test
test
fdivl
mov
cmp
inc
mov
cmp
sub
dec
enter
sub
jecxz
sub
jbe
dec
rcll
je
cs
roll
rorl
aaa
shl
jecxz
cmp
insl
xor
or
outsl
jnp
pop
add
addl
or
enter
hlt
cmpl
pop
pushf
mov
scas
fsubp
pop
sti
out
push
xorl
or
push
test
sub
xorb
cmp
insb
and
hlt
jg
mov
stos
fdiv
mov
mov
movsl
mov
inc
fstps
xor
pusha
test
in
xchg
jnp
push
imul
push
loope
xor
jge
jns
or
dec
and
pop
in
inc
mov
std
mov
leave
mov
hlt
nop
pop
adc
aam
jne
hlt
mov
les
xchg
jns
ljmp
mov
lahf
mov
adc
dec
mov
mov
mov
fwait
push
pop
xchg
jecxz
cltd
out
cwtl
cmp
popl
rclb
pusha
std
fiadds
mov
into
cmp
lock
mov
mov
sub
rcrb
jg
push
repz
leave
add
in
sub
pop
loop
lcall
arpl
pushf
insb
shrb
cmpb
xor
push
out
xor
xchg
shlb
out
mov
mov
push
mov
adc
inc
shrl
cmp
cs
jl
stc
add
cwtl
or
add
iret
in
loopne
xor
aad
ficoml
lcall
movsl
dec
push
pop
jle
in
xlat
and
add
rorl
fs
xchg
int
xchg
je,pn
jae
mov
inc
lods
cmp
jbe
cli
adc
leave
mov
inc
daa
xor
lret
lcall
cwtl
mov
xor
push
in
repnz
xor
dec
insb
insb
jae
push
add
shll
push
fdivs
lret
sbb
not
dec
mov
push
xor
jmp
out
ljmp
and
aaa
loop
xchg
out
xchg
outsb
cmp
out
out
fstps
mov
bound
dec
es
scas
cwtl
dec
out
in
adc
in
test
mov
mov
popf
xor
test
push
jno
fnstsw
fiaddl
scas
jb
lock
push
frstor
pop
ds
cmc
cmp
xor
js
add
aam
fdiv
mov
adc
inc
loopne
push
sbb
mov
loop
inc
lods
cli
shrb
pop
rcrb
xor
add
sarb
test
clc
cltd
pushf
ret
mov
pop
das
mov
popa
js
push
shll
pop
ja
lret
adc
hlt
jmp
mov
push
dec
cmp
lcall
ss
sahf
out
fcmovne
mov
add
sbb
sbb
pop
jl
mov
rcrb
push
mov
fnstenv
outsl
rep
int
push
ss
mov
in
call
xchg
or
out
divb
fldenv
outsl
or
inc
pusha
negl
ljmp
push
scas
call
jg
test
jp
sbb
pop
mov
cmc
inc
xchg
pop
lahf
mov
pop
add
pop
cmp
enter
dec
pop
test
call
add
std
shlb
aad
pop
cld
cmp
data16
adcb
push
xchg
or
sbb
or
hlt
out
cwtl
adc
pushf
fcomps
mov
fnstsw
push
scas
aas
mov
incl
movsl
aam
mov
dec
mov
sbb
jl
sbb
loopne
test
sbbb
insb
mov
pop
xchg
jmp
jge
mov
movsb
jg
jb
mov
scas
cmp
int3
out
aaa
pop
inc
int3
jmp
dec
pop
mov
push
in
dec
or
repnz
dec
cwtl
adc
mov
push
iret
das
ss
std
pop
pop
icebp
sub
add
cmp
push
pop
sbb
add
push
or
xorb
adc
dec
pop
roll
jb
inc
and
test
out
cmp
cmpsb
mov
les
sbb
sbb
and
aas
mov
stos
imul
inc
mov
lret
pop
adc
mov
arpl
push
lahf
mov
les
mov
lea
and
dec
jecxz
stos
mov
jno
mov
dec
int
dec
clc
orb
pop
xchg
sbb
inc
loopne
xchg
mov
test
cmp
nop
daa
rcl
push
shrb
and
rcr
adc
lret
mov
push
add
data16
rcr
bnd
aaa
xor
cld
stos
lds
cld
in
outsb
jg
jl
push
add
adc
pop
jl
cwtl
std
fldt
lcall
pop
xchg
sbb
test
stc
pop
adc
jne
mov
jbe
jg
repnz
fcompl
dec
pop
dec
jbe
push
xor
negl
fdivrl
shrl
fcoms
add
lea
add
mov
push
cld
mov
fnstsw
imul
inc
xor
push
xchg
and
inc
and
dec
push
imul
loop
xchg
and
xor
xchg
cli
test
inc
mov
shrb
add
sub
mov
or
andl
cli
in
leave
cmp
in
mov
and
and
push
push
sbb
inc
out
pop
out
and
pushf
jb
jmp
mov
jle
outsl
mov
xchg
dec
adc
jo
sbb
mov
dec
adc
inc
scas
inc
out
dec
orl
jmp
test
test
lret
dec
sub
roll
icebp
dec
dec
push
ret
imul
mov
out
idiv
mov
fstpl
dec
jmp
cmp
and
cmpsl
addr16
mov
lods
push
add
sub
shll
cmpsb
lock
xchg
rcl
cmp
repnz
sub
add
xor
dec
sti
lret
and
fisttps
mov
inc
xor
aad
lock
add
arpl
dec
mov
or
lret
scas
popf
inc
pop
inc
mov
xchg
aas
jbe
jecxz
sbb
xchg
sub
call
mov
pop
mov
mov
jg
cmp
xchg
push
ret
pop
pusha
adc
inc
xor
xor
add
cmp
or
add
mov
pop
popf
push
out
cmp
icebp
divb
cmpsb
mov
or
and
mov
push
jbe
orl
mov
mov
out
jb
loopw
repz
pop
lret
jp
mov
ja
xlat
and
test
out
rcrl
xrstors
test
jecxz
addr16
xchg
jae
lcall
push
call
xchg
jo
fdivs
repnz
mov
jne
cmp
or
das
xor
cmp
push
call
jae
outsl
pop
sub
jo
sahf
adc
jbe
negl
insb
scas
cwtl
mov
fwait
mov
sub
cmpsb
inc
mov
int
adcl
mov
gs
jge
dec
subl
dec
repnz
pop
popf
out
push
xchg
xchg
dec
and
mov
push
cmp
mov
cmc
movsl
pop
fstps
iret
inc
stos
in
rolb
sub
and
inc
dec
or
pop
es
outsb
add
push
stos
ja
arpl
call
lock
lahf
stos
push
int
je
fisubrl
adcl
cmp
sbb
popa
sub
idiv
or
repnz
mov
dec
out
imul
cmp
popf
mov
incb
cmp
cs
iret
push
mov
push
cmpsb
cmp
dec
cmpsb
and
xchg
sub
pop
add
fdivs
pop
or
call
add
in
jl
inc
push
in
add
push
icebp
into
and
shll
shrb
xor
adc
mov
int
jge
mov
or
mov
in
dec
mov
ds
insb
imul
xor
out
out
fwait
in
pop
test
inc
je
std
lret
int3
push
bound
push
shlb
outsb
test
mov
mov
add
jb
pop
jge
fcmovb
lock
inc
pop
adc
push
lods
jge
or
ja
dec
addr16
sarb
mov
cwtl
or
push
inc
inc
pusha
push
aam
inc
popa
jmp
mov
push
mov
add
xor
mov
sub
scas
repnz
fsubrs
xchg
insb
pop
dec
dec
and
or
adc
iret
std
scas
ret
int3
pop
xor
adc
mov
xor
addl
scas
pop
cmp
mov
dec
fbld
and
adc
shl
xchg
lods
mov
push
adc
jno
pop
jmp
sbb
fnstcw
push
pop
cs
push
sub
jmp
xor
lock
or
add
pop
das
inc
out
dec
push
stos
sti
scas
pop
fisttpl
or
adc
or
add
jo
bound
fidivl
push
sbb
mov
sti
xor
subb
jo
outsb
xor
test
in
inc
pop
and
push
sub
subb
jmp
lahf
adc
push
je
inc
loop
and
sbb
add
cmpsl
stc
pop
rol
shll
iret
cmpsb
test
mov
addr16
cmp
sbb
call
cmc
and
inc
call
push
sub
push
jecxz
movsl
dec
xor
dec
adc
jp
leave
fs
sbb
jmp
dec
add
pop
jge
sbb
in
ljmp
inc
push
or
std
pop
repnz
lcall
sti
dec
fs
jp
popa
out
jnp
cmp
push
and
imul
and
hlt
mov
push
mov
clc
ss
xchg
sub
and
push
into
stos
bound
fisubs
pop
test
out
xchg
test
sti
push
lret
xor
jp
mov
jle
cmpsb
cltd
popl
dec
pushf
xor
fisubs
movsl
push
ja
mov
and
xchg
addr16
adc
cs
mov
mov
shll
movsl
or
mov
xchg
popa
mov
lock
jae
push
movsl
mov
or
pop
and
mov
aaa
aam
stos
data16
xor
ds
mov
js
sbb
cltd
or
add
repnz
stos
jo
sub
mov
or
jmp
xor
xchg
mov
push
push
les
std
sbb
xor
dec
mov
xor
xchg
test
mov
sbb
and
mov
mov
mov
push
sbb
adc
inc
outsb
cmp
mov
dec
pop
mov
jge
sti
nop
push
out
inc
or
lret
cld
jo
cmp
mov
jle
mov
add
fs
cltd
lds
mov
dec
sub
jle
jns
dec
pop
clc
xchg
hlt
mov
sbb
scas
mov
xor
imul
loope
icebp
mov
ljmp
mov
push
cltd
mov
arpl
js
lods
cmp
adc
or
hlt
inc
xlat
js
mov
aas
mov
push
pop
and
aad
inc
push
arpl
or
mov
ret
sbb
popa
cli
mov
test
pop
hlt
repz
ret
pushl
or
shlb
sub
scas
subl
jbe
sbb
or
iret
pop
and
test
xchg
repnz
stos
jmp
mov
and
mov
cli
inc
pop
aaa
add
fs
fs
fmull
imul
or
enter
dec
and
inc
jmp
fisubrs
sbb
and
jl
shrb
xchg
lahf
xor
fdivr
xorl
cli
loopne
xchg
lcall
push
sbbb
jp
jle
inc
xchg
or
call
loope
adc
ljmp
test
scas
cwtl
pop
inc
mov
jle
or
loope
adc
rol
cmp
imul
lcall
lahf
negl
push
cli
test
jnp
shll
push
jge
cmp
add
mov
nop
iret
sub
inc
pop
in
push
mov
pop
ss
popf
arpl
jg
push
insl
or
cmp
push
out
outsb
aam
mov
divb
xor
or
enter
mov
hlt
out
nop
jnp
cmpl
jno
movsl
push
mov
loope
movsb
fwait
ret
fstpl
xchg
push
xchg
dec
fs
scas
sbb
fiaddl
xchg
inc
fnsave
xchg
orb
xor
jbe
repz
xchg
xchg
stc
xchg
fnstsw
stos
jge
outsl
mov
xor
sub
rol
sub
repnz
jmp
roll
dec
ljmp
inc
xor
jno
pop
rorb
ret
adc
push
xchg
aas
and
aad
shl
ss
cltd
or
lret
fldcw
outsl
add
movsb
call
sub
jecxz
or
xchg
mov
dec
pop
mov
sbb
jmp
cmpb
into
dec
ljmp
adc
test
std
out
ja
xorl
sbb
outsb
dec
movsl
lods
adcb
jbe
xchg
lock
ja
dec
outsb
mov
adcb
fs
daa
mov
adc
mov
dec
and
fldenv
int3
test
sbb
sub
stos
dec
es
or
push
adc
jns
mov
in
push
jl
cli
movsb
sub
insl
sbb
pushf
in
jp
bound
gs
pop
fucomp
sub
mov
jle
call
clc
add
das
lret
mov
sub
std
xor
dec
imul
sbb
pushf
aas
imul
iret
inc
xor
mov
jo
clc
push
lods
sub
sub
mov
pop
in
cld
outsl
jle
stos
cmp
fcmovne
jno
xchg
aam
mov
mov
xchg
call
push
and
scas
push
xchg
xchg
adc
stos
xchg
xor
ja
inc
repnz
dec
addr16
inc
push
mov
xchg
sbb
outsb
xor
int3
mov
inc
lods
xchg
and
push
clc
addr16
fdivrl
cmp
pop
aas
inc
pop
mov
addl
add
call
sti
bound
push
scas
push
jo
mov
and
xor
pusha
cmpsl
ss
mov
bound
pop
cmp
dec
movsl
mov
loopne
xor
pop
xlat
xchg
pop
hlt
mov
es
int
cmpsb
pop
cmp
arpl
fistps
inc
test
mov
mov
mov
leave
jg
cmp
push
ja
jmp
shrl
std
cltd
push
into
fdivs
mov
push
imul
cwtl
das
add
sarb
adc
mov
orb
lea
pop
les
aam
and
mov
pop
ja
cmp
fs
cli
mov
pop
sub
jge
dec
das
jmp
lock
call
mov
sub
jne
lret
scas
clc
adc
data16
mov
movntps
mov
mov
ss
xchg
mov
jae
addr16
push
mov
jecxz
arpl
mov
push
push
jb
jecxz
das
jge
repnz
xchg
mull
or
ja
cmpsl
into
je
mov
cmp
je
out
and
sti
pop
adc
pop
dec
jae
dec
dec
dec
out
repz
push
hlt
loope
push
sub
inc
call
pushf
mov
push
and
dec
bound
insb
inc
hlt
jmp
or
iret
cmp
push
jo
out
push
in
das
sub
mov
negb
sub
insb
vcmppd
mov
cltd
jge
daa
mov
add
repnz
jnp
jb
call
lret
pop
rol
push
jg
and
xor
sbb
fsts
pop
jbe
add
or
push
fs
outsb
push
xor
test
cwtl
and
adc
lret
daa
sub
jmp
push
cs
xchg
cmp
out
dec
test
jne
or
adc
cmc
add
ret
imul
xor
ret
xchg
aas
data16
adc
jb
jp
icebp
stos
aam
mov
dec
loop
into
cwtl
push
pop
ds
aaa
fimull
xor
lock
sub
rcl
sub
popf
aam
or
cli
jecxz
dec
pop
mov
push
sub
inc
aas
mov
or
xchg
cwtl
fnstenv
jbe
pop
jnp
stos
pushf
xor
fistpl
aaa
jp
hlt
and
or
dec
ret
jns
cltd
pusha
push
cmpsl
dec
imul
data16
or
scas
pop
and
and
in
shl
mov
pusha
outsb
sarb
push
ss
jb
jbe
cmp
mov
loop
dec
or
pop
sub
mov
sub
imul
xlat
mov
cltd
xchg
imul
loop
out
je
push
shl
push
pop
inc
push
fsub
xor
int3
adc
cmp
lea
adc
or
push
xchg
sub
out
xor
add
sub
add
mov
pop
pop
ds
mov
cmc
mov
jg
or
lret
test
ret
inc
jecxz
push
sbb
or
jg
and
call
jmp
dec
mov
adc
lcall
lds
insl
inc
stos
jnp
or
jbe
fnsave
xlat
fs
out
stos
out
loopne
xchg
insb
rcll
xchg
cmp
jae
cld
add
mov
int
adc
mov
mov
and
xchg
add
mov
leave
subl
pop
mov
push
mov
cmp
cmp
popf
js
out
ss
xor
mov
cmp
dec
jo
adc
inc
pop
xor
icebp
pop
stos
outsl
cli
js
cld
mov
mov
mov
sub
inc
rdtsc
or
out
dec
mov
ficoml
dec
mov
or
push
in
or
ja
out
fstps
idiv
push
imul
pop
jmp
mov
jno
pushf
push
test
aaa
sub
jecxz
sbb
dec
dec
inc
aad
sbb
decb
dec
stos
jp
adc
addl
add
iret
push
jl
hlt
fists
xchg
add
out
mov
dec
icebp
test
inc
add
movsb
addr16
xor
cmpsl
aad
push
jmp
xor
ss
mov
test
fsub
sbb
and
bound
push
mov
sbb
fbld
mov
or
js
pop
movsb
adc
js
mov
push
push
cld
test
nop
out
out
cs
lods
lret
inc
push
sub
mov
add
push
inc
call
mov
enter
shrl
fsubp
stos
in
call
js
mov
fcomps
dec
mov
dec
in
imull
popa
subl
cmp
jg
xchg
dec
cld
xchg
jo
out
and
repnz
and
cwtl
ss
ja
pop
jmp
into
ret
jmp
dec
or
cmp
in
cwtl
mov
jp
mov
lea
xchg
repz
inc
xlat
cltd
adc
pop
test
fsubl
sbb
xchg
je,pn
mov
mov
hlt
ret
out
cld
outsl
dec
cmp
mov
mov
push
sbbl
mov
shr
or
dec
movsb
sbb
push
cmp
lcall
in
insl
scas
js
lods
into
dec
fcomip
aad
adcb
mov
pop
divb
mov
adc
icebp
inc
ja
sub
rcl
ret
pop
pusha
mov
iret
and
ffree
mov
int3
jbe
xchg
stos
sets
loop
repnz
xchg
cmp
sahf
jecxz
mov
xor
outsl
std
adc
cli
adc
clc
sahf
or
mov
mov
je
push
pop
cld
sub
test
pop
outsl
sbb
add
test
or
push
mov
sub
and
sbb
in
xchg
lods
xchg
mov
xchg
sub
shrb
repnz
xorl
in
push
and
pop
mov
add
je
lret
sbb
push
popa
out
mov
lods
aad
and
jmp
jg
mov
dec
push
scas
mov
mov
stos
xor
adc
out
dec
push
inc
cmpsb
enter
adc
mov
sub
sbb
daa
mov
fs
cltd
test
cmp
push
dec
das
pop
outsb
pop
mov
nop
mov
sbb
js
sub
sub
jecxz
sbb
cmp
movsb
push
adc
adc
jmp
leave
enter
in
into
iret
lcall
push
adc
mov
mov
data16
test
inc
and
repz
pop
test
ret
mov
pop
sbb
es
mov
jb
jge
fisttpll
mov
push
shll
punpckldq
inc
inc
mov
mov
jne
inc
push
push
je
mov
pop
mov
mov
cmp
es
clc
loop
lcall
mov
xchg
mov
sahf
pop
inc
loop
in
lahf
movsb
mov
jo
or
ret
mov
cmp
sub
lahf
or
es
aad
or
pop
mov
add
inc
mov
insl
adc
cmpsb
cwtl
sbb
and
clc
dec
mov
decl
movsb
xchg
mov
lcall
adc
sub
pop
inc
cltd
pusha
mov
push
mov
insl
mov
lahf
xchg
xor
cmc
jmp
out
scas
inc
fcompl
inc
pop
mov
mov
mov
stos
loope
pushf
leave
in
jnp
inc
cmpsl
clc
mov
aas
dec
cmp
in
pop
push
imul
sub
into
cmp
andb
ljmp
mov
xchg
cmp
das
pop
mov
inc
outsl
push
xchg
jl
jns
jne
lea
sbb
in
cli
mov
aad
inc
ret
sbb
lcall
in
add
std
jge
adc
sub
xchg
insb
cmpsb
les
sbb
pop
push
test
or
repnz
sub
cwtl
add
xchg
push
jb
inc
fildl
fdivrl
repnz
mov
hlt
xchg
xor
push
in
inc
xchg
js
sahf
fadds
cmpb
cs
addr16
and
or
ljmp
push
repnz
test
dec
dec
mov
stos
xchg
sarl
jns
dec
xchg
inc
imul
inc
xor
mov
fld
lret
out
cmp
push
std
jmp
sti
aad
es
mov
lahf
icebp
sbb
cs
adc
inc
cwtl
hlt
xor
xchg
mov
sbbl
repnz
add
xor
jge
jmp
jmp
cli
or
fs
mov
adc
in
inc
int
icebp
nop
inc
insl
call
loopne
push
in
jmp
inc
mov
xchg
pop
mov
jecxz
js
sub
imul
push
loopne
in
push
pop
push
iret
xlat
or
mov
xchg
cmp
pop
les
add
and
fsub
mov
loopne
cmp
xchg
inc
stos
ljmp
mov
gs
and
inc
dec
fdivrs
in
fnsave
addr16
shl
and
inc
pop
push
popf
hlt
mov
lock
jg
lahf
push
fistpll
mov
jp
mov
outsb
and
sti
test
rclb
xchg
mov
mov
out
cmpsl
movsl
hlt
movl
gs
das
shlb
sbb
lods
ss
mov
fisttps
lock
fistps
jnp
mov
repz
add
mov
mov
or
adc
lahf
test
inc
xor
fs
in
push
xchg
sbb
and
jae
dec
jecxz
mov
xchg
int3
std
mov
outsl
adc
testb
sar
in
mov
adc
or
mov
mov
outsl
imul
xor
sub
jb
pop
movsl
testl
rcrb
cmc
ss
std
pop
pop
test
lods
imull
sahf
add
pop
shlb
inc
add
mov
sbb
dec
xor
xlat
xor
sub
cltd
and
mov
mov
int
idivl
jmp
push
test
xor
push
loop
sbb
sub
pop
inc
test
out
jne
sub
std
sti
xchg
cli
ja
out
mov
jo
jmp
adc
jb
jmp
ficomps
cmpsb
push
add
mov
push
mov
outsb
lds
jns
and
dec
jecxz
push
sub
mov
xor
iret
push
mov
mov
mov
fucomp
push
add
leave
pusha
fbld
cld
push
cmp
adc
xchg
pop
dec
dec
pop
jmp
sbb
hlt
addr16
mov
in
push
js
ss
out
push
stos
sbb
adc
pop
adc
mov
and
mov
aaa
jns
fcmovnbe
icebp
push
adc
jo
xchg
cmp
ret
push
incb
jo
jnp
out
sbb
jp
int3
and
popf
add
loop
push
fidivl
or
xor
mov
lahf
test
pop
dec
cmpsb
repnz
add
fstl
punpckhbw
repz
xchg
pushf
push
xchg
mov
xchg
stos
sarb
insb
lret
push
sub
shlb
add
pushl
jno
xor
leave
pusha
das
scas
push
jbe
push
leave
flds
fyl2xp1
rorb
cmp
pop
lods
cmpsl
mov
dec
inc
mov
outsl
lea
mov
or
or
xchg
aas
cmpsl
push
jne
nop
push
data16
add
shlb
popa
fsubrl
lods
pop
inc
add
xor
jbe
xor
mov
subl
fisubrl
pusha
cmp
sarl
dec
add
rcrb
test
mov
mov
int
sbb
stos
inc
cmpsb
xchg
mov
push
mov
jecxz
andb
push
hlt
inc
adc
xlat
and
ljmp
cmp
das
cmp
lock
mov
call
pusha
mov
push
rol
inc
fidivrs
pop
aaa
xchg
sbb
mov
aam
jmp
sbb
sub
addb
mov
popa
jecxz
lcall
cwtl
out
stos
sbb
mov
enter
int3
jge
push
inc
dec
addr16
addr16
push
lods
sub
pusha
and
inc
jmp
mov
fstps
cmp
jb
pop
pop
adc
jge
add
pop
adc
in
imul
es
xchg
pushf
gs
jmp
faddp
sbb
int3
lcall
ljmp
sarl
lret
sti
inc
rorb
push
inc
pushf
insb
push
jmp
mov
iret
data16
cmc
jmp
sbb
mov
sub
lahf
repz
out
ja
jbe
jno
scas
and
std
xchg
leave
pop
pop
push
xchg
and
adc
loop
dec
xchg
inc
sub
and
cmp
iret
popf
imul
stos
popa
loopne
js
testl
sub
into
or
ret
pop
sbb
fldl
ds
bound
push
ficoms
mov
jns
aaa
stos
mov
pop
stc
filds
popf
fsubs
pop
xchg
movsb
cwtl
aad
leave
pop
fs
insb
mov
jmp
pop
inc
out
stos
inc
fdivrl
jnp
sub
fcoml
mov
xor
lret
add
lahf
into
push
mov
and
loope
push
in
cmc
dec
xor
call
or
cmp
shrl
test
push
rcl
jge
shr
mov
popa
add
test
pop
pop
cmp
dec
jnp,pt
in
shlb
adc
mov
mov
add
dec
ret
pop
add
jecxz
in
rcll
je
jb
pop
xor
stc
and
inc
push
mov
pop
repz
jp
iret
shl
mov
imulb
xchg
ret
xchg
pop
jecxz
jp
cmp
ljmp
mov
mov
mov
pop
inc
imul
push
inc
sarl
aam
dec
mov
loope
daa
outsl
jne
fidivl
adc
pop
xorl
inc
sahf
loopne
test
jbe
decb
xor
add
pusha
inc
lds
arpl
push
in
les
dec
mov
in
mov
push
add
lods
cwtl
sbb
cmp
cld
stc
daa
orb
fistl
stos
addb
out
inc
and
jnp
mov
pop
in
inc
mov
and
or
or
enter
cli
cmp
mov
iret
adc
adc
push
daa
jo
ja
inc
sub
push
lods
rcrb
cmp
out
dec
pop
xor
int
sbb
jmp
push
shl
mov
imul
sub
add
mov
aas
dec
xchg
roll
adc
mov
jl
mov
jmp
cmpsb
imul
or
aas
jle
push
jb
scas
cltd
dec
inc
lods
dec
jmp
or
or
xchg
imul
out
outsl
fwait
repnz
sarl
rorl
pop
push
fdivl
push
nop
pop
cmp
or
jnp
dec
push
aas
dec
aaa
add
add
fnstcw
and
cmp
pusha
or
dec
mov
dec
repnz
sbb
rcl
mov
sbb
aad
jmp
mov
fwait
jb
out
test
stc
popa
pop
sub
sub
dec
frstor
lods
mov
fwait
or
mov
ror
add
fldt
pop
cmp
daa
mov
pop
not
loop
ret
ds
pop
inc
fwait
mov
repnz
inc
int
or
ljmp
jno
add
push
ljmp
jno
xchg
and
push
lret
jge
loope
sbbl
dec
jg
push
jns
push
ljmp
inc
lock
adc
push
jmp
mov
jbe
popf
into
ret
xchg
dec
cmp
jb
hlt
adc
xchg
mov
notb
inc
push
add
sbbl
or
iret
outsb
aam
pop
cmp
xor
mov
gs
xor
dec
push
out
pop
adc
and
fcomp
mov
ja
fsubrl
jl
mov
inc
idiv
pop
pop
add
pop
in
jae
push
gs
and
xor
xchg
pop
mov
ret
xchg
mov
jg
and
push
fstl
lods
inc
mov
sub
push
sub
ds
sub
out
mov
shl
dec
leave
or
dec
fucomip
call
mov
mov
out
test
cmpl
fisubrs
xor
push
cmp
mov
add
add
int3
mov
xchg
insb
rcrl
loope
pusha
int3
add
or
push
sbb
lret
mov
fsubs
xor
mov
shrd
aam
add
adc
push
icebp
icebp
jae
sbb
or
lret
sti
arpl
add
adc
pop
adc
xor
ja
insb
roll
sarl
lds
in
fbld
jge
in
outsb
lock
cmp
xchg
mov
push
and
mov
leave
addb
pop
pop
lcall
xchg
mov
iret
icebp
rorl
lret
mov
jmp
mov
mov
inc
test
xlat
je
imul
jp
add
testl
mov
insb
ja
lea
in
sbb
mov
and
mov
pop
rol
sbb
frstor
xor
lods
aam
movsb
cmp
pop
add
loop
mov
jmp
and
hlt
or
pop
jnp
fisubl
js
pop
pop
pusha
test
mov
mov
pop
mov
inc
dec
add
jno
ljmp
outsl
mov
mov
clc
push
test
mov
popf
xchg
mov
sbb
dec
or
popa
sub
lret
adc
jbe
es
int
movsl
sub
and
and
sar
push
je
cli
sbb
ss
adc
pop
lahf
xor
jae
fsubl
shrl
dec
sub
aaa
mov
fwait
jbe,pn
ror
into
or
out
aaa
adc
pop
dec
cmp
sub
fcmovb
imul
mov
fsubr
ljmp
lret
fwait
mov
push
xor
cmc
mov
adc
jge
mov
mov
gs
mov
mov
jg
push
sub
nop
int3
jne
xor
aas
mov
or
sbb
inc
fsubrp
inc
lret
out
xchg
data16
out
cmc
aas
mov
hlt
out
imul
mov
mov
mov
nop
aad
add
sub
es
or
jg
mov
push
addl
fsubrs
cld
and
dec
xorl
gs
push
test
data16
cmp
iret
das
pop
in
dec
xchg
jmp
xor
es
or
sub
popa
test
shll
inc
es
and
fisttpll
frstpm(287
inc
in
les
or
leave
adc
or
lea
lods
nop
push
test
mov
xlat
repz
add
jp
dec
mov
data16
push
mov
xorb
cmpsl
mov
lret
cmp
push
cmp
fcompl
inc
mov
push
andb
pushf
cmp
scas
ljmp
jno
arpl
push
in
sub
ss
das
jne
mov
int
lret
inc
mov
push
mov
mov
lea
mov
popf
mov
ss
pop
ja
adc
cmpsb
shrl
add
fsubrs
mov
rclb
jo
imul
insb
gs
jmp
and
js
jmp
xchg
hlt
into
movsb
xchg
mov
sarb
in
push
adc
xor
or
xchg
mov
outsl
fdivrl
cmpsb
ss
dec
or
sbb
stc
arpl
iret
inc
pop
leave
push
adc
xor
mov
jno
sbb
int3
pop
lcall
sub
or
sbb
icebp
sbb
leave
and
roll
add
xchg
lods
in
stos
test
fmull
stos
adc
cli
shlb
cmpsl
dec
adc
lahf
rcr
mov
inc
pop
lret
js
les
fcoms
mov
lret
mov
fidivrl
or
sub
popa
sti
int
xchg
adc
cs
pop
and
pop
sub
movsb
sti
roll
dec
xor
hlt
sub
mov
cld
arpl
popf
int
test
into
mov
pop
negb
mov
shrb
js
cmp
jb
dec
inc
fnstsw
push
inc
cld
inc
fdivr
in
adc
and
imul
vpaddw
mov
je
mov
push
xor
fsubl
adc
outsb
sbb
outsb
xchg
xchg
xor
orb
mov
movsl
cli
or
ret
pushf
lret
int3
mov
jnp
push
mov
ljmp
sahf
out
add
aas
test
je
shll
call
mov
divb
and
inc
outsb
in
push
xor
movsl
inc
test
sbb
jo,pn
add
jmp
sbb
sbb
inc
daa
mov
lcall
sbb
xchg
dec
adc
or
insb
sbb
push
cmpsl
pop
ljmp
loope
cmp
mov
outsb
cmpl
insb
push
cwtl
sbb
ja
fwait
sbb
call
xchg
add
xchg
jb
mov
adc
shl
repz
hlt
lea
cmp
pop
mov
hlt
mov
add
fcmovb
push
hlt
jno
hlt
sub
or
pop
ret
ss
repnz
addr16
aad
lahf
cmpl
lret
lea
and
adc
sub
into
mov
push
cld
notl
data16
test
popa
mov
sti
jp
pushf
test
xor
sub
test
arpl
push
bound
daa
pop
adcb
dec
fs
push
mov
jp
ds
jno
movsb
mull
das
cmp
xchg
insl
sbb
jmp
add
insb
mov
in
stos
jle
outsl
jnp
fdivl
xchg
out
nop
in
push
lods
fadds
sti
sahf
imul
push
sub
shl
cli
mov
xchg
mov
jle
mov
and
mov
xor
jle
fs
push
lock
cmp
idivb
mov
push
lret
nop
lret
push
mov
dec
jae
cmp
mov
dec
pop
scas
cmpsl
loop
xchg
dec
sbb
imul
cmp
test
movsb
in
mov
jno
ss
push
pop
mov
xchg
xor
sub
mov
data16
xchg
lcall
push
mov
dec
sbb
lea
jge
adc
xor
mov
jp
and
mov
inc
fcmovnbe
lods
mov
imul
and
lods
mov
lods
inc
push
jmp
mov
out
gs
das
cmpsl
scas
cmpsb
mov
xchg
nop
sti
push
out
loopne
pop
dec
or
in
xor
call
sbb
mov
jg
fs
hlt
test
sub
stc
sub
xchg
dec
or
xchg
ja
lods
cmp
xchg
pushf
dec
jecxz
mov
mov
push
or
cmp
xor
adc
test
in
mov
dec
xor
sbb
fisubrl
cmp
push
jno
add
enter
test
aam
cmp
aad
ljmp
je
and
pop
push
je
sub
jae
or
xchg
sub
loop
dec
mov
ret
jns
shll
sbb
and
dec
insb
xchg
cmp
les
pop
mov
xlat
repz
sub
lock
or
and
nop
inc
sbb
cmp
pop
inc
xchg
mov
xchg
test
dec
cmp
aam
cmp
repnz
aaa
nop
sub
jbe
add
and
mov
popl
mov
int
imul
hlt
lret
mov
adc
push
cmp
xchg
test
stos
mov
mov
push
xchg
je
or
pushf
mov
mulb
jg
cld
pop
test
aaa
cmp
sbb
fmul
xchg
push
pop
mov
les
xor
sbb
adc
push
mov
xor
adc
lahf
push
pop
push
nop
or
mov
fsubrs
jg
pop
in
mov
inc
xor
frstor
aas
mov
inc
mov
dec
xor
lret
aam
pop
enter
mov
pushf
push
stos
mov
sub
fistl
mov
lods
add
es
adc
push
add
push
push
sbb
pop
dec
movsb
cmp
fucomip
sbb
ror
pusha
and
fld
cmp
jno
mov
sbb
mov
or
adc
pop
sbbl
xor
xor
outsb
push
rol
scas
in
jb
call
or
nop
adc
mov
js
jno
idivl
sub
jg
cltd
pop
scas
lret
into
pop
das
mov
repz
or
test
add
mov
loopne
sub
jae
sbb
shl
mov
cmp
dec
xor
into
loope
jnp
adc
jecxz
and
ror
fistpll
cmp
cmp
push
popa
mov
nop
in
pop
addr16
sbb
inc
jns
dec
and
enter
cmp
dec
fldt
fdiv
ds
sub
je
and
xlat
inc
std
dec
or
adc
mov
clc
xlat
or
adc
sub
test
test
inc
test
push
imul
lods
mov
fs
gs
shl
mov
and
movsl
pop
push
jmp
mov
in
clc
mov
data16
fimull
sbb
sub
bound
sbbl
sub
test
lods
cmp
jge
imul
outsb
push
mov
popa
mov
out
inc
out
mov
stos
lods
xlat
push
dec
jecxz
jbe
jbe
mov
jge
xchg
sub
and
xchg
loope
sbb
jge
cld
inc
or
mov
pushf
out
mov
jecxz
xchg
push
adcb
lea
cmc
mov
jnp
loope
fidivl
jb
push
inc
push
and
xor
icebp
jge
in
xchg
dec
lahf
dec
xor
loopne
xor
jmp
mov
inc
xlat
clc
fbld
fldl
xchg
pop
ds
xor
sbb
psubd
mov
icebp
icebp
nop
mov
jle
fldenv
imul
test
push
shlb
and
cmp
out
int
mov
clc
sbb
call
imul
sbb
or
jle
pop
imul
mov
sahf
xchg
inc
das
inc
js
out
dec
push
or
pushf
mov
popa
and
cltd
in
push
push
xor
add
inc
ficomps
inc
mov
sub
iret
mov
pop
push
aaa
add
cltd
es
cmc
xor
add
or
mov
jne
les
xchg
es
cmp
pop
outsb
mov
jle
call
adc
mov
arpl
filds
mov
je
fdivrl
dec
cld
movsb
sahf
andb
loope
mov
xor
xor
fcompl
jle
fistl
adc
xor
aas
aas
fsub
fwait
rol
rorl
pop
add
call
jle
pushf
dec
movsl
inc
or
out
popa
test
or
jb
scas
sub
dec
insb
mov
push
rcr
loope
mov
inc
fdiv
je
cld
push
cmp
xchg
dec
ret
outsl
shll
mov
xchg
xchg
imul
xlat
mov
pop
add
ret
mov
mov
jl
fildll
and
aas
insl
pop
mov
in
fs
int
dec
loopne
outsl
shll
mov
mov
jg
jge
repz
jge
repz
inc
push
cmp
cltd
lock
and
sti
bound
fsubrl
insb
jl
and
push
std
test
jle
leave
in
mov
in
adc
xor
ret
pop
ss
pop
sti
ljmp
xchg
cmp
add
jno
mov
repz
insl
push
lret
mov
cmp
pop
xor
fsubrs
iret
xor
add
inc
leave
sub
mov
lods
out
sbb
mov
out
xchg
inc
add
cwtl
push
pop
lods
xchg
lds
pushf
hlt
cli
sub
mov
shll
add
icebp
sbb
out
and
insl
mov
mov
cmp
pop
cmp
fsubs
inc
bound
lods
add
iret
mov
shr
rorb
fdiv
adc
push
sbb
mov
gs
mov
sub
adc
pop
cmp
pusha
xor
rcll
push
fisubl
xchg
mov
jns
in
jno
in
mov
lret
cmp
int3
ja
and
addr16
pop
jmp
or
test
lds
push
xchg
out
sub
lret
popf
ljmp
cmp
rcrl
cmp
in
and
nop
pop
jno
pop
in
cmp
xchg
and
rcll
stc
leave
sub
adc
or
xor
mov
sbb
xchg
add
outsb
cmp
out
rorb
in
in
fsts
inc
and
cmp
adc
lret
sti
push
aad
inc
repz
ret
mov
cwtl
popa
add
loope
in
mov
push
or
mov
popa
cmp
and
push
push
inc
lcall
xchg
aaa
shl
push
jns
mov
dec
dec
loopne
jmp
movb
aad
int3
lret
jnp
fcmove
call
aas
fsubrs
mov
cmp
jp
and
sub
pop
xor
les
sub
mov
pop
stos
mov
push
pop
or
int3
ljmp
rclb
popf
fsubs
cwtl
lods
inc
mov
imul
int3
push
push
mov
out
inc
hlt
dec
and
cwtl
std
push
decb
or
sub
and
xchg
adc
cwtl
mov
stc
fbstp
icebp
mov
inc
inc
ds
jnp
in
adc
js
push
sti
mov
or
cmp
fwait
inc
imull
inc
sub
adc
imul
hlt
clc
fs
fdivrl
cmp
lods
or
cmpsb
inc
dec
sahf
fdivr
ja
lahf
pop
mov
pop
outsl
and
arpl
inc
xchg
push
cwtl
es
pop
sarb
mov
inc
adc
xchg
arpl
sub
inc
stos
cld
inc
iret
data16
lret
in
test
lret
ja
inc
lea
fcompl
rorl
xchg
mov
mov
insl
jge
push
cmp
xor
adc
hlt
ds
out
int3
es
shrl
jno
add
jbe
lcall
jmp
and
or
mov
dec
iret
stos
xchg
jb
dec
mov
push
aad
adc
and
and
sub
add
mov
je
jle
lods
pop
movnti
hlt
insl
or
sub
mov
mov
and
je
xchg
xor
shll
lcall
dec
scas
jp
imul
pop
adc
data16
pusha
mov
fimuls
sub
cmp
jmp
lea
push
lods
loopne
mov
mov
adc
mov
mov
jbe
sub
test
dec
repz
in
pop
movsb
xchg
mov
pop
jge
inc
fisubrs
mov
rcrl
nop
inc
pop
adc
push
jne
xchg
add
std
mov
movsl
insb
outsl
adc
dec
testl
jp
xchg
gs
dec
mov
jle
in
test
lret
repz
mov
mov
dec
es
add
cmp
in
push
push
cmp
mov
jnp
inc
popa
mov
xor
out
xchg
mov
xor
jl
inc
fldl2e
popf
out
xchg
fucom
ja
mov
out
loopne
cmp
fldenv
mov
or
test
arpl
xor
fs
fneni(8087
push
or
mov
cmpsl
rclb
mov
add
rorl
ljmp
cmpsl
mov
repnz
xor
fadd
es
cld
arpl
into
lock
sarb
and
pop
push
sti
inc
lds
mov
cmc
test
pop
arpl
jl
scas
push
xlat
sub
je
xchg
mov
mov
sbb
xor
fimull
mov
fsubrl
ret
mov
xchg
inc
ficoml
sbb
mov
lods
in
cmpsl
sbb
jle
mov
jp
das
xchg
or
dec
fldt
pop
lods
xchg
push
jo
push
dec
adc
adc
cltd
loop
inc
xor
jle
inc
mov
mov
jbe
sbb
adc
rcll
cld
fwait
mov
jns
xchg
loope
mov
mov
xchg
push
sbb
push
test
push
sarb
es
test
cmpsb
dec
flds
in
xchg
adc
test
or
push
add
lret
dec
pop
jp
mov
and
mov
dec
ja
fldt
int3
adc
addr16
push
xchg
pop
fstpt
jle
pop
inc
sub
inc
into
or
testl
rol
or
cmpsl
decb
cmp
dec
fcmovne
sti
pop
out
cwtl
outsl
addr16
mov
jns
push
mov
dec
cmp
arpl
rcr
leave
cwtl
mov
mov
push
adc
xor
lods
jnp
shll
rclb
clc
adc
or
cmp
push
imul
fwait
sub
test
sbb
inc
leave
pop
dec
out
imul
ljmp
cmpsb
adc
insb
stos
jne
mov
rolb
dec
sti
ffree
loop
sbb
fnstcw
ja
insl
es
sbb
mov
dec
lock
in
movsb
mov
popa
insl
sub
aad
icebp
mov
xlat
mov
repz
and
dec
stos
xchg
ja
repz
cmc
jle
inc
sbb
add
je
dec
mov
sub
or
call
mov
push
lcall
cwtl
add
push
gs
cmp
cli
and
js
mov
jae
push
cmpsb
xchg
lods
mov
and
jbe
stos
pop
adc
jp
xchg
sub
cmp
xchg
movsl
xchg
dec
cmp
push
les
sub
push
fadd
nop
call
lea
or
and
adc
stc
int
repnz
mov
loop
cmp
push
aas
lea
loop
pop
enter
fs
jo
dec
test
js
in
call
mov
ficoml
xor
pushf
repz
push
data16
or
mov
jbe
inc
test
dec
aam
add
imul
pop
push
mov
mov
mov
pop
pop
repnz
pop
adc
or
xor
push
addb
jns
sbb
inc
mov
adc
or
xor
leave
mov
push
sub
ret
ret
pop
mov
aaa
adc
inc
lcall
test
fimuls
les
dec
dec
loop
lcall
shll
cmp
mov
sbbl
data16
and
imul
out
sti
fwait
jae
dec
test
lods
jmp
sahf
cmpsl
aaa
pop
or
xchg
jmp
mov
lock
pop
call
into
pop
jl
in
or
jp
pop
lods
mov
arpl
in
imul
movsl
adc
and
or
adc
cld
scas
push
cmp
dec
jmp
dec
sarb
lcall
cmp
daa
arpl
push
popf
adc
stc
dec
push
je
mov
mov
insb
shlb
jno
mov
push
mov
clc
aad
sub
adc
mov
mov
inc
leave
dec
popf
jmp
inc
aad
arpl
fcmove
dec
or
sub
sti
pushf
mov
ljmp
cmp
mov
test
scas
daa
jbe
mov
icebp
fldt
cmp
or
aas
repnz
leave
pushf
imul
sbb
cs
clc
rol
scas
shlb
imul
pushf
loope
push
xor
cli
push
fidivl
or
pop
popf
jle
xor
mov
inc
shr
jle
gs
loopne
out
or
adc
test
stc
inc
mov
push
mov
pop
lahf
xchg
ud1
mov
adc
add
jbe
in
jmp
adc
scas
fidivs
push
loope
lods
stos
inc
fsubrp
rolb
enter
jne
mov
inc
mov
js
andl
lods
push
and
xor
sub
xor
pop
mov
ds
enter
pop
ljmp
fcmovbe
xor
nop
cwtl
sbbl
cmp
pop
jo
pop
int3
loopne
inc
cmp
push
dec
pop
inc
dec
out
jg
pop
inc
push
adc
jge
or
sub
sbb
in
enter
nop
insl
mov
ret
add
fstpl
mov
push
cmp
fisubrs
cld
xchg
and
inc
sbb
pop
aad
rolb
test
inc
sbb
cmovg
cwtl
shl
or
jecxz
inc
cwtl
testb
mov
arpl
sbb
push
aas
push
pop
adc
dec
and
or
scas
call
lahf
mov
hlt
adc
push
fdivrl
or
mov
out
cmc
hlt
js
cmp
cmp
scas
and
jb
call
mov
push
push
fiadds
sbb
sti
ficompl
pop
and
jbe
jbe
lock
stos
push
pusha
cmp
in
test
ss
inc
test
cwtl
iret
push
jle
inc
enter
int
sbb
inc
push
int
push
mov
push
jnp
orb
scas
jp
adcl
cmp
pop
adc
add
sbb
jp
mov
or
call
pop
jno
jb
lods
dec
dec
mov
rcrl
insl
cmp
ret
and
cmp
dec
in
vorps
xor
cmpsb
icebp
push
inc
inc
jp
cmp
rorb
pusha
inc
xchg
fldt
test
arpl
test
jp
mov
xchg
divl
mov
lods
nop
push
test
add
dec
popa
or
xchg
pop
outsl
or
jecxz
dec
pop
push
or
dec
sbb
pop
add
mov
add
nop
fsubs
sbb
stos
out
mov
gs
sbb
add
shrb
pop
mov
jle
call
push
out
out
push
nop
stos
icebp
sbb
xlat
mov
xchg
int3
mov
mov
inc
clc
sahf
in
ljmp
rcl
push
fsubs
pushf
scas
push
xor
mov
dec
xchg
dec
push
push
jecxz
xchg
dec
iret
xor
jl
imul
shrb
lock
add
aas
in
mov
xor
xchg
pusha
aaa
inc
sbb
or
lret
arpl
and
push
out
cmpsl
ficomps
mov
pop
push
stc
lret
pop
pushf
push
mov
in
pop
insl
sub
jmp
pop
imul
test
push
push
loop
cmp
adc
pop
mov
jl
dec
jb
clc
cmp
pushf
and
mov
xor
in
flds
cltd
xor
push
repnz
push
test
adc
dec
dec
pop
js
loope
mov
add
shrl
xlat
mov
ss
jle
stos
mov
inc
push
adcb
or
rol
mov
jge
mov
popl
fstps
jg
inc
jo
xchg
stos
pop
sub
push
inc
ror
xchg
add
push
je
cmc
test
cmp
mov
in
outsl
pushf
cli
rorl
cmpsb
dec
mov
cli
jp
gs
mov
in
test
shl
fnstsw
outsl
fnstcw
jg
insb
nop
push
lds
jo
les
push
sub
enter
sti
sbb
xchg
outsb
mov
mov
imul
add
gs
sbb
call
ds
enter
mov
addr16
mov
xchg
sbb
ss
gs
out
test
adc
mov
adc
ficoms
add
sti
in
fs
cltd
stos
push
mov
cli
mov
and
adc
out
add
dec
lahf
into
and
arpl
dec
dec
mov
cmp
fs
aaa
aam
sub
mov
mov
adc
push
xor
aas
fwait
loope
dec
pusha
push
jb
fsubrl
xchg
mov
pop
popa
inc
movsb
mov
and
sub
repz
repz
inc
loopne
movsb
popf
sub
in
adc
aaa
test
insb
or
fstps
dec
sbb
mov
js
sbb
and
jno
adc
push
fucomi
adcl
test
outsl
pop
jmp
adcl
cmp
pusha
adc
pop
jno
pushf
xor
push
cmp
pop
jbe
lret
sahf
jns
sbb
icebp
imul
mov
mov
mov
add
inc
push
inc
in
in
aas
into
lret
add
or
lret
rorl
inc
lcall
dec
notb
jns
ret
outsb
hlt
or
xlat
xchg
inc
testl
add
and
adc
hlt
inc
and
cmp
adc
sub
dec
add
push
inc
fsubrs
ss
lods
in
inc
or
xchg
sub
sub
aas
sbb
xlat
adc
add
sbb
mov
jmp
xchg
repnz
cs
and
popa
add
addr16
pop
mov
aad
popa
rep
sub
sbbl
stos
dec
xlat
pop
sbb
test
mov
inc
push
adc
mov
aam
add
add
cmp
in
pop
and
shll
aas
aam
jae
jno
or
inc
aaa
ja
xorl
enter
pop
out
test
and
add
out
dec
mov
jl
pop
xor
rcrb
cmp
cmp
inc
xor
jae
jns
fs
lret
icebp
mov
push
add
cmp
jle
shrb
inc
push
jae
cpuid
cmp
ds
insb
pop
aaa
into
mov
dec
xlat
sub
push
sbb
sub
ja
mov
lret
sbb
js
movsb
xor
sub
lret
inc
jge
jne
add
fnsave
push
mov
outsl
jge
dec
lds
jne
xor
push
or
sbb
icebp
out
iret
adc
pop
insl
sbb
jle
in
fdivrp
cmp
cmp
bswap
cmp
in
mov
in
mov
test
clc
int3
cmpsb
arpl
fisttpll
cmp
sbb
les
test
inc
mov
insb
daa
mov
jbe
jge
add
orb
cmp
andl
jno
dec
jmp
movsl
inc
cmp
lahf
aaa
loope
pop
vpmovzxbq
ret
xor
fcmovb
xor
repz
cmp
mov
pop
push
call
xchg
jne
pop
mov
pushf
mov
push
sub
dec
mov
jns
sub
inc
mov
jbe
lea
lea
jb
mov
clc
mov
lret
mov
pushf
and
aam
call
lcall
mov
mov
bound
cwtl
xchg
mov
pop
mov
mov
pop
mov
int3
and
jo
inc
fmuls
insl
or
shll
fiaddl
je
cmp
imul
addl
les
rep
and
int
pop
inc
mov
pushf
dec
mov
orb
cmc
shrb
jmp
push
nop
repz
mov
pop
lods
push
mov
mov
rolb
and
or
cmp
sbb
gs
push
cld
pop
cwtl
fucomp
cwtl
ret
mov
jno
daa
ljmp
jl
arpl
dec
push
negl
outsl
aam
mov
pop
xchg
sbb
jnp
in
pop
sub
scas
pop
pop
out
or
ljmp
iret
clc
inc
push
testb
lcall
rcll
xchg
popf
daa
xchg
sub
outsb
aad
pop
lahf
pop
jp
or
jl
insb
ret
jmp
pop
adc
in
mov
add
lret
das
cmp
cmp
cwtl
sub
cmpsl
cmc
adc
xchg
lahf
jns
sbb
push
ljmp
popf
scas
xlat
decl
cs
divl
jo
add
sub
out
ret
stos
mov
add
in
stc
notl
das
int3
andb
mov
jmp
cmp
jb
mov
mov
sub
pop
std
jbe
xor
and
jl
inc
jecxz
je
lret
test
in
stos
lcall
push
int3
push
les
push
pop
hlt
cltd
jno
cmpsl
mov
dec
notl
sbb
fisubl
rcrl
leave
and
stos
cmpsl
arpl
sbb
jge
or
lahf
ljmp
lods
clc
cmp
xor
nop
mov
or
lods
js
cmp
add
out
push
xor
gs
cmpsl
outsl
xchg
arpl
movsl
lds
not
or
add
pop
jg
test
pop
jecxz
adc
dec
rorb
data16
out
test
enter
cs
and
xchg
mov
adc
popf
push
outsb
sbbb
out
cld
lahf
nop
add
cmpb
cs
xchg
sub
add
cmpsb
xor
lcall
out
iret
in
out
lods
cmp
and
leave
flds
cltd
leave
arpl
xchg
loope
dec
push
sbb
shll
mov
or
cwtl
add
jp
lds
xor
stos
hlt
es
icebp
clc
dec
push
mov
jno
movsl
int
sbb
sub
aam
mov
push
gs
fcomp
sub
pop
sub
adc
add
call
jmp
filds
and
xchg
pop
sub
cltd
sbb
mov
lods
movsb
add
leave
into
or
jge
pop
out
pop
sahf
inc
fs
out
test
jge
cmp
inc
out
adc
stos
gs
pop
test
gs
push
mov
mov
outsb
int
lcall
pop
pop
mov
nop
mov
add
jne
pushf
inc
mov
push
mov
shll
in
insl
sub
jg
lock
pop
pop
sub
mov
test
push
xchg
arpl
inc
jmp
fcompl
xor
in
int
xor
dec
mov
push
movsb
sub
add
dec
ss
inc
int
ret
pop
mov
push
mov
fldl
xlat
xchg
and
iret
cmpsb
call
jecxz
dec
and
sbb
test
and
out
mov
sub
inc
and
inc
rcrl
leave
push
jae
shrb
add
lds
gs
fninit
mov
hlt
test
pushf
insl
call
xchg
lods
negb
cmp
and
mov
push
and
scas
pop
mov
jnp
adc
mov
int3
std
dec
jns
pop
mov
dec
cmc
mov
ret
inc
mov
jg
lahf
push
or
fwait
stc
push
lods
adc
sub
mov
lcall
cmp
push
popa
xchg
mov
lock
out
jne
adc
push
outsl
inc
push
bound
mov
jle
dec
dec
pushf
repnz
mov
into
ss
or
sbb
jp
lcall
add
or
mov
mov
mov
mov
ljmp
and
xchg
ds
call
test
adc
pop
inc
mov
fsubrs
push
pusha
lods
cmp
inc
inc
mov
sbb
or
in
or
ss
adc
adc
inc
lret
push
scas
sub
jbe
mov
imul
adc
jns,pn
aas
shll
fiaddl
xchg
lcall
shrd
shl
mov
fsubs
or
cltd
adc
dec
out
sub
add
lods
test
mov
mov
daa
or
sarl
nop
push
or
pop
out
pop
loopne
add
bnd
and
mov
jle
sub
fists
mov
test
jge
xchg
mov
stc
shlb
xchg
mov
xchg
mov
hlt
shl
mov
js
mov
mov
pop
sub
add
pushw
movsl
imul
movsb
rolb
pop
ds
fcmovnb
xor
subl
js
rcrb
dec
mov
sbbl
cmc
leave
and
jl
mov
sub
lahf
clc
scas
xrstor
push
jbe
popf
xchg
mov
inc
js
mov
dec
mov
cmp
cmc
adc
and
stos
push
ljmp
or
sub
movsl
aad
les
xchg
lcall
mov
or
or
std
mov
sbb
pop
lea
enter
xchg
fisttpll
adc
stos
adc
sbb
fisubl
insl
pop
inc
jp
xchg
mov
pop
out
jns
dec
pop
call
rcrl
mov
xchg
cmp
shr
repnz
mov
adc
test
lods
inc
arpl
sub
out
jp
ds
sti
std
or
out
mov
enter
xchg
scas
push
mov
mov
or
cmp
test
jns
loopne
in
mov
fwait
push
cmpsb
les
ficoml
cld
cmp
and
add
sbb
flds
shlb
dec
in
sbb
jns
aam
xor
xlat
repnz
pushf
adc
dec
pop
xor
lods
pop
repz
lds
inc
dec
and
sahf
jecxz
rclb
stos
repnz
cmp
shl
or
int
fidivs
mov
jge
idivl
fwait
out
cmp
shrb
rolb
fcom
add
int
or
es
ja
jns
lcall
cwtl
mov
sub
fwait
pop
xor
push
sahf
xor
sub
ja
ret
decb
xor
loope
jno
scas
inc
jae
add
cwtl
mov
lods
daa
aam
lret
subb
cmpsl
cmp
cmp
pop
mov
test
out
sbb
adc
rolb
mov
xchg
cmp
addr16
adc
mov
cmp
jae
lods
cs
xchg
push
lds
test
pmovmskb
mov
pushf
sub
push
lods
mov
iret
sbb
jb
jne
int3
sti
dec
ja
cmp
rclb
bound
and
push
decb
test
adc
lods
cld
clc
mov
push
push
dec
fdivl
pop
pop
inc
mov
jns
stos
add
popf
adc
and
sub
xor
adc
decb
shlb
test
arpl
xor
mov
into
push
jp
mov
scas
mov
cwtl
cmp
adc
in
mov
outsb
fmull
jmp
jg
test
sahf
cmp
jnp
mov
ds
imul
adc
xchg
arpl
sbb
lret
lahf
mov
xchg
fisubrl
pop
arpl
push
shl
fdivl
das
adc
mov
sub
shl
mov
outsl
xchg
jl
out
insb
sbb
loop
mov
xchg
mov
push
lahf
daa
or
sub
mov
idivl
clc
ljmp
mov
sti
jge
cmc
xchg
rcrl
inc
xchg
sub
dec
mov
adc
dec
mov
jnp
inc
and
mov
cmp
in
sbbb
jne
dec
arpl
stos
pusha
ds
cmpsb
jge
mov
stos
and
sbb
add
sub
jecxz
js
lea
push
add
fistl
loope
push
stc
push
movsl
sub
mov
mov
dec
loope
clc
sbb
fcoms
and
xor
dec
fstps
loop
in
mov
aad
adc
push
out
adc
fistl
pop
mov
add
pop
stos
push
adc
les
xor
push
mov
jecxz
aas
pop
cmp
sub
hlt
dec
rolb
data16
cmp
sub
mov
sbb
das
movb
sbb
xchg
push
dec
test
int
mov
sub
and
mov
insb
mov
mov
les
outsb
popa
je
pop
pop
pop
fmuls
daa
cmp
xchg
pop
aas
sbb
in
std
cmc
pop
jmp
idivl
mov
and
sub
in
jnp
test
jns
sbb
test
push
lcall
gs
shll
cwtl
loope
fiadds
test
push
negb
xlat
shll
hlt
xor
jnp
push
pop
shlb
jmp
cmpsl
das
jne
stos
fs
stos
pop
inc
ds
cmp
pop
push
pop
out
out
push
fidivrs
jl
inc
pushf
gs
shr
add
pushf
xor
int
lock
pusha
cs
hlt
addl
mov
xor
jl
jle
frstor
add
xor
loop
xor
sub
xchg
jo
mov
mov
nop
cmp
pop
out
stc
js
popa
mov
mov
pusha
fsubl
sbb
cltd
aam
sti
xchg
out
xchg
mov
stos
and
cmpsl
xchg
cmp
negl
mov
out
or
orl
outsb
adc
xor
cmpsl
cmp
flds
in
pop
mov
mov
xchg
jge
lret
ss
dec
and
rorb
cs
pushf
andl
cmp
add
rorl
xchg
add
mov
xchg
mov
popf
mov
mov
sbb
arpl
ret
call
rcrw
push
dec
js
mov
lds
mul
add
in
pop
icebp
mov
push
js
pop
xchg
ja
repz
lret
mov
mov
pop
adc
dec
pop
cmp
arpl
aam
dec
aam
js
mov
mov
leave
sub
and
xchg
mov
dec
subb
pop
inc
mov
jae
lcall
push
jecxz
mov
mov
mov
mov
sub
fbstp
dec
cs
xchg
jle
add
shll
ds
addr16
testb
mov
and
add
add
adc
cmp
adc
enter
adc
fdivs
lods
fsubs
push
or
sub
pop
fpatan
insl
idivb
cltd
in
cmp
lods
std
inc
fsubrs
xchg
testl
in
jmp
hlt
adc
add
fnstenv
in
pop
push
inc
jo
mov
stc
imul
movsb
pop
popa
xchg
xchg
divl
stc
loop
imul
daa
js
sbb
fldcw
es
bound
add
pop
insb
es
add
adc
and
xchg
mov
xchg
rolb
movsl
pushf
sarb
and
cmp
push
das
xor
ja
mov
hlt
mov
negb
or
inc
inc
inc
jne
sti
xchg
in
lods
add
add
sbbb
push
xchg
lock
ret
mov
and
adc
xchg
hlt
mov
inc
push
or
pop
shll
fstpl
lods
rorl
mov
mov
add
fsubp
test
xchg
mov
adc
lret
jno
push
push
inc
popa
cmp
jb
sub
ss
daa
add
lds
pop
loope
jmp
push
pop
das
xor
and
negl
add
dec
aaa
out
dec
cwtl
rcr
lods
lret
movsl
lcall
inc
inc
int3
imul
popf
mov
mov
and
shrl
push
lcall
call
and
mov
mov
and
add
data16
shr
sub
sbb
xchg
sti
or
iret
mov
imul
dec
lock
jmp
sti
lahf
js
jg
mov
std
ret
sub
xchg
and
jle
lret
les
xchg
and
mov
imul
ja
jle
or
sti
test
aam
inc
in
shll
pop
cmp
shll
ja
call
add
and
cltd
addr16
or
imul
cli
mov
xlat
jge
dec
xchg
push
outsl
test
sub
test
loopne
in
cmp
out
xchg
xchg
jmp
and
cmp
cmp
data16
add
pop
mov
mov
inc
mov
addr16
jmp
push
pop
xchg
mov
pushf
scas
aaa
rorl
divb
cmp
bound
inc
inc
dec
sahf
lods
jg
xchg
xor
shlb
jb
das
andb
or
adc
pop
mov
or
and
push
lahf
xchg
sub
ja
inc
lods
int
mov
lret
inc
push
leave
push
sti
pop
test
or
add
shlb
adc
cli
lock
xchg
adc
int3
sbb
cmp
sub
or
push
mov
data16
repz
pushf
and
out
hlt
xchg
mov
in
nop
jg
out
mov
rcrl
add
orl
cli
mov
dec
rolb
aad
shl
cmp
xchg
jl
subb
inc
popa
shlb
jo
ja
in
aam
jp
inc
mov
mov
xchg
xchg
repnz
jb
das
sarb
lds
sti
xor
sbbb
jl
decb
addb
or
imul
scas
inc
sub
cmp
jle
cli
sub
xor
jg
dec
inc
sbb
mov
xlat
gs
ja
sub
scas
in
incl
push
aaa
iret
setg
or
mov
or
fsubrl
adcb
arpl
jo
shr
mov
fldt
sbb
scas
lea
sub
ljmp
sbb
std
inc
xor
movsb
addr16
xchg
mov
and
rorl
aad
xlat
xchg
inc
mov
subb
iret
mov
lock
dec
cmp
imul
in
lods
lret
add
xchg
cs
ret
lahf
cmp
in
mov
pop
movsl
sbbl
mov
push
mov
outsb
mov
dec
fnstsw
dec
repnz
fnsave
and
ja
test
js
mov
ja
fidivl
cwtl
mov
mov
mov
popf
je
xchg
cmp
ret
xchg
fnstcw
push
xor
mov
push
dec
dec
test
inc
mov
out
scas
xchg
and
dec
push
mov
aad
dec
rcr
dec
xor
jb
ret
adc
sbb
sub
cmp
dec
sbb
add
out
pushf
adc
mov
inc
mov
bound
inc
jne
jle
imulb
jns
clc
push
xor
pshufw
out
push
out
xchg
fwait
mov
outsb
add
jle
mov
out
dec
outsl
dec
pop
mov
inc
out
ljmp
sub
add
dec
loopne
jo
insl
jge
fs
mov
mov
sbb
xchg
add
jo
jb
jnp
and
cmc
mov
cmpsl
jo
sbb
pop
or
xchg
lcall
aam
adcl
or
notl
loope
fcmove
fmull
and
js
jno
mov
in
sbb
out
xlat
in
pop
or
or
sub
and
fistps
jl
jge
xor
inc
jmp
leave
pusha
repnz
push
in
adc
add
ret
ljmp
out
inc
sbb
imul
jp
jecxz
xor
cs
ljmp
lock
jl
addr16
das
lahf
add
mov
subb
push
lds
mov
shrb
shlb
xlat
xchg
xor
dec
out
addb
cld
test
movl
push
push
sbb
pop
test
inc
fprem
leave
out
js
pop
add
cltd
push
add
test
sbb
in
jge
mov
nop
test
nop
mov
or
insl
arpl
shrl
sbb
pop
ret
cmp
aam
jne
aad
push
xchg
pop
cmc
mov
ljmp
pop
mov
xchg
pop
in
cmpsl
jbe
add
sbbb
sub
cmp
sub
sbbl
inc
mov
loopne
rcr
xor
inc
test
xchg
inc
fldcw
stc
inc
lahf
aam
fstp
lea
push
pop
jo
ret
lods
inc
cmc
out
loop
pop
int3
push
inc
adc
dec
nop
out
testb
mov
push
in
mov
and
cmpsb
in
fstl
mov
imul
mov
jb
cld
jb
shlb
push
dec
data16
shlb
mov
pushf
or
mov
xlat
xchg
pop
addl
movsb
jae
and
cmp
push
sbb
xchg
push
xchg
add
outsl
aam
push
aas
adc
icebp
mov
mov
jge
hlt
cmp
adc
push
cmp
outsb
nop
fsts
addb
sti
mov
test
pop
outsb
mov
test
xchg
iret
lcall
frstor
mov
or
mov
or
cmpsb
xor
sub
mov
outsl
mov
or
add
adc
cmp
cmp
inc
ret
xchg
mov
int
push
insb
pushf
mov
fucomp
or
or
or
jae
inc
xchg
aad
lock
and
test
repz
cwtl
xor
inc
add
jo
cmp
notb
adcl
xor
sahf
mov
cmp
pop
outsb
inc
lcall
jno
push
shrl
outsb
mov
push
push
aad
or
in
int
out
xchg
repz
cmp
js
mov
aad
shl
adc
out
dec
and
lcall
testb
sub
sbb
jbe
int3
sub
mov
mov
inc
fldenv
aad
popf
mov
je
shl
add
pop
xchg
jbe
add
add
push
jns
stos
inc
inc
xchg
xlat
and
fsubr
adc
ss
out
adc
and
aas
flds
and
inc
dec
push
in
daa
push
jae
repnz
xor
adc
inc
fucomi
pop
adc
mov
pop
divb
jl
lahf
xchg
push
movsl
ret
jl
cmp
imul
pop
das
lea
test
sub
stc
sti
mov
insl
pop
sub
clc
nop
xor
mov
fiaddl
in
repz
xchg
scas
je
push
push
inc
arpl
sub
in
call
mov
push
xchg
pushf
fiadds
leave
cmp
sub
ljmp
jno
ja
bound
and
sar
rcll
mov
mov
nop
test
adc
icebp
adc
lea
rcrl
shrb
xchg
pop
test
test
scas
pop
pop
xchg
jle
push
adc
and
mov
stos
inc
insl
sbb
pop
jns
fsubrp
ret
stos
add
xor
fildll
fbstp
mov
and
cwtl
push
mov
dec
xor
movsl
out
shll
xchg
ror
xor
in
std
adc
addr16
inc
jle
mov
in
in
dec
int3
jg
inc
jmp
fsqrt
jmp
test
mov
mov
decl
je
and
push
pop
cmp
jbe
ret
cmpsl
scas
xchg
call
dec
or
jl
mov
mov
inc
xlat
and
dec
int3
and
pop
out
hlt
enter
adc
pop
push
fwait
pop
in
into
int
mov
popa
mov
sub
jae
pop
testb
dec
out
cld
mov
sbb
gs
sahf
mov
sbbb
cmp
addb
xor
mov
xchg
xor
inc
add
les
imul
push
sahf
movsb
xchg
mov
xorb
pushf
or
jge
mov
or
jbe
xor
in
pop
int
lcall
and
dec
cwtl
add
leave
imul
ljmp
mov
dec
jae
rcll
fists
mov
fdivrl
pop
shrb
mov
and
fldl
into
dec
mov
lods
out
jae
mov
jno
cmp
mov
js
mov
popa
mov
int3
mov
repnz
or
inc
cmp
jb
mov
push
push
add
testl
int3
fsts
sub
mov
fisubl
xchg
jbe
dec
in
push
add
mov
jl
mov
jmp
out
outsb
or
aas
mov
dec
pop
jmp
int3
iret
insl
nop
daa
jg
xchg
in
xor
mov
int3
loopne
sbb
dec
test
loop
and
mov
mull
mov
faddp
inc
adc
mov
fucomi
pop
outsl
clc
and
mov
sahf
lods
lods
add
jno
pop
mov
mov
lods
mov
mov
mov
cmpb
pusha
xorb
hlt
ficoml
insl
jg
mov
sub
mov
rorl
gs
adc
mov
fisubrl
popf
shll
mov
xchg
jg
sub
xor
jno
adc
cmp
inc
jns
iret
cmp
push
mov
mov
call
inc
mov
or
je
sbb
sbb
push
aaa
jg
pop
ds
les
jno
xorl
xor
std
jnp
lret
shl
cld
and
dec
inc
test
mov
scas
lcall
mov
movsb
leave
in
mov
mov
xor
push
xchg
fwait
aaa
push
mov
inc
sbb
sti
mov
and
cmpl
lods
ja
jl
jp
sub
sub
inc
inc
mov
stos
inc
int3
mov
pop
mov
dec
pop
fucom
dec
loop
cli
loopne
stos
fsubrs
fsubrp
mov
ds
das
xor
je
pop
xor
cltd
std
imul
mov
adc
jnp
pusha
movsl
lds
stos
adc
dec
xor
xchg
inc
xlat
das
push
push
mov
dec
out
cld
inc
jo
xor
popa
arpl
aas
ret
sbb
jb
push
in
xchg
push
stos
sbb
pop
ja
push
or
mov
xchg
cs
pop
fs
inc
jno
or
adc
jl
cmp
repz
cs
pusha
push
cmp
add
sarb
test
mov
lods
mov
idivb
rcll
or
sub
outsb
lods
mov
jl
repz
test
or
push
xor
jle
pop
mov
stos
out
mov
data16
adc
mov
pop
push
adc
sahf
addl
popf
mov
rcr
in
call
pop
mov
sbb
into
ret
lock
mov
mov
push
xchg
pop
test
inc
test
iret
mov
loope
sub
jg
lods
fnsave
int3
pop
and
and
add
mov
fcompl
rolb
mov
lock
fildl
data16
push
fidivl
or
jbe
ss
add
push
insl
xchg
icebp
xor
inc
fimull
fwait
imulb
pop
repnz
dec
pop
ret
test
int
subl
xchg
js
adc
mov
cmc
inc
out
pop
pushf
daa
cmp
cmpsl
sbb
jmp
jo
ja
cli
xchg
das
sub
push
inc
imul
push
pop
pop
loope
fdivs
gs
dec
aad
mov
pop
dec
stc
dec
push
pop
cmp
lea
cs
add
addr16
push
xor
xchg
loop
rorb
lret
lds
icebp
mov
dec
out
push
cmc
cmp
or
mov
push
pop
repz
mov
or
fnstcw
leave
aad
cmp
incl
dec
and
cmpsb
inc
mov
fldcw
push
jns
lret
mov
push
fstps
or
adc
movsl
and
cmp
repnz
invd
push
out
daa
xchg
xor
mov
and
scas
shrl
sbb
mov
shr
pop
xchg
imul
or
sahf
fisttpll
inc
or
inc
mov
fdivl
push
cwtl
incb
cmpsb
shlb
and
push
arpl
pop
daa
xor
loopne
xchg
aas
cltd
hlt
lcall
xchg
fisubrl
dec
sbb
mov
ficoml
dec
mov
or
inc
data16
movsl
insb
out
inc
xor
fistpll
cwtl
lahf
into
mov
test
stc
sub
negb
stc
pushf
stc
movsl
sbb
sbb
cmpsb
imul
mov
lret
pop
dec
jo
mov
outsl
in
test
lods
sub
test
negb
add
sbb
fdivrl
dec
mov
or
movsl
roll
or
mov
es
cmpsl
inc
aam
lods
aam
inc
lret
pusha
and
inc
in
loop
mov
and
iret
xchg
inc
bound
int3
mov
hlt
inc
fsubrs
push
enter
jae
test
fbld
test
cli
xchg
test
shlb
iret
pop
testl
ret
dec
dec
fiaddl
enter
mov
inc
and
jno
iret
sub
aam
outsb
out
ficomps
ss
popa
movsl
pop
das
stc
add
cmp
fisubrl
jecxz
jno
pop
sub
popl
push
in
sbbl
add
gs
xor
jmp
dec
in
push
mov
sbbl
adc
hlt
xchg
inc
in
jmp
lcall
inc
pop
sbb
mov
push
outsb
pusha
sbb
pop
mov
inc
or
dec
jg
sub
int3
lcall
sbb
sbb
xor
cmp
enter
or
cli
fadd
sbb
js
enter
xchg
xchg
push
imul
test
jno
cmpsl
jle
adc
xchg
mov
xchg
xor
xchg
xchg
cmp
mov
push
mov
out
fcomip
cwtl
jl
lea
inc
mov
sbb
arpl
ljmp
fisubrl
movsl
and
lods
push
pusha
lret
and
and
mov
mov
or
leave
int
adc
int3
loopne
push
repnz
enter
xchg
mov
push
mov
mov
lea
arpl
lea
xchg
jae
leave
fchs
sbb
or
clc
int3
xchg
and
adc
shlb
es
cmp
insl
in
or
lcall
addr16
fnsave
mov
ss
addb
iret
inc
fisttpll
mul
sub
inc
mov
jae
out
test
xchg
lahf
mov
or
popf
jo
loop
in
shll
jp
push
std
or
loop
fistps
mov
pop
clc
fmull
test
push
call
xchg
fcoml
xor
lods
mov
andnps
inc
sbb
movsb
nop
pop
jnp
inc
lods
jns
jmp
inc
out
sub
int
add
rorb
sbb
out
sti
cmpsl
bound
mov
dec
jp
mov
bound
push
xchg
movsl
sub
add
mov
inc
iret
xor
or
dec
dec
movsb
mov
fwait
inc
popl
pop
push
inc
lods
cmp
dec
add
xchg
xor
das
or
cmp
push
add
xor
push
movsl
ret
lret
out
test
fs
dec
daa
shll
ret
ret
sbb
mov
dec
mov
iret
jb
js
mov
mov
xorl
fsubrl
and
mov
in
mov
or
push
xlat
mov
rcrl
bound
xlat
loope
scas
lds
aas
daa
mov
inc
ficomps
shrl
adc
and
loope
addr16
xor
xchg
jecxz
jae
push
sbb
xchg
imul
cmp
and
pop
icebp
dec
pop
pop
pushf
xor
mov
inc
insl
add
jb
mov
stc
mov
or
cmp
sbb
sbb
or
sbb
xchg
sub
cmp
jbe
jbe
nop
and
push
jo
pop
mov
jmp
call
fmull
fstpt
andps
shl
push
scas
cltd
add
inc
repnz
shlb
add
ds
mov
xor
mov
mov
lret
xchg
out
stos
mov
sbb
jae
fnstsw
push
jb
fdivs
imul
mov
dec
scas
add
cltd
cmp
lds
outsl
aad
nop
aas
ret
fwait
xor
push
je
enter
xchg
fs
cmpsb
push
fwait
lock
or
push
leave
xchg
das
aas
repz
or
sbb
mov
dec
dec
add
jle
cli
adc
dec
xchg
xor
pop
mov
inc
adc
insl
jnp
adc
xchg
push
imul
jp
xor
push
cwtl
cmpb
push
aam
aaa
in
or
aad
cmp
test
mov
dec
repz
cwtl
pop
xchg
stc
mov
movsb
aas
lcall
fsubr
and
insb
add
sbb
xchg
mov
xchg
inc
mov
sbb
addr16
sub
mov
cmpsl
mov
and
mov
in
add
mov
in
lahf
inc
mov
nop
aad
push
xchg
jge
xchg
test
sahf
sub
outsb
repz
adc
sub
sbb
outsb
cmc
mov
shlb
int
std
or
sbb
mov
test
int3
mov
inc
das
cwtl
lahf
inc
hlt
xchg
test
jle
testl
push
or
push
ss
push
sub
shrb
mov
add
xor
test
push
call
test
sahf
aam
outsl
push
ror
and
ret
test
addl
pop
or
pop
xor
mov
ret
ss
sub
ljmp
ljmp
loopne
or
jo
xchg
outsl
inc
push
and
fdivs
std
mov
pop
add
out
add
ds
stos
das
xchg
mov
add
and
clc
fwait
fs
or
xchg
sub
sbb
rol
xchg
stos
cwtl
addr16
xchg
scas
push
inc
mov
cli
xchg
rolb
dec
loope
icebp
sbb
inc
in
dec
adc
into
sbb
jbe
fwait
cli
mov
insb
xor
ret
in
push
mov
xor
mov
or
je
jne
sbbl
popf
inc
fxch
stos
leave
movsl
sarl
rcrb
xchg
mov
inc
gs
or
adc
decb
decb
aad
xor
dec
pop
push
ret
repz
xchg
jnp
das
jnp
mov
jp
mov
movsb
lea
ljmp
insb
das
adcb
faddl
fidivs
jne
xchg
adc
pop
das
xchg
cmc
adc
out
gs
push
mov
mov
adcl
aas
cmpsl
mov
jl
divb
cmp
jge
push
jle
orl
cmc
add
jb
pop
repz
imul
mov
inc
repz
in
dec
adc
push
out
cmc
xchg
insl
sub
push
test
lock
sti
mov
inc
mov
jl
test
bound
daa
inc
fcom
outsl
imul
insl
pop
mov
or
movsl
cltd
ja
into
pop
xor
sbb
jo
iret
xor
daa
push
cmp
aaa
bound
mov
dec
sbb
movsl
xchg
repnz
mov
loopne
aad
fiaddl
das
pop
fidivs
xchg
fcmove
mov
jp
pop
sub
call
inc
sbb
filds
cs
cmc
outsl
outsb
std
and
dec
lds
xor
int3
fisubs
icebp
sbb
aam
and
adc
mov
mov
call
sbb
sbb
jns
mov
lock
fsts
lea
lret
xlat
nop
ds
lods
pcmpgtw
add
mov
jb
bound
dec
idivb
inc
cltd
out
xor
xor
push
dec
pusha
vmovups
sub
sub
ss
xchg
jg
sub
loop
pop
adc
lds
xchg
or
mov
mov
fs
pop
xchg
xor
loope
cmpsb
adc
push
call
pop
cmp
insl
jle
cmpsl
outsl
dec
adc
repz
sahf
cmpsb
jmp
and
into
adc
inc
rdmsr
out
ja
popf
push
jnp
test
in
sub
rclb
loop
sbb
jp
ret
testl
aad
mov
pop
add
mov
xor
mov
lods
loopne
cltd
sbb
cs
mov
xor
cli
and
mov
adc
test
shl
pop
xchg
insl
test
cs
sub
sbb
jne
pusha
mov
sbb
jle
adc
fadds
lds
jge
sbb
dec
mov
cmp
push
inc
jg
ret
xchg
lret
fisttpll
movsl
lds
pop
xchg
xchg
xor
movsl
ret
dec
gs
xor
ja
enter
jo
pushf
movsb
mov
mov
push
mov
jno
push
push
pop
adc
popl
pop
xor
xchg
call
push
push
es
repnz
in
outsb
jbe
jae
dec
in
paddq
test
jnp
rolb
sub
mov
notb
push
cmc
mov
xchg
lods
xchg
push
pop
push
adc
mov
lahf
outsl
stos
cwtl
cld
mov
sub
dec
iret
jbe
les
xchg
rcrl
sahf
sub
movsb
mov
mov
mov
rcll
loope
mov
mov
or
push
pusha
push
loop
mov
jb
shrb
mov
sub
fldl
add
pop
jno
cmpsb
orb
test
cs
lahf
cwtl
stos
shl
js
lcall
in
lcall
sar
mov
arpl
or
movsl
pop
add
in
cmpl
sub
iret
mov
jmp
test
ss
push
push
in
mov
loop
mov
sub
daa
jmp
push
orl
in
jg
xchg
in
mov
aas
push
jnp
cmc
and
xchg
jle
lds
fucomip
add
fs
loopne
mov
jno
adc
sub
dec
jecxz
add
mov
and
pushf
mov
lea
and
mov
push
jl
rolb
cld
xadd
jg
fstpt
xchg
add
jb
sbb
icebp
je
scas
pop
dec
jne
in
das
test
sub
lock
inc
or
cmc
arpl
jno
push
cmp
xchg
cmp
lods
stos
mov
nop
addr16
add
add
and
roll
inc
sbbb
xchg
stos
inc
das
aas
xchg
xor
push
mov
subb
jl
stos
or
sbb
ret
mov
fbstp
fisttpll
roll
mov
xor
cmp
push
pop
mov
xchg
stos
mov
lods
add
cmpsb
pop
push
call
sbb
out
jp
adc
sbb
inc
nop
mov
arpl
sub
sbb
mov
jo
movsl
aaa
lret
mov
lcall
pop
rcr
repnz
pop
lods
lods
rcrl
mov
lea
and
or
cmp
xor
push
or
daa
push
inc
add
inc
in
aad
loop,pt
divb
dec
sbb
adc
scas
cmp
xchg
push
ljmp
mov
xchg
sub
sub
cmp
mov
pop
mov
gs
jmp
cwtl
lods
int
les
es
mov
mov
mov
fbld
adc
fwait
inc
cmp
mov
cmp
mov
jle
xchg
xor
sbb
add
mov
jmp
mov
lahf
out
lock
movsb
cmp
or
ret
outsl
clc
cmc
inc
shlb
adcb
out
ja
sbb
xchg
push
mov
and
add
inc
fstpl
inc
movsb
fistpll
imul
adc
cld
add
test
mov
or
jns
add
mov
mov
inc
ljmp
es
stos
pop
je
out
push
hlt
lret
mov
fidivrs
cmpsl
and
inc
in
dec
repz
insl
sub
jg
mov
jecxz
mov
push
subl
loope
test
mov
pushf
xor
shlb
adc
sub
push
fbld
mov
scas
lock
push
and
push
mov
adc
sbb
jns
xor
js
push
gs
fstl
jb
xchg
push
push
out
js
cmpsb
bound
out
pop
out
adc
outsl
notl
andb
enter
and
iret
fnstcw
mov
jmp
inc
push
xchg
scas
es
je
pushf
xor
and
or
dec
xchg
rcrl
xor
mov
and
adc
rorb
cs
mov
sbbb
pop
lahf
add
or
mov
and
sub
and
ljmp
jl
mov
add
or
bound
stos
testl
flds
int
mov
cs
stos
cli
aad
outsl
lock
sub
inc
push
sub
pop
out
cli
xchg
mov
push
xchg
jbe
and
jmp
popf
insl
sub
sbb
mov
or
out
test
jno
xlat
test
idivl
movsl
or
fdivl
jae
sub
pop
cs
push
scas
out
adc
sahf
or
call
mov
xor
bound
rorb
daa
sbb
ljmp
sub
repnz
ja
hlt
lea
pop
cmp
mov
jg
les
sti
dec
fiaddl
dec
adc
pop
out
hlt
xchg
mov
adc
pop
in
loope
movsl
stos
pusha
add
shrb
inc
jo
lock
je
push
xchg
cli
push
jge
imul
lds
adc
cmp
dec
out
je
lods
inc
ficoml
out
mov
mov
cmpsb
mov
jno
or
jae
xchg
mov
adc
fldcw
mov
bound
ds
xchg
sub
push
xchg
test
es
push
cmp
jnp
or
dec
inc
adc
or
stos
jae
sub
fdiv
add
cmpsl
sub
lds
jp
push
sub
pop
enter
jg
add
xchg
dec
ffree
cmp
mov
add
fildll
test
pop
push
leave
hlt
mov
mov
ja
mov
mov
call
out
pushf
xor
pop
daa
fsts
lret
pop
test
push
xor
push
inc
and
adc
cwtl
add
mov
arpl
mov
sbbb
push
inc
xor
int
jnp
idivl
inc
rcrb
add
rcll
or
cmp
sbb
dec
dec
dec
testl
push
and
lahf
test
int
push
rcrl
jae
mov
cli
push
lahf
pushf
pop
ss
xchg
and
mov
cmp
imul
pop
test
jne
fsubrp
push
stos
jnp
push
pop
inc
test
inc
leave
stos
mov
bound
rclb
fs
xchg
sub
sub
add
ja
lret
inc
add
das
lret
pop
jb
dec
in
cmp
cmp
aam
ret
jno
xlat
out
loop
mov
loop
xchg
xchg
insb
sbb
clc
push
push
cmp
mov
inc
dec
movsb
pop
addl
mov
push
jae
sbb
es
fildll
aad
stc
sbb
mov
mov
test
or
dec
dec
test
out
add
pusha
sti
aaa
in
cltd
mov
adc
adc
sub
cli
xchg
sub
mov
jecxz
popa
sbb
or
sahf
mov
xchg
cmc
inc
pop
fs
mov
mov
pop
adc
test
mov
lods
mov
mov
stos
or
arpl
dec
sbb
popa
popf
fdivl
popa
ret
sub
subl
mov
sbb
sbb
fisubrs
xor
cmp
dec
sbb
lcall
xor
adc
mov
icebp
loopne
and
gs
mov
adc
icebp
into
pop
mov
sbb
pushf
lods
cmp
cli
icebp
add
cmp
frstor
push
aam
pop
lret
cld
sub
sbb
mov
sbb
mov
sbbb
stc
jg
mov
xor
movsb
bound
es
jge
pop
sahf
mov
movsl
aaa
xor
jo
mov
cmpsb
adcb
lds
icebp
loopne
das
call
scas
inc
inc
mov
insl
mov
fdivp
push
insb
rorb
and
out
cmp
push
ja
and
or
xchg
jle
das
enter
out
cmpsl
clc
aad
push
jns
mov
mov
clc
jo
pop
insb
dec
xchg
push
test
inc
jge
lea
xchg
int3
jg
push
fs
fmul
and
mov
adc
mov
fbld
adc
loopne
stc
xchg
rclb
cmp
test
pop
out
and
in
sub
repnz
negb
fcmovbe
pop
test
repz
ret
xor
in
adc
mov
fildll
push
pusha
mov
mov
imul
mov
cwtl
cmp
dec
cwtl
jb
pop
fcmovne
jno
incb
dec
mov
adc
fldl
jns
fstps
xor
lret
mov
fs
adc
rcr
or
cmpb
mov
sbb
xor
imul
mov
lds
push
ljmp
jb
sbb
ja
outsb
xor
pop
into
iret
adc
call
xor
pop
dec
add
mov
dec
cmp
mov
popa
lea
cmp
std
pop
test
int3
or
imul
out
xchg
hlt
cmpsb
or
xor
or
inc
adc
mov
ffreep
insb
inc
outsb
add
cmpsb
mov
loopne
retw
ffreep
xchg
sahf
sub
mov
mov
popf
pusha
notl
cmp
imul
ljmp
pop
mov
cld
mov
ljmp
iret
movb
mov
sub
sbb
out
iret
cmc
shlb
aas
mov
rolb
and
cli
pop
cs
iret
insl
insb
inc
mov
jne
mov
dec
push
dec
add
jbe
popa
test
into
pop
and
fnstenv
fmul
jl
sub
adc
in
adc
push
pop
push
sub
out
cmp
call
leave
and
xchg
push
lock
div
inc
scas
mov
lcall
popa
xor
mov
or
sbb
aam
and
sbbb
xor
fiadds
or
lock
mov
xchg
popa
jo
sub
xchg
arpl
xor
push
inc
hlt
push
mov
mov
push
pop
mov
loope
test
lahf
cmc
xor
fld
xchg
add
sti
iret
lods
cmp
sbb
inc
or
out
or
and
sbb
inc
cld
sbb
sub
push
das
sbb
out
sti
inc
js
xchg
and
inc
pushf
lret
mov
pushf
scas
out
push
shl
lea
not
xchg
lcall
cmp
jb
dec
xchg
xlat
repz
dec
imul
fisubs
mov
sub
ret
mov
or
cltd
xor
and
nop
mov
dec
pop
aad
mov
in
cld
inc
out
dec
xlat
mov
pop
pop
out
into
ss
push
jle
cs
pop
mov
mov
pop
out
mov
adc
xor
add
test
pop
xor
enter
or
ret
lret
xchg
dec
ljmp
loop
dec
pop
dec
and
outsl
in
push
shl
inc
mov
clc
inc
and
pmulhuw
sub
and
mul
xor
mov
stc
or
insl
js
outsb
sub
mov
notl
lods
push
xchg
xchg
sahf
ja
lret
add
packssdw
push
js
ds
adc
jae
loopne
mov
cmpsb
inc
je
mov
dec
pop
adc
sbb
and
mov
jo
in
push
pop
mov
mov
xor
std
je
push
pop
shrb
inc
icebp
push
hlt
testb
sahf
sub
sti
xchg
cmp
xor
mov
mov
or
mov
xor
test
dec
mov
lods
mov
test
cmpsl
mov
in
rcrl
test
shrb
or
dec
mov
inc
mov
sbb
jp
stos
mov
dec
lods
outsb
or
mov
lods
scas
sbbb
inc
sbb
ja
fldt
cld
add
xor
lock
mov
pop
inc
jl
adc
jecxz
fldcw
jl
and
lods
cmp
cwtl
divb
pop
xor
lea
cmp
adc
jno
cmpsl
mov
fldcw
ret
icebp
data16
cltd
push
punpckhwd
jg
jg
ja
mov
push
fidivrs
fidivl
adc
fnstcw
test
popf
xchg
popa
mov
loop
xor
repz
lock
outsb
sub
iret
fcoms
dec
mov
mov
stc
cmp
pop
mov
pop
fstpt
shlb
adc
and
cmp
mov
cmp
or
xchg
lods
test
xor
out
ljmp
fsubp
jge
pushf
incl
jge
xchg
notb
sub
sarl
xchg
adc
mov
fcomip
add
and
dec
push
jns
xchg
test
xchg
push
mov
subl
xor
xchg
mov
aas
sahf
jb
shlb
ret
pusha
notl
enter
add
jb
rcll
aam
inc
ja
adc
or
es
mov
les
test
mov
mov
test
test
jne
ja
cs
je
jbe
cld
xchg
orb
cmpl
out
scas
push
adc
inc
add
jno
or
in
fs
jmp
imul
pop
push
mov
loop
mov
ja
dec
push
ljmp
test
sub
add
leave
jmp
movl
shlb
into
fwait
xor
xor
mov
das
cmp
cmp
lock
dec
loop
push
adc
repz
sbb
imul
sti
pop
jbe
repnz
dec
notl
movsb
cld
mov
stos
sub
xchg
aaa
xchg
dec
mov
insb
jne
test
or
enter
popa
cmpsl
or
jb
add
jge
xor
push
mov
mov
addr16
insb
jb
push
lock
jg
fistps
dec
push
icebp
inc
jecxz
daa
xchg
push
test
sbb
aad
inc
stos
fdivr
add
cs
push
sbb
and
das
xor
mov
jge
movsl
xchg
fmuls
jo
vpunpckhqdq
insl
roll
repz
push
sub
and
lcall
jge
loop
and
lock
push
cli
adc
les
add
pop
mov
cmp
fldt
lret
out
xor
adc
dec
inc
fs
sti
cli
pushf
fimull
shll
inc
dec
add
ret
cmpsb
lods
lahf
das
cmp
into
add
movsb
ja
pop
call
jl
ljmp
lret
dec
inc
adc
stc
add
cltd
cmp
int3
cmp
push
xor
and
insb
push
inc
and
repz
xor
fcmovu
xlat
ds
jae
sbb
testl
push
out
jmp
push
adc
mov
in
push
fsts
fisubrl
pop
lock
jne
test
int
xchg
js
mov
das
mov
imul
inc
mov
jne
bound
addl
nop
rcll
hlt
jae
add
and
xorb
inc
sbb
push
out
cmp
loope
sti
imul
mov
cmp
add
popa
adc
dec
jae
sti
fs
je
testl
pop
dec
cmp
jecxz
std
nop
sbb
push
scas
pop
int
sbb
pop
insl
mov
out
movsb
lret
movsb
shr
loop
inc
push
lods
dec
or
xlat
jle
popa
xchg
cli
outsb
pop
cmc
pop
hlt
stos
fsubs
add
fisubs
es
fbstp
inc
jo
das
mov
xor
icebp
pop
jae
nop
mov
cmp
cli
pusha
ss
mov
sbb
insb
mov
adc
repnz
imul
in
insl
cli
out
lock
pop
out
push
add
mov
mov
adcl
adc
mov
daa
ret
pop
ds
adc
cmc
xchg
aas
push
dec
cmovo
leave
jg
mov
mov
sub
pop
in
out
xor
pop
daa
js
xor
jmp
mov
inc
jp
cmp
mulb
jge
addr16
fwait
xor
scas
fistpl
inc
je
lea
decb
loop
cmp
push
pop
adc
add
dec
bound
popa
fs
sbb
adc
ds
out
xchg
cmpsl
inc
es
xchg
cmp
dec
addr16
push
rcrb
loop
shl
inc
sbb
cs
mov
sbb
mov
dec
ret
xor
adc
adc
rcl
jge
into
testb
xor
sbb
and
sub
aaa
inc
aam
sbbl
push
jns
sbb
and
inc
mov
cmc
mov
gs
movsl
icebp
mov
jo
aad
dec
pop
pop
jg
lret
das
jno
push
mov
rorl
jg
popf
lds
in
inc
mov
ret
xor
enter
cmp
sbb
cmp
fwait
ss
xchg
js
and
lods
lods
push
pop
call
sbb
xchg
mov
inc
xlat
mov
sub
push
cltd
cmp
dec
sbb
bndcn
bound
jge
mov
hlt
mov
xchg
add
pop
lcall
fbstp
jl
aad
adc
aas
inc
pop
pop
repz
cmp
mov
fisubl
sbb
and
inc
sub
xchg
pop
int
pop
xor
xchg
sub
dec
adcb
shrb
inc
jl
xchg
shll
push
not
js
fwait
cmc
lock
ret
hlt
imul
jge
jge
dec
mov
jbe
mov
jae
enter
pushf
inc
and
sub
xchg
into
or
sbb
or
mov
cmp
data16
stc
shll
xchg
dec
in
movsl
dec
jecxz
jno
mov
mov
pushf
pop
enter
mov
cmpsb
cmp
mov
les
ret
hlt
mov
mov
das
pop
sub
push
pop
sbb
pop
xlat
iret
cmp
xor
xchg
notb
pushf
lds
and
adc
adc
cltd
jne
les
xchg
scas
mov
ret
in
sub
xchg
jne
int3
aas
es
adc
inc
dec
subb
cmp
lcall
ljmp
imul
mov
sbb
or
nop
repnz
pop
sub
pop
jecxz
les
insb
xchg
jo
loop
div
jg
mov
jl
mov
mov
rolb
xor
mov
sub
jmp
ret
jl
dec
or
inc
cmp
int
rclb
lea
mov
clc
sub
aad
imul
jl
pusha
pop
icebp
xchg
xlat
mov
mov
decl
in
insl
or
fisubs
mov
call
nop
sbb
pop
pushf
mov
push
sahf
call
inc
inc
arpl
inc
scas
in
hlt
aaa
popf
xor
pop
pop
lock
ret
out
mov
push
out
mov
jo
sub
ficoml
notb
imul
mov
mov
jae
mov
iret
fstl
shl
hlt
lret
das
stos
cli
mov
xor
jp
ja
cmp
or
fcoms
test
sub
lock
xchg
les
shll
inc
lods
adc
lods
push
and
rorb
sub
add
xor
inc
fmul
mov
rol
sub
push
mov
aam
lods
push
push
sub
ret
jmp
mov
jne
pop
clc
sbb
jp
sub
pop
adc
jae
mov
inc
xchg
jne
outsl
mov
scas
movsl
xchg
lods
cmp
cmp
in
inc
mov
lret
in
mov
push
inc
xor
lret
jb
loopne
imul
leave
frstor
out
popl
and
pop
sbb
out
and
movsb
repnz
inc
ds
aad
repnz
hlt
mov
inc
cwtl
xchg
add
arpl
xchg
xchg
out
push
jo
mov
imul
stc
dec
dec
and
or
mov
mov
pop
jnp
insl
or
mov
ja
push
shll
fadds
jo
mov
dec
gs
pop
call
test
or
icebp
shll
push
outsl
xchg
fstpt
arpl
data16
lods
jne
xlat
imul
sub
repz
dec
jmp
shlb
sub
xor
test
push
dec
test
lock
xor
mov
je
repnz
fstp
stos
push
mov
jge
xchg
enter
mov
lcall
xchg
mov
cld
xor
sub
pop
test
xor
mov
xor
pop
add
push
inc
pop
jmp
jmp
xlat
imul
xchg
out
bound
cwtl
or
outsl
jns
sub
sbb
lahf
stc
xchg
mov
inc
jl
add
cmp
mov
mov
push
addr16
sub
int3
hlt
push
push
cli
mov
fldt
jne
dec
ja
stos
mov
or
inc
repnz
out
mov
and
xor
jl
push
pop
repz
or
cmp
jp
pushw
movsb
fwait
xchg
mov
ljmp
pop
sbbb
mov
jg
inc
stc
xor
inc
int3
mov
ret
mov
fiadds
insb
jg
mov
mov
or
push
ds
fdivl
or
add
out
cwtl
pop
dec
or
cmp
outsl
aad
xchg
push
and
add
data16
repz
sbb
stc
pop
adc
clc
dec
out
and
cmp
push
negl
adc
sbb
fs
sub
jbe
filds
mov
cwtl
ds
jno
cmpl
imul
hlt
fidivl
cmpsl
insl
and
clc
or
xor
jle
and
jge
cltd
testb
and
fldt
add
mov
push
sti
into
iret
scas
daa
and
cmpsl
aas
lods
popf
in
leave
lods
cmp
or
adc
lret
pop
inc
jmp
sub
pop
clc
jno
xchg
xor
cmp
out
out
jle
mov
inc
pushf
dec
jle
and
sbb
cmc
jle
scas
scas
push
dec
movsl
into
fbstp
mov
adc
sbb
icebp
pushf
mov
push
jle
lock
das
jmp
es
ret
sbb
insl
lret
cmpsb
mov
icebp
pop
mov
sub
fnstsw
outsb
loop
fcoms
nop
mov
sub
sti
outsl
shll
adc
mov
lods
stc
push
lcall
in
test
fs
gs
xor
loop
fsubrp
sti
xchg
into
inc
add
testb
fldenv
jle
lret
pop
mov
sbb
lret
sbb
mov
rcll
stc
dec
rcr
clc
adc
stc
xor
ret
cwtl
scas
lock
xor
cmp
call
sub
xchg
dec
push
jbe
mov
bound
test
inc
lock
idivb
pop
mov
pushf
out
shl
out
or
pop
mov
fsubrp
negl
movsb
cmp
insb
in
call
add
test
out
mov
push
adc
jae
mov
adc
inc
mov
int
int3
and
lds
mov
pusha
faddp
pop
cli
cli
enter
in
iret
adc
cmp
lret
repnz
aaa
lods
xor
rolb
shll
jns
lock
ss
sahf
add
iret
insb
mov
dec
mov
shrl
into
xchg
adc
repnz
mov
mov
lock
or
lret
cmpsb
movsb
hlt
mov
adc
jmp
push
xor
dec
mov
aam
push
push
push
pop
push
pop
inc
xchg
add
clc
or
or
fisubl
and
clc
ja
sub
mov
mov
push
scas
inc
fsubr
andw
xor
or
das
mov
pop
adc
jmp
mov
mov
push
jg
loopne
push
push
dec
add
and
pop
insb
mov
rclb
lcall
ss
loopne
xchg
adc
testl
dec
inc
testl
lock
mov
mov
xor
cmpsl
xrelease
push
js
dec
out
nop
je
lret
sti
xor
push
movsl
pop
dec
into
data16
mov
lods
mov
popf
add
pop
leave
adc
loope
std
xchg
mov
test
sbbb
push
cmpsb
das
push
loope
inc
fcmovnb
sbb
dec
and
jbe
insl
scas
call
add
shll
sbb
pop
outsl
mov
movl
and
push
mov
mov
pop
mov
and
pop
mov
nop
enter
loop
in
fcoms
add
insb
and
sbb
adcb
adc
out
xor
dec
out
inc
xor
jne
and
push
inc
pop
and
xchg
jne
push
push
cmp
mov
mov
in
mov
popf
movsl
scas
mov
stos
lock
lret
test
xlat
jae
out
mov
test
cmp
cmpsl
int
das
fwait
xlat
fwait
cs
mov
movb
push
mov
jnp
mov
dec
pop
insb
jle
push
lods
rcll
iret
fcompl
movsb
mov
jb
nop
mov
sbb
mov
cmpsb
and
lahf
fisttps
mov
lds
dec
rcll
and
shl
sub
cmp
aad
in
ret
and
dec
sub
in
test
or
arpl
or
leave
aas
mov
rcrl
dec
jns
dec
loopne
lcall
pop
mov
jae
iret
or
sub
loope
sub
mov
pop
not
add
jae
aad
or
ljmp
jbe
stos
xlat
pop
xchg
lods
test
iret
orb
pop
cmc
cmp
pop
je
jl
sbbl
call
test
insl
fisubrs
add
adc
jo
shll
lahf
scas
adc
jb
jecxz
inc
fdivs
dec
xchg
xor
pusha
popf
mov
or
out
jg
add
mov
or
pop
or
imul
int
inc
imul
dec
pop
sahf
and
or
mov
cmp
jmp
movl
inc
cmp
xchg
pop
outsb
mov
cmp
push
push
dec
scas
or
push
xor
imul
add
andl
push
cmp
or
pop
cmp
pop
jge
pop
xor
mov
mov
dec
ret
pop
mov
mov
xchg
lds
lret
jnp
icebp
in
adc
testb
mov
jbe
shll
mov
sub
insl
mov
and
inc
push
data16
fwait
mov
mov
sub
test
mov
inc
mov
or
dec
push
or
ja
movsl
stos
push
dec
push
xorl
xchg
jmp
lods
inc
mov
ljmp
cld
inc
sub
push
adc
xchg
lret
dec
out
test
sub
pop
in
cmpl
lods
lods
push
sbb
mov
jmp
push
push
cmp
bound
add
mov
push
jno
adc
sub
or
mov
xchg
mov
rcrl
dec
fcomps
mov
popa
xlat
clc
lahf
test
in
nop
cmp
mov
daa
inc
dec
cltd
pop
std
fucom
imul
add
jecxz
outsl
mov
inc
xor
fcoms
cld
adc
in
shlb
int3
xor
pop
fwait
mov
push
ljmp
sub
fs
adc
dec
add
push
pop
xchg
pop
push
dec
mov
fimuls
xchg
lods
mov
scas
add
xchg
jge
jne
mov
xor
mov
push
adc
into
pmulhuw
cmp
sbb
ret
test
loopne
orl
and
mov
inc
mov
mov
jnp
aaa
or
mov
or
mov
sub
addl
pop
and
jecxz
xchg
andl
adc
jbe
gs
xor
shll
mov
test
mov
pop
filds
ds
push
adc
push
jae
jbe
je
dec
lcall
mov
shrb
cld
push
test
cmpsb
mov
mov
push
xchg
and
cmpsb
fcoms
cmp
jno
pop
in
xor
ss
or
jl
dec
fisttpll
sahf
fdivrl
add
jge
int
outsl
push
push
out
mov
and
lock
or
push
cs
mov
mov
xor
push
das
push
push
rcrw
jne
and
in
addl
out
daa
and
in
mov
jp
push
jp
mov
mov
fstl
push
cmpsl
pop
xor
cmp
mov
cltd
arpl
sbb
ds
mov
push
in
fdivs
mov
and
push
jbe
or
loope
cmpsb
adc
nop
daa
push
xor
xor
orb
mov
fimuls
pop
fbstp
lahf
or
and
xor
scas
lods
fsubs
inc
cmc
mov
jle
imul
cmp
in
jecxz
and
push
lea
mov
sub
cwtl
and
mov
inc
lret
sub
cmp
adc
cmp
mov
mov
ret
jp
les
lahf
pushl
xchg
pop
icebp
mov
jge
pop
inc
ficoml
lods
fsubr
fimuls
lahf
hlt
inc
inc
leave
leave
xchg
mul
xlat
add
shlb
dec
xor
loope
aam
aad
xchg
invd
insb
mov
std
jne
flds
ret
jmp
loopne
in
aaa
push
sub
repz
daa
xor
in
jnp
loopne
std
push
jle
or
cmpsl
jge
lret
out
loopne
mov
push
stos
repnz
stos
mov
sbb
aaa
push
adc
pusha
loope
xchg
cmp
stc
loop
cmp
outsb
add
xor
mov
lea
sub
mov
cwtl
jb
pusha
inc
inc
fnstenv
cltd
fnstenv
sub
daa
jp
movsl
and
adc
push
icebp
daa
sarb
xchg
cmp
mov
gs
std
loop
scas
aaa
test
push
or
or
test
mov
pop
sbbl
cmp
xlat
mov
insb
xchg
push
pop
dec
outsl
cmp
outsl
ss
mov
loope
adc
push
add
add
push
test
insl
ja
mov
jl
lret
fsubp
ss
mov
sub
push
jmp
out
xor
sub
or
in
and
jns
pop
stos
das
out
and
xchg
push
jb
andb
pushf
jne
movsl
xchg
loopne
fsts
inc
cmc
mov
std
loop
jle
in
jns
lahf
outsb
mulps
push
mov
cwtl
inc
xor
mov
dec
cmc
jno
out
in
xchg
jl
or
shl
xor
mov
xchg
enter
test
pop
je
mov
mov
pop
push
xor
lods
ljmp
adc
ret
jg
std
lcall
iret
arpl
sub
dec
test
or
or
dec
call
and
lods
inc
loop
mov
hlt
mov
sbb
aam
leave
lea
pop
and
and
or
push
insl
les
xchg
xor
pop
add
sbb
mov
adc
push
cltd
xor
push
fimull
mov
stc
jp
pusha
jp
xchg
adc
adc
xor
je
mov
jae
fildll
call
mov
shl
cmp
adc
or
imul
push
mov
test
aam
pop
shll
push
out
xchg
jmp
mov
inc
call
cmpsb
push
pop
add
daa
cmpsb
inc
test
push
xor
in
push
lahf
mov
or
or
je
and
clc
jl
and
in
dec
jg
ja
repz
or
adc
pusha
add
int3
mov
xor
push
aad
repz
lret
loop
daa
and
leave
mov
aaa
icebp
mov
outsl
sbb
or
or
cmp
cmpsb
dec
mov
int
pop
xchg
and
pushf
popf
in
scas
and
ljmp
lret
loopne
std
es
add
pop
xchg
sbb
xchg
xchg
and
stos
sarb
pushf
ret
jle
or
insb
and
sahf
dec
movsb
pushl
fwait
mov
imul
xchg
shlb
mov
mov
mov
xchg
pop
or
pop
jnp
stos
xchg
std
dec
pop
push
cmpsb
cmpsb
inc
subl
push
fidivl
cmp
xor
xchg
cmpsl
ja
xorb
mov
mov
xor
mov
pop
mov
sbb
inc
scas
inc
ljmp
push
scas
sub
pop
pop
rorl
mov
out
cmp
int3
in
push
popa
clc
xchg
clc
mov
cs
adc
ds
ss
mov
pop
sub
mov
leave
movsl
cmp
in
repz
repz
subb
adc
sub
popf
hlt
mov
in
aas
movq
pop
jns
out
lcall
sbb
xor
add
inc
fdiv
addr16
je
scas
push
push
outsb
out
shlb
add
pop
push
dec
andb
jbe
cmc
inc
shlb
push
inc
ljmp
scas
sub
xchg
inc
lret
dec
xor
popa
test
jecxz
jmp
mov
or
jmp
stos
insb
push
inc
ja
ljmp
aaa
xchg
sbb
pmulhuw
imul
xor
dec
sub
hlt
push
cmp
jae
mov
dec
int3
outsl
dec
sbb
insb
dec
outsl
testb
outsl
repz
lds
lahf
in
adc
xchg
pop
nop
adcb
dec
sbb
je
aaa
push
pop
xchg
push
icebp
cli
in
pop
mov
sbb
shlb
cmpsb
in
imul
and
xrelease
xor
sub
fcompl
movsl
cmp
jmp
lds
or
nop
cli
negb
mov
pop
push
in
add
aaa
push
clc
and
lock
dec
inc
aaa
jbe
mov
roll
shrb
pop
or
adc
cmp
adcl
or
cmp
out
sti
ss
fistps
stos
push
cmpsb
jns
dec
mov
sub
dec
dec
out
das
pop
fld
dec
push
xchg
jne
jp
mov
xor
ss
outsl
xchg
mov
lods
pop
stos
sub
dec
xor
dec
fnstenv
adc
push
sahf
fsubrl
leave
repnz
enter
dec
xchg
movsl
dec
out
in
dec
mov
ljmp
xor
sub
or
dec
loopne
pop
pop
jo
jg
sub
icebp
sub
mov
mov
push
mov
imul
repnz
shll
inc
nop
je
hlt
dec
pop
push
xchg
shlb
push
int
push
fidivl
and
fstpt
aad
or
js
inc
in
test
pop
pop
xor
xlat
in
or
loope
mov
shrl
mov
push
sub
adc
jb
test
test
xor
push
scas
sub
dec
test
sbb
add
into
cltd
clc
in
lds
lret
jno
mov
xchg
push
imul
xchg
mov
mov
shl
xlat
mov
pop
mull
scas
xchg
lahf
ret
xlat
xchg
mov
pop
mov
lock
jge
lahf
xchg
dec
dec
xlat
stc
or
xchg
jg
cmp
pop
stc
cld
loope
nop
sub
fcmovnbe
orl
out
fsubrl
or
out
xor
mov
pop
mov
in
xor
pop
cs
jns
outsl
scas
insb
mov
cmpsb
mov
push
test
les
enter
xchg
ljmp
nop
shrb
std
mov
xchg
ss
shl
mov
das
fcoml
dec
sbb
mov
xchg
adcb
cmp
dec
adc
xchg
inc
mulss
pusha
popf
cltd
add
sbb
pop
scas
aaa
adc
fnsave
xchg
addr16
inc
stos
mov
mov
jp
mov
jp
sbbb
lea
lahf
push
add
mov
pop
adc
aaa
cmp
sub
jb
lods
mov
sbb
adc
into
popa
outsb
mov
ret
cmpsl
fisubl
int3
jno
mov
stc
add
adc
test
bound
jge
jmp
aam
lods
idivl
xchg
ret
into
test
push
pusha
fisubrs
pop
ja
mov
stos
pop
movsl
cmp
lret
dec
or
pop
jmp
or
mov
pop
cmp
add
ficomps
add
test
push
in
xorl
test
test
inc
arpl
in
inc
adc
int3
xor
pop
sub
inc
add
je
sbb
sub
pop
js
sub
inc
pop
pop
aad
stos
lea
lods
mov
mov
data16
and
pop
xchg
mulb
push
ss
mov
xor
fildll
adc
mov
fsub
sub
aad
jne
xlat
cmpsb
sbb
clc
sbb
mov
rclb
pop
icebp
inc
aaa
inc
inc
pushf
aas
ss
xacquire
adc
pop
jl
aaa
cmp
stos
jbe
mov
fstp
out
mov
das
cmpsb
cld
inc
jl
inc
in
leave
sbb
fcomps
inc
xor
je
pop
div
push
les
pop
jle
pop
xor
and
and
push
loopne
adc
stc
push
sahf
sub
std
jo
and
xchg
sub
repz
mov
xor
out
mov
jns
mov
mov
clc
leave
and
mov
jb
mov
mov
cmp
mov
popf
push
cmp
out
push
outsb
aam
rolw
xor
and
push
mov
xchg
lock
cld
mov
mov
mov
push
cmc
pop
adc
scas
inc
test
jno
and
int3
pop
js
stos
inc
mov
leave
pusha
push
shll
mov
push
gs
data16
or
arpl
outsb
std
js
inc
mov
lahf
in
adc
dec
cmpsb
aas
cmp
shrl
jae
icebp
dec
pop
icebp
mov
jg
mov
and
lret
and
fisubs
dec
mov
in
mov
ja
dec
out
or
lock
pop
pop
jl
gs
pop
imul
in
cmpl
inc
adc
or
mov
xchg
mov
push
sbb
sbbl
ret
push
bound
ss
fwait
adc
jno
loope
scas
and
inc
and
pusha
push
jne
loope
jo
xchg
and
inc
mov
jle
sbb
ret
add
fucomip
lock
jo
in
jmp
addr16
and
adc
push
push
movl
adc
imul
call
in
and
push
pop
jnp
xchg
aaa
rcrl
mov
andb
pop
and
jns
sbb
dec
shrb
out
dec
lret
shl
mov
cmp
xlat
scas
mov
jl
insl
adc
fisubrs
jle
jae
xchg
jb
pop
dec
popa
lahf
pop
jb
sbb
scas
xchg
adc
ret
std
std
xchg
xor
dec
fcompl
mov
dec
and
jp
cmp
lods
pop
xor
scas
pop
xor
inc
clc
sub
cmpsl
pop
inc
mov
sbb
popf
cmc
aam
out
inc
xchg
fsubs
sbbl
mov
mov
sbb
fldenv
mov
aad
repnz
mov
add
fcomi
mov
pop
jl
mov
jl
addr16
stos
lcall
mov
stos
dec
push
das
jae
dec
scas
push
popf
xor
iret
pop
or
nop
fstpl
dec
cmc
or
jmp
mov
movsb
imul
sub
pop
faddl
in
add
dec
call
or
or
jmp
lock
or
fsubr
and
gs
sbb
jno
call
push
and
jp
jns
jae
daa
aaa
lret
add
ret
and
aam
outsl
add
test
dec
aas
push
ljmp
test
adc
cmp
mov
fwait
sbb
cmp
ss
xchg
ja
xor
xor
divl
jno
outsb
insl
mov
inc
mov
cmp
add
xor
dec
inc
out
js
push
loop
scas
cwtl
sbb
std
cmp
mov
out
cmp
aaa
mov
add
je
js
xchg
xchg
pop
push
mov
loop
repz
fnstcw
movsb
mov
clc
xchg
popf
adc
pop
mov
arpl
addr16
and
fs
and
xchg
xchg
mov
mov
incl
sahf
mov
push
les
pushf
popa
nop
mov
clc
jp
hlt
cmp
mov
test
shlb
mov
and
xchg
rolb
sbb
jge
xor
nop
xor
cmp
aam
dec
push
sub
es
jl
push
cmc
lods
inc
sti
dec
jl
insl
fs
mov
push
sbb
xor
movb
shlb
in
cs
cwtl
int
lods
push
xor
out
push
dec
lods
mov
sti
mov
add
push
aaa
or
in
dec
push
jbe
mov
push
mov
and
je
outsl
add
movl
mov
adc
aaa
inc
data16
fdivl
cmp
jns
sbb
xchg
lahf
xlat
xor
ja
clc
lcall
dec
loop
mov
adc
xor
std
lods
inc
das
inc
pusha
repnz
push
je
cmp
mov
dec
push
test
push
xor
xchg
frstpm(287
sbb
dec
movsb
stos
pop
icebp
js
call
insl
jnp
fisubrs
repz
jp
fwait
mov
add
cmp
cmc
pop
out
inc
push
lahf
dec
ds
addr16
in
pop
subl
xlat
and
lds
inc
pop
cmc
jbe
dec
jecxz
and
call
loope
mov
loop
out
sbb
imul
loope
pushf
imulb
sub
push
lock
addr16
leave
movsb
adc
sar
xor
xor
push
sti
das
fisttpll
sbb
adc
mov
push
and
xchg
stos
pop
js
ja
leave
and
lods
push
jmp
adc
icebp
xchg
and
jnp
inc
mov
fdivr
xor
cs
in
loope
dec
pop
jle
xor
mov
movsl
outsl
lret
or
insb
jge
fsubl
mov
mov
sbb
inc
sub
or
dec
mov
daa
das
sti
add
sub
mov
mov
mov
inc
scas
push
in
jnp
nop
adc
dec
fucom
xor
cwtl
and
jle
lret
cmp
test
xor
adc
mov
cmp
inc
fidivl
dec
mov
mov
popf
fdivl
in
adc
and
jno
sub
je
xor
ret
xchg
ret
pop
jecxz
push
adc
xor
gs
pop
imul
ret
cmpsb
shll
movl
rclb
sub
movsb
iret
das
icebp
jl
pop
xchg
das
rclb
sub
and
sti
ret
pop
ss
rcrb
sub
mov
push
scas
int3
mov
popf
cld
lcall
push
stos
cmp
js
cli
fcomp
pop
fcoms
pop
jno
in
fnsave
xchg
or
mov
xor
or
push
add
mov
push
or
sar
das
test
ficoml
or
add
mov
rcr
daa
inc
leave
push
push
out
sbb
leave
flds
jne
sbb
sbb
pop
and
mov
xor
push
loope
ja
jmp
test
pop
or
jp
mov
std
and
pop
pop
data16
cmc
jle
in
lea
dec
xlat
ljmp
mov
inc
sub
test
push
or
pop
js
push
xorb
repz
dec
int
loop
jne
je
pop
bound
xchg
shlb
push
mov
sbb
or
cs
cmp
rep
test
in
sbb
test
imul
scas
or
mov
rorb
cmp
rcrl
shrl
or
cmp
out
mov
sbb
inc
fdivr
cmp
subb
mov
dec
push
movsl
jp
cmp
pusha
inc
sub
clc
lods
sub
aam
pop
rcll
rolb
ror
jno
imul
lock
mov
fnop
pusha
fisubs
movsb
push
sub
movsb
stc
dec
loope
inc
inc
lret
push
or
mov
xchg
repnz
pop
icebp
xchg
loope
enter
dec
dec
jg
les
cmp
in
xchg
push
popa
xchg
or
mov
test
outsl
insb
jae
js
xchg
bswap
fsubrp
push
mov
xchg
out
mov
pop
icebp
mov
and
lods
out
movsl
sbb
push
push
adcb
or
rcr
mov
mov
mov
ljmp
leave
or
fldl
mov
mov
lods
ret
mov
lods
jecxz
mov
outsl
push
jmp
loopne
cwtl
pop
fildll
addr16
jle
mov
fbstp
loope
cmp
nop
mov
jecxz
dec
lods
mov
mov
insl
sub
mov
dec
daa
repnz
add
les
cmpsl
test
push
jnp
mov
adcb
rorb
rorl
js
cmp
xchg
int3
mov
push
in
inc
and
stos
adc
xlat
and
pop
sub
mov
shlb
loop
adc
jl
xchg
adc
and
mov
cmp
add
gs
add
or
icebp
sbb
push
mov
cmpsl
cwtl
fcmove
dec
les
insl
aad
mov
movb
fcompl
mov
cmp
inc
push
mov
fmull
pop
out
sbb
jg
icebp
mov
jno
pop
mov
inc
push
loopne
push
adc
dec
sbb
dec
and
lea
mov
inc
add
push
adc
fidivrs
insb
cmpsb
stc
cmp
mov
popa
stos
jmp
sbb
xchg
push
notl
sub
nop
pop
ffree
int
cmpl
addr16
pop
mov
popf
cli
iret
jge
in
push
mov
jno
adc
and
add
cmp
and
daa
divb
jecxz
add
cmp
adc
ja
sbb
mov
cmp
sbb
mov
pop
imul
jno
xchg
sbb
push
push
add
and
fdiv
lea
out
arpl
mov
sub
iret
jbe
push
sbbl
push
add
pop
dec
mov
fcmovne
mov
into
jo
add
bound
outsl
inc
pop
cmpl
cltd
sahf
mov
aas
adcl
stc
ret
insb
adc
iret
scas
xor
jbe
stc
not
enter
mov
loope
lcall
in
cmpsb
jo
das
mov
inc
js
popf
or
dec
mov
sbb
popf
sahf
mov
jp
cmp
das
loopne
xchg
push
pop
ret
fadds
jecxz
jl
inc
es
lock
adcb
into
inc
fdivl
push
cmp
bound
mov
xor
mov
shll
add
push
test
jmp
mov
xor
mov
stos
fcoml
or
pop
cmp
push
mov
jbe
sub
jecxz
lret
imull
mov
push
cmc
or
dec
pusha
dec
cs
inc
dec
push
insb
pop
xor
mov
shr
or
mov
sbb
mov
lock
movsb
adc
xchg
add
or
push
inc
lods
mov
lea
lods
mov
popa
and
in
add
jp
sbb
mov
jge
shrb
mov
mov
mov
push
xor
popf
dec
clc
xchg
orl
inc
decl
sbb
inc
ljmp
and
xchg
pop
lret
mov
insl
mov
lds
int
fisttps
xor
shl
mov
int3
jg
cmc
mov
fidivrl
pop
adc
or
scas
fs
push
mov
test
push
lahf
sub
xlat
outsb
enter
lea
lcall
lret
mov
test
cli
and
pop
fistpl
adc
mov
sub
adc
fiaddl
out
ljmp
adcl
enter
cmp
arpl
push
mov
dec
sub
pop
repz
cs
adcb
out
in
sub
ds
cmc
outsl
mov
popf
xor
popf
pop
addr16
incl
sub
ss
insl
or
push
pusha
stos
or
fistps
loopne
out
xchg
or
push
mov
test
adc
or
mov
or
mov
fucom
inc
sbb
sub
lds
fistl
jb
clc
nop
repz
inc
pop
jl
adc
cmpsl
mov
pop
sti
add
mov
fstps
pop
push
cmp
sub
xor
inc
fs
or
mov
ljmp
push
push
roll
xor
sbb
ret
lret
mov
sbb
sti
ret
mov
mov
push
add
into
fwait
and
sarb
sbb
in
scas
repnz
xor
fstps
out
adc
mov
in
and
inc
jae
jle
or
movsl
dec
les
aaa
sub
fxch
adc
cmp
repz
or
cwtl
test
test
pop
sbb
and
jmp
je
push
xor
gs
aad
mov
out
repnz
xchg
pop
mulb
mov
xor
mov
push
mov
adc
sub
outsl
push
sub
cmc
xchg
mov
and
push
mov
inc
and
sti
pusha
gs
pop
sbb
test
lahf
movsb
repz
inc
in
loopne
je
test
xor
jne
push
out
inc
and
xchg
insb
fcomip
push
sti
call
cmpsb
cmp
xor
stos
push
cwtl
mov
setnp
or
xor
lcall
arpl
dec
pop
and
mov
sbbb
adc
sbb
mov
imul
pushf
test
gs
aam
testb
aaa
push
repnz
jmp
inc
jg
xchg
mov
mov
jle
mov
scas
in
jecxz
stos
mov
jle
jnp
arpl
dec
aas
data16
pop
dec
xor
call
or
scas
add
ret
pop
inc
inc
mov
imul
sub
ss
push
mov
and
xor
leave
cmc
ret
mov
loop
push
fwait
lods
test
or
jne
dec
ljmp
in
dec
test
bound
inc
test
sub
sub
inc
fcomip
loope
mov
or
movsb
push
adc
cmp
fsubrl
shl
jp
push
dec
cmp
loope
pop
cmc
jl
mov
adc
mov
mov
stos
mov
dec
pop
adc
add
fsubrs
subb
ljmp
gs
dec
dec
lcall
jmp
or
mov
sarl
cmp
out
add
test
out
inc
xchg
xchg
add
popf
daa
fstps
mov
or
pop
ds
enter
in
in
fwait
or
fs
aaa
rcl
cmc
in
push
mov
xchg
clc
mov
mov
bound
loope
jg
aad
sub
mov
sbb
movb
pop
lods
jns
mov
add
cwtl
fs
add
push
ds
clc
xor
rclb
fadd
xchg
loopne
push
mov
outsb
neg
or
cmp
insb
add
push
out
or
cltd
dec
mov
imul
ljmp
xchg
aam
rorb
pop
pop
icebp
dec
fwait
imul
leave
shll
nopl
jl
jge
out
scas
inc
test
scas
mov
daa
mov
sub
fnstsw
rorb
push
aaa
cmp
ficompl
fwait
mov
fldcw
pop
sbb
ja
mov
pop
or
add
dec
test
jns
test
fidivrl
push
cmp
inc
fdivrl
xchg
ljmp
lret
xor
mov
in
imul
and
adcb
imul
stos
aam
scas
scas
xor
pop
jno
sarb
and
add
cmp
daa
outsb
dec
sub
xor
xchg
xchg
dec
xchg
mov
in
inc
push
inc
mov
xor
mov
andb
leave
outsb
sub
sahf
lock
sub
in
cld
xchg
and
int
daa
imul
mov
push
inc
popf
das
add
imul
sub
iret
dec
pop
jbe,pt
mov
hlt
call
push
mov
jle
pop
in
add
dec
bound
pop
ss
fildll
add
mov
xchg
adc
jl
pop
dec
ljmp
fisubrs
mov
mov
sub
xchg
jne
data16
das
cmp
mov
add
ret
sub
mov
lods
pop
xchg
insb
xor
push
and
dec
cmp
imul
push
arpl
xchg
jbe
call
jecxz
rcrl
fdivl
mov
test
out
hlt
push
dec
or
sahf
push
pop
imul
sub
sub
fdivs
lds
out
adc
into
mov
push
int3
xchg
sub
aad
pop
jecxz
cld
sub
mov
or
cmpsl
pop
fnsetpm(287
dec
or
jno
pusha
scas
aas
and
dec
sti
inc
push
adc
mov
test
sub
arpl
rcrl
ja
jno
aam
push
mov
push
test
imul
es
push
shl
pop
mov
fiadds
jbe
dec
cmp
lcall
adc
movsl
or
pop
push
shll
jecxz
ror
inc
fbstp
cmp
stc
inc
xchg
sbb
sub
fldt
push
pop
mov
ficoms
in
es
or
and
pop
int3
sbb
loop
cmc
xchg
sub
mov
jbe
and
jb
stc
ret
xor
xor
mov
sbb
dec
mov
jge
or
cmpsb
inc
pop
and
and
cs
push
pop
or
add
adc
dec
mov
push
pop
and
out
xor
aad
push
fimull
std
outsb
mov
out
cwtl
das
sar
or
aaa
pop
fdivrs
push
stos
test
adc
rcr
fsubs
fildl
push
cmp
jns
dec
or
andl
sti
jae
ss
add
mov
out
nop
out
xchg
cmp
in
and
iret
dec
xchg
je
icebp
cmp
xchg
arpl
push
ss
imul
pop
cmp
xchg
pop
loope
pop
dec
inc
negl
lds
repz
xor
sahf
stos
cmpsb
repz
call
shrb
enter
stos
pop
int
test
cmpsl
jecxz
stc
leave
pusha
loop
addr16
rol
sub
dec
xchg
fsubs
push
imul
jo
mov
push
mov
or
push
aas
lret
and
or
ss
pushf
cmpsl
movsb
scas
pop
test
jo
subb
or
push
test
add
xchg
inc
cmc
add
adc
and
fsubp
mov
cmp
shlb
fwait
cmp
sbb
cmp
movsl
popf
ja
sub
mov
test
lret
jno
arpl
out
js
push
inc
jns
outsl
scas
push
push
push
je
into
fdivrs
jg
enter
int
int
rol
mov
push
ret
daa
ss
mov
mov
sub
cwtl
add
xchg
aaa
add
pop
mov
or
mov
in
mov
mov
pop
jne
mov
jns
inc
cld
shl
pop
les
xchg
mov
dec
je
aas
in
out
stos
les
ljmp
nop
dec
inc
pop
rol
pop
add
int
aam
pop
inc
add
lahf
jno
xor
pop
add
fimuls
xchg
push
fwait
mov
js
push
rorb
enter
iret
and
insb
mov
lods
jl
fildll
ja
ret
mov
iret
fdivrp
jl
inc
sub
dec
testb
dec
mov
call
ror
out
push
int3
add
outsb
add
lcall
mov
popf
popf
lods
stc
pop
shll
push
sahf
lods
xchg
sbb
add
mov
fs
cmp
je
adc
lret
hlt
pop
lret
adc
mov
ret
jbe
or
sbb
inc
xchg
cltd
jnp
lods
andb
lahf
xorl
insb
jae
std
pushf
scas
cs
cli
shll
jb
aam
mov
mov
loopne
jo
fsubl
push
stos
subb
cld
mov
int3
mov
jo
mov
xchg
add
and
sahf
hlt
mov
dec
push
and
scas
mov
mov
enter
ss
in
mov
test
jmp
icebp
int
xchg
addb
xor
out
out
sub
imul
repnz
into
sub
mov
test
pop
lea
and
pop
push
add
insb
loop
xor
cli
lods
jne
stc
ja
xlat
and
adc
fnsave
xchg
and
xchg
xchg
mov
cld
pop
enter
popf
or
out
rcl
shrb
mov
pop
popf
das
pop
xchg
enter
js
add
pop
sub
data16
mov
test
movntps
repnz
or
mov
mov
push
jecxz
dec
pop
pslld
push
sub
mov
mov
pop
add
push
and
cmp
add
inc
pop
lods
clc
xchg
or
inc
push
jecxz
xor
adc
sbb
sbb
mov
pop
loop
and
sbbb
out
adc
or
and
inc
add
sarb
push
out
je
pop
popa
rclb
mov
mov
mov
push
mov
cs
mov
jge
sbb
rol
out
nop
and
pop
push
imul
mov
dec
sbb
repz
andl
data16
lahf
mull
xchg
add
and
jne
push
jmp
fimull
imul
ljmp
cmp
aas
add
test
fisttpll
pcmpgtd
outsl
cmp
adc
mov
push
int
jb
loopne
test
cmpsb
test
sbb
ss
pop
xor
ss
bound
cmc
icebp
mov
pop
enter
mov
push
aad
aas
pop
xor
xor
jmp
push
pop
fldt
cmp
sbb
pusha
xchg
sbb
inc
loope
xchg
inc
sub
add
sbb
insb
add
cltd
mov
pop
mov
fsubr
cmp
das
mov
xor
sar
movsb
repz
aas
loop
insb
add
lret
out
cwtl
dec
out
mov
dec
call
push
ja
xorb
adc
dec
jnp
and
pushf
push
mov
pusha
jl
inc
xchg
mov
inc
cmp
jp
jmp
jp
sub
push
pushf
inc
cltd
adc
xchg
dec
add
adc
and
ss
fldcw
inc
testl
mov
mov
bound
sahf
fists
pushf
dec
imul
popa
pop
add
imul
mov
adc
cld
push
pop
and
cltd
inc
ds
lret
cli
push
push
loopne
pop
cmpsl
pop
inc
pop
lret
mov
mov
scas
dec
pop
cmc
out
sahf
lods
inc
dec
xchg
popa
movsl
ja
xchg
cwtl
repnz
cmp
mov
sbb
push
add
jbe
sub
nop
pop
adc
jb
mov
xchg
sbb
pop
pop
lds
bound
jns
pop
movsb
js
js
pop
fimuls
fsubl
pop
jge
mov
or
into
lahf
cs
dec
pop
xor
js
adc
nop
jbe
add
jns
mov
mov
push
ja
fs
sahf
xchg
pop
inc
je
mov
xchg
add
push
movl
and
dec
inc
stos
cmc
movb
pop
mov
push
rclb
pusha
xor
pop
pushl
mov
jne
out
icebp
popf
outsb
out
call
lcall
repnz
mov
mov
cmpsb
inc
sub
addl
and
dec
test
iret
sbbb
and
mov
insb
out
in
scas
jo
jecxz
jp
mov
and
in
es
stos
inc
sbb
xchg
jl
mov
push
mov
mov
fisubs
fistps
add
jbe
stos
push
cli
test
scas
sbb
mov
lds
jle
push
out
mov
iret
sbb
push
dec
lods
jb
shrl
xor
repnz
pushf
pop
lret
js
and
test
mov
xor
mov
loopne
mov
cmp
push
ja
in
adc
mov
test
jl
xor
xchg
jg
in
mov
sub
shrl
inc
push
mov
sub
xor
dec
dec
jecxz
mov
icebp
push
jns
in
mov
test
mov
mov
push
fnsave
fs
adc
inc
pop
lock
lea
call
and
jbe
cld
sbb
push
or
test
xchg
scas
out
sub
movsl
jmp
das
lods
lahf
push
sti
stc
jae
arpl
rcl
cwtl
inc
sbb
mov
mov
add
out
shrl
adc
int3
pop
test
mov
movsb
jbe
adc
adcl
inc
mov
pop
nop
test
xchg
insb
pop
in
and
sub
iret
stos
xor
push
stos
cwtl
pop
mov
or
out
mov
lods
mov
sbb
jmp
jo
clc
lret
fcmovnu
sbb
xchg
stos
pop
mov
hlt
ja
xlat
scas
pop
sahf
sbb
mov
lods
stos
aad
mov
iret
jbe
iret
stc
inc
mov
mov
add
cmp
sub
add
addb
mov
and
aad
in
add
jle
mov
fwait
popf
cmpl
bound
in
cmpb
add
xchg
sub
xlat
clc
mov
sub
gs
fs
cld
cmp
xchg
divb
push
xchg
testb
ret
adc
xchg
cs
ljmp
idiv
and
push
pushf
add
sub
movl
lock
inc
mov
mov
xor
mov
addr16
adc
xlat
inc
mov
jae
cmc
sub
jo
std
xor
xchg
std
lods
clc
inc
mov
ljmp
xchg
nop
push
jbe
xor
jno
add
jns
clc
sahf
sub
cld
push
pop
add
in
rcrb
push
jbe
cmpsb
cs
add
fmull
shlb
clc
sbb
pop
jnp
cmp
mov
bnd
push
mov
inc
andb
push
sbb
fcmovne
ret
inc
pushf
mov
rorb
fdivrl
jle
mov
jl
cmpsl
dec
jmp
jle
insl
outsl
icebp
ret
sbb
popf
dec
in
push
sub
test
je
std
pop
dec
ss
pop
pop
andb
jns
cltd
jne
mov
ret
sub
in
add
xor
inc
adc
nop
jmp
shlb
insl
aaa
test
out
aas
lahf
mov
aad
pop
pop
lahf
jg
sbb
rol
cli
mov
in
inc
jno
aaa
addr16
mov
adc
roll
shlb
in
sbb
xchg
fs
mov
sbbb
data16
mov
cli
cltd
pusha
sub
push
popf
cmp
fwait
and
nop
sti
pop
lcall
ret
outsl
test
popa
sub
xchg
sub
cmpsl
shr
xchg
push
mov
data16
shlb
dec
and
sbb
loopne
push
pop
mov
jl
mov
imul
add
sub
sub
ss
in
insl
jmp
pop
aam
call
test
ljmp
loope
adc
mov
adc
xchg
cld
mov
out
insl
lahf
mov
ja
lods
shlb
lret
sti
andb
aad
inc
dec
jl
mov
ret
ss
out
mov
mov
dec
aad
mov
outsl
sub
fcoml
daa
les
loop
pusha
rcl
imul
cmp
mov
ret
fsubrs
push
loopne
jae
je
pop
mov
fimuls
push
aam
test
mov
cld
xchg
add
mov
xor
adc
aaa
pop
cmpsl
mov
aad
enter
xchg
jmp
push
out
je
cmc
ss
jl
stos
mov
sbbl
and
test
xor
fidivs
insl
ja
pop
sub
lcall
in
cmpl
int
bound
and
fbld
xor
dec
ds
movsl
or
jecxz
sub
cmp
mov
push
outsb
cmpl
mov
jecxz
inc
push
bound
enter
aas
push
out
and
mov
sub
and
jmp
int
mov
nop
int
ret
fcomps
mov
push
pop
icebp
pop
jae
push
mov
push
and
push
addr16
push
lret
dec
mov
nop
cld
xchg
ret
xchg
arpl
mov
jo
ret
sarb
in
or
jb
lahf
addr16
jecxz
mov
mul
jbe
sub
cmp
jne
ret
hlt
in
lcall
jno
add
rclb
js
cs
jne
sti
push
jmp
mov
aas
in
stos
inc
push
pop
pop
cmp
enter
cmp
sbb
mov
out
push
pusha
rclb
pop
repz
inc
mov
pusha
imull
adc
insb
dec
dec
adc
stos
mov
pop
loop
adc
cmp
push
pusha
jp
push
in
or
or
ja
push
xchg
out
leave
or
add
sbb
notl
cmpsl
mov
cmpsb
pusha
not
not
imul
jle
das
push
push
in
sbbb
mov
push
mov
loope
lods
push
decb
das
sub
mov
dec
loope
jg
test
jl
jo
or
pop
sahf
mov
pop
and
leave
push
mov
push
pop
inc
pop
xchg
inc
imul
jo
mov
mov
neg
inc
xlat
or
push
in
dec
cmp
mov
fisubrs
jnp
xchg
or
aaa
into
cmp
shrb
pop
push
in
xor
fbld
es
mov
in
push
scas
inc
dec
or
aas
arpl
dec
mov
inc
mov
fcmovne
pop
adc
jp
xor
cwtl
das
xchg
jg
cmpsl
mov
fxch
push
popf
cld
cli
aam
xor
push
in
push
push
nop
daa
xorb
mov
shrl
cld
scas
inc
sub
jle
inc
dec
lds
dec
in
popf
add
imul
mov
pop
push
insl
add
fidivl
addr16
xchg
mov
fs
loopne
xchg
adc
xor
push
popf
nop
xorl
fldcw
inc
das
xchg
sub
inc
ficoml
mov
stc
stc
push
mov
pop
push
pop
xchg
cmpsb
lods
and
fld
adc
xor
je
dec
push
xchg
sub
scas
mov
ffree
adc
and
es
dec
mov
jp
sub
xchg
xchg
lret
mov
fsubp
jecxz
sbb
dec
jecxz
aas
testb
mov
cmpl
call
xor
add
mov
mov
enter
fwait
push
sbb
mov
bound
xchg
dec
clc
jl
es
pop
jl
mov
lods
test
mov
iret
pop
cmpsb
cmp
xchg
push
jmp
data16
xchg
dec
pushf
xor
pushf
xor
data16
jg
test
shlb
mov
dec
lock
fwait
pop
lret
adc
xchg
sbbb
lcall
adcb
test
mov
aad
hlt
mov
xchg
sub
cmpsb
sub
jge
mov
jg
out
test
movsl
push
out
dec
add
andl
es
mov
cmp
dec
add
jle
add
rclb
adc
jge
sbb
mov
sbb
jle
adc
mov
adc
inc
mov
js
push
movsl
xchg
mov
fwait
orb
jg
in
or
insb
add
push
sub
orb
jg
push
movsl
iret
mov
dec
jecxz
dec
fsubrs
popf
add
rclb
dec
orl
sbbb
jmp
push
sahf
xor
mov
je
les
fldl
sahf
pop
icebp
into
mov
aad
pop
mov
mov
mov
ja
add
mov
mov
pushf
cwtl
das
shll
cmc
cmpsb
inc
add
scas
mov
add
jne
adc
sarb
insl
stos
inc
fs
ja
pop
out
scas
mov
xchg
lods
inc
outsb
add
stos
mov
fdivl
inc
mov
push
xchg
mov
enter
out
test
cmp
xchg
test
mov
pop
jnp
push
lods
fwait
scas
jl
fimuls
sbb
subb
xchg
jo
jne
and
jle
push
scas
cwtl
fsubrs
jl
lds
gs
daa
xchg
mov
test
out
hlt
add
and
or
dec
jge
sub
sbbl
nop
daa
pop
sti
pop
jb
cmp
sbb
mov
loop
or
into
gs
jle
shrb
fwait
loop
int3
fldz
test
ljmp
pop
cmp
and
sbb
mov
push
pop
or
push
adc
jbe
pop
ss
sub
xor
xchg
sub
or
push
pop
sub
mov
cwtl
das
stos
jl
lods
test
lret
xchg
sub
dec
and
jo
lcall
fnsave
sub
cld
pop
dec
loope
sbb
lods
inc
pushf
jo
push
mov
inc
adc
inc
push
pop
out
inc
fidivrl
or
mov
sti
inc
push
jnp
inc
fcmovu
jae
imul
ds
adc
mov
andb
mov
int3
arpl
insb
and
push
mov
dec
loopne
push
leave
pusha
cmp
fnsave
xor
test
push
call
mov
jne
das
movsl
mov
roll
out
je
jo
xor
sub
mov
sbbl
fidivrs
add
sub
inc
push
lods
jbe
dec
loopne
xchg
ret
inc
out
push
je
fbstp
xchg
stc
adc
inc
in
add
call
lea
out
mov
xchg
sti
mov
lds
data16
adc
xor
stos
adc
add
push
in
sbb
fs
fstl
sete
or
xor
or
mov
lods
mov
push
addr16
faddl
mov
movsb
push
faddl
push
je
lds
ret
hlt
jl
dec
scas
adc
lods
ret
add
cmpsl
cltd
and
push
mov
shl
jle
add
mov
cli
adcl
ss
test
sti
xchg
cmpsb
divb
lret
dec
loop
dec
xor
jle
adc
dec
xchg
cmp
outsb
xor
sahf
push
sub
mov
in
test
shlb
add
and
mov
xor
jne
mov
push
movsl
repz
inc
fisttpl
lods
sub
xchg
std
sbbb
mov
or
dec
lcall
and
xorl
sbb
jmp
insb
add
hlt
jecxz
ljmp
push
aam
fisttps
fstpt
pop
jmp
movsb
test
and
test
lods
cltd
mov
loop
popf
xchg
sub
add
or
icebp
and
fcoms
or
cmpsb
ds
insb
fwait
push
sahf
xchg
dec
xor
pop
insl
sbb
dec
pop
out
pop
pop
adc
dec
iret
fs
xchg
pop
add
xchg
xor
mov
or
push
or
jge
sub
pop
aam
fs
mov
jb
stos
aas
leave
xchg
movsl
sbbb
call
mov
adc
aaa
cmp
mov
or
xchg
xchg
xchg
sbb
sbb
cld
xor
addl
ret
xchg
sub
and
pop
lods
lcall
int3
adcl
sub
xlat
movswl
in
lods
cltd
fs
cltd
adc
and
xchg
xchg
call
or
scas
jmp
pop
int
dec
jecxz
out
in
int
push
insb
cwtl
pop
aad
jno
mov
fwait
cmp
push
nop
jns
sahf
push
jmp
out
mov
lock
mov
jo
in
push
xchg
dec
push
orl
loop
call
repz
loop
dec
sub
imul
jg
out
and
dec
jecxz
flds
lea
loop
jmp
push
push
and
test
sbb
lret
xchg
sub
inc
add
fcom
sub
ljmp
adc
mov
lock
adc
out
pop
addb
mov
sbb
adc
sbb
nop
scas
out
push
mov
sbb
mov
rclb
mov
stos
inc
enter
xchg
xchg
mov
push
aam
xchg
mov
dec
shl
dec
adc
xor
fbstp
out
pop
cld
push
lret
fcomps
push
cmp
push
mov
or
imul
sbb
loopne
add
rcll
jno
into
dec
lcall
and
jae
add
xchg
xor
pop
hlt
mov
cmp
xchg
lahf
js
and
pop
or
dec
xor
popf
xchg
push
jge
inc
mov
xor
inc
dec
rcrb
push
push
dec
sub
popf
daa
fldt
test
or
popf
sbb
and
lock
mov
test
jl
ja
xchg
sub
dec
adc
pop
out
stc
lock
adc
mov
arpl
int3
in
out
mov
mov
les
call
mov
mov
lahf
cmpb
mov
mov
push
iret
pop
jnp
lock
lret
fisttpl
sahf
aas
cmc
cs
and
and
insb
iret
shlb
and
imul
and
fiadds
outsl
pop
les
test
inc
jp
loopne
sbb
orl
stos
ret
cmp
sbb
or
sahf
arpl
inc
mov
xchg
pop
mov
out
sub
out
jecxz
push
sarb
cld
test
sub
xchg
loope
adc
in
jg
xor
mov
xor
lea
test
inc
nop
test
dec
fidivl
andl
std
ret
mov
fnstcw
insl
add
mov
push
adc
stc
push
cmp
mov
mov
lds
fwait
mov
int
scas
jmp
or
dec
iret
nop
jp
mov
inc
mov
push
cli
pop
enter
or
mov
ljmp
dec
cmc
xor
ret
push
fdivl
and
mov
sbb
or
pop
pop
push
cmpsb
sub
ljmp
mov
or
aaa
into
jae
cmp
mov
mov
aad
jbe
mov
sub
mov
jp
inc
push
fs
xor
bound
fbstp
aad
ljmp
cmp
push
es
faddl
sub
jbe
lcall
sbb
dec
sbb
ljmp
mov
loopne
jnp
scas
inc
xchg
cmp
dec
lcall
daa
movb
fimull
or
mov
inc
test
clc
in
test
fisttpll
lret
out
out
sbb
hlt
xor
mov
insl
in
in
cmp
sub
adc
lret
inc
notl
iret
mov
mov
push
rolb
icebp
into
fadds
mov
divl
testl
pop
cmp
add
in
fwait
xchg
dec
cmpsb
shld
sbb
dec
mov
sbb
adc
xchg
dec
shlb
outsl
add
faddl
mov
ljmp
push
sti
in
xor
fcompl
add
cmpsb
mov
testl
test
mov
xor
jns
mov
sub
mov
int
jp
imull
xor
inc
sub
in
jp
cmp
dec
sub
mov
dec
test
dec
pop
ret
pop
or
call
test
and
lahf
leave
dec
movsb
out
sbb
sahf
or
mov
mov
out
insb
shrl
mov
js
lahf
insl
cmc
mov
repnz
sbb
jnp
inc
mov
inc
stos
inc
daa
test
mov
notl
pop
and
lcall
mov
pusha
mov
dec
dec
push
in
jg
lds
ss
addr16
lret
cltd
dec
loop
dec
loop
pop
or
call
inc
mov
jmp
push
mov
jge
addr16
arpl
ja
sbbl
xor
cmpsb
ret
ds
sub
pop
out
cld
xchg
divb
dec
mov
and
fcoml
int
out
aad
stos
pop
in
mov
sarb
push
out
pop
shlb
stos
jge
sbb
jge
fwait
inc
test
lods
push
xor
nop
mov
out
cmp
jl
adc
sub
jb
mov
das
repnz
clc
inc
cmpsl
mov
and
push
shrl
out
dec
addb
js
stos
dec
fisubl
jmp
mov
pop
cltd
test
push
int
xchg
fwait
hlt
and
cltd
pop
add
xchg
sahf
lcall
mov
fimull
sub
jmp
mov
incl
ret
lahf
mov
es
lds
mov
in
sbb
repnz
mov
cmc
cmp
cld
es
insb
loope
mov
mov
dec
mov
in
cld
push
mov
add
pop
pause
and
loopne
cmp
les
test
add
addl
jb
or
push
loope
movsl
mov
dec
mov
notl
xchg
or
jle
lock
lds
jecxz
inc
xor
inc
aam
cmp
inc
and
fs
dec
out
inc
out
ret
outsb
cmpsl
rol
inc
leave
jecxz
push
loopne
scas
pop
mov
inc
jecxz
movb
sub
jne
mov
aad
je
mov
or
es
push
mov
xor
out
popa
push
movsl
jle
ss
test
mov
int
imul
out
repz
xchg
in
es
das
imul
and
outsb
popa
cltd
xor
stc
nop
loop
cmpl
in
ss
and
leave
pop
cmp
xor
sbbb
ss
add
in
ficoml
lods
adc
hlt
add
gs
mov
mov
pop
pushf
or
sbb
lock
iret
dec
jnp
filds
inc
fadds
lods
cmp
subps
pop
push
jge
sbb
dec
arpl
ja
test
cmp
jl
dec
inc
xchg
add
dec
cmp
pop
out
popa
jmp
mov
adc
xchg
rcrl
dec
les
imul
and
sbb
xchg
jae
adc
adc
out
xor
ja
lea
jne
mov
xchg
mov
clc
jg
lret
test
ror
int3
cmp
mul
pop
repz
sub
sub
jnp
jo
mov
cli
pop
push
iret
arpl
xlat
dec
loope
xor
push
mov
push
or
fisubrs
mov
lcall
push
in
push
daa
sub
jns
mov
cmc
xorb
mov
mov
jnp
stos
add
xchg
lock
lds
imull
ret
mov
out
adc
mov
push
jmp
aam
inc
into
jmp
test
gs
loope
test
xchg
mov
push
sbb
addl
dec
inc
mov
punpcklbw
dec
mov
inc
shl
sub
push
das
movb
fadds
xchg
mov
inc
jae
rorb
je
movsl
dec
lds
cmp
pushf
mov
cltd
lret
lret
jg
push
movsb
lods
push
int
leave
add
outsb
inc
movsl
cmp
clc
push
in
dec
mov
pop
inc
pop
push
pop
cmp
ds
int3
inc
adc
pusha
jbe
imul
push
sub
xlat
repz
mov
ror
mov
in
repz
sbb
out
mov
add
mov
fs
shrl
divb
mov
test
adc
mov
adc
test
and
in
mov
ljmp
adc
inc
jmp
or
imul
sbb
shll
stos
inc
push
sbbl
pop
mov
push
jmp
cmpsb
pop
scas
fs
repnz
and
xchg
xchg
xor
mov
insw
add
jno
shll
lret
inc
and
loop
scas
jae
jl
lods
pop
aas
cli
dec
jge
jno
pop
das
mov
mov
pop
add
scas
dec
cmp
xor
sbb
mov
jne
mov
mov
mov
mov
pusha
and
mov
movsb
mov
xchg
cmpb
loope
push
mov
dec
in
sarl
loop
lods
lcall
jmp
inc
loope
sahf
xor
mov
clc
mov
mov
sti
ret
pop
ret
mov
inc
and
xchg
in
gs
pop
xor
jecxz
gs
aaa
aas
sub
filds
pop
mov
pop
push
inc
movsl
cmp
mov
dec
xor
imul
cmpsb
pop
adc
mov
std
mov
sub
jns
inc
cltd
jno
push
dec
cmp
dec
aas
xor
test
fsubs
les
add
es
sbb
mov
mov
jbe
lods
sbb
push
aad
adc
pop
cmpsb
leave
neg
inc
xlat
into
push
mov
mull
jg
stc
jg
ficomps
arpl
inc
or
lods
inc
jmp
rcl
fmuls
loopne
xlat
aam
les
fldt
jecxz
mov
push
pop
and
mov
insl
call
cmp
pop
imull
push
sub
sub
loop
dec
ret
aas
sub
aad
mov
out
cmpsl
bound
decl
inc
dec
fstpl
push
mov
cmp
add
cli
ss
imul
jbe
lret
inc
scas
xchg
push
lods
arpl
test
test
mov
or
std
and
jo
ja
leave
repnz
xor
sti
mov
and
popf
popf
shrl
add
or
out
sub
add
faddl
xchg
loope
sub
mov
and
pushf
xor
bound
add
jge
pop
pusha
sti
add
aaa
movsb
jecxz
cs
call
in
insl
fcmovbe
sbb
sub
push
sbb
gs
inc
ret
xchg
xchg
jb
in
jle
fidivrs
mov
xor
aas
jl
scas
inc
outsb
and
cmp
pop
les
or
dec
xor
and
mov
in
mov
icebp
push
fdivs
pop
mov
in
rorb
fdivrl
dec
mov
sub
and
push
jecxz,pt
sub
dec
test
adc
jbe
mov
xchg
daa
sbb
js
mov
mov
stc
and
imul
mov
xor
insb
inc
mov
push
adc
dec
pop
xchg
sub
ss
sub
sub
loope
sbb
xchg
ret
jnp
pop
cmp
test
daa
out
insl
jo
inc
mov
push
test
insl
shrl
lret
in
lcall
adc
scas
fistl
loopne
test
cmpsl
mov
mov
mov
dec
loop
fcoms
repnz
mov
mov
lods
pop
or
subb
add
sbb
rcll
lock
xor
in
pop
in
xor
xor
jne
sbb
mov
scas
jno
std
icebp
xor
dec
fwait
xor
inc
shrb
mov
xlat
cmp
out
pushf
shlb
add
mov
sub
fs
dec
xchg
rorb
sub
je
je
push
and
fidivs
scas
push
cmp
imul
push
mov
push
jge
inc
cmp
xchg
sub
mov
or
shlb
daa
ficompl
ds
scas
adcl
shll
in
sbb
es
add
test
jmp
add
push
divb
jo
mov
cmp
movsb
bound
mov
jg
mov
xor
xor
jns,pn
jmp
pop
xor
and
maskmovq
testl
lock
jnp
mov
lds
pop
sahf
xor
negb
jg
pop
mov
inc
mov
setbe
cwtl
das
push
mov
repnz
mov
sti
lods
dec
popf
xor
call
sbb
stos
faddl
jle
mov
xchg
ja
jnp
cmc
inc
adc
int
arpl
dec
cmp
pop
nop
push
xchg
adc
or
and
mov
inc
mov
cwtl
jecxz
sbb
into
gs
lret
sub
lock
mov
add
popa
sti
inc
inc
sub
cmp
clc
push
les
imull
test
aad
inc
xlat
fwait
enter
mov
jl
out
daa
in
push
mov
icebp
in
sbb
stos
push
icebp
xor
sbb
ja
mov
pop
lret
daa
xchg
loopne
sub
lahf
aad
push
jb
icebp
cmp
mov
cli
xor
mov
cli
xor
sbb
cwtl
mov
dec
push
push
lea
push
cs
mov
stos
outsl
test
hlt
inc
mov
xchg
mov
imulb
xchg
sub
das
outsb
or
imul
inc
pop
jl
pop
inc
push
popf
inc
push
imul
xchg
movsb
cli
ss
call
int3
arpl
sbb
mov
test
push
leave
mov
mov
sarl
xlat
sahf
push
sti
sbb
cmp
sub
movsb
andl
pop
sbb
out
xor
inc
ds
mov
pop
lret
daa
lcall
adc
in
pop
xchg
add
rcll
mov
mov
lods
xor
scas
decl
sti
aad
jmp
loope
mov
and
aad
hlt
sub
std
add
mov
cmc
fsubrs
scas
aas
icebp
sbb
out
fimuls
loope
add
stc
nop
mov
icebp
pop
test
sub
jmp
or
dec
lcall
pop
fcomp
push
ror
stc
enter
pop
adc
int3
mov
addl
and
les
hlt
das
aad
das
fcomps
mov
hlt
and
cs
inc
lret
fs
pop
mov
bound
roll
xor
scas
pop
ret
jbe
enter
xor
dec
inc
lds
cmc
cs
sbb
and
inc
xlat
inc
aad
xor
bound
add
aad
xchg
lods
inc
push
pop
cmp
pop
dec
sahf
addl
fmull
jae
scas
das
sbb
sahf
iret
sbb
in
and
and
mov
int
cltd
orl
push
and
fdivl
inc
ds
jb
outsl
arpl
cmp
xor
orl
dec
loopne
add
aam
xor
dec
nop
pop
push
adc
mov
jae
push
fwait
push
xchg
adc
les
sub
lret
mov
cld
push
or
bt
mov
cmc
sub
ret
pop
into
mov
jle
out
sbb
pop
sarl
faddl
or
dec
adc
cli
lods
dec
mov
lods
sub
out
pop
arpl
xchg
push
or
dec
repnz
test
mov
rcrb
repnz
push
mov
add
aam
testl
xchg
push
rcl
sbb
pop
repnz
cmpsl
in
filds
mov
mov
fwait
lahf
push
mov
push
mov
push
je
fs
jle
add
xchg
fdivl
push
nop
mov
lahf
dec
es
jns
je
js
lcallw
jp
bound
gs
push
adc
stos
dec
cmp
pop
and
sbbl
cmp
insb
ja
or
push
push
add
xor
and
sbb
lea
pop
scas
jno
mov
fwait
xor
movsb
mov
pop
hlt
xchg
mov
push
lret
inc
ss
mov
inc
sahf
movb
mov
leave
js
in
push
sahf
xchg
sti
das
adc
lods
test
int3
arpl
mov
or
loope
mov
out
hlt
ds
inc
ret
push
pop
roll
dec
adc
dec
add
fisubrl
lcall
daa
jl
push
cmp
add
mov
push
or
push
into
inc
sbb
mulb
loop
loopne
dec
xor
insb
mov
stos
in
or
mov
mov
dec
mov
cmpsb
adc
inc
adc
inc
andl
sbb
mov
decl
fmuls
xchg
mov
push
aaa
je
ljmp
sbb
push
lahf
sbb
or
xor
sbb
imul
inc
rcrl
jne
dec
ss
adcl
out
mov
sbb
in
mov
mov
push
cli
and
in
fcoml
dec
pop
sarl
jle
adc
test
mov
jne
lods
pusha
fwait
es
cmpsb
and
jl
push
es
filds
or
inc
cmc
push
pop
leave
loop
fnstenv
out
test
sub
xchg
inc
pop
jae
mov
push
mov
test
dec
mov
add
xchg
cmp
sub
stc
cs
cmpsb
mov
push
pop
loope
cmp
pushf
mov
jp
cwtl
stos
andl
int3
rcll
mov
mov
add
sub
adc
ss
cld
call
ss
call
add
push
loopne
fdivs
stos
mov
push
or
lcall
add
xchg
mov
or
out
imul
mov
xchg
add
test
sarb
sbb
nop
or
mov
stos
push
adc
cwtl
and
jg
mov
addl
ja
scas
xor
icebp
incb
sbb
mov
or
jg
mov
add
jb
pusha
push
dec
push
jmp
jno
dec
aaa
scas
sub
pcmpeqb
inc
outsl
pushf
out
test
and
mov
cltd
push
mov
xchg
cs
push
lret
in
pop
fs
pop
fiaddl
in
jno
test
das
std
xchg
daa
ficoml
push
in
pop
pop
cmp
sarl
and
jns
sub
jg
sbb
pop
cmp
mov
dec
and
pop
andl
fldt
adc
mov
js
mov
fdivs
mov
adc
rorb
sub
jnp
jge
loope
testl
mov
out
daa
fdiv
daa
in
fmul
pop
rcl
or
movsl
nop
push
sbb
xchg
mov
insl
fldt
hlt
cs
xor
imul
pop
call
lods
add
adc
mov
les
fcmovb
fnsave
popa
fwait
rcll
and
mov
jge
outsl
shll
sub
jg
test
push
std
and
test
mov
outsl
mov
test
dec
test
xchg
sub
ljmp
lods
mov
jecxz
lret
fists
mov
in
test
dec
divb
rcrl
enter
and
popa
dec
mov
les
fstpt
cli
scas
lret
mov
jne
out
out
or
push
testb
dec
in
mov
dec
stc
gs
fidivl
xchg
es
push
leave
pusha
push
xchg
xchg
cs
push
push
push
pop
or
mov
push
and
xor
jbe
xchg
jp
clc
push
sbb
int
dec
inc
ret
inc
mov
jnp
push
into
xlat
fwait
sbb
xor
cmp
xor
fidivrs
into
gs
inc
fnstenv
xchg
in
add
pusha
testl
aaa
sub
sub
mov
sti
or
sbbb
icebp
testb
inc
adc
jne
mov
leave
enter
pop
jmp
cli
xchg
scas
cmp
insl
iret
sbb
shll
int
loop
inc
adc
push
jmp
xor
jb
clc
mov
jge
sbb
fwait
or
scas
inc
lahf
sub
int
bnd
xlat
mov
in
addl
cmc
add
mov
push
mov
lcall
leave
mov
cld
mov
outsb
dec
scas
sbbl
outsl
cmc
mov
ret
repz
rclb
xor
inc
test
jne
push
out
sti
cld
xchg
sub
dec
sbb
mov
stos
inc
xchg
repnz
in
and
je
jbe
call
sub
pop
push
popf
mov
mov
sbb
and
fnstsw
inc
fldcw
xchg
in
add
pusha
testl
sub
sub
mov
sti
or
fsubrs
sub
testb
inc
adc
je
mov
leave
daa
fdivl
call
cli
xchg
lods
cmp
insb
into
sbb
mov
loopne
inc
adc
in
movsb
xor
pop
lds
testl
add
or
sahf
sub
mov
icebp
jge
xlat
scas
adc
test
cmc
add
mov
push
mov
lcall
mov
std
lea
xlat
outsb
dec
scas
test
loopne
cmc
mov
rclb
icebp
push
rcrl
xor
les
outsl
push
pop
out
out
jge
ss
cmp
stos
or
aad
or
pop
cmp
lret
in
sbbl
mov
jg
jg
enter
popf
je
stc
add
adcb
call
loopne
popf
in
inc
push
mov
call
nop
mov
push
popf
mov
fisubs
push
and
into
push
je
cmpsb
jb
jecxz
lods
inc
stc
shll
pop
cs
fstps
fidivl
sbbb
mov
outsl
mov
fcomip
lea
and
adc
add
sub
xchg
daa
cmpsb
fxch
add
inc
mov
lods
inc
push
ror
and
in
mov
push
xor
andb
das
repz
mov
mov
cmp
fcoms
mov
mov
xor
fsubs
cmp
mov
mov
es
push
scas
test
dec
bound
daa
mov
repz
int
or
andl
les
add
mov
xor
jo
push
test
sarb
mov
ljmp
lods
cmpl
fbstp
inc
mov
lea
clc
inc
shl
mov
inc
test
sbb
lcall
pop
or
aad
lds
xchg
pop
imul
int
sbbl
fcmovnb
sbb
pop
pusha
adc
dec
test
lods
aaa
and
into
push
fwait
ror
mov
sbb
xchg
push
adc
jg
mov
leave
sub
jecxz
lahf
push
aas
arpl
movsb
in
sub
popf
inc
mov
push
add
jmp
fcmovbe
push
mov
cmp
fs
mov
xor
jae
and
mov
js
dec
or
adc
mov
lods
cmc
mov
mov
jle
xchg
push
popf
dec
outsl
imul
repz
popa
cmc
ljmp
sbb
cmp
mov
jns
fmulp
adc
imul
mov
inc
xchg
std
cs
icebp
cld
jno
mov
es
ds
sahf
cmp
addb
push
insl
or
xchg
aas
test
aaa
cmp
mov
les
xchg
shrb
pusha
rcrb
mov
jb
int
fstl
and
push
insl
push
arpl
ss
call
sub
cmp
in
cld
shl
mov
dec
lahf
sbb
gs
imul
sar
mov
adc
sub
and
pop
test
daa
pop
jecxz
mov
fiaddl
pop
xchg
cmpsl
jne
rcrl
imul
push
rcl
jl
lcall
mov
sub
mov
ds
shlb
or
das
std
mov
pop
cwtl
out
push
mov
sub
lcall
out
xchg
cltd
adc
xchg
dec
dec
stc
mov
or
insl
cmp
adc
mov
xchg
mov
pop
repz
cltd
xor
shrl
jecxz
pop
aad
jne
aam
push
lods
push
and
jp
mov
sbb
sub
rcrl
xchg
sub
dec
push
jmp
cmp
rcl
insb
ret
imul
pop
outsb
add
out
inc
fsub
mov
sti
mov
call
or
sub
sub
xlat
push
in
enter
icebp
jns
xchg
imul
sub
aas
adc
mov
cmp
mov
fistpl
or
push
out
sub
pop
cld
sti
rolb
xor
outsl
shrb
popa
pop
mov
pusha
hlt
nopl
jne
mov
fdivr
outsb
or
aad
jmp
popaw
aad
xor
mov
or
xlat
orb
imul
cld
pop
test
outsl
call
mov
movsl
mov
or
cld
adc
into
in
jl
mov
jmp
imul
push
lret
pop
in
push
xchg
pop
iret
loope
std
pop
mov
push
in
fsubr
push
hlt
daa
scas
shll
or
pop
in
push
or
jge
xchg
repz
fldlg2
push
jmp
cmp
push
pop
in
orl
dec
out
mov
mov
add
push
out
dec
xchg
or
cmp
ljmp
arpl
ficompl
dec
orb
cmpsb
fbstp
cltd
push
mov
cmp
xchg
lret
std
mov
add
mov
push
addl
sbb
xor
lds
dec
adc
shrb
mov
jecxz
mov
movsl
int3
xchg
shlb
sbb
push
stc
cmp
jmp
cld
cmp
daa
add
add
jmp
sbb
push
cli
fidivrl
xchg
jbe
fistl
dec
jg
mov
test
mov
push
les
inc
adc
cli
pusha
cmp
ss
fldt
mov
dec
cmpsl
insb
repnz
adc
push
negl
mov
push
dec
lret
jl
popf
shll
add
xor
int
and
pusha
jmp
sbbb
inc
jmpw
enter
inc
pop
jb
jg
mov
mov
js
pop
test
imul
orb
scas
fdivrl
pop
bound
mov
ret
lret
xor
push
dec
ss
push
divl
addr16
push
lcall
adc
orl
das
iret
dec
pop
enter
in
adc
nop
xchg
lds
cs
out
dec
mov
mov
lods
xor
ljmp
out
or
dec
icebp
sub
data16
out
outsl
xorl
movsb
push
adc
jle
mov
ljmp
jnp
jnp
inc
add
push
jp
sub
cmp
pop
mov
int
cltd
cmp
sarb
gs
das
scas
dec
jle
sbb
sahf
les
lcall
std
pop
in
mov
inc
mov
push
mov
mov
cltd
jge
pop
fwait
mov
outsb
mov
test
fdivrs
xchg
pop
xchg
mov
repnz
ret
mov
xor
sbb
mov
cmpsl
xor
jnp
cwtl
pusha
sar
pop
call
repz
test
mov
lods
inc
and
pushf
xchg
cmp
sti
rcrl
mov
dec
jge
subl
push
mov
jo
mov
cmp
movsl
out
dec
or
push
add
adc
or
lock
fbstp
mov
rolb
mov
ror
int3
xchg
jne
addb
cmpsb
mov
rolb
pusha
jge
push
sbb
lret
push
ljmp
pop
in
push
sbb
fdivrs
aas
rolb
pop
jb
ret
xchg
imull
mov
push
adc
mov
jo
push
pushl
xchg
inc
sub
cli
pop
cli
xor
mov
jns
pop
stos
fidivrl
sbbl
cli
add
fidivs
pop
jge
lods
loop
arpl
mov
fisubl
pop
out
ds
sbb
sbb
subb
pop
mov
mov
jbe
not
fwait
xor
sbb
cmpsl
pusha
fnstsw
mov
xchg
jge
dec
add
jns
mov
test
cmp
shll
cmp
xchg
data16
fistpl
roll
enter
pushf
adc
jae
lods
xchg
push
clc
jle
xchg
mov
rcrl
enter
outsl
push
lret
mov
repz
scas
xchg
aad
jle
pop
adc
lret
jg
xchg
ja
push
insl
lret
ja
dec
dec
sbb
lds
xchg
clc
pop
xchg
ja
push
in
leave
and
lret
fdivrs
cwtl
lds
push
sbb
popa
pop
jnp
cwtl
jle
frstor
and
sbb
xchg
inc
ds
dec
push
roll
fdivr
push
xchg
addr16
fmul
sbb
pop
lcall
jp
pop
or
movsb
xor
add
dec
pop
ret
adc
rolb
sub
std
mov
mov
xchg
lret
adcl
xchg
aas
or
inc
add
mov
js
pop
add
out
jg
pop
gs
cmp
inc
jmp
jne
popf
mov
frstor
adc
arpl
cld
pop
in
cwtl
cmp
dec
add
mov
fstpl
xchg
inc
push
js
pop
data16
cltd
cmp
dec
add
mov
ficomps
push
shlb
aad
jns
pop
out
cwtl
ds
push
rolb
hlt
sub
jnp
lods
out
sub
int
sub
mov
mov
out
insl
std
int3
xchg
stos
jle
rcrb
cmpsb
sub
sub
pop
add
fmull
push
clc
jnp
or
jmp
push
or
mov
jnp
rcll
sbb
test
cmp
ret
jae
cltd
or
mov
mov
es
inc
insl
icebp
rcrb
outsl
ljmp
mov
cltd
cmp
lret
sbb
rep
mov
dec
or
adc
dec
xor
jl
xor
fdivl
inc
push
cmp
fldl
xor
xor
dec
repnz
fstps
push
sub
inc
jnp
rcrl
lret
bound
adc
ret
iret
dec
sbb
push
xchg
jle
or
sbb
ret
and
cmc
sbb
lods
and
push
xor
xchg
hlt
sub
imul
rolb
bound
sahf
cmp
adc
cltd
insb
iret
mov
mov
inc
ud1
pop
ret
xchg
inc
and
sbb
popa
fs
sub
cs
sarl
jns
out
adc
adc
out
addr16
mov
jl
setbe
lcall
dec
cltd
cmp
mov
jb
dec
cmp
fwait
and
mov
push
jl
loop
in
insl
ljmp
cmpsb
xor
jle
jns
xlat
jg
addr16
lahf
inc
and
add
add
sbb
stos
mov
and
popa
push
dec
adc
mov
or
cmp
sub
mov
repnz
outsb
and
out
scas
xor
hlt
sti
fs
or
cld
inc
fbstp
jge
jmp
xchg
xchg
aaa
aam
push
into
stos
push
repnz
push
mov
mov
popf
imul
aad
hlt
pop
js
arpl
pop
outsl
jge
add
xchg
inc
pop
mov
stos
jo
dec
or
rorl
out
stos
sub
lea
jns
xlat
jo
add
mov
rcll
bound
mov
movsl
dec
push
dec
sub
pop
inc
xchg
jo
adc
and
shr
inc
xlat
and
jge
xor
xchg
inc
into
xchg
ds
negb
mov
xor
addr16
mov
je
out
inc
mov
ss
div
pop
js
leave
xchg
cld
jo
cmc
mov
scas
xchg
inc
pop
loope
hlt
addb
repz
in
ds
push
jb
shll
pop
sti
push
inc
aad
mov
jmp
push
mov
movsb
mov
sbb
rorl
clc
icebp
iret
scas
inc
add
jle
and
int
adc
inc
mov
add
push
gs
push
xchg
insl
int3
xor
sub
outsl
cmc
or
loope
ds
xchg
cmp
lds
daa
loope
fistpl
sbb
inc
add
aad
xchg
mov
test
fistpll
dec
loop
testl
pop
std
lret
repnz
adc
rcr
add
fs
cmp
sbb
dec
imul
dec
fsts
xchg
push
add
dec
push
out
outsl
test
repz
mov
jno
sbb
vmwrite
inc
pop
pushf
cmp
sub
addl
push
sub
outsb
mov
cmc
mov
mov
mov
push
push
mov
test
mov
shlb
xlat
outsb
imulb
mov
push
mov
mov
mov
inc
cmp
add
mov
or
add
adc
pop
pop
icebp
fs
test
loope
aas
cltd
in
std
jecxz
nop
repz
mov
cmpsb
testb
stc
fs
xchg
fs
pop
into
cld
popa
aaa
sahf
mov
cltd
inc
aaa
mov
xor
or
jae
pop
adc
jnp
push
into
imulb
mov
call
sbb
loope
add
loopne
loope
pop
lds
adcb
mul
out
shll
cmc
sbb
add
fldl
dec
pop
xchg
mull
sub
push
pushf
adc
jne
cmp
test
stos
xlat
jge
and
rcrb
jp
add
insl
lods
or
sarl
test
push
std
adc
dec
call
repz
in
sub
into
xchg
les
fadds
cli
cmp
jge
ljmp
fisubrs
pop
les
push
in
sub
jbe
sbb
data16
sub
js
xchg
mov
imul
popa
push
fs
out
jae
insb
cmp
cli
pop
jbe
jl
les
fistpl
les
lcall
loopne
movsl
roll
xor
in
imul
jecxz
adc
mov
jo
rcr
or
cmp
inc
or
ja
scas
js
popa
loopne
rorb
leave
test
sbb
sbb
dec
jbe
jns
outsl
lock
dec
adc
jecxz
pop
add
cmc
push
rcr
js
push
in
repz
adc
mov
push
add
xchg
xchg
inc
jnp
push
push
inc
fs
mov
mov
fwait
cmp
mov
stos
xor
ljmp
ret
les
xchg
je
fs
into
stos
daa
aad
ret
movntps
and
fwait
ds
cmp
xor
adc
das
test
shrl
dec
or
in
pop
stos
sub
xlat
ljmp
or
and
xchg
inc
add
mov
jns
jp
mov
in
pop
pop
pop
nop
roll
xor
mov
and
pusha
call
cmpl
mov
jp
pop
add
ds
and
xor
jmp
aaa
insl
loop
aam
popa
notb
lret
insl
pop
ljmp
xchg
repz
lds
dec
adc
addl
lret
xchg
ss
or
or
adc
mov
pop
bound
sub
loope
jle,pt
xlat
pushf
icebp
pop
xchg
add
xor
or
sarl
push
jae
in
pop
std
push
jne
adcb
and
aam
aas
push
testb
out
push
mull
clc
filds
jmp
sarb
cli
cmp
jp
jb
ret
outsl
outsb
pop
jg
jg
push
inc
imul
lret
xchg
int
mov
scas
cmp
push
xor
fstpl
inc
adc
push
ljmp
mov
and
add
mov
sub
xor
jnp
mov
add
sub
int3
mov
in
push
adc
sbb
in
rorl
cwtl
faddl
mov
mov
sarb
loope
addr16
jl
dec
je
mov
fwait
mov
std
rolb
pop
dec
or
mov
xchg
push
stos
mulb
lea
lret
pop
mov
xor
pusha
adcb
fdivrs
cmp
dec
or
xor
fisubrs
and
insb
in
scas
cmp
lret
pop
cli
xchg
xor
mov
push
inc
daa
mov
mov
mov
inc
adc
in
sub
sbb
adc
mov
pop
cmp
arpl
add
outsb
jmp
das
out
cli
xchg
and
push
scas
xchg
test
sarl
pusha
out
outsl
cmpsb
cs
lahf
xchg
cmp
repnz
cld
bound
ret
and
loop
out
outsl
xor
cs
cli
push
je
call
push
jns
scas
jmp
les
mov
ja
mov
movsl
dec
or
mov
xor
cmp
jbe
pusha
fidivrs
bound
adc
std
imul
daa
das
jnp
mov
pop
stc
aad
roll
es
jno
fildl
mov
mov
push
arpl
sbb
adc
jl
jmp
mov
cmp
fiaddl
push
push
add
movsb
cmp
cmp
sbb
lock
push
sbb
fwait
int3
cmp
lret
divl
movsl
lret
jo
rol
mov
sub
adc
xor
jecxz
fwait
inc
inc
hlt
push
cld
mov
mov
jl
daa
outsb
notb
mov
les
enter
lea
cmc
pop
and
dec
or
cld
popa
aad
fwait
cmp
pop
xor
pop
jge
mov
dec
test
lds
aad
push
jns
data16
adc
cs
xchg
mov
movsb
ds
push
lahf
sbb
add
pop
test
jbe
out
cmpsl
xor
cmpsl
aam
xchg
mov
pop
jne
dec
out
testl
ljmp
jle
out
add
pop
add
lds
ret
sbb
push
pop
mov
loope
stos
das
int3
hlt
loopne
xlat
and
daa
xor
dec
dec
and
movsl
sub
popa
in
dec
xchg
pop
lret
scas
xor
push
ret
or
cs
sbb
popf
push
cwtl
inc
jle
inc
or
push
cli
sub
fnstsw
enter
cmpl
sub
lret
insb
ljmp
out
movsl
lahf
cmp
in
outsl
add
fsubrl
mov
push
clc
mov
adc
push
cmpsb
fs
jo
call
pushf
xchg
lods
in
in
mov
mov
dec
xor
or
sub
mov
mov
enter
push
stc
cmp
lcall
or
popf
rolb
fisttpl
sub
cmp
stc
jge
stos
pop
in
movl
or
out
and
movsb
mov
fdivrl
stos
xchg
inc
inc
fcoms
push
cltd
pop
aam
mov
jo
sbb
sbb
test
mulb
xchg
inc
sbb
pop
idivl
scas
sub
and
negb
les
rol
add
call
cmc
xor
iret
les
adc
loope
mov
mov
outsl
jmp
or
fildll
mov
dec
stc
mov
mov
in
sbb
and
ret
push
fdivrl
jne
lods
inc
test
outsl
mov
cltd
jle
roll
jmp
cmc
aas
cltd
push
mov
je
mov
push
mov
movsl
adcl
sbb
and
push
lret
cltd
test
clc
pop
push
fdivl
cmpsb
lds
jno
lods
push
mov
pop
mov
sti
xchg
xchg
fwait
or
shlb
bound
stc
push
add
xor
pop
rorb
mov
addr16
xor
imul
icebp
shrl
jle
out
test
cmp
aad
pop
lcall
pop
inc
test
outsb
in
sti
fxch
xchg
test
dec
cwtl
stos
das
lods
add
rcll
mov
popf
xor
out
add
xchg
mov
push
mov
cmpsl
mov
js
js
lret
push
add
mov
popf
ja
pop
xor
mov
scas
bound
ljmp
adc
pop
xchg
sahf
inc
xlat
in
jns
or
push
mov
ret
mov
add
iret
adc
test
adc
mov
xchg
ds
pop
out
mov
mov
stos
mov
movsl
push
inc
shld
push
add
ftst
jne
loope
lret
jg
mov
fdivrl
stos
pop
inc
cwtl
push
add
mov
loopne
ret
add
je
cmc
pop
push
int3
cmp
cmp
lcall
imul
push
call
push
mov
stc
jb
or
or
int
dec
or
out
cltd
cmp
sub
out
push
pop
xchg
cmp
dec
mov
pop
sub
mov
pusha
fwait
ja
or
jle
pop
out
jae
sbb
mov
int3
jae
xchg
sarb
jl
or
int
sbb
aam
sub
je
aas
pop
push
adc
aaa
and
fnstsw
dec
adc
insl
dec
adc
mov
in
mov
jp
stc
xor
inc
fcoml
rolb
pop
rcrl
fbld
xchg
inc
mov
lods
pop
mov
jmp
addl
dec
and
jecxz
inc
add
enter
mov
in
comiss
cwtl
add
movq
mov
jnp
xor
dec
in
repz
cmp
rcll
lds
idivb
fs
jne
push
test
push
dec
mov
pop
cld
xchg
adc
arpl
push
add
xchg
inc
test
mov
loop
cmc
pop
shr
je
pop
sbbb
fdivr
xchg
push
jb
push
mov
mov
pop
btr
cmp
push
ja
sarl
fildl
movsl
sub
les
in
fcomi
pop
sar
mov
jp
shlb
je
lods
ljmp
jns
push
int3
je
dec
or
jecxz
cs
cwtl
insb
sbb
test
je
scas
xchg
outsb
add
add
faddl
xchg
push
jl
mov
xchg
adc
shll
cmc
jo
in
pushf
inc
push
repz
lret
xchg
lcall
xchg
inc
mov
dec
in
fstpt
cmc
scas
sub
mov
pop
push
cmpsb
testl
sbb
jp
xchg
dec
cmp
pop
push
cld
adc
or
pop
add
rclb
daa
stos
cmp
mov
cltd
vcvtdq2pd
adc
shll
jae
mov
mov
inc
adc
subl
add
into
ror
xchg
inc
push
or
lds
out
insl
gs
lret
xchg
inc
sub
push
add
sub
inc
adc
inc
aad
loope
js
jb
clc
pop
sub
cmc
cmpsb
xor
xchg
mov
inc
adc
xchg
imul
mov
mov
add
mov
rorl
scas
aam
dec
ret
repz
adc
das
scas
xor
xor
mov
pushf
inc
call
sti
and
hlt
mov
dec
adc
xchg
pop
lock
out
cltd
pop
fiadds
adc
sub
addl
sti
stos
out
jne
push
mov
push
cmp
sub
mov
test
scas
inc
push
pop
push
mov
push
push
std
jle
call
mov
adc
roll
test
mov
mov
jno
fwait
mov
sub
jmp
xchg
sbb
js
xchg
inc
imul
rcrb
mov
adc
jo
and
stos
sub
push
add
xor
jne
or
nop
sbb
cld
xchg
cld
jns
scas
stos
sbb
gs
sbb
es
mov
fiadds
aam
mov
adc
mov
test
imul
inc
jg
sbb
cwtl
dec
mov
xchg
cmp
ss
inc
inc
adc
imul
mov
mov
mov
das
test
jns
dec
mov
enter
shrl
push
icebp
mov
mov
and
bound
out
loopne
data16
repz
xchg
sbb
jne
xor
test
mov
sub
xchg
pop
add
mov
jecxz
push
adc
lret
jecxz
jno
and
push
cltd
adc
xor
pop
add
sub
popa
in
mov
js
jle
shlb
push
adc
adc
dec
or
repnz
outsb
in
inc
jmp
bound
lahf
lcall
jge
push
sbb
sbb
ss
mov
jbe
or
arpl
addr16
popa
rcll
rcll
lea
int3
jae
mov
mov
xchg
scas
ret
lret
dec
cmp
pop
jo
sbb
in
add
and
adc
or
inc
mov
xchg
cmpsb
mov
jmp
sti
lret
mov
orl
xchg
and
hlt
pop
sbb
lods
cwtl
daa
stos
dec
int
xor
mov
and
cmc
mov
push
cmpsb
aaa
dec
adc
lods
aaa
ljmpw
in
push
test
rclb
hlt
arpl
inc
dec
push
mov
cltd
cmp
rolb
add
fs
lds
testl
push
int
popa
test
jge
xchg
cmp
in
ret
dec
cmc
and
loope
inc
jnp
out
mov
fmuls
shr
insb
add
pop
cld
pop
inc
inc
xchg
popf
mov
push
call
mulb
fdivrl
pop
xlat
jle
roll
or
cmpsb
cmp
xchg
cmp
xor
nop
in
or
test
jg
jle
sbb
xchg
jo
ljmp
outsl
hlt
test
mov
pop
add
xor
and
sub
das
pop
inc
les
mov
mov
mov
and
fdivrs
push
and
adc
inc
adc
dec
pusha
repz
mov
push
cmp
and
inc
cmpsb
pop
mov
movsb
mov
jno
mov
lock
movsb
dec
or
lret
movsl
adc
jnp
lret
or
loop
push
out
jne,pn
xchg
cmpsb
cmc
fcomp
test
out
pop
mov
or
adc
cmp
and
dec
adc
cmp
imul
mov
imul
scas
xor
add
repnz
std
out
jg
jmp
ljmp
les
out
push
movsl
xor
or
mov
into
mov
add
mov
lea
mov
sub
insb
inc
pop
test
pop
mov
int
cmp
daa
mov
je
inc
in
mov
ret
cld
es
inc
lods
inc
loope
inc
pop
adc
inc
cmp
xchg
insl
mov
aad
jnp
js
divb
xchg
push
jp
jae
xchg
sarb
daa
pop
push
aad
stc
arpl
add
test
push
jns
sub
mull
xor
lods
js
sub
mov
mov
sub
xchg
inc
cmpsb
xor
sub
mov
xor
add
imul
xchg
and
mov
or
dec
adc
out
sarb
mov
mov
cmp
int
out
mov
cmpsl
ds
add
test
lret
xchg
dec
jb
je
lahf
repz
in
outsb
mov
lea
dec
arpl
adc
dec
push
popl
fs
inc
push
cld
and
cltd
inc
scas
cmp
xchg
cs
jecxz
pop
mov
push
mov
mov
aam
xor
flds
push
lea
jmp
in
pop
jns
fs
mov
cli
jb
cwtl
inc
pushf
dec
adc
mov
in
add
mov
and
xchg
das
mov
add
jmp
fs
push
bound
sbb
repnz
in
insb
xorb
mov
mov
and
into
scas
sub
inc
adc
adcb
add
cmp
lahf
imul
and
add
aam
clc
pop
adc
pushf
mov
dec
rorb
shlb
movsb
jmp
daa
fimuls
ror
xor
nop
jg
xor
dec
xchg
and
sbb
mov
xchg
fwait
subl
fstpt
dec
adc
xor
test
popa
data16
xchg
mov
mov
and
sub
and
test
popf
mov
inc
into
fbstp
sub
jno
jb
pop
add
mov
movsb
das
test
repnz
cmp
cmc
mov
lret
bound
xor
out
sub
mov
cmp
stos
push
push
mov
jo
mov
test
iret
xchg
add
inc
pop
ss
xchg
aaa
jns
ja
je
int3
mov
insl
repz
pusha
stc
hlt
push
jnp
rcl
mov
xlat
das
fiadds
xor
rolb
and
push
jg
push
mov
cli
popa
sub
pushf
inc
xor
enter
mov
sbb
dec
imul
dec
jo
mov
pop
add
mov
leave
xchg
call
pushl
lahf
cmpsl
or
dec
rclb
sbb
sub
scas
es
mov
cmpsl
int
jo
mov
loop
pop
inc
xor
ret
inc
push
sub
inc
adc
xor
stos
jne
xlat
addl
cmpsl
cmc
popa
cld
push
xchg
cs
in
out
sbb
dec
xchg
cmp
xchg
icebp
lds
rcl
and
xchg
ja
or
adc
out
outsb
push
dec
bswap
movb
fs
ljmp
aaa
jo
gs
cmp
jns
or
jmp
js
xor
mov
pop
call
cli
popf
inc
int
jmp
decb
inc
or
cmp
jmp
sti
filds
leave
ret
scas
xor
sbb
test
add
movsb
sub
jmp
xchg
ret
pop
icebp
push
jmp
dec
push
and
or
xchg
inc
add
hlt
xchg
jno
cwtl
in
lret
test
pop
mov
dec
push
fyl2x
out
jae
or
scas
loopne
sbb
imul
push
popa
orb
jb
pop
leave
lret
or
and
addr16
call
mov
mov
cmp
cmc
je
imul
push
testb
push
rorl
xlat
std
push
enter
sbb
orl
int3
xchg
jbe
into
xchg
sahf
data16
repz
test
out
push
sbb
sbb
and
aas
cmp
sub
movsb
cmpsl
xor
jae
mov
push
mov
test
jmp
pop
push
ret
out
dec
pop
std
mov
andb
sbbb
mov
xchg
inc
sub
sub
daa
mov
cmc
cmp
and
stos
mov
pop
sub
mov
jno
sbb
cwtl
ljmp
sbb
ds
push
add
jae
inc
push
js
fs
ja
cmpsb
das
pop
push
repnz
test
xor
sub
js
mov
pop
mov
sub
and
mov
sarl
stos
jb
cmpsb
cltd
or
cltd
mov
mov
leave
dec
adc
add
mov
int3
xchg
lcall
push
inc
fdivrl
mov
sahf
in
pop
push
test
int
add
push
xor
adc
pop
cwtl
xchg
cmp
arpl
mov
and
add
push
lret
cmp
pushl
xchg
out
xchg
clc
gs
stc
dec
adc
push
outsl
popa
popa
in
mov
test
test
add
jp
push
dec
cmp
push
sbb
aaa
sbb
cmp
int3
inc
orl
int
inc
add
xchg
or
les
js
jno
insl
in
lret
lcall
sahf
cmp
xchg
xor
rcrb
push
push
inc
test
ja
cmpsb
ss
outsl
mov
jle
mov
pop
push
mov
inc
and
fs
mov
cld
pop
mov
dec
adcl
into
mov
mov
mov
sahf
lahf
aam
inc
ret
rolb
jae
lods
lock
sub
out
add
adc
pop
stc
lods
dec
jp
outsl
mov
mov
mov
les
sar
and
sbb
ds
ds
inc
mov
enter
inc
adc
sbb
push
in
les
cli
out
pop
data16
mov
rcl
mov
xchg
scas
icebp
fs
cmc
inc
adc
roll
dec
inc
dec
fistpll
add
dec
in
inc
or
pushf
orb
mov
and
jno
repnz
dec
or
jmp
push
not
pushf
xor
mov
push
jmp
std
icebp
pop
mov
icebp
popa
stos
lods
pop
std
enter
repnz
jge
dec
in
inc
fstpl
or
xor
and
mov
test
fsubrl
into
gs
std
filds
push
loopne
xor
rorl
rolb
jae
xchg
popf
inc
ja
inc
or
mov
stos
loope
mov
lcall
jle
or
pusha
xor
mov
mov
aad
push
flds
notl
sarl
out
xchg
inc
or
cltd
cmp
test
lret
or
fisttps
xchg
inc
hlt
filds
int
add
out
sbb
jno
sti
adc
sbb
sbb
jecxz
or
hlt
clc
dec
adc
loope
pop
adc
push
pop
hlt
jecxz
es
into
movsb
aaa
pop
add
mov
rorl
sbb
lea
pop
ja
ds
mov
push
mov
mov
adc
ljmp
insl
push
jecxz
lea
sub
cmpsb
xor
test
ja
rclb
cmp
xlat
mov
pushf
xor
push
mov
add
push
stc
data16
fwait
inc
cmp
mull
or
cmp
sub
push
pop
push
add
fcompl
jg
cmp
push
popa
lds
data16
xchg
cmp
test
jecxz
imul
or
jg
mov
andl
aas
pop
sti
test
xor
adc
xchg
fwait
and
fdivl
cmp
dec
or
mov
push
mov
add
adc
pusha
in
jle
mov
jb
stos
in
sub
xchg
cs
cltd
mov
lret
mov
aam
ss
mov
rcrl
jmp
addr16
stc
out
jae
mov
xchg
cmp
subl
inc
xchg
cs
xchg
mov
xchg
cmp
cmpb
out
push
mov
in
jmp
mull
stos
pusha
fnstsw
movsb
outsb
je
fs
jle
mov
push
adc
inc
jo
lds
ret
repz
imul
or
cmp
and
mov
sahf
xor
aas
add
jnp
push
mov
cltd
in
stc
nop
fiaddl
pop
scas
sub
aas
mov
int3
jle
pop
hlt
fistpl
jnp
bnd
and
cltd
xor
mov
lods
inc
lret
insb
sub
lret
bound
dec
repz
xorb
test
xchg
pop
sahf
ret
out
das
and
and
in
aaa
inc
fisubrl
imul
mov
mov
fdivrl
push
cmp
xor
mov
pop
rolb
jp
fnstenv
xor
testl
lods
fnstcw
lret
pop
repnz
and
push
jle
adc
rcll
and
and
dec
push
sbb
test
lret
cld
shr
repnz
pop
sahf
inc
outsl
lds
rorl
inc
adc
inc
or
cmp
and
mov
sahf
xor
add
jnp
push
mov
cltd
jecxz
stc
nop
flds
mov
sub
mov
jge
pop
hlt
ficompl
jnp
sub
dec
cltd
xor
mov
lods
inc
leave
cmc
aad
daa
jmp
bound
ds
test
xchg
pop
sahf
ret
pop
in
mov
jb
inc
fisubl
imul
mov
mov
fstpt
or
cs
xor
lds
mov
jp
aad
jo
xor
cwtl
gs
mov
pop
mov
jnp
lods
lods
fdivrs
lret
pop
repnz
and
push
jl
adc
iret
xchg
cs
mov
push
sbb
push
insb
lret
bound
mov
adc
inc
insl
lds
mov
inc
adc
inc
or
cmp
xchg
pop
sbbl
jmp
or
pop
cmp
mov
jnp
push
fdivl
mov
cltd
loope
cli
xchg
fadds
and
sub
xchg
int
cmpsl
pop
hlt
fcomps
jnp
sub
jb
and
xor
nop
daa
jne
mov
rclb
aad
and
inc
repz
ljmp
nop
or
sbb
aas
dec
in
xor
imul
xchg
mov
fiaddl
ds
sahf
xor
mov
fsubp
jp
aam
jno
xor
cwtl
arpl
clc
pop
test
mov
jp
lods
stos
cmp
lret
sub
pop
pop
push
ljmp
jno
mov
les
dec
push
pop
scas
inc
dec
jae
imul
repnz
mov
adc
inc
imul
pushf
bound
mov
out
mov
fsub
add
fs
aaa
bound
sbb
stos
mov
pop
cmp
mov
jl
push
fdivl
scas
add
add
mov
sub
test
int
cmpsb
pop
cmc
xlat
fwait
push
jmp
clc
jl
sub
jb
and
jle
nop
daa
jae
mov
inc
repnz
insl
and
int3
arpl
inc
hlt
mov
ljmp
mov
lahf
mov
loope
mov
outsl
xor
nop
insb
add
test
mov
mov
adc
aaa
test
imul
pop
mov
fucom
jnp
rcr
jno
xor
cltd
bound
and
test
lret
xor
cld
daa
pop
repz
sbb
jp
stos
outsl
jno
mov
ret
hlt
pop
mov
push
adc
aad
movsb
push
repz
mov
adc
aas
push
fwait
pusha
daa
mov
in
mov
fsub
push
insl
add
add
sti
xor
push
sbbb
mov
inc
out
mov
pop
cmp
mov
jge
dec
fdivl
scas
add
fbld
and
es
inc
fadds
pop
not
cltd
push
jmp
idivl
sub
jb
push
dec
fwait
xor
nop
daa
jno
mov
inc
icebp
xlat
outsb
and
int3
arpl
inc
cmc
mov
ljmp
mov
lahf
mov
fbld
mov
outsb
xor
insl
add
andl
loop
and
adcb
ss
xor
mov
fsub
jl
rcr
jno
xor
lcall
and
cmpsl
aam
add
es
hlt
push
sbb
dec
js
adc
lret
cltd
xor
rorb
push
adc
insl
mov
hlt
mov
mov
adc
cmp
pop
daa
mov
in
mov
fsub
or
fs
xor
and
mov
inc
in
mov
pusha
cmp
mov
jle
dec
fdivl
lods
add
xchg
sar
and
and
inc
ss
movsb
pop
not
cwtl
push
jmp
idivb
sub
jb
sbb
ds
daa
jo
mov
inc
ret
lock
outsb
and
int3
arpl
inc
cmc
mov
ljmp
mov
lahf
mov
fisubs
mov
insl
xor
mov
rolb
and
aad
pop
pop
xor
sahf
xor
mov
frstpm(287
jl
iret
fidivl
das
add
push
andl
lods
cmpsb
sarl
add
xor
stc
and
push
ljmp
jno
sahf
lret
cld
mov
mov
inc
inc
jo
insl
mov
ret
hlt
mov
mov
adc
cmp
xor
cltd
pop
daa
mov
jmp
inc
fsub
or
add
xor
and
mov
inc
in
mov
pusha
aaa
stc
mov
jle
dec
fdivl
lods
add
xchg
sar
and
and
inc
fadds
mov
push
jmp
cmc
jge
daa
ljmp
jnp
nop
daa
outsl
pushf
mov
inc
ret
outsb
and
int3
arpl
inc
cmc
mov
ljmp
mov
lahf
mov
frstor
mov
insb
das
inc
insl
add
andl
adc
adcb
xor
inc
data16
sahf
xor
mov
jl
into
fidivl
add
push
andb
mov
push
lods
movsl
sarb
add
xor
clc
and
hlt
push
sbb
dec
jbe
adc
leave
cltd
xor
mov
mov
inc
inc
outsl
insl
mov
ret
hlt
mov
sub
or
mov
cwtl
pop
daa
mov
ljmp
add
xor
and
mov
inc
jecxz
mov
pusha
ss
mov
jle
dec
fdivl
stos
add
xchg
sar
and
and
fadds
mov
push
jmp
hlt
jge
es
fwait
xor
nop
daa
outsb
fwait
mov
inc
shr
outsb
and
int3
arpl
ss
mov
lahf
mov
fsubl
mov
imul
fistpl
insl
add
andb
fisttps
pop
add
es
xor
mov
fxam
jl
int
jno
sub
lcall
and
movsb
sarb
add
xor
hlt
push
sbb
je
adc
cltd
xor
mov
mov
inc
inc
insl
insl
lahf
arpl
fs
shl
repnz
sub
adc
cmp
enter
mov
call
or
cmp
fs
xor
and
mov
inc
loop
mov
pusha
xor
push
out
mov
jae
stos
add
xchg
iret
cld
and
and
fadds
mov
push
jmp
repz
and
inc
fwait
xor
nop
daa
insl
lcall
shr
outsb
pop
loop
arpl
cmc
mov
ljmp
mov
lahf
mov
mov
push
inc
fistpl
insl
add
jg
stc
mov
mov
adc
adcb
xor
xor
mov
mov
jl
int3
fidivl
sub
lcall
and
mov
lds
hlt
push
pop
push
jmp
jae
adc
cltd
xor
mov
mov
inc
inc
insb
insl
sahf
int
xchg
mov
jmp
out
adc
cmp
xchg
pop
sub
out
inc
fstp
or
cmp
fs
das
pop
mov
mov
sbb
mov
leave
pusha
xor
mov
jle
dec
fdivl
test
cli
xchg
into
sti
and
and
fdivrs
ss
mov
push
jmp
bnd
and
jb
sbb
xor
nop
daa
insb
cltd
mov
inc
mov
loope
arpl
inc
cmc
mov
ljmp
xchg
lahf
mov
fisubl
mov
imul
add
jle
stc
scas
fisttpll
pop
add
test
xor
mov
mov
jl
lret
fidivl
sub
lcall
and
mov
ret
xor
cmc
push
adc
jl
movsb
addr16
cltd
lds
daa
in
sbb
inc
aas
imul
popf
pusha
int
xchg
mov
jmp
in
adc
inc
push
or
xchg
pop
sub
out
inc
fstp
pop
outsl
push
cmp
fs
sub
dec
sbbb
scas
stos
inc
loopne
mov
popa
xor
mov
jg
inc
fdivl
test
popf
fstps
and
sub
sbb
jle
ss
lahf
pusha
not
xchg
push
jmp
icebp
jle
and
jb
pop
inc
pushf
xor
nop
daa
push
mov
inc
mov
arpl
aas
testb
xchg
adc
ret
test
lahf
mov
xor
adc
aaa
push
out
sub
mov
mov
fmull
add
stos
inc
bound
sahf
xor
mov
mov
jge
leave
fidivl
sub
pop
sbb
nop
dec
jnp
mov
mov
shll
push
adc
jno
adc
gs
xchg
les
daa
ljmp
inc
cmp
pop
int
nop
mov
jmp
jecxz
adc
mov
xchg
push
sub
in
inc
fstp
push
jo
cmp
fs
sub
and
jle
lods
inc
fistps
lret
bound
repnz
addb
pop
sahf
fcomps
and
scas
sbb
ds
sahf
popa
clc
iret
nop
push
jmp
lock
and
jb
adc
ss
daa
push
mov
jo
arpl
testl
ret
lahf
mov
xor
adc
es
sub
pop
mov
mov
fisttpl
pop
ljmp
stos
inc
pusha
and
pusha
mov
mov
jle
daa
add
xchg
dec
jns
mov
sahf
lret
inc
fdivr
mov
pusha
testl
jle
mov
ret
hlt
mov
sub
adc
mov
cmp
jo
pop
into
mov
in
and
push
lods
aas
add
mov
xchg
push
sub
test
inc
add
or
clc
gs
sub
mov
sbb
inc
fstpl
lret
bound
icebp
mov
addb
sahf
xchg
sti
xchg
leave
mull
mov
dec
inc
fidivrl
aaa
into
outsb
pushf
popa
clc
int
push
in
shr
push
and
jae
adc
popf
xor
xor
mov
inc
mov
fmul
fs
cmp
mov
jmp
popa
adc
mov
adc
daa
mov
gs
inc
fcompl
outsl
push
mov
sbb
sub
inc
pop
pop
mov
pusha
mov
mov
jle
fdivl
and
sti
xchg
dec
ja
mov
popf
leave
inc
fdivr
mov
pusha
testl
adc
xchg
rcrb
adc
dec
cmp
jo
pop
iret
lea
in
test
or
lods
cmp
pop
xor
push
sub
test
dec
add
xor
data16
sub
mov
sbb
lods
inc
fistpl
bound
lock
jmp
jne
mov
cld
xchg
enter
es
jns
cmp
insl
lcall
mov
loope
or
inc
popf
xor
xor
sub
mov
inc
mov
fcmovne
gs
cs
andl
lods
mov
fbstp
lret
sub
arpl
inc
fstl
outsl
push
mov
fs
test
lret
sbbb
sub
cmp
leave
pusha
scas
jno
push
mov
vpcmpeqb
and
xchg
dec
jne
mov
pushf
movl
out
sbb
dec
xorps
inc
imul
popa
jne
xchg
mov
xchg
sub
adc
dec
cmp
xchg
pop
shlb
mov
mov
lods
out
test
or
lods
cmp
or
lret
lea
ret
push
jmp
aad
jno
xor
addr16
daa
push
xchg
sbb
cmpsl
lods
inc
fstps
lret
bound
rcrl
jmp
jbe
mov
std
xchg
repz
mov
inc
inc
fidivl
cmp
insb
cwtl
popa
clc
leave
lea
mov
loopne
or
ds
xor
xor
push
ret
xchg
jo
fcmove
data16
testl
mov
fnsave
lret
sub
add
push
call
push
subb
ja
cld
test
lea
lret
cld
sub
cmp
leave
pusha
lods
jo
push
mov
fidivs
and
xchg
dec
jae
mov
fwait
lds
idivb
testl
jle
fwait
pusha
jbe
xchg
mov
xchg
sub
btc
push
mov
cmp
jo
pop
shrl
mov
mov
lods
out
xchg
or
lods
cmp
or
lret
mov
ret
push
jmp
aam
jo
xor
addr16
daa
push
mov
jp
lods
inc
fcomps
lret
out
rcrl
call
jbe
mov
std
xchg
repnz
and
sbb
jbe
cmp
insb
xchg
pusha
test
jmp
jne
adc
xchg
sub
mov
dec
mov
fcmove
data16
testb
mov
mov
fdivl
leave
or
das
push
out
and
outsb
add
test
mov
push
lret
cld
daa
stos
inc
pop
sbb
enter
rclb
out
inc
fidivs
and
xchg
dec
jb
mov
lcall
shr
push
pusha
testl
jle
lcall
xor
mov
sub
push
mov
dec
aaa
popa
fnstenv
pop
shrl
mov
mov
stos
out
xchg
pop
push
lods
cmp
or
lret
mov
ret
push
jmp
sar
jo
xor
addr16
es
mov
jns
lods
inc
xlat
lcall
sub
rcrl
call
jbe
lahf
push
popf
rclb
mov
sbb
jne
cmp
imul
out
mov
fbstp
adc
xor
xchg
sub
push
roll
outsl
adc
iret
or
testb
mov
mov
leave
or
sub
add
push
out
and
ficoms
outsb
add
cmpsl
rorl
sti
es
inc
pop
sbb
cmp
enter
rclb
out
inc
fidivs
pop
add
xchg
inc
jno
mov
cltd
ret
inc
fdiv
mov
pusha
testl
jle
cltd
pop
jbe
nop
mov
xchg
sub
or
mov
ss
fnstenv
push
shrl
mov
mov
stos
out
xchg
push
push
lods
aaa
std
or
lret
mov
ret
push
jmp
sar
jo
das
hlt
addr16
and
inc
test
movsb
lods
inc
cltd
mov
popa
sub
rcrl
call
jbe
sahf
push
popf
iret
xchg
std
xchg
mov
sbb
fnstenv
shrb
pusha
test
out
adc
adc
pushf
xor
xchg
sub
mov
dec
mov
fsubrs
fmul
data16
in
test
adc
mov
fidivl
leave
or
sub
add
inc
ficoms
add
cmpsb
rorb
cli
and
mov
pop
stos
outsb
rclb
out
std
rcr
repz
add
xchg
inc
jo
mov
cwtl
ret
repz
pusha
testl
jle
cwtl
pop
jbe
mov
xchg
sub
or
push
add
jo
push
shrl
mov
mov
test
push
lods
ss
or
lret
mov
ret
push
jmp
sar
jo
cs
and
mov
ja
lods
inc
aad
mov
popa
sub
rcrl
call
jbe
popf
push
popf
into
xchg
std
xchg
out
and
and
sbb
jae
cmp
imul
adc
xor
sub
mov
dec
mov
fsubrs
xlat
iret
or
lea
in
test
stos
mov
fnstenv
leave
or
sub
add
out
and
push
jle
add
movsl
rorl
stc
and
inc
push
sbb
pop
test
lret
cld
rcr
repnz
std
xchg
inc
outsl
and
xchg
roll
mov
pusha
testl
adc
mov
xchg
sub
or
dec
xor
fnstenv
push
shrl
mov
mov
test
xchg
add
lods
xor
push
xor
mov
ret
push
jmp
sar
jo
sub
dec
mov
jbe
lods
inc
aam
mov
popa
daa
jmp
pop
sbb
fbstp
pushf
push
xchg
cld
dec
lahf
sub
add
pop
movsl
sbb
mov
or
lea
into
mov
dec
test
xor
xchg
mov
jle
lcall
sbbb
sbb
mov
repnz
pop
test
mov
sbb
lret
stos
shrb
push
mov
and
dec
repz
ret
ljmp
outsl
sbb
pop
popa
daa
enter
mov
clc
or
lret
repz
xchg
mov
es
fwait
mov
dec
mov
sub
popa
sbb
mov
out
add
mov
sbb
dec
rep
mov
std
int3
xchg
lds
std
clc
xchg
add
stos
cs
insl
xchg
lcall
subb
pop
push
ljmp
xchg
cmp
in
cmpsb
pop
add
jns
mov
in
not
dec
pushf
mov
cmpsl
test
repnz
mov
add
imul
inc
sti
ret
mov
test
out
adc
adc
loopne
subl
ss
xorl
dec
cs
or
xor
mov
xchg
movsb
mov
nop
call
xchg
movsb
sbb
mov
push
xor
popa
enter
cmpsl
mov
cltd
mov
ret
mov
leave
fldt
push
nop
movsl
ror
shufps
dec
out
sub
cmp
push
movsb
jnp
dec
mov
rorl
sbb
xor
imul
out
sub
jl
jg
pop
popf
cmpsl
jecxz
cmp
jmp
aam
push
push
out
xor
ret
push
push
test
jb
add
ret
xor
scas
movsb
push
cmpsb
add
imul
arpl
xchg
jle
mov
push
or
fwait
bound
cmpsl
lahf
inc
cli
cmp
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
out
mov
cwtl
lds
cltd
out
inc
sbb
adc
stos
stos
gs
lea
out
jns
repnz
out
adc
push
or
in
cmpl
jl
inc
in
sbbb
outsb
xlat
xchg
in
or
or
daa
in
popa
push
arpl
sahf
imul
test
es
cld
dec
xor
jnp
mov
fisubrl
push
xchg
insb
sbb
mov
sub
and
jne
and
frstor
adc
cli
shl
cmpsb
and
fnstcw
fimull
lock
fimull
in
mov
jge
sbb
xchg
dec
mov
pop
and
mov
fmull
nop
sbb
arpl
fisttpll
push
loope
xchg
je
repz
in
cmp
test
mov
out
pop
fisubrs
or
rolb
sbb
cmp
ret
ds
insl
sarl
mov
cltd
stos
stos
shl
popf
mov
mov
in
jb
adc
mov
gs
mov
je
data16
xor
fimull
sub
inc
add
pop
xor
stos
inc
cmpb
jp
jg
and
nop
loop
addb
sti
adc
inc
adc
call
aas
sbb
mov
mov
cmp
arpl
mov
dec
in
mov
pusha
in
lret
sbb
fisubs
pop
pop
movsl
mov
fsubrl
or
push
scas
loopne
jbe
fcomps
push
mov
mov
mov
pop
pop
fists
in
dec
mov
in
fcmovnb
add
xchg
aad
jnp
xchg
cld
push
mov
lret
imul
fdivs
ljmp
out
bound
inc
mov
mov
mov
inc
stos
and
cwtl
loope
mov
ss
popa
adc
cmpsb
enter
pop
test
sbb
adc
movsb
imul
mov
xlat
fisubl
lea
mov
stc
mov
push
jecxz
push
mov
lock
inc
jl
dec
out
push
adc
shr
mov
call
and
jle
dec
add
pushf
sbb
and
nop
xor
int
out
xor
dec
pop
inc
push
inc
mov
iret
xor
xor
loop
test
jmp
xchg
popf
lods
pusha
repnz
loope
jae
fwait
inc
dec
stos
xor
sbb
stos
bound
ljmp
pop
ja
orb
mov
fdiv
int
je
data16
ljmp
pop
cmpsl
stos
ret
lahf
pop
mov
adc
in
dec
sub
cld
mov
mov
mov
sbb
xchg
dec
aas
js
push
call
loope
pop
ljmp
adc
fldl
fnstsw
cltd
movsl
inc
imul
pop
mov
jecxz
xchg
fldcw
imul
js
push
nop
cmp
sbb
or
scas
push
lods
repnz
jae
test
cmpsl
jnp
ja
mov
mov
mov
sub
dec
push
incl
pop
test
push
lods
stos
jp
jnp
jmp
and
jmp
fwait
ljmp
and
ret
sbb
mov
push
aam
jg
inc
sub
enter
outsl
sub
ss
dec
mov
call
call
dec
mov
les
inc
cmpsl
push
mov
pop
mov
shll
jnp
notl
stc
enter
or
push
lods
stos
adc
mov
aaa
out
adc
push
inc
int
xchg
aas
jnp
sti
xor
in
adc
xchg
adc
scas
xor
mov
nop
ja
pop
pop
pop
inc
jb
mov
cli
nop
jno
js
mov
dec
pop
call
xchg
inc
pop
push
shlb
xor
adc
and
add
imul
outsb
into
cmpsb
in
daa
inc
inc
xchg
jo
dec
push
pop
cmp
add
push
testb
xchg
pop
addr16
stos
dec
repz
push
dec
lods
push
or
negl
pop
pop
add
repz
dec
in
popf
cmc
sbb
cwtl
outsb
push
insb
pop
cmp
cmp
mov
sarl
fidivs
fdivl
xor
jmp
popf
idivl
fldl
cmp
imul
lds
mov
sub
in
mov
imul
lret
xchg
repnz
adc
cli
scas
enter
mov
imul
sub
icebp
jno
sbb
pop
js
adc
orl
xchg
push
lods
pop
jge
cld
loop
cltd
rclb
ja
stos
out
imul
pop
pusha
mov
loop
mov
cmpsb
movsl
sub
shlb
mov
stc
dec
rol
jnp
mov
insl
mov
jp
push
stc
mov
push
adc
clc
adc
pop
xor
push
cld
pop
js
push
jp
inc
test
push
js
lock
gs
push
clc
lret
mov
stos
ja
ljmp
and
and
jle
pushfw
mov
sbb
or
mov
xchg
push
mov
fwait
data16
push
push
out
push
push
and
push
cmp
pop
push
cwtl
cmp
mov
test
xchg
pop
jae
es
fnstcw
cmpl
sbbl
mov
jno
sub
clc
xchg
cmp
cmp
cmp
mov
mov
ret
sub
dec
cmpsb
dec
and
out
sub
loope
fsub
lods
xchg
push
in
pop
int3
out
mov
cmpsb
iret
scas
leave
add
push
mov
jo
cltd
in
fstps
addb
xchg
stc
jge
mov
or
cmc
imul
ljmp
cmp
rcrl
ljmp
sbb
add
sbb
dec
adc
and
push
fiadds
pop
push
sub
nop
pop
or
pusha
pop
aaa
cmpsl
sbb
inc
fstl
mov
mov
push
xor
inc
xchg
cmp
xchg
outsb
icebp
push
std
shrl
fsts
fwait
daa
and
add
xchg
mov
andb
das
jb
sbb
jb
sbb
jb
sbb
xor
xchg
iret
incl
jo
js
call
das
lahf
test
xlat
sbb
dec
out
mov
movsb
dec
push
leave
jge
mov
jp
mov
pop
lods
mov
cmp
mov
int3
add
jae
inc
inc
imul
cwtl
push
or
xchg
addl
sahf
fsubrl
xchg
pusha
cmp
push
inc
lret
pop
sub
test
mov
cmp
fists
mov
call
in
imul
cmc
adc
mov
add
mov
stc
xlat
xchg
or
pop
dec
sub
pop
push
push
std
push
stos
mov
xchg
test
pop
bound
nop
lahf
jae
repz
int
xchg
inc
data16
xchg
jecxz
fidivl
call
nop
push
insb
and
xor
adc
adc
test
jp
int3
testl
cld
in
jle
data16
imul
push
mov
rcrl
sub
mov
js
xor
push
sub
and
leave
jle
test
data16
sbb
push
mov
xor
dec
push
mov
aas
icebp
or
cwtl
in
push
lods
mov
cmpsb
fcmovnbe
xchg
cld
cmpl
bound
pusha
negb
jg
mov
push
enterw
loopne
lods
mov
out
or
cltd
push
xchg
xchg
orl
xchg
popa
cli
mov
cmc
loopne
push
mov
push
xchg
pop
les
xor
or
dec
or
xor
adc
repz
sbb
and
out
std
pop
xorl
fnstcw
or
or
pusha
sub
jmp
or
stc
repz
fs
inc
test
rcr
dec
sbb
adc
adc
mov
push
sub
shll
scas
and
adc
jnp
lods
sbb
pop
push
sbb
loopne
fmull
xlat
test
cmp
dec
sub
dec
mov
mov
test
pop
stos
pop
and
or
push
stc
jno
mov
inc
pop
mov
push
cmp
