push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
xor
mov
pop
pop
pusha
call
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
jmp
inc
clc
sbb
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
cmpb
je
add
lea
inc
movzbl
sbb
ja
mov
cmp
jae
nop
mov
cmp
ja
lea
jle
popf
push
pushl
decl
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
call
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
call
add
mov
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
push
pop
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
add
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
.byte
stc
fidivl
add
repnz
add
xor
add
xor
add
add
xor
add
xor
add
add
push
xor
add
xor
add
add
mov
add
pop
xor
add
add
out
xor
add
xor
add
xor
add
add
lret
add
add
add
xor
add
add
jbe
add
xor
add
xor
add
add
add
shlb
add
xor
add
xor
add
add
add
xor
add
xor
add
add
inc
xor
add
add
add
add
add
add
adc
add
sub
add
add
add
push
add
add
add
add
xor
add
add
mov
add
add
add
add
add
nop
xor
add
add
add
add
jl
add
movsb
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
add
push
xor
add
xor
add
add
mov
add
pop
xor
add
add
out
xor
add
xor
add
xor
add
add
lret
add
add
add
xor
add
add
jbe
add
xor
add
xor
add
add
add
shlb
add
xor
add
xor
add
add
add
xor
add
xor
add
add
inc
xor
add
add
add
add
add
add
or
dec
jae
popa
insb
imul
addr16
add
imul
jb
je
arpl
xchg
add
je
imul
je
add
add
popa
je
inc
imul
jns
add
loop
inc
gs
js
je
outsl
fs
push
add
add
inc
popa
fs
jb
je
push
je
add
add
insb
jae
gs
popa
insb
jne
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
dec
add
outsb
fs
gs
jne
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
adc
gs
je
jbe
outsb
je
add
add
je
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
je
imul
bound
gs
add
pop
add
jo
imul
insb
add
add
gs
outsl
jbe
inc
imul
jns
add
aad
inc
imul
gs
add
popa
jo
imul
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
je
imul
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
push
gs
outsl
arpl
add
mov
inc
imul
dec
gs
popa
addr16
add
fadds
dec
outsl
popa
fs
insl
popa
addr16
add
xchg
inc
gs
imul
js
push
add
pop
or
jae
dec
gs
popa
addr16
add
jno
push
gs
jne
jae
jb
jnp
inc
gs
imul
outsb
addr16
add
in
push
inc
gs
popa
jo
jne
add
int
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
sbb
ja
jo
imul
push
push
gs
jae
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
push
inc
inc
push
inc
pop
push
cs
insb
add
add
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
pop
and
or
out
sti
scas
dec
push
jnp
fnsave
add
lods
sub
inc
and
jp
rcrb
inc
pop
out
insl
aam
insl
and
jns
incl
jmp
cmp
xor
dec
and
xchg
imul
lds
adc
ret
mov
or
pop
mov
pop
popf
inc
mov
popa
sbb
and
fimull
inc
mov
add
mov
addb
jo
gs
gs
inc
cmp
scas
loope
dec
push
mov
push
ds
add
insb
cld
fcmovnb
jno
iret
xchg
xchg
sub
cmpsb
mov
bnd
pop
xor
sbb
mov
sub
sar
in
sub
or
in
push
fsubl
mov
jecxz
mov
push
push
imul
repnz
cwtl
and
mov
sub
add
mov
into
notl
ljmpw
fs
pop
mov
jnp
dec
fdivs
inc
jbe
pushw
out
pop
add
fsts
inc
mov
inc
repz
sbb
lcall
jg
add
xchg
insb
pop
leave
mov
dec
aas
or
fnstenv
jp
arpl
repz
jmp
test
dec
shll
cmpsl
pop
shr
add
pop
pushl
cld
nop
fldenv
movsb
cli
mov
lods
pop
insl
jnp
rolb
mov
mov
xchg
lea
clc
pop
rolb
sub
outsb
cli
mov
cs
ds
jl
mov
push
xchg
lahf
add
mov
out
lret
xchg
cmp
xchg
adc
cmc
and
pushf
push
out
lds
rcrl
xchg
loop
cmp
push
mov
add
add
add
add
xor
add
decl
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
ss
push
mov
add
sub
add
and
add
inc
add
add
add
add
add
add
add
incl
std
std
add
xchg
xchg
pop
sahf
mov
mov
or
fwait
lcall
add
add
add
add
sahf
adc
movsl
mov
jne
test
mov
mov
mov
mov
mov
test
stos
push
mov
adc
add
add
movsb
lahf
pop
fwait
movsl
lahf
pop
pushf
cmpsl
cmpsb
xchg
cmpsb
scas
lods
les
mov
lret
rcl
jmp
lret
ret
mov
cmpsl
movsb
pop
lcall
add
rol
add
mov
cltd
push
sahf
pushf
mov
mov
mov
mov
into
into
jmp
jecxz
out
in
out
call
ljmp
leave
enter
stos
outsb
mov
lcall
incb
lods
lods
lods
add
int3
int3
add
movsb
mov
cwtl
rcrb
stos
std
mov
mov
call
cmc
idiv
cld
cld
cld
std
std
push
icebp
repnz
loope
loopne
sarb
addr16
xchg
xchg
sbb
add
add
xchg
xchg
pop
mov
mov
xchg
nop
pop
sahf
mov
stos
push
stos
stos
lods
scas
popf
sahf
popf
icebp
cltd
fwait
cltd
std
movsb
mov
mov
mov
lret
fcmovnu
fdivr
jmp
in
repnz
cli
cli
cld
sti
cld
cld
jmp
jecxz
dec
int3
into
out
lods
mov
mov
mov
add
lods
lods
lods
add
nop
daa
mov
test
pop
cmpsb
cmpsl
cmpsl
jo
test
mov
std
mov
mov
movsl
cmpsb
test
cmpsb
test
pushl
int3
ret
aad
clc
in
in
ljmp
repz
repz
ljmp
cld
scas
mov
fistl
add
add
mov
cmp
scas
lods
popf
mov
mov
mov
mov
mov
ret
mov
mov
ljmp
mov
ret
lret
fxch
repnz
fdecstp
loopne
in
repnz
mov
lock
movsb
mov
add
add
push
push
push
push
pushw
gs
popa
pop
dec
dec
dec
adc
cmp
or
xor
xor
or
add
add
add
add
xchg
subl
ret
ret
cmc
mov
mov
std
cmpsl
mov
lods
pushl
lods
mov
mov
lret
dec
leave
vshufps
repz
lret
into
leave
repnz
enter
mov
mov
sahf
mov
lds
add
add
jo
jb
jne
pushw
pop
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
push
pop
push
push
pop
cmp
sbb
dec
or
or
movsl
movsl
mov
out
mov
enter
pushl
test
jmp
scas
cmpsl
inc
mov
mov
sarl
ret
lds
cmc
lods
popf
stos
cld
cmpsl
fwait
cmpsb
lcall
lea
rolb
add
add
pop
addl
jb
jae
imul
jne
int
jg
lods
jne
jae
push
arpl
xchg
xchg
dec
test
test
lock
std
rol
inc
ret
mov
mov
mov
call
leave
xchg
dec
int3
mov
mov
mov
mov
notb
xchg
cltd
call
lea
add
add
stos
mov
popf
fsts
mov
cli
mov
mov
mov
xchg
mov
jl
insb
insb
insb
pop
nop
mov
iret
lods
stos
lods
out
mov
mov
decb
fsubr
cmp
jecxz
pop
loop
jmp
push
jmp
mov
mov
sar
int
sti
ret
scas
mov
mov
jmp
cltd
clc
xchg
xchg
pop
add
add
shlb
xchg
mov
lea
lcall
cltd
lcall
xchg
out
xchg
pop
jg
push
push
insb
imul
addl
sahf
mov
and
in
repz
incl
mov
dec
int3
lret
ror
rcl
sar
mov
scas
movsl
sahf
mov
jmp
mov
add
add
rol
mov
xlat
scas
fldt
xchg
xchg
decl
xchg
xchg
lcall
popf
lahf
lcall
xchg
xchg
cld
mov
imul
pop
pop
cmpsl
jo
jo
addl
lock
mov
ljmp
lret
mov
mov
sarl
jmp
jecxz
in
in
in
push
lock
call
xlat
inc
mov
stos
lcall
xchg
xchg
ficomps
add
add
sarb
fldt
xchg
call
lcall
mov
decb
mov
faddl
mov
call
movsl
xchg
test
cmpsl
lcall
stos
mov
pushl
mov
into
repnz
repz
sti
cli
cld
cld
std
cli
sti
sti
in
out
out
call
fcom
pushl
test
sahf
mov
xchg
xchg
dec
add
add
into
mov
fldt
lahf
sahf
lcall
mov
lcall
xchg
xchg
nop
mov
clc
sahf
mov
cmc
mov
pop
stc
mov
nop
aas
std
mov
fwait
xor
int3
movsb
inc
inc
scas
jl
sarb
call
jmp
out
push
div
std
cld
cld
std
std
std
clc
idiv
fdivrp
mov
hlt
mov
mov
movsb
mov
cltd
push
add
add
lret
mov
lret
fldt
mov
movsb
ljmp
fwait
lahf
jmp
scas
mov
mov
push
inc
xchg
aas
inc
mov
dec
lea
int3
mov
aad
add
fistpl
add
in
or
fisubrl
test
iret
lret
mov
jmp
clc
stc
std
std
cld
std
std
push
div
ljmp
ljmp
mov
test
fwait
cltd
add
mov
mov
mov
pushl
lods
scas
jmp
cmpsl
stos
inc
mov
inc
lcall
rcll
add
rcll
add
fistpl
add
jmp
add
hlt
mov
push
mov
aaa
jmp
ret
jne
fcmovnbe
cmpsb
jmp
in
call
out
in
in
out
fcom
cld
rcl
shl
mov
mov
and
mov
mov
mov
scas
mov
pushl
mov
ljmp
stos
lods
inc
mov
dec
movsb
dec
fcoms
add
xchg
add
xlat
fwait
add
ficompl
add
out
mov
push
mov
add
cld
ret
add
cld
ret
stc
pop
push
leave
dec
jmp
aam
jmp
rcll
dec
mov
mov
test
stos
push
mov
scas
adc
mov
add
mov
movsl
pop
mov
scas
fldt
mov
mov
mov
scas
ljmp
mov
pop
call
fwait
or
fistpl
add
fstps
add
call
mov
cld
mov
add
std
les
inc
push
dec
sbb
dec
and
cld
xor
out
aam
inc
shll
xchg
cltd
cwtl
lods
lods
lods
add
add
add
test
mov
mov
mov
mov
inc
mov
imul
ficompl
add
fbld
add
icebp
mov
stc
mov
add
inc
add
cld
ud0
shrb
dec
sub
shrl
fdivs
std
shrl
push
fdivs
movsl
clc
stos
test
mov
xchg
popl
push
push
add
add
add
xchg
mov
cltd
cltd
cltd
mov
mov
mov
mov
inc
mov
jle
rcrl
add
fistps
add
in
mov
push
mov
add
std
ret
add
cld
ret
add
std
fisttpll
cld
dec
dec
fmull
fisttpll
cld
loop
fmul
stos
sti
mov
scas
rcrb
add
add
dec
addr16
pop
pop
imul
nop
mov
rol
rol
mov
mov
inc
mov
xchg
call
mov
push
jmp
cmpsb
add
call
mov
add
inc
add
cld
les
std
enter
fadds
cld
loope
std
loope
out
std
in
jmp
imul
scas
sti
mov
mov
lcall
add
add
dec
pop
pop
pop
pop
fmuls
mov
inc
ret
rol
mov
mov
mov
ret
xlat
stos
inc
jmp
movsl
or
ljmp
sti
ret
inc
add
std
lret
std
movb
shrl
jmp
insl
in
xchg
std
in
cmp
out
xchg
std
lock
std
cmc
xchg
std
repz
notb
std
mov
mov
movsb
mov
pushf
adc
add
add
add
add
pusha
inc
jl
jl
mov
mov
mov
iret
test
sarl
sarl
fnstenv
or
lock
push
mov
add
dec
add
std
leave
add
std
lret
fidivrl
std
ljmp
lock
push
sahf
cli
mov
std
stc
mov
call
aam
mov
mov
cwtl
sbb
std
incb
jns
je
sahf
sahf
popf
inc
int3
int3
int
jecxz
loop
jecxz
fnstsw
fmulp
aad
lret
out
into
int3
int
int
stos
fisubrl
or
repz
cli
ret
std
movl
dec
add
dec
add
repnz
cld
repz
std
divb
cli
mov
std
stc
mov
mov
mov
cmpsb
cmpsb
mov
incl
lods
lods
lods
add
loopne
or
lock
hlt
hlt
es
in
repnz
in
out
pop
out
in
jne
xchg
fcom
fadd
xlat
into
mov
aad
pop
jmp
mov
add
inc
add
dec
add
dec
add
call
and
std
in
push
ret
stc
cld
test
std
clc
mov
std
stc
ret
sti
test
inc
mov
test
lea
addl
incb
std
incl
std
or
div
sbb
out
lock
jnp
lret
sarl
adc
clc
mov
std
mov
add
inc
add
inc
add
std
shlb
in
mov
clc
mov
cli
cmc
mov
cmc
lock
ljmp
in
mov
fsubrp
cmpsb
sti
loop
mov
ret
mov
cmpsb
xchg
mov
addb
add
add
aam
or
int
push
into
lds
sti
out
adc
repnz
add
clc
mov
push
mov
out
mov
sbb
out
into
inc
std
call
in
cli
jmp
fcomps
in
aam
scas
in
shlb
rcl
aam
ror
mov
pushf
stos
test
pop
xchg
xchg
xchg
sbb
add
add
pop
leave
les
mov
mov
inc
fldt
xor
shll
inc
repnz
push
jmp
les
into
lds
rol
mov
mov
ret
mov
ret
mov
lds
ds
mov
mov
addl
add
ret
mov
nop
iret
les
repz
fnstsw
mov
mov
mov
movsl
mov
cmpsl
lea
mov
push
mov
mov
sub
sarb
leave
leave
enter
into
add
addb
add
std
std
add
scas
push
mov
mov
lods
mov
lods
pushf
lods
lods
cmpsl
jns
lods
movsl
push
scas
mov
inc
lods
lods
mov
and
mov
stos
or
lods
lods
add
incl
incb
jmp
add
add
jmp
add
add
jmp
add
add
clc
add
add
add
push
add
add
jmp
add
add
add
inc
add
add
add
incb
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pusha
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
jmp
mov
inc
loop
jb
stos
add
bound
push
jmp
inc
push
test
int
movsb
sti
and
cmp
inc
fidivrl
or
shrb
mov
and
popf
xor
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
adc
pop
loop
lret
in
jecxz
push
call
xor
push
and
or
stos
inc
pop
sti
pop
hlt
sub
leave
pusha
mov
jnp
jg
out
add
es
dec
es
mov
jns
inc
fdivr
lcall
dec
in
adc
mov
ret
pushf
xor
xchg
dec
in
push
mov
add
mov
push
mov
lods
inc
fadd
pop
push
arpl
xchg
das
jecxz
popa
mov
jmp
mov
jno
cmp
pop
mov
pop
lea
cmp
inc
loopne
pop
repnz
leave
inc
stos
fsubs
mov
leave
sub
jb
dec
mov
jb
add
xlat
les
mov
clc
in
subl
scas
inc
sahf
pop
or
and
ljmp
movsl
or
test
lds
cmpsl
test
aad
dec
jecxz
repnz
orl
or
fcmovb
es
sbb
ds
outsl
data16
xchg
nop
sub
les
xor
pop
in
sbb
cmp
push
mov
add
fimuls
jne
push
mov
xorb
mov
les
mov
test
sub
cmp
dec
dec
loop
jnp
push
out
lcall
xchg
out
pop
cmc
pop
test
mov
inc
jl
jb
cmp
negl
pop
out
dec
ljmp
popf
cmp
cmc
insl
mov
jl
sbb
mov
fdivrs
inc
xlat
jg
xchg
sub
mov
add
jl
das
and
lcall
pop
inc
fidivrs
insb
mov
sahf
cmp
insb
loope
cmpsl
sarl
outsb
loop
pop
adc
adc
data16
lcall
jl
jne,pn
and
lcall
pusha
mov
popa
cmp
call
dec
cmp
shrl
add
jle
lods
icebp
mov
push
add
cmpsb
xor
sub
fsubrs
movsb
dec
loop
dec
pop
idivb
add
sahf
jge
rorb
push
jnp
fwait
xor
popf
movsl
cmp
inc
mov
pop
and
loope
jne
cmc
mov
adc
sbb
cmp
insl
jecxz
out
pop
lock
push
adc
xchg
sub
fsubrl
dec
mov
fcmovnbe
push
mov
out
xchg
add
mov
and
add
es
loopne
int
hlt
js
test
lret
cld
jb
xor
mov
pop
mov
ret
loopne
cmc
imul
popf
push
call
out
imul
shr
bound
xchg
or
outsb
add
xchg
pop
lea
mov
sub
mov
leave
pusha
fistps
push
add
jg
stos
icebp
mov
push
push
popf
test
das
cmpsb
and
xlat
push
sub
fldcw
mov
pusha
idivl
imul
iret
dec
xchg
jp
pushf
xor
pushf
movsl
cmp
inc
mov
pop
and
loope
je
testb
cmp
sbb
leave
sarl
shrb
mov
mov
test
xchg
inc
cmp
and
push
xor
xchg
adc
rolb
aam
dec
sub
jg
lods
inc
fisubl
popa
clc
jb
jo
subb
jge
inc
outsl
push
jae
aam
jp
movsl
cmp
mov
push
ljmp
lods
inc
in
push
out
inc
imul
dec
cli
xchg
jl
pop
sahf
in
insb
add
aas
sbbl
xorb
gs
test
testb
sahf
fidivl
sub
jb
push
push
jmp
jl
nop
stos
stos
fdivl
leave
outsl
push
incl
fwait
xor
push
rclb
cltd
xor
lods
dec
in
mov
imul
adc
js
push
adc
and
mov
pusha
in
xor
and
enter
jns
jne
out
adcl
fcoms
mov
dec
stos
inc
jp
call
fistpl
mov
dec
ss
lahf
and
fcompl
adc
push
add
into
cwtl
mov
int
xchg
cs
pop
and
rcrb
imul
pop
add
mov
adc
sbbl
jle
fwait
jl
lret
xor
sahf
sub
dec
lret
xchg
mov
test
into
lcall
xchg
pop
testb
pushf
inc
fst
arpl
movsl
jbe
dec
out
movsb
pop
out
fsubs
xchg
xchg
dec
shlb
orl
push
xchg
dec
rclb
lahf
ss
clc
pop
bound
jecxz
xchg
nop
mov
adc
xchg
push
mov
test
xchg
xchg
push
xchg
mov
sahf
xor
xchg
inc
mov
jb
adc
imul
jns
xchg
inc
mov
je
out
xchg
xchg
cs
push
movsb
cmp
xchg
test
ret
jle
push
jo
xchg
lods
inc
aad
das
cltd
dec
mov
jg
cmp
shrb
test
dec
xchg
enter
ret
outsb
mov
mov
out
lret
pop
icebp
mov
lea
cltd
or
lret
pop
fnsave
dec
fisttps
cltd
and
je
and
mov
inc
fxch
dec
pop
idivb
sub
loopne
sbb
mov
test
arpl
mov
mov
popa
clc
insb
arpl
out
sbbl
jne
pop
xchg
mov
cmp
into
es
push
inc
mov
or
add
push
stc
push
sub
mov
jnp
add
pop
dec
std
popf
xor
pop
stc
add
data16
xor
xor
xchg
cs
cmc
mov
mov
sub
adc
jmp
gs
pop
or
adc
pop
fmul
fs
jg
mov
rclb
sub
mov
lods
ret
push
aad
mov
js
loope
sbb
mov
inc
mov
int3
arpl
sbb
xchg
dec
and
sbb
or
xlat
stos
pop
stos
inc
inc
jbe
adc
adc
imul
in
sbbl
add
insl
test
jecxz
pop
ja
lret
movsl
or
cmp
lea
jl
mov
jg
ljmp
jb
iret
mov
subl
and
cmp
js
xchg
sub
outsb
lods
inc
lahf
inc
inc
fdivl
lret
lods
sub
popf
xor
mov
es
sub
jo
movsb
cmp
test
fdivl
inc
dec
out
mov
mov
stos
fwait
xor
cmp
and
das
js
adc
roll
xchg
jno
int
jle
push
mov
fwait
mov
mov
sub
inc
fldcw
mov
ret
mov
fistpl
adc
mov
sub
fnstenv
addb
mov
nop
daa
add
fnsave
push
mov
dec
jne
jnp
cmp
mov
movsl
mov
pop
out
xchg
pop
inc
and
jae
pushf
mov
xchg
mov
push
add
sbbb
and
push
ss
es
aaa
mov
ret
out
stc
rcrl
xor
and
pop
sahf
cmpsl
ja
pop
movsl
or
jo
adc
or
inc
fs
xchg
lock
xchg
mov
xchg
in
mov
aaa
pop
aas
xor
mov
mov
inc
xchg
fdivp
fscale
jmp
das
sti
jnp
sub
dec
push
sub
fwait
add
and
inc
jle
jns
sub
lret
xchg
sahf
xor
es
adc
jb
cli
xchg
outsl
xchg
js
lds
sub
cmpsl
sbb
or
outsl
test
mov
jg
mov
bound
push
mov
jle
push
scas
xor
jp
mov
adc
mov
fiaddl
fcmovu
mov
jge
mov
fidivl
and
cmp
fs
fwait
fs
pop
adc
test
mov
xlat
jnp
sbb
push
divb
testb
adc
adc
insl
adc
sbb
jno
push
fdivs
loopne,pn
cs
lods
mov
sarl
dec
push
jp
xchg
pop
mov
sub
les
xchg
sbb
push
jns
mov
xor
push
cmpsb
mov
fs
lcall
fcoms
scas
mov
loope
mov
jo
popa
repz
push
xchg
jg
repz
jmp
cld
cmp
shlb
sub
push
out
in
sbb
sub
or
and
pop
outsl
mov
mov
fadd
xchg
rcr
xor
sub
nop
xor
xchg
pop
pop
addl
clc
rcr
subb
ret
add
sub
lcall
mov
mov
adc
jo
movswl
rorl
scas
xor
imul
inc
pop
outsl
adc
test
xchg
je
test
xor
dec
fistpl
mov
ljmp
dec
ret
jp
mov
subl
adc
rolb
jne
push
adc
xorb
andl
jg
out
movups
cmp
xchg
sbb
push
add
inc
add
mov
andl
jmp
sbb
mov
test
mov
test
pop
cmpsl
add
enter
dec
lahf
stos
push
mov
in
clc
jmp
pushl
dec
sbb
add
clc
jmp
inc
push
xchg
gs
or
push
mov
cmpsb
std
adc
or
in
inc
inc
movsl
out
jne
loopne
daa
xlat
sub
out
xor
int3
iret
aaa
mov
cmp
js
sub
int3
mov
lret
sbb
mov
pushf
fwait
jge
or
push
enter
mov
rorl
cmp
stos
cmp
mov
movsl
dec
subl
imul
jae
adc
fstpt
pop
sub
sub
mov
mov
xchg
repnz
sbb
mov
mov
pop
aam
das
popf
inc
testl
clc
addb
mov
inc
jb
xor
mov
push
jge
push
stc
and
aas
mov
dec
fidivrs
mov
mov
fistps
loope
mov
rorb
add
or
das
or
lcall
lret
sub
push
out
dec
push
in
mov
jle
xchg
sub
movsb
cmp
nop
shrb
push
call
push
mov
fsub
jle
lods
add
and
inc
fnsave
test
adc
imul
mov
call
ds
cmp
insb
int
ror
test
icebp
dec
and
push
dec
insl
lods
out
mov
popa
hlt
mov
xchg
stos
imul
xor
mov
shrb
fisttpl
int3
mov
insl
add
scas
push
mov
cmp
and
cmp
add
inc
fimuls
test
cld
test
iret
je
fabs
add
cli
repnz
sub
mov
inc
inc
fcomps
into
gs
pop
mulb
jge
or
sbb
inc
mov
shrb
cmpsb
cmp
mov
les
xlat
push
in
in
jecxz
pop
or
add
mov
pop
mov
fbstp
aam
nop
loopne
cmp
repnz
pop
call
pop
out
mov
jnp
daa
mov
mov
xor
pop
loopne
push
inc
push
call
inc
inc
outsl
push
add
cmpsl
outsb
sub
lds
aam
jecxz
ret
xchg
and
xor
pop
pushf
xor
mov
cmp
je
fnstenv
popf
push
in
push
testl
lds
ljmp
pop
xchg
call
push
ja
push
data16
cmpb
lea
push
pop
sahf
mov
loopne
stos
mov
aam
enter
jg
mov
push
popf
rorl
and
das
fstps
test
lret
in
aad
xchg
call
repz
lods
cmc
mov
jle
adc
movsb
cwtl
das
aam
xor
mov
mov
in
fists
fs
jg
or
repz
popf
xor
xchg
adc
mov
lret
pop
dec
rorb
cld
outsl
insl
xor
hlt
mov
xchg
test
iret
rdtsc
enter
pop
sbb
movb
jnp
outsb
dec
in
jle
mov
mov
fwait
xor
mov
dec
out
sbb
insl
add
sbb
jle
movsb
mov
pop
out
pushf
ss
test
stos
cmp
pop
iret
push
xor
clc
out
jl
and
mov
add
mov
nop
daa
loope
aas
sub
scas
inc
jmp
pop
hlt
jle
into
gs
fldlg2
sbbl
xor
sbb
mov
xlat
in
cs
dec
loope
inc
add
add
and
je
inc
xlat
outsl
popf
mov
imul
jl
lret
push
repnz
jecxz
xor
ss
addr16
insl
pop
orl
addl
test
mov
rcll
out
mov
inc
insl
xlat
insl
add
xchg
fs
out
and
lret
sti
xchg
lret
inc
test
sbb
mov
fdivr
xchg
sbb
xor
push
in
mov
xlat
jae
mov
int
sub
test
nop
daa
xchg
cmpsl
fnsave
scas
inc
rolb
xchg
add
int3
arpl
and
jmp
push
test
ret
or
shll
jne
jl
inc
fcompl
xchg
xchg
sub
arpl
movsb
push
sbbl
loope
mov
xchg
cmp
xchg
mov
lret
jbe,pn
ret
cmp
js
pop
repnz
xchg
pop
out
out
jns
dec
emms
push
cmp
adc
inc
cmp
dec
cltd
and
jp
mov
push
js
out
xchg
mov
or
enter
ret
popa
clc
lea
jg
dec
add
inc
arpl
sbb
sti
jg
cmp
fcmovb
pop
cld
cwtl
fsubrs
push
aad
cmp
add
jl
repz
rclb
sti
mov
xor
gs
dec
in
push
outsb
add
leave
rorl
sbb
test
pop
cmp
outsl
fnsave
pop
cmp
lcall
and
sub
gs
and
jo
ds
cltd
insb
add
pop
hlt
subb
stos
jnp
loopne
mov
xor
xlat
outsb
sbb
cmp
sbbb
mov
xor
add
in
and
lahf
sbb
mov
andl
sub
jle
sbb
ss
xor
sarb
lods
dec
fsubrs
int3
sub
enter
je
adc
pop
sahf
imul
movsl
insl
xchg
int
out
loop
sub
sbb
cmp
mov
ficoml
xor
sarl
dec
dec
insl
js
or
cmp
hlt
mov
push
sub
and
adc
stc
push
xor
inc
adc
sub
out
push
jne
cmp
insl
add
push
xchg
sub
repz
loop
pop
sahf
or
jnp
mov
pop
lret
xchg
in
jge
cmp
movsl
shrb
fwait
push
jmp
and
jns
inc
xlat
mov
pop
cmc
icebp
adc
cs
sbb
pop
inc
jae
bnd
loop
aam
jns
loope
out
xchg
or
movsb
jno
mov
mov
sub
dec
imul
dec
loopne
stc
repnz
fnsave
mov
adc
jne
lds
mov
jecxz
xor
push
mov
int3
mov
adc
or
bound
rclb
les
aas
inc
fdivp
push
jecxz
push
adc
add
dec
mov
stos
fisubrs
pop
dec
divl
leave
mull
and
inc
icebp
mov
push
sub
jno
stos
lea
imulb
lods
mov
flds
push
call
stc
jp
push
popf
fistps
and
icebp
xor
fidivrl
popa
clc
lods
cmpsl
fdivl
lds
outsl
cli
xchg
sbb
sahf
xor
rep
mov
fidivs
lcall
sub
push
int3
lods
pop
sahf
lret
and
in
mov
push
xor
fiaddl
fidivl
insb
popa
clc
lcall
push
sub
popf
xor
mov
mov
stc
repz
jo
adc
testl
pusha
mov
lret
fnsave
push
call
pop
dec
outsl
push
cmp
mov
push
lea
fisubs
mov
lock
inc
faddl
fbstp
arpl
inc
test
xchg
call
add
cmp
mov
shll
leave
pop
out
sti
popf
fnsave
ja
mov
xchg
shlb
or
sbb
daa
mov
cmpsl
mov
out
xchg
ss
adc
sub
test
dec
loopne
mov
jl
insl
xlat
xchg
xchg
xlat
out
movsb
cmp
add
mov
test
xor
push
shll
daa
jl
in
dec
ds
add
adc
mov
jnp
inc
insb
mov
xor
insl
or
dec
mov
lret
aad
push
int
mov
test
adc
sub
das
and
sbb
in
jge
aaa
hlt
mov
mov
and
je
sahf
test
shll
adcl
xor
jnp
add
aam
xchg
cmp
dec
lahf
test
and
stos
aam
sub
jle
inc
std
and
gs
lds
adc
xchg
xchg
mov
ret
mov
mov
xchg
inc
mov
push
lods
xchg
adc
cmp
add
push
xchg
daa
push
in
push
mov
xor
jne
test
sub
nop
in
mov
dec
call
or
ja
mov
push
popf
mov
push
mov
pop
in
mov
inc
xlat
sub
idivl
or
int3
and
and
xor
enter
data16
into
mov
mov
movsb
inc
cmp
mov
cmpsb
jb
imul
mov
imulb
popa
sub
je
xchg
cmp
push
adc
xchg
fiaddl
dec
das
mov
mov
jnp
addr16
sbb
sahf
adc
daa
xor
or
outsb
mov
inc
jmp
imulb
into
pop
xor
dec
mov
pop
inc
jmp
and
push
mov
mov
into
mov
jmp
mov
xor
mov
inc
out
sub
xchg
fdivp
sbb
ds
push
and
push
rorl
mov
add
pop
test
adc
sbb
cmp
popa
mov
sub
in
xchg
nop
jge
or
push
and
test
fistpl
lock
mov
add
push
pushf
iret
sub
cmc
out
inc
leave
arpl
loopne
inc
xor
adc
ds
sub
test
pop
dec
cli
test
fimuls
xor
dec
cs
jae
inc
cmp
or
aaa
cwtl
pop
setle
sbb
mov
movsb
mov
sbb
aas
mov
add
out
pushf
mov
xor
imul
cmp
shll
jnp
inc
pop
movsl
inc
mov
andb
jecxz
xchg
subb
lret
hlt
loopne
jns
mov
mov
dec
xchg
xchg
loop
jae
and
test
adc
mov
add
js
jno
sbb
xor
jns
dec
xchg
shlb
scas
or
mov
xor
mov
mov
inc
je
fisttpl
cmpb
cmpsb
rcll
sbb
cmp
popf
aad
cmp
mov
mov
jb
fdivrp
xor
mov
cmpl
bound
push
ss
pop
add
push
adc
jb
jp
ljmp
pop
mov
mov
inc
mov
cmp
sub
sub
add
pop
cmp
lock
sub
repnz
js
inc
inc
loope
sub
in
dec
in
push
mov
pop
loopne
mov
add
data16
jle
stc
aad
jnp
xor
cli
sub
pop
loopne
dec
push
insb
mov
xor
rorb
push
test
pusha
bound
pop
lods
mov
mov
stos
sar
sti
rcl
jns
shll
push
sub
adc
xchg
scas
push
repnz
imul
cmp
daa
test
jp
mov
jle
cltd
in
out
jae
push
ret
icebp
insw
iret
xchg
clc
dec
and
sahf
mov
cli
cmp
lret
cwtl
and
jp
or
or
inc
inc
mov
inc
pop
hlt
pop
or
cmpsb
test
orl
into
mov
arpl
fistpll
xchg
imul
scas
rclb
inc
xor
in
push
lret
inc
loop
imul
mov
mov
and
push
cmpsb
mov
jnp
insb
lcall
je
test
dec
dec
out
jecxz
mov
sub
xchg
out
push
enter
and
mov
int
pop
sub
mov
mov
pop
ret
ret
aam
xchg
jb
mov
jle
jae
xor
scas
jo
mov
mov
xor
repnz
cmpsl
and
sub
notb
and
adc
aad
mov
adc
inc
push
pslld
cld
aam
lret
test
adc
das
pop
or
cmp
adc
or
clc
in
push
mov
imul
mov
adc
cmc
jne
dec
pop
rcll
clc
sbb
sbb
add
roll
xchg
fcomi
mov
pop
xchg
ds
sti
jo
dec
not
lods
stos
lea
imul
xlat
lcall
adc
cmpsb
pop
sti
jae
ljmp
xchg
les
cs
lods
adc
loop
cmp
xchg
sbb
sti
mov
bound
ja
adc
jnp
mov
insb
nop
popa
sub
call
iret
sub
cwtl
push
sbb
ljmp
shlb
sub
lods
mov
push
jo
and
mov
jl
sar
into
test
lods
mov
mov
jb
shrl
sbb
sub
std
fucomp
xlat
gs
sbb
subb
push
push
test
pop
xor
sub
repnz
lds
test
add
xchg
insl
xor
ljmp
xor
xchg
pushf
mov
arpl
adc
xchg
and
mov
jg
push
pop
lea
pop
in
ret
sbb
cmpsb
das
sbb
sti
fnstsw
push
adc
jne
nop
push
inc
insl
clc
mov
les
loop
iret
rcll
push
movsl
jl
pop
push
mov
mov
movsb
xchg
dec
into
int3
lock
fidivrs
mov
mov
push
jno
scas
dec
outsl
neg
repz
inc
sbb
imul
cmp
popf
add
insb
fisubs
jo
lret
daa
outsl
or
mov
rolb
xor
sub
mov
ret
ljmp
inc
jb
add
popa
xchg
xchg
daa
mov
jo
lret
jp
ret
js
hlt
inc
fbstp
cmp
xchg
ja
xchg
sub
popl
xchg
clc
inc
je
push
addb
sbb
jg
loopne
js
mov
mov
cld
xlat
orb
mov
imul
cmp
sbb
fmulp
xchg
pop
bswap
push
or
icebp
lds
pop
and
sub
ljmp
inc
popa
loop
les
mov
or
mov
pusha
mov
push
xchg
push
pop
dec
jp
or
sbb
push
sahf
mov
cmpsl
sbb
shll
inc
fnstsw
mov
xor
cmp
loop
es
cmc
std
imulb
enter
jg
and
mov
xlat
loopne
inc
fs
jmp
jmp
sbb
jecxz
dec
jl
sub
or
loopne
andl
sahf
shl
fdivl
enter
cmp
test
outsb
dec
sub
cmpsl
sbb
iret
mov
and
mov
mov
or
mov
mov
call
movsl
inc
push
loop
push
adc
inc
fdivrs
mov
xchg
ja
fisttpll
negb
pop
repnz
jnp
in
xchg
xor
and
je
xor
or
in
movsl
inc
mov
adc
int
sub
pop
push
scas
aas
and
pop
mov
jmp
popa
stos
pop
xchg
test
xorb
jb
insl
mov
inc
dec
xor
push
loop
sub
leave
rclb
push
push
imul
mov
add
scas
into
pop
cmp
jg
jg
in
push
out
adc
lret
mov
lds
imul
xchg
ljmp
sub
inc
jl
and
incb
mov
push
mov
test
dec
in
leave
inc
xlat
cmp
pop
icebp
pop
or
addb
into
cmp
lea
mov
lods
inc
jmp
dec
fsts
test
cs
dec
frstor
push
jg
aaa
add
sahf
dec
out
cmc
xchg
imul
and
ljmp
xor
sbbb
imul
and
cltd
mov
stos
push
stos
sub
mov
push
dec
mov
cmp
in
fisubrs
dec
add
jns
cmp
mov
popf
insb
in
inc
jae
ret
jmp
jmp
aad
out
jp
inc
gs
or
gs
push
xor
test
sbb
dec
mov
in
sub
cs
or
shr
lods
pop
ja
jmp
les
in
shlb
rcll
test
and
adc
sub
mov
mov
test
movsl
js
divb
test
mov
cmp
sub
xchg
iret
add
stos
mov
inc
popf
mov
loopne
mov
insb
out
jmp
mov
cmp
je
mov
shll
push
jmp
sbb
xchg
addb
sub
lds
cmp
icebp
jl
jecxz
and
stos
aam
sahf
xchg
vmovaps
shl
xor
or
aas
icebp
jle
pop
shll
in
xchg
stc
inc
lock
mov
jae
pop
sbb
and
loopne
pusha
lds
fisubrs
fadds
cmp
sbb
push
stos
pop
cmp
ret
mov
jl
fxch
test
out
adc
pop
movsl
cwtl
pop
push
popf
xor
jns
mov
and
imul
leave
test
mov
pusha
add
pop
insb
or
dec
cltd
dec
lea
fsubrs
daa
add
jmp
dec
lret
or
xchg
mov
stos
out
bound
gs
and
icebp
mov
sti
lods
iret
adc
outsb
dec
rcl
aam
daa
arpl
add
lahf
fwait
mov
mulb
clc
lret
ror
pop
or
or
js
lock
fists
and
jge
sub
mov
popf
and
mov
push
cmp
imul
testl
mov
fs
iret
cmp
cli
add
cmpl
xor
add
fisttps
outsl
inc
inc
sub
inc
fs
xchg
in
iret
jmp
in
inc
mov
push
cs
or
imul
cld
push
pop
imul
mov
nop
dec
test
mov
pop
insl
cmp
fdivs
add
xor
movsl
add
fmul
lock
rcr
xor
lea
dec
jne
test
xchg
sbb
fildll
insb
leave
in
add
scas
enter
int3
es
cvtdq2ps
mov
push
adcl
sub
gs
cmp
or
inc
call
std
or
gs
and
inc
shlb
mov
lcall
jb
jmp
fisttpl
xchg
rcrl
aas
jae,pn
int3
std
xchg
cwtl
arpl
mov
inc
push
jns
insb
aam
aad
insb
jbe
mov
test
mov
and
push
add
xor
cmc
fdivl
sub
or
repnz
faddl
or
mov
cmc
mov
push
xorl
and
jecxz
dec
movsb
mov
jg
test
xchg
pop
cld
or
nop
add
cmp
push
adc
inc
fs
pop
in
aad
fucomip
aam
xchg
xor
add
push
mov
mov
enter
test
nop
cmpsl
mov
sbb
dec
mov
insl
mov
and
js,pt
mov
andb
dec
push
xor
insl
shrl
scas
ljmp
push
shlb
shl
incl
imul
mov
mov
and
cmp
out
repz
jbe
xor
dec
or
aaa
mov
or
shll
and
jmp
sbb
aaa
jne
xlat
cs
into
rcl
ss
dec
dec
clc
inc
adc
xchg
add
lods
or
and
cmpsl
lcall
pmaxsw
imul
out
aam
rorb
push
sbb
inc
fs
lods
shr
popf
aad
loope
nop
scas
daa
fwait
aaa
rcl
js
enter
sub
mov
out
pop
cmp
pop
or
xchg
pop
and
sub
sub
jl
out
lcall
das
adc
test
pop
sti
add
sub
jmp
popa
sub
xchg
push
dec
daa
sbb
cmpsb
pop
cmp
mov
bound
sbb
xor
push
add
and
inc
add
adc
mov
xchg
test
into
pop
sub
mov
lcall
subl
dec
lret
push
inc
mov
fdivrs
inc
push
cmc
mov
pop
or
xor
push
and
iret
popa
fcmove
ja
nop
js
pusha
std
lret
pop
mov
js
outsl
pop
lret
subl
seto
add
iret
xchg
jge
cmpsb
shlb
jp
and
jle
pusha
daa
outsb
fisubl
jmp
and
addr16
cwtl
lcall
and
addb
or
std
bound
call
inc
xor
popf
pop
les
mov
xchg
cmpsl
clc
scas
dec
or
jmp
sbb
sbb
lock
aam
or
inc
fldl
scas
dec
negb
dec
jns
lock
or
mov
push
into
test
xchg
cmp
aas
jnp
adc
mov
cld
lret
rcrl
les
add
popf
js
daa
int
dec
dec
jp
imul
lods
xchg
sbb
xchg
add
ja
into
stc
pusha
xor
mov
fwait
mov
lea
adc
pusha
movsl
mov
iret
inc
pop
subl
test
sub
and
incl
xor
mov
je
push
xor
mov
lods
mov
paddusb
shlb
pop
add
mov
fsubrl
xchg
loope
outsb
fcoms
js
add
mov
or
stos
daa
inc
mov
push
lods
sti
rorb
mov
mov
or
jg
mov
jle
or
dec
mov
jnp
xor
filds
mov
or
xchg
mov
arpl
imul
sbb
inc
push
shl
test
jb
inc
lret
call
sti
sub
adc
pop
cwtl
pushf
es
xchg
dec
test
jg
adc
sub
jno
das
jle
mov
repz
add
xor
shl
movsb
and
and
pop
xor
mov
es
mov
jns
push
dec
sbb
dec
sti
adc
mov
xor
hlt
cmp
mov
rolb
inc
inc
xor
mov
shrl
cmp
sbb
leave
inc
imul
ds
jne
adc
out
pushf
mov
adc
dec
mov
push
dec
jecxz
pop
cmp
jp
inc
and
or
mov
outsl
jle
js
data16
fucompp
clc
lahf
das
pop
jae
in
lahf
flds
cli
dec
js
fwait
imul
inc
pop
push
xor
mov
hlt
jl
jg
ljmp
into
in
test
jbe
xchg
test
test
sub
dec
push
es
mov
arpl
and
popf
pop
xor
pop
jno
sti
xor
mov
mov
stc
sub
inc
mov
in
roll
daa
iret
ret
jl
xor
das
lds
push
scas
mov
fcomi
and
jmp
out
add
adc
xchg
sarb
lcall
mov
enter
bound
cmpsl
inc
dec
push
xchg
xchg
fwait
add
xor
and
cmc
adc
mov
insb
lcall
push
cmp
xor
inc
inc
arpl
xor
dec
imul
stos
add
enter
rcll
xchg
cli
lcall
dec
pop
gs
mov
mov
movb
mov
outsl
lret
xor
sub
cmpsb
and
cmp
inc
ss
test
pop
out
or
add
aad
push
clc
fisttpll
mov
mov
push
push
add
xor
aad
add
xchg
xchg
pop
les
insb
bound
mov
cmp
lcall
gs
pop
fidivl
jbe
and
jmp
xor
pop
sti
call
xor
bnd
jae
sbb
sub
jecxz
push
hlt
jno
push
and
data16
lret
add
mov
push
or
loopne
rcrl
je
mov
outsb
cld
pop
cmp
pushf
lods
pop
xlat
clc
push
xor
sbb
lret
dec
popa
iret
mov
subl
mov
mov
or
sbb
mov
lret
shrl
fbstp
cmp
mov
and
pop
and
subb
mov
cmp
ret
addr16
sub
jmp
sbb
imul
mov
lret
push
imul
in
je
mov
cli
cli
mov
push
jecxz
cmp
jns
add
dec
sub
repnz
int
and
push
lock
daa
jb
push
iret
push
addl
cmpsl
ja
dec
xor
xlat
mov
cmc
xchg
div
jmp
sahf
pop
inc
outsb
pop
mov
pushf
and
dec
inc
add
cmp
popa
and
pop
repz
xchg
and
sbb
je
in
inc
sti
subl
ret
cli
mov
dec
jo
loope
fisubl
add
sub
jl
int3
jecxz
js
sahf
or
mov
sti
notl
fildll
loop
lds
xlat
pushf
push
cmp
push
sbb
or
sbb
outsl
jns,pn
dec
mov
les
jge
fiadds
test
jbe
push
pop
xchg
jnp
sub
inc
andl
xchg
stc
ret
or
jbe
arpl
call
inc
ds
pop
xor
pop
add
test
jmp
xchg
fimuls
xor
ljmp
rolb
subb
lret
movsl
scas
add
imul
leave
push
push
ficoml
lds
lret
gs
sub
ds
popf
lcall
add
jmp
lods
push
dec
out
in
inc
add
push
sti
mov
xlat
mov
iret
dec
pop
popf
xor
outsl
push
scas
mov
int
ja
dec
insl
add
negl
sbb
add
insl
rorb
and
std
sub
and
mov
mov
mov
pop
jp,pn
cmp
mov
jne
inc
data16
jl
mov
out
jne
inc
mov
adc
lahf
fwait
xchg
movsb
or
lret
movb
xchg
sti
out
push
hlt
lcall
push
enter
fidivrl
cmp
ljmp
fiaddl
cmpsb
loopne
sbb
sti
sti
sub
scas
wrssd
xchg
cpuid
std
lahf
dec
es
mov
pop
ffreep
fwait
cwtl
sub
shl
mov
scas
out
lea
fdivrp
add
mov
shll
fistl
jmp
je
fildl
mov
dec
xor
orb
jmp
arpl
and
sbb
icebp
mov
inc
pop
cli
cmp
mov
push
shll
add
gs
jae
cmpsl
movsb
jl
movq
mov
call
push
jmp
test
add
fisubrl
ds
mov
mov
ja
mov
and
push
out
jle
jecxz
std
sub
mov
out
pop
add
xor
push
cmp
inc
cmpsb
nop
into
pushf
mov
cmp
xlat
rolb
sub
mov
test
adc
rcr
inc
in
fistpl
mov
out
fimuls
js
mov
sub
bound
dec
pop
pop
addl
and
addb
std
jmp
xchg
cmp
gs
sub
aad
shrb
lods
mov
dec
mov
jl
repnz
loope
cmp
push
mov
xor
push
xor
lahf
pop
lods
jns
xchg
jge
das
mov
out
cli
dec
sub
nop
sub
mov
cmp
inc
les
push
sub
push
sbb
int3
or
sub
jle
adc
mov
and
shl
inc
add
bound
cltd
hlt
ds
cmp
push
mov
pop
pop
pop
dec
out
lret
rorb
hlt
push
inc
mov
adc
rcl
mov
in
push
popf
cs
add
fsubs
sarw
cmp
push
or
mov
cld
ss
dec
add
add
sbb
and
sub
std
mov
ret
nop
jge
mov
int3
mov
icebp
push
xchg
pmaxub
push
mov
shll
int3
push
jp
pop
push
aas
and
dec
outsl
xor
jnp
arpl
lods
sarb
cwtl
xchg
lret
jle
pop
cmpl
mov
repz
repnz
insl
cmp
ljmp
mov
mov
loop
adc
dec
mov
pop
and
or
jbe
rorb
pusha
pop
subl
outsb
mov
mov
adc
movsb
ret
ret
jmp
inc
imul
outsb
inc
fstl
pop
rep
xchg
pop
push
lahf
idivl
out
sarb
push
stos
adc
rcrl
cwtl
rcll
in
add
jbe
adc
mov
mov
mov
adc
repz
ljmp
gs
push
push
push
mov
mov
loope
push
inc
xchg
in
cwtl
sbb
addr16
adc
jbe
push
cmpsb
push
test
jae
pop
and
or
xchg
add
mov
push
mov
popa
sbb
mov
dec
loopne
stos
jo
icebp
jecxz
popf
push
dec
es
sbb
dec
loop
push
inc
rcll
or
push
das
add
mov
add
stos
cmp
les
mov
push
or
es
or
cs
dec
gs
fdivrl
xor
sbb
dec
push
cmp
into
enter
stos
aad
pusha
mov
inc
in
into
jnp
sahf
jl
jg
adc
psubusw
mov
mov
lahf
push
push
xor
pop
icebp
fs
bound
jns
loope
out
fcmovb
cmp
dec
add
cmp
push
popf
nop
stos
push
and
and
adc
popf
inc
push
push
inc
jle
sbb
pop
pop
loope
jne
popf
push
dec
iret
rorl
push
xor
push
xor
incb
ficomps
hlt
insb
jb
dec
push
in
xlat
test
push
jo,pn
push
pop
inc
xchg
sbb
test
jge
data16
dec
sarl
out
mov
inc
mov
push
call
inc
cltd
sbb
sub
sahf
rorl
into
xor
add
xchg
cld
daa
lret
int
pop
jno
movsb
ret
sub
sti
mov
lock
push
or
imul
jg
popf
jmp
inc
popf
sub
cltd
mov
inc
mov
jae
adc
xor
fldl
mov
inc
stc
stc
pushl
inc
in
sbb
test
fisubrs
push
addr16
rolb
xor
push
jmp
cmpsb
insb
inc
jne
imul
mov
or
enter
pop
pop
adc
mov
in
sub
dec
pop
push
jae
push
cltd
adc
mov
movsb
test
adc
pop
fs
adc
fwait
daa
loope
testl
mov
addl
lods
or
movsl
outsb
leave
inc
stos
jno
movsb
fidivl
jne
mov
push
cs
ja
inc
stos
cmpsb
divb
shll
pop
imul
scas
mov
fs
les
xor
xchg
or
jmp
out
push
sub
sbb
aaa
or
pop
imul
or
dec
mov
pop
aas
lds
lcall
stos
out
mov
add
xorb
dec
add
loope
pop
sbb
in
mov
fnstsw
mov
cmp
repnz
mov
es
mov
std
xlat
jp
movsl
jne
push
in
es
mov
addr16
icebp
js
pop
in
bound
adc
sti
sub
in
xchg
popf
call
adc
cwtl
movsb
cmp
out
fstpl
xchg
testb
mov
out
sti
bound
movsl
adc
stc
mov
cmpl
loope
jbe
aam
cmp
jmp
cld
roll
mov
mov
fwait
mov
cmc
cli
ja
mov
add
out
popa
repnz
lea
cmpsl
jg
dec
pop
popf
ja
test
sbb
or
outsb
sbb
lods
pop
jae
rcrb
xor
stos
or
jl
iret
pop
addl
jbe
sbb
adc
add
xlat
je
mov
lds
sti
ljmp
stos
sbb
cmp
xchg
adc
lds
pushf
rorb
sub
aas
aad
pushf
hlt
sbb
cld
dec
es
and
pop
mov
cmpsl
ror
cld
mov
shrb
mov
jb
pushf
lods
rclb
loop
movsl
xor
dec
mov
imul
fsubs
test
loopne
int3
fwait
int3
fwait
scas
pop
test
mov
dec
loopne
and
dec
iret
and
cmp
ret
insb
mov
fidivrs
mov
mov
adc
leave
sub
jg
fwait
mov
inc
mov
xchg
sub
outsl
push
fs
adc
pop
icebp
adc
repnz
arpl
stos
pop
mov
and
xor
das
rcr
adc
jg
add
jnp
lret
cltd
pop
and
xor
inc
mov
mov
aas
pop
lock
loope
das
fs
fstps
sbb
enter
xabort
pushf
pop
iret
cwtl
nop
inc
loop
mov
ds
xor
xchg
les
loop
stc
dec
imul
cmp
mov
or
insl
ss
adc
xchg
aas
mov
ret
cmp
rol
add
enter
or
clc
call
mov
clc
out
lahf
cmp
or
mov
scas
popf
mov
inc
in
jne
movsb
lret
loope
fmull
sub
and
or
add
mov
xchg
das
les
jae
or
pop
xor
dec
xchg
fldt
fs
or
add
js
adc
mov
jge
dec
outsl
sbb
insl
mov
xorb
push
mov
jne
xchg
pushf
dec
lods
inc
jmp
xor
jl
dec
pop
fbstp
pop
insl
cld
aas
aas
cmp
cld
jno
lds
mov
push
outsl
jge
mov
mov
add
rolb
ficoms
push
stc
fs
aaa
xchg
push
adc
jecxz
dec
mov
negl
lods
push
xor
mov
cmc
dec
jecxz
lods
pop
and
cmp
push
add
je
dec
insb
add
movsb
or
sub
data16
test
int
xchg
lods
jb
inc
aad
dec
xchg
dec
cmpsb
mov
lock
hlt
das
sbb
sbb
mov
call
mov
jg
cwtl
mov
stos
mov
cmp
sbb
je
push
es
cmp
out
cmp
xchg
xor
or
push
stos
shll
adc
data16
stos
ja
inc
movsl
and
inc
ds
jae
js
xchg
push
xchg
aas
and
or
sub
hlt
faddp
adc
jle
or
or
ret
jb
div
and
mov
jp
cli
and
adc
insb
dec
cmc
mov
aam
dec
mov
or
mov
and
adc
bound
cmp
mov
push
lods
xor
mov
cld
push
lods
mov
dec
test
pop
cmp
inc
out
fs
xchg
ja
les
testb
sbb
sbb
mov
jge
adc
inc
push
push
pop
sub
jmp
jo
push
testl
out
inc
or
xchg
xor
das
loope
sub
mov
fadds
xchg
dec
out
dec
popa
push
adc
test
mov
xchg
fisubrl
sbb
test
jo
and
or
cltd
push
jno
aam
std
psraw
adc
xchg
jmp
cld
cwtl
out
shl
sbb
lock
push
pop
inc
add
mov
inc
adc
push
xchg
stos
stos
gs
pop
and
push
rcll
lahf
bound
mov
or
mov
sub
or
outsb
pop
cmpsb
add
je
dec
xor
or
shrl
in
inc
cwtl
in
mov
xchg
mov
ss
leave
jnp
mov
cmp
test
pushf
dec
div
std
mov
cmp
movsl
lcall
fnstsw
sub
test
or
xor
es
test
mov
fmuls
cmpsl
ds
adcb
dec
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
popa
cltd
cmp
lret
cmpsb
mov
push
ljmp
jne
jo
dec
in
xchg
es
jns
ljmp
int3
sbbl
imul
jmp
dec
lcall
data16
ss
xchg
push
ljmp
jno
shufps
xor
loope
subl
pop
or
loope
pop
adc
lods
fs
xchg
into
and
pushl
inc
fistl
cmp
icebp
mov
les
imulb
movsb
cmp
jno
xor
dec
pushf
push
mov
test
mov
fcoms
cmc
mov
int
sub
xchg
dec
jmp
jle
xor
out
or
cmp
daa
mov
lea
fdivl
and
xchg
arpl
movb
inc
xor
sbbl
xchg
lahf
ss
test
jle
lea
lcall
and
jg
cld
xchg
outsb
mov
cmpsb
cmp
and
js
add
es
pop
lahf
pop
repz
mov
fcompl
add
es
pusha
nop
fidivl
addl
add
aaa
mov
jno
or
int3
jb
jnp
in
mov
pop
into
pusha
div
cmp
popa
sbb
cmpsl
mov
fdivrl
mov
test
popa
or
movsl
xor
fidivs
fucomp
jg
scas
xchg
push
cli
pop
cmc
and
lods
inc
out
jle
test
clc
lahf
push
mov
sbb
dec
adc
cwtl
sahf
xor
mov
mov
xchg
sub
xor
pop
cmc
add
lea
cli
xchg
pop
scas
inc
jle
jne
clc
xchg
repz
add
dec
popf
push
lods
outsl
daa
mov
and
mov
jl
mov
pop
pusha
inc
xlat
cltd
call
loopne
in
ret
push
inc
fdivrs
mov
xchg
mov
flds
cwtl
in
mov
inc
jg
cltd
test
sbbb
leave
cs
cs
inc
fimull
pop
inc
insl
stc
xchg
popa
stc
lcall
push
in
jg
dec
push
jg
inc
insb
xchg
xchg
popa
jle
fwait
mov
mov
in
jnp
dec
push
sti
xchg
inc
insb
stos
inc
xchg
popa
stos
inc
fwait
mov
dec
icebp
mov
iret
dec
push
iret
inc
insl
mov
xchg
popa
ss
mov
jmp
in
jae
cmp
pop
lcall
test
outsl
push
out
inc
dec
sub
ja
scas
inc
mov
inc
loop
mov
and
and
rcrb
or
adc
pop
icebp
insl
mov
popa
mov
lret
bound
ficompl
mov
das
pop
pop
and
push
pop
jp
movsb
jg
mov
dec
fwait
xor
and
imul
decb
std
xchg
movsl
outsb
ljmp
mov
stc
pop
add
out
jp
mov
mov
cmp
test
in
dec
hlt
stc
cs
inc
xchg
push
xor
mov
mov
lahf
dec
notl
dec
xchg
push
and
out
scas
push
call
aaa
cli
mov
out
inc
mov
mov
mov
inc
fisubrs
std
cmp
and
inc
mov
shll
and
sub
and
js
pop
lock
mov
ret
cmp
jecxz
push
sbb
test
jmp
dec
stc
jae
aaa
into
mov
sub
lret
rcrb
pop
das
es
aaa
mov
jo
and
mov
ret
cld
out
dec
loopne
push
lods
inc
dec
cmp
popa
xchg
test
pop
mov
loopne
stc
sbb
lret
bound
fsubl
sub
xchg
mov
add
shll
les
and
xchg
jp
cld
movsb
mov
inc
lock
mov
jb
and
add
mov
xor
les
mov
adc
mov
and
ds
push
in
inc
pop
lods
inc
mov
cmp
mov
insb
add
arpl
xor
push
push
cmp
mov
mov
or
cmc
pushf
xor
dec
sub
jne
and
shrb
inc
sub
mov
jp
inc
lods
inc
jg
insb
add
lahf
arpl
in
jp
call
sub
jns
mov
sbb
mov
mov
mov
jl
dec
jecxz
popf
lods
inc
jnp
cmp
rolb
cwtl
or
pop
sub
pusha
xchg
insl
mov
int
mov
ficompl
xchg
push
xor
cwtl
push
mov
rol
in
repnz
je
adc
hlt
inc
cmp
push
xchg
xchg
cmc
mov
mov
dec
in
outsl
push
and
in
xor
jo
push
insl
test
cmc
mov
in
mov
cmp
add
test
cmp
pop
add
lds
push
push
jmp
jg
push
lods
movsl
jbe
ror
mov
cli
xrelease
sub
pop
dec
dec
movsb
cmp
shlb
lahf
mov
fwait
ljmp
lods
cmp
lock
cmp
xchg
or
out
lret
adc
dec
in
xor
ja
mov
lcall
cld
test
das
addr16
loop
jnp
scas
inc
mov
pop
or
adc
pop
inc
xor
xorb
mov
pop
in
rcr
or
add
imul
xor
or
sub
lret
enter
cmp
and
fsubs
mov
jo
pop
out
mov
in
ret
fildll
add
adc
pop
inc
inc
in
jne
inc
stos
lods
outsl
stc
rol
aam
cld
std
jnp
and
add
and
mov
sub
test
add
cmp
push
outsl
clc
mov
jge
jbe
sub
mov
dec
mov
jge
lcall
out
cmp
in
jb
aaa
mov
movsb
outsb
xchg
jbe
xorb
mov
shll
push
es
pop
and
push
stos
jno
fs
nop
ss
loopne
xchg
and
and
jno
icebp
xchg
popf
lahf
push
hlt
shll
and
add
fiaddl
stos
dec
push
js
repnz
loopw
movsb
test
pop
mov
push
add
mov
mov
cs
lret
add
cmp
ljmp
jp
mov
adc
or
sub
pop
ret
jo
stos
lock
sbb
iret
xor
and
pop
dec
pop
xlat
subb
popf
xorb
ljmp
adc
ss
in
arpl
adc
pop
adc
inc
and
push
xchg
xchg
sti
jle
mov
push
faddp
jmp
pop
sub
pop
mov
jge
inc
lock
cmp
rclb
je
inc
out
in
xchg
pop
and
jne
aam
out
push
ffreep
sbb
scas
xor
dec
jmp
push
cmp
subl
adc
int
dec
add
fstps
cwtl
mov
int3
scas
loop
fucomi
lods
cmp
cmc
sti
xchg
inc
mov
mov
xchg
int3
pop
iret
mov
lock
and
pop
out
push
sti
xorl
pop
pushf
cmpsl
fwait
and
cmc
adc
aas
aaa
and
mov
adcb
cmp
rcll
add
xor
push
jp
or
int
daa
enter
sbb
sub
lahf
insl
andb
mov
ds
outsb
sub
bound
pop
fnstenv
dec
out
sub
test
pop
mov
mov
lods
adc
jbe
aad
dec
incb
xchg
test
je
pop
push
loop
test
jg
mov
and
imul
jecxz
loop
pop
sub
jg
adc
pop
jnp
adc
mov
int3
xchg
sub
ret
mov
or
sti
xchg
bound
leave
pusha
pop
sbbl
mov
jmp
rolb
rorb
mov
pop
and
ret
jnp
lods
jbe
call
dec
imul
and
push
push
sbb
popa
movsl
outsb
mov
mov
shr
repz
rorb
cmp
or
fbstp
mov
mov
cmp
or
xchg
pop
insl
mov
popa
out
hlt
mov
or
cmpb
adc
mov
movb
dec
loopne
incl
xor
outsl
push
sub
pop
hlt
orl
jg
jae
mov
rcrl
stc
nop
es
mov
jns,pn
sbb
dec
lret
out
mov
push
inc
fnstenv
cmp
mov
mov
test
cmpsb
mov
adc
stc
pop
xor
mov
dec
loop
fstl
push
lea
mov
loopne
and
fisttps
inc
bound
scas
inc
pop
adc
les
addr16
in
pushf
sub
add
cmpsl
cmp
mov
shrl
xchg
or
mov
out
jecxz
je
cmpsl
ds
xchg
icebp
mov
fcomps
mov
into
jecxz
adc
das
cmp
repnz
pop
bnd
and
in
xor
xlat
add
arpl
push
cmpsb
cmp
les
ja
shrb
cwtl
in
adc
repz
mov
adc
push
scas
lods
inc
popa
jae
xor
test
data16
mov
lea
add
xchg
aaa
push
adc
xchg
xchg
sub
ljmp
dec
dec
pop
out
jo
arpl
mov
xchg
aad
xchg
sub
adc
inc
xlat
pop
or
int3
jge
jmp
in
lret
bound
mov
push
popf
xor
jl
adc
mov
and
lahf
xchg
shrl
inc
shrl
in
push
cli
es
out
fidivrl
mov
arpl
ljmp
ret
rep
insl
adcb
pop
inc
testl
jg
dec
cmp
rcrl
pop
mov
lea
ss
add
je
cwtl
and
push
int3
adcl
loopne
icebp
xor
and
out
mov
icebp
aad
mov
push
out
cmpsb
in
jno
enter
aas
clc
jno
nop
daa
lea
popa
clc
js
cmpsl
lods
adc
aas
dec
xor
lock
push
push
call
or
mov
or
inc
pop
sub
lea
popa
xchg
scas
dec
loopne
mov
jle
add
add
mov
test
outsl
mov
shrl
cli
xchg
sub
xchg
sub
mov
jmp
lret
add
sbb
in
test
stos
mov
fisttpll
je
xor
add
dec
test
shrl
lods
xor
fisttpll
push
lahf
sub
and
dec
mov
pop
jmp
push
pop
inc
jle
adc
lods
repz
adc
daa
push
push
mov
dec
in
sbb
push
pop
arpl
xor
xlat
hlt
bound
cmp
data16
test
jp
mov
dec
cmc
mov
into
mov
dec
fdivrs
loop
and
into
out
pop
jnp
jnp
pusha
jg
mov
scas
and
push
cs
outsb
mov
mov
mov
imul
sub
cmp
sbb
xor
mov
mov
xchg
adc
ret
jne
fcomip
fistpll
xor
push
hlt
and
mov
jno
and
call
push
in
stc
clc
mov
jge
das
sbb
xchg
xor
fwait
pop
adc
push
test
mov
inc
sbb
cltd
sub
fcomp
and
add
orb
xchg
lret
fdivl
mov
call
test
jo
pushf
ret
hlt
fisttps
push
adc
repnz
mov
pop
sub
shrl
pop
jecxz
dec
pop
pop
repz
mov
lcall
and
dec
cli
jl
shrb
push
in
inc
insl
stc
pop
insl
repnz
mov
push
out
mov
icebp
inc
inc
mov
insl
pushf
xor
jge
mov
or
test
xchg
sbb
pop
scas
xor
mov
cmp
lret
inc
lods
stc
sbb
pusha
jb
push
pop
xchg
add
dec
mov
cmp
pop
xor
out
lods
pop
popa
clc
mov
push
popf
xlat
and
cmp
shrl
ret
inc
fisttpll
mov
imul
stc
pop
sub
push
je
mov
dec
mov
sti
ljmp
dec
pop
jnp
sbb
inc
xchg
popa
clc
ret
test
mov
jmp
popf
sbb
pop
scas
call
jmp
stos
fisttpl
adc
sbb
adc
push
push
lods
dec
and
mov
adc
adc
loope
outsl
push
or
mov
shlb
mov
call
jmp
test
mov
mov
roll
popf
add
adc
cmp
or
cmpsb
je
lods
data16
js
and
pop
fwait
adc
stos
dec
and
idivb
adc
push
scas
and
stos
and
lods
xchg
ret
mov
mov
push
and
lods
mov
stc
and
test
inc
mov
adc
xchg
lret
mov
mov
sbb
test
and
lods
xchg
arpl
mov
rclb
icebp
and
xor
lds
rcrb
mov
jne
jp
inc
insl
or
mov
arpl
mov
out
test
mov
fimuls
add
xor
mov
pop
stc
nop
cmp
imul
into
gs
cmp
and
fidivs
aad
push
xchg
jns
leave
add
push
mov
jbe
push
imul
mov
cmc
mov
xchg
adc
stc
nop
adc
clc
inc
cmp
xor
cli
xchg
shlb
jne
in
outsb
add
insl
sbb
push
mov
int
aas
mov
mov
pop
cmc
pop
xor
cld
cmpsb
jno
nop
mov
int
xor
dec
sbb
rorl
jge
cli
fnsave
aad
ljmp
push
ficompl
push
mov
sbb
push
cltd
leave
cld
xchg
mov
mov
cli
xchg
cmp
push
popf
xor
fnstsw
ror
mov
shl
adc
rolb
sarl
mov
jns
mov
mov
and
mov
aam
inc
pop
cmc
js
cmp
jle
stc
nop
lds
aam
in
sahf
xor
popa
cmp
shrb
cmp
push
test
jne
xchg
inc
flds
dec
cmp
cmp
push
mov
cmp
fisubrl
lods
ds
fistps
punpcklwd
push
daa
stc
nop
pop
xchg
cmp
movsb
push
sub
dec
into
cmp
add
fidivs
pop
sub
dec
jbe
adc
ret
hlt
push
sub
inc
push
mov
aad
jns
hlt
test
sar
repz
aam
sbb
lret
adc
aad
sahf
xor
aad
adc
aad
fwait
xor
lods
adc
aad
fwait
xor
sbb
lret
cmp
jno
cmp
mov
lods
fidivl
aam
adc
dec
ja
cmp
sbb
popa
sub
stos
pushf
mov
inc
mov
stos
dec
loope
dec
sti
xchg
xchg
dec
jmp
cmp
sub
rclb
sub
sarl
jae
adc
jnp
int3
aam
add
out
mov
adc
stos
xchg
push
xchg
aam
aas
mov
cmp
xor
xchg
push
fsub
jge
inc
pushf
xor
lods
cmp
in
and
mov
mov
jp
xchg
das
pop
negb
fsubrp
adc
mov
xor
sub
mov
mov
pushf
xor
xor
mov
mov
fdivl
push
mov
dec
cli
jnp
sub
inc
sbb
jne
repnz
popf
mov
xor
call
xor
nop
xor
xchg
addr16
je
pushf
xor
pop
jb
js
cmp
sbb
sbb
jae
insl
fwait
xor
jnp
mov
sbb
adc
xor
mov
mov
test
jecxz
xor
xchg
push
sbb
mov
sub
cs
jae
test
pop
adc
add
cmp
pop
inc
or
stos
xor
adc
test
stos
sbb
push
mov
dec
mov
scas
inc
xor
dec
out
xor
adcb
cmpsl
adc
and
inc
sub
clc
xchg
mov
inc
sti
xchg
cs
insl
push
mov
out
xchg
cs
adc
mov
fwait
add
fnstenv
jne
mov
push
jg
inc
xchg
xchg
sub
sahf
cmp
mov
mov
xchg
jmp
add
mov
lea
fidivl
push
pop
mov
icebp
jge
and
sbb
in
mov
xchg
fninit
pop
icebp
adc
fdivl
cmp
xchg
insb
iret
cmp
mov
mov
cmp
or
lds
mov
jge
mov
aad
mov
pop
jg
dec
sub
gs
add
repnz
sar
repz
and
dec
cmpsb
add
xchg
pop
fnsave
fdivl
popl
lcall
jl
dec
mov
mov
hlt
jg
out
mov
in
sbb
or
mov
test
shlb
sahf
sbb
dec
fldl
int
hlt
mov
xchg
sub
ret
mov
xor
imulb
imul
fstps
leave
or
stos
cmp
mov
mov
xchg
jno
scas
push
ljmp
hlt
mov
popfw
xor
inc
xchg
sub
jno
setle
rorb
cmc
inc
cli
shrl
test
jbe
pop
lock
jmp
xor
cld
mov
das
and
xchg
inc
push
ljmp
hlt
mov
add
jno
xchg
sub
inc
xor
jne
pop
icebp
push
popf
shrl
cwtl
mov
or
dec
gs
cmp
stos
data16
dec
ret
mov
std
and
push
ljmp
hlt
mov
dec
loopne
adcl
jp
xor
adc
loopne
cmp
push
sahf
xchg
adc
data16
inc
sar
xchg
add
fwait
xor
gs
out
ja
shll
iret
push
pop
repnz
sub
rorl
mov
pop
pop
hlt
ja
mov
sub
pop
repz
insb
pop
icebp
pop
fs
xchg
xchg
popf
xchg
sub
rcrb
sbb
dec
inc
xchg
sub
arpl
jb
xor
movsb
mov
xchg
sub
sbb
dec
sub
pushf
popa
xchg
sub
mov
dec
out
lcall
fs
test
sbb
cmp
sub
sub
stos
sub
xor
loope
xchg
xor
xchg
sub
outsb
add
push
mov
fisttpl
cmp
adc
pop
xorb
mov
mov
cmp
mov
sti
xchg
es
in
push
dec
pop
lods
jns
jne
pop
cltd
xor
leave
jnp
sub
mov
std
ds
insb
push
mov
mov
leave
adc
pop
pop
sbb
jnp
jne
out
aad
cltd
add
imul
sbb
aad
jbe
aas
test
pop
repz
leave
pop
sti
sbb
dec
sbb
jl
insb
cltd
xor
mov
and
inc
adc
inc
gs
mov
mov
jl
jmp
or
out
push
cmp
test
and
adc
xlat
lods
inc
enter
test
enter
mov
js
negl
sub
pushf
pusha
inc
std
xchg
je
and
rolb
iret
aaa
cli
cmp
in
inc
fidivl
cmpsb
jne
sbb
mov
push
mov
add
mov
push
mov
in
test
std
xchg
adc
fnstenv
push
inc
xlat
inc
mov
mov
rcrl
mov
cmc
jge
out
mov
and
cmpsl
adc
xchg
add
int3
arpl
sub
xchg
jmp
ds
sbb
mov
fnstenv
lret
inc
fnstcw
mov
sbb
lahf
int
push
fiadds
icebp
dec
adc
sub
sarl
xor
not
imul
sbb
xchg
mov
jo
leave
cmp
mov
mov
sbb
mov
movsb
cli
xchg
pop
mov
cmp
dec
push
xchg
cmp
cltd
xor
mov
push
pop
or
inc
fisttpl
adc
cld
movsb
cmpsl
xlat
inc
pop
lock
das
hlt
cli
xchg
out
xlat
outsb
jns
inc
fcmovnu
xchg
jo
ret
push
jle
sub
ret
cmp
push
std
xchg
inc
test
mov
sub
cmc
loopne
inc
adc
jp
ljmp
inc
fiaddl
cli
xchg
mov
mov
adc
sub
mov
stos
jge
sbb
sub
mov
xchg
and
aaa
into
pop
and
xchg
je
cmpsl
aam
adc
iret
addr16
incl
mov
jns
add
outsl
outsl
cmpsb
cmp
pusha
leave
inc
fdivr
jbe
adc
inc
cltd
mov
or
and
lret
sti
fistps
iret
adc
arpl
cmp
out
insl
imul
pop
sbb
call
add
xor
inc
mov
ss
sbb
xchg
sub
hlt
mov
es
hlt
mov
push
sub
orl
fisttpl
aas
rep
add
dec
or
cbtw
lods
inc
lret
rorl
in
loop
cmp
in
xorl
adc
pushf
mov
into
add
jl
call
mov
divl
lret
bound
mov
add
aad
mov
xorb
inc
bound
dec
loop
push
jb
dec
fsubr
orl
out
insl
and
and
mov
push
subl
xor
lret
bound
inc
xchg
aaa
sub
inc
push
in
aaa
je
mov
aaa
int
inc
incl
cmpsb
aaa
pop
dec
jecxz
inc
sbbb
jmp
xchg
dec
into
gs
dec
rcrl
sub
dec
push
mov
bound
mov
mov
mov
or
stos
inc
xchg
mov
mov
mov
dec
mov
mov
cmp
push
ds
mov
mov
scas
cmpsl
and
call
sti
pop
pushf
xor
test
rcr
fnsave
fnsave
mov
adc
lods
sbb
xor
daa
loope
decb
hlt
nop
std
es
mov
fidivs
clc
pop
lock
es
xor
pop
push
aam
jae
jge
or
push
es
inc
fcmovbe
jl
jno
icebp
mov
outsl
mov
lea
jo
test
add
xchg
or
cmp
inc
dec
out
cmp
ljmp
mov
jl
and
xchg
cltd
mov
iret
fsubr
or
ja
inc
nop
ret
call
push
in
test
sbb
aaa
jle
mov
xchg
jae
push
fs
pop
repz
cld
xchg
xor
xchg
pop
pop
fwait
xor
test
rcr
dec
das
cmp
cmp
jl
subb
mov
pusha
add
and
xchg
cs
dec
sub
cmp
insl
stos
loop
xor
ds
jo
testl
add
jl
sbb
push
lods
cmpsl
xor
mov
xlat
ret
pop
enter
mov
aad
repnz
pop
std
xchg
nop
xor
xchg
bound
fwait
xor
xlat
cmp
or
sub
cltd
jge
adc
enter
sub
xor
inc
jmp
dec
loope
jmp
in
test
in
outsl
push
filds
mov
xor
and
out
scas
inc
loopne
lret
fsts
stc
test
insb
jecxz
shl
ja
dec
jmp
jle
pop
cmc
test
fidivs
loope
bound
adc
test
insb
add
fsubrs
xchg
mov
dec
fildll
insl
cmp
push
push
jmp
mov
enter
mov
adc
sub
imul
fsubrl
xchg
int3
inc
push
lock
or
jne
lods
inc
movsb
test
aad
into
dec
loop
add
in
test
mov
imul
xchg
push
adc
mov
sub
bound
push
xchg
inc
push
insb
add
stos
or
loope
lods
inc
sub
movsl
cmp
inc
dec
loop
adc
in
add
rcrl
mov
mov
inc
jb
cltd
xor
pushf
dec
loop
sbb
stos
mov
in
adcl
popf
xor
aas
mov
jno
adc
lret
xor
in
bound
sbb
stos
mov
add
fdivp
mov
fwait
or
je
lods
inc
adc
cmp
xchg
sub
in
cmpl
mov
pop
dec
push
in
cmp
sub
pop
xor
gs
pop
scas
js
imul
dec
push
xsha1
cmpsb
dec
adc
repz
cltd
loope
mov
loop
sti
xchg
rorb
cmpb
in
xlat
pop
mov
mov
cmp
dec
jne
pop
jp
push
pop
jns
lea
mov
inc
xchg
sub
repnz
sbb
dec
pop
cmc
jge
push
in
push
xchg
stc
nop
enter
dec
loop
xor
add
cmp
jo
std
xchg
movsl
pushf
cmc
mov
aad
popa
call
inc
fdivrs
xor
pop
insb
mov
imul
mov
test
inc
jle
dec
mov
cld
xchg
cmc
fsts
or
aam
ljmp
rcr
jl
imul
into
aaa
into
shl
sub
add
dec
ja
xor
push
imul
hlt
lahf
sub
nopl
dec
lods
inc
inc
jp
jp
test
ret
test
or
mov
and
mov
jbe
les
inc
mov
xor
cmp
shrl
mov
iret
addr16
cltd
ljmp
sbb
pop
mov
nop
or
mov
adc
rcrl
mov
inc
test
test
sub
test
cmpsb
test
sub
and
and
jle
mov
insl
lds
les
rclb
ret
pop
insb
ss
out
addr16
sub
adc
ret
in
xchg
push
cmpsb
sub
sbb
and
popf
test
lds
popa
ret
cmp
jle
jae
les
jb
mov
fistl
add
insb
sub
xor
mov
test
clc
and
cmc
das
push
or
cmc
leave
test
dec
xor
xchg
xchg
aad
cmc
movsl
xor
xor
jne
in
xor
adc
push
push
popa
test
or
movsb
ds
xchg
sbb
or
lock
ss
out
mov
mov
loope
loop
mov
fidivs
shrl
stos
les
hlt
push
cmpsb
ret
jge
and
push
jmp
lret
xchg
outsb
je
and
adc
or
outsb
repz
cmc
and
je
jns
adc
cs
xchg
lret
daa
add
fldenv
js
mov
inc
pop
xchg
adcl
adc
sub
and
sbb
sub
dec
inc
ss
cmp
jae
ret
pop
aas
arpl
or
lock
rcrb
les
movsl
push
repz
jg
mov
xchg
and
xchg
jle
inc
mov
sub
sbb
dec
lret
mov
mov
mov
push
leave
mov
push
rcr
mov
wrmsr
into
sub
jmp
mov
jecxz
xor
pop
mov
or
pop
je
xor
lds
dec
cmp
mov
and
lcall
repnz
jae
inc
rcr
or
rcr
push
int3
xchg
mov
jge
mov
push
cli
sub
and
repz
inc
mov
lret
ret
stos
loop
and
jno
inc
jmp
inc
adc
pop
jmp
xchg
sbb
mov
push
loop
mov
aaa
lods
lret
repz
push
dec
mov
repz
imul
mov
jns
and
test
inc
pop
out
sub
enter
jbe
jle
out
sbbl
mov
and
and
ja
dec
in
cwtl
mov
add
jmp
push
sbb
fdivl
push
test
fcoml
leave
pusha
das
in
scas
push
push
out
xorl
int
movsb
add
jmp
mulb
mov
push
stc
lret
bound
ja
sub
lret
cld
lahf
pop
sahf
rcrb
and
test
jge
cltd
scas
push
arpl
aas
iret
and
xchg
and
aad
mov
xor
pop
jb
mov
adc
loopne
xor
in
nop
daa
xor
push
out
push
scas
call
inc
inc
sahf
js
fsts
xchg
inc
sub
inc
pop
popa
push
mov
jg
arpl
outsl
and
mov
adc
loope
xor
loope
nop
daa
xor
push
out
push
scas
jmp
push
test
scas
fnstcw
jne
jno
xor
sub
dec
push
ljmp
pushf
xor
imul
mov
and
dec
pop
out
jns
test
or
xchg
in
adc
push
mov
xor
jno
add
out
pop
and
push
mov
fsub
aaa
mov
imul
sub
mov
enter
or
cmp
lcall
xchg
cmp
mov
int
fists
cli
xlat
pop
sbb
frstor
aad
insb
xchg
push
fldl
repz
fs
pop
cmpsb
cmpsb
dec
out
pop
in
adc
jge
mov
fstpl
aam
xor
repnz
adc
cmc
mov
xchg
xchg
cs
sub
stos
pop
ljmp
scas
cmp
dec
out
xchg
icebp
mov
and
push
in
cmpsb
adc
ss
inc
cli
mov
mov
fisubrl
or
out
mov
ret
repz
inc
rol
pop
add
es
pop
mov
call
xor
sbb
loope
shll
or
xchg
popa
adc
out
dec
sahf
sbb
das
and
imull
mov
xchg
bound
pushf
and
push
sub
adc
dec
sub
lods
mov
das
nop
repnz
stos
push
inc
mov
add
xlat
sub
rclb
ficomps
add
xchg
test
sub
test
int3
sub
dec
cwtl
pop
je
xor
jmp
sub
adc
out
hlt
jl
imul
and
sti
cmp
push
mov
push
mov
push
icebp
cwtl
outsb
into
lahf
push
xor
pop
popf
pop
fstpl
int
push
outsb
mov
fnsave
adc
jg
jecxz
xchg
adc
add
scas
push
mov
fsts
push
pop
pop
testb
jnp
faddl
xor
fdivl
dec
jg
shrl
pushf
aad
iret
mov
gs
cmc
mov
cli
in
xchg
cmp
stos
imul
lret
sub
lret
fstl
or
xor
arpl
push
jno
xchg
sub
aam
dec
push
out
inc
sbb
mov
adc
mov
insb
adc
iret
inc
mov
and
jae
andb
iret
lock
stc
pop
jbe
adc
imul
push
test
pop
xchg
in
inc
pop
mov
mov
xchg
in
les
test
inc
sub
in
jecxz
rolb
hlt
pop
sub
cvtps2pd
aas
push
push
xchg
in
ror
lret
pop
stos
push
or
xor
sbb
stc
mov
mov
imul
mov
push
popa
aam
ret
cmpsl
xor
rorl
loopne
fdivl
lods
das
jle
in
push
idivl
dec
sahf
ss
gs
cltd
notb
mov
mov
sub
adc
dec
movsl
mov
in
lret
sbb
pop
and
and
scas
jmp
repnz
nop
sbb
pop
jge
divb
jnp
mov
mov
or
pop
push
out
les
aaa
add
les
jnp
lock
ss
or
mov
jne
negb
adc
jne
test
les
or
push
pop
cmp
les
or
mov
clc
pop
inc
mov
mov
adcl
fcmovnu
stos
cmp
mov
fsubl
xchg
add
or
call
inc
mov
pop
int3
sti
addl
lret
mov
movsl
jle
ficoml
mov
jae
lods
stc
imul
adc
sub
or
leave
push
or
das
arpl
fsubrl
and
cmpsb
inc
fimuls
xchg
insb
mov
push
cmp
sbb
cvtdq2ps
lahf
ja
cs
mov
lods
push
pop
lahf
pop
loop
jg
xchg
xchg
mov
icebp
add
xchg
lods
mov
mov
inc
xchg
or
outsl
js
fprem1
jnp
jae
loope
sub
cs
jnp
inc
imul
ret
dec
insb
or
mov
ret
jnp
rolb
and
push
add
jb
dec
mov
loop
loop
jb
jnp
xchg
push
dec
rcrl
push
xchg
data16
ret
and
mov
ss
add
pop
out
ret
xchg
repz
add
add
js
sbb
push
lods
call
rorb
aaa
cmpsb
or
gs
sbb
rcl
inc
lahf
cmp
dec
bound
and
mov
lods
nop
sub
roll
push
pusha
lock
arpl
push
push
mov
gs
mov
ss
sub
out
jp
fidivs
outsb
sub
xor
sbb
lea
push
xchg
pushw
leave
and
es
inc
mov
adc
sub
sub
inc
pop
popf
add
repnz
pop
clc
pop
mov
fnstsw
xchg
fistpll
push
cs
mov
and
push
push
mov
jmp
sub
je
cmpb
xor
cmp
daa
lret
xchg
aas
loop
adcb
adc
mov
push
xor
leave
mov
xchg
aas
addr16
lret
and
out
sub
push
mov
loopne
vhsubpd
dec
push
movsl
and
sub
adc
fbstp
sbb
inc
stos
scas
add
fnsave
or
and
dec
jbe
sbb
and
sub
ds
jo
out
jns
cmp
xor
push
std
loopne
push
lock
in
add
sti
out
cmp
sub
xchg
add
icebp
mov
ss
cmp
adc
loope
fs
adc
filds
mov
rolb
das
add
xchg
inc
repnz
fdivr
adc
fiadds
and
mov
mov
ret
sub
pop
mov
mov
popl
aam
xor
push
les
mov
mov
mov
idiv
jle
mov
add
push
scas
add
mov
rorl
lret
arpl
jmp
jne
xchg
clc
dec
adcb
cli
pop
or
mov
fcoms
xor
test
pop
clc
mov
rcrb
cmp
mov
dec
jmp
sub
scas
pusha
sahf
jmp
pop
xchg
sub
lock
es
rcrb
sti
lret
aas
in
mov
and
xor
rep
jo
mov
insb
dec
popl
insl
clc
fucomip
cli
or
fwait
mov
stos
xor
repnz
popf
imul
push
adc
outsb
data16
sbb
mov
jae
dec
mov
pop
testl
pop
ss
shrl
dec
adc
add
pop
push
test
pop
xchg
outsb
push
test
sti
test
xchg
or
gs
or
pop
shll
dec
and
mov
jmp
adc
shl
sbb
xor
leave
push
dec
mov
div
and
movsl
test
mov
xchg
aas
add
add
ja
mov
xor
cmp
in
mov
sub
sbb
aad
popf
mov
jae
cmpb
outsb
xor
loopne
cmp
mov
sar
dec
stc
leave
pop
sub
sbb
dec
inc
mov
testb
push
movsb
pushf
xchg
pop
gs
jg
add
das
lods
js
inc
test
es
out
xchg
xor
jnp
inc
pop
js
xchg
xchg
cs
addl
ljmp
lcall
icebp
fwait
dec
in
push
push
and
lea
mov
mov
lds
lcall
add
xchg
adc
imul
aas
jnp
mov
jbe
xchg
dec
lret
in
cmp
jge
shld
xchg
sub
mov
test
add
shlb
add
add
and
xchg
xlat
add
mov
fdivl
aas
jecxz
sti
dec
mov
dec
js
xchg
sub
cmc
dec
in
push
lods
out
pop
stos
add
ss
mulb
or
pop
jo
aas
bound
insl
add
test
xchg
lods
icebp
out
test
xchg
sub
insl
aad
pop
sub
gs
xchg
nop
or
pop
scas
in
dec
in
push
ss
pop
insb
add
mov
and
stos
sbbl
sub
lahf
xor
jno
push
mov
iret
movsb
lock
lods
and
stc
nop
sub
scas
je
pop
cmp
rorl
lds
sub
push
outsl
scas
rcrl
fisttpl
mov
mov
cmp
mov
outsl
pop
push
xor
sahf
pop
add
cmp
popf
lea
mov
dec
push
aaa
cmp
jb
jle
inc
xchg
pop
mov
fs
xor
mov
pop
repnz
mov
mov
fcoml
lods
jecxz
mov
popa
add
lret
xor
push
push
jmp
pop
test
pop
cld
mov
lods
dec
lods
inc
or
lret
pop
push
push
cmc
call
pop
movsl
dec
push
popf
jns
cmpsb
cmp
lret
sbb
pop
dec
in
inc
fstps
ds
imull
add
subb
pop
xchg
lahf
loope
xchg
outsl
daa
mov
jle
aaa
mov
rcl
insl
dec
inc
les
in
pop
aas
push
aad
mov
jo
lods
rolb
mov
leave
or
cmpsb
ss
loopne
inc
fdivrs
push
enter
lret
mov
in
mov
mov
test
test
cltd
std
xor
nop
push
shr
mov
in
jns
or
cs
cs
pop
mov
dec
mov
fidivl
aam
push
add
nop
xor
icebp
mov
pop
scas
test
cmpsb
stos
movsl
xor
std
notl
sub
dec
jecxz
dec
jno
jnp
push
mov
les
inc
and
cmpsl
ds
inc
lret
bound
pop
popf
xchg
jmp
jp
call
add
imul
mov
mov
fisubs
wbinvd
pop
hlt
cmp
jg
add
mov
adc
jns
or
lods
inc
sub
bound
fsts
in
cmpsb
cmp
pop
pushl
add
adc
and
mov
movsl
out
pop
mov
and
test
lret
mov
fldl
into
dec
push
movsl
ja
nop
daa
loope
in
test
das
jae
iret
and
inc
fdivr
daa
or
ret
mov
xor
stos
dec
push
out
cmp
dec
out
pop
scas
inc
dec
ss
pop
jo
add
mov
inc
test
mov
pop
xor
out
test
sub
xchg
cmp
xchg
lods
xor
stos
jo
xor
mov
loopne
jb
ljmp
in
mov
out
js
fs
out
imul
test
jne
sub
fistpl
mov
mov
push
push
jmp
lahf
sub
jae
iret
insl
cli
js
pop
push
cmp
out
or
rcrb
rcrl
stc
bound
fwait
xor
enter
scas
inc
adc
mov
and
jp
push
insb
xchg
repz
lea
jmp
cld
xchg
and
mov
imul
adc
push
pop
data16
dec
test
dec
in
xchg
mov
mov
xchg
orb
push
and
xchg
add
push
inc
mov
push
es
mov
inc
pop
sub
dec
jno
mov
pop
push
iret
xchg
subb
icebp
cmp
mov
test
cmp
cmp
push
in
add
mov
cmp
mov
ficoms
ror
icebp
insl
jecxz
fidivs
add
jbe
aas
push
jno
add
jle
sub
lock
mov
sti
push
das
movb
mov
push
push
fsubrs
dec
sbb
sti
daa
daa
mov
lea
and
and
or
xor
pop
icebp
add
cltd
inc
lods
sbb
pop
jl
icebp
mov
dec
add
mov
and
nop
add
mov
mov
push
and
add
ss
add
scas
out
in
push
in
test
mov
jl
mov
sub
mov
push
and
sub
mov
mov
testb
cmp
aaa
into
dec
data16
pushf
imul
gs
mov
or
xchg
sub
aam
mov
xchg
xchg
testb
bound
xchg
xchg
dec
add
mov
sub
stos
imul
fidivrs
cmpb
sarb
add
mov
stos
mov
loopne
fidivs
mov
jl
push
out
xchg
lods
inc
mov
filds
std
fwait
xor
repnz
testb
and
xchg
mov
js
sub
fwait
cmp
jo
inc
fsubrs
dec
ljmp
bound
in
jne
dec
mov
mov
imul
mov
je
cmp
push
add
fdivl
stos
mov
mov
push
inc
pop
xchg
mov
mov
pop
js
mov
mov
pop
add
cmpsb
cmp
fidivs
mov
movsb
inc
testb
push
insl
add
xor
mov
xchg
cs
pushl
js
mov
repz
jns
or
xchg
pop
xchg
sub
sub
imul
fnstenv
pop
insl
add
fcomi
mov
stos
xor
ds
sbbl
sbb
rorb
pop
icebp
sbb
ds
cmp
das
scas
xor
mov
shl
xchg
loop
mov
lock
nop
daa
out
and
js
xor
mov
test
or
cmpsb
push
sub
addr16
jge
sub
pop
hlt
mov
adc
ret
fwait
xchg
sub
in
vmovdqa
sahf
lcall
dec
push
or
jns
jnp
sub
jge
add
loop
mov
shll
xchg
rorl
les
push
gs
or
and
jmp
or
jle
fwait
xchg
sub
pop
lock
and
arpl
add
cmp
arpl
aad
push
or
test
fsubs
mov
jmp
cmpsl
orl
movsb
pop
sahf
ret
idiv
xchg
sub
lds
lds
sahf
mov
out
in
clc
mov
ljmp
lods
cld
in
sub
or
outsl
sbbl
shlb
in
mov
test
dec
leave
int3
arpl
fcompl
pop
jge
mov
loope
xor
xor
out
je
std
xchg
repnz
xchg
pop
lahf
lret
loopne
or
mov
mov
sbb
aas
push
or
push
inc
addr16
js
dec
loopne
or
int
test
mov
sbb
mov
dec
loope
lods
cmp
sbb
ds
scas
lcall
sarl
movsb
loop
pop
aam
repnz
ss
or
jp
ja
inc
fwait
lret
testl
mov
ret
mov
aad
int
mov
mov
fiaddl
les
sub
gs
loop
dec
mov
pushf
xor
xor
pusha
movsb
cltd
lret
lds
mov
sub
leave
xchg
loop
ljmp
xchg
cld
testl
adcl
push
call
sbb
jmp
push
mov
fisttpl
int3
jmp
adc
add
mov
jno
xchg
xchg
or
push
and
mov
sbb
mov
push
in
dec
shrl
lahf
pop
hlt
lds
sbb
call
arpl
sub
test
cmpsb
popa
pop
ja
mov
sahf
xor
sbb
jl
and
push
jmp
rorl
or
mov
fwait
xor
xchg
data16
shl
lods
inc
call
or
jp
sahf
xor
or
cmpsl
mov
ret
mov
pop
repz
adc
mov
fdivrs
jecxz
stc
lahf
ss
testb
and
jl
adc
pop
mov
xor
scas
mov
les
mov
and
cmpsb
cmp
sub
fiaddl
lcall
and
and
or
stc
nop
fsubrs
sub
out
dec
mov
xor
mov
mov
es
fnsave
add
out
stos
imul
loope
cmpsl
ds
add
mov
pop
xchg
divb
cmpsl
mov
mov
cmpsb
arpl
xor
addr16
fsts
xchg
outsb
cli
adc
mov
loope
adc
jne
clc
pop
xchg
je
or
ss
sub
jge
or
lods
stos
mov
sub
lret
xor
ja
in
or
das
fcoms
mov
fisubl
sbb
push
pop
out
mov
shll
adc
ss
out
fisubl
cmpsb
sub
dec
dec
loope
lods
cmpsb
cmp
dec
sbb
mov
adc
repz
neg
push
xchg
xchg
sbb
xchg
sub
cmp
pop
repz
stc
xor
add
dec
dec
out
add
decb
mov
adcb
inc
xchg
xor
and
cmc
out
inc
fstpl
pop
in
orl
mov
fnstsw
pop
testl
mov
sub
or
mov
sbb
jb
ret
lods
and
outsl
push
push
dec
xchg
pusha
jb
mov
insb
add
outsb
inc
fstpt
push
mov
pushf
pop
ds
mov
or
pop
lods
push
dec
in
into
mov
fxch
sbb
sar
pop
hlt
das
repz
popa
clc
jmpw
sbb
out
xchg
mov
xchg
outsb
push
mov
mov
mov
sbb
jae
scas
test
stos
sbb
xor
pop
and
mov
dec
aam
dec
add
jp
out
inc
sbb
dec
loop
es
insl
mov
mov
dec
popa
lods
inc
push
shll
jae
sub
idivb
daa
mov
sbbl
jmp
adc
xchg
push
loope
nop
daa
cwtl
and
std
out
fbstp
pop
sarb
xor
rcl
and
fildll
mov
and
sub
push
je
xchg
sub
mov
repnz
sub
int3
push
nop
xchg
and
int3
xchg
pop
int3
lods
cld
outsl
mov
mov
xor
int3
imul
inc
rorb
jmp
mov
stos
inc
xchg
mov
pop
cmpsl
leave
and
cmp
inc
lods
jno
cmp
pop
jns
std
inc
inc
dec
xchg
gs
xor
ret
cmp
add
fwait
or
and
sbb
lcall
out
clc
sarb
mov
add
stos
mov
mov
inc
pop
ret
fsubp
jecxz
pop
add
jne
cwtl
and
nop
jp
out
jmp
pop
fisubs
mov
dec
push
jno
hlt
imul
scas
inc
fdivrl
pop
daa
dec
outsl
xchg
push
arpl
pop
xchg
dec
imul
js
mov
ret
test
mov
or
mov
cmp
ds
mov
shll
in
push
repz
sbb
or
jge
sub
arpl
pop
xchg
in
jno
int3
shrb
or
daa
mov
jnp
xor
xor
in
push
xor
test
add
cmpsl
out
pop
inc
stc
nop
pop
sub
pop
jg
sbbl
mov
add
jb
outsl
push
dec
xchg
test
outsl
icebp
mov
inc
out
xchg
outsb
add
pop
lods
loopne
adc
movsl
cmp
inc
adc
sarb
dec
loope
cmp
push
lods
mov
cmpsb
cmp
int
lahf
ss
out
or
dec
sbb
sub
lcall
or
xor
xchg
sub
push
les
jecxz
clc
test
xchg
sbb
incl
xchg
sub
scas
jmp
and
aam
or
cmp
xlat
outsb
xorb
les
jecxz
sub
popf
sub
or
cmp
hlt
enter
test
cwtl
das
push
cmp
fistl
add
mov
fildl
rcrl
mov
ficomps
es
jl
pop
mov
popf
test
ljmp
imul
aad
fdivl
repz
pushf
push
mov
jg
lods
outsl
fnstsw
into
loope
std
rorl
movl
dec
loop
or
fbstp
out
or
out
sti
call
add
notl
cmp
inc
sbb
test
mov
and
push
push
or
mov
or
les
les
out
push
fmuls
inc
xlat
scas
sbb
cmc
ljmp
movsl
fwait
jno
cmp
arpl
add
es
sbb
call
fs
xor
pop
shr
xchg
mov
jb
sub
lock
sub
outsl
popf
jno
add
sbb
das
and
pusha
testl
xchg
sub
inc
push
add
andl
push
pop
and
movsb
imulb
xor
fldcw
inc
dec
fistpl
iret
adc
pop
pop
lahf
adc
fidivs
js
sbb
lret
hlt
mov
idivl
lds
lahf
mov
sbb
shrl
push
push
in
inc
cmp
and
push
loope
xchg
jae
imul
push
dec
es
movsl
pushf
dec
in
add
inc
fcomps
loope
jb
mov
pop
sbb
jbe
and
inc
cwtl
stc
divl
mov
out
loopne
mov
fcmove
cmp
je
out
jp
mov
test
mov
xchg
int3
jno
lock
xchg
sub
adc
xchg
xchg
sbb
push
mov
jno
cmp
stc
jg
mov
stc
nop
insb
repnz
icebp
enter
push
ljmp
imul
jo
sub
inc
fsub
dec
sti
xchg
outsl
add
xor
cmp
outsl
inc
gs
push
nop
sub
shll
loop
aam
addr16
inc
call
sbbl
cmp
jp
cli
xchg
inc
fwait
sub
int3
sbb
xor
mov
push
ljmp
push
lods
sub
call
jo
jl
xchg
inc
fsubl
inc
cmp
js
xchg
sub
ds
test
bound
aas
sub
and
xor
cli
aam
adc
es
xor
out
leave
pusha
incl
sub
pushf
and
or
xchg
sub
xor
xchg
loopne
adc
out
add
fidivl
mov
clc
adc
insl
ret
incl
test
movsl
call
repz
xchg
cs
call
loop
mov
fmull
rcll
mov
fcomi
lods
jbe
call
aas
movsb
and
test
pop
hlt
xlat
jae
adc
clc
push
movsl
pop
pop
out
push
sub
pop
jae
cmp
das
dec
lcall
jb
mov
cld
xchg
out
test
sbb
push
mov
nop
fimull
aad
mov
rcrl
ret
jae
jecxz
cmpsl
mov
fimuls
sub
pop
xor
bound
dec
fildll
sbbl
mov
fsubrl
fists
add
xchg
add
enter
adc
mov
fidivs
sub
sarb
cmp
popf
cmp
movups
mov
push
xchg
push
out
daa
xor
mov
sub
dec
xchg
sub
push
ljmp
pop
mov
lods
movsb
cmp
mov
ret
test
clc
sbb
or
sbb
push
pop
lock
es
hlt
mov
push
inc
flds
or
and
pop
jg
jns
fwait
xor
add
jb
mov
adc
jbe
cmp
mov
jns
or
add
imul
clc
xor
dec
in
jbe
or
dec
adc
lock
dec
loopne
mov
sbb
push
dec
arpl
subb
call
sarl
cli
test
movsl
ds
jg
add
pop
jp
popf
xor
fwait
hlt
mov
insb
mov
mov
inc
fimull
test
clc
fwait
add
pop
xor
mov
daa
daa
mov
outsl
sub
sub
and
xor
js
nop
outsl
push
ret
xchg
lods
xchg
cmc
mov
mov
loope
or
pop
push
les
mov
adc
xchg
js
mov
shll
dec
fucomip
test
cmpsl
ret
push
adc
je
push
lods
adc
sbb
jne
into
push
daa
mov
rcrl
mov
arpl
sbb
out
cwtl
loop
or
mov
rcl
adc
inc
ds
in
pop
mov
loopne
dec
rcll
insb
loop
pop
ret
lods
sub
mov
jecxz
fstpt
movsb
scas
jecxz,pn
pusha
iret
xor
mov
inc
ficoms
and
std
and
adc
nop
pop
lods
inc
dec
sub
ja
jo
outsl
mov
ret
add
mov
dec
js
cmp
lahf
ss
xchg
es
mov
inc
in
mov
inc
sub
xor
testl
inc
les
mov
mov
adc
ja
adc
fisttpll
leave
dec
mov
sti
es
and
jno
inc
mov
pop
jg
xchg
imul
js
jle
push
outsl
fwait
mov
jle
mov
push
in
xchg
xor
and
aad
cmpsl
xchg
and
icebp
pop
aam
cmp
cmp
test
inc
mov
aam
addr16
in
je
iret
arpl
lret
mov
and
insl
xor
inc
fstpt
sbb
mov
pop
xchg
push
cmpb
mov
mov
adc
es
inc
ja
xor
push
scas
test
mov
xchg
pop
mov
lret
xor
add
in
push
icebp
mov
pop
imulb
mov
in
or
montmul
inc
ljmp
cwtl
xlat
dec
das
mov
xlat
punpckhbw
pop
lcall
adcb
or
test
lock
das
shlb
stos
pop
jge
pop
pop
lahf
ret
cltd
mov
jo,pn
pop
aaa
addr16
xor
jno
pop
dec
dec
stc
nop
jl
mov
push
xor
arpl
pusha
push
sub
push
inc
xchg
sub
jge
pop
hlt
ds
or
push
enter
cwtl
fidivrs
fisttpl
fwait
xor
pop
std
xor
into
push
mov
dec
mov
call
xchg
loope
push
xchg
inc
push
xchg
jno
enter
push
int
ss
sahf
xchg
fs
loop
cli
sub
mov
cmp
add
mov
or
js
aaa
adc
mov
in
push
mov
inc
inc
fdivl
ds
aaa
and
jb
cmp
in
stos
sbb
add
scas
and
mov
mov
xchg
pusha
cmp
and
cmc
and
xor
test
sbb
outsl
cmp
mov
mov
movb
cmp
jecxz
lock
ds
movsl
dec
push
and
cmpsb
insl
pop
hlt
jns
and
xor
std
xchg
pop
xor
sbb
loopne
push
mov
in
add
and
inc
pop
jnp
lahf
dec
mov
mov
dec
or
test
mov
add
cmp
cld
xchg
mov
shll
xor
ja
adc
jmp
scas
mov
rolb
rcr
push
out
fdivrs
shr
sub
pop
or
fstpl
fidivrl
mov
lea
sub
popa
fisttpl
inc
inc
loope
dec
das
jl
push
pop
out
dec
data16
outsb
rsm
inc
inc
data16
adc
and
pop
scas
mov
push
test
leave
addl
roll
call
out
daa
testb
dec
loopne
sub
mov
cmp
jecxz
inc
enter
sbb
sub
xor
push
sub
aas
xchg
jecxz
push
cltd
sbb
sub
ss
push
loope
inc
jg
ja
cmpsl
outsb
inc
out
push
xlat
lods
cmpsb
popa
cld
fld
inc
in
repz
and
jb
cmp
push
sbb
xchg
mov
rcll
xor
cwtl
push
data16
push
mov
and
icebp
inc
inc
add
inc
xor
cwtl
dec
pusha
sahf
cmp
cs
jbe
adcl
jle
jae
add
push
in
daa
or
jl
lea
orl
cs
add
jns
lea
xchg
ret
mov
test
lahf
out
rolb
sbb
mov
nop
dec
mov
mov
adc
scas
inc
cmovbe
jb
and
pop
mull
xor
add
mov
das
fisttpll
or
inc
sub
mov
and
push
fistpl
mov
popl
test
out
push
ss
mov
fcomip
xor
and
inc
pop
xor
inc
clc
jbe
adc
addr16
jg
mov
xchg
stos
mov
mov
ret
jecxz
dec
mov
pmulhw
int
jp
rcl
xor
out
mov
mov
pop
icebp
cld
xor
jp
cs
es
mov
pop
sbb
out
cmp
push
ret
adc
pushf
sub
aad
fldenv
xchg
mov
mov
shlb
aas
rcll
xor
adc
lds
cld
jb
cmc
ljmp
and
mov
push
adc
aam
stos
mov
fcompl
cmpsb
orb
sbb
jb
aad
les
inc
aad
negl
jbe
jmp
mov
les
mov
dec
pop
outsl
push
adc
xchg
jns
out
jp
pop
clc
cmpsl
and
adc
sti
adcb
mov
inc
sub
dec
add
lock
lret
pop
add
cmpl
fcoml
cmpsl
fnstcw
or
sbb
add
dec
cmp
shlb
pop
and
ss
daa
leave
adc
sarb
mov
in
inc
mov
fsubrs
movsl
out
mov
neg
ljmp
mov
ljmp
fsubs
jp
add
ja
enter
inc
xlat
cmp
fstl
lds
adc
int3
mov
insl
popf
jg
jp
mov
or
pop
dec
icebp
mov
ljmp
pop
pop
add
and
loope
pop
sub
adc
std
jg
orl
jns
inc
fcmovu
or
and
bound
cmp
xor
and
cmp
rcl
and
mov
dec
pop
jbe
dec
pop
sbb
repnz
mov
add
into
je
mov
adcl
xchg
cmp
mov
adc
sub
aas
in
int3
add
shr
jo
pop
sahf
inc
xchg
cs
rorl
daa
mov
outsl
dec
and
mov
sub
dec
ss
lods
imul
xor
mov
scas
ficoml
cmpl
add
jne
sub
fmull
nop
jb
test
rorl
sahf
mov
ret
lret
mov
mov
lahf
repnz
aaa
or
hlt
sbb
cmp
pop
lods
bound
mov
rcl
outsb
add
stos
push
insb
dec
sbbl
push
lea
sub
pop
lods
cmp
sub
and
and
aas
pusha
insb
sbb
and
in
and
fnstcw
jecxz
in
jno
add
out
xor
inc
lret
imul
test
insl
frstor
push
sbb
rolb
inc
mov
and
inc
fstpl
jg
call
pop
or
lahf
xor
imul
xor
lcall
push
aas
and
adc
inc
jmp
inc
addl
test
outsl
lods
idivb
jb
lock
mov
lods
sub
mov
sbb
push
aaa
in
pop
cmpl
lock
lock
clc
add
push
daa
dec
adc
xor
mov
pop
xor
cmpsl
aas
mov
sahf
or
lea
push
out
adc
fsubrs
stos
dec
out
jo
push
out
lea
repz
jne
xor
push
pop
pop
lds
mov
xchg
out
mov
or
sti
push
sbb
daa
jb
roll
lds
negl
leave
sub
sub
mov
push
cmp
fbld
cmp
push
dec
aad
xor
adc
popf
hlt
cmp
inc
fidivl
fwait
repnz
xchg
jb
imul
insl
push
push
cmc
mov
add
xchg
xchg
mov
cmp
and
cmp
inc
ss
cld
cmp
stos
in
dec
inc
mov
lds
jo
inc
out
inc
xor
or
iret
xor
loope
loopne
fsts
mov
push
jl
enter
test
aad
jbe
inc
add
jle
cwtl
cli
mov
test
push
push
mov
cs
mov
rcrb
icebp
pop
jns
fcomp
cwtl
or
cmp
jmp
jg
loop
cmpb
sbb
xor
out
adc
jno
test
pop
je
orl
imull
pop
or
popf
out
dec
inc
jns
mov
or
sbb
cmp
cmpsl
xchg
int
push
xchg
lret
lds
inc
jb
std
xchg
addr16
unpcklps
xchg
mov
pop
pop
mov
pop
in
inc
addl
mov
test
xchg
mov
outsb
pop
lods
and
sbb
xchg
scas
jcxz
or
in
shrb
sub
decl
cmp
or
pop
fbstp
aam
and
jo
fcoml
sub
inc
std
popf
outsl
jecxz
sub
inc
mov
inc
mov
xor
lds
mov
mov
bound
mov
rcll
cs
and
jl
and
add
inc
int
push
jmp
mov
inc
jbe
mov
mov
mov
fildll
mov
lds
or
and
out
cmp
dec
inc
fnstsw
xchg
cmpsb
jbe
loopne
iret
adc
mov
and
fucomi
mov
test
out
dec
testl
push
dec
mov
jne
pop
cld
xlat
jge
jns
in
leave
sub
pop
push
loope
add
popa
jge
jg
jl
repnz
jle
push
mov
add
stos
cmp
imul
add
rcrb
sbb
aam
sbb
cmp
popf
inc
push
stos
lea
inc
movsl
mov
stc
sub
in
test
push
in
mov
jo
scas
mov
adc
inc
jae
push
neg
xor
and
pinsrw
pushf
mov
ds
sarl
pushf
add
xorb
in
dec
ret
stc
insl
call
shlb
pop
int3
lea
test
lea
add
in
push
and
push
jae
xchg
push
movsl
dec
lea
lods
add
cmp
push
dec
cmp
xchg
pop
push
cmp
jle
and
cmp
or
mov
push
into
aad
jmp
or
xchg
push
dec
sub
pop
dec
pusha
mov
outsb
stos
lret
sub
mov
aas
mov
ffreep
jb
sub
pop
xor
sub
test
in
es
xor
js
cmpsl
xchg
scas
dec
popa
hlt
fwait
mov
in
sub
orps
call
sub
sbb
jg
adc
push
and
push
out
jge
arpl
cmp
add
adc
test
out
lcall
mov
xor
imul
pop
mov
daa
add
mov
repz
ljmp
xchg
pop
push
les
je
xchg
dec
inc
xor
mov
cwtl
popa
movb
push
mov
and
scas
pop
or
pop
out
mov
sub
add
imul
fs
and
and
lods
mov
ret
pop
jb
in
mov
gs
enter
cmc
add
lods
rorb
xchg
adc
in
repz
inc
and
mov
mov
mov
jne
mov
cmp
or
sub
xor
sbb
cmpb
data16
inc
jb
cmpsb
xor
xchg
mov
inc
cmpsb
inc
mov
out
jl
mov
shl
pusha
into
jno
add
dec
popf
cld
sbb
jle
mov
paddq
rorl
xor
jo
dec
in
jge
testl
dec
mov
xchg
cs
cld
scas
sub
mov
sete
test
xchg
sub
mov
and
jo
sahf
xor
inc
test
sahf
push
test
inc
rcl
mov
fdivs
pusha
icebp
jl
outsl
dec
stos
mov
lods
and
in
mov
push
into
pop
xor
sarb
push
xor
cmp
test
fstpt
testb
sahf
clc
mov
in
push
cwtl
das
movsb
das
dec
jl
insl
dec
loopne
in
pop
adc
fdivrs
sbb
push
inc
lahf
loope
scas
push
ret
repz
xor
add
pop
adc
adc
or
pop
in
sbb
or
icebp
inc
enter
push
scas
sbb
xchg
sahf
jo
jl
jle
jno
dec
cmp
jp
clc
es
pop
cmc
pop
aad
je
into
cmpsb
pop
aam
lds
rol
call
cmpsb
xchg
jnp
adc
test
jl
push
push
xchg
push
jp
lcall
arpl
jmp
popf
int
cmp
push
and
sar
mov
sub
aaa
mov
outsl
dec
sahf
xchg
jbe
xchg
ret
mov
orps
out
aam
inc
xor
push
pop
sahf
add
inc
shld
out
mov
pop
rcr
push
or
adc
xchg
xchg
mov
scas
add
inc
and
rcll
addl
xor
fwait
scas
pop
mov
xchg
mov
inc
sarl
aas
fistpll
inc
or
les
cmpsb
ret
movsb
lea
int
rorl
sahf
xchg
pop
shrl
jecxz
aad
rcrb
mov
scas
inc
out
cmp
inc
fdivl
pop
out
shll
mov
notl
cmp
jmp
in
bound
fldcw
jb
pusha
cli
jg
jmp
fiadds
lock
inc
push
into
adc
scas
adc
push
fldcw
jo
or
xchg
lahf
fistpll
mov
jnp
js
sub
push
dec
jle
push
gs
jmp
aaa
jns
push
movsb
dec
inc
jp
cmpl
mov
mov
cmpb
mov
inc
sub
imulb
insb
loop
xchg
decb
push
lcall
and
add
out
or
scas
inc
dec
sub
jns
jecxz
cwtl
push
push
cvtdq2ps
dec
sub
leave
jns
mov
sub
pop
cwtl
push
push
cmpsb
into
push
in
pop
xor
setae
xchg
push
shlb
out
stc
js
pop
outsl
ljmp
push
iret
out
iret
out
mov
rcr
adc
pop
or
int
scas
dec
jne
pop
sbb
aam
jo
mov
sub
push
stos
int3
push
xchg
and
jecxz
aam
pop
push
push
dec
ljmp
jl
shll
jmp
repz
pop
xchg
mov
fsubs
mov
fidivs
fsubs
mov
add
fisttpl
decb
in
jg
mov
mov
push
jne
pop
pop
push
push
out
push
aaa
lods
cmp
sub
add
cmp
repz
push
sub
bound
cmove
adc
leave
rclb
test
in
push
xlat
pop
ret
les
adc
call
insl
idiv
jp
push
insl
pop
test
scas
sbb
enter
xlat
mov
loopne
and
fistpll
insb
xchg
shrb
repnz
mov
scas
jle
shr
fbstp
mov
rolb
cmc
add
sub
es
pop
pop
cmp
adc
vmovupd
cltd
push
and
mov
inc
push
pop
lods
repnz
push
xor
dec
add
dec
inc
add
out
int3
add
das
or
cmpl
sbb
mov
adc
fcmovbe
and
xor
inc
mov
test
xchg
aam
cmpsl
mov
pop
mov
xor
movsb
cmp
xchg
cmpsb
sbb
leave
add
fsubs
xor
test
icebp
bnd
mov
lret
xchg
mov
jno
jmp
jp
xchg
out
leave
scas
subps
out
call
fidivs
and
mov
addr16
cltd
push
das
dec
dec
inc
test
and
mov
mov
mov
pop
jo
inc
in
loop
out
bswap
pusha
inc
xor
inc
and
pop
jbe
push
imul
cmp
cmp
ret
dec
cmp
dec
mov
sub
ret
mov
add
adc
sahf
or
dec
inc
jns
mov
xor
or
imul
cs
sub
mov
pop
sub
outsl
xchg
cli
adc
dec
dec
mov
ljmp
imul
dec
jg
imul
leave
add
sub
fsub
scas
adc
in
cmp
fisubrl
out
mov
icebp
push
jmp
jmp
or
mov
sbb
jns
and
xchg
mov
xor
std
loope
and
out
mov
or
cld
xlat
or
cmp
sarl
fnsave
in
jns
mov
xchg
cmc
mov
jno
or
sbb
clc
cmpsl
insl
scas
lods
sti
aas
xchg
sub
xor
test
icebp
inc
mov
inc
fmuls
push
add
add
movsl
hlt
mov
xchg
cwtl
xor
aad
push
mov
arpl
push
push
cltd
push
and
lcall
nop
mov
sub
mov
popa
outsb
jge
jns
xor
xlat
fdivrs
mov
pop
jle
mov
shrl
jo
add
dec
shrb
mov
or
adc
sub
ret
adc
push
in
daa
pusha
out
pusha
mov
insb
jbe
or
stos
and
cmc
mov
push
stos
mov
mulb
iret
adc
das
fimull
test
lds
icebp
in
hlt
mov
adc
ret
das
sarl
dec
loop
pushf
pop
pop
sub
mov
sub
jmp
cmp
or
movsb
lds
jecxz
outsl
lret
add
lds
mov
sbb
gs
adcb
mov
pop
inc
cmp
xor
popf
push
xchg
mov
or
lods
or
mov
mov
xor
popa
in
in
or
mov
mov
rcl
sarl
imul
pop
stos
inc
dec
jne
jg
mov
pop
push
scas
jae
loopne
call
mov
mov
xlat
outsb
movsb
call
mov
jp
bound
lcall
aad
lds
and
hlt
in
sbb
lock
stc
out
mov
sbb
insl
add
add
inc
jbe
mov
loopne
jmp
sub
inc
hlt
rcrl
fs
sbb
sbbb
fwait
mov
int
mov
push
in
push
pop
inc
icebp
mov
jae
xchg
montmul
cmpsb
mov
xchg
mov
fistps
scas
adc
dec
loop
xor
int
mov
cli
xchg
adc
dec
in
mov
arpl
and
js
clc
dec
call
or
jle
daa
inc
or
adc
and
pop
xor
sbbb
mov
add
inc
pop
adc
aad
stos
sbbl
adc
xchg
sub
inc
inc
sti
fidivrs
mov
fsubs
jne
inc
leave
xchg
dec
pop
stos
rclb
ret
cmp
out
addl
iret
movsb
xor
into
and
xchg
add
or
and
sti
call
cltd
add
sbb
adc
push
cmp
xchg
ljmp
and
stos
inc
cmpsl
xchg
js
outsb
push
shrl
test
ja
mov
mov
or
shlb
shll
pushf
push
orb
mov
pop
mov
mov
les
test
inc
and
jecxz
and
and
subl
arpl
leave
pop
pop
inc
outsl
enter
movsl
cmpsl
adc
sti
je
mov
cmpsl
cltd
inc
mov
outsl
push
inc
es
bound
add
xor
cmpsb
or
stos
int
cs
lret
imul
xchg
xchg
in
arpl
hlt
or
push
movsl
pop
pop
mov
ds
adcb
push
scas
addr16
js
xchg
popf
lods
pusha
lods
push
cltd
xor
ljmp
cmp
push
push
push
adc
std
lock
pop
aaa
dec
in
inc
je
cld
xchg
imul
cltd
shl
into
addr16
xchg
xchg
insb
imul
movswl
test
cmp
hlt
add
mov
lea
sub
andl
repnz
mov
dec
dec
push
dec
loopne
ja
fs
jg
pop
xchg
sub
jmp
mov
and
ja
inc
inc
cld
mov
fsubr
dec
add
sbb
cmpsb
add
and
loop
loope
sahf
lods
add
sti
mov
push
ljmp
rclb
pushf
jnp
xorb
pop
mov
push
or
cmp
lcall
negl
test
inc
pop
imul
and
inc
sti
insl
fidivrs
xor
arpl
clc
rclb
mov
cmpb
pop
mov
outsb
add
fsubp
or
mov
daa
clc
add
inc
and
pop
imul
fdivl
xchg
cmc
jae
sti
xchg
push
xchg
or
enter
nop
jmp
add
mov
pop
xor
or
pusha
int
jnp
ds
and
inc
daa
imul
mov
xchg
repz
cmp
and
sbb
fsubrs
mov
xchg
adc
push
icebp
xor
sbb
xchg
mov
mov
xlat
mov
mov
mov
inc
adc
jl
push
add
repz
and
cli
or
jno
mov
inc
push
cmpsl
mov
fldcw
fnsave
pop
addr16
adc
mov
inc
orb
and
sar
mov
jg
jnp
dec
xor
hlt
xchg
in
jmp
pushf
ret
repnz
pop
stos
jb
pop
arpl
sbb
in
adc
push
sub
cltd
add
push
out
pushf
and
pop
movsl
mov
push
jp
jb
aas
dec
jo
ror
adc
loop
xor
pusha
sti
lcall
add
movsl
test
and
repz
mov
cmp
insb
movsl
xchg
inc
roll
out
jns
lods
mov
push
push
or
cmpsb
lret
rol
jecxz
push
pop
pushf
repz
mov
sub
push
dec
push
out
lea
ds
xor
lret
fsubrl
mov
aaa
adc
dec
or
dec
jge
fiadds
in
xchg
pop
fndisi(8087
rorl
inc
xchg
mov
int3
push
adc
xor
popa
adc
popa
xchg
insl
push
stos
in
ret
cwtl
rorl
cmpsb
cmp
inc
jbe
inc
add
out
lea
mov
in
xor
subb
cmp
arpl
in
fucomp
add
cld
mov
add
cs
fwait
add
rolb
mov
xchg
lods
fcomi
or
push
pop
xchg
test
xor
sub
cmp
cmp
push
inc
leave
sub
jae
push
leave
jne
ss
lret
sti
push
xchg
push
mov
sar
js
fcomps
sahf
sub
jg
subb
scas
mov
sbb
xchg
pop
xor
xchg
dec
jmp
jb
xor
adc
inc
push
sub
push
xchg
int3
pushf
fdivs
push
mov
push
add
adc
pop
mov
jle
push
push
ss
xchg
ficomps
mov
ds
cltd
stos
fildl
xchg
sarb
push
outsb
inc
in
notl
test
fadd
int
cmp
adc
in
pop
ljmp
push
mov
pop
push
arpl
fnstenv
out
je
cmp
jns
mov
popl
pop
arpl
dec
xchg
loope
fwait
insb
test
sub
xchg
imul
sbb
and
cmp
orb
dec
and
mov
dec
lock
hlt
fists
xor
jo
andl
in
jb
push
inc
pop
scas
jbe
insb
jo
ss
push
xchg
dec
jecxz
add
xor
add
push
shl
cmp
xchg
or
inc
pop
clc
mov
movsl
jge
fisubrs
dec
or
jg
test
cmpsb
sbb
mov
in
inc
aam
sbb
rcl
jnp
and
clc
adc
mov
ljmp
push
push
xor
or
push
mov
dec
jne
xor
xor
test
inc
movsb
out
and
xchg
pushf
arpl
subl
pop
test
ljmp
jno
jb
shlb
and
ss
sub
out
lret
mov
push
out
ljmp
stc
or
pop
shlb
inc
sub
dec
cmc
stc
mov
jge
jcxz
sbb
mov
mov
pop
xlat
outsb
mov
das
push
sub
and
fs
shl
test
and
setnp
push
test
aam
sarb
jmp
cld
or
popa
xchg
out
int
into
gs
mov
jb
movsl
stc
add
mov
xor
inc
and
stc
fistl
fnstcw
push
ja
rcl
xor
mov
cwtl
nop
xchg
jl
mov
dec
aas
pop
enter
lock
adc
mov
es
ja
shlb
inc
cmp
jmp
stos
push
int3
out
int3
sbbb
adc
xor
pop
pusha
inc
aaa
ret
jo
sarl
sub
xor
dec
or
xor
push
inc
insb
push
insl
les
xchg
and
dec
incl
xor
movsl
gs
imul
adcl
mov
enter
jg
int3
pop
sahf
es
jmp
fldcw
mov
pusha
sbb
ds
cld
push
add
loopne
and
lods
test
inc
xchg
add
adc
ret
sbb
jae
sub
mov
push
jg
and
cmpsb
dec
inc
push
adc
adc
test
mov
in
lods
pop
nop
lahf
xor
fs
mov
pop
push
mov
jbe
lods
outsl
cmpsl
pusha
std
or
mov
loopne
xchg
adc
test
int3
out
add
cmpl
testb
inc
sbb
jo
jg
mov
aam
jmp
mov
fldln2
test
jge
mov
insl
xchg
inc
cmc
cmp
in
push
leave
andb
loop
cmp
rcll
sbb
mov
shlb
fs
iret
push
imul
int3
mov
pop
inc
cwtd
js
mov
pop
por
adcl
or
cmp
dec
popa
xchg
sub
mov
iret
jae
jle
ficompl
ss
adc
xchg
inc
xor
dec
pop
mov
out
ljmp
int
call
mov
mov
inc
stc
mov
xchg
cmp
jnp
int3
loope
pushf
gs
int
cmp
daa
or
popf
test
outsl
pop
mov
jmp
push
repnz
in
and
xchg
je
or
jmp
mov
sarl
loopne
push
xor
adc
pop
lcall
in
jae
dec
jno
jg
jp
push
mov
in
xchg
xchg
aas
fwait
push
mov
push
test
nop
xchg
stos
adc
fisttpl
lahf
lods
into
xor
mov
sahf
jb
adcl
pushf
jg
repnz
pop
add
sbb
movsl
leave
cs
rcll
adc
dec
in
fwait
mov
pop
sub
sbb
xchg
cwtl
loope
fistpll
cmp
jno
aam
and
nopl
push
ljmp
mov
and
pop
jns
xchg
out
xor
or
stc
outsl
sub
ss
xchg
mov
ret
movsl
clc
jno
push
out
repnz
inc
inc
int
jns
push
cmpl
cli
das
pop
pop
mov
inc
iret
cmp
and
sbb
jmp
test
cli
mov
pop
cmc
jno
cli
cld
hlt
xchg
jl
les
sub
jnp
and
jmp
popl
sbb
loope
inc
adc
pop
cli
mov
jecxz
dec
mov
pop
sbb
ljmp
jno
arpl
dec
scas
sbb
ret
sbb
das
add
push
xchg
out
jbe
dec
test
push
mov
cmp
adc
jns
xchg
push
test
repnz
movsb
in
imul
mov
in
popf
xchg
mov
mov
aaa
lret
push
cli
xchg
gs
or
mov
fldcw
pop
sub
aad
cmp
shll
fiaddl
cs
add
cmc
mov
arpl
mov
loope
adc
lods
inc
fs
dec
in
lds
add
cmp
clc
arpl
je
mov
sbb
daa
sbb
cwtl
sbb
dec
inc
xor
imul
cmp
out
fisttpll
push
mov
dec
nop
xlat
jp
fsubrs
add
xchg
loop
mov
or
clc
movsl
pushf
ds
xor
adc
stos
inc
add
inc
ficoms
loope
int
stc
inc
or
jg
add
daa
pushf
xor
out
xchg
test
pop
icebp
xlat
fs
xchg
dec
xchg
repnz
orb
insb
lahf
ljmp
addr16
jns
jmp
je
mov
aad
push
xchg
sub
inc
into
push
mov
scas
inc
insb
pop
add
in
cmp
adc
scas
inc
int3
mov
push
jmp
pop
adc
or
das
addr16
jns
inc
lods
lds
fnstenv
ficoms
pop
xchg
imul
pop
arpl
pop
xchg
rcll
fwait
push
hlt
enter
jecxz
mov
mul
xchg
ja
pusha
cld
nop
orb
ja
clc
push
aaa
xchg
add
pop
push
xchg
mov
les
pop
or
int3
movsb
in
adcb
push
out
aad
push
push
pop
jp
bound
inc
jmp
lahf
push
sbb
and
std
pop
and
push
push
daa
sub
aad
test
repz
push
pop
mov
daa
movsl
push
mov
push
add
and
adc
ret
jl
pop
or
fstps
imul
stos
lock
ffreep
pop
icebp
adcb
or
push
pop
adc
push
je
mov
fwait
stos
dec
movsl
daa
cli
push
pop
or
or
stc
nop
shlb
pop
sub
pushf
les
cli
lods
ljmp
push
sahf
clc
int3
loopne
jg
or
jb
xchg
sub
mov
pop
lea
movsl
sbb
fucomp
imul
addr16
jo
js
bound
rcrl
push
icebp
loop
xchg
sti
pop
jbe
icebp
xchg
in
cmp
mov
mov
lds
push
mov
mov
icebp
mov
inc
scas
nop
inc
inc
insb
jle
mov
test
mov
and
cwtl
test
sub
mov
cmc
mov
das
xchg
in
adc
jno
add
bound
loop,pn
aam
arpl
mov
fldt
popa
or
sbb
outsl
mov
fcomps
mov
push
outsb
mov
mov
int
and
sti
mov
mov
loopne
aam
cmp
in
fistps
cli
scas
out
add
push
xor
andnps
out
cmp
shrl
leave
cmp
mov
xor
push
cmpsl
add
fadds
popf
mov
ret
and
imul
jae
cmp
enter
sub
cli
inc
mov
addr16
mov
xchg
push
fdivrl
int3
push
fldl
and
mov
test
or
bound
loop
dec
cmpsl
je
adc
cmp
enter
lods
pop
outsb
in
or
jo
dec
cmp
jns
and
pop
fcmovnu
and
test
fs
enter
testl
sub
aam
sbb
mov
jb
pusha
push
pop
jns
fcmovnu
xor
mov
mov
dec
or
movsb
shlb
stos
xchg
sub
insl
add
leave
sbb
out
int
das
sbb
in
hlt
sub
jl
and
pop
outsl
enter
mov
mov
mov
pop
jbe
jno
pop
hlt
movsl
xor
adc
lods
test
ss
add
push
loope
mov
aaa
or
dec
popa
push
in
pusha
pop
jae
mov
and
fstpl
int
arpl
js
int
add
mov
mov
dec
mov
xor
sub
xor
push
test
lret
inc
sub
imul
push
stc
cmpsl
repz
iret
push
mov
push
mov
cmpb
and
fisubs
adc
pop
xchg
fidivl
add
mov
mov
mov
or
clc
add
sub
mov
cmp
ds
cmp
dec
dec
pop
xor
fstl
push
outsl
out
dec
pusha
and
mov
or
ss
pusha
fucomi
mov
shl
or
cmpsb
cmp
leave
and
and
cmpsb
xrelease
sbb
ds
mov
fidivs
xor
into
pusha
aaa
or
or
out
inc
test
pop
fistpll
pop
int
cmpsl
pop
mov
mov
add
push
stos
jg
jmp
lods
mov
sbb
lea
cmp
mov
mov
or
adc
lea
pop
mov
xor
testl
out
mov
sbb
or
insl
jnp
sub
insl
imulb
jb
mov
fwait
cmpsl
pop
cmp
sub
push
lret
loope
adc
inc
test
ja
dec
xor
fxtract
mov
inc
push
sub
xor
divb
mov
mov
aas
dec
dec
push
stc
aam
xor
lods
insb
popf
pop
cmp
mov
int3
mov
push
xchg
into
xchg
dec
push
dec
sbb
mov
jb
xchg
rcrb
aam
push
icebp
es
sub
imul
imul
test
or
and
aas
repnz
insb
ja
or
cmp
lret
rcrb
sbb
cmp
test
arpl
push
mov
dec
xor
fmuls
mov
cmp
sub
pop
mov
xor
inc
popa
sub
inc
mov
xlat
insl
or
cs
mov
push
pusha
mov
test
mov
cltd
lret
and
movsl
clc
hlt
cmc
adc
lret
mov
mov
mov
xor
inc
jns
jle
andl
ret
out
pop
outsb
mov
stc
nop
cmp
shr
sbb
pop
ljmp
push
in
sub
movsl
and
xor
movsl
bound
sbb
cmp
push
push
and
sbb
ljmp
jg
pop
fwait
push
dec
sub
inc
pop
inc
mov
cld
sbb
jnp
push
cmp
mov
push
or
or
or
xchg
dec
add
lret
xor
adc
mov
mov
aaa
pop
inc
js
mov
outsl
mov
xchg
pop
sbbb
jnp
es
test
lock
lods
inc
mov
arpl
mov
push
in
int3
mov
rorl
imul
pop
roll
sub
jmp
jl
adc
int3
mov
dec
jecxz
jne
lods
push
pop
mov
mov
in
mov
pop
loop
pop
lds
adc
pop
movsb
mov
pop
std
iret
lret
out
out
sbbl
mov
xchg
inc
mov
in
sbb
lret
cwtl
and
std
mov
xor
jns
pop
adc
sbb
in
loope
push
cmp
popa
xchg
ror
pop
xchg
xchg
mov
fcomps
test
imul
mov
out
daa
lcall
fnstsw
add
jo
clc
mov
nop
daa
dec
gs
inc
fs
or
enter
nop
stos
test
xlat
ret
xchg
lods
repnz
mov
imul
out
bound
inc
xchg
sub
test
pop
jbe
leave
fnstenv
mov
iret
sbb
jmp
mov
in
in
lock
or
or
dec
dec
add
push
jb
push
push
xor
mov
xor
xor
outsb
xchg
mov
test
xchg
lcall
mov
sbb
aam
cs
cmc
dec
filds
subb
mov
gs
or
test
xor
sub
aad
mov
ret
sti
xchg
mov
test
sub
sub
repz
lea
fsubrl
or
mov
push
xorl
loopne
ja
cmp
xlat
lock
mul
mov
dec
int3
push
cmp
rcr
jnp
dec
loopne
sub
jp
xchg
addr16
sti
cmp
xchg
inc
jo
xchg
xorb
movsl
xchg
dec
dec
dec
inc
icebp
sbb
cmp
and
lock
data16
pop
jg
xchg
xchg
mov
ret
pop
sahf
hlt
add
lock
push
xchg
xchg
jle
mov
xchg
dec
imull
mov
outsl
pushf
fldt
inc
ficompl
xchg
mov
xchg
into
dec
insb
adc
cmp
mov
pop
out
pop
shr
xchg
cmc
jbe
daa
mov
push
jmp
mov
cltd
fdivrp
xchg
in
pop
cli
push
add
cs
gs
lret
fs
cld
xchg
cmp
dec
dec
mov
gs
jo
int
adc
or
mov
ficompl
pop
stos
jb
mov
mov
and
add
test
sub
mov
sbb
jns
sbb
pop
in
popa
rcrl
iret
repz
cli
cmp
jbe
lods
inc
push
pop
iret
std
or
rcrb
add
inc
dec
pop
stc
nop
push
outsb
push
mov
or
call
test
and
mov
xchg
jne
and
das
or
push
and
imul
fwait
adc
aad
mov
in
int3
add
or
push
in
test
clc
mov
mov
mov
jle
movl
mov
push
movsb
push
and
in
into
fsubrl
pop
outsb
jl
xor
icebp
lahf
pushl
dec
jne
bswap
call
mov
lock
nop
aam
cmpsl
or
movsl
mov
add
push
inc
cmpsl
aas
lods
and
mov
dec
add
xchg
jle
lahf
and
out
pop
xchg
and
xchg
vcomiss
dec
jno
aad
fdivl
psrad
jg
movsl
mov
push
jno
dec
cmp
push
dec
pop
cmc
fs
jl
cmp
mov
inc
fidivl
fldl
sbb
jge
fadd
push
pop
test
in
cmp
fsts
pop
mov
out
stos
xor
sub
push
sub
jle
test
push
and
aad
or
xchg
cli
sub
sub
pop
mov
out
and
mov
clc
lea
push
xchg
mov
add
and
adc
mov
imulb
loopne
sbb
dec
jge
dec
push
in
cmp
mov
fadd
int3
jg
jbe
jae
pop
stos
jne
das
sub
imul
pop
out
xchg
sub
dec
pushf
jnp
fimull
enter
cmp
std
pop
push
lret
sub
aad
clc
sub
cmpsb
insb
fists
sahf
lods
movl
mov
xchg
mov
or
test
lock
mov
lcall
iret
orl
rolb
sahf
jl
std
mov
pop
clc
dec
into
sub
bound
insl
mov
clc
aad
sahf
ret
push
mov
jo
rorb
mov
aaa
pop
xor
mov
sbb
adc
mov
in
pop
xor
and
add
ss
inc
lahf
xchg
cmp
insb
jg
mov
inc
sbb
lock
adc
push
cmc
dec
pop
pop
xchg
lret
cmp
jnp
fistpll
rclb
sarl
jo
movsl
xor
cmp
sbb
mov
pop
out
pop
mov
out
sub
or
push
call
jae
sbbl
sbb
inc
test
cmpsl
sahf
dec
mov
stos
inc
inc
imul
lods
xchg
jmp
scas
insl
lcall
arpl
notb
dec
cmpsb
ds
cli
and
imul
js
pop
jle
mov
cwtl
pop
push
out
pop
mov
incb
adc
inc
data16
inc
mov
pop
into
lods
mov
sbb
sbb
imul
pop
jns
imul
adc
jl
loopne
add
das
aaa
cltd
cvtpi2ps
fcoml
lods
hlt
lcall
enter
call
mov
jl
stos
mov
lret
pushf
scas
inc
or
cmpl
iret
stos
inc
mov
pusha
fisubs
leave
inc
mov
aas
pop
push
ror
nop
pop
xchg
sub
xorb
addl
or
out
xchg
hlt
movsl
leave
adc
mov
orl
scas
or
addr16
and
add
test
sbb
popf
xchg
jle
jmp
not
arpl
cmc
js
or
and
or
xor
in
pop
sub
add
mov
push
jno
out
in
loope
mov
add
cmp
dec
push
clc
hlt
lods
adc
mov
xchg
cmpl
adc
imul
mov
dec
or
fwait
data16
jb
xchg
imul
pushf
in
lods
push
out
shr
adc
scas
inc
sub
push
nop
push
test
cli
inc
popf
movsb
xlat
jle
dec
cmp
out
jnp
lea
mov
lds
ja
xchg
insl
sti
mov
sahf
outsl
adc
clc
outsl
arpl
push
xchg
sbb
jg
inc
data16
pop
inc
sbb
fidivrs
xchg
mov
aas
pop
mov
in
in
add
sbb
dec
dec
push
jo
jmp
int
jmp
loopne
rcl
xchg
inc
js
pop
mov
adc
and
or
mov
xchg
es
cwtl
sub
daa
ret
mov
cwtl
lods
xlat
push
inc
insl
add
xlat
dec
dec
mov
clc
call
cld
sbbl
inc
mov
ljmp
jno
pop
cmp
stos
insb
mov
jbe
adc
js
push
mov
xchg
mov
mov
aad
jne
push
xor
dec
movsb
mov
pop
jecxz
inc
pop
xor
dec
ljmp
inc
pop
rclb
xlat
pop
push
mov
jne
arpl
xchg
test
xlat
mov
jae
outsb
loope
xlat
cli
inc
insl
jb
inc
inc
pop
insl
add
fsubrs
jno
dec
stos
push
sbb
imul
test
das
inc
xchg
jge
lret
rcrl
jle
lock
push
loopne
daa
fs
pop
xchg
inc
imul
sysexit
jno
inc
insb
sub
push
fidivrs
inc
xor
fst
cli
inc
shl
ljmp
inc
mul
jg
ficomps
insl
clc
cmpsl
xor
outsb
js
add
adc
push
inc
fst
pop
push
xor
or
sub
add
inc
hlt
je
sub
aam
jbe
fs
enter
cmp
jo
lcall
mov
sbb
pop
dec
or
loop
mov
addb
cmp
mov
sbb
dec
mov
add
inc
inc
jle
xchg
in
ds
mov
xor
rclb
fsubrs
rcrb
mov
push
loopne
cmp
xchg
jecxz
mov
cmp
and
lea
push
inc
rcrl
push
ds
mov
aad
sti
adc
cwtl
inc
fsubl
in
out
cmpsl
sti
loop
mov
mov
or
inc
shll
leave
pop
mov
or
jno
jo
fcoml
mov
cmpsl
ds
shrl
inc
sbb
dec
in
outsb
xor
pop
xor
dec
mov
test
nop
int3
mov
mov
aaa
or
out
xchg
pop
fstl
movsb
pop
xchg
call
mov
inc
stos
jbe
sarb
repz
stc
ds
gs
pop
pushf
test
adc
movsb
arpl
mov
std
das
out
aam
pop
insb
jno
dec
add
sti
lods
lds
out
stos
aas
add
lahf
xchg
or
out
lds
jb
dec
movsb
xchg
cmp
jge
out
out
sub
pop
jle
out
adcl
test
add
and
pop
bound
push
pusha
testl
out
cmc
into
rcrl
dec
arpl
daa
mov
sbb
nop
xchg
add
enter
inc
sbb
jecxz
leave
and
jbe
push
xchg
js
add
sti
je
mov
test
or
sbb
leave
in
mov
lahf
dec
or
sbb
insl
or
mulb
lods
stc
sbb
lods
inc
pop
mov
add
loope
jecxz
inc
xchg
mov
ss
add
imul
sub
or
mov
aad
addr16
out
sbb
mov
hlt
in
mov
outsl
inc
add
loop
idivb
sub
xor
call
mov
sbb
xchg
and
jmp
inc
lret
pop
aaa
and
and
leave
hlt
stos
mov
out
sbb
mov
xor
dec
nop
test
std
cmp
mov
fs
inc
fists
mov
xchg
and
clc
les
sbb
xchg
outsb
hlt
clc
xchg
jb
out
jecxz
mov
daa
insb
int
add
out
mov
outsb
pop
jae
jbe
jl
cs
es
xor
jecxz
cmp
jge
loop
jb
test
sbb
addr16
cmp
and
imul
rcr
rolb
dec
repnz
mov
xor
in
out
in
xchg
fimuls
push
in
xor
push
lcall
adc
sbb
pop
loopne
mov
mov
test
int3
xor
pop
sub
jl
push
clc
data16
sbb
mov
ss
push
dec
fimuls
mov
jmp
add
mov
mov
mov
mov
ffreep
add
movsl
icebp
mov
adcb
int3
fistl
fstpl
repz
lret
fwait
push
mov
cvtps2pd
mov
sub
cli
adcb
js
adc
mov
gs
fdivs
test
mov
cmp
pop
jmp
fst
imul
movsl
lock
mov
mov
imul
xor
jle
or
stos
lahf
dec
out
loopne
xchg
cmp
hlt
pop
xor
pop
dec
bound
sbb
dec
ret
and
enter
jg
mov
filds
gs
and
jl
inc
pop
outsl
pop
mov
push
jecxz
test
adc
and
pop
les
mov
sbb
add
rcrb
lret
mov
dec
sbb
subb
fldenv
inc
pop
jns
scas
inc
xor
dec
adc
add
and
sub
ljmp
sub
add
inc
movsl
sti
lods
push
aas
aam
out
insl
mov
les
add
call
lahf
xor
mov
lea
mov
sub
inc
dec
lret
xlat
lret
lret
adc
arpl
or
dec
jo
in
loopne
push
jne
cmp
les
push
jnp
mov
cltd
lods
clc
or
mov
aam
dec
mov
inc
lds
push
dec
incl
hlt
push
cmp
push
sub
xor
inc
sbb
pop
iret
cli
mov
pop
jle
rorb
gs
cmp
cmpsb
mov
call
out
xor
fcoml
or
push
cwtl
mov
xchg
sub
cltd
movsb
gs
pop
adc
scas
call
sbb
std
xchg
addr16
fldenv
sti
inc
out
add
and
dec
jo
leave
loopne
sti
jge
xor
mov
inc
flds
push
ret
inc
cmpsl
pop
sbb
popl
xchg
add
mov
lcall
push
std
cmp
mov
rcrb
fs
cmpl
push
pusha
cmc
mov
aaa
fdivrs
mov
mov
sbb
jp
dec
lcall
lods
xchg
pop
push
subl
rep
shlb
cmp
jne
mov
or
arpl
sub
sbb
adc
pop
xchg
jae,pt
cs
mov
adc
mov
into
sbb
int
and
mov
movsl
jae
icebp
mov
pop
inc
pop
push
sbb
pop
push
mov
sub
inc
pop
inc
sbb
sbb
add
jnp
mov
subb
fmul
fmull
call
push
push
mov
les
inc
int
popa
push
ljmp
sub
add
ss
or
xchg
mov
std
xor
cwtl
stos
xchg
stos
jne
mov
popf
aaa
cmp
mov
xor
aaa
xchg
lret
jb
leave
pusha
jp
loop
xor
call
push
dec
xor
xor
xor
mov
orb
xlat
clc
mov
sub
stos
dec
sub
push
mov
jns
jmp
xchg
mov
rcl
outsl
adc
out
pop
xchg
pop
flds
mov
iret
jb
movsl
lret
data16
xchg
pop
test
mov
inc
data16
and
int
insb
andb
jp
mov
sbb
mov
mov
lret
mov
rorb
lock
cmp
test
mov
mov
pop
push
push
fisttpl
dec
in
pop
adc
mov
std
sahf
inc
and
nop
mov
or
sbb
push
lahf
jae
cmp
stc
sub
lret
into
out
push
push
jmp
xor
mov
cmp
outsl
cmp
stc
inc
inc
inc
loopne
jecxz
lret
add
scas
mov
jne
push
and
xor
aas
pop
mov
push
std
cmpsl
jge
cmp
outsl
sub
fxtract
sbb
xchg
sub
aas
outsb
rcrl
mov
adc
push
sti
cmp
test
cli
or
sub
jae
mov
pop
mov
lret
mov
imul
mov
psllq
movsl
test
stos
aam
jae
inc
jp
xchg
aad
or
dec
out
rcll
sbb
loop
sbb
in
mov
ret
ret
mov
shl
je
in
inc
jge
push
stos
inc
je
in
mov
jmp
fwait
in
ret
cmp
jns
jb
push
xchg
cmp
inc
pop
icebp
jno
test
mov
mov
iret
jecxz
movsl
arpl
push
mov
adc
and
enter
sub
aas
int
push
fsubrs
inc
sti
cmpsl
ds
push
negb
fisttpl
repz
jnp
lds
adc
or
es
shlb
and
dec
out
aad
xchg
lahf
cmp
imull
daa
cmp
addl
mov
fdiv
lea
and
pop
adcl
or
arpl
mov
jb
sbb
mov
mov
popa
sbb
cmp
dec
mov
push
push
cld
lock
xchg
and
lahf
mov
test
mulb
stos
pop
in
dec
std
xchg
jbe
ja
outsb
xchg
mov
sub
mov
and
pop
cli
ljmp
outsl
enter
mov
sub
mov
mov
and
or
add
pop
dec
imulb
daa
sub
cli
push
jle
pop
push
or
and
inc
or
jle
stc
pop
cmp
sbb
lahf
setns
inc
push
push
or
js
rorb
cmp
adc
movsl
cmp
xchg
pop
pop
adc
int3
mov
test
or
sbbl
jmp
les
xor
shll
push
arpl
mov
cmp
jb
jge
push
int
lock
push
out
cmpsl
test
std
jmp
sti
or
push
ja
fisubrl
mov
add
mov
aaa
push
dec
cmc
jb
inc
jmp
insl
and
popf
test
and
popf
ds
mov
mov
mov
jp
sub
mov
cmpsl
mov
xchg
or
rcrl
xchg
sbb
loope,pt
testb
out
cmpsb
sahf
sarl
dec
andb
out
fadds
sub
popa
mov
xchg
adc
test
cwtl
out
data16
xchg
movsb
jecxz
inc
test
jb
cltd
mov
shll
mov
sub
push
loope
je
jmp
cmp
sti
sarb
jno
pop
negb
xor
xchg
mov
pop
popf
aas
pop
add
mov
ret
mov
xchg
jno
imul
lock
fistps
push
pop
lret
je
std
jg
adc
scas
push
mov
pop
cmp
mov
int3
lahf
or
cs
sti
rol
adc
ss
inc
sti
push
stos
and
int3
inc
mov
popa
pop
rol
inc
mov
call
mov
sub
mov
das
or
push
add
push
sbb
inc
popa
jae
jp
aam
insl
sub
mov
adc
out
out
sub
jb
popa
imul
push
mov
mov
jae
orl
push
wrmsr
push
out
popa
mov
filds
push
mov
fadd
pop
into
push
xchg
wbinvd
dec
pop
cmp
imul
push
push
pop
pusha
notl
cmp
jne
pop
mov
ret
aad
das
outsb
in
mov
nop
mov
sarb
std
xchg
insl
repnz
lret
nop
test
arpl
xchg
inc
inc
aas
add
dec
iret
movsl
add
pop
jns
mov
add
mov
test
mov
outsb
leave
stc
popf
adc
xchg
stc
mov
fwait
mov
add
test
jne
sbb
push
out
mov
mov
push
repz
sarl
push
inc
or
clc
dec
outsb
ja
adc
scas
push
sbb
fs
or
cli
add
daa
adcl
addr16
inc
das
mov
repnz
in
pushf
lds
mov
push
push
mov
jmp
shlb
ja
cmp
rolb
add
clc
xchg
sub
add
mov
xchg
and
mov
push
inc
in
dec
xchg
aaa
in
mov
ljmp
mov
push
lods
or
push
icebp
mov
mov
sub
sub
imul
mov
sub
cld
mov
sbb
and
vpunpckhbw
in
jb
or
ret
aaa
xchg
call
shl
cmpsb
and
int
push
adc
pop
xchg
rcrb
das
jnp
adc
into
pop
lcall
cmp
aam
test
inc
das
inc
adc
dec
lahf
xor
push
push
daa
add
sbb
mov
push
fisttpll
and
xor
inc
mov
push
das
clc
sbb
or
stc
cltd
pop
add
aam
inc
and
imul
sti
cltd
xor
inc
inc
pop
xchg
xor
inc
inc
xchg
mov
aad
xor
leave
scas
mov
jnp
lcall
dec
insl
lcall
es
and
mov
push
xorl
ljmp
and
add
push
mov
imul
or
loope
loope
bound
jnp
scas
outsl
push
mov
lcall
cmp
repnz
call
mov
fmuls
add
loopne
mov
scas
daa
pop
add
push
repz
int
dec
int3
fimuls
sbb
fwait
bnd
xor
loopne
mov
inc
ret
add
fdivs
scas
adcb
or
mov
in
mov
fstp
xor
loop
jno
notb
scas
das
hlt
andl
push
in
addl
in
xchg
push
push
jne
mov
clc
lcall
sbb
jmp
pop
jnp
xchg
out
dec
lcall
adc
cmp
repnz
push
aad
imul
lds
mov
fldl
idiv
inc
aad
insb
filds
popf
stos
in
dec
bound
add
and
je
lcall
cs
pushf
aaa
mov
inc
and
mov
lock
and
fistps
ss
jns
mov
mov
inc
ret
dec
adcb
xor
fwait
xor
mov
jnp
repnz
popa
mov
xchg
imul
mov
push
adc
scas
xor
fisttps
jns
or
ror
adc
loop
push
xor
fcomps
ret
pop
es
push
push
or
push
test
fwait
sti
pop
or
stos
pop
cmp
out
shll
lods
rcrb
sub
imul
lea
mov
daa
jnp
mov
je
or
mov
jmp
sbb
pop
fsubr
jae
movsb
jg
cltd
sub
inc
ss
or
mov
sbb
mov
sub
in
cmpsl
push
leave
shll
mov
xchg
cmp
mov
adcl
pusha
loop
xchg
repnz
dec
jns
sti
xor
mov
sub
adc
aas
iret
stos
xor
pop
aaa
add
jg
adc
mov
mov
mov
sbb
in
push
or
data16
rolb
in
sub
pop
mov
pop
inc
cmp
fmul
inc
lods
add
and
cwtl
pop
sar
pushf
xor
mov
aas
push
data16
push
pushf
mov
sbb
xchg
pop
pop
outsl
sbb
sub
pop
push
fisubrs
and
hlt
jecxz
call
jle
mov
repz
cmpsl
pop
outsl
fld1
pop
xor
int
int
sbb
add
ja
mov
jge
jo
addr16
mov
pop
jne
loope
hlt
jp
mov
xchg
ljmp
in
scas
mov
xchg
push
jns
int
mov
jns
push
push
movsl
les
jg
fisubs
add
imul
xorb
popa
pop
aaa
into
cltd
bound
dec
mov
or
lock
ljmp
dec
jge
repnz
enter
pushf
lretw
xlat
xchg
mov
or
sub
cmp
movsb
mov
jb
xchg
adcb
not
lahf
in
or
in
stos
aaa
and
push
inc
mov
in
push
shl
repz
mov
xor
mov
in
sub
cmp
stos
aaa
dec
testl
sbb
out
cmc
add
popl
dec
pop
test
popf
stos
or
test
loopne
sub
jno
in
in
mov
xchg
lea
cli
cmp
mov
inc
xchg
out
mov
mov
jns
xchg
mov
lcall
inc
push
mov
lret
jecxz
es
in
stos
cmp
mov
cld
scas
pop
cmpsl
sbb
outsl
or
push
lods
das
xchg
ljmp
jne
sub
dec
popf
das
fdivrl
mov
ficoml
mov
push
fnstcw
pop
and
xchg
insb
cmpsl
dec
stc
pop
jg
orb
xor
xchg
xchg
mov
gs
mov
push
mov
test
sbb
or
pop
or
xor
mov
fstpl
xor
inc
inc
loope
cmp
pop
jbe
repnz
xchg
sub
xchg
cmp
pop
add
adc
leave
sbb
xor
imul
xchg
lock
pop
clc
xchg
sahf
xor
mov
ss
xor
fimull
cli
push
sub
sahf
fsubr
cmpsl
fstpt
out
aam
test
cmp
cld
loope
mov
jno
add
or
push
subl
mov
push
lea
cmp
mov
loopne
xlat
loope
jmp
stos
add
das
jbe
jle
sub
pop
mov
xchg
add
je
add
out
cltd
jecxz
test
mov
bound
mov
lods
mov
mov
sbb
inc
fsub
xchg
ret
hlt
pop
sub
adc
add
adc
mov
lcall
push
add
push
sub
xchg
aam
inc
out
pop
pop
ficoms
je
xor
pop
add
lahf
testl
jns
es
cwtl
rclb
call
xchg
mov
pop
xchg
call
sub
push
fs
das
lret
pushl
aaa
push
or
adc
jns
mov
fisubrs
outsl
push
push
mov
mov
xor
mov
sub
iret
mov
xlat
pop
push
sub
sarb
mov
es
fmul
lahf
jge
push
repz
sti
push
mov
out
pop
hlt
pop
lret
movb
popa
xor
sub
les
test
roll
sub
dec
pushf
jecxz
cmp
mov
jp
or
ret
xlat
hlt
test
mov
or
shll
lock
lock
and
jns
and
stos
push
xchg
inc
cltd
mov
inc
cmp
and
jo
ds
xor
sbb
pop
pushf
fstpt
xchg
or
cwtl
and
mov
arpl
mov
jns
out
call
cmpsl
cmp
div
mov
push
dec
movb
mov
lea
pushf
mov
push
in
ror
adc
stos
pop
inc
lret
aad
pop
jmp
jg
jg
mov
in
adc
mov
scas
notb
sbb
shr
dec
cwtl
mov
pop
lcall
inc
pop
ficomps
data16
scas
xor
outsl
test
notb
sbb
pop
int
pop
push
cmp
imul
pop
push
mov
mulb
xor
dec
pop
sub
jl
push
push
iret
xor
pushf
sbb
mov
sbb
sbb
repnz
mov
sbb
ret
aas
jle
xchg
iret
push
out
cmp
in
jmp
sbb
jle
sahf
test
in
cltd
rclb
scas
out
pop
sub
arpl
jns
dec
stos
stc
adc
dec
xor
jecxz
in
rcrl
jg
notl
lahf
daa
push
std
sub
fdivrl
fldcw
jb
cli
mov
enter
mov
clc
mov
mov
std
push
shll
xchg
sub
jge
cld
dec
loope
inc
add
push
pop
out
shll
cmp
inc
fsubrp
and
shlb
int3
pop
test
xchg
std
adc
and
push
cs
int
inc
lds
imul
insb
xor
xchg
outsb
inc
insb
inc
push
iret
insb
jle
jb
imul
cmpsl
imul
mov
mov
ja
stc
loope
movsb
cmp
add
ror
mov
inc
outsl
mov
orl
and
in
jmp
jb
sbb
jb
clc
cmc
dec
jecxz
sbb
dec
adc
ljmp
das
pop
mov
jecxz
in
adc
inc
inc
xor
stos
jle
cmp
into
jmp
in
pop
dec
push
dec
cmp
jp
addr16
pop
pop
inc
shlb
mov
mov
jne
dec
test
cmp
movsb
add
jne
dec
and
xchg
je
dec
std
stc
and
mov
shrb
sbb
daa
or
jne
pop
outsb
xor
jmp
icebp
popa
jbe
rcl
push
out
push
inc
ret
xlat
jp
jbe
jne
xor
addr16
js
insl
pop
jg
dec
push
in
inc
icebp
pop
cmp
insb
add
mov
mov
mov
movsb
mov
ficoms
mov
jg
cmp
nop
push
dec
hlt
push
cmp
xchg
popa
iret
sub
add
repz
jecxz
lcall
in
lcall
out
mov
pop
xchg
scas
dec
loop
and
dec
cs
in
or
sub
push
js
rcl
and
lcall
repnz
cmp
loopne
push
jno
adcl
lahf
test
nop
inc
out
sbb
pop
pop
leave
pusha
aaa
inc
cmp
inc
sbb
aas
dec
and
jle
arpl
fstpl
adc
pop
mov
shlb
scas
paddusb
inc
ret
addb
add
cli
incl
inc
js
sbbb
adc
frstor
mov
xor
rclb
xor
jo
mov
xor
out
out
jecxz
cmp
fnstenv
repz
test
les
push
and
cmpsb
ret
xchg
dec
sbb
daa
mov
mov
dec
ja
call
test
sarb
adc
push
fiaddl
in
scas
xchg
sub
dec
lret
not
and
inc
add
sti
push
adcb
mov
push
ss
es
jo
ljmp
call
insl
pusha
sbb
mov
ret
xor
pop
dec
inc
fldt
daa
xorb
xlat
bound
imul
arpl
fnsave
into
pop
cmp
into
pop
movb
mov
popl
push
and
stc
cmp
jnp
sarl
dec
sbb
ljmp
pop
mov
popa
nop
jnp
movsl
mov
xor
mov
jb
les
imul
jmp
rcll
cmp
add
cmp
pop
sub
lret
mov
pavgw
mov
adc
cltd
push
pushf
cmpsb
dec
sub
push
adc
int
add
pop
mov
adc
jns
jg
inc
into
add
lods
jnp
fdivrp
sub
cs
jae
repnz
ror
pop
fnsave
dec
mov
shll
cmp
movsl
add
dec
hlt
inc
push
inc
icebp
insl
shrl
adc
cwtl
jge
loop
add
lea
mov
cmp
aad
sub
adc
or
sbb
test
jo
repnz
andl
sub
sub
popf
xor
and
and
pop
jnp
dec
mov
test
pop
lret
je
adc
icebp
inc
sub
pop
mov
jle
xchg
push
lea
xchg
add
sub
pushf
push
xor
xchg
and
test
jo
jg
push
xchg
ja
fsubrs
filds
cli
lret
xor
and
sti
mov
addl
pop
jo
jg
add
or
bound
aam
mov
mov
mov
mov
int3
mov
jae
shlb
mov
mov
ficoml
adc
fsubrs
push
test
pop
aas
jno
pop
enter
cmp
pushw
sub
jge
xchg
and
inc
dec
jge
test
mov
inc
lret
outsl
cmc
jbe
cmp
adcb
pop
aaa
es
dec
inc
fldl
mov
pop
push
repnz
in
imul
pop
adc
test
rcrl
push
sub
cmp
ret
pop
jno
lea
adc
sbb
sbbl
or
stos
mov
cs
test
pop
sbb
mov
popa
sub
enter
outsb
or
popf
pop
jmp
ds
ja
jns
insl
outsb
add
pop
dec
sub
jg
xor
nop
cmova
das
or
mov
pop
push
in
inc
ss
jle
or
and
andb
jle
mov
test
pop
lcall
shll
cmp
inc
daa
outsl
in
imul
jno
mov
mov
je
dec
dec
outsl
mov
cmp
pop
lods
movsl
pop
mov
jmp
sub
cmpsb
xchg
fs
jmp
popf
lock
repnz
cmp
pop
sarl
cmp
enter
mov
xlat
jp
jecxz
dec
test
and
popa
and
jl
push
push
loope
sarb
stos
pop
mov
divb
sar
icebp
insb
pop
subb
mov
jno
rclb
ss
jb
test
into
pop
out
aad
leave
pop
mov
mov
mov
inc
les
dec
mov
xchg
sub
sarb
stc
dec
addb
sbb
xor
lcall
dec
insl
clc
xchg
andl
and
mov
mov
lret
icebp
and
push
jmp
insl
js
xor
vpsadbw
loope
cmp
push
xor
dec
push
out
gs
mov
lea
jnp
daa
mov
mov
rorl
or
adc
pusha
addr16
or
aas
jecxz
jne
and
xor
ret
mov
pop
subl
leave
add
es
in
test
cmp
inc
mov
dec
cmp
in
push
lock
movsb
pop
rorb
pop
adc
and
iret
xor
sub
pop
add
clc
lds
inc
ds
jle
mov
fimull
mov
mov
mov
scas
pop
adc
push
lret
lds
mov
sub
add
cmp
add
cmc
fldl
inc
pop
dec
fwait
push
pushf
dec
inc
call
int3
mov
std
lods
lods
int3
insb
add
xchg
inc
sti
out
adc
fcoms
mov
test
sbb
and
leave
in
pop
repnz
jo
inc
mov
jmp
xchg
cs
push
or
xchg
clc
mov
jno
dec
out
in
lds
mov
decl
sub
subb
cmp
xor
cli
and
xor
nop
outsl
data16
movb
push
fldenv
dec
adc
inc
mov
pushf
fisubrs
subb
mov
repz
dec
mov
or
out
in
xor
xor
rcrl
or
xchg
dec
ljmp
jnp
and
call
sbb
hlt
cmp
in
and
jno
orb
mov
pop
out
outsb
pop
inc
fcoml
ds
jg
or
mov
mov
jle
jp
rclb
iret
and
adc
mov
jle
call
sub
mov
iret
and
loop
or
mov
add
out
adc
cmp
enter
xor
mov
mov
cltd
insl
xor
xor
arpl
sub
negb
sbb
sbb
rolb
sub
xchg
xor
and
jo
xor
movb
dec
iret
scas
sub
js
dec
push
push
lcall
xchg
inc
pusha
fildl
pop
and
xchg
outsl
rorl
adc
cmp
xor
out
lds
mov
jnp
or
mov
rcrb
shrb
outsl
out
add
aas
or
popa
call
imul
inc
xchg
pop
mov
or
pop
out
clc
imul
or
mov
mov
push
bound
push
push
jne,pt
int
ljmp
mov
bound
push
jmp
lods
movb
test
xor
iret
mov
sahf
xor
idivb
cmp
dec
pop
inc
mov
sbb
xor
dec
cmp
push
sub
lret
decl
hlt
or
adc
scas
sub
sbb
scas
inc
sub
pop
xchg
mov
into
and
aas
outsb
add
push
in
sti
mov
enter
cmp
imul
inc
push
dec
mov
into
ror
lret
add
cmp
scas
jge
fbstp
dec
push
dec
sti
leave
test
push
ret
fcomi
jle
ret
mov
jns
mov
add
je
lcall
inc
out
loop
mov
or
ja
pop
popf
pop
add
mov
test
adc
aam
cld
loope
push
xchg
jge
fs
pop
mov
cmpsl
lods
push
mov
insl
push
inc
fldenv
pop
sbb
outsl
sarl
mov
pop
and
cli
out
push
lret
or
add
addr16
mov
or
negl
pusha
sub
inc
mov
mov
mul
and
dec
and
dec
pop
loope
xor
cmp
xchg
adcb
mov
jl
aas
mov
lds
jg
and
add
push
xchg
and
idivl
in
rcrl
adc
fwait
or
pop
cmp
mov
out
mov
pop
dec
cmp
lcall
xchg
sub
rolb
nop
imul
call
shll
push
insl
repz
and
pop
into
insb
in
or
lea
ret
mov
fidivrl
mov
test
ds
xchg
call
pop
inc
aad
fwait
inc
in
cmp
pop
cld
out
jge
repnz
xchg
cmp
sbb
aas
lret
adc
jnp
adc
sbb
testb
jmp
xor
xchg
loopne
stos
cmp
mov
popa
mov
jae
mov
xor
test
ret
cmp
mov
sar
outsb
ret
pusha
add
bound
aad
mov
push
rep
pop
mov
out
add
or
filds
cs
mov
inc
mov
or
mov
test
cwtl
testb
or
gs
xchg
push
pop
adc
push
mov
enter
lahf
inc
xchg
int3
inc
loop
cltd
sbb
jns
lcall
push
js
lahf
cmpl
sub
test
mov
pop
push
xchg
sub
push
add
or
ret
hlt
push
out
jae
sbb
dec
cltd
xor
sub
xchg
loopne
gs
jb
stc
out
push
mov
inc
push
cmp
sbb
sub
inc
scas
jnp
jo
shll
cmpsb
es
stos
mov
mov
bound
sbb
xor
jge
lds
pop
std
adc
cmpsl
mov
std
faddl
and
insl
xor
and
fdecstp
imul
rorb
and
icebp
push
call
pop
push
and
sub
cmp
jne
out
sbb
aaa
into
in
mov
adc
shrb
fisubl
or
dec
incl
xor
add
cmp
mov
out
out
add
pop
jle
adc
jbe
xchg
mov
jae
inc
popf
fnstcw
cs
push
ficompl
stos
jge
jp
cld
and
loopne
enter
outsl
mov
jge
ret
pop
xlat
repz
subb
cs
in
push
sbb
pop
sbb
js
xor
enter
lahf
insb
shrl
shl
jbe
fxtract
or
mov
insb
iret
scas
lds
jg
jb
pop
test
adc
data16
mov
loope
aam
xchg
dec
dec
xor
dec
ret
push
std
cmp
mov
lahf
mov
push
and
dec
sub
test
mov
loopne
push
cmp
jg
add
inc
mov
jl
stos
push
test
fldpi
jne
mov
sbb
jmp
mov
nop
inc
pop
mov
mov
repz
mov
arpl
add
or
imul
sar
jo
lret
clc
mov
imul
or
adc
imul
shlb
pop
jne
mov
ss
inc
out
mov
shrl
addr16
inc
mov
push
xor
pusha
incb
pop
lods
addb
mov
aas
shll
into
rol
out
movsl
xor
outsl
mov
rorl
in
and
add
inc
dec
test
popa
mov
mov
leave
outsl
insb
jle
sub
cmp
jns
addb
test
mov
xlat
sarl
sub
int
int
mov
loop
mov
inc
add
xchg
inc
push
ret
dec
dec
loop
lods
je
aas
enter
jmp
scas
es
cmp
jae
in
dec
jmp
sarl
out
sbb
mov
add
fisubrs
push
in
cwtl
cmp
push
mov
pusha
jne
shl
mulb
sahf
jecxz
mov
mov
push
pop
or
xchg
mov
and
fcomps
push
jae
cmp
test
mov
dec
dec
outsb
mov
pop
aam
movb
mov
xchg
jae
int3
jae
sbb
xor
fbstp
push
mov
and
inc
adc
sbb
das
into
enter
stos
or
lret
push
push
ds
icebp
push
push
sub
push
aas
insb
cmc
adcl
data16
xchg
shrb
cmp
sbb
mov
stc
mov
inc
dec
outsb
jl
xor
xorl
sub
adc
jnp
scas
sbb
ret
iret
bound
fcmovne
lcall
pop
sub
pop
loope
sbb
or
fists
cltd
cmpsl
shll
or
pop
jo
sbb
ret
pop
xchg
jns
movsl
mov
andl
repnz
rol
inc
xchg
mov
xchg
xchg
pop
xchg
cs
clc
lods
sub
sub
outsb
add
push
outsl
adc
fistps
mov
mov
xchg
pop
adc
mov
daa
decl
loop
pop
mov
inc
adc
loopne
insl
sbb
les
aam
pop
data16
dec
aam
sbb
xchg
adcl
test
jge
sub
cmc
pop
inc
add
out
sbb
lahf
sbb
mov
shrb
cwtl
call
cwtl
test
xor
imul
mov
mov
cli
xchg
dec
or
xorb
jo
fs
and
jp
int3
or
into
add
mov
dec
pop
cwtl
lcall
jl
mov
scas
push
mov
js
pop
repz
mov
and
pop
xor
jge
mov
call
movsb
cmpsb
fstpt
aad
and
mov
jg
inc
sahf
or
jnp
adc
ss
icebp
mov
sbb
shlb
mov
pop
rol
loopne
jmpw
jge
or
int
add
ret
xchg
test
sub
fnstsw
popa
inc
cs
xchg
push
outsl
int3
aam
ds
push
mov
stos
bound
lock
flds
push
inc
stc
shl
cmp
mov
or
nop
daa
popa
dec
mov
repnz
std
shll
push
jecxz
sarb
out
jns
push
xchg
cmp
jb
adc
loopne
fs
inc
loope
jno
imul
shr
decl
mov
sbb
xchg
stos
cli
mov
movsb
mov
jo
ret
rolb
inc
jp
and
sti
xchg
jo
clc
aaa
jae
lret
sbb
aas
lret
push
adc
pusha
cwtl
push
mov
rcll
push
je
es
add
insb
add
mov
jbe
jns
mov
aad
and
or
imul
xor
test
inc
jp
inc
push
sub
or
add
jae
aaa
xchg
rcll
pusha
mov
test
fdivl
push
jge
xor
mov
or
mov
out
sub
and
sbb
aam
xchg
out
cmp
mov
dec
pop
hlt
test
adc
aas
mov
sarb
rcrl
dec
nop
sbb
in
pop
into
inc
ret
lds
and
aas
lods
lods
adc
jne
hlt
xorb
ss
adc
push
sbb
dec
out
push
out
imul
les
fs
fs
add
mov
cmpsl
push
aaa
fstpl
add
cs
add
out
das
movsb
repz
lea
mov
testl
and
ret
es
dec
push
test
mov
sbb
cmc
adc
fst
fs
cmp
dec
fucomp
cmp
mov
fcoml
dec
cmp
stos
inc
jnp
jecxz
cmpsl
movsb
push
les
dec
pop
loop
sbbl
adc
fdivl
les
pop
pop
pop
sub
test
hlt
aas
gs
pop
sahf
pop
loopne
xor
push
addr16
ss
rclb
repnz
xlat
lea
js
and
mov
mov
push
addr16
test
inc
inc
sub
cmp
rcl
push
pop
lcall
loope
jns
mov
push
in
sbb
in
orl
sbbb
jnp
int
jnp
cmpsb
add
ljmp
shrl
sbb
loop
xchg
cmc
jnp
insl
scas
or
xchg
mov
cwtl
das
std
cmp
push
sti
add
cmp
aam
sbb
push
cmpb
je
ret
jo
testl
aaa
jl
bound
loopne
adc
xchg
mov
pop
xchg
mov
imul
frstor
cld
rolb
xchg
jg
inc
in
repnz
int3
es
rcrl
setle
xchg
or
cs
xchg
clc
stos
jne
fcompl
xchg
jae
hlt
into
enter
mov
mov
fnstenv
mov
jns
imul
insb
imul
mov
shll
ret
mov
cld
or
cmp
jp
mov
test
add
mov
pop
xor
sub
cmp
stos
xchg
out
outsb
test
lahf
loop
test
mov
out
xor
mov
stos
imul
mov
into
loop
mov
mov
lods
call
add
inc
scas
pop
cmp
adc
push
ljmp
ljmp
inc
int
cmp
mov
mov
fs
inc
xor
xchg
dec
rcll
add
scas
inc
std
push
mov
jmp
les
jo
pop
out
cli
repz
xor
hlt
mov
add
scas
idivb
or
notl
mov
lret
sub
sub
dec
pop
pushf
and
iret
dec
popf
mov
xlat
and
or
xor
out
pusha
xor
sbb
pop
mov
hlt
enter
fimull
xor
test
ret
insl
outsl
popf
or
stc
or
jl
stc
sbb
pop
std
inc
mov
data16
test
fidivs
out
repz
push
js
jmp
in
lea
inc
inc
movb
xor
icebp
sbb
mov
les
sub
cmp
lods
sub
mov
cmpsb
int
rcrb
cmp
sub
jg
in
fiadds
dec
cmp
dec
outsb
sub
pop
ret
rolb
aad
xor
dec
test
gs
repz
xchg
jge
les
rcrl
push
mov
mulb
out
mov
pop
divl
idivl
and
je
xor
push
mov
sub
jnp
adc
pusha
ror
pop
sub
lock
xchg
fsubrs
clc
out
scas
inc
jecxz
pop
or
add
mov
je
adc
cmpsl
push
insl
push
pop
fstpt
test
dec
inc
daa
adc
xchg
fsub
xchg
shlb
jle
xor
fdivrp
insb
add
xor
adc
push
xchg
shll
mov
in
mov
out
jg
add
lret
insb
push
jne
push
adc
scas
punpcklwd
stos
iret
fcoms
or
hlt
or
xchg
mov
mov
push
cmp
pop
xor
adc
sar
mov
xor
xchg
popa
add
xor
inc
loop
inc
inc
lock
movsl
fldcw
mov
shlb
in
pushf
sub
sti
xchg
and
icebp
loope
sahf
xor
pop
add
fs
adc
dec
jp
fcmove
fs
std
add
jmp
adc
mov
ss
inc
jle
mov
leave
cli
rcrb
fnstsw
stc
or
sti
cmpb
scas
fbld
add
das
xchg
cmpsl
jmp
add
es
popf
mov
ljmp
hlt
adc
clc
cmpsl
sbb
jno
jl
sbb
fstl
stos
outsl
add
insb
lret
lret
and
ds
pusha
stos
mov
push
push
and
scas
idiv
jo
ja
das
cli
pushf
pop
fs
mov
add
pusha
imul
aam
sti
stos
jns
sub
xor
je
stos
in
out
add
loopne
add
faddp
sahf
outsl
add
lahf
mov
and
lods
sub
cmpsl
cmp
lcall
jle
push
ret
push
movb
or
imul
xor
xor
mov
push
ret
and
sti
insl
shlb
imul
lret
andb
addl
mov
pop
movsb
cmp
and
dec
call
out
push
movsb
pop
in
clc
mov
mov
lahf
and
aad
pop
into
mov
out
addr16
jns
out
out
jp
and
scas
fwait
rorl
fsubp
pop
int3
jae
mov
repz
test
xchg
cs
pop
rcl
mov
mov
push
pop
bound
vmwrite
push
lods
stos
movb
mov
es
push
jle
icebp
inc
popa
mov
sbb
jecxz
pop
std
and
mov
mov
lock
addr16
daa
pop
fs
dec
jb
xor
mov
movsl
cs
push
imul
or
int3
ficoms
bound
jecxz
or
aam
subl
mov
arpl
fisubl
lock
imul
mov
mov
jmp
jbe
dec
jecxz
xor
dec
xor
imul
sbb
sbb
movsb
xor
lods
push
jl
fisubrl
adc
and
xchg
sub
cli
mov
or
xchg
repnz
dec
pop
pop
pushf
popa
test
jp
pop
xor
mov
xchg
push
arpl
ss
test
mov
sub
dec
mov
xchg
aad
xor
repz
sar
outsb
pusha
xor
iret
pop
lods
jnp
popf
and
pop
or
jns
xchg
rcrb
negb
loop,pn
inc
push
sbb
sahf
pop
mov
shll
outsb
push
or
push
lcall
xor
dec
jnp
xor
add
push
mov
jbe
addr16
lahf
stos
mov
mov
data16
mov
xchg
arpl
mov
out
xor
cmp
xor
ret
inc
mov
add
imul
jge
outsl
jge
push
push
addr16
stos
mov
dec
and
jge
adcl
adc
adc
pop
cld
mov
in
iret
push
sbb
das
jb,pt
bnd
and
adc
aaa
ss
popa
notl
xchg
dec
add
and
cltd
xor
xchg
adc
push
mov
push
rorb
loop
dec
fidivs
int3
xor
sahf
jo
mov
jmp
test
in
std
xchg
push
sub
mov
fadds
push
adc
scas
iret
stc
xor
push
fnstenv
testb
sub
pop
cmp
pop
sahf
outsl
pop
cmp
fiaddl
jns
xchg
ja
leave
in
shll
sub
neg
repz
stos
mov
xchg
jecxz
into
mull
xchg
stos
mov
mov
jl
dec
mov
inc
and
dec
int3
stos
cmp
iret
outsl
jmp
andb
ret
sub
xor
int
les
sub
xchg
cmp
out
mov
idiv
inc
dec
inc
clc
xchg
jge
cltd
sub
lds
xor
ret
jns
aam
and
iret
push
cli
ret
and
cmp
sub
cmp
ljmp
lea
loop
in
inc
stos
inc
lds
mov
in
inc
dec
icebp
adc
jb
xor
ss
adc
cmp
jb
adc
fldl
outsl
test
and
lods
fcomp
pop
jecxz
adcl
push
xchg
imul
xor
ret
bound
sahf
jno
scas
sub
repnz
lret
or
aad
jns
or
push
add
fisttpll
mov
jno
fwait
gs
dec
fisttpll
push
lcall
sahf
clc
lds
and
dec
sahf
je
lock
and
and
iret
lcall
out
outsl
leave
xor
jl
pop
lahf
push
sub
cmp
sahf
lods
fwait
aam
cmp
jg
push
fdivl
xor
cmp
and
mov
cmp
jne
subl
dec
add
cmc
mov
cmp
fldl
fnsave
js
bound
movsl
cmp
xchg
mov
dec
cmpl
mov
push
cmp
out
inc
mov
call
icebp
pop
fstps
push
inc
dec
mov
jl
sub
les
pmovmskb
add
sub
sahf
sbb
and
adc
pop
lahf
cld
out
xchg
rcll
mov
pop
insl
test
sbb
xor
ss
movsl
popf
imul
push
je
xor
jecxz
stos
loope
pushf
popf
adc
inc
sbb
dec
das
repnz
push
aas
push
fstl
xchg
fimuls
mov
and
andl
dec
andb
add
cld
xchg
outsb
sbbl
movsb
out
insl
fsts
das
ljmp
loopne
in
lret
fisttps
dec
mov
jbe
and
push
sbb
jge
or
fstl
jo
inc
stos
in
sbb
add
mov
popa
test
out
xchg
adc
ljmp
fdivl
xchg
inc
jl
pop
cli
push
lea
popa
mov
sbbb
push
jg
inc
and
jno
cli
mov
xchg
push
test
out
lret
xor
pop
sahf
jmp
xor
addr16
mov
inc
sbb
cs
in
imul
aam
and
dec
loopne
pop
repz
in
filds
push
repnz
sbb
fisubrl
mov
nop
movsl
xchg
push
sbb
xchg
cmp
out
cmpsb
adcb
mov
jmp
js
xor
sahf
cmp
scas
stos
enter
adc
adc
testb
es
cmpsb
mov
cmp
stos
sub
aam
push
inc
aam
dec
movsb
pop
mov
cmp
les
xchg
mov
test
scas
xchg
shlb
in
xchg
mov
sbb
xchg
imul
imul
mov
in
dec
addr16
pop
add
fistpll
push
xchg
inc
xlat
enter
mov
pop
push
into
dec
sarb
pushf
mov
fidivrs
mov
pop
cmp
mov
cmc
add
mov
push
and
iret
xchg
arpl
scas
sub
mov
push
sub
lret
sti
dec
mov
add
dec
push
cs
cmp
aaa
shrb
ret
lret
pop
insb
sbb
cmp
push
lock
cmp
ds
jecxz
add
jmp
loope
decb
and
cmp
enter
xor
push
pop
fwait
sbb
xor
or
in
imul
inc
or
xor
dec
out
orb
sub
sub
jmp
dec
lret
push
mov
mov
movb
sbb
stc
test
scas
mov
fists
sub
insl
dec
loope
leave
pop
sub
ljmp
cmpl
inc
lret
xor
push
inc
cli
push
ss
lea
xor
into
rcrb
mov
push
in
and
jne,pn
ret
hlt
sub
xchg
ds
dec
mov
pop
push
jge
les
cltd
into
push
mov
jno
test
and
dec
imul
in
or
push
mov
push
or
mov
andl
lods
jnp
stc
xchg
fcomps
sbb
mov
sbb
or
and
nop
push
lods
inc
xchg
lret
iret
push
mov
pop
pop
test
iret
cmp
cmpsl
insl
mov
mov
call
cmp
insb
push
xchg
dec
or
push
lods
xor
mov
aaa
mov
shll
add
fbstp
fs
or
std
adc
mov
inc
add
lods
call
aad
sahf
inc
xchg
pop
sub
sahf
int
js
mov
decl
adc
jecxz
imul
adc
mov
xchg
divl
or
mov
and
push
xchg
shll
jb
inc
mov
jbe
mov
push
mov
out
mov
cmp
out
adc
jns
ss
pop
jle
lea
bound
mov
sub
jb
mov
cltd
dec
or
adc
nop
ffreep
push
sub
push
cmp
sub
int
fwait
addr16
jo
pop
jbe
lea
jg
dec
fmul
mov
loop
push
testl
cld
xchg
or
mov
dec
mov
ret
xor
push
jmp
push
inc
adc
flds
mov
mov
mov
mov
mov
pop
adcb
sbb
test
or
call
lea
push
imul
xor
pop
jbe
pop
push
mov
mov
ret
xchg
xor
punpckldq
pop
pushf
fcompl
mov
mov
sub
add
shll
repz
fildl
movsl
addb
xchg
enter
lahf
cmp
push
cs
sub
aas
mov
push
mov
cmp
cs
cmpl
in
inc
xlat
movsl
daa
std
pop
out
stos
aam
js
out
sub
stc
mov
movsb
mov
movhlps
mov
repz
sbb
inc
xchg
adc
xchg
mov
out
xor
fxch
mov
dec
mov
xlat
sbb
mov
jg
adc
mov
pop
cmp
xchg
add
es
call
dec
dec
dec
cmpsl
dec
jo
push
push
fsubs
jecxz
stc
jecxz
mov
sahf
ss
jmp
int
sbb
xorb
aas
imul
adc
test
loopne
add
xor
xlat
sbb
add
mov
push
cmc
push
outsb
sub
scas
xchg
movsb
dec
xor
mov
xchg
lahf
js
shr
int
and
mov
add
cli
daa
xchg
mov
lods
pop
loope
arpl
add
clc
pop
cwtl
clc
jne
and
xchg
imul
and
add
xor
data16
adc
les
add
rcrl
xlat
pop
std
mov
inc
pop
insl
jb
adc
mov
aam
add
adc
and
lcall
into
imul
lret
lret
loope
jp
and
cltd
dec
daa
mov
pop
cltd
inc
adcl
cmp
addr16
xor
xchg
jbe
insb
mov
aaa
into
sub
push
shrb
mov
cltd
mov
shl
stos
mov
mov
pop
mov
mov
jnp
mov
push
jns
cmc
mov
jp
push
shld
jae
xchg
sub
mov
jge
push
mov
aam
mov
jbe
popf
mov
int3
ja
sub
or
mov
push
daa
clc
xor
mov
add
test
sti
xchg
xchg
add
push
ljmp
pop
repz
in
mov
cli
xor
fldcw
inc
pop
xchg
cmpsb
es
cmp
sub
scas
popa
lret
push
xchg
iret
inc
or
in
cmp
mov
xlat
mov
sbb
xor
mov
call
jg
clc
mov
shll
push
pop
enter
ret
xlat
sbb
outsl
dec
lock
enter
jb
sti
xchg
mov
xchg
js
stc
dec
push
hlt
popa
add
mov
fisubrl
inc
leave
push
scas
sub
dec
scas
sub
test
inc
vplzcntq
int
cli
cwtl
or
fstpl
push
cltd
or
les
push
mov
repnz
mov
add
iret
sbb
mov
sbb
inc
xlat
andl
and
outsl
subl
xsha1
cmpsb
iret
sub
mov
mov
fbld
sub
and
das
push
in
push
and
jae
xchg
xchg
and
add
inc
xor
adc
stc
inc
dec
fbstp
pop
out
insl
add
jns
sub
mov
cli
jnp
pop
cmp
movsl
push
hlt
add
inc
push
adc
ss
aas
stos
cli
jge
fstp
inc
mov
aad
vandps
mov
push
dec
mov
jecxz
sbbb
loopne
std
sub
add
test
xor
jae
jnp
cld
mov
mov
or
add
enter
leave
imul
gs
imul
loopne
mov
sbb
fisubl
mov
mov
stos
clc
or
xor
sub
mov
mov
adc
add
adc
int3
mov
cmp
fnstcw
scas
adc
lcall
xor
sbb
enter
sbb
mov
pop
mov
jecxz
outsb
aaa
insl
mov
imul
mov
push
jmp
movsl
ret
lods
les
stos
nop
mov
sbbb
repz
push
loopne,pt
pop
sbb
cltd
test
add
sahf
arpl
jle
in
dec
dec
and
cmp
cmpsb
test
nop
fwait
insl
sahf
std
mov
dec
jp
and
pop
cltd
and
test
outsl
mov
pop
jge
movsl
mov
dec
jecxz
sarl
cmp
ljmp
fistpll
in
cmp
mov
xchg
mov
or
cmp
call
xor
xchg
sbb
push
add
cmp
sub
mov
int
pop
imul
sbb
add
xor
adc
adc
or
mov
in
push
jno
mov
mov
add
mov
pop
or
outsb
add
mov
sarb
pop
outsb
out
std
add
or
ja
mov
xor
pop
ds
xchg
xchg
imul
hlt
or
sbb
mov
mov
scas
xchg
aad
popa
ss
lahf
test
jo
je
mov
xchg
cmp
movl
mov
sub
jle
fistps
sub
fidivs
mov
mov
movsl
jmp
loopne
into
dec
xchg
xchg
sub
insb
push
inc
push
jne
jno
mov
jns
dec
sti
ret
add
addr16
icebp
or
xchg
mov
push
or
xchg
xchg
fcom
insb
or
lds
cmp
fistpl
mov
fs
dec
and
sub
outsb
out
adc
iret
sub
push
jnp
cmp
ja
jbe
addr16
faddl
out
fstl
stos
xchg
inc
je
sbb
repnz
iret
das
int3
scas
push
pop
push
push
int3
arpl
aad
addl
call
das
rcr
scas
inc
adc
inc
std
jb
sahf
xor
cmc
fsubrp
nop
fstl
ja
fmuls
jno
imul
xchg
push
and
pop
push
int3
mov
jmp
pop
or
jae
loop
lahf
dec
cli
jne
out
sub
in
jp
psrld
hlt
and
loopne
es
xor
lods
js
mov
cmp
xor
dec
loopne
leave
jns
mov
int
and
xchg
test
cmp
or
sti
push
mov
lahf
inc
mov
mov
fdivp
negb
dec
sbb
decb
jp
inc
ljmp
xchg
add
jp
sub
and
mov
jnp
push
lods
adc
sbb
stos
adc
rclb
std
pop
scas
mov
mov
cli
cmp
rcrb
test
ror
fs
ja
sub
into
icebp
mov
inc
rcrl
xchg
addl
sub
cli
mov
push
pop
enter
mov
jne
imul
mov
adc
push
dec
dec
aaa
mov
mov
mov
inc
into
and
jbe
sub
scas
mov
ja
sarl
mov
jae
inc
lods
lods
add
popf
stc
pop
call
sub
add
shlb
push
popf
notb
jge
push
lock
xchg
lcall
adc
push
mov
outsl
dec
adc
mov
in
inc
and
or
test
or
dec
les
scas
jbe
push
mov
sar
pop
les
loopne
xor
lret
xlat
shlb
sub
enter
sbb
jge
stc
into
xor
adc
jbe
jo
adc
and
out
push
xor
xor
cld
int
loope
lods
xchg
loope
xor
icebp
sub
mov
lods
mov
dec
adcl
inc
bound
xchg
repz
aas
aad
lret
bound
scas
ds
jmp
orl
mov
jbe
into
lcall
daa
adc
and
or
cmp
xor
pop
cmp
arpl
lods
lods
xor
cmpsl
xor
ror
test
jmp
or
mov
aad
cwtl
dec
push
and
sbb
popf
sbb
add
js
mov
inc
inc
mov
push
jns
mov
push
sahf
xor
gs
ja
mov
loope
sbb
jno
repz
andb
lock
mov
push
and
movsl
inc
ljmp
movl
add
popf
fnstenv
sbb
lods
mov
or
xchg
push
andl
xchg
push
std
xchg
and
je
dec
addb
pop
ljmp
inc
sub
pop
insl
or
les
pop
dec
mov
loop
daa
pop
lcall
push
sbb
mov
enter
stos
mov
push
mov
xchg
mov
xchg
ja
mov
or
inc
mov
push
shrl
cmc
jl
loop
out
add
shll
stos
fwait
xchg
and
xor
leave
pop
push
insb
scas
mov
nop
pop
aaa
xchg
xlat
fidivl
push
popa
orl
lret
cwtl
pop
cmp
adc
out
push
iret
dec
dec
xchg
repnz
cmp
mov
xor
adc
push
leave
test
data16
lret
jae
push
in
pop
add
out
scas
mov
sub
jns
pop
cmpsl
sti
or
loope
ret
leave
cli
popf
mov
addl
stos
cwtl
into
cld
and
cmpl
data16
ljmp
pushf
mov
or
jg
mov
leave
loop
andb
stc
ficoms
mov
push
add
sbb
mov
lods
fildll
pusha
pop
out
adc
aaa
or
xchg
subl
nop
add
int
inc
fmull
mov
lods
in
arpl
cli
sbb
outsl
xlat
testb
fs
push
int3
js
cmc
scas
mov
loope
cwtl
jge
cmp
and
mov
push
inc
push
divb
sub
mov
out
cld
or
xor
sbb
pusha
pop
stos
adc
sarl
cmpsb
es
fldcw
mov
lds
jl
xlat
pop
mov
arpl
pop
xchg
dec
les
mov
adc
imul
loop
sub
sbb
fwait
mov
inc
mov
jl
xor
clc
dec
adcl
adc
enter
int
jae
daa
mov
mov
inc
fisubrl
popa
cmp
cld
pop
repz
and
dec
incl
roll
jbe
push
fwait
lea
mov
jne
jecxz
outsl
imul
lret
out
repnz
mov
pop
adc
outsl
mov
das
cmp
fisubs
push
push
cwtl
xor
stos
inc
jbe
imull
pop
lret
or
jns
push
js
test
mov
ljmp
or
insl
mov
push
daa
pop
xor
aad
fs
dec
mul
cld
daa
rclb
xchg
dec
push
cmp
jne
jno
adc
into
int
jl
mov
hlt
lahf
ret
loope
push
push
fwait
mov
xor
mull
popf
or
sbb
jg
lods
inc
fstp
jmp
xchg
mov
ret
adcl
imul
mov
sub
outsl
pushf
gs
int
xor
sbb
xor
push
in
lahf
sbb
es
add
or
inc
data16
scas
insl
test
inc
mov
push
cltd
popa
mov
nop
jnp
scas
call
aam
scas
mov
int
mov
ds
add
sbb
and
xchg
xor
dec
bound
mov
fistpll
cs
and
xchg
stc
ljmp
cmp
dec
inc
test
rcll
mov
js
addr16
aas
add
adc
dec
test
or
jge
mov
ss
mov
mov
dec
ljmp
pop
les
sub
push
jmp
adc
jbe
xor
sbb
ficomps
jae
pop
clc
iret
or
jg
inc
mov
ds
jnp
cmp
dec
test
mov
bound
js
mov
xchg
inc
fsubs
push
or
xlat
and
mov
adc
popa
pusha
ror
popl
inc
stc
leave
and
sti
shll
imull
sub
jg
jg
mov
cmpsl
out
stos
inc
enter
arpl
sub
mov
add
in
mov
xchg
push
das
sbb
inc
adc
aas
sub
push
xor
stc
mov
pop
sbb
test
sub
pop
jno
fbstp
xchg
xchg
loop
repz
inc
cmpsl
add
jb
inc
push
xlat
cmp
jmp
rclb
cltd
pop
lock
fsubrp
pop
lahf
push
push
andb
and
sbb
xlat
adc
inc
push
jnp
cmpsl
ficompl
jo
jae
inc
adcl
pusha
push
test
insb
dec
into
arpl
cld
ljmp
mov
pusha
std
jb
iret
push
dec
xor
sbbl
lods
push
xchg
mov
mov
inc
adc
push
sub
mov
adc
sbb
dec
test
adc
pop
mov
mov
ret
lcall
push
lds
lret
fldl
or
or
push
lret
sub
testb
sbb
xchg
jne
sbb
jae
lret
push
inc
shrb
outsb
adc
push
aas
int
jb
daa
fsubrs
pop
add
scas
leave
rolb
jne
negl
mov
out
jecxz
dec
mov
cmp
xor
push
fnstsw
fldenv
mov
es
nop
mull
negl
into
xchg
adc
test
sub
outsb
xchg
sbb
cmc
psubw
outsb
ret
rcll
dec
cltd
cmpsl
call
pop
imul
dec
pop
roll
mov
cwtl
das
push
push
ljmp
lods
daa
mov
hlt
fwait
inc
push
xchg
cmp
test
gs
flds
dec
in
pop
or
cmpsb
vmovupd
subl
dec
ret
adc
xchg
jno
jl
lds
andb
or
fs
cmc
std
jb
jbe
push
push
insl
xchg
lahf
push
test
sub
popf
or
mov
cmpl
icebp
mov
fs
push
out
inc
add
je
xor
mov
jno
jp
imul
jle
cld
aas
sbbb
loope
jp
dec
stos
push
fldt
movsb
cmovg
and
add
lea
cmp
in
adc
xchg
jbe
shl
fbstp
xor
jmp
out
inc
in
sbb
ds
sahf
dec
mov
lock
sbb
lock
test
push
pop
push
jl
jge
cmp
jecxz
xchg
leave
mov
pop
jle
dec
fisubrs
cli
loop
mov
fisubs
inc
jne
out
xorb
mov
stos
in
cmpl
pop
jbe
cmc
cltd
xor
mov
inc
mov
sbb
mov
faddl
popa
cmp
pop
add
xchg
mov
lret
and
pop
jno
pop
out
shlb
ja
jmp
and
test
insl
nop
xchg
hlt
aas
dec
mov
out
mov
push
inc
ficomps
pop
pop
lret
cli
ja
cmp
loope
sahf
adc
out
xor
adc
jne
outsb
xlat
outsb
pusha
push
test
shll
sub
xlat
daa
dec
fwait
push
add
add
inc
dec
pop
add
fwait
sbb
mov
scas
aam
jge
add
mov
jle
lods
notb
lcall
scas
les
sub
lods
pop
test
outsb
sarl
insb
add
fs
mov
cmc
ljmp
out
jg
hlt
sub
jle
bound
or
xchg
mov
push
cmpsl
in
adc
and
or
dec
pop
push
cld
scas
sub
jno
cld
decb
xor
pushf
jne
lahf
neg
stos
inc
lock
mov
sbb
and
outsb
jl
xor
pop
sbb
sub
jb
subb
inc
jno
aaa
push
addl
mov
sahf
lods
and
test
cmpsb
pop
or
or
mov
cmpsl
in
mov
loope
push
int3
fidivs
pushf
cli
flds
rolb
inc
bound
and
xchg
out
scas
xor
cwtl
and
loopne
in
xchg
js
aad
les
repz
inc
outsl
and
cmp
aas
fs
pop
test
lret
adc
pop
inc
scas
cmpsl
push
hlt
inc
popf
in
call
jb
data16
pop
mov
add
pop
shll
adc
mov
sbb
and
jbe
and
cmpsb
add
repz
adc
adc
pushf
enter
pusha
mov
fs
cs
pop
pop
xor
cmp
and
xor
push
jmp
loop
push
in
mov
or
push
flds
xor
pop
mov
gs
push
adc
out
push
xor
cmc
adc
adc
and
or
jns
add
loope
pushf
sub
sub
inc
ret
mov
ficoml
jbe
or
cmp
pop
and
jp
mov
jg
or
iret
jecxz
test
sbb
je
lds
jae
cld
xchg
sahf
mov
xor
sbb
lret
aam
shl
sub
mov
cmc
movsl
sbb
xchg
add
xor
pop
sub
xlat
add
scas
data16
or
mov
call
out
inc
sbb
sahf
shrb
les
inc
or
jg
dec
test
and
insb
out
or
mov
jo
xchg
sbb
sbb
mov
add
xlat
repnz
outsb
cmp
mov
sub
in
or
fiaddl
cmp
mov
mov
in
aas
xchg
loop
int
aaa
mov
int3
je
orl
fwait
scas
dec
das
sbb
cmp
into
sbb
ds
imul
sub
push
sbb
cmp
mov
arpl
xchg
mov
add
loopne
orb
ljmp
fwait
xor
idiv
inc
fwait
mov
out
stos
pop
add
cmpl
or
inc
sbb
pop
clc
cmpsl
xor
popf
mov
dec
mov
xchg
stos
mov
ljmp
in
nop
stos
pop
mov
adc
jae
gs
xor
fadds
testb
jo
call
fistpll
sub
lret
jbe
out
mov
iret
scas
je
and
lods
pop
mov
lret
cmp
add
in
sbb
push
test
leave
sub
mov
stos
outsl
sbb
lret
add
aaa
mov
or
lds
xor
shrl
mov
xchg
push
mov
lds
lret
xchg
mov
shl
mov
je
dec
std
test
rcll
mov
push
xchg
movsb
xor
dec
xor
popf
in
sub
xchg
sub
push
sub
stc
jmp
push
fidivl
fcom
mov
cmpsb
rcr
inc
or
cs
pusha
pop
daa
jl
pop
ret
pop
sti
mov
push
mov
addr16
mov
daa
push
shll
pmulhuw
loop
aad
insb
xor
push
pop
jg
and
pushf
mov
repnz
test
repnz
xchg
push
bswap
cmp
cmpsb
and
outsb
andb
add
in
shlb
jo
in
sbb
xchg
xchg
cltd
fs
mov
push
lods
mov
shll
and
aaa
ficompl
jecxz
ret
and
mov
adc
push
orl
movsl
rep
or
pop
push
xor
lret
scas
outsl
xchg
sti
shll
mov
stos
cmp
clc
loopne
xor
les
mov
pop
cmpl
cmp
mov
push
inc
mov
xchg
cmpsb
mov
imul
in
add
or
hlt
mov
inc
mov
inc
add
pop
or
in
sbb
sbb
outsl
sti
inc
out
lea
fcmovnu
push
cmp
inc
pop
sahf
sub
and
adc
int
aas
ljmp
pushf
call
into
pop
in
xchg
fdivrs
int
lods
mull
lret
mov
push
sub
pop
jecxz
push
pop
in
dec
out
aas
ljmp
stos
cmp
xlat
jbe
and
jno
dec
mov
and
push
pop
hlt
or
xchg
rcll
push
addb
rorl
outsb
fnstenv
xchg
xor
ds
add
ja
in
mov
lea
je
repz
jb
arpl
jmp
adc
xorb
push
sub
hlt
sahf
cmpsb
stc
mov
in
sbb
cmp
cmpsl
add
adcb
dec
mov
mov
shll
add
mov
dec
out
mov
mov
or
add
and
xchg
cwtl
pop
daa
aad
xchg
pop
sbb
add
cmpsl
xor
pop
ljmp
jo
mov
cmc
dec
in
mov
xor
rcrb
mov
jg
jbe
mov
test
stos
xchg
sub
into
fnstsw
pop
addr16
lahf
mov
xor
and
sbb
cmp
jecxz
neg
call
inc
data16
cwtl
fstl
jge
ljmp
mov
sub
pusha
jne
pop
dec
cmc
push
mov
add
repnz
cli
jno
fdivrs
int3
ret
jmp
xlat
jb
into
rcll
mov
into
mov
sbb
pop
jno
push
cmpl
sbb
xchg
lret
pusha
dec
fistps
jbe
pop
decb
xor
xchg
mov
dec
and
clc
daa
push
stos
fistl
mov
jno
cmpsl
lret
cwtl
xor
jbe
adc
inc
xor
inc
push
aam
dec
into
push
mov
mov
push
stos
jle
fnclex
test
push
std
jmp
push
xchg
adc
jns
mov
lds
mov
push
inc
test
xor
sub
dec
fcmovbe
hlt
or
or
jno
add
lock
in
dec
adc
xor
or
xchg
adc
jb
movsl
sub
cmp
outsl
jb
jecxz
movsl
sub
fdivs
arpl
std
sub
mov
in
call
out
cmp
ret
data16
push
xor
mov
ja
fiadds
movsl
fsub
scas
call
push
in
xor
xor
out
lret
mov
mov
push
out
ja
ror
jecxz
mov
call
cmp
or
mov
ja
cwtl
mov
pop
dec
jns
repz
or
cmpsl
cld
cmpsl
dec
fiadds
xlat
enter
notb
push
sub
xor
adc
lcall
pop
call
icebp
cmp
lahf
aaa
fcmovbe
inc
xchg
and
jno
jmp
sub
cli
pop
scas
call
mov
dec
add
lret
das
test
pop
inc
loopne
dec
ficomps
aam
repnz
dec
push
aas
popa
sub
fwait
xchg
adc
sbb
pop
imul
sbb
inc
add
push
push
lock
outsb
dec
mov
mov
clc
sbb
std
dec
sub
daa
adc
in
test
shl
adc
and
lret
dec
push
and
or
sbb
dec
repnz
mov
jne
sub
push
push
xchg
test
dec
xor
push
lock
int
sar
rorb
ljmp
enter
push
test
in
pop
outsb
pop
cs
lds
cli
mov
test
call
or
cmp
jmp
out
pop
fdivrs
in
scas
call
rorb
xor
add
ror
sbb
push
add
lcall
pop
jmp
cltd
and
push
adc
cmpb
cmp
adc
lea
xor
dec
icebp
in
ror
sahf
clc
sub
inc
or
pop
cmp
dec
mov
push
or
mov
jns
push
popa
stc
in
and
add
cmp
fbld
adc
out
mov
mov
cmp
push
push
hlt
push
rorb
inc
add
movzbl
mov
jp
fldcw
jecxz
nop
in
movb
les
in
adc
loopne
outsb
push
jae
aas
cmp
dec
jnp
shrl
sbb
test
enter
dec
pusha
mov
popf
pusha
cmp
cmp
xchg
sub
ja
loope
aad
decl
inc
ret
jnp
adc
fsubs
arpl
xchg
sbb
das
fistpll
pusha
sub
mov
xlat
adc
push
repz
pusha
rcrb
jl
hlt
xchg
icebp
jae
sub
lret
roll
repz
add
js
add
sbb
repz
in
push
push
mov
jg
jp
or
loopne
dec
lea
jbe
fadds
lods
gs
and
fstl
mov
pop
into
xor
mov
push
mov
ss
shll
sub
add
ds
lock
mov
shrl
jge
add
or
mov
sub
mov
mov
leave
aam
insl
mov
outsb
adc
scas
mov
jl,pt
arpl
xchg
dec
adc
arpl
stos
mov
frstor
aaa
inc
les
push
fmul
sub
outsb
xor
xor
dec
mov
pusha
aam
jl
adc
lret
adc
add
out
dec
push
into
gs
addb
mov
jmp
add
ficompl
pop
and
inc
sub
dec
jge
jbe
addr16
push
mov
or
gs
loop
das
xlat
data16
lcall
cmp
hlt
loope
xor
scas
loop
clc
cmp
cli
insl
ret
int3
push
call
loopne
jb
cld
adc
scas
add
adc
adc
xchg
sub
mov
in
repnz
aas
adc
jl
jae
mov
int
fucomip
out
test
ss
je
sub
push
call
adc
inc
push
stos
imul
mov
pop
jmp
adc
enter
mov
in
jo
adc
arpl
push
pop
cmp
test
push
leave
not
je
inc
inc
xor
jno
daa
pusha
outsl
daa
testb
int
sbb
cmp
xchg
dec
stc
loop
jns
lret
int3
fmulp
out
mov
dec
mov
cltd
outsb
mov
nop
inc
mov
fisttpl
cmpsl
mov
test
cmp
roll
sub
jno
out
cmp
mov
xchg
fs
movsl
lds
inc
dec
orl
adc
cld
inc
pop
ljmp
jecxz
test
jp
push
mov
mov
push
inc
lret
sarb
sbb
in
enter
leave
pusha
cmp
enterw
jae
mov
popf
mov
pop
mov
shll
sbb
add
sub
inc
aam
mov
fs
ret
cmp
pop
or
orb
jle
lahf
stos
fistpll
cmp
mov
int
fiadds
adc
movsl
inc
cs
addl
shll
lret
add
fs
fsubrp
arpl
outsb
mov
or
outsl
das
push
fcoml
lea
les
push
je
push
sub
pushf
push
pushf
ficompl
cmc
jae
call
add
xor
adc
jne
push
out
jge
aam
dec
dec
jmp
inc
or
daa
clc
out
ds
repnz
lcall
cmp
or
adc
push
cwtl
xor
aam
add
inc
fstl
neg
je
push
push
out
xchg
sti
sar
mov
rclb
pop
fs
icebp
cli
and
idiv
inc
push
push
or
mov
jle
jmp
jno
push
cmovno
dec
mov
pop
imul
adc
test
mov
dec
jbe
insb
rorb
inc
mov
mov
enter
out
fistpll
ret
les
testl
scas
inc
push
shl
inc
and
dec
pop
scas
stos
pushf
cmp
sub
or
push
mov
outsb
in
sti
test
mov
fs
mov
rcl
ja
lods
test
push
jae
sbb
adc
and
jne
test
std
cmpb
xchg
dec
arpl
pop
cmp
rol
dec
mov
xor
mov
je
xchg
jae
shr
inc
xchg
in
fsub
loop
sub
add
test
andl
addr16
gs
xchg
lods
lods
popa
ja
mov
es
push
mov
sub
and
bound
push
clc
nop
gs
sbb
out
adc
icebp
orb
jge
mov
mov
outsl
dec
pushf
lcall
js
into
lds
adc
fcomps
jne
xor
adc
es
adc
fwait
and
cli
push
push
push
testl
repz
push
xlat
lods
jmp
ss
or
hlt
add
enter
lret
gs
mov
add
faddl
stos
iret
lcall
insl
clc
inc
loopne
pop
insb
push
sub
fwait
cmpsl
jmp
pop
xchg
xchg
cs
pop
sub
mov
xchg
inc
outsl
jnp
mov
push
pop
dec
cmp
mov
sub
pop
jmp
xor
xchg
es
mul
add
fdivr
pop
icebp
sbb
push
cmp
imul
bound
ja
ljmp
into
mov
cmp
dec
inc
popf
mov
mov
push
mulb
cmpsl
or
mov
add
xor
cmp
xchg
outsb
ret
js
fisttpl
cltd
in
mov
adc
imul
adc
addb
pop
mov
or
stc
fisubl
cs
stos
inc
lcall
icebp
mov
mov
clc
outsb
xchg
rorb
loope
add
push
fistps
mov
mov
jo
add
ja
cmp
push
loopne
call
movsl
les
push
push
xchg
hlt
inc
scas
cmp
arpl
add
in
sahf
out
mov
shrl
push
shlb
ss
fimuls
dec
ror
popa
leave
jne
out
inc
jmp
dec
dec
xchg
xor
pop
mov
sub
out
pop
fsubr
add
jbe
or
mov
push
pop
mov
dec
jo
sbbb
outsl
jb
pusha
loop
xchg
fcomi
pop
or
pop
lcall
sub
stos
mov
fdivl
or
sub
pusha
mov
xor
pop
sbb
push
ljmp
insl
mov
fisttpl
rcrb
push
popf
les
clc
cmc
fwait
xchg
push
sar
push
adc
push
orb
sarb
bsf
insb
jne
popf
xor
xchg
repz
jle
cmp
outsb
adc
pop
inc
fmull
mov
mov
cmp
fistpl
mov
mov
sbb
jnp
cmp
sahf
arpl
cmpsl
and
push
enter
and
fldl
xchg
inc
scas
ret
sbb
fwait
or
lods
outsb
xchg
sub
dec
jmp
enter
adc
dec
and
jb
xor
dec
filds
adc
imul
fcmovnb
cli
and
iret
les
mov
fidivs
rclb
popa
movsb
outsb
mov
aad
aam
sub
scas
or
sarb
scas
and
cli
mov
mov
out
inc
std
mov
add
lods
xchg
mov
xor
cs
in
xlat
add
fidivl
mul
jge
lea
and
in
push
fdivl
shlb
test
popf
testl
jns
in
fistl
arpl
xchg
cmp
daa
pop
ja
shrl
inc
jg
mov
les
mov
mov
jg
stc
push
adc
xlat
xchg
bound
es
popa
ja
add
push
push
adcb
aam
lds
and
mov
and
into
int
jmp
jle
mov
sbb
lret
ja
inc
inc
js
scas
sub
sti
fcmovne
fistpll
jmp
or
ret
loopne
fidivs
loope
inc
push
jno
cld
cmp
inc
adc
mov
arpl
jns
mov
test
xchg
je
adc
push
es
and
cs
and
enter
inc
mov
sbb
push
dec
xchg
dec
dec
stc
pushf
loop
test
mov
out
lds
out
and
xor
push
jbe
pop
loop
lea
lcall
mov
sub
sbb
mov
push
xchg
repnz
and
pop
sub
jmp
pusha
mov
xor
push
popf
jecxz
xchg
std
add
xor
frndint
add
mov
lahf
loop
push
in
insb
mov
je
adc
pop
cmp
push
jne
xchg
shrl
mov
stc
mov
sub
sub
mov
xchg
mov
lods
rsm
jb
aas
mov
sbb
adc
mov
stos
rep
lret
fidivrs
push
lret
push
test
into
jns
leave
inc
stos
push
cltd
fiadds
or
add
fnstenv
fldcw
imul
mov
std
out
jns
xchg
fmull
outsb
movsl
sub
mov
adc
dec
jl
in
pop
mov
fdivs
stos
imul
mov
stos
icebp
adc
sbb
or
add
push
mov
gs
mov
and
add
daa
mov
js
cmp
add
xchg
lret
mov
push
leave
pop
lea
cmc
or
cli
or
pop
dec
mov
pop
cmp
add
jg
mov
mov
idivl
and
imul
fildll
jg
flds
popa
ss
push
jbe
or
push
sbbb
adc
inc
mov
arpl
addr16
scas
cmpsl
push
jmp
jg
mov
pop
adc
sbb
bound
push
cwtl
cld
or
adc
push
fwait
adc
xor
jl
fld
in
add
dec
pop
dec
lahf
js
cmp
loopne
es
call
test
xor
adc
xchg
mov
jle
gs
testb
daa
adc
push
pop
shlb
loopne
jne
out
mov
cmp
mov
pusha
pusha
cwtl
jae
lds
loope
cli
pop
push
aas
jo
gs
sbb
push
xchg
mov
push
mov
pop
in
test
imulb
fisubl
aad
push
adc
cmp
mov
mov
xor
mov
inc
dec
repz
and
movsb
mov
int
pop
jnp
incb
pushf
out
mov
cwtl
push
inc
mov
mov
cmc
pop
inc
pop
js
inc
mov
js
ret
es
jno
pop
dec
lods
mov
and
mov
stos
add
xor
shrl
fcompl
xor
lock
iret
push
imul
push
pop
mov
mov
arpl
pop
mov
or
sarl
outsb
jge
in
mov
inc
test
dec
mov
lret
lret
xchg
aam
dec
call
ret
xor
xorl
cld
cmpsl
mov
mov
mov
stos
mov
fcmovne
or
cmp
mov
rcl
push
dec
sbb
repz
daa
cmp
dec
xchg
scas
sub
sbb
or
data16
out
xor
jno
and
ds
scas
out
pusha
jnp
cmpsl
hlt
cmp
add
jmp
aaa
in
seta
mov
push
adc
fnsave
mov
pop
jae
cli
or
sub
add
dec
fcomip
pop
mov
dec
mov
add
push
xor
mov
sub
ds
cld
in
lea
cmp
pop
add
dec
cmp
aas
dec
fstps
aas
mov
shll
cmpsl
pop
loope
xor
push
out
into
daa
mov
addl
aaa
sar
cwtl
lods
scas
fst
out
in
sub
loopne
sbb
xchg
xchg
fwait
xor
add
neg
outsl
jmp
cld
push
adc
lea
gs
mov
arpl
ds
stos
inc
add
cs
enter
into
cmp
hlt
dec
dec
mov
cmp
leave
test
push
or
daa
stos
inc
xchg
mov
xlat
loop
lcall
or
and
sub
shl
inc
inc
xchg
ja
mov
loope
movsb
shrb
lcall
int3
add
add
test
pop
hlt
xchg
sar
testl
push
dec
or
and
idivb
jge
or
mov
xchg
jae
fisubl
sti
sbb
lret
pop
test
lret
and
inc
add
int3
inc
and
xor
ret
xor
adc
push
les
test
sub
lea
cmpsl
adc
xchg
movsb
inc
xchg
sub
es
dec
cs
dec
xor
lds
push
cmp
negl
aas
adc
enter
mov
and
xor
int
adc
fdiv
xchg
icebp
outsb
inc
cmpsb
mov
pop
mov
fmull
stos
loope
and
mov
repnz
xchg
cmp
sub
rcll
pop
mov
mov
push
les
ret
out
fcompl
nop
inc
inc
cmp
sahf
and
ret
cltd
mov
fdivs
or
nop
dec
fisubrs
dec
das
add
in
or
fwait
sub
mov
mov
int3
dec
sar
mov
ljmp
jmp
data16
push
jb
gs
sbb
xor
nop
cmc
inc
std
sbb
cld
stos
lods
aas
lds
or
jmp
mov
pusha
les
es
inc
test
inc
mov
pop
or
stos
mov
stc
cmpsl
outsl
pushf
pushf
cld
in
stc
lcall
cwtl
pop
adc
fnsave
cmc
inc
xor
subb
xchg
push
cmpsl
dec
cmp
in
in
rorl
es
out
xor
inc
adc
jmp
inc
inc
sti
out
movsb
sbb
lods
xchg
sub
sbb
mov
xor
repnz
cmc
xor
lods
or
sahf
pop
add
inc
ljmp
xor
sbb
mov
imul
jbe
fbld
adc
cmp
testb
and
mov
and
cmp
dec
pop
and
pop
xchg
aaa
lea
jae
pop
aas
jmp
out
xchg
mov
fldenv
dec
sub
lret
int3
add
pop
jne
rep
testl
inc
pushf
and
jecxz
insl
sub
pushf
mov
xchg
sub
push
push
dec
pop
ljmp
lock
test
xor
mov
test
idivb
fsubr
lods
int3
icebp
xchg
movb
popf
cmp
iret
addr16
adc
and
mov
fstpl
testl
outsl
add
data16
jo
jbe
int
in
idivl
es
add
lock
jno
jae
xor
jno
push
xchg
jns
push
je
notl
ja
out
cmp
mov
sbb
das
push
xchg
std
mov
sub
clc
mov
cmp
fbld
mov
fbld
mov
lods
into
pop
test
dec
lea
xchg
dec
enter
cmpsb
ret
xchg
pop
mov
and
lret
rol
mov
subl
lret
popa
std
pop
mov
adcb
mov
xchg
mov
unpcklps
dec
aad
cmp
fstps
push
lahf
cli
dec
popa
adc
call
fs
push
or
aas
xchg
xchg
add
xor
in
and
mov
pop
jmp
enter
popa
out
mov
faddl
sbb
cmc
xchg
dec
sbb
mov
sub
push
lea
and
mov
in
ror
daa
or
lds
mov
mov
in
jge
int
in
incb
clc
adc
mov
push
addr16
push
aad
jno
push
fmuls
pop
bound
dec
push
bound
lcall
add
push
jge
ss
sbb
loopne
mov
outsl
pop
out
aad
fwait
pop
in
mov
mov
mov
xchg
loope
ret
xor
out
jns
not
daa
xor
adc
and
notb
rcrl
lahf
imul
pop
in
xchg
pop
cmp
push
or
cmp
lret
add
push
mov
fstps
ds
dec
dec
and
push
imul
xchg
sbb
movsb
cmp
sbb
in
rcrb
bound
cmpsl
ds
mov
jge
cmp
dec
cmp
push
mov
mov
lea
daa
enter
pop
lods
xchg
xor
imul
les
shlb
das
divl
test
pop
adcl
or
lret
pop
cmp
push
push
xor
iret
data16
mov
xchg
les
in
mov
mov
xchg
jo
in
push
outsl
cli
je
lock
fisubrs
notb
into
mov
jle
mov
mov
inc
and
jne
or
inc
dec
movsl
xchg
dec
loopne
jb
sub
dec
xchg
lods
add
fs
xchg
iret
push
and
ds
xchg
lods
psubd
mov
jmp
push
pop
lret
sti
les
lds
sbb
ss
sbb
jae
cmpsl
cmp
push
lahf
jae
mov
scas
push
jae
inc
repz
popf
push
push
dec
cmp
aad
movsl
ds
xor
jp
mov
data16
loopne
ret
mov
out
pop
pop
dec
shrl
mov
mov
dec
mov
fbld
push
cmpsb
jl
in
lcall
adc
je
loopne
push
lea
push
sbb
and
pop
xchg
pop
mov
fdivrl
out
push
cmp
fs
int
pop
loop
stc
mov
sub
movsl
stos
std
dec
mov
push
out
movsl
inc
adc
lods
loopne
mov
mov
lea
out
insb
xor
pop
lods
xlat
pop
sub
xor
add
rorl
cmp
push
xchg
mov
push
dec
aaa
mov
sub
and
cmp
or
cmp
insl
dec
sti
fwait
and
jmp
testb
dec
cmp
sub
or
bswap
pop
inc
jb
insl
or
pushf
or
std
inc
cmp
cli
cmc
mov
jge
mov
inc
mov
ss
call
mov
pop
sub
rol
push
mov
xor
in
mov
xchg
inc
or
leave
xlat
fildll
pop
jne
or
sub
movsl
dec
ficompl
pop
mov
dec
shl
push
xor
mov
fsts
das
and
pop
xchg
or
and
jno
es
inc
pop
push
nop
aaa
dec
popf
lea
push
pop
add
sub
sub
push
and
xor
dec
mov
addb
lahf
mov
xrelease
pop
out
lods
pop
adc
or
cwtl
aaa
addr16
and
inc
inc
pop
jb
stos
cltd
and
mov
movsl
sub
and
fwait
xor
daa
repz
adc
imul
sbb
and
iret
sub
fwait
inc
jp
ret
arpl
ret
mov
enter
lahf
nop
inc
stc
addr16
aad
mov
jp
pop
jbe
pop
sbb
out
movsl
adc
fistl
mov
jl
outsl
outsl
sar
mov
mov
test
xor
add
inc
sbb
cmp
mov
or
add
xchg
outsb
add
scas
push
scas
dec
push
loopne
mov
int3
push
iret
arpl
std
addr16
inc
mov
int3
fadd
add
sbb
ficoms
scas
cld
push
lahf
sub
sbb
push
xchg
inc
xor
aaa
fdivl
pop
mov
test
jb
mov
or
rolb
rcr
aam
cwtl
aad
lock
repz
imul
popf
data16
in
inc
adc
dec
jecxz
xchg
and
dec
jns
inc
mov
xor
sar
in
add
push
mov
les
mov
pop
add
out
jo
xor
cmpsl
repz
jae
pushf
mov
push
mov
xchg
jmp
sub
jle
mov
insb
mov
mov
in
cmp
inc
lahf
es
xchg
xor
enter
push
jo
das
add
mov
mulb
dec
icebp
adc
in
pop
rcrl
iret
lods
fdivr
sarl
icebp
sub
push
fsub
mov
call
pop
push
pop
adc
enter
xchg
jl
scas
lods
add
dec
test
orl
xchg
jnp
xor
je
pop
dec
adc
rolb
jns
andl
dec
sbb
mov
outsb
mov
sbb
ret
sbb
mov
stos
inc
leave
jns
sub
push
ret
pop
mov
mov
mov
sbb
dec
pop
push
sbb
mov
cmp
in
sub
inc
rcll
push
sub
fldenv
pusha
jnp
mov
scas
inc
push
fisttpll
test
outsl
sbb
lret
push
xchg
aas
push
adc
mull
push
stos
jnp
lds
dec
jg
push
xor
lods
pusha
push
movsb
ds
pushf
xchg
je
and
adc
mov
mov
shll
pop
adc
cmp
fs
dec
or
test
scas
fld
jge
mov
daa
inc
sbbl
xlat
sbb
and
mov
aaa
dec
fdivrs
insl
add
cmpsb
push
sbb
sahf
clc
sub
dec
movsb
adc
faddp
inc
sub
lods
mov
inc
popa
sub
cli
enter
xchg
cli
cmp
mov
int
ficoml
daa
mov
outsl
add
fistpll
mov
cmpsb
mov
shrl
icebp
lret
iret
dec
loopne
mov
addr16
inc
cmpsl
jp
jg
js
or
ja
arpl
push
cltd
scas
xchg
mov
ret
jmp
xor
or
jecxz
je
inc
mov
push
inc
fadds
nop
or
dec
mov
mov
and
push
or
cld
mov
mov
push
mov
lods
adc
ds
ss
icebp
insb
mov
adc
aas
sbb
mov
or
dec
or
inc
pop
jl
add
rorb
mov
mov
add
pushf
mull
sub
xorb
push
mov
add
clc
sti
sbb
iret
dec
push
pop
pop
pop
das
int3
pop
lea
bound
dec
pop
and
and
inc
jne
dec
inc
sub
neg
es
es
arpl
jne
mov
and
mov
in
cmp
insl
jecxz
mov
xor
inc
mov
out
mov
mov
shll
in
sbbb
or
stc
cs
dec
mov
test
cmp
insb
add
cmpsb
test
adc
mov
dec
icebp
jo
jne
xor
scas
jbe
js
std
xlat
and
or
or
iret
mov
mov
in
xchg
leave
add
or
shl
mov
aam
inc
or
pmaddwd
loope
add
stos
sbb
or
hlt
ror
loopne
inc
frstor
add
out
rorb
jo
test
and
mov
pop
fxch
cmp
repnz
roll
cmp
arpl
lcall
jecxz
imul
lock
jns,pt
sub
push
jbe
xchg
pusha
mov
sub
push
in
mov
and
inc
pusha
add
xor
loope
cmp
dec
stos
add
dec
or
fisubrl
loopne
aam
js
or
jne
dec
out
out
rorl
pop
xchg
mov
jle
mov
cmp
mov
out
cmp
pop
sbb
mov
inc
push
inc
jnp
mov
xor
int3
mov
or
or
mov
in
mov
pop
dec
inc
and
jmp
pop
shll
pop
mov
fcoml
sbb
jns
pop
pop
mov
dec
jae
xchg
pop
jle
lret
mov
dec
imul
movsl
mov
xchg
and
cmp
mov
xchg
shl
mov
fucomi
mov
std
mov
push
loopne
lret
mov
jbe
adcl
adc
repz
sbb
je
dec
loop
outsb
pop
scas
fistpl
xor
std
xor
inc
pop
stc
cmp
xor
rolb
cli
jae
sbb
loop
lcall
push
mov
push
jo
push
push
mov
sub
scas
lds
cmp
lds
inc
adcb
rorl
aam
popa
idivb
jmp
jle
pop
add
cmp
and
mov
das
xor
in
add
dec
or
pop
enter
mov
and
pop
or
pop
mov
push
inc
addl
aad
cltd
push
dec
ficomps
sub
insb
leave
xor
scas
mov
push
lcall
test
dec
pop
sub
mov
clc
xlat
pop
push
push
sub
loop
inc
dec
xor
arpl
pop
das
inc
pushf
cmp
ss
cmc
out
xor
xlat
lret
pop
sti
addr16
lods
mov
lret
add
pop
sar
cmp
and
cmp
cld
lds
test
dec
hlt
adc
adc
testl
adc
dec
in
stos
nop
movsl
dec
sub
mov
shrb
push
push
mov
push
cmp
sub
adc
xchg
add
emms
jnp
mov
jge
andb
cmpsl
repnz
cmp
repz
cmp
inc
inc
sbb
fidivrl
inc
cmp
cwtl
pushf
fidivs
mov
or
sahf
mov
fwait
jbe
popa
fcomps
push
xor
lret
mov
mov
inc
sub
dec
out
mov
push
jno
es
jo
hlt
or
xchg
scas
inc
in
test
adc
push
and
outsl
push
cli
xchg
ret
lret
lea
scas
jno
lock
push
addr16
xor
dec
insl
stc
call
into
cmp
push
ret
pop
jo
loope
cmp
cmp
lahf
outsl
push
xchg
or
movsb
jp
or
sbb
sub
push
test
decb
mov
fwait
lods
lcall
fists
adc
mov
std
cmp
pmulhw
scas
mov
nop
iret
fld
pushf
movsl
icebp
xchg
mov
lea
mov
scas
jno
outsb
push
jno
jge
adc
push
add
add
call
cmp
int
outsb
ret
xor
mov
pop
std
cltd
inc
arpl
inc
movsl
aad
incb
leave
dec
hlt
inc
jne
mov
ss
int
iret
cmp
pushf
lcall
sti
cld
adc
inc
jo
insb
xchg
dec
scas
and
mov
aam
clc
mov
pop
sahf
xchg
mov
dec
adc
and
nop
xor
sahf
mov
dec
jge
pop
mov
mov
popa
xchg
mov
pusha
adc
sub
mov
fs
mov
pop
test
add
ret
stos
int3
jg
imul
push
xchg
out
popa
and
xor
xchg
xchg
xchg
outsb
xchg
shl
sbb
cltd
pusha
cwtl
pop
ds
es
add
jp
lock
inc
xchg
subl
andl
jl
mov
add
pop
aas
dec
pop
jno
dec
cmpsb
pop
jb
es
sub
aam
cmp
push
ja
or
push
test
jg
insl
mov
xchg
sub
jb
testb
shll
stos
push
mov
dec
cmp
lret
gs
mov
push
push
inc
or
adc
sbb
outsb
loope
sub
mov
mov
pop
repz
cld
and
or
jmp
xor
jbe
in
mov
fs
jg
ja
test
xchg
test
shl
cld
adc
jmp
xor
xor
sar
push
nop
mov
mov
loop
test
pop
dec
dec
aam
fwait
xor
xor
mov
or
cmp
mov
push
sbbb
ss
or
or
and
mov
call
test
int
push
les
xchg
jo
push
movsb
mov
push
arpl
stc
stc
cmp
pop
gs
mov
insl
dec
pop
idivb
pop
pop
ret
jge
mov
sarb
pop
push
adc
push
mov
pop
mov
je
mov
fsubrs
mov
mov
sub
pop
pop
mov
mov
jge
lock
inc
push
add
pop
sbb
add
pop
cmp
ljmp
es
add
mov
sbb
sbb
mov
mov
cs
adc
cwtl
and
inc
mov
data16
imul
pushf
in
xchg
out
and
in
test
sub
mov
enter
mov
movsb
popa
mov
xchg
add
aad
mov
mov
inc
add
clc
test
cmp
test
dec
dec
in
push
test
nop
das
insb
adc
lds
fsubrl
lret
notl
pop
scas
adc
cmp
fwait
or
arpl
xchg
inc
loope
add
push
xor
rcl
int
mov
sarb
inc
add
pop
push
adc
mov
mov
push
xchg
sub
es
sub
dec
ja
inc
gs
dec
dec
pop
xor
je
enter
js
jp
fnstcw
shlb
jle
pusha
inc
dec
push
add
loop
cmp
pop
pop
adc
or
pop
cmp
dec
pop
pop
fs
add
lock
mov
mov
adc
jbe
inc
test
idivl
rcr
in
repnz
pop
adc
testb
push
lcall
mov
std
adc
or
cmc
into
fdivrs
mov
shrb
fmulp
cmc
fwait
lock
xchg
fs
daa
jmp
or
inc
pop
adc
popa
ret
mov
dec
and
jmp
aad
fistps
popf
mov
test
fildl
mov
cmp
mov
aad
adc
or
add
mov
icebp
cmc
pop
ljmp
mov
pop
mov
andl
adc
add
and
outsl
fstpt
int3
jg
or
inc
sbb
scas
pusha
arpl
lods
hlt
int3
loopne
cmp
pmaddwd
popf
ljmp
repnz
pusha
push
inc
ljmp
ret
outsl
js
into
or
hlt
data16
lret
dec
cmp
push
call
pop
cld
outsl
rorb
inc
repz
pop
lock
sarl
and
or
dec
cmp
rorl
jl
mov
inc
aaa
pop
push
mov
aaa
mov
popa
mov
cs
jbe
fnstcw
mov
jecxz
xor
ja
mov
fstps
push
fldenv
xchg
fnstenv
cmc
add
inc
fstps
and
push
andl
ds
cmp
sbb
push
cmp
ret
iret
lcall
pop
xchg
push
mov
add
movsb
cld
mov
push
mov
add
jecxz
das
pop
add
mov
cs
mov
cmc
popa
push
jge
cmpsb
inc
add
adc
push
js
ficoml
insb
cli
cmp
and
ret
sub
lock
jnp
lcall
aam
xor
sbb
pusha
cmp
loop
out
bound
dec
add
jno
out
je
outsl
call
xchg
movsb
fwait
lods
push
lds
daa
lds
icebp
sub
ret
js
xor
outsb
test
rcrb
dec
imul
sub
mov
xor
aaa
je
xor
pop
call
fbld
leave
mov
inc
push
repz
aad
or
adc
into
dec
cld
or
sub
out
push
add
bnd
push
cmp
push
mov
jp
cli
rep
fdivs
fs
je
paddb
sbb
repz
or
mov
cmp
dec
mov
cmpsb
ret
inc
es
nop
sbb
movsb
jecxz
es
push
dec
mov
int
or
scas
lock
push
push
and
ret
fsubrp
xchg
aam
add
fadd
in
stos
mov
dec
mov
adc
xor
leave
xchg
js
repz
cltd
data16
mov
jbe
sbb
mov
sbb
mov
lea
or
sahf
addr16
test
notl
mov
inc
mov
xchg
sbb
xchg
sbb
ret
fisttpl
imul
dec
sbb
and
loopne
dec
jo
aam
pop
ja
cmpb
mov
push
out
mov
cli
nop
lds
and
nop
lea
inc
in
push
dec
stos
or
jno
stos
sub
fsubrl
jbe
js
je
xchg
sub
dec
rolb
popa
aad
dec
sub
xor
sbb
mov
popa
loopne
in
pusha
fcmovu
xchg
or
push
fnsave
insb
adc
arpl
jns
add
xchg
push
cmpsl
out
mov
xchg
ja
mov
incb
cmpsl
adc
into
mov
or
aaa
ret
repz
xor
jmp
mov
dec
in
test
add
adc
rcrl
push
fldt
mov
adc
sub
mov
iret
les
out
jp
mov
sbb
adc
sbb
mov
cmpsb
scas
or
mov
mov
insb
movsl
cmpsb
shrb
sbb
mov
repnz
or
jb
lret
outsl
or
sub
xchg
cltd
test
not
xchg
ja
out
inc
aas
adc
cli
xchg
stc
test
pop
cltd
sub
into
stos
cmp
das
mov
sbb
xor
repz
icebp
mov
mov
gs
pop
or
pop
push
xlat
outsb
jl
add
and
jg
inc
int
dec
xlat
dec
push
bound
jmp
adc
xor
jno
mov
mov
aas
dec
cmc
enter
pop
clc
sbb
icebp
pop
mov
add
dec
in
inc
cmp
jle
in
push
adc
or
cltd
leave
push
out
or
je
dec
in
cmp
pop
mov
mov
mov
jl
movsl
mov
jno
loope
in
mov
outsl
je
scas
jge
test
dec
subb
aas
in
jo
rcrl
shll
mov
pop
ja
cltd
push
cmp
out
ror
xchg
and
sbb
dec
inc
roll
and
mov
jne
ljmp
jae
or
aam
add
xchg
inc
or
rcl
fwait
adcl
push
cmpsb
add
test
arpl
fsts
push
push
out
scas
loop
xorb
lret
mov
mov
push
sub
push
mov
rcrl
faddp
inc
dec
in
inc
sbb
mov
aaa
stos
inc
out
inc
cmp
arpl
mov
pop
xchg
lds
sub
out
decb
mov
ds
and
dec
mov
pop
xchg
xor
jge
push
shrl
mov
es
jge
fisubl
dec
mov
xlat
fcomi
add
popl
dec
inc
dec
adc
jns
push
stc
mov
push
adc
or
movl
scas
push
pusha
xorl
sbbb
movsb
pop
cmp
push
jne
pop
rol
dec
xlat
inc
mov
xlat
rcrl
sub
nop
fbstp
test
pop
dec
and
sub
mov
sbb
popa
push
aad
jno
pop
in
mov
test
mov
aam
outsb
shlb
sahf
push
add
or
cs
int3
data16
adc
sbbl
es
adc
pop
lret
movsb
push
sbb
xadd
mov
faddp
cmc
test
adc
sub
sub
jo
ret
and
inc
imul
xor
sti
les
jb
rol
or
jb
cmp
add
and
fucomi
stc
inc
cmpsl
cmp
xorb
ret
mov
fldenv
cmp
mov
scas
addr16
or
js
aam
sub
mov
js
mov
push
and
imul
jb
imul
mov
in
fcoml
sub
repnz
pop
adc
pop
packssdw
loope
dec
add
shrl
outsb
or
add
loope
lret
sub
and
cmpsb
mov
int
js,pt
xor
xor
movsl
mov
mov
and
dec
lods
loop
std
add
sub
and
mov
sti
stos
and
shrl
inc
cmp
cmpsb
adc
fucomp
ja
inc
popa
sub
shrl
btc
movsl
rorl
fsubs
enter
fldcw
jnp
pop
inc
xorb
mov
lea
ds
lret
sarl
sti
push
gs
out
daa
and
lods
faddl
in
cld
xor
sub
jg
jg
add
inc
call
jle
in
pop
add
repnz
out
add
xchg
mov
inc
dec
movsl
xchg
out
test
lods
mov
int
adc
mov
shll
cmp
aaa
data16
insl
xor
rolb
leave
xchg
mov
lahf
jns
xchg
in
ds
and
dec
out
sbb
dec
daa
jns
aam
popa
jns
out
jae
nop
inc
pop
jle
aaa
mov
repz
out
stos
xchg
cmp
push
add
into
pop
cmp
and
aam
mov
stos
jne
scas
xor
loopne
adc
mov
pop
repnz
adc
jp
pop
add
scas
lock
xchg
lods
adc
inc
mov
in
cmp
nop
jne
add
xor
push
mov
cmc
add
cmp
fisttpl
sbb
adc
jecxz
mov
lahf
movsl
imul
add
out
xchg
and
bound
stc
jmp
and
fs
fildll
mov
pop
cli
mov
and
jle
testb
insl
leave
and
push
test
popf
subl
loopne
and
push
xor
pop
jno
push
push
lret
jbe
das
test
mov
adc
aas
dec
mov
push
lods
das
lcall
xchg
and
sbb
shl
stc
nop
sbb
test
sub
outsl
xchg
test
push
xchg
ljmp
pop
pop
repz
dec
add
push
fsubl
mov
xor
dec
jl
or
sbb
sub
mov
repnz
popa
dec
jno
call
shll
jle
dec
pop
mov
ja
test
arpl
jl
mov
fsubrp
scas
test
or
mov
jge
stc
mov
inc
repz
int3
aam
test
jne
sub
pop
iret
stc
mov
push
sbb
pop
ss
push
push
call
bound
shrl
sbb
mov
js
ljmp
daa
cmp
pusha
shlb
popf
push
dec
mov
sub
mov
xor
or
jae
int
inc
pop
nop
dec
hlt
xchg
pop
mov
in
mov
mov
dec
dec
mov
mov
xchg
bound
ljmp
push
sbb
fcoms
xor
adc
dec
loop
out
mov
std
test
mov
rcrb
mov
mov
lea
mov
mov
xor
orl
mov
xchg
mov
cltd
inc
fsubs
les
pop
sbb
cmpsl
jle
lds
clc
or
pop
push
call
push
mov
maxps
sahf
adc
dec
add
mov
or
aas
stc
stc
insl
xchg
sub
cli
adcl
js
fs
mov
or
mov
lods
mov
outsb
in
shlb
add
jg
mov
loope
push
rcrb
lcall
push
mov
mov
ret
filds
or
ret
xchg
mov
cmp
in
aaa
cmp
test
cmpsl
ja
sub
fstpt
cwtl
outsb
lock
mov
movsb
out
imul
insb
jp
addl
pop
aad
rcl
push
jo
cmpsb
scas
xchg
fdivrl
sub
jecxz
sbb
hlt
lea
jmp
xchg
outsb
clc
stos
ret
nop
es
inc
gs
cmp
add
sub
push
dec
std
xchg
xchg
lods
mov
rcll
dec
jns
dec
repz
lret
sar
repz
idivb
pusha
jno
inc
mov
test
sbbl
fldl
inc
mov
in
sbb
icebp
adc
in
mov
lods
jns
repz
xchg
ja
push
cmpsl
pop
imul
jp
movsb
and
rorb
rcl
movsl
mov
icebp
inc
divb
fdivl
ja
push
cmp
fdivp
dec
dec
lods
inc
dec
xor
sub
popa
pushf
mov
outsb
lods
xchg
pop
cs
repz
lods
and
fwait
mov
sbb
test
int3
or
lcall
mov
mov
cmp
push
jne
pop
out
jbe
addl
notl
or
mov
push
lret
es
clc
mov
sarl
or
mov
push
mov
push
fs
cmp
xchg
cld
push
adc
stos
mov
rorl
lcall
dec
mov
sub
cli
mov
cmpsl
cmp
rolb
mov
sbb
dec
push
stos
loop
insb
pop
mov
iret
jl
sbb
popf
push
adc
jb
shlb
cmp
sbb
cmp
inc
stos
xor
insb
out
pop
jns
xchg
fmul
lods
leave
out
jmp
xchg
jg
shrl
leave
pop
dec
jp
imul
pushf
pop
sbb
fdivl
xchg
add
xchg
in
push
sbb
mov
jo
lds
ja
mov
jp
out
stos
jne
sarb
out
cltd
xor
es
imul
in
and
rorb
jl
mov
mov
lods
inc
sbb
loope
cmp
inc
mov
ljmp
flds
and
jae
sbb
lret
xor
push
pop
insl
adc
pop
mov
enter
sub
pop
icebp
xchg
cs
es
cmp
pop
ds
lea
cmpsl
cld
dec
pushf
mov
adc
fwait
sbbb
mov
cmp
mov
lock
dec
jno
xchg
xchg
aad
addb
push
mov
xor
lahf
pop
js
cmp
xchg
mov
jb
pop
scas
arpl
shlb
cmp
je
xchg
paddb
pop
push
xchg
and
or
adc
or
out
repnz
inc
mov
push
in
push
ss
jo
fimuls
cmp
mov
pop
xor
dec
mov
xor
adc
xchg
data16
inc
into
push
das
mov
fsts
out
mov
fcomps
hlt
fimull
pop
and
rcl
pop
cmp
inc
jecxz
mov
aad
je
lcall
cwtl
jmp
and
aas
rorl
cmp
jns
out
cmp
test
pop
sti
lea
inc
xchg
ret
hlt
aad
jg
xchg
into
sub
movsl
cmp
icebp
jbe
lods
pop
inc
sbb
add
and
adc
fists
adc
inc
in
js
pop
xchg
xor
bound
cmp
hlt
addl
mov
dec
aaa
fnstsw
adc
popf
test
iret
addl
inc
add
xor
dec
arpl
rol
shlb
in
sub
lods
lods
sub
outsb
lods
int
leave
or
add
icebp
cmp
imul
incl
shlb
imul
fucomp
xlat
rclb
lds
mov
nop
in
repnz
push
jmp
movsb
insb
jmp
test
inc
sbb
fidivrl
sbb
push
mov
repnz
xor
shl
cmp
mov
out
jge
xchg
mov
mov
dec
push
inc
jp
mov
in
dec
cmp
push
or
sbb
sbb
inc
les
or
rorb
cltd
jo
cltd
sub
sbb
sub
pop
addr16
push
cltd
jg
mov
mov
xor
fwait
mov
cltd
ja
iret
pop
adc
xor
mov
gs
dec
stos
push
sbb
fadd
jge
out
cltd
test
rorl
sbbb
ret
xor
push
mov
xlat
adc
sbb
sti
pop
jo
jle
testl
rorl
mulb
sbb
iret
push
imul
jmp
mov
add
mov
sbb
pop
aaa
into
lea
out
cmp
aad
sbb
jb
bnd
dec
out
adc
shrb
int
push
iret
push
mov
xorb
sbb
arpl
or
push
sbb
fldenv
outsl
mov
clc
sbb
xchg
mov
out
push
loope
or
jmp
mov
jno
lret
xchg
add
mov
mov
rclb
pop
xor
iret
mov
and
lret
in
mov
sbb
es
movsb
out
inc
int3
insb
add
add
mov
repnz
pop
cmc
mov
aad
sbb
jbe
popf
xor
aad
orl
jg
js
jb
mov
fdivrp
sbb
mov
mov
loopne
arpl
mov
jne
dec
mov
add
mov
push
adc
rcll
inc
xlat
stc
imul
aaa
push
or
js
add
pop
sbb
dec
cmp
shlb
ficoml
add
jbe
push
insb
adcb
add
inc
shlb
jns
inc
sub
lret
mov
iret
inc
push
stc
dec
addl
in
std
pop
out
fisubs
mov
sarb
test
mov
ret
ret
cltd
cli
push
xchg
imul
xchg
scas
imul
or
ret
cmp
lods
adcb
jno
rclb
push
adc
ja
popa
out
xchg
shr
jecxz
lds
inc
lock
adc
lcall
and
int
ja
sub
iret
test
lea
jl
xor
dec
icebp
enter
into
inc
xor
icebp
xchg
adc
push
sub
adc
push
mov
pop
xor
ljmp
std
or
out
jnp
fadds
push
fdivs
push
mov
jge
sub
cld
cmp
insb
pop
xchg
adc
cmp
push
xor
js
jmp
push
jmp
and
and
inc
or
test
mov
pop
test
sahf
push
dec
inc
jp
jecxz
add
lods
cmc
int3
pop
decl
in
jmp
adc
bound
adc
sub
mov
iret
dec
pop
push
out
mov
xor
imul
or
jne
sbb
cmp
pop
push
mov
fptan
iret
xor
mov
cmp
mov
outsl
out
test
mov
push
ds
in
stos
xchg
add
sarb
push
lret
pushf
in
jl
out
inc
gs
jp
mov
jns
daa
cmp
cld
loope
mov
in
into
clc
jg
mov
push
test
ljmp
mov
imul
inc
iret
data16
mov
lcall
lret
lods
cs
mov
popa
mov
inc
nop
pop
in
and
out
bound
or
ret
ja
lret
adc
ret
call
jge
jmp
or
out
fcomp
and
ss
inc
xchg
ja
imul
movsl
cmp
push
hlt
loop
ret
xchg
cmpsb
mov
push
sub
inc
aam
movsl
push
jae
dec
repz
sub
cli
mov
cmp
call
xor
in
fsubrl
sbbl
fdivrl
or
add
cmpsl
sbb
in
mov
arpl
xchg
xchg
pop
cld
cmpsl
sbb
pop
clc
mov
inc
insb
push
jno
arpl
int
adc
jns
adc
into
adc
xchg
lds
cmpsb
cmc
stos
mov
dec
shrl
jecxz
rcl
cltd
mov
scas
mov
cwtl
lods
ss
insb
inc
bound
imul
subl
or
inc
cmp
leave
pusha
lock
sti
aam
inc
mov
mov
sbb
jge
mov
sbb
sarb
sub
enter
or
add
movsl
fdivrs
dec
ds
or
sub
push
jp
addb
cmpb
mov
popa
loop
xchg
xchg
and
add
int
movsb
jmp
jle
cs
mov
idivl
xlat
bound
cltd
je
fwait
xor
inc
neg
mov
mov
shrb
add
dec
leave
jnp
es
iret
cmp
data16
cltd
push
add
and
lods
inc
lcall
inc
fcompl
or
lret
pop
dec
out
hlt
pop
adc
mov
clc
xchg
repnz
in
cmc
xor
repz
sub
xor
fmull
sub
stos
cli
cld
cld
inc
and
sahf
sbb
add
cmp
enter
xor
adc
push
imul
push
stc
insb
or
shlb
sbb
lret
shrl
pop
add
lahf
jg
and
cli
sbb
pop
dec
inc
pop
mov
insl
sub
out
mov
in
jb
xchg
xchg
dec
dec
mov
cld
push
pushf
or
cmpsb
sbb
rol
add
les
sbb
pop
add
adc
ficoms
xchg
sub
js
or
jns,pt
in
movsl
mov
dec
mov
pop
push
jg
cwtl
das
cmp
xchg
lods
arpl
add
mov
daa
cmp
loop
sub
stc
xchg
les
mov
sub
cmp
pop
ret
inc
or
push
mov
push
or
int3
mov
mov
decb
fwait
insb
sub
push
mov
mov
adc
addr16
push
add
sbb
test
lods
aas
push
jbe
adc
dec
mov
pop
and
xlat
jmp
mov
ficoms
mov
pusha
pushf
jle
icebp
test
arpl
push
jnp
jne
cmp
mov
adc
div
aas
xor
mov
or
das
js
cmp
hlt
jb
sbbb
jecxz
and
dec
mov
and
lcall
inc
pop
cmp
ljmp
push
pushf
push
pop
dec
js
imul
mov
add
test
jo
movsl
jnp
test
jae
add
sbb
cmp
add
or
sbb
jo
xchg
test
inc
push
mov
push
inc
lret
stos
add
jl
push
leave
fidivrl
leave
add
test
mov
mov
adc
xchg
add
divl
aad
movsl
ret
hlt
pusha
mov
ficomps
test
aad
insb
cltd
dec
jbe
popa
sbb
test
mov
je
or
fcmovnbe
and
ja
fst
rcll
repz
jne
test
jg
imul
sbbb
push
jge
adc
rcl
inc
adc
and
je
pop
int
xchg
jns
data16
add
frstor
ljmp
mov
loop
js
daa
xchg
cli
add
or
test
sarb
insl
pop
iret
xor
repz
outsl
clc
mov
pop
movsl
into
cmp
jl
pop
dec
mov
test
mov
dec
ret
mov
lret
es
movsl
test
inc
ss
xchg
push
mov
clc
mov
xchg
jns
es
sbb
cld
xchg
add
enter
sahf
jno
fbld
xchg
jecxz
lock
or
pushf
roll
lret
push
jmp
add
loop
sub
je
decl
fs
ret
leave
adc
xor
addr16
push
cli
test
test
lods
pushf
aam
clts
mov
push
out
mov
into
outsb
jl
push
push
pop
addr16
cmp
test
rcll
xor
mov
sarb
ficompl
dec
shlb
adc
loop
and
mov
push
fiaddl
popa
or
in
inc
ja
lret
adc
cli
adc
fisubrl
dec
jne
out
scas
les
out
cwtl
out
or
mov
mov
rorb
and
pop
cmc
pop
lea
and
mov
or
shrb
lcall
mov
cmpsb
in
es
pop
jmp
dec
mov
int
je
push
add
xchg
lds
lods
gs
out
cmc
lds
mov
cmp
pop
dec
es
lds
pop
adc
adc
pop
jle
lods
cmp
loopne
inc
in
mov
mov
lock
inc
lcall
stos
jmp
xchg
pop
jb
fwait
cmpsl
push
sbb
mov
mov
sub
mov
inc
gs
inc
push
popa
scas
sbb
js
or
test
inc
leave
pusha
je
mov
decb
dec
inc
loopne
inc
cltd
lock
insl
setne
mov
mov
sbb
jnp
xor
cmp
push
fwait
ret
adc
jecxz
sbbl
sbb
dec
xchg
outsb
fwait
es
sahf
pop
dec
into
sbb
pop
cmp
mov
cmp
lcall
cmpsb
sub
adc
add
insl
aas
hlt
test
adc
sub
jb
pop
cmp
mov
and
movb
add
or
stos
adc
cltd
xchg
adc
test
or
std
cmp
andb
jmp
inc
xor
imul
stos
sarb
cmp
imulb
adc
inc
in
stos
inc
dec
and
mov
orb
xor
push
outsb
pop
mov
add
inc
es
fwait
imul
roll
fsubrs
xor
push
je
adc
push
dec
out
pop
addl
ret
jl
outsb
movsl
fdivrs
or
xchg
push
sub
cmovle
nop
mov
adc
sub
mov
fs
xchg
and
rcrl
enter
ljmp
inc
mov
into
arpl
xlat
inc
dec
in
ljmp
gs
lret
push
hlt
add
mov
subl
fstp
xor
scas
imul
cld
inc
add
cmp
sub
fwait
sbbl
clc
testb
push
jp
nop
dec
xchg
hlt
push
jnp
inc
pop
jecxz
mov
adc
cmpsl
dec
dec
test
xchg
ljmp
cmp
inc
mov
adc
movsl
mov
xor
fists
icebp
popa
int
xchg
push
bound
xchg
call
or
mov
dec
pop
or
mov
mov
cmc
push
lahf
and
pop
repz
mov
jp
shrb
fstl
test
jbe
movsl
add
inc
mov
int3
in
jge
pop
add
add
nop
out
mov
xor
into
popf
dec
testb
dec
sub
ret
rcl
pop
sti
sub
shlb
sbb
push
push
inc
fdivp
movsb
push
filds
pop
adc
or
jl
add
sbb
lcall
stc
cltd
push
ja
sbb
shlb
mov
popf
and
adc
mov
add
lods
and
xchg
out
dec
mov
jnp
jnp
xor
sbb
jnp
sub
ret
sbb
and
and
jne
mov
mov
repnz
cltd
mov
sub
jae
sub
mov
dec
ja
clc
cwtl
loop
jge
inc
mov
cmp
dec
cmp
jg
int3
pop
jb
jg
sbb
movsl
scas
divl
xor
add
mov
pop
mov
xchg
dec
jmp
and
lods
sub
imul
xchg
imul
xchg
mov
jmp
pop
in
dec
mov
test
jg
add
xchg
stc
mov
xchg
add
jge
adc
xchg
xor
push
mov
js
ret
mov
add
push
jecxz
jecxz
andb
enter
mov
mov
shrb
iret
cmpsb
push
test
adc
mov
mov
stc
mov
je
push
mov
rol
adcb
dec
int3
cmpsb
and
rcrl
add
add
sub
js
repz
aas
adc
scas
sub
push
iret
mov
sbb
xchg
or
js
xchg
jne
ret
jns
mov
or
adc
rolb
xchg
ja
pusha
rcll
mov
mov
push
loope
out
or
sub
xor
push
pushf
popf
into
test
arpl
ficoml
enter
jg
mov
xor
lret
add
sbb
rcr
inc
push
pop
out
stos
cmp
lods
call
adc
sub
ja
or
loopne
add
hlt
or
pop
xchg
mov
call
pop
daa
mov
xor
in
dec
mov
bound
mov
imul
push
sahf
mov
sub
lock
enter
js
call
sbb
push
xchg
mov
add
psrld
sub
cmp
mov
push
push
int3
inc
mov
add
mov
mov
mov
sub
push
into
arpl
mov
jp
inc
loope
movsb
pop
mov
xchg
xchg
inc
je
push
rolb
add
sub
push
dec
push
fldl
shl
sbb
mov
mov
shl
push
jl
mov
sub
mov
cmp
pop
sub
test
pushf
dec
lea
or
xchg
daa
out
add
jo
jo
mov
mov
or
lods
sub
cmp
add
test
mov
test
aas
dec
xor
daa
je
xchg
fsts
pop
subl
div
retw
mov
inc
fimuls
stos
aas
add
out
ds
mov
into
test
add
imul
fnstenv
adc
call
cltd
mov
xorb
pusha
aad
sarl
jle
or
and
dec
cmc
mov
dec
es
mov
or
outsl
sbbl
into
jne
lret
icebp
adc
push
lods
jmp
mov
mov
cmp
pop
out
or
cli
ds
xor
lahf
jp
fidivrs
mov
imul
fsubs
ret
in
adc
in
fbstp
mov
mov
pop
xor
mov
std
cltd
movsb
repnz
pushf
adc
xor
loope
add
and
out
mov
jecxz
and
mov
jo
xchg
mov
xchg
jle
add
mov
sbb
mov
push
pusha
test
leave
clc
ds
das
sub
les
add
arpl
xchg
jge
or
push
pop
jl
mov
push
sahf
sbb
inc
popf
icebp
xor
out
popf
shll
xchg
jo
and
dec
sbb
mov
jnp
enter
xchg
sbb
loop
mov
sahf
aam
xchg
or
jae
mov
ja
mov
rclb
movsl
push
pop
lcall
mov
mov
ss
jnp
sub
mov
fmul
daa
push
je
imul
mov
jl
or
mov
popa
mov
jae
mov
stos
inc
add
pop
fistps
mov
cli
fcos
jmp
in
jne
lds
int
cld
iret
sbb
add
andb
push
ss
loop
ret
fs
push
clc
cmp
inc
aaa
enter
shlb
out
lahf
push
lcall
mov
int
pop
dec
dec
pop
dec
push
test
out
xchg
xchg
dec
jp
mov
sbb
cmc
jle
or
insb
jl
shr
adc
cwtl
push
mov
test
mov
mov
and
fdivl
add
lret
push
and
in
int
mov
sub
cmp
add
cmpsb
repnz
test
dec
push
fdivl
xchg
mov
jg
and
loopne
jbe
cld
lcall
jne
dec
and
cld
or
loop
mov
adc
je
mov
mov
inc
jle
enter
add
imul
fildll
dec
fcmovb
ja
out
dec
pop
jno
outsb
lret
sub
pop
in
cmc
aaa
icebp
cs
cmp
call
popf
mov
cmp
dec
shlb
repz
out
pushf
cltd
dec
in
mov
insb
mov
stc
shrb
xor
push
cmpsb
add
push
cmpsb
dec
lea
imul
into
notb
push
je
aad
lret
pop
add
call
jno
jae
xchg
scas
aaa
sbb
lods
cltd
pop
adc
dec
out
cld
stos
cmpsl
lea
pop
ret
cwtl
jg
ret
fcomip
mov
mov
roll
adc
lods
and
ret
leave
loope
jle
adc
lods
xchg
sbb
add
mov
mov
fildll
stos
mov
add
arpl
xor
ljmp
imul
les
scas
mov
in
jbe
repz
int
sbb
iret
js
aas
imul
lcall
or
lods
jg
lods
std
inc
sub
pop
inc
mov
leave
insb
and
fldcw
mov
es
pusha
and
jne
jl
push
push
mov
je
lea
test
jge
or
or
popa
xchg
or
xchg
dec
pop
stc
call
jecxz
rclb
xor
data16
xor
loope
pop
dec
pop
inc
add
vpackssdw
leave
xlat
and
xchg
mov
and
ja
fwait
pop
dec
cmc
stos
rcrl
pop
xor
leave
gs
adc
jl
or
and
mov
andb
pop
fcomps
pop
cmp
push
add
mov
notl
nop
mov
bound
call
and
clc
movsl
and
and
fidivs
mov
and
push
test
mov
jne
sub
loopne
fdivl
push
mov
js
mulb
jno
les
sbb
imul
into
arpl
sbb
cs
enter
mov
stc
popf
mov
sub
aaa
sub
testb
xchg
add
xchg
inc
inc
data16
cwtl
jns
stc
mov
sbb
pusha
cmp
adc
sub
call
cwtl
inc
pop
mov
push
jecxz
das
mov
pop
add
cmp
and
cmp
testb
mov
in
mov
lock
mov
enter
or
fsubl
shlb
imul
dec
mov
add
jecxz
jg
mov
int
dec
pop
aam
bound
imul
in
pop
dec
add
popf
inc
jmp
out
cmpsb
scas
and
fucomi
jp
cltd
lock
subl
and
pop
push
testl
mov
jns
ss
sbb
cmp
xchg
mov
sahf
cmp
sbb
repz
bound
lret
xchg
push
pop
cmpsb
shl
and
mov
daa
aaa
xor
test
shll
rcrl
xchg
aam
add
push
jo
jae
test
test
mov
cmp
fsubr
xor
mov
fnsave
scas
in
stos
loopne
sbb
lahf
mov
std
iret
cwtl
shrl
cltd
jns
adc
loope
pushf
push
aam
stos
sub
jne
insl
test
xchg
sahf
inc
in
and
fmull
or
xlat
jg
adc
mov
out
rorl
xchg
es
adc
push
cmp
aas
jo
int
jbe
fnsave
fsubs
or
rcrb
int
mov
inc
add
jne
lret
cmp
mov
mov
add
mov
pushf
loopne
test
dec
pusha
or
sbb
dec
shll
add
cmp
data16
push
lds
pop
repz
je
enter
lcall
int
pop
call
cwtl
bound
loope
mov
jnp
rcr
mov
iret
jecxz
clc
les
lock
bound
ret
cmpb
xor
mov
pusha
ss
sub
adc
or
dec
stos
inc
addr16
and
imul
into
mov
adc
fs
lcall
jmp
mov
sarl
mov
repnz
stos
sbb
inc
popf
cwtl
ret
adc
inc
cmp
imul
pop
cmpb
and
push
jmp
mov
inc
dec
dec
dec
lods
bound
addl
je
xor
int3
xor
mov
outsb
cmp
inc
aad
pop
cmc
mov
or
sub
or
sub
dec
mov
notl
shll
inc
xorb
jne
push
cs
inc
fld
push
jno
xchg
lret
lret
cmp
jle
into
fcoml
aaa
xchg
jle
fnsave
mov
jl
daa
pop
cmp
mov
hlt
push
inc
dec
in
fbld
jo
add
mov
adc
and
out
push
inc
push
push
jmp
in
mov
scas
and
push
iret
cmpsb
ret
sbb
jbe
push
clc
and
mov
rcrl
mov
subl
push
fadds
adc
or
dec
add
cmpsl
test
sarl
in
dec
pop
inc
and
or
divl
push
dec
cmc
je
mov
push
jb
testb
push
xchg
and
jecxz
sbb
dec
push
call
mov
popa
add
lods
sbb
cwtl
pusha
fistl
je
repnz
adc
pop
in
jl
imul
mov
and
or
jb
jb
dec
bound
adc
aad
sbb
xor
int
push
push
jle
jae
leave
shlb
fs
sbb
rolb
std
stos
es
cmpsl
sbb
mov
inc
pushf
xchg
sub
out
imul
add
push
imul
imul
push
mov
dec
pop
mov
cmp
push
inc
xchg
cmp
ljmp
lock
sbb
sub
sbb
cmp
cmp
adc
arpl
jp
jb
imul
pop
sbb
inc
leave
loope
push
pusha
sbbb
mov
leave
sub
je
pop
xor
xor
mov
push
out
mov
push
imul
cmp
sbb
ret
movsl
cmp
dec
mov
ljmp
les
xchg
testb
std
xchg
hlt
mov
xchg
push
mov
jns
cmp
jb
aad
cmp
push
mov
fistl
push
fidivs
out
and
loope
test
aam
cmpsb
ret
pop
call
shl
mov
es
push
fcomps
cmpsl
mov
cmp
xchg
jl
je
dec
push
hlt
sti
jnp
add
pop
xor
and
fidivrl
add
xorb
push
clc
popl
sub
ja
sbb
xchg
sub
push
fbstp
jp
sub
adc
mov
cmc
cmp
ficomps
dec
push
je
hlt
inc
xor
into
gs
lret
call
shrl
xor
es
shrb
aam
in
add
ja
xor
cmp
movntq
je
or
fmulp
movsl
addr16
aad
fstpt
xor
int3
outsb
jl
pop
arpl
mov
lock
test
push
sbbb
push
loope
inc
xchg
add
lock
inc
or
stos
dec
loopne
lea
xor
xor
adc
pop
ficompl
fwait
xchg
and
cmpsl
sbb
pop
arpl
dec
push
aam
xor
push
and
js
pop
xchg
mov
mov
fisubrs
icebp
sbb
add
clc
mov
push
mov
into
in
lret
add
inc
pop
mov
stos
icebp
xchg
in
dec
shrl
int
xchg
pop
adc
dec
shrl
cmpsb
pusha
jnp
iret
test
lods
push
mov
andl
loopne
inc
mov
sahf
or
cmp
jge
dec
js
add
mov
pop
js
nop
divps
mov
sub
jg
rcrl
jns
leave
shrb
sti
inc
insb
fisubs
and
jg
subb
mov
insb
adc
fidivrl
rcll
add
outsl
push
xchg
fmull
fnstenv
stos
mov
fnstenv
test
sub
iret
cmp
dec
mov
inc
inc
mov
outsb
adc
dec
aad
push
mov
shll
mov
lds
stc
push
daa
add
sub
cmp
xchg
lock
jge,pn
ja
fimull
jne
stos
sub
negb
cmp
ret
jge
inc
mov
fwait
rorl
add
mov
and
lret
shrl
aas
push
loop
cmc
push
mov
sub
fiaddl
das
adc
and
jae
jne
andl
pop
dec
out
mov
inc
or
mov
jo
xchg
adc
and
dec
pop
movsl
test
jge
repz
lahf
mov
dec
jne
inc
ja
inc
mov
push
inc
scas
xchg
mov
mov
out
pop
mov
inc
ja
movsb
fdivrl
sbb
jecxz
pop
xchg
mov
sub
dec
jmp
lcall
cli
pop
mov
or
out
sub
fsubrl
push
lea
add
xchg
bound
aam
dec
cwtl
repnz
imul
shll
sbb
or
jnp
lods
jp
loope
test
mov
push
lods
adc
xor
movsb
test
mov
pop
fiaddl
ja
and
add
hlt
cmpsb
lret
fstps
cmpl
xchg
jae
mov
cld
lcall
pop
jo
pop
inc
xchg
xchg
loopne
ret
mov
push
and
movsb
cmp
mov
cmp
jae
push
dec
in
xchg
cs
fnstcw
mov
pusha
xlat
mov
push
popa
scas
mov
jmp
pop
ljmp
push
pop
negb
jl
iret
je
fwait
push
adc
or
push
or
push
aas
mov
jb
int
mull
add
push
pop
pop
imul
adc
sub
ds
scas
jno
mov
call
pop
jle
sub
shl
in
mov
mov
sub
lds
jle
push
mov
sub
mov
dec
dec
xchg
call
cmp
imul
mov
shrb
fwait
and
dec
fsubrl
adc
xor
pop
dec
pushf
dec
mov
xchg
shlb
dec
inc
mov
addb
or
les
pop
inc
push
mov
ja
rorb
or
xlat
sbb
inc
sarb
pop
dec
jecxz
cmpsb
mov
cs
into
cmp
ret
xlat
jp
adc
nop
jg
sub
add
addr16
fwait
dec
mov
push
jo
imul
jne
mov
xchg
mov
pop
lods
jmp
dec
or
fdivrp
mov
dec
bound
xlat
adc
and
incl
lea
sbb
mov
push
add
fwait
es
xor
cli
sub
push
loopne
push
xor
or
scas
xchg
fwait
or
aas
xor
outsl
test
mov
loop
mov
jl
test
mov
mov
adc
dec
or
sbb
sub
js
add
xrelease
xchg
and
insl
xchg
in
or
dec
xchg
cmp
sbb
and
pop
orl
lahf
nop
mov
movsl
xor
xchg
cli
shll
test
stos
cltd
sbb
or
jge
cmpsl
ja
fwait
xchg
or
xchg
mov
ja
xor
sbb
stc
fcomp
sub
xor
dec
push
xlat
jge
push
test
sahf
push
rorl
xchg
repnz
pop
lcall
adc
test
mov
or
inc
push
or
je
mov
cld
sbb
sub
inc
fistps
and
jecxz
pop
xchg
js
hlt
mov
std
sahf
and
inc
int
mov
lock
int3
pop
jl
insb
mov
sub
sbb
fsubrl
clc
stos
jo
in
loope
subl
xor
fisttpl
enter
add
sub
mov
mov
adc
dec
sub
insl
sub
jo
push
test
jae
cmp
or
popf
xor
jae
cmp
xchg
sbb
xchg
and
push
test
jmp
push
scas
push
pop
out
lods
mov
sub
xchg
inc
into
mov
stos
push
out
fcmovnbe
mov
arpl
dec
pusha
pop
outsl
in
pushl
sub
cmp
ds
push
add
mov
clc
popa
rcrb
mov
mov
xchg
sub
fidivs
or
cmpsl
iret
mov
lock
fstpt
lock
or
pop
push
dec
mov
fnop
je
pop
xor
test
in
mov
sbb
ljmp
mov
push
xor
inc
sbb
adc
adc
dec
mov
stos
and
dec
insl
and
xor
fimull
lcall
sti
push
or
cmp
mov
mov
ja
mov
xchg
stos
xchg
add
adc
inc
imul
mov
cwtl
call
sarl
xlat
repz
ret
movsb
repz
xor
inc
inc
rcll
jb
or
sarb
leave
insb
push
xchg
int3
sub
cmp
sbb
mov
in
pusha
and
pop
xor
gs
xchg
out
cmp
scas
mov
dec
sbb
in
xchg
imull
sbb
in
jae
lret
mov
cmp
or
popl
pop
out
mov
pop
cltd
xor
rolb
test
sbb
iret
sbb
shlb
fs
ss
pop
push
aaa
ror
adc
cld
push
clc
nop
outsb
into
jb
je
sbbl
mov
push
adc
sub
add
clc
pop
add
mov
cli
ds
sarb
mov
mov
pop
adc
push
xor
in
sbb
push
mov
ljmp
inc
fmul
cmp
mov
sbb
and
arpl
icebp
sbb
dec
jecxz
xchg
adc
push
gs
test
xor
std
rcrb
sub
mov
mov
outsb
jnp
pop
xchg
pop
jge
faddp
fs
fnsave
or
mov
or
cmp
fisubs
and
xor
xor
or
mov
mov
mov
aaa
add
fidivs
clc
cmpsl
ds
int3
fwait
test
dec
adc
loop
fbstp
add
adc
int
push
in
inc
cmc
int3
repz
imul
cwtl
dec
in
mov
ja
xchg
xchg
sub
cmp
pop
jne
dec
mov
sti
jbe
shrb
mov
cld
nop
push
xchg
fidivl
lret
or
rcll
and
xchg
dec
and
lods
sbbl
xorl
stos
cmp
pop
mov
pop
inc
push
xchg
push
popf
ret
jg
shlb
rcll
sub
es
or
lret
sub
lock
cli
fwait
inc
jp
into
ret
fsubrp
sbb
repnz
mov
imul
mov
nop
daa
loop
ds
xor
pop
jno
pop
pop
cmc
mov
es
mov
or
sbbb
out
push
sub
cmp
faddl
in
fmull
mov
ficompl
test
add
pop
shl
mov
dec
pop
test
les
in
in
jb
mov
stc
or
orl
jp
lds
jmp
pop
adc
movsl
sub
xor
loope
and
and
and
push
cltd
jmp
test
jae
rol
pop
xor
arpl
lods
or
push
xchg
clc
sub
nop
das
testb
mov
lahf
ss
xor
scas
inc
or
cmpl
sbb
or
stos
gs
jge
add
xlat
add
pop
repnz
add
loopne
inc
inc
pop
mov
mov
xchg
xor
dec
bound
sub
nop
mov
lea
insb
push
and
adc
add
and
mov
mov
lock
insb
add
lret
mov
bswap
xchg
sbb
pop
shlb
aas
mov
dec
pop
repnz
lds
dec
pop
fwait
or
ret
ror
movsl
gs
jle
fucomip
push
mov
sub
ret
sbb
and
or
cltd
xchg
inc
insb
xchg
pop
cltd
jmp
pop
dec
cwtl
iret
dec
dec
bound
mov
mov
push
std
xchg
lret
sti
popf
jmp
in
js
shll
sub
pop
xor
push
pop
loop
test
data16
insl
add
outsb
stc
nop
jg
xor
mov
fildl
mov
ljmp
xchg
add
mov
test
rcll
jmp
pop
jo
jne
and
mov
frstor
mov
mov
loope
lret
cmp
mov
in
sbbb
out
std
hlt
je
loope
cmp
dec
sti
fsubrs
scas
or
repz
add
cmpsl
push
dec
add
ret
mov
hlt
sub
stos
enter
mov
ret
insb
add
repz
test
movlps
pop
out
cmp
inc
mov
loop
inc
rclb
mov
cmp
ret
shl
bound
int3
fildll
push
shld
push
xor
add
addl
cmpsb
in
scas
sub
add
les
pop
jo
notb
mov
adc
adc
out
xchg
inc
lret
es
std
bound
popf
cmp
pusha
jp
dec
out
dec
jge
sarb
call
subl
dec
ljmp
inc
cltd
inc
pop
mov
adc
bnd
push
and
xchg
and
rcll
push
jne
idiv
stc
enter
add
mov
icebp
sub
movsl
cmp
and
popf
inc
fs
xchg
fisubl
pop
pusha
shrl
or
xor
add
xchg
sbb
seta
jle
and
jnp
in
mov
sbbl
sub
cli
mov
enter
adc
ljmp
cmpsb
mov
in
iret
call
lcall
cmpsl
xchg
dec
sarl
mov
sbb
mov
repz
fnsave
int
mov
adc
lret
lods
inc
loopne
or
leave
repz
mov
sub
hlt
pop
lock
dec
aam
adc
inc
xor
xchg
aas
xor
sbb
cwtl
test
leave
lods
out
inc
test
fldcw
stc
sbb
out
sahf
push
mov
int3
jecxz
insb
inc
out
dec
into
and
out
push
mov
in
xor
pop
in
adcl
pop
or
idivl
push
mov
scas
movsl
jne
aam
mov
mov
addb
and
pmaddwd
lret
into
pop
add
shl
sbb
loopne
fucom
mov
in
imul
pop
inc
lahf
push
in
mov
orl
in
in
mov
ja
sbb
add
mov
outsb
cmp
in
inc
fsubl
push
mov
loop
xchg
mov
mov
ret
dec
popa
in
xchg
mov
aaa
into
not
sbb
aad
popa
sarb
stc
inc
outsl
fld1
or
das
mov
insb
pop
cmpsb
fbld
test
repz
repz
stos
pop
mov
aas
push
stos
push
pop
in
stos
lret
hlt
js
mov
pop
fadd
aaa
cmp
insb
shlb
push
mov
pop
inc
xor
cs
fadd
out
xor
jl
bound
sbb
jle
mov
push
dec
out
popf
mov
fldl
jmp
insl
sbb
stos
inc
cmp
fstl
es
pusha
cmpsl
shl
sub
or
pop
mov
mov
mov
ret
pop
push
outsb
scas
and
loope
mov
jg
or
inc
pop
mov
test
mov
fisttpl
cmp
leave
fxam
xchg
pop
push
jmp
pop
fnstsw
pop
push
out
int
mov
repnz
insb
add
xor
mov
xchg
push
lods
cld
cmp
fs
sbb
ret
mov
imul
into
shr
jge
cwtl
ja
mov
xor
xlat
movsb
inc
ror
sub
gs
sbb
and
ficomps
xor
arpl
cmpsl
stos
jns
mov
push
pop
outsb
outsl
sbb
mov
inc
sbb
in
adc
and
mov
pop
add
mov
test
add
dec
loopne
inc
cmp
dec
pop
pop
out
adc
pop
mov
cmp
sahf
clc
dec
dec
frstor
inc
mov
cltd
mov
cmp
mov
mov
scas
imul
push
jle
jge
daa
inc
ficoml
add
stc
jp
or
push
inc
add
lds
mov
sbb
sahf
clc
sarl
add
mov
mov
mov
lock
pop
scas
jmp
add
jb
jp
mov
aas
and
data16
mov
dec
decl
nop
mov
inc
aaa
mov
out
xchg
add
jge
mov
xchg
inc
shrl
icebp
sbb
and
xchg
fisubrs
dec
loopne
push
adc
pushf
inc
mov
add
ljmp
scas
jae
js
sbb
lcall
mov
sbbl
shrl
add
aam
cwtl
and
mov
test
pop
das
add
mov
pop
fmuls
mov
mov
loop
xchg
pop
sbb
jno
in
xchg
adc
cmc
cld
xchg
add
fldcw
sbb
jno
push
add
lods
add
jl
stc
xchg
fnstenv
mov
xchg
xor
inc
and
adc
and
in
mov
pop
push
adc
adc
ds
jno,pn
mov
dec
lret
xor
pop
push
mov
lock
inc
bound
iret
jb
lds
iret
mov
mov
push
decl
xchg
xor
inc
sbb
loope
lret
leave
jno
xchg
loop
mov
or
lock
ljmp
or
stos
or
xor
ds
or
popf
sbb
int
inc
lcall
or
mov
push
push
aam
xchg
into
sbb
arpl
pop
cltd
jno
popa
push
test
inc
mov
fs
int
and
push
pop
test
les
out
jmp
pop
and
push
dec
fwait
addr16
movsl
mov
xchg
xchg
insb
dec
icebp
cli
aad
js
jns
rcrb
or
imul
enter
dec
test
mov
lods
pusha
shll
xchg
les
cltd
data16
leave
dec
pop
adcl
add
aad
jl
inc
xor
inc
dec
pop
lods
lret
jecxz
cmp
mov
mov
push
and
pop
push
ljmp
jno
mov
fld
insl
repz
movsb
push
push
xor
cmp
lods
dec
cwtl
or
loop
les
imul
fs
mov
jle
push
outsb
movsb
arpl
test
jge
jno
lret
add
sub
jbe
pop
iret
mov
and
ds
sbb
das
push
lds
mov
inc
aas
pop
repz
and
mov
aas
into
mov
push
jecxz
cli
xchg
data16
jl
mov
cmc
pop
jmp
dec
cmp
xor
lret
push
orl
shl
or
test
mov
fnstcw
xlat
cli
pop
sbbl
sbb
es
pop
or
xchg
lods
mov
mov
int
push
insb
ffreep
jne
cmp
mov
int3
fcompl
call
add
dec
jge
subl
add
ret
sub
pusha
sbb
xchg
enter
in
lods
push
cmc
mov
push
cmp
fnstsw
jge
xor
out
hlt
mov
std
or
pop
ja
adc
rol
shrl
loope
gs
xchg
loop
dec
aam
jb
mov
inc
enter
repnz
xchg
add
and
sahf
inc
in
xor
lahf
fsubrp
jg
mov
mov
gs
test
arpl
mov
pop
inc
pop
mov
xchg
bound
cmp
inc
loopne
sub
lea
mov
xchg
imull
pop
pop
mov
pushf
mov
xchg
mov
cmp
daa
cwtd
pop
add
cmp
lcall
xchg
outsl
stc
mov
push
adc
cmc
mov
jp
jne
test
xor
cmpsl
cmp
idivl
repz
adc
sub
adc
ja
movsl
xchg
shlb
enter
sub
cwtl
jbe
push
push
out
loope
dec
stc
xor
sbb
and
shrb
mov
jg
inc
ljmp
push
cmpsb
jnp
icebp
aas
adc
mov
shll
std
cltd
insl
aas
xchg
xchg
pushf
inc
add
movsl
mov
mov
jne
or
xchg
pop
inc
push
or
cmc
pop
bound
lret
add
call
dec
inc
call
jecxz
stc
mov
xor
movsb
or
test
test
mov
fadd
push
push
sbbl
aad
cmp
xor
or
imul
jp
pop
sub
out
push
add
mov
int3
int
out
cmpsl
outsl
ss
push
stos
inc
add
jne
cli
aas
sub
jb
iret
jecxz
xor
lock
xor
pop
mov
jecxz
pop
mov
stos
mov
lock
mov
inc
add
ds
inc
insb
clc
bound
push
pop
mov
data16
push
movsl
inc
outsl
ret
out
push
mov
pop
data16
lock
mulb
sub
jge
mov
ja
mov
sub
outsb
call
and
inc
cmp
sti
loopne
sub
les
pop
pushf
loope
int
push
xor
fld
pop
adc
loopne
jmp
test
and
add
and
xchg
and
xor
out
ficoml
mov
lods
jecxz
inc
fdivl
xor
sbb
sbb
lcall
jg
in
pop
jnp
xchg
lods
jle
lods
mov
and
popf
xor
xor
lcall
adc
test
adc
jnp
pusha
push
aas
pushf
adc
hlt
xchg
mov
lahf
jge
mov
pop
enter
mov
and
sbb
ror
loope
loop
mov
testb
pop
shrb
xchg
push
scas
mov
jle
iret
and
mov
pop
mov
push
or
flds
shl
sbb
xor
inc
cmp
fldt
jbe
js
fidivs
fidivrs
jnp
push
cmp
out
push
add
rcr
jl
ljmp
xor
sbb
sbb
cs
pop
pop
mov
js
mov
inc
xor
jge
ficoms
lret
add
pcmpeqb
xchg
movsl
push
loopne
test
jae
sub
or
cmp
es
add
sub
or
call
movsl
pop
xor
ss
test
xor
mov
jmp
jp
fnstsw
repz
jp
gs
or
ss
dec
in
mov
mov
dec
and
ljmp
add
ds
inc
popa
adcb
int
sub
inc
sahf
xor
int
jp
pushf
flds
mov
out
xor
mov
inc
and
lds
fists
test
adc
jg
lock
cs
add
cmp
mov
dec
out
pop
xor
stos
insl
inc
popa
cmp
xchg
stos
mov
mov
xchg
and
subb
pushf
push
test
inc
mov
lds
jecxz
lea
scas
mov
in
fdivrs
xor
push
mov
stos
leave
sub
mov
sahf
sbb
or
sbbl
testb
mov
push
mov
xor
mov
mov
push
pop
testb
push
test
addr16
aaa
into
mov
adcl
mov
push
ja
sub
cmp
ss
je
or
xchg
mov
ret
decb
lret
lret
push
inc
rcr
jae
and
or
sub
pop
xchg
xchg
in
sub
out
nop
ljmp
mov
pushf
lods
loopne
sarb
mov
dec
test
lock
push
idivb
daa
and
push
pop
orb
push
scas
test
and
test
enter
ljmp
xor
loop
adc
dec
push
push
ret
rcll
dec
dec
mov
scas
mov
in
cwtl
outsb
sbb
int
pop
xor
mov
leave
cmpsb
pop
aas
nop
dec
lret
add
sub
iret
inc
cpuid
xchg
aam
or
sub
inc
push
cmp
jbe
in
or
sub
cltd
inc
mov
cmp
xchg
cmp
adc
or
adc
hlt
gs
mov
mov
mov
mov
rcr
ret
adc
jg
dec
pushf
dec
xor
std
in
decl
test
ret
sahf
mov
lcall
repz
cmp
inc
inc
loop
stos
mov
adc
add
std
pop
mov
and
int
mov
fs
cltd
and
nop
scas
movsl
and
mov
dec
hlt
mov
dec
and
sarl
mov
lds
xor
mov
addr16
inc
iret
scas
clc
jne
sub
mov
inc
dec
add
ljmp
lret
lahf
sub
push
pop
shlb
sbb
into
lret
pushl
fimull
xor
mov
cmc
jg
test
inc
xor
push
inc
inc
cs
xchg
faddp
mov
cmpsb
push
in
dec
xor
xchg
imul
mov
push
fldcw
outsl
jnp
mov
or
mov
nop
fdivl
fidivl
loop
testb
add
rclb
pop
mov
and
out
inc
push
adc
mov
push
lods
and
scas
xchg
cmp
add
add
aas
push
cmpsb
pop
sbb
lods
jecxz
jbe
out
sti
mov
fidivrs
dec
ret
jle
fnstenv
bound
stc
test
and
push
mov
sbb
push
push
sub
fisttps
gs
inc
pop
icebp
push
jl
mov
mov
sbb
sbb
ja
movsl
int3
xlat
jmp
cmp
or
leave
dec
jmp
insl
mov
gs
mov
enter
insb
movsl
fnstsw
lods
and
adc
adcl
data16
mov
jnp
js
inc
adc
pushf
fs
fisubl
xchg
jno
pop
inc
js
sahf
xor
cli
lods
mov
push
daa
out
sbbb
jl
mov
or
cs
cmp
push
jo
pop
xor
xchg
insb
dec
jbe
mov
push
in
mov
int
and
jae
les
mov
push
adc
or
push
dec
imul
in
add
roll
add
clc
mov
incb
and
mov
jae
add
into
ja
pushl
psllq
es
sub
xor
repnz
cmpsb
xchg
sbb
mov
faddl
nop
push
mov
mov
loope
jge
mov
in
add
sbb
orb
fimull
sbb
ret
imul
inc
pop
or
int
daa
add
or
adc
sub
adc
aaa
das
push
add
lret
shl
es
jg
push
xor
std
xor
adc
fisubrs
pop
icebp
add
cmpsb
js
and
dec
arpl
subl
mov
addr16
pop
mov
lret
sbb
mov
imul
repz
cmp
inc
cmc
call
shrl
cltd
imul
xorb
sahf
into
mov
sbb
test
rcrb
out
aaa
loop
incl
arpl
outsb
inc
mull
fwait
lods
pop
cmp
push
mov
sbb
orb
add
adc
push
jg
mov
nop
mov
fsubl
adc
imul
mov
mov
outsb
xorl
movsb
adc
ds
and
add
cmp
les
insl
clc
or
outsl
push
push
pop
fsubrs
mov
notb
dec
call
mov
mov
jns
scas
jns
mov
inc
adc
jno
mov
cwtl
out
cli
xchg
int
or
repz
cmpsb
push
ja
mov
fistl
sub
cmp
int
sahf
outsb
add
leave
rolb
divb
inc
faddl
and
xlat
sub
dec
mov
addb
inc
or
sub
sbb
leave
dec
jge
pop
scas
dec
mov
roll
int3
mov
decl
loope
or
popf
out
or
jo
inc
loopne
aaa
xchg
js
adc
mov
lcall
pushl
xor
in
jg
mov
sbb
xor
cmp
or
cmp
ret
frstor
or
jae
ja
xchg
repnz
pop
fbld
mov
xchg
mov
mov
push
js
dec
mov
sbb
jns
int3
dec
pop
mov
mov
pop
ja
lea
ret
dec
mov
cltd
popa
loopne
imul
int3
testl
mov
test
and
push
xor
imul
imul
mov
fistl
push
cs
movsl
cmp
fbstp
clc
ret
xor
jno
loopne
imul
addl
cmp
bound
lods
flds
fistpll
push
cmpb
std
test
mov
mov
mov
in
out
and
mov
sbb
add
in
stc
aas
fidivl
or
jns
xchg
jnp
pushl
fadds
sbb
fsubrl
adc
fistps
pop
mov
push
in
pop
or
xor
gs
arpl
mov
mov
push
scas
inc
test
push
pop
and
push
jnp
inc
stc
addr16
lock
nop
pop
insl
adc
lods
mov
sbb
outsl
pop
mov
jge
cmp
xor
dec
sarb
push
clc
inc
push
inc
aam
cld
inc
inc
loopne
fiaddl
popf
or
jmp
pop
mov
lea
ds
add
aad
xor
and
sbb
es
movsb
cmp
inc
notl
repz
mov
push
xchg
xor
mov
jg
shll
push
ficoml
out
jmp
and
aam
stc
and
test
jne
iret
loop
and
pop
lret
test
enter
js
aad
insl
mov
shlb
call
in
mov
scas
hlt
ficompl
clc
or
jl
enter
push
loop
outsb
clc
inc
imul
mov
movsb
pop
dec
jno
inc
jmp
out
mov
and
bound
cmpsl
mov
rorb
mov
xchg
mov
jne
dec
jp
ret
aas
movsb
adc
imul
dec
push
pushf
lea
aas
cli
push
mov
outsl
sti
or
or
jnp
sbb
divb
hlt
mov
imul
mov
dec
push
daa
pusha
out
sub
ret
jle
test
lock
loopne
push
xor
or
aam
xchg
scas
fucomp
xchg
enter
ja
rorb
popf
rorb
ja
pop
data16
shl
lahf
xor
mov
sbb
xchg
sbb
out
gs
insl
adc
movsb
out
xor
rclb
xor
fwait
and
in
inc
xlat
cmc
sbb
mov
dec
dec
lea
out
jns
sbb
mov
js
fcoml
nop
das
lcall
dec
add
mov
inc
xchg
gs
nop
xor
mov
scas
mov
sub
aas
or
xor
mov
add
fwait
ss
and
mov
push
or
sbb
or
and
push
test
mov
decb
fiaddl
scas
jge
movsb
cmp
movsl
mov
add
les
adc
add
out
sub
pushf
into
call
out
negl
add
icebp
mov
jmp
push
int
sarb
popa
mov
sarb
push
xor
xor
cmp
adc
inc
in
jae
pop
add
or
lds
iret
push
pop
jmp
and
and
pop
cld
cmc
pop
insl
mov
repnz
mov
pop
mov
je
subl
enter
stos
icebp
test
test
pop
in
lods
inc
popa
pop
js
push
mov
jecxz
add
sbb
xchg
outsl
xor
arpl
add
je
sub
mov
sub
mov
stos
into
aas
push
arpl
gs
movsb
mov
cmp
sbb
adc
cmp
mov
push
stos
cmpsb
xchg
test
fcom
push
stc
or
es
mov
inc
lock
cltd
push
lret
xor
cmpsb
rorl
incl
out
sbb
jbe
pop
lea
fsts
call
pop
pop
bound
and
xchg
movsb
movsl
mov
test
and
jbe
lods
mov
or
push
dec
enter
sub
divl
jmp
int
mov
jmp
stc
adc
icebp
jae
xlat
aas
movsl
mov
fdivl
test
or
pop
lahf
push
add
push
xchg
test
cmpsl
shlb
push
add
xor
popf
mov
mov
dec
loopne
pushf
inc
jmp
int
jmp
xchg
mulb
ja
test
pop
ja
push
sub
mov
shlb
inc
jle
je
js
icebp
rclb
jns
dec
shrl
or
sub
lds
sbb
aam
rolb
cmp
xor
inc
outsb
adc
cmpsb
sbb
roll
bound
sub
fsubs
dec
and
sub
mov
mov
pop
inc
pop
jmp
or
xor
mov
xor
adc
imul
mov
inc
or
mov
push
insl
repz
movsb
popw
xchg
sub
pop
out
call
cmp
outsl
add
pop
sarb
lret
push
sub
bound
mov
mov
ret
lcall
or
std
cmp
test
xchg
cmp
push
ja
cmp
fstpl
daa
mov
mov
add
xchg
andl
pop
pushf
mov
xor
mov
cmp
setns
les
sub
popa
aaa
lea
lock
loopne
and
xor
arpl
aas
aad
imul
es
mov
ljmp
mov
gs
in
mov
popf
enter
push
imul
pop
popf
aaa
sub
inc
inc
jo
leave
jecxz
push
push
pop
fcoms
sbb
or
and
xor
pop
cmpsb
mov
mov
call
in
lcall
jmp
bound
aad
pusha
add
xor
xchg
fnsave
repnz
out
lds
or
jbe
inc
daa
xchg
cli
fnsave
mov
mov
jne
xor
and
and
enter
idivb
inc
rcl
and
sbb
jl
test
pushf
ret
fists
scas
adc
and
dec
inc
mov
add
cmp
mov
xchg
and
movb
jl
lds
dec
hlt
lahf
mov
add
pop
jne
aas
and
mov
fs
lret
cmp
push
clc
mov
sarb
cwtl
jb
xchg
or
sub
xor
jle
xchg
lods
pop
lods
xchg
jnp
xchg
ljmp
fadds
int3
push
fdivs
iret
cli
jp
inc
aaa
es
push
fmulp
xchg
nop
mov
addr16
dec
pop
jp
out
adc
and
dec
xchg
mov
pusha
inc
mov
mov
outsb
xor
or
dec
test
push
dec
dec
and
addr16
jmp
xor
stc
fisubrs
pop
xchg
pop
add
dec
lock
test
shrl
jbe
pop
cmp
ja
loop
test
adc
js
int3
mov
or
jle
andnps
jmp
movsb
jbe
xor
jp
aas
add
ja
fcmovne
repnz
xchg
add
das
fwait
cmpsl
stos
ss
xchg
inc
rcrb
mov
jns
push
and
xchg
jbe
xor
and
adc
movsl
ret
inc
lret
or
f2xm1
leave
aad
loopne
jg
sbb
addr16
mov
jp
xchg
jl
in
or
mov
lret
inc
pop
lret
inc
inc
jmp
je
out
dec
lret
fsts
test
enter
add
jnp
mov
outsb
mov
es
fisubrl
or
xchg
insb
test
fimull
cmp
fcmove
adc
jmp
mov
pop
inc
out
pop
les
adc
stos
neg
pushf
pop
sbbb
push
rcr
jbe
shlb
sbb
test
mov
mov
stos
cmp
adc
dec
fmul
icebp
jbe
dec
xor
icebp
cmp
cmpsl
dec
les
enter
push
push
inc
jnp
inc
dec
iret
movsl
inc
fmuls
jnp
imul
cmc
push
aad
call
dec
cmpsl
sub
inc
dec
rcl
fdivrp
mov
mov
mov
mov
ljmp
scas
pop
test
adc
mov
mov
and
mov
sti
cmpsl
push
addr16
xchg
movsl
cmp
or
aaa
xor
inc
xlat
hlt
cmp
inc
in
sub
sbb
jmp
mov
loop
pop
push
sti
adc
inc
cmpsl
cmp
xor
xor
mov
add
scas
fucom
fcoml
aad
cmp
sub
outsb
insl
push
lds
shrl
nop
imul
aad
sbb
pop
sbb
bound
outsl
out
lods
aas
nop
jp
ret
mov
mov
aaa
xlat
and
repnz
shlb
dec
imul
mov
out
int
mov
mov
mov
mov
mov
flds
dec
xchg
sarb
imul
cmp
pop
push
sbb
xor
dec
xor
cmp
leave
stc
or
mov
inc
lcall
inc
gs
movsl
jns
or
fists
sbbl
out
pop
xor
data16
ss
adcl
and
mov
or
repnz
or
xor
mov
jcxz
test
in
or
mov
fwait
jle
shll
shl
cmpsl
iret
jne
sub
or
pop
loope
or
jb
add
jecxz
xchg
mov
loopne
punpckhbw
es
adc
mov
ret
jnp
pop
outsb
rcll
jnp
iret
aam
rcr
testb
cmp
in
mov
jmp
mov
pusha
in
rcll
cmpsb
xchg
xor
push
stos
test
in
push
ss
incl
pop
xchg
fsubrl
ror
scas
inc
pusha
sbb
andb
pop
lea
imul
xchg
cwtl
test
xchg
das
push
jge
fidivs
jne
out
mov
insb
jl
jg
and
movsl
mov
lds
jg
shlb
sbb
push
dec
add
insl
out
lea
and
and
test
sub
fcoml
adc
mov
jp
jl
xchg
mov
mov
and
or
cmp
push
in
push
mov
je
dec
scas
fs
jp
lahf
sub
sar
jg
sbb
ss
xchg
leave
xchg
push
adc
fsubrl
icebp
je
mov
dec
dec
daa
inc
mov
xchg
xchg
cmp
add
xor
addr16
aaa
adc
imul
mov
decl
repz
fs
and
icebp
adc
sub
cli
popf
sub
enter
fs
adc
jns
clc
xchg
sub
xchg
call
push
inc
xchg
inc
mov
mov
icebp
mov
cmp
push
cltd
pcmpeqb
and
pusha
xor
cltd
gs
jmp
int3
mov
jo
in
cmp
push
pop
jne
jle
pop
sub
int
lods
add
xor
js
push
in
jle
add
lret
insl
into
gs
scas
aam
mov
stos
sbb
leave
cmp
or
or
xchg
dec
dec
loope
xchg
in
out
xchg
cmpsb
cmpsb
jne
xchg
add
fadd
xchg
pop
hlt
enter
imul
cpuid
out
pushf
lcall
in
in
rclb
ja
pop
mov
repnz
and
pop
push
inc
outsl
cmpl
iret
jno
pushf
std
pop
jmp
daa
adc
mov
inc
lods
cmpsl
stc
enter
push
std
pmaddwd
outsb
imul
jbe
inc
cmpsl
mov
test
jns
mov
mov
aad
cld
aaa
iret
stc
xlat
dec
mov
or
fisubl
orl
xor
sbb
data16
shrb
js
lret
mov
ja
sub
cmc
loopne
mov
cmp
jl
icebp
push
imul
adc
imul
inc
push
or
jl
je
nop
xchg
xchg
mov
ror
inc
pop
mov
lret
mov
push
and
and
cmp
adc
xorl
adc
or
fpatan
adc
pop
add
lods
or
dec
outsb
sub
sti
rcrb
cmp
or
in
mov
movsb
mov
sarb
lods
xchg
mov
push
and
push
cmp
mulb
mov
inc
loopne
pusha
int3
pop
nop
push
frstor
addr16
mov
push
or
mov
pop
insb
and
cmp
pop
mov
xor
and
loope
push
cmp
mov
lock
cld
cmpsb
push
inc
movsb
xor
subl
mov
test
jmp
not
sahf
sub
shrl
cmp
out
mov
pop
cmpsb
std
lret
lock
push
push
xor
mov
push
bound
std
push
push
push
outsb
movsb
mov
fcoml
scas
sub
jb
pop
cmp
xor
jo
jecxz
leave
cltd
pop
mov
jl
or
pop
pop
shlb
fucomip
loope
or
pusha
cmp
inc
rol
call
add
jge
and
cmp
add
sub
sahf
rcrb
iret
pop
aas
pop
insl
inc
or
enter
ds
pop
subl
shlb
jnp
out
pushf
or
sarl
lods
push
sbbb
mov
adc
arpl
push
xchg
mov
fildll
cmpsl
mov
dec
pop
and
cmp
push
daa
xchg
loopne
shr
das
in
insl
inc
sbb
sti
inc
sarl
xor
insb
cltd
cmp
mov
pop
xchg
or
in
mov
and
stos
mov
nopl
mov
shll
or
les
loope
jl
dec
mov
stc
inc
fidivrs
push
popa
fmull
adc
xchg
nop
shl
adc
push
cmp
iret
in
aad
lock
sahf
mov
mov
sti
push
sub
stc
and
push
cmp
pop
aas
fldcw
pop
lds
adc
push
pop
push
ljmp
insl
xor
dec
loop
jp
cli
mov
mov
jo
mov
cmpsb
and
frstor
insl
loopne
jle
cmpsb
icebp
ljmp
xor
outsb
enter
das
sub
sbb
movsb
adc
movsl
push
sti
test
push
push
mov
or
mov
push
addr16
xor
jecxz
test
add
cmp
dec
sub
enter
lea
nop
cmc
shrl
mov
jb
shlb
jg
xchg
and
and
ss
rolb
out
jge
jb
lcall
adcw
or
jno
notb
out
push
adc
stos
jbe
jne
out
lret
ret
lods
fninit
pop
cmp
int3
fdivs
repnz
inc
stos
and
mov
sbb
ljmp
imull
push
ret
cmp
xchg
sub
lea
pusha
sbb
sbb
cmp
call
inc
aam
insl
std
push
xchg
stos
subb
outsl
mov
popa
negb
mov
jge
push
fsubrs
repz
cmp
add
rol
stos
hlt
push
sub
outsb
mov
js
push
lea
arpl
lret
int
outsl
mov
das
mov
and
jl
sub
pop
pop
inc
sub
iret
flds
clc
aas
dec
push
inc
sbb
mov
ret
push
in
arpl
nop
jns
cmc
xchg
iret
int
out
movsb
sub
adc
push
out
loop
aaa
push
push
xchg
fstps
test
fs
push
add
jecxz
test
into
addl
ret
or
sbb
ret
roll
lret
xorb
stos
xchg
mov
int
and
push
in
pop
push
add
jge
mov
cmp
mov
inc
push
fmull
xorb
pop
mov
sarl
inc
xor
data16
adc
dec
lcall
adc
inc
shrl
sbb
loopne
js
and
pop
popf
jp
in
cld
neg
and
cmpl
push
not
popl
inc
and
mov
fwait
sbb
lahf
in
fcmovnb
sub
adc
sub
ret
mov
aaa
jo
lock
dec
adc
les
lods
imul
jbe
je
push
mov
subb
lock
push
lret
je
fdivl
mov
loope
arpl
jmp
jmp
xor
sbbl
pop
arpl
out
dec
rolb
stos
enter
add
push
and
add
loopnew
std
mov
into
loop
xlat
inc
pop
fwait
nop
sub
mov
mov
loope
push
ret
and
inc
dec
stos
xchg
cmpsl
ret
pushf
add
xor
mov
inc
int
rcl
cmc
aad
cwtl
inc
out
lret
in
or
jp
int3
cmc
mov
jae
cmp
popa
bound
push
lds
push
inc
sub
in
rolb
enter
movsl
sbb
pop
and
sti
sub
idivb
and
dec
fwait
pop
push
test
testl
dec
lcall
jl
jo
cltd
pop
add
inc
popa
clc
pop
fwait
sbb
int3
jle
inc
popa
in
sub
insl
xor
jecxz
cmp
mov
ffree
xlat
jmp
mov
mulb
scas
push
xor
jno
mov
outsb
out
test
mov
fs
ret
mov
lods
cmp
ret
cld
xchg
xchg
mov
mov
cmc
sub
pop
push
pop
stc
sbb
pop
xor
push
test
adc
dec
dec
pusha
dec
sbb
mov
xor
add
fbld
jno
mov
mov
or
rcr
and
xlat
icebp
adc
cmp
xchg
mov
xor
fsubs
cmpsb
push
dec
mov
rol
fdivrs
mov
enter
jle
sahf
pop
inc
fstpt
loopne
xor
jno
push
jecxz
push
jbe
stos
out
sub
ret
shll
mov
lret
add
out
inc
xchg
imul
out
insl
test
pop
out
cmp
in
xor
mov
std
leave
stos
int3
inc
fmull
sub
cmp
lret
xor
push
stos
jbe
inc
daa
push
jno
gs
leave
mov
movsl
xchg
lret
adc
fwait
push
je
push
pusha
jl
xchg
or
iret
sbb
mov
jmp
or
lahf
inc
and
sbb
sbb
out
cmp
outsl
jnp
push
lods
dec
or
aad
cli
adc
ja
pop
scas
lahf
cmp
loop
ss
lock
js
adc
hlt
cwtl
and
scas
jb
lahf
xchg
cmp
mov
ja
push
arpl
cmp
add
push
cmp
adc
jl
and
cmp
test
ja
js
aad
cmpsb
mov
roll
mov
shrl
push
cmp
addr16
push
bound
xor
stc
and
jle
stc
mov
fildl
push
sbb
int3
pop
jle
ds
jns
xchg
iret
sub
rcrl
push
out
std
jecxz
xor
popa
call
fbstp
std
inc
ss
andb
dec
inc
insl
add
out
mov
fisttpl
push
lcall
cmp
jge
cmpsb
lock
sub
sub
insb
testl
xor
pop
imul
sarl
mov
lahf
pop
push
push
out
xchg
push
xchg
movsl
rcr
mov
les
cmc
shl
jg
xchg
or
mov
pop
repz
cmc
lods
sub
pop
sti
cmp
xchg
push
shl
jno
shll
aam
pop
or
mov
mov
ja
xor
cmp
pop
cli
xchg
mov
or
add
xor
cmp
lods
mov
rolb
xchg
adc
sbb
lea
repz
js
push
inc
mov
data16
jecxz
inc
into
mov
fldl
notl
inc
jl
lret
lods
xlat
adcb
push
dec
xor
fsubrl
add
aas
addr16
jo
jno
xchg
dec
cltd
pop
jo
cltd
pusha
pcmpeqb
sbb
mov
fstl
dec
xchg
and
sbb
mov
aad
faddp
or
inc
aam
cmp
mov
mov
and
pushf
ss
fistpll
pop
or
mov
cli
xchg
sbb
sub
out
xchg
jl
push
adc
xor
testl
jle
imul
addr16
out
sub
inc
xlat
incl
inc
xor
jmp
shl
sbb
cmp
jmp
jne
call
lods
enter
xchg
jmp
mov
and
sub
pop
movsb
mov
push
js
shrl
scas
cs
mov
pop
sarb
adc
jb
movsl
ret
stos
ja
cmp
in
add
lcall
fdivs
aad
cmp
scas
jno
sahf
fdivs
or
mov
sub
mov
outsb
xchg
dec
sbb
cmp
inc
jb
pop
cmp
lds
cmp
push
sub
test
stos
adc
je
testl
cwtl
rcrb
inc
fstps
insb
push
jle
pop
dec
dec
cmpsl
out
in
loopne
push
xor
push
jmp
pop
jmp
push
pop
sbb
dec
sarl
lret
jb
ret
inc
fdiv
es
xchg
test
and
mov
roll
or
pop
repz
pop
fstp
sbb
cmp
pop
adc
lea
or
nop
cmc
mov
out
mov
std
scas
push
fwait
xchg
cmp
sub
out
shrl
inc
ja
fistps
imul
and
mov
dec
fs
out
int3
xchg
aaa
je
inc
cmpsl
add
jle
stos
sub
outsl
sbb
mov
cltd
xor
inc
jae
dec
mov
jb
cld
inc
js
jns
lods
stos
push
insb
xchg
xor
sbb
and
es
gs
mov
or
enter
rcl
jns
jl
pop
mov
cmpsl
call
mov
xchg
add
add
addr16
mov
shrl
lods
pop
xor
int
xchg
or
sbb
jno
sbb
sbb
pop
bswap
cmp
mov
pop
xchg
add
imul
lock
sub
xchg
nop
loop
add
mov
mov
data16
arpl
test
sub
mov
pop
jmp
scas
lret
testl
xor
sti
fdivs
sahf
jg
fwait
enter
mov
push
idivl
pminub
int3
mov
mov
mov
xchg
pop
fucomi
popa
popf
cmpb
das
pop
icebp
mov
popf
out
cmc
mov
lahf
sbb
les
imul
cmp
add
jnp
fidivrl
adc
cmp
mov
call
enter
mov
arpl
subl
scas
inc
scas
stc
add
adc
xchg
cmp
lret
aas
test
xor
xchg
pop
in
mov
sbbl
pusha
fdivs
jl
add
mov
daa
cs
data16
stc
sub
sahf
xchg
pop
xchg
push
hlt
pop
cmpsl
xchg
mov
sar
fsubl
outsb
add
sarb
fs
test
add
dec
add
insb
testb
aad
iret
in
into
stc
rcl
mov
imul
adc
pop
xor
std
push
shll
lcall
jge
pop
cmp
mov
cmp
push
stos
arpl
push
lahf
or
dec
adc
sub
pusha
shrb
pushf
xor
dec
jge
out
inc
mov
pusha
push
sti
popf
push
rol
xchg
imul
mov
scas
mov
enter
shrb
push
loopne
or
xor
hlt
xchg
sbb
mov
loope
fdivrl
fld
sbb
mov
pop
xchg
lahf
push
inc
pop
add
dec
add
inc
shl
imul
push
test
add
outsl
es
stos
mov
out
fnstsw
push
cmp
jbe
jecxz
and
int3
loop
mov
pop
xor
mov
dec
dec
dec
jo
adc
enter
xor
clc
pushf
mov
cmpsb
sub
in
mov
push
jnp
stos
pop
mov
add
test
mov
shrb
je
ret
enter
shll
jge
cmc
adc
es
jl
fmulp
mov
cmp
mov
mov
push
adc
inc
xchg
mov
push
sti
aas
mov
cmpl
das
xchg
cmp
push
scas
jb
popa
aaa
stos
mov
xchg
loope
cmp
add
fsubs
dec
inc
mov
and
icebp
mov
mov
inc
test
push
mov
inc
in
loope
arpl
lret
pop
and
jp
sbb
lahf
push
jge
fmull
sbb
xor
adc
pop
rolb
push
push
push
mov
test
pop
add
mov
test
les
in
enter
cmpsb
inc
out
adc
cmp
repz
lock
dec
push
inc
testb
mov
adc
in
notl
mov
jge
mov
imul
loopne
dec
bound
mov
popf
int
jmp
popa
push
push
lock
or
iret
inc
inc
sub
fnstenv
mov
test
test
xor
out
mov
mov
rcll
xor
dec
lods
cwtl
and
pop
cmp
mov
lret
pop
test
insl
mov
fildll
ss
mov
push
in
ljmp
fimuls
and
or
daa
push
xchg
add
dec
test
inc
xchg
imul
dec
aam
out
mov
mov
jno
push
mov
mov
int
clc
pmaddwd
mov
andl
fstl
mov
subl
push
mov
xor
out
mov
fidivs
lods
sub
aam
and
imul
fwait
test
mov
pop
insb
sub
sub
or
test
mov
fists
push
mov
xor
aas
mov
xchg
and
popa
ss
cmpl
jnp
push
cmp
add
es
rcr
jo
ret
jle
pusha
and
sbb
mov
push
sub
fidivs
mov
mov
adc
pop
add
xor
mov
pop
insl
jle
xchg
fcomps
cltd
pop
adc
out
popf
dec
pop
out
test
jb
lret
lret
sbb
out
jmp
mov
loope
jmp
mov
je
repnz
lods
add
sbb
sbb
add
lock
cmp
add
mov
scas
popa
into
sub
or
into
orl
fcomps
push
bound
test
and
sbb
jae
daa
xchg
mov
xchg
fwait
aad
and
sub
or
pop
cmp
subb
int3
and
movsb
jmp
pop
in
dec
iret
pusha
add
mov
fimull
js
leave
es
cli
mov
sbb
mov
test
in
aaa
mov
mov
cmpsl
xor
adc
mov
jmp
loope
dec
inc
jno
ja
xchg
inc
mov
sti
xchg
loop
or
mov
ret
add
std
call
fsubl
adc
xor
jecxz
inc
push
mov
or
jb
xor
out
push
jno
mov
orb
mov
in
lret
mov
fstl
add
and
add
ja
sti
and
adc
imul
outsl
mov
jl
mov
mov
repz
shll
mov
pop
into
mov
sbb
imul
in
in
lds
inc
pop
xor
test
push
in
push
call
mov
jo
into
insb
and
rcl
fbstp
xchg
lcall
imul
leave
inc
cmp
jne
sahf
or
push
mov
cmp
xor
mov
cmp
aaa
cmp
sub
jne
stos
cmpsb
and
dec
outsl
add
push
outsl
daa
mov
adc
mov
cmp
pop
imul
jno
ss
pop
repz
pop
jns
xor
in
ja
gs
aam
std
mov
daa
mov
stos
cs
idiv
iret
repz
hlt
and
shll
std
mov
mov
push
adc
sbb
loopne
mov
sub
sbb
fsubp
ret
mov
push
mov
jns
sub
push
icebp
jbe
loop
and
inc
ficoml
lahf
roll
out
les
sahf
or
and
jbe
and
adcl
lods
jae
test
add
addl
mov
pop
mov
je
test
xchg
adc
out
and
mov
sub
rcl
mov
call
jbe
push
icebp
out
mov
fucomip
enter
scas
inc
stc
push
fimull
jl
sbb
aaa
cmp
dec
loopne
xor
sub
addr16
push
lret
sbb
pop
or
rcll
fnstcw
mov
mov
incb
and
jno
inc
pop
xor
jo
jne
mov
jbe
das
int
clc
bound
ds
adc
mov
mov
int
cmp
scas
ljmp
aad
mov
xchg
xchg
sbb
push
mov
fyl2x
jno
gs
xor
inc
add
mov
pop
push
mov
add
dec
mov
mov
sub
jg
xor
outsl
std
jge
scas
int
scas
ja
inc
cmpsl
mov
sub
xchg
adc
lret
pop
lahf
decl
push
loope
movsb
fwait
sub
jmp
adc
daa
xchg
sub
popa
xor
iret
mov
dec
push
adc
lcall
cmpsb
imul
sbb
popf
mov
mov
sub
and
xor
push
js
mov
mov
xlat
xchg
mov
or
scas
mov
jp
jl
stos
outsb
mov
dec
and
mov
jb
loope
inc
call
cmp
pop
xchg
xchg
xchg
sti
cmp
mov
sahf
xor
pushf
jno
int
popa
nop
cld
cmp
std
out
cld
fisttpl
aas
push
lea
insl
or
jg
mov
aam
sub
dec
jge
adc
cli
into
and
pop
fisttpll
loopne
mov
inc
lods
data16
das
roll
mov
mov
inc
sub
mov
push
fadds
fcmovnb
xor
inc
fimuls
add
xor
pop
lcall
and
sbb
jecxz
add
sub
dec
es
popa
lcall
push
outsl
dec
mov
cmc
add
jno
adc
jl
push
jge
lret
mov
mov
mov
ds
and
adc
fwait
pusha
bound
add
add
mov
mov
sub
push
mov
xor
aaa
and
movsb
xor
andb
or
mov
mov
add
pop
pop
lods
mov
pop
adc
lds
rorl
and
mov
jnp
cmc
out
lock
mov
mov
sub
mov
add
add
gs
dec
cld
dec
shll
mov
cmpsb
rcrb
and
rcll
inc
inc
imul
arpl
jmp
aaa
inc
push
test
pop
in
dec
xchg
sub
mov
lock
movsl
mov
stos
jnp
or
jle
outsb
add
sub
and
sub
dec
pop
cmp
push
mov
gs
loope
mov
test
aam
mov
mov
decb
jl
ficoml
imul
add
xorb
inc
xchg
add
mov
sbb
jne
cmp
inc
jmp
mov
mov
sbb
pop
rorl
cmc
dec
xchg
in
and
mov
test
in
dec
push
jno
in
pop
mov
add
std
cmp
fmuls
mov
push
lods
adc
popa
cmpsl
jo
out
inc
lock
sbbb
test
mov
mov
fmull
lods
insb
add
js
shr
jbe
or
sub
imul
cmp
sub
push
pop
dec
xor
sarb
cmc
cmc
je
jmp
testb
jmp
adc
cmp
aaa
add
negl
and
mov
xchg
rorl
mov
movsb
sub
pop
sarb
cmp
out
cmpsb
bound
jl
in
pop
and
pushl
in
mov
loopne
popf
mov
sbbl
jl
jle
or
sbb
pop
stos
or
fstpt
jecxz
jno
mov
mov
js
lret
sbb
jno
and
push
adc
fs
push
jae
gs
mov
add
sbb
imul
mov
out
ljmp
jo
popa
pop
daa
sbb
fldt
add
inc
ss
in
xor
and
mov
push
jle
or
es
mov
inc
mov
leave
fld1
scas
ljmp
fisubrl
fwait
das
les
stos
xor
jae
fsub
sub
imul
rcl
repnz
into
ret
imul
mov
into
mov
inc
in
stos
push
or
stc
xchg
mov
cli
xchg
fcomps
mov
and
pop
mov
dec
data16
xchg
cmp
mov
mov
dec
mov
enter
ds
pusha
jae
cmp
pop
rorw
lods
aaa
jp
mov
xchg
lods
or
hlt
push
addr16
push
insl
inc
test
xor
pop
pushf
fwait
dec
sub
movsl
fists
insl
jecxz
fbstp
add
xor
out
nop
test
and
xchg
add
sbb
icebp
cmc
scas
in
pop
int
mov
les
std
mov
sbb
cmp
aaa
hlt
adc
jb
rcrl
or
inc
scas
insb
test
mov
mov
and
jecxz
jmp
push
adc
and
sarl
test
xchg
aad
adc
lahf
push
adc
fldt
aad
jb
adc
test
pop
aad
ds
nop
lods
cmc
inc
rcl
jns
enter
jp
pusha
in
into
sbb
jb
mov
cmp
add
mov
jno
cmp
xchg
daa
sub
sar
jne
aam
fiaddl
xchg
adc
lods
icebp
or
jae
dec
sub
push
cltd
add
test
cmp
mov
outsb
insb
xor
mov
stos
aas
inc
or
cmp
dec
dec
push
pop
int3
filds
movsb
rorl
cs
mov
iret
dec
adc
dec
sbb
sub
in
test
fisubl
es
inc
fst
scas
lods
jmp
cmp
scas
jb
or
inc
jb
vdivps
arpl
sub
mov
das
loopne
loope
stos
shlb
clc
sub
mov
arpl
cltd
cmpsl
jecxz
clc
or
shrl
and
sub
les
lret
testl
xchg
jl
jae
or
jge
jecxz
adc
adc
xor
bound
xorb
pop
scas
xchg
stos
jbe
adc
lcall
icebp
dec
adc
pop
xchg
in
inc
jp
nop
lods
lahf
mov
push
jae
ljmp
data16
mov
jbe
inc
and
xchg
inc
orl
leave
pusha
jno
sub
jg
rcrb
add
dec
mov
mov
fcomps
cltd
fs
pop
xchg
mov
and
popa
inc
mov
pop
outsl
sbb
mov
push
pop
mov
daa
sbb
jle
mov
and
mov
imul
xchg
ss
mov
out
imul
xor
idiv
inc
and
jmp
loop
xor
popf
mov
adc
stos
inc
mov
add
add
dec
mov
add
add
aam
divl
nop
xchg
das
jo
pop
adc
mov
scas
stos
ja,pt
mov
mov
push
pop
rolb
test
add
divl
add
lods
jge
add
or
pop
xchg
or
icebp
pop
dec
aas
iret
aad
ja
outsb
adcl
adc
scas
orb
pusha
mov
adc
ss
pushw
xchg
test
mov
cmp
sub
mov
pushf
adc
adc
pop
push
addl
push
dec
insl
or
test
xor
pop
push
xor
lods
cli
xchg
mov
call
pop
pop
mull
mov
in
inc
fadds
jle
dec
sarb
ret
les
mov
or
loope
int3
popf
inc
gs
xor
xor
fwait
or
stos
out
and
nop
pop
mov
push
imul
cmp
adc
roll
fstpl
call
xchg
lock
pushf
and
mov
push
in
test
inc
adc
lock
leave
lcall
push
mov
mov
jmp
push
mov
sbbl
hlt
popa
addr16
pop
sahf
cmp
ds
mov
mov
jne
test
cmp
mov
mov
ja
jg
movsl
cmp
stc
dec
cwtl
mov
insl
ja
mov
mov
jg
mov
xlat
mov
pusha
ljmp
cmpsb
mov
pop
push
pop
fistl
or
insb
mov
sti
jecxz
outsl
push
movsb
notb
pop
pop
out
xchg
clc
mov
mov
push
sbb
push
mov
repnz
mov
push
xor
and
lahf
cli
aaa
ret
sbb
xor
jge
push
dec
cmpsb
jns
xor
shll
cmc
dec
cld
dec
ja
cmp
insl
inc
shlb
notl
scas
jno
push
out
jns
xchg
adc
into
inc
or
xchg
hlt
and
xor
fxch
push
in
sbb
adc
gs
fisubrl
pop
pop
jge
push
pop
repnz
inc
fnstcw
xchg
jns
mov
adc
outsb
cmc
test
jae
push
data16
mov
jb
inc
inc
or
cs
scas
aam
insb
sbb
push
inc
hlt
mov
adc
loop
xor
mov
and
cmp
cmpsb
sbb
and
xor
pusha
inc
mov
jp
aam
leave
adc
xchg
fdivl
roll
mov
sub
neg
lods
jge
jbe
pop
jne
xchg
jge
inc
pop
cmp
mov
xchg
and
ss
xorb
mov
aad
xchg
pop
pusha
negb
insb
cmpsb
cmp
imul
ja
add
jle
ljmp
inc
std
int3
popf
lcall
mov
mov
adc
andb
jl
fwait
jbe
push
cwtl
loopne
dec
in
loopne
jae
aad
sub
mov
pushf
jg
pop
sahf
movsl
cs
lahf
xor
mov
and
push
or
mov
add
std
lret
mov
ficoml
leave
cmp
mull
cs
inc
aam
and
push
mov
xor
and
jns
pop
jb
jns
incb
dec
or
push
inc
adc
dec
call
fsub
xchg
out
aas
loop
repz
sbb
adc
shrb
loop
enter
scas
stos
call
push
lock
push
out
push
lahf
jnp
inc
sti
vcvttsd2si
es
and
jnp
jmp
add
loopne
outsl
out
popa
mov
ja
insl
pushf
xor
mov
lea
mov
push
mov
mov
sti
out
mov
mov
push
inc
cmp
jbe
cmp
in
inc
push
in
xchg
outsb
rcl
repz
sbb
inc
outsb
aaa
mov
sub
ja
cmpsb
stc
pop
mov
enter
cmpsb
sbb
mov
mov
clc
lret
push
mov
mov
push
mov
pop
cmc
jmp
lret
call
mov
or
push
subl
js
or
ljmp
es
mov
je
bound
adc
movsl
xorb
call
xchg
movsb
mov
jmp
jnp
outsb
test
inc
lea
and
or
jge
sbb
mov
xor
pop
pop
cld
xor
insl
mov
fsts
imul
outsl
jns
outsl
loop
adc
pop
sbbl
int
cmp
out
shl
ss
sbb
aas
test
incl
add
cs
push
add
jp
fsubrs
arpl
pop
ss
cltd
mov
push
or
pop
and
push
out
xor
iret
xor
std
and
jae
push
test
dec
cs
jmp
adc
js
sub
stos
mov
inc
pop
pop
push
add
cmpsb
mov
cmpsb
cmp
push
sub
xor
popf
push
cmc
in
je
pop
mov
rcrl
add
or
loop
mov
outsl
movsl
mov
cmp
mov
and
fdivr
sub
dec
mov
mov
call
add
mov
mov
outsb
push
pop
cmc
adcl
jnp
jl
fwait
jbe
scas
insb
inc
popa
lock
xchg
push
lcall
cwtl
mov
jae
dec
scas
not
push
and
insl
mov
aad
cmp
jmp
fdivrs
scas
imul
push
add
scas
dec
aaa
data16
inc
adc
inc
in
insb
rcrb
cs
push
push
into
ror
sub
push
imul
inc
or
cs
sbb
inc
mov
les
push
into
addl
sub
push
cwtl
adc
adc
add
ss
mov
sbbb
mov
mull
hlt
fs
popa
add
mov
fmul
leave
pop
adcl
dec
sbb
push
scas
xlat
outsl
sub
jp
movsb
ret
fxch
pop
mov
jp
mov
jo
lret
and
pop
sub
insb
jle
xchg
test
jae
fs
jno
jbe
lds
push
cli
icebp
cwtl
sbb
add
or
insb
scas
xor
cmp
dec
add
pop
shlb
add
test
jp
cld
insb
push
notl
ss
scas
out
cmp
loop
adc
jg
jnp
rolb
push
add
ljmp
jne
dec
push
fnstcw
out
test
pop
push
mov
jne
pop
mov
jae
pop
pop
inc
movsb
jl
sub
stos
insl
pop
and
fucomp
add
cs
dec
dec
pop
lods
push
lods
inc
stos
movsb
xchg
sbb
cmp
mov
pushf
dec
out
mov
loopne
dec
iret
enter
lods
mov
testl
cld
negl
sub
push
jecxz
dec
jecxz
rcrl
mov
push
mov
in
in
pop
rol
test
cmp
mov
in
cmp
xor
loopne
repnz
xor
loop
cmp
mov
pushf
xchg
leave
rorb
xchg
jmp
hlt
sub
sbb
pop
add
dec
leave
shl
js
cld
pop
fmull
test
push
pusha
pop
mov
sbb
mov
adc
add
sub
jmp
fdivl
pop
test
scas
xchg
sub
das
clc
sahf
sti
sbb
call
push
or
lret
pop
adc
stos
int
sub
xor
mov
xchg
std
push
xchg
mov
sahf
push
je
or
cmpsb
call
cltd
inc
es
add
pop
aad
jne
xchg
dec
pop
xchg
aad
and
out
cmpsl
cmp
pop
mov
pop
or
cltd
sub
out
push
pop
and
add
inc
iret
inc
mov
je
enter
sbb
add
lcall
pop
inc
std
in
test
sub
leave
add
mov
or
mov
mov
cmc
in
gs
sbb
jnp
frstor
jge
orl
cmp
repz
jns
fisubs
out
pop
xor
xchg
pop
and
movsl
in
xor
mov
mov
imul
inc
xlat
jmp
pop
insb
mov
xchg
push
shlb
ret
sub
lret
and
adc
enter
movsb
mov
rol
adc
outsl
mov
pusha
pop
jae
cmp
adc
icebp
pusha
or
mov
jnp
push
jno
repnz
add
push
pushf
dec
dec
mov
in
sti
cmpsb
nop
jns
call
cwtl
pop
repz
cld
cmpsl
jae
adc
xchg
pop
repnz
inc
mov
js
mov
push
jmp
xchg
leave
stc
sbbb
xchg
sbb
lea
mov
clc
aaa
pop
cmp
daa
data16
mov
rcll
pop
int
testl
jl
cmc
mov
sbb
sbb
push
std
push
mov
cmp
pop
inc
in
or
xor
inc
pop
sub
dec
xchg
sub
sub
pop
aad
sub
orb
or
adc
xchg
jmp
or
pop
push
arpl
ja
sub
pop
lret
mov
repz
in
aad
push
enter
mov
and
xor
std
mov
scas
fisttpll
roll
in
push
lods
cmpsl
out
js
imul
sbbb
outsb
mov
lahf
xchg
or
sbb
outsl
shrb
dec
push
lret
lds
shll
outsl
sbb
xorl
stc
and
or
add
es
push
pop
loop
and
hlt
sub
mov
pop
add
hlt
mov
pop
movsl
and
shrl
jb
push
and
sub
adc
jmp
sbb
mov
aam
jp
mov
je
shl
call
out
enter
fwait
jmp
call
adc
mov
insb
mov
push
shrb
mov
cmc
pminsw
pop
test
imull
add
inc
testb
push
popa
adcl
cmp
push
fcmovnbe
add
mov
and
stc
adc
ljmp
ficoml
cmp
movsb
imul
jnp
enter
loop
inc
out
fidivrs
sahf
ja
xlat
mov
lret
out
or
xor
dec
cli
jp
add
mov
cltd
inc
cmp
shll
inc
int
xchg
pop
ds
adc
sub
mov
xchg
mov
int
adc
ret
std
dec
out
imull
out
pop
aaa
aad
jbe
add
mov
mov
xchg
loopne
jnp
imul
pop
js
call
jmp
sbb
mov
stos
add
lret
cmc
std
rolb
inc
dec
pusha
idivl
pusha
aas
push
dec
fsubs
jne
loop
mov
montmul
cmpsb
ret
inc
fwait
dec
jge
cli
test
scas
lcall
mov
mov
dec
inc
pop
xchg
cmpsl
mov
jbe
out
xchg
aas
loopne
xchg
or
xor
fcoms
fiadds
std
pop
in
xchg
add
sub
testb
clc
xchg
mov
scas
jecxz
lcall
psllw
xchg
add
and
bound
aam
sub
mov
jp
loope
sub
jo
pop
mov
push
mov
cwtl
rorb
jmp
lret
sbb
lods
pop
test
mov
push
sbb
gs
mov
sub
pop
pop
push
inc
loope
push
xor
cld
pop
ret
pusha
into
push
sub
lea
adc
add
dec
stos
xor
std
xchg
test
jb
jne
mov
daa
into
jae
jbe
sbb
das
loope
call
add
loope
xchg
ja
ret
sti
pop
mov
adc
push
je
outsl
sub
rcr
add
std
fldcw
inc
pop
xchg
pop
aas
add
shll
fldenv
pop
xor
aad
cmp
ss
and
icebp
cmp
loop
in
xor
cmp
ret
pushf
xchg
ret
sbb
push
mov
iret
and
ljmp
daa
pop
icebp
lds
ret
loopne
mov
stos
out
jge
bnd
mov
xchg
xchg
sbb
jmp
or
cs
fmull
lahf
std
mov
push
adc
daa
push
inc
push
sahf
and
js
sub
ljmp
dec
ljmp
je
sbb
add
hlt
mov
and
pop
cmp
mov
cmp
leave
jle
xor
test
mov
pusha
cld
xchg
clc
cld
xchg
rcrl
mov
lods
int
test
imul
ds
pop
and
and
adcb
je
loope
mov
xor
loopne
push
sub
add
in
std
aaa
cmp
ss
mov
es
stc
sub
imul
insl
imul
iret
or
ret
dec
shlb
into
in
mov
and
pushf
xor
dec
jmp
sub
inc
sbb
fidivs
push
adc
mov
jne
mov
ret
daa
sbb
xchg
jo
imul
test
mov
andb
in
inc
fiaddl
jecxz
or
adc
shll
dec
jmp
push
jg
jns
inc
pop
gs
adc
popa
data16
cmp
jmp
jo
push
mov
test
dec
jecxz
xor
addb
sbb
sbb
add
xchg
cmp
sbb
sub
popa
jae
mov
lock
xor
xchg
jle
and
xchg
iret
cmp
jbe
fstpt
aad
mov
add
sbb
push
jns
cld
and
push
int3
gs
aas
cmp
push
sub
xchg
outsl
inc
das
xchg
testb
nop
mov
ds
cmpsl
insb
or
mov
sbb
movd
mov
mov
dec
push
push
jmp
mov
in
mov
or
ds
adc
fsubs
mov
cmpsl
jge
fsubrs
sbb
add
stc
stc
movsb
mov
lods
and
xor
fwait
es
fcoms
push
loope
fstps
scas
test
sub
pop
mov
lret
rcrb
ror
pusha
mov
repz
xor
inc
inc
repz
rolb
xor
pop
sbb
insl
popa
scas
aaa
je
jle
mov
pop
clc
dec
and
mov
sbbb
gs
sbbb
popa
mov
in
or
iret
repz
pusha
dec
dec
adc
aaa
shll
shll
movsb
xor
sarl
push
push
xchg
js
jle
test
add
mov
pop
adc
scas
mov
pop
or
adc
enter
fstpl
repz
addl
or
ljmp
mov
mov
popa
sub
dec
call
dec
jne
into
jno
xor
mov
clc
inc
sarb
andl
inc
fldcw
cs
mov
shrd
in
mov
ss
aaa
shrb
clc
rcrl
cmpsb
daa
insl
cmpsl
adc
push
xchg
xchg
fnstsw
gs
int3
pop
adc
call
movq
jl
push
out
testb
pop
cwtl
xchg
jne
dec
mov
jnp
rcrb
mov
adc
pushf
sub
push
add
je
push
push
jns
adc
mov
int3
mov
popf
mov
loope
or
repz
ljmp
test
xchg
lea
cmp
in
xchg
jne
lds
ret
mov
sub
sahf
fldt
adc
inc
int
imul
lret
mov
cmpsb
imul
lcall
add
js
ljmp
mov
les
pop
push
adc
loop
mov
test
insl
mov
sub
jo
push
push
outsb
adc
call
sbb
mov
addr16
ret
or
adc
ds
push
mulb
es
js
fsts
xchg
cmc
loop
mov
dec
popa
cli
xchg
adc
push
dec
jecxz
je
sbb
mov
sti
loope
add
dec
or
cmpsl
lcall
fdivrl
mov
mov
jb
pop
lock
rcrb
dec
cli
mov
inc
or
repz
dec
mov
mov
mov
sbb
adc
push
jl
cwtl
insb
or
push
mov
or
imul
dec
dec
mov
subb
cmp
stos
jg
xchg
decb
add
inc
leave
push
xchg
in
ret
in
int
push
jbe
out
add
and
mov
cmp
mov
and
insb
push
adcl
xchg
lahf
int3
ja
mov
fnstcw
cs
pop
lds
dec
mov
dec
dec
pusha
pop
insb
ds
jo
sub
fs
ror
xor
inc
push
or
push
cmp
pop
mov
fsubrs
mov
and
iret
inc
jmp
add
or
lds
rclb
dec
xlat
lcall
push
inc
pop
js
push
daa
ret
mov
in
inc
xor
iret
pop
sbb
loope
mov
in
push
xor
xchg
pusha
in
daa
scas
andl
test
adc
cmc
dec
xor
into
mov
or
decl
add
sub
test
idiv
sahf
xchg
xchg
outsb
sbb
call
jl
xchg
mov
in
mov
push
lods
mov
loope
push
push
int
jno
dec
sahf
cmpl
xor
pop
mov
jb
out
push
pushf
dec
rorl
mov
pop
lods
mov
int
mov
inc
flds
repz
ds
imul
pushf
and
enter
sbb
pop
mov
div
out
stos
ret
shrl
push
push
and
sbb
and
and
fwait
xchg
lret
mov
es
mov
mull
mov
pop
fdivl
getsec
pop
sub
fwait
or
iret
subb
xor
test
jge
xor
jle
es
popf
xor
mov
mov
jl
jl
xchg
adc
fimuls
xchg
inc
aad
push
inc
jecxz
jnp
in
cmp
mov
inc
and
push
mov
sahf
sahf
int
in
or
dec
xor
mov
in
mov
lcall
lcall
test
cld
rcr
add
cli
inc
add
xchg
add
fildll
xor
test
inc
pop
adcl
pushf
jl
sub
xor
or
fwait
lds
cmc
imul
iret
lcall
lcall
sbb
jge
xor
ss
sti
scas
adc
xor
jl
mov
mov
adc
and
xchg
mov
inc
insl
mov
xor
test
or
icebp
inc
sub
std
repz
inc
out
pop
leave
pusha
push
or
jmp
mov
xor
iret
scas
push
aad
jae
popa
and
ljmp
xchg
aaa
xor
push
je
pop
mov
rolb
mov
call
mov
fisubs
pop
jo
inc
clc
dec
sbb
adcl
sub
imul
outsb
out
dec
pop
outsl
cmc
or
xchg
add
and
mov
jg
pop
in
xlat
outsl
hlt
pop
xchg
cmp
leave
imul
ret
pop
pushf
jo
push
jb
xchg
scas
aaa
int
imul
fisubrs
xchg
mov
inc
dec
jbe
jl
pop
inc
inc
loopne
mov
je
out
cltd
adc
in
lods
lock
out
ficoms
ja
aas
or
test
mov
add
inc
mov
fnsave
sti
fwait
jle
xchg
mov
in
or
mov
lret
mov
mov
pop
scas
sbb
mov
or
cmp
jecxz
inc
sub
sub
jmp
lds
inc
sti
int
sbbl
mov
fsubp
data16
sub
pop
into
lods
jge
rcll
lock
les
inc
jle
inc
mov
xchg
dec
sub
push
jns
sbb
pop
iret
inc
aaa
push
mov
shlb
lds
mov
or
enter
scas
and
in
push
jle
inc
addl
pop
mov
inc
push
xor
xor
xor
mulb
clc
cltd
sub
fs
jmp
shll
mov
rol
push
adc
pop
es
fcomps
fwait
mov
movsb
inc
sbb
sbb
cltd
pop
inc
cmp
cmc
insb
fsubrl
jbe
dec
fisubrs
loope
dec
xchg
aad
dec
cmp
dec
sub
xchg
mov
jle
lock
sub
push
mov
xorb
das
shrl
out
dec
in
std
loop
cmp
dec
and
mov
fldenv
dec
cmp
xchg
imul
and
repnz
mov
xchg
pop
sahf
and
int
mov
xchg
cmc
inc
data16
stos
jns
xor
mov
xor
mov
ret
cmp
sbb
xor
mov
fsubrs
mov
sbb
sbbl
sysenter
jp
cld
inc
mov
icebp
or
in
les
or
fxch
inc
or
dec
mov
dec
test
imul
xchg
aam
dec
insb
sbb
mov
lods
mov
aas
inc
in
jp
clc
lds
addl
in
add
mov
addr16
int
mov
icebp
fnstcw
in
push
add
or
jb
xor
in
test
lea
fdivrl
pop
dec
stc
sbb
lret
int
or
fisttps
mov
test
cmpsb
aam
scas
lds
add
outsl
xor
add
scas
inc
sahf
loop
mov
xchg
ror
movsl
push
out
sub
push
insb
mov
das
dec
std
cltd
js
mov
mov
sub
mov
rol
shrb
aad
xchg
lods
xchg
sub
lret
push
lods
add
mov
cmpsl
ja
sbb
mov
arpl
aam
imul
loopne
xchg
xor
sub
fs
mov
je
push
loope
xor
cmp
aaa
dec
sub
insb
adc
fwait
mov
in
in
dec
testl
dec
adc
jecxz
pop
hlt
pop
ficoml
sub
popa
jp
xchg
pop
iret
xchg
shlb
ja
dec
mov
sub
out
mov
sbb
or
push
cmp
jle
mov
sarl
mov
cmc
or
into
push
jge
xchg
faddl
pop
cmp
jo
push
movsl
jl
pop
fwait
pop
andl
cmp
int
outsl
inc
jge
scas
adcb
jecxz
fisubrs
mov
imul
lods
popf
xchg
dec
jae
movsl
dec
xor
call
cmp
xchg
das
inc
xchg
push
imul
xor
mov
scas
adc
lret
xor
int3
xchg
and
inc
jbe
sub
mov
iret
scas
sti
data16
mov
inc
andl
mov
imul
mov
ret
and
push
andb
es
mov
cli
add
lea
icebp
xor
dec
arpl
push
mov
in
mov
cmp
out
pop
cli
push
mov
int3
adcb
sub
lods
mov
popa
push
data16
inc
and
cmc
dec
popa
inc
int3
inc
add
push
push
push
ljmp
inc
rcr
sahf
pop
add
pop
mov
mov
mov
mov
cltd
add
mov
adc
xchg
sub
push
mov
scas
push
and
adc
xor
dec
mov
dec
push
inc
test
jns
fidivs
adc
cld
outsl
insb
and
and
movsl
sbb
std
pop
ljmp
push
cltd
mov
mov
push
push
cli
push
xchg
adc
inc
sarl
imul
sarl
mov
ret
sub
jnp
out
cmp
xchg
lods
xchg
inc
testb
loop
cmpsb
cmp
inc
add
gs
sub
stos
es
addr16
in
mov
pop
jecxz
int3
mov
outsb
mov
cld
lret
les
push
ljmp
fs
add
dec
mov
pop
insb
int3
negb
adc
test
es
and
call
mov
mov
dec
add
ja
mov
xchg
cld
jno
sbb
add
je
mov
jb
in
xor
popf
or
xchg
adc
pusha
rolb
bound
xor
xlat
cli
fisttps
cli
decl
test
je
pop
lods
push
add
xchg
dec
pop
ds
insl
mov
das
mov
icebp
icebp
push
mov
imul
xchg
push
xchg
in
mov
pop
fisubs
pop
push
jmp
aaa
sarl
mov
out
xchg
and
mov
xchg
sbb
xor
jne
imul
stos
inc
push
xchg
push
push
inc
lods
shrb
test
loop
mov
test
in
mov
lret
aam
int3
mov
fwait
push
sub
lcall
or
js
xor
rcr
xchg
outsl
jmp
sbb
mov
pusha
adc
test
fmull
xor
sbb
cmpsl
sub
xor
call
mov
mov
nop
pop
jge
shl
xlat
cmp
or
sbb
xor
xchg
call
cltd
dec
cmc
dec
icebp
mov
out
xor
add
popf
push
push
aad
lea
push
into
loop
stc
pop
fsubrs
push
jo
stc
jecxz
sbb
push
dec
jecxz
mov
mov
fstl
lods
or
cmpsl
jg
push
jle
std
es
lods
add
xchg
jo
idivb
xchg
outsb
mov
push
sbb
rclb
and
imul
loop,pt
aad
iret
fidivl
aaa
pop
mov
jecxz
aam
dec
lock
or
icebp
mov
push
dec
dec
xor
mov
aam
test
ja
and
push
rcrl
call
xchg
into
ljmp
stc
cmpsl
shrl
push
adc
xor
inc
xlat
mov
aad
jbe
pop
cmc
push
cwtl
mov
xchg
shlb
movsb
jecxz
enter
dec
lods
lock
loope
inc
sbb
dec
fnstenv
mov
push
jbe
jno
xchg
add
fbld
xchg
movsb
les
cmc
aad
es
leave
test
shl
adc
sbb
movsl
dec
dec
push
xlat
mov
fcomps
cmp
mov
call
lock
addr16
out
dec
mov
loop
arpl
out
lods
cmp
add
testb
aaa
xor
aam
dec
pop
sarw
into
jl
aas
mov
push
push
out
cmpsb
xorl
dec
mov
shl
nop
std
ds
add
stos
dec
mov
mov
into
push
push
or
ret
insl
sbb
rclb
loope
mov
add
sbb
adc
inc
cmp
arpl
push
jp
out
mov
lods
aam
mov
add
fdiv
pop
pusha
outsb
movsb
addr16
push
mov
sbb
push
sbb
mov
insl
cld
std
divb
ror
sbbl
pop
out
popa
xchg
andl
mov
imul
inc
cs
daa
ljmp
dec
ffreep
adc
aaa
sub
dec
repnz
ficoml
das
nop
pop
push
test
js
ds
lcall
cwtl
pop
roll
inc
mov
mov
fisttpl
or
fstl
adc
test
je
cmpsb
ss
fneni(8087
adc
inc
xor
rolb
dec
jg
sbb
xlat
scas
cld
sbb
mov
cmp
jns
fwait
ret
jge
cltd
scas
out
insl
sbb
and
aas
flds
fsubp
shr
mov
dec
fsubr
orb
sub
scas
mov
ja
arpl
test
sub
hlt
daa
push
dec
add
cs
shlb
and
add
mov
jo
sbb
cmp
pop
mov
prefetcht1
stos
dec
dec
xor
hlt
imul
push
add
mov
and
sbb
cmp
push
jmp
jne
bound
in
ret
aam
jp
std
push
mov
mov
push
dec
scas
ficomps
stc
xchg
adc
and
mov
and
lret
lret
push
movsb
and
sub
inc
adcb
xchg
lcall
jl
jmp
lds
ret
in
cli
push
adc
insb
aad
cmp
aas
lods
popa
popf
jne
mov
xor
jb
mov
and
stos
ljmp
out
inc
cmpl
ss
mov
ja
pop
addr16
aam
xchg
sub
aaa
cmpsb
mov
xor
lods
mov
jmp
fnsave
or
lret
sti
imul
and
addr16
fbstp
fsubp
sub
mov
leave
int
mov
stc
and
lret
fbstp
insb
jl
sbb
sbb
out
loopne
rcll
imul
ja
jae
jle
inc
testb
insl
stc
stos
in
cld
repnz
test
lea
jno
shrl
lds
mov
repnz
mov
loope
jne
test
add
add
cmp
xchg
iret
cmp
and
lods
push
push
push
cmpsl
fwait
jae
mov
pmulhuw
sub
call
sub
into
mov
jle
push
insb
pop
test
stos
fmull
mov
aaa
movsb
pop
lock
or
js
and
fists
and
or
pop
jne
mov
nop
pusha
or
cli
fmulp
push
xchg
pop
xorl
xlat
insl
sbb
hlt
js
push
imul
inc
inc
adc
sbb
pop
jnp
imul
mov
aas
repnz
or
and
or
jecxz
ja
add
adc
push
js
jmp
cmp
push
lcall
orb
jb
xchg
push
cltd
enter
iret
outsl
fwait
out
popf
push
arpl
jbe
inc
pop
mov
mov
add
pop
or
mov
call
or
and
or
mov
hlt
cmp
js
ret
push
das
outsb
xchg
jbe
sub
fldl2e
sub
mov
add
jns
js
test
test
or
dec
test
sbb
cmc
sbb
lods
inc
jp
jg
pop
inc
xor
ljmp
adc
push
imul
or
in
arpl
jecxz
dec
jmp
fidivrs
jne
insb
add
stc
rcrb
sti
and
adc
sub
sub
xor
outsl
data16
pop
data16
int
popf
mov
js
sub
inc
cwtl
pop
push
rolb
fpatan
xchg
in
test
rcrl
cmp
imul
cmc
mov
dec
and
in
popa
cmp
call
fisubs
sbb
sbb
adc
les
sti
jne
loopne
ljmp
or
lahf
mov
jl
push
scas
dec
mov
mov
jae
mov
int
mov
int
mov
cmp
lea
xor
dec
repnz
adcb
xchg
jne
int3
pop
testb
into
data16
dec
rolb
mov
sahf
arpl
stos
jbe
xchg
inc
loopne
int3
iret
arpl
cltd
out
inc
in
pushf
add
xlat
popa
sub
js
adc
pop
add
push
mov
or
pop
push
jne
xor
aam
test
sub
and
jb
xchg
lods
mov
dec
xor
pop
dec
sub
add
es
dec
cmp
xchg
rcrl
jno
jno
movsl
clc
jecxz
and
inc
jae
inc
and
xor
push
and
jb
dec
cmp
mov
or
daa
out
lret
inc
jle
mov
push
lea
dec
loopne
jl
lcall
lods
adc
int
xchg
adc
pop
push
fisubrs
js
xchg
call
xor
shlb
insb
adc
aad
jmp
dec
test
cmc
jecxz
testl
pop
lahf
les
xchg
es
rorl
iret
lods
add
xchg
loope
xor
fwait
xchg
arpl
pop
notb
dec
lods
fcmovbe
cmp
or
or
in
xchg
mov
mov
lcall
sahf
push
fiadds
ja
shlb
arpl
mov
sarl
mov
out
push
jnp
jl
loop
jbe
sbb
add
ret
outsl
pop
pop
rcrl
xchg
push
jge
xor
adc
pusha
push
pop
maxps
mov
cmp
cwtl
shr
movsl
pop
adc
pop
jno
xchg
repz
mov
dec
push
and
in
outsb
inc
fwait
lock
add
jbe
dec
rclb
sub
jne
fdivs
sahf
mov
jl
mov
orl
enter
or
andl
mov
xor
push
push
and
mov
jge
add
inc
jecxz
test
sbb
xor
mov
mov
test
or
push
imul
sahf
out
sti
iret
lcall
dec
dec
mov
inc
sbb
shlb
icebp
mov
mov
imulb
adc
cmp
or
or
cmp
mov
add
mov
les
pop
push
adc
cmpsb
les
movswl
dec
stc
data16
sbb
sub
adc
dec
loope
rcrb
lcall
lret
sub
leave
pop
cmc
cld
cltd
mov
in
mov
lea
and
mov
enter
pop
xchg
xor
mov
or
fwait
stc
xor
into
sahf
loope
pushf
mov
xor
out
jb
je
pop
in
ret
pop
add
call
ret
push
dec
cmpsb
push
lahf
xor
jmp
jmp
jns
clc
xchg
fsubs
sarl
lret
jmp
mov
mov
and
cmp
enter
inc
jbe
pop
adc
add
loop
iret
subb
lret
cmp
xor
xor
leave
scas
repz
mov
push
mov
cld
imul
pop
daa
dec
cld
addb
inc
pop
into
lret
add
shl
es
rolb
or
das
rorb
lahf
and
mov
icebp
cmp
insl
adc
mov
out
xchg
rorl
push
sub
fsub
mov
mov
ja
and
gs
inc
or
std
iret
data16
push
lahf
mov
push
sbb
ficoms
imul
outsl
and
repz
out
pop
lods
scas
adc
adc
fwait
jbe
into
cmpsl
mov
and
out
aas
ds
in
or
int3
mov
hlt
xor
xchg
js
dec
push
loop
fucom
mov
and
jg
xchg
add
sahf
insl
mov
dec
leave
cmp
inc
stos
mov
jmp
jmp
mov
icebp
ljmp
sbb
jmp
mov
push
jno
pop
scas
mov
adc
sti
and
cli
stos
add
scas
out
je
and
lock
inc
push
push
cld
xchg
lahf
sbb
mov
mov
adc
pop
push
enter
imul
adc
mov
movsb
mov
shr
mov
cmpsl
jge
mov
adc
mov
pop
sub
lods
sti
sub
repz
xor
adc
jp
test
fnstcw
out
ja
and
test
divl
aaa
mov
push
adc
xchg
mov
cs
outsl
adcl
cmp
or
or
daa
cmp
mov
test
lcall
sti
loopne
lret
xlat
push
stos
xor
pop
das
xchg
xor
repnz
cmc
add
les
jmp
movsb
xchg
xlat
pusha
insl
int
sbbb
add
outsl
dec
clc
int3
out
sub
add
push
das
cmpsb
inc
stos
mov
int3
push
dec
in
cli
test
sub
push
mov
mov
push
scas
outsb
jle
ja
shll
jb
mov
xor
lods
adc
add
cmp
or
inc
xchg
scas
xchg
repnz
lods
and
testb
dec
mov
js
ja
or
dec
cwtl
das
inc
cmpsl
das
aam
bound
shlb
les
mov
fs
xchg
call
imul
bnd
notb
cmove
mulb
push
xor
or
push
sub
cwtl
add
and
fistps
mov
rorb
dec
adc
bswap
arpl
xor
jb
int
cmc
adc
and
gs
add
sbb
je
insl
mov
es
fcomi
int
mov
aas
pop
push
ljmp
pusha
push
push
cmpb
sub
sti
jmp
ss
fmuls
lock
push
sti
stos
int
ja
out
and
mov
int
pop
aas
xor
andl
jl
mov
add
arpl
jle
push
inc
flds
adcl
adc
in
out
inc
fmull
insl
sub
out
add
add
scas
daa
inc
loope
sarb
jp
push
ficomps
jne
loop
xchg
ret
mov
adc
ret
and
lods
popa
xorl
sbb
xchg
jbe
ret
adc
mov
popf
fcoml
inc
fadds
and
push
dec
inc
bound
cs
mov
pop
lret
fstps
cwtl
pusha
push
mov
jge
int3
scas
cmp
dec
fldcw
lds
inc
fnsave
push
loope
in
daa
pop
push
test
test
xor
gs
fnstcw
arpl
dec
mov
inc
imul
push
pop
xor
idivl
loopne
lret
out
pop
addb
pop
xchg
cmp
cwtl
push
sub
add
xchg
mov
mov
gs
inc
test
mov
mov
rcrb
pop
dec
testb
adc
or
jecxz
xor
cmc
pop
fmulp
cmp
into
sub
jg
xor
xor
sub
loopne
das
fcmovnb
data16
mov
dec
jo
adc
lret
ret
test
sbb
test
xlat
mov
xor
pushf
jge
fisubrs
xchg
push
cli
push
inc
fidivl
mov
pushf
mov
int
call
loop
pop
cmp
push
in
xor
jp
push
inc
mov
push
loop
xchg
cmp
aam
es
mov
int
test
rcr
lret
add
xor
call
cld
outsb
inc
fwait
popa
loope
iret
sti
push
mov
lock
push
and
mov
mov
daa
cld
jnp
scas
dec
loope
cmc
or
push
jecxz
mov
add
ret
jb
hlt
in
mov
dec
push
inc
or
xor
dec
mov
jno
in
orb
push
cmc
pop
int
popa
push
je
hlt
faddl
dec
mov
testb
lret
xor
sbb
loop
cmpl
sub
lods
cmp
lret
into
push
movsl
in
js
out
es
push
stos
sbb
gs
cmp
mov
push
mov
push
jnp
xchg
mov
and
and
hlt
dec
out
mov
sbb
shrl
sbb
dec
mov
enter
push
test
adc
gs
dec
leave
ret
outsl
push
mov
movsb
gs
sbb
dec
divl
xchg
mov
ficoms
dec
mov
xor
adc
pop
mov
int3
cs
xor
jo
cld
xchg
ds
dec
stos
lret
sbb
or
out
lods
push
lock
fstpl
add
mov
jp
dec
fdivrl
xor
or
dec
lret
sub
fimull
mov
outsl
rol
sahf
pop
repnz
sbb
mov
xchg
aaa
inc
cltd
inc
inc
fistps
jae
sbb
mov
fbstp
shrb
sarl
add
adc
cs
out
push
adc
mov
fst
jbe
dec
xor
xchg
sarb
dec
cmp
cmpsl
adc
ds
push
jns
cmp
into
mov
jnp
loope
xchg
mov
sub
sti
ss
sub
jae
repz
add
inc
shr
shl
jp
shlb
sarb
iret
pop
hlt
sbb
and
xrelease
mov
adc
jne
stos
shl
fildl
inc
and
adc
and
data16
push
imul
int3
mov
stos
inc
ljmp
mov
sti
cli
pop
mov
pop
imulb
imul
in
test
jns
repz
ljmp
iret
pop
or
ja
adc
jbe
xchg
xor
ret
mov
es
out
ja
cmp
test
clc
pop
das
jmp
xchg
xchg
sub
je
mov
icebp
xor
inc
sbb
lret
jbe
sub
xor
notl
and
ja
mov
dec
mov
cmpsl
popl
or
cltd
out
pushf
xlat
or
cmp
pop
in
aaa
push
add
cwtl
das
arpl
dec
ffree
push
pop
into
insb
fistpll
or
adc
insb
push
test
repz
fldt
mov
pop
imul
notb
jmp
mov
jo
inc
mov
test
mov
ja
shrb
mov
stc
xchg
dec
fsubrl
jmp
fbstp
jl
xor
popf
sbb
sub
shrl
cwtl
jmp
cmp
sub
add
ficomps
xchg
push
je
js
stc
ror
addr16
jmp
xor
out
and
xchg
and
insl
or
lret
jae
insb
inc
stos
popf
push
decl
sub
pop
stos
and
outsb
dec
xor
je
call
lahf
popf
mov
popf
sbb
movsb
inc
push
cmc
push
xor
rol
int
insb
push
cmc
fstl
cld
test
clc
jae
das
sbb
loope
adc
aaa
mov
test
fstl
mov
test
xor
xlat
add
push
xchg
and
inc
nop
pop
jb
adc
sbb
rdtsc
stos
add
push
in
adc
out
jecxz
lcall
jne
push
in
sub
pushw
sbb
imul
test
add
xchg
jo
test
out
int3
pop
and
popf
femms
rorl
adc
imul
loop
popa
xchg
push
xchg
xor
sbb
mov
std
ljmp
ficoms
mov
mov
cmpb
xorb
popf
outsb
int3
dec
cmp
repnz
xchg
dec
cwtl
or
adc
xchg
jecxz
xchg
lcall
aam
loop
sub
rorl
movsb
cmp
test
lods
jns
fildll
add
test
icebp
test
and
sub
lret
aad
scas
add
inc
xor
pop
xchg
xor
cwtl
clc
jbe
or
lret
mov
and
cltd
mov
add
xor
sub
push
ja
jge
loope
jge
sub
lcall
loopne
jl
or
xchg
cmp
add
inc
sbb
pop
idivl
call
sub
inc
cmpsb
pusha
cmpsl
xchg
jbe
push
fdivrl
and
xchg
fsubrp
xor
pop
adc
fadd
dec
inc
push
mov
push
dec
and
dec
mov
dec
cmc
cwtl
outsl
push
mov
pop
iret
in
cmc
inc
xchg
nop
dec
cld
jmp
repz
leave
bound
inc
addb
inc
sub
sahf
pusha
inc
lret
push
cli
mov
add
stc
mov
jmp
filds
ss
sarb
mov
jno
enter
xchg
or
sub
ss
sub
mov
cmp
or
test
aaa
jae
pop
shlb
dec
pop
in
clc
mov
into
cmp
or
cmpsl
es
pop
sub
ss
jns
addl
shr
bound
shrb
pop
adc
and
std
movsb
stos
xchg
lds
bound
mov
add
pusha
push
xchg
mov
or
inc
fbstp
jmp
dec
xchg
push
pop
cmpsl
js
pop
cmc
inc
sbb
jl
cwtl
push
fldcw
icebp
lcall
dec
std
xchg
orl
sub
jmp
adcl
mov
push
cmc
adcl
xchg
clc
jae
sub
not
negb
lds
lds
mov
daa
cmp
xchg
add
in
test
add
sub
push
test
sub
jbe
fimuls
hlt
mov
nop
sbb
lock
inc
push
pop
jl
sub
dec
in
and
orl
dec
test
out
push
ss
xchg
or
dec
mov
and
cmpsl
sub
jae
pop
or
push
sub
ret
fcmove
jge
cmp
hlt
mov
xchg
imul
adc
imul
adc
repnz
mov
daa
outsb
sbb
mov
fincstp
inc
das
inc
and
shl
mov
mov
loopne
cwtl
roll
cld
loop
ljmp
push
in
loopne
dec
adc
jae
loopne
cmp
pop
sub
mov
push
xlat
scas
je
and
enter
mov
test
lods
adc
add
jnp
cltd
xor
fwait
in
icebp
roll
popf
mov
fistpll
cmp
rcrl
pop
scas
mov
cmp
add
sub
mov
test
inc
std
stos
outsb
lahf
fcompl
int
insb
mov
push
outsl
jbe
js
lea
sub
xchg
push
dec
jp
mov
rol
pop
add
pusha
loope
jae
outsb
jecxz
fildll
nopl
leave
aam
adc
jg
cmp
sbb
fbld
hlt
nop
add
adc
bound
mov
inc
scas
and
pop
aaa
movsl
mov
je
leave
push
mov
test
cmp
int3
jo
add
out
and
aad
mov
adc
mov
add
insb
lods
pop
mov
mov
jne
mov
cwtl
inc
rorl
enter
test
loope
jp
add
and
imul
cmpsl
icebp
push
inc
mov
lods
sbbb
inc
stos
adcb
or
mov
lahf
test
outsl
mov
mov
add
outsb
cld
push
mov
int
lock
fwait
pop
testb
stc
or
leave
pop
repnz
push
push
sbbb
incb
iret
cmp
xchg
xchg
stos
jno
shl
ret
scas
mov
shl
dec
jbe
not
pop
lock
xor
mov
pop
rcrb
andb
gs
icebp
fisttps
pop
shl
push
sub
into
fsubrl
mov
mov
xchg
jno
inc
adc
popa
add
ret
jno
xchg
scas
sahf
jbe
and
lret
pop
inc
andb
mov
fidivl
push
dec
lcall
inc
bound
idivl
push
leave
xchg
sub
int3
int
xchg
cmp
cmp
fstps
mov
mov
xor
inc
in
add
jecxz
push
maskmovq
notl
push
into
test
cs
lods
sub
ret
data16
mov
dec
in
mov
call
dec
jo
cmc
mov
shlb
jmp
xorb
movsb
sub
xor
xchg
outsl
jb
pop
jne
push
add
fldt
push
imul
xor
jb
mov
add
aam
add
inc
mov
jnp
loopne
adc
cwtl
push
std
test
mov
lret
or
xor
mov
mov
push
ret
jb
add
pusha
cmp
outsb
or
das
pushf
lea
out
and
xor
mov
aaa
push
call
repnz
inc
xlat
aaa
adc
mov
jmp
sub
in
sti
jbe
sbb
rcrl
jnp
jmp
add
stos
pop
out
inc
add
or
cli
dec
jns
jp
xor
xor
inc
jmp
sti
push
sahf
jg
dec
pop
adc
movsb
push
mov
mov
ds
lock
fucom
ret
mov
add
dec
xchg
icebp
xor
sub
xchg
push
bnd
shl
inc
push
rorb
adcl
std
or
enter
adcl
mov
fdivr
pushf
mov
adc
push
pop
pusha
movsl
lods
jnp
jbe
inc
jl
mov
lahf
mov
fstpt
call
push
xchg
sbb
call
dec
pop
repnz
hlt
mov
mov
mov
adc
mov
fwait
mov
xchg
scas
arpl
mov
fldl
mov
mov
inc
hlt
sbb
xchg
std
mov
sbb
rorl
fwait
mov
lret
dec
and
adc
mov
push
loope
test
and
dec
cmp
mov
mov
mov
inc
hlt
mov
dec
and
cmpsb
add
out
outsl
loop
outsl
dec
out
pop
popa
negl
mov
movsl
pop
popa
add
outsb
cmp
adc
jns
ficompl
stc
push
jno
push
icebp
nop
adc
scas
push
mov
shl
lods
fs
sub
imul
sbb
in
outsl
adc
div
cmpsb
jl
pop
ret
lods
jns
push
enter
jne
pop
movsb
inc
xchg
mov
daa
movsb
je
inc
push
mov
shll
sbb
negb
ljmp
scas
pop
imulb
inc
jge
jne
xchg
aad
fwait
mov
into
mov
pop
jecxz
and
stc
ror
outsl
out
loop
xor
ret
imul
dec
inc
pusha
jecxz
adc
repnz
cmp
add
mov
xchg
decl
loope
mov
xchg
or
mov
adc
test
test
jle
cmp
push
hlt
jg
mov
sbb
or
test
jle
cmp
xchg
push
and
int
loope
jbe
enter
out
dec
jg
in
aas
push
testb
dec
insl
push
cmp
sub
pop
pop
cwtl
sbb
in
push
add
cmp
dec
sbb
xchg
jbe
mov
xchg
lcall
ret
insb
mov
sub
jnp
fstps
adc
mov
test
adc
shll
cltd
xchg
pop
xchg
sub
sti
push
dec
and
jne
push
and
sbb
mov
jns
rcll
pop
xchg
and
sub
xchg
mov
imul
pop
data16
jnp
dec
jo
int3
and
inc
cmpsb
dec
ljmp
fs
mov
inc
loop
mov
shll
add
xor
mov
loopne
cmp
stos
or
int
mov
int
mov
cmpl
mov
into
jp
cmp
cmp
shlb
cmp
shlb
cmc
xchg
push
cmp
cmp
lret
push
out
test
push
or
cmpsl
mov
push
xchg
imul
or
cmp
test
jns
and
push
fwait
lods
jecxz
clc
dec
fiaddl
jb
push
mov
xor
pop
repnz
neg
out
xor
loop
push
sub
adc
rcrl
jecxz
mov
inc
sub
or
aad
xchg
cmp
mov
cmpsl
lods
xchg
sbb
jb
dec
and
cmpsb
std
ds
xchg
pop
daa
pop
adc
inc
adc
mov
es
jo
imul
stc
push
jle
out
aaa
push
bnd
xchg
pop
cltd
jl
mov
pop
mov
fldenv
scas
push
pushf
push
pop
repz
test
std
jl
insb
mov
sbb
cld
xchg
dec
lds
fmuls
or
icebp
pop
push
outsb
icebp
cs
mov
in
sbb
jle
ljmp
push
xchg
sbbl
jecxz
dec
gs
push
in
fnstsw
mov
es
lea
mov
pop
push
test
add
stos
dec
insl
sbb
shr
iret
mov
mov
xlat
cmpsl
mov
scas
andl
sub
pop
imul
fmull
pop
push
and
stos
mov
push
or
negb
inc
sti
dec
cltd
mov
filds
testb
scas
jne
dec
mov
push
cmp
leave
lret
rorl
out
mov
pop
ljmp
push
insb
adc
sbb
or
fistpl
cmp
adc
cmp
lcall
add
and
pop
out
ss
xchg
enter
mov
cmpsl
popf
and
imul
xor
mov
fwait
cmpsl
call
and
rorb
push
mov
addr16
push
inc
pop
jg
fsubr
add
faddl
xchg
ficompl
test
outsb
mov
out
sahf
cltd
test
mov
call
mov
xor
call
xchg
add
mov
outsl
in
fadd
inc
cld
push
imul
lods
insb
pand
cmp
mov
mov
sub
jle
jg
jbe
pop
int
rclb
cmp
cmpsb
out
and
popa
jmp
js
cmpsl
out
push
cld
lods
mulb
mov
push
js
push
test
lret
fstl
inc
andb
jo
sub
imul
imull
ret
lcall
pusha
cmp
pop
add
cmpsl
mov
dec
push
aam
jbe
push
inc
cmpsl
push
std
jg
leave
jp
mov
mov
mov
jp
xor
mov
dec
int
add
mov
decb
dec
imul
movsl
enter
adc
je
sahf
pop
outsl
les
mov
jmp
imul
fcmovnb
xlat
or
lods
inc
sub
in
push
test
inc
andl
mov
iret
in
add
dec
cmp
sbb
sub
jb
push
leave
lock
jae
and
arpl
inc
sbbb
lods
in
push
lods
cli
and
int3
dec
stc
mov
jmp
add
xchg
xchg
in
aam
sub
mov
loop
mov
dec
inc
stos
aas
sbbb
subb
pushl
lret
mov
dec
mov
stos
inc
stc
bswap
pusha
imul
cli
inc
sub
adc
mov
cld
cli
dec
pop
insb
popa
sbb
dec
mov
hlt
repz
xchg
mov
mov
fidivrs
xorb
inc
orb
sub
ret
push
jns
cmp
mov
mov
sub
dec
int
loop
lea
jmp
out
stos
mov
out
int
or
mov
mov
add
aaa
jmp
popa
repz
in
mov
scas
dec
popf
ss
iret
and
inc
mov
jecxz
sub
adc
push
mov
clc
mov
lods
gs
dec
pop
jb
push
pop
leave
call
inc
or
fstps
xor
xor
mov
adc
test
loope
xor
sub
sub
in
jo
in
aad
xor
frstor
inc
add
dec
nop
jmp
cmp
inc
inc
xor
jne
dec
pop
movsb
dec
int
stos
test
xlat
clc
pushf
daa
cli
push
fsincos
rcrb
adcl
test
fdivl
mov
arpl
cmpsb
outsl
add
test
and
adc
mov
pop
jl
fwait
pop
popf
xor
or
inc
mov
pop
imul
cmp
jp
jae
in
cwtl
fists
fisubrs
inc
adc
aad
test
sbb
or
mov
mov
jle
mov
mov
lret
xchg
inc
jp
or
xor
inc
fdivl
sbb
clc
stos
jl
loopne
lcall
xchg
xchg
jbe
or
and
push
mov
xor
repnz
adc
cmp
jns
fdivs
sbb
dec
gs
push
sbb
lock
movsl
lds
test
xchg
xchg
xor
cmp
and
test
in
test
sbb
rorl
inc
clc
xor
daa
das
lahf
rcrl
adc
sbb
adc
xor
jnp
inc
push
sahf
std
movsl
cwtl
scas
push
ss
enter
arpl
repz
pop
sbb
aas
lea
jge
aad
xor
xor
or
xchg
fs
adc
mov
and
mov
mov
clc
adc
cmp
xor
sub
xor
int3
mov
push
cmpsl
inc
pop
lret
or
stos
sarb
test
and
out
cmc
int3
xchg
lret
push
xor
or
lcall
les
mov
test
xor
pusha
and
sbb
mov
fsubl
gs
mov
xchg
jno
arpl
sub
lcall
mov
nop
lods
sbb
sub
mov
push
push
push
fdiv
fstpl
pop
push
jnp
jns
ret
ja
sub
jns
jne
ds
stos
sahf
jae
cmc
inc
push
div
rcrl
movsl
fdivs
jno
divb
movsb
inc
jae
dec
pop
je
push
loop
mov
lock
insb
fwait
push
inc
cli
pop
in
aam
mov
xchg
popl
stos
frstor
cmp
into
mov
imul
or
dec
sub
xor
loop
and
jg
lods
cmp
cwtl
sahf
xor
mov
and
std
xchg
and
adc
xor
aaa
or
inc
mov
dec
mov
pop
inc
fildll
lea
or
movsb
push
push
mov
mov
popa
fwait
iret
push
gs
in
je
pop
mov
mov
or
stos
fstpl
adc
mov
popa
icebp
sbb
mov
outsb
jno
loop
insb
adcb
cmp
inc
xchg
insb
cltd
jne
push
idivl
jge
movl
loop
psllq
jno
popf
mov
gs
jns
mov
add
lds
cltd
enter
or
mov
xor
push
pop
mov
movl
add
repz
push
imul
lret
jnp
addr16
mov
add
and
hlt
insl
sbbl
add
loope
mov
adc
push
leave
stos
push
and
fcmovnbe
dec
clc
enter
mov
jo
push
jge
mov
test
push
pop
pop
jb
iret
cld
sub
sub
sahf
mov
inc
and
dec
mov
mov
inc
loop
fists
lock
mov
repnz
insl
jle
push
jne
xchg
pop
jg
lret
lret
pop
leave
fildl
push
mov
jne
inc
mov
inc
jnp
pop
lods
loop
or
add
xor
mov
cmp
mov
insl
add
ret
or
lock
xchg
mov
xchg
stc
cwtl
in
xabort
cmpsb
inc
xchg
pop
jl
aas
stos
fucomp
insl
imul
push
push
call
shrb
sahf
lods
add
sub
rclb
cmp
mov
push
negl
mov
roll
ja
out
cld
das
cwtl
pusha
stos
lahf
lret
xchg
dec
test
int3
icebp
movsl
add
inc
cwtl
ret
out
insb
mov
inc
adc
ljmp
mov
add
outsl
and
shll
pop
shrb
pushf
xchg
add
lret
cmp
sub
jbe
daa
fwait
push
jae
je
mov
jl
bnd
and
sbb
xor
cs
les
mov
xlat
ret
iret
xchg
js
push
out
arpl
pop
mov
sbb
rorl
call
jns
call
notl
mov
cmp
jo
and
sub
jecxz
xchg
adc
mov
jg
dec
fs
xchg
cmp
aas
insl
mov
iret
xlat
push
or
adc
das
push
pop
movsl
xor
ret
cmp
dec
sub
mov
aas
andl
cmpsb
leave
and
mov
mov
mov
xchg
imul
xchg
stos
push
mov
mov
or
pushl
push
or
or
pop
and
movzbl
push
add
push
nop
call
mov
mov
lcall
hlt
mov
push
xchg
xlat
mov
cli
jne
int
and
fidivs
adc
cmp
call
fcomp
out
mov
mov
sbb
test
ss
pop
or
pushf
jge
arpl
rcr
xchg
ljmp
out
mov
sub
hlt
jnp
mov
add
lcall
inc
or
mov
sti
movsl
stc
push
std
jecxz
pop
dec
push
xor
mov
jecxz
cld
push
shr
ss
daa
mov
mov
adc
icebp
popa
mov
js
sub
test
sub
mov
dec
inc
enter
inc
pop
iret
jae
shrl
cwtl
es
fldl
mov
js
add
pop
das
adc
jp
repz
and
sbb
je
xlat
mov
xchg
stc
into
mov
jbe
imul
mov
pop
in
jbe
iret
cmp
pop
xchg
sbb
cltd
add
pop
mov
loopne
cmp
mov
or
out
push
jae
or
cld
cwtl
sub
cltd
loop
cmp
sahf
lods
je
pop
out
imul
mov
ljmp
das
inc
sbb
movsb
mov
mov
inc
mov
pusha
lahf
cmp
inc
jnp
mov
mov
inc
sbb
add
mov
mov
cmp
push
push
sub
mov
jbe
lret
and
mov
sub
test
jl
mov
jg
add
aaa
inc
fidivl
sbb
jbe
lods
jb
js
xorl
inc
dec
movzwl
mov
lret
jp
or
out
imul
cmp
out
out
pop
aaa
dec
cmpl
in
shlb
add
lahf
cmc
and
test
stc
fwait
es
sbb
loope
in
dec
jp
jmp
ret
mov
mov
jb
lahf
insl
push
and
dec
adc
clc
lret
stc
cld
mov
movsl
or
sbbl
or
cmp
inc
mov
and
imul
pop
add
mov
push
cmp
outsl
ret
stc
sub
das
pop
mov
mov
mov
inc
dec
nop
add
aaa
pop
pop
in
dec
mov
cmp
hlt
and
pushf
push
adc
adc
test
dec
cmp
jg
inc
jmp
sub
inc
aam
xchg
push
inc
jle
lret
enter
outsl
sbb
insl
sub
pop
dec
negb
or
pop
ds
sbb
cmp
mov
mov
jg
xor
sub
xchg
xlat
add
popf
jne
in
subl
or
mov
es
popl
imul
stos
push
mov
fistpl
xchg
cmp
mov
push
add
addl
ror
ficomps
lods
dec
sub
cmp
into
frstor
fs
xor
test
jg
push
mov
outsb
les
sbb
ja
adc
and
mov
cmp
addr16
andl
dec
ret
and
daa
jb
into
rcl
ret
and
xor
mov
mov
adcl
lea
inc
xchg
aaa
pushf
test
mov
sbb
xchg
cmp
sub
pop
pop
xchg
xor
inc
sub
shll
ljmp
fs
jge
or
cmc
mov
lahf
xor
ret
pop
out
ja
jg
out
out
mov
jno
idivb
mov
shrb
pop
hlt
cmp
xor
fcomps
add
pop
pop
push
fwait
int
mov
stc
loopne
pushf
pop
cmp
idivl
sbb
jle
xor
cmp
aaa
dec
dec
cli
adc
mov
mov
rcll
in
cld
and
icebp
adc
jne
lods
ds
xchg
adc
int3
jg
mov
out
cld
xchg
add
sbbb
insl
es
xchg
pop
insl
and
dec
mov
and
out
jle
aam
sbb
jmp
in
fbstp
mov
push
xchg
bound
pusha
xchg
int3
fistps
adc
push
idivb
mov
inc
dec
add
test
cmp
and
repnz
xor
jle
adc
pop
xchg
addl
sahf
push
mov
push
cmpsl
test
shll
inc
fimull
xchg
push
iret
mov
insb
lret
sbb
mov
jmp
adc
inc
cmp
mov
icebp
and
gs
loope
xor
jmp
fcomp
add
lock
pop
loopne
add
call
pop
jne
das
cmpl
adc
xlat
sub
jecxz
dec
adc
sti
popa
mov
jecxz
inc
stc
insb
cltd
adc
ja
xor
jb
jl
aam
and
bound
loop
xor
mov
ret
add
movsl
sub
lcall
push
or
lock
imul
call
jo
pop
stos
or
adc
ds
ljmp
xchg
scas
sbb
cld
call
adc
lret
pop
in
mov
jb
lcall
hlt
add
jge
mov
int
jmp
lods
dec
xchg
cmp
cmp
rorb
sub
iret
mov
dec
xor
mov
and
fld
outsb
adc
ss
test
and
es
and
out
lods
inc
dec
adc
dec
mov
jmp
scas
orl
adc
shll
pop
imul
and
push
add
cmp
outsb
mov
sbb
add
or
adc
cmp
xchg
popf
pop
and
js
gs
lcall
inc
push
jb
push
cmp
mov
inc
js
cmp
xchg
pusha
sahf
or
negl
or
jle
inc
stc
xchg
popf
ret
mov
cmp
mov
jmp
dec
addr16
test
out
popa
cmp
mov
dec
pop
mov
aam
pusha
inc
lods
cmp
jl
pop
fwait
add
xor
aam
adc
mov
mov
add
repnz
inc
bound
test
pop
lock
push
ljmp
jno
mov
add
test
icebp
mov
shl
repz
push
or
aaa
movsb
add
add
jne
stos
stos
inc
fnsave
cmpb
faddl
or
push
dec
lcall
jle
xor
in
mov
adc
stos
es
test
fcoml
out
jno
stc
call
pop
fmuls
push
test
jns
imull
mov
jne
stc
mov
mov
sbb
cmp
pusha
ret
nop
ret
pop
sub
lret
dec
mov
cmc
xor
or
push
cwtl
add
xchg
mov
adc
mov
dec
push
mov
ficoms
aaa
xor
mov
inc
push
iret
jecxz
mov
imul
sbb
or
jnp
sub
ret
lcall
and
out
push
loopne
in
pop
std
imul
mov
sub
mov
adc
fildl
or
ficoml
mov
outsb
lods
add
nop
clc
push
dec
xor
push
jmp
jno
sbb
sbb
cmpsb
or
imul
jo
outsl
loop
imul
sahf
addb
jne
testl
dec
dec
fiadds
dec
jecxz
bound
pop
aam
lods
sbb
push
pop
fwait
and
xchg
fldl
push
aas
cmpsl
cmp
sbb
cmp
cmp
mov
les
out
dec
js
adcl
pop
loop
mov
pop
mov
mov
js
mov
ret
sahf
push
icebp
mov
jecxz
jl
mov
shl
aas
mov
sub
scas
dec
fs
jmp
adc
ss
xchg
shlb
push
mov
jbe
sub
cmp
pusha
lret
lods
cmc
adcb
or
cmpsl
xchg
sub
pop
push
int3
stos
push
mov
mov
lret
std
push
xor
je
andl
dec
int
jle
fldt
jmp
sbb
andb
adcl
or
mov
add
mov
rcll
scas
and
and
xchg
mov
shll
xor
fldenv
push
sub
flds
xor
mov
mov
test
mov
or
dec
push
rcrb
leave
movsb
sub
and
or
jge
sub
out
sahf
into
aas
fmul
hlt
push
and
test
fidivs
andb
shll
xchg
pop
add
adc
xor
movsb
sbb
lret
imul
sbb
inc
sbb
xor
stos
xchg
in
out
jge
cmp
cs
jg
aad
dec
hlt
into
mov
mov
xlat
iret
mov
fldenv
jecxz
sbb
xor
xor
sub
jns
jle
fldt
jmp
mov
dec
inc
out
call
or
sub
dec
popa
loope
jne
inc
or
ja
mov
stos
lds
xor
es
pop
mov
cmp
cmpsb
pop
push
or
jle
xor
add
pop
es
xlat
pop
jns
stos
mov
xchg
adc
cld
outsl
testb
jo
aam
inc
sub
ljmp
cli
fcompl
adcb
lret
je
pop
mov
mov
mov
aad
dec
fstl
es
aas
imul
stos
mov
xor
cli
rorl
notb
addr16
push
jmp
push
insl
iret
xor
jo
jecxz
fisttpl
lods
inc
cld
jns
cmpsb
cmpsb
pop
inc
scas
lcall
inc
mov
and
clc
lahf
subb
add
sub
sti
aaa
cwtl
and
mov
test
mov
lret
sub
ja
pop
adc
cmp
icebp
and
icebp
adc
fsubrl
adc
sbb
mov
sbb
dec
mov
or
cs
leave
sbb
mov
enter
or
mov
hlt
xchg
and
outsb
add
test
or
or
pop
insl
scas
dec
add
jne
andl
add
push
xor
fdiv
aas
loop
jp
and
enter
push
or
mov
pop
scas
inc
in
sarl
inc
leave
adc
add
xchg
repnz
sahf
xchg
adc
adc
mov
mov
xchg
xor
testl
pop
dec
xchg
test
pop
dec
aam
cmpb
xlat
aam
xor
jg
or
ffree
gs
mov
out
sarl
fcompl
mov
pop
xchg
mov
xor
das
test
rcll
loopne
xor
shl
cmpsb
cmp
or
jge
scas
xchg
inc
or
fwait
inc
fldenv
dec
xchg
mov
mov
fcoml
xor
mov
dec
dec
lods
rcl
mov
sti
loop
and
mov
mov
loopne
stc
es
das
pop
adc
dec
mov
aaa
out
test
ljmp
fldl
mov
in
mov
push
ret
sbb
stos
addb
ss
sbb
pop
aaa
mov
cmpsb
cmp
mov
in
loopne
sub
popf
lods
and
add
hlt
js
and
fwait
ljmp
gs
mull
add
stos
jp
enter
int
xchg
mull
int
mov
pop
shl
sbb
testb
push
enter
push
rcll
stos
mov
jno
jae
jmp
jo
add
jns
decb
dec
xor
dec
and
push
inc
jne
inc
xchg
enter
sbb
mov
gs
jns
push
and
or
fcoms
es
or
xchg
loope
sbb
pop
adc
add
in
sub
insl
aas
ret
dec
fnstenv
fcomi
xchg
sub
add
xchg
jge
dec
pop
pop
mov
mov
inc
ljmp
jnp
mov
jnp
add
mov
push
sarb
pusha
je
cmpsl
lods
insl
je
les
or
imulb
adc
and
lds
enter
fcomi
mov
mov
adc
lock
mov
add
das
sub
call
push
test
std
sbb
or
pop
sub
in
xchg
inc
push
xchg
adc
mov
inc
pushf
test
out
gs
pop
in
mov
jge
sbb
aaa
xchg
pop
fwait
pop
mov
das
and
sbb
mov
ds
es
xor
cmp
insb
cwtl
push
inc
cli
into
add
sub
mov
cmp
inc
les
jae
or
imulb
pop
jmp
sub
out
pop
in
add
or
mov
jecxz
mov
test
mov
enter
test
add
out
pop
sub
xchg
out
cld
cli
mov
inc
movsl
enter
push
or
jl
dec
out
sahf
pop
jg
shrl
add
pop
std
xchg
dec
mov
add
ficoml
mov
inc
leave
pop
mov
cmc
das
push
mov
add
int3
and
stc
cmp
insb
int3
stos
loope
mov
push
clc
repz
pop
out
outsb
sar
imulb
sub
pop
jns
cmpl
xchg
out
mov
nop
loop
mov
rorl
jne
jns
or
jmp
xor
es
sbb
xlat
xchg
rorb
out
mov
cld
sub
fcmovnu
int
mov
adc
shrl
jle
xchg
sbb
inc
sub
mov
dec
dec
pop
out
jnp
cmp
cwtl
xchg
sub
scas
pop
pop
sbb
mov
mov
es
ret
inc
pop
xor
aaa
push
push
jl
xchg
mov
movsl
sbb
or
arpl
xchg
jmp
pop
imul
dec
add
addl
jns
sbb
fwait
dec
js
inc
loope
push
xorb
test
push
mov
jge
shrl
jp
mov
fstps
push
cmp
out
cmp
or
add
ja
lcall
popf
in
push
sbb
adc
aaa
pop
inc
jae
in
jmp
sub
add
leave
stos
inc
cli
jmp
stc
pop
xchg
enter
jae
pop
xchg
lea
push
push
pushf
arpl
cli
lock
adcb
lret
sub
lahf
mov
cli
int3
repz
aam
out
sbb
sbbl
push
fbstp
jbe
dec
jge
std
ficompl
in
push
les
negb
pop
pop
mov
cmp
imul
outsl
movsl
add
or
stc
ficoms
mov
ljmp
lea
sarb
aaa
shll
aaa
jae
push
mov
xchg
shrb
add
sub
imul
outsl
lock
les
push
or
adc
mov
ror
add
hlt
std
fidivl
jp
insl
add
mov
sbb
mov
outsl
xchg
popa
mov
mov
push
jge
fsubrs
push
adc
test
sbb
jp
sub
mov
jae
mov
dec
bound
ret
xchg
inc
xchg
push
cmpsb
outsb
jl
fistpl
cmc
add
leave
or
fistpll
sbb
pop
cld
jns
nop
stc
sbb
mov
adc
ja
std
addr16
inc
adc
popf
xor
andl
adc
mov
inc
lcall
and
rcll
jno
es
fwait
mov
xchg
test
mov
or
add
addr16
hlt
adc
cltd
rclb
inc
gs
or
repnz
test
sti
pop
dec
adc
xor
jo
push
test
iret
xchg
pop
cmp
jbe
mov
jbe
in
fdivl
push
jae
test
cld
xchg
sub
lea
push
push
inc
and
js
nop
nop
fs
push
mov
and
enter
xchg
std
aam
jl
lret
lods
sub
pop
aas
cmp
rorb
lock
mov
fs
jne
div
pop
push
es
push
or
daa
aaa
sahf
sbb
dec
dec
add
cs
cs
pop
sbb
adc
and
aad
fucomp
jno
mov
int3
ret
sbb
gs
xchg
inc
mov
sub
rcr
fimull
iret
es
mov
mov
push
sbb
push
cld
or
and
push
in
rorb
das
cmp
xor
dec
jo
out
push
sbb
push
repz
in
add
jecxz
stc
sub
out
lahf
stos
movsb
cmp
push
add
sub
outsb
inc
scas
push
mov
jne
and
add
mov
sbb
and
or
jecxz
movsl
lea
or
arpl
sub
mov
push
insl
mov
insl
notl
mov
jbe
add
cmp
cmp
xlat
arpl
mov
flds
pop
xchg
and
xor
xchg
out
push
jl
xchg
pop
cmpsb
jns
push
stos
jg
loopne
cmp
imul
jne
mov
js
ret
sub
push
ds
rcr
inc
pop
pop
push
das
aad
mov
xorb
xchg
cmp
popf
or
fistpl
mov
pop
push
inc
repnz
and
or
inc
jmp
out
mov
lgs
or
inc
sub
dec
loop
jb
mull
int3
imul
ss
out
push
dec
mov
incl
testl
js
jmp
pop
lret
sbb
fs
stos
xor
and
xor
rorb
loop
pop
sbb
cmp
movsl
lret
xor
or
fisubrs
lahf
xchg
cld
add
adc
into
dec
xor
lock
or
jbe
push
and
add
push
stos
ds
push
mov
pop
dec
lret
push
sub
mov
in
xchg
xchg
inc
aaa
mov
and
nop
jge
mov
pushf
mov
ljmp
mov
imul
sbb
push
scas
mov
or
add
sbbl
mov
mov
les
adcl
in
mov
inc
cmp
lcall
nop
mov
sub
loope
add
stc
sub
scas
sbb
fldenv
imul
ja
push
mov
sbb
xchg
popa
adcl
xchg
and
les
aad
and
push
pushf
adc
cmp
je
jnp
dec
push
mov
nop
mul
mov
mov
push
cwtl
fwait
jb
add
out
mov
push
fwait
stos
xchg
cli
dec
cli
subl
xchg
xor
je
sbb
cli
fisubrl
lock
inc
mov
mov
js
xor
dec
test
iret
fldcw
cmp
or
cmp
icebp
mov
pushf
sub
out
pop
adc
imul
pop
lock
shrl
xchg
outsl
mov
rorb
sbb
call
xlat
sahf
orb
cmpsb
cs
adc
sbb
hlt
fwait
decl
adc
push
decb
into
pop
jae
push
or
jno
cwtl
xchg
lahf
inc
fdivrp
adc
inc
sbb
outsb
iret
add
mov
pusha
fbld
mov
xor
ss
dec
sub
pop
sbb
ss
cmp
fnstsw
fs
inc
push
in
lock
ror
adc
xor
jecxz
lds
pop
test
rol
cs
and
mov
push
in
sbb
mov
push
push
sub
mov
xor
adcl
ret
lret
shlb
push
jnp
jle
dec
enter
jbe
js
outsl
lahf
loope
cmp
and
shll
rclb
pop
mov
or
inc
and
mov
cmp
icebp
insl
adc
cmp
insb
xchg
sub
push
mov
js
pop
pushf
pop
lret
inc
stos
out
and
jl
jmp
pop
pop
jns
push
xchg
std
cmpsl
pop
jmp
inc
mov
nop
jne
testl
mov
dec
mov
sub
xchg
fsubrl
mov
ret
insb
or
ss
clc
hlt
dec
adc
pop
mov
sti
mov
test
stc
sbb
inc
stos
jle
fstps
and
dec
je
xchg
pop
add
fidivl
add
sub
xchg
pushf
add
mov
sarl
ja
or
gs
rol
jle
jecxz
inc
push
adc
sbb
adc
push
dec
cmpsb
ja
jp
lahf
pop
pushf
push
nop
xchg
decb
sbb
testb
cwtl
or
inc
out
cwtl
sbb
and
inc
push
xchg
dec
adc
push
sbb
dec
adcl
in
push
push
mov
inc
sub
cltd
jle
fdivl
rcrb
push
and
add
jo
dec
mov
mov
jg
jle
mov
lahf
push
pop
cmp
out
dec
scas
ljmp
push
std
push
xchg
add
xchg
push
mov
popf
addb
adc
daa
cmp
pusha
pop
cmp
sbb
stc
lcall
pop
nop
adc
jge
rcrl
mov
popf
cmp
shlb
inc
sbb
lcall
loopne
jmp
les
mov
lret
mov
mov
stos
mov
adc
data16
pop
test
or
cmpsb
out
sar
add
pop
in
xrelease
or
or
add
push
iret
enter
lods
gs
aaa
loopne
cwtl
enter
pusha
sbb
sahf
jecxz
adc
sbb
add
sbb
jo
jl
nop
xchg
fdivrs
push
call
shrb
push
rcr
sbb
cmp
sbb
imul
mov
iret
or
sub
out
in
xor
fistl
outsl
lods
or
inc
push
data16
testb
pushf
clc
or
ror
lea
and
pop
fwait
fwait
repz
sub
pop
pop
mov
jmp
arpl
push
stc
loop
ficomps
cltd
aam
dec
rclb
das
repnz
sub
sbb
cmpsb
xchg
rol
cltd
nop
push
sbb
xchg
lea
je
stos
xchg
cmp
out
cld
push
add
pop
and
push
mov
jae
icebp
rcrb
jecxz
test
xlat
jmp
add
mov
sbbl
adc
insl
mov
popa
in
das
in
insl
jmp
push
loopne
fdivl
mov
or
add
iret
add
bound
test
and
cmpsl
imul
stc
in
mov
cmpsb
or
and
mov
mov
sbb
fsubrp
test
out
fnsave
les
rcrl
sarb
or
hlt
push
mov
pop
outsb
test
out
test
add
rolb
add
push
xchg
mov
pop
and
fnstsw
cmp
sahf
repz
xchg
fimuls
push
xchg
in
pop
sbb
jecxz
jmp
sbb
repz
jmp
mov
mov
add
inc
pop
mov
inc
sbb
lds
pop
rcll
lret
loop
mov
adc
xchg
xor
mov
lea
adc
pop
jmp
rorl
mov
sbb
push
xor
sub
jbe
js
pop
shlb
or
lea
icebp
add
rclb
xor
mov
hlt
sub
test
fwait
add
or
xor
ja
scas
loopne
fwait
rcrb
fdiv
js
fldcw
mov
mov
fs
mov
jbe
loopne
sbb
pop
jo
movsb
cmpsl
cmpsb
flds
xchg
mov
xchg
lret
fwait
ret
cli
int3
fs
nop
push
add
shll
leave
pop
sarl
in
addr16
out
in
dec
inc
fdivrl
in
out
jne
in
add
cmp
mov
test
dec
aas
out
fs
ljmp
cmp
aaa
ret
push
xor
xchg
into
lahf
dec
mov
dec
push
push
inc
stc
scas
notb
xchg
out
dec
add
pop
pop
repnz
xchg
test
stos
das
xchg
inc
jl
dec
stc
jecxz
push
or
lret
jbe
cmp
mov
lods
inc
inc
aas
add
jo
add
repnz
mov
dec
iret
mulb
dec
inc
movsl
or
push
push
stc
cld
push
aaa
inc
adc
adc
outsb
mov
lea
mov
mov
xor
fidivrl
and
xchg
xchg
pop
enter
xchg
ljmp
and
pop
rorb
dec
push
pusha
sarl
fld
lods
push
shr
jle
xchg
repz
jns
xor
and
shlb
xchg
int3
arpl
outsb
jbe
sub
aaa
das
and
shrl
iret
bound
jbe
push
ficoml
pop
xor
mov
loopne
in
pop
mov
daa
gs
pop
mov
cld
leave
std
in
xor
and
push
jp
sti
das
fldl
jl
xlat
mov
push
adcl
pop
insb
cmc
adc
dec
inc
pop
dec
js
ret
cltd
loopne
pop
je
inc
xor
out
cmp
add
pushf
cwtl
loop
lret
push
pop
inc
dec
mov
sub
loope
mov
xchg
jno
jns
cs
cwtl
hlt
cmp
dec
fisubrl
leave
xor
mov
fsubr
int
fmulp
in
inc
in
arpl
gs
scas
mov
and
jno
mov
mov
sbb
test
cwtl
iret
sbb
sarl
imulb
mov
mov
mov
scas
out
dec
fsubs
and
jb
out
loop
push
dec
xchg
mov
mov
mov
sbb
fimull
add
jae
fs
xor
inc
xchg
test
or
repnz
mov
push
add
in
cmc
ja
negb
sub
mov
adc
or
lds
lcall
dec
bound
dec
fsubs
add
mov
in
pop
and
inc
fwait
pop
cmp
ds
test
aam
cmp
jbe
mov
insb
xchg
sub
mov
cmc
ds
shrb
mov
push
call
xor
jg
pop
xor
mov
ret
scas
sbb
xchg
call
mov
xor
rcrb
insb
push
sbbl
aaa
mov
imul
fwait
jbe
imulb
xor
popf
stos
stc
rol
push
add
inc
jg
shl
dec
add
pushf
jp
lea
push
arpl
jns
and
push
outsb
xchg
faddl
out
mov
dec
inc
xchg
fldcw
ficompl
adc
adc
xlat
dec
xchg
and
pusha
mov
jmp
xor
imul
ja
leave
pop
enter
xchg
gs
cmpsb
xchg
call
ret
inc
dec
adc
lahf
xor
rorl
and
cmp
or
push
insb
add
push
test
pop
xlat
add
and
outsl
repnz
mov
mov
xchg
sti
sub
mov
imul
xchg
int3
fs
jnp
xchg
adc
std
gs
push
aas
inc
jbe
test
gs
in
mov
lea
int
mov
and
ds
imul
andb
push
shlb
adc
adc
add
mov
test
and
out
adc
icebp
sarl
cmp
les
xorl
mov
leave
js
add
lock
gs
mov
jp
push
gs
sbb
xchg
jbe
mov
inc
push
fcmove
int
rclb
or
sbb
mov
lahf
xor
jmp
loop
adcl
pop
out
fbld
sub
shlb
stos
mov
sbb
cmp
xchg
pop
ret
imul
xchg
scas
data16
push
or
sbb
dec
ja
jmp
jl
idivb
mov
subl
jb
repnz
and
lcall
sub
or
adc
movsl
mov
jl
ds
cmp
ja
jmp
jl
fsubrs
sbb
push
pop
jbe
xor
push
test
lock
xor
lds
addr16
outsl
xchg
pop
outsb
push
adc
ja
test
xor
hlt
fwait
pop
repz
dec
dec
gs
inc
cltd
push
sub
or
lods
and
imul
arpl
cld
push
or
adc
ret
xchg
movsb
mov
push
sub
cmpsb
sarl
inc
inc
fsubrs
inc
aam
es
mov
int3
nop
popa
jno
sarl
mov
sbb
call
loopne
sbb
imul
clc
add
or
out
gs
in
rorb
fsubrs
mov
lea
mov
jbe
pop
sub
cmp
imul
inc
test
divb
imulb
popf
jle
std
push
xchg
xor
dec
adc
es
cmpsl
test
lret
jp
mov
mov
sbb
lea
mov
pop
test
loopne
xchg
cmp
jo
mov
cwtl
adc
andb
push
cld
scas
cli
loop
sbb
cmp
dec
mov
add
and
push
and
adc
lea
in
xchg
bound
mov
fst
sar
mov
lret
lods
test
enter
push
mov
stos
xchg
sbbb
stc
insl
fdiv
and
ljmp
sub
pop
jg
stos
jo
sub
jp
sub
add
out
and
mov
xchg
mov
test
mov
dec
mov
inc
mov
add
sbb
cld
fsubrp
icebp
fcmovbe
outsb
call
mov
les
rclb
pop
mov
or
sbb
cs
cmpl
push
add
ret
sbbl
movsl
addps
xchg
rcll
jns
gs
dec
push
aas
shll
sahf
dec
hlt
iret
sti
aas
add
shl
jb
icebp
xchg
aad
sub
dec
in
icebp
dec
add
jbe
es
xchg
es
test
xor
aas
push
push
ljmp
jno
into
ror
pusha
adc
sbb
jg
orb
xor
push
sbb
das
fistl
or
jno
and
into
aaa
stos
jnp
dec
loop
fwait
test
lock
fistl
into
jae
clc
push
add
sub
push
aad
sarb
and
cmp
sbb
inc
outsl
loopne
rcl
jp
sbb
arpl
hlt
add
jge
insl
loopne
adc
push
mov
jecxz
or
jecxz
mov
inc
add
jg
sub
aam
inc
xchg
pop
ficoml
adc
xor
add
fdivs
aad
pop
jb
sahf
xor
imul
int3
mov
mov
push
cs
mov
stos
mov
in
imul
push
scas
cmp
mov
cmp
inc
xlat
push
sub
xor
bound
push
mov
or
cmp
aaa
data16
fdivl
insl
jbe
jne
inc
push
mov
xchg
sub
push
cli
stc
add
rclb
shl
inc
nop
sti
sahf
mov
adc
addl
iret
dec
fisttpll
pushf
dec
jmp
fwait
cltd
int
test
cwtl
imul
sbb
test
cwtl
or
mov
scas
pop
cmp
sarb
aad
ret
inc
sbb
ss
add
cltd
jecxz
push
stos
in
and
jbe
cmp
es
mov
iret
pop
lock
dec
scas
jno
pop
pop
pop
nop
sub
jb
inc
xchg
scas
and
and
test
popa
xor
sub
or
in
scas
xor
shrb
jg
std
ja
repnz
sbbl
cmpsb
cmp
mov
fcmovnb
push
push
mov
mov
and
push
xor
inc
fsubrs
cmp
jne
cmpsb
cmp
jecxz
cmp
ret
ror
dec
xchg
test
jecxz
inc
adc
pop
xchg
mov
xchg
imul
das
aam
sbbl
or
adc
and
outsb
jns
dec
cmp
mov
dec
lock
lahf
ljmp
std
icebp
pop
loopne
loopne
pop
push
adc
int
aaa
in
jno
bound
sub
movsb
sti
nop
sub
dec
inc
call
int3
adc
and
mov
cwtl
outsb
push
fdivrp
dec
arpl
push
addr16
mov
xchg
xchg
mov
jecxz
out
jp
mov
xor
lret
in
ret
call
lods
roll
fdivr
adc
roll
bound
pop
mov
jnp
hlt
ja
stos
mov
mov
xor
xchg
es
add
push
xchg
fs
lahf
aad
es
mov
cmp
addr16
dec
cmpsl
cmpsl
pop
ret
lahf
lds
mov
rcr
daa
mov
mov
mov
fimuls
and
add
in
pop
jecxz
int
and
add
jbe
and
stos
cmpsl
jo,pt
jbe
sbb
leave
push
jecxz
mov
push
lret
sar
arpl
jo
pop
repz
xlat
jp
or
xchg
sub
movsl
insb
add
lds
or
test
or
mov
cli
rol
xor
lds
dec
sub
stos
fxch
and
nop
pop
cltd
pop
xor
inc
lods
cld
jl
pop
out
rorl
sub
imul
mov
inc
stc
int3
stos
push
shrl
addr16
andb
mov
idivl
sub
push
fwait
mov
sub
incb
mov
xor
and
std
icebp
pop
insl
mov
and
fsubs
pop
nop
scas
int
repz
imull
add
sahf
and
rcl
mov
mov
sub
jmp
cwtl
pop
push
xor
or
add
or
pop
out
fisttps
inc
lret
adc
cmp
jg
inc
pop
cwtl
dec
push
movsb
and
cmp
xor
mov
lret
pop
or
and
pop
mov
ret
mov
ljmp
mov
xlat
xchg
lcall
xor
xlat
or
repz
sub
and
cmp
sub
xchg
fwait
mov
pop
or
cmp
mov
dec
in
jl
sbb
mov
call
and
sub
test
mov
mov
and
out
bound
loopne
jne
and
aam
pause
aas
out
sbb
xchg
cmc
push
mov
fimull
pop
subl
xor
cli
pop
sbb
sub
mov
loopne
ficoms
ret
bnd
jno
adc
mov
rcll
movsl
pop
xchg
jne
and
and
repnz
je
andb
xchg
add
sahf
stos
mull
adcb
mov
ja
jge
test
cwtl
ljmp
cmp
jge
mov
shll
sbb
pop
add
test
pop
movsl
js
jg
sbb
sub
push
daa
incb
call
adcl
xchg
rcrb
pushf
adc
or
mov
and
jno
pop
stc
out
imul
popf
aaa
mov
push
cwtl
sbb
cld
xchg
push
pop
xchg
hlt
out
inc
jae
int
mov
fsub
std
aam
cmpsl
sbb
push
jle
push
outsl
mov
mov
inc
adc
ret
sbbb
dec
int3
in
lods
sbb
shrl
pop
enter
jae
mov
lods
inc
add
push
ljmp
jae
adc
mov
stc
in
xchg
push
lret
sbb
cmpsb
push
scas
mov
push
jne
adc
lods
push
in
and
jmp
out
fidivs
adc
add
mov
lods
jmp
cltd
inc
jbe
pop
mov
insl
mov
mov
mov
mov
dec
lret
insl
xor
ret
jns
jnp
pop
push
pushf
mov
mov
idiv
pop
fidivrs
push
repz
clc
faddl
sub
cmc
fisubrl
ror
mov
rorl
fistps
fucomp
imul
stos
mov
fidivs
dec
addr16
out
xchg
into
arpl
and
mov
sub
inc
bnd
or
lds
push
push
sbb
shll
sbbb
gs
mov
roll
or
fs
xchg
pop
nop
adc
add
movsb
xchg
rol
adc
inc
ret
jno
pop
pusha
testb
and
lret
push
adc
test
xor
jmp
mov
xor
inc
pop
jbe
dec
in
add
mov
cmp
mov
inc
pop
adc
push
cmovbe
int
mov
fucomi
in
mov
insb
add
jmp
pop
xchg
and
adc
test
mov
test
xchg
push
fstpt
int
mov
inc
out
les
jg
mov
cmp
push
cmpsb
inc
in
push
insb
cmpl
push
loop
fnstenv
outsl
mov
sbb
scas
cmp
mov
fdivl
push
je
and
mov
sbb
int
lds
sahf
push
add
sbb
enter
xchg
adc
push
mov
add
xchg
sbbl
inc
in
sti
xor
xor
cs
bound
jg
icebp
insb
push
mov
mov
movsl
test
inc
mov
int3
fs
and
sbbb
or
dec
lahf
stc
pop
sbb
jmp
xor
pop
push
cmc
mov
jecxz
cmp
lret
mov
lret
push
sub
das
add
cmp
push
mov
lods
aaa
jmp
xchg
inc
out
inc
xchg
daa
ss
mov
adcl
or
fnstsw
pop
iret
movsl
inc
add
mov
leave
dec
int
xchg
aad
adc
push
cwtl
orl
cli
jne
jns
inc
stos
sub
rcll
shlb
popf
shlb
or
lock
push
cmp
inc
jnp
mov
sbb
sub
push
pop
sbb
jecxz
sub
adc
pushf
and
push
cmpsb
mov
mov
cmpsl
js
leave
adc
cltd
vmovhpd
jecxz
addr16
roll
add
and
sub
fsub
adc
cltd
inc
ret
ds
out
neg
icebp
adc
pop
inc
lret
jbe
loopne
icebp
xchg
mov
pusha
add
imul
sub
xchg
push
pop
cmp
aad
add
mov
mov
inc
outsl
mov
inc
daa
cmp
testb
pop
lahf
fisttpl
xor
sarl
mov
fld
in
sti
shlb
shll
xabort
cli
xor
ret
jo
pop
movsb
mov
orb
in
aas
mov
mov
sar
call
out
mov
out
inc
gs
mov
mov
mov
cld
cmp
mov
and
mov
fbstp
push
mov
sbb
cmp
xchg
mov
loopne
mov
inc
push
sub
jnp
jo
lahf
pushf
inc
pop
xchg
andl
pusha
in
push
adc
mov
aam
shll
fs
mov
cmp
dec
fsubrs
or
aad
fisttps
es
lea
test
mov
adc
inc
xlat
or
arpl
dec
jns
sub
out
lcall
mov
loopne
mov
push
adc
cwtl
stos
inc
mov
mov
inc
mov
out
in
cs
mov
adc
inc
scas
add
mov
lods
data16
add
test
and
pop
int3
push
mov
insl
mov
or
mov
inc
xlat
pop
push
adc
xchg
pop
mov
push
inc
cmp
xor
movsl
dec
jecxz
jbe
cwtl
and
and
or
xchg
mov
rorl
push
icebp
scas
sbb
ret
push
mov
pop
sub
in
inc
iret
test
add
ljmp
cmp
add
lods
inc
js
insl
add
and
fisttpl
and
cmp
jnp
negl
push
adc
and
add
or
scas
ret
imul
in
xchg
enter
cmp
inc
xchg
pop
leave
int
test
add
ds
lret
mov
xorl
das
or
mov
mov
dec
cmp
decl
test
adc
pop
hlt
jmp
inc
xlat
dec
mov
mov
jecxz
sahf
adc
jne
or
cwtl
pop
inc
sti
in
clc
sub
loope
iret
push
xor
or
adc
inc
imul
inc
mov
loop
xchg
push
aaa
dec
loope
adc
inc
pop
or
xchg
xor
shlb
in
dec
push
push
fnstcw
into
pop
shl
jge
shr
adc
cmpb
add
repnz
arpl
xchg
mov
out
sbb
push
fildll
mov
je
fisttpl
sti
pop
mov
inc
or
cmc
and
cmp
inc
sub
push
test
xchg
sub
cmp
mov
push
xor
enter
cmp
sahf
das
les
in
test
and
outsl
movsb
js
jg
fs
mov
xor
fbld
pop
test
or
repz
xor
js
and
mov
mov
aas
mov
mov
enter
ds
test
pop
adc
push
xor
icebp
xchg
call
push
xchg
inc
jmp
ret
scas
and
mov
int3
cmp
pop
pop
or
pop
out
mov
or
push
daa
sti
adc
mov
mov
test
mov
lcall
inc
add
cs
jge
movsl
add
push
pop
mov
mov
adc
sub
adc
push
and
sub
and
sbb
sbb
bnd
shll
insl
jp
movsl
dec
jns
jle
cwtl
mov
jae
mov
and
in
jle
out
mov
dec
loopne
shlb
imul
ja
in
ss
adc
and
mov
jns
xchg
in
stos
popf
xor
test
sti
dec
orb
xor
outsl
sub
aam
push
xor
sub
imul
stc
imul
xchg
adc
mov
pusha
inc
ficomps
rcll
jle,pn
add
ret
mov
mov
sbb
cmp
movsb
es
aaa
cmp
and
scas
inc
jo
rol
mov
rorl
adc
jnp
lret
cmp
push
push
mov
push
lret
mov
and
inc
pusha
out
and
ret
and
jp
leave
mov
jmp
aaa
jmp
mov
mov
fadds
jge
sub
imul
inc
rcrl
test
aas
faddp
inc
mov
call
dec
das
sahf
or
lret
mov
adc
and
mov
mov
adc
je
mov
loopne
cmpsb
loop
cld
das
add
mov
push
outsl
and
out
daa
adc
or
mov
pop
sub
or
dec
sahf
or
mov
mov
jl
out
add
mov
inc
inc
inc
dec
test
sti
test
shll
sbb
cs
cwtl
add
pop
cmpsl
mov
and
mov
call
or
sub
or
rcll
mov
sbb
xlat
and
mov
jae
pop
sbb
jmp
push
dec
dec
and
push
loop
cmp
addr16
test
dec
cmp
fcompl
mov
dec
shll
dec
decb
mov
outsb
inc
sbb
popf
adc
pop
pop
fistps
lahf
in
adc
lods
xor
jecxz
jle
mov
mov
push
or
daa
pop
fwait
push
inc
xchg
push
sub
shlb
movsl
in
inc
adc
adc
push
lock
dec
scas
fnstsw
enter
fucomp
std
adc
ljmp
lahf
mov
xchg
sub
sub
ds
pop
lods
das
dec
mov
leave
fisttps
cmc
sbb
cmp
stos
mov
mov
movsb
xor
and
ljmp
mov
popa
pop
cmp
jno
dec
mov
mov
add
xchg
sub
jne
das
or
js
jl
dec
pusha
mov
gs
jo
mov
sub
repnz
add
fbld
sub
xchg
add
inc
pop
cwtl
cmp
popa
pop
adc
test
dec
xchg
movsl
test
out
clc
add
imul
subb
xchg
mov
adc
pop
dec
imul
repnz
xlat
ja
pop
fimull
sub
and
mov
cmp
insl
adc
xchg
push
and
test
ja
add
movsl
or
loopne
fwait
mov
add
xor
ds
inc
notl
jp
jne
pop
jnp
inc
aaa
stc
mov
imul
inc
inc
sbb
cltd
std
sbb
xor
pushf
push
fnsave
jmp
mov
inc
xchg
pushf
stos
loopne
mov
test
sahf
jle
push
xor
mov
pop
push
cli
pushf
loopne
pop
adc
ljmp
pop
dec
dec
cmp
cmp
xor
sbb
das
sub
push
cmpsb
cwtl
pop
repz
and
or
pop
dec
mov
les
push
cmp
xlat
jnp
call
xor
imul
movsl
decl
je
xor
and
arpl
fcoml
inc
sarl
insb
add
in
imul
mov
iret
cld
ss
fisubl
test
adc
cs
lcall
pop
push
hlt
jb
mov
adc
mov
and
scas
pop
ror
add
push
mov
fimull
inc
add
xchg
mov
fsub
push
popa
and
mov
stos
push
into
push
shrl
cltd
loope
outsb
call
lods
rorb
inc
imul
test
repnz
iret
jmp
cli
incl
xchg
xchg
add
aas
pop
outsb
jo
or
es
jp
push
mov
ret
fiadds
aam
test
in
out
xor
popa
stos
jno
aam
iret
pop
pop
jmp
dec
mov
inc
push
jmp
push
cmpsb
mov
insl
mov
mov
and
andl
loopne
mov
test
rclb
test
scas
dec
mov
pushf
cltd
or
lret
jp
dec
cmp
aam
dec
fdivl
aad
xchg
or
pop
add
ljmp
push
jne
pop
addl
inc
sub
sub
adc
enter
pushf
or
or
sbb
add
orb
sub
out
mov
out
pop
cmp
lret
mov
adc
lret
in
out
repnz
push
in
and
jne
or
xor
mov
jo
jne
fisubl
cmp
fistl
sti
jbe
cmpsl
xchg
addr16
icebp
pop
sbb
out
in
sarl
shlb
add
fbstp
push
enter
out
daa
or
pop
pop
sub
xchg
sbb
repz
pusha
daa
push
test
jne
cwtl
adcb
adc
mov
enter
jle
and
leave
pop
jmp
sbb
lret
add
out
pavgw
cmp
test
movsl
sbb
mov
xchg
mov
aad
adc
fnstcw
inc
mov
mov
xor
shlb
ljmp
inc
adc
test
adc
repz
incl
arpl
int
fldenv
mov
adc
mov
mov
adc
push
mov
jg
mov
inc
out
mov
push
mov
mov
mov
sahf
xchg
sub
push
inc
flds
stos
cmp
outsl
cwtl
push
pop
std
or
xor
add
mov
inc
into
in
andb
jmp
xor
mov
cli
aas
test
xor
lahf
inc
adc
jle
mov
outsl
sub
mov
fwait
out
cmp
push
sub
add
and
sbb
push
cmp
cmc
mov
mov
imul
jo
push
cmp
test
movsb
lock
add
repz
mov
popf
popa
ret
sub
clc
clc
sbb
sbb
mov
pop
std
cmp
ficompl
outsl
push
or
jl
and
nop
push
sub
pop
mov
aaa
enter
xor
xor
pop
pop
dec
push
push
cmp
sahf
test
add
pop
xchg
adcb
or
out
sub
js
cmpsl
lds
dec
or
lea
mov
hlt
fnsave
in
pushf
mov
dec
lock
sti
ja
xlat
sub
imulw
insb
xchg
testb
adc
pushf
inc
das
mov
orb
cli
mov
inc
int
push
sbb
xor
dec
push
inc
xchg
ds
das
jno
sub
mov
jns
pop
aaa
and
and
push
nop
mov
lret
adc
outsb
add
push
mov
shr
sbb
lods
test
or
scas
inc
int3
dec
xchg
cs
movsb
and
sub
icebp
int3
sub
push
sbb
std
pop
scas
jle
jg
hlt
mov
add
pop
sbbl
test
jns
stc
mov
loopne
aam
xor
subb
push
jb
sahf
sub
and
dec
or
cmp
repz
mov
nop
xchg
or
lock
xor
sbb
cld
ja
push
call
test
mov
mov
mov
cmp
pop
lds
pop
add
sahf
fiadds
or
sub
ljmp
es
push
pop
int3
push
jmp
pavgw
or
sub
sbb
dec
dec
neg
in
adc
push
fnstenv
or
out
leave
pop
dec
out
jmp
ds
dec
frstor
dec
jmp
into
adcl
int3
dec
repnz
or
mull
in
push
push
mov
push
jnp
andl
sub
aad
jge
clc
dec
xlat
mov
inc
mov
daa
lret
or
jae
movsl
cmp
adc
jne
adc
out
add
js
adc
in
clc
loope
repnz
dec
outsb
int
cmc
mov
out
add
mov
fwait
js
mov
mov
jo
in
adc
xor
imulb
mov
sub
fcoml
adcl
pop
push
movsl
pop
data16
add
in
fisubs
repz
ljmp
mov
ret
rorl
cltd
mov
jecxz
nop
out
int
popf
ss
add
fisttpll
push
aaa
cmp
mov
pop
jmp
mov
pushf
pop
and
jnp
pop
sub
jne
push
add
inc
mov
loopne
cmc
xor
inc
pop
jae
lahf
mov
jecxz
cmp
jecxz
push
adc
andl
enter
lea
or
mov
cld
push
and
push
or
sahf
lods
ljmp
aas
dec
imul
nop
imul
stos
stc
test
and
rcl
jae
test
das
push
and
bound
mov
dec
adc
jb
shrl
test
shr
push
fistpll
out
add
fnstcw
jecxz
jecxz
clc
fidivs
xor
cmp
bound
mov
ret
mov
shll
out
out
stc
mov
data16
jb
adc
dec
nop
push
pop
sub
les
sub
mov
or
pop
pop
jg
push
je
out
mov
aam
int
in
outsb
ljmp
cmp
mov
fnsave
push
push
mov
xchg
jmp
pop
repz
ds
dec
add
cld
lds
in
or
xchg
add
xchg
stos
xor
push
movsl
cld
pop
cltd
jo
xchg
mov
ret
dec
xor
sbb
cwtl
add
xor
xchg
sub
mov
mov
mov
inc
add
jl
bound
xchg
and
sti
hlt
mov
mov
mov
or
and
bound
xchg
cmpsl
les
cld
and
testl
loop
add
call
loop
sbb
push
std
pop
js
out
jmp
and
adc
and
cltd
and
gs
cmp
cmp
je
adc
insl
mov
sub
sub
add
lock
sbb
test
mov
outsl
mov
push
dec
bound
cltd
mov
pusha
jnp
or
cmp
out
xchg
fwait
imul
movsb
adc
mov
fwait
xor
mov
mov
sbb
xchg
imul
in
push
hlt
cmp
out
gs
push
push
filds
inc
mov
sbb
sbb
sub
sbb
outsb
cmp
test
inc
mov
jp
inc
lret
fdivrp
mov
push
mov
stos
das
lcall
mov
pushf
test
cmp
stos
cmp
je
mov
sub
imul
jmp
dec
inc
pusha
cmp
pop
jo
cmp
lret
inc
pop
push
mov
fisubrs
jle
mov
ret
and
jmp
cmp
mov
stos
adc
lcall
hlt
add
push
cmpsl
arpl
dec
aad
lret
mov
cwtl
jo
xor
push
dec
jo
js
push
push
adc
sahf
jb
aas
stc
je
mov
mov
inc
out
sarb
imul
rorl
stc
push
test
inc
add
imul
mov
add
jae
sub
push
sub
clc
pop
inc
pop
aad
in
add
cmpsl
jge
push
sub
xchg
adc
cmp
fs
fcomp
xor
mov
fidivs
push
das
into
pop
dec
cld
push
test
outsl
cmp
scas
and
inc
lods
jno
dec
sub
jge
ljmp
xor
jne
inc
cwtl
push
cwtl
add
mov
cmp
out
adc
mov
jmp
jle
add
pushf
pop
and
push
add
shll
xchg
push
push
mov
outsb
test
popa
cmp
das
das
pop
in
xor
xchg
mov
out
test
lcall
xor
dec
jns
sbb
aas
mov
cmp
mov
inc
out
adc
jne
jecxz
push
ds
xor
ret
outsb
push
daa
inc
xchg
mov
add
addr16
push
mov
fnstenv
bound
outsl
push
stos
cmp
std
xchg
mov
push
dec
aaa
jns
push
jo
xchg
push
add
mov
insb
dec
outsb
mov
mov
rcl
icebp
add
outsb
lds
cmp
xchg
adc
mov
adc
jb
popa
scas
inc
jbe
jb
leave
pop
aam
mov
std
dec
add
push
lcall
xchg
inc
test
dec
push
out
sahf
aas
divb
mov
addr16
scas
mov
sbb
mov
loopne
aam
inc
adc
cmc
sbb
ret
test
rorb
inc
lock
loopne
icebp
fwait
mov
dec
addr16
jnp
cmp
mov
xchg
jne
mov
outsb
jle
lahf
sahf
shrb
dec
add
sbb
movsb
xchg
push
mov
ljmp
scas
cmpsb
leave
push
sub
int
je
or
cmp
jle
fbld
xor
add
add
sub
dec
sbb
or
adc
bound
xchg
dec
dec
icebp
test
js
and
jmp
and
lahf
out
dec
imul
stos
mov
pop
popf
dec
and
pop
imul
jo
add
xor
push
and
shll
out
pcmpgtd
daa
out
popa
xchg
test
cmp
fidivrs
mov
sbb
nop
xor
push
mov
inc
fsubrl
pandn
movsb
addr16
mov
daa
dec
xlat
sub
cmp
inc
adc
cmp
pop
out
sub
or
inc
fnstcw
pop
daa
movsb
add
aas
adc
jae
in
jmp
cltd
sub
jmp
sarl
mov
leave
in
sti
or
adcl
lods
or
ficomps
int3
xchg
shlb
je
or
nop
sub
stc
ret
pop
ljmp
push
jle
mov
pop
pop
adc
clc
sbb
adc
ja
arpl
or
cmpsb
clc
popa
or
xchg
sbb
add
bound
insl
test
inc
hlt
inc
jmp
stc
lea
outsl
sbb
push
imul
loope
jns
inc
pop
movsb
ss
push
add
fdivs
sub
dec
lods
jg
sbb
outsl
dec
iret
jge
dec
push
xor
orl
jo
pusha
das
outsl
daa
add
sub
dec
fdivs
or
iret
adc
and
out
push
inc
and
ds
mov
jmp
jg
data16
or
popa
xor
loopne
cld
fistps
fnstenvs
sub
shlb
lret
sbb
pop
pop
addl
xor
testb
cmp
popf
push
mov
xlat
repz
lock
xor
mov
ss
shrl
mov
xor
ret
loope
push
data16
test
lahf
dec
mov
mov
les
cmp
js
xlat
outsb
jmp
mov
ss
mov
movsb
jecxz
add
xor
leave
add
stos
xchg
pop
mov
int3
mov
sbb
stos
test
das
fwait
scas
pusha
loope
xor
ds
in
scas
pop
inc
pusha
pop
shlb
test
add
cmp
xor
int3
rcrb
push
loopne
dec
icebp
push
sbb
push
outsb
pop
inc
popa
cmp
sub
xor
xor
sahf
nop
xchg
mov
in
aas
fwait
push
and
fiaddl
pop
push
push
mov
idivl
pop
cmp
mov
push
fisubrl
push
bound
push
mov
adc
in
cmp
ja
pop
shrb
dec
or
paddusw
adc
es
aaa
cmp
dec
xor
add
test
sahf
rcll
ja
jb
or
arpl
mov
arpl
pop
int
movsl
hlt
outsl
mov
daa
cmp
or
pop
sbbb
mov
mov
push
fdivrl
xchg
cmp
adc
push
test
imul
lcall
xlat
ss
cmp
pushf
dec
scas
dec
inc
std
push
ljmp
cmp
xchg
dec
mov
lock
std
in
icebp
popa
repz
lret
fildll
vpshufd
push
lds
jae
xor
sbb
xlat
fcoms
orl
xor
sub
fcmovne
repz
sub
aam
or
inc
xchg
jecxz
es
pop
shlb
and
roll
push
add
mov
inc
add
sti
cmp
mov
out
aaa
push
sbb
es
fwait
mov
shrl
out
inc
xor
repnz
das
fistpll
cmpsl
test
sub
jns
lret
sbb
mov
sbb
fidivrl
fldcw
or
scas
call
dec
sbb
and
mov
pop
add
mov
pusha
mov
push
push
jge
push
mov
xor
pop
icebp
mov
dec
in
jecxz
sti
cmp
sbb
inc
lods
sub
lahf
test
or
dec
mov
out
add
jmp
adc
gs
jo
push
jae
fbstp
and
jle
arpl
sub
scas
inc
call
or
pop
sub
jne
mov
dec
fistl
iret
gs
add
icebp
xchg
lds
loopne
in
ss
mov
std
mov
jle
sub
and
dec
dec
and
rclb
push
pusha
ss
jb
lds
pop
orb
cmp
xchg
jne
xchg
mov
cs
clc
std
or
xchg
sub
test
cltd
xor
inc
push
in
jno
push
leave
lea
movsb
mov
add
sahf
icebp
inc
insb
xchg
callw
mov
jecxz
aad
lods
pop
cmp
punpckhdq
adc
sub
jp
sahf
cmpsb
ja
cmp
iret
add
add
testl
inc
shr
jbe
popa
mov
xchg
das
push
and
loopne
xchg
mov
dec
dec
gs
lock
jbe
pop
and
jmp
inc
xor
inc
mov
ficoml
dec
xchg
mov
out
insb
mov
or
push
call
lods
shlb
shrb
testl
in
xorl
adc
cwtl
or
cltd
push
push
add
outsb
sub
fldenv
jmp
fsubrp
xor
push
test
outsb
jnp
push
push
xor
movsb
in
adc
inc
testl
pop
shrl
neg
imul
lods
cmp
mov
rcll
hlt
or
pop
mov
pop
into
sub
push
nop
push
negl
fdivl
inc
mov
sahf
sbb
pop
or
lods
and
jecxz
ficompl
rorl
scas
out
outsb
gs
arpl
mov
or
fistl
sub
xchg
cmp
stos
jmp
pop
sbb
cmp
out
inc
pop
cmp
fsts
mov
sbb
fldt
add
mov
loop
sub
imul
stos
js
mov
loopne
in
out
das
mov
in
mov
adc
cmp
stos
in
cwtl
movsl
decb
mov
mov
sub
enter
add
inc
repz
and
xchg
xchg
cs
push
ficoml
push
mov
adc
test
jns
es
mov
sub
mov
mov
sub
cltd
push
pop
mov
es
pop
mov
mov
rep
test
inc
add
mov
test
sti
xchg
cli
popl
jae
inc
arpl
jp
jg
adc
mov
inc
fdivl
sbb
les
and
mov
ljmp
push
es
sbb
ror
jb
pusha
int
sub
mov
and
stos
and
add
test
movsl
and
and
rcrb
or
or
cwtl
stos
sbb
pop
test
scas
add
lods
or
or
push
jne
and
call
or
imul
jg
add
mov
mov
mov
ljmp
cmc
adc
and
cmp
ficoms
pop
and
ja
in
add
jae
and
mov
bound
in
hlt
mov
mov
dec
jnp
adc
xor
ret
lock
xor
arpl
call
push
jle
and
das
or
pop
cmc
daa
mov
movsl
ret
cmp
ljmp
outsb
mov
lea
mov
adc
inc
insb
aaa
mov
and
jo
pop
push
mov
aad
lock
fnstsw
insl
lea
jp
lahf
add
pop
js
mov
pop
sub
inc
idiv
mov
or
insl
aaa
daa
mov
fisttpl
into
dec
lods
jmp
imul
push
icebp
cwtl
test
daa
fidivrl
jae
loope
add
sub
imul
out
dec
sbb
mov
fisttps
stos
out
sub
cmp
push
je
dec
lods
xlat
ret
fisttps
loop
nop
in
pushf
scas
cmp
cmp
lock
cli
or
cmpsb
xchg
insl
call
xorb
movsl
xchg
orl
or
nop
sub
inc
sahf
jno
pop
jp
mov
popf
xchg
repnz
fwait
sbbl
sbb
xor
in
jle
sub
dec
in
dec
ljmp
bound
nop
mov
and
or
mov
fistpl
inc
push
adc
pop
cmp
fwait
cmp
and
pop
out
imul
pop
movsb
adc
pop
lahf
cld
into
xor
rolb
enter
test
inc
ret
pop
jne
int3
fsubrp
mov
adc
dec
int3
mov
mov
in
icebp
cltd
sar
popa
xor
and
scas
movsb
pop
pop
icebp
mov
push
daa
lcall
roll
test
and
sub
insb
xlat
cmp
dec
ret
fildll
or
and
sub
fs
lret
pop
in
fists
pop
inc
testl
inc
adc
xchg
outsl
cmp
shrb
jne
push
dec
inc
fnstcw
add
lret
pop
je
adc
lahf
xor
jg
mov
cwtl
mov
dec
loope
adc
pop
push
cmp
sbb
mov
aaa
cwtl
push
insl
mov
mov
out
add
call
stc
cmp
out
dec
mov
jmp
iret
xor
sbb
popf
inc
dec
popf
xor
arpl
add
ds
jp
xchg
pop
into
mov
fistl
les
xchg
push
xor
jecxz
sbb
test
mov
pop
xorb
sub
cmp
jne
sbb
bound
aas
rolb
mov
aam
dec
jp
aam
daa
inc
push
dec
test
cwtl
dec
cmp
mov
dec
and
xlat
addl
xor
test
mov
sbb
sti
push
adc
push
mov
es
mov
loopne
test
dec
push
sbb
sub
lret
lret
lock
adcl
cmp
sahf
xor
inc
sahf
mov
add
out
sbb
mov
jo
mov
jne
clc
push
aaa
in
ficoml
out
pop
push
andb
inc
fcom
pusha
xor
pusha
jle
jae
fimull
push
sbbb
xor
mov
arpl
jnp
inc
cmp
sub
add
icebp
pop
push
mov
mov
popf
test
imul
jb
push
aad
stos
aas
shrb
aaa
leave
mov
mov
fs
adc
imul
movsb
push
outsl
jnp
bswap
popf
jge
dec
inc
fcomps
sbb
stc
iret
aaa
push
outsb
in
sub
push
mov
cmp
cmpsl
aas
fldenv
or
inc
imulb
push
mov
inc
push
inc
cmc
dec
or
jnp
into
loop
cmp
fldt
fwait
xor
mov
ljmp
dec
jmp
sub
xor
sub
lret
data16
aad
loopne
popf
mov
add
jmp
rorb
mov
inc
xchg
push
je
mov
inc
sbb
insl
int
in
or
jecxz
std
adc
xchg
sub
adc
mov
add
in
test
push
push
mov
mov
sub
adc
int
mov
xchg
sub
in
inc
testl
cltd
ja
arpl
fbstp
xor
push
or
in
ds
sarl
push
cltd
pop
repnz
xchg
outsl
add
mov
adc
jl
cmp
fldt
pop
fwait
pop
mov
stos
mov
shl
jmp
mull
pop
ret
mov
repnz
mov
sbb
inc
shlb
ss
incl
shll
sub
sbb
int3
adc
cmp
pop
insb
test
stos
sub
mov
sub
and
mov
mov
pop
push
call
adc
dec
or
mov
cltd
inc
sbb
loope
xchg
data16
movsl
inc
and
out
test
mov
pop
mov
je
jae
push
mov
add
scas
clc
inc
xlat
mov
sbb
add
rcl
push
xchg
mov
repz
test
push
mov
ret
outsb
add
pop
adc
popa
imull
cmp
arpl
xchg
add
mov
test
fsubr
jmp
and
sbb
movsl
pusha
test
sbb
int
xorb
outsl
icebp
fistl
cli
subb
xor
push
in
sbb
js
push
cmovbe
or
dec
aam
adc
sahf
cmpb
shlb
adc
sbbl
in
lock
push
pop
arpl
pop
add
mov
push
push
cmp
outsb
insl
das
test
inc
pop
ret
lock
hlt
jg
iret
mov
popa
jnp
xchg
rol
sahf
scas
sbbb
dec
sarl
stos
dec
push
out
scas
int
and
leave
jg
push
hlt
out
dec
inc
rol
leave
pop
rcll
jnp
dec
repnz
leave
xchg
imul
push
les
jp
lods
test
aas
jo
and
cmp
rclb
lea
scas
mov
in
jmp
sbb
inc
rorb
adc
dec
js
dec
in
inc
add
lret
fldenv
repz
xchg
jo
add
call
ss
imul
adc
in
cmpl
fcom
pop
or
sarb
and
mov
xor
jnp
xchg
jo
fbld
cmpsb
repnz
sti
arpl
jmp
or
nop
js
cli
push
aad
push
pop
jbe
sbb
sbb
cmp
lcall
scas
inc
add
jb
push
movsb
cli
dec
out
mov
insl
enter
jg
das
push
inc
popa
loopne
call
fwait
push
jo
pushf
les
mov
shll
enter
femms
pop
andb
mov
bound
test
mov
sbb
jae
cwtl
push
mov
jg
mov
mov
repnz
sbb
push
dec
inc
adc
xor
sub
fisubl
adc
add
xor
mov
arpl
sub
stos
inc
pop
popf
and
rolb
sti
inc
mov
mov
push
popf
push
imul
jb
cmpsl
aam
mov
adc
shlb
pusha
imul
xor
adc
xor
fs
pushf
nop
fists
pop
out
xor
and
jae
xchg
movsl
leave
inc
ffree
mov
fs
lods
in
cld
rcrl
ds
call
ja
sbb
rcll
xor
repnz
and
add
sub
clc
cmp
call
ret
jge
jnp
xchg
call
inc
mov
pusha
testl
jmp
adc
push
rcrl
dec
mov
addl
aas
adc
inc
out
addr16
xor
inc
dec
push
fidivl
inc
mov
rorb
mov
shll
pushf
hlt
mov
xchg
or
ret
mov
mov
dec
loope
fdivr
lcall
mov
sub
xchg
dec
pop
movsb
repnz
pop
xchg
add
fs
sahf
stos
test
cmpsb
pushf
cmp
subb
rorl
push
addb
mov
dec
push
xchg
mov
lds
adc
ds
mov
pop
mov
in
stos
loope
test
inc
inc
cli
dec
inc
pop
gs
pop
imul
lret
xor
mov
mov
popa
mov
lea
es
xor
dec
sub
lahf
xchg
jl
pop
pop
inc
pop
lods
xor
fldcw
div
daa
rcrb
stos
cmpsl
xor
xor
decb
loopne
lds
shll
test
sub
mov
cmc
adc
push
dec
push
cmp
push
jge
cld
das
cmpb
jecxz
int
fs
aas
and
mov
push
fs
pusha
xchg
xor
das
icebp
mov
icebp
jge
inc
push
adc
movsl
and
mov
dec
jp
cld
rcpps
mov
jbe
scas
and
cmc
mov
jge
in
xchg
insb
mov
arpl
fwait
mov
icebp
xchg
outsl
les
or
addr16
mov
jecxz
fmull
lea
mov
stos
mov
les
or
loop
pop
out
shll
in
sbb
dec
jne
dec
pop
add
sbb
in
fbstp
push
xchg
mov
fdivrl
push
adc
std
jle
xorl
sub
xchg
sub
testl
pop
add
jno
je
inc
xchg
orl
pop
mov
lods
ja
loope
inc
mov
ret
scas
mov
int3
pop
xchg
orb
sub
sub
roll
jbe
or
lcall
sahf
lock
xor
adc
add
mov
pop
sbb
dec
xchg
int3
mov
pop
add
in
ljmp
fsubrl
arpl
sbb
lea
cmp
adc
xor
jecxz
push
mov
mov
and
inc
adc
sub
je
cmc
sete
jp
movsb
mov
loop
aaa
and
or
inc
sahf
ds
sbb
mov
pop
ja
jns
test
out
push
test
ret
or
das
add
fld
push
cld
out
mov
frstor
cmp
movb
cmp
lds
sahf
filds
xchg
pop
fs
mov
cld
in
adc
and
stc
add
sbb
test
mulb
cmp
sub
les
out
mull
insb
in
add
and
fs
inc
addb
dec
mov
lea
test
push
test
add
ds
nop
in
mov
add
jmp
mov
jge
pop
push
fstpt
mov
fucomp
bound
xchg
popf
ds
call
lcall
cmp
dec
rolw
out
in
push
bound
push
push
repz
icebp
adc
mov
popf
sub
dec
in
pop
mov
js
hlt
test
cmp
aam
jnp
pop
cmc
xchg
sub
sbbl
aas
adc
xorl
aaa
data16
movsb
ret
push
mov
inc
icebp
pop
iret
iret
xchg
sub
cmp
movsb
xchg
cmp
dec
rorl
mov
shll
push
leave
cmp
mov
mov
or
push
lcall
or
jb
mov
aaa
arpl
arpl
or
fnstsw
imul
mov
jae
aam
sbb
sbb
dec
movsb
mov
jbe
movsl
std
sub
adc
push
cmpsl
inc
adc
add
sahf
call
pusha
jbe
enter
call
sbbb
and
fisttpll
loop
cmc
test
or
ret
or
sub
repnz
add
jo
mov
jecxz
sub
dec
clc
jmp
popa
jecxz
leave
and
xchg
call
xorb
loop
lahf
test
jmp
imul
and
mov
aad
sub
aaa
dec
dec
mov
lahf
aad
add
test
mov
jge
and
fsubrs
and
xor
orl
or
pop
cmpsb
je
sbb
dec
or
xchg
sub
rep
pop
lss
insb
scas
cmp
imul
sub
test
shlb
test
mov
mov
dec
test
jp
adc
push
ja
xor
xor
movsb
jg
sub
pushf
xor
or
fisubs
loope
cltd
arpl
outsl
popf
and
inc
fidivl
testb
pop
cmp
dec
sub
jnp
out
outsl
push
sbb
sti
jge
and
test
iret
cmp
jge
xor
ret
mov
in
inc
lahf
pop
add
adc
sti
lea
ljmp
xlat
mov
and
xchg
hlt
cmp
mov
enter
fsubr
fwait
mov
repz
int3
nop
mov
ret
add
pusha
pop
jnp
or
loop
add
xor
xor
shlb
int3
inc
jo
and
in
push
repnz
xor
adc
mov
mov
js
dec
sbb
sub
push
ja
inc
push
mov
pusha
xchg
int3
dec
push
jae
xor
ss
jle
jo
cmp
mov
xor
out
loope
nop
or
or
add
pop
cld
shl
cmpb
adc
fsubr
xor
jmp
cmc
pop
repnz
lret
sub
mov
mov
add
inc
inc
clc
sub
pushf
sbb
shr
or
testb
repnz
or
in
int
xchg
push
pop
xacquire
dec
ficompl
xchg
mov
push
aas
push
data16
sbb
iret
push
mov
or
cmp
mov
xchg
not
xor
ret
ret
xchg
movsb
mov
and
sub
outsb
jl
xchg
mov
mov
inc
fsubrs
or
and
mov
in
mov
stos
nop
inc
pushw
mov
je
pop
popa
je
imul
xchg
out
xor
mov
adc
inc
pop
rclb
push
push
stc
mov
jp
scas
push
in
pop
in
cwtl
or
jmp
sub
cmc
ljmp
xchg
je
jnp
pushl
xchg
scas
lds
dec
xchg
idivb
push
ret
sbb
iret
and
add
cmpsb
inc
ficoml
mov
xorl
dec
and
cltd
mov
jmp
test
sbb
shrb
cmpsb
sub
cmp
cld
mov
jae
mov
pushf
ret
fmull
lods
arpl
sbb
fnstenv
nop
mov
icebp
stc
mov
jb
cmpsl
jecxz
xchg
out
lret
leave
js
sub
jp
mov
insl
fwait
mov
adc
fistpl
lock
out
xor
js
xchg
cmp
jno
aam
or
or
lock
imul
cmpsb
fldl
push
mov
clc
frstor
cli
cli
stos
push
dec
push
ds
pop
jmp
pop
inc
sbbb
aas
push
push
into
and
icebp
sbb
push
insb
mov
jb
xor
xor
in
call
stos
lds
stc
out
mov
cmc
aas
ret
call
bound
je
jp
inc
fiadds
mov
movsl
cmp
pusha
aas
add
cmp
js
fcoms
sarl
and
movsl
inc
and
gs
jmp
and
mov
lret
test
pop
js
nop
mov
sbb
enter
dec
mov
mov
adc
movsb
jl
mov
sbb
js
mull
or
pop
in
sbbb
jp
cld
add
pop
shrl
pop
push
mov
cmpsl
mov
cmp
das
repnz
das
lods
test
arpl
pop
out
sub
adc
leave
inc
push
lods
stc
je
mov
sbb
aas
mov
rcrl
mov
call
dec
decl
add
inc
add
add
pushf
lods
or
jp
dec
outsl
add
shlb
push
out
sbb
int3
adc
loope
mov
ret
xchg
mov
jge
jno
sub
mov
fimuls
dec
repz
jbe
inc
cmp
jb
fxch
fisubs
test
sbb
lret
mov
adc
rcl
lcall
test
bound
push
mov
xchg
sbb
test
aad
fcmovu
arpl
out
xor
mov
sub
aaa
pop
repnz
pop
pop
xor
pop
int3
arpl
pushf
ljmp
and
loop
push
leave
test
js
mov
or
adc
or
fwait
adc
ss
outsb
inc
loopne
rclb
cmp
pop
mov
dec
rorb
sub
adc
les
iret
pop
mov
movsb
jae
adc
dec
jp
push
cmpsl
lods
push
call
jo
ss
mov
push
icebp
pop
lcall
mov
sar
mov
mov
les
icebp
imul
lods
adc
ljmp
push
or
dec
adc
dec
popa
mov
call
pop
ljmp
pop
scas
fcoms
fstps
cmpsb
sbb
inc
push
mov
add
jle
int3
mov
push
adc
in
test
add
or
std
adc
lret
mov
aas
jg
pusha
cmp
sub
sahf
out
add
xor
mov
mov
pop
mov
test
adc
add
mov
sbb
jo
jae
ljmp
jmp
je
push
xchg
in
push
fcom
cmp
jne
out
push
mov
xor
jge
jb
cmp
add
std
test
orl
in
xor
repz
xchg
add
push
call
mov
insl
scas
xchg
jge
out
cmp
dec
push
loop
pop
cs
push
inc
ficoml
mov
cmp
jno
jl
and
lahf
lahf
adc
add
jp
mov
sbb
mov
mov
push
call
and
in
push
mov
outsl
shll
outsb
ret
inc
addl
mov
push
jmp
fwait
xchg
data16
adc
adc
inc
pusha
pop
jbe
xchg
lods
mov
test
ret
dec
pusha
cmc
pusha
or
into
ss
lcall
sub
dec
jns
push
mov
into
mov
dec
daa
lds
push
add
mov
xchg
gs
repz
stos
in
enter
loop
icebp
dec
out
test
xchg
js
dec
cli
and
test
xchg
and
stc
je
iret
cmp
sbb
lret
push
fisubrs
ja
pop
add
dec
cmp
pop
dec
adc
mov
je
inc
mov
mov
mov
jg
dec
push
mov
mov
fisubrs
insl
jl
fucomp
adc
dec
lahf
repnz
cmp
in
insl
sbb
das
cs
push
mov
test
push
jg
cmp
movsl
gs
popf
dec
inc
dec
push
mov
jg
iret
lcall
ret
sbb
mov
leave
jecxz
add
xchg
cwtl
imul
or
push
xchg
fwait
stos
or
mov
lea
int3
pusha
and
out
xchg
dec
adc
add
inc
imul
lret
fsubrs
mov
jecxz
loope
pop
or
daa
add
es
test
into
pop
outsl
orl
lret
or
mov
incb
addr16
and
mov
mov
mov
test
fs
mov
pop
add
xor
jo
cli
insb
jle
fwait
mov
add
xor
lret
outsl
enter
mov
mov
dec
sub
and
subl
int
lret
mov
lret
jb
std
leave
test
fsubl
xor
inc
lods
inc
js
pushf
dec
mov
cmpsb
lods
cmpsb
xchg
push
fsubrs
rcr
sbb
addr16
shlb
ss
mov
jne
adc
mov
sar
push
ljmp
cmp
cmp
mov
xor
lock
mov
rcrb
jmp
mov
jo
sarl
lcall
dec
in
jle
loopne
fs
andb
repnz
mov
fcompl
mov
and
sub
fisttpl
and
and
xchg
sub
les
xor
fdivrl
lret
movsl
mov
mov
fs
ret
clc
pop
aad
stos
lods
mov
or
xchg
add
outsb
popf
sbb
paddusb
icebp
push
lock
ljmp
mov
cld
xor
mov
les
ficompl
jb
lret
fsubrl
xor
lods
jmp
test
mov
sub
sbbb
inc
pop
and
shll
into
fdivr
xor
add
cltd
or
fnsave
jge
mov
loopne
pop
adc
fildll
jo
movsb
leave
stc
imul
repnz
aaa
push
hlt
cs
xchg
mov
push
sub
call
movsl
cmp
sub
call
mov
das
mull
xchg
sbb
pop
xchg
cmpsl
jmp
subl
jp
and
rorl
sub
mov
adc
or
shrb
test
jae
imul
mov
pop
pop
xchg
cmp
push
arpl
sub
mov
mov
fistps
out
dec
ja
mov
andb
adc
ret
enter
push
mov
int
mov
je
mov
mov
das
cmp
xchg
adc
lods
ljmp
inc
push
jge
int
icebp
stos
pop
stos
mov
sti
in
push
bound
sub
clc
and
bound
inc
aas
pusha
out
pop
lock
stos
cld
xchg
ja
sbb
push
fwait
pop
ret
andl
dec
mov
xor
popa
mov
mov
and
xor
notb
pop
pusha
push
cltd
dec
fmul
aas
in
xorl
inc
cmc
adc
jb
sub
ds
in
dec
ret
fwait
jle
pop
hlt
dec
jnp
jp
outsl
jnp
xchg
cli
adc
out
push
jne
xor
loop
adc
out
mov
xchg
push
insl
cmp
clc
sbb
pop
jo
pop
cmp
test
iret
adc
dec
and
mov
adcl
push
mov
pusha
stc
lock
push
ret
adc
popf
jg
mov
out
stc
popf
add
adc
mov
cmc
dec
jecxz
mov
cmc
ja
insl
stos
inc
pop
int3
fsubrp
icebp
mov
test
pushf
mov
dec
popa
mov
pop
or
fsubrl
cld
popa
or
push
push
inc
pop
jnp
lea
inc
pop
mov
push
out
pop
shll
push
mov
pushf
les
mov
test
pop
cmc
es
adc
test
out
into
and
sbb
sti
xor
cli
cmc
nop
daa
daa
pushf
push
inc
bound
cmpsb
aad
ja
jo
jge
jl
lcall
inc
loopne
ss
in
mov
and
into
xchg
mov
xchg
mov
sbb
iret
jge
loop
mov
in
jbe
insl
shrb
jl
ja
pop
lea
sub
jns
mov
adc
enter
add
and
pop
jbe
jg
xchg
mov
and
bound
cmpsl
cwtl
out
lds
mov
into
adc
mov
leave
aad
pop
push
clc
add
scas
ja
sbbl
inc
xchg
ja
loopne
rclb
push
xorb
mov
pop
daa
arpl
call
inc
xchg
sbb
sub
push
popa
dec
shr
stos
mov
testb
jge
mov
dec
negb
out
mov
mov
fildll
stos
jp
cmpsl
jp
pushf
test
jae
loopne
lahf
cmpsb
sar
repnz
in
add
int3
arpl
pushf
sbb
sub
cmp
test
mov
mov
cmp
sub
mov
xor
sbb
or
mov
ss
or
inc
mov
mov
ficoms
push
adc
pop
lret
daa
mov
adc
xlat
mov
std
xor
test
cld
das
shlb
xchg
sub
jae
imul
cmp
adc
aas
outsb
insl
out
cmp
and
pop
in
jle
nop
sub
imul
addl
out
pop
sahf
push
dec
dec
pushf
or
jo
cmp
dec
xchg
xor
ror
std
mov
stos
lret
mov
jmp
add
es
sbb
lds
push
jns
rcr
imul
xchg
xor
dec
push
pop
stc
xor
stos
xor
clc
fimull
dec
xchg
popa
clc
lds
jb
push
rcrb
loope
cmp
sti
push
dec
mov
das
add
mov
fwait
xchg
mov
xchg
jle
out
bound
fildl
outsb
aad
dec
pop
and
and
mov
je
rcl
repnz
jo
iret
jno
dec
pop
sahf
cmp
je
push
xchg
push
sarl
push
loop
jle
inc
lods
xor
cmp
pop
stos
adc
lahf
addr16
pop
inc
popf
sbb
inc
iret
xorb
int
das
pop
sub
jg
outsb
push
hlt
loop
dec
jne
repnz
sarb
sub
xor
jno
inc
xchg
test
int3
arpl
mov
lcall
aaa
mov
call
push
add
cmpsl
ret
ret
in
add
in
pushf
lret
inc
jg
and
scas
pop
aaa
jbe
mov
mov
push
pop
icebp
add
mov
pop
icebp
inc
cmpsl
aad
sbb
pop
jge
dec
pop
rorl
pop
cmp
pop
fwait
mov
push
adc
push
mov
or
mov
sbb
loop
xor
out
pop
xor
push
jp
cld
pop
stc
and
out
jle
stos
mov
testb
mov
dec
xchg
fs
xor
insb
repz
xchg
sbb
sub
xor
lret
movsl
out
bound
sbb
jns
stos
and
addr16
inc
jle
xor
mov
dec
scas
cmp
gs
inc
out
jns
in
push
test
icebp
pop
nop
jle
lods
cmpsl
or
loopne
dec
jb
jge
imul
lcall
adc
and
xor
cmc
inc
push
leave
xchg
test
mov
insl
pop
pop
mov
dec
cmp
iret
in
fnstsw
xchg
lock
lds
pop
incb
lock
pop
pushf
cld
shrl
ret
aaa
das
movsl
lea
mov
stc
jle
adc
aad
jmp
cli
test
jl
cwtl
jmp
in
mov
cmp
cltd
mov
mov
jecxz
dec
sbbb
mov
ljmp
xor
jmp
movsl
inc
rorl
add
dec
jle
lcall
fdivr
push
xor
pop
mov
sub
pop
scas
push
sbb
xchg
jl
xor
les
pusha
cmp
xor
gs
xchg
mov
aam
std
jmp
mov
popfw
jg
jp
adc
jl
adc
out
jg
and
push
dec
int3
inc
fdiv
lods
les
push
es
lods
daa
jmp
lret
jb
sbbb
and
add
sbb
jp
outsb
jl
jg
scas
inc
jno
fs
sub
bound
dec
rcll
das
add
pop
repnz
arpl
nop
das
out
push
out
sub
or
movsl
ret
jnp
repnz
mov
mov
cmp
in
xchg
sub
mov
repnz
mov
jae
sub
js
fildl
add
insb
shll
inc
pop
jo
ds
pop
aaa
arpl
test
les
loopne
andb
push
and
inc
jns
in
xchg
lret
jecxz
lret
sbb
or
sbb
mov
mov
dec
in
movsl
in
mov
xor
call
dec
and
fs
add
fs
sbbb
std
lods
or
sub
fwait
add
mov
or
jl
mov
fcompl
ret
xchg
xor
push
fdivl
adc
shl
lods
inc
sub
add
lret
divl
stos
xor
loopne
stc
fucomi
movsl
call
push
outsb
sbb
les
int3
cmp
mov
and
mov
loope
jmp
orl
jle
lock
pusha
out
je
sar
dec
mov
jmp
pop
enter
shll
icebp
adc
inc
stos
xor
mov
push
cmp
test
mov
cmp
test
shrl
cmpsb
les
cmpsb
out
xchg
js
dec
push
xchg
test
mov
pop
jecxz
adc
fisubrs
mov
scas
jp
pop
hlt
mov
mov
jmp
jnp
in
jae
inc
int
lcall
in
cmp
push
data16
icebp
mull
sti
fcoms
sbb
cmp
cmp
ficoml
stc
sub
addr16
in
cwtl
add
cmpsl
jecxz
sbb
dec
sub
leave
pop
sub
and
movsl
fdivl
mov
adc
adc
repz
js
xlat
shlb
push
xlat
jo
and
ljmp
and
data16
push
inc
sub
jb
in
xchg
pop
mov
adc
cmp
xor
ss
pusha
nop
inc
in
mov
enter
add
jo
aas
scas
xor
faddp
mov
xchg
mov
popf
sbb
std
push
lock
mov
mov
adc
lret
jo
je
es
sub
cs
in
jmp
aaa
cld
inc
jmp
jg
xchg
push
jno
mov
xchg
jecxz
clc
sahf
push
cld
xchg
cs
dec
pop
add
ret
cmp
fs
bound
ss
xchg
loopne
mov
std
mov
addr16
das
fstps
ret
test
lret
mov
aam
pop
or
gs
xchg
lcall
mov
idivb
into
mov
inc
or
in
fwait
cmpl
fisttpll
imul
shlb
shl
cwtl
bound
pop
sub
lods
insl
jo
jnp
scas
jae
mov
add
jmp
dec
mov
es
or
xchg
movsb
je
ljmp
jb
adc
xchg
adc
dec
mov
in
adc
mov
insl
sbb
lahf
cmpsb
and
cmpsb
icebp
mov
clc
or
les
jbe
mov
add
gs
inc
lret
sub
cmp
push
pop
jb
lds
repz
jo
stc
int3
js
sub
mov
mov
in
imul
sub
shl
sub
ret
das
sub
loopne
or
mul
or
data16
imul
fcoml
push
decl
sbb
mov
add
gs
push
repnz
fdivrp
mov
cmc
gs
and
sub
push
daa
mov
je
loop
flds
jno
test
pop
mov
inc
and
and
inc
fwait
pop
inc
cmp
inc
fwait
ljmp
mov
lds
outsb
mov
addr16
shrl
xchg
dec
mov
ja
xlat
mov
pop
ljmp
notb
mov
sub
decl
gs
sub
sub
inc
flds
out
mov
in
idivb
test
xchg
jge
lret
sub
inc
sbb
aaa
cmpl
cmp
jbe
outsb
jb
cmpsl
add
sub
bound
out
int
xchg
push
xor
mov
cmpsl
push
cmpsl
xchg
or
fistl
cmp
jecxz
pop
lds
mov
add
mov
mov
pop
cltd
or
enter
adc
dec
fisubrl
popa
sbbl
outsl
pop
mov
rcl
test
mov
hlt
pushf
aaa
stos
inc
cmpsb
fcomps
test
push
scas
adc
sbb
in
add
dec
adc
fstps
dec
fsubrs
outsb
pop
aad
sbb
inc
jne
inc
leave
mov
daa
ja
push
movsl
cmp
xchg
scas
sub
in
lahf
ficoms
js
xchg
shrb
xchg
data16
adc
mov
pop
mov
sub
mov
mov
jb
push
mov
lret
ljmp
or
lods
cs
pop
adc
movsl
pop
dec
add
scas
jne
pop
ds
arpl
and
jle
mov
lds
mov
pop
mov
sub
ss
cwtl
dec
and
push
fistps
xchg
int
add
xor
js
adc
stos
adc
orb
out
lds
add
mov
movsb
jle
andl
mov
mov
je
bound
iret
cli
xor
std
adc
mov
iret
jns
dec
inc
pop
shll
sub
push
jmp
jg
lret
push
inc
fs
lock
xor
lock
insl
sub
inc
adc
in
jb
push
mov
push
mov
mov
outsb
mov
stc
jb
lods
push
fdivrl
cmpsb
cmp
dec
push
call
lock
cmpsb
or
mov
inc
into
mov
push
jge
ret
jge
adc
or
sbb
pop
jno
push
iret
movsl
dec
mov
stos
add
fwait
insl
add
add
xchg
cmp
loop
push
enter
xchg
mov
test
push
jo
or
adc
outsb
lock
and
and
pop
stos
jno
pushf
andl
es
jmp
and
lret
fnstcw
push
in
mov
fdiv
rcrl
adc
jecxz
in
push
mov
lret
loop
popa
fsub
cs
push
ror
negl
dec
pop
pushf
popa
data16
pop
cmp
push
cli
sbbl
jg
and
mov
scas
sbb
sub
jae
int3
scas
push
sbb
adcl
push
inc
jmp
data16
jecxz
test
inc
nop
inc
lcall
aam
in
aam
mull
mulb
test
scas
adc
sbb
pusha
cli
loop
cmp
pop
imul
cld
test
shrl
lds
mov
ret
pop
cmc
and
pop
incb
dec
mov
inc
adc
ficoml
xor
inc
call
and
cmp
scas
push
xchg
sbb
scas
push
push
rcrl
cltd
fnstsw
adc
cmpsl
cmp
mov
out
loop
call
mov
stos
dec
addr16
fadd
pop
jl
fbld
sub
pop
int
lcall
pop
add
sub
add
into
add
lea
push
sbb
addl
ret
or
sbb
pop
in
and
in
pop
or
adc
aad
push
xor
push
cmp
mov
out
mov
lods
aas
fidivl
push
mov
pushf
dec
xor
imul
mov
hlt
mov
sub
shl
out
mov
lock
jge
adc
sbb
das
js
stc
cs
mov
dec
mov
xor
enter
sti
in
std
sub
call
adc
lcall
inc
test
dec
je
dec
stc
insl
cmp
loopne
sub
cltd
and
iret
out
xor
cmp
mov
sbb
loop
cld
and
es
jne
xor
iret
gs
clc
pop
fcoml
cltd
inc
fiaddl
mov
test
mov
out
sbb
pop
xor
mov
mov
push
jb
pop
xor
fldcw
add
sub
push
xchg
sub
pop
ds
cmp
dec
or
insl
mov
sbb
jle
push
lea
pop
sub
add
shrb
jnp
or
dec
out
push
outsb
sub
jnp
in
add
fnsave
mov
fcmovne
xchg
xor
fbstp
sub
mov
addr16
jmp
lods
das
sbb
or
in
pop
xchg
adc
mov
scas
mov
fwait
mov
int
adc
andl
ss
adcl
fbstp
xchg
out
enter
and
mov
popa
jae
jle
popf
sub
ror
sub
fs
adc
pop
loop
xor
push
jl
fld
mov
popa
andl
push
cmpsl
fisubrl
mov
pop
or
ljmp
adc
and
fsubr
mov
mov
aam
popf
sub
bnd
dec
push
add
pushf
sub
mov
adc
rorb
pop
fbld
or
dec
jle
mov
xchg
cs
push
cmp
xchg
lcall
add
mov
pop
lcall
rcr
andb
push
loopne
add
push
add
aad
data16
test
xchg
xchg
and
lods
add
cld
mov
fs
dec
bt
and
inc
adc
cmpsl
out
push
xchg
sub
insb
sub
sahf
ss
cltd
loop
sub
sub
insl
jge
mov
push
mov
jb
lcall
in
xchg
jmp
xchg
cmp
cli
hlt
cmpsl
mov
adc
mov
cmp
sbb
js
daa
mov
dec
and
pop
movb
dec
rcl
fstl
and
push
aas
imul
jle
daa
insb
negb
mov
mov
mov
adc
pop
sub
fwait
mov
mov
inc
fsubl
pop
or
mov
jmp
incb
out
mov
imul
fidivrs
mov
adcb
mov
sti
push
mov
adc
lock
dec
push
jl
lret
mov
iret
subb
and
cmp
movsl
mov
dec
in
jge
gs
pop
jg
or
inc
movsl
shrl
and
aas
clc
mov
orb
cwtl
mov
xor
adc
test
xor
ss
fsubs
inc
and
fisubs
pop
ret
daa
inc
mov
xchg
out
push
sbb
fdivs
fnsave
dec
jbe
sbb
jg
inc
lea
shll
pop
xor
pop
repnz
je
jge
cmp
sahf
pop
cmpl
test
dec
stc
or
js
dec
stos
cltd
adc
push
inc
sarb
cmpsb
pop
fnsave
cli
adc
or
dec
cmc
daa
sub
rcrb
je
call
or
xchg
cmp
loope
cltd
jae
push
popa
fnstcw
ret
push
push
int
inc
gs
stos
sub
cmp
aaa
jl
cmp
fwait
add
pushl
stos
lret
add
ja
movsl
inc
and
jb
adcl
scas
jle
out
mov
sub
clc
xchg
sub
lret
cld
sbb
and
xchg
mov
movsl
xchg
add
cli
fwait
cltd
mov
dec
jmp
and
shr
insb
ss
movsl
test
outsl
sarl
addr16
adc
out
das
lret
out
cld
rcll
divb
mov
xchg
sarl
sbb
adcb
ret
sbb
hlt
mov
pop
lret
out
hlt
add
xor
cmp
aas
ss
or
mov
aaa
sub
jno
fidivrs
mov
jmp
into
stos
mov
mov
addr16
pop
sub
mov
fwait
gs
xchg
adc
add
add
outsl
mov
addr16
imul
fildll
ja
hlt
adc
inc
adc
dec
call
stos
fsubrs
mov
int
mov
inc
inc
sbb
jl
in
imul
movsl
shll
mov
sub
mov
leave
fnstcw
test
add
pop
xchg
aam
frstor
fistpll
loopne
mov
rcll
ljmp
repnz
mov
rcll
aam
imul
popf
add
aas
sbb
popf
and
ja
inc
pop
ljmp
cmc
mov
rcll
out
adc
jmp
inc
cld
push
xchg
dec
popa
adc
fwait
sub
and
fwait
push
or
mov
jbe
hlt
shlb
push
mov
jb
jle
push
leave
test
inc
int
add
lret
sbb
es
inc
clc
stos
sbb
and
sbb
scas
inc
out
test
xorl
fs
add
loope
insl
or
push
jmp
jl
fdivs
dec
xchg
pop
test
out
push
jo
lahf
xorl
and
in
popf
into
cmp
xor
shll
into
inc
es
jmp
outsl
xchg
and
mov
shlb
and
cld
jo
or
pop
lods
sub
push
outsb
gs
sahf
inc
fildl
sbb
add
push
push
cmp
scas
cmp
stos
fcmovb
inc
xor
out
pop
mov
mov
test
lods
fistl
or
sbb
jns
cmp
and
cmp
movsl
cltd
pop
mov
imull
sarb
or
add
pop
popf
push
es
dec
call
or
aam
outsl
xchg
cmpb
pop
push
jb
outsb
fcomip
ret
push
pop
fdivrs
or
inc
inc
outsb
push
data16
push
mov
mov
ret
xchg
jbe
pop
sysexit
jle
call
pop
mov
movhps
jmp
mov
ret
aaa
add
in
jmp
xchg
cmp
stos
test
std
inc
sub
fs
clc
cmp
xchg
add
jbe
fwait
insb
dec
or
mulb
cltd
push
repz
fistps
imul
or
add
or
push
test
or
cmp
add
sub
mov
fwait
popf
jmp
xchg
mov
push
mov
xlat
inc
sub
stos
pop
rorb
xchg
enter
mov
inc
arpl
nop
lods
jae
add
dec
xchg
test
in
hlt
mov
popa
jg
jg
and
sahf
scas
push
in
shr
or
pop
pop
jb
stos
lds
mov
mov
lea
mov
xor
scas
das
sbb
fdivrs
sbb
mov
jl,pt
or
xchg
jbe
in
or
and
ret
xlat
sub
xor
mov
stc
ret
and
cmpsb
jp
aas
mov
ds
jne
je
jae
dec
cltd
shrb
inc
push
jge
imul
pop
aam
push
insl
int
pop
cmp
pop
shl
dec
mov
loopne
cmpsb
paddsw
shll
outsb
adc
push
movsb
sbbb
das
cld
cmp
je
roll
out
push
push
mov
xor
sti
and
push
sbb
xchg
mov
inc
repnz
mov
jmp
ss
inc
sub
sub
stc
xchg
test
inc
sbb
enter
stos
fs
sub
mov
aad
jb
push
and
sub
mov
subb
clc
push
out
dec
push
cli
cld
inc
movsl
shlb
xchg
pop
mov
iret
in
stos
bound
adcb
insb
cmpsl
jae
add
test
scas
jle
push
push
mov
xor
mov
out
cld
inc
xchg
add
cmp
lahf
je
push
jmp
fimull
cmp
into
xchg
mov
and
daa
mov
cmc
leave
shll
adc
mov
and
and
gs
inc
int
sbb
dec
and
loop
in
xchg
mov
bswap
lds
sub
cmc
mov
clc
or
mov
loop
fisttpll
dec
xchg
gs
es
ret
faddl
movsl
sub
mov
call
fldenv
push
repz
ss
jnp
jle
add
fisubl
xchg
mov
orb
inc
nop
add
and
arpl
push
and
mov
mov
hlt
les
cmp
movsb
out
xchg
std
adc
mov
andb
ret
jge
rol
adc
jb
mov
inc
nop
add
cmp
lret
cld
mov
sub
xor
sbb
adc
jmp
xchg
adc
outsb
dec
jno
test
cmp
adc
jne
arpl
pushf
es
xchg
add
nop
arpl
or
mov
repz
inc
gs
jge
pop
ss
sbb
xor
sub
iret
shrd
dec
cmpb
cmp
scas
xor
cmpl
dec
in
je
mov
add
push
jecxz
sub
add
outsb
shrl
insb
sbb
jmp
push
lea
scas
add
jle
loope
adc
popa
lret
sub
mov
fcomps
xor
and
cs
jns
inc
lret
out
ror
fs
stos
stos
movsb
inc
jmp
pop
icebp
movsb
shlb
jp
es
push
sub
sbb
dec
fisubl
ljmp
push
mov
ljmp
inc
pop
stc
sub
sub
ficoms
lret
loope
scas
lods
push
mov
jl
xor
js
into
lea
int3
out
rorl
fwait
aad
lahf
outsl
xchg
adc
mov
mov
fistpl
fisubrs
movsb
fcom
cmpsb
int3
arpl
cmp
fwait
movsl
mov
pushf
xor
addl
push
movsl
js
mov
pop
jmp
and
or
cmp
dec
adc
fisttpl
push
cmc
xor
cmp
sub
mov
dec
dec
movsb
into
sbb
dec
and
mov
out
adc
cmpsl
mov
inc
fsubs
jp
pop
inc
pop
inc
loopne
pusha
clc
dec
mov
cld
jg
mov
jae
jne
out
adc
outsb
xchg
sub
jecxz
push
or
mov
dec
rcrl
repnz
scas
cmp
or
insb
xor
repz
ret
rolb
add
shl
sub
bound
jnp
dec
fnstsw
es
push
mov
push
xor
mov
or
inc
popf
and
lock
cmpsl
jg
or
dec
js
not
test
test
inc
ds
mov
bound
jb
sub
fsts
into
insl
loopne
cld
push
sub
imul
enter
push
movlps
shrb
or
ljmp
mov
lea
mulb
fcompl
fcmove
jge
cmp
push
adc
stc
mov
testl
das
push
shrb
adc
mov
ja
pop
loop
sbb
xchg
mov
cmp
xchg
xor
jmp
push
cmp
and
pusha
ds
jnp
or
jns
lahf
stc
or
fldl
mov
sarb
inc
fwait
xlat
push
add
aad
jecxz
shl
out
loope
test
sti
xchg
jo
daa
jmp
adc
pop
xor
push
mov
outsl
xlat
fmull
loop
cs
ret
sbbl
repnz
inc
cmp
jno
or
mov
loope
out
popf
adc
jge
sahf
push
daa
push
mov
ds
mov
cmpsb
cmp
scas
cmpsl
xor
sahf
adc
js
xchg
jge
addb
cwtl
pop
daa
cli
mov
sub
aas
xchg
outsb
dec
push
lods
mov
scas
aas
dec
sarb
xor
adc
sub
imull
xchg
and
les
negb
jns
push
lods
fmuls
add
dec
and
insb
jecxz
dec
ficoml
jno
int3
addr16
cmp
fcmovnu
js
xchg
cmc
ret
mov
aam
dec
inc
inc
jbe
pop
repz
sahf
mov
xchg
dec
cmp
in
imul
add
std
scas
mov
cmp
fdivrs
inc
clc
leave
fcmovnu
xor
popl
pop
fstl
push
jae
sbb
sbbl
cmp
cmp
es
jae
hlt
mov
aas
cmpsb
rcrl
and
aam
out
push
pop
xor
pop
add
test
jnp
or
rorb
data16
xchg
mov
dec
hlt
mov
hlt
jb
cmp
fwait
sbb
dec
adc
cmp
mov
ret
std
push
ljmp
ljmp
out
cmp
addr16
imul
xchg
lret
insl
cmp
pop
negl
dec
push
xor
loopne
push
out
xorb
out
mov
sbb
xchg
aaa
jb
mov
cmc
scas
ss
dec
mov
insl
xchg
lcall
mov
mov
inc
push
xchg
cmp
pop
call
lea
add
push
shlb
mov
mov
mov
aam
repnz
xchg
inc
lods
pusha
cs
sbb
lods
stc
ret
movsb
push
mov
jae
ficompl
xchg
add
or
inc
pop
push
xchg
sbb
or
sbb
xchg
cs
scas
add
iret
jl
lcall
gs
lret
sbb
pop
cmpsb
or
mov
or
lea
insl
loop
orb
inc
xor
xchg
repz
mov
jmp
and
ds
clc
cmpsl
dec
pop
ja
mov
lods
test
adc
add
jo
insl
stos
mov
testb
ja
jns
test
mov
jnp
repnz
cmp
push
xchg
jnp
xchg
inc
mov
fidivl
cmp
mov
jg
jne
inc
mov
int3
cltd
sub
repz
cmp
or
incb
dec
repz
mov
arpl
mov
cmp
mov
xor
xchg
jo
aad
fcom
cltd
xor
sti
xor
push
addr16
add
cmp
bound
or
or
or
mov
in
adc
nop
push
xorb
xchg
add
pop
cmp
pop
lea
inc
push
stos
je
int
mov
mov
lcall
outsl
pushf
sub
or
into
cmp
ss
jne
idivl
int
jne
fcmovnb
pop
inc
and
test
in
xchg
pop
sbbb
or
cmc
mov
push
or
push
mov
mov
imul
fisubrs
or
dec
or
inc
sbb
jp
ljmp
jmp
push
movsl
popf
sbb
loope
rolb
xchg
test
data16
cmpsb
shlb
pop
scas
imul
in
movsl
ss
shll
fs
orl
and
and
rorl
pop
lret
pop
sub
inc
test
leave
cmp
lcall
add
es
jb
aaa
jg
jnp
mov
cmp
lret
cmp
jbe
in
lds
pusha
jne
xchg
push
js
mov
mov
outsb
push
call
shl
outsl
add
inc
icebp
je
and
movsl
out
bound
jns
mov
mov
in
pop
sbb
arpl
fbstp
mov
add
inc
sbb
jae
xchg
es
aam
shll
xlat
dec
inc
pop
mov
sbb
jnp
jns
add
push
adc
jns
rorl
or
rcrb
imul
clc
ljmp
dec
fnstenv
mov
fstpt
lcall
mov
push
sub
xlat
cmp
sar
fcomi
mov
jb
add
xor
mov
push
xor
movsl
mov
mov
xchg
inc
imul
and
xchg
sarb
lods
adc
add
cli
push
hlt
imul
dec
sbb
mov
jnp
mov
in
lock
movsb
call
adc
mov
jnp
mov
mov
mov
cmp
stc
rol
cmp
ret
rcrl
loope
inc
push
ret
loop
cld
clc
cs
xchg
sub
or
mov
stc
in
es
sbb
xchg
mov
adc
test
test
sbbb
rcrb
jns
divl
call
sbb
pop
jnp
cmp
movsb
dec
roll
mov
push
and
push
jcxz
add
mov
mov
test
adc
popa
dec
rcl
fidivs
insl
sbb
decl
xchg
es
in
mov
xor
xchg
and
jge
or
jo
mov
or
test
test
mov
fs
adc
sub
mov
insb
pop
ss
jmp
insb
pusha
std
loope
lea
cmp
mov
rclb
scas
sarl
mov
imul
sbb
inc
adc
sub
cmp
lcall
lcall
or
jmp
cli
out
rol
roll
gs
dec
add
repz
in
cmp
andl
and
dec
loopne
xchg
ret
add
addr16
sbb
rol
ss
jbe
mov
push
pop
adc
dec
push
mov
mov
mov
xchg
pop
xlat
xlat
xchg
and
in
and
jne
in
sub
and
cli
addr16
lcall
pop
addr16
loopne
sub
push
pop
loope
mov
mov
ljmp
ficompl
jl
cwtl
jl
les
jb
cmpsb
icebp
dec
loop
leave
call
push
loope
push
and
aas
into
in
arpl
scas
pop
jbe
rcll
cli
ja
int3
mov
cwtl
inc
loop
dec
mov
imul
xchg
jae
add
inc
mov
enter
jmp
icebp
cwtl
mull
dec
mov
scas
les
push
adc
inc
stc
inc
mov
or
cli
xchg
mov
xor
jp
cmp
mov
pop
enter
or
mov
loope
jns
in
push
outsl
sub
data16
popl
sub
rcr
lret
fsts
sahf
arpl
in
pop
pop
push
jge
mov
push
cltd
push
jae
adc
push
cltd
mov
lea
mov
in
sub
push
nop
das
cmp
jb
leave
push
sub
add
fs
adc
pusha
int
mov
shlb
stc
push
sahf
in
inc
push
xchg
mov
mov
mov
cmpsl
push
push
xchg
cmp
insb
push
xor
js
inc
test
add
cltd
xor
int3
lea
mov
into
or
loope
mov
mov
push
outsl
sub
mov
in
adc
dec
hlt
mov
int3
ja
or
jle
cmp
aaa
gs
push
inc
enter
out
xchg
and
repnz
addr16
movsl
into
lret
push
in
and
cld
shrl
and
scas
out
push
es
add
aaa
aad
push
lds
jg
rcrb
mov
ret
sub
mov
xchg
subb
mov
imul
and
push
jge
ja
dec
mov
pushf
push
icebp
push
daa
mov
pop
cmp
xor
mov
push
hlt
lret
sahf
dec
dec
inc
add
inc
and
cmp
inc
add
fiadds
gs
pop
test
shrb
stc
push
jle
push
pop
int
aam
jle
push
jb
into
aam
pop
outsb
int
mov
jns
jns
xor
mov
xchg
jg
pop
jmp
loope
cld
pushf
stc
mov
pop
movsl
sbb
add
xlat
das
mov
pop
mov
aam
rorb
cmp
movsl
sbb
enter
in
dec
mov
lods
negb
fidivs
lret
in
movsl
push
xor
pop
lret
mov
jecxz
insl
jl
les
sbb
xchg
mov
xor
popa
ret
xor
inc
test
popl
add
jp
sub
shl
inc
sahf
jb
ret
les
mov
sub
bound
lods
xchg
cmp
test
mov
sti
jnp
cld
js
mov
xchg
iret
js
push
lcall
test
mov
push
inc
int3
fidivs
mov
insb
mov
lods
cmpsl
inc
sbbl
and
jmp
dec
cwtl
or
adc
and
lods
xchg
aad
adc
jns
sub
fcmovnb
bound
rcrl
clc
ljmpw
dec
in
cmpsb
imul
dec
lcall
or
lods
mov
cmc
xor
sbb
or
stos
xor
pop
or
jbe
jp
pushf
mov
mov
fcompl
out
cmpsb
out
pop
cmp
push
popa
add
lods
fucomi
outsb
mov
jae
adc
cmp
jo
fwait
mov
xchg
cmpsb
leave
movsb
cmp
repnz
add
inc
push
cmpsb
inc
xchg
xor
push
or
sub
push
dec
out
add
stos
xor
xchg
js
aad
sbb
aam
pop
mov
xor
sub
sbb
movsl
filds
clc
mov
shrl
jmp
or
sbb
orb
insl
mov
stc
psrlq
ret
test
std
popa
add
mov
and
ss
dec
and
imul
aad
aas
pop
fxam
fldenv
inc
cmp
pop
dec
fs
rcl
lock
stc
adc
push
mov
xchg
mov
pushf
cli
cmpb
mov
test
sub
cmp
mov
test
mov
or
aas
movsb
ja
push
sub
dec
jmp
push
adc
dec
sub
mov
call
ljmp
xchg
mov
js
mov
push
mov
inc
lret
inc
addr16
out
imul
push
mov
scas
fsubr
ja
inc
arpl
in
inc
pop
dec
mov
jnp
mov
pop
cld
stos
enter
xchg
xor
shrb
xor
jg
jmp
cs
pop
movsl
lea
cmp
arpl
add
xor
div
fistl
stos
cmp
test
test
shrl
or
sbb
jb
sbb
sbb
sarb
or
xor
xchg
test
in
sbb
jl
mov
lods
jo
pop
movsl
in
push
jecxz
cmpl
sub
js
inc
push
mov
xor
jbe
lea
jmp
pop
push
sahf
hlt
pop
enter
jo
sahf
add
push
and
adc
push
fsubrp
andl
jge
cltd
mov
jnp
aaa
mov
addr16
lret
mov
or
bound
push
and
jl
enter
shll
dec
imul
mov
in
insb
inc
pop
mov
iret
insb
ss
cltd
aam
and
jecxz
dec
subl
xor
arpl
xchg
movsb
push
push
mov
sbb
and
iret
jb
or
dec
les
mov
cmp
notb
push
fmulp
pop
ja
inc
or
std
orl
pop
xchg
adc
dec
stos
add
xor
lock
cmpsb
inc
or
movsl
inc
sub
push
sbb
adc
push
imul
xor
imul
jp
add
xor
clc
jg
in
pop
stc
inc
imul
mov
lret
xor
rcrl
call
and
add
fdivs
inc
or
sti
adc
pop
sub
add
mov
je
aam
mov
lcall
stc
addb
xchg
xor
add
push
ficompl
xor
cmpl
dec
leave
mov
xchg
repz
nop
sub
fmuls
cmpsl
mov
shlb
jnp
cmp
bound
cmp
pop
mov
hlt
push
sub
mov
jnp
cs
mov
xor
cmp
sbb
mov
int3
xor
imul
outsl
and
dec
adc
shrl
push
jmp
mov
cld
jmp
fsubl
sub
push
xlat
xchg
ljmp
jbe
int3
lret
dec
mov
and
ds
cmp
psadbw
add
mov
pusha
xchg
imul
ficomps
mov
pusha
dec
pusha
cmpsb
adc
out
inc
fbld
stos
lods
add
repnz
adc
arpl
into
movsl
cli
ds
enter
test
lods
cltd
xchg
ljmp
mov
test
cmc
js
add
cmpl
movsl
fdivl
pop
mov
roll
jg
jg
xlat
mov
xchg
pop
sbb
mov
cwtl
inc
mov
in
add
repnz
lcall
clc
jnp
sub
pop
pop
test
mov
scas
jno
mov
jg
loop
imul
pop
cmpsb
inc
dec
les
popf
adc
xchg
dec
fsubrs
test
jle
add
sub
inc
mov
jne
push
cmpsb
test
les
lcall
sub
imul
sub
mov
in
int3
sbb
mov
fcompl
stos
jge
fstp
cmp
scas
ja
add
sahf
sbb
adc
cmp
imul
jb
shrb
ret
movb
iret
mov
cld
push
pop
push
lock
incb
dec
cmp
clc
push
in
sti
add
jb
movsl
nop
mov
fwait
insb
notb
in
mov
aam
mov
js
push
out
daa
repnz
ds
mov
lea
in
pop
out
push
aaa
fdivl
popa
int
inc
pop
push
rcrb
adc
cmpsl
imul
sbb
push
fwait
xchg
ljmp
sbb
ja
aad
push
cmpsb
cmp
pop
cmpsl
les
lods
pop
add
fidivs
inc
insb
sub
aam
adc
bound
and
pop
sahf
sahf
pop
sub
mov
pushf
scas
sti
iret
shrb
popf
xor
mov
jne
jp
shll
jnp
sti
hlt
dec
jecxz
pop
sbb
pop
iret
push
mov
daa
test
sbb
rolb
scas
ja
add
popf
push
sub
lret
mov
ss
test
es
ja
bound
int3
mov
push
out
add
or
inc
and
mov
cmpsl
ds
adc
aas
xchg
xor
adc
fimull
mov
jne
pop
xor
mov
pop
cmp
pushf
imul
mov
sbb
aad
cwtl
dec
mov
ja
lret
clc
stos
xchg
jge
pop
jb
or
imul
call
or
mov
xchg
push
mov
xchg
std
sbb
cmp
push
popa
cmp
xor
montmul
cmpsb
inc
cmp
pop
in
pop
cmp
aaa
rcrb
ret
cmp
add
shl
mov
xchg
mov
cmp
push
mov
call
rcrl
pusha
mov
das
or
std
push
sub
mov
in
fwait
mov
or
std
and
popa
scas
iret
fisttpl
adc
insb
cs
jmp
dec
jns
ljmp
add
xchg
in
ret
mov
sbb
mov
loop
scas
or
xchg
dec
out
xchg
dec
mov
stos
movsb
push
add
arpl
adc
sti
sar
test
xchg
pop
push
int
pop
mov
pop
in
imul
pop
insb
lods
pop
xor
jae
sub
inc
mov
repnz
adc
mov
popa
push
imul
outsb
mov
xchg
jo
xchg
out
cli
loopne
sbb
rcl
popa
out
aam
fnsave
mov
in
xchg
test
out
scas
xlat
xbegin
test
mov
mov
pop
hlt
movsb
adc
outsl
mull
ljmp
pop
xchg
mov
pusha
jg
mov
dec
add
repnz
push
and
sbb
arpl
sub
cltd
cmc
stos
cmp
into
or
testl
outsl
push
pushf
idivb
push
imul
fadd
stos
push
data16
stos
push
popa
dec
inc
fwait
negb
adc
insb
add
or
jns
jns
push
lcall
das
or
pop
in
test
pop
jg
xchg
out
jae
lea
sub
repz
xor
repnz
adc
fidivrs
cltd
mov
adc
and
inc
pop
arpl
data16
pop
add
dec
pushf
sbb
scas
inc
jns
and
fildl
stc
test
rclb
lods
clc
fldenv
ja
enter
roll
ljmp
inc
mov
pushf
loopne
ljmp
jne
dec
xor
jns
add
pop
stc
xor
mov
push
cmpsb
imul
pop
aam
fmuls
rol
dec
xor
cmp
mov
arpl
cmp
repnz
mov
and
adc
roll
clc
mov
mov
or
add
adc
scas
and
lea
dec
dec
cmc
add
fdivl
jmp
arpl
mov
push
cmpsl
pop
aam
nop
enter
lret
stos
insl
lcall
movl
cli
arpl
xor
lds
ret
dec
loopne
repnz
mov
out
inc
xor
pop
cmpb
daa
das
dec
aad
jno
xchg
cmp
xorl
fimuls
pop
jge,pt
lret
es
iret
mov
push
pop
movb
jb
pop
hlt
pushl
jnp
sbb
pop
mov
into
sub
dec
adc
pop
iret
fistl
in
sub
inc
fwait
push
imul
repnz
popf
xor
inc
mov
mov
movsl
cld
pop
ds
repz
cld
add
stos
mov
mov
inc
iret
data16
test
xchg
adc
fldenv
adc
sbb
pop
or
pop
push
pop
mov
pop
jns
inc
lods
stos
xor
std
mov
int3
loopne
pop
mov
jle
popf
stc
fsubs
lock
cmp
in
add
lods
xlat
and
aam
insl
add
inc
lret
sbb
xor
inc
decl
ja
mov
and
cwtl
shl
decl
jne
fwait
mov
std
clc
shrl
cmp
mov
sbb
stos
add
insb
sub
mov
fisubrs
push
int
subl
ret
or
sub
sub
mov
insl
sub
inc
pop
mov
pop
ret
fst
and
dec
pop
test
add
test
dec
pop
fldl
jbe
cmp
dec
inc
es
lcall
sbb
ror
mov
shr
sub
pop
push
mul
int
jbe
repz
aad
and
mov
or
jbe
adc
inc
jne
js
lret
fwait
jmp
jmp
psraw
nop
inc
jno
jecxz
jo
fnstcw
into
mov
scas
and
jg
call
inc
mov
and
push
mov
mov
aam
sbb
repz
sti
fldenv
mov
inc
cmp
cmp
dec
out
insb
lahf
repz
inc
cmpsb
mov
out
sbb
add
and
cmp
subl
push
and
mov
add
jnp
lret
mov
pop
sti
jp
mov
or
dec
mov
sbb
ret
mov
push
add
loopne
popa
int
sbb
pop
xor
movsb
imul
jl
movzwl
dec
jmp
enter
and
adc
cmp
xor
out
pop
dec
or
mov
and
fidivs
or
lret
push
ss
je
jnp
inc
xchg
sbb
fdiv
mov
mov
cmp
mov
cmpsb
mov
clc
inc
ljmp
je
sbbb
lock
adc
ret
push
setle
mov
push
loopne
and
cmpsb
inc
mov
xlat
xor
pop
xchg
and
mov
jo
insl
add
xchg
ret
out
fwait
or
dec
sbb
call
jg
xchg
mov
or
cli
jbe
dec
cwtl
movsl
in
xor
data16
mov
push
push
jne
pop
sub
or
cmpsb
imul
insb
mov
es
mov
mov
clc
push
sbbl
xchg
je
int3
dec
push
mov
loope
ds
dec
mov
jo
xchg
or
mov
dec
scas
aaa
jno
xchg
jp
push
fstpl
mov
arpl
cmp
imul
add
add
sub
pop
fiaddl
inc
mov
add
jns
inc
push
jne
add
aad
jnp
or
cmpsl
das
fcoms
cmp
imul
mov
mov
fcmovu
lods
cmpb
pop
push
hlt
push
xchg
bound
xchg
xlat
hlt
adc
push
push
out
mov
pop
xchg
je
cmp
sbb
mov
sbb
pop
cmp
stos
cmpsb
repz
stc
pushf
mov
pop
repnz
mov
icebp
lds
les
and
cmp
inc
ficompl
stos
rcll
and
xchg
int
push
mov
cs
dec
and
jno
add
jb
pushf
pusha
dec
xchg
icebp
adc
mov
and
popf
subb
cmp
in
sub
dec
mov
jne
fidivs
popa
jle
nop
stos
cld
xchg
dec
xor
mov
fnstsw
iret
popa
jge
xor
nop
jbe
ret
enter
shll
xchg
cmp
les
bound
sbb
fs
or
cmpl
or
mov
xchg
add
add
mov
clc
int3
cmp
arpl
sub
fnstcw
stos
hlt
insb
adc
ficoms
push
out
and
inc
jmp
je,pn
mov
sub
fisubrl
xchg
jg
mov
pushf
and
sbb
std
lods
push
bound
mov
loop
push
xchg
push
jecxz
addb
xchg
lds
scas
inc
pusha
out
out
test
outsb
add
in
jecxz
cwtl
sub
dec
mov
sub
aas
xchg
vcmpps
xchg
jge
test
lret
inc
mov
pop
cs
negb
icebp
push
cld
add
jecxz,pn
sbb
pop
jnp
jb
add
add
inc
jl
pusha
popf
into
gs
clc
fstpl
push
insb
addb
jecxz
dec
jecxz
sbbb
sub
add
test
push
and
mov
cmp
lret
pop
mov
in
aad
cli
jne
sub
or
push
gs
and
sbb
dec
and
push
push
ljmp
add
orl
xchg
jns
out
xchg
sub
xchg
lods
mov
les
fiadds
movsb
push
arpl
test
leave
pusha
test
outsb
add
shr
arpl
mov
orl
jmp
aas
lahf
movsb
stc
shlb
scas
mov
fisubs
adc
outsb
lret
pop
jbe
ds
pop
insl
jle
shrb
push
pushl
pop
stc
or
loopne
mov
stos
rolb
add
push
loope
pop
fcomip
inc
stos
push
ljmp
pop
icebp
decb
or
mov
dec
stos
adc
inc
popa
add
add
mov
sub
dec
dec
cltd
popa
jbe
sub
dec
cmp
sub
outsb
jno
lock
outsb
stc
leave
adc
adc
mov
mov
mov
fists
mov
mov
pop
mov
xchg
xlat
pushf
test
loope
sub
and
cld
in
sub
jg
fstpl
push
pushf
data16
nop
out
in
mov
mov
test
andl
aas
push
jp
ret
xor
add
jge
mov
mov
stos
divl
popa
rcrb
mov
lcall
rclb
push
out
out
adc
or
fsts
rcll
insb
add
pop
sbb
inc
add
test
in
sti
subb
jg
adc
inc
iret
add
add
daa
and
test
pop
pop
and
xor
stos
jns
hlt
adc
lea
fsub
adcb
fdivs
mov
rclb
inc
mov
pop
pop
cltd
test
sti
dec
mov
jbe
mov
or
movsl
cld
lahf
jbe
xchg
orl
dec
xor
inc
aam
dec
or
test
arpl
fsubr
adc
outsb
xchg
mov
fistps
scas
int3
inc
pop
sti
cwtl
jo
int
std
int3
fcoml
xchg
imul
icebp
mov
add
mov
cwtl
and
add
mov
addr16
fldz
xchg
sub
cmp
in
in
sbb
jo
xor
in
outsb
fldt
ds
ds
outsl
test
mov
insb
in
xchg
into
lea
mov
pop
mov
sbb
out
aad
inc
daa
scas
push
fwait
sub
iret
hlt
imul
sbb
mov
cmc
inc
fistpll
pop
and
cmpsb
cmp
pop
in
lods
out
add
mov
sahf
lods
push
cwtl
cld
mov
xor
mov
loop
push
inc
pop
push
stos
imul
in
fsubrl
jne
addr16
pop
dec
xor
mov
cmp
daa
mov
cli
push
and
and
mov
das
pop
inc
pop
adcl
jmp
movsb
jae
cltd
sbb
mov
data16
add
adc
jns
mov
and
and
leave
test
jl
jo
adc
or
pop
push
ja
int3
mov
outsl
adc
sahf
jge
mov
mov
push
in
pop
lret
xchg
mov
adc
mov
add
jle
jle
cli
sbb
addr16
daa
out
popf
cmp
mov
ffree
jno
leave
mov
mov
scas
xlat
data16
outsb
jle
mov
mov
xor
inc
xlat
test
cwtl
test
inc
xor
cmp
sbb
fdivl
adc
sub
stc
pop
adc
testb
sbb
es
inc
dec
pop
sub
inc
dec
jmp
mov
rcrl
inc
mov
jg
lods
mov
xchg
test
imul
fisubrl
jns
mov
mov
add
mov
mov
pop
testl
push
push
sub
test
sub
movsl
dec
loop
lcall
mov
jl
jle
or
mov
hlt
cmp
sbb
pop
popa
inc
das
mov
stos
int
pop
lret
iret
gs
xor
inc
aad
dec
int3
lock
cmp
movsb
cmp
sahf
les
mov
repnz
rcrl
ja
adc
jge
sbb
fidivrl
mov
inc
fstps
ljmp
mov
fbstp
push
int
adc
mov
stc
inc
cmp
cmp
xor
fcoms
sbb
or
sahf
mov
jbe
xor
push
out
or
fwait
and
outsl
adc
pusha
mov
cli
pop
sub
pop
pop
inc
add
cmp
dec
jmp
inc
inc
gs
mov
test
std
or
jnp
dec
aaa
scas
mov
cld
or
jbe
xchg
mov
push
add
jp
mov
jnp
mov
test
ret
out
cld
or
aas
outsb
repnz
aaa
into
jg
lea
aam
mov
sub
je
popa
adc
out
pushf
xchg
xor
shll
sbb
jo
sub
or
rcrl
cwtl
xor
stos
or
mov
cli
in
mov
add
cmpsb
mov
add
insl
mov
enter
addr16
bound
inc
mov
lret
mov
push
lods
arpl
sbb
mov
sbb
add
lods
enter
jae
repz
jge
adc
pop
lret
rclb
sbb
mov
push
out
fnstenv
add
push
push
cld
jl
mov
mov
jmp
jg
inc
outsl
xchg
cld
loopne
pop
les
mov
dec
pop
mov
mov
clc
cmc
adc
pop
mov
mov
mov
pop
rclb
push
push
and
lods
xchg
pusha
xchg
popa
ss
movsb
ss
js
out
data16
and
pop
loope
push
in
movb
adc
data16
pop
mov
pop
jb
test
stos
xchg
sahf
xor
std
xchg
mov
xor
xor
mov
inc
and
inc
out
rcl
pop
cmpsl
mov
or
mov
out
aad
int
dec
fsubrp
inc
xchg
sub
loop
sub
scas
xor
movsb
mov
push
push
inc
test
addb
ljmp
xchg
fnstcw
test
add
or
cld
dec
jp
loop
test
push
loopne
push
mov
adc
lock
andl
lea
ss
cmp
and
lret
jae
pushf
daa
ja
es
mov
out
fcmovnbe
in
inc
sbb
xor
jns
fldpi
or
xor
and
adc
loop
mov
sahf
mov
pop
and
push
push
xchg
arpl
jae
movsl
and
test
adc
btr
fwait
popa
cmp
mov
ds
js
stos
mov
or
loopne
push
es
xchg
fmuls
arpl
xor
pop
mov
push
sbbb
jmp
and
push
mov
pop
imulb
jne
loop
dec
jge
jl
test
repnz
mov
lds
outsl
push
inc
repz
mov
jne
pop
call
scas
pushf
andb
dec
xor
jl
sub
inc
sbb
cmp
ret
rolb
mov
jle
test
add
pop
fmull
in
pop
in
decl
jp
aad
dec
mov
testb
pop
adc
lds
fidivs
insl
ret
push
sbbb
mov
mov
repnz
pusha
push
lea
sbb
pop
lods
loopne
add
jmp
ja
testb
sub
dec
data16
fcomip
test
ja
mov
push
push
inc
and
div
push
inc
leave
xchg
pop
jae
push
inc
lahf
inc
jae
dec
cmp
push
and
popa
xor
jo
fdivs
dec
loop
clc
out
adc
lods
xchg
popf
mov
mov
add
add
xchg
dec
cli
stos
mov
pop
xor
dec
ljmp
fimuls
pop
mov
sub
jne
stc
jp
sbb
insb
test
in
aaa
mov
xor
mov
ret
adc
push
push
test
mov
jle
rcrb
loopne
push
cmp
cmp
aas
stos
add
dec
mul
pop
in
jecxz
lds
lret
scas
sarl
icebp
ljmp
clc
cmc
push
movsb
sti
test
lea
pushf
xor
jmp
mov
pusha
or
jne
dec
mov
jecxz
hlt
jnp
shl
mov
stos
or
test
push
movb
jge
loopne
xchg
test
jecxz
repnz
sti
lods
inc
insb
adc
pushf
roll
sbb
xchg
lahf
mov
xlat
sbb
fisubrl
xchg
xor
fstpl
ficoms
and
xchg
out
and
shl
sbb
cwtl
push
scas
mov
dec
int3
mov
xor
dec
add
pusha
and
xchg
rolb
in
jmp
jp
inc
inc
addr16
xchg
scas
enter
movsl
fs
rorl
jmp
cmp
mov
mov
fsubrl
or
xor
decb
jle
xchg
cmpsl
sbb
lods
xchg
dec
and
jbe
movsl
dec
fcomip
jle
and
into
push
xor
inc
push
loope
push
testb
jle
jmp
mov
sbb
pop
mov
push
mov
mov
mov
adc
mov
and
mov
test
adc
in
addr16
pop
test
push
push
loope
cmp
push
xchg
stos
pop
aad
jmp
cmp
out
mov
stos
cmp
jnp
bnd
mov
cmc
std
pop
adc
mov
pop
ret
mov
jns
std
adc
mov
cmpsl
das
xor
orl
jo
add
test
stos
inc
inc
push
adc
dec
leave
sub
dec
arpl
sar
es
xchg
loopne
dec
xchg
and
pop
or
cmp
pushf
xor
mov
pop
sub
mov
cmp
leave
and
lret
cld
aam
add
mov
out
push
mov
jne
cmp
pop
dec
xchg
or
mov
test
cmpsb
xor
xchg
adc
fdivs
mov
or
jg
out
lahf
xchg
jmp
add
pop
mov
or
fsts
inc
popa
xorb
sub
enter
sub
adcb
sbb
ds
aas
sbb
pushf
mov
cmp
lock
dec
fidivrl
fstp
data16
adc
outsb
cmpsb
push
rcrb
xor
cs
add
mov
leave
pop
pusha
gs
mov
sbbl
add
push
mov
mov
lret
cmp
in
inc
test
test
add
jl
sbb
push
pop
ss
or
adc
mov
fisubrs
outsb
jle
add
nop
and
add
int
sub
in
rolb
out
jbe
pop
and
movsb
out
lods
xor
fistps
xor
sbb
arpl
fistpl
mov
imul
push
and
loop
mov
mov
mov
xchg
das
and
or
addr16
sbb
fxch
enter
fistpll
mov
into
push
stos
pop
fadds
aam
sbbb
test
jp
popf
outsl
add
cli
movb
and
int
rcrb
mov
cmp
xor
push
xchg
inc
cmp
divl
or
lea
xchg
cs
mov
or
adc
mov
ret
outsb
adc
sbb
or
adc
rcrb
in
push
das
inc
cmc
cmp
cmpsb
sub
cwtl
repz
jp
cmp
scas
add
inc
test
cmpsb
mov
loop
iret
movsl
adc
dec
pop
cmpl
sub
adc
lock
js
cld
push
xor
out
shrb
dec
ret
sbb
mov
xorps
jl
cmpsl
pop
adc
int
pop
lret
push
in
pusha
xor
mov
jno
mov
aam
push
es
aas
pop
cmp
xchg
sarb
shr
dec
xor
int3
test
mov
pushf
sbb
ss
test
ret
repz
or
lods
mov
test
into
dec
push
mov
fwait
mov
test
int3
adc
aas
aad
movl
xchg
adc
xor
adc
inc
sbb
or
inc
pop
imul
scas
pop
outsb
test
out
test
out
cld
das
lods
call
es
iret
stos
fisubl
leave
pusha
mov
mov
aam
jae
xchg
xor
ljmp
int3
mov
fsubrl
cmp
stc
cmp
ficomps
mov
fsts
fldt
pop
gs
fidivl
xchg
shl
orl
dec
aaa
mov
pop
push
adcl
or
addl
scas
xor
pushf
out
fnstenv
das
aas
pusha
mull
lahf
shll
and
jg
test
add
out
lock
out
jl
jmp
xchg
mov
jb
jb
sahf
clc
cli
and
mov
arpl
arpl
leave
ljmp
push
arpl
test
js
subb
jbe
or
jl
add
or
xchg
mov
mov
add
fidivrs
test
aaa
iretw
movsl
fwait
push
mov
je
rcrl
sub
adc
jb
mov
mov
mov
cmp
push
popf
cmc
outsb
add
loopne
and
pop
lea
mov
test
sbb
call
test
or
mov
sar
inc
pop
mov
or
sub
pop
xchg
push
pusha
cli
vpavgw
mov
mov
sti
pop
incb
sar
out
pushf
sbb
adc
xor
in
fidivl
insb
jle
insb
vpmovmskb
das
add
mov
inc
push
xor
pop
ljmp
clc
and
rorb
pop
add
insl
dec
and
movsb
push
mov
adc
mov
xchg
ret
push
lods
dec
add
cld
jnp
cmpsl
add
add
jmp
jl
mov
inc
stc
adc
jns
into
bound
popw
adc
addb
jae
xorl
fldenv
adc
dec
jp
xchg
insl
jmp
fwait
xchg
mov
ret
and
std
pop
ds
inc
xor
push
addl
scas
xor
lock
stos
jmp
and
cmpsl
xor
dec
lock
jae
cwtl
imul
neg
fs
dec
imull
push
les
mov
shlb
push
imulb
push
mov
out
orb
cli
push
negl
adc
sbb
jnp
dec
mov
push
lock
xchg
sub
xlat
add
lahf
in
sub
adc
adc
ret
ss
dec
dec
scas
mov
push
test
push
arpl
push
ss
or
mov
out
pop
rol
jnp
jge
sahf
fbld
mov
xchg
dec
out
xor
daa
add
pushf
push
loop
cmp
int
fwait
adc
and
shlb
xchg
testl
sbb
cmp
sahf
push
ds
mov
pop
mov
loopne
shl
mov
or
mov
cmc
cmp
push
sub
jno
ror
out
sub
and
fisubrs
mov
movsb
push
test
jae
inc
lcall
sub
xlat
mov
mov
add
int
fcoms
push
mov
mov
mov
loopne
inc
scas
js
gs
loope
pop
sub
sbb
out
xor
pop
rorl
lds
mov
out
xor
or
ljmp
test
scas
std
xlat
adc
ja
sbb
cmp
cmpsl
jp
clc
sub
mov
loope
dec
js
xchg
scas
daa
push
imul
leave
test
sub
jge
js
test
out
xchg
sub
xchg
sarl
idivl
xor
and
lds
mov
mov
les
nop
loope
ret
ffreep
jp
imul
mov
cmc
dec
test
dec
scas
aaa
add
inc
push
xlat
adc
mov
jo
pop
int3
mov
lock
scas
and
pop
mov
aad
xorb
push
add
pop
pop
dec
sub
or
jg
test
inc
mov
mov
xchg
insl
inc
push
and
inc
imul
jne
jnp
inc
lods
mov
push
repnz
sahf
es
jg
inc
and
ret
add
or
and
mov
or
mov
aas
sahf
movsb
adc
mov
sbb
inc
pop
in
dec
mov
mov
or
notb
movsb
ficoml
sub
pop
jb
mov
cmp
int
test
mov
bound
mov
mov
push
add
jecxz
push
pop
mov
ret
dec
pusha
push
lods
xchg
movsb
outsl
rclb
xlat
sub
sbb
or
inc
mov
jnp
and
inc
jmp
sub
sub
nop
fldcw
sub
aam
cmp
daa
jg
xor
mov
nop
and
lock
inc
inc
push
fmull
or
div
mov
pop
xchg
sbb
push
test
pop
push
fdiv
dec
repnz
mov
mov
cld
and
pop
popf
inc
subb
out
xchg
sub
sbb
mov
push
stos
icebp
into
aad
push
xor
adc
xor
add
adc
pop
sahf
ja,pt
aas
mov
pop
inc
or
sarl
inc
cmp
fbld
adcl
in
pop
cld
or
add
and
enter
fldl
sbb
pop
sahf
mov
jmp
mov
cmp
add
dec
pop
xchg
mov
adc
lret
dec
mov
and
xor
fsubrl
cld
xor
popf
push
cli
mov
mov
lret
jg
cld
mov
sbb
mov
adc
pop
popf
or
sbb
fisubrs
add
loopne
repz
mov
mov
inc
or
lahf
out
or
mov
jmp
mov
or
imul
test
addl
push
or
push
sub
or
in
rcrb
sbb
mov
push
jg
aam
fwait
mov
dec
dec
outsb
jmp
inc
mov
mov
lds
or
rcrl
jnp
inc
add
movsb
mov
iret
jmp
mov
xor
add
xor
inc
sub
jmp
in
pop
push
pushf
psubsb
push
lahf
ljmp
mov
mov
lods
add
dec
jecxz
andl
add
inc
cmpl
cmpsl
push
add
sbb
xor
lcall
and
test
loopne
xor
pop
dec
fistpl
in
insb
sub
repz
in
in
push
xchg
push
mov
aas
rcl
aad
mov
fwait
jmp
push
ljmp
jno
mov
in
xchg
jge
inc
repnz
xor
movsb
shrl
enter
lcall
ds
arpl
sbb
fsts
mov
fs
ret
or
pop
jne
mov
xor
push
outsb
insl
scas
cmpsl
adcb
or
fistl
jl
ja
inc
mov
fldt
aam
in
outsl
mov
sub
cmp
ret
jmp
out
sarl
mov
xor
push
ret
aad
outsl
sub
cmp
mov
outsb
pop
xchg
cmp
push
xchg
mulb
scas
jecxz
mov
or
std
sbb
push
pusha
mov
cs
popa
push
jp
pop
and
jg
les
es
in
out
sar
and
cmp
loop
mov
fists
cmp
cmp
call
dec
fidivl
les
mov
rclb
test
xchg
push
enter
inc
fadds
fcompl
rcr
mov
sti
inc
imul
pop
cwtl
mov
adc
xchg
arpl
mov
sbb
jl
push
cmp
sub
dec
movsb
jno
aaa
mov
or
cld
popa
and
mov
jmp
pop
int3
cmp
or
lret
rclb
inc
aaa
or
fiaddl
dec
out
ficompl
cmp
push
mov
xor
and
push
movsb
pop
lret
mov
popl
scas
and
adc
cmp
je
mov
js
add
pusha
lret
mov
in
cld
lcall
adc
out
mov
icebp
aaa
arpl
fmull
mov
jbe
jp
movsl
mov
cmpsb
decl
das
pop
xchg
or
sbb
es
xor
cmp
mov
or
jnp
inc
pusha
sub
mov
cmp
push
pushaw
in
test
out
addr16
mov
cmp
insl
push
mov
mov
das
rep
fstp
push
sbb
xor
pop
repnz
sbb
sbb
pop
jns
mov
ret
jle
outsl
xor
mov
shll
pop
jns
mov
ret
rorb
call
insl
aad
add
stos
pop
js
and
mov
jge
scas
inc
xor
push
jne
or
sub
dec
add
stos
push
pop
and
aad
jge
push
in
sub
xchg
lret
mov
sahf
ljmp
scas
or
mov
mov
clc
mov
or
inc
ljmp
popf
ss
clc
addr16
add
data16
flds
popa
inc
jne
subb
outsl
jne
add
push
mov
and
push
aam
fldl
rorl
push
pop
fnstsw
or
sbbl
mov
xchg
fstpl
pop
sbb
pop
push
imul
jne
sbb
fisubrs
mov
mov
lods
or
pushf
bound
imul
pop
lret
insl
loopne
ret
push
out
outsb
xchg
lret
push
aas
jb
mov
sahf
inc
jo
and
inc
cwtl
xlat
dec
fs
mov
xchg
add
loope,pt
int3
inc
leave
bound
jne
lret
xorb
sbb
jle
xchg
xchg
lahf
inc
dec
dec
xchg
pop
cmp
sahf
or
add
jmp
mov
pop
xlat
and
xor
jge
add
dec
xchg
mov
adc
loopne
jl
jb
push
pop
mov
cmc
repnz
or
mov
jl
sbb
mov
cmp
xchg
gs
or
inc
inc
popf
and
mov
add
popf
stos
mov
cs
js
push
push
das
movb
imull
dec
fldcw
aaa
into
inc
scas
ficoms
shll
fwait
cmpsb
fsubrl
xor
rorl
push
push
mov
adcl
jne
bnd
int
pusha
sbb
jmp
ljmp
pop
sub
or
pop
dec
sbb
sbb
dec
mulb
mov
xchg
mov
out
xchg
mov
icebp
mov
adc
repz
mov
mov
jnp
xchg
pop
popf
je
popa
xor
std
rcll
mov
testl
aad
cmp
dec
ret
pop
repnz
adc
mov
lret
fcomps
dec
in
ljmp
xchg
pop
xchg
dec
loop
sarb
lock
movsl
lcall
inc
sub
stc
sbb
jb
test
shl
adc
into
fsubs
lock
xchg
pop
les
out
gs
xchg
jge
add
xchg
sub
test
iret
pop
kmovw
je
pop
cmp
aaa
mov
aad
out
adc
fidivl
xor
push
lods
ret
jge
decb
sub
and
into
gs
in
and
clc
fistpll
js
mov
or
xorb
sar
mov
arpl
dec
mov
stc
es
mov
sbb
andl
xor
sar
bound
dec
lret
ret
push
insl
fwait
je
rol
imul
stos
pop
sub
fisttps
out
mov
dec
push
push
lcall
push
xchg
dec
rep
fdivs
pop
jle
cmp
test
add
cmp
mov
inc
in
ds
int
fildll
push
xor
xchg
pop
pop
add
or
lea
fldt
mov
les
pop
push
dec
mov
xchg
inc
jecxz
pop
loopne
pop
inc
mov
repnz
inc
and
sbb
fucomip
adc
fwait
inc
call
cmp
sbb
adc
add
ds
repnz
repz
sub
xor
mov
pop
pop
mov
fistpl
notl
in
popa
orb
divl
in
das
sahf
sarb
inc
dec
cmp
mov
jecxz
mul
in
push
out
stc
fcmovnbe
mov
sbb
mov
bound
insb
loop
mov
int
cmpsl
nop
dec
in
icebp
mov
push
dec
icebp
push
adc
mov
dec
mov
loopne
push
insl
push
les
sbb
ss
out
sub
cmp
mov
add
cltd
fwait
or
fwait
sub
sbb
sbb
lea
stos
shrb
cmp
xchg
jbe
out
push
bound
jmp
xchg
xchg
pop
xor
dec
mov
mov
test
enter
inc
sub
jno
cmp
orb
pop
cmp
push
push
pop
lahf
inc
sub
cmc
mov
jecxz
adc
movsl
aam
inc
fsubp
icebp
aam
scas
shll
pop
lods
js
add
push
rorb
cli
pusha
xor
sbb
mov
cmp
lea
lds
ja
scas
pop
lahf
dec
out
mov
cmp
int3
jle
xor
pop
ret
es
push
rcrl
sbb
cld
imul
js
int3
cmpsb
imul
mov
mov
mov
add
xchg
aad
or
sbb
pop
push
and
jo
sbb
and
iret
jl
jbe
sbb
and
int3
jg
xchg
add
sub
add
jns
mov
xchg
flds
sbb
xchg
xchg
jb
jg
mov
testb
mov
cmp
jle
jg
ljmp
dec
or
punpckldq
out
xchg
pop
cmp
test
or
mov
adc
pop
testb
add
repnz
popa
mov
pop
fldcw
in
test
inc
pop
insb
inc
pop
cmp
and
add
mov
add
xchg
call
test
mov
aam
in
std
test
jecxz
stos
cltd
stc
test
ljmp
sbb
add
and
dec
out
push
mov
rol
repnz
dec
cmpsl
mov
inc
mov
pop
adcb
cli
add
or
and
pop
scas
mov
cmc
sbbl
repnz
and
sub
jae
es
xor
jbe
xchg
sub
inc
ss
fidivl
push
idiv
mov
jp
iret
in
add
out
add
mov
mov
cmp
or
hlt
mov
in
addr16
in
adc
sbbb
dec
in
into
mov
dec
push
imul
lds
lret
adc
mov
ljmp
jmp
repnz
fcoms
mov
lods
aaa
lret
mov
mov
push
aad
dec
mov
adc
sub
fldl
xor
cmpsb
scas
pop
insb
aad
cmp
dec
imul
ja
or
mov
in
xchg
pop
jne
mov
sbb
mov
mov
adcl
mov
lret
imul
jne
and
push
inc
std
jo
lret
pop
out
dec
xchg
sub
lret
arpl
push
movsl
fiadds
ljmp
ret
or
sbb
adc
insb
jg
out
inc
xchg
dec
lret
jge
outsb
imul
jbe
pop
sub
out
arpl
fsubrl
mov
fldcw
adc
mov
pop
pop
stc
xor
cld
push
pop
push
orl
loope
push
scas
movsl
fnstenv
out
and
fildll
out
jno
pop
dec
data16
xchg
xor
adc
inc
push
dec
mov
gs
aad
faddl
cmovo
push
and
les
jg
out
fnstsw
mov
push
inc
bound
cmpb
imul
data16
orl
mov
xor
ret
divl
inc
imul
cmpsl
mov
pop
and
lcall
pop
mov
pop
sub
push
loope
jne
ds
imulb
and
pop
in
push
mov
xchg
add
jne
pop
test
negb
mov
dec
pop
mov
adc
push
mov
mov
xlat
mov
outsl
stos
jne
outsl
xor
dec
ss
and
scas
mov
push
cmp
icebp
inc
sub
gs
xchg
cmpsb
mov
jns
es
push
sub
push
mov
mov
leave
inc
imul
fucom
xor
lahf
sub
sahf
cmpsl
mov
aas
addb
cmp
lock
inc
ficompl
mov
mov
clc
les
mov
push
insb
sub
mov
lods
mov
xchg
add
je
cmp
ja
cmp
xchg
nop
sub
and
mov
clc
cs
add
sbb
jbe
int
pxor
aam
out
and
in
mov
xor
mov
mov
jae
and
insb
pop
inc
pop
lea
sar
sbb
shl
dec
scas
arpl
stos
cmp
jne
jecxz
lcall
jbe
add
pop
repz
cltd
jb
std
adc
lcall
movsb
das
add
xchg
inc
pusha
xchg
test
adc
ficompl
xchg
and
scas
lods
xchg
sub
xor
inc
je
mov
sub
mov
test
outsl
pop
push
mov
xchg
or
adc
pop
pop
in
arpl
push
xchg
lea
cmp
clc
adc
push
pop
out
or
cltd
pop
ret
pop
loope
aas
sub
inc
sbb
testl
int
dec
cmp
push
outsb
imul
jbe
mov
or
cmpsl
je
out
cmp
jne
nop
scas
pop
imul
xchg
arpl
int3
push
ljmp
imul
mov
cmpsl
fs
popf
hlt
and
sbbb
jne
test
xchg
out
inc
dec
push
and
mov
pop
imul
cld
aam
lret
pop
xor
or
adc
mov
fcomip
jnp
insl
jae
sub
push
mov
xor
loope
dec
push
adc
cltd
xor
sbb
xchg
fildll
add
xor
mov
mov
cmp
push
xor
mov
dec
test
je
lcall
insb
push
adc
jmp
inc
or
fsubrl
mov
jb
data16
xchg
jle
fldl
test
lods
fimuls
jbe
xor
jecxz
test
cmc
iret
or
jp
in
inc
fidivs
or
les
xchg
shlb
mov
lods
inc
add
dec
xchg
aas
ret
jnp
xchg
mov
mov
and
ret
repz
push
push
roll
inc
lcall
and
imull
je
dec
mov
mov
sub
cmp
arpl
pop
mov
shlb
push
cmp
cltd
imul
mov
filds
add
addr16
sub
inc
int3
sahf
movlps
mov
mov
and
js
cmc
mov
add
repz
jne
test
jle
pop
mov
lcall
mov
jge
in
xchg
jmp
push
mov
pop
xchg
je
fcmovnbe
adc
mov
shl
push
push
sub
jb
or
xor
jo
out
xlat
loop
mov
jne
call
leave
and
cmc
hlt
or
ret
xor
xchg
bound
jecxz
sti
nop
nop
push
mov
ret
rcll
push
push
jp
repnz
js
lock
jp
push
inc
sub
xchg
pop
shlb
push
arpl
xor
jae
jb
shrb
int
mov
shrb
pop
filds
pop
jecxz
jle
mov
ljmp
adc
addl
mov
fdivrl
dec
push
int3
inc
push
jno
enter
jae
ret
xor
sbb
aad
pusha
adc
in
inc
push
add
das
inc
fistps
sbb
sub
ja
into
jne
sbb
sbbl
cmp
adc
movsl
cltd
into
aad
sub
dec
sub
ret
xchg
jns
mov
in
cmp
sub
pop
dec
in
jmp
mov
shl
mov
cli
aad
xor
test
pop
in
std
cmp
mov
call
lahf
mov
fistpll
push
insl
sub
scas
out
and
int
popl
aaa
daa
out
or
stc
fsubrl
xlat
movsl
xchg
or
add
and
xchg
mov
popa
in
mov
es
call
test
push
icebp
test
xchg
jl
lods
dec
xchg
dec
cwtl
adc
pop
jecxz
sub
je
sbb
cmc
dec
push
mov
icebp
push
ja
adc
aad
pop
xor
push
imul
pushf
inc
inc
fucomi
and
mov
fiadds
pop
pop
inc
cmp
adc
sbb
sub
jb
stc
stc
nop
sub
pop
ss
cmpsl
mov
dec
out
sahf
insl
sub
mov
dec
repnz
mov
test
adc
in
mov
sub
ret
mov
std
xchg
cmp
and
shrl
sub
rcrl
sarb
xchg
adc
mov
rol
push
loop
mov
add
pop
xor
xor
mov
jbe
cmp
and
mov
aas
in
push
push
pop
fldt
ja
sbb
mov
jecxz
jge
xor
orl
mov
xor
sub
fstp
push
adc
push
cmc
or
jge
jne
cmc
aaa
xor
adc
hlt
stc
inc
push
frstor
ficomps
push
sub
rcrb
cltd
arpl
clc
fwait
pushf
nopl
fidivl
sbb
fcomps
or
pop
test
dec
dec
xlat
testb
inc
in
adcl
cltd
jo
loop,pn
pop
inc
cmp
scas
ficoml
std
jg
outsl
push
mov
arpl
dec
std
dec
or
es
add
mov
fimull
push
pop
push
nop
add
and
test
or
andb
nop
ds
insl
dec
stos
push
jl
mov
inc
popf
pushf
xor
jb
cmp
and
insb
fidivrs
or
lods
sbb
cli
insl
add
int3
jne
pop
aas
clc
xchg
xchg
push
pop
push
sub
xchg
jmp
pop
mov
int3
mov
ret
sub
test
mov
xchg
sti
xorl
lods
jnp
inc
mov
xorl
pushf
jl
sti
or
xor
adc
out
inc
outsl
mov
das
or
es
jno
add
sahf
das
int
push
jmp
mov
jae
repz
aas
adc
cmp
and
xchg
shl
lcall
fwait
ret
or
mov
pop
adc
xor
xor
fsts
mov
or
xchg
shrl
mov
xchg
jno
push
ret
cmpsl
test
ficoms
pop
or
cmp
pop
inc
jmp
lds
dec
pop
movsl
arpl
push
jmp
call
xor
clc
mov
rol
shrl
pushf
inc
add
dec
cwtl
loope
cmp
sarl
stos
jnp
push
add
mov
jb
leave
mov
les
jg
mov
sbb
sbb
pop
lds
std
xchg
aas
xchg
cmp
sbb
inc
adc
xchg
xchg
std
xchg
sub
fs
cmp
lods
movsb
jmp
gs
fdivr
adc
daa
aas
mov
lret
mov
in
fsubr
in
addl
lea
lods
add
xchg
idivl
adc
xchg
xchg
add
jmp
leave
test
ret
cmpsb
jne
adc
stos
inc
sub
aaa
scas
fsubrl
lods
jbe
fnstsw
and
fst
xor
movd
adcl
repz
lret
pop
insl
xlat
in
stos
mov
shll
cmc
mov
outsl
daa
pop
xchg
jo
rcrb
mov
jecxz
xor
in
stos
mov
clc
in
mov
sahf
into
popf
inc
and
push
or
std
nopl
cmp
pop
xchg
stos
and
add
mov
xor
testb
and
push
pop
cmpsb
xchg
pop
lea
ja
add
aad
loopne
xchg
rcrb
xor
push
pop
cmp
imul
lret
outsb
pop
out
cmp
mov
in
pop
xlat
sub
push
pop
mov
add
lret
sbb
cmp
sub
fs
int3
mov
out
jg
pop
or
popf
jo
or
sbb
pop
dec
or
nop
daa
mov
fnstenv
psllw
pop
inc
pextrw
pop
outsl
mov
mov
aaa
movsb
push
cld
xchg
cmp
das
add
stos
lods
and
loop
loopne
sub
dec
xor
fwait
xor
rcll
ficoml
cmp
sbb
mov
sbb
call
fwait
hlt
in
sub
dec
das
push
mov
jle,pt
outsb
sub
fldl
xchg
rcll
daa
sbb
addr16
mov
mov
xlat
mov
aas
clc
add
adc
ljmp
orb
push
cmc
sub
xor
test
jle
inc
rorb
cs
sub
xor
push
stos
into
enter
mov
and
jl
out
inc
loop
in
cmpsl
sbb
outsb
dec
adc
aas
cmp
push
mov
jle
xchg
fs
adc
ficompl
add
cltd
lahf
xor
push
fwait
sbb
std
sub
por
sub
ss
sbb
pop
test
fstps
pop
dec
out
sub
lods
mulb
clc
out
incl
or
or
shlb
xor
fld
mov
data16
xchg
jb
cwtl
push
mov
adc
dec
sbb
mov
ljmp
xchg
lea
or
clc
pusha
lods
imul
or
divb
push
cli
in
adc
mov
sbbb
es
or
mov
xchg
and
adc
lcall
xchg
sbb
test
adcb
in
lcall
lret
mov
push
scas
cmp
pop
or
pop
cmp
dec
mov
xchg
sub
cmp
mulb
mov
adc
pop
jo
sarl
sbb
shrl
and
sti
jo
shll
sub
fdiv
mov
addr16
clc
ss
jns
aam
push
fwait
imulb
enter
sub
xchg
aad
cmp
cli
mull
jns
int3
xor
popf
out
lret
pop
out
jle
out
cmp
dec
push
jno
inc
sub
shlb
std
dec
ds
mov
jmp
jge
or
ja
call
into
es
pop
iret
lods
inc
add
out
out
popa
sbb
les
imul
testl
ljmp
popa
lret
mov
mov
leave
jp
or
insl
out
ja
xor
adc
mov
adc
adcl
jp
subb
push
push
loop
ljmp
jno
test
aam
sbb
jb
sti
and
data16
mov
mov
loopne
je
jl
mov
or
jno
add
ficoml
mov
jnp
pop
fsubs
add
and
lret
rcrl
in
xchg
mov
test
daa
stos
fistps
xor
enter
aaa
movsl
jno
add
dec
in
cmp
iret
popa
scas
enter
and
and
push
imul
jp
loop
movsb
push
outsb
mov
inc
out
popf
mov
idivb
cmp
cmp
fcoms
movsl
mov
ret
loop
bound
cmp
int3
dec
test
int
adc
push
rcl
push
xlat
and
popa
les
insl
push
cli
insb
sbbl
cmp
xchg
mov
insl
sahf
pop
sti
xchg
sbb
sub
into
lcall
leave
int3
movsb
add
sbb
call
movsl
scas
fldl2t
xlat
repnz
popf
cmc
pusha
lods
jmp
xor
xchg
mov
mov
sbbb
cmp
inc
pop
repz
add
sbb
or
jmp
mov
jnp
dec
mov
jbe
xchg
mov
or
arpl
cmp
sub
int3
pop
dec
dec
lods
or
cmp
in
jnp
sarl
ja
shl
aaa
idivl
jne
mov
adc
lret
das
fmul
and
arpl
sub
hlt
pop
imul
and
das
test
sbb
push
sarl
daa
mov
in
inc
stos
hlt
mov
shll
and
mov
loopne
out
jne
sub
jl
dec
rclb
sub
call
adc
jbe
call
sbb
adc
das
std
jg
mov
out
pushf
cmovb
jns
and
cmp
push
jnp
stc
ss
cmpb
push
dec
scas
xchg
js
shufps
pushf
ljmp
xor
xchg
pop
inc
cli
scas
add
jg
mov
mov
ds
add
sarl
out
dec
xor
iret
fucomp
push
lods
cwtl
scas
dec
mov
or
push
xchg
pop
jo
pushf
lods
rorl
sbb
aad
dec
adc
ss
push
xor
push
fwait
jbe
dec
daa
push
dec
pop
fsts
in
cmp
test
push
push
sub
pop
sub
ja
in
inc
loop
jbe
popa
fcoml
inc
jg
jbe
insb
js
jae
je
add
into
dec
jp
adc
cmp
jo
jbe
inc
mov
pop
repz
mov
jbe
or
repz
jo
pop
sbbl
scas
adcl
testl
cmp
push
shrl
fsubrl
lods
xchg
sbb
fnstcw
cmp
push
sub
or
jl
cmp
push
cmpb
add
lds
out
scas
mov
gs
out
mov
popf
icebp
mov
or
xchg
ljmp
jge
xchg
jmp
mov
lcall
push
lods
stc
pop
outsl
push
into
popf
sub
cmpsl
sbb
pop
aaa
push
addr16
xor
scas
pop
popf
mov
loope
sub
movsl
loop
push
in
mov
pusha
je
inc
movsl
inc
cmp
adc
xor
sbb
je
sbb
cmp
dec
mov
mov
into
and
repz
repnz
mov
mov
adc
xor
push
sub
cli
aas
imul
imull
cmp
addb
call
shrl
mov
aad
mov
test
jp
orb
lahf
dec
lds
lret
loop
shrb
jge
imul
or
sub
aad
out
ds
out
mov
push
js
outsb
test
lret
imul
insb
lret
xor
dec
and
dec
arpl
leave
mov
rcll
cmp
adc
movsb
jg
xchg
jle
cmp
ret
or
mov
pop
inc
int3
sbb
pop
scas
adc
test
in
repnz
popa
inc
mov
fwait
push
dec
cmp
or
pop
add
sahf
xor
add
aad
and
push
stc
sub
std
rcrl
repnz
adc
add
mov
xor
sbb
cltd
add
nop
rclb
pop
push
xchg
mov
popf
cs
jbe
out
push
xlat
xchg
dec
or
jge
jae
mov
stc
daa
out
popf
test
lea
test
xor
pop
push
inc
fldl
mov
sti
cwtl
movsb
cmpps
sbb
das
insl
sub
push
mov
loopne
push
adc
or
cmc
cmp
inc
fmuls
jp
mov
and
and
and
xchg
arpl
jbe
add
lahf
inc
sbb
and
inc
dec
in
ds
pop
mov
cmpsl
jg
das
loope
mov
xchg
testl
adc
lahf
and
nop
stos
test
cs
sahf
testl
stos
pop
fldl
enter
push
push
nop
popf
sbb
into
dec
int
inc
and
ja
aad
negb
daa
lcall
or
inc
cmp
sub
mov
mov
cltd
push
pop
out
inc
je
js
lahf
jb
lea
out
push
stc
push
je
mov
scas
shlb
jmp
cld
and
mov
mov
das
ret
test
cmc
dec
or
pop
out
and
cs
mov
mov
sahf
in
xchg
bound
mov
mov
push
stc
das
dec
jnp
in
cltd
xor
xchg
mov
ret
cmc
sbb
inc
in
mov
sbb
dec
fadds
cltd
hlt
push
xchg
ja
mov
ret
test
jne
xor
push
jmp
sbb
lret
ljmp
test
jmp
jmp
rcll
rcr
ja
or
jmp
stos
outsb
mov
jecxz
push
xchg
aad
dec
lret
cmp
jnp
adc
pusha
lret
xchg
mov
clc
sahf
movsb
jle
jmp
sbbb
icebp
outsl
out
xchg
sbb
cld
xchg
add
xor
sahf
sub
dec
xor
add
add
xor
jae
in
push
sbb
ret
repz
cmp
pushf
pop
xor
call
loopne
push
jae
xor
jl
out
cltd
or
and
lock
scas
dec
fisubl
mov
sub
movsb
mov
and
jge
je
addb
repnz
dec
cmc
inc
jmp
xchg
cltd
js
arpl
xchg
ret
int3
imul
xchg
sbb
adc
jo
xor
inc
rclb
repnz
jl
mov
pop
jecxz
idivl
mov
mov
aaa
int3
cmc
out
scas
push
dec
gs
adc
inc
jb
mov
xchg
mov
dec
sub
aam
jge
rorb
pop
adc
lret
xor
clc
jnp
sub
lahf
jne
or
mov
xor
xchg
mov
or
fbstp
andl
inc
test
bndstx
mov
enter
adc
cmc
mov
adc
xchg
xlat
sub
fimull
pushl
and
adc
in
enter
and
mov
arpl
push
ret
call
dec
and
test
out
cmp
pop
adc
pop
adc
jge
mov
fisttps
incl
jno
pop
cmp
jo
sub
jg
sti
lds
out
add
repnz
pop
out
stc
scas
bound
jecxz
dec
addb
add
jne
cmpsb
cmp
jecxz
dec
dec
ror
mov
add
dec
and
adc
mov
mov
aad
in
push
insl
add
xor
and
pop
add
aas
sbb
or
xchg
in
and
ss
sub
pop
test
sub
inc
movsl
mov
aam
sbb
loope
mov
in
fisubrs
cmpsl
pushf
jp
jmp
rcrl
xchg
and
mov
bound
add
ljmp
jnp,pt
jnp
ret
fwait
js
jmp
xchg
or
mov
push
hlt
scas
fistpll
xchg
xor
xchg
aad
cs
jb
stc
cmp
push
sbb
or
jp
in
shll
fxch
adc
stos
mov
push
in
xor
pop
dec
movl
mov
outsl
andl
mov
andb
sub
xchg
addl
aad
dec
pop
ljmp
sub
jbe
out
inc
inc
xor
test
scas
js
lods
and
jle
out
adc
xor
outsl
xchg
xchg
jne
pushf
lret
in
sbb
xchg
lret
iret
pop
jmp
out
cs
xchg
iret
sbb
cmp
addr16
mov
imul
or
sub
fbld
in
outsl
mov
ret
pop
cs
sbb
adc
les
in
or
outsl
jg,pn
out
dec
test
arpl
scas
jp
nop
and
or
jbe
mov
adc
scas
sbb
shrb
imul
sbb
mov
sub
int3
push
pop
sarl
sub
adc
fwait
mov
loop
andl
outsl
jl
loop
add
jne
xor
sahf
gs
in
sub
mov
das
stc
cmp
sub
outsl
and
jns
xchg
push
pop
movsl
mov
adc
mov
xchg
mov
push
inc
adc
inc
fmul
dec
sbb
arpl
sbb
sub
aam
shlb
sub
les
inc
sub
ljmp
cs
test
fidivl
fdivs
adc
roll
out
pop
in
adc
add
push
pop
mov
push
jno
sbbl
push
jle
loope
and
pushf
dec
push
dec
jecxz
add
xchg
outsb
cli
nop
inc
arpl
testb
cmc
in
arpl
push
push
loopne
adc
jns
fldenv
das
dec
fildll
repz
xor
add
add
iret
outsb
adcb
fwait
out
jl
xchg
stc
mov
icebp
fwait
loop
sub
bound
testb
pushf
nop
sbb
jp
inc
pop
xlat
jecxz
mov
lds
mov
xchg
pop
fsub
mov
adc
sub
pop
pop
pop
xor
in
call
mov
push
gs
fdivrs
emms
pop
fstpt
testl
cmp
jno
xor
outsl
arpl
add
cmp
in
add
jno
push
sub
cmpl
jo
mov
sbb
and
jb
xchg
lds
cwtl
enter
not
ss
lds
mov
jecxz
cmp
or
cmc
push
ret
mov
push
test
ror
inc
rcrl
rorb
lahf
ss
xlat
in
mov
jbe
jmp
cli
pusha
mov
shll
sbb
fwait
mov
cs
jmp
mov
mov
push
fildll
inc
dec
in
scas
repnz
pop
mov
and
dec
push
sarb
push
jmp
loopne
adc
shll
ljmp
cmp
dec
cld
xor
mov
mulb
rcl
out
pslld
mov
imul
push
nop
mov
stos
cmc
and
xlat
in
hlt
cmp
and
test
insb
das
pop
int3
aas
lds
mov
aad
ficoml
jnp
stos
sub
es
pop
cs
mov
in
inc
std
popa
push
mov
and
dec
add
outsl
cltd
lock
enter
xchg
bound
mov
xchg
push
mov
push
inc
adc
add
scas
ret
xor
mov
xacquire
mov
andb
cmpsb
jmp
pop
out
lea
aam
mov
or
sub
inc
push
fwait
add
nop
roll
lcall
and
mov
sub
and
jecxz
enter
and
fmull
leave
inc
sbb
or
push
mov
jae
movsl
imull
sbb
out
jl
scas
and
inc
lods
xchg
mov
popf
test
fiaddl
lret
mov
and
pop
int3
xor
xor
xlat
jmp
pop
and
cmpl
mov
ja
xchg
dec
adc
shll
jmp
mov
call
sub
and
push
jg
clc
mov
sbb
sbb
fxch
idivb
int3
test
mov
pop
jnp
or
sbb
add
idivl
fistl
scas
inc
lods
lods
jne
mov
icebp
or
fs
dec
fdiv
dec
fidivl
push
jb
shlb
ljmp
lods
js
or
imul
js
pop
xor
stc
fimull
add
push
insl
repz
adc
add
jae
sbb
pop
mov
out
icebp
arpl
loopne
pop
loope
test
cmp
cltd
push
jne
aam
stc
mov
xchg
adc
pusha
je
fs
jnp
dec
push
jne
frstor
fldcw
mov
movsb
jae
pop
pop
fsubr
xchg
jp
nop
test
inc
popa
add
jo
movsb
mov
jno
leave
jecxz
daa
sub
fwait
cmpsb
pushf
pop
les
cmp
stos
aas
int3
add
in
fnstenv
les
cmp
in
mov
xor
pushf
orb
and
mov
sbb
mov
push
push
lds
shlb
rol
pop
mov
test
mov
push
jg
inc
cltd
xchg
cld
pop
push
out
xchg
out
xchg
mov
fstpt
inc
out
xor
xchg
sbb
fsubs
or
pop
je
xor
jg
data16
inc
cs
mov
test
rcrb
jbe
add
rcl
loopne
fdivs
outsl
ret
stc
sub
sbb
loope
ja
pop
mov
shrb
xchg
aaa
loop
loope
arpl
ret
sarb
dec
bound
decl
xchg
or
test
jmp
lcall
pop
test
sub
mov
sarb
jne
push
or
inc
sub
fisubrl
pop
fwait
into
in
xor
rcll
sub
inc
mov
rorb
ficoms
out
loop
mov
add
cmpsb
imul
cmc
or
push
fcompl
fdiv
mov
cli
mov
fucom
sub
ret
es
je
pop
cmpsb
or
pop
xchg
sahf
repnz
pushf
lcall
pusha
or
popa
mov
mov
push
adcb
std
push
xchg
into
mov
push
jb
movsb
fldt
clc
fs
jae
iret
test
roll
mov
push
mov
or
mov
mov
jb
ret
add
nop
or
cwtl
or
inc
pop
popa
imul
jmp
jae
mov
jne
jge
jno
rcrb
sub
add
push
xchg
push
push
clc
adc
pop
fs
mov
gs
popf
dec
jno
jb
and
data16
mul
xchg
xorb
in
sbbl
jg
pop
out
xorl
pushf
fsubrs
push
iret
pop
nop
ror
sub
fistpll
cmpsl
ret
adc
data16
adc
push
adc
test
add
mov
insb
xchg
pop
mov
sbb
cmc
inc
pusha
into
sbb
ds
call
jg
outsl
out
cmpsl
movsl
cs
outsb
iret
loopne
jne
rcrb
sub
mov
ss
sbb
mov
dec
mov
ret
inc
xchg
imul
adc
mov
idivb
aaa
ds
or
xchg
iret
push
js
mov
mov
jle
cli
roll
je
cmp
xchg
stc
lcall
cmp
movl
sbb
inc
sti
popa
or
mov
adc
add
cmp
fadds
out
sti
sub
lds
adc
jbe
cli
adc
sti
std
popa
movsb
frstor
aaa
sub
out
std
mov
push
pop
imul
fisubl
lret
sub
jmp
push
adc
add
dec
dec
pop
or
cmp
loopne
jns
push
mov
daa
mov
test
fsts
aad
inc
jb
jbe
jno
dec
pop
push
mov
mov
or
push
stos
andl
shll
js
xlat
int
mov
iret
loopne
jge
mov
pop
lods
fs
arpl
loop
filds
cmp
jge
mov
popf
pusha
and
out
xor
xchg
xchg
scas
int
inc
sahf
push
ljmp
movsl
inc
xchg
xchg
js
sbbb
sbb
xor
xor
test
test
fdivl
ss
push
push
sub
loope
jno
icebp
lods
push
dec
xchg
add
xchg
mov
cmpsb
mov
fs
adc
or
lgs
xchg
push
adc
sbb
adc
jnp
and
xchg
jbe
call
or
xor
mov
dec
lods
ret
jo
push
xchg
pop
fdiv
mov
enter
mov
dec
scas
or
dec
jno
mov
addr16
mov
cld
lcall
push
andb
xorb
ljmp
jne
clc
popf
pop
sub
lcall
dec
jecxz
dec
pop
pop
push
jne
sbb
xor
sub
rcrl
leave
int3
incl
shlb
loopne
mov
daa
push
aad
cmp
inc
ret
frstpm(287
cmp
dec
lods
dec
loopne
jge
adc
in
jl
push
and
dec
js
dec
movsl
stos
ficomps
adc
mov
push
xchg
outsl
adc
xchg
repnz
in
sbb
subb
mov
int3
mov
int3
or
jnp
jmp
sarl
xor
test
inc
xor
fdivr
cwtl
push
sbb
mov
push
xchg
sub
repz
and
popa
les
push
inc
shll
pop
aad
mov
icebp
xchg
inc
ffree
adc
mov
fistpl
iret
push
shll
arpl
flds
or
fdivrl
xor
enter
out
cli
lret
cmpsb
in
aam
inc
pop
mov
dec
out
add
xchg
xchg
lds
mov
std
add
push
and
dec
in
xor
and
or
lret
test
or
out
aas
mov
inc
cltd
pop
fcoml
das
popa
loop
mov
bound
rorl
pop
inc
jns
subl
adc
mov
int3
bnd
jmp
adc
jmp
inc
mov
jae
fidivs
sar
inc
push
fsubrs
test
fisttpl
outsl
cmp
and
xchg
add
hlt
jmp
daa
lock
mov
xchg
cmpsl
sbbl
enter
xchg
mov
add
inc
cmp
shr
fstpt
loopne
fnstcw
push
sbb
inc
into
in
jnp
pop
push
mov
aas
fwait
pop
xor
cmp
test
shll
sbb
popf
jns
bound
cmc
jb
add
or
mov
shlb
add
xor
pop
cmp
lahf
jbe
inc
mov
aas
mov
mov
adc
cmp
fcoml
test
and
stos
pop
lahf
xlat
xchg
test
mov
cwtl
loop
fbstp
in
iret
push
out
mov
lock
inc
sti
jl
sbb
mov
fsubrl
paddsb
sahf
femms
xchg
dec
jl
jg
fidivs
dec
je
xchg
lahf
inc
lds
dec
sbb
repnz
pop
in
stos
rorb
insl
sbb
test
jno
shl
bound
lret
pop
sbb
aam
iret
aad
popa
fmull
test
inc
rcrb
dec
sbb
not
and
push
insb
imul
sbb
lret
mov
push
sarb
nop
inc
sub
inc
out
mov
ja
inc
fdivs
dec
or
clc
and
push
icebp
pop
arpl
dec
push
fbld
daa
xchg
adc
lock
inc
jbe
mov
xor
jle
cmc
scas
xchg
or
mov
pop
dec
xor
hlt
ds
inc
stos
pusha
lret
or
mov
adc
jmp
jecxz
imul
xlat
mov
push
movd
fistps
scas
mov
int3
pop
lods
or
es
jp
lock
inc
test
or
loopne
xor
jg
lahf
sbb
inc
adc
testb
xchg
jmp
enter
clc
call
dec
dec
in
fbld
inc
xor
push
lahf
push
fcmovb
fwait
mov
sarb
jge
jno
push
lods
push
dec
xchg
fdivr
or
mov
xorb
enter
and
leave
sub
jmp
popa
cmp
in
xor
les
inc
and
push
icebp
ds
imul
dec
xchg
add
cmp
adc
dec
pop
xchg
loop
mov
add
mov
pop
jbe
push
in
xor
pop
rorl
outsb
add
mov
fnstenv
xchg
inc
cmpsb
jns
mov
test
aam
jno
push
inc
sbb
pop
cmpsl
into
imul
lea
rclb
xchg
mov
add
repz
lock
jae
jns
test
shrb
inc
cmp
out
jl
in
adc
sbb
push
fmuls
adc
nop
lcall
adc
ss
dec
out
scas
insl
sbb
test
lds
pop
mov
push
xchg
fstl
bound
jmp
data16
xchg
ss
push
mov
cmpsl
xor
mov
scas
cwtl
icebp
movsl
xchg
aaa
jns
inc
hlt
mov
mov
ljmp
xor
inc
or
mov
push
out
orl
orb
mov
mov
jns
dec
imul
push
roll
sub
out
sbb
aad
decl
mov
mov
bound
adc
shrb
ja
or
mov
in
outsl
adcb
mov
sti
pop
and
push
cld
test
mov
mov
and
aam
loop
xor
ja
jg
cmp
or
outsb
sbb
rclb
push
loop
stc
lcall
cmc
add
and
mov
das
push
cmc
push
dec
std
test
insb
jl
movsl
ds
xor
dec
js
mov
xchg
pop
lods
fistl
pop
fdivr
rclb
sub
fistl
xchg
jae
movsb
das
iret
enter
mov
sarb
mov
fmul
push
loop
fisttps
decl
outsb
mov
jecxz
cmp
jmp
stos
sbb
ret
xor
iret
aaa
mov
mov
ljmp
mov
in
push
or
fmuls
addr16
pusha
pushf
ret
cltd
mov
dec
mov
bound
sbb
cld
lcall
push
sub
dec
jg
test
add
sub
enter
pop
inc
rcrl
inc
fwait
leave
push
xchg
xor
cmp
fcomip
ss
gs
or
and
fnsave
into
sub
cmp
rclb
mov
fisubrl
repnz
scas
mov
fbld
sbb
stos
cwtl
daa
shlb
push
dec
in
rorl
in
loop
jle
rcl
mov
inc
scas
outsb
mov
shrb
xor
dec
add
inc
xlat
mov
or
sbbb
inc
aaa
popa
mov
int3
push
xchg
xchg
jb
lds
andb
fnsave
leave
fs
test
inc
cld
aam
idivb
repz
sbb
es
movsl
cmp
jnp
jnp
and
add
movl
inc
pop
xchg
inc
movsb
cmpsl
ja
jae
fldt
push
mov
push
enter
mov
sbb
int3
xorb
sub
inc
inc
jb
jmp
out
sbb
dec
sbb
sti
enter
sub
data16
sar
mov
sbb
jmp
mov
test
rorl
adc
push
jg
xchg
pop
call
in
mov
jnp
sub
adc
int3
dec
mov
int3
and
decl
aaa
push
xor
hlt
push
repnz
cli
rcrl
das
cld
push
stos
stc
adc
mov
out
mov
aas
xchg
fstps
int3
mov
subb
dec
push
mov
popf
mov
in
sub
orl
ja
push
add
xchg
fs
insl
add
dec
pop
add
jp
inc
test
push
xor
push
push
inc
xlat
mov
cltd
jnp
out
lods
dec
loope
into
jmp
mov
mov
cmp
into
outsl
inc
ljmp
std
or
mov
jl
xchg
mov
cmc
pop
scas
clc
add
jmp
push
lock
sahf
mov
repz
xchg
mov
dec
push
push
imull
lar
mov
fists
cmpb
mov
xchg
fcmovnb
loope
repz
sub
pop
pop
dec
in
jl
or
fistpl
cmp
or
mov
loop
sbb
jecxz
das
or
cmpsl
xor
add
mov
jle
enter
lret
mov
fcomps
pop
in
adc
lahf
adcl
or
inc
sahf
dec
inc
fs
pop
inc
arpl
leave
scas
inc
sti
aaa
or
in
or
jmp
inc
push
je
fnstenvs
mov
lea
sbb
jp
fwait
repnz
mov
inc
testb
pop
cs
arpl
fmull
and
scas
sbbl
jbe
mov
notl
rclb
shrl
cs
lret
mov
sbb
in
out
loop
icebp
hlt
imul
insl
inc
ds
data16
js
ljmp
popf
sbb
dec
filds
addr16
iret
aaa
dec
add
ret
sub
push
inc
fcoml
cmp
fwait
xor
mov
push
scas
jge
stc
rcl
outsb
inc
lahf
lea
int3
xchg
and
dec
dec
lock
ds
rorb
js
xor
popa
dec
mov
adc
loopne
lods
daa
cltd
mov
test
xchg
sub
pusha
stos
cmp
femms
call
inc
mov
jg
or
sub
push
out
cmc
dec
cmp
mov
mov
sbb
xchg
repnz
dec
sahf
std
jge
negl
sub
call
adc
aad
insb
push
lret
jle
and
sub
pop
fiaddl
push
or
sub
xor
gs
test
cmp
aad
xchg
pop
mov
fstps
lds
test
cmpsb
jp
nop
ja
fimull
inc
idiv
insb
sti
call
decl
imul
test
push
push
or
cmpsb
push
mov
mov
push
xorb
fstl
leave
lcall
mov
dec
stos
jae
lret
mov
nop
imul
jg
xchg
shlb
xchg
adc
cmc
adc
std
pushf
fwait
test
jbe
je
xchg
adc
xchg
in
xlat
rcr
inc
sub
ja
push
cwtl
and
and
lds
jg
sub
push
dec
movsl
push
sub
and
sub
in
xor
and
frstor
push
leave
xchg
jno
xchg
pop
in
cmp
pop
outsl
cli
scas
inc
sbb
imul
into
xchg
add
dec
pop
repnz
jge
jns
push
ret
es
jecxz
push
or
loope
int3
mov
negl
xchg
fsubs
lcall
adc
adc
and
stos
mov
pop
loop
mov
leave
push
fdivrl
outsb
rorb
mov
ror
repz
pop
xchg
sti
lret
jb
mov
enter
push
mov
inc
pop
addr16
test
mov
mov
rcll
int
cltd
jnp
mov
and
xchg
pop
mov
ja
mov
xchg
iret
inc
fnstcw
mov
leave
xorb
xchg
xchg
in
push
jae
cmp
inc
cmpsb
push
sub
adc
nop
or
cmp
mov
bnd
sbb
aad
mov
lods
adc
adc
lock
popl
cltd
mov
jne
cmp
mov
scas
pushf
mov
into
rcr
pop
cmp
data16
pop
mov
les
sbb
repz
mov
fwait
jecxz
insl
daa
out
out
mov
push
nop
pop
push
jl
pop
adc
mov
lds
insl
stc
sbb
movsb
dec
pop
dec
int3
shll
daa
sbb
fists
scas
adc
jae
sub
jno
mov
dec
or
xchg
insl
popf
test
add
sub
movsl
test
sub
std
into
add
out
adc
add
sub
fsubl
iret
data16
cmpsl
cmp
add
test
fists
mov
xchg
repz
cld
call
dec
mov
xor
inc
xchg
fisubl
mov
mov
or
sub
lds
xor
or
repz
mov
mov
fimuls
jecxz
and
sub
inc
sbb
das
adc
cmp
outsl
call
inc
pop
std
dec
mov
mov
dec
addr16
aam
inc
pop
popf
cmc
inc
pop
or
jb
out
mov
loopne
sub
or
push
xchg
aaa
addl
inc
popa
jle
rorb
and
dec
xchg
cmp
sbb
and
xor
add
sub
arpl
xchg
jle
out
or
cmp
mov
loope
mov
inc
rcrl
scas
mov
testl
not
xor
mov
push
push
or
cmpsb
adc
ficompl
ja
daa
pop
cmpsb
xchg
mov
sub
insb
inc
bound
sbb
les
and
adc
sub
loopne
insb
xchg
popa
stos
mov
dec
in
mov
mov
push
ret
pop
dec
jmp
rcl
xchg
loope
xor
push
decl
add
es
adc
in
push
clc
les
add
push
imul
cmc
mov
ja
out
xor
jo
mov
aam
cmp
xor
stos
inc
ja
and
scas
int3
dec
jle
jb
jb
xor
inc
pop
out
xchg
clc
leave
mov
mov
sub
sbb
test
sub
mov
stc
pusha
fcom
dec
insl
push
push
insb
fisttps
xor
lahf
ljmp
out
ret
adc
stc
push
jmp
outsl
inc
fwait
cmp
xor
mov
dec
xor
sahf
jae
sbb
jns
mov
inc
out
jge
mov
jmp
roll
scas
cltd
and
or
aad
jo
mov
xor
test
xchg
das
xor
lret
mov
xchg
sub
push
sbb
jmp
xchg
add
shrb
push
stos
add
loopne
roll
shrb
aas
lea
into
cmp
mov
arpl
and
ret
scas
sbb
mov
fisttpll
mov
mov
bndstx
loopne
mov
inc
xchg
xlat
mov
jno
add
inc
popa
pop
lahf
std
jo
or
xchg
mov
and
push
outsl
mov
cmp
xor
nop
fbstp
les
pushf
xor
xlat
lods
push
inc
jge
mov
test
sbb
add
mov
test
pushf
stc
xor
mov
std
pop
push
pop
addr16
das
in
mov
in
loop
jo
mov
ds
dec
or
push
sub
jnp
cli
jle
divl
pop
push
or
push
pop
cwtl
ljmp
mov
pop
fwait
sub
sti
dec
in
movsb
push
mov
dec
outsl
cmp
ret
pop
lret
xchg
loopne
mov
cmp
fcoml
mov
xor
in
cmpl
mov
divl
popf
push
in
sbb
imull
and
call
mov
std
and
hlt
adc
aad
movb
fwait
clc
add
add
movb
xchg
bound
je
into
mov
adc
push
fidivrs
call
pop
xchg
adc
ja
std
outsl
add
inc
push
in
mov
out
loope
inc
popa
pushf
ret
mov
push
insl
sub
jb
jp
sbb
mov
negl
leave
add
or
scas
push
jne
jno
stos
and
xor
loopne
lock
or
push
sti
inc
ja
dec
nop
xor
jp
pop
enter
and
icebp
adc
xchg
mov
adc
in
mov
les
mov
xchg
sub
add
xchg
cld
xchg
cltd
decb
and
pop
dec
cmp
fucomi
lahf
outsb
or
insl
jl
daa
int
pop
lret
add
nop
das
or
imul
sbb
sbb
xchg
je
push
inc
inc
popa
cmp
aam
test
pop
adc
lahf
fidivl
out
lea
jecxz
push
lods
repz
loop
push
inc
mov
sub
lods
inc
push
xchg
dec
fsubp
and
ljmp
outsl
xchg
inc
int
mov
pop
cli
lret
add
inc
pop
push
out
and
aas
inc
pop
pop
adc
outsl
cltd
mov
in
cmpsb
test
cli
adc
sub
cld
push
ljmp
insb
sahf
popa
jne
lods
dec
fidivs
shll
data16
xchg
jle
xchg
cmc
mov
inc
es
int3
ds
ret
sub
pop
popa
les
test
sar
rep
popf
cltd
xrelease
mov
adc
xchg
sbb
adc
nop
jg
pop
mov
xchg
sub
and
lret
dec
hlt
lret
stos
in
ret
pop
pop
push
test
add
mov
sbb
mov
inc
nop
cld
xlat
pop
out
dec
dec
pusha
sbb
jns
scas
outsl
loop
jmp
dec
shrb
pop
xchg
call
je
repnz
sbb
jbe
nop
imul
pop
mov
mov
add
mov
insb
test
fcoms
js
loope
leave
test
aaa
pusha
lea
cld
or
sub
inc
sub
roll
ds
out
push
lahf
insb
sub
in
mov
sub
mov
dec
mov
pop
arpl
cmp
cmp
addl
lret
dec
stos
sbb
fidivrl
sub
je
sarl
movsb
sub
push
jl
mov
outsl
int
lea
xor
leave
fistl
cmp
inc
inc
rcrb
push
roll
fiaddl
adc
test
pop
pop
dec
xchg
imul
mov
iret
aad
std
lock
xor
jno
in
sub
xchg
sahf
ljmp
sbb
mov
jmp
loop
rcrb
cmp
xor
xor
scas
inc
cmp
jg
inc
fistpl
xlat
adc
inc
pusha
mov
sti
pushf
xor
icebp
mov
adc
imul
test
icebp
xor
mov
jae
test
push
or
cmp
lgs
push
and
call
hlt
adc
mov
add
ret
cmpsb
inc
xor
dec
enter
jo
xor
and
cmp
repnz
das
pop
icebp
repnz
rcrl
imulb
add
incl
pop
ja
popf
in
int3
dec
ljmp
sbb
mov
push
mov
into
data16
test
mov
cmpsb
jne
es
jbe
les
lods
jnp
aam
mov
and
and
popf
pop
nop
ficoms
xchg
popf
je
cmp
std
or
pop
insb
nop
mov
mov
shll
mov
test
aas
mov
es
mov
pop
jbe
fsts
dec
and
jecxz
xor
int
lods
push
hlt
test
lret
sbb
test
fxch
bound
divl
add
sub
jns
inc
ret
js
push
popa
push
xchg
sub
sub
fucomp
xor
test
sbb
xor
jo
decb
xchg
xchg
enter
mov
sbb
dec
in
ret
adc
cli
lds
jb
sub
pop
and
shrb
inc
dec
pop
lock
jecxz
rorb
and
das
bound
div
cmp
pusha
call
dec
mov
or
mov
sub
add
add
push
pop
aam
int
and
push
testl
lret
add
push
ss
pop
ja
lods
pop
dec
push
addr16
cwtl
lret
sub
and
aas
xchg
mov
cmp
test
push
mov
cmp
mov
fists
adc
cmp
jmp
cmpsl
cld
jnp
std
aas
dec
pushf
jg
dec
cmp
mov
jge
mov
or
xchg
jmp
jo
dec
and
repnz
out
stos
inc
pop
lock
xor
mov
sbb
test
es
outsl
and
and
incl
into
cltd
or
pop
cltd
fbstp
repz
scas
pop
cld
xchg
nop
iret
movsb
icebp
lcall
cmp
mov
clc
repnz
pop
fwait
xor
jl
add
mov
jnp
movsb
lcall
push
mov
test
mov
sbb
testb
divl
mov
dec
sahf
gs
push
xor
outsl
daa
stos
push
jae
mov
push
aad
dec
outsb
xchg
neg
jo
mov
jp
repz
fs
movsb
push
cs
mov
mov
mov
dec
xlat
dec
dec
mov
pop
and
enter
scas
movsl
imul
jmp
pop
xchg
mov
fucomi
jno
pop
lock
cmc
ja
es
fistl
mov
sbb
jle
in
and
pop
icebp
flds
push
test
shll
adc
mov
mov
aaa
mov
imul
mov
mov
and
adc
push
pushf
xor
xchg
mov
nop
ja
ret
mov
xchg
popa
popf
xchg
mov
in
sbb
mov
jmp
lea
aas
dec
mov
scas
pop
sub
mov
push
xchg
sti
scas
in
cmpsl
cmp
push
ret
push
adc
pop
call
je
sahf
xor
mov
jne
mov
xchg
cld
das
inc
repnz
jno
outsb
xchg
sub
and
dec
mov
js
dec
dec
xchg
ja
fsubl
adc
jno
push
shl
mov
inc
stos
outsl
loop
ljmp
in
mov
out
push
or
loopne
push
in
sub
push
pop
mov
dec
arpl
imul
inc
mov
add
xor
push
and
fidivl
fwait
mov
outsl
xlat
fidivrs
mov
xor
mov
scas
xchg
or
and
shrb
icebp
fbstp
cld
aas
dec
aaa
xchg
gs
xor
and
xor
add
dec
add
int
subb
bnd
aam
jne
or
xor
fdivrs
cmp
mov
mov
mov
clc
jle
rcrl
dec
pop
or
arpl
push
insl
daa
mov
pop
cwtl
adc
xor
xchg
sbb
jp
inc
or
int3
xlat
sbb
jnp
pop
fadds
cli
push
pop
mov
sub
jnp
popa
cmp
and
xchg
test
add
cmp
and
icebp
push
stos
test
cltd
and
and
xchg
xor
xchg
data16
test
cmp
sbb
sub
dec
push
push
push
stos
dec
push
fucomp
int
pop
mov
or
in
push
cmp
xchg
lods
mov
cmp
loope
push
mov
push
fimull
sbb
int3
and
lods
pop
ds
mov
sarb
fidivl
fnsave
nop
hlt
lea
ds
pop
nop
push
fldt
adc
ja
xchg
mov
leave
push
hlt
ja
add
inc
in
add
loop
inc
ret
bound
push
mov
add
mov
jmp
inc
dec
or
icebp
in
aaa
hlt
loop
inc
fdivp
aad
test
fdivrl
imul
push
inc
xchg
pop
jge
sbb
xchg
dec
jne,pn
sarb
or
xchg
mov
fistps
sarb
int
sub
mov
cld
loop
adc
iret
add
xchg
pop
push
fdiv
je
sub
lea
enter
jno
shlb
mov
movsl
jl
add
mov
test
xchg
mov
repnz
mov
jmp
fcoml
mov
jp
jle
push
cmp
jecxz
sahf
and
cmc
or
mov
out
adc
lret
mov
jno
push
lea
loopne
sti
aam
in
mov
fwait
cld
and
mov
imul
inc
sbb
mov
mov
popa
test
stos
outsl
mov
faddl
pushf
popf
mov
adc
xchg
jmp
cli
inc
mov
cmpsb
outsb
push
jbe
and
es
mov
rolb
xchg
sub
xchg
mov
mov
mov
mov
xor
mov
dec
mov
inc
aam
outsl
and
insl
xchg
add
pop
sub
mov
sbb
and
pop
dec
sub
dec
push
js
lods
mov
adc
jmp
mov
sahf
push
fimuls
aad
sub
cltd
push
cmpsb
testl
out
leave
sbb
aaa
pop
cmp
dec
js,pt
rol
mov
xchg
cmp
divb
insb
sub
xchg
cmp
xchg
xor
lods
mov
xchg
sbb
mov
adc
xchg
add
loopne
add
or
fwait
les
insb
xchg
jns
enter
scas
scas
and
ficoms
jl
xchg
test
jb
cli
inc
lods
xchg
mov
mov
push
dec
pop
xor
cwtl
stos
xor
loope
pusha
pop
sbb
shl
cmp
std
cmpsb
icebp
jmp
aaa
sub
imul
ja
dec
ljmp
push
inc
adc
cli
adc
cltd
aaa
pop
mov
leave
cmp
dec
rorl
adc
js
scas
mov
popa
divl
cmp
call
insl
int
mov
cmpsb
cmp
int3
xchg
lret
push
jnp
mov
out
sub
fs
lret
sub
cmp
jmp
or
fsubl
ss
adc
jne
imul
add
add
stos
xlat
or
fs
insb
cmpsb
nop
ficomps
push
sub
cmpsl
push
hlt
add
mov
xchg
scas
cmpsl
ret
jg
aas
dec
push
mov
gs
cltd
pop
sti
cwtl
adc
call
in
sub
xchg
rol
mov
cmp
xor
adc
pop
adc
jns
fisttpl
out
adc
fwait
sbb
aas
and
mov
sar
pop
out
flds
or
cmp
into
xor
pop
je
arpl
xchg
lods
inc
jmp
fistps
lret
xlat
cmpsl
insl
xchg
push
leave
jo
out
pop
das
inc
mov
jmp
test
adcl
inc
inc
enter
scas
ret
in
leave
popa
ds
mov
ds
mov
ss
xchg
int3
test
pop
sarb
push
add
push
mov
and
mov
lret
data16
movsb
adc
and
add
shll
dec
inc
test
out
jp
repnz
sub
inc
or
sbb
enter
lret
pop
flds
fdivl
ljmp
mov
filds
pushl
lock
mov
movsl
decb
sub
xchg
jle
roll
fmul
scas
mov
test
inc
leave
push
mov
hlt
cmp
pushf
push
loope
or
fcomps
jns
cmp
in
xchg
mov
jge
xchg
jnp
pop
gs
xorb
sub
and
gs
insl
aad
inc
jne
mov
movsl
pop
xchg
aad
mov
sbb
rcrb
fsub
jle
in
fidivrl
and
fwait
pop
pop
or
orl
sub
insl
pop
xor
mov
sti
sahf
push
fmul
insb
jns
jg
test
aas
cmpb
mov
lret
mov
insb
pop
pusha
xlat
mov
jge
movsb
aad
mov
cs
inc
cmpsb
cmp
xlat
and
xchg
jae
dec
sub
ret
xor
out
insl
rcrl
popa
into
push
fcomi
jle
and
test
mov
aas
jno
stos
rcl
mov
and
dec
hlt
push
push
testl
fbstp
jl
inc
pop
xchg
push
or
jmp
es
imul
cmp
xor
mov
pop
mov
ljmp
jno
retw
mov
pop
scas
arpl
loope
dec
dec
mov
inc
xchg
push
in
push
out
inc
cwtl
and
sbb
stos
xchg
dec
rcll
pushf
mov
pop
jmp
int
mov
inc
shll
pop
stos
nop
or
outsb
mov
mov
dec
or
out
adc
repz
cmpsl
push
ret
jne
jecxz
push
lret
fcomps
xchg
inc
pusha
aaa
repz
addr16
xchg
mov
test
push
jo
scas
lea
shrl
into
enter
outsb
jmp
aam
sahf
pop
insl
sbb
pop
fwait
jo
fadds
mov
scas
cmp
inc
fldenv
inc
pusha
into
scas
loope
inc
adc
fmuls
push
in
pop
in
in
fwait
ja
cwtl
and
lret
inc
push
push
int3
ja
jnp
xor
dec
jbe
pop
fs
jmp
test
sub
sub
or
jl
jmp
sbb
aad
and
pop
jnp
mov
popa
mov
pop
inc
add
fidivs
dec
mov
and
aas
sahf
sbb
adc
and
and
cmp
mov
mov
mov
cmpsl
jecxz
gs
pop
ja
push
dec
in
out
out
or
mov
pop
push
add
sti
mov
int3
pop
imul
xlat
icebp
xchg
ss
repnz
sbb
and
mov
jnp
dec
xchg
inc
dec
loopne
inc
mov
arpl
xchg
fildll
fldt
push
dec
add
jne
sub
js
gs
ds
pop
lock
fwait
aad
mov
out
inc
rcr
arpl
insb
mov
mov
and
cwtl
cmp
fdivl
das
and
pop
addl
jp
xor
cmp
inc
mov
pop
scas
cmp
inc
jl
xchg
test
add
and
push
cmpsb
sbb
icebp
pop
jg
movsb
frstor
daa
pop
pop
fcoml
scas
scas
idivb
dec
stos
pop
out
xchg
and
mov
adc
lods
inc
mov
aam
psrlq
mov
mov
jge
test
gs
imul
and
nop
fldl
lea
push
jne
inc
arpl
test
or
divl
mov
sub
inc
mov
xchg
sub
push
in
xchg
mov
mov
jns
ss
mov
mov
adc
dec
jmp
cld
push
mov
lods
hlt
xor
shlb
imul
lods
ret
rcr
jecxz
xor
cmpsl
mov
pop
sub
or
outsl
jge
es
xchg
mov
imul
imul
adc
adc
sub
pop
insl
push
sub
dec
lret
fistpll
shrl
inc
fidivl
cwtl
or
and
mov
jno
pop
push
and
lds
loop
mov
call
subb
lret
repz
lahf
sub
loope
shll
clc
in
push
sahf
or
and
rcrb
pop
and
jnp
add
mov
movsb
cmp
pop
jg
or
ret
fsubrs
push
mov
mov
pop
mov
addr16
adc
push
push
xchg
push
jns
ss
lcall
mov
jnp
fucomip
test
addr16
fiadds
int3
popa
push
imul
inc
inc
add
mov
xor
and
nop
jo
jno
push
push
mov
add
test
aad
movsl
inc
imul
les
iret
ret
or
int
push
mov
movsl
lss
inc
insb
lds
insb
jnp
fsubrs
and
out
push
dec
fs
jp
push
inc
add
xlat
jb
mov
test
or
xchg
lods
jae
fistl
mov
das
insl
scas
pop
cmp
mov
js
sbb
fsubrl
inc
fstp
mov
cmp
adc
cmp
mov
or
xchg
adc
testb
mov
aad
fcoml
push
xchg
je
mov
xchg
cmpsl
bound
adc
xor
xchg
sub
inc
shll
push
xchg
jno
pop
jmp
or
sahf
mov
sahf
push
mov
xchg
call
lret
mov
test
daa
add
int
xchg
sbb
push
insb
xchg
nop
add
mov
cs
ficompl
cmp
leave
outsl
and
add
xchg
repnz
cmp
mov
ret
cmp
ficomps
mov
cwtl
lds
lcall
or
sub
push
cmpsl
mov
push
mov
mov
ficoms
mov
aam
xchg
mov
loopne
xor
jo
mov
jnp
std
test
dec
jbe
das
cli
sbb
add
stos
cltd
push
fiaddl
sub
hlt
or
inc
ret
lods
jnp
sbb
dec
pop
js
out
aaa
notl
mov
inc
loope
pop
rcl
mov
icebp
mov
fnstenv
mov
mov
andl
xlat
pop
sub
es
call
push
popf
out
sub
std
or
movsb
xor
mov
dec
in
fwait
lret
jmp
jp
push
mov
adc
add
aaa
mov
lods
dec
ds
push
mov
cmpsl
jo
dec
and
sub
inc
xchg
mov
sub
mov
pop
call
test
adc
popf
ret
jb
out
in
and
rol
or
push
jno
int
pop
xchg
call
nop
shr
or
xchg
movsb
das
push
jle
sbbb
jecxz
mov
call
push
mov
inc
push
insb
xlat
sbb
ss
push
sbb
sub
das
cld
mov
mov
rcl
or
fidivrs
push
add
pop
xor
cmp
add
lods
stos
lds
sbb
rol
cli
mov
jne
cmp
orl
sub
clc
ss
pusha
xor
xor
aaa
rclb
push
hlt
push
sub
loope
and
add
sub
jmp
push
insb
lock
das
cmpsl
sub
in
sub
mov
in
push
xor
shll
cwtl
bound
into
inc
push
stos
lea
inc
dec
scas
out
hlt
pop
out
les
outsl
int
popl
jo
leave
xor
lcall
dec
sub
shrb
add
add
add
push
repnz
cmpsb
dec
adc
xchg
loopne
stos
inc
xchg
adc
jno
adc
mov
push
incl
nop
out
stos
cld
inc
push
test
ja
dec
xchg
xor
arpl
jecxz
jecxz
std
je
cmp
scas
es
mov
data16
outsb
cmpsl
sbb
jb
clc
lea
jmp
xlat
sub
jae
call
lods
mov
xchg
insb
movsb
repz
cli
cmpsl
lds
and
inc
testb
mov
das
pop
cmc
pop
in
fistps
stos
cmpsl
notb
sbb
xchg
negl
pop
inc
mov
pop
cs
jns
xor
jle
adcl
negb
xchg
rcll
ja
div
js
or
sub
jg
mov
cltd
jo
out
movsl
or
jmp
push
into
es
cld
popf
xor
and
push
mov
inc
int
inc
push
ret
outsl
adc
movsl
xor
xor
dec
mov
add
fcompl
push
out
jno
rcrl
cmpl
or
mov
fmul
sbb
mov
mov
add
sub
movl
sbb
es
rcll
mov
sub
jns
ljmp
out
stos
or
inc
lret
sbb
push
push
add
popf
mov
add
aas
aad
aaa
idivl
movsl
add
sbb
je
xorb
xchg
mov
rcrb
dec
jecxz
sbb
in
pop
push
enter
pop
add
xor
lods
fsts
ljmp
mov
or
je
imull
inc
sbb
shlb
lock
xlat
int3
fsubrp
cmc
adc
popf
mov
xor
paddw
rcr
fwait
daa
imul
and
fldt
cmpsb
jbe
fisttps
imul
add
es
fstpl
je
idivb
xor
aas
and
mov
and
pop
testb
inc
loope
push
xchg
push
xchg
in
jge
repnz
dec
cmp
cltd
ljmp
das
cmp
adc
pop
xacquire
dec
inc
dec
and
rol
xchg
hlt
sub
xor
jecxz
mov
sub
sub
xor
andb
add
movb
add
pop
popf
cmp
sti
mov
push
daa
in
push
jne
push
in
data16
inc
add
add
or
mov
jo
and
dec
xor
jle
xlat
and
pop
adc
xchg
test
adcl
nop
in
bound
mov
lcall
mov
aaa
inc
and
mov
mov
in
pop
nop
inc
lea
xor
pop
xchg
and
mov
mov
mov
sbb
jmp
mov
mov
pop
push
addr16
mov
out
sbb
mov
test
or
mov
push
xchg
mov
clc
lcall
cs
push
movlps
dec
mov
cli
sub
fdiv
shrl
jmp
xor
jno
int
push
xor
mov
xchg
sahf
fiaddl
xchg
xor
jecxz
inc
and
fcmovnbe
ljmp
cwtl
das
mov
lods
int
dec
cmp
leave
fnstcw
pop
repnz
inc
incl
pop
movsb
in
fcom
jge
in
cmp
add
pop
cmp
mov
dec
popa
fiadds
xchg
data16
sub
lods
add
cwtl
aad
dec
nop
sarb
xchg
and
fdivs
imul
aad
jne
sarb
mov
out
xchg
mov
jb
push
lds
js
and
push
inc
inc
xchg
pop
mov
push
push
mov
push
inc
ja
push
repz
lods
xlat
das
cmp
and
aaa
mov
mov
ret
xor
lods
test
negb
int
scas
fidivrs
into
imul
cmp
les
bnd
loop
testb
sbb
sti
pop
and
fisubl
test
jno
adc
sarb
sbbb
or
cmpsb
cmp
cmp
xor
xchg
test
and
pop
lods
daa
sub
dec
pop
lds
imul
jmp
push
mov
sub
and
test
adc
dec
push
inc
xchg
icebp
jle
inc
movsb
cltd
cmp
lret
in
push
cmp
shr
je
jnp
std
jle
and
sbbl
sub
les
xor
mov
sub
sub
adc
addb
inc
aad
cmp
cmc
orl
cmp
jns
arpl
sbbb
stos
es
pop
int3
movsb
mov
movsl
lods
int
xchg
xchg
sbbb
dec
loope
pop
and
fists
mov
jge
lcall
mov
fidivrs
cltd
and
mov
mulb
inc
sbb
loop
xlat
test
or
imul
lds
aad
or
sahf
jge
pop
jae
mov
inc
ljmp
arpl
lret
scas
inc
cli
pop
insl
loopne
lcall
xor
andl
lret
test
hlt
jns
xor
inc
testl
add
xchg
loop
mov
in
mov
and
imul
imul
xchg
icebp
or
int
outsl
decl
in
sbbb
ljmp
lret
leave
loopne
sbb
mov
cwtl
in
cmp
push
outsl
and
movsl
jnp
loope
jecxz,pn
cmpb
mov
xchg
add
sbb
cwtl
jno
das
loopne
and
in
test
push
cmpsl
add
mov
inc
rcrl
inc
shr
cmp
scas
mov
rcll
test
cmc
mov
mov
adc
push
mov
adc
add
jnp
inc
lret
data16
movsl
mov
sub
mov
aam
test
in
jb
sub
popa
fists
push
push
jbe
lock
cli
movsb
xchg
fsubrs
rorl
xchg
and
pop
add
incb
mov
mov
cmp
out
ja
and
pop
dec
in
insb
mov
les
adc
hlt
sahf
aaa
rorb
subl
jb
sbb
xlat
cmp
arpl
sub
pop
outsb
xchg
loopne
and
rclb
inc
into
pusha
fisubs
and
add
or
stos
jne
mov
and
les
sahf
stc
leave
mov
xchg
cmp
cmpsl
cmp
dec
jmp
mov
dec
call
or
stos
movsb
jg
add
dec
push
mov
lret
cmp
inc
sub
repnz
das
mov
pop
sub
or
add
cmpsb
aam
mov
lret
and
imul
jne
lods
fwait
mov
in
stc
jecxz
imul
mov
adc
jno
cmp
in
xchg
mov
or
js
fs
imul
push
aam
add
dec
scas
fisttpl
lret
xor
out
xor
lods
inc
ret
pusha
push
dec
jno
jle
sbbb
pop
outsl
mov
shrl
fisubl
xor
push
mov
inc
push
mov
cmpsl
pop
mov
lret
jmp
outsl
movsl
popf
jb
xchg
xor
xchg
push
out
std
xor
addr16
adc
xor
xchg
mov
in
mov
xor
je
lds
dec
fidivl
clc
push
lret
pop
jnp
adc
leave
mov
in
imul
sbb
pop
sub
sub
loopne
cmp
repnz
rcrb
fidivrs
in
adc
enter
mov
inc
mov
mov
inc
loop
mov
jle
and
mov
rclb
sbb
ja
dec
cmp
jle
pushl
fdivrs
inc
xor
jecxz
mov
sbb
roll
insb
inc
inc
xchg
mov
mov
int3
fucomip
arpl
jnp
repz
lret
mov
mov
push
add
pop
sub
test
jne
jmp
aas
pop
jg
movsb
cmp
mov
leavew
adc
repz
je
ja
mov
test
mov
ror
sub
inc
rclb
addr16
add
sbb
dec
mov
mov
cmpsl
jmp
mov
mov
pop
test
cmpsl
test
ret
subl
pop
in
and
lea
inc
sbbl
xor
push
jmp
sbb
jmp
sbb
ss
icebp
mov
inc
pop
sti
inc
push
inc
cmc
sub
mov
adc
push
montmul
cmpsb
subl
mov
pop
add
insl
mov
xchg
push
aad
mov
xlat
and
add
mov
mov
push
jae
adc
mov
lahf
pop
repnz
ja
jns
push
sahf
std
mov
fldcw
xchg
add
movl
popa
adc
outsl
and
fst
and
inc
mov
lahf
cmpsl
xlat
pop
jmp
es
jno
and
sarl
xchg
xor
inc
fcoms
jbe
xchg
xchg
mov
cmp
pop
call
inc
add
mov
pop
cltd
stc
popf
xchg
cmpsb
data16
ds
jecxz
int3
sbb
or
xchg
shl
adc
xchg
cwtl
mov
ret
andb
cmp
adc
int3
leave
fdivrs
imul
insl
ret
aas
adc
pop
mov
jb
popf
int3
cmpsb
cmp
mov
or
mov
daa
jae
pop
jne
lods
bound
gs
push
xor
pop
test
cmpsb
icebp
push
adc
lret
xchg
int
in
shrl
flds
daa
icebp
inc
out
inc
sub
lds
adcl
and
aas
xlat
test
lret
arpl
cmc
inc
jl
in
sub
mov
movsb
sub
insl
pop
add
test
leave
aad
dec
mov
or
rorb
cmp
jbe
push
pop
adcl
loop
movsb
testb
pusha
and
jmp
cmpsl
pop
not
mov
mov
xor
mov
mov
push
arpl
stos
xchg
mov
stc
out
mov
cmp
js
mov
cli
stos
stos
sbb
jb
inc
aam
inc
dec
cs
aad
das
push
movl
sti
push
jnp
inc
fdivr
fmulp
int
xor
in
mov
lcall
insb
in
movsl
lcall
cld
imul
inc
sbb
cmpsl
inc
scas
imul
cmp
xchg
push
inc
cmp
pop
sub
clc
pop
mov
addr16
int
push
and
jno
mov
ds
cmp
mov
insb
daa
rol
pop
mov
sbb
dec
insl
daa
sti
adc
jae
dec
mov
notl
shll
push
xor
stos
or
push
mov
inc
shlb
xlat
imull
push
and
fstl
push
jb
das
and
pop
push
mov
mov
negl
roll
cmp
leave
rcl
ffree
fiadds
mov
mov
or
jecxz
lds
int3
cmpsb
jl
xchg
mov
repnz
pop
std
cltd
les
pop
lahf
hlt
rol
leave
stos
mov
pop
fwait
mov
cmp
pop
pop
loopne
fwait
mov
aad
xor
dec
sahf
lahf
into
dec
lcall
sbb
mov
sbb
push
dec
pop
dec
icebp
mov
adc
xchg
shrb
in
pop
or
pop
les
clc
aad
jb
shrl
push
pop
js
test
pop
movsl
inc
lahf
lods
dec
repnz
mov
mov
push
hlt
mov
sub
pop
out
inc
jecxz
rcrl
or
mov
cmp
cmp
hlt
push
mov
pop
in
cld
fisubrl
jge
in
mov
mov
addps
pop
xchg
aam
loop
movsl
fsubs
push
outsl
inc
sbbl
mov
aad
adcb
dec
testl
jo
mov
pop
shrl
or
xchg
lods
popa
xchg
xchg
sbb
xor
mov
ret
jp
ss
add
inc
pop
push
ljmp
mov
xchg
sub
pop
aam
cmpsl
mov
mov
fnstsw
jp
and
mov
out
test
and
sbb
aad
ret
mov
xor
jg
pushf
mov
mov
mov
arpl
dec
dec
cli
mov
fs
cs
jge
xor
repnz
inc
fwait
xor
stc
and
cmp
adc
and
pop
popf
out
ret
jnp
in
in
lret
pop
fistpll
andl
or
scas
jecxz
loope
jno
jne
adcl
mov
fsubl
dec
mov
sbb
lods
jecxz
xorl
lret
xchg
stos
pop
jne
arpl
outsb
fsubrs
xchg
sub
inc
adc
ret
je
add
sbb
aam
xor
cmpsb
in
xchg
mov
xor
fistps
sbb
mov
mov
sbb
jmp
or
scas
and
daa
cmp
push
mov
hlt
sub
mov
int3
jle
sub
sbbb
fbstp
arpl
mov
ljmp
int
fisttps
cmpb
outsl
iret
adc
mov
mov
inc
sahf
xor
ljmp
ja
fnstsw
andl
sub
mov
xchg
call
hlt
xchg
sub
push
xchg
xchg
pop
push
movsb
leave
or
bound
enter
mov
test
mov
andl
dec
fdivs
xchg
jecxz
and
mov
xchg
repz
add
jne
pop
in
mov
adc
jle
inc
popa
in
jbe
or
sub
cmpsb
shl
jae
inc
cltd
adc
aad
fisubrs
and
ret
jae
test
sbb
push
push
dec
repnz
sahf
ds
fs
cmp
ret
lret
frstor
ljmp
inc
sbb
push
arpl
fwait
sub
jnp
push
scas
mov
lock
ljmp
loope
or
mov
fcmove
es
mov
inc
mov
jge
cmp
jmp
icebp
xchg
xchg
sub
xchg
adc
lahf
ret
mov
dec
out
subb
push
fiaddl
jl
sub
sub
or
lret
cmp
mov
and
fbstp
in
or
into
int3
inc
out
scas
jmp
loopne
ljmp
cwtl
movsb
loopne
xor
inc
sarl
jle
add
sbb
popa
mov
pop
test
sub
sti
mov
jo
stos
and
jle
daa
mov
pushl
push
cmpb
pop
xchg
mov
push
sub
mov
test
hlt
insl
js
xor
sbb
xor
xchg
adc
lea
lret
pop
icebp
inc
sbb
dec
or
pushf
inc
cmp
addr16
dec
xor
sub
xchg
fldcw
cwtl
movl
and
shrl
jo
test
push
jp
fcmovne
and
idiv
lods
cmp
das
lods
jmp
les
popf
mov
insl
stos
lds
mov
fldenv
sub
andb
jne
adc
dec
and
mov
test
jl
mov
pop
testb
sub
orl
pop
out
xchg
mov
jo
jns
fldcw
pop
and
aas
xchg
cltd
jbe
mov
cld
pop
inc
sub
adc
movl
cwtl
push
mov
out
jno
test
inc
mov
push
xchg
sub
nop
push
mov
mov
rorl
pop
rol
or
mov
push
add
popf
jmp
in
cmpl
mov
xor
inc
std
scas
pop
insl
inc
aam
std
scas
testl
sahf
call
pop
mov
nop
mov
mov
arpl
insl
test
or
jecxz
pop
in
jbe,pt
push
shrb
mov
das
fwait
stos
pop
dec
push
push
sbb
mov
lods
loope
notb
inc
jns
mov
cs
sbbb
xor
or
sub
outsl
lret
xchg
sbb
pop
iret
xchg
arpl
jb
addl
dec
mov
movsb
ds
push
into
sbb
imul
movsb
jmp
xor
dec
iret
xchg
js
out
jp
pop
out
inc
inc
jno
mov
cmp
pop
inc
lods
loopne
cmp
fsubl
call
push
mov
mov
cmc
xchg
sbbb
or
sbb
pop
shrb
add
inc
dec
insl
imul
aaa
notb
mov
insb
push
inc
and
xchg
xor
adc
adc
xor
sub
pop
test
loop
leave
pop
ljmp
imulb
in
cwtl
mov
add
push
pop
push
pop
mov
xchg
cmc
jne
fsubl
xor
fildl
adc
arpl
mov
mov
pop
mov
insl
cmpsb
jge
or
ret
sub
int3
ret
aam
xchg
xchg
lret
cmp
dec
fisubl
mov
ret
in
les
testb
leave
inc
repnz
iret
mul
jl
mov
cltd
xor
xchg
in
lods
inc
sahf
sub
insb
push
lock
or
pusha
call
or
xor
lods
scas
mov
push
mov
movsl
mov
mov
sub
gs
icebp
scas
rorb
xchg
jb
adc
mov
mov
push
std
xor
icebp
loop
pop
outsb
inc
add
repnz
adc
int3
mov
push
hlt
xchg
mov
mov
out
mov
xor
mov
int
mov
dec
xor
xchg
lods
orl
jnp
xchg
jmp
mov
xor
scas
ljmp
push
lock
push
xor
stos
sbb
ret
add
jae
jle
je
pushf
pop
mov
mov
ljmp
xchg
scas
or
int
pop
add
or
cmp
ret
testl
cld
xchg
inc
icebp
in
das
fidivl
int
dec
arpl
nop
adc
lret
loopne
out
lds
xlat
sub
test
and
mov
xor
imul
pop
aaa
mov
lcall
imul
cmpps
in
out
aaa
jmp
roll
in
xchg
outsb
push
je
mov
clc
xchg
daa
push
das
mov
adc
scas
dec
mov
aad
xchg
mov
int
pop
jne
out
outsl
sbb
lret
lahf
inc
stc
imul
fbld
movsl
lods
mov
mov
sbb
pop
ljmp
in
adc
pop
outsl
insl
adc
nop
das
xor
enter
pusha
shrl
sub
mov
xchg
pop
aad
cli
or
jg
xor
in
lret
pusha
and
cmpsl
loopne
jae
pop
lods
mov
aam
or
push
sub
add
outsl
lock
stos
jl
mov
inc
or
sti
mov
adc
imul
sbb
adc
cltd
sbb
insl
add
mov
mov
push
xchg
arpl
shll
insl
mov
push
lods
sub
pop
mov
sub
sbb
cmp
cmpsb
iret
fstps
xor
in
and
xchg
dec
mov
jno
inc
loopne
ja
dec
mov
push
cmp
sbb
aaa
adc
in
jl
sbb
inc
mov
or
pop
lret
add
mov
dec
adc
jnp
fistps
adc
sahf
push
and
push
jle
sbb
and
rcrl
outsb
adc
pop
mov
sub
pusha
add
xchg
lahf
popf
jecxz
sahf
mov
sbb
pop
inc
in
and
arpl
addr16
fdivrs
into
outsl
dec
jp
dec
mov
movsl
bound
add
inc
in
inc
push
scas
dec
inc
xchg
fcmove
mov
std
fisubs
bound
jl
add
fmul
fiaddl
mov
sbb
imul
cmp
xor
push
lods
orl
lea
inc
outsl
or
inc
je
std
xchg
aad
jo
sub
or
push
ljmp
push
ljmp
daa
mov
sbb
outsl
pop
ss
mov
push
jmp
ja
daa
mov
sbb
ljmp
add
ret
lods
jg
and
fs
out
sbb
test
lods
inc
test
jnp
hlt
push
cmp
pop
mov
int3
arpl
jno
in
mov
cmpsl
ds
or
aad
cmp
hlt
mov
test
xchg
clc
ret
xchg
js
cmp
mov
xchg
xchg
sub
xchg
insl
test
sub
pop
insl
ja
data16
cmp
rcrl
icebp
sub
jo
das
or
mov
repz
outsb
testb
aad
ds
nop
xchg
cmp
jmp
in
or
sahf
xor
mov
sbbb
popf
mov
adc
ja
or
js
jg
sub
sbb
aam
leave
mov
xor
cld
jnp
rolb
sahf
fidivrl
loopne
clc
jp
sbb
clc
xchg
mov
push
mov
lock
jne
iret
xor
cmp
cmpsb
jg
fsubs
jae
lahf
je
push
stos
repnz
jo
lcall
xorb
arpl
cmp
bound
and
bound
mov
loopne
jbe
fs
ffree
adcb
repnz
mov
push
mov
pop
adc
add
out
shl
ja
or
imul
int
lock
loop
and
mov
cmp
jp
out
dec
cltd
notb
inc
lods
in
fldl
ja
stc
mov
cmpsl
adc
ret
lea
les
sub
test
pop
jne
std
sahf
sbb
bound
mov
subb
sti
dec
gs
bound
sarb
push
mov
fmul
sub
scas
outsl
add
rclb
jl
loopne
pushf
jge
pop
jae
icebp
mov
mov
cmpsl
test
lea
addr16
mov
sub
nop
add
mov
xor
lahf
mov
mov
and
fwait
mov
push
sub
xchg
fnstenv
pop
inc
sbb
mov
mov
faddl
pushf
jno
mov
mov
leave
in
sub
mov
dec
iret
xchg
jmp
sbb
add
jne
adc
sbb
add
leave
jb
mov
mov
imul
test
jmp
mov
adc
aaa
add
pop
adc
adc
jge
jbe
pop
xchg
jb
leave
sub
sub
push
das
cmp
sahf
insl
cmp
cmp
jbe
shl
sti
or
das
bnd
aas
dec
cld
scas
hlt
cmp
adc
lds
or
nop
mov
stos
faddl
sbb
int
or
and
jp
sub
imul
dec
xchg
sub
mov
push
bound
ljmp
mov
pop
mov
arpl
popa
adc
mov
and
mov
ljmp
push
popa
mov
inc
jb
dec
or
int
lret
lods
xor
and
out
jae
mov
dec
inc
xlat
cmp
inc
mov
dec
pop
cmpsb
sub
inc
popf
sub
cmp
sbb
fsubrl
mov
adc
push
fldenv
sbb
in
push
test
nop
sbb
dec
pop
mov
sub
cmpsb
lock
in
lret
dec
pop
insl
mov
pmulhw
adc
out
sub
or
push
test
mov
loop
sahf
lcall
xchg
mov
lds
adc
pop
jns
mov
jecxz
mov
mov
add
push
std
imul
out
push
shrl
inc
dec
push
mov
jl
test
movsb
mov
out
les
lea
test
xchg
loopne
sbb
sbb
adc
adc
sbb
insb
lock
cs
sar
pop
cmc
cmp
shlb
push
lods
push
rcll
sub
sub
pop
pop
xor
rcll
inc
lods
push
popf
mov
dec
arpl
mov
push
xor
and
xor
stos
xchg
call
ss
dec
test
mov
lods
outsl
dec
xor
lds
loop
test
ret
je
push
sub
jnp
xor
sbb
and
push
jle
rorl
aam
repz
jno
in
sarb
stos
inc
sahf
insb
in
cwtl
sbb
int3
gs
push
mov
inc
in
lea
sahf
or
mov
or
stos
cmp
push
test
iret
lods
lock
cmp
and
stos
xor
fisttpl
pushf
xlat
daa
dec
hlt
cmp
and
stos
shl
adcl
js
clc
jne
jbe
adc
and
jecxz
pop
cmp
out
push
mov
jmp
enter
test
dec
repz
pushf
or
ja
fldt
popa
pushf
repz
inc
push
in
in
mov
test
and
and
aad
mov
jle
jno
imul
stc
or
mov
ja
pop
xor
fsubrs
mov
cli
out
testb
adcb
hlt
js
scas
out
test
lds
aaa
pop
enter
leave
out
cli
cli
jo
es
inc
in
mov
pusha
das
jge
xor
mov
fbld
cmp
push
xchg
mov
sarb
stc
and
mov
xlat
arpl
mov
std
xor
jns
rcrl
mov
repz
stos
das
jbe
pop
mov
fmul
jl
test
lret
sub
js
push
les
dec
push
xchg
pop
test
jg
inc
mov
popf
xor
mov
stos
cs
mov
sbb
cltd
sti
xchg
lret
movsb
sub
sbb
jne
arpl
test
jl
add
hlt
and
xor
pop
shll
les
sub
ficompl
jg
dec
pop
iret
mov
mov
stc
adc
fwait
cmp
movsl
sti
or
cmp
leave
int
and
shlb
aam
fnsave
or
cmp
ljmp
pop
lods
and
clc
push
call
jle
out
jno
lcall
push
jne
jmp
mov
mov
add
and
jmp
lcall
inc
ds
xchg
pop
cmp
scas
movsb
test
sbb
testb
sub
pop
out
int3
les
xchg
sbbl
inc
addr16
pop
adc
roll
mov
fnstenv
sbbl
pop
or
lret
imul
mov
sub
data16
jmp
xchg
adc
lds
jbe
stos
mov
sbb
xchg
movsl
mov
out
xor
cmp
push
jno
sbb
or
or
outsl
sbb
push
aam
sarl
ret
call
aad
adc
scas
inc
mov
lods
inc
or
push
jbe
pusha
lret
jge
inc
cmpsl
aas
jae
lahf
pop
or
int
imul
or
jne
stos
or
adc
sub
outsl
repz
dec
fdivp
in
mov
int3
xchg
out
mov
push
shrl
insb
aam
mov
mov
and
mov
xchg
xchg
and
jecxz
push
pop
push
push
int
xorb
and
xor
sub
cld
push
fwait
outsl
xor
adc
fistps
xchg
push
cmc
jns
ss
push
shlb
sahf
push
inc
rclb
imul
jge
adc
test
mov
dec
shl
xorl
push
mov
sahf
xchg
jecxz
fsubl
sub
cli
pop
xor
or
imulb
clc
sub
adc
sbb
push
inc
and
inc
pop
scas
pop
cmc
loopne
repz
lds
or
clc
pop
cmc
sub
lcall
ss
repnz
cltd
movlps
movsl
mov
mov
adc
mov
subb
inc
cmp
pushl
in
xor
xor
push
in
fildl
cmc
sub
cmp
mov
mov
ljmp
pop
ret
adc
inc
sbb
jle
pop
notb
or
mov
pop
mov
sti
inc
std
add
mov
fiaddl
fldl
jecxz
pop
cwtl
mov
loopne
shr
mov
pop
xor
pusha
mov
icebp
cmp
shlb
mov
cltd
push
jp
push
in
xor
inc
fisubrs
into
and
out
roll
jp
cmp
sahf
into
and
or
pop
test
xor
lahf
and
inc
fisttpll
pop
fucomip
adc
sub
enter
adc
jge
sub
shlb
testl
pop
lods
push
fldt
or
pop
pusha
mov
repz
cmpsb
cmp
sbb
test
jnp
cmpsl
lods
lods
pop
jmp
pop
mov
out
cltd
mov
jno
enter
dec
cmp
dec
aad
fimull
fcoms
or
cmpsl
ret
pop
cmpsl
adc
adc
mov
clc
fnstcw
and
cli
jg
adc
das
inc
stc
cmp
pop
insb
sbb
jb
enter
mov
pavgw
or
mov
mov
lds
fmuls
jne
jo
ficoms
adc
inc
push
push
ret
stc
xchg
mov
and
loop
or
sub
push
or
cmc
mov
lea
outsl
adc
lds
sbb
xor
lods
test
sbb
cmc
mov
cmp
aad
jo
add
push
in
inc
les
xchg
lea
push
dec
cs
nop
lea
xchg
adc
mov
in
imul
push
pusha
jbe
popf
lret
shll
dec
inc
mov
xchg
addr16
xchg
pop
outsl
or
imul
dec
adc
adc
das
cmp
push
jmp
sub
adc
mov
dec
cmpsl
add
adc
mov
pushf
repz
or
push
sub
mov
mov
ret
mov
cmp
out
mov
pop
or
push
push
rolb
aas
adc
in
enter
mov
dec
mov
mov
jg
sbb
add
int3
ss
fmul
cmp
mov
fimuls
mov
pop
mov
rolb
inc
adc
jg
xor
and
cmp
xchg
shrl
or
fnstenv
adc
je
fldenv
inc
pop
mov
mov
jae
sub
rolb
stos
pop
jbe
mov
fs
mov
mov
inc
fsubrl
pop
sub
vpmacswd
inc
fcom
pop
pop
popf
mov
sbbl
scas
std
loop
jl
dec
pop
xorb
mov
mov
lahf
mov
xlat
mov
inc
fwait
xsha1
cmpsb
int3
out
and
sub
jg
test
push
popf
sbb
mov
cli
cmp
sbb
mulb
xchg
push
rcl
and
xchg
inc
fsubp
sub
xchg
gs
mov
cmp
cmc
mov
push
sbb
aaa
mov
lods
data16
mov
dec
mov
add
inc
fdivs
cmpsb
cmp
add
jge
xchg
mov
add
sbb
mov
sub
inc
mov
je
sarl
mov
leave
inc
or
dec
push
xor
pop
xchg
add
sahf
stos
xchg
popa
incb
xlat
jne
rcll
push
sbb
adc
leave
mov
cmp
pop
mov
jp
xchg
jne
popf
inc
push
mov
fucomi
dec
mov
ret
pop
xchg
pop
xchg
inc
jnp
incl
arpl
mov
mov
dec
jge
cmp
movsb
jno
test
mov
cli
xchg
and
iret
sbb
add
and
ss
fs
loope
seta
aaa
dec
mov
mov
es
stos
negl
or
push
fadds
mov
cmp
mov
dec
push
mov
adc
push
popf
adcb
test
std
dec
stos
in
lock
sub
gs
lcall
mov
outsb
in
imul
mov
loop
jle
fwait
sti
push
sub
pop
shll
adc
or
ret
add
mov
test
sub
lods
jecxz
mov
mov
repnz
xor
lcall
or
xchg
dec
out
mov
sbb
inc
stos
sbb
mov
shlb
es
rcrb
ss
adc
aam
dec
lods
xor
xchg
int
cmp
fwait
add
cld
sub
inc
out
daa
pop
mov
dec
xor
pusha
repnz
or
inc
xchg
xor
in
das
movb
dec
enter
dec
orl
fsub
ds
idivb
in
ret
add
jbe
sbb
lret
cld
and
lds
fbstp
call
test
int
push
popa
or
fmulp
loop
pop
hlt
mov
mov
push
cmp
inc
in
mov
cld
ror
or
and
shll
les
mov
mov
mov
push
pop
lods
pop
mov
sbb
loop
or
mov
pop
clc
adc
and
adc
sbb
into
push
jl
jo
push
adc
js
je
sub
cmp
push
or
stos
pop
es
je
cmpsl
push
adc
arpl
xchg
pop
fiaddl
bound
dec
fs
idivb
xor
daa
jmp
push
mov
mov
pop
into
or
cltd
xchg
scas
add
mov
jo
mov
sub
pushf
jne
lret
in
fmul
mov
daa
cmp
xchg
mov
sbbl
sub
jno
sahf
jns
adc
sub
adc
xor
bnd
ja
inc
push
test
sbb
sahf
clc
out
pop
hlt
adc
xor
jb
xor
cmp
repnz
push
xchg
fcomi
mov
ret
adc
scas
movsb
repnz
imul
idivb
pop
mov
sbb
sti
inc
and
xchg
sahf
sub
call
cmp
imul
mov
or
sahf
inc
inc
into
loope
jle
hlt
test
lcall
js
dec
adc
fildl
bound
scas
test
push
pop
lods
nop
lret
movsl
insl
inc
mov
sarl
inc
push
inc
rorb
push
int3
out
mov
mov
and
addl
hlt
mov
push
fsubrs
pusha
push
frstor
leave
xor
pop
mov
cs
ja
push
push
clc
stos
movaps
jge
mov
leave
mov
mov
or
and
test
dec
jnp
fs
jle
into
sub
stos
test
stc
bound
lods
fstpt
cmp
leave
adc
or
mov
imul
add
xor
lods
jo
cmpl
add
stc
adc
test
sub
inc
jmp
cmp
in
mov
es
xchg
enter
ds
sub
dec
movsb
jg
push
popf
mov
arpl
lods
mov
int3
arpl
scas
ljmp
pop
rorl
and
outsb
testl
dec
aad
imulb
sub
xchg
pop
xor
iret
mov
or
ret
mov
ljmp
aas
ja
mov
and
adc
push
xchg
dec
and
cs
shrb
jb
jg
push
inc
fldl
rorl
jl
add
repz
fstpl
dec
pop
orb
arpl
test
sub
push
xchg
mov
das
test
pop
mov
inc
sahf
adc
pop
sub
or
mov
sbb
cmpsb
mov
repz
xor
test
pop
sub
mov
and
decb
out
movsl
xchg
mov
add
jae
out
push
punpckhdq
fwait
arpl
lock
js
xor
bound
cmc
dec
testl
mov
insb
into
adc
stos
xchg
iret
or
cmpb
jnp
nop
mov
xchg
lcall
push
dec
mov
jle
add
lcall
stc
fucom
sbb
cs
pop
sub
lods
dec
pop
in
ficompl
imul
sbbl
dec
xor
out
add
xor
cltd
push
test
lret
or
stos
pop
in
cmp
pop
aad
cmp
stos
leave
outsl
adc
inc
pop
in
add
sub
pop
or
sub
xor
sahf
xorl
loop
adc
loope
negl
jp
repz
test
inc
xchg
sub
cli
aam
inc
push
sbb
ss
xor
sub
out
add
fdivl
hlt
jnp
mov
push
cld
ljmp
movb
inc
fwait
mov
jle
addb
movsb
enter
insl
loopne
dec
mov
adc
cmp
push
cmpsl
cltd
xor
vpcmpeqb
jae
rcll
jmp
sti
xchg
and
call
pop
jmp
stos
jb
jecxz
fucomip
imul
push
adc
jb
outsb
cltd
sub
out
pop
cli
add
test
mov
push
roll
pushf
in
mov
lods
ficoms
sub
loopne
rorl
jg
or
clc
in
sub
sbb
movsb
cmpl
nop
sub
pop
mov
add
sbb
cmp
imul
jbe
pop
mov
insb
mov
shll
cmpsb
loop
iret
xchg
cmpsl
push
mov
add
inc
lods
int
subl
fnstenv
sbb
dec
decl
fsubrl
inc
adc
cmp
mulb
add
movsb
mov
aad
fnsave
jge,pn
pop
aad
inc
pop
jo
lret
sub
lds
cwtl
mov
in
dec
shl
movsb
add
loope
mov
repz
xchg
dec
cmc
ret
bound
popa
and
mov
pushf
jne
xchg
add
and
outsl
addr16
movsb
int3
loop
cld
mov
xor
mov
stos
loope
adc
xor
inc
adc
icebp
sub
pushf
test
dec
jnp
call
fildll
shrl
mov
adc
lock
push
inc
iret
in
and
xlat
push
inc
mov
or
sbb
in
es
int
lods
dec
test
jne
out
inc
and
out
inc
jecxz
inc
iret
data16
out
test
enter
adc
icebp
inc
test
aas
fwait
shlb
cmp
cld
addb
fists
or
inc
fnstenv
fdivrs
insb
loop
test
flds
cmc
mov
xchg
or
xor
popf
xor
fistpll
cli
jmp
or
jnp
shrb
push
out
push
xchg
xor
or
xchg
sub
addr16
cmp
sar
xchg
enter
push
jle
and
loope
cli
std
shll
ret
pop
imul
lods
movsb
lahf
mov
nop
loopne
or
popf
mov
xchg
rorb
push
fwait
js
jmp
pop
hlt
arpl
cli
push
xchg
mov
and
hlt
adc
xchg
je
cmpsl
rcr
pop
cmp
pop
pop
pop
lock
sub
nop
fwait
jg
rclb
ja
leave
and
cmp
dec
stc
sar
outsb
dec
movsb
jg
cli
rorl
xchg
sub
dec
mov
jo
ret
pop
add
dec
and
clc
add
add
repnz
xor
loop
mov
xor
es
xchg
repz
dec
mov
aas
pop
adc
pop
call
scas
push
xchg
lcall
xlat
sbb
lea
inc
jnp
pop
inc
xor
hlt
sbb
ds
into
scas
stos
mov
ljmp
sbb
dec
popa
fcoml
sub
inc
mov
cltd
xor
call
push
rclb
dec
xchg
daa
cmp
hlt
ds
sbb
leave
pop
push
inc
rcrl
push
jle
cltd
mov
inc
fcmovb
les
fisubrs
shrl
push
and
lea
sarl
in
imul
aam
scas
inc
push
loope
or
mov
fs
loope
dec
call
test
mov
test
iret
inc
jo
pop
xlat
rol
mov
xchg
push
inc
addr16
dec
shr
xor
icebp
xor
mov
add
iret
push
into
or
jl
mov
inc
inc
imul
xchg
enter
out
cmpsl
enter
enter
sahf
cmpsl
xchg
bnd
dec
test
scas
dec
call
shlb
xor
je
insb
xchg
jns
lcall
xchg
inc
testb
inc
bound
ficomps
leave
and
xor
imul
jne
jne
test
lret
cmp
pop
mov
scas
aam
testl
jge
in
andl
loopne
addr16
repz
imul
je
add
in
out
popl
cmpl
mov
lods
inc
imull
shlb
sarl
xor
jmp
or
lods
gs
mov
mov
lock
ret
xchg
mov
mov
mov
cltd
cmp
jmp
xchg
das
stos
out
jb
push
inc
ret
shlb
pusha
push
ds
xor
xorl
jne
add
mov
cmp
cmpb
cmpsl
and
loopne
shrl
or
cmp
xchg
outsl
hlt
shld
sbb
cmpsb
pop
subl
cmpsb
mov
mov
cli
das
hlt
xchg
cmp
xchg
int
jo
nop
xchg
mov
push
sbbb
mov
pop
jo
fwait
lret
and
fwait
inc
pop
out
pop
mov
xchg
incb
xor
cmp
ljmp
fisubl
popa
xchg
cmp
sub
in
rcrb
shl
mov
cmp
mov
inc
pop
stc
mov
shl
add
shlb
lret
mov
lret
and
jae
rcll
clc
inc
and
shll
xor
cmp
sbb
mov
fsubr
jge
inc
inc
inc
pushf
cwtl
mov
and
add
push
fmull
cmp
xchg
jl
and
daa
mov
pop
test
frstor
cs
jns
imul
cs
xchg
ret
mov
pusha
test
stos
mov
or
jno
sub
pop
or
push
pop
repz
sbb
cltd
mov
outsb
js
lods
adc
lock
push
fisttpll
mov
inc
out
mov
sub
movsl
popf
jge
add
push
pop
cli
jg
mov
out
jns
pushf
xor
cmpsb
push
sub
mov
xchg
push
leave
jl
fdivp
sbb
icebp
xchg
xchg
mov
or
sti
mov
cmc
adc
sahf
inc
gs
addb
loop
shrl
cmpl
das
out
mov
outsb
and
dec
int
dec
mov
data16
stc
push
fldt
mov
in
sub
cmp
lret
imull
lcall
fcmovne
lret
into
mov
int
lods
repnz
inc
jl
in
in
jl
fwait
push
idivb
ds
dec
adc
lods
jne
pop
test
mov
dec
dec
mov
jge
movsb
cmp
mov
sti
add
call
push
cmp
cmc
dec
pop
or
and
shll
cmp
fadd
sbb
dec
int
stos
incb
pop
inc
lahf
xor
test
cwtl
mov
js
cmp
inc
cli
inc
inc
jmp
popf
stc
inc
clc
test
fisttpll
or
daa
push
push
xchg
es
xchg
lcall
lock
cmc
xor
sarl
jp
daa
xor
adc
outsb
lea
lods
mov
xchg
jecxz
push
insl
shrl
mov
push
sti
xchg
test
das
add
fbstp
dec
outsl
mov
je
dec
fstpl
cld
xlat
jmp
addr16
fsts
ss
sar
sarl
sbb
aas
jmp
fs
jmp
iret
out
rcrb
decb
inc
leave
push
fs
push
movsb
fs
lea
test
cmc
xchg
pop
xlat
push
add
pop
cmp
testl
loope
push
cld
push
shlb
inc
in
mov
mov
out
xor
push
dec
movsl
xlat
hlt
sub
insb
push
adc
fmuls
xor
cmp
pop
push
push
call
cmpsb
dec
mov
jge
stc
xlat
xchg
loope
pop
scas
mov
nop
in
mov
fildl
or
cmp
xchg
out
call
test
lea
repz
rcrl
dec
jb
cmc
jb
test
mov
in
pushf
popa
rcl
lods
add
sub
scas
cmp
stc
icebp
mov
aas
inc
mov
ljmp
stc
push
nop
jno
lods
cmp
jnp
fst
mov
add
enter
sbb
pusha
pop
add
jp
cmpsb
lock
popf
je
mov
scas
mov
dec
sub
outsl
inc
and
je
hlt
jg
mov
xchg
mov
jns
ret
lret
xchg
test
mov
add
sub
js
int3
pop
mov
jne
repnz
leave
jns
push
inc
cmc
pop
je
pop
imul
and
in
out
dec
add
push
in
adc
push
outsb
mov
dec
insb
scas
xor
dec
icebp
iret
popf
cmp
adc
pop
daa
lahf
dec
lcall
movsb
lret
das
roll
sbb
dec
mov
int3
jecxz
test
add
test
inc
out
and
adc
aas
mov
arpl
dec
aad
std
push
sahf
fsubrp
xchg
push
mov
loope
dec
adc
ret
add
mov
out
and
or
jno
repz
repz
xchg
jp
and
in
bound
jb
int3
out
cmp
lea
mov
movsb
or
xchg
adc
adc
int
pop
cmp
loopne
in
andb
clc
out
inc
dec
popf
sbb
insb
push
and
outsb
xchg
push
gs
loope
sub
stos
xor
cmp
sbb
iret
mov
cld
mov
notb
scas
gs
add
cmp
mov
shll
mov
sbb
jg
xor
repz
mov
xchg
bound
add
sbb
push
add
ret
std
push
xor
add
sti
vmread
testl
in
test
fdivrs
stos
fimuls
mov
lods
dec
sbb
sti
jne
les
iret
arpl
hlt
and
mov
das
jmp
test
xor
mov
jp
lods
inc
mov
fistpl
stc
dec
addr16
loope
mov
inc
or
mov
adc
cmp
xor
push
mov
cltd
jg
xor
xor
in
shr
repnz
insb
add
aaa
dec
or
in
daa
push
mov
push
popa
sub
cmp
pusha
sbb
lds
cmp
in
xchg
jae
dec
jns
pop
cmpsl
lods
adc
mov
cmp
jecxz
adcl
or
lret
gs
push
std
dec
fists
fcmovbe
inc
les
push
aaa
push
cmp
out
sbb
sbb
pop
ljmp
pushf
test
push
loop
jmp
insb
jg
ss
insl
insb
aaa
inc
jno
mov
sbb
cmp
lcall
outsl
push
insb
js
push
mov
popf
pusha
mov
dec
mov
mov
adc
lock
xor
in
les
sbb
jnp
xor
insl
pushf
adc
push
in
xchg
sarl
add
insb
mov
sbb
and
dec
pop
fdivr
jns
or
lods
push
sbb
pop
lret
iret
cmp
test
imul
ret
popa
or
ret
sub
inc
sbb
cs
repnz
xchg
mov
out
and
cmp
inc
fbld
fisubrl
xchg
fwait
aaa
negb
push
push
mov
xchg
mov
jmp
rclb
pop
addr16
adc
pop
fs
mov
inc
popa
or
clc
int
ljmp
push
int3
adc
inc
in
movsl
icebp
inc
aad
mov
aam
and
mov
outsb
add
xchg
adc
aam
dec
pop
imul
push
shrl
ficomps
test
mov
mov
shrl
or
and
in
testl
xor
mov
mov
clc
clc
xchg
lock
push
pop
movsb
push
das
add
sbb
cmp
xlat
lea
adc
add
pop
popf
outsb
lea
and
imul
in
mulb
xchg
test
jmp
int
test
fnstsw
popa
inc
mov
sbb
cmp
movsb
cli
dec
adc
lds
add
les
and
pop
fs
xchg
xchg
cmp
inc
pop
adc
lea
xchg
or
dec
adc
adc
xlat
mov
push
fnsave
xchg
rcrb
sti
xchg
insl
mov
jle
fldpi
aas
dec
cs
in
aad
les
int
mov
popf
sbb
fs
or
aas
sub
scas
push
and
adc
jl
mov
add
aaa
and
inc
pop
or
aas
aam
cwtl
mov
jnp
movsb
pop
popf
bound
jg
repnz
lock
push
adc
sbb
pop
jp
stos
rcl
or
cltd
in
pop
out
cmp
lahf
mov
mov
mov
bound
jns
imul
dec
mov
stc
fstpt
mov
mov
insb
adc
movsb
pop
cmpsb
mov
jnp
scas
insl
stos
icebp
lahf
ja
fstpt
cmp
pop
icebp
cltd
in
test
push
lea
and
enter
into
fists
mov
adc
fisubrl
cmc
push
sub
sahf
addr16
sbb
cmp
adc
shr
mov
shl
and
cmpsb
les
jp
mov
mov
popa
popa
test
jmp
or
cmp
stos
pop
cld
mov
xchg
xchg
push
and
fisttpl
roll
stc
test
filds
mov
shlb
inc
push
mov
adc
sbb
xchg
cmpsl
outsl
lds
out
ja
xor
jmp
or
popa
and
out
xchg
rorl
mov
or
sbb
pop
mov
dec
pusha
and
xlat
outsb
dec
inc
jae
push
fdivrl
mov
shlb
xchg
punpckldq
mov
movlps
pop
loopne
xchg
movsb
sub
outsb
sbb
push
loope
push
test
call
cmp
enter
sbb
adc
mov
or
in
popf
mov
mov
pop
dec
insl
jns
fwait
stos
test
setns
dec
stos
mov
ret
sbb
mov
lahf
in
in
pop
shll
out
inc
arpl
insb
out
mov
in
test
es
push
mov
repz
jae
fldcw
shlb
add
xor
inc
int3
dec
pop
call
test
addb
pop
fwait
xor
dec
in
inc
jne
jp
fs
xchg
push
dec
jecxz
mov
xchg
mov
and
dec
sbb
jl
idiv
xchg
push
dec
lods
fldl
sub
sub
xchg
js
adc
mov
ficoms
enter
in
adc
dec
adc
fcoml
cmp
ficomps
mov
pop
mov
sub
sub
arpl
ret
aam
mov
and
loop
jnp
sbb
ds
xor
push
std
sub
adc
icebp
dec
movsl
ljmp
and
fidivs
repz
dec
push
lea
lock
or
enter
add
xor
stc
inc
pop
sbb
fsubrs
inc
ret
and
fimull
dec
sub
fisubrs
add
xor
xchg
adc
das
mov
pop
ret
xchg
call
mov
aad
sub
out
pop
sahf
pop
das
jle
roll
int
movsb
mov
aaa
les
aaa
mov
hlt
scas
fisubrl
sbb
sub
fbld
or
inc
je
xorb
std
or
and
xchg
push
call
es
jno
dec
iret
jo
adc
mov
dec
mov
aad
loope
mulb
cmc
repz
ret
fnstsw
dec
push
xchg
mov
push
xchg
stc
roll
cmp
adc
sarl
into
loope
mov
inc
cmp
iret
xchg
push
sbb
dec
cmpsl
add
insl
dec
push
sub
inc
hlt
cmp
pusha
xchg
pop
jbe
cmp
sub
or
out
clc
aas
test
cmp
sub
pop
es
arpl
cmp
lods
push
sbb
ds
lea
shll
push
leave
outsb
or
sbb
mov
call
mov
dec
loope
jle
insl
rcrl
addr16
mov
mul
lods
test
popf
int3
push
incl
mov
data16
and
in
mov
das
xchg
stos
xlat
roll
loope
adcl
lods
fistl
loope
ljmp
dec
sbb
cli
mov
or
pop
mov
jno
xchg
jl
push
and
xchg
push
aad
adc
loop
leave
movl
sub
scas
stos
lds
sub
int3
outsb
nop
iret
mov
inc
je
dec
aas
push
outsl
pushf
stos
pop
out
inc
or
loop
cmp
ljmp
xchg
inc
stc
stos
add
dec
xchg
add
cltd
mov
shll
mov
push
gs
jne
out
mov
es
xchg
push
cmpsb
xor
xlat
adc
out
rolb
jb,pt
inc
pop
aam
cmp
icebp
mov
shl
arpl
addb
repnz
js
outsl
and
dec
pop
mov
mov
push
add
push
mov
mov
mov
mov
popf
mov
in
pop
jne
add
lock
sub
pop
aas
outsl
iret
cltd
sub
or
leave
mov
enter
and
add
lret
jns
cmpsb
or
jae
popf
inc
jmp
nop
add
cmp
js
notb
xor
repnz
inc
fiadds
loope
inc
push
pushf
aas
mov
jno
insl
aam
sbb
mov
cwtl
fadd
ss
xor
dec
ja
out
inc
shr
jge
cmp
out
pop
nop
sub
movsb
cmp
inc
adc
enter
cmp
shll
ret
loopne
mov
mov
es
and
dec
adc
outsb
inc
outsb
xor
sub
outsb
aaa
push
dec
dec
and
mov
jbe
cmpsw
in
push
gs
xchg
push
mov
loopne
ss
test
mov
xor
cmp
xor
add
xchg
sub
loope
pop
cmp
lret
lret
pop
into
jno
jmp
int3
ss
xor
outsl
push
adc
adc
inc
xor
adc
mov
into
enter
leave
sub
lret
mov
jl
arpl
cwtl
popf
test
mov
xor
lret
mov
fistl
repnz
pop
outsb
push
test
adc
mov
cltd
or
outsb
pop
fidivl
leave
loope
or
call
test
outsl
repz
jecxz
cli
aam
ret
mov
cmovp
cmp
add
cmp
cltd
adc
mov
leave
adcl
pop
cs
mov
sbb
xor
mov
addr16
xchg
arpl
mov
jecxz
pop
mov
enter
and
lret
sub
adc
fs
mov
adc
inc
cmpsl
jns,pt
push
jne
xchg
lds
xor
repz
das
push
test
xor
jmp
or
lret
or
imul
mov
sahf
clc
cld
aas
mov
into
mov
in
jnp
jecxz
cmpl
xchg
mov
popf
mov
xor
push
jb
dec
pop
imul
icebp
mov
and
adc
or
hlt
mov
hlt
mov
aam
push
or
das
sub
popa
add
jns
mov
in
test
scas
leave
nop
pop
aam
repz
mov
cmp
push
and
lret
insl
cmp
xchg
inc
fstps
shll
leave
movsb
inc
push
ja
lds
notb
push
ljmp
mov
test
mov
sub
mov
ds
iret
jge
add
cmp
xor
jno
call
mov
xor
mov
or
pop
outsb
cli
xchg
fwait
xor
jnp
jg
gs
test
fiadds
ret
ret
inc
clc
hlt
int3
pop
bnd
adcb
lock
pop
inc
loopne
mov
jmp
pop
xchg
out
shll
dec
in
add
or
mov
fdivrp
inc
fsubrl
add
sub
loope
push
and
hlt
sarb
rcr
aas
shr
pop
inc
xor
inc
mov
mov
and
add
outsl
fisubl
mov
movsl
or
sub
dec
pop
hlt
jg
ret
sub
jge
dec
jns
aad
loopne
jmp
jb
mov
push
pop
bound
xor
or
loope
pop
cli
pushf
adc
pop
push
daa
or
pop
pusha
test
push
out
mov
pop
and
rclb
cwtl
push
fstpl
fucomip
push
sbb
xchg
dec
mov
sbb
aas
push
jecxz
test
setp
add
enter
jp
lret
bound
pushf
imul
cld
pushf
mov
or
movsl
inc
push
mov
xor
test
push
xchg
xor
push
in
or
nop
daa
repz
fiaddl
cmpsl
rorl
fimuls
lods
sub
mulb
xlat
mov
push
mov
gs
xchg
pop
ds
insl
cli
or
scas
xchg
sbb
xor
sub
adc
xchg
in
cmp
scas
xor
call
fstl
out
sti
inc
xor
pop
in
outsb
inc
mov
test
repnz
pop
jae
add
push
sbb
mov
stos
loope
push
adc
out
je
fucomp
in
xchg
jne
cltd
in
das
mov
cmpsl
ds
sbb
rol
pop
add
adc
jmp
or
lret
push
sub
jns
lods
inc
pushf
mov
xorb
push
out
lahf
sub
mov
or
addr16
ret
fdivp
mov
inc
mov
es
xchg
xor
ret
dec
leave
call
fwait
sbb
sbb
xor
mov
sbb
sbb
xor
inc
imul
daa
fwait
xor
cmp
sbb
loop
mov
mov
xor
inc
enter
add
adc
psllw
mov
jp
sub
sub
test
inc
ss
in
jns
gs
jb
aaa
dec
xchg
test
mov
sarb
dec
aad
push
aaa
ljmp
pushf
and
out
inc
repnz
and
mov
pop
cmp
pop
aaa
test
in
push
daa
or
or
mov
pushf
lods
fistl
test
add
stos
xchg
sub
adc
xor
pop
notl
add
shl
insb
ss
jo
cmp
leave
div
xchg
imul
mov
fcmove
mov
or
adc
xchg
shr
mov
fistpll
push
das
sahf
xchg
or
lock
add
gs
add
sub
lret
or
add
ljmp
lods
mov
jmp
mov
rep
int3
lret
lret
mov
into
adc
mov
pushf
cli
xchg
xlat
sub
cmpl
push
imul
mov
ret
mov
cmc
aam
pop
push
push
icebp
mov
popa
add
sub
dec
loope
cmc
test
lods
aaa
push
imul
sub
add
je
fdivl
mov
fsts
mov
xor
cmpsb
mov
cmpsb
mov
xchg
sbb
mov
push
mov
push
imul
sti
jmp
loopne
adc
bound
insl
ret
out
ljmp
call
mov
add
adc
mov
nop
orl
call
sahf
sbb
mov
push
xor
bound
aas
in
push
imul
jo
jge
lea
sarb
push
jbe
inc
pop
inc
xor
in
outsl
cltd
loopne
and
xchg
cmpsb
ds
das
jb
rcll
sub
jo
das
test
popf
hlt
inc
clc
fs
inc
in
pop
shlb
sbb
pop
enter
mov
ja
mov
pop
add
sub
jo
sbb
int3
bound
sbb
dec
push
cld
jg
or
inc
xchg
clc
ljmp
jno
mov
push
stc
push
adc
cwtl
inc
pushf
fs
andb
sti
jp
out
sbb
into
dec
out
mov
int
into
movsl
mov
fisubrl
subl
scas
inc
and
sbb
test
jne
cltd
repz
mov
arpl
gs
jae
jno
jnp
mov
aaa
in
out
sarl
push
xchg
xor
rolb
ja
push
rorl
sbbl
mov
push
add
sub
cmp
popf
outsl
cmp
mov
dec
xor
xor
daa
popa
orl
sub
repnz
dec
dec
sbb
jp
add
dec
jns
jmp
xchg
dec
and
test
cs
movsl
subb
sub
pop
or
fisttpl
testl
fwait
push
push
jnp
out
adc
out
iret
rcrl
push
lds
mov
lea
cmp
pop
mov
sbb
pop
loop
xorb
cli
push
sbb
sub
test
xor
into
inc
push
cmpsl
aas
xor
xchg
ds
out
sbb
test
sub
lahf
push
in
je
or
and
inc
popa
stc
es
sub
sbb
pop
stos
pop
jmp
into
xchg
fimull
add
jecxz
cmpxchg
lds
in
push
dec
hlt
and
imul
cmp
ret
into
sub
dec
push
xor
iret
or
pop
ja
sub
call
repz
mov
lods
add
push
inc
cmpsl
xor
std
mov
cmp
addb
popf
jne
gs
or
jbe
inc
cmpsl
sahf
push
fwait
stc
enter
adc
and
imul
adc
adcl
stos
dec
out
rol
inc
xlat
mov
icebp
pop
jge
and
mov
insb
add
jecxz
cmp
cmpsl
inc
rcl
or
aam
ja
or
cmp
inc
jecxz
cmp
inc
inc
lcall
lods
add
xchg
test
stos
fnstenv
mov
xor
sbb
std
fs
mov
pop
jo
rcll
inc
sbb
cli
xor
fstpt
push
sub
out
xor
cmp
bound
leave
mov
inc
mov
mov
pop
mov
je
loope
xor
inc
daa
icebp
mov
test
push
pushf
push
aas
xchg
nop
mov
mov
sub
outsl
add
lock
sub
imul
xchg
or
sub
das
bound
into
daa
dec
dec
push
dec
xchg
cmp
inc
stc
sub
aam
sbb
jno
push
in
sub
jae
mov
push
in
dec
pmaxub
push
dec
repz
addr16
pushf
sbb
mov
or
adc
mov
pop
test
xorl
or
mov
xchg
mov
sbbb
int3
iret
push
in
and
jecxz
cmc
pop
dec
mov
lcall
cmp
xor
icebp
loop
add
jmp
stc
or
mov
sub
push
pop
inc
icebp
fs
mov
and
fs
lock
fs
mov
push
into
sahf
and
lret
bound
flds
in
jmp
lret
lret
jmp
out
int3
int
xchg
andb
dec
jno
sub
push
sbb
cmp
into
mov
dec
gs
mov
bound
loop
loope
addr16
arpl
fs
xchg
xchg
and
sub
lcall
into
ret
xor
mov
cld
xchg
mov
lahf
sbb
mov
int
push
fs
icebp
mov
xchg
pop
inc
xchg
call
rorl
push
cld
pusha
xor
shlb
mov
sub
lock
stc
shrl
jbe
cmpsb
mov
pop
sbb
or
cltd
mov
imul
pop
mov
xor
cmc
cmpb
dec
adc
and
xchg
mov
call
shrb
aaa
xchg
pop
fwait
lock
mov
loop
in
out
nop
nop
sbb
aad
add
movl
les
push
out
mov
sub
into
jge
inc
scas
mov
dec
mov
ljmp
int3
xor
sti
jl
xchg
aaa
push
sub
mov
xchg
icebp
or
and
lret
les
mov
imul
pop
jl
push
leave
cltd
adc
mov
dec
and
pop
sbb
xchg
data16
popf
je
enter
inc
movsl
lcall
rcr
outsl
les
mov
xchg
out
out
xor
shrb
inc
in
cmp
jns
cld
and
and
insl
sub
mov
cmp
push
addl
xor
movsb
ss
xlat
cmp
jbe
test
mov
vpshufhw
mov
ret
sub
lret
lock
inc
sti
andb
xor
inc
jmp
inc
and
in
mov
push
cmc
adc
mov
dec
and
enter
sub
call
je
sahf
and
orb
stos
sbb
xchg
jle
mov
cmp
push
pop
pop
inc
push
push
sub
fstps
aaa
arpl
push
scas
in
xor
int
push
mov
pop
or
xchg
out
jns
cmp
jecxz
sub
ror
push
int
and
sub
pop
testb
iret
shlb
in
cmp
mov
push
insb
call
in
cwtl
pop
fidivl
int3
lock
pop
and
inc
imul
lret
in
int
lahf
or
es
jb
mov
adc
in
out
adc
cmp
jne
divl
addr16
mov
out
sub
rol
xor
pop
add
test
push
shrl
adc
mov
lea
push
jne
xor
add
mov
je
mov
xor
jns
loope
dec
sahf
cmp
mov
int3
jbe
in
cwtl
iret
daa
lea
xchg
outsl
testl
sbb
popf
cmp
jnp
cmc
mov
push
mov
vmovq
dec
lods
inc
clc
sbb
xlat
add
xor
fstl
iret
stc
or
push
sbb
in
push
shrl
rcll
leave
mov
xchg
sub
lods
jnp
pop
dec
mov
jp
stos
loop
cmpsb
pop
push
add
repnz
pushf
adc
fldcw
xchg
in
frstor
dec
repnz
dec
mov
outsb
xchg
sbb
xor
loope
and
pop
scas
xor
cmp
rclb
mov
sub
fistpll
cmp
test
test
imul
mov
push
mov
xchg
es
sbb
pop
mov
xchg
xchg
sbb
out
lock
lcall
stc
insb
ds
add
add
xor
fisubrs
loop
and
cmpb
xor
jne
pop
inc
insb
in
cld
push
xchg
cmp
add
mov
sbb
sbb
pop
pop
loope
fs
scas
ds
xchg
push
dec
test
pushf
xor
jb
sbb
jnp
adc
add
test
mov
test
add
mov
movb
arpl
sub
icebp
and
push
adc
int3
inc
insb
mulb
cwtl
push
out
mov
push
push
rcl
rcr
mov
inc
jmp
cltd
pusha
fcmovne
push
out
cmp
dec
sub
sub
ret
arpl
mov
pop
mov
fs
cmp
loope
inc
out
jp
jle
and
cmp
pop
les
lods
push
addr16
decl
stos
dec
mov
jae
in
mov
divb
mov
lcall
mov
sub
cmpl
js
lea
dec
call
dec
in
test
and
flds
cmp
cmp
out
clc
xor
xorl
gs
push
imul
js
rcrl
lock
inc
movsb
inc
scas
scas
clc
sub
rcrb
xchg
mov
scas
jle
scas
cmp
fsubs
outsb
dec
dec
pop
addr16
xchg
insb
aas
push
jle
out
ja
sub
inc
test
push
fwait
mov
push
fidivrs
dec
lds
imul
out
inc
insb
xor
and
mov
leave
sbb
repnz
adc
mov
lahf
pusha
enter
sub
movsb
and
bound
aas
mov
mov
jge
stc
dec
fwait
lods
lret
add
mov
iret
or
pop
std
mov
push
push
and
xor
inc
pop
cltd
sub
pop
sub
xchg
out
or
mov
leave
xor
push
xchg
inc
loope
mov
mov
out
adc
push
in
addl
loop
xchg
dec
outsl
sahf
fcompl
mov
xor
cmp
fwait
cmp
ret
xor
add
or
sbb
inc
adc
xchg
mov
cmc
ret
je
in
pop
leave
mov
cmp
test
sarb
sub
sub
popf
push
out
push
lret
sbb
aad
repz
inc
les
shrl
mov
jo
sbb
xor
lds
sub
fistpl
insb
lahf
testl
xchg
cmpsl
lds
mov
fucom
lds
in
mov
leave
add
rclb
xchg
outsl
pop
lods
fisubs
jle
dec
jo
icebp
mov
push
jne
jl
lock
cmp
inc
and
fwait
push
cmp
mov
adc
cmpsl
or
pop
sbb
xchg
and
adc
ljmp
mov
xchg
xchg
push
xchg
mov
add
lods
pop
mov
imul
daa
and
xchg
pop
ret
lods
outsl
adc
fistpl
xor
fs
loopne
mov
adc
lret
or
jnp
adc
mov
cmp
stos
inc
pop
lea
arpl
or
and
fwait
scas
mov
aam
adcl
inc
pop
imul
cs
push
adc
icebp
sbb
and
fs
scas
and
inc
xor
mov
iret
outsl
lea
pop
mul
adc
out
xor
adc
outsb
xchg
push
adc
out
test
int3
int
jnp
and
inc
push
sub
jecxz
shlb
fsubr
inc
daa
adc
cmp
dec
ret
je
decb
xor
dec
jnp
scas
loop
cmp
repz
jo
xchg
in
mov
pop
movsb
mov
inc
movsl
sbbl
and
mov
insb
enter
bound
scas
rorl
pop
icebp
inc
adc
js
dec
rorb
jo
loopne
dec
xchg
flds
in
loope
rclb
ret
sub
push
sbb
lcall
movsl
pop
scas
pop
repz
test
repnz
jecxz
sbb
cld
scas
cmp
test
mov
adc
adc
in
incb
mov
in
xor
cmp
jecxz
lret
xor
push
cmc
xchg
lds
adc
xchg
idivb
outsl
movsl
push
cmp
mov
mov
mov
sub
pop
push
mov
loop
rcll
sub
cmc
dec
fs
xchg
insb
add
jmp
push
mov
adc
sub
cmp
and
sub
or
mov
adc
sahf
out
lea
jns
mov
or
adc
rcrb
and
push
insb
mov
xor
stc
push
jmp
loop
jbe
xchg
daa
outsl
sub
jge
adc
loope
adc
ja
mov
xchg
stc
insb
jmp
add
push
jecxz
fcmove
loopne
dec
dec
js
stos
xchg
sbb
fsubrl
ja
test
lds
pushf
and
lret
nop
movsl
icebp
lahf
xchg
scas
mov
loop
mov
pop
fwait
aas
push
sbb
cwtl
es
ljmp
xor
ds
mov
xchg
sarb
adc
xlat
test
shll
imul
shlb
or
push
or
jae
aam
xor
push
orl
push
and
xor
cmpsb
sbb
sub
lahf
push
mov
outsb
inc
lret
mov
iret
jb
aaa
pop
aam
jb
adc
jo
pop
cmp
sbb
mov
daa
rclb
sbb
push
loopne
push
outsl
adc
mov
testl
ljmp
arpl
or
push
lcall
in
mov
pop
or
xchg
std
in
inc
jne
loop
addr16
push
dec
cmp
cmpsb
and
mov
fs
or
loop
sarb
cmp
rorb
std
icebp
mov
ror
xor
add
inc
or
pusha
sub
cmpsl
cmp
mov
adc
xor
or
sbb
mov
in
or
sbb
aad
sub
lahf
push
in
cmp
cwtl
bound
shll
cld
inc
test
subl
mov
ret
push
mov
pop
mov
vshufps
mov
push
repz
or
jecxz
jge
adc
gs
pop
inc
lds
cltd
test
xchg
sar
xor
or
icebp
movsl
shl
mov
les
loopne
into
loope
addr16
faddl
push
inc
enter
inc
inc
jno
sti
fwait
iret
leave
nop
push
or
dec
xchg
out
out
jo
and
cmp
lock
mov
hlt
mov
push
push
or
mov
fiadds
mov
imulb
scas
mov
push
inc
imul
push
popa
add
mov
mov
dec
cmpl
add
xchg
scas
fimuls
icebp
out
dec
mov
movd
adcl
rcrl
jle
sub
sbb
repnz
mov
cltd
js
movsb
fisttps
xor
lret
push
rcl
mov
in
ret
cmp
sub
mov
sbb
mov
sbb
pop
daa
sub
icebp
inc
pop
push
sub
sub
repz
cwtl
les
divl
fs
mov
sub
push
jle
lods
shr
inc
mov
data16
jmp
and
stos
mov
jl
mov
push
repnz
lret
lret
xlat
loopne
jne
xchg
bound
mov
xchg
jle
or
adc
jb
and
cltd
mov
pop
jae
cmpsb
loope
push
je
aad
addr16
aad
outsb
pop
subps
out
xor
mov
lahf
cvtdq2ps
cmp
xor
cmp
push
or
mov
jp
sbb
test
loop
cmp
sub
xchg
sub
in
lods
mov
in
push
jmp
mov
inc
test
mov
test
cmc
mov
filds
sbb
pop
out
addr16
loopne
and
xchg
add
cmp
fisubl
push
roll
data16
into
pop
adc
xchg
mov
sub
mov
sbb
out
jb
subb
pushf
xchg
sbb
inc
lcall
mov
out
in
in
shrl
push
push
js
dec
or
xor
mov
push
push
les
cld
stos
and
sub
mov
stc
sub
mov
dec
dec
rcrb
push
mov
dec
push
xchg
dec
and
xchg
pusha
out
test
xchg
add
inc
test
cmpsl
jle
sbb
popf
xor
xchg
push
rcrl
sub
jno
daa
inc
sub
adc
adc
adc
mov
cmpsb
jmp
pop
int
mov
sar
pusha
or
and
out
dec
pop
inc
pop
push
pop
mov
nop
sti
insl
cmp
leave
mov
mov
scas
mov
pop
jmp
and
xchg
dec
les
shll
and
lock
decl
push
mov
out
mov
pop
and
xchg
mov
mov
jge
movl
adc
cmp
scas
sbbb
jecxz
out
sub
inc
lds
mov
loopne
pop
jmp
pushl
jmp
lods
mov
testb
jo
jno
cmc
adc
mov
aam
xor
fwait
sti
push
stc
out
push
cmpsb
sub
inc
repnz
cld
pop
xchg
jmp
xor
mov
pop
mov
lret
std
and
movsb
lods
pop
aaa
stos
cmp
xor
inc
dec
mov
inc
cmpsl
jp
jns
jp
ss
xchg
mov
leave
sbb
cmp
data16
popf
lahf
lret
sbbl
mov
and
outsl
enter
ljmp
scas
xchg
push
push
frstor
mov
les
aas
pop
fwait
repnz
lock
repz
je
sub
cltd
sbb
leave
fcoms
aad
and
imul
lahf
lods
rorl
push
xchg
adcl
flds
pop
inc
cld
dec
ds
insl
popf
aaa
mov
mov
addl
gs
cmpl
shll
cmp
jae
pushf
jns
adc
dec
add
out
mov
xchg
into
fisubrs
mov
mov
xlat
sub
pop
aad
iret
mov
push
cld
add
mov
aas
push
jmp
xor
dec
ja
jb
and
and
or
ss
es
push
mov
mov
movsl
notl
mov
mov
fsubrs
dec
pusha
push
cmp
push
aaa
lock
fscale
xor
pop
pop
and
jle
and
scas
xor
out
push
ds
stc
push
jb
add
fs
adc
out
in
jecxz
jg
adc
xchg
mulb
jae
pop
mov
ljmp
int
in
push
cmpsb
data16
and
or
ret
sub
cmc
add
dec
imul
movsb
fisttps
cmpsl
push
xchg
jl
aaa
mov
loopne
pop
push
pop
insl
inc
cmpsb
sbb
dec
loope
jns
dec
movsb
mov
push
mov
popf
mov
xor
push
aam
mov
mov
aaa
cmpsb
gs
pop
mov
cmp
lahf
xor
mov
ljmp
sub
jecxz
loope
xor
iret
xchg
mov
xchg
shlb
push
xchg
scas
cmp
out
stos
push
mov
or
outsb
test
mov
in
mov
imul
dec
fistps
pop
fmull
mov
dec
mov
sti
test
push
inc
shll
or
sti
mov
inc
pop
ljmp
in
mov
aas
pusha
xchg
xchg
dec
mov
cmpsl
pushf
cli
sub
bound
pop
pop
inc
call
or
mov
push
aas
mov
jo
jle
sub
repz
or
add
repnz
xchg
cwtl
add
pop
cmp
imul
sbb
call
mov
pop
int
clc
jae
push
mov
pop
lret
cld
sub
add
ja
and
add
xchg
pusha
cltd
jecxz
dec
lcall
inc
nop
or
std
mov
xor
jge
fs
aad
adc
inc
cmp
in
adc
and
dec
pop
int3
xor
pop
jp
cli
inc
fidivrs
fistl
xchg
xchg
inc
data16
pop
sub
in
cmp
mov
and
lret
inc
enter
js
mov
pop
lcall
and
jnp
adc
sbb
mov
inc
test
lock
or
iret
push
negl
shll
popa
int
cmpsl
loop
push
or
xor
mov
std
fidivs
pusha
popf
fsubrs
dec
cmp
aad
xlat
sub
cmc
push
mov
sbb
cmpsl
jp
add
sbb
sub
scas
adc
dec
ret
aaa
and
inc
jmp
push
lcall
aaa
dec
pop
ficompl
jmp
cmpsl
fsubrl
stos
xchg
push
dec
cmpsb
sbb
pop
fisubl
orb
les
and
scas
repnz
jbe
and
jnp
pop
cmpps
or
inc
and
frstor
leave
adcl
adcl
lods
pop
ja
out
je
push
iret
sbb
dec
lock
xchg
repz
arpl
pop
xchg
popa
into
enter
out
bound
xor
mov
pop
jmp
add
cmp
xchg
xchg
mov
std
iret
xor
mov
push
xor
pop
push
lahf
out
cmpsl
mov
pop
and
xchg
push
gs
sti
push
lea
dec
inc
test
arpl
idiv
aas
mov
shll
adc
jb
int
dec
cmp
mov
xlat
inc
add
xchg
mov
in
repnz
dec
push
sub
insl
xor
arpl
push
fimuls
and
stos
pop
test
stos
mov
dec
sarl
xchg
pop
mov
inc
popa
sbb
mov
lock
mov
sub
repnz
pusha
aas
dec
les
add
pop
adc
pop
mov
sahf
cwtl
jbe
out
mov
dec
adcl
mov
inc
enter
out
pop
sahf
inc
and
sbb
adc
xor
insb
mov
push
add
lret
mov
mov
mov
fnstsw
insl
and
sub
jp
jb
sub
xor
push
int3
or
fldl
lahf
ds
out
sub
rolb
andb
rorb
hlt
shl
jge
pop
in
sarb
add
mov
addl
mov
adcl
xchg
mov
lret
xchg
mov
xor
push
dec
xor
daa
icebp
out
test
arpl
test
xorl
add
aaa
mov
push
ret
mov
lret
stos
bound
idivb
rol
mov
mov
into
mov
cmp
push
or
roll
adc
or
mov
cmp
fildll
xchg
jo
stc
and
adc
add
add
pop
xor
in
pop
rcll
movsl
add
inc
fidivs
int
lret
sbb
pop
xchg
push
inc
inc
push
incb
repnz
xchg
push
testl
jb
into
daa
mov
stc
adc
enter
mov
shr
push
adc
xor
sbb
notl
mov
xchg
cmp
hlt
test
add
xchg
pop
inc
cwtl
imull
sub
or
sbb
jne
sub
lea
jle
pop
cmp
in
mov
pop
mov
push
es
outsl
adc
pop
into
call
enter
lods
xchg
and
pop
lcall
push
mov
mov
loop
xchg
in
mov
or
in
push
add
cmp
pop
pop
push
mov
xor
xor
imul
movsl
xchg
sub
pusha
movl
sbb
xor
pop
movb
imul
mov
iret
sub
leave
popf
arpl
pop
add
cmp
xchg
repz
jge
jecxz
lock
arpl
ret
xchg
adc
xchg
mov
cmpsb
xchg
scas
cs
stc
add
bound
ffree
ficoml
and
pusha
adc
jge
test
xchg
loopne
into
push
enter
fdivl
push
or
and
dec
lods
mov
push
rcrb
inc
pand
mov
fiadds
mov
cmp
fdiv
adc
add
fidivrs
push
mov
adc
add
hlt
sbb
rorb
mov
adc
add
lcall
ja
push
in
enter
repnz
ret
mov
ret
push
inc
jo
fisubl
push
push
cmc
push
or
mov
pop
xor
call
outsl
mov
xchg
stos
negb
and
cli
add
aaa
mov
xchg
shlb
in
test
insl
jmp
dec
cmp
rol
pop
pop
or
ret
cmp
popf
pusha
inc
imul
idivb
sti
jge
adc
pop
jge
sub
sub
push
inc
enter
in
into
enter
xor
or
out
movsl
mov
ds
mov
cmp
jno
pop
andb
sti
call
add
xor
xchg
sahf
xchg
ficoms
nop
jne
repz
mov
push
inc
bound
popa
imul
popf
and
push
mov
dec
adc
xor
lret
cmp
into
fsubl
lret
sti
cli
daa
cmp
aad
fiadds
dec
movsb
cmp
mov
mov
iret
dec
and
jl
notb
dec
mov
jo
pop
adc
mov
sub
and
outsb
clc
xor
dec
mov
push
call
pop
les
xchg
sbb
sub
dec
aas
pop
testl
jl
and
inc
xchg
repz
pop
pop
out
stos
and
sbb
ret
nop
push
daa
mov
dec
sub
jg
and
dec
adc
rclb
negb
inc
icebp
push
dec
je
pop
popa
testl
xor
lea
mov
pop
mov
xchg
fsubr
clc
push
add
xor
xchg
jns
push
loopne
mov
sub
sub
outsl
aam
movsb
jo
cmp
push
dec
pop
scas
mov
cmp
push
imul
jmp
aaa
test
xor
mov
cwtl
mov
push
test
call
repnz
andl
shl
iret
pop
sbb
loop
stos
inc
nop
xchg
and
jmp
pop
filds
lcall
test
imul
lds
adc
jp
push
mov
push
mov
or
lahf
add
add
jmp
mov
popf
xchg
push
dec
xchg
scas
fnstcw
push
fs
ret
loop
xor
les
in
dec
cmp
repnz
inc
stc
in
fdivs
cmc
icebp
sub
push
cmp
push
mov
sbb
sub
mov
js
enter
lds
mov
cmc
jge
xchg
pop
aaa
mov
sub
xchg
dec
inc
scas
xchg
jns
popa
xchg
jp
shl
pop
mov
ret
mov
clc
mov
lock
loope
xor
sub
in
in
jp,pn
pushf
inc
xchg
or
or
int
out
mov
push
clc
jnp
ds
mov
mov
mov
cmp
pop
jecxz
stc
adc
jno
getsec
sbb
inc
pop
data16
mov
xor
lds
ret
or
sub
aad
scas
or
adc
xchg
shrb
lock
dec
pop
push
lret
addr16
sub
stos
leave
in
bound
iret
sbb
xor
mov
mov
rcll
sub
cmp
ds
dec
pop
out
decl
ret
bound
jp
rcrb
int3
mov
inc
lods
adc
pop
ss
stc
pop
dec
testl
ret
sahf
xchg
pop
scas
xchg
xor
jmp
cmpsl
mov
cmp
pop
ret
adc
pop
push
and
bswap
inc
repz
mov
xchg
test
inc
lahf
hlt
ss
pop
sbbl
mov
cltd
or
pop
test
push
cmc
lcall
xorb
jnp
dec
addr16
lret
sbb
imul
test
xchg
jns
inc
cmp
mov
xor
dec
dec
test
out
cmp
and
aam
fldt
pop
imul
sub
push
push
push
jbe
push
fadd
cmp
inc
lods
dec
pop
jmp
sub
jno
sub
push
vpmullw
and
std
mov
stc
adc
ret
outsb
pop
dec
aaa
aas
add
subl
inc
cmpsl
mov
xchg
push
sbb
adc
jae
js
and
push
lcall
clc
xor
in
dec
sub
push
inc
pop
and
dec
dec
xor
rcrb
push
inc
decb
int3
cltd
lock
iret
loope
xchg
aas
mov
cmp
or
ss
pop
jne
inc
inc
cmp
cmp
xor
dec
push
lods
loopne
imul
sbb
ficompl
xor
out
jbe
or
data16
mov
xchg
push
mov
push
pop
cmp
cmp
add
dec
cmp
and
addl
mov
add
test
mov
ficomps
in
fstpt
es
scas
leave
xchg
call
sub
lods
jne
inc
pop
leave
in
mov
or
sbb
nop
jg
lret
and
lret
out
add
push
sub
xchg
xchg
mov
cmp
add
jne
movsb
repnz
out
inc
inc
push
out
jnp
sti
push
mov
hlt
cmp
jmp
lea
repz
roll
icebp
push
and
add
out
pop
pop
cmp
and
imul
movaps
dec
cmp
push
sub
aam
jbe
lods
mov
xchg
repnz
lcall
jns
sub
sbb
sbb
mov
insb
imul
lea
mov
insl
and
loopne
fsubrs
inc
clc
daa
xchg
inc
arpl
out
int
sbb
jecxz
int3
adc
movsb
adcl
cmp
adc
icebp
or
jae
mov
fstpt
loop
push
inc
mov
sub
inc
add
sub
pop
pop
add
rorl
stos
sbb
xchg
sub
push
mov
repnz
in
outsb
adc
mov
and
and
xchg
dec
sbbb
xchg
sti
push
pop
imul
mov
insl
dec
pop
sbb
cld
push
dec
cmp
inc
call
jae
or
out
fwait
mov
push
mov
or
sub
ds
or
mov
stos
or
int
int
xchg
push
out
jmp
xchg
test
push
test
xchg
cmpsl
nop
mov
out
cmp
sub
repnz
jg,pn
cmp
push
in
sbb
sub
inc
sub
ret
xchg
cmp
mov
in
fidivs
sbb
mov
mov
cmp
pop
add
cmp
loop
add
mov
cmp
xor
aam
fs
xchg
stos
out
rcrl
pop
mov
test
pop
dec
and
push
inc
dec
stos
ja
push
outsb
xor
out
lds
test
mov
iret
inc
pop
and
cmp
mov
push
adc
or
call
mov
stos
pop
inc
aas
int3
addb
not
imul
sahf
imul
mov
pop
hlt
mov
out
sub
mov
lret
fs
lcall
and
subl
mov
sub
fists
aam
jmp
mov
add
or
idivl
test
mov
mov
nop
lcall
gs
xchg
xchg
or
int
movsb
hlt
push
xorl
ret
sub
sbb
pop
mov
cmp
jmp
pop
lods
movl
scas
out
xchg
xchg
dec
adc
ljmp
iret
mov
imul
mov
shll
ja
mov
mov
ja
hlt
cmp
stos
repz
out
stos
ljmp
ret
inc
cmpsl
jno
sarb
dec
jnp
push
xchg
mov
cli
int
inc
iret
pop
sbb
jns
mov
push
xchg
mov
adc
xor
nop
add
loop
jmp
fmull
jo
jne
out
push
mov
mov
leave
call
aad
mov
jbe
dec
jecxz
ljmp
push
mov
das
mov
fsubrl
pop
mov
jle
and
fadds
arpl
and
fists
sti
pop
dec
int3
jae
pop
ss
lods
orl
jge
sub
subb
out
sti
shl
int3
movsb
hlt
push
mov
push
mov
xor
cld
outsl
fcmovnu
daa
ljmp
outsb
aad
inc
rcrl
mov
or
mov
iret
push
adc
movsl
cmp
sub
dec
xorb
cmc
scas
xchg
dec
mov
adc
scas
push
dec
cmp
fdivrl
mov
mov
push
xor
push
cmp
jae
repz
push
aaa
lods
push
jne
ljmp
pop
fs
xchg
in
js
push
je,pn
cmp
xchg
mov
fstpl
aaa
scas
jp
mov
xlat
shrl
lret
mov
ss
outsl
inc
cmp
sub
in
rol
xor
ss
sub
js
sub
sub
pop
sub
mov
out
push
inc
push
mov
mov
jne
xor
sub
fnstsw
inc
fidivs
sub
cli
mov
or
imul
push
outsl
add
jae
movsl
in
inc
push
cltd
adc
and
xchg
pop
out
cld
xchg
cmp
outsb
adc
mov
mov
cmp
mov
ret
pop
dec
add
mov
lods
mov
cmpsl
mov
inc
lds
mov
push
lea
and
jbe
push
inc
jb
jne
xchg
sub
les
shl
lods
int
fnstsw
shrl
dec
loop
pmaxub
adc
inc
push
add
cld
lcall
xor
xor
sub
imul
pop
icebp
mov
imul
push
imul
das
or
pop
sbb
test
add
mov
cmpb
data16
loop
lahf
ret
xor
enter
lock
mov
jne
dec
jns
dec
popa
cld
pop
rolb
std
adc
roll
mov
xor
mov
lahf
pop
mov
sar
cmp
adcb
push
xor
or
and
out
pop
cs
mov
dec
cmp
inc
jmp
pop
test
orl
mov
mov
pusha
cmp
adc
xorl
mov
bnd
adc
mov
cltd
dec
sub
and
sbb
negl
jg
leave
pop
xchg
lds
jne
dec
cmp
sbb
clc
int3
mov
or
sbb
add
xor
dec
cmp
jmp
ds
and
int3
pop
add
or
stc
adc
mov
pusha
nop
pop
rcr
jmp
fisubrl
cmc
je
test
sbb
sub
pop
push
pop
xchg
push
repz
in
or
sbb
inc
xlat
adc
push
int3
ds
dec
xor
dec
popf
sbb
ljmp
test
mov
push
daa
outsl
movsl
test
or
imul
lods
pop
cli
xchg
jns
push
cmc
pop
repz
push
test
in
fstps
repz
add
dec
add
adc
pop
cmp
lahf
inc
xchg
inc
cs
sbb
xor
or
sub
pop
stos
push
or
inc
pop
mulb
or
jecxz
bound
mov
sti
pop
xor
cmp
enter
dec
and
scas
out
sti
sub
mov
push
lret
lock
and
or
mov
push
int3
jb
xlat
sub
arpl
cmpsb
mov
insl
and
jp
inc
push
and
or
daa
adc
and
jl
cmc
cmp
push
fnstenv
lret
sbb
mov
or
sbb
xchg
pop
insb
lods
mov
popf
pop
push
inc
sub
cmp
mov
bound
inc
test
sbb
insb
std
or
into
daa
ljmp
push
mov
mov
and
push
test
mov
xchg
or
dec
pop
add
aam
aaa
dec
dec
sti
pop
ret
cs
das
xchg
insl
clc
sub
sub
sbb
jo
es
js
xsha256
cmpsb
xlat
icebp
movsl
pop
jns
inc
and
in
add
push
call
dec
push
outsl
fcmovnbe
pop
dec
or
mov
add
pop
jecxz
jecxz
dec
dec
and
adc
sarl
push
pop
and
add
dec
sbb
mov
data16
test
and
das
aad
fsubs
ret
ljmp
scas
addb
mov
inc
enter
and
pop
jo
push
negl
xchg
nop
das
lods
sub
dec
ljmp
inc
data16
rcrl
cltd
je
inc
test
jp
movsl
lret
and
fwait
negb
lea
xchg
adc
ret
pop
mov
rcrb
addr16
aas
mov
movb
repz
cmpsl
lods
pop
insl
leave
lock
nop
mov
sub
jno
add
dec
adc
subl
cmp
sbb
in
out
pop
jmp
ds
add
fistps
mov
repz
mov
loope
jecxz
xchg
add
xchg
jne
cmpsb
xchg
xor
adc
aad
fs
sbb
rcrb
outsb
cmp
outsb
sub
mov
push
jnp
shrb
jle
lahf
add
sub
js
fwait
or
mov
or
repz
mov
xchg
loop
cmpsb
jp
aam
jl
lahf
sub
adc
mov
icebp
int3
fcoms
fs
and
or
inc
xor
push
dec
cld
lods
inc
cmpsl
dec
xrelease
dec
int3
cmpsl
lahf
subl
dec
dec
fnsave
mov
mov
push
mov
cmp
inc
arpl
and
jo
mov
cli
xorb
fucomip
jne
dec
mov
cmpps
insl
movsl
jno
xchg
or
imul
cmc
pop
jb
daa
fidivrl
test
pop
pop
das
mov
sub
pop
inc
scas
add
push
adc
test
or
movl
aam
and
push
jbe
ss
loope
stos
sub
arpl
pop
dec
mov
out
stos
dec
inc
sub
pop
repz
enter
jns
inc
jae
pop
inc
adc
add
dec
push
inc
sar
xchg
mov
frstor
fwait
or
push
add
push
inc
aad
cmp
orl
sahf
bound
loope
mov
lods
jae
lahf
inc
or
out
dec
out
gs
pop
bound
mov
pop
pop
xchg
movsb
test
gs
call
or
inc
cltd
ljmp
jecxz
or
sub
cmp
imul
sub
xsha256
cmpsb
push
pop
adc
sti
and
dec
and
push
cmc
mov
dec
jl
in
push
add
mov
pop
jmp
sti
lret
dec
inc
stos
cmc
pop
xchg
jo
jb
add
lcall
in
es
push
aad
adc
xchg
mov
addr16
jg
push
mov
out
popf
movsl
jnp
mov
or
cmp
xor
daa
and
scas
mov
mov
fistps
rcr
test
loop
in
sub
pop
jbe
mov
icebp
repnz
pop
push
shrb
xor
xchg
inc
mov
hlt
dec
aam
cmpsl
nop
leave
or
cmc
cmp
push
dec
dec
mov
out
mov
dec
iret
cmp
cli
xchg
test
or
mov
adc
xchg
jbe
addr16
inc
xchg
and
daa
fnsave
mov
insl
mov
in
aam
pop
push
pusha
xor
cltd
popa
and
addl
test
repnz
xor
add
mov
test
inc
lock
ja
fsubrs
add
jnp
mov
pop
add
pop
out
nop
push
movsb
ss
or
push
mov
push
pop
scas
mov
sbbb
jno
jl
test
aaa
pop
or
sti
sub
add
xor
or
mov
xor
sub
nop
cwtl
test
pop
ds
jg
xchg
pop
popf
mov
dec
sbb
fs
outsb
mov
sbbl
sub
lock
in
notb
loop
push
push
std
inc
mov
pop
in
xlat
arpl
jo
call
adc
mov
outsl
ret
jge
inc
push
push
xchg
jbe
je
enter
in
dec
dec
add
stc
cmc
adc
jg
int3
enter
or
cmp
data16
fdivs
sub
psubq
pushf
ret
jge
in
daa
sti
lods
xchg
fisubl
pop
xor
cmp
and
stos
xor
sub
dec
or
jne
or
fwait
pop
mov
jp
push
xor
je
loope
enter
punpckhwd
movsb
inc
mov
jmp
cwtl
xchg
pop
sub
pop
aaa
lods
mov
dec
inc
jmp
fcomps
adc
movsl
mov
into
xor
push
rcr
mov
les
in
test
mov
dec
mov
inc
mov
std
xchg
xchg
rcrb
and
push
cli
stos
mov
push
daa
xor
lock
ja
push
and
out
xor
mov
faddl
mov
leave
xlat
je
sub
and
adc
mov
ss
shl
int3
test
push
sahf
stos
sbb
cli
or
and
adc
mov
in
adc
mov
xlat
mov
ret
pop
enter
push
outsb
outsb
test
cmp
jbe
mov
push
adc
rcrb
sub
es
out
es
mov
adcb
cmp
jns
sti
pop
sbb
dec
inc
leave
mov
push
pop
das
mov
fists
pusha
xchg
add
and
adc
js
jg
mov
mov
js
cmpsl
cmp
and
cwtl
xlat
shll
test
out
add
push
lret
in
xor
bound
insb
sarb
addr16
and
out
push
jns
dec
filds
jnp
push
andb
daa
or
mov
and
repnz
ret
call
xor
push
fsubrl
js
push
or
addr16
out
movsb
sti
push
lods
test
dec
push
cwtl
mov
mov
loopne
push
aaa
sbb
push
sub
cwtl
cmp
mov
mov
jns
pushf
mov
sbb
jns
hlt
xor
pop
fidivl
dec
pop
and
xchg
push
into
sbb
sbb
pusha
das
enter
ret
fistps
cltd
xor
cwtl
jge
sbb
out
dec
in
repz
dec
lods
sub
mov
in
test
jb
adc
cmpsl
pop
jnp
push
out
mov
jns
inc
daa
add
cmp
jbe
aad
adc
rcrb
bound
sbb
cmp
lea
iret
push
mov
push
out
and
add
push
cmp
das
mov
and
mov
inc
sbb
mov
jg
xchg
xchg
shl
jecxz
js
cltd
mov
adc
jle
sahf
cwtl
stos
xchg
pop
or
jle
subb
cs
inc
mov
std
pop
and
enter
xchg
fs
arpl
sub
add
pop
dec
loop
pop
dec
fisttps
and
pop
and
nop
repz
sbb
adc
cmp
fimuls
push
out
negl
inc
out
jbe
sbb
inc
pop
jmp
popa
jnp
sbbb
push
fs
int
stc
adc
mov
pop
out
data16
inc
dec
add
xlat
jb
aam
and
sti
les
or
cmp
mov
jmp
push
bound
loopne
std
rclb
inc
push
mov
adc
jns
xchg
mov
xor
mov
fidivl
rcl
movl
dec
stos
mov
js
andb
mov
inc
fs
cmpb
lea
xor
pusha
stc
or
mov
outsb
pop
inc
shll
mov
mov
clc
out
js
and
subl
sbb
push
shrl
fsincos
daa
ret
and
fiadds
ret
enter
dec
inc
cs
mov
sub
repnz
lds
push
xor
jno
mov
lahf
int
xchg
sti
jl
xchg
imul
add
mov
pusha
mov
xor
xlat
sub
mov
or
daa
xor
lock
push
mov
ret
out
insl
dec
iret
sahf
testl
add
pop
icebp
dec
int3
xor
push
jae
mov
into
cwtl
pop
and
out
xchg
imul
aaa
dec
popf
jmp
ror
mov
jg
push
in
idivl
pop
jmp
sub
lret
pop
pop
ljmp
mov
test
popf
sbb
sub
scas
ret
adc
push
push
in
test
push
push
movsl
jae
pusha
cs
sarb
stc
sub
pop
cmpsb
add
cmpsl
and
dec
inc
or
test
into
inc
xchg
dec
mov
and
test
push
clc
mov
gs
lahf
insl
leave
lds
pop
xchg
into
jmp
push
ljmp
jno
loop
and
loope
inc
xchg
adc
fs
movsl
mov
sti
sub
stc
movsl
dec
xchg
test
imul
mov
jbe
imul
adc
cmp
inc
mov
subl
push
and
sub
insl
pop
adc
lds
cmp
sbb
pop
idivb
add
inc
mov
lea
xchg
std
test
lea
push
test
add
mov
movsl
xchg
adc
negb
mov
mov
mov
rcll
push
arpl
or
ret
cwtl
dec
and
icebp
imul
dec
fdivrp
xchg
adc
mov
cmp
imul
xor
bound
inc
jnp
sti
stos
hlt
dec
pushf
xor
in
push
fsubrl
lea
and
insl
fsubl
scas
lock
lock
ljmp
js
movsl
and
mov
loopne
sub
xchg
stos
stos
aad
dec
or
pop
mov
pop
xchg
aaa
fisttps
test
sti
sbb
mov
sbb
pop
jle
push
ja
sub
xchg
pop
stc
xchg
sbb
dec
fwait
cmp
fsub
dec
push
in
inc
lea
fwait
inc
push
sub
xchg
repnz
cld
int3
test
ret
cmp
or
in
push
or
dec
cmpl
rclb
or
mov
negb
lahf
or
pop
mov
stc
nop
adcb
jne
lcall
iret
mov
jbe
in
push
jo
in
int
inc
in
jo
cmc
sub
imulb
in
scas
jmp
psrlq
sbb
jo
xor
xor
jmp
aad
push
inc
xchg
mov
imul
add
mov
mulb
and
or
xor
xor
rcrb
test
mov
js
repnz
dec
icebp
mov
dec
in
sahf
jp
andl
adc
loopne
adc
jae
ss
test
icebp
xchg
std
stos
mov
lcall
fdivs
sbb
xor
daa
popw
data16
fldl
test
arpl
aam
sub
xchg
add
dec
mov
mov
pop
es
movsl
jne
mov
mov
push
or
dec
mov
xchg
jmp
ljmp
mov
adc
mov
popa
inc
ficomps
adc
out
dec
rcll
cmp
push
shl
xchg
imul
int3
xor
fwait
test
pusha
outsb
dec
sbb
js
lods
lds
aam
jnp
pusha
sbb
rclb
inc
pop
mov
stos
out
add
outsl
ss
icebp
ss
outsl
sbb
test
or
bound
hlt
icebp
mov
add
xor
fldl
repnz
aas
pop
inc
gs
xlat
sub
ret
idivl
ret
mov
in
or
test
ja
fprem1
dec
mov
cmp
xor
push
sti
inc
rolb
shrl
inc
add
cmpsl
inc
pop
fcmove
hlt
mov
ljmp
scas
out
outsb
add
push
mov
gs
or
ja
sub
test
ret
push
push
dec
inc
sbb
cmp
outsb
sub
jb
ljmp
fwait
out
repz
aam
jmp
sub
push
inc
rolb
adc
sbb
lret
push
xor
ljmp
mov
mov
pop
xor
cmp
pop
movsl
add
pushf
adc
mov
pusha
ficomps
mov
ds
stc
and
dec
aad
cmc
xor
xor
sbb
bound
std
and
and
cmpsb
fmuls
pop
jp
scas
cs
fildl
std
xor
add
outsl
xchg
scas
cwtl
mov
push
mov
add
imul
pop
push
jno
lahf
repz
repz
gs
pusha
xchg
cmc
fnsave
rcr
dec
dec
mov
pushf
mov
out
imul
xor
mov
lods
cltd
cmp
lods
xor
adc
push
adc
push
cld
cmp
fimuls
and
add
mov
icebp
dec
repz
fmuls
and
mov
and
jnp
cmp
mov
lods
sbb
push
daa
add
pushf
sti
dec
cmp
stc
popf
clc
rorb
negb
mov
pop
xchg
std
add
cmc
jns
insl
sahf
fnstsw
in
rcr
mov
les
cltd
jbe
pop
xlat
ret
leave
pop
in
nop
ret
shr
icebp
add
test
data16
and
dec
popf
scas
sbbb
nop
adc
in
idivl
scas
loope
in
xchg
cmp
shrb
mov
arpl
sbb
ja
and
insb
push
daa
outsl
fldcw
pop
stos
inc
jg
js
lods
scas
xchg
push
mov
hlt
mov
mov
in
sete
popf
in
pusha
lcall
or
loopne
jae
sbb
mov
bound
popf
in
rcl
aas
stos
mov
movsl
popa
and
mov
in
outsl
icebp
mov
adc
iret
cmpsb
sbb
aas
pop
add
pop
adc
cmpsl
jmp
jp
sub
cmp
fxch
xor
jp
push
mov
cmp
push
insb
mov
cmpsl
pop
and
jle
dec
jnp
jmp
xchg
mov
andl
mov
repnz
fmull
pop
fwait
out
sub
mov
mov
ret
mov
test
hlt
lret
lahf
int
fwait
jg
inc
push
sub
jae
ret
pop
imul
jno
fisubrs
cmp
call
aaa
rcrb
loope
into
loop
pop
jns
mov
out
arpl
and
cmp
iret
xor
xchg
pop
xchg
pop
inc
push
push
inc
lahf
imul
lahf
sbb
xchg
cmp
sub
mov
sbb
cmp
mov
jnp
push
test
hlt
loop
mov
sahf
jge
sbb
mov
jge
sub
in
cld
sbb
dec
cmc
imul
ja
dec
addr16
push
jmp
sub
and
add
push
or
bound
mov
xor
shl
or
repz
aaa
and
xchg
xor
xor
dec
test
cmpsb
mov
sub
shll
stos
stc
dec
xor
push
jmp
xorl
fcmove
dec
cmp
sbb
pop
push
mov
jmpw
and
inc
push
mov
stos
inc
sarl
leave
push
and
clc
inc
decb
mov
rcll
test
lea
cltd
xchg
adc
mov
adc
test
addr16
xlat
cwtl
fisubrl
stc
mov
sbb
cli
nop
push
mov
sbbb
jbe
jle
and
aad
ds
mov
out
cmpsl
mov
ja
add
lcall
jne
push
test
xor
out
aad
out
cmpsl
test
mov
mov
movsl
out
sub
dec
repnz
jns
sbb
filds
and
add
lret
dec
jae
cld
push
rorb
sarl
insl
shlb
mov
mov
mov
pop
stos
push
xchg
xchg
mov
jb
xorb
js
or
push
fdivl
or
mov
jnp
and
push
or
imul
test
and
icebp
or
sub
sub
xchg
loope
or
jns
mov
cmp
mov
orb
scas
shr
adc
sahf
dec
fsubrs
cmp
negb
test
mov
push
sbb
roll
pop
xchg
jno
cmpsb
adcl
mov
popf
mov
mov
xlat
or
imul
daa
jae
or
stos
lahf
stc
shll
xchg
mov
rcrl
out
mov
push
mov
fstpt
dec
sub
xchg
adcl
dec
aad
mov
imul
xchg
lock
pop
jle
xchg
jg
cmp
sbb
inc
dec
cmp
inc
in
cltd
cmpsl
jle
jbe
test
cvtps2pd
int3
or
xchg
add
insl
or
xor
out
xchg
lret
inc
mov
cmp
jecxz
mov
pop
push
std
js
push
sub
or
cmp
pop
movsb
sbb
js
dec
scas
ret
add
or
call
rcll
and
out
pop
clc
bound
mov
js
inc
fiadds
mov
cmp
lock
xlat
push
mov
xchg
xchg
call
inc
cmpl
jnp
jns
scas
fsub
inc
xchg
dec
lods
pop
sub
ja
movsb
mov
and
or
cmp
enter
int3
leave
es
mov
leave
int
cmp
sbb
shrl
scas
inc
jo
test
push
adc
dec
and
addr16
lods
cmp
xchg
das
jo
mov
jns
testl
push
or
xor
push
inc
faddl
push
fs
adc
test
out
sub
hlt
mov
adc
es
mov
jge
scas
inc
ds
enter
int3
lret
aam
jo
mov
imul
xor
jmp
xchg
popa
jmp
and
mov
add
pushf
icebp
adc
lret
fldt
jp
sbb
pop
cmpsl
jbe
pop
pop
insl
xchg
mov
ret
mulb
in
xchg
pop
lock
push
fs
and
push
mov
jp
loope
cli
sbb
xor
pushf
gs
je
mov
mov
push
pop
or
mov
push
rcl
ret
leave
cmp
out
call
mulb
shll
sub
repz
and
jne
inc
gs
push
jbe
sub
or
sub
mov
mov
xor
dec
cltd
inc
pop
cwtl
fsubrs
xchg
clc
adc
mov
jb
and
outsb
jno
nop
out
mov
sbb
cmp
sbb
pop
cmp
pop
das
push
jno
adc
icebp
enter
das
mov
out
stc
or
lock
mov
mov
cmp
gs
test
xor
sub
add
pusha
subb
test
daa
lds
jge
sbb
pop
mov
jle
cmp
test
cmpsb
ds
xor
outsl
mov
mov
mov
inc
push
call
adc
outsb
std
xchg
loopne
pop
scas
xor
in
stc
shrb
xchg
movsl
lahf
cli
sbb
xor
out
add
in
testl
add
test
fnstsw
mov
cmpb
jl
push
mov
stos
sub
cmpsl
out
xor
clc
or
cwtl
jmp
sti
repz
ret
xor
pop
fidivs
xchg
push
in
sbb
jnp
add
cmc
pop
cmp
mov
arpl
dec
mov
and
ror
fdivs
and
sub
daa
adc
push
aas
insb
mov
sbb
sub
dec
out
test
cmp
jmp
or
rorl
rolb
jnp
push
mov
outsl
mov
inc
scas
jp
mov
or
stos
loope,pt
bound
xor
dec
adc
out
dec
in
inc
cmc
aas
sbb
or
mov
shr
sbb
out
aam
cs
sub
in
inc
lock
sbb
sbb
aad
jle
dec
sub
das
mov
sti
out
mov
test
mov
lret
lahf
mov
test
cmp
jns
dec
lcall
imul
sysexit
xchg
jmp
cmpsl
pushf
sti
rcrb
repz
iret
or
mov
xor
dec
pop
push
test
pop
cs
icebp
test
stc
stc
jnp
inc
aam
pushf
push
sub
xchg
mov
pop
stc
ror
aad
flds
es
hlt
lret
data16
jmp
loopne
test
cmc
cwtl
xor
xorb
rorb
dec
mov
pusha
dec
imul
cmp
out
mov
insb
ds
sahf
lods
pop
aam
sub
jl
lret
outsb
sub
pop
rcpps
add
xchg
xor
adc
aaa
nop
xor
test
xchg
inc
test
mov
mov
mov
push
scas
insb
decb
jg
inc
in
sub
ret
dec
mov
jns
sbb
outsl
dec
inc
test
das
out
testb
cmpb
sub
mov
push
addr16
xchg
test
inc
or
lea
pusha
out
les
push
inc
imulb
jge
xor
in
insl
jge
push
lock
pop
xchg
or
mov
jecxz
inc
pushf
pushf
test
scas
cmp
push
pop
mov
fisttpl
pop
xchg
mov
cmp
or
adc
cmp
imul
inc
xchg
loop
push
jmp
ror
out
pop
shll
loopne
or
mov
add
jg
or
xor
decl
inc
xchg
xor
pushf
filds
sti
adc
xor
mov
nop
test
je
ficoms
je
pop
pop
pop
lds
add
popf
inc
cmp
hlt
and
cmpb
pop
out
aaa
shld
outsl
test
jge
xor
js
cmp
mov
sbb
out
sub
or
jne
ds
inc
bound
cltd
cmp
jbe
add
xchg
xor
jl
dec
fsubrl
ror
jbe
mov
dec
pop
movsl
jns
ret
lock
cmpsb
xor
cmp
lds
sub
ja
cmpsb
aad
fdivrp
xchg
sub
pop
addr16
nop
mov
std
and
jle
xlat
inc
adc
mov
cmp
into
in
sti
fnstenv
cli
inc
cmp
mov
outsb
adc
dec
jg
testl
lea
out
inc
inc
push
dec
mov
out
mov
and
psubb
dec
sbb
xchg
popa
iret
xchg
mov
in
jge
or
pop
cmp
add
test
inc
popa
jle
hlt
mov
cwtl
mov
ds
pusha
leave
insl
loop
mov
pop
test
mov
inc
test
mov
jg
adc
ret
jns
test
sbb
pop
test
dec
mov
pop
and
xlat
test
pop
mov
fists
xor
test
pop
mov
cmp
adc
pop
test
adcb
jle
int3
sub
sbb
adc
repnz
jg
mull
and
inc
data16
mov
cmp
add
mov
mov
pop
lods
jmp
xchg
cmpsl
jmp
mov
das
cmp
insb
fstpt
adc
inc
fdivp
or
mov
and
mov
dec
xor
clc
rol
cmp
cmp
sbb
sbb
repz
bound
sub
movsb
or
negl
mov
mov
fildll
jle
aaa
add
xor
ljmp
push
iret
test
jge
inc
lret
inc
sbb
in
inc
repnz
aas
push
add
iret
sarb
cld
andl
out
cltd
lock
lods
xchg
pop
mov
push
pop
add
push
int3
out
xor
test
fidivrl
lea
in
push
imul
add
pop
ja
push
xlat
test
lcall
cld
inc
cs
cld
and
xchg
mov
fnstsw
adc
int
inc
or
dec
out
imul
lds
cld
insl
jge
std
rcl
sbb
lock
pop
jl
mov
cmp
cwtl
mov
jg
clc
or
sub
add
sub
adc
popa
or
dec
and
ja
pusha
sbb
pop
xchg
repz
imulb
addr16
pop
lret
daa
xor
sub
xchg
dec
test
pushf
mov
cmp
cmc
mov
jo
rcl
push
or
int3
stos
mov
pop
mov
scas
call
inc
lcall
inc
mov
dec
dec
into
cmp
jno
movsb
jecxz
cmp
cmp
xor
pop
mov
xlat
xchg
repnz
dec
test
cld
mov
mov
push
es
push
pusha
and
xlat
test
push
mov
jle
push
popa
ret
outsb
mov
and
cmpsl
test
push
xor
and
arpl
imul
dec
outsl
pop
aas
dec
inc
mov
add
cmp
in
dec
dec
push
mov
insb
dec
add
aaa
dec
stc
or
push
cmp
adc
push
in
mov
stos
xchg
lds
xor
js
inc
ss
dec
clc
pusha
mov
sub
ljmp
push
sahf
cs
push
xchg
les
or
ret
jae
and
push
lcall
cwtl
lods
imul
fbstp
mov
rol
sbb
divl
pop
ss
push
jbe
push
bound
mov
loope
sahf
push
loope
mov
negb
push
cs
add
sbb
cwtl
push
and
ds
out
push
aam
jnp
add
lock
std
into
ja
xchg
test
pop
rorl
ror
add
pop
mov
xchg
inc
jle
lret
sub
ja
adc
mov
scas
psadbw
sahf
cs
xchg
sub
cmp
mov
pop
icebp
jno
sbb
or
iret
and
outsl
sahf
iret
pusha
xchg
xchg
rcll
jg
repnz
sti
aam
pushf
cli
lea
out
inc
into
and
inc
push
fidivrs
push
js
dec
mov
mov
mov
lahf
sbb
xchg
lcall
fldenv
jge
mov
lods
shl
and
je
or
cld
pop
je
and
mov
test
cmp
push
enter
sub
les
push
sbb
adc
dec
pop
add
xchg
xor
stc
nop
mov
jmp
addl
push
popa
push
sbb
jbe
in
jnp
dec
dec
fnstenv
int3
add
lret
pop
and
lret
aas
mov
jecxz
aad
inc
pop
scas
test
xchg
in
adc
jg
cli
lods
shlb
jl
aaa
ja
ja
into
push
insl
add
pop
hlt
cmpsb
rcrl
outsl
sub
push
xchg
dec
ljmp
call
loopne
add
pop
ja
and
mov
fcmovnb
mov
fldenv
xchg
test
xor
iret
xchg
sub
push
int
xchg
movsl
xlat
push
dec
movsb
cmp
hlt
xchg
mov
adc
into
cmp
decb
inc
insl
adc
scas
xchg
jp
leave
scas
dec
push
fadds
and
into
out
stc
popa
pop
mov
cmp
inc
push
jae
cmp
mov
mov
sbb
shrl
jae
in
dec
outsb
icebp
and
or
adc
add
in
pop
cmp
jge
insb
lcall
mov
inc
adc
cs
push
lods
sub
and
repz
andb
lret
sti
jae
test
pop
push
fst
addl
jne
pop
fucomip
jns
adc
mov
inc
bound
inc
jae
orl
fbld
pusha
testl
out
out
xchg
sub
roll
stc
test
jae
pop
lret
lds
cmp
rcl
scas
inc
mov
lea
or
mov
cmpsb
dec
cmpsb
aaa
ficoml
in
call
popa
mov
jecxz
adc
cld
js
std
out
cwtl
xor
leave
mov
fs
push
mov
mov
stos
lds
cmpsb
sahf
add
mov
push
xor
loopne
mov
inc
test
lret
sti
mov
cmpsl
orl
aas
sbb
andb
mov
mov
push
or
orb
pop
xor
xchg
pushf
sub
inc
clc
enter
or
in
stos
es
inc
stos
mov
push
jns
clc
add
jl
sbb
out
push
lret
lods
inc
test
push
add
dec
rcl
push
and
jbe
int3
cmp
xor
pop
stos
outsl
das
in
pop
in
cmp
jge
outsl
xor
mov
add
mov
jo
mov
pop
cmp
mov
xor
cvtps2pd
lods
ljmp
xchg
push
repz
jecxz
jne
por
mov
add
sbb
xor
sbb
popa
inc
fidivrs
cwtl
das
inc
pop
cmp
into
add
jl
out
test
repnz
sti
dec
clc
test
mov
xor
push
fldcw
test
push
call
push
mov
subb
lods
pop
mov
mov
repz
loopne
leave
shrb
fisubrl
xchg
jo
mov
jmp
repnz
hlt
mov
mov
test
pusha
mov
shl
mov
adc
mov
push
adc
dec
sbb
popa
xor
xchg
mov
mov
dec
and
push
aaa
pop
or
cmp
jmp
sub
sbb
ds
xor
xchg
sar
sti
arpl
mov
enter
inc
cli
pop
pop
imul
mov
mov
fimuls
lcall
or
shrl
sbb
lods
subb
outsb
scas
mov
sbb
subb
jle
push
imul
cmp
subl
sbbl
mov
inc
scas
fsubr
jp
adc
fisttpll
cld
inc
inc
and
mov
dec
and
push
rorb
call
or
mov
push
loopne
stos
pop
mov
in
push
nop
dec
pop
jmp
cmp
pusha
out
pop
ret
and
pop
in
jnp
out
outsl
pop
imul
mov
leave
mov
shrb
and
insb
cmpb
in
fistl
mov
or
adc
addl
cmp
cmp
incb
sti
test
dec
mov
fstpt
dec
shlb
int
ds
sbb
orl
iret
push
fldenv
outsl
into
test
mov
pushf
and
jne
std
jmp
outsl
hlt
sub
push
mov
rcrb
jae
leave
and
mov
pop
lcall
movsb
sbbb
mov
jbe
imul
mov
mov
and
mov
out
sbb
inc
lds
hlt
mov
push
xchg
cmp
push
test
lret
sub
adc
mov
push
and
js
aaa
mov
cmp
out
mov
mov
imul
xchg
inc
or
xchg
notb
jmp
sub
push
pop
dec
inc
into
mov
or
jl
jge
cmpsb
stos
pop
mov
jp
dec
lods
int3
push
sub
lds
push
mov
movsl
adc
loope
sub
pop
or
popf
adc
ret
jmp
fidivs
xor
cmpsb
lret
sub
add
xchg
jmp
inc
push
xor
adcw
xchg
sbb
push
mov
dec
jae
xchg
movsl
sub
sbb
pop
mov
cmp
leave
fsts
jmp
sub
lods
negl
add
sub
fimull
add
imul
movsl
xchg
dec
lods
xor
pop
xacquire
fldl
inc
cmp
jae
insl
pop
enter
or
clc
mov
enter
sbb
cli
jp
movsb
sbb
xchg
push
push
and
jp
mov
xor
cwtl
loop
mov
pop
xorl
xchg
addr16
movsl
cmp
jno
mov
insl
pop
outsb
lahf
in
popa
jg
shlb
ret
pusha
aad
xor
addr16
leave
push
sub
imul
fcmovb
mov
addr16
lahf
les
add
xor
outsb
adc
xlat
repz
mov
jmp
jne
push
mov
push
jmp
in
rorb
dec
movsl
mov
xlat
push
pop
cmp
pusha
std
fadd
test
mov
mov
mov
mov
and
inc
int
push
xchg
sbb
and
pop
mov
mov
imul
xchg
int3
ret
das
les
jae
pop
jb
test
fildl
pop
xchg
or
ljmp
xor
xor
inc
popa
mov
inc
add
mov
push
push
or
es
mov
jbe
dec
divb
push
mov
test
cmp
fstps
mov
fsubp
mov
mull
ljmp
int
xor
cmp
push
std
jo
js
sub
cmpsl
mov
imul
cmp
jp
cmpsl
sbb
inc
outsl
or
cs
mov
lods
mov
mov
mov
jmp
mov
pop
adcb
mov
mov
test
inc
jae
movsl
sti
xchg
xlat
or
mov
rclb
add
jne
and
mov
rorb
cmp
pop
cmp
fidivrl
pop
sub
imul
sub
ds
sahf
pusha
test
mov
sub
mov
cmp
ret
mov
mov
sti
rcll
test
orb
adc
lock
sub
pop
and
adc
stos
inc
das
loop
push
and
cmp
cmp
test
xchg
cli
faddl
cmp
pop
mov
jae
xor
push
lods
pop
adc
dec
or
push
scas
out
adc
outsl
add
imul
add
ds
mov
fbstp
cmp
jl
int3
arpl
test
inc
int3
push
jmp
addr16
jb
jp
jo
fistpl
lret
bound
scas
xchg
scas
add
jo
pop
loopne
lahf
test
fstpl
negb
dec
fwait
test
dec
fidivrl
and
sub
test
int
test
sahf
subb
clc
or
fsubrs
ljmp
pop
mov
add
les
pop
bsr
test
aas
pop
imul
cltd
push
enter
hlt
data16
aad
sti
cs
pop
xor
jmp
cmp
or
fs
lock
jmp
pop
fdivr
xchg
popa
loope
jns
les
mov
adc
movsl
mov
mov
hlt
jnp
sbb
shl
std
sub
sub
xlat
mov
dec
lahf
lods
in
cmp
cmpsb
mov
push
mov
push
decb
fs
inc
xchg
push
dec
dec
cmpsl
cmp
cmp
xchg
je
subl
lds
jg
dec
lahf
push
xchg
xorl
push
xor
sarb
das
test
jno
jp
mov
sub
add
fdivrs
fists
cli
arpl
in
pop
xchg
jae
add
add
lods
pop
pop
push
mov
fwait
in
into
adc
call
test
dec
lret
and
hlt
das
inc
imul
mov
lods
inc
fld
fbstp
cli
lret
bound
jmp
and
adc
pop
jno
lds
arpl
sbb
subl
xor
mov
ret
sub
jle
dec
sbb
sbb
add
mov
addl
jne
xor
cld
jge
mov
push
maxps
shrb
lret
push
mov
aam
aas
push
adc
push
fwait
hlt
xor
add
int3
mov
imul
sahf
mov
add
rcrb
inc
mov
jae
addr16
jecxz
cli
shl
push
gs
std
cmp
mov
xchg
pop
movsl
cwtl
mov
jp
jmp
inc
push
mov
xchg
stos
jae
fnstsw
dec
pop
hlt
ret
pop
leave
popf
lods
addr16
add
loop
pop
std
cwtl
dec
in
cmc
scas
aas
or
jae
sub
push
fcmovnb
sub
inc
xor
sub
outsb
pop
insl
nop
out
jp
repz
mov
hlt
inc
shrb
mov
mov
sbb
fdivrl
cmp
push
icebp
pop
adc
flds
fsubrl
and
inc
xor
mov
scas
mov
xchg
mov
enter
mov
loopne
out
mov
xor
fs
push
pushf
mov
mov
jbe
mov
cmp
aad
push
or
in
sbb
inc
clc
or
imul
xor
push
insl
ret
mov
out
xor
fisubrs
cltd
xor
jle
inc
mov
pop
inc
add
mov
imul
xchg
fs
insb
sbb
in
daa
adc
or
or
cmpsl
cmp
cmpsl
hlt
les
loope
fldcw
add
push
pop
pusha
mov
inc
mov
and
sbb
stos
movsl
mov
scas
call
pop
adc
mul
mov
jle
jmp
ret
adc
cld
xchg
mov
dec
pop
adc
xchg
int3
cli
lea
sbb
push
ss
stos
pop
inc
sub
xchg
mov
ficomps
std
add
ja
out
ret
sbb
fists
loopne
fs
bound
out
int3
mov
mov
lcall
push
insl
xchg
hlt
mov
adc
inc
push
repz
push
minps
repz
jg
lea
pop
jb
inc
pop
xor
jbe
dec
inc
jl
inc
popf
sub
icebp
andnps
and
and
pop
out
or
enter
add
pop
xchg
std
and
jge
in
pop
in
sti
xor
inc
je
or
mov
push
add
fidivs
push
dec
popf
jl
loop
mov
pop
ss
mov
mov
aam
lds
jns
push
into
sub
out
jns
push
je
fwait
xchg
sub
scas
lods
mov
pop
mov
shr
jge
movsb
test
sub
sub
shrb
push
pop
xor
xchg
or
insb
aas
dec
outsb
shrl
fcmovne
mov
dec
adc
sbb
pop
push
hlt
sub
sub
lea
mov
sbb
jl
adc
mov
outsb
lret
insb
cmpsb
cmp
mov
je
cltd
in
int3
out
test
inc
cmp
lret
pop
dec
fcomps
stc
repnz
sub
sub
bound
jecxz
and
add
int3
outsb
add
orb
pushf
into
xchg
pop
jns
cmpsl
and
sub
jns
sub
adc
inc
push
jg
dec
arpl
mov
jle
in
movsb
mov
push
xchg
cmp
mov
pushf
shll
push
idivb
icebp
xchg
or
and
sti
push
shll
enter
jecxz
leave
push
fwait
jae
push
adc
cmp
pushf
xchg
dec
loopne
adc
cmp
dec
stos
lret
or
lret
iret
mov
jbe
mov
adc
adc
push
push
shll
dec
pop
idivl
nop
lcall
popa
xbegin
mov
mov
addr16
mov
and
jecxz
mov
xor
lcall
lea
in
push
lock
sub
cmp
daa
mov
jns
xor
aaa
fwait
xor
fldenv
pop
faddl
sahf
lret
rclb
arpl
push
dec
mov
inc
pop
jbe
loopne
dec
xchg
cltd
inc
pop
sahf
hlt
jnp
loope
and
mov
repz
cmpsl
sub
add
and
insl
mov
sbb
std
jnp
push
inc
or
inc
fcompl
adc
ljmp
fmuls
mov
adc
fstp
orb
out
mov
sbb
xchg
gs
xlat
repz
add
add
insb
sub
pop
dec
nop
jl
pmulhw
roll
sub
js
frstor
imulb
jnp
sbb
cmp
repz
rolb
pop
call
icebp
sub
call
jbe
pop
sub
mov
pusha
jo
xchg
ss
arpl
jmp
aam
mov
xchg
loop
les
cli
sbb
cs
mov
ljmp
sti
bswap
jbe
and
out
jle
mov
arpl
in
fcoms
dec
ljmp
lcall
lods
jge
mov
or
add
pusha
arpl
sub
in
xor
scas
xchg
shl
inc
ret
lea
cld
sbb
add
aam
les
jle
pop
xchg
cmpsl
push
sub
dec
enter
repnz
and
ss
fsubrs
call
testb
js
push
stos
shl
js
mov
xor
movsl
sti
out
push
movsb
cmp
cmpsl
or
and
mov
xchg
lcall
clc
xchg
cltd
add
shlb
adc
aas
les
arpl
in
push
and
das
fistl
pop
and
std
mov
or
and
movsb
adc
sti
in
adc
jp
and
sbb
sti
insl
gs
fstpt
push
push
sbb
rorb
nop
dec
ds
pop
scas
inc
mov
sbb
add
adc
imul
xchg
xor
and
xchg
push
adcb
ss
xor
push
jnp
mov
ret
lds
dec
dec
movsb
iret
data16
inc
xchg
push
imul
test
fsts
pop
ljmp
sbb
fldcw
dec
mov
shl
push
insl
int
jl
mov
aad
cmp
cs
adc
xchg
das
mov
xlat
pop
cltd
pop
dec
out
mov
sahf
xchg
test
pop
ss
jecxz
loopne
out
int
xchg
sbb
aaa
les
push
lahf
mov
inc
xchg
test
stos
push
jb
sbb
clc
pop
inc
fadds
inc
int
and
pop
lock
mov
and
stos
stc
sub
jmp
mov
or
jae
ss
xchg
xchg
adc
jae
inc
fwait
sub
and
cmpsb
or
orl
jle
es
bound
inc
lcall
out
insb
add
mov
leave
dec
mov
xchg
push
cmp
dec
iret
and
out
movsl
fstpl
dec
pop
test
cs
int3
add
int3
arpl
inc
ljmp
test
and
sbb
dec
dec
imulb
ret
dec
mov
icebp
or
fwait
cmp
mov
stos
daa
mov
enter
rorb
movsl
and
dec
mov
xchg
stos
xchg
inc
push
sbb
jecxz
mov
jle
xorl
andb
sbb
cmc
in
jno
in
adcl
subl
lock
mov
arpl
cltd
outsl
xor
adc
or
nop
or
push
add
inc
loop
sbb
lret
cmp
fimull
mov
fcomps
xchg
scas
stc
mov
mov
outsl
jg
push
cwtl
or
ret
aam
mov
ja
lods
jmp
or
sbb
sub
out
pusha
mul
xor
push
into
push
adcb
leave
fmuls
out
cmp
xor
loope
mov
outsb
push
and
adc
jle
push
mov
cltd
lock
inc
xchg
mov
out
adc
scas
add
push
lret
xchg
xchg
xor
pop
sarl
or
cmp
mov
sbb
jbe
xchg
in
add
sti
xchg
lcall
xchg
movsl
cmpsb
inc
and
cmp
fdivrs
pop
out
js
push
cmp
push
in
adc
mov
mov
pusha
sub
call
adc
xor
or
mov
jmp
xor
push
adc
inc
lds
and
data16
mov
test
xchg
sti
mov
cmpb
or
add
push
xor
mov
dec
testb
cmp
movsb
testl
and
push
jg
sub
cmp
outsl
mov
add
xor
js
mov
out
fwait
imul
sub
lahf
js
std
jl
jae
push
adc
mov
pop
and
mov
fdivrl
clc
dec
and
mov
mov
jle
mov
dec
jno
test
enter
xchg
mov
adc
rorb
cmp
add
jle
mov
add
lods
cmp
dec
mov
cwtl
cmp
mov
add
mov
jmp
icebp
adc
xor
out
addb
add
mov
mov
mov
push
mov
insb
push
fistps
jne
out
mov
adc
test
outsl
push
and
and
or
cmp
jb
jmp
leave
pop
icebp
cli
sbb
sahf
sbb
jns
out
sti
daa
and
mov
inc
inc
sbb
adc
fbstp
repz
rcll
jnp
ljmp
ret
bound
out
mov
pop
pusha
xchg
movsb
sti
mov
daa
cmp
sbbl
mov
lahf
mov
sbb
fisttpll
aad
xchg
and
lahf
lds
mov
ret
int
stc
in
sub
sbb
imul
daa
jno
add
ljmp
imul
fwait
jecxz
repnz
adc
pop
sbb
lahf
or
pop
ss
mov
loope
add
ds
cld
adc
call
cmp
cmc
mov
scas
adc
stc
adc
das
outsb
into
add
divl
lcall
add
outsl
les
sbb
mov
aam
shlb
push
std
xchg
inc
lret
ret
stos
into
add
or
push
xchg
pushf
cli
rolb
popf
add
les
mov
outsl
scas
mov
dec
xor
shll
andl
xchg
mov
adc
sbbb
pop
dec
lahf
insl
mov
ret
andb
xchg
adc
les
jle
into
scas
rolb
add
push
mov
sbb
push
xchg
pop
bnd
fwait
aas
xchg
mov
insl
pop
cmp
std
xchg
xor
arpl
cwtl
stos
in
inc
fcomps
sbb
sbb
xor
cld
push
push
arpl
loope
push
out
out
mov
mov
dec
test
gs
dec
or
sbb
js
push
adc
mov
sbbl
inc
lods
mov
cli
pop
xchg
mov
dec
or
cmp
sub
mov
pop
lods
dec
fsubl
rolb
pop
or
xchg
add
in
pop
xchg
ss
hlt
mov
jl
inc
stos
std
mov
xchg
mov
dec
or
movsb
inc
mov
scas
inc
mov
push
int3
fisttps
jno
fistpl
mov
xor
stos
scas
outsl
xchg
xor
lret
icebp
lods
xor
ficoms
aaa
into
dec
clc
xlat
push
in
in
sbb
lea
add
lea
lret
scas
ljmp
push
popf
pop
das
repnz
js
adc
cmc
js
sub
xor
pop
mov
stos
daa
mov
mov
fiadds
sahf
sub
inc
dec
dec
mov
inc
subl
into
fsubrl
or
cmp
mov
mov
mov
popa
lret
xchg
xor
aam
mov
mov
xor
push
out
jae
xor
aad
mov
sub
push
jb
imul
push
push
jns
mov
outsl
xchg
fidivl
dec
pushf
add
and
in
data16
lret
sbb
xchg
aas
into
enter
cs
jne
mov
jge
stos
mov
daa
es
pop
imul
sbb
mov
lea
push
gs
roll
xchg
test
lahf
or
mov
sti
xchg
jp
push
cltd
mov
push
sbb
adc
xor
pop
xor
push
test
lret
lods
inc
cld
clc
dec
add
cwtl
lret
shl
mov
es
and
inc
push
loop
pop
gs
stos
mov
popf
adc
push
jg
mov
fiaddl
mov
pop
dec
and
xor
ljmp
cmp
cmp
sti
call
or
adc
xor
inc
loop
es
in
or
leave
fdivr
mov
adc
xor
xchg
scas
inc
push
jae
or
and
mov
cli
xchg
dec
push
leave
insl
mov
pop
sbb
lods
inc
pushf
loopne
fcomp
cmp
push
arpl
jns
cld
fldenv
popf
add
dec
addr16
mov
jmp
push
jmp
pop
mov
into
jno
jl
rcll
push
popf
and
pushf
jno
int3
mov
out
hlt
ja
pop
sbb
dec
mov
dec
fstl
in
adc
xorl
xchg
xor
stc
arpl
fldcw
stos
mov
mov
push
nop
mov
pop
mov
das
outsl
call
cmpsb
cmp
aaa
fiadds
dec
mov
icebp
or
out
inc
pop
pop
addr16
stc
xchg
in
jge
pop
lds
xor
scas
mov
mov
iret
adc
sti
push
pop
test
fidivl
aas
mov
out
clc
call
pusha
cwtl
xchg
ss
lret
push
dec
in
and
pusha
xchg
jne
dec
pop
ljmp
daa
pop
scas
xchg
or
mov
mov
push
mov
pop
cmp
mov
sub
mov
adc
inc
adc
sbb
rcrl
ss
arpl
or
cmp
in
adc
jmp
aas
jo
jo
test
sbbb
xor
mov
or
cmpsb
scas
inc
sbb
pop
dec
ret
aaa
xor
enter
test
mov
adc
sbb
imul
lret
ret
mov
fnsave
mov
push
sbb
inc
std
adc
daa
cmp
dec
loop
ret
pop
xchg
jnp
and
mov
cli
mov
test
ds
dec
jo
mov
fstpl
scas
sahf
jle
shrl
add
push
push
jno
shrl
ficomps
ret
js
adc
pop
out
outsb
and
mov
dec
mov
jnp
cmp
dec
push
insb
pop
jne
cmp
pop
outsl
faddl
jae
popf
xor
and
lods
cmpsl
mov
scas
ss
or
cmp
sti
lds
pop
lcall
jge
xor
add
clc
xor
xchg
ljmp
xchg
jns
test
adc
fsubr
dec
pop
pop
inc
xorb
imul
shr
sbb
outsl
sbb
lea
jp
loopne
mov
shr
std
std
fists
movsb
mov
lahf
data16
fwait
rcrb
jmp
push
in
out
sbb
xor
mov
cmp
rclb
push
mov
xchg
jne
lahf
ss
in
xchg
inc
inc
or
mov
push
adc
fisttpll
or
dec
aad
fsubrs
leave
outsl
inc
jp
mov
xlat
push
mov
lock
sub
iret
xchg
mov
aam
sub
cmpb
jns
mov
add
imul
or
mov
in
pop
je
xchg
mov
ss
mov
ds
imul
xor
dec
and
shr
jne
cmp
jbe
stos
shlb
and
sub
imul
fs
ljmp
pushf
ds
lcall
aad
fimuls
es
hlt
push
loopne
test
ja
mov
lds
jle
iret
jb
mov
lahf
lods
rcrb
jb
xor
xlat
nop
paddb
into
gs
jne
push
in
xchg
decl
cmp
xchg
xor
sub
adc
mov
and
sub
pop
cmp
pop
hlt
aad
sub
rcl
jnp
rclb
xchg
pop
jmp
mov
ret
jne
or
shrl
stos
insb
mov
or
mov
xchg
pushf
iret
data16
sbb
je
push
sbbb
jbe
shll
movsb
repz
dec
pop
fildl
stos
inc
fcomps
jo
andl
inc
pop
cmp
ja
int3
push
mov
aaa
push
cs
bound
cmp
sub
ljmp
jg
mov
ret
adc
push
push
cmp
push
and
out
ds
push
std
ficoml
push
inc
addr16
loopne
addr16
insl
pusha
lods
hlt
sbbl
movsl
jno
dec
fnstenv
std
and
loope
mov
lods
sbbl
or
push
xorb
in
push
iret
gs
mov
outsb
rolb
push
and
dec
lcall
pop
in
add
int
pop
icebp
ljmp
mov
cli
push
jl
or
lret
out
lret
or
mov
rorl
test
ss
dec
pop
jle
inc
cmpsl
daa
pop
movsb
mov
xor
jns
xchg
push
ljmp
es
lea
call
and
in
sbb
jle
mov
testb
ds
push
xchg
dec
sub
mov
and
fadds
imul
xchg
lret
push
sbb
xor
adc
int3
sub
mov
les
rorb
ficoml
cmpsl
or
pop
into
pop
mov
rcrb
inc
fidivl
incb
cmp
jmp
nop
in
jo
les
mov
jbe
mov
mov
cmp
test
filds
dec
add
and
fldcw
inc
xchg
jae
add
loopne
loop
orl
push
ja
mov
push
test
push
lds
add
inc
sbb
jns
sub
int3
cmc
xor
mull
pop
push
test
xchg
scas
cs
mov
sti
mov
hlt
push
lcall
jmp
or
aaa
pop
sub
jmp
aam
stos
mov
je
lods
push
mov
ficoms
shlb
test
inc
mov
mov
mov
sbb
jbe
adcb
int
mov
insl
add
add
push
inc
mov
xor
clc
jae
xor
xchg
jg
loope
mov
xorb
shlb
sbb
and
push
or
inc
out
movsb
pusha
ds
mov
and
cmpsb
mov
loopne
ljmp
mov
call
fcmovnb
pop
or
mov
add
xchg
mov
ljmp
jmp
jmp
adc
inc
rcrl
inc
fidivl
xor
out
test
mov
rcr
pusha
sti
imul
jl
mov
in
popf
fistl
stc
xlat
outsb
and
cmc
pushf
sbb
cmpsb
sbb
int
mov
adc
jge
clc
ficoml
popf
xor
je
xor
gs
pop
adc
mov
sub
sub
pushf
sbb
jmp
rorb
jmp
mov
ret
icebp
jl,pt
adc
cs
sbb
fbstp
push
xchg
in
jmp
sub
in
cmp
pop
mov
lret
ss
mov
adc
jmp
rorb
fucom
mov
inc
aam
inc
push
jmp
inc
daa
jno
shll
lods
xchg
repnz
daa
and
insb
push
mov
push
inc
aam
push
push
arpl
mov
adc
aaa
out
sub
dec
dec
repnz
das
cmp
pop
cmpsb
adc
pop
psadbw
scas
sbb
adc
and
cmp
insl
inc
in
lock
add
rcrb
out
adc
xchg
sub
dec
loopne
in
adcl
mov
mov
loopne
bound
dec
pusha
pop
shrb
xchg
push
adc
pop
clc
cs
les
push
pop
pusha
ss
pop
dec
je
push
out
xlat
cltd
std
pop
and
mov
adc
sbb
xor
push
iret
imul
mov
jp
sub
dec
inc
dec
iret
rclb
push
dec
in
call
add
lods
jge
xor
fbld
xchg
pop
jl
les
inc
push
adc
mov
inc
test
add
or
fidivs
cmp
push
jge
lret
and
aad
imul
arpl
xor
pop
push
sti
stos
push
xchg
add
jbe
pop
out
out
sahf
dec
cmpsb
add
push
mov
pop
sub
ds
cli
or
and
cmp
mov
icebp
ret
mov
sbb
xor
shlb
mov
jp
lods
jbe
leave
and
js
mov
inc
pop
cwtl
in
jge
add
je
add
xchg
add
pop
sub
mov
cmpb
mov
test
push
push
pushf
popf
mov
iret
sub
pop
sbb
jae
and
fistps
add
ljmp
add
adc
xorb
popf
adc
out
jge
lock
stos
add
sbb
jne
int
inc
sahf
push
nop
xchg
fnstsw
push
out
push
xor
fisubl
dec
push
mov
lods
xchg
out
test
dec
jmp
mov
inc
test
adc
xor
push
jbe
mov
xchg
mov
cmpl
pop
xchg
cmc
mov
mov
jae
xchg
sbb
dec
inc
add
jb
push
lock
jb
adc
call
dec
xchg
xchg
xor
xlat
lea
mov
jg
adc
push
adc
xchg
adc
test
xlat
and
sub
dec
cmp
fs
dec
loop
lcall
pop
push
xchg
xchg
add
mov
xor
adc
xchg
outsb
cmp
xor
loop
faddl
adc
fldt
imul
ss
add
idivb
loopne
or
push
andl
dec
pop
jecxz
mov
push
push
out
mov
frstor
sbb
dec
xchg
cmpsb
or
mov
cs
jae
jno
sub
lret
pop
sbb
pusha
mov
mov
or
jo
clc
inc
or
test
lock
sbb
jle
sbb
rcl
lcall
stos
sbb
in
inc
mov
and
mov
aaa
mov
adc
je
popa
jbe
shrl
push
cmpsl
xchg
mov
pop
lahf
pop
push
xor
andl
mov
mov
sbb
cmp
mov
in
cs
mov
adcb
cmpsb
push
imul
out
xor
cwtl
popa
dec
lods
ror
pop
ss
pop
scas
inc
mov
mov
xor
div
and
stc
mov
mov
jbe
jne
orl
mov
add
mov
fldpi
ret
insb
push
stc
sub
sbb
std
fwait
lds
out
cmp
xor
pop
in
stos
push
shrl
hlt
idivb
in
push
roll
stc
call
jg
sahf
push
loop
mov
xchg
pop
adc
xor
pop
mov
lods
cld
inc
fdivrl
push
fwait
jbe
jne,pt
and
subb
cmp
dec
or
mov
mov
xchg
jmp
push
adc
repnz
lds
inc
fsubl
rorl
jmp
mov
outsb
push
and
cmp
stos
sarb
lea
in
dec
loop
ja
in
scas
jle
mov
pushf
push
cmp
lods
lret
into
inc
fmuls
outsb
and
pop
movsb
pop
test
and
imul
out
push
mov
loope
jbe
fidivl
cmp
xchg
stc
nop
fcmove
push
cmp
push
mov
add
and
fs
sbb
dec
lret
jno
jmp
pop
cmp
and
dec
push
loopne
adc
test
bound
adc
lds
xor
adc
test
adc
add
nop/reserved
mov
mov
leave
fdivrl
xchg
cwtl
inc
pop
push
imul
movsl
push
pop
arpl
dec
fistpll
or
outsl
jno
insb
mov
pop
test
add
inc
gs
fmuls
filds
sub
ss
jno
cmp
mov
adc
add
dec
pop
std
cmp
mov
jmp
xor
pushf
loop
jb
ss
mov
jmp
adc
inc
lcall
pop
in
sti
test
adc
popf
xor
adc
nop/reserved
fs
test
outsb
repnz
pop
mov
shll
jo
push
push
call
inc
sub
clc
push
push
mov
out
mov
lret
pop
loope
inc
dec
loopne
mov
sbb
jp
inc
inc
les
in
push
cmp
testb
aad
push
jg
das
scas
inc
pop
ret
pop
or
rol
fnstcw
or
dec
fldcw
call
test
cmp
scas
out
adc
sub
adc
push
inc
test
fldenv
or
mov
out
lods
mov
inc
jecxz
xchg
pop
leave
pop
test
dec
push
inc
push
pushf
cli
fimuls
inc
mov
ja
fs
insb
sub
dec
xor
shr
inc
into
das
push
aam
pop
int
inc
jnp
inc
loopne
pushf
shlb
aas
dec
and
cltd
int3
lret
std
mov
pop
lret
push
sbb
movsb
push
mov
jp
frstor
jle
rcrb
jnp
pop
insb
jmp
popa
sub
dec
ljmp
shl
cmpsb
mov
xchg
jge
add
xor
push
jge
adc
addps
lds
or
push
pop
mov
mov
fadd
push
pushf
adc
lock
repz
add
out
vmovhps
jecxz,pt
inc
jne
xor
fmul
in
cld
mov
lret
stc
addl
cmp
in
mov
push
aas
sbb
ret
sub
pop
aad
cmp
mov
fwait
cmp
arpl
mov
lret
jp
jg
sahf
fwait
push
in
int3
scas
fcomip
shr
je
pop
repz
in
pop
fldenv
cmp
jecxz
cmp
aam
leave
insl
inc
jle
and
ret
loope
push
data16
aas
das
cmp
ds
mov
adc
inc
and
mov
mov
fcoml
add
js
cld
int
cmc
pop
sub
dec
jecxz
dec
xchg
orb
test
shlb
cld
fsubr
cmp
jb
mov
ss
jecxz
push
jmp
cmc
popf
cld
shl
jb
xor
pop
or
loope
std
cltd
dec
shrb
push
mov
addb
insl
push
gs
sahf
xchg
das
repnz
lock
and
or
ljmp
dec
cmp
sub
test
adc
cmp
movsb
arpl
inc
jae
mov
mov
shll
push
lret
jmp
shl
js
dec
loopne
mov
jno
xchg
lcall
punpckldq
iret
imul
jge
sub
dec
scas
push
jge
out
jg
cmpsb
mov
test
imul
loop
xchg
push
jae
cmp
sbb
xor
lods
fildll
cld
mov
inc
cwtl
lcall
xchg
in
mov
inc
jecxz
mov
aaa
pop
xchg
mov
lcall
in
mov
cli
push
cli
orl
aas
in
jmp
pushf
imul
pop
push
xor
pushf
mov
lods
pop
push
or
mov
adc
and
mov
cmp
adc
mov
movsl
and
xor
pop
inc
sub
cli
jo
push
push
xchg
xchg
pop
mov
push
xchg
scas
aas
sub
xlat
call
add
notl
mov
int3
fidivs
shlb
mov
jbe
ljmp
decb
lahf
das
or
xor
pop
xchg
movsb
add
es
or
adc
mov
jns
add
cld
jp
add
decb
push
or
push
xor
dec
mov
xor
mov
xchg
and
and
fsubp
inc
out
pop
bnd
rolb
jns
leave
mov
xor
cli
dec
clc
xchg
dec
xchg
mov
cmp
lods
or
jg
iret
xchg
sbb
jl
arpl
inc
fisubs
xchg
pop
cmp
mov
sub
dec
mov
addr16
pop
jo
mov
insl
xchg
add
cltd
fs
mov
movsb
sbb
mov
imul
inc
addl
jecxz
jb
hlt
and
xchg
add
out
sarb
xor
shlb
push
stos
and
les
popa
clc
push
sub
xchg
jg
test
pop
jae
leave
mov
sub
cmc
push
in
mov
icebp
jae
inc
scas
mov
mov
pop
testb
pop
fwait
insb
and
push
lea
aam
jns
add
dec
pop
jge
xchg
in
and
mov
cwtl
lds
push
inc
jmp
adc
movsb
mov
sbb
outsl
mov
push
inc
xchg
lods
jno
adc
ret
outsb
popf
bound
into
jmp
jp
aaa
testb
sub
aam
sub
lods
add
daa
xor
mov
and
aad
jae
sub
dec
jecxz
or
addr16
out
negb
scas
mov
inc
das
ret
orl
push
arpl
sbbl
push
jo
fildll
xchg
cwtl
icebp
int3
mov
lret
or
and
xchg
dec
cmpsb
add
push
cmp
jae
stos
mov
data16
sub
pop
fyl2x
sub
ret
lahf
xchg
in
xor
push
push
push
out
outsb
popa
hlt
and
addr16
xor
or
xchg
jb
popa
adc
lret
mov
aad
sahf
pop
push
xor
mov
mov
test
inc
call
inc
enter
cmp
aam
fdivrl
retw
aas
pop
addr16
mov
mov
mull
jne
fcompl
mov
sub
pusha
mov
in
fisttpl
fxch
push
insl
cli
cmpb
adc
mov
add
aad
cmp
dec
scas
lret
not
rol
into
sub
stos
sub
iret
pop
push
lret
fs
out
or
mov
sbb
pop
jne
sbb
andb
mov
lahf
addr16
mov
add
xchg
mov
and
addr16
test
mov
push
jnp
cmp
sar
and
movsb
or
xor
inc
mov
xchg
in
aam
loop
nop
mov
push
cmp
iret
mov
jge
xor
into
xor
fsts
mov
mov
daa
or
mov
iret
push
inc
jle
aaa
push
fsubrs
fwait
push
popf
in
ljmp
sbb
andb
outsb
xchg
ja
lods
push
mov
dec
dec
pop
bound
pop
pop
pmullw
pop
repnz
notb
setl
push
aam
mov
test
cli
mov
lods
shrb
cmpsb
cmp
int3
xor
adc
push
es
xor
in
push
jmp
mov
rorl
xchg
loop
xchg
icebp
cltd
mov
in
mov
and
jge
xchg
add
xlat
cltd
adc
xchg
stos
jmp
jl
fistpl
adc
in
stos
popf
mov
movsl
sbb
cld
fnstsw
test
sub
mov
ret
cld
mov
pushf
lods
adc
add
mov
lods
mov
add
aad
xchg
add
cmp
inc
push
or
push
push
mov
lcall
fldl
add
lods
cmpsl
or
insl
subb
or
test
pusha
cmp
sbb
testb
or
mov
jg
mov
push
cmp
adc
sub
push
sub
ds
pusha
jo
adc
mov
sub
adc
cwtl
mov
jl
pop
hlt
push
push
in
xchg
mov
fdivrs
stc
jbe
xor
pop
loope
insl
cmp
addr16
test
xchg
add
in
dec
lods
test
pusha
imul
pop
lret
int
inc
lcall
pop
fadd
adc
jns
jbe
cmpsl
sub
pop
cmp
xor
xlat
xor
xchg
jg
pop
cmp
sbb
scas
or
cld
fiaddl
test
inc
sub
mov
lret
shrb
sub
cmp
mov
cmp
outsl
xchg
pop
sub
dec
insb
mov
push
push
xchg
mov
test
cmpsb
inc
and
dec
movsl
les
into
int
outsb
sub
push
fucomi
ljmp
inc
sbb
mov
add
mov
jbe
add
adcl
lea
sbb
push
jo
fsubs
outsb
or
in
or
sbb
mulb
adc
outsl
sbb
or
cmc
bound
out
mov
data16
adc
mov
add
repz
sub
cmpsb
popa
sub
in
sub
push
stos
dec
imul
in
loopne
out
enter
or
mov
cmp
xlat
pop
jo
push
or
mov
shrb
call
jl
mov
push
lahf
xchg
sub
mov
mov
lds
xchg
xor
jns
fstl
adc
xchg
outsl
push
in
enter
cmpsb
cmp
mov
add
lahf
mov
outsb
jae
lcall
clc
mov
sbbl
enter
mov
mov
ljmp
jge
test
dec
in
and
or
or
lcall
cltd
arpl
repnz
lods
mov
aam
fwait
or
inc
pop
aad
lods
shl
fsubrl
mov
mov
sbb
sbb
mov
cli
loope
pop
stos
es
dec
mov
loop
pop
out
dec
jecxz
adc
in
std
push
das
out
push
dec
icebp
pop
icebp
and
xor
add
loope
shrb
sbb
adc
icebp
push
cli
ljmp
sub
lock
mov
cmp
jmp
mov
cld
test
xor
loop
adcl
mov
std
pushl
jno
pop
add
sbb
adc
jae
bound
lods
fdivr
adc
movsl
adc
adc
mov
xor
push
xchg
les
dec
test
mov
mov
movsl
outsl
cmpsb
push
outsl
je
sub
stc
sti
dec
dec
inc
xor
xchg
divl
jp
int
cli
inc
fisubl
into
fld
mov
jne
in
lret
in
andb
or
sub
bound
mov
fs
jbe
inc
mov
aas
adc
and
ss
in
out
loopne
or
test
lret
cmp
popa
gs
lcall
jmp
xchg
adcb
ja
stos
jne
jp
mov
adc
insb
jno
fdivl
jg
jnp
shlb
inc
push
out
loopne
test
js
xchg
in
sbb
cmp
clc
push
rol
rolb
and
push
repz
add
dec
in
mov
push
push
mov
imul
lock
or
repz
sub
mov
push
sbb
imull
mov
mov
cmp
insb
mov
and
add
mov
sbb
cmp
mov
or
cwtl
rcrl
push
aas
test
insl
sub
ja
mov
stos
fdivs
popf
push
imul
repz
push
push
mov
inc
vorps
or
mov
pusha
subb
mov
insl
add
sbb
push
lahf
xor
clc
inc
mov
xlat
mov
inc
stos
and
jle
test
gs
pop
cld
inc
sbb
xor
sub
out
sub
dec
dec
int3
jbe
imul
cs
jge
push
and
fisubl
jl
cs
dec
mov
subl
rcll
pop
inc
jl
mov
push
jns
fsubl
inc
push
push
add
push
xchg
mull
or
adc
mov
pushf
pop
add
jg
shll
pop
fwait
test
inc
loope
cli
in
int
push
jl
test
mov
cmp
fwait
xchg
cltd
sahf
ret
aas
cwtl
lds
fbld
jae
lret
pop
pop
addl
xchg
pop
out
rcrb
xchg
xor
cltd
movsl
xchg
shrl
push
add
test
arpl
push
adc
jne
push
sub
mov
out
cld
out
test
fwait
push
sub
cwtl
stos
inc
addr16
jg
xchg
int
mov
mov
cmpsb
hlt
imul
push
ss
decl
lds
divl
test
mov
xor
jg
test
push
xor
inc
ret
push
pop
mov
sub
sbb
jo
jo
or
int3
mov
mov
pop
jno
dec
movsb
push
inc
dec
xor
shlb
negb
mov
insb
inc
sub
push
lods
or
inc
mov
mov
mov
loop
notl
xchg
jns
mov
fldcw
mov
or
mov
cmpsb
xor
popa
arpl
inc
fdiv
add
popf
arpl
sbb
scas
push
jecxz
sub
cmc
or
cmpsl
pop
loop
clc
add
sub
loope
inc
pushf
mov
pushf
scas
and
imul
not
or
rcr
insl
in
push
ljmp
popa
int
mov
cmp
dec
dec
xchg
cld
loop
adc
xor
pop
fcoml
xchg
adc
cmpsl
inc
loop
mov
xor
push
roll
xor
insl
inc
xlat
pop
xchg
aaa
int
cld
pop
out
insb
sti
push
jmp
mov
adc
mov
mov
cmp
in
jge
jle
push
dec
lds
pop
lcall
enter
in
sub
arpl
imul
mov
lock
jmp
lahf
or
mov
sbb
dec
dec
and
mov
cmp
lock
push
dec
adc
cltd
xor
ret
pusha
testl
adc
push
and
leave
sbb
fs
pushf
mov
pop
iret
test
sahf
scas
iret
popa
out
inc
sbb
jo
mov
std
movsb
xor
mov
xchg
mov
out
insl
fdivrs
scas
in
xor
jl
xlat
or
pop
cmp
mov
pop
fucomip
lret
in
pop
mov
sub
dec
inc
push
testb
dec
cmpsl
faddl
fs
in
imul
arpl
fldt
es
inc
std
test
addr16
leave
adc
mov
dec
adc
xchg
shrb
and
arpl
gs
fwait
fs
stos
in
fiaddl
fimuls
in
lds
mov
popa
ljmp
into
or
mov
pop
movsl
mov
fbld
inc
xor
fs
xchg
mov
les
jle
adcl
xchg
sub
jecxz
lock
xor
inc
cmp
lds
sbb
testl
xor
jmp
loope
addr16
pusha
cmp
out
dec
xchg
daa
inc
mov
out
sub
rcrl
shlb
loope
scas
push
in
cld
mov
jnp
mov
mov
push
or
mov
fcompl
mov
and
lcall
pop
mov
loope
fldl2t
mov
mov
mov
mov
cmpsl
dec
adc
and
dec
insb
shl
popf
fs
inc
outsb
ds
dec
mov
mov
jne
out
inc
je
or
jp
fbstp
mov
mov
and
mov
and
fucomp
clc
pop
ret
add
cmp
dec
dec
cmp
xor
pop
repz
push
out
jb
mov
enter
lret
mov
rcrb
fimuls
jb
andb
outsl
dec
repnz
adc
insl
mov
mov
cmp
mov
dec
loope
mov
or
push
mov
sbb
mov
dec
inc
outsb
add
mov
pop
lds
bound
fadds
test
lods
inc
pop
dec
popf
xor
out
fwait
jg
mov
stc
fs
sub
inc
pop
push
jmp
out
aaa
add
add
ja
mov
mov
push
ret
data16
subl
fidivs
shr
xchg
inc
mov
in
and
sahf
imul
mov
int
jo
adc
iret
cmpl
insl
dec
jb
cmp
into
gs
cmp
mov
inc
lds
mov
imul
dec
mov
mov
xlat
out
dec
out
mov
daa
add
daa
stos
ss
pop
ljmp
inc
pop
dec
mov
imul
add
out
inc
scas
ret
lret
aas
lock
shll
lods
inc
push
mov
xlat
sbb
mov
inc
cmp
sub
xchg
punpckhwd
lahf
lock
in
mov
xchg
mov
add
pushf
xchg
js
in
lods
push
sub
jecxz
pop
scas
xchg
or
ss
and
xchg
fisubl
xchg
mov
lret
cli
daa
int
sbb
fcmovb
icebp
dec
outsl
push
out
adc
mov
xor
je
mov
addb
in
mov
mov
fwait
xchg
lods
jl
fs
mov
jae
sti
cmp
insb
adc
aam
js
cmp
xchg
dec
push
cmc
mov
mov
lds
xor
xor
fisubrs
add
in
mov
jmp
imul
lds
jb
out
inc
out
xchg
mov
jge
xchg
int3
and
jmp
std
enter
or
repz
push
xor
movlps
or
movsb
movswl
lds
mov
pop
push
lret
sbb
jmp
xchg
adc
fdivl
fsubs
or
fs
cmpsb
xchg
test
lahf
stos
cmp
idivl
dec
rolb
pop
scas
pop
testb
jge
aad
cmpsb
popf
push
loop
lods
adc
aas
lods
lret
jle
jmp
fisubs
inc
mov
push
inc
xor
inc
or
and
inc
mov
addl
or
xor
or
imul
in
lock
add
cmc
es
movsl
push
out
outsl
fsts
jne
mov
and
xchg
sbb
jp
iretw
movsl
out
mov
insl
cmp
je
stc
jae
mov
and
push
in
jo
insb
sub
mov
or
popf
xor
mov
mov
xlat
adc
out
inc
icebp
pushf
xor
fbstp
dec
or
dec
jne
mov
pop
les
dec
xor
push
push
movsb
cmp
mov
or
imul
in
inc
mov
jno
mov
cli
leave
mov
mov
test
popa
cmp
push
ds
movsl
sub
inc
mov
scas
insb
popa
jmp
imul
in
stos
mov
les
mov
sub
push
cmpsb
call
inc
popa
or
dec
push
mov
in
int
ror
jecxz
ficoms
lods
inc
inc
mov
mov
insl
cmp
xor
cmc
fidivrs
push
pop
jae
imul
adcl
cmp
pop
push
xchg
xor
div
mov
xor
mov
scas
jno
loopne
dec
jno
and
in
ds
and
xchg
sub
mov
inc
sub
fbld
lods
adc
aas
add
loope
adcb
adc
inc
lret
popf
dec
popf
loop
jno
mov
aaa
into
ret
loopne
adc
subl
fidivrl
pop
mov
arpl
jnp
lds
add
jecxz
mov
fs
jbe
lahf
test
inc
mov
sub
mov
testb
xor
popf
gs
mov
arpl
adc
mov
inc
fldenv
enter
push
in
hlt
popf
xor
pop
insb
out
pop
mov
test
inc
sbb
mov
push
or
cmp
inc
popf
sbb
mov
pop
cltd
out
popl
in
test
gs
sbb
dec
std
mov
ja
adc
lock
pop
pop
pusha
lock
jecxz
les
popa
movsb
cs
jge
xchg
dec
xchg
and
test
test
popf
push
ja
xchg
jmp
mov
pop
lock
push
jg
ja
inc
pop
lock
push
jo
jno
insl
outsl
xchg
cli
xchg
call
aas
sub
xor
cmp
stos
cwtl
daa
movsb
xor
testl
cmp
repnz
mov
repnz
imul
insl
cmp
dec
mov
je
cmc
cmp
push
aaa
clc
ss
cld
fs
mov
jl
adc
into
jecxz
cmp
sbb
cmp
jne
fucompp
int
pop
out
push
out
and
mov
pop
xchg
popf
outsl
jl
or
outsl
adc
jb
mov
sbbl
xor
bound
cmp
sub
xor
dec
int3
jbe
fwait
jecxz
cltd
pop
test
xor
and
push
scas
inc
jae
fsubr
pusha
es
psraw
es
mov
dec
ret
mov
or
cmp
and
adc
dec
push
jp
mov
sbb
pop
scas
cmp
jnp
ljmp
shlb
inc
lret
bound
mov
cmpsb
mov
das
jp
fwait
icebp
aam
mov
mov
sbb
out
push
push
jbe
inc
movsb
dec
add
stos
mov
push
inc
jo
stc
rcll
push
cmp
pop
aaa
pop
incb
fcoms
ds
sub
jmp
xor
ss
xchg
mov
pop
mov
and
es
test
out
add
outsb
add
mov
adc
jo
xchg
or
out
or
ret
or
jp
imul
enter
rclb
movsb
xor
inc
xor
sub
cmp
mov
out
cmc
mov
push
xchg
incl
fdivrl
push
pop
std
mov
lea
pop
stos
xchg
cwtl
and
leave
mov
xchg
out
out
jg
dec
xor
loopne
jo
sub
imul
shrb
iret
pusha
mov
lret
xchg
push
imul
aaa
rolb
cs
cld
xchg
lock
xchg
sbb
js
xlat
xchg
lahf
orb
sbb
adc
lock
push
and
jnp
divl
jge
pop
movsb
mov
pop
mov
test
cmp
ja
outsb
jmp
push
nop
imul
fisubrs
outsb
loope
je
xchg
cmpsb
loopne
mov
xchg
enter
adc
jmp
js
nop
mov
ss
movsl
cmp
pop
das
lds
shll
fs
leave
adc
lea
imul
adc
es
pop
jge
pop
push
idivb
lods
je
and
or
outsl
mov
push
repnz
loopne
push
fildll
cmp
stos
cltd
popf
sub
mov
xor
pop
imul
out
jae
and
lds
outsb
rcr
ja
lea
mov
xchg
xor
std
enter
mov
fisttps
roll
xchg
cli
or
iret
push
daa
dec
cltd
push
inc
orl
push
pop
mov
sbb
jle
sub
push
pop
lock
out
mov
inc
mov
dec
loop
push
int
pop
cld
sub
es
lret
repz
popa
xchg
gs
scas
stc
rol
aam
aaa
and
sub
aad
shll
jae
xchg
sub
jl
mov
cmp
jbe
std
sbb
adc
sbb
and
sti
mov
in
jbe
jbe
pop
ljmp
mov
adc
and
test
mov
push
in
adc
xor
xor
imul
sub
int
inc
in
addr16
mov
addr16
xor
out
jbe
mov
imul
pop
push
mov
insb
movsl
std
popl
xor
mov
adc
mov
dec
popa
out
xchg
adc
lret
fsubr
jmp
inc
lret
sti
gs
lcall
push
int
inc
aas
sbbl
lods
or
pop
outsl
and
xchg
loope
daa
inc
aam
out
sub
add
popa
jl
lret
mov
mov
leave
hlt
mov
cwtl
sarb
adc
mov
mov
pop
bnd
test
lods
fiaddl
popa
push
cmp
or
adc
std
stc
outsb
rclb
push
popf
xor
and
nop
mov
into
loope
mov
push
xor
mov
adc
cmp
push
in
call
mov
cmp
pop
fsubs
shlb
pop
adc
jo
outsl
push
sbb
es
shll
cmp
int3
xlat
nop
in
push
pop
push
cmpsb
mov
sarl
cmp
mul
shll
xchg
enter
lahf
jmp
sarb
jne
aam
pop
push
out
mov
mov
pop
inc
cmp
mov
push
leave
mov
mov
adc
int
inc
mov
leave
mov
pusha
lret
aad
push
arpl
fsubrs
adc
pop
jle
jnp
add
fisttpll
cmp
icebp
inc
push
mov
pop
push
shll
fsubs
mov
lcall
rcr
xchg
and
cli
dec
pop
into
pusha
fwait
xor
fs
insl
scas
daa
fucomp
fcompl
mov
fxam
cmpsl
xchg
mov
sbb
adc
cmp
lds
lahf
jecxz
add
xchg
jmp
fnstenv
mov
rolb
or
xchg
fadd
or
test
lds
mov
push
mov
scas
in
sbb
flds
inc
fwait
mov
loopne
and
mov
repz
mov
and
jge
in
xor
lods
lahf
mov
inc
mov
sbb
out
fldl2t
out
je
xchg
cmp
ficompl
mov
mov
popa
add
rorb
popa
or
pop
lock
mov
lret
leave
xor
insb
dec
xor
dec
sub
xor
pop
shrb
mov
lret
int
das
outsb
test
roll
stos
mov
in
aas
and
iret
in
sbb
cmpb
sti
scas
inc
pop
dec
hlt
cmp
in
mov
mov
dec
nop
lret
mov
les
call
lds
ret
sahf
fbstp
loope
cmp
and
or
inc
repnz
sbb
pop
imul
pushf
mov
inc
fwait
jl
cmp
es
fldcw
cbtw
aaa
push
inc
movsl
clc
mov
out
movsl
mov
cmp
shrb
inc
mov
jg
fdiv
pop
lcall
adc
jno
outsl
sub
test
mov
scas
imulb
mov
pop
cmpsb
les
add
mov
jo
shlb
adc
hlt
imul
imul
xchg
mov
or
clc
mov
iret
lret
or
lret
je
clc
mov
add
loopne
xchg
xor
pushf
lods
movsb
mov
xor
fs
jmp
mov
sti
pop
popl
lret
jle
bound
or
jnp
shrl
mov
stos
imul
lods
mov
mov
pop
outsl
cli
inc
fisubrs
fwait
xor
test
fsubl
fstpl
popa
in
push
sarb
fs
lret
and
push
mov
and
lds
clc
outsl
sbbl
sbb
les
pushf
dec
imul
aas
shr
cltd
in
jp
dec
xchg
xor
sbb
jae
cmp
ret
jl
mov
insl
sbbl
jns
mov
adc
daa
movsb
cmp
pusha
push
xor
dec
or
hlt
out
loop
test
jl
leave
inc
or
jbe
enter
jmp
fmulp
mov
sub
out
incb
push
popf
sahf
fprem1
mov
rclb
xchg
lods
stos
fwait
add
adc
or
jns
pop
and
xchg
xchg
mov
sbb
pushf
lret
cmp
mov
sbb
mov
outsl
push
movsl
pop
cs
cmp
mov
cmp
ret
adc
lods
mov
xor
or
mov
cmp
scas
mov
fldcw
hlt
clc
stos
int3
adc
sarl
mov
mov
jmp
mov
lea
mov
fisubl
inc
ljmp
popf
dec
pop
iret
sbb
mov
dec
call
popf
out
jmp
mov
sub
mov
sti
insb
in
or
test
aam
mov
out
pop
dec
and
packssdw
xchg
mov
push
xlat
mov
mov
lods
mov
add
mov
pop
mov
nop
lret
xchg
jnp
ret
imul
je
and
in
or
xlat
jbe
popa
or
mov
cmp
cmpsb
rclb
aas
or
sahf
sub
xchg
dec
jecxz
dec
jne
cmpsb
imul
xor
ficoml
push
dec
cmc
sbb
popa
or
jl
or
lods
aas
xchg
popa
pop
or
sub
push
outsl
aam
testb
and
ds
xor
pushf
std
xchg
mov
pop
sbb
xor
popf
ljmp
fldenv
cmpsl
mov
fcomps
or
repz
js
jecxz
push
sub
push
into
hlt
or
into
je
or
es
mov
lods
test
or
cmp
dec
mov
jge
data16
fists
inc
or
ret
jp
pop
and
cmp
lret
rolb
push
loope
test
fidivs
sahf
sahf
ss
test
sub
xchg
mov
ja
push
cmp
sbb
into
sub
xor
adc
out
jg
enter
jge
les
mov
inc
cld
mov
movsl
adc
ljmp
sti
test
sti
add
stos
pop
or
adc
mov
inc
xor
jle
movsb
iret
lahf
push
xchg
adc
mov
fnstcw
lret
add
cmp
adc
cld
xchg
data16
sub
dec
lcall
add
insb
outsb
xchg
shr
addb
or
dec
dec
push
in
mov
jae
pop
scas
rclb
pop
je
add
insb
xor
xchg
mov
cmp
data16
add
xchg
fbld
into
rcll
add
pushf
cmp
cmc
cli
daa
xchg
sbb
shrb
shl
dec
ds
cmp
ss
shll
dec
hlt
push
inc
cmp
xchg
fcom
mov
mov
fnsave
jge
stos
jle
fisttpll
mov
sbb
enter
mov
mov
jmp
cmc
std
aaa
inc
jg
inc
loopne
mov
fucomp
stos
scas
sub
ljmp
arpl
fucomp
hlt
rolb
xchg
hlt
aaa
or
dec
cmpsb
fnstsw
xchg
testl
and
jecxz
jno
or
inc
test
ficomps
loopne
mov
and
add
fdivr
mov
and
jb
mov
dec
lahf
sub
mov
mov
sub
pushf
test
subl
pop
push
mov
pop
mov
sar
andb
mov
jbe
pop
sbb
adc
push
sahf
pop
js
incb
lret
or
cltd
notl
jnp
inc
push
sahf
les
insb
cltd
xor
aaa
push
lahf
cmpsb
dec
test
movsl
mov
aam
sarb
int3
loop
sub
je
jno
test
fcoms
cmc
dec
fbld
xchg
xor
cmp
fsubl
add
pop
push
fdivr
ss
xorl
je
and
sbb
out
jno
addb
jmp
mov
in
stos
and
and
ret
mov
roll
add
xor
mov
scas
testb
ja
sbb
pop
shl
push
xorb
sbb
mov
ss
lret
js
jmp
sub
mov
pop
into
out
and
shrl
lods
inc
push
add
inc
dec
jbe
loope
imul
test
daa
mov
jb
jge
sbb
and
inc
push
dec
mov
addl
fistl
xor
popa
inc
call
lret
jae
sbb
flds
mov
mov
mov
mov
lods
lods
push
sub
cmc
jnp
daa
movsl
fidivrs
icebp
jnp
mov
adc
ss
int
fucomip
mov
xchg
push
imul
int3
or
movsb
scas
data16
dec
scas
xchg
lods
sbb
dec
into
sub
loop
xchg
xor
hlt
cltd
inc
mov
clc
mov
jl
in
and
xor
mov
sbb
inc
inc
aad
cmp
sarb
fists
add
sahf
js
es
mov
pop
fimuls
pop
mov
jno
pop
inc
xchg
pop
cmpsb
inc
inc
xlat
fucomip
idivl
jmp
insb
add
fildll
mov
shlb
sbbb
jbe
ret
cmp
inc
mov
sarl
imul
outsl
sbb
fstpt
stc
cmpsl
sbb
push
dec
adcb
ss
adc
and
cmp
dec
popf
mov
fldenv
or
pop
cmp
aaa
loopne
jmp
enter
xor
orb
cmc
ja
pop
ds
lahf
sbb
imul
mov
mov
les
sub
ret
push
je
gs
mov
scas
shll
popf
pop
sub
arpl
mov
mov
repz
xlat
aaa
pop
pop
sarl
cmp
clc
out
or
and
inc
xchg
cli
ja
imulb
outsb
add
aam
test
dec
cmp
insl
daa
test
jecxz
jns
push
lret
xchg
cs
mov
mov
fldcw
add
ss
inc
lock
xor
loop
adc
fidivrl
call
inc
fimull
stos
lods
ss
push
add
enter
dec
data16
cwtl
outsb
mov
mov
lret
cld
call
addr16
and
add
add
je
loope
out
cmp
or
ficompl
insb
adcb
and
cmp
test
mov
dec
stc
xchg
or
mov
mov
xlat
pop
in
daa
mov
dec
xchg
push
jnp
mov
jno
outsl
xor
jle
or
mov
data16
push
jb
movsb
fcmovu
pop
rcrl
call
fcomps
dec
cmpsb
or
mov
pop
loop
repz
mov
xor
or
jne
or
mov
in
aas
jbe
jbe
pusha
je
dec
adcb
dec
sbb
dec
imul
adc
push
cwtl
mov
xor
mov
int
push
jmp
inc
and
int3
mov
cmp
add
mov
mov
dec
notb
dec
jecxz
mov
push
sbbl
aaa
insl
scas
stc
rcrb
sub
jnp
dec
aam
push
nop
mov
rorb
xchg
testb
pop
imul
repnz
add
aam
lds
add
jecxz
pop
es
xchg
sbbl
push
data16
pop
cmp
movsl
ret
dec
mov
adc
cmp
pop
enter
into
lods
test
pusha
idivl
jbe
inc
xchg
xchg
add
or
add
addr16
sbb
xchg
nop
leave
test
fcmovnb
arpl
cmp
sub
lcall
lods
ret
or
mov
js
subb
nop
lock
inc
add
mov
aam
pop
ret
sub
bound
lret
mov
out
adc
and
bnd
mov
pop
push
mov
jecxz
sub
adc
push
jae
sbb
cmpsb
shl
and
jge
push
in
movsb
adc
pop
sub
imul
pusha
dec
cltd
inc
and
sbb
into
mov
out
outsb
mov
pushf
xor
mov
mov
loopne
cld
pop
insl
int3
ret
push
mov
xchg
mov
add
jl
sub
jno
inc
iret
mov
cmp
andb
fwait
mov
ds
pop
jmp
lahf
rcrb
imul
ret
push
mov
mov
loopne
fcmovne
bound
push
sbbl
mov
add
mov
pop
outsb
cmp
sub
push
or
xlat
insb
push
dec
aam
ds
mov
push
push
inc
fiadds
jnp
xchg
pop
arpl
push
mov
lods
cmpsl
std
inc
push
outsl
mov
int
pusha
pop
mov
lods
dec
ds
inc
pop
ja
sbb
int3
cwtl
cmp
daa
or
mov
nop
mov
pop
mov
rcr
imulb
shr
addb
mov
mov
popa
mov
xchg
test
sub
fdiv
or
add
sbb
adcb
adc
pop
jns
xor
inc
data16
lock
test
jp
sub
adc
and
jns
and
stos
jp
inc
inc
in
inc
jmp
adc
xchg
and
or
push
mov
jg
jge
mov
loopne
push
sbb
cmp
shrl
pop
shl
adc
icebp
mov
ss
pop
add
inc
jp
push
sub
adc
xchg
in
pushf
xor
icebp
push
addr16
not
pusha
push
cmpsl
clc
dec
pop
clc
pop
insb
insb
sarl
lret
pop
mov
stc
adc
into
loope
out
test
clc
or
mov
imul
jo
test
in
xchg
cwtl
incb
cwtl
lods
scas
sbb
and
subb
jmp
mov
adc
loop
sti
jp
fsts
sbb
ss
mov
push
repnz
jns
mov
insl
cmp
fildl
dec
hlt
jnp
push
jo
mov
mov
cmpsb
insb
xlat
mov
imul
xchg
dec
in
add
imul
pop
lock
out
mov
movsl
pusha
mov
aam
sub
gs
xchg
pop
loope
inc
icebp
jne,pn
sub
shr
xor
sbb
push
pushf
pop
popa
insb
addr16
and
das
faddl
test
das
call
stos
mov
mov
sbb
int
jmp
dec
sarl
push
jl
adc
adc
sub
arpl
leave
stc
ds
sbb
sub
mov
aad
mov
pop
push
sub
lods
inc
dec
mov
lret
jg
adc
add
jmp
dec
dec
xor
jp
call
repnz
push
cmpl
nop
sbb
fildl
movsl
cmp
test
add
cmp
outsl
mov
pop
mov
aad
jns
or
jns
jge
test
or
pop
inc
mov
add
scas
ret
pusha
sbb
xor
sub
fdivs
mov
mov
xchg
and
pop
pop
ret
ja
xlat
mov
dec
in
stos
popf
and
repz
cmpsl
imul
sbb
bound
bound
notl
pop
cs
push
dec
fadds
or
outsl
ja
mov
xchg
adc
ficomps
push
push
into
cltd
lret
mov
push
jb
js
jmp
pop
int3
fcmove
push
pop
jae
push
sub
fcompl
nop
sbb
fwait
loop
inc
loopne
mov
ret
into
pop
mov
pop
repz
or
insb
adc
cmp
inc
outsb
or
inc
mov
pop
movsl
pop
loope
xchg
cld
insl
fwait
xor
sbb
xchg
test
lock
mov
jne
xchg
shrl
push
dec
lods
push
pop
shrl
dec
mov
dec
enter
or
rcrl
mov
sbb
or
mov
cltd
or
loope
sbb
xchg
push
fisttpll
mov
inc
scas
or
xlat
std
ja
mov
xor
jg
jnp
dec
cmp
mov
jb
loopne
pop
out
cmp
imul
scas
cmpsb
out
inc
rorl
push
lahf
pop
xchg
enter
jecxz
cli
mov
imul
jge
jb
cli
xchg
xor
cli
stos
inc
mov
cmp
rcl
leave
pusha
pop
mov
out
out
andl
movsb
jnp
enter
jnp
shrb
add
lahf
in
sarl
dec
mov
mov
out
data16
mov
cmpsl
stos
and
out
xchg
mov
aam
mov
and
stc
lret
adc
and
ds
mov
out
enter
pop
sbb
pop
xor
push
push
gs
xchg
aas
inc
fidivl
mov
adcb
sbb
sub
ds
lods
cmova
mov
push
adcl
pushw
push
das
pop
icebp
push
pop
xor
cmpsb
nop
pop
or
adc
mov
jno
lcall
pusha
insl
push
fidivrs
add
test
xchg
or
jbe
and
shll
xchg
push
in
fimuls
loopne
test
adc
pop
and
pop
mov
pusha
jne
pop
push
aam
dec
inc
xchg
push
pop
movsb
jecxz
xor
ds
xchg
sahf
mov
pushl
enter
jae
pop
fcom
push
dec
stc
arpl
sub
inc
nop
lcall
loope
or
push
imul
add
loopne
pop
jl
sbb
jo
sti
cmp
fldenv
cmpsl
out
dec
mov
xor
jns
int
insl
dec
pop
xchg
pop
int
add
xor
sti
push
mov
jb
push
popa
xchg
lds
cli
cmp
sub
jecxz
iret
add
push
inc
push
aad
dec
lock
je
xchg
jb
bound
ret
repz
sti
xchg
inc
aad
call
inc
outsl
daa
int
xchg
decl
std
cltd
mov
fidivl
sub
fsubs
arpl
lods
loopne
jns
mov
lret
dec
push
into
and
xor
scas
repz
cli
inc
cmpsl
ss
fisubrl
pop
xlat
cli
mov
jae
lods
inc
lret
mov
lret
sahf
cmp
pop
call
push
int
push
movsb
push
incb
lods
cmc
pop
inc
mov
leave
mov
or
call
std
push
or
xor
stc
jbe
sub
mov
sub
mov
out
mov
and
bound
xchg
sub
mov
mov
xor
rorl
jg
lret
mov
fsubrs
xchg
call
pop
addr16
jl
ss
leave
mov
test
or
dec
stos
out
push
jle
sub
out
out
cli
mov
cmp
rcl
add
out
mov
lcall
and
cmp
push
aam
scas
inc
sar
fisubl
cmp
stos
xor
pop
out
aam
sbb
paddw
shlb
pop
lahf
xor
lock
lret
ja
sbbb
xchg
dec
mov
pop
push
jmp
js
lods
ljmp
adc
pop
bt
jmp
mov
cltd
or
pusha
push
pop
loopne
subb
sbb
mov
rol
pop
cmc
test
mov
mov
and
in
mov
lods
jmp
xchg
aas
popf
mov
xor
lret
insl
push
mov
mov
xchg
pop
aad
xchg
xchg
adc
mov
pop
mov
hlt
cmpsb
xchg
stos
jecxz
pop
mov
xchg
daa
dec
adc
leave
push
dec
sub
sub
mov
add
cltd
sbb
jmp
mov
loope
pop
mov
dec
pop
lods
mov
mov
clc
das
icebp
mov
sbb
lret
add
call
or
mov
add
mov
sub
or
std
add
jl
dec
loopne
mov
mov
or
mov
sub
mov
mov
adc
sub
pusha
add
mov
mov
jmp
cmp
les
push
push
inc
mov
dec
lea
test
in
addl
int3
out
push
pop
xchg
sub
rolb
push
roll
mov
das
mov
les
aaa
push
adc
cmpb
adc
pop
call
cmp
ljmp
jne
dec
out
pusha
add
stos
cs
jnp
stos
lods
lcall
js
mov
dec
addl
stos
pop
shlb
jbe
add
stos
inc
into
fcoml
aam
sbb
enter
and
mov
and
dec
xchg
roll
out
push
pop
sbb
fsubrp
sbb
pop
jns
mov
pop
divl
icebp
mov
pop
mov
cmpl
cmpb
adcl
xor
push
jmp
dec
in
out
test
jb
sbb
andb
shrl
fcoms
enter
outsl
push
push
mov
in
sbb
mov
jo
push
sahf
or
sbbb
push
cwtl
nop
pushf
shll
xorb
xor
jo
gs
testl
pop
and
mov
subb
out
pop
movsl
xor
lods
mov
out
scas
and
popa
lods
in
lds
cltd
das
test
gs
fsts
cmp
mov
xchg
das
inc
inc
adc
popa
sbb
shrb
aam
adc
xor
pop
shlb
mov
int3
test
cli
shlb
sbb
rolb
jl
lret
jns
jb
in
sub
xchg
dec
fnstsw
inc
call
insl
mov
movsb
xor
or
daa
inc
rclb
mov
sbb
cmp
in
popa
sub
test
data16
movd
inc
test
fs
out
leave
popf
dec
sbb
mov
out
add
daa
adc
and
xor
mov
push
cmp
mov
push
push
in
dec
xchg
or
les
test
mov
dec
jg
mov
pushf
rorl
add
mov
xchg
inc
jb
in
push
xchg
call
ret
xchg
mov
xchg
repz
dec
in
sub
mov
xchg
cmc
orb
sub
mov
jno
cmp
sbb
pop
popa
dec
fmul
or
jle
push
scas
sub
clc
or
cmp
cmp
out
ret
testb
in
daa
clc
cmp
cli
add
add
sub
push
mov
sub
mov
subl
insb
push
in
bswap
in
jb
repnz
ret
inc
clc
aas
inc
ret
xlat
jbe
es
sbb
dec
inc
movsb
les
cmp
insb
lret
dec
push
mov
inc
jecxz
xchg
jmp
cmpsb
jns
pop
or
inc
sub
aaa
ljmp
movd
pop
stos
adc
xor
in
aam
adc
fidivs
repnz
fisubrl
and
jb
nop
mov
mov
loop
inc
sbb
adc
xchg
test
pop
adc
adc
xchg
mov
push
gs
fsubl
lods
mov
pop
mov
repz
negl
mov
inc
daa
out
adc
jle
or
pop
pop
pop
jo
dec
adc
sbb
daa
pop
cmp
sbb
adc
outsl
inc
sar
test
or
jle
jecxz
jmp
clc
add
sti
movb
out
inc
cmpsl
test
fs
mov
add
imul
add
stc
ds
add
push
jns
jne
xlat
into
pop
adc
dec
dec
gs
jle
adc
int3
xchg
add
jbe
mov
int
or
sbb
jg
mov
push
loop
sbb
cmpsl
xor
xchg
sub
sbb
xor
lahf
inc
and
int
out
xchg
dec
outsb
aas
outsb
xchg
int3
int
cmpsb
jnp
dec
lods
ljmp
std
jo
movsl
idiv
cltd
test
lods
add
push
sub
xor
jb
cmpsb
mov
lret
enter
push
fidivrs
inc
or
ss
test
add
cld
int3
les
cli
push
outsl
sbb
dec
or
arpl
outsb
cmp
out
xchg
mov
or
inc
sti
or
mov
xor
iret
scas
daa
cmp
cs
into
add
daa
xchg
pop
int
inc
lahf
sub
lret
mov
pop
aaa
sub
push
mov
adc
cmp
out
lret
popa
push
push
mov
pusha
pop
arpl
and
lea
iret
mov
push
fadds
or
shrb
xor
mov
in
push
stos
fs
fdivl
fsubrl
add
adc
call
jecxz
or
mov
cmpsl
insb
out
sahf
fisubrs
lahf
mov
pop
dec
mov
sbb
cmp
sub
jle
mov
daa
repnz
pop
add
pop
cmc
mov
push
mov
filds
jmp
push
lock
stc
sbb
push
xchg
dec
inc
xchg
inc
sbbl
int
sub
pop
rorl
and
insb
jecxz
clc
or
testb
mov
popf
lahf
loope
jg
mov
adc
inc
and
iret
imul
xor
adc
popa
sub
pop
out
or
dec
pop
add
sub
stos
or
mov
sub
xchg
scas
jbe
scas
push
out
fisubrl
jecxz
pop
stos
mov
mov
movl
fisttps
jno
xlat
mov
sbb
mov
adc
push
and
and
xor
inc
in
stos
inc
pop
fmull
int
push
aas
push
sub
arpl
pop
adcl
flds
pop
cmp
rorb
int
scas
xor
or
push
stc
arpl
popf
es
pop
dec
adc
aad
outsl
and
push
insl
adc
xchg
les
mov
movsl
neg
sub
ds
adcl
cwtl
das
in
inc
enter
mov
loope
rcrb
jl
mov
out
lds
stos
outsb
insl
sub
fildl
push
int3
pop
and
aam
xchg
mov
cmc
jmp
popf
aam
xor
xor
into
lahf
fwait
inc
test
xor
aaa
push
mov
fyl2x
add
cmpsl
add
xor
lock
lock
mov
ljmp
cld
pushf
or
inc
push
fnstenv
out
imul
outsb
jns
arpl
adcl
ss
adc
inc
fldenv
icebp
mov
loope
fcoml
jg
xchg
sub
test
sbbb
movsb
lea
lcall
dec
lds
and
lods
jne
pop
stos
push
scas
inc
or
xor
add
inc
rcrl
cld
les
push
and
adc
addr16
das
inc
vcvtps2dq
mul
insl
test
pop
js
pop
adc
inc
sub
rorl
mov
out
sub
jl
cmc
mov
js
or
jge
cld
jbe
xor
adc
add
dec
ret
dec
test
xchg
and
movsb
adcl
ret
lock
jg
xlat
fsubr
movsb
adc
je
mov
es
jmp
sbb
inc
in
push
ret
jg
xchg
jg
adc
cmp
pop
lret
imul
ds
jns
lahf
sub
rolb
popa
pop
push
mov
fnstenv
mov
sub
cmp
inc
adcl
movsb
out
popa
mov
jmp
outsb
xchg
lds
shlb
ja
xchg
and
and
add
or
stos
mov
scas
cmp
pop
jno
mov
push
jb
mov
xlat
adc
inc
add
sbb
xor
cld
jp
cmpsb
pop
cmpsl
xor
sbb
push
inc
mov
xor
add
cpuid
mov
mov
insl
ret
shl
mov
push
jmp
repnz
rol
inc
cwtl
das
aaa
cmc
sbb
popf
adc
stos
or
frstor
ja
cmp
mov
lcall
mov
das
ret
mov
je
testb
dec
lret
or
jle
cli
dec
scas
inc
rcrl
xchg
gs
xor
and
or
jbe
inc
int3
xchg
cltd
arpl
das
mov
cmp
cmp
lcall
dec
pop
adc
push
test
cwtl
jmp
dec
ljmp
ficomps
fildl
xor
stos
mov
pushf
lds
shll
xchg
cld
and
in
sti
mov
mov
inc
popf
mov
and
aas
test
cmpsb
sbb
xchg
push
or
hlt
add
mov
dec
and
mov
xchg
xchg
imull
lods
mov
xor
call
mov
outsb
jmp
stos
dec
in
rcll
and
jl
push
xchg
test
inc
push
xor
xchg
mov
sub
rclb
jp
fbstp
loope
push
pushf
mov
xchg
ficomps
adc
sahf
mov
mov
ficoml
pop
dec
inc
cmp
in
sti
int3
rcl
insl
xlat
pop
add
lea
mov
dec
stos
add
push
dec
fnsave
jecxz
sbb
xchg
popf
pfrcpit2
je
andb
mov
inc
inc
movsl
cltd
clc
push
jecxz
fdivrl
inc
insl
inc
cmpsl
dec
adc
imul
sub
sbb
xchg
mov
cmp
lods
mov
shlb
es
mov
mov
sbb
cld
popa
loop
mov
dec
mov
xchg
and
pop
mov
pop
push
dec
inc
xlat
cmp
xchg
sub
xor
and
xchg
pop
lock
andb
pop
cltd
push
sahf
jb
mov
idivb
pop
sub
out
out
jae
mov
dec
cmc
and
rcrb
scas
das
push
int
mov
lods
ja
and
lods
push
push
push
stc
aas
xor
dec
fcomps
inc
jecxz
stc
insl
sub
out
into
ret
arpl
dec
idivb
or
and
flds
arpl
insb
movsb
jne
lds
jmp
xchg
mov
mov
popf
js
mov
rorb
mov
lret
pop
add
lods
ret
mov
repnz
out
xchg
sbb
lahf
jns
push
test
sub
xorl
popf
xchg
adc
sub
adc
and
sarb
aad
mov
les
fucomi
stos
fistpll
push
cmp
scas
inc
out
or
ret
sub
pop
mov
sub
pop
cmpsl
std
lret
and
notb
divb
pop
push
nop
pushl
repnz
jb
push
fwait
xor
sub
fldl
add
mov
pop
dec
xchg
stos
inc
fcoml
mov
or
add
or
cmc
dec
sub
sbb
test
mov
popl
mov
shrb
mov
cmp
push
mov
shl
in
fwait
in
mov
jb
es
fstps
or
jge
inc
and
daa
pop
dec
cli
xchg
mov
mov
movsl
add
lea
lahf
test
cmp
adc
popf
mov
mov
rol
int3
xor
sub
int3
sub
pop
lock
fwait
movsb
jno
mov
and
add
inc
pop
out
std
push
shl
lea
ds
dec
jb
xchg
int3
sub
pusha
add
loope
xor
or
lahf
push
js
cltd
addr16
cmp
scas
jg
cmp
sti
dec
stc
test
xchg
outsb
lds
adc
jo
popf
fistps
sarb
xor
sarl
mov
xor
fcmovnu
mov
pusha
rcl
and
fs
daa
mov
jne
lret
and
and
adc
xor
add
lcall
push
add
mov
mov
xlat
nop
push
pop
xchg
jmp
nop
or
xor
jns
cmp
sbb
int3
push
cld
pop
sub
mov
pop
cmp
adc
std
test
dec
dec
mov
cmp
in
cmp
fwait
int3
dec
pop
test
imulb
or
inc
fdivl
repz
repnz
ljmp
pop
or
add
inc
dec
cld
push
jl
mov
dec
mov
mov
call
fidivs
incl
pop
mov
push
xor
and
sub
and
push
mov
cmp
jl
pop
pop
ds
mov
repnz
jge
popl
adc
mov
sub
cli
pop
xor
mov
sbb
mov
ffreep
movsl
inc
fbstp
mov
push
add
mov
push
mov
sbb
or
mov
shlb
mov
jae
scas
insl
or
cli
inc
inc
dec
mov
pop
xlat
sbb
xor
daa
jge
sub
or
repz
mov
xchg
enter
jecxz
mov
mov
in
std
mov
lods
aam
ret
jp
in
lods
adc
and
in
sbb
lods
xchg
xor
in
jne
sbb
lds
sbb
sub
fwait
pop
dec
pop
sub
insl
sub
mov
xchg
roll
or
push
int
pop
out
lods
sarb
or
cmp
rcl
aaa
mov
sarb
pop
mov
orb
test
pop
nop
fimuls
push
rorb
adc
jnp
pop
aad
add
sub
popa
mov
out
ljmp
cmpsb
add
movsb
stos
xchg
mov
scas
js
addb
cmp
mov
scas
adcl
mov
inc
sbb
or
adc
insl
jge
xor
scas
inc
jne
cli
inc
pop
pop
or
adc
xchg
xor
mov
add
pop
aas
dec
dec
lret
cmp
or
dec
out
mov
add
jbe
xchg
test
orb
sbb
fwait
jle
pxor
outsl
daa
add
into
xor
xor
ret
js
arpl
dec
cld
test
sub
lock
js
sub
mov
and
in
or
jo
mov
lods
dec
push
add
push
incl
push
xchg
pusha
pop
dec
pop
jecxz
cmp
popf
sarl
push
adc
lods
les
xor
inc
mov
ret
nop
sbb
inc
movsb
mov
cmc
and
or
jmp
pop
jle
lds
pushf
ds
or
jbe
sbb
jno
out
or
lahf
mov
push
cli
and
aas
mov
mov
xchg
call
or
push
adcb
stos
mov
inc
xor
inc
gs
fidivs
dec
add
push
int3
push
xchg
adc
pop
cmp
sub
test
cmp
mov
test
xchg
imul
pop
mov
pop
cmp
mov
cmp
mov
stos
out
or
aaa
push
cmp
push
push
pop
jnp
iret
js
bound
push
fnstenv
adc
cmpsl
flds
jl
fs
inc
bound
jae
loopne
stc
test
fildl
cmp
cmp
fsubr
dec
xchg
inc
inc
jge
outsl
jne
inc
lret
pop
jp
sbb
dec
jmp
dec
dec
push
or
out
shl
pop
dec
pusha
xchg
call
popl
xlat
cld
inc
and
jmp
sub
adc
mov
mov
xchg
mov
pop
and
sarl
cmpsl
dec
loope
jno
pop
and
dec
js
inc
cmpsb
pop
xor
jnp
int
adc
sub
cmp
out
or
push
mov
xchg
das
push
in
cmp
cltd
mov
pop
icebp
lods
xor
sub
rolb
add
and
push
inc
imul
xchg
roll
jno
sbb
divb
nopl
popl
or
mov
subb
imul
or
ret
xchg
addr16
fwait
out
and
sub
pop
mov
lcall
cmp
dec
and
inc
mov
data16
iret
out
xor
dec
lock
mov
xchg
add
cmp
in
in
fcoms
cltd
stc
inc
addr16
cmp
xlat
or
cs
sub
sti
add
sbb
cmp
cmpsl
out
mov
mov
xchg
in
inc
loop
push
dec
jecxz
xor
int3
mov
rolb
or
xchg
or
mov
dec
push
mov
pop
orl
add
mov
pop
sbb
push
addr16
xchg
cltd
jne
xchg
mov
push
aad
fiadds
mov
mov
mov
daa
and
inc
adc
and
push
aad
push
dec
sub
cmp
shll
sbbb
ret
imul
in
mov
sub
xor
push
and
push
jecxz
insb
add
mov
cmp
pop
pop
test
fnsave
aaa
add
xchg
mov
adc
push
and
mov
sti
push
shlb
or
call
add
call
fwait
sti
pop
fisttpl
jg
jae
loope
mov
inc
pop
cli
and
mov
addr16
mov
subl
jne
adc
push
jmp
rcr
ss
mov
mov
leave
mulps
lahf
jmp
push
mov
lret
jns
out
decl
dec
xor
outsl
lcall
sti
dec
notb
imul
push
dec
or
fucomi
jae
sbb
add
xor
push
mov
aad
mov
add
daa
lds
mov
adc
jecxz
fsubrs
xchg
jnp
ret
pop
jecxz
in
jmp
add
jnp
lods
jno
push
es
jne
subb
or
jns
rorb
push
mov
xchg
cmpl
or
out
mov
xchg
xchg
cmp
shlb
jp
movsb
cmp
fs
inc
int
imul
mov
mov
inc
xchg
inc
inc
push
aaa
jmp
mov
movsl
mov
pusha
dec
sub
xlat
bound
pushf
std
inc
loopne
jae
adc
xchg
add
or
fsubr
stos
stos
rcrl
mov
leave
aam
push
mov
sbb
jae
fcompl
int3
jg
cmc
adc
hlt
adc
push
sub
xchg
push
sti
subl
dec
jmp
dec
and
jno
lock
outsb
cli
cwtl
mov
stos
insb
add
out
jnp
dec
out
pop
inc
fs
adc
cmpsb
fcmovu
pop
sub
add
test
cmpsb
jg
xchg
add
imul
cmp
pop
pop
lret
fidivrs
cmp
rcrb
out
mov
inc
hlt
jbe
popf
mov
push
add
push
hlt
aad
stos
jne
cmpsl
lret
insb
jle
aam
bnd
xchg
test
cwtl
aas
xchg
and
out
and
mov
fiadds
daa
lea
sar
lcall
cs
mov
movsl
pop
adc
add
mov
iret
test
fsubrs
push
lods
mov
add
and
stos
pop
mov
and
xchg
push
mov
push
mov
jmp
data16
scas
inc
fldenv
int
mov
call
dec
fnstenv
mov
fldenv
shl
mov
ret
inc
pusha
std
sub
mov
sub
xor
out
xor
in
mov
daa
push
fcompl
int
in
jmpw
xchg
mov
mulb
dec
test
scas
pop
sbb
xchg
scas
clc
mov
push
scas
xchg
inc
notl
pop
or
push
pop
cld
iret
push
and
mov
or
out
sbb
push
mov
mov
out
jge
mov
movsb
or
inc
jnp
inc
sbb
orl
push
loope
cmp
dec
sub
inc
ret
jle
mov
icebp
insb
enter
test
idivl
mov
pop
fldenv
push
mov
lret
mov
push
pop
ja
in
and
push
or
std
call
test
into
hlt
cmp
nop
fdivrs
mov
test
and
xchg
testb
in
out
push
in
xor
mov
and
data16
inc
out
pushf
sub
mov
sbb
sub
sub
push
and
dec
fmul
js
outsb
stc
cmpsl
dec
xor
sub
jae
sbb
inc
loopne
les
push
imul
ret
jne
jne
data16
mov
dec
out
ret
sbb
clc
cmpb
ror
sti
or
xchg
sub
mov
push
inc
push
test
mov
dec
shrl
mov
xchg
sub
mov
push
stc
hlt
inc
pop
adcb
imul
adc
fwait
xor
pop
test
nopl
xchg
sub
pop
aam
cli
cmpsb
ret
repz
xor
stos
cmpb
mov
lahf
in
jmp
addr16
jle
sbbl
cwtl
sbb
enter
roll
adc
sbb
lods
pop
adc
jb
dec
in
lea
nop
out
push
pop
xlat
mov
push
fucomp
mov
mov
cmpsl
sbb
daa
xchg
dec
jne
jae
xchg
out
sti
outsb
aad
cmp
insb
ss
push
add
push
or
inc
out
cld
xchg
adc
mov
push
jecxz
and
dec
sbb
push
bound
fmul
lods
sbb
adc
mov
adc
notb
mov
mov
pop
lret
sahf
cld
sbb
ds
push
push
add
in
arpl
jl
inc
push
ja
mov
adc
movsb
das
mov
sbbl
adc
add
aaa
mov
xchg
and
mov
cmc
xchg
push
mov
mov
mov
les
xor
ds
lds
sbb
mov
push
push
xor
xchg
mov
test
and
into
fdivl
pop
mov
xchg
ret
push
pushf
sbb
pop
push
push
mov
inc
fisttps
or
in
dec
fistps
xchg
jb
sbb
xchg
push
stos
sbb
xchg
push
inc
or
mov
add
or
jns
and
ret
push
clc
and
mov
fstl
ljmpw
mov
loopne
data16
lea
aaa
push
mov
or
and
clc
cmpsb
jo
mov
shrb
aad
push
jbe
jg
or
out
std
aam
or
sahf
pop
pusha
cld
xchg
push
sar
jo
lock
mov
jbe
aaa
test
xor
inc
cmpsb
xchg
xlat
ret
rorb
adc
adc
jg
shr
loope
dec
stc
jge
sub
mov
test
mov
inc
or
jmp
xchg
sbb
fcomps
push
pop
sahf
mov
fs
push
inc
jnp
cmpsb
jb
cmc
call
scas
add
push
cwtl
sbb
mov
out
jge
or
outsl
or
ja
nop
imul
xlat
cmp
or
pop
cltd
mov
push
jns
imul
pop
in
xor
mov
mov
cmp
insl
loopne
mov
in
or
mov
cmpl
fst
imul
ss
mov
mov
push
jmp
into
xchg
cmp
mov
mov
sub
add
dec
lock
add
sbb
mov
mov
lods
lea
fwait
loop
scas
call
out
sahf
add
mov
fdivp
adc
scas
ds
or
pop
ss
xchg
and
daa
gs
andb
cmc
int3
leave
pop
sub
fwait
test
fiaddl
sub
loope
call
popf
in
fdiv
dec
lock
add
repnz
mov
jle
cmp
scas
aas
mov
adc
and
add
mov
mov
decb
mov
xchg
sub
adc
ss
add
adc
clc
je
mov
sti
mov
fiadds
mov
fisubrl
sub
movsb
ja
jbe
sarb
ss
push
add
mov
and
pop
lret
int
mov
in
in
inc
and
xchg
xchg
enter
cwtl
repz
fdivrp
cltd
push
push
cld
xchg
dec
and
jae
cmp
popa
insb
mov
pushf
jnp
and
nop
lods
data16
cwtl
into
pop
jg
mov
mov
daa
int3
arpl
mov
fnstenv
pop
xchg
mov
int3
jae
sbb
mov
jnp
popf
mov
cltd
std
jb
movsl
cmp
push
dec
loopne
inc
add
mov
xlat
outsb
mov
cmc
mov
movsb
sbb
cwtl
mov
inc
subl
fmull
mov
jecxz
into
pop
arpl
cmp
push
jbe
test
jns
lsl
shl
xchg
mov
fwait
cmp
lods
inc
cwtl
push
or
int3
ja
loop
or
shlb
mov
pmulhuw
ja
scas
sbbl
push
fnsave
mov
test
test
ja
mov
out
stos
cmp
stos
pop
sbb
fs
insl
pop
into
jne
mov
loopne
add
repz
scas
mov
push
push
pop
sahf
test
stos
in
icebp
fwait
call
pop
test
adc
lea
hlt
mov
addb
xchg
shll
shlb
icebp
popa
dec
sub
lfs
inc
fstpl
cltd
fsubrs
dec
cmpsl
ds
popa
clc
rclb
stos
sbbb
mov
rcrl
cli
xchg
jge
xchg
pop
mov
movsl
cmp
or
cmpb
ret
pop
loopne
push
call
pop
fwait
outsl
push
int
cmpsl
ds
jecxz
test
jns
testb
das
dec
fstpt
rclb
imul
popf
es
push
xchg
cmpsb
cmp
test
les
lret
cld
das
outsb
add
fs
and
rcrl
scas
add
pop
lock
or
stos
cmp
pop
xor
mov
lahf
lahf
mov
fidivl
adc
lea
adc
and
push
xchg
adc
movsl
jecxz
lds
enter
sub
punpcklwd
out
test
xchg
sub
mov
pusha
testl
add
mov
inc
push
inc
fmuls
mov
pop
rorl
in
sub
cmp
nop
subl
mov
icebp
mov
aad
fldl
or
cmp
push
jmp
pop
push
lods
lea
xor
nop
daa
lgdtl
xor
or
in
and
sti
test
sbb
test
ret
add
sbb
dec
jmp
mov
or
inc
cmp
xchg
sub
mov
adc
clc
and
adc
inc
loop
push
adc
popa
clc
or
lds
adc
inc
dec
in
daa
sbb
test
or
pop
scas
inc
out
stos
inc
pop
frstor
sysret
scas
inc
ss
xor
inc
in
mov
paddb
pop
xor
movsl
cmp
jmp
imul
cmp
inc
fstpt
pop
pop
scas
pop
in
orl
push
out
push
call
xor
insl
add
push
cmp
out
iret
movsb
pop
repnz
std
xchg
es
push
jle
jae
jg
in
test
mov
sub
sbb
leave
pusha
sub
jmp
mov
insb
int
mov
je
test
sub
loopne
insb
jae
mov
jae
mov
jb
add
push
scas
inc
mov
mov
lret
nop
movsb
pop
dec
loopne
js
xchg
lods
lcall
stos
pusha
ret
pop
xchg
jg
mov
xor
mov
ja
stos
push
jmp
mov
sbb
xchg
jo
movsl
mov
mov
mov
js
add
mov
mov
jns
sub
mov
sbb
jg
subb
jnp
mov
mov
test
jl
aam
sbbl
xchg
push
scas
inc
mov
push
ljmp
daa
mov
mov
pop
hlt
mov
js
nop
lods
subl
mov
pushf
mov
js
mov
shrb
lcall
pop
mov
imul
jbe
lods
shrl
push
incb
fisubs
int
ret
ss
aaa
into
xchg
dec
loop
lahf
dec
loop
mov
pop
testb
or
call
cmp
pop
mov
daa
mov
outsb
xchg
repz
rorb
mov
pop
hlt
leave
addr16
cmc
pop
or
mov
lret
sbb
pusha
xor
xchg
sub
cli
mov
fnsave
es
adc
roll
or
jno
int3
mov
je
insb
test
jnp
sub
jnp
mov
jl
mov
and
pop
mov
fnstenv
jl
fdivs
sbbl
enter
cmp
mov
fsubrs
jl
stos
mov
pop
fadds
cld
xchg
lea
cmp
orl
mov
mov
insl
mov
or
mov
mov
js
ljmp
int3
inc
xlat
stc
add
pop
aaa
sbb
shrb
jo
sbb
ret
testl
inc
inc
push
pop
push
test
loope
cmpsb
mov
xchg
clc
cmp
sub
ds
xchg
sub
cmc
pusha
mull
xor
mov
test
lock
test
xor
adc
sbb
sbb
pop
cmp
pop
scas
adc
push
out
or
sub
mov
xor
cmpsb
cmp
and
stc
xor
sub
aas
sbb
lret
bound
icebp
out
xchg
pop
push
sti
insl
add
add
int
sub
cmc
mov
sub
shrl
loope
xchg
adc
sti
xchg
fmuls
mov
jns
aas
xchg
mov
xor
or
sbb
mov
loop
popa
movsl
cmp
popf
and
rclb
test
xchg
xchg
xchg
sub
pop
arpl
mov
sahf
adcb
insb
lret
fadds
test
cmpsb
fldl
shlb
mov
xchg
inc
faddp
dec
cmpsl
jg,pt
sub
pop
sahf
xor
mov
sbbl
mov
fdivrl
rorb
cwtl
or
pop
lock
mov
jp
mov
ja
inc
pop
add
aad
pop
jmp
sbb
ds
mov
into
movsl
mov
ret
pop
push
jecxz
xchg
sbb
cltd
cmpsb
cmp
mov
decb
int
push
fstpl
scas
xor
iret
cld
test
mov
dec
sarl
inc
fwait
daa
cmpsl
ds
mov
jnp
test
adc
xor
mov
inc
dec
scas
loope
loopne
mov
lcall
push
xor
inc
cmpsb
loope
xlat
arpl
xchg
mov
pop
call
or
jnp
aam
mov
icebp
adc
loopne
movsl
cmp
add
ja
int3
pop
or
jmp
aam
fldl
es
push
popf
mov
cmc
mov
rclb
data16
lods
imul
subl
push
insl
stos
test
mov
or
das
mov
in
xchg
aam
pop
fcoms
sti
movsl
xlat
mov
dec
xchg
rcll
cld
fsubrp
inc
in
mov
mov
pop
adc
imul
mov
sti
aam
scas
mov
lock
sti
in
mov
mov
popa
stos
fdivl
dec
iret
shrb
sbb
int
leave
sarb
sub
hlt
enter
or
loope
mov
mov
mov
mov
jge
stos
jae
add
jecxz
adc
jns
push
aas
ret
clc
cmc
jb
sub
cwtl
sub
popa
leave
scas
or
cmp
add
push
ja
pop
aad
xor
dec
mov
sbb
je
pavgw
jmp
insl
icebp
mov
lcall
xchg
jo
mov
movsb
bound
in
ljmp
inc
lods
xchg
cs
mov
push
xor
xchg
js
aam
imull
sub
les
and
cltd
nop
imull
push
sbb
mov
repz
xlat
mov
or
adc
add
scas
jg
xchg
cmp
pop
sbb
mov
dec
out
pop
in
sarb
cmp
sbb
cmp
loopne
pushf
xor
mov
mov
add
out
xchg
int3
add
call
sbb
or
or
adc
sub
cmp
bound
mov
push
cmpw
cltd
jo
lret
dec
ds
dec
out
das
in
pop
and
pop
scas
adc
stos
es
pushf
jp
or
aad
and
cmp
dec
xchg
bound
inc
lcall
dec
xlat
pxor
dec
and
sarl
or
jnp
lods
jo
mov
ret
mov
lcall
cwtl
outsl
ret
sbb
nop
cmp
lods
pop
mov
cmpsl
or
data16
jb
dec
loope
cmp
dec
mov
imulb
jle
sahf
jle
insb
lcall
jle
inc
cmp
or
mov
ficompl
je
movsb
xchg
jl
mov
ficompl
or
ficomps
shl
xlat
in
jo
xlat
add
lock
mov
imul
in
in
aam
lods
jbe
mov
mov
mov
imul
pusha
mov
adc
pop
cmc
addl
aas
add
jb
shlb
dec
fsubs
imulb
jae
cmpsb
and
push
cmpsb
ds
sbb
cmp
push
cltd
jno
sub
jp
xchg
ss
sbbl
cld
repnz
xlat
cmp
mov
in
mov
cli
iret
inc
mov
out
test
mov
inc
adc
mov
push
pop
mov
stc
push
jp
push
mov
arpl
dec
pop
dec
mov
js
jns
jle
push
mov
pop
fwait
dec
mov
clc
mov
xor
dec
fistps
pop
adc
pushf
repz
es
mov
mov
testb
int
imul
cmpsl
pop
repnz
addl
ret
fistl
test
inc
enter
xchg
pop
add
lods
inc
xchg
flds
mov
cmp
loopne
ljmp
or
ret
scas
rorl
stos
repnz
add
movsb
or
lcall
push
mov
ljmp
repnz
pop
or
mov
in
xlat
and
pop
adc
xor
adc
cs
loop
mov
mov
lcallw
xchg
adc
js
jno
dec
bound
dec
sbb
mov
repz
pop
sub
data16
mov
jae
push
lret
jae
sbb
and
add
add
sbb
or
mov
fmull
mov
dec
cmc
mov
ret
sub
in
cwtl
outsb
int
int
test
lret
flds
xor
or
leave
pusha
test
cmp
mov
mov
nop
sub
addb
cld
jbe
ja
jl
pop
adc
stc
xor
jnp
inc
dec
leave
enter
lcall
xchg
popa
mov
cmp
pop
into
dec
xchg
outsb
add
lods
out
outsl
mov
clc
mov
sbb
in
clc
sub
cmc
test
ja
mov
cld
and
cmp
cmp
push
popf
test
enter
sub
xlat
pop
mov
adc
in
test
push
ret
out
sbb
jp
imulb
rorl
jge
fists
mov
lods
jo
sub
push
repz
ds
lret
cmp
rcr
inc
sarb
scas
pop
out
insb
lods
pusha
push
mov
outsl
add
mov
sub
pop
hlt
push
data16
ss
mov
push
or
rcrb
jns
fsubl
loope
xchg
xchg
pop
cmc
push
test
adc
pop
sub
imul
sbbl
xor
cmp
xor
and
lock
push
lods
mov
out
jne
out
dec
movsl
insl
pop
lods
js
fildll
movsl
insl
js
cmpsb
lret
sub
cmp
lods
jl
pop
pop
mov
aas
cmp
insb
mov
bnd
xchg
and
jecxz
sub
aaa
jle
sbb
cmp
andl
pop
jae
mov
cmp
lods
test
add
add
imul
jmp
dec
iret
das
pop
aam
test
sub
imul
sub
mov
pushl
andl
cmp
imull
rep
shrb
pop
ret
rcll
sbb
repz
add
out
xor
out
and
fcmovnbe
cmp
in
mov
lock
mov
and
unpckhps
test
shll
popa
mov
push
fcompl
or
xor
fimuls
cli
inc
fnstenv
fcos
xor
cwtl
sbb
sbb
cld
and
mov
fists
adc
mov
and
xor
je
inc
lds
push
push
mov
dec
pop
jnp
pop
cmp
cmp
add
add
mov
es
sub
sbb
rorl
sbbb
inc
rorb
mov
jp
sbb
ds
ljmp
aam
dec
out
das
hlt
pop
dec
mov
xchg
js
cltd
mov
dec
cmp
and
push
pop
sbb
xchg
cmp
insl
lahf
testl
mov
cmpsb
cmc
pop
shl
lds
in
shrl
add
test
jmp
cs
or
repz
xor
xchg
hlt
push
xchg
push
mov
iret
or
test
adc
ss
jae
into
inc
call
mov
xor
pop
jge
xor
pop
dec
divb
jle,pt
notl
in
inc
push
inc
int3
ss
fiaddl
arpl
xchg
inc
mov
cld
cmpl
out
pop
aam
iret
sbb
in
mov
out
and
or
jl
push
inc
idivb
xor
pop
mov
lds
out
and
adc
adc
add
xchg
jl
pusha
mov
subl
adc
sub
push
xor
xor
push
jp
xor
pop
fwait
xchg
xchg
xor
add
xchg
dec
add
dec
mov
sbb
push
sbb
push
imul
pushf
push
ljmp
dec
stc
sub
outsl
add
xorb
into
xchg
jnp
ret
xlat
imul
lds
pop
inc
enter
jp
push
sub
sub
test
insl
xchg
mov
adc
mov
jno
cmc
sbb
xchg
mov
xchg
daa
ljmp
push
lods
mov
dec
ret
ret
dec
shrb
mov
mov
adc
inc
push
mov
dec
std
xor
js
enter
xchg
xchg
lea
xor
in
mov
push
and
icebp
dec
loop
pop
test
pop
cmp
loopne
push
test
add
mov
outsb
push
dec
xor
mov
cmp
cmpl
stos
pop
mov
mov
mov
pop
cmc
iret
sbb
jns
jmp
das
mov
scas
mov
scas
dec
add
sub
adc
xchg
or
iret
xchg
lcall
add
adc
adc
xchg
jns
mov
lds
cmpb
lcall
cmc
mov
cmp
mulb
jo
fcoml
cmp
test
xlat
sub
and
js
enter
push
shlb
inc
cwtl
in
mulb
psubw
outsb
mov
cmpsl
sbb
movsb
adc
pop
imul
mov
mov
nop
or
testl
mov
iret
cmp
mov
and
or
jge
or
pop
in
xor
les
inc
stc
scas
mov
popa
add
lahf
and
xchg
sub
or
mov
ljmp
dec
fidivrs
hlt
mov
loope
mov
out
shrb
lea
adc
mov
loopne
or
add
and
sbb
jmp
jg
fildl
add
jno
lea
jbe
dec
mov
dec
shlb
inc
in
cmp
test
adc
mov
sbb
push
xor
pushl
and
test
inc
cmc
pop
jo
push
mov
mov
leave
jne
sti
dec
push
leave
inc
sbb
inc
lods
sub
mov
fcoml
xchg
xchg
jle
scas
push
sub
gs
stos
mov
mov
rol
push
into
jecxz
pop
xlat
mov
pop
lret
test
rol
imul
mov
adc
cld
in
out
enter
adc
adc
xor
fsub
sbb
or
dec
pushf
aad
mov
in
mov
out
imul
inc
ret
shlb
mov
aaa
fisubrl
lahf
pop
aam
cmpl
mov
adc
dec
and
sbb
and
lods
insb
mov
fldl
add
inc
jp
cmpl
mov
fidivl
stos
mov
addr16
adc
xchg
ja
mov
lds
and
sbbb
ja
jl
mov
mov
ret
loopne
push
mov
clc
sbb
test
ret
es
add
loope
adc
inc
lods
out
cmpsl
into
into
int
rol
imul
sarl
pop
aad
inc
mov
adc
repz
mov
rcrl
mov
ret
ss
loop
mov
xlat
popa
int
shll
mov
add
xchg
cmp
adc
cmpsb
ss
rolb
mov
int
xchg
mov
mov
leave
jge
mov
test
add
imul
aaa
into
inc
jecxz
and
push
lret
dec
aam
sub
rcrl
outsl
xchg
cmpsl
mov
stos
sub
imul
dec
pop
mov
xchg
dec
dec
movsl
pop
add
inc
sub
pop
loope
sbb
dec
and
mov
popf
xchg
pushf
pusha
jbe
cmp
jb
mov
dec
in
icebp
jae
jecxz
mov
movsb
xor
lahf
inc
andl
shrl
mov
loope
pop
cmc
mov
add
lods
loop
in
or
adc
ret
adc
sub
adc
aas
cltd
shlb
outsl
xor
lahf
test
jmp
cmpb
xchg
sub
cmp
int3
mov
icebp
ss
mov
mov
mov
bnd
enter
lock
dec
fsubl
cmp
mov
in
stos
pop
sbb
xchg
lcall
xor
mov
out
xchg
fnstenv
pushf
push
add
jp
sub
mov
rcll
dec
movsb
cmp
xchg
les
mov
mov
push
mov
dec
cs
mov
cmp
jge
inc
imul
xchg
rorl
arpl
orl
mov
mov
push
sub
mov
xor
data16
jnp
stos
pop
cmp
mov
inc
bound
push
and
jbe
lret
and
mov
push
sub
in
inc
xchg
js
xor
or
stos
test
lret
out
adc
movsl
xchg
lods
push
stos
add
xchg
push
rclb
pop
mov
ret
fsubl
scas
dec
fisubrs
ficoms
xorb
adc
pop
lods
jmp
dec
mov
or
repz
push
es
lcall
rcrl
xor
inc
loop
aad
movsw
sub
je
inc
fcomi
xchg
inc
cmpsl
adc
push
mov
xor
jmp
lret
xchg
mov
ss
add
mov
adc
dec
out
add
test
cmp
pop
cmc
sbb
lock
das
cli
sub
dec
push
loopne
jns
std
and
clc
xor
inc
sti
sub
loope
push
and
jge
push
add
ss
mov
adc
incl
fwait
mov
add
scas
jb
add
jge
int3
xchg
out
test
lock
iret
iret
test
adc
xlat
fwait
loop
adc
xchg
mov
repnz
out
xchg
mov
popl
jns
dec
imul
fwait
sub
dec
mov
out
nop
sbb
cwtl
xchg
iret
fwait
in
mov
lret
clc
fildll
adc
das
in
xor
adc
adc
clc
xchg
rcr
dec
ljmp
pop
rclb
inc
leave
mov
fisubl
mov
iret
xor
push
xchg
lock
aam
test
faddl
icebp
sbb
xchg
lock
imul
push
xchg
cwtl
into
pop
rorl
icebp
ss
les
shlb
fadds
inc
nop
rcll
mov
add
and
push
call
add
mov
xchg
pop
js
aas
mov
sbb
sahf
pop
lock
aad
jne
sub
shlb
pop
jo
mov
and
nop
jnp
mov
xchg
sub
mov
repz
mov
mov
mov
jae
mov
mov
add
mov
mov
sub
in
jmp
lods
fsubs
push
lret
repz
sub
mov
mov
ljmp
pop
movsb
push
flds
pop
jl
pop
mov
out
dec
test
mov
decl
jno
add
adc
sbb
daa
pop
lcall
stos
jmp
adc
sbb
and
cmpsl
pop
xor
mov
movsb
test
jns
nop
lcall
adcl
inc
loope
xor
mov
and
adc
popf
rcll
std
add
rclb
test
push
jno
sbb
and
imul
cmpb
shlb
aaa
or
sub
loop
mov
sbb
in
shrb
fnstsw
pop
stc
scas
lcallw
scas
adc
lcall
mov
dec
push
enter
mov
push
jne
les
and
xor
andl
sub
inc
xor
sti
xor
pop
add
adcb
pop
cmp
mov
pop
jbe
test
pusha
or
stos
inc
push
mov
scas
sub
test
loope
mov
mov
fsubp
sub
dec
in
push
aam
out
and
fnsave
sahf
xchg
cmpl
cs
shrl
pusha
repnz
and
das
es
int
dec
shlb
and
jno
mov
clc
sub
pushf
sbb
cmp
cmc
lret
hlt
sbb
fscale
test
sbb
fisubrl
aas
add
xchg
xchg
outsb
pop
mov
cmpsl
sub
stos
xchg
ljmp
xchg
fiaddl
mov
cmc
dec
sarl
sub
xchg
jg
add
out
orl
and
repz
clc
push
mov
movsl
mov
jg
inc
loop
cltd
rolb
rcll
jnp
loopne
inc
fadds
mov
pop
rcl
mov
ljmp
ja
test
es
jmp
add
loopne
leave
aam
mov
lret
mov
jne
mov
cmp
mov
jno
or
insb
fcompl
bound
vprotd
jb
hlt
test
jns
or
xor
fiadds
sbb
and
mov
and
mov
sub
or
popa
clc
popf
xchg
pop
or
xlat
lock
shll
movsb
cmp
bnd
push
cmp
lds
mov
ret
mov
fs
imull
jnp
test
mov
jne
cmp
sti
jne
xor
leave
jge
fistpll
sbb
mov
cmc
mov
cli
bound
jae
je
lret
pusha
fwait
into
popa
leave
lret
inc
add
stos
jbe
mov
std
dec
inc
mov
mov
inc
sarb
outsb
add
push
jmp
xchg
ja
sbb
inc
pushf
or
and
hlt
nop
pop
aad
mov
push
stos
mov
outsb
add
popf
pop
xor
daa
push
adcb
push
push
popf
push
mov
icebp
jae
movsb
cmp
js
push
xor
es
insb
jb
dec
pop
fcoml
push
jmp
or
push
lret
and
popa
cs
inc
adc
lods
inc
pop
lock
stc
aaa
sti
lds
add
push
lods
ret
xchg
ds
outsl
popa
lods
dec
enter
inc
push
sahf
push
fbld
jbe
call
add
xor
inc
js
int
inc
or
popf
shlb
push
into
outsl
mov
pop
fcoml
dec
lock
or
push
aaa
arpl
inc
arpl
cmp
dec
ja
pop
cwtl
loopne
xor
mov
dec
push
imul
cmp
insl
xor
push
stos
sbb
jno
mov
sub
mov
jne
or
push
xchg
mov
data16
insl
aas
xor
mov
mov
addl
jecxz
mov
addr16
cmp
jns
into
xchg
cmp
sub
push
mov
cld
sub
fidivrs
jb
je
sbb
ret
out
xor
je
icebp
pop
jae
inc
push
pop
es
imul
mov
xchg
pop
pop
inc
test
push
inc
jle
jae
psubb
xchg
pop
add
rcll
mov
in
es
add
sub
dec
xchg
xchg
outsb
and
dec
cltd
cmp
sbbl
ds
lods
push
movups
sbb
lahf
xchg
das
repnz
xchg
dec
mov
lret
cmp
addr16
dec
popaw
loopne
inc
dec
lds
push
dec
leave
pusha
fidivl
pop
xor
jl
pop
inc
mov
xchg
or
ret
sub
nop
sbb
lcall
xchg
mov
fsubl
mov
in
negl
xor
sbb
pop
lcall
adc
stos
cwtl
mov
xor
jp
je
mov
in
inc
ret
es
lcall
cs
cmpsl
loope
and
repnz
push
mov
and
mov
dec
sbb
scas
inc
cmp
xchg
mov
loopne
mov
jle
les
testl
add
testl
daa
fisttps
inc
nop
add
xchg
cwtl
jecxz
sbb
or
stos
movl
in
xchg
imul
jg
sbb
ret
jne
xlat
arpl
sub
push
sbb
jecxz
jmp
cmp
sub
xorb
and
cmpsl
add
test
cmpsl
rcl
aam
out
dec
mov
or
mov
and
lcall
push
mov
mov
and
js
dec
adc
push
pushf
das
out
mov
pusha
fisttps
adc
sbb
out
xchg
sbb
bound
nop
mov
cli
or
aad
lahf
sub
js
shrb
lcall
sbb
mov
cmp
or
jnp
xor
jnp
dec
add
cld
inc
jmp
xlat
cmpsl
push
aad
lods
enter
stc
fwait
xor
mov
out
sub
cld
pop
bound
fiadds
pop
cli
xchg
outsb
push
mov
ja
and
push
push
cmpsb
data16
addr16
and
popf
test
hlt
sub
not
push
shlb
cmp
je
addl
xchg
lea
sub
and
and
jno
adc
cmp
push
pop
call
test
call
jae
and
and
push
outsb
je
push
pop
mov
add
fwait
popf
jl
cmp
xor
ja
xor
movsl
cmp
lock
ss
je
dec
adc
stos
xor
lods
inc
leave
cwtl
mov
lret
popa
sbb
aad
push
ds
mov
push
popf
ret
test
jecxz
mov
push
ss
fldenv
dec
in
mov
mov
fidivrl
or
mov
ucomiss
bound
lds
fsubrs
xlat
jecxz
or
testb
jnp
stos
lods
jl
mov
int
leave
mov
and
mov
jmp
je
mov
notl
call
lret
or
sbb
xchg
sub
jo
cld
popa
jns
stos
stos
addb
cld
aad
cmp
push
pop
testb
adc
movsb
daa
mov
icebp
and
xor
je
mov
xor
sbb
xchg
hlt
cmp
xchg
outsb
adc
lock
push
lea
ljmp
out
outsl
pop
mov
inc
ret
xor
stos
mov
inc
add
es
pop
pop
mov
dec
mov
in
cmc
aad
push
pop
add
dec
mov
stc
sahf
daa
xor
scas
push
scas
inc
test
dec
movsl
repz
call
inc
inc
in
frstor
pop
icebp
xor
js
jl
out
test
sahf
push
ss
inc
or
movsl
mov
das
push
cmp
and
jle
lods
xchg
add
inc
arpl
inc
mov
dec
xchg
inc
outsb
jb
push
xor
sahf
mov
xor
stc
or
xchg
lea
dec
mov
fcomps
xchg
or
jbe
lods
mov
dec
inc
fdivs
sbb
mov
mov
cmpsl
xchg
jecxz
arpl
lret
jns
and
pop
cmp
pand
aaa
incb
fldl
data16
add
cmp
sbb
xor
das
mov
cmp
fsubrl
arpl
pusha
mov
pop
jne
les
xor
call
popa
lret
mov
mov
xchg
inc
mov
lds
cs
pop
adc
jns
dec
lods
dec
ret
dec
fsubrs
pop
movmskps
shlb
sbb
and
pop
mov
push
ret
shl
repnz
fcomps
shll
sub
mov
mov
xor
dec
sub
movsb
lods
lock
icebp
imul
inc
push
fimuls
push
pop
mov
push
cmp
orl
addl
inc
lcall
addr16
mov
bound
outsb
mov
mov
test
xchg
xchg
fwait
mov
shrl
xchg
mov
out
lock
mov
and
or
inc
stos
xchg
or
inc
cmp
or
fucom
outsl
mov
or
push
sbb
int3
mov
sahf
sahf
or
in
and
sub
cmovns
jecxz
mov
inc
in
pop
sbb
jmp
or
mov
std
pop
mov
out
outsb
jnp
add
pop
jae
mov
push
mov
in
cmc
gs
pop
sub
repz
dec
xor
jge
aaa
pop
push
repz
sbb
xlat
loope
lods
test
xlat
sub
sub
outsb
mov
mov
test
inc
jge
outsl
icebp
mov
sbb
jecxz
pushf
mov
loop
jno
jp
jb
ja
fbld
add
cld
or
or
push
or
popf
cmp
push
xchg
ds
pop
mov
dec
xor
inc
loope
xorb
sub
repz
pusha
xchg
sub
mov
aas
in
add
clc
pusha
mov
inc
or
push
mov
lods
adc
stc
mov
push
mov
shr
test
lods
shlb
adc
xchg
xor
cmp
fcmovnb
mov
add
cmpsb
cmp
adc
js
ret
push
add
stc
iret
mov
lods
inc
lds
cs
or
les
into
gs
in
mov
sub
sbbl
in
mov
in
je
orb
inc
adc
adc
xor
and
push
and
aam
jae
cmc
or
ret
lock
mov
ret
xchg
or
mov
test
fcomps
xlat
jg
test
jae
fidivs
mov
mov
ret
xchg
mov
pop
pop
outsb
adc
jbe
xor
mov
stc
pusha
lds
scas
xchg
int3
xchg
pop
fsubs
test
lea
add
test
push
call
lea
mov
lret
push
pop
sbb
rorl
inc
xor
pusha
out
and
popf
pop
test
lret
mov
push
std
adc
or
je
lret
ficoml
xor
dec
adc
push
decl
aad
xchg
xchg
ljmp
xchg
data16
sub
dec
decb
repnz
iret
loope
mov
ret
sbb
stos
das
lock
and
nop
jae
pop
rol
xchg
cmp
xor
mov
or
cmp
imul
add
out
ret
inc
or
fisttpl
rcr
repz
mov
fldl
cmp
test
pop
sbb
jl
pop
dec
push
clc
rorl
xchg
aaa
inc
mov
stos
xor
data16
mov
jae
sbb
hlt
mov
jbe
bound
lods
xor
sub
out
sub
out
repz
leave
xchg
cmp
orb
negl
sbb
dec
push
in
sbbl
mov
add
add
leave
xchg
out
jb
push
inc
or
dec
jge
or
and
out
inc
pop
inc
xchg
cmp
mov
xchg
sbb
push
lds
flds
fiaddl
cmp
sarb
xchg
imul
insb
xor
in
mov
push
hlt
xchg
cmp
push
std
sahf
lea
mov
mov
loope
sbb
jnp
test
out
fs
ds
add
mov
fnstcw
lods
xor
push
jnp
jae
xchg
stc
fdivr
pop
dec
loop
pop
push
jno
or
mov
repz
push
popf
cmp
mov
pop
sub
ss
in
and
jmp
icebp
cli
pop
push
xchg
xchg
or
adc
mov
sbb
clc
movsl
ss
adc
xor
mull
add
sbb
sub
loope
out
inc
cld
and
in
pop
aam
xor
xlat
test
fcmovu
jl
mov
adc
jnp
shll
mov
mov
sbb
jmp
into
mov
inc
adc
jecxz
xchg
and
aam
jle
xor
stos
out
imul
ds
mov
out
stc
sbb
pusha
add
movsl
xor
jecxz
aas
addb
adc
dec
inc
adc
loope
jp
pop
pop
mov
cmp
popf
cmp
cmp
adc
lods
icebp
dec
mov
subl
and
aaa
fs
aaa
push
sub
lds
scas
and
push
dec
or
out
es
out
mov
aad
mov
or
push
and
mov
jae
nop
subl
les
pop
jg
cmp
or
mov
int
shll
mov
mov
xchg
psrld
sub
cmpsl
jnp
test
cmpsl
das
add
leave
lea
pusha
mov
scas
dec
fisubl
in
es
pop
xchg
or
out
fldcw
lea
fisubrl
sub
nop
imul
add
pop
lods
inc
lea
arpl
shl
rolb
xor
test
lea
rolb
fstpt
xchg
popl
or
sub
lahf
cmp
xchg
jge
rclb
mov
nop
cmp
or
xor
pop
adc
out
dec
pop
shr
mov
daa
test
and
mov
nop
inc
push
mov
push
pop
pop
xchg
inc
jno
xchg
inc
outsl
outsl
mov
sbb
inc
xor
das
push
nop
inc
xor
les
dec
push
shr
scas
inc
ret
pop
and
mov
popf
jo
mov
into
sarl
fisttps
rol
xor
or
stos
int3
jne
loope
cs
repnz
pop
mov
xor
and
jle
add
push
mov
mov
jge
je
and
fcompl
xor
adc
inc
stos
lock
bound
cmp
pop
pop
mov
nop
mov
sub
push
sti
mov
lods
xchg
ja
push
repnz
loope
sbb
push
cmpsb
sub
jnp
xchg
jnp
enter
dec
xchg
data16
sti
push
jbe
sbb
mov
pop
dec
cmpsb
sub
mov
xchg
sbb
sbb
xchg
cmp
dec
jg
sub
dec
adc
out
push
fdivl
xlat
jnp
adc
sub
mov
das
mov
js
mov
push
sahf
inc
sbb
push
dec
pop
lret
push
or
sub
mov
sbb
dec
cmpsb
sub
fstl
dec
cli
gs
adc
push
xchg
mov
shlb
fsubrl
push
stc
or
or
repz
popaw
sbbl
mov
scas
push
stc
in
push
cli
bnd
in
jmp
popf
call
incb
fcmove
mov
jp
data16
or
push
mull
jmp
mov
stos
ss
mov
dec
adc
dec
adc
in
nop
ds
sti
arpl
or
out
aad
lcall
add
xlat
push
insl
in
test
rorb
and
mov
out
jns
jecxz
xlat
test
mov
dec
outsb
stos
mov
mov
mov
xlat
test
push
shll
push
add
or
popa
jl
jl
jl
stos
sub
adcl
mov
pop
insb
in
or
mov
mov
sahf
cmp
jl
orl
mov
bound
lods
icebp
popa
jmp
mov
and
aas
into
mov
iret
jae
aam
aas
fwait
call
hlt
mov
xor
jle
xlat
xchg
mov
js
lret
rorl
out
sbb
jbe
push
pop
stc
mov
stc
pop
pop
jl
incl
push
add
or
lahf
movsl
sbb
pop
lret
mov
fs
mov
out
addr16
stos
in
imul
dec
xchg
sbb
xchg
mov
fs
movsl
xor
dec
shl
push
add
push
pop
adc
ror
and
push
pop
xchg
pop
xor
insl
in
or
shl
in
jae
add
repnz
mov
mov
outsl
sub
negb
cmp
cmp
mov
pop
pop
or
aam
andb
subl
pop
ljmp
push
adc
lock
bound
lds
lds
int
aaa
cwtl
inc
bound
sbb
lods
fwait
cmp
jno
xchg
lea
in
out
push
jno
xchg
sub
loope
in
nop
daa
inc
data16
xchg
cwtl
fs
jae
pop
int
fs
or
adc
or
pusha
adc
fcmovb
into
xchg
sub
or
in
xchg
adc
rolb
jns
roll
mov
or
in
mov
xchg
aas
lcall
and
mov
cmp
stos
xor
push
test
cmp
push
jae
pop
cli
mov
stos
pusha
ret
xor
mov
cmp
add
xor
sub
leave
enter
repnz
cld
mov
insb
xor
sbb
ljmp
outsl
inc
sbb
sbb
cmc
jle
nop
inc
loope
test
pusha
enter
jbe
sbb
sahf
pop
add
sbb
fdivrs
sbb
adc
lret
cltd
pop
xchg
shl
pop
add
in
jb
jmp
movsb
sub
push
loop
or
sbb
sti
pop
inc
adc
fsts
lds
jbe
add
cmp
lea
in
pop
dec
inc
fstpt
xchg
sahf
cmp
aad
jle
add
shrl
stc
pop
lods
xor
pop
mov
js
mov
push
jp
sti
pop
xor
jecxz
inc
sub
add
mov
mov
dec
or
les
outsl
fbstp
lahf
jb
cmc
xor
jl
in
fidivs
sti
xchg
inc
adc
jmp
rorb
insb
push
lods
sub
je
fnstsw
pushf
fs
int
push
cli
xchg
push
jge
push
lds
mov
lods
xor
cmc
inc
push
stc
data16
in
ja
shlb
movsl
push
sti
sahf
sahf
cld
pop
lret
xor
sti
popw
fs
pop
sbb
push
sbb
xchg
cltd
push
pop
add
dec
out
inc
or
aam
stos
xor
or
loopne
in
imul
mov
fldl
aam
push
int3
mov
dec
sahf
cmp
shl
call
cmc
jns
aas
jb
mov
out
push
stos
lods
daa
movsl
xchg
aas
lcall
icebp
arpl
in
mov
or
cld
pop
dec
sbbb
adc
test
fbstp
mov
jecxz
pusha
and
test
mov
mov
les
adcl
push
iret
shlb
xchg
push
cmp
mov
mov
or
pop
mov
rolb
lahf
pop
cld
pop
lods
dec
push
sub
mov
xor
mov
xchg
inc
sti
call
ds
test
mov
negb
jge
inc
movl
lcall
popl
jge
pop
scas
ror
gs
push
jp
fnstcw
pop
add
pop
mov
dec
jp
in
je
out
sub
inc
or
cmp
enter
jmp
dec
lds
jle
insb
out
sub
mov
mov
scas
dec
cmpb
push
sub
inc
jnp
rcr
xchg
adc
lret
add
dec
adc
sti
insb
xchg
push
add
jbe
xor
mov
insb
in
fsubrl
sahf
cmp
scas
sub
sbb
dec
es
mov
mov
or
sti
imul
std
adc
sbb
jo
test
gs
xchg
pop
inc
fadds
xchg
lods
or
addr16
inc
sqrtps
jae
out
xlat
mov
cmc
or
gs
dec
or
mov
lds
push
jmp
jge
or
mov
mov
ret
lahf
mov
pop
mov
shl
mulps
dec
stc
fs
mov
cmpsb
mov
jle
lods
daa
jne
xchg
inc
sbb
js
inc
sub
insb
sub
jg
pop
testl
cmp
sub
xor
mov
mov
es
xchg
lock
inc
nop
aam
fadds
sbb
pop
pop
cld
cltd
nop
add
sbb
inc
fstpt
fstpt
pop
sti
mov
inc
adc
stos
sub
test
cmpsl
das
outsb
dec
add
inc
jb
xchg
movsb
popf
call
push
lock
push
scas
cltd
pop
add
mov
nop
cmp
cltd
inc
shlb
ret
xchg
add
mov
lds
test
popf
inc
adc
out
jno
push
inc
or
pop
pop
push
push
dec
adc
rorb
aad
inc
add
mov
cmpsb
pop
sti
dec
and
in
mov
adc
rclb
test
fidivrs
mov
push
es
jnp
cmp
xchg
inc
cltd
arpl
fwait
repz
inc
ljmp
mov
pop
sti
pop
fdivs
in
out
jmp
mov
test
es
insl
pop
testl
int3
xchg
das
test
sbb
pushf
test
jg
daa
in
push
lea
ret
adc
out
out
dec
aad
sbb
jbe
pop
inc
rcll
call
int3
xchg
and
sub
or
dec
adc
cmp
ds
push
nop
cmp
mov
fistpll
mov
ja
cs
ret
add
sbb
bound
aas
jae
ret
jne
sbb
sarb
scas
andl
xchg
icebp
fimull
mov
cmpsl
cs
inc
inc
or
leave
loopne
stos
push
fs
adc
xor
mov
ljmp
add
test
sbb
lods
push
imul
gs
jl
in
mov
shl
sub
sbb
pop
or
pop
imul
ss
push
shlb
fadds
pop
pop
sti
xor
cmp
out
outsb
in
ja
stos
scas
cmc
pop
ret
adc
ja
lods
test
and
pop
mov
arpl
lds
enter
xchg
andl
jno
mov
sbb
clc
or
sar
lock
ret
or
andl
mov
nop
cmp
shr
xor
repnz
stc
out
dec
loop
lret
lea
out
test
lcall
sub
scas
ljmp
in
xor
sub
pop
sbb
loope
inc
jns
mov
xchg
or
lret
mov
pusha
and
mov
inc
lcall
xchg
xchg
into
aam
jo
sbb
jno
mov
int3
jmp
xlat
jns
jmp
lods
push
jle
lret
xor
pop
mov
icebp
fisubrl
mov
jmp
inc
or
sarl
mov
mov
test
mov
or
cmpsl
pop
cli
clc
pop
icebp
arpl
and
mov
jnp
xchg
out
enter
pop
jmp
jmp
mov
lret
aaa
mov
sbb
jl
sbb
mov
jecxz
cs
imull
mov
lea
push
std
sbb
dec
xorb
cltd
mov
movsl
sti
jecxz
mov
in
iret
lcall
mull
mov
inc
dec
mov
dec
or
xchg
int
pop
cld
jp
or
loope
bnd
xor
jne
cmp
push
pop
sub
lock
push
fisubrl
ret
pop
out
jae
sub
notb
and
jecxz
inc
jmp
test
mov
add
push
das
xchg
cmp
dec
adc
dec
jp
cmp
sbb
jnp
and
lcall
arpl
push
add
dec
xor
dec
loope
daa
mov
cld
cmp
int3
int
push
pop
adc
jns
test
int
imul
mov
aas
movsb
and
cmp
sahf
xor
mov
mov
jmp
mov
mov
test
sbb
inc
xchg
xchg
cmp
cwtl
sub
pop
cli
and
leave
lock
fildll
and
pop
pop
lods
sti
pop
stc
repz
gs
dec
or
inc
les
xchg
test
pop
iret
jle
cmp
lcall
ret
test
mov
imul
outsb
ljmp
cmc
popa
test
mov
and
aad
or
xor
sti
adc
mov
mov
outsb
aas
mov
jns
sbb
in
imul
push
add
sbb
cmpsb
pop
sub
icebp
cmpl
lods
sub
adcb
xchg
aas
dec
rcrb
fists
lods
sub
test
push
mov
cli
pop
push
movsl
cwtl
and
and
adc
pop
sar
add
mov
pop
jmp
repnz
adc
mov
fistpll
clc
push
add
lcall
pop
fcmovnbe
or
movsb
add
shlb
pop
icebp
fs
cmp
xor
mov
push
pop
enter
adc
mov
scas
int3
mov
mov
dec
adc
lcall
shll
adc
sbb
add
mov
mov
mov
dec
adc
cmp
mov
fisubl
xchg
popf
push
mov
fadds
adc
mov
fwait
cmp
sahf
cmp
xchg
mov
cmp
scas
test
mov
sbbb
mov
and
into
jmp
fisttpl
fbld
cmp
mov
filds
cmpsb
mov
xor
mov
cmpsl
xorb
mov
aad
xchg
fstps
pop
rcrl
nop
out
dec
sub
push
sarl
sub
mov
in
rclb
les
push
add
dec
test
mov
hlt
mov
pop
xor
mov
add
adc
orb
add
inc
mov
sarb
cwtl
inc
or
cwtl
pop
add
shrb
movsl
inc
pop
popa
out
and
xor
add
xchg
mov
movsb
in
insl
dec
cmpsb
stos
sub
test
dec
sub
mov
cmp
add
cmp
out
xor
and
orb
pop
mov
jo
mov
sbb
out
outsl
cmp
mov
jecxz
lahf
sbb
cmc
aas
inc
push
fsubr
or
jb
ds
lock
loope
loopne
mov
fadds
sub
add
lea
faddl
sbb
push
add
inc
mov
loope
loopne
int
int3
mov
shl
ja
xlat
xchg
or
xchg
cmp
ret
cmp
push
xchg
pop
push
movb
jbe
inc
push
sahf
inc
out
mov
clc
xor
ljmp
sbb
insl
out
inc
push
add
scas
xor
or
xlat
jl
push
and
xchg
in
iret
xchg
das
ret
mov
psrlq
inc
add
cmp
or
jge
das
mov
outsl
xor
push
in
loopne
mov
push
stc
dec
mov
xchg
aaa
fiadds
stc
adc
sbb
jne
inc
addr16
scas
xor
xchg
cmp
cwtl
jmp
xor
push
fldenv
fwait
inc
loope
sub
pop
pop
cmc
pop
ljmp
movsl
cmp
and
push
jle
mov
repz
lret
scas
fsubs
into
xchg
cmp
adc
push
sub
adc
std
jnp
mov
lods
and
loopne
sub
icebp
xor
mov
call
dec
adc
fs
lds
inc
jne
cld
pop
mov
xchg
lods
fdivrs
cmp
add
sahf
ds
in
cmp
in
clc
gs
or
pop
ret
xchg
cmp
faddl
pop
mov
pop
imul
pop
xlat
insb
jmp
cmc
and
les
in
test
or
and
repnz
push
out
sbbb
and
mov
adcl
mov
rolb
and
xchg
pop
push
clc
cmp
sbb
sti
adc
negb
out
das
pop
stc
and
incl
xor
sbb
push
call
orl
cmc
push
nop
mov
pop
test
dec
cwtl
das
adc
mov
push
es
dec
jecxz
cmp
and
push
mov
not
and
inc
adc
push
aam
inc
loope
xchg
into
movsb
sub
les
fwait
aaa
sarl
into
jg
mov
mov
imul
bound
pop
test
cwtl
pop
shll
jb
push
mov
jns
push
enter
cmp
std
pop
add
fldenv
sbb
lods
xor
mov
xchg
cmp
aas
sbb
xchg
loope
cltd
shll
cwtl
fxch
lahf
aas
orb
icebp
mov
inc
or
imul
orl
pusha
mov
or
pop
mov
lds
lret
lahf
aas
mov
stos
popa
lock
fistpll
in
and
lds
inc
add
push
add
cld
adc
mov
jne
test
inc
adc
or
iret
dec
jp
mov
cmpsb
mov
mov
outsb
in
test
dec
pop
popa
arpl
leave
xchg
mov
mov
iret
lea
test
scas
flds
xor
ja
sti
sbb
cltd
aam
add
int3
filds
jno
mov
outsl
or
outsb
add
push
mov
scas
mov
or
rcrl
les
xor
in
cmp
rcrl
lds
and
add
pop
cmp
addl
repz
subl
insb
xchg
in
inc
cs
sbb
ret
adc
or
jecxz
or
pop
xchg
sub
stos
pushf
inc
xchg
dec
adc
fadds
lret
sub
leave
mov
sarb
pop
add
mov
xchg
iret
adc
ret
adc
imul
inc
cmc
xor
or
sub
into
loope
mov
xchg
das
outsl
movsb
cmp
mov
push
movsb
push
push
pop
lcall
lahf
testb
and
mov
pop
in
psrlq
inc
negb
or
xor
scas
int
sahf
pop
adc
push
mov
sbb
roll
int3
pop
push
arpl
mov
xor
clc
repz
xchg
in
inc
or
into
xchg
mov
inc
or
cmpsb
xlat
jp
add
and
movsb
sub
xor
xchg
aaa
cltd
xlat
test
cmpl
and
push
push
dec
add
dec
test
imul
inc
jl
fnstsw
sbb
in
mov
pusha
icebp
add
fidivrs
pop
bswap
pop
adc
or
pop
mov
lea
inc
adc
mov
test
jne
fs
jg
push
leave
add
movsb
lret
fucom
adc
test
jne
push
addr16
jle
add
lods
outsl
cmp
mov
xchg
aaa
repz
pop
add
in
mov
xchg
sub
add
jo
mov
cmp
cmp
das
and
jne
mov
jp
xor
int3
jge
mov
iret
lea
dec
sbb
ja
or
mov
frstor
mov
mov
pop
std
fstpt
sbb
push
imul
ja
add
frstor
xor
pop
fmuls
popl
cmc
mov
push
lods
outsl
movsl
adc
mov
mov
cmpsb
in
hlt
je
xor
in
xor
xor
mov
xor
pop
sti
pop
sub
test
pop
jb
fs
xchg
rorl
fwait
adc
push
loope
pop
add
stos
int3
or
add
push
jge
sbb
inc
or
notl
inc
xor
mov
out
and
pop
rcr
cld
pop
rorl
popa
cmc
loopne
mov
jb
and
sbb
dec
mov
push
mov
cs
mov
mov
into
lock
xchg
orl
dec
adc
xchg
dec
adc
mov
pusha
pop
xor
out
popf
aas
cli
hlt
in
jo
lock
or
iret
nop
lods
pop
inc
push
fstpt
dec
icebp
xor
enter
inc
ficoml
pop
push
add
jle
sarl
jns
sub
or
dec
xor
add
fdivl
jae
push
mov
pop
and
pop
mull
sbb
ljmp
push
shll
xchg
rcrb
addr16
add
stos
inc
inc
pop
mov
pusha
inc
scas
lods
xor
cmpsb
repz
push
popa
xchg
cmp
mov
repz
pop
mov
cmp
lcall
andb
loop
enter
ljmp
dec
jne
cwtl
fstpt
mov
sti
lods
test
mov
mov
cmp
add
pop
push
movsb
xor
movsl
lods
inc
fnstenv
out
test
cmpsl
cs
jae
test
pop
es
cmp
loop
sub
jl
inc
je
cmp
or
fdivrs
pop
pusha
cmpsl
sub
gs
and
adc
cmp
and
pop
sub
aas
out
push
push
mov
xor
mov
mov
xchg
inc
movb
imul
xchg
mov
add
test
add
test
cmc
sub
xchg
and
mov
mov
inc
mov
mov
mov
inc
ss
loope
push
add
cli
pop
dec
pop
stc
ss
popa
out
mov
mov
stos
jns,pn
jnp
iret
cbtw
cmp
adc
lods
arpl
mov
jbe
and
push
insb
lock
nop
pusha
hlt
xor
adc
jo
push
inc
adc
mov
data16
add
push
test
jbe
add
push
ljmp
or
das
add
jp
pop
push
xor
leave
inc
lret
sbb
nop
aas
inc
add
sahf
sahf
add
sbb
movsl
in
das
scas
icebp
lods
sub
inc
adc
test
push
mov
das
and
pop
pop
aas
dec
jg
push
mov
ret
mov
cmpsl
sub
lret
cmpsl
xor
shlb
lahf
xlat
add
xchg
stos
mov
ljmp
je
jecxz
test
rolb
push
jne
cld
ljmp
pop
popa
sub
xor
jnp
push
leave
loop
lock
adc
and
xor
lea
jg
mov
cmp
or
push
daa
es
dec
adcl
adc
push
mov
cmp
xor
push
cs
jnp
xchg
inc
add
or
mov
pop
mov
mov
lcall
out
sub
and
sbb
pop
xor
std
mov
mov
popa
jle
cmp
adc
lret
mov
imul
dec
loop
bound
jge
scas
ret
push
mov
add
dec
mulb
pusha
xchg
inc
in
pop
std
push
sub
xorl
push
loopne
out
insb
aas
cld
pop
std
jo
jp
push
insb
popf
cmp
fdivr
pop
aam
in
addr16
push
add
sub
mov
mov
add
in
mov
data16
push
inc
pop
ret
xchg
sub
cld
pop
outsb
fs
test
jnp
adc
out
fidivs
repnz
xor
addr16
xchg
pmullw
mov
mov
jmp
cli
cmp
adc
jecxz
dec
adc
hlt
and
cmp
xor
jae
leave
mov
fcomi
iret
pop
ret
add
mov
aam
adc
clc
bound
sub
mov
jecxz
push
hlt
clc
sub
and
jnp
sub
daa
test
cwtl
pushf
orb
jp
xor
xor
cmp
aad
cli
fs
add
xchg
inc
cltd
mov
xchg
inc
pop
mov
iret
mov
sbb
in
fistpll
aam
pusha
lea
lcall
mull
movsl
loope
mov
mov
rolb
inc
pop
dec
or
leave
or
outsb
and
nop
jae,pt
in
aas
pop
scas
jo
sub
xchg
test
out
outsb
add
pop
iret
out
xchg
xor
mov
int
jg
leave
pop
xor
sub
sub
jnp
xor
xchg
or
xchg
mov
inc
sbb
test
or
jmp
cld
repz
out
sbb
fdecstp
nop
cmp
push
cmp
test
sbb
jmp
cmp
cld
add
int
jmp
push
jb
mov
jo
jbe
pusha
push
mov
push
push
and
pop
inc
mov
push
mov
rcrl
mov
test
dec
cld
arpl
add
das
pop
sti
adc
mov
add
rolb
test
fdivrs
loopne
mov
cmpsl
xor
ret
loope
mov
ffreep
jb
mov
sub
cmp
pop
shl
pop
rclb
xchg
aam
lods
sub
or
inc
mov
lods
mov
mov
aad
mov
stos
rorl
sub
pop
add
mov
pop
ret
arpl
push
add
das
sahf
xorl
sub
leave
xchg
mov
popf
aas
cli
fcmove
xchg
xchg
notb
rcll
repz
or
xor
ret
mov
sub
ja
ljmp
jne
inc
adc
in
fwait
pop
std
mov
mov
test
jb
fsubrs
xchg
mov
pop
push
jae
cmp
mov
int3
int
mov
shll
sbb
out
add
mov
xor
sub
mov
inc
pop
lret
or
fisttps
mov
or
mov
dec
inc
inc
adc
scas
dec
or
mov
jbe
loope
sahf
adc
std
xchg
cs
out
jb
mov
mov
jmp
mov
out
leave
cld
data16
out
mov
mov
cmpsl
pushf
cmp
int3
out
add
int
pop
test
nop
push
jmp
scas
aas
mov
pop
in
add
push
je
xchg
ds
movsb
xor
fists
cltd
hlt
push
call
inc
orl
push
push
jmp
hlt
jb
insl
and
cltd
and
aaa
sarl
aam
or
jae
mov
imul
hlt
pop
stos
out
jl
jo
push
inc
scas
loopne
jmp
mov
jae
out
cli
mov
mov
out
mov
inc
repz
fwait
repz
pop
divl
scas
jo
xor
inc
adc
mov
arpl
add
es
out
pop
scas
or
roll
adc
jae
dec
mov
adc
test
shll
push
jge
push
lret
rcr
adc
pop
out
pusha
push
jnp
sbbl
xor
arpl
pop
repz
xchg
insb
pop
add
enter
pusha
mov
jle
sahf
int
popf
xchg
mov
ret
or
shrl
mov
add
xor
lret
es
daa
inc
or
aam
add
ret
repnz
push
in
cmp
fists
mov
das
push
stc
pop
mov
jp
mov
rcll
fildl
sbb
mov
lea
stos
push
sub
daa
jns
cwtl
inc
imull
sti
sahf
jecxz
mov
sbb
or
dec
jp
aas
and
xchg
jnp
lret
xchg
clc
outsb
orb
outsl
lock
aaa
dec
bswap
enter
and
mov
mov
jmp
lret
insb
or
pop
lcall
push
cli
dec
sub
push
outsb
inc
or
or
test
or
mov
test
iret
xchg
adcl
fmull
fcmovbe
jnp
and
mov
outsb
hlt
icebp
mov
filds
mov
mov
insl
cmc
cmp
test
sti
fiadds
pop
add
inc
cltd
js
lret
pushw
movsl
xchg
in
xchg
sub
ljmp
loop
xchg
shrb
pop
imul
pop
mov
push
jecxz
push
movsl
imul
ret
mov
fmull
or
cs
xchg
das
addl
cmp
mov
ret
cmc
pop
icebp
es
ja
inc
js
jns
xchg
add
sbb
push
out
mov
and
movsl
inc
shrb
pop
out
notl
push
dec
out
movsl
sbb
sahf
cmp
push
mov
icebp
mov
mov
push
lock
mov
movsb
cmp
ret
pop
dec
loop
sub
ja
mov
add
jnp
xchg
lods
add
mov
push
cmpsb
cmp
push
test
pop
lock
lds
testl
sub
shrb
dec
popf
repz
and
shrb
inc
pop
icebp
jbe
icebp
mov
bswap
gs
cmpsb
xchg
ljmp
jmp
or
nop
shrb
pop
push
mov
lock
ss
movsl
add
mov
mov
fimull
or
push
cwtl
jg,pn
sbb
adc
cmp
cmp
pop
push
hlt
pop
repnz
inc
jns
js
xchg
cltd
xchg
cs
pop
sbb
dec
push
jb
shlb
les
cmc
xchg
icebp
mov
push
js
dec
in
cmpsb
push
push
sub
push
mov
mov
fldt
or
xchg
pusha
mov
cmpsb
call
or
lds
aam
pop
push
pop
dec
jecxz
daa
loope
pop
scas
push
loopne
call
xor
sbb
xchg
cmp
push
cmpsl
lds
pop
icebp
mov
les
testb
jle
xchg
cs
lahf
pop
mov
push
dec
pushf
icebp
cmp
push
inc
pop
bnd
repnz
jns
adc
sbb
mov
insl
or
cmp
imul
loope
mov
scas
mov
loope
add
les
fmuls
or
imul
sub
dec
and
add
ret
pop
push
repz
repz
loope
stos
inc
jp
ja
call
lret
mov
jmp
dec
sbb
ds
jo
pop
icebp
hlt
xchg
repnz
adc
adc
fwait
ss
mov
out
mov
paddq
fisubrl
or
repnz
mov
cmpsl
out
cmpsb
cmp
cmp
les
pop
dec
in
es
pop
lods
imul
jns
xchg
stos
add
mov
push
test
test
pop
fsubrs
repnz
ret
hlt
dec
add
inc
sahf
and
lcall
imul
pop
repz
repz
jp
bound
test
out
das
sbb
mov
insb
pop
dec
in
aam
mov
loopne
mov
lods
mov
fbstp
adc
xor
pop
test
dec
jecxz
cmpsl
in
fldcw
push
pop
cli
add
scas
dec
and
add
les
icebp
pop
hlt
and
jns
inc
jnp
jne
add
enter
dec
jmp
cmp
insb
outsb
rcrl
repz
adc
inc
loop
test
addr16
das
cltd
xor
gs
dec
in
or
imul
popa
repz
mov
test
jle
ds
xor
aaa
rol
pop
add
in
and
jp
stos
insb
add
ja
cwtl
test
mov
xor
pop
mov
push
test
sbbl
dec
movsb
pop
outsb
pop
repz
mul
jnp
sarl
dec
add
inc
pushf
and
cltd
out
ds
mov
pop
repz
hlt
mov
jp
les
test
pop
mov
in
mov
push
dec
out
mov
imul
repnz
lods
mov
fidivs
adc
xor
pop
test
dec
jecxz
cmpsb
in
fsubrs
push
pop
stc
add
scas
dec
and
add
les
lock
hlt
and
jns
inc
jnp
je
add
sbb
mov
call
cmp
insb
insl
rcrb
mov
mov
adc
inc
loope
test
cbtw
das
cwtl
xor
fs
dec
in
or
insb
xlat
imul
pusha
repz
mov
test
jge
ds
add
lds
dec
in
and
jp
stos
insb
add
jbe
cwtl
cmpsl
std
mov
das
leave
pop
mov
push
test
sbbb
aad
mov
pop
repz
mul
jnp
sarb
dec
add
inc
fwait
and
cwtl
in
ds
mov
pop
repz
hlt
mov
xchg
jp
ret
pusha
adc
push
mov
in
mov
imul
insl
add
mov
stos
mov
fnsave
adc
xor
pop
adc
jecxz
movsl
in
xlat
daa
push
pop
clc
add
lods
dec
and
add
les
out
pop
hlt
and
jns
inc
jnp
jae
add
sbb
mov
out
dec
sbb
aam
cmp
insb
insb
mov
repz
loopne
test
gs
das
xchg
xor
arpl
dec
in
or
insb
cmp
pop
repz
mov
test
jl
ds
add
xor
push
dec
in
and
jp
test
add
cs
dec
test
sbbl
pop
aam
pop
repz
cmc
in
daa
mov
add
inc
lcall
xchg
in
ds
mov
pop
rep
or
mov
nop
jp
ret
test
adc
ss
push
mov
imul
repnz
stos
mov
fsubrl
adc
das
subb
mov
pop
adc
jecxz
movsb
in
es
pop
testl
pop
lods
dec
and
lcall
lds
pop
hlt
push
je
jp
aas
jnp
jno
add
les
and
pop
insb
ds
cmp
insb
push
pop
repz
mov
mov
ficoms
test
fs
xor
mov
dec
jmp
or
insl
cmp
imul
pop
hlt
mov
mov
test
lods
add
enter
pop
call
out
and
jnp
cmpsl
insl
add
jae
cltd
movsb
cli
mov
sub
and
jg
aas
dec
mov
pop
hlt
fwait
repz
and
inc
add
inc
cwtl
and
xchg
ljmp
jmp
or
mov
jnp
rcrb
mov
cltd
xor
mov
enter
dec
data16
xor
outsb
add
or
mov
fisubrl
stos
inc
sub
dec
enter
dec
in
mov
imul
cmc
add
es
and
lret
cmpsl
ds
cltd
inc
xlat
lret
pop
push
jmp
cmc
sbb
in
movsb
cmp
add
ret
mov
adc
ss
insl
push
mov
mov
fcoml
test
xchg
cs
pop
mov
dec
out
dec
in
or
outsb
cmp
insb
add
cmc
mov
scas
adc
stos
add
leave
xor
pop
std
push
push
out
push
in
push
movsl
outsb
add
mov
les
mov
jge
inc
xlat
inc
sahf
enter
pop
cmc
cltd
icebp
out
and
add
jne
fwait
xor
and
xchg
call
xlat
outsb
out
pop
cmc
imul
lea
mov
pop
adc
mov
lcall
xor
call
mov
outsl
push
test
hlt
mov
cmpsb
lea
sub
test
sub
scas
dec
leave
pusha
jle
dec
in
mov
insb
add
pushf
and
mov
test
and
sti
xchg
inc
fmul
sbb
pop
dec
jmp
in
mov
ret
add
rclb
push
adc
xlat
cltd
xor
outsb
mov
jmp
cmc
mov
ficoml
stos
or
xor
mov
push
in
dec
out
push
fsubrs
shrb
add
lea
adc
fidivs
inc
test
xor
xor
pop
cld
push
push
out
sbb
outsb
add
mov
ret
and
jnp
inc
fadds
enter
pop
negb
mov
add
jae
pushf
xor
xchg
and
xchg
out
xlat
pop
mov
outsl
out
pop
cmc
imul
jl
mov
fstpl
lret
mov
call
mov
outsl
push
adc
mov
movsl
lea
sub
test
sub
scas
dec
leave
pusha
jge
dec
in
lahf
out
shll
insb
add
add
and
enter
xchg
inc
fadd
sbb
pop
dec
call
in
mov
ret
repz
mov
adc
xlat
cwtl
xor
outsb
gs
cmc
mov
fsts
stos
or
xor
mov
push
in
dec
out
add
insl
add
pop
testb
lods
adc
fnsave
inc
cmpsl
xor
das
leave
pop
sti
push
push
out
sbb
jge
mov
add
mov
ret
repz
stos
inc
jp
inc
fadds
enter
pop
notb
mov
add
jb
pushf
xor
xchg
and
xchg
in
xlat
push
mov
outsl
in
pop
cmc
push
mov
pop
adc
xor
lods
xor
mov
call
mov
outsl
push
adc
mov
movsb
lea
sub
test
sub
lods
dec
leave
pusha
jl
dec
in
popf
out
iret
and
push
lock
and
test
fadd
sbb
pop
dec
out
notb
outsb
out
mov
roll
mov
mov
adc
fcoms
mov
cmc
mov
xlat
adc
nop
sub
enter
push
jecxz
dec
out
add
jo
int
add
push
testl
inc
movsl
cld
xor
sub
dec
push
call
dec
mov
add
and
shlb
icebp
inc
stos
inc
js
inc
flds
leave
pusha
lret
fs
notl
mov
adc
jo
popf
xor
xchg
and
jecxz
fcoms
fnstenv
xor
clc
xchg
mov
ficompl
lret
fldt
push
jmp
mov
jo
adc
mov
mov
adc
daa
jp
enter
popa
jp
dec
out
fwait
call
add
pop
jb
and
stos
inc
notl
leave
pusha
dec
in
notl
ss
push
mov
inc
fdivrl
fsts
mov
mul
xor
mov
jg
cmp
adc
push
pop
popf
xor
daa
xor
pop
scas
mov
out
add
jno
lret
outsb
add
xchg
lea
test
lods
fnstenv
inc
mov
vpunpcklbw
dec
push
jmp
dec
sahf
jo
shrb
popf
pushf
icebp
mov
out
inc
lods
inc
jbe
inc
fiaddl
lret
bound
xchg
ljmp
out
push
popf
outsb
or
mov
loope
fsts
scas
fidivl
xor
fs
nop
xor
jle
mov
pop
scas
xchg
pushf
xor
test
int3
fldcw
mov
ljmp
jno
jle
testb
and
lods
inc
and
inc
lret
bound
push
out
cltd
jmp
push
dec
in
pop
sahf
sbb
ds
inc
cmc
nop
inc
fcmovb
push
lret
loop
clc
adc
jg
xor
push
mov
out
xchg
mov
or
inc
ficoml
mov
clc
in
testl
add
sahf
xor
push
lods
mov
call
xor
outsl
push
sti
push
stc
nop
test
and
xlat
outsl
lods
inc
mov
ret
lret
dec
push
ljmp
jno
into
imul
and
inc
je
inc
fstpt
xchg
lret
pusha
stc
xchg
call
adcb
cmp
sahf
insb
push
lahf
cmp
mov
ficoml
lods
xor
bound
cli
xchg
xor
sbb
or
mov
jmp
jge
jo
dec
jb
jl
testl
push
icebp
scas
inc
and
lret
int3
arpl
push
call
leave
sbb
dec
ljmp
mov
shrl
adc
bound
stc
adc
sbbb
pop
sahf
in
test
mov
or
fistl
mov
stc
jecxz
clc
mov
sbbl
add
mov
xor
push
stos
mov
jmp
xor
jo
cli
push
stc
nop
sbbl
es
movsb
pop
scas
aad
lods
inc
mov
ret
hlt
dec
push
ljmp
jno
int3
push
es
mov
lods
inc
jb
inc
fdivrl
xchg
lret
lds
cli
nop
out
sbbb
sbbl
push
mov
mov
mov
inc
fimull
lods
fdivl
das
popa
clc
pusha
cli
xchg
xor
sbb
pop
movsl
ss
sub
jmp
jl
jo
dec
jb
jnp
testl
push
lock
inc
and
lret
int3
arpl
push
call
enter
dec
jmp
mov
insb
shrb
adc
bound
stc
adc
sbbb
pop
sahf
jmp
sahf
xor
cmp
pop
inc
fistl
mov
stc
loop
clc
scas
add
lods
add
mov
xor
push
stos
mov
jmp
das
jo
stc
push
stc
nop
sbbb
es
mov
lods
inc
lahf
cmc
xor
js
ljmp
or
es
mov
lods
inc
jno
inc
fdivrl
pop
arpl
in
adcb
sbbl
imul
mov
mov
inc
fimull
cs
clc
pop
cli
xchg
xor
sbb
push
movsb
ss
daa
mov
jmp
jnp
jo
dec
jb
jp
testl
push
out
scas
inc
and
movsl
inc
int3
arpl
call
sbb
dec
call
mov
imul
fstpt
fisubs
pcmpgtd
sbbb
pop
sahf
ljmp
mov
or
fisttpl
mov
stc
loope
clc
scas
add
lods
add
mov
xor
push
test
push
jmp
cs
jo
clc
dec
stc
nop
sbbl
pop
scas
shrl
sahf
hlt
xor
ja
ljmp
data16
sbb
lods
inc
jo
inc
fdivrl
lret
mov
jmp
sbb
aaa
pop
sahf
push
mov
push
mov
inc
fimull
fdivl
sub
cli
xchg
das
cmpb
push
sbb
add
es
jmp
jp
jo
inc
jb
jns
testl
push
in
scas
inc
pop
jae
lret
movsb
inc
int3
arpl
push
jmp
lds
jno
dec
out
lahf
pop
imul
imul
int3
arpl
stc
or
adcb
mov
sahf
xor
cmp
mov
fmull
scas
arpl
loopne
clc
lods
add
lods
push
mov
int3
push
cmpsl
mov
ljmp
jno
testb
jg
nop
daa
dec
mov
scas
inc
pushf
repnz
mov
push
jmp
adc
addb
or
or
sbb
scas
inc
outsb
or
cmp
fs
mov
ljmp
xor
mov
mov
xchg
inc
fisttpl
test
je
sub
pop
sti
sti
xchg
sub
dec
sbb
add
mov
in
and
fidivl
inc
jae
ja
clc
std
cwtl
xchg
sub
push
pop
scas
dec
jmp
inc
sbb
ds
jo
push
ljmp
jb
inc
in
mov
fwait
ss
mov
out
mov
mov
fisubl
or
adcb
or
mov
sub
add
inc
fisttpll
fs
fidivrs
nop
stos
incl
scas
std
push
mov
int
movsl
mov
jmp
clc
fdivl
ret
jb
cmc
dec
cli
xchg
jge
xchg
sub
sbb
fwait
lock
mov
push
jmp
adc
addl
or
arpl
mov
mov
and
mov
mov
js
daa
inc
or
cwtl
mov
popa
cli
arpl
pop
add
outsb
ds
gs
jmp
sub
popa
lret
mov
ret
icebp
fsubl
push
loop
inc
jmp
mov
add
push
scas
mov
mov
daa
mov
icebp
mov
mov
repz
adc
xlat
mov
cmpsb
fwait
mov
leave
sub
hlt
fbld
jno
rorl
decl
inc
fbstp
mov
cmp
mov
xlat
push
push
mov
xorl
inc
mov
jnp
pop
push
jecxz
lcall
cld
mov
call
mov
jp
xor
inc
adc
mov
jb
push
jne
fld
xlat
jae
adc
jmp
stos
addr16
and
add
fisubrl
inc
or
aaa
daa
dec
push
cmp
mov
xlat
test
xor
lcall
jnp
xor
popf
icebp
mov
cmp
add
das
dec
xchg
push
ss
jnp
mov
adc
xor
cmpsl
mov
jmp
test
in
jno
push
adc
sub
ljmp
pop
inc
dec
pop
jb
lods
sbb
push
mov
xchg
rorb
cmpsb
imul
xor
lret
jmp
jo
int
push
adc
incb
xchg
mov
sub
bound
push
ret
push
into
or
jb
flds
cs
mov
aad
sbb
sub
fistpll
fsubrl
push
inc
or
outsb
push
cmp
or
add
call
fdivs
jns
cli
jecxz
test
aam
pop
lss
test
jne
pop
xor
pusha
xchg
dec
mov
fstl
or
pop
dec
sub
cmp
repnz
fsubrp
push
pusha
clc
sub
and
scas
movsb
repz
push
or
add
add
and
add
add
and
fs
add
aas
cmp
subl
addr16
mov
pop
push
addr16
adc
outsl
test
aad
push
mov
inc
inc
dec
xor
xchg
jg
mov
es
cmpsl
testl
fnstenv
pop
cwtl
mov
mov
inc
imul
nop
arpl
shlb
scas
push
inc
enter
mov
mov
fs
int
sbb
sbb
pushw
jo
fwait
cwtl
rol
pop
rcrl
push
aam
add
imul
or
push
xor
pop
or
pop
repnz
sarl
push
and
mov
adc
hlt
mov
jo
fs
aaa
pop
dec
stc
push
pop
insl
mov
and
cmp
pop
mov
enter
or
mov
rcrb
es
or
cmp
in
fsubrl
xchg
jnp
xchg
xor
loop
xchg
jnp
add
loopne
push
xchg
pop
les
insb
arpl
mov
dec
and
test
push
push
popf
arpl
mov
and
outsl
fwait
mov
leave
pop
sub
test
xor
xor
mov
mov
mov
pop
stos
outsb
test
xchg
test
ljmp
out
adc
inc
sbb
aam
pusha
xchg
cmc
lcall
inc
rcl
jae
addr16
dec
enter
aad
dec
out
pop
mov
arpl
jp
mov
xor
fldenv
jmp
xchg
loope
mov
sbb
xor
push
push
mov
xor
push
add
cmp
cmp
cmp
xlat
scas
addr16
das
pop
int3
jge
sti
adc
or
adc
sbb
push
addb
dec
or
fwait
or
push
enter
or
add
and
repz
gs
jle
lcall
pop
dec
dec
es
xchg
repz
bound
loop
add
cmp
bound
das
push
shrl
sbb
test
inc
push
inc
inc
call
movsl
lods
stc
xchg
stc
jle
dec
addl
jae
or
push
add
xchg
insl
xor
mov
adc
adc
xlat
jae
in
cltd
push
add
dec
push
or
cmc
scas
das
shll
pop
test
cwtl
mov
bnd
jo
cltd
pop
push
in
dec
add
cltd
push
jno
std
clc
scas
mov
dec
pop
push
dec
cs
popa
inc
add
mov
js
or
add
lds
push
addl
mov
xor
orl
mov
push
ss
inc
lods
push
push
xor
sbb
cmp
in
cmpsl
test
in
and
push
xchg
push
fucom
movsb
sbb
lock
push
out
test
fs
cmpsl
in
jmp
add
push
dec
imul
push
inc
xlat
xchg
push
aas
cltd
mov
nop
xchg
insb
outsb
xchg
jg
rcrb
or
mov
clc
cmp
fwait
es
push
or
cmp
mov
xchg
add
lea
mov
mov
pop
pop
cmp
push
bound
push
ror
cwtl
mov
sub
rclb
cld
xchg
in
pop
mov
scas
inc
call
adc
popa
test
or
js
dec
cld
add
cmc
dec
cli
xchg
adcl
xchg
jns
insl
xchg
cmp
push
push
cli
idivl
daa
sti
pop
adc
nop
xchg
shlb
adc
mov
pop
movsl
add
fnstenv
loopne
dec
popf
or
or
lock
outsl
call
lahf
dec
pop
shlb
pusha
mov
stc
mov
push
dec
push
aas
ss
into
or
insb
push
popf
dec
mov
mov
dec
rolb
xchg
lea
inc
mov
fildl
inc
rorl
ret
mov
les
or
das
push
orl
lock
pop
lea
jb
aaa
jne
mov
xor
adc
loope
xor
popa
hlt
sbb
jge
dec
or
mov
xchg
add
enter
adc
lret
add
cmp
and
adc
add
jecxz
mov
sbbb
shlb
cmc
mov
rolb
cmp
sub
leave
in
stos
inc
mov
stc
dec
lcall
sbb
mov
xor
xchg
mov
inc
hlt
int
mov
mov
inc
dec
movsb
jne
jg
inc
or
bound
and
sub
add
test
sbb
jno
pop
test
out
xlat
je
sub
ret
mov
xlat
idivb
mov
mov
jne
pop
in
sbb
jns
adc
adcl
sbb
mov
cmp
test
movsl
iret
xchg
mov
mov
add
cli
js
jp
bound
ja
mov
sti
add
dec
push
sub
dec
fdivrs
xchg
jns
fidivrl
daa
bound
daa
jno
dec
push
leave
out
ficompl
cmpsl
add
dec
ficoms
sarb
call
mov
js
sub
or
jge
jg
mov
pop
mov
jl
xchg
sbbl
push
jge
xchg
xorb
jbe
sub
cvtps2pd
es
dec
and
sub
mov
mov
rol
pusha
mov
nop
sub
sub
lea
jne
lods
dec
jle
cmpsl
dec
sub
sbb
xchg
jb
enter
lahf
or
or
shlb
mov
xchg
out
inc
mov
inc
mov
fldl
inc
and
inc
xchg
mov
ret
adc
mov
push
fisttpll
dec
sbb
push
jno
sub
pop
popf
ja
xchg
les
inc
jmp
movsb
push
push
out
ss
mov
add
fs
push
dec
adc
mov
or
aad
cmp
push
xor
push
mov
ficoml
or
dec
imull
aaa
rol
dec
iret
std
xchg
out
push
pop
movsb
test
pop
mov
inc
call
push
adc
out
mov
inc
in
shr
pop
adc
loop
cli
jmp
pop
dec
or
mov
push
jo
bound
jge
mul
xor
cmp
out
int
adc
mov
adc
