ljmp
dec
or
xchg
insb
lret
rcrb
imul
into
and
cmp
lcall
fdivl
call
mov
mov
std
ljmp
decl
xchg
in
sub
mov
jae
cmp
mov
push
nop
xor
dec
out
fstl
faddl
ficompl
or
mov
imul
mov
or
or
call
or
outsl
inc
or
out
pusha
scas
shlb
data16
inc
adc
dec
sub
mov
cmp
xor
sbb
xor
dec
sbbl
call
sbb
jl
insl
xchg
sarb
repnz
mov
pusha
cmp
jmp
fstpt
xchg
sub
enter
lods
and
ja
mov
pop
fdivrl
aas
jo
pushl
enter
xlat
fldcw
add
or
xchg
jecxz
mov
push
fistl
and
mov
xchg
jp
push
fcmovne
dec
nop
mov
cmc
cmp
leave
sbb
push
mov
xchg
decl
filds
push
xor
mov
push
push
movups
decl
pop
or
leave
in
ret
lds
aad
jne
imul
mov
pop
int
in
or
jle
inc
push
pushf
push
addr16
flds
out
pop
add
call
jle
xor
mov
cmp
adc
hlt
push
dec
sub
sahf
lock
sub
jb
incl
dec
sub
push
test
xor
cmp
xor
incl
cltd
lcall
test
and
add
std
lea
lcall
fstp
cmpsl
lods
rol
sbbl
xchg
jge
testl
stc
mov
pop
add
push
dec
outsl
cmpsb
adc
loopne
mov
pop
xor
arpl
insb
inc
inc
and
div
add
mov
jmp
inc
push
ret
cwtl
je
out
fidivrl
mov
mov
xchg
add
jb
fdivr
ljmp
cld
dec
lcall
mov
adc
stos
add
ret
mov
jnp
mov
imulb
inc
fcomps
jno
aam
lock
mov
sub
lods
ljmp
out
cmp
jle
mov
stos
mov
jp
sub
sahf
fwait
mov
loop
xor
pop
push
es
push
mov
outsb
sarl
adc
jae
flds
ljmp
movb
cmp
mov
pop
add
adc
aad
rcll
test
mov
orb
cld
and
push
icebp
stc
gs
loop
aaa
push
scas
cmpsb
das
xchg
or
idiv
jmp
pop
mov
fs
std
mov
xor
lock
enter
ljmp
rclb
mov
ja
cmp
adc
outsb
cmpsl
jge
outsb
mov
mov
lcall
adc
add
lcall
or
pop
leave
xchg
jns
aam
bnd
decl
adc
orb
insb
mov
outsb
notb
lock
orb
decl
sub
movsl
das
outsb
mov
aaa
xor
movsb
ja
xchg
add
jns
mov
pushl
push
pop
leave
sti
imul
inc
ret
imul
sti
call
out
scas
fdivrl
sar
data16
xor
inc
mov
aad
fcom
cmp
xor
fbld
les
iret
sarb
mov
ja
push
pop
lret
fdivr
fnsetpm(287
or
mov
adc
aam
imul
in
cmp
mov
jae
into
dec
sub
adc
inc
jbe
cmpsb
aam
xor
pushl
jmp
sub
mov
mov
dec
mov
shrb
pmulhw
xchg
lcall
fnstcw
pop
push
add
push
xchg
cltd
and
iret
push
rcll
and
out
mov
cmp
jg
adc
cmpl
mov
pop
pop
fisubs
jp
sbb
lcall
pushl
cmp
fdivrl
and
shrb
repz
xchg
push
rcrb
jb
addr16
inc
mov
incb
or
mov
cltd
addb
dec
scas
xchg
fidivl
inc
jg
jg
push
mov
lcall
outsl
pushf
push
dec
pop
xchg
sahf
xchg
cltd
add
mov
addr16
iret
enter
push
out
add
push
xchg
aas
push
and
les
xchg
rcr
mov
pusha
mov
scas
int
aam
ljmp
lcall
lea
sbb
push
push
push
push
adc
sub
and
pop
pop
js
data16
inc
mov
sub
or
add
xchg
xor
out
test
decl
jnp
mov
mov
mov
push
jecxz
dec
xor
xchg
rorb
dec
mov
jl
out
pop
orb
aam
stc
and
and
popa
mov
jmp
out
inc
or
jg
xchg
mov
imul
push
loop
cld
out
dec
fstpt
and
sub
and
inc
push
dec
adc
dec
out
cld
cmp
loope
imull
sub
push
jne
xor
xchg
pop
add
xchg
jmp
fisttpll
mov
jg
call
mov
es
cmp
ror
push
sar
dec
fnstenv
inc
xor
inc
sbb
fs
inc
rcrb
pop
ss
lcall
jmp
popf
cmp
mov
adc
inc
mov
fcmovnu
pop
dec
jmp
call
and
inc
shlb
mov
mov
mov
and
adc
pushl
add
repz
adc
inc
insb
decb
add
sub
pxor
lods
sub
push
pop
inc
fwait
hlt
sub
dec
add
repnz
aas
jbe
fisubl
pop
rcr
or
shlb
push
jmp
jmp
adc
inc
in
sub
sub
cmpsb
iret
push
pop
prefetchnta
adc
in
and
je
ret
pop
push
xor
aam
sahf
movaps
mov
stos
js
es
add
ljmp
pop
dec
push
sub
lods
mov
cmpsb
ret
stos
std
cwtl
xchg
ljmp
stc
sbbb
popf
jge
mov
daa
leave
ljmp
pop
adc
data16
adc
sub
dec
xchg
adc
jb
fwait
ljmp
lods
dec
loope
push
lcall
lds
mov
mov
push
dec
pop
shll
mov
pop
enter
mov
bound
xchg
or
and
fstpt
jp
repz
mov
mov
repnz
xor
sbb
xlat
lcall
loop
cli
and
push
rclb
in
cmpsb
add
mov
sbb
mov
xchg
call
xchg
xor
cld
ja
ror
das
inc
mov
addr16
sti
and
imul
clc
mov
adc
cmp
arpl
inc
push
mov
cmp
into
andl
mov
sbb
fsubrp
stc
ljmp
popf
mov
dec
scas
shll
insl
push
mov
jg
shll
int
das
in
call
mov
nop
test
shl
int3
sub
inc
cld
adc
testl
dec
ljmp
cld
and
fdivrl
outsb
cmp
cmp
sub
es
pop
cld
loop
dec
dec
jmp
xor
in
shr
sub
lods
mov
sbb
jmp
fcoms
stos
pop
imul
fcomi
outsl
adc
lods
ljmp
pop
xchg
sbb
sub
ljmp
jae
lea
mov
das
std
push
cli
hlt
pop
cmc
gs
iret
dec
dec
frstor
insb
testb
outsb
sub
iret
push
std
lcall
aam
add
jecxz
cmp
pop
inc
out
in
int3
js
adc
xlat
pop
sbb
mov
loope
mov
imul
or
mov
cli
mov
pop
push
pop
and
aad
incb
inc
call
decl
jmp
sbb
hlt
rcrl
mov
ljmp
xor
icebp
mov
mov
add
mov
dec
add
sbb
out
rcrb
mov
pop
adc
loope
cli
aas
sbb
pushl
pop
mov
push
mov
mov
popa
outsb
jno
pop
stos
lods
push
mov
jns
mov
rcrb
test
hlt
jbe
sbb
lods
stos
pusha
ljmp
cmp
or
or
mov
lea
aam
daa
movsl
cmpb
sub
push
push
pushl
jle
add
jnp
movsl
cmp
outsb
and
pop
xchg
nop
dec
fwait
xor
into
mov
xor
incl
or
out
fisubrl
push
push
lea
movsl
sub
in
out
sbb
mov
pop
decl
test
cmp
push
test
or
cmp
or
jg
cmpsb
bound
dec
imul
cld
addr16
push
fwait
dec
xchg
in
jle
jnp
push
and
jmp
mov
xor
out
mov
push
sub
xlat
outsb
mov
test
jmp
insl
push
aas
js
jecxz
je
jl
movsb
mov
int
or
divl
iret
jmp
lret
cld
xchg
je
xchg
dec
jle
stos
cmp
out
imul
cmp
add
call
mov
inc
mov
pop
cli
sub
push
dec
or
ret
jp
loop
decl
cmp
roll
jl
xlat
mov
add
daa
mov
xchg
outsb
pop
lret
ljmp
cmp
outsl
cs
inc
mov
sbb
insl
arpl
data16
mov
ljmp
pop
jmp
mov
mov
loopne
ror
mov
mov
roll
shll
outsb
mov
jmp
data16
mov
push
push
push
push
sbb
pop
imul
lret
fiadds
xchg
mov
jmp
lret
add
mov
add
orl
repz
sbb
imul
xor
movb
into
pop
faddl
notl
sbb
call
sub
call
cmp
shl
ret
and
int3
mov
shl
cmp
icebp
sub
xchg
lcall
mov
rcll
mov
push
lds
sarl
out
push
mov
sbb
pop
jno
sbb
jmp
jno
scas
sbb
rcll
popa
loop
idivb
mov
in
mov
mov
decl
cmpsl
pusha
call
inc
vpmacssdd
sub
add
adc
test
incl
cli
in
xchg
arpl
lret
mov
jp
pop
fisubrl
cli
or
inc
aas
jg
jmp
movsb
or
stc
icebp
mov
or
jb
sbb
lcall
divl
xchg
mov
cmpl
xor
mov
mov
xor
repz
imul
mov
push
stc
jnp
insl
mov
push
push
ret
cmpsb
incl
scas
mov
loop
test
xlat
sub
push
mov
add
shrl
lcall
test
pop
shll
in
pop
lds
push
out
cld
mov
jo
arpl
jecxz
fcoms
pushl
mov
and
cli
jmp
je
xchg
pop
push
mov
fsubr
daa
cmpsb
inc
fdivs
ja
xor
insl
lcall
sbb
sbb
das
cld
out
mov
xchg
lock
xchg
cmpl
jl
fdivr
decl
jl
icebp
out
dec
xchg
cli
dec
add
roll
add
mov
xor
sbb
fstp
incl
fldt
ret
mov
mov
cmp
dec
mov
out
or
clc
sub
mov
pushf
jae
mov
jnp
jmp
add
mov
mov
pop
mov
dec
jg
mov
pop
jmp
sub
xchg
xchg
in
inc
ret
outsl
sbb
mov
popa
xor
notb
push
mov
and
movsl
out
pop
pop
mov
adc
scas
std
addr16
and
adc
test
bsr
mov
insl
incl
movsb
mov
pop
dec
add
addr16
xlat
push
cmc
jb
xor
mov
int
pusha
and
fstpt
jns
aas
and
add
xor
in
dec
dec
push
jne
sub
jmp
fnstcw
fcmove
cmovle
ret
push
push
lods
and
mov
dec
or
add
mov
insb
testb
push
aaa
jmp
popa
xor
sbb
cmp
out
pusha
adcl
jp
jb
mov
dec
shll
pop
insb
xor
xor
and
add
imul
xor
xchg
out
or
sbb
mov
fiadds
iret
or
sbb
imul
jne
sbb
xor
lret
sbb
add
test
adc
or
mov
loopne
push
mov
inc
add
mov
push
pop
fbstp
add
mov
sahf
jecxz
jge
fsubl
inc
adc
ret
inc
in
adc
xlat
aam
cltd
fimuls
mov
dec
std
sub
pushl
and
push
loop
jl
push
aad
outsl
and
cmp
inc
push
cltd
jns
lds
dec
or
mov
add
sbb
pop
int3
push
dec
and
push
or
in
mov
jecxz
decl
dec
fnsave
jmp
xchg
adc
jne
scas
mov
jne
mov
dec
jns
incl
ja
pop
fnstenv
dec
mov
icebp
inc
add
push
hlt
fnstsw
aaa
jmp
xlat
ret
xor
stc
mov
or
cmc
insb
dec
jp
insb
imul
enter
cmc
test
dec
add
xchg
ljmp
ficompl
pusha
rorl
and
popf
push
out
add
jle
cmp
stc
lock
push
cmp
xor
mov
hlt
mov
mov
decb
add
mov
mov
in
push
or
push
adc
stc
in
ds
lcall
stos
orb
push
cmp
pop
add
mov
and
fisttpll
pushl
aaa
test
jp
negl
pusha
outsb
sarl
adc
cmc
add
mov
cmpsb
out
or
cmp
jg
pushl
iret
sub
ljmp
mov
jmp
popa
xchg
insl
add
and
pushl
aas
sub
stos
push
jns
xor
xchg
fadds
push
je
and
mov
mov
mov
jne
in
out
or
nop
ficoml
rorl
testb
std
or
lea
sbb
std
lcall
push
sbbb
addr16
xchg
or
mov
pop
and
aam
xchg
mov
pop
jnp
xor
pushf
mov
loopne
jmp
fs
popaw
je
mov
rclb
popf
dec
sbb
sbb
push
xor
pushf
dec
jb
int3
roll
call
icebp
or
in
movsl
push
mov
jmp
inc
cmp
sbb
jmp
xchg
call
jmp
js
jecxz
out
jb
es
in
or
push
jnp
lds
ret
outsl
pushl
push
movsl
lret
and
rolb
popa
inc
add
insb
lret
inc
push
lods
popf
sarb
pop
cmc
decl
xor
sbb
insl
or
ret
icebp
lahf
mov
gs
ljmp
shrl
leave
aas
mov
stc
mov
popf
cmp
stos
shl
or
xchg
push
mov
pop
mov
shrl
cmp
imul
das
mov
dec
cmp
ja
mov
outsb
dec
sbb
call
pop
jg
gs
dec
incb
ja
mov
push
gs
inc
rcrb
pop
inc
and
inc
inc
out
xchg
std
jae
or
jl
pop
adc
imul
gs
pop
push
in
mov
ljmp
sbb
inc
mov
movsb
jmp
xchg
out
imul
adc
rclb
incl
xchg
pop
dec
mov
rcrl
xchg
or
call
cmp
mov
mov
xchg
mov
jbe
shld
adc
out
add
mov
jb
lret
fldcw
pushf
movsl
fisubrs
push
pop
adc
fimuls
pushl
and
ja
mov
dec
cmpsl
mov
push
cmp
gs
jp
lea
add
pop
jecxz
inc
fcmovu
repz
pop
dec
mov
ss
sub
test
sub
dec
inc
pop
cltd
call
sbb
dec
or
int
dec
adc
mov
out
scas
cmp
xchg
decl
call
loop
test
pop
and
ficoml
adc
xor
jg
push
sbb
jmp
xor
xor
lods
mov
add
sbb
inc
jle
push
adc
fsubrs
decl
ret
pop
aaa
lods
xor
mov
movsl
jbe
sub
incl
imul
cld
push
mov
push
inc
std
or
xchg
adc
pop
popf
add
adc
lcall
adcb
jg
push
xlat
jo
xchg
daa
loope
leave
mov
mov
repz
or
pusha
push
in
ljmp
je
or
lret
lods
dec
js
ficoms
ss
xchg
in
xchg
inc
inc
loopne
fs
sarb
fld
addb
pop
hlt
subb
imul
cmp
leave
jmp
push
outsb
adc
enter
fldenv
ja
push
xor
push
adc
lcall
push
ljmp
inc
adc
add
pop
or
popf
insl
dec
nop
jne
mov
outsl
imul
sahf
cmp
clc
es
clc
loope
push
mov
and
ljmp
pop
xor
ds
enter
dec
ret
ljmp
jg
xor
incl
cmpsb
int
pop
je
and
jp
lods
aas
leave
or
mov
stos
xor
mov
lcall
mov
cmp
loopne
shlb
mov
fucom
jmp
jo
mov
decl
cli
in
mov
test
cltd
jp
cmpsb
stc
test
pop
xor
jmp
stos
outsb
sbbb
push
dec
sbb
jb
sbb
popa
stos
daa
xchg
xor
inc
mov
or
or
add
push
fcmovbe
sbb
mov
and
clc
mov
insl
mov
aad
js
incl
and
int
adc
popa
das
xor
jne
jp
push
jle
pop
insl
push
mov
nop
pop
ljmp
pop
mov
vmwrite
fimuls
je
in
inc
fxch
push
cwtl
dec
data16
in
jmp
bnd
loopne
mov
pop
in
stos
adc
lahf
dec
cmc
cmc
jg
push
call
insl
mov
dec
cld
movsl
dec
leave
popa
aas
add
and
dec
mov
add
inc
inc
add
add
add
and
adc
add
and
repnz
add
loope
in
in
add
test
dec
jmp
push
enter
add
and
pop
add
and
sub
and
or
sub
push
pusha
mov
or
mov
stos
stos
add
inc
inc
add
mov
add
add
adcl
incl
add
pop
ljmp
dec
push
mov
lods
es
sub
js
into
in
inc
test
xchg
and
jge
inc
cmpl
lock
popa
xchg
call
iret
jl
aaa
pop
scas
adc
and
inc
in
jmp
call
mov
jne
es
clc
inc
mov
cmpsl
push
std
jl
lret
jle
sbb
jge
sti
mov
xlat
sub
ja
insb
jne
pop
mov
jo
sub
cmpsl
hlt
sub
jno
jmp
out
mov
out
inc
mov
push
and
cmp
out
sbb
mov
lods
cmc
out
xorb
and
pushf
inc
pop
and
sti
cld
or
push
push
ficompl
lods
ljmp
jae
pop
push
outsl
cmp
inc
stc
imul
adc
inc
mov
inc
outsl
or
icebp
lds
fs
dec
aad
sub
ja
mov
movsb
mov
fimuls
xchg
cmpl
pop
stc
mov
fwait
stos
je
xchg
lea
in
mov
cmp
jg
pushl
jmp
cmp
push
xor
rolb
mov
es
sbb
jg
aam
sbb
sub
xchg
into
inc
das
icebp
shlb
mov
add
lahf
call
mov
jecxz
dec
imul
mov
sbb
or
decl
jo
bound
mull
test
or
inc
cmc
jle
sbb
jg
dec
pop
iret
lcall
enter
push
xor
ret
push
xor
dec
mov
out
jecxz
pop
ret
sbb
aam
call
mov
popl
fcoms
aaa
into
push
ret
jae
test
nop
jg
dec
shll
rcr
cmp
ror
aaa
xchg
dec
and
jle
cmp
decl
pop
imul
lock
xchg
lret
test
ret
sbb
mov
std
jmp
decl
or
addr16
jae
es
fisubl
sar
es
in
icebp
shrl
lcall
mov
dec
dec
jno
cmc
cmp
mov
mov
pop
mov
nop
cmp
repz
jge
xchg
or
pushf
xchg
ret
daa
adc
xor
cmpsl
add
xchg
ret
adc
adc
repnz
and
stos
insb
mov
es
sbb
inc
addb
mov
and
and
decl
add
nop
or
and
and
mov
adc
sbb
addl
lea
or
and
push
mov
js
loope
dec
ds
mov
cmp
dec
or
movsb
push
fisttpl
call
pusha
xchg
mov
adcb
cli
rol
add
shll
dec
aad
push
mov
xor
pushl
cmp
dec
push
imul
dec
mov
aad
loop
ud0
ljmp
dec
std
or
or
mov
aaa
ds
inc
inc
and
dec
push
and
pop
test
pushl
test
aas
push
xchg
pop
ds
stc
stos
dec
and
push
repnz
jmp
jmp
pop
fcomps
sbb
xor
pop
push
mov
pop
sarl
sub
and
ljmp
jg
or
dec
in
sbb
dec
lds
push
shrb
std
push
and
sti
and
jnp
mov
mov
mov
out
fldt
cmp
cmpsb
and
push
shrl
daa
lds
sbb
xor
negb
lods
fs
leave
lea
sbb
dec
ds
out
pushl
jmp
sub
lret
and
push
jmp
sbb
roll
ljmp
or
pop
or
mov
nop
dec
lret
xchg
and
outsb
out
xchg
cmpsb
imul
pop
fisttpl
dec
or
pop
mov
adc
repz
repz
push
outsl
mov
mov
sbb
mov
and
pop
repz
outsl
push
cmp
push
pandn
sub
push
adc
dec
adc
sbb
sbb
aas
int3
enter
jbe
mov
sbb
fwait
and
cmp
sbb
and
dec
pop
sub
cmp
cmp
pop
cmp
mov
bound
aam
jg
mov
xchg
mov
cmp
cmpsl
insl
outsl
rcr
mov
cwtl
add
fistpll
push
or
and
adc
sbb
pop
pop
ss
and
in
dec
xor
dec
das
das
std
test
push
xor
inc
les
mov
imul
jg
cmp
pop
cmpsl
mov
and
pop
mov
xor
leave
xor
inc
enter
movsl
jmp
das
cmp
das
es
outsl
int
leave
cmp
mov
inc
sub
inc
and
outsl
das
sub
inc
push
pop
push
ja
and
xor
jb
test
dec
les
cli
imul
xchg
rcl
sub
or
mov
mov
int3
cld
mov
aaa
dec
roll
and
testb
ljmp
hlt
pop
xchg
scas
xchg
mov
sub
pop
cmc
pusha
mov
cmpsb
sub
mov
ljmp
mov
mov
xchg
enter
in
int
lock
test
in
sahf
leave
adc
xlat
int
sub
rcll
out
pop
addr16
inc
fucomp
mov
daa
in
inc
adc
gs
out
mov
sbb
leave
enter
fdivrp
idiv
in
dec
sbb
aas
fnstsw
in
popa
dec
lcall
push
mov
jae
jle
hlt
adc
sub
call
lods
shl
dec
das
pop
movsb
fwait
rorl
std
mov
into
lahf
xor
lret
add
rolb
clc
inc
push
clc
pushl
add
or
mov
mov
jno
ret
dec
dec
dec
jle
sar
jg
pop
push
pop
mov
inc
clc
push
pmaxsw
or
fs
arpl
mov
in
cmpsb
cmp
xor
dec
enter
fwait
out
ret
out
inc
dec
or
ret
lods
ja
ja
mov
jno
das
jge
mov
rorb
pop
jno
imul
mov
sbbl
shll
mov
xor
cmp
popf
ja
psrld
out
xor
mov
ds
mov
mov
adc
sti
pop
dec
adc
push
jmp
into
xchg
dec
xchg
mov
ja
mov
pop
lcall
inc
mov
xor
pop
mov
sub
inc
cmp
decl
mov
dec
mov
mov
dec
mov
cli
cld
fmuls
aad
add
cmp
pop
or
mov
incl
cmc
mov
mov
sbb
jecxz
enter
fcomi
dec
sub
add
repnz
idivl
sbb
in
lcall
movsb
stos
push
add
sbb
stc
repz
and
push
cmp
in
mov
push
sub
and
adc
jbe
mov
dec
mov
mov
ljmp
int
lret
jge
into
lea
rolb
pushf
mov
pushl
rolb
ds
mov
pop
dec
iret
adc
lea
push
mov
clc
fstpt
xorl
pop
enter
mov
in
int3
fcmovnbe
dec
fdivl
gs
dec
int3
iret
or
imul
cli
push
dec
into
jnp
dec
add
cmpsb
repz
pop
aad
das
cmp
adc
adc
push
es
rcll
lock
jg
daa
cmp
sbb
ret
ret
add
mov
mov
inc
jbe
jl
and
dec
addr16
adc
sarb
jo
push
mov
pusha
or
enter
test
cmpsb
loopne
push
sarb
hlt
sarl
xchg
or
or
jge
sti
cwtl
sub
cltd
pop
imul
dec
sbb
leave
into
pop
imul
stos
fnstcw
push
mov
and
push
shr
pop
sbb
out
jle
mov
pop
movsb
adc
inc
push
add
xchg
mov
jge
stos
mov
jnp
fcmovne
or
inc
dec
stc
adc
loopne
mov
jnp
dec
sbb
mov
loope
negb
std
xchg
mov
lsl
cmpsb
aaa
push
mov
cli
inc
xchg
ds
dec
lret
lcallw
mov
jl
daa
mov
mov
mov
mov
pushl
push
dec
mov
sub
fbld
out
xor
inc
ja
dec
inc
pop
jg
pushl
push
push
push
imul
cmp
push
gs
dec
das
cld
incl
push
imul
arpl
jne
jp
inc
js
xor
xor
mov
inc
push
jno
push
cmp
pop
gs
jbe
jne
dec
xor
cmp
push
in
push
dec
arpl
dec
dec
gs
push
push
dec
pop
jb
pop
bound
dec
xor
lcall
jno
xor
popa
push
imul
xor
in
lcall
xor
bound
push
pop
aaa
dec
dec
pop
push
jne
push
ja
inc
arpl
inc
inc
ljmp
outsl
cmp
inc
inc
jns
jge
jno
push
inc
dec
dec
xor
pop
gs
push
mov
decl
imul
insb
jb
inc
push
xor
je
insl
pop
dec
push
gs
push
pop
xor
ljmp
inc
jo
jne
xor
push
jae
dec
fs
jns
jns
lds
inc
outsl
ljmp
push
push
inc
push
dec
jns
outsw
pop
outsl
jp
dec
ja
pop
insl
gs
fisubl
je
mov
jns
cmp
jae
dec
xor
xor
popa
xor
dec
fs
aaa
aaa
insb
in
jbe
push
mov
push
outsl
push
inc
arpl
mov
dec
cmp
dec
imul
pop
inc
ljmp
ss
outsb
xor
xor
push
push
inc
inc
aas
je
dec
jae
dec
inc
ret
jmp
addr16
aaa
xor
push
outsl
jns
xor
jb
inc
pop
push
adc
bound
int
xlat
push
jo
das
inc
sub
fists
repz
cmpsl
add
test
add
jg
imul
inc
lcall
das
pushf
add
add
sub
fs
out
push
out
xor
or
or
in
ljmp
sub
adc
jmp
pop
dec
outsb
xchg
dec
inc
jecxz
jo
cmp
out
js
call
imul
mov
pop
fdivs
inc
sub
outsb
movsl
jbe
add
pop
mov
adc
pop
xlat
sub
adc
adc
sub
or
das
mov
pop
sbb
sbb
jbe
dec
lahf
xor
outsb
add
adc
sub
mov
push
aas
cwtl
xor
loop
mov
aaa
fneni(8087
jns
xor
ret
dec
dec
daa
mov
pop
mov
outsb
or
subl
lahf
fnstenv
xchg
push
dec
adc
and
jmp
or
jmp
jbe
dec
add
inc
test
pop
mov
js
fisubrs
rolb
psubq
loopne
rcll
xor
addr16
outsb
pop
sub
rcrl
repnz
mov
fld
cmpsl
dec
testl
jmp
ret
sbb
setno
adc
fsub
xlat
inc
aas
inc
enter
arpl
sbb
jnp
cmp
fisubrl
or
outsb
pop
cmp
adc
shrb
mov
cmp
lret
jb
lods
es
sub
cmp
pop
jbe
std
mov
fildll
push
add
push
or
int
xchg
jo
out
icebp
ror
lods
push
mov
loopne
mov
pop
cs
nop
mov
pop
jmp
pushl
jns
or
mov
or
ret
test
sti
fiaddl
das
jge
test
xchg
insb
les
out
jmp
fwait
out
aas
aaa
lcall
jbe
add
loop
outsb
pop
cs
pop
mov
ds
jb
lahf
and
lds
in
pushl
out
imul
gs
xor
cs
scas
jle
inc
or
je
inc
jb
je
arpl
push
fsubs
outsl
outsb
pop
sbb
push
push
pusha
fildl
add
sub
sti
add
out
adc
xor
imul
xchg
jge
jb
gs
pop
mov
cmp
or
xlat
fdivs
imul
je
andl
jns
add
jb
fcmovne
fdivrl
arpl
lea
push
or
outsl
mov
aaa
or
sbb
push
fildl
sub
fs
arpl
pop
pop
or
mov
sbb
fdivs
push
dec
insb
flds
xchg
in
xchg
and
fstl
inc
inc
or
jo
or
lea
and
fwait
mov
adc
addr16
jmp
push
je
jnp
mov
inc
adc
pusha
mov
jb
inc
fs
xor
popf
mov
loope
dec
pop
fs
in
int
mov
adc
inc
popa
fwait
popa
xchg
inc
and
inc
lods
xor
insl
push
cltd
outsb
xor
insl
fistpl
movsl
or
xor
ret
push
inc
adc
jae
iret
jo
fcmovnb
imul
fs
sbb
mov
scas
add
imul
push
outsl
dec
adc
dec
data16
in
cmpl
je
inc
ja
or
xor
cltd
pop
popa
imul
xchg
or
push
or
xchg
cmp
inc
imul
enter
or
mov
xor
lods
jb
out
push
sarl
data16
cmp
adc
mov
gs
outsl
hlt
pop
imulb
or
jbe
jo
inc
mov
addr16
push
addb
fmul
insl
fists
dec
push
outsb
pop
adc
sub
adc
outsl
mov
je
fwait
int
sbb
jae
js
cs
sub
pop
adc
sbb
enter
test
mov
pusha
test
xchg
jae
rcrl
and
and
mov
sub
sahf
xchg
cmovg
sbb
push
jns
push
sbb
push
jae
test
mov
cmp
arpl
adc
imul
popa
sub
sub
jns
sbb
sub
inc
imul
push
mov
rcll
orps
add
dec
xor
xchg
pop
push
and
push
lahf
dec
or
das
inc
pop
aaa
jge
or
xchg
push
mov
dec
sbb
mov
dec
jae
fbstp
mov
adc
push
or
adc
das
push
adc
jbe
sti
or
add
xchg
in
lds
xchg
xor
xor
repnz
loope
inc
ror
add
bound
inc
mov
push
pop
sbb
and
lea
adc
lds
adc
sub
fcoms
xchg
mov
xchg
fwait
inc
sbb
fs
push
add
cmp
mov
pop
xor
dec
push
xor
add
lods
jmp
imul
and
xlat
jo
cmp
imul
push
jno
out
popf
loope
sti
pop
scas
mov
in
inc
mov
rolb
insl
inc
pop
dec
or
xor
rol
lret
dec
popa
gs
cmp
fcmovb
pop
test
xor
dec
mov
dec
cmp
aaa
cmovb
push
push
xor
or
leavew
fidivs
adc
fisttpl
and
inc
jb
andl
cmp
scas
cmp
push
push
add
shrl
jbe
popl
arpl
and
test
add
push
mov
mov
fld
lds
outsl
dec
inc
inc
sub
scas
mov
push
xchg
jl
push
data16
xor
je
fmull
fstpt
mov
inc
and
inc
adc
stos
add
js
test
push
add
mov
add
and
and
inc
decl
mov
nop
inc
add
add
adcl
adc
add
adcb
adc
add
mov
sub
mov
add
test
mov
add
and
add
xchg
push
sub
or
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
andl
or
add
nop
push
add
inc
inc
add
add
andl
or
adc
nop
push
add
add
adc
add
and
inc
adc
sub
incl
or
mov
adc
adcb
dec
and
ljmp
nop
add
and
add
test
mov
add
and
push
inc
dec
sub
or
push
adc
nop
subb
sub
mov
add
mov
add
fs
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
mov
cmp
cmp
cmp
sahf
mov
and
push
jp
cmp
scas
cltd
dec
bound
jb
lcall
int3
loop
lcall
add
dec
push
cmpsb
jmp
imul
mov
xchg
lcall
int3
fsubrp
xor
mov
testb
adc
cmp
xor
roll
outsb
orb
dec
mov
lcall
call
sub
cmpsb
imul
imul
imul
dec
shll
push
data16
shll
jle
pushf
scas
shll
in
cmpsb
imul
cmpsb
imul
cmpsb
imul
repnz
adc
sbb
dec
shll
jbe
xor
shll
mov
xchg
dec
rcr
out
add
or
cmpsb
imul
imul
cmpsb
imul
lret
add
imul
imul
cmpsb
imul
lret
add
inc
push
lcall
mov
mov
rcr
out
cmpsb
jmp
lret
push
add
lcall
insb
js
imul
jae
cmpsb
lock
or
lret
add
cmpsb
imul
cmpsb
imul
clc
or
push
and
xor
cs
push
pop
push
xor
shll
lcall
rcl
loop
lret
or
or
xor
add
cmp
pop
data16
shll
test
dec
sarl
cmpsb
imul
cmpsb
imul
cmpsb
imul
add
lret
add
xor
lcall
jl
lcall
rcr
lcall
adc
imul
imul
imul
imul
imul
je
ret
lret
or
cmpsb
jmp
dec
pop
cmpsb
imul
imul
mov
or
push
xor
shll
test
test
fsubr
negb
adc
and
imul
imul
imul
dec
shll
dec
push
bound
dec
roll
dec
shll
decb
lcall
inc
dec
pop
imul
imul
xor
add
adc
inc
dec
xor
shll
data16
xchg
shll
shl
cmpsb
imul
cmpsb
imul
cmpsb
imul
in
adc
adc
add
lcall
pop
push
imul
je
cmpsb
rcr
call
lcall
inc
push
imul
mov
int3
fsub
lock
dec
shll
or
sbb
dec
push
xor
shll
je
xchg
movsb
shll
loopne
dec
rcrl
sbb
sub
xor
shll
push
mov
lods
mov
ret
dec
shll
add
inc
dec
xor
shll
data16
mov
xor
rcll
fnstenvs
sbb
lcall
push
cmpsb
imul
out
add
push
and
xor
xor
push
pop
jo
xor
shll
mov
lcall
sbb
dec
shll
data16
dec
shll
mov
ror
fsubr
cld
or
adc
cmp
cmpsb
imul
cmpsb
imul
cmp
push
add
xor
lcall
orb
lods
mov
jmp
lret
pop
add
lcall
js
xchg
imul
xor
lock
lret
pop
and
and
cmp
outsb
subb
imul
loopne
and
and
sub
inc
push
fs
imul
je
cmpsb
shl
out
and
and
lcall
push
pusha
jb
lcall
mov
dec
cmpsb
fsubs
pop
and
and
add
inc
push
lcall
cwtl
movsb
mov
lcall
clc
and
and
sub
inc
lcall
jl
lcall
lret
shll
cmpsb
hlt
push
and
shll
mov
mov
int3
fisubrs
dec
shr
testb
adc
cmpsb
imul
imul
cmpsb
imul
sbb
xor
shrl
xor
push
fs
shll
mov
xor
call
shll
dec
pusha
insb
dec
shll
shlb
xor
lock
xor
shll
ds
push
bound
xor
je
xchg
sahf
stos
mov
enter
imul
cmpsb
imul
imul
mov
push
sub
push
xor
xor
rorl
jb
nop
dec
shll
fsubr
lcall
and
inc
imul
imul
je
sub
sub
sub
add
push
pop
push
imul
imul
lcall
dec
pop
cmpsb
imul
imul
mov
add
adc
cmp
dec
rcll
je
xchg
dec
shll
aam
lcall
xor
and
cmpsb
imul
cmpsb
imul
imul
dec
shll
cmp
pop
insb
shll
scas
mov
int3
fsubr
cld
push
xor
xor
outsb
imul
imul
imul
sub
lcall
jl
lcall
shl
out
xor
out
xor
add
sub
shll
insb
js
shll
fdivs
xor
testb
iret
add
shll
push
push
je
mov
shll
clc
add
imul
imul
imul
dec
shll
sub
dec
pop
shll
xchg
mov
scas
rcl
lock
lcall
xor
dec
imul
imul
insb
lcall
xor
dec
shll
dec
pop
fs
xor
roll
imul
out
cli
cmp
cmp
xor
add
sub
push
xor
shll
js
xchg
test
xor
sarl
cmp
je
imul
dec
cmp
je
xor
shll
sahf
mov
into
cltd
cmpsb
dec
rcr
in
clc
cmp
cmp
xor
roll
sub
push
pop
dec
shll
lods
mov
lret
cli
or
shll
cmp
pusha
dec
shll
mov
xor
fdivrs
shll
cmp
shll
xchg
sahf
xor
shll
mov
lcall
and
cmpsb
imul
imul
subb
lret
add
dec
shll
data16
dec
shll
pushf
scas
mov
rcr
ljmp
lcall
lcall
xchg
sahf
mov
lcall
clc
shll
sub
inc
dec
shll
xchg
cmpsb
xor
shll
lret
hlt
imul
cmpsb
imul
imul
shrl
inc
lret
inc
add
sub
imul
imul
cmpsb
imul
shll
fs
shll
je
shll
cli
or
ret
add
shll
jb
dec
shll
shl
xor
add
add
xor
xor
roll
je
dec
shll
enter
shll
repnz
adc
lcall
push
imul
imul
lcall
dec
push
cmpsb
imul
imul
cmpsb
xor
dec
add
xor
cmpsb
imul
imul
or
dec
add
lcall
jo
mov
cmpsb
imul
call
push
or
xor
xor
dec
dec
shll
pop
stos
add
cmpsb
pop
adc
inc
pop
push
lcall
call
clc
dec
inc
sub
add
xor
shll
mov
dec
shl
decb
dec
xchg
add
inc
dec
push
data16
xor
mov
adc
and
test
add
push
mov
inc
or
incl
and
call
cli
cmc
add
inc
fmull
push
inc
add
jmp
ret
xchg
fstl
cmpsb
aas
mov
dec
fcomps
cli
dec
cltd
lea
clc
push
inc
cmp
add
and
mov
nop
add
clc
lret
std
jb
cmp
jmp
cwtl
test
loop
push
enter
pop
xor
rcrb
xor
std
inc
icebp
sbb
cwtl
sahf
cmpsb
scas
out
in
add
fwait
stos
adc
fs
incl
rclb
adc
pop
sbb
add
inc
test
adc
jne
leave
xor
repz
pushl
shrl
pop
jne
fstpl
jp
mov
xchg
sar
inc
add
outsb
scas
mov
lret
ret
jb
mov
cmp
hlt
mov
incl
ja
lcall
shrl
or
inc
push
push
and
lret
fcoml
in
decl
and
movsl
push
loopne
scas
push
adc
add
xchg
call
stc
dec
aam
jmp
push
xchg
rcrl
xchg
inc
enter
loope
adc
push
or
aad
pop
or
dec
xchg
mov
or
ror
mov
push
aaa
mov
in
in
sbb
ljmp
push
mov
mov
xor
movsl
xor
out
lahf
pop
mov
jmp
pop
or
psubusb
lods
mov
sahf
test
out
ds
arpl
pop
out
test
jmp
je
and
or
adc
inc
stc
shll
int3
adc
icebp
xlat
out
insl
and
popa
push
sti
push
inc
xchg
ret
imul
pop
dec
test
mov
into
out
mov
adc
sbb
gs
ja
or
movl
xchg
xchg
enter
movl
xchg
jmp
leave
pop
mov
add
jecxz
bound
cwtl
jo
xor
sub
out
loop
sbb
pushl
aas
fisttpl
clc
pop
das
mov
lret
inc
jae
aam
adc
dec
movsl
lods
fsubr
cld
inc
jmp
movsb
popa
lea
push
push
cmp
xchg
dec
sbb
das
aaa
sbb
popf
adc
and
dec
sbb
push
loopne
sahf
cmp
mov
insl
or
notl
repnz
bound
add
test
jle
push
pop
xchg
imul
and
mov
clc
cli
mov
and
lods
ret
rcrl
test
lcall
fs
incl
add
jg
mov
lea
int
ja
cmp
cmp
cwtl
imul
cmp
sub
xor
add
or
insb
stc
movsl
jle
dec
rcr
cmp
loope
call
xor
ss
cli
sbbl
inc
jno
pop
ret
cmpsl
jge
mov
decl
fstpl
iret
and
cmp
pop
jb
push
and
cltd
jle
std
xor
jmp
mov
jge
enter
mov
push
dec
pop
insb
push
jmp
idiv
das
std
jno
xchg
add
dec
out
dec
inc
mov
sub
push
adc
in
sbb
jmp
out
loopne
push
cld
mov
addl
mov
sbb
inc
mov
jmp
cmp
mov
outsb
in
mov
lock
fstl
push
push
sub
rcrb
ss
cs
push
lcall
pop
dec
pop
cmp
jns
mul
mov
pop
sbb
jo
pop
scas
mov
push
std
mov
movnti
pop
icebp
mov
lds
sbb
outsb
push
enter
cli
incl
test
jl
push
xchg
test
clc
jl
cmp
mov
push
mov
jle
push
sub
test
call
fdivl
adc
inc
cld
addb
sub
push
xchg
jae
ljmp
xlat
adc
rcrl
lods
mov
ret
jg
sub
cltd
cmpl
and
jmp
insl
clc
or
sbb
pop
cmpsl
dec
jl
daa
dec
xor
decl
mov
xchg
iret
popf
cmc
mov
hlt
push
jecxz
lods
js
jo
sahf
mov
call
dec
dec
ds
test
cltd
ja
shll
inc
xlat
sbb
movsl
xchg
add
test
ljmp
lcall
lcall
jmp
mov
test
mov
insl
inc
mov
dec
mull
mov
mov
push
rcl
stc
call
mov
push
in
pop
add
push
sbb
jnp
and
lcall
mov
cli
push
or
popa
xchg
mov
and
ret
daa
int3
pop
nop
pushl
jns
lock
mov
add
ds
sub
cvtps2pi
ds
jg
test
aaa
pop
xor
push
push
cli
or
dec
inc
cmpsb
das
mov
xlat
adc
or
lret
jmp
xchg
fidivl
fs
cmp
jns
orb
call
add
shrb
pop
shrb
cmpb
lods
mov
aas
adc
sar
sub
scas
add
cmp
push
adc
sub
pushl
outsb
sub
jne
mov
scas
imul
dec
cs
test
lcall
push
int3
cmc
push
and
and
jns
in
xchg
xchg
add
fsubr
jmp
inc
mov
subl
push
andb
jl
and
outsb
push
faddp
repnz
add
lcall
incl
pop
insl
push
push
inc
dec
jnp
xor
out
jp
and
and
jmp
idivl
jle
sub
sti
mov
pop
or
mov
imul
lock
call
mov
mov
sarb
or
adc
ret
push
pop
mov
cmp
mov
sbb
addr16
imul
adc
mov
je
cltd
leave
stos
out
call
lcall
loop
test
popf
jae
imul
push
or
jne
mov
decl
inc
and
enterw
adc
mov
push
mov
xor
fdivr
mov
fcomip
jmp
stos
inc
and
mulb
popa
sbb
inc
aaa
test
pushl
aaa
mov
pop
jecxz
add
mov
lds
inc
inc
lea
cs
xchg
jg
inc
push
jbe
subl
cld
fadds
jmp
cwtl
pop
data16
push
jg
cmp
incl
jp
sbb
inc
add
push
in
lods
dec
lahf
hlt
inc
xlat
loopne
es
in
sbb
cmc
std
les
les
test
push
cmpsl
fbld
nop
flds
pop
adcl
popf
loope
push
dec
and
lret
mov
push
push
pop
push
jnp
push
std
and
or
adc
outsl
jge
in
inc
sbb
in
int3
out
insl
std
or
mov
add
mov
inc
sbb
hlt
int3
repz
inc
inc
cwtl
jge
dec
in
pop
incl
jo
ror
push
out
inc
daa
pop
fstps
and
add
ss
inc
jmp
mov
push
xor
orl
gs
lret
pushl
xor
pushf
loope
push
aaa
and
xor
aad
mov
jle
les
lcall
test
push
sbb
add
outsl
push
xor
push
cmpsb
push
push
jg
decl
dec
jp
mov
mov
mov
out
sti
loopne
imul
cmp
ljmp
mov
jp
and
sub
jle
inc
push
mov
add
popf
sub
decl
iret
xor
cli
imul
push
mov
das
mov
cmp
stos
sbb
mov
push
not
pushf
xor
cltd
push
mov
jge
or
stos
ljmp
das
jo
adc
cmpl
jle
adc
popf
push
mov
pushl
shl
lods
add
mov
jb
ret
sub
jg
dec
sbb
les
pushf
andl
xchg
sub
repz
ljmp
les
cmp
lret
and
mov
mov
sbb
jmp
mov
mov
mov
or
decl
das
jno
mov
cmp
insb
sub
ss
cli
adc
xchg
arpl
call
xchg
dec
add
cmp
pop
xor
push
mov
fsubrs
pop
jbe
test
popa
push
nop
xorl
stc
call
decb
ret
pop
sbb
jae
inc
pop
sub
jge
or
movsl
cmpsb
arpl
dec
in
jmp
daa
or
mov
call
lret
mov
ds
jle
sbb
xchg
mov
ja
in
mov
mov
mov
gs
pop
adc
lcall
lods
push
jge
adc
aaa
jle
mov
shr
and
or
loopne
jg
add
movsb
lea
les
add
jp
or
mov
incl
scas
jb
sub
mov
jno
sbb
dec
and
pop
xor
or
ljmp
jne
fsub
fdivl
add
mov
cmpb
imull
cmp
mov
icebp
call
loopne
sub
or
adc
test
pop
fcomps
push
out
dec
dec
test
ljmp
icebp
hlt
subl
pop
insl
cld
inc
shrb
xor
lock
call
mov
mov
fcmovu
lret
mov
mov
hlt
bound
rcll
pushl
lcall
cltd
and
cltd
xor
mov
dec
mov
xor
xchg
rorl
jmp
cmp
std
in
cmpsl
bound
ljmp
sbb
ljmp
repnz
sbb
pop
or
dec
sbb
add
mov
lahf
in
push
jmp
out
dec
lret
ret
cmp
pop
fidivrs
ror
arpl
js
xor
out
pop
sbb
cmpl
add
outsb
aaa
jne
jg
inc
ja
in
push
in
jge
roll
mov
idiv
aam
mov
mov
lcall
xchg
mov
icebp
idivb
pmulhuw
jmp
jmp
dec
push
xor
cmp
scas
xlat
notl
std
sbb
fs
clc
mov
and
cmp
push
sbb
pop
clc
aaa
push
adc
aad
lock
mov
in
xchg
push
mov
lret
scas
mov
repz
movsb
stos
and
sub
out
clc
lcall
dec
fld
nop
stc
test
aam
mov
and
call
and
cmp
jl
lret
sbb
push
dec
xchg
repz
inc
add
push
pop
imul
jb
sbb
sbb
mov
movsl
inc
jno
dec
xchg
inc
aad
call
push
push
fdivr
jmp
icebp
and
lods
mov
mov
ja
into
cmp
call
push
icebp
mov
xchg
popa
jg
lret
cmp
icebp
lret
mov
pop
sbb
ljmp
push
mov
mov
xor
or
mov
dec
sub
sahf
in
cli
clc
xchg
mov
push
movsb
pop
iret
mov
sbb
xchg
push
xor
pop
sub
aaa
add
in
pop
pop
icebp
sub
xchg
call
sarl
xor
inc
xor
pop
xchg
push
leave
fwait
lods
sahf
scas
decb
xchg
imul
ljmp
std
icebp
pop
in
push
push
jg
fisubl
lea
add
data16
cmp
or
xchg
scas
mov
nop
or
lcall
adc
lret
xor
dec
pop
mov
push
pusha
fs
jg
inc
pop
lea
sbb
les
xchg
xchg
mov
and
pop
xchg
icebp
jg
dec
dec
jp
and
mov
hlt
mov
shll
xchg
dec
scas
insb
jg
das
int
int3
loop
add
shll
cmpsl
imul
mul
xchg
mov
mov
dec
or
xor
lahf
lods
dec
sbb
pop
cmp
pushf
or
decl
mov
in
sbb
testb
xchg
xchg
aaa
mov
jg
mov
dec
loopne
add
dec
test
psubd
clc
ljmp
bound
je
xchg
and
mov
or
fdivr
jg
pop
ficoml
test
sub
fstp
push
sbb
adc
or
pushl
rcr
imul
mov
cli
sbb
iret
inc
dec
pop
fs
ficoms
cld
pop
mov
mov
sub
mov
incb
lcall
in
add
jno
shrb
jmp
mov
call
jo
and
mov
sub
sub
ds
push
nop
aas
ljmp
in
aad
jl
call
cmpsb
hlt
push
sarb
int3
and
lcall
mov
fcoml
xchg
into
rdtsc
and
jle
add
jbe
jae
frstor
jg
sub
jne
movsb
or
mov
or
ficoms
adc
xchg
movsl
test
mov
int
scas
dec
dec
adc
fdivr
outsl
xchg
cli
mov
push
cmp
mov
mov
adc
mov
aaa
cli
das
lock
shll
cs
in
sbb
ljmp
sub
cs
or
push
jnp
jp
movsb
lods
outsb
or
lcall
fldl2e
nop
lods
cmpsb
mov
jb
add
lret
cmp
sub
pop
fisttpl
dec
and
pushl
xchg
sub
nop
and
sub
popf
setno
and
adc
imul
hlt
dec
pop
cmpsl
rolb
adc
push
fistps
imul
lahf
fwait
imul
cmp
mov
call
push
xchg
add
ljmp
and
mov
xor
lcall
clc
add
arpl
xchg
frstor
fiadds
lods
test
ret
xchg
call
mov
push
scas
enter
decb
cmp
data16
sub
enter
test
inc
outsl
test
hlt
cmp
mov
adc
loopne
jg
shrl
pop
cmp
sti
gs
aad
idiv
aam
add
das
std
pop
test
faddp
adcb
leave
push
sub
test
nop
mov
clc
hlt
cld
mov
in
pop
cltd
test
push
mov
sub
out
mov
add
push
lods
cmp
lock
js
aaa
clc
jmp
lcall
je
mov
addl
lcall
xor
adc
jb
xor
ja
jae
icebp
fildll
shlb
mov
or
int
ljmp
out
insb
mov
dec
cli
mov
mov
sub
mov
bound
mov
lea
pop
xchg
pop
sub
lcall
mov
shll
jl
and
dec
mov
insl
sub
adc
and
movsl
insl
call
fnstenv
push
cmp
bound
push
rcrl
decl
inc
test
shll
fs
pusha
xchg
xor
mov
mov
xchg
lahf
and
fildll
aad
inc
bound
into
fstps
andb
mov
movsl
decl
mov
sub
or
mov
out
inc
mov
sti
test
pushl
lret
ret
xchg
outsb
in
outsl
fists
out
stc
lcall
push
jg
dec
icebp
xchg
pop
fwait
mov
jne
mov
insl
fldt
pop
in
daa
incl
arpl
outsl
and
inc
sti
sub
lcall
mov
xchg
mov
jb
xor
inc
mov
adc
cmp
sbb
jg
out
mov
dec
cld
inc
inc
aas
xchg
lcall
cmp
or
push
je
adc
int3
loope
daa
ljmp
jmp
loop
pop
jns
jmp
cmp
andl
mov
and
aad
jmp
jmp
outsb
test
mov
gs
repnz
mov
int3
je
mov
jg
adc
mov
data16
cmp
cmpsb
dec
xchg
sbb
insl
mov
and
std
mov
push
pushf
and
stos
movsl
jmp
mov
jmp
inc
mov
mov
pop
mov
fs
adcl
ja
mov
call
sub
adc
test
filds
lret
or
sub
sub
jle
jg
push
adc
cmp
mov
scas
lcall
push
in
out
addb
call
dec
faddl
rorl
popf
push
add
and
pushl
xor
mov
and
cmp
sbb
mov
cld
and
les
lds
sub
mov
sub
andb
std
pop
fneni(8087
inc
inc
sbb
lcall
fucomi
daa
add
pop
push
imul
xchg
ja
loopne
call
mov
xchg
mov
insl
repz
imul
loop
scas
dec
ds
lock
fidivs
mov
mov
mov
leave
inc
lret
mov
js
dec
adc
or
sub
test
fadds
push
and
dec
pop
lcall
icebp
decl
call
cmpsl
scas
push
or
sbb
call
pop
add
push
add
adcb
push
fmuls
jg
mov
sahf
jbe
cmpsl
or
sbb
xor
ss
jmp
lahf
pop
push
and
pop
or
and
ja
xor
push
lret
mov
jno
and
mov
ljmp
push
mov
mov
test
pop
mov
cs
decl
inc
adc
mov
aaa
push
push
in
out
sbb
ljmp
cli
cmp
mov
insb
sbb
fnstcw
mov
mov
mov
lcall
xor
mov
push
aaa
shlb
mov
sub
lods
mov
add
jecxz
mov
in
and
adc
xor
add
lock
jne
loop
jge
pop
inc
sti
fldt
pop
pop
and
pushl
stos
stos
shl
mov
mov
or
stos
hlt
lret
lea
insb
jmp
outsl
push
mov
std
pop
std
ljmp
add
xchg
cmp
xor
add
pop
jg
sarb
add
hlt
and
lea
or
ss
jmp
inc
cmp
cmpsb
dec
imul
sbb
scas
popa
adc
lcall
sub
ret
xchg
pop
jl
xchg
and
push
inc
adc
adc
repz
icebp
pop
std
jmp
leave
ja
dec
mov
enter
push
fstpl
call
das
sahf
lret
fwait
cltd
lret
in
adc
mov
lods
mov
lods
fbstp
out
jle
repz
fisttps
stc
pop
arpl
rorb
test
pop
jns
ja
mov
jg
jg
pop
shr
pop
mov
jl
test
addr16
cmp
xchg
pop
push
jg
push
pop
andb
sbbb
fiadds
mov
ret
pop
in
ljmp
dec
mov
xor
lcall
push
sbb
fbld
mov
fnstsw
pushf
push
in
xchg
cli
cmp
lret
dec
sbb
xchg
fdivrp
lcall
mov
sub
clc
jp
mov
xor
pop
xlat
dec
out
daa
xchg
sbb
or
clc
lcall
popf
push
ss
decl
push
or
jmp
arpl
cwtl
pusha
add
iret
ret
push
cltd
fildll
push
inc
pushf
fwait
or
dec
and
jno
std
pushl
jle
xchg
stos
sub
mov
cmp
ljmp
loop
lods
into
sub
fucompp
jmp
test
sbb
cld
inc
call
and
dec
push
push
pop
push
pop
cmc
xchg
mov
sub
andl
decl
scas
ja
dec
jp
sub
insb
nop
jecxz
movsl
push
fs
pop
ljmp
jp
shlb
xor
out
mov
xchg
nop
jp
xchg
aam
or
stc
jle
or
xchg
xor
call
lock
cmp
jo
mov
in
push
pop
push
js
fcompl
aad
mov
fnclex
decl
insl
jg
inc
xor
je
in
loop
jecxz
mov
cmc
je
or
ret
ljmp
inc
mov
lret
push
jns
pop
test
adc
sub
jbe
hlt
in
clc
repnz
mov
addr16
jge
nop
pop
cmp
pop
pop
jmp
mov
jge
xchg
test
call
xchg
sbb
mov
repz
mov
call
push
pushf
push
stos
mov
or
mov
mov
jg
ds
aad
xchg
push
fwait
or
or
jmp
push
xchg
mov
push
movsb
out
mov
lods
sarb
push
vshufps
adc
adc
or
xchg
cli
dec
adc
mov
dec
shll
icebp
jnp
xor
sbb
imul
mov
bound
popf
outsl
xor
or
call
stos
aam
xor
scas
mov
xchg
fisttps
mov
loope
jmp
cmp
ljmp
or
aaa
adc
mov
inc
cld
cmpsl
sbb
push
mov
stc
mov
leave
popf
mov
loop
call
dec
adc
movsb
xor
push
out
pop
xor
add
ss
decl
nop
sahf
mov
cmp
jo
into
mov
jl
mov
jle
es
leave
mov
sbb
sbb
aam
lcall
jmp
pop
int3
movsl
lcall
pop
arpl
and
add
jl
push
stos
and
or
push
xchg
mov
outsl
popf
lcall
outsl
hlt
pop
pop
xor
push
pop
xchg
sub
out
mov
pop
adc
jmp
iret
aad
call
dec
add
pusha
int3
sbb
adc
mull
or
cmp
or
call
cmp
mov
push
pop
into
xlat
add
lcall
call
in
sub
or
or
dec
add
push
dec
and
pushl
iret
pop
dec
iret
imul
lock
loop
sbb
or
ret
inc
aas
sbb
ja
jae
push
hlt
jb
jb
jmp
xorl
cld
xchg
iret
mov
xchg
xchg
cmp
aad
movsb
jnp
in
adc
dec
add
jnp
aaa
add
mov
push
cmp
aaa
cld
push
cmp
jg
xor
fsincos
and
push
and
cs
add
xchg
fbld
mov
or
mov
sbb
lret
or
dec
inc
and
mov
outsl
lods
adc
addr16
lods
or
gs
mov
mov
imul
inc
aam
rcrb
adc
pushl
mov
icebp
or
sub
into
add
xor
out
jnp
cmp
or
jmp
pop
mov
frstor
fiadds
adc
out
sub
ror
lcall
push
xor
lcall
cmp
ss
frstor
imul
dec
jmp
mov
ret
sub
stos
xchg
stos
out
mov
fbld
jle
cli
sbb
outsl
enter
leave
notb
adc
test
jns
movsl
inc
in
push
call
mov
shlb
movsl
pop
xchg
jl
gs
inc
lcall
aas
int
stos
cmpsb
loopne
loop
adc
xchg
test
out
dec
fsts
ds
dec
ja
pushf
sbb
xor
fxch
in
ret
fiadds
rcl
jle
fsubl
jg
xor
cmp
inc
scas
mov
lods
jg
and
mov
outsb
mov
jecxz
mov
das
pop
cli
cmp
mov
push
aam
xchg
mov
dec
sbb
mov
sti
jmp
popa
imul
fadds
mov
jg
adc
push
int3
sub
imul
ss
loope
mov
lcall
dec
lods
movups
ficompl
ds
nop
push
sahf
sub
mov
shr
jne
pop
sub
mov
cld
sbb
mov
pop
mov
sub
xchg
cli
cmc
mov
incl
pop
ljmp
or
cmp
pop
shlb
ljmp
movsl
in
mov
mov
push
jne
pop
insb
inc
push
loope
fsubr
les
mov
fnstenv
call
cmp
adc
sbb
sti
mov
add
test
dec
pop
mov
loope
push
pop
and
pop
mov
fwait
aad
insb
xlat
sub
inc
ds
xchg
jl
mov
xchg
stos
push
ljmp
aad
jcxz
loope
sbb
xor
dec
clc
sbb
mov
mov
cmp
xchg
pop
les
fldt
mov
dec
test
cmpsl
fisubrl
dec
es
out
ss
sbb
jg
jmp
sbb
popl
dec
aaa
xchg
mov
sbb
lcall
std
push
xor
cwtl
iret
fnsave
lods
or
jmp
lods
dec
outsb
add
mov
imul
and
cmp
inc
sub
movl
mov
cld
jno
mov
dec
in
jae
adc
hlt
mov
mov
dec
push
lret
leave
cmpsb
ja
inc
mov
pop
outsl
icebp
jmp
cs
pop
mov
mov
ret
out
loope
jnp
adcl
decl
or
pop
sub
into
sub
jae
loop
test
stos
lret
mov
lahf
addr16
in
jbe
popf
sub
jns
mov
mov
notb
add
xchg
jbe
mov
jg
mov
fs
js
pop
add
xchg
mov
out
loopne
orl
jb
in
cmp
pop
roll
lahf
addr16
scas
cmp
lods
dec
mov
push
add
sarl
sub
lods
ljmp
add
loopne
cmc
jns
jp
mov
ds
jg
jne
rorb
aaa
jmp
add
je
pop
mov
cltd
hlt
cmp
push
js
out
imul
rclb
mov
push
cwtl
cmpsb
or
pop
cld
jg
in
movsb
insb
sbb
popa
jmp
stc
jns
xchg
cmp
std
mov
lahf
loopne
or
movsb
je
cmpsb
insb
mov
data16
sbb
lcall
jp
dec
push
or
mov
sbb
inc
stc
jecxz
pop
or
xchg
inc
call
std
sub
xchg
inc
jae
pop
adc
out
pop
mov
mov
call
adc
iret
fstpt
insb
popa
daa
pop
fucom
js
lret
lock
mov
cmp
outsb
cmc
dec
cmp
ljmp
loope
shlb
aad
add
ljmp
push
jae
mov
jbe
bound
out
enter
rorl
xor
aas
int
push
mov
xchg
lret
sub
loopne
mov
pop
dec
stc
pop
inc
pop
xchg
jmp
pushl
push
test
ret
mov
sub
and
call
aad
xor
adc
pop
loope
inc
mov
add
cmp
cmp
cmp
mov
jmp
ret
lock
ficompl
pop
stos
fstpl
dec
xor
adc
decl
cld
pop
mov
int3
test
je
mov
stos
arpl
add
push
and
jmp
mov
mov
fnstcw
div
dec
cmc
stos
add
test
les
test
adc
incl
inc
xlat
xchg
pop
mov
loopne
rcll
in
shlb
adc
sub
pop
das
xchg
fcoms
lods
fbstp
dec
pop
or
mov
insl
pop
xlat
test
pushl
fwait
adcl
add
idivb
sarl
ret
and
fists
xchg
je
push
incl
or
and
hlt
cmpsb
pop
mov
inc
test
xchg
lcall
ficoml
dec
cwtl
pop
mulb
push
cmpsb
xor
out
jle
pop
cltd
xchg
sub
es
or
sbb
mov
scas
inc
mov
imul
incl
mov
clc
mov
inc
divl
jp
pop
xor
xor
inc
add
fldcw
std
push
jno
jae
lods
jl
jle
cli
lcall
inc
or
addr16
test
cmpsl
aaa
imul
rol
data16
pushl
xchg
iret
pop
mov
pop
daa
mov
mov
inc
dec
add
mov
lcall
fidivl
push
cli
loope
jmp
push
lret
push
sti
ficompl
jnp
jo
jp
fwait
imul
cs
std
cmp
jmp
mov
incl
jns
xor
shr
fldcw
in
gs
push
add
push
das
pop
loop
ret
xor
rorl
fldt
and
decl
fisttps
test
push
leave
or
insl
ret
jl
dec
pusha
lcall
dec
test
scas
and
rcll
out
add
or
jmp
mov
sbb
jl
movsb
pop
lahf
xchg
test
iret
inc
sbb
push
decl
cld
cmp
movsb
sti
psrlq
and
pusha
dec
push
cld
and
mov
pop
and
cmpsl
dec
lods
jb
xchg
sub
jne
cmp
ret
add
ljmp
cmc
jo
dec
es
xchg
mov
or
mov
popf
lea
and
neg
inc
pop
fucomip
das
je
add
aad
test
lcall
decl
mov
cmc
addr16
sahf
jl
call
cmpsb
cs
sub
outsl
hlt
jmp
hlt
in
push
fnsave
inc
inc
inc
or
adc
in
aas
mov
dec
decl
mov
adc
mov
and
mov
mov
inc
dec
pop
mov
push
jmp
sahf
psrld
sub
fdivr
adc
dec
aam
mov
pop
cmpsl
in
pop
jo
jge
add
cmp
cltd
or
sbb
fmul
out
or
icebp
cmp
sbb
incl
les
dec
ret
stc
mov
push
xchg
push
mov
xor
adc
cmp
movb
and
or
out
xchg
call
mov
sub
jp
movsb
xlat
push
std
push
dec
or
das
push
cli
aam
add
popa
xlat
loopne
add
inc
andl
add
into
mov
call
inc
shrl
popa
xchg
mov
lea
outsl
jle
hlt
repz
xchg
pop
lahf
mov
cmp
xchg
pop
std
jg
fdivl
jp
sub
roll
dec
leave
xchg
leave
mov
pop
cmp
xchg
add
push
adc
mov
mov
mov
lea
mov
mov
mov
push
repnz
cmp
clc
decl
jge
orb
insb
dec
add
in
outsb
and
xor
jns
popa
outsl
or
mov
roll
loop
mov
stc
testb
cmc
jnp
jnp
popf
dec
inc
repnz
inc
add
dec
ret
inc
lret
jl
adc
jmp
mov
push
shlb
jmp
sbb
stc
mov
hlt
mov
inc
scas
cmpsb
cmp
and
ds
scas
jge
enter
aaa
outsl
xchg
decl
iret
lods
jg
push
or
and
xchg
fimull
cli
int3
pop
mov
sbb
jl
push
stc
sbb
icebp
dec
cmpsl
int
sahf
stc
mov
mov
in
adc
rcrb
xchg
int
jl
test
inc
inc
mulb
fimull
pop
adcb
mov
stos
jmp
xor
cmp
cmp
sub
cs
jmp
fwait
ret
push
je
push
das
je
gs
mov
sub
pop
jg
xchg
sti
pop
and
das
cmc
mov
push
sub
ds
cld
xchg
adc
pop
dec
xchg
mov
sub
mov
pop
or
mov
movsb
in
aaa
push
cld
arpl
mov
clc
sti
dec
dec
push
push
or
xor
sub
push
xchg
push
pushf
xchg
mov
mov
jl
inc
cmp
call
cli
push
imul
push
cmpsb
fldl
push
and
fwait
cs
inc
icebp
stos
lods
mov
std
mov
ret
xor
pop
dec
pop
jle
jne
xchg
ja
jmp
inc
add
cmp
daa
cmp
fimull
outsb
or
sub
jg
out
add
les
push
push
scas
sub
pop
add
adc
xlat
inc
and
jg
movb
js
cmp
cmp
push
mov
lret
loopne
adc
push
stc
jnp
das
lock
test
xchg
sti
dec
out
scas
xchg
and
mov
enter
call
aam
jmp
ja
jb
jg
pop
ljmp
jg
decl
stos
mov
pop
cmp
ja
push
cli
lods
mov
push
mov
lcall
stc
cmpsb
stos
xbegin
add
inc
ud0
fisubl
pusha
arpl
push
imull
push
or
or
jge
sbb
lcall
mov
xchg
and
fwait
sbb
inc
mov
cltd
into
sub
cmp
in
sub
nop
and
popa
icebp
inc
int3
lds
xchg
xchg
dec
hlt
push
jmp
lods
sbb
cmp
stos
in
and
lds
mov
mov
mov
lret
imul
inc
loopne
lods
sub
cli
inc
mov
xlat
cmp
jp
pop
sbb
mov
ljmp
inc
scas
push
cwtl
imul
loop
jecxz
or
dec
je
js
movsb
mov
filds
xor
ss
in
loop
sub
inc
pop
cmp
cwtl
cmp
or
das
and
pusha
fsubl
out
pushl
and
incb
push
out
daa
add
cmp
popf
jg
ret
popf
jmp
mov
mov
insb
rcr
addl
push
pop
lods
pushl
cs
sub
shlb
lret
mov
mov
popa
xor
pop
in
pop
mov
daa
cmc
aas
jmp
jl
mov
or
cmpsl
sbb
inc
dec
lret
outsl
sbb
jecxz
loopne
dec
inc
lcall
inc
xchg
mov
mov
imul
sahf
sbb
je
imul
call
lcall
inc
inc
movb
in
addr16
mov
mov
xor
pop
clc
std
cld
bound
pop
mov
add
xchg
shr
sbb
nop
or
test
fidivl
xor
loop
into
add
inc
mov
pushl
clc
ficoms
shr
adc
test
cmc
fbstp
pushf
push
jmp
lock
sbb
ljmp
push
or
call
pop
aaa
jg
ljmp
pop
hlt
jl
and
pop
mov
or
imul
out
into
call
jge
rcr
pop
xor
xor
call
in
adc
lret
mov
sub
decl
std
sub
fstpl
test
xor
in
dec
mov
mov
jnp
ss
xor
sti
push
fistl
stc
xor
inc
pop
sbb
xor
incl
mov
pop
pop
xlat
nopl
lret
jb
mov
in
out
xchg
fwait
xchg
sar
jmp
jb
push
pop
sbbl
call
push
mov
lcall
std
insl
mov
outsb
addr16
add
inc
popa
jno
jle
push
sahf
cld
decl
lcall
idivl
insl
pop
sbb
scas
push
or
cmp
push
mov
decl
xchg
pushf
jno
and
cld
xor
aam
add
rclb
inc
pushl
mov
xchg
imul
push
dec
stc
push
dec
std
decl
fwait
sahf
xor
test
enter
pop
dec
xor
inc
nop
outsb
mov
in
sub
dec
push
adc
out
mov
xor
repnz
insb
jno
testl
call
add
mov
adc
dec
adc
push
push
fisttpl
dec
cli
gs
pop
repz
pop
stc
mov
cld
imul
fbld
stos
movb
xchg
pop
pop
cmpsb
mov
adc
sahf
sub
mov
aaa
adc
leave
or
and
call
pop
mov
xlat
fs
or
loopne
cmc
pop
rclb
enter
jmp
inc
inc
add
insl
subb
lods
xor
bound
dec
clc
ljmp
jg
xchg
sub
adc
mov
sub
push
mov
jbe
les
fildll
and
inc
dec
push
dec
rcrl
add
push
jno
fnstsw
outsl
scas
sbb
decb
mov
cs
imul
testl
jbe
push
jne
popf
je
in
lds
sub
lret
jo
rcll
inc
imull
dec
into
fldenv
js
add
jg
lcall
movsl
cmp
rolb
je
out
outsl
in
push
xorb
incl
aam
mov
bound
dec
popa
pop
cs
xchg
mov
incl
pop
in
mov
inc
add
lods
shll
mov
lcall
leave
sub
es
fists
dec
adc
aam
sub
andb
sub
fcompl
inc
jb
push
mov
call
stc
xchg
adc
das
inc
mov
jne
dec
fnsave
mov
js
das
insl
xchg
xlat
outsl
in
cli
mov
xchg
jb
adc
bound
decl
or
or
test
das
out
sub
sar
js
rolb
cltd
daa
dec
addr16
fnstenv
and
sub
leave
rolb
loopne
and
mov
sub
iret
movsl
mov
push
jecxz
lret
mov
jmp
lock
lcall
or
cmpsl
mov
jge
pop
add
das
loope
mov
jb
cmpsb
mov
ljmp
sbb
jbe
nop
mov
jl
repnz
pop
cmpsb
decb
or
xor
lcall
pop
jg
sub
xor
arpl
movsl
adcl
rcrl
addr16
xchg
in
xchg
movsl
dec
andb
sti
insb
mov
mov
jo
into
dec
outsl
mov
lcall
mov
insb
stos
out
cwtl
in
jnp
pushl
push
jb
cmpsb
pusha
mov
scas
pop
adc
adc
imul
and
in
decl
outsl
lock
mov
xchg
sbb
call
jns
xchg
and
sarb
das
sti
rcl
cmp
push
aaa
cli
dec
xor
mov
mov
fbstp
add
lcall
mov
adc
cmpsl
shrb
std
jmp
hlt
xor
jmp
out
es
sti
aad
fmuls
out
add
jge
sub
push
pop
scas
lcall
outsl
test
adc
jo
dec
test
and
lods
int
mov
xor
fildll
mov
mov
jmp
jmp
decl
jmp
pop
xchg
js
js
sub
mov
fsubrs
std
and
rorb
les
sbb
cli
mov
iret
adc
call
lcall
xorl
in
mov
and
loopne
jg
ss
or
sbb
fmull
sub
test
inc
clc
cli
or
cs
push
and
push
xor
sub
jg
or
push
or
and
aaa
or
aaa
leave
push
and
hlt
ljmp
cld
fnstcw
jmp
dec
or
arpl
xor
dec
insl
dec
mov
incl
enter
aas
pop
push
and
movups
dec
incl
jnp
sbb
jg
adc
adc
js
inc
jmp
mov
clc
mov
or
ljmp
call
movsb
pop
inc
cmp
jp
out
filds
jl
adc
and
lahf
mov
or
cmp
addr16
test
jb
push
sub
mov
incl
cmpsb
pop
xchg
in
in
je
adc
fmull
cmp
xlat
xchg
or
xchg
ds
sar
or
jns
push
data16
mov
and
inc
dec
push
cmp
fidivs
pop
xchg
lret
stc
ljmp
cmpsl
or
mov
adc
leave
fstps
ljmp
rclb
xchg
ljmp
insl
mov
jle
inc
insb
and
sub
or
out
ja
inc
cmp
push
add
int
pop
clc
pushl
lds
push
xlat
sbb
mov
rol
jmp
fisttpl
jl
test
jnp
fcomip
nop
push
cmc
pop
negl
mov
das
lock
jo
cmp
fldenv
push
idiv
incl
push
enter
cmc
nopl
je
adc
loope
mov
aaa
clc
ss
test
inc
fisubs
jbe
les
out
imul
adc
jnp
mov
nop
pop
fldcw
jmp
jnp
int
jne
add
clc
jmp
adc
mov
jp
fcoms
dec
loopne
ffreep
adc
test
fwait
adc
insl
jae
and
jne
sahf
fisubrl
outsl
xchg
fldcw
mov
pushl
add
sbb
insb
aad
out
and
sbb
and
add
shrb
std
sub
int3
aas
clc
xchg
bound
cmp
fists
adc
mov
jmp
cmp
sbb
lock
int3
sbb
xor
stc
imul
adc
test
pushl
nop
push
insb
or
pop
add
sti
inc
sbb
cmpsl
loop
ljmp
mov
mov
filds
push
xor
mov
imul
pop
test
out
mov
ror
cmp
sarb
mov
out
xor
push
jle
icebp
fs
lods
dec
jmp
cmp
shll
jmp
jmp
pop
aad
cmp
lahf
scas
sbb
push
in
sub
add
lds
push
push
and
les
addr16
push
out
aaa
ja
xlat
lds
adcb
pushl
or
cmpsl
mov
adc
std
in
mulb
sbb
iret
jle
pop
pop
lahf
mov
pushl
sub
rcrl
xor
scas
mov
sub
jmp
push
stos
or
and
repnz
add
sub
mov
sbb
xchg
xchg
sub
test
cmpsb
and
inc
pushl
add
cmp
mov
cmp
inc
ljmp
jmp
daa
cmp
sbbb
jb
mov
mov
add
setae
cmp
fists
ss
jmp
fsub
dec
aam
roll
or
add
jg
movsl
and
lock
adcl
or
inc
out
xlat
mov
fisubrl
jge
xchg
mov
and
test
mov
fucomip
incl
dec
mov
pop
scas
imul
mov
ja
scas
mov
fstpl
or
leave
or
lahf
inc
sub
push
push
mov
xor
sub
ljmp
mov
add
bound
dec
inc
mov
sbb
loopne
pop
or
sti
mov
inc
push
xchg
sub
int3
push
mov
outsl
ljmp
cmc
jmp
aam
sbb
out
mov
sbb
mov
into
gs
call
and
add
mov
cmp
ffreep
push
imul
mov
lock
cwtl
loope
lea
mov
mov
rcrl
bound
xlat
mov
adc
add
mov
pop
out
inc
push
call
repz
pushf
aad
jno
lods
pop
lods
dec
ljmp
icebp
mov
arpl
ljmp
jo
repnz
xchg
pop
cmp
pop
xchg
cmpsl
dec
mov
lcall
ljmp
add
testb
jno
inc
jge
cld
jle
stos
aam
insb
pop
movsl
fsubp
incl
pop
and
mov
mov
mov
lods
test
mov
add
test
dec
add
cli
sbb
sub
mov
repnz
inc
jbe
jl
dec
xchg
sbb
les
jae
rorb
pop
push
sbb
clc
dec
and
dec
decl
fsubr
or
fsubrl
mov
pop
xor
out
inc
popl
pop
call
gs
dec
faddl
push
fldcw
cwtl
push
lods
mov
cld
pop
fwait
movsb
and
in
cmp
cmp
cmp
incl
mov
cltd
mov
push
daa
dec
or
mov
pushl
out
push
push
cwtl
cld
loope
cwtl
jno
mov
fildl
aaa
fisubrs
mov
jno
xor
xlat
sub
or
or
sbb
jbe
and
mov
int3
mov
cmp
jns
movsb
mov
ljmp
mov
lcall
in
pop
push
push
aad
add
cmp
jmp
add
push
fisubrl
mov
and
pop
sbb
aad
hlt
call
aas
sbb
mov
add
lahf
dec
ds
dec
sti
imul
inc
movsb
xor
fdivl
and
ja
pop
push
mov
push
sbb
fisttps
and
fdivrl
pop
pcmpgtb
lcall
imul
enter
cmp
mov
inc
sub
cmp
mov
mov
ret
mov
pop
xchg
aam
push
push
imul
imul
sti
mov
out
lahf
lock
adc
insl
cli
and
cwtl
cmp
test
mov
int
movsl
mov
icebp
add
cmp
test
pop
sbb
xchg
mov
arpl
ljmp
je
dec
je
cmp
pop
mov
cmc
sub
scas
fwait
in
mov
pusha
call
aas
leave
adc
lahf
lahf
xor
and
or
push
jne
inc
imul
call
fs
lcall
fbld
jl
jnp
ffree
jns
sar
fbld
or
jno
test
ds
sbb
icebp
pop
out
stos
xor
cld
sbb
mov
in
icebp
cmpsb
imul
ljmp
sub
xlat
in
and
fdivs
fimull
dec
mov
mov
jae
call
sbb
xchg
mov
cmp
gs
ss
in
popl
lahf
in
pop
and
lcall
jle
inc
dec
and
dec
scas
addr16
sub
lret
mov
ss
loope
movsl
ljmp
push
cs
movsl
mov
fcmovne
ret
dec
lds
ljmp
jg
ret
mov
outsl
xchg
das
push
jl
mov
cmp
push
xlat
pop
lcall
ret
das
fst
push
and
test
call
repz
push
mov
mov
call
xchg
test
das
push
adc
pop
sbb
jg
dec
loopne
mov
pusha
sar
mov
sub
dec
push
sub
push
cmc
mov
cmpsb
movsb
push
cmp
or
cmp
jmp
pop
sbb
fildll
repnz
push
out
sub
and
out
push
hlt
out
psubb
mov
cli
dec
sbb
je
jno
adc
bound
popf
sbbb
aaa
sbb
je
clc
and
rcll
mov
mov
add
cwtl
sbb
daa
mov
pusha
popf
das
std
pop
push
cmpsl
dec
repz
test
sub
inc
repz
fs
ljmp
hlt
xchg
aaa
xchg
dec
xlat
mov
ljmp
xchg
cmpsl
stos
jle
popa
daa
std
decl
cmp
xchg
das
mov
shrl
mov
je
mov
push
push
push
and
das
inc
loop
lret
test
xlat
pop
jecxz
mov
aad
mov
cmp
les
jg
dec
mov
xor
nop
mul
inc
pop
idiv
incl
mov
jge
inc
insl
pushf
push
push
mov
xor
dec
push
sub
xchg
decl
or
iret
jl
jns
loop
enter
mov
ljmp
cmc
cmp
aas
call
push
pusha
pop
jae
stos
inc
add
sub
jmp
sub
inc
mov
iret
sbbb
gs
dec
and
or
in
mov
xchg
mov
add
rcr
xor
xor
push
mov
shlb
ljmp
jbe
hlt
ucomiss
dec
int
int
push
xchg
scas
aaa
lea
incl
dec
push
popf
or
scas
push
sbb
mov
mov
cld
lret
add
add
pop
clc
add
addb
mov
sub
push
xor
ljmp
in
mov
shll
sub
lds
mov
push
inc
mov
xchg
cld
leave
insl
xor
add
insb
mov
in
mov
dec
call
pushl
stos
sbb
dec
inc
add
lods
cmp
cmp
ljmp
push
daa
xor
pop
mov
or
mov
push
push
shr
lret
push
lods
pop
hlt
xor
mov
or
sub
or
sub
mov
pushl
jno
push
stos
jb
dec
out
pop
adc
dec
pop
in
shrb
add
mov
pop
jle
dec
aas
aas
dec
or
int3
nop
jecxz
and
xor
mov
in
adc
jo
jbe
mov
in
ljmp
hlt
in
aad
mov
scas
movsb
push
jp
rol
movsl
fcoml
pop
loop
pop
or
jg
or
xchg
jg
xchg
ja
ss
scas
pop
jns
icebp
xor
dec
sar
mov
aaa
out
pop
fidivs
testb
ljmp
int
cmp
popa
or
push
lods
jecxz
jb
and
int3
mov
sbb
fcomi
mov
xlat
test
or
incl
and
mov
fidivrs
xor
dec
icebp
adc
popf
ja
sbb
dec
cmc
call
dec
jo
es
adc
xchg
xor
testb
add
pop
iret
lock
cltd
ljmp
jns
sub
mov
fcmovbe
dec
jle
cmp
inc
cmp
lods
test
decl
in
addl
sub
insb
mov
test
inc
add
inc
mov
wrmsr
pop
push
push
pop
lcall
or
ret
inc
lahf
mov
lahf
pushf
sahf
pop
ljmp
std
inc
in
bound
rcl
sti
ficoml
loop
mov
inc
mov
outsb
mov
mov
sub
aam
mov
das
icebp
sub
inc
mov
push
shl
jg
movsl
cmc
sbb
mov
add
sbb
mov
nop
outsl
push
call
jle
loope
call
xor
jno
lock
pop
adc
inc
or
out
lahf
inc
in
mov
lcall
sbb
lcall
push
inc
and
cmpl
xor
nop
push
mov
xor
idiv
js
sbb
pop
je
sbb
aam
mov
pop
pop
push
sub
push
pop
pushf
push
ret
mov
out
fwait
in
xor
xor
jae
loope
jmp
pop
outsb
sub
jle
hlt
mov
sbbb
jmp
iret
push
add
or
xchg
jle
call
mov
mov
int
es
daa
outsl
mov
call
mov
jmp
rorl
adc
jl
mov
sbb
imulb
mov
push
out
arpl
pop
mov
cltd
sbb
xchg
mov
loop
mov
iret
jge
pushl
cli
ret
and
popf
std
jno
and
pop
adc
cltd
lea
fidivl
roll
xchg
xchg
add
or
bound
sbb
mov
dec
movb
and
xlat
inc
mov
mov
clc
mov
aas
push
jns
mov
lods
mov
pop
mov
sbb
mov
iret
cwtl
repz
lea
sbb
popa
dec
dec
push
pop
inc
popf
ljmp
jmp
data16
dec
loope
rolb
inc
out
push
dec
inc
mov
push
xchg
xlat
lret
mov
js
adc
xchg
notb
leave
sub
dec
cld
ljmp
and
idiv
sub
mov
arpl
sub
incl
decl
mov
ds
jp
cli
aaa
dec
ficoms
adc
mov
push
mov
jg
mov
push
imul
mov
scas
cmp
and
sbb
jbe
xchg
inc
arpl
in
mov
nop
cs
adc
enter
mov
lret
incl
mov
jns
mov
aam
arpl
dec
fs
sub
xchg
scas
call
mov
outsl
sar
call
rcll
mov
repz
push
fidivl
bsf
mov
cmp
fcmovnu
mov
and
ljmp
or
sti
ret
inc
push
dec
push
loope
popf
cmp
fcmovbe
pop
sbbl
jg
cld
jmp
iret
ljmp
mov
mov
adc
jmp
testb
jae
mov
cmp
mov
ret
mov
addl
fs
push
in
mov
dec
xchg
and
sub
mov
push
pusha
mov
insb
sbb
adc
xchg
insb
adc
inc
or
cmp
mov
in
xorb
sub
call
mov
inc
insb
or
aaa
cwtl
xchg
cmp
mov
in
xor
sti
call
ljmp
add
jbe
call
xlat
roll
xchg
lods
cmp
aaa
clc
cli
shrl
sbb
pusha
imul
fistps
mov
cli
loop
dec
mov
es
scas
cld
and
push
sbb
xchg
hlt
inc
push
iret
loopne
int3
mov
pop
das
mov
jmp
sbb
es
pop
sarb
lret
pop
out
sub
daa
bound
push
jbe
aad
mov
jmp
cmp
mov
push
add
jge
add
jecxz
mov
call
bound
push
sbb
inc
jl
mov
xchg
mov
rclb
in
iret
sbb
addl
inc
cmpb
adc
sti
fmul
scas
dec
fisubrl
enter
ljmp
pop
inc
push
ja
cmc
push
out
sbb
andb
fisttpl
cli
call
jle
cmp
aaa
pop
cmp
dec
outsb
lock
out
imull
mov
fucomip
mov
xchg
sub
fiadds
gs
sbb
cmp
xchg
movsl
dec
or
movsb
repz
jmp
lahf
push
movsl
call
jno
push
ret
fcmovnb
lods
mov
push
std
cmpsb
adc
adc
maxps
dec
std
adc
gs
jge
in
shll
lcall
sub
mov
push
rorl
test
outsl
cld
jle
jecxz
jp
cs
pop
cmpsb
sub
jl
loope
or
lret
outsb
imul
adc
mov
outsl
hlt
pushl
sbb
lcall
das
mov
mov
jg
mov
xchg
inc
ss
in
jo
and
push
sahf
pusha
lds
das
lock
jnp
xlat
adc
add
push
popa
push
push
ja
in
cld
lcall
mov
cmp
scas
mov
fs
mov
lcall
mov
addr16
repnz
xor
popf
enter
push
jle
mov
xchg
mov
cld
nop
add
fsts
mov
dec
and
sbb
decl
mov
ja
jb
pop
adc
dec
repnz
sub
ljmp
xchg
cmp
xchg
movsl
ljmp
ficomps
test
call
ljmp
mov
xchg
adc
cwtl
xchg
and
sbb
decl
pop
pushf
aad
lea
dec
je
jo
cmp
shlb
push
hlt
ss
decl
sub
addb
std
into
sub
pushf
cmc
addr16
sub
scas
mov
decl
dec
nop
mov
fildll
dec
mov
push
jo
arpl
jge
mov
sub
pusha
loopne
mov
jg
rcll
add
push
push
jl
dec
xchg
xlat
fwait
repz
mov
dec
pop
push
xchg
push
mov
fs
gs
mov
xchg
sbbl
incl
in
pop
inc
in
aam
push
outsb
imul
dec
mov
decl
cmp
jmp
fucomp
mov
xchg
scas
pop
xor
mov
cmc
incl
ret
adc
subl
cld
lcall
jle
jmp
lods
mov
pop
mov
mov
add
call
inc
jecxz
sbb
fsubl
sub
or
lock
fisttpll
cmpsb
mov
mov
inc
sub
das
sbb
sub
xor
push
push
ret
ljmp
adc
mov
add
inc
sbb
stos
lret
cltd
sub
imull
scas
out
xor
aam
mov
icebp
pop
dec
clc
xchg
int3
into
xlat
push
jae
push
inc
call
ss
out
aad
sbb
xor
gs
pop
xor
gs
call
mov
stos
fdivrl
xor
pop
lcall
jg
add
jecxz
mov
clc
outsl
and
lock
xchg
or
adc
insb
loopne
cmp
stc
out
stos
jg
nop
pop
dec
cmpsl
aas
xlat
bswap
lahf
pop
or
nop
cmp
test
mov
push
add
xor
cwtl
mov
std
decl
push
lods
fists
jbe
loop
rcrl
push
mov
decl
dec
shr
pop
add
mov
add
sti
popf
fxch
jne
dec
sub
ret
jo
lret
aam
add
xchg
inc
loop
shrl
test
test
xchg
xor
out
and
cmp
mov
sbb
icebp
jg
call
sub
int3
and
popa
in
sarb
pop
fstpl
lret
dec
sbb
jg
lret
xchg
or
popa
outsb
test
cmp
cmp
and
jl
out
jmp
jg
inc
xchg
mov
add
popa
out
fldenv
out
lcall
sbb
fdivp
inc
cli
mov
mov
flds
sbb
sub
mov
loope
xchg
mov
lea
dec
mov
push
adc
mov
outsl
jne
pushl
lcall
loop
cmp
mov
rclb
jmp
sbb
cmp
xchg
out
and
call
adc
push
xchg
push
mov
push
mov
xchg
rolb
repz
out
and
lcall
jp
nop
xchg
jp
stos
shl
out
sub
shlb
mov
pushl
mov
mov
aas
out
divb
pop
stos
sti
and
aaa
sbb
es
decl
lods
mov
add
and
mov
andb
xchg
mov
repnz
fidivrs
pushl
xchg
jg
enter
mov
xor
mov
movsl
fistl
aas
stos
decl
pop
cmp
ja
fdivr
xchg
xchg
ljmp
pusha
xchg
pop
mov
icebp
call
daa
fs
mov
pop
mov
insb
scas
jl
adc
lcall
pop
insl
rolb
je
inc
mull
xor
into
jmp
jmp
xor
xchg
sub
fidivl
fdivl
rcrb
add
ljmp
dec
or
xor
aas
xor
pop
xchg
fiadds
dec
xor
sbb
jle
jmp
ja
push
clc
nop
aas
in
loop
aad
cmpsl
dec
sbb
outsl
ret
outsl
fcomi
jmp
stc
insb
gs
fwait
mov
xchg
iret
push
push
xor
das
mov
repz
sbb
push
into
insl
jmp
sbb
inc
mov
add
cltd
add
xchg
enter
add
xor
mov
call
dec
rcrb
testl
cli
cmp
and
adc
ljmp
jo
xchg
call
gs
imul
or
mov
mov
pushl
pop
push
or
dec
enter
les
push
and
in
loop
dec
call
jg
adc
out
test
cmp
jge
test
call
jge
jge
sbb
incl
pop
je
fs
mov
ljmp
pop
pop
jb
sarl
xor
xor
shrb
notb
dec
xchg
aam
inc
jge
adc
xchg
inc
sub
pop
clc
mov
xor
imul
add
std
or
mov
lcall
jnp
mov
and
jbe
in
popf
aaa
xchg
enter
das
jne
data16
int
add
push
repnz
xchg
int
mov
jns
jge
or
cmp
out
sbb
sub
int
ljmp
adc
loopne
repnz
pop
arpl
movsl
ja
xchg
fcoml
pop
shrb
std
call
push
dec
movsl
aad
ja
ss
jg
decl
lahf
ds
out
rcrb
mov
jl
incl
aad
insl
or
insb
pop
rcll
decb
jmp
sub
stc
arpl
lods
test
cli
and
inc
call
pop
mov
jmp
xchg
mov
jecxz
ljmp
cli
dec
shl
cmp
add
popf
sub
jno
pop
mov
aaa
in
jmp
cmp
fwait
cwtl
stc
es
mov
insb
sarl
pop
in
stos
idiv
jge
mov
add
enter
and
popf
mov
call
stos
inc
jge
mov
cltd
mov
je
mov
pop
cld
push
jge
stos
dec
xchg
jno
xchg
xor
fucomi
or
xchg
mov
add
sar
add
dec
fistpll
add
xchg
add
pop
das
hlt
call
pop
fisubs
pop
xchg
pusha
jbe
stos
mov
dec
mov
xchg
cli
push
push
imul
push
movsl
shr
mov
dec
daa
and
daa
test
fcmovb
push
inc
sbb
nop
or
push
rcrb
lock
shll
xchg
mov
xor
and
sub
call
dec
cwtl
adc
loop
jmp
enterw
xchg
jmp
or
cmp
adc
adc
mov
rclb
lds
fcomps
mov
mov
icebp
pop
pop
outsb
xor
mov
sub
sahf
aas
mov
cmp
into
push
stos
repz
pop
jno
mov
in
jns
sub
inc
mov
mov
stc
cmp
mov
cltd
aad
leave
push
sub
or
and
shll
pop
call
out
jl
mov
xor
dec
ljmp
in
sbb
test
mov
fldenv
mov
mov
cmc
and
addr16
sbbl
out
mov
add
mov
lods
insl
iret
or
cs
jno
xchg
mov
in
pop
clc
fidivrs
lcall
arpl
mov
rolb
lcall
outsb
setne
cmp
imul
sub
jg
mov
or
nop
cmpsl
sub
mov
rclb
push
clc
sahf
pop
ret
jmp
ds
sub
jmp
mov
dec
xor
lods
fwait
sub
push
mov
aam
js
aaa
sbb
repz
add
aas
lcall
dec
pop
fstl
cmpsl
test
daa
and
pop
loopne
cmc
das
xlat
dec
sbbl
dec
pusha
pop
pushl
push
sbb
decb
sti
ljmp
mov
incl
pop
sarl
mov
lea
jmp
and
fmuls
and
ljmp
mov
mov
mov
loopne
imul
adcb
pushf
dec
push
pop
fldenv
je
incl
ds
cli
pop
aas
mov
push
roll
sbb
lahf
js
ljmp
les
mov
xorb
cmpsb
mov
lcall
addr16
mov
imul
mov
popa
xor
jp
repz
lock
incl
push
rsqrtps
xlat
mov
inc
out
out
push
push
loop,pn
lcall
inc
xor
xchg
push
rcl
fidivrl
int
mov
jmp
push
cmp
mov
jne
lcall
add
push
cmp
adc
push
stos
xor
push
lods
call
in
fstps
aam
out
int
sbb
faddl
pop
sbb
aam
push
cmp
xchg
inc
sub
mov
mov
mov
jmp
jge
fidivrs
inc
arpl
mov
addb
sbb
lods
xchg
stos
idivl
ljmp
fsubrs
call
pop
xchg
jb
or
jo
lret
decl
jbe
out
aaa
lds
ficoml
dec
popf
pop
jae
ja
adc
mov
int
scas
mov
ljmp
mov
leave
ss
dec
xor
jmp
mov
aam
sar
std
ljmp
mov
ds
add
jbe
pushf
xor
in
cltd
push
cmpsb
rorl
add
mov
mov
fxch
and
lods
cmp
mov
popa
insl
inc
lahf
mov
outsl
lock
and
repz
shll
mov
mov
lock
iret
or
cli
adc
sub
aaa
data16
sahf
icebp
in
sub
xchg
xor
mov
enter
ljmp
leave
and
mov
in
lret
or
and
adc
pop
bound
or
incl
xor
or
fists
aam
cmp
mov
pushl
rcrl
push
xor
fs
pop
xchg
in
mov
pusha
cmp
decl
sbb
mov
je
adc
ds
cmp
mov
leave
and
sbb
hlt
xchg
ja
sub
xor
mov
sub
and
lcall
sbb
and
and
gs
inc
and
clc
sub
and
stos
jmp
dec
mov
cmp
les
xchg
jo
inc
dec
sbb
jg
ds
and
ljmp
roll
mov
mov
scas
or
scas
jae
xchg
int3
insb
mov
pop
mov
imul
cmc
jg
add
outsl
lods
push
xor
push
xorb
dec
test
jg
or
mov
mov
jecxz
pop
jecxz
pop
lods
movsl
pushl
add
mov
pop
and
cltd
mov
adc
mov
cwtl
enter
inc
cmp
fsubs
inc
pop
or
jmp
out
pushf
adc
out
add
aas
push
repz
cmpsl
pop
inc
mov
pop
clc
ss
sbb
mov
or
inc
stc
loope
jnp
fisubs
call
lods
decb
sbb
sub
mov
or
in
call
and
pop
leave
pop
subb
or
lahf
add
sbb
add
or
dec
movb
mov
sub
ja
jg
lcall
test
fsubrl
int
in
inc
aas
scas
call
adc
movsl
mov
or
pusha
scas
je
dec
and
shl
ljmp
sbb
add
sub
inc
mov
push
pop
push
jb
ret
imul
push
call
cli
call
mov
xchg
repz
movsl
scas
adc
out
pop
mov
inc
ficoms
mov
sub
add
push
sub
mov
or
adc
ss
ja
inc
outsl
gs
aaa
aad
icebp
es
stos
cmc
ljmp
sbb
sub
insb
ss
xor
aad
pop
mov
stc
mov
push
outsl
sbbb
mov
repnz
decl
hlt
aaa
or
and
or
sbb
jp
mov
inc
mov
mov
xchg
rol
xor
xlat
fcomp
cmpsl
xlat
mov
loopne
sub
fadds
jno
pushl
inc
sarb
lret
mov
les
repnz
inc
lcall
fdivrl
call
and
pop
xchg
or
sbb
mov
adc
ljmp
adc
cs
xchg
stc
and
jle
xor
inc
das
inc
sub
pop
mov
mov
adc
insb
mov
fiaddl
pop
lea
mov
repz
xorb
ljmp
inc
cmpsl
jae
jb
sub
int
push
and
jmp
sbb
incl
aam
push
movsb
das
cld
jge
jb
scas
push
call
rcl
mov
inc
aad
push
jmp
dec
cmpsb
decl
jg
adc
sti
test
push
sbb
aas
inc
lahf
fstl
clc
lcall
mov
js
lods
add
sbb
jno
imul
xchg
dec
add
xchg
imul
cmp
std
scas
sub
rcll
inc
mov
incl
and
imulb
cld
mov
jbe
xor
mov
stc
sub
jg
lcall
pop
lret
cltd
jl
fistps
insb
popa
mov
fldcw
fucomip
das
hlt
loop
lret
push
inc
cli
ja
pop
sub
mov
jnp
xchg
inc
and
or
lahf
pop
sub
outsb
ret
lcall
push
adc
push
cmpsb
jecxz
imul
inc
stc
inc
inc
cs
mov
pop
sub
jg
cmp
mov
cmpsl
loope
push
pop
stos
pop
sub
pop
xor
incl
stc
xor
enter
jl
aad
xor
insb
inc
sti
outsb
xor
arpl
jno
mov
jne
xlat
inc
sbb
jg
int3
idivl
cmpsb
ja
push
push
or
daa
movsb
mov
fucomip
push
scas
pusha
add
lahf
jmp
xlat
cmc
add
popf
ja
rep
cmp
lcall
daa
inc
add
sbb
loopne
popf
imul
loopne
mov
sub
decl
test
adc
ficoml
xor
and
stos
loopne
pop
mov
dec
cmpsl
loop
xor
push
sbb
dec
cmp
xchg
xor
clc
pop
insl
lock
push
or
mov
shr
and
call
add
or
repz
adc
xchg
lret
and
jmp
push
or
xchg
cmp
es
in
call
pop
dec
cmp
sarl
mov
cs
les
adc
xor
mov
mov
stc
sahf
jae
adc
test
jae
repz
ja
mov
clc
mov
hlt
test
mov
mov
mov
pushl
adcl
push
cltd
xchg
fldl
movsl
or
lcall
and
lahf
mov
js
add
int
cltd
mov
pop
sub
cmp
fs
mov
push
xchg
cmp
rorl
push
xchg
xchg
out
adc
sahf
inc
out
adc
ds
mov
cli
ljmp
out
push
pushl
clc
dec
xor
push
repz
aam
jle
xchg
push
imull
push
cmp
mov
cmp
jo
sub
adc
loope
sbb
mov
lock
or
cmp
xchg
jp
incl
pop
xor
mov
test
sub
push
cmp
push
jmp
repnz
daa
sbb
dec
jne
add
call
adc
js
out
lret
bound
out
inc
mov
lock
jge
enter
jg
jne
ss
pop
sub
xor
mov
decl
sar
or
js
xchg
dec
inc
xchg
sub
jnp
insl
push
pushl
sti
stos
int3
daa
mov
mov
insl
int3
pop
dec
sub
jmp
in
dec
inc
and
leave
sarl
int
inc
sub
push
out
stos
add
ret
call
jmp
shlb
cmp
mov
push
cmp
mov
xchg
in
int
fdivrl
jmp
sbb
xor
add
adc
enter
clc
sbb
cmc
ret
or
and
sub
lods
cmpb
out
lea
push
pop
mov
test
push
popf
js
call
pop
enter
inc
xchg
loop
das
push
loop
cmp
insb
call
xchg
xchg
rcl
test
loop
dec
enter
cli
ljmp
or
cltd
insb
xchg
icebp
lcall
pop
insb
xchg
xchg
push
fldcw
inc
das
sub
imul
cld
mov
jmp
aas
cmovno
lods
fmul
stc
and
mov
inc
push
pop
sbb
repnz
outsl
push
repz
enter
or
xor
adc
mov
adc
xchg
sub
cmp
inc
arpl
or
mov
mov
out
enter
leave
or
incl
rolb
das
test
xchg
add
mov
ljmp
add
add
jae
pop
mov
test
adc
bound
addr16
movsb
fisubl
push
or
jg
vpmovsxbw
dec
pushl
add
or
mov
sahf
sbb
data16
jns
dec
lcall
clc
push
repz
add
mov
ficoms
lds
adc
xor
mov
or
shlb
in
push
dec
fiaddl
cli
aaa
pop
lret
imul
in
xor
fmul
popf
mov
loopne
inc
into
add
fs
sub
or
lea
cmp
ret
add
xchg
aaa
xlat
cmp
rorl
mov
fucomip
dec
mov
jno
push
pop
cmp
push
mov
mov
push
push
fcomps
xor
icebp
and
xchg
stc
clc
test
bound
jo
dec
dec
cmp
mov
rolb
sub
pushl
sbb
cmp
or
cs
push
dec
sub
mov
aaa
fdivp
mov
fwait
add
stc
pop
jg
pushl
iret
daa
cwtl
aaa
pop
test
add
cmp
stc
dec
stc
sti
inc
lds
out
push
dec
stos
dec
push
incl
decl
xchg
sbb
pop
call
xlat
and
adc
dec
jg
call
pop
sbb
in
repz
rclb
in
hlt
popa
sub
in
jle
inc
and
sub
dec
inc
orb
lcall
mov
incl
pushl
sbb
loopne
push
mov
lds
or
js
push
lea
jmp
mov
gs
es
mov
bswap
je
subb
in
pop
icebp
pop
fs
jg
ljmp
stc
xchg
lahf
out
inc
mov
xor
jns
xchg
fldt
cltd
jbe
repnz
mov
cmp
dec
cmp
nop
lcall
cwtl
js
aam
pushl
mov
lds
push
adcb
jmp
add
lock
xchg
cwtl
inc
fistpl
sbb
stc
push
mov
inc
cld
xchg
mov
test
mov
sbb
mov
xchg
and
and
cmp
cld
sbb
das
inc
jo
or
aaa
jp
aad
pop
ljmp
fsubl
sbb
out
push
mov
add
and
ret
mov
cld
decl
dec
or
cmp
xchg
xchg
xchg
mov
and
movsl
cmp
test
dec
js
pop
inc
ror
cmp
ds
dec
sbb
fistps
in
xchg
ljmp
insb
push
int3
call
xor
xor
in
dec
mov
mov
mov
call
call
ljmp
sbb
jge
stos
adc
or
stc
ret
sbb
dec
sub
cmpsl
jnp
lea
sbb
adc
aaa
or
mov
add
inc
inc
xor
jnp
fldl
pop
call
sbbl
mov
jb
sbb
inc
rorl
test
ss
jge
aaa
insb
shrb
jg
in
andb
pushf
sbb
xor
inc
jmp
mov
inc
cmp
pop
out
subl
push
mov
mov
stc
xor
adc
pop
dec
inc
sti
cli
xor
push
sub
push
xchg
jns
shll
jmp
xchg
xor
test
jno
mov
je
ss
pop
bound
bound
xchg
lcall
div
ja
pushl
sbb
mov
outsl
sti
pop
movsl
mov
rol
es
or
aas
pop
dec
add
and
call
jecxz,pt
push
xlat
loope
ret
out
add
cmc
pop
stos
call
pop
out
imul
pop
sub
mov
jno
xchg
xor
sub
ret
push
rcrl
push
fbld
aam
nop
cmpsl
mov
push
add
mov
adc
rcr
add
sbb
and
mov
pop
mov
das
mov
fcomi
add
fwait
mov
adc
or
lret
inc
jecxz
inc
dec
push
sbb
fistps
cmp
mov
mov
mov
inc
clc
repnz
test
jmp
cmc
push
xchg
cmp
sar
lcall
icebp
outsl
ficoml
jp
imul
fnstcw
insl
fdivr
mov
sub
jmp
mov
or
std
add
ds
daa
inc
aaa
xchg
inc
jecxz
arpl
mov
lods
jg
ds
jp
dec
int
or
int
mov
jp
aam
or
insl
sbb
negb
xchg
mov
mov
enter
sub
jb
outsl
cld
mov
mov
mov
out
push
outsl
jg
lret
arpl
out
add
pop
andb
cmp
or
pushl
mov
shlb
into
call
push
lahf
pop
rorb
mov
pop
mov
pop
ljmp
lock
adc
or
ret
lret
ret
out
iret
push
push
pop
loopne
lcall
faddp
add
add
mov
scas
insb
aas
loope
lock
call
inc
sahf
jb
fmull
cmpsb
stos
sub
mov
nop
cmp
data16
rcrb
jne
or
jg
or
aas
inc
cwtl
mov
jg
fsubrs
enter
outsl
cld
sbb
cmc
xor
lods
mov
xor
lcall
mov
fimuls
ja
pop
andl
into
dec
lret
cld
xor
xor
jg
or
adc
daa
fwait
mov
dec
ljmp
and
xchg
jp
dec
jbe
inc
sbb
mov
aad
cs
popa
inc
mov
call
pop
mov
es
lcall
lock
cld
mov
push
cmp
mov
sub
pushl
cmp
and
add
lea
xchg
in
pop
add
adc
push
lret
das
push
jg
mov
and
xchg
loop
mov
into
jae
testl
out
sbbl
adc
rcll
cld
andb
into
mov
dec
in
sahf
jp
stc
cmpsl
ljmp
xchg
cmp
mov
aas
call
adc
in
into
jnp
jbe
adc
call
add
repz
cltd
fs
stc
mov
cmp
das
std
call
jp
xchg
lcall
add
push
mov
roll
sbb
cmp
fwait
jl
jns
lds
add
in
addl
pop
mov
and
cmp
shll
jmp
push
lret
mov
fmuls
test
mov
push
xor
push
dec
jmp
push
xchg
sbb
mov
enterw
pop
xor
jge
dec
inc
dec
inc
xchg
xchg
pop
sahf
xchg
jg
xchg
orb
cmpsl
cmp
pusha
xor
or
inc
add
ljmp
cmp
xchg
mov
and
stc
mov
enter
jno
jg
decl
sbb
and
push
sub
pop
push
call
mov
icebp
cmp
aam
push
cmp
inc
xchg
mov
fildll
test
in
std
dec
addr16
push
mov
test
jecxz
lcall
test
xchg
xor
in
test
sub
ljmp
xor
lods
dec
push
jg
cld
popf
mov
push
adc
out
stos
jo
rclb
mov
cmp
ljmp
or
pop
jl
mov
xchg
pushf
shlb
jp
test
ljmp
inc
add
pop
lcall
mov
out
out
cvtpi2ps
or
mov
call
or
xorb
dec
sbb
jb
xor
sbb
addr16
incl
sbb
fstl
pop
std
fstl
add
lret
dec
mov
and
lods
ljmp
in
fistps
xor
xorb
insl
in
cmp
add
fwait
push
std
or
mov
push
xchg
dec
push
sub
push
pop
cmpb
test
jge
inc
cmp
fadds
mov
call
nop
mov
lret
stos
mov
dec
mov
jbe
leave
add
xchg
jnp
and
push
push
xor
xlat
scas
xor
pop
xor
or
out
lea
mov
int3
test
stc
out
mov
sub
cli
adc
movsl
hlt
inc
mov
pop
inc
cltd
iret
dec
adc
cmc
rorb
aad
hlt
xchg
dec
loope
dec
bound
sub
or
loop
xchg
adcl
sub
jno
mov
cmp
das
xchg
xlat
jg
sbb
inc
fdivs
add
xchg
out
movsl
in
dec
fcomps
and
scas
decl
cld
decl
daa
clc
js
inc
popf
sub
iret
ljmp
sub
arpl
jnp
and
mov
in
stos
cld
loope
fsubs
ret
mov
adc
adc
pop
ret
sbb
rolb
cmp
jg
mov
fcmovnu
popa
and
inc
dec
pop
and
pop
mov
fildl
dec
mov
test
push
xchg
jo
adc
push
data16
push
jl
xor
dec
lret
sbb
mov
xchg
fisttps
mov
cltd
jno
incl
in
mov
int3
scas
adc
jge
out
roll
sbbl
movsl
jmp
pop
push
ret
lcall
js
mov
jns
inc
cld
aaa
push
jmp
lret
cmpsb
jp
ja
jb
inc
or
and
int
pop
jbe
decl
repnz
or
aaa
test
aaa
jb
nop
xchg
in
mov
test
test
fdivrp
in
iret
orb
fadds
fldln2
mov
aam
cs
sub
insb
in
sbb
cmp
rcrl
clc
or
imul
mov
inc
push
lcall
add
adc
pop
mov
test
mov
fbld
inc
outsb
and
and
xchg
pop
cmp
mov
jp,pt
test
and
sti
jl
imull
leave
popf
mov
std
cmp
insb
ljmp
mov
mov
push
jecxz
pop
mov
sub
cmp
subl
jg
push
cmp
push
out
or
mov
fdivl
cwtl
mov
sahf
in
in
add
ds
mov
inc
imul
push
insb
jl
inc
les
shrb
addr16
pop
and
cmpsb
gs
or
jg
jmp
mov
add
pop
or
es
dec
sbb
and
push
adc
mov
jne
sahf
pop
std
jbe
jne
push
mov
je
imulb
ljmp
stc
out
pop
adc
pop
mov
push
inc
sar
test
test
js
inc
push
sbb
decl
xchg
jno
push
js
fidivrl
mov
lcall
cmp
jne
out
addr16
stos
das
cmc
loope
out
sar
mov
inc
or
jg
popf
sub
mov
in
add
jmp
xor
xor
push
jbe
test
mov
out
add
jno
xor
mov
mov
mov
leave
stos
mov
mov
pop
call
xchg
xchg
imul
add
and
jmp
das
push
push
shrl
xor
outsl
cmp
pop
lahf
pop
adc
xchg
jmp
xor
jp
inc
add
cmpsb
cmp
jmp
push
add
mov
lock
movsb
sub
and
jnp
das
lcall
pop
rorb
cmpsb
or
xorb
je
xchg
fldcw
mov
or
dec
enter
mov
js
pushl
rcl
fneni(8087
xlat
mov
gs
adc
mov
push
sbb
fnstenv
or
arpl
mov
lcall
int3
xchg
repnz
subb
push
mov
jno
stc
cmpsb
sub
adc
decl
rcrb
in
sbb
push
rclb
dec
push
mov
mov
ljmp
loopne
xchg
aad
pop
incl
mov
out
jmp
xor
insb
and
in
pushf
jmp
jmp
int3
cli
rclb
aad
dec
hlt
jle
inc
inc
movsb
jle
cmpsl
mov
sti
mov
jg
pop
mov
add
cmp
pop
pop
das
int3
mov
inc
movsl
mov
or
imul
fucomip
pusha
mov
push
xor
lods
movsl
inc
addr16
clc
rcrb
mov
push
decl
call
hlt
cli
fdivs
insb
jo
jle
fmulp
pushl
mov
jle
xchg
shll
fwait
sbb
pop
fdiv
jecxz
dec
sbb
lods
mov
icebp
mov
hlt
loopne
push
out
mov
xor
pusha
jo
mov
inc
xor
lds
call
pop
mov
mov
xor
aad
fstpt
rorb
push
sarl
sub
ret
cli
mov
mov
imul
lock
clc
sub
in
js
call
xlat
cmpsl
xchg
add
add
mov
fbld
enter
iret
mov
movzbl
cmp
pop
scas
mov
sub
out
push
clc
jg
orb
mov
xor
inc
and
cltd
push
cmp
ja
mov
ret
sub
sub
xchg
repz
rorl
mov
jb
in
test
repz
mov
jns
jle
gs
mov
and
xchg
mov
pop
sub
loopne
call
loope
popf
jae
mov
sti
sbb
mov
push
sbb
cmp
mov
pusha
out
out
fisttpl
ljmp
xchg
inc
test
les
mov
insb
jns
cmp
icebp
ja
sub
gs
push
add
push
mov
lcall
sarb
mov
call
repnz
lds
fucomip
lods
add
mov
addr16
push
and
stc
or
packuswb
decl
fsubrl
xlat
cli
dec
dec
lcall
call
stos
cli
lcall
leave
xchg
cmpsb
push
xchg
shrl
cmp
jnp
call
pushl
negb
sbb
add
dec
stos
int3
xchg
int
xchg
inc
decb
pop
loop
fsubrp
push
mov
rsqrtps
lea
incl
xor
xchg
sti
jp
adcl
out
fbld
clc
jno
hlt
add
jg
push
sub
hlt
pop
ss
inc
pop
lds
test
repz
cld
pop
clc
or
xor
je
jle
pushf
jns
lcall
sbb
push
fstpt
dec
cld
mov
pop
sub
jmp
or
push
jne
adc
push
pop
movsb
sub
hlt
fldcw
pop
xor
loop
stc
sub
adc
adc
mov
cmp
or
adc
adc
cmp
ljmp
std
mov
cmpsl
adc
imul
les
pushl
pop
bnd
xor
xchg
stos
outsl
aam
or
subl
mov
dec
insb
mov
pusha
lds
and
dec
aad
mov
mov
lock
ret
xor
xchg
dec
mov
outsl
lock
mov
stc
add
cmp
adc
inc
mov
dec
xchg
jp
jae
popa
dec
stc
and
imul
popa
ljmp
mov
stos
test
xor
fsubrl
dec
adc
dec
xorl
xchg
or
out
lcall
insb
stc
in
imul
push
loop
pop
pop
aas
stos
es
mov
or
pushf
cmp
sub
add
jecxz
incl
jbe
dec
fidivs
imul
shlb
cli
lods
ljmp
cld
cwtl
pop
dec
push
add
push
xchg
repz
sbb
sub
out
lcall
in
or
jg
xor
mov
and
repz
fbld
jmp
repnz
in
iret
pop
mov
movsb
sub
mov
jbe
cmpsl
pushl
mov
and
loopne
iret
scas
push
adc
cmp
and
das
jmp
out
mov
or
jmp
mov
das
test
fucomip
call
call
mov
mov
clc
je
adc
pushf
dec
push
ljmp
arpl
insb
inc
pushw
mov
data16
stos
adc
or
stos
push
sub
dec
cld
ljmp
jg
xchg
das
mov
pushf
cmp
inc
out
dec
sti
cld
int
jns
cmp
cli
daa
jb
sub
add
inc
xlat
cld
test
push
fists
mov
outsl
push
adc
test
test
lcall
xor
lcall
add
decl
enter
imul
dec
pop
jmp
cmpsb
adc
inc
test
jl
lahf
and
sub
clc
daa
add
xchg
adc
mov
incl
adc
mov
mov
lret
call
ljmp
frstor
cmovge
inc
pop
cwtl
clc
fwait
inc
dec
out
test
push
cmp
dec
pushl
ljmp
shll
in
mov
dec
jg
clc
jmp
or
cwtl
sahf
lods
scas
adc
jecxz
push
call
popa
flds
cmp
sub
fbstp
in
mov
outsb
jne
dec
out
dec
jmp
cli
ljmp
pop
sbb
dec
leave
addb
jns
std
mov
jo
jge
shl
jne
jmp
mov
loopne
shrl
cmp
std
push
push
int
push
loop
inc
imul
pop
jg
sbb
jle
fnstsw
push
mov
shll
and
cmp
or
pop
jp
jns
out
mov
repnz
subl
incl
and
mov
mov
insl
pop
fimuls
sahf
in
cmp
cmpsl
xor
add
cli
hlt
push
call
push
xchg
cli
inc
push
shll
orl
dec
pop
divb
cmc
decl
cltd
dec
fwait
cli
and
push
enter
fcoml
push
aas
lahf
xor
xor
not
sbb
stos
sbb
cmc
fimuls
dec
cmpsl
or
ljmp
cld
fcomip
add
mov
incb
fld
pop
mov
sbb
jmp
sub
popa
push
nop
push
inc
fnstenv
dec
lds
incl
mov
out
cwtl
and
mov
in
mov
imul
loopne
jns
rcrl
clc
ljmp
addr16
cwtl
js
addr16
inc
adc
xchg
add
mov
decb
cld
pop
fisttpl
jge
aad
loopne
sbb
push
lret
incl
pop
cmp
shlb
in
push
gs
pop
repz
xchg
jnp
dec
ret
scas
mov
out
lahf
mull
mov
sbb
ljmp
inc
fisttpl
and
outsl
in
xor
and
into
and
pop
loopne
mov
or
mov
or
out
jno
or
std
decb
das
inc
jae
cmp
fucomp
shrb
mulb
out
sub
pop
cli
outsl
adc
lahf
adc
test
xchg
xchg
and
xor
insl
add
jg,pn
pop
ss
sub
sub
stos
pop
mov
xchg
loope
lcall
enter
fbld
arpl
ja
lds
lds
fcos
lods
jle
push
ret
push
inc
and
mov
and
in
sar
hlt
incl
divl
sarl
pop
jmp
mov
ror
das
popa
sub
incl
test
adc
mov
insb
jle
leave
out
ret
jle
incl
mov
jb
xchg
mov
in
push
xlat
xor
mov
cmp
incl
xor
pop
sbb
dec
xor
imul
ljmp
insl
repnz
out
lock
add
xchg
add
jp
push
or
mov
int3
dec
aaa
push
xchg
mov
idiv
jg
mov
iret
cli
cltd
adc
lock
mov
fsubrp
fadd
xchg
jl
sbb
call
cmp
jp
xlat
and
push
cmp
cmp
mov
xorb
stos
incl
mov
mov
and
fmuls
movsb
test
test
call
insl
sbb
jns
adc
lods
dec
dec
mov
pop
ficompl
jmp
mov
mov
clc
fadd
jecxz
mov
int
call
mov
lcall
xor
ja
xchg
add
add
adc
mov
loope
icebp
aas
push
js
and
pop
adc
mov
out
leave
rolb
decl
xrelease
push
lds
cld
inc
mov
jae
lds
mov
not
jg
in
and
sub
mov
mov
push
xor
mov
pop
and
insb
subl
pushl
sub
add
mov
fwait
pop
add
int
inc
mov
shlb
jmp
lods
mov
add
int
ja
dec
mov
pop
shl
mov
cmp
xchg
mov
cmpsl
lods
adc
cld
pop
lock
sbb
adc
sbb
mov
cmc
jb
dec
addr16
dec
pop
insb
testl
cmp
ret
in
arpl
int
push
shlb
daa
push
pop
xlat
insb
and
push
jg
adc
jno
and
push
cmp
aas
loope
inc
push
icebp
int
pop
clc
lcall
lods
dec
add
cmp
and
stos
mov
mov
dec
clc
xchg
pop
pop
ljmp
pop
xchg
mov
inc
inc
mov
in
jge
jae
idivl
jge
cmpsb
call
call
cli
inc
lret
mov
int3
and
adc
adc
negl
add
adc
xchg
rclb
cmp
popa
fimuls
decl
mov
adc
lock
pusha
inc
test
jbe
xchg
mov
cmc
ljmp
std
sbb
push
std
jne
mov
lods
xor
sub
and
aam
pushf
pop
cmp
stc
decl
mov
inc
test
ja
in
add
movsb
sbb
jnp
scas
xor
dec
stos
sub
sbb
and
cmc
lret
ja
cli
imul
out
popa
push
jns
jg
fsubr
push
test
cmc
clc
xchg
ss
stc
adc
and
popa
enter
lcall
inc
mov
dec
jge
rcl
pop
stos
sahf
in
and
pop
xchg
mov
insl
popf
jbe
movsl
ja
sbb
into
jo
push
mov
ljmp
mov
xor
push
addr16
jge
cmp
inc
mov
add
decl
pushl
addl
in
xchg
pop
cmp
mov
pushl
inc
out
das
mov
dec
popa
and
mov
rcrl
cmp
in
leave
xchg
ret
sbb
push
call
pushl
fldt
outsl
push
leave
movl
mov
mov
adc
sbb
and
xchg
icebp
testl
inc
pop
clc
movb
sbbl
cs
movsl
xchg
fwait
mov
mov
xorb
mov
call
xchg
mov
pop
out
leave
outsl
mov
adc
jle
sbb
add
fucomip
inc
insb
pop
push
mov
add
inc
lcall
ret
nop
lahf
sbb
loopne
jmp
cmp
leave
fidivrs
insl
in
nop
outsl
daa
and
aaa
sub
ljmp
jne
mov
mov
hlt
adc
xchg
orl
jmp
mov
call
lea
sti
ret
lods
testb
es
cli
mov
xor
movsb
add
pop
ret
fcomip
inc
mov
stos
mov
sbb
std
decl
adc
ss
mov
dec
add
xor
fucomip
decl
hlt
pop
pop
clc
fisubs
add
xchg
jbe
lods
xor
xchg
lock
dec
lcall
dec
xchg
mov
testb
mov
test
jle
push
out
sub
insb
xor
adcb
jmp
dec
ror
mov
repz
and
add
inc
sahf
and
or
lahf
std
jbe
pop
divb
insl
sub
dec
pushf
pop
aam
jge
mov
cmp
push
mov
ljmp
loopne
je
adc
dec
or
fisubrl
pop
sub
adc
jns
cli
rcrl
adc
aas
or
iret
dec
sub
or
mov
fdivrs
hlt
and
xor
jb
loopne
das
cld
xchg
push
shl
sbb
ret
in
sub
xchg
sub
fwait
jmp
mov
xor
pushl
ljmp
and
mov
or
push
jo
xchg
inc
aad
lahf
inc
mov
inc
push
jmp
inc
jl
pop
lock
xchg
adc
and
sub
sub
push
clc
das
pushl
js
sar
test
out
out
fildll
sbb
sbbl
jmp
gs
rcll
jmp
or
fisubl
clc
and
xor
push
inc
pushl
pop
push
movsb
mov
mov
xchg
push
les
ss
test
push
mov
sbb
frstor
mov
cld
out
xchg
lods
or
push
push
dec
sub
in
je
in
outsl
nop
test
pop
idiv
call
or
jbe
clc
dec
cli
ds
jae
inc
test
ffree
stc
sub
paddsw
lods
lcall
dec
lock
shlb
shrl
mov
dec
inc
push
jg
or
scas
lea
shlb
mov
xor
push
or
sbb
call
xchg
jbe
xchg
mov
mov
dec
movl
test
mov
push
mov
xor
inc
out
int3
xchg
xchg
add
pushl
or
xchg
shll
push
inc
push
sbb
out
push
ret
pop
aad
mov
push
jl
incl
sbb
cmp
int3
gs
add
sub
cmpb
ljmp
xor
outsb
aam
test
xor
movb
movsb
sub
pop
into
xor
test
in
dec
addb
js
push
ljmp
lock
popl
fimull
push
es
lret
mov
or
adc
mov
add
lret
incl
dec
add
and
jns
cmpsl
jb
jge
movsb
repz
out
add
fs
mov
cmp
sbb
cli
xchg
fcomps
ja
fucomp
shll
push
mov
pop
cld
sahf
incl
loope
enter
cmove
xchg
sub
sarl
into
bnd
psubusw
cmp
stos
xor
cmp
arpl
or
dec
jg
nop
pop
je
lock
clc
pushf
mov
ss
add
gs
sbb
dec
pop
push
stc
fsubs
pop
cmp
lcall
ljmp
inc
xorb
lret
ja
jl
mov
xor
mov
fstpl
je
ljmp
repz
fucomi
push
cmp
push
out
sbbl
pop
jno
cld
sti
mov
pushl
push
movsl
cmc
fsubs
nop
sti
rcll
fbld
aas
das
cmpsb
loope
and
cmp
arpl
inc
lahf
inc
push
and
sahf
daa
scas
pop
xor
loopne
sub
mov
nop
in
sub
sarl
les
mov
iret
pushl
or
sbb
in
add
or
pushl
pop
sub
sbb
mov
cmp
arpl
loope,pt
and
incl
dec
pop
inc
push
sub
mov
sub
rorb
inc
cmp
sbb
mov
dec
push
notl
xchg
in
add
mov
nopl
jg
iret
stos
dec
int
aaa
mov
inc
mov
std
aad
pusha
pop
mov
cmp
cmp
and
mov
push
in
enter
scas
lcall
incl
pop
mov
jns
xchg
stos
pop
mov
iret
repnz
cmpsb
es
inc
js
xor
push
ret
inc
xor
outsl
call
cld
adc
dec
mov
sub
fisttpll
pop
cmpsb
push
sbb
arpl
xchg
push
jp
mov
jnp
xchg
push
pop
into
loop
inc
push
mov
ror
fwait
insl
divl
gs
mov
push
in
pop
and
mov
daa
out
incl
out
adc
sti
mov
das
aas
dec
rcr
icebp
xchg
cmp
add
mov
xor
pop
pop
xchg
ljmp
ret
jns
sbb
in
mov
ljmp
cmp
add
push
xchg
pop
in
add
dec
movsl
lea
push
outsb
or
or
sbb
mov
cld
gs
mov
pop
nop
xchg
call
test
jecxz
mov
jae
sbb
cmp
fwait
shrb
incl
sbb
pushw
lods
sti
adc
add
adc
aas
in
stc
je
adc
mov
loop
push
gs
mov
push
sbb
cmp
dec
mov
pop
aam
mov
cltd
sub
inc
andb
pushl
clc
pushl
xchg
stos
fiadds
adc
fisubrs
loop
mov
jp
dec
loope
lcall
inc
add
arpl
pop
lods
imul
sub
cld
scas
popf
mov
popa
pop
incl
call
aaa
xorb
incl
xlat
gs
aam
sbb
pushl
inc
popa
inc
inc
data16
mull
mov
inc
inc
pop
jg
lcall
movsb
push
cmp
xchg
cld
xor
push
fwait
mov
add
std
decl
stos
mov
pop
lret
inc
push
sbb
push
lret
jg
mov
xchg
sbb
ljmp
cwtl
push
dec
aam
pop
push
mov
cmpsl
test
jo
rorl
sbb
movsb
sbb
loope
imul
jnp
jg
imul
std
ret
aaa
inc
scas
popf
pop
mov
dec
xor
dec
lahf
cmc
jmp
xchg
rcl
push
rolb
dec
inc
sbb
inc
and
movsb
cmp
adc
pop
sub
mov
push
xchg
call
lahf
fcmovnbe
jns
add
dec
lods
xchg
add
xor
repz
test
fmul
cmp
or
enter
pop
movsb
mov
lahf
xbegin
stos
push
or
incl
adc
test
stc
lcall
std
cld
fisttpl
loope
fneni(8087
cmp
clc
ds
or
jns
adc
sti
xchg
jns
sarl
dec
das
in
push
xchg
jbe
xchg
lods
pushf
push
xlat
int3
mov
call
mov
lock
fs
mov
les
jp
mov
out
mov
cmpsl
stc
mov
lret
fwait
adc
data16
and
adc
inc
jg
sub
das
es
dec
bound
jg
cmpsl
in
pop
push
decl
std
in
popf
pop
mov
mull
jp
dec
cs
sbb
jns
insl
jle
das
mov
ljmp
fld
lcall
or
incl
pop
cli
xchg
jae
addr16
mov
ret
and
call
pop
std
inc
mov
aas
sub
sub
push
cld
call
lods
sub
mov
iret
sub
aam
cmp
inc
jecxz
lea
or
jo
popf
mov
pop
gs
add
and
aaa
decl
ljmp
scas
jp
xchg
clc
out
jne
lret
movsl
fstpt
inc
jecxz
pusha
iret
imul
imul
aas
les
dec
mov
dec
incl
call
lcall
xchg
mov
xchg
add
mov
std
xchg
sbb
sti
mov
ret
mov
add
nop
pop
clc
jp
insl
imul
xchg
ja
adc
add
and
add
cmc
fisttpl
lods
pop
call
cmp
movsl
cmp
mov
pop
inc
add
hlt
decl
int3
push
mov
movsl
pop
xchg
arpl
cmpsb
pop
stos
cmp
jl
cmp
les
sub
jg
push
and
inc
xchg
jno
arpl
aam
scas
lock
in
sbb
jge
je
aas
mov
pop
jno
fs
call
decl
dec
sub
sbb
jnp
dec
xchg
sub
and
lock
fistl
mov
cmpl
xchg
aaa
stc
xorl
sbb
hlt
jg
adc
push
mov
fcomps
inc
nop
sub
test
movb
in
lock
inc
in
and
pop
outsb
call
fcompl
pop
cmc
adc
sub
inc
mov
addr16
or
mov
insb
cld
xor
lcall
loop
and
sbb
fimull
mov
fsubl
out
push
or
fcomi
jo
xchg
sub
sbb
or
jg
and
xchg
mov
call
adc
mov
frstor
lcall
add
sti
clc
aas
test
es
inc
cmc
ljmp
xchg
sub
fnstcw
mov
call
popa
adc
mov
cmp
cmp
int
sub
pop
lret
pop
pop
shr
clc
fadds
xorl
xor
inc
xchg
mov
scas
arpl
js
les
pushl
hlt
push
iret
ja
movsl
mov
mov
push
test
movsb
outsl
push
cmp
adc
jbe
jl
push
xor
sbb
movsb
xor
js
pop
fwait
jnp
leave
pop
std
incl
test
jge
ss
aad
cmpsb
test
out
ljmpw
call
cmpsl
dec
lock
int3
mov
push
ret
dec
pop
out
sub
fisubrl
xchg
iret
and
inc
shlb
add
outsb
adc
out
cmc
incl
mov
in
xchg
div
cmc
insb
popf
xlat
xor
ljmp
out
mov
jbe
push
cmpsb
nop
aad
xor
mov
cmp
out
adc
xor
mov
mov
cld
jge
popf
sub
mov
fsubr
xor
scas
jmp
scas
add
or
or
add
jb
fisubl
push
push
out
jecxz
lods
adc
loopne
iret
icebp
std
pop
ljmp
push
fiadds
mov
jne
repz
jne
incl
xor
and
sbb
and
push
es
mov
xor
push
fucomp
xchg
dec
sbb
lea
fs
test
or
mov
push
inc
sub
decl
rcrb
mov
sahf
shll
mov
inc
xor
pushf
ljmp
lock
sbb
out
cmp
pop
pushf
cwtl
adc
cltd
mov
dec
cmp
sbb
cmp
js
call
jg
movsb
ret
rcrb
inc
movsb
lock
lds
xchg
inc
fadds
jb
cmp
mov
into
mov
sbb
jmp
leave
mov
iret
mov
cmpl
push
inc
sarl
jns
cmp
aam
outsb
notl
push
leave
lods
xchg
push
cmp
add
mov
lock
call
in
cmp
jae
cmpsl
jnp
mov
dec
repz
icebp
lcall
and
mov
leave
sarl
xor
mov
cmpl
jmp
mov
mov
mov
mov
jnp
loop
cmp
adc
mov
mov
insl
clc
repnz
push
mov
jmp
pop
js
push
out
mov
sbb
or
scas
sub
mov
jbe
aad
pusha
mov
lea
arpl
sub
mov
dec
cld
cld
push
sub
pop
adc
mov
pushl
fbld
jecxz
jle
and
out
pop
mov
orb
adc
clc
incl
xor
test
jno
pop
cmp
clc
call
andb
shrb
or
mov
in
pop
call
xlat
mov
dec
rclb
mov
mov
cld
inc
test
std
mov
pop
jp
mov
mov
mov
fisubrl
jmp
pop
mov
pop
sarb
bound
mov
xlat
adc
cmp
loop
xor
addr16
popa
aam
out
sbb
gs
and
vmovupd
pop
loop
xor
shl
or
daa
push
stos
jmp
jg
decl
pop
lock
mov
mov
jno
loopne
subb
int
aaa
pushl
cmp
icebp
cmp
notb
fisubrs
add
push
inc
cmp
clc
xchg
ret
mov
flds
insb
mov
sahf
inc
adc
jle
mov
cmp
das
sub
test
push
das
xchg
lahf
or
sub
ds
aad
js
dec
movsl
aad
mov
jb
lods
pushf
add
dec
hlt
jo
cmpsb
jnp
add
test
mov
insl
decl
incl
insb
pop
inc
aaa
mov
int
ss
cmc
sub
addl
cmc
pop
testl
data16
lret
daa
gs
adc
call
call
jne
pop
xor
pop
arpl
pop
loopne
or
push
push
and
cmc
jmp
js
or
mov
push
ljmp
mov
jnp
or
in
fbld
hlt
mov
mov
arpl
int3
shrb
ljmp
mov
mov
fdivrl
out
inc
inc
bound
xor
sbb
cltd
pop
mov
sub
push
add
sti
pop
mov
sti
aaa
mov
sbb
xor
mov
xor
aaa
adc
pop
icebp
movsb
loop
add
ficompl
sbb
mov
adc
call
pushl
clc
aas
sbb
fistps
mov
mov
mov
mov
test
jge
repz
dec
rol
cs
idivb
fs
xlat
repz
mov
push
jle
jge
mov
das
mov
lret
hlt
jg
or
pop
mov
mov
cwtl
dec
pop
push
nop
dec
cld
ljmp
sub
aam
mov
jle
mov
out
daa
ret
decl
sbb
jnp
nop
out
loopne
lret
push
mov
ja
xor
add
jg
jbe
sti
das
push
cmp
dec
ja
mov
jmp
adc
fsubrl
cmpsl
lods
loope
mov
cmp
xlat
fiadds
cli
lods
mov
neg
bound
ljmp
movsb
pop
push
loop
movsl
addr16
out
decl
sahf
pop
pop
adc
fimuls
xor
call
and
and
in
cld
xchg
pop
inc
dec
mov
fadd
pop
and
push
cmp
jg
arpl
cmc
dec
roll
int
pop
xchg
loope
dec
or
adc
decb
imul
inc
sbb
xchg
jge
decl
xchg
out
cmpsb
inc
aam
jb,pn
mov
inc
xchg
stos
mov
lcall
mov
mov
xchg
pop
sub
add
cmp
add
xchg
pop
xor
cwtl
iret
cs
jg
incb
fnstcw
mov
add
in
and
scas
xchg
mov
movsb
cmp
mov
rcll
inc
cmp
pop
out
jbe
sub
mov
decl
or
xor
bnd
movsl
cld
jnp
cs
das
icebp
mov
call
xchg
adc
push
cwtl
out
inc
hlt
dec
add
call
scas
out
jmp
sbb
inc
hlt
test
add
faddl
repnz
cmp
xor
inc
movsl
mov
mov
and
xchg
inc
sbb
push
jo
repz
lahf
fucomi
in
adc
std
decl
or
outsb
fwait
and
lahf
psraw
in
pop
out
push
insb
xor
jo
movsl
adc
mov
xchg
andb
cmp
iret
or
loopne
nop
mov
push
dec
push
notb
int
cmp
sbb
fcmovb
popa
lcall
push
aam
jle
sub
mov
mov
add
mov
pop
mov
fisttpll
aam
xor
insl
fldenv
sbb
cli
xor
lcall
or
in
cld
or
push
mov
loope
ret
xor
sbb
incl
push
cs
dec
push
mov
negl
inc
cwtl
pusha
ljmp
incl
jecxz
sbb
call
movsl
test
push
movsl
or
incb
imul
decl
lret
loope
xchg
sahf
pop
dec
push
scas
cmp
nop
fcomp
leave
cs
pop
mov
mov
mov
leave
movsb
mov
std
push
xor
sub
push
out
shrl
popf
and
cmpl
dec
ljmp
shlb
call
mov
out
jl
ret
add
rclb
add
push
cmpsb
and
ljmp
sub
ficoml
movsl
ret
pop
aam
cld
mov
subb
push
jg
int
loope
in
jmp
inc
fs
lods
loop
decl
lods
mov
sbb
mov
gs
or
push
pop
popf
push
mov
test
pushf
jmp
icebp
scas
inc
inc
outsb
stos
and
sahf
push
sub
mov
pop
pop
fbld
dec
adc
adc
test
decl
call
sub
imulb
loop
mov
sti
dec
shlb
pop
aam
subl
add
mov
cmp
hlt
lahf
or
iret
inc
push
jmp
adc
std
gs
adc
push
clc
in
lds
jns
xorl
lcall
push
xor
adc
sbb
faddp
cltd
adc
add
test
xchg
out
out
mov
pop
shrb
cwtl
inc
orl
or
push
call
push
jg
add
stos
mov
sarl
mov
or
clc
cmp
int
or
adc
imull
inc
cmp
sbb
xchg
mov
std
cs
mov
jl
fcom
jl
inc
xchg
and
mov
decl
andb
loop
push
mov
and
cwtl
push
ljmp
jb
data16
xchg
mov
in
cmp
into
adc
cltd
or
sub
imul
xchg
pop
mov
dec
adc
int
cmpsb
jmp
sahf
cmpsl
xor
rep
lret
int3
in
or
imul
adc
mov
push
add
jne
and
xor
shll
push
call
loope
sub
cwtl
in
outsl
ljmp
test
lock
cld
decb
push
jnp
xlat
shrl
jno
test
js
addb
stos
sti
adc
adc
leave
jmp
aad
push
popa
popf
inc
hlt
ds
pusha
and
xchg
cwtl
aad
fucomp
mov
stc
fcom
push
jle
xor
pop
in
xor
cmp
pop
add
shll
frstor
sbb
repnz
sub
pop
lea
je
test
pop
pop
sub
cwtl
mov
jmp
dec
fs
jae
sbb
bound
add
mov
pop
dec
xchg
in
arpl
call
stos
mov
mov
mov
into
scas
push
sti
fisttpll
fwait
iret
jae
inc
xor
decl
std
dec
push
cmpsl
push
inc
cli
scas
sub
out
insl
lds
sub
das
xchg
fsubl
jp
call
pop
mov
notl
dec
aam
pushf
imul
pushl
dec
hlt
inc
into
mov
fs
shll
sbb
out
cmp
jmp
incl
leave
orl
loope
xchg
push
pop
and
loope
es
mov
inc
jmpw
cmp
mov
inc
lret
insl
ret
sub
decl
fstpt
andl
xor
jbe
out
and
std
push
leave
nop
sti
or
clc
test
lods
das
cmp
pushf
mov
out
or
rcr
call
decl
lods
mov
jp
outsl
mov
test
xor
cmp
dec
repnz
dec
add
inc
lret
sub
je
outsl
fsubrs
out
fwait
pop
inc
pop
out
call
bound
insb
loopne
pop
imul
sub
sub
jle
push
pop
mov
jbe
movsb
jo
fs
decl
int
or
push
adc
xlat
inc
jne
mov
xchg
jmp
pusha
sub
push
or
sar
adc
rorl
test
pop
and
test
mov
mov
andb
add
pop
movb
repz
mov
cli
ljmp
mov
int
cmp
fimull
mov
popf
pusha
testb
std
cmp
push
outsl
lods
sub
pushl
inc
sub
repz
jnp
sahf
adc
addr16
mov
fucomip
hlt
mov
sub
push
xor
cmp
lods
lret
pop
sbb
lods
pop
dec
imul
loope
test
dec
sub
pusha
decl
cld
adc
dec
js
repz
sbb
in
adc
loop
pop
ja
mov
outsl
lock
pushl
jmp
push
jb
pop
sbb
call
std
sahf
push
add
test
hlt
std
add
adc
mov
or
lahf
mov
cmp
clc
push
adc
out
inc
push
iret
in
scas
or
and
imul
inc
popf
enter
jne
std
and
mov
pop
pop
sbb
lret
sub
fwait
mov
int3
adc
cltd
push
push
pop
xor
add
hlt
xchg
push
cs
mov
pop
mov
jg
imul
push
imul
shl
pop
rcr
ds
cmpsb
scas
jg
ljmp
xchg
or
or
sbb
pushf
pop
stc
or
mov
xchg
lcall
clc
add
or
xor
push
int
ret
xor
repnz
decl
ljmp
xor
mov
fadd
xchg
and
aaa
sarb
pop
aam
test
pushl
and
int
mov
mov
pop
mov
xchg
jb
xor
arpl
push
andl
add
cmp
fwait
int
cmp
push
cwtl
lahf
push
jg
mov
dec
jmp
repz
adc
sub
jle,pt
ret
and
cmp
inc
lcall
lea
ljmp
jecxz
xor
mov
mov
mov
adcl
adc
and
jg
mov
das
push
test
jge
jb
maskmovq
mull
cmp
add
mov
rol
inc
dec
xor
xor
ds
inc
popf
int3
sub
mov
jbe
mov
mov
mov
dec
in
sub
push
jmp
or
dec
pusha
cld
ja
mov
sarb
enter
clc
test
add
jg
pop
cli
in
sahf
lcall
dec
aas
inc
test
adc
and
incl
pop
and
orb
movsb
cltd
jmp
adc
dec
pop
sbb
cmp
cwtl
sub
scas
sub
and
pop
std
xchg
in
xchg
sti
inc
dec
and
or
ljmp
out
adc
sub
ret
jne
mov
jle
push
fnsave
nop
ret
pop
push
arpl
lret
call
clc
inc
icebp
and
or
pop
mov
mov
mov
pop
pushf
jmp
aas
loopne,pn
stos
addl
out
fdivl
xchg
clc
mov
call
leave
push
sbb
jne
pop
push
mov
mov
jmp
das
push
lret
mov
lret
sub
sub
jnp
insb
je
stc
ljmp
or
aam
cmp
jbe
das
sbb
or
cmp
jmp
xor
push
in
iret
dec
push
jbe
repnz
and
cld
in
xor
push
mov
add
in
jmp
adcb
pusha
test
or
sahf
xchg
inc
cli
cmove
sub
pshufw
adc
outsb
jge
fiaddl
jnp
dec
inc
mov
jbe
call
call
sbb
sbb
out
fiaddl
pusha
int3
adc
pop
cmpl
call
mov
cli
push
dec
enter
mov
sbb
jg,pt
aaa
cli
hlt
loope
imull
push
push
adc
call
mov
xchg
pusha
movsb
sub
in
or
push
leave
es
cmp
pushl
out
push
mov
ja
pop
loopne
add
mov
jecxz
lahf
lcall
jb
mov
add
fisubl
push
cmp
xor
mov
pop
fnstsw
xchg
mov
sub
sbb
sbb
lds
sarb
xchg
bound
clc
mov
icebp
mov
pop
mov
mov
inc
ds
sub
fdivr
inc
sahf
rolb
adc
and
hlt
pop
aad
div
lcall
sub
sti
mov
dec
xor
loopne
loopne
mov
outsl
cmc
decl
push
jecxz
mov
xor
lea
or
add
ljmp
mov
mov
rorl
mov
pop
pop
mov
pop
inc
stos
ret
decl
or
jae
lcall
fimull
lods
lcall
lock
sub
xchg
xor
pop
fcmovu
pop
xorl
push
inc
jmp
arpl
push
aad
mov
insl
pop
imul
out
fldcw
incl
or
lea
pop
pop
aad
jecxz
sbb
mov
icebp
fidivrs
incl
jl
mov
enter
sti
xchg
pushf
lds
dec
push
mov
mov
outsl
and
push
hlt
cmp
cs
push
xor
decl
dec
sahf
stos
stc
fdivrl
out
in
enter
arpl
std
pop
mov
iret
push
repnz
mov
std
xchg
js
decl
mov
jb
stos
push
pushf
xor
pop
scas
add
fs
jg
std
mov
inc
pop
out
in
push
dec
mov
mov
jnp
addr16
imul
fbld
addl
or
jae
insb
adc
xchg
fucomip
test
test
sub
fisttpll
clc
cmpsb
inc
les
test
rcl
jnp
cmp
push
add
jmp
je
push
test
fistpl
cmp
inc
jg
adcb
sub
mov
cmc
sbb
lcall
pushl
cld
inc
imul
addr16
arpl
scas
nop
jecxz
jge
cmp
sar
pop
adc
and
cmp
cwtl
stc
fstpt
aaa
cmpsb
pop
call
mov
int
hlt
andl
push
adcb
int3
movlps
lcall
cmpsl
pushl
inc
sti
adc
mov
lcall
inc
mov
cmp
push
in
mov
ds
push
fs
cmpsl
popf
iret
sbb
cs
adc
js
pop
push
fwait
cmpsb
shl
stos
int3
lret
cmc
xor
fadds
jg
clc
jecxz
call
pusha
xchg
sbb
push
xchg
inc
jle
pop
cld
jns
or
stc
mov
jne
pop
andb
shrb
std
decl
enter
shld
cli
stc
add
aad
outsb
lds
loope
clc
decl
aaa
push
fistl
xor
dec
pop
mov
inc
decl
pop
sub
shlb
mov
loope
push
sbb
fstpt
movsb
decl
sbb
clc
mov
xor
lds
xchg
in
daa
jl
lcall
mov
inc
test
popa
mov
fsubr
pop
lods
sbb
xor
push
decl
bound
sarl
mov
lcall
sarl
xor
fsubrp
testl
iret
push
ficomps
jge
mov
dec
filds
hlt
inc
leave
cmp
clc
xchg
addr16
mov
xchg
clc
mov
sbb
cltd
lahf
movsb
sub
and
das
bound
cs
out
and
jmp
lret
pop
cwtl
ret
in
mov
pop
or
cmp
push
xor
cmp
incl
sub
mov
out
cmp
hlt
fimull
inc
outsl
scas
jns
call
jae
mov
bound
scas
pushf
imul
movsw
mov
sbbb
push
jnp
jecxz
movsl
inc
add
or
cli
idiv
xchg
sub
xchg
ret
ret
addr16
out
pop
loopne
sar
xor
pop
inc
test
repz
cmp
mov
incl
call
sbb
lds
mov
and
mov
sbb
inc
repz
mov
imul
push
addr16
pop
out
xchg
std
or
sti
sbb
or
pop
jo
and
loop
ljmp
add
icebp
outsb
fs
push
jbe
ret
add
ret
call
mov
sub
pop
inc
das
sbb
mov
and
hlt
mov
or
cmp
jg
pop
mov
sub
mov
jbe
adc
xor
pop
out
pop
fisttps
push
jge
pop
loop
xchg
cmpl
hlt
addr16
mov
mov
jbe
lret
and
mov
mov
inc
sbb
loopne
inc
xor
andl
pop
dec
arpl
add
and
dec
movsl
aas
xor
fildll
push
cmp
fdivl
ds
rolb
xor
pop
cli
fiadds
mov
lds
add
jae
pop
inc
cld
xchg
sub
cmp
insb
call
call
hlt
or
sub
push
stc
push
push
xor
push
cli
fldcw
ljmp
popa
mov
test
and
add
inc
stos
mov
int
sub
leave
ret
jg
xor
jns
sub
enter
pusha
xor
mov
push
test
idiv
ljmp
ds
stos
je
mov
popf
loop
or
jle
jnp
adc
mov
repnz
in
pushl
pop
pop
mov
insb
daa
into
push
push
insb
dec
idiv
xor
mov
and
and
pop
lds
inc
pushl
or
push
mov
cmpsl
add
pop
ret
je
lds
int3
iret
jmp
pop
jne
ret
mov
mov
loope
dec
in
and
inc
rcl
dec
ret
inc
outsl
fldl
mov
push
mov
jmp
iret
mov
mov
inc
inc
idivl
outsl
jge
mov
lcall
mov
mov
mov
leave
xchg
aaa
imul
pop
imul
incl
dec
and
addps
fdivl
add
aaa
mov
fsubrp
aas
lcall
dec
mov
jg
out
xor
imul
xor
fcoms
mov
aas
push
sbb
sarb
push
xor
mov
dec
push
out
rclb
cmp
pop
decl
push
ljmp
jg
std
insl
xchg
xchg
jbe
jg
jmp
mov
push
cmp
fldcw
or
xlat
loopne
inc
lods
inc
jle
out
insb
repz
cmp
ret
pop
call
negb
lret
dec
lea
mov
dec
inc
incl
cmp
fwait
mov
xlat
leave
push
adc
loope,pn
psrlw
cmc
ror
fisubrs
dec
jg
lcall
lds
mov
in
jbe
test
icebp
bound
and
push
xor
aam
inc
adc
jnp
fcomps
mov
sbb
es
sbb
cmp
sbb
inc
rcr
cmc
cld
nop
daa
jmp
or
out
clc
and
mov
insb
mov
cmp
dec
xorb
xchg
mov
sub
mov
clc
call
dec
push
and
fldcw
push
adc
cltd
xchg
into
nop
jae
ljmp
mov
jle
out
mov
jb
lcall
lcall
pushl
add
stos
adc
lret
xor
clc
scas
mov
repz
call
inc
shlb
mov
mov
rorl
dec
or
mov
nop
loopne
std
push
daa
loope
pop
ficoms
pop
jno
int3
test
xchg
leave
hlt
cmpsb
mov
js
sub
ljmp
lock
nop
enter
ljmp
cmpsl
stos
mov
imul
stos
lds
scas
iret
jns
ret
pop
loope
jle
adc
iret
adc
clc
lcall
fildl
lods
xchg
repnz
js
add
mov
call
pop
cmp
push
jge
je
fdiv
dec
imul
xchg
or
lods
xchg
stc
icebp
pop
dec
aaa
sbb
mov
mov
xchg
adc
push
push
dec
push
je
insb
mov
inc
lods
clc
roll
popa
mov
insb
loopne
cld
call
cmp
inc
je
sahf
pop
loopne
adc
cli
data16
or
mov
enter
lret
incl
std
neg
out
mov
popf
push
icebp
cmp
mov
in
inc
pop
out
rcr
and
insl
xchg
clc
test
lret
jo
inc
cmp
out
cwtl
sub
in
xchg
dec
ljmp
mov
xchg
int
ds
aas
mov
clc
adc
mov
call
mov
lahf
push
popa
lds
lret
mov
hlt
xor
int
in
mov
inc
mov
sar
decl
lcall
pop
cmc
dec
mov
push
js
in
cs
mov
je
mov
je
dec
outsb
or
adc
adc
mov
pushl
dec
fisubs
int3
mov
xorl
aad
inc
in
xlat
or
mov
cli
xchg
push
mov
jmp
pop
jmp
jbe
mov
into
test
jmp
movl
jecxz
pop
in
pop
xor
aas
mov
sbb
imul
movsb
add
imul
scas
out
popa
and
push
outsl
push
repnz
lods
arpl
dec
outsl
in
fsts
mov
xchg
pusha
cld
xchg
sub
mull
jnp
cmpsl
cmp
sub
dec
int
lcall
loope
shrl
jg
jmp
jg
add
sub
push
or
out
cmp
addr16
fs
ja
sar
pusha
sti
add
in
add
daa
dec
mov
pop
add
inc
push
movsl
cs
lock
cld
mov
mov
add
cli
sub
mov
or
mov
pop
aaa
adc
sarl
sbb
adc
fisubrl
jne
add
test
lcall
pop
aam
lea
scas
pop
add
inc
jge
orl
jp
pop
jg
das
sub
dec
xlat
fld
ljmp
or
out
pop
ljmp
ljmp
xor
xchg
ljmp
inc
mov
cld
call
inc
adc
pop
dec
faddp
std
mov
mov
jnp
dec
hlt
fs
ljmp
shr
pop
push
in
dec
cmp
dec
std
and
jnp
xor
jbe
pop
jg
lcall
pop
xchg
not
movsl
cmp
test
cltd
enter
xor
lods
ljmp
jg
mov
test
icebp
hlt
pop
sbb
inc
movsl
mov
jmp
rorl
jmp
repz
cmp
dec
ljmp
mov
jge
cmpsl
cmp
popf
sbb
sarl
negl
pop
and
mov
ss
adc
decl
mov
push
ljmp
fildl
mov
and
std
pop
daa
idivb
push
int
push
sub
into
cli
mov
cmc
js
pop
dec
lcall
inc
add
lcall
pop
jae
lahf
and
mov
popf
and
out
mov
ja
outsb
iret
cmpsb
dec
jle
jbe
decl
or
mov
ret
jb
mov
mov
bound
xchg
clc
ljmp
sbb
addl
xchg
xlat
xchg
stos
lods
sub
fcmovbe
mov
inc
and
popf
inc
xor
fnstenv
jg
mov
adc
pop
cmp
and
dec
cltd
nop
xchg
cmpsb
or
xchg
adc
pop
inc
add
adc
int
mov
scas
decl
dec
mov
es
mov
push
movl
xor
outsl
cmc
call
sub
outsl
and
scas
mov
sahf
pop
jp
decl
std
clc
xchg
call
mov
mov
sbb
sub
lea
repnz
jmp
lret
out
adc
pop
mov
int
mov
testb
inc
push
sarb
mov
aaa
and
nop/reserved
in
jmp
ja
test
add
sub
sbb
ljmp
pusha
pushl
mov
mov
mov
in
mov
jg
push
xor
pop
jg
cmp
fsts
push
int3
pop
dec
addr16
xor
pop
js
jbe
inc
test
and
pusha
xorl
xchg
scas
mov
jne
int3
and
push
es
or
lret
sar
pushl
jmp
pop
push
xor
iret
call
or
mov
repz
dec
adc
adc
jno
sub
aad
jns
mov
movsl
inc
inc
and
add
loope
ljmp
hlt
and
in
cmp
xchg
call
pushl
push
or
mov
xchg
inc
je
xchg
cmp
mov
outsl
push
dec
bound
test
lahf
cwtl
lcall
pop
rcrb
test
mov
outsb
in
mov
icebp
call
data16
inc
daa
aam
mov
lods
or
or
pop
sbb
ljmp
push
enter
insl
stos
arpl
je
ds
sub
fldenv
imul
push
lret
leave
pop
adc
push
push
dec
sub
mov
ljmp
xor
cmp
ds
sub
fcmove
popa
cmp
test
inc
fisubs
push
jne
pushl
clc
clc
inc
pop
fwait
dec
lret
cmpl
repnz
pop
out
mov
mov
pop
mov
mov
aad
push
popf
rcrl
sbb
lcall
mov
ds
repz
sub
xchg
sub
out
adc
ret
pop
sub
cli
jmp
in
push
jns
lahf
dec
jg
rcrl
pop
shl
mov
xchg
fwait
clc
jne
fimuls
cmp
lcall
and
inc
or
add
test
lahf
adc
mov
xchg
push
inc
ret
cli
fs
add
ret
xchg
sub
mov
jne
push
mov
decl
mov
cmp
out
xor
stc
sbb
pop
jecxz
je
imul
add
cmp
lock
lcall
repnz
sbb
adc
jl
pushf
shlb
sub
fwait
sar
outsl
std
push
dec
push
mov
inc
adc
cs
adcl
jp
jg
jmp
lcall
addr16
adc
dec
mov
and
dec
call
aaa
cmp
test
cltd
push
pusha
icebp
add
and
fsts
mov
pop
popf
pop
cli
das
std
int
mov
xlat
das
jecxz
add
loope
cltd
mov
incl
add
mov
inc
mov
rorb
and
js
jmp
scas
pop
fsts
add
adc
in
lcall
pushf
sub
cmpsb
subb
sarb
jle
aad
cmp
decl
xchg
js
push
loopne
pop
mov
push
push
fisubrs
out
xor
sub
loopne
movsl
imul
lcall
hlt
and
popa
scas
and
je
sbb
and
nop
sbb
xchg
cmp
insl
pop
dec
push
in
xchg
int
lcall
loop
xchg
pop
aas
mov
jns
jecxz
cmp
cmc
jg
fdivrs
dec
pushf
dec
fmull
add
xchg
in
lock
mov
in
nop
add
or
adc
inc
add
mov
add
clc
fsubs
push
hlt
ja
push
stos
xor
sar
jns
inc
negl
jns
gs
add
clc
insb
pop
sbbb
imul
hlt
or
lods
stc
movsb
es
adc
addr16
jg
outsl
jnp
or
fwait
fwait
idiv
sbb
pushf
leave
xlat
imul
decl
das
dec
cs
leave
movsl
addr16
inc
push
fimull
das
inc
cld
jmp
out
mov
mov
sbbb
call
clc
xchg
mov
fdivl
mov
mov
pop
std
pushl
mov
dec
inc
mov
xlat
dec
mov
pop
cli
daa
xchg
out
xchg
add
insl
fscale
ss
jae
jae
data16
enter
mov
or
mov
mov
add
mov
inc
pusha
sub
call
nop
insl
pop
movaps
dec
ret
pop
pusha
rcrb
je
inc
and
leave
or
add
cmp
cmp
mov
js
xchg
loop
mov
cmp
lds
push
jmp
jmp
fmuls
xorb
ds
inc
jne
lock
stos
jae
cmc
daa
jl
fisttpll
fstpt
mov
xchg
or
add
inc
pop
adc
jg
decl
insl
fsubrl
jge
stos
xor
add
scas
adc
call
cltd
pop
sbb
stos
jno
ss
mov
je
nop
inc
mov
inc
fsts
inc
nop
cmp
push
pop
std
pop
std
xchg
sub
aad
adc
nop
fsub
xor
hlt
cmc
add
rcl
pop
xor
jl
pushw
imul
test
mov
jecxz
in
inc
insb
rclb
jg
jg
ljmp
push
outsb
call
mov
cmp
mov
std
add
cmp
mov
ficoml
test
push
adc
leave
dec
mov
std
mov
fdivs
jecxz
fcmovnbe
xchg
sub
jns
xchg
sub
sbb
outsl
mov
sahf
dec
in
test
ljmp
push
push
sbb
je
cmp
sub
mov
xchg
and
pop
xchg
hlt
inc
pushf
inc
xchg
ret
scas
xchg
stos
dec
int3
fmuls
lret
adc
jecxz
shlb
dec
popa
lahf
and
in
pushf
jge
outsb
xchg
rorb
es
add
cmpsl
leave
fyl2xp1
mov
sbb
ret
jmp
fstpt
pushf
ljmp
add
pushl
cli
punpcklbw
push
mov
and
jmp
je
adc
pop
mov
dec
cmp
decl
decl
enter
std
sbb
out
push
sub
mov
jmp
jmp
sbbb
in
xchg
out
fs
xorb
cld
xorl
or
xlat
loop
call
arpl
jbe
bound
sbb
mov
jnp
fmuls
mov
xchg
shll
lods
jmp
movsb
sar
jp
pop
sarb
mov
inc
jmp
cltd
subl
pop
cs
sti
jp
inc
sahf
add
push
fwait
adc
lock
jg
and
test
or
cmc
pop
movups
xchg
inc
repnz
mov
pop
les
icebp
incl
mov
pop
mov
stc
in
mov
scas
js
outsb
jge
ljmp
sub
mov
xor
ret
sahf
loop
jno
xor
das
pop
repz
into
std
dec
xchg
outsl
stc
mov
lahf
iret
and
cmp
inc
cltd
leave
jl
adc
add
test
add
cli
decl
pop
or
lret
ja
loopne
hlt
nop
fldt
std
xor
mov
test
cli
outsl
test
fists
lret
ds
dec
stc
xchg
cmp
aad
call
in
stc
fbld
push
addb
sbb
xorl
mov
movsl
ds
icebp
les
clc
call
push
ficomps
movsl
pop
xchg
addr16
jp
mov
sbb
ja
add
cli
mov
call
pop
inc
sahf
push
cmp
sbb
jo
xchg
xor
jae
ljmp
jno
sbb
xchg
int
or
lods
jo
repz
negl
pop
ljmp
ret
cli
push
outsl
jns
mov
ds
add
call
call
sub
mov
hlt
dec
jge
dec
jb
out
and
mov
sub
pop
movsl
xor
incl
mov
cld
addr16
pop
inc
scas
lahf
das
test
cmc
cltd
aaa
in
out
das
mov
lods
jb
mov
imul
inc
mov
cmp
push
xchg
adc
cmc
call
add
repz
iret
jne
xchg
xlat
sbb
mov
jbe
sub
push
mov
loope
movsl
sbb
sbb
pop
jbe
fs
in
insl
cs
xchg
stc
shlb
cmp
gs
cmp
inc
jno
hlt
push
xor
jb
pop
mov
inc
std
fwait
xchg
enter
jl
push
rolb
push
jb
rcr
push
packssdw
xor
lret
cltd
out
adc
push
decb
pusha
iret
nop
push
std
xchg
mov
pusha
inc
sub
outsb
cmp
mov
shr
outsl
jmp
adc
and
jbe
xor
aad
inc
xchg
cli
sbb
stc
xor
mov
sub
jp
aam
call
pushf
pop
jl
imul
pop
xchg
dec
into
lcall
leave
xchg
arpl
int3
dec
pop
lock
out
jnp
mov
loop
iret
mov
call
popl
loope
or
gs
into
jl
sti
mov
es
ljmp
adc
push
jle
cmpsb
aas
sub
not
inc
stos
test
cmp
decl
push
gs
inc
pop
test
xchg
pop
xchg
rolb
jecxz
inc
call
xor
sarb
pop
loop
call
mov
mov
test
pop
popf
movsl
int3
inc
push
call
rolb
call
sbb
add
dec
lea
cltd
repz
call
mov
jo
mov
cld
mov
loopne
inc
xor
add
adc
adc
mov
iret
rorl
test
and
jne
js
and
incl
enter
mov
xchg
aas
push
push
pop
or
fnstenv
das
pop
or
aaa
cli
ljmp
push
jbe
jnp
lcall
scas
cmp
jecxz
sbb
xchg
dec
add
ret
cmp
sahf
mov
or
stos
fcompl
imul
in
adc
vcmpngesd
jne
hlt
and
mov
ficompl
clc
push
jo
cmc
lods
sbb
pop
dec
mov
outsb
inc
outsl
call
out
pusha
mov
in
bound
call
jge
and
jmp
ftst
mov
nop
xlat
xchg
push
out
cmovg
push
imul
mov
gs
mov
je
xorb
xchg
jbe
cmc
test
and
aas
sbb
mov
fwait
out
xorl
mov
insb
lods
jae
and
mov
icebp
decl
sbb
pushf
pusha
sbb
adc
test
outsl
lods
adc
mov
cmc
inc
int
in
je
push
push
mov
sbb
fstps
sbb
cmpsb
int3
xor
pop
lea
sahf
mov
int
sahf
push
decl
adcb
mov
lods
mov
iret
pop
adc
dec
xor
push
stos
mov
repz
lahf
xor
test
dec
pop
loopne
pop
lret
aas
leave
fcomps
lcall
inc
push
out
mov
mov
push
inc
lret
in
push
mov
jecxz
fildl
out
testb
hlt
pop
cld
jge
or
test
shr
jo
push
or
repnz
jmp
jo
out
or
pop
push
in
adc
js
xchg
daa
or
lret
imul
inc
mov
dec
sbb
test
incl
pushl
adc
ret
fildll
add
push
dec
jnp
cltd
inc
test
cmpsb
push
cmp
cmp
lods
movb
aas
fldt
sub
cmc
ljmp
and
testl
pusha
sub
xor
cmc
call
clc
dec
lret
or
decb
jnp
lods
mov
pop
mov
call
cli
inc
jl
in
cltd
stos
loopne
js
call
ret
call
jb
or
lock
dec
inc
inc
rclb
pop
dec
sub
sub
movsl
push
mov
add
out
or
cld
filds
addl
adc
outsl
hlt
pop
cli
clc
sbb
aas
adc
xor
adc
clc
mov
fldenv
jecxz
pop
mov
es
mov
incl
call
xchg
pop
mov
dec
pop
or
pushf
fs
fbld
or
js
inc
test
mov
call
xor
js
lret
jecxz
mov
arpl
lcall
aas
jecxz
or
outsb
sub
ret
arpl
xlat
sub
fdivr
shl
subl
pushl
or
cmp
lea
xor
bound
test
inc
mov
push
mov
cmp
add
jns
mov
pop
cmpsb
xchg
cs
incl
sub
mov
scas
mov
decl
lods
push
jg
adc
xchg
push
cmp
dec
outsb
aaa
dec
or
pop
test
shll
xor
add
inc
outsl
inc
push
fsubrl
sbb
imul
call
mov
loope
jp
fcomp
shrl
repz
or
mov
cmp
pushl
mov
lret
gs
gs
sub
repz
push
push
bound
fdivl
repz
or
push
mov
fists
lcall
or
ljmp
jmp
addr16
int
imul
sub
sbb
test
lcall
xchg
loope
jb
pushf
aaa
xchg
lahf
adc
push
and
jae
cmp
jmp
call
cltd
pusha
pop
push
push
repz
xor
ror
sub
inc
sarb
adc
cltd
xor
mov
xlat
sub
cmp
int3
dec
pusha
jl
enter
in
arpl
call
and
sub
rol
icebp
and
div
jl
lret
xchg
jb
popa
call
pushf
xchg
fsubs
loope
in
icebp
movsb
cmp
mov
cld
incl
rclb
and
outsl
dec
inc
icebp
xchg
add
and
fbld
sub
cmpsl
enter
fs
clc
jge
adc
gs
push
shr
es
add
pop
sbb
repnz
imul
and
pushl
movsl
xchg
jl
mov
pop
rorb
or
jle
adc
stc
lcall
fdivp
scas
mov
data16
es
pop
or
push
xchg
or
test
dec
xor
iret
xchg
xchg
jo
pop
outsb
icebp
mov
push
out
iret
mov
outsb
lock
movsb
sub
cld
sbb
cmp
call
lods
xlat
dec
sub
pcmpeqb
shlb
sub
mov
jmp
scas
mov
repnz
sub
inc
imulb
sahf
ret
pushl
dec
push
dec
daa
ds
mov
shlb
pop
adc
imul
xchg
clc
hlt
xchg
aas
stos
bound
pushf
int
jno
mov
pop
mov
decl
ljmp
jg
dec
sarb
pop
sti
cmc
shrb
inc
pop
fistpll
and
jl
cmpsl
pop
popf
push
fstp
lods
in
pop
loope
mov
std
mov
mov
xor
mov
lret
fdivrp
mulb
xchg
es
jno
call
jmp
mov
outsl
pop
clc
arpl
pop
dec
pop
mov
cmp
mov
loopne
inc
sub
sub
pop
pop
pop
sub
mov
loop
mov
ljmp
fiadds
jne
inc
pop
aam
js
lock
ljmp
push
mov
test
lock
out
xchg
pop
xlat
and
lcall
mov
popa
mov
xor
ficompl
ss
fmull
xchg
imul
or
addr16
jno
lds
sbb
add
dec
test
jge
jle,pt
popf
sub
add
inc
mov
rcrb
adc
cmp
lods
mov
xor
hlt
sub
mov
fcmovnb
fcmovnu
cmpsl
or
push
push
int3
lea
sar
xor
repnz
adc
mov
in
push
pop
sub
and
stos
push
mov
mov
mov
scas
call
lods
lret
and
xor
fsubrp
cmp
xchg
inc
cmp
decl
ds
pop
and
pop
xor
test
lahf
loop
add
insl
in
mov
std
xchg
push
hlt
or
lcall
inc
inc
fisubrl
shrb
sahf
out
aam
repnz
ljmp
sub
je
pop
xlat
mov
inc
iret
push
adc
outsb
jge
lcall
jne
adc
push
cli
mov
into
and
cs
cmp
xchg
and
cmc
mov
aas
decl
and
mov
mov
adc
repnz
leave
rol
and
aam
pushl
orb
xchg
pop
shll
test
in
dec
lret
xchg
adcl
je
mov
adc
mov
gs
adc
pop
inc
sbb
mov
aaa
inc
dec
incb
mov
adc
outsl
icebp
fisubrs
xchg
mov
rclb
wrmsr
adc
xchg
or
jae
aam
dec
dec
adc
jns
aas
iret
aaa
jg
pop
sbb
mov
mov
sbb
movsl
or
aaa
movsb
sbb
mov
mov
lcall
push
cmc
sub
inc
add
adc
aaa
ljmp
in
xchg
cli
decl
mov
test
add
cs
ljmp
lea
test
shrb
sti
ret
cmp
adc
mov
cmp
negl
adc
and
jnp
or
test
pop
roll
decl
dec
shr
jnp
cmp
mov
xchg
adc
out
pop
jmp
push
lods
pop
jno
ret
fxtract
jle
fisttpl
inc
fcomp
sbb
jg
stos
out
pop
nop
leave
jmp
adc
or
xchg
cmc
mov
xchg
adc
stc
scas
add
dec
fwait
aad
jne
fldcw
lea
int
dec
sbb
mov
pushf
in
adc
shl
sahf
call
cmp
ljmp
dec
push
call
outsl
add
std
fisttpl
ds
jbe
jb
fistps
shl
insl
sbb
lcall
mov
jns
or
xchg
inc
xchg
push
or
mov
jg
div
dec
push
inc
add
inc
or
sub
lahf
adc
add
adc
fs
cmp
mov
inc
inc
pop
cli
in
repnz
cwtl
outsb
or
mov
test
and
lret
jg
call
scas
jae
push
stos
jmp
shrb
loop
pop
mov
sub
or
jmp
movsl
xchg
push
inc
push
test
xor
int3
inc
das
lcall
mov
xchg
and
cmp
cmp
pop
xchg
sbb
aaa
push
pop
push
mov
in
lea
mov
xchg
dec
or
je
pop
pop
clc
xchg
adc
push
mov
mov
clc
mov
mov
mov
loop
std
dec
cmc
mov
mov
insl
pusha
sbb
inc
stc
add
jle
cmp
mov
decl
roll
xchg
rol
pop
or
ret
xchg
push
les
fists
jnp
in
xor
sub
jb
ljmp
repnz
icebp
jmp
push
das
push
je
mov
xor
mov
ficompl
xchg
fstl
sbb
pop
ljmp
push
leave
insl
sub
push
pop
push
jmp
push
imul
jle
fnstenv
or
mov
adcl
fldl
and
pushf
inc
mov
inc
or
sti
stos
jg
sbbl
adc
and
inc
icebp
aaa
jg
hlt
fdivr
and
std
ljmp
fbld
cli
mov
add
jne
or
pop
sbb
les
pop
js
and
sub
mov
inc
aad
sub
xor
call
mov
sahf
pushf
sahf
repz
pop
mov
out
xchg
cmp
test
cmp
loope
pop
mov
andl
push
inc
sbb
fiadds
ljmp
hlt
jmp
dec
into
ja
pushf
dec
lret
adc
mov
es
sub
leave
inc
cld
jmp
stos
popa
je
fisttpl
pop
sub
and
cltd
mov
incl
jmp
pop
int3
sbb
jle
or
adc
xchg
mov
nop
jmp
lods
decl
xor
and
adc
cmc
jg
idivl
pop
and
jmp
xor
jb
test
repnz
clc
mov
in
pop
ds
mov
or
ret
add
call
xchg
lcall
pop
jmp
jle
ljmp
ss
repz
dec
into
imul
js
xor
incl
cmpb
adc
mov
fwait
jle
inc
inc
mov
dec
and
jp
cmp
pop
push
into
psubsb
das
jl
inc
scas
jne
fnstsw
inc
jmp
test
mov
lret
push
xor
and
sarb
add
clc
sub
sarb
subl
add
aam
lds
push
fwait
push
add
fstps
in
mov
jne
std
xor
and
pushl
icebp
outsl
aad
decl
iret
mov
inc
mov
aas
xchg
dec
xchg
push
aas
int
push
mov
das
std
mov
mov
popf
cwtl
dec
sub
scas
test
pushl
incb
pop
js
sub
xchg
lods
add
xchg
and
xor
in
xchg
and
aaa
testl
jns,pn
in
pusha
dec
jecxz
jecxz
xor
add
and
ret
mov
imul
sub
xlat
adc
pop
daa
stos
test
lcall
cmp
aas
jge
scas
int
add
sahf
cmp
xchg
pop
pushl
filds
lods
jmp
outsb
lods
sar
push
xlat
sub
in
enter
imul
jle
sbbb
incl
incb
sbb
stos
ret
std
fsubrl
ljmp
cmp
fwait
push
rcll
xor
mov
andb
mov
ljmp
push
xchg
je
cltd
cli
test
movsl
cmpsl
mov
pop
xorl
cli
xlat
rcrl
test
ljmp
jge
sub
rorl
adc
mov
jg
jg
push
addr16
or
je
mov
je
insl
loopne
mov
xchg
clc
push
or
add
jo
pop
jmp
call
daa
mov
divb
or
shl
fildll
pop
imul
test
mov
sbb
mov
mov
das
popa
iret
loop
mov
mov
outsb
popf
sub
test
sbb
push
inc
mov
out
stos
xchg
push
dec
jb
fs
test
jb
decl
adcb
ljmp
arpl
enter
ljmp
mov
orl
xor
in
ret
shlb
pop
jno
clc
mov
jb
mov
or
gs
ds
dec
push
addr16
pushl
je
xor
shlb
push
adcb
data16
mov
mov
hlt
mov
pop
dec
mov
cli
lods
out
fistl
pop
sub
jmp
and
pop
ret
aam
jecxz
in
sbb
cmp
fs
clc
sub
fwait
sub
cs
pop
dec
mov
push
ja
leave
cmp
dec
lcall
test
jl
loopne
sti
and
lea
mov
sbb
jmp
xor
pop
scas
jbe
jae
mov
hlt
inc
sbb
pop
pop
pop
divb
gs
ret
lret
lea
pop
pushl
test
inc
lea
out
mov
mov
lods
repz
cmp
inc
mull
inc
jo
jecxz
repz
fdivs
add
mov
je
decl
sbb
xchg
das
out
dec
or
shrl
cmp
loopne
fldcw
xchg
sub
inc
outsl
cld
xchg
jnp
xor
mov
fcos
mov
jmp
fbstp
or
aaa
jmp
ret
mov
jp
adc
incl
pop
mov
mov
out
aam
mov
mov
add
jl
imul
pop
mov
add
mov
inc
lock
dec
mov
and
push
icebp
mov
lock
icebp
lods
es
xchg
out
lret
xor
aad
call
dec
mov
je
mov
mov
or
add
jge
add
ljmp
xor
imul
mov
fs
mov
xor
int3
std
std
mov
push
out
cld
call
cli
mov
xor
aad
loopne
sub
jecxz
push
sub
nop
pop
loop
pop
lret
dec
jl
mov
and
in
jg
lcall
out
jnp
add
xchg
adc
out
aad
mov
decl
hlt
fisttpll
data16
dec
ja
pmulhw
and
lds
push
push
lret
or
ljmp
sub
inc
dec
lea
es
pusha
fdivs
mov
xchg
cli
test
fistpl
add
mov
sbb
in
leave
js
out
stc
mov
js
or
add
sub
jo
adc
push
push
sub
jecxz
pushl
mov
std
fidivl
aam
inc
jns
leave
shlb
aas
xchg
cmc
dec
cmp
inc
mov
pop
mov
mov
mov
andb
pop
or
in
call
jb
repz
in
filds
add
stos
sbb
std
jle
sbb
cli
jl
dec
dec
lahf
adcb
pop
xor
fs
outsb
lret
cmp
pop
cmp
or
adc
aaa
dec
sbb
enter
cmc
mov
jno
lcall
ljmp
jne
jge
adc
jg
dec
aam
outsl
jae
mov
mov
sahf
cwtl
ds
mov
popa
test
addr16
lea
rorb
xor
sbb
and
lods
pushw
mov
jne
inc
jl
hlt
movsl
pop
imul
fdivr
mov
pop
push
loope
xor
ja
xlat
mull
jne
xlat
aas
fdivrl
xlat
cli
mov
jecxz
sahf
imul
movb
sub
ja
fdivs
or
lcall
out
cmc
in
les
and
sub
xor
orb
rcrb
fsubr
ja
int3
popf
inc
jg
lock
ret
test
or
shll
bound
dec
mov
mov
fucomip
incl
ds
sahf
inc
sbb
icebp
push
adcb
ret
lods
pop
mov
call
sarb
clc
push
mov
test
sbb
hlt
hlt
lea
rcrl
xchg
hlt
xor
les
jmp
cmp
decl
cld
dec
stos
adc
jge
cmp
call
dec
frstor
mov
mov
insb
repnz
jmp
cmp
inc
mov
push
lds
cmp
pushf
sub
call
sub
sub
pop
xor
sarb
test
jecxz
add
and
loopne
xlat
xchg
addr16
lret
and
inc
sbb
jge
jmp
inc
loop
jmp
in
ss
rcl
or
insl
out
mov
in
inc
clc
dec
pop
add
and
fcmovnu
scas
stc
sbb
cmpsb
es
pop
dec
jae
xor
jp
out
cli
add
push
fucomip
jo
and
cmp
lods
rcl
call
cs
ja
test
dec
mov
sbb
lahf
inc
pop
incl
lahf
jg
mov
int3
sbb
in
cmp
xchg
shrl
decl
fs
inc
scas
or
dec
push
jmp
xchg
dec
inc
test
pushf
int
std
fucomip
fbld
cmp
lret
fldt
dec
scas
outsl
jmp
push
dec
xchg
mov
add
imul
push
jbe
jle
xchg
sti
incl
dec
cs
int
adc
pop
jge
xchg
jmp
into
divb
std
popf
cli
mov
pop
xchg
addl
pushl
clc
decl
cmc
mov
xchg
mov
add
in
mov
jae
or
decl
adc
mov
mov
test
fldt
enter
jp
jb
orb
arpl
pushf
xchg
out
icebp
aaa
xor
jecxz
adc
ljmp
fisubl
pushf
int3
adc
fsts
add
je
cs
hlt
xchg
pop
cli
xor
push
stos
sbb
xchg
xchg
insb
sbb
pusha
jmp
xor
lock
sahf
scas
mov
sarb
call
cwtl
and
pop
inc
sbb
icebp
xchg
lahf
push
dec
ljmp
sub
xchg
adc
jo
lcall
leave
bound
push
cmpsl
sub
and
mov
mov
mov
mov
mov
jmp
lret
or
pop
xor
mov
cld
mov
xchg
les
aaa
adc
inc
push
xor
stos
pop
out
daa
stc
daa
jp
push
xchg
and
test
cli
mov
pushl
sbb
ljmp
lret
jbe
xchg
add
fnstenv
jp
jae
std
idiv
jmp
pop
jns
repnz
das
and
xchg
jp
ljmp
icebp
ljmp
adc
je
inc
mov
fidivrs
jl
and
mov
sub
mov
stc
shll
lods
pop
lcall
cld
mov
insb
xchg
popf
sbb
mov
nop
int
sub
lds
jl
jae
jbe
cmp
mov
inc
add
dec
push
or
inc
sbb
jno
or
mov
subb
xchg
arpl
adc
jae
sarl
mov
mov
je
lods
add
inc
in
push
cmpb
push
sbb
pop
stos
pop
sbb
jg
idivl
cmp
pop
scas
xor
and
adc
mov
les
clc
in
push
dec
mov
fwait
inc
xor
lcall
lahf
mov
lret
inc
and
or
sbb
cmpsb
ret
sbb
sub
dec
cwtl
fisubrs
ljmp
jns
xchg
roll
cmp
mov
decl
sbb
xchg
lea
adc
cs
mov
int3
lret
jne
std
mov
ljmp
out
mov
subl
dec
and
pop
and
push
fistps
test
into
in
mul
jb
push
cli
ljmp
fsubl
cmp
jmp
or
outsl
stos
jg
adc
or
xchg
xchg
iret
outsl
data16
call
jne
rcll
adc
imul
fcmovnb
dec
std
mov
dec
pop
test
xchg
sbb
inc
jmp
dec
mov
aas
pextrw
cmpl
out
inc
mov
loope
jmp
xlat
daa
in
and
lahf
dec
pop
clc
incl
jmp
stos
and
sbb
int
mov
cmc
cmpsl
and
push
cwtl
std
incl
pop
lahf
jno
aas
xorb
ja
push
mov
fs
pop
fsubr
adc
fstpl
dec
xor
inc
xchg
hlt
into
loopne
cmpsb
jecxz
sub
clc
add
std
sbb
mov
lret
mov
fstpl
inc
xchg
add
jmp
cmp
add
fmuls
cld
inc
out
mov
fadd
mov
jle
imul
sbb
loopne
scas
shrl
movsl
inc
ja
jns
cld
in
cmp
std
or
notb
fidivl
incl
or
jecxz
push
push
cmp
adc
mov
sub
fbld
cmp
sub
lods
lods
push
loope
stos
and
add
std
cld
call
mov
jns
adc
add
aam
imul
push
pushf
cltd
lcall
cld
or
lahf
dec
dec
mov
pushf
mov
push
mov
mov
and
test
stc
dec
pop
fwait
xchg
push
jns
xchg
incl
fidivrs
add
adc
loop
xlat
adc
xor
sbb
mov
aad
lcall
xor
dec
mov
loope
inc
lea
lret
js,pn
lods
jg
lcall
ret
popa
sub
jae
stos
xchg
mov
push
fstps
mov
stos
jne
cwtl
jnp
mov
pop
aaa
sahf
fwait
or
cwtl
xor
ljmp
mov
loopne
rep
fsubrs
mov
mov
mov
popf
mov
jle
cmp
lods
cmpsb
fidivrl
test
add
pop
jp
std
sub
xor
lahf
jnp
mov
hlt
sbb
bound
fcoms
lods
pop
subb
cmp
jne
inc
cmp
call
push
mov
jno
in
mov
fbstp
outsb
inc
loopne
adc
out
jg
popa
cld
movsl
jg
mov
lods
clc
mov
xor
push
add
stc
and
call
lds
ret
sub
daa
or
jg
jmp
push
inc
fstl
pushf
mov
adc
stos
bound
aam
jg
call
dec
stc
cmpsl
aaa
jle
stc
loopne
mov
xchg
es
mov
out
mov
fimuls
cmovns
mov
jg
call
jg
in
inc
push
adc
jp,pn
or
cmp
ret
push
arpl
hlt
xchg
jmp
add
push
pop
movsl
inc
ja
and
sub
shl
test
xor
sbb
fistps
leave
xchg
pop
and
fiadds
dec
test
test
fsubl
push
jnp
aam
jmp
mov
test
lock
sub
mov
cltd
rorb
aaa
pop
mov
cmpsb
divb
mov
sahf
lds
or
loope
inc
inc
mov
clc
mov
stos
fstps
xorb
cli
jg
xor
xchg
push
decb
xlat
test
push
dec
loop
jbe
pushl
mov
cmp
xorb
inc
cwtl
lret
xor
pop
test
adc
jg
jo
loop
fs
out
sbb
mov
lcall
call
lahf
mov
insb
jle
mov
push
lahf
outsb
fwait
movsl
aad
sub
or
incl
ficomps
test
ljmp
outsb
je
js
push
cmp
add
fstl
fcmovu
iret
mov
insl
inc
xor
and
xchg
adc
inc
xchg
jo
imulb
cld
inc
push
test
incl
incl
cli
test
pop
mov
add
xor
popa
daa
fwait
jecxz
test
sahf
fwait
jle
fwait
xlat
ficomps
jecxz
dec
loope
lods
push
pushl
ret
outsb
sub
ret
cli
or
xor
stc
cltd
push
cmp
xor
ljmp
mov
fisubrs
sbb
inc
jo
repnz
cltd
sbb
lahf
or
int
pushl
push
in
mov
cld
mov
mov
jb
lea
xchg
jae
or
movsl
dec
cld
jg
pop
push
dec
jns
add
in
xor
dec
sub
aaa
cli
jmp
sub
sub
pop
mov
mov
dec
ljmp
push
stc
push
xchg
call
daa
inc
xchg
xor
push
movsl
adc
aam
sub
mov
loope
push
lahf
jg
ljmp
js
lock
rorl
mov
mov
decl
mov
mov
dec
xor
std
push
sbb
insl
idiv
jmp
lret
es
push
dec
sbb
int3
mov
aad
and
call
xchg
test
push
mov
sbb
push
or
fdivs
call
inc
insl
in
mov
pop
and
xchg
jae
mov
push
scas
dec
daa
jl
mov
cmp
mov
mov
adc
jb
push
sbb
insl
xchg
pop
push
pop
movsl
movsl
and
dec
xlat
add
or
mov
add
lea
xor
jge
addr16
xor
mov
decl
movl
int3
mov
jle
das
notl
sbb
lret
arpl
incl
inc
addr16
stos
push
lret
addl
sbb
test
fwait
fcmovnu
test
mov
xchg
je
add
jbe
jnp
jae
inc
mov
call
xchg
movsl
cmp
in
push
int3
push
xchg
adc
xchg
std
and
xchg
push
pop
ljmp
scas
mov
mov
je
ss
decb
lret
lret
stos
je
lods
sar
mov
pop
cmpl
sti
mov
jns
icebp
adc
dec
sarl
xchg
arpl
cld
xor
sub
lods
insl
sbb
jb
sub
fwait
decl
push
mov
mov
jno
call
pop
jecxz
das
push
mov
lcall
add
lock
decl
mov
js
xchg
mov
add
cli
outsl
std
lcall
stos
lock
push
out
pop
ror
lret
dec
xchg
mov
xchg
fwait
pop
mov
roll
mov
and
pop
jno
cld
incl
xchg
or
mov
rcl
std
movsl
pop
addr16
push
lcall
xorl
out
sub
jb
fsubrs
fsub
gs
push
sbb
mov
imul
jle
inc
xchg
int3
nop
es
add
incl
loopne
mov
pop
mov
in
inc
fwait
ja
fnop
out
hlt
sub
call
mov
or
pop
out
cmpsl
xchg
inc
sbb
mov
stc
in
sbbl
dec
test
sub
inc
xor
sub
cmp
es
and
mov
daa
dec
ret
dec
cmpsb
pop
int
pusha
push
fnstsw
sbb
hlt
adc
push
mov
xchg
lods
pop
or
decl
push
divb
shlb
aam
inc
jae
test
mov
outsb
aaa
pusha
ret
and
mov
lahf
pop
and
inc
aam
je
mov
xchg
cmp
ffreep
push
mov
fcoml
stos
xor
cmp
mov
pop
adc
incl
outsl
mov
push
add
add
decl
jg
cli
cmpsl
add
rorl
sub
mov
add
jae
push
int3
or
ljmp
or
mov
pop
and
mov
xor
pop
or
mov
adc
mov
mov
cs
add
lods
push
jb
jle
jp
inc
mov
push
fistpll
rcl
call
sub
pop
jae
xchg
cmp
jae
loope
or
sub
loop
add
or
xor
xor
xchg
pop
and
add
jo
jg
loopne
out
adc
mov
mov
ljmp
cs
cld
lods
cli
in
out
pop
fbld
adc
ror
push
loope
xchg
mov
or
xchg
push
das
shr
cmpsl
and
sbb
and
rclb
adcl
pushl
mov
mov
fldt
mov
push
push
add
lcall
incl
xchg
ds
and
mov
and
sub
jb
aaa
fwait
push
out
hlt
xor
mov
es
sbb
mov
pop
mov
movsl
push
jb
cmp
jmp
inc
and
das
mov
stc
xor
cld
fists
call
and
pop
xchg
popf
xchg
clc
lcall
xchg
adc
mov
mov
xchg
mov
imul
mov
ss
mov
jo
aaa
outsb
inc
add
xchg
mov
jg
jmp
aam
ljmp
cmp
insl
aaa
or
inc
jbe
incl
lea
jle
add
daa
hlt
cmc
and
xchg
dec
in
decl
andl
dec
sahf
push
ja
stc
loop
ficoml
pop
orb
clc
ss
lret
sbb
decl
inc
xor
test
scas
iret
dec
int
dec
mov
in
mov
xor
outsl
cmc
xchg
daa
rol
jb
ljmp
mov
push
adcl
enter
xor
lret
call
jmp
mov
in
cmpsb
jno
sahf
jp
or
nop
pop
shl
dec
ja
pusha
mov
lcall
pop
cli
sub
addr16
cmc
in
and
ss
lods
jmp
fmulp
pop
mov
std
jg
pop
xor
jge
add
sbb
xchg
imul
and
sbb
jne
mov
fsubr
rorl
fdivr
adc
int
aam
shr
jmp
push
inc
loope
data16
les
sub
sar
push
incb
mov
pop
xchg
ljmp
xor
mov
sarl
xchg
aaa
fisttps
pop
jmp
jns
mov
add
aaa
aaa
cli
ljmp
mov
xchg
mov
jmp
call
mov
int3
pop
sbb
sbb
push
out
out
call
dec
adc
cmp
cli
dec
mov
mov
or
push
int
test
ret
ret
dec
lret
ja
cmp
test
inc
repnz
pop
dec
icebp
sbb
cmp
stc
jg
push
jbe
incl
sbbb
sub
mov
ja
sahf
jmp
lahf
and
shr
sub
and
int
push
xor
inc
mov
cmpb
ja
sub
mov
sbb
fwait
test
leave
lods
fdivrp
decl
leave
cmp
ljmp
xchg
iret
sti
inc
pop
sbb
or
sbb
mov
pop
clc
cmpsb
add
jae
sub
ret
add
sar
inc
mov
mov
dec
inc
lcall
pop
loopne
repz
ret
sar
add
stos
test
das
xlat
pushl
and
mov
pop
cmp
add
sarl
repz
mov
mov
shr
add
ficoml
push
sub
aam
push
lcall
jb
cltd
mov
fwait
sbb
sub
pop
sbb
pop
out
or
xlat
aas
inc
stc
out
cmp
dec
ja
hlt
shrb
inc
cli
stos
push
xlat
jno
js
push
lcall
pop
inc
pushf
popa
push
lock
or
xchg
jne
out
sub
cmc
enter
inc
fucomip
mov
out
mov
xor
adc
das
cld
call
mov
nop
push
test
and
popa
push
inc
pop
pop
push
sbb
loope
mov
sub
ss
out
insl
sub
pop
sti
fdivp
int3
mov
jg
clc
mov
xor
jo
pop
pop
sbb
cltd
xchg
mov
pop
push
mov
dec
mov
mov
sarl
fldt
lcall
lret
jp
insl
lahf
insb
in
mov
mov
shl
push
std
sub
stos
push
sbb
aaa
sub
and
inc
dec
xor
lock
lods
iret
sarb
jmp
lahf
ljmp
push
fstpt
sbb
rcr
lahf
mov
and
in
stos
xchg
ffreep
mov
fadds
lcall
lret
push
pushfw
pusha
cmpsb
sti
pop
sub
xlat
cmp
mov
hlt
inc
sti
xor
call
cli
dec
pop
fs
test
stc
repnz
lods
mov
test
orb
pop
lret
mov
inc
mov
fistpll
incl
arpl
fucomp
pop
inc
fdivl
sub
out
sti
mov
ret
xlat
movsb
cmp
and
adc
or
mov
jp
out
outsl
mov
mov
sbb
paddw
sub
outsb
rdpmc
les
xor
cli
mov
stos
mov
cli
inc
pushl
inc
lea
cmc
lock
sub
clc
rolb
cmp
xor
lods
adc
and
xchg
fdivl
rclb
aad
sub
fdivrp
ret
jl
and
pop
lds
push
fstps
xlat
pushf
jne
pop
xlat
sbb
jg
loopne
dec
js
int3
cmc
mov
dec
cmp
cmp
push
repnz
decl
pop
mov
and
mov
test
add
outsb
sub
cs
mov
mov
push
push
hlt
pop
xchg
adc
or
rol
cmpsl
push
addl
mov
aas
fincstp
cmp
imul
gs
push
dec
incl
dec
add
xor
aaa
jp
push
inc
loop
adc
daa
stc
pop
push
mov
jmp
ljmp
test
fxch
mov
enter
mov
imul
pop
inc
add
in
xchg
in
mov
xor
ror
cmp
cld
outsl
push
or
jmp
shrb
shr
out
ds
mov
pushf
push
in
lcall
jge
xchg
bnd
sub
mov
loopne
inc
xchg
push
lcall
xchg
std
jbe
lahf
pop
icebp
push
mov
popf
les
call
cld
jg
mov
pop
jb
insb
cmpsb
fcoml
jecxz
fcomip
xchg
ljmp
mov
adc
cltd
nop
or
lcall
inc
cmc
popa
inc
lods
cmp
pop
sub
xor
lcall
sub
jl
jae
xor
sbb
xlat
mov
mov
jge
push
std
xchg
fcompl
loope
loop
repz
mov
mov
fstps
xorl
xchg
dec
mov
adc
call
sbb
std
pop
sbb
cmp
adc
mov
xchg
fdivrp
fdivs
push
jge
and
incl
sub
dec
dec
cmp
jmp
jne
frstor
scas
jns
push
cmp
cwtl
mov
decl
add
and
add
movsb
pop
jo
testb
sub
xor
lret
std
sbb
mov
data16
ljmp
or
jbe
outsb
mov
sahf
mov
mov
scas
rcrl
jg
je
stc
adc
pop
test
cld
jecxz
push
or
inc
and
pop
jl
mov
lods
out
jle
decl
mov
lods
fucomip
ljmp
fldl
jg
mov
cmp
dec
sbb
cmp
adc
inc
sti
sbb
inc
mov
mov
call
pop
lods
pop
or
ffreep
imul
call
mov
inc
hlt
and
mov
sbb
incl
xchg
out
sarl
idivl
mov
adc
inc
daa
mov
jg
decl
mov
gs
dec
xchg
add
ljmp
loope
pinsrw
cmp
bound
sarl
add
lcall
jns
dec
dec
aad
push
ss
or
xchg
jle
mov
cltd
in
inc
jle
shlb
shrl
aaa
or
mov
jmp
divb
push
stc
push
lahf
sbb
inc
mov
decb
lahf
sub
pop
loop
sbb
loope
cmp
icebp
out
insb
je
cli
mov
jle
sub
jno
pop
push
les
push
fucom
outsl
cld
mov
stos
jnp
dec
mov
dec
fisubrl
jmp
pop
leave
mov
daa
pop
pop
repnz
push
sub
ljmp
pop
js
dec
or
stos
inc
ljmp
es
jne
jbe
push
sahf
xchg
stc
mov
outsl
or
dec
jl
testb
push
bound
ljmp
movsl
into
lcall
sbb
lods
or
mov
mov
out
test
decb
outsl
jnp
or
xchg
push
stc
dec
idiv
lcall
fcmovbe
pushf
xor
push
sbb
leave
cwtl
lcall
add
pop
das
jp
lods
je
pop
out
data16
mov
decl
mov
adc
fwait
shr
mov
roll
add
lea
add
inc
divb
jg
rcl
loope
repnz
mov
xor
pusha
daa
icebp
rcrb
outsb
andb
incl
fcmovnbe
and
dec
sti
mov
sub
imul
ret
imul
idiv
jmp
add
mov
mov
or
enter
pop
jl
add
fwait
pusha
or
inc
out
incl
cmpsb
cmp
jecxz
xchg
mov
fbld
jbe
xlat
mov
xchg
mov
call
mov
pushf
adc
lods
sub
sti
scas
push
xor
call
mov
xchg
jg
out
fdivrs
mov
pop
xchg
mov
stos
int3
xchg
sbb
pop
clc
jmp
js
cli
iret
test
xchg
cmc
mov
or
decl
cs
push
pop
in
ds
adc
or
jnp
mov
sahf
mov
lcall
lcall
pop
aam
and
or
push
sbb
cltd
bound
pop
dec
push
in
movsl
pop
das
add
insb
aas
test
xchg
aaa
out
sti
shl
inc
icebp
jo
imul
das
or
jb
xor
mov
scas
inc
divb
movsb
xchg
jno
loopne
sahf
add
fldenv
or
test
sbb
push
mov
lds
mov
cmp
xchg
sub
ss
lcall
mov
adc
js
dec
mov
xchg
push
jl
or
popf
pushl
mov
dec
mov
ret
leave
jae
rolb
xchg
outsb
pop
incl
fsubl
push
shrl
jge
imul
dec
call
lds
pop
js
dec
xor
out
sti
lods
xor
mov
sahf
inc
mov
cmp
inc
xchg
mov
dec
or
lcall
incl
dec
imul
daa
frstor
and
or
xlat
or
inc
outsl
xchg
cli
outsl
movlps
mov
popa
cmp
ret
ljmp
lods
mov
dec
test
jbe
adc
ficompl
push
js
mov
pusha
arpl
pop
repz
std
jo
cmpsb
arpl
arpl
adc
jmp
mov
fwait
ljmp
xor
mov
enter
jl
clc
test
int
jg
jmp
es
sbb
mov
lldt
incl
inc
mov
cmp
jl
loop
pusha
push
mov
outsb
xchg
lcall
mov
in
movsl
or
sub
xchg
scas
sbb
shrl
cmp
fwait
jno
jmp
pop
dec
inc
cvttps2pi
push
aaa
loop
lahf
xor
popa
mov
std
call
dec
cld
aad
mov
stos
pushf
lcall
test
push
inc
sub
clc
push
test
adc
push
fildl
push
stos
hlt
scas
dec
call
clc
das
fisubrl
cs
and
or
loop
jge
mov
stos
xchg
or
sbb
jmp
or
xchg
mov
jge
mov
and
pop
in
mov
hlt
push
jmp
jg
cld
rolb
inc
add
repnz
push
xchg
and
in
xor
mov
mov
push
or
mov
fwait
jmp
out
and
xor
lock
call
inc
or
and
dec
push
inc
in
sub
lret
push
mov
flds
cmp
stos
mov
std
mov
pop
pop
or
jo
pop
movsb
test
mov
mov
das
push
cld
decl
shrb
sarb
stos
imul
dec
inc
cmp
mov
mov
ret
lcall
push
fsubs
lret
or
add
lcall
xor
les
out
mov
mov
add
nop
pop
divl
sub
mov
jl
mov
jg
call
pop
xlat
imul
jmp
xchg
lcall
add
and
mov
mov
aam
mov
dec
xor
fnstsw
mov
aam
push
cmpsb
in
fwait
mov
adc
gs
incl
add
dec
mov
imul
cmc
in
das
xchg
loopne
inc
test
or
dec
push
pop
stos
jmp
mov
cmp
and
lods
xchg
cmpb
lret
sbb
jg
lcall
loop
sbb
sbb
ljmp
xlat
ret
pop
rolb
xchg
push
addb
fnsave
pop
or
fisttpl
das
movsl
mov
jecxz
mov
push
mov
mov
mov
pushf
xor
testl
daa
mov
sbb
jns
orb
add
cmpsb
cltd
jno
push
jnp
cmp
jg
mov
mov
pop
shl
lea
int3
dec
push
fidivs
movsb
into
jae
imul
mov
mov
call
add
pop
loopne
and
dec
mov
pop
rcr
lcall
std
into
cli
ficompl
inc
sub
cmp
cmp
rep
js
std
xchg
roll
incl
loopne
shll
movsb
test
and
gs
add
pop
xor
jg
mov
sar
call
and
mov
push
pop
or
fidivl
add
loopne
dec
std
push
stos
lock
mov
mov
xchg
cmp
or
in
dec
pop
call
decl
pop
cmp
hlt
mov
icebp
movsb
xchg
outsb
aaa
push
push
leave
repz
pusha
xchg
ljmp
incl
decb
sahf
fistpll
sbb
or
popf
cmp
mov
ljmp
push
and
mov
or
movsl
arpl
decl
pop
scas
clc
addr16
xchg
in
out
and
adc
icebp
cwtl
icebp
test
mov
xchg
enter
stc
pop
jp
das
jl
outsl
adc
in
sub
mov
xor
jp
lcall
jp
dec
out
ret
mov
jle
in
and
incb
mov
je
jg
mov
cmp
int3
push
cli
dec
inc
pop
nop
add
into
jp
cmp
sub
jg
jg
popa
jb
out
sbb
inc
jae
jnp
dec
cmp
test
popf
bound
mov
cmc
mov
mov
dec
inc
mov
decl
fstpt
and
sub
and
ljmp
sbb
outsb
push
mov
sub
push
addr16
jb
imull
jge
inc
sub
call
pop
cld
loop
cmpsb
pop
sbb
aam
push
loopne
js
adc
fs
pop
nop
jecxz
push
cld
lcall
ja
and
scas
push
pusha
in
mov
mov
jno
cltd
xor
icebp
lcall
test
push
dec
sahf
cmpsb
aas
and
imul
pop
enter
mov
cmc
fildl
fstp
push
mov
mov
dec
repnz
push
pop
clc
decl
ss
cmp
pusha
add
fs
dec
shl
xchg
cmpsl
enter
jbe
fmuls
mov
jnp
mov
mov
call
jg
stos
xchg
and
lds
inc
je
push
popa
fadd
xor
mov
xchg
aaa
clc
pushl
mov
dec
insb
and
popf
sub
mov
pop
inc
cmpsb
leave
mov
jg
add
pop
ss
sbb
fcomps
cmp
repnz
das
dec
pushf
mov
ljmp
icebp
mov
mov
stc
lret
mov
insb
jp
int3
inc
jo
push
incl
fcoml
cmpsl
or
adc
aad
and
ljmp
daa
out
lods
mov
pusha
out
and
stos
call
cmp
ret
or
sti
add
pop
fwait
enter
add
mov
jmp
inc
aad
pop
test
xchg
insl
sbb
mov
popf
push
jmp
ljmp
fwait
jl
push
sbb
lea
in
fstpt
psadbw
aas
popf
scas
xlat
pusha
adc
adc
and
add
mov
popa
dec
add
fidivl
cli
lcall
stc
in
xchg
add
lahf
adc
popa
mov
jge
mov
sbb
push
xlat
cmpsb
push
mov
xchg
mov
dec
popf
cmp
std
xchg
and
cmp
mov
ljmp
pop
sti
cmpsl
sbb
mov
pop
scas
sahf
pop
test
in
sub
fsubs
dec
cli
pusha
sahf
shll
arpl
mov
es
fiaddl
xor
mov
dec
cmc
inc
jecxz
xlat
cmp
into
xchg
jg
dec
or
shll
ss
lcall
jge
fisubrl
int3
xchg
in
ljmp
hlt
jle
enter
mov
test
fiadds
xchg
sub
call
inc
lcall
xchg
xlat
pop
inc
mov
sub
pop
xchg
cmp
sbb
jg,pt
pushl
inc
icebp
sub
test
js
in
imul
push
add
call
xchg
push
aas
dec
jecxz
add
xor
fistpl
jle
std
lcall
xor
inc
test
lret
jb
sbb
xchg
sub
sbb
mov
jo
mov
adc
imul
daa
mov
xlat
pushl
adc
sbb
pop
and
mov
push
shlb
ja
test
std
push
pop
cmp
push
outsb
outsb
std
lcall
cmp
cltd
out
pop
jp
dec
popa
mov
ret
mov
je
push
test
outsl
test
cld
iret
cmp
mov
push
std
es
push
cmp
push
stos
gs
dec
test
dec
dec
mov
mov
data16
xchg
cli
clc
in
push
gs
cmpsl
push
pop
sub
push
mov
rcr
leave
mov
decl
fnstsw
imul
repnz
adc
ja
out
leave
xchg
or
or
lock
decl
jl
lock
pop
es
mov
dec
dec
xchg
fstpl
ljmp
iret
es
cmc
imul
push
xchg
jecxz
push
arpl
outsb
pop
adcb
dec
fs
pop
lcall
xchg
clc
decl
roll
nop
int3
lret
mov
outsl
xor
loopne
cli
dec
jp
pop
mov
jmp
pushl
or
xor
jle
out
and
js
mov
aad
incl
add
cwtl
lods
mov
adc
jo
jecxz
loope
jnp
incl
sub
dec
fisubrs
mov
outsl
popa
scas
adc
imul
je
jo
inc
mov
test
pushl
leave
lods
lret
adc
push
mov
cs
pushl
jmp
jns
mov
lds
push
mov
dec
ds
into
and
pop
std
call
xchg
xor
and
insl
decl
mov
test
pop
mov
mov
dec
dec
out
fisubs
mov
test
shrd
mov
xor
mov
inc
mov
sti
into
pusha
dec
in
adc
mov
push
mov
pushf
cs
in
in
sub
inc
and
cmp
enter
jbe
inc
shl
cmpb
cmp
decl
fildll
fwait
mov
stos
jbe
pop
dec
adc
inc
jnp
lcall
ja
xchg
lock
clc
jecxz
xor
xor
jg
inc
ret
jb
mov
pop
jbe
pushf
dec
ja
adc
xor
fldenv
adc
inc
lcall
incb
shll
scas
pop
cmpl
call
mov
jno
lods
nop
dec
and
jp
xor
push
sbb
call
inc
sbb
ret
arpl
das
or
outsl
adc
inc
test
call
jmp
fcomps
movsb
xchg
out
adc
push
xor
lock
mov
jmp
call
xchg
sbb
addps
xchg
jg
mov
cmc
scas
movsl
pushf
mov
jge
fldl
mov
lcall
negl
cmpb
push
icebp
bound
fnstenv
fxch
std
mov
push
ljmp
xor
gs
ljmp
decb
sbb
iret
sub
out
xchg
aaa
push
push
xchg
mov
mov
mov
out
out
rcll
scas
sub
imul
lods
mov
insl
adc
push
fstl
ret
mov
pop
jne
hlt
mov
adc
mov
ljmp
mov
inc
testl
add
mov
jmp
cmp
lods
jle
add
inc
cltd
mov
rcr
int
pop
fbld
in
hlt
mov
call
adc
aam
and
cld
ljmp
andl
inc
in
push
hlt
ss
call
call
inc
pop
push
movsb
sahf
cmp
in
nop
push
jmp
movsl
xor
stos
scas
adc
fdivp
dec
add
fistpll
push
incl
inc
dec
insl
pop
push
sti
insl
call
les
pop
subl
mov
and
adc
jmp
sbbb
push
jg
or
lahf
cli
cwtl
adc
loope
inc
and
xchg
mov
xor
stos
sbb
imul
inc
or
icebp
cmp
loopne
push
das
lock
and
int
out
xor
push
xchg
test
adc
mov
cmc
cli
adc
dec
insb
xor
sub
retw
xor
add
cmp
pushl
fldt
dec
sbb
cmpsb
fs
out
int3
push
fsts
or
jg
movsb
or
jp
out
jno
je
xchg
add
pushl
add
repnz
and
bound
mov
jmp
decl
aam
and
mov
inc
ret
xor
std
lcall
std
int3
pop
fnstcw
jae
sbb
rcrl
jge
stc
push
hlt
cmc
cmp
idiv
outsl
lock
mov
inc
int
cmp
or
xor
decl
pop
mov
or
repnz
mov
mov
inc
call
mov
mov
ja
or
dec
outsb
sbb
jae
push
loope
rorb
bound
test
decl
inc
ret
pop
fcmovnbe
outsl
rcl
fstl
fisttpl
jg
cmpsb
jns
cli
pop
push
or
insb
mov
pop
mov
inc
ja
sbb
mov
and
test
mov
push
or
inc
fldenv
mov
ficompl
cmpsl
nop
mov
sub
xor
add
mov
aaa
insl
adc
lcall
ja
test
sti
in
dec
cmp
pop
loopne
push
dec
loop
push
xchg
dec
jmp
into
mov
cltd
dec
mov
pcmpeqw
jg
lds
sub
in
pop
mov
add
fldl
push
lcall
mov
sbb
mov
mulb
push
rol
idivl
jg
jmp
jae
icebp
imul
loope
push
out
xchg
aas
lahf
dec
inc
or
pop
mov
ret
ljmp
in
lods
push
clc
movsl
cmp
leave
imul
pushl
inc
pop
rcll
dec
dec
sarb
jmp
scas
adc
pop
push
and
sub
stos
call
sub
lcall
xlat
andnps
aad
fstps
orb
jmp
lods
stos
inc
ret
jg
xchg
add
sub
add
loopne
call
sub
jnp
daa
repnz
mov
stos
or
xchg
jo
faddl
push
orl
incl
fsubrl
icebp
dec
sarl
push
js
es
repnz
cmp
jg
jmp
icebp
dec
jge
mov
out
mov
scas
jmp
cmc
push
inc
loope
imul
cs
jg
outsl
aaa
clc
call
add
push
push
repz
addr16
je
add
mov
dec
pop
sbb
mov
into
insb
mov
fisttps
decl
loope
mov
cli
sub
fs
iret
sub
jg
push
fidivs
sub
inc
mov
jg
jg
mov
add
mov
je
in
test
loopne
outsl
cld
pop
adc
fwait
mov
loopne
je
dec
cmp
ret
inc
vmaxsd
je
push
out
daa
or
mov
dec
insl
icebp
dec
insb
cmp
jl
filds
jg
xor
and
xchg
push
cmp
lret
pop
sub
je
aaa
ret
lock
inc
or
and
fldt
imul
inc
mov
lea
and
jb
inc
mov
jge
insb
adc
nop
add
arpl
dec
mov
ret
decl
call
repnz
jl
mov
outsl
sbb
rcl
movsb
mov
mov
scas
mov
ljmp
cmc
cmp
or
cmp
loopne
stc
or
ficompl
mov
pushl
push
xlat
data16
les
mov
sbb
cli
rcrb
pop
std
pushl
or
gs
xchg
dec
jnp
jmp
xchg
push
and
adc
loope
mov
fucomi
scas
push
jl
in
sub
add
ljmp
lcall
shrl
jns
ds
lea
mov
and
imul
mov
in
lcall
push
pop
popf
dec
xchg
and
dec
jae
dec
dec
bound
in
cmp
das
std
cmpsl
and
xchg
int
mov
out
jg
push
ljmp
sti
enter
lahf
cmp
aam
enter
ljmp
push
lahf
add
inc
cmp
test
popf
inc
lcall
call
mov
rcll
cmp
xor
mov
cld
aaa
pop
repz
dec
or
ljmp
leave
jnp
and
sbb
inc
incb
sub
shl
lds
sti
dec
sar
sti
xor
jb
and
dec
inc
add
inc
adc
sub
push
jge
rol
jg
and
out
mov
outsb
gs
xor
mov
loopne
jmp
lcall
xchg
loop
popf
das
in
push
or
cld
xchg
mov
fs
pusha
incl
lcall
movsl
inc
push
in
cli
jle
jge
ja
lea
xchg
dec
ljmp
or
jmp
mov
lods
or
movsl
add
sub
aas
push
sub
lock
call
mov
ljmp
mov
repnz
iret
jg
ljmp
xchg
sbb
add
sub
mov
dec
push
xchg
dec
and
ljmp
adc
mov
pop
pop
iret
movsl
inc
push
jns
je
test
fisubrl
aad
jle
subb
lcall
add
sbb
movsl
jns
inc
adc
dec
enter
rclb
leave
incl
ss
cmpb
jp
inc
fisttpll
cmpl
repz
aam
mov
lds
lcall
andb
sbb
pushf
insl
cmp
insb
ljmp
inc
and
pusha
add
std
pusha
cmp
nop
addr16
pop
mov
js
repnz
adc
add
xchg
inc
cli
cltd
std
ffreep
mov
mov
in
lock
mov
ljmp
hlt
xor
sbb
in
xchg
std
icebp
mov
inc
xchg
sub
das
and
hlt
or
inc
or
pop
push
data16
or
cltd
outsb
xor
ljmp
push
and
jo
pop
push
mov
fcomp
push
ret
adc
mov
outsl
in
pop
int3
cmc
cmc
fbstp
cld
call
cmpsl
les
mov
push
leave
push
lret
decl
push
sub
cmp
ss
lea
mov
cli
ljmp
cmp
mov
inc
push
mov
imul
mov
mov
fistps
movsl
or
or
mov
mov
lret
cmpsl
in
xchg
xchg
inc
inc
pop
push
sub
ficomps
inc
int3
loopne
xchg
push
cmp
jns
pop
inc
or
lods
lock
add
jg
add
cmp
adc
ja
test
and
mov
incl
pushl
mov
jno
lret
pop
inc
cmpsl
lcall
out
cli
outsl
cmc
mov
mov
pop
out
dec
pop
shrb
test
lcall
stos
fwait
adc
jl
aaa
cmp
in
mov
jl
push
or
inc
mov
nop
or
in
popa
adc
sbb
call
jmp
sbb
pop
aas
inc
pusha
push
jnp
adc
out
sub
mov
lock
jbe
test
clc
decl
std
sahf
xchg
loopne
jmp
in
sbb
scas
and
out
pushf
incl
test
shrl
notb
sbb
cld
dec
adc
call
mov
pushl
enter
or
push
icebp
jb
int3
add
mov
decl
mov
dec
inc
pop
pop
test
fnsave
cmp
adc
incl
addr16
push
add
jle
push
adc
sbb
rcrl
xchg
sub
jmp
in
jge
mov
lods
test
xor
mov
iret
pop
outsl
pop
pop
ljmp
lods
in
xor
cmc
xor
cld
mov
lcall
jl
imul
popa
and
ja
pushf
arpl
jmp
sbb
pop
idivb
and
dec
jg
cmp
test
add
jb
mov
inc
call
adc
mov
xchg
fiadds
add
xchg
xor
cmp
call
shll
sub
cmp
xor
mov
pop
jle
adc
add
jmp
imul
scas
or
jmp
icebp
inc
aad
cmpsl
iret
cwtl
xchg
xor
out
pushf
rep
adc
rcr
cmp
shlb
hlt
inc
decl
outsb
jecxz
inc
rcll
es
dec
outsl
cmp
mov
arpl
pop
cmp
ljmp
sbbl
cld
test
jno
pop
dec
pop
inc
clc
pushl
add
loop
or
and
inc
push
lods
popf
and
test
mov
aas
insb
sbb
mov
pop
sti
std
imul
jecxz
je
mov
ficomps
ja
test
ss
rolb
or
fdiv
push
inc
mov
mov
loopne
testb
push
jge
mov
ljmp
das
dec
gs
bound
inc
cmpl
push
cmc
sub
add
adc
fcoml
xchg
ret
adc
mov
push
lahf
roll
mov
sub
sbb
and
inc
sbb
stos
mov
mov
into
or
ja
cwtl
adc
add
outsl
cmp
into
mov
es
ljmp
shll
xor
add
adc
or
fsub
dec
and
aas
mov
lea
dec
pop
or
push
lret
outsl
pop
daa
push
sub
insl
and
cmpsb
mov
lcall
and
or
sbb
jns
mov
jle
pop
mov
jbe
pop
pop
lock
pushl
dec
flds
jo
add
sbbl
and
or
mov
ljmp
add
pop
into
test
mov
clc
mov
jmp
jmp
ja
out
call
call
js
push
fwait
inc
mov
outsb
fmull
arpl
dec
add
push
adc
sub
test
xor
movsb
push
insl
arpl
push
sbb
push
push
lods
jmp
cmp
loope
mov
fimuls
push
ja
decl
je
mov
repz
xchg
jge
das
lods
inc
iret
scas
pop
fwait
lcall
jge
es
lret
jecxz
stos
add
mov
lcall
dec
and
xor
cmc
daa
push
pop
cmp
fidivs
xchg
in
adc
push
jo
loopne
frstor
loope
loop
pop
add
jmp
adc
add
mov
cld
dec
add
incl
jb
aad
or
mov
fwait
pop
mov
jg
movsl
mov
adc
test
test
in
lcall
jg
shlb
xor
or
fisubl
jmp
inc
cmp
ret
jg
ja
dec
adc
cmp
ljmp
int3
outsl
xchg
incl
decl
jno
push
xlat
push
cmp
roll
fcmovnbe
xor
fdivr
jmp
sahf
cs
sbb
repz
cmpsl
mov
cmp
dec
or
push
jae
and
ljmp
out
mov
pop
call
pop
lods
sarl
jnp
mov
and
and
ret
das
inc
cmp
lcall
inc
adc
popf
pop
inc
push
sub
adc
rcl
aas
jg
jg
jno
add
call
pop
cli
mov
scas
scas
arpl
cmp
aas
xor
icebp
decl
jns
daa
bound
fwait
test
xor
cmp
push
inc
stc
xor
and
sub
pop
cmp
pop
std
mov
bound
xor
incl
jno
mov
int3
mov
lea
fdivp
dec
mov
mov
clc
push
mov
cld
rolb
xor
mov
jle
clc
push
cld
inc
mov
insl
pushl
rol
nop
mov
push
mov
decl
jne
push
sahf
pop
stos
ret
add
in
addl
xchg
cmp
incl
das
or
and
add
lahf
mov
out
fld
and
xchg
rolb
imul
sbb
mov
sub
leave
sbb
push
ljmp
clc
adc
xor
jo
xor
sbb
lcall
hlt
push
andb
and
pop
push
gs
or
pop
xor
sahf
ljmp
mov
in
stos
aaa
adc
in
sbb
or
fbld
and
dec
incl
clc
loope
sub
push
adc
movsb
into
xlat
movsl
addr16
fildll
or
shlb
mov
out
sub
or
cmp
popa
repnz
test
int
decl
jl
push
jl
xchg
push
stc
loop
cmpsb
jp
jecxz
fisubrs
repnz
movsl
ljmp
mov
fnsave
mov
mov
imul
jbe
imul
filds
les
dec
loope
and
xchg
decl
pop
add
adc
mov
push
adc
addl
or
xchg
out
ret
ja
mov
sbb
xchg
lahf
popa
repnz
dec
sbb
xchg
add
fnstcw
mov
lods
call
jle,pt
lea
xchg
xchg
xchg
mov
add
jg
adc
lds
cmp
test
jno
outsb
sahf
cmp
ljmp
pop
mov
jno
lea
dec
cmpsb
aad
sbb
test
in
jg
aad
mov
je
sub
cmpsl
aad
pop
dec
fwait
subl
clc
aaa
push
mov
lahf
iret
and
movsb
gs
das
cmpsl
ljmp
adc
jmp
repz
shll
call
jmp
popa
dec
ljmp
out
dec
mov
ja
xchg
fcmovb
xchg
cmp
outsl
lock
xlat
xorl
fnsave
pop
jae
scas
pop
decl
jg
xchg
pushl
les
fdivp
cltd
cmpsb
pop
xor
inc
popf
lds
rcll
incl
pushf
insb
pop
push
mov
dec
dec
add
or
jmp
and
adc
cli
mov
fwait
sbb
pop
scas
das
gs
ret
stos
loop
pop
jne
pop
popf
ud0
dec
jne
adc
movsl
div
outsl
jno
adcl
icebp
xchg
loop
cmp
lods
xor
pop
ljmp
js
cmpsb
and
push
and
xchg
mov
arpl
fucom
pop
lcall
cmpsl
sbb
stc
cmp
jl
push
shl
jg
test
imul
adc
lea
sub
jae
ret
shlb
filds
cmc
pop
out
dec
xchg
and
jp
push
and
cld
loope
clc
fcomps
fidivrs
mov
adc
into
xor
cmpsl
arpl
cwtl
mov
and
int
sarl
das
int3
decl
mov
push
pusha
pop
sarl
dec
aam
daa
mov
loop
pop
push
ljmp
mov
leave
and
and
in
ljmp
cmp
lahf
push
fdivl
mov
jno
ljmp
inc
in
addr16
push
adcl
fsts
dec
lcall
lock
inc
sub
imul
shlb
add
and
int
mov
std
incl
and
ror
or
outsl
jb
push
loop
rsm
push
mov
mov
ret
fisubrl
add
sahf
add
mov
stos
mov
ljmp
movsb
dec
and
icebp
incl
dec
jns
adc
popf
stos
jmp
lea
stc
mov
mov
mov
es
pop
and
insb
mov
jg
orl
repz
lds
adc
aas
enter
jg
insl
xor
inc
jno
dec
mov
mov
ljmp
push
push
sti
jb
out
mov
cmp
mov
sub
lcall
je
xor
mov
cmp
lret
mov
mov
dec
cld
call
jmp
xchg
cmp
test
stos
incl
ljmp
movsb
lock
sub
adc
scas
xor
cs
mov
cmp
ss
jge
jge
mov
pop
shl
push
arpl
add
cmp
popa
test
or
mov
mov
cmp
xorl
fcomps
orb
stos
cltd
out
adc
xchg
and
push
pop
outsl
add
call
sub
stos
mov
stos
lods
dec
iret
push
xlat
stos
push
fcompl
pusha
mov
pop
mov
mov
lods
sub
cmc
push
mov
leave
adc
mov
xor
jp
pop
pop
push
xor
pop
flds
lcall
cmp
jl
popa
jg
arpl
lcall
mov
fcompl
and
das
pop
or
or
fldenv
leave
js
pop
mov
call
call
push
adc
jb
xchg
into
enter
loopne
xchg
mov
and
push
lods
out
cli
ds
adc
sub
pushl
shll
movsl
stc
adc
popa
les
xchg
or
push
xlat
and
insb
int
lahf
out
shrb
cmp
enter
movsl
rol
mov
mov
dec
push
leave
mov
sti
mov
and
lcall
std
add
ljmp
ja
lods
loope
xor
push
nop
sar
pop
mov
xchg
fld
mov
ret
repz
xor
mov
xchg
pop
pushl
mov
sbb
das
dec
push
xchg
aam
jo
lret
icebp
jmp
jmp
sub
stos
mov
je
das
shrl
mov
ljmp
inc
add
cmp
sub
rcrl
xchg
push
dec
mov
gs
ljmp
cmpsl
push
add
xchg
outsl
call
in
lods
jo
xchg
mov
stos
lods
incl
dec
cmpsb
pop
adc
dec
ret
in
or
pushl
ret
mov
aam
lods
lret
das
test
ja
pop
dec
pop
jecxz
ljmp
xchg
adcb
push
sub
jg
and
sbb
push
inc
in
push
ret
push
pop
stos
jge
or
enter
mov
dec
ret
ljmp
cmc
lcall
shll
and
sub
sahf
jb
push
in
aaa
clc
outsl
std
xchg
lock
addr16
jl
mov
jnp
fsubs
jb
movsl
jmp
or
int
cmp
mov
xchg
sbb
or
and
ljmp
inc
int3
push
xor
les
jbe
push
and
jg
aas
dec
push
add
mov
lcall
loopne
push
out
pmulhuw
pushf
cmpl
xor
lods
jnp
movsb
mov
jbe
and
sti
in
mov
popa
out
dec
inc
fstps
repz
repz
enter
repnz
repz
jg
and
jne
mov
fcomps
scas
mov
cmp
test
ds
repnz
ss
push
fisttpl
dec
out
clc
out
hlt
iret
repz
jmp
fsubp
mov
pop
jo
dec
gs
cmp
call
push
ljmp
push
and
dec
sbb
movsl
xor
xchg
sub
adc
mov
in
push
iret
cli
mov
hlt
imul
neg
mov
sbb
lcall
mov
jmp
in
movsb
sub
enter
or
sahf
sub
decl
fmull
sub
sahf
xlat
ja
or
pushf
and
cld
sbb
jb
push
icebp
lods
push
pusha
dec
jg
mov
ljmp
or
pop
insb
rorb
test
lods
scas
jnp
jecxz
dec
cmpsl
sub
inc
mov
or
aaa
cmc
lret
pop
mov
js
es
clc
jecxz
repnz
xchg
pop
push
sbb
or
lods
mov
jle
outsl
adc
movsl
dec
testb
loopne
cmp
daa
pop
out
mov
jmp
icebp
je
pop
in
lret
imulb
cmp
into
or
mov
xchg
and
and
cs
lock
mov
pop
dec
jge
in
mov
outsb
mov
mov
mov
decl
jnp
xchg
adc
ds
xlat
push
pop
adc
scas
and
jno
ljmp
add
js
mov
into
test
cmp
dec
lcall
decl
cld
lcall
enter
xor
jns
mov
fucomip
ret
jb
push
adc
test
mov
cmp
or
loop
test
adc
aas
outsl
xchg
mov
scas
andl
scas
inc
cmp
cmpsl
addr16
pop
ljmp
hlt
dec
or
add
mov
mov
cmpsb
movhps
inc
shrb
mov
int3
pop
dec
mov
mov
and
mov
ds
and
xchg
jbe
mov
adc
subl
mov
std
cltd
fwait
mov
sub
cmpsb
data16
pop
mov
adc
push
lods
pushf
int
ret
add
setle
das
lock
jp
ret
roll
loopne
inc
push
inc
lock
fnstsw
inc
imul
test
mov
fsubrl
mov
and
ljmp
out
nop
orl
mov
fcoms
or
cs
xchg
test
cmp
jg
ret
jae
ret
mov
repnz
lret
jo
ljmp
mov
or
jp
xor
cwtl
adc
scas
jne
mov
incl
cmp
mov
rcrb
mov
xlat
xor
out
test
pushf
imul
fstpl
pushl
push
cmc
pop
sbb
mov
mov
xchg
push
out
cli
repnz
ljmp
pop
insb
ret
stos
iret
mov
outsl
imul
popf
xchg
fimull
inc
sub
jmp
adc
dec
popf
xchg
jbe
jns
aam
mov
das
mov
pop
pop
adc
inc
cmp
jbe
in
imul
nop
mov
jnp
pop
rol
aaa
cs
jg
inc
dec
fbld
bound
mov
insl
pushf
out
mov
add
xchg
fwait
popa
out
mov
cltd
lea
lret
insl
mov
lret
pop
or
mov
mov
or
or
inc
xchg
mov
call
xor
xchg
mov
xor
lcall
mov
dec
sbb
lret
xchg
mov
icebp
nop
pusha
jg
adc
sbb
fldln2
sub
repz
sbb
std
fdecstp
pop
push
decl
jno
in
gs
sbb
dec
mov
cmp
enter
push
outsb
lcall
andb
mov
inc
add
mov
clc
jae
icebp
cs
lcall
push
add
incl
push
mov
mov
mov
lock
and
arpl
jmp
inc
sarb
jg
xor
fsubr
int
sbb
xchg
mov
xor
jbe
fsubrs
jmp
xchg
popf
xchg
dec
stc
and
cs
jge
loopne
mov
lret
jmp
add
xor
add
shll
call
insb
sti
out
fldl
jbe
push
xchg
and
imul
adc
insb
push
decl
decl
mov
add
push
push
ret
pop
call
lret
add
dec
adc
sbb
ljmp
push
adc
inc
sub
add
lcall
loopne
out
xchg
jo
in
pop
mov
push
mov
out
lret
jbe
xchg
jmp
dec
fildll
mov
out
fmuls
cltd
xor
sbb
push
sar
pop
mov
mov
dec
movsb
pop
cli
mov
sarb
out
fistpll
cmc
pop
jnp
jl
cmpl
aaa
cmpsb
shrl
rorl
lds
int3
cmp
add
lret
ljmp
mov
es
lcall
pusha
add
addb
mov
imul
test
mov
test
int3
jg
call
xchg
mov
xor
cmp
sbb
mov
jg
jnp
ljmp
sbb
fldenv
ret
bound
pop
movl
sub
jmp
mov
mov
fildll
hlt
enter
lods
fwait
xorb
fwait
fwait
cltd
sti
mov
stos
and
inc
cmp
and
add
fs
jno
pop
cli
jg
test
fildl
iret
mov
mov
sbb
ret
jg
xchg
jne
jg
jmp
pop
xchg
in
cmp
pushf
cmp
xor
push
pop
roll
sar
movsb
test
negb
test
inc
push
mov
xchg
dec
ret
pop
cmpl
mov
ljmp
in
push
mov
test
jg
xchg
leave
pushl
ret
xor
insb
repz
scas
fs
outsl
and
sub
out
push
lock
mov
lret
mov
jmp
inc
pop
xchg
aad
cwtl
in
iret
xor
dec
fwait
sar
cmc
fnstsw
lods
push
dec
cli
adc
xchg
loopne
push
test
in
testb
jmp
mov
in
and
adc
and
jno
stc
push
inc
pcmpgtd
stc
push
adc
and
bound
sub
inc
cmovl
enter
and
mov
cmp
ja
push
lcall
flds
xchg
sub
xchg
xchg
outsb
shr
call
add
in
enter
cmpsl
sub
lahf
mov
adcb
xchg
and
bound
pushl
add
incl
out
fwait
xorb
mov
or
fnstsw
jmp
loope
pop
sbb
mov
ds
mov
add
add
push
into
xlat
or
push
mov
pop
mov
shrb
push
push
inc
aad
lea
sahf
adc
sbb
fnsave
decl
sub
or
push
mov
lds
stos
sti
sar
incl
mov
popf
push
pop
outsb
or
pop
or
or
ja
fadd
mov
jecxz
or
loop
call
xchg
and
jmp
mov
call
aas
aas
jge
pop
test
pop
jmp
sar
lahf
cltd
jle
xchg
mov
push
stos
mov
sub
sbb
call
hlt
popa
mov
daa
jg
test
movsb
xchg
cmp
decl
repz
sbb
sub
scas
das
sub
addl
cli
cmp
enter
adcl
imul
pop
sbb
inc
adc
mov
dec
pop
popf
popl
push
cmp
jp
jle
add
lcall
rolb
incl
adc
popa
adcb
jmp
push
or
mov
inc
aam
fincstp
popf
xchg
and
mov
sub
rclb
sbb
pusha
movsb
adc
push
and
xor
mov
jmp
pop
mov
movsl
inc
ljmp
lock
and
mov
bound
lock
pop
call
ljmp
or
xchg
in
pop
xchg
jae
int
mov
nop
push
pop
imul
jne
add
aad
xchg
or
outsb
fnstenv
jmp
aaa
mov
jmp
les
mov
call
aam
lea
jg
daa
sub
xlat
in
and
inc
and
mov
push
data16
xor
fld
das
cmc
incl
sub
sti
and
cwtl
pop
mov
negl
scas
pop
roll
ljmp
ficoml
push
mov
insb
clc
xchg
inc
jl
std
mov
mov
notl
hlt
sti
jl
sbb
fdiv
lret
test
loop
xchg
outsb
je
into
add
lret
ljmp
dec
sub
test
retw
lock
pusha
clc
mov
decl
icebp
jmp
mov
mov
loopne
xchg
mov
and
dec
sti
jns
in
sbbb
shrl
rorb
stos
lcall
dec
ret
lock
stos
cwtl
push
inc
mov
subl
in
or
incl
lock
jge
in
add
div
push
cmp
adc
push
pop
sub
mov
imulb
sbb
aas
jno
insb
subl
fwait
push
push
inc
pop
shr
lcall
jmp
push
jge
mov
out
mov
mov
arpl
mov
sbb
xchg
cwtl
cmp
int3
adc
out
scas
inc
push
dec
cmc
jl
fsubr
aas
outsb
sub
or
mov
cmc
ljmp
push
xchg
fs
sbb
mov
pop
mov
jmp
jno
mov
lea
inc
sub
dec
pop
dec
cmp
sti
push
mov
dec
xchg
clc
aaa
cli
pop
add
call
sub
aam
xchg
cli
ljmp
lock
inc
jg
xchg
mov
repnz
or
int3
xchg
push
lahf
fs
cwtl
push
push
mov
repnz
call
cmp
inc
cld
push
push
arpl
mov
shll
in
pop
lds
test
nop
sub
dec
daa
mov
test
or
adc
ljmp
ss
mov
xor
cmp
loope
jge
sti
push
jmp
clc
aam
pop
pop
je
lret
add
loope
jecxz
sub
loopne
incl
pop
xchg
hlt
test
negl
inc
push
adc
xchg
add
jmp
cmp
mov
movsl
add
mov
addl
jle
test
xchg
sub
mov
addr16
xchg
push
stos
xchg
loope
pushl
je,pt
or
test
cli
cltd
push
test
sbb
push
outsb
mov
jbe
ljmp
test
mov
dec
jae
mov
movsb
out
dec
mov
popf
popa
pushl
fistl
ficomps
aad
sbb
out
adc
sarl
sub
loopne
adc
idivl
hlt
mov
pop
scas
push
ja
mov
scas
cmpsl
subl
insb
jae
lea
mov
and
clc
ljmp
mov
out
sbb
das
sub
or
js
fmull
jmp
jge
shll
dec
test
divb
leave
aas
and
dec
add
jmp
cmp
xchg
movsb
add
ffree
add
lods
add
mov
pop
dec
outsl
std
jg
jmp
jg
rcrb
mov
outsl
cmp
es
ljmp
jnp
adc
jg
xchg
rorb
lods
push
add
incl
mov
adc
icebp
bound
adc
fldt
push
pop
inc
in
icebp
lcall
scas
pushf
lock
xchg
fstps
cli
data16
rorl
and
mov
std
das
sub
xor
cmp
bound
in
xchg
cmpsl
cs
das
adc
jae
mov
xchg
push
push
mov
fucomip
ljmp
pop
or
xor
in
mov
test
pop
inc
mov
call
lcall
loop
aam
or
popa
xor
inc
lret
shr
cwtl
fdivrp
dec
mov
scas
pop
orb
pusha
pop
je
ret
mov
add
decl
mov
sbb
jp
xchg
fdivs
cltd
xlat
nop
ljmp
jmp
sbb
clc
call
frstor
push
jl
popf
data16
add
and
push
add
or
mov
cmc
incl
mov
sub
aaa
mov
std
clc
outsb
add
add
lds
ror
adc
fiadds
outsl
pop
lods
incl
jae
into
mov
dec
loop
rclb
loope
pop
jge
mov
push
pop
and
fsts
cmpsl
lret
gs
pop
xor
xor
adc
xor
cmp
cmp
jle
decl
adc
mov
in
iret
sbb
cmp
xor
movsw
rclb
shll
sub
inc
push
add
lcall
cli
inc
gs
xlat
pop
cli
loopne
popa
mov
cld
jg
mov
fisttpll
mov
mov
add
lods
out
ss
adc
movsb
test
cmp
add
xchg
or
lcall
inc
sub
push
jg
inc
cmp
scas
xchg
fstpt
out
and
scas
add
das
cld
incl
push
sbb
repnz
push
or
arpl
shrb
push
pop
cmp
fisttpll
cmp
mov
mov
roll
dec
aam
cli
or
inc
jns
jns
rcr
pop
jbe
push
add
xor
or
adc
jle
insb
hlt
lret
inc
lcall
push
xchg
push
pushf
insl
lods
shrl
movsb
xchg
jg
pop
rcr
add
repz
js
divl
xor
jbe
bnd
xchg
cli
decl
iret
aad
mov
loope
mov
jno
test
jne
loope
clc
call
test
enter
sub
pop
add
movsl
adc
int
call
jg
mov
das
mov
jae
adc
out
add
lcall
jmp
mov
push
mov
jne
push
cwtl
call
cmc
lret
fnstsw
jnp
inc
out
sarl
xor
jge
sub
loop
shrl
mov
imul
jmp
lret
mov
lcall
xor
pop
dec
pop
sbb
clc
pop
cli
sti
mov
adc
add
mov
or
decl
mov
iret
dec
sub
pop
cli
ds
insl
mov
std
xlat
mov
sarl
daa
pushf
incb
mov
dec
call
or
loope
inc
xchg
xor
sub
call
call
add
wbinvd
scas
add
push
imul
out
psllq
adc
push
lcall
xchg
mov
aad
xchg
push
sbb
test
cmpsb
cmp
sub
add
jno
cmp
int3
push
call
xor
dec
xlat
loop
insb
lret
inc
ss
scas
jmp
hlt
arpl
xchg
jb
jg
vpcmpgtd
push
ja
fbstp
sbb
mov
or
js
and
cli
adc
mov
pop
outsb
mov
jg
mov
mov
push
dec
adc
pop
pop
shrl
aad
jbe
repz
outsl
cld
mov
insb
imul
and
add
sub
cld
enter
aam
decl
popa
and
xor
stos
and
adcb
lds
dec
test
sub
cwtl
mov
fdivs
jb
mov
lret
inc
pop
dec
xchg
aam
jg
dec
jb
add
mov
lret
int
fldenv
adcb
scas
or
add
lcall
adc
push
fsts
push
jecxz
xchg
mov
pushl
mov
iret
sahf
add
sbb
xor
jnp
sbb
icebp
dec
fnstenv
pop
mull
shll
xchg
sbb
in
lahf
imul
enter
ljmp
cli
subl
shr
and
mov
pop
and
jb
insl
jg
sbb
jmp
jl
sbb
aas
sahf
fisubrs
fucom
cmpsb
hlt
std
xorl
xor
mov
add
js
mov
dec
jmp
lret
inc
scas
outsl
xchg
fisubrs
aas
ljmp
mov
aaa
inc
sbb
dec
push
imul
jo
and
fistpll
or
cmp
bswap
movsb
push
repnz
add
lret
cltd
cmpsb
jns
mov
and
ror
js
movsb
inc
push
push
aaa
mov
lcall
push
out
js
jne
xchg
mov
or
sub
dec
out
push
xlat
add
shrb
outsb
sub
xor
pusha
test
aad
ljmp
lock
into
hlt
push
neg
iret
fxtract
add
sub
dec
and
je
push
dec
sbb
push
mov
hlt
clc
xor
mov
daa
jae
mov
leave
or
xlat
or
in
pop
adc
mov
mov
gs
and
stc
pop
mov
mov
incl
mov
mov
dec
push
sub
dec
pop
stc
or
jo
and
cli
pop
adc
shrb
adc
dec
aad
in
xor
adc
or
jmp
sbb
loope
xor
jmp
iret
and
xchg
pop
sbb
or
jg
daa
push
jg
cltd
flds
adc
fwait
sub
fisubs
vmread
mov
xchg
clc
les
jne
in
stos
std
and
outsl
lret
mov
ljmp
call
clc
push
out
mov
dec
sbb
sarb
dec
sub
mov
sub
jle
push
inc
mov
adc
mov
mov
in
aaa
hlt
jg
or
imul
out
ds
call
in
nop
mov
stos
adc
push
pop
mov
sbb
imul
add
push
xor
cmp
out
xor
xor
test
adc
push
cmp
bnd
mov
push
fstpt
sbb
ljmp
shrl
pop
in
loopne
pop
idivl
mov
pop
push
pop
push
dec
popa
int
lods
incl
fisttps
sbb
test
bound
pushf
dec
fcomps
call
cli
fbld
loop
negb
xchg
movsl
adc
push
inc
xor
adc
pop
cld
movsl
push
push
cmpsl
mov
and
mov
stc
xor
and
ds
add
ljmp
inc
inc
call
inc
xchg
push
nop
stc
push
inc
and
xlat
cmp
incl
lcall
push
or
mov
cli
and
fstl
jle,pn
cmpsl
cmc
cmp
enter
cli
clc
dec
sbb
stos
les
xor
jmp
adc
iret
jbe
sub
cli
mov
inc
and
dec
sbb
xchg
pushl
cli
decl
sub
nop
xor
stos
add
out
sbb
mov
scas
aaa
fucomip
pop
loop
mov
ljmp
outsl
dec
lods
push
jg
mov
es
push
movsl
cmc
cwtl
mov
cmpsb
add
inc
mov
fsubs
lret
jae
sbb
int3
lods
in
push
out
mov
loop
mov
scas
adc
xor
or
ljmp
dec
add
sahf
jnp
xchg
outsl
scas
cwtl
push
cmc
es
enter
incl
mov
push
fistps
add
pop
xchg
mov
jecxz
xchg
insb
fisubrl
jnp
rorb
notl
xchg
dec
cs
jl
rcll
nopl
cld
mov
dec
pusha
lods
pushf
push
aaa
inc
jg
add
sub
mov
incl
cmp
push
jo
sbb
repnz
jmp
push
push
aas
aad
test
inc
mov
inc
sahf
mov
or
xor
mov
loope
cmp
fdivrl
lods
daa
sub
lods
mov
ret
mov
pushf
inc
cmc
or
push
ss
pushl
xchg
fildll
xchg
add
les
loop
push
xchg
mull
cld
cmpsl
xchg
call
ljmp
icebp
xor
jnp
loopne
daa
stos
popa
jg
test
in
lret
add
pop
aam
lds
enter
movsb
fsubrp
mov
inc
ror
add
call
mov
lret
clc
lods
mov
mov
sub
fcmovnb
cmp
pushf
cld
clc
fldl
xor
xor
xchg
fstps
outsl
ljmp
cmp
sub
mov
cmpb
push
jae
pushl
mov
jge
popf
add
setns
mov
das
cmc
jg
in
push
aam
mov
cli
add
xchg
sbb
in
call
mov
cwtl
orl
and
xor
mov
push
xchg
jl
mov
cld
insl
or
lds
jmp
shlb
in
or
jl
mov
psubusb
dec
jl
inc
imul
jmp
dec
daa
pop
mov
sub
pop
inc
lret
jb
pusha
scas
lret
subb
mov
popf
jns
cmp
pop
mov
dec
test
mov
add
inc
xor
in
sbb
and
fidivl
mov
inc
test
mov
adc
adc
xchg
ljmp
add
jbe
xor
jb
mov
or
dec
movzbl
and
mov
movsl
imul
xor
fiadds
cltd
mov
xchg
out
xlat
cwtl
cld
popa
adc
mov
fs
scas
inc
ficoms
test
push
int
ss
inc
push
js
mov
movsb
mov
push
jg
sbb
sub
negb
mov
inc
push
outsl
hlt
incl
fisttpll
mov
pmovmskb
sbb
dec
out
icebp
fdivr
pop
loopne
cld
add
adc
xor
inc
das
div
aam
cltd
mov
aas
ljmp
and
out
call
loop
adc
test
cmp
pop
fucom
push
sbb
xor
and
or
xchg
loop
ljmp
pop
test
dec
cmp
cwtl
loop
pushf
jle
stos
negb
push
pushl
pop
repz
inc
cltd
mov
sbb
lret
pop
mov
call
mov
rorb
imul
xchg
cmpsl
push
xchg
mov
sub
incl
jmp
mov
dec
ljmp
mov
in
jecxz
xlat
ret
es
mov
jmp
adc
dec
mov
mov
cli
or
sbb
in
mov
push
decl
lods
sbb
lret
stos
lahf
aas
jnp
push
and
popa
dec
scas
movsb
imul
call
je
xchg
mov
sar
push
push
icebp
outsb
fs
fnstenv
push
inc
jb
pop
andl
mov
push
out
xchg
mov
jge
sub
xor
sub
lahf
dec
jne
pop
add
js
fists
jmp
cltd
fists
xor
int
jmp
test
mov
mov
xchg
daa
push
and
cld
jp
or
ljmp
fcoms
dec
lret
xchg
ret
enter
ret
ret
inc
insl
pusha
jmp
jmp
cmp
or
loope
scas
outsl
add
jecxz
enter
iret
outsb
jmp
ljmp
ror
push
xchg
mov
xor
lret
mov
arpl
jbe
pusha
cwtl
and
fwait
push
test
sbb
mov
stc
nop
cmp
incl
sbb
rol
xor
add
pop
adc
jg
or
loope
dec
pop
out
sbb
call
jl
jno
or
xor
ljmp
push
or
and
pop
cwtl
xchg
lods
jne
pop
scas
mov
push
push
xchg
inc
or
in
in
cld
cs
loope
jnp
rcrb
xor
mov
mov
int3
and
xor
inc
movsl
sbb
jo
incl
mov
mov
lods
sbb
mov
sbb
add
push
push
pop
int3
adc
or
cli
nop
lret
lcall
mov
pop
outsb
inc
inc
push
or
ss
and
jg
test
xchg
std
in
push
sbb
repnz
decl
jno
fs
cmp
jae
mov
mov
and
negl
dec
mov
in
cmc
push
hlt
into
repnz
pushf
mov
jmp
push
cmp
popf
movsl
mov
out
xchg
cmp
adc
cmp
jb
dec
aaa
xchg
and
adcb
rcll
popf
cmp
test
sbb
into
sub
jp
inc
popf
push
repz
sbb
sarb
xor
sar
add
jnp
dec
scas
cmp
or
movb
xchg
sub
sub
lret
or
pushl
and
adc
pop
cli
pop
clc
jg
sub
add
pusha
ljmp
outsl
test
push
insl
aas
adc
imul
xor
fists
cmp
cmp
orl
pop
cmpsb
push
inc
insl
es
add
mov
xor
sub
pop
loope
call
mov
imul
mov
and
push
mov
rcll
ljmp
fdivl
lcall
xchg
mov
das
sub
jp
inc
xchg
pop
int
in
outsl
jl
add
dec
xor
in
jecxz
js
ljmp
lcall
inc
and
or
dec
test
repnz
das
mov
mov
push
outsl
std
pushl
cwtl
dec
mov
addl
fisubrs
sbb
mov
dec
xor
stc
mov
scas
jmp
push
sub
or
popa
or
call
gs
imul
jbe
in
add
aaa
and
jg
mov
mov
and
xor
incl
cld
test
mov
in
test
xchg
mov
incb
loop
inc
fdivrs
xchg
or
arpl
out
jae
sub
dec
cmp
sbb
push
int
lea
add
test
xchg
sbb
imul
adc
push
movsb
sub
inc
mov
or
decl
jecxz
stc
push
xorb
testl
and
mov
das
mov
cltd
rcll
push
or
out
pop
loopne
mov
rcll
cwtl
inc
sbb
sbb
or
fucomip
and
pushf
cmp
cli
mov
adc
add
add
dec
in
ret
outsb
xor
xor
in
pushl
stos
fwait
sahf
or
sahf
lret
pop
clc
sub
sbb
xchg
int3
jmp
mov
ljmp
hlt
lcall
dec
test
bound
faddl
xor
jbe
das
mov
in
pop
xchg
dec
inc
pushf
lock
push
adc
out
movsb
in
and
ret
rorl
outsl
stos
out
ret
mov
jg
xchg
loope
int3
movsl
inc
push
stc
jno
shl
popf
sub
loopne
sub
fcomps
xlat
push
add
jmp
or
push
rorl
movsb
pop
mov
nop
arpl
pop
stc
incl
mov
mov
call
xchg
out
ds
arpl
pop
pop
xchg
inc
out
incl
loop
mov
inc
data16
rcrl
pushl
clc
ja
sbb
xor
stos
pop
mov
cmpsl
xchg
cmp
sti
pushl
sbb
xchg
data16
arpl
fsubrl
xorw
sarb
fisttpll
jno
mov
sbb
inc
hlt
pop
cmp
insb
push
jne
pop
or
popa
xchg
or
test
daa
fdivrl
xlat
out
mov
xor
lcall
xchg
sbb
push
ret
cli
pop
inc
and
mov
in
insl
cmpsb
movsl
xchg
sub
or
mov
and
xchg
pop
call
pusha
xchg
pop
jecxz
scas
fs
or
push
cmc
mov
inc
pushl
mov
sub
xor
dec
mov
fiaddl
inc
es
cmp
in
pop
rsm
sbb
pop
mov
incl
pushl
test
lcall
lock
pop
xchg
fadd
mov
fisubrl
jne
adc
add
incl
sub
push
fldt
lcall
out
cltd
fwait
pop
fbstp
out
mov
dec
jle
int
ss
sub
xchg
inc
pop
int3
imul
repz
push
dec
push
mov
test
call
sub
nop
sti
mov
incl
idiv
mov
popf
xor
jge
and
mov
add
rcll
into
xchg
pop
dec
add
pop
repnz
sub
push
mov
mov
fnstsw
mov
dec
nop
dec
pop
and
repz
subb
or
cs
sar
jg
das
hlt
into
inc
cli
mov
lahf
repnz
sbb
aaa
sarb
jmp
adcb
mov
push
je
xchg
sbb
out
inc
push
sbb
fcoms
sarb
int
inc
lcall
mov
mov
sub
mov
xchg
xor
xchg
daa
outsl
call
in
scas
icebp
jbe
xchg
mov
cmpsl
scas
mov
popf
inc
cmp
adc
mov
popf
call
push
adcl
cmc
les
aas
xor
jno
in
fdivs
sub
cltd
jmp
mov
adc
sbb
lea
xchg
inc
loop
or
std
push
fsubl
into
fisubl
and
pop
sbb
or
jg
lods
cmp
repnz
movsl
push
jmp
leave
and
out
mov
fcmovnb
lea
jmp
mov
mov
fsts
loop
xchg
je
fwait
inc
cld
push
push
das
gs
test
dec
fadds
pop
mov
dec
popf
stc
xor
pop
cmp
jl
roll
push
sub
test
mov
xlat
jnp
repz
sarl
cmc
and
xchg
inc
std
incl
pop
nop
lods
mov
popf
cwtl
cmp
lret
out
xor
outsl
lret
or
movsl
and
fs
orl
dec
or
outsl
hlt
hlt
stc
gs
or
ds
les
pop
call
xor
cmpsb
aam
cld
xchg
shrl
loope
aam
mov
aas
add
jle
imul
dec
fs
sbb
or
push
test
fiaddl
mov
mov
adc
repnz
enter
aad
popa
lea
movsb
add
jg
incl
mov
sub
subb
test
sub
lods
ja
jg
cmp
ljmp
cmpsb
ret
out
sub
xchg
out
bound
jne
movsl
jge
incl
cli
in
push
enter
mov
stc
or
push
push
jle
jae
incl
or
sbb
sahf
test
cs
shr
or
sbb
pop
std
mov
pusha
outsl
xor
std
mov
mov
clc
adc
add
jmp
std
imulb
xchg
aaa
pop
jecxz
dec
cwtl
sbb
push
xor
inc
pushl
add
push
jg
idivl
testl
inc
jle
std
les
xchg
xor
push
outsb
nop
andl
jge
or
ljmp
lret
jmp
add
fdivl
jne
movsl
decl
ret
sbb
pop
pop
rclb
xor
stos
dec
es
imul
out
les
add
sub
daa
stc
into
aam
clc
or
jmp
push
mov
daa
test
outsl
fldt
mov
scas
cmpsb
call
add
jmp
lret
add
sub
sub
cmp
fwait
push
mov
enter
ss
pushl
out
or
js
sub
sub
xchg
xlat
loopne
xor
mov
sarl
sub
jg
push
test
clc
xchg
imul
call
mov
aaa
dec
ljmp
jmp
and
lods
pop
mov
cmp
leave
stos
cld
inc
xchg
mov
aas
inc
std
inc
or
dec
aas
clc
sub
test
sti
or
out
or
jp
jle
lcall
or
push
dec
adc
inc
xchg
mov
mov
mov
jg
and
shll
int
sub
sub
test
test
outsb
add
enter
std
pop
decl
ss
cmpsl
ret
fidivs
mov
hlt
pop
jno
mov
test
cmpsb
jge
xlat
mov
out
insl
incb
addr16
decl
adc
out
push
mov
enter
popa
push
fistpl
stc
mov
sbb
xchg
ja
jg
xchg
xlat
add
pop
aas
mov
clc
jmp
lret
rorb
lds
mov
insl
sub
int3
repz
sbb
insl
in
add
mov
outsl
std
dec
jmp
pop
sub
add
shlb
popf
inc
ret
and
push
lcall
sub
subb
inc
aas
push
push
cltd
xchg
dec
imul
pushl
inc
mov
cmp
lock
je
bound
das
lcall
pop
cli
incl
shrb
dec
xchg
test
incl
les
xchg
dec
addr16
rcl
mov
xchg
int
or
std
lcall
test
adc
pop
inc
pop
pop
das
cmp
out
mov
clc
dec
scas
repz
aas
adc
xor
aad
mov
mov
jmp
pushl
dec
std
or
rol
adc
sti
sti
jmp
sub
loope
xchg
xor
adc
outsl
hlt
jg
xchg
aam
pop
test
adc
ret
incl
pop
ret
or
pop
cltd
mov
xlat
dec
mov
jmp
mulb
mov
push
in
jae
mov
jbe
cmp
and
scas
jl
pop
mov
and
andb
clc
cs
sub
shl
out
sti
js
inc
popf
sub
mov
add
fisubs
sbb
jmp
test
flds
in
add
push
jo
xor
xor
decl
push
add
cmpsl
adc
lock
cmp
inc
stos
pop
or
or
rcll
push
xchg
enter
sbb
insl
mov
dec
movsl
fwait
out
out
sub
mov
clc
iret
push
mov
mov
xorb
aad
add
loop
sbb
jle
popf
add
test
out
jg
pushl
fstps
inc
sub
dec
sub
insb
clc
jle
imul
outsb
or
dec
test
push
das
dec
mov
mov
mov
ljmp
lret
mov
jo
stos
rcr
mov
hlt
iret
jl
sub
adc
adc
out
incl
jmp
mov
jle
mov
in
mov
std
stc
sbb
mov
cwtl
pop
stc
jp
cmpsl
imul
mov
jmp
mov
inc
xor
xchg
mov
in
dec
repnz
incl
and
inc
or
mov
rcr
xchg
or
xchg
sbb
mov
imul
leave
dec
push
xchg
and
xchg
sbb
push
jo
xchg
mov
ljmp
xor
add
mov
daa
inc
popa
cld
add
lcall
scas
pusha
push
cmp
jo
mov
insl
xchg
aaa
jmp
mov
push
dec
test
inc
mov
mov
loop
jecxz
decl
jle
push
mov
mov
ds
mov
or
mov
ljmp
push
fs
or
inc
xchg
mov
decl
xor
filds
lods
imul
ret
mov
std
dec
dec
xor
and
and
sti
adc
mov
mov
adc
and
fdiv
shll
add
mov
xchg
daa
sbb
mov
ret
dec
fcmovb
jmp
adc
dec
mov
in
add
lods
jmp
pop
jge
mov
push
fimull
scas
push
hlt
add
das
inc
ljmp
popa
arpl
shll
sbb
or
or
repz
xor
loop
aas
loopne
adc
jno
sub
jae
mov
data16
dec
fs
jg
push
cld
push
ss
sbb
in
inc
mov
out
mov
mov
shlb
inc
in
mov
dec
inc
call
gs
call
pop
jl
xchg
pop
xchg
jmp
fucomip
adc
in
jmp
loopne
and
lret
mov
in
cmc
pop
out
incl
add
fucomip
cmp
jl
pusha
or
cld
and
dec
incl
sub
popf
sub
mov
cmp
inc
inc
lahf
push
push
icebp
clc
jo
decl
in
mov
pusha
push
out
sub
jns
push
test
in
sbb
ret
call
add
sub
jle
icebp
repz
cmp
pop
pop
sti
in
lock
ret
imul
in
add
cld
shl
fldl2e
in
cmpsl
or
mov
xchg
addr16
lcall
mov
mov
lods
add
jp
pop
movsl
sahf
jge
jns
pop
sub
sbb
ficompl
pop
dec
ds
pop
iret
dec
xchg
mov
inc
call
cmp
lods
adc
mov
jmp
push
aad
arpl
fs
dec
movl
jg
fnstsw
mov
and
stos
or
mov
and
push
pop
bound
inc
scas
and
pop
lahf
sbb
lahf
sbb
sbb
push
add
push
cmpsl
xchg
je
in
stc
daa
clc
lahf
sbbb
add
add
mov
leave
sbb
or
out
arpl
mov
fildl
inc
insb
sbb
sub
cmp
mov
cmp
xchg
negl
xchg
adc
fdivs
fdivr
jg
sti
movsb
push
fisttpll
and
mov
dec
add
sub
jmp
mov
mov
cmp
xor
jge
fistpll
push
add
cmp
fisttps
data16
inc
xchg
loopne
stos
dec
hlt
or
jg
cli
lds
jp
test
inc
cld
decl
test
ss
dec
cmp
jmp
and
mov
mov
lcall
fs
xchg
lods
add
xchg
movsb
mov
adc
xchg
mov
movsl
test
call
addb
push
mov
cmp
adc
movups
cld
fsubr
decl
cmp
pop
decb
jb
jno
sbb
lods
decb
arpl
push
lods
cmc
ror
mov
jg
lods
loope
retw
mov
jecxz
out
xor
fmul
pop
loopne
out
adc
add
call
rcl
pop
ja
jo
xchg
push
lea
data16
pushl
clc
es
ret
mov
lcall
or
push
test
loopne
xor
fcomps
rcll
jmp
xor
popa
pop
dec
xchg
push
in
dec
insb
jle
pop
cli
iret
test
mov
xor
mov
mov
test
or
jnp
insb
or
sbb
or
movsl
fnstcw
movsb
lods
lcall
clc
sbb
fsts
iret
and
mov
mov
imul
pop
cli
data16
dec
divl
mov
clc
sahf
mov
sub
mov
pop
paddd
dec
sbb
lcall
sub
test
ret
push
inc
jle
ror
int
js
mov
jg
jnp
mov
cli
scas
sbb
push
push
mov
jo
jge
lahf
push
leave
ljmp
xor
push
pop
inc
nop
jae
aad
sbb
mov
mov
incl
cmp
cmp
movsl
push
mov
ljmp
std
js
mov
vcvtps2udq
mov
jle
jmp
stos
xchg
sahf
call
mov
mov
cltd
outsl
sar
incl
mov
ss
mov
xchg
xchg
sbb
inc
mov
mov
and
cmpb
pushl
adc
xor
std
mov
js
mov
xor
adc
inc
xor
cli
mov
pop
add
call
add
in
mov
lret
pop
imul
dec
ficomps
xchg
sbb
scas
rcr
call
fimuls
push
add
fs
enter
pop
jmp
xor
push
ffreep
cltd
or
xor
aaa
fwait
idivl
test
rcr
mov
xchg
push
pop
mov
call
inc
lret
ljmp
lret
xorb
lea
mov
adc
pop
push
icebp
call
fdivrp
scas
or
dec
fnstsw
sub
dec
aaa
mov
nop
test
lds
jnp
jle
mov
add
out
lock
inc
fcmovnbe
out
pusha
sub
incl
rclb
dec
icebp
mov
leave
repz
jg
xor
inc
and
cld
mov
dec
out
sub
cmp
subb
mov
push
xor
pop
ret
pusha
test
cli
fdivs
add
popf
aad
xchg
popl
int
divl
add
pop
add
je
sti
push
pop
cld
xchg
aad
out
mov
aad
repz
movsb
jmp
mov
mov
idivb
cmp
adc
lds
add
stos
cmc
cmp
data16
cmp
jg
mov
clc
dec
or
jg
mov
xchg
pop
jecxz
popf
and
xchg
mov
xchg
outsl
mov
into
lea
mov
jo
sub
ljmp
enter
pop
incb
pop
lds
xchg
jecxz
sahf
loopne
jmp
jmp
in
loope
shrb
nop
mov
add
xlat
adc
decl
push
mov
shll
fstl
js
xchg
jo
mov
mov
xchg
adc
mov
stos
cs
push
sbb
push
repnz
push
lcall
mov
sbb
sbb
xor
test
mov
mov
sub
mov
lcall
push
mov
loopne
into
mov
xor
mov
push
daa
or
decl
add
xchg
cli
mov
xor
adc
and
clc
jmp
mov
adc
inc
or
aas
sar
xor
call
push
push
mov
inc
addr16
dec
jnp
push
les
lcall
mov
xchg
cli
popf
xor
add
mov
xor
outsl
jg
outsl
incl
xor
push
cwtl
sti
pop
out
adc
cmp
in
insl
xchg
add
decl
inc
lahf
sbb
or
popa
shrl
fists
cli
or
mov
test
inc
lea
push
cld
mov
adc
sbb
push
aaa
and
outsl
std
out
dec
or
xchg
push
xchg
aad
in
rcll
dec
jg
ljmp
sub
in
cmpsb
xchg
dec
jecxz
js
cmp
call
fisttpl
imul
cmp
xchg
sti
pushl
push
push
clc
mov
ret
inc
aam
jmp
jle
dec
pop
and
inc
testl
pop
sbb
mov
and
ljmp
jne
pusha
aas
decl
fmul
sbb
popa
and
js
mov
cmp
mov
mov
ljmp
pusha
and
pop
push
inc
cs
jg
icebp
xchg
sti
inc
js
mov
test
sbbb
into
cmp
test
fs
stc
mov
out
lret
or
mov
ret
pop
sbb
fisubrs
pop
dec
push
adc
or
sub
sbb
sbbb
or
rcrl
call
clc
lcall
jbe
add
dec
fsts
int
mov
decl
dec
inc
sbb
shrd
jle
xlat
push
xchg
dec
lret
jns
test
decl
icebp
sub
add
xchg
inc
xchg
inc
out
test
and
repnz
iret
scas
hlt
test
cld
popa
daa
pusha
pop
jo
pop
es
jmp
hlt
jg
cmpsb
jmp
das
mov
jecxz
sbb
mov
mov
pop
mov
movsb
mov
sbb
repnz
xchg
jno
aas
fstps
xchg
neg
mov
mov
ljmp
xchg
repnz
jecxz
lea
iret
sub
fisubrl
and
call
ljmp
in
lcall
cmp
xchg
cmpsb
shrl
fistps
jnp
rolb
inc
xchg
cmp
xchg
mov
xchg
adc
pop
pushl
loop
mov
jno
add
clc
push
movsb
aas
or
jne
pop
mov
xchg
outsl
lock
mov
xlat
test
insl
sub
cld
pushl
icebp
mov
shrb
sbb
adc
lret
out
outsb
fnstsw
add
das
test
in
std
jbe
or
shrb
push
xchg
jno
fnstsw
outsb
gs
lahf
out
jbe
decl
je
addl
cmpsl
iret
rcrb
sub
in
dec
cld
dec
sub
movsb
cmp
xchg
addl
out
jb
rcr
shrl
push
mov
or
leave
stos
loope
stos
mov
push
add
xchg
pop
mov
mov
movsl
lds
pop
mov
lea
mov
std
scas
pop
sbb
ffree
loopne
and
mov
test
mov
jp
lods
xchg
dec
and
push
es
in
rcr
decl
xchg
lods
mov
pop
bound
mov
out
jns
icebp
sub
dec
xchg
sub
incl
outsl
leave
mov
sbb
mov
bound
mov
jg
or
mov
rol
pop
xchg
in
xbegin
mov
ror
loop
mov
mov
dec
pop
outsb
and
jnp
popa
sbb
mov
xchg
data16
ljmp
loope
les
outsl
stos
or
bound
push
xchg
xchg
jmp
jecxz
pop
loop
loopne
cmpsb
dec
jno
mov
pop
and
mov
dec
sar
lcall
and
xorl
jbe
cli
mov
adc
adc
mulb
xchg
mov
mov
in
cmp
out
jae
lcall
lods
aad
push
jg
pusha
stos
jecxz
lret
mov
jg
push
xchg
fcmovb
sbb
imul
lcall
ror
adc
pop
cmp
rolb
sahf
lds
ds
and
lock
cmp
pop
insb
adc
cmp
pop
mov
cltd
stos
arpl
stos
aaa
fistpll
data16
push
jle
pop
sub
repz
jae
fwait
std
pop
std
mov
adcl
fstpt
jecxz
sub
xchg
push
rorb
cs
subl
fsub
pushf
push
jne
sar
jg
fcmovnb
push
movsl
daa
and
cld
hlt
add
lret
fsubl
add
lea
lock
iret
mov
jecxz
cs
jb
out
lds
ljmp
icebp
mov
cmp
dec
mov
lcall
lock
dec
lock
add
xor
rcl
lock
mov
aam
fwait
mov
repz
cli
call
js
mov
inc
inc
pop
xorb
je
or
xchg
cli
jo
movsl
shll
pop
jl
int
cmp
pop
jnp
mov
mov
xchg
and
ljmp
pop
mov
pushl
pop
iret
push
xor
lcall
push
aam
js
out
dec
aaa
or
mov
jmp
mov
inc
push
jo
xchg
test
outsl
sbb
mov
cmp
inc
aam
dec
iret
call
push
decl
cmp
add
mov
or
stos
push
cmc
lods
cli
test
fidivs
xor
push
daa
inc
jge
mov
ja
mov
ljmp
pop
dec
sub
mov
decl
sub
fdivl
shll
adc
shlb
pop
and
mov
add
jno
cli
push
imul
lret
ss
mov
dec
std
enter
test
cmp
cwtl
lods
dec
push
xchg
lea
call
xchg
in
sahf
cltd
rcrb
stos
sbbl
les
psubb
fcomps
jmp
repz
mov
mov
adc
call
andl
cmpsl
xor
repnz
decl
subb
inc
mov
dec
mov
dec
pop
jbe
out
adc
jle
mov
frstor
add
xchg
fldenv
sbb
repz
popa
add
cmp
decl
outsl
aad
xchg
add
dec
lock
dec
ds
inc
call
add
fcoml
jmp
jmp
inc
cmpsb
inc
sar
inc
xor
fwait
out
push
loop
fbld
cmp
movq
mov
rcrl
lcall
jmp
cmp
push
sub
mov
jle
inc
inc
loope
call
sub
inc
ljmp
notb
and
inc
jb
mov
or
lds
into
scas
mov
and
notb
aas
repnz
addb
popf
rcll
hlt
push
lret
and
es
mov
ljmp
mov
sub
scas
cmpsl
or
cmpsl
shrb
push
frstor
jmp
adc
clc
add
std
dec
loop
jl
push
cmp
mov
jg
xor
add
lcall
cmp
or
dec
lahf
mov
call
pusha
int
out
cmpsb
mov
sahf
test
out
sbb
pop
push
or
cmp
mov
cwtl
mov
and
mov
incl
incl
pushf
in
sub
push
sbbb
sahf
and
xchg
popa
mov
mov
call
std
mov
and
xlat
and
or
loope
mov
into
decl
out
or
and
fdivl
stos
push
lret
rclb
stc
decl
sbb
adc
fsubrs
inc
flds
dec
mov
stos
sbb
or
aaa
mov
cmpl
inc
mov
sub
jecxz
cmp
fsts
cltd
inc
sbb
lock
pushl
add
mov
cltd
outsb
push
sbb
fs
mov
jecxz
popf
loopne
in
jne
ljmp
inc
pop
mov
out
push
mov
push
pushf
inc
repz
pusha
mov
sbb
call
sub
sbb
orb
sbb
cli
decl
arpl
adc
insl
hlt
xorl
stos
push
scas
jmp
inc
ja
das
mov
push
cltd
movsb
stos
dec
fildll
adc
movsl
les
xchg
jp
jg
das
aam
outsl
jecxz
pushl
rorb
xor
mov
push
cli
jg
pop
xchg
adc
add
test
xlat
mov
jg
sbb
push
push
mov
nop
jo
lcall
push
mov
ret
cmc
shrb
jl
jl
mov
mov
cli
sub
xlat
movsl
test
das
xor
js
inc
xor
xor
mov
es
std
fdivrs
push
insl
loop
ljmp
js
pop
rol
scas
dec
jae
test
inc
je
dec
test
clc
mov
repnz
imul
pop
adc
and
sti
call
xchg
insl
dec
in
mov
shl
sbb
movsl
or
jg
imul
js
pushf
into
inc
jle
aad
je
rcll
nop
and
cmpsb
fnstsw
dec
dec
mov
das
xadd
adc
push
add
adc
push
push
mov
add
daa
push
sbb
aaa
arpl
loop
xchg
xor
incl
sub
xchg
dec
xor
or
lock
xchg
jmp
lods
pushl
jl
cmp
gs
cmp
inc
das
inc
jecxz
xor
in
mov
inc
add
and
xor
cmp
push
sub
mov
push
and
aaa
cli
add
stc
or
mov
xchg
bound
call
into
fdiv
fwait
cmp
pop
jp
mov
mov
sti
dec
mov
call
scas
into
rcrl
loopne
cmovne
push
jb
jb
sets
call
cmpsl
pop
push
mov
aad
outsb
jns
in
mov
jg
or
or
stos
data16
jmp
mov
in
jns
lcall
into
rcrl
xor
push
leave
xor
clc
jmp
xlat
pop
fprem
arpl
mov
sbb
sbb
mov
outsb
sub
dec
add
lds
rcrl
pop
loopne
mov
add
icebp
xor
cltd
test
jle
in
rcrl
dec
xchg
int
leave
mov
mov
test
lret
xlat
sahf
out
stos
dec
sbb
mov
add
jg
xchg
std
jg
jno
dec
push
arpl
aam
xchg
loope
cltd
cli
mov
inc
test
or
mov
push
push
sub
std
mov
daa
lods
nop
push
dec
rcrl
jg
cmp
xchg
jp
sar
pop
loop
and
fstpt
dec
adc
repnz
jbe
push
out
aad
mov
mov
outsl
cmp
ds
inc
int3
add
arpl
leave
push
cmp
cld
cmp
jecxz
and
or
stc
lahf
lahf
jg
jge
aad
dec
and
fildll
fidivs
icebp
divps
xor
pop
sbb
gs
or
or
arpl
clc
jne
mov
sbb
inc
lret
fadd
aaa
pushl
xchg
out
sub
shll
mov
cltd
inc
in
jmp
xchg
jno
fsts
jmp
pop
mov
fsubs
mov
or
nop
adc
and
mov
jnp
jb
ja
inc
dec
fsts
mov
cli
aaa
mov
jg
or
dec
dec
xlat
mulb
pop
cmp
jae
jnp
sub
or
das
std
jmp
mov
dec
cli
jg
aam
cmp
sahf
je
lcall
andnps
or
cmp
sub
push
add
or
inc
dec
lcall
lods
rorl
dec
xchg
mov
push
pop
mov
iret
push
fnstcw
jmp
int
xchg
shll
inc
inc
or
fs
test
jp
loopne
decl
cli
in
adc
daa
pop
ss
mov
icebp
outsb
jb
inc
hlt
push
sti
imul
pop
mov
sbb
or
ja
inc
lods
and
mov
jb
adc
pop
mov
jo
lahf
mov
rclb
ret
or
into
push
call
adc
xchg
pop
jns
xor
dec
mov
sarb
stc
xor
addr16
decl
nop
in
or
adc
pop
lret
ret
addl
inc
xchg
dec
jmp
loopne
ret
aaa
or
loop
and
scas
pop
insl
xchg
loope
ljmp
mov
cmp
clc
shlb
lock
mov
sarb
xor
movsl
in
cmc
loopne,pn
cli
push
cs
ret
shl
fisubrl
cld
call
movl
xchg
addr16
icebp
lea
fnstsw
dec
decl
cmpsl
lret
imul
mov
xor
arpl
mov
out
jg
jle
sti
incl
incl
in
mov
xchg
es
ljmp
popa
xchg
jl
pop
insb
lcall
xchg
dec
jp
pusha
test
rcll
push
cli
jg
add
cmp
add
jbe
iret
push
mov
sub
pushl
jne
hlt
lods
cmp
push
pop
add
mov
pushf
push
neg
cmp
mov
inc
incl
hlt
push
mov
out
adc
and
inc
cmp
daa
inc
lret
mov
mov
jecxz
out
and
data16
aas
mov
dec
xor
push
jb
std
and
nop
ret
cli
adc
sbb
stc
sub
icebp
je
jmp
es
leave
sub
inc
mov
or
mov
jl
repnz
push
mov
or
pop
decl
mov
push
ss
imul
push
incl
dec
subl
inc
sub
or
jnp
mov
mov
xchg
call
mov
xorb
test
push
xchg
sub
cld
push
mov
xchg
sub
shl
sbb
xchg
xchg
ljmp
out
bnd
int3
push
repnz
sbb
sbb
sub
sbb
xchg
sbb
mov
into
cwtl
pop
xchg
and
inc
jge
dec
and
lahf
das
xlat
inc
insl
outsl
mov
mov
push
sbbb
xchg
or
jne
cli
pop
std
sbb
call
or
xchg
cld
rolb
stos
mov
xor
mov
fucomip
mov
lods
or
mov
jle
cmp
adc
adc
movsl
out
cmpsb
jae
repnz
outsb
and
call
icebp
lret
out
and
ffree
sbb
lahf
lcall
mov
pop
out
adc
mov
jbe
pop
push
mov
cli
adc
pop
mov
inc
dec
mov
and
pop
repz
mov
jns
cmp
xchg
mov
lcall
mov
icebp
push
sub
pop
pop
push
mov
data16
sbbl
decb
sti
pause
int
clc
leave
cmp
sbb
scas
pushl
cld
inc
fcoml
mov
xor
xor
xchg
xchg
cld
or
inc
cmp
pop
push
dec
filds
and
jmp
push
fcompl
push
push
fwait
rcrb
std
push
dec
pop
xchg
sbb
xchg
inc
xor
lock
sbb
add
lods
sti
xor
or
in
mov
mov
jle
aam
call
mov
popf
cmpsl
repz
dec
sbb
repz
rorb
daa
jle
sar
lods
test
aaa
in
cmc
nopl
xchg
cmp
pop
mov
lahf
out
arpl
popl
lcallw
xchg
xchg
pop
sub
aaa
mov
mov
jg
push
inc
dec
scas
xor
not
inc
jns
mov
mov
mov
loopne
push
ss
push
sbb
push
push
push
sub
fwait
or
and
or
or
pop
xor
lods
dec
aas
or
mov
xchg
cmpsl
int
jge
push
xor
and
push
push
cli
psrlw
push
aas
and
aas
mov
mov
lcall
bound
jno
fidivs
jb
mov
out
sub
push
in
jcxz
ljmp
icebp
decl
in
jo
lock
test
lahf
and
sahf
rcrb
dec
mov
nop
les
mov
mov
and
sbb
dec
sbb
vmovaps
add
ljmp
sub
push
lods
sahf
inc
insb
mov
xchg
rorb
ljmp
push
negb
push
or
aaa
fsubr
xchg
aam
int3
sub
call
ret
shl
dec
sub
lock
push
inc
imul
pop
rcl
ljmp
mov
mov
aaa
and
mov
jmp
cmp
sub
add
popa
ljmp
push
xor
int
push
pop
dec
test
jno
lock
lahf
xchg
fadd
test
pop
decl
pushfw
scas
pop
bound
test
xchg
ljmp
hlt
sub
incl
pushf
test
imul
daa
push
inc
imul
call
enter
stos
lods
mov
loop
loopne
jge
sub
jmp
sub
cmp
cmp
pop
out
insl
bound
movsb
push
xchg
cmpsl
call
out
popa
js
jae
loopne
xor
cmpsl
ficomps
cltd
dec
mov
mov
into
je
loope
mov
rcrl
aam
stc
les
push
rol
mov
pop
test
pop
lock
into
push
ljmp
xor
aaa
jo
cmc
sbb
es
and
adc
jno
adc
test
and
cmp
mov
xchg
loope
xchg
add
insb
repz
jg
ljmp
or
jnp,pn
sti
pop
dec
or
cmp
pop
cli
mov
pushl
clc
or
aam
rcll
sbb
sub
push
pusha
fistpll
arpl
call
mov
fistpll
add
stos
aas
clc
imul
mov
pop
pop
lret
fildll
aaa
movsb
mov
imul
cwtl
adc
ljmp
or
arpl
sbb
add
ljmp
mov
scas
mov
lcall
mov
cld
mov
cli
xor
negl
test
mov
fldl
inc
or
jne
cs
adc
ret
cmp
xchg
xchg
add
rorb
repz
xor
mov
lods
lea
jnp
sarl
jmp
add
sbb
cmp
push
cmpsl
xchg
call
ds
jl
sahf
mov
in
pop
add
push
or
add
loope
push
fld
enter
lcall
push
mov
xor
bound
push
ret
push
jne
or
jae
jg
sti
in
cmpsl
jp
mov
in
pushf
pop
stos
insb
ss
push
add
arpl
stos
or
loop
mov
lahf
jmp
scas
cmp
cmpsl
sub
push
push
filds
and
out
pop
xchg
pop
je
les
mov
pushl
clc
and
adc
cmp
push
mov
dec
add
js
sbb
or
pop
cmpsl
push
repz
inc
pop
adc
clc
pop
jbe
fcomip
jl
pop
int
movsb
mov
out
mov
out
mov
xchg
sub
cmp
pushl
insl
test
sti
or
dec
mov
fs
xchg
notl
inc
adc
jg
pushl
stos
inc
push
out
icebp
pushf
jmp
pop
lcall
jbe
outsb
incl
loope
mov
mov
outsl
int
inc
mov
pop
insb
mov
icebp
mov
pop
cli
xchg
xor
adc
nop
leave
cmp
aaa
cmp
cmp
jns
aaa
cmpl
mov
repz
roll
sub
cmp
fs
call
mov
iret
xchg
inc
cwtl
mov
and
sub
sti
or
fidivs
push
lock
add
bound
add
jg
in
jmp
add
icebp
aad
mov
lea
outsl
xchg
movsl
mov
sub
ljmp
pop
test
ds
or
notl
das
das
rol
test
dec
cmp
int
inc
push
insb
dec
pop
add
loop
ja
jnp
jg
add
ret
out
imul
xor
sub
lret
out
dec
cmpsl
push
inc
adc
shlb
add
sub
clc
mov
dec
push
test
mov
test
pop
rcr
divl
std
sbb
scas
cli
lret
dec
sbb
leave
push
pop
jb
loopne
jmp
shrl
xchg
push
and
call
sbb
cli
dec
enter
popa
fidivs
push
sub
ljmp
jmp
pop
fsubp
decl
cmpsb
inc
sahf
add
jnp
stc
insb
mov
pop
std
pop
xchg
or
fxtract
leave
sbb
and
push
mov
sar
outsl
sbb
movsl
movb
test
fisubrl
jl
call
adcb
jo
pop
insb
das
xor
sbb
insl
shrl
mov
ljmp
call
inc
dec
sbb
mov
dec
xchg
pusha
push
test
pop
push
jecxz
movsl
add
lods
arpl
cli
incl
or
sbb
popa
xor
dec
mov
mov
ljmp
scas
jg
mov
sub
xor
fsts
outsl
loopne
adc
scas
sub
inc
mov
in
test
mov
jp
std
shr
lcall
jg
fwait
push
ds
pop
mov
sub
dec
sub
ljmp
mov
mov
push
add
mov
cmp
movsl
and
xor
adc
add
sub
ret
mov
mov
decl
std
sub
and
lods
gs
lea
jmp
jo
push
lods
ds
and
gs
movsl
sbb
xchg
mov
pop
loope
jns
xchg
in
int3
jmp
iret
fidivrs
mov
adc
stc
cmc
dec
les
leave
ja
xor
pop
sub
cmp
lahf
push
movsb
std
call
imul
push
aad
push
hlt
add
ss
out
inc
pop
dec
jbe
int
call
dec
idivl
xor
sbb
pop
dec
mov
push
jg
test
pop
adc
dec
pop
orl
and
cmp
cli
loopne
adc
mov
xchg
iret
icebp
inc
sahf
fisttps
cmp
lea
sub
movsb
jne
fs
test
gs
aad
adc
shlb
mov
test
jp
iret
mov
aas
pushl
cli
push
xchg
pop
dec
xchg
mov
pop
sub
mov
scas
add
xor
decl
call
xrelease
add
push
push
add
jl
stos
cmpsl
sbb
sbbl
dec
xlat
jnp
cmp
jg
pop
xlat
adc
fisttps
pop
aaa
lret
pop
shll
call
push
popf
cmp
jno
push
xlat
repnz
out
mov
leave
pushl
mov
es
sbbb
mov
pop
cmp
mov
mov
into
shrb
iret
rcrb
sarb
scas
scas
push
iret
jl
addr16
ret
adc
mov
sahf
mov
test
aam
sub
sbbb
pop
test
clc
das
jb
and
push
and
mov
inc
imull
pop
imul
in
push
lock
xor
sub
mov
outsl
xor
fists
add
jns
jmp
rclb
or
push
sbb
pop
jl
inc
popa
mov
sbb
shlb
dec
lods
xchg
xchg
movsl
mov
pop
clc
sbb
nop
mull
mov
addr16
add
cmpsb
or
cltd
scas
sub
fwait
int3
push
mov
mov
aas
xor
popf
push
pop
lret
mov
push
inc
cmp
rolb
dec
mov
call
push
lds
cltd
ss
mov
xor
cmp
mov
mov
inc
cltd
mov
das
sub
mov
cmp
mov
sub
rcl
dec
imul
call
mov
sbb
adc
mov
lcall
ret
add
mov
jnp,pt
outsb
ret
clc
mov
and
mov
sbb
inc
jp
mov
fwait
mov
movsl
sbb
ja
adc
and
jg
in
out
jmp
inc
hlt
movsb
ja
jmp
rolb
std
in
nop
jmp
or
mov
mov
xchg
dec
mov
mov
outsl
imul
fucomip
repz
mov
arpl
push
lods
mov
lcall
mov
test
and
pop
ss
jecxz
adc
repz
mov
mov
in
hlt
jae
sbb
js
movlps
cmp
inc
xor
pop
pop
bound
cmpsb
mov
mov
cmp
jg
mov
iret
sub
aas
add
lahf
pop
inc
sbb
shrl
jg
out
mov
adc
adcb
jb
fbstp
sti
fwait
mov
sbb
lcall
fst
push
fnstenv
pop
mov
cs
dec
fstpl
inc
xorb
popf
adc
inc
jmp
arpl
outsb
aas
cltd
mov
mov
sub
arpl
ja
sub
fucomip
dec
mov
hlt
popa
sbb
xchg
xchg
cmp
lret
jge
aaa
pop
ljmp
lock
cld
daa
cmp
daa
test
in
jmp
jmp
mov
or
cli
or
lcall
lret
in
add
lods
cmp
inc
sarl
mov
in
clc
incl
shr
scas
nop
push
mov
insb
inc
sbb
dec
fstpt
pop
jl
cmp
das
popf
arpl
sahf
jb
mov
inc
scas
dec
imul
decl
jg
in
jne
pop
subb
data16
out
sub
insb
in
push
fildll
daa
sub
sub
sub
fldenv
cmp
xor
adc
push
loope
sub
lods
push
mov
icebp
cmp
call
mov
clc
adc
sarl
lock
and
mov
xchg
fucomi
inc
gs
or
jmp
xchg
or
sbb
ret
jns
jecxz
dec
shlb
inc
sahf
jnp
push
cmp
jae
fnstcw
lods
mov
lahf
lret
cmp
jo
scas
out
in
insb
ret
mov
adc
fsubs
cltd
inc
enterw
les
movsl
fcmove
loope
pop
xor
fucom
jbe
xchg
lcall
xchg
repz
dec
cltd
test
mov
and
dec
test
cmp
or
clc
jne
data16
leave
inc
sti
mov
pop
jl
das
jecxz
lods
pop
sti
sub
sysenter
sbb
pushl
sahf
ret
xor
jge
ljmp
daa
add
out
sti
cmp
lds
leave
xor
jns
dec
xchg
pop
mov
out
fisttpl
jecxz
xchg
call
scas
jecxz
push
and
adc
push
negb
xlat
es
rcll
insl
xchg
clc
outsl
std
xor
sbb
lret
lret
or
movsl
outsb
outsb
and
ljmp
mov
mov
push
test
inc
incl
call
xor
leave
jmp
out
push
fsubrp
sbb
nop
ds
idiv
call
imul
stos
add
jno
stos
adc
xchg
stos
xchg
in
xchg
loope
mov
fisttps
mov
adc
inc
push
or
scas
notl
hlt
add
and
clc
jmp
mov
fstpt
push
fisubs
iret
add
inc
aam
pop
mov
outsl
jge
cmp
repnz
sub
push
call
insl
cwtl
push
test
orb
lock
lret
sbb
roll
out
sbb
lcall
or
aam
push
xchg
lret
js
pop
js
imul
xchg
inc
mov
cwtl
or
lds
sbbl
push
dec
pop
adc
scas
insl
dec
cs
popa
cmp
cli
ja
out
jns
hlt
clc
mov
rorl
in
sub
subl
lcall
movsb
push
sbb
ss
loope
test
incl
test
cmp
in
icebp
push
xchg
fucomp
seta
rolb
jp
lret
jmp
ss
sbb
xor
cmpsb
cltd
push
push
daa
std
inc
sbb
cli
incl
mov
add
sub
leave
push
push
mov
scas
inc
pushl
push
mov
pop
sbb
outsb
daa
loope
sub
decl
or
push
lods
call
inc
and
mov
movl
ljmp
push
cwtl
xor
lock
cmp
jae
out
ja
or
pop
or
ljmp
mov
repz
fisubl
sub
jo
sub
pop
loopne
jl
sub
or
pop
xchg
add
jge
push
mov
jmp
jmp
loopne
cli
cmpsb
cmpxchg
inc
aas
lahf
cmp
cmp
push
mov
xchg
out
inc
call
sbb
call
dec
dec
sbb
stos
jno
push
and
iret
pop
pushl
rcr
adc
cwtl
lahf
add
inc
aad
push
adc
ja
iret
popf
je
jne
loop
std
repz
adc
fwait
fildll
mov
push
pusha
ret
inc
push
adc
aas
imul
stc
cmpsl
out
nop
ljmp
jmp
pop
mov
cmp
cmc
add
lret
jnp
mov
movsl
std
lea
sbb
mov
push
push
mov
into
sbb
add
int3
call
ja
fidivrl
out
jb
mov
cmp
sub
mov
mov
mov
das
outsl
cld
cld
push
inc
xchg
iret
mov
jmp
adcl
jb
jns
mov
cmp
dec
dec
mov
mov
mov
call
mov
push
add
ljmp
test
cmp
mov
aad
mov
fstl
mov
pop
lahf
cli
xchg
arpl
mov
or
test
outsb
loop
sbb
cli
addr16
nop
and
popf
pop
aaa
ss
jg
cld
xchg
sub
lods
pop
shrb
cs
adc
cmp
cld
decl
into
inc
data16
jno
xchg
leave
out
decb
enter
test
mov
dec
mov
je
ret
sbb
jno
xor
adc
jecxz
ficoms
in
ljmp
ret
push
push
addb
inc
ljmp
lods
mov
sbb
xchg
mov
lret
or
sbb
movsl
call
jae
cs
fistps
add
outsl
push
lock
pusha
pop
or
int3
cmp
push
mov
inc
ja
lret
pop
mov
and
aaa
jmp
incl
adc
scas
cmp
add
fldcw
sub
mov
in
cld
cmpsl
xor
fldenv
out
aad
push
fwait
mov
leave
dec
push
imul
jmp
cltd
push
decl
decl
hlt
adc
clc
sub
xor
sarl
and
pop
inc
ret
dec
test
lcall
ror
jge
xorl
ret
cltd
dec
or
inc
enter
call
ret
cwtl
cmp
push
js
loope
rcrb
and
hlt
decl
out
clc
in
mov
push
mov
das
pop
decb
jge
int3
test
sbb
cmp
push
or
dec
es
dec
or
mov
add
jo
jle
xor
aad
incl
jns
push
add
scas
inc
repnz
mov
lcall
xor
insl
dec
and
pushl
clc
xchg
je
push
xchg
or
add
add
loopne
and
call
inc
rclb
inc
dec
rorl
xor
xchg
dec
xchg
les
mov
das
mov
ljmp
dec
filds
adc
adc
adc
push
pop
daa
add
incl
arpl
outsl
fdecstp
xor
les
dec
dec
mov
pop
fdivs
jge
add
in
add
add
xor
cmp
mov
je
add
scas
daa
adc
cmp
outsl
lcall
jmp
xchg
test
push
jg
pop
andl
push
into
popa
inc
xchg
je
or
pusha
mov
xchg
pop
xor
xor
jg
incl
mov
mov
add
hlt
or
pop
xchg
test
ljmp
cld
and
adc
fldenv
push
stos
lret
jae
mov
daa
jmp
lods
or
fs
fldt
jle
rol
int3
ljmp
mov
mov
arpl
push
das
repz
arpl
push
decl
into
xor
mov
inc
push
or
imul
in
push
outsl
dec
xor
mov
int
jae
push
mov
push
mov
cmp
lret
mov
fistps
adc
jmp
xchg
mov
lcall
mov
inc
lahf
cmp
cmp
and
mov
data16
and
mov
nop
popa
lcall
push
mov
insb
cmpsb
mov
popa
mov
and
bound
sub
xor
cld
test
push
pop
shrb
lock
or
push
push
cmp
pop
xchg
add
int
jbe
repz
jg
fs
mull
test
xchg
mov
sub
and
inc
jl
mov
mov
lock
mov
jnp,pn
fidivl
decl
sub
cmp
call
pushf
mov
cmovne
mov
cli
lea
cltd
inc
fs
ja
mov
ret
lcall
mov
ret
or
inc
call
inc
pop
rol
sub
ds
jo
mov
lcall
lods
jnp
or
cmp
mov
adc
stos
add
ljmp
push
shlb
mov
or
pusha
enter
dec
cmp
cwtl
or
lcall
lods
lods
add
daa
fisubs
rcll
imul
or
jmp
ret
xor
clc
call
nop
mov
dec
cmp
aaa
repz
sahf
in
push
lods
xchg
or
std
call
mov
push
cmp
je
cli
lcall
mov
hlt
insb
lret
imul
fnstsw
inc
adc
je
mov
sub
call
fucomip
arpl
repnz
fldenv
negb
int3
rorl
testb
push
stos
inc
xchg
mov
icebp
cmc
call
pop
jecxz
sub
adc
je
call
mov
dec
js
push
sbb
loopne
sub
call
fdivrp
or
push
ds
push
sbb
push
loope
call
jmp
sbb
pop
subl
popf
xchg
and
jns
mov
sub
jbe
es
mov
sub
daa
das
out
mov
pop
push
mov
pop
rcll
ljmp
hlt
mov
xchg
daa
sti
in
pusha
sarb
pop
repnz
push
stos
ljmp
or
cltd
aaa
xor
mov
sub
aad
cmpsl
mov
fbld
in
cmp
fildl
movsl
leave
mov
leave
jno
jg
xchg
call
push
xor
enter
push
push
dec
ret
sar
fsubrs
fstps
mov
pop
outsl
dec
pop
inc
imul
lcall
inc
mov
sarb
jne
add
pop
jl
in
in
jmp
test
pop
test
mov
fcomp
fwait
or
lahf
out
adc
xlat
pop
add
jecxz
ret
jp
xchg
incl
sbb
stos
pop
test
lret
outsb
fbld
push
mov
mov
jg
dec
outsl
push
ljmp
jge
mov
aad
into
mov
adc
adc
std
adc
adcl
fnsave
push
cmc
lcall
jp
out
mov
sti
inc
cmp
sbb
cmp
push
std
scas
and
adc
in
sar
pushl
or
sbb
inc
scas
pop
mov
sub
jmp
std
lcall
into
aas
pand
neg
pop
xchg
dec
jle
sbb
iret
mov
into
fists
das
cmp
pop
and
pop
loop
sbb
jle
sbb
jecxz
cmp
sub
jmp
out
inc
pop
ds
stos
pushf
jno
fcmovne
loopne
aad
cmpsb
insb
fwait
call
mov
add
and
add
add
leave
fists
sbb
cmp
decl
dec
fldcw
xor
in
push
jmp
mov
les
stos
dec
jg
ja
es
push
add
sub
mov
scas
xor
arpl
or
mov
add
call
lahf
sbb
insb
mov
add
xor
loope
add
jle
xchg
and
push
push
data16
outsb
adc
in
or
ret
mov
fisubl
push
or
jmp
ss
sub
int3
xchg
std
jmp
sbb
subl
xchg
cmpsb
inc
or
or
add
xor
sub
ljmp
fnsave
sub
xchg
es
into
addr16
pop
out
ljmp
xlat
pop
mov
daa
sub
rcl
and
sbb
ja
movsl
ret
int
in
ret
jg
dec
rolb
mov
jns
inc
push
adc
add
sarl
adc
ljmp
std
je
or
jge
jmp
nop
fnstcw
inc
outsb
or
jg
mov
jge
sbb
cld
cmp
xchg
inc
jecxz
xchg
decl
call
mov
loopne
and
pop
fs
loop
addb
outsl
cmp
jg
pop
cli
imul
push
xor
bound
xchg
xor
pushl
and
push
mov
xor
mov
and
sub
das
movsb
lock
rol
imul
mov
push
inc
inc
xor
insl
mov
cmc
cltd
in
repnz
cwtl
xchg
lods
sti
gs
movsl
lds
lret
pusha
jmp
or
call
clc
cmc
out
ret
into
mov
or
and
pusha
movd
cmp
inc
mov
out
jmp
icebp
sarl
in
fwait
rcrl
ljmp
mov
in
pop
jne
nop
cmp
ljmp
dec
pop
mov
fwait
jmp
push
adc
pop
sbb
mov
aaa
adc
daa
inc
in
stc
cmp
call
insl
mov
adc
jbe
add
mov
dec
jb
lahf
push
sbb
xchg
xor
mov
adc
lock
daa
outsl
push
insl
dec
aas
ds
sbb
les
incl
mov
frstor
cmp
and
pop
aam
mov
shrl
sbb
ds
pop
out
cmp
jns
mov
aaa
cmp
popa
inc
and
in
or
cmp
das
std
pushf
push
out
ja
jle
mov
cmp
cmpsl
out
sub
repz
das
lock
gs
push
out
and
repz
out
push
out
mov
imul
sub
mov
jg
inc
pop
mov
cs
cmp
daa
lahf
xor
in
mov
mov
mov
pop
es
sub
gs
xchg
and
pushl
cmp
xchg
mov
add
paddsw
jae
jne
ret
jnp
daa
sbb
mov
xor
sahf
jmp
stos
enter
and
call
sbb
es
pop
add
mov
rorl
mov
ret
mov
pushf
stos
clc
incl
mov
xchg
inc
adc
insl
inc
decl
jbe
jmp
add
int3
mov
cmc
dec
pop
add
movsb
aaa
xor
das
cld
mov
push
sahf
lock
cli
inc
or
cmp
jae
jg
pop
sub
decl
cld
jae
inc
pop
and
out
lret
pop
lock
into
int
mov
mov
aaa
dec
repz
add
sbb
adc
jl
xchg
ljmp
jle
test
mov
test
andb
jae
in
jb
jne
cmpsl
in
movsl
inc
mov
mov
inc
jl
loop
and
insl
sbb
push
xchg
mov
push
mov
dec
mov
cld
fmulp
add
sbb
or
push
mov
jb
rcrl
loope
ss
jg
cmp
stc
lahf
pop
inc
inc
push
daa
loopne
sbb
dec
mov
pop
mov
in
inc
adc
xor
ljmp
data16
rorl
pushf
jae
call
rcl
push
mov
scas
push
inc
aad
ljmp
or
aam
in
scas
cwtl
je
in
lods
in
pop
std
call
cs
mov
cmp
mov
fstp
cwtl
cmpsb
insl
pop
pop
adc
sub
push
inc
sbb
pushl
mov
push
pop
sub
ss
divl
xor
dec
std
ffreep
push
xor
inc
push
not
adc
pshufw
sti
add
pop
dec
adc
jbe
jg
or
adc
lcall
es
movsl
cltd
push
mov
incl
fstpl
stos
xorl
ljmp
lea
scas
pop
cmp
push
icebp
lcall
jae
push
cltd
nop
outsl
xor
pop
or
jmp
lret
paddusw
aas
inc
cltd
sahf
mov
fists
lcall
inc
imul
add
or
dec
jl
pop
clc
decl
pushf
daa
jg
scas
jne
stos
bound
sub
nop
pmulhw
fnstcw
test
inc
cmp
cmp
movsb
gs
mov
in
jno
cmp
filds
mov
scas
shll
pop
jne
push
imul
jmp
ja,pn
cmp
adc
in
fldcw
xchg
rcl
pop
lret
and
mov
call
jns
dec
aas
cmp
sti
stos
jnp
jno
notl
pop
sub
xor
fs
cltd
jl
adc
sub
push
jmp
xor
ja
mov
repz
mov
push
aam
shlb
mov
and
jns
jl
aad
or
iret
roll
repnz
mov
xor
fidivrs
push
jnp
pop
call
mov
xchg
jp
mov
xchg
clc
cmp
jmp
les
out
dec
push
bound
lret
cmc
in
inc
cmp
mov
and
call
cli
pop
xchg
xchg
dec
sbbl
movb
sub
jle
sbb
decl
or
sub
mov
enter
xchg
test
int
mov
call
mov
ljmp
lock
push
and
push
addb
aad
cmp
enter
outsb
jne
fnstenv
jecxz
pushl
data16
cmp
or
pop
push
stos
inc
pushf
jg
outsl
and
cmpsl
fdivr
decl
sbb
lods
mov
in
pop
inc
movsl
aaa
mov
pusha
mov
std
lods
lock
inc
dec
sbb
aad
add
sub
decl
push
push
fsts
sbb
ja
xchg
push
sub
test
pop
das
pop
popa
loop
popf
mov
incl
in
mov
dec
or
dec
cmp
jb
inc
in
mov
xlat
les
cmc
outsl
jb
adc
adc
add
pop
clc
mov
sbb
xor
add
xlat
fsubr
icebp
mov
call
incl
xchg
xor
xor
xchg
cwtl
jp
and
pop
out
rcll
repnz
ss
leave
and
push
add
sti
or
pop
aad
cmp
ljmp
call
add
cwtl
mov
loope
divb
adcl
outsb
dec
les
mov
mov
ret
push
pop
sub
dec
lea
jne
lds
cmpsl
mov
sbb
fs
xor
sub
mov
dec
mov
iret
daa
test
mov
jmp
xchg
push
push
ja
sbb
fstps
mov
decl
push
jo
adc
mov
lock
xor
cmp
mov
add
or
call
xchg
out
cmpsb
movsl
push
cmc
xchg
call
cmpsb
mov
add
mov
scas
push
and
call
dec
mov
xchg
lods
les
sub
cli
xchg
rcl
pop
xor
iret
cltd
call
mov
adc
mov
jge
addl
cs
stos
cli
jmp
aas
pop
and
icebp
push
les
pop
cmp
cmp
mov
cmp
cltd
cmpsb
mov
pop
cli
pushl
scas
rol
movsl
or
out
pop
sbb
mov
mov
adc
mov
or
adcl
sbb
outsb
movsl
ljmp
pop
inc
fs
pop
mov
mov
incl
call
xor
add
or
jg
lcall
arpl
xchg
pop
fsts
scas
imul
push
dec
out
ljmp
sbb
jno
cld
jb
jge
cmp
pusha
dec
adcl
les
jp
nop
cmp
xor
mov
fdiv
cmp
movsb
mov
das
icebp
sbb
add
cli
cli
mov
jb
into
dec
sbb
aam
cmp
xchg
jnp
mov
leave
xchg
add
lret
cwtl
mov
or
sub
dec
decl
out
pop
xorb
cmp
pop
push
xor
adcb
push
mov
push
faddl
push
pop
hlt
aad
inc
shll
jns
xchg
dec
dec
jle
sub
mov
jno
sbb
mov
xlat
jp
mov
push
jb
inc
jno
pop
jbe
sbb
add
dec
cs
pusha
inc
mov
cmp
imul
inc
repnz
in
jnp
cmc
ljmp
lcall
hlt
fldlg2
adc
sbb
adc
adc
xor
jg
lcall
jp
pop
dec
adc
iret
jno
test
or
ret
jb
or
dec
cld
push
and
or
and
fst
push
push
scas
cmp
call
dec
pop
and
lds
adc
or
inc
lea
xchg
cmpb
clc
pushl
jbe
lods
push
xor
xor
jne
repz
or
jl
cmc
das
sbb
mov
test
jbe
push
bound
jns
inc
mov
loopne
mov
push
sahf
pop
mov
sahf
lods
pop
pushl
pop
cmp
std
pop
mov
arpl
mov
sar
int
mov
sub
adc
xchg
inc
push
push
sbb
call
aaa
xchg
sbb
popa
jl
mov
mov
mov
pop
shll
aad
sti
xor
or
ljmp
std
aam
ret
add
mov
push
and
lcall
fdivrp
out
mov
xor
inc
add
push
test
push
or
jmp
lret
push
add
mov
call
xor
and
xor
inc
sahf
fwait
mov
cltd
les
hlt
inc
pop
jg
sahf
ds
std
dec
or
xchg
mov
lahf
and
loopne
rcrl
inc
mov
mov
lods
inc
outsl
inc
ljmp
cltd
pop
inc
cmpsl
pusha
xchg
bound
in
jnp
ja
stc
push
mov
movsb
movsb
mov
dec
sti
or
lret
mov
push
xchg
adc
movsl
call
add
xchg
adc
jle
sub
mov
and
cltd
adc
push
enter
mov
lahf
ds
jg
ljmp
push
call
mov
xlat
movsb
jae
mov
cmp
sbb
xor
aaa
call
popf
sahf
pop
mov
pusha
inc
mov
xchg
fstp
fisttpll
subb
std
movhps
sbb
mov
dec
and
sbb
jg
mov
mov
aad
mov
mov
xchg
testl
xchg
push
movsl
movsl
call
pushf
dec
lods
int
adc
push
push
aas
mov
lods
xlat
decl
mov
mov
mov
rcrl
in
out
dec
push
mov
jne
lds
xchg
clc
dec
adc
and
cmp
or
mov
jae
fildl
add
mov
cmc
and
or
dec
loopne
call
test
cld
incl
pop
imul
outsb
lea
jl
or
decl
inc
mov
adc
cwtl
insb
cltd
mov
and
dec
jg
shll
les
hlt
mov
ljmp
stc
in
icebp
mov
add
mov
mov
addr16
jmp
insb
or
sarl
dec
test
pop
mov
loopne
jg
ret
dec
scas
rclb
push
or
cmp
daa
sbb
loope
push
jg
fwait
jb
stc
jnp
bound
popa
cld
add
mov
xchg
data16
mov
xchg
fs
xchg
pushl
imul
aam
and
jmp
fdivrl
decl
out
out
sbb
imul
mov
mov
outsl
icebp
lods
inc
ja
pop
test
push
or
outsb
lock
adc
into
cmp
outsl
idivb
adc
cwtl
jno
pop
dec
test
ljmp
ljmp
add
cmpsb
mov
das
cmc
inc
push
push
dec
mov
mov
sub
jg
push
loop
lret
aas
pushf
in
sub
ss
cmp
cwtl
mov
mov
push
mov
push
lods
adc
xor
outsl
shl
mov
mov
scas
jnp
xchg
xlat
jo
pushl
mov
loopne
ret
inc
pop
cmp
mov
mov
cld
leave
loop
or
ljmp
icebp
inc
out
sub
nop
in
adc
xor
imul
push
in
cli
sub
dec
mov
and
xor
shr
out
dec
ss
ljmp
jmp
inc
cwtl
sbb
or
pop
in
or
dec
jns
call
daa
repnz
mov
sbb
or
or
dec
shrl
rcrl
imul
lcall
cld
dec
lret
jp
ja
lret
mov
imul
clc
xchg
shrl
add
and
stos
inc
xor
jbe
data16
sbb
repnz
sti
iret
and
pop
daa
movups
out
and
das
cld
fwait
add
fistpll
jne
push
repnz
and
add
decl
sub
inc
inc
shll
pop
icebp
mov
ljmp
leave
mov
pop
nop
mov
outsb
push
and
jge
cmc
test
in
inc
outsl
std
call
sbb
iret
cmp
cmp
lcall
fnstsw
push
scas
push
lds
mov
jg
cmc
faddl
rol
or
xlat
incl
pop
fs
mov
mov
in
push
mov
pop
mov
outsl
icebp
roll
and
scas
lods
pop
repnz
jp
mov
mov
call
adc
mov
fcmove
sbb
mov
mov
mov
fucomip
pushl
and
fidivrl
pop
aam
or
and
add
sbb
es
call
xchg
fwait
push
lahf
inc
cmpsl
mov
cwtl
xlat
and
mov
pushf
decl
mov
ficomps
out
hlt
daa
pop
dec
sub
mov
inc
and
xchg
lret
xchg
rorl
ljmp
inc
and
cmp
imul
add
divl
mov
push
and
ljmp
cmpsb
loopne,pt
jns
push
mov
inc
xchg
push
popa
lock
ja
fidivl
pop
dec
test
popf
sbb
and
push
push
and
out
pushf
cli
outsl
cmp
hlt
dec
sbb
imul
inc
std
adc
add
xor
or
push
push
mov
pop
xchg
lcall
imul
test
fsubl
jo
sub
cmp
gs
jmp
mov
push
adc
push
pop
test
pop
cli
hlt
divl
imul
out
add
jg
mov
xchg
dec
shlb
fs
mov
pushl
sub
icebp
sahf
push
jo
dec
jno
aam
mov
inc
lds
incl
mov
jmp
das
sub
clc
pop
bnd
fs
lea
xor
sbb
jmp
xchg
subb
daa
sahf
scas
push
xchg
rorl
mov
lcall
jmp
in
sbb
xor
cmp
fcompl
dec
dec
icebp
movsl
sub
adc
jmp
cmp
mov
push
test
push
mov
xor
dec
dec
call
pop
push
mov
xchg
int3
push
jl
pop
and
ret
cmp
decl
lods
decl
sahf
outsl
jle
or
or
enter
mov
jne
fisttpl
fisttpll
test
cli
movsb
aas
xor
gs
repnz
pop
adc
cmp
jecxz
mov
adc
in
xchg
push
mov
sarb
push
cmp
sbb
push
jns
mov
std
inc
jae
fldt
in
sti
mov
out
lret
xor
js
icebp
jns
mov
mov
hlt
in
es
inc
addr16
testb
inc
mov
pushl
out
or
decb
dec
mov
out
adc
pop
mov
mov
jnp
fisubrl
add
push
fs
sub
into
in
fimuls
push
sbb
lcall
push
out
add
and
or
in
fstp
dec
shll
ljmp
jmp
lock
popf
out
inc
ret
jb
sub
loope
pop
repz
ljmp
inc
in
dec
mov
add
sti
in
push
int
sar
sbb
outsl
pop
or
mov
cmp
mov
xchg
pop
cs
mov
out
je
inc
and
mov
sti
fsubrl
mov
shrl
cld
ljmp
xchg
fsubrl
decl
push
cltd
lcall
push
popa
dec
mov
int3
call
arpl
cmp
xchg
or
nop
jae
cld
ljmp
mov
jp
xor
push
jg
or
cltd
pusha
int
inc
inc
test
dec
inc
fnstenv
adc
decl
jbe
jnp
movsl
adc
loop
movsb
pusha
mov
sub
cmp
lahf
fucompp
mov
lea
jbe
mov
add
cmp
xorl
jno
jbe
loope
add
or
ret
sbb
mov
dec
sarl
decl
mov
fnstcw
mov
and
jne
decl
jb
mov
push
jns,pt
push
cmp
mov
jbe
pop
xchg
into
in
mov
incl
les
sbb
xchg
cmp
xor
notl
das
lock
aas
sub
sub
jecxz
and
js
ljmp
fbstp
sub
inc
pop
mov
iret
and
mov
pop
mov
mov
sub
ja
xchg
pop
aad
add
add
pop
fimuls
sub
lock
daa
scas
xchg
aaa
jg
pop
out
cmp
xor
mov
inc
in
inc
pop
cld
decl
or
sub
daa
or
outsl
inc
outsb
mull
lcall
adc
out
dec
scas
and
lock
inc
push
sti
pop
sbb
inc
lcall
in
jle
mov
and
fadds
dec
xchg
mov
xor
and
mov
jno
jp
cmc
out
nop
repz
adc
mov
sbb
mov
sar
pushl
mov
icebp
ss
dec
xchg
xor
ret
or
iret
add
mov
jg
in
leave
jns
mov
imul
push
jnp
mov
jecxz
lcall
lcall
arpl
mov
mov
aaa
lret
fnstsw
int3
call
das
clc
fistpl
lds
cmp
mov
enter
mov
call
into
push
cmpb
int
or
enter
incl
jno
aam
lds
fistps
fisttpll
out
pop
pop
adc
lahf
jae
repz
nop
xor
incl
dec
inc
sti
jl
mov
ficomps
mov
bound
loopne
mov
inc
sub
cmpsl
cmp
cmpsl
lahf
and
es
decl
ret
mov
xor
scas
push
out
popf
jno
cwtl
cmp
jge
rorb
fsubp
stc
jge
fs
mov
sbb
sbb
lret
in
pop
mov
aad
loopne
jnp
push
mov
incl
mov
mov
cmp
pop
ret
sub
inc
lods
fdivs
test
jno
test
xchg
pop
scas
hlt
cld
daa
cwtl
test
cli
pop
push
clc
xchg
cli
pushl
popa
jge
jne
dec
push
push
xchg
jle
or
shlb
mov
add
mov
lcall
push
xchg
mov
pusha
pusha
in
lds
shrb
hlt
jl
popf
cmp
jo
sub
sahf
iret
push
lret
push
sub
xor
mov
fcoml
xchg
ret
leave
gs
insb
daa
out
into
pop
dec
dec
adcb
and
js
push
popa
xor
outsl
cld
jmp
pop
fdivs
fld
idivb
cmp
jle
push
outsl
std
incl
stos
adcl
adc
sbb
pop
lahf
dec
mov
push
les
sbb
lcall
lods
mov
imull
adc
jb
dec
fbstp
cld
push
fnstenv
jl
adcl
pop
loopne
cmp
dec
adc
ja
sbbb
outsl
push
xor
jg
push
push
cmp
jne
sub
cltd
pop
in
mov
decl
es
mov
lret
fisubs
pop
jns
jg
mov
xlat
push
cmp
inc
ja
pop
adc
sbb
ds
or
lcall
xchg
dec
nop
cli
adc
in
addr16
xor
icebp
or
lcall
cmp
jae
adc
icebp
xchg
int
test
int3
dec
out
sbb
and
xor
inc
cmpsb
mulb
sub
rclb
fnclex
sbb
adc
lock
jmp
mov
sbbb
jns
mov
cmp
std
pop
sub
adc
xchg
mov
int3
iret
decl
cmpsl
daa
mov
add
cmp
push
add
insertq
call
jg
xor
arpl
and
clc
cmp
shll
sbb
addr16
or
sbbb
xor
push
jae
lret
cltd
push
test
daa
and
into
fildll
aas
aas
pop
call
dec
sbb
push
mov
ljmp
scas
mov
int
aas
fsub
stos
xchg
andl
fbstp
jmp
popa
pop
in
sbb
dec
or
mov
xchg
or
jmp
mov
cmp
sti
movsb
add
dec
call
mov
mov
adc
inc
hlt
aaa
jg
or
outsl
shrl
xor
insb
lea
das
add
jmp
arpl
or
cmp
ret
fcoms
sahf
popa
mov
pop
les
enter
pop
xchg
pusha
pushl
cs
incl
ret
add
movsl
popa
lahf
cmpb
ja
outsl
les
or
gs
dec
push
std
push
call
fnstsw
mov
and
mov
mov
lods
lods
lcall
lcall
xchg
hlt
loopne
adc
xchg
decl
xchg
in
mov
pushf
mov
fidivrl
dec
mov
loop
loope
xor
mov
xchg
flds
adcb
mov
push
pop
cli
pusha
les
loop
and
test
jg
mov
or
or
lock
xchg
cmp
add
jg
fistps
add
lods
or
enter
imulb
and
cmp
add
push
pop
decl
cmp
out
mov
pusha
int
test
adc
daa
leave
jae
out
fwait
shl
imulb
jmp
jnp
xlat
and
xchg
aam
push
and
or
aad
pop
mov
ficoms
sbb
hlt
mov
xchg
in
jmp
aas
inc
fisubl
push
aaa
pushf
incl
dec
lcall
aaa
aas
loopne
ljmp
sahf
mov
jmp
adc
jge
mov
clc
mov
das
adc
cmpb
insb
std
loopne
test
mov
push
jae
ljmp
mov
mov
or
mov
pop
pop
stos
pop
or
adc
loop
lock
decl
jns
mov
and
push
push
sub
in
hlt
jnp
ds
cli
ret
in
dec
shl
and
or
call
out
ljmp
pop
and
int3
xchg
pusha
stos
push
sub
jecxz
cltd
jns
jmp
dec
push
repz
dec
fstpl
or
std
adc
adc
test
addr16
daa
sub
mov
lea
ljmp
push
sub
pop
cmp
std
and
xor
popa
push
xchg
pop
xchg
and
and
movsl
hlt
and
push
add
pop
or
sbb
sbb
dec
fadd
insl
ret
mov
inc
and
adc
xor
inc
pop
loopne
jmp
roll
inc
adc
cli
lcall
ljmp
pop
cld
cwtl
jge
gs
sub
call
pop
inc
sbb
inc
mov
sbb
sub
cmp
testb
lcall
or
jecxz
dec
push
out
int
loop
push
sarb
cmp
dec
sub
and
testl
aam
mov
sbb
add
pmovmskb
sbb
mov
push
or
xor
cwtl
xchg
aad
aas
mov
sahf
incl
mov
add
mov
mov
loope
jecxz
jle
pop
or
loop
ljmp
inc
ljmp
mov
mov
roll
mov
call
lret
scas
cmc
push
test
jo
test
stos
lock
inc
inc
adc
adc
ljmp
mov
int
adc
rolb
outsl
dec
pushf
jne
out
jg
sbb
add
call
fsubr
dec
jo
test
stos
dec
or
sub
notb
push
pop
movsb
out
jg
pop
aam
mov
lret
mov
stos
sbb
xchg
push
popf
pop
push
imulb
pop
push
push
std
incl
lret
push
mov
inc
loopne
sub
out
pushl
fiaddl
clc
cltd
pop
pop
cmp
mov
ret
xchg
inc
in
push
loope
rorl
int3
fwait
outsl
lcall
xor
bound
cmc
dec
lock
jecxz
jp
rcrb
pushf
xor
ljmp
aad
std
cmp
xor
ljmp
outsb
fiadds
sbb
dec
pop
jp
sbb
divb
ljmp
sub
fcom
xorb
lcall
ljmp
scas
xchg
sub
xor
fwait
daa
push
mov
dec
sub
clc
pop
xchg
xchg
and
ljmp
outsl
insl
roll
aad
iret
add
push
inc
leave
lahf
or
repnz
orl
jg
fbstp
cmc
push
jne
js
dec
pop
mov
jmp
idiv
lods
lea
jo
cmc
adc
mov
clc
les
test
nop
jo
inc
adcb
inc
mov
xchg
shlb
fistpll
lods
xchg
dec
inc
push
in
jg
daa
jle
pop
add
outsb
push
xchg
mov
jp
xchg
jne
std
jl
mov
and
jb
jge
add
and
leave
addb
pop
ljmp
jge
es
lds
mov
inc
inc
popa
rorb
pop
in
add
stos
xor
lods
jae
push
lret
xor
jg
ficoms
daa
jo
mov
popa
aad
scas
rorl
cld
add
dec
jp
jg
dec
pusha
test
je
rsqrtps
jno
cmp
in
into
or
pop
loop
pop
xchg
pop
mov
adc
or
sti
push
or
cmpsl
loope
sbb
adc
and
jecxz
and
xchg
icebp
jg
push
jl
xor
inc
ret
movl
ljmp
loope
lds
shl
hlt
xchg
mov
and
into
inc
cmpsl
ret
mov
into
sbb
xor
ret
dec
dec
push
add
jmp
inc
mov
cwtl
inc
sbb
and
dec
scas
jno
and
add
xor
or
scas
sub
sbb
pop
cli
pop
fcomps
dec
pop
push
sahf
cwtl
into
addr16
mov
jbe
leave
sub
mov
in
xor
icebp
sub
stc
mov
nop
repnz
cmpsl
lea
mov
pop
pop
inc
mov
arpl
test
dec
and
pop
mov
xor
pop
addr16
mov
and
out
mov
int3
jb
push
pusha
cmp
pop
mov
jl
and
push
call
fildl
xchg
fldenv
cwtl
xchg
iret
lods
mov
push
mov
pop
inc
int3
and
sar
push
movsl
out
sbb
jg
outsb
xor
test
mov
xchg
jle
mov
push
hlt
into
or
popa
adc
pop
call
ret
insb
lds
lcall
push
adc
sub
xchg
xchg
add
add
xchg
jno
jmp
aas
lods
sub
icebp
cwtl
adc
movsb
adc
jl
mov
inc
in
inc
sub
push
daa
sbb
pop
dec
popf
cld
lods
imul
shl
xchg
xor
lock
incl
stos
cmp
ja
jne
jns,pt
lods
hlt
dec
psubusb
sub
call
popa
jecxz
inc
jle
loopne
mov
push
dec
scas
and
sbb
cltd
outsb
incl
sub
cmp
std
fdivrs
stos
mov
or
jno
enter
push
jmp
sbb
mov
lcall
pop
dec
inc
adc
leave
jecxz
jecxz
repnz
mov
and
add
addr16
outsl
mov
shrl
pushf
loop
nop
loopne
lret
push
push
jg
lcall
cmpsl
movsb
mov
jg
xchg
mov
lods
stos
in
xlat
lods
adc
mov
cmpsl
jmp
test
ljmp
ljmp
cltd
shll
adc
and
jg
dec
test
adc
mov
movsb
mov
fildl
lret
push
lcall
call
and
andb
cmp
scas
mov
decl
jnp
push
fsts
jno
mov
and
mov
ljmp
cld
mov
jl
jge
cmp
in
scas
cwtl
pop
jae
cli
sar
jecxz
adc
add
lods
jmp
int3
jmp
mov
pop
add
push
lcall
movsb
lcall
and
mov
fs
jp
je
mov
pop
popa
push
adc
and
imul
fdivs
jg
jg
jo
dec
cmp
fwait
add
dec
popa
xchg
pop
in
cld
imul
decl
outsl
sub
pop
mov
scas
push
mov
push
sub
icebp
xchg
mov
pop
xchg
lcall
fnstsw
mov
push
pop
dec
dec
push
and
ljmp
jg
idivl
cmp
inc
xor
xchg
jle
rclb
and
mov
loop
pop
stc
dec
cmp
jns
insb
xor
mov
rorb
mov
lcall
adc
icebp
hlt
jp
test
mov
mov
in
pop
pop
inc
ljmp
hlt
enter
jmp
xchg
add
out
bound
mov
aam
mov
jecxz
mov
mov
dec
xchg
mov
jg
mov
lret
fbstp
ds
aad
push
cs
std
mov
arpl
and
xor
xor
and
leave
add
call
popf
lds
sbb
mov
inc
push
sarb
adc
xor
ficoms
aaa
leave
leave
sarb
decl
mul
pop
clc
mov
push
repnz
mov
add
xchg
mov
xor
call
ljmp
xor
arpl
cs
insb
and
push
scas
aaa
push
adc
or
out
ss
push
pop
mov
outsb
cwtl
mov
cmp
adc
sub
mov
sub
mov
jecxz
sbb
andl
stc
mov
cmp
stos
outsl
lret
mov
clc
jmp
mov
loope
lahf
aas
pop
or
pushf
jmp
aaa
test
dec
sti
stos
or
fistpll
std
fstpl
mov
loop
lock
inc
mov
push
push
adc
inc
das
lds
adc
dec
or
fldt
rclb
and
sahf
inc
aas
mov
nop
or
scas
lock
aaa
lods
data16
jne
je
pop
dec
shlb
hlt
outsl
icebp
incl
call
hlt
call
mov
loop
xchg
addr16
ljmp
jnp
frstor
or
cwtl
nop
pusha
iret
pop
or
stc
out
imul
insl
incl
bound
or
lock
clc
lret
bound
enter
pop
xchg
cmp
mov
dec
into
ret
sbb
push
cli
xchg
popf
ret
inc
push
hlt
sub
dec
sbb
ror
mov
in
mov
lret
lea
cmp
pop
adc
cld
push
out
mov
and
add
repz
cli
incl
sbb
inc
aam
mov
sbb
aas
mov
repnz
cld
lcall
jbe
push
lods
leave
addr16
imul
lea
hlt
sbb
dec
inc
std
pop
push
mov
adc
icebp
ljmp
jns
sbb
cmp
fisttpl
xor
pushl
lds
lret
mov
sub
xchg
push
int3
jns
icebp
inc
test
sbb
push
call
loopne
mov
sub
and
and
jge
outsl
ret
aas
xor
repnz
pop
mov
xchg
pusha
push
lock
in
int
xor
jbe
mov
inc
test
imul
aaa
clc
ljmp
push
pop
jne
mov
xchg
inc
jmp
leave
mov
push
call
cmpsl
lahf
call
mov
cmpl
test
ss
mov
sbb
and
cmp
push
fisubl
add
xor
aad
xchg
sti
cmp
iret
adc
cs
ljmp
cwtl
pop
repz
inc
daa
cmp
leave
push
push
nop
push
clc
jp
call
sub
mov
xorl
hlt
xchg
mov
push
adc
lods
cwtl
pusha
push
dec
incl
outsl
mov
or
inc
icebp
pop
jne
push
loope
push
jg
mov
leave
jmp
sub
cmpsl
data16
mov
and
call
mov
sub
inc
push
jno
adc
cli
sbb
mov
add
call
scas
dec
testb
mov
in
pop
mov
or
mov
pop
out
cld
push
pop
ss
imul
jge
loop
imul
jle
lock
jmp
mov
movsb
mov
mov
push
stc
stc
jb
jp
loope
adc
fistpll
popf
pop
lods
scas
incl
orl
push
mov
jmp
fnstsw
adc
mov
fstl
sbb
fs
cltd
clc
sub
call
test
rcll
mov
insl
std
pop
mov
push
lcall
and
xor
inc
inc
mov
stos
fisubrs
cmp
sub
mov
inc
sbb
adc
push
or
add
clc
stos
adc
mov
push
jp
or
ljmp
sahf
aas
push
lock
data16
xchg
hlt
nop
lods
repz
push
jg
leave
hlt
test
in
sub
push
lcall
mov
movsb
fistpl
ljmp
mov
cmp
inc
inc
fistps
cld
jmp
packuswb
pop
xorb
xor
inc
jb
inc
cmc
lock
iret
pushf
jne
jg
lret
push
dec
pop
fiadds
mov
adc
ljmp
iret
test
jb
aam
jecxz
sbb
push
push
dec
pop
scas
mov
clc
pop
cmpsl
xchg
mov
call
fisubrl
cmp
cmpsl
pop
push
xor
imul
xor
int
inc
inc
mov
ljmp
push
dec
and
leave
push
cld
push
push
push
daa
adc
jg
dec
insl
scas
lock
lcall
fadds
std
pushf
or
test
jcxz
mov
sbb
or
jg
mov
aaa
jae
jecxz
inc
jae
fisubrl
popa
push
repnz
call
roll
ja
pusha
ficoms
pop
jmp
dec
into
dec
jecxz
pop
sub
fnstcw
out
mov
mov
imul
loope
mov
cmp
xor
jb
adc
shrl
pop
mov
xchg
mov
mov
loopne
aad
jnp
jg
jmp
and
fwait
sub
mov
xchg
ret
mov
xchg
dec
imul
jg
pop
xchg
movsw
pop
jbe
jne
in
jo
push
or
mov
and
decl
fdivs
lret
imul
leave
xor
cmp
dec
sub
stos
decl
and
test
cmpsb
rcr
out
test
dec
cld
orb
or
pop
mov
jg
cmp
or
adc
lret
lret
loope
sbb
pusha
arpl
mov
mov
shl
addr16
shl
ss
stos
mov
sbb
or
jno
pop
je
mov
mov
mov
mov
mov
adcl
shll
mov
and
adc
mov
je
iret
sbb
scas
pop
mov
mov
pop
negb
add
xchg
xchg
or
js
jg
fs
ljmp
mov
in
xchg
jmp
out
fcoms
sbb
jno
scas
out
fmull
fsqrt
std
les
inc
incb
and
bound
lcall
sbb
fs
lcall
xchg
mov
sahf
inc
das
mul
std
inc
pop
icebp
sub
shlb
cmp
call
adc
mov
addl
pop
js
and
incb
inc
mov
add
testb
clc
or
in
push
sub
mov
or
adc
lock
push
in
aad
mov
lods
sub
lds
fidivrl
pop
xor
scas
mov
sarb
mov
xchg
sbb
loope
jns
sub
jp
sub
sbb
pop
pushf
test
jo
idiv
repz
mov
shlb
jg
das
mov
aad
xchg
outsb
xchg
pop
fxam
cmp
arpl
out
scas
ret
push
inc
xchg
andb
sub
pop
rclb
mov
jb
mov
sub
lcall
and
mov
dec
int3
dec
ljmpw
inc
jbe
or
fucomip
sbb
loopne
mov
sub
pop
mov
xchg
sbb
inc
push
jnp,pn
aaa
mov
mov
int3
mov
sarb
out
add
add
je
inc
and
mov
in
sub
in
pop
add
push
lcall
stc
xor
mov
out
or
fmul
lods
loop
mov
aam
test
inc
inc
jecxz
daa
mov
das
icebp
mov
imul
popf
call
mov
mov
and
xlat
jo
push
out
popa
jae
cmp
jmp
int3
push
popa
loope
mov
xchg
fnstsw
ret
pushl
scas
add
adc
ss
scas
jne
sbb
dec
fisubrl
inc
push
dec
or
jmp
jl
aam
mov
stc
mov
daa
xchg
add
add
mov
push
mov
add
and
imul
cld
mov
rcll
cmp
push
jg
ljmp
mov
iret
mov
sbb
incl
sub
fmulp
repz
or
lcall
test
xor
stos
jp
lods
pop
mov
add
ret
add
dec
roll
in
incl
dec
movsl
adc
das
fnstcw
add
mov
loopne
mov
dec
stc
ret
cmp
test
ljmp
mov
pop
ret
and
idivb
sahf
inc
cmpsb
add
and
ljmp
fwait
mov
jns
mov
add
int3
push
xor
pushl
xor
jae
outsb
sbb
mov
xchg
js
stos
fwait
jecxz
stos
out
fucomip
mov
mov
push
lret
xor
cmp
pop
inc
mov
mov
aaa
lds
lds
scas
das
or
cli
incl
mov
test
cltd
or
sub
adc
dec
add
pop
call
insl
add
data16
hlt
mov
mov
mov
push
insl
outsl
and
mov
sbb
ret
jne
enter
clc
mov
push
jge
aas
cmp
mov
outsl
hlt
test
adc
and
rorb
in
dec
push
xchg
enter
test
inc
in
mov
loop
cmp
xchg
push
lods
mov
inc
add
mov
push
pop
jp
add
and
cmp
bnd
mov
xor
jmp
adc
sbb
or
xchg
and
orb
cmc
jmp
std
decl
or
or
lcall
pushl
cmc
jl
mov
dec
add
add
jno
mov
cld
inc
and
add
imul
test
popf
xor
mov
mov
sbb
pop
and
icebp
inc
sarb
shll
xlat
imul
sar
shlb
ljmp
rorl
or
cmp
or
cld
sbb
das
aad
jns
and
out
cmp
push
push
incl
addr16
ljmp
mov
in
cmove
adc
lret
mov
xor
pop
sub
leave
mov
ljmp
mov
xchg
inc
lods
pusha
push
mov
cmp
das
sub
sub
sbb
fucomip
push
dec
insb
imul
jns
xor
adc
dec
inc
insb
icebp
push
push
dec
xchg
mov
imul
push
ror
mov
jl
rol
cmc
aad
mov
das
icebp
jmp
or
xlat
and
add
jle
out
imul
fsubrs
or
xor
mov
add
or
xchg
adc
adc
xchg
cli
mov
sub
std
inc
cmpsb
or
mov
repz
mov
jmp
cmp
push
ss
imul
int
pop
imul
scas
testb
cld
out
orb
or
test
sarl
mov
scas
inc
idivl
push
aaa
cmp
dec
jecxz
cld
fistpll
cwtl
push
cmp
ds
cmc
adc
testb
xchg
mov
mov
and
into
xchg
iret
das
xchg
ror
dec
push
mov
xchg
mov
popa
decl
std
lcall
and
dec
pushf
sbb
mov
leave
loopne
sbb
add
cmp
test
mov
add
inc
xchg
inc
mov
pop
lcall
mov
cmp
xchg
adc
mov
clc
sub
fisubrl
shlb
decl
mov
imul
addl
push
in
or
xchg
clc
pop
leave
cmp
cmp
mov
push
push
nop
jl
pop
sub
adc
mov
pushf
add
adc
pushl
lods
xchg
inc
adcl
fnstsw
xchg
sbb
test
jmp
mov
mov
mov
jno
xchg
loop
mov
inc
aam
jge
hlt
test
jg
push
cmp
push
or
mov
dec
fcoms
pop
loop
sub
fadd
or
sbbl
cwtl
decl
test
mov
and
je
xchg
jns
jb
pop
sbb
ljmp
add
and
or
fcom
inc
neg
mov
fcomps
mov
inc
inc
stos
sub
sti
add
push
sbbb
dec
enter
outsb
cmc
xchg
rclb
jg
frstor
ja
andl
push
lret
xor
filds
fs
mov
adc
push
xlat
fndisi(8087
mov
in
lods
es
push
loope
adc
lcall
cmp
sbb
cmc
ss
leave
pop
dec
mov
ficomps
sarl
xchg
inc
xor
push
ds
sub
aas
xlat
cmp
mov
inc
movsl
iret
pop
fimull
jo
dec
pushf
call
lea
or
push
add
std
incl
into
mov
cld
pop
stos
sbbb
jmp
lcall
lods
mov
les
adc
lahf
adc
lea
mov
pop
xor
pop
sub
jnp
jno
fisttpl
test
pop
stc
ljmp
aam
cs
loope
pop
cli
mov
loope
pop
sahf
sbb
inc
dec
frstor
pop
mov
mov
imul
inc
jp
clc
ret
xor
sbb
imul
adc
mov
xor
jnp
pusha
mov
and
outsb
popf
cli
xchg
mov
and
rolb
dec
mov
lcall
jp
rcr
je
mov
xchg
add
push
and
push
filds
jg
pushf
push
sbb
xchg
pusha
sbb
lods
or
shrb
gs
loop
fistpl
push
push
hlt
pop
jnp
inc
pop
scas
daa
push
cmp
pop
mov
daa
scas
sti
dec
std
shrb
add
cmpsb
mov
fistpll
pop
lcall
pusha
dec
data16
xlat
test
pop
stc
mov
pushl
lds
xor
adc
ret
xchg
or
push
sti
cs
cld
popa
dec
test
int
inc
das
cld
pushl
jnp
ja
aas
xchg
test
mov
mov
add
fcos
jmp
incb
mov
cmp
ja
mov
mov
cmp
xor
pop
mov
cmp
xor
shll
jae
inc
jp
imul
test
das
adc
loopne
pop
push
call
mov
idivb
and
mov
xor
or
jp
pop
jge
call
call
fwait
mov
mov
xlat
sub
dec
in
adc
decl
addr16
ds
out
fsubrl
or
cmc
mov
or
pushf
push
mov
dec
loop
cld
mov
shll
mov
jg
enter
dec
popf
cmpsb
mov
and
inc
fs
lahf
dec
pop
mov
sub
mov
mov
sarl
fmull
fidivl
cmp
test
mov
xor
dec
add
mov
sub
iret
fstps
inc
popf
dec
cmp
lcall
pop
cmpsb
ret
pop
sbb
jmp
sbb
loopne
or
sub
repnz
fisttpl
ds
pop
jno
adc
test
aas
hlt
pop
cli
shlb
mov
lods
mov
jge
sub
and
ljmp
sub
xorl
push
mov
cmp
jnp
jg
sarb
dec
adc
adc
repnz
add
inc
or
pop
loope
movsb
stos
xchg
in
lcall
leave
hlt
js
jno
data16
mov
push
std
jae
sbb
loopne
mov
mov
push
lcall
adc
fs
movsl
imul
rcll
mov
push
aas
adc
and
sub
shll
dec
lock
loope
xor
rcrb
jmp
imul
scas
xor
xchg
push
push
mov
mov
sbb
push
fisubrl
cld
mov
call
and
mov
jns
xor
mov
out
adc
out
lea
mov
cmp
push
ret
pop
dec
sub
add
cld
mov
clc
mov
add
sbb
pop
push
inc
test
aam
sbb
jle
pusha
inc
push
std
pushl
cld
mov
dec
mov
push
adc
xchg
aas
das
push
jae
push
stos
nop
ljmp
pop
rcrl
scas
int
outsl
nop
clc
jmp
push
das
dec
jle
mov
adc
lds
sub
jbe
popf
or
jno
xor
sub
jg
fisttps
xchg
enter
lret
mov
lods
int
mov
pop
sbb
jae
sbb
xchg
inc
lods
aam
push
mov
cli
decl
xchg
and
jmp
xor
xor
cmpsb
incl
xor
jecxz
popa
mov
pop
sbb
cli
pop
shlb
adc
mov
test
js
fistpll
and
pop
sbb
leave
cmp
push
push
pushf
mov
daa
rcl
push
fucomip
jg
add
mov
inc
mov
xchg
or
inc
cmpsl
fs
dec
ljmp
decl
stc
pop
enter
mov
dec
sub
ss
test
jmp
in
aas
cwtl
in
inc
pop
fwait
sbb
jl
hlt
push
push
and
hlt
add
xor
movsl
ja
in
ret
cld
in
das
cmc
incl
gs
push
test
push
lods
mov
jmp
outsl
icebp
lcall
push
push
add
dec
loopne
divb
decl
sbb
popf
mov
jl
push
nop
add
sbb
lds
push
push
jb
imul
cmp
pop
in
out
sar
or
push
mov
sbb
sbb
das
add
sbb
and
mov
mov
inc
sarl
dec
mov
inc
test
add
lcall
loope
fisubrs
imul
imul
mov
icebp
call
xchg
add
mov
lods
add
fidivrl
xchg
in
les
outsl
int3
scas
scas
mov
xlat
xchg
decl
mov
jae
jecxz
std
add
stc
cmp
aas
mov
incl
and
nop
imulb
and
xchg
cmpsb
insb
push
fsubrl
pushf
mov
xchg
xchg
mov
fiaddl
mov
add
jo
aad
aas
pop
lcall
test
jmp
mov
leave
stos
lahf
int3
subl
scas
out
aas
push
mov
inc
xchg
xchg
fistps
dec
push
add
inc
ja
scas
or
das
mov
xchg
addr16
stc
clc
call
cmpsl
mov
cmp
icebp
cmp
sbb
shrl
push
call
movsl
fdivrl
fidivrs
movsl
inc
add
jb
lcall
jmp
dec
cli
icebp
lds
dec
in
arpl
lcall
adc
mov
rcll
xchg
dec
mov
es
and
adc
sbb
call
pushl
pop
arpl
mov
push
mov
lcall
jae
jns
decl
decl
xchg
push
mov
jge
fs
stc
push
stos
mov
out
ljmp
ljmp
and
sbbb
pop
mov
push
call
outsb
adc
mov
mov
pop
pop
pop
inc
fstl
fnstsw
add
or
loop
cld
lcall
mov
dec
je
push
popa
pop
pop
adcb
pop
mov
pop
decl
mov
mov
mov
movsb
dec
jne
dec
into
decl
xor
push
cmp
mull
sahf
and
lret
mov
ret
xchg
jecxz
loopne
jmp
add
mov
adc
fists
mov
mov
push
xchg
mov
add
xchg
xchg
mov
out
aam
dec
mov
rcll
cmc
xchg
sbb
jbe,pn
aaa
jns
and
imul
pavgw
outsl
pop
ljmp
mov
cmp
mov
pop
loop
decl
jmp
xor
mov
inc
fstl
add
fucomip
lea
mov
cmp
dec
dec
scas
adc
mov
inc
ljmp
shlb
stos
push
and
jns
jae
rep
mov
das
mov
xor
and
fidivrl
xor
divl
aad
mov
je
gs
jmp
fisttpl
dec
jae
shr
movsb
movsl
pushf
inc
xor
sar
xchg
or
jg
mov
outsl
lock
arpl
fstps
movsb
and
imul
inc
sub
sbb
mov
adc
pop
mov
xor
outsl
push
mov
cmp
or
jle
fnstcw
ja
jae
fisttpll
dec
or
in
in
dec
sbb
jmp
pop
cmpsb
in
ss
popa
inc
jns
ss
xlat
es
gs
inc
cmp
add
pop
add
pop
xchg
aad
add
incl
push
icebp
cmc
cmpsl
lock
pop
jne
mov
cmp
cmpsb
adc
sub
out
imul
and
inc
mov
add
xchg
aam
lock
pop
jmp
sbb
mov
dec
rcrb
rcrb
cmp
xor
lret
ljmp
inc
xorb
add
lret
out
mov
sbb
rcll
sti
jb
mov
pushl
push
cmp
mov
out
lcall
and
sbb
sub
call
cltd
out
mov
lea
ljmp
push
daa
dec
sbb
stos
mov
lahf
pop
lods
sbb
stos
cmp
sarb
add
mov
xchg
cmp
or
mov
insb
hlt
xor
xchg
xchg
nop
dec
cmp
cmpsb
icebp
lcall
and
scas
in
test
cld
aam
enter
xchg
fstps
mov
xchg
ret
in
mov
mov
iretw
gs
push
xchg
ret
or
mov
scas
or
mov
jmp
sub
sub
and
lods
fbld
or
mov
fs
je
add
sub
outsb
sbb
cmpsb
pop
xchg
mov
lds
mov
js
mov
xor
lcall
or
xchg
xorb
int
add
jnp,pt
cs
stos
ret
sar
mov
mov
ljmp
incl
ja
cli
outsl
mov
jnp
cmp
xor
adc
shlb
fisubrl
ljmp
pop
lods
inc
call
orb
mov
frndint
call
cmovge
cmp
dec
shl
cld
cli
hlt
sar
decl
fwait
loop
pop
lcall
rorb
xor
stos
paddq
push
mov
mov
cmc
mov
xchg
nop
adc
je
adc
mov
lcall
push
test
loopne
mov
insl
sbb
push
pop
pop
xchg
dec
xor
cmp
repz
stos
decl
shll
cwtl
orb
mov
pop
or
xor
test
lcall
fsubrs
or
sub
cmp
scas
pop
in
jle
sbb
push
scas
sub
call
rorb
jp
jmp
adc
imul
loop
dec
in
mov
pop
imul
incl
out
in
mov
out
mov
inc
xor
cli
call
out
add
push
out
fs
lods
mov
std
xchg
into
mov
bound
jbe
aam
push
push
inc
add
loop
cmp
lea
popa
jg
inc
rcll
loop
pop
ror
xor
mov
mov
fists
xchg
mov
cmpsb
push
xchg
xlat
xlat
push
into
add
arpl
mov
pop
cmc
pusha
stos
jl
fistpll
mov
mov
push
xchg
add
pop
nop
push
lret
xchg
mov
jo
dec
mov
push
sbb
test
xchg
or
lret
fs
in
or
push
jmp
adc
jl
aaa
mov
mov
decl
in
jle
sbb
xor
or
negl
add
and
out
mov
jmp
jbe
imul
lods
jnp
jb
dec
cmpsb
jmp
mov
call
movsb
xor
ljmp
lcall
mov
mov
popa
adc
inc
das
xor
je
fwait
mov
dec
incl
rcrl
mov
insl
and
lret
push
push
add
jl
sub
into
lahf
rorb
ljmp
pop
ficoms
sub
mov
mov
jae
negb
mov
jmp
fdivrl
sub
dec
pop
cmpsl
push
popf
xchg
push
insb
or
mov
test
add
and
pop
frstor
fdivp
pop
adc
inc
jmp
stc
sub
add
or
jmp
adc
aaa
clc
mov
je
mov
xor
int3
fmul
jmp
cmpsl
test
mov
das
shl
rcrb
adc
ficomps
fwait
jg
lcall
movsl
push
out
inc
lds
out
pop
adc
decl
cld
test
xor
push
dec
mov
cwtl
cmovle
pop
ja
pop
out
insb
fst
out
mov
pop
insb
aad
imul
psrlw
mov
shll
pushl
or
xor
mov
xor
dec
dec
dec
js
sbb
je
mov
sub
pop
add
jecxz
loope
mov
pushl
push
out
popf
jb
roll
and
pop
stos
add
jne
rclb
mov
cmc
decl
lock
mov
jmp
ja
incl
xor
ljmp
xchg
push
jno
fwait
es
std
push
cmp
stos
and
mov
cli
pushl
in
cmc
mov
add
mull
dec
jmp
adc
mov
or
addr16
shrl
mov
dec
nop
mov
insb
push
hlt
repnz
mov
gs
mov
and
pop
mov
jg
fisttps
faddl
outsl
rcr
or
fdivl
xchg
fsubrl
or
inc
vshufps
pop
stc
and
mov
jns
pop
sbb
adc
mov
xor
adc
sbb
cld
xchg
cmp
int3
pushf
stos
movsb
inc
daa
data16
incl
xchg
xor
ror
jne
ds
jg
gs
jns
fsubrl
aas
fwait
dec
lcall
push
dec
fwait
aas
and
cld
add
cmpl
push
repz
jg
incl
idivb
fwait
sub
sbb
mov
xchg
jge
jg
xchg
lret
mov
add
les
je
lcall
lods
or
arpl
cmp
xor
sbb
sbb
mov
imul
pop
clc
mov
mov
leave
shll
xchg
or
repz
dec
mov
lcall
xchg
loop
mov
pop
sub
iret
in
mov
dec
pop
ljmp
rorb
mov
ljmp
daa
std
inc
int3
addr16
dec
cli
mov
clc
cwtl
pop
jae
fnstenv
mov
dec
addr16
inc
cmp
cmp
bound
inc
jge
pop
and
sub
pop
dec
sub
stc
ljmp
inc
hlt
push
out
fstl
cmp
scas
xor
in
sbb
les
jle
push
jp
mov
scas
stos
and
xchg
fsubp
sbb
mov
cwtl
jg
sar
xor
mov
sub
shl
lods
into
sarl
std
outsl
or
les
mov
cmpsb
pop
mov
mov
lret
sub
shrb
push
lock
out
push
and
cmp
cld
mov
in
fildll
mov
call
pushf
push
ss
lcall
pop
test
xlat
adc
mov
inc
mov
jbe
adc
decl
dec
jno
js
xchg
call
popa
jmp
mov
cmp
sbb
idiv
push
punpckldq
dec
push
cmp
sbb
or
incl
jle
in
pop
in
insb
sub
add
mov
xor
push
and
lods
hlt
pop
push
aas
add
or
enter
hlt
pop
inc
pop
orb
pop
repnz
fwait
movsb
incb
ljmp
mov
jg
std
cmp
test
mov
rcrb
int
scas
adc
stos
dec
cmp
sbb
and
popl
es
lcall
sbb
jmp
jae
xchg
pop
push
inc
push
lahf
xor
movsb
lcall
loopne
push
ljmp
decl
das
popf
popa
add
adc
arpl
pop
add
cmpsb
sbb
es
mov
mov
decl
or
iret
xor
ret
adc
lcall
xchg
aad
cmp
fidivrl
fists
and
fs
jmp
nop
jo
pop
mov
push
stos
dec
or
lock
lcall
jmp
aaa
lods
call
sbb
or
aad
sub
cmpsl
mull
sub
mov
ljmp
cltd
xor
jp
das
scas
in
fwait
dec
jl
sahf
jo
cltd
xchg
in
fucomip
lock
adc
pop
pop
mov
ret
push
lock
pushl
clc
test
frstor
mov
rcll
fld
std
mov
mov
mov
jg
aad
test
mov
or
inc
adc
aam
lcall
pop
call
cmpsl
xchg
dec
repnz
inc
inc
js
stos
int3
jb
jmp
cld
sti
dec
pushl
lret
shrl
insl
negl
outsb
push
xor
call
enter
sub
mov
xchg
imul
cld
add
mov
insb
enter
out
stos
cmp
loope
xor
test
adc
fldt
dec
and
test
jmp
ret
add
mov
dec
in
test
in
mov
rorb
lcall
es
in
jns
push
push
mov
movsl
lock
decl
cmp
and
aam
inc
or
je
cli
je
dec
fs
inc
into
cmp
or
sbb
dec
sbb
adc
fisubrl
repnz
lods
in
add
test
test
fidivl
jg
inc
ret
jg
scas
add
or
fldenv
jo
xchg
sbbb
loop
ljmp
stos
add
orl
mov
mov
lds
jl
xor
mov
push
gs
mov
nop
mov
xor
jmp
adc
sti
sbb
and
lcall
pop
cmp
movsb
call
decl
dec
out
ljmp
adc
push
shrl
or
push
stc
mov
iret
xchg
inc
cwtl
iret
aas
stc
xor
addb
jecxz
sbb
mov
std
xchg
or
sbb
cmc
cmpsb
fldt
lock
or
scas
dec
daa
rep
pop
notb
push
mov
ljmp
icebp
sahf
fsubl
das
jp
pop
shr
imul
jecxz
mov
add
sbb
imull
inc
pop
cli
jg
das
fimuls
mov
xor
jge
mov
imul
jmp
push
xor
insl
clc
adc
shrl
stc
pop
xchg
cmp
jge
clc
xchg
loopne
dec
call
cli
movsb
xchg
ljmp
sub
dec
not
pop
out
imul
or
push
test
shl
pop
in
mov
lods
shrb
sub
addl
or
pushl
jmp
test
ja
sti
andl
test
aad
ljmp
ud0
lcall
shl
jbe
pop
js
mov
or
or
lods
ds
mov
xchg
mov
inc
pop
repz
mov
jae
pop
cli
mov
dec
push
sub
loopne
dec
in
xchg
das
les
push
incl
add
aad
in
and
daa
stos
ret
dec
sbb
dec
pop
jb
into
aam
or
outsl
call
xor
mov
lea
shll
fistpll
push
xchg
jmp
and
mov
inc
sbb
sub
cmpsl
mov
mov
icebp
incl
mov
out
inc
test
inc
sub
test
ljmp
push
xor
fdivl
scas
fmull
call
and
mov
test
adc
pop
inc
lahf
movl
jg
out
adc
stos
data16
inc
lea
jno
loope
and
jg
ljmp
flds
add
mov
pusha
enter
cmpsl
repnz
test
pusha
loope
repnz
sub
lock
lods
sbb
popa
sbb
or
test
lods
push
mov
and
popl
sub
xor
inc
mov
inc
fsubr
or
insl
xchg
je
mov
out
ljmp
xor
mov
adc
add
jmp
sbbl
xor
das
sub
lcall
loop
pusha
ljmp
mov
call
jmp
testl
std
hlt
pop
pop
pusha
sub
test
xchg
cmpb
loopne
adc
dec
clc
dec
hlt
pushf
xchg
lret
pop
in
sub
cmc
std
sub
push
cmp
jg
filds
sub
cmpb
sub
sbb
or
jae
sub
mov
dec
rcrb
xchg
fldcw
mov
decl
sbb
notl
mov
insb
cmp
sub
test
cmp
ljmp
insl
in
jns
int3
dec
outsl
add
cmp
repz
out
mov
and
fidivrl
inc
and
clc
mov
push
jno
cltd
mov
fmuls
ss
roll
test
lcall
sub
mov
out
mov
in
fs
or
inc
or
xchg
ret
arpl
data16
inc
filds
leave
fucomip
xor
dec
fsubrl
fimuls
mov
pop
jl
add
jmp
nop
scas
icebp
lea
and
mov
push
or
idiv
hlt
das
cmc
das
int3
mov
test
loopne
pop
adc
enter
pushf
ljmp
mov
xor
inc
pop
shlb
std
popa
sub
bnd
xchg
xor
pop
int
pop
inc
ljmp
add
mov
out
push
sub
cwtl
sub
xorb
shll
cmp
jno
or
pop
into
dec
mov
push
dec
ret
mov
push
adc
or
stos
das
insb
fdivr
decl
cmc
mov
iret
out
dec
out
insb
mov
test
je
into
jle
call
push
jmp
ret
jo
lcall
std
and
mov
das
sti
mov
cmp
test
jge
hlt
push
jge
data16
pusha
mov
insl
cmp
inc
shrb
lea
lods
pop
incl
cmp
and
push
out
std
rorb
nop
jnp
or
inc
mov
sbb
add
mov
push
xor
rorl
sbb
xchg
dec
test
pop
sbbb
fistps
add
das
int3
movsl
mov
loope
mov
repz
filds
mov
aaa
scas
ds
rcrb
test
mov
pop
cmpsb
loopne
aad
out
js
test
clc
orl
jl
and
jnp
call
movsb
aad
imull
pop
fmull
inc
mov
lcall
ljmp
shlb
iret
scas
cmp
shrb
outsb
std
leave
dec
lds
decl
sti
push
cmp
cli
mov
imulb
pop
sub
ljmp
sub
xor
mov
jno
sar
call
xchg
fstps
jmp
cmpsb
ljmp
push
fnsave
cli
or
ror
cld
call
push
setne
xor
push
xchg
and
xchg
lcall
xchg
mov
iret
push
cmp
sahf
and
in
jg
mov
inc
inc
nop
xchg
mov
mov
mov
pop
leave
fdiv
ficompl
mov
xor
pop
arpl
imul
ja
pop
cli
cmp
add
clc
push
push
mov
daa
in
jno
mov
out
or
mov
lcall
or
loopne
in
sub
stos
into
sar
sub
incl
pop
fs
xor
cmp
imul
inc
xchg
js
testb
out
ja
jl
incl
mov
div
mov
movsl
dec
and
sbb
add
decb
js
sbb
test
jg
not
cltd
add
rcr
push
jae
lods
cmp
push
mov
jge
pop
push
adc
lcall
push
jecxz,pn
adc
movsl
icebp
pop
cmp
xchg
pop
rolb
std
pop
lret
dec
cld
ljmp
push
pop
repz
ret
pop
mov
dec
rcr
pop
fidivrs
pop
cmp
push
popa
les
cmp
sbb
push
sub
xor
outsb
aam
lds
sub
das
jb
push
out
and
mov
arpl
fiadds
inc
stos
subb
std
out
mov
mov
or
lahf
lods
fdivs
jns
int3
pop
shr
imul
rclb
lock
cmp
cmpsl
out
jecxz
jl
mov
lods
push
mov
cmp
call
test
xlat
sti
push
scas
stos
xor
mov
incl
jg
daa
icebp
imul
test
cmp
adc
and
pop
ret
sti
sbb
test
leave
shll
add
das
sbb
add
xor
mov
aaa
stos
ljmp
mov
aas
cli
icebp
test
inc
fisttpl
rol
mov
pop
mov
movsl
mov
cmc
incb
inc
hlt
cs
inc
rclb
sbb
test
or
repz
push
incl
incl
lods
pop
fwait
adcb
pop
das
mov
lret
outsl
and
cmpsb
out
call
incl
je
jno
pop
mov
inc
and
sub
and
mov
inc
call
jae
jns
cmp
mov
adc
in
jmp
jne
or
mov
popf
into
sti
lods
lods
jns
sbbl
jg
add
ds
and
sbb
fs
jno
fs
aaa
ljmp
ret
std
into
xchg
cmp
test
inc
aad
add
scas
pushl
jbe
push
scas
outsb
repnz
xchg
cwtl
sbb
and
cwtl
push
out
int
movsb
mov
std
mov
mov
mov
lret
mov
push
movsl
call
inc
mov
adcb
test
sub
lcall
and
mov
xchg
inc
loopne
inc
xor
jnp
rcrb
decl
iret
xchg
jg
cmp
cmp
je
jge
insb
xchg
push
pop
jmp
sub
jbe
decl
cmp
pop
pop
sub
rolb
push
jmp
push
popl
aad
jp
dec
xor
jo
arpl
sbb
xchg
inc
in
adc
imul
add
push
je
in
incl
sbb
sbb
dec
test
imul
je
jg
add
xchg
sbb
jnp
aad
shrl
loopne
jg
adc
sbb
hlt
mov
imul
std
pop
test
inc
loope
lods
out
pop
sub
call
inc
dec
jg
shl
scas
and
mov
push
in
or
pop
test
addb
jmp
outsb
adc
xchg
mov
sbb
push
incl
jg
jae
sbb
mov
mov
loop,pt
ret
pusha
mov
lcall
cmp
fdivl
push
inc
bound
movsb
and
leave
mov
les
rol
call
ficoml
negb
push
fs
xchg
sbb
mov
dec
jecxz
ret
xchg
cli
pop
sub
out
sub
inc
cwtl
lock
icebp
pop
clc
ljmp
mov
aam
movsb
inc
mov
pop
pop
call
mov
arpl
add
mov
xchg
push
jae
clc
ljmp
xchg
push
pushf
push
shlb
sub
pop
xchg
enter
or
scas
xchg
decb
cmp
inc
mov
nop
sub
mov
pop
xchg
and
pop
and
aas
jecxz
or
movzwl
sub
sub
xor
adc
dec
jg
push
aas
cmp
test
movsb
fwait
jnp
mov
cmpsl
test
xor
call
cltd
mov
xor
mov
mov
push
xchg
or
jnp
xchg
jnp
sub
ljmp
stos
pop
out
pop
push
ljmp
aam
std
lds
test
dec
scas
sahf
add
call
divb
je
xor
repz
pop
sbb
cmc
incl
or
fsubl
inc
ljmp
jb
lcall
adc
enter
xor
stos
add
aaa
sub
push
rclb
decl
pushf
out
sub
mov
xor
neg
pop
fucomip
or
icebp
mov
repnz
sub
adc
cmp
outsl
and
ss
dec
lahf
and
or
push
ja
js
into
clc
clc
mov
mov
dec
sar
inc
cld
push
push
adc
imulb
add
push
dec
call
mov
hlt
jl
insb
daa
xchg
adc
ret
fbstp
add
sahf
cmpl
jle
xor
inc
push
nop
btr
cmp
ds
in
dec
outsb
xor
bnd
pop
sahf
insb
jg
push
cmp
pushf
pop
and
in
pop
aam
push
and
fwait
adc
in
push
xchg
xorl
adc
sbb
jo
xchg
xchg
scas
orl
xor
filds
dec
sti
push
mov
pop
xlat
stos
loopne
push
int3
and
or
rcll
std
ljmp
push
rep
pop
add
jno
cmc
xchg
pop
in
shll
shll
shll
jl
pop
jecxz
dec
xchg
xchg
dec
sbb
or
test
lret
jne
stos
incl
mov
jne
mov
dec
into
mov
repnz
push
dec
fs
decb
sar
mov
loope
in
outsl
aaa
clc
mov
lcall
pop
xchg
aam
sbb
dec
in
pop
inc
jg
jmp
sbb
sahf
xor
call
jo
fnstcw
push
je
ret
pop
mov
add
sti
jmp
mov
hlt
sahf
test
imul
sub
inc
mov
call
mov
mov
jnp
xchg
jo
pop
iret
es
hlt
add
and
mov
push
push
aam
jae
out
ljmp
sub
aad
inc
sub
mulb
cwtl
sbb
mov
fbstp
pop
lret
hlt
jle
stos
addr16
test
call
jns
test
inc
jae
fxch
cmpsl
push
mov
outsl
mov
sbb
jmp
lods
push
lds
cmp
add
push
jg
add
imul
sti
xor
addb
sbb
sbb
lds
mov
test
decl
dec
ja
or
jge
fstps
mov
icebp
decl
or
std
cmpsb
dec
jg
push
push
ja
sub
and
cld
incl
sahf
sbb
je
gs
pop
call
lcall
aaa
push
out
or
loope
sahf
mov
dec
inc
fisubrl
outsl
mov
and
push
push
aaa
mov
fistpll
pop
pop
xchg
call
mov
addr16
mov
ret
adc
mov
sub
jmp
fidivl
out
mov
imul
xchg
inc
and
inc
adc
loop
outsl
icebp
adcb
shrb
lcall
popa
rcrb
aad
dec
movsb
mov
js
loope
jbe
nop
pop
xor
int
mov
call
mov
lods
mov
sub
mov
add
in
dec
mov
lock
mov
stos
mov
les
and
mov
jne
cmp
push
setl
jo
ds
idiv
cmpb
lcall
cmp
jmp
sub
jmp
sbb
adcb
xchg
pop
loopne
sbb
les
cmpsl
ljmp
ljmp
out
jg
xchg
data16
in
test
mov
jbe,pn
int3
xchg
push
or
adc
dec
rorb
ret
cmpsb
xor
das
leave
repnz
fistpl
inc
aas
addr16
call
and
sti
lret
adc
xlat
iret
mov
fcompl
aad
icebp
inc
and
data16
cmp
mov
notb
ds
mov
jbe
sar
incl
out
aad
adc
dec
xor
cmp
les
jp
sahf
dec
loope
push
push
pusha
ja
pop
in
push
outsb
and
lcall
or
jo
cwtl
cmp
lahf
dec
and
in
add
cli
pushl
sbb
imul
lds
std
cmp
mov
mov
push
sti
cmp
call
loopne
xor
lea
outsb
cmp
arpl
push
mov
shrl
jmp
icebp
or
mov
ss
cltd
movsl
jnp
mov
lcall
jmp
mov
stos
insb
test
xchg
enter
ljmp
mov
jae
dec
push
ret
xchg
or
jb
adc
jnp
lret
ljmp
in
aaa
inc
sub
lret
inc
inc
leave
stos
lret
loopne
sbb
cltd
scas
stos
or
jmp
divb
jecxz
cs
js
imul
jge
lret
or
lods
jle
int
xchg
cmp
outsl
hlt
xchg
push
outsb
daa
outsl
push
sub
push
aas
int3
inc
or
fwait
cli
inc
adc
add
lods
cmpl
mov
aam
pop
stos
shll
inc
cld
lcall
daa
cld
js
adcl
fmulp
adc
jmp
scas
cmp
mov
lcall
fstl
ja
mov
inc
pop
jbe
into
call
loop
movsb
mov
imul
and
sahf
ret
pop
shll
aad
pop
loopne
push
jnp
push
js
push
xchg
inc
decl
sbb
cmpsb
aam
sbbl
imul
enter
cmp
or
std
shlb
fcmovnb
stc
out
ljmp
mov
add
sub
insl
add
sarb
dec
insl
adc
movsb
inc
scas
cmp
or
cli
push
jg
lock
fisubs
test
xchg
incl
jbe
push
int
push
les
enter
jmp
shr
decl
insb
dec
mov
xchg
mov
xchg
cld
ljmp
or
pop
ljmp
stos
dec
and
inc
and
test
icebp
push
sub
ljmp
xchg
dec
cmp
mov
fsub
jns
arpl
loopne
stos
les
pusha
dec
jne
in
call
aaa
mov
adc
push
sbb
pop
fimuls
lahf
imul
mov
cld
xchg
and
add
jl
push
jle
mov
lcall
icebp
test
bound
leave
pop
lock
pop
ljmp
mov
mov
inc
add
jg
fisubrl
clc
incl
ljmp
xor
lret
scas
ret
int3
aam
jmp
xor
call
arpl
mov
and
cmc
xchg
xchg
add
or
mov
jmp
and
xchg
in
jo
nop
rcll
mov
lods
or
mov
cmp
mov
and
mov
inc
sbb
adc
test
int
aad
call
outsl
lock
ja
dec
mov
aas
movsl
movb
push
dec
mov
addl
std
inc
push
adc
test
inc
cld
in
cs
pop
xchg
xlat
addr16
ljmp
and
mov
test
xchg
push
pop
aas
hlt
repz
or
cmpxchg
incl
add
rcrl
push
jg
jb
into
add
sbb
jg
leave
cld
ds
mov
xor
mull
mov
adc
mov
shl
sbb
fsubrs
cmp
sbb
mov
adc
xor
mov
cmpsb
jns
mov
jb
je
and
aaa
cli
push
fwait
das
sbbb
rclb
pop
cmp
pushf
lods
addr16
call
jo
fisttpll
mov
pmaxub
sbb
xlat
xchg
xchg
xchg
mov
jne
and
adc
cmp
ret
xchg
in
mov
mov
pop
mov
and
adc
subl
inc
call
dec
ljmp
call
sbb
inc
incl
dec
mov
or
xchg
pop
shll
fsubs
mov
incl
push
insl
push
icebp
dec
dec
fidivrs
xchg
xchg
push
dec
das
and
mov
sub
sub
xchg
gs
popa
pop
in
mov
sub
cld
add
std
pusha
fisttpl
sub
decb
jl
jge
loopne
mov
xor
sahf
gs
decl
xchg
pop
adc
andl
adc
out
repnz
lcall
lods
add
add
mov
xchg
int
mov
mov
int
mov
mov
fdivr
mov
ljmp
std
sub
lods
inc
dec
rcll
lock
nop
sbb
sub
mov
cld
pusha
into
mov
sub
mul
cs
mov
adc
mov
mov
adc
ror
lret
fs
sub
jmp
mov
je
inc
mov
mov
or
in
jg
lret
sar
repnz
adc
insl
xlat
xor
shlb
bound
addr16
or
loope
sbb
and
mov
push
movsl
lcall
popa
jbe
or
adc
call
pop
mov
sbb
test
aaa
push
adc
jle
into
enter
mov
cmp
dec
subl
idiv
adc
pop
and
ljmp
xorl
in
inc
dec
jae
fs
mov
sub
push
incl
dec
jno
movsl
push
mov
and
or
mov
jmp
iret
sarl
cmpsb
fidivl
adc
fdiv
gs
pop
setbe
jg
gs
xlat
popf
mov
movb
dec
shrl
stos
inc
push
xchg
pushl
mov
adc
mov
sahf
hlt
popf
or
push
psrlw
sbb
dec
pop
fwait
adc
sub
sahf
lods
push
push
add
sar
repnz
cmp
fistpll
sahf
push
idivb
inc
sti
push
out
sub
arpl
mov
push
adc
jae
adc
movsl
add
dec
dec
mov
jmp
pop
popa
mov
xchg
ljmp
cld
push
mov
mov
push
or
mov
outsl
sbb
inc
fimuls
mov
mov
incb
add
pushl
movb
add
pop
push
pop
sbb
arpl
jge
mov
fdivr
lcall
pop
aad
clc
and
pusha
push
inc
dec
push
ja
decl
lds
stc
mov
push
int
pop
imul
hlt
movsb
in
jb
clc
push
incl
ret
out
pop
shlb
das
pop
aas
sub
add
aaa
decl
ljmp
aaa
daa
mov
movsl
hlt
jo
inc
xchg
rorb
cs
cmpsl
mov
fildl
and
or
scas
stos
push
and
inc
jae
jmp
test
pop
lods
push
ss
mov
test
sub
int3
hlt
incl
mov
push
loopne
fcmovnb
sbb
inc
or
mov
iret
adcb
call
adc
andw
imul
aam
mov
push
mov
adc
adc
xchg
out
mov
stc
push
pusha
xorl
xchg
pop
inc
lret
fstl
out
push
call
outsb
rcll
xlat
adc
sbb
or
ja
mov
call
fnstcw
test
shrl
sub
mov
push
out
mov
mov
js
sbb
mov
add
sub
pop
clc
pushl
dec
sub
dec
sub
mov
shlb
cmp
rol
test
decl
cmp
scas
push
lds
bound
insb
push
ds
sar
push
dec
out
mov
sahf
pop
mov
aas
les
ljmp
mov
dec
xor
loop
mov
dec
popa
test
loopne
shr
pop
ljmp
pop
xchg
mov
cld
mov
popf
or
dec
xor
sub
incl
mov
cmp
inc
imul
pop
movups
add
cmp
sbbl
ret
rclb
pop
mov
pop
xchg
cmp
mov
jmp
or
call
lcall
inc
mov
ja
sar
jmp
fcompl
loope
decl
outsb
cs
sbb
inc
dec
nop
add
inc
imulb
leave
and
xchg
sbb
addr16
push
pusha
mov
push
cmp
fcoms
or
incl
xchg
stos
cmp
mov
daa
movsb
or
jne
stc
cwtl
popf
lahf
cmp
sub
test
xor
mov
scas
sbb
push
sbb
and
lcall
cmp
cmc
mov
jae
shrl
pop
cld
pop
ficompl
pop
stos
rolb
push
decl
adc
xchg
cmp
mov
movsl
xor
cmc
pop
or
and
xlat
int
call
mov
sahf
fwait
xchg
das
dec
aaa
fbstp
clc
idivl
push
aad
sarl
pop
enter
cwtl
ljmp
jns
mov
in
mov
clc
testb
scas
and
and
sub
mov
inc
imul
clc
jmp
jle
cmpb
inc
movsb
cmpsl
xchg
jns
jb
mov
jg
dec
sti
cmp
lret
repnz
pop
sub
lock
xor
jmp
push
les
loop
sub
pop
fildll
addr16
loopne
adc
inc
or
scas
scas
in
rol
in
aaa
arpl
std
xchg
aad
scas
imul
loope
xchg
out
pusha
inc
test
pusha
push
mov
arpl
mov
or
sub
bnd
out
movsb
mov
and
push
call
xchg
adc
outsb
in
jl
dec
dec
cmpsl
mov
mov
mov
xlat
and
lahf
lcall
std
mov
das
cli
aas
and
mov
pop
lret
mov
or
jecxz
push
ss
lcall
mov
andl
add
hlt
movsl
call
ss
mov
inc
popa
lret
jmp
cld
add
dec
scas
sbb
mov
lods
jo
pop
jne
inc
pop
xor
cld
aaa
cltd
and
adc
in
call
mov
jns
call
loope
addr16
popa
call
dec
xor
mov
movsb
or
aam
sbb
jb
push
mov
sub
adc
ljmp
sub
lods
cmp
out
fdivs
inc
push
jbe,pt
call
pop
ljmp
lret
mov
sbbl
cmpb
call
ljmp
imul
popf
pop
lock
aas
and
cmp
xchg
scas
pop
dec
out
lds
cmp
test
dec
cltd
sbb
iret
mov
push
test
ja
jmp
push
add
ljmp
mov
pop
aad
adc
xchg
lock
test
sbb
mov
icebp
mov
mov
out
mov
xor
in
mov
pushl
sub
xchg
push
jl
sub
mov
adc
mov
into
sub
mov
mov
push
mov
mov
mov
shrl
mov
and
cmpsl
fcomps
jno
test
add
jg
push
push
rcrl
dec
inc
cli
dec
subb
xor
inc
add
int
dec
ss
cmp
orb
or
in
clc
jecxz
pushl
sbb
outsl
fcomps
cwtl
push
adc
cmpsb
cmp
sub
jmp
inc
out
adc
cmp
mov
out
out
ret
mov
paddusw
lcall
sbb
fiadds
jmp
inc
in
sbb
sbb
xchg
fistpll
xor
adc
push
jae
enter
loopne
jge
cli
fs
lcall
std
lea
movsb
jne
in
dec
popf
jg
inc
add
subl
f2xm1
and
pushf
pop
sti
popf
and
imul
mov
cld
or
xchg
mov
into
add
cmpsl
mov
mov
jg
aad
aaa
push
xchg
setae
enter
loop
jp
lahf
fstl
decl
pop
into
lods
ds
mov
addr16
clc
xchg
mov
shrb
mov
inc
dec
sub
pop
jae
xor
scas
into
in
cwtl
popa
xor
push
or
mov
push
cmp
lcall
stos
clc
imul
loope
add
sub
or
mov
clc
lcall
jmp
test
pusha
dec
add
fbld
cmp
lock
aad
out
cli
jl
xchg
hlt
xchg
jecxz
popa
dec
dec
xchg
rcr
ljmp
pop
sub
jns
cmpb
or
sub
adc
std
shl
sub
inc
or
das
icebp
decl
mov
mov
fdivp
rorb
lret
xor
faddp
shlb
sbb
mov
notl
mov
pop
bound
mov
jne
xchg
ljmp
jg
inc
jae
sbb
jmp
nop
sbbb
ljmp
stos
leave
or
push
js
add
lret
pushl
js
lock
mov
je
insl
mov
adc
adc
std
jmp
inc
pop
loop
jmp
fiadds
jb
sub
mov
add
mov
adc
mov
jo
xrelease
lahf
stos
sbb
cli
jl
mov
test
lock
insl
cwtl
sbb
mov
arpl
fadd
or
pop
std
arpl
inc
popf
mov
stos
cmp
push
clc
ljmp
jo
cld
inc
arpl
sub
dec
cwtl
jg
out
xchg
lea
imul
clc
push
adc
dec
insl
mov
lcall
mov
mov
jns
aam
add
jo
insl
out
jg
in
sahf
xor
insl
ret
mov
xor
push
sub
aas
stc
loop
pop
xor
ljmp
push
nop
mov
add
jmp
and
push
mull
sub
mov
enter
mov
pop
imul
mov
cld
ficomps
adc
and
mov
jmp
jmp
xchg
dec
pop
out
subb
outsb
jge
mov
xorl
out
inc
clc
jmp
mov
hlt
sub
adc
loopne
mov
mulb
testb
inc
and
lods
mov
mov
imul
lret
dec
out
rcrl
cmpsl
loope
push
adc
push
mov
andb
jle
sbb
movsl
sub
jp
pop
adc
mov
mov
jg
shrl
push
loopne
xor
movsb
or
into
fadds
enter
jp
test
icebp
int3
aaa
pop
xlat
arpl
enter
adc
adc
test
insl
add
call
loope
sbb
mov
fistl
shl
xchg
mov
cmpsb
hlt
and
ljmp
xor
int3
jmp
dec
push
icebp
push
jnp
test
repz
mov
jno
sbb
jo
leave
xor
mov
xlat
scas
add
lcall
and
test
mov
mov
out
or
and
xor
je
inc
in
lahf
data16
mov
pshufw
add
fcomps
pop
pop
sbb
jg
xor
cmp
push
jl
jb
xor
decb
mov
mov
cs
xchg
stos
dec
shlb
and
pop
pop
imul
scas
xor
inc
push
sarl
mov
or
outsl
jns
mov
mov
jmp
clc
in
jb
ja
andl
lret
ret
jo
pushl
lret
out
add
shl
scas
int3
mov
pop
dec
mov
in
inc
pushf
test
call
aaa
in
ljmp
xor
mov
pusha
stc
adc
rcrb
call
xlat
aad
aad
gs
idiv
cltd
inc
hlt
mov
and
jb
sar
jg
pop
cmp
lcall
imul
rcrl
adc
jp,pn
sbb
lods
jbe
test
pushl
imul
dec
jo
xchg
rcll
movsb
inc
pushf
hlt
mov
popf
xchg
fdivrs
xor
fistpll
xor
fldenv
dec
hlt
jne
mov
mov
sahf
dec
or
ja
pop
fcomps
pushf
insl
push
pop
stc
sub
outsl
or
call
shlb
xchg
push
sahf
cmp
mov
incl
sub
and
je
jbe
sub
inc
loope
add
mov
pushl
push
xchg
xchg
or
and
cmpb
call
cmp
sbb
out
push
sbb
lock
jmp
jmp
lret
clc
and
lods
or
mov
inc
jae
int
jno
fs
call
fbstp
loop
jno
and
adc
les
or
in
push
push
dec
ffree
adc
add
stos
mov
mov
lcall
cmp
or
fwait
stos
cmp
insb
cld
push
test
call
mov
testb
call
hlt
das
add
pop
cwtl
add
cmp
add
dec
mov
jns
inc
fs
pop
mov
lahf
fwait
or
fld
jmp
pushl
cli
in
cmp
pop
pop
sub
inc
mov
outsb
sti
in
loop
in
mov
out
jl
xchg
pop
jmp
dec
cmp
shl
shll
and
mov
call
add
xchg
xchg
sahf
test
sbb
sbb
movl
lock
fsts
repz
dec
push
aaa
mov
int3
lret
pop
jg
imul
jnp
mov
mov
xchg
divb
or
call
jecxz
mov
push
xchg
out
adc
cmpl
out
flds
mov
es
das
cmc
pop
std
push
add
div
fucomip
jmp
jmp
cli
add
adc
xchg
aaa
addr16
repnz
sub
test
mov
push
rolb
fdivl
inc
adc
rcrl
and
push
jmp
rcl
and
pop
inc
shl
es
cmp
dec
jae
push
fnstsw
sbb
sbb
or
lods
leave
mov
inc
push
popf
popa
cmp
call
jp
cmp
add
aas
cwtl
out
xor
std
sub
mov
pop
test
mov
xchg
iret
and
fidivs
lcall
pop
push
lahf
aaa
mov
sbb
ljmp
inc
out
nop
leave
add
outsb
sub
stos
out
stc
sbbb
filds
or
jg
nop
mov
mov
jg
inc
loope
pop
mov
lea
mov
add
stos
fcompl
scas
fidivl
cli
les
rolb
loop
lods
call
xchg
xlat
lret
aad
dec
push
mov
mov
xchg
lret
fisubrs
in
xchg
and
jbe
lock
or
loope
sub
jg
push
pop
sbb
mov
xor
adc
pushf
cmpb
jle
add
adc
push
incb
cmp
and
xor
fdivrl
jmp
mov
pop
fstpl
dec
in
cltd
and
jno
inc
xchg
inc
or
shlb
xchg
or
arpl
push
les
in
aam
pop
cltd
inc
imul
inc
cmp
xchg
push
fwait
shrl
hlt
jnp
ror
scas
add
pop
jge
int
jg
push
call
fs
jmp
stos
push
addb
test
aad
in
jo
fs
adc
add
add
xchg
rorb
je
xchg
cli
cmp
sbbb
repz
cmp
popa
mov
mov
ds
decl
pop
mov
sbb
or
pop
outsb
leave
jge
cmp
sahf
das
jmp
pop
cli
dec
cmp
shll
mov
add
addb
cli
push
fiadds
notl
xor
test
shll
fildl
mov
je
sbb
call
pop
sar
call
jp
inc
lock
add
inc
add
dec
lods
loopne
divl
sti
insb
call
mov
mov
aas
pop
push
jbe
mov
repz
rcrl
push
aaa
mov
push
and
fstp
xor
dec
mov
cli
jo
xchg
push
sbb
jg
mov
sbb
test
insb
sub
push
xor
push
push
add
sub
add
das
ss
shl
xchg
ljmp
icebp
scas
addl
sbb
jg
rcll
sub
incl
stos
pop
sbb
div
pusha
jge
pop
mov
jns
rorl
movsl
sbb
lcall
and
leave
add
rcl
loopne
outsl
push
sar
jmp
dec
dec
or
cmc
mov
jb
sub
and
rorl
jg
jecxz
mov
jge
xor
sbb
push
call
incl
pop
enter
push
and
es
push
lods
cli
lods
sarb
mov
inc
daa
fstps
test
dec
cmpsb
or
addb
dec
lret
push
scas
adc
fs
js
ffree
in
push
lods
ret
lock
sbb
xor
xchg
xor
sbb
xchg
mov
jp
add
mov
decl
push
jb
xchg
add
aam
lods
lods
cmpsl
dec
daa
xchg
jg
incl
shl
cltd
push
mov
fcoms
jb
call
jmp
xor
mov
lcall
shll
loope
int3
aas
jmp
mov
fdivrs
mov
sbb
roll
push
popa
mov
movsl
mov
jbe
mov
ljmp
scas
mov
ficomps
icebp
test
iret
out
dec
test
aas
sbb
inc
jge
push
data16
call
sbb
sub
pop
out
push
cld
andb
add
add
fbld
sub
sub
inc
mov
iret
mov
pop
inc
decl
jbe
mov
aam
inc
cmp
jne
cwtl
leave
cltd
test
out
mov
sub
cmp
xchg
xor
mov
jecxz
pop
out
loopne
decl
lcall
push
pop
lret
jmp
repz
dec
rolb
icebp
xor
insb
sbb
or
inc
mov
stc
shrl
ljmp
fdivrp
inc
es
je
mov
xchg
sub
enter
jo
mov
and
psubd
cli
mov
mov
cmp
sub
xchg
rcrl
icebp
push
add
sar
filds
pop
mov
mov
mov
inc
scas
sub
call
pop
ficoms
xchg
sub
idivl
hlt
push
cwtl
and
mov
mov
pop
rolb
rcl
add
sbb
frstor
popf
or
pop
loopne
cld
ds
mov
fnstenv
dec
jne
aad
in
flds
loope
push
in
ret
popf
push
fiadds
in
adc
decl
rcll
xorl
decl
int
jnp
xchg
scas
push
cmp
popf
adc
lcall
pushl
hlt
xchg
push
push
leave
jnp
inc
aam
mov
jno
aas
mov
and
call
inc
add
imul
sarb
sub
loope
test
ljmp
pushf
std
push
mov
lods
adc
shl
mov
jl
hlt
test
or
aad
pop
sub
sbb
shlb
insb
sbb
dec
pop
clc
in
jnp
addr16
adc
xchg
push
add
dec
stc
jns
into
mov
decl
pop
sub
lret
or
popf
mov
nop
push
pop
xor
js
std
pushl
and
mov
sar
push
dec
lcall
rcr
mov
or
or
mov
inc
stos
jmp
sar
mov
adc
sbb
mov
leavew
ficomps
int
rclb
mov
xchg
roll
xchg
dec
test
xor
adc
cli
cmp
dec
mov
sbb
jnp
jp
icebp
out
int
aas
out
call
call
mov
lret
jmp
mov
pop
xchg
or
outsl
decl
add
mov
pop
test
inc
outsb
imul
cmc
sub
repz
clc
ficomps
push
mov
dec
pushl
or
insl
lea
push
sub
je
sahf
pusha
jns
cld
mov
mov
mov
outsl
stos
inc
push
insl
xor
inc
imul
cltd
arpl
push
stos
jecxz
stc
hlt
adc
cmp
mov
cs
sbb
jg
rorl
adc
sbb
decl
subl
shll
pop
testl
test
pushl
ja
sahf
add
sub
jp
ret
js
push
jecxz
ret
je
clc
outsl
inc
sarb
fwait
lock
lret
decl
xchg
in
or
insb
ret
das
hlt
mov
mov
adc
dec
mov
incl
pop
mov
push
jno
adc
mov
cs
cltd
out
cmpsb
xchg
clc
pushf
sub
lret
scas
cmp
icebp
sub
cld
fisubrl
xchg
pop
mov
push
dec
pop
mov
sbb
daa
incl
jle
jnp
xor
scas
sbb
fcoms
inc
andb
jbe
xor
add
aaa
sbb
out
ljmp
mov
mov
xchg
aas
sbbb
xchg
ljmp
lcall
sbb
xchg
lea
add
jbe
inc
jp
es
mov
and
addl
xchg
and
arpl
out
loop
pushl
popa
cmp
push
test
cld
adc
loopne
fadd
sub
add
mov
outsl
inc
inc
sub
mov
ja
icebp
sub
and
cmp
xchg
call
call
shll
add
or
jb
jle
loope
daa
sbb
or
incl
pusha
stos
add
mov
movsl
jmp
decl
clc
xchg
fsubs
jp
mov
add
cs
incl
hlt
push
daa
mov
sahf
lret
and
in
cmp
dec
inc
xor
and
sub
decl
pop
bound
outsl
cltd
into
jns
test
or
cmpsb
jge
bound
and
dec
ss
mov
cmp
ds
inc
xorl
test
loopne
mov
or
lcall
je
and
xchg
mov
inc
mov
sub
fdiv
fdivrl
inc
nop
cmp
dec
jno
scas
pop
dec
ret
inc
je
pop
push
cmpsb
push
cli
ljmp
shrb
xor
stos
pusha
ljmp
jg
jge
mov
pop
lods
bound
cmpsb
mov
out
inc
push
mov
inc
add
call
jg
jmp
mov
in
lds
out
fwait
leave
pop
jg
jg
fisubs
fcomp
jae
mov
push
adc
sub
flds
jmp
adc
call
enter
sbb
cmp
movsb
sub
bound
jl
sar
jg
out
or
aam
adc
adc
out
cli
pop
jo
push
fcoml
cmc
neg
dec
idivl
xchg
fsubr
pushf
movsl
cmpsb
xor
xor
ljmp
scas
inc
or
inc
and
popf
aas
mov
and
shl
sahf
popf
and
lcall
pop
in
inc
test
xor
add
mov
mov
pop
inc
lods
jnp
mov
push
arpl
stc
pop
push
jbe
pop
lds
ljmp
fs
scas
repnz
or
adc
test
out
mov
out
xchg
dec
xchg
outsb
mov
mov
orl
fxch
incl
mov
xchg
push
jbe
movsb
les
jns
dec
ljmp
pop
fcompl
and
jae
push
fcomps
lods
inc
xchg
clc
jae
mov
jmp
xchg
sahf
lock
jle
pop
jle
inc
inc
out
call
mov
adc
sbb
movsb
adc
cmp
xchg
cmpsl
lcall
lahf
mov
sub
cmp
xor
mov
shrb
jnp
jmp
icebp
lcall
outsl
mov
ss
sub
in
add
push
add
sub
rep
loopne
nop
popa
mov
mov
mov
mov
inc
ficoml
push
jbe
decl
incb
sub
mov
scas
inc
cs
jle
jmp
adc
imul
sbb
das
hlt
decl
adc
xchg
dec
enter
add
inc
and
pop
pop
leave
ja
aam
std
inc
gs
lock
pop
dec
push
dec
cwtl
push
cmp
jmp
stc
mov
sub
movb
xor
mov
mov
test
out
mov
xor
cmpb
cld
inc
xlat
xor
xchg
mov
cltd
sti
in
ret
hlt
repz
in
and
mov
mov
xor
sub
jl
jnp
stos
and
rolb
dec
and
sahf
or
add
jg
xchg
push
cmc
hlt
sarb
add
lds
fucom
shr
mov
xchg
sub
fstps
pop
mov
test
das
push
pop
sub
mov
dec
mov
pop
lods
cmpl
mov
mov
mov
es
add
in
pop
not
adc
jne
add
pop
sbb
decl
mov
stc
add
jne
pop
popa
xor
or
mov
arpl
loop
int3
jmp
sub
or
and
enter
cltd
adc
in
cmp
ljmp
push
cld
inc
and
sti
out
mov
jge
and
ss
mov
dec
cld
jmp
movsb
pop
test
and
or
push
adc
es
mov
fisttps
xchg
add
mov
cwtl
dec
mov
out
jmp
pusha
or
dec
cmp
fs
lcall
rcrl
mov
in
loop
fcompl
fldcw
in
hlt
sbb
adc
pop
jmp
dec
std
xchg
xor
adc
ljmp
mov
sbb
movsb
adc
pop
sbb
or
push
mov
xor
and
stc
pop
inc
imulb
lds
add
inc
ja
cmpsb
fstl
or
stos
inc
stc
cmp
cmp
jg
loop
leave
and
add
adc
cltd
pop
push
popf
imul
movsl
ss
or
add
outsl
mov
push
push
cli
pusha
lcall
mov
cmpsl
dec
rclb
cmp
mov
insl
add
movsl
cmpl
aas
stos
mov
mov
decl
push
lds
or
dec
int
and
lock
fildl
dec
push
incl
jmp
cmc
push
js
arpl
pop
cs
sbb
sub
lock
ljmp
adc
push
sub
xchg
inc
cli
loop
lea
fbstp
test
and
mov
xchg
xchg
add
and
jg
cmp
loopne
nop
add
xor
mov
andb
push
sbb
pop
loopne
pop
cmp
fsts
or
notl
loope
push
pop
stos
push
or
jmp
sub
ret
pop
or
iret
mov
mul
les
into
sbb
jecxz
pushl
push
dec
hlt
arpl
jp
into
adc
movsl
or
push
sahf
pop
adc
sbb
lret
sbb
pop
js
sub
sub
add
test
enter
cld
jmp
lods
incl
les
in
int3
outsl
imul
mov
sahf
cs
or
decl
js
je
mov
pusha
loope
jno
mov
or
outsb
add
push
push
and
mov
out
testb
or
push
or
in
mov
add
ljmp
lock
jne
cmp
lods
sbb
push
push
lds
adc
adc
mov
movsl
mov
decl
pushf
scas
insl
and
pusha
ss
sub
fucom
imul
mov
sub
mov
out
push
xchg
sbb
sbb
ljmp
je
data16
fisttpl
adc
jle
push
lcall
pop
je
dec
fwait
arpl
lcall
add
dec
jb
in
jnp
out
mov
push
aaa
pop
add
insb
clc
imul
xlat
pop
add
or
sub
add
cmpsl
mov
cmpl
popa
pop
imul
sti
mov
mov
aam
shlb
call
cmp
or
sub
pop
popa
cmpsb
xchg
or
fistpl
mov
cmp
xor
xchg
imul
fsubrl
inc
movsl
inc
or
or
cltd
mov
add
cmp
dec
mov
cld
fs
jae,pt
mov
fildll
jl
out
cmp
cmpsb
or
jecxz
xchg
and
mov
clc
incl
mov
stos
mov
cmpsb
sub
fisttpll
or
jne
dec
lods
cmc
fisttps
inc
push
mov
loopne
push
inc
scas
adc
imul
ljmp
cld
jae
mov
imul
inc
push
dec
mov
sbb
cmp
mov
fdivr
sbb
cmp
sbb
sub
sbb
add
add
lahf
addr16
pop
sahf
xor
and
jbe
stc
jb
mov
jl
ljmp
and
cmpsb
add
mov
shrl
ss
in
sub
sub
inc
add
outsb
xchg
or
aas
pop
push
push
out
xor
pop
xor
mov
jo
jg
gs
jge
jge
leave
mov
ds
inc
daa
pop
mov
enter
lcall
push
pop
dec
mov
outsb
fcompl
adc
sbb
push
pop
and
pop
clc
outsl
cmpsl
xor
mov
sarb
push
ljmp
je
jg
pop
and
test
and
jne
pop
xchg
mov
mov
jecxz
lods
ds
loopne
sahf
je
decb
sarb
pusha
out
arpl
sarl
incb
hlt
stos
sbb
inc
call
mov
jne
mov
repnz
sahf
lret
mov
adc
pop
loop
mov
js
add
add
pop
xchg
in
mov
fsubrs
dec
xlat
hlt
ret
fcmovnu
out
sub
lcall
fmul
push
jns
adc
daa
mov
and
andl
push
pop
loopne
cld
ret
add
lcall
jmp
leave
inc
hlt
call
push
adcl
and
stos
inc
xor
call
add
in
push
push
das
pop
pushf
ss
jae
mov
std
mov
cmp
cmp
inc
jns
repnz
test
lcall
push
xchg
iret
xor
rorb
inc
ret
and
xor
fidivl
cwtl
sbb
jle
pushf
pop
scas
nop
inc
lods
shlb
or
mov
push
mov
in
out
aaa
xchg
mov
lret
ss
xor
or
or
test
aaa
mov
xchg
push
mov
jle
fisttps
pop
icebp
insb
mov
pop
fstpl
adc
and
add
movsl
ljmp
icebp
fimuls
lea
add
xchg
add
iret
lea
scas
mov
pop
jbe
stos
inc
adc
inc
test
or
mov
jp
xchg
aad
adc
mov
add
fiadds
test
jno
je
add
ljmp
dec
jnp
or
mov
or
lea
cld
lcall
cwtl
sub
mov
bound
pushf
mov
sub
jg
decl
pop
mov
dec
dec
pop
push
cmp
push
ss
jmp
or
mov
push
push
mov
cmc
in
ret
out
lahf
jecxz
rorb
jg
inc
fs
ds
loop
xor
repnz
add
call
xor
scas
mov
jbe
dec
in
in
xchg
mov
and
mov
ljmp
cli
or
sub
cmpsb
iret
inc
or
and
inc
ja
decl
scas
movsb
repz
xchg
ds
hlt
adc
inc
mov
stc
sbb
pop
xchg
daa
popa
decl
sub
jmp
pusha
adc
mov
adc
js
push
and
shll
jno
cmp
xorl
bound
leave
xchg
add
clc
dec
repnz
popa
sub
sub
es
test
lcall
pop
push
lret
fiaddl
fsubrl
ja
jne
cmp
je
insl
fwait
scas
int
mov
lock
sbb
xor
incb
mov
mov
pop
nop
aad
je
test
decl
lret
int3
mov
pop
es
daa
or
add
adc
pushl
or
inc
xchg
sarb
icebp
js
cmp
lcall
jbe
or
mov
test
js
pop
or
pop
movsb
mov
push
xor
jno
in
outsb
push
xlat
pushf
push
add
subl
inc
sub
sub
mov
lret
dec
fistpl
jmp
scas
sub
decl
fdivrs
and
lock
fisubl
pop
idivl
test
repz
jne
es
xor
pop
movsl
cwtl
mov
sub
sbb
xchg
sbb
inc
lcall
jns
sbb
subb
mov
add
pushf
xchg
push
and
mov
mov
sbb
push
test
fcmovne
pop
push
and
call
sbb
jbe
and
mov
xchg
adc
mov
pusha
mov
test
jg
cs
ljmp
jl
jne
insl
aam
test
add
inc
pop
loop
dec
nop
enter
xchg
xor
mov
adc
sbb
jno
mov
insl
xlat
dec
lock
scas
inc
outsb
mov
in
mov
jg
and
push
cmp
mov
or
and
shlb
fnstsw
bswap
sbb
mov
fnstcw
outsb
call
adc
and
ljmp
inc
iret
addr16
mov
mov
pop
cli
jp
mov
cmp
pop
imul
popa
rclb
sub
jnp
mov
ds
loope
jg
mov
out
dec
cltd
test
inc
pop
call
decb
lcall
or
mov
js
test
mov
or
mov
jecxz
incl
pop
enter
lock
xchg
add
call
inc
cmp
decl
jge
mov
pusha
leave
leave
popf
lret
dec
ljmp
das
lock
je
and
lret
xor
xor
mov
mov
dec
cmp
pop
jo
andl
je
int
and
add
lret
sti
mov
cmpsl
icebp
mov
loopne
ret
bound
decl
int
lret
hlt
gs
and
xor
stos
mov
mov
fdivr
call
sbb
sub
sbb
pop
jg
lcall
sub
push
aam
adc
sub
subb
mov
jno
sub
ret
add
sbb
push
call
pushl
sbb
sub
enter
outsb
mov
mov
enter
and
mov
cli
cltd
cltd
or
pop
sbb
stos
sbb
add
fs
add
loope
sub
test
outsl
les
inc
add
xchg
xlat
ljmp
sahf
sub
inc
inc
test
sbb
pop
mov
faddl
jo
cmp
mov
incl
pop
xchg
rcrl
insb
fcoml
jg
bound
xor
in
ljmp
push
cmp
addl
dec
das
rolb
aaa
cmp
pop
in
in
mov
fnsave
mov
fdivrl
jno
ss
sub
je
cmc
pushl
shll
aad
aam
jnp
jo
add
scas
test
adc
cmp
dec
das
add
dec
test
addr16
mov
inc
addb
in
sub
jmp
ljmp
sahf
aad
dec
enter
lahf
xchg
out
sarl
mov
add
push
ljmp
movups
add
mov
lea
ret
sbb
fsubl
addr16
dec
cli
push
jge
and
sbb
pushf
cmp
fwait
lods
imul
adc
loopne
sbb
mov
mov
rorb
or
sbb
mov
inc
hlt
dec
sbb
rcr
sbb
jg
pop
clc
mov
mov
jle
push
sub
mov
or
cmpsl
pop
loopne
jmp
cmp
rcl
sbb
push
jmp
jb
test
push
lcall
jmp
mov
xor
rcl
stos
insb
push
lds
push
rclb
aad
es
cltd
aam
pushl
sbb
pop
or
or
int3
repnz
sub
std
adc
jns
inc
sbb
mov
jmp
aam
lcall
cmpsb
xchg
pop
gs
mov
or
aaa
cmc
push
enter
jb
cwtl
fidivrs
orl
mov
lods
mov
mov
aad
xor
movsb
sarl
in
ljmp
jne
fsubl
std
lea
test
sbb
mov
ret
ljmp
mov
sbb
arpl
pop
jnp
push
jae
ss
dec
add
adc
scas
push
fcmovnb
or
xor
nop
fs
shll
lret
sub
mov
sub
rclb
incl
xchg
out
mov
in
test
inc
pop
lret
fwait
sub
lods
test
add
enter
mov
lcall
loop
xor
xchg
test
cld
or
mov
inc
test
fucomip
cmpsl
addl
sbb
fsubl
fcomps
push
push
push
int
and
jle
pop
dec
stos
repz
sub
loope
add
lcall
pop
dec
adc
roll
xchg
inc
lcall
inc
add
dec
push
adc
dec
fwait
mov
mov
into
into
mov
fldt
mov
clc
mov
cmp
dec
lea
std
sar
mov
inc
mov
ljmp
fadds
jmp
ret
shll
dec
int3
ret
push
jnp
mov
out
sar
das
icebp
pop
pusha
insb
xchg
jne
inc
and
mov
push
sbb
call
mov
mov
xlat
rcrb
adc
sub
out
aam
lret
sub
call
loopne
xchg
pop
lret
ficoms
xor
mov
inc
or
jbe
cmp
jns
ds
jmp
icebp
jge
pop
iret
in
sub
cmpsb
imul
inc
std
pop
rorb
rcr
movsl
outsb
cmp
xor
push
adc
xchg
out
decl
add
add
mov
inc
cmp
gs
mov
std
nop
and
lret
mov
shrb
sub
js
pop
decl
fbstp
dec
jbe
lods
sbb
je
mov
rclb
arpl
decl
mov
add
jno
int
or
inc
dec
mov
xor
ljmp
mov
mov
inc
pop
lret
sbb
mov
lods
iret
inc
incl
into
ja
inc
pushf
in
sub
mov
xor
cld
das
inc
xchg
inc
jns
ret
insb
decl
bound
mov
inc
xor
imul
enter
dec
mov
lcall
cmp
cmp
and
jg
mov
outsb
adc
jno
push
inc
fs
sub
lock
ljmp
pop
stos
scas
aaa
jp
inc
mov
jecxz
enter
pop
inc
push
ret
and
mov
ljmp
jne
jb
xchg
xchg
xor
stos
repz
sti
les
jnp
xor
mov
pop
cli
outsl
mov
mov
fisubrs
out
mov
cwtl
inc
mov
mov
movsb
mov
mov
jae
arpl
push
pop
adc
jno
mov
decl
daa
or
sbbl
out
pop
stc
lock
out
leave
sub
pop
cmc
aam
mov
push
and
test
lret
outsb
mov
jp
push
adc
push
sub
repz
xchg
out
jmp
mov
flds
frstor
xlat
adc
nop
dec
mov
gs
in
add
incl
outsb
repnz
cmp
dec
stos
add
cwtl
pushl
cli
decl
mov
adc
fcmovnb
jno
stos
fadd
ljmp
cmc
incl
xchg
repnz
sbb
ret
sbb
jae
test
das
cmc
jmp
and
and
dec
dec
cmc
mov
mov
xchg
andl
sub
mov
jnp
adc
outsl
jne
repz
push
push
lret
mov
lret
leave
test
rcll
sbb
jle
ret
rcll
pop
push
mov
ss
ds
cmp
in
loopne
and
pushl
inc
testb
cmp
stos
xchg
rorl
sarl
push
pop
pushf
in
push
inc
push
icebp
fmull
lods
int
xor
sub
scas
sub
adc
lret
std
adc
cmp
adc
mov
inc
dec
data16
popa
js
loop
call
mov
cwtl
pushf
add
test
or
cwtl
sbb
cltd
mov
push
push
aaa
decl
pop
rol
lret
sub
stos
and
dec
add
add
dec
sub
incl
rorb
xchg
in
shl
and
cmpsb
gs
lret
push
addr16
jle
mov
not
outsb
mov
jmp
pushf
mov
mov
das
out
dec
push
out
push
insb
mov
push
fstps
pop
mov
and
sbb
mov
ss
pop
mov
push
lcall
sbb
lret
repz
inc
mov
or
sub
or
enter
push
lcall
int3
shrb
jecxz
lcall
push
or
cs
adc
push
mov
cmp
in
or
push
outsl
insl
mov
jns
jmp
rorl
inc
insl
out
lock
and
cld
ret
leave
stos
mov
psubusb
das
jne
pop
push
ljmp
mov
decl
and
hlt
adc
cmp
cmp
push
mov
popa
xchg
pop
fs
lock
pop
loope
mov
sub
cmc
jns
cmp
pop
jb
add
xchg
cmp
mov
dec
pop
xchg
mov
and
xor
cld
fmull
pop
add
mov
push
dec
outsb
ficompl
notl
gs
inc
cld
pop
and
xchg
inc
push
cmp
in
or
jae
decl
xchg
and
dec
pop
gs
nop
sub
test
hlt
push
xchg
mov
jbe
xorl
call
mov
fbstp
addb
call
xchg
inc
sub
je
hlt
ds
jg
push
adc
movl
scas
leave
cli
inc
jno
add
sbb
xchg
sub
mulb
loopne
mov
loope
out
ss
mov
mov
mov
lcall
sbb
xor
adcl
or
sbb
push
mov
out
call
sbb
sub
subb
ds
ret
jne
lcall
mov
sahf
insl
scas
inc
mov
loop
push
mov
test
rcrb
icebp
pushl
shrl
dec
imulb
in
insb
lret
pop
lods
fstpt
jb
loop
addl
cmp
xchg
inc
dec
cld
jns
cmp
les
icebp
jg
js
and
rorl
enter
xchg
mov
stos
push
inc
outsl
cmc
pushl
inc
dec
addr16
outsb
xchg
dec
jns
sbb
es
daa
call
ljmp
push
xorb
mov
and
arpl
jmp
filds
jmp
cmp
add
jo
push
stos
adc
clc
pop
push
dec
lret
insl
sbb
addr16
fnsave
das
lcall
popf
sti
mov
or
fisubrs
hlt
xchg
xchg
cmpsb
notl
lods
pop
aad
loop
lcall
inc
into
imul
lock
data16
push
fwait
cmp
inc
push
lock
lock
and
add
lea
in
test
ljmp
test
outsl
lret
rcrb
mov
jmp
stc
xchg
xor
and
test
jmp
push
loope
lret
test
dec
mov
push
adc
push
in
hlt
hlt
aas
jne
sub
out
sbb
loope
or
jmp
jmp
mov
pop
scas
fisttpl
cmp
xchg
cltd
rcll
add
popa
data16
lret
mov
out
sub
cli
inc
repnz
or
xor
mov
adc
pop
pop
mov
dec
xchg
lcall
std
lcall
aas
or
in
adc
inc
adcb
in
mov
mov
orl
lcall
das
dec
dec
add
ljmp
data16
cld
imul
and
call
mov
loop
xchg
and
test
movsl
stos
pop
cmp
imul
std
jg
jmp
or
xchg
push
add
sbb
iret
xchg
lods
stos
push
pop
mov
xor
outsl
ljmp
in
xor
jge
outsl
sbb
shl
scas
mov
in
clc
push
lock
filds
or
cmp
fcompl
xchg
inc
add
adc
aas
subl
cmp
or
ror
adc
icebp
cmpsb
loop
xchg
out
inc
jbe
lahf
xchg
pop
ret
idivb
scas
pop
test
adc
xor
pop
xlat
outsb
fsts
imul
sub
incl
cwtl
push
pusha
in
popf
mov
std
xchg
sub
enter
jb
inc
mov
pop
pop
xlat
xorps
sbb
xchg
push
sub
lcall
lods
or
idivl
mov
insl
jae
ret
in
mov
cltd
xchg
sub
jg
sub
mov
lcall
iret
xor
test
hlt
cmp
mov
mov
adc
aas
adc
or
fisubl
lret
sbb
or
call
pop
les
and
xchg
push
add
push
stos
dec
jge
sti
sub
push
push
stos
xchg
pop
loope
repnz
int
xchg
sub
dec
fldt
mov
sub
cmc
ret
adc
jmp
es
and
nop
jge
imulb
lcall
repz
loop
sub
into
mov
scas
mov
mov
pop
xchg
and
jg
fcomps
in
adc
xor
pusha
iret
popa
cmp
incl
or
cmp
rolb
filds
scas
sbb
xchg
out
stos
incl
popl
push
mov
lcall
leave
xor
lahf
imul
jbe
rcrl
punpckhdq
xlat
jecxz
decl
add
sbb
dec
pop
dec
test
andb
bound
inc
dec
cld
ret
jne
roll
jle
shl
in
push
adc
and
add
fucomip
call
pop
shl
insb
xlat
ja
gs
leave
jae
imul
je
xchg
out
mov
lea
ljmp
sub
mov
call
jo
fldenv
adc
popa
inc
cmc
mov
stos
idivb
imul
sarb
jmp
jb
inc
pop
and
pusha
mov
int3
and
sub
rcrb
adc
xchg
sbb
repz
add
out
leave
out
or
push
sub
cmc
int3
inc
lcall
out
ss
jecxz
mov
bound
pop
mov
sbb
lock
call
mov
bound
cmp
in
mov
mov
std
jle
add
sub
inc
repnz
in
outsb
pop
cli
mov
mov
inc
xchg
cmp
add
outsl
add
fistpl
fistl
insb
or
mov
mov
cmp
jmp
pop
pop
outsl
outsl
mov
push
push
push
adcl
pop
std
ljmp
push
xchg
frstor
incb
in
pusha
mov
push
mov
jg
loopne
xor
subb
and
dec
jg
adc
sarb
cld
sbb
clc
pop
push
cmp
clc
mov
add
jno
jecxz
test
xor
pop
adc
fbld
stos
push
sbbl
push
cmpsl
rolb
divb
adc
ljmp
loop
sub
push
sub
jne
mov
adc
inc
and
lret
add
lcall
push
loope
insb
cld
jmp
cmp
divb
mov
or
call
mov
imul
out
leave
mov
jg
decl
out
stc
popa
mov
repz
cmpsb
pop
mov
mov
mov
pop
call
push
mov
enter
sbb
hlt
iret
out
mov
inc
call
push
outsb
mov
sbb
xchg
ficompl
or
cmp
jg
inc
or
inc
and
dec
xor
or
lea
jnp
push
fmull
outsl
stos
fwait
lods
jns
mov
mov
ret
imul
mov
push
lcall
xchg
pop
movsb
jp
stos
int
jmp
decl
xor
xchg
pop
xor
fidivl
jmp
addr16
sbb
psubq
ffree
insl
imul
decl
inc
pop
sbb
mov
or
cmpsb
or
lods
push
or
cmpsl
out
xlat
pop
gs
dec
sub
cs
sbb
clc
cwtl
push
nopl
pop
mov
xor
call
repz
add
mov
dec
lcall
cmpsl
stos
icebp
push
adc
jns
pop
loop
cmpxchg
lods
in
insl
mov
inc
cmpl
inc
sbb
jmp
cli
inc
add
add
mov
imul
cmp
xor
addr16
push
sbb
inc
aas
sub
adc
fsubr
outsb
out
push
gs
inc
jg
aaa
mov
les
aad
aam
dec
movsl
subb
xchg
pop
loopne
fists
adc
sbb
dec
cmp
jecxz
imul
jg
data16
dec
imul
sbb
mov
adc
pop
mov
lcall
jge
cmp
test
xchg
pop
cmpb
jg
dec
mov
and
loope
or
or
jle
mov
mov
mov
out
fiadds
pop
mov
sbb
pushl
inc
push
jge
cmp
cmpsl
xchg
adc
cmp
sub
sbb
fisubrl
inc
jmp
daa
xchg
stos
loopne
clc
jmp
or
loop
divl
ficomps
popa
dec
dec
push
loop
aaa
clc
pop
cld
loope
and
leave
je
ret
in
sbb
neg
pop
fwait
decl
cltd
jecxz
jns
in
enter
ljmp
imul
jnp
pushl
nop
dec
mov
jge
xor
pop
jne
mov
clc
outsl
mov
or
aaa
mov
sub
decl
adc
sbb
adc
testb
sub
xchg
flds
mov
decl
mov
test
cmp
pop
mov
cltd
jl
jg
jecxz
sbbl
xchg
ret
filds
adcl
adc
cmp
mov
cmp
pop
loop
test
int3
ret
push
imul
sub
jg
sub
sub
nop
dec
cmp
fisubrl
sti
pushl
push
mov
xor
repz
add
pop
xchg
mov
iret
xchg
mov
or
dec
xchg
orb
out
inc
out
jg
pop
cmp
imul
mov
repz
jp
pop
bound
adc
dec
mov
stos
sahf
aam
loope
nop
or
add
mov
mov
addr16
sti
je
test
add
ljmp
push
clc
mov
push
or
xlat
stos
jge
aad
int3
mov
outsl
inc
shll
dec
imull
xchg
push
mov
divl
loop
std
ljmp
int
sbb
shll
pop
jl
pop
jmp
jmp
dec
frstor
push
pushl
mov
cmc
flds
adc
cmpsb
fucomip
add
lods
aam
dec
outsl
js
iret
pop
push
popa
arpl
fstl
idiv
lcall
stos
mov
push
mov
or
add
sub
push
mov
adc
in
mov
jg
jno
xchg
push
inc
out
ds
xchg
dec
cmpsl
jno
xchg
xchg
filds
xor
mov
inc
cs
out
sbb
xchg
ret
loopne
jg
pushl
sub
sub
dec
dec
pop
sub
cmp
loope
cmp
enter
ljmp
and
cmc
cli
das
fmul
subl
shrl
dec
jb
mov
in
lcall
push
inc
je
imul
stc
mov
idiv
sahf
jecxz
push
ljmp
mov
or
repz
cmpsb
xor
mov
loope
pop
jp
and
sahf
jp
cmp
and
cltd
mov
fisttpl
iret
push
pop
sbbb
push
pop
pop
out
mov
mov
push
xchg
je
and
ljmp
xchg
insb
push
dec
outsl
push
je
pushl
mulb
xchg
in
incl
incl
mov
inc
shrl
jo
fcmovbe
out
das
rcll
sub
aas
inc
das
dec
fidivl
dec
cmp
pop
push
mov
jg
xchg
les
outsb
push
sub
sarb
jae
push
call
std
idiv
icebp
loop
ljmp
fwait
std
std
out
sub
stc
loop
xchg
imul
push
or
mov
outsl
icebp
jmp
xor
xchg
adc
mov
dec
sub
jg
test
xchg
outsb
or
shl
adc
rcll
push
pop
out
incl
and
jp
sbb
inc
sar
cwtl
or
push
mov
stc
rcll
inc
jp
jg
cwtl
inc
jb
xor
fs
out
fs
fbstp
xor
add
jg
mov
cld
push
inc
mov
cmpsl
add
pop
mov
in
mov
adc
sarl
pop
add
lock
sbb
mov
mov
cmp
daa
scas
pop
out
pop
cmp
das
jge
ljmp
jp
aad
mov
cmp
xor
mov
imul
sbb
in
jg
mov
jp
andl
into
sbb
ja
les
push
lcall
jmp
push
cmc
cmp
sub
popl
sbb
xor
cld
jmp
fldl
movsl
pushf
out
testl
xchg
mov
mov
xor
pop
sub
test
inc
jae
lretw
dec
mov
fsubr
pop
in
sbb
in
dec
imul
mov
jg
adc
or
and
icebp
enter
adc
stos
hlt
jae
sub
insb
ds
sub
das
push
ljmp
je
xor
push
scas
ss
decl
div
mov
lret
add
mov
hlt
or
cmp
inc
pushl
lods
sub
icebp
mov
les
mov
rcr
jge
decb
cmp
cmp
inc
incl
sbbl
or
or
push
adc
jg
lcall
cmpsb
test
pushf
cltd
mov
repnz
pop
aad
jnp
adc
ljmp
jg
mov
or
stc
lds
and
push
lahf
fdivrl
clc
jmp
or
inc
push
sub
repz
lea
mov
mov
pushl
jmp
push
pushf
push
jae
xor
mov
lods
lret
push
dec
mov
ljmp
ja
arpl
xor
pop
or
push
cmp
outsb
leave
cli
scas
mov
das
lock
pop
aaa
push
inc
pop
loopne
xchg
jmp
and
push
inc
aad
pop
cmp
idivb
mov
xchg
ja
rorl
push
add
stc
pushf
dec
xchg
pushf
fwait
jmp
imul
int
das
push
in
idiv
decl
pop
mov
push
inc
mov
pop
pop
cs
pop
xchg
das
flds
add
jge
popf
into
out
pushf
adc
add
jno
push
mov
mov
mov
add
push
std
fwait
mov
loop
in
pop
mov
cli
out
mov
testb
js
out
mov
call
pusha
pusha
shll
cmovp
and
sahf
pop
pop
cld
ljmp
cmp
adc
inc
imul
push
xor
xchg
dec
icebp
jb
inc
jnp
ljmp
inc
aad
and
test
mov
sub
mov
adc
add
aad
negl
insl
xchg
lods
add
push
outsl
jl
dec
aas
push
das
movsb
xlat
pop
je
imull
icebp
or
add
mov
in
lahf
jo
in
movsb
adc
mov
and
rol
and
in
jecxz
outsb
stos
stc
dec
xchg
call
pop
jne
lcall
inc
cmp
cmp
jae
das
fs
sub
ljmp
xchg
insb
jp
pop
xchg
outsl
shll
add
inc
ret
fcoms
ds
ljmp
or
popa
xor
cmp
dec
mov
es
sub
fcoml
mov
inc
aaa
lret
xlat
sbb
cmp
or
loop
inc
repz
sbb
jg
call
mov
or
loop
pop
jl
inc
aam
repz
idivl
iret
pushl
insb
lds
add
jo
sub
es
pop
shll
dec
fs
dec
sbb
stos
incl
cmp
sbb
hlt
hlt
sbb
xor
lock
push
lods
not
push
ret
sbb
call
orb
cli
loop
or
out
xchg
int3
adc
inc
test
ljmp
lods
pop
pop
stc
pop
lcall
inc
mov
jle
adc
lcall
push
dec
mov
sbb
or
pop
jne
push
cmp
pushf
pop
popf
les
imulb
jg
incl
xor
mov
in
dec
popa
adc
add
cmpsl
fisttps
fstpt
mov
subb
decl
scas
je
popl
pop
popf
dec
stos
jmp
xchg
xor
fstl
in
pop
test
frstor
jne
dec
pop
hlt
dec
test
call
push
int3
add
mov
jp
incl
xchg
dec
pop
addb
or
fists
cmp
into
call
adc
push
lret
pop
jo
sbbb
inc
sub
shrl
push
jne
in
or
sbb
mov
aam
test
call
bound
adc
dec
mov
xchg
repz
cli
mov
aaa
xchg
shlb
cmc
mov
cld
pop
cwtl
jecxz
lods
jae
adc
jae
arpl
push
add
cmp
add
cmp
icebp
in
adc
rcl
ret
enter
inc
pushl
cld
mov
aad
xchg
lret
into
outsl
sbb
ret
sbb
and
stos
mov
rorl
fidivrs
mov
iret
loope
ds
movsb
cmp
pop
sbb
mov
mov
inc
xchg
xlat
mov
lods
pop
orl
mov
mov
sbbb
out
jl
imul
add
popa
test
outsb
lret
decl
ja
pushf
sub
pop
mov
mov
loope
lock
dec
leave
fstps
fbstp
arpl
lcall
jl
mov
adc
leave
inc
and
add
xchg
arpl
lcall
in
decl
dec
jmp
sub
lods
adcl
test
mov
rorb
pop
pop
mov
dec
jp
dec
jl
mov
outsl
push
pop
movsl
call
add
stos
sub
pop
stos
out
jo
out
or
loopne
les
shlb
lods
jge
fcmovb
xchg
lods
xadd
push
mov
leave
scas
outsl
xor
mov
xchg
cmp
xchg
xor
pop
push
xchg
outsl
cmc
mov
mov
cld
mov
out
ret
inc
cmp
cli
pushl
clc
std
sub
aad
xchg
outsl
dec
xorl
leave
pop
aam
lods
push
mov
out
into
jbe
sub
iret
pop
xchg
cmp
jno
push
push
jg
and
inc
push
repz
mov
sbb
inc
mov
lret
int
cmp
fiaddl
pop
clc
subl
or
insl
mov
cmp
cmp
mov
call
movsl
mov
push
subl
dec
out
mov
mov
and
pop
loopne
add
and
and
or
fildll
fmuls
sub
cmp
xchg
stc
cmp
sub
addr16
incb
xchg
and
imul
rolb
adc
pop
xchg
lret
ljmp
dec
pushl
stos
sbbl
dec
adc
pop
pop
es
or
push
cmpsl
daa
cli
das
cmc
jmp
aaa
mov
hlt
mov
in
cmp
xchg
pop
and
das
inc
std
pop
fldenv
jne
jg
les
outsl
mov
dec
int3
fs
and
pop
cmp
xchg
adc
popf
pop
mov
jmp
ja
in
arpl
xor
aam
xor
mov
lcall
bound
and
mov
dec
adc
je
or
leave
mov
hlt
inc
in
lea
dec
push
jbe
or
xor
lea
lahf
ret
inc
adc
mov
push
cmc
inc
adc
test
movsl
mov
sub
inc
fcomi
test
decl
add
mov
push
pop
nop
test
inc
sbb
loopne
adc
daa
jbe
add
jg
lods
xchg
out
ret
es
pop
sub
mov
sub
ljmp
lock
push
std
mov
and
loope
sbb
mov
cli
les
mov
or
jecxz
inc
or
pop
movsl
cmp
test
jle
ss
pushl
sahf
mov
mulb
sbb
loop
std
das
mov
fwait
dec
call
inc
or
clc
dec
sub
cmp
pop
lods
inc
and
fcomip
stos
addl
std
arpl
mov
sbb
cmp
jne
pushl
adc
jae
jb
inc
std
xor
pop
mov
xor
test
mov
jg
mov
imul
adc
call
ljmp
rolb
mov
addr16
testl
push
jle
std
ljmp
pop
data16
mov
jge
enter
xchg
xchg
mov
cmp
les
dec
push
or
fstpl
pop
mov
mov
cmpsl
lret
nop
daa
xor
cmp
adc
ljmp
mov
mov
divl
adc
pop
sub
mull
orl
sti
outsl
std
dec
sub
jg
push
sbb
out
or
jmp
mov
push
icebp
push
sub
adc
push
je
push
push
cli
jae
fnstcw
pop
lock
repz
xchg
adc
xchg
mov
dec
dec
push
lcall
cli
sub
xchg
insl
subl
rolb
dec
lret
cwtl
lods
push
push
lahf
fistpl
mov
xchg
jne
cmc
xchg
mov
fbstp
idiv
les
pop
sbb
add
stos
outsl
or
mov
jmp
jmp
imul
lea
dec
and
dec
fucomi
cmc
sbb
xchg
cmc
mov
adc
add
in
cwtl
stc
adc
jns
mov
decl
sbb
adc
cli
pop
mov
dec
mov
insb
push
movsl
mov
mov
nop
lods
lea
fdivrl
mov
inc
cmp
cwtl
pop
incl
dec
cmp
jecxz
sbb
icebp
push
ret
and
decl
adc
inc
mov
add
adcl
insb
out
inc
fbld
cmpsl
aas
jbe
pushl
xchg
push
jecxz
pop
mov
sub
insb
mov
xchg
arpl
sub
dec
stos
mov
in
scas
es
push
call
jo
xchg
or
mov
push
xchg
lcall
sar
jg
lea
stos
cmp
lods
and
decl
decb
sbb
push
mov
arpl
lods
sarb
push
jg
in
cli
xchg
cli
push
xor
and
mov
push
pop
adc
imul
mov
and
mov
sbb
lcall
sub
hlt
cmpb
outsb
cmpb
in
dec
mov
mov
push
lcall
stos
sub
sbb
pop
sahf
cmp
or
mov
outsl
or
lret
repz
mov
call
jns
xor
test
sbb
js
loop
fdivrl
xchg
movsb
js
ja
sub
imull
sub
adc
jne
cmp
clc
push
incl
fdivs
xorb
ffreep
mov
outsb
hlt
inc
popa
aam
loope
aaa
scas
dec
movl
dec
es
flds
fidivrs
lcall
jg
xchg
lea
xorl
pushf
sub
mov
imul
mov
loop
mov
mov
adc
int
repz
adc
insl
xlat
mov
stos
pop
mov
inc
outsl
pop
jno
decl
or
mov
mov
jne
lahf
pop
movl
pop
sbb
cmpl
nop
dec
movsb
orl
das
mov
dec
xchg
pop
add
mov
enter
xchg
xchg
in
mov
enter
incl
adc
mov
jp
ficoms
ss
faddl
fstps
sar
inc
mov
jb
push
imul
and
xcrypt-cfb
cmpsl
movsb
leave
cmp
xchg
xchg
mov
pushl
test
inc
je
inc
mov
lcall
fists
or
adc
js
pop
or
sub
lods
incl
lcall
cld
pop
lea
cli
push
fidivrl
mov
xor
je
inc
jnp
nop
ljmp
mov
push
js
fwait
lods
scas
pop
pushf
test
rcll
ljmp
lods
lods
imul
jp
lock
dec
pop
fildll
loopne
push
lcall
mov
add
in
out
push
and
sub
cmpsb
mov
shrb
call
mov
xchg
adc
ds
cld
call
dec
mov
fidivrl
xchg
add
mov
rcr
ljmp
rcrb
mov
stc
inc
hlt
dec
sub
incl
mov
mov
adc
mov
sbb
dec
cltd
and
xchg
dec
xchg
xlat
push
dec
sbb
pop
and
dec
sahf
test
das
mov
xchg
xor
or
aaa
and
dec
ljmp
cli
mov
scas
jl
movsb
fwait
sti
jmp
inc
movsl
loope
sbb
adc
insb
jle
or
jg
sub
inc
sub
inc
pop
in
idivl
pop
ficoms
push
xor
cmc
adc
lcall
pop
cld
decl
xchg
or
inc
cs
stos
mov
sub
mov
inc
xor
mov
arpl
push
into
fdivrp
incl
xchg
and
sarl
inc
in
scas
movsl
sahf
pop
mov
add
jg
decl
inc
sarb
adc
inc
pushf
ja
insb
stc
cmp
lods
decl
out
out
nop
aaa
xchg
xlat
hlt
xorb
std
fistps
and
out
movsl
seta
aad
lock
cmp
outsl
outsl
inc
icebp
cli
lahf
pop
and
sbbl
jp
stos
cltd
lahf
pop
test
je
in
or
jae
xchg
sbb
fildll
imul
dec
stc
dec
js
cwtl
mov
push
lcall
fcoml
cmp
jnp
mov
outsl
je
insl
sbb
push
das
xchg
add
outsl
cld
mov
sahf
sti
jp
mov
sub
dec
sbb
incl
mul
sarb
xor
popa
movsb
and
cli
cmp
out
clc
jmp
mov
nop
adc
scas
rclb
cmp
push
fbld
cmp
sub
popa
xor
dec
popa
pop
cmp
call
dec
push
aad
pusha
jne
cmp
int
mov
enter
movsl
dec
movsb
pop
loopne
incl
jae
ds
data16
push
addr16
daa
shlb
pushl
and
insb
and
jne
jmp
mov
clc
call
pusha
mov
and
icebp
xor
adc
jl
loopne
dec
subl
sbb
cmpsl
or
sub
fxch
adc
xchg
mov
sahf
std
xchg
lods
int3
jle
pushl
add
test
dec
mov
and
cmp
adc
push
loopne
incl
and
sbb
xchg
adc
scas
sbb
push
aam
push
sub
outsl
ljmp
lods
pop
fsincos
adcl
dec
mov
dec
jne
fistpll
insl
cmc
xor
mov
bound
sub
mov
sbbb
call
push
iret
sub
dec
mov
inc
sbb
inc
inc
xor
mov
adc
mov
maxps
push
jg
jge
push
call
push
jge
out
mov
adc
rcr
jnp
mov
xchg
cmp
mov
shrb
inc
jmp
inc
jg
icebp
or
push
test
dec
shl
es
mov
rolb
mov
xchg
mov
lods
xchg
pop
jmp
loop
jp
icebp
fwait
leave
mov
in
rorl
imul
jg
jmp
cmp
xchg
push
and
add
repnz
xor
ljmp
mov
mov
push
jmp
mov
les
hlt
inc
adc
scas
hlt
dec
push
negl
dec
pop
dec
das
cld
decl
outsl
push
testl
gs
ret
pushl
pop
aad
jne
inc
in
shl
clc
jns
push
sbb
xor
xchg
mov
xor
aaa
xchg
int
cwtl
ret
lahf
jb
sub
mov
inc
inc
inc
ds
xchg
ljmp
jb
es
ljmp
test
fcmovnb
and
pop
lcall
imul
jg
dec
or
jmp
stos
xor
sti
insb
pop
test
adc
pusha
insb
bound
nop
pop
adc
and
pop
idivl
inc
sub
jmp
xchg
xlat
out
test
in
pop
sbb
jnp
dec
xorl
out
push
rolb
stos
mov
xor
mov
stos
lcall
lock
or
and
mov
movsb
sub
ja
jb
pusha
pop
sub
cwtl
inc
cltd
add
lods
xor
add
push
imul
rcrb
push
jae
and
stos
mov
lret
ss
stos
inc
ret
lods
or
push
adcb
lds
ljmp
fwait
int3
fnstenv
test
jp
dec
subb
fidivrs
or
cmp
add
pop
and
fwait
enter
or
call
fstps
push
push
dec
inc
dec
fucomip
lret
pop
pop
in
adc
cli
jle
pop
cmp
sub
mov
lea
lcall
lods
sbb
pop
mov
push
daa
insb
or
fimuls
jne
dec
lcall
mov
and
aas
imul
repnz
scas
nop
xchg
pop
jmp
ljmp
mov
jnp
icebp
xchg
movsb
pop
js
add
jmp
sub
mov
movsl
add
lods
or
andb
xor
decl
fcoml
mov
int3
and
sbb
hlt
nop
mov
mov
imul
cs
imul
cmp
mov
dec
sar
adc
sahf
push
xchg
push
mov
and
mov
repz
adc
shrl
jne
push
es
push
movsl
rcll
cmp
rorl
adc
jl
lock
sub
insb
dec
adc
ljmp
ljmp
ljmp
out
pop
f2xm1
outsb
cmp
call
or
mov
jg
fwait
sub
mov
mov
roll
xor
jns
sbb
jne
jbe
repnz
aam
jecxz
lcall
cld
mov
adc
call
ja
xor
mov
lods
das
mov
adc
mov
fisttpl
incl
adc
dec
mov
js
leave
fs
jecxz
xorb
fsubrl
loop
mov
ss
mov
xchg
clc
lds
cmp
js
jmp
xchg
mov
mov
cmp
jge
xchg
and
mov
push
inc
mov
repz
pop
cmp
aas
add
dec
xchg
in
in
imul
fs
popa
pushl
stos
xor
mov
adc
in
insb
add
decl
or
mov
and
mov
fisubs
fnstsw
call
pop
inc
fucom
push
pushf
movsb
push
div
sbb
jnp
loop
pusha
sub
sub
pushl
mov
stc
out
push
and
insl
cmpsl
xor
push
inc
pop
push
daa
shl
lret
fisubl
mov
neg
xor
inc
in
mov
incl
pop
rolb
inc
ret
addr16
or
sbb
jl
pop
xchg
call
cltd
sub
cmp
or
arpl
add
stos
dec
inc
or
mov
lcall
inc
xor
xchg
cmp
in
adc
aaa
mov
mov
or
sbb
pushl
cld
cmp
push
push
mov
jg
outsb
xchg
push
and
push
outsb
es
stos
clc
aad
add
test
push
xchg
adc
stos
mov
cmp
adc
int3
xlat
daa
pop
xor
incl
sarl
les
or
popf
inc
jecxz
cmp
subl
push
or
inc
imul
jg
decl
add
adc
add
subb
test
push
adc
shrb
mov
aaa
outsb
push
out
pushf
cwtl
or
or
es
jecxz
mov
sar
pushl
shrb
rcrb
ret
inc
loope
cmc
addr16
ret
mov
cmc
loop
inc
ds
xchg
movsl
ljmp
movsb
mov
stos
or
fcmovnb
xchg
push
jbe
pop
incl
xor
insl
enter
inc
add
lods
mov
push
call
and
dec
or
bound
out
mov
in
and
das
cld
xchg
cmpsb
adc
mov
call
inc
sub
fsubl
mov
mov
xchg
cmc
jge
cmp
int3
addr16
aaa
out
aam
jp
inc
jns
sbb
add
cmp
loop
push
fmuls
mov
decl
int
test
jle
mov
sub
jmp
inc
pushl
adc
pop
adcb
cmpsl
jne
xchg
stos
outsb
push
aam
inc
sar
pop
pop
mov
pop
repz
fwait
aad
outsb
lds
cs
ss
and
cmp
pop
fmull
idiv
sub
movsb
pop
inc
ljmp
into
xor
pop
dec
loop
jecxz
push
inc
dec
push
andb
inc
jnp
into
push
cmp
inc
lcall
push
subl
jnp
movsl
enter
test
test
dec
aaa
xchg
sub
int3
cli
mov
adc
rcrb
pop
call
in
cld
sub
inc
lcall
std
sub
aas
pop
cmp
imul
movsb
es
mov
cmpsb
iret
mov
pop
and
mov
xchg
add
mov
rorl
inc
lock
or
dec
es
cmc
inc
jae
jg
das
jno
call
push
hlt
ret
fwait
rolb
in
fidivl
enter
inc
test
test
ret
sbb
stos
mov
cld
loopne
mov
push
ljmp
lods
mov
jmp
cmp
xchg
int3
lret
cmpsb
mov
sub
fnstcw
dec
incl
aad
dec
dec
push
jge
jp
add
inc
jae
loop
xlat
test
mov
and
rcll
push
dec
fsubp
aad
xor
and
ret
out
js
cmp
pushf
aas
fisttpl
jbe
lahf
js
mov
inc
arpl
dec
or
loopne
pop
ljmp
and
cmp
arpl
dec
sub
cld
dec
es
push
loopne
xor
add
clc
test
push
dec
gs
or
inc
xchg
into
ficoml
inc
sbb
mov
mov
call
xchg
and
jl
ljmp
adc
rorb
fs
imul
push
pop
ljmp
fsubp
aaa
xchg
inc
inc
mov
aaa
into
mov
xor
lahf
sbb
mov
jmp
fists
outsb
fadd
lods
pop
sub
jecxz
pop
ljmp
mov
stos
mov
iret
xlat
lcall
lods
stos
inc
push
inc
xor
roll
sbb
mov
jg
cli
jle
int3
jne
bound
push
clc
negl
fwait
add
jnp
dec
addr16
lret
in
jle
ret
jl
pusha
jb
nop
dec
outsb
ret
aaa
in
xor
lret
add
shlb
mov
xchg
or
stc
dec
cld
push
pop
icebp
je
pop
push
lahf
fbld
iret
cmpsb
sub
fs
inc
daa
and
push
dec
out
gs
add
lea
adc
enter
dec
stos
and
call
lods
dec
iret
xorps
incb
xchg
rcll
das
cmc
ljmp
ret
out
mov
inc
data16
mov
jg
fcmovu
outsl
sbb
inc
mov
lea
cmpsl
mov
jg
inc
and
scas
pop
add
bnd
ljmp
fisttpll
test
fdivp
fsubrl
lret
hlt
xor
pop
out
lahf
daa
subl
out
push
pushl
mov
sbb
cvtps2pd
adc
leave
ret
cli
cli
imul
fidivrs
inc
outsl
cld
lcall
mov
jle
cmp
sarb
cmp
xchg
sbbb
hlt
mov
clc
data16
std
pop
clc
outsl
adc
jnp
aad
inc
out
mov
std
decl
pusha
xchg
or
jno
fisttps
adc
jecxz
ljmp
cld
sub
dec
pushf
inc
mov
jmp
arpl
sbb
sbb
cmp
push
inc
call
jecxz
int
mov
jp
test
or
mov
mov
lock
es
aaa
sti
inc
daa
inc
jmp
call
fs
push
negb
fwait
inc
jns
cld
xlat
adc
dec
ljmp
scas
mov
lods
sar
pusha
lock
decl
inc
popa
xlat
data16
testl
mov
jmp
adc
andb
sbb
lock
cli
pushl
cmc
xchg
arpl
in
inc
push
jne
lods
inc
nop
pop
sbb
fildl
push
jecxz
push
jmp
xchg
enter
inc
lods
add
ds
les
movsl
jle
call
and
out
hlt
aaa
sub
inc
push
mov
inc
fldln2
xchg
jmp
push
popa
negl
repz
mov
push
imul
cmp
jge
mov
outsl
scas
and
lea
aas
jo
dec
sti
or
sti
notb
mov
adc
int
mov
nop
inc
ja
mov
and
ficoml
lcall
mov
shr
dec
les
push
filds
pop
shll
into
inc
cld
lahf
mov
cmc
xor
lahf
xchg
into
pop
mov
ljmp
mov
and
mov
nop
clc
pop
loope
filds
lods
dec
xchg
cltd
cmpsl
pop
outsb
and
repz
push
pop
jl
mov
sbb
or
adcl
enter
mov
cli
adc
xchg
or
cwtl
or
mov
sbb
push
lea
mov
test
ret
fstl
push
fmull
std
repz
lods
insl
fwait
addb
or
out
and
push
sbbl
ljmp
pop
mov
test
cmpsl
je
frstor
add
inc
adc
push
imul
ljmp
cmp
in
lret
fiadds
cltd
jb
or
dec
imul
popl
mov
lcall
lcall
cltd
pxor
pop
hlt
cmp
and
jecxz
xor
stos
push
test
dec
inc
daa
in
movsl
js
inc
call
sarl
jg
fidivs
stos
jmp
in
ret
xchg
pop
add
repz
lea
rcr
cmpsl
push
movsb
adc
pop
push
dec
xchg
and
mov
std
decl
add
sar
push
mov
jne
xchg
inc
outsl
mov
mov
jg
and
or
mov
xchg
jns
call
nop
test
sbbb
and
ja
cmpsl
aam
dec
test
adc
sbb
jg
dec
inc
stc
xor
xorl
pushf
mov
imul
outsl
in
sub
push
push
jmp
iret
hlt
and
shrb
inc
and
data16
lret
inc
repz
lcall
dec
dec
adc
or
ljmp
cmc
movsl
outsb
std
pop
pop
xchg
jmp
xchg
int
xchg
shl
pop
clc
dec
adc
imul
pushl
mov
and
sub
mov
gs
cld
decl
push
and
ljmp
xor
mov
in
fdivrl
add
decl
js
int
roll
mov
jae
sbb
adcl
add
arpl
test
cmpsl
hlt
sbb
or
jge
pushl
adc
mov
xchg
add
or
push
ret
add
xchg
lahf
push
dec
in
out
inc
sbb
cli
adc
mull
mov
xor
in
pushl
loop
jmp
fidivl
ret
iret
ss
cmc
pop
outsl
mov
pushl
rorl
sahf
imul
lea
or
sub
adc
cmpsb
xchg
inc
cltd
jo
push
clc
adc
mov
aaa
clc
js
xor
in
mov
fstpl
cwtl
mov
inc
ret
adc
shr
pop
shlb
pushf
ljmp
les
cs
push
ljmp
inc
mov
orb
in
xchg
or
mov
push
xchg
loope
imul
jb
push
call
xlat
pop
xor
cmp
loope
jno
movsb
or
xor
incl
jae
stos
adc
xor
data16
loop
lcall
jo
imul
sub
mov
insb
leave
call
or
out
ret
loopne
mov
xchg
pop
cmc
inc
lcall
ds
push
test
jb
lahf
sbb
lods
and
incl
cmp
adc
test
add
jle
ja
ss
pushl
mov
cmp
dec
rorl
outsb
in
call
fbld
pop
fcoml
stos
test
jbe
fnstsw
decl
cmpb
jns
orl
stc
lret
scas
ja
enter
cli
mov
call
ret
and
call
push
call
pushl
pop
jns
lcall
test
in
pop
lret
inc
push
out
adc
jle
xchg
pop
aaa
xlat
or
je
mov
in
loope
cmp
pop
pop
imul
adc
inc
sahf
jb
outsb
sub
in
xor
ficoms
or
icebp
pop
dec
and
add
data16
dec
and
or
nop
out
mov
lcall
dec
aam
pusha
pop
inc
int
lods
std
cs
add
mov
inc
mov
jmp
mov
pop
pop
add
cli
lea
or
into
xchg
sarb
decl
cmp
or
xor
sub
mov
shll
mov
xor
fimuls
adc
push
push
mov
push
jmp
adc
jns
call
push
daa
sbb
aam
in
stos
add
xor
dec
jnp
dec
std
lcall
fucom
jbe
pop
xchg
pop
les
nop
mov
jg
xor
sti
in
cmp
out
adc
jle
sub
cs
pop
insl
clc
pushf
inc
ljmp
mov
aam
jmp
and
jle
mov
into
mov
mov
mov
sbb
lds
and
cs
inc
test
xchg
push
mov
jmp
mov
push
ja
shrb
aam
cmp
in
push
adc
jae
lret
lcall
adc
cli
js
fcoml
shrb
in
sbb
clc
mov
push
add
out
add
addr16
mov
jb
mov
cmp
xor
mov
jbe
jle
fwait
shrl
decl
jbe
testb
fstps
push
fbstp
jae
and
das
insb
hlt
mov
rcl
ret
lds
push
dec
call
jmp
sbbb
pop
cwtl
mov
cli
dec
or
sub
xchg
pop
pop
test
push
inc
sub
xchg
not
test
jg
and
iret
mov
add
call
clc
mov
jne
mov
and
mov
mov
cli
push
cld
decl
cmp
cs
dec
pop
mov
pop
adc
rclb
xchg
cli
ljmp
loopne
cli
fimuls
lret
sub
add
mov
jmp
lret
into
imul
test
xchg
mov
sbb
pop
aaa
hlt
pop
mov
sti
das
add
mov
mov
cmp
jl
add
call
dec
mov
clc
loopne
test
pop
mov
xchg
imul
xor
lahf
inc
dec
cltd
xchg
fwait
dec
dec
loop
je
xor
dec
out
or
pop
adc
ljmp
xlat
add
jo
pop
mov
inc
sub
cmp
cli
movsl
push
stc
inc
mov
inc
cltd
jne
mov
sub
leave
cmp
ret
test
cmpsb
cli
jo
push
inc
popf
adc
or
and
in
repnz
jo
ljmp
inc
jmp
insb
pop
pushl
cli
add
mov
or
test
and
leave
xchg
fisubrl
decl
aaa
and
push
cmp
push
or
push
mov
les
mov
aas
fucom
or
jno
in
in
icebp
jg
mov
test
jae
mov
decl
add
cs
pushl
clc
ret
cld
imul
dec
fcompl
test
cld
aad
adc
data16
cmc
dec
lea
cmc
shll
adc
add
mov
pushl
xor
sbb
stc
adc
dec
push
xor
xchg
inc
subl
imul
add
or
cmp
loope
ror
pop
das
add
jmp
cmpsb
inc
sub
adc
lods
jmp
pop
iret
or
mov
sahf
lock
cli
push
clc
gs
cld
lcall
fisubrs
inc
aad
sahf
xor
adc
push
jbe
dec
and
scas
fcomip
ror
xchg
lret
sbb
inc
and
lods
adc
paddusw
sub
xchg
sub
andb
xor
push
in
and
pushf
inc
stc
int3
mov
lret
cmpsl
mov
dec
out
ljmp
add
jns
lods
pusha
sti
aas
lret
aaa
lock
adc
xor
fisubrs
sar
mov
mov
inc
sar
or
sbb
mov
daa
mov
fnsave
repz
fcomi
nop
push
imul
js
ja
jl
cmp
and
add
pop
jno
int
inc
mov
fucomp
jg
jmp
mov
nop
and
in
sbb
mov
cmpsl
sbb
mov
adcl
scas
sti
out
rorl
inc
or
aas
nop
sbb
inc
add
jl
sbb
pop
mov
movsb
popa
bound
sti
cmpsl
pop
adc
mov
fsts
test
mov
mov
push
sub
dec
cmp
jmp
pusha
repnz
jg
scas
mov
xchg
int
mov
fmull
out
or
xor
pushl
repnz
jmp
movsb
js
sub
aad
adc
mov
js
dec
mov
out
jns
orb
fwait
dec
inc
mov
mov
mov
pop
xchg
shrb
jmp
data16
mov
aad
add
push
nop
aam
incl
adc
pushf
cmp
and
xchg
jbe
jle
mov
mov
mov
pop
lret
sbb
add
mov
xor
ret
add
dec
pop
lcall
aad
push
out
cmp
dec
push
scas
repz
andl
cwtl
fistpl
inc
mov
lcall
aam
push
push
out
stos
pop
aas
ficoml
movsl
dec
std
mov
js
mov
push
ja
lcall
mov
scas
jecxz
imul
ficompl
jp
mov
xor
mov
sbb
movsb
pop
dec
rorb
rolb
sub
fcomi
sbb
adc
call
aam
hlt
bound
rolb
dec
push
cmc
test
out
shrl
aaa
ljmp
stc
mov
jns
jg
frstor
xchg
test
in
repnz
inc
std
or
aad
cmp
rorl
push
mov
fmull
and
push
fimuls
jecxz
mov
dec
repnz
xlat
jg
stos
aas
or
call
pop
sbb
mov
mov
jg
cmp
lods
fiaddl
cmpsb
xor
cmp
adc
or
fstps
mull
ja
fwait
push
push
and
cmc
movsb
stos
stc
add
int3
push
mov
stos
idivb
cltd
ljmp
cld
and
sbb
loopne
mov
das
out
mov
in
xchg
push
dec
cs
in
mov
int
push
insl
int
gs
or
sbb
mov
lock
std
lcall
pop
jne
push
in
dec
lock
gs
sub
iret
movsl
clc
pop
and
iret
cmp
and
sahf
popa
cmp
add
fstps
sub
sbb
and
pushl
cli
out
cmp
das
xchg
imul
fimuls
jnp
sti
xchg
push
mov
pop
inc
add
lcall
add
or
cmpsb
jns
fiaddl
adc
bound
imulb
sar
shrl
pop
cmp
int
cmp
incl
xor
imul
clc
bound
jge
filds
jmp
pop
fistl
mov
lret
sub
dec
mov
sub
decl
mov
mov
mov
pop
lds
aad
enter
adc
jg
pusha
cmp
fs
insb
pushf
faddp
xchg
jns
cmpsb
lock
cld
fistpll
stos
push
in
ljmp
std
push
stos
scas
out
int3
enter
lcall
dec
ret
and
jmp
clc
and
lds
cmp
mov
jl
add
add
stc
xchg
cmc
mov
jo
fistpl
stos
jecxz
js
pop
ss
sub
aam
in
insb
sbb
pop
push
xchg
das
pusha
and
dec
pop
lock
inc
dec
pop
and
xchg
dec
cmp
xor
push
cs
lea
push
lods
mov
in
sub
jmp
jecxz
jns
mov
jg,pt
fs
sbb
aad
stos
in
xor
sti
fnstsw
lcall
into
insb
push
push
lea
sub
repz
les
out
jmp
das
loopne
imul
icebp
sti
adc
out
dec
and
xchg
xchg
icebp
sahf
jg
sub
dec
loope
or
call
mov
push
jmp
push
movsl
pusha
adc
sub
cmpsl
js
push
icebp
nop
and
dec
das
lods
aaa
ljmp
testb
sbb
jne
cld
add
add
fucomip
ljmp
xchg
out
lcall
jo
mov
mov
ret
mov
clc
lea
xchg
push
out
nop
xchg
cmp
mov
mov
push
xlat
pop
int
out
insb
add
repnz
cmp
xchg
ljmp
sarl
pop
fnstenv
xchg
outsb
bound
lock
mov
adc
lea
cltd
pop
xchg
insb
out
incl
test
push
lret
popa
out
sbb
or
call
ljmp
adc
fnstsw
xchg
data16
sbb
incl
adc
shll
mov
insl
popf
add
or
fadd
mov
call
or
push
xor
std
out
add
ja
jns
icebp
insl
std
jns
ljmp
cmp
cmp
jbe
mov
push
mov
or
mov
mov
out
mov
pop
xchg
int3
xchg
arpl
jb
je
ljmp
sar
cltd
mov
leave
jmp
aaa
or
mov
std
popf
pop
loopne
inc
mov
add
in
outsb
jae
stc
push
push
push
inc
rcrb
xor
jns
dec
mov
ret
and
or
outsb
dec
decb
std
lock
jg
sti
movsb
jecxz
adc
dec
insl
sbb
jge
aam
mov
sub
hlt
lcall
inc
and
and
inc
xchg
scas
push
xor
js
ret
insb
push
pop
fstps
shrb
sar
mov
cld
mov
jmp
mov
push
rcl
shll
and
xchg
shrl
decl
loopne
xor
sbb
stos
add
dec
sub
out
cmpsb
scas
leave
and
xorl
loope
mov
xor
and
jbe
dec
mov
push
mov
pushl
cmp
and
push
decl
scas
xchg
shrb
sub
sbb
jg
and
push
inc
mov
lock
lcall
adc
add
das
jl
mov
mov
lds
sti
test
jle
mov
jns
or
js
imul
xchg
sbb
aaa
jg
lahf
pop
inc
mov
jge
adc
imul
inc
xchg
incl
push
or
adc
add
inc
nop
decl
out
fildl
aaa
out
mov
adc
int3
out
test
jmp
inc
mov
inc
movsl
ljmp
das
sbb
jne
fmull
test
xor
pop
ds
das
lock
cmp
movsl
jge
dec
adc
pop
gs
pop
popa
mov
pushl
pop
push
dec
das
xor
or
popl
pusha
rcr
pop
mov
sbb
in
inc
inc
fnstenv
ficoms
scas
outsb
clc
sbb
mov
ret
aas
or
jae
sub
mull
insl
or
call
adc
cmc
js
shrb
loope
cmp
aaa
scas
cmp
pop
iret
mov
mov
lock
pop
add
sbb
popa
lcall
incl
cltd
sbb
mov
sub
push
sbb
ljmp
iret
dec
cltd
mov
jae
add
mov
stos
xchg
sub
inc
repz
shlb
out
pop
add
mov
mov
inc
test
lcall
movsl
es
in
cmpsb
in
mov
pop
int
xchg
push
call
jg
arpl
mov
cmp
test
shlb
jmp
fistps
and
lea
pop
mov
fdivr
jg
mov
inc
mov
adc
dec
cld
jg
or
sbb
mov
xor
xlat
ret
xchg
push
icebp
leave
adc
pop
mov
mov
xchg
shl
dec
sbb
fwait
movsl
and
rorb
test
jg
es
sbb
and
cmpl
inc
lock
xchg
in
andb
les
fdivr
add
popa
jo
idivl
pop
mov
mov
addr16
inc
mov
xchg
jecxz
xchg
push
xchg
fwait
adc
cmovbe
negb
popl
mov
decl
adc
lahf
or
xor
std
adc
push
jmp
push
or
dec
outsb
cmpsb
repnz
movsl
fwait
in
mov
jg
icebp
roll
mov
mov
and
sbb
js
adc
repnz
in
int
xchg
lods
pushl
xchg
cld
sub
and
mov
mov
jmp
pop
lcall
out
mov
jo
scas
inc
out
or
mov
dec
ss
fcompl
adc
push
in
je
scas
mov
inc
data16
cs
xchg
mov
decl
mov
mov
or
xor
push
jp
dec
jg
iret
movsb
cltd
mov
or
cmp
movsb
add
ret
add
cmpsb
cmc
decl
std
out
cltd
imul
mov
in
mov
ljmp
mov
jne
sti
jge
dec
add
cmp
push
adcl
in
fsubl
outsb
mov
and
jns
popf
mov
or
shrl
inc
push
pop
js
cltd
call
movsb
iret
incl
adc
push
leave
mov
pop
lret
clc
stc
mov
test
popa
jns
xchg
std
movsl
negl
inc
icebp
jg
mov
notb
cmp
lods
pushl
mov
das
or
test
fistl
outsl
cmc
and
out
cmp
cmp
lods
iret
stos
jae
lea
test
inc
outsl
scas
repnz
test
inc
fs
ljmp
and
gs
lock
add
jmp
std
add
ljmp
arpl
movsb
mov
or
xchg
aad
clc
mov
mov
jno
ret
fcmovb
xchg
adc
sar
pop
call
shll
subl
cmp
mov
xchg
sub
jno
arpl
xrelease
jns
jle
lcall
sbbb
in
and
pushf
xor
imul
xchg
inc
push
sub
adc
aaa
pushf
dec
lcall
in
ljmp
cmp
pop
stc
push
ds
mov
decl
pop
hlt
cmp
or
xchg
sbb
lret
sti
lea
clc
mov
shlb
xchg
int3
push
loopne
jbe
negl
sar
xchg
xchg
fsubs
or
xchg
adc
push
or
xor
mov
decb
sbb
or
or
jecxz
call
mov
fneni(8087
es
and
lcall
and
add
scas
test
sbb
call
xor
add
adc
mov
or
jb
std
pop
mov
mov
pop
inc
sub
clc
sub
rcll
pop
jle
ficomps
lods
add
mov
mov
cmp
sub
jle
mov
sti
mov
jmp
inc
ljmp
scas
loop
add
push
jne
test
cmp
and
jecxz
testb
out
mov
inc
fwait
jbe
pop
jg
decl
jle
xchg
push
sub
rcl
xor
mov
loope
push
mov
mov
ficoms
out
sti
ljmp
popa
and
or
jbe
mov
cmp
leave
or
mov
adc
icebp
pusha
inc
cmp
fs
fistpl
cmp
push
or
push
subl
fwait
popf
xchg
dec
xlat
and
gs
push
push
ja
movsb
jne
xlat
inc
incl
repz
xchg
mov
push
jmp
test
enter
subb
add
ljmp
and
lcall
movsl
push
or
pop
or
or
pop
adc
movsl
repz
mov
mov
sahf
pop
push
orb
cmpsl
push
jmp
gs
cmp
lret
fcom
cmp
mov
std
in
jmp
mov
fucom
push
jp
out
inc
insb
adc
pop
pusha
add
mov
cs
mov
cmpsl
sbb
xchg
aas
xchg
ret
pushl
aam
adc
adc
inc
movsb
subl
pop
cld
xchg
xorb
xor
xor
inc
inc
repz
lea
ja
orb
push
cmp
pop
adcl
decl
loope
pop
and
cmp
and
shlb
and
incl
jns
pop
mov
inc
adc
in
pop
imul
jle
pushl
lods
lds
push
bound
test
and
fstl
shrb
mov
mov
cmp
fsts
push
and
cld
std
xor
fs
lret
repnz
ja
sub
sbb
rcll
enter
xchg
pushl
pop
jg
and
in
insb
push
add
fldl
cld
test
sbb
fs
pop
loope
xor
pop
insb
cmp
call
and
and
sub
cmpsb
es
xor
push
pop
push
jg
decl
push
mov
pop
divl
push
jo
mov
test
lcall
or
pop
mov
mov
pop
mov
pop
cltd
cmp
push
sub
mov
stc
lds
out
push
mov
adcb
jo
lret
inc
lcall
jg
insb
rcr
popa
cmp
mov
fidivrs
cltd
adc
lret
cld
incl
cs
mov
clc
clc
jp
loope
mov
fucom
or
push
sub
call
push
inc
lahf
fcomps
cli
pop
jae
xor
xor
sub
lcall
add
fwait
and
lds
pushf
pop
mov
shlb
jns
pop
decl
std
int
pop
fdivrs
fcmovne
jp
sub
dec
pop
mov
push
cli
rcrl
test
mov
pop
dec
mov
test
jmp
loopne
jge
xchg
sahf
mov
std
push
lret
dec
jg
and
cmc
lcall
lahf
loopne
dec
cld
outsl
push
xlat
cmp
int3
test
mov
call
loop
adc
outsb
mov
mov
lea
xchg
cmp
jp
lret
inc
push
adc
jb
xchg
inc
aad
pop
adc
fnsave
incl
add
dec
mov
int
xchg
fdivr
jg
js
in
bound
dec
push
movsl
adc
cmp
cmc
pop
adc
jg
lcall
sbb
decb
rcrl
ja
mov
sub
jg
or
sti
push
xchg
cmpsb
out
test
fisttpl
mov
insl
cmp
push
shll
inc
and
ret
dec
or
rcll
push
add
lcall
sbb
or
xor
xchg
cld
std
imul
pop
jae
in
push
imul
dec
les
sti
jmp
rcr
mov
mov
push
adc
jbe
xchg
push
shlb
orb
xor
inc
xchg
hlt
jmp
clc
jg
test
daa
dec
stc
push
and
jbe
ficompl
std
inc
in
into
imulb
sub
cli
out
incl
decl
jmp
mov
stos
clc
loopne
movsb
cli
sbb
mov
ljmp
dec
pop
mov
rcrb
pop
xchg
push
imulb
pop
gs
into
pop
xlat
cmp
lcall
pop
xor
mov
daa
loope
imul
push
mov
outsl
std
mov
lock
loop
xchg
fxtract
fadds
jp
int
movsb
mov
and
rorb
sbb
cmp
call
lock
inc
cmp
adc
jmp
push
nop
cmpsl
adc
mov
das
jge
sbb
sub
inc
fisttpll
sbb
mov
pop
ljmp
sbb
mov
std
incl
bound
ljmp
mov
or
push
add
xor
or
pop
outsl
xor
in
incl
fidivrl
add
add
icebp
or
in
cmpl
addr16
call
cli
ljmp
imul
add
in
in
fstl
rcll
inc
inc
dec
call
xor
movlps
clc
xchg
fwait
test
call
out
and
dec
xchg
inc
lods
and
cmp
xchg
jmp
jb
imul
or
jb
cmp
jmp
xor
ja
mov
dec
xor
pop
mov
ljmp
push
jo
sbb
mov
inc
cli
ljmp
fmul
imul
xor
push
aad
std
mov
popf
sub
mov
mov
scas
or
adc
popa
add
out
lcall
xchg
lods
in
xchg
cmc
lock
jecxz
hlt
push
popa
or
mov
mov
mov
xchg
xor
or
jg
adc
pop
es
inc
or
popf
repnz
std
add
shrb
inc
pop
aam
std
mov
dec
ret
xlat
push
fnstenv
mov
jae
outsb
mov
xor
aad
sbb
pop
shl
js
pop
addl
aam
dec
mov
dec
push
cmp
sub
pop
nop
aaa
push
out
or
cld
lods
push
test
stos
mov
jo
stos
pop
sub
in
mov
push
inc
or
inc
adc
lock
ror
mov
dec
dec
and
ds
or
cwtl
pop
lret
aad
xor
or
or
cld
fists
xchg
pop
jmp
mov
daa
or
in
mov
decl
pop
fwait
sub
add
in
lds
push
push
sbb
hlt
data16
call
test
arpl
pop
adc
jge
jl
and
sbb
adc
cmp
decl
decl
sbb
push
jnp
xchg
fcoml
fucomi
iret
sbb
push
xchg
stos
call
fmuls
fstp
ret
or
jg
mov
int
push
addr16
es
push
mov
fidivl
inc
mov
enter
pop
ljmp
dec
mov
rorl
add
sbb
cmc
mov
icebp
and
icebp
cld
fxch
and
pop
inc
int3
add
imul
inc
out
xchg
out
rcr
inc
idiv
inc
ljmp
adc
xchg
pop
je
pushf
add
fyl2xp1
arpl
pusha
xor
in
cld
push
dec
mov
dec
or
arpl
loope
daa
inc
adc
std
mov
mov
cli
and
imul
inc
cli
xchg
imul
cld
outsl
mov
push
sub
mov
pop
loop
decl
add
inc
mov
inc
dec
int
outsl
int
jne
mov
add
lods
mov
cmp
push
aam
jg
pushf
clc
lcall
dec
pop
mov
dec
fists
mov
inc
ja
lahf
movsl
mov
xchg
fs
aam
xor
push
adc
mov
jecxz
arpl
sub
aaa
stos
gs
xchg
add
pop
std
test
pop
cmc
add
icebp
lea
push
mov
pop
jo
mov
sti
stos
enter
test
aad
pop
sub
jp
add
jg
insl
jl
mov
test
outsl
aas
scas
lahf
loope
xchg
mov
fldcw
adc
sahf
pushf
imul
jmp
inc
push
jle
push
mov
das
scas
rorl
mov
xchg
sub
cmpsl
hlt
and
call
fdivl
mov
lret
xor
or
add
sub
inc
cmp
outsl
std
outsl
sub
pop
imul
adc
jle
dec
cld
fwait
mov
lods
decl
cmpsb
dec
lds
insb
pop
loop
or
mov
push
loope
clc
jmp
out
insb
std
out
fsubrs
into
inc
sub
or
out
es
push
dec
add
inc
jmp
pusha
and
dec
sub
lcall
inc
loop
test
inc
inc
dec
xor
in
jo
sbb
ljmp
ja
fnstcw
int
int
shll
cmp
cld
jp
jb
adc
lds
sti
sbb
in
mov
jae
cmpsb
ljmp
in
rcl
cwtl
push
inc
jbe
sub
pop
pop
mov
out
push
arpl
call
mov
fstpl
jmp
cmp
sbb
lds
jmp
and
jp
loop
add
dec
mov
push
mov
adc
or
inc
shlb
and
ljmp
and
insl
int
xchg
rcll
clc
subb
jmp
push
mov
imul
shll
dec
push
sar
decl
jb
pop
fistpll
pop
sbb
into
pop
mov
mov
dec
cmp
lcall
aas
loope
pop
and
pop
out
in
iret
cmp
into
sahf
push
push
ljmp
xchg
pop
loopne
imul
out
mov
mov
sbb
sbb
sbb
sbb
mov
or
adc
aaa
jp
lcall
fimuls
out
cli
loopne
aam
dec
push
mov
pop
sbb
pop
or
dec
mov
insl
xor
ret
arpl
sbb
outsl
loop
movsl
cld
mov
jmp
pop
std
and
jle
dec
mov
incl
jns
call
mov
push
jge
xchg
cmp
repz
icebp
or
inc
sarl
inc
out
mov
dec
cmp
adc
mov
mov
mov
sub
cmp
les
jg
dec
clc
inc
sbb
das
lock
mov
loope
js
lods
mov
incl
outsl
adc
and
mov
pop
or
aas
jg
jb
decl
jmp
sahf
xchg
mov
cmp
int
xchg
cmc
mov
adc
repnz
mov
xor
pop
dec
xchg
test
lret
insl
sti
mov
mov
lods
mov
or
sti
xor
lock
stos
mov
jle
sub
pop
ret
adc
iret
nop
loopne
cmp
mov
sbb
lcall
push
lret
nop
mov
xchg
cmpsb
and
xor
cmc
jae
push
clc
mov
stos
jmp
and
mov
movsl
sub
add
test
fildl
jnp
inc
fucomp
call
jle
and
addr16
sbb
and
lcall
decl
int3
sti
cld
aas
pop
push
xor
pop
outsb
push
inc
mov
je
bound
mov
fildll
mov
pushf
xchg
aam
rcl
lods
out
push
mov
aad
adc
hlt
jg
add
dec
adc
cmpsb
xchg
movl
rcrb
mov
ljmp
ds
stos
jmp
inc
ss
rorb
mov
fbstp
clc
test
dec
out
inc
cli
dec
mov
ds
fnop
dec
scas
andb
lods
jmp
aam
jg
iret
pop
jp
dec
mov
sub
outsb
jbe
fucomip
xchg
or
and
xlat
sub
xor
jae
mov
dec
in
lret
add
adc
stos
sbb
pop
fimull
aam
dec
testl
insl
stc
pop
incl
mov
mov
sbb
sub
fsubl
dec
bound
incl
gs
xchg
jle
roll
jns
adc
std
cli
jmp
and
fmul
push
cmp
rcr
lret
pusha
pop
ret
ss
fisttps
stc
fidivrl
dec
rcll
add
sbb
in
pusha
sub
mov
cli
lds
hlt
mov
cmp
into
mov
jae
mov
icebp
add
outsl
cmc
inc
ds
mov
rorl
movsl
dec
mov
mov
and
adc
sbb
sbb
mov
mov
add
jle
out
faddl
mov
add
mov
mov
lret
xchg
jge
inc
clc
pushl
cmp
xchg
outsb
adc
xchg
daa
push
shrl
inc
sbb
push
lcall
sub
clc
inc
or
cld
inc
sub
ss
fsts
dec
jne
cmp
or
pushl
inc
test
mov
jg
in
inc
push
aaa
cmpb
clc
pusha
xchg
sbb
pop
clc
xchg
int3
sbb
pop
fstps
jge
sbb
pushl
fisubrs
pushf
cmp
aad
jecxz
add
sub
mov
sbb
int3
test
adc
fs
sbb
mov
not
scas
incb
push
adc
lods
cmc
jae
scas
mov
pusha
xchg
cmpsb
pop
lahf
arpl
push
test
ficoml
iret
cmp
push
jge
das
data16
pop
cmc
jno
pop
sbb
inc
incl
cs
adc
jae
adcb
inc
push
adc
jg
jo
aam
out
jge
pop
int
mov
mov
sarl
ljmp
out
lock
dec
mov
adc
ret
mov
out
enter
jg
scas
sub
inc
jl
dec
pop
ret
or
out
cmp
js
popa
popa
mov
movsb
insl
jg
pushl
stos
in
xchg
sti
ret
fimull
sbb
xor
daa
cwtl
xchg
inc
or
cld
mov
mov
jp
outsb
aas
and
les
cld
imul
pusha
pushf
xchg
scas
add
fistps
mov
ljmp
or
pop
push
fisubs
pop
lds
xchg
xchg
imul
stos
cld
lahf
jno
fsubs
cmp
xchg
adc
dec
icebp
movsl
out
lock
push
and
push
or
jl
xor
cmpsl
mov
push
daa
inc
in
lret
add
cmp
jne
incl
mov
icebp
movsb
xor
sub
mov
push
into
in
sub
cmp
mov
pop
mov
push
ret
cltd
mov
xor
loop
lcall
lea
jge
sbb
out
fdivrl
jmp
fistl
mov
mov
jo
push
orl
std
inc
inc
insb
stc
outsb
xchg
sahf
jae
xchg
test
ljmp
push
sub
test
inc
push
test
pushl
rclb
cmpsb
push
and
xchg
lds
pop
dec
scas
or
ljmp
int
pushf
xchg
into
cmpsb
adc
push
sub
mov
add
inc
std
incl
fsubs
fidivs
clc
mov
outsl
cmc
pop
add
mov
insb
imul
mov
fistl
lahf
decb
mov
cmp
outsl
cld
sub
ss
into
push
ja
out
sub
inc
popl
pop
jmp
cmp
insl
xlat
cs
sub
lcall
repz
dec
xorl
nop
movhps
lcall
popa
xor
divl
inc
es
pop
loop
sbb
xor
mov
mov
ds
add
sarl
sbb
jmp
add
sbb
es
mov
daa
stos
call
or
xchg
popf
xchg
in
inc
xor
inc
stos
movsb
call
cld
ljmp
xor
bound
lods
sub
jl
ret
lret
mov
and
outsl
nop
ja
int
insb
andl
fisubl
jmp
dec
lods
out
fnstsw
decl
jl
pop
jle
iret
lds
test
rcrl
dec
fnstenv
mov
jl
cmpsl
mov
test
sbb
out
lea
popa
pusha
mov
mov
inc
loopne
stc
add
rolb
cmp
xlat
lahf
test
rcrb
rorb
push
out
mov
rclb
push
mov
pop
dec
pop
mov
jmp
mov
jp
movsb
inc
in
dec
inc
repz
enter
repnz
bound
push
call
ror
stos
or
or
mov
fdivp
xlat
setle
jg
xor
sbb
sbb
int
mov
mov
xchg
cmp
lret
incl
in
pop
in
jb
dec
in
mov
ja
aam
lods
fstpl
jmp
mov
mov
repz
fidivrl
sbb
sbb
jle
pushl
mov
imulb
in
or
clc
jmp
loope
imul
outsb
cmpsl
out
pop
ficoml
jle
hlt
xchg
mov
call
repnz
sub
in
push
jmp
dec
cmpsl
loope
push
subl
sub
lds
mov
xor
lcall
loop
test
add
or
lcall
stc
jb
mov
loop
aam
mov
ficoml
aad
arpl
lcall
in
pop
push
pop
in
int3
mov
data16
xchg
cwtl
mov
mov
rcrl
icebp
pop
dec
xlat
xchg
push
inc
repz
mov
jp
xchg
mov
or
add
cwtl
lea
mov
mov
mov
int
xchg
ljmp
fidivrl
inc
push
lods
jmp
push
sbb
fs
cmp
pavgw
add
cld
mov
mov
addb
jmp
push
ret
push
jl
gs
pop
arpl
dec
call
and
mov
movb
jns
mov
mov
leave
xchg
pop
stos
ljmp
dec
aad
add
xchg
scas
lods
loop
xchg
pushf
inc
sbb
aas
mov
or
ljmp
imul
jno
xor
popa
stos
sahf
sbb
divb
cli
rorl
ljmp
add
movsb
loope
sub
jle
jo
push
adc
stos
lock
loop
mov
lcall
xor
inc
mov
ret
decl
xor
mov
mov
jecxz
pop
and
sub
mov
imulb
lcall
push
sahf
aam
js
popf
add
inc
loop
push
mul
dec
test
mov
sbb
xchg
out
push
repnz
or
filds
popa
inc
std
shll
sbb
fucom
push
dec
lea
cld
xor
mov
cltd
mov
pop
popf
test
jnp
jno
test
into
mov
cmp
lcall
mulb
jg
call
sub
jmp
xchg
jg
inc
pop
hlt
push
sbb
in
into
lock
pushl
sbb
stc
jg
pop
jnp
into
push
pop
dec
xor
push
jns
adc
loope
cmpsl
xor
pop
adc
repz
jge
aam
das
lock
push
mov
mov
addb
mov
in
popl
loope
add
push
sub
lret
incl
cmp
outsb
insl
movsb
popa
daa
in
addb
or
xchg
jae
ljmp
enter
das
mov
xor
mov
arpl
mov
into
add
movsl
xor
dec
push
pop
push
xor
test
sbb
mov
sub
xor
sbb
sar
xchg
lahf
in
add
cmc
lcall
stos
sbb
cwtl
outsl
sub
inc
pop
lret
dec
pop
mov
lcall
std
das
ret
jnp
and
roll
lea
mov
mov
mov
push
loopne
or
aas
ds
xchg
and
aaa
cli
jg
sbb
lldt
mov
jae
outsb
adc
sbb
call
jo
clc
cwtl
inc
stc
int3
xchg
xlat
cs
call
fsubrl
shlb
mov
sbb
ret
push
movsl
push
mov
cmp
add
inc
pop
adc
movsb
loopne
lcall
sub
daa
loop
or
mov
push
jns
mov
mov
jnp
push
std
inc
jnp
dec
jl
pop
push
cmp
ljmp
and
mov
cmp
mov
dec
pusha
mov
adcl
or
pop
adc
das
aaa
mov
dec
scas
xor
jmp
clc
imul
sarl
push
push
dec
sbb
xor
inc
les
loopne
lcall
mov
leave
adc
mov
testl
daa
xchg
ror
lods
bound
jbe
jae
call
pop
adc
scas
cli
imul
mov
cmc
mov
or
lret
add
int3
adc
add
movsb
sar
pop
cld
test
push
loopne
repz
imulb
das
jnp
dec
in
cmc
push
xchg
bound
popf
adc
into
rorl
mov
and
add
cmpsb
stos
popf
xchg
stos
cmovp
inc
call
cmpsl
loop
cmc
popa
push
adc
mov
data16
fwait
mov
loop
movsl
pushf
dec
mov
fildl
mov
into
sub
push
mov
sbb
imul
dec
dec
cmp
pop
jmp
divb
jg
mov
adc
sahf
cltd
aaa
sbb
push
or
jno
in
movsl
daa
dec
pop
outsl
out
push
pop
nop
sbbb
hlt
push
je
shl
add
mov
insl
imul
shr
lret
push
push
mov
cltd
pop
inc
lcall
movsl
pop
aas
es
divb
mov
ret
push
or
push
xorb
or
scas
test
out
inc
data16
icebp
ret
outsl
cmc
call
ljmp
pop
leave
pop
js
arpl
mov
movsb
cmp
call
cmp
mov
and
testl
fnclex
in
mov
or
les
mov
cmp
roll
out
data16
mov
fdivrs
out
xor
lds
push
inc
sub
pop
jp
push
fsubl
pushl
jmp
mov
push
int
sar
mov
pop
subl
rcr
sub
pushf
xor
lods
decl
xchg
jno
dec
call
lds
pusha
aad
jg
lcall
mov
dec
pop
and
movsb
roll
mov
iret
or
es
add
xchg
jl
sar
ljmp
lods
test
das
jno
mov
addr16
testb
adc
outsl
je
jns
shlb
fs
mov
mov
dec
scas
sbb
pop
out
and
and
cli
iret
cmp
mov
aas
cmp
shrb
fcoms
or
mov
je
nop
cs
test
jmp
in
or
or
xchg
movsb
fcoml
nop
rcrb
cwtl
cmp
cs
gs
decl
jb
lods
aas
inc
mov
sti
push
inc
dec
mov
notb
ss
sahf
inc
das
scas
loopne
test
xor
scas
inc
lods
mov
cmp
adc
or
incl
popf
inc
sbb
repz
xor
mov
std
scas
pop
xorb
pusha
sar
push
mov
pop
lcall
or
push
fucomp
xor
mov
out
ljmp
push
cld
dec
inc
data16
cs
loope
mov
mov
sbb
hlt
aam
das
icebp
jmp
in
repnz
jo
jns
shrb
sbb
test
cmovb
in
push
out
mov
imul
and
mov
push
push
xchg
jg
ret
push
cmp
incl
pop
sahf
shll
js
mov
mov
mov
jb
add
jp
add
pushl
mov
xchg
jnp
ljmp
or
cli
outsl
cltd
int3
iret
fstpt
mov
ljmp
pop
sbb
jmp
incb
in
cli
subb
pop
mov
icebp
jl
cmp
ljmp
cmp
mov
add
pop
dec
ljmp
fiadds
dec
arpl
scas
insb
popa
add
decl
or
rcll
cmp
mov
aam
into
push
jmp
adc
stos
adc
call
incl
nop
xor
push
lea
xchg
mov
xor
jl
and
mov
es
and
iret
mov
pop
scas
ds
pop
addr16
call
cwtl
mov
in
test
sahf
mov
repnz
jecxz
and
call
sbb
dec
fcos
jmp
cmp
ror
adc
inc
std
mov
lahf
fwait
icebp
mov
andb
jg
pop
inc
je
cmp
sbb
cmp
mov
jb
decb
mov
outsb
xlat
xchg
inc
fdivrs
lcall
xchg
cli
inc
adc
push
ljmp
cli
mov
mov
jmp
int3
aad
imul
jl
push
rcrb
addr16
cs
adc
nop
mov
adc
call
cmp
mov
pop
sbb
in
daa
outsb
inc
xchg
iret
inc
ljmp
jns
adc
jb
ficomps
mov
xor
fdivr
or
imulb
stos
jbe
mov
popf
fisubrs
std
call
mov
inc
pop
lcall
insl
incl
xchg
test
cmp
adc
mov
aaa
std
cld
and
dec
int
call
scas
pop
mov
lea
inc
xor
xchg
mov
fbld
call
and
das
icebp
jg
dec
adc
adc
lods
inc
xchg
inc
insb
dec
cmpsl
adc
sbb
sub
decl
xlat
cmp
fistpl
mov
enter
into
fs
mov
dec
std
dec
xchg
negl
cmp
push
mov
std
int3
outsl
cld
inc
push
xchg
push
sub
leave
mov
mov
lock
int3
lock
sar
ret
int3
dec
lcall
sti
inc
mov
test
mov
inc
adc
push
cmpsb
js
fdivl
rcll
pop
pop
push
mov
sub
inc
out
adc
or
inc
loope
pushf
sbb
das
lock
cli
and
xor
xchg
ret
adc
incl
cmp
decl
push
inc
adc
repz
rcrb
shlb
aad
leave
mov
adc
inc
clc
shr
call
mov
jnp
push
mov
cmc
pop
lds
or
sub
dec
je
loopne
out
cltd
rol
adc
mov
dec
and
mov
repz
sahf
add
xchg
addr16
add
mov
inc
dec
out
test
lcall
jp
je
xchg
lods
dec
mov
aam
jmp
mov
add
fidivrl
fidivrl
or
ljmp
push
int
pushw
jge
xlat
or
pop
into
pop
and
cwtl
testb
popf
lds
sub
enter
je
out
lds
jle
inc
mov
in
dec
leave
jo
lcall
movsl
stos
mov
in
cmc
pop
pop
fisttpll
test
ret
out
outsl
adc
rorb
enter
aaa
pop
stos
mov
and
pop
pop
and
jmp
lcall
neg
or
cmc
lods
jle
ret
adc
decb
inc
adc
ja
lcall
data16
jno
mov
cmp
ud0
cld
fucomip
loope
xchg
into
jns
cwtl
repz
add
mov
bnd
cmpb
call
lcall
dec
repz
xor
loope
aaa
rcll
subb
lock
loopne
sbb
cld
ret
cmpsl
call
loop
call
xlat
outsl
pop
xchg
fs
sub
into
les
mov
pop
adc
lock
incl
mov
icebp
inc
dec
stc
movsb
ret
and
and
jne
sbb
dec
ljmp
cmc
dec
hlt
mov
bnd
mov
stc
pop
and
ret
or
jo
insl
movsbl
in
call
lcall
pushl
mov
test
ret
mov
sbb
mov
push
add
decl
icebp
jb
mov
out
ds
std
mov
cli
decl
pop
pop
xor
bound
mov
mov
ss
mov
xchg
in
cltd
mov
pushl
mov
sbb
sbb
or
aas
maxps
pop
das
jp
sbb
add
addl
pop
je
ljmp
std
aam
or
xchg
mov
mov
mov
jae
sub
cltd
pop
clc
idiv
imul
pop
nop
aad
cld
add
pop
jl
and
push
cmp
xor
lcall
sbb
sahf
es
ret
cs
loope
dec
pop
or
sbb
in
lods
jnp
sbb
je
jmp
icebp
dec
cli
idivl
movsl
clc
dec
cld
jle
add
xchg
ljmp
fimull
sub
dec
or
and
dec
sarl
icebp
xor
xor
cmp
lcall
inc
dec
movsl
enter
repnz
push
lods
icebp
enter
and
ds
dec
jmp
cltd
pop
sub
xor
subl
push
movsl
ret
cmp
fucomip
adc
xchg
mov
pop
lret
jb
cltd
mov
mov
aam
sub
add
cmc
push
adc
or
rcrl
das
in
cmp
jge
push
ljmp
std
cmp
pop
mov
dec
adc
dec
shlb
sbb
lods
rcll
jl
mov
cmpsb
mov
scas
cmp
ljmp
cld
inc
jle
and
int3
imul
mov
xor
cli
inc
pop
and
pushl
pop
push
repz
jl
push
and
and
mov
mov
xchg
ret
cmp
pushl
cmp
jl
jns
outsb
mul
jmp
add
cmc
xor
arpl
mov
scas
in
jl
pushl
jp
jae
jbe
int
lret
loop
dec
popf
push
inc
ja
lret
std
outsl
std
push
xchg
dec
push
mov
inc
jge
ljmp
lcall
ret
sub
cltd
stos
out
es
sub
daa
xchg
and
decb
xor
into
stc
into
or
stc
test
xchg
fldt
hlt
lds
mov
add
ret
mov
incl
xchg
or
sahf
pop
mov
pusha
push
ret
clc
pop
push
or
or
xchg
adc
sub
dec
sbb
aaa
test
inc
xlat
sbb
inc
fwait
push
out
inc
and
bound
fwait
jg
or
das
subb
inc
inc
adc
mov
add
adc
out
rclb
xor
jmp
ljmp
lret
mov
fcomip
lahf
in
addr16
insb
add
and
lret
xchg
call
je
fstpt
int3
mov
mov
adc
mov
pop
pop
enter
loop
cltd
jns
movsl
and
rsqrtps
push
jno
jmp
and
push
fs
jp
inc
loop
xlat
cli
out
gs
in
fistps
push
sarb
js
mov
pop
testb
sbb
ljmp
jle
scas
sarl
int
cmpsl
sti
xor
xchg
hlt
cmc
pop
ds
push
push
sahf
xchg
arpl
jae
clc
decl
fwait
rcll
ss
jg
cmp
call
iret
es
ret
leave
sbb
or
shlb
outsb
fsubl
lds
cmovb
pushl
dec
push
hlt
push
out
orb
mov
xchg
dec
cld
scas
xchg
pop
dec
std
pushl
xchg
pop
addb
cli
orb
push
pop
xorl
mov
aam
mov
pusha
lahf
sbb
mov
push
jmp
xor
shll
out
cld
jge
ljmp
mov
inc
imul
gs
pop
mov
fisubs
adc
jg
mov
push
push
shrl
push
dec
out
xor
in
xchg
mov
test
sub
es
sbb
and
cli
inc
ffreep
inc
or
cwtl
push
adc
insb
rcl
lock
pushl
mov
push
dec
shlb
sub
inc
subb
or
inc
push
ds
incl
mov
inc
jge
cli
test
ss
mov
mov
xchg
daa
cltd
sbb
sub
lock
call
xchg
pusha
fisubl
pop
dec
cmpsl
and
push
std
mov
jp
mov
jecxz
outsl
mov
movsl
dec
add
cs
stos
xchg
jp
or
test
std
cli
addl
cld
mov
call
call
mov
mov
mov
mov
sti
dec
lcall
fbld
xchg
gs
add
jecxz
mov
pop
jg
stc
jo
dec
pop
push
pop
and
sub
inc
pop
and
ror
push
call
or
cmpsl
mov
mov
xor
xor
pop
scas
arpl
push
aad
cmp
ljmp
mov
shll
arpl
cmp
xchg
jne
out
cld
and
dec
fdivrl
pushl
adc
mov
mov
sub
pushf
insb
xlat
bound
in
lcall
or
jne
adc
or
clc
cmp
sar
jnp
sub
lcall
inc
pop
pop
pop
mov
jo
rcrl
xchg
shlb
movl
lods
fcomip
dec
je
jno
inc
sbb
push
xorb
fadds
incl
cs
mov
pop
xor
stc
into
bound
icebp
pop
add
int
adc
ljmp
dec
std
add
mov
mov
aad
pushl
inc
fs
outsl
mov
hlt
jl
xchg
inc
lahf
jnp
dec
repz
mov
xor
out
insl
adc
sub
loope
in
sar
pushl
popa
rcr
shl
insl
push
mov
xchg
adcl
sbb
or
nop
pop
adc
enter
pop
ljmp
loop
inc
lock
mov
stos
add
sarb
shlb
mov
mov
cmp
fs
outsl
bound
push
dec
cmp
imul
pushl
jnp
sub
mov
lods
mov
mov
jae
mov
xchg
std
inc
and
gs
fstl
pop
push
and
pop
testb
xchg
jge
ljmp
adc
jnp
jo
mov
xor
lahf
mov
cli
dec
sbb
movsl
cmpsl
repz
sbb
and
fdivrs
xchg
jecxz
roll
pusha
xlat
cli
mov
inc
hlt
push
jae
sbb
fs
mov
pop
stos
int3
jmp
gs
test
pop
and
cwtl
mov
aaa
xor
loope
push
outsl
mov
ljmp
jb
cld
es
mov
stos
sub
lds
xchg
sbb
jb
inc
in
and
dec
xor
les
pop
es
gs
pushl
jle
test
mov
lret
loope
movsl
mov
mov
lock
aaa
jmp
leave
xchg
mov
sbb
fcom
sub
incl
into
sub
cmp
stos
cmpl
das
pop
xchg
push
inc
pop
xchg
xor
mov
adc
xchg
out
or
rclb
mov
aaa
cli
push
inc
leave
sub
pusha
jbe
cltd
dec
jl
lcall
inc
pusha
lods
js
cli
imul
dec
pop
mov
lds
loop
decl
xor
xor
xor
pushl
gs
lret
addr16
jge
add
or
inc
nop
push
out
imul
xchg
incl
sub
fwait
xlat
xchg
out
mov
pop
lea
lods
inc
inc
fidivs
call
inc
adcb
incl
xorb
sub
push
out
call
out
aam
pop
ret
inc
lock
pop
push
jae
fiadds
mov
loop
dec
mov
out
inc
js
mov
xchg
or
ljmp
lea
fs
lret
xchg
stos
xchg
or
sbb
stos
incl
out
xchg
test
sbb
jno
mov
mov
lret
xchg
inc
cmpsl
pop
jg
call
pop
imul
inc
hlt
fsincos
int
mov
sbb
filds
fwait
push
arpl
mov
or
push
cmp
dec
push
sub
push
jne
xor
adc
insl
jmp
adc
fcom
sbb
enter
fstl
scas
psubd
dec
inc
mov
dec
xor
fs
and
dec
inc
or
or
mov
ljmp
cld
sub
iret
add
jb
push
push
and
xor
inc
call
js
sbb
in
xlat
jo
std
dec
jge
jg
push
add
loop
lock
lcall
incl
mov
cwtl
lcall
popf
mov
xlat
pop
push
adc
add
mov
test
xor
adc
inc
rorb
testl
lcall
push
xor
or
jmp
adc
ljmp
sarb
adc
jmp
mov
pop
pop
clc
jg
and
insb
pusha
xlat
sub
push
mov
sub
rorb
mov
inc
fists
andb
cmp
xlat
pop
add
addb
loope
popf
call
mov
xchg
dec
daa
adc
das
lcall
insb
iret
xchg
pop
sub
call
scas
or
test
and
or
or
push
aam
pushl
clc
dec
sbb
xchg
cld
cmp
ss
jg
mov
call
cmp
push
xlat
loopne
lcall
cmpsb
jmp
pxor
jmp
jle
lods
shrb
jnp
and
pop
shl
pop
pushl
out
mov
dec
add
ds
cmp
mov
insb
pop
outsl
inc
ret
pop
cli
call
mov
scas
out
ljmp
or
mov
test
jmp
ljmp
ja
mov
adcl
movsb
sbb
fucomip
jmp
call
adc
loope
jge
insb
pusha
jg
dec
sbb
cmp
inc
inc
das
pop
add
jns
divl
mov
mov
jmp
inc
inc
jp
adc
push
inc
lds
xor
popf
inc
jnp
andl
push
add
or
pushf
mov
mov
jle
clc
decl
lret
jbe
call
loopne
xor
dec
subl
stos
hlt
xchg
lock
jmp
inc
outsl
sub
roll
cmp
ljmp
or
cmpsl
dec
adc
lret
fstl
in
mov
push
sub
jg
pop
xor
or
xor
in
pushf
out
popa
std
mov
arpl
shrb
icebp
xchg
jecxz
push
jg
out
xor
and
pop
jg
hlt
aas
add
dec
push
pause
fcoms
outsb
loop
jecxz
fistpll
mov
int3
mov
shll
ret
mov
mov
jle
push
incl
aam
data16
scas
xor
jne
mov
pop
xchg
jns
movsb
add
sbb
subl
inc
push
hlt
push
iret
xor
push
imul
jecxz
out
adc
enter
cld
sysret
jbe
out
stos
aas
and
xchg
shlb
xchg
push
mov
xor
call
sbb
cltd
lret
addb
mov
insl
mov
shlb
sub
inc
mov
inc
adc
jb
loop
faddl
xchg
and
mov
test
mov
cmpsb
inc
fidivrs
mov
lods
adc
ljmp
std
and
sbb
xchg
out
sbb
insb
mov
incb
push
xlat
in
and
xchg
inc
adc
and
push
jl
fbstp
ja
imul
xchg
xchg
pushf
addr16
cld
pop
in
push
movsl
xlat
sbb
or
mov
xchg
outsb
leave
mov
test
push
adc
stc
xchg
jp
out
lret
insb
call
cmp
stos
jb
ret
hlt
das
aad
fbld
sbb
repnz
idivl
decl
mov
mov
dec
jmp
jle
adc
je
mov
incl
pushl
lods
sub
jl
rorl
loopne
jp
sub
out
dec
outsl
lds
rcl
mov
mov
mov
adc
push
jge
jb
lcall
jg
mov
insl
inc
pop
lahf
aam
jle
push
popa
imul
jne
or
mov
sbb
lods
dec
jns
jmp
mov
lea
pop
out
in
scas
mov
aam
sub
ljmp
out
dec
sub
out
fwait
test
push
jg
jmp
in
mov
lea
iret
test
adc
xchg
inc
incl
pop
std
cli
jmp
inc
push
aad
xor
and
lcall
mov
push
pusha
imul
ljmp
xchg
adc
std
cs
ljmp
jmp
insl
aas
loope
test
cmpb
xchg
sbbb
mov
inc
divb
adc
das
cmc
ljmp
ds
int3
sbb
sbb
test
cmpsl
nop
dec
push
or
ljmp
cmp
ffreep
stos
out
jp
mov
fsts
mov
daa
inc
jg
add
mov
cmp
pop
jns
addr16
sub
mov
jl
xchg
xchg
jle
aam
mov
scas
call
test
or
xor
das
mov
jecxz
ret
dec
int3
shl
add
inc
dec
fists
out
cs
in
mov
decl
cld
insb
mulb
mov
sbb
or
std
jb
int3
add
mov
clc
popf
loope
mov
pop
inc
loope
dec
das
test
mov
insl
sar
mov
into
out
shrb
cmp
in
aaa
cli
incl
push
jo
xor
dec
icebp
out
fs
lcall
aad
adc
mov
data16
insb
lret
push
jle
and
pop
mov
scas
jns
inc
mov
pop
std
incl
lea
test
jecxz
inc
pop
incl
push
je
faddl
xor
mov
inc
pop
movsb
repnz
push
call
sub
inc
addl
jae
cmp
inc
cmp
daa
inc
imul
sbb
decl
int
pop
lods
mov
outsb
inc
out
mov
sbb
adc
out
ljmp
fcmove
inc
mov
pop
xchg
loopne
pop
imul
pop
inc
hlt
xor
aas
xchg
mov
std
inc
sti
sar
call
add
fdiv
orb
int3
mov
je
pop
subl
insb
mov
mov
outsl
dec
adc
loop
ljmp
mov
sbb
mov
pop
mov
adc
dec
arpl
push
ret
ss
mov
shll
incl
out
fcoml
pop
pop
jg
mov
fs
xor
pop
mov
mov
mov
and
mov
mov
into
cmp
lds
sti
mov
dec
cld
jmp
add
pop
cmc
repnz
jecxz
ret
addb
push
jns
rcl
popf
pop
or
ds
jle
test
push
pop
jno
dec
xchg
inc
inc
addr16
pushl
sub
out
dec
push
jnp
rolb
mov
sbb
push
call
inc
movsw
stos
mov
and
push
cmp
lock
adc
jp
das
jo
jmp
push
aad
xor
movsb
push
in
xchg
sub
push
enter
jg
and
mov
push
jns
sub
call
movsb
gs
jl
add
cmpsb
add
mov
shlb
inc
mov
cmpsl
loope
mov
fs
lods
bound
jp
ljmp
mov
ret
add
out
repz
jge
mov
pop
push
or
int3
es
push
std
iret
movsb
clc
nop
xchg
sahf
xorl
lods
mov
or
clc
jnp
jns
inc
inc
mov
cmpb
pop
int3
dec
xor
jne
clc
xor
lcall
pushl
fadd
ret
mov
and
imul
lcall
call
or
and
sti
das
cmp
jle
or
pop
dec
push
or
lcall
call
add
je
xchg
call
pop
in
and
movsl
insb
sbb
pushl
jne
inc
ret
aaa
pop
xchg
test
jg
idivb
mov
mov
pushf
shlb
iret
decl
xor
ss
xchg
pop
add
call
mov
incl
push
pusha
mov
leave
sbb
jno
aaa
pop
test
pushl
and
mov
rorl
imul
out
or
xchg
xor
decl
cld
outsb
add
popf
pop
inc
and
cwtl
lods
pop
push
sbb
jae
mov
or
mov
push
jmp
mov
mov
sbb
lcall
test
dec
sbbl
imul
sub
jmp
jg
pop
pop
out
cmpsl
xchg
aas
stc
jbe,pn
icebp
roll
fisttpl
or
cmp
jo
jp
jmp
sti
dec
dec
lods
outsb
mov
out
jae
sub
incl
adc
jmp
pop
sbb
insb
inc
int
fsts
mov
adc
mov
rcrl
loopne
inc
lcall
mov
stos
vpsubb
sti
ss
pop
fsubr
in
mov
lcall
call
insb
hlt
mov
lret
cmp
stos
inc
pmaxub
mov
add
mov
xor
rorb
outsl
xor
and
cmp
jnp
lea
loopne
in
pop
and
enter
ljmp
mov
dec
mov
xchg
cltd
mov
cmp
lock
insb
xchg
clc
and
cmp
adc
sti
inc
inc
mov
bound
dec
mov
adc
pop
fildl
nop
and
inc
movsb
mov
add
jl
insl
mov
hlt
movsl
fucomip
adc
sbb
insl
add
cmp
gs
ljmp
push
movsb
test
cmp
loop
push
sbb
ljmp
dec
das
push
std
icebp
mov
insl
add
xor
rep
adc
push
dec
enter
lds
test
lods
inc
mov
shl
jae
mov
xchg
cwtl
sbb
sbb
jg
outsb
jg
jmp
cli
nop
sub
jg
or
pusha
add
mov
rcrb
push
je
adc
fisubrs
sub
sbb
and
ds
push
sub
incl
je
sub
shrl
add
out
and
dec
ljmp
mov
enter
cmp
push
les
cmp
mov
and
pushf
fst
push
fdivl
stc
fildll
push
jg
punpckhdq
jno
xor
das
hlt
incb
cmp
cltd
pop
push
mov
repz
sbb
jle
fld
mov
nop
inc
push
lret
iret
call
lahf
aaa
xchg
incl
dec
scas
mov
loopne
lds
hlt
mov
in
dec
push
push
lock
cmc
imul
popf
and
pop
cli
or
fs
call
call
dec
out
call
dec
out
scas
xchg
ret
pop
xchg
ret
jg
push
mov
mov
jle
xchg
xor
push
loop
pop
clc
pushl
xchg
push
cs
inc
fildl
and
pop
popa
insb
lods
insb
xchg
mov
stos
mov
xchg
je
movl
adc
inc
aad
mov
fucomi
sahf
mov
adc
mov
test
dec
inc
mov
dec
shrl
lret
imul
mov
clc
push
or
jne
neg
arpl
adc
sahf
mov
cmp
jle
push
sub
and
push
ficompl
lret
pop
adc
jmp
rolb
mov
decl
movsb
sbb
push
mov
jo
push
xchg
movsl
mov
std
incl
mov
xor
call
mov
push
js
push
inc
faddp
cmp
lea
inc
jns
add
lock
mov
int3
out
dec
jmp
xchg
xchg
test
and
fwait
out
ljmp
rolb
sub
push
das
lock
cmp
popf
hlt
cmp
mov
xchg
mov
xchg
and
icebp
jge
xlat
ret
ret
sub
xor
pop
cld
pop
mov
pop
or
dec
es
mov
cmp
test
roll
aad
pop
call
jnp
fwait
jmp
sti
bnd
push
pop
mov
negb
sub
roll
call
pop
and
adc
dec
icebp
ret
push
push
jg
hlt
or
in
inc
sub
dec
pop
incl
pop
insl
push
sahf
in
and
mov
jno
mov
outsl
xchg
dec
daa
fdivr
decl
add
fidivrs
js
mov
movsb
add
call
cwtl
aaa
clc
mov
xor
rcll
imul
sti
lods
lahf
mov
mov
and
mov
mov
icebp
dec
test
and
test
and
out
mov
jg
data16
ror
pop
adc
in
xor
fldt
sti
idiv
mov
jnp
push
test
in
add
test
or
jp
repz
aaa
decb
inc
int
mov
or
or
les
stos
lods
lcall
xchg
je
insb
int3
outsl
addr16
inc
jle
mov
fsubl
pop
pop
add
mov
sbb
insl
sbb
jg
adc
fdiv
lcall
jmp
lods
cmc
in
fwait
push
mov
stos
outsb
lock
ficomps
das
insb
jg
cmc
or
jns
ficomps
call
ret
jmp
add
inc
ss
scas
dec
pop
or
aas
pushf
add
push
scas
aas
mov
call
xor
add
push
mov
cmp
mov
lret
jmp
sbb
pop
shl
jmp
xor
in
pop
mov
dec
out
int
adc
or
cmp
lcall
fidivs
dec
rol
lods
sub
ficoml
mov
jmp
rcr
add
xchg
add
lcall
into
lds
divb
xchg
inc
xchg
cltd
mov
add
mov
mov
inc
cli
add
mov
inc
js
shll
mov
inc
push
mov
ljmp
xor
aam
dec
pop
sub
das
jno
das
sarl
jecxz
enter
pusha
push
and
push
call
outsl
std
stc
jg
add
and
cmp
sbb
xchg
cmp
jg
loop
add
into
push
add
mov
and
or
and
mov
sub
push
pop
decb
or
jmp
jo
out
bound
pushf
icebp
pop
dec
or
or
test
pushl
inc
shll
inc
cmp
in
xor
lds
ret
lea
fsubrp
incl
jmp
xchg
inc
aaa
cli
mov
mov
insb
xchg
aaa
lret
push
mov
pop
pushf
jae
lds
cli
pop
or
mov
stos
push
dec
push
push
dec
xor
lods
rorb
idiv
mov
mov
lods
jge
enter
jecxz
fs
xchg
sbbb
mov
ret
cld
push
mov
inc
adc
cs
jg
ljmp
inc
or
gs
adc
mov
mov
sbb
push
pushl
pop
xorb
pop
loopne
test
jmp
insb
push
jno
mov
rcrl
push
inc
icebp
inc
dec
xchg
cwtl
icebp
jge
addr16
pushl
push
outsb
aaa
pop
mov
stos
inc
aam
or
les
fisubl
cmp
jecxz
jmp
mov
mov
divl
xchg
stc
jp
jecxz
cwtl
cmpsb
mov
dec
push
pop
add
jg
inc
pop
hlt
dec
jae
in
inc
mov
sbb
lods
dec
mov
lcall
inc
dec
jo
enter
lods
cmp
add
push
dec
enter
add
mov
data16
testb
add
leave
lcall
dec
cmp
mov
out
lahf
jecxz
push
stc
emms
stos
jg
mov
xchg
stc
hlt
adc
pop
adc
mov
stos
mov
std
pop
das
or
or
pop
out
mov
push
cmc
adc
mov
mov
mov
call
xchg
add
jl
push
into
xchg
test
popa
sbb
int
in
pop
push
push
add
outsl
call
dec
ret
mov
inc
push
and
mov
stos
jae
fstps
popa
sar
or
lcall
mov
jl
pushf
push
out
pop
scas
loope
push
inc
lret
insl
jle
cli
call
and
aam
in
in
loop
push
xchg
rolb
shr
aaa
dec
add
xor
sbb
call
int3
loop
test
adcb
adc
sub
cltd
xchg
xor
mov
xor
sti
pusha
arpl
cmp
sub
cs
mov
cmp
sub
inc
jno
mov
insl
loope
mov
mov
std
pop
dec
push
dec
imul
xchg
inc
std
inc
inc
stc
sub
pop
cs
jmp
and
inc
repnz
sbb
pushl
mov
jmp
sub
pop
add
mov
sbb
lods
xchg
mov
clc
sti
mov
sub
jmp
es
xchg
add
out
test
push
or
ljmp
std
push
insl
or
loop
jne
adc
cmpb
push
sub
leave
in
or
incl
sbb
and
xchg
pop
aaa
cli
into
adc
inc
mov
xor
push
nop
cmp
pusha
or
fucomip
incl
xchg
push
mov
cs
lahf
cmpb
dec
or
imul
push
ljmp
cld
rcrl
popa
test
pop
fwait
lahf
fstpl
pop
jecxz
push
mov
lcall
clc
cli
divb
and
dec
loope
dec
pop
popa
les
test
push
call
scas
xchg
xor
leave
xchg
rcrb
dec
jo
mov
popa
pop
pop
cli
lcall
imul
cs
mov
push
pcmpeqb
cltd
cmp
iret
add
das
in
shlb
jmp
out
cmp
pop
cmp
arpl
sbb
andl
stos
arpl
loop
dec
mov
jbe
cmp
or
aas
inc
dec
out
dec
inc
cli
jg
shl
mov
dec
xchg
and
dec
andb
add
fldt
pop
add
aas
lock
xchg
or
stos
dec
push
mov
in
lcall
jae
aaa
mov
fsubs
push
jmp
mov
mov
iret
or
mov
pop
jnp
stos
mov
sub
mov
mov
call
test
daa
test
sub
xor
test
dec
add
xor
ljmp
inc
push
fdivs
adc
test
and
mov
dec
jp
mov
pop
ds
sub
mov
imull
mov
loopne
popf
sub
bound
shrb
fstps
in
int3
pushf
or
mov
stc
pop
and
sahf
in
jge
mov
inc
int3
pop
cmpb
mov
mov
jnp
add
lahf
sahf
xchg
mov
push
cmpl
add
pop
pop
clc
mov
pushl
sbb
or
add
and
in
scas
pop
cltd
and
push
fstl
inc
push
cmp
xor
aaa
push
sub
ret
add
pop
mov
push
hlt
into
push
shrl
mov
mov
test
and
andl
mov
aas
test
pop
mov
shlb
xchg
mov
test
mov
inc
loopne
mov
negl
xchg
rcrb
pop
push
lret
jo
das
lock
or
test
aad
test
outsb
sbb
popf
into
xchg
dec
int
std
mov
lgdtl
dec
out
add
xchg
aad
roll
decl
cmp
aas
xchg
inc
std
add
aas
and
movsb
jbe
or
lea
clc
mov
lods
pop
sub
xorl
daa
lods
mov
shl
lret
mov
fadds
jg
sub
outsl
and
repnz
jecxz
das
inc
adc
jo
and
adc
negb
push
clc
jne
stc
push
or
jg
call
mov
dec
cmp
adc
mov
cs
inc
scas
inc
das
pop
inc
cmp
xchg
cli
push
cs
int
mov
jp
sbb
xchg
ljmp
pop
and
imul
mov
or
aaa
xor
pop
sahf
and
or
cmp
pop
clc
jmp
sbb
cmp
pmaddwd
mov
fisttpll
sahf
add
mov
adc
jbe
mov
xchg
loope
mov
incb
jmp
push
push
cmp
fwait
cltd
gs
jbe
lds
shlb
xchg
pop
clc
pushl
mov
lods
iret
push
xlat
aas
mov
movsl
add
inc
aaa
and
in
mov
es
jg
add
xor
pop
stc
add
repz
or
mov
xor
jp
rolb
shll
push
xchg
mov
incl
inc
jbe
inc
mov
fsubrp
lret
mov
in
lods
in
loop
sar
dec
or
movl
jno
cmp
pop
and
je
repnz
cld
push
xchg
pop
mov
hlt
inc
sbb
data16
push
inc
popa
mov
ljmp
aad
mov
add
rcr
mov
adc
add
jg
sbb
and
jns
jnp
push
push
mov
enter
popa
aas
stos
jnp
jp
fistl
aas
pop
pop
repz
and
clc
in
incl
lcall
fwait
arpl
dec
flds
mov
cld
or
fldl
lahf
fildll
jnp
ljmp
rclb
dec
les
pop
mov
cmpsl
push
push
push
jmp
xchg
mov
xor
dec
repnz
mov
mov
or
test
out
les
add
scas
push
mov
test
sbb
in
sub
mov
dec
pop
ss
sub
inc
ljmp
adc
push
pop
and
mov
inc
call
daa
mov
cmc
ss
mov
repnz
int3
ss
mov
cmc
fwait
xchg
mov
add
scas
mov
hlt
decl
jno
jno
mov
out
and
mov
out
or
cwtl
repnz
ljmp
cmp
movsl
popf
cld
mov
sbb
fs
pop
cmc
xor
das
icebp
xchg
pop
cs
out
sbb
sbb
mov
sbb
jg
mov
pop
int3
orb
and
popa
xlat
pop
push
mov
bound
push
out
or
mov
dec
dec
mov
sbb
cmp
mov
or
fwait
and
movsb
arpl
adc
sbb
jp
aam
sbb
incl
fnstsw
je
jae
add
cmc
cmp
cmp
xor
cmpl
push
dec
scas
sub
and
xchg
sbb
or
ljmp
lods
cmp
or
sub
rclb
adc
mov
mov
add
or
mov
pop
movsl
ds
mov
das
into
movsl
jg
lds
sub
pushl
push
test
adc
pop
std
sub
ret
cld
fnsave
call
aad
mov
clc
mov
lret
test
pusha
fimull
xorb
jmp
mov
pop
mov
adc
jle
jmp
lahf
loopne
xor
imul
cmpsb
mov
mov
out
jb
incl
adc
ja
mov
mov
add
call
jge
int3
add
and
push
adc
adc
cmp
decl
mov
push
add
mov
pushf
push
shll
mov
sbb
jnp
movsl
push
sub
mov
mov
test
ficoml
dec
jnp
ret
js
mov
jne
pop
cmc
iret
jecxz
mov
mov
add
inc
lock
stos
pop
addb
sbb
dec
and
jmp
dec
xchg
pop
popa
jmp
add
inc
les
xor
pop
inc
call
xchg
push
sub
mov
daa
arpl
ds
loopne
das
mov
pop
call
movsl
add
cmp
ja
jg
pop
adc
jae
lea
push
cmp
subb
ret
mov
fcompl
hlt
test
fmuls
lret
lods
sar
dec
nop
loopne
ret
int3
hlt
mov
cmpsl
add
dec
loopne
pushf
dec
sub
nop
jle
pop
sub
jp
movsl
or
test
outsl
out
mov
ljmp
out
repnz
je
sar
clc
xlat
add
push
jg
mov
xchg
push
loope
movsb
mov
fdiv
sbb
pushl
shll
in
jo
stc
test
sbb
call
aaa
lret
dec
andl
dec
mov
mov
xor
aad
lret
out
mov
xchg
inc
mov
ja
cmpsl
cltd
lcall
push
daa
pop
mov
pop
lods
dec
mov
sub
cmp
cltd
jbe
xchg
cli
and
lret
pop
call
pushf
out
add
push
mov
pop
mov
icebp
scas
aaa
mov
push
push
stos
loop
dec
lcall
push
xchg
fwait
jnp
nop
les
pop
stos
es
mov
je
pop
lea
mov
inc
mov
sbb
imul
dec
ret
and
imul
rcrb
mov
cmpsb
jmp
out
mov
popa
loop
nop
shlb
jo
sub
push
fldl
xor
add
mov
testb
adc
cmp
inc
jge
adcl
loopne
dec
out
sbb
hlt
inc
call
push
jg
imul
outsb
mov
pushf
aaa
xchg
es
filds
cltd
jae
sahf
sbb
in
pop
je
or
rcll
mov
and
imull
add
ljmp
or
dec
push
inc
lea
pushf
and
dec
xchg
sub
aad
ljmp
cld
push
pop
dec
leave
sub
std
fwait
jge
outsb
js
mov
loopne
sbb
in
sub
out
cmpb
sub
iret
add
cmp
nop
sbb
jecxz
inc
add
cltd
jge
adc
or
incl
cmpsb
icebp
repz
xchg
mov
mov
test
call
jecxz
test
std
movsb
fcmovu
leave
pop
or
orl
add
aaa
cli
repnz
scas
and
icebp
xchg
lret
xor
pop
push
icebp
icebp
inc
push
mov
cmc
test
movsl
in
ja
add
pop
in
test
jg
xor
inc
dec
lods
in
xchg
imulb
lock
jge
sahf
xor
mov
fs
call
inc
jo
push
sbb
mov
rolb
and
xchg
mov
jmp
cmp
xor
js
pop
push
insl
mov
and
ljmp
cld
xchg
icebp
push
xor
mov
xor
in
dec
lds
adc
cli
xchg
outsb
repnz
sbb
mov
mov
mov
call
pop
je
push
sub
hlt
mov
lret
das
das
push
mov
sbb
in
call
fsubrs
enter
add
repnz
in
push
jns
and
xor
dec
std
mov
push
mov
fs
cmp
hlt
inc
mov
jae
jne
sub
in
inc
je
pop
mov
push
xchg
dec
cmc
mov
sub
pop
ss
sbb
cs
pusha
pusha
cmc
jns
fadd
testl
test
shlb
mov
orl
or
ljmp
xor
ss
and
jmp
loopne
sub
sbb
cld
add
frstor
or
sub
decl
arpl
popa
imul
icebp
into
insl
lods
shrb
adc
sub
or
pop
xlat
and
add
push
cmc
add
push
add
stos
add
into
cmpsl
outsb
shrb
add
jmp
mov
adc
enter
pop
sub
push
fisubs
adc
fcmovnbe
insb
pop
scas
push
call
js
lcall
pop
shl
sar
fstl
sar
jp
jae
out
mov
push
sbb
ret
or
xchg
xchg
in
or
cmc
ljmp
ljmp
sbb
and
outsb
or
test
adc
add
mov
cs
gs
cmp
mov
incl
ss
vunpcklps
iret
call
adcl
loope
aas
jmp
inc
stos
rorb
subb
inc
mov
push
icebp
arpl
lcall
mov
pop
pop
and
mov
jbe
fsubrl
cmc
inc
xchg
clc
das
icebp
test
cmp
pop
push
cli
pop
sub
out
arpl
xchg
push
inc
ss
sahf
loopne
push
mov
out
push
push
aad
cmp
call
addr16
jge
dec
sub
ds
push
adc
in
imul
and
mov
xchg
jbe
loopw
sbb
cld
lea
dec
aaa
xor
cli
jl
fldcw
shrb
nop
lock
mov
lcall
jb
xchg
jp
dec
push
inc
jo
jg
data16
pop
or
js
sar
lods
mov
dec
dec
loopne
je
pop
stos
inc
cmpsl
xor
mov
pop
xchg
push
das
adc
adc
fs
stc
xor
xchg
int
push
inc
test
repz
jg
sbb
mov
orl
shll
pusha
pinsrw
lock
mov
pop
repnz
out
sub
jbe
js
xchg
push
js
cmp
xor
shrb
mov
push
push
das
stos
mov
popf
pusha
push
add
xlat
divl
push
inc
testl
xor
cli
dec
aas
mov
jg
jmp
dec
or
xchg
call
adc
in
or
xchg
rolb
inc
hlt
xchg
push
mov
movsb
xchg
mov
out
cwtl
cmpsl
test
dec
jle
in
out
scas
addr16
jns
cli
sbb
jmp
dec
mov
aas
cmp
shlb
adc
cli
stos
cmp
mov
mov
stos
mov
ja
fld1
fcomip
mov
into
sub
lcall
insb
xor
adc
inc
lcall
ss
psubsw
int3
test
push
cli
inc
mov
jge
add
adc
or
adc
sti
pop
and
call
and
mov
cmpsl
fistpl
mov
cmpsb
shrb
and
add
inc
enter
insl
cli
sub
fisubrl
cmp
mov
add
sti
xor
and
mov
rcrb
aad
push
push
aad
lds
lret
pop
clc
mov
pavgw
mov
ret
sbb
pop
out
push
movsl
insb
jecxz
ljmp
aaa
jb
das
in
into
ffree
push
mov
dec
lods
or
int3
ljmp
jg
add
pushf
ds
dec
push
xchg
fimuls
cmc
call
adc
repnz
dec
icebp
xor
xchg
loope
cmp
jg
ljmp
shlb
cmc
push
and
and
popf
push
push
pop
ljmp
je
pop
adc
dec
sub
cmp
dec
mov
lcall
mov
lahf
ds
push
mov
into
add
jge
xchg
push
jno
pop
ljmp
mov
or
stc
rcll
xchg
jo
stos
popf
lcall
fdivs
push
not
jno
loopne
pop
dec
ss
rorb
enter
sar
sbb
cltd
and
rcrl
mov
pop
jl
add
int3
or
mov
xchg
pop
movq
add
pusha
lahf
mov
xor
jecxz
xchg
mov
push
jp
cmp
inc
jg
pop
mov
repz
push
sbb
xchg
cli
decl
sbb
repz
xor
scas
jge
cmp
out
mov
jmp
nop
in
mov
xor
lods
lea
gs
fildl
inc
out
shll
sbb
jns
xor
test
pushf
jle
scas
pop
and
mov
pusha
xor
lods
repnz
mov
bound
pop
cltd
fmull
jbe
cmp
pushl
cmp
hlt
cld
sbb
test
mov
fidivrl
mov
lcall
lcall
sbb
loop
sub
int
and
xchg
std
mov
ds
mov
jno
scas
jmp
add
jp
shlb
push
pushl
or
cltd
imul
xor
dec
imul
fs
xchg
and
popa
ss
mov
xor
adc
sbb
std
cmp
xchg
test
jne
jg
mov
adc
call
ret
mov
incl
mov
jle
pusha
mov
jne
aad
sti
ror
mov
adc
push
push
xor
xchg
add
dec
xchg
dec
jae
inc
nop
push
and
mov
bound
jge
mov
xchg
jg
ljmp
ja
xor
nop
jo
test
push
mov
rcl
mov
pushl
fsubs
imul
imul
pop
cld
or
es
call
mov
icebp
pop
ljmp
xor
imul
add
inc
jle
xor
jg
mov
int
or
or
in
jg
out
lea
leave
cltd
jnp
mov
leave
out
fcmovne
sbb
icebp
or
shr
or
inc
cli
out
xchg
das
cld
or
mov
daa
loope
push
dec
sarb
int3
xor
fists
enter
cli
mov
scas
stc
outsl
sbb
lds
ret
mov
test
mov
dec
arpl
js
outsb
sbb
xlat
jmp
sub
ds
mov
xchg
shll
xchg
testb
mov
or
es
or
mov
mov
jbe
push
adc
scas
fsubrs
adc
hlt
adc
dec
xchg
shll
mov
jns
adc
fistps
pushl
pop
fs
hlt
repnz
mov
pop
and
jle
fcomps
ret
add
jmp
sub
and
jle
or
je
fnstsw
pushf
test
push
out
int
mov
daa
cmpsb
add
call
fwait
aad
hlt
lods
pop
aad
jg
sbb
mov
inc
ljmp
add
xlat
cmp
daa
fcompl
xchg
mov
dec
mov
ret
jmp
and
out
mov
test
lds
add
leave
add
imul
ljmp
icebp
data16
sub
mov
push
lcall
xchg
inc
adc
and
pop
imulb
in
roll
push
sbb
jae
sub
and
jnp
sub
filds
xor
and
push
adc
xor
add
jmp
mov
mov
ds
lahf
test
orl
pop
mov
sar
movsl
jg
and
bound
je
cmp
add
hlt
mov
dec
cli
add
and
ljmp
sbb
add
mov
mov
lret
popa
lret
out
sar
decl
dec
cmpps
rol
sarb
mov
stos
pop
push
pop
cli
mov
inc
add
cmp
mov
repnz
sahf
je
add
pushl
fimuls
jecxz
push
dec
lret
xchg
mov
and
dec
lds
stc
sbb
sahf
pop
out
inc
inc
xlat
mov
jne
out
roll
lods
pop
jp
andb
loopne
sub
pushl
mov
xchg
jp
lcall
frndint
mov
jecxz
pushl
test
inc
cmc
iret
dec
fsub
fstl
shll
scas
paddw
movsl
pushl
add
inc
sbb
sbb
push
arpl
adcb
ljmp
mov
mov
hlt
mov
mov
pop
es
add
int3
or
call
hlt
inc
pushf
call
lds
xor
in
imulb
fnsave
push
subb
fistl
sbb
outsb
fs
and
cwtl
sub
jno
stos
daa
lock
lock
jo
cld
push
shr
mov
ljmp
jmp
and
lock
neg
mov
mov
stos
and
and
movb
inc
ror
rol
mov
mov
lahf
or
sub
aas
mov
or
les
pop
fmuls
inc
inc
ret
cmc
add
jg
jmp
es
mov
call
cmp
or
ja
shrb
push
sbb
dec
aaa
mov
test
jmp
testb
int
jo
jo
leave
mov
cmpsl
or
jo
inc
sti
fucom
aas
mov
lcall
cld
or
jg
add
mov
movsl
rcrl
dec
imul
jbe
inc
mov
add
into
or
in
incl
int3
fidivl
lock
mull
js
cmpsl
sub
inc
xor
ljmp
call
ret
cmp
in
pop
mov
and
mov
enter
call
dec
dec
mov
addr16
pop
mov
mov
jno
or
aaa
clc
push
imul
jae
sbb
dec
mov
xchg
xchg
call
cltd
xchg
call
or
mov
int
and
jge
mov
je
mov
pop
cmp
jp
mov
xchg
daa
jo
and
cmp
insb
test
dec
mov
leave
or
pop
push
pushf
call
decb
fiadds
aas
mov
stos
lds
dec
into
xchg
dec
das
adc
inc
ds
cwtl
sbb
pop
fcoms
sti
mov
cld
je
sti
iret
stos
lcall
inc
test
data16
fisttpll
mov
imul
push
xor
mov
outsb
decl
mov
mov
imulb
xchg
xchg
adc
adc
push
cld
jge
push
popf
dec
and
notl
xchg
imul
lcall
hlt
in
add
sub
sbb
hlt
jp
mov
and
ljmp
cli
daa
mov
and
mov
dec
inc
mov
hlt
push
adc
adc
and
inc
push
sub
sbb
data16
orl
call
outsl
adc
repz
jg
outsl
fnstsw
cmp
sub
jg
mov
cmp
call
jmp
sbb
sbb
push
aam
inc
pop
push
mov
out
jg
scas
jg
adc
dec
popf
cmp
mov
dec
fimuls
mov
dec
fwait
aam
push
fs
js
inc
fildll
ljmp
setl
out
mov
adc
in
test
cmp
add
stos
inc
sti
sti
scas
cmp
or
cmpsl
and
add
inc
ret
sbb
mov
adc
mov
sbb
cmp
cmc
das
jge
je
jl
sub
pop
xor
movsl
ja
ljmp
fdivp
lock
roll
pop
or
adc
push
inc
or
stc
dec
mulb
call
mov
add
jge
jl
mov
mov
xchg
sub
popa
cmp
cmp
mov
repz
push
aaa
pop
loopne
pop
mov
rcll
jmp
dec
jp
lcall
add
sbb
mov
icebp
xor
mov
in
movl
in
xchg
xchg
clc
push
jg
je
sub
in
out
out
scas
pop
and
lahf
mov
mov
in
mov
push
jo
or
pop
cmp
call
push
jo
out
adc
ds
inc
and
jmp
sbb
mov
xor
loope
cmpb
orl
std
movsl
cmpsb
xchg
mov
push
fbstp
lock
cmp
loope
mov
dec
enter
test
in
adc
insl
sbb
test
incl
outsb
mov
push
add
fstpt
add
dec
std
push
pushl
jle
loop
pusha
fdivrl
fstpl
insb
jg
lret
lock
add
imul
xchg
dec
jo
lret
in
pop
test
decl
out
jp
pusha
cmp
or
pop
xchg
jne
pop
inc
lea
call
xchg
xor
lcall
xor
clc
pop
pop
jb
cmp
mov
jge
loopne
dec
in
inc
cld
xor
pop
out
mov
mov
add
aaa
mov
in
in
stos
add
loop
pop
mov
stos
xor
inc
movsb
push
push
xchg
ljmp
lock
out
daa
movsl
sub
pop
ds
fistps
xor
mov
adc
jae
cltd
add
movsl
pop
popa
mov
pop
pop
hlt
incl
iret
mov
gs
pop
add
xor
les
push
cltd
mov
fnstcw
adc
push
dec
pop
jp,pn
mov
fwait
mov
sub
push
push
xchg
jmp
insl
cmp
inc
bound
push
jg
push
push
xor
cmp
call
or
pop
test
lret
fdivl
pop
lea
mov
cli
lcall
mov
mov
pop
mov
shll
daa
cmpsl
pusha
div
mov
into
push
imul
iret
fldcw
ja
cli
lret
pop
inc
dec
inc
mov
ja
dec
pop
jg
cli
sbb
fstps
push
stos
fdivrp
sarl
cli
ss
push
cmp
cmc
mov
xorl
cld
cmpb
test
icebp
lcall
inc
in
addr16
dec
es
repnz
in
sub
ljmp
out
xchg
outsl
scas
xor
movsl
xor
test
syscall
jmp
pop
sub
inc
dec
dec
fadd
inc
and
lret
stos
mov
outsl
out
dec
mov
insl
call
filds
adc
mov
enter
dec
adc
mov
cld
clc
pop
lret
push
or
dec
mov
dec
lock
mov
mov
jg
cmp
mov
add
pusha
mov
mov
dec
mov
arpl
xorb
rcrl
inc
mov
xor
pop
cmp
cmp
add
incl
enter
pop
cmpsl
or
lret
int
push
pop
push
and
pop
mov
iret
or
mov
push
dec
stos
lea
leave
xchg
sub
jno
loop
cmp
add
flds
sub
mov
pushl
adc
icebp
das
std
mov
sti
xchg
adc
mov
imul
cmpb
cmp
mov
scas
lret
ljmp
sub
mov
adc
push
inc
popa
sti
mov
mov
pusha
add
ljmp
cmp
xchg
clc
mov
scas
lahf
hlt
ljmp
push
les
call
cmp
lea
or
mov
les
cld
pop
jnp
xorl
jmp
es
xchg
out
inc
jmp
cmp
pop
fwait
cli
fistpl
pop
fsubr
jo
adc
fildll
push
iret
notl
lock
ljmp
jl
std
xor
int
movsl
idivl
lea
pushl
and
test
and
adc
les
je
mov
cmpsl
icebp
mov
dec
push
filds
roll
pusha
ja
aam
aaa
stos
xchg
xor
mov
sbb
in
jbe
clc
jg
aas
mov
sub
mov
cmp
ljmp
loope
daa
adc
mov
mov
push
fistps
in
das
inc
or
stos
divb
push
call
sbb
out
in
fucomp
mov
dec
int
sbbl
idivb
sar
mov
jno
adc
and
xor
lcall
add
xor
shl
das
xchg
sahf
jg
sti
gs
xchg
dec
cmp
inc
fcomi
fcmovnu
incl
mov
dec
jb
sbb
adc
push
and
mov
sbb
sti
inc
sahf
test
imulb
cltd
pop
mov
ljmp
ja
jns
dec
in
jg
mov
loope
stos
ss
dec
dec
sub
jle
loop
lcall
cmp
push
sub
mov
js
pminub
sbbb
daa
lret
mov
mov
enter
jo
and
inc
out
xchg
push
and
jg
test
rol
mov
daa
jg
jp
addr16
addr16
add
lds
out
lods
cwtl
push
xor
xlat
mov
cmc
xor
dec
lret
sbb
push
ljmp
xchg
xor
clc
adc
stc
rorb
mov
push
movq
mov
adc
mov
jle
fcmovne
outsb
addr16
fs
aad
lret
and
jle
cmp
add
fsts
test
shlb
sub
jns
orl
add
inc
pop
cmc
mov
push
push
adc
std
jp
out
mov
mov
or
ljmp
mov
fbld
lret
mov
cmovge
andb
and
repnz
aad
or
movsb
adc
cmp
sti
mov
popl
call
mov
dec
in
aas
mov
cmp
inc
icebp
jecxz
push
inc
sub
or
or
cmp
dec
dec
int
pop
cltd
callw
cli
jmp
inc
cmp
dec
pushf
sub
or
aam
mov
test
fwait
cltd
lret
stc
mov
aaa
sub
rcll
and
jmp
mov
and
ljmp
xor
pop
jb
ja
sti
mov
scas
and
test
push
push
xor
sub
xchg
xlat
sbb
repz
test
nop
dec
cmpl
push
sbb
ljmp
dec
rorl
lret
or
call
sbb
or
jne
mov
jne
mov
mov
ja
aas
mov
cmp
std
mov
add
testb
mov
nop
arpl
mov
lahf
jo
leave
aad
enter
pop
xchg
adc
push
jle
roll
add
jns
insb
ds
inc
ljmp
test
jae
inc
repz
inc
incl
scas
aas
icebp
bound
dec
test
dec
mov
add
pop
test
pop
ret
aam
ljmp
mov
or
lods
das
lods
xchg
inc
in
and
and
aad
fbld
mov
jo
jbe
into
pushf
mov
sbb
mov
mov
sbb
bound
cli
mov
sbb
scas
pusha
sub
popf
push
loop
dec
jbe
out
sar
pushl
ret
aas
leave
lock
popf
popa
push
orb
bound
call
mov
and
not
push
or
mov
adc
ljmp
mov
push
push
mov
cmp
ds
mov
loop
out
aas
rcrl
or
jmp
and
cltd
add
and
mov
dec
sbb
jge
cmp
leave
jl
jmp
ljmp
cmp
push
addr16
call
pop
mov
mov
xlat
dec
sbb
jg
mov
push
nop
pop
lea
je
push
loopne
mov
imul
inc
cltd
repz
add
xchg
or
mov
clc
mov
test
popa
popf
jb
sti
call
mov
lcall
sub
in
movsb
push
jb
aas
add
xchg
sbb
call
xchg
gs
sub
jge
rcr
xor
in
pop
inc
ljmp
sbb
call
cmp
mov
or
and
inc
mov
sub
add
adc
js
sub
xor
shrb
sub
in
xchg
sub
loope
in
cmp
pop
icebp
call
clc
call
dec
push
sbb
mov
loope
mov
jno
bnd
fildll
xchg
mov
xchg
pop
shrb
repnz
ja
cmp
movl
bound
xor
mov
in
or
pop
mov
jg
push
inc
push
es
add
xorb
push
xor
ja
inc
icebp
enter
lcall
les
int
xor
lcall
and
gs
lods
add
mov
call
push
dec
insl
stos
mov
cmp
xchg
out
mov
or
jb
cld
ljmp
test
or
jp
lds
or
push
inc
sub
decl
int
sub
in
stc
lea
out
and
ret
out
imul
loope
mov
loop
mov
loop
xchg
inc
hlt
sbb
outsl
stos
sarb
xlat
and
push
stos
or
cmp
outsl
decl
into
test
stos
sub
cpuid
nop
xor
jmp
sbb
incl
or
out
cmc
mov
fstl
add
pop
aas
adc
repnz
jecxz
mov
int
das
mov
mov
lock
mov
cwtl
out
pop
stos
xchg
sbb
jmp
daa
negl
xchg
dec
dec
add
fildl
adc
mov
daa
scas
adc
mov
shl
scas
xor
call
imul
negl
add
add
mov
push
xor
mulb
or
ret
add
hlt
decl
cwtl
mov
xchg
jmp
mov
mov
pop
xchg
or
cld
aam
rcrl
jb
into
dec
stc
mov
cltd
testl
cmp
push
cmp
sub
aad
inc
fwait
cwtl
cmp
popf
cmpsb
iret
movsb
xor
outsb
or
mov
mov
push
les
mov
mov
pop
mov
clc
push
out
aam
ljmp
and
ficompl
jmp
mov
out
xchg
mov
pusha
xchg
aad
cli
test
sub
inc
inc
cmc
xor
pop
mov
cmc
mov
loope
and
shlb
xchg
outsb
mov
outsl
in
stos
and
call
dec
jno
xchg
cltd
loope
es
ljmp
sub
stc
push
mov
inc
js
jmp
in
in
leave
loopne
std
movsl
call
cmpsl
nop
xchg
outsb
inc
and
xor
push
sbb
sbb
inc
pop
ds
pop
sbb
cmp
aad
inc
mov
movsl
fistps
outsb
xlat
inc
addb
cmp
xor
inc
adc
stos
js
add
lcall
fisubrs
dec
inc
pop
outsb
cmpl
pop
jno
xchg
mov
pop
push
movsb
and
mov
dec
stos
out
pushf
movsl
xchg
stos
jle
inc
jp
mov
adc
call
adc
cmp
inc
aad
fdiv
rcr
cmp
pop
gs
rol
int3
stc
jne
out
aaa
cld
mov
shl
decl
outsb
in
inc
pop
inc
or
sar
decl
cmpsl
lds
pop
jg
out
loopne
lea
inc
ljmp
das
cld
call
jmp
fwait
xchg
mov
xchg
test
aad
jnp
call
cli
push
pop
popf
mov
call
sub
push
incl
shrl
aad
xor
sub
jg
mov
mov
stc
mov
das
pop
mov
cmpsl
ljmp
mov
fnstsw
outsb
push
je
iret
or
pop
jl
jp
ds
in
pop
and
jmp
mov
loope
xchg
sbb
pop
adc
dec
inc
test
ret
repz
icebp
jmp
adcb
in
pop
fs
decl
pop
sbb
mov
dec
cwtl
aaa
adc
dec
in
insl
dec
insl
pop
jmp
dec
mov
aam
jnp
xchg
mov
jmp
xlat
adc
dec
stos
jne
jmp
mov
pop
inc
outsb
mov
mov
roll
cmp
add
mov
lcall
cwtl
ret
insb
inc
xor
outsb
mov
xor
addr16
adc
insl
fdivl
popa
mov
cmc
aaa
mov
sub
inc
rcrl
fnstsw
js
xchg
dec
mov
lock
add
push
les
in
jbe
fsts
decl
cmpsb
sub
jl
push
lcall
mov
jbe
xor
or
push
push
mov
pop
mov
sarb
cmp
pop
fisubrl
mov
fistpll
outsl
in
movsb
sub
push
and
jl
imul
fdivr
popf
fisubrl
fdivrp
or
cmpsb
daa
cmp
stos
test
jg
call
pushf
jl
add
lods
cwtl
lds
jb
mov
clc
jae
jp
and
add
xchg
jo
test
ror
and
dec
loope
lcall
incl
push
pop
aad
jecxz
or
hlt
xchg
lret
loopne
insl
mov
xchg
mov
sub
incl
mov
movsb
out
mov
mov
cmp
sub
aas
clc
test
sbb
pop
or
pushl
push
xor
mov
insl
test
xchg
mov
clc
or
sub
mov
scas
fs
sub
lock
mov
mov
outsl
or
cld
add
incl
js
jae
out
leave
jnp
mov
add
mov
adc
daa
and
mov
jae
shl
ljmp
jmp
je
rcrb
leave
inc
pop
pop
dec
mov
fwait
push
or
loope
jnp
push
jge
and
aaa
mov
jg
in
cwtl
std
shlb
shlb
jbe
push
loop
in
test
cmpsl
test
je
xor
clc
sarb
jo
mov
xor
lcall
test
fwait
sbb
jecxz
mov
xchg
jecxz
mov
add
cld
mov
xor
leave
enter
pop
leave
mov
xchg
or
jbe
pop
sub
les
xorl
lret
call
out
mov
inc
rcrl
popa
rcrb
pop
rcrl
jmp
sbb
mov
in
jmp
inc
shl
push
insl
mov
mov
enter
ficompl
sbb
pop
loopne
cmp
lret
addr16
jno
fisttpl
pop
scas
pop
call
jecxz
gs
shrb
fbld
and
sbb
shl
sbb
out
jg
movb
filds
outsb
jle
mov
and
mov
clc
decl
cmp
lods
dec
outsl
ljmp
dec
xor
test
mov
push
shlb
cmp
sub
mov
inc
mov
jmp
call
bound
rcrb
jbe
and
push
sub
jecxz
xor
mov
movsb
mov
dec
lret
pop
fstp
jle
push
clc
mov
sub
mov
mov
xor
js
lds
daa
dec
aam
dec
jge
decl
push
loop
pop
ficomps
ljmp
sbb
aam
mov
jmp
push
cs
in
cs
or
repnz
ljmp
push
or
add
setp
pop
sarl
adc
pop
incl
decl
cmp
cmp
rcrb
iret
lret
shlb
inc
mov
inc
pop
jg
orb
mov
ja
dec
aad
call
inc
inc
cwtl
jp
gs
iret
fmuls
dec
outsb
nop
push
arpl
jo
enter
adc
jg
mov
test
xchg
loop
or
shrl
lods
push
das
shrl
stc
ljmp
xor
jg
mov
dec
lcall
mov
add
mov
cmp
nop
and
sub
sti
loope
xchg
clc
repnz
cvtdq2ps
aam
xor
movb
add
insb
clc
mov
mov
jle
xchg
rcll
mov
push
add
lcall
inc
sub
jno
sbb
mov
rol
sbb
outsb
mov
lahf
scas
pop
sarl
hlt
xchg
call
rolb
push
outsl
pop
jp
sahf
mov
ss
cltd
inc
mov
in
add
scas
and
hlt
jae
mov
popa
pushf
sahf
lea
in
jge
daa
mov
jmp
or
in
int
mov
decl
dec
add
add
pop
loop
inc
and
and
pushf
out
pop
or
call
mov
sub
sti
shll
and
adc
dec
int
push
mov
lcall
add
mov
push
leave
pop
xor
lret
lea
jp
sbb
imul
loop
decl
cmp
mov
out
jbe
inc
frstor
push
scas
add
incl
and
repz
cmp
insb
shll
cmc
imul
pushl
push
lds
or
ret
orb
mov
psrlw
push
roll
adc
sbb
out
roll
popa
push
mov
sahf
mov
jno
sysenter
pop
mov
adc
xchg
dec
jg
fld
bound
decl
inc
movsb
test
push
jb
int
fdivr
gs
call
jns
cmpsb
out
push
jg
xor
lcall
and
sbb
imul
inc
xchg
in
push
repnz
dec
push
lock
xchg
xor
and
xchg
mov
clc
call
adc
jge
in
mov
aas
ficompl
adc
lcall
pop
loope
or
inc
out
mov
cli
cmp
sub
inc
dec
pop
sbb
mov
jmp
sub
loopne
aam
in
jns
dec
jne
adc
aas
pop
mov
sbbb
jnp
call
ja
mov
jae
and
testb
stc
cmc
pop
jp
mov
popa
push
xchg
icebp
pop
loop
jecxz
outsb
add
movb
lock
and
fnstsw
aaa
sub
sbb
sti
cmp
fdivr
mov
cmp
iret
test
adcb
in
cmp
inc
jb
inc
dec
mov
std
lcall
fimull
or
sbb
fldl
jb
mov
vpavgw
adc
xchg
jmp
dec
dec
mov
mov
lcall
test
mov
jecxz
sub
repz
mov
lds
xchg
adc
mov
scas
sarl
ljmp
jle
xor
mov
add
out
xchg
jg
rcr
aam
push
jbe
popa
jo
lock
das
and
xchg
sbb
or
hlt
pushl
jg
inc
in
std
out
lcall
pop
out
clc
xchg
jmp
cmp
adc
aam
mov
cs
dec
dec
and
lcall
push
sar
mov
mov
fwait
sbb
outsl
push
or
lods
fbstp
sbb
xchg
inc
fistps
mov
inc
fwait
test
das
xchg
faddl
add
leave
insb
scas
mov
xchg
lahf
clc
xchg
xchg
mov
jno
aad
lods
outsl
adc
mov
adc
mov
stos
shll
sbb
inc
pusha
mov
inc
mov
ljmp
inc
fdivrl
cmp
iret
push
mov
mov
movsb
or
call
mov
lahf
movsb
addr16
add
das
sbb
inc
mov
and
dec
xchg
addr16
pop
pop
mov
repnz
outsb
bound
iret
movsl
or
push
loop
aas
repnz
lds
and
sbb
mov
or
mov
add
es
mov
inc
mov
or
aad
scas
sbb
jge
pop
fmuls
sbb
ss
sbb
mov
push
vmaxsd
xchg
clc
shrb
idivl
rolb
bound
xchg
imul
mov
dec
sbb
mov
inc
mov
loop
pop
add
add
sarl
imul
incl
movsb
pslld
shrb
and
daa
fldcw
mov
int3
add
mov
outsb
sbb
ret
dec
cld
ljmp
ljmp
pop
psadbw
das
addr16
mov
xchg
sub
mov
pop
lods
fdivl
mov
sahf
daa
dec
add
push
roll
mov
data16
or
sub
imul
xchg
or
push
sahf
in
shlb
decb
inc
jp
decl
in
pop
adc
mov
cmc
out
imul
lcall
cmp
and
test
dec
cld
decb
test
jmp
test
call
cmpsb
pop
jae,pn
jae
jo
inc
inc
stc
cmp
mov
dec
dec
ljmp
mov
stos
call
aam
mov
mov
push
orb
rolb
xchg
mov
sub
xorb
cs
jp
lahf
lret
adc
jne
data16
lods
outsb
sarb
leavew
ja
sti
sbb
filds
loope
test
and
pop
push
sub
icebp
cmp
adc
decl
xor
xor
jecxz
mul
xor
and
cmp
cwtl
mov
push
xchg
push
mov
call
inc
neg
test
incl
aad
icebp
jecxz
incl
inc
fcmovnbe
sub
mov
enter
sub
lcall
pushl
dec
push
sub
loopne
fnstcw
rcr
and
dec
add
adcb
fsubl
and
mov
push
add
call
and
pop
pop
or
add
loopne
call
fildll
xchg
aam
inc
popf
leave
fldt
jno
decl
das
or
dec
psubq
mov
dec
xor
mov
leave
push
mov
mov
xlat
inc
movsl
imul
inc
jae
hlt
mov
stos
enter
fcoms
lret
lcall
inc
jb
push
pop
dec
mov
aaa
shl
jbe
xor
push
popa
insl
out
sbb
cli
cmp
pop
test
and
jnp
push
into
sbb
lcall
lea
xor
cmp
lds
mov
mov
mov
mov
mov
dec
dec
jg
push
lock
les
jne
sar
mov
clc
movsb
inc
or
nop
mov
jbe
daa
ss
push
daa
push
addr16
aaa
sub
sub
sub
int3
xchg
imul
sahf
das
inc
testl
jmp
repnz
add
push
out
mov
inc
inc
pop
sub
sbb
test
inc
cmp
outsl
rcrb
add
addl
xchg
das
cld
incl
mov
jmp
push
into
sbb
mov
adc
mov
mov
sti
dec
lds
cwtl
fs
js
ret
mov
hlt
lcall
push
xor
mov
stos
sub
cmp
sbbb
add
mov
ljmp
in
pusha
adcl
nop
xchg
cmp
or
lea
jae
decl
cmpsl
jge
pop
fs
cmpsl
and
test
push
test
ljmp
push
rol
mov
jle
fs
ss
xchg
je
fnstenv
xchg
sbbl
rcrb
cmp
into
jmp
incl
inc
mov
sub
lea
dec
mov
lcall
les
adc
jb
add
pushf
jge
cmpsb
ja
punpcklwd
and
sub
sub
loope
pop
loop
aam
pop
xchg
fcomip
jg
and
lea
pushl
xchg
jns
sahf
rol
mov
daa
or
push
test
push
xor
push
jmp
push
jnp
dec
into
sbb
repz
xchg
mov
nop
sub
adc
incl
stc
pop
lods
stos
dec
mov
push
inc
add
ljmp
dec
pop
jg
stos
movsb
pop
pop
repz
cmpsl
jno
aaa
pop
aaa
mov
push
inc
jmp
inc
xchg
icebp
jns
jecxz
movsb
cmp
jno
xchg
cmp
in
popf
and
loop
inc
lock
pushl
test
std
dec
pop
je
insl
outsb
out
lods
fwait
mov
js
stos
movsb
call
enter
xor
xor
movsl
dec
incl
add
mov
lahf
rcl
iret
rcll
dec
or
call
rol
leave
xchg
mov
pushl
aam
mov
and
sbb
lods
xor
leave
add
ljmp
mov
stc
aas
jnp
cmp
xor
mov
inc
idiv
jmp
mov
pushl
push
sahf
mov
fistl
daa
fwait
pop
or
add
push
jl
cld
mov
jne
xchg
or
je
call
jns
cmpl
scas
scas
in
xchg
mov
sahf
cmp
pop
jl
jns
and
icebp
ss
fwait
insb
xor
cld
mov
add
adc
and
call
sti
push
and
in
rcrb
leave
pop
enter
leave
jae
loope
cld
and
mov
aaa
lcall
call
lret
cmp
scas
or
gs
hlt
jbe
push
pop
push
hlt
ja
decl
push
pop
jo
icebp
jmp
or
cld
out
sbb
rcrb
add
arpl
add
movsl
pushl
movsb
pop
pop
cmpsb
fmull
enter
lret
sbb
pushl
cwtl
jb
stos
or
pop
movsl
dec
ror
test
push
mov
jnp
xor
push
mov
incl
out
jo
pushf
jecxz
jmp
mov
sub
scas
xchg
mov
sbb
inc
lds
cmpsb
leave
dec
aad
decl
subl
jg
cltd
pushl
clc
mov
adcb
faddl
mov
das
std
test
clc
mov
shl
shrl
dec
xor
xor
lcall
fcomi
jnp
popl
outsb
ds
pop
sub
addr16
ljmp
je
xchg
stc
or
mov
push
jecxz
mov
sbb
ljmp
inc
int
adc
xchg
inc
fwait
divl
pop
mov
or
hlt
pop
std
pop
push
jne
jno
movsb
lahf
scas
popf
xor
xor
lcall
rcl
dec
sub
cmp
mov
cs
cmp
pop
jg
lcall
cmp
cmp
popa
fists
cmp
decl
cwtl
xor
pop
js
and
jnp
out
push
push
inc
stc
incb
clc
lcall
addr16
out
or
push
fldcw
pop
mov
scas
or
aam
xchg
ror
mov
addl
scas
imul
adc
dec
addb
popf
enter
fidivrl
fistpll
cmc
sbb
dec
jl
icebp
pop
stc
pop
lea
imul
pushl
or
mov
hlt
mov
fwait
mov
call
sub
cmp
push
pop
or
dec
dec
mov
std
leave
push
cmp
jmp
dec
popa
scas
pop
cmp
pop
xchg
subb
jb
push
dec
aad
cli
incl
lret
arpl
push
ret
xchg
cmc
cld
jg
lods
outsb
add
push
push
mov
cmp
decl
xchg
xor
xlat
cli
aas
inc
in
fists
cmpsl
pop
int3
inc
pop
movsl
and
jecxz
jno
push
pop
push
pop
adc
dec
ret
in
fs
lcall
mov
popf
and
adc
or
mov
decl
cld
pop
xchg
js
xlat
inc
jae
xorb
xchg
dec
mov
dec
inc
pop
dec
mov
xor
mov
and
or
mov
repz
cld
jg
daa
das
add
lods
dec
insb
adc
outsb
test
jg
mov
das
scas
pop
out
jmp
in
in
je
adc
mov
xchg
loop
decl
inc
nop
hlt
jle
imul
lcall
pop
imul
shlb
adc
dec
cld
push
and
pop
jo
cmpsb
clc
std
test
adcb
lret
pop
xor
das
lret
test
mov
out
outsb
addb
lcall
jl
mov
addr16
imul
call
in
mov
adc
xchg
xchg
out
adc
std
call
and
push
sub
sub
out
mov
pushf
call
in
xchg
pop
bound
or
mov
cmpsl
lret
loope
call
stos
sbb
jo
ja
sahf
lret
cmc
call
push
outsl
icebp
sbb
jns
jo
in
cmp
pop
test
jl
into
dec
mov
mov
adc
in
xchg
dec
movsl
adc
mov
jo
gs
mov
add
jp
sar
incb
aas
arpl
adc
sbb
xor
popf
mov
or
test
int
adc
jbe
cld
in
imul
and
gs
stos
push
jp
inc
xchg
mov
xchg
pop
xor
dec
mov
xchg
in
pop
xor
mov
bnd
std
fldenv
jne
jecxz
in
pop
cld
lcall
inc
or
mov
adc
push
push
jo
ljmp
pop
mov
addb
loope
jae
mov
add
mov
ljmp
aas
pushl
data16
mov
insb
pop
and
jmp
fs
and
push
pop
push
stc
call
jne
push
dec
inc
insb
int3
sub
ret
js
rcll
lds
mov
sar
sar
push
movsl
mov
cli
dec
pop
xor
and
sbb
mov
xchg
xchg
pop
call
dec
into
jmp
imul
push
inc
mov
decl
loope
pop
ficomps
dec
mov
loop
jle,pn
enter
mov
jg
fmull
jae
add
and
hlt
test
mov
jmp
mov
adcl
push
ljmp
lcall
add
or
outsl
sbb
pop
and
mov
test
mov
xchg
inc
in
pop
mov
mov
stos
mov
pop
add
xchg
int
scas
jg
inc
xor
dec
and
jp
out
xchg
cmp
push
push
ss
call
pop
sbb
xchg
je,pt
enter
mov
adc
movsl
pop
sub
scas
les
sub
ud0
sbb
es
mov
push
xchg
push
data16
shlb
out
add
icebp
push
ljmp
in
adc
je
mov
movsl
out
std
mov
mov
jp
sbb
call
call
fs
mov
sub
xorb
push
dec
les
xchg
cs
dec
jbe
mov
xor
das
sbb
clc
pop
pusha
jecxz
lds
xor
daa
or
jnp
cmpsl
lods
pop
ds
int
mov
and
out
gs
lock
jle
xor
bound
cmc
pop
push
adcl
ret
cmp
pop
loop
pop
pop
rolb
lcall
jmp
gs
cs
push
mov
clc
mov
push
cmc
mov
dec
cmc
mov
mull
jg
lcall
dec
ds
xor
sarl
aaa
jle
ja
ss
sar
lods
ss
enter
adc
inc
push
out
test
pusha
xchg
adc
push
cld
mov
push
pop
dec
lds
scas
daa
clc
cwtl
call
push
pop
ljmp
icebp
pop
jns
aas
lahf
stc
xor
ret
adc
cmp
pop
cli
ljmp
cli
popa
jmp
jp
pop
aam
imul
xor
rorb
add
mov
jg
and
je
in
mov
push
or
decl
xchg
push
out
mov
shr
push
xchg
push
loope
xor
outsl
cli
fcoml
inc
lcall
outsl
pop
xor
sub
nop
dec
mov
sbb
std
rcr
mov
fildll
ljmp
cmp
adc
jmp
jnp
std
adc
int
sbb
imul
fwait
adc
leave
mov
fcmove
xor
push
xchg
fcmovbe
in
cld
jae
jb
push
pop
lods
daa
lcall
stc
dec
or
cmp
ret
in
jns
gs
pop
in
lcall
fld
repnz
movsb
dec
subl
push
loop
or
mov
movsb
jmp
jg
add
pop
inc
pop
pusha
into
push
adc
mov
shrb
mov
es
incl
les
pop
pop
push
enter
xlat
cmp
push
shr
jmp
dec
lock
fstps
xchg
call
es
icebp
sub
dec
std
adc
mov
jg
test
adc
decl
pop
ret
push
std
inc
sbb
xchg
bswap
fsubrs
fwait
das
fmuls
sub
inc
sahf
mov
and
xchg
clc
mov
pop
dec
jl
sahf
rol
jb
and
mov
imul
std
lcall
aas
cmp
mov
mov
pushl
xchg
adc
inc
xor
mov
mov
ljmp
mov
mov
xchg
jg
mov
sub
or
std
xchg
cs
jge
arpl
pop
jg
adc
test
js
cmpsl
das
rorl
outsl
sub
ficompl
add
dec
cmp
sti
jmp
xchg
xor
inc
push
fimuls
in
rorl
inc
inc
cltd
dec
lods
dec
sbbl
mov
jo
loope
mov
lock
decl
mov
add
pop
push
cld
xor
sbbb
decl
std
cld
mov
pushf
sbb
subl
ret
out
pushl
call
or
pop
test
imul
outsl
cmp
inc
test
dec
std
ljmp
pop
ret
loope
mov
out
xor
sbb
pop
jnp
dec
mov
cs
es
repnz
mov
jg
mov
cmpsb
and
outsb
jns
sahf
clc
addr16
jb
dec
jnp
or
movsb
inc
js
adc
cli
es
lahf
subl
mov
das
or
in
pop
pusha
cmpsb
in
adc
mov
test
testb
push
fdivl
sahf
mov
pop
aaa
stos
pop
mov
shrl
sahf
arpl
notb
arpl
mov
mov
pop
outsb
and
loope
in
mov
mov
outsl
hlt
das
cld
scas
push
pop
scas
sbb
dec
movsl
sti
arpl
jmp
ret
push
jecxz
aas
ret
jmp
xchg
mov
mov
cmpsb
cld
dec
xor
mov
aad
pop
and
clc
ljmp
xchg
fldenv
ret
pop
test
mov
sub
aaa
mov
jbe,pt
cmpl
shrb
jg
or
push
movsl
pop
xor
jp
xchg
das
and
clc
cwtl
scas
pushl
mov
cwtl
xchg
and
sbb
dec
xchg
mov
jle
clc
ljmp
xchg
adc
sub
add
popf
jg
loop
ljmp
out
xor
divb
adc
iret
ja
inc
iret
ljmp
mov
call
into
mov
mov
out
mov
jnp
cmp
mov
xor
mov
dec
pop
or
stos
test
loop
ss
jmp
insl
out
xor
adc
mov
cs
mov
push
sub
shrl
fs
or
and
sti
add
jno
mov
lcall
ret
dec
mov
mov
lret
inc
jg
jno
add
leave
std
add
std
sbb
jp
rolb
movsb
cmp
std
push
fwait
add
mov
and
mov
lods
cmp
mov
mov
mov
jbe
andb
fwait
inc
mov
fnstcw
or
xor
push
pushl
cwtl
adc
imul
ret
lret
jg
jg
xlat
push
jl
ss
loope
call
mov
incb
cld
and
movsb
rorl
movsl
jmp
mov
push
mov
mov
loop
add
incl
fwait
lods
sub
ja
gs
stos
cld
scas
shll
push
xchg
pop
imul
repnz
or
inc
cmpsl
push
cmp
push
lcall
add
aad
outsl
fisttpll
test
xchg
dec
mov
adc
decl
test
cwtl
scas
rcll
sbb
outsb
cmpsb
xchg
mov
pop
icebp
and
movl
in
push
xlat
fstpt
insl
jle
sbb
sub
push
test
dec
dec
push
repz
decl
shlb
loope
in
sub
cltd
mov
push
insb
pop
mov
movsb
jecxz
inc
jg
add
mov
dec
inc
in
push
popl
sub
sbb
popa
dec
xor
mov
xor
popa
es
mov
mov
mov
mov
rcrb
mov
fidivl
mov
mov
mov
lret
decl
fucomip
jmp
mov
mov
aas
add
scas
fwait
rcrb
decl
aad
sub
daa
and
adc
nop
or
inc
mov
jmp
fs
stos
sub
mov
in
fimuls
xor
out
gs
mov
push
popf
sub
mov
mov
aas
cmp
fcomp
cmp
mov
in
mov
mov
or
outsl
imul
xchg
lahf
dec
movsl
cmc
ljmp
inc
mov
sub
aaa
jl
das
mov
jecxz
loopne
mov
pushl
mov
add
cltd
pop
inc
mov
pop
sahf
pushl
popf
sub
cmp
cmp
or
in
mov
arpl
jbe
hlt
lret
or
stos
xchg
call
add
dec
cmp
pop
mov
adc
test
lock
rolb
lods
or
pop
js
xchg
cli
decl
jb
loop
mov
ret
jb
je
fiadds
pop
aaa
mov
xchg
dec
movsb
mov
mov
enter
cli
lcall
inc
and
sub
xor
push
int
sbb
sbb
mov
sub
jecxz
push
mov
add
filds
out
adc
shll
das
xor
ljmp
dec
fistpll
hlt
stos
rcl
daa
adc
pop
push
mov
inc
scas
sbb
mov
scas
pushl
or
jmp
xor
cli
mov
mov
dec
mov
mov
pop
push
icebp
in
sub
jge
fcmove
mov
push
adc
lcall
xchg
orb
jns
xchg
cwtl
cmp
mov
mov
mov
cmp
jge
mov
mov
adc
lret
xor
push
xchg
lock
xchg
xchg
ljmp
mov
fbstp
std
pop
sbb
add
pop
add
insb
jbe
jno
cmp
pushl
inc
lcall
hlt
js
adc
sahf
das
xchg
popa
loop
jb
clc
test
jg
xor
and
mov
scas
and
mov
mov
arpl
int3
adc
add
xchg
add
push
mov
or
xchg
in
les
lcall
mov
fimull
and
cmc
outsb
shl
ljmp
adc
jns
jmp
push
add
xchg
cld
test
add
test
loopne
sbb
test
jmp
lea
fisubl
arpl
fmuls
aam
pop
cmpsb
mov
test
pop
cli
outsl
std
inc
test
mov
pop
dec
fs
mov
or
xor
in
xchg
push
adc
ja
aad
pop
bound
sub
incl
jp
cmpsb
iret
popa
and
cmp
stos
shll
adc
inc
add
pushl
push
sbb
mov
sti
mov
ret
xor
ret
int
imul
rclb
xor
cmp
mov
inc
push
push
pusha
lods
ffree
out
jno
jge
iret
insl
sbb
inc
cmp
pop
leave
in
jnp
push
scas
xchg
rcrb
lcall
imul
imul
out
dec
mov
decl
mov
shll
mov
dec
in
fwait
mov
jg
dec
lcall
cmpsb
xor
pop
ljmp
dec
testl
mov
movsb
in
in
ljmp
mov
jo
xchg
in
or
xchg
test
sbb
aaa
jno
push
out
jp
sub
mov
scas
insl
sbb
push
push
xchg
icebp
hlt
push
push
and
xchg
sbb
lcall
cmp
stos
add
stc
pop
enter
pop
pop
jmp
in
jg
sbb
mov
xchg
outsl
push
cwtl
outsl
mov
popf
push
rcrl
enter
inc
mov
mov
dec
iret
push
dec
add
jge
jge
lds
jb
sbb
orb
mov
lcall
mov
adc
xor
mov
or
mov
in
xchg
mov
aam
stos
pop
and
pop
mov
sbb
rcl
inc
or
mov
mov
and
decl
add
lahf
pop
cli
clc
jle
push
jge
xor
jae
adc
xchg
mov
dec
cmp
fnstcw
and
aam
xor
in
ja
add
pop
insw
dec
cwtl
je
decl
cld
inc
shrl
ret
cmc
loop
sbb
fwait
loopne
jmp
mov
in
xor
data16
jno
pop
mov
inc
mov
cwtl
clc
lods
sub
or
push
jecxz
jecxz,pt
push
mov
movsb
fiadds
push
repnz
xor
jmp
pop
shll
pop
lods
push
test
fs
stos
and
mov
inc
enter
ljmp
xchg
jne
xchg
push
xor
mov
pushl
shll
sub
inc
leave
popf
lahf
mov
add
xchg
add
ja
pusha
ds
or
adc
loopne
mov
add
and
test
xor
lods
orb
rorb
imul
addb
pushf
decl
pop
lret
scas
cmp
ret
pop
mov
aad
rcrl
lea
mov
out
sbb
inc
dec
adc
mov
decl
lds
pop
sbbl
dec
xor
pushf
push
std
pop
push
outsl
cld
lods
cmp
dec
or
sbb
cmp
call
sbb
push
and
call
cmpsl
mov
rcrl
sbb
pop
xchg
shll
pop
pop
mov
or
mov
out
add
fdivp
call
repz
cmp
inc
fdivl
sbb
fdivr
ljmp
add
int3
push
out
dec
leave
out
test
shrb
popa
mov
in
js
mov
mov
add
enter
add
fsts
arpl
jg
and
loopne
xor
in
push
iret
andl
pop
xlat
loopne
pop
test
bts
mov
jns
ja
int3
adc
jle
fsubr
adc
sub
iret
subl
std
filds
jns
jge
push
notl
jne
or
inc
stc
dec
enter
sti
mov
push
idivb
mov
out
jb
inc
scas
xchg
xor
dec
adc
aad
ljmp
ficoms
xlat
mov
xchg
out
mov
pop
nop
jg,pn
sbb
cmc
incl
sub
push
xchg
cmp
xor
xchg
push
mov
les
ds
outsl
test
test
js
pop
cmpl
dec
cmp
incl
mov
ss
jno
sahf
dec
mov
stc
in
hlt
dec
xor
in
xorb
aam
pop
dec
jno
js
push
out
fstps
clc
mov
jne
cmp
decl
ret
lods
dec
mov
xor
push
pop
xchg
mov
jmp
repnz
add
out
call
pop
or
jg
scas
aaa
mov
push
inc
jb
cmp
or
cli
jg
mov
jo
mov
push
xchg
fisubs
loop
clc
incl
adc
test
push
xor
pop
mov
flds
push
fistpll
dec
lods
and
push
cmp
call
dec
add
and
add
cltd
push
loope
into
ja
icebp
insb
test
daa
jns
out
clc
jmp
mov
mov
fbld
stc
fdivrs
addl
call
add
xchg
movsl
sbb
sub
popa
ret
jbe
mov
aaa
popa
ss
cld
jmp
ficoms
sbb
mov
sbb
cli
incl
clc
testb
pop
pop
addl
dec
scas
xchg
mov
pop
adc
mov
fmull
pop
dec
stos
addr16
inc
call
jg
fdivrl
push
out
ja
xchg
xchg
aas
cmp
loopne
jp
ljmp
fidivrl
das
imul
mull
cmp
int
aam
jg
ret
in
cmp
lcall
or
enter
xor
test
negl
pop
adc
fcos
call
jo
leave
ds
push
dec
bound
retw
icebp
jbe
mov
cld
data16
push
sahf
mov
cld
inc
xor
xor
add
xor
cmp
sub
mov
mov
add
jns
sbb
orl
das
cld
aaa
jmp
cmpsb
cs
sbbl
decl
add
aad
mov
repz
les
pop
inc
cmc
pop
mov
cmp
add
pop
int
std
stos
fwait
mov
or
pop
xchg
cmp
fisttps
inc
outsb
js
lock
cmp
xor
jg
mov
xchg
xor
add
test
dec
xor
movsb
xchg
call
push
xor
out
jbe
xor
mov
lea
xor
lock
adcl
out
pop
xchg
aas
jecxz
mov
imul
call
sbb
push
outsl
call
ss
int
aas
pop
adc
adc
mov
inc
cltd
pushf
pushf
sbb
inc
mov
mov
mov
cmp
std
sbb
icebp
mov
mov
xchg
addr16
mov
incl
mov
cmp
mov
cld
mov
lcall
mul
xchg
addr16
push
in
or
pushf
fldcw
dec
std
jmp
mov
jecxz
xchg
push
notb
inc
mov
pop
inc
fcmovnbe
fcmovne
jae
ja
push
insl
repz
mov
icebp
enter
push
inc
daa
sub
add
loop
add
scas
and
pop
outsb
stos
lcall
pop
xchg
sub
cmc
cmp
push
lcall
incl
jb
movsb
mov
fadds
negb
adc
daa
test
adc
mov
fbstp
cmp
jo
imul
dec
imul
cwtl
inc
scas
push
int3
mov
nop
fsts
out
mov
out
sbb
ret
outsb
pop
call
dec
and
cmpsb
das
out
imul
mov
lcall
rol
scas
pop
and
popf
xor
movsb
add
xchg
ljmp
cmp
pop
xchg
xchg
insb
mov
repnz
push
adc
incl
add
and
mov
movsl
movsb
stos
or
push
inc
pop
sbb
pop
inc
or
lcall
pop
add
mov
scas
std
dec
mov
pop
ror
pushl
ljmp
mov
and
lret
dec
jp
push
cmp
outsl
cmc
jg
xchg
push
fldcw
lock
sub
xchg
cmpsb
inc
cs
lods
jb
sbb
ljmp
stos
push
gs
add
dec
adc
and
aam
or
or
mov
mov
push
stos
mov
inc
and
mov
mov
aam
out
notl
sahf
xchg
mov
mov
aaa
clc
pushl
mov
and
pop
out
and
ljmp
sbbl
fbld
xchg
hlt
lcall
cli
push
dec
out
test
ja
imul
pop
movsl
mov
inc
push
ljmp
stos
outsl
push
add
das
and
mov
es
stos
or
sbb
push
push
addr16
fcomp
test
cmpsl
inc
cli
movsl
adc
stos
or
dec
push
sub
cmpsb
adc
xchg
jl
inc
pop
cmp
xchg
or
nop
mov
xchg
into
sbb
call
pop
std
push
clc
jae
adc
icebp
mov
mov
into
sbb
and
xor
add
xor
cmp
xchg
cli
push
mov
xor
xchg
dec
sti
imul
in
outsl
mov
fs
jg
mov
jae
cmp
incl
pushl
jl
xor
push
push
and
push
or
add
sbb
aas
outsb
pusha
xchg
and
les
dec
loope
and
xor
ljmp
adc
imul
and
jno
outsb
call
dec
push
clc
int3
jl
mov
ds
dec
test
xchg
and
dec
rcll
test
jge
incl
add
dec
adc
sbb
fidivl
push
jg
dec
dec
repz
daa
jae
mov
insb
and
jmp
lock
es
out
ret
fldcw
pop
loop
jg
inc
repz
xor
pop
and
aas
stos
loope
stos
mov
std
jmp
in
jl
inc
stos
in
add
xor
popf
js
jae
les
int3
pop
xor
call
addr16
fildl
pop
jmp
mov
out
fidivs
xor
or
push
cmp
adc
negl
jg
xchg
outsb
cld
and
incb
popa
xchg
loopne
jp
ss
in
sub
mov
cmp
pop
cld
ljmp
sub
cmc
call
jg
xlat
push
mov
add
out
test
push
mov
push
push
xorl
les
mov
xchg
mov
add
mov
adc
jmp
subb
push
adc
lock
ljmp
fidivs
int3
pop
sub
sahf
jle
add
out
rclb
decl
std
pop
hlt
push
xor
cltd
pusha
dec
ljmp
test
push
ljmp
das
xchg
cmc
gs
sbb
pop
cld
mov
in
pop
scas
lock
xor
or
mov
ja
movsl
inc
ljmp
sub
pop
outsl
xchg
addr16
mov
add
outsb
insb
mov
sub
call
sbb
sub
add
push
or
aaa
movsl
aam
enter
or
lock
push
data16
jno
adc
or
pop
call
mov
ja
mov
leave
adc
inc
dec
adc
subl
cmpsb
pop
pushf
mov
outsb
ds
push
jle
decl
mov
into
int3
mov
lret
inc
add
inc
out
lret
test
dec
out
adc
ret
test
sub
aaa
test
std
testb
frstor
dec
mov
call
cli
jnp
fcoms
inc
xor
and
or
xchg
or
cmp
add
hlt
cmpsl
sub
scas
loope
repz
das
std
mov
jl
popl
insb
arpl
cmc
cmp
int3
scas
dec
jle
in
std
jg
dec
sub
and
cmp
jge
pop
int
inc
inc
push
add
ret
lods
mov
jmp
adc
jns
add
push
add
dec
stos
rorl
dec
stos
inc
cmpsl
popa
into
inc
and
or
out
imul
push
insb
pop
call
push
call
sub
pop
push
test
jl
push
adc
fsub
pushf
in
dec
add
ljmp
pop
mov
or
incb
cwtl
es
push
imul
mov
mov
js
cltd
outsl
mov
xor
mov
cs
mov
xor
decl
inc
adc
xchg
leave
lcall
cli
int3
in
mov
or
jg
incl
pop
sub
add
pusha
test
mov
popa
incl
inc
cmp
and
fstpl
push
std
mov
mov
icebp
ficomps
call
sub
in
rolb
fs
jmp
pop
mov
pop
stc
sub
lea
popf
out
fimuls
test
ds
add
decl
das
sub
repnz
add
int3
imul
bound
rcrl
lods
insl
inc
shl
ljmp
nop
je
mov
movsl
mov
pop
inc
sub
dec
jnp
sbb
mov
ret
aaa
inc
pop
xchg
ja
sbb
clc
sbb
lock
int3
pop
jl
lods
fprem1
mov
rcr
hlt
out
mov
inc
jns
mov
sub
aaa
jns
jmp
jbe
je
shrl
imul
shll
movsl
xchg
scas
jnp
fbld
push
adc
out
mov
push
xchg
push
out
das
std
decl
pop
and
push
cmc
repnz
dec
out
pop
fwait
xchg
mov
mov
std
adc
int3
mov
cwtl
daa
in
popl
cmp
insb
pusha
in
hlt
or
pop
adcb
xor
fdivp
je
push
sbb
jg
pop
xor
push
adc
cmp
pop
and
push
mov
stc
in
push
jg
dec
dec
cmp
pushl
push
ljmp
in
lret
cltd
jb
push
push
or
imul
lcall
cs
clc
push
out
sub
xchg
lahf
mov
sbb
stos
lods
insl
xor
pop
pop
cld
jne
arpl
add
xorb
mov
cltd
pop
cli
call
sub
dec
movsb
sbb
filds
jle
aas
fs
cmc
lahf
fs
ljmp
cmp
pop
add
loopne
xor
push
or
xor
mov
jmp
int
cmc
sarl
and
pop
jg
pusha
mov
and
add
cmpsb
jl
int3
pop
std
aaa
cli
push
movsl
inc
jge
push
dec
pop
and
out
out
sub
sbb
in
mov
lret
pushl
test
inc
mov
sub
aam
push
cmp
xor
mov
ljmp
fwait
adc
pop
cmp
push
sti
pop
lods
xor
call
xor
mov
cwtl
rclb
fnstcw
xor
sarl
decl
mov
mov
rcrb
lods
cltd
fwait
int3
xor
cmp
xchg
pop
or
pop
sub
pop
out
incl
sbb
pop
or
fucomip
dec
sub
jb
call
fs
lret
add
loop
dec
faddl
push
in
mov
lods
cmp
insb
mov
ss
test
pop
clc
bound
sbb
push
cld
dec
sbb
aaa
cli
call
inc
jo
testl
and
stos
rcrl
jo
xchg
mov
cwtl
jmp
das
push
xchg
mov
add
cmp
xchg
int3
arpl
sbb
call
mov
ret
mov
leave
inc
imul
push
call
mov
mov
jle
ds
lret
out
inc
dec
jecxz
inc
ljmp
cltd
cmp
push
xor
sbbl
inc
arpl
mov
cmc
lcall
flds
mov
jno
in
fstps
daa
ret
insb
ds
and
xor
or
in
sbb
sbb
xchg
fs
leave
xchg
shrb
adcl
pop
or
call
repz
scas
arpl
xchg
stos
mov
scas
popa
or
xchg
aas
xor
outsl
cld
outsl
std
cs
inc
push
les
pop
icebp
adc
mov
mov
ret
outsb
adc
mov
jb
jns
sbb
cmp
ret
cmpsb
or
sti
nop
in
call
incl
gs
add
push
enter
push
test
or
dec
mov
add
sub
adc
mov
stos
push
mov
shr
jge
push
xor
mov
sbb
fstpl
bnd
jmp
mov
popa
aam
push
adc
ljmp
or
jp
push
stos
inc
movsl
pusha
and
call
xor
je
ljmp
je
push
xchg
mov
cld
ljmp
insb
stos
roll
movsl
push
lds
xchg
xchg
mov
adc
in
idiv
decl
add
sahf
les
cmpsl
pop
lcall
adc
insl
cmpsl
dec
xchg
cmc
cli
pushl
mov
or
jbe
push
adc
jg
outsl
pop
loop
xor
inc
xchg
lock
bound
mov
pop
add
lods
incl
mov
mov
xlat
xchg
call
pop
ficoml
int3
ja
iret
xorb
xor
jp
dec
push
pop
xchg
dec
pop
or
cmp
add
not
adc
mov
out
pop
pusha
ret
dec
into
xor
inc
sbb
lcall
mov
aas
dec
mov
cli
cltd
cmpl
sub
aad
inc
outsl
inc
dec
xchg
je
cmp
jo
xchg
ss
rcrb
xor
dec
mov
pushl
jg
sub
ret
jp
cmovs
mov
mov
cs
fucomip
lcall
test
mov
pop
test
jne
popf
dec
movsl
inc
jmp
mov
fcmovnb
xchg
addr16
testl
outsl
lock
daa
movsb
inc
dec
cmp
and
add
sbb
dec
cmpsb
xchg
sbb
jl
aad
orl
aad
xor
jno
in
cld
jg
adc
inc
xchg
dec
aas
sub
xchg
cmp
xor
sbb
call
sub
imul
mov
add
aas
mov
out
jns
mov
outsl
sti
jb
shr
insb
decl
lret
mov
mov
push
adc
js
push
ljmp
push
loop
inc
popa
pop
xorl
leave
sub
lret
cltd
mov
mov
out
sbb
mov
out
inc
fstpl
pushl
clc
fldcw
push
jge
les
shr
mov
and
xor
aam
clc
call
jb
sub
aaa
jo
aam
mov
jmp
ret
pushf
cltd
out
lock
jle
jg
fbstp
adc
and
xor
out
adc
mov
sbb
call
addr16
xchg
outsl
add
hlt
enter
aad
inc
es
jmp
push
cld
pop
pop
loopne
push
cmp
cltd
mov
loope
mov
incl
inc
mov
sbb
mulb
mov
in
sub
mov
cld
ljmp
ret
push
push
lock
push
subl
outsb
cmc
sar
lcall
nop
jmp
decb
insl
sbb
or
push
push
or
push
jmp
popa
adc
jnp
xorb
sub
pop
aas
sub
aas
cmc
lret
lret
stc
cmovns
ret
out
mov
mov
shl
cs
push
dec
xor
and
mov
aaa
mov
mov
cmp
mov
cltd
mov
mov
aaa
test
add
lods
push
add
xchg
and
pop
jle
out
jp
in
inc
loop
jl
or
mov
pop
leave
jge
loopne
or
jge
xchg
out
fdivr
jmp
sbb
aas
ret
cltd
or
add
fsubs
sbb
dec
das
daa
insl
mov
popa
lea
dec
into
sub
clc
mov
push
dec
ret
adc
pop
mov
push
orb
ss
pushl
fidivrs
mov
clc
cltd
movsb
mov
notl
sbb
incl
call
js
test
repnz
bswap
call
clc
iret
push
movsl
fistpll
repnz
pushfw
sub
rsqrtps
lcall
jmp
add
mov
pop
test
sarb
mov
jg
stos
scas
inc
or
dec
data16
mov
lods
loop
daa
adc
pop
adc
mov
mov
dec
test
inc
lret
pop
jo
lcall
sub
stos
icebp
xchg
mov
in
mov
arpl
xor
xor
mov
dec
js
pop
cli
jmp
data16
adc
push
xchg
fmulp
or
in
outsb
lret
push
decl
inc
pop
cmp
leave
sti
ret
cmp
loopne
sarb
mov
mov
pop
ljmp
lret
dec
cmp
xor
jb
dec
xchg
mov
data16
ljmp
orl
xor
fisubl
popf
aad
stos
xor
adc
push
adc
jg
cmp
jmp
jle
leave
dec
fwait
or
inc
dec
lods
inc
daa
push
enter
push
shrl
loope
jns
test
sti
xor
cld
xchg
and
das
inc
rol
arpl
xlat
fnstsw
and
cltd
jmp
xor
mov
mov
jo
xchg
mov
out
inc
js
inc
push
cmp
push
mov
or
insb
add
jmp
cmpsl
xor
dec
adc
sub
add
call
fwait
je
rolb
aam
jp
sbb
xor
mov
stos
ljmp
pushl
and
into
ds
ret
enter
push
mov
or
loop
mov
out
out
sbb
dec
jp
dec
pushf
pop
js
es
add
insb
jmp
mov
pop
cwtl
imul
rcr
movsb
jns
hlt
adc
mov
les
sbb
out
xorl
jg
jg
icebp
xchg
pop
add
cmp
adc
lahf
inc
mov
sub
icebp
cld
out
mov
mov
xchg
xlat
xchg
in
inc
lret
fcmove
lods
push
stos
dec
jnp
ret
aas
loop
mov
mov
dec
in
das
testl
xor
push
xchg
es
in
std
xchg
jmp
sub
idivb
jp
stc
pop
jb
decl
int3
jbe
aam
sbb
adc
lret
sub
jg
mov
in
xchg
push
test
jle
adc
in
sar
fucomip
mov
popa
in
call
ds
addr16
xchg
add
jno
add
pushl
pop
shr
rcl
fdivs
cmp
mov
addl
sbb
xchg
jno
mov
ljmp
loopne
pushl
add
lret
push
pop
je
adcl
sub
push
ret
decl
scas
jno
push
and
push
jl
lahf
xchg
or
scas
fwait
mov
xor
jns
dec
dec
cld
inc
popf
outsl
mov
repnz
or
push
xchg
jg
sub
pop
and
mov
xchg
in
sbb
sbb
cltd
aad
and
and
dec
std
fbstp
hlt
hlt
xchg
push
xchg
cli
shlb
fnsave
adc
repnz
cld
mov
imul
jmp
mov
lods
dec
add
or
adc
call
je
test
or
xor
and
mov
mov
les
jecxz
cmp
scas
sahf
mov
xchg
cltd
push
incl
imul
call
jmp
incb
ljmp
xor
adc
sub
iret
les
or
sar
inc
rcrb
mov
pop
push
inc
push
jge
cld
lcall
out
inc
ja
stc
push
fcomps
cmc
push
xor
insb
push
add
into
mov
sar
or
fstpl
ss
aaa
pusha
data16
pop
shl
or
jl
pop
xor
or
sub
decl
shr
fcomi
xor
and
mov
sub
jno
or
or
fildll
stc
sar
mov
idiv
es
push
mov
stos
cmc
popa
insl
inc
fimuls
xchg
mov
movsl
mov
addr16
repz
push
sbbb
adc
mov
pop
loop
call
movsb
fmull
xor
fwait
movsl
loopne
jmp
cld
mov
std
aaa
dec
addr16
cmpsl
mov
dec
rcrl
mov
jb
xchg
imul
cmc
ljmp
pop
push
cmp
mov
fs
iret
rcrb
xor
jne
lahf
loop
cli
sbb
lcall
ja
ficomps
xor
xor
lcall
adc
mov
jnp
jbe
push
popa
ja
mov
negl
fistl
imul
jg
data16
ret
push
addr16
andb
aam
lcall
mov
test
xchg
rorb
cmp
mov
ja
call
ljmp
in
pop
push
in
movsb
sub
into
cmp
call
xchg
es
incl
mov
cmp
movsb
or
xchg
repnz
mov
aas
mov
jecxz
pop
loopne
dec
lcall
sbb
mov
out
push
test
jg
mov
rcl
testl
mov
pop
mov
jmp
ljmp
push
pushf
lcall
fcomps
and
pop
test
dec
dec
jno
pop
mov
fucomip
lcall
sbb
pushf
repz
inc
xlat
pop
add
test
inc
int3
adc
roll
fdivrs
sahf
adc
mov
pop
sub
js
insb
push
mov
mov
notl
mov
jo
push
jle
movsb
mov
inc
ret
and
lcall
jge
mov
fwait
or
int3
les
jne
pushl
lods
push
mov
in
mov
mov
in
inc
andl
add
in
decl
pop
xor
mov
addl
pop
es
jg
add
in
out
sub
dec
out
nop
std
incl
hlt
aaa
iret
pop
and
fsubl
aad
ret
lret
jns
push
mov
pop
inc
lods
icebp
das
hlt
or
es
sti
dec
push
xor
insb
sar
outsl
mov
xor
jp
xchg
scas
je
mov
sbb
inc
lcall
push
dec
or
cmp
and
ljmp
addl
repnz
aam
pop
pusha
and
mov
inc
scas
imul
pushl
xlat
pop
out
imul
jne
xlat
in
fildl
push
pop
xchg
popf
sarb
dec
fstpt
loopne
lahf
out
jle
test
pop
mov
ss
and
aad
mov
adc
mov
pop
inc
inc
testl
pop
mov
add
test
decl
mov
stos
jnp
mov
mov
nop
lret
mov
pop
xchg
dec
decl
sbbb
iret
jge
adc
movsb
gs
jl
fmulp
add
icebp
add
aad
movsl
call
pop
pop
jge
fwait
mov
bound
loope
repz
cmpl
sar
pushl
test
mov
scas
sahf
xor
push
shll
xchg
sbb
xchg
sbb
in
inc
aaa
and
mov
and
xchg
std
mov
push
xchg
stc
xchg
mov
dec
sbb
pop
mov
hlt
lcall
cmp
in
push
mov
pusha
pushf
jb
inc
mov
test
inc
mov
mov
sub
test
cmpsb
xchg
mov
js
mov
int3
push
push
lods
or
fdivr
decl
daa
imul
push
mov
add
jl
lea
mov
add
jg
pop
dec
xor
fs
pop
mov
lock
mov
fcmovb
ja
mov
fdivrp
sub
pop
dec
jecxz
aad
ljmp
pop
sbb
adc
rorb
leave
cmp
sarl
in
mov
std
mov
adc
mov
jmp
push
movups
and
mov
mov
mov
xor
sbb
shr
jmp
or
std
mov
popf
mov
pop
shlb
call
incl
inc
sbb
out
rorb
or
mov
mov
loop
rol
mov
aas
lret
pop
loopne
jne
testb
cmpsl
xor
mov
push
sbb
out
push
push
out
test
pushl
repz
xchg
repz
and
xchg
mov
sbb
movsl
jns
test
mov
mov
leave
mov
pushl
xchg
or
les
subl
push
adc
lock
lret
push
decl
mov
pop
js
and
fs
cmp
xor
ljmp
out
pusha
jae
pop
push
pop
fwait
iret
push
cmp
or
aas
and
xor
sbb
outsb
faddl
mov
loope
and
lret
insb
shl
mov
jb
cwtl
jl
xor
add
and
push
sub
dec
loop
pop
dec
std
test
or
dec
stos
sub
arpl
daa
icebp
sti
mov
jmp
call
lods
dec
and
mov
xchg
outsl
inc
xor
lcall
cwtl
lahf
pushf
mov
loopne
aad
addr16
cld
cmp
enter
ret
jmp
repz
into
inc
popf
and
push
dec
fisttps
call
lcall
mov
push
cmp
and
sub
cltd
cmp
cs
lret
jo
or
lcall
in
mov
mov
scas
mov
aam
movsb
test
mov
imul
push
and
xor
call
sub
adc
scas
jg
decl
rorb
push
dec
into
push
mov
cmc
lods
add
adcb
cwtl
das
cmc
ljmp
loop
jnp
out
outsl
mov
cmp
xchg
dec
loopne
ljmp
std
push
popa
jp
insl
jecxz
mov
dec
sub
int3
call
ljmp
fsubl
sbb
or
movb
sti
movsb
push
pop
add
jg
fucomp
les
jge
mov
call
dec
loop
nop
adc
dec
dec
jns
mov
into
out
out
dec
push
call
and
not
bound
es
mov
add
inc
cli
sub
subb
test
incl
xchg
test
das
xchg
js
lock
xlat
mov
dec
push
jg
mov
mov
rclb
jnp
aaa
clc
call
cwtl
mov
leave
pop
jecxz
dec
dec
je
jle
loop
mov
pop
mov
fs
andl
ficoml
ss
push
daa
mov
fnstsw
push
xor
outsl
and
hlt
je
lea
pop
xchg
pushl
mov
insb
mov
mov
jecxz
fs
mov
call
ss
out
movsb
js
pop
xor
jns
fnstcw
int
jmp
enter
or
ljmp
add
inc
pop
sbb
outsl
xor
jae
fbld
mov
pushl
popf
outsb
inc
lods
mov
pop
push
pop
mov
add
cmp
flds
push
xor
xor
aam
jmp
mov
push
cs
add
mov
pop
mov
inc
cmpb
sbb
sti
leave
xchg
test
pop
sub
dec
pop
test
das
cld
outsl
cld
fnstcw
rorb
cmp
test
pushf
xchg
mov
pop
fcoms
loop
sub
repnz
stc
ficomps
jae
sub
xlat
xchg
pushf
iret
pop
sar
in
icebp
dec
out
mov
xlat
jle
lahf
sbb
inc
mov
xchg
jnp
xchg
push
fwait
lret
jbe
or
loope
aas
pop
inc
pop
jmp
test
ja,pn
outsl
xor
dec
pop
jbe
daa
ret
jg
ret
mov
xlat
aam
mov
cmp
mov
lea
int3
ss
mov
out
or
ret
mov
push
ficomps
insl
push
mov
pop
or
movsl
aas
pusha
cmp
cld
mov
das
sahf
cmpsl
decl
mov
pop
sub
mov
inc
pushl
xor
and
pop
and
push
adc
pop
jmp
cmp
loop
mov
cmpsl
adc
adc
imul
out
incl
pop
sub
pop
push
aas
jae
xlat
stos
pop
jp
mov
and
test
pop
mov
das
push
rorb
and
pop
lock
cltd
negb
movsb
cmpsl
stc
rcrl
mov
inc
cmp
loopne
clc
decl
scas
dec
add
jp
dec
xchg
out
dec
pop
imul
fistpll
movsb
pop
mov
sbb
leave
mul
stc
add
cmc
cmp
add
adc
ljmp
aas
out
xchg
inc
push
jb
adc
outsl
dec
lret
adc
arpl
sbb
fdivs
test
add
add
mov
jg
push
cmpsl
pop
sbb
daa
orl
push
and
pop
clc
lcall
pushl
mov
push
cld
decl
arpl
xlat
iret
cmp
ljmp
rcll
adc
cmpsl
movsl
decb
test
cli
mov
call
call
cmp
scas
push
jl
inc
mov
inc
or
mov
test
call
loop
insb
or
mov
mov
dec
fistpl
and
xchg
mov
insb
mov
mov
cmp
dec
loope
lret
insl
lock
mov
mov
jb
xchg
imul
stc
popf
out
jb
push
cli
dec
jg
ret
add
fsts
and
jge
scas
inc
jns
and
or
and
insl
or
popf
movsl
dec
in
mov
push
push
jae
xorb
mov
or
cmpsl
sub
jmp
lcall
sbb
xchg
or
jmp
test
sub
add
pop
addr16
mov
and
or
mov
fnstsw
mov
aam
ss
add
mov
incl
pop
jecxz
imul
mov
add
data16
jg
repz
fcompl
cmpsb
fcompl
mov
mov
loopne
jmp
imul
jmp
mov
adc
and
movsl
cmpb
mov
test
scas
xchg
iret
push
push
test
jno
fisttpl
fwait
cmpb
popf
ja
or
mov
pop
adc
sbb
xor
shrl
sarl
mov
cli
push
call
ret
mov
cmpsl
push
fildll
lahf
imul
cmp
int
add
cld
jp
lret
push
out
push
ljmp
sti
call
cmp
or
in
mov
clc
shr
xchg
sub
pop
repnz
daa
adc
xorl
loopne
and
insl
xor
andl
adc
xchg
out
sub
add
imul
push
xor
inc
mov
das
test
pop
movzbl
in
push
xchg
mov
pop
pop
jmp
ljmp
test
mov
xor
xchg
lcall
loop
iret
pxor
dec
jns
pop
std
pop
or
cmp
sbb
xor
dec
outsl
icebp
push
xor
sub
test
xor
sbb
jecxz
dec
fst
fdiv
sar
dec
push
push
jle
test
lret
mov
push
mov
fsave
or
aaa
mov
cmpsl
sub
jne
xor
mov
je
xor
std
sub
shll
repz
mov
or
mov
mov
call
test
mov
ss
ss
pop
incl
inc
fisubs
xor
jle
and
mov
pushl
push
or
push
aad
mov
call
sub
sub
pop
nop
inc
stos
mov
adcb
dec
xchg
jle
cmpsl
js
cs
fdivr
pushl
jns
ret
sbb
stos
push
testb
std
scas
add
and
dec
sub
into
sub
jp
call
daa
cmp
or
push
fldcw
filds
cmp
inc
and
add
push
xchg
arpl
sar
or
cmp
rcrb
pop
mov
and
xchg
fsubs
stos
mov
insb
lods
adc
fwait
mov
dec
jno
stos
dec
or
jg
ljmp
imul
xor
rclb
push
cld
mov
inc
ret
sbb
xor
or
das
mov
dec
xchg
addr16
je
insb
mov
das
cld
pop
or
sbb
or
push
outsb
cmpsb
popf
jl
mov
add
aam
test
pcmpgtb
pop
dec
xlat
mov
mov
cmp
jge
mov
mov
out
ret
or
jl
stos
mov
out
jecxz
push
cs
aaa
lods
jmp
in
cmp
clc
sbb
sub
imul
std
jg
dec
mov
pop
cltd
fiaddl
in
rolb
imull
mov
xchg
sbb
stos
incl
jns
ret
adc
adc
xchg
xchg
cli
pop
ljmp
jmp
xchg
mov
cmpsb
dec
mov
insl
cltd
add
cltd
ret
in
notl
push
mov
fistl
cmp
aam
pop
xchg
loopne
mov
jecxz
lcall
cld
fwait
jns
dec
mov
addr16
mov
pop
out
daa
jl
jmp
cmp
dec
repz
popl
stos
xor
test
push
pop
loopne
jmp
xchg
shl
push
xchg
inc
fsub
in
inc
loop
push
lock
adc
test
cmp
mov
ljmp
pushf
loopne
add
or
rorl
aas
mov
sub
rcrb
xchg
test
mov
clc
jg
imul
subl
lea
and
cmpsb
dec
call
and
xchg
jo
lods
cmp
pop
cld
int
jg
xchg
sub
sub
dec
into
insb
pop
cmc
ss
ljmp
or
insb
out
cmpsl
ss
mov
iret
push
sbb
shlb
sub
ljmp
into
mov
jl
hlt
in
into
xchg
pop
fildl
test
jae
icebp
push
stc
mov
sub
mov
mov
jmp
test
sbb
cmp
pop
inc
push
or
or
icebp
pushl
add
xor
fwait
push
popf
les
dec
pop
xchg
in
ret
das
icebp
push
lods
lret
xorb
ljmp
adc
mov
cli
push
daa
popa
adc
mov
decl
xchg
leave
int3
push
xor
lods
xchg
jb
int
lods
jecxz
hlt
adc
leave
push
outsb
cmc
call
mov
cmpsb
inc
pop
and
push
cmp
rclb
ljmp
test
lock
add
sub
pop
fs
pop
sub
fcos
decl
sbb
fdivl
call
adc
jne
jg
test
mov
mov
call
add
addr16
notb
adc
popf
stc
and
scas
stos
stc
test
cld
mov
shr
jge
repz
xor
mov
js
andb
sub
int
mov
pop
mov
mov
mov
int3
mov
sub
xor
and
clc
sbb
insb
mov
sbb
mov
or
push
shr
pop
cmpsb
inc
in
hlt
mov
mov
pushl
dec
rcll
out
addr16
sbb
ficoml
pusha
addr16
repnz
dec
sahf
in
imul
lcall
imul
test
fadds
push
push
mov
dec
or
fildl
dec
push
andb
stos
into
inc
pop
add
test
add
jmp
daa
xchg
popa
dec
lea
pop
sub
push
push
jmp
sub
je
or
push
mov
loopne
jle
testb
push
jp
jmp
pop
mov
dec
out
inc
push
cld
jg
sub
addr16
dec
std
inc
call
arpl
int
aas
xchg
bound
jecxz,pn
mov
outsl
inc
add
and
xor
xchg
mov
lcall
cmp
shlb
not
push
mov
pop
pop
fsubp
add
ljmp
jmp
call
pop
push
daa
ret
push
mov
out
and
jg
rolb
negb
out
mov
lock
push
ljmp
mov
add
ds
push
adc
inc
jmp
hlt
decl
out
cmp
pusha
inc
out
pop
loopne
out
faddl
lcall
outsb
inc
push
or
pushf
and
inc
dec
clc
movsb
mov
popf
movsl
mov
mov
push
out
xlat
or
inc
pop
xor
lcall
pop
and
xchg
sub
aas
jmp
in
push
and
mov
mov
push
test
in
inc
and
dec
or
jbe
fs
scas
cmc
mov
mov
jle
stos
mov
clc
fchs
sub
lcall
lcall
inc
sbb
gs
dec
xor
pusha
loop
jo
call
push
xlat
ss
add
arpl
mull
push
je
jl
and
clc
xchg
clc
incl
adc
outsb
cmpsl
add
add
mov
inc
or
lcall
insl
rcl
ds
jnp
imul
xchg
ret
lock
jnp
push
rcr
loope
cmp
pusha
mov
xor
pop
out
cli
adc
arpl
or
push
std
jg
mov
jp
call
int
orb
cli
call
outsb
jns
mov
nop
in
dec
add
decl
gs
or
xchg
cs
lods
lcall
and
jbe
dec
dec
ret
lock
lock
call
adc
and
xor
ret
inc
shl
jp
pop
std
decl
rcrb
pop
cmpb
std
in
lret
xchg
push
xchg
or
push
add
jge
xchg
inc
jg
das
sbb
dec
les
repnz
push
mov
pusha
jne
and
hlt
add
loopne
mov
jbe
and
dec
aam
fbld
xor
pop
test
int
jl
mov
pop
adc
dec
jbe
cli
in
mov
push
pop
dec
and
cmp
inc
inc
into
into
lcall
or
pop
sub
mov
pop
insb
sbb
or
fwait
push
ljmp
adc
mov
daa
push
ja
test
pushl
lahf
sbb
jne
push
cmpsl
mov
fnstenv
aaa
sub
jmp
cmp
cmpsb
mov
sbb
in
and
cmp
pop
mov
insb
bound
adc
ljmp
push
repz
loope
ja
pop
cltd
or
nop
push
xchg
stc
lock
or
pushl
pop
sbb
push
dec
lods
stc
xor
insl
shl
ja
or
jg
call
inc
pop
gs
nop
sub
cltd
dec
sub
jae
imul
loop
jmp
mov
insb
fimull
xlat
and
fsubr
push
and
test
fwait
outsb
aam
pushl
inc
icebp
mov
stos
adc
test
scas
mov
test
decl
mov
inc
xchg
mov
movsl
jb
sub
xor
adc
jmp
dec
scas
fidivl
sub
mov
pop
mov
cld
pop
cmpsl
mov
mov
lret
jp
insb
pop
cli
cmp
imul
lock
sbb
mov
inc
and
outsl
hlt
fidivl
mov
jns
les
dec
cmpl
xchg
sub
jae
jmp
addr16
xchg
jae
cmovo
push
fisubs
iret
pop
xchg
insl
roll
out
insl
rcl
ljmp
rcl
push
cmpsb
dec
cmp
xchg
dec
adc
or
lods
dec
add
dec
out
outsb
add
mov
incl
sub
adc
stos
adc
cmpl
pop
mov
ffreep
xchg
mov
sbb
add
repnz
inc
out
dec
pop
cli
mov
out
lret
scas
mov
dec
jne
adc
dec
or
dec
int
jecxz
mov
push
mov
fisttpll
dec
pop
inc
stos
pop
add
stos
das
gs
pop
and
dec
mov
or
jmp
test
mov
das
add
jle
mov
insb
dec
jne
aam
insl
adc
pushl
pop
inc
mov
sbbb
test
fsubrs
xchg
mov
stc
ds
fidivrl
push
aas
iret
cmp
cmp
jg
fcom
negb
pop
fisubs
movsl
pop
aaa
ss
xchg
pop
rcrb
mov
clc
cmp
shrl
mov
in
xlat
adc
shll
bswap
data16
bound
fs
cmc
ss
jecxz
jp
je
bswap
incl
mov
cltd
stos
dec
clc
iret
pushl
insb
sub
in
jle
mov
or
mov
jmp
cld
nop
jp
in
jmp
lock
dec
xor
pusha
clc
mov
in
cltd
movsl
sbb
lea
inc
cmc
lcall
movsl
lahf
das
push
rcll
test
incl
or
stc
cmc
mov
ljmp
fstl
test
inc
pushl
jecxz
movsb
in
mov
aam
dec
xlat
out
stc
lcall
cmpsb
out
push
adc
adc
xlat
xchg
jl
push
mov
push
mov
jp
shl
pop
sbb
jmp
mov
mov
icebp
jbe
pop
test
cmc
mov
shll
xor
movsb
xchg
aam
loope
pop
cmpsb
clc
cmp
ljmp
mov
sarl
push
jb,pt
pop
leave
andl
cmp
fbstp
ljmp
inc
dec
arpl
out
pusha
sbb
ds
cmp
dec
or
cltd
daa
add
cmc
lcall
or
dec
pop
jle
adcb
adc
dec
out
cmpsl
rol
das
mov
dec
js
hlt
cwtl
jae
push
shrb
xchg
popf
sbb
dec
jmp
jmp
icebp
fimull
fdivrl
nop
ja
jnp
dec
push
mov
mov
lock
cmp
movsl
ror
dec
incl
lods
or
shll
add
aas
pop
push
lcall
or
jg
or
jns
lcall
lea
insb
and
testb
fwait
cmp
adc
mov
in
in
sbb
pop
clc
xchg
cli
sbb
test
mov
adc
mov
jnp
cmp
jmp
in
adcl
nop
sub
int3
or
popa
and
mov
paddsb
pop
test
sub
shlb
movsl
or
mov
mov
mov
mov
sub
call
push
cmp
push
test
int3
and
mov
dec
jmp
pop
cmp
fwait
orb
cmpsl
test
fsubr
call
mov
hlt
sbb
clc
add
out
and
inc
pushl
adc
outsb
rclb
jecxz
aad
mov
loop
mov
daa
or
punpckhbw
jg
cmc
mov
fnstenv
push
add
test
mov
pop
in
xchg
dec
lock
das
xchg
dec
or
mov
enter
cmp
push
arpl
cmp
pop
in
cmp
xor
hlt
sub
imul
div
push
adc
std
int3
xor
orb
stos
mov
dec
int3
ret
mov
push
out
mov
sub
test
xor
imul
xor
mov
test
jmp
imul
aas
sbb
mov
sbb
mov
incl
xchg
dec
fnstcw
shl
gs
incl
sub
cld
iret
outsb
xor
daa
push
inc
mov
fiadds
lret
mov
loop
dec
xchg
push
xor
and
icebp
decl
popf
add
mov
push
imul
pop
call
imul
or
jae
clc
add
test
subb
cmpsb
js
repz
cmp
jmp
sub
lods
imul
fimuls
xchg
idivl
inc
mov
mov
or
ljmp
jge
mov
out
sbb
lods
insl
andb
sub
jbe
mov
ljmp
scas
cmpsb
fstpt
fidivrs
add
inc
lcall
pop
add
fucomip
test
sbbl
dec
dec
sub
mov
jecxz
icebp
std
or
fists
mov
dec
arpl
pop
pop
mov
outsl
add
test
bound
into
cltd
mov
aad
mov
mov
push
mov
stos
xor
nop
fs
or
mov
pushl
xorb
sbb
mov
shll
js
aaa
adc
test
lret
mov
jmp
in
pusha
fcoms
das
test
mov
adc
add
mov
pop
mov
mov
push
jo
xor
fs
outsl
lock
push
mov
mov
inc
jnp
mov
das
jmp
outsl
sbb
in
into
outsl
push
adc
sti
sbb
mov
fnstsw
jne
sub
scas
das
roll
sub
inc
mov
jg
pop
inc
push
dec
pushf
jle
fcos
or
xchg
dec
xorb
data16
fcoml
in
out
jnp
test
xchg
outsb
pop
add
imul
sbb
mov
xor
dec
enter
dec
or
inc
jg
stc
sub
pop
jle
and
pop
mov
cmp
push
call
inc
jmp
mov
repz
ljmp
sbb
nop
mov
out
clc
fwait
rolb
js
loopne
and
inc
cmp
mov
jl
test
stos
int
or
mov
test
adc
jge
sahf
lahf
mov
cmp
xor
push
incl
fwait
sbb
pop
pop
loop
xlat
ret
sub
mov
fldt
xor
arpl
push
jno
and
xor
ljmp
hlt
iret
or
cmp
sub
push
mov
int3
sti
in
int3
pushl
sub
add
cwtl
xchg
push
cmp
jno
jl
test
sbb
popf
push
in
lret
fmuls
and
fadd
in
push
adc
mov
pop
sbbb
outsb
movl
call
rcl
push
sub
mov
pushl
clc
adc
mov
xorl
or
xchg
add
sbb
pushf
je
negl
push
jg
jge
icebp
test
jbe
data16
or
jbe
fists
sbb
call
mov
pop
add
sub
and
fimuls
add
and
jno
dec
dec
test
incl
mov
or
js
cmp
popa
outsl
std
jmp
add
fsubs
fdivs
out
or
clc
outsb
mov
pop
test
fdivrp
xor
pushf
inc
or
incl
cli
or
out
pop
pushf
mov
adc
dec
imul
xchg
ljmp
iret
sti
imul
jbe
cmp
sbbl
dec
icebp
pextrw
jmp
mov
std
cld
popf
popa
mov
aam
lods
mov
adcl
sub
jp
ljmp
mov
pop
shr
cmpb
scas
fiadds
cmp
int3
or
scas
sbb
std
jmp
and
dec
test
sub
mov
xchg
decl
cli
xor
mov
lcall
outsl
adc
jne
xchg
mov
mov
pop
jl
sar
jmp
mov
xchg
test
pop
push
mov
popf
sarb
fwait
sti
jl
sub
call
test
xchg
lret
mov
imull
add
fs
inc
sarl
sbb
movsl
repz
add
mov
jae
out
lods
movsb
mov
mov
or
jg
shlb
push
mov
adc
jmp
test
adc
adc
dec
pop
ret
dec
jp
or
adc
inc
jg
ljmp
sbb
jb
sub
add
std
pop
cld
ljmp
cmp
mov
inc
aam
pop
push
int3
addr16
jp
mov
rcrl
pop
pop
pop
push
mov
lret
call
test
lcall
leave
fdivrl
mov
xor
cltd
xchg
cltd
lea
ljmp
mov
mov
scas
in
pop
testl
dec
mov
pusha
push
scas
std
cmc
dec
repz
mov
or
jg
lea
push
sbb
stos
and
inc
and
pop
pop
ljmp
cmc
cltd
push
jecxz
insb
xchg
cli
ljmp
rclb
sbb
rorl
pop
loopne
in
pop
test
and
push
jb
sbb
call
adc
mov
jbe
imul
aam
jae
std
ret
and
int3
push
cmp
cmp
aaa
push
loopne
call
or
fwait
mov
mov
std
push
scas
inc
nop
fnsave
jae
adc
ljmp
mov
stos
add
fnstsw
fs
rorb
fildll
pop
in
lods
hlt
jecxz
imul
jns
mov
decl
push
call
ja
push
jp
cmp
xor
arpl
mov
jmp
or
mov
ss
sbb
pop
adc
jg
pop
fiaddl
sbb
nop
fiaddl
jmp
jmp
es
or
incl
sbb
pop
add
xchg
cld
xchg
lods
or
stos
cmp
cmp
pop
inc
push
lea
or
jo
repz
mov
cmpsb
pushl
rorb
or
in
aaa
add
dec
mov
cli
sbb
cmp
loopne
andl
stos
mov
leave
sub
sysexit
mov
mul
xor
mov
std
fnstsw
repnz
cmp
pop
in
popf
aas
fdivrl
es
movsl
jg
dec
cld
jmp
sti
mov
in
shrb
lahf
inc
je
aad
shrb
fucomip
cld
add
push
das
lcall
jg
sahf
cld
sub
and
incl
add
cmc
loopne
add
je
decl
clc
pushf
xchg
mov
push
std
cltd
xor
pop
test
ret
mov
outsl
sahf
subl
adc
int
xchg
lcall
jl
add
fldt
and
ljmp
mov
stos
testb
jmp
xchg
or
dec
cli
or
lea
scas
pop
or
jmp
in
je
icebp
test
inc
das
cmp
call
cmp
data16
dec
jmp
ds
push
pop
jno
call
add
and
mov
push
inc
notb
fidivs
arpl
decl
jecxz
pop
and
repz
addl
mov
xbegin
xchg
ret
sub
in
xor
pushf
adcl
sarl
mov
xor
sbb
scas
mov
fildll
jg
jmp
mov
cwtl
xlat
mov
call
enter
cld
mov
dec
stos
ret
mov
rcrb
pop
insl
cmpsb
jmp
lds
incl
jle
push
inc
arpl
push
mov
aam
push
pop
aas
cmp
fnstsw
out
jne
shlb
add
xchg
mov
movsb
and
push
and
cltd
push
jns
int3
gs
mov
fldl
imul
sbb
lds
ds
mov
jnp
inc
sbb
insb
add
in
clc
push
dec
test
lcall
popf
fs
mov
jp
jnp
out
shlb
jae
inc
ljmp
add
pushf
push
or
lret
xchg
pop
jmp
jg
fs
lea
leave
sub
test
sbb
les
arpl
dec
xchg
outsl
icebp
pop
in
adc
imul
mov
dec
and
call
jae
xor
les
or
xor
inc
rcl
inc
loop
call
in
shlb
hlt
and
scas
add
push
lahf
cmpl
inc
shll
add
push
pop
ljmp
shl
std
clc
test
in
mov
das
cmc
loope
movzbl
dec
adc
pop
jmp
inc
and
push
sbb
lcall
in
add
daa
shll
out
add
jmp
incl
fdivrp
lods
addl
ds
cmp
cs
test
push
pop
bound
add
popa
mov
cmp
std
decl
mov
scas
xchg
xor
not
xchg
lcall
int3
sbb
test
std
jl
mov
push
inc
lods
mov
jmp
push
inc
aam
or
dec
aas
add
sahf
jmp
mov
push
fs
lcall
push
mov
imull
push
sarb
xor
lds
es
cli
call
int3
dec
cmp
fimuls
add
imul
pop
dec
aad
pop
jg
pushl
jg
call
out
fsubrs
and
jnp
jl
sbb
pop
push
jecxz
and
das
cwtl
jle
ljmp
shrl
inc
adc
arpl
and
pop
add
loop
ret
stos
shlb
fldcw
mov
xlat
jl
pop
roll
test
fwait
inc
movsb
inc
iret
icebp
adc
in
mov
inc
test
aaa
lds
push
ror
repz
decl
mov
jecxz
jo
adc
sub
arpl
ljmp
cmp
shl
repz
push
cltd
addr16
hlt
incl
cmpsb
jbe
push
pushf
mov
stos
stos
xor
mov
pushl
sub
dec
push
push
cwtl
and
lcall
push
cli
in
jecxz
xchg
cli
pop
call
out
xor
adc
or
pop
pop
jl
inc
call
xor
sbb
loope
cmpsl
fdivrp
mov
ljmp
aas
mov
push
daa
jge
xor
sbb
jns
test
outsl
std
ljmp
in
pop
ret
stc
movsl
push
adcl
mov
xchg
jnp
mov
loopne
push
sarb
sub
mov
adc
jecxz
mov
pop
clc
fistpl
dec
ja
sbb
mov
mov
popl
repz
movsb
pusha
jo
xor
sbb
jl
and
decl
xor
out
jno
fisubl
mov
fadds
sti
push
push
std
mov
lret
imul
sub
push
mov
mov
js
movsl
pop
jg
imul
adc
adc
or
and
idiv
mov
in
fadds
int3
insl
inc
add
test
dec
or
cld
pushl
xchg
xchg
sub
xlat
or
unpckhps
sti
roll
rcrb
incl
pop
icebp
inc
cltd
cli
std
pop
jns
shrb
and
jbe
sbbb
cmp
sub
ljmp
jmp
inc
xor
repnz
lods
dec
sahf
mov
outsb
xor
clc
nop
fistpll
and
lock
adc
fisttps
je
clc
inc
mov
push
lcall
add
lods
mov
adc
push
jnp
xchg
xor
in
xor
decl
insl
xchg
mov
mov
sbb
subb
sbb
int
mov
cmpsb
pop
loopne
jmp
popf
hlt
pop
cli
lcall
xchg
movsl
inc
fsubl
fdivrs
xor
mov
in
inc
jg
cs
outsl
xor
bound
mov
loopne
sbb
mov
mov
mov
in
cld
xchg
in
xchg
ljmp
decl
dec
out
lds
cmp
mov
inc
add
cmp
jl
cmc
aas
lea
ljmp
rorl
inc
lds
icebp
adc
mov
cmc
das
mov
jbe
lret
push
divl
int
jl
push
mov
js
out
movsl
je
pop
cltd
ss
shrb
cs
lcall
stc
xchg
mov
and
aas
ja
adc
jmp
jl
add
sub
shlb
jmp
sub
mov
pop
sbb
movsb
cmpb
push
pop
and
mov
push
movsb
dec
stos
pop
sub
jmp
ljmp
push
imull
cwtl
jne
in
scas
rolb
leave
mov
shl
jne
lcall
icebp
dec
fstpt
lret
jno
sub
jae
xchg
sti
fadds
cmc
hlt
outsb
sub
and
outsl
rcrb
mov
movsb
sbb
call
jle
mov
sbb
jo
lods
mov
cmp
dec
sar
inc
mov
sti
ret
cld
sbbl
call
incl
icebp
jb
jle
adc
pusha
fnstsw
sub
aad
stos
enter
das
pop
movsl
das
call
add
mov
test
mov
out
mov
stos
mov
sub
fucomip
add
in
lods
sbb
or
jl
push
jbe
leave
shr
mov
lock
add
dec
push
sbb
flds
pop
jbe
pop
movsb
dec
xor
int3
jp
jle
push
inc
or
pop
lock
push
dec
push
add
mov
decl
ss
or
jb
orb
push
or
aaa
cld
push
mov
iret
cli
outsl
call
xchg
outsb
mov
pushf
decl
push
pop
xor
mov
in
xor
add
or
add
repnz
push
xchg
add
test
into
cld
decl
adc
into
enter
jns
adc
in
mov
lcall
in
sbb
add
lods
inc
test
dec
jl
inc
push
jl
mov
jb
cmc
call
pop
inc
scas
ds
push
ljmp
pop
loop
incl
push
cmc
add
test
and
inc
call
in
ror
rcrl
imul
pop
pop
test
adc
inc
sub
popa
aaa
inc
dec
sub
jp
mov
into
adc
lcall
addr16
mov
xchg
cwtl
in
loopne
inc
mov
xor
fcoms
sbb
movsl
std
arpl
enter
pop
jns
mov
mov
inc
in
sahf
dec
scas
add
pop
in
movsb
add
inc
in
or
in
decl
inc
lahf
movsb
repnz
jae
push
cmpsb
push
cmpsb
push
lret
test
aas
mov
test
inc
insl
push
push
pop
sti
cld
mov
iret
hlt
add
loopne
jg
push
cmp
stos
mov
add
sahf
sub
ljmp
jmp
mov
mov
pop
pop
jge
sbb
pop
or
insb
ret
and
inc
pop
pop
pushf
jno
fidivl
add
cmp
test
mov
lock
das
std
decl
into
movsb
sbb
fstpt
rcrb
fcoml
cld
dec
sub
ds
rclb
mov
out
ds
sbb
iret
call
incl
lds
movsl
inc
or
mov
lods
shlb
sahf
aam
pushl
orl
mov
cmp
aas
mov
xchg
sub
lcall
shlb
fildll
push
push
add
ljmp
jmp
inc
jmp
jmp
pop
int
insb
test
pop
xor
or
xlat
push
sub
fdivrs
rclb
xor
sub
leave
popa
mov
mov
adc
mov
add
sbb
mov
sahf
pop
fnstcw
not
aaa
aaa
mov
out
enter
outsl
mov
cmp
push
sbb
daa
repz
test
and
pop
ds
jg
ds
cmp
movsl
pop
stos
push
dec
scas
sbb
sub
inc
sti
stos
push
jl
pop
arpl
in
xchg
rorl
call
jecxz
mov
nop
xchg
adc
and
xchg
les
xor
std
subl
mov
cmp
sbbb
pop
lahf
mov
loopne
call
loope
xchg
jne
adc
les
or
fistpll
and
adc
jne
inc
jg
insb
outsb
mov
or
inc
sub
adc
sub
popl
sbb
pop
add
jmp
loopne
dec
cmp
mov
aad
add
decl
cwtl
xor
in
addl
pop
push
jl
and
out
pop
inc
mov
cmpl
jae
push
pop
sar
test
jg
movsb
fadd
jmp
jecxz
ljmp
push
clc
in
mov
repnz
pop
mov
or
jmp
stc
stos
xchg
ficoms
jl
aam
mov
push
push
ja
aam
sub
push
pop
into
xchg
sub
pop
ficoms
mov
jecxz
fadds
es
push
add
incl
clc
ds
inc
inc
cwtl
out
pop
jge
arpl
push
push
mov
lahf
loope
pop
push
cmc
jmp
and
hlt
inc
jno
insl
cwtl
das
std
inc
push
shrl
or
orb
cld
stos
and
call
cmp
lahf
mov
cmp
js
jg
jg
mov
ret
lret
add
lcall
dec
add
pushl
cld
call
or
push
shr
bt
xchg
fsubrl
btr
call
into
push
stc
loopne
dec
mov
inc
pop
mov
ficompl
imul
mov
pop
mov
pop
int3
nop
fsts
and
gs
jl
sbb
push
jle
lods
hlt
decl
or
sub
fdiv
ret
pop
iret
pop
in
xchg
jge
sub
rcll
cs
adc
mov
jbe
jp
packuswb
icebp
mov
mov
push
dec
dec
pushf
mov
xor
lds
xchg
fnstsw
ljmp
movsb
jo
dec
ret
in
mov
add
mov
sbb
fbld
loopne
and
ja
mov
jmp
outsl
aaa
call
hlt
pop
xor
ficoml
push
push
imul
push
lcall
js
inc
sbb
mov
dec
in
daa
push
sbb
mov
jbe
add
ljmp
ds
xchg
lcall
cld
or
jo
nop
adc
sub
frstor
movsb
and
or
incl
in
inc
xor
add
jns
into
or
enter
cs
les
pop
mov
lret
sbb
sbb
push
jmp
aaa
vpperm
flds
popf
shlb
xor
lcall
push
sahf
int3
sub
cmpsb
lret
adc
xchg
push
icebp
int
jnp
movsb
repz
shl
enter
ljmp
sub
fidivrs
sarw
inc
test
cltd
stos
pop
add
xchg
lods
inc
ss
sbb
aaa
clc
test
add
inc
rorl
and
mov
decl
out
mov
mov
outsl
push
cmp
insl
jb
rcll
adc
mov
leave
ljmp
adc
vpmulhw
in
fnclex
push
push
rcrl
testb
jae
fistpll
mov
xchg
lahf
jae
pop
fmull
push
mov
dec
xor
fcmovnu
call
nop
mov
cmp
xor
icebp
icebp
push
mov
stc
cmp
push
imul
mov
sub
lcall
push
out
push
xchg
or
cmp
in
stos
fucomip
add
loope
jg
js
out
cwtl
inc
add
xchg
test
add
dec
ds
dec
ret
xor
decl
std
mov
jo
or
sub
and
lods
arpl
das
imul
adc
cmpsb
xor
lret
mov
insb
lds
pop
sbb
adc
xlat
ljmp
or
mov
aad
popa
gs
inc
xchg
inc
sbb
pop
aaa
clc
fistl
pop
or
mov
jae
jne
mov
sbbb
adc
popa
shll
add
dec
movsl
nop
sbb
mov
adc
pop
out
les
adcb
sub
or
ljmp
pop
loope
inc
push
filds
ljmp
sub
mov
ss
decl
xchg
ret
cmp
jne
push
ret
cltd
lcall
ljmp
rorb
push
and
sub
mov
insl
lods
outsl
cmc
call
out
pop
stos
or
push
aas
push
xchg
fs
pop
in
fcmovne
add
pop
mov
mov
xor
pop
adc
dec
jmp
in
sti
dec
call
add
push
cmp
xor
mov
pushl
adc
out
shr
repz
pop
stc
mov
shlb
add
test
push
inc
mov
pop
xor
test
lahf
and
xlat
jbe
xchg
and
xor
incl
les
push
xorl
addl
call
shl
lcall
imul
or
xor
test
inc
dec
inc
adc
mov
out
and
push
ds
lea
imul
sbb
in
loope
inc
sub
inc
push
mov
mov
push
mov
int
clc
insb
aaa
outsl
hlt
cmp
jp
movsl
inc
adc
inc
mov
decl
pop
xchg
and
mov
incl
mov
sahf
cld
loopne
jp
loope
mov
pushl
jg,pt
mov
aam
jl
fwait
out
push
ret
jno
mov
xchg
adc
dec
dec
pushl
ja
cld
xor
mov
mov
push
mov
cmp
test
outsb
das
icebp
lcall
dec
xchg
cmpsb
jmp
push
and
mov
and
popa
in
nop
das
and
lea
aas
xor
jle
imul
add
into
mov
dec
sub
mov
inc
mov
loope
jecxz
push
insl
pop
jno
out
cmp
jns
aam
xchg
xchg
add
shrb
es
push
push
lock
adc
mov
inc
pop
cmp
cmp
xor
and
sbb
mov
cmpb
mov
loope
or
inc
push
xchg
fwait
mov
lock
ljmp
popa
pop
push
push
cmpsl
and
mov
xor
sar
int3
hlt
imul
ja
mov
mov
sub
mov
test
pop
and
int3
lock
pop
inc
push
iret
fcoms
outsl
cld
mov
imul
pop
in
mov
push
xor
add
insb
xchg
and
sub
lds
cld
mov
or
mov
push
mov
test
or
fwait
mov
xchg
jg
clc
xor
ss
in
sub
das
pop
lds
adc
sub
mov
dec
cld
in
and
adc
mov
mov
ss
jo
das
hlt
ljmp
js
xchg
push
mov
outsb
inc
stos
jmp
shll
call
mov
lods
and
sub
dec
adc
mov
in
jg
jg
lds
inc
inc
aas
sbb
add
insl
sub
cs
xchg
sbb
out
add
jg
test
jb
lret
mov
ret
dec
mov
ljmp
popa
push
sub
mov
adc
scas
mov
push
and
fbld
lahf
mov
clc
adc
clc
cmp
out
mov
loopne
push
mov
lcall
decl
das
cmp
icebp
jecxz
mov
adc
fscale
jmp
xchg
mov
and
int
push
jnp
rcr
sub
inc
mov
call
xor
in
push
repnz
push
push
xchg
lret
movsb
test
pop
cmp
cmpsl
push
xor
fcom
jl
jg
rorl
inc
aad
xchg
jae
sbb
out
xor
imul
and
out
insl
jg
jb
out
mov
dec
loope
mov
fcmovu
push
mov
std
push
push
pop
stos
aaa
clc
call
into
cmp
hlt
sti
adc
push
mov
pop
cmpsb
lock
decl
rolb
rcr
mov
push
add
inc
sahf
xor
mov
dec
sbb
mov
ljmp
cmpsb
aas
test
sahf
lea
mov
and
into
cmp
call
pop
or
lock
adcb
mov
js
xchg
js
loop
pushl
add
bound
das
xor
or
neg
sub
sahf
scas
cmp
sbb
and
imul
ljmp
sbb
xor
ror
or
or
mov
ret
pop
sub
stos
rcr
js
pushl
and
xchg
dec
lcall
pop
stc
and
adc
scas
push
mov
dec
xor
push
cltd
rcll
ror
repnz
cmp
inc
adc
or
dec
or
push
or
sti
inc
inc
call
and
jle
add
rol
cmc
lcall
aaa
xchg
jle
lret
mov
ds
mov
call
add
orb
add
mov
add
idivb
pop
push
incl
cmp
cmp
mov
inc
lret
lods
xchg
aam
mov
fiadds
jmp
and
push
call
jmp
mov
subb
inc
repnz
add
push
dec
sub
mov
fidivs
jbe
sti
inc
mov
xchg
xchg
fildll
or
arpl
jb
mov
je
push
add
inc
out
jg
rcrb
call
repz
pop
and
movsb
mov
add
jg
push
push
push
adc
jbe
lahf
addl
pop
pusha
aam
popa
decl
xchg
fwait
cwtl
pop
cmc
mov
sbb
jne
inc
mov
gs
lock
cmp
jae
sbb
mov
pop
sub
enter
incl
incl
pop
sub
cmpsl
and
xor
add
mov
jmp
cwtl
and
pusha
stos
je
and
pop
inc
cmp
xchg
pop
nop
out
and
pushl
mov
adc
fldl
out
aas
lret
sahf
inc
neg
xor
sbb
fs
adc
incl
cmp
pop
dec
lret
xchg
ds
adc
cmc
mov
fldt
iret
sub
pushf
out
ljmp
fidivrl
movsl
js
mov
mov
loope
fdivs
sbb
fsubrl
je
loope
outsl
icebp
out
and
ret
repz
adc
cmp
decl
stos
fldl
pushf
popa
loopne
add
lcall
and
lret
push
clc
pop
xor
les
iret
adc
mov
jae
xchg
lret
fstpl
jbe
mov
enter
cld
pop
inc
or
popa
xchg
nop
inc
cld
mov
inc
or
cli
push
mov
sbb
icebp
pop
ljmp
das
push
mov
sar
inc
clc
andl
lods
shlb
xchg
cltd
xor
push
add
cmp
in
sbb
sbb
pop
cmpsb
mov
mov
push
in
mov
stc
lods
mov
adc
cltd
fisubl
decl
push
pop
int
xor
mov
notl
mov
mov
and
ret
pusha
or
mov
in
pushl
cli
mov
add
sar
add
pusha
xchg
xor
pop
sub
dec
pushf
imul
rol
dec
roll
mov
fucomip
jae
decl
mov
mov
or
das
call
popf
xor
mov
imul
arpl
inc
sbb
imul
jg
push
lret
xchg
movsl
bnd
mov
jmp
sub
aad
dec
and
xchg
mov
jb
xchg
pop
sub
pushf
rcr
std
ljmp
push
sub
jne
loope
cmpsl
out
pop
mov
mov
pop
popf
js
decl
test
xor
jb
mov
fisttpl
cmc
mov
sub
add
mov
add
mov
sahf
in
imul
shll
bound
insb
or
lock
in
pop
mov
and
stc
leave
xor
push
xlat
inc
mov
pushl
cmp
inc
inc
into
lret
pop
mov
call
loopne
or
notb
cmp
incl
sbb
jo
dec
lret
test
add
pminub
pop
decb
cli
mov
je
cli
inc
dec
xor
push
movsb
adc
fyl2xp1
jbe
ljmp
inc
addr16
stos
aaa
xor
mov
pop
leave
pusha
mov
aad
ficomps
testl
sbb
xor
lcall
nop
mov
dec
sbb
cli
test
jp
mov
dec
xchg
test
stc
sti
nop
cmpsl
cmpsb
cmpsb
inc
xlat
movsl
push
outsb
adc
icebp
sub
cmp
jg
pop
add
mov
es
roll
inc
adc
dec
lret
add
push
addl
inc
mov
outsl
inc
insl
lds
ret
enter
into
or
inc
scas
lods
aad
lcall
pushf
jns
pop
cmpsb
js
cmc
sbb
addr16
jl
pop
lret
adc
gs
push
sahf
fadds
jg
add
push
pop
mov
and
mov
jno
loopne
or
sahf
out
pushl
repz
fcompl
dec
push
xchg
dec
jne
cmpsl
ja
and
sti
dec
push
mov
jo
xlat
dec
inc
jmp
lea
cs
sub
fsub
sarl
inc
lcall
cmp
outsl
out
mov
adc
adc
loope
xor
decl
pop
lahf
loope
enter
into
inc
in
lock
fists
push
fwait
daa
push
cmpsb
cmp
adc
inc
loope
mov
and
sub
jge
or
test
sbb
pop
int3
push
xchg
out
call
pop
ds
mov
xor
mov
lock
mov
push
xchg
adc
push
sbbl
adc
loop
scas
and
xchg
out
pop
ljmp
dec
lcall
push
imul
cmpsl
test
andl
out
push
mov
xchg
adc
push
das
cmc
call
pushf
in
daa
add
arpl
inc
call
lock
cmp
test
hlt
sbb
jns
jp
imul
cmp
jge
lret
push
adc
ds
jmp
cmp
and
lcall
scas
sub
lock
adc
pop
cmp
loope
xor
mov
fnstsw
dec
iret
cltd
or
adc
shld
mov
jp
adc
push
mov
subl
mov
mov
insl
lret
inc
in
leave
push
adc
jae
scas
in
mov
es
jmp
mov
repnz
sbb
adc
and
shlb
or
mov
pop
lock
in
ret
hlt
icebp
push
or
adc
and
xor
jl
idivb
repnz
pop
int
jl
and
and
repnz
sub
fidivrs
incl
and
fwait
pushf
pushl
lods
inc
mov
or
stc
jl
dec
push
sub
mov
add
jmp
call
incl
jbe
mov
xor
or
aad
mov
pop
dec
lds
sahf
cli
ja
lahf
call
call
mov
xchg
sti
add
dec
adc
int3
cmp
push
push
lcall
stos
negl
pop
cld
push
repz
incl
test
dec
scas
lcall
repz
pop
shlb
test
insb
inc
repnz
in
inc
call
pop
mov
pop
dec
jp
fs
push
mov
push
cmpl
inc
dec
mov
dec
sti
leave
jnp
or
sbb
pop
sbb
das
fs
xchg
cmovne
je
lcall
mov
inc
jecxz
jmp
xlat
sub
push
ss
mov
jl
mov
xlat
mov
xchg
in
sbb
sbb
jg
out
in
dec
dec
push
call
jecxz
stos
ficoml
addr16
imul
mov
adc
cs
mov
sti
xor
js
xchg
mov
push
ljmp
sub
xchg
cs
mov
and
iret
adc
add
mov
or
test
mov
aaa
mov
and
int
out
mov
push
mov
pushl
test
xchg
add
fidivl
pop
xor
mov
faddl
daa
pop
shrb
xchg
pop
sbb
mov
ficompl
lods
push
inc
stc
pushl
jp
loopne
lret
jne
sti
push
sar
cmp
add
jle
iret
dec
ljmp
mov
sbb
mulb
cmp
cmpb
mov
push
call
add
mov
in
pop
cli
fs
test
cld
pop
fimull
incl
fistps
dec
push
rcl
xchg
dec
xchg
mov
xor
repz
fildll
mov
dec
sti
shll
cli
decl
call
scas
jnp
cmc
shll
in
push
sbb
xchg
jne
mov
sahf
sar
pop
stos
lods
jae
call
in
push
jmp
sbb
adc
jmp
jo
sar
lcall
cmp
adc
fdivr
adc
sub
outsl
std
add
mov
scas
jb
push
pop
ljmp
adcl
out
jbe
pop
inc
ss
popa
out
sub
inc
fsts
pop
popa
cmc
jecxz
jb
andl
pop
loop
or
and
sub
cmp
decl
decl
mov
sbbl
cli
lret
mov
das
std
jmp
jae
mov
testb
fadds
shll
pop
ds
jle
jg
mov
rcrl
mov
or
sub
add
sub
mov
add
lcall
xchg
pop
jbe
in
lea
aas
and
inc
or
and
decl
adc
stc
and
mov
sub
inc
mov
jmp
loopne
sti
cmpsl
cmc
jno
adc
in
cmpsl
push
jp
je
pop
inc
add
cmp
sub
test
iret
out
pop
and
xchg
popa
xor
mov
mov
scas
lahf
cltd
outsl
aam
jg
sbb
adc
push
cmc
jnp
dec
xchg
jecxz
or
loopne
mov
gs
mov
incl
movsl
dec
xchg
pop
add
inc
mov
outsl
hlt
pop
cli
into
negl
loopne
jg
loope
mov
dec
lods
out
test
and
xchg
inc
adc
xor
rorl
and
loopne
xchg
dec
sti
inc
in
push
mov
int
js
incl
leave
mov
outsb
scas
and
and
rorl
loop
mov
add
jnp
pushf
call
ljmp
scas
mov
push
sbb
xchg
mov
aam
sahf
jae
xchg
loope
je
adc
fistpll
jp
enter
pop
sbb
ficoml
mov
arpl
lock
dec
mov
mov
clc
movb
movsb
insb
cmp
sub
cmc
mov
mov
jnp
pop
popf
sub
xchg
loope
mov
nop
mov
or
aaa
out
js
movsb
jg
popa
hlt
cmp
mov
arpl
in
arpl
xchg
in
pop
and
push
fwait
inc
mov
dec
dec
push
sub
in
pusha
sub
adc
stos
in
mov
mov
jmp
out
xor
daa
mov
fsubrs
outsl
inc
aad
mov
sbb
in
jecxz
int
add
in
sub
fdivrs
jecxz
sub
adc
pop
test
and
jae
pop
rcr
mov
decl
xor
sub
jo
cld
loope
adc
sbb
call
stos
enter
sarl
inc
ds
push
mov
incl
inc
mov
add
adc
ret
inc
xlat
popf
lcall
lcall
xchg
cmp
gs
test
and
test
sub
decl
imul
sub
cld
dec
fidivrl
fsubp
sub
loop
add
jg
bound
sub
dec
scas
js
jmp
mov
int3
jmp
divb
sahf
outsl
inc
negb
jle
xor
jb
pop
roll
rorb
loop
or
scas
jl
pop
jbe
xchg
loope
mov
or
jb
aas
add
negl
test
aam
call
sub
inc
std
sbb
movsl
out
fisttpll
push
and
lods
mov
popf
adc
gs
jb
mov
mov
xor
push
adc
in
xchg
enter
push
sarb
movsb
out
call
push
dec
adc
insb
or
mov
xchg
cli
fbld
inc
mov
and
imul
mov
and
xchg
outsb
xor
or
xor
pminsw
incl
cmpsb
ljmp
jg
stc
jecxz
iret
std
add
mov
out
fwait
pusha
mov
fidivs
cld
ljmp
mov
cs
adc
das
add
mov
pop
fs
cmp
out
lcall
mov
inc
test
inc
daa
insl
fcmovu
clc
pop
loop
lret
xchg
idivb
popa
call
sbb
push
sbb
ljmp
inc
insl
lea
cmp
xchg
outsb
or
xchg
sbb
adc
add
jmp
dec
arpl
or
mov
cmpsb
arpl
mov
cmpsb
pop
lds
lods
dec
sbb
mov
adc
ja
jmp
outsl
ja
in
call
mov
addr16
loope
inc
pop
sti
push
adc
sub
mov
cli
ljmp
in
test
and
lods
jne
push
xchg
popf
pushf
jle
dec
pinsrw
rcrl
xlat
in
mov
inc
enter
mov
xor
jb
cmp
jp
mov
push
imul
lods
std
ljmp
xor
js
sub
icebp
mov
aaa
js
adc
call
into
lock
adc
pop
test
jns
aas
adc
add
xor
push
out
jnp
push
pop
fidivl
mov
adc
mov
pop
jo
pop
clc
call
adc
test
addr16
mov
sbb
les
pop
cmp
mov
cmp
xor
decb
xor
incl
decl
push
dec
add
ficomps
leave
cmp
ljmp
lock
js
mov
popa
mov
and
mov
hlt
adc
into
test
rorl
adc
xchg
daa
shr
mov
sub
out
dec
mov
jge
div
cli
hlt
push
cld
mov
xabort
fucomip
mov
int3
cmp
cmc
mov
mov
pop
iret
mov
mov
xor
jp
lea
add
dec
push
sub
cmp
xchg
push
std
fwait
add
fsubl
push
push
stos
or
push
popf
jmp
push
cmp
push
pop
sbb
push
mov
push
ljmp
cltd
jg
fwait
js
fwait
in
xchg
jg
dec
pop
repz
xchg
add
inc
push
add
sub
dec
mov
ljmp
pop
pop
xorb
sbb
inc
lea
pushl
jmp
inc
pop
adc
rcrb
int
aas
cs
mov
outsl
or
dec
dec
adc
ljmp
daa
rorb
inc
jno
mulb
inc
loop
mov
adc
hlt
mov
ljmp
jno
mov
lcall
pop
xchg
jg
add
aam
cli
repz
sar
call
pop
xor
aam
into
lods
and
into
mov
inc
or
incl
pop
jo
sub
sahf
pop
imul
xchg
std
cmc
in
bound
adc
lcall
out
out
and
mov
in
cltd
mov
sbb
and
nop
ds
dec
andb
loope
lcall
out
inc
int3
sbb
push
mov
fcoml
mov
inc
fisubs
ljmp
lock
je
xor
movsb
ss
sbb
jg
incl
sub
push
sbb
pop
pop
dec
xchg
and
mov
push
xchg
sti
or
jl
decl
inc
in
dec
xchg
pop
push
mov
je
add
arpl
aam
pop
jo
add
jl
adc
mov
sti
mov
repz
out
cmp
mov
iret
enter
jne
push
pushl
xchg
clc
call
cmp
or
sbb
push
arpl
rclb
imul
xlat
jno
push
jmp
pushl
mov
adcb
jno
rclb
fcmovbe
decl
inc
inc
mov
aam
cmp
adc
es
xchg
cli
pop
ljmp
mov
inc
xor
rorl
dec
jg
xor
mov
xchg
jle
inc
cmc
ja
push
inc
mov
dec
jge
add
xor
or
std
call
xchg
mov
lods
aad
je
mov
loop
jecxz
in
aas
xchg
adc
ds
scas
cld
jg
jns
push
mov
and
cmpb
push
push
pusha
cltd
pop
popa
or
decl
xor
arpl
mov
sub
aam
int3
jmp
push
mov
insb
mov
mov
fs
cwtl
mov
pop
push
jno
pop
add
pop
pop
lds
ljmp
dec
pop
dec
mov
ss
ljmp
push
decl
aam
stos
ss
test
enter
in
call
and
xor
xchg
lods
jbe
in
xor
jmp
jp
and
fs
pop
movsl
stos
sbb
adc
out
addr16
test
icebp
data16
pop
inc
ljmp
in
adc
mov
fiadds
jb
jl
and
cmc
pushl
mov
push
and
rcrb
push
mov
stc
lcall
daa
ret
in
loop
mov
aaa
pop
jne
aas
mov
pop
in
push
in
ficoms
mov
fildll
rorl
adc
mov
adc
adc
adc
clc
pop
cmc
incl
loop
popa
push
dec
xor
mov
push
pop
rcrb
ljmp
cmpb
fcoms
inc
stc
jmp
push
mov
pop
stc
cmc
mov
cmp
push
adc
in
or
les
mov
outsl
add
add
out
out
fcomp
cmp
sar
movsb
push
fidivrs
add
int
daa
scas
bound
xchg
std
dec
xor
fnsave
outsl
std
call
dec
sarb
fbstp
xor
outsb
stos
lods
mov
leave
sub
outsb
call
mov
push
ja
ret
push
mov
jg
xchg
cmc
adc
call
jle
lcall
xchg
rcll
sbb
dec
add
jecxz
or
incl
adc
mov
xorl
jg
sbb
adc
ja
jns
push
jle
outsl
icebp
jg
push
jnp
test
add
cmc
inc
incl
rcll
jge
add
adc
dec
inc
sub
fildll
pop
jl
sbb
xchg
arpl
je
push
hlt
cmp
imul
push
std
divb
or
mov
cmp
ljmp
cmpsl
cmpl
addr16
xor
mov
cmp
mov
mov
mov
call
cli
dec
pushl
outsb
pop
pop
mov
fwait
pop
rcr
shlb
dec
orb
dec
std
fs
aad
push
mov
imul
ljmp
shll
shrl
push
jns
push
shl
pop
inc
ret
decl
cld
imul
mov
mov
dec
sahf
sbb
movsl
jb
scas
mov
xchg
mov
dec
lds
aas
es
loopne
sub
mov
lods
jg
xor
mov
mov
xchg
or
iret
sbb
sub
xchg
out
insb
inc
adc
dec
and
cmc
pushl
cmp
sarl
or
push
inc
adc
dec
cmc
jbe
add
lods
stc
jle
xor
push
or
loop
dec
repnz
decl
adc
inc
xor
popf
and
fiadds
sar
sti
xor
mov
jno
mov
jle
mov
aaa
pushf
and
decl
into
psubusb
cwtl
or
frstpm(287
xor
daa
mov
aas
mov
push
jg
rclb
lods
mov
imul
adc
cwtl
cmpl
cmp
out
fsubs
push
das
loop
sub
movsl
arpl
std
call
addb
sbb
sbb
mov
add
push
xchg
mov
outsl
xlat
mov
mov
or
call
int
inc
imul
loop
jp
mov
mov
push
enter
sub
mov
ljmp
dec
test
jnp
cmp
sti
cmpsb
or
popl
pop
xchg
es
cld
ret
test
cwtl
outsl
jmp
ljmp
push
jecxz
paddd
icebp
incl
adc
push
push
mov
rep
lret
incl
ret
sub
fbstp
or
adc
push
sub
in
push
ljmp
std
jnp
ljmp
or
jae
adc
mov
xlat
lcall
push
or
int3
sbb
and
ljmp
out
and
mov
icebp
lds
sub
cmp
shll
mov
or
aas
cmp
call
pop
inc
pop
mov
lret
cmp
lcall
leave
loopne
sub
in
jbe
cwtl
aad
inc
mov
ljmp
fists
jo
inc
test
mov
iret
test
movsl
inc
out
rcrl
lret
cmp
js
mov
mov
das
jmp
lock
gs
jne
test
call
jbe
jno
fucomip
ljmp
inc
cmp
push
fcmovbe
xor
clc
pushf
repnz
dec
daa
ljmp
icebp
and
icebp
sbb
or
shlb
divb
das
sbb
ljmp
out
push
pop
fucom
sar
cmp
dec
xor
add
or
dec
mov
enter
in
cli
enter
cltd
icebp
cmp
push
mov
xor
arpl
mov
in
cmpl
incb
dec
jmp
out
popa
lods
in
idivb
add
mov
jo
mov
jbe
cltd
int3
test
inc
mov
lds
imul
inc
gs
jle
clc
mov
sbb
jae
sub
loope
add
pop
pop
sar
das
hlt
inc
incl
sub
mov
sarl
hlt
outsb
dec
xchg
jg
pop
loop
add
sbb
cld
inc
mov
fcmovnu
add
xchg
arpl
push
lcall
pop
mov
mov
jmp
movsb
sbb
jno
dec
or
xchg
jbe
imul
inc
sbb
mov
add
ja
cld
adc
lcall
xchg
call
int3
cli
and
test
ss
ljmp
std
or
mov
pop
and
repnz
into
and
fisubrs
sbb
pop
sub
aas
outsl
mov
testl
xchg
inc
push
cmp
int
mov
mov
push
jecxz
cmpsl
push
adc
jg
ljmp
fwait
push
push
imul
enter
mov
jmp
adc
pop
rcll
rcl
mov
std
pop
repnz
sbb
les
in
in
xchg
xchg
call
xor
mov
lods
call
ss
xchg
adc
push
stc
inc
ret
shl
dec
jmp
pusha
and
out
decl
adc
nop
bound
fsubr
rcrb
repz
das
loopne
xchg
pop
mov
mov
out
test
stos
sub
es
ss
ljmp
bswap
xchg
pushf
test
or
hlt
jp
int3
sub
jno
lds
das
jge
mov
aam
ljmp
cmp
movb
mov
pushl
sbb
dec
fmulp
cli
mov
sub
dec
cmp
add
shll
lcall
mov
mov
xor
scas
push
mov
add
dec
inc
movsb
fsub
incl
icebp
es
outsl
sbb
add
adc
jmp
stos
pushf
decl
pushf
sub
inc
ljmp
and
int3
outsl
rcll
sar
repnz
jge
and
fsubp
pushf
sub
mov
inc
cmpsl
xor
pushf
cmpsb
adc
aad
imul
jmp
shrb
imul
pushl
mov
arpl
jge
fldcw
sbb
mov
sub
cltd
repnz
std
ljmp
fisubrs
in
out
xchg
repz
and
aad
icebp
fcmovb
lods
mov
xchg
ficoms
xchg
lods
fldcw
lcall
cli
pop
adcl
push
push
mov
dec
sahf
gs
pop
cld
inc
js
test
loop
dec
movsl
cmp
dec
mov
shll
dec
sbb
clc
inc
jne
adc
and
outsb
cwtl
pop
fisttpll
and
inc
inc
call
loop
lcall
push
addr16
pop
loop
mov
inc
fstl
stos
xchg
xor
sub
fdivrl
inc
daa
or
mov
push
adc
or
inc
jle
jns
mov
outsb
jb
hlt
xchg
dec
xchg
mov
xor
xchg
clc
aaa
jle
ror
and
je
ja
jp
enter
jmp
inc
clc
mov
mov
insb
dec
jecxz
ljmp
int
push
mov
test
xlat
imul
movsl
pusha
xchg
clc
test
xor
incl
in
mov
ret
dec
into
xchg
ja
insl
jmp
dec
loope
push
incb
cmp
add
xor
mov
outsb
push
or
adc
jae
and
dec
push
stos
shlb
cmp
call
mov
mov
adc
leave
shl
xor
lods
dec
pop
loop
or
rolb
fnstcw
sbb
incl
xlat
mov
inc
dec
add
stc
push
mov
or
sub
dec
sub
mov
mov
out
mov
or
or
fwait
sub
in
add
cwtl
sub
jb
outsl
hlt
lcall
test
and
pop
xchg
mov
mov
lcall
decl
mov
jle
or
out
mov
cmp
out
and
aas
pop
aad
inc
fstp
jb,pn
test
mov
imul
xchg
outsb
addr16
fwait
inc
sahf
rcrl
push
xchg
pop
js
add
add
push
ljmp
mov
and
incl
ss
xchg
and
mov
push
mov
shrb
pop
jno
inc
jbe
int3
fsubl
repz
mov
mov
iret
sti
sarb
int3
repnz
jg
das
push
ret
int
pop
loopne
inc
mov
popa
insl
mov
push
subl
scas
xor
stos
outsl
cld
decl
sahf
mov
mov
xchg
push
xor
xchg
fwait
mov
mov
pop
add
rcrb
mov
push
mov
outsl
loop
push
lcall
xchg
lret
cmp
fisubs
and
int3
enter
stc
nop
sti
insl
add
jg
jmp
dec
push
mov
sbbl
outsb
out
aad
mov
add
movsl
stos
repnz
stos
push
ret
dec
inc
push
xor
dec
in
and
pushl
cmp
mov
aam
dec
xchg
cmpsb
mov
out
lock
jle
sbb
insl
sub
xor
aas
inc
shrl
jnp
std
cwtl
cmp
push
sbb
out
push
mov
iret
xchg
pop
shll
mov
jbe
mov
mov
xchg
inc
dec
mov
mov
pop
iret
les
pop
lahf
sysret
jne
ja
cmc
aaa
clc
aam
std
test
pop
add
jge
mov
lret
ficoms
mov
in
mov
cld
incl
popf
jmp
and
jb
pop
xor
xor
add
popa
stos
jg
mov
cmp
fwait
push
fs
xchg
jge
inc
out
mov
jmp
sbb
xchg
xchg
adc
pop
sub
lock
fidivrl
mov
movsl
cmp
mov
int
lcall
aaa
scas
decb
mov
xchg
ret
ror
test
pushl
and
fadd
lcall
fmull
jb
ljmp
sbb
add
cmpsl
mov
into
fwait
sbb
ds
dec
lock
mov
mov
push
mov
pop
mov
in
mov
cli
pop
inc
fisubrs
pop
pop
rcll
mov
mov
outsl
hlt
faddl
pop
and
aas
push
pop
cltd
js
sub
mov
adc
adc
movsl
sbb
stos
in
mov
test
out
jne
filds
push
dec
or
dec
roll
mov
lea
shl
adc
xchg
cmp
push
push
pop
or
mov
mov
mov
adcb
cmp
pop
out
pop
push
adc
popa
inc
sar
ds
xlat
inc
aad
push
add
iret
inc
adc
out
fmull
pop
std
mov
insl
sub
add
sti
aam
cltd
mov
push
xchg
addl
mov
jl
out
or
out
dec
repz
lcall
mov
scas
mov
push
lea
ss
idiv
incl
lss
cmp
jno
lahf
ja
mov
out
call
and
adc
sub
xchg
fdivrs
mov
cli
sbb
xchg
mov
mov
lcall
clc
decl
mov
ficoms
jo
int
cmc
mov
scas
sbb
xchg
add
sar
incl
jb
mov
push
cmp
mov
mov
jno
jns
test
ror
dec
jno
sub
add
sarb
loope
icebp
xor
subl
xchg
mov
imul
aad
inc
push
adc
mull
xchg
ret
lea
shlb
imul
mov
rcrl
pusha
test
in
sbb
fnstenv
popl
int3
inc
out
into
sub
dec
mov
add
decl
dec
rcl
iret
divb
repnz
shlb
add
sub
lods
mov
addr16
ljmp
hlt
lcall
mov
mov
fcmovnb
aaa
lods
ss
jo
xchg
mov
idiv
dec
dec
sbb
push
or
insl
ss
jl
sbb
fucomip
mov
inc
fs
xor
sbb
push
mov
add
mov
testl
mov
call
ds
pop
filds
les
jnp
dec
insl
cld
inc
pushf
xor
es
jo
incl
jmp
xor
lret
cmp
dec
out
cmp
bnd
aad
das
std
test
mov
in
and
test
jno
std
mov
lret
and
push
cld
movsb
cmp
push
and
nop
lcall
xor
inc
das
cld
ss
lahf
clc
hlt
mov
mov
cmpsl
xor
xchg
loop
pop
call
adc
call
xor
lcall
nop
fsubp
lods
dec
rcl
movsl
cld
cmp
les
sub
jmp
nop
test
push
mov
in
jnp
faddp
mov
es
shll
xor
sub
mov
push
cmp
jmp
sbb
dec
xor
xor
imul
bound
jg
decl
mov
xchg
and
push
push
arpl
fsubrl
je
sub
mov
fucomip
ljmp
decl
sarl
jl
xchg
xor
and
xchg
xchg
or
dec
lods
jle
push
add
mov
ljmp
mov
cmpsl
int3
clc
xlat
push
fildl
sub
incl
push
xchg
sub
pop
lret
cli
dec
fisttpll
adc
ret
daa
ss
negb
add
adc
cltd
dec
fnstcw
jae
pop
ljmp
and
lcall
lods
adc
ret
aaa
popf
in
jno
ds
ret
mov
jmp
mov
inc
inc
lret
shlb
loope
cmp
enter
mov
bound
xor
clc
decl
dec
and
xor
or
rcrl
movsb
mov
xchg
dec
cltd
cmp
push
adc
xchg
sti
xchg
and
mov
pop
fiaddl
rcll
aam
adc
add
hlt
out
out
addr16
sarl
xor
and
sub
xchg
cmp
dec
jg
jle
jne
insl
xchg
gs
pop
gs
xor
scas
xchg
lret
push
repnz
fsubrl
loope
sbb
xor
push
and
testb
popf
std
call
popf
mov
popa
pop
stos
sbb
jle
sub
mov
das
dec
dec
mov
jae
mov
push
lea
aam
sarl
rclb
mov
xchg
pushl
fdivl
insl
ds
cs
lea
mov
test
je
aad
push
adc
stos
fisubrl
fwait
jmp
jmp
pusha
cs
ljmp
nop
inc
stos
mov
mov
or
mov
mov
or
xor
sub
mov
pop
sub
ljmp
sbb
fcompl
dec
div
arpl
push
incl
or
or
lret
jecxz
adc
shlb
or
loopne
adc
int3
call
loop
gs
loope
stc
lods
sbbl
mov
adc
mov
test
lcall
sbb
jp
sahf
out
loop
sarl
cli
das
cld
jmp
jno
js
mov
lds
int3
fs
in
dec
call
jmp
mov
push
mov
cld
incl
das
fstpl
jmp
sbb
pop
decl
push
movswl
mulb
fwait
push
ret
mov
out
ja
mov
pop
fldpi
addr16
and
xor
and
adcl
leave
mov
or
loope
ret
out
fisubrs
imul
sub
movsl
and
out
push
cmp
js
mov
jo
lds
std
pop
pop
mov
ret
cmpsb
and
dec
and
jbe
and
adc
inc
inc
andl
fstp
inc
push
pop
popa
out
or
sub
shrl
ljmp
push
movsb
loope
xchg
jg
stos
das
jo
mov
enter
das
js
shl
enter
mov
xor
adcb
jmp
ss
cmpb
jne
lcall
lcall
cmp
jmp
jmp
mov
inc
js
mov
ljmp
sub
dec
arpl
xor
jecxz
lret
or
pop
loop
cltd
lahf
das
sbb
add
js
cmpsb
js
cmp
pop
repz
or
adcl
mov
popf
fildl
mov
push
pop
lret
inc
ja
in
clc
lcall
outsb
sub
mov
je
or
add
xchg
stos
jmp
cmp
jmp
push
sbb
sub
jmp
xchg
push
test
out
jl
repz
sub
decl
xchg
pop
pop
dec
sti
sub
adc
xor
roll
sti
pop
mov
lds
fbld
sub
jge
and
rcrb
daa
shlb
mov
and
roll
pop
shlb
jge
das
dec
and
aam
js
push
jl
adc
call
cmp
pop
lret
xor
cli
ljmp
xchg
sub
add
sub
lds
cmc
cmp
push
lret
mov
sub
xchg
sub
jle
imul
dec
sub
cltd
stc
mov
dec
call
dec
pop
mov
imul
pop
and
repz
lcall
add
mov
mov
into
fisubrl
mov
pop
jge
push
jbe
jp
dec
stos
push
lea
sbb
fadd
mov
lcall
filds
decl
mov
push
inc
aaa
mov
outsl
push
cld
xor
insl
and
add
or
mov
in
ljmp
inc
sub
cmp
dec
mov
test
loop
mov
loope
inc
sub
ljmp
out
jmp
aad
and
xchg
mov
test
adc
jecxz
xchg
and
or
xor
cmc
dec
ljmp
lcall
pop
mov
push
mov
xor
mov
call
inc
shlb
enter
mov
add
stos
jg
aam
add
push
mov
pop
cli
mov
cmp
ss
mov
push
std
add
mov
mov
fchs
out
adc
add
mov
loop
fisubrl
dec
rcr
inc
cmc
incl
fwait
add
aad
addr16
iret
in
fistpl
jae
fs
and
dec
popf
jg
mov
mov
mov
mov
in
pop
xlat
scas
out
mov
dec
jg
sti
fsubl
add
xchg
add
mov
call
das
and
pop
int3
jno
repz
mov
fwait
sub
xchg
mov
insl
pop
test
ljmp
pop
imul
push
cmp
jecxz
pop
popf
push
mov
test
mov
loopne
mov
xchg
ljmp
rorl
mov
jo
pop
or
mov
call
int3
pop
jnp,pn
adc
adc
stos
pop
jmp
dec
pop
inc
push
pop
les
dec
pop
pop
push
sbb
repnz
aas
mov
aas
dec
pop
sahf
xor
lods
push
aas
and
testb
test
fidivs
mov
add
jbe
dec
pop
or
sbb
jne
push
stc
or
imul
inc
adc
lods
enter
mov
call
and
cli
mov
testb
sbb
cli
push
decl
push
ss
nop
rcr
fbstp
xchg
clc
call
jbe
in
js
outsb
fs
mov
repz
sbb
push
cs
cmc
in
sub
adc
movsl
add
sub
pop
xor
or
jmp
sub
xlat
stos
xchg
pushf
call
clc
sbb
mov
lcall
aaa
fs
popa
adc
stos
incl
ror
push
movl
cmpsb
stos
mov
cmc
jg
pushf
sub
push
imul
inc
add
imul
shlb
pop
mov
test
mul
aas
add
or
lcall
addw
and
shll
loopne
mov
mov
push
ret
push
mov
push
xor
js
cmp
mov
mov
cmp
sub
mov
pop
adc
add
mov
mov
inc
rcll
popf
into
adc
out
inc
call
js
popf
jle
data16
scas
insl
lcall
jecxz
jmp
cmp
pushl
fisttps
daa
mov
leave
jbe
loopne
xchg
je
filds
jne
xor
mov
mov
and
xchg
fldt
pushf
jb
mov
call
cmpl
mov
int3
dec
xlat
sub
dec
movsb
pop
mov
fcompl
pushl
mov
js
sub
int
push
add
sarb
aam
adc
lods
mov
inc
sub
andl
bound
lret
cli
ds
inc
mov
sbb
aam
enter
outsl
rcl
ljmp
mov
shl
insb
scas
sbb
test
mov
mov
insl
loope
push
fdivl
test
data16
fildl
jne
jge
es
repz
or
mov
cmp
leave
lods
xor
inc
dec
mov
mov
test
pusha
and
jge
stos
call
in
xor
lcall
nop
dec
into
stc
jge
es
push
fmull
scas
mov
call
incl
add
lcall
mov
inc
mov
inc
pop
pop
sti
shlb
insb
mov
fistps
fists
cli
idiv
pop
int3
mov
cmpb
xchg
mov
jge
add
inc
ffree
out
xlat
cs
jg
call
mov
call
ret
addb
fucomip
ljmp
push
test
pusha
pop
or
pusha
inc
xor
dec
insb
inc
sub
add
ds
call
icebp
sahf
lods
jae
xor
data16
ret
addr16
add
fistpl
fistps
mov
fstp
xchg
inc
push
dec
pop
sub
popa
jae
call
bound
jns
xor
and
push
lods
push
rorl
cmp
cmp
and
mov
mov
mov
ljmp
and
dec
lods
imulb
fsubrl
inc
push
xchg
hlt
lret
testb
mov
jmp
adc
adc
jg
dec
movsl
call
fcmovnb
inc
movsl
stos
push
jg
mov
cld
es
lcall
mov
adc
inc
sbb
xor
cmc
loop
sbb
jmp
js
lcall
aad
inc
mov
jl
pop
xchg
push
hlt
jbe
dec
jnp
das
cld
lods
andb
jnp
aad
add
test
ljmp
fldl
std
jae
mov
mov
add
mov
stos
push
push
add
mov
mov
dec
jmp
jge
ja
lods
mov
shl
call
sbbl
mov
adc
and
in
or
int
xchg
call
leave
cmpsb
aaa
clc
add
movsl
jnp
sub
and
das
icebp
add
test
cmp
xor
adc
or
mov
xor
shlb
test
mov
cmc
inc
push
sahf
sub
push
lods
add
jge
or
outsl
pop
jge
dec
pop
jno
pop
inc
inc
push
pop
insb
or
jb
roll
xorb
mov
imull
fsts
pop
sahf
jg
gs
push
and
stos
push
les
dec
cmc
add
stos
fwait
xor
xor
out
fs
imul
mov
or
incl
sub
lock
pushf
pop
jecxz
mov
add
ljmp
aam
cld
jmp
sub
mov
lahf
es
daa
xchg
mov
fildl
test
dec
iret
sahf
rep
movhps
mov
sbb
repnz
dec
bnd
mov
js
xlat
sub
aad
fldenv
mov
sbb
push
pushl
adc
imul
cmp
in
or
xor
dec
lock
stc
cs
xor
fucom
jnp
icebp
pop
repnz
or
push
les
push
into
inc
outsl
mov
dec
lahf
pop
leave
imul
pop
sbb
aaa
and
inc
mov
movsl
repz
inc
lahf
stos
cmp
pop
test
xchg
ljmp
dec
mov
out
pop
push
test
mov
push
daa
cmp
lcall
scas
call
cmpl
pop
jp
mov
xor
gs
js
sahf
in
decl
int
js
sub
call
inc
movsl
ljmp
test
incl
gs
rcll
rolb
xchg
mov
adc
inc
mov
fstpt
adc
pop
clc
mov
lods
pop
sub
mov
dec
jg
neg
jbe
pop
lcall
push
pushf
iret
stos
cmp
jg
incl
mov
mov
adc
jno
push
ja
xor
cld
cs
push
xchg
decl
ljmp
inc
xchg
or
jg
push
hlt
inc
add
int
dec
hlt
add
icebp
lcall
add
cmp
or
dec
adc
xchg
enter
repnz
xchg
xor
lret
das
sub
and
out
test
jmp
int3
push
mov
inc
in
jge
push
or
lods
pushl
sub
mov
or
jecxz
outsl
push
aas
and
add
mov
inc
mov
cmp
inc
call
lods
jbe
mov
shlb
adc
loop
push
incl
inc
cltd
or
add
xor
popf
pop
adc
push
dec
adc
xor
jae
mov
adc
adc
cld
inc
sub
rcrb
adc
out
outsl
push
les
jb
xchg
jmp
mov
cmp
decl
and
cmpsb
mov
fildl
repnz
sahf
sub
and
es
xchg
sub
mov
repz
movsl
addr16
stc
cmp
or
adc
decb
inc
cmp
mov
dec
outsb
int3
or
mov
cmp
cmpsb
or
sbb
repnz
add
xor
loop
lcall
arpl
sub
sti
mov
xchg
std
clc
mov
dec
fistps
or
xchg
bound
daa
push
push
dec
mov
dec
fiaddl
mov
in
add
in
or
pop
push
mov
mov
xchg
out
mov
sbb
xchg
in
in
xor
sbb
call
lock
lret
mov
add
lahf
test
sbb
mov
jg
or
je
xor
and
sbb
lds
subl
add
test
out
sub
inc
mov
adc
movsb
aaa
shl
out
lds
or
lcall
mov
adc
sarb
shr
psrld
out
push
push
aad
mov
pop
xchg
lods
push
imul
lods
jg
cmp
mov
nop
mov
in
fwait
stos
loopne
jg
ljmp
or
sahf
sbb
faddp
push
jno
loope
adc
les
or
or
xor
mov
subl
decl
and
arpl
and
es
sbb
mov
sarl
adc
xor
cmp
xchg
outsl
call
lea
decl
push
xor
subl
push
lds
push
sarb
xor
loopne
jmp
lock
frstor
enter
jg
inc
xlat
icebp
jecxz
fisubl
sub
popf
and
fiadds
std
mov
xlat
mov
incl
sub
mov
sbb
cmp
flds
cmpl
jmp
pop
mov
mov
test
mov
and
jmp
push
cltd
lds
adc
call
pop
cmpsl
lods
imul
fstps
jg
sub
jg
sub
inc
bndldx
test
mov
add
inc
mov
push
sar
decl
jge
adc
inc
into
lret
inc
mov
push
dec
inc
push
jmp
in
sbb
mov
subl
insl
add
inc
gs
lea
jno
fisttps
incl
xchg
push
adc
cmp
or
das
cvtps2pd
test
stc
jle
pop
and
inc
gs
hlt
mov
cmpsl
int3
inc
cli
xchg
sbb
xchg
negb
ret
xchg
jmp
lea
dec
dec
mov
and
sub
cli
call
pop
pushf
das
pop
insb
and
jp
dec
std
push
sbb
and
pop
popa
mov
jo
addr16
push
imul
dec
lret
mov
xchg
shrl
movsb
pop
clc
jmp
int3
mov
mov
mov
adc
adc
xchg
mov
in
pop
mov
incl
sbb
jge
mov
xchg
sub
mov
xchg
inc
jo
incl
pushl
pop
sub
mov
or
es
testl
aaa
xor
pop
and
enter
aam
loope
inc
xchg
or
jg
cwtl
testl
mov
outsl
ss
pushf
and
and
insl
mov
outsb
mov
add
lock
shlb
movsb
and
mov
jmp
push
jmp
sbb
sub
subl
inc
in
and
iret
push
pop
push
cmp
stc
test
xorl
mov
rol
jge
mov
in
gs
pop
inc
call
sbb
shll
daa
mov
out
xchg
test
pop
cmp
dec
xor
dec
sbb
incl
sbb
aam
pop
mov
std
cli
cmp
xchg
dec
clc
icebp
shrb
adc
push
xor
std
mov
pushl
mov
xchg
jns
stos
dec
jbe
adc
movsb
je
cmc
add
xchg
and
inc
cli
cmp
jmp
faddp
mov
call
pop
sbb
pop
repz
xchg
out
sub
out
inc
aaa
stos
clc
mov
ret
mov
decl
push
xchg
jne
pop
rcll
fisubs
aam
dec
mov
pushl
rcll
mov
ror
sub
xlat
sbb
pop
jmp
push
lcall
jecxz
inc
xor
pushf
and
or
cli
pop
jns
dec
cld
nop
inc
xchg
incl
test
cltd
xor
dec
pop
ljmp
and
jp
test
dec
clc
xchg
adc
pop
repz
sbb
incl
incb
or
icebp
cmpsl
or
test
incl
into
mov
lock
sub
jmp
or
scas
or
pushf
mov
js
addb
sti
aaa
mov
in
push
pop
mov
pop
pushf
ficomps
out
data16
jbe
rcl
test
jno
out
arpl
test
mov
aaa
subb
pop
in
test
jge
in
lcall
or
mov
nop
pop
pop
inc
scas
mov
xchg
and
jmp
push
jns
mov
cwtl
cltd
jle
lods
xchg
fadds
and
xlat
sar
mov
jg
pop
lock
jg
bound
xchg
in
push
push
stc
xchg
mov
in
and
and
call
outsl
add
out
decl
gs
inc
bound
int
jl
and
fs
lea
and
sti
lds
sub
addr16
mov
cmp
bound
test
push
sti
mov
jo
mov
imulb
shll
push
enter
fidivs
inc
or
mov
xchg
mov
sbb
leave
das
hlt
ljmp
test
xor
loop
or
xchg
addb
or
xchg
pop
add
mov
stos
mov
xchg
stos
lcall
push
les
lea
adc
cs
or
pop
popa
sub
outsl
subl
mov
lods
into
in
enter
pop
or
or
jmp
hlt
imul
fdiv
movsl
pushl
jns
or
mov
cmp
daa
push
fcompp
pop
stc
mov
pop
outsb
lret
in
sbb
das
fisubrl
ds
outsb
pop
lcall
decl
fimuls
push
repz
bound
stos
sbb
jo
or
decl
jg
sbb
ficoml
sbb
stos
push
lcall
lods
mov
lcall
in
cwtl
imul
sub
lcall
push
dec
inc
and
adc
or
ljmp
sbb
push
aaa
cld
movsb
pop
hlt
int
mov
xchg
sub
xor
enter
cmpsb
sub
cmpsl
adc
sub
pusha
pusha
dec
bound
cltd
jae
add
jae
jbe
fistpll
fnsave
shll
fdivrs
pop
ljmp
cmc
and
jg
call
jno
xchg
mov
mov
repz
test
jno
push
fisubrs
lcall
cmp
xor
cmpsb
arpl
cmpsb
add
xlat
mov
xor
sbb
lcall
jle
push
lcall
pusha
roll
xchg
mov
js
repz
call
or
adc
fistps
adc
fxch
xor
adc
mov
pop
loope
xchg
fldenv
lcall
mov
jmp
test
inc
imul
jbe
inc
jg
fistl
mov
sbb
cmpsb
xchg
xchg
popf
adc
mov
pushl
sbb
mov
cld
out
sub
jle
dec
xor
inc
or
jmp
sbb
push
sub
lods
loop
xchg
ret
cmp
jbe
das
adc
or
sub
inc
mov
sahf
test
adc
pop
xor
pop
mov
push
shrb
loope
in
jecxz
jns
fcompl
ss
ja
hlt
out
xlat
mov
lcall
lods
into
out
btr
in
lahf
jne
cwtl
push
sub
stos
mov
in
sbb
push
incl
fwait
clc
mov
and
test
scas
loopne
lret
push
loop
nop
mov
inc
les
push
mov
mov
clc
sub
call
clc
in
fildl
cwtl
xchg
mov
les
les
call
xor
and
dec
pop
inc
mov
cmpsb
push
and
push
adc
mov
cmp
mov
sbb
push
push
inc
jl
xorl
and
jle
lea
jg
cmp
xchg
adc
loopne
testb
pop
mov
add
inc
ljmp
mov
stos
scas
les
cmpsb
pop
sbb
and
incl
ret
jmp
daa
dec
pop
cld
lret
roll
or
in
xchg
pushf
dec
sbb
out
mov
fsub
fnstcw
jae
xlat
push
mov
cmp
pop
cld
cli
pusha
jle
ret
mov
inc
mov
jg
dec
mov
push
pushl
in
xchg
mov
fisttpl
sarb
push
sbb
xchg
outsl
xchg
clc
incl
stos
sub
jle
pop
or
push
pop
inc
aaa
clc
cmp
cmc
jno
outsb
rorl
insb
subl
repnz
outsl
xor
cmp
mov
pop
sub
test
push
xor
jg
mov
dec
pop
xlat
je
movsl
int3
cmp
adc
xchg
and
push
shl
xchg
decl
adc
pop
outsl
dec
sbb
popa
je
mov
jo
outsl
pop
fcompl
mov
pop
in
sti
adc
ljmp
add
fsubs
nop
lcall
mov
in
pop
sar
cli
shll
xchg
sbb
pop
mov
xchg
stos
call
add
mov
sub
int
ja
iret
insb
xchg
fiadds
scas
adc
fistpll
pop
icebp
cmp
lcall
push
inc
call
clc
lcall
or
pop
cmp
out
cmp
jle
jmp
push
sbb
mov
mov
mov
ljmp
andl
and
or
jecxz
das
mov
fsubrl
lcall
dec
in
popf
push
xchg
mov
popa
mov
and
hlt
sub
inc
push
jg
ljmp
jns
dec
icebp
xlat
fildll
fnstcw
cmovge
out
fs
push
lea
lcall
pop
sub
stos
push
addr16
jb
cmc
pop
pop
sbb
adc
sub
xchg
sbb
cmp
inc
push
cmp
xchg
ja
div
push
cmp
mov
add
lcall
test
push
mov
ja
push
repnz
mov
movl
inc
pop
ss
insb
ljmp
adcl
into
clc
mov
mov
out
jecxz
sbb
dec
jno
test
outsb
jle
bound
xor
push
outsl
div
insb
jnp
inc
mov
sbb
incb
push
pop
dec
sarb
loopne
adc
imul
jns
out
test
and
mov
fnstsw
incl
out
mov
add
insb
ret
dec
dec
fs
cmpl
fxch
sbb
data16
pop
cli
ljmp
sub
jmp
or
jle
pop
xor
jg
cmpsl
int3
push
mov
stos
stc
into
ja
lcall
gs
rcr
and
mov
scas
ret
popf
add
mov
clc
dec
shrb
sub
shll
pop
jl
jg
xor
adc
hlt
imul
mov
dec
outsb
test
shr
int
sub
xlat
imul
ud0
jg
test
jns
push
pop
inc
xor
or
lods
call
idiv
test
mov
inc
aad
insl
mov
pop
lock
jg
rorb
adc
add
add
cmpsl
out
inc
mov
push
cmp
inc
mov
ds
push
jg
xchg
pushf
cmpsb
add
lods
aam
daa
xchg
hlt
pop
push
sbb
clc
xchg
in
fcomi
pop
jl
imul
mov
aas
out
testl
cmp
mov
sarl
add
js
inc
loop
js
jecxz
cs
fwait
xor
fnstsw
fstpt
mov
xor
je
mov
roll
push
pop
cmp
cmp
dec
loopne
pop
or
xchg
daa
cmp
cld
xor
incl
xor
test
fs
xor
cli
inc
pushf
push
inc
jecxz
or
scas
adc
xlat
in
incl
mov
push
jl
rcrl
addl
jne
jno
jns
dec
mov
push
test
lods
inc
addr16
push
mov
push
sarb
pushf
inc
rcrl
imul
jmp
loope
hlt
arpl
jg
mov
into
test
mov
sub
mov
mov
jno
and
enter
mov
mov
lds
and
sbb
xchg
sbb
mov
rcll
mov
inc
repnz
in
adc
pop
sbb
xchg
adc
and
cld
mov
sbb
popa
sub
or
xchg
dec
out
dec
push
xchg
adc
pop
sbb
decl
negb
push
xor
lahf
mov
mov
xor
out
push
fidivrs
sub
int
jns
mov
jns
mov
jno
cmp
jle
cmpsb
add
inc
test
sbb
xchg
or
incl
decl
sbb
jns
mov
mov
pop
mov
add
pushl
adc
fwait
in
pop
jl
or
push
push
cmp
mov
jg
out
push
rcrl
lret
ss
jle
mov
dec
lcall
jg
push
pushl
ljmp
ljmp
fwait
inc
inc
icebp
fidivs
incl
addr16
test
pop
insl
shll
mov
xchg
xlat
ret
daa
sub
nop
outsb
enter
sbb
cmc
sti
lods
fisubrl
pop
pop
xor
xchg
lret
or
jmp
stc
sub
fistpl
in
fwait
mov
adc
adc
and
daa
std
lock
xchg
out
pushl
orb
dec
test
leave
xchg
hlt
dec
jg
incl
mov
lds
ljmp
jbe
outsl
incl
mov
data16
push
jns
mov
rcll
cmp
jae
mov
inc
jg
inc
aam
cmc
xchg
push
xchg
adc
pop
dec
daa
jmp
ret
ret
fwait
iret
scas
iret
enter
sahf
ficompl
cmp
in
lds
in
add
and
jae
dec
xor
enter
fldl
cld
sbb
insb
cmp
mov
inc
fmuls
cmp
cmp
ljmp
push
cmpsl
popf
push
hlt
shlb
jg
jmp
push
imul
movl
and
outsb
add
data16
push
cmp
fucomip
decl
stc
mov
pop
push
xor
xchg
in
cli
test
jno
mov
mov
ret
cmp
arpl
arpl
push
jns
fstpl
mov
cltd
ds
mov
dec
xor
enter
out
xchg
ret
call
scas
adc
inc
add
ljmp
or
cli
lcall
or
add
adc
or
or
or
decl
stos
pop
int
ljmp
daa
test
and
jbe
jecxz
mov
add
outsb
cmpsl
xchg
popf
popf
mov
call
out
and
push
inc
inc
pushl
stos
lds
inc
cld
adc
insb
icebp
pushl
loop
sub
mov
mul
mov
or
popa
inc
fistps
add
in
fwait
lahf
inc
fnstsw
call
cmp
mov
mov
in
sub
lahf
lcall
or
fwait
pop
jecxz
mov
int
je
mov
leave
fbstp
dec
roll
pushl
jmp
xchg
dec
push
pop
aaa
jns
push
sub
fdivrs
ljmp
fcoms
nop
ss
aaa
and
fstpl
xchg
ud0
aad
mov
mov
sub
mov
hlt
lods
decb
mov
shrb
add
decl
mov
add
cmp
cld
dec
test
outsb
cmp
sub
fnstsw
call
or
imul
jecxz
iret
ja
mov
btsl
les
jl
out
cmp
cmp
enter
mov
pop
incb
scas
push
lods
adc
cmp
sahf
mov
mov
jmp
dec
mull
jne
mov
xchg
xchg
xchg
test
test
out
cltd
cltd
in
sub
arpl
clc
lods
pop
out
sub
stos
jg
lcall
adc
sar
dec
stos
movsl
and
or
scas
mov
mov
pop
push
and
ror
mov
incl
xchg
ljmp
sbb
jge
inc
and
or
je
aam
repnz
xchg
or
sti
pop
adc
dec
inc
nop
es
mov
and
add
mov
jmp
cmp
aam
leave
icebp
pop
mov
pop
les
rorb
faddl
call
sub
sbb
loopne
sub
call
orl
fisubs
fistl
xlat
cmc
mov
enter
scas
sti
lcall
cld
jg
fdecstp
mov
sub
out
iret
fcomps
or
dec
repz
jg
pop
sub
push
cmp
ret
add
add
outsl
sub
inc
xor
hlt
jnp
addr16
sub
dec
mov
hlt
jb
sahf
movsl
mov
mov
aaa
inc
xchg
jae
in
jecxz
lock
fisubrs
ljmp
xlat
loope
pushf
inc
cmp
add
outsb
mov
xchg
xor
incl
in
mov
mov
cmp
jae
ret
push
jle
icebp
enter
fstps
and
pop
jns
push
rcrl
mov
ret
pop
int3
push
add
jge
popa
jne,pt
cmpsl
cmp
ljmp
popf
sbb
call
out
mov
mov
xor
aad
cli
mov
enter
xor
sbb
inc
and
cmp
lcall
mov
xor
inc
push
jge
adc
jno
rcr
js
mov
dec
bound
xchg
add
mov
incl
jmp
sahf
xchg
subb
aaa
cmpsb
in
pushl
fwait
xchg
xchg
inc
mov
pmuludq
ja
outsl
ja
incl
ja
and
add
jge
popa
lret
insb
int3
cwtl
enter
mov
stc
popf
sti
fucomip
push
sub
add
aad
ficomps
enter
comiss
repz
ret
push
aad
or
fwait
xor
xchg
popf
call
hlt
dec
ljmp
lcall
cld
pop
int
test
dec
jmp
fidivl
cld
incb
test
sbb
lods
popf
jnp
mov
jno
pusha
call
xchg
push
sbb
lahf
jg
xchg
stos
and
rorb
shr
loop
icebp
inc
lahf
add
ljmp
sbb
ret
push
xchg
sahf
adc
fildl
mov
jle
ret
xor
das
mov
popa
clc
cmp
rcll
mov
dec
add
push
pop
push
je
or
imul
out
aam
orl
mov
sub
dec
push
cmp
and
push
testb
sbb
sbb
scas
jb
sub
push
jp
mov
hlt
push
xlat
leave
mov
sar
inc
clc
ja
popf
adc
cmp
popa
das
idiv
call
push
and
mov
jne
ret
sbb
pushl
imul
mov
setb
and
vpsrlw
cmc
xchg
int
mov
and
stos
lcall
xchg
enter
mov
push
lods
sub
das
mov
or
sarb
cs
mov
insb
fwait
fnstsw
jae
jns
test
xchg
jge
mov
aaa
inc
inc
mov
insl
push
mov
insb
cmpsb
push
aam
jne
icebp
mov
mov
sbb
je
xor
cli
mov
cs
and
in
jge
hlt
xor
sub
insl
and
pop
ret
movsb
mov
mov
jecxz
lds
fidivrl
pushf
enter
in
ja
fsts
test
pop
lock
jecxz
or
push
out
lock
or
ds
lcall
lcall
adc
pop
adc
movsb
mov
jbe
jle
stos
fnstcw
lods
add
mov
inc
leave
call
mov
sbb
adcl
add
cmp
push
cltd
fcoms
mov
or
sub
sbbl
xchg
jbe
xor
call
sahf
mov
pop
cmpl
out
in
lods
pop
call
and
xchg
sbb
decl
mov
xchg
jmp
aad
std
sahf
xor
push
loopne
loop
imul
jmp
mov
xor
cmp
mov
sti
add
mov
mov
dec
pushl
pushf
ds
sub
popf
repnz
shlb
scas
jmp
lods
inc
lods
sub
fadds
mov
inc
jecxz
stos
jno
outsl
std
inc
cmpsb
xchg
test
sub
sbb
aaa
mov
sbb
add
sbb
ljmp
test
fistps
jo
xchg
out
adc
mov
in
loope
call
std
pop
arpl
push
inc
test
jle
scas
mov
jg
lcall
insl
mov
sbb
inc
fsts
mov
dec
xor
imul
leave
in
out
mov
jne
and
mov
push
cmpsl
inc
inc
mov
add
adc
hlt
fmull
insl
sti
ss
in
ret
decb
jge
cmp
adcb
push
pop
or
movsb
data16
roll
xchg
data16
or
nop
push
push
scas
or
das
addl
or
div
pop
test
filds
sbbb
cli
movsl
cmc
xchg
into
out
adc
cmp
call
xchg
xlat
adc
pop
loop
jns
iret
lret
iret
mov
je
sbb
push
pop
xchg
add
mov
dec
dec
in
push
pop
cltd
mov
out
pop
xchg
cld
add
jg
faddl
mov
pop
inc
pop
cmp
div
pop
sub
test
dec
mov
xor
push
inc
and
insb
sbb
xchg
clc
push
in
fdivrl
lea
xor
push
jne
cs
movb
jp
add
or
mov
ret
mov
inc
dec
jp
pop
cld
incl
repnz
addl
xlat
rorl
subl
mov
xchg
mov
mov
leave
add
cmp
dec
adc
or
dec
shl
movsl
inc
fidivl
cs
test
fildl
xchg
fcompl
rorb
pop
into
pop
mov
or
and
or
push
call
jmp
in
sbb
sbb
rcll
imul
sbb
incl
adc
push
ficoml
repz
mov
outsb
sarl
lcall
enter
or
xchg
bound
ds
sub
xchg
sbb
mov
daa
lret
rcr
or
daa
leave
rorb
and
loope
lcall
push
or
ret
sub
shlb
pop
movsb
sub
loope
push
jp
arpl
pop
mov
in
dec
fucomi
cmp
mov
add
pop
outsb
jmp
adc
divb
cmp
inc
cwtl
pop
lds
pushf
repz
pushl
loopne
test
pop
cld
and
out
in
lcall
xor
lds
push
push
fldenv
push
std
or
pop
pop
mov
aaa
stc
orl
das
icebp
mov
xor
out
insl
ss
jnp
mov
aad
sub
in
call
aam
rcll
mov
pop
out
lcall
pop
inc
dec
dec
sbb
jecxz
ret
jp
inc
lgs
or
insl
clc
jne
shrb
sub
incl
pop
mov
jno
out
sbb
mov
adc
sub
movsb
insb
push
xor
sbb
jmp
pusha
std
or
in
pop
stos
xchg
in
cmp
xlat
cmpsb
insb
inc
xchg
sub
into
or
loope
mov
jmp
enter
inc
ficoms
stc
stos
sub
cwtl
jo
stos
daa
xchg
jg
enter
xchg
adc
jb
inc
push
cmp
cltd
mov
call
fistpll
inc
jno
addl
icebp
push
add
out
sahf
adc
test
call
sar
call
cmpsb
cmp
nop
int
fs
test
jnp
mov
lcall
test
mov
dec
pushf
jle
pop
outsb
lret
push
js
cmpsl
frstor
incl
cmp
xchg
adc
mov
fistps
fadd
and
lds
pop
loopne
pushl
ja
pushf
and
jno
sbb
xchg
sti
dec
je
pop
cmpsl
pop
push
fucomip
and
mov
lds
cmp
call
arpl
sub
in
fmull
xchg
clc
xor
out
mov
pop
bound
int
les
lret
movsb
cmp
add
lcall
jae
fsubs
icebp
dec
test
jecxz
fdivs
adc
mov
scas
push
ljmp
icebp
nop
jne
push
ret
or
pop
mov
pop
mov
mov
lods
xchg
adc
push
scas
and
notrack
mov
stos
inc
iret
cli
pop
insb
loop
dec
push
inc
lea
mov
xchg
call
jb
loopne
outsb
inc
jns
pushf
into
stc
out
lds
pop
lret
repnz
and
xchg
cmp
cld
jmp
mov
inc
and
aad
mov
incl
lcall
fistl
sub
call
rorb
sbb
cmp
pop
fucom
call
dec
adc
leave
outsl
ret
mov
test
inc
sbb
sub
dec
pop
mov
hlt
mov
lock
or
into
mov
enter
mov
cld
nop
js
lock
inc
and
adc
stos
test
cwtl
mov
push
repz
pushl
test
mov
fstpl
mov
xor
jecxz
mov
decl
jb
stos
sahf
sbb
test
cmc
cmp
std
mov
and
cmpsl
sbb
mov
xlat
xor
and
ljmp
sbbl
xchg
or
xchg
dec
repz
lcall
sub
or
sbb
inc
clc
push
push
sub
incl
push
pop
sub
rorb
sbb
mov
shrb
mov
jmp
xacquire
push
push
xchg
inc
dec
jns
insb
xchg
sub
xlat
test
xor
nop
mov
jecxz
stos
lcall
loope
popf
nop
stc
cmp
in
jmp
inc
out
fwait
aad
adc
stos
and
cmp
jecxz
dec
cmp
dec
loopne
pop
arpl
sub
sub
pop
ljmp
xchg
ljmp
push
sbb
sbb
ljmp
ja
mov
aad
std
push
outsb
inc
jmp
sti
or
ds
inc
int3
xchg
jmp
out
dec
sub
mov
lds
sbb
cmpsl
addr16
decl
iret
mov
cltd
repnz
jge
push
push
notb
loope
dec
mov
mov
int3
mov
mov
outsl
mov
in
test
push
mov
sahf
jle
mov
ljmp
ljmp
jb
jmp
rclb
cwtl
lea
sbb
cmc
cmc
mov
int
inc
mov
clc
mov
movsl
and
jg
mov
and
or
dec
jge
dec
adc
xor
add
pop
bound
aam
lahf
and
jmp
xor
stos
fnstsw
lahf
pop
insb
dec
hlt
shr
add
sub
in
outsl
loope
ljmp
lods
test
aad
mov
mov
adc
incl
xchg
cmp
ljmp
xchg
xchg
in
xor
cli
dec
push
popa
jmp
out
mov
jecxz
scas
stos
pushl
mov
add
daa
insb
mov
sub
cltd
iret
in
loope
and
cli
cltd
faddp
sti
mov
testb
inc
and
cmc
jg
and
sbb
xor
xorl
push
orb
decl
icebp
jp
cmp
ss
push
add
sub
jne
inc
cmp
test
clc
jmp
inc
xor
aam
mov
dec
or
test
aaa
pop
fsubp
xor
clc
mov
incl
add
lods
dec
clc
cltd
pushf
adc
pop
insl
repz
mov
clc
vcvttss2si
mov
test
lods
divb
outsl
cmc
lods
fwait
nop
jmp
clc
jp
or
aas
lock
incl
mov
cmp
or
push
outsb
test
mov
jmp
pop
push
sub
lahf
stc
xlat
and
push
sub
sti
repnz
lahf
and
xor
push
add
jbe
outsb
mov
lcall
sub
js
aad
cmpl
loopne
es
jecxz
hlt
das
shrd
dec
mov
push
fucomip
decl
adc
jp
push
sub
adc
insl
iret
popf
add
cs
pushl
xor
pop
aaa
and
fisubrl
inc
xchg
mov
lret
and
test
rolb
stos
lods
mov
jg
jle
sbb
idiv
aas
sbb
test
mov
and
out
mov
push
mov
lods
ss
repz
lcall
std
inc
mov
xor
out
sub
inc
sub
mov
sub
out
and
cmc
jmp
add
movsl
pop
xor
fs
nop
inc
xchg
rcrb
sub
hlt
aaa
mov
in
dec
jecxz
push
test
jg
lret
cmpsb
or
imul
out
jbe
push
popf
pop
das
repnz
mov
adc
push
pop
loopne
cmc
mov
jl
push
jge
aad
jmp
addr16
je
sarb
cmpb
nop
jo
push
inc
hlt
pushl
pop
cmp
mov
cli
adc
loop
adc
or
not
nop
orl
ljmp
loope
rclb
mov
or
adc
addr16
ljmp
mov
xor
cmpsl
pop
mov
scas
fs
aas
aad
xlat
sub
test
dec
push
hlt
scas
or
mov
push
enter
jmp
pop
loop
mov
sub
js
and
outsl
jnp
mov
sar
lock
jp
jns
into
sbb
jg
push
lcall
cmpsb
out
stos
sub
cmc
repz
cmp
loop
adc
jg
cmp
outsb
pop
ljmp
dec
push
cmp
das
or
xor
std
pop
sub
xchg
fnstsw
cmp
mov
repnz
inc
bound
cli
pop
fwait
roll
in
dec
orl
aas
std
pop
out
call
ljmp
add
sub
mov
pop
jno
ds
enter
aaa
mov
mov
cmp
mov
pop
sbb
mov
adc
sti
call
inc
decl
scas
icebp
stc
add
and
pop
mov
lahf
mov
mov
inc
cwtl
test
lods
pop
popf
imul
dec
lahf
in
cmp
pop
jno
mov
jl
push
push
int
lret
stc
pop
sub
addps
push
fucomip
fisttpll
icebp
outsb
jl
add
add
call
call
and
adc
fsubrs
push
xchg
notl
out
insb
cli
and
cmp
jg
mov
aaa
cli
jmp
push
mov
movsl
sbb
outsl
fwait
xlat
mov
cli
xchg
cltd
bound
das
jl
repnz
inc
inc
jg
pop
clc
pop
shrl
nop
mov
cmp
fldenv
enter
push
add
and
outsl
jg
cli
mull
jo
enter
dec
imul
cs
or
scas
rcll
test
and
cltd
rcrb
aam
insl
push
decb
push
mov
ljmp
push
mov
divl
loop
xlat
mov
fldenv
icebp
inc
pop
adc
pushf
xchg
jno
xchg
and
ljmp
and
repnz
lea
mov
rorl
xchg
adc
mov
cmp
int3
ficoms
mov
or
lea
stos
xchg
push
insl
push
inc
mov
mov
jbe
sti
push
mov
ret
xor
pop
lods
dec
sbb
das
inc
hlt
setg
jge
dec
xor
scas
jp
cmp
clc
mov
pushf
gs
ret
mov
push
sbb
lods
or
pop
add
arpl
or
test
lret
add
mov
rorl
and
jno
sahf
xchg
sub
jle
decl
fs
loopne
lcall
insb
lock
clc
sbb
inc
cmc
dec
or
add
mov
inc
insb
loop
push
fisttps
in
xchg
pop
pop
lret
dec
stos
aad
xor
xor
mov
sbb
push
dec
icebp
jmp
loopne
jno
ljmp
outsb
scas
vpextrw
lds
jmp
mov
inc
push
aad
cmp
cli
pop
ljmp
mov
dec
lock
jmp
xor
es
lahf
fisttps
adc
in
add
inc
adc
rorb
dec
jle
inc
decl
cld
and
dec
comiss
das
mov
das
cmc
push
push
inc
cmp
movsl
js
loopne
pop
xorl
cltd
lcall
je
pop
gs
push
cwtl
sbb
aad
and
push
sahf
std
pushl
in
mov
scas
daa
cmc
cmp
loope
pop
sti
faddl
pop
and
and
mov
nop
cmp
mov
mov
filds
ret
mov
std
lcall
add
cmp
mov
decl
sub
jle
roll
push
cmc
aas
fildll
out
cli
sahf
lret
add
inc
xchg
push
inc
cld
sbb
xchg
mov
xor
fistpll
ror
jae
adc
dec
mov
jmp
mov
scas
cmpsl
add
and
aam
imul
push
cmpsb
mov
xchg
pop
cli
outsl
cld
jmp
lods
xchg
dec
sub
cs
repz
jae
add
das
adc
outsb
adc
inc
pop
ds
push
mov
call
cli
decl
addb
mov
outsl
or
mov
aam
jl
lcall
adc
xchg
ljmp
pushf
or
mov
lcall
mov
imul
or
and
jecxz
cld
mov
sbb
ljmp
pop
call
and
adc
lahf
rcll
adc
pushl
xor
jns
pop
xchg
sbbb
cwtl
cmp
loopne
cld
ret
xchg
fidivs
nop
fs
sbb
lods
enter
icebp
fcomip
jnp
test
loop
adc
cmp
jg
mov
pop
push
decl
and
repnz
inc
scas
mov
mov
dec
test
fidivl
call
mov
xor
mov
sub
jnp
out
mov
testb
incl
inc
mov
rcl
lahf
jp
out
adc
stc
cmp
fildl
jne
rep
das
cld
ljmp
insb
jg
stc
and
jg
xchg
repz
mov
pop
jnp
mov
mov
sahf
jmp
mov
lds
mov
insl
icebp
ljmp
ss
mov
jmp
mov
rcrb
xor
call
adc
scas
sbb
in
rolb
pop
push
lahf
insb
and
or
jne
loopne
cmc
mov
aas
cwtl
aad
stos
jnp
mov
stos
add
inc
mov
xchg
mov
add
out
pushf
shll
or
daa
fnstsw
call
fwait
scas
mov
pop
lods
inc
mov
out
pop
mov
dec
inc
adc
or
pop
mov
daa
push
cmpsb
push
fsubr
call
cmp
inc
sar
aam
rorb
adc
shll
jmp
incl
hlt
js
fs
lds
ret
icebp
jmp
inc
mov
xchg
rcr
cmc
aad
loop
mov
jge
ljmp
ss
js
orl
loopne
jmp
cmpl
rcrb
adc
adc
adcl
and
cli
fstpt
andb
mov
pusha
loopne
dec
and
pushl
cmc
imul
int3
pushf
inc
jne
and
push
mov
lock
cwtl
sub
call
fisttpll
xorl
out
add
cmp
sub
push
mov
pushl
adc
aad
fs
stc
fldl
mov
cmp
dec
cli
adc
cli
jle
loop
inc
incb
clc
sbb
and
xor
cmpsb
scas
xchg
sub
outsl
std
add
cmp
fildl
js
pop
loop
push
jmp
jae
and
xchg
in
stos
stos
fwait
movsb
outsl
adc
jmp
call
ljmp
test
mov
out
scas
lcall
or
jo
out
jg
xor
sbb
loope
call
cmp
cmpsb
jl
fmull
arpl
imul
lock
cmpsl
loope
pop
fbstp
mov
lcall
sub
pusha
sub
mov
lea
sbb
cmp
decl
mov
add
push
movsl
pop
mov
cld
mov
int3
daa
in
dec
out
inc
fsts
xchg
mov
incl
pop
es
ret
test
call
and
imul
inc
or
pushl
pushf
jg
out
loopne
stos
mov
cmp
in
dec
sti
test
push
test
push
add
adc
aas
sti
mov
cmpsb
lret
in
negb
and
out
and
pushl
inc
imul
add
xchg
sbb
cmp
dec
loop
push
dec
pop
cmp
inc
imul
fcmovbe
pop
mov
in
subl
ljmp
fisubrl
fildll
rclb
push
xor
les
insb
jno
mov
adc
dec
aam
add
xchg
pusha
in
pop
or
shlb
jmp
int
in
lcall
push
aam
inc
sub
xchg
dec
push
in
xlat
mov
lcall
cs
dec
xchg
mov
mov
cmp
gs
or
imul
jg
test
mov
stos
int3
insb
lcall
fbld
cmpb
idiv
int3
shl
jmp
xchg
sbbb
push
andl
loop
call
lret
lahf
popf
decb
sub
in
sar
xchg
clc
cmp
imul
scas
das
pop
jbe
aas
inc
lods
cltd
std
adc
mov
cli
incl
inc
stc
test
ja
pop
out
les
and
stc
mulb
dec
sahf
or
dec
andl
lea
sbb
jge
xchg
xlat
out
inc
fs
das
hlt
mov
adcb
mov
xchg
stc
pop
push
or
hlt
xor
sbb
rcrb
mov
pusha
pop
in
jmp
cvtps2pd
and
jg
jp
fs
inc
decl
cld
leave
test
push
adc
inc
jge
bound
mov
inc
dec
mov
pop
sub
mov
lret
or
adc
jbe
ss
push
push
iret
mov
dec
leave
into
add
mov
fs
call
icebp
mov
das
mov
je
mov
sub
jne
lea
xchg
push
pop
js
mov
mov
call
jle
dec
xchg
or
gs
add
ficomps
out
out
test
outsl
hlt
mov
mov
lods
hlt
es
xor
call
js
ja
out
fnstenv
or
ja
popa
xorb
lcall
ljmp
push
xchg
xchg
jp
inc
xchg
add
ficomps
xchg
mov
test
in
outsb
fldln2
pop
mov
enter
mov
dec
and
lcall
out
mov
das
or
xchg
fdivr
ljmp
xor
popf
cld
out
push
jmp
js
mov
jg
out
cmp
cltd
cmp
cli
or
inc
lock
lock
xor
outsb
popf
pop
mov
loopne
fs
mov
shrl
mov
cltd
dec
movsbl
dec
repz
sbb
decl
sti
movsb
cmc
adc
cmp
das
icebp
repnz
test
inc
pop
add
sub
xchg
and
push
xchg
mov
stc
pop
je
pop
jbe
inc
jg
aaa
pop
jo
scas
xchg
ljmp
mov
incl
jecxz
sti
clc
stos
dec
adc
jnp
push
into
ds
mov
dec
cmpsl
mov
cmp
cmc
jecxz
test
shl
ljmp
pop
cmpsb
pusha
pop
out
cli
nop
mov
bound
arpl
bnd
in
leave
dec
pop
or
ljmp
fnstsw
orb
or
mov
test
lock
xlat
push
sarb
mov
ljmp
fwait
out
mov
xorb
inc
cmc
or
in
aam
rcrb
xor
fcomp
or
inc
movsb
cmp
orb
jno
push
pop
and
push
or
push
aas
push
xchg
cld
cld
fs
mov
push
pop
and
std
call
push
xchg
jnp
pop
inc
cltd
cmp
jg,pn
adc
xor
dec
testb
decl
std
xchg
and
mov
push
pop
mov
pop
dec
cmp
cmp
pop
insb
mov
ljmp
adc
insl
mov
xchg
je
xchg
in
lds
xor
lret
jp
int
xchg
pop
divl
mov
fildll
leave
xor
mov
mov
push
addr16
gs
pop
out
jne
jo
push
mov
mov
inc
add
hlt
inc
call
fwait
rcr
sti
mov
lea
sbb
arpl
and
outsl
hlt
cmc
pop
cmp
lret
loope
mov
mov
push
lret
mov
decl
adc
inc
test
lret
and
jg
pop
ja
xlat
jo
pop
lcall
dec
pop
cmp
dec
push
fdivrs
cwtl
jnp
repnz
les
stos
addr16
mov
mov
sub
movsb
jg
cld
push
in
dec
aam
fcomp
loop
or
shr
push
xchg
movsl
and
jp
mov
idivb
dec
movsb
lret
push
addr16
leave
int3
xor
cltd
outsb
push
push
leave
jb
lock
adc
inc
dec
outsl
cmp
pop
ljmp
jl
daa
push
in
jmp
xor
xchg
mov
jbe
insb
or
mov
dec
imul
jmp
pushl
xor
arpl
scas
jecxz
insb
cmp
pop
add
jo
loopne
fists
out
mov
out
pop
roll
int3
jge
sahf
jg
enter
dec
loope
jno
adcl
xchg
or
mov
mov
sub
dec
mov
cmpsb
mov
mov
testl
and
fidivrs
cld
dec
js
jg
mov
test
ret
call
aaa
pop
lcall
lods
add
pop
inc
mov
cmp
in
jmp
ss
push
cmpsb
push
and
pop
daa
cmp
push
mov
outsb
sti
mov
sbb
mov
ret
shlb
popf
sbb
decl
out
inc
or
and
xchg
mov
pop
mov
adc
clc
cmpsb
mov
call
pop
and
test
inc
pop
cs
test
sub
lcall
aaa
imul
imul
sbb
sahf
sbb
adc
push
push
flds
adc
fucomip
call
out
ret
and
mov
mov
adc
dec
cmpsb
and
jle
pop
xor
xchg
les
add
fucomip
decl
scas
sub
inc
arpl
mov
daa
sbb
addl
loop
scas
jg
in
pop
pop
mov
sub
in
in
decl
push
sbb
vmptrst
std
push
push
dec
aaa
cmpsl
std
xor
sar
mov
shl
je
sbb
inc
pop
xor
cmc
sbb
idiv
jmp
jne
mov
sub
cld
jo
icebp
push
mov
call
imul
pop
sbbb
mov
mov
mov
pop
jb
and
fidivs
cmp
xor
lds
mov
push
bound
push
sar
ljmp
clc
sub
xchg
lcall
cmpl
or
ret
pop
cmp
xor
mov
test
jmp
aaa
adc
pop
or
das
add
jb
orb
cmp
mov
mov
or
add
inc
icebp
ss
mov
pushl
iret
adc
push
cmp
sub
fiaddl
adc
dec
ljmp
lcall
mov
or
dec
mov
scas
cwtl
cwtl
pop
lods
xchg
inc
or
fcmovne
add
cmp
stos
ljmp
adc
push
mov
or
imul
fisubl
adc
subb
cmp
stc
pop
sbb
cmp
int
fcomip
gs
xor
and
sarl
cmp
mov
ret
ljmp
pop
arpl
push
and
xchg
iret
repz
add
mov
iret
test
jmp
mov
push
dec
inc
jb
rcrl
mov
adc
mov
mov
js
lds
js
lcall
add
inc
sub
test
test
xor
dec
fwait
dec
mov
cmp
call
and
cwtl
lds
jge
push
mov
icebp
add
xchg
jg
loopew
mov
call
jecxz
fisubs
or
adc
pop
roll
jl
enter
adc
dec
xchg
lret
ja
data16
cmp
test
cmp
pushl
jno
push
mov
ss
popf
int
add
lahf
orl
leave
sar
ljmp
dec
out
stc
push
cmp
xchg
sub
mov
cmc
ljmp
mov
stc
sbb
or
iret
stos
cmpsb
add
subl
push
add
iret
popf
pop
int3
nop
pop
adc
push
fnstsw
dec
mov
aas
filds
jecxz
push
sti
jb
popf
mov
mov
stos
rcr
xchg
add
mov
icebp
jnp
sbb
icebp
dec
pop
pop
mov
aad
sti
cltd
push
lock
inc
lea
add
ja
mov
insl
push
lcall
fs
mov
rcll
add
clc
or
dec
mov
rorb
jge
test
decl
imul
xchg
dec
nop
leave
cli
cli
gs
jecxz
jle
out
pop
in
jle
or
stos
data16
clc
dec
movsl
aas
icebp
pop
adc
lds
int3
outsb
out
xor
call
pushl
pop
stc
rclb
lock
arpl
leave
out
loopne
xor
es
pusha
scas
lcall
lcall
loopne
sbb
mov
xchg
stos
dec
mov
push
xor
cli
sti
aas
adc
mov
mov
xor
lret
push
inc
in
cmp
sub
movsb
mov
mov
clc
inc
sbb
or
dec
pop
lcall
lea
push
push
decl
sbb
and
pop
call
cld
mov
mov
sub
pop
mov
and
ljmp
xor
scas
scas
outsl
sbb
sub
mov
repz
xchg
ss
mov
stos
sub
lds
cmp
mov
sub
xchg
lret
xor
jg
push
sbb
test
mov
pop
push
ss
ss
inc
mov
or
lods
pop
ja
cwtl
loope
push
int3
dec
les
clc
out
push
mov
and
movsl
incl
cld
enter
jbe
xchg
push
push
add
lret
or
jecxz
push
add
jo
xlat
and
dec
imul
jg
mov
fcom
test
ljmp
int3
les
jmp
mov
lods
jne
push
testl
repnz
sbb
dec
sahf
add
sub
jmp
dec
decl
add
jp
mov
iret
iret
xor
jge
out
imul
xor
mov
xor
dec
bound
aad
cmp
test
mov
rcrl
dec
dec
jle
mov
sub
aaa
push
pop
clc
inc
in
cltd
test
dec
clc
sub
pop
repz
lcall
mov
cli
or
les
pop
int3
imul
mov
decl
fs
inc
arpl
sub
xchg
jge
shrl
sbb
pop
push
or
hlt
in
aas
aaa
inc
lret
mov
test
mov
pushf
pop
push
push
ror
gs
lods
fdivrl
cmp
es
pushf
incl
xor
or
mov
cmc
adc
test
popa
dec
shrb
dec
ljmp
push
jne
inc
add
fildll
cmc
inc
push
call
inc
data16
add
fldl2t
pop
dec
popf
test
pop
pop
push
stos
lret
cmpsl
pop
cli
pop
mov
mov
xor
mov
cmp
and
mov
rcrl
pop
and
jmp
push
movsl
jle
mov
gs
cltd
decl
mov
sub
xchg
lods
pop
inc
sbb
sahf
shlb
xor
inc
fisttpl
jl
inc
stc
inc
idivb
inc
es
add
mov
call
jg
cli
cmp
inc
mov
push
sub
jle,pt
mov
pop
pop
call
out
dec
mov
push
ficoms
cltd
fs
push
pushf
arpl
shl
std
stos
xchg
lods
data16
push
push
push
mov
cmpsb
fs
sbb
lock
loope
icebp
rcrb
and
fwait
hlt
insb
mov
movl
in
das
sarl
cwtl
cmpsb
test
mov
jmp
cmp
inc
leave
cmp
imul
lret
out
push
sbbl
jecxz
aaa
xorl
pop
cli
pop
lea
pop
popa
mov
stos
push
add
sub
mov
and
pop
or
scas
outsl
push
test
test
lcall
inc
sub
add
cmp
and
lods
lods
scas
inc
jg
jle
and
fistpll
add
inc
hlt
xchg
aam
cmp
das
icebp
decl
push
jge
sbb
daa
int
mov
fnsave
mov
fisttpl
mov
pop
mov
ret
pop
mov
cmpsb
jg
fildl
in
mov
mov
sbb
adc
adc
pushl
js
pop
pop
out
ja
int3
pop
loop
mov
sub
fmulp
adc
jg
pop
xor
lret
mov
ljmp
ret
test
dec
add
pop
iret
sbb
decl
xor
mov
xorb
mov
push
hlt
lea
sbb
push
xor
jle
sahf
hlt
ljmp
pop
mov
leave
gs
insl
lods
cmpsb
xlat
test
ljmp
in
push
adc
jne
push
mov
inc
rcrb
pop
lock
lcall
xor
sbb
dec
pushf
shll
loope
popa
mov
hlt
das
cld
adc
xor
je
loopne
mov
int
shl
rcr
loopne
das
mov
mov
dec
jl
stc
inc
sbb
add
icebp
ds
jmp
fcmovnb
mov
rcl
push
fucomip
jae
int
cltd
jge
das
insl
mov
test
pop
out
insb
enter
or
call
jae
adc
adc
scas
pop
adc
mov
std
mov
icebp
add
xchg
mov
mov
movb
pushl
sub
decl
pushf
lcall
mov
pushl
xor
cmc
rclb
outsl
aad
call
mov
cmp
jmp
jecxz
lds
arpl
xor
sub
or
hlt
xor
test
jl
xchg
aaa
jb
sar
jg
js
loop
or
mov
sbb
pop
inc
push
or
push
ljmp
or
xor
mov
add
and
xor
mov
pop
jg
das
dec
out
and
out
mov
repz
mov
clc
jg
lods
mov
xor
inc
pop
gs
sub
incl
mov
dec
push
mov
js
xchg
in
mov
dec
cwtl
inc
sbb
mov
std
test
mov
lock
call
add
outsb
pusha
loopne
add
iret
xchg
ret
mov
fisttps
mov
adc
fidivrs
js
decl
sbb
inc
mov
les
pop
lods
jmp
mov
pop
dec
out
das
mov
aad
les
mov
inc
movl
rcrb
mov
mov
fiaddl
dec
lds
cli
lods
sbb
jmp
mov
inc
jle
xor
orb
push
aaa
aaa
xor
cmpsl
cmpl
outsl
sbb
xchg
fsubp
ljmp
fstl
cmp
sti
incl
decb
stos
cmp
loope
pop
inc
fcoml
andl
pop
std
jmp
movsb
push
loopne
sub
lods
add
push
sahf
int3
gs
pushl
leave
pop
pusha
add
inc
sbb
mov
int
mov
stos
sub
mov
insl
sbb
and
shll
test
loopne
lahf
fcmovnu
ror
pushf
push
ljmp
loop
aas
push
mov
jae
push
test
pop
and
inc
jge
jae
imulb
dec
rclb
jmp
push
mov
hlt
movb
mov
push
iret
sbb
or
enter
or
jno
xor
ljmp
inc
out
xchg
fldt
sbb
xor
js
popa
loopne
lcall
cmp
movsl
dec
xchg
pop
lcall
add
sti
nop
cmp
adc
movsl
lea
xchg
subl
outsl
std
mov
ret
push
mov
ret
or
into
pop
jmp
imul
or
add
popf
xchg
push
add
hlt
mov
inc
jb
lcall
or
add
mov
mov
lea
pop
addl
call
jns
mov
mov
dec
push
pop
mov
mov
mov
fbld
cmp
dec
fucomip
fucomip
mov
sbb
pop
in
fwait
int
mov
mov
lock
jnp
sti
push
fxch
popf
pop
sbb
test
lret
push
xchg
jg
jg
out
adc
ret
mov
mov
lods
popf
dec
mov
lret
call
sub
popa
adc
and
xchg
mov
lods
hlt
mov
call
mov
mov
jo
jno
xchg
xchg
fs
adc
ds
push
idiv
jge
jae
outsl
mov
shll
xchg
jno
pop
movsb
and
cltd
xor
adc
mov
loop
stos
xchg
stos
lcall
pop
add
mov
cli
aam
orb
imul
dec
add
mov
js
fnsave
cwtl
adc
jl
pop
pop
or
popa
das
jo
and
mov
inc
lds
sbb
sub
push
xor
scas
cwtl
out
mov
xchg
aaa
lret
jg
add
xor
mov
mov
mov
sbb
sarb
rorb
in
adc
cmp
stos
loope
sbb
pushl
rcr
xchg
lods
xor
imul
cmp
aaa
nop
inc
jo
lcall
ret
movb
rcrb
mov
cld
lcall
jns
fwait
sub
sha1nexte
jge
inc
push
ret
ljmp
push
aas
mov
push
push
jbe
push
xchg
xchg
and
pop
add
ret
pop
push
add
xor
aam
push
pop
dec
call
jg
cmc
pop
in
mov
imul
jg
dec
outsb
xchg
pushl
push
hlt
int
lods
push
hlt
cwtl
push
sbb
int3
xchg
jge
jns
lcall
fdivr
inc
std
jg
jge
mov
insl
outsl
push
pop
add
adc
shlb
repnz
sti
test
sbb
ret
or
fbstp
js
out
popa
adc
lcall
nop
fistpll
scas
inc
jmp
push
cmpl
mov
mov
push
jg
insl
bound
sub
daa
outsl
arpl
imul
add
ficoml
mov
aad
mov
lock
stc
jmp
jmp
loope
xchg
into
out
sub
mov
or
sub
in
cmp
decl
ljmp
cmc
or
into
insl
dec
lock
sub
or
jno
jle
cmpsl
ds
xchg
xor
pop
mov
and
call
mov
add
jle
notl
push
outsl
jg
rclb
lock
mov
in
loope
mov
ret
lds
mov
cmp
xor
mov
loop
or
and
ror
mov
std
and
jmp
push
push
dec
pusha
sub
test
push
pop
lret
xchg
push
pop
cld
pushl
call
jae
dec
bnd
push
das
cmc
push
mov
filds
pop
sbbl
xchg
test
jmp
das
shl
push
mov
mov
icebp
mov
mov
mov
cmp
jp
mov
jg
stos
ret
sub
repz
xchg
int3
inc
or
lds
jmp
loope
pop
lcall
cmc
xchg
shll
cmp
call
inc
cmp
scas
aam
test
mov
pop
ja
test
sub
jmp
sub
jl
lea
sbb
cltd
js
fmul
cs
lea
ret
sub
lahf
mov
out
test
mov
inc
mov
pop
lret
bound
mov
dec
ret
add
jne
sar
lcall
jle
jbe
jae
repnz
ss
jo
data16
ljmp
in
lods
adc
in
pop
insb
mov
adc
dec
stos
rclb
dec
adc
incb
jno
sarb
jae
inc
addb
xor
shrb
idiv
call
arpl
mov
gs
mov
fst
cmp
pop
mov
inc
das
hlt
call
icebp
mov
cmp
pop
ret
pop
roll
into
arpl
imul
mov
mov
xchg
les
push
ljmp
sbb
and
mov
mov
call
pop
inc
movsb
pop
xlat
sub
mov
sub
jg
xchg
pop
dec
pop
loopne
lods
xor
popa
inc
ja
xchg
xchg
push
mov
dec
in
push
dec
scas
lret
pop
das
xchg
pop
pop
roll
lcall
test
xchg
repz
loopne
das
cmc
ret
cwtl
test
mov
negl
mov
incl
pop
jle
add
ficoml
mov
or
adcl
lret
arpl
jg
icebp
sbb
icebp
scas
push
xchg
add
pop
pop
add
jge
mov
fsub
sub
std
sti
xor
jle
push
cmpsb
mov
pop
adcb
aam
mov
mov
xchg
cmp
test
mov
mov
test
jne
outsl
sub
or
ret
in
sbb
pop
xchg
add
out
hlt
push
adc
and
adc
sub
ljmp
or
dec
fbld
xchg
mov
inc
xor
mov
xchg
add
xchg
mov
xchg
movsl
sbb
hlt
decl
pop
daa
jne
jmp
and
xor
pop
dec
and
js
push
sar
mov
xchg
push
push
push
pop
cmpsb
ds
cwtl
dec
loopne
mov
cmp
push
outsl
hlt
pushl
add
cmp
xlat
lock
mov
incl
jno
jo
push
push
aad
movsl
cmp
rclb
mov
add
dec
testl
aaa
aam
jbe
cltd
lcall
inc
jg
push
sahf
lcall
sti
outsb
xor
add
cmp
flds
jns
lcall
xor
outsl
mov
shlb
jmp
ljmp
lock
mov
mov
mov
push
stc
adc
push
idivl
movsb
jb
ljmp
jl
pop
jmp
mov
repz
adc
imul
fdivrs
std
call
jns
lds
inc
or
adc
andb
lock
shlb
stos
incb
cli
dec
adc
push
push
xor
or
pop
cld
sub
xor
mov
sub
xchg
mov
and
cwtl
setae
xor
xchg
ljmp
insb
pop
stos
mov
cltd
movsb
stos
sbb
test
and
or
inc
xor
rorb
aam
pusha
push
lahf
stos
outsb
shl
stc
stos
sbb
sti
mov
sub
test
cmp
fwait
pop
push
out
enter
jp
sub
pushl
pop
push
mov
adc
pop
lahf
mov
mov
call
es
adc
inc
push
shlb
fisubs
xor
mov
sarl
jbe
mov
ret
add
shr
shll
scas
and
pushl
add
popa
movsb
mov
dec
out
clc
xor
loopne
call
pop
pop
lds
mov
test
ret
jne
push
addr16
inc
ljmp
mov
and
adcl
xchg
std
and
xor
lcall
inc
outsb
xchg
pusha
dec
lret
rcrl
dec
cmc
mov
cld
jmp
clc
jmp
push
push
pop
mov
lds
inc
add
js
fcmovbe
mov
fisttps
pand
js
add
icebp
sub
clc
incl
jl
sbb
shll
pop
cld
push
pop
push
jae
mov
mov
insb
pushl
or
bound
xchg
push
jmp
add
adc
and
sub
sub
ljmpw
les
pop
push
aas
js
jge
call
jp
jg
ret
xchg
in
popa
lcall
repnz
ljmp
xchg
mov
mov
fisttps
in
cmp
inc
mov
data16
ljmp
push
and
sahf
xor
fcompl
xchg
cmp
int
loopne
mov
repz
cmp
and
jb
push
mov
adcb
sub
decl
shll
lret
bndstx
inc
add
dec
push
nop
subl
push
ljmp
lret
mov
fsubr
mov
dec
inc
xchg
insl
in
es
fists
sti
xchg
jp
rolb
push
mov
adc
add
sbbl
pop
clc
jg
leave
dec
and
mov
les
and
fiaddl
jmp
addr16
cmpxchg
test
and
adc
mov
orb
pop
not
add
pushf
inc
cld
call
and
dec
lret
in
or
and
mov
rol
fists
adc
sbb
mov
xchg
inc
rcll
cmpsl
mov
cli
fnop
outsl
icebp
call
mov
nop
adc
mov
cs
pop
mov
add
adc
call
dec
pusha
jno
subb
push
cmpsb
and
in
shll
ljmp
notb
xchg
mov
mov
insl
int3
call
jmp
in
cli
arpl
add
mov
test
test
mov
jb
add
sti
inc
daa
mov
mov
xor
mov
inc
mov
repnz
movl
iret
jae
jmp
mov
mov
divl
adc
pop
daa
js
cmp
in
jmp
outsl
lock
mov
add
inc
sti
lret
decl
sbb
rorl
jnp
sarl
push
lcall
mov
hlt
mov
js
add
push
cmp
pop
ljmp
jbe
int3
sbb
mov
hlt
adc
rolb
mov
call
xchg
mov
imul
sub
test
stos
imul
pusha
dec
pop
and
mov
mov
addl
dec
stos
sbb
mov
jg
arpl
xor
xchg
fmull
lods
sub
or
sbb
mov
fbstp
mov
push
aaa
mov
pop
jg
out
mov
iret
add
das
js
mov
jle
sub
in
xor
jle
xchg
jmp
imul
sub
daa
fildl
pop
cld
mov
and
cmp
incl
adc
addr16
mov
and
lds
arpl
stos
fdivr
push
lret
xchg
rolb
push
lcall
mov
nop
adcb
clc
scas
repnz
lods
and
lret
add
xor
pop
pop
dec
lods
push
std
sbb
loopne
leave
pop
cmp
outsb
enter
int
jg
jmp
push
sub
notl
mov
test
inc
sbb
mov
movsl
pushl
or
mov
insl
in
mov
std
fsub
push
lods
enter
pushf
mov
fiaddl
popa
out
aaa
fstpl
out
shlb
incl
push
xchg
and
dec
lahf
and
add
aaa
sub
mov
cs
lods
pop
ret
shlb
pusha
sub
fcomps
daa
cmpsl
adc
or
sti
jecxz
lahf
ds
int3
call
lock
xchg
add
addr16
xchg
daa
adc
outsl
stos
les
stos
out
shl
filds
sub
mov
lret
xor
test
jge
push
push
scas
loop
sbb
aas
pop
adc
jg
adc
int3
and
pushl
clc
lock
int
mov
lret
inc
inc
xchg
sub
aaa
mov
enter
sub
ds
add
aad
xchg
lds
jge
fisubl
pop
mov
xor
push
xor
or
inc
pop
mov
sub
repz
and
data16
ljmp
mov
jmp
pop
mov
movsb
push
rcl
and
sbb
or
cltd
lret
xor
mov
or
movsb
in
lds
cwtl
pop
cmp
les
jnp
lcall
mov
js
mov
adc
ds
jg
mov
mov
test
js
push
rcll
push
dec
jnp
loopne
filds
ror
iret
lock
sbb
mov
lds
enter
add
dec
test
jecxz
xor
jnp
mov
pusha
test
fidivrl
inc
jnp
not
mov
push
incl
inc
int
pop
cli
loope
cld
out
and
or
dec
inc
mov
repz
cmp
push
aam
fcomp
and
je
mov
mov
pop
and
iret
xlat
jmp
jmp
stc
adc
push
fnstsw
pop
add
pop
fdivrs
test
cli
jae
lods
adc
jg
adc
cmp
das
jae
leave
pop
jle
pop
jae
pusha
pop
jne
jg
pop
push
jg
subl
loop
sub
shr
loopne
add
addl
inc
sbb
push
popa
pushl
mov
mov
adc
sub
adc
mov
adc
sub
xor
push
sbb
fldlg2
mov
testl
xchg
bound
int
sbb
rcll
or
inc
inc
call
arpl
pop
cmp
sbb
and
cmp
lods
repz
in
in
sbb
fs
lcall
cmp
ss
mov
stos
dec
xchg
addr16
bound
sub
addr16
es
jmp
or
jecxz
leave
ret
es
jmp
cmp
lret
mov
loope
mov
mov
lods
adc
ja
inc
sbb
mov
fidivrl
mov
faddl
mov
pusha
mov
dec
sub
sbb
push
call
enter
pop
cmpsl
pop
icebp
jns
sbb
call
mov
rsqrtps
jne
xchg
sbb
push
push
popf
scas
rorl
out
sub
sbb
rcl
ljmp
iret
nop
ret
jge
bound
sarl
mov
push
outsl
mov
ret
cmpsl
leave
ja
das
call
lret
push
jg
decl
xchg
or
pop
mov
in
or
pop
and
decl
cmp
mov
fildll
sbb
sub
das
cmc
pop
fistpl
stc
pop
jecxz
scas
mov
mov
stc
mov
ljmp
sbb
adc
loope
or
call
out
in
cmp
jmp
adc
popa
testl
add
movsb
pop
repz
push
ljmp
ljmp
or
int3
std
idivl
js
jecxz
in
scas
repnz
fdivr
mov
or
and
adc
mov
pop
dec
sahf
lods
and
pushf
aad
lods
loop
in
push
fwait
inc
push
je
sbb
and
push
mov
pop
xchg
pusha
out
mov
push
sbb
es
das
icebp
pushl
sar
jne
jl
ret
pop
je
push
cltd
mov
sub
mov
getsec
pop
inc
outsb
lods
mov
daa
jecxz
inc
lods
mov
pop
pop
aas
sub
stos
jg
push
dec
test
cltd
ss
scas
pop
lds
sbb
cmp
jg
mov
jp
fsts
fiaddl
fsubl
or
or
mov
incl
cmp
sub
enter
mov
xorb
or
std
xchg
lds
pushl
in
add
nop
add
roll
cli
sub
clc
cmpsb
mov
call
mov
lcall
aaa
pusha
daa
dec
dec
xchg
faddl
push
push
mov
cld
jl
pop
loopne
int
ror
iret
inc
and
push
nop
adc
inc
std
jmp
inc
cmp
xchg
or
jp
idivb
mov
aaa
mov
inc
jl
sub
mov
call
fs
pop
jne
loopne
enter
sbb
jo
mov
rolb
mov
mov
lcall
cli
dec
cmp
or
bound
mov
mov
xchg
xchg
cmc
or
mov
std
packsswb
and
push
fnstcw
pop
clc
movsl
jmp
fcmovnbe
call
and
shll
jge
inc
ss
lcall
lret
or
jb
cld
testl
add
repz
mov
jae
sar
aaa
cli
mov
stc
es
imul
xchg
aas
pop
stc
icebp
insl
cmp
sti
leave
sbb
jnp
or
push
out
pop
pop
inc
je
xlat
push
pop
loop
mov
sub
rorb
jmp
sahf
jmp
je
pop
call
or
jnp
mov
in
ret
xchg
imul
incl
sbb
popa
dec
je
pop
ja
pusha
bswap
das
cmc
jg
out
iret
fs
int3
cmp
push
dec
sub
cmp
ljmp
sub
gs
cmc
xor
mov
popa
pop
call
lret
test
cs
cmpsb
daa
mov
xor
outsl
fldt
mov
cmc
stos
jp
mov
popf
push
push
loopne
sbb
nop
cld
aam
inc
loopne
lea
rorl
xchg
add
inc
mov
push
inc
jo
leave
pushl
cmp
jns
mov
fsubl
ret
xchg
sub
pop
scas
dec
jle
pop
sub
xchg
mov
xchg
pop
push
mov
jg
push
inc
out
out
mov
jg
and
dec
mov
stos
out
mov
ljmp
push
aaa
jecxz
inc
scas
push
je
scas
mov
mov
es
into
shlb
adc
push
out
fists
mov
mov
jbe
adc
push
out
cmp
xchg
or
repz
iret
pop
add
addb
or
push
ds
cli
call
jno
enter
jns
pop
xchg
rorl
es
test
lret
fs
incl
iret
fbld
js
cwtl
mov
fistpl
test
pop
inc
mul
inc
xor
fists
inc
in
push
sbb
jl
lcall
pop
hlt
fbld
mov
call
push
cli
test
bound
mov
mov
and
nop
fsubrl
and
xchg
add
lods
cs
and
or
xorb
sbb
bound
incl
sub
mov
dec
and
je
out
mov
clc
sbb
jnp
sahf
out
fimull
xor
xor
mov
push
notl
sbb
dec
lea
sub
jl
in
lcall
fcomip
sub
mov
popa
std
mov
loope
inc
dec
mov
call
fmulp
lock
or
adc
mov
mov
xlat
jg
ja
aaa
or
js
dec
and
fldenv
sub
inc
mov
aad
enter
pushl
clc
incb
scas
mov
rol
or
push
add
push
pop
xchg
cmpb
mov
pop
fimull
mov
push
inc
sub
cmp
pop
decl
lcall
mov
sbb
cmp
aam
add
sub
pushl
fiadds
cmc
add
push
pop
lret
out
fmuls
dec
mov
sbbl
pusha
sbb
or
imul
hlt
mov
sarl
pusha
out
rcrl
jmp
jg
and
cwtl
lods
fs
sub
add
pop
ror
xor
aad
or
nop
test
addr16
in
jbe
out
inc
jne
mov
inc
or
ljmp
mov
jae
rcl
inc
sbb
jnp
mov
arpl
adc
decl
adc
add
fstp
dec
addr16
and
cmp
popa
std
call
imul
stos
sbb
jl
sahf
or
fidivrl
cmpsb
cli
test
ljmp
inc
scas
nop
push
sbb
and
push
int
rorl
das
add
movsb
mov
or
fldl
hlt
push
sahf
in
adc
pop
pop
jnp
ret
decl
cld
sub
fwait
lods
mov
test
outsb
add
bound
mov
adc
push
and
mov
incl
mov
and
or
loopne
sub
push
out
movsl
js
filds
lods
in
jne
fsts
test
push
dec
sbb
xchg
xchg
cmp
sub
movsb
pop
insb
hlt
incl
stos
add
in
and
ret
dec
sub
fcoms
das
xlat
dec
gs
nop
mov
out
out
xor
outsl
das
icebp
inc
add
fstl
mov
pop
mov
fstl
cwtl
arpl
std
push
aaa
xchg
jl
jle
lret
aad
sub
mov
out
inc
xchg
jg
rcll
mov
data16
loop
mov
inc
or
pop
incl
jge
dec
sbb
mov
cmp
add
add
jg
adc
shrb
sahf
call
or
jmp
std
into
sti
ljmp
pushl
lds
mov
mov
jle
leave
and
dec
in
mov
sbb
jbe
es
fwait
stos
das
mov
cmp
mov
lock
inc
shrl
jg
lret
xchg
std
pop
fwait
sti
xchg
push
lret
shrl
insb
xchg
aaa
test
repnz
jmp
fildll
xor
pop
push
mov
jge
push
fs
outsl
xor
jns
mov
test
jg
sbb
arpl
jmp
rorb
lods
sub
push
les
add
inc
push
in
sub
dec
out
mov
mov
jno
je
aad
jo
pop
mov
lock
adc
mov
imul
pop
xchg
cli
pop
add
in
out
push
xchg
sahf
adc
jmp
test
orb
mov
add
adc
mov
fstps
sarb
wbinvd
ljmp
mov
cmp
inc
push
pushf
pop
and
cmp
adc
cmp
add
adc
std
jg,pt
pop
lcall
filds
in
ds
or
cld
inc
out
lds
pusha
mov
call
fwait
mov
pop
repz
test
and
sub
cs
pusha
inc
scas
pop
pop
pop
test
pushl
jg
das
cltd
jge
dec
test
ficoms
fistpl
int3
fucomip
stc
jle
pop
sbb
les
scas
or
pop
repnz
push
mov
push
push
out
add
mov
inc
push
jg
in
pop
pop
pop
pop
jmp
pop
cmc
xor
iret
or
dec
imul
aaa
mov
lret
incl
mov
jb
mov
and
out
lret
lods
shlb
arpl
pusha
sub
mov
jl
sbb
aad
stos
mov
sahf
adc
outsl
repnz
xor
icebp
inc
mov
xchg
mov
addr16
mov
pop
sbb
ss
dec
incl
jbe
cld
add
sbb
in
adc
mov
loope
fisubrs
sub
scas
inc
incl
xchg
mov
outsl
lcall
or
push
add
pop
add
jmp
jecxz
notl
jne
adc
add
mov
adc
insb
mov
gs
test
jne
inc
stc
dec
add
xchg
mov
push
pop
mov
sbb
and
aaa
cmc
jg
pop
ss
pop
xchg
ljmp
das
lods
jno
sti
pop
icebp
ljmp
jns
xchg
fnstenv
fdiv
pusha
filds
mov
bound
mov
pop
test
jg
push
int
test
mov
call
bound
mov
dec
jmp
iret
pop
div
mov
or
cmp
out
add
sar
ljmp
in
add
int3
nop
pusha
lret
push
jns
sarb
inc
jb
adc
popf
xlat
nop
mov
mov
xchg
leave
push
pusha
shll
shlb
jg
xorl
mov
out
jp
call
arpl
mov
ret
lcall
mov
out
movsb
jb
testb
dec
mov
xor
incl
jp
subl
inc
push
arpl
sub
dec
mov
xchg
sub
inc
dec
xchg
clc
dec
jb
pop
gs
out
iret
push
pop
jno
ret
and
jbe
sub
ljmp
loope
jg
lret
fwait
and
mov
or
jge
add
lcall
and
xchg
stos
andl
je
push
pop
rcrl
mov
cmpsb
lret
enter
movsl
adc
jnp
test
jg
and
rcrl
gs
cmp
data16
ljmp
cmp
mov
enter
je
and
or
fwait
mov
mov
pop
push
mov
mov
pushl
xor
mov
push
dec
cmp
xchg
push
sarl
mov
incl
shrb
lahf
cld
testb
mov
shll
pop
subb
lcall
mov
out
xlat
adc
popf
add
mov
mov
hlt
inc
insl
das
std
pop
loop
cmpsl
into
lret
add
sub
insl
lret
pop
mov
mov
test
mov
cmc
rcrb
cmp
fisttpll
xchg
inc
ljmp
sbbl
jns
fstpl
mov
mov
ljmp
xchg
mov
lds
and
movsl
xor
outsl
xchg
orl
outsb
jle
jg
mov
popa
jno
dec
outsb
mov
jge
mov
rcrl
xor
add
jae
jg
ljmp
xorl
iret
xchg
xchg
mov
insb
in
jae
call
imul
outsl
call
adc
movsb
lea
insb
inc
les
push
fildll
fucom
push
lods
add
pop
pop
adcl
inc
adc
into
jg
int
sbbl
in
enter
mov
fimull
dec
scas
xchg
mov
dec
cmp
jo
hlt
movsl
jl
orl
dec
gs
test
mov
leave
push
imul
add
xchg
lret
stos
lcall
and
in
dec
dec
inc
jle
negb
adcb
and
xor
jg
or
sub
lods
mov
mov
adc
xchg
stos
jb
call
add
leave
xor
loopne
mov
adc
mov
cmp
jno
pop
pushf
lcall
inc
or
xchg
imul
xchg
sbb
dec
jge
js
sti
dec
add
pop
sub
cmp
aam
push
lods
incl
stos
ljmp
mov
add
loopne
fwait
ljmp
mov
je
mov
jns
cmp
dec
inc
push
call
mov
cmp
xchg
mov
and
add
test
or
in
lods
xchg
fisubl
jg
push
call
jo
ret
dec
lods
inc
pop
cli
clc
ret
les
add
dec
jmp
lcall
adc
data16
sbb
in
mov
push
mov
movq
push
cmc
cmp
bound
clc
idiv
jg
mov
popf
sub
addr16
push
out
incb
xchg
mov
pop
cmp
inc
rcl
cld
dec
out
addr16
mov
sahf
rcrb
inc
push
jo
or
repz
test
stos
sarb
dec
ja
jp
jl
cltd
add
sub
in
mov
push
adc
pop
mov
decl
out
sbb
xchg
xchg
sub
xchg
daa
jmp
pushl
aam
lret
pop
add
dec
fimuls
insl
stos
decl
cmp
es
movl
inc
push
add
hlt
cli
stc
sub
jb
mov
xor
pop
sbb
movswl
arpl
lock
adc
push
add
or
jno
out
and
outsl
dec
add
xchg
pop
push
outsl
xor
scas
xchg
add
push
ljmp
decl
notb
stos
repnz
ljmp
in
pop
scas
sti
cli
cli
outsl
inc
aam
sbb
xchg
add
sbb
icebp
pushl
lds
fsubl
add
mov
mov
incl
jae
lods
ja
or
fmuls
rcrl
inc
mov
sbb
xchg
jnp
mov
or
jmp
mov
xchg
xchg
add
sub
ja
jmp
cmpsb
bound
aad
stos
sar
test
jb
adc
pusha
add
and
rcll
pop
mov
xor
jae
ficoms
xchg
addb
pop
decl
sub
mov
fmull
cmpl
mov
inc
pusha
add
add
jns
sbb
inc
in
jl
mov
aam
loop
sbb
xchg
pop
mov
mov
lea
call
add
xorl
in
or
xchg
clc
pushl
aas
pushf
push
clc
pusha
sbb
add
mov
mov
call
dec
mov
pushf
mov
dec
inc
mov
pshufw
sahf
lods
inc
fs
stos
lcall
loop
fucom
mov
je
pop
inc
in
cmp
lods
ffree
hlt
clc
jo
lds
sbb
lock
inc
repz
sti
jmp
cld
ljmp
addr16
lret
cli
jge
rcr
adc
mov
xor
push
jbe
and
and
stos
stc
fdivrl
xor
sub
outsl
adc
lcall
dec
pop
cmp
test
decl
ljmp
in
ret
sbb
add
cwtl
cs
cmp
add
jg
sbb
dec
mov
inc
leave
outsb
fwait
jle
sbb
mov
filds
rclb
call
cmp
lret
cmpsb
sub
adc
enter
scas
or
cli
outsl
cld
incl
ret
sub
das
xor
push
add
xlat
imul
push
push
stos
or
aaa
shlb
inc
loope
dec
cwtl
mov
in
push
jg
mov
testl
xor
sbb
mov
pop
mov
mov
lcall
fstp
inc
pushw
cmp
add
int3
pop
das
outsl
cltd
xchg
mov
lahf
test
mov
jle
xlat
mov
decl
in
sti
cmp
adc
adc
aad
lret
jo
out
xlat
cmp
jmp
repz
push
mov
pop
jno
lahf
push
cwtl
dec
nop
mov
mov
shl
mov
mov
insb
jb
fldt
mov
bound
das
out
sbb
jg
cmp
mov
push
and
dec
or
push
xchg
shr
fsubrl
repnz
cld
xchg
mov
jl
pop
xor
pop
jo
cmp
cld
pushl
dec
mov
sbb
sub
leave
out
ljmp
xchg
jp
mov
mov
ljmp
insl
add
aaa
subl
loope
call
mov
loop
mov
loope
mov
xchg
imull
ret
leave
data16
stc
dec
out
mov
pop
cmp
ds
mov
inc
xor
lcall
jl
and
faddl
hlt
iret
fld1
inc
daa
outsb
aad
push
mov
stos
mov
add
iret
lds
push
inc
gs
mov
aas
mov
pop
outsl
ja
mov
lds
mov
iret
mov
push
jmp
mov
inc
andb
lods
imul
inc
testl
jbe
ss
jg
movsl
into
addr16
and
inc
and
sbb
rcrl
inc
js
jne
or
fucom
bound
pop
ja
outsb
pop
ret
push
movsb
into
lods
mov
jmp
pushl
iret
movsl
sbb
or
sbb
xchg
stos
push
sub
clc
daa
mov
push
pop
and
mov
out
xchg
les
inc
push
shr
movsb
add
subl
call
mov
inc
outsb
loop
mov
insl
sbb
test
pop
enter
mov
add
loop
mov
mov
popa
xor
pushl
sub
popf
jmp
cli
sbb
dec
lcall
cmp
lcall
pop
js
lahf
xchg
jnp
ljmp
xchg
and
jge
in
and
lahf
popw
cld
int3
dec
inc
lahf
ret
sub
pop
dec
std
in
add
jns
fldl2t
loop
enter
jg
jns
or
movsb
fbld
arpl
fs
lret
gs
jmp
push
jns
push
cs
xchg
jp
adc
test
lods
test
jmp
decl
mov
fstpt
bound
insl
mov
aam
push
sbb
into
test
pop
xor
jmp
push
dec
adc
les
or
sub
inc
jecxz,pt
ljmp
push
movsl
xor
out
mov
xchg
daa
xor
jp
add
jmp
shrl
jo
push
add
call
fs
add
pop
xor
rcll
push
push
jns
cmp
push
addr16
lret
pop
mov
es
adc
add
in
mov
mov
push
lret
in
mov
mov
adc
or
and
out
aaa
js
sarl
mov
pushl
pusha
xchg
mov
fs
fstl
push
mov
jmp
int3
and
add
add
push
into
mov
push
iret
sbb
xchg
xor
ljmp
pop
dec
push
xchg
lock
rorb
push
and
push
fwait
push
push
jp
pushl
in
xor
push
subb
daa
sub
inc
outsl
cmc
ljmp
cmp
jecxz
dec
jo
mov
mov
cld
pushl
and
in
or
test
inc
pushl
push
cwtl
roll
add
jg
sub
add
push
repnz
aaa
lds
decl
lods
fidivl
push
loope
dec
xor
je
out
jg
inc
push
fistl
xchg
mov
adc
pushl
shll
stos
sub
and
xchg
sti
les
jbe
cltd
sbb
xchg
mov
cli
mov
push
jmp
nop
and
push
xchg
jle
imul
cmp
push
les
inc
iret
cmpsb
xor
pop
cld
incl
incb
cmp
das
adc
out
jns
cli
or
mov
decl
mov
test
add
data16
test
aam
push
fcompl
loop
and
clc
pushl
jecxz
mov
add
jecxz
xchg
test
shrb
cmp
ss
mov
sbbl
adc
pop
push
add
and
xcrypt-cfb
cmpsl
fs
jnp
inc
sbb
or
loope
and
call
lret
pop
lods
scas
popa
test
dec
xchg
mov
daa
insb
lods
icebp
pushl
dec
loope
jne
lods
dec
sbb
insb
and
jae
push
add
scas
shll
mov
sbb
lock
stos
outsb
fldl
das
std
call
insb
adc
ror
mov
mov
add
lods
lret
mov
incl
cmp
xor
mov
nop
add
out
test
es
xchg
inc
int3
decl
std
adc
in
add
stos
sbb
push
imull
and
mulb
mov
xchg
pushf
icebp
mov
aam
in
fildll
jb
out
pop
xchg
mov
cmp
pop
stos
mov
test
and
push
xchg
outsb
outsl
push
test
xor
stc
add
dec
mov
mov
sbbb
push
pushf
add
or
scas
jb
imul
push
das
les
mov
ret
cmpsl
sti
mov
insl
scas
fldcw
jb
mov
scas
and
lcall
sub
outsb
mov
je
mov
pop
notb
adc
or
push
mov
pop
sbb
add
mov
test
pushl
sub
xlat
stos
xor
subl
cmp
repnz
cmp
je
xchg
ret
sti
je
cmp
xchg
cmp
out
mov
lock
mov
cmp
in
sub
out
push
std
adc
aas
xchg
rcll
sub
jo
daa
fs
pop
lret
dec
push
icebp
call
push
push
add
ret
jg
incl
adc
and
mov
iret
add
sbb
sbbb
mov
sub
sbb
adc
sbb
dec
pop
call
mov
ficomps
xor
clc
js
jmp
xlat
dec
mov
iret
jmp
mov
test
mov
std
movsb
cltd
sub
push
sub
sahf
and
pushl
lea
jnp
pushf
and
pop
jmp
adcl
cld
pop
add
loopne
pop
and
movsb
or
dec
shr
fwait
xor
mov
xchg
fs
cwtl
loopne
jnp
inc
je
push
add
mov
inc
imul
mov
jg
sbb
in
dec
pop
jge
clc
mov
jge
call
shlb
lock
adc
jne
xchg
call
movsb
inc
fldl
bound
adc
mov
jae
call
push
in
lcall
js
lahf
mov
stos
or
push
add
sahf
movsb
lret
call
push
adc
ds
adc
inc
imul
jmp
xchg
and
decl
aad
int3
jne
xchg
stos
push
cmpsb
mov
push
jge
jb
jns
clc
add
xlat
sbb
or
lcall
leave
sarl
add
jg
jp
cmp
dec
push
aam
ret
lret
xchg
sbb
sub
std
pushl
or
mov
and
xchg
mov
in
stos
sub
cmp
hlt
adc
sahf
dec
lock
pop
divl
test
xor
xchg
sbb
jl
cmp
mov
int3
jp
sub
cmp
cli
insl
cmp
jmp
or
lahf
mov
call
pop
cli
int3
dec
pop
arpl
add
dec
lret
push
test
push
js
aaa
call
std
or
push
pop
scas
ja
inc
or
xchg
jbe
ljmp
cld
mov
mov
iret
testl
dec
out
fnstcw
aas
test
mov
mov
adc
repnz
sbb
and
lret
lock
jmp
add
arpl
fwait
mov
fs
dec
rclb
pusha
iret
xchg
mov
push
pop
dec
push
inc
push
lcall
jno
cmc
out
lret
adc
out
idivl
decl
adc
add
add
lea
aam
outsl
pop
mov
xor
jno
or
dec
aad
pushl
pop
pop
addl
inc
inc
mov
jp
hlt
cltd
out
cwtl
enter
int3
push
xor
stc
cmp
xor
dec
pop
push
dec
rclb
sub
rorl
pusha
int
stos
movsl
lcall
div
sub
gs
scas
idivw
sbb
jg
cmpsl
subl
jb
and
ret
add
or
call
aas
mov
jns
pusha
ret
mov
cmp
inc
mov
dec
inc
sahf
insb
cmp
stos
xchg
mov
add
ja
clc
pop
pushl
sarl
pop
repnz
push
sbb
std
call
inc
pusha
das
int3
popf
inc
je
adc
push
inc
or
sub
enter
call
insb
hlt
and
xor
sar
dec
data16
jns
loope
pop
test
sub
jl
push
jmp
mov
jae
dec
jbe
jl
andb
push
cmpsl
sub
xor
inc
xchg
add
dec
out
sub
hlt
jns
xor
imul
cs
sub
daa
aad
je
jns
shll
aas
add
pushl
addr16
push
mov
mov
lods
aam
fwait
int
es
jmp
out
jae
xchg
xchg
lods
cwtl
lcall
ficompl
test
iret
xchg
sub
out
and
call
lcall
and
jns
cld
push
imul
stos
jbe
icebp
rorb
push
xor
cmp
sti
out
mov
cltd
mov
xor
dec
int
sar
outsl
push
push
mov
test
std
lcall
jne
mov
mov
daa
xchg
and
loop
incl
lods
in
jle
mov
mov
fcomip
cs
aam
popa
ja
std
or
sarl
and
dec
sub
mov
test
les
test
lcall
test
es
or
ret
dec
test
mov
mov
mov
rclb
mov
aas
inc
add
jg
jbe
xlat
popa
pop
mov
mov
mov
std
es
ret
outsb
cmp
mov
and
in
or
adc
ds
insb
add
push
dec
add
mov
sub
fisubs
xor
out
jbe
ret
cmp
nop
pop
cmpb
in
adc
clc
or
jg
mov
or
rcrb
mov
push
outsl
lock
cmpsl
add
mov
xchg
and
adc
and
movsl
mov
mov
inc
and
dec
inc
push
rorl
incl
call
clc
add
mov
popf
and
in
sbb
mov
inc
cld
popa
jmp
in
mov
in
cmp
sub
push
adc
pop
loopne
mov
push
cmpsb
xlat
push
sub
mov
push
inc
incl
ret
fstl
cmp
mov
dec
shlb
loop
outsb
lds
fs
jge
adc
and
mov
pop
and
fcompl
cmc
or
xchg
clc
mov
call
mov
or
in
lds
outsb
mov
cmpsl
lea
jg
mov
or
mov
pusha
icebp
sub
lods
push
mov
cmp
push
mov
sbb
cmpsl
bswap
push
iret
rorb
shlb
scas
mov
scas
stc
sub
gs
mov
jne
add
inc
dec
xlat
nop
push
ret
pop
mov
ret
xor
loop
mov
sbb
inc
jmp
cmpsb
push
push
jecxz
push
in
pop
das
in
cmp
sbb
jmp
cmc
mov
aad
loope
mov
ds
dec
cmpsl
jecxz
xor
daa
test
xchg
arpl
and
adc
pop
stos
std
rclb
repnz
xor
xchg
aas
sahf
in
push
mov
mov
in
aaa
fdivrl
pushf
insl
in
scas
jbe
mov
xor
jne
cmc
jmp
sahf
ja
jle
pushf
lea
mov
sub
mov
clc
das
lock
das
data16
add
add
jmp
push
or
dec
fisttpl
mov
arpl
fstpt
incl
mov
inc
sub
jmp
mov
lds
test
pop
ljmp
mov
sub
add
int
incl
sbb
pop
cmp
or
ljmp
ret
jl
loope
in
pop
ret
lcall
call
mov
or
sub
mov
aas
shlb
fucomip
dec
and
pop
sbb
cmp
bound
gs
iret
lcall
sub
mov
loop
push
lods
decl
mov
xor
push
movsl
nop
outsl
ret
lret
mov
dec
movmskps
sub
dec
repnz
fistl
push
fwait
pushf
cmc
dec
scas
adcl
cmc
pushl
push
inc
dec
mov
jo
push
movl
push
adc
push
lahf
loope
popf
lret
xchg
loopne
sub
fsubr
lea
in
loope
jge
adc
or
enter
std
fistps
or
sub
lds
inc
aad
incl
sbb
pop
loope
flds
je
pop
or
in
in
hlt
gs
cmp
repz
or
daa
push
fistps
pop
sarb
pop
mov
pop
ret
cmp
sub
cmc
cwtl
sbb
decl
or
and
imul
mov
mov
push
sti
outsl
hlt
lret
cli
and
outsb
loop
loop
sar
jg
imul
test
icebp
pop
push
inc
mov
pop
sahf
rcl
mov
jg
cmp
or
and
or
mov
lods
testb
popa
pushf
ret
ja
clc
sbb
xchg
clc
jmp
fwait
mov
sbb
dec
inc
cmp
pusha
or
daa
cwtl
mov
xor
call
testl
loop
pop
nop
pop
add
cmpsb
push
sarb
inc
jne
mov
add
dec
pop
shlb
xchg
fidivl
cmpsl
pop
push
call
pushl
lahf
not
fwait
rolb
in
xor
out
cmpsb
jl
pop
add
or
movb
scas
inc
sbb
pop
adc
ljmp
jmp
in
push
scas
cli
out
mov
lret
or
roll
push
sar
push
xor
hlt
dec
int3
fistl
dec
sub
xchg
push
in
jae
xor
dec
fldl
add
ljmp
clc
imul
and
sti
test
xchg
std
sub
sti
int3
sbb
incl
mov
jno
xchg
out
aas
out
repnz
push
lret
pop
int
lock
cmpsb
idivb
sar
fdivrl
loop
imul
inc
xor
fnstsw
jmp
aaa
mov
push
sbb
loope
in
pop
into
push
add
std
pop
mov
or
cmc
insb
sahf
or
mov
mov
pop
sbb
ljmp
out
clc
xor
sar
sti
out
imul
and
add
pop
je
xor
cmpsl
pop
mov
jmp
jmp
mov
sub
loopne
mov
clc
xchg
int
cmp
xor
and
sbb
sub
xor
loop
ljmp
repz
jge
movsl
fadds
call
cmp
fisttps
mov
dec
mov
cmpsb
or
mov
mov
loopne
jae
nop
mov
rol
incl
cmc
stc
dec
push
arpl
mov
push
ja
cld
adc
stos
call
pushl
add
repz
adc
call
sub
rol
inc
gs
cmp
test
loopne
push
movsb
xchg
mov
out
scas
in
pop
loopne
jl
sub
ret
jbe
adc
xchg
mov
xchg
ds
iret
jg
les
xor
sbb
mov
sbb
ljmp
in
adc
cmc
shlb
rclb
push
jmp
loop
mov
ja
scas
sbb
pop
popf
inc
pop
das
push
adc
ljmp
sub
fidivl
and
aas
push
test
inc
push
or
push
movsl
out
push
fbld
adc
xor
cli
mov
jg
loope
mov
clc
lahf
adc
mov
adcb
ss
subb
mov
xchg
push
push
mov
add
jns
push
sar
scas
sbb
ds
aaa
cli
pop
and
shll
push
adc
cmpsb
mov
xchg
sub
dec
call
aaa
test
test
aas
xchg
fcomi
cwtl
mov
scas
dec
dec
mov
outsl
xchg
test
ljmp
jb
push
aaa
jbe
shll
push
int
inc
xor
xor
int
lret
sahf
std
sahf
pusha
repnz
cmp
and
add
lods
dec
lret
cmc
std
jg
dec
cmp
bound
test
mov
ljmp
adc
ja
sahf
pushf
dec
ret
add
insl
inc
insb
mov
stc
lcall
ljmp
jo
adc
mov
sbb
into
adc
nop
pop
sahf
in
fsubrs
jg
enter
xchg
mov
mov
mov
jg
mov
adc
jno
xchg
das
jmp
push
pop
hlt
jbe
mov
or
xchg
repnz
mov
adc
stos
pop
jmp
lods
stc
cmp
inc
sahf
int3
jmp
call
jo
shl
lea
hlt
mov
mov
push
imul
push
dec
add
or
inc
sbb
addb
dec
cmc
mov
add
or
xor
xchg
xlat
jmp
das
add
out
movsl
or
ret
or
gs
cmpsb
cld
fdivp
pop
jle
add
jmp
ds
dec
cmp
xchg
and
sub
lret
xor
cmpsb
aas
aaa
dec
mov
imul
decl
test
dec
mov
mov
std
pusha
int3
sti
test
test
jmp
ret
pop
adc
daa
cmp
xor
gs
pop
insl
cmp
dec
hlt
or
pop
lret
stc
scas
movsl
mov
jmp
add
and
gs
inc
add
push
lods
add
mov
add
popl
lods
mov
jp
lret
lcall
cmp
out
cmp
cltd
xor
lcall
outsl
js
mov
mov
cmpsl
outsb
lock
call
scas
movsl
mov
mov
pop
dec
jns
xchg
sbb
call
adc
sbb
push
sub
jb
inc
repnz
adc
push
inc
test
lret
jg
call
and
inc
jnp
mull
pop
jl
sbb
push
add
mov
fsts
in
sarl
mov
lret
pop
mov
jnp
sbb
lcall
imul
bound
rcrb
ljmp
aaa
xchg
jmp
add
mov
cmp
ficomps
ret
mov
data16
cmpsl
pushw
repnz
call
outsl
mov
fdivr
test
push
jmp
cmc
scas
add
inc
sub
pop
loop
mov
je
es
cmp
jno
dec
ret
jle
fs
notl
arpl
ljmp
vmovss
sub
into
jmp
inc
add
arpl
mov
push
jmp
adc
add
or
add
or
imul
movsb
pop
test
decl
pop
dec
scas
inc
mov
pushf
push
divl
fisubrs
mov
shrl
push
lcall
outsb
xchg
popf
out
adc
sub
xor
push
xor
call
mov
sbb
into
stos
subb
repnz
push
lahf
rcl
xchg
shlb
add
call
loop
push
in
imul
cmp
jg
mov
popf
pop
out
pop
inc
movsb
push
dec
popf
and
daa
lcall
jg
decl
and
imul
out
lret
xlat
mov
es
aaa
xchg
clc
and
insl
leave
test
out
jecxz
xor
test
inc
inc
or
mov
movsb
push
mov
xlat
mov
or
xchg
aaa
cli
ljmp
adc
pop
jnp
xchg
aas
add
mov
or
xchg
xchg
std
adc
lea
sub
or
mov
shrl
call
inc
jno
mov
wbinvd
scas
fcmovb
inc
pushf
lock
sub
scas
incl
test
pusha
sarl
mov
and
fucom
or
jl
pop
call
jecxz
inc
int3
cmp
aad
sub
xchg
xor
in
scas
jmp
mov
shr
in
cli
sbb
xchg
push
sub
inc
and
xchg
ds
out
add
sub
ret
mov
shr
mov
sahf
mov
incl
pop
mov
aaa
ja
push
fiaddl
sub
adc
mov
pusha
js
ljmp
cwtl
sti
jnp
push
cmc
pop
push
cmpl
insl
push
xchg
test
mov
nop
inc
aam
sub
dec
aam
inc
fsts
sbb
shl
and
mov
scas
push
fcomps
mov
xchg
jg
pop
decl
pushl
pop
pusha
in
mov
jns
repz
adc
cmp
fwait
dec
in
outsb
imul
and
mov
fildl
test
xchg
xchg
mov
lock
in
inc
sahf
push
cmp
andl
and
lea
icebp
retw
ret
pusha
or
incl
or
pop
or
pop
xchg
cli
ds
idiv
call
add
push
pop
nop
movsb
ret
xor
fsubl
sbb
inc
jmp
mov
out
fs
sub
es
lcall
cld
and
leave
fdecstp
mov
pop
mov
das
fdivrs
inc
mov
push
hlt
jl
out
push
xor
dec
fxch
mov
sbb
xchg
loop
xor
rolb
gs
es
ljmp
imul
mov
cmp
mov
or
sub
stc
and
imul
or
push
ljmp
xchg
or
jno
sbb
push
out
xchg
cmp
jp
popf
fmuls
incl
ljmp
dec
iret
push
jbe
outsb
inc
aaa
push
adc
dec
cld
outsl
icebp
fildl
mov
loopne
pop
adcl
fsubl
xor
rcl
dec
or
aad
cs
dec
sbb
sub
cli
ljmp
aad
les
fsubl
xchg
mov
dec
mov
aam
pop
mov
fiaddl
adc
push
das
les
cmp
shlb
fs
flds
jl
mov
inc
lret
enter
mov
enter
sbb
inc
and
add
jbe
daa
testl
inc
jg
jecxz
jmp
jnp
and
add
inc
scas
pusha
mov
pushl
xchg
push
lcall
push
fisttpl
loope
aas
inc
sti
cmp
mov
xchg
add
mov
mov
sbb
stos
call
mov
xchg
loope
push
xor
sub
scas
mov
outsl
imul
int3
je
incl
xchg
mov
sub
jae
sub
mov
sahf
sbb
lahf
mov
ds
cmp
test
sbb
inc
out
xor
xor
dec
cmp
mov
pop
pop
mov
ljmp
hlt
dec
call
iret
jbe
hlt
mov
or
push
incl
dec
out
in
mov
out
sbb
xchg
ror
pushf
xchg
jg
jg
mov
div
lret
clc
aas
pop
xor
sub
mov
inc
repz
incl
dec
sub
jecxz
testl
add
cmpsb
xor
sbb
call
and
add
mov
jp
xchg
out
inc
or
outsl
cmp
ficompl
aad
xor
mov
lcall
jp
mov
repz
push
pop
ret
dec
sbb
pushf
subl
jne
fs
inc
lods
test
inc
jae
subl
sub
dec
jg
sbb
sbb
lahf
in
add
cld
loop
mov
stos
jge
push
leave
in
and
xor
sub
shr
sub
adc
push
jno
sbb
movsl
jae
lds
je
inc
rolb
cmp
mov
lock
push
xchg
pop
pop
call
jae
rcrl
call
call
sti
adc
aad
mov
iret
movsb
int3
jnp
out
xor
loop
call
lcall
sub
out
sub
xorl
call
out
std
insb
mov
inc
pop
pop
pushl
inc
pop
aas
xor
pusha
cmp
mov
mov
inc
xor
adc
mov
loopne
mov
adc
lret
dec
movsl
dec
cld
jle
dec
jle
scas
mov
pop
jns
loopne
popl
cmp
xor
lcall
adc
and
adc
mov
and
repz
repz
jp
mov
sbb
mov
push
jle
or
cmp
and
xlat
push
negb
or
jg
stos
imul
cmp
dec
mov
and
out
cmp
pop
imul
mov
add
xor
lret
das
aas
xor
addr16
jb
mov
mov
push
std
stc
adc
mov
enter
cwtl
sbb
bound
dec
jmp
fwait
mov
mov
jno
push
std
dec
pushf
dec
ljmp
incl
sbb
popf
cmp
nop
call
lds
stos
push
xor
inc
pop
int
mov
ljmp
icebp
ret
inc
pop
mov
popa
inc
ficomps
pushl
out
push
sub
popf
xchg
faddl
or
and
xor
xchg
pop
mov
xchg
mov
or
mov
cmp
adc
outsl
add
push
jae
fiaddl
mov
pushl
mov
popf
pusha
sbb
in
into
mov
and
jle
loopne
mov
mov
les
jo
js
popf
nop
jecxz
ljmp
test
adc
test
mov
mov
and
cmc
ljmp
xor
add
sub
out
mov
lea
in
psrlw
pop
fldl
sbb
loop
mov
std
mov
and
mov
add
adc
cmp
mov
insb
addr16
repz
pop
clc
lcall
in
mov
mov
jmp
movl
loop
sbb
push
loope
lds
xchg
gs
xchg
dec
jecxz
sahf
mov
jg
pop
insb
dec
shr
loop
js
mov
jle
lcall
mull
jecxz
mov
lea
jnp
xchg
arpl
xchg
inc
sub
inc
xchg
jnp
inc
cmp
lcall
insl
mov
mov
mov
std
leave
aaa
mov
lcall
loop
jbe
jge
int
cwtl
repz
ds
jo
push
ljmp
loop
push
xchg
scas
push
jle
mov
out
data16
xchg
mov
ja
data16
pushf
jno
lcall
jnp
stos
das
std
adc
xchg
lods
xor
repz
xchg
add
or
mov
add
mov
out
movsb
fld
cld
push
dec
inc
movsl
push
mov
push
clc
jg
cmp
pop
pushf
sbb
nop
and
mov
das
xor
add
sbb
vcomisd
or
ljmp
mov
cmp
mov
xchg
mov
mov
sbb
repnz
jmp
and
in
clc
jns
cmp
cltd
dec
mov
jg
lds
push
mov
int3
mov
outsl
adc
mov
cmp
into
movsl
push
cld
sub
incl
outsb
scas
repz
fiadds
push
out
lahf
leave
call
xor
notl
adc
ljmp
xchg
push
mov
lods
adcl
mov
rcrb
mov
lods
pusha
rcr
mov
fidivs
push
ljmp
and
in
in
mov
mov
lock
mov
lea
ja
push
cmp
inc
outsl
rolb
aas
and
dec
shl
aaa
inc
call
pushl
icebp
mov
sarb
pusha
mov
xor
movsl
ja
decl
inc
jne
ffreep
incl
xchg
pushf
or
hlt
mov
lret
ret
cmp
inc
push
mov
loope
sbb
mov
adc
xor
add
jg
pushl
push
sub
js
or
mov
sarl
mov
jmp
jecxz
aam
das
mov
in
fucomip
add
xchg
aam
lcall
xor
movsl
cmpsb
mov
cld
lods
mov
add
in
sbb
js
pop
repnz
sahf
lods
push
in
dec
loopne
mov
adc
int
cmp
bound
stos
divb
xchg
push
imulb
sub
notl
jns
adc
dec
pop
sbb
out
repz
shl
jb
in
rclb
mov
pushf
int
jmp
stos
addr16
sbb
js
jmp
inc
mov
push
lahf
lods
push
pop
clc
call
in
mov
inc
xor
cwtl
repnz
pop
mov
push
test
mov
and
pop
fstpl
dec
pop
mov
ret
lds
ret
les
pop
jg
das
pusha
jecxz
xor
mov
jle
sar
pushl
sahf
xchg
dec
inc
and
je
dec
push
or
aad
addr16
lea
mov
fbld
cmc
bt
mov
sbb
adc
jmp
xor
pop
pop
mov
pushl
and
push
push
mov
fdecstp
mov
clc
mov
and
jge
lds
fs
cli
psrad
pop
cld
inc
repnz
fdivp
into
shl
xor
and
xorb
jg
xor
daa
insb
dec
sbb
fcmovne
lret
icebp
clc
mov
int
inc
pop
shrl
stos
xchg
int
sub
ja
cmp
or
decl
orl
jb
cwtl
cmp
sbb
decl
repz
fwait
stos
mov
shlb
xchg
je
mov
inc
pusha
add
filds
movsl
movb
sub
rorl
push
add
ret
adc
decl
outsl
out
ret
add
mov
pop
xor
rorb
leave
test
mov
or
subb
ljmp
xchg
lcall
into
dec
cli
pop
gs
cli
test
xchg
ror
push
je
in
lcall
or
addr16
sub
bound
sub
shrl
repz
sbb
mov
idiv
and
data16
lods
jl
test
das
mov
mov
adcl
mov
stos
pop
sti
and
jge
out
push
mov
ds
pop
sti
push
adc
rcll
in
mov
xor
rdtsc
xor
dec
insb
enter
mov
cmp
adc
push
ret
xor
lea
ljmp
bound
aad
cmpsl
rorl
jbe
or
push
xor
jmp
je
add
xlat
xor
scas
test
call
push
cs
dec
andl
cmpsl
mov
inc
sub
push
xor
pop
loop
decl
add
cmpsb
int
adc
aam
mov
test
and
fsubrp
incl
xchg
mov
orl
incl
repz
or
adc
inc
adc
jns
add
cmc
xorb
aaa
push
mov
and
dec
adc
adc
xchg
cmp
or
pop
cli
call
cmp
mov
lods
daa
pop
jg
incl
xchg
ja
lods
pushf
dec
push
sbb
lret
je
dec
jno
call
jg
sbb
add
leave
jno
fadd
mov
lcall
adc
mov
or
mov
andb
ret
outsl
hlt
jg
add
inc
xchg
fcmovbe
fisubrs
popa
int
test
cmp
clc
push
mov
iret
dec
jp
mulb
inc
lahf
idiv
pushl
std
cmovne
jg
ljmp
fstpl
cmp
daa
cmp
mov
add
cmp
cwtl
mov
push
and
sbbl
cld
sub
mov
in
popf
inc
adc
jmp
lret
aad
pop
mov
ret
sbb
add
sbb
xchg
popf
iret
js
data16
dec
push
xchg
out
fcomp
inc
lea
mov
xchg
ja
push
dec
movsb
jmp
jp
lcall
frstor
scas
adc
and
push
mov
out
flds
cmp
in
mov
test
decl
mov
mov
lods
subb
mov
test
repz
jecxz
push
and
inc
inc
rsm
insl
dec
cmp
dec
in
hlt
decl
jl
push
lret
xor
psubusw
call
ljmp
inc
stc
or
test
cltd
out
jno
jno
push
orb
pop
out
in
adc
mov
addb
nop
sbb
ret
into
rol
jecxz
xlat
iret
nop
leave
shrd
jmp
push
lods
push
or
call
aaa
stos
call
sti
sbb
or
xor
in
mov
aas
cmp
les
outsb
pop
cmp
loopne
push
inc
mov
out
adc
mov
jbe
call
dec
mov
jae
fnstsw
and
call
mov
aaa
adc
mov
stos
lcall
out
clc
dec
test
jmp
push
outsl
icebp
pushl
mov
xor
xor
je
stc
cmp
jmp
jae
push
sarb
xchg
jge
jns
pop
testb
lret
xlat
pop
decl
xor
lods
push
shll
push
data16
or
cmp
shlb
push
in
pop
test
xor
lods
mov
cmp
cmp
outsb
xchg
push
lods
incl
push
ss
xchg
mov
popa
pop
xor
enter
arpl
pop
bound
icebp
mov
jb
outsb
lahf
dec
clc
adc
xor
adc
sbb
lret
clc
or
pop
jbe
and
dec
pop
push
scas
mov
push
push
lods
inc
test
pop
bnd
sarb
sub
pushl
dec
sbb
in
sbb
fwait
adc
inc
loopne
lret
dec
pop
mov
lcall
inc
aaa
int
adcl
mov
out
dec
dec
jg
in
daa
sbb
in
cmp
sbb
je
add
sbb
loope
jmp
repz
clc
loope
ljmp
mov
and
popf
mov
dec
ljmp
jg
xor
pop
sub
mov
jnp
in
jg
jmp
sub
jmp
xchg
add
cmp
mov
sub
jno
jmp
mov
xchg
idiv
call
and
adc
dec
mov
mov
int3
push
in
inc
inc
lock
rcrl
xlat
dec
aad
adc
das
hlt
pop
inc
fwait
hlt
iret
add
push
add
fstps
test
or
je
and
stc
idivb
mov
xchg
mov
mov
clc
call
sbb
and
jnp
mov
push
lcall
ret
cmp
sub
add
pop
adcl
pushl
out
sub
inc
and
mov
sbb
mov
stc
incl
ljmp
adc
mov
xchg
xchg
fs
cltd
jno
test
stc
and
int3
push
out
sbb
pushl
outsb
jns
out
fcoml
fwait
jg
jns
fcmove
pop
pop
sbb
ret
cmp
ljmp
dec
sub
sti
xor
and
fdivs
or
lods
outsl
lock
bound
add
pusha
adcl
jne
insl
pop
rcrb
bound
pop
xchg
aaa
or
mov
test
and
xor
mov
incb
cs
ja
cmp
dec
icebp
push
pop
movsb
ljmp
rcrb
addr16
lods
dec
std
ret
ljmp
xlat
and
mov
mov
in
inc
lea
rcl
cmp
mov
incl
bound
cmpsb
outsl
rcrl
hlt
stc
mov
or
pop
cltd
outsl
cmp
gs
inc
or
push
bound
icebp
pushl
nop
mov
aas
push
cld
cli
test
add
sub
jg
jmp
sub
clc
mov
cld
lods
pop
jmp
mov
push
ljmp
lret
push
xchg
das
xor
aam
cwtl
inc
jbe
incl
stos
jne
movsb
out
sub
sub
mov
fstps
and
ljmp
push
cmc
xor
imul
inc
pop
jge
decl
cmp
mov
mov
lock
lods
sub
push
mov
incl
test
and
fistps
inc
adc
ss
imull
cld
outsb
inc
mov
lods
push
aas
stos
shr
fbld
stc
int3
je
add
jp
cmp
lock
jmp
pushf
test
sti
cmpsl
push
aaa
mov
sub
sub
movsl
cmp
add
inc
sbb
and
sti
push
div
sbb
bound
stc
or
lcall
mov
push
cmp
arpl
clc
insb
mov
mov
or
decl
aad
adc
movsb
adc
lcall
ljmp
cmc
call
push
xchg
fisubrl
cld
sub
test
decl
pop
xchg
mov
or
movsl
fdivr
loop
mov
jl
mov
je
push
pop
fsubrl
push
xor
cmp
clc
mov
test
imul
jb
out
cmp
outsb
pushf
ficoms
aad
sbb
cmp
jae
add
dec
call
and
push
mov
xor
sub
out
push
jb
push
lcall
cmp
adc
inc
loope
cmp
jns
sub
call
rolb
das
js
aaa
sbb
subl
add
jmp
jb
aam
nop
orl
aad
loope
incb
sbb
icebp
xchg
jmp
mov
icebp
testl
jbe
inc
in
lds
pop
shlb
pop
clc
jg
mov
push
idivl
lcall
jp
inc
mov
mov
mov
dec
je
cmp
movsl
ret
in
ret
lds
movsb
fucompp
data16
sbb
orb
int3
fistl
and
fdivs
data16
fs
or
mov
aad
and
lock
mov
cmpsl
mov
push
imul
xchg
cli
mov
jecxz
les
cmpsl
into
mulb
shrb
pop
hlt
mov
fistps
movsb
js
in
mov
stos
mov
or
dec
popf
into
ljmp
shrl
jmp
pop
rolb
pop
data16
stc
push
shlb
cmp
out
xlat
jmp
les
js
adc
mov
jae
add
aas
stc
scas
aaa
je
pop
sub
pusha
movsl
cmp
adc
gs
lcall
pop
shlb
jp
push
push
xor
cmc
js
subb
sahf
xor
in
sbbl
fwait
aad
and
and
mov
add
xchg
outsl
cmp
js
push
pop
mov
outsl
add
mov
dec
jmp
mov
gs
jg
popa
add
mov
sarb
sbb
fsubl
rorb
jmp
cmp
mov
dec
mov
xchg
das
cmp
inc
sti
or
clc
ljmp
adc
insb
add
sbb
mov
xor
or
pop
and
aam
push
jnp
xchg
push
cld
mov
and
lcall
dec
lods
jp
mov
js
orl
add
std
mov
add
dec
mov
push
pop
jns
sub
ret
call
shrb
cmp
jge
lahf
inc
push
add
dec
test
nop
add
mov
mov
stos
cmp
or
inc
sub
adc
outsl
icebp
lcall
mov
sti
adc
pushf
adc
jae
in
xor
adc
or
sbb
xchg
loop
imul
add
jecxz
in
sbbb
xchg
rcl
incl
xchg
mov
sub
cwtl
sbb
fwait
mov
imul
lods
hlt
decl
mov
outsl
xor
adc
mov
fmull
xor
call
or
cmp
xor
cs
xor
dec
ds
push
mov
pop
imul
xchg
jmp
mov
sbb
clc
ds
pushl
cmp
fsts
popa
out
cs
jmp
ljmp
jbe
lcall
aam
stos
push
lock
add
add
adc
fildl
insb
push
call
jp
mov
xor
cltd
rcrl
sahf
int
in
and
cli
lcall
stos
and
xchg
decb
rorb
rcl
das
push
popa
xchg
cmp
shrb
push
dec
adc
fs
mov
je
inc
pop
mov
sub
imull
xor
sahf
sub
or
pushl
xor
add
lds
xor
mov
jecxz
cmp
xchg
dec
ja
sbb
int
jl
pop
aas
pusha
add
sub
js
aam
jge
mov
pop
sub
add
rcll
pop
out
mov
xchg
add
add
mov
lods
add
lods
aad
mov
std
jg
or
inc
ljmp
in
fnstcw
jae
roll
xlat
lea
or
or
test
imul
stc
cmp
repnz
leave
cltd
outsb
sub
lret
mov
jo
sub
repz
decl
pop
fnstenv
jb
dec
test
xchg
jecxz
fucomip
loop
pop
pop
and
mov
cmp
mov
pop
adc
and
jge
jl
outsl
std
and
inc
xchg
or
add
idiv
jg
dec
jbe
repnz
ret
or
bound
sub
fldt
mov
in
xor
mov
and
mov
jp
xchg
scas
repz
cmp
pop
inc
insl
in
dec
cwtl
mov
pop
pusha
dec
divl
cld
lcall
xchg
add
xchg
pusha
in
xchg
out
jl
cmpsb
lods
xlat
adc
lcall
scas
aam
mov
inc
scas
add
push
cmp
scas
shl
fistps
lret
outsb
cli
push
sub
jecxz
cli
add
out
pop
cmp
leave
clc
ffreep
rol
and
xchg
dec
dec
arpl
mov
sbbb
cmp
push
lcall
repnz
mov
lea
xchg
adc
jmp
fldcw
and
in
bound
add
jnp
movsb
aas
cli
call
out
cmc
ja
test
subb
stc
aam
lea
mov
and
add
pushf
mov
jg
adc
int3
das
fldt
adc
in
ret
push
push
pop
pop
hlt
fcoms
sub
sti
inc
test
xor
call
out
inc
out
inc
pop
jmp
sub
pop
xchg
pop
pop
test
and
jg
repnz
push
jmp
mov
mov
movsb
cmpsl
mov
fisubrs
out
ja
pop
jne
ja
jns
popf
cld
das
std
call
out
jno
fdivs
xor
orl
pop
stc
cmpsl
mov
xchg
mov
sub
jp
mov
ljmp
push
push
pop
inc
popl
test
jg
cli
orl
mov
sub
lods
fwait
rorb
aam
call
hlt
xor
sub
lea
lods
and
xchg
fists
movsl
pop
push
cmp
or
jge
dec
mov
mov
push
add
scas
stc
push
int3
xor
push
mov
outsl
mov
sahf
pop
clc
fcoms
hlt
xor
rolb
pop
push
sub
jne
prefetch
or
jle
stos
incl
pop
int
mov
push
sbb
int3
shl
adc
dec
mov
rcll
aaa
js
bnd
scas
pop
fisubs
pop
adc
cmp
xlat
inc
cmpsb
pushl
fdivrs
ljmp
outsl
cld
decl
mov
dec
adc
je
cmp
ret
sub
call
and
clc
mov
xchg
shrb
cmpsl
adc
jg
jno
jg
and
mov
je
jecxz
sbb
add
cmp
fisubrs
cmpsl
addr16
add
loopne
cmc
imul
and
lcall
or
es
lods
test
rcrb
mov
add
jne
int
inc
das
mov
cmp
repz
lds
cld
jmp
pop
int
inc
mov
lahf
xlat
cli
test
in
pop
stc
fmuls
ss
push
outsl
lock
push
xor
mov
mov
sbb
or
arpl
loopne
in
pop
cmpsl
pop
xor
in
mov
jecxz
ss
imul
repz
call
scas
xchg
shl
xor
imul
jecxz
jnp
mov
mov
jmp
enter
jge
mov
out
out
and
push
gs
insl
call
pushl
or
mov
rclb
shrl
daa
frstor
ljmp
adc
xchg
adcl
loopne
pop
sti
xor
cld
or
dec
repnz
fdivp
xorb
pushl
sbb
pop
push
xchg
rcrb
out
push
cltd
mov
lcall
sub
cmp
mov
sbb
dec
mov
pop
filds
pop
and
decl
std
outsl
lods
or
pop
jo
xchg
push
lods
mov
jge
je
imul
fdivr
lcall
lds
cmp
xor
inc
outsb
or
pop
bound
jp
adc
mov
ljmp
repz
decl
sbb
jmp
mov
sub
rol
addr16
cmpsb
subl
lock
pop
push
inc
ret
push
xchg
js
cmp
or
dec
pop
cld
decl
loope
push
xlat
mov
jb
ljmp
jmp
test
or
sbb
xchg
pop
jl
mov
call
lods
xchg
imul
mov
aaa
xlat
lods
cltd
loope
decl
insl
je
inc
jnp
xor
sti
pop
pushf
push
ljmp
jo
cmp
cmp
dec
lret
xor
jb
and
pop
cli
decl
jnp
mov
mov
das
repnz
imul
jl
test
or
lahf
xchg
add
push
fnsave
push
lods
lods
cmp
mov
leave
or
popf
xchg
rorl
aam
mov
xchg
jp
xor
daa
incl
xchg
xlat
xchg
push
push
pop
outsl
cmc
xchg
and
ficoms
js
inc
incl
mov
push
cld
pushl
push
lods
add
sahf
repz
divl
mov
and
pop
cli
das
inc
stc
and
xchg
ret
push
mov
mov
movsb
in
mov
dec
dec
dec
push
shlb
es
push
subl
push
push
mov
dec
add
mov
fildl
add
push
pushl
add
mov
push
pop
adc
enter
repz
cs
sbb
std
call
push
push
and
mov
cld
ffreep
in
jo
setge
adc
call
cmp
mov
jmp
arpl
or
mov
aam
out
xchg
ljmp
mov
adc
sbb
clc
jo
aas
and
xchg
fdivrs
or
adc
jmp
pop
std
call
and
mov
xchg
sbb
testb
mov
bound
stos
mov
popf
arpl
in
xor
aad
xchg
clc
andb
dec
pop
sti
xchg
adc
int3
leave
ss
jmp
dec
adc
mov
xor
xor
test
or
into
stos
and
test
repz
inc
push
push
inc
lcall
lret
repnz
jecxz
faddl
pop
addr16
dec
sub
pop
add
xor
cmc
fstl
sub
mov
lret
out
outsb
out
leave
mov
scas
loopne
mov
mov
fwait
lods
lods
std
call
test
imul
jecxz
mov
inc
push
pop
aad
xchg
decl
pop
sbb
std
nop
mov
sub
repnz
mov
push
and
lret
dec
jge
adc
inc
xchg
dec
and
or
frstor
rcrl
call
inc
mov
mov
stos
adc
inc
movsb
inc
test
mov
sbb
adc
xor
mov
jmp
jno
mov
pushl
cmp
jne
adc
or
ljmp
sub
lds
arpl
mov
inc
adc
inc
sbb
jge
pop
sbbb
xor
arpl
outsl
lock
lcall
outsb
cltd
out
mov
inc
shll
push
pushf
loop
push
repnz
mov
mov
aaa
mov
leave
aas
pushf
pop
pop
jb
push
pushf
cwtl
sub
call
mov
mov
pop
lret
aad
and
jl
pop
iret
ja
inc
not
call
jo
cmpsb
loopne,pt
push
mov
mov
jne
jb
cwtl
mov
xlat
out
movsl
mov
inc
lcall
jge
fadds
mov
sbb
shrb
xchg
clc
fucomip
int
ljmp
push
adc
dec
xor
incl
and
loopne
push
stc
inc
xor
loopne
das
and
xor
arpl
cli
xchg
filds
jecxz
mov
lret
cmp
or
jmp
pushl
sub
adc
push
add
push
repnz
add
cs
sbb
sub
fdivr
pushl
xchg
aam
cmp
sbb
testb
mov
inc
mov
shlb
sub
xor
add
loope
mov
iret
or
jmp
mov
mov
repnz
add
add
js
xor
imul
jg
mov
inc
div
out
arpl
xor
repnz
pop
pop
dec
cmp
mov
rcll
fstp
fimull
push
repnz
cmp
imul
add
jp
lock
and
decl
or
push
data16
add
or
xchg
dec
pop
imul
xchg
fildl
gs
call
fisttpl
xlat
scas
scas
lea
and
jg
pushl
jbe
mov
hlt
pop
js
in
cmp
ret
lods
ss
movsb
mov
cmc
fsubl
scas
mov
push
mov
push
das
mov
cmp
mov
jg
outsl
int3
dec
add
scas
es
je
jge
ret
sub
push
jnp
scas
into
and
nop
add
mov
push
ss
inc
enter
aaa
fldl
or
subps
outsl
jecxz
jnp
push
jg
adc
jmp
and
je
lret
cwtl
mov
push
hlt
ljmp
cld
cwtl
mov
and
push
lea
cs
or
mov
call
outsb
pop
push
loopne
or
pop
inc
rcr
inc
outsb
aam
hlt
pop
jno
aam
xchg
lds
shlb
push
lods
inc
pop
incl
call
cli
push
mov
subl
pop
jbe
add
mov
xor
call
data16
hlt
inc
xchg
fstpt
inc
adc
mov
inc
ljmp
loopne
adc
call
lods
icebp
lret
je
das
in
push
sub
ja
pop
test
xor
test
mov
loopne
add
mov
jecxz
mov
repnz
sbb
xchg
ret
xlat
mov
jns
arpl
sahf
jbe
xlat
dec
pusha
pop
imul
cmpsb
nop
call
outsl
fcomp
mov
in
dec
loop
popa
clc
mov
rclb
pop
add
cmpsl
pushf
jbe
cwtl
cli
das
cld
call
add
and
jp
imul
sbb
jo
incb
outsl
ljmp
or
push
into
inc
mov
xor
bnd
jbe
aaa
cli
lcall
clc
mov
aas
lds
adc
jne
or
stos
mov
sub
call
xchg
push
in
fbld
xor
cmp
icebp
loop
ds
clc
jmp
neg
aam
push
iret
xchg
shll
and
jnp
jg
out
dec
rcr
sub
cmp
imul
and
js
mov
mov
icebp
add
hlt
ret
adc
add
cwtl
push
out
repnz
cmc
lcall
sbb
aaa
out
and
sbb
test
mov
xor
mov
daa
movsl
jmp
dec
xchg
mov
cmc
lea
add
dec
aad
push
push
outsl
hlt
lcall
rolb
mov
andb
adc
jl
dec
std
dec
shr
les
dec
xchg
lock
popf
push
push
cwtl
insb
sarl
push
gs
mov
cmp
inc
cmc
pop
xor
bound
in
ficompl
cwtl
sbb
sub
fstl
or
pushf
jg
decl
jnp
ret
loop
cmp
call
cli
fistpll
jo
loope
xchg
xlat
test
out
scas
mov
sbb
leave
pushl
daa
iret
pop
push
pusha
mov
f2xm1
lods
mov
imul
es
dec
and
dec
int
xor
pop
dec
or
dec
data16
sbb
dec
mov
adc
pop
mov
push
adc
sahf
jo
push
sbb
out
or
and
and
sub
decl
pop
in
pmaxsw
xchg
sbb
jmp
sbb
adc
xchg
jb
sbb
rorl
fildll
notb
dec
lods
sahf
into
fsub
cmp
sub
lcall
sub
xchg
fwait
xchg
mov
xor
mov
addl
jo
lods
dec
pop
add
scas
cmp
cwtl
xchg
aaa
and
mov
xor
mov
pop
enter
cld
pop
into
gs
test
shlb
test
leave
jbe
fmuls
aam
and
push
push
and
push
inc
and
aad
nop
cld
ficompl
ds
mov
mov
call
leave
push
jecxz
gs
insb
aam
dec
dec
pop
and
fs
addb
xchg
stos
fwait
xchg
fisubrl
mov
xchg
test
loope
push
leave
repz
add
mov
out
adc
addr16
dec
call
ljmp
mov
mov
mov
in
es
js
cmc
and
popl
cld
jmp
dec
push
cmc
dec
addr16
mov
mov
aaa
and
call
lcall
lret
das
jl
hlt
mov
mov
adc
adc
lcall
inc
rorl
sahf
sarl
jno
xor
and
push
pop
xchg
mov
mov
mov
orl
dec
test
adc
lcall
sub
mov
mov
ljmp
fbstp
daa
popa
repz
je
popa
push
push
xchg
lds
mov
sbb
decl
inc
lock
out
test
dec
out
dec
test
xor
pop
clc
or
push
mov
sahf
xchg
ljmp
movsl
pop
fsubl
shll
or
shlb
dec
dec
sbb
mov
out
cmp
outsb
fcmovbe
pop
pushl
lret
test
les
negb
aad
or
mov
outsb
mov
cmp
inc
daa
add
inc
das
and
icebp
cltd
sub
mov
subb
aam
outsl
lock
sbb
sarb
mov
xor
movsl
fdivrp
xchg
sub
sti
xchg
jl
daa
mov
add
dec
xchg
xchg
cli
out
test
push
mov
inc
mov
incl
stc
fs
icebp
and
movsb
inc
add
insb
daa
in
push
xchg
cmp
mov
lret
imul
mov
dec
mov
rcrl
xchg
or
daa
je
xorb
pop
mov
fidivrs
and
sbb
pop
mov
xchg
jle
jmp
mov
sub
std
mov
xor
int3
add
daa
lea
cmp
pop
mov
and
and
pop
clc
mov
mov
jmp
pop
jns
movsb
sahf
add
mov
add
mov
mov
xchg
in
les
jecxz
push
fdivl
xchg
dec
inc
xchg
ljmp
sbb
imul
insb
jne
icebp
icebp
push
jmp
mov
fidivrl
clc
call
inc
out
jns
fs
das
jmp
or
call
xor
call
pushl
cmp
ljmp
inc
imul
and
pop
push
inc
cmp
aad
stos
dec
jp
cli
pop
loop
lret
sub
and
insb
cltd
fs
scas
lods
cmpsb
inc
ljmp
shrb
out
jecxz
ss
sub
lcall
hlt
popf
mov
sub
jo
adc
cmpsb
jbe
movsl
ss
lret
pop
or
xchg
cld
xor
lods
sbbb
xchg
fsubrs
decl
dec
sub
pop
stos
cld
daa
mov
xor
xchg
das
stc
sub
incl
adc
adc
test
les
popa
bswap
xchg
cs
or
and
dec
mov
mov
sbb
aaa
mov
xor
lcall
mov
xorl
sub
mov
dec
xor
push
cld
pop
clc
jg
mov
fisttps
cmp
ljmp
jno
rol
mov
sti
xor
into
ljmp
xchg
lods
pop
xchg
xchg
cmp
daa
adc
xchg
incl
mov
xchg
xchg
push
xor
insl
add
fcoms
adc
in
clc
lods
xchg
pop
xor
das
and
test
add
test
sub
inc
mov
adc
stos
sbb
aad
fdivrs
repz
incl
mov
cmp
push
ja
cmp
sbb
les
and
ss
cmpsl
lahf
sahf
outsl
adc
xor
loope
insb
mov
mov
inc
sbb
mov
add
sub
mov
lcall
not
lods
pushl
xor
test
and
je
sbb
mov
sti
push
sti
pop
lcall
cmc
xor
inc
in
jbe
jae
fidivrl
ljmp
hlt
out
insl
mov
lods
pop
jg
dec
mov
and
add
cmp
loop
sti
sub
jno
or
mov
dec
adc
mov
incl
movsb
mov
out
sbbl
and
bound
imul
and
incl
jle
out
mov
imul
inc
lret
adc
sbb
call
dec
js
divl
mov
jno
aas
cmp
push
sarl
mov
imul
sarb
cld
pop
fsubl
ljmp
dec
inc
jbe
jne
mov
ljmp
cmc
incl
push
pusha
dec
es
std
adc
adc
popa
pop
stc
mov
incb
inc
lcall
xchg
xchg
lods
and
loop
jp
pop
mov
filds
out
outsl
negl
stos
add
push
sbb
pop
push
adc
cmp
jge
mov
imul
adc
add
popa
incl
out
sub
push
pop
dec
pop
sub
addb
lds
test
and
loopne
lcall
sbb
pop
outsl
test
jle
mov
sub
repz
jnp
loop
or
out
lcall
and
jo
add
dec
add
testl
leave
and
aaa
lock
pushl
aad
mov
flds
addr16
and
inc
mov
ljmp
clc
inc
ss
inc
ror
test
xchg
mov
rorl
lds
xchg
mov
cmp
fucomip
mov
sbb
ss
xchg
cmp
scas
dec
subl
out
cmp
sbb
sub
test
fcoml
lea
into
cwtl
inc
icebp
push
lahf
loope
pop
loopne
cmp
into
pop
cwtl
fldenv
movsl
xor
jbe
pop
inc
or
or
mov
lea
jl
or
mov
loop
mov
mov
rcll
cmpsl
dec
cmp
incb
scas
mov
push
shll
inc
inc
mov
les
mov
mov
xor
std
and
outsl
xor
cli
mov
cmp
xor
and
cs
or
orb
pop
outsw
jmp
loopne
cmp
fists
icebp
popa
xor
lret
cmpsl
cmpsb
adc
or
dec
test
pop
sahf
lock
push
dec
clc
push
incl
dec
rcrl
in
push
in
movsl
mov
lea
cli
call
dec
dec
dec
adc
mov
xchg
test
pop
lcall
shl
add
dec
imul
jmp
add
jg
push
dec
cmp
mov
jo
mov
rorb
xor
jl
fsubrp
cwtl
cmp
mov
pop
jle
add
cmpl
leave
pop
das
loope
test
mov
and
jmp
xchg
mov
jg
push
adc
stos
cmp
pop
lods
sahf
jns
fwait
into
jg
cmp
mov
frstor
lahf
mov
test
push
stos
cli
jg
std
inc
outsl
cmp
popf
enter
or
and
dec
xor
adc
push
je
ljmp
lea
std
sub
dec
xor
clc
mov
push
lcall
sbb
cmp
mov
add
jp
sarb
push
inc
cltd
fsubrl
lcall
xor
inc
repnz
or
loope
cmpsl
pop
mov
outsl
stc
or
dec
or
icebp
adc
loop
xlat
js
int
pop
mov
xlat
call
dec
pop
mov
loope
pop
ret
push
jbe
js
cld
lcall
test
dec
jecxz
or
shll
jge
mov
lcall
cmp
add
int3
and
inc
lret
mov
test
ljmp
rcrb
or
mov
je
cmpsb
push
push
movsl
ja
mov
adc
inc
jmp
jno
cli
add
daa
fsubr
xchg
out
jbe
andb
add
mov
aad
jmp
std
or
and
xchg
push
adc
rcrl
int3
mov
mov
jg
mov
lahf
nop
scas
mull
dec
into
test
loope
movsl
xchg
mov
clc
sub
nop
jmp
push
jmp
add
push
repz
push
lcall
std
rcr
popa
mov
adc
rol
stos
fsubr
ljmp
lcall
pop
pop
sbb
std
add
mull
mov
das
std
call
cmpsl
es
pop
add
or
xor
test
lcall
shlb
aas
inc
push
cld
in
hlt
cmp
or
orb
dec
inc
in
pop
pusha
incl
lods
daa
aas
faddl
mov
hlt
mov
incl
call
mov
nop
sbbl
push
and
rolb
inc
pushl
decb
je
jp
jge
pusha
test
les
adc
pop
incl
clc
insl
rorb
or
jge
scas
dec
dec
call
sti
movsb
push
dec
insl
cmc
out
sub
aam
or
int3
or
pusha
add
push
xor
jnp
lahf
cmp
push
iret
xlat
xor
dec
insl
setne
ljmp
jnp
ss
lret
mov
and
push
mov
or
call
inc
stc
ret
shlb
xchg
add
mov
mov
repnz
cmp
sar
mov
mov
shll
mov
xchg
sbb
push
es
repnz
mov
pop
std
fcoms
add
aad
xchg
push
stos
scas
push
test
imul
pop
push
fildll
sub
sbb
and
stos
or
and
inc
push
mov
xor
test
std
incl
shlb
fs
rcrl
cmp
xchg
out
push
jp
mov
cld
movsl
int3
pop
out
cli
fdivrl
scas
stc
fcmovnbe
xorl
scas
fdivl
jl
iret
sub
enter
je
mov
scas
lret
test
sub
loop
push
pop
or
dec
jge
inc
cmp
shr
jno
jmp
addr16
sbb
sub
stos
addr16
dec
sbb
xchg
into
sbbl
decl
adc
add
fcomps
cmp
mov
xorb
mov
fstl
xchg
jp
add
mov
jp
je
mov
daa
mov
push
jmp
mov
sarl
stos
pop
dec
sub
jecxz
pop
mov
jg
roll
aad
movsb
jecxz
orl
out
push
subl
cld
out
cwtl
dec
mov
addl
push
mov
lcall
lea
jmp
inc
jmp
cmpsb
jp
out
and
jns
xorb
lea
lea
repz
mov
pop
clc
jg
push
ja
fimull
mov
es
test
pushf
adc
xchg
cli
jg
int3
mov
fidivs
push
xchg
mov
stos
cmp
jecxz
js
or
sub
push
pusha
pop
sub
mov
jg
movsb
push
stc
pop
jge
aaa
shlb
xlat
scas
xchg
sbb
mov
xor
movups
decl
mov
mov
psubd
test
mov
cltd
lcall
addr16
out
push
jmp
xchg
fdivrl
push
fldcw
cmpsl
cmpsl
pop
jl
mov
adc
mov
clc
lods
or
imul
lret
mov
dec
js
cmpsb
lods
adc
pop
jbe
pushl
cmpsl
insb
movsl
aas
push
arpl
push
in
stc
fisubrs
ret
jg
call
aaa
mov
stos
fdivs
pop
scas
sbb
sti
push
adc
rolb
les
movsl
add
sbb
cmp
lock
sbb
popf
sar
sbb
add
fst
iret
outsb
cmp
ret
out
push
mov
lods
jp
call
test
and
out
and
dec
je
fidivrs
push
jg
sbb
mov
call
jmp
xchg
mov
dec
insl
daa
rcrl
pop
jg
push
jmp
push
and
push
test
and
sbbb
push
mov
mov
mov
mov
out
es
into
pop
pop
andb
je
jg
inc
ja
popf
in
fnsave
lret
adc
es
das
jbe
xor
pop
cli
sub
inc
insl
cmp
lcall
add
sti
outsb
test
jo
cld
mov
or
hlt
add
lds
test
inc
inc
cmpsl
js
decb
pusha
push
ja
ljmp
jle
ficoms
mov
push
xchg
mov
xchg
in
push
decl
sbb
in
or
cli
ror
xchg
filds
clc
add
aad
dec
dec
add
jg
jmp
mov
aas
insb
lock
cmpsl
mov
adc
jae
xchg
call
incl
or
sub
fnstcw
movsl
mov
inc
mov
adc
dec
xor
bound
or
in
xor
ss
mov
daa
cld
xchg
mov
data16
mov
pop
lds
test
stos
out
pop
or
je
into
xchg
push
and
sub
punpckhwd
and
aas
jmp
mov
insl
inc
cmp
loope
sbb
sub
cli
outsl
icebp
xchg
sarl
mov
rorl
ud0
incl
and
rcl
mov
pop
stos
rol
inc
cli
sbb
adc
rclb
jne
out
jg
fistl
pop
insl
mov
loop
sbb
test
ret
push
xchg
push
hlt
push
pushl
jne
sbb
mov
mov
pop
js
mov
adc
xchg
push
ret
cltd
imul
mov
ss
xor
test
jmp
lret
add
cmp
jb
pop
pop
call
decl
inc
xchg
out
jo
hlt
and
mov
push
mov
call
mov
sbb
je
dec
dec
cld
pop
push
inc
or
or
xchg
decl
push
sbb
sub
lret
fs
fisubl
jae
mov
cmc
dec
xlat
or
ljmp
jge
stc
lods
or
dec
sbb
adc
call
push
in
pop
popa
xlat
aas
dec
lods
and
dec
ljmp
loopne
loop
hlt
lcall
clc
std
mov
cmp
jg
add
sbb
sub
sbb
mov
test
in
fists
inc
mov
aad
nop
pop
dec
in
sahf
addl
sbb
cld
fs
pop
push
sbb
xor
add
sbb
cld
mov
inc
dec
mov
jne
testl
mov
sub
xchg
testb
imul
sbb
push
push
fwait
je
fsub
aas
pop
bound
jg
push
xlat
sub
adc
aad
adc
pop
sub
fstpt
pop
push
ret
jnp
test
lcall
incl
mov
xor
out
mov
rorb
and
mov
call
ss
xchg
pushl
fsubrs
popa
sub
test
mov
lods
repz
rcrb
mov
lret
xor
and
jecxz
add
mov
popf
call
incl
leave
or
js
das
movsb
fisubrl
sbb
xchg
sahf
sub
jg
mov
and
mov
rcr
inc
arpl
mov
lock
sbb
xor
hlt
xchg
incl
lds
bound
adc
pop
call
dec
lret
les
dec
data16
gs
xchg
xor
pop
or
sarl
lcall
jge
ffree
pop
lret
shrl
int
mov
inc
mov
imul
sar
decl
repnz
flds
imul
xor
mov
insb
dec
pop
or
pop
jp
sub
inc
inc
loope
adc
mov
mov
mov
je
add
or
out
sti
xchg
pop
jecxz
jg
mov
sub
lods
and
fmull
mov
fbld
and
jge
mov
jg
fsubl
fs
mov
xor
push
movsb
lret
incl
cltd
lahf
roll
out
sbb
push
divps
sbb
push
push
incl
xor
inc
push
es
lahf
cs
jecxz
xchg
dec
scas
cmc
inc
in
or
movsl
fsubp
jmp
mov
pop
fidivs
push
incl
incl
cmp
test
outsb
xchg
subl
fs
popa
jbe
cmp
lahf
subl
popf
stos
xchg
or
in
je
push
stos
aaa
sbb
loopne
and
addr16
xchg
lcall
mov
rclb
lds
jno
pop
mov
or
mov
inc
lock
sbb
lcall
mov
test
push
sub
cmc
xchg
ljmp
xor
jno
dec
push
stc
inc
sbb
insl
aam
xchg
dec
lret
xchg
fildll
insl
jmp
mov
mov
jl
adcb
adc
call
xchg
movsb
std
fldl
arpl
fisttpll
in
in
mov
divb
dec
lods
mov
aas
jnp
decl
xchg
pop
xor
and
mov
jmp
jge
inc
cmp
dec
pusha
xor
pusha
inc
cs
lods
mov
test
aaa
or
iret
mov
call
sbb
xchg
jo
mov
mov
jns
push
adc
mov
mov
inc
int3
test
xchg
dec
gs
jne
dec
test
movsb
stc
mov
pop
dec
mov
int3
jg
adc
clc
mov
pop
dec
flds
flds
dec
test
lods
push
xchg
inc
jns
pop
out
rcl
xrelease
lods
cli
cld
adc
cmc
or
xchg
fcmovnbe
daa
fwait
mov
fnsave
add
mov
roll
push
cli
lcall
out
ret
popa
xor
cltd
stos
push
test
fistpl
push
or
call
fldenv
pusha
mov
popa
cmc
addr16
lds
mov
iret
pop
ret
mov
mov
fistps
jg
cli
and
hlt
gs
fisubrl
jecxz
push
mov
aas
xor
es
pop
jno
mov
mulb
out
fld
mov
mov
adcb
jle
rorb
sbb
jnp
jae
mov
xchg
std
pop
daa
lds
enter
decl
add
jae,pt
mov
push
dec
or
filds
push
sbb
shll
fdivp
addb
xchg
call
and
ljmp
rolb
jl
pushf
mov
or
mov
lods
xchg
adc
inc
push
xchg
rcrl
jecxz
dec
adc
clc
cltd
pop
loope
sar
outsl
lock
stos
jae
movsb
inc
pop
jb
loopne
mov
dec
shlb
add
sub
fiaddl
jmp
pop
pop
sbb
lretw
out
fisubrs
loopne
or
mulb
test
daa
jb
das
dec
push
sbb
lret
cmp
mov
jmp
data16
decl
ret
imul
addl
cmp
adc
sbb
mov
rcll
in
and
outsl
mov
incl
push
aad
sti
and
ss
enter
jp
sbb
arpl
mov
lcall
stos
adc
inc
lock
mov
adc
cmp
ret
incl
cmc
nop
rcll
mov
scas
ficompl
decl
ret
mov
outsb
imul
jbe
ljmp
or
sub
call
xor
push
sbb
pop
scas
addr16
add
adc
rcll
pop
mov
call
sub
je
ljmp
inc
cmc
xchg
adc
and
sub
movsb
insb
or
jmp
push
mov
jle
out
sbb
cli
inc
popf
addr16
sub
ljmp
aam
pushl
orl
sbb
cmc
cmp
xor
mov
pop
cmp
call
in
jo
int3
xor
je
and
lods
jns
xor
aaa
movsl
fnclex
lock
jg
jmp
outsb
popf
mov
jp
movsb
daa
imull
fildl
xchg
outsl
decl
sbb
mov
jbe
scas
in
into
arpl
fstl
decl
call
push
push
cmpsb
aam
aam
sub
std
xchg
mov
mov
cmpsl
jg
mov
sub
incl
std
sub
rol
mov
ret
frstor
xchg
leave
cld
ljmp
sub
add
in
jp
pushf
out
push
nop
sub
iret
inc
sarl
jg
stos
call
stos
mov
dec
shrb
adc
sti
mov
cli
popf
and
rcl
xor
jno
in
push
or
push
scas
xchg
jo
leave
dec
loopne
test
inc
test
ds
enter
jg
jnp
test
cltd
mov
cmp
jb
outsl
pop
mov
lcall
insb
sbb
mov
pop
push
mov
das
push
mov
jge
lcall
imulb
xor
mov
lds
loopnew
and
lcall
inc
lock
mov
stos
push
clc
fisttpll
rclb
dec
fidivs
clc
and
sub
aaa
or
add
jnp
jmp
and
and
stc
jne
jg
pushl
in
adc
cmc
xlat
fwait
loop
fnsave
out
or
sti
push
jmp
scas
mov
and
arpl
data16
sbb
ja
rcr
mov
xor
stos
out
mov
jo
icebp
adc
pop
pushf
mov
inc
inc
test
sahf
pusha
inc
inc
add
sub
jg
js
pop
xor
mov
cs
pop
es
decl
pop
inc
push
xor
sub
fnstcw
pop
test
push
out
jns
sahf
inc
pusha
jnp
int3
jns
sbb
ror
daa
jnp
or
test
mov
jecxz
imul
push
rolb
sub
movsl
cmc
mov
fiaddl
dec
movsb
lods
pop
popf
mov
testb
hlt
fiadds
and
cli
call
fisttps
mov
sbb
adc
clc
fucomp
dec
andl
and
enter
call
popa
ja
push
inc
add
fwait
mov
lods
les
in
jmp
mov
idiv
jmp
sahf
xchg
pop
or
loope
and
insl
cmp
push
mov
jae
insb
mov
aam
xchg
rolb
xchg
cmp
incl
test
cltd
test
xchg
in
sar
roll
pop
pusha
xchg
fucomip
hlt
dec
xor
cwtl
mov
stos
sub
push
mov
mov
push
dec
jmp
jmp
lret
cld
push
add
mov
pushf
mov
inc
sbb
and
lcall
inc
pop
repnz
aas
rorb
lret
outsl
lea
add
ret
adc
jecxz
fbld
inc
pop
nop
push
sub
adc
lcall
fbstp
jb
stos
addr16
stos
push
push
cltd
and
mov
scas
into
jbe
stos
cmc
data16
decl
and
cmp
pushf
and
mov
insb
mov
das
push
out
ljmp
push
inc
push
mov
cmp
mov
sub
mov
inc
push
pop
push
cld
call
outsl
pop
sahf
adc
mov
in
sub
fistps
decl
sub
in
stos
or
pop
mov
lea
mov
test
sub
cmp
cmp
fnstsw
incl
lcall
stc
incb
repz
and
imul
jno
fldl
sbb
decl
loop
mov
pop
push
fidivrs
mov
arpl
cs
jle
sbb
pop
ljmp
push
mov
mov
mov
std
cmc
loopne
pop
mov
push
add
xchg
pop
icebp
jle
aam
js
cld
decl
mov
call
popa
push
fists
out
adc
int3
hlt
or
jmp
pop
xor
lcall
in
gs
jmp
mov
je
xor
outsl
lret
pushl
pop
adc
fcomps
lcall
cmc
ljmp
cwtl
mov
cmpsl
jb
sub
mov
pop
mov
sub
incl
mov
insb
out
in
sbb
add
js
xor
mov
push
sub
incb
mov
imul
xchg
pop
mov
ljmp
mov
mov
imul
movsb
and
jbe
pop
mov
mov
arpl
jns
int3
mov
outsb
jno
cmp
mov
add
out
arpl
outsb
movsb
lcall
repz
mov
inc
sbb
repz
and
inc
and
dec
sbb
sbb
mov
cld
push
dec
int3
add
sbb
mov
xor
insl
jbe
cld
jg
shlb
hlt
rolb
mov
xor
sub
push
shld
jmp
sub
stos
fistpll
mov
inc
inc
adcl
sbb
push
mov
lcall
cmp
imul
lcall
xchg
add
in
inc
dec
push
cmp
in
xchg
mov
and
ret
decl
push
cmp
jecxz
rcll
imull
mov
stos
stc
mov
in
ds
fsubs
call
in
xor
mov
sub
jns
lcall
cld
adc
adc
in
lds
mov
jmp
cs
add
ret
icebp
into
ja
cwtl
popf
and
loope
out
or
mov
adc
dec
mov
test
adc
sub
movsb
addr16
cmp
mov
ljmp
addb
push
push
int
ljmp
test
jae
dec
ret
push
lcall
cmp
mov
lahf
nop
lock
mov
incl
fldt
fidivrl
xor
jne
es
pop
lret
xchg
mov
std
xchg
test
outsl
pop
jl
or
cmpsb
aas
dec
xchg
sub
ja
jecxz
hlt
push
pusha
sbbb
test
fiaddl
clc
jg
inc
jae
cwtl
inc
loop
xor
mov
mov
imull
jl
mov
cmc
xor
add
mulb
inc
mov
pop
orb
inc
das
icebp
jge
adc
or
insb
ret
pop
push
cmp
push
jge
mov
fucomip
dec
push
pop
push
xchg
arpl
sti
lahf
jns
testl
mov
idivl
in
pop
and
cmc
outsb
xorl
inc
popa
mov
push
jbe
and
dec
sysret
xchg
mov
fnstcw
mov
push
das
adc
popa
lahf
aaa
data16
mov
lcall
xchg
sbb
and
insb
pop
or
or
cmc
ljmp
loopne
push
pop
push
dec
out
mov
aad
sti
in
hlt
cmp
repnz
sub
test
push
inc
fucomi
sbb
aas
cmpsl
mov
call
mov
jno
push
js
orb
sti
mov
icebp
decl
pop
hlt
push
xor
cli
sub
dec
mov
jg
ljmp
adc
adc
mov
jmp
pop
pop
loopne
cmpb
xor
das
cmc
aaa
dec
lea
sbb
outsl
and
inc
mov
sbb
fnsave
or
inc
add
mov
lods
sbb
ljmp
ljmp
add
mov
jecxz
fsubl
icebp
push
bswap
push
divb
cli
lea
pop
and
xchg
sahf
scas
push
jle
mov
and
or
cmp
sub
pop
inc
addl
sbb
fidivs
adc
mov
jbe
cmp
inc
pop
das
cmp
xchg
jnp
xchg
jno
incb
test
ror
les
es
std
fsubrs
ljmp
out
hlt
cmp
pmuludq
jne
xchg
mov
jg
jg
mov
sub
stc
aas
pop
cld
lcall
fidivrl
movsl
bound
pushl
inc
loope
cli
jb
lret
cmpsb
popa
cmpsb
or
cld
mov
jbe
addb
mov
sbb
testl
adcl
sbb
xlat
jo
test
pop
sub
sbb
fwait
mov
push
inc
cmpsb
push
sbb
sbb
dec
xchg
js
mov
mov
sbb
aaa
pop
ljmp
imul
sub
outsb
sbb
xor
jno
or
out
pop
leave
outsl
lds
cmp
inc
lcall
pop
les
push
rcr
pop
inc
data16
ficoms
push
xlat
mov
inc
sub
pop
ud0
clc
decl
and
aad
push
lret
scas
daa
mov
push
inc
cs
pop
stos
adc
imul
cwtl
xorb
sbb
inc
sub
and
in
ds
cmp
cmp
repnz
mov
push
rcll
mov
mov
ljmp
cs
push
bound
adc
lock
test
dec
test
filds
or
jb
sub
je
dec
in
loop
cmp
inc
decl
mov
shl
jg
incb
dec
lret
inc
ds
push
ret
add
push
push
mov
sti
in
ljmp
in
or
lahf
cmpsb
mov
mov
or
jmp
cmp
cltd
mov
fidivrs
adc
leave
subl
sub
into
shld
jl
push
adc
mov
loop
cwtl
and
test
jmp
movsb
setp
lods
mov
ja
cmpsb
jle
add
lret
push
add
jno
mov
lcall
test
mov
xor
stos
fucom
add
pop
decl
jno
mov
cmp
sbb
enter
dec
repnz
pushf
pop
sub
mov
add
mov
push
cmpl
mov
xlat
push
ret
xchg
lret
lds
je
fucomip
call
mov
jp
adc
mov
add
or
pushl
pop
xchg
push
jmp
sbb
ficoms
push
and
jnp
sub
ja
rolb
dec
sub
or
jge
mov
jl
mov
leave
loopne
adc
rcl
sarb
pop
fs
mov
push
fnstcw
ljmp
inc
je
cmpsl
cld
movsl
test
rclb
sahf
dec
ljmp
pop
pop
jo
pusha
add
loope
jg
adc
shl
in
cmp
mov
das
aad
pushl
adc
aad
jb
rorb
bound
pop
std
ljmp
add
sbb
add
lods
fcmovnbe
cwtl
jo
ljmp
or
xor
iret
inc
fisubl
mov
sti
jnp
rcrb
xchg
jg
mov
jge
adc
shl
mov
xchg
sub
cmp
lcall
outsb
ja
jg
sti
iret
loop
fucom
inc
push
addr16
cld
das
adc
cli
shlb
add
mov
cld
decl
xchg
mov
jmp
mov
scas
arpl
mov
std
xchg
and
lcall
out
popf
xchg
out
cld
mov
push
jle
pop
adc
lds
loope
out
sub
add
rclb
adc
mov
ljmp
hlt
sbb
mov
outsl
jbe
dec
lcall
frstor
lcall
push
insb
adc
inc
or
shr
push
jg
decl
int
push
or
and
or
and
sahf
subb
call
stc
stos
loope
les
scas
jg
loope
rol
sarl
scas
mov
xor
ljmp
sub
xchg
stos
aaa
xor
mov
inc
dec
ror
sbb
movsl
pop
mov
jnp
xor
or
jg
test
sub
dec
sbb
mov
xchg
ljmp
xchg
or
push
js
add
scas
xchg
shlb
add
std
pop
mov
cmp
jae
jecxz
xchg
ljmp
lahf
dec
jbe
xor
lock
lea
or
in
xor
ljmp
push
sbb
pop
xor
adc
jmp
and
mov
dec
bound
and
outsl
mov
decl
add
jmp
sub
lcall
dec
lock
in
call
gs
jns
imul
mov
mov
pushl
mov
test
jecxz
jmp
sbb
jnp
xchg
inc
fistpl
pop
sub
xchg
cmp
cmc
call
mov
add
jecxz
shll
addr16
cmp
xchg
mov
mov
or
enter
jo
inc
mov
mov
mov
mov
adc
jmp
cmp
and
add
fstps
test
sbb
outsb
and
jbe
nop
xchg
pushl
inc
shl
jno
mov
clc
popa
pop
pop
sti
cmp
xchg
push
mov
jg
jg
xchg
lods
pop
fsub
xor
cmpsl
aam
iret
push
mov
dec
cmp
pushf
dec
ds
sub
mov
add
test
fistpll
xchg
cmp
inc
push
mov
je
fs
jg
mov
cmp
cmpsl
sahf
in
test
dec
loopne
mov
ljmp
repz
mov
std
call
dec
jle
pusha
cld
jae
mov
cmp
dec
ds
in
outsb
call
push
loopne
adc
adc
mov
dec
lods
js
out
and
daa
popa
fwait
jl
sbb
pop
hlt
push
inc
sub
jbe
cmc
mov
xchg
shl
cli
out
sarb
jmp
ljmp
es
fdivrs
mov
ljmp
hlt
and
or
xchg
mov
push
mov
and
stos
jg
dec
mov
lods
neg
jbe
jne
adc
decl
mov
ja
fsubr
sub
adc
rcll
sbb
ds
dec
jae
lods
xor
push
rorl
dec
push
mov
movsb
push
insl
aaa
cli
fbstp
or
jbe
xchg
xchg
xor
data16
into
ljmp
lret
in
cltd
lods
or
outsl
addr16
pop
xchg
mov
fisubs
jmp
mov
sahf
inc
mov
idivb
or
push
pop
cmp
icebp
pop
cld
jg
jg
and
jl
ds
out
lock
or
decl
outsl
and
test
jbe
out
mov
add
icebp
outsl
lock
xchg
inc
aaa
out
jne
add
test
sbb
insl
rcrl
adc
fsubl
loopne
adc
mov
xor
dec
das
fs
insb
jg
push
or
jecxz
mov
imul
push
or
decl
outsl
mov
dec
fcom
lahf
cmpsl
bound
sbb
mov
push
inc
ja
push
in
scas
jge
daa
mov
inc
xor
mov
scas
das
cmpsl
andl
inc
sub
iret
es
shl
lods
adc
loopne
jmp
in
dec
loop
mov
cmp
test
inc
xchg
sub
jns
dec
decb
add
incl
arpl
push
mulb
call
jp
inc
lret
mov
movsb
loope
lea
call
ljmp
pop
ljmp
sbb
int
popa
test
das
decl
xorb
ss
and
mov
pop
lock
ljmp
and
xor
jnp
dec
mov
inc
mov
cmp
dec
inc
mov
pop
sub
popf
lds
push
fwait
pop
fldl2e
or
and
jnp
cmp
mov
jle
push
push
loopne
cmp
mov
add
sub
pop
scas
cli
and
decl
add
jno
pop
fwait
out
cli
pop
mov
gs
push
mov
pop
lock
mov
mov
outsb
xchg
cmp
push
ficoms
dec
aas
test
push
add
adc
enter
inc
icebp
jbe
mov
push
push
in
xchg
aad
nop
ljmp
sub
adc
aas
or
mov
aad
mov
add
ljmp
inc
int
bound
add
or
push
jmp
xchg
push
sbb
cmp
jle
test
scas
push
rclb
dec
out
or
dec
mov
movsb
cmc
decl
lds
jmp
sub
rcll
sahf
fisttps
xchg
mov
mov
xchg
ja
lods
out
and
loope
test
sub
lcall
sarl
lock
adc
mov
adcb
data16
test
fcmovnb
and
cmp
ds
jno
imul
jo
jecxz
lcall
xchg
mov
mov
fnsave
sti
inc
or
loop
lea
js
adc
inc
and
mov
ss
sub
test
push
cmp
ljmp
xor
aas
inc
sub
mov
xchg
fisttps
pop
cli
and
inc
jb
lods
xchg
xor
in
sbb
sub
xchg
xchg
popa
lret
pop
arpl
dec
cwtl
jb
push
add
or
cmpsl
xchg
ret
ljmp
in
and
push
add
push
pop
mov
xchg
mov
jb
mov
arpl
push
lea
or
stos
jp
ljmp
stos
add
rcrb
ret
call
imul
xchg
sarb
mov
ljmp
sub
sub
pop
push
jno
arpl
leave
jp
fdivrl
clc
cmp
insb
movsb
cwtl
cmp
sbb
jno
inc
nop
decl
xchg
inc
cmpsb
cmp
arpl
push
sbb
lcall
add
xor
or
push
ss
push
sub
sti
xor
subl
xchg
cmp
daa
movsl
mov
into
xchg
push
mov
ds
cmp
das
shl
incl
xor
ss
ror
rcrl
and
mov
iret
cmp
outsl
push
scas
or
insb
fucomp
jae
pop
xchg
mov
sbb
pushl
xchg
dec
sahf
aad
push
pushf
mov
out
cltd
rcrl
jnp
ds
jmp
and
mov
sti
enter
fldl
push
mov
rclb
pop
ljmp
xlat
ret
mov
clc
dec
mov
addr16
mov
aam
call
ljmp
inc
je
mov
shll
push
cs
rcrl
ljmp
fimuls
inc
adc
fwait
test
fwait
cld
push
sbb
adc
sbb
xchg
push
cmp
add
ret
mov
scas
push
mov
outsl
icebp
ljmp
mov
dec
test
mov
test
inc
incl
aad
movsl
fsubs
jp
push
jb
lods
add
and
mov
cli
sar
fcom
mov
adc
xchg
cmp
mov
int
lcall
adc
push
aaa
sarl
push
xchg
cld
icebp
fstpl
stc
mov
loopne
pushl
loopne
jmp
in
mov
pop
push
ds
cmc
das
icebp
decl
dec
and
idivl
lret
dec
sub
mov
inc
clc
add
cmpsb
dec
mov
mov
scas
bound
jmp
decl
es
imul
stos
out
add
mov
add
xchg
sbb
push
jbe
decl
xchg
out
cmp
das
out
or
imul
xchg
cmp
cmp
test
fimull
popw
pop
and
pop
sub
int
nop
shl
dec
sbbb
and
mov
jecxz
icebp
jae
imul
inc
insb
in
insl
in
pop
xor
and
into
cld
cmp
push
jo
nop
jl
aaa
sub
jno
sbb
push
stos
jg
scas
inc
stos
xlat
or
sti
inc
addr16
ljmp
mov
xchg
adc
xchg
cmp
stos
and
sbb
push
sub
test
lcall
push
das
cmpb
push
andb
pushl
pop
pop
or
mov
xor
movsl
adc
jge
lods
add
add
adc
jmp
stos
std
pop
orl
out
fsubrl
je
jno
fsubrl
outsl
xor
fnstsw
adc
popa
mov
lea
inc
int3
aam
xor
inc
movsl
dec
xchg
push
adc
ljmp
pop
rolb
lea
cmpsl
dec
or
cmp
mov
or
jmp
cmp
hlt
les
scas
pop
or
fwait
out
add
jg
or
ret
lret
int
imul
mov
cmp
jno
xor
dec
repz
int3
sub
aaa
or
mov
aam
mov
push
jne
int3
cmp
int3
lret
lret
jmp
mov
xchg
and
jno
js
mov
sar
mov
cmp
sahf
bound
rclb
call
clc
xchg
xor
aas
fistpll
mov
fidivrs
in
push
mov
outsl
jne
xchg
test
jp
cltd
push
push
and
cmp
jno
ljmp
jmp
push
jno
sahf
fidivs
dec
cmpsb
mov
and
jns
movb
cli
loope
lret
cmp
sub
lcall
pop
inc
je
out
roll
mov
lret
in
mov
fldz
cmp
cld
in
push
push
pop
fwait
pop
and
adc
adc
sub
jg
aad
nop
out
add
mov
jg
or
insb
dec
xchg
test
or
cli
lcall
mov
mov
aad
sub
add
lods
jg
pushl
push
sbb
dec
sub
and
fistps
jo
adc
ret
inc
add
decl
and
add
xchg
jae
jmp
mov
cli
and
leave
adc
out
pop
fstps
in
pusha
out
mov
inc
push
jb
test
lods
js
cli
jg
fs
sbb
jmp
cmp
insl
rcr
adc
mov
or
sbb
push
ljmp
mov
pop
out
dec
cmp
scas
and
fimuls
out
mov
lcall
sbb
rcrl
sub
push
cmpl
lock
and
or
jb
cli
cld
push
popa
pop
xlat
pop
aaa
es
xchg
or
fsubrs
imul
outsb
jae
xor
pushl
leave
fcomps
outsl
mov
add
in
pushf
jg
call
pop
cmp
sbb
fstpt
xor
mov
out
jns
sarb
mov
enter
call
scas
js
xor
inc
nop
add
lcall
mov
int3
xlat
xchg
aas
jns
pop
xchg
push
fidivrs
bound
sub
lods
push
and
inc
push
outsl
ss
aam
lahf
and
addr16
ss
xor
addr16
mov
cld
push
mov
leave
xchg
insl
mov
push
cmpsb
lret
scas
std
fdivs
aam
sub
mov
inc
adc
xchg
mov
xchg
sbb
cltd
sub
lcall
add
andl
bound
test
data16
and
xchg
push
cmpsl
cwtl
fistl
pop
adc
pop
mov
gs
imul
decl
movsl
mov
push
leave
mov
adc
mov
insl
mov
std
ljmp
jnp
adc
dec
mov
inc
and
pop
and
mov
push
rol
lahf
outsl
jo
or
lret
pop
jmp
aaa
push
roll
faddl
shll
icebp
out
cltd
repz
fadd
popf
lahf
or
pop
ljmp
push
or
fldt
decl
ret
jnp
rolb
lods
add
jo
push
sbb
ljmp
imul
sbb
push
repnz
loope
lahf
sbb
lret
lds
push
push
scas
cmovae
or
enter
and
gs
mov
cs
ficoms
cwtl
jmp
mov
aam
mov
lcall
push
jne
inc
test
insl
fisubrs
pop
aad
cmc
rorb
mov
adc
pop
call
mov
aas
stos
jg
xor
dec
cltd
mov
mov
push
pushl
mov
cltd
js
mov
mov
ss
icebp
call
testb
mov
jge
xchg
jns
ss
xor
repnz
add
fimuls
loopne
in
lcall
shr
fidivrs
fisttpl
jmp
mov
out
popa
neg
int
add
ljmp
lahf
cmp
andl
mov
ror
enter
mov
popf
xchg
sub
jle
mov
ljmp
xchg
les
scas
xchg
mov
pop
out
jge
loope
sub
xchg
rcrb
lods
sub
push
call
inc
les
addb
push
xor
pop
or
negl
xlat
mov
cmp
incl
roll
mov
inc
in
or
div
sbb
fwait
dec
inc
paddsb
pop
jno
sar
mov
aam
xorb
aad
mov
loopne
jg
ret
enter
cmp
jecxz
mov
add
xlat
inc
cmp
ds
ljmp
cmc
sub
bound
xor
pop
mov
addr16
in
test
decl
mov
or
aad
mov
loope
cmpsb
xchg
pop
js
movsl
insl
xchg
cmc
les
icebp
dec
test
xchg
dec
scas
add
adc
jno
mov
lods
shr
sbb
adc
lret
bound
aaa
xor
sub
mov
pushl
push
xor
inc
xchg
iret
adc
dec
dec
push
xchg
sub
sub
incl
dec
push
jecxz
leave
testb
pushl
rorl
aas
and
out
insl
cld
movsl
pushl
adc
add
aaa
and
xor
sbb
ljmp
out
add
inc
cwtl
pop
in
and
mov
ret
push
incl
inc
pop
xchg
inc
mov
inc
mov
ljmp
pop
xchg
push
rorb
popa
decl
and
std
xor
cmp
cmpsb
flds
mov
aad
cmc
jmp
inc
aam
ret
ret
add
lret
aad
or
das
mov
stos
movsb
js
testl
push
in
outsb
inc
call
jmp
cmp
aam
adc
xlat
outsl
pushf
push
popa
dec
sub
mov
cli
decl
xchg
push
cltd
mov
push
xor
out
or
fwait
or
decl
stc
in
in
fwait
popl
sarl
ret
inc
dec
mov
or
nop
aad
sbb
fucomip
mov
or
mov
xor
sbb
pop
aam
or
call
int
mov
into
lds
inc
test
xchg
and
cld
call
dec
cs
daa
push
out
mov
pop
xchg
insb
cmp
pop
std
or
fadds
rorl
sub
or
call
mov
dec
test
test
inc
lods
jecxz
call
cmp
pop
mov
push
pop
xchg
adc
and
jmp
cmc
incl
sbb
push
jae
icebp
or
aam
gs
pop
xlat
mov
dec
std
dec
test
daa
mov
xor
pop
lods
subl
cmc
or
mov
pop
dec
or
push
mov
dec
movsl
or
dec
jbe
lods
test
call
jg
cmp
arpl
push
mov
xchg
mov
sti
in
inc
and
mov
xchg
cmp
jg
jmp
sub
popf
add
incl
fnstcw
fnstenv
mov
xchg
cmc
mov
cmc
lret
pop
cli
incl
fs
xlat
imul
ja
dec
mov
xchg
decl
outsb
lods
fs
lea
ljmp
jbe
mov
sub
cmp
xchg
mov
mulb
adc
fistpll
aaa
lahf
mov
repnz
adc
mov
xlat
aam
dec
xchg
pop
mov
jmp
cmp
dec
xchg
cmp
mov
jle
pop
scas
sbb
mov
clc
sub
cs
sub
negb
xchg
data16
sub
stos
push
insl
lcall
mov
jl
jg
shrl
push
ljmp
aam
dec
cmp
adc
jnp
scas
pop
iret
mov
imul
movsb
adc
incl
sub
jb
add
insl
mov
mov
incl
mov
int3
push
jp
or
das
loop
sub
faddl
lds
adc
cld
cwtl
jge
xchg
mov
call
adc
jge
push
and
lods
mov
mov
icebp
sub
sahf
add
iret
adc
decl
mov
int3
iret
jge
xchg
scas
fistpll
in
pop
fidivs
and
fucomip
push
test
and
cli
insb
pop
and
pop
mov
push
in
jg
test
test
cmp
test
ss
push
lods
or
notb
and
test
popa
stos
daa
stos
xor
fwait
loope
dec
insb
xchg
or
decl
movsb
in
ret
cwtl
cmpsl
cmp
mov
xor
subl
mov
dec
subl
out
xlat
pop
fbld
dec
imul
mov
add
sti
psraw
jmp
cmc
sbb
or
dec
shlb
pop
mov
shrl
sub
das
ljmp
adc
push
jmp
loop,pn
mov
push
shlb
int3
cld
filds
jecxz
outsb
stos
nop
insl
mov
vaddsubpd
mov
sub
decl
pop
cmc
pop
dec
cld
cwtl
scas
pop
outsl
aas
jno
negb
jle
aas
xor
sti
xor
into
sbb
inc
fldenv
push
stos
je
stos
fld
jo
sti
sahf
dec
sub
cli
stos
lock
cs
lcall
lahf
gs
push
fsubl
xchg
or
jmp
pop
jae
mov
dec
sbb
shr
sbb
out
mov
fcoms
out
cmp
movsl
sti
adc
dec
jne
pop
cld
jg
insb
idiv
ss
dec
jae
sbbb
jge
dec
lcall
and
test
cs
sbb
je
in
hlt
aad
fbld
test
lcall
push
pop
jbe
cmpsb
inc
cmp
inc
insl
mov
xchg
arpl
imul
mov
subl
clc
ficomps
xor
pop
mov
mov
push
movsl
jmp
adcb
push
outsl
push
ret
pop
push
push
arpl
imul
xlat
push
mov
movsb
pop
cmp
mov
jg
jmp
jmp
or
lcall
clc
idiv
jmp
imul
push
and
dec
sub
test
mov
pop
or
jle
mov
movsl
xchg
xchg
or
pop
adc
ffree
mov
cmp
sbb
pop
cwtl
and
insl
loopne
mov
rol
jg
cmpl
dec
jne
hlt
fimull
in
js
ja
cmpsl
mov
sbb
dec
or
mov
cld
int
lret
inc
jp
imul
outsl
jge
sbb
ljmp
jg
sub
ret
or
sbbl
or
ljmp
fldl
pusha
es
mov
outsb
mov
inc
leave
jno
mov
outsl
lock
or
insl
fimuls
dec
out
mov
xchg
mov
idivb
fcomps
pop
jns
frstor
mov
hlt
jmp
ss
jmp
push
jnp
xchg
adc
adc
mov
push
push
fwait
jno
out
xor
xchg
add
xor
ss
mov
clc
ljmp
shl
mov
insl
ja
call
mov
out
decl
mov
pop
call
or
mov
in
outsb
repnz
call
mov
dec
jb
and
ret
out
cli
lea
xchg
cmp
idiv
je
or
and
fildl
xchg
shrl
pushl
arpl
iret
sub
xor
mov
push
iret
enter
jns
pop
mov
add
scas
subl
stos
ss
push
icebp
mov
divb
cmc
sub
push
rcrl
scas
xlat
jmp
ret
fistl
in
inc
dec
push
imul
sub
pop
or
sub
and
mov
sub
loope
pop
or
push
jg
ljmp
mov
cmp
in
into
dec
mov
dec
or
cmp
pop
push
xchg
add
fldcw
lock
leave
hlt
mov
outsl
cmc
inc
das
fwait
push
dec
or
or
shrb
aad
int3
ds
and
xor
jg
adc
or
movsl
clc
and
inc
out
jb
fdivr
dec
pop
lds
ret
out
xchg
mov
lahf
lcall
xchg
sarl
test
dec
mov
rcl
sub
fcmovnbe
pop
into
or
cld
enter
call
pusha
adc
mov
icebp
adc
cmp
cmc
push
adc
nop
call
jmp
lods
aad
int3
and
in
add
call
and
ljmp
hlt
test
xlat
jecxz
sub
xlat
lock
sub
out
hlt
ss
push
ds
jmp
mov
pusha
cld
push
or
inc
cmp
rcl
jmp
jge
xchg
jns
ret
dec
push
clc
shll
rorb
mov
push
mov
imul
adc
leave
and
and
addl
mov
imul
jmp
rclb
pop
rcl
xor
stos
test
into
pop
fsubr
adc
push
jb
mov
adc
fidivs
jno
jb
dec
xchg
jo
add
or
call
call
mov
imul
fsubrs
mov
sti
popa
test
mov
cwtl
out
sbb
out
add
rep
push
xchg
sub
jg
subb
fistl
dec
rclb
int
les
outsl
jg
xchg
mov
into
add
cmc
mov
std
ficoml
dec
inc
xchg
loope
sub
into
adc
std
push
cmc
sub
loop
loop
in
pop
decl
arpl
pop
and
mov
lcall
inc
test
mov
dec
fadd
jg
add
addr16
xchg
pusha
mov
out
cmp
fstpt
lods
aas
mov
sub
dec
lcall
and
jnp
idivb
in
shrl
mov
loopne
lcall
popf
arpl
xor
sub
mov
fdivrl
pop
imul
mov
daa
movsb
pop
cld
es
aam
adc
hlt
sti
mov
outsl
push
or
jmp
inc
pusha
sarl
mov
nop
jmp
out
mov
pop
addr16
lods
cs
std
js
in
jge
bound
xchg
leave
loopne
inc
ret
mov
sbb
rcll
add
fmuls
mov
cmpsb
pop
adc
xchg
das
hlt
aaa
int
xchg
mov
js
loop
jg
and
lcall
std
das
pop
add
daa
pop
adc
fnsave
das
mov
mov
in
aad
sbbb
jnp
aaa
push
dec
inc
lods
loope
pop
push
inc
pop
out
xchg
daa
mov
scas
dec
xchg
lock
mov
into
test
movsb
push
jae
and
stos
sbb
dec
notl
out
movsl
pushl
out
pop
jb
jge
sub
xchg
or
mov
inc
xor
lahf
sub
dec
pop
pop
jp
cmc
xor
mov
lds
jmp
xor
lret
ljmp
jns
lcall
icebp
jmp
mov
xchg
and
lock
add
adcb
xchg
pop
jno
das
mov
inc
lods
jmp
jne
sbb
ljmp
add
push
dec
lcall
movsl
call
setno
into
out
add
sbb
mov
jmp
pop
and
les
jge
mov
xor
data16
adcl
and
jmp
and
push
push
adc
mov
lcall
stc
repnz
lods
lcall
and
inc
mov
stc
shl
icebp
imul
out
imul
negb
enter
inc
je
or
push
sub
jp
test
jecxz
push
scas
jns
jae
mov
mov
lcall
xlat
insb
shlb
mov
cs
adc
dec
sub
outsl
hlt
jmp
rcrb
mov
add
dec
adc
mov
add
pop
dec
pop
mov
lds
mov
incl
pop
js
cmp
je
sbb
add
mov
test
sbb
outsl
and
repz
cld
ret
gs
fisttps
push
pop
pop
mov
das
test
popw
cld
cmc
pop
jg
rcll
sub
subl
pop
das
pop
scas
test
add
jecxz
insb
pop
stos
icebp
call
loopne
in
mov
popa
rorb
jmp
pushl
or
icebp
push
mov
clc
dec
jecxz
xor
leave
inc
das
dec
mov
insl
inc
fadd
ljmp
out
push
mov
adc
mov
mov
dec
mov
cmp
sahf
xchg
add
call
mov
sbb
push
stos
lods
adc
adc
out
incl
stos
xchg
push
add
pop
repnz
mov
xor
inc
cmp
lcall
inc
mov
pop
mov
lds
or
or
push
ljmp
call
xchg
push
dec
pop
clc
or
pop
popf
pop
scas
lock
or
or
pushl
leave
mov
pop
sbb
test
sub
imulb
and
jg
incl
xor
mov
adc
fstl
adc
push
out
decl
pop
adc
cmp
rolb
mov
rolb
adc
jmp
jbe
stos
fisttpll
packuswb
ret
xor
fwait
mov
imul
cmp
push
sbb
in
movsl
aaa
xor
call
bound
cltd
test
jp
dec
mov
repz
nop
pop
sti
andb
add
call
pop
test
adcl
or
mov
push
jg
fdivrs
jne
in
in
adc
repz
fisubl
push
mov
push
test
scas
dec
shll
or
xchg
or
cld
jg
dec
pusha
sbb
lods
imul
mov
sti
scas
ljmp
inc
xor
mov
in
stc
push
in
fdivr
push
sahf
std
hlt
pop
xchg
cmp
jo
push
test
mov
jge
out
fbld
and
lret
movsl
xor
cmp
lahf
xchg
aas
pop
shlb
mov
das
stc
mov
jae
out
xchg
add
cld
and
mov
fnstsw
sbb
mov
je
add
jp
inc
test
adc
jp
outsl
jg
imul
aam
repz
cmp
roll
test
push
jl
or
in
sti
cs
or
in
into
push
aaa
mov
dec
mov
leave
jmp
das
cmc
push
xchg
jne
sti
popa
xchg
test
or
clc
jnp
mov
inc
adc
inc
dec
jnp
cmp
loop
mov
mov
jmp
pusha
and
jl
mov
gs
negb
repnz
and
stc
std
push
and
negl
jmp
xor
pop
mov
or
es
dec
negb
sbb
jne
mov
ljmp
das
cmpsl
dec
fldcw
pop
push
std
pop
popa
xlat
xchg
enter
or
neg
mov
movsl
jge
es
inc
and
jne
rorl
ljmp
or
pushf
gs
sbb
shlb
cmp
pop
cmp
pop
xchg
inc
cld
call
fildll
mov
int3
mov
and
add
pop
cmpl
adc
scas
movsl
xor
sti
mov
fisttps
or
xchg
push
jmp
or
std
mov
ljmp
ss
jnp
fldl
mov
inc
jecxz
shr
test
pextrw
or
std
sbb
pop
call
stc
push
xor
xor
mov
mov
mov
jns
mov
aad
addl
lret
cmp
dec
icebp
incl
loope
ljmp
push
fdivrl
or
jmp
arpl
repz
call
cltd
xor
push
fnsave
out
sbb
xchg
dec
pop
rclb
notl
outsb
xorb
lods
ret
ljmp
mov
movsl
idivl
dec
add
repnz
loop
std
movsl
xchg
jo
iret
xchg
fistpll
xchg
andb
mov
xor
stc
decl
pop
aam
jns
lods
stc
ja
mov
dec
mov
testb
and
mov
movsb
fdivl
hlt
lods
adc
push
lock
mov
pop
pop
sbb
movsb
stos
mov
jbe
dec
mov
or
lcall
iret
fsubr
xor
jb
mov
mov
loope
mov
push
mov
mov
cld
adc
sub
movl
jg
cs
fistl
adc
xchg
mov
and
pop
adc
in
jle
sti
std
es
ljmp
cmp
mov
aam
ja
mov
add
enter
decl
or
push
sahf
xor
pop
mov
push
dec
repnz
movsl
xor
pop
sub
sbb
or
ljmp
popa
lret
push
rcll
adc
dec
mov
xor
shrb
das
fnstsw
ss
mov
push
pop
fnstsw
pushl
sub
sbb
jge
fwait
ret
rcrl
or
jg
fidivl
sti
stos
pop
mov
push
stos
mov
mov
push
push
stos
stos
jecxz
sub
lcall
fistl
inc
mov
dec
test
aad
ljmp
lahf
decl
push
das
mov
sbb
lods
xorl
pop
mov
fs
std
mov
lret
mov
mov
jl
sub
daa
push
nop
lcall
das
insl
pop
ja
pop
jg
sbb
loope
pop
test
sar
jg
out
pusha
aad
stos
mov
out
leave
loopne
lahf
cld
lahf
imul
cmp
cli
mov
pusha
iret
mov
ss
sub
sti
push
into
pop
imul
sub
lcall
xchg
inc
jno
cmp
mov
pop
cmp
sbb
or
and
jns
rcr
insl
inc
push
movl
mov
mov
or
outsl
lock
xchg
and
js
sbb
cli
pop
and
ss
push
dec
insb
fdivr
call
pop
xor
push
pop
jae
fdivrl
jge
outsl
push
add
pusha
test
jge
adc
dec
std
ljmp
jns
jp
jns
lods
movsb
xor
clc
or
repnz
shlb
call
outsl
insb
jge
pop
or
in
push
flds
sub
fwait
cli
adc
dec
lcall
adc
push
sbb
scas
sub
cmc
xor
lcall
lods
lods
mov
jp
xor
adc
mov
aam
clc
aad
fimull
inc
xchg
pop
mov
andl
add
movsl
ljmp
mov
or
push
pcmpgtb
cli
scas
sub
pushl
push
xchg
mov
mov
adc
pop
enter
mov
call
clc
lret
mov
sub
jb
loopne
jge
loop
aam
mov
in
jg
aam
cmp
lock
pop
in
negl
add
inc
scas
push
frstor
and
popf
or
mov
insb
push
pop
pop
sarb
ljmp
iret
movsb
test
insb
mov
mov
cmp
sbb
clc
pushl
xor
xchg
or
aaa
push
loopne
inc
std
repnz
fistpl
jae
push
mov
scas
inc
jae
inc
adc
mov
mov
jmp
movsl
mov
mov
jge
or
inc
fldl
movsl
cld
movsb
jle
jg
incl
xchg
pop
or
lea
mov
inc
xor
xchg
and
inc
loop
push
cmc
mov
pop
test
inc
cmc
dec
ljmp
jle
add
xchg
push
lods
enter
push
in
ficompl
or
cmp
incl
stc
pop
xchg
sub
or
roll
incl
sbb
bound
xchg
pop
mov
cmp
cmp
inc
cli
repz
push
int3
or
sbb
cmpsb
dec
push
pop
je
jl
adc
sub
out
cmp
data16
xchg
and
lds
loopne
mov
lret
movsl
or
mov
or
xor
ss
inc
inc
and
jmp
mov
repnz
icebp
movsb
aam
loopne
sarl
add
fsubl
mov
xor
repnz
fisubrs
lahf
sbb
ja
xor
or
xchg
mov
popf
dec
inc
fwait
into
ret
push
iret
or
dec
or
pop
and
pop
jno
pushl
lcall
orl
add
roll
fwait
clc
imul
push
jge
scas
xor
roll
enter
call
cmc
jb
cmp
adc
push
mov
int
or
lcall
in
insl
jns
xor
xor
ret
or
lds
mov
hlt
scas
lea
lret
sbb
push
decl
mov
shl
sti
cmp
xchg
insl
jp
add
aad
call
sbb
dec
push
lahf
push
daa
jp
mov
mov
test
fisttps
and
dec
jl
les
inc
fsubrs
out
jp
negb
jp
decl
mov
xlat
or
push
inc
adc
in
inc
mov
mov
decl
testb
and
and
xchg
xchg
sub
lcall
ret
or
scas
jle
in
mov
inc
pushf
int3
inc
xchg
divb
dec
xor
cmp
test
mov
or
jg
xchg
mull
sub
pop
cmp
jg
std
test
test
pop
push
xchg
or
imul
sub
xlat
mov
fwait
mov
lea
rcrb
inc
xchg
lret
sbb
mov
push
pop
ljmp
pop
mov
stos
pushl
sub
ret
jmp
dec
mov
daa
call
jecxz
lcall
jg
pop
mov
jl
and
xchg
andb
jbe
out
mov
enter
mov
outsb
sbb
xchg
mov
mov
pushf
sub
push
shr
mov
inc
mov
dec
cld
lods
pushf
mov
xchg
ljmp
mov
out
loopne
jnp
push
pusha
outsl
imul
jmp
sub
pop
ss
pushl
int
fwait
jecxz
mov
aam
ficomps
test
lds
and
jg
cmp
xor
sub
lds
xchg
xor
lods
and
jbe
dec
mov
lds
push
add
xlat
int3
ret
call
xor
or
jg
cwtl
push
cmp
lods
aaa
ljmp
call
movsb
adc
jo
test
jge
rcll
push
pop
dec
jg
push
shll
cmp
pop
lahf
fs
inc
or
xchg
es
out
and
mov
ljmp
push
fstpl
or
cmc
call
mov
add
or
insl
or
pop
mov
insl
dec
mov
mov
inc
and
dec
jns
cwtl
xor
mov
rcl
scas
pop
into
xchg
in
das
in
push
xor
xor
addr16
lcall
ss
or
lods
rclb
stc
jmp
ret
mov
inc
pushw
enter
push
rolb
push
test
les
xchg
adc
in
mov
mov
and
jo
and
pop
mov
mov
mov
cmp
pop
dec
loop
cli
lds
jle
mov
adc
xlat
cmp
xor
mov
inc
mov
jg
mov
mov
mov
push
subl
inc
cmp
cli
aaa
dec
jge
jmp
fcoms
cwtl
ss
clc
jg
mov
push
xor
xor
std
push
push
mov
into
jge
sub
pop
std
push
rorb
lea
pop
push
add
andl
outsl
std
call
push
cmp
stc
mov
insl
xor
movl
lahf
add
call
sub
faddl
cmp
pop
add
or
lds
xchg
enter
lods
dec
sub
loope
hlt
pop
and
mov
bound
in
icebp
rcl
lret
cmp
das
aad
push
pop
jle
jecxz
mov
cmp
pushf
xor
addl
sub
das
ja
xchg
inc
jno
mov
inc
jb
decl
ja
mov
or
fwait
push
jge
lock
sbbl
mov
sahf
mov
mov
call
xchg
popf
das
pop
lret
jo
or
call
movsl
mov
out
adc
dec
sbb
repnz
out
mov
loop
xchg
test
xchg
test
movsl
sti
decl
adc
fadds
xor
sbb
or
sbb
roll
pop
jle
loopne
int3
int3
cli
loopne
adc
mov
lock
cmpsl
push
insl
cmp
jle
and
das
in
xorl
cmp
cmp
arpl
dec
lret
push
cmp
fistps
notl
cli
lcall
repz
push
imul
adc
in
mul
pop
pop
arpl
or
jg
mov
push
mov
cmp
adc
sbb
jo
pop
mov
lea
and
loop
fistl
push
mov
or
incl
outsl
fisubs
mov
xor
adc
fcomps
shl
ret
aad
pop
clc
decl
stos
ljmp
push
scas
cmpl
rorl
pop
lods
outsb
icebp
pushl
imul
dec
cmp
or
cli
xor
jecxz
xor
inc
repnz
dec
in
mov
jae
enter
jne
pop
jne
fld
lcall
sbb
test
jg
push
sbb
jae
sub
movsb
inc
in
je
push
cli
pushl
cwtl
xor
sbb
ljmp
xlat
xchg
fildll
lods
mov
lcall
pop
mov
jne
push
repnz
scas
stos
decl
dec
add
xor
push
push
mov
jecxz
jno
jmp
push
or
lock
jg
inc
adc
xchg
sti
xchg
xorb
addr16
push
insb
mov
das
jl
pushl
push
out
movsl
and
mov
adc
mov
arpl
gs
incl
ss
inc
cmc
mov
sahf
lret
push
fwait
lret
jg,pn
ret
mov
lcall
outsl
icebp
ljmp
mov
mov
in
js
add
je
mov
outsl
lock
lods
pusha
xchg
pusha
addr16
arpl
fcomi
mov
or
shll
pop
push
leave
cmp
std
inc
add
call
add
out
mov
jmp
aaa
nop
dec
lahf
mov
xor
das
insl
jge
dec
inc
insl
add
fidivrs
sti
fs
and
jge
decl
pop
push
dec
popa
adc
lcall
cmc
rorl
mov
sbbl
movsl
mov
incl
inc
in
fadds
rcrl
mov
fstp
cmp
cmp
addr16
xchg
aam
mov
lock
notb
xor
into
stos
ret
loopne
outsl
inc
ror
lret
cmp
mov
adc
mov
cld
pop
call
ljmp
popa
xor
jg
adc
popf
fimuls
faddl
and
bound
in
fadds
jg
incl
sub
mov
sar
push
fisubl
fcmovb
clc
push
out
dec
inc
sbbl
stos
fwait
cmp
cld
incl
dec
lds
fsubl
clc
xchg
imul
cli
xchg
shrb
jle
jl
xchg
scas
inc
mov
adcb
call
jg
xor
sub
ret
mov
stos
mov
pop
cmpsb
jae
jmp
mov
iret
or
inc
decl
adc
add
lcall
lret
stos
fsubs
orl
xor
cmp
jne
enter
int3
pop
cli
mov
inc
int
jmp
incl
jge
cmpsl
pop
daa
inc
adcb
int3
xor
inc
fisttpl
test
mov
ds
mov
loope
decl
scas
nop
es
mov
loop
int
es
repnz
lahf
jmp
pushl
popl
arpl
push
jecxz
jnp
lods
push
jne
mov
xor
decl
jl
pop
xchg
jns
cmp
mov
xchg
mov
vorps
arpl
lahf
cmp
sub
movsl
xor
lcall
inc
jbe
push
push
and
repnz
cmp
repnz
push
pop
and
and
add
aas
outsl
lret
loope
mov
sti
pushf
ljmp
data16
jl
jge
xchg
fcmovne
mov
jge
mov
insl
clc
ret
sti
out
clc
movsl
test
mov
lea
or
jecxz
test
or
outsl
push
das
cmc
ljmp
sbb
cli
aas
rorb
fwait
or
test
jg
jg
bnd
jecxz
xor
xchg
ljmp
cld
in
sar
push
mov
repnz
fidivs
pop
add
hlt
push
ljmp
jnp
dec
stos
and
fsubl
mov
roll
push
inc
notb
push
cld
test
push
idivl
jg
out
stos
sbb
push
lock
and
clc
outsl
lcall
inc
pusha
adcb
hlt
dec
loopne
push
adc
xlat
adc
ljmp
in
mov
or
test
repnz
mov
pusha
sti
mov
cmc
repnz
cs
push
mov
incl
and
cmp
cmp
cmpsb
jge
orl
clc
dec
jmp
mov
jg
inc
outsl
insl
das
jl
or
jnp
js
push
xlat
fdivl
xor
dec
in
data16
dec
call
push
cmc
es
sub
mov
sub
popf
inc
cmpb
xchg
ljmp
lock
lods
jnp
pusha
jae
xchg
push
jmp
repnz
cwtl
scas
xor
mov
lcall
pop
notl
into
sbb
jnp
mov
mov
and
decl
frstor
cmp
fistps
shlb
pusha
or
ret
adc
mov
adc
cmpsb
out
std
sbb
fwait
out
loopne
add
jl
jl
dec
lcall
jecxz
jmp
jmp
xchg
mov
rolb
sbb
ror
out
adc
cmp
sahf
and
cmc
pop
push
push
sbb
mov
mov
stos
xor
daa
fisubrl
mov
clc
inc
outsl
shrl
loope
incl
ss
gs
xor
sbb
sahf
into
adc
and
insl
cmp
dec
inc
inc
inc
push
xchg
enter
lcall
xor
rcrl
in
aas
ja
inc
push
jb
out
or
mov
jmp
in
and
out
out
xlat
pop
cld
push
data16
test
mov
push
lcall
roll
shr
sbb
inc
mov
lds
jmp
ret
sub
mov
aaa
shlb
mov
and
jmp
hlt
push
out
movsl
incl
lret
mov
loop
add
scas
jmp
ljmp
gs
insb
cmpb
dec
adc
loopne
inc
mov
fistpll
xor
jmp
fstps
dec
add
adc
xchg
dec
or
lahf
or
pop
call
pop
fdivrl
movsl
ja
jp
std
dec
adc
or
hlt
jg
das
mov
sub
adc
mov
imul
add
outsb
insb
push
sub
dec
cmpl
repnz
rcrl
dec
rolb
dec
adc
ljmp
loopne
mov
or
pop
das
sub
test
arpl
nop
push
out
cwtl
js
push
lock
add
push
adcl
daa
js
add
xor
jnp
ljmp
add
xor
jg
inc
mov
adc
cmp
jno
incl
pushl
ljmp
stos
imul
xchg
outsl
fdecstp
incl
or
push
xchg
pop
or
fmulp
mov
and
push
aaa
out
or
jecxz
push
das
das
popf
adc
push
ds
jb
jb
insl
cmpsb
lcall
std
outsl
push
cmpsl
jg
shrb
loope
pop
sbb
xchg
fcoms
inc
xchg
jae
jl
xor
mov
xchg
push
or
sar
jg
stc
inc
jne
lcall
ret
int3
dec
jmp
ret
mov
ret
shl
lea
adc
or
test
sti
and
movsl
mov
inc
imul
inc
int3
cmpsb
cmp
sub
jg
mov
dec
movsb
xchg
inc
lea
mov
std
fs
xorl
push
ret
es
lcall
pushf
lcall
scas
mov
lea
or
add
adc
sub
inc
cld
ljmp
clc
lcall
out
out
sti
dec
pop
movsl
pop
and
je
ds
adc
repz
push
addl
mov
jb
add
mov
pop
call
daa
jmp
inc
xor
sahf
rorb
xor
add
mov
lock
pop
enter
mov
and
and
lcall
pushf
push
add
mov
ja
jle
adc
loop
cli
imul
push
mov
mov
lcall
mov
out
sub
jmp
fbstp
jp
aaa
and
test
add
jmp
xor
mov
or
nop
lahf
jne
cmp
mov
dec
or
xchg
pushl
xchg
xchg
movsb
repnz
sbb
lahf
in
mov
lret
mov
incl
mov
sbb
bound
pop
push
fs
or
pop
cmp
dec
jle
pop
clc
fildll
loopne
out
pop
shrb
dec
dec
mov
mov
leave
call
cli
xchg
iret
adc
in
mov
push
lods
in
shrb
cltd
call
subb
mov
dec
loope
pusha
mov
jmp
fsubrp
push
xchg
sar
arpl
inc
jmp
clc
cld
xor
mov
mov
and
jno
mov
add
mov
ficoml
cmc
pop
xor
pop
call
add
add
jno
movsb
xchg
repz
pop
jp
arpl
insl
incl
dec
lods
fisubrs
cmp
in
out
cwtl
outsl
xor
mov
inc
adc
mov
ftst
std
sub
push
fsubl
ljmp
mov
cld
int3
or
test
dec
mov
xchg
or
call
dec
xor
test
xchg
xchg
mov
movsl
mov
jge
nop
mov
addr16
popf
mov
shlb
call
pop
fnstcw
ss
pop
fwait
inc
mov
imul
jmp
outsl
jmp
adc
sarl
enter
mov
jle
inc
gs
loope
mov
aas
push
pusha
pop
rolb
push
clc
decb
sub
notl
pop
iret
lods
nop
push
push
xchg
fucomip
call
sub
out
ja
clc
adc
mov
xchg
adc
jg
repz
icebp
ss
std
push
mov
cltd
sti
mov
mov
ret
sarl
xor
enter
fcompl
pop
imul
lock
mov
andl
mov
jle
gs
cltd
loope
mov
idivb
inc
rcrb
mov
dec
push
dec
xor
rorl
es
sbb
fmull
lods
in
ds
dec
or
mov
pmulhuw
nop
in
mov
loop
push
dec
adc
arpl
jl
jne
xchg
fadd
xchg
pushl
fwait
ret
icebp
pop
mov
xchg
adc
xchg
fisubs
dec
sahf
or
stos
mov
sbb
lcall
out
push
movl
insb
mul
pop
aaa
stc
cmc
subl
sbb
mov
sar
ja
lea
mov
inc
pop
scas
add
decl
nop
ja
loope
pushf
scas
pop
inc
ja
cmp
fimuls
cld
neg
mov
push
fisubrs
pop
cli
decl
pop
out
movsl
mov
and
int
fxch
repz
cli
call
js
cmc
mov
push
sbb
decb
incl
mov
inc
inc
lcall
shr
fs
lcall
scas
adc
loop
ret
jno
sbb
lea
dec
pop
data16
jmp
sbb
outsl
lods
lods
fs
jno
sub
outsb
add
cwtl
dec
test
push
xor
test
movsb
inc
cltd
xor
mov
jge
daa
cmp
data16
pushl
cmp
jo
xchg
lahf
daa
push
sub
clc
sahf
add
jl
sbb
cmp
sti
dec
cld
lcall
inc
or
push
fsub
and
mov
repz
imull
orl
sbb
push
cmp
push
pop
or
lea
leave
fs
push
or
loop
and
mov
jb
sub
outsl
pusha
sub
fistpll
rcr
mov
test
push
out
idiv
or
push
cmp
stc
pop
sti
jl
lock
jmp
push
pop
mov
push
rol
cmp
inc
ljmp
jmp
mov
scas
adc
pusha
jg
fnstsw
pop
jbe
dec
sub
mov
aaa
lea
push
in
jg
fadds
testl
mov
lods
aam
sbbl
cmp
adc
jae
or
lcall
mov
fnstsw
scas
adc
call
jg
push
mov
xor
insl
mov
pop
iret
add
imul
call
pop
mov
xchg
or
jb
popf
mov
test
sbb
incl
in
out
jbe
je
sbb
bound
aas
out
cli
ret
lods
stos
das
xor
jg
or
inc
in
sub
arpl
out
jge
cwtl
jl
loopne
lcall
mov
lret
sarb
pop
rcrl
test
add
mov
daa
popf
add
mov
in
pop
pop
add
adc
out
enter
push
es
test
sbb
xchg
add
insl
sbb
dec
jbe
mov
sbb
int
xchg
mov
movsb
ljmp
in
and
mov
outsl
or
push
pop
call
pop
adc
and
push
and
pusha
fistpll
nop
cwtl
or
push
or
jg
fistl
cmp
push
fbstp
outsl
ss
dec
or
incl
or
jge
cmc
inc
mov
ds
push
sub
inc
inc
jmp
fwait
bound
out
xchg
lds
lcall
sbb
call
fistps
push
into
push
scas
mov
loopne
jmp
mov
mov
in
ja
cmp
pop
xcrypt-ofb
cmpsl
sub
push
bound
cmp
clc
jg
sbb
pop
insl
test
add
or
adc
out
call
ljmp
xor
lods
mov
push
push
loope
cmp
call
outsl
leave
pop
nop
aaa
mov
test
sub
lret
decl
aam
fidivs
mov
jmp
dec
sbb
xchg
xchg
sub
hlt
lcall
push
sti
cmpsl
xor
cmp
cmp
xchg
out
icebp
cmp
mov
iret
cld
mov
loopne
cmp
lods
in
cmp
xchg
lea
adc
inc
sbb
mov
mov
dec
or
gs
sub
dec
rcrb
jp
push
add
faddl
and
std
fistpl
inc
push
jg
adc
xor
outsb
andb
sub
inc
sbb
pop
cld
fbld
cmpsb
movsb
jb
sbb
cld
gs
lock
mov
ljmp
cli
arpl
mov
sbb
test
aad
mov
aaa
dec
ja
fsubl
shl
popa
mov
jge
dec
lcall
call
lcall
pop
or
jo
shll
pop
pop
xor
aad
loopne
push
lods
in
pushf
in
shl
bound
xchg
decl
adc
imul
inc
xchg
dec
inc
mov
dec
xchg
push
fildll
pop
dec
stc
repz
in
jl
pop
iret
jne
push
xor
mov
cmc
fsubrl
mov
imul
mov
out
mov
in
je
call
js
sub
movsl
shll
les
cmp
cmp
inc
and
mov
and
or
push
sti
push
jmp
jne
je
mov
jns
incb
pop
mov
cli
inc
int
mov
inc
loop
out
cmp
inc
dec
push
inc
cmp
dec
inc
fwait
test
into
aad
scas
outsl
add
pop
ficoml
mov
mov
ficomps
mov
mov
lret
pushf
out
int
ret
push
inc
adc
adc
lock
inc
mov
incl
jne
repnz
cltd
mov
mov
lret
sub
test
decl
pop
inc
jp
xchg
scas
pop
popl
mull
mov
sub
xchg
mov
lcall
adc
xorb
mov
daa
mov
cmpsl
sub
mov
mov
push
ljmp
loopne
jnp
pop
pop
push
jbe
jmp
int3
repz
sub
std
and
xchg
inc
inc
mov
incl
mov
in
mov
add
aad
movsb
jmp
mov
call
cli
popf
and
mov
sub
insb
shl
clc
dec
xlat
or
xchg
lcall
cmp
outsb
jmp
and
xor
adc
pop
xchg
cmp
jmp
cltd
cld
loopne
enter
movsb
push
and
imul
jmp
and
negl
lahf
sti
jecxz
sbb
mov
fwait
sar
jmp
mov
xorb
decl
ss
inc
mov
rolb
xor
push
dec
lods
or
lcall
or
mov
dec
dec
sahf
fisubrs
inc
mov
lods
jg
outsl
std
push
cld
lahf
sbb
sbb
iret
sti
cs
mov
icebp
call
cmpsl
sbb
mov
mov
sbb
or
pusha
adc
jg
dec
pop
bound
xlat
mov
sub
mov
pop
fsubrs
lret
clc
scas
jnp
mov
mov
pop
sahf
mov
or
mov
or
je
shlb
mov
adc
cmp
icebp
push
arpl
lret
arpl
mov
test
aas
pop
call
sub
xor
adc
aaa
lods
imul
ret
push
fdivl
cmp
fbld
xorb
arpl
dec
jecxz
mov
sbb
call
test
xchg
pop
ret
cmp
push
push
push
mov
arpl
pop
xchg
enter
insl
xor
jnp
hlt
jmp
add
xchg
inc
mov
ret
fisttpl
push
xor
out
xchg
jnp
decl
test
jg
int
loop
mov
dec
mov
jo
gs
push
mov
jno
aaa
jp
mov
shrl
dec
inc
std
outsb
ja
push
mov
popf
shrb
loope
outsl
pop
mov
push
lcall
and
cli
outsl
mov
inc
cmp
cmp
ja
mov
mov
xchg
in
in
mov
incl
cmc
sbb
mov
pop
jmp
stos
jecxz
cmc
dec
clc
mov
dec
test
cmp
jl
fcom
pusha
sbb
add
xorb
and
jecxz
sbb
fistpl
xchg
stos
mov
lcall
hlt
in
xchg
out
or
pop
mov
popf
dec
insl
mov
scas
jo
sbb
pop
push
or
cmp
out
pushf
push
sbb
scas
test
hlt
clc
push
mov
std
xchg
call
cmpsb
pop
inc
test
cmpsb
push
ficoms
xor
cmc
das
std
pop
mov
cmp
jp
insl
mov
movsl
jl
ljmp
push
push
pop
std
leave
call
ret
lcall
test
xchg
fidivrs
mov
sbb
into
nop
push
test
mov
dec
dec
js
xor
cmp
mov
jae
xchg
or
outsl
lods
jbe
xor
imul
cmp
dec
decl
inc
aas
in
std
adc
mov
jnp
iret
inc
test
repnz
divb
repnz
xchg
cld
call
test
push
cmp
mov
mov
xchg
pop
call
ficompl
inc
arpl
sbb
inc
outsl
cmp
cwtl
push
in
push
jno
leave
iret
adc
pushl
js
xchg
stos
adc
inc
shll
repnz
test
test
cli
decl
cld
xchg
enter
push
mov
pop
and
and
aaa
sub
loopne
pop
popf
test
and
sbb
cwtl
push
cmp
add
je
jne
add
je
inc
outsl
insl
jo
or
outsl
call
in
je
jae
inc
arpl
inc
je
in
pop
sti
mov
je
outsl
jb
jne
pop
sub
push
sbb
add
int
inc
push
je
dec
iret
dec
gs
mov
jg
push
jns
dec
outsl
popa
fs
imul
inc
outsb
ret
arpl
gs
jns
dec
insl
push
outsl
imul
jbe
inc
push
pcmpgtw
inc
jb
imul
cwtl
jae
xchg
fldt
imul
push
fidivl
and
inc
fs
jae
ds
xchg
jb
pop
and
dec
out
cmovno
movsb
js
cmp
insb
popa
das
cmp
aaa
repz
movsl
cwtl
inc
outsb
jae
pop
push
and
ds
imul
push
pop
dec
popa
push
push
pusha
subl
or
xorl
inc
push
add
cmp
pop
dec
xor
fs
adc
add
inc
cwtl
ret
sub
popl
pop
adc
mov
or
add
inc
loope
xchg
movsl
rorb
stc
adc
cmp
arpl
inc
aad
mov
sbb
sub
sbb
adc
lret
pop
xchg
adc
add
imul
jo
adc
or
inc
or
mov
jmp
and
add
sub
adc
rclb
add
shlb
mov
test
xor
xchg
adc
dec
mov
or
or
adc
and
and
mov
push
or
cmp
stc
lcall
dec
add
ret
xlat
add
lds
dec
add
add
popa
adc
mov
mov
ljmp
aam
lods
add
addb
mov
adc
inc
rcrb
xchg
push
test
xor
inc
andb
fisubs
adc
lods
into
or
push
pusha
nop
mov
and
xchg
add
popw
test
pusha
adc
sbb
sbb
sub
lds
adc
jb
outsb
or
rolb
push
aad
dec
test
mov
pusha
add
adc
mov
pop
or
test
push
jb
mov
pop
or
nop
sbb
adc
mov
adc
jge
sub
sbb
inc
test
add
popa
push
mov
inc
popa
push
push
jg
add
adc
add
inc
sub
mov
jbe
adcl
test
adc
ret
add
test
icebp
test
or
jb
push
or
dec
or
sub
test
stos
stos
add
dec
gs
pop
movsl
add
movsb
push
push
adcl
add
lret
adc
xor
das
or
sbb
shlb
add
or
shrb
mov
fisttps
adc
dec
test
add
aam
or
pop
push
adc
and
pop
add
addl
or
mov
pop
pusha
nop
and
mov
out
adc
xorb
enter
push
ss
adc
test
pop
roll
mov
add
xor
push
movsl
lods
sbb
xor
imul
lods
adc
xorl
push
fs
add
lret
ja
adc
add
or
xlat
adc
push
and
mov
sub
inc
pop
subb
dec
rorl
movsb
lret
pop
sub
call
add
add
adc
and
and
add
mov
push
test
mov
loopne
or
test
test
mov
xor
mov
fnstcw
and
add
xchg
mov
adc
add
and
adc
mov
push
or
lods
pusha
lea
inc
push
outsl
or
adc
mov
mov
lods
dec
sub
or
pusha
dec
lret
and
roll
sub
mov
adcb
push
and
or
push
movsb
add
out
or
or
adc
nop
and
hlt
xorl
adc
or
pusha
push
inc
adc
sub
add
inc
dec
test
push
push
in
out
pop
adc
xor
lea
jae
xchg
test
inc
int3
adc
mov
push
and
mov
and
dec
addb
dec
aad
mov
cmpsl
stos
xor
and
or
sub
xor
pop
inc
adc
xchg
add
add
or
add
push
shrb
mov
aad
adc
and
movl
jbe
add
pop
xchg
add
nop
and
ja
dec
xchg
add
inc
or
rolb
data16
xor
and
test
sub
jns
andb
push
xchg
push
sbb
movsb
pop
or
xor
adc
add
sub
add
pop
adc
lods
rorb
push
and
inc
xor
and
or
adc
ja
push
dec
inc
subb
stos
xor
sbb
dec
loop
push
push
mov
mov
add
mov
and
and
rorl
mulb
dec
or
adcl
aam
mov
mov
stos
pop
nop
push
sub
add
or
stos
adc
push
or
fsubl
add
stos
inc
and
add
gs
sub
jbe
xchg
outsb
fs
pop
adc
outsl
ja
push
lods
dec
fs
inc
flds
outsb
jae
dec
mov
andb
adc
or
or
add
out
add
mov
xor
icebp
out
jbe
out
je
jo
dec
inc
out
jns
outsl
outsb
imul
adc
inc
jne
cld
outsb
je
jae
es
gs
imul
adc
test
push
rolb
cwtl
popa
and
mov
push
out
std
mov
add
add
add
add
adc
mov
add
or
adc
rolb
mov
lret
flds
add
pop
or
aas
or
xor
sbb
rclb
enter
mov
push
xor
sbb
repnz
cmp
jae
je
popf
std
pop
rolb
mov
add
and
in
sub
rolb
mov
out
sub
popa
scas
add
xchg
nop
add
aas
add
daa
inc
leave
and
loopne
xor
pop
leave
xchg
add
add
daa
add
dec
orb
pop
mov
insb
jb
xorb
aaa
push
mov
enter
add
mov
add
pop
loopne
mov
loope
jae
es
daa
jle
push
jbe
cmp
sbb
cli
xchg
aas
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
sarb
push
add
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
inc
sarl
add
add
add
add
call
ret
mov
jg
pop
arpl
sbb
cmp
push
inc
add
add
mov
jg
pop
arpl
sbb
cmp
push
inc
sbb
add
mov
jg
pop
arpl
sbb
cmp
push
inc
xor
add
sbb
scas
jno
lahf
imul
int3
ds
aad
fsubrs
movl
rcll
sbb
push
mov
shll
inc
sahf
or
pop
stc
mov
add
adc
pop
and
add
in
cmp
ljmp
inc
shll
adc
mov
test
repnz
cmpsl
ljmp
pop
xchg
mov
ja
loopne
data16
inc
das
stc
mov
pop
movsb
call
repz
mov
cmpsl
mov
insl
int3
push
jmp
mov
sub
adc
mov
adc
mov
aaa
leave
sbb
shrl
mov
ds
sub
cmp
sti
fidivrl
in
mov
fmull
xchg
xchg
mov
fs
mov
pop
shrl
ret
hlt
lret
testl
lahf
outsb
jnp
push
inc
lahf
pushl
mov
popf
cmp
push
sub
imul
dec
xchg
pop
fnstenv
call
aas
cltd
pop
mov
dec
pusha
outsl
add
xchg
out
push
dec
mov
dec
ds
xchg
mov
stos
cltd
or
incl
lret
and
xor
hlt
cmpsl
inc
aas
outsb
fidivl
aaa
data16
sbb
js
sbb
pusha
xchg
xchg
xor
stc
pop
xchg
jl
aaa
dec
popf
out
push
mov
sbb
gs
stos
shl
pop
lea
ds
mov
jge
test
mov
and
into
ret
frstor
and
jbe
lods
push
movsb
fs
in
xchg
lret
fsts
arpl
or
cltd
bound
pop
outsb
cmp
mov
xor
or
aas
push
cmp
or
repnz
mov
sbb
xchg
sarl
push
push
enter
jmp
adc
pusha
mov
sti
push
pop
or
sbb
cld
jae
pusha
mov
push
jbe
loopne
push
cwtl
push
fldenv
lock
xlat
jp
dec
outsb
dec
sub
push
stos
or
idivb
mov
push
push
push
mov
fnstcw
sbb
jmp
adc
sahf
sub
or
dec
fs
xchg
sbb
sub
fdivs
imul
ss
xchg
scas
je
popa
orb
sbb
dec
int
cmp
outsb
repz
dec
mov
push
inc
aaa
mov
stc
mov
mov
jle
mov
lea
inc
jp
movsb
std
adc
sbb
push
cltd
mov
pop
dec
stc
or
mov
in
cmp
mov
mov
ljmp
mov
in
pop
fldl
push
hlt
adc
fcoms
lahf
arpl
sbb
jne
push
gs
xchg
test
jmp
pop
cmpsl
repnz
nop
mov
lock
negb
ret
popa
lret
push
xchg
ljmp
jne
or
out
xor
fadd
fs
cmpsb
push
imul
xchg
pop
cltd
mov
push
test
or
adc
imul
xor
jbe
jg
aaa
lods
mov
or
push
cmc
mov
rep
xchg
pop
or
sub
or
addr16
xor
fucomp
int
sub
mov
stos
push
gs
cltd
push
test
movsb
or
add
xchg
cmp
dec
push
or
adc
rcr
popa
and
sub
ja
xchg
fs
mov
scas
and
mov
mov
mov
popa
lret
mov
pop
testb
bound
pop
jl
mov
xchg
pusha
mov
mov
push
inc
jno
cmp
xchg
out
mov
mov
shlb
inc
dec
xorl
dec
ljmp
dec
leave
aaa
enter
scas
cs
mov
lds
or
in
jnp
push
aas
adc
jb
aaa
test
pop
xchg
sub
dec
or
inc
hlt
mov
cld
push
xchg
in
pop
dec
cmp
pop
mov
repz
pop
bound
nop
cld
mov
movsb
and
inc
hlt
xchg
mov
out
lret
fnstenv
stos
repz
cmpsl
jbe
add
sub
jns
fiaddl
popa
stos
jno
stos
dec
stos
aam
mov
mov
adc
inc
ds
cmp
popf
push
add
leave
jae
push
adc
sahf
or
sub
cltd
cmp
fisubrs
add
add
aas
add
add
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jne
jb
pop
push
add
push
gs
imul
imul
jb
arpl
jb
