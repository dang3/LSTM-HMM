push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
movl
mov
and
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
or
add
add
mov
cmpl
jg
call
cmpl
je
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
call
call
push
call
jmp
mov
cmp
jg
movl
mov
add
mov
cltd
idiv
imul
mov
jmp
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
lea
push
call
jmp
mov
cmp
jg
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
push
push
lea
push
call
add
movl
movl
lea
push
push
call
cmp
jne
call
movl
movl
lea
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
and
imul
mov
sub
mov
call
movl
movl
mov
or
add
add
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
add
mov
movl
movl
mov
add
mov
cltd
idiv
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
and
mov
sub
imul
mov
lea
mov
mov
add
mov
cltd
idiv
mov
jmp
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
jg
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
mov
sub
mov
jmp
jmp
movl
movl
mov
imul
add
mov
call
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
movl
movl
movl
mov
or
add
mov
mov
add
mov
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
lea
mov
mov
mov
sub
add
mov
jmp
movl
mov
add
mov
cltd
idiv
mov
sub
mov
push
mov
push
push
call
push
call
mov
movl
movl
cmpl
jg
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
push
mov
push
mov
push
call
add
mov
or
mov
add
cltd
idiv
mov
sub
mov
jmp
jmp
mov
add
mov
cltd
idiv
imul
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
add
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
mov
sub
mov
movl
movl
lea
mov
mov
mov
imul
imul
mov
mov
and
add
imul
mov
jmp
jmp
movl
cmpl
jne
movl
mov
and
mov
or
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
mov
or
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
add
mov
movl
mov
or
imul
add
mov
lea
mov
lea
mov
mov
mov
mov
sub
mov
sub
mov
push
call
mov
call
movl
movl
call
mov
push
mov
push
push
call
add
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
movl
call
mov
call
lea
push
call
cmpl
jae
movl
movl
mov
and
mov
and
add
mov
sub
mov
mov
and
imul
mov
mov
push
call
add
mov
mov
xor
mov
mov
mov
movl
movl
mov
and
add
imul
mov
lea
mov
mov
mov
add
mov
mov
push
push
mov
push
call
add
mov
add
mov
jmp
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
movl
mov
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
mov
imul
mov
movl
mov
push
mov
push
mov
push
call
add
jmp
movl
movl
mov
push
push
mov
push
call
add
mov
push
mov
push
mov
push
call
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
call
movl
cmpl
je
movl
movl
lea
mov
mov
and
mov
sub
add
mov
movl
mov
and
mov
sub
mov
sub
mov
movl
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
lea
mov
mov
and
mov
mov
and
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
and
imul
add
mov
xor
je
call
push
push
push
push
push
call
movl
movl
mov
cmp
jg
movl
lea
mov
mov
mov
sub
imul
mov
jmp
push
call
add
mov
and
add
mov
sub
mov
lea
mov
lea
mov
mov
mov
or
mov
imul
add
mov
mov
and
imul
imul
mov
call
movl
mov
sub
imul
mov
xor
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpw
jne
mov
cmpl
jne
cmpw
jne
cmpl
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
andl
lea
push
call
movl
mov
push
push
mov
call
push
call
mov
test
jne
push
call
pop
jmp
mov
push
call
push
push
test
jne
call
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
and
call
push
call
mov
cmp
je
or
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
call
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmpl
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
andl
call
mov
xor
ret
mov
neg
sbb
and
mov
ret
call
pushl
call
pushl
call
push
call
add
ret
push
call
test
je
push
push
call
test
je
pushl
call
ret
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
cmpl
je
push
call
test
pop
je
pushl
call
pop
call
push
push
call
test
pop
pop
jne
push
push
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
test
pop
je
push
push
push
call
xor
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
call
mov
pushl
call
pop
pop
mov
test
je
subl
cmp
jb
mov
mov
test
je
call
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
call
add
pop
ret
push
push
mov
push
push
xor
xor
cmp
je
inc
cmp
jl
cmp
jae
push
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
cmp
pop
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
pop
pop
ret
xor
mov
cmp
je
inc
cmp
jl
xor
ret
mov
ret
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
mov
push
push
push
call
mov
test
jne
pushl
call
jmp
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
test
mov
jne
pushl
call
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
mov
xor
test
jne
mov
movzwl
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
inc
inc
jmp
cmp
ja
inc
inc
movzwl
test
jne
ret
push
push
mov
push
xor
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
movzwl
cmp
jne
push
push
inc
push
call
mov
cmp
pop
pop
mov
jne
or
jmp
mov
jmp
push
call
mov
inc
cmpw
pop
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
add
lea
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
mov
mov
ret
push
mov
push
push
xor
cmp
push
mov
mov
mov
movl
je
mov
addl
mov
cmpw
jne
mov
xor
test
sete
push
inc
inc
mov
pop
jmp
incl
test
je
mov
mov
inc
inc
movzwl
inc
inc
test
je
test
jne
cmp
je
cmp
jne
test
je
andw
andl
xor
cmp
je
movzwl
cmp
je
cmp
jne
inc
inc
jmp
dec
dec
jmp
cmp
je
cmp
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
inc
cmpw
je
cmpw
jne
test
jne
cmpl
je
lea
cmpw
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
movw
inc
inc
incl
test
jne
movzwl
test
je
cmp
jne
cmp
je
cmp
je
test
je
test
je
mov
inc
inc
incl
inc
inc
jmp
test
je
andw
inc
inc
incl
mov
jmp
mov
cmp
je
mov
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
push
mov
xor
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
cmp
pop
pop
jae
mov
cmp
jae
lea
add
add
cmp
jb
push
call
mov
test
pop
je
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
push
mov
push
push
push
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
test
pop
jne
push
call
jmp
push
push
push
call
add
jmp
cmp
je
cmp
jne
call
mov
xor
cmp
je
cmp
mov
je
push
push
push
push
push
push
call
cmp
je
push
add
call
lea
cmp
pop
jne
inc
push
push
mov
call
mov
test
pop
pop
jne
push
call
jmp
cmpb
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
push
call
test
je
push
call
push
lea
call
cmpb
pop
pop
lea
jne
andw
push
call
mov
pop
pop
pop
pop
pop
ret
push
call
pop
jmp
mov
push
xor
cmp
push
mov
jne
call
test
je
movl
jmp
call
cmp
jne
movl
jmp
xor
jmp
cmp
jne
call
jmp
cmp
jne
push
push
call
mov
push
push
push
mov
push
push
push
call
mov
cmp
je
push
push
call
mov
test
pop
pop
je
push
push
push
push
push
push
call
test
je
mov
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
xor
inc
jmp
push
push
call
pop
pop
test
je
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
imul
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
imul
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
push
call
pop
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
call
ret
pushl
pushl
call
call
ret
mov
ret
pushl
call
test
jne
pushl
call
pop
push
pushl
call
ret
pushl
pushl
pushl
call
pop
call
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
mov
movl
xor
inc
mov
test
je
push
push
mov
call
mov
push
pushl
call
mov
mov
movb
movb
mov
mov
push
call
push
call
pop
andl
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
push
call
pop
ret
push
push
call
mov
call
pushl
pushl
call
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
cmpl
je
push
mov
test
jne
push
pushl
mov
call
test
je
pushl
pushl
call
call
mov
pop
push
pushl
pushl
call
pop
call
push
call
pop
mov
cmp
je
push
push
call
ret
jmp
jmp
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
cmp
mov
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
cmp
mov
je
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
mov
push
push
push
lea
xor
push
mov
mov
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
pop
jne
cmpl
jb
xor
inc
leave
ret
push
pop
leave
ret
xor
cmp
push
sete
push
push
call
test
mov
jne
xor
ret
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
andl
jmp
xor
inc
ret
push
xor
cmpl
jne
push
mov
push
xor
cmp
jle
push
mov
add
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pushl
push
pushl
call
pop
pop
pushl
call
mov
pop
ret
mov
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
xor
push
mov
cmp
movb
movl
lea
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
cmp
mov
lea
mov
mov
mov
je
lea
mov
test
lea
mov
mov
je
mov
call
test
movb
jl
jg
mov
cmp
mov
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
pop
add
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
jmp
cmpl
je
push
push
mov
mov
call
jmp
push
mov
sub
mov
andl
andl
push
push
mov
cmp
mov
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
mov
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
mov
lea
add
movl
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
add
leave
ret
push
pushl
call
pushl
mov
call
pop
pop
mov
mov
pop
ret
pushl
call
pop
ret
push
mov
pop
jmp
push
mov
pushl
call
test
pop
je
pop
jmp
push
call
pop
pop
jmp
xor
push
push
push
push
push
call
add
ret
push
mov
pop
jmp
mov
xor
cmp
je
inc
cmp
jl
lea
cmp
ja
push
pop
ret
mov
ret
add
push
pop
cmp
sbb
and
add
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
push
call
mov
push
mov
call
pop
mov
call
mov
pop
ret
call
test
jne
push
pop
ret
call
mov
mov
xor
ret
push
mov
xor
cmp
jne
push
push
push
push
push
call
add
push
pop
pop
ret
call
mov
mov
xor
pop
ret
call
test
jne
push
pop
ret
call
mov
mov
xor
ret
push
mov
xor
cmp
jne
push
push
push
push
push
call
add
push
pop
pop
ret
call
mov
mov
xor
pop
ret
push
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
cmp
pop
pop
jb
mov
sub
lea
cmp
jb
push
call
mov
cmp
pop
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
test
pop
pop
jne
lea
cmp
jb
push
pushl
call
test
pop
pop
je
sar
push
lea
call
pop
mov
mov
mov
add
push
call
mov
pop
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
push
call
mov
push
call
add
test
mov
mov
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
xor
lea
pushl
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmpw
je
xor
ret
mov
add
cmpl
jne
xor
cmpw
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
push
push
call
andl
mov
push
call
pop
test
je
mov
sub
push
push
call
pop
pop
test
je
mov
shr
not
and
movl
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
call
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
call
mov
test
je
call
jmp
push
push
call
pushl
call
pop
test
je
andl
call
jmp
xor
inc
ret
mov
movl
jmp
push
call
pop
mov
ret
mov
mov
mov
mov
mov
ret
push
push
call
xor
push
call
pop
mov
cmp
jne
mov
pushl
call
mov
movl
jmp
mov
pushl
call
mov
movl
pop
cmp
je
cmp
je
call
mov
movl
call
cmp
jne
xor
jmp
xor
push
call
pop
ret
cmpl
je
pushl
call
pop
xor
inc
call
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
pushl
call
pop
ret
call
add
ret
call
add
ret
push
push
call
andl
mov
mov
cmp
je
cmp
je
push
pop
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
call
mov
test
je
mov
cmp
jne
pushl
call
pop
mov
test
je
pushl
push
push
call
add
pushl
mov
call
pop
test
je
mov
mov
cmp
je
jmp
mov
add
mov
imul
add
cmp
jae
cmp
je
jmp
push
call
pop
andl
cmp
je
cmp
jne
cmpl
jne
push
push
call
xor
inc
cmp
jne
mov
jmp
call
mov
call
mov
movl
mov
mov
sub
je
sub
je
sub
je
sub
je
dec
jne
pushl
call
pop
mov
cmp
je
push
call
mov
jmp
pushl
call
pop
mov
cmp
je
push
call
mov
jmp
pushl
call
pop
mov
cmp
je
push
call
mov
jmp
pushl
call
pop
mov
cmp
je
push
call
mov
pop
movl
call
cmpl
jne
mov
mov
jmp
mov
push
call
pop
ret
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
call
movl
xor
push
push
push
push
push
call
add
or
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
push
push
push
pushl
call
mov
xor
cmp
pop
mov
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
cmp
push
mov
jne
push
call
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
push
call
mov
cmp
jne
call
mov
mov
call
push
call
push
push
push
push
push
mov
call
add
call
push
call
pop
jmp
push
call
pop
mov
call
push
push
mov
call
cmp
je
push
call
push
push
call
test
jne
call
movl
call
mov
jmp
xor
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
cmpl
push
mov
mov
jne
push
push
lea
mov
push
pushl
mov
pushl
push
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
pushl
call
add
cmp
mov
je
xor
inc
push
push
call
mov
cmp
pop
pop
je
push
pushl
mov
push
pushl
pushl
pushl
call
mov
add
cmp
je
push
push
call
cmp
pop
pop
mov
mov
jne
cmp
je
push
call
pop
or
mov
pop
pop
xor
pop
call
add
leave
ret
lea
push
push
push
push
call
add
test
je
push
push
push
push
push
call
add
cmp
je
push
call
pop
xor
jmp
cmp
jne
push
push
mov
push
pushl
pushl
push
call
add
test
je
mov
mov
movzbl
push
call
test
pop
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
jmp
mov
mov
ret
mov
mov
ret
pushl
call
xor
inc
ret
push
push
call
xor
mov
pushl
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmpl
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
mov
ret
push
push
call
pushl
call
pushl
mov
call
push
mov
call
add
mov
pop
ret
push
call
pop
ret
pushl
call
pop
ret
pushl
call
test
pop
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
jne
xor
jmp
mov
push
push
call
cmp
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmpl
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
pop
call
cmp
je
lea
push
push
lea
push
push
push
pushl
call
pop
call
test
je
testb
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
jb
orl
jmp
orl
jmp
mov
cmp
je
push
call
pop
call
cmp
mov
je
mov
cmp
je
pushl
push
call
pop
call
mov
pushl
pushl
pushl
pushl
pushl
call
pop
call
pop
pop
pop
leave
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
movl
call
add
or
pop
ret
mov
mov
ret
mov
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
push
push
xor
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
movzwl
mov
inc
inc
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
call
add
cmp
jbe
or
mov
pop
ret
mov
mov
mov
ret
push
push
xor
pushl
call
mov
test
pop
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
call
mov
test
pop
pop
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
pushl
call
mov
add
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
call
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
mov
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
enter
hlt
push
inc
add
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
fwait
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
push
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
push
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
push
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
ret
mov
ret
push
push
push
mov
mov
xor
cmp
push
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
lea
pop
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
mov
pop
ret
push
mov
test
je
test
je
cmp
je
push
push
pop
mov
rep
andl
push
call
pop
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
test
pop
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
push
push
call
mov
mov
and
neg
sbb
inc
inc
mov
mov
cmp
je
xor
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
movl
call
add
or
jmp
and
jmp
or
mov
jmp
orl
mov
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
test
jne
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
mov
pushl
call
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pop
movl
call
mov
mov
mov
push
call
pop
call
ret
mov
push
call
pop
ret
jmp
push
push
call
call
mov
push
push
call
pop
pop
mov
mov
test
jne
call
movl
xor
jmp
call
call
mov
mov
mov
mov
push
call
pop
andl
pushl
call
pop
movl
call
pushl
call
mov
call
ret
mov
push
call
pop
ret
jmp
xor
ret
push
push
mov
xor
cmp
jle
push
lea
add
pushl
pushl
pushl
call
add
test
je
push
push
push
push
push
call
add
dec
jne
pop
pop
pop
ret
push
mov
push
push
push
mov
push
xor
push
push
call
mov
mov
add
test
jne
xor
jmp
cmp
jne
lea
cmp
je
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
push
push
mov
call
cmp
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
push
push
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
push
push
add
push
call
add
test
je
xor
push
push
push
push
push
call
add
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
pushl
pushl
call
add
xor
test
je
push
push
push
push
push
call
add
lea
cmp
je
push
push
push
pushl
pushl
call
add
lea
cmp
pop
pop
je
push
push
push
pushl
pushl
call
add
pop
ret
sub
push
xor
inc
push
mov
call
test
pop
mov
je
push
push
lea
movb
mov
lea
mov
lea
pushl
push
pushl
push
push
push
call
add
movl
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
pushl
pushl
call
test
pop
pop
je
andl
incl
mov
addl
shl
lea
mov
lea
pushl
push
pushl
push
push
push
call
add
cmpl
jl
xor
cmp
jne
mov
cmp
mov
je
push
call
test
jne
pushl
call
pop
mov
cmp
je
push
call
test
jne
pushl
call
pop
mov
mov
mov
mov
jmp
pushl
call
mov
cmp
mov
pop
je
push
call
test
jne
pushl
call
pop
mov
cmp
je
push
call
test
jne
pushl
call
pop
mov
mov
mov
pop
mov
mov
pop
pop
add
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
call
add
lea
mov
lea
lea
add
test
mov
mov
je
cmpl
je
cmpl
je
cmpb
jne
cmpb
jne
push
pushl
pushl
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
jmp
push
call
mov
cmp
pop
mov
jae
push
pushl
call
test
pop
pop
je
push
pushl
call
test
pop
pop
je
andl
lea
push
push
call
test
pop
pop
jne
lea
push
push
push
call
add
test
je
movzwl
mov
mov
lea
push
push
pushl
call
add
cmpb
je
mov
cmp
jb
mov
mov
inc
push
push
push
pushl
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
cmp
je
push
push
pushl
call
add
cmp
je
push
pushl
pushl
call
add
pushl
pushl
pushl
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
mov
pop
pop
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
push
push
mov
call
pushl
mov
lea
push
lea
push
push
lea
push
push
add
call
add
test
jne
xor
jmp
mov
shl
lea
pushl
lea
push
call
test
pop
pop
je
lea
push
call
add
push
mov
call
test
pop
pop
mov
je
mov
mov
mov
lea
add
imul
mov
mov
mov
lea
push
push
mov
lea
push
call
mov
lea
push
mov
mov
mov
add
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
mov
mov
add
mov
movzwl
mov
push
lea
push
pushl
call
add
cmpl
jne
mov
andl
mov
mov
mov
mov
mov
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmpl
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
push
call
add
test
je
xor
andw
inc
cmp
jb
push
pushl
lea
push
call
add
neg
sbb
inc
mov
jmp
andl
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
imul
push
call
test
pop
je
mov
pushl
mov
call
mov
pop
mov
mov
mov
mov
jmp
cmpl
je
mov
add
shl
lea
pushl
call
test
jne
pushl
call
pushl
call
andl
pop
pop
mov
mov
add
shl
movl
mov
mov
mov
pop
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
mov
push
push
xor
cmp
mov
push
mov
je
cmp
je
push
call
pop
jmp
shl
mov
jmp
cmp
movl
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
mov
push
push
call
mov
test
pop
pop
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
xor
cmp
pop
pop
jne
cmpb
jne
cmpl
jg
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
mov
lea
movb
call
test
pop
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
mov
jmp
xor
jmp
push
push
push
push
lea
push
push
call
add
cmp
je
lea
test
je
pushl
lea
push
call
test
pop
pop
je
push
lea
call
test
pop
jne
and
jmp
incl
inc
add
cmp
jle
xor
cmp
jne
cmp
je
call
mov
pop
pop
xor
pop
call
add
leave
ret
cmpl
push
push
ja
cmpl
je
xor
inc
push
push
call
mov
test
pop
pop
jne
call
movl
xor
pop
pop
ret
push
push
call
pop
pop
mov
test
jne
push
call
pop
jmp
push
push
call
test
pop
pop
mov
jne
pushl
call
push
call
pop
jmp
mov
mov
call
pushl
mov
mov
call
test
pop
jne
pushl
call
pushl
call
push
call
add
jmp
pushl
mov
pushl
call
test
pop
pop
je
pushl
call
pushl
call
pushl
call
push
call
add
xor
jmp
mov
mov
mov
mov
mov
jmp
jmp
push
push
call
xor
mov
cmpl
jbe
call
movl
push
push
push
push
push
call
add
xor
jmp
call
mov
mov
call
orl
mov
push
push
call
pop
pop
mov
mov
cmp
je
push
call
pop
movl
mov
mov
call
mov
call
pushl
mov
mov
call
pop
mov
cmp
je
cmp
je
push
pushl
call
pop
pop
test
je
movl
push
call
pop
movl
lea
mov
call
push
call
pop
testb
jne
testb
jne
mov
mov
call
push
mov
add
push
push
call
add
call
andl
call
jmp
mov
mov
xor
push
call
pop
ret
mov
push
call
pop
ret
jmp
push
call
push
call
pop
pop
movl
call
mov
call
ret
mov
andl
ret
cmpb
je
mov
andl
ret
mov
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
push
push
mov
mov
push
xor
lea
push
push
call
mov
mov
mov
xor
lea
stos
stos
stos
mov
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
lea
push
pushl
call
test
mov
je
xor
mov
inc
cmp
jb
mov
test
movb
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
add
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
test
push
mov
movb
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
xor
push
lea
call
cmp
mov
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
cmp
mov
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
lea
call
mov
cmpl
je
cmpb
mov
je
mov
andl
leave
ret
cmpb
je
mov
andl
xor
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
cmpl
jne
xor
ret
mov
sub
neg
sbb
not
and
ret
mov
lea
cmp
push
jbe
call
xor
push
push
push
push
push
movl
call
add
push
pop
pop
ret
xor
cmp
jne
call
jmp
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
mov
sub
push
xor
cmp
jne
or
jmp
cmp
push
mov
push
mov
mov
jle
mov
cmp
je
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
xor
cmp
pop
lea
mov
mov
mov
rep
jl
cmp
je
mov
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
push
xor
cmp
jne
xor
pop
ret
mov
cmp
jne
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
jmp
mov
xor
inc
pop
ret
push
mov
cmp
je
cmp
jne
cmp
ja
push
call
test
pop
jne
call
push
push
push
push
push
movl
call
add
jmp
mov
movl
xor
inc
jmp
call
movl
xor
pop
pop
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
cmp
jne
repz
jmp
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
andl
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
push
lea
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
mov
mov
mov
and
not
and
or
mov
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
cmpl
sbb
neg
ret
mov
and
ret
pushl
pushl
call
test
pop
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
pushl
call
test
pop
pop
jne
cmpl
je
ret
xor
inc
ret
movzbl
push
call
test
pop
jne
cmpb
je
ret
xor
inc
ret
mov
test
je
mov
mov
add
ret
mov
test
je
sub
cmpl
jne
push
call
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
pushl
mov
pushl
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
movl
add
jmp
push
call
test
pop
je
movl
add
mov
jmp
xor
test
je
push
push
pushl
pushl
call
test
je
xor
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
pushl
pushl
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
push
call
pop
mov
jmp
pushl
pushl
pushl
pushl
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
mov
test
jne
inc
push
push
pushl
call
ret
cmp
push
mov
jne
push
call
test
pop
jne
test
jne
inc
add
and
push
push
pushl
call
pop
ret
push
mov
cmp
ja
push
mov
push
push
xor
cmp
mov
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
cmp
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
cmp
pop
jne
cmp
jne
xor
inc
add
and
push
push
pushl
call
mov
test
jne
cmp
push
pop
je
push
call
test
pop
jne
jmp
call
mov
call
mov
pop
mov
pop
pop
pop
ret
push
call
pop
call
movl
xor
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
mov
push
andl
push
lea
push
pushl
pushl
call
mov
add
test
jne
push
mov
test
je
call
test
je
call
mov
pop
mov
pop
leave
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
mov
push
xor
cmp
jbe
push
xor
pop
div
cmp
jae
call
push
push
push
push
push
movl
call
add
xor
pop
ret
imul
push
pushl
call
pop
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
push
mov
sub
test
movzwl
movzwl
mov
mov
jne
or
leave
ret
andl
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
push
push
pushl
or
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
push
lea
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
push
push
push
mov
cmpl
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
movl
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
pushl
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
pushl
call
pushl
call
pop
pop
mov
jmp
mov
mov
movzwl
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
pushl
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
pushl
call
pop
jmp
mov
movzwl
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
pushl
call
pushl
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
pushl
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzwl
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
pushl
add
push
push
pushl
mov
push
push
call
add
test
je
mov
mov
push
pushl
mov
push
add
push
push
inc
push
push
pushl
push
call
add
test
je
mov
push
pushl
add
push
push
mov
push
inc
push
push
pushl
push
call
add
test
je
cmpl
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzbl
movzbl
cmp
jg
lea
jmp
mov
movw
inc
inc
inc
mov
mov
movzbl
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
pop
mov
jmp
pushl
call
pushl
call
pushl
call
pushl
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
movl
movl
movl
movl
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
mov
test
jne
jmp
mov
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
add
ret
xor
ret
push
mov
sub
push
push
push
pushl
lea
xor
call
mov
mov
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
push
call
mov
test
pop
mov
je
andl
mov
movb
pushl
mov
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
mov
movb
pushl
mov
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
incl
cmpl
pop
jb
movb
cmpb
pop
pop
pop
je
mov
andl
mov
leave
ret
push
call
pop
ret
push
mov
sub
push
push
push
pushl
lea
xor
call
mov
mov
lea
mov
movl
pushl
call
pushl
mov
call
mov
pop
pop
mov
add
add
decl
lea
mov
jne
lea
push
call
mov
test
pop
mov
je
add
movl
mov
movb
pushl
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
mov
movb
pushl
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
add
decl
pop
jne
movb
cmpb
pop
pop
pop
je
mov
andl
mov
leave
ret
push
call
pop
ret
push
mov
sub
push
push
push
pushl
lea
xor
call
mov
mov
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
mov
movl
mov
pushl
call
pushl
mov
call
addl
pop
pop
mov
add
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
push
mov
call
mov
add
test
je
push
push
push
lea
call
andl
lea
mov
add
sub
mov
mov
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
mov
lea
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
incl
addl
cmpl
pop
lea
jb
lea
mov
lea
mov
movl
jmp
mov
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
addl
addl
decl
pop
lea
jne
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
cmpb
je
mov
andl
pop
pop
mov
pop
leave
ret
push
call
pop
ret
cmpl
push
mov
je
push
mov
test
je
mov
mov
incl
inc
decl
cmpl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
je
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
dec
lea
test
je
push
cltd
pop
idiv
mov
add
incl
mov
dec
cmp
jne
mov
add
sub
jmp
mov
pop
pop
leave
ret
push
mov
push
push
movsbl
cmp
push
push
mov
mov
jg
je
cmp
jg
je
sub
je
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
xor
cmp
jl
cmp
jg
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
jmp
mov
movb
mov
incl
decl
jmp
mov
xor
cmp
jl
cmp
jg
cltd
push
pop
idiv
mov
cmp
jne
push
pop
jmp
sub
je
push
pop
sub
je
dec
dec
je
dec
dec
je
dec
jne
pushl
pushl
jmp
mov
xor
cmp
jl
cmp
jg
cmp
je
lea
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
cmp
jl
cmp
jg
cmp
jge
xor
jmp
push
cltd
pop
idiv
cmp
jl
inc
jmp
mov
xor
cmp
jl
cmp
jmp
mov
jmp
xor
cmp
jl
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
jmp
cmp
jg
je
sub
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
xor
cmp
jl
cmp
jg
pushl
lea
push
jmp
mov
cmp
jl
cmp
jle
call
xor
jmp
mov
pushl
push
pop
mov
mov
call
pop
jmp
pushl
xor
cmp
pushl
push
push
je
push
pushl
call
add
test
je
mov
cmp
je
mov
pushl
movb
mov
incl
decl
push
push
push
push
pushl
call
add
test
jne
jmp
push
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
jmp
mov
xor
cmp
jl
cmp
jle
call
push
push
push
push
push
movl
call
add
xor
jmp
mov
mov
jmp
mov
xor
cmp
jl
cmp
jg
lea
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
call
mov
xor
cmp
mov
setne
mov
mov
mov
jmp
mov
xor
cmp
jl
pushl
cltd
push
pop
idiv
mov
jmp
pushl
xor
cmp
pushl
push
push
je
push
jmp
push
jmp
mov
xor
cmp
jl
cmp
jg
pushl
xor
inc
jmp
mov
xor
cmp
jl
cmp
jg
cmp
mov
jg
mov
jmp
mov
mov
call
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
xor
sub
push
je
dec
je
mov
jmp
mov
jmp
mov
cmpl
mov
je
cmpl
mov
jne
mov
cmp
mov
jge
call
push
push
push
push
push
movl
call
add
xor
jmp
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jg
cmpl
jl
mov
shl
mov
sub
cmp
jge
mov
mov
and
jns
dec
or
inc
jne
push
cltd
pop
idiv
test
jne
mov
cltd
mov
idiv
test
jne
cmpl
jne
cmpl
jg
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
lea
push
push
pushl
mov
call
cmp
mov
je
add
cmp
jg
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
cmp
mov
je
pushl
mov
push
push
lea
push
push
pushl
call
dec
cmp
jle
mov
mov
cmp
jbe
mov
mov
mov
mov
incl
incl
decl
dec
cmp
jg
pushl
call
pop
jmp
mov
test
je
mov
mov
cmpl
je
xor
mov
mov
inc
inc
cmp
je
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
mov
test
jne
xor
inc
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
dec
je
dec
je
dec
je
dec
jne
mov
jmp
mov
jmp
movl
mov
jmp
mov
dec
je
dec
je
jmp
movl
mov
jmp
push
push
call
test
pop
pop
jne
add
jmp
push
push
call
test
pop
pop
jne
add
mov
mov
jmp
add
test
je
mov
test
je
cmpl
je
cmp
je
pushl
movsbl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
mov
test
jne
jmp
inc
jmp
mov
dec
je
dec
je
dec
je
dec
jne
mov
jmp
mov
jmp
movl
mov
jmp
mov
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
mov
jmp
mov
jmp
mov
cmpl
mov
jg
mov
jmp
mov
cmp
jne
cmpl
jbe
movsbl
pushl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
decl
jmp
cmpl
jbe
pushl
movsbl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
mov
test
jne
jmp
mov
dec
je
dec
je
jmp
movl
mov
jmp
mov
dec
je
dec
je
jmp
movl
mov
jmp
mov
dec
je
dec
je
jmp
movl
mov
pushl
mov
pushl
mov
push
pushl
call
add
test
je
mov
jmp
push
mov
sub
mov
push
pushl
xor
lea
mov
mov
call
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
jmp
push
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
jmp
push
mov
cmp
mov
je
mov
cmp
jne
mov
mov
cmp
mov
mov
jbe
mov
cmp
je
cmp
je
lea
movsbl
push
push
call
test
pop
pop
je
xor
inc
cmp
jbe
lea
cmp
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
jmp
mov
cmp
je
inc
xor
cmpb
jne
inc
inc
push
pushl
lea
push
lea
push
mov
lea
call
add
test
je
inc
cmp
ja
cmp
jbe
mov
mov
sub
cmp
mov
je
mov
andl
jmp
mov
cmp
mov
mov
jne
cmp
ja
call
movl
jmp
call
movl
jmp
cmp
jbe
movl
jmp
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
pushl
push
pushl
pushl
pushl
pushl
call
add
pop
ret
push
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
pushl
pushl
pushl
pushl
pushl
call
add
pop
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
orl
call
mov
mov
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmpb
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
pushl
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsbl
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmpl
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
test
pop
pop
jne
orl
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
xor
test
pop
jne
orl
cmp
mov
je
or
mov
jmp
cmp
je
pushl
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
pushl
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
orl
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
cmp
jne
push
jmp
cmpl
jne
cmpl
je
lea
push
pushl
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
pushl
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
testb
jne
andl
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
orl
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
mov
jmp
movl
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmpw
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
pushl
call
test
je
push
lea
push
push
pushl
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
test
je
xor
test
setg
lea
mov
ret
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
ret
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
ret
xor
ret
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
ret
xor
ret
push
push
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
add
add
sub
cmp
jae
add
add
cmp
ja
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
xor
pop
pop
ret
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
nop
push
ret
inc
add
movl
out
inc
add
ret
mov
inc
add
inc
add
add
inc
add
movb
leave
inc
add
int
add
roll
lds
gs
inc
add
inc
add
les
fcmove
inc
add
rolb
les
dec
enter
int3
inc
add
rolb
ret
inc
add
movl
fwait
mov
inc
add
movl
push
mov
push
push
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
mov
mov
push
push
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
add
add
sub
cmp
jae
add
add
cmp
ja
jmp
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
xor
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
jmp
xor
pop
pop
pop
ret
mov
inc
fadds
cmp
inc
add
add
inc
add
xlat
inc
add
filds
jecxz
add
xlat
inc
add
fildl
and
jecxz
add
fiaddl
xchg
fiadds
mov
inc
add
inc
add
flds
pop
fiadds
sub
inc
add
inc
add
inc
add
aam
add
fadds
jmp
loope
add
inc
add
inc
add
inc
add
inc
add
in
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
andl
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
addl
cmp
jb
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
incl
cmp
jb
xor
pop
pop
leave
ret
movzbl
movzbl
sub
jmp
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
jmp
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
mov
je
testw
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
cmp
mov
je
mov
push
push
pushl
push
pushl
pushl
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
cmp
mov
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
in
inc
add
out
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
movsb
out
inc
add
inc
add
out
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
inc
out
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
out
inc
add
out
inc
add
out
inc
add
inc
add
inc
add
inc
add
lock
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
lock
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
mov
push
xor
cmp
push
je
cmp
jbe
cmp
je
mov
push
mov
cmp
je
mov
cmp
je
cmp
je
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
lea
pushl
call
inc
cmp
pop
mov
jne
xor
jmp
cmp
jbe
push
pop
jmp
pushl
pushl
pushl
call
add
pop
pop
pop
pop
ret
mov
ret
mov
ret
mov
ret
mov
ret
call
mov
mov
ret
call
mov
mov
ret
call
mov
mov
ret
push
push
call
xor
mov
mov
mov
mov
mov
mov
push
call
pop
mov
call
mov
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
call
mov
mov
or
mov
mov
push
call
pop
mov
mov
cmp
je
cmp
je
mov
cmp
je
push
push
call
pop
pop
test
je
mov
cmp
je
push
call
pop
push
call
inc
push
call
pop
pop
mov
cmp
je
push
push
call
pop
inc
push
pushl
call
add
cmp
je
push
push
push
push
push
call
add
jmp
mov
cmp
je
push
call
pop
mov
push
call
cmp
je
xor
inc
mov
mov
imul
mov
cmp
je
mov
imul
add
mov
cmp
je
mov
cmp
je
mov
sub
imul
mov
jmp
mov
mov
lea
push
push
push
mov
pushl
push
push
push
pushl
mov
call
test
je
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
movl
mov
call
mov
mov
call
mov
mov
call
mov
movl
call
cmp
jne
push
push
push
mov
pushl
call
add
test
je
push
push
push
push
push
call
add
add
cmpb
jne
movl
inc
push
call
pop
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
xor
mov
push
call
pop
ret
cmpb
jne
inc
push
call
pop
imul
add
jmp
cmp
jg
inc
mov
cmp
jge
cmpb
jne
inc
push
call
pop
add
jmp
cmp
jg
inc
mov
cmp
jge
cmp
je
negl
movsbl
mov
cmp
je
push
push
push
pushl
call
add
test
je
push
push
push
push
push
call
add
jmp
mov
mov
mov
call
mov
call
ret
push
mov
sub
andl
cmpl
push
push
push
mov
mov
mov
jne
and
jns
dec
or
inc
mov
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
shl
mov
jmp
mov
shl
mov
mov
lea
cltd
lea
mov
idiv
push
pop
inc
push
mov
mov
cltd
idiv
mov
mov
sub
mov
lea
cltd
and
add
sar
mov
imul
add
add
lea
cltd
pop
idiv
mov
imul
sub
add
cmp
jg
lea
jmp
add
cmpl
jne
cmpl
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
mov
jmp
mov
mov
cmp
jle
sub
jmp
and
jns
dec
or
inc
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
jmp
mov
add
imul
add
imul
add
imul
add
cmpl
jne
mov
mov
mov
jmp
lea
push
mov
mov
call
test
pop
je
xor
push
push
push
push
push
call
add
mov
imul
add
jns
addl
decl
jmp
mov
cmp
jl
sub
incl
mov
pop
pop
pop
leave
ret
push
mov
push
push
lea
xor
push
mov
call
test
pop
je
push
push
push
push
push
call
add
cmp
jne
xor
jmp
mov
push
xor
inc
cmp
jne
cmp
je
cmp
je
cmp
movzwl
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
jmp
movzwl
push
push
push
push
push
movzwl
push
call
movzwl
movzwl
add
cmp
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
pushl
push
jmp
movzwl
push
push
push
pushl
push
movzwl
push
call
add
jmp
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
push
push
push
push
push
push
pushl
push
push
push
pop
push
pop
call
add
mov
mov
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
leave
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jge
xor
jmp
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
jmp
xor
cmp
setl
mov
jmp
push
push
call
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
incl
movl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
call
movl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
call
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzbl
lea
inc
cmp
ja
add
movzbl
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
pushl
lea
call
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
mov
cmp
jne
push
pushl
call
pop
pop
jmp
push
mov
movzbl
lea
push
push
call
incl
mov
movzbl
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
andl
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
movl
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
pushl
pushl
call
add
pop
pop
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
cmpw
sbb
neg
ret
pushl
push
pushl
call
add
test
jne
cmpw
je
ret
xor
inc
ret
push
pushl
call
test
pop
pop
jne
cmpw
je
ret
xor
inc
ret
pushl
push
pushl
call
add
test
jne
cmpw
je
ret
xor
inc
ret
push
pushl
call
test
pop
pop
jne
cmpw
je
ret
xor
inc
ret
push
push
pushl
call
add
ret
pushl
push
push
pushl
call
add
ret
jmp
jmp
push
push
pushl
call
add
ret
pushl
push
push
pushl
call
add
ret
push
mov
sub
push
xor
cmp
push
push
je
pushl
lea
call
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
mov
cmp
je
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
mov
cmp
jne
pushl
push
pushl
call
add
cmp
je
mov
andl
jmp
mov
movzbl
lea
push
push
call
incl
mov
movzbl
lea
push
push
call
add
inc
decl
je
cmp
je
cmp
je
sub
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
movl
call
add
mov
jmp
cmp
je
cmpl
ja
pop
pop
jmp
push
pushl
pushl
pushl
call
add
pop
pop
ret
push
mov
push
push
push
mov
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
cmp
push
ja
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
xor
cmp
mov
setne
inc
cmp
ja
call
push
jmp
mov
add
cmp
ja
cmp
mov
mov
je
movb
lea
movl
neg
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
incl
xor
cmp
jbe
mov
cmp
jb
mov
cmp
jb
mov
jmp
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
pushl
mov
call
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
pushl
call
pop
ret
mov
mov
push
pushl
pushl
call
ret
push
mov
sub
push
xor
cmp
push
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jbe
xor
cmp
mov
setne
inc
cmp
ja
call
push
jmp
mov
add
cmp
ja
cmp
mov
mov
mov
mov
je
neg
adc
movb
lea
movl
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
mov
jbe
add
jmp
add
mov
mov
inc
inc
test
mov
ja
test
jbe
cmp
jb
mov
cmp
jb
movb
call
push
pop
mov
mov
xor
jmp
movb
dec
mov
mov
mov
mov
dec
mov
inc
cmp
mov
jb
xor
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
mov
push
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
push
mov
push
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
cmp
movl
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
cmpl
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
mov
push
push
mov
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
mov
je
cmp
ja
jmp
cmp
jne
cmp
je
mov
push
pushl
call
mov
cmp
pop
je
push
call
inc
cmp
pop
mov
je
cmp
jbe
push
pop
jmp
push
pushl
pushl
call
add
test
je
push
push
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
mov
je
mov
cmp
je
pushl
call
cmp
pop
mov
je
push
call
mov
inc
push
push
call
add
cmp
mov
jne
call
movl
call
mov
jmp
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
mov
push
pushl
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
cmp
ja
cmp
jne
cmp
jne
xor
inc
jmp
xor
cmp
je
cmp
je
mov
pushl
call
pop
mov
cmp
je
push
call
pop
inc
mov
cmp
je
cmp
jbe
movl
jmp
push
pushl
pushl
call
add
cmp
je
push
push
push
push
push
call
add
mov
movl
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
pushl
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
movl
call
mov
mov
jmp
pushl
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
add
ret
push
mov
sub
push
push
pushl
lea
call
mov
mov
cmp
jae
mov
cmpl
jle
lea
push
push
push
call
mov
add
jmp
mov
movzbl
and
test
je
mov
movzbl
jmp
cmpb
je
mov
andl
mov
jmp
mov
cmpl
jle
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
call
movl
xor
mov
movb
inc
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
lea
push
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
cmpb
je
mov
andl
pop
pop
leave
ret
cmpl
jne
mov
lea
cmp
ja
add
ret
push
pushl
call
pop
pop
ret
push
mov
sub
cmpw
jne
andl
jmp
cmpw
jae
movzwl
mov
mov
and
movzwl
mov
jmp
pushl
lea
call
mov
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmpb
je
mov
andl
movzwl
movzwl
and
leave
ret
push
mov
push
cmpw
jne
xor
leave
ret
cmpw
jae
movzwl
mov
movzwl
movzwl
and
leave
ret
cmpl
jne
pushl
lea
pushl
push
push
lea
push
push
push
call
add
push
pushl
pushl
call
add
leave
ret
jmp
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzbl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
or
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
cmpl
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
push
mov
mov
mov
mov
inc
cmpl
mov
jle
lea
push
movzbl
push
push
call
mov
add
jmp
movzbl
mov
movzbl
and
cmp
jne
cmpb
mov
jne
orl
jmp
cmpb
jne
mov
inc
mov
mov
cmp
push
pop
jne
cmpb
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmpb
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
mov
cltd
push
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
lea
cmp
jae
mov
orl
cmp
jb
ja
mov
cmp
jb
mov
cmp
jne
cmp
jne
xor
cmp
jb
ja
cmp
jbe
orl
cmpl
jne
mov
decl
test
jne
xor
cmp
je
mov
mov
mov
mov
jmp
push
pushl
pushl
push
call
xor
add
adc
mov
mov
mov
mov
incl
mov
jmp
test
mov
mov
jne
test
jne
and
je
cmp
ja
jb
cmpl
ja
test
jne
cmp
jb
ja
cmpl
jbe
call
testb
movl
je
orl
orl
jmp
testb
je
andl
mov
jmp
orl
mov
mov
test
pop
je
mov
mov
testb
je
mov
mov
neg
adc
neg
mov
mov
cmpb
je
mov
andl
mov
mov
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
cmpl
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
pushl
lea
call
mov
xor
cmp
jne
cmp
je
mov
andl
xor
jmp
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
jmp
mov
cmp
jne
pushl
push
pushl
pushl
call
add
jmp
pushl
push
pushl
push
pushl
push
pushl
lea
push
call
add
cmp
jne
cmp
je
mov
andl
mov
jmp
add
cmp
je
mov
andl
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
pushl
push
push
pushl
push
push
call
test
je
lea
push
push
call
test
pop
pop
jge
cmp
je
pushl
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
pushl
call
pop
jmp
xor
cmp
jbe
mov
cmpb
je
inc
inc
cmp
jb
ret
push
mov
sub
mov
xor
mov
cmpl
push
push
push
jge
xor
jmp
mov
mov
xor
xor
inc
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
pushl
call
cmp
pop
je
cmp
je
mov
mov
push
push
push
push
pushl
pushl
push
pushl
call
mov
cmp
mov
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
push
pushl
call
add
push
push
push
pushl
pushl
pushl
push
pushl
call
test
je
lea
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
cmp
jne
mov
mov
mov
mov
mov
push
pushl
add
pushl
lea
pushl
orw
pushl
orw
call
cmpw
mov
je
cmpw
jne
push
push
pushl
call
add
jmp
andl
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
mov
jmp
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
xor
cmp
mov
mov
mov
mov
jne
push
mov
push
push
push
push
push
call
test
je
movl
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmpb
je
inc
cmp
jne
or
or
sub
add
mov
cmp
jle
mov
mov
dec
cmpb
je
inc
cmp
jne
or
or
sub
add
mov
jmp
cmpl
jge
xor
jmp
cmp
jl
mov
cmp
je
cmp
je
xor
inc
cmp
jne
cmp
mov
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jg
cmp
jle
push
jmp
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
cmpb
lea
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
cmpb
jne
jmp
cmp
jle
cmpl
jae
xor
inc
jmp
cmpb
lea
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmpb
jne
jmp
mov
push
push
pushl
push
push
pushl
call
mov
cmp
mov
je
test
mov
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
movl
jmp
push
call
test
pop
je
movl
add
mov
jmp
andl
cmpl
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
test
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
movl
add
jmp
push
call
test
pop
je
movl
add
mov
jmp
xor
test
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
xor
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
mov
cmp
pop
je
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
test
je
push
push
lea
push
pushl
push
pushl
call
mov
add
test
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
test
mov
je
push
call
push
call
pop
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
mov
pushl
lea
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
sub
push
pushl
lea
call
mov
xor
cmp
jne
cmp
je
mov
andl
xor
jmp
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
jmp
mov
mov
cmp
jne
lea
push
push
pushl
pushl
call
add
jmp
pushl
lea
push
pushl
push
pushl
push
push
push
call
add
cmp
jne
call
movl
cmp
je
mov
andl
mov
jmp
add
cmp
je
mov
andl
pop
pop
leave
ret
push
mov
cmpl
jne
pop
jmp
push
pushl
pushl
pushl
call
add
pop
ret
push
mov
jmp
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
pop
sar
neg
ret
mov
sub
pop
sar
ret
push
mov
push
xor
test
mov
jne
leave
ret
cmp
je
add
inc
cmpl
jne
push
push
inc
push
push
call
mov
test
pop
pop
mov
jne
push
call
pop
mov
mov
jmp
push
call
mov
add
add
mov
pop
test
jne
and
mov
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
push
mov
jne
call
push
push
push
push
push
movl
call
add
or
jmp
push
mov
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
cmp
je
xor
cmp
mov
sete
cmp
mov
jne
mov
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
call
movl
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
mov
cmp
mov
je
mov
sub
pushl
call
mov
cmp
pop
jl
cmp
je
lea
pushl
call
cmp
pop
jne
mov
mov
mov
mov
jmp
mov
mov
mov
inc
lea
cmp
jne
cmp
jae
push
push
pushl
call
add
cmp
je
jmp
cmp
jne
cmp
jge
neg
lea
cmp
jl
cmp
jae
push
push
pushl
call
add
cmp
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
mov
push
push
call
inc
pop
inc
push
call
mov
cmp
pop
pop
je
push
push
call
inc
pop
inc
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
mov
sub
add
mov
inc
neg
sbb
not
and
push
push
call
test
jne
orl
call
movl
push
call
pop
cmp
je
pushl
call
pop
mov
jmp
pushl
call
mov
pop
mov
xor
jmp
push
mov
push
xor
cmp
jne
xor
jmp
push
push
push
call
mov
inc
push
call
mov
cmp
pop
pop
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
sub
push
pushl
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
jmp
push
mov
cmp
jne
pushl
push
call
pop
pop
jmp
movzbl
testb
je
inc
mov
cmp
je
movzwl
movzbl
shl
or
cmp
jne
dec
jmp
movzwl
cmp
je
inc
movzbw
movzwl
cmp
jne
movzwl
cmp
jne
cmp
je
mov
andl
jmp
cmp
je
mov
andl
xor
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
es
add
add
add
mov
push
add
cwtl
push
add
hlt
push
add
add
add
loopne
add
lods
push
add
mov
add
pop
add
jb
add
jle
add
mov
add
add
rclb
aam
add
loop
add
out
push
add
push
add
adc
add
xor
inc
push
add
pusha
push
add
jbe
add
mov
test
add
mov
push
add
in
add
repnz
add
add
add
sbb
add
sub
add
push
add
inc
push
add
dec
push
add
push
add
jbe
add
mov
add
add
push
add
aam
add
loop
add
cld
push
add
adc
add
add
inc
push
add
push
push
add
insb
push
add
adcb
xchg
push
add
mov
add
lret
add
push
add
out
push
add
push
add
sbb
add
push
add
cs
add
cmp
add
add
add
pop
push
add
push
add
jl
add
mov
add
add
enter
ficoms
add
push
add
add
add
push
pop
add
sub
add
pop
add
dec
pop
add
pop
pop
add
cwtl
pop
add
add
add
dec
push
add
xor
inc
add
cmp
aas
inc
add
insl
inc
add
inc
push
push
push
pop
inc
push
pop
dec
dec
pop
push
dec
inc
push
pop
inc
dec
dec
dec
inc
inc
push
inc
inc
add
inc
dec
pop
push
push
inc
push
inc
pop
inc
pop
inc
dec
dec
dec
inc
pop
inc
push
push
pop
push
inc
inc
dec
inc
pop
inc
inc
dec
inc
dec
inc
inc
push
inc
pop
push
inc
push
dec
dec
inc
dec
inc
add
insl
imul
outsl
arpl
jb
cmp
and
and
and
add
push
push
inc
push
push
push
pop
dec
dec
push
inc
dec
dec
inc
pop
dec
dec
inc
dec
pop
inc
dec
inc
push
push
add
add
arpl
outsb
arpl
and
outsb
outsb
outsl
je
jb
je
popa
imul
imul
arpl
and
outsb
outsb
outsl
je
jb
je
popa
imul
inc
inc
sub
cmp
xor
add
add
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
add
add
add
add
add
add
add
inc
outsb
arpl
gs
outsl
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jae
gs
inc
jne
arpl
outsb
xor
add
add
push
inc
push
dec
xor
cs
dec
dec
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
add
add
mov
inc
add
add
add
inc
add
repnz
add
inc
add
inc
add
cmp
sbb
inc
add
inc
add
inc
add
xchg
inc
add
add
repnz
add
xchg
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
add
add
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
in
inc
add
push
add
dec
inc
add
push
add
push
add
dec
inc
add
dec
inc
add
inc
add
dec
dec
add
dec
add
push
add
inc
add
dec
add
add
push
add
inc
add
dec
add
inc
add
push
add
inc
add
inc
add
dec
inc
add
push
add
inc
add
inc
add
inc
inc
add
dec
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
dec
add
inc
inc
add
dec
add
pop
add
push
add
dec
push
add
add
inc
add
inc
add
push
add
add
push
add
add
inc
add
inc
add
inc
add
inc
inc
add
dec
add
inc
inc
add
push
add
inc
inc
add
add
inc
inc
add
add
inc
inc
add
add
inc
inc
add
add
inc
inc
add
dec
add
push
push
add
push
add
dec
push
add
add
dec
add
add
inc
add
inc
add
push
add
inc
add
inc
add
inc
inc
add
dec
add
inc
add
dec
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
push
dec
add
push
dec
add
push
dec
add
add
dec
add
add
inc
add
inc
add
pop
add
inc
inc
add
push
add
push
add
pop
add
inc
inc
add
push
add
inc
inc
add
inc
add
inc
inc
add
add
inc
inc
add
inc
add
inc
inc
add
push
add
inc
inc
add
push
add
inc
inc
add
inc
add
inc
inc
add
push
add
inc
inc
add
dec
add
inc
add
push
add
push
add
inc
add
dec
inc
add
dec
add
pop
dec
add
add
dec
add
inc
add
dec
add
add
dec
add
add
dec
add
add
inc
add
inc
inc
add
push
add
inc
inc
add
inc
add
inc
add
push
add
inc
inc
add
add
inc
inc
add
push
add
inc
inc
add
push
add
inc
inc
add
inc
add
inc
inc
add
inc
add
sbb
adc
add
or
adc
or
add
push
add
jb
imul
outsl
jb
imul
add
add
add
inc
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
sub
inc
add
add
add
aaa
add
call
icebp
add
incl
add
add
add
add
jmp
pop
inc
add
pop
inc
add
in
push
inc
add
pop
inc
add
incl
add
add
incl
add
add
incl
add
add
and
add
add
incl
add
add
add
jmp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
incl
add
add
pushl
cmp
push
cmp
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
ljmp
inc
inc
add
inc
add
add
add
incl
add
add
incl
add
add
ljmp
inc
add
inc
add
add
add
incl
add
add
incl
add
add
mov
inc
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
call
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
gs
add
add
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
insb
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
clc
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
cld
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
or
add
add
incl
add
add
incl
add
add
incl
add
add
or
add
add
incl
add
add
incl
add
add
incl
add
add
or
cmp
add
sbb
add
xor
add
add
inc
push
add
add
add
adcb
fs
add
dec
xor
add
push
add
add
add
mov
push
add
cwtl
push
add
hlt
push
add
add
add
loopne
add
lods
push
add
mov
add
pop
add
jb
add
jle
add
mov
add
add
rclb
aam
add
loop
add
out
push
add
push
add
adc
add
xor
inc
push
add
pusha
push
add
jbe
add
mov
test
add
mov
push
add
in
add
repnz
add
add
add
sbb
add
sub
add
push
add
inc
push
add
dec
push
add
push
add
jbe
add
mov
add
add
push
add
aam
add
loop
add
cld
push
add
adc
add
add
inc
push
add
push
push
add
insb
push
add
adcb
xchg
push
add
mov
add
lret
add
push
add
out
push
add
push
add
sbb
add
push
add
cs
add
cmp
add
add
add
pop
push
add
push
add
jl
add
mov
add
add
enter
ficoms
add
push
add
add
add
push
pop
add
sub
add
pop
add
dec
pop
add
pop
pop
add
cwtl
pop
add
add
add
dec
push
add
add
add
xchg
add
je
gs
imul
pop
add
je
jb
arpl
jae
gs
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
je
add
add
inc
bound
addr16
jb
jae
outsb
je
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jne
inc
gs
push
gs
data16
imul
imul
push
push
xor
cs
insb
add
add
je
jo
gs
je
imul
fs
add
push
inc
push
push
push
inc
push
dec
cs
insb
add
mov
jo
jb
add
mov
jo
insb
insb
outsl
arpl
pop
add
je
jb
arpl
jae
gs
jo
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
nop
add
imul
jae
adc
push
jb
je
inc
imul
je
je
dec
popa
outsb
fs
add
cmp
inc
gs
outsl
fs
gs
imul
add
filds
push
outsb
push
gs
js
gs
imul
gs
add
dec
outsl
fs
gs
imul
add
lds
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
sbb
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pushf
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
popa
insb
jne
add
add
inc
insb
insb
outsl
arpl
add
add
push
gs
popa
insb
jne
add
add
inc
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
dec
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
int3
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jne
jb
outsb
je
push
add
mov
jo
gs
jb
jns
mov
jo
jb
popa
je
add
cmc
add
jb
jne
insb
inc
jb
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
push
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
insb
inc
jo
inc
js
je
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
iret
add
insl
imul
outsl
arpl
jae
add
inc
jne
jb
outsb
je
jb
arpl
jae
mov
push
outsb
push
gs
js
gs
imul
gs
jo
push
gs
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
movl
dec
imul
int
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
fs
imul
add
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
roll
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
dec
add
je
inc
dec
inc
push
add
roll
gs
jo
gs
insb
insb
outsl
arpl
pop
add
insb
push
outsb
ja
outsb
fs
add
popa
jo
imul
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
dec
outsl
arpl
gs
outsb
outsw
push
add
add
gs
push
dec
jne
je
inc
jns
add
push
imul
popa
je
add
adc
inc
gs
popa
je
inc
outsl
jb
popa
je
add
mov
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
filds
dec
jae
popa
insb
imul
add
add
push
popa
insb
imul
add
inc
gs
je
imul
inc
add
jo
inc
gs
je
imul
push
add
loopne
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
and
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
int3
movsb
xor
repz
repnz
loopne
outsl
xor
and
flds
lahf
imul
mov
cwtl
push
or
std
test
pop
in
cld
jnp
aaa
rcll
mov
push
or
xor
pushf
stc
xchg
cli
lcall
push
and
lock
sarb
xor
into
ret
and
movsl
sub
mov
mov
inc
sahf
sbb
adc
hlt
add
cmp
js
adc
push
and
lods
repnz
cmp
mov
ret
iret
add
mov
sahf
pop
stc
dec
mov
rolb
and
cmpsl
jne
xor
push
out
lds
mov
pop
sbb
add
mov
and
cmpsl
nop
mov
mov
jns
lea
sub
jnp
jno
pop
adc
xchg
xchg
push
push
inc
mov
and
rclb
sbb
jl
or
gs
dec
pop
and
aaa
int3
xorl
hlt
sbb
repz
loope
or
ds
ss
in
in
test
fnstsw
mov
lods
adc
xchg
mov
daa
sbb
aad
in
imul
and
aas
test
cwtl
inc
decl
inc
int3
xadd
std
int
leave
fistpll
mov
ret
loop
xchg
incb
in
mov
in
nop
mov
sub
mov
push
mov
bound
push
gs
lret
int3
or
incl
pop
leave
mov
stos
jno
pop
push
dec
pop
outsl
sub
arpl
pop
cmp
test
fcompl
fcomps
push
roll
sbb
pop
outsb
test
daa
sarl
or
leave
add
cltd
xchg
mov
imulb
cmp
dec
loop
push
push
lds
sub
shll
xchg
mulb
cltd
lods
dec
push
xor
shl
xchg
add
jge
in
ljmp
sbb
sub
dec
popf
enter
rolb
sbb
mov
es
lds
sbb
subl
repz
jg
sbb
and
xor
test
sbb
or
test
lods
mov
and
dec
mov
dec
pop
out
inc
and
insb
fidivrs
idivl
xchg
sbb
lock
mov
out
arpl
and
xchg
push
push
xor
or
inc
pop
sbbl
in
cmovnp
imul
cs
mov
loopne
mov
into
mov
jg
cmp
or
enter
xchg
nop
adc
inc
mov
popl
push
xchg
nop
out
arpl
push
jno
mov
push
push
test
pop
xchg
loopne
or
outsb
jbe
outsl
xorb
leave
mov
ds
jecxz
push
test
push
add
xchg
or
push
stos
test
and
mov
popf
mov
cld
scas
int3
inc
adc
jno
xor
mov
ljmp
andl
stos
sbb
xchg
clc
sub
xchg
jg
cmpsl
shlb
sbb
xchg
outsl
add
test
mov
dec
jp
inc
aam
outsb
mov
xchg
jg
sub
shll
adc
std
jno
gs
cmpsl
lret
adc
testb
ficoml
mulb
sbb
nop
out
loope
insb
pop
cmp
sbb
push
sub
data16
sbb
repz
inc
shrl
add
add
or
xorl
jno
cmp
ret
rorb
sbb
sub
or
cwtl
mov
dec
jns
push
push
leave
inc
outsl
ficoms
xchg
jne
pop
testb
fcompl
imul
mov
sbb
mov
xor
cmc
pop
xchg
xchg
xchg
sub
ds
mov
or
and
lods
lcall
and
repz
or
pusha
imul
mov
inc
mov
xchg
int
hlt
jl
push
mov
and
sub
scas
test
or
cmp
mov
add
loop
xadd
mov
push
xchg
adc
mov
push
andb
inc
out
jb
shrb
stc
nop
add
out
cs
js
mov
push
add
cli
in
dec
mov
and
fstps
cmp
inc
inc
adc
pop
cld
xor
push
jb
mov
or
lods
or
insl
sub
sti
fs
or
pusha
and
fs
mov
pop
loop
inc
test
add
dec
inc
pop
lods
mov
adc
lahf
faddl
dec
aas
mov
xor
hlt
jno
dec
call
mov
daa
jbe
jbe
push
adc
jp
cmp
push
inc
add
fs
mov
mov
icebp
ret
fsubrl
mov
test
addl
adcb
lock
sub
and
cltd
sub
xchg
push
mov
and
icebp
dec
xchg
mov
mov
enter
and
and
jp
xchg
sub
hlt
mov
jmp
pop
mov
add
icebp
fs
bound
mov
fmull
mov
and
std
add
in
push
lds
xchg
pop
adc
stos
enter
and
or
test
enter
nop
and
rcll
pop
xchg
mov
push
loopne
inc
xor
mov
je
cmp
mov
popf
loop
loop
sarb
push
int3
mov
mov
or
and
xchg
movups
data16
mov
mov
and
jp
xchg
xchg
sub
int3
popa
push
cmp
mov
and
or
sbb
cs
and
push
jmp
push
adc
call
adc
rorb
pushf
and
inc
mov
jge
into
xchg
addr16
inc
dec
ss
pop
scas
cmp
mov
jp
xchg
ret
push
lds
adc
fs
je
mov
inc
xchg
jmp
push
mov
and
sub
xor
adc
in
call
cwtl
inc
sbb
pop
cmp
loop
loope
gs
cmp
adc
mov
cmp
xor
orw
dec
mov
and
outsl
std
inc
and
lea
push
out
xor
adc
inc
es
mov
push
sbb
aad
adc
std
and
enter
add
cmp
mov
test
ficoms
mov
sbbb
mov
mov
inc
pushf
shll
cs
push
xor
mov
cmpl
mov
and
sarl
sbb
sbb
jo
lret
mov
imull
test
adcb
imul
je
leave
push
insl
imul
inc
lret
sub
jns
test
data16
imul
or
out
pop
push
dec
fcoml
insl
xchg
and
nop
andb
cmpl
add
mov
int3
sbb
repnz
inc
hlt
pushf
sti
in
es
adc
movsb
ja
push
mov
lock
jp
fs
mov
xor
jo
popa
sarl
dec
sub
add
call
int3
mov
sub
push
add
xchg
pop
and
mov
or
add
les
cmp
and
les
mull
and
rcrl
mov
push
xor
jo
sub
jle,pn
xchg
mov
dec
js
xor
lock
mov
xchg
jo
clc
push
or
xor
lahf
sub
push
and
push
xchg
out
adc
inc
out
inc
mov
fucomip
outsb
sbb
mov
adc
mov
sub
xor
adc
ss
adc
push
fisubl
or
mov
xor
sahf
push
mov
aad
inc
rorl
mov
mov
add
leave
and
inc
mov
mov
mov
popf
push
pop
fs
popa
adc
movsl
push
out
lods
xor
add
mov
sbb
xlat
enter
sub
test
test
mov
sub
fnstenv
xorl
nop
mov
addr16
test
adc
cmpsl
add
sbb
sbb
push
hlt
inc
push
inc
lods
inc
icebp
sbb
or
sbb
ss
loop
sbb
hlt
or
sub
test
or
pop
add
dec
rolb
jecxz
xchg
test
dec
mov
xchg
or
xchg
mov
mov
fbstp
dec
and
and
outsl
inc
sbb
stc
inc
iret
pop
or
jo
add
adc
ret
sub
lods
out
sub
dec
repz
cmp
repz
dec
xor
push
push
sbb
push
sarl
loop
inc
and
in
sub
sahf
mov
pop
pushf
xchg
sbb
sbb
adc
cmc
jo
lcall
je
in
mov
push
cmp
lret
inc
repnz
inc
ds
in
sub
mov
mov
test
push
dec
sbb
xor
pop
or
and
pop
xchg
ss
popf
adc
sub
xchg
sub
xchg
test
adc
loop
movsb
fidivrs
pop
lock
add
lock
lcall
in
sub
sbb
and
pop
jnp
popf
adc
andl
add
sub
push
mov
cs
loopne
mov
xor
push
or
shrl
xchg
inc
mov
xor
and
cs
mov
out
fldcw
dec
cld
adc
pop
aas
decl
enter
add
add
test
sbb
lock
inc
and
and
jno
inc
mov
or
or
or
cmp
pop
inc
or
aaa
push
pop
mov
or
mov
or
adc
and
add
movsl
das
push
pop
cltd
adc
add
sbb
sub
sbb
xor
xor
push
popf
loope
mov
mov
xor
add
lods
sub
xor
in
pop
xor
sub
inc
adc
cmp
rorb
mov
adc
dec
leave
mov
mov
aas
scas
cmp
pusha
xor
xchg
mov
xchg
or
push
jmp
mov
mov
xor
inc
sub
mov
lcall
or
repnz
cld
mov
push
and
inc
mov
jle
mov
xchg
or
pop
decl
adc
ret
pop
jecxz
cmp
mov
sub
or
mov
sub
or
jg
dec
fdivrl
aaa
cmp
cmp
mov
mov
inc
repz
in
dec
mov
js
in
push
repz
out
into
cltd
add
stc
es
lret
adc
jne
into
loopne
and
xchg
push
inc
jl
lods
fdivl
arpl
imull
sbb
and
pop
ja
add
outsl
popf
call
sub
cmpsl
pusha
sub
mov
dec
imul
adc
mov
mov
lods
add
jp
adcb
add
fildl
add
push
jmp
test
add
rorl
insl
add
mov
or
xchg
dec
lock
imul
hlt
add
and
neg
scas
or
faddp
mov
adc
mov
das
in
ljmp
mov
stos
insb
mov
outsb
in
or
jmp
sbb
add
das
gs
sbb
mov
push
mov
cli
xor
mov
pop
add
xchg
test
insb
mov
sub
add
and
cmp
pop
inc
mov
bound
into
or
add
test
fwait
inc
popf
in
push
mov
or
loope
punpckldq
shl
jnp
jb
xor
sbb
out
mull
add
mov
jle
mov
xor
insb
mov
sarb
les
jb
sahf
in
pop
arpl
leave
adc
popa
add
cmpb
push
ficoms
subb
xor
xor
mov
imul
fiadds
mov
jns
sbb
sub
lret
jns
je
cld
or
mov
mov
push
mov
mov
push
inc
mov
xchg
pop
sti
inc
das
jmp
xor
push
jne
push
adc
push
jmp
aaa
lods
cli
or
rcrb
dec
ret
push
cmp
add
add
sahf
mov
sbb
xchg
in
imulb
inc
dec
sub
mov
add
addr16
mov
adc
pop
lret
mov
adc
cwtl
cmp
mov
into
dec
pop
push
shrl
fdivl
clc
jle
xchg
add
shll
jle
stc
movsb
inc
stos
mov
call
arpl
and
mov
int3
sahf
jle
xchg
icebp
xchg
xor
bound
add
lahf
ljmp
jecxz
add
scas
xchg
imul
mov
push
sub
dec
mov
lock
mov
ret
mov
std
rcl
js
mov
mov
and
add
xchg
pop
add
cmp
call
repz
mov
test
push
jb
std
cmp
les
add
scas
aaa
ja
sub
adc
jne
mov
and
aaa
shl
data16
iret
mov
popf
sti
mov
int
sbb
sbb
jnp
pop
cmpsl
pushf
sub
mov
adc
mov
mov
xor
mov
lock
mov
cmpsb
fnstsw
mov
jg
jecxz
mov
lds
xlat
add
adc
add
std
xchg
sub
adc
clc
sub
sbb
dec
push
add
sub
push
mov
test
pusha
sub
pop
mov
sbb
pop
in
xchg
dec
cmp
push
fiaddl
add
out
mov
pop
xchg
xor
test
shll
jo
bnd
mov
sbb
or
jmp
mov
xlat
xor
mov
filds
stos
add
pop
lcall
sahf
mov
xchg
add
sub
dec
jecxz
add
loopne
cmp
data16
gs
pop
inc
cmp
imul
lds
mov
pop
xor
sub
dec
mov
and
jmp
mov
add
arpl
sub
aas
mov
fnstsw
xchg
test
xor
loop
mov
push
and
bound
lret
jg
mov
rclb
mov
fidivrl
or
or
divl
pop
and
int
mov
xor
cmc
stc
pushf
mov
or
pop
add
mov
mov
mov
sbb
inc
xor
mov
les
add
cmpsl
add
inc
fdivs
push
mov
cmc
lock
clc
sub
add
sbb
mov
mov
dec
sbb
xor
or
pop
dec
add
ss
sub
jl
popf
inc
mov
out
popf
jb
mov
in
adc
sub
fsts
pop
mov
push
fsubl
inc
imul
out
pusha
jp
aaa
int
sub
xor
jnp
pop
mov
cmp
inc
jb
sbb
cli
cmp
jp
les
sub
mov
adc
inc
fs
ret
dec
mov
fcompl
in
out
fucom
andl
clc
mov
add
into
xor
dec
add
outsb
or
clc
test
or
rolb
inc
ret
xchg
sub
mov
push
leave
ja
xchg
pop
pop
jmp
cmp
sbb
sbb
cli
push
test
fcompl
shld
and
sar
roll
push
adc
sub
xchg
hlt
sub
mov
das
setg
ret
xchg
and
test
adc
lods
push
xor
jp
xchg
inc
add
dec
cmpsb
rorl
int
add
xor
push
and
xor
inc
ja
cmp
movsb
test
pop
sub
adc
sub
jne
in
ret
and
mov
movsb
mov
push
lea
iret
arpl
cwtl
nop
pop
lret
cmp
inc
dec
or
mov
lret
add
push
bound
cltd
pop
add
popf
push
add
push
lret
sub
push
add
xor
inc
add
xchg
cmp
fistpl
and
or
cltd
mov
jns
test
test
lcall
xchg
add
mov
push
xor
jle
mov
mov
cmp
adc
add
sbbl
mov
data16
ljmp
xor
fstps
inc
hlt
xor
fcomp
add
lret
out
pusha
add
shll
adc
repnz
ds
xor
stos
adc
fcmovnbe
stc
stc
cli
inc
dec
movl
movsb
or
gs
lods
jns
popa
cmc
dec
add
push
repnz
push
bound
xchg
iret
inc
lahf
mov
mov
sbb
adc
shlb
or
push
cmpb
sub
loopne
aaa
andb
mov
push
or
movb
movsb
push
jo
lcall
jle
mov
fildl
xor
jl
inc
out
lret
push
rolb
stc
pop
xor
mov
add
sub
mov
jmp
stos
push
xor
jnp
or
inc
cltd
add
out
lret
sbb
add
lods
test
icebp
add
leave
cmp
shll
enter
push
adc
call
out
mov
ljmp
xchg
mov
aam
out
inc
daa
jp
mov
shl
notl
scas
jmp
movsl
adc
dec
dec
push
sub
mov
adc
into
sbb
sbb
mov
sbb
push
cltd
add
popa
pop
bound
cs
or
inc
cld
push
xchg
add
jge
adc
mov
cld
xchg
hlt
popf
xchg
mov
and
fisttpll
fwait
das
sbb
mov
popl
jns
push
arpl
or
push
mov
test
lret
js
jmp
popa
jmp
insl
popf
test
push
mov
cmp
add
xor
daa
mov
xor
inc
loopne
or
hlt
ret
dec
push
into
add
cltd
mov
shlb
inc
xor
cmp
add
adc
cmp
xor
add
leave
movsb
sbb
jns
data16
xchg
pop
xor
je
pop
cmp
cli
imul
push
jae
cmc
into
addl
inc
cld
adc
cmp
xchg
add
sub
rolb
add
test
mov
jne
fndisi(8087
and
push
dec
xchg
xchg
stc
and
mov
nop
add
clc
std
leave
sbb
mov
sub
insl
movq
aas
adc
cmc
out
leave
or
add
jne
add
arpl
mov
mov
fs
ret
pusha
and
in
sbb
aad
pop
ret
push
sahf
mov
jge
scas
lods
inc
addl
rcl
xchg
mov
or
fmull
mov
mov
out
mov
pop
ficoms
dec
adc
inc
xor
ffree
add
jne
outsl
mov
icebp
xor
push
xor
add
clc
push
inc
or
int
add
cltd
outsb
outsl
addl
fsubrl
xchg
dec
xor
mov
jmp
aaa
xchg
push
insl
adc
out
lds
aas
sub
adcl
in
ljmp
pushf
jge
cld
clc
iret
mov
daa
popf
lahf
pop
push
push
dec
add
shl
cmp
xchg
loop
mov
xor
add
xchg
pop
movb
jle
adc
add
add
mov
jns
adc
sub
in
mov
pop
cmp
loop
and
inc
aas
and
adc
sbb
insb
xor
push
push
pop
test
call
mov
push
cmp
div
inc
dec
js
lret
jg
add
sbbb
dec
xor
cld
inc
int3
cld
in
xor
jo
jno
sub
add
jae
mov
insb
cmpb
add
add
inc
add
addr16
loope,pn
hlt
push
jl
mov
push
inc
call
xchg
push
imul
cld
pushl
popa
es
dec
test
movsb
mov
shl
insl
xchg
mov
xor
leave
gs
jno
aad
mov
shrl
cmp
add
mov
out
popf
loopne
jb
data16
mov
mov
mov
xlat
das
mov
sbb
mov
add
ret
push
fdivrl
test
push
jg
jge
pop
test
add
cmp
les
mov
or
clc
mov
aas
into
xor
pusha
jp
aam
fdivs
sub
ret
dec
repnz
loope
add
out
xor
daa
xor
adc
fdivrs
and
push
push
popf
out
fs
add
mov
sub
mov
sbb
pop
aaa
outsl
mov
cmp
popf
inc
xchg
xchg
out
jecxz
add
pop
shll
js
in
fbstp
jl
ljmp
push
bound
or
popa
mov
ljmp
aad
aad
testb
fs
mov
mov
test
adc
xor
aaa
enter
repnz
inc
mov
std
cmc
jmp
bnd
adc
sbb
or
inc
mov
mov
mov
and
adc
lods
inc
add
push
dec
sbb
outsl
dec
loopne
aaa
imul
test
daa
adc
mov
add
das
adc
jns
cmpsb
mov
jno
dec
gs
dec
fimuls
lret
dec
imul
push
pop
mov
lods
mov
out
mov
rcl
mov
fisubrl
out
aas
repnz
cs
sub
movsb
imul
jmp
in
in
fs
lret
mov
add
mov
sarl
sbb
enter
add
loopne
cli
ja
fwait
add
cmp
xchg
mov
xchg
in
or
mov
push
sahf
xor
sub
mov
push
aad
dec
cmpsb
inc
mov
movaps
es
nop
inc
mov
mov
loopne
pop
xchg
sbb
inc
xor
in
mov
push
cmp
lret
stos
dec
xchg
add
insl
arpl
flds
inc
mov
testl
insl
pop
add
hlt
xor
popa
mov
sahf
jmp
nop
add
push
in
sbb
or
cmc
mov
arpl
inc
cmp
loop
rcr
add
xor
sar
mov
xor
mov
and
ja
sbb
fnstenv
cmp
pop
sub
dec
mov
xor
popf
aaa
sub
and
push
cld
jnp
inc
push
ljmp
inc
jle
rdmsr
test
test
ret
imul
aam
fs
push
mov
fs
sub
and
dec
mov
jns
fs
addr16
pop
scas
scas
cli
and
lret
mov
sbb
xor
shlb
jecxz
rorb
sbb
inc
jmp
or
pop
ds
xchg
add
adc
jne
cmp
push
add
and
sahf
pop
xchg
sbb
cmp
mov
je
mov
and
clc
in
jge
push
cmp
inc
xor
loop
mov
push
test
or
sub
mov
stos
xchg
mov
lods
mov
into
cmp
cmp
xor
sbb
jb
pusha
lods
push
faddl
xchg
mov
xor
or
push
push
cs
xor
dec
enter
add
jle
ret
adc
xor
lcall
fcmovbe
subl
ss
jg
add
inc
mov
mov
loopne
notl
out
sbb
fwait
jle
lret
out
enter
pushf
ljmp
inc
fstps
adc
rol
add
pop
pop
js
or
mov
loopne
inc
sbb
xor
sub
push
orl
mov
fists
sbb
push
repnz
cmp
sarb
dec
and
lds
popa
add
xor
xor
cltd
and
sbb
pop
das
icebp
add
push
xlat
xchg
fcoms
add
rclb
or
add
sbbl
mov
not
cmp
cmp
repz
xor
je
push
bound
xor
lods
or
jne
cs
push
xlat
xor
xor
rorb
mov
nop
jmp
hlt
jno
jle
out
pop
dec
xor
mov
dec
bnd
mov
push
stos
jo
push
fcmovnbe
mov
rolb
add
and
stc
mov
xchg
scas
jbe
jns
adc
inc
add
push
mov
push
pop
pushf
and
jbe
inc
add
sbb
loopne
inc
stc
test
popa
mov
stos
jp
dec
ljmp
mov
push
jp
add
push
in
clc
insl
mov
cmpsb
sub
es
ret
dec
mov
imul
out
int3
jb
jp
arpl
add
divl
add
sbb
outsb
cltd
jbe
cmp
jge
inc
imul
nop
add
push
iret
xchg
add
push
movsl
in
ret
jno
mov
add
lcall
pop
stos
mov
loop
adc
sub
mov
pusha
cmp
mov
mov
sarl
and
inc
sbbl
mov
dec
mov
xor
stc
add
bound
cmp
lcall
and
cmc
mov
mov
ds
out
xchg
inc
scas
mulb
pop
mov
out
and
xchg
mov
adc
mov
add
or
sbb
and
xor
lods
add
mov
aad
fwait
insb
add
ljmp
dec
and
push
xor
je
jns
mov
inc
add
or
dec
add
popa
add
sahf
loope
lret
shr
mov
sub
add
push
sub
mov
out
pop
inc
cltd
xchg
xor
mov
mov
movsl
clc
enter
push
inc
inc
cltd
dec
dec
adc
outsl
inc
imul
outsl
inc
or
xor
jmp
xor
addr16
fwait
push
sub
sub
dec
adc
in
iret
and
pop
enter
xor
inc
inc
inc
dec
adc
or
jmp
inc
inc
sbb
leave
lock
mov
lods
adc
aam
fisubrs
mov
fsubs
pushf
test
push
movsb
jge
in
lret
cs
fwait
jns
pop
jne
and
loope
negb
cmc
adc
push
add
pop
or
negl
mov
inc
negb
adc
arpl
in
lret
jno
movsl
cmp
jno
mov
bound
jge
sub
cs
or
and
lcall
pop
mov
inc
sub
aaa
les
xchg
inc
lcall
push
adc
and
jno
movsl
bswap
jmp
adc
daa
test
jg
jle
ljmp
sbb
xchg
and
imull
mov
xlat
jae
pop
jge
pop
jno
cs
movsb
jmp
divb
and
outsl
mulb
enter
enter
roll
out
adc
mov
xchg
pop
inc
push
sbb
mov
pop
roll
add
push
imulb
enter
pop
into
inc
pop
rolb
in
insl
inc
push
pop
mov
ffree
pusha
inc
cmp
repnz
dec
lds
mov
insl
xorb
fiaddl
sar
pop
sbb
jge
in
jno
cs
xchg
dec
pushf
lcall
push
adc
xchg
mov
ja
iret
push
lret
inc
adc
dec
les
dec
dec
cmp
std
pop
lahf
adc
jns
les
jno
movsl
rcrl
int3
addb
mov
lods
and
dec
icebp
dec
testb
ja
test
push
call
pop
out
and
xor
sbb
sbb
rolb
mov
adc
sub
lods
adc
adc
sbb
xchg
xchg
test
mov
jno,pn
cmp
push
and
cld
testb
jno
inc
lods
add
out
sub
sub
jae
sub
test
sbb
addl
xchg
fadd
jbe
and
dec
cmp
jge
mov
cs
jne
imul
shrl
lods
idivb
enter
add
cmp
sbb
mov
pusha
lahf
fisttpll
cmp
or
cmpsl
mov
jno
dec
jp
and
pop
mov
ret
mov
jno
cs
cmp
and
ror
sbb
dec
dec
inc
mov
mov
cli
dec
inc
xlat
in
pop
arpl
mov
mov
aad
test
les
enter
xor
lret
popf
in
jp
push
lahf
scas
jge
adc
sbb
pusha
aad
call
sub
jb
movsl
mulb
enter
lret
cs
adc
fcmovb
and
inc
fnsave
inc
je
and
movsb
dec
pop
jle
mov
les
cmp
loopne
mov
jno
jge
int3
jno
dec
stos
jno
fadds
mov
and
sbb
notb
ret
sbb
roll
inc
pop
pop
gs
rorb
xchg
stos
roll
sbb
adc
jmp
les
and
cwtl
incb
shrb
mov
pop
aaa
insl
mov
cmpsl
sub
cmpsl
mulb
adc
jo
pop
and
inc
dec
adc
jmp
inc
fistps
xor
inc
cmp
or
call
test
hlt
shlb
cs
sub
and
push
enter
ret
lret
adc
cld
aam
adc
xchg
and
cmp
add
mov
icebp
adcl
adc
bound
mov
popf
inc
xor
pop
mov
fisubs
std
and
jp
xchg
dec
adc
sbb
pushf
and
icebp
push
inc
dec
in
hlt
pop
shll
jae
xor
dec
sub
std
xchg
jns
jp
xchg
test
es
shr
and
icebp
sub
cs
mov
sti
dec
dec
mov
into
jnp
or
jno
movsl
dec
cmc
sub
mov
jp
mov
stos
jmp
dec
icebp
in
xchg
aam
adc
push
sub
mov
adc
cmpsb
dec
iret
sub
and
std
mov
mov
and
xchg
inc
adc
inc
xor
and
icebp
in
xchg
rcrl
sbb
mov
adc
xor
dec
int3
sub
and
rolb
pop
jp
xchg
sub
mov
jg
push
and
icebp
cltd
xchg
sbbl
cmp
rclb
dec
movsb
mov
push
dec
xor
clc
add
mov
pop
and
jp
xchg
pop
adc
mov
imul
imul
dec
mov
jbe
jmp
popf
mov
and
dec
and
and
jp
xchg
lds
pushf
inc
cwtl
fsubs
icebp
mov
test
mov
add
and
jbe
stc
xor
adc
push
jbe
mov
jp
xchg
leave
adc
and
jnp
lcall
mov
pop
dec
arpl
mov
ja
and
sub
and
std
or
lds
ja
ret
xchg
rclb
outsl
inc
jl
mov
stos
push
and
icebp
int3
xchg
xlat
fwait
cltd
inc
jbe
mov
jge
sbb
inc
xor
adc
sub
jb
jns
mov
inc
jp
xchg
lahf
adc
inc
xchg
mov
stos
push
and
icebp
xlat
xchg
icebp
fwait
inc
inc
fmuls
push
dec
lcall
add
popf
and
sub
and
std
adc
or
jp
xchg
mov
push
xchg
cmp
mov
test
mov
adc
popf
into
dec
mov
imul
and
jp
xchg
cmc
adc
jbe
mov
stos
cwtl
and
icebp
jno
dec
fwait
add
mov
jg
jmp
jbe
push
xor
dec
xchg
sub
out
and
jp
xchg
cwtl
adc
inc
inc
rorl
icebp
and
xchg
std
mov
cmpsl
dec
mov
pop
sbb
inc
adc
mov
dec
sub
and
std
sbb
and
jp
xchg
lods
adc
inc
out
mov
stos
shlb
icebp
or
push
popf
mov
rorl
mov
xchg
in
dec
adc
popf
cli
pop
loop
pop
lea
adc
xchg
out
adc
inc
push
push
mov
pushf
and
icebp
mov
movsl
mov
dec
push
mov
pop
dec
xor
dec
jo
or
mov
push
dec
mov
jp
xchg
mov
push
inc
add
sahf
icebp
rcll
adc
mov
xchg
dec
and
jmp
sub
xchg
and
pop
and
sarl
xchg
and
sub
push
icebp
mov
jl
mov
imul
lds
mov
xor
adc
popf
in
stos
sub
std
mov
mov
and
inc
inc
dec
lahf
mov
stos
nop
and
icebp
scas
xchg
movsb
fwait
inc
inc
rorb
std
adc
push
es
mov
int3
xor
xchg
adc
popf
ret
dec
jno
ljmp
jle
and
jp
xchg
das
adc
adc
fsts
jne
mov
sbb
jbe
pop
xor
dec
sub
das
mov
fs
and
jp
xchg
loop
push
jb
and
icebp
js
dec
fwait
push
iret
imul
dec
and
lret
adc
popf
dec
dec
push
sub
and
sbb
inc
and
jp
xchg
and
cmp
fsubs
icebp
call
inc
decl
rclb
je
or
stos
mov
xchg
inc
xor
dec
jle
mov
std
outsl
sbb
cmp
xchg
adc
inc
xchg
mov
and
icebp
mov
pop
mov
fistl
pop
push
xor
mov
push
and
outsb
adc
popf
loope
lods
sub
xchg
std
cmpsl
in
shlb
and
insl
mov
aad
jl
test
fwait
movb
jp
pop
push
or
mov
cs
xchg
adc
out
and
dec
mov
mov
jp
xchg
xchg
mov
fistpll
add
push
xchg
xor
aas
mov
sahf
dec
pop
mov
adc
jmp
mov
sub
xchg
fcmovne
mov
and
and
jp
xchg
sbb
mov
mov
stos
jo
push
fwait
pop
inc
rcpps
push
dec
add
push
mov
mov
mov
mov
das
inc
xor
les
add
in
dec
xchg
xor
lock
test
dec
xchg
mov
cli
ret
mov
push
sub
popf
xor
insl
xor
add
aas
pop
cwtl
add
outsl
gs
mov
std
in
add
ficompl
je
cmpsl
xor
push
test
ljmp
dec
xor
pop
mov
loop
sub
mov
roll
popl
add
mov
fsubr
cs
iret
ja
mov
lret
lods
int
out
mov
call
inc
mov
sbb
mov
xor
mov
cmp
rol
adc
js
push
add
xor
adc
loopne
sub
push
push
jg
fwait
sbb
ret
xor
mov
mov
fnstcw
cltd
fsubs
add
adc
imul
xchg
push
jle
jae
push
mov
xor
pop
das
or
popf
cld
ret
lods
cli
loope
dec
jecxz
sub
and
pop
testb
xor
xlat
xlat
push
inc
imull
lret
adc
and
xchg
mov
jnp
mov
push
cmp
pop
inc
repnz
jp
jne
cmp
add
pop
sar
mov
aad
xchg
and
dec
jmp
jmp
fcmovbe
mov
inc
and
lock
imul
pop
hlt
and
dec
cltd
pop
xchg
imul
inc
fnstsw
dec
mov
lods
add
dec
into
cmp
sub
sbb
xor
ljmp
loopne
pop
scas
test
mov
sub
mov
inc
mov
jnp
xor
jb
xor
loop
sub
clc
sub
xor
sub
mov
shll
mov
xor
ds
repnz
repnz
mov
and
pop
xor
sbb
push
xor
sub
pop
repnz
jl
imul
push
add
pop
les
push
popf
sbb
push
cmp
mov
add
push
cwtl
pop
add
lods
push
mov
in
lahf
push
das
out
fdivrl
hlt
aam
inc
sub
push
lea
les
ss
aam
pop
pusha
push
lods
int
cwtl
inc
xor
add
xchg
mov
jno
int3
fsubrp
sahf
ja
fiaddl
mov
aad
pop
orl
jl
jne
inc
mov
clc
sbb
sub
xor
mov
sub
adc
sahf
insb
add
inc
dec
std
mov
sti
ud1
aad
cmp
mov
cmpsb
mov
jecxz
ss
xor
or
push
mov
out
aad
prefetch
or
test
rol
push
fsubl
mov
pop
sbb
mov
mov
rcrb
pop
in
adc
inc
dec
sub
sbb
mov
mov
adc
mov
mov
cli
push
icebp
mov
xor
add
dec
xor
add
outsb
jb
add
negl
movl
jbe
lcall
dec
mov
add
adc
mov
adc
dec
sarb
mov
movl
daa
sbb
xor
mov
push
in
into
xor
jecxz
sbb
jo
stos
adc
push
and
mov
dec
sub
dec
add
dec
jle
cmp
mov
int3
cwtl
aam
xor
cmpsb
dec
mov
movsl
ret
in
add
arpl
mov
popf
pop
bound
mov
test
divb
ret
mov
cs
icebp
scas
cmc
xor
pop
pop
rclb
xchg
fwait
iret
and
adc
dec
cmpsl
call
bound
jnp
adc
jns
xor
dec
ficomps
dec
cmpsb
lcall
jbe
or
lods
mov
mov
lods
or
nop
xor
mov
sbb
aas
lcall
mov
testl
shlb
lods
ret
add
repz
fidivrl
cmp
xchg
dec
xor
jbe
in
inc
push
sub
rcrb
fbld
jecxz
add
push
mov
mov
mov
add
xor
inc
jae
mov
push
sbb
shr
fistl
push
mov
and
add
jp,pt
inc
es
inc
push
add
push
push
leave
add
inc
mov
push
pushf
shlb
push
repnz
sbb
add
int
out
stos
pop
data16
fstpt
clc
add
jge
cmp
popf
push
sub
sbb
push
mov
shlb
dec
xor
or
test
inc
or
or
fdivs
pause
jnp
mov
popa
insb
add
je
cmp
add
jp
xchg
das
adc
inc
dec
call
xchg
negb
mov
and
jbe
cwtl
xor
adc
popf
and
sub
and
std
cmpsl
jmp
arpl
sub
xchg
std
adc
rcrl
stos
test
icebp
push
xchg
mov
sub
mov
test
mov
sbb
popf
rorb
sub
and
std
xor
and
jp
xchg
in
sub
mov
icebp
sub
inc
mov
adcb
dec
mov
jbe
scas
xor
xchg
add
outsl
std
int
mov
and
and
insb
mov
fldt
sti
mov
adc
mov
adc
dec
shrl
or
mov
cmp
dec
and
jp
xchg
scas
adc
inc
pop
jno
sbb
icebp
mov
dec
add
mov
and
jbe
push
popf
and
sub
and
lret
aam
dec
xchg
dec
adc
inc
imul
and
notb
out
jle
rcll
push
ss
jbe
sub
lahf
jbe
in
aas
adc
sub
and
mov
and
jp
xchg
push
adc
ret
hlt
stos
xor
icebp
push
xchg
jle
cmp
adc
into
dec
insl
mov
adc
popf
repnz
aaa
sub
mov
push
and
jp
mov
stos
shll
icebp
mov
pop
lret
adc
push
push
dec
mov
jp
xor
dec
in
pop
negb
xchg
jns
push
jp
xchg
loop
mov
icebp
push
xchg
pop
fwait
inc
inc
or
mov
fimuls
mov
jo
xor
cmpsl
popf
push
dec
movsb
sub
std
ja
mov
inc
mov
and
icebp
jbe
mov
mov
rclb
push
lock
mov
pushf
jp
imul
popf
adc
sub
and
enter
adc
lods
xchg
adcl
inc
mov
mov
inc
and
icebp
xchg
xchg
sub
mov
add
popl
lock
cmp
add
push
cmp
sbb
or
adc
inc
pop
push
mov
stos
popa
and
icebp
rcll
out
es
jno
mov
outsl
dec
aam
daa
and
std
fildl
daa
and
xor
xchg
push
adc
inc
mov
mov
inc
inc
jb
mov
cmp
mov
cs
adc
sub
and
sub
and
jp
xchg
jle
test
adc
mov
stos
out
and
icebp
adc
cmc
fwait
or
mov
icebp
pop
pop
jbe
and
and
and
cmovs
sub
push
mov
push
and
jp
xchg
fstl
mov
mov
icebp
nop
xchg
or
mov
xchg
dec
jne
inc
and
popf
adc
sub
and
add
js
or
mov
scas
lcall
and
ss
mov
jl
or
xchg
xor
popf
clc
dec
shrb
ljmp
dec
and
and
outsl
bound
mov
icebp
fcoms
inc
movsb
mov
inc
dec
fsubs
cmp
xor
adc
popf
orl
inc
and
std
add
outsl
and
jp
xchg
jge
xor
stc
icebp
mov
icebp
xor
sarl
push
dec
dec
mov
daa
stos
xor
dec
xor
inc
and
std
xor
mov
jp
xchg
add
ljmp
je
shl
mov
inc
push
pop
mov
leave
dec
jnp
les
mov
loope
mov
and
std
sub
ljmp
xchg
mov
dec
inc
cld
in
mov
inc
and
icebp
sub
inc
mov
mov
mov
iret
xor
pop
popf
pop
dec
fisubrl
aaa
and
and
addl
outsb
stos
adc
in
mov
push
dec
and
fld1
xor
dec
sbb
cli
and
test
xchg
adc
inc
jecxz
mov
out
inc
pop
loop
in
pop
out
xor
dec
ja
and
xchg
std
xchg
and
xor
xchg
cmpsl
adc
inc
int3
stos
mov
xor
icebp
push
xchg
sti
fwait
jno
and
adc
jbe
dec
xor
dec
sahf
sub
mov
leave
and
dec
adc
mov
cmp
xchg
jp
test
mov
jle
xor
fsubs
xorb
xor
adc
popf
pop
dec
lods
sub
and
jp
xchg
notb
xchg
inc
inc
mov
outsl
icebp
lods
xchg
mov
xchg
inc
aas
sbb
mov
dec
sub
in
int
mov
dec
stos
sub
mov
and
xor
adc
bound
mov
stos
in
mov
adc
inc
dec
imul
divl
iret
adc
sub
and
xchg
sbb
and
jp
mov
stos
stc
and
icebp
pop
xchg
mov
scas
ss
gs
inc
hlt
adc
sbb
std
add
mov
fs
fnsave
xchg
fwait
mov
push
push
cmp
dec
js
mov
nop
mov
cs
mov
xchg
and
jp
xchg
sub
cmpsl
inc
sub
inc
pop
sub
push
cs
das
mov
cmp
popf
bound
sub
pushf
mov
and
mov
fdivl
lret
lods
js
xchg
adc
shlb
pusha
push
or
cmp
or
mov
inc
popa
or
sub
arpl
repz
inc
push
and
leave
cmp
rclb
loopne
mov
and
xlat
jae
mov
and
jo
add
jb
push
orl
shlb
sub
push
jae
enter
add
xchg
faddl
test
fnstenv
inc
add
inc
sbb
ss
jo
mov
jo
cmp
push
shrb
add
orb
xchg
mov
push
aaa
js
dec
adc
mov
sbb
cmp
mov
rcl
sbb
cwtl
push
mov
pushf
inc
subb
test
xchg
adc
lock
inc
add
mov
adc
or
es
adc
and
mov
xchg
mov
mov
or
xor
and
xlat
xor
xor
ficoml
xchg
cwtl
ja
add
xorl
adc
sbb
xchg
adc
jle
mov
xor
std
dec
daa
mov
and
cmpsb
cmp
push
or
xchg
dec
lahf
nop
cltd
test
xor
sub
xor
test
and
adc
test
cmp
cld
icebp
pop
nop
xchg
mov
fcoms
push
push
xchg
int3
lock
mov
mov
call
lock
jb
xor
push
xor
rcr
adc
outsb
and
subl
sbb
jecxz
push
subb
int3
adc
push
jo
jo
mov
andl
or
test
xchg
ret
adc
call
ret
push
and
xor
out
adc
stos
rclb
sbb
push
and
adc
in
xchg
cwtl
test
jne
jno
add
fstl
cmp
push
sub
je
inc
and
cwtl
adc
and
adc
imul
hlt
fwait
test
jno
test
add
xchg
insl
add
jne
sbb
fmuls
xchg
test
dec
and
and
popa
mov
push
nop
test
arpl
fbld
adc
fistps
test
cltd
fmuls
arpl
mov
xor
and
xor
loope
add
rcll
adc
in
inc
cwtl
pushf
jne
iret
push
sub
adc
lret
mov
cltd
loope
and
adc
testl
andl
adc
fwait
add
pop
and
clc
rolb
stc
and
cmp
xor
loop
les
mov
xchg
xor
fnstenv
es
inc
test
in
shl
and
xchg
mov
adc
jo
mov
popa
and
es
fmull
fisubrs
mov
incb
ljmp
cltd
xor
je
adc
fwait
inc
mov
and
loopne
adc
push
cld
pop
fiadds
xchg
movaps
adc
xor
call
ret
adc
cmc
cwtl
pop
adc
fwait
mov
and
mov
adc
jns
add
fistpll
xor
jmp
mov
movsb
test
and
sub
test
add
add
mov
dec
adc
js
cmp
into
es
push
cli
jle
mov
sbb
insb
push
mov
cmpsb
das
mov
aam
inc
sbb
fsub
sbb
add
mov
test
jnp
repz
dec
inc
add
lods
out
into
jp
sub
neg
add
dec
pop
aad
mov
stos
jb
add
je
mov
add
ja
inc
das
cmp
pop
pop
dec
stc
jno
inc
adc
lods
xor
xchg
xor
add
pop
jae
int
add
ljmp
pop
les
aas
bound
xor
adc
outsl
outsb
add
stc
xchg
sub
in
cwtl
add
mov
and
push
add
cmp
inc
mov
jp
jmp
add
popa
js
movsl
push
mov
xchg
add
fcmovnbe
test
into
and
pushf
cmp
repnz
mov
out
push
add
outsl
divb
pop
and
mov
ret
icebp
and
lds
sbb
cmp
jnp
add
cmp
inc
popf
sbb
jnp
ret
and
pop
mov
mov
xchg
outsl
push
into
push
jecxz
imul
fcomps
add
mov
cmpsb
xorl
push
stos
jno
in
aas
sub
mov
add
loop
mov
xor
push
or
or
sahf
sub
push
test
mov
jmp
movsb
push
mov
jo
jns
imul
jecxz
mov
xchg
mov
stos
rorl
mov
cmc
adc
hlt
lahf
xchg
mov
pop
jne
mov
pop
inc
cli
add
icebp
xchg
push
lds
imul
jge
cmp
fimuls
in
clc
popf
js
jb
mov
and
or
add
cmpsb
or
mov
addr16
ss
out
loopne
add
dec
lock
ds
pop
lock
test
sahf
cmp
and
das
mov
lds
or
xor
dec
ds
mov
add
je
xchg
mov
lret
mov
mov
xor
shlb
fs
mov
rcll
fmull
jnp
mov
cmp
xchg
mov
adc
inc
cmp
jo
add
stos
lret
lods
into
cmpsb
fcmovu
hlt
aas
dec
xor
adc
js
or
dec
clc
mov
pop
adc
sti
enter
dec
mov
out
and
xchg
fcomps
pop
and
shrl
shll
dec
fnstcw
xor
iret
xchg
jge
ds
jb
cmpsb
ss
fistpll
sub
fdivrs
add
add
rolb
pop
mov
jb
and
pop
xor
ret
mov
cld
rcrb
decb
and
mov
and
pop
pop
les
jbe
insb
or
sbb
lods
xlat
inc
jo
push
je
lret
cmp
arpl
push
cmp
and
cmc
popa
mov
data16
jns
cltd
add
sbb
mov
push
xlat
cltd
in
pop
xchg
paddusw
mov
adc
jnp
sub
inc
add
jnp
data16
subl
mov
pop
sub
xchg
icebp
add
xor
or
cs
pop
dec
fcomps
jmp
dec
dec
popa
mov
leave
mov
shl
dec
rcl
arpl
loopne
arpl
mov
or
into
ja
pop
mov
add
in
or
bound
insb
nop
pop
addr16
pop
ja
xchg
or
es
push
call
enter
clc
lcall
xchg
sbb
jecxz
adc
mov
xchg
sbb
xchg
int
push
push
out
jo
jmp
aas
add
lock
adc
pop
repz
add
xchg
into
add
out
inc
imul
das
sub
mov
das
xor
or
into
inc
int3
scas
push
data16
push
cmpsl
xchg
cmp
cmp
int3
shll
pop
inc
lea
lods
mov
cmpl
in
push
insb
jo
or
jb
push
cmp
or
mov
mov
push
in
in
cltd
jae
pop
mov
std
add
adc
cmp
out
cmpsb
mov
imul
hlt
or
inc
jl
movsl
je
adc
xchg
xor
lods
push
sbb
test
jno
das
mov
rcrb
inc
cmp
and
push
xor
mov
sahf
nop
movsb
notl
ljmp
fisubs
or
push
sbb
inc
je
lea
jae
not
ja
mov
es
jle
sbb
pop
push
testb
icebp
push
aas
inc
icebp
adc
mov
sub
sub
or
push
jp
push
cmc
lods
or
pop
dec
cwtl
ljmp
insb
jmp
mov
or
scas
pop
loope
lock
iret
sub
fnstsw
andb
push
fisubrs
popf
mov
rcrb
int
ss
adc
push
push
add
pop
pop
inc
lock
and
cmp
adc
pushf
dec
mov
nop
xor
iret
pop
inc
xchg
xlat
sbb
or
cmp
arpl
cmc
push
lods
xchg
jnp
xchg
jg
mov
mov
ljmp
test
add
cld
push
je
into
repz
xor
pop
out
pop
pop
mov
fsubs
inc
push
push
add
insb
fsubl
inc
gs
sub
pop
stos
test
add
dec
test
cmp
pop
lods
out
adc
cmpsl
outsb
popa
jbe
jp
popf
shll
and
or
xor
jp
push
int3
pop
outsb
sti
in
jge
adc
push
gs
rolb
sbb
mov
inc
test
push
outsl
ja
mov
push
repnz
lret
cwtl
aam
or
add
pop
sbb
bound
cli
mov
adc
shll
imul
ja
pop
push
sbb
mov
xchg
addr16
mov
dec
dec
test
cli
ja
push
in
insl
inc
stos
push
into
adc
cli
pop
xchg
xor
pop
sbb
add
sub
pop
pop
idiv
divb
push
cld
mov
or
jg
jne
inc
lret
and
pop
fistps
dec
push
shlb
mov
lock
hlt
or
xor
dec
jae
jmp
adc
xchg
cltd
jle
fwait
icebp
dec
mov
and
dec
repz
pop
jb
jle
xlat
notl
mov
pop
jb
xchg
add
inc
lods
pop
sub
outsl
jne
nop
inc
xchg
and
fisubs
push
rclb
cltd
pop
adc
lods
jl
push
jmp
push
jno
sbb
inc
push
and
pop
push
inc
dec
imul
adc
aam
and
xor
inc
jmp
dec
ds
sahf
jp
movsl
fsubrs
shlb
orb
sbb
imul
mov
jbe
fxch
movsl
test
push
or
cmpsb
or
add
out
mov
xor
xor
sbb
pop
lock
out
bound
mov
pop
push
lret
mov
loope
lea
sub
lock
xchg
or
jp
cmpsb
and
add
adc
jno
xchg
imul
leave
and
push
fnstcw
mov
das
daa
add
push
sbb
icebp
inc
adc
aam
fcoml
mov
cli
rclb
dec
gs
sbb
sbb
fdivrl
insb
gs
loopne
mov
stc
xchg
setb
rclb
je
cmp
sub
loop
negb
daa
pop
or
mov
rdtsc
sub
mov
inc
jne
pusha
incb
sbb
loopne
mov
mulb
cmpsl
sbb
jno
mov
inc
inc
in
aas
and
mov
aaa
daa
mov
mov
loop
push
imul
data16
arpl
dec
mov
imul
mov
jae
sbb
jbe
fistpll
mov
pop
jle
dec
es
pop
imul
xchg
movaps
mov
sub
cmp
fdivr
leave
data16
cmc
add
jmp
int3
into
icebp
jmp
xor
loope
xlat
cmc
les
aam
loop
sti
fdivrs
in
out
push
lret
out
cmp
test
popa
push
cmp
lahf
xor
xor
add
lret
adc
cmp
movsl
iret
jo
mov
jmp
mov
ljmp
inc
les
std
push
f2xm1
test
test
fmul
jbe
xchg
add
scas
aam
inc
iret
cltd
lahf
arpl
test
xchg
lock
sbb
loope
inc
aam
out
cmp
adc
and
sbb
lret
sub
call
in
in
icebp
push
push
add
mov
mov
test
rorb
mov
sbb
xchg
pusha
and
mov
xchg
popa
scas
xchg
jae
inc
mov
xor
scas
cmp
xor
mov
aaa
pop
xor
sub
adc
daa
pop
or
or
mov
pop
cmp
jb
into
dec
jg
int3
mov
out
inc
jae
loope
add
scas
jbe
push
mov
jg
add
pop
js
aaa
nop
xor
icebp
and
sbb
cmp
xchg
jne
inc
dec
xchg
cltd
mov
xchg
nop
push
mov
int
andb
xchg
or
and
pop
imul
pop
cltd
popa
loope
push
out
imul
push
xchg
push
sti
ret
cli
add
jp
rcll
clc
sbb
std
popf
fbld
jno
fldcw
mov
jp
out
sbb
add
mov
sub
add
push
es
xchg
pop
and
addl
aas
sub
or
shll
fimull
jns
fisttpl
lock
test
cmp
lret
fcoms
cmp
xchg
push
es
xchg
sub
sbb
mov
cmp
and
inc
mov
loopne
mov
das
adc
cltd
movsl
add
stos
xor
adc
jl
inc
das
xchg
movntps
int3
or
xor
adc
or
cmp
xor
xchg
xchg
das
add
orl
ret
cli
test
imul
outsl
pop
test
adc
mov
daa
or
ds
addb
mov
inc
xor
nop
loop
movsl
xchg
jns
jp
fsubr
shll
sbb
push
jbe
sbb
mov
pop
xchg
test
sbb
add
pusha
push
pop
loop
inc
adc
arpl
clc
and
movsl
add
stos
adc
or
or
or
mov
mov
mov
adc
add
insl
jo
cmc
jnp
nop
imul
cli
das
dec
adc
es
aas
mov
sbb
xor
adc
xchg
xor
mov
stos
add
cs
cld
stos
mov
cmpsb
xorb
xchg
lock
loope
jle
stos
mov
nop
clc
out
fidivl
cmc
pop
dec
adc
xor
adc
jno
leave
pop
jl
pop
fistpl
fldl2e
sbb
cli
loop
xlat
mov
pop
pop
fdivs
dec
repnz
in
inc
addb
scas
or
adc
mov
leave
mov
lock
lahf
pop
jp
mov
jnp
cltd
out
enter
fwait
push
jne
xchg
ror
insb
test
mov
xor
aam
push
mov
lods
mov
cmp
adc
xor
fs
jl
dec
jae
jnp
mov
fcos
clc
push
enter
xor
cld
dec
lret
loop
adc
or
insb
sti
int
inc
aam
or
cmpl
sbb
cld
jl
jo
mov
sbb
nop
jb
mov
adc
and
pop
sub
adcb
aad
sbb
mov
or
xlat
jo
sub
sub
sub
cmp
or
ljmp
jp
lret
ljmp
dec
jle
inc
jmp
jns
push
mov
and
dec
int
adc
jae
mov
int
inc
rcrb
adc
pushf
adc
mov
mov
push
jb
repnz
fldl2t
int3
push
int3
in
mov
repnz
lock
jbe
stc
jp
fcom
xor
sti
inc
mov
sbb
jo
pop
rcr
in
int
jae
push
rcll
and
lahf
mov
pop
insl
push
xchg
sub
xchg
push
xor
and
xchg
xor
nop
inc
popa
or
ja
inc
adc
enter
xor
inc
shrl
daa
and
sub
sub
jae
mov
ror
bound
and
pusha
clc
movsb
aaa
cwtl
mov
mov
add
enter
int3
cmp
ret
sbb
xor
inc
sarb
rorb
push
repz
xchg
add
jne
shl
fwait
daa
add
jp
jno
inc
or
inc
pusha
test
ljmp
jbe
xor
mov
cmpb
xorl
and
shlb
icebp
pop
into
add
jae
loop
imul
aam
jp
fcomi
js
sbb
arpl
add
push
aam
cmpsl
xchg
fcomi
inc
sub
fsubrs
ljmp
xlat
lret
adcb
sbb
sub
roll
jecxz
nop
cmpsb
test
lods
push
lods
sbb
mov
js
adc
scas
jo
xor
pop
jb
int
nop
xchg
sub
sub
cmc
mov
loope
push
cmp
cmp
fisubs
sbbb
scas
cmp
pop
scas
in
hlt
mov
xchg
xor
popf
mov
sbb
sub
stos
icebp
in
push
jnp
sub
sbb
stos
aam
sarl
arpl
mov
pop
push
aam
or
stos
push
add
mov
dec
movsbl
add
test
scas
push
xchg
out
jne
pop
fisubrl
test
lods
or
xor
push
xor
mov
xchg
bound
push
push
cmp
and
fsubr
repnz
xor
mov
sbb
mov
mov
cmp
sub
mov
fisubs
xchg
icebp
or
stos
outsl
stc
sbb
cli
adc
dec
and
testl
jle
inc
divb
js
in
aam
mov
jnp
les
push
sahf
mov
sbb
hlt
or
lret
inc
sti
das
push
push
out
jb
iret
js
ror
pop
into
cmc
or
movsl
or
cmp
fstps
insb
cs
push
fistl
sub
cmp
cmp
add
sahf
jo
cs
inc
out
test
dec
xor
and
adc
imul
push
jns
shlb
aam
ja
lret
cmc
ret
cmpsl
cmp
icebp
lods
sub
sbb
add
sbb
es
mov
add
cmp
adc
mov
mov
mov
xchg
mov
enter
lea
add
cmc
insb
pop
add
xor
mov
pop
or
inc
movsb
pop
lock
mov
sbb
mov
cmp
iret
pop
add
push
mov
push
dec
flds
add
out
jo
push
rol
push
pusha
cli
rolb
popa
not
add
iret
and
leave
bound
jo
hlt
cmp
or
cmp
scas
insl
jo
xchg
rep
and
jnp
jp
ja
nop
loope
inc
aas
mov
testb
jae
dec
outsl
add
icebp
mov
dec
pop
and
iret
or
pusha
mov
mov
push
imul
call
mov
sti
fstpl
dec
nop
rorb
and
mov
outsl
push
xchg
mov
sbb
or
mov
mov
imul
xor
enter
xchg
mov
rcrl
and
scas
lock
iret
cmp
add
or
jae
xor
cmp
sub
xchg
xchg
sub
mov
sbb
mov
push
or
add
fsubrs
cmp
cmp
cmpsb
int3
ret
cmp
add
orb
push
mov
adc
je
bound
push
in
or
mov
dec
mov
dec
add
insb
cwtl
rorb
push
loop
ja
jns
jg
ret
arpl
push
pop
in
loopne
inc
ds
inc
repnz
popf
jle
aas
mov
gs
push
hlt
add
and
in
loope
push
data16
and
pop
cs
fiadds
fmul
push
mov
pusha
dec
in
mov
leave
outsl
adc
lods
dec
bound
shll
lret
int
rcll
lds
mov
repnz
xchg
push
aad
fiadds
cmp
inc
xchg
jo
aas
jle
dec
ljmp
out
gs
xor
xchg
cmpsl
sub
inc
in
or
js
push
mov
sbb
lock
or
sub
jp
sar
and
clc
jb
shlb
sbb
sbb
xorb
inc
sti
jbe
dec
mov
push
addr16
sbb
jle
sub
out
adc
adc
xchg
inc
jo
lock
sbbb
pop
sub
adc
or
mov
xor
adc
mov
dec
mov
mov
lock
add
pop
fwait
dec
jb
aad
mov
sbb
mov
sub
pop
cmp
lcall
push
out
push
inc
leave
ljmp
div
pop
subb
dec
jb
lds
and
fldl
das
cmpsl
sub
arpl
pop
jg
mov
jne
fidivrs
jo
inc
andb
pop
xor
dec
sahf
xchg
xorl
adc
outsl
movsl
out
xor
lret
mov
mov
test
mull
sbb
jnp
xchg
stos
mov
movsb
xchg
scas
push
mov
out
xor
fcoml
imul
xchg
pop
call
fisttpll
push
xor
leave
je
mov
dec
sbb
pop
enter
jne
out
or
jmp
icebp
bound
cld
adc
add
test
dec
jl
cmp
or
mov
add
or
push
and
adc
ss
or
rsqrtps
add
addl
lahf
lea
ds
rclb
sbb
mov
sbb
lahf
sub
cmpsl
mov
mov
or
movsb
mov
mov
movsb
leave
daa
cs
xorl
xchg
jmp
xchg
or
aam
or
push
mov
dec
rolb
xor
mov
push
jl
sarl
mov
mov
dec
cmp
sti
xor
and
jl
enter
and
rcll
call
mov
lcall
adc
push
mov
dec
add
jnp
cli
ret
add
xchg
mov
mov
lea
aas
aaa
mov
jp
cmp
addb
pop
inc
sub
sbb
jge
sbb
pop
sbbb
incl
lods
inc
popf
clc
xchg
jmp
pop
shl
pop
xchg
bt
int3
popa
inc
fdivrl
add
mov
pop
scas
std
adcb
int3
jo
into
sub
pop
dec
sahf
jecxz
je
loop
push
test
rol
js
rclb
mov
add
fcmovu
mov
mov
subb
jl
rol
iret
mov
mov
out
notb
push
movsb
addb
cld
inc
pop
into
or
and
sub
xor
adc
inc
push
hlt
sub
push
std
xchg
pop
sbb
jmp
sub
dec
cmp
pop
loop
xor
cli
xchg
ja
pushf
outsl
mov
mov
push
imul
loop
xchg
mov
xchg
dec
inc
mov
imull
scas
iret
sti
nopl
or
cmp
cmovs
jmp
inc
dec
fcoms
dec
ss
test
cmp
sbb
cli
imul
or
dec
mov
lods
popa
popa
jbe
mov
outsl
mov
insb
std
fadd
or
and
jne
outsl
rclb
xchg
and
cmp
push
ja
mov
in
mov
inc
mul
into
lcall
dec
cmp
int
bound
cwtl
ss
stos
ror
jbe
mov
hlt
xchg
adc
scas
dec
push
clc
rcrb
dec
lock
popa
sub
dec
sarb
xor
add
pushf
pop
cmp
xor
xchg
mov
or
imul
sub
stos
subb
jp
push
shl
je
cltd
pop
in
test
xchg
add
fldt
mov
push
sbb
in
jp,pt
repz
mov
jns
add
mov
movsl
push
xchg
fisttpl
bound
movsb
fsubrl
lods
daa
cltd
pop
or
mov
jne
popf
xor
cld
ljmp
inc
jo,pt
sub
mov
dec
fmull
sarb
xchg
add
cmp
sub
loope
dec
ds
aam
fsubs
jp
add
shlb
and
push
ljmp
dec
lcall
inc
inc
cwtl
pop
xor
inc
jp
jo
push
inc
test
push
std
popa
mov
cmc
inc
dec
xor
adc
dec
push
subl
mov
xchg
inc
jbe
out
mov
lds
dec
in
jns
jbe
rorb
sbb
inc
dec
jo
dec
fsubrl
xor
pop
int3
jae
push
test
ljmp
mov
repnz
arpl
pop
test
adc
fisubrl
mov
cltd
mov
sbb
aas
mov
test
push
cmpsb
mov
pusha
gs
add
xor
divb
pusha
testb
dec
mov
xor
jno
hlt
xor
add
jle
adcb
repnz
push
clc
aaa
shlb
aaa
aas
dec
add
stc
cmp
pushf
xchg
adc
jno
adc
in
imul
lods
sbb
jp
jle
loop
aad
adc
push
fiadds
push
rep
sub
push
push
das
insl
je
inc
lods
mov
jns
shl
in
push
mov
jo
inc
movsb
cmc
add
xor
pop
lcall
outsw
unpcklps
sti
push
push
pop
cmp
xchg
mov
fcompl
sbb
daa
outsl
dec
inc
sbb
in
mov
add
mov
jne
movsl
sbb
fldl
in
mov
sub
cwtl
enter
stos
push
push
mov
test
pop
loopne
mov
mov
mov
lock
fcoml
data16
data16
ret
in
ds
inc
adc
cmp
inc
xor
inc
dec
std
movsb
shll
lods
ja
or
and
push
pop
pop
sbb
test
jle
sub
fisubl
lods
idivl
out
insb
ss
xchg
insl
and
cmc
mov
push
test
jbe
sub
push
stc
or
stc
arpl
bound
sub
sub
mov
dec
sub
push
pop
rsqrtps
out
pop
outsb
insl
shl
movsb
js
rcl
mov
or
icebp
clc
test
dec
or
jo,pt
jp
arpl
xchg
mov
push
sti
add
jmp
pop
dec
out
pop
bound
adc
arpl
insl
lret
inc
adc
xor
jbe
xor
dec
cld
arpl
ret
xchg
dec
in
push
movsl
dec
push
ja
sbb
sub
stos
mov
mov
sbb
out
out
sub
js
std
lea
push
fiadds
scas
shl
out
inc
push
sbb
cmc
cmp
lea
push
xor
inc
jo
sub
test
inc
fwait
enter
push
and
jnp,pt
or
cld
jns
dec
jge
mov
mov
mov
sub
push
les
or
pop
dec
sbb
ja
call
push
scas
call
ljmp
movsb
cltd
push
negb
out
leave
jbe
sbb
push
push
jae
pop
insl
mov
adc
and
xor
sbb
push
mov
jbe
mov
orb
lcall
shr
dec
cltd
pop
pop
sub
and
fcomip
or
ficoms
sbb
rclb
mov
dec
cmp
push
cld
cmp
mov
mov
and
test
fnsave
subb
aaa
mulb
stos
sbb
push
pop
lock
adc
sarl
test
fs
push
mov
xchg
lea
out
leave
pusha
dec
dec
push
fistps
sub
sub
out
mov
jecxz
bound
loope
cmp
loop
jne
push
sub
cmp
in
out
jb
inc
inc
dec
mov
adc
inc
push
out
into
das
sbb
stos
fs
pop
sbb
push
xchg
add
and
fisubs
outsl
xor
mov
sbb
sub
call
testb
xorb
pop
lret
bound
mov
inc
add
push
xchg
mov
lock
ficoms
or
cltd
sub
imul
dec
jecxz
cmp
scas
insb
icebp
in
aam
xor
dec
dec
out
ja
dec
je
inc
ljmp
pop
lock
push
mov
lcall
mov
out
xor
rorl
xor
push
pop
std
xchg
cmp
xchg
fucomp
mov
lods
dec
xlat
out
push
lret
sbb
inc
call
addb
cld
mov
mov
cmp
sub
fs
cmc
sarb
jbe
push
pop
pop
shll
cs
xchg
fidivs
push
bound
pop
xchg
ds
or
and
ds
mov
dec
out
imul
sbbb
in
std
push
jne
leave
push
xchg
push
add
imul
add
pop
shr
mov
xchg
rcrb
jo
xchg
dec
mov
repz
jbe
or
outsb
sbb
dec
jmp
mov
cmp
and
mulb
fdivs
adc
push
out
push
pop
testl
xchg
into
add
cli
pop
jl
jae
in
xchg
out
rcrb
cmp
inc
loope
sub
mov
mov
jl
fcomps
fisubrl
sbb
mov
aam
nop
jp
inc
lods
push
popa
outsl
lret
sub
mov
jbe
mov
ss
pop
xor
mov
xor
xor
imul
push
mov
ret
mov
inc
sti
jno
inc
cld
je
dec
lock
add
jg
dec
jmp
push
push
out
push
pop
fdivs
bound
push
rcrw
push
fildll
inc
jno
lret
jbe
inc
js
ret
in
stos
in
data16
cmp
xchg
stos
jo
lret
ja
push
cmc
xchg
sbb
test
ds
add
inc
je
andb
jbe
push
xchg
lods
add
mov
xchg
cwtl
sbb
cmp
sub
dec
jg
int3
and
and
fisubl
jnp
or
dec
ljmp
adc
pop
outsb
scas
mov
jae
mull
xor
ljmp
sub
mov
push
fildl
jo
fadd
fildll
jmp
xchg
mov
or
push
xor
sub
or
xorb
loopne
cli
or
push
je
add
push
aad
pop
and
js
repz
xchg
cmp
cmpb
jg
dec
or
jnp
sbb
and
mov
cli
jnp
pop
sbb
or
pop
stos
mov
sub
nop
push
test
outsb
cmc
or
negb
movsl
jge
outsl
xor
dec
in
sub
stos
cs
and
push
and
mov
cli
or
pop
loope
arpl
lock
lock
push
rcll
cmp
jne
insb
pop
cli
loop
arpl
cmp
adcl
mov
pop
jae
lods
pop
jns
inc
dec
jmp
aas
cmp
in
xor
inc
xchg
pop
and
mov
xchg
aaa
das
jg
pop
cmc
jmp
jno
xchg
xchg
and
ds
mov
add
mov
cld
xchg
test
and
std
ret
push
and
es
jb
and
jae
fimull
outsb
into
inc
cmp
xlat
mov
jmp
mov
movsl
mov
cmp
fmul
inc
xchg
out
shlb
or
imull
push
xchg
sbb
bound
adc
mov
enter
nop
rclb
cmp
ror
ret
inc
inc
mov
add
ljmp
jb
pusha
add
pop
loop
ret
mov
and
sub
mov
or
dec
movsl
cld
adc
popa
and
mov
loopne
xchg
aaa
and
cmp
adc
mov
push
mov
scas
outsl
sbb
lea
fcmovnb
mov
in
gs
add
sbb
push
sbb
inc
add
mov
add
sub
xor
lock
loope
or
push
pop
or
into
clc
push
mov
mov
inc
inc
adc
std
push
adc
mov
xchg
movsb
test
or
popa
push
cmp
mov
or
mov
ret
test
cmp
nop
push
mov
xchg
ljmp
out
in
pushf
sti
sub
andl
cmp
or
loopne
push
mov
lods
popa
mov
movsb
jae
jne
xchg
adc
cmp
and
andl
adc
in
sbb
jmp
fnstenv
adc
mov
std
or
push
push
push
push
adc
jp
in
push
sbbb
push
jne
adc
pop
icebp
icebp
clc
js
cmp
test
xchg
xor
or
shlb
pop
fidivl
mov
cmpxchg
mov
cwtl
add
inc
pop
cmp
mov
aaa
fwait
xchg
fs
ljmp
cli
mov
shlb
sub
xchg
or
add
lahf
xor
xchg
inc
std
cmp
xchg
mov
adc
cmp
cld
mov
xchg
aam
sub
xor
lret
inc
jne
lea
std
xchg
push
and
hlt
orb
fiaddl
mov
sub
dec
shlb
testb
cmp
cmc
repz
xor
data16
jbe
nop
fwait
cmp
mov
pop
pop
adc
jbe
push
jne
add
cmc
sub
lret
mov
testb
ret
icebp
sub
xorl
fdivr
adc
xchg
push
jne
xor
push
or
cmp
or
sbb
add
adc
fsubr
sbb
add
inc
adcl
mov
xchg
rorb
lcall
push
pop
add
xchg
das
dec
dec
mov
sub
aad
sbb
je
cmp
mov
lahf
shr
lods
jmp
pop
jnp
mov
cmp
adc
cmp
int
or
rclb
adc
mov
mov
sbb
inc
xor
mov
mov
data16
push
jmp
xor
dec
cmpsl
push
hlt
das
mov
jno
call
cmp
jp
popa
les
loopne
sbb
ret
cld
push
clc
outsl
xchg
mov
in
add
pop
push
xchg
je
ljmp
and
cmp
shlb
mov
fwait
sub
xor
mov
mov
add
xor
call
xor
push
xchg
and
sbb
xchg
mov
push
inc
hlt
loopne
data16
test
sub
leave
or
pop
les
xor
or
or
es
scas
xchg
cmp
movsb
in
cmp
inc
jae
add
and
cmp
stc
cmp
sub
mov
mov
push
mov
outsl
pop
xchg
cli
sti
gs
sub
hlt
push
out
xor
fs
in
int3
xor
xchg
lahf
mov
and
fwait
xor
enter
scas
pop
subb
mov
mov
mov
and
sub
inc
stos
cmp
sbb
mov
cltd
les
es
cmp
popl
inc
mov
push
out
mov
inc
stos
mov
sti
jno
inc
divb
mov
and
pop
and
bound
sbb
and
xchg
pop
xor
adc
mov
sub
es
sarl
push
mull
daa
mov
adc
or
daa
movsb
inc
xchg
push
in
add
push
popa
test
lret
xchg
and
sub
xor
mov
push
lret
enter
sub
loopne
cmp
mov
adc
mov
xchg
aas
test
insl
aas
push
ds
adc
jno
fadds
sub
std
test
cltd
dec
addl
fcomip
cwtl
clc
add
repnz
xchg
cs
xchg
adcl
jg
dec
add
inc
add
fstpt
sub
mov
sub
xor
or
xchg
cmp
push
push
pop
adc
mov
cmp
cmc
adc
inc
sub
push
sarb
add
push
lret
jecxz
lcall
xchg
adc
pop
lock
loopne
lcall
adc
fldt
inc
and
fisttpl
mov
lock
pop
xchg
into
sti
sub
mov
loop
daa
cmp
mov
stos
mov
inc
push
sti
inc
in
fs
mov
loopne
ret
arpl
mov
adc
add
ja
add
add
pop
fdivrl
cmp
or
cld
adc
mov
call
cs
xor
xor
fwait
cmp
imul
cmp
nop
inc
cli
and
out
and
xchg
xchg
mov
jae
sbb
pop
push
mov
cmp
and
pushf
dec
cltd
ljmp
dec
mov
pop
jbe
imul
pop
jg
sbb
jp
or
cmp
ret
and
mov
push
jmp
sbb
popf
push
mov
sub
repnz
cmp
dec
push
push
mov
xor
mov
in
and
mov
push
sub
cmp
mov
shrl
add
sub
push
cmp
or
xor
add
out
mov
call
pop
dec
bnd
lret
push
mov
inc
arpl
push
sub
push
fnstsw
adc
test
jb
mov
xchg
aam
jne
repnz
cmp
sbb
xor
das
pushf
mov
xchg
push
jne
mov
and
bound
mov
loopne
clc
ret
sbb
lock
das
cmp
or
or
test
ret
push
mov
add
outsl
add
or
mov
ljmp
and
or
sbb
stos
jle
mov
jne
jmp
xor
pop
jae
push
imul
sbb
stos
les
add
xor
inc
dec
fidivrs
js
test
xor
or
jge
push
inc
mov
pop
jb
cld
xor
pop
bound
clc
pushfw
xor
scas
nop
and
adc
outsb
xchg
and
stc
inc
jbe
xor
dec
fdivl
and
adc
cmp
in
subl
lcall
mov
sbb
inc
sbb
pushf
or
sbb
jne
lea
call
and
lcall
pop
fdivl
dec
xchg
cmp
test
out
loop
adc
cmp
xor
loope
mov
mov
je
push
xor
cmpsb
cmp
and
and
jp
dec
or
mov
inc
je
xor
test
sub
xchg
pop
jle
xor
das
inc
xor
pusha
rcrl
sbb
push
fwait
jp
sbbl
xchg
mov
and
inc
push
mov
icebp
xor
push
adc
xchg
mov
push
fidivrl
jns
ljmp
push
or
xchg
fwait
outsb
mov
and
bound
adc
sbb
cmp
mov
push
adc
jge
test
cmp
shrl
or
aad
mov
xchg
lret
addb
daa
fnstsw
call
mov
mov
gs
xor
fidivl
cmp
sti
and
adc
sub
leave
orl
test
sub
rcll
ljmp
inc
or
hlt
inc
and
icebp
jp
repnz
and
push
call
es
divl
mov
fisttps
mov
xor
subl
xor
jmp
xor
js
cmp
es
dec
mov
push
lretw
int
sbb
jae
pop
fdivl
sbb
movsl
ljmp
sub
call
dec
sub
js
jae
adc
xor
ja
dec
les
mov
lcall
jle
mov
push
popa
in
testl
push
and
mov
in
push
jg
popa
pushf
pushf
insl
orb
jb
jmp
fimull
mov
cmp
jl
xchg
push
push
icebp
jb
negb
push
xor
jle
pushf
sbb
je
ja
or
aam
mov
inc
inc
pop
cmp
sub
mov
adc
bound
outsl
popa
jns
fwait
testl
push
data16
fstpt
fwait
jecxz
sti
rol
jno
xor
lea
mov
cmpsb
call
pop
add
cs
dec
xchg
test
mov
cmpsb
mov
pushf
inc
test
push
cmp
dec
jnp
inc
mov
inc
out
push
sbb
lret
int3
cmp
cmpsl
scas
add
add
jmp
jae
cmpsl
add
ficoml
or
bound
inc
icebp
jb
cli
or
sbb
pop
ljmp
movsl
xor
mov
xchg
sbb
fisubrl
sahf
inc
pop
xchg
inc
popl
pop
sahf
test
jmp
loop
or
mov
cmpb
ss
push
out
push
pop
js
mov
call
out
sub
add
pop
test
dec
js
xchg
repnz
and
inc
mov
inc
or
xchg
xchg
mov
pop
and
cmp
adc
dec
xor
mov
jae
js
adc
shll
cmpl
sub
push
cmp
and
cltd
and
sub
stos
pusha
leave
mov
add
fsubl
insb
push
cld
fisttps
inc
ret
cli
pop
or
add
test
and
sbb
add
shr
jle
xor
jle
sti
pop
push
fbstp
movzwl
dec
add
push
les
pop
int
cmp
mov
inc
andb
dec
adcb
push
adc
bound
pop
ret
notl
cs
dec
in
push
jmp
icebp
lret
addr16
mov
xchg
or
sbb
pushf
stc
xchg
ret
push
push
cmpsl
add
mov
stc
jge
out
xchg
push
and
pop
loopne
mov
cs
test
mov
cmpb
pop
insb
stc
add
adc
or
mov
inc
ss
xchg
adc
add
and
xchg
xor
mov
jo
lods
sarb
sbb
push
lock
pop
data16
cmp
pop
mov
xchg
mov
fnstcw
xor
xchg
mov
inc
mov
sbb
and
add
dec
xor
addr16
push
jne
inc
add
sbbb
dec
loope
aam
jmp
repz
push
push
hlt
imull
jns
leave
mov
jmp
adc
push
or
cmpsl
mov
repz
push
movsl
fnstsw
dec
push
fwait
lret
addr16
cld
xor
ss
push
sbb
add
xor
push
or
xchg
scas
or
data16
mov
sbb
cmp
shll
dec
scas
inc
mov
mov
aaa
adc
sbb
stc
inc
pushf
inc
add
mov
mov
dec
aam
data16
frstor
jbe
dec
fs
inc
das
xchg
es
fimuls
lods
pushf
xor
inc
lods
adc
leave
dec
xor
sbb
or
mov
sarb
jo
xor
or
jb
pop
adc
dec
sahf
dec
sub
jae
jl
inc
xorl
loopne
adc
mov
or
add
sbb
pop
outsl
push
pop
push
sbb
sub
aam
repz
and
fdivrs
cmp
stos
mov
aaa
and
xor
mov
dec
mov
mov
fists
sti
adc
cmp
out
test
sbb
sub
and
and
outsb
xlat
mov
xor
mov
imul
je
jae
adc
sbb
mov
lock
ds
sbb
cmp
les
aaa
and
cmp
jmp
xor
pop
add
push
push
xchg
sbb
adc
inc
pop
inc
pop
jmp
pop
mov
push
sbb
inc
stos
icebp
xorl
mov
and
adc
xchg
mov
inc
dec
adc
mov
jo
mov
add
repnz
jb
test
loop
jne
stos
dec
aad
push
mull
shlb
mov
pop
cmp
adc
push
pop
push
dec
jo
daa
add
mov
jo
pop
sub
jge
notb
dec
pop
ret
add
pop
lods
jae
pop
dec
mov
push
fildl
inc
jmp
dec
das
mov
repz
push
icebp
dec
mov
pop
or
imul
add
outsl
call
call
sbb
add
fisubl
push
mov
jle
xor
dec
jb
jo
jns
or
test
mov
xor
inc
inc
push
add
and
lahf
and
adc
push
or
push
cld
call
mov
mov
movsl
mov
jecxz
jno
and
jae
pop
sbbl
mov
std
mov
dec
into
jno
enter
addr16
ja
repz
loop
xchg
ss
je
sub
call
outsb
test
test
lock
mov
movsb
add
mov
and
xor
adc
pop
mov
and
adcl
adc
pusha
daa
pop
mov
cmp
add
sti
add
repnz
pop
out
jnp
aam
and
xor
movsb
call
mov
and
insl
or
cmp
jl
mov
setns
add
and
dec
mov
ss
xor
sbbb
mov
adc
jnp
mov
inc
push
mov
inc
sbb
mov
push
adc
mov
mov
push
cltd
mov
add
fsubrl
and
push
xor
inc
call
aas
scas
inc
in
xchg
clc
push
sub
jae
rcll
xchg
test
and
pop
nop
dec
cld
call
rolb
lods
cli
inc
call
sub
les
push
mov
stos
cwtl
adc
mov
popa
jns
pop
xchg
das
lods
adc
mov
inc
sbb
xor
movsb
ss
cmpl
add
mov
jne
push
xor
inc
xorb
push
stos
inc
xor
fwait
xor
xor
das
adc
sbb
inc
mov
and
into
cmc
mov
sahf
dec
mov
int3
adc
stos
sahf
adc
cld
pushf
std
pop
test
inc
mov
sub
pop
movsl
popa
mov
push
adc
je
repz
adc
loope
daa
push
mov
icebp
stos
dec
push
mov
inc
add
rclb
jmp
sub
jbe
pop
out
out
arpl
ret
push
cmpsb
sbb
xchg
mov
adc
and
and
scas
mov
mov
jl
pop
ja
inc
call
xchg
es
add
int3
iret
sbb
or
mov
lcall
lret
xor
mov
mov
es
pop
mov
push
push
andb
bound
jp
jl
jno
jno
pop
cmp
push
ljmp
sub
pop
dec
outsl
add
scas
jns
sar
pop
adc
rcrl
jl
jb
inc
nop
dec
daa
dec
or
in
pushf
push
push
in
lcall
cmp
negb
std
bound
xchg
movsb
sub
push
xor
jae
or
push
inc
lods
xor
push
outsl
jl
mov
lock
dec
dec
adc
not
lock
or
fisubl
call
add
iret
dec
jl
jecxz
xchg
inc
leave
mov
mov
iret
and
jnp
adc
cmp
inc
clc
lret
fmull
push
push
mov
xchg
je
mov
addr16
stos
mov
es
mov
cli
cmp
and
fs
cmp
mov
jecxz
lahf
mov
and
xlat
and
xchg
ljmp
mov
jp
clc
lea
xor
dec
mov
xor
jbe
cmp
pop
jp
pusha
dec
mov
sahf
mov
and
rcll
sahf
imul
out
xchg
jl
jmp
out
sbb
mov
sub
push
rcll
aaa
test
push
push
add
loope,pn
sahf
jle
in
add
jmp
cli
in
xor
pop
mov
add
fs
xchg
sub
imul
out
sub
adc
out
cmp
popa
or
mov
or
adc
mov
icebp
or
inc
adc
dec
xchg
mov
adc
pop
cmp
cmp
cmc
mov
mov
and
inc
add
jecxz
dec
mov
in
bound
cmp
stos
jns
xchg
inc
sub
inc
in
cmp
adc
iret
and
test
daa
cmpsl
xchg
movsb
sbb
orb
lret
fldenv
cmp
cmp
repz
sub
fadd
jmp
psrld
test
and
sar
adc
mov
inc
lret
pop
icebp
fistpll
xor
aas
pop
stc
and
mov
pop
in
mov
insl
inc
and
aaa
cmp
int
aam
pop
cmc
call
pusha
jo
setne
in
inc
ljmp
mov
jl
in
sub
mov
mov
cs
es
mov
or
push
and
cmp
or
orl
xchg
pop
adc
and
adc
sbb
or
stc
sub
dec
inc
xchg
mov
xor
mov
cwtl
into
pop
loope
cmp
lcall
in
jle
stos
cld
xchg
push
cmp
inc
scas
cwtl
lock
pop
mov
jno
mov
cli
cwtl
lds
dec
loop
fmulp
dec
dec
cmp
jns
ror
jae
jp
xchg
mov
mov
cmc
aam
push
add
lahf
stos
and
push
stos
xor
sbb
test
pop
mov
or
xor
inc
std
add
ss
adc
push
cmpsb
inc
cli
mov
icebp
subb
push
ret
lods
ljmp
loope
or
xchg
jge
pop
cmp
inc
xor
push
xor
push
sbb
mov
int3
push
xor
push
pop
sbb
lret
cmp
cmp
fdivrl
adcb
xor
inc
ljmp
fwait
test
push
enter
in
inc
push
test
fs
insb
mov
add
std
mov
add
test
mov
inc
xor
test
stos
mov
cli
mov
pop
scas
dec
push
add
das
shld
xchg
sub
fstpl
and
or
es
jne
adc
adc
gs
clc
dec
push
xor
add
cmp
cmpsl
jno
decl
stos
jno
jne
jae
and
mov
aad
xorl
pop
dec
js
popa
loopne
int3
cltd
and
xor
add
loop
mov
mov
mov
sbb
mov
mov
shl
jo
vmwrite
mov
xchg
push
inc
sbb
cltd
roll
jg
in
and
sar
fisubl
popf
ret
in
lds
lods
jge
pop
fwait
add
cmpsl
inc
mov
leave
sub
lahf
lcall
adc
std
mov
cld
pop
scas
or
pop
jecxz
lock
filds
neg
xor
stc
mov
ds
sub
ljmp
add
jl
lock
ja
cltd
aam
mov
pop
mov
cmc
cmp
les
aad
pop
mov
test
popf
adc
sbb
cli
push
out
sub
in
jne
jle
outsb
push
and
outsb
mov
jle
xchg
inc
xor
fbstp
sub
out
add
cs
std
xor
fs
out
jmp
push
adc
test
imul
sti
ret
mov
fistpl
mov
int3
aaa
cmp
decb
subl
xor
inc
inc
sti
mov
cmp
push
arpl
movsl
loope
xor
rcr
and
subb
lods
mov
push
inc
popa
xor
xchg
lods
mov
xor
inc
rcrb
jo
and
mov
and
sti
and
outsl
adc
lock
test
xchg
xchg
mov
and
jne
sub
enter
add
les
cmp
inc
mov
hlt
or
mov
cwtl
mov
orb
rcl
adc
mov
jnp
iret
or
movsb
das
jmp
mov
in
fbld
inc
dec
call
cwtl
or
sub
inc
push
dec
hlt
jmp
and
into
daa
xor
dec
cmp
mov
sub
jecxz
or
stos
cmp
adc
cli
add
jmp
jmp
call
mov
movups
or
pushf
mov
cld
or
shll
push
mov
or
mov
mov
pusha
or
and
lock
movsl
jo
and
aas
xor
lea
out
sub
or
mov
out
jb
in
adc
lret
jno
inc
sub
ss
sub
mov
adc
mov
xchg
cmp
dec
adcl
and
xchg
sub
movsl
pop
cli
std
je
les
call
push
dec
xor
inc
cmp
push
cmp
clc
inc
add
imul
cli
in
xchg
pop
push
xchg
mov
sub
test
ljmp
pop
dec
shrb
test
xchg
inc
mov
fiadds
shlb
daa
out
sub
mov
pop
mov
xchg
cmp
int
and
or
dec
mov
mov
push
inc
jo
mov
push
sbb
std
fnsave
xor
mov
adc
shll
pop
decl
inc
mov
inc
xor
aad
push
cmpsb
push
ja
add
js
xchg
jle
or
xorb
cs
test
outsl
ljmp
fldenv
inc
shll
sbb
cmpsb
push
enter
popa
negl
sbb
popf
mov
fwait
adc
rcl
clc
fisubl
pushf
xor
fldl
sbb
subl
cmp
mov
xchg
mov
test
and
adc
in
out
dec
or
and
in
pop
loopne
or
dec
outsl
inc
bound
lds
and
popf
jp
add
mov
nop
or
lock
xlat
adc
stos
and
jp
inc
dec
mov
mov
insb
psrlq
mov
pop
sbb
inc
mov
push
int
int
pusha
mov
inc
add
add
loope
or
insb
sub
push
and
cld
xchg
and
dec
add
lods
and
dec
leave
cmpsb
divps
fdivrl
push
ret
dec
loop
jle
xchg
push
cmp
test
mov
add
ficoml
packssdw
test
fcmovbe
jno
cmp
push
sub
das
jl
and
daa
push
sbb
ss
mov
jge
mov
xchg
and
mov
ja
clc
mov
filds
aad
je
fdivrl
pop
push
pop
or
mov
push
aaa
data16
add
js
int
mov
call
inc
insl
pop
sbb
xor
call
pop
or
push
lods
fidivs
inc
arpl
sub
hlt
inc
popf
push
push
push
hlt
push
xchg
or
cmp
lret
mov
mov
outsl
and
xchg
xchg
stos
ljmp
ljmp
cmc
push
dec
pop
loop
adc
clc
popa
mov
add
int
mov
cmp
mov
adc
and
sub
cmpsb
mov
in
adc
push
dec
leave
mov
insb
lods
mov
es
mov
cld
xchg
or
sbb
imul
int
jns
subb
jne
mov
cld
sbb
push
adc
dec
inc
icebp
xor
psrld
test
test
sub
mov
ficompl
pop
mov
fwait
jne
xchg
add
dec
jge
jmp
into
ljmp
xor
sti
test
jmp
fsubr
sub
movzwl
jb
neg
fcomps
rcll
imul
jmp
fsubrp
and
mov
lcall
frstor
pop
push
les
mov
mov
xor
mov
test
adc
mov
or
cmp
jns
cmp
and
in
inc
mov
push
add
or
jge
bound
cwtl
jl
pusha
lods
and
and
aas
pop
cmp
push
and
fildll
cmp
jbe
inc
cmc
dec
push
orb
sub
dec
mov
adc
push
pop
out
test
jle
je
rorb
cmp
jo
push
push
cmp
jl
adc
dec
call
xor
pop
push
dec
mov
xor
sub
push
add
mov
pop
pusha
cmpsl
stos
fucomp
lret
xor
mov
sahf
and
cwtl
cmp
pop
mov
xor
dec
mov
out
movsb
loope
mov
cmp
lret
sbb
inc
mov
and
adc
shll
pusha
movb
push
dec
std
xchg
in
test
cli
arpl
pop
loopne
into
mov
ljmp
sub
mov
push
xlat
sbb
mov
sbb
adc
lea
xchg
or
stos
out
jo
sub
gs
cli
gs
and
test
lcall
cmp
add
sbbl
cmpsl
or
es
bound
out
and
adc
xchg
mov
inc
cmpsl
inc
inc
cmp
mov
insb
push
jno
sub
sti
mov
xchg
jae
inc
add
in
xor
mov
jne
int3
addr16
dec
testb
mov
push
xor
stos
fcomps
addr16
dec
sbb
mov
jo
inc
pop
sahf
mov
into
or
repnz
mov
push
sti
or
xchg
jmp
sbb
or
sbb
ja
cld
ret
xor
int
push
add
lock
hlt
fstps
jl
fs
mov
addl
adc
ja
stc
mov
cld
push
icebp
and
or
fiaddl
inc
mov
ss
jge
or
scas
dec
je
push
inc
or
jne
test
cmpl
shr
dec
push
jmp
xchg
aas
pushf
xchg
inc
adc
cwtl
cmp
pop
icebp
sbb
xchg
cmp
and
xchg
jmp
fucomp
in
ret
sti
ret
cmp
movsl
fadds
ss
sbb
mov
ret
or
dec
push
test
and
mov
add
and
fucomi
or
xor
int
sub
xor
mov
test
mov
dec
dec
push
test
jb
mov
aaa
or
imul
int3
test
cmp
addl
jecxz
icebp
push
js
loopne
mov
movsl
enter
pop
jp
xor
mov
xchg
test
xlat
scas
test
push
mov
nop
inc
mov
sub
adc
jp
adc
frstor
cmp
or
mov
rclb
cmp
test
inc
and
mov
mov
or
rorb
mov
rcrb
dec
push
loopne
and
xchg
sbb
or
loope
inc
popa
or
xor
push
mov
inc
or
jge
repnz
sbb
or
sub
aad
and
xor
mov
es
push
jns
int
dec
clc
jg
mov
test
ljmp
or
and
cld
sbb
xchg
clc
dec
add
nop
pop
movsl
jmp
lods
mov
lret
clc
leave
in
xor
mov
ret
add
mov
repnz
dec
add
icebp
sub
dec
das
jno
adcl
hlt
ljmp
aas
adc
loopne
pop
in
lods
shrb
dec
movsl
sahf
lock
xor
std
or
fcoms
fisubl
pushf
jecxz
xchg
xchg
jns
push
leave
iret
pusha
mov
inc
cld
mov
and
testb
xlat
adc
push
aam
mov
sbb
sbb
pop
filds
hlt
cs
mov
scas
mov
push
bound
jle
daa
add
jnp
inc
cmpl
push
popf
mov
in
lea
cltd
pop
mov
mov
aad
adc
lea
add
repnz
xchg
or
pop
xor
subb
and
andl
or
into
js
push
jne
add
mov
scas
add
scas
rcl
mov
sub
push
pop
push
pop
ljmp
xor
cmp
pop
sahf
mov
dec
xchg
push
mov
cmp
jp
lea
test
lods
lea
cmp
cli
pop
arpl
jg
xor
xor
jmp
xchg
lret
xchg
pop
fisubrl
imul
test
stos
fidivrl
sub
gs
gs
jns
pop
cltd
fistl
xchg
mov
xor
ret
inc
push
sub
inc
jbe
sbb
cmpsb
lods
mov
fstl
inc
icebp
fistl
mov
push
orb
cmp
mov
push
pusha
adc
xchg
ret
test
xor
and
pusha
test
mov
cld
xor
aaa
ret
stc
jae
call
xor
push
add
push
xchg
dec
push
daa
xorb
mov
popf
push
mov
sub
cmp
movsl
xchg
mov
xor
mov
movsl
ret
cli
cmp
add
mov
test
aam
sub
inc
jbe
rcll
sti
xchg
push
pop
imul
repz
das
sarl
shr
or
lcall
shrb
sbb
fs
push
je
push
loop
mov
pushf
push
adc
call
lea
push
xor
sub
jne
lea
mov
sbbb
sti
cmpb
cwtl
leave
int
mov
scas
xor
pop
rcrb
leave
mov
fisubrs
scas
jne
data16
add
dec
mov
mov
pop
sub
inc
push
sub
in
mov
fisttpl
mov
mov
xor
or
adc
or
mov
sahf
sbb
scas
jmp
xchg
push
movsl
jno
push
or
jnp
std
add
mov
loopne
icebp
jbe
and
sub
jno
or
sbb
adc
push
add
adc
or
add
sarb
or
aas
clc
fdivs
pop
xor
xor
rorl
stos
ret
int3
test
pop
adc
pop
or
mov
popf
push
imul
div
movsl
push
lea
and
jp
inc
cmp
push
mov
scas
das
mov
inc
mov
ljmp
into
sbbb
lret
mov
popf
mov
pop
rclb
lahf
xorb
mov
mov
lds
lea
aas
mov
clc
jmp
lock
or
adc
cld
std
aad
aam
mov
lret
popa
fsts
sbb
jle
insl
aas
jbe
or
je
mov
push
fmull
loopne
xchg
mov
loopne
lcall
cmp
je
mov
sub
or
pop
pop
popa
es
nop
sub
push
push
xor
cmpsb
push
inc
imul
repnz
dec
cli
sub
pop
cmp
sar
sbb
mov
inc
mov
arpl
dec
jo
popa
sbb
ror
cmp
mov
sahf
jp
into
pop
push
sub
es
inc
cmc
or
hlt
sbb
mov
loop
inc
aas
mov
popl
add
push
mov
add
lahf
lods
dec
and
cmp
adc
scas
mov
xor
icebp
mov
loop
jne
les
repnz
xchg
sub
or
ret
insb
pop
inc
push
push
or
jb
insb
cltd
call
in
push
rclb
aam
jle
rcr
mov
imul
xor
rclb
jae
pop
mov
and
idivb
xchg
jbe
int
int
cld
or
mov
inc
clc
loope
pop
push
dec
ss
mov
fistl
repnz
sub
adc
sub
fmul
xchg
mov
clc
loop
fwait
add
or
or
lods
mov
lods
in
and
jns
data16
push
mov
notl
jge
or
lret
mov
add
jno
int
mov
hlt
sbb
lcall
aaa
add
pop
test
sbb
dec
sti
addl
inc
clc
call
or
dec
or
xorl
dec
jbe
cmp
push
and
cmp
int
sbb
cmp
push
add
sub
popf
call
cli
or
pop
push
inc
roll
cmp
cmp
lahf
je
dec
jns
mov
mov
sub
add
cmc
data16
scas
lea
mov
push
shl
ja
sahf
inc
or
mov
lea
cs
stc
mov
push
sti
dec
xor
fstpl
sbb
dec
adc
mov
xor
add
aas
sbb
push
pop
sbb
xlat
adc
sub
xor
lds
or
sbb
or
inc
faddl
cmp
push
aad
and
sub
push
lock
je
mov
xchg
test
test
lahf
lods
xchg
mov
dec
add
lods
push
das
lcall
jnp
mov
push
out
or
or
out
dec
adc
decl
aam
sub
adcl
icebp
mov
fwait
mov
dec
fnstcw
or
fnstcw
xchg
cmp
ds
insb
and
adc
inc
je
shll
push
lds
in
repnz
sbb
push
jae
iret
and
testb
movsbl
push
sbb
mov
mov
dec
push
dec
inc
or
fisubs
ljmp
mov
aad
outsb
dec
add
and
movsb
jo
out
mov
call
aas
ja
or
push
and
xchg
pop
push
repnz
call
xchg
cwtl
or
pushw
movsb
xchg
mov
adc
xor
movsb
adc
imul
mov
sar
push
inc
add
mov
inc
dec
mov
sub
rcr
or
push
pop
push
and
repz
fimuls
adc
pop
lods
jecxz
decl
jle
mov
movsb
stos
pop
leave
in
sub
jge
push
call
jno
mov
lea
xor
jnp
push
push
cli
sbb
add
xchg
sub
cmp
sub
cmpsl
jo
adc
xor
ljmp
popa
rcrb
sub
sbb
xor
les
fcoms
cmpsb
outsb
std
push
cmp
stc
sub
cwtl
xchg
stos
sbb
mov
jmp
scas
sbb
cwtl
aas
adc
cmpl
jecxz
jp
xor
aaa
or
jns
dec
ss
sbb
ss
push
jnp
inc
and
lock
mov
xor
xor
push
out
lock
adcb
loop
test
pop
clc
enter
cmp
cld
jnp,pt
or
sub
daa
add
orb
push
sbb
adc
mov
test
sub
stos
inc
adc
pop
lock
hlt
xor
inc
cmp
icebp
cld
jmp
or
imul
mov
lahf
inc
clc
add
sub
push
jmp
and
jmp
dec
icebp
mov
pop
gs
cmc
mov
fwait
mov
nop
sti
inc
pop
sbb
ret
or
and
mov
in
mov
aad
xchg
dec
test
shl
negl
int3
mov
dec
push
adc
in
jns
or
mov
stc
cmp
add
pusha
sbb
and
lret
push
push
dec
jp
pop
jae
ret
push
pop
adc
dec
xor
inc
sti
je
aad
sbb
cmp
test
xor
inc
pop
add
das
or
push
xchg
xor
push
aam
scas
pop
enter
decl
sbb
jge
inc
fdivrl
loope
mov
adc
pop
add
imul
test
cld
or
adc
push
push
cmp
mov
adc
xchg
loope
hlt
adc
enter
add
cmc
inc
aad
ret
test
js
lea
scas
push
mov
dec
add
xchg
popf
sub
add
and
adc
mov
adc
sub
dec
dec
xchg
aaa
or
dec
push
xor
int
xchg
clc
sub
push
cmpsb
pop
sti
or
inc
jl
cmp
outsl
jne
movsb
push
sbb
jmp
out
stc
repnz
adc
adcl
lret
inc
lcall
js
data16
rcrb
mov
mov
cmp
sub
xor
or
jmp
out
adc
xchg
push
push
mov
or
call
ds
push
adc
roll
jnp
push
add
jg
cmp
xor
xor
clc
sbb
or
or
das
add
xor
add
outsl
mov
call
sbb
jbe
xchg
xchg
pusha
or
shlb
add
ja
xchg
xor
shlb
mov
inc
dec
jp
push
int
mov
por
fnstcw
mov
push
sbb
aaa
xor
stc
mov
cmp
adc
fistpll
test
in
xchg
sbb
mov
adc
fwait
push
loope
lods
je
cwtl
dec
sbb
imul
into
xchg
bound
push
jecxz
cld
push
and
mov
jmp
fs
pop
xchg
outsl
xor
and
mov
push
push
shl
dec
shll
add
push
sub
loop
fldcw
mov
mov
adc
inc
push
stos
xchg
js
cli
add
ret
sub
mov
rorl
push
js
cld
out
or
xchg
repnz
shll
xchg
je
data16
arpl
mov
cwtl
xor
imull
into
in
xchg
cmpsl
stc
repz
stos
shlb
cmp
mov
int
out
scas
mov
xchg
adc
add
mov
je
dec
inc
dec
inc
clc
jmp
insb
jg
fidivl
sub
daa
test
xchg
adc
pushf
or
mov
in
jnp,pn
push
call
or
mov
inc
out
push
cmp
popa
fistl
push
clc
dec
or
cltd
lock
into
and
das
lret
fldcw
cltd
test
stos
lcall
fwait
pop
sbb
and
xchg
add
out
dec
jge
adc
cmp
jmp
cmp
jecxz
ret
cmp
lock
andb
out
cli
sub
into
fs
not
les
xor
push
cmp
add
xor
int3
rcrl
fildl
dec
mov
imul
sub
sbb
push
add
and
adc
cmpsl
cmc
ljmp
insb
cmp
mov
gs
adc
insl
and
sbb
lea
shll
cmovb
es
mov
inc
inc
icebp
mov
scas
lds
fsubs
jo
pop
jecxz
cld
jns
mov
test
sahf
or
mov
pop
out
cmp
fdivrl
xor
in
inc
sub
push
xor
xor
mov
mov
pop
dec
push
mov
or
das
push
jb,pn
sti
int
jbe
ja
push
sub
bound
dec
lds
cmp
repnz
mov
rcrl
inc
shlb
and
sbb
sbb
out
jge
push
jge
jmp
adc
push
add
mov
sarl
sub
sbb
sbb
lds
jns
mov
lea
pop
fwait
add
mov
in
sbb
sub
je
xchg
cmovle
adc
cmpsb
and
inc
sub
scas
and
cmp
inc
mov
fcmovnb
mov
sub
or
aam
push
pop
sub
clc
xor
push
or
fldt
xchg
or
sbb
inc
mov
dec
dec
add
inc
mov
sub
xchg
or
push
es
dec
call
or
loope
and
push
cld
les
adc
into
and
in
call
dec
dec
cmp
int
inc
xchg
pop
loop
div
jno
push
rorb
cmp
push
inc
cld
inc
cmp
adc
adc
imulb
ret
adc
cwtl
xchg
dec
lock
adc
add
mov
jae
and
and
sbb
out
cmpsb
mov
cmpsb
sarb
call
incl
std
cmp
mov
xor
jb
icebp
push
xchg
mov
and
xor
repnz
movsl
jp
addr16
inc
jle
add
sub
pop
das
xor
jne
push
lret
sbb
push
movsl
adc
push
movsl
mov
and
add
mov
cmpsb
sub
inc
pop
xchg
pop
xor
add
sub
or
mov
push
mov
push
scas
add
add
aaa
push
or
and
shlb
or
sbb
dec
mov
int3
in
dec
int3
push
mov
xchg
jmp
xor
fxch
jae
push
adc
sbb
les
add
movsl
mov
cmp
mov
mov
or
std
lahf
fcoms
mov
mov
mov
inc
xchg
into
mov
adc
aam
test
cmp
jle
movsl
jnp
dec
jb
push
in
hlt
out
fisttpl
sbb
call
sub
push
leave
jne
adc
cmc
adc
xchg
movsl
sbb
adc
bound
inc
inc
cli
fisubrl
loope
sub
adc
and
test
rclb
xor
movsb
movnti
aam
test
mov
jbe
les
pop
out
dec
push
movsl
popa
shlw
xlat
movsl
jo
cmp
adc
icebp
mov
pusha
lods
inc
insl
or
fldcw
xchg
out
es
or
jae
mov
paddsb
roll
sbb
loope
inc
je
jns
adc
fwait
scas
adc
xor
xor
insl
jne
add
call
mov
add
adc
xchg
mov
cmp
dec
jp
dec
inc
sub
addr16
mov
icebp
pop
mov
cmp
pop
adc
or
cmp
das
jno
stos
or
arpl
or
inc
aaa
jo,pn
inc
rorl
jmp
mov
sbb
jecxz
ret
sbb
bound
push
adc
push
pop
ret
cmp
mov
adcb
insl
testb
mov
scas
ds
addb
dec
idivb
push
adc
fnstsw
xchg
shlb
or
pushf
push
loope
shll
push
mov
jmp
push
pop
cld
cs
mov
scas
adc
lds
mov
xlat
cmpl
inc
lret
rcll
out
mov
adc
add
adc
cmp
mov
call
xor
inc
es
aas
dec
repnz
sub
cs
popl
mov
jecxz,pt
mov
test
mov
and
mov
bound
cmp
mov
sub
outsb
aam
add
sar
scas
pop
jecxz
addl
pushf
test
icebp
push
push
sbb
cltd
insl
jbe
xor
sub
fs
stos
sti
sbb
xchg
rolb
sti
movsb
adc
jge
mov
je
push
dec
adcl
out
sbb
fcomp
xchg
mov
sti
cmp
sbb
shrb
pop
testl
ss
pop
push
cld
and
cmp
jnp
es
xor
pop
pop
add
mov
pop
in
xchg
shrb
repnz
mov
mov
test
fdiv
adc
inc
mov
imul
xchg
and
mov
gs
popf
jg
jmp
push
es
push
sub
lret
outsl
fs
inc
xor
push
ret
push
or
dec
shrl
inc
push
fsubr
es
push
add
pop
stos
adc
pop
lods
loop
lret
push
lock
xchg
mov
hlt
in
test
push
js
fwait
in
vmovq
dec
mov
or
testl
or
mov
jb
cmpl
ror
mov
jp
dec
cmp
iret
shlb
stc
jbe
and
subl
in
sbb
mov
rcl
loopne
add
pop
lea
mov
add
xchg
repz
add
mov
cmpsl
inc
mov
jae
pop
mov
and
stc
sbb
pop
push
insl
rorb
and
imul
pop
testb
sub
es
out
loope
scas
xor
das
cmc
out
movsb
mov
cmp
add
xchg
xchg
imul
enter
adc
les
mov
lahf
jmp
dec
or
je
hlt
adc
ret
rclb
cmp
mov
out
pop
repnz
dec
pusha
dec
int
cltd
scas
lods
inc
mov
push
xor
je
inc
ficoms
shlb
fs
pusha
and
xchg
or
sbb
xchg
fisubrl
ja
sub
xor
sbb
xor
sub
mov
jge
cld
add
push
push
jecxz
jle
xchg
les
mov
jl
mov
and
pop
loope
adc
enter
inc
cmp
out
aaa
lods
std
cli
ret
xor
push
test
jle
add
cmp
pop
jge
inc
mov
insl
mov
jae
cmp
pop
les
xchg
insb
xchg
mov
mov
sbb
sti
popf
inc
mov
sbb
cmp
xor
pop
stc
push
pop
pop
xchg
xor
mov
or
pop
lret
pop
shr
or
sbb
lretw
or
mov
xor
mov
add
fstl
push
mov
mov
popf
or
and
inc
and
dec
adc
pop
mov
shr
sub
neg
and
testl
sbb
scas
add
imul
nop
lea
mov
mov
cmp
repz
shlb
repz
test
int
shll
push
call
ss
mov
pop
stos
loope
pop
cmp
inc
xchg
call
add
mov
test
mov
negl
mov
in
push
std
and
or
notb
outsl
or
push
xchg
mov
popa
repz
je
pop
push
ret
jl
scas
pop
leave
incb
sbb
sbb
xchg
push
xchg
sub
xchg
mov
push
push
xor
leave
xor
icebp
sbbl
fwait
insb
add
mov
fsubs
aam
popf
fimuls
push
ja
push
jp
mov
or
mov
pop
fisttps
stos
clc
xor
divb
scas
fsubrs
sub
gs
adc
mov
xchg
jne
ror
mov
sbb
mov
test
cwtl
enter
movntq
pushf
data16
lods
jb
ds
aaa
fld1
cltd
out
mov
push
ljmp
ds
sbb
pop
add
push
jg
sub
push
jo
xchg
inc
pop
bound
cmpsl
push
aam
push
add
lock
jl
nop
push
inc
mov
mov
test
adc
inc
xchg
insb
add
inc
insl
sbb
fadds
xor
das
shlb
inc
out
adc
sbb
ret
mov
sbb
loopne,pt
inc
cmp
stos
jbe
xor
rorb
testb
ss
popf
divb
push
push
jbe
mov
lret
inc
arpl
add
sub
sbb
mov
xchg
shrl
xchg
sti
mov
lahf
pushl
cmpsb
jecxz
imull
fsubs
mov
push
cmp
xor
movsb
or
leave
sarb
pop
mov
push
in
call
int3
cmp
jle
out
pop
mov
cmp
mov
in
add
inc
adc
es
xor
outsb
xchg
stos
jmp
outsl
xor
call
mov
pop
adc
or
xor
lods
hlt
inc
dec
mov
sbb
dec
jle
dec
sub
mov
push
add
xor
ja
jle
sbb
dec
pop
rclb
sarb
adc
shlb
add
and
push
int3
lock
push
test
sbb
jge
or
cmp
jecxz
push
loop
and
inc
dec
and
repnz
in
add
icebp
fcoml
repnz
icebp
mov
and
jp
sbbl
bound
mov
sub
call
test
mov
cmp
filds
das
push
ss
mov
insl
mov
je
push
test
gs
inc
mov
xchg
fsts
popf
pop
ret
and
in
pop
fdiv
push
into
es
test
mov
mov
fnop
jb
or
push
sub
xchg
jo
add
or
push
popa
hlt
cld
xchg
inc
repnz
dec
fs
cmc
call
cmp
push
movsl
mov
out
push
xchg
jl
dec
or
adc
or
mov
adc
sub
push
adc
mov
in
mov
push
xchg
mov
xchg
jnp
and
ljmp
ficomps
adc
xchg
jp
ds
mov
and
or
jecxz
call
das
mov
gs
sub
ss
or
and
add
dec
sbb
pmuludq
mov
rcrl
std
inc
lds
in
push
add
adc
push
popa
inc
mov
pushf
jl
cmpb
cmp
mov
cld
lods
or
decb
sti
or
add
and
hlt
repnz
lods
pop
add
bound
rorl
je
sbb
test
inc
stos
pop
mov
pop
cmp
cmp
push
pushf
sbbl
mov
xor
jns
and
sbb
movsl
sub
in
and
inc
push
or
fisubl
bound
enter
repz
add
stc
cmp
or
jae
imul
cwtl
bnd
in
test
xlat
jnp
and
lea
cmp
mov
iret
inc
or
fs
xor
add
mov
icebp
pop
or
pop
cmp
addr16
lock
adc
mov
mov
inc
jg
daa
sub
xor
rcrl
mov
push
sbb
lds
adc
je
iret
xor
jmp
or
sub
mov
or
outsl
add
xor
add
fldenv
push
mov
cmp
or
jle
jmp
dec
push
or
arpl
daa
dec
xor
neg
and
and
pushf
push
pop
mov
hlt
dec
inc
or
xchg
or
adc
cmpsb
and
cmp
jp
cmp
jp
fisttpl
mov
sbb
adc
pop
mov
movsl
test
fnstenv
xor
outsl
xchg
cmpsb
cs
push
sbb
sti
or
fldl
lcall
xor
out
insb
ds
pop
icebp
sbb
bound
je
sub
cmpsb
xchg
cmp
pop
cmp
sbb
cmpsb
mov
stc
lret
int3
repz
jno
ja
nop
aas
call
fs
mov
mov
sbb
jl
push
cltd
ja
push
push
mov
sbb
xchg
mov
add
or
enter
xchg
xsha256
cmpsb
push
inc
xor
popf
xchg
rorb
iret
xchg
mov
or
or
jge
aad
cmp
xlat
or
ljmp
cld
adc
and
dec
test
lret
or
popf
cmpsl
push
mul
push
cmp
icebp
lea
xchg
and
stos
repnz
jno
mov
out
or
jns
sub
xor
or
es
shll
or
popa
cld
lds
adc
and
dec
loopne
iret
cmp
sarl
mov
xchg
mov
mov
lods
das
adc
mov
push
cmp
mov
and
inc
out
mov
mov
lods
jp
mov
cli
cmc
sub
test
pop
inc
packssdw
mov
cmp
inc
push
les
adc
sub
repnz
pusha
fabs
sub
adc
sub
setl
and
fmull
jno
sub
sbbl
in
imul
and
pop
fs
xchg
xchg
cli
and
call
sub
xchg
jmp
loope
ss
pop
icebp
push
xchg
mov
dec
push
or
sub
inc
adc
xorl
cli
inc
data16
fsubs
or
inc
repnz
sub
mov
cmc
stos
push
and
dec
adc
inc
lahf
dec
pop
and
cmc
jmp
imul
dec
xchg
add
mov
xchg
cli
cmp
test
ljmp
xchg
enter
sub
les
mov
in
xchg
shrl
mov
mov
dec
mov
adc
insb
enter
xchg
inc
call
es
inc
mov
dec
xor
xor
out
jne
pop
in
test
xor
or
es
push
mov
lea
daa
call
pop
scas
addb
xchg
push
daa
loope
out
imul
idivb
lea
sbb
dec
lcall
out
mov
in
add
mov
inc
test
in
xor
test
mov
insb
aam
dec
rol
rclb
jbe
push
aas
data16
arpl
in
cmp
pusha
and
std
sub
mov
icebp
dec
vmread
dec
inc
leave
adc
pop
jp
jne
or
pusha
mov
shlb
call
notb
push
lahf
and
jecxz
dec
rcll
mov
jae
mov
jp
into
dec
mov
repnz
ret
imul
or
push
out
dec
sub
dec
outsl
mov
mov
loop
fnstenv
inc
inc
cmpsb
push
dec
xor
or
pop
leave
inc
clc
pusha
push
lods
loop
out
pop
subb
sub
push
scas
icebp
xor
dec
pop
repz
cld
and
dec
lock
pushf
rolb
scas
mov
cmp
and
cmpsb
icebp
xchg
pop
scas
jnp
add
inc
in
ja
push
mov
and
push
fisttpll
in
in
cmp
data16
inc
icebp
es
adc
jno
push
les
mov
or
cwtl
subl
test
push
jbe
data16
and
cmpsl
xor
dec
sub
add
lret
cmp
mov
add
push
mov
mov
arpl
aad
xor
sarl
push
popa
xchg
and
lods
sbb
jecxz
pop
or
sub
aas
pop
mov
push
xchg
push
mov
push
inc
inc
dec
lret
adc
pop
pop
enter
mov
sti
flds
btc
inc
in
add
ja
inc
loopne
das
sub
ror
cmp
jns
clc
pop
fldcw
push
stos
mov
sbb
jmp
mov
cmpsb
imul
ds
sub
add
and
stos
movsb
mov
and
mov
jbe
xchg
mov
add
mov
or
sbb
call
fdivrl
inc
mov
add
pop
pusha
jns
js
sub
adc
or
xor
adc
adc
movsl
sbb
push
or
arpl
push
mov
and
adc
dec
sbb
movb
sub
mov
testb
lods
outsb
push
imull
xchg
call
or
and
cli
clc
add
mov
adc
sbb
add
fs
test
jp
or
fldt
cld
xchg
pop
jno
mov
fs
mov
push
cmp
or
add
adc
divb
pushf
loope
add
adc
out
cmp
push
xor
fst
lcall
and
fnstsw
ja
mov
jmp
xor
fbld
mov
jecxz
mov
pop
idivl
or
xor
jno
xor
jmp
adc
cmpsl
pop
xorl
sbb
es
shrb
pop
mov
and
push
cmp
test
xchg
iret
testb
cmpl
pop
xor
and
call
xor
inc
popf
push
sarb
jns
xchg
adc
cld
into
push
nop
ficompl
adc
sbb
pop
adc
lret
xchg
outsb
xchg
adc
es
adc
and
cmpsb
add
aaa
call
sbb
xor
add
pop
mov
jae
push
push
sbb
pop
add
test
mov
sarb
call
mov
cmp
dec
fwait
sbb
mov
call
pushf
push
cmp
in
xor
ss
lock
outsl
adc
push
push
mov
cmp
xor
fcomps
call
ret
pop
insb
push
and
push
sbb
dec
test
ret
mov
lret
add
jmp
loop
mov
adc
cld
push
pop
push
push
xchg
cmp
push
inc
lcall
shlb
sub
cli
or
jmp
sub
pop
iret
fisubrs
cwtl
or
popf
int
xchg
push
cwtl
inc
fldenv
ja
and
add
xchg
ja
sarl
or
cld
icebp
inc
outsb
popa
jecxz
and
push
mov
add
xchg
lahf
je
mov
bound
cmp
jge
insb
dec
xchg
and
sbb
pop
cmp
pop
call
ret
sub
adc
or
jge
mov
pop
mov
mov
push
xchg
xor
xlat
sub
xchg
es
popa
add
xchg
lret
out
xchg
lea
jge
pop
fidivrs
insb
aad
push
dec
cmp
xchg
xchg
aad
clc
sti
add
jp
sub
xor
mov
sbb
fiadds
dec
xchg
int
cmp
mov
popa
pop
push
imul
pop
adc
and
add
mov
jo
push
dec
std
movsb
aam
int3
test
ss
mov
xchg
les
adcb
into
cmp
lcall
mov
mov
addr16
pop
sub
test
mov
jg
xlat
inc
push
mov
cmp
cmp
enter
cld
out
jns
movsb
sbb
mov
mov
mov
mov
xor
jne
push
lea
out
adcb
or
fsts
test
cmc
adc
or
and
and
mov
jge
or
mov
mov
adc
andb
xor
sbb
add
mov
mov
pop
in
jle
cltd
xorb
adc
and
sbb
mov
dec
in
push
imul
mov
adc
adc
add
movsl
sbb
mov
mov
jb
jb
out
jl
cld
aam
and
pop
aad
push
in
xchg
or
outsl
cmc
adc
push
icebp
es
xor
pop
and
pushf
fisttpl
cwtl
ja
and
sahf
push
pop
ja
push
mov
push
int3
dec
dec
loop
je
jecxz
sbb
sub
mov
push
mov
movsb
outsl
mov
jg
in
int3
in
sbb
push
sbb
mov
inc
mov
adc
xchg
inc
mov
call
xchg
stos
ja
add
jl
xor
adc
adc
adc
adc
test
mov
xchg
lock
inc
cmp
adc
push
sbb
fwait
xchg
sub
aas
lock
jp
mov
xor
jo
jns
sbb
cwtl
xchg
xchg
jl
mov
cli
sbb
mov
fcoml
cli
adc
or
lods
or
adc
lods
mov
adc
cli
pushf
xor
mov
sub
sbb
inc
sbb
sbb
sahf
daa
inc
outsb
movsb
sbb
sbb
adc
mov
mov
or
and
xchg
jae
or
xor
andb
movsb
mov
shlb
sub
add
inc
cli
adc
xchg
add
test
or
adc
pop
or
mov
dec
xchg
inc
mov
push
pop
cmp
mov
jge
sarl
sbb
inc
sbb
repnz
xchg
mov
ds
mov
fwait
mov
movsl
repz
shl
movsb
adc
pop
mov
pop
push
fwait
sub
dec
ja
lock
mov
pop
xor
mov
dec
aad
cmpsb
adc
sbb
dec
push
insb
in
mov
jno
dec
mov
push
mov
data16
sbb
push
mov
test
adc
sbb
add
xchg
fs
xor
jo
data16
or
jo
popf
xchg
sarb
or
lahf
in
lods
cmp
call
mov
es
enter
and
mov
addl
pop
xchg
add
daa
sti
mov
and
jg
xor
sbb
dec
dec
js
mov
cmc
xor
leave
xor
cmp
into
je
adc
push
sbb
ss
es
out
and
add
pop
cmp
ret
inc
sbb
mov
jle
push
mov
sbb
pop
fidivl
aas
mov
mov
push
pop
or
daa
sbb
add
xor
ret
push
add
lock
and
mov
lret
sahf
xor
pop
out
je
bound
xor
mov
cmp
jge
enter
mov
pop
hlt
fisubrl
add
push
cltd
inc
sub
jo
cmp
ds
jbe
xor
pusha
fdivrl
pop
add
aaa
mov
jmp
fdivs
jge
mov
lea
lret
push
inc
adc
lds
dec
stc
divb
hlt
test
mov
mov
pop
sarb
xchg
push
pop
xchg
fsubl
into
mov
or
sbb
stos
adc
add
sahf
mov
outsl
ljmp
lcallw
pop
rcrb
insl
in
arpl
popa
add
mov
out
cmp
mov
dec
sub
lods
andb
pop
lahf
loope
push
and
insb
into
call
ljmp
and
lcall
aad
repz
xchg
jb
sbb
or
daa
mov
mov
and
add
sub
inc
and
xor
ror
popa
dec
pop
inc
jl
lock
daa
xchg
xor
je
jnp
in
push
ljmp
pop
and
pop
mov
dec
aam
sbb
pushf
mov
mov
in
sub
jl
loopne
lret
jbe
aad
and
loopne
sbb
add
jmp
imul
mov
adc
and
push
daa
cmp
adc
nop
pop
loopne
shll
and
pop
push
mov
in
fisttpll
add
dec
int
mov
popaw
lcall
cld
imul
dec
and
and
leave
cmpsb
gs
cld
outsl
or
inc
inc
int
movsl
popa
jb
mov
sub
sub
sbb
dec
pop
mov
inc
and
mov
add
push
cmp
jns
mov
xchg
push
cmp
xor
sub
vpextrw
lds
je
scas
dec
push
dec
inc
dec
jo
scas
push
push
mov
pop
mov
lea
jns
jae
jmp
inc
mov
pop
rclb
stos
fldcw
adc
dec
aas
call
inc
sbb
sbb
jecxz
les
incl
call
pushf
jns
insl
mov
jg
es
sbb
sbb
adc
add
mov
push
mov
test
pop
sahf
outsb
cmp
cmp
enter
push
aad
xchg
mov
mov
xchg
mov
adc
mov
adc
or
jle
adc
ss
cmp
notrack
add
jmp
jo
ret
sub
pop
jo
adc
jbe
imul
js
aaa
mulps
pop
push
enter
in
jle
jno
xchg
cmc
mov
cmp
sbb
fs
push
sub
js
sub
cmp
sbb
adc
fmuls
jb
push
hlt
or
mov
lods
orb
fwait
sub
aas
pop
jl
inc
mov
je
jl
stc
data16
fistps
or
adc
mov
dec
in
adc
das
mov
shr
xor
cmp
push
insb
xor
xorl
and
mov
or
out
aas
jns,pt
xor
or
mov
push
push
mov
xor
loope
dec
in
mov
xlat
loope
arpl
inc
pop
and
pop
mov
int3
add
les
shr
nop
push
xchg
std
push
mov
pop
cmpsl
add
jmp
cmp
test
mov
in
repnz
mov
ss
or
xor
shlb
in
lods
ror
mov
in
ja
xchg
push
jnp
iret
test
ret
stos
repz
insb
mov
mov
sbb
scas
in
mov
cli
inc
add
in
sbb
push
mov
inc
ss
ss
sub
xor
fsubs
dec
cli
pusha
adc
jg
push
dec
cmp
or
repnz
sbb
push
fs
mov
add
push
sub
movlps
fsubrl
daa
movsl
fiaddl
repnz
mov
int3
sbb
leave
jnp
pop
inc
je
cmp
hlt
pop
inc
sbb
push
loope
shll
movsl
mov
inc
scas
xor
out
mov
and
inc
aad
mov
jno
sub
orl
adc
shll
mov
aas
sbb
ss
movsb
cmp
out
dec
aaa
and
scas
flds
xor
iret
and
add
setbe
xchg
std
mov
push
mov
aam
into
add
call
aad
mov
dec
outsl
ja
xlat
and
shrl
testl
loope
push
xchg
outsl
enter
sub
jmp
shrb
pop
mov
jbe
and
or
jle
push
divl
call
ret
aad
pop
mov
in
test
mov
out
push
mov
notl
rolb
mov
pop
pop
dec
or
sbb
ret
lea
sbb
push
jl
inc
rcrb
in
movzwl
add
sub
mov
adcb
jne
inc
or
xchg
cmc
inc
enter
mov
mov
cld
mov
or
repz
push
fcomps
mov
cmp
test
mov
dec
jmp
push
sbb
cmpsl
jae
nop
or
test
stos
xchg
imul
loopne
pop
adc
pop
and
call
adc
cmp
adc
xchg
push
dec
lock
xchg
mov
mov
and
xchg
mov
js
cmp
sti
push
les
arpl
lods
add
xor
mov
les
adc
adc
mov
xchg
inc
cmp
dec
in
jae
dec
pop
test
push
stc
xchg
and
jno
call
pop
add
push
mov
cmp
push
test
cwtl
xor
mov
adc
mov
ds
adc
out
nop
mov
sub
testb
dec
dec
lret
and
dec
test
xor
and
mov
mov
divl
mov
xchg
mov
jecxz
or
mov
ret
scas
lahf
sahf
dec
movsb
jecxz
jge
sbb
popf
sub
cmp
push
or
fldcw
push
dec
or
mov
std
mov
sub
mov
or
push
cmc
fldcw
movswl
and
and
cli
dec
adc
lea
mov
mov
pop
and
lahf
push
jg
push
jb
inc
inc
dec
adc
dec
jp
mov
push
aaa
adc
rcl
lock
sub
mov
fidivs
andb
fdiv
fldcw
fstpt
adc
and
or
jne
mov
imul
jp
sbb
lea
or
cmp
sti
lods
pop
and
cwtl
bound
mov
mov
movsl
push
push
inc
mov
xchg
imul
mov
mov
pop
lret
scas
mov
push
and
clc
sub
sahf
mov
and
daa
icebp
mov
inc
and
popa
jecxz
aad
fists
xchg
or
shr
adc
sub
jnp
fmuls
dec
ds
and
cmp
pop
ja
add
rorl
adc
inc
xchg
xor
inc
inc
arpl
sub
aam
xchg
test
shlb
mov
mov
inc
cmp
mov
adc
lods
jb
and
pop
in
xchg
xor
divl
push
inc
xchg
adcl
fldcw
icebp
dec
jno
ds
mov
and
xor
nop
incb
mov
or
jbe
sub
or
nop
shlb
mov
inc
daa
mov
imul
mov
push
pusha
mov
jle
ret
add
pop
jo
dec
orl
movsb
pushf
or
lret
les
mov
or
imul
test
daa
lds
pop
test
push
sti
or
lods
mov
pop
adc
push
xor
push
mov
outsb
add
cmp
lret
ss
clc
test
or
imulb
and
xchg
xor
pop
mov
or
das
xchg
sbb
ret
js
jmp
sahf
std
cmpsb
and
nop
stos
ret
out
push
push
aas
rol
cmc
lret
mov
xchg
fidivl
cmp
push
incl
pop
mov
movsl
movsl
pop
popa
lret
and
enter
orl
cmp
arpl
fs
test
mov
loopne
fcomps
jl
mov
pop
aas
test
into
call
stc
push
fldenv
pop
mov
shll
mov
adc
adc
mov
dec
xchg
xor
dec
jne
push
adc
add
pop
push
or
in
sbb
mov
mov
mov
das
dec
sarl
pop
testl
push
sub
orl
pop
es
add
test
mov
repz
inc
hlt
js
jns
lea
add
mov
loope
and
add
dec
loopne
cmp
sbb
xor
das
adc
cmp
lret
out
pop
stc
adc
pop
movb
cmp
push
or
insl
mov
testl
xor
into
push
imul
pop
mov
jns
es
bound
sbb
pop
cmp
dec
rorl
arpl
xor
xor
repz
mov
sub
xlat
popa
add
cltd
pop
out
cld
imul
push
mov
ret
push
and
fs
inc
dec
xor
adc
cvttps2pi
adc
sbb
js
sahf
repnz
xor
cli
popf
pop
incb
mov
scas
adc
sbb
sbb
push
je
arpl
cmp
lods
pop
push
mov
push
bound
and
pop
daa
and
out
scas
and
mov
mov
notl
pop
sbb
add
clc
movsl
test
jae
sahf
shll
aad
push
or
js
call
dec
jle
or
in
jae
xor
xchg
jecxz
adc
add
mov
orl
xchg
jbe
ffree
clc
outsl
scas
imul
push
pop
xchg
aad
dec
pop
dec
sub
mov
dec
dec
or
adcb
jp
inc
mov
push
call
in
dec
movsl
ljmp
jl
cltd
fldl
mov
cmp
sub
mov
mov
or
sbb
mov
add
mov
mov
jno
aaa
pop
add
sub
xor
mov
xor
out
and
mov
popa
jnp
arpl
mov
rclb
fcomps
rcrl
shrl
shll
jle
or
aaa
jg
push
sbb
sub
into
sbbl
fidivrl
pusha
push
or
cmp
inc
add
sbb
sub
xor
inc
out
sti
dec
call
lret
xchg
mov
xor
pop
mov
sub
add
cli
call
sbb
jnp
adc
jp
mov
mov
faddl
shrd
mov
mov
mov
aas
shrl
lret
push
pop
rorb
iret
xor
imul
mov
jmp
lcall
jae
stc
and
inc
mov
adc
adcl
dec
adc
pop
mov
jnp
cmpsb
jne
xchg
jno
negb
outsl
je
and
cmpsb
mov
insb
adc
and
shll
shlb
lret
adc
aaa
test
push
sbb
and
das
lcall
cmc
jb
mov
lds
mov
inc
in
mov
je
dec
or
adc
jmp
ret
clc
mov
in
fdivl
sbb
movsl
out
loope
pusha
mov
call
aaa
jl
pushf
orl
mov
das
int3
cmp
mov
pop
dec
push
push
mov
mov
test
cmpsb
fdivl
push
testb
ds
scas
gs
inc
sahf
pop
in
cmp
mov
adc
lcall
aas
jmp
enter
sub
bound
and
or
mov
and
adc
xchg
push
in
mov
fsts
mov
inc
mov
fidivs
bound
loop
cmc
fwait
fwait
leave
xlat
add
outsw
lock
in
or
xor
lcall
xchg
xorl
addr16
inc
adc
cmc
dec
std
aam
je
clc
sub
les
sub
or
sub
xor
jbe
mov
inc
in
mov
mov
mov
mov
adc
add
icebp
hlt
mov
jnp
out
and
addr16
negl
mov
adc
or
in
addr16
push
call
push
add
cmp
dec
and
add
dec
test
cmc
aam
or
jp
dec
or
pop
sti
inc
cld
loope
cmp
xchg
test
cmp
dec
das
xchg
adc
nop
sbb
loop
fsubp
and
jmp
int3
adc
adc
adc
sbb
js
xchg
jecxz
and
push
jbe
jmp
mov
sub
pop
jbe
mov
inc
xor
pop
adc
test
subl
cltd
xor
add
and
inc
and
sub
call
ds
cmp
div
sub
pop
or
int
or
sbb
sar
sbb
or
out
adc
pop
cmp
movsl
cs
cmc
fdiv
adc
mov
ds
or
inc
inc
mov
xchg
mov
sub
xchg
cmp
call
lods
mov
adc
push
das
mov
js
nop
movsl
outsl
enter
xor
rolb
push
aaa
push
movl
xchg
jnp
and
popa
rclb
jns
cmp
hlt
adc
adc
push
inc
pop
lcall
mov
movsl
xor
mov
js
mov
clc
loope
aaa
adcb
cmp
and
movsl
addr16
mov
push
sti
or
push
pop
sub
cmp
std
fsubl
dec
in
sub
push
lods
adc
adc
cmc
pusha
gs
roll
sbb
pop
pop
dec
xchg
add
xor
pop
stos
mov
cmpb
dec
mov
adc
cs
popa
jbe
and
je
pop
cs
pushf
xor
push
shr
xor
and
movsl
cltd
fstps
mov
into
ljmp
ljmp
arpl
jge
xlat
stc
je
rorb
into
mov
daa
imul
and
cmp
call
cli
lods
fstl
inc
icebp
stos
inc
pop
fcmovne
jge
mov
dec
idivb
stc
adc
enter
lahf
pusha
stos
mov
lcall
jge
sub
nop
jne
call
test
loopne
ljmp
adcl
aas
insb
push
call
xchg
loope
jb
cmp
lcall
or
test
dec
fldenv
lock
mov
adc
sub
ret
insl
pop
sub
cld
nop
imul
jle
ljmp
sbb
xchg
cld
mov
xchg
jp
loop
dec
in
or
inc
loopne
cmpsl
imul
cmpsb
dec
movsl
fwait
pop
pop
pop
mov
cmpsb
cltd
test
or
push
test
add
dec
nop
popa
and
sub
mov
xor
ss
push
xor
push
pop
or
push
adc
mov
adc
add
mov
inc
and
inc
dec
popa
sub
or
shr
ret
mov
repnz
jp
cmpsb
adc
mov
clc
jno
lret
adc
adc
aam
and
stos
cmp
inc
popa
pusha
xchg
xor
xor
jmp
in
mov
sbb
add
cmc
sahf
adc
in
mov
shrb
cmp
cmp
or
sbb
sub
sub
aaa
leave
ret
sarl
call
mov
insl
into
inc
cwtl
lcall
fdivrs
push
mov
in
xchg
push
cmp
out
xchg
lods
sbb
cltd
subl
addl
lods
faddp
inc
mov
xor
aaa
xchg
shll
xchg
sub
xchg
jnp
jecxz
sub
push
dec
cmpsb
dec
jle
and
lds
add
popf
mov
xor
sbbb
sahf
sbb
daa
in
mov
xor
pushf
jp
cmpsb
sub
and
push
addr16
adc
js
adc
jnp
int3
or
stos
add
jecxz
mov
pop
out
ret
sub
scas
aad
arpl
pop
mov
xchg
loope
outsb
subb
nop
ss
sub
shll
sar
sbb
dec
ret
mov
pop
adc
xchg
cmp
les
nop
xor
dec
mov
jo
pop
aaa
and
repz
movsb
jecxz
mov
jns
pop
sbb
das
lahf
inc
dec
loopne
adc
mov
and
mov
outsl
je
or
stc
xor
popa
fsubr
mov
cs
xor
test
cmp
or
push
add
dec
mov
ja
stc
cmp
popa
fbld
push
loope
cmp
and
cld
movsl
add
cld
mov
pop
adc
into
pop
sbb
hlt
push
fs
data16
ss
out
mov
xchg
dec
jp
xor
add
dec
lock
mov
and
dec
xor
sbb
mov
lahf
mov
mov
icebp
pop
sub
in
sbb
mov
push
int
pop
push
mov
adcl
sbb
push
rcrl
mov
les
add
das
and
mov
jo
sbb
imul
jmp
pop
fs
mov
into
int
rorl
sahf
push
inc
loopne
cmp
pop
or
xor
pop
add
mov
xchg
das
sbb
mov
pop
and
sahf
mov
or
add
jecxz
pop
jns
sub
test
cltd
repz
xor
arpl
jnp
sub
mov
jns
mov
test
popfw
scas
xchg
sarb
out
loope
cli
mov
mov
push
push
jp
xchg
test
and
mov
xor
sahf
sub
or
and
lea
xor
sub
adc
cmp
scas
fsin
adc
int
mov
push
inc
mov
xchg
mov
adc
push
imul
add
push
shlb
xor
dec
nop
bswap
sbb
call
dec
pop
sbb
lahf
test
sbb
adc
loopne
cld
pop
lods
sbb
dec
xchg
ret
push
into
xor
shrl
push
ret
sub
jbe
and
inc
or
loopne
inc
inc
icebp
pusha
pop
std
dec
lahf
and
test
cmp
mov
push
das
insl
sarl
sbb
in
and
insl
test
and
cwtl
scas
push
lret
cmp
insb
sbb
scas
out
add
cmp
xor
sbbb
jg
lcall
jg
sahf
xchg
bound
sub
push
shll
loopne
loope
sub
adc
stc
cmc
and
sbb
rclb
sub
arpl
or
inc
pop
inc
cmp
add
and
inc
mov
cmp
or
icebp
inc
pop
xor
add
xor
ds
dec
mov
lods
jle
lahf
dec
and
shl
pusha
ljmp
push
push
sub
jmp
iret
xchg
or
and
scas
mov
xchg
cmpl
jns
and
sub
mov
sbb
add
in
cmp
sar
mov
adc
clc
and
iret
jecxz
pop
addr16
mov
or
and
fwait
inc
or
fldl
mov
mov
inc
mov
mov
test
cmp
insb
xor
aam
push
lds
fcomip
mov
sub
cmp
shlb
sub
sbb
and
popf
lods
mov
movsl
inc
jbe
mov
xchg
jl
mov
xor
push
add
cmp
mov
sbb
adc
jb
jecxz
inc
push
std
xor
xor
push
or
adc
add
clc
jo
dec
add
cwtl
xchg
insb
and
push
jnp
add
imul
sbb
test
and
xchg
ljmp
sarb
es
mov
adc
stos
adc
or
imul
andb
ljmp
inc
rcl
mov
xchg
push
push
mov
mov
and
fmull
xor
pop
popa
imul
imul
sbb
xchg
cmc
add
mov
add
jno
call
push
cmp
inc
or
and
ljmp
shrb
aaa
mov
dec
sub
add
mov
sti
inc
imul
es
pop
mov
pop
inc
insb
sbb
jmp
mov
lea
out
sbb
cmp
jo
ljmp
fildll
jbe
mov
or
sti
dec
aaa
ss
out
addr16
in
adc
adc
xor
loopne
mov
ficomps
jo
mov
cmp
cmp
adc
insb
mov
iret
mov
and
arpl
jne
push
xor
jecxz
insl
es
pop
or
aaa
int3
call
pop
mov
imul
xchg
push
mov
repz
and
insb
leave
hlt
out
adc
mov
enter
xor
dec
mov
jb
push
mov
push
xchg
pop
pop
dec
lcall
dec
pop
cmp
mov
shrl
movsl
xor
les
adc
dec
inc
movsl
jns
cmp
sub
sbb
dec
ss
test
dec
and
mov
out
fldcw
and
adc
xchg
out
hlt
bound
test
xchg
pop
lds
hlt
and
and
test
sub
cmpsl
sub
or
leave
dec
xor
stc
dec
jno
sti
or
mov
adc
and
sub
xchg
je
jp
movsb
sti
sbb
popf
xchg
pop
dec
insl
movsl
jmp
testb
dec
inc
fsubl
iret
xor
or
sub
lcall
sahf
jmp
mov
dec
adc
and
push
mov
mov
jle
psubw
pop
mov
cmc
inc
xor
push
test
sub
inc
bound
or
test
or
xor
or
call
gs
insl
mov
fyl2x
mov
xchg
jno
xchg
ret
pop
jle
sbb
jmp
or
jns
xor
daa
cmp
movsb
xchg
cmpsb
arpl
and
add
dec
leave
sub
xchg
mov
or
add
test
insb
cwtl
test
xchg
aad
cli
push
lock
arpl
fwait
or
inc
cmp
jl
push
and
adc
ds
inc
test
pop
cmp
aam
sbb
and
add
dec
inc
loope
and
les
and
add
pmaddwd
movsb
inc
fs
popa
mov
nop
adc
cmp
cwtl
push
ljmp
call
loop
leave
pop
outsl
xchg
sbb
cmp
outsl
lcall
cmp
popa
add
repnz
pop
xor
jle
sbb
adc
push
inc
stos
adcb
outsl
cmp
dec
mov
xor
filds
popf
inc
repz
and
push
sarl
sbb
cld
addb
mov
push
xor
push
je
mov
add
scas
mov
sti
sbb
ljmp
lret
jg
jns
lret
sbb
ljmp
mov
fildl
sub
jmp
adc
adc
ss
sbb
mov
jnp
cmp
mov
dec
inc
out
bound
cmc
inc
mov
fxam
jne
adc
pusha
sub
scas
and
add
xchg
ja
rcll
xchg
fwait
cs
sti
enter
fnsave
push
xor
jne
daa
dec
jg
jp
call
scas
xchg
icebp
fwait
sub
mov
fs
pop
push
inc
and
gs
movsl
dec
dec
dec
lock
fisubl
leave
mov
sub
jno
push
jo
mov
movsl
outsl
scas
pusha
fisttps
xlat
push
les
push
and
test
lret
push
pusha
test
leave
popa
and
ja
in
cmp
and
jns
dec
jl
popa
jne
fs
insb
inc
xor
xor
aad
add
call
movsl
cmpsl
jl
pop
ss
aad
jmp
mov
sbb
xlat
shlb
inc
loope
adc
lea
adc
xor
insl
and
enter
lret
sbb
rorl
sahf
pop
cld
icebp
call
hlt
add
xor
nop
sbb
ja
push
adc
pop
mov
popa
jnp
inc
or
out
sbb
xchg
and
scas
or
mov
mov
std
cmpl
int
das
pop
sub
push
je
pop
roll
sbb
mov
fldcw
pop
cli
imul
pusha
ljmp
xchg
push
mov
mov
push
add
and
loopne
cmc
cld
pop
inc
dec
mov
add
movsb
mov
es
imul
ret
lods
sbb
lds
in
cmpsl
or
and
cwtl
icebp
adc
inc
inc
les
and
dec
push
adc
mov
adc
cltd
sbb
add
xlat
clc
push
cmpsb
lcall
push
pop
imul
dec
xlat
mov
aaa
inc
xchg
shll
inc
inc
xchg
xchg
mov
mov
xchg
lret
inc
push
cmp
push
mov
or
into
imul
xor
mov
sub
xor
or
out
xor
mov
sub
nop
add
or
mov
push
test
aad
mov
test
jo
adc
mov
pusha
pushf
enter
mov
mov
cmpsb
arpl
loope
xchg
cmpsl
add
arpl
dec
mov
inc
cmp
jecxz
rdpmc
loop
das
mov
adc
cmp
test
lahf
testl
cli
addr16
adc
lods
mov
jb
add
sub
sbb
inc
sub
mov
xchg
mov
xor
xchg
hlt
outsl
mov
arpl
insl
pop
xchg
or
xor
addr16
adc
xchg
add
fidivl
and
adc
cmpsl
xchg
mov
add
mov
and
inc
push
mov
imul
inc
sahf
lret
adc
push
and
mov
jg
push
push
jp
push
and
loopne
cwtl
xchg
push
push
push
xchg
mov
jo
cmp
dec
sub
jne
test
and
inc
pop
pop
nop
cmpsl
scas
xor
or
jne
popf
jb
xor
pop
aas
push
jmp
hlt
inc
ret
or
or
xor
pop
add
flds
push
aam
mov
or
jo
adc
jp
add
jo
jbe
pop
xor
mov
sub
or
aas
call
fucomp
or
sub
cmc
push
das
push
mov
idivb
xchg
xor
popa
jmp
sbb
fnstenv
jle
insl
sub
mov
cs
es
in
and
mov
mov
mov
je
sub
nop
adc
sahf
xchg
js
cmpsl
test
sbb
pop
inc
and
jmp
jno
rcrb
push
cmc
xchg
sub
xor
adc
mov
and
test
es
sbb
push
mov
aad
dec
movsl
je
cmp
cmp
lret
cmp
je
lret
dec
or
cmpsb
sbb
in
push
aas
and
das
and
mov
xlat
and
add
inc
mov
ret
orps
cltd
lcall
push
les
inc
lods
xor
xor
call
cmp
je
or
add
jmp
mov
jmp
fldenv
mov
sbb
cmp
aam
mov
shll
pushl
lahf
test
and
in
push
jmp
xchg
xor
scas
inc
mov
test
adc
mov
push
inc
lock
jbe
adc
inc
jecxz
dec
adc
sub
mov
lcall
inc
mov
aas
stos
lea
aaa
andl
push
data16
sbb
mov
cmpsl
jle
jecxz
lds
mov
add
adc
and
jbe
add
lret
sub
pop
jb
stc
push
inc
mov
mov
xchg
or
fwait
and
mov
xchg
cmpsb
and
rcrb
push
cmp
subl
repnz
sahf
aad
push
mov
mov
daa
add
pop
outsl
push
lret
sub
push
filds
mov
cmpb
xchg
mov
mov
js
xor
in
call
adc
mov
movsb
aam
or
fcoml
out
pop
xor
mov
xchg
and
dec
xor
rolb
xor
enter
dec
testl
pop
fldenv
adc
fnstcw
push
adc
inc
outsb
stc
in
mov
inc
scas
inc
in
push
jmp
cld
les
inc
lods
fisubl
aas
jmp
aaa
inc
xor
dec
aas
lods
leave
mov
pop
sub
sbb
push
sbb
xor
push
push
adc
sti
push
mov
mov
mov
add
mov
ret
stos
pop
lret
mov
add
movsb
mov
hlt
jnp
cli
adc
inc
fildll
push
xchg
jnp
and
out
push
js
xchg
cmp
xor
inc
popa
and
mov
gs
sbb
icebp
mov
shlb
add
es
add
or
cmp
andl
test
enter
inc
mov
nop
add
scas
jp
jg
sub
sbb
mov
xchg
inc
mov
cmpsl
adc
push
xor
mov
mov
mov
mov
push
xlat
sahf
icebp
stc
sub
mov
mov
push
or
jo
mov
mov
icebp
lods
sub
arpl
lods
test
cmp
and
adc
mov
sub
aad
sub
mov
ljmp
sub
push
cmpsb
sbb
cmovl
daa
sbbb
pop
mov
push
cmp
and
mov
xor
incb
mov
test
and
jb
mov
xor
mov
push
mov
jns
cmp
js
push
jle
cmp
icebp
push
sub
inc
loope
mov
test
mov
dec
and
mov
and
xchg
ja
outsl
loop
inc
pop
xchg
and
cmp
xor
adc
dec
push
int3
mov
and
sbb
sub
xchg
xlat
lea
call
pop
cmpsl
sub
cmp
adc
loope
ret
adc
js
sbb
jne
daa
fbld
xchg
or
std
lods
lock
mov
mov
inc
lods
and
js,pn
shll
xor
andl
mov
push
int
xchg
xor
sbb
out
and
cs
sbb
adc
jmp
sub
mov
pop
cmp
xchg
pop
dec
add
push
data16
add
test
cmp
enter
mov
xchg
test
pusha
nop
mov
mov
sub
jmp
dec
test
ret
addr16
mov
push
or
stos
xchg
mov
or
or
mov
adc
jno
inc
pushf
xor
or
loope
pop
enter
les
and
jbe
adc
adc
mov
pushf
cltd
es
ljmp
loopne
adc
pop
pop
xchg
and
jmp
push
jne
mov
icebp
adc
push
ja
or
or
cmp
push
xchg
test
out
mov
push
je
and
ds
xchg
clc
rdtsc
jge
xchg
sti
jnp
out
inc
sti
sbb
rorb
pop
xor
cmp
imul
xor
pop
call
dec
sbb
adc
add
mov
pop
jp
mov
cmp
les
mov
call
popa
or
jae
adc
loop
mov
mov
sbbl
jns
psubq
xor
ss
pop
cld
sub
xchg
scas
sub
add
outsl
outsl
mov
scas
inc
xchg
push
in
xchg
mov
rolb
sbb
sub
scas
xchg
ret
data16
dec
jecxz
data16
divl
inc
push
lods
pop
xor
cmpxchg
in
dec
outsl
out
lds
pop
dec
xor
jge
insl
fcmovu
mov
inc
loop
std
mov
mov
inc
fdivrl
adc
mov
or
aam
mov
mov
push
jb
testl
push
jns
sub
fidivs
loopne
call
push
call
fwait
push
mov
or
push
mov
clc
sti
test
pop
pop
xor
add
fdivr
aam
adc
push
bound
mov
loopne
xor
je
cmp
mov
pop
in
les
adc
fnstcw
xor
and
or
aam
pop
push
mov
rol
and
adc
mov
jg
subb
shll
or
mov
stc
in
call
fcomps
call
adc
pop
in
cmp
test
pop
and
je
gs
jne
mov
jle
ret
or
ljmp
loop
pop
loope
mov
lds
icebp
mov
mov
lods
mov
and
sub
je
push
dec
mov
das
int3
inc
arpl
lea
dec
jmp
cmc
dec
push
push
push
dec
idivb
jbe
inc
loop
xor
mov
mov
add
mov
mov
dec
ljmp
or
inc
pop
out
pop
and
sub
cltd
mov
jo
popf
sahf
pop
in
jbe
mov
and
dec
jo
fisubs
fidivs
lock
fwait
adc
sbb
mov
or
jecxz
mov
pop
push
sub
and
mov
lock
mov
cwtl
sub
test
adc
add
lret
test
in
icebp
sbb
cltd
sub
cmp
push
lea
dec
xchg
pop
and
inc
mov
push
scas
in
mov
cli
shrb
sub
rorl
mov
aaa
mov
std
aad
xchg
out
push
mov
mov
pop
jne
cmp
orb
and
scas
das
inc
int
dec
jae
jmp
xor
repz
push
xchg
fwait
loope
dec
sbb
into
mov
jne
cmp
add
ljmp
aam
fldt
mov
ds
push
jmp
out
push
cmp
int3
adc
inc
test
inc
add
pop
jecxz
xor
xor
mov
pop
mov
sbb
inc
xor
aaa
popf
ret
inc
es
pushl
xlat
pop
cmp
mov
ss
xor
cltd
adc
popf
cwtl
cwtl
fwait
xor
ret
mov
mov
outsl
push
pop
push
add
sti
insb
pop
sti
and
fidivl
jmp
jb
xor
push
jnp
jmp
mov
jle
adcb
xchg
test
or
repnz
jo
inc
push
sub
shrl
sbb
imul
out
fnsave
out
js
jo
enter
pop
push
mov
xchg
mov
push
xchg
das
sbb
xchg
jne
inc
jg
sti
div
add
mov
movsl
into
xchg
outsl
fmuls
popf
dec
ret
sbb
and
scas
mov
aas
jbe
cli
jg
dec
test
xchg
xor
out
scas
rolb
push
or
stc
push
sub
xchg
or
push
mov
pop
lods
dec
int
sahf
or
sbb
cs
insb
pop
hlt
in
cmc
stos
inc
jl
jmp
xchg
sbb
push
cmpsb
lahf
pop
sti
pop
adc
cld
hlt
push
push
lock
push
sub
jo
int
or
fs
sbb
push
sbb
xchg
push
jg
push
int3
push
pop
ret
mov
imul
sub
mov
cwtl
ds
inc
jae
xor
xchg
xor
popf
mov
sbb
push
stos
aas
jbe
mov
arpl
push
sub
mov
or
sbb
leave
inc
dec
out
mov
inc
push
xchg
insb
out
mov
dec
in
or
loope
outsb
inc
clc
stos
aaa
add
cld
sbbb
inc
cmpsb
and
and
in
cwtl
lahf
adc
mov
inc
mov
push
fildll
adc
js
push
xor
loopne
adcl
pop
cmp
sbb
int
inc
or
mov
int3
scas
push
mov
mov
ret
movsl
ja
xchg
cmp
outsl
in
push
sub
add
sbb
fmuls
sbb
or
jge
addb
dec
or
clc
mov
aas
cmp
inc
clc
inc
out
and
mov
jb
ja
jg
and
inc
scas
push
mov
stc
dec
push
mov
loop
call
mov
lds
inc
dec
mov
pop
sahf
int3
sub
jmp
mov
xchg
mov
cwtl
int3
xchg
jge
aas
dec
sahf
or
xlat
push
lods
xor
add
cmp
jle
jo
jle
aad
test
int3
aam
pop
insb
add
lret
push
out
arpl
push
inc
repz
stc
es
lds
or
mov
dec
adc
testb
xor
and
sahf
inc
sahf
mov
cmc
ss
cmp
pop
iret
inc
je
mov
add
xor
jne
cmp
loope
xchg
mov
pop
repnz
add
andb
icebp
jecxz
inc
cmp
fldl
clc
sub
xlat
popf
cmp
mov
push
mov
mov
sub
insb
sub
mov
imul
dec
adc
inc
pusha
adc
cmp
xor
into
gs
mov
sbb
pop
mov
lret
jmp
jmp
add
jae
push
push
mov
arpl
lcall
dec
jnp
out
sub
or
inc
or
mov
mov
push
sbb
push
and
sti
jge
outsb
dec
mov
in
and
cmp
xor
leave
test
cwtl
decb
test
aad
or
jbe
sub
rcr
repz
lcall
negb
in
fs
popa
cwtl
cmp
and
gs
fbld
cltd
fwait
loope
push
inc
lods
popf
push
mov
push
roll
test
push
clc
mov
jae
jge
jb
pop
loope
leave
cmp
jmp
push
addl
sbb
and
mov
inc
mov
jle
sbb
mov
mov
ficompl
ret
add
add
aaa
cmp
in
xor
and
mov
rclb
dec
sbb
pop
fcmovu
sub
mov
lret
push
loop
addr16
xchg
sahf
jge
cmp
pop
jle
add
fsubl
inc
push
cmp
outsb
inc
and
push
add
adc
std
lret
mov
sti
stos
leave
scas
fst
ss
ss
inc
jle
popf
sub
mov
xchg
popl
shr
lods
dec
xchg
jmp
int3
je
cmc
dec
ja
pop
out
dec
fsubl
jl
nop
clc
cltd
add
es
sub
daa
adc
mov
dec
or
and
stos
fidivrl
jns
mov
pop
imul
add
mov
lret
cmp
adc
in
or
xchg
lahf
mov
xchg
into
stos
js
repnz
push
leave
inc
jb
add
or
ret
ss
pop
addr16
cmp
shl
cmp
and
pop
add
int
icebp
call
and
jo
arpl
jp
adc
roll
in
insb
inc
or
mov
adc
out
dec
sbbl
lods
cmc
and
movsb
mov
push
int
mov
js
ret
add
push
or
gs
lcall
pop
jno
dec
filds
cmp
sarl
leave
cmp
sub
push
call
fsubs
cltd
mov
inc
pushf
add
push
pusha
pop
lods
xchg
adc
scas
jnp
adc
mov
jl
mov
adc
cmpsl
js
xchg
mov
adc
jo
xor
add
in
ret
pop
insb
xchg
push
xchg
push
xor
adc
push
cmp
mov
ret
mov
fs
dec
push
and
pop
inc
dec
jnp
add
pop
test
out
imul
aaa
jno
pop
jp
rcrb
fwait
stos
or
push
int
mov
mov
mov
and
ja
push
jns
sarb
add
dec
loop
inc
mov
and
mov
and
icebp
movsb
cmp
in
loope
sbb
es
fcoml
fs
adc
in
mov
insb
xchg
daa
pop
into
mov
loop
mov
adc
jae
jne
and
sub
dec
pop
inc
incl
xor
sub
and
scas
aam
call
cs
pushf
cld
call
cltd
cltd
ret
sar
push
inc
jmp
and
add
fcmovnbe
mov
push
sub
or
or
xor
and
les
ret
adc
and
jl
inc
dec
pop
jmp
dec
notl
dec
rcrb
xor
jne
fidivrl
lds
add
jno
test
popf
xor
cmp
jmp
xor
les
mov
out
dec
and
js
adc
outsb
adc
lock
fwait
rcrb
aad
movsl
mov
mov
mov
inc
jns
dec
mov
mov
in
adc
imul
cmp
cmp
int3
mov
xor
roll
mov
add
xor
out
sub
fwait
cmp
ljmp
jae
inc
jno
repz
lret
jp
inc
add
mov
mov
mov
ljmp
scas
addr16
sar
cs
mov
jle
or
jns
mov
push
lcall
fldcw
sbbb
clc
or
iret
inc
dec
addl
and
clc
push
cmp
adc
push
dec
sub
fstpt
gs
jmp
push
test
arpl
push
jns
clc
std
lret
xchg
inc
iret
inc
out
les
cmc
mov
or
jae
push
xor
pop
sbb
or
adc
xchg
push
or
adc
cwtl
or
inc
dec
mov
pusha
iret
jecxz
int
jg
lea
sbb
xor
rorl
orl
ja
ja
jmp
xor
dec
cmp
sbb
jns
shlb
mov
inc
cwtl
mov
and
ret
jns
push
adc
xlat
xor
cmp
jge
rorl
sti
lret
mov
sub
or
mov
test
mov
dec
push
rcll
je
das
or
in
aam
pop
mov
into
sbb
dec
mov
jno
jp
adc
cmpl
jmp
jne
ss
push
mov
or
adc
filds
enter
mov
mov
jg
mov
cmp
push
jg
jno
cmpsl
add
fisubl
jbe
flds
and
and
or
fwait
ds
call
test
sbb
lods
mov
pop
test
sub
out
mov
add
cmp
mov
or
cmp
dec
enter
adc
inc
push
aaa
cmp
int
pop
push
jge
sub
daa
inc
sbb
cltd
mov
cmpl
pop
fs
in
jbe
movsl
or
aam
fs
lret
xchg
pop
and
cmp
push
sti
sbb
push
test
xor
push
sbb
push
jge
cmp
test
add
loopne
mov
mov
push
sub
add
js
mov
lret
cmp
jmp
pop
pop
ret
movsl
xchg
jmp
cltd
lret
stos
sub
xchg
cli
fnstcw
push
mov
and
jb
test
outsl
mov
push
in
jb
adc
jge
mov
pushf
mov
les
call
mov
cmp
mov
mov
sti
fistl
adc
or
xchg
loope
bound
adc
jge
xchg
pop
mov
in
xorb
xor
push
jae
cltd
xor
hlt
dec
ljmp
cmp
xor
pop
aaa
scas
inc
call
adc
inc
jo
mov
ss
je
xchg
pop
in
cmp
mov
inc
push
insb
imul
std
pop
inc
xor
loop
enter
mov
mov
and
jmp
clc
jno
sub
fs
push
ja
int3
stos
adc
and
icebp
jne
std
sbb
push
pop
or
clc
sub
fidivrl
lock
inc
push
jns
ds
lds
inc
mov
cmpsl
xchg
push
ds
mov
call
add
mov
aad
int3
and
sarb
sbb
push
mov
or
xchg
xchg
dec
jne
cmp
adc
adc
jecxz
dec
jnp
sbb
daa
jge
inc
jp
push
xchg
mov
xor
sti
arpl
adc
mov
ret
jae
xchg
or
adc
ss
sub
adc
pusha
lods
xchg
adc
mov
loopne
inc
mov
inc
xor
ss
lcall
inc
adc
and
lcall
lods
stos
mov
add
jge
clc
or
mov
lret
push
fmuls
mov
adc
pop
inc
adc
clc
mov
lods
mov
xor
mov
push
js
pop
mov
rol
inc
sbb
adc
enter
cmp
mov
or
fcmovnb
xchg
out
inc
jns
andb
jg
push
leave
cltd
pop
push
push
repnz
jmp
jmp
scas
imul
fcmovnb
icebp
inc
jbe
inc
dec
leave
roll
loopne
imul
ret
mov
setp
insl
and
inc
pop
pop
xchg
stos
clc
add
movl
jnp
rcrb
sub
ljmp
dec
cmc
addr16
mov
add
icebp
add
fsubrp
cmpsl
mov
and
mov
sub
mov
mov
sti
adc
jg
mov
jmp
icebp
pop
xchg
xchg
leave
sub
inc
sbb
test
aad
test
mov
mov
shrl
test
loop
stc
push
jmp
imul
inc
and
or
xor
and
outsl
lahf
sahf
xchg
aas
into
call
xor
push
in
hlt
sbb
push
inc
ss
inc
push
and
shr
std
stos
ljmp
cltd
lds
je
bound
inc
or
add
pop
push
cmc
mov
std
gs
pop
fcomi
cmp
movsl
xchg
sbb
mov
hlt
and
inc
sbb
inc
and
and
out
inc
mov
sbb
xchg
jnp
dec
push
xchg
sub
flds
mov
xchg
mov
pop
dec
xchg
into
push
cmp
add
flds
adcl
stos
je
cmp
push
andl
mov
inc
lock
stos
mov
add
and
dec
fisubl
jle
addr16
mov
and
jb
subl
icebp
sbb
add
cmpb
adc
out
dec
push
mov
jmp
mov
shl
popf
test
aas
xor
in
and
pop
out
repnz
cmpsb
fisubl
imul
jmp
fsubp
pop
popa
pop
and
xchg
loopne
cmp
loope
rorb
in
xchg
jbe
lcall
add
roll
mov
xor
jle
mov
cmp
and
cltd
and
cmp
mov
xchg
scas
add
pop
inc
jle
xor
and
call
dec
pop
inc
dec
jmp
jp
in
lds
shll
cltd
fiaddl
test
sbb
mov
xchg
dec
sti
lds
loope
mov
mov
push
outsl
fcomps
dec
xor
pushf
mov
xor
add
int
jmp
fisubl
fcoms
pop
add
sbb
test
and
test
out
dec
call
pushf
stos
cmp
adc
and
imul
fcoml
pop
cli
les
or
mov
adc
adc
ds
push
xor
push
bound
mov
sahf
sti
test
cmp
push
filds
orl
cmp
call
sub
sub
repz
mov
fsubs
mov
xor
mov
test
inc
mov
jmp
push
push
mov
in
and
mov
pop
push
lods
outsl
pop
and
and
mov
cmp
jb
mov
and
sub
testb
neg
sbb
mov
mov
cli
sbb
sar
push
jle
leave
mov
jmp
sub
arpl
shr
pusha
cmp
insl
dec
int3
adc
aaa
jns
sbb
cmp
inc
xor
shlb
mov
cmp
dec
jo
or
pushf
outsb
jecxz
sub
imul
xor
adc
jo
jge,pn
in
and
cmp
inc
sbb
lret
dec
call
xor
js
sbb
fcoms
mov
popa
shl
push
push
stc
add
pop
or
lods
mov
jg
pop
fistpll
inc
ljmp
push
pop
jbe
and
jl
je
cmp
call
add
xor
adc
inc
dec
repz
idivb
push
iret
cmp
push
inc
cmp
lahf
jle
dec
mov
pop
not
mov
in
test
movsl
fs
cli
test
fidivrs
fldt
cmp
mov
das
bound
push
xor
or
xchg
dec
mov
mov
data16
push
push
jo
dec
adc
jns
loopne
mov
and
pop
mov
add
test
xchg
in
cmp
fadds
xchg
xchg
loop
mov
inc
popf
and
adc
mov
stos
addr16
ds
adc
mov
jg
adc
pop
dec
outsl
es
hlt
test
iret
lahf
fisubrs
sub
loop
and
add
fdivl
imul
push
out
shrl
pushf
dec
mov
cmp
dec
mov
mov
dec
mov
and
sub
call
mov
pop
cmp
dec
or
mov
mov
insl
out
mov
xor
out
pushf
in
push
or
out
cmc
add
stos
mov
ljmp
sub
mov
sti
adc
decl
cwtl
int3
orl
mov
xor
lahf
inc
testb
fbld
fcoms
add
pop
clc
mov
mov
mov
mov
jg
and
stos
jo
sbb
hlt
lret
push
shrl
xchg
cmp
js
js
inc
jecxz
insl
mov
sub
push
popf
test
sub
fldenv
push
fidivrs
insb
mov
lods
aas
and
mov
or
icebp
and
nop
lods
mov
xor
sub
cmp
adc
add
mov
cltd
push
mov
mov
mov
repnz
and
jne
jle
stc
sub
inc
test
sbb
gs
lods
and
test
imul
jl
push
dec
pop
mov
cmp
or
xor
sub
adc
movsl
mov
sub
xor
clc
xor
ja
stos
cmpsl
loopne
push
adc
dec
shrb
adc
mov
fsubrl
xor
mov
shll
mov
mov
loopne
rcrl
cmp
out
add
ficompl
out
adc
push
iret
sbb
mov
cmp
ja
xlat
dec
dec
mov
jbe
sbb
jp
sbb
and
push
dec
int
jne
lahf
rcll
jg
pop
pop
andb
ss
inc
repz
xor
fisttpl
mov
and
mov
out
ret
repz
sub
and
xchg
dec
push
push
mov
jle
xlat
nop
aaa
lods
or
mov
lcall
push
push
mov
or
inc
cltd
scas
cmp
clc
scas
lcall
mov
push
rcrb
cmp
mov
decb
fs
push
push
subl
mov
fadd
ljmp
stos
imul
xor
into
sub
mov
loop
or
mov
cmpsb
mov
test
and
dec
test
jo
cmp
xchg
das
cmp
fnstenv
mov
popf
push
xlat
outsl
jg
pop
jle
les
sbb
mov
cld
lods
xchg
push
cmp
mov
hlt
sbb
inc
enter
sbb
or
fidivrl
cmpb
mov
push
test
lock
mov
fs
jo
fcmovb
imul
ror
cli
push
test
sti
pusha
pop
jl
mov
idivb
pop
adc
stc
loop
xchg
xor
sub
jp
aam
jg
les
push
ret
xor
push
pop
cli
daa
fbld
adc
push
dec
lods
fs
xchg
into
pop
push
fucomi
mov
jecxz
jge
dec
fstl
or
mov
fistpl
inc
enter
or
push
mov
fisubrl
and
add
jne
or
cmpsb
xor
mov
adc
ret
fwait
in
dec
xchg
or
adc
mov
mov
imul
mov
pop
in
xchg
dec
cltd
mov
adc
adc
lahf
or
fildll
dec
adc
shll
mov
xchg
sahf
xorl
out
faddl
mov
adc
mov
sub
inc
fnsave
ss
mov
aaa
sub
cmpsl
xor
add
test
add
jnp
cmpsb
adc
jecxz
xchg
jne
push
sbb
sub
lds
rclb
imul
cmp
dec
xorl
je
xor
push
fsubrl
out
lea
mov
or
xchg
jb
bound
dec
dec
inc
mov
mov
into
enter
push
mov
pop
xor
mov
push
stos
adc
imul
mov
pop
pop
dec
insl
pop
mov
xor
inc
int3
incl
mov
adc
and
mov
cmp
mov
cmp
imulb
and
dec
xor
or
das
mov
pop
inc
jp
xor
xchg
nop
mov
push
push
push
pop
or
jmp
dec
lock
cmpsb
xchg
outsl
xor
add
std
push
in
call
push
push
pusha
mov
add
sub
xchg
mov
push
and
ds
push
in
data16
mov
cs
dec
je
and
and
jnp
ss
fimuls
inc
mov
clc
sub
mov
pop
lcall
lahf
into
ljmp
cltd
icebp
xorb
scas
sbb
push
stos
int
xor
addr16
loopne
fs
xor
cmp
mov
or
rclb
js
negb
dec
fdivs
push
jg
push
xchg
bnd
mov
mov
outsl
nop
outsb
pop
idivl
inc
daa
cmp
loop
ja
mov
adc
std
pop
popf
sub
sahf
dec
movsl
pop
pop
xchg
pop
cs
dec
pop
and
jecxz
daa
dec
fwait
popa
ja
mov
mov
lea
ja
or
push
push
lcall
int
pop
pop
jae
jmp
add
sub
mov
pop
fdivrs
rclb
es
mov
jecxz
aas
jge
add
sbb
mov
cmp
pop
cmpsb
mov
cmpsl
je
mov
inc
or
add
add
ljmp
movsl
stos
sbb
imul
out
movsb
cmp
pop
mov
ljmp
es
enter
inc
pushf
es
test
loop
xchg
sub
fstpt
imul
cmp
cmp
in
add
test
jnp
pop
inc
lret
aad
push
mov
add
outsl
fs
fsubl
push
je
jle
add
mov
push
or
jmp
inc
mov
sbb
aas
loop
mov
jo
cmc
fs
or
xchg
fistl
les
adc
mov
pop
mov
lods
pop
mov
push
mov
nop
cltd
out
mov
call
cmpsl
int
cmp
addl
dec
pop
push
adc
stos
mov
jmp
iret
sbb
es
lcall
xchg
and
leave
sub
mov
cmp
aas
stos
xorb
dec
mov
fistl
add
and
lret
xchg
aas
cmp
add
dec
popa
inc
mov
in
mov
add
sbb
mov
stc
jae
or
adc
cmp
test
mov
repnz
xor
jae
pop
decb
add
jg
stos
add
and
gs
rcl
mov
inc
aas
ss
aas
lock
cmc
sub
mov
jbe
push
jo
stc
call
jns
loope
js
loop
mov
sub
pop
inc
or
jns
add
pushf
lea
cmp
dec
cmp
stc
in
int3
and
add
jbe
dec
enter
mov
mov
pop
and
fadd
ja
sub
enter
popf
and
jge
cwtl
push
nop
pop
pop
adc
nop
mov
dec
xchg
mov
repnz
xchg
sub
sub
lret
nop
xchg
push
cmp
xchg
fdivrs
stos
mov
lock
lds
add
mov
push
xchg
fisttps
sub
notl
clc
cs
jo
or
cmc
or
adc
push
adc
ds
daa
jp
push
and
jmp
add
testb
bound
fs
gs
sbb
or
ja
mov
loope
xchg
scas
sub
rcll
pop
or
mov
data16
jl
loop
pop
pusha
sbb
rcrl
sarl
arpl
mov
add
ss
push
xor
ficoml
in
mov
js
sbb
jle
mov
and
push
push
out
outsb
sbb
aas
insb
mov
fmuls
cmp
rclb
mov
enter
pusha
negl
lock
pop
push
pop
sbb
add
test
add
call
mov
test
in
mov
loopne
mov
and
or
jmp
lahf
and
dec
cmp
call
or
insb
stos
cmp
in
ds
jg
nop
es
sub
ljmp
add
inc
xbegin
mov
sbb
sbb
or
inc
inc
dec
add
xchg
aaa
sub
in
xchg
adc
fdivs
je
dec
lret
inc
out
idivb
or
stos
sbb
adc
mov
sbb
mov
es
lea
and
out
repnz
sbb
jmp
icebp
push
rclb
dec
lods
xor
pop
in
ficoms
jge
jo
nop
add
sbb
sbbl
jecxz
mov
cbtw
push
aas
cmp
ljmp
sbb
sub
lea
lcall
in
jbe
inc
nop
adc
jg
daa
stc
sarl
shll
cld
arpl
fidivl
fwait
xchg
add
push
mul
arpl
nop
cmpsl
adc
mov
test
push
cltd
rorl
lret
imul
lcall
into
adc
xchg
cmc
mov
xchg
inc
stos
sbb
fcompl
loopne
bound
sbb
cmp
divl
dec
xor
mov
cmpsb
fwait
dec
jae
ss
cmpl
mov
test
jp
mov
fldl
out
hlt
shrl
data16
int
xchg
jns
movsb
sub
cmp
pop
leave
jo
mov
push
hlt
imul
flds
jecxz
jmp
out
adc
pop
xor
lret
or
das
sarb
movsl
push
add
inc
mov
mov
ret
fcmovne
pop
inc
cld
mov
call
pusha
mov
jmp
pop
jmp
scas
or
adc
adc
sub
inc
dec
rcll
inc
sub
adc
jp
filds
lods
and
cli
shl
test
dec
xchg
add
pop
xor
int3
xor
add
loopne
adc
jecxz
push
movsl
push
subl
nop
pop
adc
jo
dec
adc
outsb
int3
shrl
and
jae
call
jmp
xchg
lock
pop
cld
add
mov
xchg
inc
add
push
hlt
add
pop
insl
xchg
inc
push
cmp
in
mov
pop
std
xor
mov
lods
ret
xchg
mov
adc
pop
jne
out
push
xchg
inc
in
aas
fs
lock
daa
cmp
push
mov
mov
push
cld
sub
lahf
stc
adc
stc
fimull
pusha
shrb
xor
stos
xor
mov
mov
push
outsl
inc
and
shrb
pop
sahf
adc
mov
imul
outsb
sbb
mov
push
leave
jns
pop
xor
daa
mov
pop
push
mov
movb
jae
mov
xchg
out
std
sbb
or
push
and
mov
or
lret
sbb
daa
fidivrl
imul
sub
arpl
mov
dec
lahf
and
fcoms
imulb
icebp
dec
mov
xor
xor
call
pop
xor
pop
lock
inc
jae
or
aas
sub
icebp
scas
insl
pop
pop
add
dec
xlat
adc
inc
jne
mov
mov
push
ljmp
scas
pop
pop
imul
test
mov
loop
add
dec
jge
adc
enter
cmp
adc
mov
mov
sub
jle
sbb
nop/reserved
dec
sub
lret
lea
sub
jge
adc
cs
clc
leave
sub
mov
mov
xchg
out
imul
jb
sbb
mov
add
cmpb
repnz
js
or
mov
ret
xor
idivb
or
and
adc
fs
cli
sub
jo
lret
cmp
jne
add
xchg
inc
sub
enter
imul
rclb
insb
or
clc
push
xlat
andl
fidivrl
jmp
and
mov
fldenv
push
loopne
adc
outsb
dec
jecxz
xchg
in
mov
mov
inc
jmp
push
pop
sbb
adc
cwtl
and
out
imul
inc
adc
sub
fdiv
cmc
loop
cmp
push
clc
sarb
stc
in
and
push
sti
ljmp
stc
rol
add
js
or
xor
cmpsl
dec
xor
call
adc
outsb
cmp
movsb
int
sbb
xchg
jo
add
pop
cld
pop
pop
inc
test
push
jp
adc
dec
inc
push
pop
repnz
es
mov
add
adc
push
das
jo
sar
mov
xor
out
mov
lods
dec
sbb
pop
loope
add
push
js
les
outsb
push
enter
adc
mov
sbb
mov
sbb
xor
pop
jg
and
cmp
inc
fstl
inc
lcallw
and
adc
sub
sbb
xchg
pop
inc
sub
jbe
jb
sbb
or
je,pt
dec
lock
int3
pop
lea
loopne
mov
sub
cmp
faddl
daa
and
test
lahf
dec
out
sti
inc
inc
jne
lret
dec
filds
ss
sub
bound
xchg
push
popa
and
inc
adc
mov
notb
insb
inc
cmp
out
lahf
jg
xchg
neg
pusha
addr16
out
jl
cwtl
fistpll
lds
or
sahf
lds
xchg
aad
or
lods
add
mov
sub
cmp
xlat
add
scas
addl
dec
pop
fidivrl
fsubr
mov
xchg
rolb
push
add
adc
gs
es
ds
dec
jbe
or
imul
push
xchg
fs
ss
insl
push
push
movsb
dec
call
jo
adc
imulb
in
sub
add
pop
pop
mov
xchg
call
mov
leave
xorb
lea
shll
add
adc
lods
je
and
adc
repz
push
add
add
dec
clc
sub
jmp
mov
mov
sbb
hlt
lods
pop
adc
mov
add
lods
hlt
xor
mov
adc
cli
jbe
sub
xorl
std
mov
jno
ds
dec
xchg
xor
jecxz
insl
sbb
shll
sub
adc
cmpsb
sub
sti
ja
ja
mov
loope
inc
sub
dec
ljmp
test
insl
lret
xor
dec
cld
xorl
sbb
aaa
pop
adc
mov
ret
test
imul
mov
sbb
sbb
jns
mov
sbb
xlat
and
mov
sub
nop
sbb
sbb
dec
js
push
mov
mov
push
xchg
cmp
mov
leave
cld
inc
test
cld
push
push
sub
jbe
or
rep
stos
insb
mov
out
out
into
jg
test
sub
bound
test
mov
sti
daa
out
push
les
ficoms
arpl
xchg
jmp
pop
subb
mov
pop
js
imull
les
cmp
or
push
push
mov
mov
outsl
hlt
idivb
addr16
rcll
lock
mov
sbb
mov
xlat
ret
ds
xchg
or
adc
xorb
xor
push
pushf
mov
push
mov
mov
sub
loopne
adc
lret
sub
xor
and
mov
pop
jmp
push
pop
call
loopne
pop
icebp
add
inc
xchg
inc
cmp
sbb
cli
adc
test
int
sub
imul
addr16
pop
or
mov
sbb
jl
cs
or
xchg
sub
mov
fistpl
jmp
pop
and
sub
ja
test
jmp
push
aaa
scas
cmp
insb
sub
in
imul
comiss
push
jb
or
push
rclb
sub
loope
mov
cmp
sbb
hlt
daa
adc
push
mov
dec
dec
push
xchg
mov
mov
pop
lret
sti
jp
es
mov
and
cmp
iret
cmp
lods
xor
mov
mov
sub
sub
cmpsl
sub
or
sti
cmp
xor
movsl
subl
inc
ret
jp
ret
fisttps
outsb
cli
mov
out
xlat
jbe
xor
addr16
test
stc
xor
and
pop
or
inc
inc
add
loop
repz
testb
mov
xor
je
mov
pop
xor
clc
call
stos
pop
mov
pop
icebp
sub
sbbl
repnz
pop
das
mov
push
push
and
lock
mov
dec
popf
push
and
jg
pushf
jmp
mov
adc
sbb
aad
xor
jp
and
nop
gs
xchg
std
hlt
jmp
jne
insl
and
jo
push
aam
xor
pushf
dec
bound
cmp
js
fiaddl
inc
push
sub
cmpsb
inc
daa
int3
je
pop
in
cs
inc
scas
jge
daa
mov
pop
or
adc
test
jne
ret
push
lea
mov
mov
cmpsl
nop
xor
dec
mov
scas
mov
and
in
imul
adc
std
and
adc
add
and
mov
xchg
out
call
ret
mov
adc
dec
mov
loopne
and
dec
idivb
push
into
and
adc
jecxz
mov
jae
push
mov
icebp
and
inc
mov
xor
mov
clc
jne
sub
mov
mov
stc
addr16
xchg
push
sbb
cmp
add
jno
imul
bnd
inc
add
dec
cmc
loopne
lods
inc
sahf
inc
inc
clc
mov
jb
xor
sub
dec
inc
inc
jp
add
sbb
add
dec
int3
mov
add
test
lods
ret
jne,pt
cs
rorb
sbb
lcall
adc
mov
push
xchg
jp
es
jmp
pop
sub
test
mov
cs
into
inc
in
and
add
mov
mov
and
xor
push
clc
fidivrl
cwtl
ret
or
rclb
scas
mov
call
add
popl
xchg
mov
dec
mov
jmp
mov
aas
push
sbb
aas
jmp
inc
andb
outsl
pop
push
push
pop
cld
nop
insl
inc
adc
test
add
sub
rcl
add
inc
shll
subb
jl,pt
cmp
push
mov
xchg
rcrl
gs
iret
mov
xchg
cmp
and
jbe
es
add
in
and
repz
add
jae
imul
add
cmp
ret
lret
mov
fwait
in
mov
jbe
mov
push
ret
fwait
xchg
cmp
and
push
pop
sub
in
outsl
shlb
mov
lods
fdivrl
out
push
cmp
ja
cmpsl
loop
mov
xor
rorl
call
mov
sub
mov
mov
and
inc
and
jg
xor
jge
test
push
mov
pinsrw
and
mov
repnz
stos
lods
sub
cltd
jmp
xlat
aad
xchg
adc
sti
adc
sahf
push
testb
test
cmp
xchg
ss
lret
mov
gs
or
sbb
xchg
bound
lcall
adc
bnd
andb
mov
inc
movsb
dec
lret
int
mov
cmpl
sub
push
out
xchg
mov
jnp
jns
scas
pop
out
cli
jo
lret
xchg
push
and
or
mov
jmp
pop
inc
adc
mov
lods
fwait
fs
pop
xor
and
dec
push
into
jg
mov
add
femms
rcrb
popf
fstps
nop
cmp
jns
push
sti
cmp
xchg
jbe
call
jle
or
sbb
push
dec
xor
repz
cmpl
call
mov
aaa
push
xor
dec
jg
and
jmp
push
pop
hlt
in
mov
in
aaa
lock
mov
jne
mov
dec
jmp
sar
or
mov
cmpsl
xor
push
mov
js
js
call
cmp
push
and
xchg
or
notb
les
and
ds
mov
push
add
fidivl
scas
icebp
and
sub
sarb
stos
sbb
xor
xchg
sbb
stos
fs
and
jno
push
inc
test
fiaddl
sbb
adc
push
shl
xor
and
adc
or
sbb
sahf
pusha
out
xchg
mov
jmp
dec
mov
push
inc
stos
push
cmp
pop
mov
jmp
repnz
das
push
test
lods
and
xchg
adc
out
xchg
adc
adcb
into
fstl
adc
pushf
inc
into
xorl
push
aad
ljmp
cmp
sbb
or
pop
or
nop
test
push
or
aad
dec
jne
xchg
lods
sub
xor
outsb
test
pop
lock
into
clc
js
jl
or
cmp
gs
cs
add
push
add
inc
jcxz
xor
xchg
adcb
and
insb
inc
sbb
fisttpl
movsl
add
add
mov
add
enter
rorb
sbb
imul
xor
sbb
xchg
icebp
mov
add
or
add
and
mov
shll
test
imul
sub
sub
mov
andl
dec
adc
xchg
jnp
shlb
jg
repz
jo
push
and
ficoml
mov
test
push
sbbl
loope
and
xor
cmp
or
jb
fs
or
cltd
or
push
pop
add
loop
cmpsl
mov
testl
dec
push
jge
cmp
fisubl
lds
xchg
inc
pop
pop
push
ret
mov
jle
movsl
and
mov
fldenv
or
xor
push
mov
push
xor
add
sub
inc
xchg
lret
clc
push
test
adcb
adc
les
mov
push
sbb
jp
xlat
jp
mov
imul
inc
mov
pop
and
icebp
adc
adc
push
insb
dec
iret
mov
mov
lret
inc
jb
sti
cmp
add
mov
jp
call
push
shrb
jge
pop
jne
ret
fisttpl
sub
test
push
cld
adc
insl
push
int
loop
push
add
or
mov
cmp
fs
insl
jmp
xchg
add
jno
loop
sbb
jns
pop
jmp
je
sub
or
aam
mov
clc
sbb
loopne
adc
mov
stc
fs
sub
xor
fadds
ficomps
fstl
jecxz
ret
add
addr16
inc
xor
sub
lret
jge
inc
aad
cmp
xor
xlat
je
cmpl
pop
shlb
xchg
jp
fstp
mov
mov
testl
dec
inc
pop
push
xchg
xchg
sub
shrb
and
into
cmp
sub
dec
lods
xchg
xlat
in
sub
jns
adc
jb
push
cmpsb
nop
xchg
mov
test
fisubrs
xor
sti
in
mov
repnz
cli
es
sub
add
or
rcrl
ds
popa
dec
mov
mov
mov
mov
add
cmp
mov
xchg
stos
in
jp
dec
lock
cmp
std
lret
fdivl
int3
jo
mov
xchg
xchg
loop
jg
add
sub
insl
int
pop
into
sbb
leave
jge
dec
fsubs
pusha
ds
fimull
jg
mov
scas
sti
loopne
nop
pop
xor
jo
ss
sar
testb
nop
or
xchg
xor
lret
fdivp
sbb
inc
cmp
sub
add
adc
lods
hlt
dec
inc
dec
imulb
scas
loop
stc
and
daa
aas
dec
cli
cli
enter
cwtl
or
inc
cmp
fcmovnbe
sub
ret
mov
repnz
mov
hlt
iret
mov
cmp
sbb
ds
or
and
mov
insb
dec
aas
dec
adc
das
xchg
sahf
adc
scas
cmpsl
lods
mov
in
jnp
sbb
test
xchg
adc
sub
lods
push
dec
jl
or
jno
dec
or
mov
addr16
jne
sbb
dec
inc
and
inc
sahf
inc
icebp
jle
pusha
std
pop
ja
js
inc
mov
icebp
inc
xor
dec
add
and
push
or
rol
mov
repnz
adc
dec
popa
xor
fwait
addr16
ss
cmp
loop
or
test
jg
mov
out
roll
sti
jg
inc
dec
or
test
jg
mov
fisttpl
sub
lock
idivl
xor
inc
mov
jg
mov
add
xor
stos
cmp
mov
int
fwait
jle
sbb
scas
push
xor
xor
outsb
adc
fnstenv
and
mov
mov
or
or
rclb
sub
js
or
push
mov
push
sbb
int
sbb
mov
shl
cmp
pop
nop
xorb
pushf
inc
out
dec
pop
jle
outsl
cmpsb
pop
xor
iret
icebp
cmp
cmp
jmp
fldcw
out
stc
inc
and
div
xor
aad
push
push
adc
mov
cmp
mov
sub
mov
jb
mov
xchg
sub
movsb
push
jns
sbb
daa
shlb
clc
das
es
pushf
mov
hlt
pop
and
push
cwtl
cli
outsl
inc
gs
push
test
in
dec
fistpll
xchg
add
xchg
sub
popa
mov
inc
dec
add
push
icebp
pop
inc
inc
dec
inc
mov
push
jge
mov
fwait
xor
mov
pusha
xchg
and
out
sahf
stos
mulb
dec
aam
test
jle
or
stc
sub
rcrl
stc
cmp
adc
push
pop
loope
adc
aam
lret
jnp
adc
sbb
mov
scas
clc
push
outsb
push
mov
daa
addr16
lret
in
in
jno
push
adc
pop
adc
enter
lods
jbe
jmp
or
arpl
cmp
dec
dec
lahf
xchg
jne
decl
sbb
movsb
fstps
decl
imul
or
xorb
add
inc
pop
jmp
mov
mov
jb
pushf
je
inc
pop
mov
mov
fs
in
shr
iret
mov
jecxz
lods
fsubrp
push
shl
call
mul
xlat
lea
daa
aam
in
adc
jae
cwtl
in
mov
popa
pop
adc
xchg
or
xor
loope
mov
sub
in
mov
push
mov
add
push
jmp
jb
xchg
mov
pop
shr
push
fs
sbb
dec
roll
xchg
ror
hlt
std
cltd
sub
pop
cmp
xchg
js
mov
clc
enter
aas
fidivrl
cmpsb
pop
dec
dec
push
add
sub
add
jns
cmp
xor
cmp
dec
aam
hlt
lahf
inc
insb
pop
push
jle
aaa
bound
fs
mov
add
xor
sub
adc
inc
int
push
mov
inc
sbb
fistpl
pop
or
inc
lods
mov
or
inc
dec
out
xor
aam
push
int3
subl
lods
inc
lock
jg
jl
test
jno
enter
jge
clc
out
lret
clc
push
mov
push
mov
jge
stos
in
lcall
pusha
call
fcomps
nop
out
cmp
pop
and
pop
popf
mov
cmp
roll
mov
jno
cltd
popfw
es
xchg
aas
or
popf
jae
adc
call
adc
sub
or
inc
sbb
cmp
xor
ret
cmp
mov
je
add
push
push
xchg
mov
or
lods
dec
addr16
in
sub
mov
scas
das
les
sbb
in
adc
test
jg
add
add
mov
mov
adc
int
xchg
shlb
push
lods
int3
pop
ljmp
dec
fidivs
pop
dec
test
and
fsubs
or
movsl
xchg
jo
push
in
mov
test
call
lea
cmp
sub
mov
push
orb
add
lock
inc
dec
and
lea
mov
pop
jns
aam
or
mov
jecxz
mov
sbb
mov
insl
adc
jbe
push
insl
cmp
shrl
xor
add
adc
popf
push
lods
rorl
pop
mov
es
data16
loop
mov
adc
inc
jmp
and
jge
sub
mov
adc
or
jbe
jecxz
movl
ret
fnstenv
ss
cmp
xchg
dec
fiadds
or
nop
lcall
jmp
and
mov
scas
jecxz
dec
xchg
jae
sbb
xor
sbb
test
or
fcomps
add
enter
mov
lcall
mov
mov
fmuls
mov
cmp
sbb
sbb
lret
shr
sub
and
and
inc
adc
test
adc
test
mov
cmpl
xor
fildll
jb
or
mov
adc
xchg
in
xor
and
and
xchg
jmp
sub
cld
xor
or
rolb
divb
xor
xor
xchg
and
push
xchg
ds
mov
sub
add
test
mov
test
stos
mov
jmp
ja
adc
ss
sbb
and
addb
sarb
xor
cmpsl
inc
and
cmp
xchg
sti
lds
or
ss
adc
leave
and
cmp
sbb
xor
xor
popa
insb
adc
and
aaa
xchg
cwtl
xor
push
adc
xchg
addl
or
mov
xchg
enter
inc
mov
movsb
sbb
mov
fisttpll
and
xchg
and
and
mov
xor
push
loopne
ljmp
loop
int
pop
cli
lea
stos
xchg
mov
adc
adc
mov
sbb
loope
lds
push
mov
loopne
mov
mov
add
out
jae
inc
sub
mov
rcrl
pop
mov
inc
jg
into
xchg
xchg
cmpsl
pop
and
sub
cmp
stos
call
int3
insl
mov
out
and
loope
mov
inc
and
vaddss
sub
push
mov
add
add
fs
stos
xor
add
insb
sbb
rep
ljmp
icebp
push
into
out
dec
jmp
adc
es
mov
inc
add
push
lds
xor
xlat
stos
dec
call
push
rol
mov
adc
fxch
mov
jmp
pop
sahf
pop
aas
cld
jge
pop
inc
mov
or
xor
out
sahf
in
push
mov
push
cmpsl
decl
sbb
ss
ds
add
mov
lret
adc
lods
jp
adc
mov
sbb
test
xchg
inc
mov
add
sbb
cmp
data16
cmp
lods
outsl
out
sub
pop
and
fstpt
cmc
nop
xchg
repnz
decl
cmp
sbb
mov
inc
insb
and
pop
push
mov
popf
iret
pusha
mov
jmp
fcomip
inc
sbb
and
cld
lcall
adc
dec
mov
sti
cmp
add
jl
sub
insl
add
push
pop
sbb
mov
fadds
mov
inc
inc
inc
inc
hlt
fistpll
lea
faddl
sub
incl
xor
call
mov
jnp
or
outsb
insl
mov
xor
lds
pushf
push
call
les
xorb
invd
and
cld
cmp
sbbb
sbbb
daa
ja
int
or
rcrl
cmp
shll
mov
push
je
sar
sub
mov
outsl
push
xor
icebp
call
adc
in
push
out
push
push
cmp
push
insl
inc
in
test
cmpsl
sbb
or
sbb
dec
int3
lea
add
lods
dec
and
jno
push
mov
sbb
lock
cs
lret
mov
lahf
ljmp
in
inc
call
inc
mov
jge
out
pushf
sub
cmp
movsb
js
sbb
push
hlt
gs
mov
adc
inc
mov
inc
and
xor
or
inc
push
mov
adc
adc
popa
push
stos
push
xor
add
mov
call
imul
shlb
fnstenv
jo
cmpsb
add
or
and
cmp
lret
push
std
inc
add
mov
xor
add
aas
cmpb
rorl
sub
jle
cltd
in
cltd
or
sub
xchg
out
pop
sub
leave
scas
add
inc
aam
arpl
sub
je
andb
jbe
ret
xor
adc
sub
mov
and
cwtl
cmpsl
cmp
xor
lret
adc
out
cmp
stos
mov
nop
or
add
je
out
ret
and
out
mov
and
push
out
cmp
push
nop
jns
add
or
jmp
add
faddl
push
xchg
in
pshufw
jmp
push
push
sub
mov
popf
cld
cmpsl
bound
adc
and
lcall
jle
sub
mov
mov
xchg
test
xor
push
mov
shrl
cmp
js
gs
mov
sbb
cmp
hlt
mov
push
ja,pt
dec
xchg
adc
adc
cmp
leave
sbb
rcll
cmpb
and
addb
xor
popf
jle
sbb
and
xor
add
aam
mov
xchg
shr
cld
add
sub
inc
pusha
adc
pop
sbb
iret
scas
and
jo
jo
mov
insl
test
out
cmpb
inc
loopne
sub
enter
popa
cmp
push
insl
jmp
mov
inc
jbe
aas
pop
and
jl,pt
std
and
lret
mov
test
jl
inc
dec
adc
lret
lock
sub
adc
adc
cwtl
fidivs
cmp
in
xchg
jo
mov
mov
pop
lea
pop
lret
jae
xor
ljmp
or
dec
aam
adc
lea
sub
stos
test
std
sbb
xor
loopne
in
loope
pop
cli
in
fwait
push
lds
xchg
stos
test
mov
mov
inc
ljmp
out
lea
stc
gs
jbe
gs
mov
add
or
inc
xchg
push
loop
aaa
rcrl
inc
pop
mov
inc
adc
inc
arpl
inc
mov
xor
jnp
inc
mov
icebp
iret
addb
jb
leave
dec
pop
jne
jae
popa
das
pop
aad
push
pop
xor
in
lods
jno
daa
inc
scas
test
mov
mov
inc
and
nop
sahf
mov
cld
sbb
not
and
aaa
or
xor
daa
inc
out
loopne
adc
sub
aam
daa
call
or
lahf
add
inc
inc
incb
pop
test
popa
pop
aam
mov
pop
add
ds
test
mov
mov
ffreep
mov
dec
add
add
mov
jecxz
xchg
push
in
push
xor
in
push
mov
add
icebp
or
repz
movsl
or
orl
ja
sub
cli
jns
fsub
loope
dec
sarl
repz
ret
and
mov
outsl
mov
add
mov
and
inc
pushf
push
sbb
scas
popa
pop
sbb
mov
loope
sub
lds
inc
loopne
aas
out
jp
iret
adc
push
leave
pop
and
adc
repz
cmpsb
xchg
pop
enter
pop
jne
add
nop
adcl
sub
movsb
sarb
es
mov
shl
mov
and
fcoms
lock
invlpg
testb
lret
loope
cltd
inc
xchg
in
clc
push
xchg
shrb
les
mov
shr
add
jmp
pop
scas
notb
out
and
cld
out
ficompl
mov
aad
inc
mov
adcb
lock
ret
stos
jmp
lea
push
push
dec
dec
mov
fnstenv
sub
dec
xor
cld
loopne
and
fisubl
inc
push
popf
jno
push
push
push
or
xchg
xor
test
xor
xchg
and
call
mov
jecxz
mov
in
enter
loop
inc
and
imul
push
and
daa
call
lds
clc
pop
xorl
test
jb
lods
or
cmpl
dec
mov
or
test
adc
outsb
pop
test
pop
cld
test
test
inc
call
add
add
dec
andb
out
and
jmp
out
xchg
das
mov
mov
mov
aad
daa
test
push
add
push
fdivr
daa
pop
xchg
test
jo
and
mov
lret
push
mov
iret
cwtl
out
int
push
push
push
loopne
xchg
fdivr
out
ljmp
and
mov
cli
add
out
sbb
mov
mov
aam
add
div
not
gs
mov
inc
enter
mov
sub
fs
xlat
mov
imul
int
mov
test
fnstcw
stos
or
xor
std
mov
test
cmpsl
outsl
call
cld
xor
push
push
out
ds
xor
push
and
call
out
rorb
push
cld
dec
fdivrs
call
jmp
and
and
std
or
pop
addr16
cmc
lret
mov
mov
push
dec
adc
mov
mov
adc
and
xor
inc
mov
sbb
jne
mov
jge
ret
out
and
sti
and
flds
lahf
xor
jne
jp
mov
sbb
imul
cltd
sub
aam
adc
ret
and
xor
out
int3
ds
scas
cltd
test
stos
adc
xorb
sub
pop
xchg
insl
int3
inc
mov
out
xor
pop
push
call
aas
adc
mov
jno
scas
adc
repnz
cmp
lds
and
stc
outsb
adc
jbe
adc
test
add
icebp
mov
ljmp
std
and
rorb
cmpsb
mov
cmpsl
jge
xor
jb
fsts
stos
and
push
push
adc
mov
mov
int3
cwtl
subl
add
cmp
jecxz
movsb
cmp
sub
loop
stos
pop
xor
dec
sub
and
and
xchg
adc
cmp
pop
cltd
mov
mov
arpl
sbb
mov
repnz
pop
sub
cld
adc
xchg
xchg
adc
fsubrl
nop
pop
in
sub
dec
aas
jnp
leave
cmp
popl
jp
int3
cmp
shlb
ds
lods
or
jnp
inc
inc
in
mov
xchg
sahf
pop
popf
movsl
push
inc
mov
push
mov
sub
inc
ljmp
aam
mul
mov
test
mov
or
xor
inc
mov
rcl
push
jne
stos
xlat
dec
mov
fiadds
mov
cmpsb
push
les
outsb
cmpsl
sub
xchg
pop
pop
aas
xchg
dec
sub
mov
gs
and
or
and
mov
bound
and
sub
enter
mov
jo
mov
pusha
nop
and
sub
inc
add
and
mov
add
xor
dec
icebp
mov
cs
mov
fcoms
jno
js
inc
mov
jno
add
mov
push
jbe
loopne
call
test
inc
test
dec
stc
push
mov
inc
mov
loop
jae
popa
cmp
cmp
sub
inc
xor
dec
test
mov
sub
test
inc
jmp
movsl
nop
xchg
sbb
shll
and
push
jb
mov
sbb
push
mov
cld
sub
and
push
shrl
mov
movsl
or
shlb
es
push
stos
pop
mov
scas
or
xchg
cmp
mov
outsb
outsl
mov
add
xchg
subb
dec
int3
mov
in
cli
ret
aas
int3
fisubrl
inc
repz
or
mov
push
push
stos
nop
sub
adc
xor
mov
inc
lods
mov
dec
out
adc
push
jle
add
inc
sbb
add
jne
adc
call
jb
ror
mov
imul
rorl
mov
aad
cmp
inc
mov
push
imul
testb
mov
daa
inc
xor
std
insb
decb
jge
adc
test
xor
loope
sbb
dec
testb
lret
loopne
loop
push
pop
clc
dec
add
mov
push
mov
clc
dec
fimull
stos
das
jmp
movsb
or
or
test
sti
mov
cld
outsl
popa
mov
adc
pop
add
mov
addr16
sbb
add
sbb
jnp
jo
sbb
std
loop
das
idivb
add
bound
outsl
imul
rol
xchg
cmpsb
divl
sbb
jns
mov
and
inc
popf
pop
inc
andl
push
sahf
addr16
enter
mov
add
pushf
aaa
add
lods
sbb
push
bsf
mov
adc
pop
jb
inc
adc
mov
daa
xchg
call
repz
ficomps
jns
lock
sub
dec
inc
mov
int3
jno
daa
adc
push
lcall
pop
mov
inc
inc
mov
fcoml
xorb
cli
dec
lret
dec
call
sti
test
fiaddl
pusha
fimull
inc
sti
stos
loope
fwait
xchg
jno
int3
push
out
data16
adc
jb
repz
arpl
fidivs
sbb
jno
out
xchg
mov
lods
lahf
mov
jmp
out
pop
cmp
movl
lahf
pop
cmp
xor
testb
add
or
or
xchg
mov
imul
adc
mov
pop
testb
movsb
ds
gs
pop
xor
mov
stos
test
or
pushf
dec
imul
mov
loope
fnstenv
jnp
rolb
xchg
adc
mov
adc
fimuls
xor
jne
insl
pop
inc
mov
das
lea
adc
xor
or
cltd
out
jecxz
cs
sub
lock
sub
int
push
insb
sbb
les
jno
inc
mov
orb
rorb
cmp
push
dec
vunpcklpd
aas
xor
jo
fdivrl
sar
inc
lds
imulb
push
mov
push
ss
call
cmp
into
push
mov
fwait
aas
cmp
and
out
cmp
adc
loop
xor
mov
ret
xor
sub
std
pop
mov
mov
fdivrs
xorb
mov
das
fdivrl
inc
in
mov
xor
inc
jnp
jns
or
pop
and
aam
jnp
xchg
xchg
into
push
adc
or
mov
mov
lret
in
movsl
lock
rcll
xchg
adcb
pop
sub
mov
roll
inc
movsb
cmp
test
dec
adc
test
popf
inc
and
pop
test
mov
cs
mov
xchg
jne
cmc
icebp
dec
sbb
scas
adcb
test
and
ficompl
addr16
push
lahf
scas
sti
jo
cmp
test
jnp
cmp
orb
xor
repz
pop
jge
shll
stc
xchg
outsl
clc
push
jne
ficoms
jecxz
gs
inc
dec
divb
or
loop
jge
mov
sahf
test
sub
push
jecxz
sbb
data16
sbb
aaa
mov
pop
xchg
push
out
daa
jne
push
les
fucomip
mov
stos
loop
in
push
xor
cld
and
and
fwait
push
inc
sub
test
or
mov
sbb
into
pop
cmpsl
ljmp
in
movq
sarb
xchg
pop
fs
jne
in
es
imul
xchg
rorl
icebp
dec
ds
sbb
inc
lcall
int
pop
and
mul
cmpsb
and
icebp
lock
lds
or
test
add
aam
fnsave
push
mov
repz
orb
out
and
jmp
mov
adc
xor
push
push
sub
mov
mov
je
fisttpll
fwait
es
rcrl
push
and
sarl
fcmovbe
sub
sub
dec
addr16
lods
insb
ret
and
mov
es
xchg
shll
cmp
inc
pop
fst
sbb
into
and
mov
mov
mov
repz
jae
movntps
mov
lret
fstl
mov
xor
sub
icebp
dec
pop
or
xor
out
mov
cmp
jns
mov
cmp
and
push
mov
call
decl
sti
jbe
aad
pop
push
call
daa
jns
cld
test
cmp
pushf
test
xchg
ret
mov
std
sub
add
in
and
or
xchg
or
int3
mov
imulb
dec
in
fildl
mov
jb
cmpb
call
cmp
and
int3
push
cmp
add
cmp
and
lahf
repz
and
int
sub
cmp
jl,pt
push
mov
shlb
cmp
out
add
sbbl
dec
xchg
clc
inc
mov
jle
jne
je
xor
jecxz
test
in
xchg
jge
inc
jle
test
xor
andl
shlb
jo
negl
mov
mov
dec
push
mov
das
jecxz
jno
mov
sbb
sub
nop
aas
xchg
xor
cmc
mov
enter
adc
loope
sub
inc
loope
ret
or
imul
xor
sti
mov
inc
pop
cs
rorl
enter
xchg
jl
or
jge
mov
ret
in
out
ss
outsl
adc
int
fidivl
mov
jo
xor
xor
add
stc
jp
and
data16
outsb
sub
adc
stos
repnz
cmp
lret
hlt
add
xor
mov
enter
sbb
addb
pop
out
dec
xor
cli
das
shlb
rolb
cli
scas
xor
mov
sbb
sahf
jmp
jg
and
mov
xchg
sbb
push
mov
dec
sub
lea
call
sub
cli
and
ret
sbb
sahf
add
in
jne
test
cmp
jnp
pop
call
mov
xor
pop
jbe
inc
dec
sti
or
std
and
fdivrl
data16
das
xchg
or
jno
jno
cmp
cs
fwait
sub
or
adc
sbb
cmpsl
std
xor
cld
clc
mov
xor
add
clc
cmp
inc
aad
push
mov
gs
mov
mov
push
push
or
ds
adc
subb
and
int3
jge
clc
xchg
xor
jl
sbb
inc
icebp
or
dec
cli
stos
leave
jecxz
adc
shll
add
dec
in
dec
inc
or
and
adc
sar
divb
or
sbb
out
js
enter
aaa
es
fbstp
nop
or
in
icebp
pop
jae,pn
xor
dec
mov
jecxz
repz
xchg
fisttps
js
insb
cs
cmp
or
aas
inc
clc
inc
fcoml
sbb
decb
test
push
mov
or
sbb
push
mov
mov
or
arpl
fs
sub
xchg
rorb
mov
shr
push
add
ficoml
push
add
xchg
push
aas
movups
mov
sbb
add
and
mov
mov
testb
stos
add
inc
xor
jmp
negb
cmp
adc
or
popa
xor
shl
sub
xor
jge
out
add
fadds
cltd
orb
mov
adc
push
repz
stc
xorl
jmp
jb
and
xor
sub
cmp
sub
lea
icebp
inc
push
ret
mov
imul
clc
xor
sub
imul
add
mov
in
mov
dec
cld
pop
push
sbb
insl
idivl
sti
add
adc
xor
dec
inc
add
jg
xor
fmull
lock
and
sbb
and
out
inc
dec
repnz
adc
or
popa
imul
popa
xor
xor
or
push
xor
mov
xchg
sbb
inc
test
lock
push
and
push
adc
stos
and
push
xor
jnp
push
fisttps
or
movsl
and
sbb
fwait
test
mov
push
jmp
jns
incl
andl
cmpsl
imul
ds
jp
sub
push
push
cltd
sub
in
lret
insb
jmp
repnz
cwtl
sti
adc
pop
pop
jg
mov
jo
and
cmp
bnd
cmp
stc
sub
bound
cmp
adc
pop
je
sub
inc
lret
or
jns
dec
stos
and
xchg
stc
lea
lea
inc
in
add
std
mov
ss
mov
scas
nop
fstpt
and
testb
pop
jbe
pop
in
call
mov
add
pop
cmp
je
lock
mov
lret
js
sahf
mov
test
and
mov
ds
xchg
stos
fbld
call
jmp
fldenv
aam
es
push
into
lret
lret
popa
or
icebp
sarb
ret
arpl
mov
int
adc
push
xor
sub
dec
rcll
mov
cmp
cmp
mov
testb
into
pop
push
mov
fs
push
sub
lods
adc
mov
int
jmp
movb
insl
stc
push
rorb
pop
dec
cmp
adc
mov
jno
pop
mov
test
shl
icebp
sub
lahf
je
inc
adc
cmp
sahf
mov
xchg
and
int3
paddb
push
adc
sub
jbe
jno
inc
nop
xlat
mov
xchg
lret
mov
and
andl
std
jne
clc
inc
roll
cmp
int3
mov
or
pop
add
push
push
psubw
mov
je
jns
ret
push
mov
lret
cmp
xchg
cmp
jl
mov
ljmp
hlt
pop
dec
cwtl
push
lea
outsl
js
sbb
pop
cmp
loope
adc
lods
mov
or
fsubrs
ljmp
fisubl
sub
add
subl
pop
push
sub
dec
xorb
cmp
call
fisubl
clc
jb
add
mov
lea
inc
incb
and
scas
jno
jbe
bound
repnz
xchg
inc
punpcklwd
pop
cmp
pop
push
lahf
cmp
ljmp
pop
jne
icebp
adc
inc
jb
movb
xchg
push
xor
fdivs
cmp
push
lea
mov
mov
mov
jl
ss
fdiv
movsl
dec
cmp
pushf
jne
cmp
cmp
loope
xor
in
aaa
sub
pop
mov
test
cmp
aam
mov
out
push
and
or
sahf
sbb
inc
fdivl
pusha
loope
setne
jmp
stos
imul
je
test
cli
jbe
stos
mov
enter
dec
aaa
sbb
lahf
das
pop
sub
sbb
imul
or
sub
pop
or
push
xor
outsb
dec
in
and
inc
sarb
ret
cltd
sbb
outsb
stos
and
sbb
pop
adc
fcoms
mov
xchg
jbe
ja
pop
mov
or
mov
repz
std
ja
dec
stos
adcl
pop
popa
dec
xchg
or
pusha
imul
and
fwait
jg
scas
stc
cmp
aas
sarl
and
stos
sbb
ja
imul
popa
stos
jp
dec
or
gs
mov
cmpsl
and
aaa
xchg
inc
sbb
out
int3
daa
push
xor
popa
mov
repz
out
rcll
insl
sub
inc
sbbb
shll
mov
icebp
xchg
push
xor
aas
lds
int
push
test
pop
cmp
std
out
pop
and
sub
push
sbb
ret
mov
xor
mov
insl
ret
push
scas
xor
and
adc
mov
std
cmc
jmp
or
xorb
imul
pop
movsl
cmp
cmp
pop
jo
add
lret
sar
aaa
push
mov
xor
repnz
pop
push
lea
leave
loop
and
and
test
adc
dec
scas
hlt
sbbl
jle
imul
ljmp
sub
outsb
dec
clc
xchg
xor
xor
int3
and
sarb
push
fidivs
shrb
add
add
mov
insl
mov
cmp
jae
mov
jo
mov
addl
mov
push
inc
cld
or
push
add
aas
cmp
and
jae
es
xchg
jbe
mov
xor
pop
xor
inc
movsl
and
jmp
aaa
stc
xchg
lret
pop
sub
xchg
mov
xor
xor
and
xchg
sub
xchg
inc
sbb
test
jg
shrl
jne
int3
cmp
cmp
and
addr16
sub
xor
dec
sbb
cmp
or
sbb
popf
or
out
fdivs
cli
divl
add
int3
and
leave
outsl
xlat
sbb
inc
add
cmp
xor
flds
or
xor
movsl
xor
rol
je
or
mov
inc
jne
sbb
xor
ret
cltd
lretw
aaa
scas
ret
and
out
sahf
sti
sub
mov
ja
or
mov
inc
pop
sbbl
inc
inc
add
ds
or
js
roll
cmp
xor
pop
jno
les
inc
js
push
mov
cmp
stos
jle
bound
or
stc
repz
in
xor
xor
adc
test
daa
add
jmp
inc
movsb
stc
cmpsb
sub
mov
pop
pop
mov
stos
add
jge
pop
cmp
ds
imulb
push
in
and
mov
pusha
push
fwait
mov
fcompl
push
mov
ljmp
pushf
jae
xchg
cli
mov
jmp
push
fimull
and
pop
inc
ror
sbb
int3
ja
inc
mov
jmp
addr16
pop
cld
or
sub
xor
std
enter
popf
mov
hlt
jl
lahf
loopne
inc
movb
pop
outsl
push
xorl
hlt
xchg
or
popf
shr
add
push
jmp
clc
cs
mov
dec
push
mov
pop
mov
or
jnp
add
mov
in
inc
mov
test
mov
loopne
mov
stc
call
aas
inc
or
mov
xor
loopew
mov
push
pop
mov
cmp
out
mov
or
xchg
sub
mov
call
push
pushf
lahf
pop
cmp
push
mov
mov
adc
adc
sbb
inc
call
jmp
popf
inc
arpl
aad
adc
inc
push
xchg
mov
dec
out
sub
idivl
call
sub
cmpsb
adc
js
cmp
rcrb
insb
pop
push
pop
push
cmp
xlat
fbstp
lahf
jle
xor
add
int
rcll
or
jo
mov
test
sub
xor
xor
jo
add
inc
test
xor
dec
aas
fcoms
out
das
lcall
jb
scas
or
rclb
inc
cs
les
enter
inc
xchg
cmc
inc
addb
xor
xchg
icebp
cmp
mov
cmpl
inc
out
mov
inc
or
jae
pushf
insl
in
jb
hlt
add
push
sub
or
push
xor
cmp
cmc
sub
cmpsl
push
xor
data16
adc
mov
xor
pop
vrcpss
fwait
add
test
adc
xor
xor
mov
cld
clc
hlt
pop
xlat
outsl
cmp
outsl
stos
adc
add
xlat
daa
ja
scas
fwait
add
loopne
xor
les
in
lret
stos
dec
mov
jg
jl
xor
cltd
adc
fcomp
mov
xlat
jns
add
xor
sbb
dec
xchg
sub
repz
xor
or
mov
xor
test
add
push
xor
mov
push
lret
icebp
jo
xor
jbe
push
movsl
sub
mov
push
sbb
loop
dec
jns
or
cmp
out
fcomi
lock
pop
popf
ljmp
test
mov
enter
sub
movl
fld
lea
cld
add
jne
sbb
xor
cwtl
pusha
jp
sub
enter
mov
or
scas
adc
es
xchg
std
aaa
xor
mov
nop
das
out
in
jb
fbld
xor
add
mov
es
adc
or
inc
dec
dec
rcr
cwtl
es
mov
aam
inc
mov
cli
adc
xor
pop
pcmpgtb
pop
in
push
jmp
cmc
or
iret
pop
sub
pop
xchg
inc
push
mov
xchg
into
lcall
sub
xchg
jb
xchg
add
mov
jb
out
cmp
outsl
shrb
shlb
scas
cmc
std
mov
ret
sar
mov
pop
movb
bound
adc
in
adc
popf
adc
mov
push
mov
mov
push
sbb
lahf
outsb
mov
arpl
popf
in
cmp
int
xor
sbb
rorl
cmp
aaa
jne
jo
call
ret
sub
sub
mov
adc
pop
adc
push
mov
dec
outsb
pusha
jno
inc
pop
in
adc
call
rcll
add
lods
jp
bound
fwait
push
call
andl
mov
mov
sarb
xchg
call
mov
xor
dec
inc
je
lods
sub
pop
inc
fsts
mov
inc
xchg
push
cmp
jp
fiadds
jmp
pusha
push
and
out
mov
je
out
xor
int
hlt
scas
shr
xchg
push
xchg
mov
sub
push
push
scas
inc
mov
scas
mov
sub
xchg
xor
mov
xor
mov
xor
pop
les
mov
bound
out
jmp
mov
jmp
sub
adc
pop
outsl
fs
stos
aas
movsb
xlat
xor
push
and
lahf
adc
sti
cmp
pop
jmp
inc
dec
adc
pop
clc
push
push
out
sub
sti
ljmp
or
pop
dec
add
push
add
movsl
cwtl
mov
mov
std
gs
pusha
es
inc
adc
pop
sahf
fdiv
bound
vpsadbw
and
xchg
stos
jns
mov
dec
inc
add
fstps
jne
push
xchg
and
sbb
movsl
fstpl
mov
xor
test
and
mov
jb
push
xor
mov
cmpsl
sub
xchg
jnp
das
cmc
mov
cmpsb
cs
outsl
aas
lods
adc
jl
cmp
leave
jecxz
stc
sbb
imul
xor
push
xchg
xchg
into
push
push
stos
test
mov
ss
mov
mov
sbb
or
ljmp
je
xchg
fisubrs
mov
pop
pop
test
cs
or
inc
adc
into
iret
lahf
push
or
lock
cmc
sbb
jnp
insl
sahf
das
jne
jb
cs
into
je
jbe
xor
jl
cmp
int3
aaa
mov
cmpsl
dec
loop
pop
clc
mov
das
add
xchg
out
sub
inc
dec
and
lea
insl
or
arpl
inc
insl
or
sbb
enter
dec
les
stos
insb
push
sub
sbbb
dec
mov
jge
insb
es
xchg
inc
gs
lods
imul
lods
adc
es
outsb
cmp
jl
or
int3
dec
out
cmp
mov
push
adc
iret
pop
push
jge
xchg
daa
jmp
jbe
mov
mov
inc
add
sbb
cmp
jae
xchg
ljmp
stos
lods
sbb
je
mov
fdiv
cld
dec
sbb
scas
test
sbb
add
stc
dec
aam
nop
pop
push
jo
cmpsl
ljmp
pop
lock
repnz
sub
je
fdiv
cmp
sti
dec
into
xchg
jns
cmp
adc
jmp
push
pop
pop
or
ficomps
and
aaa
das
or
bnd
scas
cmpsl
and
cmp
mov
add
mov
sub
fimuls
pop
nop
jecxz
cltd
movl
add
mov
lds
lock
push
adc
movsl
lahf
mov
jne
cmp
jbe
mov
in
or
jb
popa
push
pop
mov
cld
ss
dec
iret
xor
cs
and
sbb
jae
lds
outsb
sbb
insl
loop
adc
lea
xorb
enter
xchg
sbb
mov
xchg
mov
xchg
in
jmp
dec
mov
ss
mov
lret
pop
clc
mov
bound
aaa
xchg
cli
ljmp
in
sti
push
and
lods
sbbl
jns
add
cmc
loopne
pop
mov
addr16
lret
pop
or
popf
loop
mov
adc
lock
xor
mov
rclb
or
pusha
mov
clc
mov
xor
out
pop
inc
out
mov
repnz
in
jmp
into
cli
sbb
pop
stc
jp
cli
cs
pop
pop
and
mov
xor
iret
mov
and
xor
jo
jbe,pn
lods
inc
and
jl
ja
push
mov
push
lods
xlat
imul
jl
rcr
jp
mov
outsb
cmpsb
add
iret
cltd
lahf
inc
mov
gs
dec
fisubrs
out
iret
lods
jge
pop
xor
in
mov
push
movsl
xor
in
fimull
sub
aad
sub
push
xor
hlt
int3
jmp
movsl
cmp
xor
lahf
std
mov
push
je
aam
mov
sbb
out
mov
mov
push
inc
or
add
xor
adcb
xchg
je
push
in
xor
cmp
fcomi
adc
and
sub
add
sbb
enter
cld
outsb
push
inc
fs
add
pop
lock
xor
and
arpl
dec
roll
rcll
aaa
mov
push
into
fidivl
pop
xchg
stc
xchg
push
pop
sti
lret
pop
icebp
aam
pop
push
xor
inc
je
cmpb
cmp
popa
adc
mov
out
mov
push
enter
call
sbbl
xchg
movsb
push
adc
fcmovnb
jnp
iret
xor
dec
xchg
out
and
mov
pop
ret
mov
filds
cltd
ljmp
adc
pop
movsb
jnp
sahf
shl
jnp
sbb
and
mov
pushf
test
xchg
pop
pop
jno
shrl
in
xor
jp
les
xchg
xchg
scas
ret
fs
push
adc
aaa
sub
mov
es
call
pop
push
xchg
mov
or
jae
jb
test
jb
or
bound
icebp
jbe
cmp
cmp
dec
jmp
sbbl
inc
xor
dec
pop
adc
mov
sub
int3
out
movsl
cmp
inc
mov
cs
add
lods
outsb
jmp
js
sbb
rep
nop
pop
mov
call
repnz
jle
and
mov
mov
or
and
shr
movl
loop
add
xchg
mov
jns
mov
movsb
push
out
sbb
xor
out
add
mov
data16
mov
call
les
insb
add
push
add
mov
jp
dec
and
dec
orb
and
or
xchg
int3
stos
dec
mov
scas
and
and
fs
cmpb
test
data16
or
mov
or
mov
adc
dec
pop
and
jl
cld
cmpb
push
mov
mov
mov
inc
cmp
adc
test
mov
cmp
lods
stc
sub
cmp
push
out
xchg
mov
in
mov
push
je
int
mov
inc
popf
sbb
inc
mov
sbb
xchg
lods
lret
ljmp
fcmovnu
test
call
idivb
push
fcompl
or
jne
lock
int
and
adc
jbe
jmp
iret
test
std
ds
mov
aad
rcll
push
bound
std
add
cs
loop
ret
push
cmp
jl
sub
xor
push
iret
scas
push
sbb
pop
mov
out
rclb
jp
mov
insb
pop
and
mov
xor
jmp
push
sarl
sbb
jmp
or
loop
jbe
iret
mov
test
aas
rorb
push
ja
xchg
or
inc
pop
lret
lods
cmpl
ret
scas
mov
repz
push
add
iret
lock
jne
in
mov
addb
or
jae
mov
pop
je
mov
mov
jbe
mov
divl
dec
xor
cltd
int
dec
mov
or
lret
push
inc
push
sbb
mov
jg
dec
push
jecxz
es
and
int3
outsl
pop
jo
xchg
xlat
jbe
push
icebp
mov
push
add
cmp
dec
mov
fiadds
pop
fs
dec
xorb
dec
fldt
and
mov
push
jp
add
jmp
cli
fs
xchg
add
outsl
rorl
popa
inc
mov
jle
sahf
adc
dec
or
daa
aas
mov
mov
cmpsl
ss
cltd
mov
das
stc
mov
xor
loope
mov
ret
nop
rorl
mov
sub
mov
addl
cmp
xor
mov
outsb
mov
fsts
mov
pop
fwait
mov
cmp
xchg
sbb
lock
mov
inc
dec
and
sahf
fidivrl
call
subb
rcrl
fisubrs
rcr
inc
jmp
jo
cmp
rcll
js
xor
add
jl
adc
or
scas
mov
push
out
inc
cmp
adcb
mov
pop
lret
inc
les
cmp
mov
jbe
jnp
sbb
inc
xchg
ljmp
incb
stos
insl
incl
fistl
icebp
and
cmp
jmp
add
xor
inc
cld
or
rcrl
in
int
dec
out
and
adc
imulb
xchg
arpl
frstor
mov
and
repnz
cmpsb
and
movsb
shll
add
push
inc
in
jae
mov
mov
out
push
mov
xor
add
out
inc
sub
and
jg
movsl
dec
arpl
call
pop
mov
jne
sub
mov
inc
inc
adc
push
jnp
cmp
roll
jb
call
jg
pop
inc
and
sbb
mov
enter
cmp
cmp
jb
xor
ss
shrb
inc
mov
cli
jp
xor
xor
mov
or
shll
pop
mull
xor
or
sbb
xorl
jecxz
stc
or
cmp
and
stc
rcl
clc
int3
pop
cli
or
sub
and
icebp
jnp
pushf
xchg
pop
rorl
cmp
cmpb
jmp
dec
sub
sub
lods
fldl
jae
push
cmp
mov
movsl
mov
popf
mov
sbb
cmp
mov
lret
or
sarl
loopne
mov
pop
outsl
adc
jae
aas
mov
dec
mov
or
inc
or
testl
push
inc
movsl
in
xor
push
cwtl
and
ret
inc
or
cmc
xchg
lret
out
loop
bound
iret
fincstp
push
xor
jne
push
xor
sub
pop
add
out
add
inc
jecxz
add
mov
pop
or
cs
xor
mov
mov
call
jns
sbb
add
jecxz
clc
mov
pop
push
andl
pop
dec
mov
sti
and
jno
add
lret
pop
cs
jae
dec
lds
push
mov
dec
into
insb
imul
ss
and
pushf
inc
jnp
aas
scas
and
xor
and
jb
add
mov
jge
mov
xor
pushf
dec
xor
mov
stos
dec
inc
and
jle
adc
out
dec
nop
pop
push
xor
mov
cmp
mov
js
sbb
push
xor
mov
aam
xchg
xchg
roll
ret
inc
adc
add
push
icebp
sbb
loope
xchg
into
adc
cmp
test
mov
push
cmc
lret
mov
cmpsl
xlat
jle
xchg
mov
cmp
mov
scas
dec
or
orl
push
sbb
test
fucomp
inc
rclb
out
pop
pop
sub
pop
xlat
and
cmp
xchg
pushf
scas
data16
cmp
mov
mov
xchg
adc
pusha
js
and
outsb
popf
jg
cld
jl
lea
out
mov
push
mov
pop
lods
fs
out
mov
pop
mov
pop
push
loope
cmp
out
sbb
adc
jo
rcrl
in
xchg
js
xchg
xor
data16
aad
mov
cmp
jb
sub
out
scas
or
pushf
pop
jne
mov
ds
mov
sbb
sbb
mov
into
call
rorb
inc
mov
pop
test
push
sbb
and
mov
pop
repnz
or
orl
int
enter
cmp
mov
push
repz
ds
shrb
sahf
cmp
jb
mov
mov
ds
mov
fs
xor
pop
sbb
ret
lret
mull
ficoms
push
adc
jecxz
sub
imul
aaa
fists
mov
xchg
jmp
lret
mov
dec
idivl
arpl
sbb
scas
sbb
xor
fdivr
cwtl
cli
mov
xor
push
inc
adc
jl
cmp
fldcw
add
or
mov
out
lock
adc
dec
mov
js
xchg
les
dec
xor
fistpll
daa
mov
idivl
sti
mov
es
push
pop
aam
sti
out
cld
sbb
loopne
cli
loope
mull
pop
mov
cmp
jno
xor
insb
fst
adc
inc
push
call
lcall
clc
ja
rclb
cmpsb
adc
cmc
pop
leave
fcmovb
jbe
repz
loopne
loope
sbbl
jnp
aas
add
shrl
cmp
push
clc
adcb
inc
popa
mov
xor
leave
sti
mov
pop
xor
dec
icebp
push
sub
clc
mov
ffreep
jmp
repnz
cmp
rcrl
into
sti
inc
loop
inc
addb
pusha
lock
cwtl
cmp
adc
es
sbb
insl
dec
cld
xchg
movsl
cmp
push
or
push
pop
inc
pop
leave
std
into
aaa
push
mov
or
fnstcw
sbb
addb
rorl
test
mov
jae
dec
lods
leave
mov
pop
inc
rol
pop
push
stos
stos
clc
inc
stos
jae
in
jp
scas
mov
and
popl
cs
cli
mov
inc
push
mov
ja
pop
int3
push
push
pop
or
mov
xchg
dec
pop
mov
test
into
inc
adc
dec
adcl
cs
gs
divb
mov
jl
popf
ljmp
pop
repz
pushf
add
jbe
jmp
pop
cmc
push
or
jne
cmpsl
fldcw
and
loope
dec
or
xchg
aas
push
or
and
add
adc
mov
addb
adc
jmp
mov
roll
jne
pusha
dec
push
cmp
sbb
fists
xor
xor
lret
cld
and
lods
cmp
lods
jbe
or
andl
push
addr16
sahf
and
popa
push
je
sbb
test
jbe
int3
mov
add
cmp
xchg
test
or
adc
xchg
aam
or
dec
xchg
orl
stos
jecxz
frstor
jmp
test
or
cs
je
mov
movsl
push
nop
iret
xor
rcl
icebp
cli
jmp
jnp
pop
jne
or
inc
lods
jle
std
cld
in
sub
push
movsb
dec
jmp
aas
movsl
fiadds
or
adc
fidivrl
adc
inc
mov
sbb
adc
jbe
hlt
imul
fs
inc
loop
orl
adc
adc
int3
cmp
sbb
lds
cmp
pop
popf
addb
dec
pop
gs
popf
cmp
hlt
test
mulb
push
stos
lea
push
pop
clc
lret
jp
adc
add
dec
ret
push
fnstcw
mov
rcrl
xchg
ficoml
cs
enter
jg
je
enter
test
data16
adc
or
dec
xlat
adc
pop
and
sub
add
lret
pop
frstor
or
pop
fldenv
fldl
inc
or
psllq
cmp
push
sub
lds
insb
push
inc
shr
out
jns
push
sbb
gs
adc
push
push
out
push
outsb
xchg
les
mov
ss
jb
cmp
mov
pop
sub
and
loope
push
iret
shll
shr
cmp
idivb
sti
xor
cld
es
lret
lret
push
cli
fcoms
cwtl
inc
int3
das
push
in
call
lret
xchg
lret
jnp
fimuls
sub
inc
mov
fisubrs
pop
jns
adc
mov
aam
cwtl
push
repz
fnstenv
adc
int3
jl
jp
jno
xor
push
jmp
fimull
data16
scas
dec
test
mov
pop
xor
adc
inc
pop
sub
inc
rolb
cltd
bound
inc
mov
push
xor
call
into
ficoms
mov
into
or
mov
stc
outsb
lock
out
xor
and
xchg
mov
jmp
fsubrl
push
mov
stc
stc
addb
mov
and
adc
and
and
ret
jge
cmpsb
push
pop
bound
dec
ss
cmp
lahf
mov
cmpb
loope
dec
dec
sbb
lods
adc
xchg
call
inc
shlb
popa
or
cltd
pop
sbb
jae
sub
jae
das
jp
pop
movsb
cmp
ja
pop
test
js
lods
call
sbb
arpl
cmp
jb
or
jne
or
js
cmp
cmp
in
jae
sub
mov
mov
xlat
out
mov
test
xor
call
add
push
orb
xchg
jmp
add
mulb
in
xchg
rclb
negb
add
mov
in
mov
add
push
push
frstor
in
cli
nop
xchg
out
stos
sub
je
and
ret
xchg
ja
stos
pusha
cld
pop
xchg
push
inc
mov
sub
sahf
adc
pop
lods
xor
and
lahf
insl
daa
cmc
movsl
mov
mov
test
mov
sbb
sbb
enter
push
mov
inc
push
ficoml
out
pop
fisttpl
jmp
sbb
mov
adc
insb
jecxz
jno
or
mov
cs
mov
ret
test
or
add
movl
mov
into
xchg
dec
sbb
lds
sahf
xor
push
jo
lcall
and
dec
and
dec
cmp
sbb
scas
ret
outsb
leave
int3
loope
shrl
sub
or
outsl
and
push
in
lea
dec
insb
and
jl
pop
mov
ret
sbb
jp
andl
out
push
push
mov
std
jl
push
push
fs
and
int3
push
cmp
push
xchg
mov
inc
test
mov
in
les
bound
enter
fsub
fbstp
aad
sub
xchg
and
in
cmp
mov
cs
out
adc
hlt
pushf
xchg
jno
jne
rorl
test
mov
pop
sub
sbb
xchg
pop
dec
ret
sbb
lods
ds
adc
ja
jno
pop
xor
push
fadd
fdivs
rcr
xchg
mov
lock
jecxz
jb
or
mov
pop
sahf
xchg
mov
add
test
lret
loop
pop
aaa
cltd
cmp
xchg
mov
sub
mov
popa
or
xlat
cmp
cmp
sbb
xor
ss
or
loope
add
jae
jb
test
mov
push
shrb
jmp
xor
mov
ficoms
ret
xlat
or
inc
iret
mov
or
into
inc
mov
int
adc
cmp
add
fiaddl
and
cs
mov
and
or
lret
mov
xor
pop
ret
ret
testb
js
sub
sub
dec
pop
cmp
add
and
pop
int3
test
and
xor
add
loope
xor
addl
jnp
cwtl
push
enter
repnz
stc
add
popa
push
fisubrl
cmp
mov
push
xchg
or
xchg
mov
fldcw
shll
mov
es
push
push
xor
mov
add
xchg
mov
ret
add
divb
jb
lea
or
xchg
push
sub
cmp
into
call
cmp
rolb
mov
mov
fs
jns
bound
pop
lea
movsb
pop
mov
sub
sub
xchg
add
lea
pop
mov
bound
or
dec
xchg
call
hlt
addl
stos
cltd
aas
adc
fistpl
nop
pop
cmpsl
pop
loope
leavew
jge
mov
out
outsl
cmp
mov
xor
or
loope
add
inc
cmpsb
ljmp
inc
jmp
lock
dec
xchg
push
xor
ljmp
xchg
les
mul
adc
inc
sbb
mov
sub
jp
stos
jae
xor
dec
mov
pop
in
jle
popf
test
jp
jge
sub
xchg
test
loop
jbe
mov
and
inc
mov
movsb
ds
cmpsl
sub
fildl
shr
xchg
shl
popf
xchg
push
mov
adc
out
filds
nop
iret
push
sbb
movsl
ja
icebp
add
call
vpsubq
pusha
push
in
les
movb
inc
pop
data16
mov
ja
mov
sub
sbb
mov
adc
les
in
mov
jo
jg
dec
dec
call
imul
add
sbb
xchg
pop
test
test
mov
adc
scas
adc
mov
or
aas
cmp
jl
nop
outsl
push
and
leave
ja
aad
mov
pushf
add
pop
ljmp
in
jmp
outsl
mov
push
in
repnz
mov
xchg
lret
mov
mov
add
cmpsl
enter
cmp
ss
aam
sub
mov
and
adc
mov
or
ja
adc
sub
inc
jle
mov
mov
addb
sti
aas
inc
mov
pop
rcrb
adc
in
call
cmpsl
cmp
cmp
dec
sbb
scas
sbb
dec
imul
and
xchg
sub
push
jns
xchg
cmp
movsl
push
pop
ds
mov
inc
inc
adc
cs
pop
ds
xor
inc
imulb
lea
lahf
hlt
ret
daa
adc
jbe
dec
out
sahf
xlat
push
mov
aaa
push
adc
cwtl
test
or
inc
outsl
mov
dec
std
and
pop
xor
dec
pop
aam
int3
jmp
mov
outsl
and
out
xor
mov
popa
xchg
aam
mov
mov
xchg
scas
cmp
icebp
call
lahf
out
sub
dec
cmc
test
adc
mov
jns
outsl
lock
dec
xor
xor
cwtl
imul
outsb
xchg
pop
aad
or
hlt
xor
call
fwait
lods
pusha
mov
cmovs
out
jecxz
push
icebp
outsl
push
pop
pop
cmp
xchg
testl
sbb
repz
les
add
mov
push
test
or
std
and
call
adc
push
mov
and
scas
sbb
xchg
ljmp
mov
lods
or
int3
enterw
dec
mov
inc
inc
outsb
and
loope
scas
stos
or
mov
out
adc
push
sub
push
inc
or
push
xchg
int
ficomps
test
or
adc
or
pop
mov
rorl
jp
or
jge
fstpt
iret
push
jnp
push
icebp
lea
xchg
les
out
sub
pop
ss
adc
ret
in
mov
or
jle
pop
cmp
cmp
lret
hlt
inc
xor
mov
inc
inc
cmp
loop
test
mov
xchg
cmp
jae
out
rcrb
sbb
cmpsb
push
xor
mov
or
icebp
nopl
cli
mov
fiaddl
cli
xor
push
ret
shlb
stos
cltd
mov
das
mov
std
cltd
mov
mov
jmp
cmp
pop
add
clc
or
mov
int
daa
xchg
pop
push
ficoml
fcomps
inc
xor
mov
aas
add
pushf
pop
pop
xlat
ret
add
dec
push
cmp
inc
push
jno
loop
jecxz
cld
pminsw
lret
popf
bound
push
jg
pop
add
xchg
jno
or
cmp
mov
cmp
mov
cmovg
nop
mov
rcl
sub
dec
adc
out
cmp
dec
aad
adc
sar
pop
sbb
roll
pop
xchg
ficoms
mov
bound
jne
mov
jecxz
fistl
pop
stc
or
lock
adc
dec
xor
inc
push
sub
sarl
and
cmc
dec
in
fadds
out
popa
sbb
sti
fwait
call
pop
push
lds
push
fidivrl
or
jge
mov
mov
or
push
out
xchg
aad
mov
repz
dec
fistl
lods
int3
sbb
fwait
inc
popf
stos
scas
loope
pop
sbb
jne
pop
push
push
movsl
push
cmp
sub
adc
xchg
movsl
pop
in
cmp
std
sub
mov
testl
or
jo
or
jne
sub
shlb
push
icebp
cmp
js
repnz
shll
mov
xchg
sbb
xchg
addb
stos
mov
xor
inc
aam
rcll
xchg
lds
mov
push
andb
sbb
sbb
sar
stos
add
push
pop
call
lock
push
imul
loopne
gs
test
and
cmp
xchg
lret
xchg
rclb
adc
lock
jne
sbb
lods
mov
lret
aam
les
sarl
jmp
and
es
adc
mov
cmp
testl
xor
loopne
or
lock
cmpl
cmpsb
lea
jmp
test
ficoms
pushf
hlt
cld
inc
mov
mov
outsl
jnp
sub
mov
jbe
fidivl
dec
scas
mov
jne
add
adc
rolb
cmp
and
dec
inc
jle
fistpll
mov
int
fsubl
cmp
addl
cmp
cmp
dec
dec
aaa
sbb
repz
sub
ret
je
int3
push
stos
inc
sbb
adc
movsb
xor
push
dec
adc
xor
out
or
sbb
es
cmovp
adc
jns
ja
or
jns
fs
push
xor
scas
pop
cmc
pop
lahf
or
push
pushf
adcb
mov
in
inc
mov
in
leave
gs
imul
mov
cs
and
repz
shll
fldenv
xchg
and
xchg
cmp
or
or
fdivr
cmp
jge
jmp
jae
inc
xlat
out
sub
imul
data16
mov
and
add
jne
js
jae
and
neg
int
xchg
daa
mov
daa
clc
push
stos
sub
stos
lret
mov
mov
int
and
pushf
in
ret
xorl
cmc
mov
int3
adc
cwtl
and
and
mov
xchg
stos
cmp
cwtl
or
scas
ljmp
xchg
mov
test
sarb
mov
in
aaa
or
cmp
clc
inc
jmp
mov
stc
mov
ljmp
sti
push
cmpsl
rol
arpl
pop
test
jne
lock
ret
mov
shrb
adc
mov
jmp
pop
push
stc
lret
cmp
pop
xor
xchg
inc
mov
mov
ja
sbb
cmpxchg
adc
mov
lahf
jo
popf
iret
push
xchg
add
enter
cmpsb
xlat
mov
mov
out
xchg
test
sub
repz
loope
or
insb
mov
in
sbb
mov
call
inc
push
test
iret
pop
sub
fldl2e
addr16
add
and
popa
test
jae
fnstenv
psubusb
outsb
test
test
pop
clc
idiv
push
jbe
mov
mov
cltd
cmpsb
cli
pop
push
lock
push
imul
dec
lods
jno
lods
mov
or
fcoms
mov
mov
sti
mov
insb
imul
ljmp
cmp
jmp
xchg
inc
and
cmovno
outsl
daa
ret
shrb
stos
js
jg
xor
mov
adc
outsb
push
cmp
lret
inc
xchg
cmpsb
testb
add
xchg
pop
cmp
ds
mov
shlb
popf
inc
lret
ret
adc
mov
pop
lock
call
rorl
lret
ficoms
xchg
push
mov
and
fnsave
mov
cmp
jg
and
cmpsl
lcall
push
mov
push
call
xchg
mov
neg
loopne
es
cmp
clc
pop
test
jg
push
add
xlat
clc
sub
shrb
rcr
cmp
pop
cmp
call
push
dec
and
cld
daa
loope
mov
data16
push
xchg
lcall
lahf
cmpxchg
cli
cmpsl
xchg
incb
jge
mov
add
hlt
lods
add
mov
mov
cmp
jecxz
cmp
jno
adc
aaa
jae
mov
ficoml
inc
jl
dec
dec
cwtl
mov
cmp
out
mov
sbb
push
outsl
jl
sub
jl
mov
sub
cmp
out
aaa
nop
push
cmp
mov
jg
sbb
xor
dec
cltd
xor
out
fs
sub
or
je
divb
cmp
vdivps
leave
repz
insb
dec
xchg
les
clc
inc
xor
stos
and
or
shll
or
or
adc
cmp
push
jg
mov
add
iret
pop
mov
subl
and
jb
lock
insb
loope
inc
sarl
insl
hlt
clc
and
mov
cmp
push
js
inc
adc
cmp
int3
or
sbb
pushf
xor
push
fidivl
lret
dec
fidivl
stc
ss
out
xchg
fs
in
pusha
lret
ljmp
scas
rcr
and
and
push
pop
leave
fsubp
nop
fisttpl
jmp
test
fidivl
mov
mov
fs
mov
mov
stc
les
shll
sarb
mov
jne
lret
pop
push
out
pushf
inc
fdivl
add
adc
shlb
dec
push
jbe
idivb
das
pop
xor
pop
jp
mov
lods
or
loop
fldenv
mov
scas
fndisi(8087
xor
xchg
mov
pop
pop
popa
enter
rcll
int3
test
jb
andl
jns
scas
lea
xchg
xchg
cmp
push
das
lods
xor
call
xor
xor
cmp
cmpsl
xchg
xlat
add
inc
fwait
cwtl
or
sbb
hlt
shlb
subb
lods
flds
inc
ret
fimuls
adc
sbb
addl
or
imul
or
push
cmp
inc
push
xor
mov
add
imul
es
pop
jb
ror
enter
shrl
or
sti
adc
jp
test
cmp
popf
out
or
adc
int
cmovs
mov
popa
xlat
stos
push
xor
sub
sub
xchg
nop
xchg
adc
or
push
aas
pop
mov
pop
and
mov
and
loopne
inc
push
pop
mov
push
and
lahf
xor
ds
xchg
pop
xor
insb
jp
cltd
adc
or
inc
sub
inc
pop
adc
jmp
add
mov
mov
push
addb
xor
mov
lea
repnz
cmp
pushf
int3
pop
cld
mov
stc
repnz
cmp
push
xchg
lds
inc
cmpsb
pop
xor
add
xchg
arpl
or
rcr
mov
adcl
nop
mov
mov
lea
shrb
addr16
es
cmp
dec
sahf
int
dec
imul
mov
cmp
test
pop
sub
call
mov
jb,pt
push
mov
dec
inc
je
dec
daa
es
dec
subl
sub
or
cmc
sub
scas
inc
and
add
pop
aas
lock
push
jmp
scas
xchg
and
inc
popf
push
cmp
mov
scas
mov
or
enter
into
sbb
lret
pushf
out
adc
int3
dec
sbb
insl
or
mov
xor
cmp
inc
mov
cmp
cs
cwtl
sbb
inc
jae
dec
dec
add
call
xchg
imul
scas
and
push
sbb
dec
test
xor
inc
mov
sub
dec
jecxz
shrb
addl
rcrl
jb
mov
test
test
sub
cmp
mov
gs
adcl
adc
adcb
jne
call
ds
lret
rcrb
jne
test
hlt
push
sub
scas
xchg
or
lods
cltd
add
je
pop
jg
imul
xor
mov
inc
orl
stc
fsts
enter
mov
xorb
sahf
sbb
push
mov
repnz
pop
add
and
push
inc
popa
xchg
adc
cmp
lea
pop
rcll
inc
adc
sbb
mov
sub
lahf
or
xchg
jns
push
push
or
fsubrs
mov
sbb
daa
scas
out
jne
mov
cmc
inc
repz
or
mulb
cmp
ljmp
shll
iret
mov
mov
mov
and
adc
mov
push
mov
loopne
inc
das
xorl
ficoms
outsl
incl
ret
in
inc
inc
add
dec
dec
ja
roll
fmuls
push
mov
inc
std
or
xor
mov
or
xchg
fsubl
jg
icebp
sub
mov
mov
lods
adc
fmulp
data16
in
in
mov
push
sti
stos
faddl
aam
aam
out
inc
in
cmp
mov
nop
mov
mov
mov
inc
or
clc
loop
jne
mov
cmp
mov
dec
mov
clc
sar
push
fs
call
fisubrl
call
xchg
std
gs
mov
xor
dec
idivl
loopne
sti
test
fisubrs
jp
adc
or
jmp
add
orl
mov
jbe
adc
test
ja
lret
or
jo
arpl
std
insb
sub
pop
push
push
mov
inc
jns
outsl
inc
adc
add
icebp
lcall
out
push
mov
cwtl
repnz
lds
fcom
xor
push
add
cli
adc
insb
movsl
push
nop
xlat
pushf
or
xchg
daa
test
xchg
push
je
xchg
je
lds
cmpsb
lock
push
add
add
je
in
mov
iret
pop
add
daa
sbb
cmp
iret
and
leave
fwait
or
mov
shld
out
push
div
sbb
test
pushf
loop
out
cli
add
lds
imul
push
xor
hlt
push
mov
shl
sbb
jmp
sub
sub
inc
ficoml
sbb
daa
push
inc
loopne
popf
repz
add
sub
cmp
cmp
cld
cltd
and
lcall
in
push
outsl
imul
stc
adcb
addb
in
mov
lahf
lret
std
xor
pop
stos
cltd
mov
or
xchg
push
clc
xchg
in
mov
in
mov
inc
lock
mov
jg
dec
xchg
clc
inc
es
mov
mov
xchg
in
mov
cmp
mov
stos
xor
call
push
dec
sbb
cmp
jo
and
testl
movb
inc
pop
adc
cmp
pop
cmp
jne
mov
mov
mov
stc
push
fistpll
or
std
faddl
int
icebp
pop
int
pop
aad
clc
insl
jecxz
fnsave
add
pop
jecxz
mov
add
mulb
or
jp
pop
jbe
scas
adc
cli
dec
xor
repnz
ja
cmp
int3
push
xor
inc
xchg
movsl
jp
jmp
outsl
dec
jmp
je
aas
dec
das
add
inc
std
xchg
in
sub
loop
push
out
stos
shl
mov
inc
fisubs
stos
sub
add
mov
pop
dec
xchg
adc
cmpl
xor
cmc
stc
ja
inc
lods
mov
dec
mov
shlb
aad
pop
xchg
or
call
sbb
enter
das
daa
mov
mov
or
cmp
mov
dec
test
pop
out
lods
pop
pop
jp
test
scas
pop
xchg
repz
lock
rcrb
xlat
sub
cs
xchg
imul
insb
push
and
pop
and
mov
add
nop
outsl
push
shrb
adc
mov
cmp
add
lods
iret
fs
dec
mov
call
fwait
cltd
ja
cmp
test
inc
or
or
jle
xorb
or
dec
add
test
lret
jmp
movsb
repnz
repz
lods
push
outsl
test
test
or
lods
dec
sahf
cmp
cmc
pop
orb
lock
call
xchg
push
inc
sbb
mov
imul
sbb
cltd
pusha
in
xchg
cmp
lods
cmp
dec
inc
push
add
gs
mov
je
and
push
adc
sub
fldln2
pop
jl
daa
cld
xchg
arpl
inc
lods
scas
jp
xchg
fidivl
mov
mov
in
shll
or
hlt
lret
cld
stc
std
int3
stos
add
or
fstpt
mov
int
sbb
outsb
les
scas
sbb
testl
push
mov
jp
xchg
ja
mov
and
or
or
rclb
pop
mov
xor
decl
mov
jmp
sub
stc
and
ret
push
pop
fdivrs
jb
mov
ds
std
je
mov
shlb
dec
stc
adc
jno
ja
cs
push
push
add
cmp
inc
aaa
popa
imul
push
in
inc
aam
and
cwtl
fsts
xchg
lds
pop
sahf
jb
jo
lea
and
and
mov
shrl
sub
xor
dec
movsb
repz
stos
fisttpl
jo
jle
sbb
cmc
cmp
xor
xchg
loopne
push
loope
sbb
test
sub
pop
xchg
inc
add
mov
push
movsl
cmp
arpl
and
push
jmp
mov
or
pop
mov
xchg
or
sbb
dec
aam
imul
aaa
push
cmpl
or
push
decl
sub
push
cmp
or
xchg
sbb
inc
cmpsl
fisubrl
pop
cwtl
sub
or
int
add
pushf
inc
loop
out
outsl
adc
dec
enter
push
popa
xchg
repz
mov
mov
inc
add
cmp
cli
call
out
and
cmpsl
je,pt
mov
or
lcall
push
push
mov
add
pop
call
scas
mov
xor
in
out
mov
stc
lret
imul
subb
stos
sbb
mov
cld
or
hlt
push
adc
test
sub
or
mov
pop
jne
cld
in
jne
adc
xchg
add
int
cmpl
js
inc
push
ret
xchg
push
loope
pop
movsl
xor
gs
call
and
mov
sub
enter
pop
xchg
lret
scas
mov
loop
push
mov
xchg
pop
dec
mov
ret
cmpl
push
pop
cs
jmp
cli
mov
or
jp
imul
mov
add
call
jge
and
dec
or
mov
push
ret
jno
andl
shlb
ja
push
mov
jge
rcll
mov
and
notl
jne
fidivrs
cld
add
mov
loopne
fisubs
scas
jmp
xchg
mov
mov
mov
mov
cmp
mov
dec
mov
jnp
imul
add
push
ljmp
pop
or
aad
push
xorl
push
call
orb
hlt
lods
push
aad
cmpsl
test
int3
movsl
ret
shl
sbb
lcall
rol
mov
daa
or
xlat
cmp
mov
call
pop
pop
shr
pushf
mov
sbb
jmp
push
popa
aas
cli
in
jne
mov
xor
ror
mov
in
pop
jne
mov
cmp
cmpb
lods
inc
xor
sbb
shlb
fstpt
or
les
mov
push
enter
gs
jne
daa
call
out
push
jae
sbb
inc
in
jno
sti
add
mov
repz
adc
jne,pn
in
mov
pusha
jo
outsb
mov
negl
cld
scas
icebp
enter
sbb
mov
adc
cld
jge
adc
or
mov
xor
sub
jge
mov
jns
cwtl
pop
push
lahf
cld
mov
xor
lods
lret
insl
pop
fcmovnu
push
jno
adc
sti
hlt
adc
dec
and
fisubs
loopne
movsb
and
imul
ss
out
add
adc
lret
push
push
push
fstpt
dec
fstp
cmp
filds
hlt
mov
sub
fadds
in
hlt
stc
stos
loopne
push
out
aaa
fisubs
cmpsb
inc
cmp
loopne
add
test
xchg
cmpsl
push
xor
call
mov
in
test
add
stos
call
and
imul
xor
pop
aas
sub
insl
or
xor
mov
insl
nop
movsb
sbb
jbe
cwtl
arpl
je
push
out
jl
and
cmp
les
cmpsb
sub
pop
push
out
jle
in
sub
lock
xor
mov
sbb
loope
xchg
push
sub
and
lock
sub
bound
adc
push
add
jge
inc
lret
add
stos
daa
xchg
es
dec
negl
push
mov
dec
or
push
mov
adc
pusha
sarb
sbb
fdivs
test
add
icebp
mov
les
icebp
add
pop
cli
cmpsl
fldl
mov
jno
adc
sub
and
notb
inc
xor
add
nop
mov
dec
jg
iret
mov
ljmp
inc
movsb
outsl
sbb
popa
xor
in
popf
push
mov
push
inc
sub
loopne
mov
adc
and
xchg
mov
sub
dec
jg
mov
clc
fdivrp
jmp
dec
push
imul
jmp
and
in
or
adc
loop
dec
lods
lcallw
and
jge
ljmp
rclb
mov
add
fistpl
cmp
das
mov
push
mov
adc
xor
or
movb
mov
mov
jle
sub
mov
into
fimull
mov
lret
inc
inc
jb
stos
loopne
lret
xor
add
out
and
push
pop
idivl
jp
into
mov
xchg
aas
mov
xchg
inc
xorb
das
dec
add
mov
and
adc
shll
pusha
push
push
cmc
pop
and
clc
fs
push
int3
sbb
lea
xor
cmp
mov
push
mov
xorb
mov
dec
call
stc
lock
pop
orb
mov
data16
adc
xor
sar
add
cmp
sahf
jp
adc
lock
add
sbbl
mov
jb
jle
dec
sbb
dec
scas
mov
imulb
cmp
pop
test
rorl
bound
cmp
mov
fimull
mov
cmp
pop
xchg
stos
mov
and
je
mov
pusha
xchg
subb
and
and
push
cmp
mov
hlt
imul
jg
push
mov
mov
clc
iret
xchg
lods
mov
sahf
test
sbb
mov
xor
xchg
xor
sbb
jne
scas
test
cld
mov
aam
xor
mov
inc
mov
cmp
fcmove
leave
push
sbb
idivl
xor
sti
xchg
push
adc
dec
jmp
and
add
int3
add
mov
add
push
inc
aaa
fisttpll
dec
or
xor
daa
jno
jge,pn
xlat
mov
lahf
ror
cmp
call
lods
rorb
lahf
mov
pop
push
dec
xor
test
cmpl
dec
push
inc
mov
rcll
pop
imul
dec
sbb
mov
xor
jbe
cli
jl
in
jg
fwait
repz
xorb
adc
mov
adc
cmc
mov
cwtl
test
push
sbb
std
sub
adc
xchg
push
test
subb
mov
mov
cmp
in
test
or
and
pushf
mov
and
adcl
mov
or
add
sub
repz
push
gs
add
sar
sub
hlt
sub
loopne
gs
or
sub
and
cmp
adc
push
shlb
cli
or
cmp
adc
scas
dec
cwtl
sub
adc
cmp
int
test
xchg
int
adc
cmp
adc
adc
xchg
mov
and
sub
adc
ret
and
je
vmread
push
or
ret
mov
icebp
aam
pushf
cwtl
inc
adc
mov
add
and
fcomip
adc
jbe
lods
xor
dec
pushf
sub
mov
cmp
xchg
rcll
push
pop
push
cltd
or
push
xchg
mov
and
jbe
mov
jp
xchg
xchg
adc
sub
and
inc
popf
cmp
mov
adc
lods
ret
pusha
xlat
adc
mov
push
addl
fs
mov
dec
dec
and
sub
sub
fsubs
insl
xchg
inc
data16
les
std
repnz
cmp
and
sbb
pushf
inc
and
and
int3
xchg
test
fs
mov
sbbb
insb
and
jbe
inc
jae
inc
add
pop
dec
xor
adc
sbb
sub
xchg
scas
push
daa
nop
and
scas
xor
or
sbb
sarl
hlt
mov
lock
jp
xchg
pop
adc
inc
gs
jg
test
or
dec
movsb
cld
jge
repz
sbb
pushf
jmp
fbld
mov
and
cmc
push
push
jne
mov
adc
mov
xor
adc
int3
or
sub
mov
es
adc
adc
add
jp
xchg
dec
adc
inc
push
mov
jmp
and
icebp
stos
ds
fwait
add
lock
inc
add
and
repz
adc
xchg
pushf
mov
cltd
repnz
adc
fistpl
call
xor
outsb
and
loope
push
push
xor
dec
popf
jbe
inc
sub
and
std
push
xor
popf
jp
xchg
movsl
adc
inc
lods
and
add
mov
adc
popf
ret
sub
and
std
rcr
mov
aam
imul
inc
jns
mov
icebp
notl
mov
sub
push
mov
xor
xchg
cmp
jl
pop
aas
inc
loop
sbb
mov
and
repz
adcl
stc
or
ds
js
int
and
adc
inc
mov
mov
cmp
and
lock
xor
adc
mov
aam
cli
popa
int3
sub
lods
xor
and
and
dec
xchg
sbb
adc
pushf
dec
and
mov
and
in
push
cmp
jo
pop
dec
push
stos
outsb
and
icebp
xchg
push
fwait
jle
dec
pusha
fs
adc
push
adc
popf
push
dec
and
and
std
adc
mov
cmp
or
ret
push
mov
fmull
mov
int3
imul
or
subb
outsb
pushf
cltd
test
or
mov
inc
jl
mov
insb
dec
shrl
pop
and
jp
xchg
jmp
jbe
inc
stos
push
and
icebp
push
cltd
sahf
shrb
xchg
sbbb
dec
aas
mov
and
sbb
sarl
dec
fstpt
and
frstor
stc
icebp
xchg
icebp
mov
or
popf
xlat
dec
addb
or
aad
mov
xchg
int
sub
sbb
mov
sub
mov
adc
test
or
cmp
inc
xor
and
icebp
inc
cltd
fdiv
xchg
or
adc
scas
stos
cwtl
and
icebp
nop
xchg
sahf
fwait
test
xchg
sub
xchg
mov
jbe
xor
popf
push
dec
bound
insb
and
fs
mov
and
jp
xchg
xchg
cmp
mov
stos
sbb
icebp
adc
push
stos
mov
push
and
enter
and
and
jp
xchg
pop
adc
inc
arpl
mov
stos
cld
and
icebp
hlt
xchg
ret
inc
mov
pop
push
stos
dec
pop
mov
lcall
mov
and
dec
jbe
lret
and
sarl
xchg
fistl
pop
inc
jecxz
mov
jl
dec
icebp
je
inc
fwait
or
cmp
push
sub
mov
sbb
xor
adc
popf
cmp
sub
adc
mov
cli
inc
dec
rorb
icebp
rclb
imul
dec
jnp
mov
mov
pushf
adc
sub
mov
and
xchg
adc
iret
inc
mov
pop
and
icebp
push
xchg
pop
fwait
push
dec
adc
push
inc
dec
sti
mov
xor
sbb
sub
sub
sbb
and
mov
xor
sbb
enter
rorb
fsubs
out
rcr
mov
and
jp
xchg
jae
movb
mov
std
pop
add
and
jbe
push
xor
and
mov
xchg
stos
cmp
mov
data16
nop
pop
or
mov
push
fwait
or
int3
or
int3
and
and
and
jp
xchg
lahf
adc
inc
cmpsl
sub
push
icebp
cmp
cmp
adc
popf
rorb
fsubs
out
rcr
mov
and
jbe
add
mov
orl
mov
scas
stos
cwtl
and
icebp
nop
xchg
sahf
fwait
test
xchg
sub
xchg
mov
jbe
xor
popf
push
dec
bound
insb
and
fs
mov
xor
call
cli
or
sub
and
std
sbb
mov
jp
xchg
stos
adc
inc
mov
and
std
int3
add
and
out
ljmp
dec
fisubrl
in
sar
cld
lret
and
and
jp
xchg
movups
cmpsb
stos
nop
and
icebp
test
xchg
fwait
mov
xchg
cmp
jle
ret
mov
outsb
push
push
adc
insb
dec
pop
sub
std
jl
mov
and
xchg
xchg
adc
inc
xchg
sbb
push
icebp
sub
push
mov
push
adc
enter
shlb
std
fsub
mov
fisubs
jp
xchg
imul
inc
jae
mov
stos
mov
icebp
test
stos
pop
mov
lcall
jbe
xchg
mov
jle
dec
dec
jbe
inc
and
pop
mov
and
jecxz
push
xchg
jmp
dec
inc
repz
inc
stos
or
cmp
add
xor
mov
sbb
mov
or
xor
adc
mov
jp
xchg
push
adc
inc
pop
rorb
icebp
loopne
and
jbe
adc
add
cmp
leave
iret
cmp
icebp
fists
loope
mov
rorb
mov
sarl
orl
fwait
and
xchg
mov
and
jle
add
fstl
push
push
cltd
mov
xor
xchg
cmp
add
scas
cmp
scas
int
mov
xor
sub
imul
sahf
cmpsl
pop
jp
inc
sbb
pushf
iret
adc
pop
xor
mov
enter
inc
dec
enter
mov
pop
xchg
in
xchg
jb
and
loopne
repz
mov
mov
and
div
xor
icebp
sbb
aaa
int3
subb
arpl
sub
lar
inc
jg
mov
test
orl
push
call
lret
mov
inc
lret
xchg
das
pushf
daa
pop
or
pop
bound
test
fwait
jne
test
stc
xor
or
sub
push
mov
dec
stos
jbe
dec
fiaddl
sub
icebp
sub
dec
daa
incb
mov
fwait
mov
stc
cmpsl
mov
or
rcll
andl
push
flds
cs
in
int
shlb
dec
add
and
sbb
push
or
mov
sbb
cmp
adc
push
outsl
sub
arpl
stos
mov
test
inc
into
mov
sub
and
sbb
movsb
lcall
push
mov
call
out
inc
push
fs
cmp
push
mov
cmp
mov
xchg
xchg
rcrl
and
loope
dec
andl
imul
add
mov
popa
ljmp
adc
pop
mov
xchg
adc
hlt
adc
xchg
sub
insb
xchg
and
adc
data16
xor
sti
sub
adc
bound
int
xor
loopne
insb
push
dec
es
adc
mov
mov
and
adc
mov
lods
cli
movsb
and
and
adc
adc
push
sub
call
enter
xorb
outsb
sub
nop
push
jle
call
push
lock
sbb
push
shll
call
push
add
or
aad
scas
pop
iret
and
xor
adc
mulb
mov
mov
and
cmp
test
add
pop
insb
aaa
jbe
pusha
pop
push
jl
xchg
jg
int
inc
push
movsb
outsl
inc
test
inc
sub
dec
fs
sahf
inc
pop
cmp
or
inc
mov
cld
push
ficoml
mov
aad
cmp
jno
or
adc
orl
and
daa
or
cwtl
js
adc
cmp
sbb
fidivs
inc
pop
or
mov
mov
inc
inc
loope
aaa
dec
sub
fs
dec
push
scas
jle
jmp
mov
mov
inc
jb
xchg
dec
test
es
sti
jle
ss
adc
cli
add
loopne
add
inc
je
outsl
ljmp
stc
mov
inc
and
out
or
in
sbb
mov
jg
jp
divl
mov
in
xchg
adc
lds
cli
js
cs
push
cli
add
mov
mov
mov
xchg
jb
jge
mov
test
insl
adc
dec
nop
sub
pop
sbb
jecxz
xchg
fdivs
icebp
xor
lea
xor
int
mov
scas
jp
jecxz
pop
xor
subps
dec
dec
jne
jp
mov
sub
mov
cmp
sbb
ss
shll
ds
sbb
stos
xchg
ds
xchg
lods
xchg
lods
mov
sbb
jbe
outsb
xor
and
jp
dec
cmp
jl
cmp
icebp
icebp
cli
inc
sub
or
jg
mov
testb
mov
cmc
loop
dec
ss
pop
call
sbbb
fcmovu
fadds
repnz
js
add
imul
push
stc
mov
je
and
push
sub
lds
nop
jne
cmp
push
mov
mov
test
mov
std
or
pop
add
inc
pushf
mov
adc
jbe
xchg
rcr
pinsrw
test
stos
mov
add
push
or
push
aaa
inc
call
and
in
xor
std
sbb
dec
enter
jl
cld
mov
cmp
xor
and
xchg
lods
dec
je
sbb
dec
push
lods
stc
or
aaa
lret
pop
cmp
mov
cmpsb
daa
or
sub
mov
pop
jl
pop
pop
sub
insl
popa
bound
and
scas
xor
es
cwtl
into
cmc
gs
dec
mov
push
cmpsl
pmullw
xor
adc
jmp
mov
cmc
cwtl
xchg
repnz
in
test
mov
push
sbb
add
cmpsb
adc
add
ss
xchg
lods
adc
pop
mov
cmp
cmpsb
adc
jmp
stos
push
ret
add
stos
aaa
mov
mov
gs
sbb
cmp
gs
sub
cmpsb
mov
add
push
cmp
sub
and
data16
pusha
je
jne
sub
pop
mov
loope
fldenv
push
or
mov
xchg
mov
popf
ret
out
adc
xchg
es
out
cltd
cmp
push
js
xor
and
or
fwait
inc
inc
out
mov
and
mov
adc
xchg
lock
dec
dec
movsb
popf
adc
fnsave
pop
icebp
pop
xchg
sbbb
ret
push
in
dec
inc
mov
and
and
jp
xchg
or
mov
repnz
push
dec
movsl
mov
dec
pop
xor
xchg
test
fldt
flds
xor
or
push
xor
fstpt
xchg
xor
xchg
inc
adc
mov
stos
ret
std
cmp
or
jbe
push
dec
adc
sub
and
std
fdivrp
mov
ljmp
mov
and
icebp
lods
mov
mov
in
imul
stos
push
and
icebp
mov
mov
mov
repnz
sub
xor
and
adc
mov
jb
xor
dec
and
icebp
mov
das
jbe
je
insb
adc
or
sub
sub
fcomp
and
pop
mov
aam
test
mov
mov
adc
mov
sub
or
movsb
and
rclb
mov
shrb
popa
add
jp
xchg
sbb
mov
fisubrs
ss
push
jno
and
jmp
mov
push
inc
push
fidivrl
adc
je
cmp
xchg
dec
jmp
jbe
ds
adc
popf
sbb
sub
adc
in
call
cld
xor
sbb
loop
pop
mov
gs
cmp
and
inc
adc
push
dec
sub
adc
mov
dec
imull
push
adc
and
jns
es
add
lea
out
jns
adc
sub
pop
pushf
inc
jno
pop
add
dec
mov
mov
adc
and
add
dec
cmp
cli
or
loopne
mov
cmp
inc
lret
pusha
daa
icebp
cmp
jne
inc
jns
lock
outsw
jle
popa
xlat
rcrb
push
shrl
pop
fisttpll
ja
or
pop
arpl
lret
xor
and
and
popa
xor
xchg
jnp
addr16
imul
dec
inc
outsb
pusha
cmp
mov
sbb
jae
das
aaa
cs
pop
cmp
push
jg
fcoml
jecxz
leave
les
hlt
frstor
ja
jae
bound
inc
mov
out
pop
add
popa
mov
lds
fst
in
mov
clc
mov
data16
or
or
add
dec
imul
and
call
cmc
dec
push
add
sub
imul
insb
int
add
xlat
popa
insl
adc
xor
inc
pop
ljmp
test
popf
add
xchg
sbb
je
xor
mov
push
sub
dec
sarl
jo
push
jbe
call
mov
push
push
dec
sub
scas
movsl
fldcw
cld
push
and
std
sbb
enter
inc
mov
push
and
bound
add
lock
ss
in
jae
push
inc
cltd
leave
loopne
cmpsb
xor
fidivrs
push
sti
jns
js
pusha
add
mulb
or
dec
sbb
aad
push
xchg
js
adc
lret
dec
popa
aam
mov
pop
jno
dec
int
mov
cltd
cmpsb
mov
clc
push
notb
mov
or
xchg
out
jno
sub
mov
fcoms
insb
cwtl
push
xchg
cmp
jg
out
pop
inc
and
scas
lods
add
pop
xor
aam
jb
jecxz
ljmp
sahf
dec
dec
mov
inc
push
jo
popa
mov
cld
sbbb
mov
cmc
jne
movsb
sub
sahf
aam
jbe
leave
gs
stos
imul
mov
jae
sbb
outsl
inc
mov
sub
movsb
pop
adc
out
sahf
outsb
or
and
popa
add
push
scas
or
ljmp
imul
add
sbb
mov
push
adc
xchg
mov
xchg
jp
cli
ja
int3
mov
xor
arpl
test
fs
dec
ss
mov
jnp
xchg
or
stc
pushf
add
xlat
pusha
push
out
jg
dec
mov
sub
jbe
dec
mov
lahf
inc
data16
xchg
adc
gs
popf
jle
cmp
or
lds
jb
xor
jne
test
lods
fdivrl
pushf
inc
stos
insl
push
js
popa
dec
cmc
in
sahf
push
jecxz
or
in
int
add
lods
fidivrl
mov
mov
dec
push
sub
aad
jbe
jmp
xchg
add
dec
adc
cmpsb
outsb
mov
xor
iret
out
push
jne
test
sbb
popa
and
push
xor
cmp
lea
test
jo
push
rolb
xor
movsb
jo
mov
pushf
dec
mov
push
push
cmc
jnp
mov
add
jo
or
bound
and
ss
std
pop
aam
cmpsb
sbb
lods
movsl
push
movsb
ret
ljmp
fcompl
adcl
fxch
jbe
adc
dec
adc
xor
popaw
jb
fisttpl
fs
data16
push
and
lods
nop
pop
loopne
mov
or
loope
outsb
lfs
pushf
add
jo
inc
out
iret
pop
js
lock
lahf
push
mov
sbb
jle
dec
sbb
and
rorb
outsl
jne
loopne
sub
cmp
push
pop
inc
rclb
push
jl
cli
inc
rcll
std
shrl
std
sbb
push
or
mov
mov
sub
daa
inc
jae
or
jae
js
inc
repnz
icebp
adc
pop
ficompl
jmp
xor
je
out
mov
shl
sarb
jle
movsb
jo
fsts
les
out
xchg
dec
jne
js
je
insb
dec
and
xor
xor
and
mov
inc
xchg
cmp
out
js
mov
lds
mov
outsl
mov
aas
pop
add
lcall
jp
mov
push
jo
pop
xlat
aad
mov
and
sbb
sbb
pop
lcall
negb
mov
push
pop
and
fwait
mov
in
xor
push
cwtl
mov
add
cmp
jb
xchg
inc
pop
fldcw
inc
fmuls
les
aaa
mov
mov
cmpxchg
pop
mov
or
cmp
mov
loopne
loopne
fsubl
ljmp
bnd
dec
jne
xor
adc
bound
cld
imul
leave
add
pop
lods
jge
inc
or
imul
push
aad
out
adc
inc
insb
and
xor
test
add
int3
inc
dec
push
out
popa
mov
jo
dec
in
dec
inc
push
dec
adc
sbb
adc
jp
insl
mov
cmp
adc
mov
fbstp
inc
jno
xchg
sbb
cld
jmp
push
and
mov
mov
lahf
enter
adc
mov
cmp
xchg
xchg
pop
hlt
stos
push
andl
xchg
pop
push
push
nop
jl
cs
outsb
inc
dec
lret
cmp
dec
add
out
dec
insl
cwtl
or
cwtl
pop
dec
push
mov
jns
mov
add
adc
and
add
and
std
ds
dec
pop
sbb
jp
lods
jnp
push
idivl
adc
push
cwtl
mov
adc
popa
pop
insl
lcall
or
jp
add
ss
sub
pushf
cmpsb
mov
addr16
jb
push
lods
mov
cmp
lret
sbb
xchg
sub
insl
loopne
sbb
imul
and
xchg
pop
sub
adcb
pop
and
mov
in
out
fxch
cmc
js
inc
dec
push
and
popa
cld
sub
mov
adc
pusha
lcall
fs
mov
imul
bound
in
xor
jne
bound
shrl
mov
loop
mov
sbb
jo
push
adc
add
pop
xor
mov
cmc
xchg
dec
data16
xor
adc
clc
or
and
push
jno
push
inc
inc
jo
add
aas
movsb
push
xchg
or
sbb
mov
stos
inc
movsl
adc
or
adc
sbb
mov
push
pop
pop
lret
adc
cmp
ficoms
and
sti
popa
and
jae
push
jnp
xor
lahf
dec
inc
xor
pop
cmp
clc
dec
inc
out
push
sub
mov
dec
outsb
bound
pop
test
mov
imul
inc
ret
test
dec
sbb
mov
sub
mov
adc
push
mov
fisubl
arpl
add
leave
inc
insl
jp
dec
and
mov
test
xchg
adc
adc
cmp
dec
mov
xor
pop
arpl
jns
push
push
cmc
cli
dec
jnp
jg
dec
mov
rcll
sbb
addr16
setp
add
loopne
xor
pop
mov
hlt
jp
push
dec
fcoms
mov
add
repz
xchg
aad
daa
xchg
es
popa
imul
pusha
or
sbb
mov
fwait
call
mov
dec
repnz
es
sti
sbb
cmpsl
mov
insb
testb
mov
movsb
mov
mov
push
jo
sub
in
mov
fiadds
xchg
xchg
push
pop
ja
push
jno
jle
jns
cs
fcoml
add
cld
mov
imul
sub
dec
test
pusha
lods
arpl
std
push
push
testl
or
dec
push
lock
sbb
or
or
and
inc
in
add
sbb
addps
aas
out
push
out
popa
inc
push
in
sbb
mov
in
xchg
testb
mov
mov
sub
aad
and
and
gs
add
push
lock
inc
and
out
lock
cmpl
or
cmp
lods
rcll
ja
and
mov
pop
data16
je
inc
fwait
push
mov
sbb
enter
dec
mov
sbb
xchg
inc
clc
test
scas
xchg
or
mov
movsb
sub
in
xchg
adc
push
rclb
cli
pusha
pop
push
in
inc
fldl
sbb
movsb
push
lcall
xchg
inc
mov
jbe
mov
sbb
jo
cmpsl
scas
adc
lods
mov
ljmp
push
imul
jo
lret
jns
mov
iret
insb
nop
inc
push
dec
push
andnps
scas
nop
call
jp
stc
sub
cli
movsb
insb
push
sbb
sub
es
out
and
pop
cmp
movsb
inc
inc
mov
nop
popf
stos
mov
cmpsb
pop
cwtl
lds
mov
add
in
xor
xchg
dec
leave
push
mov
sbb
jnp
dec
mov
push
dec
dec
sub
sub
mov
insb
inc
push
cmp
xor
and
pop
xchg
inc
dec
leave
int3
cmpsb
sub
xchg
test
jb
or
sbb
cmp
dec
mov
mov
or
push
pushf
sbb
jle
adc
sbb
cmp
incb
adc
push
enter
jb
adc
and
push
scas
pushw
int
dec
popa
and
lahf
or
adc
dec
or
aaa
xchg
and
rclb
jbe
pop
test
je
or
lea
dec
add
pop
inc
aaa
loope
mov
int
movsb
or
or
mov
xor
jp
mov
fdivrs
inc
mov
mov
jbe
xor
cs
cmp
inc
inc
cmp
je
push
xchg
ficompl
mov
in
xor
pop
mov
cmp
add
or
and
pop
inc
sub
mov
sub
dec
and
push
and
cmp
adc
fwait
push
arpl
cmpsl
or
mov
je
cmpb
test
rcl
pop
pop
or
sbb
dec
sbb
movsb
or
and
andl
outsb
sub
and
fimull
xor
pop
mov
arpl
popa
adc
lahf
popa
jno
in
jns,pt
lods
lcall
ja
mov
shll
adc
insb
int
push
cwtl
cmp
andb
add
sub
stos
insl
fs
jp
nop
inc
inc
lret
inc
mov
gs
insl
dec
es
ljmp
xor
pop
push
or
and
and
insb
push
fnstsw
sbb
inc
int
mov
repnz
sar
xor
xchg
js
lcall
sub
xor
and
rolb
shlb
pop
cld
lahf
push
push
jbe
push
cs
je
sub
aaa
or
out
int3
jns
test
mov
adc
push
clc
mov
sbb
cmpl
sbb
movsb
and
and
faddl
dec
mov
loop
lods
sbb
icebp
loop
test
cld
aam
test
lret
pop
out
pop
inc
adc
into
dec
inc
pop
popa
mov
mov
andl
push
sub
add
adc
fsubrl
dec
hlt
arpl
das
arpl
stc
push
adc
adc
mov
jle
rcrb
jb
cmpb
cmp
dec
cmp
test
movsb
mov
sbb
xor
xor
pop
out
push
and
xchg
aas
data16
pop
xor
nop
and
mov
popa
scas
popf
gs
mov
ret
xchg
imul
inc
mov
jl
and
sahf
es
pushfw
insl
stos
pop
je
addb
jge
xor
jb
inc
mov
enter
xor
jmp
add
fs
movsb
aam
test
aam
iret
inc
xchg
fmuls
outsb
movsl
js
es
lds
movsl
sbb
in
adc
orl
js
push
cmp
jbe
xchg
add
aam
jo
fs
into
es
mov
cmpsb
fs
jno
hlt
rorl
mov
aam
push
inc
lret
jle
push
sbb
leave
inc
and
dec
popf
push
ss
sbb
test
rolb
push
addr16
mov
movsb
and
mov
sub
mov
hlt
jg
ljmp
jmp
insb
aaa
cmc
dec
leave
sub
jbe
inc
int3
inc
xchg
sbb
out
mov
dec
movsl
xorl
sbb
les
jecxz
cmp
jb
or
idiv
and
call
and
or
scas
xor
cmpl
jbe
push
cmp
mov
push
mov
jbe
xor
inc
mov
loope
shlb
cmpsb
or
pop
push
xorb
fdivrs
in
mov
sub
mov
inc
stc
push
mov
imul
outsl
dec
loopne
rorb
cmp
mov
movsl
and
mov
jo
mov
out
mov
inc
lods
push
imul
dec
lds
dec
sub
fldl
or
or
sub
xchg
jno
je
in
jge
and
push
movsb
lock
fsubl
or
xchg
enter
es
out
shrb
sub
outsb
push
in
pop
cmp
and
mov
int3
data16
outsb
inc
inc
mov
fistpll
mov
or
out
pop
arpl
cmpsb
add
mov
test
mov
inc
bound
inc
jbe
or
push
pmulhuw
fisttps
xor
mov
mov
add
cmp
cmp
loopne
and
enter
fs
adc
jns
jbe
nop
orb
inc
pop
scas
adc
push
jecxz
xor
jl
dec
pusha
xchg
std
cmc
xor
xor
call
addr16
scas
sub
mov
loop
xor
je
out
and
outsb
or
test
or
bound
pushf
sbb
sbb
add
out
or
stos
out
cmp
adc
jmp
aam
mov
pop
adc
dec
subb
pop
adc
sbb
mov
jae
and
sub
subl
lret
lea
lcall
shlb
pop
pop
adc
sub
aad
shl
fisttps
cmp
xor
dec
test
mov
ds
xor
sahf
fiadds
fmulp
addl
fldenv
push
jmp
inc
inc
jle
push
inc
outsb
stc
fs
pop
stc
je
dec
stc
test
stc
xchg
inc
scas
stc
movsb
inc
sahf
stc
mov
mov
les
stc
aam
out
stc
in
fdivrp
hlt
inc
into
clc
add
inc
or
lods
inc
sbb
popf
dec
sub
lea
std
dec
dec
jle
dec
pop
jle
dec
insb
jle
dec
jl
cmp
dec
pushf
jle
dec
lods
jle
dec
mov
jle
dec
fdivrl
dec
in
jle
dec
cld
sbb
add
popf
sub
lahf
lea
dec
lahf
in
lods
pop
lahf
jl
cmp
lods
pushf
lahf
sbb
lods
mov
lahf
insl
lods
fcompl
dec
lods
cld
xchg
jne
addr16
mov
lods
mov
jle
push
inc
outsb
cld
fs
pop
je
dec
cld
test
cld
xchg
inc
scas
cld
movsb
inc
sahf
cld
mov
mov
les
cld
aam
out
cld
in
fdivrp
hlt
inc
into
cld
add
pop
or
lods
or
popf
cvttps2pi
push
cld
inc
inc
jle
push
inc
outsb
cld
fs
pop
cld
je
dec
cld
test
cld
xchg
inc
scas
cld
movsb
inc
sahf
cld
mov
mov
les
cld
aam
out
cld
in
fdivrp
hlt
inc
into
cld
add
add
cmp
cvttps2pi
lea
dec
aas
in
or
insb
aas
int
jl
cmp
or
lods
aas
or
or
fdivrl
pop
or
cld
push
mov
mov
sub
lea
hlt
xchg
mov
or
mov
lds
mov
cmp
or
xchg
popa
jno
mov
das
sti
rcll
hlt
cmp
or
cmp
cmovns
jmp
or
jb
rorb
aas
sub
mov
aas
or
mov
aas
jbe
pop
inc
cmp
jo
shrl
pusha
psraw
icebp
gs
pop
stc
addb
popf
inc
xchg
stc
mov
inc
into
clc
adc
inc
pop
js
dec
jnp
push
dec
lods
jle
dec
fidivrl
dec
cli
sbb
or
popf
xchg
das
inc
sahf
ljmp
lahf
out
sub
test
lods
popf
lahf
sbb
cli
xchg
jne
addr16
mov
cmpsl
int
jg
xor
stos
out
rorl
cmp
lcall
xrelease
inc
aas
lock
jnp
ds
mov
aas
jle
int
mov
mov
and
iret
and
aas
jb
dec
aas
xchg
xchg
aas
sub
aas
cmp
or
rorb
jl,pt
sarb
pusha
out
aas
dec
inc
andl
int
jbe
shll
lds
test
mov
jle
movl
sbb
adc
add
lret
mov
jmp
enter
cmp
cmp
mov
dec
ss
or
mov
dec
fadds
add
lret
xor
js
ret
or
dec
jle
movl
dec
idivb
mov
or
sub
fldcw
pushf
jmp
addl
and
dec
ret
jae
fiadds
clc
insl
into
cld
cld
or
adcl
std
mov
cmp
aas
sahf
adc
cmp
mov
dec
mov
push
sub
mov
lea
jecxz
dec
lret
xchg
in
mov
pop
xchg
mov
mov
je
inc
xchg
js
dec
mov
pop
imul
mov
xor
mov
mov
pop
psllw
and
fldl
mov
cmp
xchg
pop
sbb
jne
dec
rcll
dec
cmp
mov
push
test
enter
jb
jecxz
mov
das
mov
add
test
pop
arpl
pop
pusha
aaa
jae
fldenv
xor
or
sub
test
repnz
jo
rorl
cwtl
mov
movsb
jns
clc
push
das
or
jp
leave
push
addb
dec
out
mov
mov
mov
xor
lcall
mov
xor
mov
dec
ret
test
pop
out
in
js
xor
jnp
movsl
loope
push
xchg
lock
imul
xchg
mov
lret
add
mov
jo
iret
cmpsl
dec
cmc
jmp
mov
mov
or
call
cld
testl
sbb
lahf
push
sub
aas
xlat
or
jg
cmp
push
cwtl
add
nop
lahf
cmpsl
es
lahf
mov
test
mov
std
iret
iret
insl
stc
fldenv
lods
shl
call
dec
cli
sbb
addl
mov
adc
imul
add
out
aad
out
aad
in
mov
repz
dec
repnz
repz
mov
xor
sbb
mov
lea
pop
ficompl
lods
pop
stos
adcb
outsb
sub
out
lea
movsl
or
repnz
jo
into
jne
xor
pop
cmc
mov
xor
sbb
dec
ret
inc
push
push
ds
mov
lcall
lret
adcb
xchg
fcoms
adc
rcrl
push
jns
pop
std
pop
sub
sub
xchg
out
lds
insl
mov
iret
insb
std
loopne
dec
lock
jbe
dec
xor
js
or
pop
daa
xlat
sbb
shl
loop
fistps
mov
movsb
mov
dec
push
jae
cmc
ret
clc
add
xchg
nop
add
pop
mov
icebp
xchg
shll
shll
cmp
mov
sbb
or
daa
add
gs
in
add
push
cltd
xor
cltd
lcall
clc
jle
in
fadd
sarl
fcompl
xchg
and
fisubs
sub
lods
inc
lahf
ret
sub
pop
mov
mov
repz
out
sbb
xchg
mov
push
icebp
mov
mov
cli
es
sub
xor
mov
in
gs
dec
hlt
xchg
cld
stos
inc
mov
iret
inc
sar
testl
daa
aam
jne
xchg
movsb
push
ds
inc
jnp
leave
inc
xor
inc
cmpsl
ss
jecxz
cmp
outsb
aam
bound
je
adc
sbb
loope
pop
iret
iret
cmp
mov
ret
scas
or
xchg
mov
and
scas
inc
sbb
sub
cmc
xchg
mov
aam
lret
cmp
gs
test
xchg
dec
inc
aaa
push
iret
jno
xchg
dec
leave
ss
iret
out
outsl
adc
sub
pusha
cmpsl
inc
lahf
test
xchg
push
enter
iret
push
sti
add
add
test
inc
ret
sub
call
dec
aaa
jge
push
mov
roll
push
into
test
mov
sahf
xchg
pop
stos
popa
or
lret
aas
push
idivl
inc
and
xor
sti
sbb
xor
ret
in
pop
mov
cld
call
mov
and
lea
inc
sbb
cmp
cmp
push
mov
lea
repz
shl
pop
shr
dec
sar
inc
ret
mov
push
pushf
sub
sub
imull
mov
xchg
cmp
imul
jo
jl
loop
fcompl
je
daa
scas
jne
jcxz
andb
rclb
lret
addb
loopne
cmp
shlb
mov
mov
test
ds
cmp
dec
pop
mov
inc
hlt
xchg
cld
mov
scas
add
dec
lock
popa
or
adc
popf
rep
xchg
dec
leave
loope
fidivs
iret
in
jnp
cmp
jo
push
fld
push
mov
aas
jno
into
and
and
cmp
frndint
pop
xor
bound
dec
jge
mov
mov
pop
popf
lds
mov
sub
repz
pop
sarb
pop
sbb
push
mov
and
pop
leave
dec
clc
push
push
addb
nop
sub
mov
fsubs
rcrl
dec
fistl
ret
dec
aad
mov
jl
jl
and
xorb
cmp
decl
pop
and
push
test
repnz
and
adc
xchg
dec
cmp
mov
cld
push
mov
dec
shlb
ljmp
sbb
in
push
aad
out
dec
xor
sbb
jp
lds
xchg
inc
xor
push
pop
mov
aaa
rol
test
jbe
sub
mov
sub
jmp
arpl
pop
adc
pop
or
in
jo
adc
xchg
xorl
jns
ss
mov
sbb
add
cmp
push
mov
imul
das
push
es
sub
push
sahf
mov
cmpsb
rcrb
or
sub
addr16
dec
sbb
stc
test
stc
xchg
inc
test
into
fdivr
pop
into
sti
cld
jne
ss
mov
sub
xchg
push
or
sub
test
popf
pop
movsb
pop
cmpsl
and
test
enter
sbb
mov
lods
jle
sbb
ja
push
mov
out
je
stc
mov
fdivr
pop
jb
negl
stos
sub
add
nop
mov
and
rclb
jbe
pop
out
push
popf
or
call
rcl
mov
mov
addl
or
cmp
cmp
adc
sbb
push
mov
adc
push
mov
iret
jg
pop
repz
psrad
std
mov
sbb
mov
in
fcomps
dec
dec
sti
inc
mov
call
cmp
or
sarl
loope
test
inc
test
cmp
test
or
xchg
adc
enter
clc
pop
orb
mov
in
push
scas
arpl
push
mov
leave
pop
push
dec
push
enter
jecxz
icebp
inc
lret
movsl
addr16
pusha
scas
inc
xor
sub
mov
xchg
enter
xor
xorb
fdivrs
jb
int
sbb
xorl
sbb
loop
pop
and
enter
sub
neg
in
outsb
ds
mov
aas
cmpsl
sub
mov
cmpsl
xor
mov
out
xlat
int3
xchg
mov
repnz
lcall
les
roll
lret
mov
jb
int
jbe
mulb
lahf
clc
sub
mov
icebp
jb
adc
shl
pop
enter
clc
sub
lea
test
fadds
cmp
adc
sub
sub
cmovnp
push
inc
lret
aas
xor
icebp
jmp
negb
loope
andb
cli
loope
jno
ret
into
xchg
sub
mov
sti
loopne
cmpsl
insl
out
adc
add
inc
lock
pop
popa
iret
inc
stc
addl
jecxz
call
subb
xor
xchg
js
sub
cld
roll
cld
testb
cmp
fsubrl
mov
adc
xchg
cmp
pop
xchg
xchg
scas
xchg
xchg
lock
push
adc
stos
inc
pusha
inc
movsl
add
loope
outsb
sahf
ja
test
mov
mov
adcl
xchg
outsl
xchg
call
cwtl
lock
adc
push
add
dec
cld
hlt
filds
cld
jecxz
cmp
in
push
daa
xchg
out
xchg
lock
sbbb
xorl
mov
test
xlat
inc
test
sbb
icebp
jecxz
ftst
shrl
pop
jb
roll
sub
cmp
test
leave
push
pushf
xchg
xchg
pop
xor
ljmp
push
sub
clc
js
pop
movsb
ljmp
pop
cmp
test
in
incb
ss
push
jl
push
dec
cmp
and
loope
mov
insb
xorb
mov
mov
sub
dec
mov
cmpb
inc
scas
sbb
push
push
cmp
and
mov
xchg
popf
sbb
nop
stc
push
and
cltd
hlt
mov
adc
pushf
jl
or
cmp
and
mov
add
setns
push
jbe
enter
or
or
cmp
punpcklwd
aam
lds
mov
jg
cmpsl
dec
lahf
call
sub
add
movsb
inc
xchg
jg
inc
sbbl
sti
rclb
sub
clc
inc
into
inc
mov
jp
jmp
pop
test
pop
scas
test
or
cmp
pop
push
inc
sbb
pop
lret
xchg
and
jecxz
aas
cmp
bnd
pop
icebp
mov
jl
cmpb
hlt
jle
int3
dec
xor
orl
inc
dec
mov
xor
or
mov
fs
lret
and
ret
sub
dec
jns
jmp
push
ret
sub
dec
addr16
xchg
sub
popf
iret
jp
lret
mov
or
pop
outsl
dec
push
pop
fcoms
sub
dec
xor
jmp
in
test
daa
notb
or
bound
dec
push
insb
sub
shrl
jo
dec
jp
shlb
mov
scas
jle
scas
sarb
jmp
arpl
into
jbe
loop
pop
sbb
push
mov
jae
lahf
pop
repz
adc
and
dec
pushf
mov
dec
push
out
pop
test
mov
aas
push
or
jg
inc
inc
cltd
dec
jae
out
out
in
pop
cli
cmp
pusha
outsl
mov
js
je
js
adc
xor
adc
and
jl
rorb
bound
sbb
jge
in
cld
aaa
negl
jno
inc
lock
clc
rclb
jl
int3
mov
ret
out
fucomp
std
mov
daa
mov
or
dec
inc
cmp
ds
dec
xchg
xchg
out
adc
hlt
mov
jge
jns
or
and
pop
mov
push
mov
push
js
jle
inc
movsl
cmovp
mov
dec
icebp
ss
xchg
mov
rol
clc
or
mov
or
cmp
ficomps
mov
movsl
xor
or
jg
enter
ret
fildll
push
sbb
pop
add
movsl
or
ret
dec
fyl2xp1
lock
daa
xor
jo
js
pushf
inc
test
push
ret
cs
or
leave
scas
js
in
jl
or
repz
pop
iret
and
mov
add
mov
lods
dec
out
dec
or
push
sbbl
loopne
inc
loopne
fadd
xchg
sub
lret
ret
inc
pop
push
and
cs
or
rcrb
xchg
jnp
xchg
or
shlb
fdivs
mov
jbe
dec
inc
dec
icebp
mov
cmpb
or
subl
and
lret
pop
sub
jp
aas
jge
ljmp
sbbl
frstor
loopne
adc
and
push
push
ret
and
shrl
cmpsl
add
aaa
sbb
mov
popf
dec
shrl
mov
jbe
dec
movsl
or
ror
push
push
mov
aas
mov
xrelease
shll
xor
sti
mov
insb
mov
jae
push
jo
cmp
lods
add
js
pop
xchg
loope
hlt
jmp
adc
sub
push
or
in
shll
imul
sbb
subb
js
or
mov
cmpl
inc
decb
lock
adc
or
push
pop
xchg
mov
push
cmpsb
push
aaa
in
fisubl
sub
sahf
hlt
cltd
scas
mov
hlt
adc
mov
mov
jb
scas
xchg
test
loop
call
xchg
jp
shl
mov
dec
ljmp
push
add
movsl
xchg
dec
iret
fmull
shrb
xor
lret
sub
nop
push
scas
sbbb
lods
incl
mov
les
or
ja
dec
arpl
push
dec
push
xor
nop
repnz
or
adc
inc
sub
ss
or
shl
fs
dec
icebp
jge
mov
xchg
stos
aas
mov
loope
jbe
rcll
arpl
sti
jae
xchg
int
into
xchg
mov
push
mov
imul
mov
cli
mov
stos
pop
jmp
sahf
mov
movsb
fstpl
cmp
ljmp
rol
jle
xchg
cmp
sub
pop
mov
jmp
add
test
jle
xor
icebp
xchg
sub
dec
es
lods
pop
adc
shlb
clc
cmp
mov
sarl
mov
adc
xchg
and
dec
data16
rorl
cmp
xchg
lods
fadds
and
in
add
jb
cmpl
mov
decb
cs
sub
stos
js
inc
fidivrl
aas
lret
pusha
je
divl
mov
xchg
cltd
cmpsb
and
sbb
dec
jle
add
or
sub
and
dec
jnp
cmp
push
cld
add
aaa
pop
iret
loope
push
shll
xor
jo
rcrl
in
rolb
xor
loop
leave
in
push
fs
pop
ret
daa
ljmp
cmpb
popa
leave
data16
pop
inc
push
sub
jecxz
leave
jl
mov
sub
pop
pushf
sub
mov
test
cmp
push
dec
jecxz
orb
adc
xchg
cmp
into
sub
imul
clc
inc
mov
sbb
jle
loop
fdivrs
jb
dec
popf
std
mov
ret
add
xor
mov
ficompl
js
dec
mov
add
in
push
test
or
xchg
movsl
mov
repnz
je
adc
sub
mov
repz
pop
jle
js
pmulhw
ret
xor
push
xchg
inc
sbb
pop
jp
shlb
pop
mov
ljmp
insl
jl
cmp
pop
sub
lock
cld
cmp
mov
mov
scas
loop
pop
xchg
jnp
jo
jns
ret
jbe
subl
mov
loopne
pop
ds
or
nop
cmp
jp
js
movsb
xchg
push
shl
nop
dec
scas
daa
les
in
xor
jg
pop
sbb
cmp
add
jbe
jp
jnp
test
into
cld
insl
cmpb
rorl
add
addb
outsb
add
add
xorl
add
pop
outsb
pop
xorl
add
fwait
popa
test
outsb
add
push
add
pop
outsb
pushl
add
dec
push
add
pop
rorb
insb
add
pop
out
in
rcrb
or
orb
dec
lds
push
push
add
pop
outsb
pushl
add
dec
push
add
pop
rorb
mov
inc
lock
sbb
ljmp
sub
pop
outsb
add
out
add
xor
jne
xchg
xchg
inc
pop
outsb
add
outsl
rorb
inc
in
cmp
sub
lea
xchg
push
push
xchg
jne
movsb
sbb
dec
sub
pop
rorb
call
rorb
popf
stos
ljmp
sahf
call
push
movsb
sbb
ljmp
callw
outsb
add
adc
ret
clc
add
pushl
in
adc
sub
push
shrb
add
push
call
fsubrs
push
xor
jne
xchg
xchg
inc
pop
outsb
add
outsl
rorb
scas
in
sbbb
or
sbb
call
shrb
hlt
mov
inc
add
xchg
shrb
xchg
xchg
dec
pop
outsb
add
xor
call
push
rorb
dec
adc
adc
mov
pop
leave
cltd
bound
push
rorb
inc
cmp
sub
mov
cmp
ret
push
mov
cmp
je
insl
push
or
cmp
mov
bound
shrb
add
notrack
shrb
cld
mov
xchg
mov
in
or
insl
jge
pop
sbb
mov
shlb
add
je
jle
incl
pop
test
sbbl
pushl
xchg
xchg
cmp
add
in
clc
fsubrs
mov
push
outsb
push
mov
repnz
pop
out
cld
or
mov
in
call
ljmp
xchg
call
shr
xor
subl
jne
movsb
std
cmp
outsb
or
das
xor
add
in
push
add
outsb
push
ljmp
xchg
call
push
scas
je
shr
inc
add
outsb
lea
or
cmp
outsb
or
das
inc
mov
in
sbb
ljmp
xchg
call
push
scas
je
shr
dec
add
outsb
mov
jmp
pop
ror
or
mov
bound
data16
sub
jbe,pn
js
jecxz
sub
add
cmpsl
enter
sbb
inc
mov
mov
bound
sbb
push
out
xorl
jbe
sbb
lea
sbb
mov
xchg
mov
insl
jne
push
mov
rcrb
jne
jecxz
fstps
add
cmpsl
popf
cmpsb
je
sub
rcrb
jmp
in
cld
rcrb
jne
cmp
sbb
mov
lods
add
cmp
je
jg
jl
jae
mov
push
movsb
mov
xchg
pop
outsb
jae
push
call
jae
pop
shr
outsb
add
sub
add
ficoms
call
dec
scas
jae
cs
stos
jmp
xchg
pop
outsb
sub
jle,pn
inc
pop
outsb
add
jae
shr
das
and
leave
mov
xchg
dec
lcall
add
add
outsb
jae
fistl
clc
jg
insb
inc
inc
into
out
mov
cmp
movsb
add
sbb
rcrb
cmp
movsb
jg
call
sub
mov
dec
sbb
cwtl
sub
or
arpl
or
sbb
popa
fs
pop
bound
sbb
inc
pop
cmp
das
sbb
sbb
insb
outsl
cmp
imul
sub
outsb
push
imul
jb,pt
das
or
pop
sub
das
cmp
pcmpgtb
xor
jb
add
xor
insb
insb
pop
outsb
add
pop
outsb
add
pop
outsb
add
pop
outsb
add
pop
outsb
add
pop
outsb
add
pop
mov
dec
lcall
iret
jg
adc
hlt
inc
fnstcw
daa
xor
cmp
fistpl
ret
scas
jae
cli
xorl
js
xchg
sbb
pop
and
jp
add
lds
cli
fisubrl
mov
mov
xor
push
iret
push
push
xchg
mov
xchg
jl
ret
mov
xchg
test
lock
or
xchg
stos
dec
je
scas
cli
lcall
and
lret
test
incl
xchg
rclb
lds
jg
sbb
add
daa
lods
sub
or
push
hlt
dec
or
sbb
sbb
push
inc
call
sub
sub
add
and
sbb
jne
fiadds
test
std
or
sub
ja
icebp
int3
into
pop
sbb
lahf
dec
shlb
insb
cmp
sub
sub
sbb
sbb
fidivl
aaa
fwait
cli
not
aad
jmp
mov
lods
jbe
jae
sbb
or
test
dec
jae
shll
in
sub
adcl
sbb
and
rcll
or
imul
cli
ja
not
ret
and
dec
into
lods
jg
lret
fstl
sub
add
cmpsl
xor
aaa
ret
cltd
sub
mov
adcl
mov
pop
and
mov
aas
jecxz
scas
loop
inc
push
push
dec
cmp
pop
fildl
call
sub
adc
add
push
lret
or
aas
test
ret
fidivrs
xchg
cli
fildl
fs
dec
pusha
xor
ffree
out
arpl
gs
add
xchg
lea
ficoml
shll
xor
xchg
sub
add
dec
adc
pop
push
push
movsb
sti
lcall
dec
xchg
add
add
pop
and
add
add
add
add
add
add
pop
aaa
inc
add
add
add
ss
add
add
add
add
fs
add
add
add
inc
add
add
add
inc
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
sbb
inc
add
add
add
xor
add
add
add
add
add
inc
add
add
add
inc
add
add
add
xor
js
add
mov
add
add
add
add
add
add
add
test
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
push
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
add
add
add
add
repnz
add
repnz
add
repnz
add
repnz
add
repnz
add
add
add
stc
inc
add
inc
inc
add
clc
inc
add
repnz
add
add
add
repnz
add
repz
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
repz
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
mov
add
add
test
inc
add
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
add
add
add
add
add
add
inc
add
add
add
clc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
jg
jg
jg
jg
stc
inc
add
incl
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
and
add
pusha
add
addb
push
add
add
add
add
nop
add
addb
add
test
add
rolb
addb
add
lock
addb
add
add
add
nop
add
orb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
push
add
rorb
add
add
rorb
add
imul
mov
and
add
add
add
pusha
xchg
add
rclb
add
movsl
add
addb
mov
add
add
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
or
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
call
call
sub
call
sub
push
call
and
and
call
and
and
call
push
sub
and
call
push
and
push
and
and
call
and
and
and
and
call
and
and
and
and
or
call
push
sub
and
and
and
or
call
push
and
and
push
and
and
and
or
call
and
and
and
sub
and
or
xor
call
and
and
sub
push
push
and
and
xor
xor
or
call
dec
push
and
and
sub
and
and
or
xor
xor
or
call
and
and
and
push
and
and
sub
xor
or
call
push
push
and
and
sub
add
and
and
xor
xor
sub
call
and
and
and
add
sub
push
and
sub
cs
or
call
push
push
and
push
push
and
and
push
and
or
sub
xor
or
call
and
and
and
and
push
and
sub
sub
xor
and
call
push
and
and
and
sub
and
sub
or
push
and
call
and
and
and
add
add
push
or
sub
sub
sub
or
and
call
push
and
and
add
add
and
sub
sub
sub
or
sub
push
call
and
and
add
add
add
push
or
pop
pop
es
sub
sub
and
and
call
push
and
and
sub
and
and
push
or
pop
and
pop
or
sub
push
and
push
push
and
sub
push
push
sub
and
add
sub
pop
sub
sub
add
and
add
push
call
push
and
and
push
dec
dec
sub
and
sub
add
add
add
pop
add
pop
or
and
sub
call
and
and
push
push
push
sub
and
dec
pop
or
add
add
add
add
add
or
and
call
and
and
and
and
pop
or
add
add
pop
add
add
add
or
and
sub
call
and
sub
add
and
xor
add
or
or
add
add
add
add
sub
push
and
push
call
and
and
add
xor
add
add
add
or
or
add
add
add
and
and
call
push
and
sub
sub
add
or
or
or
add
add
add
add
or
sub
push
and
call
and
and
pop
or
add
or
add
add
add
add
pop
add
add
sub
and
and
call
and
and
or
or
or
or
or
add
add
add
or
add
sub
push
call
push
and
add
or
or
or
or
or
or
add
add
or
sub
add
push
and
call
dec
push
xor
add
or
or
add
add
or
or
or
add
add
and
push
and
call
add
or
or
or
or
or
add
add
add
or
add
add
push
push
add
push
push
and
decl
add
or
or
or
or
add
add
add
add
or
add
and
push
and
decl
or
or
or
or
or
or
or
add
sub
and
and
push
decl
add
or
or
or
or
add
or
add
add
and
and
decl
or
add
or
or
add
or
and
add
add
and
add
and
decl
or
or
or
or
and
add
add
add
add
sub
decl
or
add
add
add
add
add
add
decl
or
cs
add
sub
add
add
sub
pushl
add
sub
and
call
and
add
call
sub
add
call
and
call
lcall
add
decl
incl
add
incb
incl
add
clc
add
incl
add
lock
incl
add
loopne
jg
incl
add
rolb
incl
add
add
ud0
add
incb
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jg
add
aas
add
addb
add
pop
add
addb
add
sldt
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
jmp
add
add
add
clc
add
add
add
clc
add
add
add
cld
add
add
add
incl
add
add
add
incl
add
jmp
add
pop
add
clc
add
pop
add
cld
add
aas
add
inc
add
add
push
add
add
clc
add
add
decb
incl
add
lcall
add
add
add
add
add
add
add
add
or
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
call
call
sub
call
sub
push
call
sub
push
push
call
sub
push
and
push
call
and
sub
push
or
call
sub
push
and
and
or
call
sub
push
and
and
push
xor
or
call
push
and
dec
sub
dec
sub
and
xor
or
call
sub
dec
and
sub
and
push
or
xor
or
call
and
dec
sub
and
sub
sub
or
call
and
sub
and
push
and
xor
xor
or
call
sub
dec
sub
and
add
sub
sub
call
dec
sub
push
sub
and
push
or
or
or
call
and
and
add
push
or
or
or
sub
push
push
and
and
add
add
pop
sub
or
or
call
push
sub
push
push
push
sub
or
add
sub
or
sub
sub
push
push
push
and
add
push
sub
or
add
add
add
or
push
push
push
and
and
and
add
add
add
add
or
dec
sub
push
call
and
and
dec
push
add
or
add
add
add
or
and
call
and
add
sub
or
add
add
add
and
push
call
and
or
or
or
add
add
add
or
push
push
call
and
or
add
add
add
add
or
and
sub
call
add
or
or
or
add
add
or
add
push
push
decl
add
or
or
or
add
or
add
add
and
decl
add
or
or
or
or
add
and
sub
decl
add
or
or
add
add
add
push
add
decl
or
or
and
add
add
sub
decl
or
and
add
push
push
call
add
push
call
and
call
push
jmp
inc
incl
jg
cld
add
clc
add
jmp
add
inc
add
incl
add
jg
add
aas
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
addb
inc
add
push
add
clc
add
incb
ud0
rcrb
push
jg
clc
incl
add
add
add
add
add
add
add
add
add
add
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
call
call
and
call
and
and
push
push
call
and
push
sub
jmp
push
dec
and
xor
or
jmp
push
and
push
or
push
push
and
push
push
add
or
and
add
add
or
and
push
add
add
or
and
or
add
or
call
push
or
or
or
add
push
decl
or
or
add
and
decl
or
add
add
push
push
call
add
call
push
incl
add
incl
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
sldt
lcall
add
sub
add
xor
add
pusha
add
add
add
add
enter
add
add
in
inc
jmp
xchg
call
add
add
int3
xchg
inc
ljmp
scas
fisubrl
lcall
nop
xchg
nop
nop
lock
jmp
ljmp
out
into
call
icebp
sar
stos
xlat
stos
dec
jmp
jmp
jecxz
add
add
fnsave
ljmp
out
into
ljmp
aad
call
repnz
lods
fsubrs
ljmp
lds
add
lds
pushl
fnsave
jmp
lock
call
icebp
sar
movsb
shll
mov
mov
shl
mov
les
xchg
xchg
lods
cltd
int3
cltd
inc
in
sar
fldt
mov
cmpsl
call
icebp
sar
cmpsl
aam
jmp
lock
test
jmp
mov
inc
out
call
rorl
add
aam
inc
in
sar
cmpsb
inc
out
ljmp
fnsave
jmp
icebp
sar
aam
aam
cmpsb
aam
dec
in
iret
pushl
jecxz
dec
ljmp
iret
in
iret
lcall
nop
jns
and
add
add
fisubrs
ljmp
lock
movsb
mov
in
ljmp
out
int
movsb
shll
shl
sar
lods
fisubrl
inc
in
pushl
out
xlat
ljmp
cmc
int3
pushl
stc
incl
fcos
incl
add
add
xchg
pushl
loopne
pushl
out
jmp
lock
scas
pushl
jmp
movsb
call
icebp
sar
icebp
ljmp
ljmp
mov
mov
int
int
test
repnz
mov
mov
icebp
jmp
stc
decl
add
add
int
mov
fldt
mov
cmpsb
dec
icebp
leave
jmp
sar
loopne
ljmp
lock
movsl
aam
jmp
in
iret
pushl
in
inc
out
ljmp
out
xlat
ljmp
cli
xlat
pushl
out
incl
enter
in
sub
incl
int
xchg
add
add
aam
mov
xlat
movsl
mov
inc
in
ret
shll
ljmp
in
inc
jmp
cmpsl
call
icebp
sar
aam
aam
stos
fsubrs
mov
jmp
repnz
mov
mov
idiv
xor
mov
incl
incl
sar
loopne
add
add
fildll
movsl
fsubs
jmp
jmp
mov
stos
fisubrl
jmp
out
pushl
fbstp
jmp
shll
pushl
loopne
dec
jmp
stos
fdiv
fdivr
stos
xlat
test
pushl
int3
repz
fwait
sar
es
vcvtsi2sdl
sar
push
incl
incb
add
add
call
lods
ljmp
out
mov
inc
lock
fldt
mov
aam
dec
icebp
leave
jmp
out
mov
fsubrs
call
out
sar
scas
fldt
inc
out
ljmp
out
sar
cmpsl
shll
inc
call
decl
stc
decl
pushl
xchg
leave
ljmp
mov
call
enter
clc
incl
incl
add
add
fsubs
pushl
movsb
mov
shll
pushl
jmp
lock
stos
mov
jmp
popf
lcall
out
mov
jmp
lock
lods
fsubrs
ljmp
iret
hlt
lcall
dec
mov
iret
cmp
int3
ljmp
pop
ljmp
in
lcall
fdivrp
incl
int
inc
cwtl
lret
cwtl
inc
hlt
sar
fisubrs
mov
aam
inc
icebp
ret
fsubs
mov
fsubs
jmp
jmp
pushl
shlb
cli
cli
jmp
fdivl
stos
stos
call
lock
jmp
out
aam
jmp
mov
dec
sar
jmp
push
cmpsl
sar
push
cmpsl
sar
dec
cmpsb
sar
dec
mov
leave
mov
lcall
add
add
aam
mov
in
jmp
out
mov
inc
out
sar
shr
jmp
icebp
lret
jmp
mov
out
out
repnz
pushl
cmpsb
call
in
sar
cmpsb
shll
ljmp
hlt
int3
ljmp
int
js
jecxz
arpl
aad
push
stos
aad
push
test
decl
sar
inc
popf
int
dec
xchg
aad
incl
enter
add
cltd
int3
cltd
inc
hlt
sar
fisubl
pushl
mov
jmp
jmp
mov
stos
fldcw
lcall
in
jmp
jmp
dec
out
lret
inc
jmp
dec
out
into
in
in
dec
jmp
fwait
call
lock
test
test
shr
sar
int3
in
mov
decl
sti
decl
mov
fcos
data16
lcall
xlat
lcall
aam
push
cmpsl
sar
pop
lahf
sar
inc
fdivr
jmp
jnp
xchg
leave
xchg
jmp
out
mov
ljmp
out
mov
inc
lock
jmp
jecxz
mov
int
call
cli
leave
out
leave
fdivr
fdivr
aad
aad
jmp
lret
stc
loop
fdivp
fdivrp
xchg
lret
xchg
call
in
sar
mov
mov
shr
movsl
mov
lcall
rcr
jle
fdivrp
jns
fdivr
jno
push
lods
aad
bound
dec
lock
mov
sahf
decl
add
add
repz
fldenv
pushl
fsubs
jmp
jmp
ljmp
mov
call
not
inc
out
fdivrp
fdivrp
jmp
jmp
ljmp
dec
jmp
inc
call
push
repnz
out
call
out
ret
decl
sar
ljmp
enter
loop
xchg
loopne
cmpb
pushl
je
fdivr
cmp
jmp
jmp
pushl
lds
xchg
leave
xchg
jmp
icebp
mov
ljmp
jmp
jmp
lock
rcrl
jmp
jmp
dec
repz
out
enter
in
in
out
out
jmp
in
jmp
sti
loope
int3
jmp
inc
out
call
icebp
aam
ljmp
call
mov
inc
fcomip
jmp
int
call
jecxz
mov
loope
cmpb
cmp
dec
repnz
fidivs
mov
les
fwait
into
fwait
inc
hlt
sar
mov
ljmp
fldt
lcall
out
ret
out
dec
icebp
leave
in
in
in
in
out
out
out
out
jmp
out
call
out
sar
out
dec
in
int
idiv
idiv
dec
in
mov
incl
sti
dec
out
mov
xlat
ljmp
iret
out
cltd
int3
in
xchg
loop
fwait
ret
loop
cmp
call
in
leave
inc
jecxz
mov
out
call
enter
add
add
mov
jmp
jecxz
pushl
int
dec
sti
iret
call
call
mov
hlt
lret
out
out
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
in
out
out
call
repz
inc
in
dec
jmp
out
ljmp
lret
fucomi
cli
inc
fsubrp
mov
fucomi
pushl
shr
jmp
lret
in
cmp
inc
out
aad
inc
loope
dec
ljmp
int3
ljmp
nop
nop
fwait
popf
into
popf
mov
mov
jmp
aad
call
call
dec
stc
lret
mov
test
fdivrp
fdivrp
out
out
fdivr
fdivr
mov
mov
lods
shrl
shl
fdecstp
fcos
jmp
jmp
jmp
jmp
out
out
push
push
fcomip
leave
jmp
sar
sti
repnz
lea
push
repz
call
in
inc
loope
mov
fucomp
mov
fsubr
inc
aad
aas
fdivr
call
call
ret
pushl
out
aad
lods
xlat
lods
dec
jmp
jmp
xchg
out
add
add
add
add
mov
lcall
jecxz
fdivr
fdivr
ret
mov
cli
into
loopne
loopne
fdivrp
fdivrp
cltd
cltd
call
shll
mov
in
jmp
cli
loop
jmp
jmp
jmp
jmp
out
out
cld
cli
std
push
fcmovbe
mov
jge
jle
and
in
sti
jmp
in
cmc
hlt
dec
out
inc
loop
inc
fucomip
mov
fucomip
cmp
mov
loope
mov
ljmp
xlat
repnz
ljmp
call
mov
add
add
add
mov
mov
call
mov
in
mov
call
call
fdivr
fdivr
loop
loop
out
incl
leave
lahf
ljmp
mov
mov
out
fdivr
fdivr
in
in
in
in
push
push
in
aam
ljmp
mov
sub
lock
jmp
inc
idiv
call
idiv
call
out
cmc
fsubr
cmc
call
call
lock
fucom
repnz
call
in
dec
out
ljmp
jmp
out
sar
mov
leave
xchg
incl
add
add
add
add
rcrb
dec
dec
pushl
ljmp
call
call
call
call
call
fdivrp
fdivrp
aam
aam
xchg
nop
jmp
aad
pushl
jmp
jmp
in
jmp
hlt
push
push
call
mov
xchg
incl
fcos
dec
idiv
pushl
hlt
dec
idiv
call
clc
push
clc
cld
push
repz
loope
cmc
fsubrp
cmc
push
out
idiv
cmp
pushl
in
pushl
out
sar
test
test
aad
aad
lods
fldcw
movsb
shlb
add
add
cltd
int3
cltd
call
call
jmp
jmp
inc
cmc
sar
in
pushl
icebp
sar
call
call
call
call
call
fdivr
fdivr
loop
loop
lret
icebp
lret
jmp
into
mov
dec
in
leave
jmp
jmp
in
in
push
push
in
mov
lea
jmp
jmp
jmp
ljmp
icebp
inc
hlt
dec
idiv
push
std
sti
cli
cld
push
cmc
stc
push
cli
incl
call
loope
call
ljmp
xlat
lock
jmp
out
iret
mov
nop
incl
add
add
add
add
xchg
mov
aam
aam
mov
out
pushl
test
in
in
in
in
loopne
loopne
loop
loop
jmp
jmp
jmp
ljmp
cli
fdivrp
movsl
xchg
mov
and
stc
call
incl
lcall
in
ljmp
repz
inc
repz
dec
hlt
fsqrt
sti
incl
ljmp
call
lods
call
lock
cmpsb
aam
call
out
sar
mov
mov
ret
out
jmp
add
xchg
xchg
inc
rorb
enter
fdivr
fdivr
lret
std
lret
mov
out
inc
out
sar
sar
fdivr
fdivr
fdivrp
fdivrp
loope
loop
loop
loop
out
out
clc
push
in
call
test
and
fcos
scas
mov
loopne
pushl
incl
ljmp
movsb
in
ljmp
lock
inc
hlt
dec
idiv
call
clc
std
call
call
fidivs
jmp
lock
ljmp
in
lret
in
call
add
add
ret
mov
lods
fildll
mov
jmp
dec
test
fdivrp
fdivrp
fdivrp
fdivrp
out
in
idiv
out
jmp
shlb
pushl
out
dec
lcall
jmp
pushl
incl
ljmp
lahf
out
ljmp
repnz
mov
cmc
call
idiv
jmp
cli
decl
lcall
ljmp
xlat
lock
jmp
in
sar
mov
mov
mov
shlb
add
enter
out
mov
call
call
inc
icebp
ret
jmp
inc
repz
fdivr
fdivr
out
in
hlt
jmp
call
cltd
decl
jmp
pushl
pushl
fdivr
call
jmp
ljmp
jp
incl
jmp
jmp
out
pushl
repz
dec
idiv
push
std
stc
lcall
fstpt
call
out
aam
cmpsl
aam
call
lock
scas
fsubrs
inc
call
xchg
incl
add
add
mov
lahf
rcrl
jmp
jmp
call
std
aam
dec
cld
enter
sar
mov
lods
ljmp
jmp
incl
lcall
sar
incl
decl
lcall
jmp
ljmp
jp
incl
jmp
jmp
out
pushl
stc
fdivr
call
ljmp
in
fldlg2
sar
pushf
into
pushf
call
out
aad
test
ljmp
mov
mov
mov
add
add
ret
scas
loope
fdivrp
out
jmp
jmp
lahf
call
call
sar
decl
sar
ljmp
incl
call
lcall
jmp
pushl
jnp
incl
jmp
lcall
in
call
idiv
pushl
sar
decl
test
shr
leave
jmp
int3
xchg
dec
in
into
pushl
in
dec
jmp
call
add
add
rclb
lcall
mov
inc
pushl
leave
incl
int
lcall
aad
cmp
incl
decl
call
jmp
ljmp
pushl
incl
call
dec
cmc
decl
jmp
repnz
mov
mov
mov
cld
cld
cld
lcall
in
mov
fdivl
incl
add
add
pushf
xchg
cmp
out
call
jg
incl
ret
incl
enter
into
call
sar
jmp
sar
ljmp
aad
cmp
incl
decl
lcall
jmp
ljmp
pushl
jle
mov
loop
jmp
clc
cld
sti
cld
out
stc
out
pushl
fidivl
ljmp
fnsave
xchg
lret
add
incl
incl
incl
sar
add
incl
int3
decl
lcall
sar
jmp
cmp
incl
decl
lcall
lcall
ljmp
ljmp
incl
lock
push
push
out
hlt
call
push
cld
repnz
cld
cld
inc
loope
ljmp
lock
mov
shll
incl
lret
incl
add
decl
dec
idiv
ljmp
incl
incl
incl
int
decl
iret
lcall
sar
jmp
cmp
incl
incl
lcall
lcall
ljmp
jmp
out
push
in
cmc
ljmp
in
int3
call
call
in
sar
cmpsb
aam
inc
call
jmp
stc
loope
xchg
leave
xchg
incl
add
call
pushl
aad
incl
add
call
lcall
sar
ljmp
aad
pushl
pushl
fdivr
call
decl
aad
jmp
push
cli
std
stc
out
imul
fsubr
fdivr
xlat
jmp
dec
out
mov
loope
jmp
jmp
mul
pushl
ljmp
popf
into
popf
incl
jmp
xor
pushl
incl
int
incl
enter
sar
lcall
lcall
sar
decl
js
ljmp
clc
repnz
push
push
stc
push
sti
sti
push
cli
cmc
call
jmp
inc
ffreep
mov
shlb
inc
call
movsb
decl
enter
enter
mov
fdivrp
incl
lret
add
incl
jmp
pushl
repnz
jmp
push
std
push
clc
push
push
push
stc
stc
sti
sti
fucomp
mov
repnz
jmp
jmp
mov
lret
pop
incb
add
out
lcall
loop
lcall
ljmp
out
clc
sar
in
cmc
fdivr
clc
push
sti
sti
clc
push
stc
stc
sti
sti
fucomi
cmpsl
aad
decl
enter
fsubrl
decl
aas
mov
jecxz
test
push
push
in
dec
ljmp
in
cli
in
std
std
sti
sti
cli
cli
std
std
clc
std
clc
inc
jecxz
call
les
add
jmp
stos
shll
lret
xchg
fcomi
std
std
fdivp
fdivrp
in
fdiv
fdivr
stc
stc
jmp
repnz
scas
fsubrs
decl
add
add
roll
lock
lock
clc
clc
call
jmp
dec
call
repz
std
std
dec
out
lcall
lds
add
lds
push
cld
lock
mov
mov
mov
mov
lds
add
sahf
jmp
hlt
loopne
lods
aad
decl
add
add
lds
in
add
add
lcall
add
incl
incl
add
cld
add
incl
add
clc
add
incl
add
lock
incl
add
rolb
incl
add
addb
incl
add
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
loopne
add
aas
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jg
add
aas
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
clc
add
add
add
incb
add
add
add
incl
add
jmp
add
pop
add
push
add
sldt
cld
add
aas
add
incl
jg
add
jmp
add
add
clc
add
add
decb
incl
add
lcall
incl
add
add
add
add
add
add
add
and
cltd
int3
cltd
lcall
add
add
iret
sahf
mov
loopne
lcall
enter
add
add
aad
mov
in
mov
loop
jmp
enter
add
add
test
mov
loop
mov
in
inc
jecxz
ljmp
xchg
lods
cwtl
lret
cwtl
ljmp
in
mov
loop
mov
loop
mov
jecxz
inc
in
pushl
lret
mov
xchg
enter
iret
popf
pushl
in
pushl
loop
mov
loope
mov
loop
mov
jecxz
inc
in
dec
loopne
incl
sar
incb
add
add
mov
pushl
loop
pushl
loop
mov
loop
mov
loop
mov
loop
inc
in
call
out
decl
idiv
pop
aam
incl
add
add
fldenv
pushl
loop
pushl
loop
pushl
loop
mov
loop
mov
loop
mov
jecxz
call
out
decl
dec
mov
incl
sar
inc
lcall
pushl
in
pushl
loop
pushl
mov
mov
loop
mov
loop
mov
loop
mov
jecxz
call
out
decl
lods
loop
sub
int3
cmp
clc
incl
aam
lahf
xchg
leave
xchg
sti
test
out
pushl
loop
pushl
loop
pushl
loop
pushl
loope
pushl
fidivs
mov
loop
inc
in
dec
in
decl
mov
int
aaa
xchg
incl
incl
out
incl
jmp
xchg
lret
xchg
std
test
out
ljmp
loop
pushl
loop
pushl
loop
pushl
fidivs
jmp
cli
loop
mov
mov
mov
loop
inc
jecxz
call
out
incl
mov
sar
push
cmpsl
sar
inc
pushf
int
inc
xchg
decl
in
incl
sar
mov
add
add
fsubrl
ljmp
loop
pushl
loop
pushl
fbstp
call
hlt
aam
shl
sar
in
in
in
in
mov
fidivrs
dec
in
incl
enter
mov
jmp
fdivr
pop
lods
aad
push
mov
jecxz
imul
ljmp
add
add
fsubrl
pushl
jecxz
pushl
loope
ljmp
in
call
not
call
not
leave
in
leave
fcomi
repz
inc
out
mov
jecxz
jl
mov
decl
fdivrp
jb
lods
aad
push
mov
decl
sahf
call
add
add
fsubrl
ljmp
loop
pushl
call
clc
sar
sar
sar
out
out
jmp
jmp
in
in
int3
in
int3
call
lock
idiv
idiv
aam
sar
ret
decl
int
call
mov
in
decl
out
ljmp
enter
add
add
fsubrl
ljmp
fildll
dec
repz
int
sar
sar
call
jmp
in
in
ljmp
dec
jmp
push
push
push
clc
jae
mov
lcall
ljmp
out
fwait
loop
ja
icebp
incl
in
inc
in
pushl
xchg
hlt
xchg
lret
xchg
sti
test
test
mov
mov
lods
fildll
lret
inc
repz
call
sti
sar
in
in
int
int
shl
dec
in
int3
jmp
std
jecxz
in
in
push
push
fdiv
shl
iret
push
fdivrp
outsl
lods
mov
call
in
mov
fucomi
pushl
shl
incl
in
inc
jecxz
inc
in
pushl
int
incl
add
add
pushl
stc
enter
sar
std
sar
loop
loop
ret
call
shlb
dec
jmp
jmp
jmp
lock
std
jmp
sar
ja
mov
call
cld
jmp
lock
fld1
repz
in
dec
fsubrp
lcall
xlat
dec
in
inc
loop
mov
in
pushl
xchg
call
inc
test
mov
call
fdivr
fdivr
mov
mov
mov
movsb
pushl
into
out
in
cld
push
call
cmpsb
mov
jge
stc
dec
std
inc
cmc
call
idiv
jmp
cld
jmp
jmp
ljmp
call
in
inc
loop
mov
in
pushl
lret
xchg
std
xchg
lret
mov
mov
fdivr
fdivr
shl
pushl
test
aam
aam
mov
fnsave
jmp
push
call
sarl
decl
idiv
jmp
lock
inc
cmc
call
cli
push
std
sti
sti
inc
out
jns
aad
into
jecxz
inc
loop
mov
in
pushl
xchg
cld
add
add
xchg
xchg
shlb
stc
dec
dec
mov
out
sar
cld
sar
in
jecxz
in
in
in
ljmp
shlb
cwtl
repnz
decl
out
call
in
pushl
hlt
call
stc
js
aad
into
loop
inc
loop
mov
in
pushl
lret
xchg
cld
xchg
lds
dec
dec
dec
cld
lret
inc
out
sar
test
fdivr
out
in
repnz
mov
rcr
cltd
hlt
jmp
jmp
jge
decl
jmp
ljmp
icebp
dec
cmc
push
std
call
stc
ljmp
sar
lret
loope
mov
loop
inc
in
pushl
lret
xchg
cld
xchg
les
mov
call
dec
clc
int3
call
std
int
loop
decl
shr
decl
fdivr
decl
lcall
pushl
incl
jmp
ljmp
hlt
call
idiv
call
stc
mov
out
mov
loop
inc
in
pushl
xchg
cld
nop
ret
shlb
lret
call
fbstp
decl
ljmp
sub
incl
call
jmp
pushl
incl
jmp
ljmp
loop
pushl
sar
cld
out
dec
jmp
mov
shl
pushl
lret
xchg
cld
cwtl
rorl
xchg
in
cmp
incl
leave
call
sar
ljmp
aam
cmp
decl
lcall
ljmp
pushl
call
call
cld
push
std
jmp
hlt
in
mov
mul
call
out
aad
mov
fdivl
add
lcall
pushf
out
decl
int
incl
incl
int3
lcall
sar
ljmp
aad
cmp
decl
call
pushl
ljmp
pushl
hlt
std
icebp
sti
cli
jmp
out
jecxz
sti
cli
push
std
repz
mov
icebp
fdivr
loop
loop
mov
mov
xchg
lret
xchg
cld
add
call
adc
in
lcall
incl
int3
incl
int3
lcall
ljmp
pushl
lcall
lcall
call
push
push
jmp
repnz
shr
sar
cmc
push
dec
jmp
xlat
dec
ljmp
add
pushl
fdivr
pushl
pushl
incl
int
decl
sar
incl
lcall
mov
push
clc
cld
cli
std
cli
fucomp
mov
fidivrs
fdivp
fdivrp
mov
lret
xchg
incb
int3
call
push
fdivrp
jmp
incl
ljmp
inc
lock
sti
sti
fdivr
sti
push
sti
stc
cli
stc
stc
std
stc
cli
cli
inc
in
call
enter
incl
adc
shl
jmp
clc
aam
out
loop
fcos
out
sti
out
push
stc
lock
incl
add
add
loope
jmp
stc
in
out
out
call
jmp
cwtl
decl
add
add
fwait
call
out
aam
in
in
mov
mov
incl
add
add
iret
sahf
call
add
add
out
incl
incb
jg
cld
add
push
add
jmp
add
inc
add
incl
add
jg
add
aas
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
addb
jmp
add
clc
add
cld
add
inc
pop
jmp
jg
clc
incl
add
add
add
add
add
add
add
add
add
add
aad
incl
add
add
aad
dec
out
int3
call
in
sar
mov
mov
sbb
mov
out
jmp
jmp
mov
jmp
call
lock
jmp
addb
mov
in
mov
pushl
lret
mov
jmp
call
lock
incl
mov
incl
sahf
mov
lock
pushl
lret
ret
call
loope
jmp
jmp
incl
cltd
and
dec
mov
jmp
ljmp
lret
out
in
in
call
lret
mov
addb
cmp
jmp
add
add
add
add
loop
call
stc
sar
icebp
push
push
push
out
out
push
jmp
call
addb
push
mov
out
aam
sar
lahf
iret
popf
incl
add
add
lret
sar
sar
in
out
decl
xchg
stc
stc
incl
lock
std
dec
cld
js
out
int3
ljmp
lahf
rcrb
call
call
call
call
jmp
jmp
dec
icebp
lret
jmp
stc
incl
in
pushl
js
out
out
in
int3
ljmp
add
add
xchg
lret
xchg
lret
int
out
in
stc
incl
out
jmp
decl
dec
cld
js
out
shr
sar
out
in
pushf
iret
pushf
out
xchg
lret
xchg
lret
addb
call
sar
decl
lcall
jmp
call
std
idiv
xchg
lret
shr
sar
pushf
iret
pushf
incl
jmp
fdivr
jmp
lret
incl
loopne
std
push
std
idiv
fucompp
lret
push
hlt
call
rcrl
add
call
pusha
fsubr
std
call
lret
jae
mov
xchg
lret
in
idiv
idiv
cwtl
lret
cwtl
incl
add
add
lret
stc
incl
add
jg
add
aas
add
orb
add
pop
add
add
add
add
add
addb
add
add
add
add
add
add
add
pop
add
dec
add
incl
add
add
add
add
xor
add
add
add
push
add
add
and
add
add
or
rorb
add
add
adc
add
add
add
add
xor
add
add
add
and
and
add
add
and
rclb
add
add
add
add
add
add
add
